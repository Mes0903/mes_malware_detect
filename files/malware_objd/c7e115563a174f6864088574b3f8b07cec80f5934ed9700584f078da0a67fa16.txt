
c7e115563a174f6864088574b3f8b07cec80f5934ed9700584f078da0a67fa16.exe:     file format pei-i386


Disassembly of section .text:

64001000 <.text>:
64001000:	push   esi
64001001:	mov    esi,DWORD PTR [esp+0x8]
64001005:	test   esi,esi
64001007:	je     0x64001036
64001009:	mov    eax,DWORD PTR [esp+0xc]
6400100d:	test   eax,eax
6400100f:	je     0x64001036
64001011:	mov    ecx,DWORD PTR [esp+0x10]
64001015:	mov    edx,DWORD PTR [esp+0x14]
64001019:	push   ecx
6400101a:	push   esi
6400101b:	push   0xffffffff
6400101d:	push   eax
6400101e:	push   0x0
64001020:	push   edx
64001021:	mov    WORD PTR [esi],0x0
64001026:	call   DWORD PTR ds:0x6402c02c
6400102c:	neg    eax
6400102e:	sbb    eax,eax
64001030:	and    eax,esi
64001032:	pop    esi
64001033:	ret    0x10
64001036:	xor    eax,eax
64001038:	pop    esi
64001039:	ret    0x10
6400103c:	int3   
6400103d:	int3   
6400103e:	int3   
6400103f:	int3   
64001040:	push   esi
64001041:	mov    esi,DWORD PTR [esp+0x8]
64001045:	test   esi,esi
64001047:	je     0x64001078
64001049:	mov    eax,DWORD PTR [esp+0xc]
6400104d:	test   eax,eax
6400104f:	je     0x64001078
64001051:	mov    ecx,DWORD PTR [esp+0x10]
64001055:	mov    edx,DWORD PTR [esp+0x14]
64001059:	push   0x0
6400105b:	push   0x0
6400105d:	push   ecx
6400105e:	push   esi
6400105f:	push   0xffffffff
64001061:	push   eax
64001062:	push   0x0
64001064:	push   edx
64001065:	mov    BYTE PTR [esi],0x0
64001068:	call   DWORD PTR ds:0x6402c014
6400106e:	neg    eax
64001070:	sbb    eax,eax
64001072:	and    eax,esi
64001074:	pop    esi
64001075:	ret    0x10
64001078:	xor    eax,eax
6400107a:	pop    esi
6400107b:	ret    0x10
6400107e:	int3   
6400107f:	int3   
64001080:	mov    eax,DWORD PTR [esp+0x4]
64001084:	push   0x6404401c
64001089:	lea    ecx,[esp+0x8]
6400108d:	push   ecx
6400108e:	mov    DWORD PTR [esp+0xc],eax
64001092:	call   0x64013812
64001097:	int3   
64001098:	int3   
64001099:	int3   
6400109a:	int3   
6400109b:	int3   
6400109c:	int3   
6400109d:	int3   
6400109e:	int3   
6400109f:	int3   
640010a0:	mov    eax,DWORD PTR [esp+0x4]
640010a4:	cmp    eax,0x50
640010a7:	ja     0x640010cb
640010a9:	movzx  ecx,BYTE PTR [eax+0x640010e8]
640010b0:	jmp    DWORD PTR [ecx*4+0x640010d8]
640010b7:	push   0x8007000e
640010bc:	call   0x64001080
640010c1:	push   0x80070057
640010c6:	call   0x64001080
640010cb:	push   0x80004005
640010d0:	call   0x64001080
640010d5:	ret    
640010d6:	mov    edi,edi
640010d8:	aad    0x10
640010da:	add    BYTE PTR [edi+esi*4+0x10],ah
640010de:	add    BYTE PTR [ecx+eax*8+0x10],ah
640010e2:	add    BYTE PTR [ebx+ecx*8+0x10],ah
640010e6:	add    BYTE PTR [eax+eax*1+0x3],ah
640010ea:	add    eax,DWORD PTR [ebx]
640010ec:	add    eax,DWORD PTR [ebx]
640010ee:	add    eax,DWORD PTR [ebx]
640010f0:	add    eax,DWORD PTR [ebx]
640010f2:	add    eax,DWORD PTR [ebx]
640010f4:	add    DWORD PTR [ebx],eax
640010f6:	add    eax,DWORD PTR [ebx]
640010f8:	add    eax,DWORD PTR [ebx]
640010fa:	add    eax,DWORD PTR [ebx]
640010fc:	add    eax,DWORD PTR [ebx]
640010fe:	add    al,BYTE PTR [ebx]
64001100:	add    eax,DWORD PTR [ebx]
64001102:	add    eax,DWORD PTR [ebx]
64001104:	add    eax,DWORD PTR [ebx]
64001106:	add    eax,DWORD PTR [ebx]
64001108:	add    eax,DWORD PTR [ebx]
6400110a:	add    al,BYTE PTR [ebx]
6400110c:	add    eax,DWORD PTR [ebx]
6400110e:	add    eax,DWORD PTR [ebx]
64001110:	add    eax,DWORD PTR [ebx]
64001112:	add    eax,DWORD PTR [ebx]
64001114:	add    eax,DWORD PTR [ebx]
64001116:	add    eax,DWORD PTR [ebx]
64001118:	add    eax,DWORD PTR [ebx]
6400111a:	add    eax,DWORD PTR [ebx]
6400111c:	add    eax,DWORD PTR [ebx]
6400111e:	add    eax,DWORD PTR [ebx]
64001120:	add    eax,DWORD PTR [ebx]
64001122:	add    eax,DWORD PTR [ebx]
64001124:	add    eax,DWORD PTR [ebx]
64001126:	add    eax,DWORD PTR [ebx]
64001128:	add    eax,DWORD PTR [ebx]
6400112a:	add    eax,DWORD PTR [ebx]
6400112c:	add    eax,DWORD PTR [ebx]
6400112e:	add    eax,DWORD PTR [ebx]
64001130:	add    eax,DWORD PTR [ebx]
64001132:	add    eax,DWORD PTR [ebx]
64001134:	add    eax,DWORD PTR [ebx]
64001136:	add    eax,DWORD PTR [ebx]
64001138:	add    ah,cl
6400113a:	int3   
6400113b:	int3   
6400113c:	int3   
6400113d:	int3   
6400113e:	int3   
6400113f:	int3   
64001140:	push   ebx
64001141:	mov    ebx,DWORD PTR [esp+0x8]
64001145:	push   edi
64001146:	mov    edi,DWORD PTR [esp+0x10]
6400114a:	push   edi
6400114b:	push   ebx
6400114c:	call   DWORD PTR ds:0x6402c020
64001152:	test   eax,eax
64001154:	jne    0x64001159
64001156:	pop    edi
64001157:	pop    ebx
64001158:	ret    
64001159:	push   esi
6400115a:	push   eax
6400115b:	call   DWORD PTR ds:0x6402c01c
64001161:	mov    esi,eax
64001163:	test   esi,esi
64001165:	je     0x64001194
64001167:	push   edi
64001168:	push   ebx
64001169:	call   DWORD PTR ds:0x6402c018
6400116f:	mov    ecx,DWORD PTR [esp+0x18]
64001173:	add    eax,esi
64001175:	and    ecx,0xf
64001178:	jbe    0x64001190
6400117a:	lea    ebx,[ebx+0x0]
64001180:	cmp    esi,eax
64001182:	jae    0x64001194
64001184:	sub    ecx,0x1
64001187:	movzx  edx,WORD PTR [esi]
6400118a:	lea    esi,[esi+edx*2+0x2]
6400118e:	jne    0x64001180
64001190:	cmp    esi,eax
64001192:	jb     0x6400119a
64001194:	pop    esi
64001195:	pop    edi
64001196:	xor    eax,eax
64001198:	pop    ebx
64001199:	ret    
6400119a:	mov    ax,WORD PTR [esi]
6400119d:	neg    ax
640011a0:	sbb    eax,eax
640011a2:	and    eax,esi
640011a4:	pop    esi
640011a5:	pop    edi
640011a6:	pop    ebx
640011a7:	ret    
640011a8:	int3   
640011a9:	int3   
640011aa:	int3   
640011ab:	int3   
640011ac:	int3   
640011ad:	int3   
640011ae:	int3   
640011af:	int3   
640011b0:	push   ebx
640011b1:	push   ebp
640011b2:	push   esi
640011b3:	push   edi
640011b4:	xor    edi,edi
640011b6:	push   edi
640011b7:	mov    ecx,0x64053950
640011bc:	call   0x64013296
640011c1:	mov    esi,eax
640011c3:	test   esi,esi
640011c5:	lea    ebp,[edi+0x1]
640011c8:	je     0x64001217
640011ca:	mov    ebx,DWORD PTR [esp+0x14]
640011ce:	mov    edi,edi
640011d0:	test   edi,edi
640011d2:	jne    0x64001217
640011d4:	mov    eax,DWORD PTR [esp+0x18]
640011d8:	mov    ecx,ebx
640011da:	shr    ecx,0x4
640011dd:	add    ecx,0x1
640011e0:	push   eax
640011e1:	movzx  edx,cx
640011e4:	push   edx
640011e5:	push   0x6
640011e7:	push   esi
640011e8:	call   DWORD PTR ds:0x6402c028
640011ee:	test   eax,eax
640011f0:	je     0x64001203
640011f2:	push   ebx
640011f3:	push   eax
640011f4:	push   esi
640011f5:	call   0x64001140
640011fa:	mov    edi,eax
640011fc:	add    esp,0xc
640011ff:	test   edi,edi
64001201:	jne    0x6400121e
64001203:	push   ebp
64001204:	mov    ecx,0x64053950
64001209:	call   0x64013296
6400120e:	mov    esi,eax
64001210:	add    ebp,0x1
64001213:	test   esi,esi
64001215:	jne    0x640011d0
64001217:	pop    edi
64001218:	pop    esi
64001219:	pop    ebp
6400121a:	xor    eax,eax
6400121c:	pop    ebx
6400121d:	ret    
6400121e:	pop    edi
6400121f:	mov    eax,esi
64001221:	pop    esi
64001222:	pop    ebp
64001223:	pop    ebx
64001224:	ret    
64001225:	int3   
64001226:	int3   
64001227:	int3   
64001228:	int3   
64001229:	int3   
6400122a:	int3   
6400122b:	int3   
6400122c:	int3   
6400122d:	int3   
6400122e:	int3   
6400122f:	int3   
64001230:	mov    eax,DWORD PTR [esp+0x8]
64001234:	ret    
64001235:	int3   
64001236:	int3   
64001237:	int3   
64001238:	int3   
64001239:	int3   
6400123a:	int3   
6400123b:	int3   
6400123c:	int3   
6400123d:	int3   
6400123e:	int3   
6400123f:	int3   
64001240:	ret    
64001241:	int3   
64001242:	int3   
64001243:	int3   
64001244:	int3   
64001245:	int3   
64001246:	int3   
64001247:	int3   
64001248:	int3   
64001249:	int3   
6400124a:	int3   
6400124b:	int3   
6400124c:	int3   
6400124d:	int3   
6400124e:	int3   
6400124f:	int3   
64001250:	push   esi
64001251:	lea    eax,[esp+0x8]
64001255:	push   eax
64001256:	mov    esi,ecx
64001258:	call   0x640135fa
6400125d:	mov    DWORD PTR [esi],0x6402c2ac
64001263:	mov    eax,esi
64001265:	pop    esi
64001266:	ret    0x4
64001269:	int3   
6400126a:	int3   
6400126b:	int3   
6400126c:	int3   
6400126d:	int3   
6400126e:	int3   
6400126f:	int3   
64001270:	mov    DWORD PTR [ecx],0x6402c2ac
64001276:	jmp    0x640136b8
6400127b:	int3   
6400127c:	int3   
6400127d:	int3   
6400127e:	int3   
6400127f:	int3   
64001280:	push   esi
64001281:	mov    esi,ecx
64001283:	mov    DWORD PTR [esi],0x6402c2ac
64001289:	call   0x640136b8
6400128e:	test   BYTE PTR [esp+0x8],0x1
64001293:	je     0x6400129e
64001295:	push   esi
64001296:	call   0x640135e4
6400129b:	add    esp,0x4
6400129e:	mov    eax,esi
640012a0:	pop    esi
640012a1:	ret    0x4
640012a4:	int3   
640012a5:	int3   
640012a6:	int3   
640012a7:	int3   
640012a8:	int3   
640012a9:	int3   
640012aa:	int3   
640012ab:	int3   
640012ac:	int3   
640012ad:	int3   
640012ae:	int3   
640012af:	int3   
640012b0:	mov    eax,DWORD PTR [esp+0xc]
640012b4:	cmp    eax,0x4
640012b7:	mov    ecx,DWORD PTR [esp+0x8]
640012bb:	mov    edx,DWORD PTR [esp+0x4]
640012bf:	push   esi
640012c0:	push   edi
640012c1:	jb     0x640012d7
640012c3:	mov    esi,DWORD PTR [edx]
640012c5:	cmp    esi,DWORD PTR [ecx]
640012c7:	jne    0x640012db
640012c9:	sub    eax,0x4
640012cc:	add    ecx,0x4
640012cf:	add    edx,0x4
640012d2:	cmp    eax,0x4
640012d5:	jae    0x640012c3
640012d7:	test   eax,eax
640012d9:	je     0x64001339
640012db:	movzx  esi,BYTE PTR [edx]
640012de:	movzx  edi,BYTE PTR [ecx]
640012e1:	sub    esi,edi
640012e3:	jne    0x6400132a
640012e5:	sub    eax,0x1
640012e8:	add    ecx,0x1
640012eb:	add    edx,0x1
640012ee:	test   eax,eax
640012f0:	je     0x64001339
640012f2:	movzx  esi,BYTE PTR [edx]
640012f5:	movzx  edi,BYTE PTR [ecx]
640012f8:	sub    esi,edi
640012fa:	jne    0x6400132a
640012fc:	sub    eax,0x1
640012ff:	add    ecx,0x1
64001302:	add    edx,0x1
64001305:	test   eax,eax
64001307:	je     0x64001339
64001309:	movzx  esi,BYTE PTR [edx]
6400130c:	movzx  edi,BYTE PTR [ecx]
6400130f:	sub    esi,edi
64001311:	jne    0x6400132a
64001313:	sub    eax,0x1
64001316:	add    ecx,0x1
64001319:	add    edx,0x1
6400131c:	test   eax,eax
6400131e:	je     0x64001339
64001320:	movzx  esi,BYTE PTR [edx]
64001323:	movzx  eax,BYTE PTR [ecx]
64001326:	sub    esi,eax
64001328:	je     0x64001339
6400132a:	test   esi,esi
6400132c:	mov    eax,0x1
64001331:	jg     0x6400133b
64001333:	pop    edi
64001334:	or     eax,0xffffffff
64001337:	pop    esi
64001338:	ret    
64001339:	xor    eax,eax
6400133b:	pop    edi
6400133c:	pop    esi
6400133d:	ret    
6400133e:	int3   
6400133f:	int3   
64001340:	mov    eax,ecx
64001342:	mov    DWORD PTR [eax],0x0
64001348:	ret    
64001349:	int3   
6400134a:	int3   
6400134b:	int3   
6400134c:	int3   
6400134d:	int3   
6400134e:	int3   
6400134f:	int3   
64001350:	push   0xffffffff
64001352:	push   0x640230c8
64001357:	mov    eax,fs:0x0
6400135d:	push   eax
6400135e:	push   ecx
6400135f:	push   esi
64001360:	mov    eax,ds:0x640521ac
64001365:	xor    eax,esp
64001367:	push   eax
64001368:	lea    eax,[esp+0xc]
6400136c:	mov    fs:0x0,eax
64001372:	mov    esi,ecx
64001374:	mov    DWORD PTR [esp+0x8],esi
64001378:	call   0x640135e9
6400137d:	xor    eax,eax
6400137f:	mov    DWORD PTR [esp+0x14],eax
64001383:	lea    ecx,[esi+0xc]
64001386:	mov    DWORD PTR [esi],0x6402c2dc
6400138c:	push   0xffffffff
6400138e:	mov    DWORD PTR [ecx+0x14],eax
64001391:	mov    DWORD PTR [ecx+0x18],0xf
64001398:	push   eax
64001399:	mov    BYTE PTR [ecx+0x4],al
6400139c:	mov    eax,DWORD PTR [esp+0x24]
640013a0:	push   eax
640013a1:	call   0x64003370
640013a6:	mov    eax,esi
640013a8:	mov    ecx,DWORD PTR [esp+0xc]
640013ac:	mov    DWORD PTR fs:0x0,ecx
640013b3:	pop    ecx
640013b4:	pop    esi
640013b5:	add    esp,0x10
640013b8:	ret    0x4
640013bb:	int3   
640013bc:	int3   
640013bd:	int3   
640013be:	int3   
640013bf:	int3   
640013c0:	push   esi
640013c1:	mov    esi,ecx
640013c3:	mov    DWORD PTR [esi],0x6402c2dc
640013c9:	cmp    DWORD PTR [esi+0x24],0x10
640013cd:	jb     0x640013db
640013cf:	mov    eax,DWORD PTR [esi+0x10]
640013d2:	push   eax
640013d3:	call   0x640135e4
640013d8:	add    esp,0x4
640013db:	xor    eax,eax
640013dd:	mov    DWORD PTR [esi+0x24],0xf
640013e4:	mov    DWORD PTR [esi+0x20],eax
640013e7:	mov    ecx,esi
640013e9:	mov    BYTE PTR [esi+0x10],al
640013ec:	call   0x640136b8
640013f1:	test   BYTE PTR [esp+0x8],0x1
640013f6:	je     0x64001401
640013f8:	push   esi
640013f9:	call   0x640135e4
640013fe:	add    esp,0x4
64001401:	mov    eax,esi
64001403:	pop    esi
64001404:	ret    0x4
64001407:	int3   
64001408:	int3   
64001409:	int3   
6400140a:	int3   
6400140b:	int3   
6400140c:	int3   
6400140d:	int3   
6400140e:	int3   
6400140f:	int3   
64001410:	mov    eax,DWORD PTR [esp+0x4]
64001414:	push   esi
64001415:	push   eax
64001416:	mov    esi,ecx
64001418:	call   0x64001350
6400141d:	mov    DWORD PTR [esi],0x6402c2e8
64001423:	mov    eax,esi
64001425:	pop    esi
64001426:	ret    0x4
64001429:	int3   
6400142a:	int3   
6400142b:	int3   
6400142c:	int3   
6400142d:	int3   
6400142e:	int3   
6400142f:	int3   
64001430:	push   esi
64001431:	mov    esi,ecx
64001433:	mov    DWORD PTR [esi],0x6402c2dc
64001439:	cmp    DWORD PTR [esi+0x24],0x10
6400143d:	jb     0x6400144b
6400143f:	mov    eax,DWORD PTR [esi+0x10]
64001442:	push   eax
64001443:	call   0x640135e4
64001448:	add    esp,0x4
6400144b:	xor    eax,eax
6400144d:	mov    DWORD PTR [esi+0x24],0xf
64001454:	mov    DWORD PTR [esi+0x20],eax
64001457:	mov    BYTE PTR [esi+0x10],al
6400145a:	mov    ecx,esi
6400145c:	pop    esi
6400145d:	jmp    0x640136b8
64001462:	int3   
64001463:	int3   
64001464:	int3   
64001465:	int3   
64001466:	int3   
64001467:	int3   
64001468:	int3   
64001469:	int3   
6400146a:	int3   
6400146b:	int3   
6400146c:	int3   
6400146d:	int3   
6400146e:	int3   
6400146f:	int3   
64001470:	push   0xffffffff
64001472:	push   0x64023098
64001477:	mov    eax,fs:0x0
6400147d:	push   eax
6400147e:	push   esi
6400147f:	mov    eax,ds:0x640521ac
64001484:	xor    eax,esp
64001486:	push   eax
64001487:	lea    eax,[esp+0x8]
6400148b:	mov    fs:0x0,eax
64001491:	mov    esi,DWORD PTR [esp+0x18]
64001495:	mov    ecx,esi
64001497:	call   0x640135e9
6400149c:	xor    eax,eax
6400149e:	mov    DWORD PTR [esp+0x10],eax
640014a2:	lea    ecx,[esi+0xc]
640014a5:	mov    DWORD PTR [esi],0x64041d40
640014ab:	push   0xffffffff
640014ad:	mov    DWORD PTR [ecx+0x14],eax
640014b0:	mov    DWORD PTR [ecx+0x18],0xf
640014b7:	push   eax
640014b8:	mov    BYTE PTR [ecx+0x4],al
640014bb:	mov    eax,DWORD PTR [esp+0x24]
640014bf:	push   eax
640014c0:	call   0x64003370
640014c5:	mov    eax,esi
640014c7:	mov    ecx,DWORD PTR [esp+0x8]
640014cb:	mov    DWORD PTR fs:0x0,ecx
640014d2:	pop    ecx
640014d3:	pop    esi
640014d4:	add    esp,0xc
640014d7:	ret    0x8
640014da:	int3   
640014db:	int3   
640014dc:	int3   
640014dd:	int3   
640014de:	int3   
640014df:	int3   
640014e0:	push   esi
640014e1:	mov    esi,ecx
640014e3:	mov    DWORD PTR [esi],0x64041d40
640014e9:	cmp    DWORD PTR [esi+0x24],0x10
640014ed:	jb     0x640014fb
640014ef:	mov    eax,DWORD PTR [esi+0x10]
640014f2:	push   eax
640014f3:	call   0x640135e4
640014f8:	add    esp,0x4
640014fb:	xor    eax,eax
640014fd:	mov    DWORD PTR [esi+0x24],0xf
64001504:	mov    DWORD PTR [esi+0x20],eax
64001507:	mov    BYTE PTR [esi+0x10],al
6400150a:	mov    ecx,esi
6400150c:	pop    esi
6400150d:	jmp    0x640136b8
64001512:	int3   
64001513:	int3   
64001514:	int3   
64001515:	int3   
64001516:	int3   
64001517:	int3   
64001518:	int3   
64001519:	int3   
6400151a:	int3   
6400151b:	int3   
6400151c:	int3   
6400151d:	int3   
6400151e:	int3   
6400151f:	int3   
64001520:	cmp    DWORD PTR [ecx+0x24],0x10
64001524:	jb     0x6400152a
64001526:	mov    eax,DWORD PTR [ecx+0x10]
64001529:	ret    
6400152a:	lea    eax,[ecx+0x10]
6400152d:	ret    
6400152e:	int3   
6400152f:	int3   
64001530:	push   esi
64001531:	mov    esi,ecx
64001533:	mov    DWORD PTR [esi],0x64041d40
64001539:	cmp    DWORD PTR [esi+0x24],0x10
6400153d:	jb     0x6400154b
6400153f:	mov    eax,DWORD PTR [esi+0x10]
64001542:	push   eax
64001543:	call   0x640135e4
64001548:	add    esp,0x4
6400154b:	xor    eax,eax
6400154d:	mov    DWORD PTR [esi+0x24],0xf
64001554:	mov    DWORD PTR [esi+0x20],eax
64001557:	mov    ecx,esi
64001559:	mov    BYTE PTR [esi+0x10],al
6400155c:	call   0x640136b8
64001561:	test   BYTE PTR [esp+0x8],0x1
64001566:	je     0x64001571
64001568:	push   esi
64001569:	call   0x640135e4
6400156e:	add    esp,0x4
64001571:	mov    eax,esi
64001573:	pop    esi
64001574:	ret    0x4
64001577:	int3   
64001578:	int3   
64001579:	int3   
6400157a:	int3   
6400157b:	int3   
6400157c:	int3   
6400157d:	int3   
6400157e:	int3   
6400157f:	int3   
64001580:	push   0xffffffff
64001582:	push   0x64023068
64001587:	mov    eax,fs:0x0
6400158d:	push   eax
6400158e:	push   ecx
6400158f:	push   esi
64001590:	push   edi
64001591:	mov    eax,ds:0x640521ac
64001596:	xor    eax,esp
64001598:	push   eax
64001599:	lea    eax,[esp+0x10]
6400159d:	mov    fs:0x0,eax
640015a3:	mov    esi,ecx
640015a5:	mov    DWORD PTR [esp+0xc],esi
640015a9:	mov    edi,DWORD PTR [esp+0x20]
640015ad:	push   edi
640015ae:	call   0x64013660
640015b3:	xor    edx,edx
640015b5:	mov    DWORD PTR [esp+0x18],edx
640015b9:	push   0xffffffff
640015bb:	lea    ecx,[esi+0xc]
640015be:	mov    DWORD PTR [esi],0x64041d40
640015c4:	lea    eax,[edi+0xc]
640015c7:	push   edx
640015c8:	mov    DWORD PTR [ecx+0x18],0xf
640015cf:	mov    DWORD PTR [ecx+0x14],edx
640015d2:	push   eax
640015d3:	mov    BYTE PTR [ecx+0x4],dl
640015d6:	call   0x64003370
640015db:	mov    eax,esi
640015dd:	mov    ecx,DWORD PTR [esp+0x10]
640015e1:	mov    DWORD PTR fs:0x0,ecx
640015e8:	pop    ecx
640015e9:	pop    edi
640015ea:	pop    esi
640015eb:	add    esp,0x10
640015ee:	ret    0x4
640015f1:	int3   
640015f2:	int3   
640015f3:	int3   
640015f4:	int3   
640015f5:	int3   
640015f6:	int3   
640015f7:	int3   
640015f8:	int3   
640015f9:	int3   
640015fa:	int3   
640015fb:	int3   
640015fc:	int3   
640015fd:	int3   
640015fe:	int3   
640015ff:	int3   
64001600:	push   ecx
64001601:	push   edi
64001602:	mov    edi,DWORD PTR [ecx]
64001604:	test   edi,edi
64001606:	je     0x64001649
64001608:	push   0x0
6400160a:	lea    ecx,[esp+0x8]
6400160e:	call   0x64012f97
64001613:	mov    eax,DWORD PTR [edi+0x4]
64001616:	test   eax,eax
64001618:	jbe    0x64001625
6400161a:	cmp    eax,0xffffffff
6400161d:	jae    0x64001625
6400161f:	add    eax,0xffffffff
64001622:	mov    DWORD PTR [edi+0x4],eax
64001625:	push   esi
64001626:	mov    esi,DWORD PTR [edi+0x4]
64001629:	neg    esi
6400162b:	sbb    esi,esi
6400162d:	not    esi
6400162f:	lea    ecx,[esp+0x8]
64001633:	and    esi,edi
64001635:	call   0x64012fb8
6400163a:	test   esi,esi
6400163c:	je     0x64001648
6400163e:	mov    eax,DWORD PTR [esi]
64001640:	mov    edx,DWORD PTR [eax]
64001642:	push   0x1
64001644:	mov    ecx,esi
64001646:	call   edx
64001648:	pop    esi
64001649:	pop    edi
6400164a:	pop    ecx
6400164b:	ret    
6400164c:	int3   
6400164d:	int3   
6400164e:	int3   
6400164f:	int3   
64001650:	mov    eax,DWORD PTR [esp+0x4]
64001654:	push   esi
64001655:	push   eax
64001656:	mov    esi,ecx
64001658:	call   0x64001670
6400165d:	mov    DWORD PTR [esi],0x6402c2f4
64001663:	mov    eax,esi
64001665:	pop    esi
64001666:	ret    0x4
64001669:	int3   
6400166a:	int3   
6400166b:	int3   
6400166c:	int3   
6400166d:	int3   
6400166e:	int3   
6400166f:	int3   
64001670:	push   0xffffffff
64001672:	push   0x64023038
64001677:	mov    eax,fs:0x0
6400167d:	push   eax
6400167e:	push   ecx
6400167f:	push   esi
64001680:	push   edi
64001681:	mov    eax,ds:0x640521ac
64001686:	xor    eax,esp
64001688:	push   eax
64001689:	lea    eax,[esp+0x10]
6400168d:	mov    fs:0x0,eax
64001693:	mov    esi,ecx
64001695:	mov    DWORD PTR [esp+0xc],esi
64001699:	mov    edi,DWORD PTR [esp+0x20]
6400169d:	push   edi
6400169e:	call   0x64013660
640016a3:	xor    edx,edx
640016a5:	mov    DWORD PTR [esp+0x18],edx
640016a9:	push   0xffffffff
640016ab:	lea    ecx,[esi+0xc]
640016ae:	mov    DWORD PTR [esi],0x6402c2dc
640016b4:	lea    eax,[edi+0xc]
640016b7:	push   edx
640016b8:	mov    DWORD PTR [ecx+0x18],0xf
640016bf:	mov    DWORD PTR [ecx+0x14],edx
640016c2:	push   eax
640016c3:	mov    BYTE PTR [ecx+0x4],dl
640016c6:	call   0x64003370
640016cb:	mov    eax,esi
640016cd:	mov    ecx,DWORD PTR [esp+0x10]
640016d1:	mov    DWORD PTR fs:0x0,ecx
640016d8:	pop    ecx
640016d9:	pop    edi
640016da:	pop    esi
640016db:	add    esp,0x10
640016de:	ret    0x4
640016e1:	int3   
640016e2:	int3   
640016e3:	int3   
640016e4:	int3   
640016e5:	int3   
640016e6:	int3   
640016e7:	int3   
640016e8:	int3   
640016e9:	int3   
640016ea:	int3   
640016eb:	int3   
640016ec:	int3   
640016ed:	int3   
640016ee:	int3   
640016ef:	int3   
640016f0:	mov    eax,esi
640016f2:	mov    edx,0xe3
640016f7:	push   edi
640016f8:	mov    ecx,DWORD PTR [eax+0x4]
640016fb:	mov    edi,DWORD PTR [eax]
640016fd:	xor    edi,ecx
640016ff:	and    edi,0x7ffffffe
64001705:	xor    edi,DWORD PTR [eax]
64001707:	and    cl,0x1
6400170a:	shr    edi,1
6400170c:	sub    edx,0x1
6400170f:	neg    cl
64001711:	sbb    ecx,ecx
64001713:	and    ecx,0x9908b0df
64001719:	xor    edi,ecx
6400171b:	xor    edi,DWORD PTR [eax+0x634]
64001721:	add    eax,0x4
64001724:	test   edx,edx
64001726:	mov    DWORD PTR [eax-0x4],edi
64001729:	jne    0x640016f8
6400172b:	mov    edx,0x18c
64001730:	mov    ecx,DWORD PTR [eax+0x4]
64001733:	mov    edi,DWORD PTR [eax]
64001735:	xor    edi,ecx
64001737:	and    edi,0x7ffffffe
6400173d:	xor    edi,DWORD PTR [eax]
6400173f:	and    cl,0x1
64001742:	shr    edi,1
64001744:	neg    cl
64001746:	sbb    ecx,ecx
64001748:	and    ecx,0x9908b0df
6400174e:	xor    edi,ecx
64001750:	xor    edi,DWORD PTR [eax-0x38c]
64001756:	add    eax,0x4
64001759:	sub    edx,0x1
6400175c:	mov    DWORD PTR [eax-0x4],edi
6400175f:	jne    0x64001730
64001761:	mov    ecx,DWORD PTR [esi]
64001763:	mov    edx,DWORD PTR [eax]
64001765:	xor    edx,ecx
64001767:	and    edx,0x7ffffffe
6400176d:	xor    edx,DWORD PTR [eax]
6400176f:	and    cl,0x1
64001772:	shr    edx,1
64001774:	neg    cl
64001776:	pop    edi
64001777:	sbb    ecx,ecx
64001779:	and    ecx,0x9908b0df
6400177f:	xor    edx,ecx
64001781:	xor    edx,DWORD PTR [eax-0x38c]
64001787:	mov    DWORD PTR [eax],edx
64001789:	mov    DWORD PTR [esi+0x9c4],0x270
64001793:	mov    DWORD PTR [esi+0x9c0],esi
64001799:	ret    
6400179a:	int3   
6400179b:	int3   
6400179c:	int3   
6400179d:	int3   
6400179e:	int3   
6400179f:	int3   
640017a0:	push   esi
640017a1:	mov    esi,eax
640017a3:	push   edi
640017a4:	mov    ecx,0x1
640017a9:	mov    DWORD PTR [esi],edx
640017ab:	jmp    0x640017b0
640017ad:	lea    ecx,[ecx+0x0]
640017b0:	mov    edx,DWORD PTR [eax]
640017b2:	mov    edi,edx
640017b4:	shr    edi,0x1e
640017b7:	xor    edi,edx
640017b9:	imul   edi,edi,0x6c078965
640017bf:	add    edi,ecx
640017c1:	mov    DWORD PTR [eax+0x4],edi
640017c4:	add    ecx,0x1
640017c7:	add    eax,0x4
640017ca:	cmp    ecx,0x270
640017d0:	jl     0x640017b0
640017d2:	call   0x640016f0
640017d7:	pop    edi
640017d8:	pop    esi
640017d9:	ret    
640017da:	int3   
640017db:	int3   
640017dc:	int3   
640017dd:	int3   
640017de:	int3   
640017df:	int3   
640017e0:	push   esi
640017e1:	push   edi
640017e2:	mov    edi,ebx
640017e4:	shr    edi,1
640017e6:	or     edi,ebx
640017e8:	mov    esi,eax
640017ea:	mov    eax,edi
640017ec:	shr    eax,0x2
640017ef:	or     edi,eax
640017f1:	mov    ecx,edi
640017f3:	shr    ecx,0x4
640017f6:	or     edi,ecx
640017f8:	mov    edx,edi
640017fa:	shr    edx,0x8
640017fd:	or     edi,edx
640017ff:	mov    eax,edi
64001801:	shr    eax,0x10
64001804:	or     edi,eax
64001806:	cmp    DWORD PTR [esi+0x9c4],0x0
6400180d:	jne    0x64001814
6400180f:	call   0x640016f0
64001814:	mov    eax,DWORD PTR [esi+0x9c0]
6400181a:	add    DWORD PTR [esi+0x9c4],0xffffffff
64001821:	mov    ecx,DWORD PTR [eax]
64001823:	add    eax,0x4
64001826:	mov    edx,ecx
64001828:	shr    edx,0xb
6400182b:	xor    ecx,edx
6400182d:	mov    DWORD PTR [esi+0x9c0],eax
64001833:	mov    eax,ecx
64001835:	and    eax,0xff3a58ad
6400183a:	shl    eax,0x7
6400183d:	xor    ecx,eax
6400183f:	mov    edx,ecx
64001841:	and    edx,0xffffdf8c
64001847:	shl    edx,0xf
6400184a:	xor    ecx,edx
6400184c:	mov    eax,ecx
6400184e:	shr    eax,0x12
64001851:	xor    eax,ecx
64001853:	and    eax,edi
64001855:	cmp    eax,ebx
64001857:	ja     0x64001806
64001859:	pop    edi
6400185a:	pop    esi
6400185b:	ret    
6400185c:	int3   
6400185d:	int3   
6400185e:	int3   
6400185f:	int3   
64001860:	cmp    DWORD PTR ds:0x64054534,0x0
64001867:	jne    0x640018e8
64001869:	push   esi
6400186a:	push   0x11c
6400186f:	push   0x0
64001871:	push   0x64054538
64001876:	mov    DWORD PTR ds:0x64054654,0x0
64001880:	call   0x64015100
64001885:	mov    esi,DWORD PTR ds:0x6402c0fc
6400188b:	add    esp,0xc
6400188e:	push   0x64054538
64001893:	mov    DWORD PTR ds:0x64054538,0x114
6400189d:	call   esi
6400189f:	test   eax,eax
640018a1:	je     0x640018e4
640018a3:	cmp    DWORD PTR ds:0x64054548,0x2
640018aa:	mov    DWORD PTR ds:0x64054534,0x1
640018b4:	jne    0x640018e4
640018b6:	cmp    DWORD PTR ds:0x6405453c,0x5
640018bd:	jb     0x640018e4
640018bf:	push   0x11c
640018c4:	push   0x0
640018c6:	push   0x64054538
640018cb:	call   0x64015100
640018d0:	add    esp,0xc
640018d3:	push   0x64054538
640018d8:	mov    DWORD PTR ds:0x64054538,0x11c
640018e2:	call   esi
640018e4:	mov    eax,edi
640018e6:	pop    esi
640018e7:	ret    
640018e8:	mov    eax,edi
640018ea:	ret    
640018eb:	int3   
640018ec:	int3   
640018ed:	int3   
640018ee:	int3   
640018ef:	int3   
640018f0:	push   ebp
640018f1:	mov    ebp,esp
640018f3:	and    esp,0xfffffff8
640018f6:	push   0xffffffff
640018f8:	push   0x64022f20
640018fd:	mov    eax,fs:0x0
64001903:	push   eax
64001904:	sub    esp,0x50
64001907:	push   ebx
64001908:	push   esi
64001909:	push   edi
6400190a:	mov    eax,ds:0x640521ac
6400190f:	xor    eax,esp
64001911:	push   eax
64001912:	lea    eax,[esp+0x60]
64001916:	mov    fs:0x0,eax
6400191c:	xor    ebx,ebx
6400191e:	push   0x4000
64001923:	mov    DWORD PTR [esp+0x18],ebx
64001927:	call   0x64012f3a
6400192c:	mov    edi,eax
6400192e:	push   0x38
64001930:	mov    DWORD PTR [esp+0x70],ebx
64001934:	push   0x64041a00
64001939:	lea    eax,[esp+0x30]
6400193d:	push   0x2f
6400193f:	push   eax
64001940:	mov    DWORD PTR [esp+0x58],ebx
64001944:	mov    DWORD PTR [esp+0x5c],ebx
64001948:	mov    DWORD PTR [esp+0x60],ebx
6400194c:	mov    DWORD PTR [esp+0x3c],ebx
64001950:	mov    DWORD PTR [esp+0x38],ebx
64001954:	call   0x6400ef90
64001959:	add    esp,0x14
6400195c:	test   eax,eax
6400195e:	je     0x6400198d
64001960:	mov    esi,DWORD PTR [ebp+0x8]
64001963:	push   ebx
64001964:	mov    DWORD PTR [esp+0x1c],ebx
64001968:	mov    DWORD PTR [esi],ebx
6400196a:	call   0x640135e4
6400196f:	push   edi
64001970:	call   0x640135e4
64001975:	add    esp,0x8
64001978:	mov    eax,esi
6400197a:	mov    ecx,DWORD PTR [esp+0x60]
6400197e:	mov    DWORD PTR fs:0x0,ecx
64001985:	pop    ecx
64001986:	pop    edi
64001987:	pop    esi
64001988:	pop    ebx
64001989:	mov    esp,ebp
6400198b:	pop    ebp
6400198c:	ret    
6400198d:	mov    ecx,DWORD PTR [ebp+0x10]
64001990:	mov    edx,DWORD PTR [ebp+0xc]
64001993:	mov    DWORD PTR [esp+0x28],ecx
64001997:	mov    DWORD PTR [esp+0x24],edx
6400199b:	jmp    0x640019a0
6400199d:	lea    ecx,[ecx+0x0]
640019a0:	lea    ecx,[esp+0x24]
640019a4:	lea    eax,[ebx+edi*1]
640019a7:	push   0x4
640019a9:	push   ecx
640019aa:	mov    DWORD PTR [esp+0x3c],0x4000
640019b2:	mov    DWORD PTR [esp+0x38],eax
640019b6:	call   0x6400f170
640019bb:	mov    esi,eax
640019bd:	add    esp,0x8
640019c0:	cmp    esi,0xfffffffc
640019c3:	mov    DWORD PTR [esp+0x18],esi
640019c7:	jl     0x640019db
640019c9:	cmp    esi,0xfffffffd
640019cc:	jle    0x64001a72
640019d2:	cmp    esi,0x2
640019d5:	je     0x64001a72
640019db:	mov    ecx,DWORD PTR [esp+0x34]
640019df:	mov    eax,0x4000
640019e4:	sub    eax,ecx
640019e6:	add    ebx,eax
640019e8:	test   ecx,ecx
640019ea:	mov    DWORD PTR [esp+0x14],ebx
640019ee:	jne    0x64001a59
640019f0:	mov    esi,edi
640019f2:	mov    DWORD PTR [esp+0x1c],ecx
640019f6:	mov    DWORD PTR [esp+0x20],esi
640019fa:	add    ebx,0x4000
64001a00:	push   ebx
64001a01:	mov    BYTE PTR [esp+0x6c],0x1
64001a06:	call   0x64012f3a
64001a0b:	mov    edi,eax
64001a0d:	add    esp,0x4
64001a10:	test   edi,edi
64001a12:	mov    DWORD PTR [esp+0x10],0x0
64001a1a:	je     0x64001a26
64001a1c:	push   0x0
64001a1e:	call   0x640135e4
64001a23:	add    esp,0x4
64001a26:	mov    edx,DWORD PTR [esp+0x10]
64001a2a:	push   edx
64001a2b:	call   0x640135e4
64001a30:	mov    ebx,DWORD PTR [esp+0x18]
64001a34:	push   ebx
64001a35:	push   esi
64001a36:	push   edi
64001a37:	call   0x64015180
64001a3c:	push   esi
64001a3d:	mov    BYTE PTR [esp+0x7c],0x0
64001a42:	call   0x640135e4
64001a47:	add    esp,0x14
64001a4a:	cmp    DWORD PTR [esp+0x34],0x0
64001a4f:	je     0x640019a0
64001a55:	mov    esi,DWORD PTR [esp+0x18]
64001a59:	lea    ecx,[esp+0x24]
64001a5d:	push   ecx
64001a5e:	call   0x64010760
64001a63:	add    esp,0x4
64001a66:	cmp    esi,0x1
64001a69:	jne    0x64001ab2
64001a6b:	mov    edx,DWORD PTR [ebp+0x14]
64001a6e:	mov    DWORD PTR [edx],ebx
64001a70:	jmp    0x64001ad6
64001a72:	lea    eax,[esp+0x24]
64001a76:	push   eax
64001a77:	call   0x64010760
64001a7c:	mov    esi,DWORD PTR [ebp+0x8]
64001a7f:	push   0x0
64001a81:	mov    DWORD PTR [esp+0x28],0x0
64001a89:	mov    DWORD PTR [esi],0x0
64001a8f:	call   0x640135e4
64001a94:	push   edi
64001a95:	call   0x640135e4
64001a9a:	add    esp,0xc
64001a9d:	mov    eax,esi
64001a9f:	mov    ecx,DWORD PTR [esp+0x60]
64001aa3:	mov    DWORD PTR fs:0x0,ecx
64001aaa:	pop    ecx
64001aab:	pop    edi
64001aac:	pop    esi
64001aad:	pop    ebx
64001aae:	mov    esp,ebp
64001ab0:	pop    ebp
64001ab1:	ret    
64001ab2:	test   edi,edi
64001ab4:	mov    DWORD PTR [esp+0x18],0x0
64001abc:	je     0x64001ac7
64001abe:	push   edi
64001abf:	call   0x640135e4
64001ac4:	add    esp,0x4
64001ac7:	mov    eax,DWORD PTR [esp+0x18]
64001acb:	push   eax
64001acc:	xor    edi,edi
64001ace:	call   0x640135e4
64001ad3:	add    esp,0x4
64001ad6:	mov    esi,DWORD PTR [ebp+0x8]
64001ad9:	push   0x0
64001adb:	mov    DWORD PTR [esi],edi
64001add:	call   0x640135e4
64001ae2:	add    esp,0x4
64001ae5:	mov    eax,esi
64001ae7:	mov    ecx,DWORD PTR [esp+0x60]
64001aeb:	mov    DWORD PTR fs:0x0,ecx
64001af2:	pop    ecx
64001af3:	pop    edi
64001af4:	pop    esi
64001af5:	pop    ebx
64001af6:	mov    esp,ebp
64001af8:	pop    ebp
64001af9:	ret    
64001afa:	int3   
64001afb:	int3   
64001afc:	int3   
64001afd:	int3   
64001afe:	int3   
64001aff:	int3   
64001b00:	sub    esp,0x74
64001b03:	mov    eax,ds:0x640521ac
64001b08:	xor    eax,esp
64001b0a:	mov    DWORD PTR [esp+0x70],eax
64001b0e:	mov    eax,DWORD PTR [esp+0x78]
64001b12:	movzx  ecx,BYTE PTR [eax+0xf]
64001b16:	movzx  edx,BYTE PTR [eax+0xe]
64001b1a:	push   ecx
64001b1b:	movzx  ecx,BYTE PTR [eax+0xd]
64001b1f:	push   edx
64001b20:	movzx  edx,BYTE PTR [eax+0xc]
64001b24:	push   ecx
64001b25:	movzx  ecx,BYTE PTR [eax+0xb]
64001b29:	push   edx
64001b2a:	movzx  edx,BYTE PTR [eax+0xa]
64001b2e:	push   ecx
64001b2f:	movzx  ecx,BYTE PTR [eax+0x9]
64001b33:	push   edx
64001b34:	movzx  edx,BYTE PTR [eax+0x8]
64001b38:	push   ecx
64001b39:	movzx  ecx,WORD PTR [eax+0x6]
64001b3d:	push   edx
64001b3e:	movzx  edx,WORD PTR [eax+0x4]
64001b42:	mov    eax,DWORD PTR [eax]
64001b44:	push   ecx
64001b45:	push   edx
64001b46:	push   eax
64001b47:	push   0x64041a20
64001b4c:	push   0x32
64001b4e:	push   0x64041a48
64001b53:	mov    DWORD PTR [esp+0x38],0x0
64001b5b:	call   0x64002e90
64001b60:	add    esp,0xc
64001b63:	push   eax
64001b64:	lea    ecx,[esp+0x34]
64001b68:	push   ecx
64001b69:	call   0x6401466c
64001b6e:	lea    eax,[esp+0x38]
64001b72:	mov    DWORD PTR [esi+0x18],0xf
64001b79:	mov    DWORD PTR [esi+0x14],0x0
64001b80:	add    esp,0x34
64001b83:	mov    BYTE PTR [esi+0x4],0x0
64001b87:	lea    edx,[eax+0x1]
64001b8a:	lea    ebx,[ebx+0x0]
64001b90:	mov    cl,BYTE PTR [eax]
64001b92:	add    eax,0x1
64001b95:	test   cl,cl
64001b97:	jne    0x64001b90
64001b99:	sub    eax,edx
64001b9b:	push   eax
64001b9c:	lea    edx,[esp+0x8]
64001ba0:	push   edx
64001ba1:	mov    ecx,esi
64001ba3:	call   0x64003450
64001ba8:	mov    ecx,DWORD PTR [esp+0x70]
64001bac:	xor    ecx,esp
64001bae:	mov    eax,esi
64001bb0:	call   0x64013ca6
64001bb5:	add    esp,0x74
64001bb8:	ret    
64001bb9:	int3   
64001bba:	int3   
64001bbb:	int3   
64001bbc:	int3   
64001bbd:	int3   
64001bbe:	int3   
64001bbf:	int3   
64001bc0:	push   ebp
64001bc1:	mov    ebp,esp
64001bc3:	sub    esp,0x8
64001bc6:	mov    eax,ds:0x640521ac
64001bcb:	xor    eax,ebp
64001bcd:	mov    DWORD PTR [ebp-0x4],eax
64001bd0:	push   ebx
64001bd1:	push   esi
64001bd2:	mov    esi,DWORD PTR [ebp+0xc]
64001bd5:	push   edi
64001bd6:	call   DWORD PTR ds:0x64052184
64001bdc:	mov    edi,DWORD PTR [ebp+0x8]
64001bdf:	mov    DWORD PTR [edi],0x0
64001be5:	mov    DWORD PTR [ebp-0x8],eax
64001be8:	xor    eax,eax
64001bea:	mov    DWORD PTR [edi+0x4],eax
64001bed:	mov    DWORD PTR [edi+0x8],eax
64001bf0:	mov    DWORD PTR [edi+0xc],eax
64001bf3:	cmp    DWORD PTR [esi+0x18],0x10
64001bf7:	jb     0x64001bfe
64001bf9:	mov    ebx,DWORD PTR [esi+0x4]
64001bfc:	jmp    0x64001c01
64001bfe:	lea    ebx,[esi+0x4]
64001c01:	test   ebx,ebx
64001c03:	jne    0x64001c09
64001c05:	xor    eax,eax
64001c07:	jmp    0x64001c4e
64001c09:	push   ebx
64001c0a:	call   DWORD PTR ds:0x6402c070
64001c10:	mov    edi,eax
64001c12:	add    edi,0x1
64001c15:	cmp    edi,0x3fffffff
64001c1b:	jg     0x64001c49
64001c1d:	lea    eax,[edi+edi*1]
64001c20:	call   0x64013cc0
64001c25:	mov    esi,esp
64001c27:	test   esi,esi
64001c29:	je     0x64001c49
64001c2b:	mov    eax,DWORD PTR [ebp-0x8]
64001c2e:	push   edi
64001c2f:	push   esi
64001c30:	push   0xffffffff
64001c32:	push   ebx
64001c33:	push   0x0
64001c35:	push   eax
64001c36:	mov    WORD PTR [esi],0x0
64001c3b:	call   DWORD PTR ds:0x6402c02c
64001c41:	neg    eax
64001c43:	sbb    eax,eax
64001c45:	and    eax,esi
64001c47:	jmp    0x64001c4b
64001c49:	xor    eax,eax
64001c4b:	mov    edi,DWORD PTR [ebp+0x8]
64001c4e:	push   edi
64001c4f:	push   eax
64001c50:	call   DWORD PTR ds:0x6402c200
64001c56:	mov    eax,edi
64001c58:	lea    esp,[ebp-0x14]
64001c5b:	pop    edi
64001c5c:	pop    esi
64001c5d:	pop    ebx
64001c5e:	mov    ecx,DWORD PTR [ebp-0x4]
64001c61:	xor    ecx,ebp
64001c63:	call   0x64013ca6
64001c68:	mov    esp,ebp
64001c6a:	pop    ebp
64001c6b:	ret    
64001c6c:	int3   
64001c6d:	int3   
64001c6e:	int3   
64001c6f:	int3   
64001c70:	push   0xffffffff
64001c72:	push   0x64023701
64001c77:	mov    eax,fs:0x0
64001c7d:	push   eax
64001c7e:	sub    esp,0x4c
64001c81:	push   ebx
64001c82:	push   esi
64001c83:	push   edi
64001c84:	mov    eax,ds:0x640521ac
64001c89:	xor    eax,esp
64001c8b:	push   eax
64001c8c:	lea    eax,[esp+0x5c]
64001c90:	mov    fs:0x0,eax
64001c96:	mov    edi,DWORD PTR [esp+0x6c]
64001c9a:	xor    ebx,ebx
64001c9c:	mov    DWORD PTR [esp+0x64],ebx
64001ca0:	mov    DWORD PTR [esp+0x10],ebx
64001ca4:	mov    eax,ds:0x640539c4
64001ca9:	mov    edx,DWORD PTR [eax+0xc]
64001cac:	mov    ecx,0x640539c4
64001cb1:	call   edx
64001cb3:	add    eax,0x10
64001cb6:	mov    DWORD PTR [edi],eax
64001cb8:	mov    DWORD PTR [esp+0x64],ebx
64001cbc:	mov    ecx,0x1
64001cc1:	sub    ecx,DWORD PTR [eax-0x4]
64001cc4:	mov    eax,DWORD PTR [eax-0x8]
64001cc7:	sub    eax,0x800
64001ccc:	or     eax,ecx
64001cce:	mov    DWORD PTR [esp+0x10],0x1
64001cd6:	jge    0x64001ce4
64001cd8:	push   0x800
64001cdd:	mov    ecx,edi
64001cdf:	call   0x640043c0
64001ce4:	mov    eax,DWORD PTR [edi]
64001ce6:	push   0x800
64001ceb:	push   eax
64001cec:	call   DWORD PTR ds:0x6402c060
64001cf2:	test   eax,eax
64001cf4:	jne    0x64001d5c
64001cf6:	push   0x64041a88
64001cfb:	push   0x1c
64001cfd:	push   0x64041aac
64001d02:	call   0x64002e90
64001d07:	mov    ecx,eax
64001d09:	add    esp,0xc
64001d0c:	mov    DWORD PTR [esp+0x2c],0xf
64001d14:	mov    DWORD PTR [esp+0x28],ebx
64001d18:	mov    BYTE PTR [esp+0x18],bl
64001d1c:	lea    esi,[ecx+0x1]
64001d1f:	nop
64001d20:	mov    dl,BYTE PTR [ecx]
64001d22:	add    ecx,0x1
64001d25:	cmp    dl,bl
64001d27:	jne    0x64001d20
64001d29:	sub    ecx,esi
64001d2b:	push   ecx
64001d2c:	push   eax
64001d2d:	lea    ecx,[esp+0x1c]
64001d31:	call   0x64003450
64001d36:	lea    eax,[esp+0x14]
64001d3a:	push   eax
64001d3b:	lea    ecx,[esp+0x34]
64001d3f:	push   ecx
64001d40:	mov    DWORD PTR [esp+0x6c],0x1
64001d48:	call   0x64001470
64001d4d:	push   0x64044070
64001d52:	lea    edx,[esp+0x34]
64001d56:	push   edx
64001d57:	call   0x64013812
64001d5c:	mov    edx,DWORD PTR [edi]
64001d5e:	cmp    edx,ebx
64001d60:	jne    0x64001d66
64001d62:	xor    eax,eax
64001d64:	jmp    0x64001d81
64001d66:	mov    eax,edx
64001d68:	lea    esi,[eax+0x2]
64001d6b:	jmp    0x64001d70
64001d6d:	lea    ecx,[ecx+0x0]
64001d70:	mov    cx,WORD PTR [eax]
64001d73:	add    eax,0x2
64001d76:	cmp    cx,bx
64001d79:	jne    0x64001d70
64001d7b:	sub    eax,esi
64001d7d:	sar    eax,1
64001d7f:	js     0x64001dc5
64001d81:	cmp    eax,DWORD PTR [edx-0x8]
64001d84:	jg     0x64001dc5
64001d86:	mov    DWORD PTR [edx-0xc],eax
64001d89:	mov    ecx,DWORD PTR [edi]
64001d8b:	mov    WORD PTR [ecx+eax*2],bx
64001d8f:	mov    ecx,DWORD PTR [edi]
64001d91:	mov    edx,DWORD PTR [ecx-0xc]
64001d94:	lea    eax,[edx-0x1]
64001d97:	cmp    eax,ebx
64001d99:	jl     0x64001dc5
64001d9b:	cmp    eax,edx
64001d9d:	jg     0x64001dc5
64001d9f:	movzx  eax,WORD PTR [ecx+eax*2]
64001da3:	cmp    ax,0x5c
64001da7:	je     0x64001db0
64001da9:	push   0x5c
64001dab:	call   0x64002c10
64001db0:	mov    eax,edi
64001db2:	mov    ecx,DWORD PTR [esp+0x5c]
64001db6:	mov    DWORD PTR fs:0x0,ecx
64001dbd:	pop    ecx
64001dbe:	pop    edi
64001dbf:	pop    esi
64001dc0:	pop    ebx
64001dc1:	add    esp,0x58
64001dc4:	ret    
64001dc5:	push   0x80070057
64001dca:	call   0x64001080
64001dcf:	int3   
64001dd0:	push   0xffffffff
64001dd2:	push   0x64023a81
64001dd7:	mov    eax,fs:0x0
64001ddd:	push   eax
64001dde:	sub    esp,0x50
64001de1:	push   ebx
64001de2:	push   ebp
64001de3:	push   esi
64001de4:	push   edi
64001de5:	mov    eax,ds:0x640521ac
64001dea:	xor    eax,esp
64001dec:	push   eax
64001ded:	lea    eax,[esp+0x64]
64001df1:	mov    fs:0x0,eax
64001df7:	mov    esi,DWORD PTR [esp+0x74]
64001dfb:	xor    ebx,ebx
64001dfd:	mov    DWORD PTR [esp+0x6c],ebx
64001e01:	push   esi
64001e02:	mov    DWORD PTR [esp+0x1c],ebx
64001e06:	call   0x64001c70
64001e0b:	add    esp,0x4
64001e0e:	mov    DWORD PTR [esp+0x6c],ebx
64001e12:	mov    eax,DWORD PTR [esi]
64001e14:	mov    ebp,0x1
64001e19:	sub    eax,0x10
64001e1c:	cmp    DWORD PTR [eax+0xc],ebp
64001e1f:	mov    DWORD PTR [esp+0x18],ebp
64001e23:	jle    0x64001e30
64001e25:	mov    eax,DWORD PTR [eax+0x4]
64001e28:	push   eax
64001e29:	mov    ecx,esi
64001e2b:	call   0x64003800
64001e30:	mov    eax,DWORD PTR [esi]
64001e32:	push   0x5c
64001e34:	push   eax
64001e35:	call   0x640147ed
64001e3a:	mov    edi,eax
64001e3c:	add    esp,0x8
64001e3f:	cmp    edi,ebx
64001e41:	jne    0x64001ea7
64001e43:	push   0x64041acc
64001e48:	push   0x18
64001e4a:	push   0x64041b00
64001e4f:	call   0x64002e90
64001e54:	mov    ecx,eax
64001e56:	add    esp,0xc
64001e59:	mov    DWORD PTR [esp+0x34],0xf
64001e61:	mov    DWORD PTR [esp+0x30],ebx
64001e65:	mov    BYTE PTR [esp+0x20],bl
64001e69:	lea    esi,[ecx+0x1]
64001e6c:	lea    esp,[esp+0x0]
64001e70:	mov    dl,BYTE PTR [ecx]
64001e72:	add    ecx,ebp
64001e74:	cmp    dl,bl
64001e76:	jne    0x64001e70
64001e78:	sub    ecx,esi
64001e7a:	push   ecx
64001e7b:	push   eax
64001e7c:	lea    ecx,[esp+0x24]
64001e80:	call   0x64003450
64001e85:	lea    ecx,[esp+0x1c]
64001e89:	push   ecx
64001e8a:	lea    edx,[esp+0x3c]
64001e8e:	push   edx
64001e8f:	mov    DWORD PTR [esp+0x74],ebp
64001e93:	call   0x64001470
64001e98:	push   0x64044070
64001e9d:	lea    eax,[esp+0x3c]
64001ea1:	push   eax
64001ea2:	call   0x64013812
64001ea7:	mov    eax,DWORD PTR [esi]
64001ea9:	sub    eax,0x10
64001eac:	cmp    DWORD PTR [eax+0xc],ebp
64001eaf:	jle    0x64001ebc
64001eb1:	mov    ecx,DWORD PTR [eax+0x4]
64001eb4:	push   ecx
64001eb5:	mov    ecx,esi
64001eb7:	call   0x64003800
64001ebc:	mov    ecx,DWORD PTR [esi]
64001ebe:	sub    edi,ecx
64001ec0:	sar    edi,1
64001ec2:	add    edi,ebp
64001ec4:	cmp    ecx,ebx
64001ec6:	jne    0x64001ecc
64001ec8:	xor    eax,eax
64001eca:	jmp    0x64001ee7
64001ecc:	mov    eax,ecx
64001ece:	lea    ebp,[eax+0x2]
64001ed1:	mov    dx,WORD PTR [eax]
64001ed4:	add    eax,0x2
64001ed7:	cmp    dx,bx
64001eda:	jne    0x64001ed1
64001edc:	sub    eax,ebp
64001ede:	sar    eax,1
64001ee0:	js     0x64001f3a
64001ee2:	mov    ebp,0x1
64001ee7:	cmp    eax,DWORD PTR [ecx-0x8]
64001eea:	jg     0x64001f3a
64001eec:	mov    DWORD PTR [ecx-0xc],eax
64001eef:	mov    edx,DWORD PTR [esi]
64001ef1:	mov    WORD PTR [edx+eax*2],bx
64001ef5:	mov    eax,DWORD PTR [esi]
64001ef7:	sub    eax,0x10
64001efa:	mov    ecx,ebp
64001efc:	sub    ecx,DWORD PTR [eax+0xc]
64001eff:	mov    eax,DWORD PTR [eax+0x8]
64001f02:	sub    eax,edi
64001f04:	or     eax,ecx
64001f06:	jge    0x64001f10
64001f08:	push   edi
64001f09:	mov    ecx,esi
64001f0b:	call   0x640043c0
64001f10:	cmp    edi,ebx
64001f12:	jl     0x64001f3a
64001f14:	mov    eax,DWORD PTR [esi]
64001f16:	cmp    edi,DWORD PTR [eax-0x8]
64001f19:	jg     0x64001f3a
64001f1b:	mov    DWORD PTR [eax-0xc],edi
64001f1e:	mov    eax,DWORD PTR [esi]
64001f20:	mov    WORD PTR [eax+edi*2],bx
64001f24:	mov    eax,esi
64001f26:	mov    ecx,DWORD PTR [esp+0x64]
64001f2a:	mov    DWORD PTR fs:0x0,ecx
64001f31:	pop    ecx
64001f32:	pop    edi
64001f33:	pop    esi
64001f34:	pop    ebp
64001f35:	pop    ebx
64001f36:	add    esp,0x5c
64001f39:	ret    
64001f3a:	push   0x80070057
64001f3f:	call   0x64001080
64001f44:	int3   
64001f45:	int3   
64001f46:	int3   
64001f47:	int3   
64001f48:	int3   
64001f49:	int3   
64001f4a:	int3   
64001f4b:	int3   
64001f4c:	int3   
64001f4d:	int3   
64001f4e:	int3   
64001f4f:	int3   
64001f50:	push   ebp
64001f51:	mov    ebp,esp
64001f53:	push   0xffffffff
64001f55:	push   0x64023b4f
64001f5a:	mov    eax,fs:0x0
64001f60:	push   eax
64001f61:	sub    esp,0x134
64001f67:	mov    eax,ds:0x640521ac
64001f6c:	xor    eax,ebp
64001f6e:	mov    DWORD PTR [ebp-0x10],eax
64001f71:	push   ebx
64001f72:	push   esi
64001f73:	push   edi
64001f74:	push   eax
64001f75:	lea    eax,[ebp-0xc]
64001f78:	mov    fs:0x0,eax
64001f7e:	call   DWORD PTR ds:0x64052184
64001f84:	mov    ebx,eax
64001f86:	lea    eax,[ebp-0x7c]
64001f89:	push   eax
64001f8a:	call   0x64001dd0
64001f8f:	add    esp,0x4
64001f92:	push   0x0
64001f94:	push   0x0
64001f96:	lea    ecx,[ebp-0x88]
64001f9c:	push   ecx
64001f9d:	lea    edx,[ebp-0x84]
64001fa3:	push   edx
64001fa4:	lea    eax,[ebp-0x80]
64001fa7:	push   eax
64001fa8:	push   0x0
64001faa:	mov    DWORD PTR [ebp-0x4],0x0
64001fb1:	mov    ecx,DWORD PTR [ebp-0x7c]
64001fb4:	push   0x0
64001fb6:	push   ecx
64001fb7:	call   DWORD PTR ds:0x6402c064
64001fbd:	test   eax,eax
64001fbf:	jne    0x640020ef
64001fc5:	call   DWORD PTR ds:0x6402c06c
64001fcb:	push   0xa
64001fcd:	lea    edx,[ebp-0x78]
64001fd0:	push   edx
64001fd1:	push   eax
64001fd2:	call   0x64014559
64001fd7:	mov    eax,DWORD PTR [ebp-0x7c]
64001fda:	add    esp,0xc
64001fdd:	test   eax,eax
64001fdf:	mov    edi,eax
64001fe1:	je     0x6400200f
64001fe3:	push   eax
64001fe4:	call   DWORD PTR ds:0x6402c034
64001fea:	add    eax,0x1
64001fed:	cmp    eax,0x3fffffff
64001ff2:	jle    0x64001ff8
64001ff4:	xor    edi,edi
64001ff6:	jmp    0x6400200f
64001ff8:	lea    esi,[eax+eax*1]
64001ffb:	mov    eax,esi
64001ffd:	call   0x64013cc0
64002002:	mov    eax,esp
64002004:	push   ebx
64002005:	push   esi
64002006:	push   edi
64002007:	push   eax
64002008:	call   0x64001040
6400200d:	mov    edi,eax
6400200f:	push   0x64041b58
64002014:	push   0x21
64002016:	push   0x64041b98
6400201b:	call   0x64002e90
64002020:	mov    ecx,eax
64002022:	add    esp,0xc
64002025:	mov    DWORD PTR [ebp-0x8c],0xf
6400202f:	mov    DWORD PTR [ebp-0x90],0x0
64002039:	mov    BYTE PTR [ebp-0xa0],0x0
64002040:	lea    esi,[ecx+0x1]
64002043:	mov    dl,BYTE PTR [ecx]
64002045:	add    ecx,0x1
64002048:	test   dl,dl
6400204a:	jne    0x64002043
6400204c:	sub    ecx,esi
6400204e:	push   ecx
6400204f:	push   eax
64002050:	lea    ecx,[ebp-0xa4]
64002056:	call   0x64003450
6400205b:	lea    eax,[ebp-0xa4]
64002061:	push   eax
64002062:	lea    esi,[ebp-0xe8]
64002068:	mov    BYTE PTR [ebp-0x4],0x1
6400206c:	call   0x640068a0
64002071:	add    esp,0x4
64002074:	mov    esi,eax
64002076:	push   0x64041b20
6400207b:	push   0x7
6400207d:	push   0x64041b50
64002082:	mov    BYTE PTR [ebp-0x4],0x2
64002086:	call   0x64002e90
6400208b:	add    esp,0xc
6400208e:	push   esi
6400208f:	mov    edi,eax
64002091:	lea    esi,[ebp-0x104]
64002097:	call   0x640068a0
6400209c:	add    esp,0x4
6400209f:	push   eax
640020a0:	lea    edi,[ebp-0x78]
640020a3:	lea    esi,[ebp-0x13c]
640020a9:	mov    BYTE PTR [ebp-0x4],0x3
640020ad:	call   0x640068a0
640020b2:	add    esp,0x4
640020b5:	push   eax
640020b6:	mov    edi,0x64041b1c
640020bb:	lea    esi,[ebp-0x120]
640020c1:	mov    BYTE PTR [ebp-0x4],0x4
640020c5:	call   0x640068a0
640020ca:	add    esp,0x4
640020cd:	push   eax
640020ce:	lea    ecx,[ebp-0xcc]
640020d4:	push   ecx
640020d5:	mov    BYTE PTR [ebp-0x4],0x5
640020d9:	call   0x64001470
640020de:	push   0x64044070
640020e3:	lea    edx,[ebp-0xcc]
640020e9:	push   edx
640020ea:	call   0x64013812
640020ef:	mov    esi,DWORD PTR [ebp-0x80]
640020f2:	mov    DWORD PTR [ebp-0x4],0xffffffff
640020f9:	mov    eax,DWORD PTR [ebp-0x7c]
640020fc:	add    eax,0xfffffff0
640020ff:	lea    ecx,[eax+0xc]
64002102:	or     edx,0xffffffff
64002105:	lock xadd DWORD PTR [ecx],edx
64002109:	dec    edx
6400210a:	test   edx,edx
6400210c:	jg     0x64002118
6400210e:	mov    ecx,DWORD PTR [eax]
64002110:	mov    edx,DWORD PTR [ecx]
64002112:	push   eax
64002113:	mov    eax,DWORD PTR [edx+0x4]
64002116:	call   eax
64002118:	mov    eax,esi
6400211a:	lea    esp,[ebp-0x150]
64002120:	mov    ecx,DWORD PTR [ebp-0xc]
64002123:	mov    DWORD PTR fs:0x0,ecx
6400212a:	pop    ecx
6400212b:	pop    edi
6400212c:	pop    esi
6400212d:	pop    ebx
6400212e:	mov    ecx,DWORD PTR [ebp-0x10]
64002131:	xor    ecx,ebp
64002133:	call   0x64013ca6
64002138:	mov    esp,ebp
6400213a:	pop    ebp
6400213b:	ret    
6400213c:	int3   
6400213d:	int3   
6400213e:	int3   
6400213f:	int3   
64002140:	push   ebp
64002141:	mov    ebp,esp
64002143:	and    esp,0xfffffff8
64002146:	push   ecx
64002147:	push   esi
64002148:	mov    DWORD PTR [esp+0x4],0x0
64002150:	call   0x64001f50
64002155:	mov    ecx,DWORD PTR [ebp+0x10]
64002158:	mov    edx,DWORD PTR [ebp+0xc]
6400215b:	mov    esi,DWORD PTR [ebp+0x8]
6400215e:	push   ecx
6400215f:	push   edx
64002160:	push   eax
64002161:	push   esi
64002162:	call   0x64002330
64002167:	add    esp,0x10
6400216a:	mov    eax,esi
6400216c:	pop    esi
6400216d:	mov    esp,ebp
6400216f:	pop    ebp
64002170:	ret    
64002171:	int3   
64002172:	int3   
64002173:	int3   
64002174:	int3   
64002175:	int3   
64002176:	int3   
64002177:	int3   
64002178:	int3   
64002179:	int3   
6400217a:	int3   
6400217b:	int3   
6400217c:	int3   
6400217d:	int3   
6400217e:	int3   
6400217f:	int3   
64002180:	mov    eax,0x64000000
64002185:	ret    
64002186:	int3   
64002187:	int3   
64002188:	int3   
64002189:	int3   
6400218a:	int3   
6400218b:	int3   
6400218c:	int3   
6400218d:	int3   
6400218e:	int3   
6400218f:	int3   
64002190:	push   ecx
64002191:	mov    eax,DWORD PTR [esp+0xc]
64002195:	push   esi
64002196:	mov    esi,DWORD PTR [esp+0xc]
6400219a:	push   eax
6400219b:	push   esi
6400219c:	mov    DWORD PTR [esp+0xc],0x0
640021a4:	call   0x640021c0
640021a9:	add    esp,0x8
640021ac:	mov    eax,esi
640021ae:	pop    esi
640021af:	pop    ecx
640021b0:	ret    
640021b1:	int3   
640021b2:	int3   
640021b3:	int3   
640021b4:	int3   
640021b5:	int3   
640021b6:	int3   
640021b7:	int3   
640021b8:	int3   
640021b9:	int3   
640021ba:	int3   
640021bb:	int3   
640021bc:	int3   
640021bd:	int3   
640021be:	int3   
640021bf:	int3   
640021c0:	push   0xffffffff
640021c2:	push   0x640232b8
640021c7:	mov    eax,fs:0x0
640021cd:	push   eax
640021ce:	push   ecx
640021cf:	push   ebp
640021d0:	push   esi
640021d1:	mov    eax,ds:0x640521ac
640021d6:	xor    eax,esp
640021d8:	push   eax
640021d9:	lea    eax,[esp+0x10]
640021dd:	mov    fs:0x0,eax
640021e3:	mov    ebp,DWORD PTR [esp+0x20]
640021e7:	mov    DWORD PTR [esp+0xc],0x0
640021ef:	mov    eax,ds:0x640539c4
640021f4:	mov    edx,DWORD PTR [eax+0xc]
640021f7:	mov    ecx,0x640539c4
640021fc:	call   edx
640021fe:	lea    esi,[eax+0x10]
64002201:	mov    DWORD PTR [esp+0xc],esi
64002205:	mov    DWORD PTR [esp+0x18],0x0
6400220d:	mov    eax,DWORD PTR [esi-0x8]
64002210:	mov    ecx,0x1
64002215:	sub    ecx,DWORD PTR [esi-0x4]
64002218:	sub    eax,0x104
6400221d:	or     eax,ecx
6400221f:	jge    0x64002233
64002221:	push   0x104
64002226:	lea    ecx,[esp+0x10]
6400222a:	call   0x640043c0
6400222f:	mov    esi,DWORD PTR [esp+0xc]
64002233:	cmp    DWORD PTR [esi-0x8],0x104
6400223a:	jge    0x64002246
6400223c:	push   0x80070057
64002241:	call   0x64001080
64002246:	push   0x104
6400224b:	push   esi
6400224c:	mov    DWORD PTR [esi-0xc],0x104
64002253:	push   0x64000000
64002258:	mov    WORD PTR [esi+0x208],0x0
64002261:	call   DWORD PTR ds:0x6402c058
64002267:	mov    eax,esi
64002269:	lea    edx,[eax+0x2]
6400226c:	lea    esp,[esp+0x0]
64002270:	mov    cx,WORD PTR [eax]
64002273:	add    eax,0x2
64002276:	test   cx,cx
64002279:	jne    0x64002270
6400227b:	sub    eax,edx
6400227d:	sar    eax,1
6400227f:	js     0x6400223c
64002281:	cmp    eax,DWORD PTR [esi-0x8]
64002284:	jg     0x6400223c
64002286:	cmp    BYTE PTR [esp+0x24],cl
6400228a:	mov    DWORD PTR [esi-0xc],eax
6400228d:	mov    WORD PTR [esi+eax*2],cx
64002291:	je     0x640022bf
64002293:	add    esi,0xfffffff0
64002296:	mov    eax,esi
64002298:	call   0x64004410
6400229d:	add    eax,0x10
640022a0:	mov    DWORD PTR [ebp+0x0],eax
640022a3:	mov    DWORD PTR [esp+0x18],0xffffffff
640022ab:	lea    eax,[esi+0xc]
640022ae:	or     ecx,0xffffffff
640022b1:	lock xadd DWORD PTR [eax],ecx
640022b5:	dec    ecx
640022b6:	test   ecx,ecx
640022b8:	jg     0x64002315
640022ba:	mov    ecx,DWORD PTR [esi]
640022bc:	push   esi
640022bd:	jmp    0x6400230e
640022bf:	push   0x5c
640022c1:	push   esi
640022c2:	call   0x64014ac1
640022c7:	add    esp,0x8
640022ca:	test   eax,eax
640022cc:	je     0x640022d9
640022ce:	sub    eax,esi
640022d0:	sar    eax,1
640022d2:	mov    ecx,eax
640022d4:	cmp    ecx,0xffffffff
640022d7:	jne    0x640022dd
640022d9:	xor    ecx,ecx
640022db:	jmp    0x640022e0
640022dd:	add    ecx,0x1
640022e0:	mov    eax,DWORD PTR [esi-0xc]
640022e3:	sub    eax,ecx
640022e5:	lea    ecx,[esp+0xc]
640022e9:	push   ecx
640022ea:	mov    ecx,ebp
640022ec:	call   0x64002c70
640022f1:	lea    eax,[esi-0x10]
640022f4:	mov    DWORD PTR [esp+0x18],0xffffffff
640022fc:	lea    edx,[eax+0xc]
640022ff:	or     ecx,0xffffffff
64002302:	lock xadd DWORD PTR [edx],ecx
64002306:	dec    ecx
64002307:	test   ecx,ecx
64002309:	jg     0x64002315
6400230b:	mov    ecx,DWORD PTR [eax]
6400230d:	push   eax
6400230e:	mov    edx,DWORD PTR [ecx]
64002310:	mov    eax,DWORD PTR [edx+0x4]
64002313:	call   eax
64002315:	mov    eax,ebp
64002317:	mov    ecx,DWORD PTR [esp+0x10]
6400231b:	mov    DWORD PTR fs:0x0,ecx
64002322:	pop    ecx
64002323:	pop    esi
64002324:	pop    ebp
64002325:	add    esp,0x10
64002328:	ret    
64002329:	int3   
6400232a:	int3   
6400232b:	int3   
6400232c:	int3   
6400232d:	int3   
6400232e:	int3   
6400232f:	int3   
64002330:	push   ebp
64002331:	mov    ebp,esp
64002333:	push   0xffffffff
64002335:	push   0x64023a2f
6400233a:	mov    eax,fs:0x0
64002340:	push   eax
64002341:	sub    esp,0xa0c
64002347:	mov    eax,ds:0x640521ac
6400234c:	xor    eax,ebp
6400234e:	mov    DWORD PTR [ebp-0x10],eax
64002351:	push   ebx
64002352:	push   esi
64002353:	push   edi
64002354:	push   eax
64002355:	lea    eax,[ebp-0xc]
64002358:	mov    fs:0x0,eax
6400235e:	mov    esi,DWORD PTR [ebp+0x14]
64002361:	mov    ecx,DWORD PTR [ebp+0x10]
64002364:	mov    edx,DWORD PTR [ebp+0xc]
64002367:	mov    edi,DWORD PTR [ebp+0x8]
6400236a:	xor    eax,eax
6400236c:	mov    DWORD PTR [ebp-0x4],eax
6400236f:	mov    DWORD PTR [ebp-0x2c],eax
64002372:	lea    eax,[esi+esi*4]
64002375:	lea    eax,[ecx+eax*2]
64002378:	add    edx,eax
6400237a:	lea    eax,[ebp-0xa18]
64002380:	mov    DWORD PTR [ebp-0x30],edi
64002383:	call   0x640017a0
64002388:	mov    ebx,0x1
6400238d:	test   BYTE PTR ds:0x6405466c,bl
64002393:	jne    0x64002449
64002399:	or     DWORD PTR ds:0x6405466c,ebx
6400239f:	push   0x64041cac
640023a4:	push   0x3
640023a6:	mov    ecx,0x64041ca4
640023ab:	mov    DWORD PTR [ebp-0x4],ebx
640023ae:	call   0x64003090
640023b3:	push   0x64041c7c
640023b8:	push   0x3
640023ba:	mov    ecx,0x64041c74
640023bf:	mov    ds:0x640544f4,eax
640023c4:	mov    DWORD PTR ds:0x640544f8,ebx
640023ca:	call   0x64003090
640023cf:	push   0x64041c48
640023d4:	push   0x0
640023d6:	mov    ecx,0x640419fc
640023db:	mov    ds:0x640544fc,eax
640023e0:	mov    DWORD PTR ds:0x64054500,ebx
640023e6:	call   0x64003090
640023eb:	push   0x64041c08
640023f0:	push   0x0
640023f2:	mov    ecx,0x640419fc
640023f7:	mov    ds:0x64054504,eax
640023fc:	mov    DWORD PTR ds:0x64054508,ebx
64002402:	call   0x64003090
64002407:	push   0x64041bc8
6400240c:	push   0x4
6400240e:	mov    ecx,0x64041bbc
64002413:	mov    ds:0x6405450c,eax
64002418:	mov    DWORD PTR ds:0x64054510,ebx
6400241e:	call   0x64003090
64002423:	add    esp,0x28
64002426:	mov    ds:0x64054514,eax
6400242b:	mov    DWORD PTR ds:0x64054518,ebx
64002431:	mov    DWORD PTR ds:0x6405451c,0x640419fc
6400243b:	mov    DWORD PTR ds:0x64054520,0x2
64002445:	mov    BYTE PTR [ebp-0x4],0x0
64002449:	lea    ecx,[esi-0x1]
6400244c:	cmp    ecx,0x5
6400244f:	ja     0x6400246a
64002451:	mov    eax,DWORD PTR [ebp+0x10]
64002454:	lea    edx,[esi+esi*2]
64002457:	lea    eax,[eax+edx*2]
6400245a:	mov    ecx,DWORD PTR [eax*8+0x640544c4]
64002461:	mov    esi,DWORD PTR [eax*8+0x640544c8]
64002468:	jmp    0x64002471
6400246a:	mov    ecx,0x640419fc
6400246f:	xor    esi,esi
64002471:	push   edi
64002472:	call   0x64002ad0
64002477:	xor    ecx,ecx
64002479:	mov    eax,esi
6400247b:	sub    eax,ebx
6400247d:	mov    DWORD PTR [ebp-0x4],ecx
64002480:	mov    DWORD PTR [ebp-0x2c],ebx
64002483:	je     0x6400259f
64002489:	sub    eax,ebx
6400248b:	jne    0x6400257b
64002491:	mov    DWORD PTR [ebp-0x1c],eax
64002494:	mov    DWORD PTR [ebp-0x18],eax
64002497:	mov    DWORD PTR [ebp-0x14],eax
6400249a:	or     ebx,0xffffffff
6400249d:	lea    eax,[ebp-0xa18]
640024a3:	call   0x640017e0
640024a8:	mov    DWORD PTR [ebp-0x20],eax
640024ab:	or     ebx,0xffffffff
640024ae:	lea    eax,[ebp-0xa18]
640024b4:	call   0x640017e0
640024b9:	mov    DWORD PTR [ebp-0x1c],eax
640024bc:	or     ebx,0xffffffff
640024bf:	lea    eax,[ebp-0xa18]
640024c5:	call   0x640017e0
640024ca:	mov    DWORD PTR [ebp-0x18],eax
640024cd:	or     ebx,0xffffffff
640024d0:	lea    eax,[ebp-0xa18]
640024d6:	call   0x640017e0
640024db:	mov    DWORD PTR [ebp-0x14],eax
640024de:	call   DWORD PTR ds:0x64052184
640024e4:	lea    ecx,[ebp-0x20]
640024e7:	push   ecx
640024e8:	lea    esi,[ebp-0x4c]
640024eb:	mov    DWORD PTR [ebp-0x24],eax
640024ee:	call   0x64001b00
640024f3:	add    esp,0x4
640024f6:	mov    DWORD PTR [ebp-0x4],0x2
640024fd:	cmp    DWORD PTR [eax+0x18],0x10
64002501:	jb     0x64002508
64002503:	mov    ebx,DWORD PTR [eax+0x4]
64002506:	jmp    0x6400250b
64002508:	lea    ebx,[eax+0x4]
6400250b:	test   ebx,ebx
6400250d:	jne    0x64002515
6400250f:	xor    eax,eax
64002511:	xor    ecx,ecx
64002513:	jmp    0x64002561
64002515:	push   ebx
64002516:	call   DWORD PTR ds:0x6402c070
6400251c:	mov    esi,eax
6400251e:	add    esi,0x1
64002521:	cmp    esi,0x3fffffff
64002527:	jle    0x6400252f
64002529:	xor    eax,eax
6400252b:	xor    ecx,ecx
6400252d:	jmp    0x64002561
6400252f:	lea    eax,[esi+esi*1]
64002532:	call   0x64013cc0
64002537:	mov    edx,DWORD PTR [ebp-0x24]
6400253a:	mov    eax,esp
6400253c:	push   edx
6400253d:	push   esi
6400253e:	push   ebx
6400253f:	push   eax
64002540:	call   0x64001000
64002545:	test   eax,eax
64002547:	jne    0x6400254d
64002549:	xor    ecx,ecx
6400254b:	jmp    0x64002561
6400254d:	mov    ecx,eax
6400254f:	lea    esi,[ecx+0x2]
64002552:	mov    dx,WORD PTR [ecx]
64002555:	add    ecx,0x2
64002558:	test   dx,dx
6400255b:	jne    0x64002552
6400255d:	sub    ecx,esi
6400255f:	sar    ecx,1
64002561:	push   ecx
64002562:	push   eax
64002563:	push   edi
64002564:	call   0x640036b0
64002569:	cmp    DWORD PTR [ebp-0x34],0x10
6400256d:	jb     0x6400257b
6400256f:	mov    eax,DWORD PTR [ebp-0x48]
64002572:	push   eax
64002573:	call   0x640135e4
64002578:	add    esp,0x4
6400257b:	mov    eax,edi
6400257d:	lea    esp,[ebp-0xa28]
64002583:	mov    ecx,DWORD PTR [ebp-0xc]
64002586:	mov    DWORD PTR fs:0x0,ecx
6400258d:	pop    ecx
6400258e:	pop    edi
6400258f:	pop    esi
64002590:	pop    ebx
64002591:	mov    ecx,DWORD PTR [ebp-0x10]
64002594:	xor    ecx,ebp
64002596:	call   0x64013ca6
6400259b:	mov    esp,ebp
6400259d:	pop    ebp
6400259e:	ret    
6400259f:	mov    DWORD PTR [ebp-0x24],ecx
640025a2:	jmp    0x640025b0
640025a4:	lea    esp,[esp+0x0]
640025ab:	jmp    0x640025b0
640025ad:	lea    ecx,[ecx+0x0]
640025b0:	mov    ebx,0x23
640025b5:	lea    eax,[ebp-0xa18]
640025bb:	call   0x640017e0
640025c0:	cmp    eax,0xa
640025c3:	jae    0x640025d0
640025c5:	add    eax,0x30
640025c8:	movzx  ecx,ax
640025cb:	mov    DWORD PTR [ebp-0x28],ecx
640025ce:	jmp    0x640025d9
640025d0:	add    eax,0x57
640025d3:	movzx  edx,ax
640025d6:	mov    DWORD PTR [ebp-0x28],edx
640025d9:	mov    eax,DWORD PTR [edi]
640025db:	mov    ebx,DWORD PTR [eax-0xc]
640025de:	mov    ecx,0x1
640025e3:	sub    ecx,DWORD PTR [eax-0x4]
640025e6:	mov    eax,DWORD PTR [eax-0x8]
640025e9:	lea    esi,[ebx+0x1]
640025ec:	sub    eax,esi
640025ee:	or     eax,ecx
640025f0:	jge    0x640025fa
640025f2:	push   esi
640025f3:	mov    ecx,edi
640025f5:	call   0x640043c0
640025fa:	test   esi,esi
640025fc:	mov    eax,DWORD PTR [edi]
640025fe:	mov    cx,WORD PTR [ebp-0x28]
64002602:	mov    WORD PTR [eax+ebx*2],cx
64002606:	jl     0x6400262d
64002608:	mov    eax,DWORD PTR [edi]
6400260a:	cmp    esi,DWORD PTR [eax-0x8]
6400260d:	jg     0x6400262d
6400260f:	mov    DWORD PTR [eax-0xc],esi
64002612:	mov    eax,DWORD PTR [ebp-0x24]
64002615:	mov    edx,DWORD PTR [edi]
64002617:	add    eax,0x1
6400261a:	cmp    eax,0x5
6400261d:	mov    WORD PTR [edx+esi*2],0x0
64002623:	mov    DWORD PTR [ebp-0x24],eax
64002626:	jl     0x640025b0
64002628:	jmp    0x6400257b
6400262d:	push   0x80070057
64002632:	call   0x64001080
64002637:	int3   
64002638:	int3   
64002639:	int3   
6400263a:	int3   
6400263b:	int3   
6400263c:	int3   
6400263d:	int3   
6400263e:	int3   
6400263f:	int3   
64002640:	push   0xffffffff
64002642:	push   0x64023c81
64002647:	mov    eax,fs:0x0
6400264d:	push   eax
6400264e:	sub    esp,0xc
64002651:	push   ebx
64002652:	push   esi
64002653:	push   edi
64002654:	mov    eax,ds:0x640521ac
64002659:	xor    eax,esp
6400265b:	push   eax
6400265c:	lea    eax,[esp+0x1c]
64002660:	mov    fs:0x0,eax
64002666:	xor    ebx,ebx
64002668:	mov    DWORD PTR [esp+0x24],ebx
6400266c:	mov    DWORD PTR [esp+0x10],ebx
64002670:	mov    eax,ds:0x640539c4
64002675:	mov    edx,DWORD PTR [eax+0xc]
64002678:	mov    ecx,0x640539c4
6400267d:	call   edx
6400267f:	mov    esi,DWORD PTR [esp+0x2c]
64002683:	add    eax,0x10
64002686:	mov    DWORD PTR [esi],eax
64002688:	cmp    BYTE PTR [esp+0x30],bl
6400268c:	mov    edi,0x1
64002691:	mov    DWORD PTR [esp+0x24],ebx
64002695:	mov    DWORD PTR [esp+0x10],edi
64002699:	je     0x640026dd
6400269b:	lea    eax,[esp+0x14]
6400269f:	push   eax
640026a0:	call   0x64001c70
640026a5:	add    esp,0x4
640026a8:	mov    DWORD PTR [esp+0x24],edi
640026ac:	mov    eax,DWORD PTR [eax]
640026ae:	mov    ecx,DWORD PTR [eax-0xc]
640026b1:	push   ecx
640026b2:	push   eax
640026b3:	push   esi
640026b4:	call   0x640036b0
640026b9:	mov    BYTE PTR [esp+0x24],bl
640026bd:	mov    eax,DWORD PTR [esp+0x14]
640026c1:	add    eax,0xfffffff0
640026c4:	lea    ecx,[eax+0xc]
640026c7:	or     edx,0xffffffff
640026ca:	lock xadd DWORD PTR [ecx],edx
640026ce:	dec    edx
640026cf:	test   edx,edx
640026d1:	jg     0x640026dd
640026d3:	mov    ecx,DWORD PTR [eax]
640026d5:	mov    edx,DWORD PTR [ecx]
640026d7:	push   eax
640026d8:	mov    eax,DWORD PTR [edx+0x4]
640026db:	call   eax
640026dd:	push   edi
640026de:	lea    ecx,[esp+0x1c]
640026e2:	push   0x2
640026e4:	push   ecx
640026e5:	call   0x64002140
640026ea:	mov    edi,eax
640026ec:	push   0x64041cdc
640026f1:	push   0x4
640026f3:	mov    ecx,0x64041d00
640026f8:	mov    DWORD PTR [esp+0x38],0x2
64002700:	call   0x64003090
64002705:	lea    edx,[esp+0x28]
64002709:	push   edi
6400270a:	push   edx
6400270b:	mov    ebx,eax
6400270d:	call   0x64002cf0
64002712:	add    esp,0x1c
64002715:	mov    BYTE PTR [esp+0x24],0x3
6400271a:	mov    eax,DWORD PTR [eax]
6400271c:	mov    ecx,DWORD PTR [eax-0xc]
6400271f:	push   ecx
64002720:	push   eax
64002721:	push   esi
64002722:	call   0x640036b0
64002727:	mov    BYTE PTR [esp+0x24],0x2
6400272c:	mov    eax,DWORD PTR [esp+0x14]
64002730:	add    eax,0xfffffff0
64002733:	lea    ecx,[eax+0xc]
64002736:	or     edx,0xffffffff
64002739:	lock xadd DWORD PTR [ecx],edx
6400273d:	dec    edx
6400273e:	test   edx,edx
64002740:	jg     0x6400274c
64002742:	mov    ecx,DWORD PTR [eax]
64002744:	mov    edx,DWORD PTR [ecx]
64002746:	push   eax
64002747:	mov    eax,DWORD PTR [edx+0x4]
6400274a:	call   eax
6400274c:	mov    BYTE PTR [esp+0x24],0x0
64002751:	mov    eax,DWORD PTR [esp+0x18]
64002755:	add    eax,0xfffffff0
64002758:	lea    ecx,[eax+0xc]
6400275b:	or     edx,0xffffffff
6400275e:	lock xadd DWORD PTR [ecx],edx
64002762:	dec    edx
64002763:	test   edx,edx
64002765:	jg     0x64002771
64002767:	mov    ecx,DWORD PTR [eax]
64002769:	mov    edx,DWORD PTR [ecx]
6400276b:	push   eax
6400276c:	mov    eax,DWORD PTR [edx+0x4]
6400276f:	call   eax
64002771:	mov    eax,esi
64002773:	mov    ecx,DWORD PTR [esp+0x1c]
64002777:	mov    DWORD PTR fs:0x0,ecx
6400277e:	pop    ecx
6400277f:	pop    edi
64002780:	pop    esi
64002781:	pop    ebx
64002782:	add    esp,0x18
64002785:	ret    
64002786:	int3   
64002787:	int3   
64002788:	int3   
64002789:	int3   
6400278a:	int3   
6400278b:	int3   
6400278c:	int3   
6400278d:	int3   
6400278e:	int3   
6400278f:	int3   
64002790:	push   0xffffffff
64002792:	push   0x64022f83
64002797:	mov    eax,fs:0x0
6400279d:	push   eax
6400279e:	sub    esp,0x434
640027a4:	mov    eax,ds:0x640521ac
640027a9:	xor    eax,esp
640027ab:	mov    DWORD PTR [esp+0x430],eax
640027b2:	push   ebx
640027b3:	push   ebp
640027b4:	push   esi
640027b5:	push   edi
640027b6:	mov    eax,ds:0x640521ac
640027bb:	xor    eax,esp
640027bd:	push   eax
640027be:	lea    eax,[esp+0x448]
640027c5:	mov    fs:0x0,eax
640027cb:	mov    eax,DWORD PTR [esp+0x458]
640027d2:	push   eax
640027d3:	push   0x18
640027d5:	mov    DWORD PTR [esp+0x458],0x0
640027e0:	call   0x64012e9e
640027e5:	mov    esi,eax
640027e7:	mov    DWORD PTR [esp+0x18],esi
640027eb:	or     ebp,0xffffffff
640027ee:	cmp    esi,ebp
640027f0:	mov    BYTE PTR [esp+0x450],0x1
640027f8:	jne    0x64002826
640027fa:	call   DWORD PTR ds:0x6402c06c
64002800:	push   ebp
64002801:	mov    esi,eax
64002803:	call   DWORD PTR ds:0x6402c078
64002809:	push   esi
6400280a:	call   DWORD PTR ds:0x6402c074
64002810:	mov    DWORD PTR [esp+0x450],ebp
64002817:	mov    eax,DWORD PTR [esp+0x45c]
6400281e:	add    eax,0xfffffff0
64002821:	jmp    0x640028e2
64002826:	lea    ecx,[esp+0x1c]
6400282a:	push   ecx
6400282b:	push   esi
6400282c:	mov    DWORD PTR [esp+0x24],0x428
64002834:	call   0x64012ea4
64002839:	test   eax,eax
6400283b:	jne    0x64002872
6400283d:	test   esi,esi
6400283f:	je     0x64002857
64002841:	call   DWORD PTR ds:0x6402c06c
64002847:	push   esi
64002848:	mov    edi,eax
6400284a:	call   DWORD PTR ds:0x6402c078
64002850:	push   edi
64002851:	call   DWORD PTR ds:0x6402c074
64002857:	mov    DWORD PTR [esp+0x450],ebp
6400285e:	mov    eax,DWORD PTR [esp+0x45c]
64002865:	add    eax,0xfffffff0
64002868:	lea    edx,[eax+0xc]
6400286b:	lock xadd DWORD PTR [edx],ebp
6400286f:	dec    ebp
64002870:	jmp    0x640028ea
64002872:	mov    edi,DWORD PTR [esp+0x45c]
64002879:	lea    esp,[esp+0x0]
64002880:	cmp    DWORD PTR [edi-0x4],0x1
64002884:	jle    0x6400289d
64002886:	mov    ecx,DWORD PTR [edi-0xc]
64002889:	push   ecx
6400288a:	lea    ecx,[esp+0x460]
64002891:	call   0x64003800
64002896:	mov    edi,DWORD PTR [esp+0x45c]
6400289d:	lea    edx,[esp+0x3c]
640028a1:	push   edi
640028a2:	push   edx
640028a3:	call   0x64014a30
640028a8:	add    esp,0x8
640028ab:	test   eax,eax
640028ad:	je     0x64002922
640028af:	lea    eax,[esp+0x1c]
640028b3:	push   eax
640028b4:	push   esi
640028b5:	call   0x64012eaa
640028ba:	test   eax,eax
640028bc:	jne    0x64002880
640028be:	test   esi,esi
640028c0:	je     0x640028d8
640028c2:	call   DWORD PTR ds:0x6402c06c
640028c8:	push   esi
640028c9:	mov    ebx,eax
640028cb:	call   DWORD PTR ds:0x6402c078
640028d1:	push   ebx
640028d2:	call   DWORD PTR ds:0x6402c074
640028d8:	mov    DWORD PTR [esp+0x450],ebp
640028df:	lea    eax,[edi-0x10]
640028e2:	lea    ecx,[eax+0xc]
640028e5:	lock xadd DWORD PTR [ecx],ebp
640028e9:	dec    ebp
640028ea:	test   ebp,ebp
640028ec:	jg     0x640028f8
640028ee:	mov    ecx,DWORD PTR [eax]
640028f0:	mov    edx,DWORD PTR [ecx]
640028f2:	push   eax
640028f3:	mov    eax,DWORD PTR [edx+0x4]
640028f6:	call   eax
640028f8:	xor    al,al
640028fa:	mov    ecx,DWORD PTR [esp+0x448]
64002901:	mov    DWORD PTR fs:0x0,ecx
64002908:	pop    ecx
64002909:	pop    edi
6400290a:	pop    esi
6400290b:	pop    ebp
6400290c:	pop    ebx
6400290d:	mov    ecx,DWORD PTR [esp+0x430]
64002914:	xor    ecx,esp
64002916:	call   0x64013ca6
6400291b:	add    esp,0x440
64002921:	ret    
64002922:	test   esi,esi
64002924:	je     0x6400293c
64002926:	call   DWORD PTR ds:0x6402c06c
6400292c:	push   esi
6400292d:	mov    ebx,eax
6400292f:	call   DWORD PTR ds:0x6402c078
64002935:	push   ebx
64002936:	call   DWORD PTR ds:0x6402c074
6400293c:	lea    eax,[edi-0x10]
6400293f:	mov    DWORD PTR [esp+0x450],ebp
64002946:	lea    ecx,[eax+0xc]
64002949:	lock xadd DWORD PTR [ecx],ebp
6400294d:	dec    ebp
6400294e:	test   ebp,ebp
64002950:	jg     0x6400295c
64002952:	mov    ecx,DWORD PTR [eax]
64002954:	mov    edx,DWORD PTR [ecx]
64002956:	push   eax
64002957:	mov    eax,DWORD PTR [edx+0x4]
6400295a:	call   eax
6400295c:	mov    al,0x1
6400295e:	jmp    0x640028fa
64002960:	xor    ax,ax
64002963:	ret    
64002964:	int3   
64002965:	int3   
64002966:	int3   
64002967:	int3   
64002968:	int3   
64002969:	int3   
6400296a:	int3   
6400296b:	int3   
6400296c:	int3   
6400296d:	int3   
6400296e:	int3   
6400296f:	int3   
64002970:	mov    edx,DWORD PTR [esp+0x4]
64002974:	push   esi
64002975:	mov    esi,ecx
64002977:	mov    eax,edx
64002979:	push   edi
6400297a:	mov    DWORD PTR [esi+0x18],0xf
64002981:	mov    DWORD PTR [esi+0x14],0x0
64002988:	mov    BYTE PTR [esi+0x4],0x0
6400298c:	lea    edi,[eax+0x1]
6400298f:	nop
64002990:	mov    cl,BYTE PTR [eax]
64002992:	add    eax,0x1
64002995:	test   cl,cl
64002997:	jne    0x64002990
64002999:	sub    eax,edi
6400299b:	push   eax
6400299c:	push   edx
6400299d:	mov    ecx,esi
6400299f:	call   0x64003450
640029a4:	pop    edi
640029a5:	mov    eax,esi
640029a7:	pop    esi
640029a8:	ret    0x4
640029ab:	int3   
640029ac:	int3   
640029ad:	int3   
640029ae:	int3   
640029af:	int3   
640029b0:	push   esi
640029b1:	mov    esi,ecx
640029b3:	cmp    DWORD PTR [esi+0x18],0x10
640029b7:	jb     0x640029c5
640029b9:	mov    eax,DWORD PTR [esi+0x4]
640029bc:	push   eax
640029bd:	call   0x640135e4
640029c2:	add    esp,0x4
640029c5:	xor    eax,eax
640029c7:	mov    DWORD PTR [esi+0x18],0xf
640029ce:	mov    DWORD PTR [esi+0x14],eax
640029d1:	mov    BYTE PTR [esi+0x4],al
640029d4:	pop    esi
640029d5:	ret    
640029d6:	int3   
640029d7:	int3   
640029d8:	int3   
640029d9:	int3   
640029da:	int3   
640029db:	int3   
640029dc:	int3   
640029dd:	int3   
640029de:	int3   
640029df:	int3   
640029e0:	mov    ecx,DWORD PTR [esp+0x4]
640029e4:	push   ebx
640029e5:	push   ebp
640029e6:	mov    ebp,DWORD PTR [esp+0x10]
640029ea:	push   esi
640029eb:	mov    esi,eax
640029ed:	mov    edx,DWORD PTR [esi+0x18]
640029f0:	cmp    edx,0x10
640029f3:	push   edi
640029f4:	lea    ebx,[esi+0x4]
640029f7:	jb     0x640029fd
640029f9:	mov    eax,DWORD PTR [ebx]
640029fb:	jmp    0x640029ff
640029fd:	mov    eax,ebx
640029ff:	cmp    ecx,eax
64002a01:	jb     0x64002a30
64002a03:	cmp    edx,0x10
64002a06:	jb     0x64002a0c
64002a08:	mov    eax,DWORD PTR [ebx]
64002a0a:	jmp    0x64002a0e
64002a0c:	mov    eax,ebx
64002a0e:	mov    edi,DWORD PTR [esi+0x14]
64002a11:	add    edi,eax
64002a13:	cmp    edi,ecx
64002a15:	jbe    0x64002a30
64002a17:	cmp    edx,0x10
64002a1a:	jb     0x64002a1e
64002a1c:	mov    ebx,DWORD PTR [ebx]
64002a1e:	sub    ecx,ebx
64002a20:	push   ecx
64002a21:	push   esi
64002a22:	mov    eax,ebp
64002a24:	call   0x64003280
64002a29:	pop    edi
64002a2a:	pop    esi
64002a2b:	pop    ebp
64002a2c:	pop    ebx
64002a2d:	ret    0x8
64002a30:	mov    eax,DWORD PTR [esi+0x14]
64002a33:	or     ecx,0xffffffff
64002a36:	sub    ecx,eax
64002a38:	cmp    ecx,ebp
64002a3a:	jbe    0x64002a43
64002a3c:	lea    edx,[eax+ebp*1]
64002a3f:	cmp    edx,eax
64002a41:	jae    0x64002a48
64002a43:	call   0x64012ebc
64002a48:	test   ebp,ebp
64002a4a:	jbe    0x64002ac0
64002a4c:	mov    edi,DWORD PTR [esi+0x14]
64002a4f:	add    edi,ebp
64002a51:	cmp    edi,0xfffffffe
64002a54:	jbe    0x64002a5b
64002a56:	call   0x64012ebc
64002a5b:	mov    eax,DWORD PTR [esi+0x18]
64002a5e:	cmp    eax,edi
64002a60:	jae    0x64002a7e
64002a62:	mov    eax,DWORD PTR [esi+0x14]
64002a65:	push   eax
64002a66:	push   edi
64002a67:	mov    ecx,esi
64002a69:	call   0x640040c0
64002a6e:	test   edi,edi
64002a70:	jbe    0x64002ac0
64002a72:	mov    eax,DWORD PTR [esi+0x18]
64002a75:	cmp    eax,0x10
64002a78:	jb     0x64002a98
64002a7a:	mov    edx,DWORD PTR [ebx]
64002a7c:	jmp    0x64002a9a
64002a7e:	test   edi,edi
64002a80:	jne    0x64002a70
64002a82:	cmp    eax,0x10
64002a85:	mov    DWORD PTR [esi+0x14],edi
64002a88:	jb     0x64002a8c
64002a8a:	mov    ebx,DWORD PTR [ebx]
64002a8c:	pop    edi
64002a8d:	mov    eax,esi
64002a8f:	pop    esi
64002a90:	pop    ebp
64002a91:	mov    BYTE PTR [ebx],0x0
64002a94:	pop    ebx
64002a95:	ret    0x8
64002a98:	mov    edx,ebx
64002a9a:	mov    ecx,DWORD PTR [esi+0x14]
64002a9d:	push   ebp
64002a9e:	mov    ebp,DWORD PTR [esp+0x18]
64002aa2:	sub    eax,ecx
64002aa4:	push   ebp
64002aa5:	push   eax
64002aa6:	add    ecx,edx
64002aa8:	push   ecx
64002aa9:	call   0x6401373c
64002aae:	add    esp,0x10
64002ab1:	cmp    DWORD PTR [esi+0x18],0x10
64002ab5:	mov    DWORD PTR [esi+0x14],edi
64002ab8:	jb     0x64002abc
64002aba:	mov    ebx,DWORD PTR [ebx]
64002abc:	mov    BYTE PTR [ebx+edi*1],0x0
64002ac0:	pop    edi
64002ac1:	mov    eax,esi
64002ac3:	pop    esi
64002ac4:	pop    ebp
64002ac5:	pop    ebx
64002ac6:	ret    0x8
64002ac9:	int3   
64002aca:	int3   
64002acb:	int3   
64002acc:	int3   
64002acd:	int3   
64002ace:	int3   
64002acf:	int3   
64002ad0:	push   0xffffffff
64002ad2:	push   0x640233e8
64002ad7:	mov    eax,fs:0x0
64002add:	push   eax
64002ade:	push   ebx
64002adf:	push   esi
64002ae0:	push   edi
64002ae1:	mov    eax,ds:0x640521ac
64002ae6:	xor    eax,esp
64002ae8:	push   eax
64002ae9:	lea    eax,[esp+0x10]
64002aed:	mov    fs:0x0,eax
64002af3:	mov    esi,ecx
64002af5:	mov    ebx,DWORD PTR [esp+0x20]
64002af9:	mov    eax,ds:0x640539c4
64002afe:	mov    edx,DWORD PTR [eax+0xc]
64002b01:	mov    ecx,0x640539c4
64002b06:	call   edx
64002b08:	add    eax,0x10
64002b0b:	mov    DWORD PTR [ebx],eax
64002b0d:	test   esi,esi
64002b0f:	mov    DWORD PTR [esp+0x18],0x0
64002b17:	je     0x64002b3e
64002b19:	test   esi,0xffff0000
64002b1f:	jne    0x64002b42
64002b21:	movzx  esi,si
64002b24:	push   0x0
64002b26:	push   esi
64002b27:	call   0x640011b0
64002b2c:	add    esp,0x8
64002b2f:	test   eax,eax
64002b31:	je     0x64002b5f
64002b33:	push   esi
64002b34:	push   eax
64002b35:	mov    ecx,ebx
64002b37:	call   0x64004b70
64002b3c:	jmp    0x64002b5f
64002b3e:	xor    eax,eax
64002b40:	jmp    0x64002b56
64002b42:	mov    eax,esi
64002b44:	lea    edx,[eax+0x2]
64002b47:	mov    cx,WORD PTR [eax]
64002b4a:	add    eax,0x2
64002b4d:	test   cx,cx
64002b50:	jne    0x64002b47
64002b52:	sub    eax,edx
64002b54:	sar    eax,1
64002b56:	push   esi
64002b57:	push   ebx
64002b58:	mov    edi,eax
64002b5a:	call   0x64004310
64002b5f:	mov    eax,ebx
64002b61:	mov    ecx,DWORD PTR [esp+0x10]
64002b65:	mov    DWORD PTR fs:0x0,ecx
64002b6c:	pop    ecx
64002b6d:	pop    edi
64002b6e:	pop    esi
64002b6f:	pop    ebx
64002b70:	add    esp,0xc
64002b73:	ret    0x4
64002b76:	int3   
64002b77:	int3   
64002b78:	int3   
64002b79:	int3   
64002b7a:	int3   
64002b7b:	int3   
64002b7c:	int3   
64002b7d:	int3   
64002b7e:	int3   
64002b7f:	int3   
64002b80:	push   0xffffffff
64002b82:	push   0x640233b8
64002b87:	mov    eax,fs:0x0
64002b8d:	push   eax
64002b8e:	push   ecx
64002b8f:	push   esi
64002b90:	push   edi
64002b91:	mov    eax,ds:0x640521ac
64002b96:	xor    eax,esp
64002b98:	push   eax
64002b99:	lea    eax,[esp+0x10]
64002b9d:	mov    fs:0x0,eax
64002ba3:	mov    esi,ecx
64002ba5:	mov    DWORD PTR [esp+0xc],esi
64002ba9:	mov    eax,ds:0x640539c4
64002bae:	mov    edx,DWORD PTR [eax+0xc]
64002bb1:	mov    ecx,0x640539c4
64002bb6:	call   edx
64002bb8:	add    eax,0x10
64002bbb:	mov    DWORD PTR [esi],eax
64002bbd:	mov    eax,DWORD PTR [esp+0x20]
64002bc1:	test   eax,eax
64002bc3:	mov    DWORD PTR [esp+0x18],0x0
64002bcb:	je     0x64002bf1
64002bcd:	test   eax,0xffff0000
64002bd2:	jne    0x64002bf1
64002bd4:	movzx  edi,ax
64002bd7:	push   0x0
64002bd9:	push   edi
64002bda:	call   0x640011b0
64002bdf:	add    esp,0x8
64002be2:	test   eax,eax
64002be4:	je     0x64002bf9
64002be6:	push   edi
64002be7:	push   eax
64002be8:	mov    ecx,esi
64002bea:	call   0x64004b70
64002bef:	jmp    0x64002bf9
64002bf1:	push   eax
64002bf2:	mov    ecx,esi
64002bf4:	call   0x640035f0
64002bf9:	mov    eax,esi
64002bfb:	mov    ecx,DWORD PTR [esp+0x10]
64002bff:	mov    DWORD PTR fs:0x0,ecx
64002c06:	pop    ecx
64002c07:	pop    edi
64002c08:	pop    esi
64002c09:	add    esp,0x10
64002c0c:	ret    0x4
64002c0f:	int3   
64002c10:	mov    eax,DWORD PTR [edi]
64002c12:	mov    edx,DWORD PTR [eax-0x8]
64002c15:	push   ebx
64002c16:	mov    ebx,DWORD PTR [eax-0xc]
64002c19:	push   esi
64002c1a:	mov    ecx,0x1
64002c1f:	sub    ecx,DWORD PTR [eax-0x4]
64002c22:	lea    esi,[ebx+0x1]
64002c25:	sub    edx,esi
64002c27:	or     ecx,edx
64002c29:	jge    0x64002c33
64002c2b:	push   esi
64002c2c:	mov    ecx,edi
64002c2e:	call   0x640043c0
64002c33:	test   esi,esi
64002c35:	mov    eax,DWORD PTR [edi]
64002c37:	mov    cx,WORD PTR [esp+0xc]
64002c3c:	mov    WORD PTR [eax+ebx*2],cx
64002c40:	jl     0x64002c5b
64002c42:	mov    eax,DWORD PTR [edi]
64002c44:	cmp    esi,DWORD PTR [eax-0x8]
64002c47:	jg     0x64002c5b
64002c49:	mov    DWORD PTR [eax-0xc],esi
64002c4c:	mov    edx,DWORD PTR [edi]
64002c4e:	mov    WORD PTR [edx+esi*2],0x0
64002c54:	pop    esi
64002c55:	mov    eax,edi
64002c57:	pop    ebx
64002c58:	ret    0x4
64002c5b:	push   0x80070057
64002c60:	call   0x64001080
64002c65:	int3   
64002c66:	int3   
64002c67:	int3   
64002c68:	int3   
64002c69:	int3   
64002c6a:	int3   
64002c6b:	int3   
64002c6c:	int3   
64002c6d:	int3   
64002c6e:	int3   
64002c6f:	int3   
64002c70:	push   ebx
64002c71:	push   ebp
64002c72:	mov    ebp,DWORD PTR [esp+0xc]
64002c76:	push   esi
64002c77:	mov    esi,eax
64002c79:	test   esi,esi
64002c7b:	push   edi
64002c7c:	mov    edi,ecx
64002c7e:	mov    DWORD PTR [esp+0x14],0x0
64002c86:	jge    0x64002c8a
64002c88:	xor    esi,esi
64002c8a:	mov    eax,DWORD PTR [ebp+0x0]
64002c8d:	mov    ebx,DWORD PTR [eax-0xc]
64002c90:	cmp    esi,ebx
64002c92:	jl     0x64002caa
64002c94:	add    eax,0xfffffff0
64002c97:	call   0x64004410
64002c9c:	add    eax,0x10
64002c9f:	mov    DWORD PTR [edi],eax
64002ca1:	mov    eax,edi
64002ca3:	pop    edi
64002ca4:	pop    esi
64002ca5:	pop    ebp
64002ca6:	pop    ebx
64002ca7:	ret    0x4
64002caa:	mov    eax,DWORD PTR [eax-0x10]
64002cad:	test   eax,eax
64002caf:	je     0x64002cbe
64002cb1:	mov    edx,DWORD PTR [eax]
64002cb3:	mov    ecx,eax
64002cb5:	mov    eax,DWORD PTR [edx+0x10]
64002cb8:	call   eax
64002cba:	test   eax,eax
64002cbc:	jne    0x64002cce
64002cbe:	mov    edx,DWORD PTR ds:0x640539c4
64002cc4:	mov    eax,DWORD PTR [edx+0x10]
64002cc7:	mov    ecx,0x640539c4
64002ccc:	call   eax
64002cce:	mov    ecx,DWORD PTR [ebp+0x0]
64002cd1:	sub    ebx,esi
64002cd3:	lea    ebx,[ecx+ebx*2]
64002cd6:	mov    ecx,eax
64002cd8:	call   0x64004240
64002cdd:	mov    eax,edi
64002cdf:	pop    edi
64002ce0:	pop    esi
64002ce1:	pop    ebp
64002ce2:	pop    ebx
64002ce3:	ret    0x4
64002ce6:	int3   
64002ce7:	int3   
64002ce8:	int3   
64002ce9:	int3   
64002cea:	int3   
64002ceb:	int3   
64002cec:	int3   
64002ced:	int3   
64002cee:	int3   
64002cef:	int3   
64002cf0:	push   0xffffffff
64002cf2:	push   0x64023289
64002cf7:	mov    eax,fs:0x0
64002cfd:	push   eax
64002cfe:	push   ebp
64002cff:	push   esi
64002d00:	mov    eax,ds:0x640521ac
64002d05:	xor    eax,esp
64002d07:	push   eax
64002d08:	lea    eax,[esp+0xc]
64002d0c:	mov    fs:0x0,eax
64002d12:	mov    ebp,DWORD PTR [esp+0x20]
64002d16:	mov    esi,DWORD PTR [esp+0x1c]
64002d1a:	mov    DWORD PTR [esp+0x14],0x0
64002d22:	mov    DWORD PTR [esp+0x20],0x0
64002d2a:	mov    eax,DWORD PTR [ebp+0x0]
64002d2d:	mov    ecx,DWORD PTR [eax-0x10]
64002d30:	test   ecx,ecx
64002d32:	je     0x64002d3f
64002d34:	mov    edx,DWORD PTR [ecx]
64002d36:	mov    eax,DWORD PTR [edx+0x10]
64002d39:	call   eax
64002d3b:	test   eax,eax
64002d3d:	jne    0x64002d4f
64002d3f:	mov    edx,DWORD PTR ds:0x640539c4
64002d45:	mov    eax,DWORD PTR [edx+0x10]
64002d48:	mov    ecx,0x640539c4
64002d4d:	call   eax
64002d4f:	xor    ecx,ecx
64002d51:	test   eax,eax
64002d53:	setne  cl
64002d56:	test   ecx,ecx
64002d58:	jne    0x64002d64
64002d5a:	push   0x80004005
64002d5f:	call   0x64001080
64002d64:	mov    edx,DWORD PTR [eax]
64002d66:	mov    ecx,eax
64002d68:	mov    eax,DWORD PTR [edx+0xc]
64002d6b:	call   eax
64002d6d:	add    eax,0x10
64002d70:	mov    DWORD PTR [esi],eax
64002d72:	test   ebx,ebx
64002d74:	mov    DWORD PTR [esp+0x14],0x0
64002d7c:	mov    DWORD PTR [esp+0x20],0x1
64002d84:	jne    0x64002d8a
64002d86:	xor    edx,edx
64002d88:	jmp    0x64002da1
64002d8a:	mov    eax,ebx
64002d8c:	lea    edx,[eax+0x2]
64002d8f:	nop
64002d90:	mov    cx,WORD PTR [eax]
64002d93:	add    eax,0x2
64002d96:	test   cx,cx
64002d99:	jne    0x64002d90
64002d9b:	sub    eax,edx
64002d9d:	sar    eax,1
64002d9f:	mov    edx,eax
64002da1:	mov    ecx,DWORD PTR [ebp+0x0]
64002da4:	mov    eax,DWORD PTR [ecx-0xc]
64002da7:	push   edx
64002da8:	push   ebx
64002da9:	push   ecx
64002daa:	push   esi
64002dab:	call   0x64003770
64002db0:	add    esp,0x10
64002db3:	mov    eax,esi
64002db5:	mov    ecx,DWORD PTR [esp+0xc]
64002db9:	mov    DWORD PTR fs:0x0,ecx
64002dc0:	pop    ecx
64002dc1:	pop    esi
64002dc2:	pop    ebp
64002dc3:	add    esp,0xc
64002dc6:	ret    
64002dc7:	int3   
64002dc8:	int3   
64002dc9:	int3   
64002dca:	int3   
64002dcb:	int3   
64002dcc:	int3   
64002dcd:	int3   
64002dce:	int3   
64002dcf:	int3   
64002dd0:	mov    ecx,DWORD PTR [esp+0x8]
64002dd4:	test   ecx,ecx
64002dd6:	jne    0x64002de2
64002dd8:	push   0x80004005
64002ddd:	call   0x64001080
64002de2:	mov    eax,DWORD PTR [esp+0x4]
64002de6:	mov    eax,DWORD PTR [eax]
64002de8:	mov    dx,WORD PTR [eax]
64002deb:	cmp    dx,WORD PTR [ecx]
64002dee:	jne    0x64002e16
64002df0:	test   dx,dx
64002df3:	je     0x64002e0a
64002df5:	mov    dx,WORD PTR [eax+0x2]
64002df9:	cmp    dx,WORD PTR [ecx+0x2]
64002dfd:	jne    0x64002e16
64002dff:	add    eax,0x4
64002e02:	add    ecx,0x4
64002e05:	test   dx,dx
64002e08:	jne    0x64002de8
64002e0a:	xor    eax,eax
64002e0c:	xor    ecx,ecx
64002e0e:	test   eax,eax
64002e10:	sete   cl
64002e13:	mov    al,cl
64002e15:	ret    
64002e16:	sbb    eax,eax
64002e18:	sbb    eax,0xffffffff
64002e1b:	xor    ecx,ecx
64002e1d:	test   eax,eax
64002e1f:	sete   cl
64002e22:	mov    al,cl
64002e24:	ret    
64002e25:	int3   
64002e26:	int3   
64002e27:	int3   
64002e28:	int3   
64002e29:	int3   
64002e2a:	int3   
64002e2b:	int3   
64002e2c:	int3   
64002e2d:	int3   
64002e2e:	int3   
64002e2f:	int3   
64002e30:	push   esi
64002e31:	mov    esi,ecx
64002e33:	mov    eax,DWORD PTR [esi]
64002e35:	mov    edx,DWORD PTR [eax-0x8]
64002e38:	sub    eax,0x10
64002e3b:	mov    ecx,0x1
64002e40:	sub    ecx,DWORD PTR [eax+0xc]
64002e43:	mov    eax,DWORD PTR [esp+0x8]
64002e47:	sub    edx,eax
64002e49:	or     ecx,edx
64002e4b:	jge    0x64002e55
64002e4d:	push   eax
64002e4e:	mov    ecx,esi
64002e50:	call   0x640043c0
64002e55:	mov    eax,DWORD PTR [esi]
64002e57:	pop    esi
64002e58:	ret    0x4
64002e5b:	int3   
64002e5c:	int3   
64002e5d:	int3   
64002e5e:	int3   
64002e5f:	int3   
64002e60:	push   esi
64002e61:	mov    esi,ecx
64002e63:	push   edi
64002e64:	mov    edi,DWORD PTR [esi]
64002e66:	test   edi,edi
64002e68:	je     0x64002e82
64002e6a:	push   ebx
64002e6b:	call   DWORD PTR ds:0x6402c06c
64002e71:	push   edi
64002e72:	mov    ebx,eax
64002e74:	call   DWORD PTR ds:0x6402c078
64002e7a:	push   ebx
64002e7b:	call   DWORD PTR ds:0x6402c074
64002e81:	pop    ebx
64002e82:	pop    edi
64002e83:	mov    DWORD PTR [esi],0x0
64002e89:	pop    esi
64002e8a:	ret    
64002e8b:	int3   
64002e8c:	int3   
64002e8d:	int3   
64002e8e:	int3   
64002e8f:	int3   
64002e90:	push   ebp
64002e91:	mov    ebp,esp
64002e93:	and    esp,0xfffffff8
64002e96:	push   0xffffffff
64002e98:	push   0x640236b0
64002e9d:	mov    eax,fs:0x0
64002ea3:	push   eax
64002ea4:	sub    esp,0x50
64002ea7:	mov    eax,ds:0x640521ac
64002eac:	xor    eax,esp
64002eae:	mov    DWORD PTR [esp+0x48],eax
64002eb2:	push   ebx
64002eb3:	push   esi
64002eb4:	push   edi
64002eb5:	mov    eax,ds:0x640521ac
64002eba:	xor    eax,esp
64002ebc:	push   eax
64002ebd:	lea    eax,[esp+0x60]
64002ec1:	mov    fs:0x0,eax
64002ec7:	mov    eax,ds:0x64054528
64002ecc:	mov    esi,DWORD PTR [ebp+0x8]
64002ecf:	xor    edi,edi
64002ed1:	cmp    eax,edi
64002ed3:	mov    DWORD PTR [esp+0x1c],esi
64002ed7:	jne    0x64002ee7
64002ed9:	push   edi
64002eda:	push   edi
64002edb:	push   edi
64002edc:	call   DWORD PTR ds:0x6402c098
64002ee2:	mov    ds:0x64054528,eax
64002ee7:	push   0xffffffff
64002ee9:	push   eax
64002eea:	call   DWORD PTR ds:0x6402c05c
64002ef0:	test   eax,eax
64002ef2:	je     0x64002efb
64002ef4:	mov    eax,esi
64002ef6:	jmp    0x64003067
64002efb:	mov    eax,DWORD PTR [ebp+0xc]
64002efe:	push   eax
64002eff:	push   esi
64002f00:	lea    ecx,[esp+0x28]
64002f04:	mov    DWORD PTR [esp+0x40],0xf
64002f0c:	mov    DWORD PTR [esp+0x3c],edi
64002f10:	mov    BYTE PTR [esp+0x2c],0x0
64002f15:	call   0x64003450
64002f1a:	lea    ecx,[esp+0x20]
64002f1e:	push   ecx
64002f1f:	lea    edx,[esp+0x18]
64002f23:	push   edx
64002f24:	mov    DWORD PTR [esp+0x70],edi
64002f28:	call   0x64003880
64002f2d:	mov    ecx,eax
64002f2f:	call   0x64003ca0
64002f34:	call   0x64003880
64002f39:	mov    esi,DWORD PTR [esp+0x14]
64002f3d:	cmp    esi,edi
64002f3f:	mov    ebx,DWORD PTR [eax+0x4]
64002f42:	je     0x64002f48
64002f44:	cmp    esi,eax
64002f46:	je     0x64002f4d
64002f48:	call   0x64013e16
64002f4d:	mov    edi,DWORD PTR [esp+0x18]
64002f51:	cmp    edi,ebx
64002f53:	jne    0x64002fca
64002f55:	sub    esp,0x1c
64002f58:	mov    ecx,esp
64002f5a:	mov    DWORD PTR [esp+0x30],esp
64002f5e:	push   0xffffffff
64002f60:	push   0x0
64002f62:	lea    eax,[esp+0x44]
64002f66:	mov    DWORD PTR [ecx+0x18],0xf
64002f6d:	mov    DWORD PTR [ecx+0x14],0x0
64002f74:	push   eax
64002f75:	mov    BYTE PTR [ecx+0x4],0x0
64002f79:	call   0x64003370
64002f7e:	lea    ecx,[esp+0x58]
64002f82:	push   ecx
64002f83:	call   0x64003910
64002f88:	add    esp,0x20
64002f8b:	lea    edx,[esp+0x20]
64002f8f:	push   edx
64002f90:	mov    BYTE PTR [esp+0x6c],0x1
64002f95:	call   0x64003880
64002f9a:	mov    ecx,eax
64002f9c:	call   0x64003b40
64002fa1:	push   0xffffffff
64002fa3:	push   0x0
64002fa5:	lea    ecx,[esp+0x44]
64002fa9:	push   ecx
64002faa:	mov    ecx,eax
64002fac:	call   0x64003370
64002fb1:	mov    BYTE PTR [esp+0x68],0x0
64002fb6:	cmp    DWORD PTR [esp+0x54],0x10
64002fbb:	jb     0x64002fca
64002fbd:	mov    edx,DWORD PTR [esp+0x40]
64002fc1:	push   edx
64002fc2:	call   0x640135e4
64002fc7:	add    esp,0x4
64002fca:	mov    eax,DWORD PTR [ebp+0x10]
64002fcd:	movzx  ecx,BYTE PTR [eax]
64002fd0:	cmp    ecx,0x100
64002fd6:	jge    0x64002ff3
64002fd8:	lea    edx,[esp+0x20]
64002fdc:	push   edx
64002fdd:	lea    eax,[esp+0x18]
64002fe1:	push   eax
64002fe2:	call   0x64003880
64002fe7:	mov    ecx,eax
64002fe9:	call   0x64003ca0
64002fee:	mov    esi,DWORD PTR [eax]
64002ff0:	mov    edi,DWORD PTR [eax+0x4]
64002ff3:	call   0x64003880
64002ff8:	test   esi,esi
64002ffa:	mov    ebx,DWORD PTR [eax+0x4]
64002ffd:	je     0x64003003
64002fff:	cmp    esi,eax
64003001:	je     0x64003008
64003003:	call   0x64013e16
64003008:	cmp    edi,ebx
6400300a:	je     0x6400302f
6400300c:	test   esi,esi
6400300e:	jne    0x64003015
64003010:	call   0x64013e16
64003015:	cmp    edi,DWORD PTR [esi+0x4]
64003018:	jne    0x6400301f
6400301a:	call   0x64013e16
6400301f:	cmp    DWORD PTR [edi+0x40],0x10
64003023:	jb     0x6400302a
64003025:	mov    edi,DWORD PTR [edi+0x2c]
64003028:	jmp    0x64003033
6400302a:	add    edi,0x2c
6400302d:	jmp    0x64003033
6400302f:	mov    edi,DWORD PTR [esp+0x1c]
64003033:	mov    eax,ds:0x64054528
64003038:	test   eax,eax
6400303a:	jne    0x6400304a
6400303c:	push   eax
6400303d:	push   eax
6400303e:	push   eax
6400303f:	call   DWORD PTR ds:0x6402c098
64003045:	mov    ds:0x64054528,eax
6400304a:	push   eax
6400304b:	call   DWORD PTR ds:0x6402c09c
64003051:	cmp    DWORD PTR [esp+0x38],0x10
64003056:	jb     0x64003065
64003058:	mov    ecx,DWORD PTR [esp+0x24]
6400305c:	push   ecx
6400305d:	call   0x640135e4
64003062:	add    esp,0x4
64003065:	mov    eax,edi
64003067:	mov    ecx,DWORD PTR [esp+0x60]
6400306b:	mov    DWORD PTR fs:0x0,ecx
64003072:	pop    ecx
64003073:	pop    edi
64003074:	pop    esi
64003075:	pop    ebx
64003076:	mov    ecx,DWORD PTR [esp+0x48]
6400307a:	xor    ecx,esp
6400307c:	call   0x64013ca6
64003081:	mov    esp,ebp
64003083:	pop    ebp
64003084:	ret    
64003085:	int3   
64003086:	int3   
64003087:	int3   
64003088:	int3   
64003089:	int3   
6400308a:	int3   
6400308b:	int3   
6400308c:	int3   
6400308d:	int3   
6400308e:	int3   
6400308f:	int3   
64003090:	push   ebp
64003091:	mov    ebp,esp
64003093:	and    esp,0xfffffff8
64003096:	push   0xffffffff
64003098:	push   0x64023670
6400309d:	mov    eax,fs:0x0
640030a3:	push   eax
640030a4:	sub    esp,0x50
640030a7:	mov    eax,ds:0x640521ac
640030ac:	xor    eax,esp
640030ae:	mov    DWORD PTR [esp+0x48],eax
640030b2:	push   ebx
640030b3:	push   esi
640030b4:	push   edi
640030b5:	mov    eax,ds:0x640521ac
640030ba:	xor    eax,esp
640030bc:	push   eax
640030bd:	lea    eax,[esp+0x60]
640030c1:	mov    fs:0x0,eax
640030c7:	mov    eax,ds:0x64054528
640030cc:	xor    ebx,ebx
640030ce:	cmp    eax,ebx
640030d0:	mov    esi,ecx
640030d2:	mov    DWORD PTR [esp+0x1c],esi
640030d6:	jne    0x640030e6
640030d8:	push   ebx
640030d9:	push   ebx
640030da:	push   ebx
640030db:	call   DWORD PTR ds:0x6402c098
640030e1:	mov    ds:0x64054528,eax
640030e6:	push   0xffffffff
640030e8:	push   eax
640030e9:	call   DWORD PTR ds:0x6402c05c
640030ef:	test   eax,eax
640030f1:	je     0x640030fa
640030f3:	mov    eax,esi
640030f5:	jmp    0x6400325b
640030fa:	mov    eax,DWORD PTR [ebp+0x8]
640030fd:	push   eax
640030fe:	push   esi
640030ff:	lea    esi,[esp+0x28]
64003103:	mov    DWORD PTR [esp+0x40],0x7
6400310b:	mov    DWORD PTR [esp+0x3c],ebx
6400310f:	mov    WORD PTR [esp+0x2c],bx
64003114:	call   0x64004800
64003119:	mov    ecx,esi
6400311b:	push   ecx
6400311c:	lea    edx,[esp+0x18]
64003120:	push   edx
64003121:	mov    DWORD PTR [esp+0x70],ebx
64003125:	call   0x640039e0
6400312a:	mov    ebx,eax
6400312c:	call   0x64003ed0
64003131:	call   0x640039e0
64003136:	mov    ebx,DWORD PTR [esp+0x14]
6400313a:	test   ebx,ebx
6400313c:	mov    esi,DWORD PTR [eax+0x4]
6400313f:	je     0x64003145
64003141:	cmp    ebx,eax
64003143:	je     0x6400314a
64003145:	call   0x64013e16
6400314a:	mov    edi,DWORD PTR [esp+0x18]
6400314e:	cmp    edi,esi
64003150:	jne    0x640031bf
64003152:	sub    esp,0x1c
64003155:	mov    ecx,esp
64003157:	xor    eax,eax
64003159:	mov    DWORD PTR [esp+0x30],esp
6400315d:	mov    DWORD PTR [ecx+0x14],eax
64003160:	push   0xffffffff
64003162:	mov    DWORD PTR [ecx+0x18],0x7
64003169:	mov    WORD PTR [ecx+0x4],ax
6400316d:	push   eax
6400316e:	lea    eax,[esp+0x44]
64003172:	call   0x64004750
64003177:	lea    esi,[esp+0x58]
6400317b:	call   0x64003a70
64003180:	add    esp,0x1c
64003183:	lea    eax,[esp+0x20]
64003187:	push   eax
64003188:	mov    BYTE PTR [esp+0x6c],0x1
6400318d:	call   0x640039e0
64003192:	mov    ecx,eax
64003194:	call   0x64003d80
64003199:	push   0xffffffff
6400319b:	mov    ecx,eax
6400319d:	push   0x0
6400319f:	mov    eax,esi
640031a1:	call   0x64004750
640031a6:	mov    BYTE PTR [esp+0x68],0x0
640031ab:	cmp    DWORD PTR [esp+0x54],0x8
640031b0:	jb     0x640031bf
640031b2:	mov    ecx,DWORD PTR [esp+0x40]
640031b6:	push   ecx
640031b7:	call   0x640135e4
640031bc:	add    esp,0x4
640031bf:	mov    edx,DWORD PTR [ebp+0xc]
640031c2:	movzx  eax,BYTE PTR [edx]
640031c5:	cmp    eax,0x100
640031ca:	jge    0x640031e7
640031cc:	lea    ecx,[esp+0x20]
640031d0:	push   ecx
640031d1:	lea    edx,[esp+0x18]
640031d5:	push   edx
640031d6:	call   0x640039e0
640031db:	mov    ebx,eax
640031dd:	call   0x64003ed0
640031e2:	mov    ebx,DWORD PTR [eax]
640031e4:	mov    edi,DWORD PTR [eax+0x4]
640031e7:	call   0x640039e0
640031ec:	test   ebx,ebx
640031ee:	mov    esi,DWORD PTR [eax+0x4]
640031f1:	je     0x640031f7
640031f3:	cmp    ebx,eax
640031f5:	je     0x640031fc
640031f7:	call   0x64013e16
640031fc:	cmp    edi,esi
640031fe:	je     0x64003223
64003200:	test   ebx,ebx
64003202:	jne    0x64003209
64003204:	call   0x64013e16
64003209:	cmp    edi,DWORD PTR [ebx+0x4]
6400320c:	jne    0x64003213
6400320e:	call   0x64013e16
64003213:	cmp    DWORD PTR [edi+0x40],0x8
64003217:	jb     0x6400321e
64003219:	mov    edi,DWORD PTR [edi+0x2c]
6400321c:	jmp    0x64003227
6400321e:	add    edi,0x2c
64003221:	jmp    0x64003227
64003223:	mov    edi,DWORD PTR [esp+0x1c]
64003227:	mov    eax,ds:0x64054528
6400322c:	test   eax,eax
6400322e:	jne    0x6400323e
64003230:	push   eax
64003231:	push   eax
64003232:	push   eax
64003233:	call   DWORD PTR ds:0x6402c098
64003239:	mov    ds:0x64054528,eax
6400323e:	push   eax
6400323f:	call   DWORD PTR ds:0x6402c09c
64003245:	cmp    DWORD PTR [esp+0x38],0x8
6400324a:	jb     0x64003259
6400324c:	mov    eax,DWORD PTR [esp+0x24]
64003250:	push   eax
64003251:	call   0x640135e4
64003256:	add    esp,0x4
64003259:	mov    eax,edi
6400325b:	mov    ecx,DWORD PTR [esp+0x60]
6400325f:	mov    DWORD PTR fs:0x0,ecx
64003266:	pop    ecx
64003267:	pop    edi
64003268:	pop    esi
64003269:	pop    ebx
6400326a:	mov    ecx,DWORD PTR [esp+0x48]
6400326e:	xor    ecx,esp
64003270:	call   0x64013ca6
64003275:	mov    esp,ebp
64003277:	pop    ebp
64003278:	ret    
64003279:	int3   
6400327a:	int3   
6400327b:	int3   
6400327c:	int3   
6400327d:	int3   
6400327e:	int3   
6400327f:	int3   
64003280:	push   ebx
64003281:	push   ebp
64003282:	mov    ebp,DWORD PTR [esp+0xc]
64003286:	push   edi
64003287:	mov    edi,DWORD PTR [esp+0x14]
6400328b:	cmp    DWORD PTR [ebp+0x14],edi
6400328e:	mov    ebx,eax
64003290:	jae    0x64003297
64003292:	call   0x64012efb
64003297:	mov    eax,DWORD PTR [ebp+0x14]
6400329a:	sub    eax,edi
6400329c:	cmp    eax,ebx
6400329e:	jae    0x640032a2
640032a0:	mov    ebx,eax
640032a2:	mov    eax,DWORD PTR [esi+0x14]
640032a5:	or     ecx,0xffffffff
640032a8:	sub    ecx,eax
640032aa:	cmp    ecx,ebx
640032ac:	jbe    0x640032b5
640032ae:	lea    edx,[eax+ebx*1]
640032b1:	cmp    edx,eax
640032b3:	jae    0x640032ba
640032b5:	call   0x64012ebc
640032ba:	test   ebx,ebx
640032bc:	jbe    0x64003366
640032c2:	mov    edi,DWORD PTR [esi+0x14]
640032c5:	add    edi,ebx
640032c7:	cmp    edi,0xfffffffe
640032ca:	jbe    0x640032d1
640032cc:	call   0x64012ebc
640032d1:	mov    eax,DWORD PTR [esi+0x18]
640032d4:	cmp    eax,edi
640032d6:	jae    0x640032f3
640032d8:	mov    eax,DWORD PTR [esi+0x14]
640032db:	push   eax
640032dc:	push   edi
640032dd:	mov    ecx,esi
640032df:	call   0x640040c0
640032e4:	test   edi,edi
640032e6:	jbe    0x64003366
640032e8:	cmp    DWORD PTR [ebp+0x18],0x10
640032ec:	jb     0x6400331b
640032ee:	mov    ebp,DWORD PTR [ebp+0x4]
640032f1:	jmp    0x6400331e
640032f3:	test   edi,edi
640032f5:	jne    0x640032e6
640032f7:	cmp    eax,0x10
640032fa:	mov    DWORD PTR [esi+0x14],edi
640032fd:	jb     0x6400330d
640032ff:	mov    eax,DWORD PTR [esi+0x4]
64003302:	pop    edi
64003303:	pop    ebp
64003304:	mov    BYTE PTR [eax],0x0
64003307:	mov    eax,esi
64003309:	pop    ebx
6400330a:	ret    0x8
6400330d:	pop    edi
6400330e:	lea    eax,[esi+0x4]
64003311:	pop    ebp
64003312:	mov    BYTE PTR [eax],0x0
64003315:	mov    eax,esi
64003317:	pop    ebx
64003318:	ret    0x8
6400331b:	add    ebp,0x4
6400331e:	mov    eax,DWORD PTR [esi+0x18]
64003321:	cmp    eax,0x10
64003324:	jb     0x6400332b
64003326:	mov    edx,DWORD PTR [esi+0x4]
64003329:	jmp    0x6400332e
6400332b:	lea    edx,[esi+0x4]
6400332e:	mov    ecx,DWORD PTR [esi+0x14]
64003331:	push   ebx
64003332:	mov    ebx,DWORD PTR [esp+0x18]
64003336:	add    ebp,ebx
64003338:	sub    eax,ecx
6400333a:	push   ebp
6400333b:	push   eax
6400333c:	add    ecx,edx
6400333e:	push   ecx
6400333f:	call   0x6401373c
64003344:	add    esp,0x10
64003347:	cmp    DWORD PTR [esi+0x18],0x10
6400334b:	mov    DWORD PTR [esi+0x14],edi
6400334e:	jb     0x6400335f
64003350:	mov    eax,DWORD PTR [esi+0x4]
64003353:	mov    BYTE PTR [eax+edi*1],0x0
64003357:	pop    edi
64003358:	pop    ebp
64003359:	mov    eax,esi
6400335b:	pop    ebx
6400335c:	ret    0x8
6400335f:	lea    eax,[esi+0x4]
64003362:	mov    BYTE PTR [eax+edi*1],0x0
64003366:	pop    edi
64003367:	pop    ebp
64003368:	mov    eax,esi
6400336a:	pop    ebx
6400336b:	ret    0x8
6400336e:	int3   
6400336f:	int3   
64003370:	push   ebx
64003371:	mov    ebx,DWORD PTR [esp+0x8]
64003375:	push   ebp
64003376:	mov    ebp,DWORD PTR [esp+0x10]
6400337a:	cmp    DWORD PTR [ebx+0x14],ebp
6400337d:	push   esi
6400337e:	push   edi
6400337f:	mov    esi,ecx
64003381:	jae    0x64003388
64003383:	call   0x64012efb
64003388:	mov    edi,DWORD PTR [ebx+0x14]
6400338b:	mov    eax,DWORD PTR [esp+0x1c]
6400338f:	sub    edi,ebp
64003391:	cmp    eax,edi
64003393:	jae    0x64003397
64003395:	mov    edi,eax
64003397:	cmp    esi,ebx
64003399:	jne    0x640033ba
6400339b:	push   0xffffffff
6400339d:	add    edi,ebp
6400339f:	push   edi
640033a0:	mov    ecx,esi
640033a2:	call   0x64004030
640033a7:	push   ebp
640033a8:	push   0x0
640033aa:	mov    ecx,esi
640033ac:	call   0x64004030
640033b1:	pop    edi
640033b2:	mov    eax,esi
640033b4:	pop    esi
640033b5:	pop    ebp
640033b6:	pop    ebx
640033b7:	ret    0xc
640033ba:	cmp    edi,0xfffffffe
640033bd:	jbe    0x640033c4
640033bf:	call   0x64012ebc
640033c4:	mov    eax,DWORD PTR [esi+0x18]
640033c7:	cmp    eax,edi
640033c9:	jae    0x640033e6
640033cb:	mov    eax,DWORD PTR [esi+0x14]
640033ce:	push   eax
640033cf:	push   edi
640033d0:	mov    ecx,esi
640033d2:	call   0x640040c0
640033d7:	test   edi,edi
640033d9:	jbe    0x64003441
640033db:	cmp    DWORD PTR [ebx+0x18],0x10
640033df:	jb     0x64003410
640033e1:	mov    edx,DWORD PTR [ebx+0x4]
640033e4:	jmp    0x64003413
640033e6:	test   edi,edi
640033e8:	jne    0x640033d9
640033ea:	cmp    eax,0x10
640033ed:	mov    DWORD PTR [esi+0x14],edi
640033f0:	jb     0x64003401
640033f2:	mov    eax,DWORD PTR [esi+0x4]
640033f5:	pop    edi
640033f6:	mov    BYTE PTR [eax],0x0
640033f9:	mov    eax,esi
640033fb:	pop    esi
640033fc:	pop    ebp
640033fd:	pop    ebx
640033fe:	ret    0xc
64003401:	lea    eax,[esi+0x4]
64003404:	pop    edi
64003405:	mov    BYTE PTR [eax],0x0
64003408:	mov    eax,esi
6400340a:	pop    esi
6400340b:	pop    ebp
6400340c:	pop    ebx
6400340d:	ret    0xc
64003410:	lea    edx,[ebx+0x4]
64003413:	mov    ecx,DWORD PTR [esi+0x18]
64003416:	cmp    ecx,0x10
64003419:	lea    ebx,[esi+0x4]
6400341c:	jb     0x64003422
6400341e:	mov    eax,DWORD PTR [ebx]
64003420:	jmp    0x64003424
64003422:	mov    eax,ebx
64003424:	push   edi
64003425:	add    edx,ebp
64003427:	push   edx
64003428:	push   ecx
64003429:	push   eax
6400342a:	call   0x6401373c
6400342f:	add    esp,0x10
64003432:	cmp    DWORD PTR [esi+0x18],0x10
64003436:	mov    DWORD PTR [esi+0x14],edi
64003439:	jb     0x6400343d
6400343b:	mov    ebx,DWORD PTR [ebx]
6400343d:	mov    BYTE PTR [ebx+edi*1],0x0
64003441:	pop    edi
64003442:	mov    eax,esi
64003444:	pop    esi
64003445:	pop    ebp
64003446:	pop    ebx
64003447:	ret    0xc
6400344a:	int3   
6400344b:	int3   
6400344c:	int3   
6400344d:	int3   
6400344e:	int3   
6400344f:	int3   
64003450:	push   ebx
64003451:	push   ebp
64003452:	push   esi
64003453:	mov    esi,ecx
64003455:	mov    ecx,DWORD PTR [esi+0x18]
64003458:	cmp    ecx,0x10
6400345b:	lea    ebx,[esi+0x4]
6400345e:	jb     0x64003464
64003460:	mov    eax,DWORD PTR [ebx]
64003462:	jmp    0x64003466
64003464:	mov    eax,ebx
64003466:	mov    ebp,DWORD PTR [esp+0x10]
6400346a:	cmp    ebp,eax
6400346c:	jb     0x6400349f
6400346e:	cmp    ecx,0x10
64003471:	jb     0x64003477
64003473:	mov    eax,DWORD PTR [ebx]
64003475:	jmp    0x64003479
64003477:	mov    eax,ebx
64003479:	mov    edx,DWORD PTR [esi+0x14]
6400347c:	add    edx,eax
6400347e:	cmp    edx,ebp
64003480:	jbe    0x6400349f
64003482:	cmp    ecx,0x10
64003485:	jb     0x64003489
64003487:	mov    ebx,DWORD PTR [ebx]
64003489:	mov    eax,DWORD PTR [esp+0x14]
6400348d:	push   eax
6400348e:	sub    ebp,ebx
64003490:	push   ebp
64003491:	push   esi
64003492:	mov    ecx,esi
64003494:	call   0x64003370
64003499:	pop    esi
6400349a:	pop    ebp
6400349b:	pop    ebx
6400349c:	ret    0x8
6400349f:	push   edi
640034a0:	mov    edi,DWORD PTR [esp+0x18]
640034a4:	cmp    edi,0xfffffffe
640034a7:	jbe    0x640034ae
640034a9:	call   0x64012ebc
640034ae:	mov    eax,DWORD PTR [esi+0x18]
640034b1:	cmp    eax,edi
640034b3:	jae    0x640034d1
640034b5:	mov    ecx,DWORD PTR [esi+0x14]
640034b8:	push   ecx
640034b9:	push   edi
640034ba:	mov    ecx,esi
640034bc:	call   0x640040c0
640034c1:	test   edi,edi
640034c3:	jbe    0x64003508
640034c5:	mov    ecx,DWORD PTR [esi+0x18]
640034c8:	cmp    ecx,0x10
640034cb:	jb     0x640034eb
640034cd:	mov    eax,DWORD PTR [ebx]
640034cf:	jmp    0x640034ed
640034d1:	test   edi,edi
640034d3:	jne    0x640034c3
640034d5:	cmp    eax,0x10
640034d8:	mov    DWORD PTR [esi+0x14],edi
640034db:	jb     0x640034df
640034dd:	mov    ebx,DWORD PTR [ebx]
640034df:	pop    edi
640034e0:	mov    eax,esi
640034e2:	pop    esi
640034e3:	pop    ebp
640034e4:	mov    BYTE PTR [ebx],0x0
640034e7:	pop    ebx
640034e8:	ret    0x8
640034eb:	mov    eax,ebx
640034ed:	push   edi
640034ee:	push   ebp
640034ef:	push   ecx
640034f0:	push   eax
640034f1:	call   0x6401373c
640034f6:	add    esp,0x10
640034f9:	cmp    DWORD PTR [esi+0x18],0x10
640034fd:	mov    DWORD PTR [esi+0x14],edi
64003500:	jb     0x64003504
64003502:	mov    ebx,DWORD PTR [ebx]
64003504:	mov    BYTE PTR [ebx+edi*1],0x0
64003508:	pop    edi
64003509:	mov    eax,esi
6400350b:	pop    esi
6400350c:	pop    ebp
6400350d:	pop    ebx
6400350e:	ret    0x8
64003511:	int3   
64003512:	int3   
64003513:	int3   
64003514:	int3   
64003515:	int3   
64003516:	int3   
64003517:	int3   
64003518:	int3   
64003519:	int3   
6400351a:	int3   
6400351b:	int3   
6400351c:	int3   
6400351d:	int3   
6400351e:	int3   
6400351f:	int3   
64003520:	push   ebx
64003521:	push   ebp
64003522:	mov    ebp,DWORD PTR [esp+0xc]
64003526:	push   esi
64003527:	push   edi
64003528:	mov    edi,ecx
6400352a:	cmp    DWORD PTR [edi+0x14],ebp
6400352d:	jae    0x64003534
6400352f:	call   0x64012efb
64003534:	mov    eax,DWORD PTR [edi+0x14]
64003537:	mov    esi,DWORD PTR [esp+0x18]
6400353b:	sub    eax,ebp
6400353d:	cmp    eax,esi
6400353f:	jae    0x64003543
64003541:	mov    esi,eax
64003543:	mov    ebx,DWORD PTR [esp+0x20]
64003547:	cmp    esi,ebx
64003549:	mov    eax,esi
6400354b:	jb     0x6400354f
6400354d:	mov    eax,ebx
6400354f:	cmp    DWORD PTR [edi+0x18],0x10
64003553:	jb     0x6400355a
64003555:	mov    edi,DWORD PTR [edi+0x4]
64003558:	jmp    0x6400355d
6400355a:	add    edi,0x4
6400355d:	push   eax
6400355e:	mov    eax,DWORD PTR [esp+0x20]
64003562:	push   eax
64003563:	add    edi,ebp
64003565:	push   edi
64003566:	call   0x640012b0
6400356b:	add    esp,0xc
6400356e:	test   eax,eax
64003570:	jne    0x64003587
64003572:	cmp    esi,ebx
64003574:	jae    0x64003580
64003576:	pop    edi
64003577:	pop    esi
64003578:	pop    ebp
64003579:	or     eax,0xffffffff
6400357c:	pop    ebx
6400357d:	ret    0x10
64003580:	xor    eax,eax
64003582:	cmp    esi,ebx
64003584:	setne  al
64003587:	pop    edi
64003588:	pop    esi
64003589:	pop    ebp
6400358a:	pop    ebx
6400358b:	ret    0x10
6400358e:	int3   
6400358f:	int3   
64003590:	mov    ecx,DWORD PTR [esp+0x4]
64003594:	sub    esp,0xc
64003597:	test   ecx,ecx
64003599:	ja     0x640035ac
6400359b:	xor    ecx,ecx
6400359d:	push   ecx
6400359e:	call   0x64013875
640035a3:	add    esp,0x4
640035a6:	add    esp,0xc
640035a9:	ret    0x4
640035ac:	or     eax,0xffffffff
640035af:	xor    edx,edx
640035b1:	div    ecx
640035b3:	cmp    eax,0x1
640035b6:	jae    0x6400359d
640035b8:	lea    eax,[esp+0x10]
640035bc:	push   eax
640035bd:	lea    ecx,[esp+0x4]
640035c1:	mov    DWORD PTR [esp+0x14],0x0
640035c9:	call   0x640135fa
640035ce:	push   0x6404413c
640035d3:	lea    ecx,[esp+0x4]
640035d7:	push   ecx
640035d8:	mov    DWORD PTR [esp+0x8],0x6402c2ac
640035e0:	call   0x64013812
640035e5:	int3   
640035e6:	int3   
640035e7:	int3   
640035e8:	int3   
640035e9:	int3   
640035ea:	int3   
640035eb:	int3   
640035ec:	int3   
640035ed:	int3   
640035ee:	int3   
640035ef:	int3   
640035f0:	push   ebx
640035f1:	mov    ebx,DWORD PTR [esp+0x8]
640035f5:	test   ebx,ebx
640035f7:	push   ebp
640035f8:	push   esi
640035f9:	push   edi
640035fa:	mov    edi,ecx
640035fc:	je     0x64003674
640035fe:	call   DWORD PTR ds:0x64052184
64003604:	mov    ebp,DWORD PTR ds:0x6402c02c
6400360a:	push   0x0
6400360c:	push   0x0
6400360e:	push   0xffffffff
64003610:	push   ebx
64003611:	push   0x0
64003613:	push   eax
64003614:	call   ebp
64003616:	mov    esi,eax
64003618:	sub    esi,0x1
6400361b:	test   esi,esi
6400361d:	jle    0x64003674
6400361f:	mov    eax,DWORD PTR [edi]
64003621:	mov    edx,DWORD PTR [eax-0x8]
64003624:	sub    eax,0x10
64003627:	mov    ecx,0x1
6400362c:	sub    ecx,DWORD PTR [eax+0xc]
6400362f:	sub    edx,esi
64003631:	or     ecx,edx
64003633:	jge    0x6400363d
64003635:	push   esi
64003636:	mov    ecx,edi
64003638:	call   0x640043c0
6400363d:	mov    eax,DWORD PTR [edi]
6400363f:	push   esi
64003640:	push   eax
64003641:	push   0xffffffff
64003643:	push   ebx
64003644:	push   0x0
64003646:	call   DWORD PTR ds:0x64052184
6400364c:	push   eax
6400364d:	call   ebp
6400364f:	mov    eax,DWORD PTR [edi]
64003651:	cmp    esi,DWORD PTR [eax-0x8]
64003654:	jg     0x6400366a
64003656:	mov    DWORD PTR [eax-0xc],esi
64003659:	mov    eax,DWORD PTR [edi]
6400365b:	mov    WORD PTR [eax+esi*2],0x0
64003661:	mov    eax,edi
64003663:	pop    edi
64003664:	pop    esi
64003665:	pop    ebp
64003666:	pop    ebx
64003667:	ret    0x4
6400366a:	push   0x80070057
6400366f:	call   0x64001080
64003674:	mov    ecx,edi
64003676:	call   0x640042a0
6400367b:	mov    eax,edi
6400367d:	pop    edi
6400367e:	pop    esi
6400367f:	pop    ebp
64003680:	pop    ebx
64003681:	ret    0x4
64003684:	int3   
64003685:	int3   
64003686:	int3   
64003687:	int3   
64003688:	int3   
64003689:	int3   
6400368a:	int3   
6400368b:	int3   
6400368c:	int3   
6400368d:	int3   
6400368e:	int3   
6400368f:	int3   
64003690:	mov    eax,DWORD PTR [ecx]
64003692:	sub    eax,0x10
64003695:	lea    ecx,[eax+0xc]
64003698:	or     edx,0xffffffff
6400369b:	lock xadd DWORD PTR [ecx],edx
6400369f:	dec    edx
640036a0:	test   edx,edx
640036a2:	jg     0x640036ae
640036a4:	mov    ecx,DWORD PTR [eax]
640036a6:	mov    edx,DWORD PTR [ecx]
640036a8:	push   eax
640036a9:	mov    eax,DWORD PTR [edx+0x4]
640036ac:	call   eax
640036ae:	ret    
640036af:	int3   
640036b0:	mov    ecx,DWORD PTR [esp+0xc]
640036b4:	push   ebx
640036b5:	push   ebp
640036b6:	mov    ebp,DWORD PTR [esp+0xc]
640036ba:	mov    eax,DWORD PTR [ebp+0x0]
640036bd:	mov    ebx,DWORD PTR [eax-0xc]
640036c0:	push   esi
640036c1:	mov    esi,DWORD PTR [esp+0x14]
640036c5:	sub    esi,eax
640036c7:	mov    edx,0x1
640036cc:	sub    edx,DWORD PTR [eax-0x4]
640036cf:	mov    eax,DWORD PTR [eax-0x8]
640036d2:	push   edi
640036d3:	lea    edi,[ebx+ecx*1]
640036d6:	sub    eax,edi
640036d8:	sar    esi,1
640036da:	or     edx,eax
640036dc:	jge    0x640036e6
640036de:	push   edi
640036df:	mov    ecx,ebp
640036e1:	call   0x640043c0
640036e6:	cmp    esi,ebx
640036e8:	mov    ecx,DWORD PTR [ebp+0x0]
640036eb:	ja     0x640036f4
640036ed:	lea    edx,[ecx+esi*2]
640036f0:	mov    DWORD PTR [esp+0x18],edx
640036f4:	mov    eax,DWORD PTR [esp+0x1c]
640036f8:	mov    edx,DWORD PTR [esp+0x18]
640036fc:	add    eax,eax
640036fe:	push   eax
640036ff:	push   edx
64003700:	push   eax
64003701:	lea    eax,[ecx+ebx*2]
64003704:	push   eax
64003705:	call   0x6401373c
6400370a:	add    esp,0x10
6400370d:	test   edi,edi
6400370f:	jl     0x6400372c
64003711:	mov    eax,DWORD PTR [ebp+0x0]
64003714:	cmp    edi,DWORD PTR [eax-0x8]
64003717:	jg     0x6400372c
64003719:	mov    DWORD PTR [eax-0xc],edi
6400371c:	mov    ecx,DWORD PTR [ebp+0x0]
6400371f:	mov    WORD PTR [ecx+edi*2],0x0
64003725:	pop    edi
64003726:	pop    esi
64003727:	pop    ebp
64003728:	pop    ebx
64003729:	ret    0xc
6400372c:	push   0x80070057
64003731:	call   0x64001080
64003736:	int3   
64003737:	int3   
64003738:	int3   
64003739:	int3   
6400373a:	int3   
6400373b:	int3   
6400373c:	int3   
6400373d:	int3   
6400373e:	int3   
6400373f:	int3   
64003740:	mov    eax,DWORD PTR [esp+0x4]
64003744:	test   eax,eax
64003746:	jl     0x6400375d
64003748:	mov    edx,DWORD PTR [ecx]
6400374a:	cmp    eax,DWORD PTR [edx-0x8]
6400374d:	jg     0x6400375d
6400374f:	mov    DWORD PTR [edx-0xc],eax
64003752:	mov    ecx,DWORD PTR [ecx]
64003754:	mov    WORD PTR [ecx+eax*2],0x0
6400375a:	ret    0x4
6400375d:	push   0x80070057
64003762:	call   0x64001080
64003767:	int3   
64003768:	int3   
64003769:	int3   
6400376a:	int3   
6400376b:	int3   
6400376c:	int3   
6400376d:	int3   
6400376e:	int3   
6400376f:	int3   
64003770:	push   ebp
64003771:	mov    ebp,DWORD PTR [esp+0x8]
64003775:	push   esi
64003776:	mov    esi,eax
64003778:	mov    eax,DWORD PTR [esp+0x18]
6400377c:	push   edi
6400377d:	lea    edi,[esi+eax*1]
64003780:	mov    eax,DWORD PTR [ebp+0x0]
64003783:	mov    edx,DWORD PTR [eax-0x8]
64003786:	sub    eax,0x10
64003789:	mov    ecx,0x1
6400378e:	sub    ecx,DWORD PTR [eax+0xc]
64003791:	sub    edx,edi
64003793:	or     ecx,edx
64003795:	jge    0x6400379f
64003797:	push   edi
64003798:	mov    ecx,ebp
6400379a:	call   0x640043c0
6400379f:	mov    eax,DWORD PTR [esp+0x14]
640037a3:	push   ebx
640037a4:	mov    ebx,DWORD PTR [ebp+0x0]
640037a7:	add    esi,esi
640037a9:	push   esi
640037aa:	push   eax
640037ab:	push   esi
640037ac:	push   ebx
640037ad:	call   0x6401373c
640037b2:	mov    eax,DWORD PTR [esp+0x30]
640037b6:	mov    ecx,DWORD PTR [esp+0x2c]
640037ba:	add    eax,eax
640037bc:	push   eax
640037bd:	push   ecx
640037be:	push   eax
640037bf:	add    esi,ebx
640037c1:	push   esi
640037c2:	call   0x6401373c
640037c7:	add    esp,0x20
640037ca:	test   edi,edi
640037cc:	pop    ebx
640037cd:	jl     0x640037e7
640037cf:	mov    eax,DWORD PTR [ebp+0x0]
640037d2:	cmp    edi,DWORD PTR [eax-0x8]
640037d5:	jg     0x640037e7
640037d7:	mov    DWORD PTR [eax-0xc],edi
640037da:	mov    edx,DWORD PTR [ebp+0x0]
640037dd:	mov    WORD PTR [edx+edi*2],0x0
640037e3:	pop    edi
640037e4:	pop    esi
640037e5:	pop    ebp
640037e6:	ret    
640037e7:	push   0x80070057
640037ec:	call   0x64001080
640037f1:	int3   
640037f2:	int3   
640037f3:	int3   
640037f4:	int3   
640037f5:	int3   
640037f6:	int3   
640037f7:	int3   
640037f8:	int3   
640037f9:	int3   
640037fa:	int3   
640037fb:	int3   
640037fc:	int3   
640037fd:	int3   
640037fe:	int3   
640037ff:	int3   
64003800:	push   ecx
64003801:	push   ebx
64003802:	push   ebp
64003803:	push   esi
64003804:	mov    esi,DWORD PTR [ecx]
64003806:	mov    ebx,DWORD PTR [esi-0xc]
64003809:	sub    esi,0x10
6400380c:	mov    DWORD PTR [esp+0xc],ecx
64003810:	mov    ecx,DWORD PTR [esi]
64003812:	mov    eax,DWORD PTR [ecx]
64003814:	mov    edx,DWORD PTR [eax+0x10]
64003817:	push   edi
64003818:	call   edx
6400381a:	mov    edx,DWORD PTR [eax]
6400381c:	mov    ebp,DWORD PTR [esp+0x18]
64003820:	push   0x2
64003822:	mov    ecx,eax
64003824:	mov    eax,DWORD PTR [edx]
64003826:	push   ebp
64003827:	call   eax
64003829:	mov    edi,eax
6400382b:	test   edi,edi
6400382d:	jne    0x64003834
6400382f:	call   0x640043b0
64003834:	cmp    ebx,ebp
64003836:	jge    0x6400383a
64003838:	mov    ebp,ebx
6400383a:	lea    eax,[ebp+ebp*1+0x2]
6400383e:	push   eax
6400383f:	lea    ecx,[esi+0x10]
64003842:	push   ecx
64003843:	push   eax
64003844:	lea    ebp,[edi+0x10]
64003847:	push   ebp
64003848:	call   0x6401373c
6400384d:	add    esp,0x10
64003850:	mov    DWORD PTR [edi+0x4],ebx
64003853:	lea    edx,[esi+0xc]
64003856:	or     eax,0xffffffff
64003859:	lock xadd DWORD PTR [edx],eax
6400385d:	dec    eax
6400385e:	test   eax,eax
64003860:	jg     0x6400386c
64003862:	mov    ecx,DWORD PTR [esi]
64003864:	mov    edx,DWORD PTR [ecx]
64003866:	mov    eax,DWORD PTR [edx+0x4]
64003869:	push   esi
6400386a:	call   eax
6400386c:	mov    ecx,DWORD PTR [esp+0x10]
64003870:	pop    edi
64003871:	pop    esi
64003872:	mov    DWORD PTR [ecx],ebp
64003874:	pop    ebp
64003875:	pop    ebx
64003876:	pop    ecx
64003877:	ret    0x4
6400387a:	int3   
6400387b:	int3   
6400387c:	int3   
6400387d:	int3   
6400387e:	int3   
6400387f:	int3   
64003880:	push   0xffffffff
64003882:	push   0x6402363e
64003887:	mov    eax,fs:0x0
6400388d:	push   eax
6400388e:	mov    eax,ds:0x640521ac
64003893:	xor    eax,esp
64003895:	push   eax
64003896:	lea    eax,[esp+0x4]
6400389a:	mov    fs:0x0,eax
640038a0:	test   BYTE PTR ds:0x640544ec,0x1
640038a7:	jne    0x640038f9
640038a9:	or     DWORD PTR ds:0x640544ec,0x1
640038b0:	mov    ecx,0x640544d0
640038b5:	mov    DWORD PTR [esp+0xc],0x0
640038bd:	call   0x640064e0
640038c2:	mov    ds:0x640544d4,eax
640038c7:	mov    BYTE PTR [eax+0x45],0x1
640038cb:	mov    eax,ds:0x640544d4
640038d0:	mov    DWORD PTR [eax+0x4],eax
640038d3:	mov    eax,ds:0x640544d4
640038d8:	mov    DWORD PTR [eax],eax
640038da:	mov    eax,ds:0x640544d4
640038df:	mov    DWORD PTR [eax+0x8],eax
640038e2:	push   0x6402bdf0
640038e7:	mov    DWORD PTR ds:0x640544d8,0x0
640038f1:	call   0x64013f4a
640038f6:	add    esp,0x4
640038f9:	mov    eax,0x640544d0
640038fe:	mov    ecx,DWORD PTR [esp+0x4]
64003902:	mov    DWORD PTR fs:0x0,ecx
64003909:	pop    ecx
6400390a:	add    esp,0xc
6400390d:	ret    
6400390e:	int3   
6400390f:	int3   
64003910:	push   0xffffffff
64003912:	push   0x64023248
64003917:	mov    eax,fs:0x0
6400391d:	push   eax
6400391e:	push   ecx
6400391f:	push   ebx
64003920:	push   ebp
64003921:	push   esi
64003922:	push   edi
64003923:	mov    eax,ds:0x640521ac
64003928:	xor    eax,esp
6400392a:	push   eax
6400392b:	lea    eax,[esp+0x18]
6400392f:	mov    fs:0x0,eax
64003935:	mov    esi,DWORD PTR [esp+0x28]
64003939:	xor    eax,eax
6400393b:	mov    DWORD PTR [esp+0x14],eax
6400393f:	mov    DWORD PTR [esp+0x20],eax
64003943:	push   0xffffffff
64003945:	mov    DWORD PTR [esi+0x14],eax
64003948:	mov    DWORD PTR [esi+0x18],0xf
6400394f:	lea    ebp,[esi+0x4]
64003952:	push   eax
64003953:	mov    BYTE PTR [ebp+0x0],al
64003956:	lea    eax,[esp+0x34]
6400395a:	push   eax
6400395b:	mov    ecx,esi
6400395d:	call   0x64003370
64003962:	mov    eax,DWORD PTR [esi+0x14]
64003965:	mov    edi,0x1
6400396a:	cmp    eax,edi
6400396c:	jbe    0x640039ad
6400396e:	cmp    edi,eax
64003970:	jbe    0x64003977
64003972:	call   0x64013e16
64003977:	cmp    DWORD PTR [esi+0x18],0x10
6400397b:	jb     0x64003982
6400397d:	mov    ebx,DWORD PTR [ebp+0x0]
64003980:	jmp    0x64003984
64003982:	mov    ebx,ebp
64003984:	lea    ecx,[edi-0x1]
64003987:	cmp    ecx,DWORD PTR [esi+0x14]
6400398a:	jbe    0x64003991
6400398c:	call   0x64013e16
64003991:	cmp    DWORD PTR [esi+0x18],0x10
64003995:	jb     0x6400399c
64003997:	mov    eax,DWORD PTR [ebp+0x0]
6400399a:	jmp    0x6400399e
6400399c:	mov    eax,ebp
6400399e:	mov    dl,BYTE PTR [eax+edi*1-0x1]
640039a2:	xor    BYTE PTR [ebx+edi*1],dl
640039a5:	add    edi,0x1
640039a8:	cmp    edi,DWORD PTR [esi+0x14]
640039ab:	jb     0x64003977
640039ad:	cmp    DWORD PTR [esp+0x44],0x10
640039b2:	jb     0x640039c1
640039b4:	mov    eax,DWORD PTR [esp+0x30]
640039b8:	push   eax
640039b9:	call   0x640135e4
640039be:	add    esp,0x4
640039c1:	mov    eax,esi
640039c3:	mov    ecx,DWORD PTR [esp+0x18]
640039c7:	mov    DWORD PTR fs:0x0,ecx
640039ce:	pop    ecx
640039cf:	pop    edi
640039d0:	pop    esi
640039d1:	pop    ebp
640039d2:	pop    ebx
640039d3:	add    esp,0x10
640039d6:	ret    
640039d7:	int3   
640039d8:	int3   
640039d9:	int3   
640039da:	int3   
640039db:	int3   
640039dc:	int3   
640039dd:	int3   
640039de:	int3   
640039df:	int3   
640039e0:	push   0xffffffff
640039e2:	push   0x6402360e
640039e7:	mov    eax,fs:0x0
640039ed:	push   eax
640039ee:	mov    eax,ds:0x640521ac
640039f3:	xor    eax,esp
640039f5:	push   eax
640039f6:	lea    eax,[esp+0x4]
640039fa:	mov    fs:0x0,eax
64003a00:	test   BYTE PTR ds:0x640544e8,0x1
64003a07:	jne    0x64003a54
64003a09:	or     DWORD PTR ds:0x640544e8,0x1
64003a10:	mov    DWORD PTR [esp+0xc],0x0
64003a18:	call   0x640064e0
64003a1d:	mov    ds:0x640544e0,eax
64003a22:	mov    BYTE PTR [eax+0x45],0x1
64003a26:	mov    eax,ds:0x640544e0
64003a2b:	mov    DWORD PTR [eax+0x4],eax
64003a2e:	mov    eax,ds:0x640544e0
64003a33:	mov    DWORD PTR [eax],eax
64003a35:	mov    eax,ds:0x640544e0
64003a3a:	mov    DWORD PTR [eax+0x8],eax
64003a3d:	push   0x6402bda0
64003a42:	mov    DWORD PTR ds:0x640544e4,0x0
64003a4c:	call   0x64013f4a
64003a51:	add    esp,0x4
64003a54:	mov    eax,0x640544dc
64003a59:	mov    ecx,DWORD PTR [esp+0x4]
64003a5d:	mov    DWORD PTR fs:0x0,ecx
64003a64:	pop    ecx
64003a65:	add    esp,0xc
64003a68:	ret    
64003a69:	int3   
64003a6a:	int3   
64003a6b:	int3   
64003a6c:	int3   
64003a6d:	int3   
64003a6e:	int3   
64003a6f:	int3   
64003a70:	push   0xffffffff
64003a72:	push   0x64023008
64003a77:	mov    eax,fs:0x0
64003a7d:	push   eax
64003a7e:	push   ecx
64003a7f:	push   ebx
64003a80:	push   ebp
64003a81:	push   edi
64003a82:	mov    eax,ds:0x640521ac
64003a87:	xor    eax,esp
64003a89:	push   eax
64003a8a:	lea    eax,[esp+0x14]
64003a8e:	mov    fs:0x0,eax
64003a94:	xor    eax,eax
64003a96:	mov    DWORD PTR [esp+0x10],eax
64003a9a:	mov    DWORD PTR [esp+0x1c],eax
64003a9e:	mov    DWORD PTR [esi+0x14],eax
64003aa1:	push   0xffffffff
64003aa3:	mov    DWORD PTR [esi+0x18],0x7
64003aaa:	lea    ebp,[esi+0x4]
64003aad:	mov    WORD PTR [ebp+0x0],ax
64003ab1:	push   eax
64003ab2:	lea    eax,[esp+0x2c]
64003ab6:	mov    ecx,esi
64003ab8:	call   0x64004750
64003abd:	mov    eax,DWORD PTR [esi+0x14]
64003ac0:	mov    edi,0x1
64003ac5:	cmp    eax,edi
64003ac7:	jbe    0x64003b0a
64003ac9:	cmp    edi,eax
64003acb:	jbe    0x64003ad2
64003acd:	call   0x64013e16
64003ad2:	cmp    DWORD PTR [esi+0x18],0x8
64003ad6:	jb     0x64003add
64003ad8:	mov    ebx,DWORD PTR [ebp+0x0]
64003adb:	jmp    0x64003adf
64003add:	mov    ebx,ebp
64003adf:	lea    eax,[edi-0x1]
64003ae2:	cmp    eax,DWORD PTR [esi+0x14]
64003ae5:	jbe    0x64003aec
64003ae7:	call   0x64013e16
64003aec:	cmp    DWORD PTR [esi+0x18],0x8
64003af0:	jb     0x64003af7
64003af2:	mov    eax,DWORD PTR [ebp+0x0]
64003af5:	jmp    0x64003af9
64003af7:	mov    eax,ebp
64003af9:	mov    cx,WORD PTR [eax+edi*2-0x2]
64003afe:	xor    WORD PTR [ebx+edi*2],cx
64003b02:	add    edi,0x1
64003b05:	cmp    edi,DWORD PTR [esi+0x14]
64003b08:	jb     0x64003ad2
64003b0a:	cmp    DWORD PTR [esp+0x3c],0x8
64003b0f:	jb     0x64003b1e
64003b11:	mov    edx,DWORD PTR [esp+0x28]
64003b15:	push   edx
64003b16:	call   0x640135e4
64003b1b:	add    esp,0x4
64003b1e:	mov    eax,esi
64003b20:	mov    ecx,DWORD PTR [esp+0x14]
64003b24:	mov    DWORD PTR fs:0x0,ecx
64003b2b:	pop    ecx
64003b2c:	pop    edi
64003b2d:	pop    ebp
64003b2e:	pop    ebx
64003b2f:	add    esp,0x10
64003b32:	ret    
64003b33:	int3   
64003b34:	int3   
64003b35:	int3   
64003b36:	int3   
64003b37:	int3   
64003b38:	int3   
64003b39:	int3   
64003b3a:	int3   
64003b3b:	int3   
64003b3c:	int3   
64003b3d:	int3   
64003b3e:	int3   
64003b3f:	int3   
64003b40:	push   ebp
64003b41:	mov    ebp,esp
64003b43:	and    esp,0xfffffff8
64003b46:	push   0xffffffff
64003b48:	push   0x640235e0
64003b4d:	mov    eax,fs:0x0
64003b53:	push   eax
64003b54:	sub    esp,0x60
64003b57:	push   ebx
64003b58:	push   esi
64003b59:	push   edi
64003b5a:	mov    eax,ds:0x640521ac
64003b5f:	xor    eax,esp
64003b61:	push   eax
64003b62:	lea    eax,[esp+0x70]
64003b66:	mov    fs:0x0,eax
64003b6c:	mov    edi,ecx
64003b6e:	mov    ebx,DWORD PTR [ebp+0x8]
64003b71:	push   ebx
64003b72:	call   0x64005060
64003b77:	test   edi,edi
64003b79:	mov    esi,eax
64003b7b:	jne    0x64003b82
64003b7d:	call   0x64013e16
64003b82:	mov    eax,DWORD PTR [edi+0x4]
64003b85:	cmp    esi,eax
64003b87:	je     0x64003bb1
64003b89:	cmp    DWORD PTR [esi+0x24],0x10
64003b8d:	mov    ecx,DWORD PTR [esi+0x20]
64003b90:	jb     0x64003b97
64003b92:	mov    eax,DWORD PTR [esi+0x10]
64003b95:	jmp    0x64003b9a
64003b97:	lea    eax,[esi+0x10]
64003b9a:	push   ecx
64003b9b:	push   eax
64003b9c:	mov    eax,DWORD PTR [ebx+0x14]
64003b9f:	push   eax
64003ba0:	push   0x0
64003ba2:	mov    ecx,ebx
64003ba4:	call   0x64003520
64003ba9:	test   eax,eax
64003bab:	jge    0x64003c65
64003bb1:	xor    eax,eax
64003bb3:	mov    DWORD PTR [esp+0x30],0xf
64003bbb:	mov    DWORD PTR [esp+0x2c],eax
64003bbf:	mov    BYTE PTR [esp+0x1c],al
64003bc3:	lea    ecx,[esp+0x18]
64003bc7:	push   ecx
64003bc8:	push   ebx
64003bc9:	lea    ecx,[esp+0x3c]
64003bcd:	mov    DWORD PTR [esp+0x80],eax
64003bd4:	call   0x640046d0
64003bd9:	push   eax
64003bda:	push   esi
64003bdb:	push   edi
64003bdc:	lea    edx,[esp+0x1c]
64003be0:	push   edx
64003be1:	mov    ecx,edi
64003be3:	mov    BYTE PTR [esp+0x88],0x1
64003beb:	call   0x64004480
64003bf0:	cmp    DWORD PTR [esp+0x68],0x10
64003bf5:	mov    edi,DWORD PTR [eax]
64003bf7:	mov    esi,DWORD PTR [eax+0x4]
64003bfa:	jb     0x64003c09
64003bfc:	mov    eax,DWORD PTR [esp+0x54]
64003c00:	push   eax
64003c01:	call   0x640135e4
64003c06:	add    esp,0x4
64003c09:	xor    ebx,ebx
64003c0b:	cmp    DWORD PTR [esp+0x4c],0x10
64003c10:	mov    DWORD PTR [esp+0x68],0xf
64003c18:	mov    DWORD PTR [esp+0x64],ebx
64003c1c:	mov    BYTE PTR [esp+0x54],bl
64003c20:	jb     0x64003c2f
64003c22:	mov    ecx,DWORD PTR [esp+0x38]
64003c26:	push   ecx
64003c27:	call   0x640135e4
64003c2c:	add    esp,0x4
64003c2f:	cmp    DWORD PTR [esp+0x30],0x10
64003c34:	mov    DWORD PTR [esp+0x4c],0xf
64003c3c:	mov    DWORD PTR [esp+0x48],ebx
64003c40:	mov    BYTE PTR [esp+0x38],bl
64003c44:	jb     0x64003c53
64003c46:	mov    edx,DWORD PTR [esp+0x1c]
64003c4a:	push   edx
64003c4b:	call   0x640135e4
64003c50:	add    esp,0x4
64003c53:	mov    DWORD PTR [esp+0x30],0xf
64003c5b:	mov    DWORD PTR [esp+0x2c],ebx
64003c5f:	mov    BYTE PTR [esp+0x1c],bl
64003c63:	jmp    0x64003c67
64003c65:	xor    ebx,ebx
64003c67:	cmp    edi,ebx
64003c69:	jne    0x64003c70
64003c6b:	call   0x64013e16
64003c70:	cmp    esi,DWORD PTR [edi+0x4]
64003c73:	jne    0x64003c7a
64003c75:	call   0x64013e16
64003c7a:	lea    eax,[esi+0x28]
64003c7d:	mov    ecx,DWORD PTR [esp+0x70]
64003c81:	mov    DWORD PTR fs:0x0,ecx
64003c88:	pop    ecx
64003c89:	pop    edi
64003c8a:	pop    esi
64003c8b:	pop    ebx
64003c8c:	mov    esp,ebp
64003c8e:	pop    ebp
64003c8f:	ret    0x4
64003c92:	int3   
64003c93:	int3   
64003c94:	int3   
64003c95:	int3   
64003c96:	int3   
64003c97:	int3   
64003c98:	int3   
64003c99:	int3   
64003c9a:	int3   
64003c9b:	int3   
64003c9c:	int3   
64003c9d:	int3   
64003c9e:	int3   
64003c9f:	int3   
64003ca0:	sub    esp,0x18
64003ca3:	push   ebx
64003ca4:	mov    ebx,DWORD PTR [esp+0x24]
64003ca8:	push   esi
64003ca9:	push   edi
64003caa:	push   ebx
64003cab:	mov    esi,ecx
64003cad:	call   0x64005060
64003cb2:	test   esi,esi
64003cb4:	mov    edi,eax
64003cb6:	mov    DWORD PTR [esp+0x14],edi
64003cba:	jne    0x64003cc1
64003cbc:	call   0x64013e16
64003cc1:	cmp    edi,DWORD PTR [esi+0x4]
64003cc4:	mov    DWORD PTR [esp+0x10],esi
64003cc8:	je     0x64003cf4
64003cca:	cmp    DWORD PTR [edi+0x24],0x10
64003cce:	mov    eax,DWORD PTR [edi+0x20]
64003cd1:	jb     0x64003cd8
64003cd3:	mov    edi,DWORD PTR [edi+0x10]
64003cd6:	jmp    0x64003cdb
64003cd8:	add    edi,0x10
64003cdb:	push   eax
64003cdc:	mov    eax,DWORD PTR [ebx+0x14]
64003cdf:	push   edi
64003ce0:	push   eax
64003ce1:	push   0x0
64003ce3:	mov    ecx,ebx
64003ce5:	call   0x64003520
64003cea:	test   eax,eax
64003cec:	jl     0x64003cf4
64003cee:	lea    ecx,[esp+0x10]
64003cf2:	jmp    0x64003d03
64003cf4:	mov    ecx,DWORD PTR [esi+0x4]
64003cf7:	mov    DWORD PTR [esp+0x1c],ecx
64003cfb:	mov    DWORD PTR [esp+0x18],esi
64003cff:	lea    ecx,[esp+0x18]
64003d03:	mov    edx,DWORD PTR [ecx]
64003d05:	mov    eax,DWORD PTR [esp+0x28]
64003d09:	mov    ecx,DWORD PTR [ecx+0x4]
64003d0c:	pop    edi
64003d0d:	pop    esi
64003d0e:	mov    DWORD PTR [eax],edx
64003d10:	mov    DWORD PTR [eax+0x4],ecx
64003d13:	pop    ebx
64003d14:	add    esp,0x18
64003d17:	ret    0x8
64003d1a:	int3   
64003d1b:	int3   
64003d1c:	int3   
64003d1d:	int3   
64003d1e:	int3   
64003d1f:	int3   
64003d20:	push   esi
64003d21:	mov    esi,ecx
64003d23:	mov    eax,DWORD PTR [esi]
64003d25:	test   eax,eax
64003d27:	push   edi
64003d28:	mov    edi,DWORD PTR [esp+0xc]
64003d2c:	je     0x64003d32
64003d2e:	cmp    eax,DWORD PTR [edi]
64003d30:	je     0x64003d37
64003d32:	call   0x64013e16
64003d37:	mov    eax,DWORD PTR [esi+0x4]
64003d3a:	xor    ecx,ecx
64003d3c:	cmp    eax,DWORD PTR [edi+0x4]
64003d3f:	pop    edi
64003d40:	sete   cl
64003d43:	mov    al,cl
64003d45:	pop    esi
64003d46:	ret    0x4
64003d49:	int3   
64003d4a:	int3   
64003d4b:	int3   
64003d4c:	int3   
64003d4d:	int3   
64003d4e:	int3   
64003d4f:	int3   
64003d50:	cmp    DWORD PTR [esi+0x18],0x8
64003d54:	jb     0x64003d62
64003d56:	mov    eax,DWORD PTR [esi+0x4]
64003d59:	push   eax
64003d5a:	call   0x640135e4
64003d5f:	add    esp,0x4
64003d62:	xor    eax,eax
64003d64:	mov    DWORD PTR [esi+0x18],0x7
64003d6b:	mov    DWORD PTR [esi+0x14],eax
64003d6e:	mov    WORD PTR [esi+0x4],ax
64003d72:	ret    
64003d73:	int3   
64003d74:	int3   
64003d75:	int3   
64003d76:	int3   
64003d77:	int3   
64003d78:	int3   
64003d79:	int3   
64003d7a:	int3   
64003d7b:	int3   
64003d7c:	int3   
64003d7d:	int3   
64003d7e:	int3   
64003d7f:	int3   
64003d80:	push   0xffffffff
64003d82:	push   0x640235b0
64003d87:	mov    eax,fs:0x0
64003d8d:	push   eax
64003d8e:	sub    esp,0x60
64003d91:	push   ebx
64003d92:	push   ebp
64003d93:	push   esi
64003d94:	push   edi
64003d95:	mov    eax,ds:0x640521ac
64003d9a:	xor    eax,esp
64003d9c:	push   eax
64003d9d:	lea    eax,[esp+0x74]
64003da1:	mov    fs:0x0,eax
64003da7:	mov    ebx,ecx
64003da9:	mov    ecx,DWORD PTR [esp+0x84]
64003db0:	mov    eax,ebx
64003db2:	call   0x64005600
64003db7:	xor    ebp,ebp
64003db9:	cmp    ebx,ebp
64003dbb:	mov    esi,eax
64003dbd:	jne    0x64003dc4
64003dbf:	call   0x64013e16
64003dc4:	mov    eax,DWORD PTR [ebx+0x4]
64003dc7:	cmp    esi,eax
64003dc9:	je     0x64003df4
64003dcb:	cmp    DWORD PTR [esi+0x24],0x8
64003dcf:	mov    edi,DWORD PTR [esi+0x20]
64003dd2:	jb     0x64003dd9
64003dd4:	mov    eax,DWORD PTR [esi+0x10]
64003dd7:	jmp    0x64003ddc
64003dd9:	lea    eax,[esi+0x10]
64003ddc:	mov    ecx,DWORD PTR [esp+0x84]
64003de3:	push   eax
64003de4:	mov    eax,DWORD PTR [ecx+0x14]
64003de7:	call   0x64006970
64003dec:	test   eax,eax
64003dee:	jge    0x64003ea1
64003df4:	mov    edi,0x7
64003df9:	mov    DWORD PTR [esp+0x34],edi
64003dfd:	mov    DWORD PTR [esp+0x30],ebp
64003e01:	mov    WORD PTR [esp+0x20],bp
64003e06:	mov    ecx,DWORD PTR [esp+0x84]
64003e0d:	lea    eax,[esp+0x1c]
64003e11:	push   eax
64003e12:	push   ecx
64003e13:	lea    edx,[esp+0x40]
64003e17:	push   edx
64003e18:	mov    DWORD PTR [esp+0x88],ebp
64003e1f:	call   0x64004af0
64003e24:	push   esi
64003e25:	push   ebx
64003e26:	push   eax
64003e27:	lea    eax,[esp+0x20]
64003e2b:	push   eax
64003e2c:	mov    BYTE PTR [esp+0x8c],0x1
64003e34:	call   0x640048a0
64003e39:	cmp    DWORD PTR [esp+0x6c],0x8
64003e3e:	mov    ebx,DWORD PTR [eax]
64003e40:	mov    esi,DWORD PTR [eax+0x4]
64003e43:	jb     0x64003e52
64003e45:	mov    ecx,DWORD PTR [esp+0x58]
64003e49:	push   ecx
64003e4a:	call   0x640135e4
64003e4f:	add    esp,0x4
64003e52:	cmp    DWORD PTR [esp+0x50],0x8
64003e57:	mov    DWORD PTR [esp+0x6c],edi
64003e5b:	mov    DWORD PTR [esp+0x68],ebp
64003e5f:	mov    WORD PTR [esp+0x58],bp
64003e64:	jb     0x64003e73
64003e66:	mov    edx,DWORD PTR [esp+0x3c]
64003e6a:	push   edx
64003e6b:	call   0x640135e4
64003e70:	add    esp,0x4
64003e73:	cmp    DWORD PTR [esp+0x34],0x8
64003e78:	mov    DWORD PTR [esp+0x50],edi
64003e7c:	mov    DWORD PTR [esp+0x4c],ebp
64003e80:	mov    WORD PTR [esp+0x3c],bp
64003e85:	jb     0x64003e94
64003e87:	mov    eax,DWORD PTR [esp+0x20]
64003e8b:	push   eax
64003e8c:	call   0x640135e4
64003e91:	add    esp,0x4
64003e94:	mov    DWORD PTR [esp+0x34],edi
64003e98:	mov    DWORD PTR [esp+0x30],ebp
64003e9c:	mov    WORD PTR [esp+0x20],bp
64003ea1:	cmp    ebx,ebp
64003ea3:	jne    0x64003eaa
64003ea5:	call   0x64013e16
64003eaa:	cmp    esi,DWORD PTR [ebx+0x4]
64003ead:	jne    0x64003eb4
64003eaf:	call   0x64013e16
64003eb4:	lea    eax,[esi+0x28]
64003eb7:	mov    ecx,DWORD PTR [esp+0x74]
64003ebb:	mov    DWORD PTR fs:0x0,ecx
64003ec2:	pop    ecx
64003ec3:	pop    edi
64003ec4:	pop    esi
64003ec5:	pop    ebp
64003ec6:	pop    ebx
64003ec7:	add    esp,0x6c
64003eca:	ret    0x4
64003ecd:	int3   
64003ece:	int3   
64003ecf:	int3   
64003ed0:	sub    esp,0x18
64003ed3:	push   ebp
64003ed4:	mov    ebp,DWORD PTR [esp+0x24]
64003ed8:	push   esi
64003ed9:	push   edi
64003eda:	mov    ecx,ebp
64003edc:	mov    eax,ebx
64003ede:	call   0x64005600
64003ee3:	test   ebx,ebx
64003ee5:	mov    esi,eax
64003ee7:	mov    DWORD PTR [esp+0x14],esi
64003eeb:	jne    0x64003ef2
64003eed:	call   0x64013e16
64003ef2:	cmp    esi,DWORD PTR [ebx+0x4]
64003ef5:	mov    DWORD PTR [esp+0x10],ebx
64003ef9:	je     0x64003f21
64003efb:	cmp    DWORD PTR [esi+0x24],0x8
64003eff:	mov    edi,DWORD PTR [esi+0x20]
64003f02:	jb     0x64003f09
64003f04:	mov    esi,DWORD PTR [esi+0x10]
64003f07:	jmp    0x64003f0c
64003f09:	add    esi,0x10
64003f0c:	mov    eax,DWORD PTR [ebp+0x14]
64003f0f:	push   esi
64003f10:	mov    ecx,ebp
64003f12:	call   0x64006970
64003f17:	test   eax,eax
64003f19:	jl     0x64003f21
64003f1b:	lea    eax,[esp+0x10]
64003f1f:	jmp    0x64003f30
64003f21:	mov    eax,DWORD PTR [ebx+0x4]
64003f24:	mov    DWORD PTR [esp+0x1c],eax
64003f28:	mov    DWORD PTR [esp+0x18],ebx
64003f2c:	lea    eax,[esp+0x18]
64003f30:	mov    edx,DWORD PTR [eax]
64003f32:	mov    ecx,DWORD PTR [esp+0x28]
64003f36:	mov    eax,DWORD PTR [eax+0x4]
64003f39:	pop    edi
64003f3a:	pop    esi
64003f3b:	mov    DWORD PTR [ecx+0x4],eax
64003f3e:	mov    DWORD PTR [ecx],edx
64003f40:	mov    eax,ecx
64003f42:	pop    ebp
64003f43:	add    esp,0x18
64003f46:	ret    0x8
64003f49:	int3   
64003f4a:	int3   
64003f4b:	int3   
64003f4c:	int3   
64003f4d:	int3   
64003f4e:	int3   
64003f4f:	int3   
64003f50:	mov    eax,DWORD PTR [edi]
64003f52:	test   eax,eax
64003f54:	je     0x64003f5a
64003f56:	cmp    eax,DWORD PTR [esi]
64003f58:	je     0x64003f5f
64003f5a:	call   0x64013e16
64003f5f:	mov    eax,DWORD PTR [edi+0x4]
64003f62:	xor    ecx,ecx
64003f64:	cmp    eax,DWORD PTR [esi+0x4]
64003f67:	sete   cl
64003f6a:	mov    al,cl
64003f6c:	ret    
64003f6d:	int3   
64003f6e:	int3   
64003f6f:	int3   
64003f70:	mov    eax,DWORD PTR [esp+0x4]
64003f74:	push   esi
64003f75:	push   eax
64003f76:	mov    esi,ecx
64003f78:	call   0x64001670
64003f7d:	mov    DWORD PTR [esi],0x6402c2e8
64003f83:	mov    eax,esi
64003f85:	pop    esi
64003f86:	ret    0x4
64003f89:	int3   
64003f8a:	int3   
64003f8b:	int3   
64003f8c:	int3   
64003f8d:	int3   
64003f8e:	int3   
64003f8f:	int3   
64003f90:	push   ebx
64003f91:	push   esi
64003f92:	mov    esi,ecx
64003f94:	cmp    DWORD PTR [esi+0x34],0x10
64003f98:	jb     0x64003fa6
64003f9a:	mov    eax,DWORD PTR [esi+0x20]
64003f9d:	push   eax
64003f9e:	call   0x640135e4
64003fa3:	add    esp,0x4
64003fa6:	xor    ebx,ebx
64003fa8:	mov    DWORD PTR [esi+0x34],0xf
64003faf:	mov    DWORD PTR [esi+0x30],ebx
64003fb2:	mov    BYTE PTR [esi+0x20],bl
64003fb5:	cmp    DWORD PTR [esi+0x18],0x10
64003fb9:	jb     0x64003fc7
64003fbb:	mov    ecx,DWORD PTR [esi+0x4]
64003fbe:	push   ecx
64003fbf:	call   0x640135e4
64003fc4:	add    esp,0x4
64003fc7:	mov    DWORD PTR [esi+0x14],ebx
64003fca:	mov    DWORD PTR [esi+0x18],0xf
64003fd1:	mov    BYTE PTR [esi+0x4],bl
64003fd4:	pop    esi
64003fd5:	pop    ebx
64003fd6:	ret    
64003fd7:	int3   
64003fd8:	int3   
64003fd9:	int3   
64003fda:	int3   
64003fdb:	int3   
64003fdc:	int3   
64003fdd:	int3   
64003fde:	int3   
64003fdf:	int3   
64003fe0:	cmp    DWORD PTR [esi+0x34],0x8
64003fe4:	jb     0x64003ff2
64003fe6:	mov    eax,DWORD PTR [esi+0x20]
64003fe9:	push   eax
64003fea:	call   0x640135e4
64003fef:	add    esp,0x4
64003ff2:	push   edi
64003ff3:	xor    edi,edi
64003ff5:	mov    DWORD PTR [esi+0x34],0x7
64003ffc:	mov    DWORD PTR [esi+0x30],edi
64003fff:	mov    WORD PTR [esi+0x20],di
64004003:	cmp    DWORD PTR [esi+0x18],0x8
64004007:	jb     0x64004015
64004009:	mov    ecx,DWORD PTR [esi+0x4]
6400400c:	push   ecx
6400400d:	call   0x640135e4
64004012:	add    esp,0x4
64004015:	mov    DWORD PTR [esi+0x14],edi
64004018:	mov    DWORD PTR [esi+0x18],0x7
6400401f:	mov    WORD PTR [esi+0x4],di
64004023:	pop    edi
64004024:	ret    
64004025:	int3   
64004026:	int3   
64004027:	int3   
64004028:	int3   
64004029:	int3   
6400402a:	int3   
6400402b:	int3   
6400402c:	int3   
6400402d:	int3   
6400402e:	int3   
6400402f:	int3   
64004030:	push   ebx
64004031:	mov    ebx,DWORD PTR [esp+0x8]
64004035:	push   esi
64004036:	mov    esi,ecx
64004038:	cmp    DWORD PTR [esi+0x14],ebx
6400403b:	push   edi
6400403c:	jae    0x64004043
6400403e:	call   0x64012efb
64004043:	mov    eax,DWORD PTR [esi+0x14]
64004046:	mov    edi,DWORD PTR [esp+0x14]
6400404a:	sub    eax,ebx
6400404c:	cmp    eax,edi
6400404e:	jae    0x64004052
64004050:	mov    edi,eax
64004052:	test   edi,edi
64004054:	jbe    0x640040ab
64004056:	mov    ecx,DWORD PTR [esi+0x18]
64004059:	cmp    ecx,0x10
6400405c:	push   ebp
6400405d:	lea    ebp,[esi+0x4]
64004060:	jb     0x6400406b
64004062:	mov    edx,DWORD PTR [ebp+0x0]
64004065:	mov    DWORD PTR [esp+0x14],edx
64004069:	jmp    0x6400406f
6400406b:	mov    DWORD PTR [esp+0x14],ebp
6400406f:	cmp    ecx,0x10
64004072:	jb     0x64004079
64004074:	mov    edx,DWORD PTR [ebp+0x0]
64004077:	jmp    0x6400407b
64004079:	mov    edx,ebp
6400407b:	sub    eax,edi
6400407d:	push   eax
6400407e:	mov    eax,DWORD PTR [esp+0x18]
64004082:	add    eax,ebx
64004084:	add    eax,edi
64004086:	push   eax
64004087:	sub    ecx,ebx
64004089:	push   ecx
6400408a:	add    edx,ebx
6400408c:	push   edx
6400408d:	call   0x640137b7
64004092:	mov    eax,DWORD PTR [esi+0x14]
64004095:	sub    eax,edi
64004097:	add    esp,0x10
6400409a:	cmp    DWORD PTR [esi+0x18],0x10
6400409e:	mov    DWORD PTR [esi+0x14],eax
640040a1:	jb     0x640040a6
640040a3:	mov    ebp,DWORD PTR [ebp+0x0]
640040a6:	mov    BYTE PTR [eax+ebp*1],0x0
640040aa:	pop    ebp
640040ab:	pop    edi
640040ac:	mov    eax,esi
640040ae:	pop    esi
640040af:	pop    ebx
640040b0:	ret    0x8
640040b3:	int3   
640040b4:	int3   
640040b5:	int3   
640040b6:	int3   
640040b7:	int3   
640040b8:	int3   
640040b9:	int3   
640040ba:	int3   
640040bb:	int3   
640040bc:	int3   
640040bd:	int3   
640040be:	int3   
640040bf:	int3   
640040c0:	push   ebp
640040c1:	mov    ebp,esp
640040c3:	push   0xffffffff
640040c5:	push   0x64022fe0
640040ca:	mov    eax,fs:0x0
640040d0:	push   eax
640040d1:	sub    esp,0x1c
640040d4:	push   ebx
640040d5:	push   esi
640040d6:	push   edi
640040d7:	mov    eax,ds:0x640521ac
640040dc:	xor    eax,ebp
640040de:	push   eax
640040df:	lea    eax,[ebp-0xc]
640040e2:	mov    fs:0x0,eax
640040e8:	mov    DWORD PTR [ebp-0x10],esp
640040eb:	mov    edi,ecx
640040ed:	mov    DWORD PTR [ebp-0x14],edi
640040f0:	mov    eax,DWORD PTR [ebp+0x8]
640040f3:	mov    esi,eax
640040f5:	or     esi,0xf
640040f8:	cmp    esi,0xfffffffe
640040fb:	jbe    0x64004101
640040fd:	mov    esi,eax
640040ff:	jmp    0x64004123
64004101:	mov    ebx,DWORD PTR [edi+0x18]
64004104:	mov    eax,0xaaaaaaab
64004109:	mul    esi
6400410b:	mov    ecx,ebx
6400410d:	shr    ecx,1
6400410f:	shr    edx,1
64004111:	cmp    edx,ecx
64004113:	jae    0x64004123
64004115:	mov    eax,0xfffffffe
6400411a:	sub    eax,ecx
6400411c:	cmp    ebx,eax
6400411e:	ja     0x64004123
64004120:	lea    esi,[ecx+ebx*1]
64004123:	xor    ebx,ebx
64004125:	lea    ecx,[esi+0x1]
64004128:	cmp    ecx,ebx
6400412a:	mov    DWORD PTR [ebp-0x4],ebx
6400412d:	ja     0x6400413f
6400412f:	xor    ecx,ecx
64004131:	push   ecx
64004132:	call   0x64013875
64004137:	add    esp,0x4
6400413a:	mov    DWORD PTR [ebp+0x8],eax
6400413d:	jmp    0x64004197
6400413f:	or     eax,0xffffffff
64004142:	xor    edx,edx
64004144:	div    ecx
64004146:	cmp    eax,0x1
64004149:	jae    0x64004131
6400414b:	lea    ecx,[ebp-0x18]
6400414e:	push   ecx
6400414f:	lea    ecx,[ebp-0x28]
64004152:	mov    DWORD PTR [ebp-0x18],ebx
64004155:	call   0x640135fa
6400415a:	push   0x6404413c
6400415f:	lea    edx,[ebp-0x28]
64004162:	push   edx
64004163:	mov    DWORD PTR [ebp-0x28],0x6402c2ac
6400416a:	call   0x64013812
6400416f:	mov    eax,DWORD PTR [ebp+0x8]
64004172:	mov    ecx,DWORD PTR [ebp-0x14]
64004175:	mov    DWORD PTR [ebp-0x1c],eax
64004178:	add    eax,0x1
6400417b:	mov    DWORD PTR [ebp-0x10],esp
6400417e:	push   eax
6400417f:	mov    BYTE PTR [ebp-0x4],0x2
64004183:	call   0x64003590
64004188:	mov    DWORD PTR [ebp+0x8],eax
6400418b:	mov    eax,0x64004191
64004190:	ret    
64004191:	mov    edi,DWORD PTR [ebp-0x14]
64004194:	mov    esi,DWORD PTR [ebp-0x1c]
64004197:	mov    ebx,DWORD PTR [ebp+0xc]
6400419a:	test   ebx,ebx
6400419c:	jbe    0x640041be
6400419e:	cmp    DWORD PTR [edi+0x18],0x10
640041a2:	jb     0x640041a9
640041a4:	mov    eax,DWORD PTR [edi+0x4]
640041a7:	jmp    0x640041ac
640041a9:	lea    eax,[edi+0x4]
640041ac:	mov    ecx,DWORD PTR [ebp+0x8]
640041af:	push   ebx
640041b0:	push   eax
640041b1:	lea    eax,[esi+0x1]
640041b4:	push   eax
640041b5:	push   ecx
640041b6:	call   0x6401373c
640041bb:	add    esp,0x10
640041be:	cmp    DWORD PTR [edi+0x18],0x10
640041c2:	jb     0x640041d0
640041c4:	mov    edx,DWORD PTR [edi+0x4]
640041c7:	push   edx
640041c8:	call   0x640135e4
640041cd:	add    esp,0x4
640041d0:	cmp    esi,0x10
640041d3:	mov    ecx,DWORD PTR [ebp+0x8]
640041d6:	lea    eax,[edi+0x4]
640041d9:	mov    BYTE PTR [eax],0x0
640041dc:	mov    DWORD PTR [eax],ecx
640041de:	mov    DWORD PTR [edi+0x18],esi
640041e1:	mov    DWORD PTR [edi+0x14],ebx
640041e4:	jb     0x640041e8
640041e6:	mov    eax,ecx
640041e8:	mov    BYTE PTR [eax+ebx*1],0x0
640041ec:	mov    ecx,DWORD PTR [ebp-0xc]
640041ef:	mov    DWORD PTR fs:0x0,ecx
640041f6:	pop    ecx
640041f7:	pop    edi
640041f8:	pop    esi
640041f9:	pop    ebx
640041fa:	mov    esp,ebp
640041fc:	pop    ebp
640041fd:	ret    0x8
64004200:	mov    esi,DWORD PTR [ebp-0x14]
64004203:	cmp    DWORD PTR [esi+0x18],0x10
64004207:	jb     0x64004215
64004209:	mov    eax,DWORD PTR [esi+0x4]
6400420c:	push   eax
6400420d:	call   0x640135e4
64004212:	add    esp,0x4
64004215:	push   0x0
64004217:	mov    DWORD PTR [esi+0x18],0xf
6400421e:	mov    DWORD PTR [esi+0x14],0x0
64004225:	push   0x0
64004227:	mov    BYTE PTR [esi+0x4],0x0
6400422b:	call   0x64013812
64004230:	int3   
64004231:	int3   
64004232:	int3   
64004233:	int3   
64004234:	int3   
64004235:	int3   
64004236:	int3   
64004237:	int3   
64004238:	int3   
64004239:	int3   
6400423a:	int3   
6400423b:	int3   
6400423c:	int3   
6400423d:	int3   
6400423e:	int3   
6400423f:	int3   
64004240:	test   ecx,ecx
64004242:	jne    0x6400424e
64004244:	push   0x80004005
64004249:	call   0x64001080
6400424e:	test   ebx,ebx
64004250:	jne    0x64004260
64004252:	test   esi,esi
64004254:	je     0x64004260
64004256:	push   0x80070057
6400425b:	call   0x64001080
64004260:	mov    eax,DWORD PTR [ecx]
64004262:	mov    edx,DWORD PTR [eax]
64004264:	push   0x2
64004266:	push   esi
64004267:	call   edx
64004269:	test   eax,eax
6400426b:	jne    0x64004272
6400426d:	jmp    0x640043b0
64004272:	add    eax,0x10
64004275:	test   esi,esi
64004277:	mov    DWORD PTR [edi],eax
64004279:	jl     0x64004256
6400427b:	cmp    esi,DWORD PTR [eax-0x8]
6400427e:	jg     0x64004256
64004280:	mov    DWORD PTR [eax-0xc],esi
64004283:	mov    ecx,DWORD PTR [edi]
64004285:	lea    eax,[esi+esi*1]
64004288:	push   eax
64004289:	push   ebx
6400428a:	mov    WORD PTR [eax+ecx*1],0x0
64004290:	mov    edx,DWORD PTR [edi]
64004292:	push   eax
64004293:	push   edx
64004294:	call   0x6401373c
64004299:	add    esp,0x10
6400429c:	mov    eax,edi
6400429e:	ret    
6400429f:	int3   
640042a0:	push   esi
640042a1:	mov    esi,ecx
640042a3:	mov    ecx,DWORD PTR [esi]
640042a5:	cmp    DWORD PTR [ecx-0xc],0x0
640042a9:	lea    eax,[ecx-0x10]
640042ac:	push   edi
640042ad:	mov    edi,DWORD PTR [eax]
640042af:	je     0x640042ff
640042b1:	cmp    DWORD PTR [eax+0xc],0x0
640042b5:	lea    edx,[eax+0xc]
640042b8:	jge    0x640042db
640042ba:	cmp    DWORD PTR [ecx-0x8],0x0
640042be:	jge    0x640042ca
640042c0:	push   0x80070057
640042c5:	call   0x64001080
640042ca:	mov    DWORD PTR [ecx-0xc],0x0
640042d1:	mov    eax,DWORD PTR [esi]
640042d3:	pop    edi
640042d4:	mov    WORD PTR [eax],0x0
640042d9:	pop    esi
640042da:	ret    
640042db:	or     ecx,0xffffffff
640042de:	lock xadd DWORD PTR [edx],ecx
640042e2:	dec    ecx
640042e3:	test   ecx,ecx
640042e5:	jg     0x640042f1
640042e7:	mov    ecx,DWORD PTR [eax]
640042e9:	mov    edx,DWORD PTR [ecx]
640042eb:	push   eax
640042ec:	mov    eax,DWORD PTR [edx+0x4]
640042ef:	call   eax
640042f1:	mov    edx,DWORD PTR [edi]
640042f3:	mov    eax,DWORD PTR [edx+0xc]
640042f6:	mov    ecx,edi
640042f8:	call   eax
640042fa:	add    eax,0x10
640042fd:	mov    DWORD PTR [esi],eax
640042ff:	pop    edi
64004300:	pop    esi
64004301:	ret    
64004302:	int3   
64004303:	int3   
64004304:	int3   
64004305:	int3   
64004306:	int3   
64004307:	int3   
64004308:	int3   
64004309:	int3   
6400430a:	int3   
6400430b:	int3   
6400430c:	int3   
6400430d:	int3   
6400430e:	int3   
6400430f:	int3   
64004310:	test   edi,edi
64004312:	push   ebp
64004313:	mov    ebp,DWORD PTR [esp+0x8]
64004317:	jne    0x64004324
64004319:	mov    ecx,ebp
6400431b:	call   0x640042a0
64004320:	pop    ebp
64004321:	ret    0x8
64004324:	push   esi
64004325:	mov    esi,DWORD PTR [esp+0x10]
64004329:	test   esi,esi
6400432b:	jne    0x64004337
6400432d:	push   0x80070057
64004332:	call   0x64001080
64004337:	mov    eax,DWORD PTR [ebp+0x0]
6400433a:	mov    edx,DWORD PTR [eax-0x8]
6400433d:	mov    ecx,0x1
64004342:	sub    ecx,DWORD PTR [eax-0x4]
64004345:	sub    esi,eax
64004347:	sub    edx,edi
64004349:	sar    esi,1
6400434b:	or     ecx,edx
6400434d:	push   ebx
6400434e:	mov    ebx,DWORD PTR [eax-0xc]
64004351:	jge    0x6400435b
64004353:	push   edi
64004354:	mov    ecx,ebp
64004356:	call   0x640043c0
6400435b:	mov    eax,DWORD PTR [ebp+0x0]
6400435e:	cmp    esi,ebx
64004360:	lea    ebx,[edi+edi*1]
64004363:	push   ebx
64004364:	ja     0x64004373
64004366:	lea    ecx,[eax+esi*2]
64004369:	push   ecx
6400436a:	push   ebx
6400436b:	push   eax
6400436c:	call   0x640137b7
64004371:	jmp    0x6400437f
64004373:	mov    edx,DWORD PTR [esp+0x18]
64004377:	push   edx
64004378:	push   ebx
64004379:	push   eax
6400437a:	call   0x6401373c
6400437f:	add    esp,0x10
64004382:	test   edi,edi
64004384:	jl     0x640043a0
64004386:	mov    eax,DWORD PTR [ebp+0x0]
64004389:	cmp    edi,DWORD PTR [eax-0x8]
6400438c:	jg     0x640043a0
6400438e:	mov    DWORD PTR [eax-0xc],edi
64004391:	mov    eax,DWORD PTR [ebp+0x0]
64004394:	mov    WORD PTR [ebx+eax*1],0x0
6400439a:	pop    ebx
6400439b:	pop    esi
6400439c:	pop    ebp
6400439d:	ret    0x8
640043a0:	push   0x80070057
640043a5:	call   0x64001080
640043aa:	int3   
640043ab:	int3   
640043ac:	int3   
640043ad:	int3   
640043ae:	int3   
640043af:	int3   
640043b0:	push   0x8007000e
640043b5:	call   0x64001080
640043ba:	int3   
640043bb:	int3   
640043bc:	int3   
640043bd:	int3   
640043be:	int3   
640043bf:	int3   
640043c0:	mov    eax,DWORD PTR [ecx]
640043c2:	mov    edx,DWORD PTR [esp+0x4]
640043c6:	sub    eax,0x10
640043c9:	push   esi
640043ca:	mov    esi,DWORD PTR [eax+0x4]
640043cd:	cmp    esi,edx
640043cf:	jle    0x640043d3
640043d1:	mov    edx,esi
640043d3:	cmp    DWORD PTR [eax+0xc],0x1
640043d7:	pop    esi
640043d8:	jle    0x640043e3
640043da:	mov    DWORD PTR [esp+0x4],edx
640043de:	jmp    0x64003800
640043e3:	mov    eax,DWORD PTR [eax+0x8]
640043e6:	cmp    eax,edx
640043e8:	jge    0x64004409
640043ea:	cmp    eax,0x400
640043ef:	jle    0x640043f8
640043f1:	add    eax,0x400
640043f6:	jmp    0x640043fa
640043f8:	add    eax,eax
640043fa:	cmp    eax,edx
640043fc:	jge    0x64004400
640043fe:	mov    eax,edx
64004400:	mov    DWORD PTR [esp+0x4],eax
64004404:	jmp    0x64004c40
64004409:	ret    0x4
6400440c:	int3   
6400440d:	int3   
6400440e:	int3   
6400440f:	int3   
64004410:	push   esi
64004411:	mov    esi,eax
64004413:	mov    ecx,DWORD PTR [esi]
64004415:	mov    eax,DWORD PTR [ecx]
64004417:	mov    edx,DWORD PTR [eax+0x10]
6400441a:	push   edi
6400441b:	call   edx
6400441d:	cmp    DWORD PTR [esi+0xc],0x0
64004421:	lea    ecx,[esi+0xc]
64004424:	jl     0x6400443a
64004426:	cmp    eax,DWORD PTR [esi]
64004428:	jne    0x6400443a
6400442a:	mov    edi,esi
6400442c:	mov    eax,0x1
64004431:	lock xadd DWORD PTR [ecx],eax
64004435:	mov    eax,edi
64004437:	pop    edi
64004438:	pop    esi
64004439:	ret    
6400443a:	mov    ecx,DWORD PTR [esi+0x4]
6400443d:	mov    edx,DWORD PTR [eax]
6400443f:	mov    edx,DWORD PTR [edx]
64004441:	push   0x2
64004443:	push   ecx
64004444:	mov    ecx,eax
64004446:	call   edx
64004448:	mov    edi,eax
6400444a:	test   edi,edi
6400444c:	jne    0x64004453
6400444e:	jmp    0x640043b0
64004453:	mov    eax,DWORD PTR [esi+0x4]
64004456:	mov    DWORD PTR [edi+0x4],eax
64004459:	mov    eax,DWORD PTR [esi+0x4]
6400445c:	lea    eax,[eax+eax*1+0x2]
64004460:	push   eax
64004461:	add    esi,0x10
64004464:	push   esi
64004465:	push   eax
64004466:	lea    ecx,[edi+0x10]
64004469:	push   ecx
6400446a:	call   0x6401373c
6400446f:	add    esp,0x10
64004472:	mov    eax,edi
64004474:	pop    edi
64004475:	pop    esi
64004476:	ret    
64004477:	int3   
64004478:	int3   
64004479:	int3   
6400447a:	int3   
6400447b:	int3   
6400447c:	int3   
6400447d:	int3   
6400447e:	int3   
6400447f:	int3   
64004480:	push   ebp
64004481:	mov    ebp,esp
64004483:	and    esp,0xfffffff8
64004486:	sub    esp,0x14
64004489:	push   ebx
6400448a:	push   esi
6400448b:	mov    esi,ecx
6400448d:	cmp    DWORD PTR [esi+0x8],0x0
64004491:	push   edi
64004492:	jne    0x640044b4
64004494:	mov    eax,DWORD PTR [ebp+0x14]
64004497:	mov    ecx,DWORD PTR [esi+0x4]
6400449a:	mov    edi,DWORD PTR [ebp+0x8]
6400449d:	push   eax
6400449e:	push   ecx
6400449f:	push   0x1
640044a1:	push   edi
640044a2:	mov    ecx,esi
640044a4:	call   0x64004e10
640044a9:	mov    eax,edi
640044ab:	pop    edi
640044ac:	pop    esi
640044ad:	pop    ebx
640044ae:	mov    esp,ebp
640044b0:	pop    ebp
640044b1:	ret    0x10
640044b4:	mov    edx,DWORD PTR [esi+0x4]
640044b7:	mov    edi,DWORD PTR [ebp+0xc]
640044ba:	test   edi,edi
640044bc:	mov    eax,DWORD PTR [edx]
640044be:	mov    DWORD PTR [esp+0x18],eax
640044c2:	je     0x640044c8
640044c4:	cmp    edi,esi
640044c6:	je     0x640044cd
640044c8:	call   0x64013e16
640044cd:	mov    ebx,DWORD PTR [ebp+0x10]
640044d0:	cmp    ebx,DWORD PTR [esp+0x18]
640044d4:	jne    0x64004507
640044d6:	mov    edi,DWORD PTR [ebp+0x14]
640044d9:	lea    ecx,[ebx+0xc]
640044dc:	push   ecx
640044dd:	push   edi
640044de:	mov    ecx,esi
640044e0:	call   0x64004690
640044e5:	test   al,al
640044e7:	je     0x64004663
640044ed:	push   edi
640044ee:	mov    edi,DWORD PTR [ebp+0x8]
640044f1:	push   ebx
640044f2:	push   0x1
640044f4:	push   edi
640044f5:	mov    ecx,esi
640044f7:	call   0x64004e10
640044fc:	mov    eax,edi
640044fe:	pop    edi
640044ff:	pop    esi
64004500:	pop    ebx
64004501:	mov    esp,ebp
64004503:	pop    ebp
64004504:	ret    0x10
64004507:	test   edi,edi
64004509:	mov    edx,DWORD PTR [esi+0x4]
6400450c:	mov    DWORD PTR [esp+0x18],edx
64004510:	je     0x64004516
64004512:	cmp    edi,esi
64004514:	je     0x6400451b
64004516:	call   0x64013e16
6400451b:	cmp    ebx,DWORD PTR [esp+0x18]
6400451f:	mov    edi,DWORD PTR [ebp+0x14]
64004522:	mov    ecx,esi
64004524:	jne    0x6400455e
64004526:	mov    eax,DWORD PTR [esi+0x4]
64004529:	mov    eax,DWORD PTR [eax+0x8]
6400452c:	add    eax,0xc
6400452f:	push   edi
64004530:	push   eax
64004531:	call   0x64004690
64004536:	test   al,al
64004538:	je     0x64004663
6400453e:	mov    ecx,DWORD PTR [esi+0x4]
64004541:	mov    edx,DWORD PTR [ecx+0x8]
64004544:	push   edi
64004545:	mov    edi,DWORD PTR [ebp+0x8]
64004548:	push   edx
64004549:	push   0x0
6400454b:	push   edi
6400454c:	mov    ecx,esi
6400454e:	call   0x64004e10
64004553:	mov    eax,edi
64004555:	pop    edi
64004556:	pop    esi
64004557:	pop    ebx
64004558:	mov    esp,ebp
6400455a:	pop    ebp
6400455b:	ret    0x10
6400455e:	lea    eax,[ebx+0xc]
64004561:	push   eax
64004562:	push   edi
64004563:	call   0x64004690
64004568:	test   al,al
6400456a:	je     0x640045cf
6400456c:	mov    eax,DWORD PTR [ebp+0xc]
6400456f:	lea    ecx,[esp+0xc]
64004573:	mov    DWORD PTR [esp+0xc],eax
64004577:	mov    DWORD PTR [esp+0x10],ebx
6400457b:	call   0x64006050
64004580:	mov    ecx,DWORD PTR [esp+0x10]
64004584:	add    ecx,0xc
64004587:	push   edi
64004588:	push   ecx
64004589:	mov    ecx,esi
6400458b:	call   0x64004690
64004590:	test   al,al
64004592:	je     0x640045cf
64004594:	mov    eax,DWORD PTR [esp+0x10]
64004598:	mov    edx,DWORD PTR [eax+0x8]
6400459b:	cmp    BYTE PTR [edx+0x45],0x0
6400459f:	push   edi
640045a0:	mov    edi,DWORD PTR [ebp+0x8]
640045a3:	mov    ecx,esi
640045a5:	je     0x640045bb
640045a7:	push   eax
640045a8:	push   0x0
640045aa:	push   edi
640045ab:	call   0x64004e10
640045b0:	mov    eax,edi
640045b2:	pop    edi
640045b3:	pop    esi
640045b4:	pop    ebx
640045b5:	mov    esp,ebp
640045b7:	pop    ebp
640045b8:	ret    0x10
640045bb:	push   ebx
640045bc:	push   0x1
640045be:	push   edi
640045bf:	call   0x64004e10
640045c4:	mov    eax,edi
640045c6:	pop    edi
640045c7:	pop    esi
640045c8:	pop    ebx
640045c9:	mov    esp,ebp
640045cb:	pop    ebp
640045cc:	ret    0x10
640045cf:	push   edi
640045d0:	lea    eax,[ebx+0xc]
640045d3:	push   eax
640045d4:	mov    ecx,esi
640045d6:	call   0x64004690
640045db:	test   al,al
640045dd:	je     0x64004663
640045e3:	mov    ecx,DWORD PTR [esi+0x4]
640045e6:	mov    eax,DWORD PTR [ebp+0xc]
640045e9:	mov    DWORD PTR [esp+0x18],ecx
640045ed:	lea    ecx,[esp+0xc]
640045f1:	mov    DWORD PTR [esp+0xc],eax
640045f5:	mov    DWORD PTR [esp+0x10],ebx
640045f9:	mov    DWORD PTR [esp+0x14],esi
640045fd:	call   0x640060e0
64004602:	lea    edx,[esp+0x14]
64004606:	push   edx
64004607:	lea    ecx,[esp+0x10]
6400460b:	call   0x64003d20
64004610:	test   al,al
64004612:	jne    0x64004628
64004614:	mov    eax,DWORD PTR [esp+0x10]
64004618:	add    eax,0xc
6400461b:	push   eax
6400461c:	push   edi
6400461d:	mov    ecx,esi
6400461f:	call   0x64004690
64004624:	test   al,al
64004626:	je     0x64004663
64004628:	mov    ecx,DWORD PTR [ebx+0x8]
6400462b:	cmp    BYTE PTR [ecx+0x45],0x0
6400462f:	push   edi
64004630:	mov    edi,DWORD PTR [ebp+0x8]
64004633:	mov    ecx,esi
64004635:	je     0x6400464b
64004637:	push   ebx
64004638:	push   0x0
6400463a:	push   edi
6400463b:	call   0x64004e10
64004640:	mov    eax,edi
64004642:	pop    edi
64004643:	pop    esi
64004644:	pop    ebx
64004645:	mov    esp,ebp
64004647:	pop    ebp
64004648:	ret    0x10
6400464b:	mov    edx,DWORD PTR [esp+0x14]
6400464f:	push   edx
64004650:	push   0x1
64004652:	push   edi
64004653:	call   0x64004e10
64004658:	mov    eax,edi
6400465a:	pop    edi
6400465b:	pop    esi
6400465c:	pop    ebx
6400465d:	mov    esp,ebp
6400465f:	pop    ebp
64004660:	ret    0x10
64004663:	push   edi
64004664:	lea    eax,[esp+0x18]
64004668:	push   eax
64004669:	mov    ecx,esi
6400466b:	call   0x64004c80
64004670:	mov    edx,DWORD PTR [eax]
64004672:	mov    ecx,DWORD PTR [ebp+0x8]
64004675:	pop    edi
64004676:	mov    DWORD PTR [ecx],edx
64004678:	mov    eax,DWORD PTR [eax+0x4]
6400467b:	pop    esi
6400467c:	mov    DWORD PTR [ecx+0x4],eax
6400467f:	mov    eax,ecx
64004681:	pop    ebx
64004682:	mov    esp,ebp
64004684:	pop    ebp
64004685:	ret    0x10
64004688:	int3   
64004689:	int3   
6400468a:	int3   
6400468b:	int3   
6400468c:	int3   
6400468d:	int3   
6400468e:	int3   
6400468f:	int3   
64004690:	mov    eax,DWORD PTR [esp+0x8]
64004694:	cmp    DWORD PTR [eax+0x18],0x10
64004698:	mov    ecx,DWORD PTR [eax+0x14]
6400469b:	jb     0x640046a2
6400469d:	mov    eax,DWORD PTR [eax+0x4]
640046a0:	jmp    0x640046a5
640046a2:	add    eax,0x4
640046a5:	push   ecx
640046a6:	mov    ecx,DWORD PTR [esp+0x8]
640046aa:	push   eax
640046ab:	mov    eax,DWORD PTR [ecx+0x14]
640046ae:	push   eax
640046af:	push   0x0
640046b1:	call   0x64003520
640046b6:	xor    ecx,ecx
640046b8:	test   eax,eax
640046ba:	setl   cl
640046bd:	mov    al,cl
640046bf:	ret    0x8
640046c2:	int3   
640046c3:	int3   
640046c4:	int3   
640046c5:	int3   
640046c6:	int3   
640046c7:	int3   
640046c8:	int3   
640046c9:	int3   
640046ca:	int3   
640046cb:	int3   
640046cc:	int3   
640046cd:	int3   
640046ce:	int3   
640046cf:	int3   
640046d0:	push   0xffffffff
640046d2:	push   0x64023218
640046d7:	mov    eax,fs:0x0
640046dd:	push   eax
640046de:	push   ecx
640046df:	push   ebx
640046e0:	push   esi
640046e1:	mov    eax,ds:0x640521ac
640046e6:	xor    eax,esp
640046e8:	push   eax
640046e9:	lea    eax,[esp+0x10]
640046ed:	mov    fs:0x0,eax
640046f3:	mov    esi,ecx
640046f5:	mov    DWORD PTR [esp+0xc],esi
640046f9:	mov    eax,DWORD PTR [esp+0x20]
640046fd:	xor    ebx,ebx
640046ff:	push   0xffffffff
64004701:	push   ebx
64004702:	mov    DWORD PTR [esi+0x18],0xf
64004709:	mov    DWORD PTR [esi+0x14],ebx
6400470c:	push   eax
6400470d:	mov    BYTE PTR [esi+0x4],bl
64004710:	call   0x64003370
64004715:	mov    edx,DWORD PTR [esp+0x24]
64004719:	push   0xffffffff
6400471b:	lea    ecx,[esi+0x1c]
6400471e:	mov    DWORD PTR [esp+0x1c],ebx
64004722:	push   ebx
64004723:	mov    DWORD PTR [ecx+0x18],0xf
6400472a:	mov    DWORD PTR [ecx+0x14],ebx
6400472d:	push   edx
6400472e:	mov    BYTE PTR [ecx+0x4],bl
64004731:	call   0x64003370
64004736:	mov    eax,esi
64004738:	mov    ecx,DWORD PTR [esp+0x10]
6400473c:	mov    DWORD PTR fs:0x0,ecx
64004743:	pop    ecx
64004744:	pop    esi
64004745:	pop    ebx
64004746:	add    esp,0x10
64004749:	ret    0x8
6400474c:	int3   
6400474d:	int3   
6400474e:	int3   
6400474f:	int3   
64004750:	push   ebx
64004751:	push   ebp
64004752:	mov    ebp,DWORD PTR [esp+0xc]
64004756:	push   esi
64004757:	mov    ebx,eax
64004759:	cmp    DWORD PTR [ebx+0x14],ebp
6400475c:	push   edi
6400475d:	mov    esi,ecx
6400475f:	jae    0x64004766
64004761:	call   0x64012efb
64004766:	mov    edi,DWORD PTR [ebx+0x14]
64004769:	mov    eax,DWORD PTR [esp+0x18]
6400476d:	sub    edi,ebp
6400476f:	cmp    eax,edi
64004771:	jae    0x64004775
64004773:	mov    edi,eax
64004775:	cmp    esi,ebx
64004777:	jne    0x64004796
64004779:	lea    ebx,[edi+ebp*1]
6400477c:	or     eax,0xffffffff
6400477f:	call   0x640050f0
64004784:	mov    eax,ebp
64004786:	xor    ebx,ebx
64004788:	call   0x640050f0
6400478d:	pop    edi
6400478e:	mov    eax,esi
64004790:	pop    esi
64004791:	pop    ebp
64004792:	pop    ebx
64004793:	ret    0x8
64004796:	mov    eax,esi
64004798:	call   0x64005180
6400479d:	test   al,al
6400479f:	je     0x640047ed
640047a1:	cmp    DWORD PTR [ebx+0x18],0x8
640047a5:	jb     0x640047ac
640047a7:	mov    ecx,DWORD PTR [ebx+0x4]
640047aa:	jmp    0x640047af
640047ac:	lea    ecx,[ebx+0x4]
640047af:	cmp    DWORD PTR [esi+0x18],0x8
640047b3:	lea    ebp,[esi+0x4]
640047b6:	jb     0x640047bd
640047b8:	mov    eax,DWORD PTR [ebp+0x0]
640047bb:	jmp    0x640047bf
640047bd:	mov    eax,ebp
640047bf:	mov    edx,DWORD PTR [esp+0x14]
640047c3:	lea    ecx,[ecx+edx*2]
640047c6:	lea    ebx,[edi+edi*1]
640047c9:	push   ebx
640047ca:	push   ecx
640047cb:	mov    ecx,DWORD PTR [esi+0x18]
640047ce:	lea    edx,[ecx+ecx*1]
640047d1:	push   edx
640047d2:	push   eax
640047d3:	call   0x6401373c
640047d8:	add    esp,0x10
640047db:	cmp    DWORD PTR [esi+0x18],0x8
640047df:	mov    DWORD PTR [esi+0x14],edi
640047e2:	jb     0x640047e7
640047e4:	mov    ebp,DWORD PTR [ebp+0x0]
640047e7:	mov    WORD PTR [ebx+ebp*1],0x0
640047ed:	pop    edi
640047ee:	mov    eax,esi
640047f0:	pop    esi
640047f1:	pop    ebp
640047f2:	pop    ebx
640047f3:	ret    0x8
640047f6:	int3   
640047f7:	int3   
640047f8:	int3   
640047f9:	int3   
640047fa:	int3   
640047fb:	int3   
640047fc:	int3   
640047fd:	int3   
640047fe:	int3   
640047ff:	int3   
64004800:	mov    ecx,DWORD PTR [esi+0x18]
64004803:	cmp    ecx,0x8
64004806:	push   ebx
64004807:	push   ebp
64004808:	mov    ebp,DWORD PTR [esp+0xc]
6400480c:	lea    ebx,[esi+0x4]
6400480f:	jb     0x64004815
64004811:	mov    eax,DWORD PTR [ebx]
64004813:	jmp    0x64004817
64004815:	mov    eax,ebx
64004817:	cmp    ebp,eax
64004819:	jb     0x6400484f
6400481b:	cmp    ecx,0x8
6400481e:	jb     0x64004824
64004820:	mov    eax,DWORD PTR [ebx]
64004822:	jmp    0x64004826
64004824:	mov    eax,ebx
64004826:	mov    edx,DWORD PTR [esi+0x14]
64004829:	lea    eax,[eax+edx*2]
6400482c:	cmp    eax,ebp
6400482e:	jbe    0x6400484f
64004830:	cmp    ecx,0x8
64004833:	jb     0x64004837
64004835:	mov    ebx,DWORD PTR [ebx]
64004837:	mov    ecx,DWORD PTR [esp+0x10]
6400483b:	sub    ebp,ebx
6400483d:	push   ecx
6400483e:	sar    ebp,1
64004840:	push   ebp
64004841:	mov    eax,esi
64004843:	mov    ecx,esi
64004845:	call   0x64004750
6400484a:	pop    ebp
6400484b:	pop    ebx
6400484c:	ret    0x8
6400484f:	push   edi
64004850:	mov    edi,DWORD PTR [esp+0x14]
64004854:	mov    eax,esi
64004856:	call   0x64005180
6400485b:	test   al,al
6400485d:	je     0x64004893
6400485f:	mov    ecx,DWORD PTR [esi+0x18]
64004862:	cmp    ecx,0x8
64004865:	jb     0x6400486b
64004867:	mov    eax,DWORD PTR [ebx]
64004869:	jmp    0x6400486d
6400486b:	mov    eax,ebx
6400486d:	add    edi,edi
6400486f:	push   edi
64004870:	push   ebp
64004871:	lea    edx,[ecx+ecx*1]
64004874:	push   edx
64004875:	push   eax
64004876:	call   0x6401373c
6400487b:	mov    eax,DWORD PTR [esp+0x24]
6400487f:	add    esp,0x10
64004882:	cmp    DWORD PTR [esi+0x18],0x8
64004886:	mov    DWORD PTR [esi+0x14],eax
64004889:	jb     0x6400488d
6400488b:	mov    ebx,DWORD PTR [ebx]
6400488d:	mov    WORD PTR [edi+ebx*1],0x0
64004893:	pop    edi
64004894:	pop    ebp
64004895:	mov    eax,esi
64004897:	pop    ebx
64004898:	ret    0x8
6400489b:	int3   
6400489c:	int3   
6400489d:	int3   
6400489e:	int3   
6400489f:	int3   
640048a0:	mov    ecx,DWORD PTR [ebx+0x4]
640048a3:	sub    esp,0x18
640048a6:	cmp    DWORD PTR [ebx+0x8],0x0
640048aa:	push   ebp
640048ab:	mov    ebp,DWORD PTR [esp+0x20]
640048af:	push   esi
640048b0:	push   edi
640048b1:	jne    0x640048cc
640048b3:	mov    eax,DWORD PTR [esp+0x2c]
640048b7:	push   eax
640048b8:	push   0x1
640048ba:	push   ebp
640048bb:	push   ebx
640048bc:	call   0x64005370
640048c1:	mov    eax,ebp
640048c3:	pop    edi
640048c4:	pop    esi
640048c5:	pop    ebp
640048c6:	add    esp,0x18
640048c9:	ret    0x10
640048cc:	mov    esi,DWORD PTR [esp+0x30]
640048d0:	test   esi,esi
640048d2:	mov    edx,DWORD PTR [ecx]
640048d4:	mov    DWORD PTR [esp+0x18],edx
640048d8:	je     0x640048de
640048da:	cmp    esi,ebx
640048dc:	je     0x640048e3
640048de:	call   0x64013e16
640048e3:	mov    edi,DWORD PTR [esp+0x34]
640048e7:	cmp    edi,DWORD PTR [esp+0x18]
640048eb:	jne    0x6400491a
640048ed:	mov    esi,DWORD PTR [esp+0x2c]
640048f1:	lea    eax,[edi+0xc]
640048f4:	mov    ecx,esi
640048f6:	call   0x64004ab0
640048fb:	test   al,al
640048fd:	je     0x64004a7f
64004903:	push   esi
64004904:	push   0x1
64004906:	push   ebp
64004907:	push   ebx
64004908:	mov    ecx,edi
6400490a:	call   0x64005370
6400490f:	mov    eax,ebp
64004911:	pop    edi
64004912:	pop    esi
64004913:	pop    ebp
64004914:	add    esp,0x18
64004917:	ret    0x10
6400491a:	test   esi,esi
6400491c:	mov    eax,DWORD PTR [ebx+0x4]
6400491f:	mov    DWORD PTR [esp+0x18],eax
64004923:	je     0x64004929
64004925:	cmp    esi,ebx
64004927:	je     0x6400492e
64004929:	call   0x64013e16
6400492e:	cmp    edi,DWORD PTR [esp+0x18]
64004932:	jne    0x6400496d
64004934:	mov    ecx,DWORD PTR [ebx+0x4]
64004937:	mov    ecx,DWORD PTR [ecx+0x8]
6400493a:	mov    eax,DWORD PTR [esp+0x2c]
6400493e:	add    ecx,0xc
64004941:	call   0x64004ab0
64004946:	test   al,al
64004948:	je     0x64004a7b
6400494e:	mov    edx,DWORD PTR [esp+0x2c]
64004952:	mov    eax,DWORD PTR [ebx+0x4]
64004955:	mov    ecx,DWORD PTR [eax+0x8]
64004958:	push   edx
64004959:	push   0x0
6400495b:	push   ebp
6400495c:	push   ebx
6400495d:	call   0x64005370
64004962:	mov    eax,ebp
64004964:	pop    edi
64004965:	pop    esi
64004966:	pop    ebp
64004967:	add    esp,0x18
6400496a:	ret    0x10
6400496d:	mov    ecx,DWORD PTR [esp+0x2c]
64004971:	lea    eax,[edi+0xc]
64004974:	call   0x64004ab0
64004979:	test   al,al
6400497b:	je     0x640049e5
6400497d:	mov    DWORD PTR [esp+0xc],esi
64004981:	lea    esi,[esp+0xc]
64004985:	mov    DWORD PTR [esp+0x10],edi
64004989:	call   0x64006520
6400498e:	mov    esi,DWORD PTR [esp+0x10]
64004992:	mov    eax,DWORD PTR [esp+0x2c]
64004996:	lea    ecx,[esi+0xc]
64004999:	call   0x64004ab0
6400499e:	test   al,al
640049a0:	je     0x640049e1
640049a2:	mov    ecx,DWORD PTR [esi+0x8]
640049a5:	cmp    BYTE PTR [ecx+0x45],0x0
640049a9:	je     0x640049c6
640049ab:	mov    edx,DWORD PTR [esp+0x2c]
640049af:	push   edx
640049b0:	push   0x0
640049b2:	push   ebp
640049b3:	push   ebx
640049b4:	mov    ecx,esi
640049b6:	call   0x64005370
640049bb:	mov    eax,ebp
640049bd:	pop    edi
640049be:	pop    esi
640049bf:	pop    ebp
640049c0:	add    esp,0x18
640049c3:	ret    0x10
640049c6:	mov    eax,DWORD PTR [esp+0x2c]
640049ca:	push   eax
640049cb:	push   0x1
640049cd:	push   ebp
640049ce:	push   ebx
640049cf:	mov    ecx,edi
640049d1:	call   0x64005370
640049d6:	mov    eax,ebp
640049d8:	pop    edi
640049d9:	pop    esi
640049da:	pop    ebp
640049db:	add    esp,0x18
640049de:	ret    0x10
640049e1:	mov    esi,DWORD PTR [esp+0x30]
640049e5:	mov    eax,DWORD PTR [esp+0x2c]
640049e9:	lea    ecx,[edi+0xc]
640049ec:	call   0x64004ab0
640049f1:	test   al,al
640049f3:	je     0x64004a7b
640049f9:	mov    ecx,DWORD PTR [ebx+0x4]
640049fc:	mov    DWORD PTR [esp+0xc],esi
64004a00:	lea    esi,[esp+0xc]
64004a04:	mov    DWORD PTR [esp+0x10],edi
64004a08:	mov    DWORD PTR [esp+0x18],ecx
64004a0c:	mov    DWORD PTR [esp+0x14],ebx
64004a10:	call   0x640065a0
64004a15:	lea    esi,[esp+0x14]
64004a19:	lea    edi,[esp+0xc]
64004a1d:	call   0x64003f50
64004a22:	test   al,al
64004a24:	mov    esi,DWORD PTR [esp+0x10]
64004a28:	jne    0x64004a3a
64004a2a:	mov    ecx,DWORD PTR [esp+0x2c]
64004a2e:	lea    eax,[esi+0xc]
64004a31:	call   0x64004ab0
64004a36:	test   al,al
64004a38:	je     0x64004a7b
64004a3a:	mov    ecx,DWORD PTR [esp+0x34]
64004a3e:	mov    edx,DWORD PTR [ecx+0x8]
64004a41:	cmp    BYTE PTR [edx+0x45],0x0
64004a45:	je     0x64004a60
64004a47:	mov    eax,DWORD PTR [esp+0x2c]
64004a4b:	push   eax
64004a4c:	push   0x0
64004a4e:	push   ebp
64004a4f:	push   ebx
64004a50:	call   0x64005370
64004a55:	mov    eax,ebp
64004a57:	pop    edi
64004a58:	pop    esi
64004a59:	pop    ebp
64004a5a:	add    esp,0x18
64004a5d:	ret    0x10
64004a60:	mov    ecx,DWORD PTR [esp+0x2c]
64004a64:	push   ecx
64004a65:	push   0x1
64004a67:	push   ebp
64004a68:	push   ebx
64004a69:	mov    ecx,esi
64004a6b:	call   0x64005370
64004a70:	mov    eax,ebp
64004a72:	pop    edi
64004a73:	pop    esi
64004a74:	pop    ebp
64004a75:	add    esp,0x18
64004a78:	ret    0x10
64004a7b:	mov    esi,DWORD PTR [esp+0x2c]
64004a7f:	push   esi
64004a80:	lea    edx,[esp+0x18]
64004a84:	push   edx
64004a85:	push   ebx
64004a86:	call   0x640051e0
64004a8b:	mov    ecx,DWORD PTR [eax]
64004a8d:	mov    DWORD PTR [ebp+0x0],ecx
64004a90:	mov    edx,DWORD PTR [eax+0x4]
64004a93:	pop    edi
64004a94:	pop    esi
64004a95:	mov    DWORD PTR [ebp+0x4],edx
64004a98:	mov    eax,ebp
64004a9a:	pop    ebp
64004a9b:	add    esp,0x18
64004a9e:	ret    0x10
64004aa1:	int3   
64004aa2:	int3   
64004aa3:	int3   
64004aa4:	int3   
64004aa5:	int3   
64004aa6:	int3   
64004aa7:	int3   
64004aa8:	int3   
64004aa9:	int3   
64004aaa:	int3   
64004aab:	int3   
64004aac:	int3   
64004aad:	int3   
64004aae:	int3   
64004aaf:	int3   
64004ab0:	cmp    DWORD PTR [eax+0x18],0x8
64004ab4:	push   edi
64004ab5:	mov    edi,DWORD PTR [eax+0x14]
64004ab8:	jb     0x64004ad1
64004aba:	mov    eax,DWORD PTR [eax+0x4]
64004abd:	push   eax
64004abe:	mov    eax,DWORD PTR [ecx+0x14]
64004ac1:	call   0x64006970
64004ac6:	xor    ecx,ecx
64004ac8:	test   eax,eax
64004aca:	setl   cl
64004acd:	mov    al,cl
64004acf:	pop    edi
64004ad0:	ret    
64004ad1:	add    eax,0x4
64004ad4:	push   eax
64004ad5:	mov    eax,DWORD PTR [ecx+0x14]
64004ad8:	call   0x64006970
64004add:	xor    ecx,ecx
64004adf:	test   eax,eax
64004ae1:	setl   cl
64004ae4:	mov    al,cl
64004ae6:	pop    edi
64004ae7:	ret    
64004ae8:	int3   
64004ae9:	int3   
64004aea:	int3   
64004aeb:	int3   
64004aec:	int3   
64004aed:	int3   
64004aee:	int3   
64004aef:	int3   
64004af0:	push   0xffffffff
64004af2:	push   0x640231e8
64004af7:	mov    eax,fs:0x0
64004afd:	push   eax
64004afe:	push   esi
64004aff:	push   edi
64004b00:	mov    eax,ds:0x640521ac
64004b05:	xor    eax,esp
64004b07:	push   eax
64004b08:	lea    eax,[esp+0xc]
64004b0c:	mov    fs:0x0,eax
64004b12:	mov    esi,DWORD PTR [esp+0x1c]
64004b16:	mov    eax,DWORD PTR [esp+0x20]
64004b1a:	xor    edi,edi
64004b1c:	push   0xffffffff
64004b1e:	mov    DWORD PTR [esi+0x18],0x7
64004b25:	mov    DWORD PTR [esi+0x14],edi
64004b28:	push   edi
64004b29:	mov    ecx,esi
64004b2b:	mov    WORD PTR [esi+0x4],di
64004b2f:	call   0x64004750
64004b34:	mov    eax,DWORD PTR [esp+0x24]
64004b38:	lea    ecx,[esi+0x1c]
64004b3b:	mov    DWORD PTR [esp+0x14],edi
64004b3f:	push   0xffffffff
64004b41:	mov    DWORD PTR [ecx+0x18],0x7
64004b48:	mov    DWORD PTR [ecx+0x14],edi
64004b4b:	push   edi
64004b4c:	mov    WORD PTR [ecx+0x4],di
64004b50:	call   0x64004750
64004b55:	mov    eax,esi
64004b57:	mov    ecx,DWORD PTR [esp+0xc]
64004b5b:	mov    DWORD PTR fs:0x0,ecx
64004b62:	pop    ecx
64004b63:	pop    edi
64004b64:	pop    esi
64004b65:	add    esp,0xc
64004b68:	ret    0xc
64004b6b:	int3   
64004b6c:	int3   
64004b6d:	int3   
64004b6e:	int3   
64004b6f:	int3   
64004b70:	push   ebx
64004b71:	push   esi
64004b72:	mov    esi,DWORD PTR [esp+0x10]
64004b76:	mov    eax,esi
64004b78:	shr    eax,0x4
64004b7b:	push   edi
64004b7c:	mov    edi,DWORD PTR [esp+0x10]
64004b80:	add    eax,0x1
64004b83:	mov    ebx,ecx
64004b85:	movzx  ecx,ax
64004b88:	push   0x6
64004b8a:	push   ecx
64004b8b:	push   edi
64004b8c:	call   DWORD PTR ds:0x6402c024
64004b92:	test   eax,eax
64004b94:	je     0x64004ba7
64004b96:	push   esi
64004b97:	push   eax
64004b98:	push   edi
64004b99:	call   0x64001140
64004b9e:	mov    esi,eax
64004ba0:	add    esp,0xc
64004ba3:	test   esi,esi
64004ba5:	jne    0x64004baf
64004ba7:	pop    edi
64004ba8:	pop    esi
64004ba9:	xor    eax,eax
64004bab:	pop    ebx
64004bac:	ret    0x8
64004baf:	mov    eax,DWORD PTR [ebx]
64004bb1:	movzx  edi,WORD PTR [esi]
64004bb4:	sub    eax,0x10
64004bb7:	mov    edx,0x1
64004bbc:	sub    edx,DWORD PTR [eax+0xc]
64004bbf:	mov    eax,DWORD PTR [eax+0x8]
64004bc2:	sub    eax,edi
64004bc4:	or     edx,eax
64004bc6:	jge    0x64004bd0
64004bc8:	push   edi
64004bc9:	mov    ecx,ebx
64004bcb:	call   0x640043c0
64004bd0:	movzx  eax,WORD PTR [esi]
64004bd3:	cmp    eax,0xffffffff
64004bd6:	push   ebp
64004bd7:	mov    ebp,DWORD PTR [ebx]
64004bd9:	lea    edx,[esi+0x2]
64004bdc:	jne    0x64004bf5
64004bde:	mov    eax,edx
64004be0:	lea    esi,[eax+0x2]
64004be3:	mov    cx,WORD PTR [eax]
64004be6:	add    eax,0x2
64004be9:	test   cx,cx
64004bec:	jne    0x64004be3
64004bee:	sub    eax,esi
64004bf0:	sar    eax,1
64004bf2:	add    eax,0x1
64004bf5:	lea    ecx,[eax+eax*1]
64004bf8:	push   ecx
64004bf9:	push   edx
64004bfa:	lea    esi,[edi+edi*1]
64004bfd:	push   esi
64004bfe:	push   ebp
64004bff:	call   0x6401373c
64004c04:	push   eax
64004c05:	call   0x640010a0
64004c0a:	add    esp,0x14
64004c0d:	test   edi,edi
64004c0f:	pop    ebp
64004c10:	jl     0x64004c2f
64004c12:	mov    eax,DWORD PTR [ebx]
64004c14:	cmp    edi,DWORD PTR [eax-0x8]
64004c17:	jg     0x64004c2f
64004c19:	mov    DWORD PTR [eax-0xc],edi
64004c1c:	mov    edx,DWORD PTR [ebx]
64004c1e:	pop    edi
64004c1f:	mov    WORD PTR [esi+edx*1],0x0
64004c25:	pop    esi
64004c26:	mov    eax,0x1
64004c2b:	pop    ebx
64004c2c:	ret    0x8
64004c2f:	push   0x80070057
64004c34:	call   0x64001080
64004c39:	int3   
64004c3a:	int3   
64004c3b:	int3   
64004c3c:	int3   
64004c3d:	int3   
64004c3e:	int3   
64004c3f:	int3   
64004c40:	mov    edx,DWORD PTR [esp+0x4]
64004c44:	push   esi
64004c45:	mov    esi,ecx
64004c47:	mov    eax,DWORD PTR [esi]
64004c49:	mov    ecx,DWORD PTR [eax-0x10]
64004c4c:	sub    eax,0x10
64004c4f:	cmp    DWORD PTR [eax+0x8],edx
64004c52:	jge    0x64004c69
64004c54:	test   edx,edx
64004c56:	jle    0x64004c69
64004c58:	push   edi
64004c59:	mov    edi,DWORD PTR [ecx]
64004c5b:	push   0x2
64004c5d:	push   edx
64004c5e:	push   eax
64004c5f:	mov    eax,DWORD PTR [edi+0x8]
64004c62:	call   eax
64004c64:	test   eax,eax
64004c66:	pop    edi
64004c67:	jne    0x64004c6e
64004c69:	call   0x640043b0
64004c6e:	add    eax,0x10
64004c71:	mov    DWORD PTR [esi],eax
64004c73:	pop    esi
64004c74:	ret    0x4
64004c77:	int3   
64004c78:	int3   
64004c79:	int3   
64004c7a:	int3   
64004c7b:	int3   
64004c7c:	int3   
64004c7d:	int3   
64004c7e:	int3   
64004c7f:	int3   
64004c80:	push   ebp
64004c81:	mov    ebp,esp
64004c83:	and    esp,0xfffffff8
64004c86:	sub    esp,0x24
64004c89:	push   ebx
64004c8a:	push   esi
64004c8b:	push   edi
64004c8c:	mov    edi,ecx
64004c8e:	mov    eax,DWORD PTR [edi+0x4]
64004c91:	mov    esi,DWORD PTR [eax+0x4]
64004c94:	cmp    BYTE PTR [esi+0x45],0x0
64004c98:	mov    ecx,eax
64004c9a:	mov    al,0x1
64004c9c:	mov    DWORD PTR [esp+0x28],edi
64004ca0:	mov    DWORD PTR [esp+0x10],ecx
64004ca4:	mov    BYTE PTR [esp+0x18],al
64004ca8:	jne    0x64004d48
64004cae:	mov    edx,DWORD PTR [ebp+0xc]
64004cb1:	mov    eax,DWORD PTR [edx+0x14]
64004cb4:	mov    ecx,DWORD PTR [edx+0x18]
64004cb7:	mov    DWORD PTR [esp+0x20],eax
64004cbb:	mov    DWORD PTR [esp+0x1c],eax
64004cbf:	mov    DWORD PTR [esp+0x24],ecx
64004cc3:	jmp    0x64004ccc
64004cc5:	mov    edx,DWORD PTR [ebp+0xc]
64004cc8:	mov    eax,DWORD PTR [esp+0x1c]
64004ccc:	cmp    DWORD PTR [esi+0x24],0x10
64004cd0:	mov    ebx,DWORD PTR [esi+0x20]
64004cd3:	mov    DWORD PTR [esp+0x10],esi
64004cd7:	jb     0x64004cde
64004cd9:	mov    ecx,DWORD PTR [esi+0x10]
64004cdc:	jmp    0x64004ce1
64004cde:	lea    ecx,[esi+0x10]
64004ce1:	mov    edi,DWORD PTR [esp+0x20]
64004ce5:	cmp    eax,edi
64004ce7:	mov    DWORD PTR [esp+0x14],ecx
64004ceb:	jae    0x64004cef
64004ced:	mov    edi,eax
64004cef:	cmp    edi,ebx
64004cf1:	mov    ecx,edi
64004cf3:	jb     0x64004cf7
64004cf5:	mov    ecx,ebx
64004cf7:	cmp    DWORD PTR [esp+0x24],0x10
64004cfc:	lea    eax,[edx+0x4]
64004cff:	jb     0x64004d03
64004d01:	mov    eax,DWORD PTR [eax]
64004d03:	mov    edx,DWORD PTR [esp+0x14]
64004d07:	push   ecx
64004d08:	push   edx
64004d09:	push   eax
64004d0a:	call   0x640012b0
64004d0f:	add    esp,0xc
64004d12:	test   eax,eax
64004d14:	jne    0x64004d28
64004d16:	cmp    edi,ebx
64004d18:	jae    0x64004d1f
64004d1a:	or     eax,0xffffffff
64004d1d:	jmp    0x64004d26
64004d1f:	xor    eax,eax
64004d21:	cmp    edi,ebx
64004d23:	setne  al
64004d26:	test   eax,eax
64004d28:	setl   al
64004d2b:	test   al,al
64004d2d:	mov    BYTE PTR [esp+0x18],al
64004d31:	je     0x64004d37
64004d33:	mov    esi,DWORD PTR [esi]
64004d35:	jmp    0x64004d3a
64004d37:	mov    esi,DWORD PTR [esi+0x8]
64004d3a:	cmp    BYTE PTR [esi+0x45],0x0
64004d3e:	je     0x64004cc5
64004d40:	mov    edi,DWORD PTR [esp+0x28]
64004d44:	mov    ecx,DWORD PTR [esp+0x10]
64004d48:	test   al,al
64004d4a:	mov    esi,ecx
64004d4c:	mov    DWORD PTR [esp+0x2c],esi
64004d50:	mov    DWORD PTR [esp+0x28],edi
64004d54:	je     0x64004d99
64004d56:	mov    eax,DWORD PTR [edi+0x4]
64004d59:	cmp    ecx,DWORD PTR [eax]
64004d5b:	jne    0x64004d8c
64004d5d:	mov    edx,DWORD PTR [ebp+0xc]
64004d60:	push   edx
64004d61:	push   ecx
64004d62:	push   0x1
64004d64:	lea    eax,[esp+0x34]
64004d68:	push   eax
64004d69:	mov    ecx,edi
64004d6b:	call   0x64004e10
64004d70:	mov    ecx,eax
64004d72:	mov    edx,DWORD PTR [ecx]
64004d74:	mov    eax,DWORD PTR [ebp+0x8]
64004d77:	mov    ecx,DWORD PTR [ecx+0x4]
64004d7a:	mov    DWORD PTR [eax+0x4],ecx
64004d7d:	mov    BYTE PTR [eax+0x8],0x1
64004d81:	mov    DWORD PTR [eax],edx
64004d83:	pop    edi
64004d84:	pop    esi
64004d85:	pop    ebx
64004d86:	mov    esp,ebp
64004d88:	pop    ebp
64004d89:	ret    0x8
64004d8c:	lea    ecx,[esp+0x28]
64004d90:	call   0x64006050
64004d95:	mov    esi,DWORD PTR [esp+0x2c]
64004d99:	mov    ebx,DWORD PTR [ebp+0xc]
64004d9c:	cmp    DWORD PTR [ebx+0x18],0x10
64004da0:	mov    edx,DWORD PTR [ebx+0x14]
64004da3:	lea    ecx,[esi+0xc]
64004da6:	jb     0x64004dad
64004da8:	mov    eax,DWORD PTR [ebx+0x4]
64004dab:	jmp    0x64004db0
64004dad:	lea    eax,[ebx+0x4]
64004db0:	push   edx
64004db1:	mov    edx,DWORD PTR [ecx+0x14]
64004db4:	push   eax
64004db5:	push   edx
64004db6:	push   0x0
64004db8:	call   0x64003520
64004dbd:	test   eax,eax
64004dbf:	jge    0x64004df4
64004dc1:	mov    eax,DWORD PTR [esp+0x10]
64004dc5:	mov    ecx,DWORD PTR [esp+0x18]
64004dc9:	push   ebx
64004dca:	push   eax
64004dcb:	push   ecx
64004dcc:	lea    edx,[esp+0x34]
64004dd0:	push   edx
64004dd1:	mov    ecx,edi
64004dd3:	call   0x64004e10
64004dd8:	mov    ecx,eax
64004dda:	mov    edx,DWORD PTR [ecx]
64004ddc:	mov    eax,DWORD PTR [ebp+0x8]
64004ddf:	mov    ecx,DWORD PTR [ecx+0x4]
64004de2:	mov    DWORD PTR [eax+0x4],ecx
64004de5:	mov    BYTE PTR [eax+0x8],0x1
64004de9:	mov    DWORD PTR [eax],edx
64004deb:	pop    edi
64004dec:	pop    esi
64004ded:	pop    ebx
64004dee:	mov    esp,ebp
64004df0:	pop    ebp
64004df1:	ret    0x8
64004df4:	mov    eax,DWORD PTR [ebp+0x8]
64004df7:	mov    edx,DWORD PTR [esp+0x28]
64004dfb:	pop    edi
64004dfc:	mov    DWORD PTR [eax+0x4],esi
64004dff:	pop    esi
64004e00:	mov    BYTE PTR [eax+0x8],0x0
64004e04:	mov    DWORD PTR [eax],edx
64004e06:	pop    ebx
64004e07:	mov    esp,ebp
64004e09:	pop    ebp
64004e0a:	ret    0x8
64004e0d:	int3   
64004e0e:	int3   
64004e0f:	int3   
64004e10:	push   ebp
64004e11:	mov    ebp,esp
64004e13:	and    esp,0xfffffff8
64004e16:	push   0xffffffff
64004e18:	push   0x64023578
64004e1d:	mov    eax,fs:0x0
64004e23:	push   eax
64004e24:	sub    esp,0x50
64004e27:	push   ebx
64004e28:	push   esi
64004e29:	push   edi
64004e2a:	mov    eax,ds:0x640521ac
64004e2f:	xor    eax,esp
64004e31:	push   eax
64004e32:	lea    eax,[esp+0x60]
64004e36:	mov    fs:0x0,eax
64004e3c:	mov    edi,ecx
64004e3e:	xor    ebx,ebx
64004e40:	cmp    DWORD PTR [edi+0x8],0x4924923
64004e47:	jb     0x64004e92
64004e49:	push   0x13
64004e4b:	push   0x64041d0c
64004e50:	lea    ecx,[esp+0x20]
64004e54:	mov    DWORD PTR [esp+0x38],0xf
64004e5c:	mov    DWORD PTR [esp+0x34],ebx
64004e60:	mov    BYTE PTR [esp+0x24],bl
64004e64:	call   0x64003450
64004e69:	lea    eax,[esp+0x18]
64004e6d:	push   eax
64004e6e:	lea    ecx,[esp+0x38]
64004e72:	mov    DWORD PTR [esp+0x6c],ebx
64004e76:	call   0x64001350
64004e7b:	push   0x64044104
64004e80:	lea    ecx,[esp+0x38]
64004e84:	push   ecx
64004e85:	mov    DWORD PTR [esp+0x3c],0x6402c2e8
64004e8d:	call   0x64013812
64004e92:	mov    edx,DWORD PTR [ebp+0x14]
64004e95:	mov    eax,DWORD PTR [edi+0x4]
64004e98:	mov    esi,DWORD PTR [ebp+0x10]
64004e9b:	push   ebx
64004e9c:	push   edx
64004e9d:	push   eax
64004e9e:	push   esi
64004e9f:	push   eax
64004ea0:	call   0x64005880
64004ea5:	add    DWORD PTR [edi+0x8],0x1
64004ea9:	mov    ecx,eax
64004eab:	mov    eax,DWORD PTR [edi+0x4]
64004eae:	cmp    esi,eax
64004eb0:	mov    DWORD PTR [esp+0x14],ecx
64004eb4:	jne    0x64004ec6
64004eb6:	mov    DWORD PTR [eax+0x4],ecx
64004eb9:	mov    eax,DWORD PTR [edi+0x4]
64004ebc:	mov    DWORD PTR [eax],ecx
64004ebe:	mov    edx,DWORD PTR [edi+0x4]
64004ec1:	mov    DWORD PTR [edx+0x8],ecx
64004ec4:	jmp    0x64004ee6
64004ec6:	cmp    BYTE PTR [ebp+0xc],bl
64004ec9:	je     0x64004ed8
64004ecb:	mov    DWORD PTR [esi],ecx
64004ecd:	mov    eax,DWORD PTR [edi+0x4]
64004ed0:	cmp    esi,DWORD PTR [eax]
64004ed2:	jne    0x64004ee6
64004ed4:	mov    DWORD PTR [eax],ecx
64004ed6:	jmp    0x64004ee6
64004ed8:	mov    DWORD PTR [esi+0x8],ecx
64004edb:	mov    eax,DWORD PTR [edi+0x4]
64004ede:	cmp    esi,DWORD PTR [eax+0x8]
64004ee1:	jne    0x64004ee6
64004ee3:	mov    DWORD PTR [eax+0x8],ecx
64004ee6:	mov    edx,DWORD PTR [ecx+0x4]
64004ee9:	cmp    BYTE PTR [edx+0x44],bl
64004eec:	lea    eax,[ecx+0x4]
64004eef:	mov    esi,ecx
64004ef1:	jne    0x64005032
64004ef7:	mov    ecx,DWORD PTR [eax]
64004ef9:	mov    edx,DWORD PTR [ecx+0x4]
64004efc:	cmp    ecx,DWORD PTR [edx]
64004efe:	jne    0x64004fa5
64004f04:	mov    edx,DWORD PTR [edx+0x8]
64004f07:	cmp    BYTE PTR [edx+0x44],bl
64004f0a:	je     0x64004fac
64004f10:	cmp    esi,DWORD PTR [ecx+0x8]
64004f13:	jne    0x64004f50
64004f15:	mov    esi,ecx
64004f17:	mov    ecx,DWORD PTR [esi+0x8]
64004f1a:	mov    eax,DWORD PTR [ecx]
64004f1c:	mov    DWORD PTR [esi+0x8],eax
64004f1f:	mov    eax,DWORD PTR [ecx]
64004f21:	cmp    BYTE PTR [eax+0x45],bl
64004f24:	jne    0x64004f29
64004f26:	mov    DWORD PTR [eax+0x4],esi
64004f29:	mov    edx,DWORD PTR [esi+0x4]
64004f2c:	lea    eax,[esi+0x4]
64004f2f:	mov    DWORD PTR [ecx+0x4],edx
64004f32:	mov    edx,DWORD PTR [edi+0x4]
64004f35:	cmp    esi,DWORD PTR [edx+0x4]
64004f38:	jne    0x64004f3f
64004f3a:	mov    DWORD PTR [edx+0x4],ecx
64004f3d:	jmp    0x64004f4c
64004f3f:	mov    edx,DWORD PTR [eax]
64004f41:	cmp    esi,DWORD PTR [edx]
64004f43:	jne    0x64004f49
64004f45:	mov    DWORD PTR [edx],ecx
64004f47:	jmp    0x64004f4c
64004f49:	mov    DWORD PTR [edx+0x8],ecx
64004f4c:	mov    DWORD PTR [ecx],esi
64004f4e:	mov    DWORD PTR [eax],ecx
64004f50:	mov    ecx,DWORD PTR [eax]
64004f52:	mov    BYTE PTR [ecx+0x44],0x1
64004f56:	mov    edx,DWORD PTR [eax]
64004f58:	mov    ecx,DWORD PTR [edx+0x4]
64004f5b:	mov    BYTE PTR [ecx+0x44],bl
64004f5e:	mov    edx,DWORD PTR [eax]
64004f60:	mov    eax,DWORD PTR [edx+0x4]
64004f63:	mov    ecx,DWORD PTR [eax]
64004f65:	mov    edx,DWORD PTR [ecx+0x8]
64004f68:	mov    DWORD PTR [eax],edx
64004f6a:	mov    edx,DWORD PTR [ecx+0x8]
64004f6d:	cmp    BYTE PTR [edx+0x45],bl
64004f70:	jne    0x64004f75
64004f72:	mov    DWORD PTR [edx+0x4],eax
64004f75:	mov    edx,DWORD PTR [eax+0x4]
64004f78:	mov    DWORD PTR [ecx+0x4],edx
64004f7b:	mov    edx,DWORD PTR [edi+0x4]
64004f7e:	cmp    eax,DWORD PTR [edx+0x4]
64004f81:	jne    0x64004f8e
64004f83:	mov    DWORD PTR [edx+0x4],ecx
64004f86:	mov    DWORD PTR [ecx+0x8],eax
64004f89:	jmp    0x6400501c
64004f8e:	mov    edx,DWORD PTR [eax+0x4]
64004f91:	cmp    eax,DWORD PTR [edx+0x8]
64004f94:	jne    0x64004f9e
64004f96:	mov    DWORD PTR [edx+0x8],ecx
64004f99:	mov    DWORD PTR [ecx+0x8],eax
64004f9c:	jmp    0x6400501c
64004f9e:	mov    DWORD PTR [edx],ecx
64004fa0:	mov    DWORD PTR [ecx+0x8],eax
64004fa3:	jmp    0x6400501c
64004fa5:	mov    edx,DWORD PTR [edx]
64004fa7:	cmp    BYTE PTR [edx+0x44],bl
64004faa:	jne    0x64004fc3
64004fac:	mov    BYTE PTR [ecx+0x44],0x1
64004fb0:	mov    BYTE PTR [edx+0x44],0x1
64004fb4:	mov    edx,DWORD PTR [eax]
64004fb6:	mov    ecx,DWORD PTR [edx+0x4]
64004fb9:	mov    BYTE PTR [ecx+0x44],bl
64004fbc:	mov    edx,DWORD PTR [eax]
64004fbe:	mov    esi,DWORD PTR [edx+0x4]
64004fc1:	jmp    0x6400501f
64004fc3:	cmp    esi,DWORD PTR [ecx]
64004fc5:	jne    0x64004fd1
64004fc7:	mov    esi,ecx
64004fc9:	push   esi
64004fca:	mov    ecx,edi
64004fcc:	call   0x64005820
64004fd1:	mov    eax,DWORD PTR [esi+0x4]
64004fd4:	mov    BYTE PTR [eax+0x44],0x1
64004fd8:	mov    ecx,DWORD PTR [esi+0x4]
64004fdb:	mov    edx,DWORD PTR [ecx+0x4]
64004fde:	mov    BYTE PTR [edx+0x44],bl
64004fe1:	mov    eax,DWORD PTR [esi+0x4]
64004fe4:	mov    eax,DWORD PTR [eax+0x4]
64004fe7:	mov    ecx,DWORD PTR [eax+0x8]
64004fea:	mov    edx,DWORD PTR [ecx]
64004fec:	mov    DWORD PTR [eax+0x8],edx
64004fef:	mov    edx,DWORD PTR [ecx]
64004ff1:	cmp    BYTE PTR [edx+0x45],bl
64004ff4:	jne    0x64004ff9
64004ff6:	mov    DWORD PTR [edx+0x4],eax
64004ff9:	mov    edx,DWORD PTR [eax+0x4]
64004ffc:	mov    DWORD PTR [ecx+0x4],edx
64004fff:	mov    edx,DWORD PTR [edi+0x4]
64005002:	cmp    eax,DWORD PTR [edx+0x4]
64005005:	jne    0x6400500c
64005007:	mov    DWORD PTR [edx+0x4],ecx
6400500a:	jmp    0x6400501a
6400500c:	mov    edx,DWORD PTR [eax+0x4]
6400500f:	cmp    eax,DWORD PTR [edx]
64005011:	jne    0x64005017
64005013:	mov    DWORD PTR [edx],ecx
64005015:	jmp    0x6400501a
64005017:	mov    DWORD PTR [edx+0x8],ecx
6400501a:	mov    DWORD PTR [ecx],eax
6400501c:	mov    DWORD PTR [eax+0x4],ecx
6400501f:	mov    ecx,DWORD PTR [esi+0x4]
64005022:	cmp    BYTE PTR [ecx+0x44],bl
64005025:	lea    eax,[esi+0x4]
64005028:	je     0x64004ef7
6400502e:	mov    ecx,DWORD PTR [esp+0x14]
64005032:	mov    edx,DWORD PTR [edi+0x4]
64005035:	mov    eax,DWORD PTR [edx+0x4]
64005038:	mov    BYTE PTR [eax+0x44],0x1
6400503c:	mov    eax,DWORD PTR [ebp+0x8]
6400503f:	mov    DWORD PTR [eax+0x4],ecx
64005042:	mov    DWORD PTR [eax],edi
64005044:	mov    ecx,DWORD PTR [esp+0x60]
64005048:	mov    DWORD PTR fs:0x0,ecx
6400504f:	pop    ecx
64005050:	pop    edi
64005051:	pop    esi
64005052:	pop    ebx
64005053:	mov    esp,ebp
64005055:	pop    ebp
64005056:	ret    0x10
64005059:	int3   
6400505a:	int3   
6400505b:	int3   
6400505c:	int3   
6400505d:	int3   
6400505e:	int3   
6400505f:	int3   
64005060:	push   ecx
64005061:	mov    eax,DWORD PTR [ecx+0x4]
64005064:	push   esi
64005065:	mov    esi,DWORD PTR [eax+0x4]
64005068:	cmp    BYTE PTR [esi+0x45],0x0
6400506c:	mov    DWORD PTR [esp+0x4],eax
64005070:	jne    0x640050e7
64005072:	mov    eax,DWORD PTR [esp+0xc]
64005076:	mov    ecx,DWORD PTR [eax+0x18]
64005079:	push   ebx
6400507a:	mov    ebx,DWORD PTR [eax+0x14]
6400507d:	push   ebp
6400507e:	push   edi
6400507f:	mov    DWORD PTR [esp+0x18],ecx
64005083:	lea    ebp,[eax+0x4]
64005086:	cmp    DWORD PTR [esp+0x18],0x10
6400508b:	jb     0x64005092
6400508d:	mov    edx,DWORD PTR [ebp+0x0]
64005090:	jmp    0x64005094
64005092:	mov    edx,ebp
64005094:	mov    edi,DWORD PTR [esi+0x20]
64005097:	mov    eax,edi
64005099:	cmp    eax,edi
6400509b:	jae    0x6400509d
6400509d:	cmp    edi,ebx
6400509f:	mov    ecx,edi
640050a1:	jb     0x640050a5
640050a3:	mov    ecx,ebx
640050a5:	cmp    DWORD PTR [esi+0x24],0x10
640050a9:	jb     0x640050b0
640050ab:	mov    eax,DWORD PTR [esi+0x10]
640050ae:	jmp    0x640050b3
640050b0:	lea    eax,[esi+0x10]
640050b3:	push   ecx
640050b4:	push   edx
640050b5:	push   eax
640050b6:	call   0x640012b0
640050bb:	add    esp,0xc
640050be:	test   eax,eax
640050c0:	jne    0x640050cd
640050c2:	cmp    edi,ebx
640050c4:	jb     0x640050cf
640050c6:	cmp    edi,ebx
640050c8:	setne  al
640050cb:	test   eax,eax
640050cd:	jge    0x640050d4
640050cf:	mov    esi,DWORD PTR [esi+0x8]
640050d2:	jmp    0x640050da
640050d4:	mov    DWORD PTR [esp+0x10],esi
640050d8:	mov    esi,DWORD PTR [esi]
640050da:	cmp    BYTE PTR [esi+0x45],0x0
640050de:	je     0x64005086
640050e0:	mov    eax,DWORD PTR [esp+0x10]
640050e4:	pop    edi
640050e5:	pop    ebp
640050e6:	pop    ebx
640050e7:	pop    esi
640050e8:	pop    ecx
640050e9:	ret    0x4
640050ec:	int3   
640050ed:	int3   
640050ee:	int3   
640050ef:	int3   
640050f0:	sub    esp,0x8
640050f3:	cmp    DWORD PTR [esi+0x14],ebx
640050f6:	push   edi
640050f7:	mov    edi,eax
640050f9:	jae    0x64005100
640050fb:	call   0x64012efb
64005100:	mov    eax,DWORD PTR [esi+0x14]
64005103:	sub    eax,ebx
64005105:	cmp    eax,edi
64005107:	jae    0x6400510b
64005109:	mov    edi,eax
6400510b:	test   edi,edi
6400510d:	jbe    0x64005178
6400510f:	mov    ecx,DWORD PTR [esi+0x18]
64005112:	cmp    ecx,0x8
64005115:	push   ebp
64005116:	lea    ebp,[esi+0x4]
64005119:	jb     0x64005124
6400511b:	mov    edx,DWORD PTR [ebp+0x0]
6400511e:	mov    DWORD PTR [esp+0x8],edx
64005122:	jmp    0x64005128
64005124:	mov    DWORD PTR [esp+0x8],ebp
64005128:	cmp    ecx,0x8
6400512b:	jb     0x64005136
6400512d:	mov    edx,DWORD PTR [ebp+0x0]
64005130:	mov    DWORD PTR [esp+0xc],edx
64005134:	jmp    0x6400513a
64005136:	mov    DWORD PTR [esp+0xc],ebp
6400513a:	mov    edx,DWORD PTR [esp+0x8]
6400513e:	sub    eax,edi
64005140:	add    eax,eax
64005142:	push   eax
64005143:	lea    eax,[ebx+edi*1]
64005146:	lea    eax,[edx+eax*2]
64005149:	sub    ecx,ebx
6400514b:	push   eax
6400514c:	add    ecx,ecx
6400514e:	push   ecx
6400514f:	mov    ecx,DWORD PTR [esp+0x18]
64005153:	lea    edx,[ecx+ebx*2]
64005156:	push   edx
64005157:	call   0x640137b7
6400515c:	mov    eax,DWORD PTR [esi+0x14]
6400515f:	sub    eax,edi
64005161:	add    esp,0x10
64005164:	cmp    DWORD PTR [esi+0x18],0x8
64005168:	mov    DWORD PTR [esi+0x14],eax
6400516b:	jb     0x64005170
6400516d:	mov    ebp,DWORD PTR [ebp+0x0]
64005170:	mov    WORD PTR [ebp+eax*2+0x0],0x0
64005177:	pop    ebp
64005178:	mov    eax,esi
6400517a:	pop    edi
6400517b:	add    esp,0x8
6400517e:	ret    
6400517f:	int3   
64005180:	cmp    edi,0x7ffffffe
64005186:	push   esi
64005187:	mov    esi,eax
64005189:	jbe    0x64005190
6400518b:	call   0x64012ebc
64005190:	mov    eax,DWORD PTR [esi+0x18]
64005193:	cmp    eax,edi
64005195:	jae    0x640051ac
64005197:	mov    eax,DWORD PTR [esi+0x14]
6400519a:	push   eax
6400519b:	push   edi
6400519c:	push   esi
6400519d:	call   0x64005920
640051a2:	xor    ecx,ecx
640051a4:	cmp    ecx,edi
640051a6:	sbb    eax,eax
640051a8:	neg    eax
640051aa:	pop    esi
640051ab:	ret    
640051ac:	test   edi,edi
640051ae:	jne    0x640051d0
640051b0:	cmp    eax,0x8
640051b3:	mov    DWORD PTR [esi+0x14],edi
640051b6:	jb     0x640051c8
640051b8:	mov    esi,DWORD PTR [esi+0x4]
640051bb:	xor    ecx,ecx
640051bd:	cmp    ecx,edi
640051bf:	sbb    eax,eax
640051c1:	mov    WORD PTR [esi],di
640051c4:	neg    eax
640051c6:	pop    esi
640051c7:	ret    
640051c8:	add    esi,0x4
640051cb:	mov    WORD PTR [esi],0x0
640051d0:	xor    ecx,ecx
640051d2:	cmp    ecx,edi
640051d4:	sbb    eax,eax
640051d6:	neg    eax
640051d8:	pop    esi
640051d9:	ret    
640051da:	int3   
640051db:	int3   
640051dc:	int3   
640051dd:	int3   
640051de:	int3   
640051df:	int3   
640051e0:	sub    esp,0x18
640051e3:	mov    ecx,DWORD PTR [esp+0x1c]
640051e7:	mov    eax,DWORD PTR [ecx+0x4]
640051ea:	push   ebx
640051eb:	mov    ebx,DWORD PTR [esp+0x24]
640051ef:	push   ebp
640051f0:	push   esi
640051f1:	mov    esi,DWORD PTR [eax+0x4]
640051f4:	cmp    BYTE PTR [esi+0x45],0x0
640051f8:	mov    ebp,eax
640051fa:	mov    al,0x1
640051fc:	push   edi
640051fd:	mov    BYTE PTR [esp+0x10],al
64005201:	jne    0x640052c3
64005207:	mov    eax,DWORD PTR [esp+0x34]
6400520b:	mov    ecx,DWORD PTR [eax+0x14]
6400520e:	mov    edx,DWORD PTR [eax+0x18]
64005211:	mov    DWORD PTR [esp+0x18],ecx
64005215:	mov    DWORD PTR [esp+0x14],ecx
64005219:	mov    DWORD PTR [esp+0x1c],edx
6400521d:	jmp    0x64005224
6400521f:	nop
64005220:	mov    ecx,DWORD PTR [esp+0x14]
64005224:	cmp    DWORD PTR [esi+0x24],0x8
64005228:	mov    ebp,DWORD PTR [esi+0x20]
6400522b:	mov    DWORD PTR [esp+0x20],esi
6400522f:	jb     0x64005236
64005231:	mov    eax,DWORD PTR [esi+0x10]
64005234:	jmp    0x64005239
64005236:	lea    eax,[esi+0x10]
64005239:	mov    edi,DWORD PTR [esp+0x18]
6400523d:	cmp    ecx,edi
6400523f:	jae    0x64005243
64005241:	mov    edi,ecx
64005243:	cmp    edi,ebp
64005245:	mov    edx,edi
64005247:	jb     0x6400524b
64005249:	mov    edx,ebp
6400524b:	mov    ecx,DWORD PTR [esp+0x34]
6400524f:	add    ecx,0x4
64005252:	cmp    DWORD PTR [esp+0x1c],0x8
64005257:	jb     0x6400525b
64005259:	mov    ecx,DWORD PTR [ecx]
6400525b:	test   edx,edx
6400525d:	jbe    0x64005277
6400525f:	nop
64005260:	mov    bx,WORD PTR [ecx]
64005263:	cmp    bx,WORD PTR [eax]
64005266:	jne    0x64005280
64005268:	add    ecx,0x2
6400526b:	add    eax,0x2
6400526e:	sub    edx,0x1
64005271:	jne    0x64005260
64005273:	mov    ebx,DWORD PTR [esp+0x30]
64005277:	cmp    edi,ebp
64005279:	jae    0x64005296
6400527b:	or     eax,0xffffffff
6400527e:	jmp    0x6400529d
64005280:	mov    cx,bx
64005283:	cmp    cx,WORD PTR [eax]
64005286:	sbb    eax,eax
64005288:	and    eax,0xfffffffe
6400528b:	add    eax,0x1
6400528e:	je     0x64005273
64005290:	mov    ebx,DWORD PTR [esp+0x30]
64005294:	jmp    0x6400529d
64005296:	xor    eax,eax
64005298:	cmp    edi,ebp
6400529a:	setne  al
6400529d:	test   eax,eax
6400529f:	setl   al
640052a2:	test   al,al
640052a4:	mov    BYTE PTR [esp+0x10],al
640052a8:	je     0x640052ae
640052aa:	mov    esi,DWORD PTR [esi]
640052ac:	jmp    0x640052b1
640052ae:	mov    esi,DWORD PTR [esi+0x8]
640052b1:	cmp    BYTE PTR [esi+0x45],0x0
640052b5:	je     0x64005220
640052bb:	mov    ebp,DWORD PTR [esp+0x20]
640052bf:	mov    ecx,DWORD PTR [esp+0x2c]
640052c3:	test   al,al
640052c5:	mov    esi,ebp
640052c7:	mov    DWORD PTR [esp+0x24],esi
640052cb:	mov    DWORD PTR [esp+0x20],ecx
640052cf:	je     0x64005313
640052d1:	mov    edx,DWORD PTR [ecx+0x4]
640052d4:	cmp    ebp,DWORD PTR [edx]
640052d6:	jne    0x64005306
640052d8:	mov    eax,DWORD PTR [esp+0x34]
640052dc:	push   eax
640052dd:	push   0x1
640052df:	lea    edx,[esp+0x28]
640052e3:	push   edx
640052e4:	push   ecx
640052e5:	mov    ecx,ebp
640052e7:	call   0x64005370
640052ec:	mov    ecx,DWORD PTR [eax]
640052ee:	mov    edx,DWORD PTR [eax+0x4]
640052f1:	mov    DWORD PTR [ebx],ecx
640052f3:	mov    DWORD PTR [ebx+0x4],edx
640052f6:	mov    BYTE PTR [ebx+0x8],0x1
640052fa:	mov    eax,ebx
640052fc:	pop    edi
640052fd:	pop    esi
640052fe:	pop    ebp
640052ff:	pop    ebx
64005300:	add    esp,0x18
64005303:	ret    0xc
64005306:	lea    esi,[esp+0x20]
6400530a:	call   0x64006520
6400530f:	mov    esi,DWORD PTR [esp+0x24]
64005313:	mov    eax,DWORD PTR [esp+0x34]
64005317:	cmp    DWORD PTR [eax+0x18],0x8
6400531b:	mov    edi,DWORD PTR [eax+0x14]
6400531e:	lea    ecx,[esi+0xc]
64005321:	jb     0x64005328
64005323:	mov    eax,DWORD PTR [eax+0x4]
64005326:	jmp    0x6400532b
64005328:	add    eax,0x4
6400532b:	push   eax
6400532c:	mov    eax,DWORD PTR [ecx+0x14]
6400532f:	call   0x64006970
64005334:	test   eax,eax
64005336:	jge    0x6400534e
64005338:	mov    eax,DWORD PTR [esp+0x34]
6400533c:	mov    ecx,DWORD PTR [esp+0x10]
64005340:	push   eax
64005341:	mov    eax,DWORD PTR [esp+0x30]
64005345:	push   ecx
64005346:	lea    edx,[esp+0x28]
6400534a:	push   edx
6400534b:	push   eax
6400534c:	jmp    0x640052e5
6400534e:	mov    eax,DWORD PTR [esp+0x20]
64005352:	pop    edi
64005353:	mov    DWORD PTR [ebx+0x4],esi
64005356:	pop    esi
64005357:	mov    DWORD PTR [ebx],eax
64005359:	pop    ebp
6400535a:	mov    BYTE PTR [ebx+0x8],0x0
6400535e:	mov    eax,ebx
64005360:	pop    ebx
64005361:	add    esp,0x18
64005364:	ret    0xc
64005367:	int3   
64005368:	int3   
64005369:	int3   
6400536a:	int3   
6400536b:	int3   
6400536c:	int3   
6400536d:	int3   
6400536e:	int3   
6400536f:	int3   
64005370:	push   0xffffffff
64005372:	push   0x64023548
64005377:	mov    eax,fs:0x0
6400537d:	push   eax
6400537e:	sub    esp,0x44
64005381:	push   ebx
64005382:	push   ebp
64005383:	push   esi
64005384:	push   edi
64005385:	mov    eax,ds:0x640521ac
6400538a:	xor    eax,esp
6400538c:	push   eax
6400538d:	lea    eax,[esp+0x58]
64005391:	mov    fs:0x0,eax
64005397:	mov    esi,ecx
64005399:	mov    ebp,DWORD PTR [esp+0x68]
6400539d:	cmp    DWORD PTR [ebp+0x8],0x4924923
640053a4:	jb     0x640053f1
640053a6:	push   0x13
640053a8:	xor    ebx,ebx
640053aa:	push   0x64041d0c
640053af:	lea    ecx,[esp+0x1c]
640053b3:	mov    DWORD PTR [esp+0x34],0xf
640053bb:	mov    DWORD PTR [esp+0x30],ebx
640053bf:	mov    BYTE PTR [esp+0x20],bl
640053c3:	call   0x64003450
640053c8:	lea    eax,[esp+0x14]
640053cc:	push   eax
640053cd:	lea    ecx,[esp+0x34]
640053d1:	mov    DWORD PTR [esp+0x64],ebx
640053d5:	call   0x64001350
640053da:	push   0x64044104
640053df:	lea    ecx,[esp+0x34]
640053e3:	push   ecx
640053e4:	mov    DWORD PTR [esp+0x38],0x6402c2e8
640053ec:	call   0x64013812
640053f1:	mov    edx,DWORD PTR [esp+0x74]
640053f5:	mov    eax,DWORD PTR [ebp+0x4]
640053f8:	push   edx
640053f9:	push   eax
640053fa:	push   esi
640053fb:	push   eax
640053fc:	call   0x64005c90
64005401:	mov    ecx,DWORD PTR [ebp+0x4]
64005404:	mov    edx,eax
64005406:	mov    eax,0x1
6400540b:	add    DWORD PTR [ebp+0x8],eax
6400540e:	xor    ebx,ebx
64005410:	cmp    esi,ecx
64005412:	mov    DWORD PTR [esp+0x68],edx
64005416:	jne    0x64005425
64005418:	mov    DWORD PTR [ecx+0x4],edx
6400541b:	mov    ecx,DWORD PTR [ebp+0x4]
6400541e:	mov    DWORD PTR [ecx],edx
64005420:	mov    ecx,DWORD PTR [ebp+0x4]
64005423:	jmp    0x64005443
64005425:	cmp    BYTE PTR [esp+0x70],bl
64005429:	je     0x64005438
6400542b:	mov    DWORD PTR [esi],edx
6400542d:	mov    ecx,DWORD PTR [ebp+0x4]
64005430:	cmp    esi,DWORD PTR [ecx]
64005432:	jne    0x64005446
64005434:	mov    DWORD PTR [ecx],edx
64005436:	jmp    0x64005446
64005438:	mov    DWORD PTR [esi+0x8],edx
6400543b:	mov    ecx,DWORD PTR [ebp+0x4]
6400543e:	cmp    esi,DWORD PTR [ecx+0x8]
64005441:	jne    0x64005446
64005443:	mov    DWORD PTR [ecx+0x8],edx
64005446:	mov    esi,DWORD PTR [edx+0x4]
64005449:	cmp    BYTE PTR [esi+0x44],bl
6400544c:	lea    ecx,[edx+0x4]
6400544f:	jne    0x640055c7
64005455:	mov    esi,DWORD PTR [ecx]
64005457:	mov    edi,DWORD PTR [esi+0x4]
6400545a:	cmp    esi,DWORD PTR [edi]
6400545c:	jne    0x64005508
64005462:	mov    edi,DWORD PTR [edi+0x8]
64005465:	cmp    BYTE PTR [edi+0x44],bl
64005468:	je     0x6400550f
6400546e:	cmp    edx,DWORD PTR [esi+0x8]
64005471:	jne    0x640054ae
64005473:	mov    edx,esi
64005475:	mov    esi,DWORD PTR [edx+0x8]
64005478:	mov    ecx,DWORD PTR [esi]
6400547a:	mov    DWORD PTR [edx+0x8],ecx
6400547d:	mov    ecx,DWORD PTR [esi]
6400547f:	cmp    BYTE PTR [ecx+0x45],bl
64005482:	jne    0x64005487
64005484:	mov    DWORD PTR [ecx+0x4],edx
64005487:	mov    edi,DWORD PTR [edx+0x4]
6400548a:	lea    ecx,[edx+0x4]
6400548d:	mov    DWORD PTR [esi+0x4],edi
64005490:	mov    edi,DWORD PTR [ebp+0x4]
64005493:	cmp    edx,DWORD PTR [edi+0x4]
64005496:	jne    0x6400549d
64005498:	mov    DWORD PTR [edi+0x4],esi
6400549b:	jmp    0x640054aa
6400549d:	mov    edi,DWORD PTR [ecx]
6400549f:	cmp    edx,DWORD PTR [edi]
640054a1:	jne    0x640054a7
640054a3:	mov    DWORD PTR [edi],esi
640054a5:	jmp    0x640054aa
640054a7:	mov    DWORD PTR [edi+0x8],esi
640054aa:	mov    DWORD PTR [esi],edx
640054ac:	mov    DWORD PTR [ecx],esi
640054ae:	mov    esi,DWORD PTR [ecx]
640054b0:	mov    BYTE PTR [esi+0x44],al
640054b3:	mov    esi,DWORD PTR [ecx]
640054b5:	mov    esi,DWORD PTR [esi+0x4]
640054b8:	mov    BYTE PTR [esi+0x44],bl
640054bb:	mov    ecx,DWORD PTR [ecx]
640054bd:	mov    ecx,DWORD PTR [ecx+0x4]
640054c0:	mov    esi,DWORD PTR [ecx]
640054c2:	mov    edi,DWORD PTR [esi+0x8]
640054c5:	mov    DWORD PTR [ecx],edi
640054c7:	mov    edi,DWORD PTR [esi+0x8]
640054ca:	cmp    BYTE PTR [edi+0x45],bl
640054cd:	jne    0x640054d2
640054cf:	mov    DWORD PTR [edi+0x4],ecx
640054d2:	mov    edi,DWORD PTR [ecx+0x4]
640054d5:	mov    DWORD PTR [esi+0x4],edi
640054d8:	mov    edi,DWORD PTR [ebp+0x4]
640054db:	cmp    ecx,DWORD PTR [edi+0x4]
640054de:	jne    0x640054eb
640054e0:	mov    DWORD PTR [edi+0x4],esi
640054e3:	mov    DWORD PTR [esi+0x8],ecx
640054e6:	jmp    0x640055b1
640054eb:	mov    edi,DWORD PTR [ecx+0x4]
640054ee:	cmp    ecx,DWORD PTR [edi+0x8]
640054f1:	jne    0x640054fe
640054f3:	mov    DWORD PTR [edi+0x8],esi
640054f6:	mov    DWORD PTR [esi+0x8],ecx
640054f9:	jmp    0x640055b1
640054fe:	mov    DWORD PTR [edi],esi
64005500:	mov    DWORD PTR [esi+0x8],ecx
64005503:	jmp    0x640055b1
64005508:	mov    edi,DWORD PTR [edi]
6400550a:	cmp    BYTE PTR [edi+0x44],bl
6400550d:	jne    0x64005529
6400550f:	mov    edx,esi
64005511:	mov    BYTE PTR [edx+0x44],al
64005514:	mov    BYTE PTR [edi+0x44],al
64005517:	mov    edx,DWORD PTR [ecx]
64005519:	mov    edx,DWORD PTR [edx+0x4]
6400551c:	mov    BYTE PTR [edx+0x44],bl
6400551f:	mov    ecx,DWORD PTR [ecx]
64005521:	mov    edx,DWORD PTR [ecx+0x4]
64005524:	jmp    0x640055b4
64005529:	cmp    edx,DWORD PTR [esi]
6400552b:	jne    0x6400556a
6400552d:	mov    edx,esi
6400552f:	mov    esi,DWORD PTR [edx]
64005531:	mov    ecx,DWORD PTR [esi+0x8]
64005534:	mov    DWORD PTR [edx],ecx
64005536:	mov    ecx,DWORD PTR [esi+0x8]
64005539:	cmp    BYTE PTR [ecx+0x45],bl
6400553c:	jne    0x64005541
6400553e:	mov    DWORD PTR [ecx+0x4],edx
64005541:	mov    edi,DWORD PTR [edx+0x4]
64005544:	lea    ecx,[edx+0x4]
64005547:	mov    DWORD PTR [esi+0x4],edi
6400554a:	mov    edi,DWORD PTR [ebp+0x4]
6400554d:	cmp    edx,DWORD PTR [edi+0x4]
64005550:	jne    0x64005557
64005552:	mov    DWORD PTR [edi+0x4],esi
64005555:	jmp    0x64005565
64005557:	mov    edi,DWORD PTR [ecx]
64005559:	cmp    edx,DWORD PTR [edi+0x8]
6400555c:	jne    0x64005563
6400555e:	mov    DWORD PTR [edi+0x8],esi
64005561:	jmp    0x64005565
64005563:	mov    DWORD PTR [edi],esi
64005565:	mov    DWORD PTR [esi+0x8],edx
64005568:	mov    DWORD PTR [ecx],esi
6400556a:	mov    esi,DWORD PTR [ecx]
6400556c:	mov    BYTE PTR [esi+0x44],al
6400556f:	mov    esi,DWORD PTR [ecx]
64005571:	mov    esi,DWORD PTR [esi+0x4]
64005574:	mov    BYTE PTR [esi+0x44],bl
64005577:	mov    ecx,DWORD PTR [ecx]
64005579:	mov    ecx,DWORD PTR [ecx+0x4]
6400557c:	mov    esi,DWORD PTR [ecx+0x8]
6400557f:	mov    edi,DWORD PTR [esi]
64005581:	mov    DWORD PTR [ecx+0x8],edi
64005584:	mov    edi,DWORD PTR [esi]
64005586:	cmp    BYTE PTR [edi+0x45],bl
64005589:	jne    0x6400558e
6400558b:	mov    DWORD PTR [edi+0x4],ecx
6400558e:	mov    edi,DWORD PTR [ecx+0x4]
64005591:	mov    DWORD PTR [esi+0x4],edi
64005594:	mov    edi,DWORD PTR [ebp+0x4]
64005597:	cmp    ecx,DWORD PTR [edi+0x4]
6400559a:	jne    0x640055a1
6400559c:	mov    DWORD PTR [edi+0x4],esi
6400559f:	jmp    0x640055af
640055a1:	mov    edi,DWORD PTR [ecx+0x4]
640055a4:	cmp    ecx,DWORD PTR [edi]
640055a6:	jne    0x640055ac
640055a8:	mov    DWORD PTR [edi],esi
640055aa:	jmp    0x640055af
640055ac:	mov    DWORD PTR [edi+0x8],esi
640055af:	mov    DWORD PTR [esi],ecx
640055b1:	mov    DWORD PTR [ecx+0x4],esi
640055b4:	mov    esi,DWORD PTR [edx+0x4]
640055b7:	cmp    BYTE PTR [esi+0x44],bl
640055ba:	lea    ecx,[edx+0x4]
640055bd:	je     0x64005455
640055c3:	mov    edx,DWORD PTR [esp+0x68]
640055c7:	mov    ecx,DWORD PTR [ebp+0x4]
640055ca:	mov    ecx,DWORD PTR [ecx+0x4]
640055cd:	mov    BYTE PTR [ecx+0x44],al
640055d0:	mov    ecx,DWORD PTR [esp+0x6c]
640055d4:	mov    DWORD PTR [ecx+0x4],edx
640055d7:	mov    DWORD PTR [ecx],ebp
640055d9:	mov    eax,ecx
640055db:	mov    ecx,DWORD PTR [esp+0x58]
640055df:	mov    DWORD PTR fs:0x0,ecx
640055e6:	pop    ecx
640055e7:	pop    edi
640055e8:	pop    esi
640055e9:	pop    ebp
640055ea:	pop    ebx
640055eb:	add    esp,0x50
640055ee:	ret    0x10
640055f1:	int3   
640055f2:	int3   
640055f3:	int3   
640055f4:	int3   
640055f5:	int3   
640055f6:	int3   
640055f7:	int3   
640055f8:	int3   
640055f9:	int3   
640055fa:	int3   
640055fb:	int3   
640055fc:	int3   
640055fd:	int3   
640055fe:	int3   
640055ff:	int3   
64005600:	sub    esp,0xc
64005603:	mov    eax,DWORD PTR [eax+0x4]
64005606:	push   edi
64005607:	mov    edi,DWORD PTR [eax+0x4]
6400560a:	cmp    BYTE PTR [edi+0x45],0x0
6400560e:	mov    DWORD PTR [esp+0x4],eax
64005612:	jne    0x640056af
64005618:	mov    edx,DWORD PTR [ecx+0x18]
6400561b:	push   ebx
6400561c:	push   ebp
6400561d:	mov    ebp,DWORD PTR [ecx+0x14]
64005620:	add    ecx,0x4
64005623:	push   esi
64005624:	mov    DWORD PTR [esp+0x18],edx
64005628:	mov    DWORD PTR [esp+0x14],ecx
6400562c:	jmp    0x64005634
6400562e:	mov    edi,edi
64005630:	mov    ecx,DWORD PTR [esp+0x14]
64005634:	mov    eax,0x8
64005639:	cmp    DWORD PTR [esp+0x18],eax
6400563d:	jb     0x64005641
6400563f:	mov    ecx,DWORD PTR [ecx]
64005641:	mov    ebx,DWORD PTR [edi+0x20]
64005644:	mov    edx,ebx
64005646:	cmp    edx,ebx
64005648:	jae    0x6400564a
6400564a:	cmp    ebx,ebp
6400564c:	mov    esi,ebx
6400564e:	jb     0x64005652
64005650:	mov    esi,ebp
64005652:	cmp    DWORD PTR [edi+0x24],eax
64005655:	jb     0x6400565c
64005657:	mov    edx,DWORD PTR [edi+0x10]
6400565a:	jmp    0x6400565f
6400565c:	lea    edx,[edi+0x10]
6400565f:	test   esi,esi
64005661:	jbe    0x64005688
64005663:	mov    ax,WORD PTR [edx]
64005666:	cmp    ax,WORD PTR [ecx]
64005669:	jne    0x64005678
6400566b:	add    edx,0x2
6400566e:	add    ecx,0x2
64005671:	sub    esi,0x1
64005674:	jne    0x64005663
64005676:	jmp    0x64005688
64005678:	mov    dx,ax
6400567b:	cmp    dx,WORD PTR [ecx]
6400567e:	sbb    ecx,ecx
64005680:	and    ecx,0xfffffffe
64005683:	add    ecx,0x1
64005686:	jne    0x64005693
64005688:	cmp    ebx,ebp
6400568a:	jb     0x64005697
6400568c:	xor    ecx,ecx
6400568e:	cmp    ebx,ebp
64005690:	setne  cl
64005693:	test   ecx,ecx
64005695:	jge    0x6400569c
64005697:	mov    edi,DWORD PTR [edi+0x8]
6400569a:	jmp    0x640056a2
6400569c:	mov    DWORD PTR [esp+0x10],edi
640056a0:	mov    edi,DWORD PTR [edi]
640056a2:	cmp    BYTE PTR [edi+0x45],0x0
640056a6:	je     0x64005630
640056a8:	mov    eax,DWORD PTR [esp+0x10]
640056ac:	pop    esi
640056ad:	pop    ebp
640056ae:	pop    ebx
640056af:	pop    edi
640056b0:	add    esp,0xc
640056b3:	ret    
640056b4:	int3   
640056b5:	int3   
640056b6:	int3   
640056b7:	int3   
640056b8:	int3   
640056b9:	int3   
640056ba:	int3   
640056bb:	int3   
640056bc:	int3   
640056bd:	int3   
640056be:	int3   
640056bf:	int3   
640056c0:	push   ebp
640056c1:	mov    ebp,esp
640056c3:	and    esp,0xfffffff8
640056c6:	sub    esp,0x14
640056c9:	push   ebx
640056ca:	push   esi
640056cb:	push   edi
640056cc:	mov    edi,ecx
640056ce:	mov    eax,DWORD PTR [edi+0x4]
640056d1:	mov    ebx,DWORD PTR [eax]
640056d3:	mov    eax,DWORD PTR [ebp+0xc]
640056d6:	test   eax,eax
640056d8:	je     0x640056de
640056da:	cmp    eax,edi
640056dc:	je     0x640056e3
640056de:	call   0x64013e16
640056e3:	mov    esi,DWORD PTR [ebp+0x10]
640056e6:	cmp    esi,ebx
640056e8:	jne    0x64005740
640056ea:	mov    eax,DWORD PTR [ebp+0x14]
640056ed:	test   eax,eax
640056ef:	mov    ebx,DWORD PTR [edi+0x4]
640056f2:	je     0x640056f8
640056f4:	cmp    eax,edi
640056f6:	je     0x640056fd
640056f8:	call   0x64013e16
640056fd:	cmp    DWORD PTR [ebp+0x18],ebx
64005700:	jne    0x64005740
64005702:	mov    ecx,DWORD PTR [edi+0x4]
64005705:	mov    edx,DWORD PTR [ecx+0x4]
64005708:	push   edx
64005709:	mov    ecx,edi
6400570b:	call   0x64006710
64005710:	mov    eax,DWORD PTR [edi+0x4]
64005713:	mov    DWORD PTR [eax+0x4],eax
64005716:	mov    eax,DWORD PTR [edi+0x4]
64005719:	mov    DWORD PTR [edi+0x8],0x0
64005720:	mov    DWORD PTR [eax],eax
64005722:	mov    eax,DWORD PTR [edi+0x4]
64005725:	mov    DWORD PTR [eax+0x8],eax
64005728:	mov    eax,DWORD PTR [edi+0x4]
6400572b:	mov    ecx,DWORD PTR [eax]
6400572d:	mov    eax,DWORD PTR [ebp+0x8]
64005730:	mov    DWORD PTR [eax+0x4],ecx
64005733:	mov    DWORD PTR [eax],edi
64005735:	pop    edi
64005736:	pop    esi
64005737:	pop    ebx
64005738:	mov    esp,ebp
6400573a:	pop    ebp
6400573b:	ret    0x14
6400573e:	mov    edi,edi
64005740:	mov    ebx,DWORD PTR [ebp+0xc]
64005743:	test   ebx,ebx
64005745:	je     0x6400574c
64005747:	cmp    ebx,DWORD PTR [ebp+0x14]
6400574a:	je     0x64005751
6400574c:	call   0x64013e16
64005751:	cmp    esi,DWORD PTR [ebp+0x18]
64005754:	je     0x640057be
64005756:	test   ebx,ebx
64005758:	mov    DWORD PTR [esp+0x14],esi
6400575c:	jne    0x64005763
6400575e:	call   0x64013e16
64005763:	cmp    BYTE PTR [esi+0x45],0x0
64005767:	je     0x64005770
64005769:	call   0x64013e16
6400576e:	jmp    0x640057aa
64005770:	mov    eax,DWORD PTR [esi+0x8]
64005773:	cmp    BYTE PTR [eax+0x45],0x0
64005777:	jne    0x6400578f
64005779:	mov    esi,eax
6400577b:	mov    eax,DWORD PTR [esi]
6400577d:	cmp    BYTE PTR [eax+0x45],0x0
64005781:	jne    0x640057aa
64005783:	mov    esi,eax
64005785:	mov    eax,DWORD PTR [esi]
64005787:	cmp    BYTE PTR [eax+0x45],0x0
6400578b:	je     0x64005783
6400578d:	jmp    0x640057aa
6400578f:	mov    eax,DWORD PTR [esi+0x4]
64005792:	cmp    BYTE PTR [eax+0x45],0x0
64005796:	jne    0x640057a8
64005798:	cmp    esi,DWORD PTR [eax+0x8]
6400579b:	jne    0x640057a8
6400579d:	mov    esi,eax
6400579f:	mov    eax,DWORD PTR [eax+0x4]
640057a2:	cmp    BYTE PTR [eax+0x45],0x0
640057a6:	je     0x64005798
640057a8:	mov    esi,eax
640057aa:	mov    edx,DWORD PTR [esp+0x14]
640057ae:	push   edx
640057af:	push   ebx
640057b0:	lea    eax,[esp+0x20]
640057b4:	push   eax
640057b5:	mov    ecx,edi
640057b7:	call   0x64005d30
640057bc:	jmp    0x64005740
640057be:	mov    eax,DWORD PTR [ebp+0x8]
640057c1:	pop    edi
640057c2:	mov    DWORD PTR [eax+0x4],esi
640057c5:	pop    esi
640057c6:	mov    DWORD PTR [eax],ebx
640057c8:	pop    ebx
640057c9:	mov    esp,ebp
640057cb:	pop    ebp
640057cc:	ret    0x14
640057cf:	int3   
640057d0:	mov    edx,DWORD PTR [esp+0x4]
640057d4:	mov    eax,DWORD PTR [edx+0x8]
640057d7:	push   esi
640057d8:	mov    esi,DWORD PTR [eax]
640057da:	mov    DWORD PTR [edx+0x8],esi
640057dd:	mov    esi,DWORD PTR [eax]
640057df:	cmp    BYTE PTR [esi+0x45],0x0
640057e3:	jne    0x640057e8
640057e5:	mov    DWORD PTR [esi+0x4],edx
640057e8:	mov    esi,DWORD PTR [edx+0x4]
640057eb:	mov    DWORD PTR [eax+0x4],esi
640057ee:	mov    ecx,DWORD PTR [ecx+0x4]
640057f1:	cmp    edx,DWORD PTR [ecx+0x4]
640057f4:	pop    esi
640057f5:	jne    0x64005802
640057f7:	mov    DWORD PTR [ecx+0x4],eax
640057fa:	mov    DWORD PTR [eax],edx
640057fc:	mov    DWORD PTR [edx+0x4],eax
640057ff:	ret    0x4
64005802:	mov    ecx,DWORD PTR [edx+0x4]
64005805:	cmp    edx,DWORD PTR [ecx]
64005807:	jne    0x64005813
64005809:	mov    DWORD PTR [ecx],eax
6400580b:	mov    DWORD PTR [eax],edx
6400580d:	mov    DWORD PTR [edx+0x4],eax
64005810:	ret    0x4
64005813:	mov    DWORD PTR [ecx+0x8],eax
64005816:	mov    DWORD PTR [eax],edx
64005818:	mov    DWORD PTR [edx+0x4],eax
6400581b:	ret    0x4
6400581e:	int3   
6400581f:	int3   
64005820:	mov    edx,DWORD PTR [esp+0x4]
64005824:	mov    eax,DWORD PTR [edx]
64005826:	push   esi
64005827:	mov    esi,DWORD PTR [eax+0x8]
6400582a:	mov    DWORD PTR [edx],esi
6400582c:	mov    esi,DWORD PTR [eax+0x8]
6400582f:	cmp    BYTE PTR [esi+0x45],0x0
64005833:	jne    0x64005838
64005835:	mov    DWORD PTR [esi+0x4],edx
64005838:	mov    esi,DWORD PTR [edx+0x4]
6400583b:	mov    DWORD PTR [eax+0x4],esi
6400583e:	mov    ecx,DWORD PTR [ecx+0x4]
64005841:	cmp    edx,DWORD PTR [ecx+0x4]
64005844:	pop    esi
64005845:	jne    0x64005853
64005847:	mov    DWORD PTR [ecx+0x4],eax
6400584a:	mov    DWORD PTR [eax+0x8],edx
6400584d:	mov    DWORD PTR [edx+0x4],eax
64005850:	ret    0x4
64005853:	mov    ecx,DWORD PTR [edx+0x4]
64005856:	cmp    edx,DWORD PTR [ecx+0x8]
64005859:	jne    0x64005867
6400585b:	mov    DWORD PTR [ecx+0x8],eax
6400585e:	mov    DWORD PTR [eax+0x8],edx
64005861:	mov    DWORD PTR [edx+0x4],eax
64005864:	ret    0x4
64005867:	mov    DWORD PTR [ecx],eax
64005869:	mov    DWORD PTR [eax+0x8],edx
6400586c:	mov    DWORD PTR [edx+0x4],eax
6400586f:	ret    0x4
64005872:	int3   
64005873:	int3   
64005874:	int3   
64005875:	int3   
64005876:	int3   
64005877:	int3   
64005878:	int3   
64005879:	int3   
6400587a:	int3   
6400587b:	int3   
6400587c:	int3   
6400587d:	int3   
6400587e:	int3   
6400587f:	int3   
64005880:	push   ebp
64005881:	mov    ebp,esp
64005883:	push   0xffffffff
64005885:	push   0x640231c1
6400588a:	mov    eax,fs:0x0
64005890:	push   eax
64005891:	sub    esp,0xc
64005894:	push   ebx
64005895:	push   esi
64005896:	push   edi
64005897:	mov    eax,ds:0x640521ac
6400589c:	xor    eax,ebp
6400589e:	push   eax
6400589f:	lea    eax,[ebp-0xc]
640058a2:	mov    fs:0x0,eax
640058a8:	mov    DWORD PTR [ebp-0x10],esp
640058ab:	push   0x48
640058ad:	call   0x64013875
640058b2:	mov    esi,eax
640058b4:	mov    DWORD PTR [ebp-0x4],0x0
640058bb:	add    esp,0x4
640058be:	mov    DWORD PTR [ebp-0x14],esi
640058c1:	mov    DWORD PTR [ebp-0x18],esi
640058c4:	test   esi,esi
640058c6:	mov    BYTE PTR [ebp-0x4],0x1
640058ca:	je     0x640058f3
640058cc:	mov    eax,DWORD PTR [ebp+0x8]
640058cf:	mov    ecx,DWORD PTR [ebp+0xc]
640058d2:	mov    edx,DWORD PTR [ebp+0x10]
640058d5:	mov    DWORD PTR [esi],eax
640058d7:	mov    eax,DWORD PTR [ebp+0x14]
640058da:	mov    DWORD PTR [esi+0x4],ecx
640058dd:	push   eax
640058de:	lea    ecx,[esi+0xc]
640058e1:	mov    DWORD PTR [esi+0x8],edx
640058e4:	call   0x64006610
640058e9:	mov    cl,BYTE PTR [ebp+0x18]
640058ec:	mov    BYTE PTR [esi+0x44],cl
640058ef:	mov    BYTE PTR [esi+0x45],0x0
640058f3:	mov    eax,esi
640058f5:	mov    ecx,DWORD PTR [ebp-0xc]
640058f8:	mov    DWORD PTR fs:0x0,ecx
640058ff:	pop    ecx
64005900:	pop    edi
64005901:	pop    esi
64005902:	pop    ebx
64005903:	mov    esp,ebp
64005905:	pop    ebp
64005906:	ret    0x14
64005909:	mov    edx,DWORD PTR [ebp-0x14]
6400590c:	push   edx
6400590d:	call   0x640135e4
64005912:	add    esp,0x4
64005915:	push   0x0
64005917:	push   0x0
64005919:	call   0x64013812
6400591e:	int3   
6400591f:	int3   
64005920:	push   ebp
64005921:	mov    ebp,esp
64005923:	push   0xffffffff
64005925:	push   0x64022fc0
6400592a:	mov    eax,fs:0x0
64005930:	push   eax
64005931:	sub    esp,0x18
64005934:	push   ebx
64005935:	push   esi
64005936:	push   edi
64005937:	mov    eax,ds:0x640521ac
6400593c:	xor    eax,ebp
6400593e:	push   eax
6400593f:	lea    eax,[ebp-0xc]
64005942:	mov    fs:0x0,eax
64005948:	mov    DWORD PTR [ebp-0x10],esp
6400594b:	mov    eax,DWORD PTR [ebp+0xc]
6400594e:	mov    edi,DWORD PTR [ebp+0x8]
64005951:	mov    esi,eax
64005953:	or     esi,0x7
64005956:	cmp    esi,0x7ffffffe
6400595c:	jbe    0x64005962
6400595e:	mov    esi,eax
64005960:	jmp    0x64005984
64005962:	mov    ebx,DWORD PTR [edi+0x18]
64005965:	mov    eax,0xaaaaaaab
6400596a:	mul    esi
6400596c:	mov    ecx,ebx
6400596e:	shr    ecx,1
64005970:	shr    edx,1
64005972:	cmp    edx,ecx
64005974:	jae    0x64005984
64005976:	mov    eax,0x7ffffffe
6400597b:	sub    eax,ecx
6400597d:	cmp    ebx,eax
6400597f:	ja     0x64005984
64005981:	lea    esi,[ecx+ebx*1]
64005984:	xor    ebx,ebx
64005986:	lea    ecx,[esi+0x1]
64005989:	cmp    ecx,ebx
6400598b:	mov    DWORD PTR [ebp-0x4],ebx
6400598e:	ja     0x640059a3
64005990:	xor    ecx,ecx
64005992:	lea    eax,[ecx+ecx*1]
64005995:	push   eax
64005996:	call   0x64013875
6400599b:	add    esp,0x4
6400599e:	mov    DWORD PTR [ebp+0xc],eax
640059a1:	jmp    0x640059f7
640059a3:	or     eax,0xffffffff
640059a6:	xor    edx,edx
640059a8:	div    ecx
640059aa:	cmp    eax,0x2
640059ad:	jae    0x64005992
640059af:	lea    ecx,[ebp-0x14]
640059b2:	push   ecx
640059b3:	lea    ecx,[ebp-0x24]
640059b6:	mov    DWORD PTR [ebp-0x14],ebx
640059b9:	call   0x640135fa
640059be:	push   0x6404413c
640059c3:	lea    edx,[ebp-0x24]
640059c6:	push   edx
640059c7:	mov    DWORD PTR [ebp-0x24],0x6402c2ac
640059ce:	call   0x64013812
640059d3:	mov    eax,DWORD PTR [ebp+0xc]
640059d6:	lea    ecx,[eax+0x1]
640059d9:	mov    DWORD PTR [ebp-0x10],esp
640059dc:	mov    DWORD PTR [ebp-0x18],eax
640059df:	mov    BYTE PTR [ebp-0x4],0x2
640059e3:	call   0x64006150
640059e8:	mov    DWORD PTR [ebp+0xc],eax
640059eb:	mov    eax,0x640059f1
640059f0:	ret    
640059f1:	mov    edi,DWORD PTR [ebp+0x8]
640059f4:	mov    esi,DWORD PTR [ebp-0x18]
640059f7:	mov    ebx,DWORD PTR [ebp+0x10]
640059fa:	test   ebx,ebx
640059fc:	jbe    0x64005a22
640059fe:	cmp    DWORD PTR [edi+0x18],0x8
64005a02:	jb     0x64005a09
64005a04:	mov    eax,DWORD PTR [edi+0x4]
64005a07:	jmp    0x64005a0c
64005a09:	lea    eax,[edi+0x4]
64005a0c:	lea    ecx,[ebx+ebx*1]
64005a0f:	push   ecx
64005a10:	push   eax
64005a11:	mov    eax,DWORD PTR [ebp+0xc]
64005a14:	lea    edx,[esi+esi*1+0x2]
64005a18:	push   edx
64005a19:	push   eax
64005a1a:	call   0x6401373c
64005a1f:	add    esp,0x10
64005a22:	cmp    DWORD PTR [edi+0x18],0x8
64005a26:	jb     0x64005a34
64005a28:	mov    ecx,DWORD PTR [edi+0x4]
64005a2b:	push   ecx
64005a2c:	call   0x640135e4
64005a31:	add    esp,0x4
64005a34:	cmp    esi,0x8
64005a37:	mov    ecx,DWORD PTR [ebp+0xc]
64005a3a:	lea    eax,[edi+0x4]
64005a3d:	mov    WORD PTR [eax],0x0
64005a42:	mov    DWORD PTR [eax],ecx
64005a44:	mov    DWORD PTR [edi+0x18],esi
64005a47:	mov    DWORD PTR [edi+0x14],ebx
64005a4a:	jb     0x64005a4e
64005a4c:	mov    eax,ecx
64005a4e:	mov    WORD PTR [eax+ebx*2],0x0
64005a54:	mov    ecx,DWORD PTR [ebp-0xc]
64005a57:	mov    DWORD PTR fs:0x0,ecx
64005a5e:	pop    ecx
64005a5f:	pop    edi
64005a60:	pop    esi
64005a61:	pop    ebx
64005a62:	mov    esp,ebp
64005a64:	pop    ebp
64005a65:	ret    0xc
64005a68:	mov    esi,DWORD PTR [ebp+0x8]
64005a6b:	cmp    DWORD PTR [esi+0x18],0x8
64005a6f:	jb     0x64005a7d
64005a71:	mov    edx,DWORD PTR [esi+0x4]
64005a74:	push   edx
64005a75:	call   0x640135e4
64005a7a:	add    esp,0x4
64005a7d:	xor    eax,eax
64005a7f:	push   eax
64005a80:	mov    DWORD PTR [esi+0x18],0x7
64005a87:	mov    DWORD PTR [esi+0x14],eax
64005a8a:	push   eax
64005a8b:	mov    WORD PTR [esi+0x4],ax
64005a8f:	call   0x64013812
64005a94:	int3   
64005a95:	int3   
64005a96:	int3   
64005a97:	int3   
64005a98:	int3   
64005a99:	int3   
64005a9a:	int3   
64005a9b:	int3   
64005a9c:	int3   
64005a9d:	int3   
64005a9e:	int3   
64005a9f:	int3   
64005aa0:	mov    eax,ds:0x640544e0
64005aa5:	push   ebx
64005aa6:	mov    ebx,DWORD PTR [esp+0xc]
64005aaa:	test   ebx,ebx
64005aac:	push   ebp
64005aad:	mov    ebp,DWORD PTR [esp+0xc]
64005ab1:	push   esi
64005ab2:	push   edi
64005ab3:	mov    edi,DWORD PTR [eax]
64005ab5:	je     0x64005abf
64005ab7:	cmp    ebx,0x640544dc
64005abd:	je     0x64005ac4
64005abf:	call   0x64013e16
64005ac4:	mov    esi,DWORD PTR [esp+0x1c]
64005ac8:	cmp    esi,edi
64005aca:	jne    0x64005b40
64005acc:	mov    eax,DWORD PTR [esp+0x20]
64005ad0:	test   eax,eax
64005ad2:	mov    edi,DWORD PTR ds:0x640544e0
64005ad8:	je     0x64005ae1
64005ada:	cmp    eax,0x640544dc
64005adf:	je     0x64005ae6
64005ae1:	call   0x64013e16
64005ae6:	cmp    DWORD PTR [esp+0x24],edi
64005aea:	jne    0x64005b40
64005aec:	mov    ecx,DWORD PTR ds:0x640544e0
64005af2:	mov    edx,DWORD PTR [ecx+0x4]
64005af5:	push   edx
64005af6:	mov    ecx,0x640544dc
64005afb:	call   0x640067d0
64005b00:	mov    eax,ds:0x640544e0
64005b05:	mov    DWORD PTR [eax+0x4],eax
64005b08:	mov    eax,ds:0x640544e0
64005b0d:	mov    DWORD PTR ds:0x640544e4,0x0
64005b17:	mov    DWORD PTR [eax],eax
64005b19:	mov    eax,ds:0x640544e0
64005b1e:	mov    DWORD PTR [eax+0x8],eax
64005b21:	mov    eax,ds:0x640544e0
64005b26:	mov    ecx,DWORD PTR [eax]
64005b28:	mov    DWORD PTR [ebp+0x4],ecx
64005b2b:	mov    DWORD PTR [ebp+0x0],0x640544dc
64005b32:	mov    eax,ebp
64005b34:	pop    edi
64005b35:	pop    esi
64005b36:	pop    ebp
64005b37:	pop    ebx
64005b38:	ret    0x14
64005b3b:	jmp    0x64005b40
64005b3d:	lea    ecx,[ecx+0x0]
64005b40:	test   ebx,ebx
64005b42:	je     0x64005b4a
64005b44:	cmp    ebx,DWORD PTR [esp+0x20]
64005b48:	je     0x64005b4f
64005b4a:	call   0x64013e16
64005b4f:	cmp    esi,DWORD PTR [esp+0x24]
64005b53:	je     0x64005bd4
64005b55:	test   ebx,ebx
64005b57:	mov    edi,esi
64005b59:	jne    0x64005b60
64005b5b:	call   0x64013e16
64005b60:	cmp    BYTE PTR [esi+0x45],0x0
64005b64:	je     0x64005b79
64005b66:	call   0x64013e16
64005b6b:	push   edi
64005b6c:	push   ebx
64005b6d:	lea    edx,[esp+0x20]
64005b71:	push   edx
64005b72:	call   0x640061b0
64005b77:	jmp    0x64005b40
64005b79:	mov    eax,DWORD PTR [esi+0x8]
64005b7c:	cmp    BYTE PTR [eax+0x45],0x0
64005b80:	jne    0x64005ba8
64005b82:	mov    esi,eax
64005b84:	mov    eax,DWORD PTR [esi]
64005b86:	cmp    BYTE PTR [eax+0x45],0x0
64005b8a:	jne    0x64005bc3
64005b8c:	lea    esp,[esp+0x0]
64005b90:	mov    esi,eax
64005b92:	mov    eax,DWORD PTR [esi]
64005b94:	cmp    BYTE PTR [eax+0x45],0x0
64005b98:	je     0x64005b90
64005b9a:	push   edi
64005b9b:	push   ebx
64005b9c:	lea    edx,[esp+0x20]
64005ba0:	push   edx
64005ba1:	call   0x640061b0
64005ba6:	jmp    0x64005b40
64005ba8:	mov    eax,DWORD PTR [esi+0x4]
64005bab:	cmp    BYTE PTR [eax+0x45],0x0
64005baf:	jne    0x64005bc1
64005bb1:	cmp    esi,DWORD PTR [eax+0x8]
64005bb4:	jne    0x64005bc1
64005bb6:	mov    esi,eax
64005bb8:	mov    eax,DWORD PTR [eax+0x4]
64005bbb:	cmp    BYTE PTR [eax+0x45],0x0
64005bbf:	je     0x64005bb1
64005bc1:	mov    esi,eax
64005bc3:	push   edi
64005bc4:	push   ebx
64005bc5:	lea    edx,[esp+0x20]
64005bc9:	push   edx
64005bca:	call   0x640061b0
64005bcf:	jmp    0x64005b40
64005bd4:	pop    edi
64005bd5:	mov    DWORD PTR [ebp+0x4],esi
64005bd8:	pop    esi
64005bd9:	mov    DWORD PTR [ebp+0x0],ebx
64005bdc:	mov    eax,ebp
64005bde:	pop    ebp
64005bdf:	pop    ebx
64005be0:	ret    0x14
64005be3:	int3   
64005be4:	int3   
64005be5:	int3   
64005be6:	int3   
64005be7:	int3   
64005be8:	int3   
64005be9:	int3   
64005bea:	int3   
64005beb:	int3   
64005bec:	int3   
64005bed:	int3   
64005bee:	int3   
64005bef:	int3   
64005bf0:	mov    eax,DWORD PTR [ecx+0x8]
64005bf3:	mov    edx,DWORD PTR [eax]
64005bf5:	mov    DWORD PTR [ecx+0x8],edx
64005bf8:	mov    edx,DWORD PTR [eax]
64005bfa:	cmp    BYTE PTR [edx+0x45],0x0
64005bfe:	jne    0x64005c03
64005c00:	mov    DWORD PTR [edx+0x4],ecx
64005c03:	mov    edx,DWORD PTR [ecx+0x4]
64005c06:	mov    DWORD PTR [eax+0x4],edx
64005c09:	mov    edx,DWORD PTR [esp+0x4]
64005c0d:	mov    edx,DWORD PTR [edx+0x4]
64005c10:	cmp    ecx,DWORD PTR [edx+0x4]
64005c13:	jne    0x64005c20
64005c15:	mov    DWORD PTR [edx+0x4],eax
64005c18:	mov    DWORD PTR [eax],ecx
64005c1a:	mov    DWORD PTR [ecx+0x4],eax
64005c1d:	ret    0x4
64005c20:	mov    edx,DWORD PTR [ecx+0x4]
64005c23:	cmp    ecx,DWORD PTR [edx]
64005c25:	jne    0x64005c31
64005c27:	mov    DWORD PTR [edx],eax
64005c29:	mov    DWORD PTR [eax],ecx
64005c2b:	mov    DWORD PTR [ecx+0x4],eax
64005c2e:	ret    0x4
64005c31:	mov    DWORD PTR [edx+0x8],eax
64005c34:	mov    DWORD PTR [eax],ecx
64005c36:	mov    DWORD PTR [ecx+0x4],eax
64005c39:	ret    0x4
64005c3c:	int3   
64005c3d:	int3   
64005c3e:	int3   
64005c3f:	int3   
64005c40:	mov    eax,DWORD PTR [ecx]
64005c42:	mov    edx,DWORD PTR [eax+0x8]
64005c45:	mov    DWORD PTR [ecx],edx
64005c47:	mov    edx,DWORD PTR [eax+0x8]
64005c4a:	cmp    BYTE PTR [edx+0x45],0x0
64005c4e:	jne    0x64005c53
64005c50:	mov    DWORD PTR [edx+0x4],ecx
64005c53:	mov    edx,DWORD PTR [ecx+0x4]
64005c56:	mov    DWORD PTR [eax+0x4],edx
64005c59:	mov    edx,DWORD PTR [esp+0x4]
64005c5d:	mov    edx,DWORD PTR [edx+0x4]
64005c60:	cmp    ecx,DWORD PTR [edx+0x4]
64005c63:	jne    0x64005c71
64005c65:	mov    DWORD PTR [edx+0x4],eax
64005c68:	mov    DWORD PTR [eax+0x8],ecx
64005c6b:	mov    DWORD PTR [ecx+0x4],eax
64005c6e:	ret    0x4
64005c71:	mov    edx,DWORD PTR [ecx+0x4]
64005c74:	cmp    ecx,DWORD PTR [edx+0x8]
64005c77:	jne    0x64005c85
64005c79:	mov    DWORD PTR [edx+0x8],eax
64005c7c:	mov    DWORD PTR [eax+0x8],ecx
64005c7f:	mov    DWORD PTR [ecx+0x4],eax
64005c82:	ret    0x4
64005c85:	mov    DWORD PTR [edx],eax
64005c87:	mov    DWORD PTR [eax+0x8],ecx
64005c8a:	mov    DWORD PTR [ecx+0x4],eax
64005c8d:	ret    0x4
64005c90:	push   ebp
64005c91:	mov    ebp,esp
64005c93:	push   0xffffffff
64005c95:	push   0x64023191
64005c9a:	mov    eax,fs:0x0
64005ca0:	push   eax
64005ca1:	sub    esp,0xc
64005ca4:	push   ebx
64005ca5:	push   esi
64005ca6:	push   edi
64005ca7:	mov    eax,ds:0x640521ac
64005cac:	xor    eax,ebp
64005cae:	push   eax
64005caf:	lea    eax,[ebp-0xc]
64005cb2:	mov    fs:0x0,eax
64005cb8:	mov    DWORD PTR [ebp-0x10],esp
64005cbb:	push   0x48
64005cbd:	call   0x64013875
64005cc2:	mov    esi,eax
64005cc4:	mov    DWORD PTR [ebp-0x4],0x0
64005ccb:	add    esp,0x4
64005cce:	mov    DWORD PTR [ebp-0x14],esi
64005cd1:	mov    DWORD PTR [ebp-0x18],esi
64005cd4:	test   esi,esi
64005cd6:	mov    BYTE PTR [ebp-0x4],0x1
64005cda:	je     0x64005d01
64005cdc:	mov    eax,DWORD PTR [ebp+0x8]
64005cdf:	mov    ecx,DWORD PTR [ebp+0xc]
64005ce2:	mov    edx,DWORD PTR [ebp+0x10]
64005ce5:	mov    ebx,DWORD PTR [ebp+0x14]
64005ce8:	mov    DWORD PTR [esi],eax
64005cea:	lea    eax,[esi+0xc]
64005ced:	push   eax
64005cee:	mov    DWORD PTR [esi+0x4],ecx
64005cf1:	mov    DWORD PTR [esi+0x8],edx
64005cf4:	call   0x64006690
64005cf9:	xor    al,al
64005cfb:	mov    BYTE PTR [esi+0x44],al
64005cfe:	mov    BYTE PTR [esi+0x45],al
64005d01:	mov    eax,esi
64005d03:	mov    ecx,DWORD PTR [ebp-0xc]
64005d06:	mov    DWORD PTR fs:0x0,ecx
64005d0d:	pop    ecx
64005d0e:	pop    edi
64005d0f:	pop    esi
64005d10:	pop    ebx
64005d11:	mov    esp,ebp
64005d13:	pop    ebp
64005d14:	ret    0x10
64005d17:	mov    ecx,DWORD PTR [ebp-0x14]
64005d1a:	push   ecx
64005d1b:	call   0x640135e4
64005d20:	add    esp,0x4
64005d23:	push   0x0
64005d25:	push   0x0
64005d27:	call   0x64013812
64005d2c:	int3   
64005d2d:	int3   
64005d2e:	int3   
64005d2f:	int3   
64005d30:	push   ebp
64005d31:	mov    ebp,esp
64005d33:	and    esp,0xfffffff8
64005d36:	push   0xffffffff
64005d38:	push   0x64023518
64005d3d:	mov    eax,fs:0x0
64005d43:	push   eax
64005d44:	sub    esp,0x50
64005d47:	push   ebx
64005d48:	push   esi
64005d49:	push   edi
64005d4a:	mov    eax,ds:0x640521ac
64005d4f:	xor    eax,esp
64005d51:	push   eax
64005d52:	lea    eax,[esp+0x60]
64005d56:	mov    fs:0x0,eax
64005d5c:	mov    DWORD PTR [esp+0x14],ecx
64005d60:	mov    edi,DWORD PTR [ebp+0x10]
64005d63:	cmp    BYTE PTR [edi+0x45],0x0
64005d67:	je     0x64005db5
64005d69:	push   0x1b
64005d6b:	xor    esi,esi
64005d6d:	push   0x64041d20
64005d72:	lea    ecx,[esp+0x20]
64005d76:	mov    DWORD PTR [esp+0x38],0xf
64005d7e:	mov    DWORD PTR [esp+0x34],esi
64005d82:	mov    BYTE PTR [esp+0x24],0x0
64005d87:	call   0x64003450
64005d8c:	lea    eax,[esp+0x18]
64005d90:	push   eax
64005d91:	lea    ecx,[esp+0x38]
64005d95:	mov    DWORD PTR [esp+0x6c],esi
64005d99:	call   0x64001350
64005d9e:	push   0x640440c8
64005da3:	lea    ecx,[esp+0x38]
64005da7:	push   ecx
64005da8:	mov    DWORD PTR [esp+0x3c],0x6402c2f4
64005db0:	call   0x64013812
64005db5:	lea    ecx,[ebp+0xc]
64005db8:	call   0x640060e0
64005dbd:	mov    ecx,DWORD PTR [edi]
64005dbf:	cmp    BYTE PTR [ecx+0x45],0x0
64005dc3:	je     0x64005dca
64005dc5:	mov    ebx,DWORD PTR [edi+0x8]
64005dc8:	jmp    0x64005de1
64005dca:	mov    edx,DWORD PTR [edi+0x8]
64005dcd:	cmp    BYTE PTR [edx+0x45],0x0
64005dd1:	je     0x64005dd7
64005dd3:	mov    ebx,ecx
64005dd5:	jmp    0x64005de1
64005dd7:	mov    eax,DWORD PTR [ebp+0x10]
64005dda:	cmp    eax,edi
64005ddc:	mov    ebx,DWORD PTR [eax+0x8]
64005ddf:	jne    0x64005e5d
64005de1:	cmp    BYTE PTR [ebx+0x45],0x0
64005de5:	mov    esi,DWORD PTR [edi+0x4]
64005de8:	jne    0x64005ded
64005dea:	mov    DWORD PTR [ebx+0x4],esi
64005ded:	mov    ecx,DWORD PTR [esp+0x14]
64005df1:	mov    eax,DWORD PTR [ecx+0x4]
64005df4:	cmp    DWORD PTR [eax+0x4],edi
64005df7:	jne    0x64005dfe
64005df9:	mov    DWORD PTR [eax+0x4],ebx
64005dfc:	jmp    0x64005e09
64005dfe:	cmp    DWORD PTR [esi],edi
64005e00:	jne    0x64005e06
64005e02:	mov    DWORD PTR [esi],ebx
64005e04:	jmp    0x64005e09
64005e06:	mov    DWORD PTR [esi+0x8],ebx
64005e09:	mov    eax,DWORD PTR [ecx+0x4]
64005e0c:	cmp    DWORD PTR [eax],edi
64005e0e:	jne    0x64005e2c
64005e10:	cmp    BYTE PTR [ebx+0x45],0x0
64005e14:	je     0x64005e1a
64005e16:	mov    eax,esi
64005e18:	jmp    0x64005e27
64005e1a:	push   ebx
64005e1b:	call   0x640067b0
64005e20:	mov    ecx,DWORD PTR [esp+0x18]
64005e24:	add    esp,0x4
64005e27:	mov    edx,DWORD PTR [ecx+0x4]
64005e2a:	mov    DWORD PTR [edx],eax
64005e2c:	mov    eax,DWORD PTR [ecx+0x4]
64005e2f:	cmp    DWORD PTR [eax+0x8],edi
64005e32:	jne    0x64005ebc
64005e38:	cmp    BYTE PTR [ebx+0x45],0x0
64005e3c:	je     0x64005e48
64005e3e:	mov    edx,DWORD PTR [ecx+0x4]
64005e41:	mov    eax,esi
64005e43:	mov    DWORD PTR [edx+0x8],eax
64005e46:	jmp    0x64005ebc
64005e48:	push   ebx
64005e49:	call   0x64006790
64005e4e:	mov    ecx,DWORD PTR [esp+0x18]
64005e52:	mov    edx,DWORD PTR [ecx+0x4]
64005e55:	add    esp,0x4
64005e58:	mov    DWORD PTR [edx+0x8],eax
64005e5b:	jmp    0x64005ebc
64005e5d:	mov    DWORD PTR [ecx+0x4],eax
64005e60:	mov    ecx,DWORD PTR [edi]
64005e62:	mov    DWORD PTR [eax],ecx
64005e64:	cmp    eax,DWORD PTR [edi+0x8]
64005e67:	jne    0x64005e6d
64005e69:	mov    esi,eax
64005e6b:	jmp    0x64005e87
64005e6d:	cmp    BYTE PTR [ebx+0x45],0x0
64005e71:	mov    esi,DWORD PTR [eax+0x4]
64005e74:	jne    0x64005e79
64005e76:	mov    DWORD PTR [ebx+0x4],esi
64005e79:	mov    DWORD PTR [esi],ebx
64005e7b:	mov    edx,DWORD PTR [edi+0x8]
64005e7e:	mov    DWORD PTR [eax+0x8],edx
64005e81:	mov    ecx,DWORD PTR [edi+0x8]
64005e84:	mov    DWORD PTR [ecx+0x4],eax
64005e87:	mov    edx,DWORD PTR [esp+0x14]
64005e8b:	mov    ecx,DWORD PTR [edx+0x4]
64005e8e:	cmp    DWORD PTR [ecx+0x4],edi
64005e91:	jne    0x64005e98
64005e93:	mov    DWORD PTR [ecx+0x4],eax
64005e96:	jmp    0x64005ea6
64005e98:	mov    ecx,DWORD PTR [edi+0x4]
64005e9b:	cmp    DWORD PTR [ecx],edi
64005e9d:	jne    0x64005ea3
64005e9f:	mov    DWORD PTR [ecx],eax
64005ea1:	jmp    0x64005ea6
64005ea3:	mov    DWORD PTR [ecx+0x8],eax
64005ea6:	mov    ecx,DWORD PTR [edi+0x4]
64005ea9:	mov    DWORD PTR [eax+0x4],ecx
64005eac:	mov    cl,BYTE PTR [eax+0x44]
64005eaf:	mov    dl,BYTE PTR [edi+0x44]
64005eb2:	mov    BYTE PTR [eax+0x44],dl
64005eb5:	mov    BYTE PTR [edi+0x44],cl
64005eb8:	mov    ecx,DWORD PTR [esp+0x14]
64005ebc:	cmp    BYTE PTR [edi+0x44],0x1
64005ec0:	jne    0x64005fd1
64005ec6:	mov    eax,DWORD PTR [ecx+0x4]
64005ec9:	cmp    ebx,DWORD PTR [eax+0x4]
64005ecc:	je     0x64005fcd
64005ed2:	cmp    BYTE PTR [ebx+0x44],0x1
64005ed6:	jne    0x64005fcd
64005edc:	mov    eax,DWORD PTR [esi]
64005ede:	cmp    ebx,eax
64005ee0:	jne    0x64005f50
64005ee2:	mov    eax,DWORD PTR [esi+0x8]
64005ee5:	cmp    BYTE PTR [eax+0x44],0x0
64005ee9:	jne    0x64005f00
64005eeb:	mov    BYTE PTR [eax+0x44],0x1
64005eef:	push   esi
64005ef0:	mov    BYTE PTR [esi+0x44],0x0
64005ef4:	call   0x640057d0
64005ef9:	mov    eax,DWORD PTR [esi+0x8]
64005efc:	mov    ecx,DWORD PTR [esp+0x14]
64005f00:	cmp    BYTE PTR [eax+0x45],0x0
64005f04:	jne    0x64005f85
64005f06:	mov    edx,DWORD PTR [eax]
64005f08:	cmp    BYTE PTR [edx+0x44],0x1
64005f0c:	jne    0x64005f17
64005f0e:	mov    edx,DWORD PTR [eax+0x8]
64005f11:	cmp    BYTE PTR [edx+0x44],0x1
64005f15:	je     0x64005f81
64005f17:	mov    edx,DWORD PTR [eax+0x8]
64005f1a:	cmp    BYTE PTR [edx+0x44],0x1
64005f1e:	jne    0x64005f37
64005f20:	mov    edx,DWORD PTR [eax]
64005f22:	mov    BYTE PTR [edx+0x44],0x1
64005f26:	push   eax
64005f27:	mov    BYTE PTR [eax+0x44],0x0
64005f2b:	call   0x64005820
64005f30:	mov    eax,DWORD PTR [esi+0x8]
64005f33:	mov    ecx,DWORD PTR [esp+0x14]
64005f37:	mov    dl,BYTE PTR [esi+0x44]
64005f3a:	mov    BYTE PTR [eax+0x44],dl
64005f3d:	mov    BYTE PTR [esi+0x44],0x1
64005f41:	mov    eax,DWORD PTR [eax+0x8]
64005f44:	push   esi
64005f45:	mov    BYTE PTR [eax+0x44],0x1
64005f49:	call   0x640057d0
64005f4e:	jmp    0x64005fcd
64005f50:	cmp    BYTE PTR [eax+0x44],0x0
64005f54:	jne    0x64005f6a
64005f56:	mov    BYTE PTR [eax+0x44],0x1
64005f5a:	push   esi
64005f5b:	mov    BYTE PTR [esi+0x44],0x0
64005f5f:	call   0x64005820
64005f64:	mov    eax,DWORD PTR [esi]
64005f66:	mov    ecx,DWORD PTR [esp+0x14]
64005f6a:	cmp    BYTE PTR [eax+0x45],0x0
64005f6e:	jne    0x64005f85
64005f70:	mov    edx,DWORD PTR [eax+0x8]
64005f73:	cmp    BYTE PTR [edx+0x44],0x1
64005f77:	jne    0x64005f98
64005f79:	mov    edx,DWORD PTR [eax]
64005f7b:	cmp    BYTE PTR [edx+0x44],0x1
64005f7f:	jne    0x64005f98
64005f81:	mov    BYTE PTR [eax+0x44],0x0
64005f85:	mov    eax,DWORD PTR [ecx+0x4]
64005f88:	mov    ebx,esi
64005f8a:	cmp    ebx,DWORD PTR [eax+0x4]
64005f8d:	mov    esi,DWORD PTR [esi+0x4]
64005f90:	jne    0x64005ed2
64005f96:	jmp    0x64005fcd
64005f98:	mov    edx,DWORD PTR [eax]
64005f9a:	cmp    BYTE PTR [edx+0x44],0x1
64005f9e:	jne    0x64005fb7
64005fa0:	mov    edx,DWORD PTR [eax+0x8]
64005fa3:	mov    BYTE PTR [edx+0x44],0x1
64005fa7:	push   eax
64005fa8:	mov    BYTE PTR [eax+0x44],0x0
64005fac:	call   0x640057d0
64005fb1:	mov    eax,DWORD PTR [esi]
64005fb3:	mov    ecx,DWORD PTR [esp+0x14]
64005fb7:	mov    dl,BYTE PTR [esi+0x44]
64005fba:	mov    BYTE PTR [eax+0x44],dl
64005fbd:	mov    BYTE PTR [esi+0x44],0x1
64005fc1:	mov    eax,DWORD PTR [eax]
64005fc3:	push   esi
64005fc4:	mov    BYTE PTR [eax+0x44],0x1
64005fc8:	call   0x64005820
64005fcd:	mov    BYTE PTR [ebx+0x44],0x1
64005fd1:	cmp    DWORD PTR [edi+0x40],0x10
64005fd5:	jb     0x64005fe3
64005fd7:	mov    ecx,DWORD PTR [edi+0x2c]
64005fda:	push   ecx
64005fdb:	call   0x640135e4
64005fe0:	add    esp,0x4
64005fe3:	xor    esi,esi
64005fe5:	mov    ebx,0xf
64005fea:	mov    DWORD PTR [edi+0x40],ebx
64005fed:	mov    DWORD PTR [edi+0x3c],esi
64005ff0:	mov    BYTE PTR [edi+0x2c],0x0
64005ff4:	cmp    DWORD PTR [edi+0x24],0x10
64005ff8:	jb     0x64006006
64005ffa:	mov    edx,DWORD PTR [edi+0x10]
64005ffd:	push   edx
64005ffe:	call   0x640135e4
64006003:	add    esp,0x4
64006006:	mov    DWORD PTR [edi+0x24],ebx
64006009:	mov    DWORD PTR [edi+0x20],esi
6400600c:	push   edi
6400600d:	mov    BYTE PTR [edi+0x10],0x0
64006011:	call   0x640135e4
64006016:	mov    ecx,DWORD PTR [esp+0x18]
6400601a:	mov    eax,DWORD PTR [ecx+0x8]
6400601d:	add    esp,0x4
64006020:	cmp    eax,esi
64006022:	jbe    0x6400602a
64006024:	add    eax,0xffffffff
64006027:	mov    DWORD PTR [ecx+0x8],eax
6400602a:	mov    eax,DWORD PTR [ebp+0x8]
6400602d:	mov    ecx,DWORD PTR [ebp+0xc]
64006030:	mov    edx,DWORD PTR [ebp+0x10]
64006033:	mov    DWORD PTR [eax],ecx
64006035:	mov    DWORD PTR [eax+0x4],edx
64006038:	mov    ecx,DWORD PTR [esp+0x60]
6400603c:	mov    DWORD PTR fs:0x0,ecx
64006043:	pop    ecx
64006044:	pop    edi
64006045:	pop    esi
64006046:	pop    ebx
64006047:	mov    esp,ebp
64006049:	pop    ebp
6400604a:	ret    0xc
6400604d:	int3   
6400604e:	int3   
6400604f:	int3   
64006050:	push   esi
64006051:	mov    esi,ecx
64006053:	cmp    DWORD PTR [esi],0x0
64006056:	jne    0x6400605d
64006058:	call   0x64013e16
6400605d:	mov    eax,DWORD PTR [esi+0x4]
64006060:	cmp    BYTE PTR [eax+0x45],0x0
64006064:	je     0x64006078
64006066:	mov    eax,DWORD PTR [eax+0x8]
64006069:	mov    DWORD PTR [esi+0x4],eax
6400606c:	cmp    BYTE PTR [eax+0x45],0x0
64006070:	je     0x640060d7
64006072:	pop    esi
64006073:	jmp    0x64013e16
64006078:	mov    ecx,DWORD PTR [eax]
6400607a:	cmp    BYTE PTR [ecx+0x45],0x0
6400607e:	jne    0x640060a0
64006080:	mov    eax,DWORD PTR [ecx+0x8]
64006083:	cmp    BYTE PTR [eax+0x45],0x0
64006087:	jne    0x6400609b
64006089:	lea    esp,[esp+0x0]
64006090:	mov    ecx,eax
64006092:	mov    eax,DWORD PTR [ecx+0x8]
64006095:	cmp    BYTE PTR [eax+0x45],0x0
64006099:	je     0x64006090
6400609b:	mov    DWORD PTR [esi+0x4],ecx
6400609e:	pop    esi
6400609f:	ret    
640060a0:	mov    eax,DWORD PTR [eax+0x4]
640060a3:	cmp    BYTE PTR [eax+0x45],0x0
640060a7:	jne    0x640060c5
640060a9:	lea    esp,[esp+0x0]
640060b0:	mov    ecx,DWORD PTR [esi+0x4]
640060b3:	cmp    ecx,DWORD PTR [eax]
640060b5:	jne    0x640060c5
640060b7:	mov    DWORD PTR [esi+0x4],eax
640060ba:	mov    edx,eax
640060bc:	mov    eax,DWORD PTR [edx+0x4]
640060bf:	cmp    BYTE PTR [eax+0x45],0x0
640060c3:	je     0x640060b0
640060c5:	mov    ecx,DWORD PTR [esi+0x4]
640060c8:	cmp    BYTE PTR [ecx+0x45],0x0
640060cc:	je     0x640060d4
640060ce:	pop    esi
640060cf:	jmp    0x64013e16
640060d4:	mov    DWORD PTR [esi+0x4],eax
640060d7:	pop    esi
640060d8:	ret    
640060d9:	int3   
640060da:	int3   
640060db:	int3   
640060dc:	int3   
640060dd:	int3   
640060de:	int3   
640060df:	int3   
640060e0:	push   esi
640060e1:	mov    esi,ecx
640060e3:	cmp    DWORD PTR [esi],0x0
640060e6:	jne    0x640060ed
640060e8:	call   0x64013e16
640060ed:	mov    eax,DWORD PTR [esi+0x4]
640060f0:	cmp    BYTE PTR [eax+0x45],0x0
640060f4:	je     0x640060fc
640060f6:	pop    esi
640060f7:	jmp    0x64013e16
640060fc:	mov    ecx,DWORD PTR [eax+0x8]
640060ff:	cmp    BYTE PTR [ecx+0x45],0x0
64006103:	jne    0x6400611f
64006105:	mov    eax,DWORD PTR [ecx]
64006107:	cmp    BYTE PTR [eax+0x45],0x0
6400610b:	jne    0x6400611a
6400610d:	lea    ecx,[ecx+0x0]
64006110:	mov    ecx,eax
64006112:	mov    eax,DWORD PTR [ecx]
64006114:	cmp    BYTE PTR [eax+0x45],0x0
64006118:	je     0x64006110
6400611a:	mov    DWORD PTR [esi+0x4],ecx
6400611d:	pop    esi
6400611e:	ret    
6400611f:	mov    eax,DWORD PTR [eax+0x4]
64006122:	cmp    BYTE PTR [eax+0x45],0x0
64006126:	jne    0x6400613e
64006128:	mov    ecx,DWORD PTR [esi+0x4]
6400612b:	cmp    ecx,DWORD PTR [eax+0x8]
6400612e:	jne    0x6400613e
64006130:	mov    DWORD PTR [esi+0x4],eax
64006133:	mov    edx,eax
64006135:	mov    eax,DWORD PTR [edx+0x4]
64006138:	cmp    BYTE PTR [eax+0x45],0x0
6400613c:	je     0x64006128
6400613e:	mov    DWORD PTR [esi+0x4],eax
64006141:	pop    esi
64006142:	ret    
64006143:	int3   
64006144:	int3   
64006145:	int3   
64006146:	int3   
64006147:	int3   
64006148:	int3   
64006149:	int3   
6400614a:	int3   
6400614b:	int3   
6400614c:	int3   
6400614d:	int3   
6400614e:	int3   
6400614f:	int3   
64006150:	sub    esp,0x10
64006153:	test   ecx,ecx
64006155:	ja     0x64006169
64006157:	xor    ecx,ecx
64006159:	lea    edx,[ecx+ecx*1]
6400615c:	push   edx
6400615d:	call   0x64013875
64006162:	add    esp,0x4
64006165:	add    esp,0x10
64006168:	ret    
64006169:	or     eax,0xffffffff
6400616c:	xor    edx,edx
6400616e:	div    ecx
64006170:	cmp    eax,0x2
64006173:	jae    0x64006159
64006175:	lea    eax,[esp]
64006178:	push   eax
64006179:	lea    ecx,[esp+0x8]
6400617d:	mov    DWORD PTR [esp+0x4],0x0
64006185:	call   0x640135fa
6400618a:	push   0x6404413c
6400618f:	lea    ecx,[esp+0x8]
64006193:	push   ecx
64006194:	mov    DWORD PTR [esp+0xc],0x6402c2ac
6400619c:	call   0x64013812
640061a1:	int3   
640061a2:	int3   
640061a3:	int3   
640061a4:	int3   
640061a5:	int3   
640061a6:	int3   
640061a7:	int3   
640061a8:	int3   
640061a9:	int3   
640061aa:	int3   
640061ab:	int3   
640061ac:	int3   
640061ad:	int3   
640061ae:	int3   
640061af:	int3   
640061b0:	push   0xffffffff
640061b2:	push   0x640234e8
640061b7:	mov    eax,fs:0x0
640061bd:	push   eax
640061be:	sub    esp,0x48
640061c1:	push   ebx
640061c2:	push   ebp
640061c3:	push   esi
640061c4:	push   edi
640061c5:	mov    eax,ds:0x640521ac
640061ca:	xor    eax,esp
640061cc:	push   eax
640061cd:	lea    eax,[esp+0x5c]
640061d1:	mov    fs:0x0,eax
640061d7:	mov    eax,DWORD PTR [esp+0x74]
640061db:	cmp    BYTE PTR [eax+0x45],0x0
640061df:	je     0x6400622d
640061e1:	push   0x1b
640061e3:	xor    esi,esi
640061e5:	push   0x64041d20
640061ea:	lea    ecx,[esp+0x1c]
640061ee:	mov    DWORD PTR [esp+0x34],0xf
640061f6:	mov    DWORD PTR [esp+0x30],esi
640061fa:	mov    BYTE PTR [esp+0x20],0x0
640061ff:	call   0x64003450
64006204:	lea    eax,[esp+0x14]
64006208:	push   eax
64006209:	lea    ecx,[esp+0x34]
6400620d:	mov    DWORD PTR [esp+0x68],esi
64006211:	call   0x64001350
64006216:	push   0x640440c8
6400621b:	lea    ecx,[esp+0x34]
6400621f:	push   ecx
64006220:	mov    DWORD PTR [esp+0x38],0x6402c2f4
64006228:	call   0x64013812
6400622d:	lea    esi,[esp+0x70]
64006231:	mov    ebp,eax
64006233:	call   0x640065a0
64006238:	mov    eax,DWORD PTR [ebp+0x0]
6400623b:	cmp    BYTE PTR [eax+0x45],0x0
6400623f:	je     0x64006246
64006241:	mov    edi,DWORD PTR [ebp+0x8]
64006244:	jmp    0x6400625e
64006246:	mov    edx,DWORD PTR [ebp+0x8]
64006249:	cmp    BYTE PTR [edx+0x45],0x0
6400624d:	je     0x64006253
6400624f:	mov    edi,eax
64006251:	jmp    0x6400625e
64006253:	mov    ecx,DWORD PTR [esp+0x74]
64006257:	cmp    ecx,ebp
64006259:	mov    edi,DWORD PTR [ecx+0x8]
6400625c:	jne    0x640062dd
6400625e:	cmp    BYTE PTR [edi+0x45],0x0
64006262:	mov    esi,DWORD PTR [ebp+0x4]
64006265:	jne    0x6400626a
64006267:	mov    DWORD PTR [edi+0x4],esi
6400626a:	mov    eax,ds:0x640544e0
6400626f:	cmp    DWORD PTR [eax+0x4],ebp
64006272:	jne    0x64006279
64006274:	mov    DWORD PTR [eax+0x4],edi
64006277:	jmp    0x64006284
64006279:	cmp    DWORD PTR [esi],ebp
6400627b:	jne    0x64006281
6400627d:	mov    DWORD PTR [esi],edi
6400627f:	jmp    0x64006284
64006281:	mov    DWORD PTR [esi+0x8],edi
64006284:	mov    edx,DWORD PTR ds:0x640544e0
6400628a:	cmp    DWORD PTR [edx],ebp
6400628c:	jne    0x640062ae
6400628e:	cmp    BYTE PTR [edi+0x45],0x0
64006292:	je     0x64006298
64006294:	mov    ecx,esi
64006296:	jmp    0x640062ac
64006298:	mov    eax,DWORD PTR [edi]
6400629a:	cmp    BYTE PTR [eax+0x45],0x0
6400629e:	mov    ecx,edi
640062a0:	jne    0x640062ac
640062a2:	mov    ecx,eax
640062a4:	mov    eax,DWORD PTR [ecx]
640062a6:	cmp    BYTE PTR [eax+0x45],0x0
640062aa:	je     0x640062a2
640062ac:	mov    DWORD PTR [edx],ecx
640062ae:	mov    eax,ds:0x640544e0
640062b3:	cmp    DWORD PTR [eax+0x8],ebp
640062b6:	jne    0x64006337
640062b8:	cmp    BYTE PTR [edi+0x45],0x0
640062bc:	je     0x640062cb
640062be:	mov    ecx,DWORD PTR ds:0x640544e0
640062c4:	mov    eax,esi
640062c6:	mov    DWORD PTR [ecx+0x8],eax
640062c9:	jmp    0x64006337
640062cb:	mov    eax,edi
640062cd:	call   0x64006850
640062d2:	mov    ecx,DWORD PTR ds:0x640544e0
640062d8:	mov    DWORD PTR [ecx+0x8],eax
640062db:	jmp    0x64006337
640062dd:	mov    DWORD PTR [eax+0x4],ecx
640062e0:	mov    edx,DWORD PTR [ebp+0x0]
640062e3:	mov    DWORD PTR [ecx],edx
640062e5:	cmp    ecx,DWORD PTR [ebp+0x8]
640062e8:	jne    0x640062ee
640062ea:	mov    esi,ecx
640062ec:	jmp    0x64006308
640062ee:	cmp    BYTE PTR [edi+0x45],0x0
640062f2:	mov    esi,DWORD PTR [ecx+0x4]
640062f5:	jne    0x640062fa
640062f7:	mov    DWORD PTR [edi+0x4],esi
640062fa:	mov    DWORD PTR [esi],edi
640062fc:	mov    eax,DWORD PTR [ebp+0x8]
640062ff:	mov    DWORD PTR [ecx+0x8],eax
64006302:	mov    edx,DWORD PTR [ebp+0x8]
64006305:	mov    DWORD PTR [edx+0x4],ecx
64006308:	mov    eax,ds:0x640544e0
6400630d:	cmp    DWORD PTR [eax+0x4],ebp
64006310:	jne    0x64006317
64006312:	mov    DWORD PTR [eax+0x4],ecx
64006315:	jmp    0x64006325
64006317:	mov    eax,DWORD PTR [ebp+0x4]
6400631a:	cmp    DWORD PTR [eax],ebp
6400631c:	jne    0x64006322
6400631e:	mov    DWORD PTR [eax],ecx
64006320:	jmp    0x64006325
64006322:	mov    DWORD PTR [eax+0x8],ecx
64006325:	mov    eax,DWORD PTR [ebp+0x4]
64006328:	mov    DWORD PTR [ecx+0x4],eax
6400632b:	mov    dl,BYTE PTR [ebp+0x44]
6400632e:	mov    al,BYTE PTR [ecx+0x44]
64006331:	mov    BYTE PTR [ecx+0x44],dl
64006334:	mov    BYTE PTR [ebp+0x44],al
64006337:	mov    ebx,0x1
6400633c:	cmp    BYTE PTR [ebp+0x44],bl
6400633f:	jne    0x6400645c
64006345:	mov    eax,ds:0x640544e0
6400634a:	cmp    edi,DWORD PTR [eax+0x4]
6400634d:	je     0x64006459
64006353:	cmp    BYTE PTR [edi+0x44],bl
64006356:	jne    0x64006459
6400635c:	mov    ecx,DWORD PTR [esi]
6400635e:	cmp    edi,ecx
64006360:	jne    0x640063d8
64006362:	mov    ecx,DWORD PTR [esi+0x8]
64006365:	cmp    BYTE PTR [ecx+0x44],0x0
64006369:	jne    0x64006381
6400636b:	mov    BYTE PTR [ecx+0x44],bl
6400636e:	push   0x640544dc
64006373:	mov    ecx,esi
64006375:	mov    BYTE PTR [esi+0x44],0x0
64006379:	call   0x64005bf0
6400637e:	mov    ecx,DWORD PTR [esi+0x8]
64006381:	cmp    BYTE PTR [ecx+0x45],0x0
64006385:	jne    0x6400640c
6400638b:	mov    edx,DWORD PTR [ecx]
6400638d:	cmp    BYTE PTR [edx+0x44],bl
64006390:	jne    0x6400639a
64006392:	mov    eax,DWORD PTR [ecx+0x8]
64006395:	cmp    BYTE PTR [eax+0x44],bl
64006398:	je     0x64006408
6400639a:	mov    edx,DWORD PTR [ecx+0x8]
6400639d:	cmp    BYTE PTR [edx+0x44],bl
640063a0:	jne    0x640063b8
640063a2:	mov    eax,DWORD PTR [ecx]
640063a4:	mov    BYTE PTR [eax+0x44],bl
640063a7:	push   0x640544dc
640063ac:	mov    BYTE PTR [ecx+0x44],0x0
640063b0:	call   0x64005c40
640063b5:	mov    ecx,DWORD PTR [esi+0x8]
640063b8:	mov    dl,BYTE PTR [esi+0x44]
640063bb:	mov    BYTE PTR [ecx+0x44],dl
640063be:	mov    BYTE PTR [esi+0x44],bl
640063c1:	mov    eax,DWORD PTR [ecx+0x8]
640063c4:	push   0x640544dc
640063c9:	mov    ecx,esi
640063cb:	mov    BYTE PTR [eax+0x44],bl
640063ce:	call   0x64005bf0
640063d3:	jmp    0x64006459
640063d8:	cmp    BYTE PTR [ecx+0x44],0x0
640063dc:	jne    0x640063f3
640063de:	mov    BYTE PTR [ecx+0x44],bl
640063e1:	push   0x640544dc
640063e6:	mov    ecx,esi
640063e8:	mov    BYTE PTR [esi+0x44],0x0
640063ec:	call   0x64005c40
640063f1:	mov    ecx,DWORD PTR [esi]
640063f3:	cmp    BYTE PTR [ecx+0x45],0x0
640063f7:	jne    0x6400640c
640063f9:	mov    edx,DWORD PTR [ecx+0x8]
640063fc:	cmp    BYTE PTR [edx+0x44],bl
640063ff:	jne    0x64006422
64006401:	mov    eax,DWORD PTR [ecx]
64006403:	cmp    BYTE PTR [eax+0x44],bl
64006406:	jne    0x64006422
64006408:	mov    BYTE PTR [ecx+0x44],0x0
6400640c:	mov    ecx,DWORD PTR ds:0x640544e0
64006412:	mov    edi,esi
64006414:	cmp    edi,DWORD PTR [ecx+0x4]
64006417:	mov    esi,DWORD PTR [esi+0x4]
6400641a:	jne    0x64006353
64006420:	jmp    0x64006459
64006422:	mov    edx,DWORD PTR [ecx]
64006424:	cmp    BYTE PTR [edx+0x44],bl
64006427:	jne    0x6400643f
64006429:	mov    eax,DWORD PTR [ecx+0x8]
6400642c:	mov    BYTE PTR [eax+0x44],bl
6400642f:	push   0x640544dc
64006434:	mov    BYTE PTR [ecx+0x44],0x0
64006438:	call   0x64005bf0
6400643d:	mov    ecx,DWORD PTR [esi]
6400643f:	mov    dl,BYTE PTR [esi+0x44]
64006442:	mov    BYTE PTR [ecx+0x44],dl
64006445:	mov    BYTE PTR [esi+0x44],bl
64006448:	mov    eax,DWORD PTR [ecx]
6400644a:	push   0x640544dc
6400644f:	mov    ecx,esi
64006451:	mov    BYTE PTR [eax+0x44],bl
64006454:	call   0x64005c40
64006459:	mov    BYTE PTR [edi+0x44],bl
6400645c:	mov    edi,0x8
64006461:	cmp    DWORD PTR [ebp+0x40],edi
64006464:	jb     0x64006472
64006466:	mov    ecx,DWORD PTR [ebp+0x2c]
64006469:	push   ecx
6400646a:	call   0x640135e4
6400646f:	add    esp,0x4
64006472:	xor    eax,eax
64006474:	mov    esi,0x7
64006479:	mov    DWORD PTR [ebp+0x40],esi
6400647c:	mov    DWORD PTR [ebp+0x3c],eax
6400647f:	mov    WORD PTR [ebp+0x2c],ax
64006483:	cmp    DWORD PTR [ebp+0x24],edi
64006486:	jb     0x64006496
64006488:	mov    edx,DWORD PTR [ebp+0x10]
6400648b:	push   edx
6400648c:	call   0x640135e4
64006491:	add    esp,0x4
64006494:	xor    eax,eax
64006496:	mov    DWORD PTR [ebp+0x24],esi
64006499:	mov    DWORD PTR [ebp+0x20],eax
6400649c:	push   ebp
6400649d:	mov    WORD PTR [ebp+0x10],ax
640064a1:	call   0x640135e4
640064a6:	add    esp,0x4
640064a9:	cmp    DWORD PTR ds:0x640544e4,0x0
640064b0:	jbe    0x640064b8
640064b2:	sub    DWORD PTR ds:0x640544e4,ebx
640064b8:	mov    eax,DWORD PTR [esp+0x6c]
640064bc:	mov    ecx,DWORD PTR [esp+0x70]
640064c0:	mov    edx,DWORD PTR [esp+0x74]
640064c4:	mov    DWORD PTR [eax],ecx
640064c6:	mov    DWORD PTR [eax+0x4],edx
640064c9:	mov    ecx,DWORD PTR [esp+0x5c]
640064cd:	mov    DWORD PTR fs:0x0,ecx
640064d4:	pop    ecx
640064d5:	pop    edi
640064d6:	pop    esi
640064d7:	pop    ebp
640064d8:	pop    ebx
640064d9:	add    esp,0x54
640064dc:	ret    0xc
640064df:	int3   
640064e0:	push   0x48
640064e2:	call   0x64013875
640064e7:	add    esp,0x4
640064ea:	test   eax,eax
640064ec:	je     0x640064f4
640064ee:	mov    DWORD PTR [eax],0x0
640064f4:	lea    ecx,[eax+0x4]
640064f7:	test   ecx,ecx
640064f9:	je     0x64006501
640064fb:	mov    DWORD PTR [ecx],0x0
64006501:	lea    ecx,[eax+0x8]
64006504:	test   ecx,ecx
64006506:	je     0x6400650e
64006508:	mov    DWORD PTR [ecx],0x0
6400650e:	mov    BYTE PTR [eax+0x44],0x1
64006512:	mov    BYTE PTR [eax+0x45],0x0
64006516:	ret    
64006517:	int3   
64006518:	int3   
64006519:	int3   
6400651a:	int3   
6400651b:	int3   
6400651c:	int3   
6400651d:	int3   
6400651e:	int3   
6400651f:	int3   
64006520:	cmp    DWORD PTR [esi],0x0
64006523:	jne    0x6400652a
64006525:	call   0x64013e16
6400652a:	mov    eax,DWORD PTR [esi+0x4]
6400652d:	cmp    BYTE PTR [eax+0x45],0x0
64006531:	je     0x64006544
64006533:	mov    eax,DWORD PTR [eax+0x8]
64006536:	mov    DWORD PTR [esi+0x4],eax
64006539:	cmp    BYTE PTR [eax+0x45],0x0
6400653d:	je     0x64006596
6400653f:	jmp    0x64013e16
64006544:	mov    ecx,DWORD PTR [eax]
64006546:	cmp    BYTE PTR [ecx+0x45],0x0
6400654a:	jne    0x64006564
6400654c:	mov    eax,DWORD PTR [ecx+0x8]
6400654f:	cmp    BYTE PTR [eax+0x45],0x0
64006553:	jne    0x64006560
64006555:	mov    ecx,eax
64006557:	mov    eax,DWORD PTR [ecx+0x8]
6400655a:	cmp    BYTE PTR [eax+0x45],0x0
6400655e:	je     0x64006555
64006560:	mov    DWORD PTR [esi+0x4],ecx
64006563:	ret    
64006564:	mov    eax,DWORD PTR [eax+0x4]
64006567:	cmp    BYTE PTR [eax+0x45],0x0
6400656b:	jne    0x64006585
6400656d:	lea    ecx,[ecx+0x0]
64006570:	mov    ecx,DWORD PTR [esi+0x4]
64006573:	cmp    ecx,DWORD PTR [eax]
64006575:	jne    0x64006585
64006577:	mov    DWORD PTR [esi+0x4],eax
6400657a:	mov    edx,eax
6400657c:	mov    eax,DWORD PTR [edx+0x4]
6400657f:	cmp    BYTE PTR [eax+0x45],0x0
64006583:	je     0x64006570
64006585:	mov    ecx,DWORD PTR [esi+0x4]
64006588:	cmp    BYTE PTR [ecx+0x45],0x0
6400658c:	je     0x64006593
6400658e:	jmp    0x64013e16
64006593:	mov    DWORD PTR [esi+0x4],eax
64006596:	ret    
64006597:	int3   
64006598:	int3   
64006599:	int3   
6400659a:	int3   
6400659b:	int3   
6400659c:	int3   
6400659d:	int3   
6400659e:	int3   
6400659f:	int3   
640065a0:	cmp    DWORD PTR [esi],0x0
640065a3:	jne    0x640065aa
640065a5:	call   0x64013e16
640065aa:	mov    eax,DWORD PTR [esi+0x4]
640065ad:	cmp    BYTE PTR [eax+0x45],0x0
640065b1:	je     0x640065b8
640065b3:	jmp    0x64013e16
640065b8:	mov    ecx,DWORD PTR [eax+0x8]
640065bb:	cmp    BYTE PTR [ecx+0x45],0x0
640065bf:	jne    0x640065de
640065c1:	mov    eax,DWORD PTR [ecx]
640065c3:	cmp    BYTE PTR [eax+0x45],0x0
640065c7:	jne    0x640065da
640065c9:	lea    esp,[esp+0x0]
640065d0:	mov    ecx,eax
640065d2:	mov    eax,DWORD PTR [ecx]
640065d4:	cmp    BYTE PTR [eax+0x45],0x0
640065d8:	je     0x640065d0
640065da:	mov    DWORD PTR [esi+0x4],ecx
640065dd:	ret    
640065de:	mov    eax,DWORD PTR [eax+0x4]
640065e1:	cmp    BYTE PTR [eax+0x45],0x0
640065e5:	jne    0x640065fd
640065e7:	mov    ecx,DWORD PTR [esi+0x4]
640065ea:	cmp    ecx,DWORD PTR [eax+0x8]
640065ed:	jne    0x640065fd
640065ef:	mov    DWORD PTR [esi+0x4],eax
640065f2:	mov    edx,eax
640065f4:	mov    eax,DWORD PTR [edx+0x4]
640065f7:	cmp    BYTE PTR [eax+0x45],0x0
640065fb:	je     0x640065e7
640065fd:	mov    DWORD PTR [esi+0x4],eax
64006600:	ret    
64006601:	int3   
64006602:	int3   
64006603:	int3   
64006604:	int3   
64006605:	int3   
64006606:	int3   
64006607:	int3   
64006608:	int3   
64006609:	int3   
6400660a:	int3   
6400660b:	int3   
6400660c:	int3   
6400660d:	int3   
6400660e:	int3   
6400660f:	int3   
64006610:	push   0xffffffff
64006612:	push   0x64023158
64006617:	mov    eax,fs:0x0
6400661d:	push   eax
6400661e:	push   ecx
6400661f:	push   ebx
64006620:	push   esi
64006621:	push   edi
64006622:	mov    eax,ds:0x640521ac
64006627:	xor    eax,esp
64006629:	push   eax
6400662a:	lea    eax,[esp+0x14]
6400662e:	mov    fs:0x0,eax
64006634:	mov    esi,ecx
64006636:	mov    DWORD PTR [esp+0x10],esi
6400663a:	mov    edi,DWORD PTR [esp+0x24]
6400663e:	xor    ebx,ebx
64006640:	push   0xffffffff
64006642:	push   ebx
64006643:	mov    DWORD PTR [esi+0x18],0xf
6400664a:	mov    DWORD PTR [esi+0x14],ebx
6400664d:	push   edi
6400664e:	mov    BYTE PTR [esi+0x4],bl
64006651:	call   0x64003370
64006656:	push   0xffffffff
64006658:	lea    ecx,[esi+0x1c]
6400665b:	mov    DWORD PTR [esp+0x20],ebx
6400665f:	lea    eax,[edi+0x1c]
64006662:	push   ebx
64006663:	mov    DWORD PTR [ecx+0x18],0xf
6400666a:	mov    DWORD PTR [ecx+0x14],ebx
6400666d:	push   eax
6400666e:	mov    BYTE PTR [ecx+0x4],bl
64006671:	call   0x64003370
64006676:	mov    eax,esi
64006678:	mov    ecx,DWORD PTR [esp+0x14]
6400667c:	mov    DWORD PTR fs:0x0,ecx
64006683:	pop    ecx
64006684:	pop    edi
64006685:	pop    esi
64006686:	pop    ebx
64006687:	add    esp,0x10
6400668a:	ret    0x4
6400668d:	int3   
6400668e:	int3   
6400668f:	int3   
64006690:	push   0xffffffff
64006692:	push   0x64023128
64006697:	mov    eax,fs:0x0
6400669d:	push   eax
6400669e:	push   esi
6400669f:	push   edi
640066a0:	mov    eax,ds:0x640521ac
640066a5:	xor    eax,esp
640066a7:	push   eax
640066a8:	lea    eax,[esp+0xc]
640066ac:	mov    fs:0x0,eax
640066b2:	mov    esi,DWORD PTR [esp+0x1c]
640066b6:	xor    edi,edi
640066b8:	push   0xffffffff
640066ba:	mov    DWORD PTR [esi+0x18],0x7
640066c1:	mov    DWORD PTR [esi+0x14],edi
640066c4:	push   edi
640066c5:	mov    eax,ebx
640066c7:	mov    ecx,esi
640066c9:	mov    WORD PTR [esi+0x4],di
640066cd:	call   0x64004750
640066d2:	lea    ecx,[esi+0x1c]
640066d5:	mov    DWORD PTR [esp+0x14],edi
640066d9:	push   0xffffffff
640066db:	mov    DWORD PTR [ecx+0x18],0x7
640066e2:	mov    DWORD PTR [ecx+0x14],edi
640066e5:	lea    eax,[ebx+0x1c]
640066e8:	push   edi
640066e9:	mov    WORD PTR [ecx+0x4],di
640066ed:	call   0x64004750
640066f2:	mov    eax,esi
640066f4:	mov    ecx,DWORD PTR [esp+0xc]
640066f8:	mov    DWORD PTR fs:0x0,ecx
640066ff:	pop    ecx
64006700:	pop    edi
64006701:	pop    esi
64006702:	add    esp,0xc
64006705:	ret    0x4
64006708:	int3   
64006709:	int3   
6400670a:	int3   
6400670b:	int3   
6400670c:	int3   
6400670d:	int3   
6400670e:	int3   
6400670f:	int3   
64006710:	push   ecx
64006711:	push   ebx
64006712:	push   esi
64006713:	mov    esi,DWORD PTR [esp+0x10]
64006717:	xor    ebx,ebx
64006719:	cmp    BYTE PTR [esi+0x45],bl
6400671c:	push   edi
6400671d:	mov    DWORD PTR [esp+0xc],ecx
64006721:	mov    edi,esi
64006723:	jne    0x64006786
64006725:	push   ebp
64006726:	lea    ebp,[ebx+0xf]
64006729:	lea    esp,[esp+0x0]
64006730:	mov    eax,DWORD PTR [edi+0x8]
64006733:	mov    ecx,DWORD PTR [esp+0x10]
64006737:	push   eax
64006738:	call   0x64006710
6400673d:	cmp    DWORD PTR [esi+0x40],0x10
64006741:	mov    edi,DWORD PTR [edi]
64006743:	jb     0x64006751
64006745:	mov    ecx,DWORD PTR [esi+0x2c]
64006748:	push   ecx
64006749:	call   0x640135e4
6400674e:	add    esp,0x4
64006751:	mov    DWORD PTR [esi+0x40],ebp
64006754:	mov    DWORD PTR [esi+0x3c],ebx
64006757:	mov    BYTE PTR [esi+0x2c],bl
6400675a:	cmp    DWORD PTR [esi+0x24],0x10
6400675e:	jb     0x6400676c
64006760:	mov    edx,DWORD PTR [esi+0x10]
64006763:	push   edx
64006764:	call   0x640135e4
64006769:	add    esp,0x4
6400676c:	mov    DWORD PTR [esi+0x24],ebp
6400676f:	mov    DWORD PTR [esi+0x20],ebx
64006772:	push   esi
64006773:	mov    BYTE PTR [esi+0x10],bl
64006776:	call   0x640135e4
6400677b:	add    esp,0x4
6400677e:	cmp    BYTE PTR [edi+0x45],bl
64006781:	mov    esi,edi
64006783:	je     0x64006730
64006785:	pop    ebp
64006786:	pop    edi
64006787:	pop    esi
64006788:	pop    ebx
64006789:	pop    ecx
6400678a:	ret    0x4
6400678d:	int3   
6400678e:	int3   
6400678f:	int3   
64006790:	mov    eax,DWORD PTR [esp+0x4]
64006794:	mov    ecx,DWORD PTR [eax+0x8]
64006797:	cmp    BYTE PTR [ecx+0x45],0x0
6400679b:	jne    0x640067ab
6400679d:	lea    ecx,[ecx+0x0]
640067a0:	mov    eax,ecx
640067a2:	mov    ecx,DWORD PTR [eax+0x8]
640067a5:	cmp    BYTE PTR [ecx+0x45],0x0
640067a9:	je     0x640067a0
640067ab:	ret    
640067ac:	int3   
640067ad:	int3   
640067ae:	int3   
640067af:	int3   
640067b0:	mov    eax,DWORD PTR [esp+0x4]
640067b4:	mov    ecx,DWORD PTR [eax]
640067b6:	cmp    BYTE PTR [ecx+0x45],0x0
640067ba:	jne    0x640067ca
640067bc:	lea    esp,[esp+0x0]
640067c0:	mov    eax,ecx
640067c2:	mov    ecx,DWORD PTR [eax]
640067c4:	cmp    BYTE PTR [ecx+0x45],0x0
640067c8:	je     0x640067c0
640067ca:	ret    
640067cb:	int3   
640067cc:	int3   
640067cd:	int3   
640067ce:	int3   
640067cf:	int3   
640067d0:	push   ecx
640067d1:	push   ebx
640067d2:	push   esi
640067d3:	mov    esi,DWORD PTR [esp+0x10]
640067d7:	xor    ebx,ebx
640067d9:	cmp    BYTE PTR [esi+0x45],bl
640067dc:	push   edi
640067dd:	mov    DWORD PTR [esp+0xc],ecx
640067e1:	mov    edi,esi
640067e3:	jne    0x64006848
640067e5:	push   ebp
640067e6:	lea    ebp,[ebx+0x7]
640067e9:	lea    esp,[esp+0x0]
640067f0:	mov    eax,DWORD PTR [edi+0x8]
640067f3:	mov    ecx,DWORD PTR [esp+0x10]
640067f7:	push   eax
640067f8:	call   0x640067d0
640067fd:	cmp    DWORD PTR [esi+0x40],0x8
64006801:	mov    edi,DWORD PTR [edi]
64006803:	jb     0x64006811
64006805:	mov    ecx,DWORD PTR [esi+0x2c]
64006808:	push   ecx
64006809:	call   0x640135e4
6400680e:	add    esp,0x4
64006811:	mov    DWORD PTR [esi+0x40],ebp
64006814:	mov    DWORD PTR [esi+0x3c],ebx
64006817:	mov    WORD PTR [esi+0x2c],bx
6400681b:	cmp    DWORD PTR [esi+0x24],0x8
6400681f:	jb     0x6400682d
64006821:	mov    edx,DWORD PTR [esi+0x10]
64006824:	push   edx
64006825:	call   0x640135e4
6400682a:	add    esp,0x4
6400682d:	mov    DWORD PTR [esi+0x24],ebp
64006830:	mov    DWORD PTR [esi+0x20],ebx
64006833:	push   esi
64006834:	mov    WORD PTR [esi+0x10],bx
64006838:	call   0x640135e4
6400683d:	add    esp,0x4
64006840:	cmp    BYTE PTR [edi+0x45],bl
64006843:	mov    esi,edi
64006845:	je     0x640067f0
64006847:	pop    ebp
64006848:	pop    edi
64006849:	pop    esi
6400684a:	pop    ebx
6400684b:	pop    ecx
6400684c:	ret    0x4
6400684f:	int3   
64006850:	mov    ecx,DWORD PTR [eax+0x8]
64006853:	cmp    BYTE PTR [ecx+0x45],0x0
64006857:	jne    0x6400686b
64006859:	lea    esp,[esp+0x0]
64006860:	mov    eax,ecx
64006862:	mov    ecx,DWORD PTR [eax+0x8]
64006865:	cmp    BYTE PTR [ecx+0x45],0x0
64006869:	je     0x64006860
6400686b:	ret    
6400686c:	int3   
6400686d:	int3   
6400686e:	int3   
6400686f:	int3   
64006870:	mov    eax,DWORD PTR [esp+0x8]
64006874:	mov    ecx,DWORD PTR [esp+0xc]
64006878:	or     edx,0xffffffff
6400687b:	sub    edx,eax
6400687d:	cmp    edx,ecx
6400687f:	jae    0x64006887
64006881:	mov    eax,0x80070057
64006886:	ret    
64006887:	add    eax,ecx
64006889:	mov    ecx,DWORD PTR [esp+0x4]
6400688d:	mov    DWORD PTR [ecx],eax
6400688f:	xor    eax,eax
64006891:	ret    
64006892:	int3   
64006893:	int3   
64006894:	int3   
64006895:	int3   
64006896:	int3   
64006897:	int3   
64006898:	int3   
64006899:	int3   
6400689a:	int3   
6400689b:	int3   
6400689c:	int3   
6400689d:	int3   
6400689e:	int3   
6400689f:	int3   
640068a0:	push   0xffffffff
640068a2:	push   0x64023388
640068a7:	mov    eax,fs:0x0
640068ad:	push   eax
640068ae:	sub    esp,0x20
640068b1:	push   ebx
640068b2:	push   ebp
640068b3:	mov    eax,ds:0x640521ac
640068b8:	xor    eax,esp
640068ba:	push   eax
640068bb:	lea    eax,[esp+0x2c]
640068bf:	mov    fs:0x0,eax
640068c5:	mov    eax,DWORD PTR [esp+0x3c]
640068c9:	xor    ebx,ebx
640068cb:	push   0xffffffff
640068cd:	push   ebx
640068ce:	push   eax
640068cf:	lea    ecx,[esp+0x1c]
640068d3:	mov    DWORD PTR [esp+0x18],ebx
640068d7:	mov    DWORD PTR [esp+0x34],0xf
640068df:	mov    DWORD PTR [esp+0x30],ebx
640068e3:	mov    BYTE PTR [esp+0x20],bl
640068e7:	call   0x64003370
640068ec:	mov    eax,edi
640068ee:	mov    DWORD PTR [esp+0x34],ebx
640068f2:	lea    ebp,[eax+0x1]
640068f5:	mov    cl,BYTE PTR [eax]
640068f7:	add    eax,0x1
640068fa:	cmp    cl,bl
640068fc:	jne    0x640068f5
640068fe:	sub    eax,ebp
64006900:	push   eax
64006901:	push   edi
64006902:	lea    eax,[esp+0x18]
64006906:	call   0x640029e0
6400690b:	push   0xffffffff
6400690d:	push   ebx
6400690e:	mov    DWORD PTR [esi+0x18],0xf
64006915:	mov    DWORD PTR [esi+0x14],ebx
64006918:	push   eax
64006919:	mov    ecx,esi
6400691b:	mov    BYTE PTR [esi+0x4],bl
6400691e:	call   0x64003370
64006923:	cmp    DWORD PTR [esp+0x28],0x10
64006928:	jb     0x64006937
6400692a:	mov    ecx,DWORD PTR [esp+0x14]
6400692e:	push   ecx
6400692f:	call   0x640135e4
64006934:	add    esp,0x4
64006937:	mov    eax,esi
64006939:	mov    ecx,DWORD PTR [esp+0x2c]
6400693d:	mov    DWORD PTR fs:0x0,ecx
64006944:	pop    ecx
64006945:	pop    ebp
64006946:	pop    ebx
64006947:	add    esp,0x2c
6400694a:	ret    
6400694b:	int3   
6400694c:	int3   
6400694d:	int3   
6400694e:	int3   
6400694f:	int3   
64006950:	mov    eax,DWORD PTR [esp+0x4]
64006954:	push   esi
64006955:	push   eax
64006956:	mov    esi,ecx
64006958:	call   0x64013660
6400695d:	mov    DWORD PTR [esi],0x6402c2ac
64006963:	mov    eax,esi
64006965:	pop    esi
64006966:	ret    0x4
64006969:	int3   
6400696a:	int3   
6400696b:	int3   
6400696c:	int3   
6400696d:	int3   
6400696e:	int3   
6400696f:	int3   
64006970:	push   ebx
64006971:	push   esi
64006972:	mov    esi,eax
64006974:	mov    eax,DWORD PTR [ecx+0x14]
64006977:	cmp    eax,esi
64006979:	jae    0x6400697d
6400697b:	mov    esi,eax
6400697d:	cmp    esi,edi
6400697f:	mov    edx,esi
64006981:	jb     0x64006985
64006983:	mov    edx,edi
64006985:	cmp    DWORD PTR [ecx+0x18],0x8
64006989:	jb     0x64006990
6400698b:	mov    eax,DWORD PTR [ecx+0x4]
6400698e:	jmp    0x64006993
64006990:	lea    eax,[ecx+0x4]
64006993:	test   edx,edx
64006995:	mov    ecx,DWORD PTR [esp+0xc]
64006999:	jbe    0x640069c5
6400699b:	jmp    0x640069a0
6400699d:	lea    ecx,[ecx+0x0]
640069a0:	mov    bx,WORD PTR [eax]
640069a3:	cmp    bx,WORD PTR [ecx]
640069a6:	jne    0x640069b5
640069a8:	add    eax,0x2
640069ab:	add    ecx,0x2
640069ae:	sub    edx,0x1
640069b1:	jne    0x640069a0
640069b3:	jmp    0x640069c5
640069b5:	movzx  eax,WORD PTR [eax]
640069b8:	cmp    ax,WORD PTR [ecx]
640069bb:	sbb    eax,eax
640069bd:	and    eax,0xfffffffe
640069c0:	add    eax,0x1
640069c3:	jne    0x640069d8
640069c5:	cmp    esi,edi
640069c7:	jae    0x640069d1
640069c9:	pop    esi
640069ca:	or     eax,0xffffffff
640069cd:	pop    ebx
640069ce:	ret    0x4
640069d1:	xor    eax,eax
640069d3:	cmp    esi,edi
640069d5:	setne  al
640069d8:	pop    esi
640069d9:	pop    ebx
640069da:	ret    0x4
640069dd:	int3   
640069de:	int3   
640069df:	int3   
640069e0:	push   ebp
640069e1:	mov    ebp,esp
640069e3:	and    esp,0xfffffff8
640069e6:	push   0xffffffff
640069e8:	push   0x64023c28
640069ed:	mov    eax,fs:0x0
640069f3:	push   eax
640069f4:	sub    esp,0x14
640069f7:	push   ebx
640069f8:	push   esi
640069f9:	mov    eax,ds:0x640521ac
640069fe:	xor    eax,esp
64006a00:	push   eax
64006a01:	lea    eax,[esp+0x20]
64006a05:	mov    fs:0x0,eax
64006a0b:	mov    eax,DWORD PTR [ebp+0xc]
64006a0e:	push   eax
64006a0f:	lea    ecx,[esp+0x14]
64006a13:	push   0x4
64006a15:	xor    esi,esi
64006a17:	push   ecx
64006a18:	mov    DWORD PTR [esp+0x1c],esi
64006a1c:	call   0x64002140
64006a21:	add    esp,0xc
64006a24:	lea    edx,[esp+0x18]
64006a28:	push   edx
64006a29:	mov    DWORD PTR [esp+0x2c],esi
64006a2d:	call   0x64001c70
64006a32:	add    esp,0x4
64006a35:	lea    ecx,[esp+0x10]
64006a39:	push   ecx
64006a3a:	lea    edx,[esp+0x18]
64006a3e:	push   edx
64006a3f:	mov    ebx,eax
64006a41:	mov    BYTE PTR [esp+0x30],0x1
64006a46:	call   0x64006bf0
64006a4b:	mov    esi,eax
64006a4d:	push   0x64041d48
64006a52:	push   0x4
64006a54:	mov    ecx,0x64041d00
64006a59:	mov    BYTE PTR [esp+0x38],0x2
64006a5e:	call   0x64003090
64006a63:	push   esi
64006a64:	mov    esi,DWORD PTR [ebp+0x8]
64006a67:	push   esi
64006a68:	mov    ebx,eax
64006a6a:	call   0x64002cf0
64006a6f:	mov    BYTE PTR [esp+0x40],0x1
64006a74:	mov    eax,DWORD PTR [esp+0x2c]
64006a78:	add    eax,0xfffffff0
64006a7b:	add    esp,0x18
64006a7e:	lea    ecx,[eax+0xc]
64006a81:	or     edx,0xffffffff
64006a84:	lock xadd DWORD PTR [ecx],edx
64006a88:	dec    edx
64006a89:	test   edx,edx
64006a8b:	jg     0x64006a97
64006a8d:	mov    ecx,DWORD PTR [eax]
64006a8f:	mov    edx,DWORD PTR [ecx]
64006a91:	push   eax
64006a92:	mov    eax,DWORD PTR [edx+0x4]
64006a95:	call   eax
64006a97:	mov    BYTE PTR [esp+0x28],0x0
64006a9c:	mov    eax,DWORD PTR [esp+0x18]
64006aa0:	add    eax,0xfffffff0
64006aa3:	lea    ecx,[eax+0xc]
64006aa6:	or     edx,0xffffffff
64006aa9:	lock xadd DWORD PTR [ecx],edx
64006aad:	dec    edx
64006aae:	test   edx,edx
64006ab0:	jg     0x64006abc
64006ab2:	mov    ecx,DWORD PTR [eax]
64006ab4:	mov    edx,DWORD PTR [ecx]
64006ab6:	push   eax
64006ab7:	mov    eax,DWORD PTR [edx+0x4]
64006aba:	call   eax
64006abc:	mov    DWORD PTR [esp+0x28],0xffffffff
64006ac4:	mov    eax,DWORD PTR [esp+0x10]
64006ac8:	add    eax,0xfffffff0
64006acb:	lea    ecx,[eax+0xc]
64006ace:	or     edx,0xffffffff
64006ad1:	lock xadd DWORD PTR [ecx],edx
64006ad5:	dec    edx
64006ad6:	test   edx,edx
64006ad8:	jg     0x64006ae4
64006ada:	mov    ecx,DWORD PTR [eax]
64006adc:	mov    edx,DWORD PTR [ecx]
64006ade:	push   eax
64006adf:	mov    eax,DWORD PTR [edx+0x4]
64006ae2:	call   eax
64006ae4:	mov    eax,esi
64006ae6:	mov    ecx,DWORD PTR [esp+0x20]
64006aea:	mov    DWORD PTR fs:0x0,ecx
64006af1:	pop    ecx
64006af2:	pop    esi
64006af3:	pop    ebx
64006af4:	mov    esp,ebp
64006af6:	pop    ebp
64006af7:	ret    
64006af8:	int3   
64006af9:	int3   
64006afa:	int3   
64006afb:	int3   
64006afc:	int3   
64006afd:	int3   
64006afe:	int3   
64006aff:	int3   
64006b00:	push   0xffffffff
64006b02:	push   0x64023360
64006b07:	mov    eax,fs:0x0
64006b0d:	push   eax
64006b0e:	sub    esp,0xc
64006b11:	push   ebx
64006b12:	push   ebp
64006b13:	push   esi
64006b14:	push   edi
64006b15:	mov    eax,ds:0x640521ac
64006b1a:	xor    eax,esp
64006b1c:	push   eax
64006b1d:	lea    eax,[esp+0x20]
64006b21:	mov    fs:0x0,eax
64006b27:	mov    edi,ecx
64006b29:	mov    ebp,DWORD PTR [esp+0x30]
64006b2d:	xor    ebx,ebx
64006b2f:	push   edi
64006b30:	mov    DWORD PTR [esp+0x34],ebx
64006b34:	call   0x64012f3a
64006b39:	mov    esi,eax
64006b3b:	mov    DWORD PTR [esp+0x1c],esi
64006b3f:	mov    eax,DWORD PTR [esp+0x38]
64006b43:	push   edi
64006b44:	push   eax
64006b45:	push   esi
64006b46:	mov    DWORD PTR [esp+0x38],ebx
64006b4a:	call   0x64015180
64006b4f:	add    esp,0x10
64006b52:	xor    ecx,ecx
64006b54:	xor    edx,edx
64006b56:	cmp    edi,ebx
64006b58:	je     0x64006b79
64006b5a:	mov    eax,DWORD PTR [esp+0x38]
64006b5e:	mov    al,BYTE PTR [edx+eax*1]
64006b61:	xor    BYTE PTR [ecx+esi*1],al
64006b64:	lea    eax,[edx+0x1]
64006b67:	xor    edx,edx
64006b69:	mov    ebx,0x25
64006b6e:	add    ecx,0x1
64006b71:	div    ebx
64006b73:	cmp    ecx,edi
64006b75:	jne    0x64006b5a
64006b77:	xor    ebx,ebx
64006b79:	lea    ecx,[esp+0x14]
64006b7d:	push   ecx
64006b7e:	push   edi
64006b7f:	lea    edx,[esp+0x38]
64006b83:	push   esi
64006b84:	push   edx
64006b85:	call   0x640018f0
64006b8a:	mov    ecx,DWORD PTR [eax]
64006b8c:	mov    edi,ecx
64006b8e:	mov    DWORD PTR [eax],ebx
64006b90:	mov    DWORD PTR [esp+0x2c],edi
64006b94:	mov    BYTE PTR [esp+0x38],0x1
64006b99:	mov    edx,DWORD PTR [esp+0x40]
64006b9d:	push   edx
64006b9e:	call   0x640135e4
64006ba3:	mov    eax,DWORD PTR [esp+0x28]
64006ba7:	add    esp,0x14
64006baa:	push   eax
64006bab:	mov    DWORD PTR [ebp+0x18],0xf
64006bb2:	mov    DWORD PTR [ebp+0x14],ebx
64006bb5:	push   edi
64006bb6:	mov    ecx,ebp
64006bb8:	mov    BYTE PTR [ebp+0x4],bl
64006bbb:	call   0x64003450
64006bc0:	push   edi
64006bc1:	call   0x640135e4
64006bc6:	push   esi
64006bc7:	call   0x640135e4
64006bcc:	add    esp,0x8
64006bcf:	mov    eax,ebp
64006bd1:	mov    ecx,DWORD PTR [esp+0x20]
64006bd5:	mov    DWORD PTR fs:0x0,ecx
64006bdc:	pop    ecx
64006bdd:	pop    edi
64006bde:	pop    esi
64006bdf:	pop    ebp
64006be0:	pop    ebx
64006be1:	add    esp,0x18
64006be4:	ret    
64006be5:	int3   
64006be6:	int3   
64006be7:	int3   
64006be8:	int3   
64006be9:	int3   
64006bea:	int3   
64006beb:	int3   
64006bec:	int3   
64006bed:	int3   
64006bee:	int3   
64006bef:	int3   
64006bf0:	push   0xffffffff
64006bf2:	push   0x64023329
64006bf7:	mov    eax,fs:0x0
64006bfd:	push   eax
64006bfe:	push   ecx
64006bff:	push   esi
64006c00:	push   edi
64006c01:	mov    eax,ds:0x640521ac
64006c06:	xor    eax,esp
64006c08:	push   eax
64006c09:	lea    eax,[esp+0x10]
64006c0d:	mov    fs:0x0,eax
64006c13:	mov    esi,DWORD PTR [esp+0x20]
64006c17:	xor    edi,edi
64006c19:	mov    DWORD PTR [esp+0x18],edi
64006c1d:	mov    DWORD PTR [esp+0xc],edi
64006c21:	mov    eax,DWORD PTR [ebx]
64006c23:	mov    ecx,DWORD PTR [eax-0x10]
64006c26:	cmp    ecx,edi
64006c28:	je     0x64006c35
64006c2a:	mov    edx,DWORD PTR [ecx]
64006c2c:	mov    eax,DWORD PTR [edx+0x10]
64006c2f:	call   eax
64006c31:	cmp    eax,edi
64006c33:	jne    0x64006c45
64006c35:	mov    edx,DWORD PTR ds:0x640539c4
64006c3b:	mov    eax,DWORD PTR [edx+0x10]
64006c3e:	mov    ecx,0x640539c4
64006c43:	call   eax
64006c45:	xor    ecx,ecx
64006c47:	cmp    eax,edi
64006c49:	setne  cl
64006c4c:	cmp    ecx,edi
64006c4e:	jne    0x64006c5a
64006c50:	push   0x80004005
64006c55:	call   0x64001080
64006c5a:	mov    edx,DWORD PTR [eax]
64006c5c:	mov    ecx,eax
64006c5e:	mov    eax,DWORD PTR [edx+0xc]
64006c61:	call   eax
64006c63:	add    eax,0x10
64006c66:	mov    DWORD PTR [esi],eax
64006c68:	mov    ecx,DWORD PTR [esp+0x24]
64006c6c:	mov    DWORD PTR [esp+0x18],edi
64006c70:	mov    ecx,DWORD PTR [ecx]
64006c72:	mov    edi,DWORD PTR [ecx-0xc]
64006c75:	mov    edx,DWORD PTR [ebx]
64006c77:	mov    eax,DWORD PTR [edx-0xc]
64006c7a:	push   edi
64006c7b:	push   ecx
64006c7c:	push   edx
64006c7d:	push   esi
64006c7e:	mov    DWORD PTR [esp+0x1c],0x1
64006c86:	call   0x64003770
64006c8b:	add    esp,0x10
64006c8e:	mov    eax,esi
64006c90:	mov    ecx,DWORD PTR [esp+0x10]
64006c94:	mov    DWORD PTR fs:0x0,ecx
64006c9b:	pop    ecx
64006c9c:	pop    edi
64006c9d:	pop    esi
64006c9e:	add    esp,0x10
64006ca1:	ret    
64006ca2:	int3   
64006ca3:	int3   
64006ca4:	int3   
64006ca5:	int3   
64006ca6:	int3   
64006ca7:	int3   
64006ca8:	int3   
64006ca9:	int3   
64006caa:	int3   
64006cab:	int3   
64006cac:	int3   
64006cad:	int3   
64006cae:	int3   
64006caf:	int3   
64006cb0:	push   ebp
64006cb1:	mov    ebp,esp
64006cb3:	and    esp,0xfffffff8
64006cb6:	sub    esp,0x34
64006cb9:	xor    eax,eax
64006cbb:	push   ebx
64006cbc:	mov    DWORD PTR [esp+0x24],eax
64006cc0:	mov    DWORD PTR [esp+0x28],eax
64006cc4:	mov    DWORD PTR [esp+0x2c],eax
64006cc8:	mov    DWORD PTR [esp+0x30],eax
64006ccc:	mov    DWORD PTR [esp+0x34],eax
64006cd0:	mov    eax,DWORD PTR [ebp+0xc]
64006cd3:	push   esi
64006cd4:	push   edi
64006cd5:	mov    edi,DWORD PTR [ebp+0x8]
64006cd8:	add    eax,0xc
64006cdb:	mov    DWORD PTR [esp+0xc],edi
64006cdf:	mov    DWORD PTR [esp+0x18],eax
64006ce3:	mov    eax,0x14
64006ce8:	lea    ecx,[esp+0x2c]
64006cec:	mov    edx,edi
64006cee:	mov    edi,edi
64006cf0:	mov    esi,DWORD PTR [edx]
64006cf2:	cmp    esi,DWORD PTR [ecx]
64006cf4:	jne    0x64006d08
64006cf6:	sub    eax,0x4
64006cf9:	add    ecx,0x4
64006cfc:	add    edx,0x4
64006cff:	cmp    eax,0x4
64006d02:	jae    0x64006cf0
64006d04:	test   eax,eax
64006d06:	je     0x64006d65
64006d08:	movzx  esi,BYTE PTR [edx]
64006d0b:	movzx  ebx,BYTE PTR [ecx]
64006d0e:	sub    esi,ebx
64006d10:	jne    0x64006d57
64006d12:	sub    eax,0x1
64006d15:	add    ecx,0x1
64006d18:	add    edx,0x1
64006d1b:	test   eax,eax
64006d1d:	je     0x64006d65
64006d1f:	movzx  esi,BYTE PTR [edx]
64006d22:	movzx  ebx,BYTE PTR [ecx]
64006d25:	sub    esi,ebx
64006d27:	jne    0x64006d57
64006d29:	sub    eax,0x1
64006d2c:	add    ecx,0x1
64006d2f:	add    edx,0x1
64006d32:	test   eax,eax
64006d34:	je     0x64006d65
64006d36:	movzx  esi,BYTE PTR [edx]
64006d39:	movzx  ebx,BYTE PTR [ecx]
64006d3c:	sub    esi,ebx
64006d3e:	jne    0x64006d57
64006d40:	sub    eax,0x1
64006d43:	add    ecx,0x1
64006d46:	add    edx,0x1
64006d49:	test   eax,eax
64006d4b:	je     0x64006d65
64006d4d:	movzx  esi,BYTE PTR [edx]
64006d50:	movzx  ecx,BYTE PTR [ecx]
64006d53:	sub    esi,ecx
64006d55:	je     0x64006d65
64006d57:	test   esi,esi
64006d59:	mov    eax,0x1
64006d5e:	jg     0x64006d67
64006d60:	or     eax,0xffffffff
64006d63:	jmp    0x64006d67
64006d65:	xor    eax,eax
64006d67:	test   eax,eax
64006d69:	je     0x64006e4d
64006d6f:	mov    eax,DWORD PTR [ebp+0xc]
64006d72:	sub    eax,DWORD PTR [ebp+0x8]
64006d75:	cdq    
64006d76:	mov    ebx,eax
64006d78:	mov    DWORD PTR [esp+0x24],edx
64006d7c:	mov    edx,DWORD PTR [esp+0x18]
64006d80:	mov    eax,DWORD PTR [edx]
64006d82:	lea    esi,[eax+ebx*1+0x64000000]
64006d89:	push   esi
64006d8a:	mov    DWORD PTR [esp+0x24],ebx
64006d8e:	call   DWORD PTR ds:0x6402c0a8
64006d94:	test   eax,eax
64006d96:	mov    DWORD PTR [esp+0x1c],eax
64006d9a:	jne    0x64006da7
64006d9c:	push   esi
64006d9d:	call   DWORD PTR ds:0x6402c0a0
64006da3:	mov    DWORD PTR [esp+0x1c],eax
64006da7:	mov    edi,DWORD PTR [edi]
64006da9:	mov    ecx,DWORD PTR [esp+0xc]
64006dad:	mov    esi,DWORD PTR [ecx+0x10]
64006db0:	add    edi,0x64000000
64006db6:	add    esi,0x64000000
64006dbc:	cmp    DWORD PTR [edi],0x0
64006dbf:	lea    edx,[ebx+edi*1]
64006dc2:	mov    DWORD PTR [esp+0x14],edx
64006dc6:	je     0x64006e2e
64006dc8:	mov    eax,DWORD PTR [esp+0x14]
64006dcc:	mov    eax,DWORD PTR [eax]
64006dce:	test   eax,eax
64006dd0:	je     0x64006e1e
64006dd2:	js     0x64006e1e
64006dd4:	mov    edx,DWORD PTR [esp+0x1c]
64006dd8:	lea    ecx,[eax+ebx*1+0x64000002]
64006ddf:	push   ecx
64006de0:	push   edx
64006de1:	call   DWORD PTR ds:0x6402c0a4
64006de7:	mov    ebx,eax
64006de9:	xor    eax,eax
64006deb:	mov    ecx,ebx
64006ded:	or     ecx,eax
64006def:	je     0x64006e44
64006df1:	lea    edx,[esp+0x10]
64006df5:	push   edx
64006df6:	push   0x40
64006df8:	push   0x4
64006dfa:	push   esi
64006dfb:	mov    DWORD PTR [esp+0x20],eax
64006dff:	call   DWORD PTR ds:0x6405452c
64006e05:	mov    ecx,DWORD PTR [esp+0x10]
64006e09:	lea    eax,[esp+0x10]
64006e0d:	push   eax
64006e0e:	push   ecx
64006e0f:	push   0x4
64006e11:	push   esi
64006e12:	mov    DWORD PTR [esi],ebx
64006e14:	call   DWORD PTR ds:0x6405452c
64006e1a:	mov    ebx,DWORD PTR [esp+0x20]
64006e1e:	add    DWORD PTR [esp+0x14],0x4
64006e23:	add    edi,0x4
64006e26:	add    esi,0x4
64006e29:	cmp    DWORD PTR [edi],0x0
64006e2c:	jne    0x64006dc8
64006e2e:	mov    eax,0x14
64006e33:	add    DWORD PTR [esp+0xc],eax
64006e37:	add    DWORD PTR [esp+0x18],eax
64006e3b:	mov    edi,DWORD PTR [esp+0xc]
64006e3f:	jmp    0x64006ce3
64006e44:	xor    al,al
64006e46:	pop    edi
64006e47:	pop    esi
64006e48:	pop    ebx
64006e49:	mov    esp,ebp
64006e4b:	pop    ebp
64006e4c:	ret    
64006e4d:	pop    edi
64006e4e:	pop    esi
64006e4f:	mov    al,0x1
64006e51:	pop    ebx
64006e52:	mov    esp,ebp
64006e54:	pop    ebp
64006e55:	ret    
64006e56:	int3   
64006e57:	int3   
64006e58:	int3   
64006e59:	int3   
64006e5a:	int3   
64006e5b:	int3   
64006e5c:	int3   
64006e5d:	int3   
64006e5e:	int3   
64006e5f:	int3   
64006e60:	mov    eax,0x853c
64006e65:	call   0x64017ee0
64006e6a:	mov    eax,ds:0x640521ac
64006e6f:	xor    eax,esp
64006e71:	mov    DWORD PTR [esp+0x8538],eax
64006e78:	push   ebx
64006e79:	push   esi
64006e7a:	push   edi
64006e7b:	mov    edi,DWORD PTR [esp+0x854c]
64006e82:	push   0x64042af4
64006e87:	push   0x64042b04
64006e8c:	call   DWORD PTR ds:0x6402c0a8
64006e92:	push   eax
64006e93:	call   DWORD PTR ds:0x6402c0a4
64006e99:	mov    ds:0x6405452c,eax
64006e9e:	mov    eax,ds:0x6400003c
64006ea3:	mov    eax,DWORD PTR [eax+0x64000080]
64006ea9:	test   eax,eax
64006eab:	je     0x64006eb9
64006ead:	lea    ecx,[eax+0x64000000]
64006eb3:	mov    DWORD PTR [esp+0x10],ecx
64006eb7:	jmp    0x64006ec1
64006eb9:	mov    DWORD PTR [esp+0x10],0x0
64006ec1:	push   0x64041d90
64006ec6:	push   0x2711
64006ecb:	push   edi
64006ecc:	call   DWORD PTR ds:0x6402c024
64006ed2:	mov    esi,eax
64006ed4:	test   esi,esi
64006ed6:	je     0x64006f85
64006edc:	push   esi
64006edd:	push   edi
64006ede:	call   DWORD PTR ds:0x6402c020
64006ee4:	mov    ebx,eax
64006ee6:	test   ebx,ebx
64006ee8:	je     0x64006f85
64006eee:	push   esi
64006eef:	push   edi
64006ef0:	call   DWORD PTR ds:0x6402c018
64006ef6:	push   ebx
64006ef7:	mov    esi,eax
64006ef9:	call   DWORD PTR ds:0x6402c01c
64006eff:	mov    ebx,eax
64006f01:	mov    eax,0x4
64006f06:	mov    ecx,0x64042af0
64006f0b:	mov    edx,ebx
64006f0d:	push   ebp
64006f0e:	mov    edi,edi
64006f10:	mov    edi,DWORD PTR [edx]
64006f12:	cmp    edi,DWORD PTR [ecx]
64006f14:	jne    0x64006f28
64006f16:	sub    eax,0x4
64006f19:	add    ecx,0x4
64006f1c:	add    edx,0x4
64006f1f:	cmp    eax,0x4
64006f22:	jae    0x64006f10
64006f24:	test   eax,eax
64006f26:	je     0x64006f9f
64006f28:	movzx  edi,BYTE PTR [edx]
64006f2b:	movzx  ebp,BYTE PTR [ecx]
64006f2e:	sub    edi,ebp
64006f30:	jne    0x64006f77
64006f32:	sub    eax,0x1
64006f35:	add    ecx,0x1
64006f38:	add    edx,0x1
64006f3b:	test   eax,eax
64006f3d:	je     0x64006f9f
64006f3f:	movzx  edi,BYTE PTR [edx]
64006f42:	movzx  ebp,BYTE PTR [ecx]
64006f45:	sub    edi,ebp
64006f47:	jne    0x64006f77
64006f49:	sub    eax,0x1
64006f4c:	add    ecx,0x1
64006f4f:	add    edx,0x1
64006f52:	test   eax,eax
64006f54:	je     0x64006f9f
64006f56:	movzx  edi,BYTE PTR [edx]
64006f59:	movzx  ebp,BYTE PTR [ecx]
64006f5c:	sub    edi,ebp
64006f5e:	jne    0x64006f77
64006f60:	sub    eax,0x1
64006f63:	add    ecx,0x1
64006f66:	add    edx,0x1
64006f69:	test   eax,eax
64006f6b:	je     0x64006f9f
64006f6d:	movzx  edi,BYTE PTR [edx]
64006f70:	movzx  edx,BYTE PTR [ecx]
64006f73:	sub    edi,edx
64006f75:	je     0x64006f9f
64006f77:	test   edi,edi
64006f79:	mov    eax,0x1
64006f7e:	jg     0x64006fa1
64006f80:	or     eax,0xffffffff
64006f83:	jmp    0x64006fa1
64006f85:	pop    edi
64006f86:	pop    esi
64006f87:	xor    al,al
64006f89:	pop    ebx
64006f8a:	mov    ecx,DWORD PTR [esp+0x8538]
64006f91:	xor    ecx,esp
64006f93:	call   0x64013ca6
64006f98:	add    esp,0x853c
64006f9e:	ret    
64006f9f:	xor    eax,eax
64006fa1:	test   eax,eax
64006fa3:	pop    ebp
64006fa4:	jne    0x64006f85
64006fa6:	mov    edi,DWORD PTR [ebx+0x4]
64006fa9:	push   edi
64006faa:	lea    eax,[ebx+0x8]
64006fad:	push   eax
64006fae:	lea    ecx,[esp+0x1c]
64006fb2:	push   ecx
64006fb3:	call   0x64015180
64006fb8:	sub    esi,edi
64006fba:	sub    esi,0x8
64006fbd:	push   esi
64006fbe:	lea    edx,[edi+ebx*1+0x8]
64006fc2:	push   edx
64006fc3:	lea    eax,[esp+0x1028]
64006fca:	push   eax
64006fcb:	call   0x64015180
64006fd0:	add    esp,0x18
64006fd3:	xor    ecx,ecx
64006fd5:	xor    edx,edx
64006fd7:	test   esi,esi
64006fd9:	je     0x64006ff9
64006fdb:	jmp    0x64006fe0
64006fdd:	lea    ecx,[ecx+0x0]
64006fe0:	mov    al,BYTE PTR [esp+edx*1+0x14]
64006fe4:	xor    BYTE PTR [esp+ecx*1+0x1014],al
64006feb:	lea    eax,[edx+0x1]
64006fee:	xor    edx,edx
64006ff0:	add    ecx,0x1
64006ff3:	div    edi
64006ff5:	cmp    ecx,esi
64006ff7:	jne    0x64006fe0
64006ff9:	mov    edi,DWORD PTR [esp+0x10]
64006ffd:	lea    ecx,[esp+0xc]
64007001:	push   ecx
64007002:	push   0x40
64007004:	push   esi
64007005:	push   edi
64007006:	mov    DWORD PTR [esp+0x1c],0x0
6400700e:	call   DWORD PTR ds:0x6405452c
64007014:	lea    edx,[esp+0x1014]
6400701b:	push   edx
6400701c:	push   edi
6400701d:	call   0x64006cb0
64007022:	mov    ecx,DWORD PTR [esp+0x14]
64007026:	add    esp,0x8
64007029:	mov    bl,al
6400702b:	lea    eax,[esp+0xc]
6400702f:	push   eax
64007030:	push   ecx
64007031:	push   esi
64007032:	push   edi
64007033:	call   DWORD PTR ds:0x6405452c
64007039:	mov    ecx,DWORD PTR [esp+0x8544]
64007040:	pop    edi
64007041:	pop    esi
64007042:	mov    al,bl
64007044:	pop    ebx
64007045:	xor    ecx,esp
64007047:	call   0x64013ca6
6400704c:	add    esp,0x853c
64007052:	ret    
64007053:	int3   
64007054:	int3   
64007055:	int3   
64007056:	int3   
64007057:	int3   
64007058:	int3   
64007059:	int3   
6400705a:	int3   
6400705b:	int3   
6400705c:	int3   
6400705d:	int3   
6400705e:	int3   
6400705f:	int3   
64007060:	mov    eax,ecx
64007062:	mov    cl,BYTE PTR [esp+0x8]
64007066:	mov    BYTE PTR [eax],cl
64007068:	mov    DWORD PTR [eax+0x4],0xffffffff
6400706f:	mov    BYTE PTR [eax+0x8],0x1
64007073:	ret    0x8
64007076:	int3   
64007077:	int3   
64007078:	int3   
64007079:	int3   
6400707a:	int3   
6400707b:	int3   
6400707c:	int3   
6400707d:	int3   
6400707e:	int3   
6400707f:	int3   
64007080:	push   esi
64007081:	mov    esi,ecx
64007083:	push   edi
64007084:	mov    edi,DWORD PTR [esi+0x4]
64007087:	test   edi,edi
64007089:	je     0x640070a3
6400708b:	push   ebx
6400708c:	call   DWORD PTR ds:0x6402c06c
64007092:	push   edi
64007093:	mov    ebx,eax
64007095:	call   DWORD PTR ds:0x6402c078
6400709b:	push   ebx
6400709c:	call   DWORD PTR ds:0x6402c074
640070a2:	pop    ebx
640070a3:	pop    edi
640070a4:	mov    DWORD PTR [esi+0x4],0x0
640070ab:	pop    esi
640070ac:	ret    
640070ad:	int3   
640070ae:	int3   
640070af:	int3   
640070b0:	push   ebp
640070b1:	mov    ebp,esp
640070b3:	and    esp,0xfffffff8
640070b6:	push   0xffffffff
640070b8:	push   0x640239d8
640070bd:	mov    eax,fs:0x0
640070c3:	push   eax
640070c4:	sub    esp,0x50
640070c7:	push   ebx
640070c8:	push   esi
640070c9:	push   edi
640070ca:	mov    eax,ds:0x640521ac
640070cf:	xor    eax,esp
640070d1:	push   eax
640070d2:	lea    eax,[esp+0x60]
640070d6:	mov    fs:0x0,eax
640070dc:	xor    ebx,ebx
640070de:	mov    DWORD PTR [esp+0x10],ebx
640070e2:	mov    DWORD PTR [esp+0x14],ebx
640070e6:	push   0xa
640070e8:	mov    DWORD PTR [esp+0x6c],ebx
640070ec:	call   0x64012f3a
640070f1:	mov    edi,eax
640070f3:	add    esp,0x4
640070f6:	mov    DWORD PTR [esp+0x10],edi
640070fa:	mov    eax,DWORD PTR [ebp+0x10]
640070fd:	cmp    eax,ebx
640070ff:	mov    BYTE PTR [esp+0x68],0x1
64007104:	mov    DWORD PTR [edi+0x4],0x2
6400710b:	je     0x64007114
6400710d:	mov    ax,WORD PTR [eax]
64007110:	mov    WORD PTR [edi+0x8],ax
64007114:	mov    eax,DWORD PTR [edi+0x4]
64007117:	mov    ecx,DWORD PTR [ebp+0x8]
6400711a:	add    eax,0x8
6400711d:	push   eax
6400711e:	push   edi
6400711f:	push   eax
64007120:	push   edi
64007121:	push   0x3
64007123:	call   0x64007320
64007128:	test   eax,eax
6400712a:	jne    0x6400718f
6400712c:	push   0x64042b14
64007131:	push   0x19
64007133:	push   0x64042b50
64007138:	call   0x64002e90
6400713d:	mov    ecx,eax
6400713f:	add    esp,0xc
64007142:	mov    DWORD PTR [esp+0x30],0xf
6400714a:	mov    DWORD PTR [esp+0x2c],ebx
6400714e:	mov    BYTE PTR [esp+0x1c],0x0
64007153:	lea    esi,[ecx+0x1]
64007156:	mov    dl,BYTE PTR [ecx]
64007158:	add    ecx,0x1
6400715b:	test   dl,dl
6400715d:	jne    0x64007156
6400715f:	sub    ecx,esi
64007161:	push   ecx
64007162:	push   eax
64007163:	lea    ecx,[esp+0x20]
64007167:	call   0x64003450
6400716c:	lea    ecx,[esp+0x18]
64007170:	push   ecx
64007171:	lea    edx,[esp+0x38]
64007175:	push   edx
64007176:	mov    BYTE PTR [esp+0x70],0x2
6400717b:	call   0x64001470
64007180:	push   0x64044070
64007185:	lea    eax,[esp+0x38]
64007189:	push   eax
6400718a:	call   0x64013812
6400718f:	cmp    DWORD PTR [edi],0x1
64007192:	jne    0x640071e8
64007194:	mov    ebx,DWORD PTR [edi+0x4]
64007197:	lea    ecx,[ebx+0x8]
6400719a:	push   ecx
6400719b:	call   0x64012f3a
640071a0:	mov    esi,eax
640071a2:	add    esp,0x4
640071a5:	cmp    esi,edi
640071a7:	je     0x640071b2
640071a9:	push   edi
640071aa:	call   0x640135e4
640071af:	add    esp,0x4
640071b2:	mov    eax,DWORD PTR [ebp+0x10]
640071b5:	test   eax,eax
640071b7:	mov    edi,esi
640071b9:	mov    DWORD PTR [esp+0x10],edi
640071bd:	mov    DWORD PTR [esi+0x4],ebx
640071c0:	je     0x640071c9
640071c2:	mov    dx,WORD PTR [eax]
640071c5:	mov    WORD PTR [esi+0x8],dx
640071c9:	mov    eax,DWORD PTR [esi+0x4]
640071cc:	mov    ecx,DWORD PTR [ebp+0x8]
640071cf:	add    eax,0x8
640071d2:	push   eax
640071d3:	push   esi
640071d4:	push   eax
640071d5:	push   esi
640071d6:	push   0x3
640071d8:	call   0x64007320
640071dd:	test   eax,eax
640071df:	je     0x64007231
640071e1:	cmp    DWORD PTR [esi],0x1
640071e4:	je     0x64007194
640071e6:	xor    ebx,ebx
640071e8:	cmp    DWORD PTR [edi],ebx
640071ea:	je     0x64007299
640071f0:	push   0x64042ba8
640071f5:	push   0x19
640071f7:	push   0x64042b50
640071fc:	call   0x64002e90
64007201:	add    esp,0xc
64007204:	push   eax
64007205:	lea    ecx,[esp+0x1c]
64007209:	call   0x64002970
6400720e:	lea    eax,[esp+0x18]
64007212:	push   eax
64007213:	lea    ecx,[esp+0x38]
64007217:	push   ecx
64007218:	mov    BYTE PTR [esp+0x70],0x4
6400721d:	call   0x64001470
64007222:	push   0x64044070
64007227:	lea    edx,[esp+0x38]
6400722b:	push   edx
6400722c:	call   0x64013812
64007231:	push   0x64042b6c
64007236:	push   0x19
64007238:	push   0x64042b50
6400723d:	call   0x64002e90
64007242:	mov    ecx,eax
64007244:	add    esp,0xc
64007247:	mov    DWORD PTR [esp+0x30],0xf
6400724f:	mov    DWORD PTR [esp+0x2c],0x0
64007257:	mov    BYTE PTR [esp+0x1c],0x0
6400725c:	lea    esi,[ecx+0x1]
6400725f:	nop
64007260:	mov    dl,BYTE PTR [ecx]
64007262:	add    ecx,0x1
64007265:	test   dl,dl
64007267:	jne    0x64007260
64007269:	sub    ecx,esi
6400726b:	push   ecx
6400726c:	push   eax
6400726d:	lea    ecx,[esp+0x20]
64007271:	call   0x64003450
64007276:	lea    eax,[esp+0x18]
6400727a:	push   eax
6400727b:	lea    ecx,[esp+0x38]
6400727f:	push   ecx
64007280:	mov    BYTE PTR [esp+0x70],0x3
64007285:	call   0x64001470
6400728a:	push   0x64044070
6400728f:	lea    edx,[esp+0x38]
64007293:	push   edx
64007294:	call   0x64013812
64007299:	mov    eax,DWORD PTR [edi+0x4]
6400729c:	mov    esi,DWORD PTR [ebp+0xc]
6400729f:	push   eax
640072a0:	lea    eax,[edi+0x8]
640072a3:	mov    DWORD PTR [esi+0x18],0xf
640072aa:	mov    DWORD PTR [esi+0x14],ebx
640072ad:	push   eax
640072ae:	mov    ecx,esi
640072b0:	mov    BYTE PTR [esi+0x4],0x0
640072b4:	call   0x64003450
640072b9:	push   edi
640072ba:	call   0x640135e4
640072bf:	add    esp,0x4
640072c2:	push   ebx
640072c3:	call   0x640135e4
640072c8:	add    esp,0x4
640072cb:	mov    eax,esi
640072cd:	mov    ecx,DWORD PTR [esp+0x60]
640072d1:	mov    DWORD PTR fs:0x0,ecx
640072d8:	pop    ecx
640072d9:	pop    edi
640072da:	pop    esi
640072db:	pop    ebx
640072dc:	mov    esp,ebp
640072de:	pop    ebp
640072df:	ret    0xc
640072e2:	int3   
640072e3:	int3   
640072e4:	int3   
640072e5:	int3   
640072e6:	int3   
640072e7:	int3   
640072e8:	int3   
640072e9:	int3   
640072ea:	int3   
640072eb:	int3   
640072ec:	int3   
640072ed:	int3   
640072ee:	int3   
640072ef:	int3   
640072f0:	push   ecx
640072f1:	push   esi
640072f2:	mov    esi,DWORD PTR [esp+0xc]
640072f6:	lea    eax,[esp+0x10]
640072fa:	push   eax
640072fb:	push   esi
640072fc:	push   ecx
640072fd:	mov    DWORD PTR [esp+0x10],0x0
64007305:	call   0x640070b0
6400730a:	mov    eax,esi
6400730c:	pop    esi
6400730d:	pop    ecx
6400730e:	ret    0x8
64007311:	int3   
64007312:	int3   
64007313:	int3   
64007314:	int3   
64007315:	int3   
64007316:	int3   
64007317:	int3   
64007318:	int3   
64007319:	int3   
6400731a:	int3   
6400731b:	int3   
6400731c:	int3   
6400731d:	int3   
6400731e:	int3   
6400731f:	int3   
64007320:	push   0xffffffff
64007322:	push   0x64023988
64007327:	mov    eax,fs:0x0
6400732d:	push   eax
6400732e:	sub    esp,0x8
64007331:	push   ebx
64007332:	push   ebp
64007333:	push   esi
64007334:	push   edi
64007335:	mov    eax,ds:0x640521ac
6400733a:	xor    eax,esp
6400733c:	push   eax
6400733d:	lea    eax,[esp+0x1c]
64007341:	mov    fs:0x0,eax
64007347:	mov    esi,ecx
64007349:	xor    ebp,ebp
6400734b:	mov    DWORD PTR [esp+0x18],ebp
6400734f:	mov    DWORD PTR [esp+0x24],ebp
64007353:	cmp    BYTE PTR [esi],0x0
64007356:	jne    0x64007363
64007358:	call   0x64007450
6400735d:	mov    ebp,eax
6400735f:	mov    edi,ebp
64007361:	jmp    0x64007399
64007363:	cmp    DWORD PTR [esi+0x4],0xffffffff
64007367:	jne    0x64007396
64007369:	call   0x64007450
6400736e:	mov    edi,DWORD PTR [esi+0x4]
64007371:	cmp    edi,ebp
64007373:	mov    DWORD PTR [esp+0x18],eax
64007377:	je     0x6400738f
64007379:	call   DWORD PTR ds:0x6402c06c
6400737f:	push   edi
64007380:	mov    ebx,eax
64007382:	call   DWORD PTR ds:0x6402c078
64007388:	push   ebx
64007389:	call   DWORD PTR ds:0x6402c074
6400738f:	mov    eax,DWORD PTR [esp+0x18]
64007393:	mov    DWORD PTR [esi+0x4],eax
64007396:	mov    edi,DWORD PTR [esi+0x4]
64007399:	cmp    edi,0xffffffff
6400739c:	jne    0x640073bc
6400739e:	test   ebp,ebp
640073a0:	je     0x640073b8
640073a2:	call   DWORD PTR ds:0x6402c06c
640073a8:	push   ebp
640073a9:	mov    esi,eax
640073ab:	call   DWORD PTR ds:0x6402c078
640073b1:	push   esi
640073b2:	call   DWORD PTR ds:0x6402c074
640073b8:	xor    eax,eax
640073ba:	jmp    0x6400742b
640073bc:	mov    ecx,DWORD PTR [esp+0x3c]
640073c0:	mov    edx,DWORD PTR [esp+0x38]
640073c4:	mov    eax,DWORD PTR [esp+0x2c]
640073c8:	push   ecx
640073c9:	mov    ecx,DWORD PTR [esp+0x38]
640073cd:	push   edx
640073ce:	mov    edx,DWORD PTR [esp+0x38]
640073d2:	push   eax
640073d3:	push   esi
640073d4:	call   0x64007660
640073d9:	mov    ebx,eax
640073db:	test   ebx,ebx
640073dd:	mov    DWORD PTR [esp+0x3c],ebx
640073e1:	jne    0x6400740f
640073e3:	cmp    BYTE PTR [esi],al
640073e5:	je     0x6400740f
640073e7:	mov    edi,DWORD PTR [esi+0x4]
640073ea:	test   edi,edi
640073ec:	je     0x64007408
640073ee:	call   DWORD PTR ds:0x6402c06c
640073f4:	push   edi
640073f5:	mov    ebx,eax
640073f7:	call   DWORD PTR ds:0x6402c078
640073fd:	push   ebx
640073fe:	call   DWORD PTR ds:0x6402c074
64007404:	mov    ebx,DWORD PTR [esp+0x3c]
64007408:	mov    DWORD PTR [esi+0x4],0x0
6400740f:	test   ebp,ebp
64007411:	je     0x64007429
64007413:	call   DWORD PTR ds:0x6402c06c
64007419:	push   ebp
6400741a:	mov    esi,eax
6400741c:	call   DWORD PTR ds:0x6402c078
64007422:	push   esi
64007423:	call   DWORD PTR ds:0x6402c074
64007429:	mov    eax,ebx
6400742b:	mov    ecx,DWORD PTR [esp+0x1c]
6400742f:	mov    DWORD PTR fs:0x0,ecx
64007436:	pop    ecx
64007437:	pop    edi
64007438:	pop    esi
64007439:	pop    ebp
6400743a:	pop    ebx
6400743b:	add    esp,0x14
6400743e:	ret    0x14
64007441:	int3   
64007442:	int3   
64007443:	int3   
64007444:	int3   
64007445:	int3   
64007446:	int3   
64007447:	int3   
64007448:	int3   
64007449:	int3   
6400744a:	int3   
6400744b:	int3   
6400744c:	int3   
6400744d:	int3   
6400744e:	int3   
6400744f:	int3   
64007450:	push   ebp
64007451:	mov    ebp,esp
64007453:	and    esp,0xfffffff8
64007456:	push   0xffffffff
64007458:	push   0x6402395e
6400745d:	mov    eax,fs:0x0
64007463:	push   eax
64007464:	sub    esp,0x14
64007467:	push   ebx
64007468:	push   ebp
64007469:	push   esi
6400746a:	push   edi
6400746b:	mov    eax,ds:0x640521ac
64007470:	xor    eax,esp
64007472:	push   eax
64007473:	lea    eax,[esp+0x28]
64007477:	mov    fs:0x0,eax
6400747d:	xor    edi,edi
6400747f:	mov    DWORD PTR [esp+0x1c],edi
64007483:	lea    eax,[esp+0x18]
64007487:	mov    DWORD PTR [esp+0x30],edi
6400748b:	mov    ecx,DWORD PTR ds:0x64054660
64007491:	push   eax
64007492:	call   0x64002ad0
64007497:	mov    ebx,0x1
6400749c:	mov    BYTE PTR [esp+0x30],bl
640074a0:	test   BYTE PTR ds:0x64054668,bl
640074a6:	jne    0x640074f3
640074a8:	or     DWORD PTR ds:0x64054668,ebx
640074ae:	push   0x64042bd4
640074b3:	push   0xb
640074b5:	push   0x64042c08
640074ba:	mov    BYTE PTR [esp+0x3c],0x2
640074bf:	call   0x64002e90
640074c4:	add    esp,0xc
640074c7:	push   eax
640074c8:	push   0x64042c14
640074cd:	push   0xc
640074cf:	push   0x64042c38
640074d4:	call   0x64002e90
640074d9:	add    esp,0xc
640074dc:	push   eax
640074dd:	call   DWORD PTR ds:0x6402c0a8
640074e3:	push   eax
640074e4:	call   DWORD PTR ds:0x6402c0a4
640074ea:	mov    ds:0x64054664,eax
640074ef:	mov    BYTE PTR [esp+0x30],bl
640074f3:	mov    ebx,DWORD PTR ds:0x6402c06c
640074f9:	lea    esp,[esp+0x0]
64007500:	mov    ecx,DWORD PTR [esp+0x18]
64007504:	push   0x0
64007506:	push   0x0
64007508:	push   0x3
6400750a:	push   0x0
6400750c:	push   0x0
6400750e:	push   0xc0000000
64007513:	push   ecx
64007514:	call   DWORD PTR ds:0x64054664
6400751a:	test   edi,edi
6400751c:	mov    esi,eax
6400751e:	je     0x64007536
64007520:	call   ebx
64007522:	push   edi
64007523:	mov    ebp,eax
64007525:	call   DWORD PTR ds:0x6402c078
6400752b:	push   ebp
6400752c:	mov    ebp,DWORD PTR ds:0x6402c074
64007532:	call   ebp
64007534:	jmp    0x6400753c
64007536:	mov    ebp,DWORD PTR ds:0x6402c074
6400753c:	cmp    esi,0xffffffff
6400753f:	mov    edi,esi
64007541:	mov    DWORD PTR [esp+0x1c],edi
64007545:	jne    0x6400756d
64007547:	call   ebx
64007549:	cmp    eax,0xe7
6400754e:	jne    0x64007609
64007554:	mov    edx,DWORD PTR [esp+0x18]
64007558:	push   0x1f4
6400755d:	push   edx
6400755e:	call   DWORD PTR ds:0x6402c0ac
64007564:	test   eax,eax
64007566:	jne    0x64007500
64007568:	jmp    0x6400760b
6400756d:	push   0x0
6400756f:	push   0x0
64007571:	lea    eax,[esp+0x28]
64007575:	push   eax
64007576:	push   esi
64007577:	mov    DWORD PTR [esp+0x30],0x2
6400757f:	call   DWORD PTR ds:0x6402c0b0
64007585:	test   eax,eax
64007587:	jne    0x640075c6
64007589:	call   ebx
6400758b:	mov    BYTE PTR [esp+0x30],0x0
64007590:	mov    eax,DWORD PTR [esp+0x18]
64007594:	add    eax,0xfffffff0
64007597:	lea    ecx,[eax+0xc]
6400759a:	or     edx,0xffffffff
6400759d:	lock xadd DWORD PTR [ecx],edx
640075a1:	dec    edx
640075a2:	test   edx,edx
640075a4:	jg     0x640075b0
640075a6:	mov    ecx,DWORD PTR [eax]
640075a8:	mov    edx,DWORD PTR [ecx]
640075aa:	push   eax
640075ab:	mov    eax,DWORD PTR [edx+0x4]
640075ae:	call   eax
640075b0:	test   esi,esi
640075b2:	je     0x6400763f
640075b8:	call   ebx
640075ba:	push   esi
640075bb:	mov    edi,eax
640075bd:	call   DWORD PTR ds:0x6402c078
640075c3:	push   edi
640075c4:	jmp    0x6400763d
640075c6:	mov    BYTE PTR [esp+0x30],0x0
640075cb:	mov    eax,DWORD PTR [esp+0x18]
640075cf:	add    eax,0xfffffff0
640075d2:	mov    DWORD PTR [esp+0x1c],0x0
640075da:	lea    ecx,[eax+0xc]
640075dd:	or     edx,0xffffffff
640075e0:	lock xadd DWORD PTR [ecx],edx
640075e4:	dec    edx
640075e5:	test   edx,edx
640075e7:	jg     0x640075f3
640075e9:	mov    ecx,DWORD PTR [eax]
640075eb:	mov    edx,DWORD PTR [ecx]
640075ed:	push   eax
640075ee:	mov    eax,DWORD PTR [edx+0x4]
640075f1:	call   eax
640075f3:	mov    eax,esi
640075f5:	mov    ecx,DWORD PTR [esp+0x28]
640075f9:	mov    DWORD PTR fs:0x0,ecx
64007600:	pop    ecx
64007601:	pop    edi
64007602:	pop    esi
64007603:	pop    ebp
64007604:	pop    ebx
64007605:	mov    esp,ebp
64007607:	pop    ebp
64007608:	ret    
64007609:	call   ebx
6400760b:	mov    BYTE PTR [esp+0x30],0x0
64007610:	mov    eax,DWORD PTR [esp+0x18]
64007614:	add    eax,0xfffffff0
64007617:	or     edx,0xffffffff
6400761a:	lea    ecx,[eax+0xc]
6400761d:	lock xadd DWORD PTR [ecx],edx
64007621:	dec    edx
64007622:	test   edx,edx
64007624:	jg     0x64007630
64007626:	mov    ecx,DWORD PTR [eax]
64007628:	mov    edx,DWORD PTR [ecx]
6400762a:	push   eax
6400762b:	mov    eax,DWORD PTR [edx+0x4]
6400762e:	call   eax
64007630:	call   ebx
64007632:	push   0xffffffff
64007634:	mov    esi,eax
64007636:	call   DWORD PTR ds:0x6402c078
6400763c:	push   esi
6400763d:	call   ebp
6400763f:	or     eax,0xffffffff
64007642:	mov    ecx,DWORD PTR [esp+0x28]
64007646:	mov    DWORD PTR fs:0x0,ecx
6400764d:	pop    ecx
6400764e:	pop    edi
6400764f:	pop    esi
64007650:	pop    ebp
64007651:	pop    ebx
64007652:	mov    esp,ebp
64007654:	pop    ebp
64007655:	ret    
64007656:	int3   
64007657:	int3   
64007658:	int3   
64007659:	int3   
6400765a:	int3   
6400765b:	int3   
6400765c:	int3   
6400765d:	int3   
6400765e:	int3   
6400765f:	int3   
64007660:	sub    esp,0x40
64007663:	mov    eax,ds:0x640521ac
64007668:	xor    eax,esp
6400766a:	mov    DWORD PTR [esp+0x38],eax
6400766e:	xor    eax,eax
64007670:	push   ebx
64007671:	push   ebp
64007672:	mov    ebp,DWORD PTR [esp+0x54]
64007676:	mov    DWORD PTR [esp+0x2c],eax
6400767a:	mov    WORD PTR [esp+0x1c],ax
6400767f:	mov    DWORD PTR [esp+0x1e],eax
64007683:	mov    DWORD PTR [esp+0x22],eax
64007687:	mov    DWORD PTR [esp+0x26],eax
6400768b:	mov    WORD PTR [esp+0x2a],ax
64007690:	mov    DWORD PTR [esp+0x30],eax
64007694:	mov    DWORD PTR [esp+0x34],eax
64007698:	mov    DWORD PTR [esp+0x38],eax
6400769c:	mov    DWORD PTR [esp+0x3c],eax
640076a0:	mov    eax,DWORD PTR [esp+0x50]
640076a4:	push   esi
640076a5:	mov    ebx,ecx
640076a7:	mov    esi,edx
640076a9:	mov    DWORD PTR [esp+0x30],eax
640076ad:	call   DWORD PTR ds:0x6402c03c
640076b3:	mov    ecx,DWORD PTR [esp+0x5c]
640076b7:	cmp    esi,ebp
640076b9:	mov    DWORD PTR [esp+0x34],eax
640076bd:	mov    eax,DWORD PTR [esp+0x50]
640076c1:	sete   dl
640076c4:	cmp    BYTE PTR [eax+0x8],0x0
640076c8:	mov    DWORD PTR [esp+0x38],ebx
640076cc:	mov    DWORD PTR [esp+0x3c],ecx
640076d0:	mov    BYTE PTR [esp+0x40],dl
640076d4:	je     0x640076ea
640076d6:	push   0x8
640076d8:	lea    ecx,[esp+0x24]
640076dc:	push   0x64041a08
640076e1:	push   ecx
640076e2:	call   0x64014d93
640076e7:	add    esp,0xc
640076ea:	push   0x0
640076ec:	lea    edx,[esp+0x20]
640076f0:	push   edx
640076f1:	push   0x24
640076f3:	lea    eax,[esp+0x2c]
640076f7:	push   eax
640076f8:	push   edi
640076f9:	call   DWORD PTR ds:0x6402c094
640076ff:	test   eax,eax
64007701:	jne    0x64007719
64007703:	xor    eax,eax
64007705:	pop    esi
64007706:	pop    ebp
64007707:	pop    ebx
64007708:	mov    ecx,DWORD PTR [esp+0x38]
6400770c:	xor    ecx,esp
6400770e:	call   0x64013ca6
64007713:	add    esp,0x40
64007716:	ret    0x10
64007719:	push   0x0
6400771b:	lea    ecx,[esp+0x20]
6400771f:	push   ecx
64007720:	push   ebx
64007721:	push   esi
64007722:	push   edi
64007723:	call   DWORD PTR ds:0x6402c094
64007729:	test   eax,eax
6400772b:	je     0x64007703
6400772d:	mov    esi,DWORD PTR ds:0x6402c090
64007733:	xor    ebx,ebx
64007735:	push   ebx
64007736:	lea    edx,[esp+0x1c]
6400773a:	push   edx
6400773b:	push   0x8
6400773d:	lea    eax,[esp+0x1c]
64007741:	push   eax
64007742:	push   edi
64007743:	mov    DWORD PTR [esp+0x24],ebx
64007747:	mov    DWORD PTR [esp+0x28],ebx
6400774b:	call   esi
6400774d:	test   eax,eax
6400774f:	je     0x64007703
64007751:	cmp    DWORD PTR [esp+0x10],ebx
64007755:	je     0x64007703
64007757:	mov    eax,DWORD PTR [esp+0x14]
6400775b:	cmp    eax,DWORD PTR [esp+0x5c]
6400775f:	ja     0x64007703
64007761:	cmp    eax,ebx
64007763:	je     0x64007774
64007765:	push   ebx
64007766:	lea    ecx,[esp+0x1c]
6400776a:	push   ecx
6400776b:	push   eax
6400776c:	push   ebp
6400776d:	push   edi
6400776e:	call   esi
64007770:	test   eax,eax
64007772:	je     0x64007703
64007774:	mov    ecx,DWORD PTR [esp+0x44]
64007778:	pop    esi
64007779:	pop    ebp
6400777a:	pop    ebx
6400777b:	xor    ecx,esp
6400777d:	mov    eax,0x1
64007782:	call   0x64013ca6
64007787:	add    esp,0x40
6400778a:	ret    0x10
6400778d:	int3   
6400778e:	int3   
6400778f:	int3   
64007790:	push   eax
64007791:	push   ecx
64007792:	call   0x64014ecc
64007797:	add    esp,0x8
6400779a:	ret    
6400779b:	int3   
6400779c:	int3   
6400779d:	int3   
6400779e:	int3   
6400779f:	int3   
640077a0:	push   eax
640077a1:	mov    eax,DWORD PTR [esp+0x8]
640077a5:	push   ecx
640077a6:	push   edx
640077a7:	push   eax
640077a8:	call   0x64015061
640077ad:	add    esp,0x10
640077b0:	ret    
640077b1:	int3   
640077b2:	int3   
640077b3:	int3   
640077b4:	int3   
640077b5:	int3   
640077b6:	int3   
640077b7:	int3   
640077b8:	int3   
640077b9:	int3   
640077ba:	int3   
640077bb:	int3   
640077bc:	int3   
640077bd:	int3   
640077be:	int3   
640077bf:	int3   
640077c0:	push   ecx
640077c1:	xor    eax,eax
640077c3:	cmp    WORD PTR [esp+0x8],ax
640077c8:	mov    DWORD PTR [esp],eax
640077cb:	je     0x640077e0
640077cd:	mov    DWORD PTR [esp+0x8],eax
640077d1:	push   0x64044170
640077d6:	lea    eax,[esp+0xc]
640077da:	push   eax
640077db:	call   0x64013812
640077e0:	push   0x6404298c
640077e5:	push   0x64041d98
640077ea:	push   esi
640077eb:	mov    ecx,0xbf4
640077f0:	call   0x64006b00
640077f5:	add    esp,0xc
640077f8:	mov    eax,esi
640077fa:	pop    ecx
640077fb:	ret    
640077fc:	int3   
640077fd:	int3   
640077fe:	int3   
640077ff:	int3   
64007800:	push   ecx
64007801:	xor    eax,eax
64007803:	cmp    WORD PTR [esp+0x8],ax
64007808:	mov    DWORD PTR [esp],eax
6400780b:	je     0x64007820
6400780d:	mov    DWORD PTR [esp+0x8],eax
64007811:	push   0x64044170
64007816:	lea    eax,[esp+0xc]
6400781a:	push   eax
6400781b:	call   0x64013812
64007820:	push   0x64042a0c
64007825:	push   0x640429b8
6400782a:	push   esi
6400782b:	mov    ecx,0x53
64007830:	call   0x64006b00
64007835:	add    esp,0xc
64007838:	mov    eax,esi
6400783a:	pop    ecx
6400783b:	ret    
6400783c:	int3   
6400783d:	int3   
6400783e:	int3   
6400783f:	int3   
64007840:	sub    esp,0x8
64007843:	xor    eax,eax
64007845:	cmp    WORD PTR [esp+0xc],ax
6400784a:	mov    DWORD PTR [esp+0x4],eax
6400784e:	je     0x64007863
64007850:	mov    DWORD PTR [esp+0xc],eax
64007854:	push   0x64044170
64007859:	lea    eax,[esp+0x10]
6400785d:	push   eax
6400785e:	call   0x64013812
64007863:	push   0x64042ac8
64007868:	push   0x64042a38
6400786d:	push   esi
6400786e:	mov    ecx,0x8e
64007873:	call   0x64006b00
64007878:	add    esp,0xc
6400787b:	mov    eax,esi
6400787d:	add    esp,0x8
64007880:	ret    
64007881:	int3   
64007882:	int3   
64007883:	int3   
64007884:	int3   
64007885:	int3   
64007886:	int3   
64007887:	int3   
64007888:	int3   
64007889:	int3   
6400788a:	int3   
6400788b:	int3   
6400788c:	int3   
6400788d:	int3   
6400788e:	int3   
6400788f:	int3   
64007890:	mov    DWORD PTR [ecx],0x64043420
64007896:	ret    
64007897:	int3   
64007898:	int3   
64007899:	int3   
6400789a:	int3   
6400789b:	int3   
6400789c:	int3   
6400789d:	int3   
6400789e:	int3   
6400789f:	int3   
640078a0:	test   BYTE PTR [esp+0x4],0x1
640078a5:	push   esi
640078a6:	mov    esi,ecx
640078a8:	mov    DWORD PTR [esi],0x64043420
640078ae:	je     0x640078b9
640078b0:	push   esi
640078b1:	call   0x640135e4
640078b6:	add    esp,0x4
640078b9:	mov    eax,esi
640078bb:	pop    esi
640078bc:	ret    0x4
640078bf:	int3   
640078c0:	push   0xffffffff
640078c2:	push   0x640230f8
640078c7:	mov    eax,fs:0x0
640078cd:	push   eax
640078ce:	push   esi
640078cf:	mov    eax,ds:0x640521ac
640078d4:	xor    eax,esp
640078d6:	push   eax
640078d7:	lea    eax,[esp+0x8]
640078db:	mov    fs:0x0,eax
640078e1:	mov    esi,DWORD PTR [esp+0x18]
640078e5:	mov    eax,DWORD PTR [esp+0x1c]
640078e9:	mov    DWORD PTR [esp+0x10],0x0
640078f1:	mov    DWORD PTR [esi],0x6404342c
640078f7:	mov    eax,DWORD PTR [eax]
640078f9:	sub    eax,0x10
640078fc:	call   0x64004410
64007901:	add    eax,0x10
64007904:	mov    DWORD PTR [esi+0x4],eax
64007907:	mov    eax,esi
64007909:	mov    ecx,DWORD PTR [esp+0x8]
6400790d:	mov    DWORD PTR fs:0x0,ecx
64007914:	pop    ecx
64007915:	pop    esi
64007916:	add    esp,0xc
64007919:	ret    0x8
6400791c:	int3   
6400791d:	int3   
6400791e:	int3   
6400791f:	int3   
64007920:	mov    ecx,DWORD PTR [ecx+0x4]
64007923:	push   ecx
64007924:	call   DWORD PTR ds:0x6402c0e4
6400792a:	test   eax,eax
6400792c:	jne    0x64007933
6400792e:	xor    edx,edx
64007930:	ret    0x4
64007933:	mov    ecx,DWORD PTR [esp+0x4]
64007937:	push   ecx
64007938:	push   eax
64007939:	call   DWORD PTR ds:0x6402c0a4
6400793f:	xor    edx,edx
64007941:	ret    0x4
64007944:	int3   
64007945:	int3   
64007946:	int3   
64007947:	int3   
64007948:	int3   
64007949:	int3   
6400794a:	int3   
6400794b:	int3   
6400794c:	int3   
6400794d:	int3   
6400794e:	int3   
6400794f:	int3   
64007950:	push   esi
64007951:	mov    esi,ecx
64007953:	mov    eax,DWORD PTR [esi+0x4]
64007956:	sub    eax,0x10
64007959:	lea    ecx,[eax+0xc]
6400795c:	or     edx,0xffffffff
6400795f:	lock xadd DWORD PTR [ecx],edx
64007963:	dec    edx
64007964:	test   edx,edx
64007966:	jg     0x64007972
64007968:	mov    ecx,DWORD PTR [eax]
6400796a:	mov    edx,DWORD PTR [ecx]
6400796c:	push   eax
6400796d:	mov    eax,DWORD PTR [edx+0x4]
64007970:	call   eax
64007972:	test   BYTE PTR [esp+0x8],0x1
64007977:	mov    DWORD PTR [esi],0x64043420
6400797d:	je     0x64007988
6400797f:	push   esi
64007980:	call   0x640135e4
64007985:	add    esp,0x4
64007988:	mov    eax,esi
6400798a:	pop    esi
6400798b:	ret    0x4
6400798e:	int3   
6400798f:	int3   
64007990:	push   0xffffffff
64007992:	push   0x640232f3
64007997:	mov    eax,fs:0x0
6400799d:	push   eax
6400799e:	push   ecx
6400799f:	push   esi
640079a0:	mov    eax,ds:0x640521ac
640079a5:	xor    eax,esp
640079a7:	push   eax
640079a8:	lea    eax,[esp+0xc]
640079ac:	mov    fs:0x0,eax
640079b2:	xor    esi,esi
640079b4:	push   0x8
640079b6:	mov    DWORD PTR [esp+0x18],esi
640079ba:	call   0x64013875
640079bf:	add    esp,0x4
640079c2:	mov    DWORD PTR [esp+0x8],eax
640079c6:	cmp    eax,esi
640079c8:	mov    BYTE PTR [esp+0x14],0x1
640079cd:	je     0x640079dc
640079cf:	lea    ecx,[esp+0x1c]
640079d3:	push   ecx
640079d4:	push   eax
640079d5:	call   0x640078c0
640079da:	mov    esi,eax
640079dc:	mov    DWORD PTR [esp+0x14],0xffffffff
640079e4:	mov    eax,DWORD PTR [esp+0x1c]
640079e8:	add    eax,0xfffffff0
640079eb:	lea    edx,[eax+0xc]
640079ee:	or     ecx,0xffffffff
640079f1:	lock xadd DWORD PTR [edx],ecx
640079f5:	dec    ecx
640079f6:	test   ecx,ecx
640079f8:	jg     0x64007a04
640079fa:	mov    ecx,DWORD PTR [eax]
640079fc:	mov    edx,DWORD PTR [ecx]
640079fe:	push   eax
640079ff:	mov    eax,DWORD PTR [edx+0x4]
64007a02:	call   eax
64007a04:	mov    eax,esi
64007a06:	mov    ecx,DWORD PTR [esp+0xc]
64007a0a:	mov    DWORD PTR fs:0x0,ecx
64007a11:	pop    ecx
64007a12:	pop    esi
64007a13:	add    esp,0x10
64007a16:	ret    
64007a17:	int3   
64007a18:	int3   
64007a19:	int3   
64007a1a:	int3   
64007a1b:	int3   
64007a1c:	int3   
64007a1d:	int3   
64007a1e:	int3   
64007a1f:	int3   
64007a20:	push   esi
64007a21:	mov    esi,eax
64007a23:	call   0x64007b30
64007a28:	mov    ecx,esi
64007a2a:	pop    esi
64007a2b:	jmp    0x64009c00
64007a30:	push   0xffffffff
64007a32:	push   0x640234b8
64007a37:	mov    eax,fs:0x0
64007a3d:	push   eax
64007a3e:	sub    esp,0x28
64007a41:	push   ebx
64007a42:	push   ebp
64007a43:	push   esi
64007a44:	push   edi
64007a45:	mov    eax,ds:0x640521ac
64007a4a:	xor    eax,esp
64007a4c:	push   eax
64007a4d:	lea    eax,[esp+0x3c]
64007a51:	mov    fs:0x0,eax
64007a57:	mov    esi,ecx
64007a59:	call   DWORD PTR ds:0x6402c0f4
64007a5f:	mov    DWORD PTR [esp+0x18],eax
64007a63:	call   0x64007b30
64007a68:	push   0x0
64007a6a:	push   0x4
64007a6c:	call   0x64012e9e
64007a71:	mov    edi,eax
64007a73:	mov    DWORD PTR [esp+0x1c],edi
64007a77:	cmp    edi,0xffffffff
64007a7a:	mov    DWORD PTR [esp+0x44],0x0
64007a82:	jne    0x64007a8d
64007a84:	call   DWORD PTR ds:0x6402c06c
64007a8a:	push   edi
64007a8b:	jmp    0x64007afc
64007a8d:	lea    eax,[esp+0x20]
64007a91:	push   eax
64007a92:	push   edi
64007a93:	mov    DWORD PTR [esp+0x28],0x1c
64007a9b:	call   0x64012eb0
64007aa0:	test   eax,eax
64007aa2:	je     0x64007af1
64007aa4:	mov    ebx,DWORD PTR ds:0x6402c0d0
64007aaa:	mov    ebp,DWORD PTR ds:0x6402c0ec
64007ab0:	mov    ecx,DWORD PTR [esp+0x4c]
64007ab4:	cmp    DWORD PTR [esp+0x2c],ecx
64007ab8:	jne    0x64007ae2
64007aba:	mov    eax,DWORD PTR [esp+0x28]
64007abe:	cmp    DWORD PTR [esp+0x18],eax
64007ac2:	je     0x64007ae2
64007ac4:	push   eax
64007ac5:	push   0x0
64007ac7:	push   0x2
64007ac9:	call   ebx
64007acb:	lea    edx,[esp+0x14]
64007acf:	push   edx
64007ad0:	mov    ecx,esi
64007ad2:	mov    DWORD PTR [esp+0x18],eax
64007ad6:	call   0x64009bb0
64007adb:	mov    eax,DWORD PTR [esp+0x14]
64007adf:	push   eax
64007ae0:	call   ebp
64007ae2:	lea    ecx,[esp+0x20]
64007ae6:	push   ecx
64007ae7:	push   edi
64007ae8:	call   0x64012eb6
64007aed:	test   eax,eax
64007aef:	jne    0x64007ab0
64007af1:	test   edi,edi
64007af3:	je     0x64007b0b
64007af5:	call   DWORD PTR ds:0x6402c06c
64007afb:	push   edi
64007afc:	mov    esi,eax
64007afe:	call   DWORD PTR ds:0x6402c078
64007b04:	push   esi
64007b05:	call   DWORD PTR ds:0x6402c074
64007b0b:	mov    ecx,DWORD PTR [esp+0x3c]
64007b0f:	mov    DWORD PTR fs:0x0,ecx
64007b16:	pop    ecx
64007b17:	pop    edi
64007b18:	pop    esi
64007b19:	pop    ebp
64007b1a:	pop    ebx
64007b1b:	add    esp,0x34
64007b1e:	ret    0x4
64007b21:	int3   
64007b22:	int3   
64007b23:	int3   
64007b24:	int3   
64007b25:	int3   
64007b26:	int3   
64007b27:	int3   
64007b28:	int3   
64007b29:	int3   
64007b2a:	int3   
64007b2b:	int3   
64007b2c:	int3   
64007b2d:	int3   
64007b2e:	int3   
64007b2f:	int3   
64007b30:	mov    ecx,esi
64007b32:	call   0x64009b60
64007b37:	test   eax,eax
64007b39:	je     0x64007b7c
64007b3b:	push   ebx
64007b3c:	mov    ebx,DWORD PTR ds:0x6402c078
64007b42:	push   edi
64007b43:	mov    edi,DWORD PTR ds:0x6402c0f0
64007b49:	lea    esp,[esp+0x0]
64007b50:	mov    ecx,esi
64007b52:	call   0x64009b80
64007b57:	mov    eax,DWORD PTR [eax]
64007b59:	push   eax
64007b5a:	call   edi
64007b5c:	mov    ecx,esi
64007b5e:	call   0x64009b80
64007b63:	mov    ecx,DWORD PTR [eax]
64007b65:	push   ecx
64007b66:	call   ebx
64007b68:	mov    ecx,esi
64007b6a:	call   0x64009be0
64007b6f:	mov    ecx,esi
64007b71:	call   0x64009b60
64007b76:	test   eax,eax
64007b78:	jne    0x64007b50
64007b7a:	pop    edi
64007b7b:	pop    ebx
64007b7c:	ret    
64007b7d:	int3   
64007b7e:	int3   
64007b7f:	int3   
64007b80:	push   0xffffffff
64007b82:	push   0x6402391a
64007b87:	mov    eax,fs:0x0
64007b8d:	push   eax
64007b8e:	sub    esp,0x24
64007b91:	push   ebx
64007b92:	push   ebp
64007b93:	push   esi
64007b94:	push   edi
64007b95:	mov    eax,ds:0x640521ac
64007b9a:	xor    eax,esp
64007b9c:	push   eax
64007b9d:	lea    eax,[esp+0x38]
64007ba1:	mov    fs:0x0,eax
64007ba7:	mov    esi,ecx
64007ba9:	mov    edi,DWORD PTR [esp+0x48]
64007bad:	xor    ebx,ebx
64007baf:	mov    DWORD PTR [esp+0x14],ebx
64007bb3:	mov    DWORD PTR [edi],ebx
64007bb5:	mov    DWORD PTR [esp+0x40],ebx
64007bb9:	lea    ecx,[edi+0x894]
64007bbf:	push   ebx
64007bc0:	mov    DWORD PTR [edi+0x4],esi
64007bc3:	mov    DWORD PTR [edi+0x888],ebx
64007bc9:	mov    BYTE PTR [edi+0x890],bl
64007bcf:	call   0x64009c20
64007bd4:	push   esi
64007bd5:	push   ebx
64007bd6:	push   0x1f0fff
64007bdb:	mov    BYTE PTR [esp+0x4c],0x1
64007be0:	call   DWORD PTR ds:0x6402c0d4
64007be6:	mov    esi,DWORD PTR [edi]
64007be8:	test   esi,esi
64007bea:	mov    ebp,eax
64007bec:	je     0x64007c0a
64007bee:	call   DWORD PTR ds:0x6402c06c
64007bf4:	push   esi
64007bf5:	mov    DWORD PTR [esp+0x18],eax
64007bf9:	call   DWORD PTR ds:0x6402c078
64007bff:	mov    eax,DWORD PTR [esp+0x14]
64007c03:	push   eax
64007c04:	call   DWORD PTR ds:0x6402c074
64007c0a:	push   0x8
64007c0c:	mov    DWORD PTR [edi],ebp
64007c0e:	call   0x64013875
64007c13:	mov    ebp,eax
64007c15:	add    esp,0x4
64007c18:	mov    DWORD PTR [esp+0x18],ebp
64007c1c:	test   ebp,ebp
64007c1e:	mov    BYTE PTR [esp+0x40],0x2
64007c23:	je     0x64007c4b
64007c25:	push   0x0
64007c27:	lea    esi,[esp+0x20]
64007c2b:	call   0x640077c0
64007c30:	add    esp,0x4
64007c33:	mov    BYTE PTR [esp+0x40],0x3
64007c38:	mov    ebx,0x1
64007c3d:	push   ebp
64007c3e:	mov    ecx,eax
64007c40:	mov    DWORD PTR [esp+0x18],ebx
64007c44:	call   0x6400a820
64007c49:	jmp    0x64007c4d
64007c4b:	xor    eax,eax
64007c4d:	push   eax
64007c4e:	lea    ecx,[edi+0x894]
64007c54:	call   0x64009aa0
64007c59:	test   bl,0x1
64007c5c:	je     0x64007c72
64007c5e:	cmp    DWORD PTR [esp+0x34],0x10
64007c63:	jb     0x64007c72
64007c65:	mov    ecx,DWORD PTR [esp+0x20]
64007c69:	push   ecx
64007c6a:	call   0x640135e4
64007c6f:	add    esp,0x4
64007c72:	mov    eax,edi
64007c74:	mov    ecx,DWORD PTR [esp+0x38]
64007c78:	mov    DWORD PTR fs:0x0,ecx
64007c7f:	pop    ecx
64007c80:	pop    edi
64007c81:	pop    esi
64007c82:	pop    ebp
64007c83:	pop    ebx
64007c84:	add    esp,0x30
64007c87:	ret    0x4
64007c8a:	int3   
64007c8b:	int3   
64007c8c:	int3   
64007c8d:	int3   
64007c8e:	int3   
64007c8f:	int3   
64007c90:	push   0xffffffff
64007c92:	push   0x6402348e
64007c97:	mov    eax,fs:0x0
64007c9d:	push   eax
64007c9e:	sub    esp,0x98
64007ca4:	push   ebx
64007ca5:	push   ebp
64007ca6:	push   esi
64007ca7:	push   edi
64007ca8:	mov    eax,ds:0x640521ac
64007cad:	xor    eax,esp
64007caf:	push   eax
64007cb0:	lea    eax,[esp+0xac]
64007cb7:	mov    fs:0x0,eax
64007cbd:	mov    ebx,ecx
64007cbf:	mov    ebp,DWORD PTR [esp+0xbc]
64007cc6:	mov    esi,DWORD PTR [ebp+0x3c]
64007cc9:	mov    ecx,DWORD PTR [esi+ebp*1+0x50]
64007ccd:	mov    edx,DWORD PTR [esi+ebp*1+0x34]
64007cd1:	mov    eax,DWORD PTR [ebx]
64007cd3:	push   0x40
64007cd5:	add    esi,ebp
64007cd7:	push   0x3000
64007cdc:	push   ecx
64007cdd:	push   edx
64007cde:	push   eax
64007cdf:	call   DWORD PTR ds:0x6402c0c8
64007ce5:	mov    edi,eax
64007ce7:	test   edi,edi
64007ce9:	jne    0x64007d55
64007ceb:	mov    ecx,DWORD PTR [esi+0x50]
64007cee:	mov    eax,DWORD PTR [ebx]
64007cf0:	push   0x40
64007cf2:	push   0x3000
64007cf7:	push   ecx
64007cf8:	push   edi
64007cf9:	push   eax
64007cfa:	call   DWORD PTR ds:0x6402c0c8
64007d00:	mov    edi,eax
64007d02:	test   edi,edi
64007d04:	jne    0x64007d55
64007d06:	xor    esi,esi
64007d08:	push   esi
64007d09:	push   0x64041a1e
64007d0e:	lea    ecx,[esp+0x28]
64007d12:	mov    DWORD PTR [esp+0x40],0xf
64007d1a:	mov    DWORD PTR [esp+0x3c],esi
64007d1e:	mov    BYTE PTR [esp+0x2c],0x0
64007d23:	call   0x64003450
64007d28:	lea    edx,[esp+0x20]
64007d2c:	push   edx
64007d2d:	lea    eax,[esp+0x5c]
64007d31:	push   eax
64007d32:	mov    DWORD PTR [esp+0xbc],esi
64007d39:	call   0x64001470
64007d3e:	push   0x640441ac
64007d43:	lea    ecx,[esp+0x5c]
64007d47:	push   ecx
64007d48:	mov    DWORD PTR [esp+0x60],0x64043414
64007d50:	call   0x64013812
64007d55:	mov    eax,DWORD PTR [ebx]
64007d57:	lea    edx,[esp+0x1c]
64007d5b:	push   edx
64007d5c:	mov    DWORD PTR [esp+0x20],0x0
64007d64:	mov    ecx,DWORD PTR [esi+0x54]
64007d67:	push   ecx
64007d68:	push   ebp
64007d69:	push   edi
64007d6a:	push   eax
64007d6b:	call   DWORD PTR ds:0x6402c0dc
64007d71:	test   eax,eax
64007d73:	jne    0x64007dd1
64007d75:	call   DWORD PTR ds:0x6402c06c
64007d7b:	push   0x0
64007d7d:	push   0x64041a1e
64007d82:	lea    ecx,[esp+0x28]
64007d86:	mov    DWORD PTR [esp+0x40],0xf
64007d8e:	mov    DWORD PTR [esp+0x3c],0x0
64007d96:	mov    BYTE PTR [esp+0x2c],0x0
64007d9b:	call   0x64003450
64007da0:	lea    edx,[esp+0x20]
64007da4:	push   edx
64007da5:	lea    eax,[esp+0x5c]
64007da9:	push   eax
64007daa:	mov    DWORD PTR [esp+0xbc],0x1
64007db5:	call   0x64001470
64007dba:	push   0x640441ac
64007dbf:	lea    ecx,[esp+0x5c]
64007dc3:	push   ecx
64007dc4:	mov    DWORD PTR [esp+0x60],0x64043414
64007dcc:	call   0x64013812
64007dd1:	movzx  eax,WORD PTR [esi+0x6]
64007dd5:	sub    eax,0x1
64007dd8:	movzx  edx,WORD PTR [esi+0x14]
64007ddc:	lea    ebp,[edx+esi*1+0x18]
64007de0:	mov    DWORD PTR [esp+0x18],0x0
64007de8:	js     0x64007e31
64007dea:	add    ebp,0x10
64007ded:	lea    ecx,[ecx+0x0]
64007df0:	mov    ecx,DWORD PTR [ebp+0x0]
64007df3:	test   ecx,ecx
64007df5:	je     0x64007e18
64007df7:	mov    edx,DWORD PTR [ebp-0x4]
64007dfa:	mov    eax,DWORD PTR [ebx]
64007dfc:	push   0x0
64007dfe:	push   ecx
64007dff:	mov    ecx,DWORD PTR [ebp+0x4]
64007e02:	add    ecx,DWORD PTR [esp+0xc4]
64007e09:	add    edx,edi
64007e0b:	push   ecx
64007e0c:	push   edx
64007e0d:	push   eax
64007e0e:	call   DWORD PTR ds:0x6402c0dc
64007e14:	test   eax,eax
64007e16:	je     0x64007e5c
64007e18:	movzx  ecx,WORD PTR [esi+0x6]
64007e1c:	mov    eax,DWORD PTR [esp+0x18]
64007e20:	add    eax,0x1
64007e23:	sub    ecx,0x1
64007e26:	add    ebp,0x28
64007e29:	cmp    eax,ecx
64007e2b:	mov    DWORD PTR [esp+0x18],eax
64007e2f:	jle    0x64007df0
64007e31:	mov    eax,edi
64007e33:	cdq    
64007e34:	mov    DWORD PTR [ebx+0x70],eax
64007e37:	mov    DWORD PTR [ebx+0x74],edx
64007e3a:	mov    edx,DWORD PTR [esi+0x50]
64007e3d:	mov    DWORD PTR [ebx+0x78],edx
64007e40:	mov    ecx,DWORD PTR [esp+0xac]
64007e47:	mov    DWORD PTR fs:0x0,ecx
64007e4e:	pop    ecx
64007e4f:	pop    edi
64007e50:	pop    esi
64007e51:	pop    ebp
64007e52:	pop    ebx
64007e53:	add    esp,0xa4
64007e59:	ret    0x4
64007e5c:	call   DWORD PTR ds:0x6402c06c
64007e62:	mov    ebx,DWORD PTR [ebx]
64007e64:	push   0x8000
64007e69:	push   0x0
64007e6b:	push   edi
64007e6c:	push   ebx
64007e6d:	call   DWORD PTR ds:0x6402c0b8
64007e73:	push   0x0
64007e75:	push   0x64041a1e
64007e7a:	lea    ecx,[esp+0x44]
64007e7e:	mov    DWORD PTR [esp+0x5c],0xf
64007e86:	mov    DWORD PTR [esp+0x58],0x0
64007e8e:	mov    BYTE PTR [esp+0x48],0x0
64007e93:	call   0x64003450
64007e98:	lea    edx,[esp+0x3c]
64007e9c:	push   edx
64007e9d:	lea    eax,[esp+0x84]
64007ea4:	push   eax
64007ea5:	mov    DWORD PTR [esp+0xbc],0x2
64007eb0:	call   0x64001470
64007eb5:	push   0x640441ac
64007eba:	lea    ecx,[esp+0x84]
64007ec1:	push   ecx
64007ec2:	mov    DWORD PTR [esp+0x88],0x64043414
64007ecd:	call   0x64013812
64007ed2:	int3   
64007ed3:	int3   
64007ed4:	int3   
64007ed5:	int3   
64007ed6:	int3   
64007ed7:	int3   
64007ed8:	int3   
64007ed9:	int3   
64007eda:	int3   
64007edb:	int3   
64007edc:	int3   
64007edd:	int3   
64007ede:	int3   
64007edf:	int3   
64007ee0:	mov    eax,DWORD PTR [esp+0x4]
64007ee4:	push   esi
64007ee5:	push   eax
64007ee6:	mov    esi,ecx
64007ee8:	call   0x64001580
64007eed:	mov    DWORD PTR [esi],0x64043414
64007ef3:	mov    eax,esi
64007ef5:	pop    esi
64007ef6:	ret    0x4
64007ef9:	int3   
64007efa:	int3   
64007efb:	int3   
64007efc:	int3   
64007efd:	int3   
64007efe:	int3   
64007eff:	int3   
64007f00:	push   0xffffffff
64007f02:	push   0x640238be
64007f07:	mov    eax,fs:0x0
64007f0d:	push   eax
64007f0e:	sub    esp,0xa8
64007f14:	push   ebx
64007f15:	push   ebp
64007f16:	push   esi
64007f17:	mov    eax,ds:0x640521ac
64007f1c:	xor    eax,esp
64007f1e:	push   eax
64007f1f:	lea    eax,[esp+0xb8]
64007f26:	mov    fs:0x0,eax
64007f2c:	lea    eax,[esp+0x18]
64007f30:	push   eax
64007f31:	call   DWORD PTR ds:0x6402c08c
64007f37:	lea    ecx,[esp+0x38]
64007f3b:	push   ecx
64007f3c:	lea    edx,[esp+0x1c]
64007f40:	push   edx
64007f41:	call   DWORD PTR ds:0x6402c068
64007f47:	mov    ecx,DWORD PTR [esp+0x38]
64007f4b:	mov    eax,DWORD PTR [esp+0x3c]
64007f4f:	sub    ecx,0x2a69c000
64007f55:	push   0x2
64007f57:	sbb    eax,0xc9
64007f5c:	xor    ebx,ebx
64007f5e:	push   ebx
64007f5f:	push   ebx
64007f60:	mov    DWORD PTR [edi+0x80],ecx
64007f66:	lea    ecx,[esp+0x40]
64007f6a:	mov    DWORD PTR [edi+0x84],eax
64007f70:	mov    eax,DWORD PTR [edi]
64007f72:	push   ecx
64007f73:	push   eax
64007f74:	push   eax
64007f75:	mov    DWORD PTR [esp+0x4c],ebx
64007f79:	call   DWORD PTR ds:0x6402c040
64007f7f:	push   eax
64007f80:	call   DWORD PTR ds:0x6402c0b4
64007f86:	mov    eax,DWORD PTR [esp+0x34]
64007f8a:	cdq    
64007f8b:	push   0x64042c48
64007f90:	push   0x9
64007f92:	mov    ecx,0x64041d7c
64007f97:	mov    DWORD PTR [edi+0x68],eax
64007f9a:	mov    DWORD PTR [edi+0x6c],edx
64007f9d:	call   0x64003090
64007fa2:	add    esp,0x4
64007fa5:	mov    edx,esp
64007fa7:	mov    DWORD PTR [esp+0x3c],esp
64007fab:	push   edx
64007fac:	mov    ecx,eax
64007fae:	call   0x64002ad0
64007fb3:	call   0x64007990
64007fb8:	add    esp,0x4
64007fbb:	push   eax
64007fbc:	lea    ecx,[esp+0x18]
64007fc0:	call   0x64009c20
64007fc5:	lea    ecx,[esp+0x14]
64007fc9:	mov    DWORD PTR [esp+0xc0],ebx
64007fd0:	call   0x64009c80
64007fd5:	push   0x64042c70
64007fda:	mov    esi,eax
64007fdc:	mov    ebp,DWORD PTR [esi]
64007fde:	push   0xd
64007fe0:	push   0x64042ca8
64007fe5:	call   0x64002e90
64007fea:	add    esp,0xc
64007fed:	push   eax
64007fee:	mov    eax,DWORD PTR [ebp+0x0]
64007ff1:	mov    ecx,esi
64007ff3:	call   eax
64007ff5:	lea    ecx,[esp+0x14]
64007ff9:	mov    DWORD PTR [esp+0x58],eax
64007ffd:	call   0x64009c80
64008002:	push   0x64042cb8
64008007:	mov    esi,eax
64008009:	mov    ebp,DWORD PTR [esi]
6400800b:	push   0xf
6400800d:	push   0x64042ce8
64008012:	call   0x64002e90
64008017:	mov    edx,DWORD PTR [ebp+0x0]
6400801a:	add    esp,0xc
6400801d:	push   eax
6400801e:	mov    ecx,esi
64008020:	call   edx
64008022:	lea    ecx,[esp+0x14]
64008026:	mov    DWORD PTR [esp+0x48],eax
6400802a:	call   0x64009c80
6400802f:	mov    esi,eax
64008031:	mov    ebp,DWORD PTR [esi]
64008033:	push   0x64042cf8
64008038:	push   0xe
6400803a:	push   0x64042d1c
6400803f:	call   0x64002e90
64008044:	add    esp,0xc
64008047:	push   eax
64008048:	mov    eax,DWORD PTR [ebp+0x0]
6400804b:	mov    ecx,esi
6400804d:	call   eax
6400804f:	lea    ecx,[esp+0x14]
64008053:	mov    DWORD PTR [esp+0x50],eax
64008057:	call   0x64009c80
6400805c:	push   0x64042d2c
64008061:	mov    esi,eax
64008063:	mov    ebp,DWORD PTR [esi]
64008065:	push   0x12
64008067:	push   0x64042d60
6400806c:	call   0x64002e90
64008071:	mov    edx,DWORD PTR [ebp+0x0]
64008074:	add    esp,0xc
64008077:	push   eax
64008078:	mov    ecx,esi
6400807a:	call   edx
6400807c:	lea    ecx,[esp+0x14]
64008080:	mov    DWORD PTR [esp+0x5c],eax
64008084:	call   0x64009c80
64008089:	push   0x64042d74
6400808e:	mov    esi,eax
64008090:	mov    ebp,DWORD PTR [esi]
64008092:	push   0x14
64008094:	push   0x64042d98
64008099:	call   0x64002e90
6400809e:	add    esp,0xc
640080a1:	push   eax
640080a2:	mov    eax,DWORD PTR [ebp+0x0]
640080a5:	mov    ecx,esi
640080a7:	call   eax
640080a9:	lea    ecx,[esp+0x14]
640080ad:	mov    DWORD PTR [esp+0x4c],eax
640080b1:	call   0x64009c80
640080b6:	push   0x64042db0
640080bb:	mov    esi,eax
640080bd:	mov    ebp,DWORD PTR [esi]
640080bf:	push   0xa
640080c1:	push   0x64042df0
640080c6:	call   0x64002e90
640080cb:	mov    edx,DWORD PTR [ebp+0x0]
640080ce:	add    esp,0xc
640080d1:	push   eax
640080d2:	mov    ecx,esi
640080d4:	call   edx
640080d6:	lea    ecx,[esp+0x14]
640080da:	mov    DWORD PTR [esp+0x54],eax
640080de:	call   0x64009c80
640080e3:	push   0x64042dfc
640080e8:	mov    esi,eax
640080ea:	mov    ebp,DWORD PTR [esi]
640080ec:	push   0x15
640080ee:	push   0x64042e24
640080f3:	call   0x64002e90
640080f8:	add    esp,0xc
640080fb:	push   eax
640080fc:	mov    eax,DWORD PTR [ebp+0x0]
640080ff:	mov    ecx,esi
64008101:	call   eax
64008103:	lea    ecx,[esp+0x14]
64008107:	mov    DWORD PTR [esp+0x40],eax
6400810b:	call   0x64009c80
64008110:	push   0x64042e3c
64008115:	mov    esi,eax
64008117:	mov    ebp,DWORD PTR [esi]
64008119:	push   0x7
6400811b:	push   0x64042e78
64008120:	call   0x64002e90
64008125:	mov    edx,DWORD PTR [ebp+0x0]
64008128:	add    esp,0xc
6400812b:	push   eax
6400812c:	mov    ecx,esi
6400812e:	call   edx
64008130:	lea    ecx,[esp+0x14]
64008134:	mov    DWORD PTR [esp+0x44],eax
64008138:	call   0x64009c80
6400813d:	push   0x64042e80
64008142:	mov    esi,eax
64008144:	mov    ebp,DWORD PTR [esi]
64008146:	push   0x14
64008148:	push   0x64042eb4
6400814d:	call   0x64002e90
64008152:	add    esp,0xc
64008155:	push   eax
64008156:	mov    eax,DWORD PTR [ebp+0x0]
64008159:	mov    ecx,esi
6400815b:	call   eax
6400815d:	lea    ecx,[esp+0x60]
64008161:	mov    DWORD PTR [esp+0x38],eax
64008165:	call   0x64009b10
6400816a:	mov    BYTE PTR [esp+0xc0],0x1
64008172:	mov    ecx,DWORD PTR [edi+0x4]
64008175:	push   ecx
64008176:	lea    ecx,[esp+0x64]
6400817a:	call   0x64007a30
6400817f:	push   0x64042ecc
64008184:	push   0xf
64008186:	push   0x64042efc
6400818b:	call   0x64002e90
64008190:	mov    ecx,eax
64008192:	add    esp,0xc
64008195:	mov    DWORD PTR [esp+0x30],0xf
6400819d:	mov    DWORD PTR [esp+0x2c],ebx
640081a1:	mov    BYTE PTR [esp+0x1c],bl
640081a5:	lea    esi,[ecx+0x1]
640081a8:	mov    dl,BYTE PTR [ecx]
640081aa:	add    ecx,0x1
640081ad:	cmp    dl,bl
640081af:	jne    0x640081a8
640081b1:	sub    ecx,esi
640081b3:	push   ecx
640081b4:	push   eax
640081b5:	lea    ecx,[esp+0x20]
640081b9:	call   0x64003450
640081be:	lea    edx,[esp+0x18]
640081c2:	lea    ebp,[edi+0x894]
640081c8:	mov    BYTE PTR [esp+0xc0],0x2
640081d0:	mov    esi,DWORD PTR [edi]
640081d2:	push   edx
640081d3:	mov    ecx,ebp
640081d5:	call   0x64009c80
640081da:	call   0x6400a8b0
640081df:	add    eax,DWORD PTR [edi+0x88c]
640081e5:	push   eax
640081e6:	mov    eax,DWORD PTR [esp+0x5c]
640081ea:	push   eax
640081eb:	call   0x6400ace0
640081f0:	cdq    
640081f1:	add    esp,0x8
640081f4:	mov    BYTE PTR [esp+0xc0],0x1
640081fc:	cmp    DWORD PTR [esp+0x30],0x10
64008201:	mov    DWORD PTR [edi+0x8],eax
64008204:	mov    DWORD PTR [edi+0xc],edx
64008207:	jb     0x64008216
64008209:	mov    ecx,DWORD PTR [esp+0x1c]
6400820d:	push   ecx
6400820e:	call   0x640135e4
64008213:	add    esp,0x4
64008216:	push   0x64042f0c
6400821b:	push   0x11
6400821d:	push   0x64042f4c
64008222:	call   0x64002e90
64008227:	mov    esi,eax
64008229:	mov    ecx,esi
6400822b:	add    esp,0xc
6400822e:	mov    DWORD PTR [esp+0x30],0xf
64008236:	mov    DWORD PTR [esp+0x2c],ebx
6400823a:	mov    BYTE PTR [esp+0x1c],bl
6400823e:	lea    edx,[ecx+0x1]
64008241:	mov    al,BYTE PTR [ecx]
64008243:	add    ecx,0x1
64008246:	cmp    al,bl
64008248:	jne    0x64008241
6400824a:	sub    ecx,edx
6400824c:	push   ecx
6400824d:	push   esi
6400824e:	lea    ecx,[esp+0x20]
64008252:	call   0x64003450
64008257:	lea    edx,[esp+0x18]
6400825b:	mov    BYTE PTR [esp+0xc0],0x3
64008263:	mov    esi,DWORD PTR [edi]
64008265:	push   edx
64008266:	mov    ecx,ebp
64008268:	call   0x64009c80
6400826d:	call   0x6400a8b0
64008272:	add    eax,DWORD PTR [edi+0x88c]
64008278:	push   eax
64008279:	mov    eax,DWORD PTR [esp+0x4c]
6400827d:	push   eax
6400827e:	call   0x6400ace0
64008283:	cdq    
64008284:	add    esp,0x8
64008287:	mov    BYTE PTR [esp+0xc0],0x1
6400828f:	cmp    DWORD PTR [esp+0x30],0x10
64008294:	mov    DWORD PTR [edi+0x10],eax
64008297:	mov    DWORD PTR [edi+0x14],edx
6400829a:	jb     0x640082a9
6400829c:	mov    ecx,DWORD PTR [esp+0x1c]
640082a0:	push   ecx
640082a1:	call   0x640135e4
640082a6:	add    esp,0x4
640082a9:	push   0x64042f60
640082ae:	push   0x10
640082b0:	push   0x64042f94
640082b5:	call   0x64002e90
640082ba:	mov    esi,eax
640082bc:	mov    ecx,esi
640082be:	add    esp,0xc
640082c1:	mov    DWORD PTR [esp+0x30],0xf
640082c9:	mov    DWORD PTR [esp+0x2c],ebx
640082cd:	mov    BYTE PTR [esp+0x1c],bl
640082d1:	lea    eax,[ecx+0x1]
640082d4:	mov    dl,BYTE PTR [ecx]
640082d6:	add    ecx,0x1
640082d9:	cmp    dl,bl
640082db:	jne    0x640082d4
640082dd:	sub    ecx,eax
640082df:	push   ecx
640082e0:	push   esi
640082e1:	lea    ecx,[esp+0x20]
640082e5:	call   0x64003450
640082ea:	lea    edx,[esp+0x18]
640082ee:	mov    BYTE PTR [esp+0xc0],0x4
640082f6:	mov    esi,DWORD PTR [edi]
640082f8:	push   edx
640082f9:	mov    ecx,ebp
640082fb:	call   0x64009c80
64008300:	call   0x6400a8b0
64008305:	add    eax,DWORD PTR [edi+0x88c]
6400830b:	push   eax
6400830c:	mov    eax,DWORD PTR [esp+0x54]
64008310:	push   eax
64008311:	call   0x6400ace0
64008316:	cdq    
64008317:	add    esp,0x8
6400831a:	mov    BYTE PTR [esp+0xc0],0x1
64008322:	cmp    DWORD PTR [esp+0x30],0x10
64008327:	mov    DWORD PTR [edi+0x28],eax
6400832a:	mov    DWORD PTR [edi+0x2c],edx
6400832d:	jb     0x6400833c
6400832f:	mov    ecx,DWORD PTR [esp+0x1c]
64008333:	push   ecx
64008334:	call   0x640135e4
64008339:	add    esp,0x4
6400833c:	push   0x64042fa8
64008341:	push   0x14
64008343:	push   0x64042fdc
64008348:	call   0x64002e90
6400834d:	mov    esi,eax
6400834f:	mov    ecx,esi
64008351:	add    esp,0xc
64008354:	mov    DWORD PTR [esp+0x30],0xf
6400835c:	mov    DWORD PTR [esp+0x2c],ebx
64008360:	mov    BYTE PTR [esp+0x1c],bl
64008364:	lea    eax,[ecx+0x1]
64008367:	mov    dl,BYTE PTR [ecx]
64008369:	add    ecx,0x1
6400836c:	cmp    dl,bl
6400836e:	jne    0x64008367
64008370:	sub    ecx,eax
64008372:	push   ecx
64008373:	push   esi
64008374:	lea    ecx,[esp+0x20]
64008378:	call   0x64003450
6400837d:	lea    edx,[esp+0x18]
64008381:	mov    BYTE PTR [esp+0xc0],0x5
64008389:	mov    esi,DWORD PTR [edi]
6400838b:	push   edx
6400838c:	mov    ecx,ebp
6400838e:	call   0x64009c80
64008393:	call   0x6400a8b0
64008398:	add    eax,DWORD PTR [edi+0x88c]
6400839e:	push   eax
6400839f:	mov    eax,DWORD PTR [esp+0x60]
640083a3:	push   eax
640083a4:	call   0x6400ace0
640083a9:	cdq    
640083aa:	add    esp,0x8
640083ad:	mov    BYTE PTR [esp+0xc0],0x1
640083b5:	cmp    DWORD PTR [esp+0x30],0x10
640083ba:	mov    DWORD PTR [edi+0x18],eax
640083bd:	mov    DWORD PTR [edi+0x1c],edx
640083c0:	jb     0x640083cf
640083c2:	mov    ecx,DWORD PTR [esp+0x1c]
640083c6:	push   ecx
640083c7:	call   0x640135e4
640083cc:	add    esp,0x4
640083cf:	push   0x64042ff4
640083d4:	push   0x16
640083d6:	push   0x64043028
640083db:	call   0x64002e90
640083e0:	mov    esi,eax
640083e2:	mov    ecx,esi
640083e4:	add    esp,0xc
640083e7:	mov    DWORD PTR [esp+0x30],0xf
640083ef:	mov    DWORD PTR [esp+0x2c],ebx
640083f3:	mov    BYTE PTR [esp+0x1c],bl
640083f7:	lea    eax,[ecx+0x1]
640083fa:	lea    ebx,[ebx+0x0]
64008400:	mov    dl,BYTE PTR [ecx]
64008402:	add    ecx,0x1
64008405:	cmp    dl,bl
64008407:	jne    0x64008400
64008409:	sub    ecx,eax
6400840b:	push   ecx
6400840c:	push   esi
6400840d:	lea    ecx,[esp+0x20]
64008411:	call   0x64003450
64008416:	lea    edx,[esp+0x18]
6400841a:	mov    BYTE PTR [esp+0xc0],0x6
64008422:	mov    esi,DWORD PTR [edi]
64008424:	push   edx
64008425:	mov    ecx,ebp
64008427:	call   0x64009c80
6400842c:	call   0x6400a8b0
64008431:	add    eax,DWORD PTR [edi+0x88c]
64008437:	push   eax
64008438:	mov    eax,DWORD PTR [esp+0x50]
6400843c:	push   eax
6400843d:	call   0x6400ace0
64008442:	cdq    
64008443:	add    esp,0x8
64008446:	mov    BYTE PTR [esp+0xc0],0x1
6400844e:	cmp    DWORD PTR [esp+0x30],0x10
64008453:	mov    DWORD PTR [edi+0x20],eax
64008456:	mov    DWORD PTR [edi+0x24],edx
64008459:	jb     0x64008468
6400845b:	mov    ecx,DWORD PTR [esp+0x1c]
6400845f:	push   ecx
64008460:	call   0x640135e4
64008465:	add    esp,0x4
64008468:	push   0x64043040
6400846d:	push   0x17
6400846f:	push   0x64043080
64008474:	call   0x64002e90
64008479:	mov    esi,eax
6400847b:	mov    ecx,esi
6400847d:	add    esp,0xc
64008480:	mov    DWORD PTR [esp+0x30],0xf
64008488:	mov    DWORD PTR [esp+0x2c],ebx
6400848c:	mov    BYTE PTR [esp+0x1c],bl
64008490:	lea    eax,[ecx+0x1]
64008493:	mov    dl,BYTE PTR [ecx]
64008495:	add    ecx,0x1
64008498:	cmp    dl,bl
6400849a:	jne    0x64008493
6400849c:	sub    ecx,eax
6400849e:	push   ecx
6400849f:	push   esi
640084a0:	lea    ecx,[esp+0x20]
640084a4:	call   0x64003450
640084a9:	lea    edx,[esp+0x18]
640084ad:	mov    BYTE PTR [esp+0xc0],0x7
640084b5:	mov    esi,DWORD PTR [edi]
640084b7:	push   edx
640084b8:	mov    ecx,ebp
640084ba:	call   0x64009c80
640084bf:	call   0x6400a8b0
640084c4:	add    eax,DWORD PTR [edi+0x88c]
640084ca:	push   eax
640084cb:	mov    eax,DWORD PTR [esp+0x44]
640084cf:	push   eax
640084d0:	call   0x6400ace0
640084d5:	cdq    
640084d6:	add    esp,0x8
640084d9:	mov    BYTE PTR [esp+0xc0],0x1
640084e1:	cmp    DWORD PTR [esp+0x30],0x10
640084e6:	mov    DWORD PTR [edi+0x30],eax
640084e9:	mov    DWORD PTR [edi+0x34],edx
640084ec:	jb     0x640084fb
640084ee:	mov    ecx,DWORD PTR [esp+0x1c]
640084f2:	push   ecx
640084f3:	call   0x640135e4
640084f8:	add    esp,0x4
640084fb:	push   0x64043098
64008500:	push   0xc
64008502:	push   0x640430d0
64008507:	call   0x64002e90
6400850c:	mov    esi,eax
6400850e:	mov    ecx,esi
64008510:	add    esp,0xc
64008513:	mov    DWORD PTR [esp+0x30],0xf
6400851b:	mov    DWORD PTR [esp+0x2c],ebx
6400851f:	mov    BYTE PTR [esp+0x1c],bl
64008523:	lea    edx,[ecx+0x1]
64008526:	mov    al,BYTE PTR [ecx]
64008528:	add    ecx,0x1
6400852b:	cmp    al,bl
6400852d:	jne    0x64008526
6400852f:	sub    ecx,edx
64008531:	push   ecx
64008532:	push   esi
64008533:	lea    ecx,[esp+0x20]
64008537:	call   0x64003450
6400853c:	lea    edx,[esp+0x18]
64008540:	mov    BYTE PTR [esp+0xc0],0x8
64008548:	mov    esi,DWORD PTR [edi]
6400854a:	push   edx
6400854b:	mov    ecx,ebp
6400854d:	call   0x64009c80
64008552:	call   0x6400a8b0
64008557:	add    eax,DWORD PTR [edi+0x88c]
6400855d:	push   eax
6400855e:	mov    eax,DWORD PTR [esp+0x58]
64008562:	push   eax
64008563:	call   0x6400ace0
64008568:	cdq    
64008569:	add    esp,0x8
6400856c:	mov    BYTE PTR [esp+0xc0],0x1
64008574:	cmp    DWORD PTR [esp+0x30],0x10
64008579:	mov    DWORD PTR [edi+0x38],eax
6400857c:	mov    DWORD PTR [edi+0x3c],edx
6400857f:	jb     0x6400858e
64008581:	mov    ecx,DWORD PTR [esp+0x1c]
64008585:	push   ecx
64008586:	call   0x640135e4
6400858b:	add    esp,0x4
6400858e:	push   0x640430e0
64008593:	push   0x9
64008595:	push   0x64043120
6400859a:	call   0x64002e90
6400859f:	mov    esi,eax
640085a1:	mov    ecx,esi
640085a3:	add    esp,0xc
640085a6:	mov    DWORD PTR [esp+0x30],0xf
640085ae:	mov    DWORD PTR [esp+0x2c],ebx
640085b2:	mov    BYTE PTR [esp+0x1c],bl
640085b6:	lea    eax,[ecx+0x1]
640085b9:	lea    esp,[esp+0x0]
640085c0:	mov    dl,BYTE PTR [ecx]
640085c2:	add    ecx,0x1
640085c5:	cmp    dl,bl
640085c7:	jne    0x640085c0
640085c9:	sub    ecx,eax
640085cb:	push   ecx
640085cc:	push   esi
640085cd:	lea    ecx,[esp+0x20]
640085d1:	call   0x64003450
640085d6:	lea    edx,[esp+0x18]
640085da:	mov    BYTE PTR [esp+0xc0],0x9
640085e2:	mov    esi,DWORD PTR [edi]
640085e4:	push   edx
640085e5:	mov    ecx,ebp
640085e7:	call   0x64009c80
640085ec:	call   0x6400a8b0
640085f1:	add    eax,DWORD PTR [edi+0x88c]
640085f7:	push   eax
640085f8:	mov    eax,DWORD PTR [esp+0x48]
640085fc:	push   eax
640085fd:	call   0x6400ace0
64008602:	cdq    
64008603:	add    esp,0x8
64008606:	mov    BYTE PTR [esp+0xc0],0x1
6400860e:	cmp    DWORD PTR [esp+0x30],0x10
64008613:	mov    DWORD PTR [edi+0x40],eax
64008616:	mov    DWORD PTR [edi+0x44],edx
64008619:	jb     0x64008628
6400861b:	mov    ecx,DWORD PTR [esp+0x1c]
6400861f:	push   ecx
64008620:	call   0x640135e4
64008625:	add    esp,0x4
64008628:	push   0x6404312c
6400862d:	push   0x16
6400862f:	push   0x64043158
64008634:	call   0x64002e90
64008639:	mov    esi,eax
6400863b:	mov    ecx,esi
6400863d:	add    esp,0xc
64008640:	mov    DWORD PTR [esp+0x30],0xf
64008648:	mov    DWORD PTR [esp+0x2c],ebx
6400864c:	mov    BYTE PTR [esp+0x1c],bl
64008650:	lea    eax,[ecx+0x1]
64008653:	mov    dl,BYTE PTR [ecx]
64008655:	add    ecx,0x1
64008658:	cmp    dl,bl
6400865a:	jne    0x64008653
6400865c:	sub    ecx,eax
6400865e:	push   ecx
6400865f:	push   esi
64008660:	lea    ecx,[esp+0x20]
64008664:	call   0x64003450
64008669:	lea    edx,[esp+0x18]
6400866d:	mov    BYTE PTR [esp+0xc0],0xa
64008675:	mov    esi,DWORD PTR [edi]
64008677:	push   edx
64008678:	mov    ecx,ebp
6400867a:	call   0x64009c80
6400867f:	call   0x6400a8b0
64008684:	add    eax,DWORD PTR [edi+0x88c]
6400868a:	push   eax
6400868b:	mov    eax,DWORD PTR [esp+0x3c]
6400868f:	push   eax
64008690:	call   0x6400ace0
64008695:	cdq    
64008696:	add    esp,0x8
64008699:	mov    BYTE PTR [esp+0xc0],0x1
640086a1:	cmp    DWORD PTR [esp+0x30],0x10
640086a6:	mov    DWORD PTR [edi+0x48],eax
640086a9:	mov    DWORD PTR [edi+0x4c],edx
640086ac:	jb     0x640086bb
640086ae:	mov    ecx,DWORD PTR [esp+0x1c]
640086b2:	push   ecx
640086b3:	call   0x640135e4
640086b8:	add    esp,0x4
640086bb:	mov    edx,DWORD PTR [edi+0x8]
640086be:	or     edx,DWORD PTR [edi+0xc]
640086c1:	je     0x64008754
640086c7:	mov    eax,DWORD PTR [edi+0x10]
640086ca:	or     eax,DWORD PTR [edi+0x14]
640086cd:	je     0x64008754
640086d3:	mov    ecx,DWORD PTR [edi+0x28]
640086d6:	or     ecx,DWORD PTR [edi+0x2c]
640086d9:	je     0x64008754
640086db:	mov    edx,DWORD PTR [edi+0x18]
640086de:	or     edx,DWORD PTR [edi+0x1c]
640086e1:	je     0x64008754
640086e3:	mov    eax,DWORD PTR [edi+0x20]
640086e6:	or     eax,DWORD PTR [edi+0x24]
640086e9:	je     0x64008754
640086eb:	mov    ecx,DWORD PTR [edi+0x30]
640086ee:	or     ecx,DWORD PTR [edi+0x34]
640086f1:	je     0x64008754
640086f3:	mov    edx,DWORD PTR [edi+0x38]
640086f6:	or     edx,DWORD PTR [edi+0x3c]
640086f9:	je     0x64008754
640086fb:	mov    eax,DWORD PTR [edi+0x40]
640086fe:	or     eax,DWORD PTR [edi+0x44]
64008701:	je     0x64008754
64008703:	mov    ecx,DWORD PTR [edi+0x48]
64008706:	or     ecx,DWORD PTR [edi+0x4c]
64008709:	je     0x64008754
6400870b:	push   edi
6400870c:	call   0x64008910
64008711:	lea    esi,[esp+0x60]
64008715:	call   0x64007b30
6400871a:	mov    ecx,esi
6400871c:	call   0x64009c00
64008721:	call   DWORD PTR ds:0x6402c03c
64008727:	lea    ecx,[esp+0x14]
6400872b:	mov    DWORD PTR [esp+0xc0],0xffffffff
64008736:	call   0x64009c40
6400873b:	mov    ecx,DWORD PTR [esp+0xb8]
64008742:	mov    DWORD PTR fs:0x0,ecx
64008749:	pop    ecx
6400874a:	pop    esi
6400874b:	pop    ebp
6400874c:	pop    ebx
6400874d:	add    esp,0xb4
64008753:	ret    
64008754:	push   ebx
64008755:	push   0x64041a1e
6400875a:	lea    ecx,[esp+0x7c]
6400875e:	mov    DWORD PTR [esp+0x94],0xf
64008769:	mov    DWORD PTR [esp+0x90],ebx
64008770:	mov    BYTE PTR [esp+0x80],bl
64008777:	call   0x64003450
6400877c:	lea    edx,[esp+0x74]
64008780:	push   edx
64008781:	lea    eax,[esp+0x94]
64008788:	push   eax
64008789:	mov    BYTE PTR [esp+0xc8],0xb
64008791:	call   0x64001470
64008796:	push   0x64044070
6400879b:	lea    ecx,[esp+0x94]
640087a2:	push   ecx
640087a3:	call   0x64013812
640087a8:	int3   
640087a9:	int3   
640087aa:	int3   
640087ab:	int3   
640087ac:	int3   
640087ad:	int3   
640087ae:	int3   
640087af:	int3   
640087b0:	push   0xffffffff
640087b2:	push   0x64023818
640087b7:	mov    eax,fs:0x0
640087bd:	push   eax
640087be:	sub    esp,0x1c
640087c1:	push   ebx
640087c2:	push   ebp
640087c3:	push   edi
640087c4:	mov    eax,ds:0x640521ac
640087c9:	xor    eax,esp
640087cb:	push   eax
640087cc:	lea    eax,[esp+0x2c]
640087d0:	mov    fs:0x0,eax
640087d6:	mov    eax,DWORD PTR [esi]
640087d8:	mov    ebx,DWORD PTR ds:0x6402c0c8
640087de:	push   0x4
640087e0:	push   0x3000
640087e5:	push   0x880
640087ea:	push   0x0
640087ec:	push   eax
640087ed:	call   ebx
640087ef:	lea    edi,[esi+0x894]
640087f5:	mov    ecx,edi
640087f7:	mov    DWORD PTR [esi+0x888],eax
640087fd:	call   0x64009c80
64008802:	mov    eax,DWORD PTR [eax]
64008804:	mov    ebp,DWORD PTR [eax+0x6]
64008807:	mov    eax,DWORD PTR [esi]
64008809:	push   0x40
6400880b:	push   0x3000
64008810:	push   ebp
64008811:	push   0x0
64008813:	push   eax
64008814:	call   ebx
64008816:	push   eax
64008817:	mov    ecx,edi
64008819:	mov    DWORD PTR [esi+0x88c],eax
6400881f:	call   0x64009c80
64008824:	call   0x6400a9a0
64008829:	mov    ecx,edi
6400882b:	call   0x64009c80
64008830:	mov    eax,DWORD PTR [eax]
64008832:	mov    ecx,DWORD PTR [esi]
64008834:	push   0x0
64008836:	push   ebp
64008837:	mov    ebp,DWORD PTR ds:0x6402c0dc
6400883d:	add    eax,0x12
64008840:	push   eax
64008841:	mov    eax,DWORD PTR [esi+0x88c]
64008847:	push   eax
64008848:	push   ecx
64008849:	call   ebp
6400884b:	test   eax,eax
6400884d:	jne    0x64008855
6400884f:	call   DWORD PTR ds:0x6402c06c
64008855:	push   0x64043170
6400885a:	push   0xe
6400885c:	push   0x640431ac
64008861:	call   0x64002e90
64008866:	mov    ecx,eax
64008868:	add    esp,0xc
6400886b:	mov    DWORD PTR [esp+0x28],0xf
64008873:	mov    DWORD PTR [esp+0x24],0x0
6400887b:	mov    BYTE PTR [esp+0x14],0x0
64008880:	lea    ebx,[ecx+0x1]
64008883:	mov    dl,BYTE PTR [ecx]
64008885:	add    ecx,0x1
64008888:	test   dl,dl
6400888a:	jne    0x64008883
6400888c:	sub    ecx,ebx
6400888e:	push   ecx
6400888f:	push   eax
64008890:	lea    ecx,[esp+0x18]
64008894:	call   0x64003450
64008899:	lea    ecx,[esp+0x10]
6400889d:	push   ecx
6400889e:	xor    ebx,ebx
640088a0:	mov    ecx,edi
640088a2:	mov    DWORD PTR [esp+0x38],ebx
640088a6:	call   0x64009c80
640088ab:	call   0x6400a8b0
640088b0:	cmp    DWORD PTR [esp+0x28],0x10
640088b5:	mov    edi,eax
640088b7:	jb     0x640088c6
640088b9:	mov    edx,DWORD PTR [esp+0x14]
640088bd:	push   edx
640088be:	call   0x640135e4
640088c3:	add    esp,0x4
640088c6:	mov    eax,DWORD PTR [esi]
640088c8:	push   ebx
640088c9:	push   0x4
640088cb:	lea    ecx,[esi+0x888]
640088d1:	push   ecx
640088d2:	mov    ecx,DWORD PTR [esi+0x88c]
640088d8:	add    ecx,edi
640088da:	push   ecx
640088db:	push   eax
640088dc:	mov    DWORD PTR [esp+0x3c],0xf
640088e4:	mov    DWORD PTR [esp+0x38],ebx
640088e8:	mov    BYTE PTR [esp+0x28],0x0
640088ed:	call   ebp
640088ef:	test   eax,eax
640088f1:	jne    0x640088f9
640088f3:	call   DWORD PTR ds:0x6402c06c
640088f9:	mov    ecx,DWORD PTR [esp+0x2c]
640088fd:	mov    DWORD PTR fs:0x0,ecx
64008904:	pop    ecx
64008905:	pop    edi
64008906:	pop    ebp
64008907:	pop    ebx
64008908:	add    esp,0x28
6400890b:	ret    
6400890c:	int3   
6400890d:	int3   
6400890e:	int3   
6400890f:	int3   
64008910:	push   0xffffffff
64008912:	push   0x64023448
64008917:	mov    eax,fs:0x0
6400891d:	push   eax
6400891e:	sub    esp,0x48
64008921:	mov    eax,ds:0x640521ac
64008926:	xor    eax,esp
64008928:	push   eax
64008929:	lea    eax,[esp+0x4c]
6400892d:	mov    fs:0x0,eax
64008933:	mov    eax,DWORD PTR [esp+0x5c]
64008937:	mov    ecx,DWORD PTR [eax]
64008939:	push   0x0
6400893b:	push   0x880
64008940:	lea    edx,[eax+0x8]
64008943:	mov    eax,DWORD PTR [eax+0x888]
64008949:	push   edx
6400894a:	push   eax
6400894b:	push   ecx
6400894c:	call   DWORD PTR ds:0x6402c0dc
64008952:	test   eax,eax
64008954:	jne    0x6400899b
64008956:	push   eax
64008957:	push   0x64041a1e
6400895c:	lea    ecx,[esp+0xc]
64008960:	mov    DWORD PTR [esp+0x24],0xf
64008968:	mov    DWORD PTR [esp+0x20],eax
6400896c:	mov    BYTE PTR [esp+0x10],al
64008970:	call   0x64003450
64008975:	lea    ecx,[esp+0x4]
64008979:	push   ecx
6400897a:	lea    edx,[esp+0x24]
6400897e:	push   edx
6400897f:	mov    DWORD PTR [esp+0x5c],0x0
64008987:	call   0x64001470
6400898c:	push   0x64044070
64008991:	lea    eax,[esp+0x24]
64008995:	push   eax
64008996:	call   0x64013812
6400899b:	mov    ecx,DWORD PTR [esp+0x4c]
6400899f:	mov    DWORD PTR fs:0x0,ecx
640089a6:	pop    ecx
640089a7:	add    esp,0x54
640089aa:	ret    0x4
640089ad:	int3   
640089ae:	int3   
640089af:	int3   
640089b0:	push   ebp
640089b1:	mov    ebp,esp
640089b3:	push   0xfffffffe
640089b5:	push   0x640441c0
640089ba:	push   0x640158c0
640089bf:	mov    eax,fs:0x0
640089c5:	push   eax
640089c6:	sub    esp,0x28
640089c9:	push   ebx
640089ca:	push   esi
640089cb:	push   edi
640089cc:	mov    eax,ds:0x640521ac
640089d1:	xor    DWORD PTR [ebp-0x8],eax
640089d4:	xor    eax,ebp
640089d6:	push   eax
640089d7:	lea    eax,[ebp-0x10]
640089da:	mov    fs:0x0,eax
640089e0:	mov    esi,DWORD PTR [ebp+0x8]
640089e3:	xor    ebx,ebx
640089e5:	mov    DWORD PTR [ebp-0x2c],ebx
640089e8:	mov    DWORD PTR [ebp-0x30],ebx
640089eb:	mov    DWORD PTR [ebp-0x20],ebx
640089ee:	mov    DWORD PTR [ebp-0x34],ebx
640089f1:	mov    DWORD PTR [ebp-0x38],ebx
640089f4:	mov    DWORD PTR [ebp-0x24],ebx
640089f7:	mov    BYTE PTR [ebp-0x19],bl
640089fa:	mov    DWORD PTR [ebp-0x4],ebx
640089fd:	push   0x4
640089ff:	push   0x3000
64008a04:	push   0x1020
64008a09:	push   ebx
64008a0a:	push   esi
64008a0b:	call   DWORD PTR ds:0x6402c0c8
64008a11:	mov    edi,eax
64008a13:	mov    DWORD PTR [ebp-0x2c],edi
64008a16:	test   edi,edi
64008a18:	jne    0x64008a25
64008a1a:	call   DWORD PTR ds:0x6402c06c
64008a20:	jmp    0x64008aed
64008a25:	lea    eax,[ebp-0x24]
64008a28:	push   eax
64008a29:	push   0x1020
64008a2e:	mov    ecx,DWORD PTR [ebp+0x14]
64008a31:	push   ecx
64008a32:	push   edi
64008a33:	push   esi
64008a34:	call   DWORD PTR ds:0x6402c0dc
64008a3a:	test   eax,eax
64008a3c:	je     0x64008aed
64008a42:	push   0x40
64008a44:	push   0x3000
64008a49:	mov    edx,DWORD PTR [ebp+0x10]
64008a4c:	push   edx
64008a4d:	push   0x0
64008a4f:	push   esi
64008a50:	call   DWORD PTR ds:0x6402c0c8
64008a56:	mov    ebx,eax
64008a58:	mov    DWORD PTR [ebp-0x30],ebx
64008a5b:	test   ebx,ebx
64008a5d:	je     0x64008aed
64008a63:	lea    eax,[ebp-0x24]
64008a66:	push   eax
64008a67:	mov    ecx,DWORD PTR [ebp+0x10]
64008a6a:	push   ecx
64008a6b:	mov    edx,DWORD PTR [ebp+0xc]
64008a6e:	push   edx
64008a6f:	push   ebx
64008a70:	push   esi
64008a71:	call   DWORD PTR ds:0x6402c0dc
64008a77:	test   eax,eax
64008a79:	je     0x64008aed
64008a7b:	mov    DWORD PTR [ebp-0x28],0x0
64008a82:	lea    eax,[ebp-0x28]
64008a85:	push   eax
64008a86:	push   0xf01ff
64008a8b:	push   esi
64008a8c:	call   DWORD PTR ds:0x6402c004
64008a92:	test   eax,eax
64008a94:	je     0x64008aed
64008a96:	mov    ecx,DWORD PTR [ebp-0x28]
64008a99:	push   ecx
64008a9a:	call   DWORD PTR ds:0x6402c000
64008aa0:	test   eax,eax
64008aa2:	je     0x64008aed
64008aa4:	lea    edx,[ebp-0x34]
64008aa7:	push   edx
64008aa8:	push   0x0
64008aaa:	push   edi
64008aab:	push   ebx
64008aac:	push   0x0
64008aae:	push   0x0
64008ab0:	push   esi
64008ab1:	call   DWORD PTR ds:0x6402c0c0
64008ab7:	mov    DWORD PTR [ebp-0x20],eax
64008aba:	test   eax,eax
64008abc:	je     0x64008aed
64008abe:	call   DWORD PTR ds:0x6402c008
64008ac4:	push   0xffffffff
64008ac6:	mov    eax,DWORD PTR [ebp-0x20]
64008ac9:	push   eax
64008aca:	call   DWORD PTR ds:0x6402c05c
64008ad0:	lea    ecx,[ebp-0x24]
64008ad3:	push   ecx
64008ad4:	push   0x1020
64008ad9:	mov    edx,DWORD PTR [ebp+0x14]
64008adc:	push   edx
64008add:	push   edi
64008ade:	push   esi
64008adf:	call   DWORD PTR ds:0x6402c0cc
64008ae5:	test   eax,eax
64008ae7:	je     0x64008aed
64008ae9:	mov    BYTE PTR [ebp-0x19],0x1
64008aed:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64008af4:	call   0x64008b17
64008af9:	mov    al,BYTE PTR [ebp-0x19]
64008afc:	mov    ecx,DWORD PTR [ebp-0x10]
64008aff:	mov    DWORD PTR fs:0x0,ecx
64008b06:	pop    ecx
64008b07:	pop    edi
64008b08:	pop    esi
64008b09:	pop    ebx
64008b0a:	mov    esp,ebp
64008b0c:	pop    ebp
64008b0d:	ret    
64008b0e:	mov    esi,DWORD PTR [ebp+0x8]
64008b11:	mov    edi,DWORD PTR [ebp-0x2c]
64008b14:	mov    ebx,DWORD PTR [ebp-0x30]
64008b17:	test   edi,edi
64008b19:	je     0x64008b2a
64008b1b:	push   0x8000
64008b20:	push   0x0
64008b22:	push   edi
64008b23:	push   esi
64008b24:	call   DWORD PTR ds:0x6402c0b8
64008b2a:	test   ebx,ebx
64008b2c:	je     0x64008b3d
64008b2e:	push   0x8000
64008b33:	push   0x0
64008b35:	push   ebx
64008b36:	push   esi
64008b37:	call   DWORD PTR ds:0x6402c0b8
64008b3d:	mov    eax,DWORD PTR [ebp-0x20]
64008b40:	test   eax,eax
64008b42:	je     0x64008b59
64008b44:	lea    ecx,[ebp-0x38]
64008b47:	push   ecx
64008b48:	push   eax
64008b49:	call   DWORD PTR ds:0x6402c0c4
64008b4f:	mov    edx,DWORD PTR [ebp-0x20]
64008b52:	push   edx
64008b53:	call   DWORD PTR ds:0x6402c078
64008b59:	ret    
64008b5a:	int3   
64008b5b:	int3   
64008b5c:	int3   
64008b5d:	int3   
64008b5e:	int3   
64008b5f:	int3   
64008b60:	push   ebp
64008b61:	mov    ebp,esp
64008b63:	push   0xffffffff
64008b65:	push   0x640237e1
64008b6a:	mov    eax,fs:0x0
64008b70:	push   eax
64008b71:	push   ecx
64008b72:	mov    eax,0x1060
64008b77:	call   0x64017ee0
64008b7c:	mov    eax,ds:0x640521ac
64008b81:	xor    eax,ebp
64008b83:	mov    DWORD PTR [ebp-0x14],eax
64008b86:	push   ebx
64008b87:	push   esi
64008b88:	push   edi
64008b89:	push   eax
64008b8a:	lea    eax,[ebp-0xc]
64008b8d:	mov    fs:0x0,eax
64008b93:	mov    DWORD PTR [ebp-0x10],esp
64008b96:	mov    ebx,DWORD PTR [ebp+0xc]
64008b99:	mov    eax,DWORD PTR [ebp+0x8]
64008b9c:	push   0x1018
64008ba1:	xor    edi,edi
64008ba3:	lea    edx,[ebp-0x1030]
64008ba9:	push   edi
64008baa:	push   edx
64008bab:	mov    DWORD PTR [ebp-0x104c],eax
64008bb1:	mov    DWORD PTR [ebp-0x1048],ecx
64008bb7:	mov    BYTE PTR [ebp-0x1038],0x0
64008bbe:	call   0x64015100
64008bc3:	mov    eax,ebx
64008bc5:	add    esp,0xc
64008bc8:	lea    edx,[eax+0x2]
64008bcb:	jmp    0x64008bd0
64008bcd:	lea    ecx,[ecx+0x0]
64008bd0:	mov    cx,WORD PTR [eax]
64008bd3:	add    eax,0x2
64008bd6:	cmp    cx,di
64008bd9:	jne    0x64008bd0
64008bdb:	sub    eax,edx
64008bdd:	sar    eax,1
64008bdf:	cmp    eax,0x400
64008be4:	ja     0x64008d90
64008bea:	push   edi
64008beb:	lea    ecx,[ebp-0x103c]
64008bf1:	call   0x64009c20
64008bf6:	push   0x640431bc
64008bfb:	mov    DWORD PTR [ebp-0x4],edi
64008bfe:	push   0xc
64008c00:	mov    ecx,0x640431f0
64008c05:	mov    BYTE PTR [ebp-0x4],0x1
64008c09:	call   0x64003090
64008c0e:	add    esp,0x8
64008c11:	push   ecx
64008c12:	mov    ecx,esp
64008c14:	mov    DWORD PTR [ebp-0x1050],esp
64008c1a:	push   ecx
64008c1b:	mov    ecx,eax
64008c1d:	call   0x64002ad0
64008c22:	call   0x64007990
64008c27:	add    esp,0x4
64008c2a:	push   eax
64008c2b:	lea    ecx,[ebp-0x103c]
64008c31:	call   0x64009cb0
64008c36:	mov    DWORD PTR [ebp-0x4],edi
64008c39:	jmp    0x64008c4d
64008c3b:	mov    DWORD PTR [ebp-0x4],0x0
64008c42:	mov    eax,0x64008c48
64008c47:	ret    
64008c48:	mov    ebx,DWORD PTR [ebp+0xc]
64008c4b:	xor    edi,edi
64008c4d:	lea    ecx,[ebp-0x103c]
64008c53:	call   0x64009ca0
64008c58:	test   eax,eax
64008c5a:	je     0x64008d7e
64008c60:	push   edi
64008c61:	lea    esi,[ebp-0x106c]
64008c67:	call   0x64007840
64008c6c:	add    esp,0x4
64008c6f:	lea    edx,[ebp-0x1044]
64008c75:	push   edx
64008c76:	mov    ecx,eax
64008c78:	mov    BYTE PTR [ebp-0x4],0x3
64008c7c:	call   0x6400a820
64008c81:	mov    BYTE PTR [ebp-0x4],0x5
64008c85:	cmp    DWORD PTR [ebp-0x1054],0x10
64008c8c:	jb     0x64008c9d
64008c8e:	mov    eax,DWORD PTR [ebp-0x1068]
64008c94:	push   eax
64008c95:	call   0x640135e4
64008c9a:	add    esp,0x4
64008c9d:	lea    ecx,[ebp-0x103c]
64008ca3:	mov    DWORD PTR [ebp-0x1054],0xf
64008cad:	mov    DWORD PTR [ebp-0x1058],edi
64008cb3:	mov    BYTE PTR [ebp-0x1068],0x0
64008cba:	mov    BYTE PTR [ebp-0x1038],0x0
64008cc1:	call   0x64009c80
64008cc6:	push   0x6404320c
64008ccb:	mov    esi,eax
64008ccd:	mov    edi,DWORD PTR [esi]
64008ccf:	push   0x17
64008cd1:	push   0x6404323c
64008cd6:	call   0x64002e90
64008cdb:	mov    edx,DWORD PTR [edi]
64008cdd:	add    esp,0xc
64008ce0:	push   eax
64008ce1:	mov    ecx,esi
64008ce3:	call   edx
64008ce5:	lea    ecx,[ebp-0x103c]
64008ceb:	mov    DWORD PTR [ebp-0x1030],eax
64008cf1:	mov    DWORD PTR [ebp-0x102c],edx
64008cf7:	call   0x64009c80
64008cfc:	push   0x64043254
64008d01:	mov    esi,eax
64008d03:	mov    edi,DWORD PTR [esi]
64008d05:	push   0x17
64008d07:	push   0x64043278
64008d0c:	call   0x64002e90
64008d11:	add    esp,0xc
64008d14:	push   eax
64008d15:	mov    eax,DWORD PTR [edi]
64008d17:	mov    ecx,esi
64008d19:	call   eax
64008d1b:	mov    DWORD PTR [ebp-0x1024],edx
64008d21:	lea    edx,[ebp-0x1020]
64008d27:	mov    DWORD PTR [ebp-0x1028],eax
64008d2d:	mov    eax,ebx
64008d2f:	sub    edx,ebx
64008d31:	movzx  ecx,WORD PTR [eax]
64008d34:	mov    WORD PTR [edx+eax*1],cx
64008d38:	add    eax,0x2
64008d3b:	test   cx,cx
64008d3e:	jne    0x64008d31
64008d40:	mov    eax,DWORD PTR [ebp-0x1044]
64008d46:	lea    edx,[ebp-0x1038]
64008d4c:	push   edx
64008d4d:	mov    DWORD PTR [ebp-0x20],0x40
64008d54:	mov    ecx,DWORD PTR [eax+0x6]
64008d57:	push   ecx
64008d58:	add    eax,0x12
64008d5b:	push   eax
64008d5c:	mov    eax,DWORD PTR [ebp-0x104c]
64008d62:	push   eax
64008d63:	call   0x640089b0
64008d68:	add    esp,0x10
64008d6b:	test   al,al
64008d6d:	jne    0x64008d94
64008d6f:	mov    ecx,DWORD PTR [ebp-0x1044]
64008d75:	push   ecx
64008d76:	call   0x640135e4
64008d7b:	add    esp,0x4
64008d7e:	lea    ecx,[ebp-0x103c]
64008d84:	mov    DWORD PTR [ebp-0x4],0xffffffff
64008d8b:	call   0x64009c40
64008d90:	xor    eax,eax
64008d92:	jmp    0x64008de2
64008d94:	mov    esi,DWORD PTR [ebp-0x20]
64008d97:	cmp    esi,0x40
64008d9a:	jae    0x64008dbf
64008d9c:	mov    edx,DWORD PTR [ebp-0x1048]
64008da2:	lea    eax,[ebp-0x820]
64008da8:	mov    ecx,eax
64008daa:	sub    edx,ecx
64008dac:	lea    esp,[esp+0x0]
64008db0:	movzx  ecx,WORD PTR [eax]
64008db3:	mov    WORD PTR [edx+eax*1],cx
64008db7:	add    eax,0x2
64008dba:	test   cx,cx
64008dbd:	jne    0x64008db0
64008dbf:	mov    edx,DWORD PTR [ebp-0x1044]
64008dc5:	push   edx
64008dc6:	call   0x640135e4
64008dcb:	add    esp,0x4
64008dce:	lea    ecx,[ebp-0x103c]
64008dd4:	mov    DWORD PTR [ebp-0x4],0xffffffff
64008ddb:	call   0x64009c40
64008de0:	mov    eax,esi
64008de2:	mov    ecx,DWORD PTR [ebp-0xc]
64008de5:	mov    DWORD PTR fs:0x0,ecx
64008dec:	pop    ecx
64008ded:	pop    edi
64008dee:	pop    esi
64008def:	pop    ebx
64008df0:	mov    ecx,DWORD PTR [ebp-0x14]
64008df3:	xor    ecx,ebp
64008df5:	call   0x64013ca6
64008dfa:	mov    esp,ebp
64008dfc:	pop    ebp
64008dfd:	ret    
64008dfe:	int3   
64008dff:	int3   
64008e00:	mov    ecx,DWORD PTR [eax]
64008e02:	push   ecx
64008e03:	call   0x640135e4
64008e08:	pop    ecx
64008e09:	ret    
64008e0a:	int3   
64008e0b:	int3   
64008e0c:	int3   
64008e0d:	int3   
64008e0e:	int3   
64008e0f:	int3   
64008e10:	push   ebp
64008e11:	mov    ebp,esp
64008e13:	push   0xffffffff
64008e15:	push   0x64023791
64008e1a:	mov    eax,fs:0x0
64008e20:	push   eax
64008e21:	push   ecx
64008e22:	mov    eax,0x105c
64008e27:	call   0x64017ee0
64008e2c:	mov    eax,ds:0x640521ac
64008e31:	xor    eax,ebp
64008e33:	mov    DWORD PTR [ebp-0x18],eax
64008e36:	push   ebx
64008e37:	push   esi
64008e38:	push   edi
64008e39:	push   eax
64008e3a:	lea    eax,[ebp-0xc]
64008e3d:	mov    fs:0x0,eax
64008e43:	mov    DWORD PTR [ebp-0x10],esp
64008e46:	mov    ebx,DWORD PTR [ebp+0xc]
64008e49:	mov    eax,DWORD PTR [ebp+0x8]
64008e4c:	push   0x1018
64008e51:	xor    edi,edi
64008e53:	lea    ecx,[ebp-0x1034]
64008e59:	push   edi
64008e5a:	push   ecx
64008e5b:	mov    DWORD PTR [ebp-0x1044],eax
64008e61:	mov    BYTE PTR [ebp-0x103c],0x0
64008e68:	call   0x64015100
64008e6d:	mov    eax,ebx
64008e6f:	add    esp,0xc
64008e72:	lea    edx,[eax+0x2]
64008e75:	mov    cx,WORD PTR [eax]
64008e78:	add    eax,0x2
64008e7b:	cmp    cx,di
64008e7e:	jne    0x64008e75
64008e80:	sub    eax,edx
64008e82:	sar    eax,1
64008e84:	cmp    eax,0x400
64008e89:	ja     0x64009068
64008e8f:	mov    eax,DWORD PTR [ebp+0x10]
64008e92:	lea    edx,[eax+0x2]
64008e95:	mov    cx,WORD PTR [eax]
64008e98:	add    eax,0x2
64008e9b:	cmp    cx,di
64008e9e:	jne    0x64008e95
64008ea0:	sub    eax,edx
64008ea2:	sar    eax,1
64008ea4:	cmp    eax,0x400
64008ea9:	ja     0x64009068
64008eaf:	push   edi
64008eb0:	lea    ecx,[ebp-0x1040]
64008eb6:	call   0x64009c20
64008ebb:	push   0x64043290
64008ec0:	mov    DWORD PTR [ebp-0x4],edi
64008ec3:	push   0xc
64008ec5:	mov    ecx,0x640431f0
64008eca:	mov    BYTE PTR [ebp-0x4],0x1
64008ece:	call   0x64003090
64008ed3:	add    esp,0x8
64008ed6:	push   ecx
64008ed7:	mov    edx,esp
64008ed9:	mov    DWORD PTR [ebp-0x1050],esp
64008edf:	push   edx
64008ee0:	mov    ecx,eax
64008ee2:	call   0x64002ad0
64008ee7:	call   0x64007990
64008eec:	add    esp,0x4
64008eef:	push   eax
64008ef0:	lea    ecx,[ebp-0x1040]
64008ef6:	call   0x64009cb0
64008efb:	mov    DWORD PTR [ebp-0x4],edi
64008efe:	jmp    0x64008f12
64008f00:	mov    DWORD PTR [ebp-0x4],0x0
64008f07:	mov    eax,0x64008f0d
64008f0c:	ret    
64008f0d:	mov    ebx,DWORD PTR [ebp+0xc]
64008f10:	xor    edi,edi
64008f12:	lea    ecx,[ebp-0x1040]
64008f18:	call   0x64009ca0
64008f1d:	test   eax,eax
64008f1f:	je     0x64009056
64008f25:	push   edi
64008f26:	lea    esi,[ebp-0x106c]
64008f2c:	call   0x64007840
64008f31:	add    esp,0x4
64008f34:	lea    ecx,[ebp-0x104c]
64008f3a:	push   ecx
64008f3b:	mov    ecx,eax
64008f3d:	mov    BYTE PTR [ebp-0x4],0x3
64008f41:	call   0x6400a820
64008f46:	mov    BYTE PTR [ebp-0x4],0x5
64008f4a:	cmp    DWORD PTR [ebp-0x1054],0x10
64008f51:	jb     0x64008f62
64008f53:	mov    edx,DWORD PTR [ebp-0x1068]
64008f59:	push   edx
64008f5a:	call   0x640135e4
64008f5f:	add    esp,0x4
64008f62:	lea    ecx,[ebp-0x1040]
64008f68:	mov    DWORD PTR [ebp-0x1054],0xf
64008f72:	mov    DWORD PTR [ebp-0x1058],edi
64008f78:	mov    BYTE PTR [ebp-0x1068],0x0
64008f7f:	mov    BYTE PTR [ebp-0x103c],0x1
64008f86:	call   0x64009c80
64008f8b:	push   0x640432b4
64008f90:	mov    esi,eax
64008f92:	mov    edi,DWORD PTR [esi]
64008f94:	push   0x17
64008f96:	push   0x6404323c
64008f9b:	call   0x64002e90
64008fa0:	add    esp,0xc
64008fa3:	push   eax
64008fa4:	mov    eax,DWORD PTR [edi]
64008fa6:	mov    ecx,esi
64008fa8:	call   eax
64008faa:	lea    ecx,[ebp-0x1040]
64008fb0:	mov    DWORD PTR [ebp-0x1034],eax
64008fb6:	mov    DWORD PTR [ebp-0x1030],edx
64008fbc:	call   0x64009c80
64008fc1:	push   0x640432f4
64008fc6:	mov    esi,eax
64008fc8:	mov    edi,DWORD PTR [esi]
64008fca:	push   0x17
64008fcc:	push   0x64043278
64008fd1:	call   0x64002e90
64008fd6:	mov    edx,DWORD PTR [edi]
64008fd8:	add    esp,0xc
64008fdb:	push   eax
64008fdc:	mov    ecx,esi
64008fde:	call   edx
64008fe0:	mov    DWORD PTR [ebp-0x1028],edx
64008fe6:	lea    edx,[ebp-0x1024]
64008fec:	mov    DWORD PTR [ebp-0x102c],eax
64008ff2:	mov    eax,ebx
64008ff4:	sub    edx,ebx
64008ff6:	movzx  ecx,WORD PTR [eax]
64008ff9:	mov    WORD PTR [edx+eax*1],cx
64008ffd:	add    eax,0x2
64009000:	test   cx,cx
64009003:	jne    0x64008ff6
64009005:	mov    eax,DWORD PTR [ebp+0x10]
64009008:	lea    edx,[ebp-0x824]
6400900e:	sub    edx,eax
64009010:	movzx  ecx,WORD PTR [eax]
64009013:	mov    WORD PTR [edx+eax*1],cx
64009017:	add    eax,0x2
6400901a:	test   cx,cx
6400901d:	jne    0x64009010
6400901f:	mov    eax,DWORD PTR [ebp-0x104c]
64009025:	mov    ecx,DWORD PTR [eax+0x6]
64009028:	lea    edx,[ebp-0x103c]
6400902e:	push   edx
6400902f:	push   ecx
64009030:	add    eax,0x12
64009033:	push   eax
64009034:	mov    eax,DWORD PTR [ebp-0x1044]
6400903a:	push   eax
6400903b:	call   0x640089b0
64009040:	add    esp,0x10
64009043:	test   al,al
64009045:	jne    0x6400906c
64009047:	mov    ecx,DWORD PTR [ebp-0x104c]
6400904d:	push   ecx
6400904e:	call   0x640135e4
64009053:	add    esp,0x4
64009056:	lea    ecx,[ebp-0x1040]
6400905c:	mov    DWORD PTR [ebp-0x4],0xffffffff
64009063:	call   0x64009c40
64009068:	xor    eax,eax
6400906a:	jmp    0x64009092
6400906c:	mov    edx,DWORD PTR [ebp-0x104c]
64009072:	push   edx
64009073:	call   0x640135e4
64009078:	add    esp,0x4
6400907b:	lea    ecx,[ebp-0x1040]
64009081:	mov    DWORD PTR [ebp-0x4],0xffffffff
64009088:	call   0x64009c40
6400908d:	mov    eax,0x1
64009092:	mov    ecx,DWORD PTR [ebp-0xc]
64009095:	mov    DWORD PTR fs:0x0,ecx
6400909c:	pop    ecx
6400909d:	pop    edi
6400909e:	pop    esi
6400909f:	pop    ebx
640090a0:	mov    ecx,DWORD PTR [ebp-0x18]
640090a3:	xor    ecx,ebp
640090a5:	call   0x64013ca6
640090aa:	mov    esp,ebp
640090ac:	pop    ebp
640090ad:	ret    
640090ae:	int3   
640090af:	int3   
640090b0:	push   0xffffffff
640090b2:	push   0x64023adb
640090b7:	mov    eax,fs:0x0
640090bd:	push   eax
640090be:	sub    esp,0x88
640090c4:	mov    eax,ds:0x640521ac
640090c9:	xor    eax,esp
640090cb:	mov    DWORD PTR [esp+0x84],eax
640090d2:	push   edi
640090d3:	mov    eax,ds:0x640521ac
640090d8:	xor    eax,esp
640090da:	push   eax
640090db:	lea    eax,[esp+0x90]
640090e2:	mov    fs:0x0,eax
640090e8:	mov    BYTE PTR [esi+0x890],0x0
640090ef:	mov    eax,ds:0x640539c4
640090f4:	mov    edx,DWORD PTR [eax+0xc]
640090f7:	mov    ecx,0x640539c4
640090fc:	call   edx
640090fe:	add    eax,0x10
64009101:	mov    DWORD PTR [esp+0x8],eax
64009105:	mov    DWORD PTR [esp+0x98],0x0
64009110:	mov    eax,DWORD PTR [esi+0x4]
64009113:	push   eax
64009114:	push   0x64043324
64009119:	push   0x10
6400911b:	mov    ecx,0x64043348
64009120:	call   0x64003090
64009125:	add    esp,0x8
64009128:	push   eax
64009129:	lea    ecx,[esp+0x10]
6400912d:	push   ecx
6400912e:	call   0x6400a560
64009133:	mov    edx,DWORD PTR [esp+0x14]
64009137:	mov    eax,DWORD PTR [esi]
64009139:	add    esp,0xc
6400913c:	push   edx
6400913d:	push   eax
6400913e:	lea    ecx,[esp+0x14]
64009142:	call   0x64008b60
64009147:	add    esp,0x8
6400914a:	test   eax,eax
6400914c:	je     0x640091a8
6400914e:	lea    eax,[esp+0xc]
64009152:	push   eax
64009153:	call   0x6401507c
64009158:	mov    edi,eax
6400915a:	add    esp,0x4
6400915d:	test   edi,edi
6400915f:	je     0x640091a8
64009161:	mov    eax,DWORD PTR [esi]
64009163:	push   0x0
64009165:	push   0x880
6400916a:	lea    ecx,[esi+0x8]
6400916d:	push   ecx
6400916e:	push   edi
6400916f:	push   eax
64009170:	call   DWORD PTR ds:0x6402c0cc
64009176:	test   eax,eax
64009178:	jne    0x6400919b
6400917a:	mov    DWORD PTR [esp+0x98],0xffffffff
64009185:	mov    eax,DWORD PTR [esp+0x8]
64009189:	add    eax,0xfffffff0
6400918c:	lea    edx,[eax+0xc]
6400918f:	or     ecx,0xffffffff
64009192:	lock xadd DWORD PTR [edx],ecx
64009196:	dec    ecx
64009197:	test   ecx,ecx
64009199:	jmp    0x640091c7
6400919b:	mov    DWORD PTR [esi+0x888],edi
640091a1:	mov    BYTE PTR [esi+0x890],0x1
640091a8:	mov    DWORD PTR [esp+0x98],0xffffffff
640091b3:	mov    eax,DWORD PTR [esp+0x8]
640091b7:	add    eax,0xfffffff0
640091ba:	or     edx,0xffffffff
640091bd:	lea    ecx,[eax+0xc]
640091c0:	lock xadd DWORD PTR [ecx],edx
640091c4:	dec    edx
640091c5:	test   edx,edx
640091c7:	jg     0x640091d3
640091c9:	mov    ecx,DWORD PTR [eax]
640091cb:	mov    edx,DWORD PTR [ecx]
640091cd:	push   eax
640091ce:	mov    eax,DWORD PTR [edx+0x4]
640091d1:	call   eax
640091d3:	mov    ecx,DWORD PTR [esp+0x90]
640091da:	mov    DWORD PTR fs:0x0,ecx
640091e1:	pop    ecx
640091e2:	pop    edi
640091e3:	mov    ecx,DWORD PTR [esp+0x84]
640091ea:	xor    ecx,esp
640091ec:	call   0x64013ca6
640091f1:	add    esp,0x94
640091f7:	ret    
640091f8:	int3   
640091f9:	int3   
640091fa:	int3   
640091fb:	int3   
640091fc:	int3   
640091fd:	int3   
640091fe:	int3   
640091ff:	int3   
64009200:	push   ebp
64009201:	mov    ebp,esp
64009203:	and    esp,0xfffffff8
64009206:	push   0xffffffff
64009208:	push   0x64023ba1
6400920d:	mov    eax,fs:0x0
64009213:	push   eax
64009214:	sub    esp,0x874
6400921a:	mov    eax,ds:0x640521ac
6400921f:	xor    eax,esp
64009221:	mov    DWORD PTR [esp+0x86c],eax
64009228:	push   esi
64009229:	push   edi
6400922a:	mov    eax,ds:0x640521ac
6400922f:	xor    eax,esp
64009231:	push   eax
64009232:	lea    eax,[esp+0x880]
64009239:	mov    fs:0x0,eax
6400923f:	mov    eax,DWORD PTR [ebp+0x8]
64009242:	mov    edi,ecx
64009244:	mov    esi,edi
64009246:	mov    DWORD PTR [esp+0x14],eax
6400924a:	call   0x640090b0
6400924f:	cmp    BYTE PTR [edi+0x890],0x0
64009256:	je     0x6400934d
6400925c:	push   ecx
6400925d:	mov    ecx,esp
6400925f:	mov    DWORD PTR [esp+0x1c],esp
64009263:	lea    esi,[edi+0x88]
64009269:	push   ecx
6400926a:	mov    ecx,esi
6400926c:	call   0x64002ad0
64009271:	mov    edx,DWORD PTR [edi+0x4]
64009274:	push   edx
64009275:	call   0x64002790
6400927a:	add    esp,0x8
6400927d:	test   al,al
6400927f:	je     0x640092c8
64009281:	xor    esi,esi
64009283:	push   esi
64009284:	push   0x64041a1e
64009289:	lea    ecx,[esp+0x38]
6400928d:	mov    DWORD PTR [esp+0x50],0xf
64009295:	mov    DWORD PTR [esp+0x4c],esi
64009299:	mov    BYTE PTR [esp+0x3c],0x0
6400929e:	call   0x64003450
640092a3:	lea    eax,[esp+0x30]
640092a7:	push   eax
640092a8:	lea    ecx,[esp+0x50]
640092ac:	push   ecx
640092ad:	mov    DWORD PTR [esp+0x890],esi
640092b4:	call   0x64001470
640092b9:	push   0x64044070
640092be:	lea    edx,[esp+0x50]
640092c2:	push   edx
640092c3:	call   0x64013812
640092c8:	mov    edx,esi
640092ca:	mov    eax,ebx
640092cc:	sub    edx,ebx
640092ce:	mov    edi,edi
640092d0:	movzx  ecx,WORD PTR [eax]
640092d3:	mov    WORD PTR [edx+eax*1],cx
640092d7:	add    eax,0x2
640092da:	test   cx,cx
640092dd:	jne    0x640092d0
640092df:	lea    ecx,[esp+0x1c]
640092e3:	call   0x64009b10
640092e8:	mov    DWORD PTR [esp+0x888],0x1
640092f3:	mov    eax,DWORD PTR [edi+0x4]
640092f6:	push   eax
640092f7:	lea    ecx,[esp+0x20]
640092fb:	call   0x64007a30
64009300:	mov    eax,DWORD PTR [edi+0x70]
64009303:	mov    ecx,DWORD PTR [edi]
64009305:	xor    edx,edx
64009307:	push   0x8000
6400930c:	push   edx
6400930d:	push   eax
6400930e:	push   ecx
6400930f:	mov    DWORD PTR [edi+0x70],edx
64009312:	mov    DWORD PTR [edi+0x74],edx
64009315:	mov    DWORD PTR [edi+0x78],edx
64009318:	call   DWORD PTR ds:0x6402c0b8
6400931e:	mov    ecx,DWORD PTR [esp+0x14]
64009322:	push   ecx
64009323:	mov    ecx,edi
64009325:	call   0x64007c90
6400932a:	push   edi
6400932b:	call   0x64008910
64009330:	lea    esi,[esp+0x1c]
64009334:	mov    DWORD PTR [esp+0x888],0xffffffff
6400933f:	call   0x64007b30
64009344:	mov    ecx,esi
64009346:	call   0x64009c00
6400934b:	jmp    0x64009385
6400934d:	lea    edx,[edi+0x88]
64009353:	mov    eax,ebx
64009355:	sub    edx,ebx
64009357:	jmp    0x64009360
64009359:	lea    esp,[esp+0x0]
64009360:	movzx  ecx,WORD PTR [eax]
64009363:	mov    WORD PTR [edx+eax*1],cx
64009367:	add    eax,0x2
6400936a:	test   cx,cx
6400936d:	jne    0x64009360
6400936f:	call   0x640087b0
64009374:	mov    edx,DWORD PTR [esp+0x14]
64009378:	push   edx
64009379:	mov    ecx,edi
6400937b:	call   0x64007c90
64009380:	call   0x64007f00
64009385:	push   0xa
64009387:	lea    eax,[esp+0x78]
6400938b:	push   eax
6400938c:	mov    eax,DWORD PTR [edi+0x888]
64009392:	cdq    
64009393:	push   edx
64009394:	push   eax
64009395:	call   0x64014e46
6400939a:	mov    edx,DWORD PTR ds:0x640539c4
640093a0:	mov    eax,DWORD PTR [edx+0xc]
640093a3:	add    esp,0x10
640093a6:	mov    ecx,0x640539c4
640093ab:	call   eax
640093ad:	add    eax,0x10
640093b0:	mov    DWORD PTR [esp+0x10],eax
640093b4:	mov    DWORD PTR [esp+0x888],0x2
640093bf:	mov    ecx,DWORD PTR [edi+0x4]
640093c2:	push   ecx
640093c3:	push   0x6404336c
640093c8:	push   0x10
640093ca:	mov    ecx,0x64043348
640093cf:	call   0x64003090
640093d4:	add    esp,0x8
640093d7:	push   eax
640093d8:	lea    edx,[esp+0x18]
640093dc:	push   edx
640093dd:	call   0x6400a560
640093e2:	mov    ecx,DWORD PTR [esp+0x1c]
640093e6:	mov    edi,DWORD PTR [edi]
640093e8:	add    esp,0xc
640093eb:	lea    eax,[esp+0x74]
640093ef:	push   eax
640093f0:	push   ecx
640093f1:	push   edi
640093f2:	call   0x64008e10
640093f7:	mov    DWORD PTR [esp+0x894],0xffffffff
64009402:	mov    eax,DWORD PTR [esp+0x1c]
64009406:	add    eax,0xfffffff0
64009409:	add    esp,0xc
6400940c:	lea    edx,[eax+0xc]
6400940f:	or     ecx,0xffffffff
64009412:	lock xadd DWORD PTR [edx],ecx
64009416:	dec    ecx
64009417:	test   ecx,ecx
64009419:	jg     0x64009425
6400941b:	mov    ecx,DWORD PTR [eax]
6400941d:	mov    edx,DWORD PTR [ecx]
6400941f:	push   eax
64009420:	mov    eax,DWORD PTR [edx+0x4]
64009423:	call   eax
64009425:	mov    ecx,DWORD PTR [esp+0x880]
6400942c:	mov    DWORD PTR fs:0x0,ecx
64009433:	pop    ecx
64009434:	pop    edi
64009435:	pop    esi
64009436:	mov    ecx,DWORD PTR [esp+0x86c]
6400943d:	xor    ecx,esp
6400943f:	call   0x64013ca6
64009444:	mov    esp,ebp
64009446:	pop    ebp
64009447:	ret    0x4
6400944a:	int3   
6400944b:	int3   
6400944c:	int3   
6400944d:	int3   
6400944e:	int3   
6400944f:	int3   
64009450:	push   ebp
64009451:	mov    ebp,esp
64009453:	push   0xffffffff
64009455:	push   0x64023be6
6400945a:	mov    eax,fs:0x0
64009460:	push   eax
64009461:	sub    esp,0x8bc
64009467:	mov    eax,ds:0x640521ac
6400946c:	xor    eax,ebp
6400946e:	mov    DWORD PTR [ebp-0x14],eax
64009471:	push   ebx
64009472:	push   esi
64009473:	push   edi
64009474:	push   eax
64009475:	lea    eax,[ebp-0xc]
64009478:	mov    fs:0x0,eax
6400947e:	mov    DWORD PTR [ebp-0x10],esp
64009481:	mov    esi,DWORD PTR [ebp+0x8]
64009484:	mov    edi,DWORD PTR [ebp+0xc]
64009487:	mov    ebx,DWORD PTR [ebp+0x10]
6400948a:	lea    eax,[ebp-0x8ac]
64009490:	push   eax
64009491:	mov    ecx,esi
64009493:	mov    DWORD PTR [ebp-0x4],0x0
6400949a:	call   0x64007b80
6400949f:	push   edi
640094a0:	lea    ecx,[ebp-0x8ac]
640094a6:	mov    BYTE PTR [ebp-0x4],0x1
640094aa:	call   0x64009200
640094af:	call   DWORD PTR ds:0x64052184
640094b5:	mov    edi,eax
640094b7:	call   DWORD PTR ds:0x6402c03c
640094bd:	cmp    esi,eax
640094bf:	je     0x64009528
640094c1:	test   ebx,ebx
640094c3:	jne    0x640094d9
640094c5:	mov    ecx,DWORD PTR [ebp-0x8ac]
640094cb:	xor    eax,eax
640094cd:	push   eax
640094ce:	push   ecx
640094cf:	call   0x640095f0
640094d4:	add    esp,0x8
640094d7:	jmp    0x6400952f
640094d9:	push   ebx
640094da:	call   DWORD PTR ds:0x6402c034
640094e0:	add    eax,0x1
640094e3:	cmp    eax,0x3fffffff
640094e8:	jle    0x640094fe
640094ea:	mov    ecx,DWORD PTR [ebp-0x8ac]
640094f0:	xor    eax,eax
640094f2:	push   eax
640094f3:	push   ecx
640094f4:	call   0x640095f0
640094f9:	add    esp,0x8
640094fc:	jmp    0x6400952f
640094fe:	lea    esi,[eax+eax*1]
64009501:	mov    eax,esi
64009503:	call   0x64013cc0
64009508:	mov    DWORD PTR [ebp-0x10],esp
6400950b:	mov    eax,esp
6400950d:	push   edi
6400950e:	push   esi
6400950f:	push   ebx
64009510:	push   eax
64009511:	call   0x64001040
64009516:	mov    ecx,DWORD PTR [ebp-0x8ac]
6400951c:	push   eax
6400951d:	push   ecx
6400951e:	call   0x640095f0
64009523:	add    esp,0x8
64009526:	jmp    0x6400952f
64009528:	push   ebx
64009529:	call   DWORD PTR ds:0x6402c0bc
6400952f:	lea    ecx,[ebp-0x18]
64009532:	call   0x64009a50
64009537:	mov    esi,DWORD PTR [ebp-0x8ac]
6400953d:	test   esi,esi
6400953f:	je     0x64009557
64009541:	call   DWORD PTR ds:0x6402c06c
64009547:	push   esi
64009548:	mov    edi,eax
6400954a:	call   DWORD PTR ds:0x6402c078
64009550:	push   edi
64009551:	call   DWORD PTR ds:0x6402c074
64009557:	lea    esp,[ebp-0x8d8]
6400955d:	mov    ecx,DWORD PTR [ebp-0xc]
64009560:	mov    DWORD PTR fs:0x0,ecx
64009567:	pop    ecx
64009568:	pop    edi
64009569:	pop    esi
6400956a:	pop    ebx
6400956b:	mov    ecx,DWORD PTR [ebp-0x14]
6400956e:	xor    ecx,ebp
64009570:	call   0x64013ca6
64009575:	mov    esp,ebp
64009577:	pop    ebp
64009578:	ret    
64009579:	push   0x64041a1e
6400957e:	lea    ecx,[ebp-0x8c8]
64009584:	call   0x64002970
64009589:	mov    BYTE PTR [ebp-0x4],0x3
6400958d:	call   0x6400a780
64009592:	lea    ecx,[ebp-0x8c8]
64009598:	call   0x640029b0
6400959d:	mov    eax,0x64009557
640095a2:	ret    
640095a3:	int3   
640095a4:	int3   
640095a5:	int3   
640095a6:	int3   
640095a7:	int3   
640095a8:	int3   
640095a9:	int3   
640095aa:	int3   
640095ab:	int3   
640095ac:	int3   
640095ad:	int3   
640095ae:	int3   
640095af:	int3   
640095b0:	push   edi
640095b1:	lea    ecx,[esi+0x894]
640095b7:	call   0x64009a50
640095bc:	mov    edi,DWORD PTR [esi]
640095be:	test   edi,edi
640095c0:	je     0x640095da
640095c2:	push   ebx
640095c3:	call   DWORD PTR ds:0x6402c06c
640095c9:	push   edi
640095ca:	mov    ebx,eax
640095cc:	call   DWORD PTR ds:0x6402c078
640095d2:	push   ebx
640095d3:	call   DWORD PTR ds:0x6402c074
640095d9:	pop    ebx
640095da:	mov    DWORD PTR [esi],0x0
640095e0:	pop    edi
640095e1:	ret    
640095e2:	int3   
640095e3:	int3   
640095e4:	int3   
640095e5:	int3   
640095e6:	int3   
640095e7:	int3   
640095e8:	int3   
640095e9:	int3   
640095ea:	int3   
640095eb:	int3   
640095ec:	int3   
640095ed:	int3   
640095ee:	int3   
640095ef:	int3   
640095f0:	push   ebp
640095f1:	mov    ebp,esp
640095f3:	push   0xffffffff
640095f5:	push   0x6402373b
640095fa:	mov    eax,fs:0x0
64009600:	push   eax
64009601:	push   ecx
64009602:	sub    esp,0x220
64009608:	mov    eax,ds:0x640521ac
6400960d:	xor    eax,ebp
6400960f:	mov    DWORD PTR [ebp-0x3c],eax
64009612:	push   ebx
64009613:	push   esi
64009614:	push   edi
64009615:	push   eax
64009616:	lea    eax,[ebp-0xc]
64009619:	mov    fs:0x0,eax
6400961f:	mov    DWORD PTR [ebp-0x10],esp
64009622:	push   0x64043390
64009627:	push   0xc
64009629:	mov    ecx,0x640431f0
6400962e:	call   0x64003090
64009633:	add    esp,0x4
64009636:	mov    ecx,esp
64009638:	mov    DWORD PTR [ebp-0xd8],esp
6400963e:	push   ecx
6400963f:	mov    ecx,eax
64009641:	call   0x64002ad0
64009646:	mov    DWORD PTR [ebp-0x200],eax
6400964c:	call   0x64007990
64009651:	add    esp,0x4
64009654:	mov    DWORD PTR [ebp-0x174],eax
6400965a:	mov    edx,DWORD PTR [ebp-0x174]
64009660:	mov    DWORD PTR [ebp-0x28],edx
64009663:	mov    DWORD PTR [ebp-0x4],0x0
6400966a:	cmp    DWORD PTR [ebp-0x28],0x0
6400966e:	jne    0x640096ce
64009670:	mov    BYTE PTR [ebp-0xd9],0x0
64009677:	mov    DWORD PTR [ebp-0x4],0xffffffff
6400967e:	mov    eax,DWORD PTR [ebp-0x28]
64009681:	mov    DWORD PTR [ebp-0x17c],eax
64009687:	mov    ecx,DWORD PTR [ebp-0x17c]
6400968d:	mov    DWORD PTR [ebp-0x178],ecx
64009693:	cmp    DWORD PTR [ebp-0x178],0x0
6400969a:	je     0x640096b9
6400969c:	push   0x1
6400969e:	mov    edx,DWORD PTR [ebp-0x178]
640096a4:	mov    eax,DWORD PTR [edx]
640096a6:	mov    ecx,DWORD PTR [ebp-0x178]
640096ac:	mov    edx,DWORD PTR [eax+0x4]
640096af:	call   edx
640096b1:	mov    DWORD PTR [ebp-0x204],eax
640096b7:	jmp    0x640096c3
640096b9:	mov    DWORD PTR [ebp-0x204],0x0
640096c3:	mov    al,BYTE PTR [ebp-0xd9]
640096c9:	jmp    0x64009a32
640096ce:	mov    eax,DWORD PTR [ebp+0x8]
640096d1:	push   eax
640096d2:	call   0x64002960
640096d7:	add    esp,0x4
640096da:	push   eax
640096db:	lea    esi,[ebp-0xf8]
640096e1:	call   0x64007800
640096e6:	add    esp,0x4
640096e9:	mov    DWORD PTR [ebp-0x208],eax
640096ef:	mov    ecx,DWORD PTR [ebp-0x208]
640096f5:	mov    DWORD PTR [ebp-0x20c],ecx
640096fb:	mov    BYTE PTR [ebp-0x4],0x1
640096ff:	lea    edx,[ebp-0x38]
64009702:	push   edx
64009703:	mov    ecx,DWORD PTR [ebp-0x20c]
64009709:	call   0x6400a820
6400970e:	mov    BYTE PTR [ebp-0x4],0x3
64009712:	lea    ecx,[ebp-0xf8]
64009718:	call   0x640029b0
6400971d:	mov    BYTE PTR [ebp-0x11],0x0
64009721:	mov    DWORD PTR [ebp-0x18],0x0
64009728:	mov    DWORD PTR [ebp-0x30],0x0
6400972f:	mov    DWORD PTR [ebp-0x24],0x0
64009736:	mov    DWORD PTR [ebp-0x2c],0x0
6400973d:	mov    DWORD PTR [ebp-0x1c],0x0
64009744:	mov    DWORD PTR [ebp-0x20],0x0
6400974b:	mov    BYTE PTR [ebp-0x4],0x4
6400974f:	mov    eax,DWORD PTR [ebp-0x28]
64009752:	mov    DWORD PTR [ebp-0x210],eax
64009758:	push   0x640433b8
6400975d:	push   0xc
6400975f:	push   0x640433ec
64009764:	call   0x64002e90
64009769:	add    esp,0xc
6400976c:	mov    DWORD PTR [ebp-0x214],eax
64009772:	mov    ecx,DWORD PTR [ebp-0x214]
64009778:	push   ecx
64009779:	mov    edx,DWORD PTR [ebp-0x210]
6400977f:	mov    eax,DWORD PTR [edx]
64009781:	mov    ecx,DWORD PTR [ebp-0x210]
64009787:	mov    edx,DWORD PTR [eax]
64009789:	call   edx
6400978b:	mov    DWORD PTR [ebp-0x21c],eax
64009791:	mov    DWORD PTR [ebp-0x218],edx
64009797:	mov    eax,DWORD PTR [ebp-0x21c]
6400979d:	mov    DWORD PTR [ebp-0xc8],eax
640097a3:	mov    ecx,DWORD PTR [ebp-0x218]
640097a9:	mov    DWORD PTR [ebp-0xc4],ecx
640097af:	push   0x80
640097b4:	push   0x0
640097b6:	lea    edx,[ebp-0xc0]
640097bc:	push   edx
640097bd:	call   0x64015100
640097c2:	add    esp,0xc
640097c5:	mov    eax,DWORD PTR [ebp+0xc]
640097c8:	mov    DWORD PTR [ebp-0x220],eax
640097ce:	lea    ecx,[ebp-0xc0]
640097d4:	mov    DWORD PTR [ebp-0x224],ecx
640097da:	mov    edx,DWORD PTR [ebp-0x224]
640097e0:	mov    DWORD PTR [ebp-0x228],edx
640097e6:	mov    eax,DWORD PTR [ebp-0x220]
640097ec:	mov    cl,BYTE PTR [eax]
640097ee:	mov    BYTE PTR [ebp-0x229],cl
640097f4:	mov    edx,DWORD PTR [ebp-0x224]
640097fa:	mov    al,BYTE PTR [ebp-0x229]
64009800:	mov    BYTE PTR [edx],al
64009802:	mov    ecx,DWORD PTR [ebp-0x220]
64009808:	add    ecx,0x1
6400980b:	mov    DWORD PTR [ebp-0x220],ecx
64009811:	mov    edx,DWORD PTR [ebp-0x224]
64009817:	add    edx,0x1
6400981a:	mov    DWORD PTR [ebp-0x224],edx
64009820:	cmp    BYTE PTR [ebp-0x229],0x0
64009827:	jne    0x640097e6
64009829:	mov    eax,DWORD PTR [ebp-0xc8]
6400982f:	or     eax,DWORD PTR [ebp-0xc4]
64009835:	jne    0x6400983c
64009837:	jmp    0x64009961
6400983c:	push   0x4
6400983e:	push   0x3000
64009843:	push   0x88
64009848:	push   0x0
6400984a:	mov    ecx,DWORD PTR [ebp+0x8]
6400984d:	push   ecx
6400984e:	call   DWORD PTR ds:0x6402c0c8
64009854:	mov    DWORD PTR [ebp-0x18],eax
64009857:	cmp    DWORD PTR [ebp-0x18],0x0
6400985b:	jne    0x6400986e
6400985d:	call   DWORD PTR ds:0x6402c06c
64009863:	mov    DWORD PTR [ebp-0xd4],eax
64009869:	jmp    0x64009961
6400986e:	lea    edx,[ebp-0x20]
64009871:	push   edx
64009872:	push   0x88
64009877:	lea    eax,[ebp-0xc8]
6400987d:	push   eax
6400987e:	mov    ecx,DWORD PTR [ebp-0x18]
64009881:	push   ecx
64009882:	mov    edx,DWORD PTR [ebp+0x8]
64009885:	push   edx
64009886:	call   DWORD PTR ds:0x6402c0dc
6400988c:	lea    eax,[ebp-0x38]
6400988f:	call   0x6400a990
64009894:	mov    DWORD PTR [ebp-0xcc],eax
6400989a:	push   0x40
6400989c:	push   0x3000
640098a1:	mov    eax,DWORD PTR [ebp-0xcc]
640098a7:	push   eax
640098a8:	push   0x0
640098aa:	mov    ecx,DWORD PTR [ebp+0x8]
640098ad:	push   ecx
640098ae:	call   DWORD PTR ds:0x6402c0c8
640098b4:	mov    DWORD PTR [ebp-0x30],eax
640098b7:	mov    edx,DWORD PTR [ebp-0x30]
640098ba:	push   edx
640098bb:	lea    eax,[ebp-0x38]
640098be:	call   0x6400a9a0
640098c3:	cmp    DWORD PTR [ebp-0x30],0x0
640098c7:	jne    0x640098ce
640098c9:	jmp    0x64009961
640098ce:	lea    eax,[ebp-0x20]
640098d1:	push   eax
640098d2:	mov    ecx,DWORD PTR [ebp-0xcc]
640098d8:	push   ecx
640098d9:	lea    eax,[ebp-0x38]
640098dc:	call   0x6400a980
640098e1:	push   eax
640098e2:	mov    edx,DWORD PTR [ebp-0x30]
640098e5:	push   edx
640098e6:	mov    eax,DWORD PTR [ebp+0x8]
640098e9:	push   eax
640098ea:	call   DWORD PTR ds:0x6402c0dc
640098f0:	mov    DWORD PTR [ebp-0xd0],0x0
640098fa:	lea    ecx,[ebp-0xd0]
64009900:	push   ecx
64009901:	push   0xf01ff
64009906:	mov    edx,DWORD PTR [ebp+0x8]
64009909:	push   edx
6400990a:	call   DWORD PTR ds:0x6402c004
64009910:	mov    eax,DWORD PTR [ebp-0xd0]
64009916:	push   eax
64009917:	call   DWORD PTR ds:0x6402c000
6400991d:	lea    ecx,[ebp-0x2c]
64009920:	push   ecx
64009921:	push   0x0
64009923:	mov    edx,DWORD PTR [ebp-0x18]
64009926:	push   edx
64009927:	mov    eax,DWORD PTR [ebp-0x30]
6400992a:	push   eax
6400992b:	push   0x0
6400992d:	push   0x0
6400992f:	mov    ecx,DWORD PTR [ebp+0x8]
64009932:	push   ecx
64009933:	call   DWORD PTR ds:0x6402c0c0
64009939:	mov    DWORD PTR [ebp-0x24],eax
6400993c:	cmp    DWORD PTR [ebp-0x24],0x0
64009940:	jne    0x64009944
64009942:	jmp    0x64009961
64009944:	call   DWORD PTR ds:0x6402c008
6400994a:	push   0xffffffff
6400994c:	mov    edx,DWORD PTR [ebp-0x24]
6400994f:	push   edx
64009950:	call   DWORD PTR ds:0x6402c05c
64009956:	mov    BYTE PTR [ebp-0x11],0x1
6400995a:	jmp    0x64009961
6400995c:	jmp    0x6400974f
64009961:	jmp    0x64009970
64009963:	mov    DWORD PTR [ebp-0x4],0x3
6400996a:	mov    eax,0x64009977
6400996f:	ret    
64009970:	mov    DWORD PTR [ebp-0x4],0x3
64009977:	cmp    DWORD PTR [ebp-0x18],0x0
6400997b:	je     0x64009992
6400997d:	push   0x8000
64009982:	push   0x0
64009984:	mov    eax,DWORD PTR [ebp-0x18]
64009987:	push   eax
64009988:	mov    ecx,DWORD PTR [ebp+0x8]
6400998b:	push   ecx
6400998c:	call   DWORD PTR ds:0x6402c0b8
64009992:	cmp    DWORD PTR [ebp-0x30],0x0
64009996:	je     0x640099ad
64009998:	push   0x8000
6400999d:	push   0x0
6400999f:	mov    edx,DWORD PTR [ebp-0x30]
640099a2:	push   edx
640099a3:	mov    eax,DWORD PTR [ebp+0x8]
640099a6:	push   eax
640099a7:	call   DWORD PTR ds:0x6402c0b8
640099ad:	cmp    DWORD PTR [ebp-0x24],0x0
640099b1:	je     0x640099cb
640099b3:	lea    ecx,[ebp-0x1c]
640099b6:	push   ecx
640099b7:	mov    edx,DWORD PTR [ebp-0x24]
640099ba:	push   edx
640099bb:	call   DWORD PTR ds:0x6402c0c4
640099c1:	mov    eax,DWORD PTR [ebp-0x24]
640099c4:	push   eax
640099c5:	call   DWORD PTR ds:0x6402c078
640099cb:	mov    cl,BYTE PTR [ebp-0x11]
640099ce:	mov    BYTE PTR [ebp-0xf9],cl
640099d4:	mov    BYTE PTR [ebp-0x4],0x0
640099d8:	lea    eax,[ebp-0x38]
640099db:	call   0x64008e00
640099e0:	mov    DWORD PTR [ebp-0x4],0xffffffff
640099e7:	mov    edx,DWORD PTR [ebp-0x28]
640099ea:	mov    DWORD PTR [ebp-0x1fc],edx
640099f0:	mov    eax,DWORD PTR [ebp-0x1fc]
640099f6:	mov    DWORD PTR [ebp-0x1f8],eax
640099fc:	cmp    DWORD PTR [ebp-0x1f8],0x0
64009a03:	je     0x64009a22
64009a05:	push   0x1
64009a07:	mov    ecx,DWORD PTR [ebp-0x1f8]
64009a0d:	mov    edx,DWORD PTR [ecx]
64009a0f:	mov    ecx,DWORD PTR [ebp-0x1f8]
64009a15:	mov    eax,DWORD PTR [edx+0x4]
64009a18:	call   eax
64009a1a:	mov    DWORD PTR [ebp-0x230],eax
64009a20:	jmp    0x64009a2c
64009a22:	mov    DWORD PTR [ebp-0x230],0x0
64009a2c:	mov    al,BYTE PTR [ebp-0xf9]
64009a32:	mov    ecx,DWORD PTR [ebp-0xc]
64009a35:	mov    DWORD PTR fs:0x0,ecx
64009a3c:	pop    ecx
64009a3d:	pop    edi
64009a3e:	pop    esi
64009a3f:	pop    ebx
64009a40:	mov    ecx,DWORD PTR [ebp-0x3c]
64009a43:	xor    ecx,ebp
64009a45:	call   0x64013ca6
64009a4a:	mov    esp,ebp
64009a4c:	pop    ebp
64009a4d:	ret    
64009a4e:	int3   
64009a4f:	int3   
64009a50:	push   ebp
64009a51:	mov    ebp,esp
64009a53:	sub    esp,0x14
64009a56:	mov    DWORD PTR [ebp-0x10],ecx
64009a59:	mov    eax,DWORD PTR [ebp-0x10]
64009a5c:	mov    ecx,DWORD PTR [eax]
64009a5e:	mov    DWORD PTR [ebp-0x8],ecx
64009a61:	mov    edx,DWORD PTR [ebp-0x8]
64009a64:	mov    DWORD PTR [ebp-0x4],edx
64009a67:	cmp    DWORD PTR [ebp-0x4],0x0
64009a6b:	je     0x64009a93
64009a6d:	mov    eax,DWORD PTR [ebp-0x4]
64009a70:	call   0x64008e00
64009a75:	mov    eax,0x1
64009a7a:	and    eax,0x1
64009a7d:	je     0x64009a8b
64009a7f:	mov    ecx,DWORD PTR [ebp-0x4]
64009a82:	push   ecx
64009a83:	call   0x640135e4
64009a88:	add    esp,0x4
64009a8b:	mov    edx,DWORD PTR [ebp-0x4]
64009a8e:	mov    DWORD PTR [ebp-0x14],edx
64009a91:	jmp    0x64009a9a
64009a93:	mov    DWORD PTR [ebp-0x14],0x0
64009a9a:	mov    esp,ebp
64009a9c:	pop    ebp
64009a9d:	ret    
64009a9e:	int3   
64009a9f:	int3   
64009aa0:	push   ebp
64009aa1:	mov    ebp,esp
64009aa3:	sub    esp,0x14
64009aa6:	mov    DWORD PTR [ebp-0x10],ecx
64009aa9:	mov    eax,DWORD PTR [ebp-0x10]
64009aac:	mov    ecx,DWORD PTR [ebp+0x8]
64009aaf:	cmp    ecx,DWORD PTR [eax]
64009ab1:	je     0x64009af4
64009ab3:	mov    edx,DWORD PTR [ebp-0x10]
64009ab6:	mov    eax,DWORD PTR [edx]
64009ab8:	mov    DWORD PTR [ebp-0x8],eax
64009abb:	mov    ecx,DWORD PTR [ebp-0x8]
64009abe:	mov    DWORD PTR [ebp-0x4],ecx
64009ac1:	cmp    DWORD PTR [ebp-0x4],0x0
64009ac5:	je     0x64009aed
64009ac7:	mov    eax,DWORD PTR [ebp-0x4]
64009aca:	call   0x64008e00
64009acf:	mov    edx,0x1
64009ad4:	and    edx,0x1
64009ad7:	je     0x64009ae5
64009ad9:	mov    eax,DWORD PTR [ebp-0x4]
64009adc:	push   eax
64009add:	call   0x640135e4
64009ae2:	add    esp,0x4
64009ae5:	mov    ecx,DWORD PTR [ebp-0x4]
64009ae8:	mov    DWORD PTR [ebp-0x14],ecx
64009aeb:	jmp    0x64009af4
64009aed:	mov    DWORD PTR [ebp-0x14],0x0
64009af4:	mov    edx,DWORD PTR [ebp-0x10]
64009af7:	mov    eax,DWORD PTR [ebp+0x8]
64009afa:	mov    DWORD PTR [edx],eax
64009afc:	mov    esp,ebp
64009afe:	pop    ebp
64009aff:	ret    0x4
64009b02:	int3   
64009b03:	int3   
64009b04:	int3   
64009b05:	int3   
64009b06:	int3   
64009b07:	int3   
64009b08:	int3   
64009b09:	int3   
64009b0a:	int3   
64009b0b:	int3   
64009b0c:	int3   
64009b0d:	int3   
64009b0e:	int3   
64009b0f:	int3   
64009b10:	push   ebp
64009b11:	mov    ebp,esp
64009b13:	sub    esp,0x18
64009b16:	mov    DWORD PTR [ebp-0x18],ecx
64009b19:	lea    eax,[ebp-0x12]
64009b1c:	mov    DWORD PTR [ebp-0x8],eax
64009b1f:	lea    ecx,[ebp-0x11]
64009b22:	mov    DWORD PTR [ebp-0x10],ecx
64009b25:	mov    edx,DWORD PTR [ebp-0x18]
64009b28:	mov    DWORD PTR [edx+0x4],0x0
64009b2f:	mov    eax,DWORD PTR [ebp-0x18]
64009b32:	mov    DWORD PTR [eax+0x8],0x0
64009b39:	mov    ecx,DWORD PTR [ebp-0x18]
64009b3c:	mov    DWORD PTR [ecx+0xc],0x0
64009b43:	mov    edx,DWORD PTR [ebp-0x18]
64009b46:	mov    DWORD PTR [edx+0x10],0x0
64009b4d:	mov    eax,DWORD PTR [ebp-0x18]
64009b50:	mov    esp,ebp
64009b52:	pop    ebp
64009b53:	ret    
64009b54:	int3   
64009b55:	int3   
64009b56:	int3   
64009b57:	int3   
64009b58:	int3   
64009b59:	int3   
64009b5a:	int3   
64009b5b:	int3   
64009b5c:	int3   
64009b5d:	int3   
64009b5e:	int3   
64009b5f:	int3   
64009b60:	push   ebp
64009b61:	mov    ebp,esp
64009b63:	sub    esp,0x8
64009b66:	mov    DWORD PTR [ebp-0x8],ecx
64009b69:	mov    eax,DWORD PTR [ebp-0x8]
64009b6c:	mov    ecx,DWORD PTR [eax+0x10]
64009b6f:	mov    DWORD PTR [ebp-0x4],ecx
64009b72:	mov    eax,DWORD PTR [ebp-0x4]
64009b75:	mov    esp,ebp
64009b77:	pop    ebp
64009b78:	ret    
64009b79:	int3   
64009b7a:	int3   
64009b7b:	int3   
64009b7c:	int3   
64009b7d:	int3   
64009b7e:	int3   
64009b7f:	int3   
64009b80:	push   ebp
64009b81:	mov    ebp,esp
64009b83:	sub    esp,0x20
64009b86:	mov    DWORD PTR [ebp-0x20],ecx
64009b89:	lea    eax,[ebp-0xc]
64009b8c:	push   eax
64009b8d:	mov    ecx,DWORD PTR [ebp-0x20]
64009b90:	call   0x64009f90
64009b95:	mov    DWORD PTR [ebp-0x1c],eax
64009b98:	mov    ecx,DWORD PTR [ebp-0x1c]
64009b9b:	call   0x6400a4d0
64009ba0:	mov    esp,ebp
64009ba2:	pop    ebp
64009ba3:	ret    
64009ba4:	int3   
64009ba5:	int3   
64009ba6:	int3   
64009ba7:	int3   
64009ba8:	int3   
64009ba9:	int3   
64009baa:	int3   
64009bab:	int3   
64009bac:	int3   
64009bad:	int3   
64009bae:	int3   
64009baf:	int3   
64009bb0:	push   ebp
64009bb1:	mov    ebp,esp
64009bb3:	sub    esp,0xc8
64009bb9:	mov    DWORD PTR [ebp-0xc8],ecx
64009bbf:	mov    eax,DWORD PTR [ebp+0x8]
64009bc2:	push   eax
64009bc3:	mov    ecx,DWORD PTR [ebp-0xc8]
64009bc9:	call   0x64009d80
64009bce:	mov    esp,ebp
64009bd0:	pop    ebp
64009bd1:	ret    0x4
64009bd4:	int3   
64009bd5:	int3   
64009bd6:	int3   
64009bd7:	int3   
64009bd8:	int3   
64009bd9:	int3   
64009bda:	int3   
64009bdb:	int3   
64009bdc:	int3   
64009bdd:	int3   
64009bde:	int3   
64009bdf:	int3   
64009be0:	push   ebp
64009be1:	mov    ebp,esp
64009be3:	sub    esp,0x8
64009be6:	mov    DWORD PTR [ebp-0x8],ecx
64009be9:	mov    ecx,DWORD PTR [ebp-0x8]
64009bec:	call   0x64009d00
64009bf1:	mov    esp,ebp
64009bf3:	pop    ebp
64009bf4:	ret    
64009bf5:	int3   
64009bf6:	int3   
64009bf7:	int3   
64009bf8:	int3   
64009bf9:	int3   
64009bfa:	int3   
64009bfb:	int3   
64009bfc:	int3   
64009bfd:	int3   
64009bfe:	int3   
64009bff:	int3   
64009c00:	push   ebp
64009c01:	mov    ebp,esp
64009c03:	sub    esp,0x1c
64009c06:	mov    DWORD PTR [ebp-0x1c],ecx
64009c09:	mov    ecx,DWORD PTR [ebp-0x1c]
64009c0c:	call   0x64009ee0
64009c11:	mov    esp,ebp
64009c13:	pop    ebp
64009c14:	ret    
64009c15:	int3   
64009c16:	int3   
64009c17:	int3   
64009c18:	int3   
64009c19:	int3   
64009c1a:	int3   
64009c1b:	int3   
64009c1c:	int3   
64009c1d:	int3   
64009c1e:	int3   
64009c1f:	int3   
64009c20:	push   ebp
64009c21:	mov    ebp,esp
64009c23:	push   ecx
64009c24:	mov    DWORD PTR [ebp-0x4],ecx
64009c27:	mov    eax,DWORD PTR [ebp-0x4]
64009c2a:	mov    ecx,DWORD PTR [ebp+0x8]
64009c2d:	mov    DWORD PTR [eax],ecx
64009c2f:	mov    eax,DWORD PTR [ebp-0x4]
64009c32:	mov    esp,ebp
64009c34:	pop    ebp
64009c35:	ret    0x4
64009c38:	int3   
64009c39:	int3   
64009c3a:	int3   
64009c3b:	int3   
64009c3c:	int3   
64009c3d:	int3   
64009c3e:	int3   
64009c3f:	int3   
64009c40:	push   ebp
64009c41:	mov    ebp,esp
64009c43:	sub    esp,0x10
64009c46:	mov    DWORD PTR [ebp-0xc],ecx
64009c49:	mov    eax,DWORD PTR [ebp-0xc]
64009c4c:	mov    ecx,DWORD PTR [eax]
64009c4e:	mov    DWORD PTR [ebp-0x8],ecx
64009c51:	mov    edx,DWORD PTR [ebp-0x8]
64009c54:	mov    DWORD PTR [ebp-0x4],edx
64009c57:	cmp    DWORD PTR [ebp-0x4],0x0
64009c5b:	je     0x64009c71
64009c5d:	push   0x1
64009c5f:	mov    eax,DWORD PTR [ebp-0x4]
64009c62:	mov    edx,DWORD PTR [eax]
64009c64:	mov    ecx,DWORD PTR [ebp-0x4]
64009c67:	mov    eax,DWORD PTR [edx+0x4]
64009c6a:	call   eax
64009c6c:	mov    DWORD PTR [ebp-0x10],eax
64009c6f:	jmp    0x64009c78
64009c71:	mov    DWORD PTR [ebp-0x10],0x0
64009c78:	mov    esp,ebp
64009c7a:	pop    ebp
64009c7b:	ret    
64009c7c:	int3   
64009c7d:	int3   
64009c7e:	int3   
64009c7f:	int3   
64009c80:	push   ebp
64009c81:	mov    ebp,esp
64009c83:	sub    esp,0x8
64009c86:	mov    DWORD PTR [ebp-0x8],ecx
64009c89:	mov    eax,DWORD PTR [ebp-0x8]
64009c8c:	mov    ecx,DWORD PTR [eax]
64009c8e:	mov    DWORD PTR [ebp-0x4],ecx
64009c91:	mov    eax,DWORD PTR [ebp-0x4]
64009c94:	mov    esp,ebp
64009c96:	pop    ebp
64009c97:	ret    
64009c98:	int3   
64009c99:	int3   
64009c9a:	int3   
64009c9b:	int3   
64009c9c:	int3   
64009c9d:	int3   
64009c9e:	int3   
64009c9f:	int3   
64009ca0:	push   ebp
64009ca1:	mov    ebp,esp
64009ca3:	push   ecx
64009ca4:	mov    DWORD PTR [ebp-0x4],ecx
64009ca7:	mov    eax,DWORD PTR [ebp-0x4]
64009caa:	mov    eax,DWORD PTR [eax]
64009cac:	mov    esp,ebp
64009cae:	pop    ebp
64009caf:	ret    
64009cb0:	push   ebp
64009cb1:	mov    ebp,esp
64009cb3:	sub    esp,0x10
64009cb6:	mov    DWORD PTR [ebp-0xc],ecx
64009cb9:	mov    eax,DWORD PTR [ebp-0xc]
64009cbc:	mov    ecx,DWORD PTR [ebp+0x8]
64009cbf:	cmp    ecx,DWORD PTR [eax]
64009cc1:	je     0x64009cf2
64009cc3:	mov    edx,DWORD PTR [ebp-0xc]
64009cc6:	mov    eax,DWORD PTR [edx]
64009cc8:	mov    DWORD PTR [ebp-0x8],eax
64009ccb:	mov    ecx,DWORD PTR [ebp-0x8]
64009cce:	mov    DWORD PTR [ebp-0x4],ecx
64009cd1:	cmp    DWORD PTR [ebp-0x4],0x0
64009cd5:	je     0x64009ceb
64009cd7:	push   0x1
64009cd9:	mov    edx,DWORD PTR [ebp-0x4]
64009cdc:	mov    eax,DWORD PTR [edx]
64009cde:	mov    ecx,DWORD PTR [ebp-0x4]
64009ce1:	mov    edx,DWORD PTR [eax+0x4]
64009ce4:	call   edx
64009ce6:	mov    DWORD PTR [ebp-0x10],eax
64009ce9:	jmp    0x64009cf2
64009ceb:	mov    DWORD PTR [ebp-0x10],0x0
64009cf2:	mov    eax,DWORD PTR [ebp-0xc]
64009cf5:	mov    ecx,DWORD PTR [ebp+0x8]
64009cf8:	mov    DWORD PTR [eax],ecx
64009cfa:	mov    esp,ebp
64009cfc:	pop    ebp
64009cfd:	ret    0x4
64009d00:	push   ebp
64009d01:	mov    ebp,esp
64009d03:	sub    esp,0x8
64009d06:	mov    DWORD PTR [ebp-0x8],ecx
64009d09:	mov    eax,DWORD PTR [ebp-0x8]
64009d0c:	xor    ecx,ecx
64009d0e:	cmp    DWORD PTR [eax+0x10],0x0
64009d12:	sete   cl
64009d15:	movzx  edx,cl
64009d18:	test   edx,edx
64009d1a:	jne    0x64009d74
64009d1c:	mov    eax,DWORD PTR [ebp-0x8]
64009d1f:	mov    ecx,DWORD PTR [eax+0xc]
64009d22:	shr    ecx,0x2
64009d25:	mov    DWORD PTR [ebp-0x4],ecx
64009d28:	mov    edx,DWORD PTR [ebp-0x8]
64009d2b:	mov    eax,DWORD PTR [edx+0xc]
64009d2e:	add    eax,0x1
64009d31:	mov    ecx,DWORD PTR [ebp-0x8]
64009d34:	mov    DWORD PTR [ecx+0xc],eax
64009d37:	mov    edx,DWORD PTR [ebp-0x8]
64009d3a:	mov    eax,DWORD PTR [edx+0x8]
64009d3d:	shl    eax,0x2
64009d40:	mov    ecx,DWORD PTR [ebp-0x8]
64009d43:	cmp    eax,DWORD PTR [ecx+0xc]
64009d46:	ja     0x64009d52
64009d48:	mov    edx,DWORD PTR [ebp-0x8]
64009d4b:	mov    DWORD PTR [edx+0xc],0x0
64009d52:	mov    eax,DWORD PTR [ebp-0x8]
64009d55:	mov    ecx,DWORD PTR [eax+0x10]
64009d58:	sub    ecx,0x1
64009d5b:	mov    edx,DWORD PTR [ebp-0x8]
64009d5e:	mov    DWORD PTR [edx+0x10],ecx
64009d61:	mov    eax,DWORD PTR [ebp-0x8]
64009d64:	cmp    DWORD PTR [eax+0x10],0x0
64009d68:	jne    0x64009d74
64009d6a:	mov    ecx,DWORD PTR [ebp-0x8]
64009d6d:	mov    DWORD PTR [ecx+0xc],0x0
64009d74:	mov    esp,ebp
64009d76:	pop    ebp
64009d77:	ret    
64009d78:	int3   
64009d79:	int3   
64009d7a:	int3   
64009d7b:	int3   
64009d7c:	int3   
64009d7d:	int3   
64009d7e:	int3   
64009d7f:	int3   
64009d80:	push   ebp
64009d81:	mov    ebp,esp
64009d83:	sub    esp,0xe8
64009d89:	push   esi
64009d8a:	mov    DWORD PTR [ebp-0xe4],ecx
64009d90:	mov    eax,DWORD PTR [ebp-0xe4]
64009d96:	mov    eax,DWORD PTR [eax+0xc]
64009d99:	mov    ecx,DWORD PTR [ebp-0xe4]
64009d9f:	add    eax,DWORD PTR [ecx+0x10]
64009da2:	xor    edx,edx
64009da4:	mov    ecx,0x4
64009da9:	div    ecx
64009dab:	test   edx,edx
64009dad:	jne    0x64009dd6
64009daf:	mov    edx,DWORD PTR [ebp-0xe4]
64009db5:	mov    eax,DWORD PTR [edx+0x10]
64009db8:	add    eax,0x4
64009dbb:	shr    eax,0x2
64009dbe:	mov    ecx,DWORD PTR [ebp-0xe4]
64009dc4:	cmp    DWORD PTR [ecx+0x8],eax
64009dc7:	ja     0x64009dd6
64009dc9:	push   0x1
64009dcb:	mov    ecx,DWORD PTR [ebp-0xe4]
64009dd1:	call   0x6400a080
64009dd6:	mov    edx,DWORD PTR [ebp-0xe4]
64009ddc:	mov    eax,DWORD PTR [edx+0xc]
64009ddf:	mov    ecx,DWORD PTR [ebp-0xe4]
64009de5:	add    eax,DWORD PTR [ecx+0x10]
64009de8:	mov    DWORD PTR [ebp-0x4],eax
64009deb:	mov    edx,DWORD PTR [ebp-0x4]
64009dee:	shr    edx,0x2
64009df1:	mov    DWORD PTR [ebp-0x8],edx
64009df4:	mov    eax,DWORD PTR [ebp-0xe4]
64009dfa:	mov    ecx,DWORD PTR [eax+0x8]
64009dfd:	cmp    ecx,DWORD PTR [ebp-0x8]
64009e00:	ja     0x64009e11
64009e02:	mov    edx,DWORD PTR [ebp-0xe4]
64009e08:	mov    eax,DWORD PTR [ebp-0x8]
64009e0b:	sub    eax,DWORD PTR [edx+0x8]
64009e0e:	mov    DWORD PTR [ebp-0x8],eax
64009e11:	mov    ecx,DWORD PTR [ebp-0xe4]
64009e17:	mov    edx,DWORD PTR [ecx+0x4]
64009e1a:	mov    eax,DWORD PTR [ebp-0x8]
64009e1d:	cmp    DWORD PTR [edx+eax*4],0x0
64009e21:	jne    0x64009e42
64009e23:	push   0x4
64009e25:	mov    ecx,DWORD PTR [ebp-0xe4]
64009e2b:	add    ecx,0x1
64009e2e:	call   0x6400a430
64009e33:	mov    ecx,DWORD PTR [ebp-0xe4]
64009e39:	mov    edx,DWORD PTR [ecx+0x4]
64009e3c:	mov    ecx,DWORD PTR [ebp-0x8]
64009e3f:	mov    DWORD PTR [edx+ecx*4],eax
64009e42:	mov    edx,DWORD PTR [ebp-0xe4]
64009e48:	mov    ecx,DWORD PTR [edx+0x4]
64009e4b:	mov    eax,DWORD PTR [ebp-0x4]
64009e4e:	xor    edx,edx
64009e50:	mov    esi,0x4
64009e55:	div    esi
64009e57:	mov    eax,DWORD PTR [ebp-0x8]
64009e5a:	mov    ecx,DWORD PTR [ecx+eax*4]
64009e5d:	lea    edx,[ecx+edx*4]
64009e60:	mov    DWORD PTR [ebp-0xe0],edx
64009e66:	mov    eax,DWORD PTR [ebp-0xe0]
64009e6c:	mov    DWORD PTR [ebp-0xd8],eax
64009e72:	mov    ecx,DWORD PTR [ebp-0xd8]
64009e78:	push   ecx
64009e79:	push   0x4
64009e7b:	call   0x64001230
64009e80:	add    esp,0x8
64009e83:	mov    DWORD PTR [ebp-0xdc],eax
64009e89:	cmp    DWORD PTR [ebp-0xdc],0x0
64009e90:	je     0x64009ead
64009e92:	mov    edx,DWORD PTR [ebp-0xdc]
64009e98:	mov    eax,DWORD PTR [ebp+0x8]
64009e9b:	mov    ecx,DWORD PTR [eax]
64009e9d:	mov    DWORD PTR [edx],ecx
64009e9f:	mov    edx,DWORD PTR [ebp-0xdc]
64009ea5:	mov    DWORD PTR [ebp-0xe8],edx
64009eab:	jmp    0x64009eb7
64009ead:	mov    DWORD PTR [ebp-0xe8],0x0
64009eb7:	mov    eax,DWORD PTR [ebp-0xe4]
64009ebd:	mov    ecx,DWORD PTR [eax+0x10]
64009ec0:	add    ecx,0x1
64009ec3:	mov    edx,DWORD PTR [ebp-0xe4]
64009ec9:	mov    DWORD PTR [edx+0x10],ecx
64009ecc:	pop    esi
64009ecd:	mov    esp,ebp
64009ecf:	pop    ebp
64009ed0:	ret    0x4
64009ed3:	int3   
64009ed4:	int3   
64009ed5:	int3   
64009ed6:	int3   
64009ed7:	int3   
64009ed8:	int3   
64009ed9:	int3   
64009eda:	int3   
64009edb:	int3   
64009edc:	int3   
64009edd:	int3   
64009ede:	int3   
64009edf:	int3   
64009ee0:	push   ebp
64009ee1:	mov    ebp,esp
64009ee3:	sub    esp,0x1c
64009ee6:	mov    DWORD PTR [ebp-0x1c],ecx
64009ee9:	mov    eax,DWORD PTR [ebp-0x1c]
64009eec:	xor    ecx,ecx
64009eee:	cmp    DWORD PTR [eax+0x10],0x0
64009ef2:	sete   cl
64009ef5:	movzx  edx,cl
64009ef8:	test   edx,edx
64009efa:	jne    0x64009f06
64009efc:	mov    ecx,DWORD PTR [ebp-0x1c]
64009eff:	call   0x6400a000
64009f04:	jmp    0x64009ee9
64009f06:	mov    eax,DWORD PTR [ebp-0x1c]
64009f09:	mov    ecx,DWORD PTR [eax+0x8]
64009f0c:	mov    DWORD PTR [ebp-0x4],ecx
64009f0f:	cmp    DWORD PTR [ebp-0x4],0x0
64009f13:	jbe    0x64009f4a
64009f15:	mov    edx,DWORD PTR [ebp-0x4]
64009f18:	sub    edx,0x1
64009f1b:	mov    DWORD PTR [ebp-0x4],edx
64009f1e:	mov    eax,DWORD PTR [ebp-0x1c]
64009f21:	mov    ecx,DWORD PTR [eax+0x4]
64009f24:	mov    edx,DWORD PTR [ebp-0x4]
64009f27:	cmp    DWORD PTR [ecx+edx*4],0x0
64009f2b:	je     0x64009f48
64009f2d:	mov    eax,DWORD PTR [ebp-0x1c]
64009f30:	mov    ecx,DWORD PTR [eax+0x4]
64009f33:	mov    edx,DWORD PTR [ebp-0x4]
64009f36:	mov    eax,DWORD PTR [ecx+edx*4]
64009f39:	mov    DWORD PTR [ebp-0x10],eax
64009f3c:	mov    ecx,DWORD PTR [ebp-0x10]
64009f3f:	push   ecx
64009f40:	call   0x640135e4
64009f45:	add    esp,0x4
64009f48:	jmp    0x64009f0f
64009f4a:	mov    edx,DWORD PTR [ebp-0x1c]
64009f4d:	cmp    DWORD PTR [edx+0x4],0x0
64009f51:	je     0x64009f71
64009f53:	mov    eax,DWORD PTR [ebp-0x1c]
64009f56:	mov    ecx,DWORD PTR [eax+0x8]
64009f59:	mov    DWORD PTR [ebp-0x18],ecx
64009f5c:	mov    edx,DWORD PTR [ebp-0x1c]
64009f5f:	mov    eax,DWORD PTR [edx+0x4]
64009f62:	mov    DWORD PTR [ebp-0x14],eax
64009f65:	mov    ecx,DWORD PTR [ebp-0x14]
64009f68:	push   ecx
64009f69:	call   0x640135e4
64009f6e:	add    esp,0x4
64009f71:	mov    edx,DWORD PTR [ebp-0x1c]
64009f74:	mov    DWORD PTR [edx+0x8],0x0
64009f7b:	mov    eax,DWORD PTR [ebp-0x1c]
64009f7e:	mov    DWORD PTR [eax+0x4],0x0
64009f85:	mov    esp,ebp
64009f87:	pop    ebp
64009f88:	ret    
64009f89:	int3   
64009f8a:	int3   
64009f8b:	int3   
64009f8c:	int3   
64009f8d:	int3   
64009f8e:	int3   
64009f8f:	int3   
64009f90:	push   ebp
64009f91:	mov    ebp,esp
64009f93:	sub    esp,0x8
64009f96:	mov    DWORD PTR [ebp-0x8],ecx
64009f99:	mov    eax,DWORD PTR [ebp-0x8]
64009f9c:	mov    ecx,DWORD PTR [eax+0xc]
64009f9f:	mov    DWORD PTR [ebp-0x4],ecx
64009fa2:	mov    ecx,DWORD PTR [ebp+0x8]
64009fa5:	call   0x64001340
64009faa:	mov    edx,0x1
64009faf:	test   edx,edx
64009fb1:	je     0x64009fda
64009fb3:	cmp    DWORD PTR [ebp-0x8],0x0
64009fb7:	je     0x64009fd5
64009fb9:	mov    eax,DWORD PTR [ebp-0x8]
64009fbc:	mov    ecx,DWORD PTR [eax+0xc]
64009fbf:	cmp    ecx,DWORD PTR [ebp-0x4]
64009fc2:	ja     0x64009fd5
64009fc4:	mov    edx,DWORD PTR [ebp-0x8]
64009fc7:	mov    eax,DWORD PTR [edx+0xc]
64009fca:	mov    ecx,DWORD PTR [ebp-0x8]
64009fcd:	add    eax,DWORD PTR [ecx+0x10]
64009fd0:	cmp    DWORD PTR [ebp-0x4],eax
64009fd3:	jbe    0x64009fda
64009fd5:	call   0x64013e16
64009fda:	mov    edx,DWORD PTR [ebp+0x8]
64009fdd:	mov    eax,DWORD PTR [ebp-0x8]
64009fe0:	mov    DWORD PTR [edx+0x4],eax
64009fe3:	mov    ecx,DWORD PTR [ebp+0x8]
64009fe6:	mov    edx,DWORD PTR [ebp-0x4]
64009fe9:	mov    DWORD PTR [ecx+0x8],edx
64009fec:	mov    eax,DWORD PTR [ebp+0x8]
64009fef:	mov    esp,ebp
64009ff1:	pop    ebp
64009ff2:	ret    0x4
64009ff5:	int3   
64009ff6:	int3   
64009ff7:	int3   
64009ff8:	int3   
64009ff9:	int3   
64009ffa:	int3   
64009ffb:	int3   
64009ffc:	int3   
64009ffd:	int3   
64009ffe:	int3   
64009fff:	int3   
6400a000:	push   ebp
6400a001:	mov    ebp,esp
6400a003:	sub    esp,0xc
6400a006:	mov    DWORD PTR [ebp-0xc],ecx
6400a009:	mov    eax,DWORD PTR [ebp-0xc]
6400a00c:	xor    ecx,ecx
6400a00e:	cmp    DWORD PTR [eax+0x10],0x0
6400a012:	sete   cl
6400a015:	movzx  edx,cl
6400a018:	test   edx,edx
6400a01a:	jne    0x6400a071
6400a01c:	mov    eax,DWORD PTR [ebp-0xc]
6400a01f:	mov    ecx,DWORD PTR [eax+0x10]
6400a022:	mov    edx,DWORD PTR [ebp-0xc]
6400a025:	mov    eax,DWORD PTR [edx+0xc]
6400a028:	lea    ecx,[ecx+eax*1-0x1]
6400a02c:	mov    DWORD PTR [ebp-0x4],ecx
6400a02f:	mov    edx,DWORD PTR [ebp-0x4]
6400a032:	shr    edx,0x2
6400a035:	mov    DWORD PTR [ebp-0x8],edx
6400a038:	mov    eax,DWORD PTR [ebp-0xc]
6400a03b:	mov    ecx,DWORD PTR [eax+0x8]
6400a03e:	cmp    ecx,DWORD PTR [ebp-0x8]
6400a041:	ja     0x6400a04f
6400a043:	mov    edx,DWORD PTR [ebp-0xc]
6400a046:	mov    eax,DWORD PTR [ebp-0x8]
6400a049:	sub    eax,DWORD PTR [edx+0x8]
6400a04c:	mov    DWORD PTR [ebp-0x8],eax
6400a04f:	mov    ecx,DWORD PTR [ebp-0xc]
6400a052:	mov    edx,DWORD PTR [ecx+0x10]
6400a055:	sub    edx,0x1
6400a058:	mov    eax,DWORD PTR [ebp-0xc]
6400a05b:	mov    DWORD PTR [eax+0x10],edx
6400a05e:	mov    ecx,DWORD PTR [ebp-0xc]
6400a061:	cmp    DWORD PTR [ecx+0x10],0x0
6400a065:	jne    0x6400a071
6400a067:	mov    edx,DWORD PTR [ebp-0xc]
6400a06a:	mov    DWORD PTR [edx+0xc],0x0
6400a071:	mov    esp,ebp
6400a073:	pop    ebp
6400a074:	ret    
6400a075:	int3   
6400a076:	int3   
6400a077:	int3   
6400a078:	int3   
6400a079:	int3   
6400a07a:	int3   
6400a07b:	int3   
6400a07c:	int3   
6400a07d:	int3   
6400a07e:	int3   
6400a07f:	int3   
6400a080:	push   ebp
6400a081:	mov    ebp,esp
6400a083:	sub    esp,0x168
6400a089:	mov    DWORD PTR [ebp-0x160],ecx
6400a08f:	mov    DWORD PTR [ebp-0x20],0x3fffffff
6400a096:	cmp    DWORD PTR [ebp-0x20],0x0
6400a09a:	jbe    0x6400a0a7
6400a09c:	mov    eax,DWORD PTR [ebp-0x20]
6400a09f:	mov    DWORD PTR [ebp-0x164],eax
6400a0a5:	jmp    0x6400a0b1
6400a0a7:	mov    DWORD PTR [ebp-0x164],0x1
6400a0b1:	mov    ecx,DWORD PTR [ebp-0x164]
6400a0b7:	shr    ecx,0x2
6400a0ba:	mov    edx,DWORD PTR [ebp-0x160]
6400a0c0:	sub    ecx,DWORD PTR [edx+0x8]
6400a0c3:	cmp    ecx,DWORD PTR [ebp+0x8]
6400a0c6:	jae    0x6400a0cd
6400a0c8:	call   0x6400a450
6400a0cd:	mov    eax,DWORD PTR [ebp-0x160]
6400a0d3:	mov    ecx,DWORD PTR [eax+0x8]
6400a0d6:	shr    ecx,1
6400a0d8:	mov    DWORD PTR [ebp-0x8],ecx
6400a0db:	cmp    DWORD PTR [ebp-0x8],0x8
6400a0df:	jae    0x6400a0e8
6400a0e1:	mov    DWORD PTR [ebp-0x8],0x8
6400a0e8:	mov    edx,DWORD PTR [ebp+0x8]
6400a0eb:	cmp    edx,DWORD PTR [ebp-0x8]
6400a0ee:	jae    0x6400a12f
6400a0f0:	mov    DWORD PTR [ebp-0x6c],0x3fffffff
6400a0f7:	cmp    DWORD PTR [ebp-0x6c],0x0
6400a0fb:	jbe    0x6400a108
6400a0fd:	mov    eax,DWORD PTR [ebp-0x6c]
6400a100:	mov    DWORD PTR [ebp-0x168],eax
6400a106:	jmp    0x6400a112
6400a108:	mov    DWORD PTR [ebp-0x168],0x1
6400a112:	mov    ecx,DWORD PTR [ebp-0x168]
6400a118:	shr    ecx,0x2
6400a11b:	sub    ecx,DWORD PTR [ebp-0x8]
6400a11e:	mov    edx,DWORD PTR [ebp-0x160]
6400a124:	cmp    DWORD PTR [edx+0x8],ecx
6400a127:	ja     0x6400a12f
6400a129:	mov    eax,DWORD PTR [ebp-0x8]
6400a12c:	mov    DWORD PTR [ebp+0x8],eax
6400a12f:	mov    ecx,DWORD PTR [ebp-0x160]
6400a135:	mov    edx,DWORD PTR [ecx+0xc]
6400a138:	shr    edx,0x2
6400a13b:	mov    DWORD PTR [ebp-0x4],edx
6400a13e:	mov    eax,DWORD PTR [ebp-0x160]
6400a144:	mov    ecx,DWORD PTR [eax+0x8]
6400a147:	add    ecx,DWORD PTR [ebp+0x8]
6400a14a:	mov    DWORD PTR [ebp-0x7c],ecx
6400a14d:	push   0x0
6400a14f:	mov    edx,DWORD PTR [ebp-0x7c]
6400a152:	push   edx
6400a153:	call   0x6400a600
6400a158:	add    esp,0x8
6400a15b:	mov    DWORD PTR [ebp-0x10],eax
6400a15e:	mov    eax,DWORD PTR [ebp-0x4]
6400a161:	mov    ecx,DWORD PTR [ebp-0x10]
6400a164:	lea    edx,[ecx+eax*4]
6400a167:	mov    DWORD PTR [ebp-0xc],edx
6400a16a:	mov    eax,DWORD PTR [ebp-0x160]
6400a170:	push   eax
6400a171:	mov    ecx,DWORD PTR [ebp-0xc]
6400a174:	push   ecx
6400a175:	mov    edx,DWORD PTR [ebp-0x160]
6400a17b:	mov    eax,DWORD PTR [edx+0x8]
6400a17e:	mov    ecx,DWORD PTR [ebp-0x160]
6400a184:	mov    edx,DWORD PTR [ecx+0x4]
6400a187:	lea    eax,[edx+eax*4]
6400a18a:	push   eax
6400a18b:	mov    ecx,DWORD PTR [ebp-0x160]
6400a191:	mov    edx,DWORD PTR [ecx+0x4]
6400a194:	mov    eax,DWORD PTR [ebp-0x4]
6400a197:	lea    ecx,[edx+eax*4]
6400a19a:	push   ecx
6400a19b:	call   0x6400a590
6400a1a0:	add    esp,0x10
6400a1a3:	mov    DWORD PTR [ebp-0xc],eax
6400a1a6:	mov    edx,DWORD PTR [ebp-0x4]
6400a1a9:	cmp    edx,DWORD PTR [ebp+0x8]
6400a1ac:	ja     0x6400a2d4
6400a1b2:	mov    eax,DWORD PTR [ebp-0x160]
6400a1b8:	push   eax
6400a1b9:	mov    ecx,DWORD PTR [ebp-0xc]
6400a1bc:	push   ecx
6400a1bd:	mov    edx,DWORD PTR [ebp-0x160]
6400a1c3:	mov    eax,DWORD PTR [edx+0x4]
6400a1c6:	mov    ecx,DWORD PTR [ebp-0x4]
6400a1c9:	lea    edx,[eax+ecx*4]
6400a1cc:	push   edx
6400a1cd:	mov    eax,DWORD PTR [ebp-0x160]
6400a1d3:	mov    ecx,DWORD PTR [eax+0x4]
6400a1d6:	push   ecx
6400a1d7:	call   0x6400a590
6400a1dc:	add    esp,0x10
6400a1df:	mov    DWORD PTR [ebp-0xc],eax
6400a1e2:	mov    DWORD PTR [ebp-0x14],0x0
6400a1e9:	mov    edx,DWORD PTR [ebp-0xc]
6400a1ec:	mov    DWORD PTR [ebp-0xd0],edx
6400a1f2:	xor    eax,eax
6400a1f4:	mov    BYTE PTR [ebp-0xba],al
6400a1fa:	mov    cl,BYTE PTR [ebp-0xbc]
6400a200:	mov    BYTE PTR [ebp-0xbb],cl
6400a206:	mov    dl,BYTE PTR [ebp-0xba]
6400a20c:	mov    BYTE PTR [ebp-0xc9],dl
6400a212:	mov    eax,DWORD PTR [ebp-0xd0]
6400a218:	mov    DWORD PTR [ebp-0xc8],eax
6400a21e:	mov    ecx,DWORD PTR [ebp-0xc8]
6400a224:	mov    DWORD PTR [ebp-0xc4],ecx
6400a22a:	xor    edx,edx
6400a22c:	mov    BYTE PTR [ebp-0xbd],dl
6400a232:	mov    al,BYTE PTR [ebp-0xbd]
6400a238:	push   eax
6400a239:	mov    cl,BYTE PTR [ebp-0xbe]
6400a23f:	push   ecx
6400a240:	lea    edx,[ebp-0x14]
6400a243:	push   edx
6400a244:	mov    eax,DWORD PTR [ebp+0x8]
6400a247:	sub    eax,DWORD PTR [ebp-0x4]
6400a24a:	push   eax
6400a24b:	mov    ecx,DWORD PTR [ebp-0xc4]
6400a251:	push   ecx
6400a252:	call   0x6400a720
6400a257:	add    esp,0x14
6400a25a:	mov    DWORD PTR [ebp-0x18],0x0
6400a261:	mov    edx,DWORD PTR [ebp-0x10]
6400a264:	mov    DWORD PTR [ebp-0xe8],edx
6400a26a:	xor    eax,eax
6400a26c:	mov    BYTE PTR [ebp-0xd1],al
6400a272:	mov    cl,BYTE PTR [ebp-0xd3]
6400a278:	mov    BYTE PTR [ebp-0xd2],cl
6400a27e:	mov    dl,BYTE PTR [ebp-0xd1]
6400a284:	mov    BYTE PTR [ebp-0xe1],dl
6400a28a:	mov    eax,DWORD PTR [ebp-0xe8]
6400a290:	mov    DWORD PTR [ebp-0xe0],eax
6400a296:	mov    ecx,DWORD PTR [ebp-0xe0]
6400a29c:	mov    DWORD PTR [ebp-0xdc],ecx
6400a2a2:	xor    edx,edx
6400a2a4:	mov    BYTE PTR [ebp-0xd4],dl
6400a2aa:	mov    al,BYTE PTR [ebp-0xd4]
6400a2b0:	push   eax
6400a2b1:	mov    cl,BYTE PTR [ebp-0xd5]
6400a2b7:	push   ecx
6400a2b8:	lea    edx,[ebp-0x18]
6400a2bb:	push   edx
6400a2bc:	mov    eax,DWORD PTR [ebp-0x4]
6400a2bf:	push   eax
6400a2c0:	mov    ecx,DWORD PTR [ebp-0xdc]
6400a2c6:	push   ecx
6400a2c7:	call   0x6400a720
6400a2cc:	add    esp,0x14
6400a2cf:	jmp    0x6400a38a
6400a2d4:	mov    edx,DWORD PTR [ebp-0x160]
6400a2da:	push   edx
6400a2db:	mov    eax,DWORD PTR [ebp-0xc]
6400a2de:	push   eax
6400a2df:	mov    ecx,DWORD PTR [ebp-0x160]
6400a2e5:	mov    edx,DWORD PTR [ecx+0x4]
6400a2e8:	mov    eax,DWORD PTR [ebp+0x8]
6400a2eb:	lea    ecx,[edx+eax*4]
6400a2ee:	push   ecx
6400a2ef:	mov    edx,DWORD PTR [ebp-0x160]
6400a2f5:	mov    eax,DWORD PTR [edx+0x4]
6400a2f8:	push   eax
6400a2f9:	call   0x6400a590
6400a2fe:	add    esp,0x10
6400a301:	mov    ecx,DWORD PTR [ebp-0x160]
6400a307:	push   ecx
6400a308:	mov    edx,DWORD PTR [ebp-0x10]
6400a30b:	push   edx
6400a30c:	mov    eax,DWORD PTR [ebp-0x160]
6400a312:	mov    ecx,DWORD PTR [eax+0x4]
6400a315:	mov    edx,DWORD PTR [ebp-0x4]
6400a318:	lea    eax,[ecx+edx*4]
6400a31b:	push   eax
6400a31c:	mov    ecx,DWORD PTR [ebp-0x160]
6400a322:	mov    edx,DWORD PTR [ecx+0x4]
6400a325:	mov    eax,DWORD PTR [ebp+0x8]
6400a328:	lea    ecx,[edx+eax*4]
6400a32b:	push   ecx
6400a32c:	call   0x6400a590
6400a331:	add    esp,0x10
6400a334:	mov    DWORD PTR [ebp-0xc],eax
6400a337:	mov    DWORD PTR [ebp-0x1c],0x0
6400a33e:	mov    edx,DWORD PTR [ebp-0xc]
6400a341:	mov    DWORD PTR [ebp-0x148],edx
6400a347:	xor    eax,eax
6400a349:	mov    BYTE PTR [ebp-0x126],al
6400a34f:	mov    cl,BYTE PTR [ebp-0x128]
6400a355:	mov    BYTE PTR [ebp-0x127],cl
6400a35b:	mov    dl,BYTE PTR [ebp-0x126]
6400a361:	mov    BYTE PTR [ebp-0x141],dl
6400a367:	mov    eax,DWORD PTR [ebp-0x148]
6400a36d:	mov    DWORD PTR [ebp-0x140],eax
6400a373:	lea    ecx,[ebp-0x1c]
6400a376:	push   ecx
6400a377:	mov    edx,DWORD PTR [ebp+0x8]
6400a37a:	push   edx
6400a37b:	mov    eax,DWORD PTR [ebp-0x140]
6400a381:	push   eax
6400a382:	call   0x6400a6b0
6400a387:	add    esp,0xc
6400a38a:	mov    ecx,DWORD PTR [ebp-0x160]
6400a390:	mov    edx,DWORD PTR [ecx+0x8]
6400a393:	mov    eax,DWORD PTR [ebp-0x160]
6400a399:	mov    ecx,DWORD PTR [eax+0x4]
6400a39c:	lea    edx,[ecx+edx*4]
6400a39f:	mov    DWORD PTR [ebp-0x154],edx
6400a3a5:	mov    eax,DWORD PTR [ebp-0x160]
6400a3ab:	mov    ecx,DWORD PTR [eax+0x4]
6400a3ae:	mov    edx,DWORD PTR [ebp-0x4]
6400a3b1:	lea    eax,[ecx+edx*4]
6400a3b4:	mov    DWORD PTR [ebp-0x150],eax
6400a3ba:	mov    cl,BYTE PTR [ebp-0x14a]
6400a3c0:	mov    BYTE PTR [ebp-0x149],cl
6400a3c6:	mov    edx,DWORD PTR [ebp-0x160]
6400a3cc:	cmp    DWORD PTR [edx+0x4],0x0
6400a3d0:	je     0x6400a3ff
6400a3d2:	mov    eax,DWORD PTR [ebp-0x160]
6400a3d8:	mov    ecx,DWORD PTR [eax+0x8]
6400a3db:	mov    DWORD PTR [ebp-0x15c],ecx
6400a3e1:	mov    edx,DWORD PTR [ebp-0x160]
6400a3e7:	mov    eax,DWORD PTR [edx+0x4]
6400a3ea:	mov    DWORD PTR [ebp-0x158],eax
6400a3f0:	mov    ecx,DWORD PTR [ebp-0x158]
6400a3f6:	push   ecx
6400a3f7:	call   0x640135e4
6400a3fc:	add    esp,0x4
6400a3ff:	mov    edx,DWORD PTR [ebp-0x160]
6400a405:	mov    eax,DWORD PTR [ebp-0x10]
6400a408:	mov    DWORD PTR [edx+0x4],eax
6400a40b:	mov    ecx,DWORD PTR [ebp-0x160]
6400a411:	mov    edx,DWORD PTR [ecx+0x8]
6400a414:	add    edx,DWORD PTR [ebp+0x8]
6400a417:	mov    eax,DWORD PTR [ebp-0x160]
6400a41d:	mov    DWORD PTR [eax+0x8],edx
6400a420:	mov    esp,ebp
6400a422:	pop    ebp
6400a423:	ret    0x4
6400a426:	int3   
6400a427:	int3   
6400a428:	int3   
6400a429:	int3   
6400a42a:	int3   
6400a42b:	int3   
6400a42c:	int3   
6400a42d:	int3   
6400a42e:	int3   
6400a42f:	int3   
6400a430:	push   ebp
6400a431:	mov    ebp,esp
6400a433:	sub    esp,0x10
6400a436:	mov    DWORD PTR [ebp-0x10],ecx
6400a439:	push   0x0
6400a43b:	mov    eax,DWORD PTR [ebp+0x8]
6400a43e:	push   eax
6400a43f:	call   0x6400a600
6400a444:	add    esp,0x8
6400a447:	mov    esp,ebp
6400a449:	pop    ebp
6400a44a:	ret    0x4
6400a44d:	int3   
6400a44e:	int3   
6400a44f:	int3   
6400a450:	push   ebp
6400a451:	mov    ebp,esp
6400a453:	push   0xffffffff
6400a455:	push   0x64023418
6400a45a:	mov    eax,fs:0x0
6400a460:	push   eax
6400a461:	sub    esp,0x6c
6400a464:	mov    eax,ds:0x640521ac
6400a469:	xor    eax,ebp
6400a46b:	push   eax
6400a46c:	lea    eax,[ebp-0xc]
6400a46f:	mov    fs:0x0,eax
6400a475:	push   0x640433fc
6400a47a:	lea    ecx,[ebp-0x50]
6400a47d:	call   0x64002970
6400a482:	mov    DWORD PTR [ebp-0x4],0x0
6400a489:	lea    eax,[ebp-0x50]
6400a48c:	push   eax
6400a48d:	lea    ecx,[ebp-0x34]
6400a490:	call   0x64001410
6400a495:	push   0x64044104
6400a49a:	lea    ecx,[ebp-0x34]
6400a49d:	push   ecx
6400a49e:	call   0x64013812
6400a4a3:	mov    DWORD PTR [ebp-0x4],0xffffffff
6400a4aa:	lea    ecx,[ebp-0x50]
6400a4ad:	call   0x640029b0
6400a4b2:	mov    ecx,DWORD PTR [ebp-0xc]
6400a4b5:	mov    DWORD PTR fs:0x0,ecx
6400a4bc:	pop    ecx
6400a4bd:	mov    esp,ebp
6400a4bf:	pop    ebp
6400a4c0:	ret    
6400a4c1:	int3   
6400a4c2:	int3   
6400a4c3:	int3   
6400a4c4:	int3   
6400a4c5:	int3   
6400a4c6:	int3   
6400a4c7:	int3   
6400a4c8:	int3   
6400a4c9:	int3   
6400a4ca:	int3   
6400a4cb:	int3   
6400a4cc:	int3   
6400a4cd:	int3   
6400a4ce:	int3   
6400a4cf:	int3   
6400a4d0:	push   ebp
6400a4d1:	mov    ebp,esp
6400a4d3:	sub    esp,0xc
6400a4d6:	mov    DWORD PTR [ebp-0xc],ecx
6400a4d9:	mov    eax,DWORD PTR [ebp-0xc]
6400a4dc:	mov    ecx,DWORD PTR [eax+0x8]
6400a4df:	shr    ecx,0x2
6400a4e2:	mov    DWORD PTR [ebp-0x4],ecx
6400a4e5:	mov    edx,DWORD PTR [ebp-0xc]
6400a4e8:	mov    eax,DWORD PTR [edx+0x8]
6400a4eb:	and    eax,0x3
6400a4ee:	mov    DWORD PTR [ebp-0x8],eax
6400a4f1:	mov    ecx,DWORD PTR [ebp-0xc]
6400a4f4:	cmp    DWORD PTR [ecx+0x4],0x0
6400a4f8:	jne    0x6400a4ff
6400a4fa:	call   0x64013e16
6400a4ff:	mov    edx,DWORD PTR [ebp-0xc]
6400a502:	mov    eax,DWORD PTR [edx+0x4]
6400a505:	mov    ecx,DWORD PTR [ebp-0xc]
6400a508:	mov    edx,DWORD PTR [ecx+0x4]
6400a50b:	mov    eax,DWORD PTR [eax+0xc]
6400a50e:	add    eax,DWORD PTR [edx+0x10]
6400a511:	mov    ecx,DWORD PTR [ebp-0xc]
6400a514:	cmp    DWORD PTR [ecx+0x8],eax
6400a517:	jb     0x6400a51e
6400a519:	call   0x64013e16
6400a51e:	mov    edx,DWORD PTR [ebp-0xc]
6400a521:	mov    eax,DWORD PTR [edx+0x4]
6400a524:	mov    ecx,DWORD PTR [eax+0x8]
6400a527:	cmp    ecx,DWORD PTR [ebp-0x4]
6400a52a:	ja     0x6400a53b
6400a52c:	mov    edx,DWORD PTR [ebp-0xc]
6400a52f:	mov    eax,DWORD PTR [edx+0x4]
6400a532:	mov    ecx,DWORD PTR [ebp-0x4]
6400a535:	sub    ecx,DWORD PTR [eax+0x8]
6400a538:	mov    DWORD PTR [ebp-0x4],ecx
6400a53b:	mov    edx,DWORD PTR [ebp-0xc]
6400a53e:	mov    eax,DWORD PTR [edx+0x4]
6400a541:	mov    ecx,DWORD PTR [eax+0x4]
6400a544:	mov    edx,DWORD PTR [ebp-0x4]
6400a547:	mov    eax,DWORD PTR [ecx+edx*4]
6400a54a:	mov    ecx,DWORD PTR [ebp-0x8]
6400a54d:	lea    eax,[eax+ecx*4]
6400a550:	mov    esp,ebp
6400a552:	pop    ebp
6400a553:	ret    
6400a554:	int3   
6400a555:	int3   
6400a556:	int3   
6400a557:	int3   
6400a558:	int3   
6400a559:	int3   
6400a55a:	int3   
6400a55b:	int3   
6400a55c:	int3   
6400a55d:	int3   
6400a55e:	int3   
6400a55f:	int3   
6400a560:	push   ebp
6400a561:	mov    ebp,esp
6400a563:	sub    esp,0x18
6400a566:	lea    eax,[ebp+0x10]
6400a569:	mov    DWORD PTR [ebp-0x4],eax
6400a56c:	mov    ecx,DWORD PTR [ebp-0x4]
6400a56f:	push   ecx
6400a570:	mov    edx,DWORD PTR [ebp+0xc]
6400a573:	push   edx
6400a574:	mov    ecx,DWORD PTR [ebp+0x8]
6400a577:	call   0x6400a650
6400a57c:	mov    DWORD PTR [ebp-0x4],0x0
6400a583:	mov    esp,ebp
6400a585:	pop    ebp
6400a586:	ret    
6400a587:	int3   
6400a588:	int3   
6400a589:	int3   
6400a58a:	int3   
6400a58b:	int3   
6400a58c:	int3   
6400a58d:	int3   
6400a58e:	int3   
6400a58f:	int3   
6400a590:	push   ebp
6400a591:	mov    ebp,esp
6400a593:	sub    esp,0x20
6400a596:	xor    eax,eax
6400a598:	mov    BYTE PTR [ebp-0x1],al
6400a59b:	mov    cl,BYTE PTR [ebp-0x3]
6400a59e:	mov    BYTE PTR [ebp-0x2],cl
6400a5a1:	mov    edx,DWORD PTR [ebp+0xc]
6400a5a4:	mov    DWORD PTR [ebp-0x8],edx
6400a5a7:	mov    eax,DWORD PTR [ebp+0x8]
6400a5aa:	mov    DWORD PTR [ebp-0x10],eax
6400a5ad:	mov    cl,BYTE PTR [ebp-0x1]
6400a5b0:	mov    BYTE PTR [ebp-0x1d],cl
6400a5b3:	mov    edx,DWORD PTR [ebp+0x10]
6400a5b6:	mov    DWORD PTR [ebp-0x1c],edx
6400a5b9:	mov    eax,DWORD PTR [ebp-0x8]
6400a5bc:	sub    eax,DWORD PTR [ebp-0x10]
6400a5bf:	sar    eax,0x2
6400a5c2:	mov    DWORD PTR [ebp-0x14],eax
6400a5c5:	mov    ecx,DWORD PTR [ebp-0x14]
6400a5c8:	mov    edx,DWORD PTR [ebp-0x1c]
6400a5cb:	lea    eax,[edx+ecx*4]
6400a5ce:	mov    DWORD PTR [ebp-0x18],eax
6400a5d1:	je     0x6400a5f1
6400a5d3:	mov    ecx,DWORD PTR [ebp-0x14]
6400a5d6:	shl    ecx,0x2
6400a5d9:	push   ecx
6400a5da:	mov    edx,DWORD PTR [ebp-0x10]
6400a5dd:	push   edx
6400a5de:	mov    eax,DWORD PTR [ebp-0x14]
6400a5e1:	shl    eax,0x2
6400a5e4:	push   eax
6400a5e5:	mov    ecx,DWORD PTR [ebp-0x1c]
6400a5e8:	push   ecx
6400a5e9:	call   0x640137b7
6400a5ee:	add    esp,0x10
6400a5f1:	mov    eax,DWORD PTR [ebp-0x18]
6400a5f4:	mov    esp,ebp
6400a5f6:	pop    ebp
6400a5f7:	ret    
6400a5f8:	int3   
6400a5f9:	int3   
6400a5fa:	int3   
6400a5fb:	int3   
6400a5fc:	int3   
6400a5fd:	int3   
6400a5fe:	int3   
6400a5ff:	int3   
6400a600:	push   ebp
6400a601:	mov    ebp,esp
6400a603:	sub    esp,0xc
6400a606:	cmp    DWORD PTR [ebp+0x8],0x0
6400a60a:	ja     0x6400a615
6400a60c:	mov    DWORD PTR [ebp+0x8],0x0
6400a613:	jmp    0x6400a63a
6400a615:	or     eax,0xffffffff
6400a618:	xor    edx,edx
6400a61a:	div    DWORD PTR [ebp+0x8]
6400a61d:	cmp    eax,0x4
6400a620:	jae    0x6400a63a
6400a622:	push   0x0
6400a624:	lea    ecx,[ebp-0xc]
6400a627:	call   0x64001250
6400a62c:	push   0x6404413c
6400a631:	lea    eax,[ebp-0xc]
6400a634:	push   eax
6400a635:	call   0x64013812
6400a63a:	mov    ecx,DWORD PTR [ebp+0x8]
6400a63d:	shl    ecx,0x2
6400a640:	push   ecx
6400a641:	call   0x64013875
6400a646:	add    esp,0x4
6400a649:	mov    esp,ebp
6400a64b:	pop    ebp
6400a64c:	ret    
6400a64d:	int3   
6400a64e:	int3   
6400a64f:	int3   
6400a650:	push   ebp
6400a651:	mov    ebp,esp
6400a653:	sub    esp,0x18
6400a656:	mov    DWORD PTR [ebp-0x18],ecx
6400a659:	cmp    DWORD PTR [ebp+0x8],0x0
6400a65d:	jne    0x6400a669
6400a65f:	push   0x80070057
6400a664:	call   0x64001080
6400a669:	mov    eax,DWORD PTR [ebp+0xc]
6400a66c:	mov    ecx,DWORD PTR [ebp+0x8]
6400a66f:	call   0x64007790
6400a674:	mov    DWORD PTR [ebp-0x8],eax
6400a677:	mov    eax,DWORD PTR [ebp-0x8]
6400a67a:	push   eax
6400a67b:	mov    ecx,DWORD PTR [ebp-0x18]
6400a67e:	call   0x64002e30
6400a683:	mov    DWORD PTR [ebp-0x4],eax
6400a686:	mov    edx,DWORD PTR [ebp-0x8]
6400a689:	add    edx,0x1
6400a68c:	mov    ecx,DWORD PTR [ebp-0x4]
6400a68f:	push   ecx
6400a690:	mov    eax,DWORD PTR [ebp+0xc]
6400a693:	mov    ecx,DWORD PTR [ebp+0x8]
6400a696:	call   0x640077a0
6400a69b:	add    esp,0x4
6400a69e:	mov    edx,DWORD PTR [ebp-0x8]
6400a6a1:	push   edx
6400a6a2:	mov    ecx,DWORD PTR [ebp-0x18]
6400a6a5:	call   0x64003740
6400a6aa:	mov    esp,ebp
6400a6ac:	pop    ebp
6400a6ad:	ret    0x8
6400a6b0:	push   ebp
6400a6b1:	mov    ebp,esp
6400a6b3:	sub    esp,0x20
6400a6b6:	xor    eax,eax
6400a6b8:	mov    BYTE PTR [ebp-0x1],al
6400a6bb:	mov    cl,BYTE PTR [ebp-0x1]
6400a6be:	mov    BYTE PTR [ebp-0x1e],cl
6400a6c1:	mov    dl,BYTE PTR [ebp-0x2]
6400a6c4:	mov    BYTE PTR [ebp-0x1d],dl
6400a6c7:	mov    eax,DWORD PTR [ebp+0x8]
6400a6ca:	mov    DWORD PTR [ebp-0x1c],eax
6400a6cd:	mov    ecx,DWORD PTR [ebp+0xc]
6400a6d0:	mov    edx,DWORD PTR [ebp-0x1c]
6400a6d3:	lea    eax,[edx+ecx*4]
6400a6d6:	mov    DWORD PTR [ebp-0x8],eax
6400a6d9:	xor    ecx,ecx
6400a6db:	mov    BYTE PTR [ebp-0x9],cl
6400a6de:	mov    dl,BYTE PTR [ebp-0x9]
6400a6e1:	mov    BYTE PTR [ebp-0x15],dl
6400a6e4:	mov    eax,DWORD PTR [ebp+0xc]
6400a6e7:	mov    DWORD PTR [ebp-0x14],eax
6400a6ea:	mov    ecx,DWORD PTR [ebp-0x1c]
6400a6ed:	mov    DWORD PTR [ebp-0x10],ecx
6400a6f0:	jmp    0x6400a704
6400a6f2:	mov    edx,DWORD PTR [ebp-0x14]
6400a6f5:	sub    edx,0x1
6400a6f8:	mov    DWORD PTR [ebp-0x14],edx
6400a6fb:	mov    eax,DWORD PTR [ebp-0x10]
6400a6fe:	add    eax,0x4
6400a701:	mov    DWORD PTR [ebp-0x10],eax
6400a704:	cmp    DWORD PTR [ebp-0x14],0x0
6400a708:	jbe    0x6400a716
6400a70a:	mov    ecx,DWORD PTR [ebp-0x10]
6400a70d:	mov    edx,DWORD PTR [ebp+0x10]
6400a710:	mov    eax,DWORD PTR [edx]
6400a712:	mov    DWORD PTR [ecx],eax
6400a714:	jmp    0x6400a6f2
6400a716:	mov    esp,ebp
6400a718:	pop    ebp
6400a719:	ret    
6400a71a:	int3   
6400a71b:	int3   
6400a71c:	int3   
6400a71d:	int3   
6400a71e:	int3   
6400a71f:	int3   
6400a720:	push   ebp
6400a721:	mov    ebp,esp
6400a723:	sub    esp,0x14
6400a726:	mov    eax,DWORD PTR [ebp+0xc]
6400a729:	mov    ecx,DWORD PTR [ebp+0x8]
6400a72c:	lea    edx,[ecx+eax*4]
6400a72f:	mov    DWORD PTR [ebp-0x4],edx
6400a732:	xor    eax,eax
6400a734:	mov    BYTE PTR [ebp-0x5],al
6400a737:	mov    cl,BYTE PTR [ebp-0x5]
6400a73a:	mov    BYTE PTR [ebp-0x11],cl
6400a73d:	mov    edx,DWORD PTR [ebp+0xc]
6400a740:	mov    DWORD PTR [ebp-0x10],edx
6400a743:	mov    eax,DWORD PTR [ebp+0x8]
6400a746:	mov    DWORD PTR [ebp-0xc],eax
6400a749:	jmp    0x6400a75d
6400a74b:	mov    ecx,DWORD PTR [ebp-0x10]
6400a74e:	sub    ecx,0x1
6400a751:	mov    DWORD PTR [ebp-0x10],ecx
6400a754:	mov    edx,DWORD PTR [ebp-0xc]
6400a757:	add    edx,0x4
6400a75a:	mov    DWORD PTR [ebp-0xc],edx
6400a75d:	cmp    DWORD PTR [ebp-0x10],0x0
6400a761:	jbe    0x6400a76f
6400a763:	mov    eax,DWORD PTR [ebp-0xc]
6400a766:	mov    ecx,DWORD PTR [ebp+0x10]
6400a769:	mov    edx,DWORD PTR [ecx]
6400a76b:	mov    DWORD PTR [eax],edx
6400a76d:	jmp    0x6400a74b
6400a76f:	mov    esp,ebp
6400a771:	pop    ebp
6400a772:	ret    
6400a773:	int3   
6400a774:	int3   
6400a775:	int3   
6400a776:	int3   
6400a777:	int3   
6400a778:	int3   
6400a779:	int3   
6400a77a:	int3   
6400a77b:	int3   
6400a77c:	int3   
6400a77d:	int3   
6400a77e:	int3   
6400a77f:	int3   
6400a780:	push   ebp
6400a781:	mov    ebp,esp
6400a783:	push   0xffffffff
6400a785:	push   0x64023aa8
6400a78a:	mov    eax,fs:0x0
6400a790:	push   eax
6400a791:	sub    esp,0x14
6400a794:	push   ebx
6400a795:	push   esi
6400a796:	push   edi
6400a797:	mov    eax,ds:0x640521ac
6400a79c:	xor    eax,ebp
6400a79e:	push   eax
6400a79f:	lea    eax,[ebp-0xc]
6400a7a2:	mov    fs:0x0,eax
6400a7a8:	mov    DWORD PTR [ebp-0x10],esp
6400a7ab:	mov    DWORD PTR [ebp-0x4],0x0
6400a7b2:	mov    al,0x1
6400a7b4:	mov    BYTE PTR [ebp-0x20],al
6400a7b7:	mov    DWORD PTR [ebp-0x1c],0xffffffff
6400a7be:	mov    BYTE PTR [ebp-0x18],al
6400a7c1:	push   0x4
6400a7c3:	mov    BYTE PTR [ebp-0x4],al
6400a7c6:	lea    eax,[ebp-0x14]
6400a7c9:	push   eax
6400a7ca:	push   0x4
6400a7cc:	mov    ecx,eax
6400a7ce:	push   ecx
6400a7cf:	push   0x7
6400a7d1:	lea    ecx,[ebp-0x20]
6400a7d4:	mov    DWORD PTR [ebp-0x14],0x4
6400a7db:	call   0x64007320
6400a7e0:	mov    edi,DWORD PTR [ebp-0x1c]
6400a7e3:	test   edi,edi
6400a7e5:	je     0x6400a7fd
6400a7e7:	call   DWORD PTR ds:0x6402c06c
6400a7ed:	push   edi
6400a7ee:	mov    esi,eax
6400a7f0:	call   DWORD PTR ds:0x6402c078
6400a7f6:	push   esi
6400a7f7:	call   DWORD PTR ds:0x6402c074
6400a7fd:	mov    ecx,DWORD PTR [ebp-0xc]
6400a800:	mov    DWORD PTR fs:0x0,ecx
6400a807:	pop    ecx
6400a808:	pop    edi
6400a809:	pop    esi
6400a80a:	pop    ebx
6400a80b:	mov    esp,ebp
6400a80d:	pop    ebp
6400a80e:	ret    
6400a80f:	mov    eax,0x6400a7fd
6400a814:	ret    
6400a815:	int3   
6400a816:	int3   
6400a817:	int3   
6400a818:	int3   
6400a819:	int3   
6400a81a:	int3   
6400a81b:	int3   
6400a81c:	int3   
6400a81d:	int3   
6400a81e:	int3   
6400a81f:	int3   
6400a820:	push   0xffffffff
6400a822:	push   0x64022f48
6400a827:	mov    eax,fs:0x0
6400a82d:	push   eax
6400a82e:	push   ebx
6400a82f:	push   esi
6400a830:	push   edi
6400a831:	mov    eax,ds:0x640521ac
6400a836:	xor    eax,esp
6400a838:	push   eax
6400a839:	lea    eax,[esp+0x10]
6400a83d:	mov    fs:0x0,eax
6400a843:	mov    esi,ecx
6400a845:	mov    edi,DWORD PTR [esp+0x20]
6400a849:	mov    DWORD PTR [edi],0x0
6400a84f:	mov    DWORD PTR [esp+0x18],0x0
6400a857:	mov    eax,DWORD PTR [esi+0x14]
6400a85a:	mov    DWORD PTR [edi+0x4],eax
6400a85d:	mov    eax,DWORD PTR [esi+0x14]
6400a860:	push   eax
6400a861:	call   0x64012f3a
6400a866:	mov    ebx,eax
6400a868:	mov    eax,DWORD PTR [edi]
6400a86a:	add    esp,0x4
6400a86d:	cmp    ebx,eax
6400a86f:	je     0x6400a87a
6400a871:	push   eax
6400a872:	call   0x640135e4
6400a877:	add    esp,0x4
6400a87a:	mov    DWORD PTR [edi],ebx
6400a87c:	cmp    DWORD PTR [esi+0x18],0x10
6400a880:	mov    eax,DWORD PTR [esi+0x14]
6400a883:	jb     0x6400a88a
6400a885:	mov    esi,DWORD PTR [esi+0x4]
6400a888:	jmp    0x6400a88d
6400a88a:	add    esi,0x4
6400a88d:	push   eax
6400a88e:	push   esi
6400a88f:	push   ebx
6400a890:	call   0x64015180
6400a895:	add    esp,0xc
6400a898:	mov    eax,edi
6400a89a:	mov    ecx,DWORD PTR [esp+0x10]
6400a89e:	mov    DWORD PTR fs:0x0,ecx
6400a8a5:	pop    ecx
6400a8a6:	pop    edi
6400a8a7:	pop    esi
6400a8a8:	pop    ebx
6400a8a9:	add    esp,0xc
6400a8ac:	ret    0x4
6400a8af:	int3   
6400a8b0:	sub    esp,0x14
6400a8b3:	mov    eax,DWORD PTR [eax]
6400a8b5:	mov    ecx,DWORD PTR [eax+0xa]
6400a8b8:	imul   ecx,ecx,0xd
6400a8bb:	add    ecx,DWORD PTR [eax+0x6]
6400a8be:	push   ebx
6400a8bf:	push   ebp
6400a8c0:	lea    ebp,[ecx+eax*1+0x12]
6400a8c4:	mov    eax,DWORD PTR [eax+0xe]
6400a8c7:	test   eax,eax
6400a8c9:	push   esi
6400a8ca:	push   edi
6400a8cb:	mov    DWORD PTR [esp+0x10],0x0
6400a8d3:	mov    DWORD PTR [esp+0x20],eax
6400a8d7:	je     0x6400a959
6400a8dd:	mov    eax,DWORD PTR [esp+0x28]
6400a8e1:	mov    edx,DWORD PTR [eax+0x14]
6400a8e4:	mov    DWORD PTR [esp+0x14],edx
6400a8e8:	mov    edx,DWORD PTR [eax+0x18]
6400a8eb:	mov    DWORD PTR [esp+0x1c],edx
6400a8ef:	nop
6400a8f0:	lea    ebx,[ebp+0x6]
6400a8f3:	mov    eax,ebx
6400a8f5:	lea    edx,[eax+0x1]
6400a8f8:	mov    cl,BYTE PTR [eax]
6400a8fa:	add    eax,0x1
6400a8fd:	test   cl,cl
6400a8ff:	jne    0x6400a8f8
6400a901:	mov    esi,DWORD PTR [esp+0x14]
6400a905:	sub    eax,edx
6400a907:	mov    edi,eax
6400a909:	cmp    esi,edi
6400a90b:	mov    eax,esi
6400a90d:	mov    ecx,esi
6400a90f:	jb     0x6400a913
6400a911:	mov    ecx,edi
6400a913:	cmp    DWORD PTR [esp+0x1c],0x10
6400a918:	mov    eax,DWORD PTR [esp+0x28]
6400a91c:	jb     0x6400a923
6400a91e:	mov    eax,DWORD PTR [eax+0x4]
6400a921:	jmp    0x6400a926
6400a923:	add    eax,0x4
6400a926:	push   ecx
6400a927:	push   ebx
6400a928:	push   eax
6400a929:	call   0x640012b0
6400a92e:	add    esp,0xc
6400a931:	test   eax,eax
6400a933:	jne    0x6400a942
6400a935:	cmp    esi,edi
6400a937:	jb     0x6400a942
6400a939:	cmp    esi,edi
6400a93b:	setne  al
6400a93e:	test   eax,eax
6400a940:	je     0x6400a966
6400a942:	movzx  ecx,WORD PTR [ebp+0x0]
6400a946:	mov    eax,DWORD PTR [esp+0x10]
6400a94a:	add    eax,0x1
6400a94d:	add    ebp,ecx
6400a94f:	cmp    eax,DWORD PTR [esp+0x20]
6400a953:	mov    DWORD PTR [esp+0x10],eax
6400a957:	jne    0x6400a8f0
6400a959:	pop    edi
6400a95a:	pop    esi
6400a95b:	pop    ebp
6400a95c:	or     eax,0xffffffff
6400a95f:	pop    ebx
6400a960:	add    esp,0x14
6400a963:	ret    0x4
6400a966:	mov    eax,DWORD PTR [ebp+0x2]
6400a969:	pop    edi
6400a96a:	pop    esi
6400a96b:	pop    ebp
6400a96c:	pop    ebx
6400a96d:	add    esp,0x14
6400a970:	ret    0x4
6400a973:	int3   
6400a974:	int3   
6400a975:	int3   
6400a976:	int3   
6400a977:	int3   
6400a978:	int3   
6400a979:	int3   
6400a97a:	int3   
6400a97b:	int3   
6400a97c:	int3   
6400a97d:	int3   
6400a97e:	int3   
6400a97f:	int3   
6400a980:	mov    eax,DWORD PTR [eax]
6400a982:	add    eax,0x12
6400a985:	ret    
6400a986:	int3   
6400a987:	int3   
6400a988:	int3   
6400a989:	int3   
6400a98a:	int3   
6400a98b:	int3   
6400a98c:	int3   
6400a98d:	int3   
6400a98e:	int3   
6400a98f:	int3   
6400a990:	mov    ecx,DWORD PTR [eax]
6400a992:	mov    eax,DWORD PTR [ecx+0x6]
6400a995:	ret    
6400a996:	int3   
6400a997:	int3   
6400a998:	int3   
6400a999:	int3   
6400a99a:	int3   
6400a99b:	int3   
6400a99c:	int3   
6400a99d:	int3   
6400a99e:	int3   
6400a99f:	int3   
6400a9a0:	push   ebp
6400a9a1:	push   esi
6400a9a2:	mov    esi,DWORD PTR [eax]
6400a9a4:	mov    ecx,DWORD PTR [esi+0x6]
6400a9a7:	push   edi
6400a9a8:	lea    edi,[esi+0x12]
6400a9ab:	xor    ebp,ebp
6400a9ad:	add    ecx,edi
6400a9af:	cmp    DWORD PTR [esi+0xa],ebp
6400a9b2:	je     0x6400a9e6
6400a9b4:	push   ebx
6400a9b5:	cmp    BYTE PTR [ecx+0x4],0x0
6400a9b9:	jne    0x6400a9c9
6400a9bb:	mov    edx,DWORD PTR [ecx+0x5]
6400a9be:	add    edx,DWORD PTR [esp+0x14]
6400a9c2:	mov    eax,DWORD PTR [ecx]
6400a9c4:	mov    DWORD PTR [edi+eax*1],edx
6400a9c7:	jmp    0x6400a9da
6400a9c9:	mov    eax,DWORD PTR [ecx+0x5]
6400a9cc:	add    eax,DWORD PTR [esp+0x14]
6400a9d0:	mov    ebx,DWORD PTR [ecx]
6400a9d2:	cdq    
6400a9d3:	mov    DWORD PTR [edi+ebx*1],eax
6400a9d6:	mov    DWORD PTR [edi+ebx*1+0x4],edx
6400a9da:	add    ebp,0x1
6400a9dd:	add    ecx,0xd
6400a9e0:	cmp    ebp,DWORD PTR [esi+0xa]
6400a9e3:	jne    0x6400a9b5
6400a9e5:	pop    ebx
6400a9e6:	pop    edi
6400a9e7:	pop    esi
6400a9e8:	pop    ebp
6400a9e9:	ret    0x4
6400a9ec:	int3   
6400a9ed:	int3   
6400a9ee:	int3   
6400a9ef:	int3   
6400a9f0:	sub    esp,0x8
6400a9f3:	push   edi
6400a9f4:	mov    edi,DWORD PTR ds:0x6402c108
6400a9fa:	lea    eax,[esp+0x4]
6400a9fe:	push   eax
6400a9ff:	mov    eax,ds:0x640535a4
6400aa04:	lea    ecx,[eax+eax*2]
6400aa07:	push   0x40
6400aa09:	add    ecx,ecx
6400aa0b:	push   ecx
6400aa0c:	push   esi
6400aa0d:	mov    DWORD PTR [esp+0x14],0x0
6400aa15:	call   edi
6400aa17:	mov    edx,DWORD PTR [esp+0x14]
6400aa1b:	sub    edx,DWORD PTR [esp+0x1c]
6400aa1f:	mov    ecx,DWORD PTR [esp+0x10]
6400aa23:	lea    eax,[esi+0x1]
6400aa26:	sub    edx,eax
6400aa28:	lea    edx,[edx+ecx*1-0x4]
6400aa2c:	mov    ecx,DWORD PTR [esp+0x4]
6400aa30:	mov    BYTE PTR [esi],0xe9
6400aa33:	mov    DWORD PTR [eax],edx
6400aa35:	lea    eax,[esp+0x8]
6400aa39:	push   eax
6400aa3a:	push   ecx
6400aa3b:	push   0x5
6400aa3d:	push   esi
6400aa3e:	mov    DWORD PTR [esp+0x18],0x0
6400aa46:	call   edi
6400aa48:	pop    edi
6400aa49:	add    esp,0x8
6400aa4c:	ret    
6400aa4d:	int3   
6400aa4e:	int3   
6400aa4f:	int3   
6400aa50:	mov    eax,0x193c
6400aa55:	call   0x64017ee0
6400aa5a:	push   ebx
6400aa5b:	xor    eax,eax
6400aa5d:	push   ebp
6400aa5e:	push   esi
6400aa5f:	push   edi
6400aa60:	mov    DWORD PTR [esp+0x38],eax
6400aa64:	mov    DWORD PTR [esp+0x3c],eax
6400aa68:	mov    DWORD PTR [esp+0x40],eax
6400aa6c:	mov    DWORD PTR [esp+0x30],eax
6400aa70:	mov    DWORD PTR [esp+0x34],eax
6400aa74:	mov    DWORD PTR [esp+0x44],eax
6400aa78:	mov    eax,DWORD PTR [esp+0x1950]
6400aa7f:	lea    edx,[esp+0x20]
6400aa83:	push   edx
6400aa84:	mov    ebx,ecx
6400aa86:	mov    ecx,DWORD PTR ds:0x640535a8
6400aa8c:	mov    DWORD PTR [esp+0x3c],eax
6400aa90:	push   0x64
6400aa92:	lea    eax,[esp+0x50]
6400aa96:	mov    DWORD PTR [esp+0x48],ecx
6400aa9a:	xor    esi,esi
6400aa9c:	push   eax
6400aa9d:	lea    ecx,[esp+0x34]
6400aaa1:	push   ecx
6400aaa2:	mov    DWORD PTR [esp+0x30],esi
6400aaa6:	mov    DWORD PTR [esp+0x38],esi
6400aaaa:	mov    DWORD PTR [esp+0x3c],esi
6400aaae:	mov    DWORD PTR [esp+0x4c],0x1e
6400aab6:	call   0x6400b460
6400aabb:	add    esp,0x10
6400aabe:	cmp    eax,0x3
6400aac1:	jne    0x6400aad0
6400aac3:	xor    eax,eax
6400aac5:	pop    edi
6400aac6:	pop    esi
6400aac7:	pop    ebp
6400aac8:	pop    ebx
6400aac9:	add    esp,0x193c
6400aacf:	ret    
6400aad0:	xor    edi,edi
6400aad2:	xor    ebp,ebp
6400aad4:	cmp    DWORD PTR [esp+0x20],esi
6400aad8:	mov    DWORD PTR [esp+0x14],edi
6400aadc:	mov    DWORD PTR [esp+0x10],esi
6400aae0:	jbe    0x6400ac12
6400aae6:	lea    edx,[esp+0x50]
6400aaea:	mov    DWORD PTR [esp+0x18],edx
6400aaee:	jmp    0x6400aaf4
6400aaf0:	mov    edx,DWORD PTR [esp+0x18]
6400aaf4:	cmp    edi,DWORD PTR [esp+0x1954]
6400aafb:	jae    0x6400ac12
6400ab01:	mov    eax,DWORD PTR [esp+0x1950]
6400ab08:	add    edi,eax
6400ab0a:	mov    DWORD PTR [esp+0x1c],0xffffffff
6400ab12:	lea    eax,[edx+0xa]
6400ab15:	mov    cl,BYTE PTR [eax]
6400ab17:	test   cl,cl
6400ab19:	je     0x6400ab2f
6400ab1b:	cmp    cl,0x8
6400ab1e:	jne    0x6400ab24
6400ab20:	mov    DWORD PTR [esp+0x1c],esi
6400ab24:	add    esi,0x1
6400ab27:	add    eax,0x4
6400ab2a:	cmp    esi,0x4
6400ab2d:	jne    0x6400ab15
6400ab2f:	mov    DWORD PTR [esp+0x24],esi
6400ab33:	movzx  esi,BYTE PTR [edx]
6400ab36:	push   esi
6400ab37:	lea    ecx,[ebx+ebp*1]
6400ab3a:	push   edi
6400ab3b:	push   ecx
6400ab3c:	call   0x64015180
6400ab41:	add    esp,0xc
6400ab44:	cmp    DWORD PTR [esp+0x24],0x1
6400ab49:	jne    0x6400abe3
6400ab4f:	cmp    DWORD PTR [esp+0x1c],0x0
6400ab54:	jne    0x6400abe3
6400ab5a:	mov    edx,DWORD PTR [esp+0x18]
6400ab5e:	movzx  ecx,WORD PTR [edx+0xc]
6400ab62:	movzx  eax,cx
6400ab65:	shr    eax,0x3
6400ab68:	cmp    cx,0x10
6400ab6c:	jne    0x6400ab8b
6400ab6e:	sub    edi,ebx
6400ab70:	sub    edi,ebp
6400ab72:	sub    edi,DWORD PTR [esp+0x1960]
6400ab79:	sub    esi,eax
6400ab7b:	add    edi,DWORD PTR [esp+0x1958]
6400ab82:	add    esi,ebp
6400ab84:	add    esi,ebx
6400ab86:	add    WORD PTR [esi],di
6400ab89:	jmp    0x6400abe3
6400ab8b:	cmp    cx,0x20
6400ab8f:	jne    0x6400abaf
6400ab91:	sub    esi,eax
6400ab93:	mov    eax,DWORD PTR [esp+0x1958]
6400ab9a:	sub    eax,DWORD PTR [esp+0x1960]
6400aba1:	add    esi,ebp
6400aba3:	sub    eax,ebp
6400aba5:	sub    eax,ebx
6400aba7:	add    esi,ebx
6400aba9:	add    eax,edi
6400abab:	add    DWORD PTR [esi],eax
6400abad:	jmp    0x6400abe3
6400abaf:	cmp    cx,0x40
6400abb3:	jne    0x6400abe3
6400abb5:	sub    esi,eax
6400abb7:	mov    eax,edi
6400abb9:	sub    eax,ebp
6400abbb:	sub    eax,ebx
6400abbd:	add    esi,ebp
6400abbf:	cdq    
6400abc0:	add    esi,ebx
6400abc2:	sub    eax,DWORD PTR [esp+0x1960]
6400abc9:	sbb    edx,DWORD PTR [esp+0x1964]
6400abd0:	add    eax,DWORD PTR [esp+0x1958]
6400abd7:	adc    edx,DWORD PTR [esp+0x195c]
6400abde:	add    DWORD PTR [esi],eax
6400abe0:	adc    DWORD PTR [esi+0x4],edx
6400abe3:	mov    ecx,DWORD PTR [esp+0x18]
6400abe7:	movzx  eax,BYTE PTR [ecx]
6400abea:	add    DWORD PTR [esp+0x14],eax
6400abee:	mov    edi,DWORD PTR [esp+0x14]
6400abf2:	add    ebp,eax
6400abf4:	mov    eax,DWORD PTR [esp+0x10]
6400abf8:	add    eax,0x1
6400abfb:	add    ecx,0x40
6400abfe:	xor    esi,esi
6400ac00:	cmp    eax,DWORD PTR [esp+0x20]
6400ac04:	mov    DWORD PTR [esp+0x10],eax
6400ac08:	mov    DWORD PTR [esp+0x18],ecx
6400ac0c:	jb     0x6400aaf0
6400ac12:	mov    eax,ds:0x640535a4
6400ac17:	mov    ecx,DWORD PTR [esp+0x1950]
6400ac1e:	lea    edx,[esp+0x10]
6400ac22:	push   edx
6400ac23:	lea    eax,[eax+eax*2]
6400ac26:	push   0x40
6400ac28:	add    eax,eax
6400ac2a:	add    ebx,ebp
6400ac2c:	mov    ebp,DWORD PTR ds:0x6402c108
6400ac32:	push   eax
6400ac33:	push   ebx
6400ac34:	add    edi,ecx
6400ac36:	mov    DWORD PTR [esp+0x20],esi
6400ac3a:	call   ebp
6400ac3c:	mov    eax,DWORD PTR [esp+0x1958]
6400ac43:	sub    eax,DWORD PTR [esp+0x1960]
6400ac4a:	lea    ecx,[ebx+0x1]
6400ac4d:	sub    eax,ecx
6400ac4f:	lea    edx,[eax+edi*1-0x4]
6400ac53:	mov    BYTE PTR [ebx],0xe9
6400ac56:	lea    eax,[esp+0x1c]
6400ac5a:	push   eax
6400ac5b:	mov    DWORD PTR [ecx],edx
6400ac5d:	mov    ecx,DWORD PTR [esp+0x14]
6400ac61:	push   ecx
6400ac62:	push   0x5
6400ac64:	push   ebx
6400ac65:	mov    DWORD PTR [esp+0x2c],esi
6400ac69:	call   ebp
6400ac6b:	pop    edi
6400ac6c:	pop    esi
6400ac6d:	pop    ebp
6400ac6e:	mov    eax,0x1
6400ac73:	pop    ebx
6400ac74:	add    esp,0x193c
6400ac7a:	ret    
6400ac7b:	int3   
6400ac7c:	int3   
6400ac7d:	int3   
6400ac7e:	int3   
6400ac7f:	int3   
6400ac80:	mov    ecx,DWORD PTR [esp+0x1c]
6400ac84:	mov    edx,DWORD PTR ds:0x640535a4
6400ac8a:	push   ebx
6400ac8b:	mov    ebx,DWORD PTR [esp+0x10]
6400ac8f:	push   esi
6400ac90:	push   edi
6400ac91:	mov    edi,DWORD PTR [esp+0x1c]
6400ac95:	mov    esi,eax
6400ac97:	mov    eax,DWORD PTR [esp+0x2c]
6400ac9b:	push   eax
6400ac9c:	push   ecx
6400ac9d:	mov    ecx,DWORD PTR [esp+0x18]
6400aca1:	push   edi
6400aca2:	push   ebx
6400aca3:	push   edx
6400aca4:	push   esi
6400aca5:	call   0x6400aa50
6400acaa:	add    esp,0x18
6400acad:	test   eax,eax
6400acaf:	jne    0x6400acb5
6400acb1:	pop    edi
6400acb2:	pop    esi
6400acb3:	pop    ebx
6400acb4:	ret    
6400acb5:	mov    eax,DWORD PTR [esp+0x24]
6400acb9:	mov    ecx,DWORD PTR [esp+0x20]
6400acbd:	mov    edx,DWORD PTR [esp+0x14]
6400acc1:	push   edi
6400acc2:	push   ebx
6400acc3:	push   eax
6400acc4:	push   ecx
6400acc5:	push   edx
6400acc6:	call   0x6400a9f0
6400accb:	add    esp,0x14
6400acce:	pop    edi
6400accf:	pop    esi
6400acd0:	mov    eax,0x1
6400acd5:	pop    ebx
6400acd6:	ret    
6400acd7:	int3   
6400acd8:	int3   
6400acd9:	int3   
6400acda:	int3   
6400acdb:	int3   
6400acdc:	int3   
6400acdd:	int3   
6400acde:	int3   
6400acdf:	int3   
6400ace0:	sub    esp,0x8
6400ace3:	push   ebx
6400ace4:	push   ebp
6400ace5:	push   edi
6400ace6:	push   0x20
6400ace8:	mov    DWORD PTR [esp+0x14],0x0
6400acf0:	call   0x64012f3a
6400acf5:	add    esp,0x4
6400acf8:	push   0x20
6400acfa:	mov    ebx,eax
6400acfc:	call   0x64012f3a
6400ad01:	mov    ebp,eax
6400ad03:	mov    eax,ds:0x640535a4
6400ad08:	lea    eax,[eax+eax*2]
6400ad0b:	add    eax,eax
6400ad0d:	add    esp,0x4
6400ad10:	push   eax
6400ad11:	call   0x64012f3a
6400ad16:	add    esp,0x4
6400ad19:	mov    DWORD PTR [esp+0xc],eax
6400ad1d:	mov    eax,ds:0x640535a4
6400ad22:	push   0x40
6400ad24:	lea    eax,[eax+eax*2]
6400ad27:	push   0x3000
6400ad2c:	add    eax,eax
6400ad2e:	push   eax
6400ad2f:	push   0x0
6400ad31:	push   esi
6400ad32:	call   DWORD PTR ds:0x6402c0c8
6400ad38:	mov    edi,eax
6400ad3a:	test   edi,edi
6400ad3c:	je     0x6400adee
6400ad42:	mov    eax,DWORD PTR [esp+0x18]
6400ad46:	push   0x0
6400ad48:	push   0x20
6400ad4a:	push   ebx
6400ad4b:	push   eax
6400ad4c:	push   esi
6400ad4d:	call   DWORD PTR ds:0x6402c0cc
6400ad53:	test   eax,eax
6400ad55:	je     0x6400addf
6400ad5b:	mov    ecx,DWORD PTR [esp+0x1c]
6400ad5f:	push   0x0
6400ad61:	push   0x20
6400ad63:	push   ebp
6400ad64:	push   ecx
6400ad65:	push   esi
6400ad66:	call   DWORD PTR ds:0x6402c0cc
6400ad6c:	test   eax,eax
6400ad6e:	je     0x6400addf
6400ad70:	mov    ecx,DWORD PTR [esp+0xc]
6400ad74:	mov    eax,edi
6400ad76:	sub    eax,ecx
6400ad78:	cdq    
6400ad79:	push   edx
6400ad7a:	push   eax
6400ad7b:	mov    eax,DWORD PTR [esp+0x24]
6400ad7f:	sub    eax,ebp
6400ad81:	cdq    
6400ad82:	push   edx
6400ad83:	push   eax
6400ad84:	mov    eax,DWORD PTR [esp+0x28]
6400ad88:	sub    eax,ebx
6400ad8a:	cdq    
6400ad8b:	push   edx
6400ad8c:	push   eax
6400ad8d:	push   ebp
6400ad8e:	push   ecx
6400ad8f:	mov    eax,ebx
6400ad91:	call   0x6400ac80
6400ad96:	add    esp,0x20
6400ad99:	test   eax,eax
6400ad9b:	je     0x6400addf
6400ad9d:	mov    eax,ds:0x640535a4
6400ada2:	push   0x0
6400ada4:	lea    edx,[eax+eax*2]
6400ada7:	mov    eax,DWORD PTR [esp+0x10]
6400adab:	add    edx,edx
6400adad:	push   edx
6400adae:	push   eax
6400adaf:	push   edi
6400adb0:	push   esi
6400adb1:	call   DWORD PTR ds:0x6402c0dc
6400adb7:	mov    ecx,DWORD PTR [esp+0x18]
6400adbb:	push   0x0
6400adbd:	push   0x20
6400adbf:	push   ebx
6400adc0:	push   ecx
6400adc1:	push   esi
6400adc2:	call   DWORD PTR ds:0x6402c0dc
6400adc8:	mov    edx,DWORD PTR [esp+0x1c]
6400adcc:	push   0x0
6400adce:	push   0x20
6400add0:	push   ebp
6400add1:	push   edx
6400add2:	push   esi
6400add3:	call   DWORD PTR ds:0x6402c0dc
6400add9:	mov    DWORD PTR [esp+0x10],edi
6400addd:	jmp    0x6400adee
6400addf:	push   0x8000
6400ade4:	push   0x0
6400ade6:	push   edi
6400ade7:	push   esi
6400ade8:	call   DWORD PTR ds:0x6402c0b8
6400adee:	push   ebx
6400adef:	call   0x64014514
6400adf4:	add    esp,0x4
6400adf7:	push   ebp
6400adf8:	call   0x64014514
6400adfd:	mov    eax,DWORD PTR [esp+0x10]
6400ae01:	add    esp,0x4
6400ae04:	push   eax
6400ae05:	call   0x64014514
6400ae0a:	mov    eax,DWORD PTR [esp+0x14]
6400ae0e:	add    esp,0x4
6400ae11:	pop    edi
6400ae12:	pop    ebp
6400ae13:	pop    ebx
6400ae14:	add    esp,0x8
6400ae17:	ret    
6400ae18:	int3   
6400ae19:	int3   
6400ae1a:	int3   
6400ae1b:	int3   
6400ae1c:	int3   
6400ae1d:	int3   
6400ae1e:	int3   
6400ae1f:	int3   
6400ae20:	mov    eax,DWORD PTR [esp+0x8]
6400ae24:	sub    eax,0x1
6400ae27:	jne    0x6400ae32
6400ae29:	mov    eax,DWORD PTR [esp+0x4]
6400ae2d:	mov    ds:0x64053820,eax
6400ae32:	mov    eax,0x1
6400ae37:	ret    0xc
6400ae3a:	int3   
6400ae3b:	int3   
6400ae3c:	int3   
6400ae3d:	int3   
6400ae3e:	int3   
6400ae3f:	int3   
6400ae40:	push   0x64053824
6400ae45:	call   DWORD PTR ds:0x6402c030
6400ae4b:	cmp    eax,0x1
6400ae4e:	jne    0x6400ae55
6400ae50:	call   0x6400b370
6400ae55:	or     eax,0xffffffff
6400ae58:	ret    0x8
6400ae5b:	int3   
6400ae5c:	int3   
6400ae5d:	int3   
6400ae5e:	int3   
6400ae5f:	int3   
6400ae60:	or     eax,0xffffffff
6400ae63:	ret    0x4
6400ae66:	int3   
6400ae67:	int3   
6400ae68:	int3   
6400ae69:	int3   
6400ae6a:	int3   
6400ae6b:	int3   
6400ae6c:	int3   
6400ae6d:	int3   
6400ae6e:	int3   
6400ae6f:	int3   
6400ae70:	push   ecx
6400ae71:	push   esi
6400ae72:	push   0x1
6400ae74:	push   0x4
6400ae76:	mov    DWORD PTR [esp+0xc],0x0
6400ae7e:	call   0x64001f50
6400ae83:	mov    esi,DWORD PTR [esp+0x14]
6400ae87:	push   eax
6400ae88:	push   esi
6400ae89:	call   0x64002330
6400ae8e:	add    esp,0x10
6400ae91:	mov    eax,esi
6400ae93:	pop    esi
6400ae94:	pop    ecx
6400ae95:	ret    
6400ae96:	int3   
6400ae97:	int3   
6400ae98:	int3   
6400ae99:	int3   
6400ae9a:	int3   
6400ae9b:	int3   
6400ae9c:	int3   
6400ae9d:	int3   
6400ae9e:	int3   
6400ae9f:	int3   
6400aea0:	push   ebp
6400aea1:	mov    ebp,esp
6400aea3:	push   0xffffffff
6400aea5:	push   0x64022e40
6400aeaa:	mov    eax,fs:0x0
6400aeb0:	push   eax
6400aeb1:	sub    esp,0x34
6400aeb4:	mov    eax,ds:0x640521ac
6400aeb9:	xor    eax,ebp
6400aebb:	mov    DWORD PTR [ebp-0x10],eax
6400aebe:	push   ebx
6400aebf:	push   esi
6400aec0:	push   edi
6400aec1:	push   eax
6400aec2:	lea    eax,[ebp-0xc]
6400aec5:	mov    fs:0x0,eax
6400aecb:	call   DWORD PTR ds:0x64052184
6400aed1:	push   0x1
6400aed3:	mov    ebx,eax
6400aed5:	lea    eax,[ebp-0x14]
6400aed8:	push   0x5
6400aeda:	push   eax
6400aedb:	call   0x64002140
6400aee0:	add    esp,0xc
6400aee3:	mov    esi,DWORD PTR [eax]
6400aee5:	xor    edi,edi
6400aee7:	cmp    esi,edi
6400aee9:	mov    DWORD PTR [ebp-0x4],edi
6400aeec:	jne    0x6400aef2
6400aeee:	xor    eax,eax
6400aef0:	jmp    0x6400af1e
6400aef2:	push   esi
6400aef3:	call   DWORD PTR ds:0x6402c034
6400aef9:	add    eax,0x1
6400aefc:	cmp    eax,0x3fffffff
6400af01:	jle    0x6400af07
6400af03:	xor    eax,eax
6400af05:	jmp    0x6400af1e
6400af07:	lea    edi,[eax+eax*1]
6400af0a:	mov    eax,edi
6400af0c:	call   0x64013cc0
6400af11:	mov    eax,esp
6400af13:	push   ebx
6400af14:	push   edi
6400af15:	push   esi
6400af16:	push   eax
6400af17:	call   0x64001040
6400af1c:	xor    edi,edi
6400af1e:	mov    ebx,0xf
6400af23:	mov    ecx,eax
6400af25:	mov    DWORD PTR [ebp-0x18],ebx
6400af28:	mov    DWORD PTR [ebp-0x1c],edi
6400af2b:	mov    BYTE PTR [ebp-0x2c],0x0
6400af2f:	lea    esi,[ecx+0x1]
6400af32:	mov    dl,BYTE PTR [ecx]
6400af34:	add    ecx,0x1
6400af37:	test   dl,dl
6400af39:	jne    0x6400af32
6400af3b:	sub    ecx,esi
6400af3d:	push   ecx
6400af3e:	push   eax
6400af3f:	lea    ecx,[ebp-0x30]
6400af42:	call   0x64003450
6400af47:	lea    ecx,[ebp-0x30]
6400af4a:	push   ecx
6400af4b:	lea    edx,[ebp-0x40]
6400af4e:	push   edx
6400af4f:	mov    BYTE PTR [ebp-0x4],0x1
6400af53:	call   0x64001bc0
6400af58:	mov    esi,DWORD PTR [ebp+0x8]
6400af5b:	mov    ecx,DWORD PTR [eax]
6400af5d:	mov    edx,DWORD PTR [eax+0x4]
6400af60:	mov    DWORD PTR [esi],ecx
6400af62:	mov    ecx,DWORD PTR [eax+0x8]
6400af65:	mov    DWORD PTR [esi+0x4],edx
6400af68:	mov    edx,DWORD PTR [eax+0xc]
6400af6b:	add    esp,0x8
6400af6e:	cmp    DWORD PTR [ebp-0x18],0x10
6400af72:	mov    DWORD PTR [esi+0x8],ecx
6400af75:	mov    DWORD PTR [esi+0xc],edx
6400af78:	jb     0x6400af86
6400af7a:	mov    eax,DWORD PTR [ebp-0x2c]
6400af7d:	push   eax
6400af7e:	call   0x640135e4
6400af83:	add    esp,0x4
6400af86:	mov    eax,DWORD PTR [ebp-0x14]
6400af89:	add    eax,0xfffffff0
6400af8c:	mov    DWORD PTR [ebp-0x18],ebx
6400af8f:	mov    DWORD PTR [ebp-0x1c],edi
6400af92:	mov    BYTE PTR [ebp-0x2c],0x0
6400af96:	mov    DWORD PTR [ebp-0x4],0xffffffff
6400af9d:	lea    ecx,[eax+0xc]
6400afa0:	or     edx,0xffffffff
6400afa3:	lock xadd DWORD PTR [ecx],edx
6400afa7:	dec    edx
6400afa8:	test   edx,edx
6400afaa:	jg     0x6400afb6
6400afac:	mov    ecx,DWORD PTR [eax]
6400afae:	mov    edx,DWORD PTR [ecx]
6400afb0:	push   eax
6400afb1:	mov    eax,DWORD PTR [edx+0x4]
6400afb4:	call   eax
6400afb6:	mov    eax,esi
6400afb8:	lea    esp,[ebp-0x50]
6400afbb:	mov    ecx,DWORD PTR [ebp-0xc]
6400afbe:	mov    DWORD PTR fs:0x0,ecx
6400afc5:	pop    ecx
6400afc6:	pop    edi
6400afc7:	pop    esi
6400afc8:	pop    ebx
6400afc9:	mov    ecx,DWORD PTR [ebp-0x10]
6400afcc:	xor    ecx,ebp
6400afce:	call   0x64013ca6
6400afd3:	mov    esp,ebp
6400afd5:	pop    ebp
6400afd6:	ret    
6400afd7:	int3   
6400afd8:	int3   
6400afd9:	int3   
6400afda:	int3   
6400afdb:	int3   
6400afdc:	int3   
6400afdd:	int3   
6400afde:	int3   
6400afdf:	int3   
6400afe0:	sub    esp,0x1bc
6400afe6:	mov    eax,ds:0x640521ac
6400afeb:	xor    eax,esp
6400afed:	mov    DWORD PTR [esp+0x1b8],eax
6400aff4:	push   esi
6400aff5:	lea    eax,[esp+0x2c]
6400aff9:	push   eax
6400affa:	push   0x202
6400afff:	call   DWORD PTR ds:0x6402c1f4
6400b005:	lea    ecx,[esp+0xc]
6400b009:	push   ecx
6400b00a:	call   0x6400aea0
6400b00f:	mov    edx,DWORD PTR [eax]
6400b011:	mov    DWORD PTR [esp+0x20],edx
6400b015:	mov    ecx,DWORD PTR [eax+0x4]
6400b018:	mov    DWORD PTR [esp+0x24],ecx
6400b01c:	mov    edx,DWORD PTR [eax+0x8]
6400b01f:	add    esp,0x4
6400b022:	mov    DWORD PTR [esp+0x24],edx
6400b026:	mov    eax,DWORD PTR [eax+0xc]
6400b029:	lea    ecx,[esp+0x1c]
6400b02d:	push   ecx
6400b02e:	mov    DWORD PTR [esp+0x2c],eax
6400b032:	call   0x6400b458
6400b037:	lea    edx,[esp+0x4]
6400b03b:	push   edx
6400b03c:	call   0x6400ae70
6400b041:	push   0x0
6400b043:	lea    eax,[esp+0x10]
6400b047:	push   0x1
6400b049:	push   eax
6400b04a:	call   0x640069e0
6400b04f:	mov    esi,DWORD PTR [esp+0x18]
6400b053:	add    esp,0x10
6400b056:	cmp    DWORD PTR [esi-0x4],0x1
6400b05a:	jle    0x6400b06d
6400b05c:	mov    ecx,DWORD PTR [esi-0xc]
6400b05f:	push   ecx
6400b060:	lea    ecx,[esp+0xc]
6400b064:	call   0x64003800
6400b069:	mov    esi,DWORD PTR [esp+0x8]
6400b06d:	mov    eax,DWORD PTR [esp+0x4]
6400b071:	cmp    DWORD PTR [eax-0x4],0x1
6400b075:	jle    0x6400b088
6400b077:	mov    edx,DWORD PTR [eax-0xc]
6400b07a:	push   edx
6400b07b:	lea    ecx,[esp+0x8]
6400b07f:	call   0x64003800
6400b084:	mov    eax,DWORD PTR [esp+0x4]
6400b088:	lea    ecx,[esp+0x1c]
6400b08c:	push   ecx
6400b08d:	push   0x1
6400b08f:	push   0xc
6400b091:	push   esi
6400b092:	push   eax
6400b093:	call   0x6400b452
6400b098:	mov    esi,eax
6400b09a:	call   DWORD PTR ds:0x6402c1f8
6400b0a0:	mov    eax,DWORD PTR [esp+0x8]
6400b0a4:	add    eax,0xfffffff0
6400b0a7:	lea    edx,[eax+0xc]
6400b0aa:	or     ecx,0xffffffff
6400b0ad:	lock xadd DWORD PTR [edx],ecx
6400b0b1:	dec    ecx
6400b0b2:	test   ecx,ecx
6400b0b4:	jg     0x6400b0c0
6400b0b6:	mov    ecx,DWORD PTR [eax]
6400b0b8:	mov    edx,DWORD PTR [ecx]
6400b0ba:	push   eax
6400b0bb:	mov    eax,DWORD PTR [edx+0x4]
6400b0be:	call   eax
6400b0c0:	mov    eax,DWORD PTR [esp+0x4]
6400b0c4:	add    eax,0xfffffff0
6400b0c7:	lea    ecx,[eax+0xc]
6400b0ca:	or     edx,0xffffffff
6400b0cd:	lock xadd DWORD PTR [ecx],edx
6400b0d1:	dec    edx
6400b0d2:	test   edx,edx
6400b0d4:	jg     0x6400b0e0
6400b0d6:	mov    ecx,DWORD PTR [eax]
6400b0d8:	mov    edx,DWORD PTR [ecx]
6400b0da:	push   eax
6400b0db:	mov    eax,DWORD PTR [edx+0x4]
6400b0de:	call   eax
6400b0e0:	mov    ecx,DWORD PTR [esp+0x1bc]
6400b0e7:	mov    eax,esi
6400b0e9:	pop    esi
6400b0ea:	xor    ecx,esp
6400b0ec:	call   0x64013ca6
6400b0f1:	add    esp,0x1bc
6400b0f7:	ret    
6400b0f8:	int3   
6400b0f9:	int3   
6400b0fa:	int3   
6400b0fb:	int3   
6400b0fc:	int3   
6400b0fd:	int3   
6400b0fe:	int3   
6400b0ff:	int3   
6400b100:	sub    esp,0x1b4
6400b106:	mov    eax,ds:0x640521ac
6400b10b:	xor    eax,esp
6400b10d:	mov    DWORD PTR [esp+0x1b0],eax
6400b114:	push   esi
6400b115:	lea    eax,[esp+0x24]
6400b119:	push   eax
6400b11a:	push   0x202
6400b11f:	call   DWORD PTR ds:0x6402c1f4
6400b125:	lea    ecx,[esp+0x4]
6400b129:	push   ecx
6400b12a:	call   0x6400aea0
6400b12f:	mov    edx,DWORD PTR [eax]
6400b131:	mov    DWORD PTR [esp+0x18],edx
6400b135:	mov    ecx,DWORD PTR [eax+0x4]
6400b138:	mov    DWORD PTR [esp+0x1c],ecx
6400b13c:	mov    edx,DWORD PTR [eax+0x8]
6400b13f:	add    esp,0x4
6400b142:	mov    DWORD PTR [esp+0x1c],edx
6400b146:	mov    eax,DWORD PTR [eax+0xc]
6400b149:	lea    ecx,[esp+0x14]
6400b14d:	push   ecx
6400b14e:	mov    DWORD PTR [esp+0x24],eax
6400b152:	call   0x6400b458
6400b157:	mov    esi,eax
6400b159:	call   DWORD PTR ds:0x6402c1f8
6400b15f:	mov    ecx,DWORD PTR [esp+0x1b4]
6400b166:	mov    eax,esi
6400b168:	pop    esi
6400b169:	xor    ecx,esp
6400b16b:	call   0x64013ca6
6400b170:	add    esp,0x1b4
6400b176:	ret    
6400b177:	int3   
6400b178:	int3   
6400b179:	int3   
6400b17a:	int3   
6400b17b:	int3   
6400b17c:	int3   
6400b17d:	int3   
6400b17e:	int3   
6400b17f:	int3   
6400b180:	mov    eax,DWORD PTR [esp+0xc]
6400b184:	push   eax
6400b185:	lea    ecx,[esp+0x10]
6400b189:	call   0x64002b80
6400b18e:	lea    ecx,[esp+0xc]
6400b192:	push   0x6402c2b4
6400b197:	push   ecx
6400b198:	call   0x64002dd0
6400b19d:	add    esp,0x8
6400b1a0:	test   al,al
6400b1a2:	je     0x6400b1ab
6400b1a4:	call   0x6400b100
6400b1a9:	jmp    0x6400b1b0
6400b1ab:	call   0x6400afe0
6400b1b0:	push   0x0
6400b1b2:	call   DWORD PTR ds:0x6402c038
6400b1b8:	int3   
6400b1b9:	int3   
6400b1ba:	int3   
6400b1bb:	int3   
6400b1bc:	int3   
6400b1bd:	int3   
6400b1be:	int3   
6400b1bf:	int3   
6400b1c0:	cmp    BYTE PTR ds:0x64053834,0x0
6400b1c7:	jne    0x6400b1e7
6400b1c9:	mov    BYTE PTR ds:0x64053834,0x1
6400b1d0:	call   0x64002180
6400b1d5:	push   eax
6400b1d6:	call   0x64006e60
6400b1db:	add    esp,0x4
6400b1de:	test   al,al
6400b1e0:	jne    0x6400b1e7
6400b1e2:	xor    eax,eax
6400b1e4:	ret    0xc
6400b1e7:	jmp    0x64014289
6400b1ec:	int3   
6400b1ed:	int3   
6400b1ee:	int3   
6400b1ef:	int3   
6400b1f0:	push   ebp
6400b1f1:	mov    ebp,esp
6400b1f3:	push   0xffffffff
6400b1f5:	push   0x64022e88
6400b1fa:	mov    eax,fs:0x0
6400b200:	push   eax
6400b201:	sub    esp,0x38
6400b204:	mov    eax,ds:0x640521ac
6400b209:	xor    eax,ebp
6400b20b:	mov    DWORD PTR [ebp-0x14],eax
6400b20e:	push   ebx
6400b20f:	push   esi
6400b210:	push   edi
6400b211:	push   eax
6400b212:	lea    eax,[ebp-0xc]
6400b215:	mov    fs:0x0,eax
6400b21b:	mov    DWORD PTR [ebp-0x10],esp
6400b21e:	push   0x1
6400b220:	xor    esi,esi
6400b222:	push   0x1
6400b224:	lea    ecx,[ebp-0x44]
6400b227:	mov    DWORD PTR [ebp-0x4],esi
6400b22a:	call   0x64007060
6400b22f:	mov    BYTE PTR [ebp-0x4],0x1
6400b233:	call   DWORD PTR ds:0x6402c040
6400b239:	push   eax
6400b23a:	call   0x64002960
6400b23f:	movzx  eax,ax
6400b242:	add    esp,0x4
6400b245:	push   eax
6400b246:	lea    eax,[ebp-0x30]
6400b249:	push   eax
6400b24a:	lea    ecx,[ebp-0x44]
6400b24d:	call   0x640072f0
6400b252:	cmp    DWORD PTR [ebp-0x1c],esi
6400b255:	mov    bl,0x2
6400b257:	mov    BYTE PTR [ebp-0x4],bl
6400b25a:	jne    0x6400b26d
6400b25c:	push   0x64044170
6400b261:	lea    ecx,[ebp-0x38]
6400b264:	push   ecx
6400b265:	mov    DWORD PTR [ebp-0x38],esi
6400b268:	call   0x64013812
6400b26d:	call   DWORD PTR ds:0x64052184
6400b273:	lea    edx,[ebp-0x34]
6400b276:	push   0x1
6400b278:	push   edx
6400b279:	call   0x64002640
6400b27e:	add    esp,0x8
6400b281:	mov    esi,eax
6400b283:	mov    eax,DWORD PTR [esi]
6400b285:	mov    edi,0x10
6400b28a:	sub    eax,edi
6400b28c:	cmp    DWORD PTR [eax+0xc],0x1
6400b290:	mov    BYTE PTR [ebp-0x4],0x3
6400b294:	jle    0x6400b2a1
6400b296:	mov    eax,DWORD PTR [eax+0x4]
6400b299:	push   eax
6400b29a:	mov    ecx,esi
6400b29c:	call   0x64003800
6400b2a1:	cmp    DWORD PTR [ebp-0x18],edi
6400b2a4:	mov    esi,DWORD PTR [esi]
6400b2a6:	mov    eax,DWORD PTR [ebp-0x2c]
6400b2a9:	jae    0x6400b2ae
6400b2ab:	lea    eax,[ebp-0x2c]
6400b2ae:	push   esi
6400b2af:	push   eax
6400b2b0:	call   DWORD PTR ds:0x6402c03c
6400b2b6:	push   eax
6400b2b7:	call   0x64009450
6400b2bc:	mov    eax,DWORD PTR [ebp-0x34]
6400b2bf:	add    eax,0xfffffff0
6400b2c2:	add    esp,0xc
6400b2c5:	mov    BYTE PTR [ebp-0x4],bl
6400b2c8:	lea    ecx,[eax+0xc]
6400b2cb:	or     edx,0xffffffff
6400b2ce:	lock xadd DWORD PTR [ecx],edx
6400b2d2:	dec    edx
6400b2d3:	test   edx,edx
6400b2d5:	jg     0x6400b2e1
6400b2d7:	mov    ecx,DWORD PTR [eax]
6400b2d9:	mov    edx,DWORD PTR [ecx]
6400b2db:	push   eax
6400b2dc:	mov    eax,DWORD PTR [edx+0x4]
6400b2df:	call   eax
6400b2e1:	cmp    DWORD PTR [ebp-0x18],edi
6400b2e4:	jb     0x6400b2f2
6400b2e6:	mov    ecx,DWORD PTR [ebp-0x2c]
6400b2e9:	push   ecx
6400b2ea:	call   0x640135e4
6400b2ef:	add    esp,0x4
6400b2f2:	lea    ecx,[ebp-0x44]
6400b2f5:	mov    DWORD PTR [ebp-0x18],0xf
6400b2fc:	mov    DWORD PTR [ebp-0x1c],0x0
6400b303:	mov    BYTE PTR [ebp-0x2c],0x0
6400b307:	mov    BYTE PTR [ebp-0x4],0x0
6400b30b:	call   0x64007080
6400b310:	mov    al,0x1
6400b312:	jmp    0x6400b31c
6400b314:	mov    eax,0x6400b31a
6400b319:	ret    
6400b31a:	xor    al,al
6400b31c:	mov    ecx,DWORD PTR [ebp-0xc]
6400b31f:	mov    DWORD PTR fs:0x0,ecx
6400b326:	pop    ecx
6400b327:	pop    edi
6400b328:	pop    esi
6400b329:	pop    ebx
6400b32a:	mov    ecx,DWORD PTR [ebp-0x14]
6400b32d:	xor    ecx,ebp
6400b32f:	call   0x64013ca6
6400b334:	mov    esp,ebp
6400b336:	pop    ebp
6400b337:	ret    
6400b338:	int3   
6400b339:	int3   
6400b33a:	int3   
6400b33b:	int3   
6400b33c:	int3   
6400b33d:	int3   
6400b33e:	int3   
6400b33f:	int3   
6400b340:	push   esi
6400b341:	push   edi
6400b342:	mov    edi,DWORD PTR ds:0x6402c044
6400b348:	xor    esi,esi
6400b34a:	lea    ebx,[ebx+0x0]
6400b350:	call   0x6400b1f0
6400b355:	test   al,al
6400b357:	jne    0x6400b368
6400b359:	push   0xbb8
6400b35e:	call   edi
6400b360:	add    esi,0x1
6400b363:	cmp    esi,0x32
6400b366:	jne    0x6400b350
6400b368:	pop    edi
6400b369:	xor    eax,eax
6400b36b:	pop    esi
6400b36c:	ret    0x4
6400b36f:	int3   
6400b370:	sub    esp,0x214
6400b376:	mov    eax,ds:0x640521ac
6400b37b:	xor    eax,esp
6400b37d:	mov    DWORD PTR [esp+0x210],eax
6400b384:	push   0x208
6400b389:	lea    eax,[esp+0xc]
6400b38d:	push   eax
6400b38e:	push   0x0
6400b390:	call   DWORD PTR ds:0x6402c058
6400b396:	test   eax,eax
6400b398:	je     0x6400b43d
6400b39e:	lea    ecx,[esp+0x8]
6400b3a2:	push   0x104
6400b3a7:	push   ecx
6400b3a8:	call   0x64014501
6400b3ad:	lea    edx,[esp+0x10]
6400b3b1:	push   0x6402c40c
6400b3b6:	push   edx
6400b3b7:	call   0x64013f5c
6400b3bc:	add    esp,0x10
6400b3bf:	test   eax,eax
6400b3c1:	jne    0x6400b3d9
6400b3c3:	lea    eax,[esp+0x8]
6400b3c7:	push   0x6402c3f4
6400b3cc:	push   eax
6400b3cd:	call   0x64013f5c
6400b3d2:	add    esp,0x8
6400b3d5:	test   eax,eax
6400b3d7:	je     0x6400b43d
6400b3d9:	lea    ecx,[esp]
6400b3dc:	push   0x1
6400b3de:	push   ecx
6400b3df:	call   0x64002190
6400b3e4:	mov    eax,DWORD PTR [eax]
6400b3e6:	add    esp,0x8
6400b3e9:	lea    edx,[esp+0x4]
6400b3ed:	push   edx
6400b3ee:	push   eax
6400b3ef:	push   0x0
6400b3f1:	call   DWORD PTR ds:0x6402c054
6400b3f7:	mov    eax,DWORD PTR [esp]
6400b3fa:	add    eax,0xfffffff0
6400b3fd:	lea    ecx,[eax+0xc]
6400b400:	or     edx,0xffffffff
6400b403:	lock xadd DWORD PTR [ecx],edx
6400b407:	dec    edx
6400b408:	test   edx,edx
6400b40a:	jg     0x6400b416
6400b40c:	mov    ecx,DWORD PTR [eax]
6400b40e:	mov    edx,DWORD PTR [ecx]
6400b410:	push   eax
6400b411:	mov    eax,DWORD PTR [edx+0x4]
6400b414:	call   eax
6400b416:	lea    ecx,[esp+0x8]
6400b41a:	push   ecx
6400b41b:	call   DWORD PTR ds:0x6402c050
6400b421:	push   eax
6400b422:	call   DWORD PTR ds:0x6402c04c
6400b428:	push   0x0
6400b42a:	push   0x0
6400b42c:	push   0x0
6400b42e:	push   0x6400b340
6400b433:	push   0x0
6400b435:	push   0x0
6400b437:	call   DWORD PTR ds:0x6402c048
6400b43d:	mov    ecx,DWORD PTR [esp+0x210]
6400b444:	xor    ecx,esp
6400b446:	call   0x64013ca6
6400b44b:	add    esp,0x214
6400b451:	ret    
6400b452:	jmp    DWORD PTR ds:0x6402c1f0
6400b458:	jmp    DWORD PTR ds:0x6402c1ec
6400b45e:	int3   
6400b45f:	int3   
6400b460:	push   edi
6400b461:	mov    edi,DWORD PTR [esp+0x14]
6400b465:	test   edi,edi
6400b467:	jne    0x6400b46e
6400b469:	lea    eax,[edi+0x1]
6400b46c:	pop    edi
6400b46d:	ret    
6400b46e:	mov    eax,DWORD PTR [esp+0x8]
6400b472:	test   eax,eax
6400b474:	push   esi
6400b475:	mov    DWORD PTR [edi],0x0
6400b47b:	je     0x6400b4cd
6400b47d:	mov    esi,DWORD PTR [eax+0x14]
6400b480:	test   esi,esi
6400b482:	jl     0x6400b4cd
6400b484:	mov    ecx,DWORD PTR [eax+0x18]
6400b487:	test   ecx,ecx
6400b489:	je     0x6400b495
6400b48b:	cmp    ecx,0x1
6400b48e:	je     0x6400b495
6400b490:	cmp    ecx,0x2
6400b493:	jne    0x6400b4cd
6400b495:	cmp    DWORD PTR [eax+0x10],0x0
6400b499:	je     0x6400b4cd
6400b49b:	mov    ecx,DWORD PTR [esp+0x10]
6400b49f:	test   ecx,ecx
6400b4a1:	je     0x6400b4cd
6400b4a3:	mov    edx,DWORD PTR [eax+0x1c]
6400b4a6:	and    edx,0x3
6400b4a9:	cmp    dl,0x3
6400b4ac:	je     0x6400b4cd
6400b4ae:	test   esi,esi
6400b4b0:	jne    0x6400b4b8
6400b4b2:	lea    eax,[esi+0x1]
6400b4b5:	pop    esi
6400b4b6:	pop    edi
6400b4b7:	ret    
6400b4b8:	mov    edx,DWORD PTR [esp+0x14]
6400b4bc:	push   edi
6400b4bd:	push   edx
6400b4be:	push   ecx
6400b4bf:	push   0x0
6400b4c1:	push   eax
6400b4c2:	call   0x6400b9d0
6400b4c7:	add    esp,0x14
6400b4ca:	pop    esi
6400b4cb:	pop    edi
6400b4cc:	ret    
6400b4cd:	pop    esi
6400b4ce:	mov    eax,0x3
6400b4d3:	pop    edi
6400b4d4:	ret    
6400b4d5:	int3   
6400b4d6:	int3   
6400b4d7:	int3   
6400b4d8:	int3   
6400b4d9:	int3   
6400b4da:	int3   
6400b4db:	int3   
6400b4dc:	int3   
6400b4dd:	int3   
6400b4de:	int3   
6400b4df:	int3   
6400b4e0:	test   DWORD PTR [esp+0x4],0x4000
6400b4e8:	je     0x6400b4f1
6400b4ea:	mov    eax,DWORD PTR [eax*4+0x6404600c]
6400b4f1:	ret    
6400b4f2:	int3   
6400b4f3:	int3   
6400b4f4:	int3   
6400b4f5:	int3   
6400b4f6:	int3   
6400b4f7:	int3   
6400b4f8:	int3   
6400b4f9:	int3   
6400b4fa:	int3   
6400b4fb:	int3   
6400b4fc:	int3   
6400b4fd:	int3   
6400b4fe:	int3   
6400b4ff:	int3   
6400b500:	test   ecx,0x2000
6400b506:	je     0x6400b510
6400b508:	mov    eax,DWORD PTR [eax*4+0x64046018]
6400b50f:	ret    
6400b510:	cmp    eax,0x2
6400b513:	jne    0x6400b53d
6400b515:	and    edx,0x3000000
6400b51b:	cmp    edx,0x1000000
6400b521:	je     0x6400b538
6400b523:	test   ecx,0x2000000
6400b529:	je     0x6400b532
6400b52b:	test   BYTE PTR [esp+0x4],0x8
6400b530:	jne    0x6400b538
6400b532:	mov    eax,0x1
6400b537:	ret    
6400b538:	mov    eax,0x2
6400b53d:	ret    
6400b53e:	int3   
6400b53f:	int3   
6400b540:	sub    esp,0x18
6400b543:	mov    edx,DWORD PTR [ebx+0x10]
6400b546:	push   ebp
6400b547:	mov    ebp,DWORD PTR [esp+0x20]
6400b54b:	mov    ecx,DWORD PTR [ebp+0x28]
6400b54e:	push   esi
6400b54f:	xor    eax,eax
6400b551:	push   ebp
6400b552:	push   ebx
6400b553:	mov    DWORD PTR [esp+0x10],eax
6400b557:	mov    DWORD PTR [esp+0x1c],ecx
6400b55b:	mov    DWORD PTR [esp+0x24],edx
6400b55f:	mov    BYTE PTR [esp+0x2c],al
6400b563:	mov    DWORD PTR [esp+0x20],eax
6400b567:	call   0x6400dfb0
6400b56c:	mov    esi,eax
6400b56e:	add    esp,0x8
6400b571:	test   esi,esi
6400b573:	je     0x6400b770
6400b579:	cmp    DWORD PTR [ebp+0x18],0x1
6400b57d:	jne    0x6400b5a9
6400b57f:	mov    eax,DWORD PTR [ebp+0x0]
6400b582:	test   eax,0x2000
6400b587:	je     0x6400b5a9
6400b589:	cmp    DWORD PTR [ebp+0x20],0x0
6400b58d:	jne    0x6400b5a9
6400b58f:	test   BYTE PTR [esp+0x14],0x8
6400b594:	je     0x6400b5a9
6400b596:	and    eax,0xffffdfff
6400b59b:	push   0x3
6400b59d:	push   ebp
6400b59e:	mov    DWORD PTR [ebp+0x0],eax
6400b5a1:	call   0x6400d900
6400b5a6:	add    esp,0x8
6400b5a9:	mov    eax,DWORD PTR [ebx+0x18]
6400b5ac:	cmp    eax,0x2
6400b5af:	jne    0x6400b5c2
6400b5b1:	test   DWORD PTR [esi+0x8],0x800000
6400b5b8:	jne    0x6400b770
6400b5be:	cmp    eax,eax
6400b5c0:	je     0x6400b5cf
6400b5c2:	test   DWORD PTR [esi+0x8],0x8000000
6400b5c9:	jne    0x6400b770
6400b5cf:	mov    ecx,DWORD PTR [esi+0x8]
6400b5d2:	test   cl,0x1
6400b5d5:	je     0x6400b621
6400b5d7:	not    ecx
6400b5d9:	test   ecx,0x40000000
6400b5df:	je     0x6400b5ef
6400b5e1:	add    DWORD PTR [ebx+0x10],0x1
6400b5e5:	add    DWORD PTR [ebx+0x14],0xffffffff
6400b5e9:	js     0x6400b770
6400b5ef:	mov    ecx,DWORD PTR [ebx+0x10]
6400b5f2:	movzx  edx,BYTE PTR [ecx]
6400b5f5:	mov    ecx,DWORD PTR [esi+0x8]
6400b5f8:	test   ecx,0x10000000
6400b5fe:	mov    DWORD PTR [esp+0x8],edx
6400b602:	je     0x6400b60d
6400b604:	test   dl,0x38
6400b607:	jne    0x6400b770
6400b60d:	test   ecx,0x100000
6400b613:	je     0x6400b621
6400b615:	cmp    edx,0xc0
6400b61b:	jb     0x6400b770
6400b621:	mov    edx,DWORD PTR [esp+0x14]
6400b625:	add    DWORD PTR [ebx+0x10],0x1
6400b629:	mov    ecx,DWORD PTR [ebp+0x0]
6400b62c:	push   edx
6400b62d:	mov    edx,DWORD PTR [esi+0x8]
6400b630:	call   0x6400b500
6400b635:	mov    DWORD PTR [esp+0x14],eax
6400b639:	mov    eax,ecx
6400b63b:	push   eax
6400b63c:	mov    eax,DWORD PTR [ebx+0x18]
6400b63f:	call   0x6400b4e0
6400b644:	push   0x40
6400b646:	push   0x0
6400b648:	push   edi
6400b649:	mov    DWORD PTR [esp+0x20],eax
6400b64d:	call   0x64015100
6400b652:	mov    BYTE PTR [edi+0xd],0xff
6400b656:	mov    al,BYTE PTR [esi+0x3]
6400b659:	add    esp,0x14
6400b65c:	test   al,al
6400b65e:	je     0x6400b72a
6400b664:	mov    edx,DWORD PTR [esp+0xc]
6400b668:	lea    ecx,[esp+0x18]
6400b66c:	push   ecx
6400b66d:	mov    ecx,DWORD PTR [esp+0x14]
6400b671:	push   edx
6400b672:	mov    edx,DWORD PTR [esp+0x10]
6400b676:	push   ecx
6400b677:	push   ebp
6400b678:	push   edx
6400b679:	push   0x0
6400b67b:	movzx  eax,al
6400b67e:	push   eax
6400b67f:	push   esi
6400b680:	push   edi
6400b681:	push   ebx
6400b682:	call   0x6400c710
6400b687:	add    esp,0x28
6400b68a:	test   eax,eax
6400b68c:	je     0x6400b770
6400b692:	mov    al,BYTE PTR [esi+0x2]
6400b695:	test   al,al
6400b697:	je     0x6400b72a
6400b69d:	mov    ecx,DWORD PTR [esp+0xc]
6400b6a1:	mov    edx,DWORD PTR [esp+0x10]
6400b6a5:	push   0x0
6400b6a7:	push   ecx
6400b6a8:	mov    ecx,DWORD PTR [esp+0x10]
6400b6ac:	push   edx
6400b6ad:	push   ebp
6400b6ae:	push   ecx
6400b6af:	push   0x1
6400b6b1:	movzx  edx,al
6400b6b4:	push   edx
6400b6b5:	push   esi
6400b6b6:	push   edi
6400b6b7:	push   ebx
6400b6b8:	call   0x6400c710
6400b6bd:	add    esp,0x28
6400b6c0:	test   eax,eax
6400b6c2:	je     0x6400b770
6400b6c8:	test   DWORD PTR [esi+0x8],0x20000
6400b6cf:	je     0x6400b72a
6400b6d1:	mov    eax,DWORD PTR [esp+0xc]
6400b6d5:	mov    ecx,DWORD PTR [esp+0x10]
6400b6d9:	mov    edx,DWORD PTR [esp+0x8]
6400b6dd:	push   0x0
6400b6df:	push   eax
6400b6e0:	movzx  eax,BYTE PTR [esi+0x10]
6400b6e4:	push   ecx
6400b6e5:	push   ebp
6400b6e6:	push   edx
6400b6e7:	push   0x2
6400b6e9:	push   eax
6400b6ea:	push   esi
6400b6eb:	push   edi
6400b6ec:	push   ebx
6400b6ed:	call   0x6400c710
6400b6f2:	add    esp,0x28
6400b6f5:	test   eax,eax
6400b6f7:	je     0x6400b770
6400b6f9:	test   DWORD PTR [esi+0x8],0x40000
6400b700:	je     0x6400b72a
6400b702:	mov    ecx,DWORD PTR [esp+0xc]
6400b706:	mov    edx,DWORD PTR [esp+0x10]
6400b70a:	mov    eax,DWORD PTR [esp+0x8]
6400b70e:	push   0x0
6400b710:	push   ecx
6400b711:	movzx  ecx,BYTE PTR [esi+0x11]
6400b715:	push   edx
6400b716:	push   ebp
6400b717:	push   eax
6400b718:	push   0x3
6400b71a:	push   ecx
6400b71b:	push   esi
6400b71c:	push   edi
6400b71d:	push   ebx
6400b71e:	call   0x6400c710
6400b723:	add    esp,0x28
6400b726:	test   eax,eax
6400b728:	je     0x6400b770
6400b72a:	test   DWORD PTR [esi+0x8],0x200000
6400b731:	je     0x6400b742
6400b733:	push   ebx
6400b734:	call   0x6400e2a0
6400b739:	mov    esi,eax
6400b73b:	add    esp,0x4
6400b73e:	test   esi,esi
6400b740:	je     0x6400b770
6400b742:	test   DWORD PTR [esi+0x8],0x400000
6400b749:	je     0x6400b765
6400b74b:	add    DWORD PTR [ebx+0x14],0xffffffff
6400b74f:	js     0x6400b770
6400b751:	mov    eax,DWORD PTR [ebx+0x10]
6400b754:	mov    cl,BYTE PTR [eax]
6400b756:	add    eax,0x1
6400b759:	cmp    cl,0x8
6400b75c:	mov    BYTE PTR [esp+0x24],cl
6400b760:	mov    DWORD PTR [ebx+0x10],eax
6400b763:	jae    0x6400b770
6400b765:	mov    edx,DWORD PTR [ebx+0x10]
6400b768:	sub    edx,DWORD PTR [ebp+0x8]
6400b76b:	cmp    edx,0xf
6400b76e:	jle    0x6400b7b5
6400b770:	push   0x40
6400b772:	push   0x0
6400b774:	push   edi
6400b775:	call   0x64015100
6400b77a:	mov    eax,DWORD PTR [esp+0x28]
6400b77e:	mov    BYTE PTR [edi+0xd],0xff
6400b782:	mov    BYTE PTR [edi+0x8],0x1
6400b786:	add    esp,0xc
6400b789:	mov    DWORD PTR [ebp+0x4],0x0
6400b790:	cmp    BYTE PTR [eax],0x9b
6400b793:	jne    0x6400b7aa
6400b795:	or     BYTE PTR [edi+0x3a],0x8
6400b799:	pop    esi
6400b79a:	mov    WORD PTR [edi+0x10],0x3db
6400b7a0:	mov    eax,0x1
6400b7a5:	pop    ebp
6400b7a6:	add    esp,0x18
6400b7a9:	ret    
6400b7aa:	pop    esi
6400b7ab:	mov    eax,0x3
6400b7b0:	pop    ebp
6400b7b1:	add    esp,0x18
6400b7b4:	ret    
6400b7b5:	mov    edx,0x1
6400b7ba:	cmp    DWORD PTR [esp+0x18],edx
6400b7be:	jne    0x6400b7d0
6400b7c0:	test   BYTE PTR [esi+0x8],0x10
6400b7c4:	je     0x6400b7d0
6400b7c6:	or     DWORD PTR [ebp+0x4],0x10
6400b7ca:	or     WORD PTR [edi+0xa],dx
6400b7ce:	jmp    0x6400b7fb
6400b7d0:	mov    eax,DWORD PTR [esi+0x8]
6400b7d3:	test   al,0x20
6400b7d5:	je     0x6400b7e8
6400b7d7:	test   BYTE PTR [ebp+0x0],0x20
6400b7db:	je     0x6400b7e8
6400b7dd:	or     DWORD PTR [ebp+0x4],0x20
6400b7e1:	or     WORD PTR [edi+0xa],0x2
6400b7e6:	jmp    0x6400b7fb
6400b7e8:	test   al,0x40
6400b7ea:	je     0x6400b7fb
6400b7ec:	test   BYTE PTR [ebp+0x0],0x40
6400b7f0:	je     0x6400b7fb
6400b7f2:	or     DWORD PTR [ebp+0x4],0x40
6400b7f6:	or     WORD PTR [edi+0xa],0x4
6400b7fb:	mov    eax,DWORD PTR [esi+0x8]
6400b7fe:	mov    ecx,eax
6400b800:	and    ecx,0x14000
6400b806:	cmp    ecx,0x14000
6400b80c:	jne    0x6400b83f
6400b80e:	mov    eax,DWORD PTR [esp+0xc]
6400b812:	or     DWORD PTR [ebp+0x4],0x4000
6400b819:	test   eax,eax
6400b81b:	je     0x6400b91b
6400b821:	cmp    eax,edx
6400b823:	jne    0x6400b832
6400b825:	mov    ax,WORD PTR [esi+0x12]
6400b829:	mov    WORD PTR [edi+0x10],ax
6400b82d:	jmp    0x6400b923
6400b832:	mov    cx,WORD PTR [esi+0x14]
6400b836:	mov    WORD PTR [edi+0x10],cx
6400b83a:	jmp    0x6400b923
6400b83f:	mov    ecx,eax
6400b841:	and    ecx,0xc000
6400b847:	cmp    ecx,0xc000
6400b84d:	jne    0x6400b863
6400b84f:	mov    dx,WORD PTR [esi+0x4]
6400b853:	mov    WORD PTR [edi+0x10],dx
6400b857:	or     DWORD PTR [ebp+0x4],0x4000
6400b85e:	jmp    0x6400b923
6400b863:	mov    ecx,DWORD PTR [esp+0x10]
6400b867:	test   ecx,ecx
6400b869:	jne    0x6400b88d
6400b86b:	test   eax,0x10000
6400b870:	je     0x6400b880
6400b872:	test   eax,0x1000008
6400b877:	jne    0x6400b880
6400b879:	or     DWORD PTR [ebp+0x4],0x2000
6400b880:	mov    ax,WORD PTR [esi+0x4]
6400b884:	mov    WORD PTR [edi+0x10],ax
6400b888:	jmp    0x6400b923
6400b88d:	cmp    ecx,edx
6400b88f:	jne    0x6400b8e2
6400b891:	or     WORD PTR [edi+0xa],0x100
6400b897:	test   DWORD PTR [esi+0x8],0x10000
6400b89e:	je     0x6400b91b
6400b8a0:	or     DWORD PTR [ebp+0x4],0x2000
6400b8a7:	mov    eax,DWORD PTR [esi+0x8]
6400b8aa:	test   eax,0x80000
6400b8af:	je     0x6400b8cb
6400b8b1:	cmp    DWORD PTR [esp+0x8],0xc0
6400b8b9:	jb     0x6400b8c5
6400b8bb:	mov    cx,WORD PTR [esi+0x4]
6400b8bf:	mov    WORD PTR [edi+0x10],cx
6400b8c3:	jmp    0x6400b923
6400b8c5:	mov    dx,WORD PTR [esi+0x12]
6400b8c9:	jmp    0x6400b91f
6400b8cb:	test   eax,0x400000
6400b8d0:	je     0x6400b911
6400b8d2:	movzx  ax,BYTE PTR [esp+0x24]
6400b8d8:	add    ax,WORD PTR [esi+0x4]
6400b8dc:	mov    WORD PTR [edi+0x10],ax
6400b8e0:	jmp    0x6400b923
6400b8e2:	or     WORD PTR [edi+0xa],0x200
6400b8e8:	mov    eax,DWORD PTR [esi+0x8]
6400b8eb:	test   eax,0x4010000
6400b8f0:	je     0x6400b91b
6400b8f2:	test   eax,0x4000000
6400b8f7:	je     0x6400b911
6400b8f9:	test   BYTE PTR [esp+0x14],0x8
6400b8fe:	je     0x6400b911
6400b900:	or     DWORD PTR [ebp+0x4],0x2000000
6400b907:	mov    ax,WORD PTR [esi+0x14]
6400b90b:	mov    WORD PTR [edi+0x10],ax
6400b90f:	jmp    0x6400b923
6400b911:	mov    cx,WORD PTR [esi+0x12]
6400b915:	mov    WORD PTR [edi+0x10],cx
6400b919:	jmp    0x6400b923
6400b91b:	mov    dx,WORD PTR [esi+0x4]
6400b91f:	mov    WORD PTR [edi+0x10],dx
6400b923:	test   DWORD PTR [esi+0x8],0x8000
6400b92a:	je     0x6400b93c
6400b92c:	test   DWORD PTR [ebp+0x0],0x2000
6400b933:	je     0x6400b93c
6400b935:	or     DWORD PTR [ebp+0x4],0x2000
6400b93c:	test   DWORD PTR [esi+0x8],0x20000000
6400b943:	je     0x6400b966
6400b945:	mov    eax,DWORD PTR [esi+0xc]
6400b948:	test   al,0x4
6400b94a:	je     0x6400b953
6400b94c:	test   BYTE PTR [esp+0x14],0x8
6400b951:	jne    0x6400b95e
6400b953:	test   al,0x8
6400b955:	je     0x6400b966
6400b957:	test   BYTE PTR [esp+0x14],0x10
6400b95c:	je     0x6400b966
6400b95e:	mov    ax,WORD PTR [esi+0x12]
6400b962:	mov    WORD PTR [edi+0x10],ax
6400b966:	mov    eax,DWORD PTR [esp+0xc]
6400b96a:	and    eax,0x3
6400b96d:	shl    eax,0xa
6400b970:	or     WORD PTR [edi+0xa],ax
6400b974:	test   DWORD PTR [esi+0x8],0x80000000
6400b97b:	movzx  eax,WORD PTR [edi+0xa]
6400b97f:	je     0x6400b988
6400b981:	or     eax,0x40
6400b984:	mov    WORD PTR [edi+0xa],ax
6400b988:	push   ebp
6400b989:	call   0x6400d940
6400b98e:	mov    WORD PTR [edi+0x38],ax
6400b992:	mov    cl,BYTE PTR [esi+0x1]
6400b995:	add    esp,0x4
6400b998:	cmp    BYTE PTR [edi+0xc],0x0
6400b99c:	mov    BYTE PTR [edi+0x3a],cl
6400b99f:	jne    0x6400b9a5
6400b9a1:	mov    BYTE PTR [edi+0xc],0xff
6400b9a5:	mov    al,BYTE PTR [edi+0xd]
6400b9a8:	cmp    al,0xff
6400b9aa:	je     0x6400b9bb
6400b9ac:	movzx  edx,al
6400b9af:	mov    ax,WORD PTR [edx*2+0x64048b90]
6400b9b7:	or     WORD PTR [edi+0x3c],ax
6400b9bb:	mov    cl,BYTE PTR [ebx+0x10]
6400b9be:	sub    cl,BYTE PTR [esp+0x1c]
6400b9c2:	pop    esi
6400b9c3:	mov    BYTE PTR [edi+0x8],cl
6400b9c6:	mov    eax,0x1
6400b9cb:	pop    ebp
6400b9cc:	add    esp,0x18
6400b9cf:	ret    
6400b9d0:	sub    esp,0x90
6400b9d6:	push   ebx
6400b9d7:	push   ebp
6400b9d8:	push   esi
6400b9d9:	or     eax,0xffffffff
6400b9dc:	push   edi
6400b9dd:	mov    edi,DWORD PTR [esp+0xa4]
6400b9e4:	mov    ebp,DWORD PTR [edi]
6400b9e6:	mov    ecx,DWORD PTR [edi+0x4]
6400b9e9:	mov    ebx,DWORD PTR [edi+0x10]
6400b9ec:	mov    edx,DWORD PTR [edi+0x14]
6400b9ef:	mov    DWORD PTR [esp+0x2c],eax
6400b9f3:	mov    DWORD PTR [esp+0x30],eax
6400b9f7:	mov    eax,DWORD PTR [edi+0x1c]
6400b9fa:	xor    esi,esi
6400b9fc:	test   al,0x2
6400b9fe:	mov    DWORD PTR [esp+0x1c],ebp
6400ba02:	mov    DWORD PTR [esp+0x20],ecx
6400ba06:	mov    DWORD PTR [esp+0x18],ebx
6400ba0a:	mov    DWORD PTR [esp+0x14],edx
6400ba0e:	je     0x6400ba1a
6400ba10:	mov    DWORD PTR [esp+0x2c],0xffffffff
6400ba18:	jmp    0x6400ba26
6400ba1a:	test   al,0x1
6400ba1c:	je     0x6400ba2a
6400ba1e:	mov    DWORD PTR [esp+0x2c],0xffff
6400ba26:	mov    DWORD PTR [esp+0x30],esi
6400ba2a:	test   edx,edx
6400ba2c:	mov    eax,DWORD PTR [esp+0xb4]
6400ba33:	mov    DWORD PTR [eax],esi
6400ba35:	mov    eax,DWORD PTR [edi+0x18]
6400ba38:	mov    DWORD PTR [esp+0x98],eax
6400ba3f:	mov    DWORD PTR [edi+0x8],ebp
6400ba42:	mov    DWORD PTR [edi+0xc],ecx
6400ba45:	jg     0x6400ba68
6400ba47:	pop    edi
6400ba48:	pop    esi
6400ba49:	pop    ebp
6400ba4a:	mov    eax,0x1
6400ba4f:	pop    ebx
6400ba50:	add    esp,0x90
6400ba56:	ret    
6400ba57:	jmp    0x6400ba60
6400ba59:	lea    esp,[esp+0x0]
6400ba60:	mov    ecx,DWORD PTR [esp+0x20]
6400ba64:	mov    ebp,DWORD PTR [esp+0x1c]
6400ba68:	push   0x2c
6400ba6a:	mov    DWORD PTR [esp+0x3c],ecx
6400ba6e:	lea    ecx,[esp+0x44]
6400ba72:	push   0x0
6400ba74:	push   ecx
6400ba75:	call   0x64015100
6400ba7a:	mov    edx,DWORD PTR [esp+0xa4]
6400ba81:	or     eax,0xffffffff
6400ba84:	mov    DWORD PTR [esp+0x78],eax
6400ba88:	mov    DWORD PTR [esp+0x7c],eax
6400ba8c:	mov    DWORD PTR [esp+0x80],eax
6400ba93:	mov    DWORD PTR [esp+0x84],eax
6400ba9a:	mov    DWORD PTR [esp+0x88],eax
6400baa1:	mov    DWORD PTR [esp+0x54],ebx
6400baa5:	mov    DWORD PTR [esp+0x58],ebx
6400baa9:	movzx  eax,BYTE PTR [ebx]
6400baac:	push   edx
6400baad:	push   eax
6400baae:	mov    DWORD PTR [esp+0x38],0x0
6400bab6:	call   0x6400d7f0
6400babb:	add    esp,0x14
6400babe:	test   eax,eax
6400bac0:	je     0x6400bbee
6400bac6:	mov    ecx,DWORD PTR [esp+0x98]
6400bacd:	mov    eax,DWORD PTR [esp+0x14]
6400bad1:	push   ecx
6400bad2:	lea    edx,[esp+0x44]
6400bad6:	push   edx
6400bad7:	push   eax
6400bad8:	push   ebx
6400bad9:	call   0x6400d9d0
6400bade:	mov    ecx,DWORD PTR [esp+0x5c]
6400bae2:	mov    eax,ecx
6400bae4:	sub    eax,DWORD PTR [esp+0x58]
6400bae8:	add    esp,0x10
6400baeb:	sub    DWORD PTR [esp+0x14],eax
6400baef:	mov    DWORD PTR [esp+0x24],eax
6400baf3:	je     0x6400bafe
6400baf5:	cmp    eax,0xf
6400baf8:	jne    0x6400bbd6
6400bafe:	mov    edx,DWORD PTR [edi+0x1c]
6400bb01:	not    edx
6400bb03:	test   dl,0x4
6400bb06:	je     0x6400bbcb
6400bb0c:	sub    ecx,ebx
6400bb0e:	lea    edx,[ecx+esi*1]
6400bb11:	cmp    edx,DWORD PTR [esp+0xb0]
6400bb18:	ja     0x6400bef1
6400bb1e:	cmp    ebx,DWORD PTR [esp+0x4c]
6400bb22:	jae    0x6400bbc2
6400bb28:	mov    edx,DWORD PTR [esp+0xac]
6400bb2f:	mov    edi,esi
6400bb31:	imul   edi,edi,0xa8
6400bb37:	mov    eax,esi
6400bb39:	shl    eax,0x6
6400bb3c:	add    eax,edx
6400bb3e:	add    edi,edx
6400bb40:	add    esi,ecx
6400bb42:	mov    DWORD PTR [esp+0x10],esi
6400bb46:	jmp    0x6400bb54
6400bb48:	jmp    0x6400bb50
6400bb4a:	lea    ebx,[ebx+0x0]
6400bb50:	mov    eax,DWORD PTR [esp+0x28]
6400bb54:	cmp    DWORD PTR [esp+0xa8],0x0
6400bb5c:	mov    esi,edi
6400bb5e:	jne    0x6400bb62
6400bb60:	mov    esi,eax
6400bb62:	push   0x40
6400bb64:	add    eax,0x40
6400bb67:	push   0x0
6400bb69:	push   esi
6400bb6a:	add    edi,0xa8
6400bb70:	mov    DWORD PTR [esp+0x34],eax
6400bb74:	call   0x64015100
6400bb79:	mov    ecx,DWORD PTR [esp+0x38]
6400bb7d:	mov    edx,DWORD PTR [esp+0x3c]
6400bb81:	and    edx,DWORD PTR [esp+0x44]
6400bb85:	mov    WORD PTR [esi+0xa],0xffff
6400bb8b:	mov    al,BYTE PTR [ebx]
6400bb8d:	and    ecx,ebp
6400bb8f:	add    esp,0xc
6400bb92:	add    ebx,0x1
6400bb95:	add    ebp,0x1
6400bb98:	adc    DWORD PTR [esp+0x38],0x0
6400bb9d:	cmp    ebx,DWORD PTR [esp+0x4c]
6400bba1:	mov    BYTE PTR [esi+0x30],al
6400bba4:	mov    BYTE PTR [esi+0x8],0x1
6400bba8:	mov    DWORD PTR [esi],ecx
6400bbaa:	mov    DWORD PTR [esi+0x4],edx
6400bbad:	jb     0x6400bb50
6400bbaf:	mov    eax,DWORD PTR [esp+0x24]
6400bbb3:	mov    esi,DWORD PTR [esp+0x10]
6400bbb7:	mov    ebx,DWORD PTR [esp+0x18]
6400bbbb:	mov    edi,DWORD PTR [esp+0xa4]
6400bbc2:	mov    ecx,DWORD PTR [esp+0xb4]
6400bbc9:	mov    DWORD PTR [ecx],esi
6400bbcb:	cmp    DWORD PTR [esp+0x14],0x0
6400bbd0:	je     0x6400ba47
6400bbd6:	add    ebx,eax
6400bbd8:	add    DWORD PTR [esp+0x1c],eax
6400bbdc:	mov    DWORD PTR [esp+0x18],ebx
6400bbe0:	adc    DWORD PTR [esp+0x20],0x0
6400bbe5:	cmp    eax,0xf
6400bbe8:	je     0x6400bed6
6400bbee:	cmp    DWORD PTR [esp+0x98],0x2
6400bbf6:	jne    0x6400bc4b
6400bbf8:	test   DWORD PTR [esp+0x40],0x2000000
6400bc00:	je     0x6400bc2a
6400bc02:	add    ebx,0xffffffff
6400bc05:	cmp    DWORD PTR [esp+0x54],ebx
6400bc09:	je     0x6400bc2a
6400bc0b:	and    DWORD PTR [esp+0x40],0xfdffffff
6400bc13:	lea    edx,[esp+0x40]
6400bc17:	push   0x0
6400bc19:	push   edx
6400bc1a:	mov    DWORD PTR [esp+0x60],0x0
6400bc22:	call   0x6400d900
6400bc27:	add    esp,0x8
6400bc2a:	test   DWORD PTR [esp+0x40],0x780
6400bc32:	je     0x6400bc4b
6400bc34:	and    DWORD PTR [esp+0x40],0xfffff87f
6400bc3c:	lea    eax,[esp+0x40]
6400bc40:	push   0x2
6400bc42:	push   eax
6400bc43:	call   0x6400d900
6400bc48:	add    esp,0x8
6400bc4b:	lea    eax,[esi+0x1]
6400bc4e:	cmp    eax,DWORD PTR [esp+0xb0]
6400bc55:	ja     0x6400bef1
6400bc5b:	cmp    DWORD PTR [esp+0xa8],0x0
6400bc63:	je     0x6400bc6d
6400bc65:	imul   esi,esi,0xa8
6400bc6b:	jmp    0x6400bc70
6400bc6d:	shl    esi,0x6
6400bc70:	add    esi,DWORD PTR [esp+0xac]
6400bc77:	mov    ecx,DWORD PTR [esp+0x18]
6400bc7b:	mov    edx,DWORD PTR [esp+0x14]
6400bc7f:	mov    DWORD PTR [esp+0x10],eax
6400bc83:	lea    eax,[esp+0x40]
6400bc87:	mov    edi,esi
6400bc89:	push   eax
6400bc8a:	lea    ebx,[esp+0x84]
6400bc91:	mov    DWORD PTR [esp+0x94],ecx
6400bc98:	mov    DWORD PTR [esp+0x98],edx
6400bc9f:	call   0x6400b540
6400bca4:	mov    ecx,DWORD PTR [esp+0xa8]
6400bcab:	add    esp,0x4
6400bcae:	test   BYTE PTR [ecx+0x1c],0x4
6400bcb2:	mov    DWORD PTR [esp+0x28],eax
6400bcb6:	je     0x6400bcc6
6400bcb8:	test   BYTE PTR [edi+0x3a],0x7
6400bcbc:	jne    0x6400bcc6
6400bcbe:	mov    DWORD PTR [esp+0x28],0x4
6400bcc6:	mov    ecx,DWORD PTR [esp+0x30]
6400bcca:	and    DWORD PTR [edi+0x2c],ecx
6400bccd:	mov    eax,DWORD PTR [esp+0x2c]
6400bcd1:	and    DWORD PTR [edi+0x28],eax
6400bcd4:	mov    esi,ecx
6400bcd6:	mov    cl,BYTE PTR [edi+0x8]
6400bcd9:	and    esi,DWORD PTR [esp+0x38]
6400bcdd:	movzx  ebx,cl
6400bce0:	sub    DWORD PTR [esp+0x14],ebx
6400bce4:	mov    edx,eax
6400bce6:	and    edx,ebp
6400bce8:	mov    DWORD PTR [edi],edx
6400bcea:	mov    eax,ebx
6400bcec:	cdq    
6400bced:	add    DWORD PTR [esp+0x1c],eax
6400bcf1:	mov    eax,DWORD PTR [esp+0x24]
6400bcf5:	mov    DWORD PTR [edi+0x4],esi
6400bcf8:	adc    DWORD PTR [esp+0x20],edx
6400bcfc:	mov    edx,DWORD PTR [esp+0x28]
6400bd00:	add    DWORD PTR [esp+0x18],ebx
6400bd04:	add    cl,al
6400bd06:	cmp    edx,0x3
6400bd09:	mov    BYTE PTR [edi+0x8],cl
6400bd0c:	jne    0x6400bdf9
6400bd12:	mov    ecx,DWORD PTR [esp+0xa4]
6400bd19:	mov    ecx,DWORD PTR [ecx+0x1c]
6400bd1c:	not    ecx
6400bd1e:	test   cl,0x4
6400bd21:	je     0x6400be03
6400bd27:	mov    esi,DWORD PTR [esp+0x10]
6400bd2b:	sub    esi,0x1
6400bd2e:	lea    ecx,[eax+0x1]
6400bd31:	test   ecx,ecx
6400bd33:	mov    DWORD PTR [esp+0x10],esi
6400bd37:	jbe    0x6400be03
6400bd3d:	lea    eax,[eax+esi*1+0x1]
6400bd41:	cmp    eax,DWORD PTR [esp+0xb0]
6400bd48:	ja     0x6400bef1
6400bd4e:	mov    ecx,DWORD PTR [esp+0x4c]
6400bd52:	mov    ebx,DWORD PTR [esp+0x48]
6400bd56:	add    ecx,0x1
6400bd59:	cmp    ebx,ecx
6400bd5b:	mov    DWORD PTR [esp+0x3c],ecx
6400bd5f:	jae    0x6400be03
6400bd65:	mov    edx,DWORD PTR [esp+0xac]
6400bd6c:	mov    eax,esi
6400bd6e:	imul   esi,esi,0xa8
6400bd74:	shl    eax,0x6
6400bd77:	sub    ecx,ebx
6400bd79:	add    eax,edx
6400bd7b:	add    esi,edx
6400bd7d:	add    DWORD PTR [esp+0x10],ecx
6400bd81:	jmp    0x6400bd94
6400bd83:	jmp    0x6400bd90
6400bd85:	lea    esp,[esp+0x0]
6400bd8c:	lea    esp,[esp+0x0]
6400bd90:	mov    eax,DWORD PTR [esp+0x24]
6400bd94:	cmp    DWORD PTR [esp+0xa8],0x0
6400bd9c:	mov    edi,esi
6400bd9e:	jne    0x6400bda2
6400bda0:	mov    edi,eax
6400bda2:	push   0x40
6400bda4:	add    eax,0x40
6400bda7:	push   0x0
6400bda9:	push   edi
6400bdaa:	add    esi,0xa8
6400bdb0:	mov    DWORD PTR [esp+0x30],eax
6400bdb4:	call   0x64015100
6400bdb9:	mov    eax,DWORD PTR [esp+0x44]
6400bdbd:	mov    edx,DWORD PTR [esp+0x38]
6400bdc1:	mov    WORD PTR [edi+0xa],0xffff
6400bdc7:	mov    cl,BYTE PTR [ebx]
6400bdc9:	mov    BYTE PTR [edi+0x30],cl
6400bdcc:	mov    ecx,DWORD PTR [esp+0x3c]
6400bdd0:	and    ecx,eax
6400bdd2:	and    edx,ebp
6400bdd4:	add    esp,0xc
6400bdd7:	add    ebx,0x1
6400bdda:	add    ebp,0x1
6400bddd:	adc    eax,0x0
6400bde0:	cmp    ebx,DWORD PTR [esp+0x3c]
6400bde4:	mov    BYTE PTR [edi+0x8],0x1
6400bde8:	mov    DWORD PTR [edi],edx
6400bdea:	mov    DWORD PTR [edi+0x4],ecx
6400bded:	mov    DWORD PTR [esp+0x38],eax
6400bdf1:	jb     0x6400bd90
6400bdf3:	mov    edx,DWORD PTR [esp+0x28]
6400bdf7:	jmp    0x6400be03
6400bdf9:	cmp    edx,0x4
6400bdfc:	jne    0x6400be03
6400bdfe:	sub    DWORD PTR [esp+0x10],0x1
6400be03:	cmp    edx,0x1
6400be06:	mov    eax,DWORD PTR [esp+0xb4]
6400be0d:	mov    ecx,DWORD PTR [esp+0x10]
6400be11:	mov    DWORD PTR [eax],ecx
6400be13:	mov    ecx,DWORD PTR [esp+0x1c]
6400be17:	mov    eax,DWORD PTR [esp+0xa4]
6400be1e:	mov    DWORD PTR [eax+0x8],ecx
6400be21:	mov    ecx,DWORD PTR [esp+0x20]
6400be25:	mov    DWORD PTR [eax+0xc],ecx
6400be28:	jne    0x6400bec7
6400be2e:	mov    eax,DWORD PTR [eax+0x1c]
6400be31:	test   eax,0x3f8
6400be36:	je     0x6400bec7
6400be3c:	test   al,0x8
6400be3e:	je     0x6400be4f
6400be40:	mov    dl,BYTE PTR [edi+0x3a]
6400be43:	and    dl,0x7
6400be46:	cmp    dl,0x1
6400be49:	je     0x6400ba47
6400be4f:	test   al,0x10
6400be51:	je     0x6400be62
6400be53:	mov    cl,BYTE PTR [edi+0x3a]
6400be56:	and    cl,0x7
6400be59:	cmp    cl,0x2
6400be5c:	je     0x6400ba47
6400be62:	test   al,0x20
6400be64:	je     0x6400be75
6400be66:	mov    dl,BYTE PTR [edi+0x3a]
6400be69:	and    dl,0x7
6400be6c:	cmp    dl,0x3
6400be6f:	je     0x6400ba47
6400be75:	test   al,0x40
6400be77:	je     0x6400be88
6400be79:	mov    cl,BYTE PTR [edi+0x3a]
6400be7c:	and    cl,0x7
6400be7f:	cmp    cl,0x4
6400be82:	je     0x6400ba47
6400be88:	test   al,al
6400be8a:	jns    0x6400be9b
6400be8c:	mov    dl,BYTE PTR [edi+0x3a]
6400be8f:	and    dl,0x7
6400be92:	cmp    dl,0x5
6400be95:	je     0x6400ba47
6400be9b:	test   eax,0x100
6400bea0:	je     0x6400beb1
6400bea2:	mov    cl,BYTE PTR [edi+0x3a]
6400bea5:	and    cl,0x7
6400bea8:	cmp    cl,0x6
6400beab:	je     0x6400ba47
6400beb1:	test   eax,0x200
6400beb6:	je     0x6400bec7
6400beb8:	mov    dl,BYTE PTR [edi+0x3a]
6400bebb:	and    dl,0x7
6400bebe:	cmp    dl,0x7
6400bec1:	je     0x6400ba47
6400bec7:	mov    esi,DWORD PTR [esp+0x10]
6400becb:	mov    ebx,DWORD PTR [esp+0x18]
6400becf:	mov    edi,DWORD PTR [esp+0xa4]
6400bed6:	cmp    DWORD PTR [esp+0x14],0x0
6400bedb:	jg     0x6400ba60
6400bee1:	pop    edi
6400bee2:	pop    esi
6400bee3:	pop    ebp
6400bee4:	mov    eax,0x1
6400bee9:	pop    ebx
6400beea:	add    esp,0x90
6400bef0:	ret    
6400bef1:	pop    edi
6400bef2:	pop    esi
6400bef3:	pop    ebp
6400bef4:	mov    eax,0x2
6400bef9:	pop    ebx
6400befa:	add    esp,0x90
6400bf00:	ret    
6400bf01:	int3   
6400bf02:	int3   
6400bf03:	int3   
6400bf04:	int3   
6400bf05:	int3   
6400bf06:	int3   
6400bf07:	int3   
6400bf08:	int3   
6400bf09:	int3   
6400bf0a:	int3   
6400bf0b:	int3   
6400bf0c:	int3   
6400bf0d:	int3   
6400bf0e:	int3   
6400bf0f:	int3   
6400bf10:	mov    eax,DWORD PTR [esp+0x8]
6400bf14:	mul    DWORD PTR [esp+0xc]
6400bf18:	test   edx,edx
6400bf1a:	ja     0x6400bf21
6400bf1c:	cmp    eax,0xffffffff
6400bf1f:	jbe    0x6400bf27
6400bf21:	mov    eax,0x80070057
6400bf26:	ret    
6400bf27:	mov    ecx,DWORD PTR [esp+0x4]
6400bf2b:	mov    DWORD PTR [ecx],eax
6400bf2d:	xor    eax,eax
6400bf2f:	ret    
6400bf30:	lea    ecx,[eax-0x4]
6400bf33:	cmp    ecx,0x3
6400bf36:	ja     0x6400bf3c
6400bf38:	add    eax,0x3c
6400bf3b:	ret    
6400bf3c:	add    eax,0x30
6400bf3f:	ret    
6400bf40:	mov    cl,BYTE PTR [esp+0x4]
6400bf44:	mov    BYTE PTR [eax],cl
6400bf46:	mov    WORD PTR [eax+0x2],dx
6400bf4a:	ret    0x4
6400bf4d:	int3   
6400bf4e:	int3   
6400bf4f:	int3   
6400bf50:	mov    cl,BYTE PTR [esp+0x4]
6400bf54:	mov    dl,BYTE PTR [esp+0xc]
6400bf58:	mov    BYTE PTR [eax],cl
6400bf5a:	mov    cx,WORD PTR [esp+0x8]
6400bf5f:	mov    BYTE PTR [eax+0x1],dl
6400bf62:	mov    WORD PTR [eax+0x2],cx
6400bf66:	ret    0xc
6400bf69:	int3   
6400bf6a:	int3   
6400bf6b:	int3   
6400bf6c:	int3   
6400bf6d:	int3   
6400bf6e:	int3   
6400bf6f:	int3   
6400bf70:	sub    DWORD PTR [eax+0x14],esi
6400bf73:	jns    0x6400bf78
6400bf75:	xor    eax,eax
6400bf77:	ret    
6400bf78:	lea    edx,[esi-0x1]
6400bf7b:	cmp    edx,0x7
6400bf7e:	ja     0x6400bfc8
6400bf80:	jmp    DWORD PTR [edx*4+0x6400bfd4]
6400bf87:	mov    edx,DWORD PTR [eax+0x10]
6400bf8a:	mov    dl,BYTE PTR [edx]
6400bf8c:	mov    BYTE PTR [ecx],dl
6400bf8e:	add    DWORD PTR [eax+0x10],esi
6400bf91:	mov    eax,0x1
6400bf96:	ret    
6400bf97:	mov    edx,DWORD PTR [eax+0x10]
6400bf9a:	mov    dx,WORD PTR [edx]
6400bf9d:	mov    WORD PTR [ecx],dx
6400bfa0:	add    DWORD PTR [eax+0x10],esi
6400bfa3:	mov    eax,0x1
6400bfa8:	ret    
6400bfa9:	mov    edx,DWORD PTR [eax+0x10]
6400bfac:	mov    edx,DWORD PTR [edx]
6400bfae:	mov    DWORD PTR [ecx],edx
6400bfb0:	add    DWORD PTR [eax+0x10],esi
6400bfb3:	mov    eax,0x1
6400bfb8:	ret    
6400bfb9:	mov    edx,DWORD PTR [eax+0x10]
6400bfbc:	push   edi
6400bfbd:	mov    edi,DWORD PTR [edx]
6400bfbf:	mov    DWORD PTR [ecx],edi
6400bfc1:	mov    edx,DWORD PTR [edx+0x4]
6400bfc4:	mov    DWORD PTR [ecx+0x4],edx
6400bfc7:	pop    edi
6400bfc8:	add    DWORD PTR [eax+0x10],esi
6400bfcb:	mov    eax,0x1
6400bfd0:	ret    
6400bfd1:	lea    ecx,[ecx+0x0]
6400bfd4:	xchg   DWORD PTR [edi-0x40689c00],edi
6400bfda:	add    BYTE PTR [eax+ecx*8-0x41],ah
6400bfde:	add    BYTE PTR [ecx+ebp*4-0x41],ah
6400bfe2:	add    BYTE PTR [eax+ecx*8-0x41],ah
6400bfe6:	add    BYTE PTR [eax+ecx*8-0x41],ah
6400bfea:	add    BYTE PTR [eax+ecx*8-0x41],ah
6400bfee:	add    BYTE PTR [ecx+edi*4-0x41],ah
6400bff2:	add    BYTE PTR [esp+ecx*8-0x34],ah
6400bff6:	int3   
6400bff7:	int3   
6400bff8:	int3   
6400bff9:	int3   
6400bffa:	int3   
6400bffb:	int3   
6400bffc:	int3   
6400bffd:	int3   
6400bffe:	int3   
6400bfff:	int3   
6400c000:	sub    DWORD PTR [ecx+0x14],edi
6400c003:	jns    0x6400c008
6400c005:	xor    eax,eax
6400c007:	ret    
6400c008:	lea    eax,[edi-0x1]
6400c00b:	cmp    eax,0x7
6400c00e:	ja     0x6400c062
6400c010:	jmp    DWORD PTR [eax*4+0x6400c06c]
6400c017:	mov    eax,DWORD PTR [ecx+0x10]
6400c01a:	movsx  eax,BYTE PTR [eax]
6400c01d:	cdq    
6400c01e:	mov    DWORD PTR [esi],eax
6400c020:	mov    DWORD PTR [esi+0x4],edx
6400c023:	add    DWORD PTR [ecx+0x10],edi
6400c026:	mov    eax,0x1
6400c02b:	ret    
6400c02c:	mov    edx,DWORD PTR [ecx+0x10]
6400c02f:	movsx  eax,WORD PTR [edx]
6400c032:	cdq    
6400c033:	mov    DWORD PTR [esi],eax
6400c035:	mov    DWORD PTR [esi+0x4],edx
6400c038:	add    DWORD PTR [ecx+0x10],edi
6400c03b:	mov    eax,0x1
6400c040:	ret    
6400c041:	mov    eax,DWORD PTR [ecx+0x10]
6400c044:	mov    eax,DWORD PTR [eax]
6400c046:	cdq    
6400c047:	mov    DWORD PTR [esi],eax
6400c049:	mov    DWORD PTR [esi+0x4],edx
6400c04c:	add    DWORD PTR [ecx+0x10],edi
6400c04f:	mov    eax,0x1
6400c054:	ret    
6400c055:	mov    eax,DWORD PTR [ecx+0x10]
6400c058:	mov    edx,DWORD PTR [eax]
6400c05a:	mov    DWORD PTR [esi],edx
6400c05c:	mov    eax,DWORD PTR [eax+0x4]
6400c05f:	mov    DWORD PTR [esi+0x4],eax
6400c062:	add    DWORD PTR [ecx+0x10],edi
6400c065:	mov    eax,0x1
6400c06a:	ret    
6400c06b:	nop
6400c06c:	pop    ss
6400c06d:	rol    BYTE PTR [eax],0x64
6400c070:	sub    al,0xc0
6400c072:	add    BYTE PTR [edx+eiz*2-0x40],ah
6400c076:	add    BYTE PTR [ecx+eax*2-0x40],ah
6400c07a:	add    BYTE PTR [edx+eiz*2-0x40],ah
6400c07e:	add    BYTE PTR [edx+eiz*2-0x40],ah
6400c082:	add    BYTE PTR [edx+eiz*2-0x40],ah
6400c086:	add    BYTE PTR [ebp+edx*2-0x40],ah
6400c08a:	add    BYTE PTR [esp+ecx*8-0x34],ah
6400c08e:	int3   
6400c08f:	int3   
6400c090:	mov    eax,DWORD PTR [edi+0x28]
6400c093:	push   ebx
6400c094:	push   ebp
6400c095:	push   esi
6400c096:	mov    esi,edx
6400c098:	mov    ebx,edx
6400c09a:	shr    esi,0x6
6400c09d:	shr    ebx,0x3
6400c0a0:	and    esi,0x3
6400c0a3:	and    ebx,0x7
6400c0a6:	and    edx,0x7
6400c0a9:	test   al,0x2
6400c0ab:	je     0x6400c0b7
6400c0ad:	or     DWORD PTR [edi+0x4],0x2000000
6400c0b4:	add    ebx,0x8
6400c0b7:	cmp    ebx,0x4
6400c0ba:	jne    0x6400c0cf
6400c0bc:	mov    ecx,DWORD PTR [esp+0x10]
6400c0c0:	mov    ebp,DWORD PTR [esp+0x14]
6400c0c4:	mov    BYTE PTR [ecx+ebp*4+0x12],0x6
6400c0c9:	lea    ebp,[ecx+ebp*4+0x13]
6400c0cd:	jmp    0x6400c0e3
6400c0cf:	mov    ebp,DWORD PTR [esp+0x10]
6400c0d3:	mov    ecx,DWORD PTR [esp+0x14]
6400c0d7:	mov    BYTE PTR [ebp+ecx*4+0x12],0x7
6400c0dc:	mov    ecx,DWORD PTR [esp+0x10]
6400c0e0:	add    ebp,0xd
6400c0e3:	cmp    edx,0x5
6400c0e6:	je     0x6400c12a
6400c0e8:	test   al,0x1
6400c0ea:	je     0x6400c0f3
6400c0ec:	or     DWORD PTR [edi+0x4],0x2000000
6400c0f3:	and    al,0x1
6400c0f5:	add    al,al
6400c0f7:	add    al,al
6400c0f9:	add    al,al
6400c0fb:	cmp    DWORD PTR [esp+0x18],0x2
6400c100:	sete   cl
6400c103:	sub    cl,0x1
6400c106:	and    ecx,0x10
6400c109:	add    al,cl
6400c10b:	mov    ecx,DWORD PTR [esp+0x10]
6400c10f:	add    al,dl
6400c111:	cmp    ebx,0x4
6400c114:	mov    BYTE PTR [ebp+0x0],al
6400c117:	je     0x6400c18d
6400c119:	cmp    DWORD PTR [esp+0x18],0x2
6400c11e:	jne    0x6400c165
6400c120:	mov    eax,DWORD PTR [esp+0x14]
6400c124:	mov    BYTE PTR [ecx+eax*4+0x13],bl
6400c128:	jmp    0x6400c170
6400c12a:	cmp    DWORD PTR [esp+0x1c],0x0
6400c12f:	je     0x6400c153
6400c131:	test   al,0x1
6400c133:	je     0x6400c13c
6400c135:	or     DWORD PTR [edi+0x4],0x2000000
6400c13c:	and    al,0x1
6400c13e:	add    al,al
6400c140:	add    al,al
6400c142:	add    al,al
6400c144:	cmp    DWORD PTR [esp+0x18],0x2
6400c149:	jne    0x6400c14f
6400c14b:	add    al,0x5
6400c14d:	jmp    0x6400c111
6400c14f:	add    al,0x15
6400c151:	jmp    0x6400c111
6400c153:	cmp    ebx,0x4
6400c156:	jne    0x6400c119
6400c158:	mov    edx,DWORD PTR [esp+0x14]
6400c15c:	pop    esi
6400c15d:	pop    ebp
6400c15e:	mov    BYTE PTR [ecx+edx*4+0x12],0x5
6400c163:	pop    ebx
6400c164:	ret    
6400c165:	mov    edx,DWORD PTR [esp+0x14]
6400c169:	add    bl,0x10
6400c16c:	mov    BYTE PTR [ecx+edx*4+0x13],bl
6400c170:	test   esi,esi
6400c172:	je     0x6400c188
6400c174:	mov    ecx,esi
6400c176:	mov    eax,0x1
6400c17b:	shl    eax,cl
6400c17d:	mov    ecx,DWORD PTR [esp+0x10]
6400c181:	pop    esi
6400c182:	pop    ebp
6400c183:	mov    BYTE PTR [ecx+0xe],al
6400c186:	pop    ebx
6400c187:	ret    
6400c188:	xor    eax,eax
6400c18a:	mov    BYTE PTR [ecx+0xe],al
6400c18d:	pop    esi
6400c18e:	pop    ebp
6400c18f:	pop    ebx
6400c190:	ret    
6400c191:	int3   
6400c192:	int3   
6400c193:	int3   
6400c194:	int3   
6400c195:	int3   
6400c196:	int3   
6400c197:	int3   
6400c198:	int3   
6400c199:	int3   
6400c19a:	int3   
6400c19b:	int3   
6400c19c:	int3   
6400c19d:	int3   
6400c19e:	int3   
6400c19f:	int3   
6400c1a0:	mov    edx,DWORD PTR [esp+0x20]
6400c1a4:	push   ebx
6400c1a5:	push   ebp
6400c1a6:	mov    ebp,DWORD PTR [esp+0x1c]
6400c1aa:	push   esi
6400c1ab:	xor    esi,esi
6400c1ad:	cmp    edx,0x3
6400c1b0:	push   edi
6400c1b1:	mov    edi,DWORD PTR [esp+0x1c]
6400c1b5:	mov    ebx,ecx
6400c1b7:	mov    ecx,DWORD PTR [ebp+0x28]
6400c1ba:	mov    DWORD PTR [esp+0x24],esi
6400c1be:	jne    0x6400c3d9
6400c1c4:	mov    edx,DWORD PTR [esp+0x18]
6400c1c8:	mov    eax,DWORD PTR [esp+0x20]
6400c1cc:	mov    BYTE PTR [edx+eax*4+0x12],0x1
6400c1d1:	lea    eax,[edx+eax*4+0x14]
6400c1d5:	movzx  edx,WORD PTR [eax]
6400c1d8:	lea    esi,[edi-0xf]
6400c1db:	cmp    esi,0x4c
6400c1de:	mov    DWORD PTR [esp+0x30],eax
6400c1e2:	ja     0x6400c42b
6400c1e8:	movzx  eax,BYTE PTR [esi+0x6400c6c0]
6400c1ef:	jmp    DWORD PTR [eax*4+0x6400c68c]
6400c1f6:	mov    eax,DWORD PTR [esp+0x28]
6400c1fa:	sub    eax,0x0
6400c1fd:	je     0x6400c270
6400c1ff:	sub    eax,0x1
6400c202:	je     0x6400c231
6400c204:	sub    eax,0x1
6400c207:	jne    0x6400c253
6400c209:	cmp    edi,0x1c
6400c20c:	mov    eax,0x2000000
6400c211:	jne    0x6400c216
6400c213:	or     DWORD PTR [ebp+0x4],eax
6400c216:	test   DWORD PTR [esp+0x34],eax
6400c21a:	je     0x6400c21f
6400c21c:	or     DWORD PTR [ebp+0x4],eax
6400c21f:	test   cl,0x1
6400c222:	je     0x6400c22a
6400c224:	or     DWORD PTR [ebp+0x4],eax
6400c227:	add    ebx,0x8
6400c22a:	mov    edx,0x40
6400c22f:	jmp    0x6400c253
6400c231:	or     DWORD PTR [ebp+0x4],0x2000
6400c238:	test   cl,0x1
6400c23b:	mov    eax,DWORD PTR [ebp+0x4]
6400c23e:	je     0x6400c24b
6400c240:	or     eax,0x2000000
6400c245:	mov    DWORD PTR [ebp+0x4],eax
6400c248:	add    ebx,0x8
6400c24b:	mov    edx,0x20
6400c250:	add    ebx,0x10
6400c253:	mov    eax,DWORD PTR [esp+0x30]
6400c257:	mov    ecx,DWORD PTR [esp+0x18]
6400c25b:	pop    edi
6400c25c:	mov    WORD PTR [eax],dx
6400c25f:	mov    edx,DWORD PTR [esp+0x1c]
6400c263:	pop    esi
6400c264:	pop    ebp
6400c265:	mov    BYTE PTR [ecx+edx*4+0x13],bl
6400c269:	mov    eax,0x1
6400c26e:	pop    ebx
6400c26f:	ret    
6400c270:	or     DWORD PTR [ebp+0x4],0x2000
6400c277:	test   cl,0x1
6400c27a:	mov    eax,DWORD PTR [ebp+0x4]
6400c27d:	je     0x6400c28a
6400c27f:	or     eax,0x2000000
6400c284:	mov    DWORD PTR [ebp+0x4],eax
6400c287:	add    ebx,0x8
6400c28a:	mov    edx,0x10
6400c28f:	add    ebx,0x20
6400c292:	jmp    0x6400c253
6400c294:	test   cl,0x1
6400c297:	mov    eax,0x2000000
6400c29c:	je     0x6400c2a4
6400c29e:	or     DWORD PTR [ebp+0x4],eax
6400c2a1:	add    ebx,0x8
6400c2a4:	mov    edx,DWORD PTR [esp+0x14]
6400c2a8:	cmp    DWORD PTR [edx+0x18],0x2
6400c2ac:	jne    0x6400c2c4
6400c2ae:	mov    edx,DWORD PTR [esp+0x34]
6400c2b2:	and    edx,0x3000000
6400c2b8:	cmp    edx,0x1000000
6400c2be:	je     0x6400c3cf
6400c2c4:	test   cl,0x8
6400c2c7:	je     0x6400c24b
6400c2c9:	or     DWORD PTR [ebp+0x4],eax
6400c2cc:	mov    edx,0x40
6400c2d1:	jmp    0x6400c253
6400c2d3:	test   cl,0x1
6400c2d6:	je     0x6400c2e2
6400c2d8:	or     DWORD PTR [ebp+0x4],0x2000000
6400c2df:	add    ebx,0x8
6400c2e2:	test   DWORD PTR [ebp+0x0],0x2000
6400c2e9:	je     0x6400c24b
6400c2ef:	or     DWORD PTR [ebp+0x4],0x2000
6400c2f6:	mov    edx,0x10
6400c2fb:	add    ebx,0x20
6400c2fe:	jmp    0x6400c253
6400c303:	test   cl,0x1
6400c306:	je     0x6400c312
6400c308:	or     DWORD PTR [ebp+0x4],0x2000000
6400c30f:	add    ebx,0x8
6400c312:	add    ebx,0x20
6400c315:	jmp    0x6400c253
6400c31a:	cmp    DWORD PTR [ebp+0x18],0x1
6400c31e:	jne    0x6400c339
6400c320:	or     DWORD PTR [ebp+0x4],0x2000000
6400c327:	and    ecx,0x1
6400c32a:	lea    eax,[ebx+ecx*8]
6400c32d:	call   0x6400bf30
6400c332:	mov    ebx,eax
6400c334:	jmp    0x6400c253
6400c339:	add    ebx,0x30
6400c33c:	jmp    0x6400c253
6400c341:	mov    edx,0x40
6400c346:	add    ebx,0x53
6400c349:	jmp    0x6400c253
6400c34e:	test   cl,0x1
6400c351:	je     0x6400c35d
6400c353:	or     DWORD PTR [ebp+0x4],0x2000000
6400c35a:	add    ebx,0x8
6400c35d:	mov    edx,0x80
6400c362:	add    ebx,0x5b
6400c365:	jmp    0x6400c253
6400c36a:	test   cl,0x1
6400c36d:	je     0x6400c24b
6400c373:	or     DWORD PTR [ebp+0x4],0x2000000
6400c37a:	jmp    0x6400c248
6400c37f:	test   cl,0x1
6400c382:	je     0x6400c387
6400c384:	add    ebx,0x8
6400c387:	add    ebx,0x6b
6400c38a:	jmp    0x6400c253
6400c38f:	test   cl,0x1
6400c392:	je     0x6400c397
6400c394:	add    ebx,0x8
6400c397:	test   cl,0x10
6400c39a:	je     0x6400c35d
6400c39c:	mov    edx,0x100
6400c3a1:	add    ebx,0x6b
6400c3a4:	jmp    0x6400c253
6400c3a9:	test   cl,0x1
6400c3ac:	je     0x6400c35d
6400c3ae:	add    ebx,0x8
6400c3b1:	mov    edx,0x80
6400c3b6:	add    ebx,0x5b
6400c3b9:	jmp    0x6400c253
6400c3be:	test   cl,0x1
6400c3c1:	je     0x6400c3c6
6400c3c3:	add    ebx,0x8
6400c3c6:	test   cl,0x8
6400c3c9:	je     0x6400c24b
6400c3cf:	mov    edx,0x40
6400c3d4:	jmp    0x6400c253
6400c3d9:	or     DWORD PTR [ebp+0x4],0x4000
6400c3e0:	test   eax,eax
6400c3e2:	je     0x6400c3f0
6400c3e4:	test   BYTE PTR [ebp+0x0],0x10
6400c3e8:	je     0x6400c3f0
6400c3ea:	mov    DWORD PTR [eax],0x1
6400c3f0:	cmp    DWORD PTR [esp+0x2c],esi
6400c3f4:	jne    0x6400c505
6400c3fa:	test   edx,edx
6400c3fc:	jne    0x6400c432
6400c3fe:	cmp    ebx,0x6
6400c401:	jne    0x6400c432
6400c403:	mov    eax,DWORD PTR [esp+0x18]
6400c407:	mov    ecx,DWORD PTR [esp+0x20]
6400c40b:	mov    BYTE PTR [eax+ecx*4+0x12],0x5
6400c410:	mov    ecx,DWORD PTR [esp+0x14]
6400c414:	lea    esi,[eax+0x28]
6400c417:	lea    edi,[edx+0x2]
6400c41a:	mov    BYTE PTR [eax+0xf],0x10
6400c41e:	call   0x6400c000
6400c423:	test   eax,eax
6400c425:	jne    0x6400c4ce
6400c42b:	pop    edi
6400c42c:	pop    esi
6400c42d:	pop    ebp
6400c42e:	xor    eax,eax
6400c430:	pop    ebx
6400c431:	ret    
6400c432:	cmp    ebx,0x4
6400c435:	jae    0x6400c459
6400c437:	mov    esi,DWORD PTR [esp+0x18]
6400c43b:	mov    edi,DWORD PTR [esp+0x20]
6400c43f:	mov    BYTE PTR [esi+edi*4+0x12],0x7
6400c444:	mov    al,BYTE PTR [ebx+0x64048cb8]
6400c44a:	mov    BYTE PTR [esi+0xd],al
6400c44d:	mov    cl,BYTE PTR [ebx+0x64048cc0]
6400c453:	mov    BYTE PTR [esi+edi*4+0x13],cl
6400c457:	jmp    0x6400c470
6400c459:	mov    edi,DWORD PTR [esp+0x18]
6400c45d:	mov    esi,DWORD PTR [esp+0x20]
6400c461:	mov    BYTE PTR [edi+esi*4+0x12],0x6
6400c466:	mov    al,BYTE PTR [ebx+0x64048cb8]
6400c46c:	mov    BYTE PTR [edi+esi*4+0x13],al
6400c470:	cmp    edx,0x1
6400c473:	jne    0x6400c494
6400c475:	mov    eax,DWORD PTR [esp+0x18]
6400c479:	mov    ecx,DWORD PTR [esp+0x14]
6400c47d:	lea    esi,[eax+0x28]
6400c480:	mov    edi,edx
6400c482:	mov    BYTE PTR [eax+0xf],0x8
6400c486:	call   0x6400c000
6400c48b:	test   eax,eax
6400c48d:	jne    0x6400c4b7
6400c48f:	pop    edi
6400c490:	pop    esi
6400c491:	pop    ebp
6400c492:	pop    ebx
6400c493:	ret    
6400c494:	cmp    edx,0x2
6400c497:	jne    0x6400c4bb
6400c499:	mov    eax,DWORD PTR [esp+0x18]
6400c49d:	mov    ecx,DWORD PTR [esp+0x14]
6400c4a1:	lea    esi,[eax+0x28]
6400c4a4:	mov    edi,edx
6400c4a6:	mov    BYTE PTR [eax+0xf],0x10
6400c4aa:	call   0x6400c000
6400c4af:	test   eax,eax
6400c4b1:	je     0x6400c42b
6400c4b7:	mov    edx,DWORD PTR [esp+0x30]
6400c4bb:	cmp    ebx,0x2
6400c4be:	je     0x6400c4f3
6400c4c0:	cmp    ebx,0x3
6400c4c3:	je     0x6400c4f3
6400c4c5:	cmp    ebx,0x6
6400c4c8:	jne    0x6400c4ce
6400c4ca:	test   edx,edx
6400c4cc:	jne    0x6400c4f3
6400c4ce:	mov    ecx,DWORD PTR [esp+0x18]
6400c4d2:	mov    edx,DWORD PTR [esp+0x14]
6400c4d6:	mov    eax,DWORD PTR [edx+0x18]
6400c4d9:	push   ecx
6400c4da:	push   eax
6400c4db:	push   ebp
6400c4dc:	push   0x200
6400c4e1:	call   0x6400dd20
6400c4e6:	add    esp,0x10
6400c4e9:	pop    edi
6400c4ea:	pop    esi
6400c4eb:	pop    ebp
6400c4ec:	mov    eax,0x1
6400c4f1:	pop    ebx
6400c4f2:	ret    
6400c4f3:	mov    ecx,DWORD PTR [esp+0x18]
6400c4f7:	mov    edx,DWORD PTR [esp+0x14]
6400c4fb:	mov    eax,DWORD PTR [edx+0x18]
6400c4fe:	push   ecx
6400c4ff:	push   eax
6400c500:	jmp    0x6400c672
6400c505:	test   edx,edx
6400c507:	jne    0x6400c55a
6400c509:	cmp    ebx,0x5
6400c50c:	jne    0x6400c55a
6400c50e:	mov    ebx,DWORD PTR [esp+0x18]
6400c512:	mov    ecx,DWORD PTR [esp+0x14]
6400c516:	lea    esi,[ebx+0x28]
6400c519:	lea    edi,[edx+0x4]
6400c51c:	mov    BYTE PTR [ebx+0xf],0x20
6400c520:	call   0x6400c000
6400c525:	test   eax,eax
6400c527:	je     0x6400c42b
6400c52d:	cmp    DWORD PTR [ecx+0x18],0x2
6400c531:	jne    0x6400c54c
6400c533:	mov    eax,DWORD PTR [esp+0x20]
6400c537:	mov    BYTE PTR [ebx+eax*4+0x12],0x6
6400c53c:	mov    BYTE PTR [ebx+eax*4+0x13],0x4a
6400c541:	or     WORD PTR [ebx+0xa],0x80
6400c547:	jmp    0x6400c623
6400c54c:	mov    ecx,DWORD PTR [esp+0x20]
6400c550:	mov    BYTE PTR [ebx+ecx*4+0x12],0x5
6400c555:	jmp    0x6400c623
6400c55a:	cmp    ebx,0x4
6400c55d:	jne    0x6400c5a1
6400c55f:	mov    eax,DWORD PTR [esp+0x14]
6400c563:	lea    esi,[ebx-0x3]
6400c566:	lea    ecx,[esp+0x24]
6400c56a:	call   0x6400bf70
6400c56f:	test   eax,eax
6400c571:	je     0x6400c42b
6400c577:	mov    edx,DWORD PTR [esp+0x30]
6400c57b:	mov    eax,DWORD PTR [esp+0x2c]
6400c57f:	mov    ecx,DWORD PTR [esp+0x20]
6400c583:	mov    esi,DWORD PTR [esp+0x24]
6400c587:	push   edx
6400c588:	mov    edx,DWORD PTR [esp+0x1c]
6400c58c:	push   eax
6400c58d:	push   ecx
6400c58e:	push   edx
6400c58f:	mov    edx,esi
6400c591:	mov    edi,ebp
6400c593:	call   0x6400c090
6400c598:	mov    edx,DWORD PTR [esp+0x40]
6400c59c:	add    esp,0x10
6400c59f:	jmp    0x6400c5cb
6400c5a1:	test   cl,0x1
6400c5a4:	mov    edi,DWORD PTR [esp+0x18]
6400c5a8:	mov    eax,DWORD PTR [esp+0x20]
6400c5ac:	mov    BYTE PTR [edi+eax*4+0x12],0x6
6400c5b1:	je     0x6400c5bd
6400c5b3:	or     DWORD PTR [ebp+0x4],0x2000000
6400c5ba:	add    ebx,0x8
6400c5bd:	cmp    DWORD PTR [esp+0x2c],0x2
6400c5c2:	je     0x6400c5c7
6400c5c4:	add    bl,0x10
6400c5c7:	mov    BYTE PTR [edi+eax*4+0x13],bl
6400c5cb:	cmp    edx,0x1
6400c5ce:	jne    0x6400c5ef
6400c5d0:	mov    eax,DWORD PTR [esp+0x18]
6400c5d4:	mov    ecx,DWORD PTR [esp+0x14]
6400c5d8:	lea    esi,[eax+0x28]
6400c5db:	mov    edi,edx
6400c5dd:	mov    BYTE PTR [eax+0xf],0x8
6400c5e1:	call   0x6400c000
6400c5e6:	test   eax,eax
6400c5e8:	jne    0x6400c61f
6400c5ea:	pop    edi
6400c5eb:	pop    esi
6400c5ec:	pop    ebp
6400c5ed:	pop    ebx
6400c5ee:	ret    
6400c5ef:	cmp    edx,0x2
6400c5f2:	je     0x6400c5fd
6400c5f4:	mov    eax,esi
6400c5f6:	and    eax,0x7
6400c5f9:	cmp    al,0x5
6400c5fb:	jne    0x6400c61f
6400c5fd:	mov    ebx,DWORD PTR [esp+0x18]
6400c601:	mov    ecx,DWORD PTR [esp+0x14]
6400c605:	lea    esi,[ebx+0x28]
6400c608:	mov    edi,0x4
6400c60d:	mov    BYTE PTR [ebx+0xf],0x20
6400c611:	call   0x6400c000
6400c616:	test   eax,eax
6400c618:	jne    0x6400c623
6400c61a:	pop    edi
6400c61b:	pop    esi
6400c61c:	pop    ebp
6400c61d:	pop    ebx
6400c61e:	ret    
6400c61f:	mov    ebx,DWORD PTR [esp+0x18]
6400c623:	mov    al,BYTE PTR [ebx+0xd]
6400c626:	cmp    al,0xff
6400c628:	mov    ecx,DWORD PTR [esp+0x20]
6400c62c:	movzx  ecx,BYTE PTR [ebx+ecx*4+0x13]
6400c631:	je     0x6400c638
6400c633:	movzx  ecx,al
6400c636:	jmp    0x6400c63e
6400c638:	cmp    BYTE PTR [ebx+0xe],0x2
6400c63c:	jae    0x6400c648
6400c63e:	cmp    ecx,0x15
6400c641:	je     0x6400c669
6400c643:	cmp    ecx,0x14
6400c646:	je     0x6400c669
6400c648:	mov    edx,DWORD PTR [esp+0x14]
6400c64c:	mov    eax,DWORD PTR [edx+0x18]
6400c64f:	push   ebx
6400c650:	push   eax
6400c651:	push   ebp
6400c652:	push   0x200
6400c657:	call   0x6400dd20
6400c65c:	add    esp,0x10
6400c65f:	pop    edi
6400c660:	pop    esi
6400c661:	pop    ebp
6400c662:	mov    eax,0x1
6400c667:	pop    ebx
6400c668:	ret    
6400c669:	mov    ecx,DWORD PTR [esp+0x14]
6400c66d:	mov    edx,DWORD PTR [ecx+0x18]
6400c670:	push   ebx
6400c671:	push   edx
6400c672:	push   ebp
6400c673:	push   0x100
6400c678:	call   0x6400dd20
6400c67d:	add    esp,0x10
6400c680:	pop    edi
6400c681:	pop    esi
6400c682:	pop    ebp
6400c683:	mov    eax,0x1
6400c688:	pop    ebx
6400c689:	ret    
6400c68a:	mov    edi,edi
6400c68c:	sbb    al,bl
6400c68e:	add    BYTE PTR [ebx+eax*1-0x3d],ah
6400c692:	add    BYTE PTR [esi+esi*8-0x3f],ah
6400c696:	add    BYTE PTR [esp+edx*4-0x3e],ah
6400c69a:	add    BYTE PTR [ebx+edx*8-0x3e],ah
6400c69e:	add    BYTE PTR [edx+ebp*2-0x3d],ah
6400c6a2:	add    BYTE PTR [ecx+eax*2-0x3d],ah
6400c6a6:	add    BYTE PTR [esi+ecx*2-0x3d],ah
6400c6aa:	add    BYTE PTR [esi+edi*4-0x3d],ah
6400c6ae:	add    BYTE PTR [ecx+ebp*4-0x3d],ah
6400c6b2:	add    BYTE PTR [edi+edi*2-0x3d],ah
6400c6b6:	add    BYTE PTR [edi+ecx*4-0x3d],ah
6400c6ba:	add    BYTE PTR [ebx+ebp*1-0x3c],ah
6400c6be:	add    BYTE PTR [eax+eax*1+0x1],ah
6400c6c2:	add    al,BYTE PTR [ebx]
6400c6c4:	add    al,0xc
6400c6c6:	or     al,0xc
6400c6c8:	or     al,0x5
6400c6ca:	add    eax,0xc020303
6400c6cf:	or     al,0xc
6400c6d1:	or     al,0xc
6400c6d3:	or     al,0xc
6400c6d5:	or     al,0xc
6400c6d7:	or     al,0xc
6400c6d9:	or     al,0xc
6400c6db:	or     al,0xc
6400c6dd:	or     al,0xc
6400c6df:	or     al,0xc
6400c6e1:	or     al,0xc
6400c6e3:	or     al,0xc
6400c6e5:	or     al,0xc
6400c6e7:	or     al,0xc
6400c6e9:	or     al,0xc
6400c6eb:	or     al,0xc
6400c6ed:	or     al,0xc
6400c6ef:	or     al,0xc
6400c6f1:	or     al,0xc
6400c6f3:	push   es
6400c6f4:	push   es
6400c6f5:	or     al,0xc
6400c6f7:	pop    es
6400c6f8:	pop    es
6400c6f9:	pop    es
6400c6fa:	pop    es
6400c6fb:	or     al,0x5
6400c6fd:	or     BYTE PTR [eax],cl
6400c6ff:	or     al,0x8
6400c701:	or     DWORD PTR [esp+ecx*1],ecx
6400c704:	or     al,0xc
6400c706:	or     al,0xa
6400c708:	or     al,0xc
6400c70a:	or     ecx,DWORD PTR [ebx]
6400c70c:	or     esp,ecx
6400c70e:	int3   
6400c70f:	int3   
6400c710:	sub    esp,0xc
6400c713:	mov    ecx,DWORD PTR [esp+0x18]
6400c717:	mov    edx,DWORD PTR [ecx+0x8]
6400c71a:	mov    ecx,DWORD PTR [esp+0x14]
6400c71e:	push   ebx
6400c71f:	push   ebp
6400c720:	mov    ebp,DWORD PTR [esp+0x30]
6400c724:	mov    eax,DWORD PTR [ebp+0x24]
6400c727:	push   esi
6400c728:	mov    esi,DWORD PTR [esp+0x30]
6400c72c:	mov    DWORD PTR [esp+0x34],edx
6400c730:	mov    edx,DWORD PTR [esp+0x2c]
6400c734:	lea    ebx,[ecx+edx*4+0x12]
6400c738:	push   edi
6400c739:	mov    edi,esi
6400c73b:	mov    edx,esi
6400c73d:	and    esi,0x7
6400c740:	mov    DWORD PTR [esp+0x34],esi
6400c744:	mov    esi,DWORD PTR [esp+0x2c]
6400c748:	shr    edi,0x6
6400c74b:	shr    edx,0x3
6400c74e:	mov    DWORD PTR [esp+0x18],eax
6400c752:	mov    eax,DWORD PTR [ebp+0x28]
6400c755:	and    edx,0x7
6400c758:	add    esi,0xffffffec
6400c75b:	xor    ecx,ecx
6400c75d:	and    edi,0x3
6400c760:	cmp    esi,0x48
6400c763:	mov    DWORD PTR [esp+0x14],eax
6400c767:	mov    DWORD PTR [esp+0x10],edx
6400c76b:	ja     0x6400c8cc
6400c771:	movzx  esi,BYTE PTR [esi+0x6400d5e0]
6400c778:	jmp    DWORD PTR [esi*4+0x6400d5ac]
6400c77f:	mov    eax,DWORD PTR [esp+0x44]
6400c783:	test   eax,eax
6400c785:	je     0x6400c793
6400c787:	test   BYTE PTR [ebp+0x0],0x10
6400c78b:	je     0x6400c793
6400c78d:	mov    DWORD PTR [eax],0x1
6400c793:	cmp    DWORD PTR [esp+0x3c],0x2
6400c798:	jne    0x6400c7b9
6400c79a:	or     DWORD PTR [ebp+0x4],0x2000000
6400c7a1:	mov    ecx,0x6
6400c7a6:	jmp    0x6400c845
6400c7ab:	cmp    DWORD PTR [esp+0x3c],0x2
6400c7b0:	jne    0x6400c7fb
6400c7b2:	or     DWORD PTR [ebp+0x4],0x2000000
6400c7b9:	mov    ecx,0x4
6400c7be:	jmp    0x6400c845
6400c7c3:	mov    eax,DWORD PTR [esp+0x3c]
6400c7c7:	sub    eax,0x0
6400c7ca:	je     0x6400c802
6400c7cc:	sub    eax,0x1
6400c7cf:	je     0x6400c7f4
6400c7d1:	sub    eax,0x1
6400c7d4:	jne    0x6400c845
6400c7d6:	mov    eax,DWORD PTR [esp+0x38]
6400c7da:	and    eax,0x3000000
6400c7df:	cmp    eax,0x3000000
6400c7e4:	jne    0x6400c7b9
6400c7e6:	or     DWORD PTR [ebp+0x4],0x2000000
6400c7ed:	mov    ecx,0x4
6400c7f2:	jmp    0x6400c845
6400c7f4:	or     DWORD PTR [ebp+0x4],0x2000
6400c7fb:	mov    ecx,0x3
6400c800:	jmp    0x6400c845
6400c802:	or     DWORD PTR [ebp+0x4],0x2000
6400c809:	mov    ecx,0x2
6400c80e:	jmp    0x6400c845
6400c810:	mov    edx,DWORD PTR [esp+0x20]
6400c814:	xor    ecx,ecx
6400c816:	cmp    DWORD PTR [edx+0x18],0x2
6400c81a:	sete   cl
6400c81d:	add    ecx,0x3
6400c820:	jmp    0x6400c845
6400c822:	cmp    edi,0x3
6400c825:	jne    0x6400c862
6400c827:	lea    eax,[edi-0x2]
6400c82a:	pop    edi
6400c82b:	pop    esi
6400c82c:	pop    ebp
6400c82d:	pop    ebx
6400c82e:	add    esp,0xc
6400c831:	ret    
6400c832:	mov    ecx,0x5
6400c837:	jmp    0x6400c845
6400c839:	movzx  ecx,al
6400c83c:	and    ecx,0x10
6400c83f:	or     ecx,0x60
6400c842:	shr    ecx,0x4
6400c845:	cmp    edi,0x3
6400c848:	jne    0x6400c862
6400c84a:	mov    eax,DWORD PTR [esp+0x44]
6400c84e:	test   eax,eax
6400c850:	je     0x6400c858
6400c852:	mov    DWORD PTR [eax],0x0
6400c858:	xor    eax,eax
6400c85a:	pop    edi
6400c85b:	pop    esi
6400c85c:	pop    ebp
6400c85d:	pop    ebx
6400c85e:	add    esp,0xc
6400c861:	ret    
6400c862:	mov    ax,WORD PTR [ecx*2+0x64048ca8]
6400c86a:	mov    ecx,DWORD PTR [esp+0x38]
6400c86e:	mov    edx,DWORD PTR [esp+0x40]
6400c872:	mov    esi,DWORD PTR [esp+0x24]
6400c876:	push   ecx
6400c877:	mov    ecx,DWORD PTR [esp+0x34]
6400c87b:	push   edi
6400c87c:	push   edx
6400c87d:	mov    edx,DWORD PTR [esp+0x38]
6400c881:	mov    WORD PTR [ebx+0x2],ax
6400c885:	mov    eax,DWORD PTR [esp+0x48]
6400c889:	push   eax
6400c88a:	mov    eax,DWORD PTR [esp+0x30]
6400c88e:	push   ebp
6400c88f:	push   ecx
6400c890:	mov    ecx,DWORD PTR [esp+0x4c]
6400c894:	push   edx
6400c895:	push   esi
6400c896:	push   eax
6400c897:	mov    eax,DWORD PTR [esp+0x68]
6400c89b:	call   0x6400c1a0
6400c8a0:	mov    cl,BYTE PTR [ebx]
6400c8a2:	add    esp,0x24
6400c8a5:	cmp    cl,0x1
6400c8a8:	je     0x6400c8b4
6400c8aa:	cmp    cl,0x6
6400c8ad:	je     0x6400c8b4
6400c8af:	cmp    cl,0x7
6400c8b2:	jne    0x6400c85a
6400c8b4:	movzx  ecx,BYTE PTR [ebx+0x1]
6400c8b8:	mov    dx,WORD PTR [ecx*2+0x64048b90]
6400c8c0:	or     WORD PTR [esi+0x3c],dx
6400c8c4:	pop    edi
6400c8c5:	pop    esi
6400c8c6:	pop    ebp
6400c8c7:	pop    ebx
6400c8c8:	add    esp,0xc
6400c8cb:	ret    
6400c8cc:	mov    esi,DWORD PTR [esp+0x2c]
6400c8d0:	lea    ecx,[esi-0xf]
6400c8d3:	cmp    ecx,0x4c
6400c8d6:	ja     0x6400ca46
6400c8dc:	movzx  ecx,BYTE PTR [ecx+0x6400d66c]
6400c8e3:	mov    esi,0x2000
6400c8e8:	jmp    DWORD PTR [ecx*4+0x6400d62c]
6400c8ef:	or     DWORD PTR [ebp+0x4],esi
6400c8f2:	mov    ecx,DWORD PTR [esp+0x3c]
6400c8f6:	cmp    ecx,0x1
6400c8f9:	mov    eax,DWORD PTR [ebp+0x4]
6400c8fc:	jne    0x6400c910
6400c8fe:	mov    eax,0x3
6400c903:	mov    ax,WORD PTR [eax*2+0x64048ca8]
6400c90b:	jmp    0x6400c86a
6400c910:	cmp    ecx,0x2
6400c913:	jne    0x6400c939
6400c915:	test   DWORD PTR [esp+0x38],0x1000000
6400c91d:	jne    0x6400c927
6400c91f:	or     eax,0x2000000
6400c924:	mov    DWORD PTR [ebp+0x4],eax
6400c927:	mov    eax,0x4
6400c92c:	mov    ax,WORD PTR [eax*2+0x64048ca8]
6400c934:	jmp    0x6400c86a
6400c939:	cmp    DWORD PTR [esp+0x2c],0x10
6400c93e:	je     0x6400c943
6400c940:	or     DWORD PTR [ebp+0x4],esi
6400c943:	mov    eax,0x2
6400c948:	mov    ax,WORD PTR [eax*2+0x64048ca8]
6400c950:	jmp    0x6400c86a
6400c955:	cmp    DWORD PTR [esp+0x3c],0x2
6400c95a:	jne    0x6400c8fe
6400c95c:	mov    edx,DWORD PTR [esp+0x38]
6400c960:	and    edx,0x3000000
6400c966:	cmp    edx,0x3000000
6400c96c:	mov    eax,0x4
6400c971:	jne    0x6400ca35
6400c977:	or     DWORD PTR [ebp+0x4],0x2000000
6400c97e:	mov    ax,WORD PTR [eax*2+0x64048ca8]
6400c986:	jmp    0x6400c86a
6400c98b:	test   DWORD PTR [ebp+0x0],esi
6400c98e:	je     0x6400c8fe
6400c994:	or     DWORD PTR [ebp+0x4],esi
6400c997:	mov    eax,0x2
6400c99c:	mov    ax,WORD PTR [eax*2+0x64048ca8]
6400c9a4:	jmp    0x6400c86a
6400c9a9:	and    al,0x8
6400c9ab:	neg    al
6400c9ad:	sbb    eax,eax
6400c9af:	neg    eax
6400c9b1:	add    eax,0x3
6400c9b4:	mov    ax,WORD PTR [eax*2+0x64048ca8]
6400c9bc:	jmp    0x6400c86a
6400c9c1:	and    al,0x10
6400c9c3:	neg    al
6400c9c5:	sbb    eax,eax
6400c9c7:	and    eax,0x3
6400c9ca:	add    eax,0x4
6400c9cd:	mov    ax,WORD PTR [eax*2+0x64048ca8]
6400c9d5:	jmp    0x6400c86a
6400c9da:	movzx  eax,al
6400c9dd:	and    eax,0x10
6400c9e0:	or     eax,0x60
6400c9e3:	shr    eax,0x4
6400c9e6:	mov    ax,WORD PTR [eax*2+0x64048ca8]
6400c9ee:	jmp    0x6400c86a
6400c9f3:	movzx  eax,al
6400c9f6:	and    eax,0x10
6400c9f9:	or     eax,0x20
6400c9fc:	shr    eax,0x3
6400c9ff:	mov    ax,WORD PTR [eax*2+0x64048ca8]
6400ca07:	jmp    0x6400c86a
6400ca0c:	mov    eax,0x1
6400ca11:	mov    ax,WORD PTR [eax*2+0x64048ca8]
6400ca19:	jmp    0x6400c86a
6400ca1e:	mov    eax,0x6
6400ca23:	mov    ax,WORD PTR [eax*2+0x64048ca8]
6400ca2b:	jmp    0x6400c86a
6400ca30:	mov    eax,0x7
6400ca35:	mov    ax,WORD PTR [eax*2+0x64048ca8]
6400ca3d:	jmp    0x6400c86a
6400ca42:	mov    esi,DWORD PTR [esp+0x2c]
6400ca46:	lea    ecx,[esi-0x1]
6400ca49:	cmp    ecx,0x57
6400ca4c:	ja     0x6400c858
6400ca52:	movzx  ecx,BYTE PTR [ecx+0x6400d78c]
6400ca59:	jmp    DWORD PTR [ecx*4+0x6400d6bc]
6400ca60:	push   0x2
6400ca62:	mov    edx,0x8
6400ca67:	mov    eax,ebx
6400ca69:	call   0x6400bf40
6400ca6e:	mov    ecx,DWORD PTR [esp+0x24]
6400ca72:	add    ecx,0x30
6400ca75:	mov    esi,0x1
6400ca7a:	mov    eax,DWORD PTR [esp+0x20]
6400ca7e:	call   0x6400bf70
6400ca83:	test   eax,eax
6400ca85:	jne    0x6400cc6d
6400ca8b:	pop    edi
6400ca8c:	pop    esi
6400ca8d:	pop    ebp
6400ca8e:	pop    ebx
6400ca8f:	add    esp,0xc
6400ca92:	ret    
6400ca93:	mov    eax,DWORD PTR [esp+0x3c]
6400ca97:	test   eax,eax
6400ca99:	jne    0x6400cabc
6400ca9b:	or     DWORD PTR [ebp+0x4],0x2000
6400caa2:	push   0x2
6400caa4:	mov    edx,0x10
6400caa9:	mov    eax,ebx
6400caab:	call   0x6400bf40
6400cab0:	mov    ecx,DWORD PTR [esp+0x24]
6400cab4:	add    ecx,0x30
6400cab7:	lea    esi,[edx-0xe]
6400caba:	jmp    0x6400ca7a
6400cabc:	cmp    eax,0x2
6400cabf:	jne    0x6400caf2
6400cac1:	mov    eax,DWORD PTR [esp+0x38]
6400cac5:	and    eax,0x3000000
6400caca:	cmp    eax,0x3000000
6400cacf:	jne    0x6400caf2
6400cad1:	or     DWORD PTR [ebp+0x4],0x2000000
6400cad8:	push   0x2
6400cada:	mov    edx,0x40
6400cadf:	mov    eax,ebx
6400cae1:	call   0x6400bf40
6400cae6:	mov    ecx,DWORD PTR [esp+0x24]
6400caea:	add    ecx,0x30
6400caed:	lea    esi,[edx-0x38]
6400caf0:	jmp    0x6400ca7a
6400caf2:	or     DWORD PTR [ebp+0x4],0x2000
6400caf9:	mov    eax,DWORD PTR [esp+0x20]
6400cafd:	mov    ecx,DWORD PTR [esp+0x24]
6400cb01:	mov    BYTE PTR [ebx],0x2
6400cb04:	cmp    DWORD PTR [eax+0x18],0x2
6400cb08:	jne    0x6400cb29
6400cb0a:	mov    edx,0x20
6400cb0f:	mov    WORD PTR [ebx+0x2],dx
6400cb13:	or     WORD PTR [ecx+0xa],dx
6400cb17:	lea    esi,[ecx+0x30]
6400cb1a:	lea    edi,[edx-0x1c]
6400cb1d:	mov    ecx,eax
6400cb1f:	call   0x6400c000
6400cb24:	jmp    0x6400ca83
6400cb29:	mov    WORD PTR [ebx+0x2],0x20
6400cb2f:	add    ecx,0x30
6400cb32:	mov    esi,0x4
6400cb37:	jmp    0x6400ca7e
6400cb3c:	mov    ecx,DWORD PTR [esp+0x20]
6400cb40:	mov    esi,0x2000
6400cb45:	test   DWORD PTR [esp+0x38],esi
6400cb49:	mov    BYTE PTR [ebx],0x2
6400cb4c:	je     0x6400cb75
6400cb4e:	test   DWORD PTR [ebp+0x0],esi
6400cb51:	je     0x6400cb75
6400cb53:	or     DWORD PTR [ebp+0x4],esi
6400cb56:	mov    eax,DWORD PTR [ecx+0x18]
6400cb59:	test   eax,eax
6400cb5b:	je     0x6400cb6d
6400cb5d:	add    eax,0xffffffff
6400cb60:	cmp    eax,0x1
6400cb63:	ja     0x6400cb7b
6400cb65:	mov    WORD PTR [ebx+0x2],0x10
6400cb6b:	jmp    0x6400cb7b
6400cb6d:	mov    WORD PTR [ebx+0x2],0x20
6400cb73:	jmp    0x6400cb7b
6400cb75:	mov    WORD PTR [ebx+0x2],0x8
6400cb7b:	mov    eax,DWORD PTR [esp+0x24]
6400cb7f:	or     WORD PTR [eax+0xa],0x20
6400cb84:	lea    esi,[eax+0x30]
6400cb87:	mov    edi,0x1
6400cb8c:	call   0x6400c000
6400cb91:	jmp    0x6400ca83
6400cb96:	push   0x3
6400cb98:	jmp    0x6400caa4
6400cb9d:	push   0x3
6400cb9f:	jmp    0x6400ca62
6400cba4:	push   0x4
6400cba6:	mov    edx,0x8
6400cbab:	mov    eax,ebx
6400cbad:	call   0x6400bf40
6400cbb2:	mov    ecx,DWORD PTR [esp+0x24]
6400cbb6:	add    ecx,0x34
6400cbb9:	jmp    0x6400ca75
6400cbbe:	push   0x1
6400cbc0:	mov    edx,0x8
6400cbc5:	mov    eax,ebx
6400cbc7:	call   0x6400bf40
6400cbcc:	cmp    DWORD PTR [ebp+0x18],0x0
6400cbd0:	je     0x6400cbf1
6400cbd2:	mov    eax,DWORD PTR [esp+0x14]
6400cbd6:	mov    edx,DWORD PTR [esp+0x10]
6400cbda:	or     DWORD PTR [ebp+0x4],0x2000000
6400cbe1:	and    eax,0x4
6400cbe4:	lea    eax,[edx+eax*2]
6400cbe7:	call   0x6400bf30
6400cbec:	mov    BYTE PTR [ebx+0x1],al
6400cbef:	jmp    0x6400cc6d
6400cbf1:	mov    al,BYTE PTR [esp+0x10]
6400cbf5:	add    al,0x30
6400cbf7:	mov    BYTE PTR [ebx+0x1],al
6400cbfa:	jmp    0x6400cc6d
6400cbfc:	mov    ecx,DWORD PTR [esp+0x3c]
6400cc00:	sub    ecx,0x0
6400cc03:	je     0x6400cc2e
6400cc05:	sub    ecx,0x1
6400cc08:	je     0x6400cc21
6400cc0a:	sub    ecx,0x1
6400cc0d:	jne    0x6400cc6d
6400cc0f:	or     DWORD PTR [ebp+0x4],0x2000000
6400cc16:	and    eax,0x4
6400cc19:	lea    eax,[edx+eax*2]
6400cc1c:	push   eax
6400cc1d:	push   0x40
6400cc1f:	jmp    0x6400cc64
6400cc21:	test   al,0x4
6400cc23:	jne    0x6400cc54
6400cc25:	or     DWORD PTR [ebp+0x4],0x2000
6400cc2c:	jmp    0x6400cc5e
6400cc2e:	or     DWORD PTR [ebp+0x4],0x2000
6400cc35:	test   al,0x4
6400cc37:	mov    ecx,DWORD PTR [ebp+0x4]
6400cc3a:	je     0x6400cc48
6400cc3c:	or     ecx,0x2000000
6400cc42:	mov    DWORD PTR [ebp+0x4],ecx
6400cc45:	add    edx,0x8
6400cc48:	add    edx,0x20
6400cc4b:	push   edx
6400cc4c:	push   0x10
6400cc4e:	jmp    0x6400cc64
6400cc50:	test   al,0x4
6400cc52:	je     0x6400cc5e
6400cc54:	or     DWORD PTR [ebp+0x4],0x2000000
6400cc5b:	add    edx,0x8
6400cc5e:	add    edx,0x10
6400cc61:	push   edx
6400cc62:	push   0x20
6400cc64:	mov    eax,ebx
6400cc66:	push   0x1
6400cc68:	call   0x6400bf50
6400cc6d:	mov    al,BYTE PTR [ebx]
6400cc6f:	cmp    al,0x1
6400cc71:	je     0x6400cc7b
6400cc73:	cmp    al,0x6
6400cc75:	je     0x6400cc7b
6400cc77:	cmp    al,0x7
6400cc79:	jne    0x6400cc8f
6400cc7b:	movzx  ecx,BYTE PTR [ebx+0x1]
6400cc7f:	mov    dx,WORD PTR [ecx*2+0x64048b90]
6400cc87:	mov    eax,DWORD PTR [esp+0x24]
6400cc8b:	or     WORD PTR [eax+0x3c],dx
6400cc8f:	pop    edi
6400cc90:	pop    esi
6400cc91:	pop    ebp
6400cc92:	mov    eax,0x1
6400cc97:	pop    ebx
6400cc98:	add    esp,0xc
6400cc9b:	ret    
6400cc9c:	test   al,0x4
6400cc9e:	mov    edi,0x2000000
6400cca3:	je     0x6400ccab
6400cca5:	or     DWORD PTR [ebp+0x4],edi
6400cca8:	add    edx,0x8
6400ccab:	mov    ecx,DWORD PTR [esp+0x20]
6400ccaf:	cmp    DWORD PTR [ecx+0x18],0x2
6400ccb3:	jne    0x6400cccc
6400ccb5:	mov    esi,DWORD PTR [esp+0x38]
6400ccb9:	and    esi,0x3000000
6400ccbf:	cmp    esi,0x1000000
6400ccc5:	jne    0x6400cccc
6400ccc7:	push   edx
6400ccc8:	push   0x40
6400ccca:	jmp    0x6400cc64
6400cccc:	test   al,0x8
6400ccce:	mov    eax,ebx
6400ccd0:	je     0x6400ccda
6400ccd2:	or     DWORD PTR [ebp+0x4],edi
6400ccd5:	push   edx
6400ccd6:	push   0x40
6400ccd8:	jmp    0x6400cc66
6400ccda:	add    edx,0x10
6400ccdd:	push   edx
6400ccde:	push   0x20
6400cce0:	jmp    0x6400cc66
6400cce2:	test   al,0x1
6400cce4:	mov    eax,DWORD PTR [esp+0x34]
6400cce8:	je     0x6400ccf4
6400ccea:	or     DWORD PTR [ebp+0x4],0x2000000
6400ccf1:	add    eax,0x8
6400ccf4:	mov    edx,DWORD PTR [esp+0x20]
6400ccf8:	cmp    DWORD PTR [edx+0x18],0x2
6400ccfc:	jne    0x6400cd06
6400ccfe:	push   eax
6400ccff:	push   0x40
6400cd01:	jmp    0x6400cc64
6400cd06:	add    eax,0x10
6400cd09:	push   eax
6400cd0a:	jmp    0x6400cc62
6400cd0f:	add    edx,0x53
6400cd12:	push   edx
6400cd13:	push   0x40
6400cd15:	jmp    0x6400cc64
6400cd1a:	mov    eax,DWORD PTR [esp+0x34]
6400cd1e:	add    eax,0x53
6400cd21:	push   eax
6400cd22:	push   0x40
6400cd24:	jmp    0x6400cc64
6400cd29:	xor    eax,eax
6400cd2b:	mov    DWORD PTR [esp+0x10],eax
6400cd2f:	mov    DWORD PTR [esp+0x14],eax
6400cd33:	mov    edx,eax
6400cd35:	test   al,0x4
6400cd37:	je     0x6400cd43
6400cd39:	or     DWORD PTR [ebp+0x4],0x2000000
6400cd40:	add    edx,0x8
6400cd43:	add    edx,0x5b
6400cd46:	push   edx
6400cd47:	push   0x80
6400cd4c:	jmp    0x6400cc64
6400cd51:	test   al,0x1
6400cd53:	je     0x6400cd61
6400cd55:	or     DWORD PTR [ebp+0x4],0x2000000
6400cd5c:	add    DWORD PTR [esp+0x34],0x8
6400cd61:	mov    ecx,DWORD PTR [esp+0x34]
6400cd65:	add    ecx,0x5b
6400cd68:	push   ecx
6400cd69:	push   0x80
6400cd6e:	jmp    0x6400cc64
6400cd73:	test   al,0x4
6400cd75:	mov    eax,DWORD PTR [esp+0x20]
6400cd79:	je     0x6400cd87
6400cd7b:	or     DWORD PTR [ebp+0x4],0x2000000
6400cd82:	add    edx,0x8
6400cd85:	jmp    0x6400cd9a
6400cd87:	cmp    DWORD PTR [eax+0x18],0x1
6400cd8b:	jne    0x6400cd9a
6400cd8d:	test   BYTE PTR [ebp+0x0],0x10
6400cd91:	je     0x6400cd9a
6400cd93:	add    edx,0x8
6400cd96:	or     DWORD PTR [ebp+0x4],0x10
6400cd9a:	cmp    edx,0x9
6400cd9d:	jae    0x6400c858
6400cda3:	cmp    edx,0x1
6400cda6:	je     0x6400c858
6400cdac:	cmp    edx,0x5
6400cdaf:	jb     0x6400cdba
6400cdb1:	cmp    edx,0x7
6400cdb4:	jbe    0x6400c858
6400cdba:	mov    BYTE PTR [ebx],0x1
6400cdbd:	mov    eax,DWORD PTR [eax+0x18]
6400cdc0:	sub    eax,0x2
6400cdc3:	neg    eax
6400cdc5:	sbb    eax,eax
6400cdc7:	and    eax,0xffffffe0
6400cdca:	add    eax,0x40
6400cdcd:	add    dl,0x7b
6400cdd0:	mov    WORD PTR [ebx+0x2],ax
6400cdd4:	mov    BYTE PTR [ebx+0x1],dl
6400cdd7:	jmp    0x6400cc7b
6400cddc:	cmp    edx,0x4
6400cddf:	je     0x6400c858
6400cde5:	cmp    edx,0x5
6400cde8:	je     0x6400c858
6400cdee:	test   al,0x4
6400cdf0:	jne    0x6400c858
6400cdf6:	mov    ecx,DWORD PTR [esp+0x20]
6400cdfa:	mov    BYTE PTR [ebx],0x1
6400cdfd:	mov    eax,DWORD PTR [ecx+0x18]
6400ce00:	sub    eax,0x2
6400ce03:	neg    eax
6400ce05:	sbb    eax,eax
6400ce07:	and    eax,0xffffffe0
6400ce0a:	add    eax,0x40
6400ce0d:	sub    dl,0x7c
6400ce10:	mov    WORD PTR [ebx+0x2],ax
6400ce14:	mov    BYTE PTR [ebx+0x1],dl
6400ce17:	jmp    0x6400cc7b
6400ce1c:	cmp    DWORD PTR [esp+0x44],0x0
6400ce21:	je     0x6400ce2c
6400ce23:	cmp    edx,0x1
6400ce26:	je     0x6400c858
6400ce2c:	cmp    edx,0x5
6400ce2f:	ja     0x6400c858
6400ce35:	add    edx,0x44
6400ce38:	push   edx
6400ce39:	push   0x10
6400ce3b:	jmp    0x6400cc64
6400ce40:	mov    eax,DWORD PTR [esp+0x38]
6400ce44:	mov    BYTE PTR [ebx],0x1
6400ce47:	mov    WORD PTR [ebx+0x2],0x10
6400ce4d:	or     DWORD PTR [ebp+0x4],0x2000
6400ce54:	and    eax,0x1f80
6400ce59:	cmp    eax,0x400
6400ce5e:	ja     0x6400ce9f
6400ce60:	je     0x6400ce96
6400ce62:	cmp    eax,0x80
6400ce67:	je     0x6400ce8d
6400ce69:	cmp    eax,0x100
6400ce6e:	je     0x6400ce84
6400ce70:	cmp    eax,0x200
6400ce75:	jne    0x6400cc6d
6400ce7b:	mov    BYTE PTR [ebx+0x1],0x47
6400ce7f:	jmp    0x6400cc6d
6400ce84:	mov    BYTE PTR [ebx+0x1],0x46
6400ce88:	jmp    0x6400cc6d
6400ce8d:	mov    BYTE PTR [ebx+0x1],0x45
6400ce91:	jmp    0x6400cc6d
6400ce96:	mov    BYTE PTR [ebx+0x1],0x44
6400ce9a:	jmp    0x6400cc6d
6400ce9f:	cmp    eax,0x800
6400cea4:	je     0x6400ceba
6400cea6:	cmp    eax,0x1000
6400ceab:	jne    0x6400cc6d
6400ceb1:	mov    BYTE PTR [ebx+0x1],0x49
6400ceb5:	jmp    0x6400cc6d
6400ceba:	mov    BYTE PTR [ebx+0x1],0x48
6400cebe:	jmp    0x6400cc6d
6400cec3:	push   0x30
6400cec5:	push   0x8
6400cec7:	jmp    0x6400cc64
6400cecc:	mov    eax,DWORD PTR [esp+0x3c]
6400ced0:	test   eax,eax
6400ced2:	jne    0x6400cee4
6400ced4:	or     DWORD PTR [ebp+0x4],0x2000
6400cedb:	push   0x20
6400cedd:	push   0x10
6400cedf:	jmp    0x6400cc64
6400cee4:	cmp    eax,0x1
6400cee7:	jne    0x6400cef7
6400cee9:	or     DWORD PTR [ebp+0x4],0x2000
6400cef0:	push   0x10
6400cef2:	jmp    0x6400cc62
6400cef7:	mov    eax,DWORD PTR [esp+0x38]
6400cefb:	not    eax
6400cefd:	test   eax,0x1000000
6400cf02:	je     0x6400cf0b
6400cf04:	or     DWORD PTR [ebp+0x4],0x2000000
6400cf0b:	push   0x0
6400cf0d:	push   0x40
6400cf0f:	jmp    0x6400cc64
6400cf14:	or     DWORD PTR [ebp+0x4],0x2000
6400cf1b:	cmp    DWORD PTR [esp+0x3c],0x0
6400cf20:	mov    esi,DWORD PTR [esp+0x20]
6400cf24:	jne    0x6400cf5f
6400cf26:	add    DWORD PTR [esi+0x14],0xfffffffc
6400cf2a:	js     0x6400c858
6400cf30:	push   0x9
6400cf32:	mov    edx,0x10
6400cf37:	mov    eax,ebx
6400cf39:	call   0x6400bf40
6400cf3e:	mov    ecx,DWORD PTR [esi+0x10]
6400cf41:	movzx  edx,WORD PTR [ecx]
6400cf44:	mov    eax,DWORD PTR [esp+0x24]
6400cf48:	mov    DWORD PTR [eax+0x34],edx
6400cf4b:	mov    ecx,DWORD PTR [esi+0x10]
6400cf4e:	mov    dx,WORD PTR [ecx+0x2]
6400cf52:	mov    WORD PTR [eax+0x30],dx
6400cf56:	add    DWORD PTR [esi+0x10],0x4
6400cf5a:	jmp    0x6400cc6d
6400cf5f:	add    DWORD PTR [esi+0x14],0xfffffffa
6400cf63:	js     0x6400c858
6400cf69:	push   0x9
6400cf6b:	mov    edx,0x20
6400cf70:	mov    eax,ebx
6400cf72:	call   0x6400bf40
6400cf77:	mov    eax,DWORD PTR [esi+0x10]
6400cf7a:	mov    ecx,DWORD PTR [eax]
6400cf7c:	mov    eax,DWORD PTR [esp+0x24]
6400cf80:	mov    DWORD PTR [eax+0x34],ecx
6400cf83:	mov    edx,DWORD PTR [esi+0x10]
6400cf86:	mov    cx,WORD PTR [edx+0x4]
6400cf8a:	mov    WORD PTR [eax+0x30],cx
6400cf8e:	add    DWORD PTR [esi+0x10],0x6
6400cf92:	jmp    0x6400cc6d
6400cf97:	cmp    esi,0x28
6400cf9a:	push   0x8
6400cf9c:	mov    eax,ebx
6400cf9e:	jne    0x6400cfc7
6400cfa0:	lea    edx,[esi-0x20]
6400cfa3:	call   0x6400bf40
6400cfa8:	lea    edi,[esi-0x27]
6400cfab:	mov    esi,DWORD PTR [esp+0x24]
6400cfaf:	mov    ecx,DWORD PTR [esp+0x20]
6400cfb3:	add    esi,0x30
6400cfb6:	call   0x6400c000
6400cfbb:	test   eax,eax
6400cfbd:	jne    0x6400d009
6400cfbf:	pop    edi
6400cfc0:	pop    esi
6400cfc1:	pop    ebp
6400cfc2:	pop    ebx
6400cfc3:	add    esp,0xc
6400cfc6:	ret    
6400cfc7:	or     DWORD PTR [ebp+0x4],0x2000
6400cfce:	cmp    DWORD PTR [esp+0x40],0x0
6400cfd3:	jne    0x6400cfe4
6400cfd5:	mov    edx,0x10
6400cfda:	call   0x6400bf40
6400cfdf:	lea    edi,[edx-0xe]
6400cfe2:	jmp    0x6400cfab
6400cfe4:	mov    edx,0x20
6400cfe9:	call   0x6400bf40
6400cfee:	mov    esi,DWORD PTR [esp+0x24]
6400cff2:	mov    ecx,DWORD PTR [esp+0x20]
6400cff6:	add    esi,0x30
6400cff9:	lea    edi,[edx-0x1c]
6400cffc:	call   0x6400c000
6400d001:	test   eax,eax
6400d003:	je     0x6400c858
6400d009:	mov    edx,DWORD PTR [esp+0x28]
6400d00d:	movzx  eax,WORD PTR [edx+0x4]
6400d011:	cmp    ax,0x18
6400d015:	jb     0x6400cc6d
6400d01b:	cmp    ax,0x27
6400d01f:	ja     0x6400cc6d
6400d025:	mov    eax,DWORD PTR [ebp+0x0]
6400d028:	test   al,al
6400d02a:	jns    0x6400d041
6400d02c:	mov    eax,DWORD PTR [esp+0x24]
6400d030:	or     DWORD PTR [ebp+0x4],0x80
6400d037:	or     WORD PTR [eax+0xa],0x10
6400d03c:	jmp    0x6400cc6d
6400d041:	test   eax,0x200
6400d046:	je     0x6400cc6d
6400d04c:	mov    eax,DWORD PTR [esp+0x24]
6400d050:	or     DWORD PTR [ebp+0x4],0x200
6400d057:	or     WORD PTR [eax+0xa],0x8
6400d05c:	jmp    0x6400cc6d
6400d061:	mov    WORD PTR [ebx+0x2],0x8
6400d067:	cmp    WORD PTR [ebx+0x2],0x0
6400d06c:	mov    BYTE PTR [ebx],0x5
6400d06f:	jne    0x6400d09a
6400d071:	mov    eax,DWORD PTR [esp+0x3c]
6400d075:	sub    eax,0x0
6400d078:	je     0x6400d094
6400d07a:	sub    eax,0x1
6400d07d:	je     0x6400d08c
6400d07f:	sub    eax,0x1
6400d082:	jne    0x6400d09a
6400d084:	mov    WORD PTR [ebx+0x2],0x40
6400d08a:	jmp    0x6400d09a
6400d08c:	mov    WORD PTR [ebx+0x2],0x20
6400d092:	jmp    0x6400d09a
6400d094:	mov    WORD PTR [ebx+0x2],0x10
6400d09a:	mov    eax,DWORD PTR [esp+0x24]
6400d09e:	mov    edi,DWORD PTR [esp+0x20]
6400d0a2:	mov    ecx,DWORD PTR [edi+0x18]
6400d0a5:	push   eax
6400d0a6:	push   ecx
6400d0a7:	push   ebp
6400d0a8:	push   0x200
6400d0ad:	call   0x6400dd20
6400d0b2:	mov    eax,DWORD PTR [esp+0x50]
6400d0b6:	add    esp,0x10
6400d0b9:	test   eax,eax
6400d0bb:	jne    0x6400d0db
6400d0bd:	mov    eax,DWORD PTR [esp+0x24]
6400d0c1:	or     DWORD PTR [ebp+0x4],0x4000
6400d0c8:	mov    BYTE PTR [eax+0xf],0x10
6400d0cc:	lea    ecx,[eax+0x28]
6400d0cf:	mov    esi,0x2
6400d0d4:	mov    eax,edi
6400d0d6:	jmp    0x6400ca7e
6400d0db:	cmp    eax,0x1
6400d0de:	mov    eax,DWORD PTR [esp+0x24]
6400d0e2:	lea    ecx,[eax+0x28]
6400d0e5:	jne    0x6400d0fe
6400d0e7:	or     DWORD PTR [ebp+0x4],0x4000
6400d0ee:	mov    BYTE PTR [eax+0xf],0x20
6400d0f2:	mov    esi,0x4
6400d0f7:	mov    eax,edi
6400d0f9:	jmp    0x6400ca7e
6400d0fe:	mov    BYTE PTR [eax+0xf],0x40
6400d102:	mov    esi,0x8
6400d107:	mov    eax,edi
6400d109:	jmp    0x6400ca7e
6400d10e:	push   0x2
6400d110:	mov    edx,0x8
6400d115:	mov    eax,ebx
6400d117:	call   0x6400bf40
6400d11c:	mov    edx,DWORD PTR [esp+0x24]
6400d120:	mov    BYTE PTR [edx+0x30],0x1
6400d124:	jmp    0x6400cc6d
6400d129:	push   0x31
6400d12b:	push   0x8
6400d12d:	jmp    0x6400cc64
6400d132:	mov    eax,DWORD PTR [esp+0x20]
6400d136:	mov    ecx,DWORD PTR [eax+0x10]
6400d139:	movzx  edx,BYTE PTR [ecx-0x1]
6400d13d:	and    edx,0x7
6400d140:	add    edx,0x4b
6400d143:	jmp    0x6400cc61
6400d148:	push   0x4b
6400d14a:	push   0x20
6400d14c:	push   0x1
6400d14e:	mov    eax,ebx
6400d150:	call   0x6400bf50
6400d155:	mov    eax,DWORD PTR [esp+0x20]
6400d159:	mov    ecx,DWORD PTR [eax+0x10]
6400d15c:	movzx  edx,BYTE PTR [ecx-0x1]
6400d160:	and    edx,0x7
6400d163:	add    edx,0x4b
6400d166:	push   edx
6400d167:	push   0x20
6400d169:	lea    eax,[ebx+0x4]
6400d16c:	jmp    0x6400cc66
6400d171:	mov    eax,DWORD PTR [esp+0x20]
6400d175:	mov    ecx,DWORD PTR [eax+0x10]
6400d178:	movzx  edx,BYTE PTR [ecx-0x1]
6400d17c:	and    edx,0x7
6400d17f:	add    edx,0x4b
6400d182:	push   edx
6400d183:	push   0x20
6400d185:	push   0x1
6400d187:	mov    eax,ebx
6400d189:	call   0x6400bf50
6400d18e:	push   0x4b
6400d190:	push   0x20
6400d192:	lea    eax,[ebx+0x4]
6400d195:	jmp    0x6400cc66
6400d19a:	push   0x1
6400d19c:	mov    edx,0x8
6400d1a1:	mov    eax,ebx
6400d1a3:	call   0x6400bf40
6400d1a8:	mov    eax,DWORD PTR [esp+0x20]
6400d1ac:	mov    ecx,DWORD PTR [eax+0x10]
6400d1af:	movzx  eax,BYTE PTR [ecx-0x1]
6400d1b3:	and    eax,0x7
6400d1b6:	test   BYTE PTR [esp+0x14],0x1
6400d1bb:	je     0x6400d1d3
6400d1bd:	or     DWORD PTR [ebp+0x4],0x2000000
6400d1c4:	add    eax,edx
6400d1c6:	call   0x6400bf30
6400d1cb:	mov    BYTE PTR [ebx+0x1],al
6400d1ce:	jmp    0x6400cc6d
6400d1d3:	cmp    DWORD PTR [ebp+0x18],0x1
6400d1d7:	jne    0x6400cbf5
6400d1dd:	or     DWORD PTR [ebp+0x4],0x2000000
6400d1e4:	call   0x6400bf30
6400d1e9:	mov    BYTE PTR [ebx+0x1],al
6400d1ec:	jmp    0x6400cc6d
6400d1f1:	mov    edx,DWORD PTR [esp+0x20]
6400d1f5:	mov    ecx,DWORD PTR [edx+0x10]
6400d1f8:	movzx  ecx,BYTE PTR [ecx-0x1]
6400d1fc:	mov    edx,DWORD PTR [esp+0x3c]
6400d200:	and    ecx,0x7
6400d203:	sub    edx,0x0
6400d206:	je     0x6400d275
6400d208:	sub    edx,0x1
6400d20b:	je     0x6400d24e
6400d20d:	sub    edx,0x1
6400d210:	jne    0x6400cc6d
6400d216:	mov    edx,DWORD PTR [esp+0x38]
6400d21a:	test   edx,0x1000000
6400d220:	mov    edi,0x2000000
6400d225:	je     0x6400d23d
6400d227:	test   edi,edx
6400d229:	jne    0x6400d23d
6400d22b:	test   al,0x1
6400d22d:	je     0x6400d246
6400d22f:	or     DWORD PTR [ebp+0x4],edi
6400d232:	add    ecx,0x8
6400d235:	push   ecx
6400d236:	push   0x40
6400d238:	jmp    0x6400cc64
6400d23d:	or     DWORD PTR [ebp+0x4],edi
6400d240:	and    eax,0x1
6400d243:	lea    ecx,[ecx+eax*8]
6400d246:	push   ecx
6400d247:	push   0x40
6400d249:	jmp    0x6400cc64
6400d24e:	test   al,0x1
6400d250:	je     0x6400d265
6400d252:	or     DWORD PTR [ebp+0x4],0x2000000
6400d259:	add    ecx,0x8
6400d25c:	add    ecx,0x10
6400d25f:	push   ecx
6400d260:	jmp    0x6400cc62
6400d265:	or     DWORD PTR [ebp+0x4],0x2000
6400d26c:	add    ecx,0x10
6400d26f:	push   ecx
6400d270:	jmp    0x6400cc62
6400d275:	or     DWORD PTR [ebp+0x4],0x2000
6400d27c:	test   al,0x1
6400d27e:	mov    edx,DWORD PTR [ebp+0x4]
6400d281:	je     0x6400d28f
6400d283:	or     edx,0x2000000
6400d289:	mov    DWORD PTR [ebp+0x4],edx
6400d28c:	add    ecx,0x8
6400d28f:	add    ecx,0x20
6400d292:	push   ecx
6400d293:	push   0x10
6400d295:	jmp    0x6400cc64
6400d29a:	or     DWORD PTR [ebp+0x4],0x4000
6400d2a1:	mov    edx,DWORD PTR [esp+0x38]
6400d2a5:	test   dl,0x4
6400d2a8:	mov    BYTE PTR [ebx],0x6
6400d2ab:	je     0x6400d2ec
6400d2ad:	or     DWORD PTR [ebp+0x4],0x2000
6400d2b4:	mov    ecx,DWORD PTR [esp+0x3c]
6400d2b8:	test   ecx,ecx
6400d2ba:	mov    eax,DWORD PTR [ebp+0x4]
6400d2bd:	jne    0x6400d2c7
6400d2bf:	mov    WORD PTR [ebx+0x2],0x10
6400d2c5:	jmp    0x6400d2f2
6400d2c7:	cmp    ecx,0x2
6400d2ca:	jne    0x6400d2e4
6400d2cc:	test   edx,0x1000000
6400d2d2:	je     0x6400d2e4
6400d2d4:	or     eax,0x2000000
6400d2d9:	mov    DWORD PTR [ebp+0x4],eax
6400d2dc:	mov    WORD PTR [ebx+0x2],0x40
6400d2e2:	jmp    0x6400d2f2
6400d2e4:	mov    WORD PTR [ebx+0x2],0x20
6400d2ea:	jmp    0x6400d2f2
6400d2ec:	mov    WORD PTR [ebx+0x2],0x8
6400d2f2:	mov    eax,DWORD PTR [esp+0x24]
6400d2f6:	mov    edx,DWORD PTR [esp+0x20]
6400d2fa:	push   eax
6400d2fb:	mov    BYTE PTR [eax+0xc],0x0
6400d2ff:	mov    eax,DWORD PTR [edx+0x18]
6400d302:	push   eax
6400d303:	push   ebp
6400d304:	push   0x200
6400d309:	call   0x6400dd20
6400d30e:	mov    eax,DWORD PTR [esp+0x50]
6400d312:	add    esp,0x10
6400d315:	test   eax,eax
6400d317:	jne    0x6400d322
6400d319:	mov    BYTE PTR [ebx+0x1],0x26
6400d31d:	jmp    0x6400cc6d
6400d322:	sub    eax,0x1
6400d325:	neg    eax
6400d327:	sbb    al,al
6400d329:	and    al,0xf0
6400d32b:	add    al,0x16
6400d32d:	mov    BYTE PTR [ebx+0x1],al
6400d330:	jmp    0x6400cc6d
6400d335:	or     DWORD PTR [ebp+0x4],0x4000
6400d33c:	mov    edx,DWORD PTR [esp+0x38]
6400d340:	test   dl,0x4
6400d343:	mov    BYTE PTR [ebx],0x6
6400d346:	je     0x6400d387
6400d348:	or     DWORD PTR [ebp+0x4],0x2000
6400d34f:	mov    ecx,DWORD PTR [esp+0x3c]
6400d353:	test   ecx,ecx
6400d355:	mov    eax,DWORD PTR [ebp+0x4]
6400d358:	jne    0x6400d362
6400d35a:	mov    WORD PTR [ebx+0x2],0x10
6400d360:	jmp    0x6400d38d
6400d362:	cmp    ecx,0x2
6400d365:	jne    0x6400d37f
6400d367:	test   edx,0x1000000
6400d36d:	je     0x6400d37f
6400d36f:	or     eax,0x2000000
6400d374:	mov    DWORD PTR [ebp+0x4],eax
6400d377:	mov    WORD PTR [ebx+0x2],0x40
6400d37d:	jmp    0x6400d38d
6400d37f:	mov    WORD PTR [ebx+0x2],0x20
6400d385:	jmp    0x6400d38d
6400d387:	mov    WORD PTR [ebx+0x2],0x8
6400d38d:	cmp    DWORD PTR [esp+0x30],0x0
6400d392:	jne    0x6400d3a6
6400d394:	mov    ecx,DWORD PTR [esp+0x20]
6400d398:	cmp    DWORD PTR [ecx+0x18],0x2
6400d39c:	je     0x6400d3a6
6400d39e:	mov    edx,DWORD PTR [esp+0x24]
6400d3a2:	mov    BYTE PTR [edx+0xc],0xc4
6400d3a6:	mov    eax,DWORD PTR [esp+0x40]
6400d3aa:	test   eax,eax
6400d3ac:	jne    0x6400d3b7
6400d3ae:	mov    BYTE PTR [ebx+0x1],0x27
6400d3b2:	jmp    0x6400cc6d
6400d3b7:	sub    eax,0x1
6400d3ba:	neg    eax
6400d3bc:	sbb    al,al
6400d3be:	and    al,0xf0
6400d3c0:	add    al,0x17
6400d3c2:	mov    BYTE PTR [ebx+0x1],al
6400d3c5:	jmp    0x6400cc6d
6400d3ca:	push   0x22
6400d3cc:	push   0x10
6400d3ce:	jmp    0x6400cc64
6400d3d3:	push   0x11
6400d3d5:	jmp    0x6400cc62
6400d3da:	mov    eax,DWORD PTR [esp+0x20]
6400d3de:	or     DWORD PTR [ebp+0x4],0x4000
6400d3e5:	mov    edi,DWORD PTR [esp+0x24]
6400d3e9:	mov    ecx,DWORD PTR [eax+0x18]
6400d3ec:	push   edi
6400d3ed:	push   ecx
6400d3ee:	push   ebp
6400d3ef:	push   0x200
6400d3f4:	call   0x6400dd20
6400d3f9:	add    esp,0x10
6400d3fc:	push   0x30
6400d3fe:	push   0x8
6400d400:	push   0x7
6400d402:	mov    eax,ebx
6400d404:	call   0x6400bf50
6400d409:	mov    eax,DWORD PTR [esp+0x40]
6400d40d:	test   eax,eax
6400d40f:	jne    0x6400d41a
6400d411:	mov    BYTE PTR [edi+0xd],0x23
6400d415:	jmp    0x6400cc6d
6400d41a:	cmp    eax,0x1
6400d41d:	jne    0x6400d428
6400d41f:	mov    BYTE PTR [edi+0xd],0x13
6400d423:	jmp    0x6400cc6d
6400d428:	or     DWORD PTR [ebp+0x4],0x2000000
6400d42f:	mov    BYTE PTR [edi+0xd],0x3
6400d433:	jmp    0x6400cc6d
6400d438:	mov    eax,DWORD PTR [esp+0x40]
6400d43c:	cmp    eax,0x2
6400d43f:	jne    0x6400d44e
6400d441:	push   0x0
6400d443:	push   0x40
6400d445:	push   0x6
6400d447:	mov    eax,ebx
6400d449:	jmp    0x6400cc68
6400d44e:	or     DWORD PTR [ebp+0x4],0x4000
6400d455:	cmp    eax,0x1
6400d458:	mov    eax,ebx
6400d45a:	jne    0x6400d467
6400d45c:	push   0x10
6400d45e:	push   0x20
6400d460:	push   0x6
6400d462:	jmp    0x6400cc68
6400d467:	push   0x20
6400d469:	push   0x10
6400d46b:	push   0x6
6400d46d:	jmp    0x6400cc68
6400d472:	mov    edx,DWORD PTR [esp+0x18]
6400d476:	add    edx,0x5b
6400d479:	push   edx
6400d47a:	push   0x80
6400d47f:	jmp    0x6400cc64
6400d484:	mov    edi,DWORD PTR [esp+0x20]
6400d488:	add    DWORD PTR [edi+0x14],0xffffffff
6400d48c:	js     0x6400c858
6400d492:	mov    esi,0x1
6400d497:	cmp    DWORD PTR [edi+0x18],esi
6400d49a:	jne    0x6400d4aa
6400d49c:	mov    eax,DWORD PTR [edi+0x10]
6400d49f:	movzx  eax,BYTE PTR [eax]
6400d4a2:	shr    eax,0x4
6400d4a5:	and    eax,0x7
6400d4a8:	jmp    0x6400d4b3
6400d4aa:	mov    ecx,DWORD PTR [edi+0x10]
6400d4ad:	movzx  eax,BYTE PTR [ecx]
6400d4b0:	shr    eax,0x4
6400d4b3:	add    eax,0x5b
6400d4b6:	push   eax
6400d4b7:	push   0x80
6400d4bc:	push   esi
6400d4bd:	mov    eax,ebx
6400d4bf:	call   0x6400bf50
6400d4c4:	add    DWORD PTR [edi+0x10],esi
6400d4c7:	jmp    0x6400cc6d
6400d4cc:	test   al,0x4
6400d4ce:	je     0x6400d4d3
6400d4d0:	add    edx,0x8
6400d4d3:	test   al,0x10
6400d4d5:	mov    eax,ebx
6400d4d7:	je     0x6400d4e7
6400d4d9:	add    edx,0x6b
6400d4dc:	push   edx
6400d4dd:	push   0x100
6400d4e2:	jmp    0x6400cc66
6400d4e7:	add    edx,0x5b
6400d4ea:	push   edx
6400d4eb:	push   0x80
6400d4f0:	jmp    0x6400cc66
6400d4f5:	mov    edi,DWORD PTR [esp+0x20]
6400d4f9:	add    DWORD PTR [edi+0x14],0xffffffff
6400d4fd:	js     0x6400c858
6400d503:	mov    esi,0x1
6400d508:	cmp    DWORD PTR [edi+0x18],esi
6400d50b:	jne    0x6400d51b
6400d50d:	mov    edx,DWORD PTR [edi+0x10]
6400d510:	movzx  eax,BYTE PTR [edx]
6400d513:	shr    eax,0x4
6400d516:	and    eax,0x7
6400d519:	jmp    0x6400d524
6400d51b:	mov    eax,DWORD PTR [edi+0x10]
6400d51e:	movzx  eax,BYTE PTR [eax]
6400d521:	shr    eax,0x4
6400d524:	test   BYTE PTR [ebp+0x28],0x10
6400d528:	je     0x6400d4b3
6400d52a:	add    eax,0x6b
6400d52d:	push   eax
6400d52e:	push   0x100
6400d533:	push   esi
6400d534:	mov    eax,ebx
6400d536:	call   0x6400bf50
6400d53b:	add    DWORD PTR [edi+0x10],esi
6400d53e:	jmp    0x6400cc6d
6400d543:	test   al,0x4
6400d545:	je     0x6400d54a
6400d547:	add    edx,0x8
6400d54a:	add    edx,0x6b
6400d54d:	push   edx
6400d54e:	push   0x100
6400d553:	jmp    0x6400cc64
6400d558:	mov    ecx,DWORD PTR [esp+0x18]
6400d55c:	add    ecx,0x6b
6400d55f:	push   ecx
6400d560:	push   0x100
6400d565:	jmp    0x6400cc64
6400d56a:	test   al,0x10
6400d56c:	je     0x6400d580
6400d56e:	mov    edx,DWORD PTR [esp+0x18]
6400d572:	add    edx,0x6b
6400d575:	push   edx
6400d576:	push   0x100
6400d57b:	jmp    0x6400cc64
6400d580:	mov    eax,DWORD PTR [esp+0x18]
6400d584:	add    eax,0x5b
6400d587:	push   eax
6400d588:	push   0x80
6400d58d:	jmp    0x6400cc64
6400d592:	test   al,0x4
6400d594:	je     0x6400d599
6400d596:	add    edx,0x8
6400d599:	test   al,0x8
6400d59b:	je     0x6400cc5e
6400d5a1:	push   edx
6400d5a2:	push   0x40
6400d5a4:	jmp    0x6400cc64
6400d5a9:	lea    ecx,[ecx+0x0]
6400d5ac:	or     eax,ecx
6400d5ae:	add    BYTE PTR [ebx+edi*8-0x39],ah
6400d5b2:	add    BYTE PTR [ecx+edi*4-0x39],ah
6400d5b6:	add    BYTE PTR [edx+esi*1-0x38],ah
6400d5ba:	add    BYTE PTR [ebx+eax*8-0x39],ah
6400d5be:	add    BYTE PTR [eax+edx*1-0x38],ah
6400d5c2:	add    BYTE PTR [ebp+eax*2-0x38],ah
6400d5c6:	add    BYTE PTR [edx+eiz*1-0x38],ah
6400d5ca:	add    BYTE PTR [ebx+ebp*4-0x39],ah
6400d5ce:	add    BYTE PTR [ecx+eiz*4-0x39],ah
6400d5d2:	add    BYTE PTR [edi+edi*2-0x39],ah
6400d5d6:	add    BYTE PTR [ecx+edi*1-0x38],ah
6400d5da:	add    BYTE PTR [esp+ecx*8-0x38],ah
6400d5de:	add    BYTE PTR [eax+eax*1+0x1],ah
6400d5e2:	add    al,BYTE PTR [ebx]
6400d5e4:	or     al,0xc
6400d5e6:	or     al,0xc
6400d5e8:	or     al,0xc
6400d5ea:	or     al,0xc
6400d5ec:	or     al,0xc
6400d5ee:	or     al,0xc
6400d5f0:	or     al,0x4
6400d5f2:	or     al,0x5
6400d5f4:	or     al,0xc
6400d5f6:	push   es
6400d5f7:	pop    es
6400d5f8:	add    DWORD PTR [eax],ecx
6400d5fa:	add    cl,BYTE PTR [ecx]
6400d5fc:	or     cl,BYTE PTR [esp+ecx*1]
6400d5ff:	or     al,0xc
6400d601:	or     al,0xc
6400d603:	or     al,0xc
6400d605:	or     al,0xc
6400d607:	or     al,0xc
6400d609:	or     al,0xc
6400d60b:	or     al,0xc
6400d60d:	or     al,0xc
6400d60f:	or     al,0xc
6400d611:	or     al,0xc
6400d613:	or     al,0xc
6400d615:	or     al,0xc
6400d617:	or     al,0xc
6400d619:	or     al,0xc
6400d61b:	or     al,0xc
6400d61d:	or     al,0xc
6400d61f:	or     al,0xc
6400d621:	or     al,0xc
6400d623:	or     al,0xc
6400d625:	or     al,0xc
6400d627:	or     al,0xb
6400d629:	lea    ecx,[ecx+0x0]
6400d62c:	or     al,0xca
6400d62e:	add    BYTE PTR [ecx+edi*1-0x37],ah
6400d632:	add    BYTE PTR [edi+ebp*8-0x38],ah
6400d636:	add    BYTE PTR [ebp+edx*2-0x37],ah
6400d63a:	add    BYTE PTR [ebx+ecx*4-0x37],ah
6400d63e:	add    BYTE PTR [ebx+eax*2-0x37],ah
6400d642:	add    BYTE PTR [eax+eax*2-0x37],ah
6400d646:	add    BYTE PTR [esi+edi*8-0x38],ah
6400d64a:	add    BYTE PTR [edi+eiz*1-0x37],ah
6400d64e:	add    BYTE PTR [esi+ebx*1-0x36],ah
6400d652:	add    BYTE PTR [ecx+ebp*4-0x37],ah
6400d656:	add    BYTE PTR [eax+esi*1-0x36],ah
6400d65a:	add    BYTE PTR [ecx+eax*8-0x37],ah
6400d65e:	add    BYTE PTR [edx+ebx*8-0x37],ah
6400d662:	add    BYTE PTR [ebx+esi*8-0x37],ah
6400d666:	add    BYTE PTR [edx+eax*2-0x36],ah
6400d66a:	add    BYTE PTR [eax+eax*1+0x1],ah
6400d66e:	add    al,BYTE PTR [ebx]
6400d670:	add    al,0xf
6400d672:	(bad)  
6400d673:	(bad)  
6400d674:	sldt   WORD PTR ds:0xf060500
6400d67b:	(bad)  
6400d67c:	(bad)  
6400d67d:	(bad)  
6400d67e:	(bad)  
6400d67f:	(bad)  
6400d680:	(bad)  
6400d681:	(bad)  
6400d682:	(bad)  
6400d683:	(bad)  
6400d684:	(bad)  
6400d685:	(bad)  
6400d686:	(bad)  
6400d687:	(bad)  
6400d688:	(bad)  
6400d689:	(bad)  
6400d68a:	(bad)  
6400d68b:	(bad)  
6400d68c:	(bad)  
6400d68d:	(bad)  
6400d68e:	(bad)  
6400d68f:	(bad)  
6400d690:	(bad)  
6400d691:	(bad)  
6400d692:	(bad)  
6400d693:	(bad)  
6400d694:	(bad)  
6400d695:	(bad)  
6400d696:	(bad)  
6400d697:	(bad)  
6400d698:	(bad)  
6400d699:	(bad)  
6400d69a:	(bad)  
6400d69b:	(bad)  
6400d69c:	(bad)  
6400d69d:	(bad)  
6400d69e:	sysret 
6400d6a0:	or     BYTE PTR [edi],cl
6400d6a2:	syscall 
6400d6a4:	pop    es
6400d6a5:	or     BYTE PTR [ecx],cl
6400d6a7:	sysret 
6400d6a9:	add    BYTE PTR ds:0xf0a0a0f,al
6400d6af:	(bad)  
6400d6b0:	(bad)  
6400d6b1:	(bad)  
6400d6b2:	ud2    
6400d6b4:	(bad)  
6400d6b5:	(bad)  
6400d6b7:	or     eax,0x498d0e
6400d6bc:	pusha  
6400d6bd:	retf   0x6400
6400d6c0:	mov    ds:0x936400ca,al
6400d6c5:	retf   0x6400
6400d6c8:	stc    
6400d6c9:	retf   0x6400
6400d6cc:	cmp    al,0xcb
6400d6ce:	add    BYTE PTR [esi+edx*4-0x35],ah
6400d6d2:	add    BYTE PTR [ebp+ebx*4-0x35],ah
6400d6d6:	add    BYTE PTR [esp+eiz*4-0x35],ah
6400d6da:	add    BYTE PTR [esi+edi*4-0x35],ah
6400d6de:	add    BYTE PTR [eax+ecx*2-0x34],ah
6400d6e2:	add    BYTE PTR [esp+edi*8-0x35],ah
6400d6e6:	add    BYTE PTR [eax+edx*2-0x34],ah
6400d6ea:	add    BYTE PTR [esp+ebx*4-0x34],ah
6400d6ee:	add    BYTE PTR [edx+eiz*8-0x34],ah
6400d6f2:	add    BYTE PTR [ebx+esi*2-0x33],ah
6400d6f6:	add    BYTE PTR [esp+ebx*8-0x33],ah
6400d6fa:	add    BYTE PTR [esp+ebx*1-0x32],ah
6400d6fe:	add    BYTE PTR [eax+eax*2-0x32],ah
6400d702:	add    BYTE PTR [ebx+eax*8-0x32],ah
6400d706:	add    BYTE PTR [ebx+ebx*8-0x32],ah
6400d70a:	add    BYTE PTR [esp+ecx*8-0x32],ah
6400d70e:	add    BYTE PTR [esp+edx*1-0x31],ah
6400d712:	add    BYTE PTR [edi+edx*4-0x31],ah
6400d716:	add    BYTE PTR [ecx+eiz*2-0x30],ah
6400d71a:	add    BYTE PTR [edi+eiz*2-0x30],ah
6400d71e:	add    BYTE PTR [esi+ecx*1-0x2f],ah
6400d722:	add    BYTE PTR [ecx+ebp*1-0x2f],ah
6400d726:	add    BYTE PTR [edx+ebx*4-0x2f],ah
6400d72a:	add    BYTE PTR [ecx+esi*8-0x2f],ah
6400d72e:	add    BYTE PTR [edx+ebx*4-0x2e],ah
6400d732:	add    BYTE PTR [ebp+esi*1-0x2d],ah
6400d736:	add    BYTE PTR [edx+ebx*8-0x2d],ah
6400d73a:	add    BYTE PTR [eax+edi*1-0x2c],ah
6400d73e:	add    BYTE PTR [edx+ecx*8-0x2d],ah
6400d742:	add    BYTE PTR [ebx+edx*8-0x2d],ah
6400d746:	add    BYTE PTR [edx+esi*1-0x2f],ah
6400d74a:	add    BYTE PTR [eax+ecx*2-0x2f],ah
6400d74e:	add    BYTE PTR [ecx+esi*2-0x2f],ah
6400d752:	add    BYTE PTR [edi+ecx*1-0x33],ah
6400d756:	add    BYTE PTR [edx+ebx*1-0x33],ah
6400d75a:	add    BYTE PTR [ebp+esi*1-0x33],ah
6400d75e:	add    BYTE PTR [ecx+edx*2-0x33],ah
6400d762:	add    BYTE PTR [ecx+ebp*1-0x33],ah
6400d766:	add    BYTE PTR [edx+edx*4-0x2b],ah
6400d76a:	add    BYTE PTR [edx+esi*2-0x2c],ah
6400d76e:	add    BYTE PTR [esp+eax*4-0x2c],ah
6400d772:	add    BYTE PTR [esp+ecx*8-0x2c],ah
6400d776:	add    BYTE PTR [ebp+esi*8-0x2c],ah
6400d77a:	add    BYTE PTR [ebx+eax*2-0x2b],ah
6400d77e:	add    BYTE PTR [eax+ebx*2-0x2b],ah
6400d782:	add    BYTE PTR [edx+ebp*2-0x2b],ah
6400d786:	add    BYTE PTR [eax+ebx*2-0x38],ah
6400d78a:	add    BYTE PTR [eax+eax*1+0x1],ah
6400d78e:	add    al,BYTE PTR [ebx]
6400d790:	add    al,0x5
6400d792:	push   es
6400d793:	pop    es
6400d794:	or     BYTE PTR [ecx],cl
6400d796:	or     cl,BYTE PTR [ebx]
6400d798:	or     al,0xd
6400d79a:	xor    esi,DWORD PTR [ebx]
6400d79c:	xor    esi,DWORD PTR [ebx]
6400d79e:	xor    esi,DWORD PTR [ebx]
6400d7a0:	xor    esi,DWORD PTR [ebx]
6400d7a2:	xor    esi,DWORD PTR [ebx]
6400d7a4:	xor    esi,DWORD PTR [ebx]
6400d7a6:	xor    esi,DWORD PTR [ebx]
6400d7a8:	push   cs
6400d7a9:	movups xmm2,XMMWORD PTR [ecx]
6400d7ac:	adc    dl,BYTE PTR [ebx]
6400d7ae:	adc    al,0x14
6400d7b0:	xor    edx,DWORD PTR ds:0x33161633
6400d7b6:	xor    esi,DWORD PTR [ebx]
6400d7b8:	xor    esi,DWORD PTR [ebx]
6400d7ba:	xor    esi,DWORD PTR [ebx]
6400d7bc:	pop    ss
6400d7bd:	sbb    BYTE PTR [ecx],bl
6400d7bf:	sbb    bl,BYTE PTR [ebx]
6400d7c1:	sbb    al,0x1d
6400d7c3:	push   ds
6400d7c4:	pop    ds
6400d7c5:	and    BYTE PTR [ecx],ah
6400d7c7:	and    ah,BYTE PTR [ebx]
6400d7c9:	and    al,0x25
6400d7cb:	es daa 
6400d7cd:	xor    esi,DWORD PTR [ebx]
6400d7cf:	sub    BYTE PTR [ecx],ch
6400d7d1:	xor    esi,DWORD PTR [ebx]
6400d7d3:	xor    esi,DWORD PTR [ebx]
6400d7d5:	sub    dh,BYTE PTR [ebx]
6400d7d7:	xor    esi,DWORD PTR [ebx]
6400d7d9:	sub    esi,DWORD PTR [ebx]
6400d7db:	xor    ebp,DWORD PTR [ebp*1+0x33302f2e]
6400d7e2:	xor    DWORD PTR [edx],esi
6400d7e4:	int3   
6400d7e5:	int3   
6400d7e6:	int3   
6400d7e7:	int3   
6400d7e8:	int3   
6400d7e9:	int3   
6400d7ea:	int3   
6400d7eb:	int3   
6400d7ec:	int3   
6400d7ed:	int3   
6400d7ee:	int3   
6400d7ef:	int3   
6400d7f0:	mov    eax,DWORD PTR [esp+0x4]
6400d7f4:	add    eax,0xffffffda
6400d7f7:	cmp    eax,0xcd
6400d7fc:	ja     0x6400d81d
6400d7fe:	movzx  eax,BYTE PTR [eax+0x6400d82c]
6400d805:	jmp    DWORD PTR [eax*4+0x6400d820]
6400d80c:	xor    eax,eax
6400d80e:	cmp    DWORD PTR [esp+0x8],0x2
6400d813:	sete   al
6400d816:	ret    
6400d817:	mov    eax,0x1
6400d81c:	ret    
6400d81d:	xor    eax,eax
6400d81f:	ret    
6400d820:	pop    ss
6400d821:	fadd   DWORD PTR [eax]
6400d823:	fs or  al,0xd8
6400d826:	add    BYTE PTR [ebp+ebx*1-0x28],ah
6400d82a:	add    BYTE PTR [eax+eax*1+0x2],ah
6400d82e:	add    al,BYTE PTR [edx]
6400d830:	add    al,BYTE PTR [edx]
6400d832:	add    al,BYTE PTR [edx]
6400d834:	add    BYTE PTR [edx],al
6400d836:	add    al,BYTE PTR [edx]
6400d838:	add    al,BYTE PTR [edx]
6400d83a:	add    al,BYTE PTR [edx]
6400d83c:	add    BYTE PTR [edx],al
6400d83e:	add    al,BYTE PTR [edx]
6400d840:	add    al,BYTE PTR [edx]
6400d842:	add    al,BYTE PTR [edx]
6400d844:	add    BYTE PTR [edx],al
6400d846:	add    DWORD PTR [ecx],eax
6400d848:	add    DWORD PTR [ecx],eax
6400d84a:	add    DWORD PTR [ecx],eax
6400d84c:	add    DWORD PTR [ecx],eax
6400d84e:	add    DWORD PTR [ecx],eax
6400d850:	add    DWORD PTR [ecx],eax
6400d852:	add    DWORD PTR [ecx],eax
6400d854:	add    DWORD PTR [ecx],eax
6400d856:	add    al,BYTE PTR [edx]
6400d858:	add    al,BYTE PTR [edx]
6400d85a:	add    al,BYTE PTR [edx]
6400d85c:	add    al,BYTE PTR [edx]
6400d85e:	add    al,BYTE PTR [edx]
6400d860:	add    al,BYTE PTR [edx]
6400d862:	add    al,BYTE PTR [edx]
6400d864:	add    al,BYTE PTR [edx]
6400d866:	add    al,BYTE PTR [edx]
6400d868:	add    al,BYTE PTR [edx]
6400d86a:	add    BYTE PTR [eax],al
6400d86c:	add    BYTE PTR [eax],al
6400d86e:	add    al,BYTE PTR [edx]
6400d870:	add    al,BYTE PTR [edx]
6400d872:	add    al,BYTE PTR [edx]
6400d874:	add    al,BYTE PTR [edx]
6400d876:	add    al,BYTE PTR [edx]
6400d878:	add    al,BYTE PTR [edx]
6400d87a:	add    al,BYTE PTR [edx]
6400d87c:	add    al,BYTE PTR [edx]
6400d87e:	add    al,BYTE PTR [edx]
6400d880:	add    al,BYTE PTR [edx]
6400d882:	add    al,BYTE PTR [edx]
6400d884:	add    al,BYTE PTR [edx]
6400d886:	add    al,BYTE PTR [edx]
6400d888:	add    al,BYTE PTR [edx]
6400d88a:	add    al,BYTE PTR [edx]
6400d88c:	add    al,BYTE PTR [edx]
6400d88e:	add    al,BYTE PTR [edx]
6400d890:	add    al,BYTE PTR [edx]
6400d892:	add    al,BYTE PTR [edx]
6400d894:	add    al,BYTE PTR [edx]
6400d896:	add    al,BYTE PTR [edx]
6400d898:	add    al,BYTE PTR [edx]
6400d89a:	add    al,BYTE PTR [edx]
6400d89c:	add    al,BYTE PTR [edx]
6400d89e:	add    al,BYTE PTR [edx]
6400d8a0:	add    al,BYTE PTR [edx]
6400d8a2:	add    al,BYTE PTR [edx]
6400d8a4:	add    al,BYTE PTR [edx]
6400d8a6:	add    al,BYTE PTR [edx]
6400d8a8:	add    al,BYTE PTR [edx]
6400d8aa:	add    al,BYTE PTR [edx]
6400d8ac:	add    al,BYTE PTR [edx]
6400d8ae:	add    al,BYTE PTR [edx]
6400d8b0:	add    al,BYTE PTR [edx]
6400d8b2:	add    al,BYTE PTR [edx]
6400d8b4:	add    al,BYTE PTR [edx]
6400d8b6:	add    al,BYTE PTR [edx]
6400d8b8:	add    al,BYTE PTR [edx]
6400d8ba:	add    al,BYTE PTR [edx]
6400d8bc:	add    al,BYTE PTR [edx]
6400d8be:	add    al,BYTE PTR [edx]
6400d8c0:	add    al,BYTE PTR [edx]
6400d8c2:	add    al,BYTE PTR [edx]
6400d8c4:	add    al,BYTE PTR [edx]
6400d8c6:	add    al,BYTE PTR [edx]
6400d8c8:	add    al,BYTE PTR [edx]
6400d8ca:	add    BYTE PTR [eax],al
6400d8cc:	add    al,BYTE PTR [edx]
6400d8ce:	add    al,BYTE PTR [edx]
6400d8d0:	add    al,BYTE PTR [edx]
6400d8d2:	add    al,BYTE PTR [edx]
6400d8d4:	add    al,BYTE PTR [edx]
6400d8d6:	add    al,BYTE PTR [edx]
6400d8d8:	add    al,BYTE PTR [edx]
6400d8da:	add    al,BYTE PTR [edx]
6400d8dc:	add    al,BYTE PTR [edx]
6400d8de:	add    al,BYTE PTR [edx]
6400d8e0:	add    al,BYTE PTR [edx]
6400d8e2:	add    al,BYTE PTR [edx]
6400d8e4:	add    al,BYTE PTR [edx]
6400d8e6:	add    al,BYTE PTR [edx]
6400d8e8:	add    al,BYTE PTR [edx]
6400d8ea:	add    al,BYTE PTR [edx]
6400d8ec:	add    al,BYTE PTR [edx]
6400d8ee:	add    al,BYTE PTR [edx]
6400d8f0:	add    al,BYTE PTR [edx]
6400d8f2:	add    al,BYTE PTR [edx]
6400d8f4:	add    al,BYTE PTR [edx]
6400d8f6:	add    BYTE PTR [edx],al
6400d8f8:	add    BYTE PTR [eax],al
6400d8fa:	int3   
6400d8fb:	int3   
6400d8fc:	int3   
6400d8fd:	int3   
6400d8fe:	int3   
6400d8ff:	int3   
6400d900:	mov    eax,DWORD PTR [esp+0x4]
6400d904:	mov    ecx,DWORD PTR [esp+0x8]
6400d908:	mov    ecx,DWORD PTR [eax+ecx*4+0x2c]
6400d90c:	cmp    ecx,0xffffffff
6400d90f:	je     0x6400d91c
6400d911:	mov    edx,0x1
6400d916:	shl    edx,cl
6400d918:	or     WORD PTR [eax+0x1c],dx
6400d91c:	ret    
6400d91d:	int3   
6400d91e:	int3   
6400d91f:	int3   
6400d920:	push   esi
6400d921:	push   edi
6400d922:	mov    edi,DWORD PTR [esp+0xc]
6400d926:	xor    esi,esi
6400d928:	push   esi
6400d929:	push   edi
6400d92a:	call   0x6400d900
6400d92f:	add    esi,0x1
6400d932:	add    esp,0x8
6400d935:	cmp    esi,0x5
6400d938:	jl     0x6400d928
6400d93a:	pop    edi
6400d93b:	pop    esi
6400d93c:	ret    
6400d93d:	int3   
6400d93e:	int3   
6400d93f:	int3   
6400d940:	push   ebx
6400d941:	push   esi
6400d942:	mov    esi,DWORD PTR [esp+0xc]
6400d946:	mov    ebx,DWORD PTR [esi+0x4]
6400d949:	xor    ebx,DWORD PTR [esi]
6400d94b:	test   ebx,0x2000000
6400d951:	je     0x6400d95e
6400d953:	push   0x0
6400d955:	push   esi
6400d956:	call   0x6400d900
6400d95b:	add    esp,0x8
6400d95e:	test   ebx,0x1f80
6400d964:	je     0x6400d971
6400d966:	push   0x2
6400d968:	push   esi
6400d969:	call   0x6400d900
6400d96e:	add    esp,0x8
6400d971:	test   bl,0x70
6400d974:	je     0x6400d981
6400d976:	push   0x1
6400d978:	push   esi
6400d979:	call   0x6400d900
6400d97e:	add    esp,0x8
6400d981:	test   ebx,0x2000
6400d987:	je     0x6400d994
6400d989:	push   0x3
6400d98b:	push   esi
6400d98c:	call   0x6400d900
6400d991:	add    esp,0x8
6400d994:	test   ebx,0x4000
6400d99a:	je     0x6400d9a7
6400d99c:	push   0x4
6400d99e:	push   esi
6400d99f:	call   0x6400d900
6400d9a4:	add    esp,0x8
6400d9a7:	mov    ax,WORD PTR [esi+0x1c]
6400d9ab:	pop    esi
6400d9ac:	pop    ebx
6400d9ad:	ret    
6400d9ae:	int3   
6400d9af:	int3   
6400d9b0:	push   esi
6400d9b1:	mov    esi,DWORD PTR [esp+0x10]
6400d9b5:	push   edi
6400d9b6:	mov    edi,DWORD PTR [esp+0xc]
6400d9ba:	push   esi
6400d9bb:	push   edi
6400d9bc:	call   0x6400d900
6400d9c1:	mov    eax,DWORD PTR [esp+0x18]
6400d9c5:	add    esp,0x8
6400d9c8:	mov    DWORD PTR [edi+esi*4+0x2c],eax
6400d9cc:	pop    edi
6400d9cd:	pop    esi
6400d9ce:	ret    
6400d9cf:	int3   
6400d9d0:	push   ebx
6400d9d1:	mov    ebx,DWORD PTR [esp+0x8]
6400d9d5:	push   esi
6400d9d6:	mov    esi,DWORD PTR [esp+0x14]
6400d9da:	push   edi
6400d9db:	xor    edi,edi
6400d9dd:	cmp    DWORD PTR [esp+0x14],edi
6400d9e1:	jle    0x6400db37
6400d9e7:	mov    eax,ebx
6400d9e9:	sub    eax,DWORD PTR [esi+0x8]
6400d9ec:	cmp    eax,0xf
6400d9ef:	jge    0x6400db37
6400d9f5:	movzx  eax,BYTE PTR [ebx]
6400d9f8:	add    eax,0xffffffda
6400d9fb:	cmp    eax,0xcd
6400da00:	ja     0x6400db37
6400da06:	movzx  ecx,BYTE PTR [eax+0x6400dc44]
6400da0d:	jmp    DWORD PTR [ecx*4+0x6400dc10]
6400da14:	cmp    DWORD PTR [esp+0x1c],0x2
6400da19:	jne    0x6400db37
6400da1f:	or     DWORD PTR [esi],0x2000000
6400da25:	movzx  edx,BYTE PTR [ebx]
6400da28:	push   0x0
6400da2a:	and    edx,0xf
6400da2d:	push   edi
6400da2e:	push   esi
6400da2f:	mov    DWORD PTR [esi+0x28],edx
6400da32:	mov    DWORD PTR [esi+0x14],ebx
6400da35:	mov    DWORD PTR [esi+0x18],0x1
6400da3c:	call   0x6400d9b0
6400da41:	add    esp,0xc
6400da44:	jmp    0x6400db1e
6400da49:	or     DWORD PTR [esi],0x10
6400da4c:	push   0x1
6400da4e:	push   esi
6400da4f:	call   0x6400d900
6400da54:	mov    DWORD PTR [esi+0x30],edi
6400da57:	jmp    0x6400db1b
6400da5c:	or     DWORD PTR [esi],0x20
6400da5f:	push   0x1
6400da61:	push   esi
6400da62:	call   0x6400d900
6400da67:	mov    DWORD PTR [esi+0x30],edi
6400da6a:	jmp    0x6400db1b
6400da6f:	or     DWORD PTR [esi],0x40
6400da72:	push   0x1
6400da74:	push   esi
6400da75:	call   0x6400d900
6400da7a:	mov    DWORD PTR [esi+0x30],edi
6400da7d:	jmp    0x6400db1b
6400da82:	or     DWORD PTR [esi],0x80
6400da88:	push   0x2
6400da8a:	push   esi
6400da8b:	call   0x6400d900
6400da90:	mov    DWORD PTR [esi+0x34],edi
6400da93:	jmp    0x6400db1b
6400da98:	or     DWORD PTR [esi],0x100
6400da9e:	push   0x2
6400daa0:	push   esi
6400daa1:	call   0x6400d900
6400daa6:	mov    DWORD PTR [esi+0x34],edi
6400daa9:	jmp    0x6400db1b
6400daab:	or     DWORD PTR [esi],0x200
6400dab1:	push   0x2
6400dab3:	push   esi
6400dab4:	call   0x6400d900
6400dab9:	mov    DWORD PTR [esi+0x34],edi
6400dabc:	jmp    0x6400db1b
6400dabe:	or     DWORD PTR [esi],0x400
6400dac4:	push   0x2
6400dac6:	push   esi
6400dac7:	call   0x6400d900
6400dacc:	mov    DWORD PTR [esi+0x34],edi
6400dacf:	jmp    0x6400db1b
6400dad1:	or     DWORD PTR [esi],0x800
6400dad7:	push   0x2
6400dad9:	push   esi
6400dada:	call   0x6400d900
6400dadf:	mov    DWORD PTR [esi+0x34],edi
6400dae2:	jmp    0x6400db1b
6400dae4:	or     DWORD PTR [esi],0x1000
6400daea:	push   0x2
6400daec:	push   esi
6400daed:	call   0x6400d900
6400daf2:	mov    DWORD PTR [esi+0x34],edi
6400daf5:	jmp    0x6400db1b
6400daf7:	or     DWORD PTR [esi],0x2000
6400dafd:	push   0x3
6400daff:	push   esi
6400db00:	call   0x6400d900
6400db05:	mov    DWORD PTR [esi+0x38],edi
6400db08:	jmp    0x6400db1b
6400db0a:	or     DWORD PTR [esi],0x4000
6400db10:	push   0x4
6400db12:	push   esi
6400db13:	call   0x6400d900
6400db18:	mov    DWORD PTR [esi+0x3c],edi
6400db1b:	add    esp,0x8
6400db1e:	mov    eax,DWORD PTR [esp+0x14]
6400db22:	sub    eax,0x1
6400db25:	add    ebx,0x1
6400db28:	add    edi,0x1
6400db2b:	test   eax,eax
6400db2d:	mov    DWORD PTR [esp+0x14],eax
6400db31:	jg     0x6400d9e7
6400db37:	mov    eax,0x2
6400db3c:	cmp    DWORD PTR [esp+0x14],eax
6400db40:	mov    dl,0xc0
6400db42:	jl     0x6400db91
6400db44:	cmp    BYTE PTR [ebx],0xc5
6400db47:	jne    0x6400db91
6400db49:	mov    ecx,ebx
6400db4b:	sub    ecx,DWORD PTR [esi+0x8]
6400db4e:	cmp    ecx,0xd
6400db51:	jg     0x6400db91
6400db53:	cmp    DWORD PTR [esp+0x1c],eax
6400db57:	je     0x6400db5e
6400db59:	cmp    BYTE PTR [ebx+0x1],dl
6400db5c:	jb     0x6400db91
6400db5e:	or     DWORD PTR [esi],0x20000000
6400db64:	lea    eax,[ebx+0x1]
6400db67:	mov    edi,0x2
6400db6c:	mov    DWORD PTR [esi+0x10],eax
6400db6f:	mov    DWORD PTR [esi+0x18],edi
6400db72:	mov    al,BYTE PTR [eax]
6400db74:	movzx  ecx,al
6400db77:	not    ecx
6400db79:	test   cl,cl
6400db7b:	jns    0x6400db87
6400db7d:	cmp    DWORD PTR [esp+0x1c],edi
6400db81:	jne    0x6400db87
6400db83:	or     DWORD PTR [esi+0x28],0x4
6400db87:	test   al,0x4
6400db89:	je     0x6400db8f
6400db8b:	or     DWORD PTR [esi+0x28],0x10
6400db8f:	add    ebx,edi
6400db91:	mov    edi,0x3
6400db96:	cmp    DWORD PTR [esp+0x14],edi
6400db9a:	jl     0x6400dc08
6400db9c:	cmp    BYTE PTR [ebx],0xc4
6400db9f:	jne    0x6400dc08
6400dba1:	mov    eax,ebx
6400dba3:	sub    eax,DWORD PTR [esi+0x8]
6400dba6:	cmp    eax,0xc
6400dba9:	jg     0x6400dc08
6400dbab:	mov    ecx,DWORD PTR [esi]
6400dbad:	mov    eax,ecx
6400dbaf:	not    eax
6400dbb1:	test   eax,0x20000000
6400dbb6:	je     0x6400dc08
6400dbb8:	cmp    DWORD PTR [esp+0x1c],0x2
6400dbbd:	je     0x6400dbc4
6400dbbf:	cmp    BYTE PTR [ebx+0x1],dl
6400dbc2:	jb     0x6400dc08
6400dbc4:	or     ecx,0x20000000
6400dbca:	lea    eax,[ebx+0x1]
6400dbcd:	mov    DWORD PTR [esi],ecx
6400dbcf:	mov    DWORD PTR [esi+0x10],eax
6400dbd2:	mov    DWORD PTR [esi+0x18],edi
6400dbd5:	movzx  ecx,BYTE PTR [eax]
6400dbd8:	not    ecx
6400dbda:	sar    ecx,0x5
6400dbdd:	and    ecx,0x7
6400dbe0:	or     DWORD PTR [esi+0x28],ecx
6400dbe3:	mov    al,BYTE PTR [eax+0x1]
6400dbe6:	test   al,0x4
6400dbe8:	mov    ecx,DWORD PTR [esi+0x28]
6400dbeb:	je     0x6400dbf3
6400dbed:	or     ecx,0x10
6400dbf0:	mov    DWORD PTR [esi+0x28],ecx
6400dbf3:	test   al,al
6400dbf5:	jns    0x6400dbfb
6400dbf7:	or     DWORD PTR [esi+0x28],0x8
6400dbfb:	cmp    DWORD PTR [esp+0x1c],0x2
6400dc00:	je     0x6400dc06
6400dc02:	and    DWORD PTR [esi+0x28],0xfffffff0
6400dc06:	add    ebx,edi
6400dc08:	pop    edi
6400dc09:	mov    DWORD PTR [esi+0xc],ebx
6400dc0c:	pop    esi
6400dc0d:	pop    ebx
6400dc0e:	ret    
6400dc0f:	nop
6400dc10:	mov    esi,0x826400da
6400dc15:	fiadd  DWORD PTR [eax]
6400dc17:	fs cwde 
6400dc19:	fiadd  DWORD PTR [eax]
6400dc1b:	fs stos DWORD PTR es:[edi],eax
6400dc1d:	fiadd  DWORD PTR [eax]
6400dc1f:	fs adc al,0xda
6400dc22:	add    BYTE PTR [ecx+edx*8-0x26],ah
6400dc26:	add    BYTE PTR [esp+eiz*8-0x26],ah
6400dc2a:	add    BYTE PTR [edi+esi*8-0x26],ah
6400dc2e:	add    BYTE PTR [edx+ecx*1-0x25],ah
6400dc32:	add    BYTE PTR [ecx+ecx*2-0x26],ah
6400dc36:	add    BYTE PTR [esp+ebx*2-0x26],ah
6400dc3a:	add    BYTE PTR [edi+ebp*2-0x26],ah
6400dc3e:	add    BYTE PTR [edi+esi*1-0x25],ah
6400dc42:	add    BYTE PTR [eax+eax*1+0xc],ah
6400dc46:	or     al,0xc
6400dc48:	or     al,0xc
6400dc4a:	or     al,0xc
6400dc4c:	add    DWORD PTR [esp+ecx*1],ecx
6400dc4f:	or     al,0xc
6400dc51:	or     al,0xc
6400dc53:	or     al,0x2
6400dc55:	or     al,0xc
6400dc57:	or     al,0xc
6400dc59:	or     al,0xc
6400dc5b:	or     al,0x3
6400dc5d:	or     al,0x4
6400dc5f:	add    al,0x4
6400dc61:	add    al,0x4
6400dc63:	add    al,0x4
6400dc65:	add    al,0x4
6400dc67:	add    al,0x4
6400dc69:	add    al,0x4
6400dc6b:	add    al,0x4
6400dc6d:	add    al,0xc
6400dc6f:	or     al,0xc
6400dc71:	or     al,0xc
6400dc73:	or     al,0xc
6400dc75:	or     al,0xc
6400dc77:	or     al,0xc
6400dc79:	or     al,0xc
6400dc7b:	or     al,0xc
6400dc7d:	or     al,0xc
6400dc7f:	or     al,0xc
6400dc81:	or     al,0x5
6400dc83:	push   es
6400dc84:	pop    es
6400dc85:	or     BYTE PTR [esp+ecx*1],cl
6400dc88:	or     al,0xc
6400dc8a:	or     al,0xc
6400dc8c:	or     al,0xc
6400dc8e:	or     al,0xc
6400dc90:	or     al,0xc
6400dc92:	or     al,0xc
6400dc94:	or     al,0xc
6400dc96:	or     al,0xc
6400dc98:	or     al,0xc
6400dc9a:	or     al,0xc
6400dc9c:	or     al,0xc
6400dc9e:	or     al,0xc
6400dca0:	or     al,0xc
6400dca2:	or     al,0xc
6400dca4:	or     al,0xc
6400dca6:	or     al,0xc
6400dca8:	or     al,0xc
6400dcaa:	or     al,0xc
6400dcac:	or     al,0xc
6400dcae:	or     al,0xc
6400dcb0:	or     al,0xc
6400dcb2:	or     al,0xc
6400dcb4:	or     al,0xc
6400dcb6:	or     al,0xc
6400dcb8:	or     al,0xc
6400dcba:	or     al,0xc
6400dcbc:	or     al,0xc
6400dcbe:	or     al,0xc
6400dcc0:	or     al,0xc
6400dcc2:	or     al,0xc
6400dcc4:	or     al,0xc
6400dcc6:	or     al,0xc
6400dcc8:	or     al,0xc
6400dcca:	or     al,0xc
6400dccc:	or     al,0xc
6400dcce:	or     al,0xc
6400dcd0:	or     al,0xc
6400dcd2:	or     al,0xc
6400dcd4:	or     al,0xc
6400dcd6:	or     al,0xc
6400dcd8:	or     al,0xc
6400dcda:	or     al,0xc
6400dcdc:	or     al,0xc
6400dcde:	or     al,0xc
6400dce0:	or     al,0xc
6400dce2:	or     al,0xc
6400dce4:	or     al,0xc
6400dce6:	or     al,0xc
6400dce8:	or     al,0xc
6400dcea:	or     al,0xc
6400dcec:	or     al,0xc
6400dcee:	or     al,0xc
6400dcf0:	or     al,0xc
6400dcf2:	or     al,0xc
6400dcf4:	or     al,0xc
6400dcf6:	or     al,0xc
6400dcf8:	or     al,0xc
6400dcfa:	or     al,0xc
6400dcfc:	or     al,0xc
6400dcfe:	or     al,0xc
6400dd00:	or     al,0xc
6400dd02:	or     al,0xc
6400dd04:	or     al,0xc
6400dd06:	or     al,0xc
6400dd08:	or     al,0xc
6400dd0a:	or     al,0xc
6400dd0c:	or     al,0xc
6400dd0e:	or     DWORD PTR [edx+ecx*1],ecx
6400dd11:	or     ecx,esp
6400dd13:	int3   
6400dd14:	int3   
6400dd15:	int3   
6400dd16:	int3   
6400dd17:	int3   
6400dd18:	int3   
6400dd19:	int3   
6400dd1a:	int3   
6400dd1b:	int3   
6400dd1c:	int3   
6400dd1d:	int3   
6400dd1e:	int3   
6400dd1f:	int3   
6400dd20:	push   esi
6400dd21:	mov    esi,DWORD PTR [esp+0xc]
6400dd25:	mov    eax,DWORD PTR [esi]
6400dd27:	push   edi
6400dd28:	mov    edi,DWORD PTR [esp+0x14]
6400dd2c:	cmp    edi,0x2
6400dd2f:	jne    0x6400dd38
6400dd31:	and    eax,0x1800
6400dd36:	jmp    0x6400dd3d
6400dd38:	and    eax,0x1f80
6400dd3d:	test   eax,eax
6400dd3f:	mov    ecx,DWORD PTR [esp+0x18]
6400dd43:	mov    edx,DWORD PTR [esp+0xc]
6400dd47:	je     0x6400dd52
6400dd49:	cmp    eax,edx
6400dd4b:	je     0x6400dd52
6400dd4d:	or     DWORD PTR [esi+0x4],eax
6400dd50:	jmp    0x6400dd58
6400dd52:	or     BYTE PTR [ecx+0xc],0x80
6400dd56:	mov    eax,edx
6400dd58:	cmp    eax,0x400
6400dd5d:	ja     0x6400dd8e
6400dd5f:	je     0x6400dd88
6400dd61:	cmp    eax,0x80
6400dd66:	je     0x6400dd82
6400dd68:	cmp    eax,0x100
6400dd6d:	je     0x6400dd7c
6400dd6f:	cmp    eax,0x200
6400dd74:	jne    0x6400dda6
6400dd76:	or     BYTE PTR [ecx+0xc],0x47
6400dd7a:	jmp    0x6400dda6
6400dd7c:	or     BYTE PTR [ecx+0xc],0x46
6400dd80:	jmp    0x6400dda6
6400dd82:	or     BYTE PTR [ecx+0xc],0x45
6400dd86:	jmp    0x6400dda6
6400dd88:	or     BYTE PTR [ecx+0xc],0x44
6400dd8c:	jmp    0x6400dda6
6400dd8e:	cmp    eax,0x800
6400dd93:	je     0x6400dda2
6400dd95:	cmp    eax,0x1000
6400dd9a:	jne    0x6400dda6
6400dd9c:	or     BYTE PTR [ecx+0xc],0x49
6400dda0:	jmp    0x6400dda6
6400dda2:	or     BYTE PTR [ecx+0xc],0x48
6400dda6:	cmp    edi,0x2
6400dda9:	pop    edi
6400ddaa:	pop    esi
6400ddab:	jne    0x6400ddb8
6400ddad:	test   eax,0x780
6400ddb2:	je     0x6400ddb8
6400ddb4:	mov    BYTE PTR [ecx+0xc],0xff
6400ddb8:	ret    
6400ddb9:	int3   
6400ddba:	int3   
6400ddbb:	int3   
6400ddbc:	int3   
6400ddbd:	int3   
6400ddbe:	int3   
6400ddbf:	int3   
6400ddc0:	mov    ecx,DWORD PTR [esi]
6400ddc2:	mov    eax,ecx
6400ddc4:	and    eax,0x2060
6400ddc9:	cmp    eax,0x40
6400ddcc:	push   edi
6400ddcd:	ja     0x6400de0f
6400ddcf:	je     0x6400ddfd
6400ddd1:	test   eax,eax
6400ddd3:	je     0x6400ddef
6400ddd5:	cmp    eax,0x20
6400ddd8:	jne    0x6400de16
6400ddda:	mov    eax,DWORD PTR [edx+0x4]
6400dddd:	movzx  eax,BYTE PTR [eax+0x3]
6400dde1:	mov    edi,DWORD PTR [edx+0x8]
6400dde4:	mov    eax,DWORD PTR [edi+eax*4]
6400dde7:	and    ecx,0xffffffdf
6400ddea:	jmp    0x6400de76
6400ddef:	mov    ecx,DWORD PTR [edx+0x4]
6400ddf2:	movzx  eax,BYTE PTR [ecx]
6400ddf5:	mov    ecx,DWORD PTR [edx+0x8]
6400ddf8:	mov    eax,DWORD PTR [ecx+eax*4]
6400ddfb:	jmp    0x6400de78
6400ddfd:	mov    eax,DWORD PTR [edx+0x4]
6400de00:	movzx  eax,BYTE PTR [eax+0x2]
6400de04:	mov    edi,DWORD PTR [edx+0x8]
6400de07:	mov    eax,DWORD PTR [edi+eax*4]
6400de0a:	and    ecx,0xffffffbf
6400de0d:	jmp    0x6400de76
6400de0f:	cmp    eax,0x2000
6400de14:	je     0x6400de5c
6400de16:	mov    eax,ecx
6400de18:	and    eax,0x60
6400de1b:	cmp    al,0x60
6400de1d:	je     0x6400de58
6400de1f:	test   cl,0x20
6400de22:	je     0x6400de30
6400de24:	mov    eax,DWORD PTR [edx+0x4]
6400de27:	movzx  eax,BYTE PTR [eax+0x3]
6400de2b:	and    ecx,0xffffffdf
6400de2e:	jmp    0x6400de3f
6400de30:	test   cl,0x40
6400de33:	je     0x6400de58
6400de35:	mov    eax,DWORD PTR [edx+0x4]
6400de38:	movzx  eax,BYTE PTR [eax+0x2]
6400de3c:	and    ecx,0xffffffbf
6400de3f:	mov    edi,DWORD PTR [edx+0x8]
6400de42:	mov    eax,DWORD PTR [edi+eax*4]
6400de45:	test   eax,eax
6400de47:	mov    DWORD PTR [esi],ecx
6400de49:	je     0x6400de58
6400de4b:	mov    ecx,DWORD PTR [eax+0x8]
6400de4e:	not    ecx
6400de50:	test   ecx,0x2000
6400de56:	je     0x6400de78
6400de58:	xor    eax,eax
6400de5a:	pop    edi
6400de5b:	ret    
6400de5c:	mov    eax,DWORD PTR [edx+0x4]
6400de5f:	movzx  eax,BYTE PTR [eax+0x1]
6400de63:	mov    edi,DWORD PTR [edx+0x8]
6400de66:	mov    eax,DWORD PTR [edi+eax*4]
6400de69:	mov    DWORD PTR [esi+0x20],0x1
6400de70:	and    ecx,0xffffdfff
6400de76:	mov    DWORD PTR [esi],ecx
6400de78:	test   eax,eax
6400de7a:	jne    0x6400de88
6400de7c:	mov    ecx,DWORD PTR [edx+0x4]
6400de7f:	movzx  eax,BYTE PTR [ecx]
6400de82:	mov    ecx,DWORD PTR [edx+0x8]
6400de85:	mov    eax,DWORD PTR [ecx+eax*4]
6400de88:	pop    edi
6400de89:	ret    
6400de8a:	int3   
6400de8b:	int3   
6400de8c:	int3   
6400de8d:	int3   
6400de8e:	int3   
6400de8f:	int3   
6400de90:	test   DWORD PTR [edx],0x2002070
6400de96:	mov    ecx,DWORD PTR [edx+0x10]
6400de99:	mov    al,BYTE PTR [ecx]
6400de9b:	push   ebx
6400de9c:	mov    ebx,0x4
6400dea1:	je     0x6400dea7
6400dea3:	xor    eax,eax
6400dea5:	pop    ebx
6400dea6:	ret    
6400dea7:	cmp    DWORD PTR [edx+0x18],0x2
6400deab:	push   ebp
6400deac:	push   esi
6400dead:	jne    0x6400dec8
6400deaf:	movzx  ecx,al
6400deb2:	mov    eax,ecx
6400deb4:	not    eax
6400deb6:	sar    eax,0x3
6400deb9:	and    al,0xf
6400debb:	movzx  esi,al
6400debe:	mov    DWORD PTR [edx+0x24],esi
6400dec1:	mov    esi,0x1
6400dec6:	jmp    0x6400dee0
6400dec8:	movzx  ecx,BYTE PTR [ecx+0x1]
6400decc:	and    eax,0x1f
6400decf:	mov    esi,eax
6400ded1:	mov    eax,ecx
6400ded3:	not    eax
6400ded5:	sar    eax,0x3
6400ded8:	and    al,0xf
6400deda:	movzx  ebp,al
6400dedd:	mov    DWORD PTR [edx+0x24],ebp
6400dee0:	and    ecx,0x3
6400dee3:	sub    esi,0x1
6400dee6:	je     0x6400df04
6400dee8:	sub    esi,0x1
6400deeb:	je     0x6400defd
6400deed:	sub    esi,0x1
6400def0:	jne    0x6400dfa1
6400def6:	mov    edx,0x6404df3c
6400defb:	jmp    0x6400df09
6400defd:	mov    edx,0x6404faac
6400df02:	jmp    0x6400df09
6400df04:	mov    edx,0x64051328
6400df09:	test   al,al
6400df0b:	jne    0x6400df12
6400df0d:	mov    ebx,0x8
6400df12:	add    ebx,ecx
6400df14:	add    DWORD PTR [edi+0x14],0xffffffff
6400df18:	mov    esi,DWORD PTR [edi+0x14]
6400df1b:	js     0x6400dfa1
6400df21:	mov    ecx,DWORD PTR [edi+0x10]
6400df24:	movzx  eax,BYTE PTR [ecx]
6400df27:	mov    ebp,DWORD PTR [edx+0x4]
6400df2a:	movzx  eax,BYTE PTR [eax+ebp*1]
6400df2e:	mov    edx,DWORD PTR [edx+0x8]
6400df31:	mov    eax,DWORD PTR [edx+eax*4]
6400df34:	test   eax,eax
6400df36:	je     0x6400dfa1
6400df38:	mov    dl,BYTE PTR [eax]
6400df3a:	cmp    dl,0x5
6400df3d:	je     0x6400df90
6400df3f:	cmp    dl,0x1
6400df42:	je     0x6400dfa1
6400df44:	cmp    dl,0x4
6400df47:	je     0x6400dfa1
6400df49:	lea    edx,[ecx+0x1]
6400df4c:	lea    ecx,[esi-0x1]
6400df4f:	test   ecx,ecx
6400df51:	mov    DWORD PTR [edi+0x10],edx
6400df54:	mov    DWORD PTR [edi+0x14],ecx
6400df57:	jl     0x6400dfa1
6400df59:	mov    cl,BYTE PTR [eax]
6400df5b:	cmp    cl,0x2
6400df5e:	jne    0x6400df72
6400df60:	movzx  ecx,BYTE PTR [edx]
6400df63:	mov    edx,DWORD PTR [eax+0x4]
6400df66:	shr    ecx,0x3
6400df69:	and    ecx,0x7
6400df6c:	movzx  ecx,BYTE PTR [ecx+edx*1]
6400df70:	jmp    0x6400df81
6400df72:	cmp    cl,0x3
6400df75:	jne    0x6400dfa1
6400df77:	movzx  ecx,BYTE PTR [edx]
6400df7a:	mov    edx,DWORD PTR [eax+0x4]
6400df7d:	movzx  ecx,BYTE PTR [edx+ecx*1]
6400df81:	mov    edx,DWORD PTR [eax+0x8]
6400df84:	mov    eax,DWORD PTR [edx+ecx*4]
6400df87:	test   eax,eax
6400df89:	je     0x6400dfa1
6400df8b:	cmp    BYTE PTR [eax],0x5
6400df8e:	jne    0x6400dfa1
6400df90:	mov    ecx,DWORD PTR [eax+0x4]
6400df93:	movzx  edx,BYTE PTR [ecx+ebx*1]
6400df97:	mov    eax,DWORD PTR [eax+0x8]
6400df9a:	mov    eax,DWORD PTR [eax+edx*4]
6400df9d:	pop    esi
6400df9e:	pop    ebp
6400df9f:	pop    ebx
6400dfa0:	ret    
6400dfa1:	pop    esi
6400dfa2:	pop    ebp
6400dfa3:	xor    eax,eax
6400dfa5:	pop    ebx
6400dfa6:	ret    
6400dfa7:	int3   
6400dfa8:	int3   
6400dfa9:	int3   
6400dfaa:	int3   
6400dfab:	int3   
6400dfac:	int3   
6400dfad:	int3   
6400dfae:	int3   
6400dfaf:	int3   
6400dfb0:	sub    esp,0x8
6400dfb3:	push   ebx
6400dfb4:	push   esi
6400dfb5:	mov    esi,DWORD PTR [esp+0x18]
6400dfb9:	mov    eax,DWORD PTR [esi+0x28]
6400dfbc:	xor    ebx,ebx
6400dfbe:	test   DWORD PTR [esi],0x20000000
6400dfc4:	push   edi
6400dfc5:	mov    edi,DWORD PTR [esp+0x18]
6400dfc9:	mov    DWORD PTR [esp+0x10],eax
6400dfcd:	je     0x6400dfff
6400dfcf:	mov    edx,esi
6400dfd1:	call   0x6400de90
6400dfd6:	test   eax,eax
6400dfd8:	je     0x6400e298
6400dfde:	test   BYTE PTR [eax+0xc],0x10
6400dfe2:	je     0x6400e298
6400dfe8:	mov    ecx,DWORD PTR [esi+0x28]
6400dfeb:	not    ecx
6400dfed:	test   cl,0x10
6400dff0:	je     0x6400e298
6400dff6:	pop    edi
6400dff7:	pop    esi
6400dff8:	xor    eax,eax
6400dffa:	pop    ebx
6400dffb:	add    esp,0x8
6400dffe:	ret    
6400dfff:	push   ebp
6400e000:	or     ebp,0xffffffff
6400e003:	add    DWORD PTR [edi+0x14],ebp
6400e006:	mov    eax,DWORD PTR [edi+0x14]
6400e009:	js     0x6400e295
6400e00f:	mov    edx,DWORD PTR [edi+0x10]
6400e012:	movzx  ecx,BYTE PTR [edx]
6400e015:	cmp    ecx,0x9b
6400e01b:	mov    DWORD PTR [esp+0x10],ecx
6400e01f:	jne    0x6400e046
6400e021:	push   esi
6400e022:	lea    ebx,[ebp+0x2]
6400e025:	call   0x6400d920
6400e02a:	add    DWORD PTR [edi+0x10],ebx
6400e02d:	mov    ecx,DWORD PTR [edi+0x10]
6400e030:	add    esp,0x4
6400e033:	add    DWORD PTR [edi+0x14],ebp
6400e036:	mov    eax,DWORD PTR [edi+0x14]
6400e039:	js     0x6400e295
6400e03f:	movzx  ecx,BYTE PTR [ecx]
6400e042:	mov    DWORD PTR [esp+0x10],ecx
6400e046:	mov    edx,DWORD PTR ds:0x64052088
6400e04c:	movzx  edx,BYTE PTR [edx+ecx*1]
6400e050:	mov    ebp,DWORD PTR ds:0x6405208c
6400e056:	mov    ebp,DWORD PTR [ebp+edx*4+0x0]
6400e05a:	test   ebp,ebp
6400e05c:	je     0x6400e295
6400e062:	cmp    BYTE PTR [ebp+0x0],0x1
6400e066:	jne    0x6400e0fa
6400e06c:	test   ebx,ebx
6400e06e:	jne    0x6400e0fa
6400e074:	mov    eax,ecx
6400e076:	sub    eax,0x63
6400e079:	je     0x6400e0de
6400e07b:	sub    eax,0x2a
6400e07e:	je     0x6400e0c3
6400e080:	sub    eax,0x3
6400e083:	jne    0x6400e0d4
6400e085:	test   BYTE PTR [esi],0x40
6400e088:	je     0x6400e09b
6400e08a:	or     DWORD PTR [esi+0x4],0x40
6400e08e:	pop    ebp
6400e08f:	pop    edi
6400e090:	pop    esi
6400e091:	mov    eax,0x640520c0
6400e096:	pop    ebx
6400e097:	add    esp,0x8
6400e09a:	ret    
6400e09b:	mov    eax,DWORD PTR [esp+0x14]
6400e09f:	test   al,0x8
6400e0a1:	je     0x6400e0aa
6400e0a3:	or     DWORD PTR [esi+0x4],0x2000000
6400e0aa:	cmp    DWORD PTR [edi+0x18],0x2
6400e0ae:	jne    0x6400e0b6
6400e0b0:	not    eax
6400e0b2:	test   al,0x1
6400e0b4:	je     0x6400e0d4
6400e0b6:	pop    ebp
6400e0b7:	pop    edi
6400e0b8:	pop    esi
6400e0b9:	mov    eax,0x640520b4
6400e0be:	pop    ebx
6400e0bf:	add    esp,0x8
6400e0c2:	ret    
6400e0c3:	and    DWORD PTR [esi],0xffffe07f
6400e0c9:	push   0x2
6400e0cb:	push   esi
6400e0cc:	call   0x6400d900
6400e0d1:	add    esp,0x8
6400e0d4:	mov    eax,ebp
6400e0d6:	pop    ebp
6400e0d7:	pop    edi
6400e0d8:	pop    esi
6400e0d9:	pop    ebx
6400e0da:	add    esp,0x8
6400e0dd:	ret    
6400e0de:	cmp    DWORD PTR [edi+0x18],0x2
6400e0e2:	mov    eax,0x6405209c
6400e0e7:	je     0x6400e297
6400e0ed:	pop    ebp
6400e0ee:	pop    edi
6400e0ef:	pop    esi
6400e0f0:	mov    eax,0x64052090
6400e0f5:	pop    ebx
6400e0f6:	add    esp,0x8
6400e0f9:	ret    
6400e0fa:	add    DWORD PTR [edi+0x10],0x1
6400e0fe:	mov    esi,DWORD PTR [edi+0x10]
6400e101:	lea    edx,[eax-0x1]
6400e104:	test   edx,edx
6400e106:	mov    DWORD PTR [edi+0x14],edx
6400e109:	jl     0x6400e295
6400e10f:	mov    cl,BYTE PTR [ebp+0x0]
6400e112:	cmp    cl,0x2
6400e115:	movzx  eax,BYTE PTR [esi]
6400e118:	jne    0x6400e139
6400e11a:	test   ebx,ebx
6400e11c:	jne    0x6400e139
6400e11e:	mov    ecx,DWORD PTR [ebp+0x4]
6400e121:	shr    eax,0x3
6400e124:	and    eax,0x7
6400e127:	movzx  edx,BYTE PTR [eax+ecx*1]
6400e12b:	mov    eax,DWORD PTR [ebp+0x8]
6400e12e:	mov    eax,DWORD PTR [eax+edx*4]
6400e131:	pop    ebp
6400e132:	pop    edi
6400e133:	pop    esi
6400e134:	pop    ebx
6400e135:	add    esp,0x8
6400e138:	ret    
6400e139:	cmp    cl,0x4
6400e13c:	jne    0x6400e1a2
6400e13e:	cmp    eax,0xc0
6400e143:	jae    0x6400e14d
6400e145:	shr    eax,0x3
6400e148:	and    eax,0x7
6400e14b:	jmp    0x6400e152
6400e14d:	sub    eax,0xb8
6400e152:	mov    ecx,DWORD PTR [ebp+0x4]
6400e155:	movzx  edx,BYTE PTR [ecx+eax*1]
6400e159:	mov    eax,DWORD PTR [ebp+0x8]
6400e15c:	mov    eax,DWORD PTR [eax+edx*4]
6400e15f:	test   eax,eax
6400e161:	je     0x6400e295
6400e167:	cmp    BYTE PTR [eax],0x1
6400e16a:	jne    0x6400e18d
6400e16c:	mov    ecx,DWORD PTR [eax+0x8]
6400e16f:	not    ecx
6400e171:	test   ecx,0x2000
6400e177:	je     0x6400e297
6400e17d:	test   ebx,ebx
6400e17f:	jne    0x6400e295
6400e185:	pop    ebp
6400e186:	pop    edi
6400e187:	pop    esi
6400e188:	pop    ebx
6400e189:	add    esp,0x8
6400e18c:	ret    
6400e18d:	mov    edx,DWORD PTR [eax+0x4]
6400e190:	movzx  ecx,BYTE PTR [edx+ebx*1]
6400e194:	mov    edx,DWORD PTR [eax+0x8]
6400e197:	mov    eax,DWORD PTR [edx+ecx*4]
6400e19a:	pop    ebp
6400e19b:	pop    edi
6400e19c:	pop    esi
6400e19d:	pop    ebx
6400e19e:	add    esp,0x8
6400e1a1:	ret    
6400e1a2:	test   ebx,ebx
6400e1a4:	jne    0x6400e295
6400e1aa:	cmp    cl,0x3
6400e1ad:	jne    0x6400e1ff
6400e1af:	mov    ecx,DWORD PTR [ebp+0x4]
6400e1b2:	movzx  ecx,BYTE PTR [ecx+eax*1]
6400e1b6:	mov    ebx,DWORD PTR [ebp+0x8]
6400e1b9:	mov    ebp,DWORD PTR [ebx+ecx*4]
6400e1bc:	test   ebp,ebp
6400e1be:	je     0x6400e295
6400e1c4:	cmp    DWORD PTR [esp+0x10],0xf
6400e1c9:	jne    0x6400e1dd
6400e1cb:	cmp    eax,0xf
6400e1ce:	jne    0x6400e1dd
6400e1d0:	pop    ebp
6400e1d1:	pop    edi
6400e1d2:	pop    esi
6400e1d3:	mov    eax,0x64048cc4
6400e1d8:	pop    ebx
6400e1d9:	add    esp,0x8
6400e1dc:	ret    
6400e1dd:	mov    al,BYTE PTR [ebp+0x0]
6400e1e0:	cmp    al,0x1
6400e1e2:	je     0x6400e0d4
6400e1e8:	cmp    al,0x5
6400e1ea:	jne    0x6400e1ff
6400e1ec:	mov    esi,DWORD PTR [esp+0x20]
6400e1f0:	mov    edx,ebp
6400e1f2:	call   0x6400ddc0
6400e1f7:	pop    ebp
6400e1f8:	pop    edi
6400e1f9:	pop    esi
6400e1fa:	pop    ebx
6400e1fb:	add    esp,0x8
6400e1fe:	ret    
6400e1ff:	lea    ecx,[edx-0x1]
6400e202:	test   ecx,ecx
6400e204:	lea    eax,[esi+0x1]
6400e207:	mov    DWORD PTR [edi+0x10],eax
6400e20a:	mov    DWORD PTR [edi+0x14],ecx
6400e20d:	jl     0x6400e295
6400e213:	movzx  ecx,BYTE PTR [eax]
6400e216:	mov    edi,DWORD PTR [ebp+0x4]
6400e219:	mov    esi,DWORD PTR [ebp+0x8]
6400e21c:	mov    edx,ecx
6400e21e:	shr    edx,0x3
6400e221:	and    edx,0x7
6400e224:	movzx  eax,BYTE PTR [edx+edi*1]
6400e228:	mov    dl,BYTE PTR [ebp+0x0]
6400e22b:	cmp    dl,0x2
6400e22e:	mov    eax,DWORD PTR [esi+eax*4]
6400e231:	jne    0x6400e24f
6400e233:	test   eax,eax
6400e235:	je     0x6400e295
6400e237:	cmp    BYTE PTR [eax],0x1
6400e23a:	je     0x6400e297
6400e23c:	mov    esi,DWORD PTR [esp+0x20]
6400e240:	mov    edx,eax
6400e242:	call   0x6400ddc0
6400e247:	pop    ebp
6400e248:	pop    edi
6400e249:	pop    esi
6400e24a:	pop    ebx
6400e24b:	add    esp,0x8
6400e24e:	ret    
6400e24f:	cmp    dl,0x4
6400e252:	jne    0x6400e279
6400e254:	test   eax,eax
6400e256:	je     0x6400e25e
6400e258:	test   BYTE PTR [eax+0x8],0x2
6400e25c:	jne    0x6400e297
6400e25e:	cmp    ecx,0xc0
6400e264:	jb     0x6400e297
6400e266:	movzx  ecx,BYTE PTR [edi+ecx*1-0xb8]
6400e26e:	mov    eax,DWORD PTR [esi+ecx*4]
6400e271:	pop    ebp
6400e272:	pop    edi
6400e273:	pop    esi
6400e274:	pop    ebx
6400e275:	add    esp,0x8
6400e278:	ret    
6400e279:	cmp    dl,0x3
6400e27c:	jne    0x6400e295
6400e27e:	movzx  edx,BYTE PTR [edi+ecx*1]
6400e282:	mov    eax,DWORD PTR [esi+edx*4]
6400e285:	test   eax,eax
6400e287:	je     0x6400e295
6400e289:	mov    cl,BYTE PTR [eax]
6400e28b:	cmp    cl,0x1
6400e28e:	je     0x6400e297
6400e290:	cmp    cl,0x5
6400e293:	je     0x6400e23c
6400e295:	xor    eax,eax
6400e297:	pop    ebp
6400e298:	pop    edi
6400e299:	pop    esi
6400e29a:	pop    ebx
6400e29b:	add    esp,0x8
6400e29e:	ret    
6400e29f:	int3   
6400e2a0:	mov    ecx,DWORD PTR [esp+0x4]
6400e2a4:	push   esi
6400e2a5:	mov    esi,DWORD PTR [ecx+0x14]
6400e2a8:	cmp    esi,0x1
6400e2ab:	jl     0x6400e2df
6400e2ad:	mov    edx,DWORD PTR [ecx+0x10]
6400e2b0:	movzx  eax,BYTE PTR [edx]
6400e2b3:	push   edi
6400e2b4:	mov    edi,DWORD PTR ds:0x640505b0
6400e2ba:	movzx  eax,BYTE PTR [eax+edi*1]
6400e2be:	mov    edi,DWORD PTR ds:0x640505b4
6400e2c4:	mov    eax,DWORD PTR [edi+eax*4]
6400e2c7:	test   eax,eax
6400e2c9:	pop    edi
6400e2ca:	je     0x6400e2df
6400e2cc:	cmp    BYTE PTR [eax],0x1
6400e2cf:	jne    0x6400e2df
6400e2d1:	add    esi,0xffffffff
6400e2d4:	add    edx,0x1
6400e2d7:	mov    DWORD PTR [ecx+0x14],esi
6400e2da:	mov    DWORD PTR [ecx+0x10],edx
6400e2dd:	pop    esi
6400e2de:	ret    
6400e2df:	xor    eax,eax
6400e2e1:	pop    esi
6400e2e2:	ret    
6400e2e3:	int3   
6400e2e4:	int3   
6400e2e5:	int3   
6400e2e6:	int3   
6400e2e7:	int3   
6400e2e8:	int3   
6400e2e9:	int3   
6400e2ea:	int3   
6400e2eb:	int3   
6400e2ec:	int3   
6400e2ed:	int3   
6400e2ee:	int3   
6400e2ef:	int3   
6400e2f0:	push   esi
6400e2f1:	mov    esi,eax
6400e2f3:	mov    eax,DWORD PTR [esi+0x1c]
6400e2f6:	mov    ecx,DWORD PTR [esi+0x10]
6400e2f9:	push   edi
6400e2fa:	mov    edi,DWORD PTR [eax+0x14]
6400e2fd:	cmp    edi,ecx
6400e2ff:	jbe    0x6400e303
6400e301:	mov    edi,ecx
6400e303:	test   edi,edi
6400e305:	je     0x6400e33c
6400e307:	mov    eax,DWORD PTR [eax+0x10]
6400e30a:	mov    ecx,DWORD PTR [esi+0xc]
6400e30d:	push   edi
6400e30e:	push   eax
6400e30f:	push   ecx
6400e310:	call   0x64015180
6400e315:	mov    eax,DWORD PTR [esi+0x1c]
6400e318:	add    DWORD PTR [esi+0xc],edi
6400e31b:	add    DWORD PTR [eax+0x10],edi
6400e31e:	add    DWORD PTR [esi+0x14],edi
6400e321:	sub    DWORD PTR [esi+0x10],edi
6400e324:	mov    eax,DWORD PTR [esi+0x1c]
6400e327:	sub    DWORD PTR [eax+0x14],edi
6400e32a:	mov    esi,DWORD PTR [esi+0x1c]
6400e32d:	add    esp,0xc
6400e330:	cmp    DWORD PTR [esi+0x14],0x0
6400e334:	jne    0x6400e33c
6400e336:	mov    edx,DWORD PTR [esi+0x8]
6400e339:	mov    DWORD PTR [esi+0x10],edx
6400e33c:	pop    edi
6400e33d:	pop    esi
6400e33e:	ret    
6400e33f:	int3   
6400e340:	mov    eax,DWORD PTR [esi+0x4]
6400e343:	push   edi
6400e344:	mov    edi,eax
6400e346:	cmp    edi,ecx
6400e348:	jbe    0x6400e34c
6400e34a:	mov    edi,ecx
6400e34c:	test   edi,edi
6400e34e:	jne    0x6400e354
6400e350:	xor    eax,eax
6400e352:	pop    edi
6400e353:	ret    
6400e354:	sub    eax,edi
6400e356:	mov    DWORD PTR [esi+0x4],eax
6400e359:	mov    eax,DWORD PTR [esi+0x1c]
6400e35c:	mov    eax,DWORD PTR [eax+0x18]
6400e35f:	cmp    eax,0x1
6400e362:	jne    0x6400e373
6400e364:	mov    ecx,DWORD PTR [esi]
6400e366:	mov    edx,DWORD PTR [esi+0x30]
6400e369:	push   edi
6400e36a:	push   ecx
6400e36b:	push   edx
6400e36c:	call   0x640107b0
6400e371:	jmp    0x6400e385
6400e373:	cmp    eax,0x2
6400e376:	jne    0x6400e38b
6400e378:	mov    eax,DWORD PTR [esi]
6400e37a:	mov    ecx,DWORD PTR [esi+0x30]
6400e37d:	push   edi
6400e37e:	push   eax
6400e37f:	push   ecx
6400e380:	call   0x640124a0
6400e385:	mov    DWORD PTR [esi+0x30],eax
6400e388:	add    esp,0xc
6400e38b:	mov    edx,DWORD PTR [esi]
6400e38d:	mov    eax,DWORD PTR [esp+0x8]
6400e391:	push   edi
6400e392:	push   edx
6400e393:	push   eax
6400e394:	call   0x64015180
6400e399:	add    DWORD PTR [esi],edi
6400e39b:	add    DWORD PTR [esi+0x8],edi
6400e39e:	add    esp,0xc
6400e3a1:	mov    eax,edi
6400e3a3:	pop    edi
6400e3a4:	ret    
6400e3a5:	int3   
6400e3a6:	int3   
6400e3a7:	int3   
6400e3a8:	int3   
6400e3a9:	int3   
6400e3aa:	int3   
6400e3ab:	int3   
6400e3ac:	int3   
6400e3ad:	int3   
6400e3ae:	int3   
6400e3af:	int3   
6400e3b0:	sub    esp,0x14
6400e3b3:	mov    ecx,DWORD PTR [edi+0x7c]
6400e3b6:	mov    edx,DWORD PTR [edi+0x6c]
6400e3b9:	push   ebx
6400e3ba:	push   ebp
6400e3bb:	mov    ebp,DWORD PTR [edi+0x78]
6400e3be:	push   esi
6400e3bf:	mov    esi,DWORD PTR [edi+0x90]
6400e3c5:	mov    DWORD PTR [esp+0x10],ecx
6400e3c9:	mov    ecx,DWORD PTR [edi+0x38]
6400e3cc:	mov    DWORD PTR [esp+0x14],esi
6400e3d0:	mov    esi,DWORD PTR [edi+0x2c]
6400e3d3:	lea    ebx,[esi-0x106]
6400e3d9:	add    ecx,edx
6400e3db:	cmp    edx,ebx
6400e3dd:	jbe    0x6400e3ed
6400e3df:	sub    edx,esi
6400e3e1:	add    edx,0x106
6400e3e7:	mov    DWORD PTR [esp+0x18],edx
6400e3eb:	jmp    0x6400e3f5
6400e3ed:	mov    DWORD PTR [esp+0x18],0x0
6400e3f5:	cmp    ebp,DWORD PTR [edi+0x8c]
6400e3fb:	movzx  edx,BYTE PTR [ecx+ebp*1-0x1]
6400e400:	mov    BYTE PTR [esp+0xe],dl
6400e404:	movzx  edx,BYTE PTR [ecx+ebp*1]
6400e408:	lea    esi,[ecx+0x102]
6400e40e:	mov    BYTE PTR [esp+0xf],dl
6400e412:	jb     0x6400e419
6400e414:	shr    DWORD PTR [esp+0x10],0x2
6400e419:	mov    edx,DWORD PTR [edi+0x74]
6400e41c:	cmp    DWORD PTR [esp+0x14],edx
6400e420:	jbe    0x6400e426
6400e422:	mov    DWORD PTR [esp+0x14],edx
6400e426:	mov    edx,DWORD PTR [edi+0x38]
6400e429:	mov    bl,BYTE PTR [esp+0xf]
6400e42d:	add    edx,eax
6400e42f:	cmp    BYTE PTR [edx+ebp*1],bl
6400e432:	jne    0x6400e4ff
6400e438:	mov    bl,BYTE PTR [esp+0xe]
6400e43c:	cmp    BYTE PTR [edx+ebp*1-0x1],bl
6400e440:	jne    0x6400e4ff
6400e446:	mov    bl,BYTE PTR [edx]
6400e448:	cmp    bl,BYTE PTR [ecx]
6400e44a:	jne    0x6400e4ff
6400e450:	mov    bl,BYTE PTR [edx+0x1]
6400e453:	add    edx,0x1
6400e456:	cmp    bl,BYTE PTR [ecx+0x1]
6400e459:	jne    0x6400e4ff
6400e45f:	add    ecx,0x2
6400e462:	add    edx,0x1
6400e465:	mov    bl,BYTE PTR [ecx+0x1]
6400e468:	add    ecx,0x1
6400e46b:	add    edx,0x1
6400e46e:	cmp    bl,BYTE PTR [edx]
6400e470:	jne    0x6400e4d1
6400e472:	mov    bl,BYTE PTR [ecx+0x1]
6400e475:	add    ecx,0x1
6400e478:	add    edx,0x1
6400e47b:	cmp    bl,BYTE PTR [edx]
6400e47d:	jne    0x6400e4d1
6400e47f:	mov    bl,BYTE PTR [ecx+0x1]
6400e482:	add    ecx,0x1
6400e485:	add    edx,0x1
6400e488:	cmp    bl,BYTE PTR [edx]
6400e48a:	jne    0x6400e4d1
6400e48c:	mov    bl,BYTE PTR [ecx+0x1]
6400e48f:	add    ecx,0x1
6400e492:	add    edx,0x1
6400e495:	cmp    bl,BYTE PTR [edx]
6400e497:	jne    0x6400e4d1
6400e499:	mov    bl,BYTE PTR [ecx+0x1]
6400e49c:	add    ecx,0x1
6400e49f:	add    edx,0x1
6400e4a2:	cmp    bl,BYTE PTR [edx]
6400e4a4:	jne    0x6400e4d1
6400e4a6:	mov    bl,BYTE PTR [ecx+0x1]
6400e4a9:	add    ecx,0x1
6400e4ac:	add    edx,0x1
6400e4af:	cmp    bl,BYTE PTR [edx]
6400e4b1:	jne    0x6400e4d1
6400e4b3:	mov    bl,BYTE PTR [ecx+0x1]
6400e4b6:	add    ecx,0x1
6400e4b9:	add    edx,0x1
6400e4bc:	cmp    bl,BYTE PTR [edx]
6400e4be:	jne    0x6400e4d1
6400e4c0:	mov    bl,BYTE PTR [ecx+0x1]
6400e4c3:	add    ecx,0x1
6400e4c6:	add    edx,0x1
6400e4c9:	cmp    bl,BYTE PTR [edx]
6400e4cb:	jne    0x6400e4d1
6400e4cd:	cmp    ecx,esi
6400e4cf:	jb     0x6400e465
6400e4d1:	mov    edx,ecx
6400e4d3:	sub    edx,esi
6400e4d5:	add    edx,0x102
6400e4db:	cmp    edx,ebp
6400e4dd:	lea    ecx,[esi-0x102]
6400e4e3:	jle    0x6400e4ff
6400e4e5:	cmp    edx,DWORD PTR [esp+0x14]
6400e4e9:	mov    DWORD PTR [edi+0x70],eax
6400e4ec:	mov    ebp,edx
6400e4ee:	jge    0x6400e51c
6400e4f0:	mov    bl,BYTE PTR [edx+ecx*1-0x1]
6400e4f4:	mov    dl,BYTE PTR [edx+ecx*1]
6400e4f7:	mov    BYTE PTR [esp+0xe],bl
6400e4fb:	mov    BYTE PTR [esp+0xf],dl
6400e4ff:	mov    edx,DWORD PTR [edi+0x34]
6400e502:	and    edx,eax
6400e504:	mov    eax,DWORD PTR [edi+0x40]
6400e507:	movzx  eax,WORD PTR [eax+edx*2]
6400e50b:	cmp    eax,DWORD PTR [esp+0x18]
6400e50f:	jbe    0x6400e51c
6400e511:	sub    DWORD PTR [esp+0x10],0x1
6400e516:	jne    0x6400e426
6400e51c:	mov    eax,DWORD PTR [edi+0x74]
6400e51f:	cmp    ebp,eax
6400e521:	ja     0x6400e525
6400e523:	mov    eax,ebp
6400e525:	pop    esi
6400e526:	pop    ebp
6400e527:	pop    ebx
6400e528:	add    esp,0x14
6400e52b:	ret    
6400e52c:	int3   
6400e52d:	int3   
6400e52e:	int3   
6400e52f:	int3   
6400e530:	mov    ecx,DWORD PTR [esi+0x38]
6400e533:	mov    eax,DWORD PTR [esi+0x6c]
6400e536:	push   ebp
6400e537:	mov    ebp,DWORD PTR [esp+0x8]
6400e53b:	mov    dl,BYTE PTR [ecx+ebp*1]
6400e53e:	add    eax,ecx
6400e540:	add    ecx,ebp
6400e542:	cmp    dl,BYTE PTR [eax]
6400e544:	push   edi
6400e545:	lea    edi,[eax+0x102]
6400e54b:	jne    0x6400e5ea
6400e551:	mov    dl,BYTE PTR [ecx+0x1]
6400e554:	cmp    dl,BYTE PTR [eax+0x1]
6400e557:	jne    0x6400e5ea
6400e55d:	add    eax,0x2
6400e560:	add    ecx,0x2
6400e563:	mov    dl,BYTE PTR [eax+0x1]
6400e566:	add    eax,0x1
6400e569:	add    ecx,0x1
6400e56c:	cmp    dl,BYTE PTR [ecx]
6400e56e:	jne    0x6400e5cf
6400e570:	mov    dl,BYTE PTR [eax+0x1]
6400e573:	add    eax,0x1
6400e576:	add    ecx,0x1
6400e579:	cmp    dl,BYTE PTR [ecx]
6400e57b:	jne    0x6400e5cf
6400e57d:	mov    dl,BYTE PTR [eax+0x1]
6400e580:	add    eax,0x1
6400e583:	add    ecx,0x1
6400e586:	cmp    dl,BYTE PTR [ecx]
6400e588:	jne    0x6400e5cf
6400e58a:	mov    dl,BYTE PTR [eax+0x1]
6400e58d:	add    eax,0x1
6400e590:	add    ecx,0x1
6400e593:	cmp    dl,BYTE PTR [ecx]
6400e595:	jne    0x6400e5cf
6400e597:	mov    dl,BYTE PTR [eax+0x1]
6400e59a:	add    eax,0x1
6400e59d:	add    ecx,0x1
6400e5a0:	cmp    dl,BYTE PTR [ecx]
6400e5a2:	jne    0x6400e5cf
6400e5a4:	mov    dl,BYTE PTR [eax+0x1]
6400e5a7:	add    eax,0x1
6400e5aa:	add    ecx,0x1
6400e5ad:	cmp    dl,BYTE PTR [ecx]
6400e5af:	jne    0x6400e5cf
6400e5b1:	mov    dl,BYTE PTR [eax+0x1]
6400e5b4:	add    eax,0x1
6400e5b7:	add    ecx,0x1
6400e5ba:	cmp    dl,BYTE PTR [ecx]
6400e5bc:	jne    0x6400e5cf
6400e5be:	mov    dl,BYTE PTR [eax+0x1]
6400e5c1:	add    eax,0x1
6400e5c4:	add    ecx,0x1
6400e5c7:	cmp    dl,BYTE PTR [ecx]
6400e5c9:	jne    0x6400e5cf
6400e5cb:	cmp    eax,edi
6400e5cd:	jb     0x6400e563
6400e5cf:	sub    eax,edi
6400e5d1:	add    eax,0x102
6400e5d6:	cmp    eax,0x3
6400e5d9:	jl     0x6400e5ea
6400e5db:	mov    ecx,DWORD PTR [esi+0x74]
6400e5de:	cmp    eax,ecx
6400e5e0:	mov    DWORD PTR [esi+0x70],ebp
6400e5e3:	jbe    0x6400e5ef
6400e5e5:	pop    edi
6400e5e6:	mov    eax,ecx
6400e5e8:	pop    ebp
6400e5e9:	ret    
6400e5ea:	mov    eax,0x2
6400e5ef:	pop    edi
6400e5f0:	pop    ebp
6400e5f1:	ret    
6400e5f2:	int3   
6400e5f3:	int3   
6400e5f4:	int3   
6400e5f5:	int3   
6400e5f6:	int3   
6400e5f7:	int3   
6400e5f8:	int3   
6400e5f9:	int3   
6400e5fa:	int3   
6400e5fb:	int3   
6400e5fc:	int3   
6400e5fd:	int3   
6400e5fe:	int3   
6400e5ff:	int3   
6400e600:	push   ebx
6400e601:	mov    ebx,DWORD PTR [edi+0x2c]
6400e604:	push   ebp
6400e605:	push   esi
6400e606:	mov    ebp,DWORD PTR [edi+0x3c]
6400e609:	sub    ebp,DWORD PTR [edi+0x74]
6400e60c:	mov    eax,DWORD PTR [edi+0x6c]
6400e60f:	mov    ecx,DWORD PTR [edi+0x2c]
6400e612:	lea    edx,[ebx+ecx*1-0x106]
6400e619:	sub    ebp,eax
6400e61b:	cmp    eax,edx
6400e61d:	jb     0x6400e67e
6400e61f:	mov    eax,DWORD PTR [edi+0x38]
6400e622:	push   ebx
6400e623:	lea    ecx,[eax+ebx*1]
6400e626:	push   ecx
6400e627:	push   eax
6400e628:	call   0x64015180
6400e62d:	mov    edx,DWORD PTR [edi+0x4c]
6400e630:	mov    eax,DWORD PTR [edi+0x44]
6400e633:	sub    DWORD PTR [edi+0x70],ebx
6400e636:	sub    DWORD PTR [edi+0x6c],ebx
6400e639:	add    esp,0xc
6400e63c:	sub    DWORD PTR [edi+0x5c],ebx
6400e63f:	lea    ecx,[eax+edx*2]
6400e642:	movzx  eax,WORD PTR [ecx-0x2]
6400e646:	sub    ecx,0x2
6400e649:	cmp    eax,ebx
6400e64b:	jb     0x6400e651
6400e64d:	sub    eax,ebx
6400e64f:	jmp    0x6400e653
6400e651:	xor    eax,eax
6400e653:	sub    edx,0x1
6400e656:	mov    WORD PTR [ecx],ax
6400e659:	jne    0x6400e642
6400e65b:	mov    ecx,DWORD PTR [edi+0x40]
6400e65e:	mov    edx,ebx
6400e660:	lea    ecx,[ecx+ebx*2]
6400e663:	movzx  eax,WORD PTR [ecx-0x2]
6400e667:	sub    ecx,0x2
6400e66a:	cmp    eax,ebx
6400e66c:	jb     0x6400e672
6400e66e:	sub    eax,ebx
6400e670:	jmp    0x6400e674
6400e672:	xor    eax,eax
6400e674:	sub    edx,0x1
6400e677:	mov    WORD PTR [ecx],ax
6400e67a:	jne    0x6400e663
6400e67c:	add    ebp,ebx
6400e67e:	mov    esi,DWORD PTR [edi]
6400e680:	cmp    DWORD PTR [esi+0x4],0x0
6400e684:	je     0x6400e6d9
6400e686:	mov    edx,DWORD PTR [edi+0x74]
6400e689:	add    edx,DWORD PTR [edi+0x6c]
6400e68c:	mov    ecx,ebp
6400e68e:	add    edx,DWORD PTR [edi+0x38]
6400e691:	push   edx
6400e692:	call   0x6400e340
6400e697:	add    DWORD PTR [edi+0x74],eax
6400e69a:	mov    edx,DWORD PTR [edi+0x74]
6400e69d:	add    esp,0x4
6400e6a0:	cmp    edx,0x3
6400e6a3:	jb     0x6400e6c5
6400e6a5:	mov    eax,DWORD PTR [edi+0x6c]
6400e6a8:	mov    ecx,DWORD PTR [edi+0x38]
6400e6ab:	lea    esi,[eax+ecx*1]
6400e6ae:	movzx  eax,BYTE PTR [esi]
6400e6b1:	mov    ecx,DWORD PTR [edi+0x58]
6400e6b4:	mov    DWORD PTR [edi+0x48],eax
6400e6b7:	shl    eax,cl
6400e6b9:	movzx  ecx,BYTE PTR [esi+0x1]
6400e6bd:	xor    eax,ecx
6400e6bf:	and    eax,DWORD PTR [edi+0x54]
6400e6c2:	mov    DWORD PTR [edi+0x48],eax
6400e6c5:	cmp    edx,0x106
6400e6cb:	jae    0x6400e6d9
6400e6cd:	mov    edx,DWORD PTR [edi]
6400e6cf:	cmp    DWORD PTR [edx+0x4],0x0
6400e6d3:	jne    0x6400e606
6400e6d9:	pop    esi
6400e6da:	pop    ebp
6400e6db:	pop    ebx
6400e6dc:	ret    
6400e6dd:	int3   
6400e6de:	int3   
6400e6df:	int3   
6400e6e0:	push   esi
6400e6e1:	push   edi
6400e6e2:	mov    edi,DWORD PTR [esp+0xc]
6400e6e6:	mov    eax,DWORD PTR [edi+0xc]
6400e6e9:	mov    esi,0xffff
6400e6ee:	add    eax,0xfffffffb
6400e6f1:	cmp    eax,esi
6400e6f3:	jae    0x6400e6f7
6400e6f5:	mov    esi,eax
6400e6f7:	mov    eax,DWORD PTR [edi+0x74]
6400e6fa:	cmp    eax,0x1
6400e6fd:	ja     0x6400e70f
6400e6ff:	call   0x6400e600
6400e704:	mov    eax,DWORD PTR [edi+0x74]
6400e707:	test   eax,eax
6400e709:	je     0x6400e7ad
6400e70f:	add    DWORD PTR [edi+0x6c],eax
6400e712:	mov    ecx,DWORD PTR [edi+0x5c]
6400e715:	mov    edx,DWORD PTR [edi+0x6c]
6400e718:	mov    DWORD PTR [edi+0x74],0x0
6400e71f:	lea    eax,[ecx+esi*1]
6400e722:	je     0x6400e728
6400e724:	cmp    edx,eax
6400e726:	jb     0x6400e761
6400e728:	sub    edx,eax
6400e72a:	test   ecx,ecx
6400e72c:	mov    DWORD PTR [edi+0x74],edx
6400e72f:	mov    DWORD PTR [edi+0x6c],eax
6400e732:	jl     0x6400e73b
6400e734:	mov    edx,DWORD PTR [edi+0x38]
6400e737:	add    edx,ecx
6400e739:	jmp    0x6400e73d
6400e73b:	xor    edx,edx
6400e73d:	push   0x0
6400e73f:	sub    eax,ecx
6400e741:	push   eax
6400e742:	push   edx
6400e743:	push   edi
6400e744:	call   0x64011ff0
6400e749:	mov    eax,DWORD PTR [edi+0x6c]
6400e74c:	mov    DWORD PTR [edi+0x5c],eax
6400e74f:	mov    eax,DWORD PTR [edi]
6400e751:	add    esp,0x10
6400e754:	call   0x6400e2f0
6400e759:	mov    ecx,DWORD PTR [edi]
6400e75b:	cmp    DWORD PTR [ecx+0x10],0x0
6400e75f:	je     0x6400e7a8
6400e761:	mov    ecx,DWORD PTR [edi+0x5c]
6400e764:	mov    edx,DWORD PTR [edi+0x6c]
6400e767:	mov    eax,DWORD PTR [edi+0x2c]
6400e76a:	sub    edx,ecx
6400e76c:	sub    eax,0x106
6400e771:	cmp    edx,eax
6400e773:	jb     0x6400e6f7
6400e775:	test   ecx,ecx
6400e777:	jl     0x6400e780
6400e779:	mov    eax,DWORD PTR [edi+0x38]
6400e77c:	add    eax,ecx
6400e77e:	jmp    0x6400e782
6400e780:	xor    eax,eax
6400e782:	push   0x0
6400e784:	push   edx
6400e785:	push   eax
6400e786:	push   edi
6400e787:	call   0x64011ff0
6400e78c:	mov    ecx,DWORD PTR [edi+0x6c]
6400e78f:	mov    eax,DWORD PTR [edi]
6400e791:	add    esp,0x10
6400e794:	mov    DWORD PTR [edi+0x5c],ecx
6400e797:	call   0x6400e2f0
6400e79c:	mov    edx,DWORD PTR [edi]
6400e79e:	cmp    DWORD PTR [edx+0x10],0x0
6400e7a2:	jne    0x6400e6f7
6400e7a8:	pop    edi
6400e7a9:	xor    eax,eax
6400e7ab:	pop    esi
6400e7ac:	ret    
6400e7ad:	mov    esi,DWORD PTR [esp+0x10]
6400e7b1:	test   esi,esi
6400e7b3:	je     0x6400e7a8
6400e7b5:	mov    ecx,DWORD PTR [edi+0x5c]
6400e7b8:	test   ecx,ecx
6400e7ba:	jl     0x6400e7c3
6400e7bc:	mov    eax,DWORD PTR [edi+0x38]
6400e7bf:	add    eax,ecx
6400e7c1:	jmp    0x6400e7c5
6400e7c3:	xor    eax,eax
6400e7c5:	xor    edx,edx
6400e7c7:	cmp    esi,0x4
6400e7ca:	sete   dl
6400e7cd:	push   edx
6400e7ce:	mov    edx,DWORD PTR [edi+0x6c]
6400e7d1:	sub    edx,ecx
6400e7d3:	push   edx
6400e7d4:	push   eax
6400e7d5:	push   edi
6400e7d6:	call   0x64011ff0
6400e7db:	mov    eax,DWORD PTR [edi+0x6c]
6400e7de:	mov    DWORD PTR [edi+0x5c],eax
6400e7e1:	mov    eax,DWORD PTR [edi]
6400e7e3:	add    esp,0x10
6400e7e6:	call   0x6400e2f0
6400e7eb:	mov    ecx,DWORD PTR [edi]
6400e7ed:	xor    eax,eax
6400e7ef:	cmp    DWORD PTR [ecx+0x10],eax
6400e7f2:	jne    0x6400e803
6400e7f4:	cmp    esi,0x4
6400e7f7:	setne  al
6400e7fa:	pop    edi
6400e7fb:	pop    esi
6400e7fc:	sub    eax,0x1
6400e7ff:	and    eax,0x2
6400e802:	ret    
6400e803:	cmp    esi,0x4
6400e806:	sete   al
6400e809:	pop    edi
6400e80a:	pop    esi
6400e80b:	lea    eax,[eax+eax*1+0x1]
6400e80f:	ret    
6400e810:	push   ebx
6400e811:	push   ebp
6400e812:	push   esi
6400e813:	xor    ebp,ebp
6400e815:	push   edi
6400e816:	mov    edi,DWORD PTR [esp+0x14]
6400e81a:	lea    ebx,[ebp+0x1]
6400e81d:	lea    ecx,[ecx+0x0]
6400e820:	mov    eax,DWORD PTR [edi+0x74]
6400e823:	cmp    eax,0x106
6400e828:	jae    0x6400e84d
6400e82a:	call   0x6400e600
6400e82f:	mov    eax,DWORD PTR [edi+0x74]
6400e832:	cmp    eax,0x106
6400e837:	mov    esi,DWORD PTR [esp+0x18]
6400e83b:	jae    0x6400e845
6400e83d:	test   esi,esi
6400e83f:	je     0x6400eac4
6400e845:	test   eax,eax
6400e847:	je     0x6400eacb
6400e84d:	cmp    eax,0x3
6400e850:	jb     0x6400e89b
6400e852:	mov    eax,DWORD PTR [edi+0x48]
6400e855:	mov    ecx,DWORD PTR [edi+0x58]
6400e858:	mov    edx,DWORD PTR [edi+0x6c]
6400e85b:	mov    esi,DWORD PTR [edi+0x34]
6400e85e:	shl    eax,cl
6400e860:	mov    ecx,DWORD PTR [edi+0x38]
6400e863:	movzx  ecx,BYTE PTR [ecx+edx*1+0x2]
6400e868:	xor    eax,ecx
6400e86a:	and    eax,DWORD PTR [edi+0x54]
6400e86d:	mov    ecx,DWORD PTR [edi+0x44]
6400e870:	mov    DWORD PTR [edi+0x48],eax
6400e873:	mov    ax,WORD PTR [ecx+eax*2]
6400e877:	and    esi,edx
6400e879:	mov    edx,DWORD PTR [edi+0x40]
6400e87c:	mov    WORD PTR [edx+esi*2],ax
6400e880:	mov    ecx,DWORD PTR [edi+0x6c]
6400e883:	and    ecx,DWORD PTR [edi+0x34]
6400e886:	mov    edx,DWORD PTR [edi+0x40]
6400e889:	movzx  ebp,WORD PTR [edx+ecx*2]
6400e88d:	mov    eax,DWORD PTR [edi+0x48]
6400e890:	mov    ecx,DWORD PTR [edi+0x44]
6400e893:	mov    dx,WORD PTR [edi+0x6c]
6400e897:	mov    WORD PTR [ecx+eax*2],dx
6400e89b:	test   ebp,ebp
6400e89d:	je     0x6400e8e1
6400e89f:	mov    eax,DWORD PTR [edi+0x6c]
6400e8a2:	mov    ecx,DWORD PTR [edi+0x2c]
6400e8a5:	sub    eax,ebp
6400e8a7:	sub    ecx,0x106
6400e8ad:	cmp    eax,ecx
6400e8af:	ja     0x6400e8e1
6400e8b1:	mov    ecx,DWORD PTR [edi+0x88]
6400e8b7:	cmp    ecx,0x2
6400e8ba:	je     0x6400e8ca
6400e8bc:	cmp    ecx,0x3
6400e8bf:	je     0x6400e8cf
6400e8c1:	mov    eax,ebp
6400e8c3:	call   0x6400e3b0
6400e8c8:	jmp    0x6400e8de
6400e8ca:	cmp    ecx,0x3
6400e8cd:	jne    0x6400e8e1
6400e8cf:	cmp    eax,ebx
6400e8d1:	jne    0x6400e8e1
6400e8d3:	push   ebp
6400e8d4:	mov    esi,edi
6400e8d6:	call   0x6400e530
6400e8db:	add    esp,0x4
6400e8de:	mov    DWORD PTR [edi+0x60],eax
6400e8e1:	cmp    DWORD PTR [edi+0x60],0x3
6400e8e5:	jb     0x6400ea23
6400e8eb:	mov    dx,WORD PTR [edi+0x6c]
6400e8ef:	sub    dx,WORD PTR [edi+0x70]
6400e8f3:	mov    al,BYTE PTR [edi+0x60]
6400e8f6:	mov    esi,DWORD PTR [edi+0x16a4]
6400e8fc:	movzx  ecx,dx
6400e8ff:	mov    edx,DWORD PTR [edi+0x16a0]
6400e905:	mov    WORD PTR [esi+edx*2],cx
6400e909:	mov    edx,DWORD PTR [edi+0x1698]
6400e90f:	mov    esi,DWORD PTR [edi+0x16a0]
6400e915:	sub    al,0x3
6400e917:	mov    BYTE PTR [edx+esi*1],al
6400e91a:	add    DWORD PTR [edi+0x16a0],ebx
6400e920:	movzx  eax,al
6400e923:	movzx  edx,BYTE PTR [eax+0x6403db80]
6400e92a:	add    WORD PTR [edi+edx*4+0x498],bx
6400e932:	lea    eax,[edi+edx*4+0x498]
6400e939:	add    ecx,0xffff
6400e93f:	cmp    cx,0x100
6400e944:	jae    0x6400e952
6400e946:	movzx  eax,cx
6400e949:	movzx  eax,BYTE PTR [eax+0x6403d980]
6400e950:	jmp    0x6400e95f
6400e952:	movzx  ecx,cx
6400e955:	shr    ecx,0x7
6400e958:	movzx  eax,BYTE PTR [ecx+0x6403da80]
6400e95f:	add    WORD PTR [edi+eax*4+0x988],bx
6400e967:	mov    edx,DWORD PTR [edi+0x169c]
6400e96d:	xor    eax,eax
6400e96f:	sub    edx,ebx
6400e971:	cmp    DWORD PTR [edi+0x16a0],edx
6400e977:	sete   al
6400e97a:	mov    esi,eax
6400e97c:	mov    eax,DWORD PTR [edi+0x60]
6400e97f:	sub    DWORD PTR [edi+0x74],eax
6400e982:	cmp    eax,DWORD PTR [edi+0x80]
6400e988:	mov    ecx,DWORD PTR [edi+0x74]
6400e98b:	ja     0x6400e9f7
6400e98d:	cmp    ecx,0x3
6400e990:	jb     0x6400e9f7
6400e992:	add    eax,0xffffffff
6400e995:	mov    DWORD PTR [edi+0x60],eax
6400e998:	jmp    0x6400e9a0
6400e99a:	lea    ebx,[ebx+0x0]
6400e9a0:	add    DWORD PTR [edi+0x6c],ebx
6400e9a3:	mov    edx,DWORD PTR [edi+0x6c]
6400e9a6:	mov    ecx,DWORD PTR [edi+0x38]
6400e9a9:	movzx  eax,BYTE PTR [edx+ecx*1+0x2]
6400e9ae:	mov    ebp,DWORD PTR [edi+0x48]
6400e9b1:	mov    ecx,DWORD PTR [edi+0x58]
6400e9b4:	shl    ebp,cl
6400e9b6:	mov    ecx,DWORD PTR [edi+0x44]
6400e9b9:	xor    eax,ebp
6400e9bb:	and    eax,DWORD PTR [edi+0x54]
6400e9be:	mov    ebp,DWORD PTR [edi+0x34]
6400e9c1:	and    ebp,edx
6400e9c3:	mov    edx,DWORD PTR [edi+0x40]
6400e9c6:	mov    DWORD PTR [edi+0x48],eax
6400e9c9:	mov    ax,WORD PTR [ecx+eax*2]
6400e9cd:	mov    WORD PTR [edx+ebp*2],ax
6400e9d1:	mov    ecx,DWORD PTR [edi+0x6c]
6400e9d4:	and    ecx,DWORD PTR [edi+0x34]
6400e9d7:	mov    edx,DWORD PTR [edi+0x40]
6400e9da:	movzx  ebp,WORD PTR [edx+ecx*2]
6400e9de:	mov    eax,DWORD PTR [edi+0x48]
6400e9e1:	mov    ecx,DWORD PTR [edi+0x44]
6400e9e4:	mov    dx,WORD PTR [edi+0x6c]
6400e9e8:	mov    WORD PTR [ecx+eax*2],dx
6400e9ec:	add    DWORD PTR [edi+0x60],0xffffffff
6400e9f0:	jne    0x6400e9a0
6400e9f2:	jmp    0x6400ea7e
6400e9f7:	add    DWORD PTR [edi+0x6c],eax
6400e9fa:	mov    eax,DWORD PTR [edi+0x6c]
6400e9fd:	mov    ecx,DWORD PTR [edi+0x38]
6400ea00:	lea    edx,[eax+ecx*1]
6400ea03:	mov    ecx,DWORD PTR [edi+0x58]
6400ea06:	mov    DWORD PTR [edi+0x60],0x0
6400ea0d:	movzx  eax,BYTE PTR [edx]
6400ea10:	mov    DWORD PTR [edi+0x48],eax
6400ea13:	movzx  edx,BYTE PTR [edx+0x1]
6400ea17:	shl    eax,cl
6400ea19:	xor    eax,edx
6400ea1b:	and    eax,DWORD PTR [edi+0x54]
6400ea1e:	mov    DWORD PTR [edi+0x48],eax
6400ea21:	jmp    0x6400ea81
6400ea23:	mov    eax,DWORD PTR [edi+0x6c]
6400ea26:	mov    ecx,DWORD PTR [edi+0x38]
6400ea29:	mov    al,BYTE PTR [eax+ecx*1]
6400ea2c:	mov    edx,DWORD PTR [edi+0x16a0]
6400ea32:	mov    ecx,DWORD PTR [edi+0x16a4]
6400ea38:	mov    WORD PTR [ecx+edx*2],0x0
6400ea3e:	mov    ecx,DWORD PTR [edi+0x16a0]
6400ea44:	mov    edx,DWORD PTR [edi+0x1698]
6400ea4a:	mov    BYTE PTR [edx+ecx*1],al
6400ea4d:	add    DWORD PTR [edi+0x16a0],ebx
6400ea53:	movzx  edx,al
6400ea56:	add    WORD PTR [edi+edx*4+0x94],bx
6400ea5e:	lea    eax,[edi+edx*4+0x94]
6400ea65:	mov    eax,DWORD PTR [edi+0x169c]
6400ea6b:	xor    ecx,ecx
6400ea6d:	sub    eax,ebx
6400ea6f:	cmp    DWORD PTR [edi+0x16a0],eax
6400ea75:	sete   cl
6400ea78:	add    DWORD PTR [edi+0x74],0xffffffff
6400ea7c:	mov    esi,ecx
6400ea7e:	add    DWORD PTR [edi+0x6c],ebx
6400ea81:	test   esi,esi
6400ea83:	je     0x6400e820
6400ea89:	mov    ecx,DWORD PTR [edi+0x5c]
6400ea8c:	test   ecx,ecx
6400ea8e:	jl     0x6400ea97
6400ea90:	mov    eax,DWORD PTR [edi+0x38]
6400ea93:	add    eax,ecx
6400ea95:	jmp    0x6400ea99
6400ea97:	xor    eax,eax
6400ea99:	mov    edx,DWORD PTR [edi+0x6c]
6400ea9c:	push   0x0
6400ea9e:	sub    edx,ecx
6400eaa0:	push   edx
6400eaa1:	push   eax
6400eaa2:	push   edi
6400eaa3:	call   0x64011ff0
6400eaa8:	mov    eax,DWORD PTR [edi+0x6c]
6400eaab:	mov    DWORD PTR [edi+0x5c],eax
6400eaae:	mov    eax,DWORD PTR [edi]
6400eab0:	add    esp,0x10
6400eab3:	call   0x6400e2f0
6400eab8:	mov    ecx,DWORD PTR [edi]
6400eaba:	cmp    DWORD PTR [ecx+0x10],0x0
6400eabe:	jne    0x6400e820
6400eac4:	pop    edi
6400eac5:	pop    esi
6400eac6:	pop    ebp
6400eac7:	xor    eax,eax
6400eac9:	pop    ebx
6400eaca:	ret    
6400eacb:	mov    ecx,DWORD PTR [edi+0x5c]
6400eace:	test   ecx,ecx
6400ead0:	jl     0x6400ead9
6400ead2:	mov    eax,DWORD PTR [edi+0x38]
6400ead5:	add    eax,ecx
6400ead7:	jmp    0x6400eadb
6400ead9:	xor    eax,eax
6400eadb:	xor    edx,edx
6400eadd:	cmp    esi,0x4
6400eae0:	sete   dl
6400eae3:	push   edx
6400eae4:	mov    edx,DWORD PTR [edi+0x6c]
6400eae7:	sub    edx,ecx
6400eae9:	push   edx
6400eaea:	push   eax
6400eaeb:	push   edi
6400eaec:	call   0x64011ff0
6400eaf1:	mov    eax,DWORD PTR [edi+0x6c]
6400eaf4:	mov    DWORD PTR [edi+0x5c],eax
6400eaf7:	mov    eax,DWORD PTR [edi]
6400eaf9:	add    esp,0x10
6400eafc:	call   0x6400e2f0
6400eb01:	mov    ecx,DWORD PTR [edi]
6400eb03:	xor    eax,eax
6400eb05:	cmp    DWORD PTR [ecx+0x10],eax
6400eb08:	jne    0x6400eb1b
6400eb0a:	cmp    esi,0x4
6400eb0d:	setne  al
6400eb10:	pop    edi
6400eb11:	pop    esi
6400eb12:	pop    ebp
6400eb13:	pop    ebx
6400eb14:	sub    eax,0x1
6400eb17:	and    eax,0x2
6400eb1a:	ret    
6400eb1b:	cmp    esi,0x4
6400eb1e:	sete   al
6400eb21:	pop    edi
6400eb22:	pop    esi
6400eb23:	pop    ebp
6400eb24:	pop    ebx
6400eb25:	lea    eax,[eax+eax*1+0x1]
6400eb29:	ret    
6400eb2a:	int3   
6400eb2b:	int3   
6400eb2c:	int3   
6400eb2d:	int3   
6400eb2e:	int3   
6400eb2f:	int3   
6400eb30:	push   ecx
6400eb31:	push   ebx
6400eb32:	push   ebp
6400eb33:	push   esi
6400eb34:	push   edi
6400eb35:	mov    edi,DWORD PTR [esp+0x18]
6400eb39:	mov    DWORD PTR [esp+0x10],0x0
6400eb41:	mov    ebp,0x1
6400eb46:	mov    eax,DWORD PTR [edi+0x74]
6400eb49:	cmp    eax,0x106
6400eb4e:	jae    0x6400eb73
6400eb50:	call   0x6400e600
6400eb55:	mov    eax,DWORD PTR [edi+0x74]
6400eb58:	cmp    eax,0x106
6400eb5d:	mov    esi,DWORD PTR [esp+0x1c]
6400eb61:	jae    0x6400eb6b
6400eb63:	test   esi,esi
6400eb65:	je     0x6400edc6
6400eb6b:	test   eax,eax
6400eb6d:	je     0x6400ee7b
6400eb73:	cmp    eax,0x3
6400eb76:	jb     0x6400ebc5
6400eb78:	mov    eax,DWORD PTR [edi+0x48]
6400eb7b:	mov    ecx,DWORD PTR [edi+0x58]
6400eb7e:	mov    edx,DWORD PTR [edi+0x6c]
6400eb81:	mov    esi,DWORD PTR [edi+0x34]
6400eb84:	shl    eax,cl
6400eb86:	mov    ecx,DWORD PTR [edi+0x38]
6400eb89:	movzx  ecx,BYTE PTR [ecx+edx*1+0x2]
6400eb8e:	xor    eax,ecx
6400eb90:	and    eax,DWORD PTR [edi+0x54]
6400eb93:	mov    ecx,DWORD PTR [edi+0x44]
6400eb96:	mov    DWORD PTR [edi+0x48],eax
6400eb99:	movzx  eax,WORD PTR [ecx+eax*2]
6400eb9d:	and    esi,edx
6400eb9f:	mov    edx,DWORD PTR [edi+0x40]
6400eba2:	mov    WORD PTR [edx+esi*2],ax
6400eba6:	mov    ecx,DWORD PTR [edi+0x6c]
6400eba9:	and    ecx,DWORD PTR [edi+0x34]
6400ebac:	mov    edx,DWORD PTR [edi+0x40]
6400ebaf:	movzx  eax,WORD PTR [edx+ecx*2]
6400ebb3:	mov    ecx,DWORD PTR [edi+0x48]
6400ebb6:	mov    edx,DWORD PTR [edi+0x44]
6400ebb9:	mov    DWORD PTR [esp+0x10],eax
6400ebbd:	movzx  eax,WORD PTR [edi+0x6c]
6400ebc1:	mov    WORD PTR [edx+ecx*2],ax
6400ebc5:	mov    edx,DWORD PTR [edi+0x70]
6400ebc8:	mov    ecx,DWORD PTR [edi+0x60]
6400ebcb:	mov    DWORD PTR [edi+0x64],edx
6400ebce:	mov    edx,DWORD PTR [esp+0x10]
6400ebd2:	test   edx,edx
6400ebd4:	mov    ebx,0x2
6400ebd9:	mov    DWORD PTR [edi+0x78],ecx
6400ebdc:	mov    DWORD PTR [edi+0x60],ebx
6400ebdf:	je     0x6400ec52
6400ebe1:	mov    eax,ecx
6400ebe3:	cmp    eax,DWORD PTR [edi+0x80]
6400ebe9:	jae    0x6400ec52
6400ebeb:	mov    eax,DWORD PTR [edi+0x6c]
6400ebee:	mov    ecx,DWORD PTR [edi+0x2c]
6400ebf1:	sub    eax,edx
6400ebf3:	sub    ecx,0x106
6400ebf9:	cmp    eax,ecx
6400ebfb:	ja     0x6400ec52
6400ebfd:	mov    ecx,DWORD PTR [edi+0x88]
6400ec03:	cmp    ecx,ebx
6400ec05:	je     0x6400ec15
6400ec07:	cmp    ecx,0x3
6400ec0a:	je     0x6400ec1a
6400ec0c:	mov    eax,edx
6400ec0e:	call   0x6400e3b0
6400ec13:	jmp    0x6400ec29
6400ec15:	cmp    ecx,0x3
6400ec18:	jne    0x6400ec2c
6400ec1a:	cmp    eax,ebp
6400ec1c:	jne    0x6400ec2c
6400ec1e:	push   edx
6400ec1f:	mov    esi,edi
6400ec21:	call   0x6400e530
6400ec26:	add    esp,0x4
6400ec29:	mov    DWORD PTR [edi+0x60],eax
6400ec2c:	mov    eax,DWORD PTR [edi+0x60]
6400ec2f:	cmp    eax,0x5
6400ec32:	ja     0x6400ec52
6400ec34:	cmp    DWORD PTR [edi+0x88],ebp
6400ec3a:	je     0x6400ec4f
6400ec3c:	cmp    eax,0x3
6400ec3f:	jne    0x6400ec52
6400ec41:	mov    edx,DWORD PTR [edi+0x6c]
6400ec44:	sub    edx,DWORD PTR [edi+0x70]
6400ec47:	cmp    edx,0x1000
6400ec4d:	jbe    0x6400ec52
6400ec4f:	mov    DWORD PTR [edi+0x60],ebx
6400ec52:	mov    eax,DWORD PTR [edi+0x78]
6400ec55:	cmp    eax,0x3
6400ec58:	jb     0x6400edce
6400ec5e:	cmp    DWORD PTR [edi+0x60],eax
6400ec61:	ja     0x6400edce
6400ec67:	mov    dx,WORD PTR [edi+0x6c]
6400ec6b:	sub    dx,WORD PTR [edi+0x64]
6400ec6f:	mov    eax,DWORD PTR [edi+0x6c]
6400ec72:	mov    ecx,DWORD PTR [edi+0x74]
6400ec75:	mov    ebx,DWORD PTR [edi+0x16a4]
6400ec7b:	lea    esi,[eax+ecx*1-0x3]
6400ec7f:	mov    al,BYTE PTR [edi+0x78]
6400ec82:	sub    dx,bp
6400ec85:	movzx  ecx,dx
6400ec88:	mov    edx,DWORD PTR [edi+0x16a0]
6400ec8e:	mov    WORD PTR [ebx+edx*2],cx
6400ec92:	mov    edx,DWORD PTR [edi+0x1698]
6400ec98:	mov    ebx,DWORD PTR [edi+0x16a0]
6400ec9e:	sub    al,0x3
6400eca0:	mov    BYTE PTR [edx+ebx*1],al
6400eca3:	add    DWORD PTR [edi+0x16a0],ebp
6400eca9:	movzx  eax,al
6400ecac:	movzx  edx,BYTE PTR [eax+0x6403db80]
6400ecb3:	add    WORD PTR [edi+edx*4+0x498],bp
6400ecbb:	lea    eax,[edi+edx*4+0x498]
6400ecc2:	add    ecx,0xffff
6400ecc8:	cmp    cx,0x100
6400eccd:	jae    0x6400ecdb
6400eccf:	movzx  eax,cx
6400ecd2:	movzx  eax,BYTE PTR [eax+0x6403d980]
6400ecd9:	jmp    0x6400ece8
6400ecdb:	movzx  ecx,cx
6400ecde:	shr    ecx,0x7
6400ece1:	movzx  eax,BYTE PTR [ecx+0x6403da80]
6400ece8:	add    WORD PTR [edi+eax*4+0x988],bp
6400ecf0:	mov    edx,DWORD PTR [edi+0x169c]
6400ecf6:	mov    eax,DWORD PTR [edi+0x78]
6400ecf9:	sub    edx,ebp
6400ecfb:	xor    ebx,ebx
6400ecfd:	cmp    DWORD PTR [edi+0x16a0],edx
6400ed03:	mov    ecx,ebp
6400ed05:	sete   bl
6400ed08:	sub    ecx,eax
6400ed0a:	add    DWORD PTR [edi+0x74],ecx
6400ed0d:	add    eax,0xfffffffe
6400ed10:	mov    DWORD PTR [edi+0x78],eax
6400ed13:	add    DWORD PTR [edi+0x6c],ebp
6400ed16:	mov    edx,DWORD PTR [edi+0x6c]
6400ed19:	cmp    edx,esi
6400ed1b:	ja     0x6400ed6c
6400ed1d:	mov    eax,DWORD PTR [edi+0x48]
6400ed20:	mov    ecx,DWORD PTR [edi+0x58]
6400ed23:	mov    ebp,DWORD PTR [edi+0x34]
6400ed26:	shl    eax,cl
6400ed28:	mov    ecx,DWORD PTR [edi+0x38]
6400ed2b:	movzx  ecx,BYTE PTR [ecx+edx*1+0x2]
6400ed30:	xor    eax,ecx
6400ed32:	and    eax,DWORD PTR [edi+0x54]
6400ed35:	mov    ecx,DWORD PTR [edi+0x44]
6400ed38:	mov    DWORD PTR [edi+0x48],eax
6400ed3b:	movzx  eax,WORD PTR [ecx+eax*2]
6400ed3f:	and    ebp,edx
6400ed41:	mov    edx,DWORD PTR [edi+0x40]
6400ed44:	mov    WORD PTR [edx+ebp*2],ax
6400ed48:	mov    ecx,DWORD PTR [edi+0x6c]
6400ed4b:	and    ecx,DWORD PTR [edi+0x34]
6400ed4e:	mov    edx,DWORD PTR [edi+0x40]
6400ed51:	movzx  eax,WORD PTR [edx+ecx*2]
6400ed55:	mov    ecx,DWORD PTR [edi+0x48]
6400ed58:	mov    edx,DWORD PTR [edi+0x44]
6400ed5b:	mov    DWORD PTR [esp+0x10],eax
6400ed5f:	movzx  eax,WORD PTR [edi+0x6c]
6400ed63:	mov    WORD PTR [edx+ecx*2],ax
6400ed67:	mov    ebp,0x1
6400ed6c:	add    DWORD PTR [edi+0x78],0xffffffff
6400ed70:	jne    0x6400ed13
6400ed72:	add    DWORD PTR [edi+0x6c],ebp
6400ed75:	test   ebx,ebx
6400ed77:	mov    eax,DWORD PTR [edi+0x6c]
6400ed7a:	mov    DWORD PTR [edi+0x68],0x0
6400ed81:	mov    DWORD PTR [edi+0x60],0x2
6400ed88:	je     0x6400eb46
6400ed8e:	mov    edx,DWORD PTR [edi+0x5c]
6400ed91:	test   edx,edx
6400ed93:	jl     0x6400ed9c
6400ed95:	mov    ecx,DWORD PTR [edi+0x38]
6400ed98:	add    ecx,edx
6400ed9a:	jmp    0x6400ed9e
6400ed9c:	xor    ecx,ecx
6400ed9e:	push   0x0
6400eda0:	sub    eax,edx
6400eda2:	push   eax
6400eda3:	push   ecx
6400eda4:	push   edi
6400eda5:	call   0x64011ff0
6400edaa:	mov    ecx,DWORD PTR [edi+0x6c]
6400edad:	mov    eax,DWORD PTR [edi]
6400edaf:	add    esp,0x10
6400edb2:	mov    DWORD PTR [edi+0x5c],ecx
6400edb5:	call   0x6400e2f0
6400edba:	mov    edx,DWORD PTR [edi]
6400edbc:	cmp    DWORD PTR [edx+0x10],0x0
6400edc0:	jne    0x6400eb46
6400edc6:	pop    edi
6400edc7:	pop    esi
6400edc8:	pop    ebp
6400edc9:	xor    eax,eax
6400edcb:	pop    ebx
6400edcc:	pop    ecx
6400edcd:	ret    
6400edce:	cmp    DWORD PTR [edi+0x68],0x0
6400edd2:	je     0x6400ee6c
6400edd8:	mov    eax,DWORD PTR [edi+0x6c]
6400eddb:	mov    ecx,DWORD PTR [edi+0x38]
6400edde:	mov    al,BYTE PTR [eax+ecx*1-0x1]
6400ede2:	mov    edx,DWORD PTR [edi+0x16a0]
6400ede8:	mov    ecx,DWORD PTR [edi+0x16a4]
6400edee:	mov    WORD PTR [ecx+edx*2],0x0
6400edf4:	mov    edx,DWORD PTR [edi+0x1698]
6400edfa:	mov    ecx,DWORD PTR [edi+0x16a0]
6400ee00:	mov    BYTE PTR [edx+ecx*1],al
6400ee03:	add    DWORD PTR [edi+0x16a0],ebp
6400ee09:	movzx  edx,al
6400ee0c:	add    WORD PTR [edi+edx*4+0x94],bp
6400ee14:	lea    eax,[edi+edx*4+0x94]
6400ee1b:	mov    eax,DWORD PTR [edi+0x169c]
6400ee21:	sub    eax,ebp
6400ee23:	cmp    DWORD PTR [edi+0x16a0],eax
6400ee29:	jne    0x6400ee5a
6400ee2b:	mov    ecx,DWORD PTR [edi+0x5c]
6400ee2e:	test   ecx,ecx
6400ee30:	jl     0x6400ee39
6400ee32:	mov    eax,DWORD PTR [edi+0x38]
6400ee35:	add    eax,ecx
6400ee37:	jmp    0x6400ee3b
6400ee39:	xor    eax,eax
6400ee3b:	mov    edx,DWORD PTR [edi+0x6c]
6400ee3e:	push   0x0
6400ee40:	sub    edx,ecx
6400ee42:	push   edx
6400ee43:	push   eax
6400ee44:	push   edi
6400ee45:	call   0x64011ff0
6400ee4a:	mov    eax,DWORD PTR [edi+0x6c]
6400ee4d:	mov    DWORD PTR [edi+0x5c],eax
6400ee50:	mov    eax,DWORD PTR [edi]
6400ee52:	add    esp,0x10
6400ee55:	call   0x6400e2f0
6400ee5a:	mov    ecx,DWORD PTR [edi]
6400ee5c:	add    DWORD PTR [edi+0x6c],ebp
6400ee5f:	add    DWORD PTR [edi+0x74],0xffffffff
6400ee63:	cmp    DWORD PTR [ecx+0x10],0x0
6400ee67:	jmp    0x6400edc0
6400ee6c:	add    DWORD PTR [edi+0x6c],ebp
6400ee6f:	add    DWORD PTR [edi+0x74],0xffffffff
6400ee73:	mov    DWORD PTR [edi+0x68],ebp
6400ee76:	jmp    0x6400eb46
6400ee7b:	cmp    DWORD PTR [edi+0x68],0x0
6400ee7f:	je     0x6400eecb
6400ee81:	mov    edx,DWORD PTR [edi+0x6c]
6400ee84:	mov    eax,DWORD PTR [edi+0x38]
6400ee87:	mov    al,BYTE PTR [edx+eax*1-0x1]
6400ee8b:	mov    ecx,DWORD PTR [edi+0x16a0]
6400ee91:	mov    edx,DWORD PTR [edi+0x16a4]
6400ee97:	mov    WORD PTR [edx+ecx*2],0x0
6400ee9d:	mov    edx,DWORD PTR [edi+0x16a0]
6400eea3:	mov    ecx,DWORD PTR [edi+0x1698]
6400eea9:	mov    BYTE PTR [ecx+edx*1],al
6400eeac:	add    DWORD PTR [edi+0x16a0],ebp
6400eeb2:	movzx  eax,al
6400eeb5:	add    WORD PTR [edi+eax*4+0x94],bp
6400eebd:	lea    eax,[edi+eax*4+0x94]
6400eec4:	mov    DWORD PTR [edi+0x68],0x0
6400eecb:	mov    ecx,DWORD PTR [edi+0x5c]
6400eece:	test   ecx,ecx
6400eed0:	jl     0x6400eed9
6400eed2:	mov    eax,DWORD PTR [edi+0x38]
6400eed5:	add    eax,ecx
6400eed7:	jmp    0x6400eedb
6400eed9:	xor    eax,eax
6400eedb:	xor    edx,edx
6400eedd:	cmp    esi,0x4
6400eee0:	sete   dl
6400eee3:	push   edx
6400eee4:	mov    edx,DWORD PTR [edi+0x6c]
6400eee7:	sub    edx,ecx
6400eee9:	push   edx
6400eeea:	push   eax
6400eeeb:	push   edi
6400eeec:	call   0x64011ff0
6400eef1:	mov    eax,DWORD PTR [edi+0x6c]
6400eef4:	mov    DWORD PTR [edi+0x5c],eax
6400eef7:	mov    eax,DWORD PTR [edi]
6400eef9:	add    esp,0x10
6400eefc:	call   0x6400e2f0
6400ef01:	mov    ecx,DWORD PTR [edi]
6400ef03:	xor    eax,eax
6400ef05:	cmp    DWORD PTR [ecx+0x10],eax
6400ef08:	jne    0x6400ef1c
6400ef0a:	cmp    esi,0x4
6400ef0d:	setne  al
6400ef10:	pop    edi
6400ef11:	pop    esi
6400ef12:	pop    ebp
6400ef13:	pop    ebx
6400ef14:	sub    eax,0x1
6400ef17:	and    eax,0x2
6400ef1a:	pop    ecx
6400ef1b:	ret    
6400ef1c:	cmp    esi,0x4
6400ef1f:	sete   al
6400ef22:	pop    edi
6400ef23:	pop    esi
6400ef24:	pop    ebp
6400ef25:	pop    ebx
6400ef26:	lea    eax,[eax+eax*1+0x1]
6400ef2a:	pop    ecx
6400ef2b:	ret    
6400ef2c:	int3   
6400ef2d:	int3   
6400ef2e:	int3   
6400ef2f:	int3   
6400ef30:	mov    edx,DWORD PTR [esp+0x4]
6400ef34:	xor    ecx,ecx
6400ef36:	cmp    edx,ecx
6400ef38:	je     0x6400ef87
6400ef3a:	mov    eax,DWORD PTR [edx+0x1c]
6400ef3d:	cmp    eax,ecx
6400ef3f:	je     0x6400ef87
6400ef41:	mov    DWORD PTR [eax+0x1c],ecx
6400ef44:	mov    DWORD PTR [edx+0x14],ecx
6400ef47:	mov    DWORD PTR [edx+0x8],ecx
6400ef4a:	mov    DWORD PTR [edx+0x18],ecx
6400ef4d:	mov    DWORD PTR [edx+0x30],0x1
6400ef54:	mov    DWORD PTR [eax],ecx
6400ef56:	mov    DWORD PTR [eax+0x4],ecx
6400ef59:	mov    DWORD PTR [eax+0xc],ecx
6400ef5c:	mov    DWORD PTR [eax+0x20],ecx
6400ef5f:	mov    DWORD PTR [eax+0x28],ecx
6400ef62:	mov    DWORD PTR [eax+0x2c],ecx
6400ef65:	mov    DWORD PTR [eax+0x30],ecx
6400ef68:	mov    DWORD PTR [eax+0x38],ecx
6400ef6b:	mov    DWORD PTR [eax+0x3c],ecx
6400ef6e:	lea    ecx,[eax+0x530]
6400ef74:	mov    DWORD PTR [eax+0x14],0x8000
6400ef7b:	mov    DWORD PTR [eax+0x6c],ecx
6400ef7e:	mov    DWORD PTR [eax+0x50],ecx
6400ef81:	mov    DWORD PTR [eax+0x4c],ecx
6400ef84:	xor    eax,eax
6400ef86:	ret    
6400ef87:	mov    eax,0xfffffffe
6400ef8c:	ret    
6400ef8d:	int3   
6400ef8e:	int3   
6400ef8f:	int3   
6400ef90:	mov    eax,DWORD PTR [esp+0xc]
6400ef94:	push   edi
6400ef95:	xor    edi,edi
6400ef97:	cmp    eax,edi
6400ef99:	je     0x6400f054
6400ef9f:	cmp    BYTE PTR [eax],0x31
6400efa2:	jne    0x6400f054
6400efa8:	cmp    DWORD PTR [esp+0x14],0x38
6400efad:	jne    0x6400f054
6400efb3:	push   esi
6400efb4:	mov    esi,DWORD PTR [esp+0xc]
6400efb8:	cmp    esi,edi
6400efba:	je     0x6400f04c
6400efc0:	cmp    DWORD PTR [esi+0x20],edi
6400efc3:	mov    DWORD PTR [esi+0x18],edi
6400efc6:	jne    0x6400efd2
6400efc8:	mov    DWORD PTR [esi+0x20],0x640124c0
6400efcf:	mov    DWORD PTR [esi+0x28],edi
6400efd2:	cmp    DWORD PTR [esi+0x24],edi
6400efd5:	jne    0x6400efde
6400efd7:	mov    DWORD PTR [esi+0x24],0x640124e0
6400efde:	mov    eax,DWORD PTR [esi+0x28]
6400efe1:	mov    ecx,DWORD PTR [esi+0x20]
6400efe4:	push   0x2530
6400efe9:	push   0x1
6400efeb:	push   eax
6400efec:	call   ecx
6400efee:	add    esp,0xc
6400eff1:	cmp    eax,edi
6400eff3:	jne    0x6400effd
6400eff5:	pop    esi
6400eff6:	mov    eax,0xfffffffc
6400effb:	pop    edi
6400effc:	ret    
6400effd:	mov    ecx,DWORD PTR [esp+0x10]
6400f001:	cmp    ecx,edi
6400f003:	mov    DWORD PTR [esi+0x1c],eax
6400f006:	jge    0x6400f00f
6400f008:	mov    DWORD PTR [eax+0x8],edi
6400f00b:	neg    ecx
6400f00d:	jmp    0x6400f022
6400f00f:	mov    edx,ecx
6400f011:	sar    edx,0x4
6400f014:	add    edx,0x1
6400f017:	cmp    ecx,0x30
6400f01a:	mov    DWORD PTR [eax+0x8],edx
6400f01d:	jge    0x6400f022
6400f01f:	and    ecx,0xf
6400f022:	lea    edx,[ecx-0x8]
6400f025:	cmp    edx,0x7
6400f028:	ja     0x6400f03c
6400f02a:	push   esi
6400f02b:	mov    DWORD PTR [eax+0x24],ecx
6400f02e:	mov    DWORD PTR [eax+0x34],edi
6400f031:	call   0x6400ef30
6400f036:	add    esp,0x4
6400f039:	pop    esi
6400f03a:	pop    edi
6400f03b:	ret    
6400f03c:	mov    ecx,DWORD PTR [esi+0x24]
6400f03f:	push   eax
6400f040:	mov    eax,DWORD PTR [esi+0x28]
6400f043:	push   eax
6400f044:	call   ecx
6400f046:	add    esp,0x8
6400f049:	mov    DWORD PTR [esi+0x1c],edi
6400f04c:	pop    esi
6400f04d:	mov    eax,0xfffffffe
6400f052:	pop    edi
6400f053:	ret    
6400f054:	mov    eax,0xfffffffa
6400f059:	pop    edi
6400f05a:	ret    
6400f05b:	int3   
6400f05c:	int3   
6400f05d:	int3   
6400f05e:	int3   
6400f05f:	int3   
6400f060:	mov    DWORD PTR [eax+0x4c],0x6403c8d0
6400f067:	mov    DWORD PTR [eax+0x54],0x9
6400f06e:	mov    DWORD PTR [eax+0x50],0x6403d0d0
6400f075:	mov    DWORD PTR [eax+0x58],0x5
6400f07c:	ret    
6400f07d:	int3   
6400f07e:	int3   
6400f07f:	int3   
6400f080:	push   ebp
6400f081:	push   esi
6400f082:	mov    esi,DWORD PTR [ebx+0x1c]
6400f085:	xor    ebp,ebp
6400f087:	cmp    DWORD PTR [esi+0x34],ebp
6400f08a:	push   edi
6400f08b:	mov    edi,eax
6400f08d:	jne    0x6400f0b6
6400f08f:	mov    ecx,DWORD PTR [esi+0x24]
6400f092:	mov    edx,DWORD PTR [ebx+0x20]
6400f095:	mov    eax,0x1
6400f09a:	shl    eax,cl
6400f09c:	mov    ecx,DWORD PTR [ebx+0x28]
6400f09f:	push   0x1
6400f0a1:	push   eax
6400f0a2:	push   ecx
6400f0a3:	call   edx
6400f0a5:	add    esp,0xc
6400f0a8:	cmp    eax,ebp
6400f0aa:	mov    DWORD PTR [esi+0x34],eax
6400f0ad:	jne    0x6400f0b6
6400f0af:	pop    edi
6400f0b0:	pop    esi
6400f0b1:	lea    eax,[ebp+0x1]
6400f0b4:	pop    ebp
6400f0b5:	ret    
6400f0b6:	cmp    DWORD PTR [esi+0x28],ebp
6400f0b9:	jne    0x6400f0ce
6400f0bb:	mov    ecx,DWORD PTR [esi+0x24]
6400f0be:	mov    eax,0x1
6400f0c3:	shl    eax,cl
6400f0c5:	mov    DWORD PTR [esi+0x30],ebp
6400f0c8:	mov    DWORD PTR [esi+0x2c],ebp
6400f0cb:	mov    DWORD PTR [esi+0x28],eax
6400f0ce:	sub    edi,DWORD PTR [ebx+0x10]
6400f0d1:	mov    eax,DWORD PTR [esi+0x28]
6400f0d4:	cmp    edi,eax
6400f0d6:	jb     0x6400f0fa
6400f0d8:	mov    ecx,DWORD PTR [ebx+0xc]
6400f0db:	mov    edx,DWORD PTR [esi+0x34]
6400f0de:	push   eax
6400f0df:	sub    ecx,eax
6400f0e1:	push   ecx
6400f0e2:	push   edx
6400f0e3:	call   0x64015180
6400f0e8:	mov    eax,DWORD PTR [esi+0x28]
6400f0eb:	add    esp,0xc
6400f0ee:	pop    edi
6400f0ef:	mov    DWORD PTR [esi+0x30],ebp
6400f0f2:	mov    DWORD PTR [esi+0x2c],eax
6400f0f5:	pop    esi
6400f0f6:	xor    eax,eax
6400f0f8:	pop    ebp
6400f0f9:	ret    
6400f0fa:	sub    eax,DWORD PTR [esi+0x30]
6400f0fd:	mov    ebp,eax
6400f0ff:	cmp    ebp,edi
6400f101:	jbe    0x6400f105
6400f103:	mov    ebp,edi
6400f105:	mov    ecx,DWORD PTR [ebx+0xc]
6400f108:	mov    edx,DWORD PTR [esi+0x34]
6400f10b:	add    edx,DWORD PTR [esi+0x30]
6400f10e:	push   ebp
6400f10f:	sub    ecx,edi
6400f111:	push   ecx
6400f112:	push   edx
6400f113:	call   0x64015180
6400f118:	add    esp,0xc
6400f11b:	sub    edi,ebp
6400f11d:	je     0x6400f141
6400f11f:	mov    eax,DWORD PTR [ebx+0xc]
6400f122:	mov    ecx,DWORD PTR [esi+0x34]
6400f125:	push   edi
6400f126:	sub    eax,edi
6400f128:	push   eax
6400f129:	push   ecx
6400f12a:	call   0x64015180
6400f12f:	mov    edx,DWORD PTR [esi+0x28]
6400f132:	add    esp,0xc
6400f135:	mov    DWORD PTR [esi+0x30],edi
6400f138:	pop    edi
6400f139:	mov    DWORD PTR [esi+0x2c],edx
6400f13c:	pop    esi
6400f13d:	xor    eax,eax
6400f13f:	pop    ebp
6400f140:	ret    
6400f141:	add    DWORD PTR [esi+0x30],ebp
6400f144:	mov    ecx,DWORD PTR [esi+0x30]
6400f147:	mov    eax,DWORD PTR [esi+0x28]
6400f14a:	cmp    ecx,eax
6400f14c:	jne    0x6400f155
6400f14e:	mov    DWORD PTR [esi+0x30],0x0
6400f155:	mov    ecx,DWORD PTR [esi+0x2c]
6400f158:	cmp    ecx,eax
6400f15a:	jae    0x6400f161
6400f15c:	add    ecx,ebp
6400f15e:	mov    DWORD PTR [esi+0x2c],ecx
6400f161:	pop    edi
6400f162:	pop    esi
6400f163:	xor    eax,eax
6400f165:	pop    ebp
6400f166:	ret    
6400f167:	int3   
6400f168:	int3   
6400f169:	int3   
6400f16a:	int3   
6400f16b:	int3   
6400f16c:	int3   
6400f16d:	int3   
6400f16e:	int3   
6400f16f:	int3   
6400f170:	mov    eax,DWORD PTR [esp+0x4]
6400f174:	sub    esp,0x2c
6400f177:	test   eax,eax
6400f179:	push   edi
6400f17a:	je     0x640106cc
6400f180:	mov    edi,DWORD PTR [eax+0x1c]
6400f183:	test   edi,edi
6400f185:	je     0x640106cc
6400f18b:	cmp    DWORD PTR [eax+0xc],0x0
6400f18f:	je     0x640106cc
6400f195:	cmp    DWORD PTR [eax],0x0
6400f198:	jne    0x6400f1a4
6400f19a:	cmp    DWORD PTR [eax+0x4],0x0
6400f19e:	jne    0x640106cc
6400f1a4:	cmp    DWORD PTR [edi],0xb
6400f1a7:	jne    0x6400f1af
6400f1a9:	mov    DWORD PTR [edi],0xc
6400f1af:	mov    ecx,DWORD PTR [eax+0xc]
6400f1b2:	mov    edx,DWORD PTR [eax+0x4]
6400f1b5:	push   ebx
6400f1b6:	mov    ebx,DWORD PTR [edi+0x38]
6400f1b9:	push   ebp
6400f1ba:	mov    ebp,DWORD PTR [eax]
6400f1bc:	mov    DWORD PTR [esp+0x24],ecx
6400f1c0:	mov    ecx,DWORD PTR [eax+0x10]
6400f1c3:	mov    eax,DWORD PTR [edi]
6400f1c5:	cmp    eax,0x1c
6400f1c8:	push   esi
6400f1c9:	mov    esi,DWORD PTR [edi+0x3c]
6400f1cc:	mov    DWORD PTR [esp+0x1c],ecx
6400f1d0:	mov    DWORD PTR [esp+0x10],edx
6400f1d4:	mov    DWORD PTR [esp+0x18],ebx
6400f1d8:	mov    DWORD PTR [esp+0x38],edx
6400f1dc:	mov    DWORD PTR [esp+0x2c],ecx
6400f1e0:	mov    DWORD PTR [esp+0x30],0x0
6400f1e8:	ja     0x64010579
6400f1ee:	mov    edi,edi
6400f1f0:	jmp    DWORD PTR [eax*4+0x640106d8]
6400f1f7:	cmp    DWORD PTR [edi+0x8],0x0
6400f1fb:	jne    0x6400f208
6400f1fd:	mov    DWORD PTR [edi],0xc
6400f203:	jmp    0x6401056e
6400f208:	cmp    esi,0x10
6400f20b:	jae    0x6400f238
6400f20d:	lea    ecx,[ecx+0x0]
6400f210:	test   edx,edx
6400f212:	je     0x640105cc
6400f218:	movzx  eax,BYTE PTR [ebp+0x0]
6400f21c:	mov    ecx,esi
6400f21e:	shl    eax,cl
6400f220:	sub    edx,0x1
6400f223:	add    esi,0x8
6400f226:	add    ebp,0x1
6400f229:	add    ebx,eax
6400f22b:	cmp    esi,0x10
6400f22e:	mov    DWORD PTR [esp+0x10],edx
6400f232:	mov    DWORD PTR [esp+0x18],ebx
6400f236:	jb     0x6400f210
6400f238:	test   BYTE PTR [edi+0x8],0x2
6400f23c:	je     0x6400f28b
6400f23e:	cmp    ebx,0x8b1f
6400f244:	jne    0x6400f28b
6400f246:	push   0x0
6400f248:	push   0x0
6400f24a:	push   0x0
6400f24c:	call   0x640124a0
6400f251:	mov    DWORD PTR [edi+0x18],eax
6400f254:	push   0x2
6400f256:	lea    ecx,[esp+0x30]
6400f25a:	mov    BYTE PTR [esp+0x30],0x1f
6400f25f:	mov    BYTE PTR [esp+0x31],0x8b
6400f264:	mov    edx,DWORD PTR [edi+0x18]
6400f267:	push   ecx
6400f268:	push   edx
6400f269:	call   0x640124a0
6400f26e:	mov    edx,DWORD PTR [esp+0x28]
6400f272:	xor    ebx,ebx
6400f274:	add    esp,0x18
6400f277:	mov    DWORD PTR [edi+0x18],eax
6400f27a:	mov    DWORD PTR [esp+0x18],ebx
6400f27e:	xor    esi,esi
6400f280:	mov    DWORD PTR [edi],0x1
6400f286:	jmp    0x6401056e
6400f28b:	mov    eax,DWORD PTR [edi+0x20]
6400f28e:	test   eax,eax
6400f290:	mov    DWORD PTR [edi+0x10],0x0
6400f297:	je     0x6400f2a0
6400f299:	mov    DWORD PTR [eax+0x30],0xffffffff
6400f2a0:	test   BYTE PTR [edi+0x8],0x1
6400f2a4:	je     0x6400f351
6400f2aa:	movzx  eax,bl
6400f2ad:	shl    eax,0x8
6400f2b0:	mov    ecx,ebx
6400f2b2:	shr    ecx,0x8
6400f2b5:	add    eax,ecx
6400f2b7:	xor    edx,edx
6400f2b9:	mov    ecx,0x1f
6400f2be:	div    ecx
6400f2c0:	test   edx,edx
6400f2c2:	jne    0x6400f351
6400f2c8:	mov    edx,ebx
6400f2ca:	and    dl,0xf
6400f2cd:	cmp    dl,0x8
6400f2d0:	je     0x6400f2e6
6400f2d2:	mov    eax,DWORD PTR [esp+0x40]
6400f2d6:	mov    edx,DWORD PTR [esp+0x10]
6400f2da:	mov    DWORD PTR [eax+0x18],0x6403d31c
6400f2e1:	jmp    0x64010568
6400f2e6:	shr    ebx,0x4
6400f2e9:	mov    ecx,ebx
6400f2eb:	and    ecx,0xf
6400f2ee:	add    ecx,0x8
6400f2f1:	sub    esi,0x4
6400f2f4:	cmp    ecx,DWORD PTR [edi+0x24]
6400f2f7:	mov    DWORD PTR [esp+0x18],ebx
6400f2fb:	jbe    0x6400f311
6400f2fd:	mov    ecx,DWORD PTR [esp+0x40]
6400f301:	mov    edx,DWORD PTR [esp+0x10]
6400f305:	mov    DWORD PTR [ecx+0x18],0x6403d308
6400f30c:	jmp    0x64010568
6400f311:	mov    edx,0x1
6400f316:	shl    edx,cl
6400f318:	push   0x0
6400f31a:	push   0x0
6400f31c:	push   0x0
6400f31e:	mov    DWORD PTR [edi+0x14],edx
6400f321:	call   0x640107b0
6400f326:	mov    ecx,DWORD PTR [esp+0x4c]
6400f32a:	mov    edx,DWORD PTR [esp+0x1c]
6400f32e:	shr    ebx,0x8
6400f331:	not    ebx
6400f333:	and    ebx,0x2
6400f336:	or     ebx,0x9
6400f339:	mov    DWORD PTR [edi+0x18],eax
6400f33c:	mov    DWORD PTR [ecx+0x30],eax
6400f33f:	mov    DWORD PTR [edi],ebx
6400f341:	xor    ebx,ebx
6400f343:	add    esp,0xc
6400f346:	mov    DWORD PTR [esp+0x18],ebx
6400f34a:	xor    esi,esi
6400f34c:	jmp    0x6401056e
6400f351:	mov    edx,DWORD PTR [esp+0x40]
6400f355:	mov    DWORD PTR [edx+0x18],0x6403d2f0
6400f35c:	mov    edx,DWORD PTR [esp+0x10]
6400f360:	jmp    0x64010568
6400f365:	cmp    esi,0x10
6400f368:	jae    0x6400f398
6400f36a:	lea    ebx,[ebx+0x0]
6400f370:	test   edx,edx
6400f372:	je     0x640105cc
6400f378:	movzx  eax,BYTE PTR [ebp+0x0]
6400f37c:	mov    ecx,esi
6400f37e:	shl    eax,cl
6400f380:	sub    edx,0x1
6400f383:	add    esi,0x8
6400f386:	add    ebp,0x1
6400f389:	add    ebx,eax
6400f38b:	cmp    esi,0x10
6400f38e:	mov    DWORD PTR [esp+0x10],edx
6400f392:	mov    DWORD PTR [esp+0x18],ebx
6400f396:	jb     0x6400f370
6400f398:	cmp    bl,0x8
6400f39b:	mov    DWORD PTR [edi+0x10],ebx
6400f39e:	je     0x6400f3b0
6400f3a0:	mov    ecx,DWORD PTR [esp+0x40]
6400f3a4:	mov    DWORD PTR [ecx+0x18],0x6403d31c
6400f3ab:	jmp    0x64010568
6400f3b0:	test   ebx,0xe000
6400f3b6:	je     0x6400f3c8
6400f3b8:	mov    eax,DWORD PTR [esp+0x40]
6400f3bc:	mov    DWORD PTR [eax+0x18],0x6403d2d4
6400f3c3:	jmp    0x64010568
6400f3c8:	mov    eax,DWORD PTR [edi+0x20]
6400f3cb:	test   eax,eax
6400f3cd:	je     0x6400f3d9
6400f3cf:	mov    ecx,ebx
6400f3d1:	shr    ecx,0x8
6400f3d4:	and    ecx,0x1
6400f3d7:	mov    DWORD PTR [eax],ecx
6400f3d9:	test   DWORD PTR [edi+0x10],0x200
6400f3e0:	je     0x6400f407
6400f3e2:	mov    BYTE PTR [esp+0x20],bl
6400f3e6:	shr    ebx,0x8
6400f3e9:	push   0x2
6400f3eb:	lea    edx,[esp+0x24]
6400f3ef:	mov    BYTE PTR [esp+0x25],bl
6400f3f3:	mov    eax,DWORD PTR [edi+0x18]
6400f3f6:	push   edx
6400f3f7:	push   eax
6400f3f8:	call   0x640124a0
6400f3fd:	mov    edx,DWORD PTR [esp+0x1c]
6400f401:	add    esp,0xc
6400f404:	mov    DWORD PTR [edi+0x18],eax
6400f407:	xor    ebx,ebx
6400f409:	xor    esi,esi
6400f40b:	mov    DWORD PTR [edi],0x2
6400f411:	jmp    0x6400f418
6400f413:	cmp    esi,0x20
6400f416:	jae    0x6400f43c
6400f418:	test   edx,edx
6400f41a:	je     0x640105cc
6400f420:	movzx  eax,BYTE PTR [ebp+0x0]
6400f424:	mov    ecx,esi
6400f426:	shl    eax,cl
6400f428:	sub    edx,0x1
6400f42b:	add    esi,0x8
6400f42e:	add    ebp,0x1
6400f431:	add    ebx,eax
6400f433:	cmp    esi,0x20
6400f436:	mov    DWORD PTR [esp+0x10],edx
6400f43a:	jb     0x6400f418
6400f43c:	mov    eax,DWORD PTR [edi+0x20]
6400f43f:	test   eax,eax
6400f441:	je     0x6400f446
6400f443:	mov    DWORD PTR [eax+0x4],ebx
6400f446:	test   DWORD PTR [edi+0x10],0x200
6400f44d:	je     0x6400f486
6400f44f:	mov    BYTE PTR [esp+0x20],bl
6400f453:	mov    ecx,ebx
6400f455:	mov    edx,ebx
6400f457:	shr    ecx,0x8
6400f45a:	shr    edx,0x10
6400f45d:	shr    ebx,0x18
6400f460:	push   0x4
6400f462:	lea    eax,[esp+0x24]
6400f466:	mov    BYTE PTR [esp+0x25],cl
6400f46a:	mov    BYTE PTR [esp+0x26],dl
6400f46e:	mov    BYTE PTR [esp+0x27],bl
6400f472:	mov    ecx,DWORD PTR [edi+0x18]
6400f475:	push   eax
6400f476:	push   ecx
6400f477:	call   0x640124a0
6400f47c:	mov    edx,DWORD PTR [esp+0x1c]
6400f480:	add    esp,0xc
6400f483:	mov    DWORD PTR [edi+0x18],eax
6400f486:	xor    ebx,ebx
6400f488:	xor    esi,esi
6400f48a:	mov    DWORD PTR [edi],0x3
6400f490:	jmp    0x6400f497
6400f492:	cmp    esi,0x10
6400f495:	jae    0x6400f4bb
6400f497:	test   edx,edx
6400f499:	je     0x640105cc
6400f49f:	movzx  eax,BYTE PTR [ebp+0x0]
6400f4a3:	mov    ecx,esi
6400f4a5:	shl    eax,cl
6400f4a7:	sub    edx,0x1
6400f4aa:	add    esi,0x8
6400f4ad:	add    ebp,0x1
6400f4b0:	add    ebx,eax
6400f4b2:	cmp    esi,0x10
6400f4b5:	mov    DWORD PTR [esp+0x10],edx
6400f4b9:	jb     0x6400f497
6400f4bb:	mov    eax,DWORD PTR [edi+0x20]
6400f4be:	test   eax,eax
6400f4c0:	je     0x6400f4d8
6400f4c2:	mov    ecx,ebx
6400f4c4:	and    ecx,0xff
6400f4ca:	mov    DWORD PTR [eax+0x8],ecx
6400f4cd:	mov    ecx,DWORD PTR [edi+0x20]
6400f4d0:	mov    eax,ebx
6400f4d2:	shr    eax,0x8
6400f4d5:	mov    DWORD PTR [ecx+0xc],eax
6400f4d8:	test   DWORD PTR [edi+0x10],0x200
6400f4df:	je     0x6400f506
6400f4e1:	mov    BYTE PTR [esp+0x20],bl
6400f4e5:	shr    ebx,0x8
6400f4e8:	push   0x2
6400f4ea:	lea    edx,[esp+0x24]
6400f4ee:	mov    BYTE PTR [esp+0x25],bl
6400f4f2:	mov    eax,DWORD PTR [edi+0x18]
6400f4f5:	push   edx
6400f4f6:	push   eax
6400f4f7:	call   0x640124a0
6400f4fc:	mov    edx,DWORD PTR [esp+0x1c]
6400f500:	add    esp,0xc
6400f503:	mov    DWORD PTR [edi+0x18],eax
6400f506:	xor    ebx,ebx
6400f508:	mov    DWORD PTR [esp+0x18],ebx
6400f50c:	xor    esi,esi
6400f50e:	mov    DWORD PTR [edi],0x4
6400f514:	test   DWORD PTR [edi+0x10],0x400
6400f51b:	je     0x6400f58b
6400f51d:	cmp    esi,0x10
6400f520:	jae    0x6400f546
6400f522:	test   edx,edx
6400f524:	je     0x640105cc
6400f52a:	movzx  eax,BYTE PTR [ebp+0x0]
6400f52e:	mov    ecx,esi
6400f530:	shl    eax,cl
6400f532:	sub    edx,0x1
6400f535:	add    esi,0x8
6400f538:	add    ebp,0x1
6400f53b:	add    ebx,eax
6400f53d:	cmp    esi,0x10
6400f540:	mov    DWORD PTR [esp+0x10],edx
6400f544:	jb     0x6400f522
6400f546:	mov    eax,DWORD PTR [edi+0x20]
6400f549:	test   eax,eax
6400f54b:	mov    DWORD PTR [edi+0x40],ebx
6400f54e:	je     0x6400f553
6400f550:	mov    DWORD PTR [eax+0x14],ebx
6400f553:	test   DWORD PTR [edi+0x10],0x200
6400f55a:	je     0x6400f581
6400f55c:	mov    BYTE PTR [esp+0x20],bl
6400f560:	shr    ebx,0x8
6400f563:	push   0x2
6400f565:	lea    ecx,[esp+0x24]
6400f569:	mov    BYTE PTR [esp+0x25],bl
6400f56d:	mov    edx,DWORD PTR [edi+0x18]
6400f570:	push   ecx
6400f571:	push   edx
6400f572:	call   0x640124a0
6400f577:	mov    edx,DWORD PTR [esp+0x1c]
6400f57b:	add    esp,0xc
6400f57e:	mov    DWORD PTR [edi+0x18],eax
6400f581:	xor    ebx,ebx
6400f583:	mov    DWORD PTR [esp+0x18],ebx
6400f587:	xor    esi,esi
6400f589:	jmp    0x6400f599
6400f58b:	mov    eax,DWORD PTR [edi+0x20]
6400f58e:	test   eax,eax
6400f590:	je     0x6400f599
6400f592:	mov    DWORD PTR [eax+0x10],0x0
6400f599:	mov    DWORD PTR [edi],0x5
6400f59f:	test   DWORD PTR [edi+0x10],0x400
6400f5a6:	je     0x6400f64e
6400f5ac:	mov    eax,DWORD PTR [edi+0x40]
6400f5af:	cmp    eax,edx
6400f5b1:	mov    DWORD PTR [esp+0x14],eax
6400f5b5:	jbe    0x6400f5bd
6400f5b7:	mov    eax,edx
6400f5b9:	mov    DWORD PTR [esp+0x14],edx
6400f5bd:	test   eax,eax
6400f5bf:	je     0x6400f644
6400f5c5:	mov    ecx,DWORD PTR [edi+0x20]
6400f5c8:	test   ecx,ecx
6400f5ca:	je     0x6400f613
6400f5cc:	mov    ecx,DWORD PTR [ecx+0x10]
6400f5cf:	test   ecx,ecx
6400f5d1:	mov    DWORD PTR [esp+0x34],ecx
6400f5d5:	je     0x6400f613
6400f5d7:	mov    ecx,DWORD PTR [edi+0x20]
6400f5da:	mov    ecx,DWORD PTR [ecx+0x14]
6400f5dd:	sub    ecx,DWORD PTR [edi+0x40]
6400f5e0:	mov    edx,DWORD PTR [edi+0x20]
6400f5e3:	mov    edx,DWORD PTR [edx+0x18]
6400f5e6:	mov    DWORD PTR [esp+0x24],ecx
6400f5ea:	add    ecx,eax
6400f5ec:	cmp    ecx,edx
6400f5ee:	jbe    0x6400f5f6
6400f5f0:	sub    edx,DWORD PTR [esp+0x24]
6400f5f4:	mov    eax,edx
6400f5f6:	mov    edx,DWORD PTR [esp+0x34]
6400f5fa:	push   eax
6400f5fb:	mov    eax,DWORD PTR [esp+0x28]
6400f5ff:	add    edx,eax
6400f601:	push   ebp
6400f602:	push   edx
6400f603:	call   0x64015180
6400f608:	mov    eax,DWORD PTR [esp+0x20]
6400f60c:	mov    edx,DWORD PTR [esp+0x1c]
6400f610:	add    esp,0xc
6400f613:	test   DWORD PTR [edi+0x10],0x200
6400f61a:	je     0x6400f639
6400f61c:	mov    ecx,DWORD PTR [esp+0x14]
6400f620:	mov    edx,DWORD PTR [edi+0x18]
6400f623:	push   ecx
6400f624:	push   ebp
6400f625:	push   edx
6400f626:	call   0x640124a0
6400f62b:	mov    edx,DWORD PTR [esp+0x1c]
6400f62f:	mov    DWORD PTR [edi+0x18],eax
6400f632:	mov    eax,DWORD PTR [esp+0x20]
6400f636:	add    esp,0xc
6400f639:	sub    edx,eax
6400f63b:	add    ebp,eax
6400f63d:	sub    DWORD PTR [edi+0x40],eax
6400f640:	mov    DWORD PTR [esp+0x10],edx
6400f644:	cmp    DWORD PTR [edi+0x40],0x0
6400f648:	jne    0x640105cc
6400f64e:	mov    DWORD PTR [edi+0x40],0x0
6400f655:	mov    DWORD PTR [edi],0x6
6400f65b:	test   DWORD PTR [edi+0x10],0x800
6400f662:	je     0x6400f6f8
6400f668:	test   edx,edx
6400f66a:	je     0x640105cc
6400f670:	xor    eax,eax
6400f672:	movzx  ecx,BYTE PTR [eax+ebp*1]
6400f676:	add    eax,0x1
6400f679:	mov    DWORD PTR [esp+0x14],eax
6400f67d:	mov    eax,DWORD PTR [edi+0x20]
6400f680:	test   eax,eax
6400f682:	mov    DWORD PTR [esp+0x24],ecx
6400f686:	je     0x6400f6ae
6400f688:	mov    ecx,DWORD PTR [eax+0x1c]
6400f68b:	test   ecx,ecx
6400f68d:	mov    DWORD PTR [esp+0x34],ecx
6400f691:	je     0x6400f6ae
6400f693:	mov    ecx,DWORD PTR [edi+0x40]
6400f696:	cmp    ecx,DWORD PTR [eax+0x20]
6400f699:	jae    0x6400f6ae
6400f69b:	mov    edx,DWORD PTR [esp+0x34]
6400f69f:	mov    al,BYTE PTR [esp+0x24]
6400f6a3:	mov    BYTE PTR [edx+ecx*1],al
6400f6a6:	add    DWORD PTR [edi+0x40],0x1
6400f6aa:	mov    edx,DWORD PTR [esp+0x10]
6400f6ae:	cmp    DWORD PTR [esp+0x24],0x0
6400f6b3:	je     0x6400f6bd
6400f6b5:	mov    eax,DWORD PTR [esp+0x14]
6400f6b9:	cmp    eax,edx
6400f6bb:	jb     0x6400f672
6400f6bd:	test   DWORD PTR [edi+0x10],0x200
6400f6c4:	je     0x6400f6df
6400f6c6:	mov    ecx,DWORD PTR [esp+0x14]
6400f6ca:	mov    edx,DWORD PTR [edi+0x18]
6400f6cd:	push   ecx
6400f6ce:	push   ebp
6400f6cf:	push   edx
6400f6d0:	call   0x640124a0
6400f6d5:	mov    edx,DWORD PTR [esp+0x1c]
6400f6d9:	add    esp,0xc
6400f6dc:	mov    DWORD PTR [edi+0x18],eax
6400f6df:	mov    eax,DWORD PTR [esp+0x14]
6400f6e3:	sub    edx,eax
6400f6e5:	add    ebp,eax
6400f6e7:	cmp    DWORD PTR [esp+0x24],0x0
6400f6ec:	mov    DWORD PTR [esp+0x10],edx
6400f6f0:	jne    0x640105cc
6400f6f6:	jmp    0x6400f706
6400f6f8:	mov    eax,DWORD PTR [edi+0x20]
6400f6fb:	test   eax,eax
6400f6fd:	je     0x6400f706
6400f6ff:	mov    DWORD PTR [eax+0x1c],0x0
6400f706:	mov    DWORD PTR [edi+0x40],0x0
6400f70d:	mov    DWORD PTR [edi],0x7
6400f713:	test   DWORD PTR [edi+0x10],0x1000
6400f71a:	je     0x6400f7b6
6400f720:	test   edx,edx
6400f722:	je     0x640105cc
6400f728:	xor    eax,eax
6400f72a:	lea    ebx,[ebx+0x0]
6400f730:	movzx  ecx,BYTE PTR [eax+ebp*1]
6400f734:	add    eax,0x1
6400f737:	mov    DWORD PTR [esp+0x14],eax
6400f73b:	mov    eax,DWORD PTR [edi+0x20]
6400f73e:	test   eax,eax
6400f740:	mov    DWORD PTR [esp+0x24],ecx
6400f744:	je     0x6400f76c
6400f746:	mov    ecx,DWORD PTR [eax+0x24]
6400f749:	test   ecx,ecx
6400f74b:	mov    DWORD PTR [esp+0x34],ecx
6400f74f:	je     0x6400f76c
6400f751:	mov    ecx,DWORD PTR [edi+0x40]
6400f754:	cmp    ecx,DWORD PTR [eax+0x28]
6400f757:	jae    0x6400f76c
6400f759:	mov    edx,DWORD PTR [esp+0x34]
6400f75d:	mov    al,BYTE PTR [esp+0x24]
6400f761:	mov    BYTE PTR [edx+ecx*1],al
6400f764:	add    DWORD PTR [edi+0x40],0x1
6400f768:	mov    edx,DWORD PTR [esp+0x10]
6400f76c:	cmp    DWORD PTR [esp+0x24],0x0
6400f771:	je     0x6400f77b
6400f773:	mov    eax,DWORD PTR [esp+0x14]
6400f777:	cmp    eax,edx
6400f779:	jb     0x6400f730
6400f77b:	test   DWORD PTR [edi+0x10],0x200
6400f782:	je     0x6400f79d
6400f784:	mov    ecx,DWORD PTR [esp+0x14]
6400f788:	mov    edx,DWORD PTR [edi+0x18]
6400f78b:	push   ecx
6400f78c:	push   ebp
6400f78d:	push   edx
6400f78e:	call   0x640124a0
6400f793:	mov    edx,DWORD PTR [esp+0x1c]
6400f797:	add    esp,0xc
6400f79a:	mov    DWORD PTR [edi+0x18],eax
6400f79d:	mov    eax,DWORD PTR [esp+0x14]
6400f7a1:	sub    edx,eax
6400f7a3:	add    ebp,eax
6400f7a5:	cmp    DWORD PTR [esp+0x24],0x0
6400f7aa:	mov    DWORD PTR [esp+0x10],edx
6400f7ae:	jne    0x640105cc
6400f7b4:	jmp    0x6400f7c4
6400f7b6:	mov    eax,DWORD PTR [edi+0x20]
6400f7b9:	test   eax,eax
6400f7bb:	je     0x6400f7c4
6400f7bd:	mov    DWORD PTR [eax+0x24],0x0
6400f7c4:	mov    DWORD PTR [edi],0x8
6400f7ca:	test   DWORD PTR [edi+0x10],0x200
6400f7d1:	je     0x6400f820
6400f7d3:	cmp    esi,0x10
6400f7d6:	jae    0x6400f800
6400f7d8:	test   edx,edx
6400f7da:	je     0x640105cc
6400f7e0:	movzx  eax,BYTE PTR [ebp+0x0]
6400f7e4:	mov    ecx,esi
6400f7e6:	shl    eax,cl
6400f7e8:	sub    edx,0x1
6400f7eb:	add    esi,0x8
6400f7ee:	add    ebp,0x1
6400f7f1:	add    ebx,eax
6400f7f3:	cmp    esi,0x10
6400f7f6:	mov    DWORD PTR [esp+0x10],edx
6400f7fa:	mov    DWORD PTR [esp+0x18],ebx
6400f7fe:	jb     0x6400f7d8
6400f800:	movzx  ecx,WORD PTR [edi+0x18]
6400f804:	cmp    ebx,ecx
6400f806:	je     0x6400f818
6400f808:	mov    eax,DWORD PTR [esp+0x40]
6400f80c:	mov    DWORD PTR [eax+0x18],0x6403d2c0
6400f813:	jmp    0x64010568
6400f818:	xor    ebx,ebx
6400f81a:	mov    DWORD PTR [esp+0x18],ebx
6400f81e:	xor    esi,esi
6400f820:	mov    eax,DWORD PTR [edi+0x20]
6400f823:	test   eax,eax
6400f825:	je     0x6400f83d
6400f827:	mov    ecx,DWORD PTR [edi+0x10]
6400f82a:	sar    ecx,0x9
6400f82d:	and    ecx,0x1
6400f830:	mov    DWORD PTR [eax+0x2c],ecx
6400f833:	mov    edx,DWORD PTR [edi+0x20]
6400f836:	mov    DWORD PTR [edx+0x30],0x1
6400f83d:	push   0x0
6400f83f:	push   0x0
6400f841:	push   0x0
6400f843:	call   0x640124a0
6400f848:	mov    ecx,DWORD PTR [esp+0x4c]
6400f84c:	mov    edx,DWORD PTR [esp+0x1c]
6400f850:	mov    DWORD PTR [edi+0x18],eax
6400f853:	mov    DWORD PTR [ecx+0x30],eax
6400f856:	add    esp,0xc
6400f859:	mov    DWORD PTR [edi],0xb
6400f85f:	jmp    0x6401056e
6400f864:	cmp    esi,0x20
6400f867:	jae    0x6400f898
6400f869:	lea    esp,[esp+0x0]
6400f870:	test   edx,edx
6400f872:	je     0x640105cc
6400f878:	movzx  eax,BYTE PTR [ebp+0x0]
6400f87c:	mov    ecx,esi
6400f87e:	shl    eax,cl
6400f880:	sub    edx,0x1
6400f883:	add    esi,0x8
6400f886:	add    ebp,0x1
6400f889:	add    ebx,eax
6400f88b:	cmp    esi,0x20
6400f88e:	mov    DWORD PTR [esp+0x10],edx
6400f892:	mov    DWORD PTR [esp+0x18],ebx
6400f896:	jb     0x6400f870
6400f898:	mov    ecx,ebx
6400f89a:	and    ecx,0xff00
6400f8a0:	mov    eax,ebx
6400f8a2:	shl    eax,0x10
6400f8a5:	add    ecx,eax
6400f8a7:	xor    eax,eax
6400f8a9:	mov    ah,BYTE PTR [esp+0x1a]
6400f8ad:	shl    ecx,0x8
6400f8b0:	shr    ebx,0x18
6400f8b3:	add    ecx,eax
6400f8b5:	lea    eax,[ecx+ebx*1]
6400f8b8:	mov    ecx,DWORD PTR [esp+0x40]
6400f8bc:	mov    DWORD PTR [edi+0x18],eax
6400f8bf:	mov    DWORD PTR [ecx+0x30],eax
6400f8c2:	xor    ebx,ebx
6400f8c4:	xor    esi,esi
6400f8c6:	mov    DWORD PTR [edi],0xa
6400f8cc:	cmp    DWORD PTR [edi+0xc],0x0
6400f8d0:	je     0x64010586
6400f8d6:	push   0x0
6400f8d8:	push   0x0
6400f8da:	push   0x0
6400f8dc:	call   0x640107b0
6400f8e1:	mov    edx,DWORD PTR [esp+0x4c]
6400f8e5:	mov    DWORD PTR [edi+0x18],eax
6400f8e8:	mov    DWORD PTR [edx+0x30],eax
6400f8eb:	mov    edx,DWORD PTR [esp+0x1c]
6400f8ef:	add    esp,0xc
6400f8f2:	mov    DWORD PTR [edi],0xb
6400f8f8:	cmp    DWORD PTR [esp+0x44],0x5
6400f8fd:	je     0x640105cc
6400f903:	cmp    DWORD PTR [edi+0x4],0x0
6400f907:	je     0x6400f921
6400f909:	mov    ecx,esi
6400f90b:	and    ecx,0x7
6400f90e:	shr    ebx,cl
6400f910:	sub    esi,ecx
6400f912:	mov    DWORD PTR [edi],0x18
6400f918:	mov    DWORD PTR [esp+0x18],ebx
6400f91c:	jmp    0x6401056e
6400f921:	cmp    esi,0x3
6400f924:	jae    0x6400f94a
6400f926:	test   edx,edx
6400f928:	je     0x640105cc
6400f92e:	movzx  eax,BYTE PTR [ebp+0x0]
6400f932:	mov    ecx,esi
6400f934:	shl    eax,cl
6400f936:	sub    edx,0x1
6400f939:	add    esi,0x8
6400f93c:	add    ebp,0x1
6400f93f:	add    ebx,eax
6400f941:	cmp    esi,0x3
6400f944:	mov    DWORD PTR [esp+0x10],edx
6400f948:	jb     0x6400f926
6400f94a:	mov    ecx,ebx
6400f94c:	shr    ebx,1
6400f94e:	mov    eax,ebx
6400f950:	and    ecx,0x1
6400f953:	and    eax,0x3
6400f956:	sub    esi,0x1
6400f959:	cmp    eax,0x3
6400f95c:	mov    DWORD PTR [edi+0x4],ecx
6400f95f:	ja     0x6400f9bf
6400f961:	jmp    DWORD PTR [eax*4+0x6401074c]
6400f968:	shr    ebx,0x2
6400f96b:	mov    DWORD PTR [edi],0xd
6400f971:	mov    DWORD PTR [esp+0x18],ebx
6400f975:	sub    esi,0x2
6400f978:	jmp    0x6401056e
6400f97d:	mov    eax,edi
6400f97f:	call   0x6400f060
6400f984:	shr    ebx,0x2
6400f987:	mov    DWORD PTR [edi],0x12
6400f98d:	mov    DWORD PTR [esp+0x18],ebx
6400f991:	sub    esi,0x2
6400f994:	jmp    0x6401056e
6400f999:	shr    ebx,0x2
6400f99c:	mov    DWORD PTR [edi],0xf
6400f9a2:	mov    DWORD PTR [esp+0x18],ebx
6400f9a6:	sub    esi,0x2
6400f9a9:	jmp    0x6401056e
6400f9ae:	mov    eax,DWORD PTR [esp+0x40]
6400f9b2:	mov    DWORD PTR [eax+0x18],0x6403d2ac
6400f9b9:	mov    DWORD PTR [edi],0x1b
6400f9bf:	shr    ebx,0x2
6400f9c2:	mov    DWORD PTR [esp+0x18],ebx
6400f9c6:	sub    esi,0x2
6400f9c9:	jmp    0x6401056e
6400f9ce:	mov    ecx,esi
6400f9d0:	and    ecx,0x7
6400f9d3:	shr    ebx,cl
6400f9d5:	sub    esi,ecx
6400f9d7:	cmp    esi,0x20
6400f9da:	mov    DWORD PTR [esp+0x18],ebx
6400f9de:	jae    0x6400fa08
6400f9e0:	test   edx,edx
6400f9e2:	je     0x640105cc
6400f9e8:	movzx  eax,BYTE PTR [ebp+0x0]
6400f9ec:	mov    ecx,esi
6400f9ee:	shl    eax,cl
6400f9f0:	sub    edx,0x1
6400f9f3:	add    esi,0x8
6400f9f6:	add    ebp,0x1
6400f9f9:	add    ebx,eax
6400f9fb:	cmp    esi,0x20
6400f9fe:	mov    DWORD PTR [esp+0x10],edx
6400fa02:	mov    DWORD PTR [esp+0x18],ebx
6400fa06:	jb     0x6400f9e0
6400fa08:	mov    ecx,ebx
6400fa0a:	mov    eax,ebx
6400fa0c:	not    ecx
6400fa0e:	and    eax,0xffff
6400fa13:	shr    ecx,0x10
6400fa16:	cmp    eax,ecx
6400fa18:	je     0x6400fa2a
6400fa1a:	mov    eax,DWORD PTR [esp+0x40]
6400fa1e:	mov    DWORD PTR [eax+0x18],0x6403d28c
6400fa25:	jmp    0x64010568
6400fa2a:	xor    ebx,ebx
6400fa2c:	mov    DWORD PTR [edi+0x40],eax
6400fa2f:	mov    DWORD PTR [esp+0x18],ebx
6400fa33:	xor    esi,esi
6400fa35:	mov    DWORD PTR [edi],0xe
6400fa3b:	mov    eax,DWORD PTR [edi+0x40]
6400fa3e:	test   eax,eax
6400fa40:	mov    DWORD PTR [esp+0x14],eax
6400fa44:	je     0x640100fc
6400fa4a:	cmp    eax,edx
6400fa4c:	jbe    0x6400fa54
6400fa4e:	mov    eax,edx
6400fa50:	mov    DWORD PTR [esp+0x14],edx
6400fa54:	mov    ecx,DWORD PTR [esp+0x1c]
6400fa58:	cmp    eax,ecx
6400fa5a:	jbe    0x6400fa62
6400fa5c:	mov    eax,ecx
6400fa5e:	mov    DWORD PTR [esp+0x14],eax
6400fa62:	test   eax,eax
6400fa64:	je     0x640105cc
6400fa6a:	mov    ecx,DWORD PTR [esp+0x14]
6400fa6e:	mov    edx,DWORD PTR [esp+0x28]
6400fa72:	push   ecx
6400fa73:	push   ebp
6400fa74:	push   edx
6400fa75:	call   0x64015180
6400fa7a:	mov    eax,DWORD PTR [esp+0x20]
6400fa7e:	sub    DWORD PTR [esp+0x1c],eax
6400fa82:	sub    DWORD PTR [esp+0x28],eax
6400fa86:	add    DWORD PTR [esp+0x34],eax
6400fa8a:	mov    edx,DWORD PTR [esp+0x1c]
6400fa8e:	add    esp,0xc
6400fa91:	add    ebp,eax
6400fa93:	sub    DWORD PTR [edi+0x40],eax
6400fa96:	jmp    0x6401056e
6400fa9b:	cmp    esi,0xe
6400fa9e:	jae    0x6400fac4
6400faa0:	test   edx,edx
6400faa2:	je     0x640105cc
6400faa8:	movzx  eax,BYTE PTR [ebp+0x0]
6400faac:	mov    ecx,esi
6400faae:	shl    eax,cl
6400fab0:	sub    edx,0x1
6400fab3:	add    esi,0x8
6400fab6:	add    ebp,0x1
6400fab9:	add    ebx,eax
6400fabb:	cmp    esi,0xe
6400fabe:	mov    DWORD PTR [esp+0x10],edx
6400fac2:	jb     0x6400faa0
6400fac4:	mov    ecx,ebx
6400fac6:	and    ecx,0x1f
6400fac9:	shr    ebx,0x5
6400facc:	add    ecx,0x101
6400fad2:	mov    eax,ebx
6400fad4:	mov    DWORD PTR [edi+0x60],ecx
6400fad7:	shr    ebx,0x5
6400fada:	mov    ecx,ebx
6400fadc:	and    eax,0x1f
6400fadf:	and    ecx,0xf
6400fae2:	add    eax,0x1
6400fae5:	add    ecx,0x4
6400fae8:	shr    ebx,0x4
6400faeb:	sub    esi,0xe
6400faee:	cmp    DWORD PTR [edi+0x60],0x11e
6400faf5:	mov    DWORD PTR [edi+0x64],eax
6400faf8:	mov    DWORD PTR [edi+0x5c],ecx
6400fafb:	mov    DWORD PTR [esp+0x18],ebx
6400faff:	ja     0x6400fbf5
6400fb05:	cmp    eax,0x1e
6400fb08:	ja     0x6400fbf5
6400fb0e:	mov    DWORD PTR [edi+0x68],0x0
6400fb15:	mov    DWORD PTR [edi],0x10
6400fb1b:	mov    ecx,DWORD PTR [edi+0x68]
6400fb1e:	cmp    ecx,DWORD PTR [edi+0x5c]
6400fb21:	jae    0x6400fb78
6400fb23:	cmp    esi,0x3
6400fb26:	jae    0x6400fb4c
6400fb28:	test   edx,edx
6400fb2a:	je     0x640105cc
6400fb30:	movzx  eax,BYTE PTR [ebp+0x0]
6400fb34:	mov    ecx,esi
6400fb36:	shl    eax,cl
6400fb38:	sub    edx,0x1
6400fb3b:	add    esi,0x8
6400fb3e:	add    ebp,0x1
6400fb41:	add    ebx,eax
6400fb43:	cmp    esi,0x3
6400fb46:	mov    DWORD PTR [esp+0x10],edx
6400fb4a:	jb     0x6400fb28
6400fb4c:	mov    eax,DWORD PTR [edi+0x68]
6400fb4f:	movzx  eax,WORD PTR [eax*2+0x6403d150]
6400fb57:	movzx  ecx,bl
6400fb5a:	and    ecx,0x7
6400fb5d:	mov    WORD PTR [edi+eax*2+0x70],cx
6400fb62:	add    DWORD PTR [edi+0x68],0x1
6400fb66:	mov    ecx,DWORD PTR [edi+0x68]
6400fb69:	shr    ebx,0x3
6400fb6c:	sub    esi,0x3
6400fb6f:	cmp    ecx,DWORD PTR [edi+0x5c]
6400fb72:	mov    DWORD PTR [esp+0x18],ebx
6400fb76:	jb     0x6400fb23
6400fb78:	cmp    DWORD PTR [edi+0x68],0x13
6400fb7c:	jae    0x6400fba9
6400fb7e:	mov    ecx,0x1
6400fb83:	xor    eax,eax
6400fb85:	jmp    0x6400fb90
6400fb87:	lea    esp,[esp+0x0]
6400fb8e:	mov    edi,edi
6400fb90:	mov    edx,DWORD PTR [edi+0x68]
6400fb93:	movzx  edx,WORD PTR [edx*2+0x6403d150]
6400fb9b:	mov    WORD PTR [edi+edx*2+0x70],ax
6400fba0:	add    DWORD PTR [edi+0x68],ecx
6400fba3:	cmp    DWORD PTR [edi+0x68],0x13
6400fba7:	jb     0x6400fb90
6400fba9:	lea    eax,[edi+0x530]
6400fbaf:	lea    ecx,[edi+0x6c]
6400fbb2:	mov    DWORD PTR [ecx],eax
6400fbb4:	mov    DWORD PTR [edi+0x4c],eax
6400fbb7:	lea    edx,[edi+0x2f0]
6400fbbd:	push   edx
6400fbbe:	lea    eax,[edi+0x54]
6400fbc1:	push   eax
6400fbc2:	push   ecx
6400fbc3:	mov    DWORD PTR [eax],0x7
6400fbc9:	push   0x13
6400fbcb:	lea    eax,[edi+0x70]
6400fbce:	push   eax
6400fbcf:	push   0x0
6400fbd1:	call   0x640129b0
6400fbd6:	mov    edx,DWORD PTR [esp+0x28]
6400fbda:	add    esp,0x18
6400fbdd:	test   eax,eax
6400fbdf:	mov    DWORD PTR [esp+0x30],eax
6400fbe3:	je     0x6400fc05
6400fbe5:	mov    ecx,DWORD PTR [esp+0x40]
6400fbe9:	mov    DWORD PTR [ecx+0x18],0x6403d270
6400fbf0:	jmp    0x64010568
6400fbf5:	mov    eax,DWORD PTR [esp+0x40]
6400fbf9:	mov    DWORD PTR [eax+0x18],0x6403d24c
6400fc00:	jmp    0x64010568
6400fc05:	mov    DWORD PTR [edi+0x68],0x0
6400fc0c:	mov    DWORD PTR [edi],0x11
6400fc12:	mov    eax,DWORD PTR [edi+0x64]
6400fc15:	add    eax,DWORD PTR [edi+0x60]
6400fc18:	cmp    DWORD PTR [edi+0x68],eax
6400fc1b:	jae    0x6400fe59
6400fc21:	mov    ecx,DWORD PTR [edi+0x54]
6400fc24:	mov    eax,0x1
6400fc29:	shl    eax,cl
6400fc2b:	mov    ecx,DWORD PTR [edi+0x4c]
6400fc2e:	sub    eax,0x1
6400fc31:	and    eax,ebx
6400fc33:	mov    eax,DWORD PTR [ecx+eax*4]
6400fc36:	mov    ecx,eax
6400fc38:	shr    ecx,0x8
6400fc3b:	movzx  ecx,cl
6400fc3e:	cmp    ecx,esi
6400fc40:	mov    DWORD PTR [esp+0x14],eax
6400fc44:	jbe    0x6400fc8a
6400fc46:	test   edx,edx
6400fc48:	je     0x640105cc
6400fc4e:	movzx  eax,BYTE PTR [ebp+0x0]
6400fc52:	mov    ecx,esi
6400fc54:	shl    eax,cl
6400fc56:	mov    ecx,DWORD PTR [edi+0x54]
6400fc59:	sub    edx,0x1
6400fc5c:	add    esi,0x8
6400fc5f:	add    ebx,eax
6400fc61:	mov    eax,0x1
6400fc66:	shl    eax,cl
6400fc68:	mov    ecx,DWORD PTR [edi+0x4c]
6400fc6b:	add    ebp,0x1
6400fc6e:	mov    DWORD PTR [esp+0x10],edx
6400fc72:	sub    eax,0x1
6400fc75:	and    eax,ebx
6400fc77:	mov    eax,DWORD PTR [ecx+eax*4]
6400fc7a:	mov    ecx,eax
6400fc7c:	shr    ecx,0x8
6400fc7f:	movzx  ecx,cl
6400fc82:	cmp    ecx,esi
6400fc84:	mov    DWORD PTR [esp+0x14],eax
6400fc88:	ja     0x6400fc46
6400fc8a:	mov    ecx,eax
6400fc8c:	shr    ecx,0x10
6400fc8f:	cmp    ecx,0x10
6400fc92:	jae    0x6400fceb
6400fc94:	mov    ecx,eax
6400fc96:	shr    ecx,0x8
6400fc99:	movzx  ecx,cl
6400fc9c:	cmp    esi,ecx
6400fc9e:	jae    0x6400fcca
6400fca0:	test   edx,edx
6400fca2:	je     0x640105cc
6400fca8:	movzx  eax,BYTE PTR [ebp+0x0]
6400fcac:	mov    ecx,esi
6400fcae:	shl    eax,cl
6400fcb0:	sub    edx,0x1
6400fcb3:	add    esi,0x8
6400fcb6:	add    ebp,0x1
6400fcb9:	add    ebx,eax
6400fcbb:	mov    eax,DWORD PTR [esp+0x14]
6400fcbf:	movzx  ecx,ah
6400fcc2:	cmp    esi,ecx
6400fcc4:	mov    DWORD PTR [esp+0x10],edx
6400fcc8:	jb     0x6400fca0
6400fcca:	movzx  ecx,ah
6400fccd:	mov    eax,DWORD PTR [edi+0x68]
6400fcd0:	shr    ebx,cl
6400fcd2:	sub    esi,ecx
6400fcd4:	mov    cx,WORD PTR [esp+0x16]
6400fcd9:	mov    WORD PTR [edi+eax*2+0x70],cx
6400fcde:	add    DWORD PTR [edi+0x68],0x1
6400fce2:	mov    DWORD PTR [esp+0x18],ebx
6400fce6:	jmp    0x6400fe4a
6400fceb:	mov    cx,WORD PTR [esp+0x16]
6400fcf0:	cmp    cx,0x10
6400fcf4:	jne    0x6400fd61
6400fcf6:	movzx  ecx,ah
6400fcf9:	lea    eax,[ecx+0x2]
6400fcfc:	cmp    esi,eax
6400fcfe:	mov    DWORD PTR [esp+0x24],ecx
6400fd02:	jae    0x6400fd2e
6400fd04:	test   edx,edx
6400fd06:	je     0x640105cc
6400fd0c:	movzx  eax,BYTE PTR [ebp+0x0]
6400fd10:	mov    ecx,esi
6400fd12:	shl    eax,cl
6400fd14:	mov    ecx,DWORD PTR [esp+0x24]
6400fd18:	sub    edx,0x1
6400fd1b:	add    esi,0x8
6400fd1e:	add    ebx,eax
6400fd20:	lea    eax,[ecx+0x2]
6400fd23:	add    ebp,0x1
6400fd26:	cmp    esi,eax
6400fd28:	mov    DWORD PTR [esp+0x10],edx
6400fd2c:	jb     0x6400fd04
6400fd2e:	mov    eax,DWORD PTR [edi+0x68]
6400fd31:	shr    ebx,cl
6400fd33:	sub    esi,ecx
6400fd35:	test   eax,eax
6400fd37:	mov    DWORD PTR [esp+0x18],ebx
6400fd3b:	je     0x6400feb0
6400fd41:	movzx  ecx,WORD PTR [edi+eax*2+0x6e]
6400fd46:	mov    eax,ebx
6400fd48:	and    eax,0x3
6400fd4b:	add    eax,0x3
6400fd4e:	shr    ebx,0x2
6400fd51:	mov    DWORD PTR [esp+0x24],ecx
6400fd55:	mov    DWORD PTR [esp+0x14],eax
6400fd59:	sub    esi,0x2
6400fd5c:	jmp    0x6400fe10
6400fd61:	cmp    cx,0x11
6400fd65:	movzx  ecx,ah
6400fd68:	mov    DWORD PTR [esp+0x24],ecx
6400fd6c:	jne    0x6400fdb7
6400fd6e:	lea    eax,[ecx+0x3]
6400fd71:	cmp    esi,eax
6400fd73:	jae    0x6400fd9f
6400fd75:	test   edx,edx
6400fd77:	je     0x640105cc
6400fd7d:	movzx  eax,BYTE PTR [ebp+0x0]
6400fd81:	mov    ecx,esi
6400fd83:	shl    eax,cl
6400fd85:	mov    ecx,DWORD PTR [esp+0x24]
6400fd89:	sub    edx,0x1
6400fd8c:	add    esi,0x8
6400fd8f:	add    ebx,eax
6400fd91:	lea    eax,[ecx+0x3]
6400fd94:	add    ebp,0x1
6400fd97:	cmp    esi,eax
6400fd99:	mov    DWORD PTR [esp+0x10],edx
6400fd9d:	jb     0x6400fd75
6400fd9f:	shr    ebx,cl
6400fda1:	mov    eax,ebx
6400fda3:	and    eax,0x7
6400fda6:	add    eax,0x3
6400fda9:	mov    DWORD PTR [esp+0x14],eax
6400fdad:	shr    ebx,0x3
6400fdb0:	mov    eax,0xfffffffd
6400fdb5:	jmp    0x6400fe00
6400fdb7:	lea    eax,[ecx+0x7]
6400fdba:	cmp    esi,eax
6400fdbc:	jae    0x6400fdea
6400fdbe:	mov    edi,edi
6400fdc0:	test   edx,edx
6400fdc2:	je     0x640105cc
6400fdc8:	movzx  eax,BYTE PTR [ebp+0x0]
6400fdcc:	mov    ecx,esi
6400fdce:	shl    eax,cl
6400fdd0:	mov    ecx,DWORD PTR [esp+0x24]
6400fdd4:	sub    edx,0x1
6400fdd7:	add    esi,0x8
6400fdda:	add    ebx,eax
6400fddc:	lea    eax,[ecx+0x7]
6400fddf:	add    ebp,0x1
6400fde2:	cmp    esi,eax
6400fde4:	mov    DWORD PTR [esp+0x10],edx
6400fde8:	jb     0x6400fdc0
6400fdea:	shr    ebx,cl
6400fdec:	mov    eax,ebx
6400fdee:	and    eax,0x7f
6400fdf1:	add    eax,0xb
6400fdf4:	mov    DWORD PTR [esp+0x14],eax
6400fdf8:	shr    ebx,0x7
6400fdfb:	mov    eax,0xfffffff9
6400fe00:	sub    eax,ecx
6400fe02:	add    esi,eax
6400fe04:	mov    eax,DWORD PTR [esp+0x14]
6400fe08:	mov    DWORD PTR [esp+0x24],0x0
6400fe10:	mov    ecx,DWORD PTR [edi+0x68]
6400fe13:	add    ecx,eax
6400fe15:	mov    eax,DWORD PTR [edi+0x64]
6400fe18:	add    eax,DWORD PTR [edi+0x60]
6400fe1b:	mov    DWORD PTR [esp+0x18],ebx
6400fe1f:	cmp    ecx,eax
6400fe21:	ja     0x6400fec0
6400fe27:	cmp    DWORD PTR [esp+0x14],0x0
6400fe2c:	je     0x6400fe4a
6400fe2e:	mov    eax,DWORD PTR [esp+0x24]
6400fe32:	mov    ecx,DWORD PTR [edi+0x68]
6400fe35:	sub    DWORD PTR [esp+0x14],0x1
6400fe3a:	mov    WORD PTR [edi+ecx*2+0x70],ax
6400fe3f:	add    DWORD PTR [edi+0x68],0x1
6400fe43:	cmp    DWORD PTR [esp+0x14],0x0
6400fe48:	jne    0x6400fe32
6400fe4a:	mov    eax,DWORD PTR [edi+0x64]
6400fe4d:	add    eax,DWORD PTR [edi+0x60]
6400fe50:	cmp    DWORD PTR [edi+0x68],eax
6400fe53:	jb     0x6400fc21
6400fe59:	cmp    DWORD PTR [edi],0x1b
6400fe5c:	je     0x6401056e
6400fe62:	lea    eax,[edi+0x530]
6400fe68:	lea    ecx,[edi+0x6c]
6400fe6b:	mov    DWORD PTR [ecx],eax
6400fe6d:	lea    edx,[edi+0x2f0]
6400fe73:	push   edx
6400fe74:	mov    DWORD PTR [edi+0x4c],eax
6400fe77:	lea    eax,[edi+0x54]
6400fe7a:	push   eax
6400fe7b:	push   ecx
6400fe7c:	mov    ecx,DWORD PTR [edi+0x60]
6400fe7f:	push   ecx
6400fe80:	lea    edx,[edi+0x70]
6400fe83:	push   edx
6400fe84:	push   0x1
6400fe86:	mov    DWORD PTR [eax],0x9
6400fe8c:	call   0x640129b0
6400fe91:	add    esp,0x18
6400fe94:	test   eax,eax
6400fe96:	mov    DWORD PTR [esp+0x30],eax
6400fe9a:	je     0x6400fed0
6400fe9c:	mov    eax,DWORD PTR [esp+0x40]
6400fea0:	mov    edx,DWORD PTR [esp+0x10]
6400fea4:	mov    DWORD PTR [eax+0x18],0x6403d230
6400feab:	jmp    0x64010568
6400feb0:	mov    ecx,DWORD PTR [esp+0x40]
6400feb4:	mov    DWORD PTR [ecx+0x18],0x6403d214
6400febb:	jmp    0x64010568
6400fec0:	mov    eax,DWORD PTR [esp+0x40]
6400fec4:	mov    DWORD PTR [eax+0x18],0x6403d214
6400fecb:	jmp    0x64010568
6400fed0:	mov    edx,DWORD PTR [edi+0x6c]
6400fed3:	lea    ecx,[edi+0x6c]
6400fed6:	mov    DWORD PTR [edi+0x50],edx
6400fed9:	lea    edx,[edi+0x2f0]
6400fedf:	push   edx
6400fee0:	lea    eax,[edi+0x58]
6400fee3:	push   eax
6400fee4:	push   ecx
6400fee5:	mov    ecx,DWORD PTR [edi+0x60]
6400fee8:	mov    DWORD PTR [eax],0x6
6400feee:	mov    eax,DWORD PTR [edi+0x64]
6400fef1:	push   eax
6400fef2:	lea    edx,[edi+ecx*2+0x70]
6400fef6:	push   edx
6400fef7:	push   0x2
6400fef9:	call   0x640129b0
6400fefe:	mov    edx,DWORD PTR [esp+0x28]
6400ff02:	add    esp,0x18
6400ff05:	test   eax,eax
6400ff07:	mov    DWORD PTR [esp+0x30],eax
6400ff0b:	je     0x6400ff1d
6400ff0d:	mov    eax,DWORD PTR [esp+0x40]
6400ff11:	mov    DWORD PTR [eax+0x18],0x6403d1fc
6400ff18:	jmp    0x64010568
6400ff1d:	mov    DWORD PTR [edi],0x12
6400ff23:	cmp    edx,0x6
6400ff26:	jb     0x6400ff91
6400ff2c:	cmp    DWORD PTR [esp+0x1c],0x102
6400ff34:	jb     0x6400ff91
6400ff36:	mov    eax,DWORD PTR [esp+0x40]
6400ff3a:	mov    edx,DWORD PTR [esp+0x1c]
6400ff3e:	mov    ecx,DWORD PTR [esp+0x28]
6400ff42:	mov    DWORD PTR [eax+0x10],edx
6400ff45:	mov    edx,DWORD PTR [esp+0x2c]
6400ff49:	mov    DWORD PTR [eax+0xc],ecx
6400ff4c:	mov    ecx,DWORD PTR [esp+0x10]
6400ff50:	push   edx
6400ff51:	mov    DWORD PTR [eax],ebp
6400ff53:	mov    DWORD PTR [eax+0x4],ecx
6400ff56:	push   eax
6400ff57:	mov    DWORD PTR [edi+0x38],ebx
6400ff5a:	mov    DWORD PTR [edi+0x3c],esi
6400ff5d:	call   0x640124f0
6400ff62:	mov    eax,DWORD PTR [esp+0x48]
6400ff66:	mov    edx,DWORD PTR [eax+0x10]
6400ff69:	mov    ecx,DWORD PTR [eax+0xc]
6400ff6c:	mov    ebp,DWORD PTR [eax]
6400ff6e:	mov    eax,DWORD PTR [eax+0x4]
6400ff71:	mov    ebx,DWORD PTR [edi+0x38]
6400ff74:	mov    esi,DWORD PTR [edi+0x3c]
6400ff77:	mov    DWORD PTR [esp+0x24],edx
6400ff7b:	add    esp,0x8
6400ff7e:	mov    DWORD PTR [esp+0x28],ecx
6400ff82:	mov    DWORD PTR [esp+0x10],eax
6400ff86:	mov    DWORD PTR [esp+0x18],ebx
6400ff8a:	mov    edx,eax
6400ff8c:	jmp    0x6401056e
6400ff91:	mov    ecx,DWORD PTR [edi+0x54]
6400ff94:	mov    eax,0x1
6400ff99:	shl    eax,cl
6400ff9b:	sub    eax,0x1
6400ff9e:	and    eax,ebx
6400ffa0:	mov    ecx,eax
6400ffa2:	mov    eax,DWORD PTR [edi+0x4c]
6400ffa5:	mov    eax,DWORD PTR [eax+ecx*4]
6400ffa8:	mov    ecx,eax
6400ffaa:	shr    ecx,0x8
6400ffad:	movzx  ecx,cl
6400ffb0:	cmp    ecx,esi
6400ffb2:	mov    DWORD PTR [esp+0x14],eax
6400ffb6:	jbe    0x6400fffc
6400ffb8:	test   edx,edx
6400ffba:	je     0x640105cc
6400ffc0:	movzx  eax,BYTE PTR [ebp+0x0]
6400ffc4:	mov    ecx,esi
6400ffc6:	shl    eax,cl
6400ffc8:	mov    ecx,DWORD PTR [edi+0x54]
6400ffcb:	sub    edx,0x1
6400ffce:	add    esi,0x8
6400ffd1:	add    ebx,eax
6400ffd3:	mov    eax,0x1
6400ffd8:	shl    eax,cl
6400ffda:	mov    ecx,DWORD PTR [edi+0x4c]
6400ffdd:	add    ebp,0x1
6400ffe0:	mov    DWORD PTR [esp+0x10],edx
6400ffe4:	sub    eax,0x1
6400ffe7:	and    eax,ebx
6400ffe9:	mov    eax,DWORD PTR [ecx+eax*4]
6400ffec:	mov    ecx,eax
6400ffee:	shr    ecx,0x8
6400fff1:	movzx  ecx,cl
6400fff4:	cmp    ecx,esi
6400fff6:	mov    DWORD PTR [esp+0x14],eax
6400fffa:	ja     0x6400ffb8
6400fffc:	test   al,al
6400fffe:	je     0x640100cd
64010004:	test   al,0xf0
64010006:	jne    0x640100cd
6401000c:	mov    ecx,eax
6401000e:	shr    ecx,0x8
64010011:	mov    DWORD PTR [esp+0x34],ecx
64010015:	movzx  ecx,cl
64010018:	mov    DWORD PTR [esp+0x24],ecx
6401001c:	movzx  ecx,al
6401001f:	add    ecx,DWORD PTR [esp+0x24]
64010023:	mov    DWORD PTR [esp+0x18],eax
64010027:	mov    eax,0x1
6401002c:	shl    eax,cl
6401002e:	mov    ecx,DWORD PTR [esp+0x24]
64010032:	sub    eax,0x1
64010035:	and    eax,ebx
64010037:	shr    eax,cl
64010039:	mov    ecx,DWORD PTR [esp+0x14]
6401003d:	shr    ecx,0x10
64010040:	add    eax,ecx
64010042:	mov    ecx,eax
64010044:	mov    eax,DWORD PTR [edi+0x4c]
64010047:	mov    eax,DWORD PTR [eax+ecx*4]
6401004a:	movzx  ecx,BYTE PTR [esp+0x34]
6401004f:	mov    DWORD PTR [esp+0x14],eax
64010053:	shr    eax,0x8
64010056:	movzx  eax,al
64010059:	add    eax,ecx
6401005b:	cmp    eax,esi
6401005d:	jbe    0x640100c0
64010063:	test   edx,edx
64010065:	je     0x640105cc
6401006b:	movzx  eax,BYTE PTR [ebp+0x0]
6401006f:	mov    ecx,esi
64010071:	shl    eax,cl
64010073:	mov    ecx,DWORD PTR [esp+0x18]
64010077:	sub    edx,0x1
6401007a:	add    esi,0x8
6401007d:	add    ebx,eax
6401007f:	movzx  eax,ch
64010082:	add    ecx,eax
64010084:	mov    DWORD PTR [esp+0x24],eax
64010088:	mov    eax,0x1
6401008d:	shl    eax,cl
6401008f:	mov    ecx,DWORD PTR [esp+0x24]
64010093:	add    ebp,0x1
64010096:	mov    DWORD PTR [esp+0x10],edx
6401009a:	sub    eax,0x1
6401009d:	and    eax,ebx
6401009f:	shr    eax,cl
640100a1:	movzx  ecx,WORD PTR [esp+0x1a]
640100a6:	add    eax,ecx
640100a8:	mov    ecx,DWORD PTR [edi+0x4c]
640100ab:	mov    eax,DWORD PTR [ecx+eax*4]
640100ae:	mov    DWORD PTR [esp+0x14],eax
640100b2:	shr    eax,0x8
640100b5:	movzx  eax,al
640100b8:	add    eax,DWORD PTR [esp+0x24]
640100bc:	cmp    eax,esi
640100be:	ja     0x64010063
640100c0:	movzx  ecx,BYTE PTR [esp+0x19]
640100c5:	mov    eax,DWORD PTR [esp+0x14]
640100c9:	shr    ebx,cl
640100cb:	sub    esi,ecx
640100cd:	mov    ecx,eax
640100cf:	shr    ecx,0x8
640100d2:	movzx  ecx,cl
640100d5:	shr    ebx,cl
640100d7:	sub    esi,ecx
640100d9:	mov    DWORD PTR [esp+0x24],ecx
640100dd:	mov    ecx,eax
640100df:	shr    ecx,0x10
640100e2:	test   al,al
640100e4:	mov    DWORD PTR [esp+0x18],ebx
640100e8:	mov    DWORD PTR [edi+0x40],ecx
640100eb:	jne    0x640100f8
640100ed:	mov    DWORD PTR [edi],0x17
640100f3:	jmp    0x6401056e
640100f8:	test   al,0x20
640100fa:	je     0x64010107
640100fc:	mov    DWORD PTR [edi],0xb
64010102:	jmp    0x6401056e
64010107:	test   al,0x40
64010109:	je     0x6401011b
6401010b:	mov    eax,DWORD PTR [esp+0x40]
6401010f:	mov    DWORD PTR [eax+0x18],0x6403d1e0
64010116:	jmp    0x64010568
6401011b:	and    eax,0xf
6401011e:	mov    DWORD PTR [edi+0x48],eax
64010121:	mov    DWORD PTR [edi],0x13
64010127:	mov    eax,DWORD PTR [edi+0x48]
6401012a:	test   eax,eax
6401012c:	je     0x6401016c
6401012e:	cmp    esi,eax
64010130:	jae    0x64010156
64010132:	test   edx,edx
64010134:	je     0x640105cc
6401013a:	movzx  eax,BYTE PTR [ebp+0x0]
6401013e:	mov    ecx,esi
64010140:	shl    eax,cl
64010142:	sub    edx,0x1
64010145:	add    esi,0x8
64010148:	add    ebp,0x1
6401014b:	add    ebx,eax
6401014d:	cmp    esi,DWORD PTR [edi+0x48]
64010150:	mov    DWORD PTR [esp+0x10],edx
64010154:	jb     0x64010132
64010156:	mov    ecx,DWORD PTR [edi+0x48]
64010159:	mov    eax,0x1
6401015e:	shl    eax,cl
64010160:	sub    eax,0x1
64010163:	and    eax,ebx
64010165:	add    DWORD PTR [edi+0x40],eax
64010168:	shr    ebx,cl
6401016a:	sub    esi,ecx
6401016c:	mov    DWORD PTR [edi],0x14
64010172:	mov    ecx,DWORD PTR [edi+0x58]
64010175:	mov    eax,0x1
6401017a:	shl    eax,cl
6401017c:	sub    eax,0x1
6401017f:	and    eax,ebx
64010181:	mov    ecx,eax
64010183:	mov    eax,DWORD PTR [edi+0x50]
64010186:	mov    eax,DWORD PTR [eax+ecx*4]
64010189:	mov    ecx,eax
6401018b:	shr    ecx,0x8
6401018e:	movzx  ecx,cl
64010191:	cmp    ecx,esi
64010193:	mov    DWORD PTR [esp+0x14],eax
64010197:	jbe    0x640101e4
64010199:	lea    esp,[esp+0x0]
640101a0:	test   edx,edx
640101a2:	je     0x640105cc
640101a8:	movzx  eax,BYTE PTR [ebp+0x0]
640101ac:	mov    ecx,esi
640101ae:	shl    eax,cl
640101b0:	mov    ecx,DWORD PTR [edi+0x58]
640101b3:	sub    edx,0x1
640101b6:	add    esi,0x8
640101b9:	add    ebx,eax
640101bb:	mov    eax,0x1
640101c0:	shl    eax,cl
640101c2:	mov    ecx,DWORD PTR [edi+0x50]
640101c5:	add    ebp,0x1
640101c8:	mov    DWORD PTR [esp+0x10],edx
640101cc:	sub    eax,0x1
640101cf:	and    eax,ebx
640101d1:	mov    eax,DWORD PTR [ecx+eax*4]
640101d4:	mov    ecx,eax
640101d6:	shr    ecx,0x8
640101d9:	movzx  ecx,cl
640101dc:	cmp    ecx,esi
640101de:	mov    DWORD PTR [esp+0x14],eax
640101e2:	ja     0x640101a0
640101e4:	test   al,0xf0
640101e6:	jne    0x640102ad
640101ec:	mov    ecx,eax
640101ee:	shr    ecx,0x8
640101f1:	mov    DWORD PTR [esp+0x34],ecx
640101f5:	movzx  ecx,cl
640101f8:	mov    DWORD PTR [esp+0x24],ecx
640101fc:	movzx  ecx,al
640101ff:	add    ecx,DWORD PTR [esp+0x24]
64010203:	mov    DWORD PTR [esp+0x18],eax
64010207:	mov    eax,0x1
6401020c:	shl    eax,cl
6401020e:	mov    ecx,DWORD PTR [esp+0x24]
64010212:	sub    eax,0x1
64010215:	and    eax,ebx
64010217:	shr    eax,cl
64010219:	mov    ecx,DWORD PTR [esp+0x14]
6401021d:	shr    ecx,0x10
64010220:	add    eax,ecx
64010222:	mov    ecx,eax
64010224:	mov    eax,DWORD PTR [edi+0x50]
64010227:	mov    eax,DWORD PTR [eax+ecx*4]
6401022a:	movzx  ecx,BYTE PTR [esp+0x34]
6401022f:	mov    DWORD PTR [esp+0x14],eax
64010233:	shr    eax,0x8
64010236:	movzx  eax,al
64010239:	add    eax,ecx
6401023b:	cmp    eax,esi
6401023d:	jbe    0x640102a0
64010243:	test   edx,edx
64010245:	je     0x640105cc
6401024b:	movzx  eax,BYTE PTR [ebp+0x0]
6401024f:	mov    ecx,esi
64010251:	shl    eax,cl
64010253:	mov    ecx,DWORD PTR [esp+0x18]
64010257:	sub    edx,0x1
6401025a:	add    esi,0x8
6401025d:	add    ebx,eax
6401025f:	movzx  eax,ch
64010262:	add    ecx,eax
64010264:	mov    DWORD PTR [esp+0x24],eax
64010268:	mov    eax,0x1
6401026d:	shl    eax,cl
6401026f:	mov    ecx,DWORD PTR [esp+0x24]
64010273:	add    ebp,0x1
64010276:	mov    DWORD PTR [esp+0x10],edx
6401027a:	sub    eax,0x1
6401027d:	and    eax,ebx
6401027f:	shr    eax,cl
64010281:	movzx  ecx,WORD PTR [esp+0x1a]
64010286:	add    eax,ecx
64010288:	mov    ecx,DWORD PTR [edi+0x50]
6401028b:	mov    eax,DWORD PTR [ecx+eax*4]
6401028e:	mov    DWORD PTR [esp+0x14],eax
64010292:	shr    eax,0x8
64010295:	movzx  eax,al
64010298:	add    eax,DWORD PTR [esp+0x24]
6401029c:	cmp    eax,esi
6401029e:	ja     0x64010243
640102a0:	movzx  ecx,BYTE PTR [esp+0x19]
640102a5:	mov    eax,DWORD PTR [esp+0x14]
640102a9:	shr    ebx,cl
640102ab:	sub    esi,ecx
640102ad:	mov    ecx,eax
640102af:	shr    ecx,0x8
640102b2:	movzx  ecx,cl
640102b5:	shr    ebx,cl
640102b7:	sub    esi,ecx
640102b9:	test   al,0x40
640102bb:	mov    DWORD PTR [esp+0x24],ecx
640102bf:	mov    DWORD PTR [esp+0x18],ebx
640102c3:	je     0x640102d5
640102c5:	mov    eax,DWORD PTR [esp+0x40]
640102c9:	mov    DWORD PTR [eax+0x18],0x6403d1c8
640102d0:	jmp    0x64010568
640102d5:	mov    ecx,eax
640102d7:	shr    ecx,0x10
640102da:	and    eax,0xf
640102dd:	mov    DWORD PTR [edi+0x44],ecx
640102e0:	mov    DWORD PTR [edi+0x48],eax
640102e3:	mov    DWORD PTR [edi],0x15
640102e9:	mov    eax,DWORD PTR [edi+0x48]
640102ec:	test   eax,eax
640102ee:	je     0x64010332
640102f0:	cmp    esi,eax
640102f2:	jae    0x64010318
640102f4:	test   edx,edx
640102f6:	je     0x640105cc
640102fc:	movzx  eax,BYTE PTR [ebp+0x0]
64010300:	mov    ecx,esi
64010302:	shl    eax,cl
64010304:	sub    edx,0x1
64010307:	add    esi,0x8
6401030a:	add    ebp,0x1
6401030d:	add    ebx,eax
6401030f:	cmp    esi,DWORD PTR [edi+0x48]
64010312:	mov    DWORD PTR [esp+0x10],edx
64010316:	jb     0x640102f4
64010318:	mov    ecx,DWORD PTR [edi+0x48]
6401031b:	mov    eax,0x1
64010320:	shl    eax,cl
64010322:	sub    eax,0x1
64010325:	and    eax,ebx
64010327:	add    DWORD PTR [edi+0x44],eax
6401032a:	shr    ebx,cl
6401032c:	sub    esi,ecx
6401032e:	mov    DWORD PTR [esp+0x18],ebx
64010332:	mov    ecx,DWORD PTR [edi+0x2c]
64010335:	sub    ecx,DWORD PTR [esp+0x1c]
64010339:	add    ecx,DWORD PTR [esp+0x2c]
6401033d:	cmp    DWORD PTR [edi+0x44],ecx
64010340:	jbe    0x64010352
64010342:	mov    eax,DWORD PTR [esp+0x40]
64010346:	mov    DWORD PTR [eax+0x18],0x6403d1a8
6401034d:	jmp    0x64010568
64010352:	mov    DWORD PTR [edi],0x16
64010358:	cmp    DWORD PTR [esp+0x1c],0x0
6401035d:	je     0x640105cc
64010363:	mov    ecx,DWORD PTR [esp+0x2c]
64010367:	sub    ecx,DWORD PTR [esp+0x1c]
6401036b:	mov    eax,DWORD PTR [edi+0x44]
6401036e:	cmp    eax,ecx
64010370:	jbe    0x640103ae
64010372:	sub    eax,ecx
64010374:	mov    ecx,DWORD PTR [edi+0x30]
64010377:	cmp    eax,ecx
64010379:	mov    DWORD PTR [esp+0x14],eax
6401037d:	jbe    0x6401038f
6401037f:	sub    eax,ecx
64010381:	mov    ecx,DWORD PTR [edi+0x34]
64010384:	add    ecx,DWORD PTR [edi+0x28]
64010387:	mov    DWORD PTR [esp+0x14],eax
6401038b:	sub    ecx,eax
6401038d:	jmp    0x6401039b
6401038f:	mov    ecx,DWORD PTR [edi+0x34]
64010392:	sub    ecx,eax
64010394:	add    ecx,DWORD PTR [edi+0x30]
64010397:	mov    eax,DWORD PTR [esp+0x14]
6401039b:	mov    DWORD PTR [esp+0x24],ecx
6401039f:	mov    ecx,DWORD PTR [edi+0x40]
640103a2:	cmp    eax,ecx
640103a4:	mov    DWORD PTR [esp+0x34],ecx
640103a8:	jbe    0x640103c3
640103aa:	mov    eax,ecx
640103ac:	jmp    0x640103bf
640103ae:	mov    ecx,DWORD PTR [esp+0x28]
640103b2:	sub    ecx,eax
640103b4:	mov    eax,DWORD PTR [edi+0x40]
640103b7:	mov    DWORD PTR [esp+0x24],ecx
640103bb:	mov    DWORD PTR [esp+0x34],eax
640103bf:	mov    DWORD PTR [esp+0x14],eax
640103c3:	mov    ecx,DWORD PTR [esp+0x1c]
640103c7:	cmp    eax,ecx
640103c9:	jbe    0x640103d1
640103cb:	mov    eax,ecx
640103cd:	mov    DWORD PTR [esp+0x14],eax
640103d1:	sub    ecx,eax
640103d3:	mov    DWORD PTR [esp+0x1c],ecx
640103d7:	mov    ecx,DWORD PTR [esp+0x34]
640103db:	sub    ecx,eax
640103dd:	mov    eax,DWORD PTR [esp+0x28]
640103e1:	mov    DWORD PTR [edi+0x40],ecx
640103e4:	mov    ecx,DWORD PTR [esp+0x24]
640103e8:	mov    cl,BYTE PTR [ecx]
640103ea:	add    DWORD PTR [esp+0x24],0x1
640103ef:	mov    BYTE PTR [eax],cl
640103f1:	add    eax,0x1
640103f4:	sub    DWORD PTR [esp+0x14],0x1
640103f9:	jne    0x640103e4
640103fb:	cmp    DWORD PTR [edi+0x40],0x0
640103ff:	mov    DWORD PTR [esp+0x28],eax
64010403:	jne    0x6401056e
64010409:	mov    DWORD PTR [edi],0x12
6401040f:	jmp    0x6401056e
64010414:	cmp    DWORD PTR [esp+0x1c],0x0
64010419:	je     0x640105cc
6401041f:	mov    eax,DWORD PTR [esp+0x28]
64010423:	mov    cl,BYTE PTR [edi+0x40]
64010426:	mov    BYTE PTR [eax],cl
64010428:	add    eax,0x1
6401042b:	sub    DWORD PTR [esp+0x1c],0x1
64010430:	mov    DWORD PTR [esp+0x28],eax
64010434:	mov    DWORD PTR [edi],0x12
6401043a:	jmp    0x6401056e
6401043f:	cmp    DWORD PTR [edi+0x8],0x0
64010443:	je     0x6401050c
64010449:	cmp    esi,0x20
6401044c:	jae    0x64010478
6401044e:	mov    edi,edi
64010450:	test   edx,edx
64010452:	je     0x640105cc
64010458:	movzx  eax,BYTE PTR [ebp+0x0]
6401045c:	mov    ecx,esi
6401045e:	shl    eax,cl
64010460:	sub    edx,0x1
64010463:	add    esi,0x8
64010466:	add    ebp,0x1
64010469:	add    ebx,eax
6401046b:	cmp    esi,0x20
6401046e:	mov    DWORD PTR [esp+0x10],edx
64010472:	mov    DWORD PTR [esp+0x18],ebx
64010476:	jb     0x64010450
64010478:	mov    eax,DWORD PTR [esp+0x2c]
6401047c:	sub    eax,DWORD PTR [esp+0x1c]
64010480:	mov    ecx,DWORD PTR [esp+0x40]
64010484:	add    DWORD PTR [ecx+0x14],eax
64010487:	add    DWORD PTR [edi+0x1c],eax
6401048a:	test   eax,eax
6401048c:	mov    DWORD PTR [esp+0x2c],eax
64010490:	je     0x640104c1
64010492:	mov    ecx,DWORD PTR [esp+0x28]
64010496:	mov    edx,DWORD PTR [edi+0x18]
64010499:	push   eax
6401049a:	sub    ecx,eax
6401049c:	cmp    DWORD PTR [edi+0x10],0x0
640104a0:	push   ecx
640104a1:	push   edx
640104a2:	je     0x640104ab
640104a4:	call   0x640124a0
640104a9:	jmp    0x640104b0
640104ab:	call   0x640107b0
640104b0:	mov    ecx,DWORD PTR [esp+0x4c]
640104b4:	mov    edx,DWORD PTR [esp+0x1c]
640104b8:	mov    DWORD PTR [edi+0x18],eax
640104bb:	add    esp,0xc
640104be:	mov    DWORD PTR [ecx+0x30],eax
640104c1:	cmp    DWORD PTR [edi+0x10],0x0
640104c5:	mov    eax,DWORD PTR [esp+0x1c]
640104c9:	mov    DWORD PTR [esp+0x2c],eax
640104cd:	mov    eax,ebx
640104cf:	jne    0x640104ef
640104d1:	and    eax,0xff00
640104d6:	mov    ecx,ebx
640104d8:	shl    ecx,0x10
640104db:	add    eax,ecx
640104dd:	xor    ecx,ecx
640104df:	mov    ch,BYTE PTR [esp+0x1a]
640104e3:	shl    eax,0x8
640104e6:	add    eax,ecx
640104e8:	mov    ecx,ebx
640104ea:	shr    ecx,0x18
640104ed:	add    eax,ecx
640104ef:	cmp    eax,DWORD PTR [edi+0x18]
640104f2:	je     0x64010504
640104f4:	mov    eax,DWORD PTR [esp+0x40]
640104f8:	mov    DWORD PTR [eax+0x18],0x6403d190
640104ff:	jmp    0x64010568
64010504:	xor    ebx,ebx
64010506:	mov    DWORD PTR [esp+0x18],ebx
6401050a:	xor    esi,esi
6401050c:	mov    DWORD PTR [edi],0x19
64010512:	cmp    DWORD PTR [edi+0x8],0x0
64010516:	je     0x640105b4
6401051c:	cmp    DWORD PTR [edi+0x10],0x0
64010520:	je     0x640105b4
64010526:	cmp    esi,0x20
64010529:	jae    0x64010558
6401052b:	jmp    0x64010530
6401052d:	lea    ecx,[ecx+0x0]
64010530:	test   edx,edx
64010532:	je     0x640105cc
64010538:	movzx  eax,BYTE PTR [ebp+0x0]
6401053c:	mov    ecx,esi
6401053e:	shl    eax,cl
64010540:	sub    edx,0x1
64010543:	add    esi,0x8
64010546:	add    ebp,0x1
64010549:	add    ebx,eax
6401054b:	cmp    esi,0x20
6401054e:	mov    DWORD PTR [esp+0x10],edx
64010552:	mov    DWORD PTR [esp+0x18],ebx
64010556:	jb     0x64010530
64010558:	cmp    ebx,DWORD PTR [edi+0x1c]
6401055b:	je     0x640105b0
6401055d:	mov    ecx,DWORD PTR [esp+0x40]
64010561:	mov    DWORD PTR [ecx+0x18],0x6403d178
64010568:	mov    DWORD PTR [edi],0x1b
6401056e:	mov    eax,DWORD PTR [edi]
64010570:	cmp    eax,0x1c
64010573:	jbe    0x6400f1f0
64010579:	mov    eax,0xfffffffe
6401057e:	pop    esi
6401057f:	pop    ebp
64010580:	pop    ebx
64010581:	pop    edi
64010582:	add    esp,0x2c
64010585:	ret    
64010586:	mov    eax,DWORD PTR [esp+0x40]
6401058a:	mov    ecx,DWORD PTR [esp+0x28]
6401058e:	mov    DWORD PTR [eax+0xc],ecx
64010591:	mov    ecx,DWORD PTR [esp+0x1c]
64010595:	mov    DWORD PTR [eax],ebp
64010597:	mov    DWORD PTR [eax+0x10],ecx
6401059a:	mov    DWORD PTR [eax+0x4],edx
6401059d:	mov    DWORD PTR [edi+0x3c],esi
640105a0:	pop    esi
640105a1:	pop    ebp
640105a2:	mov    DWORD PTR [edi+0x38],ebx
640105a5:	pop    ebx
640105a6:	mov    eax,0x2
640105ab:	pop    edi
640105ac:	add    esp,0x2c
640105af:	ret    
640105b0:	xor    ebx,ebx
640105b2:	xor    esi,esi
640105b4:	mov    DWORD PTR [edi],0x1a
640105ba:	mov    DWORD PTR [esp+0x30],0x1
640105c2:	jmp    0x640105cc
640105c4:	mov    DWORD PTR [esp+0x30],0xfffffffd
640105cc:	mov    eax,DWORD PTR [esp+0x40]
640105d0:	mov    ecx,DWORD PTR [esp+0x28]
640105d4:	mov    DWORD PTR [eax+0xc],ecx
640105d7:	mov    ecx,DWORD PTR [esp+0x1c]
640105db:	mov    DWORD PTR [eax+0x10],ecx
640105de:	mov    DWORD PTR [eax],ebp
640105e0:	mov    DWORD PTR [eax+0x4],edx
640105e3:	cmp    DWORD PTR [edi+0x28],0x0
640105e7:	mov    DWORD PTR [edi+0x38],ebx
640105ea:	mov    DWORD PTR [edi+0x3c],esi
640105ed:	jne    0x640105fd
640105ef:	cmp    DWORD PTR [edi],0x18
640105f2:	jge    0x64010621
640105f4:	mov    edx,DWORD PTR [esp+0x2c]
640105f8:	cmp    edx,DWORD PTR [eax+0x10]
640105fb:	je     0x64010621
640105fd:	mov    eax,DWORD PTR [esp+0x2c]
64010601:	mov    ebx,DWORD PTR [esp+0x40]
64010605:	call   0x6400f080
6401060a:	test   eax,eax
6401060c:	je     0x64010621
6401060e:	mov    DWORD PTR [edi],0x1c
64010614:	pop    esi
64010615:	pop    ebp
64010616:	pop    ebx
64010617:	mov    eax,0xfffffffc
6401061c:	pop    edi
6401061d:	add    esp,0x2c
64010620:	ret    
64010621:	mov    esi,DWORD PTR [esp+0x40]
64010625:	mov    ebp,DWORD PTR [esp+0x38]
64010629:	sub    ebp,DWORD PTR [esi+0x4]
6401062c:	mov    ebx,DWORD PTR [esp+0x2c]
64010630:	sub    ebx,DWORD PTR [esi+0x10]
64010633:	add    DWORD PTR [esi+0x8],ebp
64010636:	add    DWORD PTR [esi+0x14],ebx
64010639:	add    DWORD PTR [edi+0x1c],ebx
6401063c:	cmp    DWORD PTR [edi+0x8],0x0
64010640:	je     0x64010676
64010642:	test   ebx,ebx
64010644:	je     0x64010676
64010646:	cmp    DWORD PTR [edi+0x10],0x0
6401064a:	push   ebx
6401064b:	je     0x6401065e
6401064d:	mov    ecx,DWORD PTR [esi+0xc]
64010650:	mov    edx,DWORD PTR [edi+0x18]
64010653:	sub    ecx,ebx
64010655:	push   ecx
64010656:	push   edx
64010657:	call   0x640124a0
6401065c:	jmp    0x6401066d
6401065e:	mov    eax,DWORD PTR [esi+0xc]
64010661:	mov    ecx,DWORD PTR [edi+0x18]
64010664:	sub    eax,ebx
64010666:	push   eax
64010667:	push   ecx
64010668:	call   0x640107b0
6401066d:	mov    DWORD PTR [edi+0x18],eax
64010670:	add    esp,0xc
64010673:	mov    DWORD PTR [esi+0x30],eax
64010676:	mov    edx,DWORD PTR [edi+0x4]
64010679:	neg    edx
6401067b:	sbb    edx,edx
6401067d:	and    edx,0x40
64010680:	xor    eax,eax
64010682:	cmp    DWORD PTR [edi],0xb
64010685:	setne  al
64010688:	sub    eax,0x1
6401068b:	and    eax,0x80
64010690:	add    edx,eax
64010692:	add    edx,DWORD PTR [edi+0x3c]
64010695:	test   ebp,ebp
64010697:	mov    DWORD PTR [esi+0x2c],edx
6401069a:	jne    0x640106a0
6401069c:	test   ebx,ebx
6401069e:	je     0x640106a7
640106a0:	cmp    DWORD PTR [esp+0x44],0x4
640106a5:	jne    0x640106c0
640106a7:	mov    eax,DWORD PTR [esp+0x30]
640106ab:	test   eax,eax
640106ad:	jne    0x6401057e
640106b3:	pop    esi
640106b4:	pop    ebp
640106b5:	pop    ebx
640106b6:	mov    eax,0xfffffffb
640106bb:	pop    edi
640106bc:	add    esp,0x2c
640106bf:	ret    
640106c0:	mov    eax,DWORD PTR [esp+0x30]
640106c4:	pop    esi
640106c5:	pop    ebp
640106c6:	pop    ebx
640106c7:	pop    edi
640106c8:	add    esp,0x2c
640106cb:	ret    
640106cc:	mov    eax,0xfffffffe
640106d1:	pop    edi
640106d2:	add    esp,0x2c
640106d5:	ret    
640106d6:	mov    edi,edi
640106d8:	div    ecx
640106da:	add    BYTE PTR [ebp+eiz*2-0xd],ah
640106de:	add    BYTE PTR [ebx+edx*1-0xc],ah
640106e2:	add    BYTE PTR [edx+edx*4-0xc],ah
640106e6:	add    BYTE PTR [esp+edx*1-0xb],ah
640106ea:	add    BYTE PTR [edi+ebx*4-0xb],ah
640106ee:	add    BYTE PTR [ebx+ebx*2-0xa],ah
640106f2:	add    BYTE PTR [ebx+edx*1-0x9],ah
640106f6:	add    BYTE PTR [edx+ecx*8-0x9],ah
640106fa:	add    BYTE PTR [esp+eiz*2-0x8],ah
640106fe:	add    BYTE PTR [esp+ecx*8-0x8],ah
64010702:	add    BYTE PTR [eax+edi*8-0x8],ah
64010706:	add    BYTE PTR [ebx+eax*1-0x7],ah
6401070a:	add    BYTE PTR [esi+ecx*8-0x7],ah
6401070e:	add    BYTE PTR [ebx+edi*1-0x6],ah
64010712:	add    BYTE PTR [ebx+ebx*4-0x6],ah
64010716:	add    BYTE PTR [ebx+ebx*1-0x5],ah
6401071a:	add    BYTE PTR [edx+edx*1-0x4],ah
6401071e:	add    BYTE PTR [ebx+eiz*1-0x1],ah
64010722:	add    BYTE PTR [edi+eiz*1+0x1],ah
64010726:	add    DWORD PTR [edx+esi*2+0x1],esp
6401072a:	add    DWORD PTR [ecx+ebp*8+0x2],esp
6401072e:	add    DWORD PTR [eax+ebx*2+0x3],esp
64010732:	add    DWORD PTR [esp+edx*1+0x4],esp
64010736:	add    DWORD PTR [edi+edi*1+0x4],esp
6401073a:	add    DWORD PTR [edx+edx*1+0x5],esp
6401073e:	add    DWORD PTR [edx+edi*4+0x5],esp
64010742:	add    DWORD PTR [esp+eax*8+0x5],esp
64010746:	add    DWORD PTR [esp+edx*1+0x6],esp
6401074a:	add    DWORD PTR [eax+ebp*2-0x7],esp
6401074e:	add    BYTE PTR [ebp+edi*2-0x7],ah
64010752:	add    BYTE PTR [ecx+ebx*4-0x7],ah
64010756:	add    BYTE PTR [esi+ebp*4-0x7],ah
6401075a:	add    BYTE PTR [esp+ecx*8-0x34],ah
6401075e:	int3   
6401075f:	int3   
64010760:	push   esi
64010761:	mov    esi,DWORD PTR [esp+0x8]
64010765:	test   esi,esi
64010767:	je     0x640107a3
64010769:	mov    eax,DWORD PTR [esi+0x1c]
6401076c:	test   eax,eax
6401076e:	je     0x640107a3
64010770:	mov    ecx,DWORD PTR [esi+0x24]
64010773:	test   ecx,ecx
64010775:	je     0x640107a3
64010777:	mov    eax,DWORD PTR [eax+0x34]
6401077a:	test   eax,eax
6401077c:	je     0x64010788
6401077e:	push   eax
6401077f:	mov    eax,DWORD PTR [esi+0x28]
64010782:	push   eax
64010783:	call   ecx
64010785:	add    esp,0x8
64010788:	mov    ecx,DWORD PTR [esi+0x1c]
6401078b:	mov    edx,DWORD PTR [esi+0x28]
6401078e:	mov    eax,DWORD PTR [esi+0x24]
64010791:	push   ecx
64010792:	push   edx
64010793:	call   eax
64010795:	add    esp,0x8
64010798:	mov    DWORD PTR [esi+0x1c],0x0
6401079f:	xor    eax,eax
640107a1:	pop    esi
640107a2:	ret    
640107a3:	mov    eax,0xfffffffe
640107a8:	pop    esi
640107a9:	ret    
640107aa:	int3   
640107ab:	int3   
640107ac:	int3   
640107ad:	int3   
640107ae:	int3   
640107af:	int3   
640107b0:	mov    ecx,DWORD PTR [esp+0x4]
640107b4:	push   ebx
640107b5:	mov    ebx,DWORD PTR [esp+0x10]
640107b9:	push   edi
640107ba:	mov    edi,ecx
640107bc:	shr    edi,0x10
640107bf:	and    ecx,0xffff
640107c5:	cmp    ebx,0x1
640107c8:	jne    0x640107fb
640107ca:	mov    eax,DWORD PTR [esp+0x10]
640107ce:	movzx  edx,BYTE PTR [eax]
640107d1:	add    ecx,edx
640107d3:	cmp    ecx,0xfff1
640107d9:	jb     0x640107e1
640107db:	sub    ecx,0xfff1
640107e1:	add    edi,ecx
640107e3:	cmp    edi,0xfff1
640107e9:	jb     0x640107f1
640107eb:	sub    edi,0xfff1
640107f1:	mov    eax,edi
640107f3:	shl    eax,0x10
640107f6:	pop    edi
640107f7:	or     eax,ecx
640107f9:	pop    ebx
640107fa:	ret    
640107fb:	push   esi
640107fc:	mov    esi,DWORD PTR [esp+0x14]
64010800:	test   esi,esi
64010802:	jne    0x6401080b
64010804:	lea    eax,[esi+0x1]
64010807:	pop    esi
64010808:	pop    edi
64010809:	pop    ebx
6401080a:	ret    
6401080b:	cmp    ebx,0x10
6401080e:	jae    0x6401084f
64010810:	test   ebx,ebx
64010812:	je     0x64010825
64010814:	movzx  eax,BYTE PTR [esi]
64010817:	add    ecx,eax
64010819:	sub    ebx,0x1
6401081c:	add    esi,0x1
6401081f:	add    edi,ecx
64010821:	test   ebx,ebx
64010823:	jne    0x64010814
64010825:	cmp    ecx,0xfff1
6401082b:	jb     0x64010833
6401082d:	sub    ecx,0xfff1
64010833:	mov    eax,0x80078071
64010838:	mul    edi
6401083a:	shr    edx,0xf
6401083d:	mov    eax,edx
6401083f:	shl    eax,0x4
64010842:	sub    eax,edx
64010844:	add    eax,edi
64010846:	pop    esi
64010847:	shl    eax,0x10
6401084a:	pop    edi
6401084b:	or     eax,ecx
6401084d:	pop    ebx
6401084e:	ret    
6401084f:	cmp    ebx,0x15b0
64010855:	jb     0x64010939
6401085b:	mov    eax,0x5e6ea9af
64010860:	mul    ebx
64010862:	push   ebp
64010863:	mov    ebp,edx
64010865:	shr    ebp,0xb
64010868:	jmp    0x64010870
6401086a:	lea    ebx,[ebx+0x0]
64010870:	sub    ebx,0x15b0
64010876:	mov    eax,0x15b
6401087b:	jmp    0x64010880
6401087d:	lea    ecx,[ecx+0x0]
64010880:	movzx  edx,BYTE PTR [esi]
64010883:	add    ecx,edx
64010885:	movzx  edx,BYTE PTR [esi+0x1]
64010889:	add    edi,ecx
6401088b:	add    ecx,edx
6401088d:	movzx  edx,BYTE PTR [esi+0x2]
64010891:	add    edi,ecx
64010893:	add    ecx,edx
64010895:	movzx  edx,BYTE PTR [esi+0x3]
64010899:	add    edi,ecx
6401089b:	add    ecx,edx
6401089d:	movzx  edx,BYTE PTR [esi+0x4]
640108a1:	add    edi,ecx
640108a3:	add    ecx,edx
640108a5:	movzx  edx,BYTE PTR [esi+0x5]
640108a9:	add    edi,ecx
640108ab:	add    ecx,edx
640108ad:	movzx  edx,BYTE PTR [esi+0x6]
640108b1:	add    edi,ecx
640108b3:	add    ecx,edx
640108b5:	movzx  edx,BYTE PTR [esi+0x7]
640108b9:	add    edi,ecx
640108bb:	add    ecx,edx
640108bd:	movzx  edx,BYTE PTR [esi+0x8]
640108c1:	add    edi,ecx
640108c3:	add    ecx,edx
640108c5:	movzx  edx,BYTE PTR [esi+0x9]
640108c9:	add    edi,ecx
640108cb:	add    ecx,edx
640108cd:	movzx  edx,BYTE PTR [esi+0xa]
640108d1:	add    edi,ecx
640108d3:	add    ecx,edx
640108d5:	movzx  edx,BYTE PTR [esi+0xb]
640108d9:	add    edi,ecx
640108db:	add    ecx,edx
640108dd:	movzx  edx,BYTE PTR [esi+0xc]
640108e1:	add    edi,ecx
640108e3:	add    ecx,edx
640108e5:	movzx  edx,BYTE PTR [esi+0xd]
640108e9:	add    edi,ecx
640108eb:	add    ecx,edx
640108ed:	movzx  edx,BYTE PTR [esi+0xe]
640108f1:	add    edi,ecx
640108f3:	add    ecx,edx
640108f5:	movzx  edx,BYTE PTR [esi+0xf]
640108f9:	add    edi,ecx
640108fb:	add    ecx,edx
640108fd:	add    edi,ecx
640108ff:	add    esi,0x10
64010902:	sub    eax,0x1
64010905:	jne    0x64010880
6401090b:	mov    eax,0x80078071
64010910:	mul    ecx
64010912:	shr    edx,0xf
64010915:	imul   edx,edx,0xffff000f
6401091b:	add    ecx,edx
6401091d:	mov    eax,0x80078071
64010922:	mul    edi
64010924:	shr    edx,0xf
64010927:	imul   edx,edx,0xffff000f
6401092d:	add    edi,edx
6401092f:	sub    ebp,0x1
64010932:	jne    0x64010870
64010938:	pop    ebp
64010939:	test   ebx,ebx
6401093b:	je     0x64010a17
64010941:	cmp    ebx,0x10
64010944:	jb     0x640109de
6401094a:	mov    eax,ebx
6401094c:	shr    eax,0x4
6401094f:	nop
64010950:	movzx  edx,BYTE PTR [esi]
64010953:	add    ecx,edx
64010955:	movzx  edx,BYTE PTR [esi+0x1]
64010959:	add    edi,ecx
6401095b:	add    ecx,edx
6401095d:	movzx  edx,BYTE PTR [esi+0x2]
64010961:	add    edi,ecx
64010963:	add    ecx,edx
64010965:	movzx  edx,BYTE PTR [esi+0x3]
64010969:	add    edi,ecx
6401096b:	add    ecx,edx
6401096d:	movzx  edx,BYTE PTR [esi+0x4]
64010971:	add    edi,ecx
64010973:	add    ecx,edx
64010975:	movzx  edx,BYTE PTR [esi+0x5]
64010979:	add    edi,ecx
6401097b:	add    ecx,edx
6401097d:	movzx  edx,BYTE PTR [esi+0x6]
64010981:	add    edi,ecx
64010983:	add    ecx,edx
64010985:	movzx  edx,BYTE PTR [esi+0x7]
64010989:	add    edi,ecx
6401098b:	add    ecx,edx
6401098d:	movzx  edx,BYTE PTR [esi+0x8]
64010991:	add    edi,ecx
64010993:	add    ecx,edx
64010995:	movzx  edx,BYTE PTR [esi+0x9]
64010999:	add    edi,ecx
6401099b:	add    ecx,edx
6401099d:	movzx  edx,BYTE PTR [esi+0xa]
640109a1:	add    edi,ecx
640109a3:	add    ecx,edx
640109a5:	movzx  edx,BYTE PTR [esi+0xb]
640109a9:	add    edi,ecx
640109ab:	add    ecx,edx
640109ad:	movzx  edx,BYTE PTR [esi+0xc]
640109b1:	add    edi,ecx
640109b3:	add    ecx,edx
640109b5:	movzx  edx,BYTE PTR [esi+0xd]
640109b9:	add    edi,ecx
640109bb:	add    ecx,edx
640109bd:	movzx  edx,BYTE PTR [esi+0xe]
640109c1:	add    edi,ecx
640109c3:	add    ecx,edx
640109c5:	movzx  edx,BYTE PTR [esi+0xf]
640109c9:	add    edi,ecx
640109cb:	add    ecx,edx
640109cd:	sub    ebx,0x10
640109d0:	add    edi,ecx
640109d2:	add    esi,0x10
640109d5:	sub    eax,0x1
640109d8:	jne    0x64010950
640109de:	test   ebx,ebx
640109e0:	je     0x640109f3
640109e2:	movzx  eax,BYTE PTR [esi]
640109e5:	add    ecx,eax
640109e7:	sub    ebx,0x1
640109ea:	add    esi,0x1
640109ed:	add    edi,ecx
640109ef:	test   ebx,ebx
640109f1:	jne    0x640109e2
640109f3:	mov    eax,0x80078071
640109f8:	mul    ecx
640109fa:	shr    edx,0xf
640109fd:	imul   edx,edx,0xffff000f
64010a03:	add    ecx,edx
64010a05:	mov    eax,0x80078071
64010a0a:	mul    edi
64010a0c:	shr    edx,0xf
64010a0f:	imul   edx,edx,0xffff000f
64010a15:	add    edi,edx
64010a17:	mov    eax,edi
64010a19:	pop    esi
64010a1a:	shl    eax,0x10
64010a1d:	pop    edi
64010a1e:	or     eax,ecx
64010a20:	pop    ebx
64010a21:	ret    
64010a22:	int3   
64010a23:	int3   
64010a24:	int3   
64010a25:	int3   
64010a26:	int3   
64010a27:	int3   
64010a28:	int3   
64010a29:	int3   
64010a2a:	int3   
64010a2b:	int3   
64010a2c:	int3   
64010a2d:	int3   
64010a2e:	int3   
64010a2f:	int3   
64010a30:	push   esi
64010a31:	lea    eax,[edx+0x94]
64010a37:	mov    ecx,0x11e
64010a3c:	xor    esi,esi
64010a3e:	mov    edi,edi
64010a40:	mov    WORD PTR [eax],si
64010a43:	add    eax,0x4
64010a46:	sub    ecx,0x1
64010a49:	jne    0x64010a40
64010a4b:	lea    eax,[edx+0x988]
64010a51:	mov    ecx,0x1e
64010a56:	mov    WORD PTR [eax],si
64010a59:	add    eax,0x4
64010a5c:	sub    ecx,0x1
64010a5f:	jne    0x64010a56
64010a61:	lea    eax,[edx+0xa7c]
64010a67:	mov    ecx,0x13
64010a6c:	lea    esp,[esp+0x0]
64010a70:	mov    WORD PTR [eax],si
64010a73:	add    eax,0x4
64010a76:	sub    ecx,0x1
64010a79:	jne    0x64010a70
64010a7b:	mov    DWORD PTR [edx+0x16ac],esi
64010a81:	mov    DWORD PTR [edx+0x16a8],esi
64010a87:	mov    DWORD PTR [edx+0x16b0],esi
64010a8d:	mov    DWORD PTR [edx+0x16a0],esi
64010a93:	mov    WORD PTR [edx+0x494],0x1
64010a9c:	pop    esi
64010a9d:	ret    
64010a9e:	int3   
64010a9f:	int3   
64010aa0:	push   ecx
64010aa1:	mov    edx,DWORD PTR [eax+0x1450]
64010aa7:	push   ebp
64010aa8:	push   esi
64010aa9:	mov    esi,DWORD PTR [esp+0x10]
64010aad:	mov    ebp,DWORD PTR [eax+esi*4+0xb5c]
64010ab4:	lea    ecx,[esi+esi*1]
64010ab7:	cmp    ecx,edx
64010ab9:	mov    DWORD PTR [esp+0x8],ebp
64010abd:	jg     0x64010b5b
64010ac3:	push   ebx
64010ac4:	jge    0x64010afa
64010ac6:	mov    esi,DWORD PTR [eax+ecx*4+0xb60]
64010acd:	mov    ebp,DWORD PTR [eax+ecx*4+0xb5c]
64010ad4:	movzx  edx,WORD PTR [edi+esi*4]
64010ad8:	movzx  ebx,WORD PTR [edi+ebp*4]
64010adc:	cmp    dx,bx
64010adf:	jb     0x64010af3
64010ae1:	jne    0x64010af6
64010ae3:	mov    dl,BYTE PTR [esi+eax*1+0x1458]
64010aea:	cmp    dl,BYTE PTR [eax+ebp*1+0x1458]
64010af1:	ja     0x64010af6
64010af3:	add    ecx,0x1
64010af6:	mov    ebp,DWORD PTR [esp+0xc]
64010afa:	mov    esi,DWORD PTR [eax+ecx*4+0xb5c]
64010b01:	movzx  edx,WORD PTR [edi+ebp*4]
64010b05:	movzx  ebx,WORD PTR [edi+esi*4]
64010b09:	cmp    dx,bx
64010b0c:	jb     0x64010b3b
64010b0e:	jne    0x64010b20
64010b10:	mov    dl,BYTE PTR [eax+ebp*1+0x1458]
64010b17:	cmp    dl,BYTE PTR [esi+eax*1+0x1458]
64010b1e:	jbe    0x64010b4b
64010b20:	mov    edx,DWORD PTR [esp+0x14]
64010b24:	mov    DWORD PTR [eax+edx*4+0xb5c],esi
64010b2b:	mov    edx,DWORD PTR [eax+0x1450]
64010b31:	mov    DWORD PTR [esp+0x14],ecx
64010b35:	add    ecx,ecx
64010b37:	cmp    ecx,edx
64010b39:	jle    0x64010ac4
64010b3b:	mov    ecx,DWORD PTR [esp+0x14]
64010b3f:	pop    ebx
64010b40:	pop    esi
64010b41:	mov    DWORD PTR [eax+ecx*4+0xb5c],ebp
64010b48:	pop    ebp
64010b49:	pop    ecx
64010b4a:	ret    
64010b4b:	mov    edx,DWORD PTR [esp+0x14]
64010b4f:	pop    ebx
64010b50:	pop    esi
64010b51:	mov    DWORD PTR [eax+edx*4+0xb5c],ebp
64010b58:	pop    ebp
64010b59:	pop    ecx
64010b5a:	ret    
64010b5b:	mov    DWORD PTR [eax+esi*4+0xb5c],ebp
64010b62:	pop    esi
64010b63:	pop    ebp
64010b64:	pop    ecx
64010b65:	ret    
64010b66:	int3   
64010b67:	int3   
64010b68:	int3   
64010b69:	int3   
64010b6a:	int3   
64010b6b:	int3   
64010b6c:	int3   
64010b6d:	int3   
64010b6e:	int3   
64010b6f:	int3   
64010b70:	sub    esp,0x20
64010b73:	mov    edx,DWORD PTR [ecx+0x4]
64010b76:	push   ebx
64010b77:	mov    ebx,DWORD PTR [ecx]
64010b79:	mov    ecx,DWORD PTR [ecx+0x8]
64010b7c:	mov    DWORD PTR [esp+0x18],edx
64010b80:	mov    edx,DWORD PTR [ecx+0x4]
64010b83:	push   ebp
64010b84:	mov    ebp,DWORD PTR [ecx]
64010b86:	mov    DWORD PTR [esp+0x24],edx
64010b8a:	mov    edx,DWORD PTR [ecx+0x8]
64010b8d:	push   esi
64010b8e:	mov    esi,DWORD PTR [ecx+0x10]
64010b91:	xor    ecx,ecx
64010b93:	mov    DWORD PTR [eax+0xb3c],ecx
64010b99:	mov    DWORD PTR [eax+0xb40],ecx
64010b9f:	mov    DWORD PTR [eax+0xb44],ecx
64010ba5:	mov    DWORD PTR [eax+0xb48],ecx
64010bab:	mov    DWORD PTR [eax+0xb4c],ecx
64010bb1:	mov    DWORD PTR [eax+0xb50],ecx
64010bb7:	mov    DWORD PTR [eax+0xb54],ecx
64010bbd:	mov    DWORD PTR [eax+0xb58],ecx
64010bc3:	mov    DWORD PTR [esp+0x24],edx
64010bc7:	mov    edx,DWORD PTR [eax+0x1454]
64010bcd:	mov    edx,DWORD PTR [eax+edx*4+0xb5c]
64010bd4:	push   edi
64010bd5:	mov    WORD PTR [ebx+edx*4+0x2],cx
64010bda:	mov    edi,DWORD PTR [eax+0x1454]
64010be0:	add    edi,0x1
64010be3:	cmp    edi,0x23d
64010be9:	mov    DWORD PTR [esp+0x1c],esi
64010bed:	mov    DWORD PTR [esp+0x18],ecx
64010bf1:	jge    0x64010d7f
64010bf7:	lea    ecx,[eax+edi*4+0xb5c]
64010bfe:	mov    DWORD PTR [esp+0x14],ecx
64010c02:	mov    ecx,0x23d
64010c07:	sub    ecx,edi
64010c09:	add    edi,ecx
64010c0b:	mov    DWORD PTR [esp+0x20],ecx
64010c0f:	mov    DWORD PTR [esp+0x10],edi
64010c13:	jmp    0x64010c19
64010c15:	mov    esi,DWORD PTR [esp+0x1c]
64010c19:	mov    edx,DWORD PTR [esp+0x14]
64010c1d:	mov    edx,DWORD PTR [edx]
64010c1f:	movzx  ecx,WORD PTR [ebx+edx*4+0x2]
64010c24:	movzx  ecx,WORD PTR [ebx+ecx*4+0x2]
64010c29:	add    ecx,0x1
64010c2c:	cmp    ecx,esi
64010c2e:	jle    0x64010c37
64010c30:	add    DWORD PTR [esp+0x18],0x1
64010c35:	mov    ecx,esi
64010c37:	cmp    edx,DWORD PTR [esp+0x24]
64010c3b:	mov    WORD PTR [ebx+edx*4+0x2],cx
64010c40:	jg     0x64010c8a
64010c42:	mov    edi,DWORD PTR [esp+0x28]
64010c46:	add    WORD PTR [eax+ecx*2+0xb3c],0x1
64010c4f:	xor    esi,esi
64010c51:	cmp    edx,edi
64010c53:	jl     0x64010c60
64010c55:	mov    esi,edx
64010c57:	sub    esi,edi
64010c59:	mov    edi,DWORD PTR [esp+0x2c]
64010c5d:	mov    esi,DWORD PTR [edi+esi*4]
64010c60:	movzx  edi,WORD PTR [ebx+edx*4]
64010c64:	movzx  edi,di
64010c67:	add    ecx,esi
64010c69:	imul   ecx,edi
64010c6c:	add    DWORD PTR [eax+0x16a8],ecx
64010c72:	test   ebp,ebp
64010c74:	je     0x64010c86
64010c76:	movzx  edx,WORD PTR [ebp+edx*4+0x2]
64010c7b:	add    edx,esi
64010c7d:	imul   edx,edi
64010c80:	add    DWORD PTR [eax+0x16ac],edx
64010c86:	mov    edi,DWORD PTR [esp+0x10]
64010c8a:	add    DWORD PTR [esp+0x14],0x4
64010c8f:	sub    DWORD PTR [esp+0x20],0x1
64010c94:	jne    0x64010c15
64010c9a:	mov    ebp,DWORD PTR [esp+0x18]
64010c9e:	test   ebp,ebp
64010ca0:	je     0x64010d7f
64010ca6:	mov    ecx,DWORD PTR [esp+0x1c]
64010caa:	lea    edx,[ecx-0x1]
64010cad:	mov    DWORD PTR [esp+0x2c],edx
64010cb1:	lea    esi,[eax+ecx*2+0xb3c]
64010cb8:	jmp    0x64010cc0
64010cba:	lea    ebx,[ebx+0x0]
64010cc0:	mov    ecx,DWORD PTR [esp+0x2c]
64010cc4:	cmp    WORD PTR [eax+ecx*2+0xb3c],0x0
64010ccd:	lea    edx,[eax+ecx*2+0xb3c]
64010cd4:	jne    0x64010ce2
64010cd6:	sub    edx,0x2
64010cd9:	sub    ecx,0x1
64010cdc:	cmp    WORD PTR [edx],0x0
64010ce0:	je     0x64010cd6
64010ce2:	add    WORD PTR [eax+ecx*2+0xb3c],0xffff
64010cec:	add    WORD PTR [eax+ecx*2+0xb3e],0x2
64010cf5:	add    WORD PTR [esi],0xffff
64010cfa:	sub    ebp,0x2
64010cfd:	test   ebp,ebp
64010cff:	jg     0x64010cc0
64010d01:	mov    edx,DWORD PTR [esp+0x1c]
64010d05:	test   edx,edx
64010d07:	je     0x64010d7f
64010d09:	mov    DWORD PTR [esp+0x20],esi
64010d0d:	lea    ecx,[ecx+0x0]
64010d10:	movzx  esi,WORD PTR [esi]
64010d13:	test   esi,esi
64010d15:	mov    DWORD PTR [esp+0x1c],esi
64010d19:	je     0x64010d6d
64010d1b:	lea    ebp,[eax+edi*4+0xb5c]
64010d22:	mov    ecx,DWORD PTR [ebp-0x4]
64010d25:	sub    DWORD PTR [esp+0x10],0x1
64010d2a:	sub    ebp,0x4
64010d2d:	cmp    ecx,DWORD PTR [esp+0x24]
64010d31:	mov    DWORD PTR [esp+0x2c],ebp
64010d35:	jg     0x64010d65
64010d37:	movzx  edi,WORD PTR [ebx+ecx*4+0x2]
64010d3c:	cmp    edi,edx
64010d3e:	lea    esi,[ebx+ecx*4+0x2]
64010d42:	je     0x64010d5c
64010d44:	movzx  ecx,WORD PTR [ebx+ecx*4]
64010d48:	mov    ebp,edx
64010d4a:	sub    ebp,edi
64010d4c:	imul   ebp,ecx
64010d4f:	add    DWORD PTR [eax+0x16a8],ebp
64010d55:	mov    ebp,DWORD PTR [esp+0x2c]
64010d59:	mov    WORD PTR [esi],dx
64010d5c:	sub    DWORD PTR [esp+0x1c],0x1
64010d61:	mov    esi,DWORD PTR [esp+0x1c]
64010d65:	test   esi,esi
64010d67:	jne    0x64010d22
64010d69:	mov    edi,DWORD PTR [esp+0x10]
64010d6d:	mov    esi,DWORD PTR [esp+0x20]
64010d71:	sub    edx,0x1
64010d74:	sub    esi,0x2
64010d77:	test   edx,edx
64010d79:	mov    DWORD PTR [esp+0x20],esi
64010d7d:	jne    0x64010d10
64010d7f:	pop    edi
64010d80:	pop    esi
64010d81:	pop    ebp
64010d82:	pop    ebx
64010d83:	add    esp,0x20
64010d86:	ret    
64010d87:	int3   
64010d88:	int3   
64010d89:	int3   
64010d8a:	int3   
64010d8b:	int3   
64010d8c:	int3   
64010d8d:	int3   
64010d8e:	int3   
64010d8f:	int3   
64010d90:	sub    esp,0xc
64010d93:	push   ebx
64010d94:	push   ebp
64010d95:	mov    ebp,DWORD PTR [esp+0x18]
64010d99:	push   esi
64010d9a:	push   edi
64010d9b:	movzx  edi,WORD PTR [eax+0x2]
64010d9f:	xor    edx,edx
64010da1:	test   edi,edi
64010da3:	mov    ebx,ecx
64010da5:	mov    DWORD PTR [esp+0x14],0xffffffff
64010dad:	lea    ecx,[edx+0x7]
64010db0:	lea    esi,[edx+0x4]
64010db3:	jne    0x64010dbd
64010db5:	mov    ecx,0x8a
64010dba:	lea    esi,[edx+0x3]
64010dbd:	test   ebx,ebx
64010dbf:	mov    WORD PTR [eax+ebx*4+0x6],0xffff
64010dc6:	jl     0x64010e6a
64010dcc:	add    eax,0x6
64010dcf:	add    ebx,0x1
64010dd2:	mov    DWORD PTR [esp+0x18],ebx
64010dd6:	mov    DWORD PTR [esp+0x10],eax
64010dda:	mov    ebx,0x1
64010ddf:	nop
64010de0:	mov    eax,edi
64010de2:	mov    edi,DWORD PTR [esp+0x10]
64010de6:	movzx  edi,WORD PTR [edi]
64010de9:	add    edx,ebx
64010deb:	cmp    edx,ecx
64010ded:	jge    0x64010df3
64010def:	cmp    eax,edi
64010df1:	je     0x64010e5b
64010df3:	cmp    edx,esi
64010df5:	jge    0x64010e01
64010df7:	add    WORD PTR [ebp+eax*4+0xa7c],dx
64010dff:	jmp    0x64010e31
64010e01:	test   eax,eax
64010e03:	je     0x64010e1c
64010e05:	cmp    eax,DWORD PTR [esp+0x14]
64010e09:	je     0x64010e13
64010e0b:	add    WORD PTR [ebp+eax*4+0xa7c],bx
64010e13:	add    WORD PTR [ebp+0xabc],bx
64010e1a:	jmp    0x64010e31
64010e1c:	cmp    edx,0xa
64010e1f:	jg     0x64010e2a
64010e21:	add    WORD PTR [ebp+0xac0],bx
64010e28:	jmp    0x64010e31
64010e2a:	add    WORD PTR [ebp+0xac4],bx
64010e31:	xor    edx,edx
64010e33:	test   edi,edi
64010e35:	mov    DWORD PTR [esp+0x14],eax
64010e39:	jne    0x64010e45
64010e3b:	mov    ecx,0x8a
64010e40:	lea    esi,[edx+0x3]
64010e43:	jmp    0x64010e5b
64010e45:	cmp    eax,edi
64010e47:	jne    0x64010e53
64010e49:	mov    ecx,0x6
64010e4e:	lea    esi,[ecx-0x3]
64010e51:	jmp    0x64010e5b
64010e53:	mov    ecx,0x7
64010e58:	lea    esi,[ecx-0x3]
64010e5b:	add    DWORD PTR [esp+0x10],0x4
64010e60:	sub    DWORD PTR [esp+0x18],ebx
64010e64:	jne    0x64010de0
64010e6a:	pop    edi
64010e6b:	pop    esi
64010e6c:	pop    ebp
64010e6d:	pop    ebx
64010e6e:	add    esp,0xc
64010e71:	ret    
64010e72:	int3   
64010e73:	int3   
64010e74:	int3   
64010e75:	int3   
64010e76:	int3   
64010e77:	int3   
64010e78:	int3   
64010e79:	int3   
64010e7a:	int3   
64010e7b:	int3   
64010e7c:	int3   
64010e7d:	int3   
64010e7e:	int3   
64010e7f:	int3   
64010e80:	sub    esp,0x18
64010e83:	push   ebx
64010e84:	push   ebp
64010e85:	movzx  ebp,WORD PTR [edx+0x2]
64010e89:	push   esi
64010e8a:	xor    esi,esi
64010e8c:	test   ebp,ebp
64010e8e:	push   edi
64010e8f:	mov    ebx,ecx
64010e91:	mov    DWORD PTR [esp+0x1c],0xffffffff
64010e99:	mov    DWORD PTR [esp+0x14],ebp
64010e9d:	lea    ecx,[esi+0x7]
64010ea0:	lea    edi,[esi+0x4]
64010ea3:	jne    0x64010ead
64010ea5:	mov    ecx,0x8a
64010eaa:	lea    edi,[ebp+0x3]
64010ead:	test   ebx,ebx
64010eaf:	jl     0x64011383
64010eb5:	add    edx,0x6
64010eb8:	add    ebx,0x1
64010ebb:	mov    DWORD PTR [esp+0x18],edx
64010ebf:	mov    DWORD PTR [esp+0x20],ebx
64010ec3:	mov    ebp,0x1
64010ec8:	jmp    0x64010ed0
64010eca:	lea    ebx,[ebx+0x0]
64010ed0:	mov    ebx,DWORD PTR [esp+0x18]
64010ed4:	movzx  ebx,WORD PTR [ebx]
64010ed7:	mov    edx,DWORD PTR [esp+0x14]
64010edb:	add    esi,ebp
64010edd:	cmp    esi,ecx
64010edf:	mov    DWORD PTR [esp+0x24],edx
64010ee3:	mov    DWORD PTR [esp+0x14],ebx
64010ee7:	mov    DWORD PTR [esp+0x10],esi
64010eeb:	jge    0x64010ef5
64010eed:	cmp    edx,ebx
64010eef:	je     0x64011374
64010ef5:	cmp    esi,edi
64010ef7:	jge    0x64010f9f
64010efd:	lea    ecx,[ecx+0x0]
64010f00:	movzx  edi,WORD PTR [eax+edx*4+0xa7e]
64010f08:	mov    ecx,DWORD PTR [eax+0x16bc]
64010f0e:	mov    ebx,0x10
64010f13:	sub    ebx,edi
64010f15:	cmp    ecx,ebx
64010f17:	jle    0x64010f74
64010f19:	movzx  esi,WORD PTR [eax+edx*4+0xa7c]
64010f21:	mov    edx,esi
64010f23:	shl    edx,cl
64010f25:	mov    ecx,DWORD PTR [eax+0x8]
64010f28:	or     WORD PTR [eax+0x16b8],dx
64010f2f:	movzx  ebx,BYTE PTR [eax+0x16b8]
64010f36:	mov    edx,DWORD PTR [eax+0x14]
64010f39:	mov    BYTE PTR [ecx+edx*1],bl
64010f3c:	add    DWORD PTR [eax+0x14],ebp
64010f3f:	mov    ecx,DWORD PTR [eax+0x14]
64010f42:	movzx  ebx,BYTE PTR [eax+0x16b9]
64010f49:	mov    edx,DWORD PTR [eax+0x8]
64010f4c:	mov    BYTE PTR [ecx+edx*1],bl
64010f4f:	mov    edx,DWORD PTR [eax+0x16bc]
64010f55:	add    DWORD PTR [eax+0x14],ebp
64010f58:	mov    cl,0x10
64010f5a:	sub    cl,dl
64010f5c:	shr    si,cl
64010f5f:	lea    ecx,[edx+edi*1-0x10]
64010f63:	mov    edx,DWORD PTR [esp+0x24]
64010f67:	mov    WORD PTR [eax+0x16b8],si
64010f6e:	mov    esi,DWORD PTR [esp+0x10]
64010f72:	jmp    0x64010f88
64010f74:	mov    bx,WORD PTR [eax+edx*4+0xa7c]
64010f7c:	shl    bx,cl
64010f7f:	or     WORD PTR [eax+0x16b8],bx
64010f86:	add    ecx,edi
64010f88:	sub    esi,ebp
64010f8a:	mov    DWORD PTR [eax+0x16bc],ecx
64010f90:	mov    DWORD PTR [esp+0x10],esi
64010f94:	jne    0x64010f00
64010f9a:	jmp    0x64011346
64010f9f:	test   edx,edx
64010fa1:	je     0x6401114c
64010fa7:	cmp    edx,DWORD PTR [esp+0x1c]
64010fab:	je     0x6401104d
64010fb1:	movzx  edi,WORD PTR [eax+edx*4+0xa7e]
64010fb9:	mov    ecx,DWORD PTR [eax+0x16bc]
64010fbf:	mov    ebx,0x10
64010fc4:	sub    ebx,edi
64010fc6:	cmp    ecx,ebx
64010fc8:	mov    DWORD PTR [esp+0x1c],edi
64010fcc:	jle    0x64011029
64010fce:	movzx  esi,WORD PTR [eax+edx*4+0xa7c]
64010fd6:	mov    edi,esi
64010fd8:	shl    edi,cl
64010fda:	mov    ecx,DWORD PTR [eax+0x8]
64010fdd:	or     WORD PTR [eax+0x16b8],di
64010fe4:	movzx  ebx,BYTE PTR [eax+0x16b8]
64010feb:	mov    edi,DWORD PTR [eax+0x14]
64010fee:	mov    BYTE PTR [ecx+edi*1],bl
64010ff1:	add    DWORD PTR [eax+0x14],ebp
64010ff4:	movzx  ebx,BYTE PTR [eax+0x16b9]
64010ffb:	mov    ecx,DWORD PTR [eax+0x8]
64010ffe:	mov    edi,DWORD PTR [eax+0x14]
64011001:	mov    BYTE PTR [edi+ecx*1],bl
64011004:	mov    ebx,DWORD PTR [eax+0x16bc]
6401100a:	add    DWORD PTR [eax+0x14],ebp
6401100d:	mov    cl,0x10
6401100f:	sub    cl,bl
64011011:	shr    si,cl
64011014:	mov    ecx,DWORD PTR [esp+0x1c]
64011018:	lea    ecx,[ebx+ecx*1-0x10]
6401101c:	mov    WORD PTR [eax+0x16b8],si
64011023:	mov    esi,DWORD PTR [esp+0x10]
64011027:	jmp    0x64011041
64011029:	mov    di,WORD PTR [eax+edx*4+0xa7c]
64011031:	shl    di,cl
64011034:	or     WORD PTR [eax+0x16b8],di
6401103b:	mov    edi,DWORD PTR [esp+0x1c]
6401103f:	add    ecx,edi
64011041:	sub    esi,ebp
64011043:	mov    DWORD PTR [eax+0x16bc],ecx
64011049:	mov    DWORD PTR [esp+0x10],esi
6401104d:	movzx  edi,WORD PTR [eax+0xabe]
64011054:	mov    ecx,DWORD PTR [eax+0x16bc]
6401105a:	mov    ebx,0x10
6401105f:	sub    ebx,edi
64011061:	cmp    ecx,ebx
64011063:	mov    DWORD PTR [esp+0x1c],edi
64011067:	jle    0x640110c3
64011069:	movzx  esi,WORD PTR [eax+0xabc]
64011070:	mov    edi,esi
64011072:	shl    edi,cl
64011074:	mov    ecx,DWORD PTR [eax+0x8]
64011077:	or     WORD PTR [eax+0x16b8],di
6401107e:	movzx  ebx,BYTE PTR [eax+0x16b8]
64011085:	mov    edi,DWORD PTR [eax+0x14]
64011088:	mov    BYTE PTR [ecx+edi*1],bl
6401108b:	add    DWORD PTR [eax+0x14],ebp
6401108e:	movzx  ebx,BYTE PTR [eax+0x16b9]
64011095:	mov    ecx,DWORD PTR [eax+0x8]
64011098:	mov    edi,DWORD PTR [eax+0x14]
6401109b:	mov    BYTE PTR [edi+ecx*1],bl
6401109e:	mov    ebx,DWORD PTR [eax+0x16bc]
640110a4:	add    DWORD PTR [eax+0x14],ebp
640110a7:	mov    cl,0x10
640110a9:	sub    cl,bl
640110ab:	shr    si,cl
640110ae:	mov    ecx,DWORD PTR [esp+0x1c]
640110b2:	lea    ecx,[ebx+ecx*1-0x10]
640110b6:	mov    WORD PTR [eax+0x16b8],si
640110bd:	mov    esi,DWORD PTR [esp+0x10]
640110c1:	jmp    0x640110da
640110c3:	mov    di,WORD PTR [eax+0xabc]
640110ca:	shl    di,cl
640110cd:	or     WORD PTR [eax+0x16b8],di
640110d4:	mov    edi,DWORD PTR [esp+0x1c]
640110d8:	add    ecx,edi
640110da:	add    esi,0xfffffffd
640110dd:	cmp    ecx,0xe
640110e0:	mov    DWORD PTR [eax+0x16bc],ecx
640110e6:	jle    0x6401113b
640110e8:	mov    edi,esi
640110ea:	shl    edi,cl
640110ec:	mov    ecx,DWORD PTR [eax+0x8]
640110ef:	or     WORD PTR [eax+0x16b8],di
640110f6:	movzx  ebx,BYTE PTR [eax+0x16b8]
640110fd:	mov    edi,DWORD PTR [eax+0x14]
64011100:	mov    BYTE PTR [ecx+edi*1],bl
64011103:	add    DWORD PTR [eax+0x14],ebp
64011106:	movzx  ebx,BYTE PTR [eax+0x16b9]
6401110d:	mov    edi,DWORD PTR [eax+0x14]
64011110:	mov    ecx,DWORD PTR [eax+0x8]
64011113:	mov    BYTE PTR [edi+ecx*1],bl
64011116:	mov    ebx,DWORD PTR [eax+0x16bc]
6401111c:	add    DWORD PTR [eax+0x14],ebp
6401111f:	mov    cl,0x10
64011121:	sub    cl,bl
64011123:	shr    si,cl
64011126:	add    ebx,0xfffffff2
64011129:	mov    DWORD PTR [eax+0x16bc],ebx
6401112f:	mov    WORD PTR [eax+0x16b8],si
64011136:	jmp    0x64011346
6401113b:	shl    esi,cl
6401113d:	or     WORD PTR [eax+0x16b8],si
64011144:	add    ecx,0x2
64011147:	jmp    0x64011340
6401114c:	cmp    esi,0xa
6401114f:	mov    ecx,DWORD PTR [eax+0x16bc]
64011155:	mov    ebx,0x10
6401115a:	jg     0x64011254
64011160:	movzx  edi,WORD PTR [eax+0xac2]
64011167:	sub    ebx,edi
64011169:	cmp    ecx,ebx
6401116b:	mov    DWORD PTR [esp+0x1c],edi
6401116f:	jle    0x640111cb
64011171:	movzx  esi,WORD PTR [eax+0xac0]
64011178:	mov    edi,esi
6401117a:	shl    edi,cl
6401117c:	mov    ecx,DWORD PTR [eax+0x8]
6401117f:	or     WORD PTR [eax+0x16b8],di
64011186:	movzx  ebx,BYTE PTR [eax+0x16b8]
6401118d:	mov    edi,DWORD PTR [eax+0x14]
64011190:	mov    BYTE PTR [ecx+edi*1],bl
64011193:	add    DWORD PTR [eax+0x14],ebp
64011196:	movzx  ebx,BYTE PTR [eax+0x16b9]
6401119d:	mov    ecx,DWORD PTR [eax+0x8]
640111a0:	mov    edi,DWORD PTR [eax+0x14]
640111a3:	mov    BYTE PTR [edi+ecx*1],bl
640111a6:	mov    ebx,DWORD PTR [eax+0x16bc]
640111ac:	add    DWORD PTR [eax+0x14],ebp
640111af:	mov    cl,0x10
640111b1:	sub    cl,bl
640111b3:	shr    si,cl
640111b6:	mov    ecx,DWORD PTR [esp+0x1c]
640111ba:	lea    ecx,[ebx+ecx*1-0x10]
640111be:	mov    WORD PTR [eax+0x16b8],si
640111c5:	mov    esi,DWORD PTR [esp+0x10]
640111c9:	jmp    0x640111e2
640111cb:	mov    di,WORD PTR [eax+0xac0]
640111d2:	shl    di,cl
640111d5:	or     WORD PTR [eax+0x16b8],di
640111dc:	mov    edi,DWORD PTR [esp+0x1c]
640111e0:	add    ecx,edi
640111e2:	add    esi,0xfffffffd
640111e5:	cmp    ecx,0xd
640111e8:	mov    DWORD PTR [eax+0x16bc],ecx
640111ee:	jle    0x64011243
640111f0:	mov    edi,esi
640111f2:	shl    edi,cl
640111f4:	mov    ecx,DWORD PTR [eax+0x8]
640111f7:	or     WORD PTR [eax+0x16b8],di
640111fe:	movzx  ebx,BYTE PTR [eax+0x16b8]
64011205:	mov    edi,DWORD PTR [eax+0x14]
64011208:	mov    BYTE PTR [ecx+edi*1],bl
6401120b:	add    DWORD PTR [eax+0x14],ebp
6401120e:	movzx  ebx,BYTE PTR [eax+0x16b9]
64011215:	mov    edi,DWORD PTR [eax+0x14]
64011218:	mov    ecx,DWORD PTR [eax+0x8]
6401121b:	mov    BYTE PTR [edi+ecx*1],bl
6401121e:	mov    ebx,DWORD PTR [eax+0x16bc]
64011224:	add    DWORD PTR [eax+0x14],ebp
64011227:	mov    cl,0x10
64011229:	sub    cl,bl
6401122b:	shr    si,cl
6401122e:	add    ebx,0xfffffff3
64011231:	mov    DWORD PTR [eax+0x16bc],ebx
64011237:	mov    WORD PTR [eax+0x16b8],si
6401123e:	jmp    0x64011346
64011243:	shl    esi,cl
64011245:	or     WORD PTR [eax+0x16b8],si
6401124c:	add    ecx,0x3
6401124f:	jmp    0x64011340
64011254:	movzx  edi,WORD PTR [eax+0xac6]
6401125b:	sub    ebx,edi
6401125d:	cmp    ecx,ebx
6401125f:	mov    DWORD PTR [esp+0x1c],edi
64011263:	jle    0x640112bf
64011265:	movzx  esi,WORD PTR [eax+0xac4]
6401126c:	mov    edi,esi
6401126e:	shl    edi,cl
64011270:	mov    ecx,DWORD PTR [eax+0x8]
64011273:	or     WORD PTR [eax+0x16b8],di
6401127a:	movzx  ebx,BYTE PTR [eax+0x16b8]
64011281:	mov    edi,DWORD PTR [eax+0x14]
64011284:	mov    BYTE PTR [ecx+edi*1],bl
64011287:	add    DWORD PTR [eax+0x14],ebp
6401128a:	movzx  ebx,BYTE PTR [eax+0x16b9]
64011291:	mov    ecx,DWORD PTR [eax+0x8]
64011294:	mov    edi,DWORD PTR [eax+0x14]
64011297:	mov    BYTE PTR [edi+ecx*1],bl
6401129a:	mov    ebx,DWORD PTR [eax+0x16bc]
640112a0:	add    DWORD PTR [eax+0x14],ebp
640112a3:	mov    cl,0x10
640112a5:	sub    cl,bl
640112a7:	shr    si,cl
640112aa:	mov    ecx,DWORD PTR [esp+0x1c]
640112ae:	lea    ecx,[ebx+ecx*1-0x10]
640112b2:	mov    WORD PTR [eax+0x16b8],si
640112b9:	mov    esi,DWORD PTR [esp+0x10]
640112bd:	jmp    0x640112d6
640112bf:	mov    di,WORD PTR [eax+0xac4]
640112c6:	shl    di,cl
640112c9:	or     WORD PTR [eax+0x16b8],di
640112d0:	mov    edi,DWORD PTR [esp+0x1c]
640112d4:	add    ecx,edi
640112d6:	add    esi,0xfffffff5
640112d9:	cmp    ecx,0x9
640112dc:	mov    DWORD PTR [eax+0x16bc],ecx
640112e2:	jle    0x64011334
640112e4:	mov    edi,esi
640112e6:	shl    edi,cl
640112e8:	mov    ecx,DWORD PTR [eax+0x8]
640112eb:	or     WORD PTR [eax+0x16b8],di
640112f2:	movzx  ebx,BYTE PTR [eax+0x16b8]
640112f9:	mov    edi,DWORD PTR [eax+0x14]
640112fc:	mov    BYTE PTR [ecx+edi*1],bl
640112ff:	add    DWORD PTR [eax+0x14],ebp
64011302:	movzx  ebx,BYTE PTR [eax+0x16b9]
64011309:	mov    edi,DWORD PTR [eax+0x14]
6401130c:	mov    ecx,DWORD PTR [eax+0x8]
6401130f:	mov    BYTE PTR [edi+ecx*1],bl
64011312:	mov    ebx,DWORD PTR [eax+0x16bc]
64011318:	add    DWORD PTR [eax+0x14],ebp
6401131b:	mov    cl,0x10
6401131d:	sub    cl,bl
6401131f:	shr    si,cl
64011322:	add    ebx,0xfffffff7
64011325:	mov    DWORD PTR [eax+0x16bc],ebx
6401132b:	mov    WORD PTR [eax+0x16b8],si
64011332:	jmp    0x64011346
64011334:	shl    esi,cl
64011336:	or     WORD PTR [eax+0x16b8],si
6401133d:	add    ecx,0x7
64011340:	mov    DWORD PTR [eax+0x16bc],ecx
64011346:	mov    ecx,DWORD PTR [esp+0x14]
6401134a:	xor    esi,esi
6401134c:	test   ecx,ecx
6401134e:	mov    DWORD PTR [esp+0x1c],edx
64011352:	jne    0x6401135e
64011354:	mov    ecx,0x8a
64011359:	lea    edi,[esi+0x3]
6401135c:	jmp    0x64011374
6401135e:	cmp    edx,ecx
64011360:	jne    0x6401136c
64011362:	mov    ecx,0x6
64011367:	lea    edi,[ecx-0x3]
6401136a:	jmp    0x64011374
6401136c:	mov    ecx,0x7
64011371:	lea    edi,[ecx-0x3]
64011374:	add    DWORD PTR [esp+0x18],0x4
64011379:	sub    DWORD PTR [esp+0x20],ebp
6401137d:	jne    0x64010ed0
64011383:	pop    edi
64011384:	pop    esi
64011385:	pop    ebp
64011386:	pop    ebx
64011387:	add    esp,0x18
6401138a:	ret    
6401138b:	int3   
6401138c:	int3   
6401138d:	int3   
6401138e:	int3   
6401138f:	int3   
64011390:	push   ecx
64011391:	mov    ecx,DWORD PTR [eax+0x16bc]
64011397:	cmp    ecx,0xb
6401139a:	push   ebx
6401139b:	mov    ebx,DWORD PTR [esp+0x14]
6401139f:	push   ebp
640113a0:	push   esi
640113a1:	push   edi
640113a2:	mov    ebp,0x1
640113a7:	jle    0x64011407
640113a9:	mov    esi,DWORD PTR [esp+0x18]
640113ad:	add    esi,0xfffffeff
640113b3:	mov    edx,esi
640113b5:	shl    edx,cl
640113b7:	mov    ecx,DWORD PTR [eax+0x14]
640113ba:	or     WORD PTR [eax+0x16b8],dx
640113c1:	movzx  ebx,BYTE PTR [eax+0x16b8]
640113c8:	mov    edx,DWORD PTR [eax+0x8]
640113cb:	mov    BYTE PTR [ecx+edx*1],bl
640113ce:	add    DWORD PTR [eax+0x14],ebp
640113d1:	movzx  ebx,BYTE PTR [eax+0x16b9]
640113d8:	mov    ecx,DWORD PTR [eax+0x14]
640113db:	mov    edx,DWORD PTR [eax+0x8]
640113de:	mov    BYTE PTR [ecx+edx*1],bl
640113e1:	mov    edx,DWORD PTR [eax+0x16bc]
640113e7:	add    DWORD PTR [eax+0x14],ebp
640113ea:	mov    ebx,DWORD PTR [esp+0x20]
640113ee:	mov    cl,0x10
640113f0:	sub    cl,dl
640113f2:	shr    si,cl
640113f5:	add    edx,0xfffffff5
640113f8:	mov    DWORD PTR [eax+0x16bc],edx
640113fe:	mov    WORD PTR [eax+0x16b8],si
64011405:	jmp    0x64011423
64011407:	mov    edx,DWORD PTR [esp+0x18]
6401140b:	add    edx,0xfffffeff
64011411:	shl    edx,cl
64011413:	or     WORD PTR [eax+0x16b8],dx
6401141a:	add    ecx,0x5
6401141d:	mov    DWORD PTR [eax+0x16bc],ecx
64011423:	mov    ecx,DWORD PTR [eax+0x16bc]
64011429:	cmp    ecx,0xb
6401142c:	jle    0x6401148d
6401142e:	mov    esi,DWORD PTR [esp+0x1c]
64011432:	add    esi,0xffffffff
64011435:	mov    edx,esi
64011437:	shl    edx,cl
64011439:	mov    ecx,DWORD PTR [eax+0x14]
6401143c:	mov    DWORD PTR [esp+0x10],ebx
64011440:	or     WORD PTR [eax+0x16b8],dx
64011447:	movzx  ebx,BYTE PTR [eax+0x16b8]
6401144e:	mov    edx,DWORD PTR [eax+0x8]
64011451:	mov    BYTE PTR [ecx+edx*1],bl
64011454:	add    DWORD PTR [eax+0x14],ebp
64011457:	movzx  ebx,BYTE PTR [eax+0x16b9]
6401145e:	mov    ecx,DWORD PTR [eax+0x14]
64011461:	mov    edx,DWORD PTR [eax+0x8]
64011464:	mov    BYTE PTR [ecx+edx*1],bl
64011467:	mov    edx,DWORD PTR [eax+0x16bc]
6401146d:	add    DWORD PTR [eax+0x14],ebp
64011470:	mov    ebx,DWORD PTR [esp+0x10]
64011474:	mov    cl,0x10
64011476:	sub    cl,dl
64011478:	shr    si,cl
6401147b:	add    edx,0xfffffff5
6401147e:	mov    DWORD PTR [eax+0x16bc],edx
64011484:	mov    WORD PTR [eax+0x16b8],si
6401148b:	jmp    0x640114a6
6401148d:	mov    edx,DWORD PTR [esp+0x1c]
64011491:	add    edx,0xffffffff
64011494:	shl    edx,cl
64011496:	or     WORD PTR [eax+0x16b8],dx
6401149d:	add    ecx,0x5
640114a0:	mov    DWORD PTR [eax+0x16bc],ecx
640114a6:	mov    ecx,DWORD PTR [eax+0x16bc]
640114ac:	cmp    ecx,0xc
640114af:	jle    0x6401150c
640114b1:	lea    esi,[ebx-0x4]
640114b4:	mov    edx,esi
640114b6:	shl    edx,cl
640114b8:	mov    ecx,DWORD PTR [eax+0x14]
640114bb:	mov    DWORD PTR [esp+0x10],ebx
640114bf:	or     WORD PTR [eax+0x16b8],dx
640114c6:	movzx  ebx,BYTE PTR [eax+0x16b8]
640114cd:	mov    edx,DWORD PTR [eax+0x8]
640114d0:	mov    BYTE PTR [ecx+edx*1],bl
640114d3:	add    DWORD PTR [eax+0x14],ebp
640114d6:	movzx  ebx,BYTE PTR [eax+0x16b9]
640114dd:	mov    ecx,DWORD PTR [eax+0x14]
640114e0:	mov    edx,DWORD PTR [eax+0x8]
640114e3:	mov    BYTE PTR [ecx+edx*1],bl
640114e6:	mov    edx,DWORD PTR [eax+0x16bc]
640114ec:	add    DWORD PTR [eax+0x14],ebp
640114ef:	mov    ebx,DWORD PTR [esp+0x10]
640114f3:	mov    cl,0x10
640114f5:	sub    cl,dl
640114f7:	shr    si,cl
640114fa:	add    edx,0xfffffff4
640114fd:	mov    DWORD PTR [eax+0x16bc],edx
64011503:	mov    WORD PTR [eax+0x16b8],si
6401150a:	jmp    0x64011521
6401150c:	lea    edx,[ebx-0x4]
6401150f:	shl    edx,cl
64011511:	or     WORD PTR [eax+0x16b8],dx
64011518:	add    ecx,0x4
6401151b:	mov    DWORD PTR [eax+0x16bc],ecx
64011521:	xor    edi,edi
64011523:	test   ebx,ebx
64011525:	jle    0x640115c3
6401152b:	jmp    0x64011530
6401152d:	lea    ecx,[ecx+0x0]
64011530:	mov    ecx,DWORD PTR [eax+0x16bc]
64011536:	cmp    ecx,0xd
64011539:	movzx  edx,BYTE PTR [edi+0x6403d3ac]
64011540:	jle    0x6401159e
64011542:	movzx  esi,WORD PTR [eax+edx*4+0xa7e]
6401154a:	mov    edx,esi
6401154c:	shl    edx,cl
6401154e:	mov    ecx,DWORD PTR [eax+0x14]
64011551:	or     WORD PTR [eax+0x16b8],dx
64011558:	movzx  ebx,BYTE PTR [eax+0x16b8]
6401155f:	mov    edx,DWORD PTR [eax+0x8]
64011562:	mov    BYTE PTR [ecx+edx*1],bl
64011565:	add    DWORD PTR [eax+0x14],ebp
64011568:	movzx  ebx,BYTE PTR [eax+0x16b9]
6401156f:	mov    ecx,DWORD PTR [eax+0x14]
64011572:	mov    edx,DWORD PTR [eax+0x8]
64011575:	mov    BYTE PTR [ecx+edx*1],bl
64011578:	mov    edx,DWORD PTR [eax+0x16bc]
6401157e:	add    DWORD PTR [eax+0x14],ebp
64011581:	mov    ebx,DWORD PTR [esp+0x20]
64011585:	mov    cl,0x10
64011587:	sub    cl,dl
64011589:	shr    si,cl
6401158c:	add    edx,0xfffffff3
6401158f:	mov    DWORD PTR [eax+0x16bc],edx
64011595:	mov    WORD PTR [eax+0x16b8],si
6401159c:	jmp    0x640115b9
6401159e:	mov    dx,WORD PTR [eax+edx*4+0xa7e]
640115a6:	shl    dx,cl
640115a9:	or     WORD PTR [eax+0x16b8],dx
640115b0:	add    ecx,0x3
640115b3:	mov    DWORD PTR [eax+0x16bc],ecx
640115b9:	add    edi,ebp
640115bb:	cmp    edi,ebx
640115bd:	jl     0x64011530
640115c3:	mov    ecx,DWORD PTR [esp+0x18]
640115c7:	add    ecx,0xffffffff
640115ca:	lea    edx,[eax+0x94]
640115d0:	call   0x64010e80
640115d5:	mov    ecx,DWORD PTR [esp+0x1c]
640115d9:	pop    edi
640115da:	pop    esi
640115db:	pop    ebp
640115dc:	add    ecx,0xffffffff
640115df:	lea    edx,[eax+0x988]
640115e5:	pop    ebx
640115e6:	add    esp,0x4
640115e9:	jmp    0x64010e80
640115ee:	int3   
640115ef:	int3   
640115f0:	sub    esp,0xc
640115f3:	push   ebx
640115f4:	mov    ebx,DWORD PTR [esp+0x14]
640115f8:	push   ebp
640115f9:	xor    ecx,ecx
640115fb:	cmp    DWORD PTR [eax+0x16a0],ecx
64011601:	push   esi
64011602:	push   edi
64011603:	je     0x64011942
64011609:	lea    esp,[esp+0x0]
64011610:	mov    edx,DWORD PTR [eax+0x16a4]
64011616:	movzx  ebp,WORD PTR [edx+ecx*2]
6401161a:	mov    edx,DWORD PTR [eax+0x1698]
64011620:	movzx  esi,BYTE PTR [ecx+edx*1]
64011624:	add    ecx,0x1
64011627:	test   ebp,ebp
64011629:	mov    DWORD PTR [esp+0x18],ecx
6401162d:	mov    ecx,DWORD PTR [eax+0x16bc]
64011633:	jne    0x640116ba
64011639:	movzx  edi,WORD PTR [ebx+esi*4+0x2]
6401163e:	mov    edx,0x10
64011643:	sub    edx,edi
64011645:	cmp    ecx,edx
64011647:	jle    0x640116a5
64011649:	movzx  esi,WORD PTR [ebx+esi*4]
6401164d:	mov    edx,esi
6401164f:	shl    edx,cl
64011651:	mov    ecx,DWORD PTR [eax+0x8]
64011654:	mov    DWORD PTR [esp+0x10],ebx
64011658:	or     WORD PTR [eax+0x16b8],dx
6401165f:	movzx  ebx,BYTE PTR [eax+0x16b8]
64011666:	mov    edx,DWORD PTR [eax+0x14]
64011669:	mov    BYTE PTR [ecx+edx*1],bl
6401166c:	add    DWORD PTR [eax+0x14],0x1
64011670:	movzx  ebx,BYTE PTR [eax+0x16b9]
64011677:	mov    ecx,DWORD PTR [eax+0x14]
6401167a:	mov    edx,DWORD PTR [eax+0x8]
6401167d:	mov    BYTE PTR [ecx+edx*1],bl
64011680:	mov    edx,DWORD PTR [eax+0x16bc]
64011686:	add    DWORD PTR [eax+0x14],0x1
6401168a:	mov    ebx,DWORD PTR [esp+0x10]
6401168e:	mov    cl,0x10
64011690:	sub    cl,dl
64011692:	shr    si,cl
64011695:	lea    ecx,[edx+edi*1-0x10]
64011699:	mov    WORD PTR [eax+0x16b8],si
640116a0:	jmp    0x6401192c
640116a5:	mov    dx,WORD PTR [ebx+esi*4]
640116a9:	shl    dx,cl
640116ac:	or     WORD PTR [eax+0x16b8],dx
640116b3:	add    ecx,edi
640116b5:	jmp    0x6401192c
640116ba:	movzx  edx,BYTE PTR [esi+0x6403db80]
640116c1:	movzx  edi,WORD PTR [ebx+edx*4+0x406]
640116c9:	mov    ebx,0x10
640116ce:	sub    ebx,edi
640116d0:	cmp    ecx,ebx
640116d2:	mov    DWORD PTR [esp+0x10],edi
640116d6:	mov    edi,DWORD PTR [esp+0x20]
640116da:	mov    DWORD PTR [esp+0x14],edx
640116de:	jle    0x64011743
640116e0:	movzx  edi,WORD PTR [edi+edx*4+0x404]
640116e8:	mov    edx,edi
640116ea:	shl    edx,cl
640116ec:	mov    ecx,DWORD PTR [eax+0x8]
640116ef:	or     WORD PTR [eax+0x16b8],dx
640116f6:	movzx  ebx,BYTE PTR [eax+0x16b8]
640116fd:	mov    edx,DWORD PTR [eax+0x14]
64011700:	mov    BYTE PTR [ecx+edx*1],bl
64011703:	add    DWORD PTR [eax+0x14],0x1
64011707:	mov    ecx,DWORD PTR [eax+0x14]
6401170a:	movzx  ebx,BYTE PTR [eax+0x16b9]
64011711:	mov    edx,DWORD PTR [eax+0x8]
64011714:	mov    BYTE PTR [ecx+edx*1],bl
64011717:	mov    edx,DWORD PTR [eax+0x16bc]
6401171d:	add    DWORD PTR [eax+0x14],0x1
64011721:	mov    cl,0x10
64011723:	sub    cl,dl
64011725:	shr    di,cl
64011728:	mov    ecx,DWORD PTR [esp+0x10]
6401172c:	lea    edx,[edx+ecx*1-0x10]
64011730:	mov    DWORD PTR [eax+0x16bc],edx
64011736:	mov    edx,DWORD PTR [esp+0x14]
6401173a:	mov    WORD PTR [eax+0x16b8],di
64011741:	jmp    0x64011761
64011743:	mov    di,WORD PTR [edi+edx*4+0x404]
6401174b:	shl    di,cl
6401174e:	or     WORD PTR [eax+0x16b8],di
64011755:	mov    edi,DWORD PTR [esp+0x10]
64011759:	add    ecx,edi
6401175b:	mov    DWORD PTR [eax+0x16bc],ecx
64011761:	mov    edi,DWORD PTR [edx*4+0x6403d338]
64011768:	test   edi,edi
6401176a:	mov    ebx,DWORD PTR [esp+0x20]
6401176e:	je     0x640117ea
64011770:	sub    esi,DWORD PTR [edx*4+0x6403dc80]
64011777:	mov    ecx,DWORD PTR [eax+0x16bc]
6401177d:	mov    edx,0x10
64011782:	sub    edx,edi
64011784:	cmp    ecx,edx
64011786:	jle    0x640117d9
64011788:	mov    edx,esi
6401178a:	shl    edx,cl
6401178c:	mov    ecx,DWORD PTR [eax+0x8]
6401178f:	or     WORD PTR [eax+0x16b8],dx
64011796:	movzx  ebx,BYTE PTR [eax+0x16b8]
6401179d:	mov    edx,DWORD PTR [eax+0x14]
640117a0:	mov    BYTE PTR [ecx+edx*1],bl
640117a3:	add    DWORD PTR [eax+0x14],0x1
640117a7:	movzx  ebx,BYTE PTR [eax+0x16b9]
640117ae:	mov    ecx,DWORD PTR [eax+0x14]
640117b1:	mov    edx,DWORD PTR [eax+0x8]
640117b4:	mov    BYTE PTR [ecx+edx*1],bl
640117b7:	mov    edx,DWORD PTR [eax+0x16bc]
640117bd:	add    DWORD PTR [eax+0x14],0x1
640117c1:	mov    ebx,DWORD PTR [esp+0x20]
640117c5:	mov    cl,0x10
640117c7:	sub    cl,dl
640117c9:	shr    si,cl
640117cc:	lea    ecx,[edx+edi*1-0x10]
640117d0:	mov    WORD PTR [eax+0x16b8],si
640117d7:	jmp    0x640117e4
640117d9:	shl    esi,cl
640117db:	or     WORD PTR [eax+0x16b8],si
640117e2:	add    ecx,edi
640117e4:	mov    DWORD PTR [eax+0x16bc],ecx
640117ea:	sub    ebp,0x1
640117ed:	cmp    ebp,0x100
640117f3:	jae    0x640117fe
640117f5:	movzx  edi,BYTE PTR [ebp+0x6403d980]
640117fc:	jmp    0x6401180a
640117fe:	mov    edx,ebp
64011800:	shr    edx,0x7
64011803:	movzx  edi,BYTE PTR [edx+0x6403da80]
6401180a:	mov    ecx,DWORD PTR [esp+0x24]
6401180e:	movzx  edx,WORD PTR [ecx+edi*4+0x2]
64011813:	mov    ecx,DWORD PTR [eax+0x16bc]
64011819:	mov    esi,0x10
6401181e:	sub    esi,edx
64011820:	cmp    ecx,esi
64011822:	mov    DWORD PTR [esp+0x14],edx
64011826:	jle    0x6401188b
64011828:	mov    edx,DWORD PTR [esp+0x24]
6401182c:	movzx  esi,WORD PTR [edx+edi*4]
64011830:	mov    edx,esi
64011832:	shl    edx,cl
64011834:	mov    ecx,DWORD PTR [eax+0x8]
64011837:	or     WORD PTR [eax+0x16b8],dx
6401183e:	movzx  ebx,BYTE PTR [eax+0x16b8]
64011845:	mov    edx,DWORD PTR [eax+0x14]
64011848:	mov    BYTE PTR [ecx+edx*1],bl
6401184b:	add    DWORD PTR [eax+0x14],0x1
6401184f:	movzx  ebx,BYTE PTR [eax+0x16b9]
64011856:	mov    ecx,DWORD PTR [eax+0x14]
64011859:	mov    edx,DWORD PTR [eax+0x8]
6401185c:	mov    BYTE PTR [ecx+edx*1],bl
6401185f:	mov    edx,DWORD PTR [eax+0x16bc]
64011865:	add    DWORD PTR [eax+0x14],0x1
64011869:	mov    ebx,DWORD PTR [esp+0x20]
6401186d:	mov    cl,0x10
6401186f:	sub    cl,dl
64011871:	shr    si,cl
64011874:	mov    ecx,DWORD PTR [esp+0x14]
64011878:	lea    edx,[edx+ecx*1-0x10]
6401187c:	mov    DWORD PTR [eax+0x16bc],edx
64011882:	mov    WORD PTR [eax+0x16b8],si
64011889:	jmp    0x640118a5
6401188b:	mov    esi,DWORD PTR [esp+0x24]
6401188f:	mov    si,WORD PTR [esi+edi*4]
64011893:	shl    si,cl
64011896:	or     WORD PTR [eax+0x16b8],si
6401189d:	add    ecx,edx
6401189f:	mov    DWORD PTR [eax+0x16bc],ecx
640118a5:	mov    esi,DWORD PTR [edi*4+0x6403d3c0]
640118ac:	test   esi,esi
640118ae:	je     0x64011932
640118b4:	mov    ecx,DWORD PTR [eax+0x16bc]
640118ba:	sub    ebp,DWORD PTR [edi*4+0x6403dcf8]
640118c1:	mov    edx,0x10
640118c6:	sub    edx,esi
640118c8:	cmp    ecx,edx
640118ca:	jle    0x64011921
640118cc:	mov    edx,ebp
640118ce:	shl    edx,cl
640118d0:	mov    ecx,DWORD PTR [eax+0x8]
640118d3:	mov    DWORD PTR [esp+0x14],ebx
640118d7:	or     WORD PTR [eax+0x16b8],dx
640118de:	movzx  ebx,BYTE PTR [eax+0x16b8]
640118e5:	mov    edx,DWORD PTR [eax+0x14]
640118e8:	mov    BYTE PTR [ecx+edx*1],bl
640118eb:	add    DWORD PTR [eax+0x14],0x1
640118ef:	movzx  ebx,BYTE PTR [eax+0x16b9]
640118f6:	mov    ecx,DWORD PTR [eax+0x14]
640118f9:	mov    edx,DWORD PTR [eax+0x8]
640118fc:	mov    BYTE PTR [ecx+edx*1],bl
640118ff:	mov    edx,DWORD PTR [eax+0x16bc]
64011905:	add    DWORD PTR [eax+0x14],0x1
64011909:	mov    ebx,DWORD PTR [esp+0x14]
6401190d:	mov    cl,0x10
6401190f:	sub    cl,dl
64011911:	shr    bp,cl
64011914:	lea    ecx,[edx+esi*1-0x10]
64011918:	mov    WORD PTR [eax+0x16b8],bp
6401191f:	jmp    0x6401192c
64011921:	shl    ebp,cl
64011923:	or     WORD PTR [eax+0x16b8],bp
6401192a:	add    ecx,esi
6401192c:	mov    DWORD PTR [eax+0x16bc],ecx
64011932:	mov    ecx,DWORD PTR [esp+0x18]
64011936:	cmp    ecx,DWORD PTR [eax+0x16a0]
6401193c:	jb     0x64011610
64011942:	movzx  edi,WORD PTR [ebx+0x402]
64011949:	mov    ecx,DWORD PTR [eax+0x16bc]
6401194f:	mov    edx,0x10
64011954:	sub    edx,edi
64011956:	cmp    ecx,edx
64011958:	jle    0x640119cd
6401195a:	movzx  esi,WORD PTR [ebx+0x400]
64011961:	mov    edx,esi
64011963:	shl    edx,cl
64011965:	mov    ecx,DWORD PTR [eax+0x8]
64011968:	mov    DWORD PTR [esp+0x20],ebx
6401196c:	or     WORD PTR [eax+0x16b8],dx
64011973:	mov    edx,DWORD PTR [eax+0x14]
64011976:	mov    bl,BYTE PTR [eax+0x16b8]
6401197c:	mov    BYTE PTR [ecx+edx*1],bl
6401197f:	add    DWORD PTR [eax+0x14],0x1
64011983:	mov    ebp,DWORD PTR [eax+0x14]
64011986:	mov    ecx,DWORD PTR [eax+0x8]
64011989:	mov    dl,BYTE PTR [eax+0x16b9]
6401198f:	mov    ebx,DWORD PTR [esp+0x20]
64011993:	mov    BYTE PTR [ecx+ebp*1],dl
64011996:	mov    edx,DWORD PTR [eax+0x16bc]
6401199c:	add    DWORD PTR [eax+0x14],0x1
640119a0:	mov    cl,0x10
640119a2:	sub    cl,dl
640119a4:	shr    si,cl
640119a7:	lea    ecx,[edx+edi*1-0x10]
640119ab:	pop    edi
640119ac:	mov    DWORD PTR [eax+0x16bc],ecx
640119b2:	mov    WORD PTR [eax+0x16b8],si
640119b9:	movzx  edx,WORD PTR [ebx+0x402]
640119c0:	pop    esi
640119c1:	pop    ebp
640119c2:	mov    DWORD PTR [eax+0x16b4],edx
640119c8:	pop    ebx
640119c9:	add    esp,0xc
640119cc:	ret    
640119cd:	mov    dx,WORD PTR [ebx+0x400]
640119d4:	shl    dx,cl
640119d7:	or     WORD PTR [eax+0x16b8],dx
640119de:	add    ecx,edi
640119e0:	pop    edi
640119e1:	mov    DWORD PTR [eax+0x16bc],ecx
640119e7:	movzx  ecx,WORD PTR [ebx+0x402]
640119ee:	pop    esi
640119ef:	pop    ebp
640119f0:	mov    DWORD PTR [eax+0x16b4],ecx
640119f6:	pop    ebx
640119f7:	add    esp,0xc
640119fa:	ret    
640119fb:	int3   
640119fc:	int3   
640119fd:	int3   
640119fe:	int3   
640119ff:	int3   
64011a00:	xor    eax,eax
64011a02:	lea    ecx,[edx+0x94]
64011a08:	cmp    WORD PTR [ecx],0x0
64011a0c:	jne    0x64011a19
64011a0e:	add    eax,0x1
64011a11:	add    ecx,0x4
64011a14:	cmp    eax,0x9
64011a17:	jl     0x64011a08
64011a19:	cmp    eax,0x9
64011a1c:	jne    0x64011abd
64011a22:	mov    eax,0xe
64011a27:	lea    ecx,[edx+0xd0]
64011a2d:	lea    ecx,[ecx+0x0]
64011a30:	cmp    WORD PTR [ecx-0x4],0x0
64011a35:	jne    0x64011abd
64011a3b:	cmp    WORD PTR [ecx],0x0
64011a3f:	jne    0x64011a76
64011a41:	cmp    WORD PTR [ecx+0x4],0x0
64011a46:	jne    0x64011a87
64011a48:	cmp    WORD PTR [ecx+0x8],0x0
64011a4d:	jne    0x64011a98
64011a4f:	cmp    WORD PTR [ecx+0xc],0x0
64011a54:	jne    0x64011aa9
64011a56:	cmp    WORD PTR [ecx+0x10],0x0
64011a5b:	jne    0x64011aba
64011a5d:	add    eax,0x6
64011a60:	add    ecx,0x18
64011a63:	cmp    eax,0x20
64011a66:	jl     0x64011a30
64011a68:	mov    edx,DWORD PTR [edx]
64011a6a:	xor    ecx,ecx
64011a6c:	cmp    eax,0x20
64011a6f:	sete   cl
64011a72:	mov    DWORD PTR [edx+0x2c],ecx
64011a75:	ret    
64011a76:	mov    edx,DWORD PTR [edx]
64011a78:	xor    ecx,ecx
64011a7a:	add    eax,0x1
64011a7d:	cmp    eax,0x20
64011a80:	sete   cl
64011a83:	mov    DWORD PTR [edx+0x2c],ecx
64011a86:	ret    
64011a87:	mov    edx,DWORD PTR [edx]
64011a89:	xor    ecx,ecx
64011a8b:	add    eax,0x2
64011a8e:	cmp    eax,0x20
64011a91:	sete   cl
64011a94:	mov    DWORD PTR [edx+0x2c],ecx
64011a97:	ret    
64011a98:	mov    edx,DWORD PTR [edx]
64011a9a:	xor    ecx,ecx
64011a9c:	add    eax,0x3
64011a9f:	cmp    eax,0x20
64011aa2:	sete   cl
64011aa5:	mov    DWORD PTR [edx+0x2c],ecx
64011aa8:	ret    
64011aa9:	mov    edx,DWORD PTR [edx]
64011aab:	xor    ecx,ecx
64011aad:	add    eax,0x4
64011ab0:	cmp    eax,0x20
64011ab3:	sete   cl
64011ab6:	mov    DWORD PTR [edx+0x2c],ecx
64011ab9:	ret    
64011aba:	add    eax,0x5
64011abd:	mov    edx,DWORD PTR [edx]
64011abf:	xor    ecx,ecx
64011ac1:	cmp    eax,0x20
64011ac4:	sete   cl
64011ac7:	mov    DWORD PTR [edx+0x2c],ecx
64011aca:	ret    
64011acb:	int3   
64011acc:	int3   
64011acd:	int3   
64011ace:	int3   
64011acf:	int3   
64011ad0:	xor    eax,eax
64011ad2:	push   esi
64011ad3:	mov    esi,ecx
64011ad5:	and    esi,0x1
64011ad8:	or     eax,esi
64011ada:	sub    edx,0x1
64011add:	shr    ecx,1
64011adf:	add    eax,eax
64011ae1:	test   edx,edx
64011ae3:	jg     0x64011ad3
64011ae5:	shr    eax,1
64011ae7:	pop    esi
64011ae8:	ret    
64011ae9:	int3   
64011aea:	int3   
64011aeb:	int3   
64011aec:	int3   
64011aed:	int3   
64011aee:	int3   
64011aef:	int3   
64011af0:	mov    edx,DWORD PTR [eax+0x16bc]
64011af6:	cmp    edx,0x8
64011af9:	push   ebx
64011afa:	push   esi
64011afb:	jle    0x64011b3a
64011afd:	movzx  ebx,BYTE PTR [eax+0x16b8]
64011b04:	mov    edx,DWORD PTR [eax+0x14]
64011b07:	mov    ecx,DWORD PTR [eax+0x8]
64011b0a:	mov    BYTE PTR [ecx+edx*1],bl
64011b0d:	movzx  ebx,BYTE PTR [eax+0x16b9]
64011b14:	mov    edx,DWORD PTR [eax+0x8]
64011b17:	mov    esi,0x1
64011b1c:	add    DWORD PTR [eax+0x14],esi
64011b1f:	mov    ecx,DWORD PTR [eax+0x14]
64011b22:	mov    BYTE PTR [ecx+edx*1],bl
64011b25:	add    DWORD PTR [eax+0x14],esi
64011b28:	xor    ecx,ecx
64011b2a:	pop    esi
64011b2b:	mov    WORD PTR [eax+0x16b8],cx
64011b32:	mov    DWORD PTR [eax+0x16bc],ecx
64011b38:	pop    ebx
64011b39:	ret    
64011b3a:	xor    ecx,ecx
64011b3c:	cmp    edx,ecx
64011b3e:	jle    0x64011b53
64011b40:	mov    esi,DWORD PTR [eax+0x14]
64011b43:	mov    edx,DWORD PTR [eax+0x8]
64011b46:	mov    bl,BYTE PTR [eax+0x16b8]
64011b4c:	mov    BYTE PTR [edx+esi*1],bl
64011b4f:	add    DWORD PTR [eax+0x14],0x1
64011b53:	pop    esi
64011b54:	mov    WORD PTR [eax+0x16b8],cx
64011b5b:	mov    DWORD PTR [eax+0x16bc],ecx
64011b61:	pop    ebx
64011b62:	ret    
64011b63:	int3   
64011b64:	int3   
64011b65:	int3   
64011b66:	int3   
64011b67:	int3   
64011b68:	int3   
64011b69:	int3   
64011b6a:	int3   
64011b6b:	int3   
64011b6c:	int3   
64011b6d:	int3   
64011b6e:	int3   
64011b6f:	int3   
64011b70:	push   ebx
64011b71:	push   esi
64011b72:	push   edi
64011b73:	mov    ebx,ecx
64011b75:	mov    esi,edx
64011b77:	call   0x64011af0
64011b7c:	cmp    DWORD PTR [esp+0x10],0x0
64011b81:	mov    DWORD PTR [eax+0x16b4],0x8
64011b8b:	mov    edi,0x1
64011b90:	je     0x64011bcc
64011b92:	mov    ecx,DWORD PTR [eax+0x14]
64011b95:	mov    edx,DWORD PTR [eax+0x8]
64011b98:	mov    BYTE PTR [ecx+edx*1],bl
64011b9b:	add    DWORD PTR [eax+0x14],edi
64011b9e:	mov    ecx,DWORD PTR [eax+0x14]
64011ba1:	mov    edx,DWORD PTR [eax+0x8]
64011ba4:	mov    BYTE PTR [ecx+edx*1],bh
64011ba7:	add    DWORD PTR [eax+0x14],edi
64011baa:	mov    edx,DWORD PTR [eax+0x8]
64011bad:	push   ebp
64011bae:	mov    ebp,DWORD PTR [eax+0x14]
64011bb1:	mov    cl,bl
64011bb3:	not    cl
64011bb5:	mov    BYTE PTR [edx+ebp*1],cl
64011bb8:	add    DWORD PTR [eax+0x14],edi
64011bbb:	mov    ebp,DWORD PTR [eax+0x14]
64011bbe:	mov    edx,DWORD PTR [eax+0x8]
64011bc1:	mov    ecx,ebx
64011bc3:	not    ecx
64011bc5:	mov    BYTE PTR [edx+ebp*1],ch
64011bc8:	add    DWORD PTR [eax+0x14],edi
64011bcb:	pop    ebp
64011bcc:	test   ebx,ebx
64011bce:	je     0x64011bee
64011bd0:	mov    ecx,DWORD PTR [eax+0x14]
64011bd3:	mov    edx,DWORD PTR [eax+0x8]
64011bd6:	sub    ebx,edi
64011bd8:	mov    DWORD PTR [esp+0x10],ebx
64011bdc:	mov    bl,BYTE PTR [esi]
64011bde:	mov    BYTE PTR [ecx+edx*1],bl
64011be1:	mov    ebx,DWORD PTR [esp+0x10]
64011be5:	add    DWORD PTR [eax+0x14],edi
64011be8:	add    esi,edi
64011bea:	test   ebx,ebx
64011bec:	jne    0x64011bd0
64011bee:	pop    edi
64011bef:	pop    esi
64011bf0:	pop    ebx
64011bf1:	ret    
64011bf2:	int3   
64011bf3:	int3   
64011bf4:	int3   
64011bf5:	int3   
64011bf6:	int3   
64011bf7:	int3   
64011bf8:	int3   
64011bf9:	int3   
64011bfa:	int3   
64011bfb:	int3   
64011bfc:	int3   
64011bfd:	int3   
64011bfe:	int3   
64011bff:	int3   
64011c00:	sub    esp,0x24
64011c03:	mov    eax,ds:0x640521ac
64011c08:	xor    eax,esp
64011c0a:	mov    DWORD PTR [esp+0x20],eax
64011c0e:	push   esi
64011c0f:	lea    esi,[esp+0x6]
64011c13:	xor    ecx,ecx
64011c15:	mov    eax,0x1
64011c1a:	sub    edx,esi
64011c1c:	lea    esp,[esp+0x0]
64011c20:	lea    esi,[edx+eax*2]
64011c23:	mov    si,WORD PTR [esp+esi*1+0x4]
64011c28:	add    si,cx
64011c2b:	add    si,si
64011c2e:	movzx  ecx,si
64011c31:	mov    WORD PTR [esp+eax*2+0x4],cx
64011c36:	add    eax,0x1
64011c39:	cmp    eax,0xf
64011c3c:	jle    0x64011c20
64011c3e:	xor    esi,esi
64011c40:	test   ebx,ebx
64011c42:	jl     0x64011c6d
64011c44:	movzx  edx,WORD PTR [edi+esi*4+0x2]
64011c49:	test   edx,edx
64011c4b:	je     0x64011c66
64011c4d:	movzx  eax,WORD PTR [esp+edx*2+0x4]
64011c52:	movzx  ecx,ax
64011c55:	add    eax,0x1
64011c58:	mov    WORD PTR [esp+edx*2+0x4],ax
64011c5d:	call   0x64011ad0
64011c62:	mov    WORD PTR [edi+esi*4],ax
64011c66:	add    esi,0x1
64011c69:	cmp    esi,ebx
64011c6b:	jle    0x64011c44
64011c6d:	mov    ecx,DWORD PTR [esp+0x24]
64011c71:	pop    esi
64011c72:	xor    ecx,esp
64011c74:	call   0x64013ca6
64011c79:	add    esp,0x24
64011c7c:	ret    
64011c7d:	int3   
64011c7e:	int3   
64011c7f:	int3   
64011c80:	sub    esp,0x8
64011c83:	mov    eax,DWORD PTR [esp+0xc]
64011c87:	push   ebx
64011c88:	push   ebp
64011c89:	push   edi
64011c8a:	mov    edi,DWORD PTR [eax]
64011c8c:	mov    eax,DWORD PTR [eax+0x8]
64011c8f:	mov    ecx,DWORD PTR [eax+0xc]
64011c92:	mov    ebp,DWORD PTR [eax]
64011c94:	xor    edx,edx
64011c96:	or     ebx,0xffffffff
64011c99:	xor    eax,eax
64011c9b:	cmp    ecx,edx
64011c9d:	mov    DWORD PTR [esp+0x10],ecx
64011ca1:	mov    DWORD PTR [esp+0xc],ebx
64011ca5:	mov    DWORD PTR [esi+0x1450],edx
64011cab:	mov    DWORD PTR [esi+0x1454],0x23d
64011cb5:	jle    0x64011cee
64011cb7:	cmp    WORD PTR [edi+eax*4],dx
64011cbb:	je     0x64011ce0
64011cbd:	add    DWORD PTR [esi+0x1450],0x1
64011cc4:	mov    ecx,DWORD PTR [esi+0x1450]
64011cca:	mov    DWORD PTR [esi+ecx*4+0xb5c],eax
64011cd1:	mov    DWORD PTR [esp+0xc],eax
64011cd5:	mov    BYTE PTR [eax+esi*1+0x1458],dl
64011cdc:	mov    ebx,eax
64011cde:	jmp    0x64011ce5
64011ce0:	mov    WORD PTR [edi+eax*4+0x2],dx
64011ce5:	add    eax,0x1
64011ce8:	cmp    eax,DWORD PTR [esp+0x10]
64011cec:	jl     0x64011cb7
64011cee:	cmp    DWORD PTR [esi+0x1450],0x2
64011cf5:	jge    0x64011d49
64011cf7:	cmp    ebx,0x2
64011cfa:	jge    0x64011d03
64011cfc:	add    ebx,0x1
64011cff:	mov    eax,ebx
64011d01:	jmp    0x64011d05
64011d03:	xor    eax,eax
64011d05:	add    DWORD PTR [esi+0x1450],0x1
64011d0c:	mov    ecx,DWORD PTR [esi+0x1450]
64011d12:	mov    DWORD PTR [esi+ecx*4+0xb5c],eax
64011d19:	mov    WORD PTR [edi+eax*4],0x1
64011d1f:	mov    BYTE PTR [esi+eax*1+0x1458],dl
64011d26:	add    DWORD PTR [esi+0x16a8],0xffffffff
64011d2d:	cmp    ebp,edx
64011d2f:	je     0x64011d3c
64011d31:	movzx  eax,WORD PTR [ebp+eax*4+0x2]
64011d36:	sub    DWORD PTR [esi+0x16ac],eax
64011d3c:	cmp    DWORD PTR [esi+0x1450],0x2
64011d43:	jl     0x64011cf7
64011d45:	mov    DWORD PTR [esp+0xc],ebx
64011d49:	mov    ecx,DWORD PTR [esp+0x18]
64011d4d:	mov    DWORD PTR [ecx+0x4],ebx
64011d50:	mov    eax,DWORD PTR [esi+0x1450]
64011d56:	cdq    
64011d57:	sub    eax,edx
64011d59:	mov    ebp,eax
64011d5b:	sar    ebp,1
64011d5d:	cmp    ebp,0x1
64011d60:	jl     0x64011d75
64011d62:	push   ebp
64011d63:	mov    eax,esi
64011d65:	call   0x64010aa0
64011d6a:	sub    ebp,0x1
64011d6d:	add    esp,0x4
64011d70:	cmp    ebp,0x1
64011d73:	jge    0x64011d62
64011d75:	mov    ebx,DWORD PTR [esp+0x10]
64011d79:	lea    esp,[esp+0x0]
64011d80:	mov    eax,DWORD PTR [esi+0x1450]
64011d86:	mov    edx,DWORD PTR [esi+eax*4+0xb5c]
64011d8d:	mov    ebp,DWORD PTR [esi+0xb60]
64011d93:	add    eax,0xffffffff
64011d96:	mov    DWORD PTR [esi+0x1450],eax
64011d9c:	push   0x1
64011d9e:	mov    eax,esi
64011da0:	mov    DWORD PTR [esi+0xb60],edx
64011da6:	call   0x64010aa0
64011dab:	mov    eax,DWORD PTR [esi+0xb60]
64011db1:	or     edx,0xffffffff
64011db4:	add    DWORD PTR [esi+0x1454],edx
64011dba:	mov    ecx,DWORD PTR [esi+0x1454]
64011dc0:	mov    DWORD PTR [esi+ecx*4+0xb5c],ebp
64011dc7:	add    DWORD PTR [esi+0x1454],edx
64011dcd:	mov    ecx,DWORD PTR [esi+0x1454]
64011dd3:	mov    DWORD PTR [esi+ecx*4+0xb5c],eax
64011dda:	mov    cx,WORD PTR [edi+eax*4]
64011dde:	add    cx,WORD PTR [edi+ebp*4]
64011de2:	add    esp,0x4
64011de5:	mov    WORD PTR [edi+ebx*4],cx
64011de9:	mov    cl,BYTE PTR [esi+eax*1+0x1458]
64011df0:	mov    dl,BYTE PTR [esi+ebp*1+0x1458]
64011df7:	cmp    dl,cl
64011df9:	jb     0x64011e00
64011dfb:	movzx  ecx,dl
64011dfe:	jmp    0x64011e03
64011e00:	movzx  ecx,cl
64011e03:	add    cl,0x1
64011e06:	mov    BYTE PTR [esi+ebx*1+0x1458],cl
64011e0d:	movzx  ecx,bx
64011e10:	mov    WORD PTR [edi+eax*4+0x2],cx
64011e15:	mov    WORD PTR [edi+ebp*4+0x2],cx
64011e1a:	mov    DWORD PTR [esi+0xb60],ebx
64011e20:	push   0x1
64011e22:	mov    eax,esi
64011e24:	add    ebx,0x1
64011e27:	call   0x64010aa0
64011e2c:	add    esp,0x4
64011e2f:	cmp    DWORD PTR [esi+0x1450],0x2
64011e36:	jge    0x64011d80
64011e3c:	add    DWORD PTR [esi+0x1454],0xffffffff
64011e43:	mov    eax,DWORD PTR [esi+0x1454]
64011e49:	mov    edx,DWORD PTR [esi+0xb60]
64011e4f:	mov    ecx,DWORD PTR [esp+0x18]
64011e53:	mov    DWORD PTR [esi+eax*4+0xb5c],edx
64011e5a:	mov    eax,esi
64011e5c:	call   0x64010b70
64011e61:	mov    ebx,DWORD PTR [esp+0xc]
64011e65:	lea    edx,[esi+0xb3c]
64011e6b:	call   0x64011c00
64011e70:	pop    edi
64011e71:	pop    ebp
64011e72:	pop    ebx
64011e73:	add    esp,0x8
64011e76:	ret    
64011e77:	int3   
64011e78:	int3   
64011e79:	int3   
64011e7a:	int3   
64011e7b:	int3   
64011e7c:	int3   
64011e7d:	int3   
64011e7e:	int3   
64011e7f:	int3   
64011e80:	push   esi
64011e81:	mov    esi,eax
64011e83:	mov    ecx,DWORD PTR [esi+0xb1c]
64011e89:	lea    eax,[esi+0x94]
64011e8f:	push   esi
64011e90:	call   0x64010d90
64011e95:	mov    ecx,DWORD PTR [esi+0xb28]
64011e9b:	lea    eax,[esi+0x988]
64011ea1:	push   esi
64011ea2:	call   0x64010d90
64011ea7:	lea    eax,[esi+0xb30]
64011ead:	push   eax
64011eae:	call   0x64011c80
64011eb3:	add    esp,0xc
64011eb6:	mov    eax,0x12
64011ebb:	jmp    0x64011ec0
64011ebd:	lea    ecx,[ecx+0x0]
64011ec0:	movzx  ecx,BYTE PTR [eax+0x6403d3ac]
64011ec7:	cmp    WORD PTR [esi+ecx*4+0xa7e],0x0
64011ed0:	jne    0x64011f3d
64011ed2:	movzx  edx,BYTE PTR [eax+0x6403d3ab]
64011ed9:	cmp    WORD PTR [esi+edx*4+0xa7e],0x0
64011ee2:	jne    0x64011f1c
64011ee4:	movzx  ecx,BYTE PTR [eax+0x6403d3aa]
64011eeb:	cmp    WORD PTR [esi+ecx*4+0xa7e],0x0
64011ef4:	jne    0x64011f2b
64011ef6:	movzx  edx,BYTE PTR [eax+0x6403d3a9]
64011efd:	cmp    WORD PTR [esi+edx*4+0xa7e],0x0
64011f06:	jne    0x64011f3a
64011f08:	sub    eax,0x4
64011f0b:	cmp    eax,0x3
64011f0e:	jge    0x64011ec0
64011f10:	lea    ecx,[eax+eax*2+0x11]
64011f14:	add    DWORD PTR [esi+0x16a8],ecx
64011f1a:	pop    esi
64011f1b:	ret    
64011f1c:	sub    eax,0x1
64011f1f:	lea    ecx,[eax+eax*2+0x11]
64011f23:	add    DWORD PTR [esi+0x16a8],ecx
64011f29:	pop    esi
64011f2a:	ret    
64011f2b:	sub    eax,0x2
64011f2e:	lea    ecx,[eax+eax*2+0x11]
64011f32:	add    DWORD PTR [esi+0x16a8],ecx
64011f38:	pop    esi
64011f39:	ret    
64011f3a:	sub    eax,0x3
64011f3d:	lea    ecx,[eax+eax*2+0x11]
64011f41:	add    DWORD PTR [esi+0x16a8],ecx
64011f47:	pop    esi
64011f48:	ret    
64011f49:	int3   
64011f4a:	int3   
64011f4b:	int3   
64011f4c:	int3   
64011f4d:	int3   
64011f4e:	int3   
64011f4f:	int3   
64011f50:	mov    eax,DWORD PTR [esp+0x4]
64011f54:	mov    ecx,DWORD PTR [eax+0x16bc]
64011f5a:	cmp    ecx,0xd
64011f5d:	jle    0x64011fc8
64011f5f:	push   ebx
64011f60:	push   esi
64011f61:	mov    esi,DWORD PTR [esp+0x18]
64011f65:	mov    edx,esi
64011f67:	shl    edx,cl
64011f69:	mov    ecx,DWORD PTR [eax+0x8]
64011f6c:	or     WORD PTR [eax+0x16b8],dx
64011f73:	movzx  ebx,BYTE PTR [eax+0x16b8]
64011f7a:	mov    edx,DWORD PTR [eax+0x14]
64011f7d:	mov    BYTE PTR [ecx+edx*1],bl
64011f80:	movzx  ebx,BYTE PTR [eax+0x16b9]
64011f87:	add    DWORD PTR [eax+0x14],0x1
64011f8b:	mov    ecx,DWORD PTR [eax+0x14]
64011f8e:	mov    edx,DWORD PTR [eax+0x8]
64011f91:	mov    BYTE PTR [ecx+edx*1],bl
64011f94:	mov    edx,DWORD PTR [eax+0x16bc]
64011f9a:	add    DWORD PTR [eax+0x14],0x1
64011f9e:	mov    cl,0x10
64011fa0:	sub    cl,dl
64011fa2:	shr    si,cl
64011fa5:	mov    ecx,DWORD PTR [esp+0x14]
64011fa9:	add    edx,0xfffffff3
64011fac:	mov    DWORD PTR [eax+0x16bc],edx
64011fb2:	mov    edx,DWORD PTR [esp+0x10]
64011fb6:	mov    WORD PTR [eax+0x16b8],si
64011fbd:	pop    esi
64011fbe:	pop    ebx
64011fbf:	push   0x1
64011fc1:	call   0x64011b70
64011fc6:	pop    ecx
64011fc7:	ret    
64011fc8:	mov    edx,DWORD PTR [esp+0x10]
64011fcc:	shl    edx,cl
64011fce:	add    ecx,0x3
64011fd1:	mov    DWORD PTR [eax+0x16bc],ecx
64011fd7:	mov    ecx,DWORD PTR [esp+0xc]
64011fdb:	or     WORD PTR [eax+0x16b8],dx
64011fe2:	mov    edx,DWORD PTR [esp+0x8]
64011fe6:	push   0x1
64011fe8:	call   0x64011b70
64011fed:	pop    ecx
64011fee:	ret    
64011fef:	int3   
64011ff0:	push   ecx
64011ff1:	push   ebx
64011ff2:	mov    ebx,DWORD PTR [esp+0x14]
64011ff6:	push   esi
64011ff7:	mov    esi,DWORD PTR [esp+0x10]
64011ffb:	cmp    DWORD PTR [esi+0x84],0x0
64012002:	push   edi
64012003:	mov    DWORD PTR [esp+0xc],0x0
6401200b:	jle    0x64012064
6401200d:	test   ebx,ebx
6401200f:	jbe    0x64012020
64012011:	mov    eax,DWORD PTR [esi]
64012013:	cmp    DWORD PTR [eax+0x2c],0x2
64012017:	jne    0x64012020
64012019:	mov    edx,esi
6401201b:	call   0x64011a00
64012020:	lea    ecx,[esi+0xb18]
64012026:	push   ecx
64012027:	call   0x64011c80
6401202c:	lea    edx,[esi+0xb24]
64012032:	push   edx
64012033:	call   0x64011c80
64012038:	add    esp,0x8
6401203b:	mov    eax,esi
6401203d:	call   0x64011e80
64012042:	mov    edx,DWORD PTR [esi+0x16a8]
64012048:	mov    ecx,DWORD PTR [esi+0x16ac]
6401204e:	add    edx,0xa
64012051:	add    ecx,0xa
64012054:	shr    edx,0x3
64012057:	shr    ecx,0x3
6401205a:	cmp    ecx,edx
6401205c:	mov    DWORD PTR [esp+0xc],eax
64012060:	ja     0x64012069
64012062:	jmp    0x64012067
64012064:	lea    ecx,[ebx+0x5]
64012067:	mov    edx,ecx
64012069:	lea    eax,[ebx+0x4]
6401206c:	cmp    eax,edx
6401206e:	ja     0x6401208d
64012070:	mov    eax,DWORD PTR [esp+0x18]
64012074:	test   eax,eax
64012076:	je     0x6401208d
64012078:	mov    edi,DWORD PTR [esp+0x20]
6401207c:	push   edi
6401207d:	push   ebx
6401207e:	push   eax
6401207f:	push   esi
64012080:	call   0x64011f50
64012085:	add    esp,0x10
64012088:	jmp    0x640121e2
6401208d:	cmp    DWORD PTR [esi+0x88],0x4
64012094:	je     0x64012158
6401209a:	cmp    ecx,edx
6401209c:	je     0x64012158
640120a2:	mov    ecx,DWORD PTR [esi+0x16bc]
640120a8:	cmp    ecx,0xd
640120ab:	mov    edi,DWORD PTR [esp+0x20]
640120af:	lea    edx,[edi+0x4]
640120b2:	jle    0x64012106
640120b4:	mov    eax,edx
640120b6:	shl    eax,cl
640120b8:	mov    ecx,DWORD PTR [esi+0x8]
640120bb:	or     WORD PTR [esi+0x16b8],ax
640120c2:	movzx  ebx,BYTE PTR [esi+0x16b8]
640120c9:	mov    eax,DWORD PTR [esi+0x14]
640120cc:	mov    BYTE PTR [ecx+eax*1],bl
640120cf:	add    DWORD PTR [esi+0x14],0x1
640120d3:	movzx  ebx,BYTE PTR [esi+0x16b9]
640120da:	mov    ecx,DWORD PTR [esi+0x14]
640120dd:	mov    eax,DWORD PTR [esi+0x8]
640120e0:	mov    BYTE PTR [ecx+eax*1],bl
640120e3:	mov    ebx,DWORD PTR [esi+0x16bc]
640120e9:	add    DWORD PTR [esi+0x14],0x1
640120ed:	mov    cl,0x10
640120ef:	sub    cl,bl
640120f1:	shr    dx,cl
640120f4:	add    ebx,0xfffffff3
640120f7:	mov    DWORD PTR [esi+0x16bc],ebx
640120fd:	mov    WORD PTR [esi+0x16b8],dx
64012104:	jmp    0x64012118
64012106:	shl    edx,cl
64012108:	or     WORD PTR [esi+0x16b8],dx
6401210f:	add    ecx,0x3
64012112:	mov    DWORD PTR [esi+0x16bc],ecx
64012118:	mov    eax,DWORD PTR [esp+0xc]
6401211c:	mov    ecx,DWORD PTR [esi+0xb28]
64012122:	mov    edx,DWORD PTR [esi+0xb1c]
64012128:	add    eax,0x1
6401212b:	push   eax
6401212c:	add    ecx,0x1
6401212f:	push   ecx
64012130:	add    edx,0x1
64012133:	push   edx
64012134:	mov    eax,esi
64012136:	call   0x64011390
6401213b:	lea    eax,[esi+0x988]
64012141:	push   eax
64012142:	lea    ecx,[esi+0x94]
64012148:	push   ecx
64012149:	mov    eax,esi
6401214b:	call   0x640115f0
64012150:	add    esp,0x14
64012153:	jmp    0x640121e2
64012158:	mov    ecx,DWORD PTR [esi+0x16bc]
6401215e:	cmp    ecx,0xd
64012161:	mov    edi,DWORD PTR [esp+0x20]
64012165:	lea    eax,[edi+0x2]
64012168:	jle    0x640121bc
6401216a:	mov    edx,eax
6401216c:	shl    edx,cl
6401216e:	mov    ecx,DWORD PTR [esi+0x8]
64012171:	or     WORD PTR [esi+0x16b8],dx
64012178:	movzx  ebx,BYTE PTR [esi+0x16b8]
6401217f:	mov    edx,DWORD PTR [esi+0x14]
64012182:	mov    BYTE PTR [ecx+edx*1],bl
64012185:	add    DWORD PTR [esi+0x14],0x1
64012189:	movzx  ebx,BYTE PTR [esi+0x16b9]
64012190:	mov    ecx,DWORD PTR [esi+0x14]
64012193:	mov    edx,DWORD PTR [esi+0x8]
64012196:	mov    BYTE PTR [ecx+edx*1],bl
64012199:	mov    edx,DWORD PTR [esi+0x16bc]
6401219f:	add    DWORD PTR [esi+0x14],0x1
640121a3:	mov    cl,0x10
640121a5:	sub    cl,dl
640121a7:	shr    ax,cl
640121aa:	add    edx,0xfffffff3
640121ad:	mov    DWORD PTR [esi+0x16bc],edx
640121b3:	mov    WORD PTR [esi+0x16b8],ax
640121ba:	jmp    0x640121ce
640121bc:	shl    eax,cl
640121be:	or     WORD PTR [esi+0x16b8],ax
640121c5:	add    ecx,0x3
640121c8:	mov    DWORD PTR [esi+0x16bc],ecx
640121ce:	push   0x6403d908
640121d3:	push   0x6403d488
640121d8:	mov    eax,esi
640121da:	call   0x640115f0
640121df:	add    esp,0x8
640121e2:	mov    edx,esi
640121e4:	call   0x64010a30
640121e9:	test   edi,edi
640121eb:	pop    edi
640121ec:	je     0x640121fa
640121ee:	mov    eax,esi
640121f0:	pop    esi
640121f1:	pop    ebx
640121f2:	add    esp,0x4
640121f5:	jmp    0x64011af0
640121fa:	pop    esi
640121fb:	pop    ebx
640121fc:	pop    ecx
640121fd:	ret    
640121fe:	int3   
640121ff:	int3   
64012200:	push   esi
64012201:	mov    esi,edx
64012203:	test   esi,esi
64012205:	not    eax
64012207:	je     0x64012232
64012209:	lea    esp,[esp+0x0]
64012210:	test   cl,0x3
64012213:	je     0x64012232
64012215:	movzx  edx,BYTE PTR [ecx]
64012218:	xor    edx,eax
6401221a:	and    edx,0xff
64012220:	shr    eax,0x8
64012223:	xor    eax,DWORD PTR [edx*4+0x6403dd70]
6401222a:	add    ecx,0x1
6401222d:	sub    esi,0x1
64012230:	jne    0x64012210
64012232:	cmp    esi,0x20
64012235:	push   ebx
64012236:	push   edi
64012237:	jb     0x6401241c
6401223d:	mov    edi,esi
6401223f:	shr    edi,0x5
64012242:	xor    eax,DWORD PTR [ecx]
64012244:	add    ecx,0x4
64012247:	mov    edx,eax
64012249:	shr    edx,0x10
6401224c:	movzx  ebx,ah
6401224f:	and    edx,0xff
64012255:	mov    edx,DWORD PTR [edx*4+0x6403e170]
6401225c:	xor    edx,DWORD PTR [ebx*4+0x6403e570]
64012263:	mov    ebx,eax
64012265:	and    eax,0xff
6401226a:	shr    ebx,0x18
6401226d:	xor    edx,DWORD PTR [ebx*4+0x6403dd70]
64012274:	add    ecx,0x4
64012277:	xor    edx,DWORD PTR [eax*4+0x6403e970]
6401227e:	add    ecx,0x4
64012281:	xor    edx,DWORD PTR [ecx-0x8]
64012284:	add    ecx,0x4
64012287:	mov    eax,edx
64012289:	shr    eax,0x10
6401228c:	and    eax,0xff
64012291:	mov    eax,DWORD PTR [eax*4+0x6403e170]
64012298:	movzx  ebx,dh
6401229b:	xor    eax,DWORD PTR [ebx*4+0x6403e570]
640122a2:	mov    ebx,edx
640122a4:	and    edx,0xff
640122aa:	shr    ebx,0x18
640122ad:	xor    eax,DWORD PTR [ebx*4+0x6403dd70]
640122b4:	add    ecx,0x4
640122b7:	xor    eax,DWORD PTR [edx*4+0x6403e970]
640122be:	add    ecx,0x4
640122c1:	xor    eax,DWORD PTR [ecx-0x10]
640122c4:	mov    edx,eax
640122c6:	shr    edx,0x10
640122c9:	movzx  ebx,ah
640122cc:	and    edx,0xff
640122d2:	mov    edx,DWORD PTR [edx*4+0x6403e170]
640122d9:	xor    edx,DWORD PTR [ebx*4+0x6403e570]
640122e0:	mov    ebx,eax
640122e2:	and    eax,0xff
640122e7:	shr    ebx,0x18
640122ea:	xor    edx,DWORD PTR [ebx*4+0x6403dd70]
640122f1:	xor    edx,DWORD PTR [eax*4+0x6403e970]
640122f8:	xor    edx,DWORD PTR [ecx-0xc]
640122fb:	mov    eax,edx
640122fd:	shr    eax,0x10
64012300:	and    eax,0xff
64012305:	mov    eax,DWORD PTR [eax*4+0x6403e170]
6401230c:	movzx  ebx,dh
6401230f:	xor    eax,DWORD PTR [ebx*4+0x6403e570]
64012316:	mov    ebx,edx
64012318:	and    edx,0xff
6401231e:	shr    ebx,0x18
64012321:	xor    eax,DWORD PTR [ebx*4+0x6403dd70]
64012328:	xor    eax,DWORD PTR [edx*4+0x6403e970]
6401232f:	xor    eax,DWORD PTR [ecx-0x8]
64012332:	mov    edx,eax
64012334:	shr    edx,0x10
64012337:	movzx  ebx,ah
6401233a:	and    edx,0xff
64012340:	mov    edx,DWORD PTR [edx*4+0x6403e170]
64012347:	xor    edx,DWORD PTR [ebx*4+0x6403e570]
6401234e:	mov    ebx,eax
64012350:	and    eax,0xff
64012355:	shr    ebx,0x18
64012358:	xor    edx,DWORD PTR [ebx*4+0x6403dd70]
6401235f:	xor    edx,DWORD PTR [eax*4+0x6403e970]
64012366:	xor    edx,DWORD PTR [ecx-0x4]
64012369:	mov    eax,edx
6401236b:	shr    eax,0x10
6401236e:	and    eax,0xff
64012373:	mov    eax,DWORD PTR [eax*4+0x6403e170]
6401237a:	movzx  ebx,dh
6401237d:	xor    eax,DWORD PTR [ebx*4+0x6403e570]
64012384:	mov    ebx,edx
64012386:	shr    ebx,0x18
64012389:	xor    eax,DWORD PTR [ebx*4+0x6403dd70]
64012390:	and    edx,0xff
64012396:	xor    eax,DWORD PTR [edx*4+0x6403e970]
6401239d:	xor    eax,DWORD PTR [ecx]
6401239f:	add    ecx,0x4
640123a2:	mov    edx,eax
640123a4:	shr    edx,0x10
640123a7:	movzx  ebx,ah
640123aa:	and    edx,0xff
640123b0:	mov    edx,DWORD PTR [edx*4+0x6403e170]
640123b7:	xor    edx,DWORD PTR [ebx*4+0x6403e570]
640123be:	mov    ebx,eax
640123c0:	and    eax,0xff
640123c5:	shr    ebx,0x18
640123c8:	xor    edx,DWORD PTR [ebx*4+0x6403dd70]
640123cf:	add    ecx,0x4
640123d2:	xor    edx,DWORD PTR [eax*4+0x6403e970]
640123d9:	sub    esi,0x20
640123dc:	xor    edx,DWORD PTR [ecx-0x4]
640123df:	mov    eax,edx
640123e1:	shr    eax,0x10
640123e4:	and    eax,0xff
640123e9:	mov    eax,DWORD PTR [eax*4+0x6403e170]
640123f0:	movzx  ebx,dh
640123f3:	xor    eax,DWORD PTR [ebx*4+0x6403e570]
640123fa:	mov    ebx,edx
640123fc:	shr    ebx,0x18
640123ff:	xor    eax,DWORD PTR [ebx*4+0x6403dd70]
64012406:	and    edx,0xff
6401240c:	xor    eax,DWORD PTR [edx*4+0x6403e970]
64012413:	sub    edi,0x1
64012416:	jne    0x64012242
6401241c:	cmp    esi,0x4
6401241f:	jb     0x64012469
64012421:	mov    edx,esi
64012423:	shr    edx,0x2
64012426:	xor    eax,DWORD PTR [ecx]
64012428:	add    ecx,0x4
6401242b:	mov    edi,eax
6401242d:	shr    edi,0x10
64012430:	and    edi,0xff
64012436:	mov    edi,DWORD PTR [edi*4+0x6403e170]
6401243d:	movzx  ebx,ah
64012440:	xor    edi,DWORD PTR [ebx*4+0x6403e570]
64012447:	mov    ebx,eax
64012449:	shr    ebx,0x18
6401244c:	xor    edi,DWORD PTR [ebx*4+0x6403dd70]
64012453:	and    eax,0xff
64012458:	xor    edi,DWORD PTR [eax*4+0x6403e970]
6401245f:	sub    esi,0x4
64012462:	sub    edx,0x1
64012465:	mov    eax,edi
64012467:	jne    0x64012426
64012469:	test   esi,esi
6401246b:	pop    edi
6401246c:	pop    ebx
6401246d:	je     0x6401248d
6401246f:	nop
64012470:	movzx  edx,BYTE PTR [ecx]
64012473:	xor    edx,eax
64012475:	and    edx,0xff
6401247b:	shr    eax,0x8
6401247e:	xor    eax,DWORD PTR [edx*4+0x6403dd70]
64012485:	add    ecx,0x1
64012488:	sub    esi,0x1
6401248b:	jne    0x64012470
6401248d:	not    eax
6401248f:	pop    esi
64012490:	ret    
64012491:	int3   
64012492:	int3   
64012493:	int3   
64012494:	int3   
64012495:	int3   
64012496:	int3   
64012497:	int3   
64012498:	int3   
64012499:	int3   
6401249a:	int3   
6401249b:	int3   
6401249c:	int3   
6401249d:	int3   
6401249e:	int3   
6401249f:	int3   
640124a0:	mov    ecx,DWORD PTR [esp+0x8]
640124a4:	test   ecx,ecx
640124a6:	jne    0x640124ab
640124a8:	xor    eax,eax
640124aa:	ret    
640124ab:	mov    edx,DWORD PTR [esp+0xc]
640124af:	mov    eax,DWORD PTR [esp+0x4]
640124b3:	jmp    0x64012200
640124b8:	int3   
640124b9:	int3   
640124ba:	int3   
640124bb:	int3   
640124bc:	int3   
640124bd:	int3   
640124be:	int3   
640124bf:	int3   
640124c0:	mov    eax,DWORD PTR [esp+0x8]
640124c4:	imul   eax,DWORD PTR [esp+0xc]
640124c9:	push   eax
640124ca:	call   0x6401485e
640124cf:	add    esp,0x4
640124d2:	ret    
640124d3:	int3   
640124d4:	int3   
640124d5:	int3   
640124d6:	int3   
640124d7:	int3   
640124d8:	int3   
640124d9:	int3   
640124da:	int3   
640124db:	int3   
640124dc:	int3   
640124dd:	int3   
640124de:	int3   
640124df:	int3   
640124e0:	mov    eax,DWORD PTR [esp+0x8]
640124e4:	push   eax
640124e5:	call   0x6401475f
640124ea:	pop    ecx
640124eb:	ret    
640124ec:	int3   
640124ed:	int3   
640124ee:	int3   
640124ef:	int3   
640124f0:	sub    esp,0x3c
640124f3:	push   ebx
640124f4:	push   ebp
640124f5:	push   esi
640124f6:	push   edi
640124f7:	mov    ecx,DWORD PTR [esp+0x50]
640124fb:	mov    eax,DWORD PTR [ecx+0x1c]
640124fe:	mov    edx,DWORD PTR [ecx+0x4]
64012501:	mov    ebx,DWORD PTR [eax+0x38]
64012504:	mov    ebp,DWORD PTR [ecx]
64012506:	sub    ebp,0x1
64012509:	lea    edx,[edx+ebp*1-0x5]
6401250d:	mov    DWORD PTR [esp+0x14],edx
64012511:	mov    esi,DWORD PTR [ecx+0xc]
64012514:	mov    ecx,DWORD PTR [ecx+0x10]
64012517:	mov    edx,ecx
64012519:	sub    edx,DWORD PTR [esp+0x54]
6401251d:	sub    esi,0x1
64012520:	add    edx,esi
64012522:	lea    ecx,[ecx+esi*1-0x101]
64012529:	mov    DWORD PTR [esp+0x38],edx
6401252d:	mov    edx,DWORD PTR [eax+0x28]
64012530:	mov    DWORD PTR [esp+0x2c],ecx
64012534:	mov    ecx,DWORD PTR [eax+0x2c]
64012537:	mov    DWORD PTR [esp+0x28],edx
6401253b:	mov    edx,DWORD PTR [eax+0x30]
6401253e:	mov    DWORD PTR [esp+0x3c],ecx
64012542:	mov    ecx,DWORD PTR [eax+0x34]
64012545:	mov    DWORD PTR [esp+0x44],edx
64012549:	mov    edx,DWORD PTR [eax+0x4c]
6401254c:	mov    DWORD PTR [esp+0x40],ecx
64012550:	mov    ecx,DWORD PTR [eax+0x50]
64012553:	mov    DWORD PTR [esp+0x20],edx
64012557:	mov    DWORD PTR [esp+0x24],ecx
6401255b:	mov    ecx,DWORD PTR [eax+0x54]
6401255e:	mov    edx,0x1
64012563:	shl    edx,cl
64012565:	mov    ecx,DWORD PTR [eax+0x58]
64012568:	mov    DWORD PTR [esp+0x18],eax
6401256c:	mov    edi,DWORD PTR [eax+0x3c]
6401256f:	mov    DWORD PTR [esp+0x54],0x1
64012577:	mov    eax,DWORD PTR [esp+0x54]
6401257b:	shl    eax,cl
6401257d:	sub    edx,0x1
64012580:	mov    DWORD PTR [esp+0x10],ebp
64012584:	mov    DWORD PTR [esp+0x48],edx
64012588:	sub    eax,0x1
6401258b:	mov    DWORD PTR [esp+0x30],eax
6401258f:	nop
64012590:	cmp    edi,0xf
64012593:	jae    0x640125b9
64012595:	movzx  eax,BYTE PTR [ebp+0x1]
64012599:	add    ebp,0x1
6401259c:	mov    ecx,edi
6401259e:	shl    eax,cl
640125a0:	add    ebp,0x1
640125a3:	add    edi,0x8
640125a6:	mov    ecx,edi
640125a8:	add    ebx,eax
640125aa:	movzx  eax,BYTE PTR [ebp+0x0]
640125ae:	shl    eax,cl
640125b0:	mov    DWORD PTR [esp+0x10],ebp
640125b4:	add    ebx,eax
640125b6:	add    edi,0x8
640125b9:	mov    ecx,DWORD PTR [esp+0x20]
640125bd:	and    edx,ebx
640125bf:	mov    eax,DWORD PTR [ecx+edx*4]
640125c2:	mov    edx,eax
640125c4:	shr    edx,0x8
640125c7:	movzx  ecx,dl
640125ca:	movzx  edx,al
640125cd:	shr    ebx,cl
640125cf:	sub    edi,ecx
640125d1:	test   edx,edx
640125d3:	je     0x64012618
640125d5:	test   dl,0x10
640125d8:	jne    0x64012625
640125da:	test   dl,0x40
640125dd:	jne    0x6401292a
640125e3:	mov    ecx,0x1
640125e8:	mov    DWORD PTR [esp+0x54],ecx
640125ec:	mov    ecx,edx
640125ee:	mov    edx,DWORD PTR [esp+0x54]
640125f2:	shl    edx,cl
640125f4:	shr    eax,0x10
640125f7:	sub    edx,0x1
640125fa:	and    edx,ebx
640125fc:	add    edx,eax
640125fe:	mov    eax,DWORD PTR [esp+0x20]
64012602:	mov    eax,DWORD PTR [eax+edx*4]
64012605:	mov    ecx,eax
64012607:	shr    ecx,0x8
6401260a:	movzx  ecx,cl
6401260d:	movzx  edx,al
64012610:	shr    ebx,cl
64012612:	sub    edi,ecx
64012614:	test   edx,edx
64012616:	jne    0x640125d5
64012618:	add    esi,0x1
6401261b:	shr    eax,0x10
6401261e:	mov    BYTE PTR [esi],al
64012620:	jmp    0x64012885
64012625:	shr    eax,0x10
64012628:	and    edx,0xf
6401262b:	mov    DWORD PTR [esp+0x54],eax
6401262f:	je     0x6401265f
64012631:	cmp    edi,edx
64012633:	jae    0x64012649
64012635:	movzx  eax,BYTE PTR [ebp+0x1]
64012639:	add    ebp,0x1
6401263c:	mov    ecx,edi
6401263e:	shl    eax,cl
64012640:	mov    DWORD PTR [esp+0x10],ebp
64012644:	add    ebx,eax
64012646:	add    edi,0x8
64012649:	mov    ecx,edx
6401264b:	mov    eax,0x1
64012650:	shl    eax,cl
64012652:	sub    eax,0x1
64012655:	and    eax,ebx
64012657:	add    DWORD PTR [esp+0x54],eax
6401265b:	shr    ebx,cl
6401265d:	sub    edi,edx
6401265f:	cmp    edi,0xf
64012662:	jae    0x64012688
64012664:	movzx  edx,BYTE PTR [ebp+0x1]
64012668:	add    ebp,0x1
6401266b:	movzx  eax,BYTE PTR [ebp+0x1]
6401266f:	mov    ecx,edi
64012671:	add    ebp,0x1
64012674:	shl    edx,cl
64012676:	add    edi,0x8
64012679:	mov    ecx,edi
6401267b:	shl    eax,cl
6401267d:	add    ebx,edx
6401267f:	mov    DWORD PTR [esp+0x10],ebp
64012683:	add    ebx,eax
64012685:	add    edi,0x8
64012688:	mov    ecx,DWORD PTR [esp+0x30]
6401268c:	mov    edx,DWORD PTR [esp+0x24]
64012690:	and    ecx,ebx
64012692:	mov    edx,DWORD PTR [edx+ecx*4]
64012695:	mov    eax,edx
64012697:	shr    eax,0x8
6401269a:	movzx  ecx,al
6401269d:	movzx  eax,dl
640126a0:	shr    ebx,cl
640126a2:	sub    edi,ecx
640126a4:	test   al,0x10
640126a6:	mov    DWORD PTR [esp+0x1c],edx
640126aa:	jne    0x640126eb
640126ac:	lea    esp,[esp+0x0]
640126b0:	test   al,0x40
640126b2:	jne    0x6401291d
640126b8:	mov    ecx,eax
640126ba:	movzx  eax,WORD PTR [esp+0x1e]
640126bf:	mov    edx,0x1
640126c4:	shl    edx,cl
640126c6:	mov    ecx,DWORD PTR [esp+0x24]
640126ca:	sub    edx,0x1
640126cd:	and    edx,ebx
640126cf:	add    edx,eax
640126d1:	mov    edx,DWORD PTR [ecx+edx*4]
640126d4:	mov    eax,edx
640126d6:	shr    eax,0x8
640126d9:	movzx  ecx,al
640126dc:	movzx  eax,dl
640126df:	shr    ebx,cl
640126e1:	sub    edi,ecx
640126e3:	test   al,0x10
640126e5:	mov    DWORD PTR [esp+0x1c],edx
640126e9:	je     0x640126b0
640126eb:	shr    edx,0x10
640126ee:	and    eax,0xf
640126f1:	cmp    edi,eax
640126f3:	mov    DWORD PTR [esp+0x1c],edx
640126f7:	jae    0x64012725
640126f9:	movzx  edx,BYTE PTR [ebp+0x1]
640126fd:	add    ebp,0x1
64012700:	mov    ecx,edi
64012702:	shl    edx,cl
64012704:	add    edi,0x8
64012707:	mov    DWORD PTR [esp+0x10],ebp
6401270b:	add    ebx,edx
6401270d:	cmp    edi,eax
6401270f:	jae    0x64012725
64012711:	movzx  edx,BYTE PTR [ebp+0x1]
64012715:	add    ebp,0x1
64012718:	mov    ecx,edi
6401271a:	shl    edx,cl
6401271c:	mov    DWORD PTR [esp+0x10],ebp
64012720:	add    ebx,edx
64012722:	add    edi,0x8
64012725:	mov    ecx,0x1
6401272a:	mov    edx,ecx
6401272c:	mov    ecx,eax
6401272e:	shl    edx,cl
64012730:	sub    edi,eax
64012732:	sub    edx,0x1
64012735:	and    edx,ebx
64012737:	mov    ecx,edx
64012739:	mov    edx,DWORD PTR [esp+0x1c]
6401273d:	add    edx,ecx
6401273f:	mov    ecx,eax
64012741:	mov    eax,esi
64012743:	sub    eax,DWORD PTR [esp+0x38]
64012747:	shr    ebx,cl
64012749:	cmp    edx,eax
6401274b:	mov    DWORD PTR [esp+0x1c],edx
6401274f:	jbe    0x640128a4
64012755:	mov    ebp,edx
64012757:	sub    ebp,eax
64012759:	cmp    ebp,DWORD PTR [esp+0x3c]
6401275d:	ja     0x64012902
64012763:	mov    ecx,DWORD PTR [esp+0x40]
64012767:	mov    eax,DWORD PTR [esp+0x44]
6401276b:	add    ecx,0xffffffff
6401276e:	test   eax,eax
64012770:	mov    DWORD PTR [esp+0x34],ecx
64012774:	jne    0x640127a2
64012776:	mov    eax,DWORD PTR [esp+0x28]
6401277a:	sub    eax,ebp
6401277c:	add    ecx,eax
6401277e:	cmp    ebp,DWORD PTR [esp+0x54]
64012782:	jae    0x6401281a
64012788:	sub    DWORD PTR [esp+0x54],ebp
6401278c:	lea    esp,[esp+0x0]
64012790:	mov    al,BYTE PTR [ecx+0x1]
64012793:	add    ecx,0x1
64012796:	add    esi,0x1
64012799:	sub    ebp,0x1
6401279c:	mov    BYTE PTR [esi],al
6401279e:	jne    0x64012790
640127a0:	jmp    0x64012816
640127a2:	cmp    eax,ebp
640127a4:	jae    0x640127f8
640127a6:	mov    edx,eax
640127a8:	sub    edx,ebp
640127aa:	add    edx,DWORD PTR [esp+0x28]
640127ae:	sub    ebp,eax
640127b0:	add    ecx,edx
640127b2:	cmp    ebp,DWORD PTR [esp+0x54]
640127b6:	jae    0x6401281a
640127b8:	sub    DWORD PTR [esp+0x54],ebp
640127bc:	lea    esp,[esp+0x0]
640127c0:	mov    dl,BYTE PTR [ecx+0x1]
640127c3:	add    ecx,0x1
640127c6:	add    esi,0x1
640127c9:	sub    ebp,0x1
640127cc:	mov    BYTE PTR [esi],dl
640127ce:	jne    0x640127c0
640127d0:	cmp    eax,DWORD PTR [esp+0x54]
640127d4:	mov    ecx,DWORD PTR [esp+0x34]
640127d8:	jae    0x6401281a
640127da:	sub    DWORD PTR [esp+0x54],eax
640127de:	mov    ebp,eax
640127e0:	mov    al,BYTE PTR [ecx+0x1]
640127e3:	add    ecx,0x1
640127e6:	add    esi,0x1
640127e9:	sub    ebp,0x1
640127ec:	mov    BYTE PTR [esi],al
640127ee:	jne    0x640127e0
640127f0:	mov    ecx,esi
640127f2:	sub    ecx,DWORD PTR [esp+0x1c]
640127f6:	jmp    0x6401281a
640127f8:	sub    eax,ebp
640127fa:	add    ecx,eax
640127fc:	cmp    ebp,DWORD PTR [esp+0x54]
64012800:	jae    0x6401281a
64012802:	sub    DWORD PTR [esp+0x54],ebp
64012806:	mov    al,BYTE PTR [ecx+0x1]
64012809:	add    ecx,0x1
6401280c:	add    esi,0x1
6401280f:	sub    ebp,0x1
64012812:	mov    BYTE PTR [esi],al
64012814:	jne    0x64012806
64012816:	mov    ecx,esi
64012818:	sub    ecx,edx
6401281a:	mov    eax,DWORD PTR [esp+0x54]
6401281e:	cmp    eax,0x2
64012821:	jbe    0x64012861
64012823:	lea    edx,[eax-0x3]
64012826:	mov    eax,0xaaaaaaab
6401282b:	mul    edx
6401282d:	mov    ebp,edx
6401282f:	shr    ebp,1
64012831:	add    ebp,0x1
64012834:	movzx  eax,BYTE PTR [ecx+0x1]
64012838:	sub    DWORD PTR [esp+0x54],0x3
6401283d:	add    ecx,0x1
64012840:	add    esi,0x1
64012843:	mov    BYTE PTR [esi],al
64012845:	mov    dl,BYTE PTR [ecx+0x1]
64012848:	add    ecx,0x1
6401284b:	add    esi,0x1
6401284e:	mov    BYTE PTR [esi],dl
64012850:	movzx  eax,BYTE PTR [ecx+0x1]
64012854:	add    ecx,0x1
64012857:	add    esi,0x1
6401285a:	sub    ebp,0x1
6401285d:	mov    BYTE PTR [esi],al
6401285f:	jne    0x64012834
64012861:	mov    ebp,DWORD PTR [esp+0x54]
64012865:	test   ebp,ebp
64012867:	je     0x64012881
64012869:	mov    dl,BYTE PTR [ecx+0x1]
6401286c:	add    ecx,0x1
6401286f:	add    esi,0x1
64012872:	cmp    ebp,0x1
64012875:	mov    BYTE PTR [esi],dl
64012877:	jbe    0x64012881
64012879:	mov    al,BYTE PTR [ecx+0x1]
6401287c:	add    esi,0x1
6401287f:	mov    BYTE PTR [esi],al
64012881:	mov    ebp,DWORD PTR [esp+0x10]
64012885:	mov    edx,DWORD PTR [esp+0x14]
64012889:	cmp    ebp,edx
6401288b:	jae    0x64012954
64012891:	cmp    esi,DWORD PTR [esp+0x2c]
64012895:	jae    0x64012954
6401289b:	mov    edx,DWORD PTR [esp+0x48]
6401289f:	jmp    0x64012590
640128a4:	mov    eax,esi
640128a6:	sub    eax,edx
640128a8:	jmp    0x640128b0
640128aa:	lea    ebx,[ebx+0x0]
640128b0:	movzx  ecx,BYTE PTR [eax+0x1]
640128b4:	add    eax,0x1
640128b7:	mov    BYTE PTR [esi+0x1],cl
640128ba:	mov    dl,BYTE PTR [eax+0x1]
640128bd:	add    esi,0x1
640128c0:	add    eax,0x1
640128c3:	add    esi,0x1
640128c6:	mov    BYTE PTR [esi],dl
640128c8:	movzx  ecx,BYTE PTR [eax+0x1]
640128cc:	add    eax,0x1
640128cf:	add    esi,0x1
640128d2:	mov    BYTE PTR [esi],cl
640128d4:	mov    ecx,DWORD PTR [esp+0x54]
640128d8:	sub    ecx,0x3
640128db:	cmp    ecx,0x2
640128de:	mov    DWORD PTR [esp+0x54],ecx
640128e2:	ja     0x640128b0
640128e4:	test   ecx,ecx
640128e6:	je     0x64012885
640128e8:	mov    dl,BYTE PTR [eax+0x1]
640128eb:	add    eax,0x1
640128ee:	add    esi,0x1
640128f1:	cmp    ecx,0x1
640128f4:	mov    BYTE PTR [esi],dl
640128f6:	jbe    0x64012885
640128f8:	mov    al,BYTE PTR [eax+0x1]
640128fb:	add    esi,0x1
640128fe:	mov    BYTE PTR [esi],al
64012900:	jmp    0x64012885
64012902:	mov    ecx,DWORD PTR [esp+0x50]
64012906:	mov    edx,DWORD PTR [esp+0x18]
6401290a:	mov    ebp,DWORD PTR [esp+0x10]
6401290e:	mov    DWORD PTR [ecx+0x18],0x6403d1a8
64012915:	mov    DWORD PTR [edx],0x1b
6401291b:	jmp    0x64012950
6401291d:	mov    eax,DWORD PTR [esp+0x50]
64012921:	mov    DWORD PTR [eax+0x18],0x6403d1c8
64012928:	jmp    0x64012946
6401292a:	test   dl,0x20
6401292d:	je     0x6401293b
6401292f:	mov    edx,DWORD PTR [esp+0x18]
64012933:	mov    DWORD PTR [edx],0xb
64012939:	jmp    0x64012950
6401293b:	mov    eax,DWORD PTR [esp+0x50]
6401293f:	mov    DWORD PTR [eax+0x18],0x6403d1e0
64012946:	mov    ecx,DWORD PTR [esp+0x18]
6401294a:	mov    DWORD PTR [ecx],0x1b
64012950:	mov    edx,DWORD PTR [esp+0x14]
64012954:	mov    eax,edi
64012956:	shr    eax,0x3
64012959:	sub    ebp,eax
6401295b:	add    eax,eax
6401295d:	add    eax,eax
6401295f:	add    eax,eax
64012961:	sub    edi,eax
64012963:	mov    ecx,edi
64012965:	mov    eax,0x1
6401296a:	shl    eax,cl
6401296c:	mov    ecx,DWORD PTR [esp+0x50]
64012970:	sub    edx,ebp
64012972:	add    edx,0x5
64012975:	sub    eax,0x1
64012978:	and    ebx,eax
6401297a:	lea    eax,[ebp+0x1]
6401297d:	mov    DWORD PTR [ecx],eax
6401297f:	lea    eax,[esi+0x1]
64012982:	mov    DWORD PTR [ecx+0xc],eax
64012985:	mov    eax,DWORD PTR [esp+0x2c]
64012989:	sub    eax,esi
6401298b:	add    eax,0x101
64012990:	mov    DWORD PTR [ecx+0x10],eax
64012993:	mov    eax,DWORD PTR [esp+0x18]
64012997:	mov    DWORD PTR [ecx+0x4],edx
6401299a:	mov    DWORD PTR [eax+0x3c],edi
6401299d:	pop    edi
6401299e:	pop    esi
6401299f:	pop    ebp
640129a0:	mov    DWORD PTR [eax+0x38],ebx
640129a3:	pop    ebx
640129a4:	add    esp,0x3c
640129a7:	ret    
640129a8:	int3   
640129a9:	int3   
640129aa:	int3   
640129ab:	int3   
640129ac:	int3   
640129ad:	int3   
640129ae:	int3   
640129af:	int3   
640129b0:	sub    esp,0x8c
640129b6:	mov    eax,ds:0x640521ac
640129bb:	xor    eax,esp
640129bd:	mov    DWORD PTR [esp+0x88],eax
640129c4:	mov    eax,DWORD PTR [esp+0xa4]
640129cb:	mov    edx,DWORD PTR [esp+0xa0]
640129d2:	push   ebx
640129d3:	mov    ebx,DWORD PTR [esp+0xa0]
640129da:	push   ebp
640129db:	mov    ebp,DWORD PTR [esp+0x9c]
640129e2:	push   esi
640129e3:	mov    esi,DWORD PTR [esp+0xa4]
640129ea:	mov    DWORD PTR [esp+0x18],eax
640129ee:	xor    eax,eax
640129f0:	test   esi,esi
640129f2:	mov    DWORD PTR [esp+0x50],ebp
640129f6:	mov    DWORD PTR [esp+0x38],ebx
640129fa:	mov    DWORD PTR [esp+0x48],edx
640129fe:	mov    DWORD PTR [esp+0x54],eax
64012a02:	mov    DWORD PTR [esp+0x58],eax
64012a06:	mov    DWORD PTR [esp+0x5c],eax
64012a0a:	mov    DWORD PTR [esp+0x60],eax
64012a0e:	mov    DWORD PTR [esp+0x64],eax
64012a12:	mov    DWORD PTR [esp+0x68],eax
64012a16:	mov    DWORD PTR [esp+0x6c],eax
64012a1a:	mov    DWORD PTR [esp+0x70],eax
64012a1e:	jbe    0x64012a36
64012a20:	movzx  ecx,WORD PTR [ebp+eax*2+0x0]
64012a25:	add    WORD PTR [esp+ecx*2+0x54],0x1
64012a2b:	lea    ecx,[esp+ecx*2+0x54]
64012a2f:	add    eax,0x1
64012a32:	cmp    eax,esi
64012a34:	jb     0x64012a20
64012a36:	mov    eax,DWORD PTR [edx]
64012a38:	mov    DWORD PTR [esp+0x10],eax
64012a3c:	mov    ecx,0xf
64012a41:	cmp    WORD PTR [esp+ecx*2+0x54],0x0
64012a47:	jne    0x64012a51
64012a49:	sub    ecx,0x1
64012a4c:	cmp    ecx,0x1
64012a4f:	jae    0x64012a41
64012a51:	cmp    eax,ecx
64012a53:	mov    DWORD PTR [esp+0x1c],ecx
64012a57:	jbe    0x64012a5f
64012a59:	mov    DWORD PTR [esp+0x10],ecx
64012a5d:	mov    eax,ecx
64012a5f:	test   ecx,ecx
64012a61:	jne    0x64012aa4
64012a63:	mov    WORD PTR [esp+0xe],cx
64012a68:	mov    ecx,DWORD PTR [ebx]
64012a6a:	mov    BYTE PTR [esp+0xc],0x40
64012a6f:	mov    BYTE PTR [esp+0xd],0x1
64012a74:	mov    eax,DWORD PTR [esp+0xc]
64012a78:	mov    DWORD PTR [ecx],eax
64012a7a:	add    DWORD PTR [ebx],0x4
64012a7d:	mov    ecx,DWORD PTR [ebx]
64012a7f:	pop    esi
64012a80:	mov    DWORD PTR [ecx],eax
64012a82:	add    DWORD PTR [ebx],0x4
64012a85:	pop    ebp
64012a86:	mov    DWORD PTR [edx],0x1
64012a8c:	xor    eax,eax
64012a8e:	pop    ebx
64012a8f:	mov    ecx,DWORD PTR [esp+0x88]
64012a96:	xor    ecx,esp
64012a98:	call   0x64013ca6
64012a9d:	add    esp,0x8c
64012aa3:	ret    
64012aa4:	mov    esi,0x1
64012aa9:	lea    esp,[esp+0x0]
64012ab0:	cmp    WORD PTR [esp+esi*2+0x54],0x0
64012ab6:	jne    0x64012af4
64012ab8:	cmp    WORD PTR [esp+esi*2+0x56],0x0
64012abe:	jne    0x64012ae2
64012ac0:	cmp    WORD PTR [esp+esi*2+0x58],0x0
64012ac6:	jne    0x64012ae7
64012ac8:	cmp    WORD PTR [esp+esi*2+0x5a],0x0
64012ace:	jne    0x64012aec
64012ad0:	cmp    WORD PTR [esp+esi*2+0x5c],0x0
64012ad6:	jne    0x64012af1
64012ad8:	add    esi,0x5
64012adb:	cmp    esi,0xf
64012ade:	jbe    0x64012ab0
64012ae0:	jmp    0x64012af4
64012ae2:	add    esi,0x1
64012ae5:	jmp    0x64012af4
64012ae7:	add    esi,0x2
64012aea:	jmp    0x64012af4
64012aec:	add    esi,0x3
64012aef:	jmp    0x64012af4
64012af1:	add    esi,0x4
64012af4:	cmp    eax,esi
64012af6:	jae    0x64012afc
64012af8:	mov    DWORD PTR [esp+0x10],esi
64012afc:	mov    edx,0x1
64012b01:	mov    eax,edx
64012b03:	push   edi
64012b04:	movzx  edi,WORD PTR [esp+eax*2+0x58]
64012b09:	add    edx,edx
64012b0b:	sub    edx,edi
64012b0d:	js     0x64012b2b
64012b0f:	add    eax,0x1
64012b12:	cmp    eax,0xf
64012b15:	jbe    0x64012b04
64012b17:	test   edx,edx
64012b19:	mov    edi,DWORD PTR [esp+0xa0]
64012b20:	jle    0x64012b33
64012b22:	test   edi,edi
64012b24:	je     0x64012b2b
64012b26:	cmp    ecx,0x1
64012b29:	je     0x64012b33
64012b2b:	or     eax,0xffffffff
64012b2e:	jmp    0x64012e85
64012b33:	mov    WORD PTR [esp+0x7a],0x0
64012b3a:	mov    eax,0x2
64012b3f:	nop
64012b40:	mov    cx,WORD PTR [esp+eax*1+0x78]
64012b45:	add    cx,WORD PTR [esp+eax*1+0x58]
64012b4a:	add    eax,0x2
64012b4d:	cmp    eax,0x1e
64012b50:	mov    WORD PTR [esp+eax*1+0x78],cx
64012b55:	jb     0x64012b40
64012b57:	mov    ecx,DWORD PTR [esp+0x1c]
64012b5b:	xor    eax,eax
64012b5d:	cmp    DWORD PTR [esp+0xa8],eax
64012b64:	jbe    0x64012b97
64012b66:	cmp    WORD PTR [ebp+eax*2+0x0],0x0
64012b6c:	je     0x64012b8b
64012b6e:	movzx  edx,WORD PTR [ebp+eax*2+0x0]
64012b73:	movzx  edx,WORD PTR [esp+edx*2+0x78]
64012b78:	mov    WORD PTR [ecx+edx*2],ax
64012b7c:	movzx  edx,WORD PTR [ebp+eax*2+0x0]
64012b81:	add    WORD PTR [esp+edx*2+0x78],0x1
64012b87:	lea    edx,[esp+edx*2+0x78]
64012b8b:	add    eax,0x1
64012b8e:	cmp    eax,DWORD PTR [esp+0xa8]
64012b95:	jb     0x64012b66
64012b97:	mov    eax,edi
64012b99:	sub    eax,0x0
64012b9c:	mov    edx,0xffffffff
64012ba1:	je     0x64012be4
64012ba3:	sub    eax,0x1
64012ba6:	je     0x64012bbe
64012ba8:	mov    DWORD PTR [esp+0x2c],0x6403fec8
64012bb0:	mov    DWORD PTR [esp+0x38],0x6403ff08
64012bb8:	mov    DWORD PTR [esp+0x30],edx
64012bbc:	jmp    0x64012bf4
64012bbe:	mov    eax,0x6403fe48
64012bc3:	sub    eax,0x202
64012bc8:	mov    DWORD PTR [esp+0x2c],eax
64012bcc:	mov    eax,0x6403fe88
64012bd1:	sub    eax,0x202
64012bd6:	mov    DWORD PTR [esp+0x38],eax
64012bda:	mov    DWORD PTR [esp+0x30],0x100
64012be2:	jmp    0x64012bf4
64012be4:	mov    DWORD PTR [esp+0x38],ecx
64012be8:	mov    DWORD PTR [esp+0x2c],ecx
64012bec:	mov    DWORD PTR [esp+0x30],0x13
64012bf4:	mov    eax,DWORD PTR [ebx]
64012bf6:	mov    ecx,DWORD PTR [esp+0x14]
64012bfa:	mov    DWORD PTR [esp+0x24],eax
64012bfe:	mov    eax,0x1
64012c03:	shl    eax,cl
64012c05:	xor    ebp,ebp
64012c07:	xor    ebx,ebx
64012c09:	cmp    edi,0x1
64012c0c:	lea    ecx,[eax-0x1]
64012c0f:	mov    DWORD PTR [esp+0x18],esi
64012c13:	mov    DWORD PTR [esp+0x34],edx
64012c17:	mov    DWORD PTR [esp+0x44],eax
64012c1b:	mov    DWORD PTR [esp+0x28],eax
64012c1f:	mov    DWORD PTR [esp+0x40],ecx
64012c23:	jne    0x64012c30
64012c25:	cmp    eax,0x5b0
64012c2a:	jae    0x64012e80
64012c30:	mov    edx,DWORD PTR [esp+0x1c]
64012c34:	mov    DWORD PTR [esp+0x1c],edx
64012c38:	jmp    0x64012c40
64012c3a:	lea    ebx,[ebx+0x0]
64012c40:	mov    al,BYTE PTR [esp+0x18]
64012c44:	mov    esi,DWORD PTR [esp+0x1c]
64012c48:	mov    edx,DWORD PTR [esp+0x30]
64012c4c:	sub    al,bl
64012c4e:	mov    BYTE PTR [esp+0x11],al
64012c52:	movzx  eax,WORD PTR [esi]
64012c55:	movzx  ecx,ax
64012c58:	cmp    ecx,edx
64012c5a:	jge    0x64012c68
64012c5c:	mov    BYTE PTR [esp+0x10],0x0
64012c61:	mov    WORD PTR [esp+0x12],ax
64012c66:	jmp    0x64012c95
64012c68:	jle    0x64012c89
64012c6a:	movzx  eax,WORD PTR [esi]
64012c6d:	mov    ecx,DWORD PTR [esp+0x38]
64012c71:	add    eax,eax
64012c73:	mov    dl,BYTE PTR [eax+ecx*1]
64012c76:	mov    ecx,DWORD PTR [esp+0x2c]
64012c7a:	mov    BYTE PTR [esp+0x10],dl
64012c7e:	mov    dx,WORD PTR [eax+ecx*1]
64012c82:	mov    WORD PTR [esp+0x12],dx
64012c87:	jmp    0x64012c95
64012c89:	mov    BYTE PTR [esp+0x10],0x60
64012c8e:	mov    WORD PTR [esp+0x12],0x0
64012c95:	mov    ecx,DWORD PTR [esp+0x18]
64012c99:	mov    eax,DWORD PTR [esp+0x44]
64012c9d:	sub    ecx,ebx
64012c9f:	mov    edx,0x1
64012ca4:	shl    edx,cl
64012ca6:	mov    ecx,ebx
64012ca8:	mov    edi,ebp
64012caa:	shr    edi,cl
64012cac:	mov    ecx,DWORD PTR [esp+0x24]
64012cb0:	mov    DWORD PTR [esp+0x50],eax
64012cb4:	lea    esi,[edx*4+0x0]
64012cbb:	add    edi,eax
64012cbd:	lea    ecx,[ecx+edi*4]
64012cc0:	mov    edi,DWORD PTR [esp+0x10]
64012cc4:	sub    eax,edx
64012cc6:	sub    ecx,esi
64012cc8:	test   eax,eax
64012cca:	mov    DWORD PTR [ecx],edi
64012ccc:	jne    0x64012cc4
64012cce:	mov    edx,DWORD PTR [esp+0x18]
64012cd2:	lea    ecx,[edx-0x1]
64012cd5:	mov    eax,0x1
64012cda:	shl    eax,cl
64012cdc:	test   ebp,eax
64012cde:	je     0x64012ce6
64012ce0:	shr    eax,1
64012ce2:	test   ebp,eax
64012ce4:	jne    0x64012ce0
64012ce6:	test   eax,eax
64012ce8:	je     0x64012cf5
64012cea:	lea    ecx,[eax-0x1]
64012ced:	and    ecx,ebp
64012cef:	add    ecx,eax
64012cf1:	mov    ebp,ecx
64012cf3:	jmp    0x64012cf7
64012cf5:	xor    ebp,ebp
64012cf7:	add    WORD PTR [esp+edx*2+0x58],0xffff
64012cfe:	movzx  eax,WORD PTR [esp+edx*2+0x58]
64012d03:	add    DWORD PTR [esp+0x1c],0x2
64012d08:	test   ax,ax
64012d0b:	jne    0x64012d2a
64012d0d:	cmp    edx,DWORD PTR [esp+0x20]
64012d11:	je     0x64012df3
64012d17:	mov    edx,DWORD PTR [esp+0x1c]
64012d1b:	movzx  eax,WORD PTR [edx]
64012d1e:	mov    ecx,DWORD PTR [esp+0x54]
64012d22:	movzx  edx,WORD PTR [ecx+eax*2]
64012d26:	mov    DWORD PTR [esp+0x18],edx
64012d2a:	cmp    edx,DWORD PTR [esp+0x14]
64012d2e:	jbe    0x64012c40
64012d34:	mov    esi,DWORD PTR [esp+0x40]
64012d38:	and    esi,ebp
64012d3a:	cmp    esi,DWORD PTR [esp+0x34]
64012d3e:	mov    DWORD PTR [esp+0x48],esi
64012d42:	je     0x64012c40
64012d48:	test   ebx,ebx
64012d4a:	jne    0x64012d50
64012d4c:	mov    ebx,DWORD PTR [esp+0x14]
64012d50:	mov    eax,DWORD PTR [esp+0x24]
64012d54:	mov    ecx,DWORD PTR [esp+0x50]
64012d58:	lea    edx,[eax+ecx*4]
64012d5b:	mov    ecx,DWORD PTR [esp+0x18]
64012d5f:	sub    ecx,ebx
64012d61:	mov    DWORD PTR [esp+0x24],edx
64012d65:	mov    eax,0x1
64012d6a:	lea    edx,[ebx+ecx*1]
64012d6d:	shl    eax,cl
64012d6f:	cmp    edx,DWORD PTR [esp+0x20]
64012d73:	jae    0x64012d9e
64012d75:	lea    esi,[esp+edx*2+0x58]
64012d79:	lea    esp,[esp+0x0]
64012d80:	movzx  edi,WORD PTR [esi]
64012d83:	sub    eax,edi
64012d85:	test   eax,eax
64012d87:	jle    0x64012d9a
64012d89:	add    edx,0x1
64012d8c:	add    ecx,0x1
64012d8f:	add    esi,0x2
64012d92:	add    eax,eax
64012d94:	cmp    edx,DWORD PTR [esp+0x20]
64012d98:	jb     0x64012d80
64012d9a:	mov    esi,DWORD PTR [esp+0x48]
64012d9e:	mov    eax,0x1
64012da3:	shl    eax,cl
64012da5:	add    DWORD PTR [esp+0x28],eax
64012da9:	cmp    DWORD PTR [esp+0xa0],0x1
64012db1:	mov    DWORD PTR [esp+0x44],eax
64012db5:	jne    0x64012dc5
64012db7:	cmp    DWORD PTR [esp+0x28],0x5b0
64012dbf:	jae    0x64012e80
64012dc5:	mov    edx,esi
64012dc7:	mov    esi,DWORD PTR [esp+0x3c]
64012dcb:	mov    eax,DWORD PTR [esi]
64012dcd:	mov    BYTE PTR [eax+edx*4],cl
64012dd0:	mov    ecx,DWORD PTR [esi]
64012dd2:	mov    al,BYTE PTR [esp+0x14]
64012dd6:	mov    BYTE PTR [ecx+edx*4+0x1],al
64012dda:	mov    eax,DWORD PTR [esi]
64012ddc:	mov    ecx,DWORD PTR [esp+0x24]
64012de0:	sub    ecx,eax
64012de2:	sar    ecx,0x2
64012de5:	mov    DWORD PTR [esp+0x34],edx
64012de9:	mov    WORD PTR [eax+edx*4+0x2],cx
64012dee:	jmp    0x64012c40
64012df3:	mov    edi,DWORD PTR [esp+0x3c]
64012df7:	mov    al,dl
64012df9:	sub    al,bl
64012dfb:	test   ebp,ebp
64012dfd:	mov    BYTE PTR [esp+0x10],0x40
64012e02:	mov    BYTE PTR [esp+0x11],al
64012e06:	mov    WORD PTR [esp+0x12],0x0
64012e0d:	je     0x64012e65
64012e0f:	mov    esi,DWORD PTR [esp+0x24]
64012e13:	test   ebx,ebx
64012e15:	je     0x64012e35
64012e17:	mov    ecx,DWORD PTR [esp+0x40]
64012e1b:	and    ecx,ebp
64012e1d:	cmp    ecx,DWORD PTR [esp+0x34]
64012e21:	je     0x64012e35
64012e23:	mov    eax,DWORD PTR [esp+0x14]
64012e27:	mov    esi,DWORD PTR [edi]
64012e29:	xor    ebx,ebx
64012e2b:	mov    DWORD PTR [esp+0x18],eax
64012e2f:	mov    BYTE PTR [esp+0x11],al
64012e33:	mov    edx,eax
64012e35:	mov    ecx,ebx
64012e37:	mov    eax,ebp
64012e39:	shr    eax,cl
64012e3b:	mov    ecx,DWORD PTR [esp+0x10]
64012e3f:	mov    DWORD PTR [esi+eax*4],ecx
64012e42:	lea    ecx,[edx-0x1]
64012e45:	mov    eax,0x1
64012e4a:	shl    eax,cl
64012e4c:	test   ebp,eax
64012e4e:	je     0x64012e56
64012e50:	shr    eax,1
64012e52:	test   ebp,eax
64012e54:	jne    0x64012e50
64012e56:	test   eax,eax
64012e58:	je     0x64012e65
64012e5a:	lea    ecx,[eax-0x1]
64012e5d:	and    ecx,ebp
64012e5f:	add    ecx,eax
64012e61:	mov    ebp,ecx
64012e63:	jne    0x64012e13
64012e65:	mov    edx,DWORD PTR [esp+0x28]
64012e69:	mov    ecx,DWORD PTR [esp+0x4c]
64012e6d:	lea    eax,[edx*4+0x0]
64012e74:	add    DWORD PTR [edi],eax
64012e76:	mov    edx,DWORD PTR [esp+0x14]
64012e7a:	mov    DWORD PTR [ecx],edx
64012e7c:	xor    eax,eax
64012e7e:	jmp    0x64012e85
64012e80:	mov    eax,0x1
64012e85:	mov    ecx,DWORD PTR [esp+0x98]
64012e8c:	pop    edi
64012e8d:	pop    esi
64012e8e:	pop    ebp
64012e8f:	pop    ebx
64012e90:	xor    ecx,esp
64012e92:	call   0x64013ca6
64012e97:	add    esp,0x8c
64012e9d:	ret    
64012e9e:	jmp    DWORD PTR ds:0x6402c080
64012ea4:	jmp    DWORD PTR ds:0x6402c084
64012eaa:	jmp    DWORD PTR ds:0x6402c088
64012eb0:	jmp    DWORD PTR ds:0x6402c0e0
64012eb6:	jmp    DWORD PTR ds:0x6402c0e8
64012ebc:	push   0x44
64012ebe:	mov    eax,0x64022eb5
64012ec3:	call   0x64015b2b
64012ec8:	push   0x6403ff48
64012ecd:	lea    ecx,[ebp-0x28]
64012ed0:	call   0x64002970
64012ed5:	and    DWORD PTR [ebp-0x4],0x0
64012ed9:	lea    eax,[ebp-0x28]
64012edc:	push   eax
64012edd:	lea    ecx,[ebp-0x50]
64012ee0:	call   0x64001350
64012ee5:	push   0x64044104
64012eea:	lea    eax,[ebp-0x50]
64012eed:	push   eax
64012eee:	mov    DWORD PTR [ebp-0x50],0x6402c2e8
64012ef5:	call   0x64013812
64012efa:	int3   
64012efb:	push   0x44
64012efd:	mov    eax,0x64022ed8
64012f02:	call   0x64015b2b
64012f07:	push   0x6403ff58
64012f0c:	lea    ecx,[ebp-0x28]
64012f0f:	call   0x64002970
64012f14:	and    DWORD PTR [ebp-0x4],0x0
64012f18:	lea    eax,[ebp-0x28]
64012f1b:	push   eax
64012f1c:	lea    ecx,[ebp-0x50]
64012f1f:	call   0x64001350
64012f24:	push   0x640440c8
64012f29:	lea    eax,[ebp-0x50]
64012f2c:	push   eax
64012f2d:	mov    DWORD PTR [ebp-0x50],0x6402c2f4
64012f34:	call   0x64013812
64012f39:	int3   
64012f3a:	jmp    0x64013875
64012f3f:	push   edi
64012f40:	push   0x6405211c
64012f45:	mov    edi,ecx
64012f47:	call   DWORD PTR ds:0x6402c030
64012f4d:	test   eax,eax
64012f4f:	jne    0x64012f6a
64012f51:	push   esi
64012f52:	mov    esi,0x640538a0
64012f57:	push   esi
64012f58:	call   0x64012fef
64012f5d:	add    esi,0x18
64012f60:	cmp    esi,0x64053900
64012f66:	pop    ecx
64012f67:	jl     0x64012f57
64012f69:	pop    esi
64012f6a:	mov    eax,edi
64012f6c:	pop    edi
64012f6d:	ret    
64012f6e:	push   0x6405211c
64012f73:	call   DWORD PTR ds:0x6402c07c
64012f79:	test   eax,eax
64012f7b:	jge    0x64012f96
64012f7d:	push   esi
64012f7e:	mov    esi,0x640538a0
64012f83:	push   esi
64012f84:	call   0x64012ffa
64012f89:	add    esi,0x18
64012f8c:	cmp    esi,0x64053900
64012f92:	pop    ecx
64012f93:	jl     0x64012f83
64012f95:	pop    esi
64012f96:	ret    
64012f97:	mov    eax,DWORD PTR [esp+0x4]
64012f9b:	and    eax,0x3
64012f9e:	push   esi
64012f9f:	mov    esi,ecx
64012fa1:	mov    DWORD PTR [esi],eax
64012fa3:	imul   eax,eax,0x18
64012fa6:	add    eax,0x640538a0
64012fab:	push   eax
64012fac:	call   0x64013005
64012fb1:	pop    ecx
64012fb2:	mov    eax,esi
64012fb4:	pop    esi
64012fb5:	ret    0x4
64012fb8:	mov    eax,DWORD PTR [ecx]
64012fba:	imul   eax,eax,0x18
64012fbd:	add    eax,0x640538a0
64012fc2:	push   eax
64012fc3:	call   0x64013010
64012fc8:	pop    ecx
64012fc9:	ret    
64012fca:	jmp    0x64012fe4
64012fcc:	mov    ecx,DWORD PTR [eax*4+0x64053924]
64012fd3:	inc    eax
64012fd4:	test   ecx,ecx
64012fd6:	mov    ds:0x64052124,eax
64012fdb:	je     0x64012fe9
64012fdd:	call   DWORD PTR [eax*4+0x64053920]
64012fe4:	mov    eax,ds:0x64052124
64012fe9:	cmp    eax,0xa
64012fec:	jb     0x64012fcc
64012fee:	ret    
64012fef:	push   DWORD PTR [esp+0x4]
64012ff3:	call   DWORD PTR ds:0x6402c16c
64012ff9:	ret    
64012ffa:	push   DWORD PTR [esp+0x4]
64012ffe:	call   DWORD PTR ds:0x6402c170
64013004:	ret    
64013005:	push   DWORD PTR [esp+0x4]
64013009:	call   DWORD PTR ds:0x6402c174
6401300f:	ret    
64013010:	push   DWORD PTR [esp+0x4]
64013014:	call   DWORD PTR ds:0x6402c178
6401301a:	ret    
6401301b:	push   ebp
6401301c:	mov    ebp,esp
6401301e:	sub    esp,0xc
64013021:	mov    eax,ds:0x640521ac
64013026:	xor    eax,ebp
64013028:	mov    DWORD PTR [ebp-0x4],eax
6401302b:	push   esi
6401302c:	xor    esi,esi
6401302e:	call   DWORD PTR ds:0x6402c184
64013034:	push   0x7
64013036:	lea    ecx,[ebp-0xc]
64013039:	push   ecx
6401303a:	push   0x1004
6401303f:	push   eax
64013040:	call   DWORD PTR ds:0x6402c180
64013046:	test   eax,eax
64013048:	je     0x64013069
6401304a:	mov    cl,BYTE PTR [ebp-0xc]
6401304d:	test   cl,cl
6401304f:	lea    eax,[ebp-0xc]
64013052:	je     0x64013069
64013054:	imul   esi,esi,0xa
64013057:	movsx  ecx,cl
6401305a:	inc    eax
6401305b:	lea    esi,[esi+ecx*1-0x30]
6401305f:	mov    cl,BYTE PTR [eax]
64013061:	test   cl,cl
64013063:	jne    0x64013054
64013065:	test   esi,esi
64013067:	jne    0x64013071
64013069:	call   DWORD PTR ds:0x6402c17c
6401306f:	mov    esi,eax
64013071:	mov    ecx,DWORD PTR [ebp-0x4]
64013074:	mov    eax,esi
64013076:	xor    ecx,ebp
64013078:	pop    esi
64013079:	call   0x64013ca6
6401307e:	leave  
6401307f:	ret    
64013080:	push   0x3
64013082:	pop    eax
64013083:	ret    
64013084:	push   ebp
64013085:	mov    ebp,esp
64013087:	sub    esp,0x98
6401308d:	mov    eax,ds:0x640521ac
64013092:	xor    eax,ebp
64013094:	mov    DWORD PTR [ebp-0x4],eax
64013097:	lea    eax,[ebp-0x98]
6401309d:	push   eax
6401309e:	mov    DWORD PTR [ebp-0x98],0x94
640130a8:	call   DWORD PTR ds:0x6402c188
640130ae:	cmp    DWORD PTR [ebp-0x88],0x2
640130b5:	jne    0x640130c5
640130b7:	cmp    DWORD PTR [ebp-0x94],0x5
640130be:	mov    eax,0x64013080
640130c3:	jae    0x640130ca
640130c5:	mov    eax,0x6401301b
640130ca:	push   eax
640130cb:	push   0x64052184
640130d0:	call   DWORD PTR ds:0x6402c10c
640130d6:	call   DWORD PTR ds:0x64052184
640130dc:	mov    ecx,DWORD PTR [ebp-0x4]
640130df:	xor    ecx,ebp
640130e1:	call   0x64013ca6
640130e6:	leave  
640130e7:	ret    
640130e8:	push   esi
640130e9:	mov    esi,ecx
640130eb:	mov    eax,DWORD PTR [esi]
640130ed:	test   eax,eax
640130ef:	je     0x640130fb
640130f1:	push   eax
640130f2:	call   0x6401475f
640130f7:	and    DWORD PTR [esi],0x0
640130fa:	pop    ecx
640130fb:	and    DWORD PTR [esi+0x4],0x0
640130ff:	and    DWORD PTR [esi+0x8],0x0
64013103:	pop    esi
64013104:	ret    
64013105:	push   esi
64013106:	push   0x18
64013108:	mov    esi,ecx
6401310a:	push   0x0
6401310c:	push   esi
6401310d:	call   0x64015100
64013112:	add    esp,0xc
64013115:	mov    eax,esi
64013117:	pop    esi
64013118:	ret    
64013119:	push   0xc
6401311b:	push   0x64043a78
64013120:	call   0x64016464
64013125:	and    DWORD PTR [ebp-0x4],0x0
64013129:	push   ecx
6401312a:	call   DWORD PTR ds:0x6402c16c
64013130:	and    DWORD PTR [ebp-0x1c],0x0
64013134:	jmp    0x64013154
64013136:	mov    eax,DWORD PTR [ebp-0x14]
64013139:	mov    eax,DWORD PTR [eax]
6401313b:	mov    eax,DWORD PTR [eax]
6401313d:	xor    ecx,ecx
6401313f:	cmp    eax,0xc0000017
64013144:	sete   cl
64013147:	mov    eax,ecx
64013149:	ret    
6401314a:	mov    esp,DWORD PTR [ebp-0x18]
6401314d:	mov    DWORD PTR [ebp-0x1c],0x8007000e
64013154:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401315b:	mov    eax,DWORD PTR [ebp-0x1c]
6401315e:	call   0x640164a9
64013163:	ret    
64013164:	mov    eax,DWORD PTR [esp+0x4]
64013168:	test   eax,eax
6401316a:	jne    0x64013173
6401316c:	mov    eax,0x80070057
64013171:	jmp    0x64013184
64013173:	cmp    DWORD PTR [eax],0x2c
64013176:	jne    0x6401316c
64013178:	and    DWORD PTR [eax+0x1c],0x0
6401317c:	lea    ecx,[eax+0x4]
6401317f:	call   0x64013119
64013184:	ret    0x4
64013187:	mov    eax,DWORD PTR [esp+0x4]
6401318b:	test   eax,eax
6401318d:	jl     0x6401319c
6401318f:	cmp    eax,DWORD PTR [ecx+0x4]
64013192:	jge    0x6401319c
64013194:	mov    ecx,DWORD PTR [ecx]
64013196:	lea    eax,[ecx+eax*2]
64013199:	ret    0x4
6401319c:	push   0x0
6401319e:	push   0x0
640131a0:	push   0x1
640131a2:	push   0xc000008c
640131a7:	call   DWORD PTR ds:0x6402c18c
640131ad:	int3   
640131ae:	mov    eax,DWORD PTR [esp+0x4]
640131b2:	test   eax,eax
640131b4:	jl     0x640131c3
640131b6:	cmp    eax,DWORD PTR [ecx+0x4]
640131b9:	jge    0x640131c3
640131bb:	mov    ecx,DWORD PTR [ecx]
640131bd:	lea    eax,[ecx+eax*4]
640131c0:	ret    0x4
640131c3:	push   0x0
640131c5:	push   0x0
640131c7:	push   0x1
640131c9:	push   0xc000008c
640131ce:	call   DWORD PTR ds:0x6402c18c
640131d4:	int3   
640131d5:	push   esi
640131d6:	mov    esi,ecx
640131d8:	lea    ecx,[esi+0x4]
640131db:	call   0x64013105
640131e0:	xor    eax,eax
640131e2:	mov    DWORD PTR [esi+0x20],eax
640131e5:	mov    DWORD PTR [esi+0x24],eax
640131e8:	mov    DWORD PTR [esi+0x28],eax
640131eb:	mov    eax,esi
640131ed:	pop    esi
640131ee:	ret    
640131ef:	push   esi
640131f0:	mov    esi,DWORD PTR [esp+0x8]
640131f4:	test   esi,esi
640131f6:	jne    0x640131ff
640131f8:	mov    eax,0x80070057
640131fd:	jmp    0x6401324b
640131ff:	mov    eax,DWORD PTR [esi]
64013201:	test   eax,eax
64013203:	je     0x64013249
64013205:	cmp    eax,0x2c
64013208:	jne    0x640131f8
6401320a:	push   edi
6401320b:	xor    edi,edi
6401320d:	cmp    DWORD PTR [esi+0x24],edi
64013210:	jle    0x64013233
64013212:	push   ebx
64013213:	lea    ebx,[esi+0x20]
64013216:	push   edi
64013217:	mov    ecx,ebx
64013219:	call   0x64013187
6401321e:	movzx  eax,WORD PTR [eax]
64013221:	push   DWORD PTR [esp+0x14]
64013225:	push   eax
64013226:	call   DWORD PTR ds:0x6402c1e4
6401322c:	inc    edi
6401322d:	cmp    edi,DWORD PTR [esi+0x24]
64013230:	jl     0x64013216
64013232:	pop    ebx
64013233:	lea    ecx,[esi+0x20]
64013236:	call   0x640130e8
6401323b:	lea    eax,[esi+0x4]
6401323e:	push   eax
6401323f:	call   DWORD PTR ds:0x6402c170
64013245:	and    DWORD PTR [esi],0x0
64013248:	pop    edi
64013249:	xor    eax,eax
6401324b:	pop    esi
6401324c:	ret    0x8
6401324f:	push   esi
64013250:	mov    esi,ecx
64013252:	cmp    BYTE PTR [esi+0x4],0x0
64013256:	je     0x64013264
64013258:	push   DWORD PTR [esi]
6401325a:	call   DWORD PTR ds:0x6402c178
64013260:	mov    BYTE PTR [esi+0x4],0x0
64013264:	pop    esi
64013265:	ret    
64013266:	push   esi
64013267:	mov    esi,ecx
64013269:	lea    ecx,[esi+0x18]
6401326c:	call   0x64013105
64013271:	xor    eax,eax
64013273:	mov    DWORD PTR [esi+0x30],eax
64013276:	mov    DWORD PTR [esi+0x34],eax
64013279:	mov    DWORD PTR [esi+0x38],eax
6401327c:	mov    eax,esi
6401327e:	pop    esi
6401327f:	ret    
64013280:	push   esi
64013281:	mov    esi,ecx
64013283:	lea    eax,[esi+0x18]
64013286:	push   eax
64013287:	call   DWORD PTR ds:0x6402c170
6401328d:	lea    ecx,[esi+0x30]
64013290:	pop    esi
64013291:	jmp    0x640130e8
64013296:	push   ebp
64013297:	mov    ebp,esp
64013299:	push   ecx
6401329a:	push   ecx
6401329b:	push   esi
6401329c:	mov    esi,ecx
6401329e:	lea    eax,[esi+0x18]
640132a1:	push   eax
640132a2:	mov    DWORD PTR [ebp-0x8],eax
640132a5:	call   DWORD PTR ds:0x6402c174
640132ab:	mov    eax,DWORD PTR [esi+0x34]
640132ae:	mov    ecx,DWORD PTR [ebp+0x8]
640132b1:	cmp    ecx,eax
640132b3:	mov    BYTE PTR [ebp-0x4],0x1
640132b7:	jg     0x640132dd
640132b9:	test   ecx,ecx
640132bb:	jl     0x640132dd
640132bd:	cmp    ecx,eax
640132bf:	jne    0x640132d0
640132c1:	mov    esi,DWORD PTR [esi+0x8]
640132c4:	lea    ecx,[ebp-0x8]
640132c7:	call   0x6401324f
640132cc:	mov    eax,esi
640132ce:	jmp    0x640132e7
640132d0:	push   ecx
640132d1:	lea    ecx,[esi+0x30]
640132d4:	call   0x640131ae
640132d9:	mov    esi,DWORD PTR [eax]
640132db:	jmp    0x640132c4
640132dd:	lea    ecx,[ebp-0x8]
640132e0:	call   0x6401324f
640132e5:	xor    eax,eax
640132e7:	pop    esi
640132e8:	leave  
640132e9:	ret    0x4
640132ec:	push   esi
640132ed:	mov    esi,ecx
640132ef:	call   0x640131d5
640132f4:	push   esi
640132f5:	mov    DWORD PTR [esi],0x2c
640132fb:	call   0x64013164
64013300:	test   eax,eax
64013302:	jge    0x6401330e
64013304:	mov    BYTE PTR ds:0x640544f0,0x1
6401330b:	and    DWORD PTR [esi],0x0
6401330e:	mov    eax,esi
64013310:	pop    esi
64013311:	ret    
64013312:	push   ebp
64013313:	lea    ebp,[esp-0x78]
64013317:	sub    esp,0x98
6401331d:	mov    eax,ds:0x640521ac
64013322:	xor    eax,ebp
64013324:	mov    DWORD PTR [ebp+0x74],eax
64013327:	push   esi
64013328:	mov    esi,ecx
6401332a:	call   0x64013266
6401332f:	mov    eax,0x64000000
64013334:	push   0x94
64013339:	mov    DWORD PTR [esi+0x8],eax
6401333c:	mov    DWORD PTR [esi+0x4],eax
6401333f:	lea    eax,[ebp-0x20]
64013342:	push   0x0
64013344:	push   eax
64013345:	mov    DWORD PTR [esi],0x3c
6401334b:	mov    BYTE PTR [esi+0xc],0x0
6401334f:	call   0x64015100
64013354:	add    esp,0xc
64013357:	lea    eax,[ebp-0x20]
6401335a:	push   eax
6401335b:	mov    DWORD PTR [ebp-0x20],0x94
64013362:	call   DWORD PTR ds:0x6402c188
64013368:	cmp    DWORD PTR [ebp-0x10],0x2
6401336c:	jne    0x64013376
6401336e:	cmp    DWORD PTR [ebp-0x1c],0x5
64013372:	jb     0x6401338e
64013374:	jmp    0x6401338a
64013376:	cmp    DWORD PTR [ebp-0x10],0x1
6401337a:	jne    0x6401338e
6401337c:	cmp    DWORD PTR [ebp-0x1c],0x4
64013380:	ja     0x6401338a
64013382:	jne    0x6401338e
64013384:	cmp    DWORD PTR [ebp-0x18],0x0
64013388:	jbe    0x6401338e
6401338a:	mov    BYTE PTR [esi+0xc],0x1
6401338e:	lea    ecx,[esi+0x18]
64013391:	mov    DWORD PTR [esi+0x10],0x800
64013398:	mov    DWORD PTR [esi+0x14],0x6403ff88
6401339f:	call   0x64013119
640133a4:	test   eax,eax
640133a6:	jge    0x640133af
640133a8:	mov    BYTE PTR ds:0x640544f0,0x1
640133af:	mov    ecx,DWORD PTR [ebp+0x74]
640133b2:	mov    eax,esi
640133b4:	xor    ecx,ebp
640133b6:	pop    esi
640133b7:	call   0x64013ca6
640133bc:	add    ebp,0x78
640133bf:	leave  
640133c0:	ret    
640133c1:	push   esi
640133c2:	push   DWORD PTR ds:0x64053954
640133c8:	mov    esi,ecx
640133ca:	push   esi
640133cb:	call   0x640131ef
640133d0:	lea    ecx,[esi+0x20]
640133d3:	pop    esi
640133d4:	jmp    0x640130e8
640133d9:	cmp    BYTE PTR [ecx+0x8],0x0
640133dd:	mov    DWORD PTR [ecx],0x6403ff98
640133e3:	je     0x640133f3
640133e5:	mov    ecx,DWORD PTR [ecx+0x4]
640133e8:	test   ecx,ecx
640133ea:	je     0x640133f3
640133ec:	push   ecx
640133ed:	call   DWORD PTR ds:0x6402c190
640133f3:	ret    
640133f4:	push   DWORD PTR [esp+0x4]
640133f8:	push   0x0
640133fa:	push   DWORD PTR [ecx+0x4]
640133fd:	call   DWORD PTR ds:0x6402c194
64013403:	ret    0x4
64013406:	cmp    DWORD PTR [esp+0x4],0x0
6401340b:	je     0x6401341c
6401340d:	push   DWORD PTR [esp+0x4]
64013411:	push   0x0
64013413:	push   DWORD PTR [ecx+0x4]
64013416:	call   DWORD PTR ds:0x6402c198
6401341c:	ret    0x4
6401341f:	push   ebp
64013420:	mov    ebp,esp
64013422:	xor    eax,eax
64013424:	cmp    DWORD PTR [ebp+0x8],eax
64013427:	jne    0x64013432
64013429:	push   DWORD PTR [ebp+0xc]
6401342c:	mov    eax,DWORD PTR [ecx]
6401342e:	call   DWORD PTR [eax]
64013430:	jmp    0x64013453
64013432:	cmp    DWORD PTR [ebp+0xc],eax
64013435:	jne    0x64013443
64013437:	push   DWORD PTR [ebp+0x8]
6401343a:	mov    eax,DWORD PTR [ecx]
6401343c:	call   DWORD PTR [eax+0x4]
6401343f:	xor    eax,eax
64013441:	jmp    0x64013453
64013443:	push   DWORD PTR [ebp+0xc]
64013446:	push   DWORD PTR [ebp+0x8]
64013449:	push   eax
6401344a:	push   DWORD PTR [ecx+0x4]
6401344d:	call   DWORD PTR ds:0x6402c19c
64013453:	pop    ebp
64013454:	ret    0x8
64013457:	push   DWORD PTR [esp+0x4]
6401345b:	push   0x0
6401345d:	push   DWORD PTR [ecx+0x4]
64013460:	call   DWORD PTR ds:0x6402c1a0
64013466:	ret    0x4
64013469:	push   esi
6401346a:	mov    esi,ecx
6401346c:	call   0x640133d9
64013471:	test   BYTE PTR [esp+0x8],0x1
64013476:	je     0x6401347f
64013478:	push   esi
64013479:	call   0x640135e4
6401347e:	pop    ecx
6401347f:	mov    eax,esi
64013481:	pop    esi
64013482:	ret    0x4
64013485:	mov    eax,ecx
64013487:	mov    ecx,DWORD PTR [esp+0x4]
6401348b:	mov    DWORD PTR [eax+0x4],ecx
6401348e:	mov    DWORD PTR [eax],0x6403ffac
64013494:	xor    ecx,ecx
64013496:	mov    DWORD PTR [eax+0x14],0x2
6401349d:	mov    DWORD PTR [eax+0xc],ecx
640134a0:	mov    DWORD PTR [eax+0x10],ecx
640134a3:	mov    WORD PTR [eax+0x18],cx
640134a7:	mov    WORD PTR [eax+0x1a],cx
640134ab:	mov    DWORD PTR [eax+0x8],eax
640134ae:	ret    0x4
640134b1:	mov    eax,DWORD PTR [esp+0x8]
640134b5:	mul    DWORD PTR [esp+0xc]
640134b9:	test   edx,edx
640134bb:	ja     0x640134c2
640134bd:	cmp    eax,0xffffffff
640134c0:	jbe    0x640134c8
640134c2:	mov    eax,0x80070057
640134c7:	ret    
640134c8:	mov    ecx,DWORD PTR [esp+0x4]
640134cc:	mov    DWORD PTR [ecx],eax
640134ce:	xor    eax,eax
640134d0:	ret    
640134d1:	mov    ecx,DWORD PTR [ecx+0x4]
640134d4:	mov    eax,DWORD PTR [ecx]
640134d6:	jmp    DWORD PTR [eax+0x4]
640134d9:	xor    edx,edx
640134db:	lea    eax,[ecx+0x14]
640134de:	inc    edx
640134df:	lock xadd DWORD PTR [eax],edx
640134e3:	lea    eax,[ecx+0x8]
640134e6:	ret    
640134e7:	mov    eax,ecx
640134e9:	ret    
640134ea:	test   BYTE PTR [esp+0x4],0x1
640134ef:	push   esi
640134f0:	mov    esi,ecx
640134f2:	mov    DWORD PTR [esi],0x6403ffac
640134f8:	je     0x64013501
640134fa:	push   esi
640134fb:	call   0x640135e4
64013500:	pop    ecx
64013501:	mov    eax,esi
64013503:	pop    esi
64013504:	ret    0x4
64013507:	mov    eax,DWORD PTR [esp+0x8]
6401350b:	mov    ecx,DWORD PTR [esp+0xc]
6401350f:	or     edx,0xffffffff
64013512:	sub    edx,eax
64013514:	cmp    edx,ecx
64013516:	jae    0x6401351e
64013518:	mov    eax,0x80070057
6401351d:	ret    
6401351e:	add    eax,ecx
64013520:	mov    ecx,DWORD PTR [esp+0x4]
64013524:	mov    DWORD PTR [ecx],eax
64013526:	xor    eax,eax
64013528:	ret    
64013529:	push   ebp
6401352a:	mov    ebp,esp
6401352c:	push   esi
6401352d:	mov    esi,DWORD PTR [ebp+0x8]
64013530:	push   edi
64013531:	push   DWORD PTR [ebp+0xc]
64013534:	add    esi,0x8
64013537:	and    esi,0xfffffff8
6401353a:	lea    eax,[ebp+0x8]
6401353d:	push   esi
6401353e:	push   eax
6401353f:	mov    edi,ecx
64013541:	call   0x6400bf10
64013546:	add    esp,0xc
64013549:	test   eax,eax
6401354b:	jl     0x64013583
6401354d:	push   DWORD PTR [ebp+0x8]
64013550:	lea    eax,[ebp+0x8]
64013553:	push   0x10
64013555:	push   eax
64013556:	call   0x64013507
6401355b:	add    esp,0xc
6401355e:	test   eax,eax
64013560:	jl     0x64013583
64013562:	mov    ecx,DWORD PTR [edi+0x4]
64013565:	push   DWORD PTR [ebp+0x8]
64013568:	mov    eax,DWORD PTR [ecx]
6401356a:	call   DWORD PTR [eax]
6401356c:	test   eax,eax
6401356e:	je     0x64013583
64013570:	dec    esi
64013571:	and    DWORD PTR [eax+0x4],0x0
64013575:	mov    DWORD PTR [eax],edi
64013577:	mov    DWORD PTR [eax+0xc],0x1
6401357e:	mov    DWORD PTR [eax+0x8],esi
64013581:	jmp    0x64013585
64013583:	xor    eax,eax
64013585:	pop    edi
64013586:	pop    esi
64013587:	pop    ebp
64013588:	ret    0x8
6401358b:	push   ebp
6401358c:	mov    ebp,esp
6401358e:	push   esi
6401358f:	mov    esi,DWORD PTR [ebp+0xc]
64013592:	push   edi
64013593:	push   DWORD PTR [ebp+0x10]
64013596:	add    esi,0x8
64013599:	and    esi,0xfffffff8
6401359c:	lea    eax,[ebp+0xc]
6401359f:	push   esi
640135a0:	push   eax
640135a1:	mov    edi,ecx
640135a3:	call   0x640134b1
640135a8:	add    esp,0xc
640135ab:	test   eax,eax
640135ad:	jl     0x640135dc
640135af:	push   DWORD PTR [ebp+0xc]
640135b2:	lea    eax,[ebp+0xc]
640135b5:	push   0x10
640135b7:	push   eax
640135b8:	call   0x64006870
640135bd:	add    esp,0xc
640135c0:	test   eax,eax
640135c2:	jl     0x640135dc
640135c4:	push   DWORD PTR [ebp+0xc]
640135c7:	mov    ecx,DWORD PTR [edi+0x4]
640135ca:	push   DWORD PTR [ebp+0x8]
640135cd:	mov    eax,DWORD PTR [ecx]
640135cf:	call   DWORD PTR [eax+0x8]
640135d2:	test   eax,eax
640135d4:	je     0x640135dc
640135d6:	dec    esi
640135d7:	mov    DWORD PTR [eax+0x8],esi
640135da:	jmp    0x640135de
640135dc:	xor    eax,eax
640135de:	pop    edi
640135df:	pop    esi
640135e0:	pop    ebp
640135e1:	ret    0xc
640135e4:	jmp    0x6401475f
640135e9:	mov    eax,ecx
640135eb:	and    DWORD PTR [eax+0x4],0x0
640135ef:	and    DWORD PTR [eax+0x8],0x0
640135f3:	mov    DWORD PTR [eax],0x6403ffc8
640135f9:	ret    
640135fa:	push   ebx
640135fb:	mov    ebx,DWORD PTR [esp+0x8]
640135ff:	push   esi
64013600:	push   edi
64013601:	mov    edi,ecx
64013603:	mov    DWORD PTR [edi],0x6403ffc8
64013609:	mov    eax,DWORD PTR [ebx]
6401360b:	test   eax,eax
6401360d:	je     0x64013635
6401360f:	push   eax
64013610:	call   0x64015aa0
64013615:	mov    esi,eax
64013617:	inc    esi
64013618:	push   esi
64013619:	call   0x6401485e
6401361e:	test   eax,eax
64013620:	pop    ecx
64013621:	pop    ecx
64013622:	mov    DWORD PTR [edi+0x4],eax
64013625:	je     0x64013639
64013627:	push   DWORD PTR [ebx]
64013629:	push   esi
6401362a:	push   eax
6401362b:	call   0x640164bd
64013630:	add    esp,0xc
64013633:	jmp    0x64013639
64013635:	and    DWORD PTR [edi+0x4],0x0
64013639:	mov    DWORD PTR [edi+0x8],0x1
64013640:	mov    eax,edi
64013642:	pop    edi
64013643:	pop    esi
64013644:	pop    ebx
64013645:	ret    0x4
64013648:	mov    eax,ecx
6401364a:	mov    ecx,DWORD PTR [esp+0x4]
6401364e:	mov    DWORD PTR [eax],0x6403ffc8
64013654:	mov    ecx,DWORD PTR [ecx]
64013656:	and    DWORD PTR [eax+0x8],0x0
6401365a:	mov    DWORD PTR [eax+0x4],ecx
6401365d:	ret    0x8
64013660:	push   ebx
64013661:	mov    ebx,DWORD PTR [esp+0x8]
64013665:	push   esi
64013666:	mov    esi,ecx
64013668:	mov    DWORD PTR [esi],0x6403ffc8
6401366e:	mov    eax,DWORD PTR [ebx+0x8]
64013671:	mov    DWORD PTR [esi+0x8],eax
64013674:	test   eax,eax
64013676:	mov    eax,DWORD PTR [ebx+0x4]
64013679:	push   edi
6401367a:	je     0x640136ad
6401367c:	test   eax,eax
6401367e:	je     0x640136a7
64013680:	push   eax
64013681:	call   0x64015aa0
64013686:	mov    edi,eax
64013688:	inc    edi
64013689:	push   edi
6401368a:	call   0x6401485e
6401368f:	test   eax,eax
64013691:	pop    ecx
64013692:	pop    ecx
64013693:	mov    DWORD PTR [esi+0x4],eax
64013696:	je     0x640136b0
64013698:	push   DWORD PTR [ebx+0x4]
6401369b:	push   edi
6401369c:	push   eax
6401369d:	call   0x640164bd
640136a2:	add    esp,0xc
640136a5:	jmp    0x640136b0
640136a7:	and    DWORD PTR [esi+0x4],0x0
640136ab:	jmp    0x640136b0
640136ad:	mov    DWORD PTR [esi+0x4],eax
640136b0:	pop    edi
640136b1:	mov    eax,esi
640136b3:	pop    esi
640136b4:	pop    ebx
640136b5:	ret    0x4
640136b8:	cmp    DWORD PTR [ecx+0x8],0x0
640136bc:	mov    DWORD PTR [ecx],0x6403ffc8
640136c2:	je     0x640136cd
640136c4:	push   DWORD PTR [ecx+0x4]
640136c7:	call   0x6401475f
640136cc:	pop    ecx
640136cd:	ret    
640136ce:	mov    eax,DWORD PTR [ecx+0x4]
640136d1:	test   eax,eax
640136d3:	jne    0x640136da
640136d5:	mov    eax,0x6403ffd0
640136da:	ret    
640136db:	push   esi
640136dc:	mov    esi,ecx
640136de:	call   0x640136b8
640136e3:	test   BYTE PTR [esp+0x8],0x1
640136e8:	je     0x640136f1
640136ea:	push   esi
640136eb:	call   0x640135e4
640136f0:	pop    ecx
640136f1:	mov    eax,esi
640136f3:	pop    esi
640136f4:	ret    0x4
640136f7:	push   ecx
640136f8:	mov    DWORD PTR [ecx],0x6403ffe8
640136fe:	call   0x64016522
64013703:	pop    ecx
64013704:	ret    
64013705:	push   esi
64013706:	mov    esi,ecx
64013708:	call   0x640136f7
6401370d:	test   BYTE PTR [esp+0x8],0x1
64013712:	je     0x6401371b
64013714:	push   esi
64013715:	call   0x640135e4
6401371a:	pop    ecx
6401371b:	mov    eax,esi
6401371d:	pop    esi
6401371e:	ret    0x4
64013721:	mov    eax,DWORD PTR [esp+0x4]
64013725:	add    ecx,0x9
64013728:	push   ecx
64013729:	add    eax,0x9
6401372c:	push   eax
6401372d:	call   0x640165a0
64013732:	neg    eax
64013734:	pop    ecx
64013735:	sbb    eax,eax
64013737:	pop    ecx
64013738:	inc    eax
64013739:	ret    0x4
6401373c:	push   ebp
6401373d:	mov    ebp,esp
6401373f:	push   esi
64013740:	mov    esi,DWORD PTR [ebp+0x14]
64013743:	push   edi
64013744:	xor    edi,edi
64013746:	cmp    esi,edi
64013748:	jne    0x6401374e
6401374a:	xor    eax,eax
6401374c:	jmp    0x640137b3
6401374e:	cmp    DWORD PTR [ebp+0x8],edi
64013751:	jne    0x6401376e
64013753:	call   0x64016663
64013758:	push   0x16
6401375a:	pop    esi
6401375b:	mov    DWORD PTR [eax],esi
6401375d:	push   edi
6401375e:	push   edi
6401375f:	push   edi
64013760:	push   edi
64013761:	push   edi
64013762:	call   0x64013df2
64013767:	add    esp,0x14
6401376a:	mov    eax,esi
6401376c:	jmp    0x640137b3
6401376e:	cmp    DWORD PTR [ebp+0x10],edi
64013771:	je     0x64013789
64013773:	cmp    DWORD PTR [ebp+0xc],esi
64013776:	jb     0x64013789
64013778:	push   esi
64013779:	push   DWORD PTR [ebp+0x10]
6401377c:	push   DWORD PTR [ebp+0x8]
6401377f:	call   0x64015180
64013784:	add    esp,0xc
64013787:	jmp    0x6401374a
64013789:	push   DWORD PTR [ebp+0xc]
6401378c:	push   edi
6401378d:	push   DWORD PTR [ebp+0x8]
64013790:	call   0x64015100
64013795:	add    esp,0xc
64013798:	cmp    DWORD PTR [ebp+0x10],edi
6401379b:	je     0x64013753
6401379d:	cmp    DWORD PTR [ebp+0xc],esi
640137a0:	jae    0x640137b0
640137a2:	call   0x64016663
640137a7:	push   0x22
640137a9:	pop    ecx
640137aa:	mov    DWORD PTR [eax],ecx
640137ac:	mov    esi,ecx
640137ae:	jmp    0x6401375d
640137b0:	push   0x16
640137b2:	pop    eax
640137b3:	pop    edi
640137b4:	pop    esi
640137b5:	pop    ebp
640137b6:	ret    
640137b7:	push   ebp
640137b8:	mov    ebp,esp
640137ba:	mov    eax,DWORD PTR [ebp+0x14]
640137bd:	push   esi
640137be:	push   edi
640137bf:	xor    edi,edi
640137c1:	cmp    eax,edi
640137c3:	je     0x6401380c
640137c5:	cmp    DWORD PTR [ebp+0x8],edi
640137c8:	jne    0x640137e5
640137ca:	call   0x64016663
640137cf:	push   0x16
640137d1:	pop    esi
640137d2:	mov    DWORD PTR [eax],esi
640137d4:	push   edi
640137d5:	push   edi
640137d6:	push   edi
640137d7:	push   edi
640137d8:	push   edi
640137d9:	call   0x64013df2
640137de:	add    esp,0x14
640137e1:	mov    eax,esi
640137e3:	jmp    0x6401380e
640137e5:	cmp    DWORD PTR [ebp+0x10],edi
640137e8:	je     0x640137ca
640137ea:	cmp    DWORD PTR [ebp+0xc],eax
640137ed:	jae    0x640137fd
640137ef:	call   0x64016663
640137f4:	push   0x22
640137f6:	pop    ecx
640137f7:	mov    DWORD PTR [eax],ecx
640137f9:	mov    esi,ecx
640137fb:	jmp    0x640137d4
640137fd:	push   eax
640137fe:	push   DWORD PTR [ebp+0x10]
64013801:	push   DWORD PTR [ebp+0x8]
64013804:	call   0x640166b0
64013809:	add    esp,0xc
6401380c:	xor    eax,eax
6401380e:	pop    edi
6401380f:	pop    esi
64013810:	pop    ebp
64013811:	ret    
64013812:	push   ebp
64013813:	mov    ebp,esp
64013815:	sub    esp,0x20
64013818:	mov    eax,DWORD PTR [ebp+0x8]
6401381b:	push   esi
6401381c:	push   edi
6401381d:	push   0x8
6401381f:	pop    ecx
64013820:	mov    esi,0x6403ffec
64013825:	lea    edi,[ebp-0x20]
64013828:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
6401382a:	mov    DWORD PTR [ebp-0x8],eax
6401382d:	mov    eax,DWORD PTR [ebp+0xc]
64013830:	test   eax,eax
64013832:	pop    edi
64013833:	mov    DWORD PTR [ebp-0x4],eax
64013836:	pop    esi
64013837:	je     0x64013845
64013839:	test   BYTE PTR [eax],0x8
6401383c:	je     0x64013845
6401383e:	mov    DWORD PTR [ebp-0xc],0x1994000
64013845:	lea    eax,[ebp-0xc]
64013848:	push   eax
64013849:	push   DWORD PTR [ebp-0x10]
6401384c:	push   DWORD PTR [ebp-0x1c]
6401384f:	push   DWORD PTR [ebp-0x20]
64013852:	call   DWORD PTR ds:0x6402c18c
64013858:	leave  
64013859:	ret    0x8
6401385c:	push   esi
6401385d:	push   0x1
6401385f:	push   0x640521a8
64013864:	mov    esi,ecx
64013866:	call   0x64013648
6401386b:	mov    DWORD PTR [esi],0x6402c2ac
64013871:	mov    eax,esi
64013873:	pop    esi
64013874:	ret    
64013875:	push   ebp
64013876:	mov    ebp,esp
64013878:	sub    esp,0xc
6401387b:	jmp    0x6401388a
6401387d:	push   DWORD PTR [ebp+0x8]
64013880:	call   0x64016a1f
64013885:	test   eax,eax
64013887:	pop    ecx
64013888:	je     0x64013899
6401388a:	push   DWORD PTR [ebp+0x8]
6401388d:	call   0x6401485e
64013892:	test   eax,eax
64013894:	pop    ecx
64013895:	je     0x6401387d
64013897:	leave  
64013898:	ret    
64013899:	test   BYTE PTR ds:0x640539ec,0x1
640138a0:	mov    esi,0x640539e0
640138a5:	jne    0x640138c0
640138a7:	or     DWORD PTR ds:0x640539ec,0x1
640138ae:	mov    ecx,esi
640138b0:	call   0x6401385c
640138b5:	push   0x6402be87
640138ba:	call   0x64013f4a
640138bf:	pop    ecx
640138c0:	push   esi
640138c1:	lea    ecx,[ebp-0xc]
640138c4:	call   0x64013660
640138c9:	push   0x6404413c
640138ce:	lea    eax,[ebp-0xc]
640138d1:	push   eax
640138d2:	mov    DWORD PTR [ebp-0xc],0x6402c2ac
640138d9:	call   0x64013812
640138de:	int3   
640138df:	push   ebp
640138e0:	mov    ebp,esp
640138e2:	push   ecx
640138e3:	push   ebx
640138e4:	mov    eax,DWORD PTR [ebp+0xc]
640138e7:	add    eax,0xc
640138ea:	mov    DWORD PTR [ebp-0x4],eax
640138ed:	mov    ebx,DWORD PTR fs:0x0
640138f4:	mov    eax,DWORD PTR [ebx]
640138f6:	mov    fs:0x0,eax
640138fc:	mov    eax,DWORD PTR [ebp+0x8]
640138ff:	mov    ebx,DWORD PTR [ebp+0xc]
64013902:	mov    ebp,DWORD PTR [ebp-0x4]
64013905:	mov    esp,DWORD PTR [ebx-0x4]
64013908:	jmp    eax
6401390a:	pop    ebx
6401390b:	leave  
6401390c:	ret    0x8
6401390f:	pop    eax
64013910:	pop    ecx
64013911:	xchg   DWORD PTR [esp],eax
64013914:	jmp    eax
64013916:	push   ebp
64013917:	mov    ebp,esp
64013919:	push   ecx
6401391a:	push   ecx
6401391b:	push   ebx
6401391c:	push   esi
6401391d:	push   edi
6401391e:	mov    esi,DWORD PTR fs:0x0
64013925:	mov    DWORD PTR [ebp-0x4],esi
64013928:	mov    DWORD PTR [ebp-0x8],0x6401393f
6401392f:	push   0x0
64013931:	push   DWORD PTR [ebp+0xc]
64013934:	push   DWORD PTR [ebp-0x8]
64013937:	push   DWORD PTR [ebp+0x8]
6401393a:	call   0x64022e1c
6401393f:	mov    eax,DWORD PTR [ebp+0xc]
64013942:	mov    eax,DWORD PTR [eax+0x4]
64013945:	and    eax,0xfffffffd
64013948:	mov    ecx,DWORD PTR [ebp+0xc]
6401394b:	mov    DWORD PTR [ecx+0x4],eax
6401394e:	mov    edi,DWORD PTR fs:0x0
64013955:	mov    ebx,DWORD PTR [ebp-0x4]
64013958:	mov    DWORD PTR [ebx],edi
6401395a:	mov    DWORD PTR fs:0x0,ebx
64013961:	pop    edi
64013962:	pop    esi
64013963:	pop    ebx
64013964:	leave  
64013965:	ret    0x8
64013968:	push   ebp
64013969:	mov    ebp,esp
6401396b:	sub    esp,0x8
6401396e:	push   ebx
6401396f:	push   esi
64013970:	push   edi
64013971:	cld    
64013972:	mov    DWORD PTR [ebp-0x4],eax
64013975:	xor    eax,eax
64013977:	push   eax
64013978:	push   eax
64013979:	push   eax
6401397a:	push   DWORD PTR [ebp-0x4]
6401397d:	push   DWORD PTR [ebp+0x14]
64013980:	push   DWORD PTR [ebp+0x10]
64013983:	push   DWORD PTR [ebp+0xc]
64013986:	push   DWORD PTR [ebp+0x8]
64013989:	call   0x640175e7
6401398e:	add    esp,0x20
64013991:	mov    DWORD PTR [ebp-0x8],eax
64013994:	pop    edi
64013995:	pop    esi
64013996:	pop    ebx
64013997:	mov    eax,DWORD PTR [ebp-0x8]
6401399a:	mov    esp,ebp
6401399c:	pop    ebp
6401399d:	ret    
6401399e:	push   esi
6401399f:	cld    
640139a0:	mov    esi,DWORD PTR [esp+0xc]
640139a4:	mov    ecx,DWORD PTR [esi+0x8]
640139a7:	xor    ecx,esi
640139a9:	call   0x64013ca6
640139ae:	push   0x0
640139b0:	push   esi
640139b1:	push   DWORD PTR [esi+0x14]
640139b4:	push   DWORD PTR [esi+0xc]
640139b7:	push   0x0
640139b9:	push   DWORD PTR [esp+0x24]
640139bd:	push   DWORD PTR [esi+0x10]
640139c0:	push   DWORD PTR [esp+0x24]
640139c4:	call   0x640175e7
640139c9:	add    esp,0x20
640139cc:	pop    esi
640139cd:	ret    
640139ce:	push   ebp
640139cf:	mov    ebp,esp
640139d1:	sub    esp,0x38
640139d4:	push   ebx
640139d5:	cmp    DWORD PTR [ebp+0x8],0x123
640139dc:	jne    0x640139f0
640139de:	mov    eax,0x64013a77
640139e3:	mov    ecx,DWORD PTR [ebp+0xc]
640139e6:	mov    DWORD PTR [ecx],eax
640139e8:	xor    eax,eax
640139ea:	inc    eax
640139eb:	jmp    0x64013aa0
640139f0:	and    DWORD PTR [ebp-0x28],0x0
640139f4:	mov    DWORD PTR [ebp-0x24],0x64013aa3
640139fb:	mov    eax,ds:0x640521ac
64013a00:	lea    ecx,[ebp-0x28]
64013a03:	xor    eax,ecx
64013a05:	mov    DWORD PTR [ebp-0x20],eax
64013a08:	mov    eax,DWORD PTR [ebp+0x18]
64013a0b:	mov    DWORD PTR [ebp-0x1c],eax
64013a0e:	mov    eax,DWORD PTR [ebp+0xc]
64013a11:	mov    DWORD PTR [ebp-0x18],eax
64013a14:	mov    eax,DWORD PTR [ebp+0x1c]
64013a17:	mov    DWORD PTR [ebp-0x14],eax
64013a1a:	mov    eax,DWORD PTR [ebp+0x20]
64013a1d:	mov    DWORD PTR [ebp-0x10],eax
64013a20:	and    DWORD PTR [ebp-0xc],0x0
64013a24:	and    DWORD PTR [ebp-0x8],0x0
64013a28:	and    DWORD PTR [ebp-0x4],0x0
64013a2c:	mov    DWORD PTR [ebp-0xc],esp
64013a2f:	mov    DWORD PTR [ebp-0x8],ebp
64013a32:	mov    eax,fs:0x0
64013a38:	mov    DWORD PTR [ebp-0x28],eax
64013a3b:	lea    eax,[ebp-0x28]
64013a3e:	mov    fs:0x0,eax
64013a44:	mov    DWORD PTR [ebp-0x38],0x1
64013a4b:	mov    eax,DWORD PTR [ebp+0x8]
64013a4e:	mov    DWORD PTR [ebp-0x34],eax
64013a51:	mov    eax,DWORD PTR [ebp+0x10]
64013a54:	mov    DWORD PTR [ebp-0x30],eax
64013a57:	call   0x640179ca
64013a5c:	mov    eax,DWORD PTR [eax+0x80]
64013a62:	mov    DWORD PTR [ebp-0x2c],eax
64013a65:	lea    eax,[ebp-0x34]
64013a68:	push   eax
64013a69:	mov    eax,DWORD PTR [ebp+0x8]
64013a6c:	push   DWORD PTR [eax]
64013a6e:	call   DWORD PTR [ebp-0x2c]
64013a71:	pop    ecx
64013a72:	pop    ecx
64013a73:	and    DWORD PTR [ebp-0x38],0x0
64013a77:	cmp    DWORD PTR [ebp-0x4],0x0
64013a7b:	je     0x64013a94
64013a7d:	mov    ebx,DWORD PTR fs:0x0
64013a84:	mov    eax,DWORD PTR [ebx]
64013a86:	mov    ebx,DWORD PTR [ebp-0x28]
64013a89:	mov    DWORD PTR [ebx],eax
64013a8b:	mov    DWORD PTR fs:0x0,ebx
64013a92:	jmp    0x64013a9d
64013a94:	mov    eax,DWORD PTR [ebp-0x28]
64013a97:	mov    fs:0x0,eax
64013a9d:	mov    eax,DWORD PTR [ebp-0x38]
64013aa0:	pop    ebx
64013aa1:	leave  
64013aa2:	ret    
64013aa3:	push   ebp
64013aa4:	mov    ebp,esp
64013aa6:	push   ecx
64013aa7:	push   ebx
64013aa8:	cld    
64013aa9:	mov    eax,DWORD PTR [ebp+0xc]
64013aac:	mov    ecx,DWORD PTR [eax+0x8]
64013aaf:	xor    ecx,DWORD PTR [ebp+0xc]
64013ab2:	call   0x64013ca6
64013ab7:	mov    eax,DWORD PTR [ebp+0x8]
64013aba:	mov    eax,DWORD PTR [eax+0x4]
64013abd:	and    eax,0x66
64013ac0:	je     0x64013ad3
64013ac2:	mov    eax,DWORD PTR [ebp+0xc]
64013ac5:	mov    DWORD PTR [eax+0x24],0x1
64013acc:	xor    eax,eax
64013ace:	inc    eax
64013acf:	jmp    0x64013b3d
64013ad1:	jmp    0x64013b3d
64013ad3:	push   0x1
64013ad5:	mov    eax,DWORD PTR [ebp+0xc]
64013ad8:	push   DWORD PTR [eax+0x18]
64013adb:	mov    eax,DWORD PTR [ebp+0xc]
64013ade:	push   DWORD PTR [eax+0x14]
64013ae1:	mov    eax,DWORD PTR [ebp+0xc]
64013ae4:	push   DWORD PTR [eax+0xc]
64013ae7:	push   0x0
64013ae9:	push   DWORD PTR [ebp+0x10]
64013aec:	mov    eax,DWORD PTR [ebp+0xc]
64013aef:	push   DWORD PTR [eax+0x10]
64013af2:	push   DWORD PTR [ebp+0x8]
64013af5:	call   0x640175e7
64013afa:	add    esp,0x20
64013afd:	mov    eax,DWORD PTR [ebp+0xc]
64013b00:	cmp    DWORD PTR [eax+0x24],0x0
64013b04:	jne    0x64013b11
64013b06:	push   DWORD PTR [ebp+0x8]
64013b09:	push   DWORD PTR [ebp+0xc]
64013b0c:	call   0x64013916
64013b11:	push   0x0
64013b13:	push   0x0
64013b15:	push   0x0
64013b17:	push   0x0
64013b19:	push   0x0
64013b1b:	lea    eax,[ebp-0x4]
64013b1e:	push   eax
64013b1f:	push   0x123
64013b24:	call   0x640139ce
64013b29:	add    esp,0x1c
64013b2c:	mov    eax,DWORD PTR [ebp-0x4]
64013b2f:	mov    ebx,DWORD PTR [ebp+0xc]
64013b32:	mov    esp,DWORD PTR [ebx+0x1c]
64013b35:	mov    ebp,DWORD PTR [ebx+0x20]
64013b38:	jmp    eax
64013b3a:	xor    eax,eax
64013b3c:	inc    eax
64013b3d:	pop    ebx
64013b3e:	leave  
64013b3f:	ret    
64013b40:	push   ebp
64013b41:	mov    ebp,esp
64013b43:	push   ecx
64013b44:	push   ebx
64013b45:	push   esi
64013b46:	push   edi
64013b47:	mov    edi,DWORD PTR [ebp+0x8]
64013b4a:	mov    eax,DWORD PTR [edi+0x10]
64013b4d:	mov    esi,DWORD PTR [edi+0xc]
64013b50:	mov    DWORD PTR [ebp-0x4],eax
64013b53:	mov    ebx,esi
64013b55:	jmp    0x64013b84
64013b57:	cmp    esi,0xffffffff
64013b5a:	jne    0x64013b61
64013b5c:	call   0x64017d3c
64013b61:	mov    ecx,DWORD PTR [ebp-0x4]
64013b64:	dec    esi
64013b65:	mov    eax,esi
64013b67:	imul   eax,eax,0x14
64013b6a:	add    eax,ecx
64013b6c:	mov    ecx,DWORD PTR [ebp+0x10]
64013b6f:	cmp    DWORD PTR [eax+0x4],ecx
64013b72:	jge    0x64013b79
64013b74:	cmp    ecx,DWORD PTR [eax+0x8]
64013b77:	jle    0x64013b7e
64013b79:	cmp    esi,0xffffffff
64013b7c:	jne    0x64013b87
64013b7e:	dec    DWORD PTR [ebp+0xc]
64013b81:	mov    ebx,DWORD PTR [ebp+0x8]
64013b84:	mov    DWORD PTR [ebp+0x8],esi
64013b87:	cmp    DWORD PTR [ebp+0xc],0x0
64013b8b:	jge    0x64013b57
64013b8d:	mov    eax,DWORD PTR [ebp+0x14]
64013b90:	inc    esi
64013b91:	mov    DWORD PTR [eax],esi
64013b93:	mov    eax,DWORD PTR [ebp+0x18]
64013b96:	mov    DWORD PTR [eax],ebx
64013b98:	cmp    ebx,DWORD PTR [edi+0xc]
64013b9b:	ja     0x64013ba1
64013b9d:	cmp    esi,ebx
64013b9f:	jbe    0x64013ba6
64013ba1:	call   0x64017d3c
64013ba6:	mov    eax,esi
64013ba8:	imul   eax,eax,0x14
64013bab:	add    eax,DWORD PTR [ebp-0x4]
64013bae:	pop    edi
64013baf:	pop    esi
64013bb0:	pop    ebx
64013bb1:	leave  
64013bb2:	ret    
64013bb3:	mov    eax,DWORD PTR [esp+0x8]
64013bb7:	push   esi
64013bb8:	mov    esi,DWORD PTR [esp+0x8]
64013bbc:	mov    DWORD PTR [esi],eax
64013bbe:	call   0x640179ca
64013bc3:	mov    eax,DWORD PTR [eax+0x98]
64013bc9:	mov    DWORD PTR [esi+0x4],eax
64013bcc:	call   0x640179ca
64013bd1:	mov    DWORD PTR [eax+0x98],esi
64013bd7:	mov    eax,esi
64013bd9:	pop    esi
64013bda:	ret    
64013bdb:	call   0x640179ca
64013be0:	mov    eax,DWORD PTR [eax+0x98]
64013be6:	jmp    0x64013bf3
64013be8:	mov    ecx,DWORD PTR [eax]
64013bea:	cmp    ecx,DWORD PTR [esp+0x4]
64013bee:	je     0x64013bf9
64013bf0:	mov    eax,DWORD PTR [eax+0x4]
64013bf3:	test   eax,eax
64013bf5:	jne    0x64013be8
64013bf7:	inc    eax
64013bf8:	ret    
64013bf9:	xor    eax,eax
64013bfb:	ret    
64013bfc:	push   esi
64013bfd:	call   0x640179ca
64013c02:	mov    esi,DWORD PTR [esp+0x8]
64013c06:	cmp    esi,DWORD PTR [eax+0x98]
64013c0c:	jne    0x64013c1e
64013c0e:	call   0x640179ca
64013c13:	mov    ecx,DWORD PTR [esi+0x4]
64013c16:	mov    DWORD PTR [eax+0x98],ecx
64013c1c:	pop    esi
64013c1d:	ret    
64013c1e:	call   0x640179ca
64013c23:	mov    eax,DWORD PTR [eax+0x98]
64013c29:	jmp    0x64013c34
64013c2b:	mov    ecx,DWORD PTR [eax+0x4]
64013c2e:	cmp    esi,ecx
64013c30:	je     0x64013c40
64013c32:	mov    eax,ecx
64013c34:	cmp    DWORD PTR [eax+0x4],0x0
64013c38:	jne    0x64013c2b
64013c3a:	pop    esi
64013c3b:	jmp    0x64017d3c
64013c40:	mov    ecx,DWORD PTR [esi+0x4]
64013c43:	mov    DWORD PTR [eax+0x4],ecx
64013c46:	pop    esi
64013c47:	ret    
64013c48:	push   ebp
64013c49:	mov    ebp,esp
64013c4b:	sub    esp,0x18
64013c4e:	mov    eax,ds:0x640521ac
64013c53:	and    DWORD PTR [ebp-0x18],0x0
64013c57:	lea    ecx,[ebp-0x18]
64013c5a:	xor    eax,ecx
64013c5c:	mov    ecx,DWORD PTR [ebp+0x8]
64013c5f:	mov    DWORD PTR [ebp-0x10],eax
64013c62:	mov    eax,DWORD PTR [ebp+0xc]
64013c65:	mov    DWORD PTR [ebp-0xc],eax
64013c68:	mov    eax,DWORD PTR [ebp+0x14]
64013c6b:	inc    eax
64013c6c:	mov    DWORD PTR [ebp-0x14],0x6401399e
64013c73:	mov    DWORD PTR [ebp-0x8],ecx
64013c76:	mov    DWORD PTR [ebp-0x4],eax
64013c79:	mov    eax,fs:0x0
64013c7f:	mov    DWORD PTR [ebp-0x18],eax
64013c82:	lea    eax,[ebp-0x18]
64013c85:	mov    fs:0x0,eax
64013c8b:	push   DWORD PTR [ebp+0x18]
64013c8e:	push   ecx
64013c8f:	push   DWORD PTR [ebp+0x10]
64013c92:	call   0x64017d90
64013c97:	mov    ecx,eax
64013c99:	mov    eax,DWORD PTR [ebp-0x18]
64013c9c:	mov    fs:0x0,eax
64013ca2:	mov    eax,ecx
64013ca4:	leave  
64013ca5:	ret    
64013ca6:	cmp    ecx,DWORD PTR ds:0x640521ac
64013cac:	jne    0x64013cb0
64013cae:	repz ret 
64013cb0:	jmp    0x64017ddc
64013cb5:	int3   
64013cb6:	int3   
64013cb7:	int3   
64013cb8:	int3   
64013cb9:	int3   
64013cba:	int3   
64013cbb:	int3   
64013cbc:	int3   
64013cbd:	int3   
64013cbe:	int3   
64013cbf:	int3   
64013cc0:	push   ecx
64013cc1:	lea    ecx,[esp+0x8]
64013cc5:	sub    ecx,eax
64013cc7:	and    ecx,0xf
64013cca:	add    eax,ecx
64013ccc:	sbb    ecx,ecx
64013cce:	or     eax,ecx
64013cd0:	pop    ecx
64013cd1:	jmp    0x64017ee0
64013cd6:	push   ecx
64013cd7:	lea    ecx,[esp+0x8]
64013cdb:	sub    ecx,eax
64013cdd:	and    ecx,0x7
64013ce0:	add    eax,ecx
64013ce2:	sbb    ecx,ecx
64013ce4:	or     eax,ecx
64013ce6:	pop    ecx
64013ce7:	jmp    0x64017ee0
64013cec:	mov    eax,DWORD PTR [esp+0x4]
64013cf0:	mov    ds:0x640539f0,eax
64013cf5:	ret    
64013cf6:	push   ebp
64013cf7:	lea    ebp,[esp-0x2a8]
64013cfe:	sub    esp,0x328
64013d04:	mov    eax,ds:0x640521ac
64013d09:	xor    eax,ebp
64013d0b:	mov    DWORD PTR [ebp+0x2a4],eax
64013d11:	push   esi
64013d12:	mov    DWORD PTR [ebp+0x88],eax
64013d18:	mov    DWORD PTR [ebp+0x84],ecx
64013d1e:	mov    DWORD PTR [ebp+0x80],edx
64013d24:	mov    DWORD PTR [ebp+0x7c],ebx
64013d27:	mov    DWORD PTR [ebp+0x78],esi
64013d2a:	mov    DWORD PTR [ebp+0x74],edi
64013d2d:	data16 mov WORD PTR [ebp+0xa0],ss
64013d34:	data16 mov WORD PTR [ebp+0x94],cs
64013d3b:	data16 mov WORD PTR [ebp+0x70],ds
64013d3f:	data16 mov WORD PTR [ebp+0x6c],es
64013d43:	data16 mov WORD PTR [ebp+0x68],fs
64013d47:	data16 mov WORD PTR [ebp+0x64],gs
64013d4b:	pushf  
64013d4c:	pop    DWORD PTR [ebp+0x98]
64013d52:	mov    esi,DWORD PTR [ebp+0x2ac]
64013d58:	lea    eax,[ebp+0x2ac]
64013d5e:	mov    DWORD PTR [ebp+0x9c],eax
64013d64:	mov    DWORD PTR [ebp-0x28],0x10001
64013d6b:	mov    DWORD PTR [ebp+0x90],esi
64013d71:	mov    eax,DWORD PTR [eax-0x4]
64013d74:	push   0x50
64013d76:	mov    DWORD PTR [ebp+0x8c],eax
64013d7c:	lea    eax,[ebp-0x80]
64013d7f:	push   0x0
64013d81:	push   eax
64013d82:	call   0x64015100
64013d87:	lea    eax,[ebp-0x80]
64013d8a:	mov    DWORD PTR [ebp-0x30],eax
64013d8d:	lea    eax,[ebp-0x28]
64013d90:	add    esp,0xc
64013d93:	mov    DWORD PTR [ebp-0x80],0xc000000d
64013d9a:	mov    DWORD PTR [ebp-0x74],esi
64013d9d:	mov    DWORD PTR [ebp-0x2c],eax
64013da0:	call   DWORD PTR ds:0x6402c1b4
64013da6:	push   0x0
64013da8:	mov    esi,eax
64013daa:	call   DWORD PTR ds:0x6402c1b0
64013db0:	lea    eax,[ebp-0x30]
64013db3:	push   eax
64013db4:	call   DWORD PTR ds:0x6402c1ac
64013dba:	test   eax,eax
64013dbc:	jne    0x64013dca
64013dbe:	test   esi,esi
64013dc0:	jne    0x64013dca
64013dc2:	push   0x2
64013dc4:	call   0x64017f0b
64013dc9:	pop    ecx
64013dca:	push   0xc000000d
64013dcf:	call   DWORD PTR ds:0x6402c040
64013dd5:	push   eax
64013dd6:	call   DWORD PTR ds:0x6402c0d8
64013ddc:	mov    ecx,DWORD PTR [ebp+0x2a4]
64013de2:	xor    ecx,ebp
64013de4:	pop    esi
64013de5:	call   0x64013ca6
64013dea:	add    ebp,0x2a8
64013df0:	leave  
64013df1:	ret    
64013df2:	push   ebp
64013df3:	mov    ebp,esp
64013df5:	push   DWORD PTR ds:0x640539f0
64013dfb:	call   0x640177ae
64013e00:	test   eax,eax
64013e02:	pop    ecx
64013e03:	je     0x64013e08
64013e05:	pop    ebp
64013e06:	jmp    eax
64013e08:	push   0x2
64013e0a:	call   0x64017f0b
64013e0f:	pop    ecx
64013e10:	pop    ebp
64013e11:	jmp    0x64013cf6
64013e16:	xor    eax,eax
64013e18:	push   eax
64013e19:	push   eax
64013e1a:	push   eax
64013e1b:	push   eax
64013e1c:	push   eax
64013e1d:	call   0x64013df2
64013e22:	add    esp,0x14
64013e25:	ret    
64013e26:	push   ecx
64013e27:	push   ebx
64013e28:	push   ebp
64013e29:	push   esi
64013e2a:	push   edi
64013e2b:	push   DWORD PTR ds:0x640557c8
64013e31:	call   0x640177ae
64013e36:	push   DWORD PTR ds:0x640557c4
64013e3c:	mov    esi,eax
64013e3e:	mov    DWORD PTR [esp+0x18],esi
64013e42:	call   0x640177ae
64013e47:	mov    edi,eax
64013e49:	cmp    edi,esi
64013e4b:	pop    ecx
64013e4c:	pop    ecx
64013e4d:	jb     0x64013ed7
64013e53:	mov    ebx,edi
64013e55:	sub    ebx,esi
64013e57:	lea    ebp,[ebx+0x4]
64013e5a:	cmp    ebp,0x4
64013e5d:	jb     0x64013ed7
64013e5f:	push   esi
64013e60:	call   0x64017f13
64013e65:	mov    esi,eax
64013e67:	cmp    esi,ebp
64013e69:	pop    ecx
64013e6a:	jae    0x64013eb6
64013e6c:	mov    eax,0x800
64013e71:	cmp    esi,eax
64013e73:	jae    0x64013e77
64013e75:	mov    eax,esi
64013e77:	add    eax,esi
64013e79:	cmp    eax,esi
64013e7b:	jb     0x64013e8d
64013e7d:	push   eax
64013e7e:	push   DWORD PTR [esp+0x14]
64013e82:	call   0x64016307
64013e87:	test   eax,eax
64013e89:	pop    ecx
64013e8a:	pop    ecx
64013e8b:	jne    0x64013ea4
64013e8d:	lea    eax,[esi+0x10]
64013e90:	cmp    eax,esi
64013e92:	jb     0x64013ed7
64013e94:	push   eax
64013e95:	push   DWORD PTR [esp+0x14]
64013e99:	call   0x64016307
64013e9e:	test   eax,eax
64013ea0:	pop    ecx
64013ea1:	pop    ecx
64013ea2:	je     0x64013ed7
64013ea4:	sar    ebx,0x2
64013ea7:	push   eax
64013ea8:	lea    edi,[eax+ebx*4]
64013eab:	call   0x64017737
64013eb0:	pop    ecx
64013eb1:	mov    ds:0x640557c8,eax
64013eb6:	push   DWORD PTR [esp+0x18]
64013eba:	call   0x64017737
64013ebf:	mov    DWORD PTR [edi],eax
64013ec1:	add    edi,0x4
64013ec4:	push   edi
64013ec5:	call   0x64017737
64013eca:	pop    ecx
64013ecb:	mov    ds:0x640557c4,eax
64013ed0:	mov    eax,DWORD PTR [esp+0x1c]
64013ed4:	pop    ecx
64013ed5:	jmp    0x64013ed9
64013ed7:	xor    eax,eax
64013ed9:	pop    edi
64013eda:	pop    esi
64013edb:	pop    ebp
64013edc:	pop    ebx
64013edd:	pop    ecx
64013ede:	ret    
64013edf:	push   esi
64013ee0:	push   0x4
64013ee2:	push   0x20
64013ee4:	call   0x640162bf
64013ee9:	mov    esi,eax
64013eeb:	push   esi
64013eec:	call   0x64017737
64013ef1:	add    esp,0xc
64013ef4:	test   esi,esi
64013ef6:	mov    ds:0x640557c8,eax
64013efb:	mov    ds:0x640557c4,eax
64013f00:	jne    0x64013f07
64013f02:	push   0x18
64013f04:	pop    eax
64013f05:	pop    esi
64013f06:	ret    
64013f07:	and    DWORD PTR [esi],0x0
64013f0a:	xor    eax,eax
64013f0c:	pop    esi
64013f0d:	ret    
64013f0e:	push   0xc
64013f10:	push   0x64043a98
64013f15:	call   0x64016464
64013f1a:	call   0x64018015
64013f1f:	and    DWORD PTR [ebp-0x4],0x0
64013f23:	push   DWORD PTR [ebp+0x8]
64013f26:	call   0x64013e26
64013f2b:	pop    ecx
64013f2c:	mov    DWORD PTR [ebp-0x1c],eax
64013f2f:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64013f36:	call   0x64013f44
64013f3b:	mov    eax,DWORD PTR [ebp-0x1c]
64013f3e:	call   0x640164a9
64013f43:	ret    
64013f44:	call   0x6401801e
64013f49:	ret    
64013f4a:	push   DWORD PTR [esp+0x4]
64013f4e:	call   0x64013f0e
64013f53:	neg    eax
64013f55:	sbb    eax,eax
64013f57:	neg    eax
64013f59:	pop    ecx
64013f5a:	dec    eax
64013f5b:	ret    
64013f5c:	mov    eax,DWORD PTR [esp+0x4]
64013f60:	push   ebx
64013f61:	mov    ebx,DWORD PTR [esp+0xc]
64013f65:	cmp    WORD PTR [ebx],0x0
64013f69:	push   edi
64013f6a:	mov    edi,eax
64013f6c:	je     0x64013fb3
64013f6e:	movzx  ecx,WORD PTR [eax]
64013f71:	test   cx,cx
64013f74:	je     0x64013fb1
64013f76:	movzx  edx,cx
64013f79:	sub    eax,ebx
64013f7b:	test   dx,dx
64013f7e:	mov    ecx,DWORD PTR [esp+0x10]
64013f82:	je     0x64013f9f
64013f84:	movzx  edx,WORD PTR [ecx]
64013f87:	test   dx,dx
64013f8a:	je     0x64013fb6
64013f8c:	movzx  ebx,WORD PTR [eax+ecx*1]
64013f90:	movzx  edx,dx
64013f93:	sub    ebx,edx
64013f95:	jne    0x64013f9f
64013f97:	inc    ecx
64013f98:	inc    ecx
64013f99:	cmp    WORD PTR [eax+ecx*1],bx
64013f9d:	jne    0x64013f84
64013f9f:	cmp    WORD PTR [ecx],0x0
64013fa3:	je     0x64013fb6
64013fa5:	inc    edi
64013fa6:	inc    edi
64013fa7:	movzx  edx,WORD PTR [edi]
64013faa:	inc    eax
64013fab:	inc    eax
64013fac:	test   dx,dx
64013faf:	jne    0x64013f7b
64013fb1:	xor    eax,eax
64013fb3:	pop    edi
64013fb4:	pop    ebx
64013fb5:	ret    
64013fb6:	mov    eax,edi
64013fb8:	jmp    0x64013fb3
64013fba:	push   ebp
64013fbb:	mov    ebp,esp
64013fbd:	push   ecx
64013fbe:	mov    eax,DWORD PTR [ebp+0xc]
64013fc1:	cmp    eax,0x1
64013fc4:	push   ebx
64013fc5:	push   esi
64013fc6:	push   edi
64013fc7:	jne    0x640140e4
64013fcd:	mov    ebx,DWORD PTR ds:0x6402c1a4
64013fd3:	mov    edi,0x94
64013fd8:	push   edi
64013fd9:	push   0x0
64013fdb:	call   ebx
64013fdd:	push   eax
64013fde:	call   DWORD PTR ds:0x6402c194
64013fe4:	mov    esi,eax
64013fe6:	test   esi,esi
64013fe8:	jne    0x64013ff1
64013fea:	xor    eax,eax
64013fec:	jmp    0x6401418c
64013ff1:	push   esi
64013ff2:	mov    DWORD PTR [esi],edi
64013ff4:	call   DWORD PTR ds:0x6402c188
64013ffa:	test   eax,eax
64013ffc:	push   esi
64013ffd:	push   0x0
64013fff:	jne    0x6401400c
64014001:	call   ebx
64014003:	push   eax
64014004:	call   DWORD PTR ds:0x6402c198
6401400a:	jmp    0x64013fea
6401400c:	mov    eax,DWORD PTR [esi+0x10]
6401400f:	mov    edi,DWORD PTR [esi+0xc]
64014012:	mov    DWORD PTR [ebp+0xc],eax
64014015:	mov    eax,DWORD PTR [esi+0x4]
64014018:	mov    DWORD PTR [ebp+0x10],eax
6401401b:	mov    eax,DWORD PTR [esi+0x8]
6401401e:	mov    DWORD PTR [ebp-0x4],eax
64014021:	and    edi,0x7fff
64014027:	call   ebx
64014029:	push   eax
6401402a:	call   DWORD PTR ds:0x6402c198
64014030:	mov    eax,DWORD PTR [ebp+0xc]
64014033:	cmp    eax,0x2
64014036:	je     0x6401403e
64014038:	or     edi,0x8000
6401403e:	mov    ecx,DWORD PTR [ebp-0x4]
64014041:	mov    ds:0x64053d60,eax
64014046:	mov    eax,DWORD PTR [ebp+0x10]
64014049:	mov    edx,eax
6401404b:	shl    edx,0x8
6401404e:	add    edx,ecx
64014050:	push   0x1
64014052:	mov    DWORD PTR ds:0x64053d68,edx
64014058:	mov    ds:0x64053d6c,eax
6401405d:	mov    DWORD PTR ds:0x64053d70,ecx
64014063:	mov    DWORD PTR ds:0x64053d64,edi
64014069:	call   0x64018a56
6401406e:	test   eax,eax
64014070:	pop    ecx
64014071:	je     0x64013fea
64014077:	call   0x64017b6c
6401407c:	test   eax,eax
6401407e:	jne    0x6401408a
64014080:	call   0x64018ab0
64014085:	jmp    0x64013fea
6401408a:	call   0x640189b3
6401408f:	call   DWORD PTR ds:0x6402c1b8
64014095:	mov    ds:0x640557d8,eax
6401409a:	call   0x6401887e
6401409f:	mov    ds:0x640539f8,eax
640140a4:	call   0x640182b2
640140a9:	test   eax,eax
640140ab:	jge    0x640140b4
640140ad:	call   0x64017857
640140b2:	jmp    0x64014080
640140b4:	call   0x640187c5
640140b9:	test   eax,eax
640140bb:	jl     0x640140dd
640140bd:	call   0x64018552
640140c2:	test   eax,eax
640140c4:	jl     0x640140dd
640140c6:	push   0x0
640140c8:	call   0x640180d2
640140cd:	test   eax,eax
640140cf:	pop    ecx
640140d0:	jne    0x640140dd
640140d2:	inc    DWORD PTR ds:0x640539f4
640140d8:	jmp    0x64014189
640140dd:	call   0x64018506
640140e2:	jmp    0x640140ad
640140e4:	xor    edi,edi
640140e6:	cmp    eax,edi
640140e8:	jne    0x6401411f
640140ea:	cmp    DWORD PTR ds:0x640539f4,edi
640140f0:	jle    0x64013fea
640140f6:	dec    DWORD PTR ds:0x640539f4
640140fc:	cmp    DWORD PTR ds:0x64053d9c,edi
64014102:	jne    0x64014109
64014104:	call   0x64018257
64014109:	cmp    DWORD PTR [ebp+0x10],edi
6401410c:	jne    0x64014189
6401410e:	call   0x64018506
64014113:	call   0x64017857
64014118:	call   0x64018ab0
6401411d:	jmp    0x64014189
6401411f:	cmp    eax,0x2
64014122:	jne    0x6401417d
64014124:	call   0x64017825
64014129:	push   0x214
6401412e:	push   0x1
64014130:	call   0x640162bf
64014135:	mov    esi,eax
64014137:	cmp    esi,edi
64014139:	pop    ecx
6401413a:	pop    ecx
6401413b:	je     0x64013fea
64014141:	push   esi
64014142:	push   DWORD PTR ds:0x64052474
64014148:	push   DWORD PTR ds:0x64053a28
6401414e:	call   0x640177ae
64014153:	pop    ecx
64014154:	call   eax
64014156:	test   eax,eax
64014158:	je     0x64014171
6401415a:	push   edi
6401415b:	push   esi
6401415c:	call   0x64017894
64014161:	pop    ecx
64014162:	pop    ecx
64014163:	call   DWORD PTR ds:0x6402c0f4
64014169:	or     DWORD PTR [esi+0x4],0xffffffff
6401416d:	mov    DWORD PTR [esi],eax
6401416f:	jmp    0x64014189
64014171:	push   esi
64014172:	call   0x6401475f
64014177:	pop    ecx
64014178:	jmp    0x64013fea
6401417d:	cmp    eax,0x3
64014180:	jne    0x64014189
64014182:	push   edi
64014183:	call   0x64017b03
64014188:	pop    ecx
64014189:	xor    eax,eax
6401418b:	inc    eax
6401418c:	pop    edi
6401418d:	pop    esi
6401418e:	pop    ebx
6401418f:	leave  
64014190:	ret    0xc
64014193:	push   0xc
64014195:	push   0x64043ab8
6401419a:	call   0x64016464
6401419f:	mov    edi,ecx
640141a1:	mov    esi,edx
640141a3:	mov    ebx,DWORD PTR [ebp+0x8]
640141a6:	xor    eax,eax
640141a8:	inc    eax
640141a9:	mov    DWORD PTR [ebp-0x1c],eax
640141ac:	test   esi,esi
640141ae:	jne    0x640141bc
640141b0:	cmp    DWORD PTR ds:0x640539f4,edx
640141b6:	je     0x64014281
640141bc:	and    DWORD PTR [ebp-0x4],0x0
640141c0:	cmp    esi,eax
640141c2:	je     0x640141c9
640141c4:	cmp    esi,0x2
640141c7:	jne    0x640141f7
640141c9:	mov    eax,ds:0x6404000c
640141ce:	test   eax,eax
640141d0:	je     0x640141da
640141d2:	push   edi
640141d3:	push   esi
640141d4:	push   ebx
640141d5:	call   eax
640141d7:	mov    DWORD PTR [ebp-0x1c],eax
640141da:	cmp    DWORD PTR [ebp-0x1c],0x0
640141de:	je     0x6401427a
640141e4:	push   edi
640141e5:	push   esi
640141e6:	push   ebx
640141e7:	call   0x64013fba
640141ec:	mov    DWORD PTR [ebp-0x1c],eax
640141ef:	test   eax,eax
640141f1:	je     0x6401427a
640141f7:	push   edi
640141f8:	push   esi
640141f9:	push   ebx
640141fa:	call   0x6400ae20
640141ff:	mov    DWORD PTR [ebp-0x1c],eax
64014202:	cmp    esi,0x1
64014205:	jne    0x6401422b
64014207:	test   eax,eax
64014209:	jne    0x6401422b
6401420b:	push   edi
6401420c:	push   eax
6401420d:	push   ebx
6401420e:	call   0x6400ae20
64014213:	push   edi
64014214:	push   0x0
64014216:	push   ebx
64014217:	call   0x64013fba
6401421c:	mov    eax,ds:0x6404000c
64014221:	test   eax,eax
64014223:	je     0x6401422b
64014225:	push   edi
64014226:	push   0x0
64014228:	push   ebx
64014229:	call   eax
6401422b:	test   esi,esi
6401422d:	je     0x64014234
6401422f:	cmp    esi,0x3
64014232:	jne    0x6401425a
64014234:	push   edi
64014235:	push   esi
64014236:	push   ebx
64014237:	call   0x64013fba
6401423c:	test   eax,eax
6401423e:	jne    0x64014243
64014240:	and    DWORD PTR [ebp-0x1c],eax
64014243:	cmp    DWORD PTR [ebp-0x1c],0x0
64014247:	je     0x6401425a
64014249:	mov    eax,ds:0x6404000c
6401424e:	test   eax,eax
64014250:	je     0x6401425a
64014252:	push   edi
64014253:	push   esi
64014254:	push   ebx
64014255:	call   eax
64014257:	mov    DWORD PTR [ebp-0x1c],eax
6401425a:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64014261:	mov    eax,DWORD PTR [ebp-0x1c]
64014264:	jmp    0x64014283
64014266:	mov    eax,DWORD PTR [ebp-0x14]
64014269:	mov    ecx,DWORD PTR [eax]
6401426b:	mov    ecx,DWORD PTR [ecx]
6401426d:	push   eax
6401426e:	push   ecx
6401426f:	call   0x64018c82
64014274:	pop    ecx
64014275:	pop    ecx
64014276:	ret    
64014277:	mov    esp,DWORD PTR [ebp-0x18]
6401427a:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64014281:	xor    eax,eax
64014283:	call   0x640164a9
64014288:	ret    
64014289:	cmp    DWORD PTR [esp+0x8],0x1
6401428e:	jne    0x64014295
64014290:	call   0x64018c9d
64014295:	push   DWORD PTR [esp+0x4]
64014299:	mov    ecx,DWORD PTR [esp+0x10]
6401429d:	mov    edx,DWORD PTR [esp+0xc]
640142a1:	call   0x64014193
640142a6:	pop    ecx
640142a7:	ret    0xc
640142aa:	mov    eax,DWORD PTR [esp+0x4]
640142ae:	test   eax,eax
640142b0:	je     0x640142c4
640142b2:	sub    eax,0x8
640142b5:	cmp    DWORD PTR [eax],0xdddd
640142bb:	jne    0x640142c4
640142bd:	push   eax
640142be:	call   0x6401475f
640142c3:	pop    ecx
640142c4:	ret    
640142c5:	mov    eax,DWORD PTR [esp+0x4]
640142c9:	test   eax,eax
640142cb:	push   esi
640142cc:	mov    esi,ecx
640142ce:	mov    BYTE PTR [esi+0xc],0x0
640142d2:	jne    0x64014337
640142d4:	call   0x640179ca
640142d9:	mov    DWORD PTR [esi+0x8],eax
640142dc:	mov    ecx,DWORD PTR [eax+0x6c]
640142df:	mov    DWORD PTR [esi],ecx
640142e1:	mov    ecx,DWORD PTR [eax+0x68]
640142e4:	mov    DWORD PTR [esi+0x4],ecx
640142e7:	mov    ecx,DWORD PTR [esi]
640142e9:	cmp    ecx,DWORD PTR ds:0x64052b60
640142ef:	je     0x64014303
640142f1:	mov    ecx,DWORD PTR ds:0x64052a78
640142f7:	test   DWORD PTR [eax+0x70],ecx
640142fa:	jne    0x64014303
640142fc:	call   0x64015e24
64014301:	mov    DWORD PTR [esi],eax
64014303:	mov    eax,DWORD PTR [esi+0x4]
64014306:	cmp    eax,DWORD PTR ds:0x64052980
6401430c:	je     0x64014324
6401430e:	mov    eax,DWORD PTR [esi+0x8]
64014311:	mov    ecx,DWORD PTR ds:0x64052a78
64014317:	test   DWORD PTR [eax+0x70],ecx
6401431a:	jne    0x64014324
6401431c:	call   0x64018f3f
64014321:	mov    DWORD PTR [esi+0x4],eax
64014324:	mov    eax,DWORD PTR [esi+0x8]
64014327:	test   BYTE PTR [eax+0x70],0x2
6401432b:	jne    0x64014341
6401432d:	or     DWORD PTR [eax+0x70],0x2
64014331:	mov    BYTE PTR [esi+0xc],0x1
64014335:	jmp    0x64014341
64014337:	mov    ecx,DWORD PTR [eax]
64014339:	mov    DWORD PTR [esi],ecx
6401433b:	mov    eax,DWORD PTR [eax+0x4]
6401433e:	mov    DWORD PTR [esi+0x4],eax
64014341:	mov    eax,esi
64014343:	pop    esi
64014344:	ret    0x4
64014347:	push   ebp
64014348:	mov    ebp,esp
6401434a:	sub    esp,0xc
6401434d:	mov    eax,ds:0x640521ac
64014352:	xor    eax,ebp
64014354:	mov    DWORD PTR [ebp-0x4],eax
64014357:	push   esi
64014358:	xor    esi,esi
6401435a:	cmp    ebx,esi
6401435c:	push   edi
6401435d:	jne    0x6401437d
6401435f:	call   0x64016663
64014364:	push   0x16
64014366:	pop    edi
64014367:	push   esi
64014368:	push   esi
64014369:	push   esi
6401436a:	push   esi
6401436b:	push   esi
6401436c:	mov    DWORD PTR [eax],edi
6401436e:	call   0x64013df2
64014373:	add    esp,0x14
64014376:	mov    eax,edi
64014378:	jmp    0x640144bd
6401437d:	push   DWORD PTR [ebp+0x8]
64014380:	push   ebx
64014381:	call   0x6401968f
64014386:	cmp    eax,DWORD PTR [ebp+0x8]
64014389:	pop    ecx
6401438a:	pop    ecx
6401438b:	jb     0x64014392
6401438d:	mov    WORD PTR [ebx],si
64014390:	jmp    0x6401435f
64014392:	mov    edx,DWORD PTR [ebp+0xc]
64014395:	mov    eax,DWORD PTR [edx]
64014397:	mov    ecx,DWORD PTR [eax+0x14]
6401439a:	cmp    ecx,esi
6401439c:	jne    0x640143c8
6401439e:	cmp    WORD PTR [ebx],si
640143a1:	mov    eax,ebx
640143a3:	je     0x640143c1
640143a5:	movzx  ecx,WORD PTR [eax]
640143a8:	cmp    cx,0x41
640143ac:	jb     0x640143ba
640143ae:	cmp    cx,0x5a
640143b2:	ja     0x640143ba
640143b4:	add    ecx,0x20
640143b7:	mov    WORD PTR [eax],cx
640143ba:	inc    eax
640143bb:	inc    eax
640143bc:	cmp    WORD PTR [eax],si
640143bf:	jne    0x640143a5
640143c1:	xor    eax,eax
640143c3:	jmp    0x640144bd
640143c8:	push   DWORD PTR [eax+0x4]
640143cb:	mov    edi,0x100
640143d0:	push   esi
640143d1:	push   esi
640143d2:	push   0xffffffff
640143d4:	push   ebx
640143d5:	push   edi
640143d6:	push   ecx
640143d7:	push   edx
640143d8:	call   0x6401964f
640143dd:	mov    ecx,eax
640143df:	add    esp,0x20
640143e2:	cmp    ecx,esi
640143e4:	mov    DWORD PTR [ebp-0xc],ecx
640143e7:	jne    0x64014400
640143e9:	call   0x64016663
640143ee:	mov    DWORD PTR [eax],0x2a
640143f4:	call   0x64016663
640143f9:	mov    eax,DWORD PTR [eax]
640143fb:	jmp    0x640144bd
64014400:	cmp    DWORD PTR [ebp+0x8],ecx
64014403:	jae    0x64014414
64014405:	mov    WORD PTR [ebx],si
64014408:	call   0x64016663
6401440d:	push   0x22
6401440f:	jmp    0x64014366
64014414:	cmp    ecx,esi
64014416:	jle    0x6401445e
64014418:	push   0xffffffe0
6401441a:	xor    edx,edx
6401441c:	pop    eax
6401441d:	div    ecx
6401441f:	cmp    eax,0x2
64014422:	jb     0x6401445e
64014424:	lea    eax,[ecx+ecx*1+0x8]
64014428:	cmp    eax,0x400
6401442d:	ja     0x64014442
6401442f:	call   0x64013cc0
64014434:	mov    eax,esp
64014436:	cmp    eax,esi
64014438:	je     0x64014456
6401443a:	mov    DWORD PTR [eax],0xcccc
64014440:	jmp    0x64014453
64014442:	push   eax
64014443:	call   0x6401485e
64014448:	cmp    eax,esi
6401444a:	pop    ecx
6401444b:	je     0x64014456
6401444d:	mov    DWORD PTR [eax],0xdddd
64014453:	add    eax,0x8
64014456:	mov    ecx,DWORD PTR [ebp-0xc]
64014459:	mov    DWORD PTR [ebp-0x8],eax
6401445c:	jmp    0x64014461
6401445e:	mov    DWORD PTR [ebp-0x8],esi
64014461:	cmp    DWORD PTR [ebp-0x8],esi
64014464:	jne    0x64014473
64014466:	call   0x64016663
6401446b:	mov    DWORD PTR [eax],0xc
64014471:	jmp    0x640143f4
64014473:	mov    edx,DWORD PTR [ebp+0xc]
64014476:	mov    eax,DWORD PTR [edx]
64014478:	push   DWORD PTR [eax+0x4]
6401447b:	push   ecx
6401447c:	push   DWORD PTR [ebp-0x8]
6401447f:	push   0xffffffff
64014481:	push   ebx
64014482:	push   edi
64014483:	push   DWORD PTR [eax+0x14]
64014486:	push   edx
64014487:	call   0x6401964f
6401448c:	add    esp,0x20
6401448f:	test   eax,eax
64014491:	je     0x640144a6
64014493:	push   DWORD PTR [ebp-0x8]
64014496:	push   DWORD PTR [ebp+0x8]
64014499:	push   ebx
6401449a:	call   0x6401550f
6401449f:	add    esp,0xc
640144a2:	mov    esi,eax
640144a4:	jmp    0x640144b2
640144a6:	call   0x64016663
640144ab:	push   0x2a
640144ad:	pop    ecx
640144ae:	mov    DWORD PTR [eax],ecx
640144b0:	mov    esi,ecx
640144b2:	push   DWORD PTR [ebp-0x8]
640144b5:	call   0x640142aa
640144ba:	pop    ecx
640144bb:	mov    eax,esi
640144bd:	lea    esp,[ebp-0x14]
640144c0:	pop    edi
640144c1:	pop    esi
640144c2:	mov    ecx,DWORD PTR [ebp-0x4]
640144c5:	xor    ecx,ebp
640144c7:	call   0x64013ca6
640144cc:	leave  
640144cd:	ret    
640144ce:	push   ebp
640144cf:	mov    ebp,esp
640144d1:	sub    esp,0x10
640144d4:	push   ebx
640144d5:	push   DWORD PTR [ebp+0x10]
640144d8:	lea    ecx,[ebp-0x10]
640144db:	call   0x640142c5
640144e0:	mov    ebx,DWORD PTR [ebp+0x8]
640144e3:	lea    eax,[ebp-0x10]
640144e6:	push   eax
640144e7:	push   DWORD PTR [ebp+0xc]
640144ea:	call   0x64014347
640144ef:	cmp    BYTE PTR [ebp-0x4],0x0
640144f3:	pop    ecx
640144f4:	pop    ecx
640144f5:	pop    ebx
640144f6:	je     0x640144ff
640144f8:	mov    ecx,DWORD PTR [ebp-0x8]
640144fb:	and    DWORD PTR [ecx+0x70],0xfffffffd
640144ff:	leave  
64014500:	ret    
64014501:	push   0x0
64014503:	push   DWORD PTR [esp+0xc]
64014507:	push   DWORD PTR [esp+0xc]
6401450b:	call   0x640144ce
64014510:	add    esp,0xc
64014513:	ret    
64014514:	jmp    0x640135e4
64014519:	cmp    DWORD PTR [esp+0x8],0x0
6401451e:	je     0x64014526
64014520:	mov    BYTE PTR [ecx],0x2d
64014523:	inc    ecx
64014524:	neg    eax
64014526:	push   esi
64014527:	mov    esi,ecx
64014529:	xor    edx,edx
6401452b:	div    DWORD PTR [esp+0x8]
6401452f:	cmp    edx,0x9
64014532:	jbe    0x64014539
64014534:	add    dl,0x57
64014537:	jmp    0x6401453c
64014539:	add    dl,0x30
6401453c:	mov    BYTE PTR [ecx],dl
6401453e:	inc    ecx
6401453f:	test   eax,eax
64014541:	ja     0x64014529
64014543:	mov    BYTE PTR [ecx],0x0
64014546:	dec    ecx
64014547:	mov    dl,BYTE PTR [esi]
64014549:	mov    al,BYTE PTR [ecx]
6401454b:	mov    BYTE PTR [ecx],dl
6401454d:	dec    ecx
6401454e:	mov    BYTE PTR [esi],al
64014550:	inc    esi
64014551:	cmp    esi,ecx
64014553:	jb     0x64014547
64014555:	pop    esi
64014556:	ret    0x8
64014559:	push   ebp
6401455a:	mov    ebp,esp
6401455c:	xor    eax,eax
6401455e:	cmp    DWORD PTR [ebp+0x10],0xa
64014562:	jne    0x6401456a
64014564:	cmp    DWORD PTR [ebp+0x8],eax
64014567:	jge    0x6401456a
64014569:	inc    eax
6401456a:	mov    ecx,DWORD PTR [ebp+0xc]
6401456d:	push   eax
6401456e:	push   DWORD PTR [ebp+0x10]
64014571:	mov    eax,DWORD PTR [ebp+0x8]
64014574:	call   0x64014519
64014579:	mov    eax,DWORD PTR [ebp+0xc]
6401457c:	pop    ebp
6401457d:	ret    
6401457e:	push   ebx
6401457f:	push   esi
64014580:	mov    esi,DWORD PTR [esp+0xc]
64014584:	push   edi
64014585:	xor    edi,edi
64014587:	or     ebx,0xffffffff
6401458a:	cmp    esi,edi
6401458c:	jne    0x640145aa
6401458e:	call   0x64016663
64014593:	push   edi
64014594:	push   edi
64014595:	push   edi
64014596:	push   edi
64014597:	push   edi
64014598:	mov    DWORD PTR [eax],0x16
6401459e:	call   0x64013df2
640145a3:	add    esp,0x14
640145a6:	or     eax,ebx
640145a8:	jmp    0x640145ec
640145aa:	test   BYTE PTR [esi+0xc],0x83
640145ae:	je     0x640145e7
640145b0:	push   esi
640145b1:	call   0x64019de4
640145b6:	push   esi
640145b7:	mov    ebx,eax
640145b9:	call   0x64019db8
640145be:	push   esi
640145bf:	call   0x64019d8b
640145c4:	push   eax
640145c5:	call   0x64014b88
640145ca:	add    esp,0x10
640145cd:	test   eax,eax
640145cf:	jge    0x640145d6
640145d1:	or     ebx,0xffffffff
640145d4:	jmp    0x640145e7
640145d6:	mov    eax,DWORD PTR [esi+0x1c]
640145d9:	cmp    eax,edi
640145db:	je     0x640145e7
640145dd:	push   eax
640145de:	call   0x6401475f
640145e3:	pop    ecx
640145e4:	mov    DWORD PTR [esi+0x1c],edi
640145e7:	mov    DWORD PTR [esi+0xc],edi
640145ea:	mov    eax,ebx
640145ec:	pop    edi
640145ed:	pop    esi
640145ee:	pop    ebx
640145ef:	ret    
640145f0:	push   0xc
640145f2:	push   0x64043ad8
640145f7:	call   0x64016464
640145fc:	or     DWORD PTR [ebp-0x1c],0xffffffff
64014600:	xor    eax,eax
64014602:	mov    esi,DWORD PTR [ebp+0x8]
64014605:	xor    edi,edi
64014607:	cmp    esi,edi
64014609:	setne  al
6401460c:	cmp    eax,edi
6401460e:	jne    0x6401462d
64014610:	call   0x64016663
64014615:	mov    DWORD PTR [eax],0x16
6401461b:	push   edi
6401461c:	push   edi
6401461d:	push   edi
6401461e:	push   edi
6401461f:	push   edi
64014620:	call   0x64013df2
64014625:	add    esp,0x14
64014628:	or     eax,0xffffffff
6401462b:	jmp    0x64014639
6401462d:	test   BYTE PTR [esi+0xc],0x40
64014631:	je     0x6401463f
64014633:	mov    DWORD PTR [esi+0xc],edi
64014636:	mov    eax,DWORD PTR [ebp-0x1c]
64014639:	call   0x640164a9
6401463e:	ret    
6401463f:	push   esi
64014640:	call   0x64019b6c
64014645:	pop    ecx
64014646:	mov    DWORD PTR [ebp-0x4],edi
64014649:	push   esi
6401464a:	call   0x6401457e
6401464f:	pop    ecx
64014650:	mov    DWORD PTR [ebp-0x1c],eax
64014653:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401465a:	call   0x64014664
6401465f:	jmp    0x64014636
64014661:	mov    esi,DWORD PTR [ebp+0x8]
64014664:	push   esi
64014665:	call   0x64019bd6
6401466a:	pop    ecx
6401466b:	ret    
6401466c:	push   ebp
6401466d:	mov    ebp,esp
6401466f:	sub    esp,0x20
64014672:	push   ebx
64014673:	xor    ebx,ebx
64014675:	cmp    DWORD PTR [ebp+0xc],ebx
64014678:	jne    0x64014697
6401467a:	call   0x64016663
6401467f:	push   ebx
64014680:	push   ebx
64014681:	push   ebx
64014682:	push   ebx
64014683:	push   ebx
64014684:	mov    DWORD PTR [eax],0x16
6401468a:	call   0x64013df2
6401468f:	add    esp,0x14
64014692:	or     eax,0xffffffff
64014695:	jmp    0x640146e4
64014697:	mov    eax,DWORD PTR [ebp+0x8]
6401469a:	cmp    eax,ebx
6401469c:	je     0x6401467a
6401469e:	push   esi
6401469f:	mov    DWORD PTR [ebp-0x18],eax
640146a2:	mov    DWORD PTR [ebp-0x20],eax
640146a5:	lea    eax,[ebp+0x10]
640146a8:	push   eax
640146a9:	push   ebx
640146aa:	push   DWORD PTR [ebp+0xc]
640146ad:	lea    eax,[ebp-0x20]
640146b0:	push   eax
640146b1:	mov    DWORD PTR [ebp-0x1c],0x7fffffff
640146b8:	mov    DWORD PTR [ebp-0x14],0x42
640146bf:	call   0x6401a16c
640146c4:	add    esp,0x10
640146c7:	dec    DWORD PTR [ebp-0x1c]
640146ca:	mov    esi,eax
640146cc:	js     0x640146d5
640146ce:	mov    eax,DWORD PTR [ebp-0x20]
640146d1:	mov    BYTE PTR [eax],bl
640146d3:	jmp    0x640146e1
640146d5:	lea    eax,[ebp-0x20]
640146d8:	push   eax
640146d9:	push   ebx
640146da:	call   0x64019f6b
640146df:	pop    ecx
640146e0:	pop    ecx
640146e1:	mov    eax,esi
640146e3:	pop    esi
640146e4:	pop    ebx
640146e5:	leave  
640146e6:	ret    
640146e7:	push   ebp
640146e8:	mov    ebp,esp
640146ea:	sub    esp,0x10
640146ed:	push   DWORD PTR [ebp+0xc]
640146f0:	lea    ecx,[ebp-0x10]
640146f3:	call   0x640142c5
640146f8:	mov    eax,DWORD PTR [ebp-0x10]
640146fb:	cmp    DWORD PTR [eax+0xac],0x1
64014702:	jle    0x64014717
64014704:	lea    eax,[ebp-0x10]
64014707:	push   eax
64014708:	push   0x4
6401470a:	push   DWORD PTR [ebp+0x8]
6401470d:	call   0x6401ab00
64014712:	add    esp,0xc
64014715:	jmp    0x64014727
64014717:	mov    eax,DWORD PTR [eax+0xc8]
6401471d:	mov    ecx,DWORD PTR [ebp+0x8]
64014720:	movzx  eax,BYTE PTR [eax+ecx*2]
64014724:	and    eax,0x4
64014727:	cmp    BYTE PTR [ebp-0x4],0x0
6401472b:	je     0x64014734
6401472d:	mov    ecx,DWORD PTR [ebp-0x8]
64014730:	and    DWORD PTR [ecx+0x70],0xfffffffd
64014734:	leave  
64014735:	ret    
64014736:	cmp    DWORD PTR ds:0x64053a08,0x0
6401473d:	jne    0x64014751
6401473f:	mov    eax,DWORD PTR [esp+0x4]
64014743:	mov    ecx,DWORD PTR ds:0x64052b50
64014749:	movzx  eax,BYTE PTR [ecx+eax*2]
6401474d:	and    eax,0x4
64014750:	ret    
64014751:	push   0x0
64014753:	push   DWORD PTR [esp+0x8]
64014757:	call   0x640146e7
6401475c:	pop    ecx
6401475d:	pop    ecx
6401475e:	ret    
6401475f:	push   0xc
64014761:	push   0x64043af8
64014766:	call   0x64016464
6401476b:	mov    esi,DWORD PTR [ebp+0x8]
6401476e:	test   esi,esi
64014770:	je     0x640147e7
64014772:	cmp    DWORD PTR ds:0x640556a4,0x3
64014779:	jne    0x640147be
6401477b:	push   0x4
6401477d:	call   0x6401b42a
64014782:	pop    ecx
64014783:	and    DWORD PTR [ebp-0x4],0x0
64014787:	push   esi
64014788:	call   0x6401b4a3
6401478d:	pop    ecx
6401478e:	mov    DWORD PTR [ebp-0x1c],eax
64014791:	test   eax,eax
64014793:	je     0x6401479e
64014795:	push   esi
64014796:	push   eax
64014797:	call   0x6401b4ce
6401479c:	pop    ecx
6401479d:	pop    ecx
6401479e:	mov    DWORD PTR [ebp-0x4],0xfffffffe
640147a5:	call   0x640147b5
640147aa:	cmp    DWORD PTR [ebp-0x1c],0x0
640147ae:	jne    0x640147e7
640147b0:	push   DWORD PTR [ebp+0x8]
640147b3:	jmp    0x640147bf
640147b5:	push   0x4
640147b7:	call   0x6401b352
640147bc:	pop    ecx
640147bd:	ret    
640147be:	push   esi
640147bf:	push   0x0
640147c1:	push   DWORD PTR ds:0x64053eb4
640147c7:	call   DWORD PTR ds:0x6402c198
640147cd:	test   eax,eax
640147cf:	jne    0x640147e7
640147d1:	call   0x64016663
640147d6:	mov    esi,eax
640147d8:	call   DWORD PTR ds:0x6402c06c
640147de:	push   eax
640147df:	call   0x64016628
640147e4:	mov    DWORD PTR [esi],eax
640147e6:	pop    ecx
640147e7:	call   0x640164a9
640147ec:	ret    
640147ed:	mov    eax,DWORD PTR [esp+0x4]
640147f1:	mov    dx,WORD PTR [esp+0x8]
640147f6:	jmp    0x640147ff
640147f8:	cmp    cx,dx
640147fb:	je     0x6401480e
640147fd:	inc    eax
640147fe:	inc    eax
640147ff:	movzx  ecx,WORD PTR [eax]
64014802:	test   cx,cx
64014805:	jne    0x640147f8
64014807:	cmp    WORD PTR [eax],dx
6401480a:	je     0x6401480e
6401480c:	xor    eax,eax
6401480e:	ret    
6401480f:	push   0xc
64014811:	push   0x64043b18
64014816:	call   0x64016464
6401481b:	and    DWORD PTR [ebp-0x1c],0x0
6401481f:	mov    esi,DWORD PTR [ebp+0x8]
64014822:	cmp    esi,DWORD PTR ds:0x64054680
64014828:	ja     0x6401484c
6401482a:	push   0x4
6401482c:	call   0x6401b42a
64014831:	pop    ecx
64014832:	and    DWORD PTR [ebp-0x4],0x0
64014836:	push   esi
64014837:	call   0x6401bc77
6401483c:	pop    ecx
6401483d:	mov    DWORD PTR [ebp-0x1c],eax
64014840:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64014847:	call   0x64014855
6401484c:	mov    eax,DWORD PTR [ebp-0x1c]
6401484f:	call   0x640164a9
64014854:	ret    
64014855:	push   0x4
64014857:	call   0x6401b352
6401485c:	pop    ecx
6401485d:	ret    
6401485e:	push   ebp
6401485f:	mov    ebp,DWORD PTR [esp+0x8]
64014863:	cmp    ebp,0xffffffe0
64014866:	ja     0x6401490b
6401486c:	push   ebx
6401486d:	mov    ebx,DWORD PTR ds:0x6402c194
64014873:	push   esi
64014874:	push   edi
64014875:	xor    esi,esi
64014877:	cmp    DWORD PTR ds:0x64053eb4,esi
6401487d:	mov    edi,ebp
6401487f:	jne    0x64014899
64014881:	call   0x6401c12d
64014886:	push   0x1e
64014888:	call   0x6401bf8d
6401488d:	push   0xff
64014892:	call   0x64018000
64014897:	pop    ecx
64014898:	pop    ecx
64014899:	mov    eax,ds:0x640556a4
6401489e:	cmp    eax,0x1
640148a1:	jne    0x640148b1
640148a3:	cmp    ebp,esi
640148a5:	je     0x640148ab
640148a7:	mov    eax,ebp
640148a9:	jmp    0x640148ae
640148ab:	xor    eax,eax
640148ad:	inc    eax
640148ae:	push   eax
640148af:	jmp    0x640148cf
640148b1:	cmp    eax,0x3
640148b4:	jne    0x640148c1
640148b6:	push   ebp
640148b7:	call   0x6401480f
640148bc:	cmp    eax,esi
640148be:	pop    ecx
640148bf:	jne    0x640148d8
640148c1:	cmp    ebp,esi
640148c3:	jne    0x640148c8
640148c5:	xor    edi,edi
640148c7:	inc    edi
640148c8:	add    edi,0xf
640148cb:	and    edi,0xfffffff0
640148ce:	push   edi
640148cf:	push   esi
640148d0:	push   DWORD PTR ds:0x64053eb4
640148d6:	call   ebx
640148d8:	mov    esi,eax
640148da:	test   esi,esi
640148dc:	jne    0x64014904
640148de:	cmp    DWORD PTR ds:0x6405436c,eax
640148e4:	push   0xc
640148e6:	pop    edi
640148e7:	je     0x640148f6
640148e9:	push   ebp
640148ea:	call   0x64016a1f
640148ef:	test   eax,eax
640148f1:	pop    ecx
640148f2:	jne    0x64014875
640148f4:	jmp    0x640148fd
640148f6:	call   0x64016663
640148fb:	mov    DWORD PTR [eax],edi
640148fd:	call   0x64016663
64014902:	mov    DWORD PTR [eax],edi
64014904:	pop    edi
64014905:	mov    eax,esi
64014907:	pop    esi
64014908:	pop    ebx
64014909:	pop    ebp
6401490a:	ret    
6401490b:	push   ebp
6401490c:	call   0x64016a1f
64014911:	pop    ecx
64014912:	call   0x64016663
64014917:	mov    DWORD PTR [eax],0xc
6401491d:	xor    eax,eax
6401491f:	pop    ebp
64014920:	ret    
64014921:	push   ebp
64014922:	mov    ebp,esp
64014924:	sub    esp,0x10
64014927:	push   ebx
64014928:	push   esi
64014929:	push   DWORD PTR [ebp+0x10]
6401492c:	lea    ecx,[ebp-0x10]
6401492f:	call   0x640142c5
64014934:	mov    ebx,DWORD PTR [ebp+0x8]
64014937:	xor    esi,esi
64014939:	cmp    ebx,esi
6401493b:	jne    0x6401496c
6401493d:	call   0x64016663
64014942:	push   esi
64014943:	push   esi
64014944:	push   esi
64014945:	push   esi
64014946:	push   esi
64014947:	mov    DWORD PTR [eax],0x16
6401494d:	call   0x64013df2
64014952:	add    esp,0x14
64014955:	cmp    BYTE PTR [ebp-0x4],0x0
64014959:	je     0x64014962
6401495b:	mov    eax,DWORD PTR [ebp-0x8]
6401495e:	and    DWORD PTR [eax+0x70],0xfffffffd
64014962:	mov    eax,0x7fffffff
64014967:	jmp    0x64014a2c
6401496c:	push   edi
6401496d:	mov    edi,DWORD PTR [ebp+0xc]
64014970:	cmp    edi,esi
64014972:	jne    0x640149a3
64014974:	call   0x64016663
64014979:	push   esi
6401497a:	push   esi
6401497b:	push   esi
6401497c:	push   esi
6401497d:	push   esi
6401497e:	mov    DWORD PTR [eax],0x16
64014984:	call   0x64013df2
64014989:	add    esp,0x14
6401498c:	cmp    BYTE PTR [ebp-0x4],0x0
64014990:	je     0x64014999
64014992:	mov    eax,DWORD PTR [ebp-0x8]
64014995:	and    DWORD PTR [eax+0x70],0xfffffffd
64014999:	mov    eax,0x7fffffff
6401499e:	jmp    0x64014a2b
640149a3:	mov    eax,DWORD PTR [ebp-0x10]
640149a6:	cmp    DWORD PTR [eax+0x14],esi
640149a9:	jne    0x640149e5
640149ab:	movzx  eax,WORD PTR [ebx]
640149ae:	cmp    ax,0x41
640149b2:	jb     0x640149bd
640149b4:	cmp    ax,0x5a
640149b8:	ja     0x640149bd
640149ba:	add    eax,0x20
640149bd:	movzx  esi,ax
640149c0:	movzx  eax,WORD PTR [edi]
640149c3:	cmp    ax,0x41
640149c7:	jb     0x640149d2
640149c9:	cmp    ax,0x5a
640149cd:	ja     0x640149d2
640149cf:	add    eax,0x20
640149d2:	inc    ebx
640149d3:	inc    ebx
640149d4:	inc    edi
640149d5:	inc    edi
640149d6:	test   si,si
640149d9:	movzx  eax,ax
640149dc:	je     0x64014a16
640149de:	cmp    si,ax
640149e1:	je     0x640149ab
640149e3:	jmp    0x64014a16
640149e5:	movzx  eax,WORD PTR [ebx]
640149e8:	lea    ecx,[ebp-0x10]
640149eb:	push   ecx
640149ec:	push   eax
640149ed:	call   0x6401c166
640149f2:	movzx  esi,ax
640149f5:	movzx  eax,WORD PTR [edi]
640149f8:	lea    ecx,[ebp-0x10]
640149fb:	push   ecx
640149fc:	inc    ebx
640149fd:	push   eax
640149fe:	inc    ebx
640149ff:	call   0x6401c166
64014a04:	add    esp,0x10
64014a07:	inc    edi
64014a08:	inc    edi
64014a09:	test   si,si
64014a0c:	movzx  eax,ax
64014a0f:	je     0x64014a16
64014a11:	cmp    si,ax
64014a14:	je     0x640149e5
64014a16:	movzx  ecx,ax
64014a19:	movzx  eax,si
64014a1c:	sub    eax,ecx
64014a1e:	cmp    BYTE PTR [ebp-0x4],0x0
64014a22:	je     0x64014a2b
64014a24:	mov    ecx,DWORD PTR [ebp-0x8]
64014a27:	and    DWORD PTR [ecx+0x70],0xfffffffd
64014a2b:	pop    edi
64014a2c:	pop    esi
64014a2d:	pop    ebx
64014a2e:	leave  
64014a2f:	ret    
64014a30:	push   esi
64014a31:	xor    esi,esi
64014a33:	cmp    DWORD PTR ds:0x64053a08,esi
64014a39:	push   edi
64014a3a:	jne    0x64014aad
64014a3c:	mov    edi,DWORD PTR [esp+0xc]
64014a40:	cmp    edi,esi
64014a42:	jne    0x64014a63
64014a44:	call   0x64016663
64014a49:	push   esi
64014a4a:	push   esi
64014a4b:	push   esi
64014a4c:	push   esi
64014a4d:	push   esi
64014a4e:	mov    DWORD PTR [eax],0x16
64014a54:	call   0x64013df2
64014a59:	add    esp,0x14
64014a5c:	mov    eax,0x7fffffff
64014a61:	jmp    0x64014abe
64014a63:	mov    edx,DWORD PTR [esp+0x10]
64014a67:	cmp    edx,esi
64014a69:	je     0x64014a44
64014a6b:	movzx  eax,WORD PTR [edi]
64014a6e:	cmp    ax,0x41
64014a72:	jb     0x64014a7d
64014a74:	cmp    ax,0x5a
64014a78:	ja     0x64014a7d
64014a7a:	add    eax,0x20
64014a7d:	movzx  ecx,ax
64014a80:	movzx  eax,WORD PTR [edx]
64014a83:	cmp    ax,0x41
64014a87:	jb     0x64014a92
64014a89:	cmp    ax,0x5a
64014a8d:	ja     0x64014a92
64014a8f:	add    eax,0x20
64014a92:	inc    edi
64014a93:	inc    edi
64014a94:	inc    edx
64014a95:	inc    edx
64014a96:	cmp    cx,si
64014a99:	movzx  eax,ax
64014a9c:	je     0x64014aa3
64014a9e:	cmp    cx,ax
64014aa1:	je     0x64014a6b
64014aa3:	movzx  edx,ax
64014aa6:	movzx  eax,cx
64014aa9:	sub    eax,edx
64014aab:	jmp    0x64014abe
64014aad:	push   esi
64014aae:	push   DWORD PTR [esp+0x14]
64014ab2:	push   DWORD PTR [esp+0x14]
64014ab6:	call   0x64014921
64014abb:	add    esp,0xc
64014abe:	pop    edi
64014abf:	pop    esi
64014ac0:	ret    
64014ac1:	mov    eax,DWORD PTR [esp+0x4]
64014ac5:	mov    edx,eax
64014ac7:	mov    cx,WORD PTR [eax]
64014aca:	inc    eax
64014acb:	inc    eax
64014acc:	test   cx,cx
64014acf:	jne    0x64014ac7
64014ad1:	mov    cx,WORD PTR [esp+0x8]
64014ad6:	dec    eax
64014ad7:	dec    eax
64014ad8:	cmp    eax,edx
64014ada:	je     0x64014ae1
64014adc:	cmp    WORD PTR [eax],cx
64014adf:	jne    0x64014ad6
64014ae1:	mov    dx,WORD PTR [eax]
64014ae4:	sub    dx,cx
64014ae7:	neg    dx
64014aea:	sbb    edx,edx
64014aec:	not    edx
64014aee:	and    eax,edx
64014af0:	ret    
64014af1:	push   esi
64014af2:	mov    esi,DWORD PTR [esp+0x8]
64014af6:	push   edi
64014af7:	push   esi
64014af8:	call   0x640198c8
64014afd:	cmp    eax,0xffffffff
64014b00:	pop    ecx
64014b01:	je     0x64014b53
64014b03:	cmp    esi,0x1
64014b06:	mov    eax,ds:0x640556c0
64014b0b:	jne    0x64014b16
64014b0d:	test   BYTE PTR [eax+0x84],0x1
64014b14:	jne    0x64014b21
64014b16:	cmp    esi,0x2
64014b19:	jne    0x64014b37
64014b1b:	test   BYTE PTR [eax+0x44],0x1
64014b1f:	je     0x64014b37
64014b21:	push   0x2
64014b23:	call   0x640198c8
64014b28:	push   0x1
64014b2a:	mov    edi,eax
64014b2c:	call   0x640198c8
64014b31:	cmp    eax,edi
64014b33:	pop    ecx
64014b34:	pop    ecx
64014b35:	je     0x64014b53
64014b37:	push   esi
64014b38:	call   0x640198c8
64014b3d:	pop    ecx
64014b3e:	push   eax
64014b3f:	call   DWORD PTR ds:0x6402c078
64014b45:	test   eax,eax
64014b47:	jne    0x64014b53
64014b49:	call   DWORD PTR ds:0x6402c06c
64014b4f:	mov    edi,eax
64014b51:	jmp    0x64014b55
64014b53:	xor    edi,edi
64014b55:	push   esi
64014b56:	call   0x64019847
64014b5b:	mov    eax,esi
64014b5d:	sar    eax,0x5
64014b60:	mov    eax,DWORD PTR [eax*4+0x640556c0]
64014b67:	and    esi,0x1f
64014b6a:	shl    esi,0x6
64014b6d:	test   edi,edi
64014b6f:	pop    ecx
64014b70:	mov    BYTE PTR [eax+esi*1+0x4],0x0
64014b75:	je     0x64014b83
64014b77:	push   edi
64014b78:	call   0x64016689
64014b7d:	pop    ecx
64014b7e:	or     eax,0xffffffff
64014b81:	jmp    0x64014b85
64014b83:	xor    eax,eax
64014b85:	pop    edi
64014b86:	pop    esi
64014b87:	ret    
64014b88:	push   0x10
64014b8a:	push   0x64043b38
64014b8f:	call   0x64016464
64014b94:	mov    eax,DWORD PTR [ebp+0x8]
64014b97:	cmp    eax,0xfffffffe
64014b9a:	jne    0x64014bb7
64014b9c:	call   0x64016676
64014ba1:	and    DWORD PTR [eax],0x0
64014ba4:	call   0x64016663
64014ba9:	mov    DWORD PTR [eax],0x9
64014baf:	or     eax,0xffffffff
64014bb2:	jmp    0x64014c45
64014bb7:	xor    edi,edi
64014bb9:	cmp    eax,edi
64014bbb:	jl     0x64014bc5
64014bbd:	cmp    eax,DWORD PTR ds:0x640556a8
64014bc3:	jb     0x64014be6
64014bc5:	call   0x64016676
64014bca:	mov    DWORD PTR [eax],edi
64014bcc:	call   0x64016663
64014bd1:	mov    DWORD PTR [eax],0x9
64014bd7:	push   edi
64014bd8:	push   edi
64014bd9:	push   edi
64014bda:	push   edi
64014bdb:	push   edi
64014bdc:	call   0x64013df2
64014be1:	add    esp,0x14
64014be4:	jmp    0x64014baf
64014be6:	mov    ecx,eax
64014be8:	sar    ecx,0x5
64014beb:	lea    ebx,[ecx*4+0x640556c0]
64014bf2:	mov    esi,eax
64014bf4:	and    esi,0x1f
64014bf7:	shl    esi,0x6
64014bfa:	mov    ecx,DWORD PTR [ebx]
64014bfc:	movzx  ecx,BYTE PTR [ecx+esi*1+0x4]
64014c01:	and    ecx,0x1
64014c04:	je     0x64014bc5
64014c06:	push   eax
64014c07:	call   0x64019939
64014c0c:	pop    ecx
64014c0d:	mov    DWORD PTR [ebp-0x4],edi
64014c10:	mov    eax,DWORD PTR [ebx]
64014c12:	test   BYTE PTR [eax+esi*1+0x4],0x1
64014c17:	je     0x64014c27
64014c19:	push   DWORD PTR [ebp+0x8]
64014c1c:	call   0x64014af1
64014c21:	pop    ecx
64014c22:	mov    DWORD PTR [ebp-0x1c],eax
64014c25:	jmp    0x64014c36
64014c27:	call   0x64016663
64014c2c:	mov    DWORD PTR [eax],0x9
64014c32:	or     DWORD PTR [ebp-0x1c],0xffffffff
64014c36:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64014c3d:	call   0x64014c4b
64014c42:	mov    eax,DWORD PTR [ebp-0x1c]
64014c45:	call   0x640164a9
64014c4a:	ret    
64014c4b:	push   DWORD PTR [ebp+0x8]
64014c4e:	call   0x640199d9
64014c53:	pop    ecx
64014c54:	ret    
64014c55:	push   ebp
64014c56:	mov    ebp,esp
64014c58:	sub    esp,0x18
64014c5b:	push   ebx
64014c5c:	push   esi
64014c5d:	push   DWORD PTR [ebp+0xc]
64014c60:	lea    ecx,[ebp-0x18]
64014c63:	call   0x640142c5
64014c68:	mov    ebx,DWORD PTR [ebp+0x8]
64014c6b:	mov    esi,0x100
64014c70:	cmp    ebx,esi
64014c72:	jae    0x64014cc8
64014c74:	mov    ecx,DWORD PTR [ebp-0x18]
64014c77:	cmp    DWORD PTR [ecx+0xac],0x1
64014c7e:	jle    0x64014c94
64014c80:	lea    eax,[ebp-0x18]
64014c83:	push   eax
64014c84:	push   0x1
64014c86:	push   ebx
64014c87:	call   0x6401ab00
64014c8c:	mov    ecx,DWORD PTR [ebp-0x18]
64014c8f:	add    esp,0xc
64014c92:	jmp    0x64014ca1
64014c94:	mov    eax,DWORD PTR [ecx+0xc8]
64014c9a:	movzx  eax,BYTE PTR [eax+ebx*2]
64014c9e:	and    eax,0x1
64014ca1:	test   eax,eax
64014ca3:	je     0x64014cb4
64014ca5:	mov    eax,DWORD PTR [ecx+0xcc]
64014cab:	movzx  eax,BYTE PTR [eax+ebx*1]
64014caf:	jmp    0x64014d5b
64014cb4:	cmp    BYTE PTR [ebp-0xc],0x0
64014cb8:	je     0x64014cc1
64014cba:	mov    eax,DWORD PTR [ebp-0x10]
64014cbd:	and    DWORD PTR [eax+0x70],0xfffffffd
64014cc1:	mov    eax,ebx
64014cc3:	jmp    0x64014d68
64014cc8:	mov    eax,DWORD PTR [ebp-0x18]
64014ccb:	cmp    DWORD PTR [eax+0xac],0x1
64014cd2:	jle    0x64014d05
64014cd4:	mov    DWORD PTR [ebp+0x8],ebx
64014cd7:	sar    DWORD PTR [ebp+0x8],0x8
64014cdb:	lea    eax,[ebp-0x18]
64014cde:	push   eax
64014cdf:	mov    eax,DWORD PTR [ebp+0x8]
64014ce2:	and    eax,0xff
64014ce7:	push   eax
64014ce8:	call   0x640150b7
64014ced:	test   eax,eax
64014cef:	pop    ecx
64014cf0:	pop    ecx
64014cf1:	je     0x64014d05
64014cf3:	mov    al,BYTE PTR [ebp+0x8]
64014cf6:	push   0x2
64014cf8:	mov    BYTE PTR [ebp-0x4],al
64014cfb:	mov    BYTE PTR [ebp-0x3],bl
64014cfe:	mov    BYTE PTR [ebp-0x2],0x0
64014d02:	pop    ecx
64014d03:	jmp    0x64014d1a
64014d05:	call   0x64016663
64014d0a:	mov    DWORD PTR [eax],0x2a
64014d10:	xor    ecx,ecx
64014d12:	mov    BYTE PTR [ebp-0x4],bl
64014d15:	mov    BYTE PTR [ebp-0x3],0x0
64014d19:	inc    ecx
64014d1a:	mov    eax,DWORD PTR [ebp-0x18]
64014d1d:	push   0x1
64014d1f:	push   DWORD PTR [eax+0x4]
64014d22:	lea    edx,[ebp-0x8]
64014d25:	push   0x3
64014d27:	push   edx
64014d28:	push   ecx
64014d29:	lea    ecx,[ebp-0x4]
64014d2c:	push   ecx
64014d2d:	push   esi
64014d2e:	push   DWORD PTR [eax+0x14]
64014d31:	lea    eax,[ebp-0x18]
64014d34:	push   eax
64014d35:	call   0x6401623c
64014d3a:	add    esp,0x24
64014d3d:	test   eax,eax
64014d3f:	je     0x64014cb4
64014d45:	cmp    eax,0x1
64014d48:	jne    0x64014d50
64014d4a:	movzx  eax,BYTE PTR [ebp-0x8]
64014d4e:	jmp    0x64014d5b
64014d50:	movzx  ecx,BYTE PTR [ebp-0x7]
64014d54:	xor    eax,eax
64014d56:	mov    ah,BYTE PTR [ebp-0x8]
64014d59:	or     eax,ecx
64014d5b:	cmp    BYTE PTR [ebp-0xc],0x0
64014d5f:	je     0x64014d68
64014d61:	mov    ecx,DWORD PTR [ebp-0x10]
64014d64:	and    DWORD PTR [ecx+0x70],0xfffffffd
64014d68:	pop    esi
64014d69:	pop    ebx
64014d6a:	leave  
64014d6b:	ret    
64014d6c:	cmp    DWORD PTR ds:0x64053a08,0x0
64014d73:	jne    0x64014d85
64014d75:	mov    eax,DWORD PTR [esp+0x4]
64014d79:	lea    ecx,[eax-0x41]
64014d7c:	cmp    ecx,0x19
64014d7f:	ja     0x64014d92
64014d81:	add    eax,0x20
64014d84:	ret    
64014d85:	push   0x0
64014d87:	push   DWORD PTR [esp+0x8]
64014d8b:	call   0x64014c55
64014d90:	pop    ecx
64014d91:	pop    ecx
64014d92:	ret    
64014d93:	mov    ecx,DWORD PTR [esp+0xc]
64014d97:	test   ecx,ecx
64014d99:	push   esi
64014d9a:	push   edi
64014d9b:	mov    edi,DWORD PTR [esp+0xc]
64014d9f:	mov    esi,edi
64014da1:	je     0x64014dcb
64014da3:	mov    edx,DWORD PTR [esp+0x10]
64014da7:	movzx  eax,WORD PTR [edx]
64014daa:	mov    WORD PTR [edi],ax
64014dad:	inc    edi
64014dae:	inc    edi
64014daf:	inc    edx
64014db0:	inc    edx
64014db1:	test   ax,ax
64014db4:	je     0x64014db9
64014db6:	dec    ecx
64014db7:	jne    0x64014da7
64014db9:	test   ecx,ecx
64014dbb:	je     0x64014dcb
64014dbd:	dec    ecx
64014dbe:	je     0x64014dcb
64014dc0:	xor    eax,eax
64014dc2:	shr    ecx,1
64014dc4:	rep stos DWORD PTR es:[edi],eax
64014dc6:	adc    ecx,ecx
64014dc8:	rep stos WORD PTR es:[edi],ax
64014dcb:	pop    edi
64014dcc:	mov    eax,esi
64014dce:	pop    esi
64014dcf:	ret    
64014dd0:	push   ebp
64014dd1:	mov    ebp,esp
64014dd3:	cmp    DWORD PTR [ebp+0x14],0x0
64014dd7:	push   ebx
64014dd8:	mov    ebx,DWORD PTR [ebp+0x8]
64014ddb:	push   esi
64014ddc:	mov    esi,eax
64014dde:	mov    eax,DWORD PTR [ebp+0xc]
64014de1:	push   edi
64014de2:	je     0x64014df3
64014de4:	mov    WORD PTR [esi],0x2d
64014de9:	add    esi,0x2
64014dec:	neg    ebx
64014dee:	adc    eax,0x0
64014df1:	neg    eax
64014df3:	mov    edi,esi
64014df5:	xor    ecx,ecx
64014df7:	push   ecx
64014df8:	push   DWORD PTR [ebp+0x10]
64014dfb:	push   eax
64014dfc:	push   ebx
64014dfd:	call   0x64019a00
64014e02:	cmp    ecx,0x9
64014e05:	mov    DWORD PTR [ebp+0xc],ebx
64014e08:	mov    ebx,eax
64014e0a:	mov    eax,edx
64014e0c:	jbe    0x64014e13
64014e0e:	add    ecx,0x57
64014e11:	jmp    0x64014e16
64014e13:	add    ecx,0x30
64014e16:	mov    WORD PTR [esi],cx
64014e19:	inc    esi
64014e1a:	inc    esi
64014e1b:	test   eax,eax
64014e1d:	ja     0x64014df5
64014e1f:	jb     0x64014e25
64014e21:	test   ebx,ebx
64014e23:	ja     0x64014df5
64014e25:	and    WORD PTR [esi],0x0
64014e29:	dec    esi
64014e2a:	dec    esi
64014e2b:	mov    cx,WORD PTR [edi]
64014e2e:	movzx  eax,WORD PTR [esi]
64014e31:	mov    WORD PTR [esi],cx
64014e34:	dec    esi
64014e35:	mov    WORD PTR [edi],ax
64014e38:	dec    esi
64014e39:	inc    edi
64014e3a:	inc    edi
64014e3b:	cmp    edi,esi
64014e3d:	jb     0x64014e2b
64014e3f:	pop    edi
64014e40:	pop    esi
64014e41:	pop    ebx
64014e42:	pop    ebp
64014e43:	ret    0x10
64014e46:	push   ebp
64014e47:	mov    ebp,esp
64014e49:	xor    eax,eax
64014e4b:	cmp    DWORD PTR [ebp+0x14],0xa
64014e4f:	jne    0x64014e60
64014e51:	cmp    DWORD PTR [ebp+0xc],eax
64014e54:	jg     0x64014e60
64014e56:	jl     0x64014e5d
64014e58:	cmp    DWORD PTR [ebp+0x8],eax
64014e5b:	jae    0x64014e60
64014e5d:	xor    eax,eax
64014e5f:	inc    eax
64014e60:	push   eax
64014e61:	push   DWORD PTR [ebp+0x14]
64014e64:	mov    eax,DWORD PTR [ebp+0x10]
64014e67:	push   DWORD PTR [ebp+0xc]
64014e6a:	push   DWORD PTR [ebp+0x8]
64014e6d:	call   0x64014dd0
64014e72:	mov    eax,DWORD PTR [ebp+0x10]
64014e75:	pop    ebp
64014e76:	ret    
64014e77:	push   ebp
64014e78:	mov    ebp,esp
64014e7a:	sub    esp,0x20
64014e7d:	push   esi
64014e7e:	xor    esi,esi
64014e80:	cmp    DWORD PTR [ebp+0xc],esi
64014e83:	jne    0x64014ea2
64014e85:	call   0x64016663
64014e8a:	push   esi
64014e8b:	push   esi
64014e8c:	push   esi
64014e8d:	push   esi
64014e8e:	push   esi
64014e8f:	mov    DWORD PTR [eax],0x16
64014e95:	call   0x64013df2
64014e9a:	add    esp,0x14
64014e9d:	or     eax,0xffffffff
64014ea0:	jmp    0x64014ec9
64014ea2:	push   DWORD PTR [ebp+0x14]
64014ea5:	lea    eax,[ebp-0x20]
64014ea8:	push   DWORD PTR [ebp+0x10]
64014eab:	mov    DWORD PTR [ebp-0x1c],0x7fffffff
64014eb2:	push   DWORD PTR [ebp+0xc]
64014eb5:	mov    DWORD PTR [ebp-0x14],0x42
64014ebc:	push   eax
64014ebd:	mov    DWORD PTR [ebp-0x18],esi
64014ec0:	mov    DWORD PTR [ebp-0x20],esi
64014ec3:	call   DWORD PTR [ebp+0x8]
64014ec6:	add    esp,0x10
64014ec9:	pop    esi
64014eca:	leave  
64014ecb:	ret    
64014ecc:	push   DWORD PTR [esp+0x8]
64014ed0:	push   0x0
64014ed2:	push   DWORD PTR [esp+0xc]
64014ed6:	push   0x6401c314
64014edb:	call   0x64014e77
64014ee0:	add    esp,0x10
64014ee3:	ret    
64014ee4:	push   ebp
64014ee5:	mov    ebp,esp
64014ee7:	sub    esp,0x20
64014eea:	push   ebx
64014eeb:	xor    ebx,ebx
64014eed:	cmp    DWORD PTR [ebp+0x14],ebx
64014ef0:	jne    0x64014f12
64014ef2:	call   0x64016663
64014ef7:	push   ebx
64014ef8:	push   ebx
64014ef9:	push   ebx
64014efa:	push   ebx
64014efb:	push   ebx
64014efc:	mov    DWORD PTR [eax],0x16
64014f02:	call   0x64013df2
64014f07:	add    esp,0x14
64014f0a:	or     eax,0xffffffff
64014f0d:	jmp    0x64014fd7
64014f12:	push   esi
64014f13:	mov    esi,DWORD PTR [ebp+0xc]
64014f16:	push   edi
64014f17:	mov    edi,DWORD PTR [ebp+0x10]
64014f1a:	cmp    edi,ebx
64014f1c:	je     0x64014f42
64014f1e:	cmp    esi,ebx
64014f20:	jne    0x64014f42
64014f22:	call   0x64016663
64014f27:	push   ebx
64014f28:	push   ebx
64014f29:	push   ebx
64014f2a:	push   ebx
64014f2b:	push   ebx
64014f2c:	mov    DWORD PTR [eax],0x16
64014f32:	call   0x64013df2
64014f37:	add    esp,0x14
64014f3a:	or     eax,0xffffffff
64014f3d:	jmp    0x64014fd5
64014f42:	cmp    edi,0x3fffffff
64014f48:	mov    DWORD PTR [ebp-0x14],0x42
64014f4f:	mov    DWORD PTR [ebp-0x18],esi
64014f52:	mov    DWORD PTR [ebp-0x20],esi
64014f55:	jbe    0x64014f60
64014f57:	mov    DWORD PTR [ebp-0x1c],0x7fffffff
64014f5e:	jmp    0x64014f66
64014f60:	lea    eax,[edi+edi*1]
64014f63:	mov    DWORD PTR [ebp-0x1c],eax
64014f66:	push   DWORD PTR [ebp+0x1c]
64014f69:	lea    eax,[ebp-0x20]
64014f6c:	push   DWORD PTR [ebp+0x18]
64014f6f:	push   DWORD PTR [ebp+0x14]
64014f72:	push   eax
64014f73:	call   DWORD PTR [ebp+0x8]
64014f76:	add    esp,0x10
64014f79:	cmp    esi,ebx
64014f7b:	mov    DWORD PTR [ebp+0x14],eax
64014f7e:	je     0x64014fd5
64014f80:	cmp    eax,ebx
64014f82:	jl     0x64014fc6
64014f84:	dec    DWORD PTR [ebp-0x1c]
64014f87:	js     0x64014f93
64014f89:	mov    eax,DWORD PTR [ebp-0x20]
64014f8c:	mov    BYTE PTR [eax],bl
64014f8e:	inc    DWORD PTR [ebp-0x20]
64014f91:	jmp    0x64014fa4
64014f93:	lea    eax,[ebp-0x20]
64014f96:	push   eax
64014f97:	push   ebx
64014f98:	call   0x64019f6b
64014f9d:	cmp    eax,0xffffffff
64014fa0:	pop    ecx
64014fa1:	pop    ecx
64014fa2:	je     0x64014fc6
64014fa4:	dec    DWORD PTR [ebp-0x1c]
64014fa7:	js     0x64014fb0
64014fa9:	mov    eax,DWORD PTR [ebp-0x20]
64014fac:	mov    BYTE PTR [eax],bl
64014fae:	jmp    0x64014fc1
64014fb0:	lea    eax,[ebp-0x20]
64014fb3:	push   eax
64014fb4:	push   ebx
64014fb5:	call   0x64019f6b
64014fba:	cmp    eax,0xffffffff
64014fbd:	pop    ecx
64014fbe:	pop    ecx
64014fbf:	je     0x64014fc6
64014fc1:	mov    eax,DWORD PTR [ebp+0x14]
64014fc4:	jmp    0x64014fd5
64014fc6:	xor    eax,eax
64014fc8:	cmp    DWORD PTR [ebp-0x1c],ebx
64014fcb:	mov    WORD PTR [esi+edi*2-0x2],bx
64014fd0:	setge  al
64014fd3:	dec    eax
64014fd4:	dec    eax
64014fd5:	pop    edi
64014fd6:	pop    esi
64014fd7:	pop    ebx
64014fd8:	leave  
64014fd9:	ret    
64014fda:	push   ebp
64014fdb:	mov    ebp,esp
64014fdd:	push   esi
64014fde:	xor    esi,esi
64014fe0:	cmp    DWORD PTR [ebp+0x10],esi
64014fe3:	jne    0x64015002
64014fe5:	call   0x64016663
64014fea:	push   esi
64014feb:	push   esi
64014fec:	push   esi
64014fed:	push   esi
64014fee:	push   esi
64014fef:	mov    DWORD PTR [eax],0x16
64014ff5:	call   0x64013df2
64014ffa:	add    esp,0x14
64014ffd:	or     eax,0xffffffff
64015000:	jmp    0x6401505e
64015002:	push   edi
64015003:	mov    edi,DWORD PTR [ebp+0x8]
64015006:	cmp    edi,esi
64015008:	je     0x6401500f
6401500a:	cmp    DWORD PTR [ebp+0xc],esi
6401500d:	ja     0x6401501c
6401500f:	call   0x64016663
64015014:	mov    DWORD PTR [eax],0x16
6401501a:	jmp    0x6401504d
6401501c:	push   DWORD PTR [ebp+0x18]
6401501f:	push   DWORD PTR [ebp+0x14]
64015022:	push   DWORD PTR [ebp+0x10]
64015025:	push   DWORD PTR [ebp+0xc]
64015028:	push   edi
64015029:	push   0x6401ccbd
6401502e:	call   0x64014ee4
64015033:	add    esp,0x18
64015036:	cmp    eax,esi
64015038:	jge    0x6401503d
6401503a:	mov    WORD PTR [edi],si
6401503d:	cmp    eax,0xfffffffe
64015040:	jne    0x6401505d
64015042:	call   0x64016663
64015047:	mov    DWORD PTR [eax],0x22
6401504d:	push   esi
6401504e:	push   esi
6401504f:	push   esi
64015050:	push   esi
64015051:	push   esi
64015052:	call   0x64013df2
64015057:	add    esp,0x14
6401505a:	or     eax,0xffffffff
6401505d:	pop    edi
6401505e:	pop    esi
6401505f:	pop    ebp
64015060:	ret    
64015061:	push   DWORD PTR [esp+0x10]
64015065:	push   0x0
64015067:	push   DWORD PTR [esp+0x14]
6401506b:	push   DWORD PTR [esp+0x14]
6401506f:	push   DWORD PTR [esp+0x14]
64015073:	call   0x64014fda
64015078:	add    esp,0x14
6401507b:	ret    
6401507c:	push   0xa
6401507e:	push   0x0
64015080:	push   DWORD PTR [esp+0xc]
64015084:	call   0x6401d889
64015089:	add    esp,0xc
6401508c:	ret    
6401508d:	push   DWORD PTR ds:0x64054380
64015093:	call   0x640177ae
64015098:	test   eax,eax
6401509a:	pop    ecx
6401509b:	je     0x6401509f
6401509d:	call   eax
6401509f:	push   0x19
640150a1:	call   0x6401bf8d
640150a6:	push   0x1
640150a8:	push   0x0
640150aa:	call   0x64016445
640150af:	add    esp,0xc
640150b2:	jmp    0x64016352
640150b7:	push   ebp
640150b8:	mov    ebp,esp
640150ba:	sub    esp,0x10
640150bd:	push   DWORD PTR [ebp+0xc]
640150c0:	lea    ecx,[ebp-0x10]
640150c3:	call   0x640142c5
640150c8:	movzx  eax,BYTE PTR [ebp+0x8]
640150cc:	mov    ecx,DWORD PTR [ebp-0x10]
640150cf:	mov    ecx,DWORD PTR [ecx+0xc8]
640150d5:	movzx  eax,WORD PTR [ecx+eax*2]
640150d9:	and    eax,0x8000
640150de:	cmp    BYTE PTR [ebp-0x4],0x0
640150e2:	je     0x640150eb
640150e4:	mov    ecx,DWORD PTR [ebp-0x8]
640150e7:	and    DWORD PTR [ecx+0x70],0xfffffffd
640150eb:	leave  
640150ec:	ret    
640150ed:	push   0x0
640150ef:	push   DWORD PTR [esp+0x8]
640150f3:	call   0x640150b7
640150f8:	pop    ecx
640150f9:	pop    ecx
640150fa:	ret    
640150fb:	int3   
640150fc:	int3   
640150fd:	int3   
640150fe:	int3   
640150ff:	int3   
64015100:	mov    edx,DWORD PTR [esp+0xc]
64015104:	mov    ecx,DWORD PTR [esp+0x4]
64015108:	test   edx,edx
6401510a:	je     0x64015175
6401510c:	xor    eax,eax
6401510e:	mov    al,BYTE PTR [esp+0x8]
64015112:	test   al,al
64015114:	jne    0x6401512c
64015116:	cmp    edx,0x100
6401511c:	jb     0x6401512c
6401511e:	cmp    DWORD PTR ds:0x64054674,0x0
64015125:	je     0x6401512c
64015127:	jmp    0x6401d977
6401512c:	push   edi
6401512d:	mov    edi,ecx
6401512f:	cmp    edx,0x4
64015132:	jb     0x64015165
64015134:	neg    ecx
64015136:	and    ecx,0x3
64015139:	je     0x64015147
6401513b:	sub    edx,ecx
6401513d:	mov    BYTE PTR [edi],al
6401513f:	add    edi,0x1
64015142:	sub    ecx,0x1
64015145:	jne    0x6401513d
64015147:	mov    ecx,eax
64015149:	shl    eax,0x8
6401514c:	add    eax,ecx
6401514e:	mov    ecx,eax
64015150:	shl    eax,0x10
64015153:	add    eax,ecx
64015155:	mov    ecx,edx
64015157:	and    edx,0x3
6401515a:	shr    ecx,0x2
6401515d:	je     0x64015165
6401515f:	rep stos DWORD PTR es:[edi],eax
64015161:	test   edx,edx
64015163:	je     0x6401516f
64015165:	mov    BYTE PTR [edi],al
64015167:	add    edi,0x1
6401516a:	sub    edx,0x1
6401516d:	jne    0x64015165
6401516f:	mov    eax,DWORD PTR [esp+0x8]
64015173:	pop    edi
64015174:	ret    
64015175:	mov    eax,DWORD PTR [esp+0x4]
64015179:	ret    
6401517a:	int3   
6401517b:	int3   
6401517c:	int3   
6401517d:	int3   
6401517e:	int3   
6401517f:	int3   
64015180:	push   ebp
64015181:	mov    ebp,esp
64015183:	push   edi
64015184:	push   esi
64015185:	mov    esi,DWORD PTR [ebp+0xc]
64015188:	mov    ecx,DWORD PTR [ebp+0x10]
6401518b:	mov    edi,DWORD PTR [ebp+0x8]
6401518e:	mov    eax,ecx
64015190:	mov    edx,ecx
64015192:	add    eax,esi
64015194:	cmp    edi,esi
64015196:	jbe    0x640151a0
64015198:	cmp    edi,eax
6401519a:	jb     0x64015344
640151a0:	cmp    ecx,0x100
640151a6:	jb     0x640151c7
640151a8:	cmp    DWORD PTR ds:0x64054674,0x0
640151af:	je     0x640151c7
640151b1:	push   edi
640151b2:	push   esi
640151b3:	and    edi,0xf
640151b6:	and    esi,0xf
640151b9:	cmp    edi,esi
640151bb:	pop    esi
640151bc:	pop    edi
640151bd:	jne    0x640151c7
640151bf:	pop    esi
640151c0:	pop    edi
640151c1:	pop    ebp
640151c2:	jmp    0x6401daa1
640151c7:	test   edi,0x3
640151cd:	jne    0x640151e4
640151cf:	shr    ecx,0x2
640151d2:	and    edx,0x3
640151d5:	cmp    ecx,0x8
640151d8:	jb     0x64015204
640151da:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
640151dc:	jmp    DWORD PTR [edx*4+0x640152f4]
640151e3:	nop
640151e4:	mov    eax,edi
640151e6:	mov    edx,0x3
640151eb:	sub    ecx,0x4
640151ee:	jb     0x640151fc
640151f0:	and    eax,0x3
640151f3:	add    ecx,eax
640151f5:	jmp    DWORD PTR [eax*4+0x64015208]
640151fc:	jmp    DWORD PTR [ecx*4+0x64015304]
64015203:	nop
64015204:	jmp    DWORD PTR [ecx*4+0x64015288]
6401520b:	nop
6401520c:	sbb    BYTE PTR [edx+0x1],dl
6401520f:	fs inc esp
64015211:	push   edx
64015212:	add    DWORD PTR [eax+ebp*2+0x52],esp
64015216:	add    DWORD PTR [ebx+eiz*1-0x2f],esp
6401521a:	mov    al,BYTE PTR [esi]
6401521c:	mov    BYTE PTR [edi],al
6401521e:	mov    al,BYTE PTR [esi+0x1]
64015221:	mov    BYTE PTR [edi+0x1],al
64015224:	mov    al,BYTE PTR [esi+0x2]
64015227:	shr    ecx,0x2
6401522a:	mov    BYTE PTR [edi+0x2],al
6401522d:	add    esi,0x3
64015230:	add    edi,0x3
64015233:	cmp    ecx,0x8
64015236:	jb     0x64015204
64015238:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
6401523a:	jmp    DWORD PTR [edx*4+0x640152f4]
64015241:	lea    ecx,[ecx+0x0]
64015244:	and    edx,ecx
64015246:	mov    al,BYTE PTR [esi]
64015248:	mov    BYTE PTR [edi],al
6401524a:	mov    al,BYTE PTR [esi+0x1]
6401524d:	shr    ecx,0x2
64015250:	mov    BYTE PTR [edi+0x1],al
64015253:	add    esi,0x2
64015256:	add    edi,0x2
64015259:	cmp    ecx,0x8
6401525c:	jb     0x64015204
6401525e:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
64015260:	jmp    DWORD PTR [edx*4+0x640152f4]
64015267:	nop
64015268:	and    edx,ecx
6401526a:	mov    al,BYTE PTR [esi]
6401526c:	mov    BYTE PTR [edi],al
6401526e:	add    esi,0x1
64015271:	shr    ecx,0x2
64015274:	add    edi,0x1
64015277:	cmp    ecx,0x8
6401527a:	jb     0x64015204
6401527c:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
6401527e:	jmp    DWORD PTR [edx*4+0x640152f4]
64015285:	lea    ecx,[ecx+0x0]
64015288:	jmp    0x640152dc
6401528a:	add    DWORD PTR [eax+ebx*8+0x52],esp
6401528e:	add    DWORD PTR [eax+edx*8+0x52],esp
64015292:	add    DWORD PTR [eax+ecx*8+0x52],esp
64015296:	add    DWORD PTR [eax+eax*8+0x52],esp
6401529a:	add    DWORD PTR [eax+edi*4+0x52],esp
6401529e:	add    DWORD PTR [eax+esi*4+0x52],esp
640152a2:	add    DWORD PTR [eax+ebp*4+0x52],esp
640152a6:	add    DWORD PTR [ebx+ecx*4+0x44],esp
640152aa:	mov    fs,esp
640152ac:	mov    DWORD PTR [edi+ecx*4-0x1c],eax
640152b0:	mov    eax,DWORD PTR [esi+ecx*4-0x18]
640152b4:	mov    DWORD PTR [edi+ecx*4-0x18],eax
640152b8:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
640152bc:	mov    DWORD PTR [edi+ecx*4-0x14],eax
640152c0:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
640152c4:	mov    DWORD PTR [edi+ecx*4-0x10],eax
640152c8:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
640152cc:	mov    DWORD PTR [edi+ecx*4-0xc],eax
640152d0:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
640152d4:	mov    DWORD PTR [edi+ecx*4-0x8],eax
640152d8:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
640152dc:	mov    DWORD PTR [edi+ecx*4-0x4],eax
640152e0:	lea    eax,[ecx*4+0x0]
640152e7:	add    esi,eax
640152e9:	add    edi,eax
640152eb:	jmp    DWORD PTR [edx*4+0x640152f4]
640152f2:	mov    edi,edi
640152f4:	add    al,0x53
640152f6:	add    DWORD PTR [esp+ecx*1+0x53],esp
640152fa:	add    DWORD PTR [eax+ebx*1+0x53],esp
640152fe:	add    DWORD PTR [esp+ebp*1+0x53],esp
64015302:	add    DWORD PTR [ebx+ecx*4+0x45],esp
64015306:	or     BYTE PTR [esi+0x5f],bl
64015309:	leave  
6401530a:	ret    
6401530b:	nop
6401530c:	mov    al,BYTE PTR [esi]
6401530e:	mov    BYTE PTR [edi],al
64015310:	mov    eax,DWORD PTR [ebp+0x8]
64015313:	pop    esi
64015314:	pop    edi
64015315:	leave  
64015316:	ret    
64015317:	nop
64015318:	mov    al,BYTE PTR [esi]
6401531a:	mov    BYTE PTR [edi],al
6401531c:	mov    al,BYTE PTR [esi+0x1]
6401531f:	mov    BYTE PTR [edi+0x1],al
64015322:	mov    eax,DWORD PTR [ebp+0x8]
64015325:	pop    esi
64015326:	pop    edi
64015327:	leave  
64015328:	ret    
64015329:	lea    ecx,[ecx+0x0]
6401532c:	mov    al,BYTE PTR [esi]
6401532e:	mov    BYTE PTR [edi],al
64015330:	mov    al,BYTE PTR [esi+0x1]
64015333:	mov    BYTE PTR [edi+0x1],al
64015336:	mov    al,BYTE PTR [esi+0x2]
64015339:	mov    BYTE PTR [edi+0x2],al
6401533c:	mov    eax,DWORD PTR [ebp+0x8]
6401533f:	pop    esi
64015340:	pop    edi
64015341:	leave  
64015342:	ret    
64015343:	nop
64015344:	lea    esi,[ecx+esi*1-0x4]
64015348:	lea    edi,[ecx+edi*1-0x4]
6401534c:	test   edi,0x3
64015352:	jne    0x64015378
64015354:	shr    ecx,0x2
64015357:	and    edx,0x3
6401535a:	cmp    ecx,0x8
6401535d:	jb     0x6401536c
6401535f:	std    
64015360:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
64015362:	cld    
64015363:	jmp    DWORD PTR [edx*4+0x64015490]
6401536a:	mov    edi,edi
6401536c:	neg    ecx
6401536e:	jmp    DWORD PTR [ecx*4+0x64015440]
64015375:	lea    ecx,[ecx+0x0]
64015378:	mov    eax,edi
6401537a:	mov    edx,0x3
6401537f:	cmp    ecx,0x4
64015382:	jb     0x64015390
64015384:	and    eax,0x3
64015387:	sub    ecx,eax
64015389:	jmp    DWORD PTR [eax*4+0x64015394]
64015390:	jmp    DWORD PTR [ecx*4+0x64015490]
64015397:	nop
64015398:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
64015399:	push   ebx
6401539a:	add    DWORD PTR [eax+ecx*8+0x53],esp
6401539e:	add    DWORD PTR [eax+esi*8+0x53],esp
640153a2:	add    DWORD PTR [edx+ecx*4+0x46],esp
640153a6:	add    esp,DWORD PTR [ebx]
640153a8:	ror    DWORD PTR [eax-0x117cfcb9],1
640153ae:	add    ecx,eax
640153b0:	jmp    0x65f0d6b7
640153b5:	cmp    ecx,0x8
640153b8:	jb     0x6401536c
640153ba:	std    
640153bb:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
640153bd:	cld    
640153be:	jmp    DWORD PTR [edx*4+0x64015490]
640153c5:	lea    ecx,[ecx+0x0]
640153c8:	mov    al,BYTE PTR [esi+0x3]
640153cb:	and    edx,ecx
640153cd:	mov    BYTE PTR [edi+0x3],al
640153d0:	mov    al,BYTE PTR [esi+0x2]
640153d3:	shr    ecx,0x2
640153d6:	mov    BYTE PTR [edi+0x2],al
640153d9:	sub    esi,0x2
640153dc:	sub    edi,0x2
640153df:	cmp    ecx,0x8
640153e2:	jb     0x6401536c
640153e4:	std    
640153e5:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
640153e7:	cld    
640153e8:	jmp    DWORD PTR [edx*4+0x64015490]
640153ef:	nop
640153f0:	mov    al,BYTE PTR [esi+0x3]
640153f3:	and    edx,ecx
640153f5:	mov    BYTE PTR [edi+0x3],al
640153f8:	mov    al,BYTE PTR [esi+0x2]
640153fb:	mov    BYTE PTR [edi+0x2],al
640153fe:	mov    al,BYTE PTR [esi+0x1]
64015401:	shr    ecx,0x2
64015404:	mov    BYTE PTR [edi+0x1],al
64015407:	sub    esi,0x3
6401540a:	sub    edi,0x3
6401540d:	cmp    ecx,0x8
64015410:	jb     0x6401536c
64015416:	std    
64015417:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
64015419:	cld    
6401541a:	jmp    DWORD PTR [edx*4+0x64015490]
64015421:	lea    ecx,[ecx+0x0]
64015424:	inc    esp
64015425:	push   esp
64015426:	add    DWORD PTR [esp+ecx*2+0x54],esp
6401542a:	add    DWORD PTR [esp+edx*2+0x54],esp
6401542e:	add    DWORD PTR [esp+ebx*2+0x54],esp
64015432:	add    DWORD PTR [esp+eiz*2+0x54],esp
64015436:	add    DWORD PTR [esp+ebp*2+0x54],esp
6401543a:	add    DWORD PTR [esp+esi*2+0x54],esp
6401543e:	add    DWORD PTR [edi+eax*4+0x54],esp
64015442:	add    DWORD PTR [ebx+ecx*4+0x44],esp
64015446:	mov    ds,WORD PTR [ecx+ecx*4]
64015449:	inc    esp
6401544a:	(bad)  
6401544b:	sbb    al,0x8b
6401544d:	inc    esp
6401544e:	mov    ds,WORD PTR [eax]
64015450:	mov    DWORD PTR [edi+ecx*4+0x18],eax
64015454:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
64015458:	mov    DWORD PTR [edi+ecx*4+0x14],eax
6401545c:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
64015460:	mov    DWORD PTR [edi+ecx*4+0x10],eax
64015464:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
64015468:	mov    DWORD PTR [edi+ecx*4+0xc],eax
6401546c:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
64015470:	mov    DWORD PTR [edi+ecx*4+0x8],eax
64015474:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
64015478:	mov    DWORD PTR [edi+ecx*4+0x4],eax
6401547c:	lea    eax,[ecx*4+0x0]
64015483:	add    esi,eax
64015485:	add    edi,eax
64015487:	jmp    DWORD PTR [edx*4+0x64015490]
6401548e:	mov    edi,edi
64015490:	mov    al,ds:0xa8640154
64015495:	push   esp
64015496:	add    DWORD PTR [eax+edi*4+0x54],esp
6401549a:	add    DWORD PTR [esp+ecx*8+0x54],esp
6401549e:	add    DWORD PTR [ebx+ecx*4+0x45],esp
640154a2:	or     BYTE PTR [esi+0x5f],bl
640154a5:	leave  
640154a6:	ret    
640154a7:	nop
640154a8:	mov    al,BYTE PTR [esi+0x3]
640154ab:	mov    BYTE PTR [edi+0x3],al
640154ae:	mov    eax,DWORD PTR [ebp+0x8]
640154b1:	pop    esi
640154b2:	pop    edi
640154b3:	leave  
640154b4:	ret    
640154b5:	lea    ecx,[ecx+0x0]
640154b8:	mov    al,BYTE PTR [esi+0x3]
640154bb:	mov    BYTE PTR [edi+0x3],al
640154be:	mov    al,BYTE PTR [esi+0x2]
640154c1:	mov    BYTE PTR [edi+0x2],al
640154c4:	mov    eax,DWORD PTR [ebp+0x8]
640154c7:	pop    esi
640154c8:	pop    edi
640154c9:	leave  
640154ca:	ret    
640154cb:	nop
640154cc:	mov    al,BYTE PTR [esi+0x3]
640154cf:	mov    BYTE PTR [edi+0x3],al
640154d2:	mov    al,BYTE PTR [esi+0x2]
640154d5:	mov    BYTE PTR [edi+0x2],al
640154d8:	mov    al,BYTE PTR [esi+0x1]
640154db:	mov    BYTE PTR [edi+0x1],al
640154de:	mov    eax,DWORD PTR [ebp+0x8]
640154e1:	pop    esi
640154e2:	pop    edi
640154e3:	leave  
640154e4:	ret    
640154e5:	int3   
640154e6:	int3   
640154e7:	int3   
640154e8:	int3   
640154e9:	int3   
640154ea:	int3   
640154eb:	int3   
640154ec:	int3   
640154ed:	int3   
640154ee:	int3   
640154ef:	int3   
640154f0:	cmp    cl,0x40
640154f3:	jae    0x6401550a
640154f5:	cmp    cl,0x20
640154f8:	jae    0x64015500
640154fa:	shrd   eax,edx,cl
640154fd:	shr    edx,cl
640154ff:	ret    
64015500:	mov    eax,edx
64015502:	xor    edx,edx
64015504:	and    cl,0x1f
64015507:	shr    eax,cl
64015509:	ret    
6401550a:	xor    eax,eax
6401550c:	xor    edx,edx
6401550e:	ret    
6401550f:	mov    ecx,DWORD PTR [esp+0x4]
64015513:	push   ebx
64015514:	push   esi
64015515:	push   edi
64015516:	xor    edi,edi
64015518:	cmp    ecx,edi
6401551a:	je     0x64015524
6401551c:	mov    ebx,DWORD PTR [esp+0x14]
64015520:	cmp    ebx,edi
64015522:	ja     0x6401553f
64015524:	call   0x64016663
64015529:	push   0x16
6401552b:	pop    esi
6401552c:	mov    DWORD PTR [eax],esi
6401552e:	push   edi
6401552f:	push   edi
64015530:	push   edi
64015531:	push   edi
64015532:	push   edi
64015533:	call   0x64013df2
64015538:	add    esp,0x14
6401553b:	mov    eax,esi
6401553d:	jmp    0x64015577
6401553f:	mov    esi,DWORD PTR [esp+0x18]
64015543:	cmp    esi,edi
64015545:	jne    0x6401554c
64015547:	mov    WORD PTR [ecx],di
6401554a:	jmp    0x64015524
6401554c:	mov    edx,ecx
6401554e:	movzx  eax,WORD PTR [esi]
64015551:	mov    WORD PTR [edx],ax
64015554:	inc    edx
64015555:	inc    edx
64015556:	inc    esi
64015557:	inc    esi
64015558:	cmp    ax,di
6401555b:	je     0x64015560
6401555d:	dec    ebx
6401555e:	jne    0x6401554e
64015560:	cmp    ebx,edi
64015562:	jne    0x64015575
64015564:	mov    WORD PTR [ecx],di
64015567:	call   0x64016663
6401556c:	push   0x22
6401556e:	pop    ecx
6401556f:	mov    DWORD PTR [eax],ecx
64015571:	mov    esi,ecx
64015573:	jmp    0x6401552e
64015575:	xor    eax,eax
64015577:	pop    edi
64015578:	pop    esi
64015579:	pop    ebx
6401557a:	ret    
6401557b:	push   0xc
6401557d:	push   0x64043b58
64015582:	call   0x64016464
64015587:	mov    ecx,DWORD PTR [ebp+0x8]
6401558a:	xor    edi,edi
6401558c:	cmp    ecx,edi
6401558e:	jbe    0x640155be
64015590:	push   0xffffffe0
64015592:	pop    eax
64015593:	xor    edx,edx
64015595:	div    ecx
64015597:	cmp    eax,DWORD PTR [ebp+0xc]
6401559a:	sbb    eax,eax
6401559c:	inc    eax
6401559d:	jne    0x640155be
6401559f:	call   0x64016663
640155a4:	mov    DWORD PTR [eax],0xc
640155aa:	push   edi
640155ab:	push   edi
640155ac:	push   edi
640155ad:	push   edi
640155ae:	push   edi
640155af:	call   0x64013df2
640155b4:	add    esp,0x14
640155b7:	xor    eax,eax
640155b9:	jmp    0x64015693
640155be:	imul   ecx,DWORD PTR [ebp+0xc]
640155c2:	mov    esi,ecx
640155c4:	mov    DWORD PTR [ebp+0x8],esi
640155c7:	cmp    esi,edi
640155c9:	jne    0x640155ce
640155cb:	xor    esi,esi
640155cd:	inc    esi
640155ce:	xor    ebx,ebx
640155d0:	mov    DWORD PTR [ebp-0x1c],ebx
640155d3:	cmp    esi,0xffffffe0
640155d6:	ja     0x64015641
640155d8:	cmp    DWORD PTR ds:0x640556a4,0x3
640155df:	jne    0x6401562c
640155e1:	add    esi,0xf
640155e4:	and    esi,0xfffffff0
640155e7:	mov    DWORD PTR [ebp+0xc],esi
640155ea:	mov    eax,DWORD PTR [ebp+0x8]
640155ed:	cmp    eax,DWORD PTR ds:0x64054680
640155f3:	ja     0x6401562c
640155f5:	push   0x4
640155f7:	call   0x6401b42a
640155fc:	pop    ecx
640155fd:	mov    DWORD PTR [ebp-0x4],edi
64015600:	push   DWORD PTR [ebp+0x8]
64015603:	call   0x6401bc77
64015608:	pop    ecx
64015609:	mov    DWORD PTR [ebp-0x1c],eax
6401560c:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64015613:	call   0x64015677
64015618:	mov    ebx,DWORD PTR [ebp-0x1c]
6401561b:	cmp    ebx,edi
6401561d:	je     0x64015630
6401561f:	push   DWORD PTR [ebp+0x8]
64015622:	push   edi
64015623:	push   ebx
64015624:	call   0x64015100
64015629:	add    esp,0xc
6401562c:	cmp    ebx,edi
6401562e:	jne    0x64015691
64015630:	push   esi
64015631:	push   0x8
64015633:	push   DWORD PTR ds:0x64053eb4
64015639:	call   DWORD PTR ds:0x6402c194
6401563f:	mov    ebx,eax
64015641:	cmp    ebx,edi
64015643:	jne    0x64015691
64015645:	cmp    DWORD PTR ds:0x6405436c,edi
6401564b:	je     0x64015680
6401564d:	push   esi
6401564e:	call   0x64016a1f
64015653:	pop    ecx
64015654:	test   eax,eax
64015656:	jne    0x640155ce
6401565c:	mov    eax,DWORD PTR [ebp+0x10]
6401565f:	cmp    eax,edi
64015661:	je     0x640155b7
64015667:	mov    DWORD PTR [eax],0xc
6401566d:	jmp    0x640155b7
64015672:	xor    edi,edi
64015674:	mov    esi,DWORD PTR [ebp+0xc]
64015677:	push   0x4
64015679:	call   0x6401b352
6401567e:	pop    ecx
6401567f:	ret    
64015680:	cmp    ebx,edi
64015682:	jne    0x64015691
64015684:	mov    eax,DWORD PTR [ebp+0x10]
64015687:	cmp    eax,edi
64015689:	je     0x64015691
6401568b:	mov    DWORD PTR [eax],0xc
64015691:	mov    eax,ebx
64015693:	call   0x640164a9
64015698:	ret    
64015699:	push   0x10
6401569b:	push   0x64043b78
640156a0:	call   0x64016464
640156a5:	mov    ebx,DWORD PTR [ebp+0x8]
640156a8:	test   ebx,ebx
640156aa:	jne    0x640156ba
640156ac:	push   DWORD PTR [ebp+0xc]
640156af:	call   0x6401485e
640156b4:	pop    ecx
640156b5:	jmp    0x64015886
640156ba:	mov    esi,DWORD PTR [ebp+0xc]
640156bd:	test   esi,esi
640156bf:	jne    0x640156cd
640156c1:	push   ebx
640156c2:	call   0x6401475f
640156c7:	pop    ecx
640156c8:	jmp    0x64015884
640156cd:	cmp    DWORD PTR ds:0x640556a4,0x3
640156d4:	jne    0x6401586d
640156da:	xor    edi,edi
640156dc:	mov    DWORD PTR [ebp-0x1c],edi
640156df:	cmp    esi,0xffffffe0
640156e2:	ja     0x64015872
640156e8:	push   0x4
640156ea:	call   0x6401b42a
640156ef:	pop    ecx
640156f0:	mov    DWORD PTR [ebp-0x4],edi
640156f3:	push   ebx
640156f4:	call   0x6401b4a3
640156f9:	pop    ecx
640156fa:	mov    DWORD PTR [ebp-0x20],eax
640156fd:	cmp    eax,edi
640156ff:	je     0x640157a3
64015705:	cmp    esi,DWORD PTR ds:0x64054680
6401570b:	ja     0x64015756
6401570d:	push   esi
6401570e:	push   ebx
6401570f:	push   eax
64015710:	call   0x6401b998
64015715:	add    esp,0xc
64015718:	test   eax,eax
6401571a:	je     0x64015721
6401571c:	mov    DWORD PTR [ebp-0x1c],ebx
6401571f:	jmp    0x64015756
64015721:	push   esi
64015722:	call   0x6401bc77
64015727:	pop    ecx
64015728:	mov    DWORD PTR [ebp-0x1c],eax
6401572b:	cmp    eax,edi
6401572d:	je     0x64015756
6401572f:	mov    eax,DWORD PTR [ebx-0x4]
64015732:	dec    eax
64015733:	cmp    eax,esi
64015735:	jb     0x64015739
64015737:	mov    eax,esi
64015739:	push   eax
6401573a:	push   ebx
6401573b:	push   DWORD PTR [ebp-0x1c]
6401573e:	call   0x64015180
64015743:	push   ebx
64015744:	call   0x6401b4a3
64015749:	mov    DWORD PTR [ebp-0x20],eax
6401574c:	push   ebx
6401574d:	push   eax
6401574e:	call   0x6401b4ce
64015753:	add    esp,0x18
64015756:	cmp    DWORD PTR [ebp-0x1c],edi
64015759:	jne    0x640157a3
6401575b:	cmp    esi,edi
6401575d:	jne    0x64015765
6401575f:	xor    esi,esi
64015761:	inc    esi
64015762:	mov    DWORD PTR [ebp+0xc],esi
64015765:	add    esi,0xf
64015768:	and    esi,0xfffffff0
6401576b:	mov    DWORD PTR [ebp+0xc],esi
6401576e:	push   esi
6401576f:	push   edi
64015770:	push   DWORD PTR ds:0x64053eb4
64015776:	call   DWORD PTR ds:0x6402c194
6401577c:	mov    DWORD PTR [ebp-0x1c],eax
6401577f:	cmp    eax,edi
64015781:	je     0x640157a3
64015783:	mov    eax,DWORD PTR [ebx-0x4]
64015786:	dec    eax
64015787:	cmp    eax,esi
64015789:	jb     0x6401578d
6401578b:	mov    eax,esi
6401578d:	push   eax
6401578e:	push   ebx
6401578f:	push   DWORD PTR [ebp-0x1c]
64015792:	call   0x64015180
64015797:	push   ebx
64015798:	push   DWORD PTR [ebp-0x20]
6401579b:	call   0x6401b4ce
640157a0:	add    esp,0x14
640157a3:	mov    DWORD PTR [ebp-0x4],0xfffffffe
640157aa:	call   0x640157dd
640157af:	cmp    DWORD PTR [ebp-0x20],0x0
640157b3:	jne    0x640157e6
640157b5:	test   esi,esi
640157b7:	jne    0x640157ba
640157b9:	inc    esi
640157ba:	add    esi,0xf
640157bd:	and    esi,0xfffffff0
640157c0:	mov    DWORD PTR [ebp+0xc],esi
640157c3:	push   esi
640157c4:	push   ebx
640157c5:	push   0x0
640157c7:	push   DWORD PTR ds:0x64053eb4
640157cd:	call   DWORD PTR ds:0x6402c19c
640157d3:	mov    edi,eax
640157d5:	jmp    0x640157e9
640157d7:	mov    esi,DWORD PTR [ebp+0xc]
640157da:	mov    ebx,DWORD PTR [ebp+0x8]
640157dd:	push   0x4
640157df:	call   0x6401b352
640157e4:	pop    ecx
640157e5:	ret    
640157e6:	mov    edi,DWORD PTR [ebp-0x1c]
640157e9:	test   edi,edi
640157eb:	jne    0x640158b0
640157f1:	cmp    DWORD PTR ds:0x6405436c,edi
640157f7:	je     0x64015825
640157f9:	push   esi
640157fa:	call   0x64016a1f
640157ff:	pop    ecx
64015800:	test   eax,eax
64015802:	jne    0x640156da
64015808:	call   0x64016663
6401580d:	cmp    DWORD PTR [ebp-0x20],edi
64015810:	jne    0x6401587e
64015812:	mov    esi,eax
64015814:	call   DWORD PTR ds:0x6402c06c
6401581a:	push   eax
6401581b:	call   0x64016628
64015820:	pop    ecx
64015821:	mov    DWORD PTR [esi],eax
64015823:	jmp    0x64015884
64015825:	test   edi,edi
64015827:	jne    0x640158b0
6401582d:	call   0x64016663
64015832:	cmp    DWORD PTR [ebp-0x20],edi
64015835:	je     0x6401589f
64015837:	mov    DWORD PTR [eax],0xc
6401583d:	jmp    0x640158b0
6401583f:	test   esi,esi
64015841:	jne    0x64015844
64015843:	inc    esi
64015844:	push   esi
64015845:	push   ebx
64015846:	push   0x0
64015848:	push   DWORD PTR ds:0x64053eb4
6401584e:	call   DWORD PTR ds:0x6402c19c
64015854:	mov    edi,eax
64015856:	test   edi,edi
64015858:	jne    0x640158b0
6401585a:	cmp    DWORD PTR ds:0x6405436c,eax
64015860:	je     0x64015896
64015862:	push   esi
64015863:	call   0x64016a1f
64015868:	pop    ecx
64015869:	test   eax,eax
6401586b:	je     0x6401588c
6401586d:	cmp    esi,0xffffffe0
64015870:	jbe    0x6401583f
64015872:	push   esi
64015873:	call   0x64016a1f
64015878:	pop    ecx
64015879:	call   0x64016663
6401587e:	mov    DWORD PTR [eax],0xc
64015884:	xor    eax,eax
64015886:	call   0x640164a9
6401588b:	ret    
6401588c:	call   0x64016663
64015891:	jmp    0x64015812
64015896:	test   edi,edi
64015898:	jne    0x640158b0
6401589a:	call   0x64016663
6401589f:	mov    esi,eax
640158a1:	call   DWORD PTR ds:0x6402c06c
640158a7:	push   eax
640158a8:	call   0x64016628
640158ad:	mov    DWORD PTR [esi],eax
640158af:	pop    ecx
640158b0:	mov    eax,edi
640158b2:	jmp    0x64015886
640158b4:	int3   
640158b5:	int3   
640158b6:	int3   
640158b7:	int3   
640158b8:	int3   
640158b9:	int3   
640158ba:	int3   
640158bb:	int3   
640158bc:	int3   
640158bd:	int3   
640158be:	int3   
640158bf:	int3   
640158c0:	sub    esp,0x14
640158c3:	push   ebx
640158c4:	mov    ebx,DWORD PTR [esp+0x20]
640158c8:	push   ebp
640158c9:	push   esi
640158ca:	mov    esi,DWORD PTR [ebx+0x8]
640158cd:	xor    esi,DWORD PTR ds:0x640521ac
640158d3:	push   edi
640158d4:	mov    eax,DWORD PTR [esi]
640158d6:	cmp    eax,0xfffffffe
640158d9:	mov    BYTE PTR [esp+0x13],0x0
640158de:	mov    DWORD PTR [esp+0x18],0x1
640158e6:	lea    edi,[ebx+0x10]
640158e9:	je     0x640158f8
640158eb:	mov    ecx,DWORD PTR [esi+0x4]
640158ee:	add    ecx,edi
640158f0:	xor    ecx,DWORD PTR [eax+edi*1]
640158f3:	call   0x64013ca6
640158f8:	mov    ecx,DWORD PTR [esi+0xc]
640158fb:	mov    eax,DWORD PTR [esi+0x8]
640158fe:	add    ecx,edi
64015900:	xor    ecx,DWORD PTR [eax+edi*1]
64015903:	call   0x64013ca6
64015908:	mov    eax,DWORD PTR [esp+0x28]
6401590c:	test   BYTE PTR [eax+0x4],0x66
64015910:	jne    0x64015a35
64015916:	mov    ebp,DWORD PTR [ebx+0xc]
64015919:	cmp    ebp,0xfffffffe
6401591c:	mov    ecx,DWORD PTR [esp+0x30]
64015920:	lea    edx,[esp+0x1c]
64015924:	mov    DWORD PTR [esp+0x1c],eax
64015928:	mov    DWORD PTR [esp+0x20],ecx
6401592c:	mov    DWORD PTR [ebx-0x4],edx
6401592f:	je     0x6401598f
64015931:	lea    eax,[ebp+ebp*2+0x0]
64015935:	mov    ecx,DWORD PTR [esi+eax*4+0x14]
64015939:	test   ecx,ecx
6401593b:	lea    ebx,[esi+eax*4+0x10]
6401593f:	mov    eax,DWORD PTR [ebx]
64015941:	mov    DWORD PTR [esp+0x14],eax
64015945:	je     0x6401595d
64015947:	mov    edx,edi
64015949:	call   0x64019d2a
6401594e:	test   eax,eax
64015950:	mov    BYTE PTR [esp+0x13],0x1
64015955:	jl     0x6401599b
64015957:	jg     0x640159a5
64015959:	mov    eax,DWORD PTR [esp+0x14]
6401595d:	cmp    eax,0xfffffffe
64015960:	mov    ebp,eax
64015962:	jne    0x64015931
64015964:	cmp    BYTE PTR [esp+0x13],0x0
64015969:	je     0x6401598f
6401596b:	mov    eax,DWORD PTR [esi]
6401596d:	cmp    eax,0xfffffffe
64015970:	je     0x6401597f
64015972:	mov    ecx,DWORD PTR [esi+0x4]
64015975:	add    ecx,edi
64015977:	xor    ecx,DWORD PTR [eax+edi*1]
6401597a:	call   0x64013ca6
6401597f:	mov    ecx,DWORD PTR [esi+0xc]
64015982:	mov    eax,DWORD PTR [esi+0x8]
64015985:	add    ecx,edi
64015987:	xor    ecx,DWORD PTR [eax+edi*1]
6401598a:	call   0x64013ca6
6401598f:	mov    eax,DWORD PTR [esp+0x18]
64015993:	pop    edi
64015994:	pop    esi
64015995:	pop    ebp
64015996:	pop    ebx
64015997:	add    esp,0x14
6401599a:	ret    
6401599b:	mov    DWORD PTR [esp+0x18],0x0
640159a3:	jmp    0x6401596b
640159a5:	mov    ecx,DWORD PTR [esp+0x28]
640159a9:	cmp    DWORD PTR [ecx],0xe06d7363
640159af:	jne    0x640159db
640159b1:	cmp    DWORD PTR ds:0x640408a8,0x0
640159b8:	je     0x640159db
640159ba:	push   0x640408a8
640159bf:	call   0x6401dc10
640159c4:	add    esp,0x4
640159c7:	test   eax,eax
640159c9:	je     0x640159db
640159cb:	mov    edx,DWORD PTR [esp+0x28]
640159cf:	push   0x1
640159d1:	push   edx
640159d2:	call   DWORD PTR ds:0x640408a8
640159d8:	add    esp,0x8
640159db:	mov    ecx,DWORD PTR [esp+0x2c]
640159df:	call   0x64019d5a
640159e4:	mov    eax,DWORD PTR [esp+0x2c]
640159e8:	cmp    DWORD PTR [eax+0xc],ebp
640159eb:	je     0x64015a00
640159ed:	push   0x640521ac
640159f2:	push   edi
640159f3:	mov    edx,ebp
640159f5:	mov    ecx,eax
640159f7:	call   0x64019d74
640159fc:	mov    eax,DWORD PTR [esp+0x2c]
64015a00:	mov    ecx,DWORD PTR [esp+0x14]
64015a04:	mov    DWORD PTR [eax+0xc],ecx
64015a07:	mov    eax,DWORD PTR [esi]
64015a09:	cmp    eax,0xfffffffe
64015a0c:	je     0x64015a1b
64015a0e:	mov    ecx,DWORD PTR [esi+0x4]
64015a11:	add    ecx,edi
64015a13:	xor    ecx,DWORD PTR [eax+edi*1]
64015a16:	call   0x64013ca6
64015a1b:	mov    ecx,DWORD PTR [esi+0xc]
64015a1e:	mov    edx,DWORD PTR [esi+0x8]
64015a21:	add    ecx,edi
64015a23:	xor    ecx,DWORD PTR [edx+edi*1]
64015a26:	call   0x64013ca6
64015a2b:	mov    ecx,DWORD PTR [ebx+0x8]
64015a2e:	mov    edx,edi
64015a30:	jmp    0x64019d41
64015a35:	cmp    DWORD PTR [ebx+0xc],0xfffffffe
64015a39:	je     0x6401598f
64015a3f:	push   0x640521ac
64015a44:	push   edi
64015a45:	mov    ecx,ebx
64015a47:	mov    edx,0xfffffffe
64015a4c:	call   0x64019d74
64015a51:	jmp    0x6401596b
64015a56:	int3   
64015a57:	int3   
64015a58:	int3   
64015a59:	int3   
64015a5a:	int3   
64015a5b:	int3   
64015a5c:	int3   
64015a5d:	int3   
64015a5e:	int3   
64015a5f:	int3   
64015a60:	mov    eax,DWORD PTR [esp+0x8]
64015a64:	mov    ecx,DWORD PTR [esp+0x10]
64015a68:	or     ecx,eax
64015a6a:	mov    ecx,DWORD PTR [esp+0xc]
64015a6e:	jne    0x64015a79
64015a70:	mov    eax,DWORD PTR [esp+0x4]
64015a74:	mul    ecx
64015a76:	ret    0x10
64015a79:	push   ebx
64015a7a:	mul    ecx
64015a7c:	mov    ebx,eax
64015a7e:	mov    eax,DWORD PTR [esp+0x8]
64015a82:	mul    DWORD PTR [esp+0x14]
64015a86:	add    ebx,eax
64015a88:	mov    eax,DWORD PTR [esp+0x8]
64015a8c:	mul    ecx
64015a8e:	add    edx,ebx
64015a90:	pop    ebx
64015a91:	ret    0x10
64015a94:	int3   
64015a95:	int3   
64015a96:	int3   
64015a97:	int3   
64015a98:	int3   
64015a99:	int3   
64015a9a:	int3   
64015a9b:	int3   
64015a9c:	int3   
64015a9d:	int3   
64015a9e:	int3   
64015a9f:	int3   
64015aa0:	mov    ecx,DWORD PTR [esp+0x4]
64015aa4:	test   ecx,0x3
64015aaa:	je     0x64015ad0
64015aac:	mov    al,BYTE PTR [ecx]
64015aae:	add    ecx,0x1
64015ab1:	test   al,al
64015ab3:	je     0x64015b03
64015ab5:	test   ecx,0x3
64015abb:	jne    0x64015aac
64015abd:	add    eax,0x0
64015ac2:	lea    esp,[esp+0x0]
64015ac9:	lea    esp,[esp+0x0]
64015ad0:	mov    eax,DWORD PTR [ecx]
64015ad2:	mov    edx,0x7efefeff
64015ad7:	add    edx,eax
64015ad9:	xor    eax,0xffffffff
64015adc:	xor    eax,edx
64015ade:	add    ecx,0x4
64015ae1:	test   eax,0x81010100
64015ae6:	je     0x64015ad0
64015ae8:	mov    eax,DWORD PTR [ecx-0x4]
64015aeb:	test   al,al
64015aed:	je     0x64015b21
64015aef:	test   ah,ah
64015af1:	je     0x64015b17
64015af3:	test   eax,0xff0000
64015af8:	je     0x64015b0d
64015afa:	test   eax,0xff000000
64015aff:	je     0x64015b03
64015b01:	jmp    0x64015ad0
64015b03:	lea    eax,[ecx-0x1]
64015b06:	mov    ecx,DWORD PTR [esp+0x4]
64015b0a:	sub    eax,ecx
64015b0c:	ret    
64015b0d:	lea    eax,[ecx-0x2]
64015b10:	mov    ecx,DWORD PTR [esp+0x4]
64015b14:	sub    eax,ecx
64015b16:	ret    
64015b17:	lea    eax,[ecx-0x3]
64015b1a:	mov    ecx,DWORD PTR [esp+0x4]
64015b1e:	sub    eax,ecx
64015b20:	ret    
64015b21:	lea    eax,[ecx-0x4]
64015b24:	mov    ecx,DWORD PTR [esp+0x4]
64015b28:	sub    eax,ecx
64015b2a:	ret    
64015b2b:	push   eax
64015b2c:	push   DWORD PTR fs:0x0
64015b33:	lea    eax,[esp+0xc]
64015b37:	sub    esp,DWORD PTR [esp+0xc]
64015b3b:	push   ebx
64015b3c:	push   esi
64015b3d:	push   edi
64015b3e:	mov    DWORD PTR [eax],ebp
64015b40:	mov    ebp,eax
64015b42:	mov    eax,ds:0x640521ac
64015b47:	xor    eax,ebp
64015b49:	push   eax
64015b4a:	push   DWORD PTR [ebp-0x4]
64015b4d:	mov    DWORD PTR [ebp-0x4],0xffffffff
64015b54:	lea    eax,[ebp-0xc]
64015b57:	mov    fs:0x0,eax
64015b5d:	ret    
64015b5e:	push   eax
64015b5f:	push   DWORD PTR fs:0x0
64015b66:	lea    eax,[esp+0xc]
64015b6a:	sub    esp,DWORD PTR [esp+0xc]
64015b6e:	push   ebx
64015b6f:	push   esi
64015b70:	push   edi
64015b71:	mov    DWORD PTR [eax],ebp
64015b73:	mov    ebp,eax
64015b75:	mov    eax,ds:0x640521ac
64015b7a:	xor    eax,ebp
64015b7c:	push   eax
64015b7d:	mov    DWORD PTR [ebp-0x10],esp
64015b80:	push   DWORD PTR [ebp-0x4]
64015b83:	mov    DWORD PTR [ebp-0x4],0xffffffff
64015b8a:	lea    eax,[ebp-0xc]
64015b8d:	mov    fs:0x0,eax
64015b93:	ret    
64015b94:	push   ebx
64015b95:	push   ebp
64015b96:	push   esi
64015b97:	mov    esi,DWORD PTR [esp+0x10]
64015b9b:	mov    eax,DWORD PTR [esi+0xbc]
64015ba1:	xor    ebp,ebp
64015ba3:	cmp    eax,ebp
64015ba5:	push   edi
64015ba6:	je     0x64015c17
64015ba8:	cmp    eax,0x640530a0
64015bad:	je     0x64015c17
64015baf:	mov    eax,DWORD PTR [esi+0xb0]
64015bb5:	cmp    eax,ebp
64015bb7:	je     0x64015c17
64015bb9:	cmp    DWORD PTR [eax],ebp
64015bbb:	jne    0x64015c17
64015bbd:	mov    eax,DWORD PTR [esi+0xb8]
64015bc3:	cmp    eax,ebp
64015bc5:	je     0x64015bde
64015bc7:	cmp    DWORD PTR [eax],ebp
64015bc9:	jne    0x64015bde
64015bcb:	push   eax
64015bcc:	call   0x6401475f
64015bd1:	push   DWORD PTR [esi+0xbc]
64015bd7:	call   0x6401de9b
64015bdc:	pop    ecx
64015bdd:	pop    ecx
64015bde:	mov    eax,DWORD PTR [esi+0xb4]
64015be4:	cmp    eax,ebp
64015be6:	je     0x64015bff
64015be8:	cmp    DWORD PTR [eax],ebp
64015bea:	jne    0x64015bff
64015bec:	push   eax
64015bed:	call   0x6401475f
64015bf2:	push   DWORD PTR [esi+0xbc]
64015bf8:	call   0x6401de5b
64015bfd:	pop    ecx
64015bfe:	pop    ecx
64015bff:	push   DWORD PTR [esi+0xb0]
64015c05:	call   0x6401475f
64015c0a:	push   DWORD PTR [esi+0xbc]
64015c10:	call   0x6401475f
64015c15:	pop    ecx
64015c16:	pop    ecx
64015c17:	mov    eax,DWORD PTR [esi+0xc0]
64015c1d:	cmp    eax,ebp
64015c1f:	je     0x64015c65
64015c21:	cmp    DWORD PTR [eax],ebp
64015c23:	jne    0x64015c65
64015c25:	mov    eax,DWORD PTR [esi+0xc4]
64015c2b:	sub    eax,0xfe
64015c30:	push   eax
64015c31:	call   0x6401475f
64015c36:	mov    eax,DWORD PTR [esi+0xcc]
64015c3c:	mov    edi,0x80
64015c41:	sub    eax,edi
64015c43:	push   eax
64015c44:	call   0x6401475f
64015c49:	mov    eax,DWORD PTR [esi+0xd0]
64015c4f:	sub    eax,edi
64015c51:	push   eax
64015c52:	call   0x6401475f
64015c57:	push   DWORD PTR [esi+0xc0]
64015c5d:	call   0x6401475f
64015c62:	add    esp,0x10
64015c65:	lea    edi,[esi+0xd4]
64015c6b:	mov    eax,DWORD PTR [edi]
64015c6d:	cmp    eax,0x64052fe0
64015c72:	je     0x64015c8b
64015c74:	cmp    DWORD PTR [eax+0xb4],ebp
64015c7a:	jne    0x64015c8b
64015c7c:	push   eax
64015c7d:	call   0x6401dccb
64015c82:	push   DWORD PTR [edi]
64015c84:	call   0x6401475f
64015c89:	pop    ecx
64015c8a:	pop    ecx
64015c8b:	push   0x6
64015c8d:	lea    edi,[esi+0x50]
64015c90:	pop    ebx
64015c91:	cmp    DWORD PTR [edi-0x8],0x64052a80
64015c98:	je     0x64015cab
64015c9a:	mov    eax,DWORD PTR [edi]
64015c9c:	cmp    eax,ebp
64015c9e:	je     0x64015cab
64015ca0:	cmp    DWORD PTR [eax],ebp
64015ca2:	jne    0x64015cab
64015ca4:	push   eax
64015ca5:	call   0x6401475f
64015caa:	pop    ecx
64015cab:	cmp    DWORD PTR [edi-0x4],ebp
64015cae:	je     0x64015cc2
64015cb0:	mov    eax,DWORD PTR [edi+0x4]
64015cb3:	cmp    eax,ebp
64015cb5:	je     0x64015cc2
64015cb7:	cmp    DWORD PTR [eax],ebp
64015cb9:	jne    0x64015cc2
64015cbb:	push   eax
64015cbc:	call   0x6401475f
64015cc1:	pop    ecx
64015cc2:	add    edi,0x10
64015cc5:	dec    ebx
64015cc6:	jne    0x64015c91
64015cc8:	push   esi
64015cc9:	call   0x6401475f
64015cce:	pop    ecx
64015ccf:	pop    edi
64015cd0:	pop    esi
64015cd1:	pop    ebp
64015cd2:	pop    ebx
64015cd3:	ret    
64015cd4:	push   ebx
64015cd5:	push   ebp
64015cd6:	push   esi
64015cd7:	mov    esi,DWORD PTR [esp+0x10]
64015cdb:	push   edi
64015cdc:	mov    edi,DWORD PTR ds:0x6402c030
64015ce2:	push   esi
64015ce3:	call   edi
64015ce5:	mov    eax,DWORD PTR [esi+0xb0]
64015ceb:	test   eax,eax
64015ced:	je     0x64015cf2
64015cef:	push   eax
64015cf0:	call   edi
64015cf2:	mov    eax,DWORD PTR [esi+0xb8]
64015cf8:	test   eax,eax
64015cfa:	je     0x64015cff
64015cfc:	push   eax
64015cfd:	call   edi
64015cff:	mov    eax,DWORD PTR [esi+0xb4]
64015d05:	test   eax,eax
64015d07:	je     0x64015d0c
64015d09:	push   eax
64015d0a:	call   edi
64015d0c:	mov    eax,DWORD PTR [esi+0xc0]
64015d12:	test   eax,eax
64015d14:	je     0x64015d19
64015d16:	push   eax
64015d17:	call   edi
64015d19:	push   0x6
64015d1b:	lea    ebx,[esi+0x50]
64015d1e:	pop    ebp
64015d1f:	cmp    DWORD PTR [ebx-0x8],0x64052a80
64015d26:	je     0x64015d31
64015d28:	mov    eax,DWORD PTR [ebx]
64015d2a:	test   eax,eax
64015d2c:	je     0x64015d31
64015d2e:	push   eax
64015d2f:	call   edi
64015d31:	cmp    DWORD PTR [ebx-0x4],0x0
64015d35:	je     0x64015d41
64015d37:	mov    eax,DWORD PTR [ebx+0x4]
64015d3a:	test   eax,eax
64015d3c:	je     0x64015d41
64015d3e:	push   eax
64015d3f:	call   edi
64015d41:	add    ebx,0x10
64015d44:	dec    ebp
64015d45:	jne    0x64015d1f
64015d47:	mov    eax,DWORD PTR [esi+0xd4]
64015d4d:	add    eax,0xb4
64015d52:	push   eax
64015d53:	call   edi
64015d55:	pop    edi
64015d56:	pop    esi
64015d57:	pop    ebp
64015d58:	pop    ebx
64015d59:	ret    
64015d5a:	push   esi
64015d5b:	mov    esi,DWORD PTR [esp+0x8]
64015d5f:	test   esi,esi
64015d61:	je     0x64015de2
64015d63:	push   ebx
64015d64:	push   ebp
64015d65:	push   edi
64015d66:	mov    edi,DWORD PTR ds:0x6402c07c
64015d6c:	push   esi
64015d6d:	call   edi
64015d6f:	mov    eax,DWORD PTR [esi+0xb0]
64015d75:	test   eax,eax
64015d77:	je     0x64015d7c
64015d79:	push   eax
64015d7a:	call   edi
64015d7c:	mov    eax,DWORD PTR [esi+0xb8]
64015d82:	test   eax,eax
64015d84:	je     0x64015d89
64015d86:	push   eax
64015d87:	call   edi
64015d89:	mov    eax,DWORD PTR [esi+0xb4]
64015d8f:	test   eax,eax
64015d91:	je     0x64015d96
64015d93:	push   eax
64015d94:	call   edi
64015d96:	mov    eax,DWORD PTR [esi+0xc0]
64015d9c:	test   eax,eax
64015d9e:	je     0x64015da3
64015da0:	push   eax
64015da1:	call   edi
64015da3:	push   0x6
64015da5:	lea    ebx,[esi+0x50]
64015da8:	pop    ebp
64015da9:	cmp    DWORD PTR [ebx-0x8],0x64052a80
64015db0:	je     0x64015dbb
64015db2:	mov    eax,DWORD PTR [ebx]
64015db4:	test   eax,eax
64015db6:	je     0x64015dbb
64015db8:	push   eax
64015db9:	call   edi
64015dbb:	cmp    DWORD PTR [ebx-0x4],0x0
64015dbf:	je     0x64015dcb
64015dc1:	mov    eax,DWORD PTR [ebx+0x4]
64015dc4:	test   eax,eax
64015dc6:	je     0x64015dcb
64015dc8:	push   eax
64015dc9:	call   edi
64015dcb:	add    ebx,0x10
64015dce:	dec    ebp
64015dcf:	jne    0x64015da9
64015dd1:	mov    eax,DWORD PTR [esi+0xd4]
64015dd7:	add    eax,0xb4
64015ddc:	push   eax
64015ddd:	call   edi
64015ddf:	pop    edi
64015de0:	pop    ebp
64015de1:	pop    ebx
64015de2:	mov    eax,esi
64015de4:	pop    esi
64015de5:	ret    
64015de6:	test   edi,edi
64015de8:	je     0x64015e21
64015dea:	test   eax,eax
64015dec:	je     0x64015e21
64015dee:	push   esi
64015def:	mov    esi,DWORD PTR [eax]
64015df1:	cmp    esi,edi
64015df3:	je     0x64015e1d
64015df5:	push   edi
64015df6:	mov    DWORD PTR [eax],edi
64015df8:	call   0x64015cd4
64015dfd:	test   esi,esi
64015dff:	pop    ecx
64015e00:	je     0x64015e1d
64015e02:	push   esi
64015e03:	call   0x64015d5a
64015e08:	cmp    DWORD PTR [esi],0x0
64015e0b:	pop    ecx
64015e0c:	jne    0x64015e1d
64015e0e:	cmp    esi,0x64052a88
64015e14:	je     0x64015e1d
64015e16:	push   esi
64015e17:	call   0x64015b94
64015e1c:	pop    ecx
64015e1d:	mov    eax,edi
64015e1f:	pop    esi
64015e20:	ret    
64015e21:	xor    eax,eax
64015e23:	ret    
64015e24:	push   0xc
64015e26:	push   0x64043b98
64015e2b:	call   0x64016464
64015e30:	call   0x640179ca
64015e35:	mov    esi,eax
64015e37:	mov    eax,ds:0x64052a78
64015e3c:	test   DWORD PTR [esi+0x70],eax
64015e3f:	je     0x64015e63
64015e41:	cmp    DWORD PTR [esi+0x6c],0x0
64015e45:	je     0x64015e63
64015e47:	call   0x640179ca
64015e4c:	mov    esi,DWORD PTR [eax+0x6c]
64015e4f:	test   esi,esi
64015e51:	jne    0x64015e5b
64015e53:	push   0x20
64015e55:	call   0x64017fb6
64015e5a:	pop    ecx
64015e5b:	mov    eax,esi
64015e5d:	call   0x640164a9
64015e62:	ret    
64015e63:	push   0xc
64015e65:	call   0x6401b42a
64015e6a:	pop    ecx
64015e6b:	and    DWORD PTR [ebp-0x4],0x0
64015e6f:	lea    eax,[esi+0x6c]
64015e72:	mov    edi,DWORD PTR ds:0x64052b60
64015e78:	call   0x64015de6
64015e7d:	mov    DWORD PTR [ebp-0x1c],eax
64015e80:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64015e87:	call   0x64015e8e
64015e8c:	jmp    0x64015e4f
64015e8e:	push   0xc
64015e90:	call   0x6401b352
64015e95:	pop    ecx
64015e96:	mov    esi,DWORD PTR [ebp-0x1c]
64015e99:	ret    
64015e9a:	push   ebp
64015e9b:	mov    ebp,esp
64015e9d:	sub    esp,0x14
64015ea0:	mov    eax,ds:0x640521ac
64015ea5:	xor    eax,ebp
64015ea7:	mov    DWORD PTR [ebp-0x4],eax
64015eaa:	push   ebx
64015eab:	push   esi
64015eac:	xor    ebx,ebx
64015eae:	cmp    DWORD PTR ds:0x64053a0c,ebx
64015eb4:	push   edi
64015eb5:	mov    esi,ecx
64015eb7:	jne    0x64015ef1
64015eb9:	push   ebx
64015eba:	push   ebx
64015ebb:	xor    edi,edi
64015ebd:	inc    edi
64015ebe:	push   edi
64015ebf:	push   0x64041d78
64015ec4:	push   0x100
64015ec9:	push   ebx
64015eca:	call   DWORD PTR ds:0x6402c1c8
64015ed0:	test   eax,eax
64015ed2:	je     0x64015edc
64015ed4:	mov    DWORD PTR ds:0x64053a0c,edi
64015eda:	jmp    0x64015ef1
64015edc:	call   DWORD PTR ds:0x6402c06c
64015ee2:	cmp    eax,0x78
64015ee5:	jne    0x64015ef1
64015ee7:	mov    DWORD PTR ds:0x64053a0c,0x2
64015ef1:	cmp    DWORD PTR [ebp+0x14],ebx
64015ef4:	jle    0x64015f18
64015ef6:	mov    ecx,DWORD PTR [ebp+0x14]
64015ef9:	mov    eax,DWORD PTR [ebp+0x10]
64015efc:	dec    ecx
64015efd:	cmp    BYTE PTR [eax],bl
64015eff:	je     0x64015f09
64015f01:	inc    eax
64015f02:	cmp    ecx,ebx
64015f04:	jne    0x64015efc
64015f06:	or     ecx,0xffffffff
64015f09:	mov    eax,DWORD PTR [ebp+0x14]
64015f0c:	sub    eax,ecx
64015f0e:	dec    eax
64015f0f:	cmp    eax,DWORD PTR [ebp+0x14]
64015f12:	jge    0x64015f15
64015f14:	inc    eax
64015f15:	mov    DWORD PTR [ebp+0x14],eax
64015f18:	mov    eax,ds:0x64053a0c
64015f1d:	cmp    eax,0x2
64015f20:	je     0x640160d1
64015f26:	cmp    eax,ebx
64015f28:	je     0x640160d1
64015f2e:	cmp    eax,0x1
64015f31:	jne    0x64016102
64015f37:	cmp    DWORD PTR [ebp+0x20],ebx
64015f3a:	mov    DWORD PTR [ebp-0x8],ebx
64015f3d:	jne    0x64015f47
64015f3f:	mov    eax,DWORD PTR [esi]
64015f41:	mov    eax,DWORD PTR [eax+0x4]
64015f44:	mov    DWORD PTR [ebp+0x20],eax
64015f47:	mov    esi,DWORD PTR ds:0x6402c02c
64015f4d:	xor    eax,eax
64015f4f:	cmp    DWORD PTR [ebp+0x24],ebx
64015f52:	push   ebx
64015f53:	push   ebx
64015f54:	push   DWORD PTR [ebp+0x14]
64015f57:	setne  al
64015f5a:	push   DWORD PTR [ebp+0x10]
64015f5d:	lea    eax,[eax*8+0x1]
64015f64:	push   eax
64015f65:	push   DWORD PTR [ebp+0x20]
64015f68:	call   esi
64015f6a:	mov    edi,eax
64015f6c:	cmp    edi,ebx
64015f6e:	je     0x64016102
64015f74:	jle    0x64015fb9
64015f76:	push   0xffffffe0
64015f78:	xor    edx,edx
64015f7a:	pop    eax
64015f7b:	div    edi
64015f7d:	cmp    eax,0x2
64015f80:	jb     0x64015fb9
64015f82:	lea    eax,[edi+edi*1+0x8]
64015f86:	cmp    eax,0x400
64015f8b:	ja     0x64015fa0
64015f8d:	call   0x64013cc0
64015f92:	mov    eax,esp
64015f94:	cmp    eax,ebx
64015f96:	je     0x64015fb4
64015f98:	mov    DWORD PTR [eax],0xcccc
64015f9e:	jmp    0x64015fb1
64015fa0:	push   eax
64015fa1:	call   0x6401485e
64015fa6:	cmp    eax,ebx
64015fa8:	pop    ecx
64015fa9:	je     0x64015fb4
64015fab:	mov    DWORD PTR [eax],0xdddd
64015fb1:	add    eax,0x8
64015fb4:	mov    DWORD PTR [ebp-0xc],eax
64015fb7:	jmp    0x64015fbc
64015fb9:	mov    DWORD PTR [ebp-0xc],ebx
64015fbc:	cmp    DWORD PTR [ebp-0xc],ebx
64015fbf:	je     0x64016102
64015fc5:	push   edi
64015fc6:	push   DWORD PTR [ebp-0xc]
64015fc9:	push   DWORD PTR [ebp+0x14]
64015fcc:	push   DWORD PTR [ebp+0x10]
64015fcf:	push   0x1
64015fd1:	push   DWORD PTR [ebp+0x20]
64015fd4:	call   esi
64015fd6:	test   eax,eax
64015fd8:	je     0x640160c0
64015fde:	mov    esi,DWORD PTR ds:0x6402c1c8
64015fe4:	push   ebx
64015fe5:	push   ebx
64015fe6:	push   edi
64015fe7:	push   DWORD PTR [ebp-0xc]
64015fea:	push   DWORD PTR [ebp+0xc]
64015fed:	push   DWORD PTR [ebp+0x8]
64015ff0:	call   esi
64015ff2:	mov    ecx,eax
64015ff4:	cmp    ecx,ebx
64015ff6:	mov    DWORD PTR [ebp-0x8],ecx
64015ff9:	je     0x640160c0
64015fff:	test   WORD PTR [ebp+0xc],0x400
64016005:	je     0x64016030
64016007:	cmp    DWORD PTR [ebp+0x1c],ebx
6401600a:	je     0x640160c0
64016010:	cmp    ecx,DWORD PTR [ebp+0x1c]
64016013:	jg     0x640160c0
64016019:	push   DWORD PTR [ebp+0x1c]
6401601c:	push   DWORD PTR [ebp+0x18]
6401601f:	push   edi
64016020:	push   DWORD PTR [ebp-0xc]
64016023:	push   DWORD PTR [ebp+0xc]
64016026:	push   DWORD PTR [ebp+0x8]
64016029:	call   esi
6401602b:	jmp    0x640160c0
64016030:	cmp    ecx,ebx
64016032:	jle    0x64016079
64016034:	push   0xffffffe0
64016036:	xor    edx,edx
64016038:	pop    eax
64016039:	div    ecx
6401603b:	cmp    eax,0x2
6401603e:	jb     0x64016079
64016040:	lea    eax,[ecx+ecx*1+0x8]
64016044:	cmp    eax,0x400
64016049:	ja     0x64016061
6401604b:	call   0x64013cc0
64016050:	mov    esi,esp
64016052:	cmp    esi,ebx
64016054:	je     0x640160c0
64016056:	mov    DWORD PTR [esi],0xcccc
6401605c:	add    esi,0x8
6401605f:	jmp    0x6401607b
64016061:	push   eax
64016062:	call   0x6401485e
64016067:	cmp    eax,ebx
64016069:	pop    ecx
6401606a:	je     0x64016075
6401606c:	mov    DWORD PTR [eax],0xdddd
64016072:	add    eax,0x8
64016075:	mov    esi,eax
64016077:	jmp    0x6401607b
64016079:	xor    esi,esi
6401607b:	cmp    esi,ebx
6401607d:	je     0x640160c0
6401607f:	push   DWORD PTR [ebp-0x8]
64016082:	push   esi
64016083:	push   edi
64016084:	push   DWORD PTR [ebp-0xc]
64016087:	push   DWORD PTR [ebp+0xc]
6401608a:	push   DWORD PTR [ebp+0x8]
6401608d:	call   DWORD PTR ds:0x6402c1c8
64016093:	test   eax,eax
64016095:	je     0x640160b9
64016097:	cmp    DWORD PTR [ebp+0x1c],ebx
6401609a:	push   ebx
6401609b:	push   ebx
6401609c:	jne    0x640160a2
6401609e:	push   ebx
6401609f:	push   ebx
640160a0:	jmp    0x640160a8
640160a2:	push   DWORD PTR [ebp+0x1c]
640160a5:	push   DWORD PTR [ebp+0x18]
640160a8:	push   DWORD PTR [ebp-0x8]
640160ab:	push   esi
640160ac:	push   ebx
640160ad:	push   DWORD PTR [ebp+0x20]
640160b0:	call   DWORD PTR ds:0x6402c014
640160b6:	mov    DWORD PTR [ebp-0x8],eax
640160b9:	push   esi
640160ba:	call   0x640142aa
640160bf:	pop    ecx
640160c0:	push   DWORD PTR [ebp-0xc]
640160c3:	call   0x640142aa
640160c8:	mov    eax,DWORD PTR [ebp-0x8]
640160cb:	pop    ecx
640160cc:	jmp    0x6401622a
640160d1:	cmp    DWORD PTR [ebp+0x8],ebx
640160d4:	mov    DWORD PTR [ebp-0xc],ebx
640160d7:	mov    DWORD PTR [ebp-0x10],ebx
640160da:	jne    0x640160e4
640160dc:	mov    eax,DWORD PTR [esi]
640160de:	mov    eax,DWORD PTR [eax+0x14]
640160e1:	mov    DWORD PTR [ebp+0x8],eax
640160e4:	cmp    DWORD PTR [ebp+0x20],ebx
640160e7:	jne    0x640160f1
640160e9:	mov    eax,DWORD PTR [esi]
640160eb:	mov    eax,DWORD PTR [eax+0x4]
640160ee:	mov    DWORD PTR [ebp+0x20],eax
640160f1:	push   DWORD PTR [ebp+0x8]
640160f4:	call   0x6401e2e0
640160f9:	cmp    eax,0xffffffff
640160fc:	pop    ecx
640160fd:	mov    DWORD PTR [ebp-0x14],eax
64016100:	jne    0x64016109
64016102:	xor    eax,eax
64016104:	jmp    0x6401622a
64016109:	cmp    eax,DWORD PTR [ebp+0x20]
6401610c:	je     0x640161ed
64016112:	push   ebx
64016113:	push   ebx
64016114:	lea    ecx,[ebp+0x14]
64016117:	push   ecx
64016118:	push   DWORD PTR [ebp+0x10]
6401611b:	push   eax
6401611c:	push   DWORD PTR [ebp+0x20]
6401611f:	call   0x6401e327
64016124:	add    esp,0x18
64016127:	cmp    eax,ebx
64016129:	mov    DWORD PTR [ebp-0xc],eax
6401612c:	je     0x64016102
6401612e:	mov    esi,DWORD PTR ds:0x6402c1c4
64016134:	push   ebx
64016135:	push   ebx
64016136:	push   DWORD PTR [ebp+0x14]
64016139:	push   eax
6401613a:	push   DWORD PTR [ebp+0xc]
6401613d:	push   DWORD PTR [ebp+0x8]
64016140:	call   esi
64016142:	cmp    eax,ebx
64016144:	mov    DWORD PTR [ebp-0x8],eax
64016147:	jne    0x64016150
64016149:	xor    esi,esi
6401614b:	jmp    0x64016207
64016150:	jle    0x6401618f
64016152:	cmp    eax,0xffffffe0
64016155:	ja     0x6401618f
64016157:	add    eax,0x8
6401615a:	cmp    eax,0x400
6401615f:	ja     0x64016177
64016161:	call   0x64013cc0
64016166:	mov    edi,esp
64016168:	cmp    edi,ebx
6401616a:	je     0x64016149
6401616c:	mov    DWORD PTR [edi],0xcccc
64016172:	add    edi,0x8
64016175:	jmp    0x64016191
64016177:	push   eax
64016178:	call   0x6401485e
6401617d:	cmp    eax,ebx
6401617f:	pop    ecx
64016180:	je     0x6401618b
64016182:	mov    DWORD PTR [eax],0xdddd
64016188:	add    eax,0x8
6401618b:	mov    edi,eax
6401618d:	jmp    0x64016191
6401618f:	xor    edi,edi
64016191:	cmp    edi,ebx
64016193:	je     0x64016149
64016195:	push   DWORD PTR [ebp-0x8]
64016198:	push   ebx
64016199:	push   edi
6401619a:	call   0x64015100
6401619f:	add    esp,0xc
640161a2:	push   DWORD PTR [ebp-0x8]
640161a5:	push   edi
640161a6:	push   DWORD PTR [ebp+0x14]
640161a9:	push   DWORD PTR [ebp-0xc]
640161ac:	push   DWORD PTR [ebp+0xc]
640161af:	push   DWORD PTR [ebp+0x8]
640161b2:	call   esi
640161b4:	cmp    eax,ebx
640161b6:	mov    DWORD PTR [ebp-0x8],eax
640161b9:	jne    0x640161bf
640161bb:	xor    esi,esi
640161bd:	jmp    0x640161e4
640161bf:	push   DWORD PTR [ebp+0x1c]
640161c2:	lea    eax,[ebp-0x8]
640161c5:	push   DWORD PTR [ebp+0x18]
640161c8:	push   eax
640161c9:	push   edi
640161ca:	push   DWORD PTR [ebp+0x20]
640161cd:	push   DWORD PTR [ebp-0x14]
640161d0:	call   0x6401e327
640161d5:	mov    esi,eax
640161d7:	mov    DWORD PTR [ebp-0x10],esi
640161da:	add    esp,0x18
640161dd:	neg    esi
640161df:	sbb    esi,esi
640161e1:	and    esi,DWORD PTR [ebp-0x8]
640161e4:	push   edi
640161e5:	call   0x640142aa
640161ea:	pop    ecx
640161eb:	jmp    0x64016207
640161ed:	push   DWORD PTR [ebp+0x1c]
640161f0:	push   DWORD PTR [ebp+0x18]
640161f3:	push   DWORD PTR [ebp+0x14]
640161f6:	push   DWORD PTR [ebp+0x10]
640161f9:	push   DWORD PTR [ebp+0xc]
640161fc:	push   DWORD PTR [ebp+0x8]
640161ff:	call   DWORD PTR ds:0x6402c1c4
64016205:	mov    esi,eax
64016207:	cmp    DWORD PTR [ebp-0xc],ebx
6401620a:	je     0x64016215
6401620c:	push   DWORD PTR [ebp-0xc]
6401620f:	call   0x6401475f
64016214:	pop    ecx
64016215:	mov    eax,DWORD PTR [ebp-0x10]
64016218:	cmp    eax,ebx
6401621a:	je     0x64016228
6401621c:	cmp    DWORD PTR [ebp+0x18],eax
6401621f:	je     0x64016228
64016221:	push   eax
64016222:	call   0x6401475f
64016227:	pop    ecx
64016228:	mov    eax,esi
6401622a:	lea    esp,[ebp-0x20]
6401622d:	pop    edi
6401622e:	pop    esi
6401622f:	pop    ebx
64016230:	mov    ecx,DWORD PTR [ebp-0x4]
64016233:	xor    ecx,ebp
64016235:	call   0x64013ca6
6401623a:	leave  
6401623b:	ret    
6401623c:	push   ebp
6401623d:	mov    ebp,esp
6401623f:	sub    esp,0x10
64016242:	push   DWORD PTR [ebp+0x8]
64016245:	lea    ecx,[ebp-0x10]
64016248:	call   0x640142c5
6401624d:	push   DWORD PTR [ebp+0x28]
64016250:	lea    ecx,[ebp-0x10]
64016253:	push   DWORD PTR [ebp+0x24]
64016256:	push   DWORD PTR [ebp+0x20]
64016259:	push   DWORD PTR [ebp+0x1c]
6401625c:	push   DWORD PTR [ebp+0x18]
6401625f:	push   DWORD PTR [ebp+0x14]
64016262:	push   DWORD PTR [ebp+0x10]
64016265:	push   DWORD PTR [ebp+0xc]
64016268:	call   0x64015e9a
6401626d:	add    esp,0x20
64016270:	cmp    BYTE PTR [ebp-0x4],0x0
64016274:	je     0x6401627d
64016276:	mov    ecx,DWORD PTR [ebp-0x8]
64016279:	and    DWORD PTR [ecx+0x70],0xfffffffd
6401627d:	leave  
6401627e:	ret    
6401627f:	push   esi
64016280:	push   edi
64016281:	xor    esi,esi
64016283:	push   DWORD PTR [esp+0xc]
64016287:	call   0x6401485e
6401628c:	mov    edi,eax
6401628e:	test   edi,edi
64016290:	pop    ecx
64016291:	jne    0x640162ba
64016293:	cmp    DWORD PTR ds:0x64053a10,eax
64016299:	jbe    0x640162ba
6401629b:	push   esi
6401629c:	call   DWORD PTR ds:0x6402c044
640162a2:	lea    eax,[esi+0x3e8]
640162a8:	cmp    eax,DWORD PTR ds:0x64053a10
640162ae:	jbe    0x640162b3
640162b0:	or     eax,0xffffffff
640162b3:	cmp    eax,0xffffffff
640162b6:	mov    esi,eax
640162b8:	jne    0x64016283
640162ba:	mov    eax,edi
640162bc:	pop    edi
640162bd:	pop    esi
640162be:	ret    
640162bf:	push   esi
640162c0:	push   edi
640162c1:	xor    esi,esi
640162c3:	push   0x0
640162c5:	push   DWORD PTR [esp+0x14]
640162c9:	push   DWORD PTR [esp+0x14]
640162cd:	call   0x6401557b
640162d2:	mov    edi,eax
640162d4:	add    esp,0xc
640162d7:	test   edi,edi
640162d9:	jne    0x64016302
640162db:	cmp    DWORD PTR ds:0x64053a10,eax
640162e1:	jbe    0x64016302
640162e3:	push   esi
640162e4:	call   DWORD PTR ds:0x6402c044
640162ea:	lea    eax,[esi+0x3e8]
640162f0:	cmp    eax,DWORD PTR ds:0x64053a10
640162f6:	jbe    0x640162fb
640162f8:	or     eax,0xffffffff
640162fb:	cmp    eax,0xffffffff
640162fe:	mov    esi,eax
64016300:	jne    0x640162c3
64016302:	mov    eax,edi
64016304:	pop    edi
64016305:	pop    esi
64016306:	ret    
64016307:	push   esi
64016308:	push   edi
64016309:	xor    esi,esi
6401630b:	push   DWORD PTR [esp+0x10]
6401630f:	push   DWORD PTR [esp+0x10]
64016313:	call   0x64015699
64016318:	mov    edi,eax
6401631a:	test   edi,edi
6401631c:	pop    ecx
6401631d:	pop    ecx
6401631e:	jne    0x6401634d
64016320:	cmp    DWORD PTR [esp+0x10],eax
64016324:	je     0x6401634d
64016326:	cmp    DWORD PTR ds:0x64053a10,eax
6401632c:	jbe    0x6401634d
6401632e:	push   esi
6401632f:	call   DWORD PTR ds:0x6402c044
64016335:	lea    eax,[esi+0x3e8]
6401633b:	cmp    eax,DWORD PTR ds:0x64053a10
64016341:	jbe    0x64016346
64016343:	or     eax,0xffffffff
64016346:	cmp    eax,0xffffffff
64016349:	mov    esi,eax
6401634b:	jne    0x6401630b
6401634d:	mov    eax,edi
6401634f:	pop    edi
64016350:	pop    esi
64016351:	ret    
64016352:	push   ebp
64016353:	lea    ebp,[esp-0x2a8]
6401635a:	sub    esp,0x328
64016360:	mov    eax,ds:0x640521ac
64016365:	xor    eax,ebp
64016367:	mov    DWORD PTR [ebp+0x2a4],eax
6401636d:	test   BYTE PTR ds:0x640522cc,0x1
64016374:	push   esi
64016375:	je     0x6401637f
64016377:	push   0xa
64016379:	call   0x6401bf8d
6401637e:	pop    ecx
6401637f:	call   0x6401e526
64016384:	test   eax,eax
64016386:	je     0x64016390
64016388:	push   0x16
6401638a:	call   0x6401e533
6401638f:	pop    ecx
64016390:	test   BYTE PTR ds:0x640522cc,0x2
64016397:	je     0x6401643d
6401639d:	mov    DWORD PTR [ebp+0x88],eax
640163a3:	mov    DWORD PTR [ebp+0x84],ecx
640163a9:	mov    DWORD PTR [ebp+0x80],edx
640163af:	mov    DWORD PTR [ebp+0x7c],ebx
640163b2:	mov    DWORD PTR [ebp+0x78],esi
640163b5:	mov    DWORD PTR [ebp+0x74],edi
640163b8:	data16 mov WORD PTR [ebp+0xa0],ss
640163bf:	data16 mov WORD PTR [ebp+0x94],cs
640163c6:	data16 mov WORD PTR [ebp+0x70],ds
640163ca:	data16 mov WORD PTR [ebp+0x6c],es
640163ce:	data16 mov WORD PTR [ebp+0x68],fs
640163d2:	data16 mov WORD PTR [ebp+0x64],gs
640163d6:	pushf  
640163d7:	pop    DWORD PTR [ebp+0x98]
640163dd:	mov    esi,DWORD PTR [ebp+0x2ac]
640163e3:	lea    eax,[ebp+0x2ac]
640163e9:	mov    DWORD PTR [ebp+0x9c],eax
640163ef:	mov    DWORD PTR [ebp-0x28],0x10001
640163f6:	mov    DWORD PTR [ebp+0x90],esi
640163fc:	mov    eax,DWORD PTR [eax-0x4]
640163ff:	push   0x50
64016401:	mov    DWORD PTR [ebp+0x8c],eax
64016407:	lea    eax,[ebp-0x80]
6401640a:	push   0x0
6401640c:	push   eax
6401640d:	call   0x64015100
64016412:	lea    eax,[ebp-0x80]
64016415:	add    esp,0xc
64016418:	mov    DWORD PTR [ebp-0x30],eax
6401641b:	lea    eax,[ebp-0x28]
6401641e:	push   0x0
64016420:	mov    DWORD PTR [ebp-0x80],0x40000015
64016427:	mov    DWORD PTR [ebp-0x74],esi
6401642a:	mov    DWORD PTR [ebp-0x2c],eax
6401642d:	call   DWORD PTR ds:0x6402c1b0
64016433:	lea    eax,[ebp-0x30]
64016436:	push   eax
64016437:	call   DWORD PTR ds:0x6402c1ac
6401643d:	push   0x3
6401643f:	call   0x64018246
64016444:	int3   
64016445:	mov    ecx,DWORD PTR [esp+0x8]
64016449:	mov    eax,ds:0x640522cc
6401644e:	mov    edx,DWORD PTR [esp+0x4]
64016452:	and    edx,DWORD PTR [esp+0x8]
64016456:	not    ecx
64016458:	and    ecx,eax
6401645a:	or     ecx,edx
6401645c:	mov    DWORD PTR ds:0x640522cc,ecx
64016462:	ret    
64016463:	int3   
64016464:	push   0x640158c0
64016469:	push   DWORD PTR fs:0x0
64016470:	mov    eax,DWORD PTR [esp+0x10]
64016474:	mov    DWORD PTR [esp+0x10],ebp
64016478:	lea    ebp,[esp+0x10]
6401647c:	sub    esp,eax
6401647e:	push   ebx
6401647f:	push   esi
64016480:	push   edi
64016481:	mov    eax,ds:0x640521ac
64016486:	xor    DWORD PTR [ebp-0x4],eax
64016489:	xor    eax,ebp
6401648b:	push   eax
6401648c:	mov    DWORD PTR [ebp-0x18],esp
6401648f:	push   DWORD PTR [ebp-0x8]
64016492:	mov    eax,DWORD PTR [ebp-0x4]
64016495:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401649c:	mov    DWORD PTR [ebp-0x8],eax
6401649f:	lea    eax,[ebp-0x10]
640164a2:	mov    fs:0x0,eax
640164a8:	ret    
640164a9:	mov    ecx,DWORD PTR [ebp-0x10]
640164ac:	mov    DWORD PTR fs:0x0,ecx
640164b3:	pop    ecx
640164b4:	pop    edi
640164b5:	pop    edi
640164b6:	pop    esi
640164b7:	pop    ebx
640164b8:	mov    esp,ebp
640164ba:	pop    ebp
640164bb:	push   ecx
640164bc:	ret    
640164bd:	mov    ecx,DWORD PTR [esp+0x4]
640164c1:	push   ebx
640164c2:	xor    ebx,ebx
640164c4:	cmp    ecx,ebx
640164c6:	push   esi
640164c7:	push   edi
640164c8:	je     0x640164d2
640164ca:	mov    edi,DWORD PTR [esp+0x14]
640164ce:	cmp    edi,ebx
640164d0:	ja     0x640164ed
640164d2:	call   0x64016663
640164d7:	push   0x16
640164d9:	pop    esi
640164da:	mov    DWORD PTR [eax],esi
640164dc:	push   ebx
640164dd:	push   ebx
640164de:	push   ebx
640164df:	push   ebx
640164e0:	push   ebx
640164e1:	call   0x64013df2
640164e6:	add    esp,0x14
640164e9:	mov    eax,esi
640164eb:	jmp    0x6401651e
640164ed:	mov    esi,DWORD PTR [esp+0x18]
640164f1:	cmp    esi,ebx
640164f3:	jne    0x640164f9
640164f5:	mov    BYTE PTR [ecx],bl
640164f7:	jmp    0x640164d2
640164f9:	mov    edx,ecx
640164fb:	mov    al,BYTE PTR [esi]
640164fd:	mov    BYTE PTR [edx],al
640164ff:	inc    edx
64016500:	inc    esi
64016501:	cmp    al,bl
64016503:	je     0x64016508
64016505:	dec    edi
64016506:	jne    0x640164fb
64016508:	cmp    edi,ebx
6401650a:	jne    0x6401651c
6401650c:	mov    BYTE PTR [ecx],bl
6401650e:	call   0x64016663
64016513:	push   0x22
64016515:	pop    ecx
64016516:	mov    DWORD PTR [eax],ecx
64016518:	mov    esi,ecx
6401651a:	jmp    0x640164dc
6401651c:	xor    eax,eax
6401651e:	pop    edi
6401651f:	pop    esi
64016520:	pop    ebx
64016521:	ret    
64016522:	push   0xc
64016524:	push   0x64043bb8
64016529:	call   0x64016464
6401652e:	push   0xe
64016530:	call   0x6401b42a
64016535:	pop    ecx
64016536:	and    DWORD PTR [ebp-0x4],0x0
6401653a:	mov    esi,DWORD PTR [ebp+0x8]
6401653d:	mov    ecx,DWORD PTR [esi+0x4]
64016540:	test   ecx,ecx
64016542:	je     0x64016573
64016544:	mov    eax,ds:0x64053a18
64016549:	mov    edx,0x64053a14
6401654e:	mov    DWORD PTR [ebp-0x1c],eax
64016551:	test   eax,eax
64016553:	je     0x64016566
64016555:	cmp    DWORD PTR [eax],ecx
64016557:	jne    0x64016585
64016559:	mov    ecx,DWORD PTR [eax+0x4]
6401655c:	mov    DWORD PTR [edx+0x4],ecx
6401655f:	push   eax
64016560:	call   0x6401475f
64016565:	pop    ecx
64016566:	push   DWORD PTR [esi+0x4]
64016569:	call   0x6401475f
6401656e:	pop    ecx
6401656f:	and    DWORD PTR [esi+0x4],0x0
64016573:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401657a:	call   0x64016589
6401657f:	call   0x640164a9
64016584:	ret    
64016585:	mov    edx,eax
64016587:	jmp    0x6401654e
64016589:	push   0xe
6401658b:	call   0x6401b352
64016590:	pop    ecx
64016591:	ret    
64016592:	int3   
64016593:	int3   
64016594:	int3   
64016595:	int3   
64016596:	int3   
64016597:	int3   
64016598:	int3   
64016599:	int3   
6401659a:	int3   
6401659b:	int3   
6401659c:	int3   
6401659d:	int3   
6401659e:	int3   
6401659f:	int3   
640165a0:	mov    edx,DWORD PTR [esp+0x4]
640165a4:	mov    ecx,DWORD PTR [esp+0x8]
640165a8:	test   edx,0x3
640165ae:	jne    0x640165ec
640165b0:	mov    eax,DWORD PTR [edx]
640165b2:	cmp    al,BYTE PTR [ecx]
640165b4:	jne    0x640165e4
640165b6:	or     al,al
640165b8:	je     0x640165e0
640165ba:	cmp    ah,BYTE PTR [ecx+0x1]
640165bd:	jne    0x640165e4
640165bf:	or     ah,ah
640165c1:	je     0x640165e0
640165c3:	shr    eax,0x10
640165c6:	cmp    al,BYTE PTR [ecx+0x2]
640165c9:	jne    0x640165e4
640165cb:	or     al,al
640165cd:	je     0x640165e0
640165cf:	cmp    ah,BYTE PTR [ecx+0x3]
640165d2:	jne    0x640165e4
640165d4:	add    ecx,0x4
640165d7:	add    edx,0x4
640165da:	or     ah,ah
640165dc:	jne    0x640165b0
640165de:	mov    edi,edi
640165e0:	xor    eax,eax
640165e2:	ret    
640165e3:	nop
640165e4:	sbb    eax,eax
640165e6:	shl    eax,1
640165e8:	add    eax,0x1
640165eb:	ret    
640165ec:	test   edx,0x1
640165f2:	je     0x6401660c
640165f4:	mov    al,BYTE PTR [edx]
640165f6:	add    edx,0x1
640165f9:	cmp    al,BYTE PTR [ecx]
640165fb:	jne    0x640165e4
640165fd:	add    ecx,0x1
64016600:	or     al,al
64016602:	je     0x640165e0
64016604:	test   edx,0x2
6401660a:	je     0x640165b0
6401660c:	mov    ax,WORD PTR [edx]
6401660f:	add    edx,0x2
64016612:	cmp    al,BYTE PTR [ecx]
64016614:	jne    0x640165e4
64016616:	or     al,al
64016618:	je     0x640165e0
6401661a:	cmp    ah,BYTE PTR [ecx+0x1]
6401661d:	jne    0x640165e4
6401661f:	or     ah,ah
64016621:	je     0x640165e0
64016623:	add    ecx,0x2
64016626:	jmp    0x640165b0
64016628:	mov    eax,DWORD PTR [esp+0x4]
6401662c:	xor    ecx,ecx
6401662e:	cmp    eax,DWORD PTR [ecx*8+0x640522e0]
64016635:	je     0x64016649
64016637:	inc    ecx
64016638:	cmp    ecx,0x2d
6401663b:	jb     0x6401662e
6401663d:	lea    ecx,[eax-0x13]
64016640:	cmp    ecx,0x11
64016643:	ja     0x64016651
64016645:	push   0xd
64016647:	pop    eax
64016648:	ret    
64016649:	mov    eax,DWORD PTR [ecx*8+0x640522e4]
64016650:	ret    
64016651:	add    eax,0xffffff44
64016656:	push   0xe
64016658:	pop    ecx
64016659:	cmp    ecx,eax
6401665b:	sbb    eax,eax
6401665d:	and    eax,ecx
6401665f:	add    eax,0x8
64016662:	ret    
64016663:	call   0x64017953
64016668:	test   eax,eax
6401666a:	jne    0x64016672
6401666c:	mov    eax,0x64052448
64016671:	ret    
64016672:	add    eax,0x8
64016675:	ret    
64016676:	call   0x64017953
6401667b:	test   eax,eax
6401667d:	jne    0x64016685
6401667f:	mov    eax,0x6405244c
64016684:	ret    
64016685:	add    eax,0xc
64016688:	ret    
64016689:	push   esi
6401668a:	call   0x64016676
6401668f:	mov    ecx,DWORD PTR [esp+0x8]
64016693:	push   ecx
64016694:	mov    DWORD PTR [eax],ecx
64016696:	call   0x64016628
6401669b:	pop    ecx
6401669c:	mov    esi,eax
6401669e:	call   0x64016663
640166a3:	mov    DWORD PTR [eax],esi
640166a5:	pop    esi
640166a6:	ret    
640166a7:	int3   
640166a8:	int3   
640166a9:	int3   
640166aa:	int3   
640166ab:	int3   
640166ac:	int3   
640166ad:	int3   
640166ae:	int3   
640166af:	int3   
640166b0:	push   ebp
640166b1:	mov    ebp,esp
640166b3:	push   edi
640166b4:	push   esi
640166b5:	mov    esi,DWORD PTR [ebp+0xc]
640166b8:	mov    ecx,DWORD PTR [ebp+0x10]
640166bb:	mov    edi,DWORD PTR [ebp+0x8]
640166be:	mov    eax,ecx
640166c0:	mov    edx,ecx
640166c2:	add    eax,esi
640166c4:	cmp    edi,esi
640166c6:	jbe    0x640166d0
640166c8:	cmp    edi,eax
640166ca:	jb     0x64016874
640166d0:	cmp    ecx,0x100
640166d6:	jb     0x640166f7
640166d8:	cmp    DWORD PTR ds:0x64054674,0x0
640166df:	je     0x640166f7
640166e1:	push   edi
640166e2:	push   esi
640166e3:	and    edi,0xf
640166e6:	and    esi,0xf
640166e9:	cmp    edi,esi
640166eb:	pop    esi
640166ec:	pop    edi
640166ed:	jne    0x640166f7
640166ef:	pop    esi
640166f0:	pop    edi
640166f1:	pop    ebp
640166f2:	jmp    0x6401daa1
640166f7:	test   edi,0x3
640166fd:	jne    0x64016714
640166ff:	shr    ecx,0x2
64016702:	and    edx,0x3
64016705:	cmp    ecx,0x8
64016708:	jb     0x64016734
6401670a:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
6401670c:	jmp    DWORD PTR [edx*4+0x64016824]
64016713:	nop
64016714:	mov    eax,edi
64016716:	mov    edx,0x3
6401671b:	sub    ecx,0x4
6401671e:	jb     0x6401672c
64016720:	and    eax,0x3
64016723:	add    ecx,eax
64016725:	jmp    DWORD PTR [eax*4+0x64016738]
6401672c:	jmp    DWORD PTR [ecx*4+0x64016834]
64016733:	nop
64016734:	jmp    DWORD PTR [ecx*4+0x640167b8]
6401673b:	nop
6401673c:	dec    eax
6401673d:	add    DWORD PTR [si+0x74],esp
64016741:	add    DWORD PTR [si-0x68],esp
64016745:	add    DWORD PTR [si+0x23],esp
64016749:	ror    DWORD PTR [edx-0x75f877fa],1
6401674f:	inc    esi
64016750:	add    DWORD PTR [eax+0x468a0147],ecx
64016756:	add    al,cl
64016758:	jmp    0x6648ef5f
6401675d:	add    esi,0x3
64016760:	add    edi,0x3
64016763:	cmp    ecx,0x8
64016766:	jb     0x64016734
64016768:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
6401676a:	jmp    DWORD PTR [edx*4+0x64016824]
64016771:	lea    ecx,[ecx+0x0]
64016774:	and    edx,ecx
64016776:	mov    al,BYTE PTR [esi]
64016778:	mov    BYTE PTR [edi],al
6401677a:	mov    al,BYTE PTR [esi+0x1]
6401677d:	shr    ecx,0x2
64016780:	mov    BYTE PTR [edi+0x1],al
64016783:	add    esi,0x2
64016786:	add    edi,0x2
64016789:	cmp    ecx,0x8
6401678c:	jb     0x64016734
6401678e:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
64016790:	jmp    DWORD PTR [edx*4+0x64016824]
64016797:	nop
64016798:	and    edx,ecx
6401679a:	mov    al,BYTE PTR [esi]
6401679c:	mov    BYTE PTR [edi],al
6401679e:	add    esi,0x1
640167a1:	shr    ecx,0x2
640167a4:	add    edi,0x1
640167a7:	cmp    ecx,0x8
640167aa:	jb     0x64016734
640167ac:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
640167ae:	jmp    DWORD PTR [edx*4+0x64016824]
640167b5:	lea    ecx,[ecx+0x0]
640167b8:	sbb    ebp,DWORD PTR [eax+0x1]
640167bb:	or     BYTE PTR fs:[eax+0x1],ch
640167bf:	add    BYTE PTR fs:[eax+0x1],ch
640167c3:	fs clc 
640167c5:	add    DWORD PTR [si-0x10],esp
640167c9:	add    DWORD PTR [si-0x18],esp
640167cd:	add    DWORD PTR [si-0x20],esp
640167d1:	add    DWORD PTR [si-0x28],esp
640167d5:	add    DWORD PTR [si-0x75],esp
640167d9:	inc    esp
640167da:	mov    fs,esp
640167dc:	mov    DWORD PTR [edi+ecx*4-0x1c],eax
640167e0:	mov    eax,DWORD PTR [esi+ecx*4-0x18]
640167e4:	mov    DWORD PTR [edi+ecx*4-0x18],eax
640167e8:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
640167ec:	mov    DWORD PTR [edi+ecx*4-0x14],eax
640167f0:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
640167f4:	mov    DWORD PTR [edi+ecx*4-0x10],eax
640167f8:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
640167fc:	mov    DWORD PTR [edi+ecx*4-0xc],eax
64016800:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
64016804:	mov    DWORD PTR [edi+ecx*4-0x8],eax
64016808:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
6401680c:	mov    DWORD PTR [edi+ecx*4-0x4],eax
64016810:	lea    eax,[ecx*4+0x0]
64016817:	add    esi,eax
64016819:	add    edi,eax
6401681b:	jmp    DWORD PTR [edx*4+0x64016824]
64016822:	mov    edi,edi
64016824:	xor    al,0x68
64016826:	add    DWORD PTR [esp+edi*1+0x68],esp
6401682a:	add    DWORD PTR [eax+ecx*2+0x68],esp
6401682e:	add    DWORD PTR [esp+ebx*2+0x68],esp
64016832:	add    DWORD PTR [ebx+ecx*4+0x45],esp
64016836:	or     BYTE PTR [esi+0x5f],bl
64016839:	leave  
6401683a:	ret    
6401683b:	nop
6401683c:	mov    al,BYTE PTR [esi]
6401683e:	mov    BYTE PTR [edi],al
64016840:	mov    eax,DWORD PTR [ebp+0x8]
64016843:	pop    esi
64016844:	pop    edi
64016845:	leave  
64016846:	ret    
64016847:	nop
64016848:	mov    al,BYTE PTR [esi]
6401684a:	mov    BYTE PTR [edi],al
6401684c:	mov    al,BYTE PTR [esi+0x1]
6401684f:	mov    BYTE PTR [edi+0x1],al
64016852:	mov    eax,DWORD PTR [ebp+0x8]
64016855:	pop    esi
64016856:	pop    edi
64016857:	leave  
64016858:	ret    
64016859:	lea    ecx,[ecx+0x0]
6401685c:	mov    al,BYTE PTR [esi]
6401685e:	mov    BYTE PTR [edi],al
64016860:	mov    al,BYTE PTR [esi+0x1]
64016863:	mov    BYTE PTR [edi+0x1],al
64016866:	mov    al,BYTE PTR [esi+0x2]
64016869:	mov    BYTE PTR [edi+0x2],al
6401686c:	mov    eax,DWORD PTR [ebp+0x8]
6401686f:	pop    esi
64016870:	pop    edi
64016871:	leave  
64016872:	ret    
64016873:	nop
64016874:	lea    esi,[ecx+esi*1-0x4]
64016878:	lea    edi,[ecx+edi*1-0x4]
6401687c:	test   edi,0x3
64016882:	jne    0x640168a8
64016884:	shr    ecx,0x2
64016887:	and    edx,0x3
6401688a:	cmp    ecx,0x8
6401688d:	jb     0x6401689c
6401688f:	std    
64016890:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
64016892:	cld    
64016893:	jmp    DWORD PTR [edx*4+0x640169c0]
6401689a:	mov    edi,edi
6401689c:	neg    ecx
6401689e:	jmp    DWORD PTR [ecx*4+0x64016970]
640168a5:	lea    ecx,[ecx+0x0]
640168a8:	mov    eax,edi
640168aa:	mov    edx,0x3
640168af:	cmp    ecx,0x4
640168b2:	jb     0x640168c0
640168b4:	and    eax,0x3
640168b7:	sub    ecx,eax
640168b9:	jmp    DWORD PTR [eax*4+0x640168c4]
640168c0:	jmp    DWORD PTR [ecx*4+0x640169c0]
640168c7:	nop
640168c8:	aam    0x68
640168ca:	add    DWORD PTR [eax+edi*8+0x68],esp
640168ce:	add    DWORD PTR [eax+eiz*1+0x69],esp
640168d2:	add    DWORD PTR [edx+ecx*4+0x46],esp
640168d6:	add    esp,DWORD PTR [ebx]
640168d8:	ror    DWORD PTR [eax-0x117cfcb9],1
640168de:	add    ecx,eax
640168e0:	jmp    0x65f0ebe7
640168e5:	cmp    ecx,0x8
640168e8:	jb     0x6401689c
640168ea:	std    
640168eb:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
640168ed:	cld    
640168ee:	jmp    DWORD PTR [edx*4+0x640169c0]
640168f5:	lea    ecx,[ecx+0x0]
640168f8:	mov    al,BYTE PTR [esi+0x3]
640168fb:	and    edx,ecx
640168fd:	mov    BYTE PTR [edi+0x3],al
64016900:	mov    al,BYTE PTR [esi+0x2]
64016903:	shr    ecx,0x2
64016906:	mov    BYTE PTR [edi+0x2],al
64016909:	sub    esi,0x2
6401690c:	sub    edi,0x2
6401690f:	cmp    ecx,0x8
64016912:	jb     0x6401689c
64016914:	std    
64016915:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
64016917:	cld    
64016918:	jmp    DWORD PTR [edx*4+0x640169c0]
6401691f:	nop
64016920:	mov    al,BYTE PTR [esi+0x3]
64016923:	and    edx,ecx
64016925:	mov    BYTE PTR [edi+0x3],al
64016928:	mov    al,BYTE PTR [esi+0x2]
6401692b:	mov    BYTE PTR [edi+0x2],al
6401692e:	mov    al,BYTE PTR [esi+0x1]
64016931:	shr    ecx,0x2
64016934:	mov    BYTE PTR [edi+0x1],al
64016937:	sub    esi,0x3
6401693a:	sub    edi,0x3
6401693d:	cmp    ecx,0x8
64016940:	jb     0x6401689c
64016946:	std    
64016947:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
64016949:	cld    
6401694a:	jmp    DWORD PTR [edx*4+0x640169c0]
64016951:	lea    ecx,[ecx+0x0]
64016954:	je     0x640169bf
64016956:	add    DWORD PTR [esp+edi*2+0x69],esp
6401695a:	add    DWORD PTR [esp+eax*4+0x69],esp
6401695e:	add    DWORD PTR [esp+ecx*4+0x69],esp
64016962:	add    DWORD PTR [esp+edx*4+0x69],esp
64016966:	add    DWORD PTR [esp+ebx*4+0x69],esp
6401696a:	add    DWORD PTR [esp+eiz*4+0x69],esp
6401696e:	add    DWORD PTR [edi+esi*4+0x69],esp
64016972:	add    DWORD PTR [ebx+ecx*4+0x44],esp
64016976:	mov    ds,WORD PTR [ecx+ecx*4]
64016979:	inc    esp
6401697a:	(bad)  
6401697b:	sbb    al,0x8b
6401697d:	inc    esp
6401697e:	mov    ds,WORD PTR [eax]
64016980:	mov    DWORD PTR [edi+ecx*4+0x18],eax
64016984:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
64016988:	mov    DWORD PTR [edi+ecx*4+0x14],eax
6401698c:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
64016990:	mov    DWORD PTR [edi+ecx*4+0x10],eax
64016994:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
64016998:	mov    DWORD PTR [edi+ecx*4+0xc],eax
6401699c:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
640169a0:	mov    DWORD PTR [edi+ecx*4+0x8],eax
640169a4:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
640169a8:	mov    DWORD PTR [edi+ecx*4+0x4],eax
640169ac:	lea    eax,[ecx*4+0x0]
640169b3:	add    esi,eax
640169b5:	add    edi,eax
640169b7:	jmp    DWORD PTR [edx*4+0x640169c0]
640169be:	mov    edi,edi
640169c0:	shr    BYTE PTR [ecx+0x1],1
640169c3:	fsubr  DWORD PTR fs:[ecx+0x1]
640169c7:	fs call 0x60656b36
640169cd:	imul   eax,DWORD PTR [ecx],0x8458b64
640169d3:	pop    esi
640169d4:	pop    edi
640169d5:	leave  
640169d6:	ret    
640169d7:	nop
640169d8:	mov    al,BYTE PTR [esi+0x3]
640169db:	mov    BYTE PTR [edi+0x3],al
640169de:	mov    eax,DWORD PTR [ebp+0x8]
640169e1:	pop    esi
640169e2:	pop    edi
640169e3:	leave  
640169e4:	ret    
640169e5:	lea    ecx,[ecx+0x0]
640169e8:	mov    al,BYTE PTR [esi+0x3]
640169eb:	mov    BYTE PTR [edi+0x3],al
640169ee:	mov    al,BYTE PTR [esi+0x2]
640169f1:	mov    BYTE PTR [edi+0x2],al
640169f4:	mov    eax,DWORD PTR [ebp+0x8]
640169f7:	pop    esi
640169f8:	pop    edi
640169f9:	leave  
640169fa:	ret    
640169fb:	nop
640169fc:	mov    al,BYTE PTR [esi+0x3]
640169ff:	mov    BYTE PTR [edi+0x3],al
64016a02:	mov    al,BYTE PTR [esi+0x2]
64016a05:	mov    BYTE PTR [edi+0x2],al
64016a08:	mov    al,BYTE PTR [esi+0x1]
64016a0b:	mov    BYTE PTR [edi+0x1],al
64016a0e:	mov    eax,DWORD PTR [ebp+0x8]
64016a11:	pop    esi
64016a12:	pop    edi
64016a13:	leave  
64016a14:	ret    
64016a15:	mov    eax,DWORD PTR [esp+0x4]
64016a19:	mov    ds:0x64053a1c,eax
64016a1e:	ret    
64016a1f:	push   DWORD PTR ds:0x64053a1c
64016a25:	call   0x640177ae
64016a2a:	test   eax,eax
64016a2c:	pop    ecx
64016a2d:	je     0x64016a3e
64016a2f:	push   DWORD PTR [esp+0x4]
64016a33:	call   eax
64016a35:	test   eax,eax
64016a37:	pop    ecx
64016a38:	je     0x64016a3e
64016a3a:	xor    eax,eax
64016a3c:	inc    eax
64016a3d:	ret    
64016a3e:	xor    eax,eax
64016a40:	ret    
64016a41:	mov    DWORD PTR [ecx],0x640408b0
64016a47:	jmp    0x640136b8
64016a4c:	push   esi
64016a4d:	mov    esi,ecx
64016a4f:	mov    DWORD PTR [esi],0x640408b0
64016a55:	call   0x640136b8
64016a5a:	test   BYTE PTR [esp+0x8],0x1
64016a5f:	je     0x64016a68
64016a61:	push   esi
64016a62:	call   0x640135e4
64016a67:	pop    ecx
64016a68:	mov    eax,esi
64016a6a:	pop    esi
64016a6b:	ret    0x4
64016a6e:	push   esi
64016a6f:	push   edi
64016a70:	mov    edi,DWORD PTR [esp+0xc]
64016a74:	mov    eax,DWORD PTR [edi+0x4]
64016a77:	test   eax,eax
64016a79:	je     0x64016ac4
64016a7b:	lea    edx,[eax+0x8]
64016a7e:	cmp    BYTE PTR [edx],0x0
64016a81:	je     0x64016ac4
64016a83:	mov    esi,DWORD PTR [esp+0x10]
64016a87:	mov    ecx,DWORD PTR [esi+0x4]
64016a8a:	cmp    eax,ecx
64016a8c:	je     0x64016aa2
64016a8e:	add    ecx,0x8
64016a91:	push   ecx
64016a92:	push   edx
64016a93:	call   0x640165a0
64016a98:	test   eax,eax
64016a9a:	pop    ecx
64016a9b:	pop    ecx
64016a9c:	je     0x64016aa2
64016a9e:	xor    eax,eax
64016aa0:	jmp    0x64016ac7
64016aa2:	test   BYTE PTR [esi],0x2
64016aa5:	je     0x64016aac
64016aa7:	test   BYTE PTR [edi],0x8
64016aaa:	je     0x64016a9e
64016aac:	mov    eax,DWORD PTR [esp+0x14]
64016ab0:	mov    eax,DWORD PTR [eax]
64016ab2:	test   al,0x1
64016ab4:	je     0x64016abb
64016ab6:	test   BYTE PTR [edi],0x1
64016ab9:	je     0x64016a9e
64016abb:	test   al,0x2
64016abd:	je     0x64016ac4
64016abf:	test   BYTE PTR [edi],0x2
64016ac2:	je     0x64016a9e
64016ac4:	xor    eax,eax
64016ac6:	inc    eax
64016ac7:	pop    edi
64016ac8:	pop    esi
64016ac9:	ret    
64016aca:	mov    eax,DWORD PTR [esp+0x4]
64016ace:	mov    eax,DWORD PTR [eax]
64016ad0:	mov    eax,DWORD PTR [eax]
64016ad2:	cmp    eax,0xe0434f4d
64016ad7:	je     0x64016af1
64016ad9:	cmp    eax,0xe06d7363
64016ade:	jne    0x64016b0b
64016ae0:	call   0x640179ca
64016ae5:	and    DWORD PTR [eax+0x90],0x0
64016aec:	jmp    0x64017cf0
64016af1:	call   0x640179ca
64016af6:	cmp    DWORD PTR [eax+0x90],0x0
64016afd:	jle    0x64016b0b
64016aff:	call   0x640179ca
64016b04:	add    eax,0x90
64016b09:	dec    DWORD PTR [eax]
64016b0b:	xor    eax,eax
64016b0d:	ret    
64016b0e:	push   0x10
64016b10:	push   0x64043bd8
64016b15:	call   0x64016464
64016b1a:	mov    edi,DWORD PTR [ebp+0x10]
64016b1d:	mov    ebx,DWORD PTR [ebp+0x8]
64016b20:	cmp    DWORD PTR [edi+0x4],0x80
64016b27:	jg     0x64016b2f
64016b29:	movsx  esi,BYTE PTR [ebx+0x8]
64016b2d:	jmp    0x64016b32
64016b2f:	mov    esi,DWORD PTR [ebx+0x8]
64016b32:	mov    DWORD PTR [ebp-0x1c],esi
64016b35:	call   0x640179ca
64016b3a:	add    eax,0x90
64016b3f:	inc    DWORD PTR [eax]
64016b41:	and    DWORD PTR [ebp-0x4],0x0
64016b45:	cmp    esi,DWORD PTR [ebp+0x14]
64016b48:	je     0x64016baf
64016b4a:	cmp    esi,0xffffffff
64016b4d:	jle    0x64016b54
64016b4f:	cmp    esi,DWORD PTR [edi+0x4]
64016b52:	jl     0x64016b59
64016b54:	call   0x64017d3c
64016b59:	mov    eax,esi
64016b5b:	shl    eax,0x3
64016b5e:	mov    ecx,DWORD PTR [edi+0x8]
64016b61:	add    ecx,eax
64016b63:	mov    esi,DWORD PTR [ecx]
64016b65:	mov    DWORD PTR [ebp-0x20],esi
64016b68:	mov    DWORD PTR [ebp-0x4],0x1
64016b6f:	cmp    DWORD PTR [ecx+0x4],0x0
64016b73:	je     0x64016b8a
64016b75:	mov    DWORD PTR [ebx+0x8],esi
64016b78:	push   0x103
64016b7d:	push   ebx
64016b7e:	mov    ecx,DWORD PTR [edi+0x8]
64016b81:	push   DWORD PTR [ecx+eax*1+0x4]
64016b85:	call   0x64017d90
64016b8a:	and    DWORD PTR [ebp-0x4],0x0
64016b8e:	jmp    0x64016baa
64016b90:	push   DWORD PTR [ebp-0x14]
64016b93:	call   0x64016aca
64016b98:	pop    ecx
64016b99:	ret    
64016b9a:	mov    esp,DWORD PTR [ebp-0x18]
64016b9d:	and    DWORD PTR [ebp-0x4],0x0
64016ba1:	mov    edi,DWORD PTR [ebp+0x10]
64016ba4:	mov    ebx,DWORD PTR [ebp+0x8]
64016ba7:	mov    esi,DWORD PTR [ebp-0x20]
64016baa:	mov    DWORD PTR [ebp-0x1c],esi
64016bad:	jmp    0x64016b45
64016baf:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64016bb6:	call   0x64016bd4
64016bbb:	cmp    esi,DWORD PTR [ebp+0x14]
64016bbe:	je     0x64016bc5
64016bc0:	call   0x64017d3c
64016bc5:	mov    DWORD PTR [ebx+0x8],esi
64016bc8:	call   0x640164a9
64016bcd:	ret    
64016bce:	mov    ebx,DWORD PTR [ebp+0x8]
64016bd1:	mov    esi,DWORD PTR [ebp-0x1c]
64016bd4:	call   0x640179ca
64016bd9:	cmp    DWORD PTR [eax+0x90],0x0
64016be0:	jle    0x64016bee
64016be2:	call   0x640179ca
64016be7:	add    eax,0x90
64016bec:	dec    DWORD PTR [eax]
64016bee:	ret    
64016bef:	mov    eax,DWORD PTR [eax]
64016bf1:	cmp    DWORD PTR [eax],0xe06d7363
64016bf7:	jne    0x64016c31
64016bf9:	cmp    DWORD PTR [eax+0x10],0x3
64016bfd:	jne    0x64016c31
64016bff:	mov    ecx,DWORD PTR [eax+0x14]
64016c02:	cmp    ecx,0x19930520
64016c08:	je     0x64016c1a
64016c0a:	cmp    ecx,0x19930521
64016c10:	je     0x64016c1a
64016c12:	cmp    ecx,0x19930522
64016c18:	jne    0x64016c31
64016c1a:	cmp    DWORD PTR [eax+0x1c],0x0
64016c1e:	jne    0x64016c31
64016c20:	call   0x640179ca
64016c25:	xor    ecx,ecx
64016c27:	inc    ecx
64016c28:	mov    DWORD PTR [eax+0x20c],ecx
64016c2e:	mov    eax,ecx
64016c30:	ret    
64016c31:	xor    eax,eax
64016c33:	ret    
64016c34:	push   0x8
64016c36:	push   0x64043c00
64016c3b:	call   0x64016464
64016c40:	mov    ecx,DWORD PTR [ebp+0x8]
64016c43:	test   ecx,ecx
64016c45:	je     0x64016c71
64016c47:	cmp    DWORD PTR [ecx],0xe06d7363
64016c4d:	jne    0x64016c71
64016c4f:	mov    eax,DWORD PTR [ecx+0x1c]
64016c52:	test   eax,eax
64016c54:	je     0x64016c71
64016c56:	mov    eax,DWORD PTR [eax+0x4]
64016c59:	test   eax,eax
64016c5b:	je     0x64016c71
64016c5d:	and    DWORD PTR [ebp-0x4],0x0
64016c61:	push   eax
64016c62:	push   DWORD PTR [ecx+0x18]
64016c65:	call   0x6401390f
64016c6a:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64016c71:	call   0x640164a9
64016c76:	ret    
64016c77:	xor    eax,eax
64016c79:	cmp    BYTE PTR [ebp+0xc],al
64016c7c:	setne  al
64016c7f:	ret    
64016c80:	mov    esp,DWORD PTR [ebp-0x18]
64016c83:	jmp    0x64017cf0
64016c88:	mov    ecx,DWORD PTR [esp+0x8]
64016c8c:	mov    eax,DWORD PTR [ecx]
64016c8e:	push   esi
64016c8f:	mov    esi,DWORD PTR [esp+0x8]
64016c93:	add    eax,esi
64016c95:	cmp    DWORD PTR [ecx+0x4],0x0
64016c99:	jl     0x64016cab
64016c9b:	mov    edx,DWORD PTR [ecx+0x4]
64016c9e:	mov    ecx,DWORD PTR [ecx+0x8]
64016ca1:	mov    esi,DWORD PTR [edx+esi*1]
64016ca4:	mov    ecx,DWORD PTR [esi+ecx*1]
64016ca7:	add    ecx,edx
64016ca9:	add    eax,ecx
64016cab:	pop    esi
64016cac:	ret    
64016cad:	push   ebp
64016cae:	mov    ebp,esp
64016cb0:	sub    esp,0xc
64016cb3:	test   edi,edi
64016cb5:	jne    0x64016cc1
64016cb7:	call   0x64017d3c
64016cbc:	jmp    0x64017cf0
64016cc1:	and    DWORD PTR [ebp-0x8],0x0
64016cc5:	cmp    DWORD PTR [edi],0x0
64016cc8:	mov    BYTE PTR [ebp-0x1],0x0
64016ccc:	jle    0x64016d21
64016cce:	push   ebx
64016ccf:	push   esi
64016cd0:	mov    eax,DWORD PTR [ebp+0x8]
64016cd3:	mov    eax,DWORD PTR [eax+0x1c]
64016cd6:	mov    eax,DWORD PTR [eax+0xc]
64016cd9:	mov    ebx,DWORD PTR [eax]
64016cdb:	test   ebx,ebx
64016cdd:	lea    esi,[eax+0x4]
64016ce0:	jle    0x64016d15
64016ce2:	mov    eax,DWORD PTR [ebp-0x8]
64016ce5:	shl    eax,0x4
64016ce8:	mov    DWORD PTR [ebp-0xc],eax
64016ceb:	mov    ecx,DWORD PTR [ebp+0x8]
64016cee:	push   DWORD PTR [ecx+0x1c]
64016cf1:	mov    eax,DWORD PTR [esi]
64016cf3:	push   eax
64016cf4:	mov    eax,DWORD PTR [edi+0x4]
64016cf7:	add    eax,DWORD PTR [ebp-0xc]
64016cfa:	push   eax
64016cfb:	call   0x64016a6e
64016d00:	add    esp,0xc
64016d03:	test   eax,eax
64016d05:	jne    0x64016d11
64016d07:	dec    ebx
64016d08:	add    esi,0x4
64016d0b:	test   ebx,ebx
64016d0d:	jg     0x64016ceb
64016d0f:	jmp    0x64016d15
64016d11:	mov    BYTE PTR [ebp-0x1],0x1
64016d15:	inc    DWORD PTR [ebp-0x8]
64016d18:	mov    eax,DWORD PTR [ebp-0x8]
64016d1b:	cmp    eax,DWORD PTR [edi]
64016d1d:	jl     0x64016cd0
64016d1f:	pop    esi
64016d20:	pop    ebx
64016d21:	mov    al,BYTE PTR [ebp-0x1]
64016d24:	leave  
64016d25:	ret    
64016d26:	push   0x4
64016d28:	mov    eax,0x64022ef3
64016d2d:	call   0x64015b5e
64016d32:	call   0x640179ca
64016d37:	cmp    DWORD PTR [eax+0x94],0x0
64016d3e:	je     0x64016d45
64016d40:	call   0x64017d3c
64016d45:	and    DWORD PTR [ebp-0x4],0x0
64016d49:	call   0x64017d29
64016d4e:	or     DWORD PTR [ebp-0x4],0xffffffff
64016d52:	jmp    0x64017cf0
64016d57:	call   0x640179ca
64016d5c:	mov    ecx,DWORD PTR [ebp+0x8]
64016d5f:	push   0x0
64016d61:	push   0x0
64016d63:	mov    DWORD PTR [eax+0x94],ecx
64016d69:	call   0x64013812
64016d6e:	int3   
64016d6f:	push   0x2c
64016d71:	push   0x64043c78
64016d76:	call   0x64016464
64016d7b:	mov    ebx,ecx
64016d7d:	mov    edi,DWORD PTR [ebp+0xc]
64016d80:	mov    esi,DWORD PTR [ebp+0x8]
64016d83:	mov    DWORD PTR [ebp-0x1c],ebx
64016d86:	and    DWORD PTR [ebp-0x34],0x0
64016d8a:	mov    eax,DWORD PTR [edi-0x4]
64016d8d:	mov    DWORD PTR [ebp-0x24],eax
64016d90:	push   DWORD PTR [esi+0x18]
64016d93:	lea    eax,[ebp-0x3c]
64016d96:	push   eax
64016d97:	call   0x64013bb3
64016d9c:	pop    ecx
64016d9d:	pop    ecx
64016d9e:	mov    DWORD PTR [ebp-0x28],eax
64016da1:	call   0x640179ca
64016da6:	mov    eax,DWORD PTR [eax+0x88]
64016dac:	mov    DWORD PTR [ebp-0x2c],eax
64016daf:	call   0x640179ca
64016db4:	mov    eax,DWORD PTR [eax+0x8c]
64016dba:	mov    DWORD PTR [ebp-0x30],eax
64016dbd:	call   0x640179ca
64016dc2:	mov    DWORD PTR [eax+0x88],esi
64016dc8:	call   0x640179ca
64016dcd:	mov    ecx,DWORD PTR [ebp+0x10]
64016dd0:	mov    DWORD PTR [eax+0x8c],ecx
64016dd6:	and    DWORD PTR [ebp-0x4],0x0
64016dda:	xor    eax,eax
64016ddc:	inc    eax
64016ddd:	mov    DWORD PTR [ebp+0x10],eax
64016de0:	mov    DWORD PTR [ebp-0x4],eax
64016de3:	push   DWORD PTR [ebp+0x1c]
64016de6:	push   DWORD PTR [ebp+0x18]
64016de9:	push   ebx
64016dea:	push   DWORD PTR [ebp+0x14]
64016ded:	push   edi
64016dee:	call   0x64013c48
64016df3:	add    esp,0x14
64016df6:	mov    DWORD PTR [ebp-0x1c],eax
64016df9:	and    DWORD PTR [ebp-0x4],0x0
64016dfd:	jmp    0x64016e6e
64016dff:	mov    eax,DWORD PTR [ebp-0x14]
64016e02:	call   0x64016bef
64016e07:	ret    
64016e08:	mov    esp,DWORD PTR [ebp-0x18]
64016e0b:	call   0x640179ca
64016e10:	and    DWORD PTR [eax+0x20c],0x0
64016e17:	mov    esi,DWORD PTR [ebp+0x14]
64016e1a:	mov    edi,DWORD PTR [ebp+0xc]
64016e1d:	cmp    DWORD PTR [esi+0x4],0x80
64016e24:	jg     0x64016e2c
64016e26:	movsx  ecx,BYTE PTR [edi+0x8]
64016e2a:	jmp    0x64016e2f
64016e2c:	mov    ecx,DWORD PTR [edi+0x8]
64016e2f:	mov    ebx,DWORD PTR [esi+0x10]
64016e32:	and    DWORD PTR [ebp-0x20],0x0
64016e36:	mov    eax,DWORD PTR [ebp-0x20]
64016e39:	cmp    eax,DWORD PTR [esi+0xc]
64016e3c:	jae    0x64016e56
64016e3e:	imul   eax,eax,0x14
64016e41:	add    eax,ebx
64016e43:	mov    edx,DWORD PTR [eax+0x4]
64016e46:	cmp    ecx,edx
64016e48:	jle    0x64016e8a
64016e4a:	cmp    ecx,DWORD PTR [eax+0x8]
64016e4d:	jg     0x64016e8a
64016e4f:	mov    eax,DWORD PTR [esi+0x8]
64016e52:	mov    ecx,DWORD PTR [eax+edx*8+0x8]
64016e56:	push   ecx
64016e57:	push   esi
64016e58:	push   0x0
64016e5a:	push   edi
64016e5b:	call   0x64016b0e
64016e60:	add    esp,0x10
64016e63:	and    DWORD PTR [ebp-0x1c],0x0
64016e67:	and    DWORD PTR [ebp-0x4],0x0
64016e6b:	mov    esi,DWORD PTR [ebp+0x8]
64016e6e:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64016e75:	mov    DWORD PTR [ebp+0x10],0x0
64016e7c:	call   0x64016e95
64016e81:	mov    eax,DWORD PTR [ebp-0x1c]
64016e84:	call   0x640164a9
64016e89:	ret    
64016e8a:	inc    DWORD PTR [ebp-0x20]
64016e8d:	jmp    0x64016e36
64016e8f:	mov    edi,DWORD PTR [ebp+0xc]
64016e92:	mov    esi,DWORD PTR [ebp+0x8]
64016e95:	mov    eax,DWORD PTR [ebp-0x24]
64016e98:	mov    DWORD PTR [edi-0x4],eax
64016e9b:	push   DWORD PTR [ebp-0x28]
64016e9e:	call   0x64013bfc
64016ea3:	pop    ecx
64016ea4:	call   0x640179ca
64016ea9:	mov    ecx,DWORD PTR [ebp-0x2c]
64016eac:	mov    DWORD PTR [eax+0x88],ecx
64016eb2:	call   0x640179ca
64016eb7:	mov    ecx,DWORD PTR [ebp-0x30]
64016eba:	mov    DWORD PTR [eax+0x8c],ecx
64016ec0:	cmp    DWORD PTR [esi],0xe06d7363
64016ec6:	jne    0x64016f0a
64016ec8:	cmp    DWORD PTR [esi+0x10],0x3
64016ecc:	jne    0x64016f0a
64016ece:	mov    eax,DWORD PTR [esi+0x14]
64016ed1:	cmp    eax,0x19930520
64016ed6:	je     0x64016ee6
64016ed8:	cmp    eax,0x19930521
64016edd:	je     0x64016ee6
64016edf:	cmp    eax,0x19930522
64016ee4:	jne    0x64016f0a
64016ee6:	cmp    DWORD PTR [ebp-0x34],0x0
64016eea:	jne    0x64016f0a
64016eec:	cmp    DWORD PTR [ebp-0x1c],0x0
64016ef0:	je     0x64016f0a
64016ef2:	push   DWORD PTR [esi+0x18]
64016ef5:	call   0x64013bdb
64016efa:	pop    ecx
64016efb:	test   eax,eax
64016efd:	je     0x64016f0a
64016eff:	push   DWORD PTR [ebp+0x10]
64016f02:	push   esi
64016f03:	call   0x64016c34
64016f08:	pop    ecx
64016f09:	pop    ecx
64016f0a:	ret    
64016f0b:	push   0xc
64016f0d:	push   0x64043ca0
64016f12:	call   0x64016464
64016f17:	xor    edx,edx
64016f19:	mov    DWORD PTR [ebp-0x1c],edx
64016f1c:	mov    eax,DWORD PTR [ebp+0x10]
64016f1f:	mov    ecx,DWORD PTR [eax+0x4]
64016f22:	cmp    ecx,edx
64016f24:	je     0x64017082
64016f2a:	cmp    BYTE PTR [ecx+0x8],dl
64016f2d:	je     0x64017082
64016f33:	mov    ecx,DWORD PTR [eax+0x8]
64016f36:	cmp    ecx,edx
64016f38:	jne    0x64016f46
64016f3a:	test   DWORD PTR [eax],0x80000000
64016f40:	je     0x64017082
64016f46:	mov    eax,DWORD PTR [eax]
64016f48:	mov    esi,DWORD PTR [ebp+0xc]
64016f4b:	test   eax,eax
64016f4d:	js     0x64016f53
64016f4f:	lea    esi,[ecx+esi*1+0xc]
64016f53:	mov    DWORD PTR [ebp-0x4],edx
64016f56:	xor    ebx,ebx
64016f58:	inc    ebx
64016f59:	push   ebx
64016f5a:	test   al,0x8
64016f5c:	je     0x64016f9f
64016f5e:	mov    edi,DWORD PTR [ebp+0x8]
64016f61:	push   DWORD PTR [edi+0x18]
64016f64:	call   0x6401e6e3
64016f69:	pop    ecx
64016f6a:	pop    ecx
64016f6b:	test   eax,eax
64016f6d:	je     0x64017065
64016f73:	push   ebx
64016f74:	push   esi
64016f75:	call   0x6401e6e3
64016f7a:	pop    ecx
64016f7b:	pop    ecx
64016f7c:	test   eax,eax
64016f7e:	je     0x64017065
64016f84:	mov    eax,DWORD PTR [edi+0x18]
64016f87:	mov    DWORD PTR [esi],eax
64016f89:	mov    ecx,DWORD PTR [ebp+0x14]
64016f8c:	add    ecx,0x8
64016f8f:	push   ecx
64016f90:	push   eax
64016f91:	call   0x64016c88
64016f96:	pop    ecx
64016f97:	pop    ecx
64016f98:	mov    DWORD PTR [esi],eax
64016f9a:	jmp    0x6401706a
64016f9f:	mov    edi,DWORD PTR [ebp+0x14]
64016fa2:	mov    eax,DWORD PTR [ebp+0x8]
64016fa5:	push   DWORD PTR [eax+0x18]
64016fa8:	test   BYTE PTR [edi],bl
64016faa:	je     0x64016ff4
64016fac:	call   0x6401e6e3
64016fb1:	pop    ecx
64016fb2:	pop    ecx
64016fb3:	test   eax,eax
64016fb5:	je     0x64017065
64016fbb:	push   ebx
64016fbc:	push   esi
64016fbd:	call   0x6401e6e3
64016fc2:	pop    ecx
64016fc3:	pop    ecx
64016fc4:	test   eax,eax
64016fc6:	je     0x64017065
64016fcc:	push   DWORD PTR [edi+0x14]
64016fcf:	mov    eax,DWORD PTR [ebp+0x8]
64016fd2:	push   DWORD PTR [eax+0x18]
64016fd5:	push   esi
64016fd6:	call   0x640166b0
64016fdb:	add    esp,0xc
64016fde:	cmp    DWORD PTR [edi+0x14],0x4
64016fe2:	jne    0x6401706a
64016fe8:	mov    eax,DWORD PTR [esi]
64016fea:	test   eax,eax
64016fec:	je     0x6401706a
64016fee:	add    edi,0x8
64016ff1:	push   edi
64016ff2:	jmp    0x64016f90
64016ff4:	cmp    DWORD PTR [edi+0x18],edx
64016ff7:	jne    0x64017031
64016ff9:	call   0x6401e6e3
64016ffe:	pop    ecx
64016fff:	pop    ecx
64017000:	test   eax,eax
64017002:	je     0x64017065
64017004:	push   ebx
64017005:	push   esi
64017006:	call   0x6401e6e3
6401700b:	pop    ecx
6401700c:	pop    ecx
6401700d:	test   eax,eax
6401700f:	je     0x64017065
64017011:	push   DWORD PTR [edi+0x14]
64017014:	add    edi,0x8
64017017:	push   edi
64017018:	mov    eax,DWORD PTR [ebp+0x8]
6401701b:	push   DWORD PTR [eax+0x18]
6401701e:	call   0x64016c88
64017023:	pop    ecx
64017024:	pop    ecx
64017025:	push   eax
64017026:	push   esi
64017027:	call   0x640166b0
6401702c:	add    esp,0xc
6401702f:	jmp    0x6401706a
64017031:	call   0x6401e6e3
64017036:	pop    ecx
64017037:	pop    ecx
64017038:	test   eax,eax
6401703a:	je     0x64017065
6401703c:	push   ebx
6401703d:	push   esi
6401703e:	call   0x6401e6e3
64017043:	pop    ecx
64017044:	pop    ecx
64017045:	test   eax,eax
64017047:	je     0x64017065
64017049:	push   DWORD PTR [edi+0x18]
6401704c:	call   0x6401e6e3
64017051:	pop    ecx
64017052:	test   eax,eax
64017054:	je     0x64017065
64017056:	test   BYTE PTR [edi],0x4
64017059:	push   0x0
6401705b:	pop    eax
6401705c:	setne  al
6401705f:	inc    eax
64017060:	mov    DWORD PTR [ebp-0x1c],eax
64017063:	jmp    0x6401706a
64017065:	call   0x64017d3c
6401706a:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64017071:	mov    eax,DWORD PTR [ebp-0x1c]
64017074:	jmp    0x64017084
64017076:	xor    eax,eax
64017078:	inc    eax
64017079:	ret    
6401707a:	mov    esp,DWORD PTR [ebp-0x18]
6401707d:	jmp    0x64017cf0
64017082:	xor    eax,eax
64017084:	call   0x640164a9
64017089:	ret    
6401708a:	push   0x8
6401708c:	push   0x64043cc0
64017091:	call   0x64016464
64017096:	mov    eax,DWORD PTR [ebp+0x10]
64017099:	test   DWORD PTR [eax],0x80000000
6401709f:	je     0x640170a6
640170a1:	mov    ebx,DWORD PTR [ebp+0xc]
640170a4:	jmp    0x640170b0
640170a6:	mov    ecx,DWORD PTR [eax+0x8]
640170a9:	mov    edx,DWORD PTR [ebp+0xc]
640170ac:	lea    ebx,[ecx+edx*1+0xc]
640170b0:	and    DWORD PTR [ebp-0x4],0x0
640170b4:	mov    esi,DWORD PTR [ebp+0x14]
640170b7:	push   esi
640170b8:	push   eax
640170b9:	push   DWORD PTR [ebp+0xc]
640170bc:	mov    edi,DWORD PTR [ebp+0x8]
640170bf:	push   edi
640170c0:	call   0x64016f0b
640170c5:	add    esp,0x10
640170c8:	dec    eax
640170c9:	je     0x640170ea
640170cb:	dec    eax
640170cc:	jne    0x64017102
640170ce:	push   0x1
640170d0:	lea    eax,[esi+0x8]
640170d3:	push   eax
640170d4:	push   DWORD PTR [edi+0x18]
640170d7:	call   0x64016c88
640170dc:	pop    ecx
640170dd:	pop    ecx
640170de:	push   eax
640170df:	push   DWORD PTR [esi+0x18]
640170e2:	push   ebx
640170e3:	call   0x6401390f
640170e8:	jmp    0x64017102
640170ea:	lea    eax,[esi+0x8]
640170ed:	push   eax
640170ee:	push   DWORD PTR [edi+0x18]
640170f1:	call   0x64016c88
640170f6:	pop    ecx
640170f7:	pop    ecx
640170f8:	push   eax
640170f9:	push   DWORD PTR [esi+0x18]
640170fc:	push   ebx
640170fd:	call   0x6401390f
64017102:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64017109:	call   0x640164a9
6401710e:	ret    
6401710f:	xor    eax,eax
64017111:	inc    eax
64017112:	ret    
64017113:	mov    esp,DWORD PTR [ebp-0x18]
64017116:	jmp    0x64017cf0
6401711b:	push   ebp
6401711c:	mov    ebp,esp
6401711e:	cmp    DWORD PTR [ebp+0x18],0x0
64017122:	je     0x64017134
64017124:	push   DWORD PTR [ebp+0x18]
64017127:	push   ebx
64017128:	push   esi
64017129:	push   DWORD PTR [ebp+0x8]
6401712c:	call   0x6401708a
64017131:	add    esp,0x10
64017134:	cmp    DWORD PTR [ebp+0x20],0x0
64017138:	push   DWORD PTR [ebp+0x8]
6401713b:	jne    0x64017140
6401713d:	push   esi
6401713e:	jmp    0x64017143
64017140:	push   DWORD PTR [ebp+0x20]
64017143:	call   0x64013916
64017148:	push   DWORD PTR [edi]
6401714a:	push   DWORD PTR [ebp+0x14]
6401714d:	push   DWORD PTR [ebp+0x10]
64017150:	push   esi
64017151:	call   0x64016b0e
64017156:	mov    eax,DWORD PTR [edi+0x4]
64017159:	push   0x100
6401715e:	push   DWORD PTR [ebp+0x1c]
64017161:	inc    eax
64017162:	push   DWORD PTR [ebp+0x14]
64017165:	mov    DWORD PTR [esi+0x8],eax
64017168:	push   DWORD PTR [ebp+0xc]
6401716b:	mov    ecx,DWORD PTR [ebx+0xc]
6401716e:	push   esi
6401716f:	push   DWORD PTR [ebp+0x8]
64017172:	call   0x64016d6f
64017177:	add    esp,0x28
6401717a:	test   eax,eax
6401717c:	je     0x64017185
6401717e:	push   esi
6401717f:	push   eax
64017180:	call   0x640138df
64017185:	pop    ebp
64017186:	ret    
64017187:	push   ebp
64017188:	mov    ebp,esp
6401718a:	push   ecx
6401718b:	push   ecx
6401718c:	push   esi
6401718d:	mov    esi,DWORD PTR [ebp+0x8]
64017190:	cmp    DWORD PTR [esi],0x80000003
64017196:	je     0x64017276
6401719c:	push   edi
6401719d:	call   0x640179ca
640171a2:	cmp    DWORD PTR [eax+0x80],0x0
640171a9:	je     0x640171ea
640171ab:	call   0x640179ca
640171b0:	lea    edi,[eax+0x80]
640171b6:	call   0x640177a5
640171bb:	cmp    DWORD PTR [edi],eax
640171bd:	je     0x640171ea
640171bf:	cmp    DWORD PTR [esi],0xe0434f4d
640171c5:	je     0x640171ea
640171c7:	push   DWORD PTR [ebp+0x24]
640171ca:	push   DWORD PTR [ebp+0x20]
640171cd:	push   DWORD PTR [ebp+0x18]
640171d0:	push   DWORD PTR [ebp+0x14]
640171d3:	push   DWORD PTR [ebp+0x10]
640171d6:	push   DWORD PTR [ebp+0xc]
640171d9:	push   esi
640171da:	call   0x640139ce
640171df:	add    esp,0x1c
640171e2:	test   eax,eax
640171e4:	jne    0x64017275
640171ea:	mov    edi,DWORD PTR [ebp+0x18]
640171ed:	cmp    DWORD PTR [edi+0xc],0x0
640171f1:	jne    0x640171f8
640171f3:	call   0x64017d3c
640171f8:	mov    esi,DWORD PTR [ebp+0x1c]
640171fb:	lea    eax,[ebp-0x8]
640171fe:	push   eax
640171ff:	lea    eax,[ebp-0x4]
64017202:	push   eax
64017203:	push   esi
64017204:	push   DWORD PTR [ebp+0x20]
64017207:	push   edi
64017208:	call   0x64013b40
6401720d:	mov    edi,eax
6401720f:	mov    eax,DWORD PTR [ebp-0x4]
64017212:	add    esp,0x14
64017215:	cmp    eax,DWORD PTR [ebp-0x8]
64017218:	jae    0x64017275
6401721a:	push   ebx
6401721b:	cmp    esi,DWORD PTR [edi]
6401721d:	jl     0x64017266
6401721f:	cmp    esi,DWORD PTR [edi+0x4]
64017222:	jg     0x64017266
64017224:	mov    eax,DWORD PTR [edi+0xc]
64017227:	mov    ecx,DWORD PTR [edi+0x10]
6401722a:	shl    eax,0x4
6401722d:	add    eax,ecx
6401722f:	mov    ecx,DWORD PTR [eax-0xc]
64017232:	test   ecx,ecx
64017234:	je     0x6401723c
64017236:	cmp    BYTE PTR [ecx+0x8],0x0
6401723a:	jne    0x64017266
6401723c:	lea    ebx,[eax-0x10]
6401723f:	test   BYTE PTR [ebx],0x40
64017242:	jne    0x64017266
64017244:	push   DWORD PTR [ebp+0x24]
64017247:	mov    esi,DWORD PTR [ebp+0xc]
6401724a:	push   DWORD PTR [ebp+0x20]
6401724d:	push   0x0
6401724f:	push   DWORD PTR [ebp+0x18]
64017252:	push   DWORD PTR [ebp+0x14]
64017255:	push   DWORD PTR [ebp+0x10]
64017258:	push   DWORD PTR [ebp+0x8]
6401725b:	call   0x6401711b
64017260:	mov    esi,DWORD PTR [ebp+0x1c]
64017263:	add    esp,0x1c
64017266:	inc    DWORD PTR [ebp-0x4]
64017269:	mov    eax,DWORD PTR [ebp-0x4]
6401726c:	add    edi,0x14
6401726f:	cmp    eax,DWORD PTR [ebp-0x8]
64017272:	jb     0x6401721b
64017274:	pop    ebx
64017275:	pop    edi
64017276:	pop    esi
64017277:	leave  
64017278:	ret    
64017279:	push   ebp
6401727a:	mov    ebp,esp
6401727c:	sub    esp,0x2c
6401727f:	mov    ecx,DWORD PTR [ebp+0xc]
64017282:	push   ebx
64017283:	mov    ebx,DWORD PTR [ebp+0x18]
64017286:	mov    eax,DWORD PTR [ebx+0x4]
64017289:	cmp    eax,0x80
6401728e:	push   esi
6401728f:	push   edi
64017290:	mov    BYTE PTR [ebp-0x1],0x0
64017294:	jg     0x6401729c
64017296:	movsx  ecx,BYTE PTR [ecx+0x8]
6401729a:	jmp    0x6401729f
6401729c:	mov    ecx,DWORD PTR [ecx+0x8]
6401729f:	cmp    ecx,0xffffffff
640172a2:	mov    DWORD PTR [ebp-0x8],ecx
640172a5:	jl     0x640172ab
640172a7:	cmp    ecx,eax
640172a9:	jl     0x640172b0
640172ab:	call   0x64017d3c
640172b0:	mov    esi,DWORD PTR [ebp+0x8]
640172b3:	mov    edi,0xe06d7363
640172b8:	cmp    DWORD PTR [esi],edi
640172ba:	jne    0x6401758b
640172c0:	cmp    DWORD PTR [esi+0x10],0x3
640172c4:	mov    ebx,0x19930520
640172c9:	jne    0x640173f8
640172cf:	mov    eax,DWORD PTR [esi+0x14]
640172d2:	cmp    eax,ebx
640172d4:	je     0x640172e8
640172d6:	cmp    eax,0x19930521
640172db:	je     0x640172e8
640172dd:	cmp    eax,0x19930522
640172e2:	jne    0x640173f8
640172e8:	cmp    DWORD PTR [esi+0x1c],0x0
640172ec:	jne    0x640173f8
640172f2:	call   0x640179ca
640172f7:	cmp    DWORD PTR [eax+0x88],0x0
640172fe:	je     0x640175ca
64017304:	call   0x640179ca
64017309:	mov    esi,DWORD PTR [eax+0x88]
6401730f:	mov    DWORD PTR [ebp+0x8],esi
64017312:	call   0x640179ca
64017317:	mov    eax,DWORD PTR [eax+0x8c]
6401731d:	push   0x1
6401731f:	push   esi
64017320:	mov    DWORD PTR [ebp+0x10],eax
64017323:	call   0x6401e6e3
64017328:	test   eax,eax
6401732a:	pop    ecx
6401732b:	pop    ecx
6401732c:	jne    0x64017333
6401732e:	call   0x64017d3c
64017333:	cmp    DWORD PTR [esi],edi
64017335:	jne    0x6401735d
64017337:	cmp    DWORD PTR [esi+0x10],0x3
6401733b:	jne    0x6401735d
6401733d:	mov    eax,DWORD PTR [esi+0x14]
64017340:	cmp    eax,ebx
64017342:	je     0x64017352
64017344:	cmp    eax,0x19930521
64017349:	je     0x64017352
6401734b:	cmp    eax,0x19930522
64017350:	jne    0x6401735d
64017352:	cmp    DWORD PTR [esi+0x1c],0x0
64017356:	jne    0x6401735d
64017358:	call   0x64017d3c
6401735d:	call   0x640179ca
64017362:	cmp    DWORD PTR [eax+0x94],0x0
64017369:	je     0x640173f8
6401736f:	call   0x640179ca
64017374:	mov    edi,DWORD PTR [eax+0x94]
6401737a:	call   0x640179ca
6401737f:	push   DWORD PTR [ebp+0x8]
64017382:	xor    esi,esi
64017384:	mov    DWORD PTR [eax+0x94],esi
6401738a:	call   0x64016cad
6401738f:	test   al,al
64017391:	pop    ecx
64017392:	jne    0x640173f0
64017394:	xor    ebx,ebx
64017396:	cmp    DWORD PTR [edi],ebx
64017398:	jle    0x640173b7
6401739a:	mov    eax,DWORD PTR [edi+0x4]
6401739d:	mov    ecx,DWORD PTR [ebx+eax*1+0x4]
640173a1:	push   0x64052454
640173a6:	call   0x64013721
640173ab:	test   al,al
640173ad:	jne    0x640173bc
640173af:	inc    esi
640173b0:	add    ebx,0x10
640173b3:	cmp    esi,DWORD PTR [edi]
640173b5:	jl     0x6401739a
640173b7:	jmp    0x64017cf0
640173bc:	push   0x1
640173be:	push   DWORD PTR [ebp+0x8]
640173c1:	call   0x64016c34
640173c6:	pop    ecx
640173c7:	pop    ecx
640173c8:	lea    eax,[ebp+0x8]
640173cb:	push   eax
640173cc:	lea    ecx,[ebp-0x2c]
640173cf:	mov    DWORD PTR [ebp+0x8],0x640408b8
640173d6:	call   0x640135fa
640173db:	push   0x64043cdc
640173e0:	lea    eax,[ebp-0x2c]
640173e3:	push   eax
640173e4:	mov    DWORD PTR [ebp-0x2c],0x640408b0
640173eb:	call   0x64013812
640173f0:	mov    esi,DWORD PTR [ebp+0x8]
640173f3:	mov    edi,0xe06d7363
640173f8:	cmp    DWORD PTR [esi],edi
640173fa:	jne    0x64017588
64017400:	cmp    DWORD PTR [esi+0x10],0x3
64017404:	jne    0x64017588
6401740a:	mov    eax,DWORD PTR [esi+0x14]
6401740d:	cmp    eax,ebx
6401740f:	je     0x64017423
64017411:	cmp    eax,0x19930521
64017416:	je     0x64017423
64017418:	cmp    eax,0x19930522
6401741d:	jne    0x64017588
64017423:	mov    edi,DWORD PTR [ebp+0x18]
64017426:	cmp    DWORD PTR [edi+0xc],0x0
6401742a:	jbe    0x640174ef
64017430:	lea    eax,[ebp-0x1c]
64017433:	push   eax
64017434:	lea    eax,[ebp-0x10]
64017437:	push   eax
64017438:	push   DWORD PTR [ebp-0x8]
6401743b:	push   DWORD PTR [ebp+0x20]
6401743e:	push   edi
6401743f:	call   0x64013b40
64017444:	add    esp,0x14
64017447:	mov    edi,eax
64017449:	mov    eax,DWORD PTR [ebp-0x10]
6401744c:	cmp    eax,DWORD PTR [ebp-0x1c]
6401744f:	jae    0x640174ec
64017455:	mov    eax,DWORD PTR [ebp-0x8]
64017458:	cmp    DWORD PTR [edi],eax
6401745a:	jg     0x640174e1
64017460:	cmp    eax,DWORD PTR [edi+0x4]
64017463:	jg     0x640174e1
64017465:	mov    eax,DWORD PTR [edi+0x10]
64017468:	mov    DWORD PTR [ebp-0xc],eax
6401746b:	mov    eax,DWORD PTR [edi+0xc]
6401746e:	test   eax,eax
64017470:	mov    DWORD PTR [ebp-0x18],eax
64017473:	jle    0x640174e1
64017475:	mov    eax,DWORD PTR [esi+0x1c]
64017478:	mov    eax,DWORD PTR [eax+0xc]
6401747b:	lea    ebx,[eax+0x4]
6401747e:	mov    eax,DWORD PTR [eax]
64017480:	test   eax,eax
64017482:	mov    DWORD PTR [ebp-0x14],eax
64017485:	jle    0x640174aa
64017487:	push   DWORD PTR [esi+0x1c]
6401748a:	mov    eax,DWORD PTR [ebx]
6401748c:	push   eax
6401748d:	push   DWORD PTR [ebp-0xc]
64017490:	mov    DWORD PTR [ebp-0x20],eax
64017493:	call   0x64016a6e
64017498:	add    esp,0xc
6401749b:	test   eax,eax
6401749d:	jne    0x640174b9
6401749f:	dec    DWORD PTR [ebp-0x14]
640174a2:	add    ebx,0x4
640174a5:	cmp    DWORD PTR [ebp-0x14],eax
640174a8:	jg     0x64017487
640174aa:	dec    DWORD PTR [ebp-0x18]
640174ad:	add    DWORD PTR [ebp-0xc],0x10
640174b1:	cmp    DWORD PTR [ebp-0x18],0x0
640174b5:	jg     0x64017475
640174b7:	jmp    0x640174e1
640174b9:	push   DWORD PTR [ebp+0x24]
640174bc:	mov    ebx,DWORD PTR [ebp-0xc]
640174bf:	push   DWORD PTR [ebp+0x20]
640174c2:	mov    BYTE PTR [ebp-0x1],0x1
640174c6:	push   DWORD PTR [ebp-0x20]
640174c9:	push   DWORD PTR [ebp+0x18]
640174cc:	push   DWORD PTR [ebp+0x14]
640174cf:	push   DWORD PTR [ebp+0x10]
640174d2:	push   esi
640174d3:	mov    esi,DWORD PTR [ebp+0xc]
640174d6:	call   0x6401711b
640174db:	mov    esi,DWORD PTR [ebp+0x8]
640174de:	add    esp,0x1c
640174e1:	inc    DWORD PTR [ebp-0x10]
640174e4:	add    edi,0x14
640174e7:	jmp    0x64017449
640174ec:	mov    edi,DWORD PTR [ebp+0x18]
640174ef:	cmp    BYTE PTR [ebp+0x1c],0x0
640174f3:	je     0x640174ff
640174f5:	push   0x1
640174f7:	push   esi
640174f8:	call   0x64016c34
640174fd:	pop    ecx
640174fe:	pop    ecx
640174ff:	cmp    BYTE PTR [ebp-0x1],0x0
64017503:	jne    0x640175b7
64017509:	mov    eax,DWORD PTR [edi]
6401750b:	and    eax,0x1fffffff
64017510:	cmp    eax,0x19930521
64017515:	jb     0x640175b7
6401751b:	mov    edi,DWORD PTR [edi+0x1c]
6401751e:	test   edi,edi
64017520:	je     0x640175b7
64017526:	push   esi
64017527:	call   0x64016cad
6401752c:	test   al,al
6401752e:	pop    ecx
6401752f:	jne    0x640175b7
64017535:	call   0x640179ca
6401753a:	call   0x640179ca
6401753f:	call   0x640179ca
64017544:	mov    DWORD PTR [eax+0x88],esi
6401754a:	call   0x640179ca
6401754f:	cmp    DWORD PTR [ebp+0x24],0x0
64017553:	mov    ecx,DWORD PTR [ebp+0x10]
64017556:	mov    DWORD PTR [eax+0x8c],ecx
6401755c:	push   esi
6401755d:	jne    0x64017564
6401755f:	push   DWORD PTR [ebp+0xc]
64017562:	jmp    0x64017567
64017564:	push   DWORD PTR [ebp+0x24]
64017567:	call   0x64013916
6401756c:	mov    esi,DWORD PTR [ebp+0x18]
6401756f:	push   0xffffffff
64017571:	push   esi
64017572:	push   DWORD PTR [ebp+0x14]
64017575:	push   DWORD PTR [ebp+0xc]
64017578:	call   0x64016b0e
6401757d:	add    esp,0x10
64017580:	push   DWORD PTR [esi+0x1c]
64017583:	call   0x64016d26
64017588:	mov    ebx,DWORD PTR [ebp+0x18]
6401758b:	cmp    DWORD PTR [ebx+0xc],0x0
6401758f:	jbe    0x640175b7
64017591:	cmp    BYTE PTR [ebp+0x1c],0x0
64017595:	jne    0x640173b7
6401759b:	push   DWORD PTR [ebp+0x24]
6401759e:	push   DWORD PTR [ebp+0x20]
640175a1:	push   DWORD PTR [ebp-0x8]
640175a4:	push   ebx
640175a5:	push   DWORD PTR [ebp+0x14]
640175a8:	push   DWORD PTR [ebp+0x10]
640175ab:	push   DWORD PTR [ebp+0xc]
640175ae:	push   esi
640175af:	call   0x64017187
640175b4:	add    esp,0x20
640175b7:	call   0x640179ca
640175bc:	cmp    DWORD PTR [eax+0x94],0x0
640175c3:	je     0x640175ca
640175c5:	call   0x64017d3c
640175ca:	pop    edi
640175cb:	pop    esi
640175cc:	pop    ebx
640175cd:	leave  
640175ce:	ret    
640175cf:	push   esi
640175d0:	push   DWORD PTR [esp+0x8]
640175d4:	mov    esi,ecx
640175d6:	call   0x64013660
640175db:	mov    DWORD PTR [esi],0x640408b0
640175e1:	mov    eax,esi
640175e3:	pop    esi
640175e4:	ret    0x4
640175e7:	push   ebp
640175e8:	mov    ebp,esp
640175ea:	push   ebx
640175eb:	push   esi
640175ec:	push   edi
640175ed:	call   0x640179ca
640175f2:	cmp    DWORD PTR [eax+0x20c],0x0
640175f9:	mov    eax,DWORD PTR [ebp+0x18]
640175fc:	mov    ecx,DWORD PTR [ebp+0x8]
640175ff:	mov    edi,0xe06d7363
64017604:	mov    esi,0x1fffffff
64017609:	mov    ebx,0x19930522
6401760e:	jne    0x64017630
64017610:	mov    edx,DWORD PTR [ecx]
64017612:	cmp    edx,edi
64017614:	je     0x64017630
64017616:	cmp    edx,0x80000026
6401761c:	je     0x64017630
6401761e:	mov    edx,DWORD PTR [eax]
64017620:	and    edx,esi
64017622:	cmp    edx,ebx
64017624:	jb     0x64017630
64017626:	test   BYTE PTR [eax+0x20],0x1
6401762a:	jne    0x640176c3
64017630:	test   BYTE PTR [ecx+0x4],0x66
64017634:	je     0x64017659
64017636:	cmp    DWORD PTR [eax+0x4],0x0
6401763a:	je     0x640176c3
64017640:	cmp    DWORD PTR [ebp+0x1c],0x0
64017644:	jne    0x640176c3
64017646:	push   0xffffffff
64017648:	push   eax
64017649:	push   DWORD PTR [ebp+0x14]
6401764c:	push   DWORD PTR [ebp+0xc]
6401764f:	call   0x64016b0e
64017654:	add    esp,0x10
64017657:	jmp    0x640176c3
64017659:	cmp    DWORD PTR [eax+0xc],0x0
6401765d:	jne    0x64017671
6401765f:	mov    edx,DWORD PTR [eax]
64017661:	and    edx,esi
64017663:	cmp    edx,0x19930521
64017669:	jb     0x640176c3
6401766b:	cmp    DWORD PTR [eax+0x1c],0x0
6401766f:	je     0x640176c3
64017671:	cmp    DWORD PTR [ecx],edi
64017673:	jne    0x640176a7
64017675:	cmp    DWORD PTR [ecx+0x10],0x3
64017679:	jb     0x640176a7
6401767b:	cmp    DWORD PTR [ecx+0x14],ebx
6401767e:	jbe    0x640176a7
64017680:	mov    edx,DWORD PTR [ecx+0x1c]
64017683:	mov    edx,DWORD PTR [edx+0x8]
64017686:	test   edx,edx
64017688:	je     0x640176a7
6401768a:	movzx  esi,BYTE PTR [ebp+0x24]
6401768e:	push   esi
6401768f:	push   DWORD PTR [ebp+0x20]
64017692:	push   DWORD PTR [ebp+0x1c]
64017695:	push   eax
64017696:	push   DWORD PTR [ebp+0x14]
64017699:	push   DWORD PTR [ebp+0x10]
6401769c:	push   DWORD PTR [ebp+0xc]
6401769f:	push   ecx
640176a0:	call   edx
640176a2:	add    esp,0x20
640176a5:	jmp    0x640176c6
640176a7:	push   DWORD PTR [ebp+0x20]
640176aa:	push   DWORD PTR [ebp+0x1c]
640176ad:	push   DWORD PTR [ebp+0x24]
640176b0:	push   eax
640176b1:	push   DWORD PTR [ebp+0x14]
640176b4:	push   DWORD PTR [ebp+0x10]
640176b7:	push   DWORD PTR [ebp+0xc]
640176ba:	push   ecx
640176bb:	call   0x64017279
640176c0:	add    esp,0x20
640176c3:	xor    eax,eax
640176c5:	inc    eax
640176c6:	pop    edi
640176c7:	pop    esi
640176c8:	pop    ebx
640176c9:	pop    ebp
640176ca:	ret    
640176cb:	push   ebp
640176cc:	mov    ebp,esp
640176ce:	push   ecx
640176cf:	push   ecx
640176d0:	push   ebx
640176d1:	push   esi
640176d2:	xor    esi,esi
640176d4:	lea    eax,[ebp-0x4]
640176d7:	inc    esi
640176d8:	xor    ebx,ebx
640176da:	push   eax
640176db:	mov    DWORD PTR [ebp-0x8],esi
640176de:	mov    DWORD PTR [ebp-0x4],ebx
640176e1:	call   0x64018096
640176e6:	cmp    DWORD PTR [ebp-0x4],0x5
640176ea:	pop    ecx
640176eb:	jle    0x640176f1
640176ed:	mov    eax,esi
640176ef:	jmp    0x64017733
640176f1:	push   edi
640176f2:	push   ebx
640176f3:	call   DWORD PTR ds:0x6402c0a8
640176f9:	mov    esi,DWORD PTR [eax+0x3c]
640176fc:	add    esi,eax
640176fe:	cmp    WORD PTR [esi+0x6],bx
64017702:	movzx  eax,WORD PTR [esi+0x14]
64017706:	lea    edi,[eax+esi*1+0x18]
6401770a:	jbe    0x6401772f
6401770c:	push   edi
6401770d:	push   0x640408c8
64017712:	call   0x640165a0
64017717:	test   eax,eax
64017719:	pop    ecx
6401771a:	pop    ecx
6401771b:	je     0x6401772b
6401771d:	movzx  eax,WORD PTR [esi+0x6]
64017721:	inc    ebx
64017722:	add    edi,0x28
64017725:	cmp    ebx,eax
64017727:	jb     0x6401770c
64017729:	jmp    0x6401772f
6401772b:	and    DWORD PTR [ebp-0x8],0x0
6401772f:	mov    eax,DWORD PTR [ebp-0x8]
64017732:	pop    edi
64017733:	pop    esi
64017734:	pop    ebx
64017735:	leave  
64017736:	ret    
64017737:	push   esi
64017738:	push   DWORD PTR ds:0x64052478
6401773e:	mov    esi,DWORD PTR ds:0x6402c1d0
64017744:	call   esi
64017746:	test   eax,eax
64017748:	je     0x6401776b
6401774a:	mov    eax,ds:0x64052474
6401774f:	cmp    eax,0xffffffff
64017752:	je     0x6401776b
64017754:	push   eax
64017755:	push   DWORD PTR ds:0x64052478
6401775b:	call   esi
6401775d:	call   eax
6401775f:	test   eax,eax
64017761:	je     0x6401776b
64017763:	mov    eax,DWORD PTR [eax+0x1f8]
64017769:	jmp    0x64017791
6401776b:	push   0x640408e0
64017770:	call   DWORD PTR ds:0x6402c0a8
64017776:	mov    esi,eax
64017778:	test   esi,esi
6401777a:	je     0x6401779f
6401777c:	call   0x640176cb
64017781:	test   eax,eax
64017783:	je     0x6401779f
64017785:	push   0x640408d0
6401778a:	push   esi
6401778b:	call   DWORD PTR ds:0x6402c0a4
64017791:	test   eax,eax
64017793:	je     0x6401779f
64017795:	push   DWORD PTR [esp+0x8]
64017799:	call   eax
6401779b:	mov    DWORD PTR [esp+0x8],eax
6401779f:	mov    eax,DWORD PTR [esp+0x8]
640177a3:	pop    esi
640177a4:	ret    
640177a5:	push   0x0
640177a7:	call   0x64017737
640177ac:	pop    ecx
640177ad:	ret    
640177ae:	push   esi
640177af:	push   DWORD PTR ds:0x64052478
640177b5:	mov    esi,DWORD PTR ds:0x6402c1d0
640177bb:	call   esi
640177bd:	test   eax,eax
640177bf:	je     0x640177e2
640177c1:	mov    eax,ds:0x64052474
640177c6:	cmp    eax,0xffffffff
640177c9:	je     0x640177e2
640177cb:	push   eax
640177cc:	push   DWORD PTR ds:0x64052478
640177d2:	call   esi
640177d4:	call   eax
640177d6:	test   eax,eax
640177d8:	je     0x640177e2
640177da:	mov    eax,DWORD PTR [eax+0x1fc]
640177e0:	jmp    0x64017808
640177e2:	push   0x640408e0
640177e7:	call   DWORD PTR ds:0x6402c0a8
640177ed:	mov    esi,eax
640177ef:	test   esi,esi
640177f1:	je     0x64017816
640177f3:	call   0x640176cb
640177f8:	test   eax,eax
640177fa:	je     0x64017816
640177fc:	push   0x640408f0
64017801:	push   esi
64017802:	call   DWORD PTR ds:0x6402c0a4
64017808:	test   eax,eax
6401780a:	je     0x64017816
6401780c:	push   DWORD PTR [esp+0x8]
64017810:	call   eax
64017812:	mov    DWORD PTR [esp+0x8],eax
64017816:	mov    eax,DWORD PTR [esp+0x8]
6401781a:	pop    esi
6401781b:	ret    
6401781c:	call   DWORD PTR ds:0x6402c1d4
64017822:	ret    0x4
64017825:	push   esi
64017826:	push   DWORD PTR ds:0x64052478
6401782c:	call   DWORD PTR ds:0x6402c1d0
64017832:	mov    esi,eax
64017834:	test   esi,esi
64017836:	jne    0x64017853
64017838:	push   DWORD PTR ds:0x64053a24
6401783e:	call   0x640177ae
64017843:	pop    ecx
64017844:	mov    esi,eax
64017846:	push   esi
64017847:	push   DWORD PTR ds:0x64052478
6401784d:	call   DWORD PTR ds:0x6402c1d8
64017853:	mov    eax,esi
64017855:	pop    esi
64017856:	ret    
64017857:	mov    eax,ds:0x64052474
6401785c:	cmp    eax,0xffffffff
6401785f:	je     0x64017877
64017861:	push   eax
64017862:	push   DWORD PTR ds:0x64053a2c
64017868:	call   0x640177ae
6401786d:	pop    ecx
6401786e:	call   eax
64017870:	or     DWORD PTR ds:0x64052474,0xffffffff
64017877:	mov    eax,ds:0x64052478
6401787c:	cmp    eax,0xffffffff
6401787f:	je     0x6401788f
64017881:	push   eax
64017882:	call   DWORD PTR ds:0x6402c168
64017888:	or     DWORD PTR ds:0x64052478,0xffffffff
6401788f:	jmp    0x6401b2fd
64017894:	push   0xc
64017896:	push   0x64043d18
6401789b:	call   0x64016464
640178a0:	push   0x640408e0
640178a5:	call   DWORD PTR ds:0x6402c0a8
640178ab:	mov    DWORD PTR [ebp-0x1c],eax
640178ae:	mov    esi,DWORD PTR [ebp+0x8]
640178b1:	mov    DWORD PTR [esi+0x5c],0x640524d0
640178b8:	xor    edi,edi
640178ba:	inc    edi
640178bb:	mov    DWORD PTR [esi+0x14],edi
640178be:	test   eax,eax
640178c0:	je     0x640178f1
640178c2:	call   0x640176cb
640178c7:	test   eax,eax
640178c9:	je     0x640178f1
640178cb:	push   0x640408d0
640178d0:	push   DWORD PTR [ebp-0x1c]
640178d3:	mov    ebx,DWORD PTR ds:0x6402c0a4
640178d9:	call   ebx
640178db:	mov    DWORD PTR [esi+0x1f8],eax
640178e1:	push   0x640408f0
640178e6:	push   DWORD PTR [ebp-0x1c]
640178e9:	call   ebx
640178eb:	mov    DWORD PTR [esi+0x1fc],eax
640178f1:	mov    DWORD PTR [esi+0x70],edi
640178f4:	mov    BYTE PTR [esi+0xc8],0x43
640178fb:	mov    BYTE PTR [esi+0x14b],0x43
64017902:	mov    eax,0x64052558
64017907:	mov    DWORD PTR [esi+0x68],eax
6401790a:	push   eax
6401790b:	call   DWORD PTR ds:0x6402c030
64017911:	push   0xc
64017913:	call   0x6401b42a
64017918:	pop    ecx
64017919:	and    DWORD PTR [ebp-0x4],0x0
6401791d:	mov    eax,DWORD PTR [ebp+0xc]
64017920:	mov    DWORD PTR [esi+0x6c],eax
64017923:	test   eax,eax
64017925:	jne    0x6401792f
64017927:	mov    eax,ds:0x64052b60
6401792c:	mov    DWORD PTR [esi+0x6c],eax
6401792f:	push   DWORD PTR [esi+0x6c]
64017932:	call   0x64015cd4
64017937:	pop    ecx
64017938:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401793f:	call   0x6401794a
64017944:	call   0x640164a9
64017949:	ret    
6401794a:	push   0xc
6401794c:	call   0x6401b352
64017951:	pop    ecx
64017952:	ret    
64017953:	push   esi
64017954:	push   edi
64017955:	call   DWORD PTR ds:0x6402c06c
6401795b:	push   DWORD PTR ds:0x64052474
64017961:	mov    edi,eax
64017963:	call   0x64017825
64017968:	call   eax
6401796a:	mov    esi,eax
6401796c:	test   esi,esi
6401796e:	jne    0x640179be
64017970:	push   0x214
64017975:	push   0x1
64017977:	call   0x640162bf
6401797c:	mov    esi,eax
6401797e:	test   esi,esi
64017980:	pop    ecx
64017981:	pop    ecx
64017982:	je     0x640179be
64017984:	push   esi
64017985:	push   DWORD PTR ds:0x64052474
6401798b:	push   DWORD PTR ds:0x64053a28
64017991:	call   0x640177ae
64017996:	pop    ecx
64017997:	call   eax
64017999:	test   eax,eax
6401799b:	je     0x640179b5
6401799d:	push   0x0
6401799f:	push   esi
640179a0:	call   0x64017894
640179a5:	pop    ecx
640179a6:	pop    ecx
640179a7:	call   DWORD PTR ds:0x6402c0f4
640179ad:	or     DWORD PTR [esi+0x4],0xffffffff
640179b1:	mov    DWORD PTR [esi],eax
640179b3:	jmp    0x640179be
640179b5:	push   esi
640179b6:	call   0x6401475f
640179bb:	pop    ecx
640179bc:	xor    esi,esi
640179be:	push   edi
640179bf:	call   DWORD PTR ds:0x6402c074
640179c5:	pop    edi
640179c6:	mov    eax,esi
640179c8:	pop    esi
640179c9:	ret    
640179ca:	push   esi
640179cb:	call   0x64017953
640179d0:	mov    esi,eax
640179d2:	test   esi,esi
640179d4:	jne    0x640179de
640179d6:	push   0x10
640179d8:	call   0x64017fb6
640179dd:	pop    ecx
640179de:	mov    eax,esi
640179e0:	pop    esi
640179e1:	ret    
640179e2:	push   0x8
640179e4:	push   0x64043d38
640179e9:	call   0x64016464
640179ee:	mov    esi,DWORD PTR [ebp+0x8]
640179f1:	test   esi,esi
640179f3:	je     0x64017ae3
640179f9:	mov    eax,DWORD PTR [esi+0x24]
640179fc:	test   eax,eax
640179fe:	je     0x64017a07
64017a00:	push   eax
64017a01:	call   0x6401475f
64017a06:	pop    ecx
64017a07:	mov    eax,DWORD PTR [esi+0x2c]
64017a0a:	test   eax,eax
64017a0c:	je     0x64017a15
64017a0e:	push   eax
64017a0f:	call   0x6401475f
64017a14:	pop    ecx
64017a15:	mov    eax,DWORD PTR [esi+0x34]
64017a18:	test   eax,eax
64017a1a:	je     0x64017a23
64017a1c:	push   eax
64017a1d:	call   0x6401475f
64017a22:	pop    ecx
64017a23:	mov    eax,DWORD PTR [esi+0x3c]
64017a26:	test   eax,eax
64017a28:	je     0x64017a31
64017a2a:	push   eax
64017a2b:	call   0x6401475f
64017a30:	pop    ecx
64017a31:	mov    eax,DWORD PTR [esi+0x44]
64017a34:	test   eax,eax
64017a36:	je     0x64017a3f
64017a38:	push   eax
64017a39:	call   0x6401475f
64017a3e:	pop    ecx
64017a3f:	mov    eax,DWORD PTR [esi+0x48]
64017a42:	test   eax,eax
64017a44:	je     0x64017a4d
64017a46:	push   eax
64017a47:	call   0x6401475f
64017a4c:	pop    ecx
64017a4d:	mov    eax,DWORD PTR [esi+0x5c]
64017a50:	cmp    eax,0x640524d0
64017a55:	je     0x64017a5e
64017a57:	push   eax
64017a58:	call   0x6401475f
64017a5d:	pop    ecx
64017a5e:	push   0xd
64017a60:	call   0x6401b42a
64017a65:	pop    ecx
64017a66:	and    DWORD PTR [ebp-0x4],0x0
64017a6a:	mov    edi,DWORD PTR [esi+0x68]
64017a6d:	test   edi,edi
64017a6f:	je     0x64017a8b
64017a71:	push   edi
64017a72:	call   DWORD PTR ds:0x6402c07c
64017a78:	test   eax,eax
64017a7a:	jne    0x64017a8b
64017a7c:	cmp    edi,0x64052558
64017a82:	je     0x64017a8b
64017a84:	push   edi
64017a85:	call   0x6401475f
64017a8a:	pop    ecx
64017a8b:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64017a92:	call   0x64017aee
64017a97:	push   0xc
64017a99:	call   0x6401b42a
64017a9e:	pop    ecx
64017a9f:	mov    DWORD PTR [ebp-0x4],0x1
64017aa6:	mov    edi,DWORD PTR [esi+0x6c]
64017aa9:	test   edi,edi
64017aab:	je     0x64017ad0
64017aad:	push   edi
64017aae:	call   0x64015d5a
64017ab3:	pop    ecx
64017ab4:	cmp    edi,DWORD PTR ds:0x64052b60
64017aba:	je     0x64017ad0
64017abc:	cmp    edi,0x64052a88
64017ac2:	je     0x64017ad0
64017ac4:	cmp    DWORD PTR [edi],0x0
64017ac7:	jne    0x64017ad0
64017ac9:	push   edi
64017aca:	call   0x64015b94
64017acf:	pop    ecx
64017ad0:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64017ad7:	call   0x64017afa
64017adc:	push   esi
64017add:	call   0x6401475f
64017ae2:	pop    ecx
64017ae3:	call   0x640164a9
64017ae8:	ret    0x4
64017aeb:	mov    esi,DWORD PTR [ebp+0x8]
64017aee:	push   0xd
64017af0:	call   0x6401b352
64017af5:	pop    ecx
64017af6:	ret    
64017af7:	mov    esi,DWORD PTR [ebp+0x8]
64017afa:	push   0xc
64017afc:	call   0x6401b352
64017b01:	pop    ecx
64017b02:	ret    
64017b03:	cmp    DWORD PTR ds:0x64052474,0xffffffff
64017b0a:	je     0x64017b58
64017b0c:	push   edi
64017b0d:	mov    edi,DWORD PTR [esp+0x8]
64017b11:	test   edi,edi
64017b13:	jne    0x64017b3b
64017b15:	push   esi
64017b16:	push   DWORD PTR ds:0x64052478
64017b1c:	mov    esi,DWORD PTR ds:0x6402c1d0
64017b22:	call   esi
64017b24:	test   eax,eax
64017b26:	je     0x64017b3a
64017b28:	push   DWORD PTR ds:0x64052474
64017b2e:	push   DWORD PTR ds:0x64052478
64017b34:	call   esi
64017b36:	call   eax
64017b38:	mov    edi,eax
64017b3a:	pop    esi
64017b3b:	push   0x0
64017b3d:	push   DWORD PTR ds:0x64052474
64017b43:	push   DWORD PTR ds:0x64053a28
64017b49:	call   0x640177ae
64017b4e:	pop    ecx
64017b4f:	call   eax
64017b51:	push   edi
64017b52:	call   0x640179e2
64017b57:	pop    edi
64017b58:	mov    eax,ds:0x64052478
64017b5d:	cmp    eax,0xffffffff
64017b60:	je     0x64017b6b
64017b62:	push   0x0
64017b64:	push   eax
64017b65:	call   DWORD PTR ds:0x6402c1d8
64017b6b:	ret    
64017b6c:	push   edi
64017b6d:	push   0x640408e0
64017b72:	call   DWORD PTR ds:0x6402c0a8
64017b78:	mov    edi,eax
64017b7a:	test   edi,edi
64017b7c:	jne    0x64017b87
64017b7e:	call   0x64017857
64017b83:	xor    eax,eax
64017b85:	pop    edi
64017b86:	ret    
64017b87:	push   esi
64017b88:	mov    esi,DWORD PTR ds:0x6402c0a4
64017b8e:	push   0x64040920
64017b93:	push   edi
64017b94:	call   esi
64017b96:	push   0x64040914
64017b9b:	push   edi
64017b9c:	mov    ds:0x64053a20,eax
64017ba1:	call   esi
64017ba3:	push   0x64040908
64017ba8:	push   edi
64017ba9:	mov    ds:0x64053a24,eax
64017bae:	call   esi
64017bb0:	push   0x64040900
64017bb5:	push   edi
64017bb6:	mov    ds:0x64053a28,eax
64017bbb:	call   esi
64017bbd:	cmp    DWORD PTR ds:0x64053a20,0x0
64017bc4:	mov    esi,DWORD PTR ds:0x6402c1d8
64017bca:	mov    ds:0x64053a2c,eax
64017bcf:	je     0x64017be7
64017bd1:	cmp    DWORD PTR ds:0x64053a24,0x0
64017bd8:	je     0x64017be7
64017bda:	cmp    DWORD PTR ds:0x64053a28,0x0
64017be1:	je     0x64017be7
64017be3:	test   eax,eax
64017be5:	jne    0x64017c0b
64017be7:	mov    eax,ds:0x6402c1d0
64017bec:	mov    ds:0x64053a24,eax
64017bf1:	mov    eax,ds:0x6402c168
64017bf6:	mov    DWORD PTR ds:0x64053a20,0x6401781c
64017c00:	mov    DWORD PTR ds:0x64053a28,esi
64017c06:	mov    ds:0x64053a2c,eax
64017c0b:	call   DWORD PTR ds:0x6402c1d4
64017c11:	cmp    eax,0xffffffff
64017c14:	mov    ds:0x64052478,eax
64017c19:	je     0x64017ceb
64017c1f:	push   DWORD PTR ds:0x64053a24
64017c25:	push   eax
64017c26:	call   esi
64017c28:	test   eax,eax
64017c2a:	je     0x64017ceb
64017c30:	call   0x64018266
64017c35:	push   DWORD PTR ds:0x64053a20
64017c3b:	call   0x64017737
64017c40:	push   DWORD PTR ds:0x64053a24
64017c46:	mov    ds:0x64053a20,eax
64017c4b:	call   0x64017737
64017c50:	push   DWORD PTR ds:0x64053a28
64017c56:	mov    ds:0x64053a24,eax
64017c5b:	call   0x64017737
64017c60:	push   DWORD PTR ds:0x64053a2c
64017c66:	mov    ds:0x64053a28,eax
64017c6b:	call   0x64017737
64017c70:	add    esp,0x10
64017c73:	mov    ds:0x64053a2c,eax
64017c78:	call   0x6401b2b4
64017c7d:	test   eax,eax
64017c7f:	je     0x64017ce6
64017c81:	push   0x640179e2
64017c86:	push   DWORD PTR ds:0x64053a20
64017c8c:	call   0x640177ae
64017c91:	pop    ecx
64017c92:	call   eax
64017c94:	cmp    eax,0xffffffff
64017c97:	mov    ds:0x64052474,eax
64017c9c:	je     0x64017ce6
64017c9e:	push   0x214
64017ca3:	push   0x1
64017ca5:	call   0x640162bf
64017caa:	mov    esi,eax
64017cac:	test   esi,esi
64017cae:	pop    ecx
64017caf:	pop    ecx
64017cb0:	je     0x64017ce6
64017cb2:	push   esi
64017cb3:	push   DWORD PTR ds:0x64052474
64017cb9:	push   DWORD PTR ds:0x64053a28
64017cbf:	call   0x640177ae
64017cc4:	pop    ecx
64017cc5:	call   eax
64017cc7:	test   eax,eax
64017cc9:	je     0x64017ce6
64017ccb:	push   0x0
64017ccd:	push   esi
64017cce:	call   0x64017894
64017cd3:	pop    ecx
64017cd4:	pop    ecx
64017cd5:	call   DWORD PTR ds:0x6402c0f4
64017cdb:	or     DWORD PTR [esi+0x4],0xffffffff
64017cdf:	mov    DWORD PTR [esi],eax
64017ce1:	xor    eax,eax
64017ce3:	inc    eax
64017ce4:	jmp    0x64017ced
64017ce6:	call   0x64017857
64017ceb:	xor    eax,eax
64017ced:	pop    esi
64017cee:	pop    edi
64017cef:	ret    
64017cf0:	push   0x8
64017cf2:	push   0x64043d60
64017cf7:	call   0x64016464
64017cfc:	call   0x640179ca
64017d01:	mov    eax,DWORD PTR [eax+0x78]
64017d04:	test   eax,eax
64017d06:	je     0x64017d1e
64017d08:	and    DWORD PTR [ebp-0x4],0x0
64017d0c:	call   eax
64017d0e:	jmp    0x64017d17
64017d10:	xor    eax,eax
64017d12:	inc    eax
64017d13:	ret    
64017d14:	mov    esp,DWORD PTR [ebp-0x18]
64017d17:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64017d1e:	call   0x64016352
64017d23:	call   0x640164a9
64017d28:	ret    
64017d29:	call   0x640179ca
64017d2e:	mov    eax,DWORD PTR [eax+0x7c]
64017d31:	test   eax,eax
64017d33:	je     0x64017d37
64017d35:	call   eax
64017d37:	jmp    0x64017cf0
64017d3c:	push   0x8
64017d3e:	push   0x64043d80
64017d43:	call   0x64016464
64017d48:	push   DWORD PTR ds:0x64053a30
64017d4e:	call   0x640177ae
64017d53:	pop    ecx
64017d54:	test   eax,eax
64017d56:	je     0x64017d6e
64017d58:	and    DWORD PTR [ebp-0x4],0x0
64017d5c:	call   eax
64017d5e:	jmp    0x64017d67
64017d60:	xor    eax,eax
64017d62:	inc    eax
64017d63:	ret    
64017d64:	mov    esp,DWORD PTR [ebp-0x18]
64017d67:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64017d6e:	jmp    0x64017cf0
64017d73:	push   0x64017cf0
64017d78:	call   0x64017737
64017d7d:	pop    ecx
64017d7e:	mov    ds:0x64053a30,eax
64017d83:	ret    
64017d84:	int3   
64017d85:	int3   
64017d86:	int3   
64017d87:	int3   
64017d88:	int3   
64017d89:	int3   
64017d8a:	int3   
64017d8b:	int3   
64017d8c:	int3   
64017d8d:	int3   
64017d8e:	int3   
64017d8f:	int3   
64017d90:	push   ebp
64017d91:	mov    ebp,esp
64017d93:	sub    esp,0x4
64017d96:	push   ebx
64017d97:	push   ecx
64017d98:	mov    eax,DWORD PTR [ebp+0xc]
64017d9b:	add    eax,0xc
64017d9e:	mov    DWORD PTR [ebp-0x4],eax
64017da1:	mov    eax,DWORD PTR [ebp+0x8]
64017da4:	push   ebp
64017da5:	push   DWORD PTR [ebp+0x10]
64017da8:	mov    ecx,DWORD PTR [ebp+0x10]
64017dab:	mov    ebp,DWORD PTR [ebp-0x4]
64017dae:	call   0x6401e7fc
64017db3:	push   esi
64017db4:	push   edi
64017db5:	call   eax
64017db7:	pop    edi
64017db8:	pop    esi
64017db9:	mov    ebx,ebp
64017dbb:	pop    ebp
64017dbc:	mov    ecx,DWORD PTR [ebp+0x10]
64017dbf:	push   ebp
64017dc0:	mov    ebp,ebx
64017dc2:	cmp    ecx,0x100
64017dc8:	jne    0x64017dcf
64017dca:	mov    ecx,0x2
64017dcf:	push   ecx
64017dd0:	call   0x6401e7fc
64017dd5:	pop    ebp
64017dd6:	pop    ecx
64017dd7:	pop    ebx
64017dd8:	leave  
64017dd9:	ret    0xc
64017ddc:	push   ebp
64017ddd:	mov    ebp,esp
64017ddf:	sub    esp,0x328
64017de5:	mov    ds:0x64053b40,eax
64017dea:	mov    DWORD PTR ds:0x64053b3c,ecx
64017df0:	mov    DWORD PTR ds:0x64053b38,edx
64017df6:	mov    DWORD PTR ds:0x64053b34,ebx
64017dfc:	mov    DWORD PTR ds:0x64053b30,esi
64017e02:	mov    DWORD PTR ds:0x64053b2c,edi
64017e08:	data16 mov WORD PTR ds:0x64053b58,ss
64017e0f:	data16 mov WORD PTR ds:0x64053b4c,cs
64017e16:	data16 mov WORD PTR ds:0x64053b28,ds
64017e1d:	data16 mov WORD PTR ds:0x64053b24,es
64017e24:	data16 mov WORD PTR ds:0x64053b20,fs
64017e2b:	data16 mov WORD PTR ds:0x64053b1c,gs
64017e32:	pushf  
64017e33:	pop    DWORD PTR ds:0x64053b50
64017e39:	mov    eax,DWORD PTR [ebp+0x0]
64017e3c:	mov    ds:0x64053b44,eax
64017e41:	mov    eax,DWORD PTR [ebp+0x4]
64017e44:	mov    ds:0x64053b48,eax
64017e49:	lea    eax,[ebp+0x8]
64017e4c:	mov    ds:0x64053b54,eax
64017e51:	mov    eax,DWORD PTR [ebp-0x320]
64017e57:	mov    DWORD PTR ds:0x64053a90,0x10001
64017e61:	mov    eax,ds:0x64053b48
64017e66:	mov    ds:0x64053a44,eax
64017e6b:	mov    DWORD PTR ds:0x64053a38,0xc0000409
64017e75:	mov    DWORD PTR ds:0x64053a3c,0x1
64017e7f:	mov    eax,ds:0x640521ac
64017e84:	mov    DWORD PTR [ebp-0x328],eax
64017e8a:	mov    eax,ds:0x640521b0
64017e8f:	mov    DWORD PTR [ebp-0x324],eax
64017e95:	call   DWORD PTR ds:0x6402c1b4
64017e9b:	mov    ds:0x64053a88,eax
64017ea0:	push   0x1
64017ea2:	call   0x64017f0b
64017ea7:	pop    ecx
64017ea8:	push   0x0
64017eaa:	call   DWORD PTR ds:0x6402c1b0
64017eb0:	push   0x6404092c
64017eb5:	call   DWORD PTR ds:0x6402c1ac
64017ebb:	cmp    DWORD PTR ds:0x64053a88,0x0
64017ec2:	jne    0x64017ecc
64017ec4:	push   0x1
64017ec6:	call   0x64017f0b
64017ecb:	pop    ecx
64017ecc:	push   0xc0000409
64017ed1:	call   DWORD PTR ds:0x6402c040
64017ed7:	push   eax
64017ed8:	call   DWORD PTR ds:0x6402c0d8
64017ede:	leave  
64017edf:	ret    
64017ee0:	push   ecx
64017ee1:	lea    ecx,[esp+0x4]
64017ee5:	sub    ecx,eax
64017ee7:	sbb    eax,eax
64017ee9:	not    eax
64017eeb:	and    ecx,eax
64017eed:	mov    eax,esp
64017eef:	and    eax,0xfffff000
64017ef4:	cmp    ecx,eax
64017ef6:	jb     0x64017f02
64017ef8:	mov    eax,ecx
64017efa:	pop    ecx
64017efb:	xchg   esp,eax
64017efc:	mov    eax,DWORD PTR [eax]
64017efe:	mov    DWORD PTR [esp],eax
64017f01:	ret    
64017f02:	sub    eax,0x1000
64017f07:	test   DWORD PTR [eax],eax
64017f09:	jmp    0x64017ef4
64017f0b:	and    DWORD PTR ds:0x640557d4,0x0
64017f12:	ret    
64017f13:	push   0x10
64017f15:	push   0x64043da0
64017f1a:	call   0x64016464
64017f1f:	xor    eax,eax
64017f21:	mov    ebx,DWORD PTR [ebp+0x8]
64017f24:	xor    edi,edi
64017f26:	cmp    ebx,edi
64017f28:	setne  al
64017f2b:	cmp    eax,edi
64017f2d:	jne    0x64017f4c
64017f2f:	call   0x64016663
64017f34:	mov    DWORD PTR [eax],0x16
64017f3a:	push   edi
64017f3b:	push   edi
64017f3c:	push   edi
64017f3d:	push   edi
64017f3e:	push   edi
64017f3f:	call   0x64013df2
64017f44:	add    esp,0x14
64017f47:	or     eax,0xffffffff
64017f4a:	jmp    0x64017f9f
64017f4c:	cmp    DWORD PTR ds:0x640556a4,0x3
64017f53:	jne    0x64017f8d
64017f55:	push   0x4
64017f57:	call   0x6401b42a
64017f5c:	pop    ecx
64017f5d:	mov    DWORD PTR [ebp-0x4],edi
64017f60:	push   ebx
64017f61:	call   0x6401b4a3
64017f66:	pop    ecx
64017f67:	mov    DWORD PTR [ebp-0x20],eax
64017f6a:	cmp    eax,edi
64017f6c:	je     0x64017f79
64017f6e:	mov    esi,DWORD PTR [ebx-0x4]
64017f71:	sub    esi,0x9
64017f74:	mov    DWORD PTR [ebp-0x1c],esi
64017f77:	jmp    0x64017f7c
64017f79:	mov    esi,DWORD PTR [ebp-0x1c]
64017f7c:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64017f83:	call   0x64017fad
64017f88:	cmp    DWORD PTR [ebp-0x20],edi
64017f8b:	jne    0x64017f9d
64017f8d:	push   ebx
64017f8e:	push   edi
64017f8f:	push   DWORD PTR ds:0x64053eb4
64017f95:	call   DWORD PTR ds:0x6402c1a0
64017f9b:	mov    esi,eax
64017f9d:	mov    eax,esi
64017f9f:	call   0x640164a9
64017fa4:	ret    
64017fa5:	xor    edi,edi
64017fa7:	mov    ebx,DWORD PTR [ebp+0x8]
64017faa:	mov    esi,DWORD PTR [ebp-0x1c]
64017fad:	push   0x4
64017faf:	call   0x6401b352
64017fb4:	pop    ecx
64017fb5:	ret    
64017fb6:	call   0x6401c12d
64017fbb:	push   DWORD PTR [esp+0x4]
64017fbf:	call   0x6401bf8d
64017fc4:	push   DWORD PTR ds:0x64052480
64017fca:	call   0x640177ae
64017fcf:	push   0xff
64017fd4:	call   eax
64017fd6:	add    esp,0xc
64017fd9:	ret    
64017fda:	push   0x64040944
64017fdf:	call   DWORD PTR ds:0x6402c0a8
64017fe5:	test   eax,eax
64017fe7:	je     0x64017fff
64017fe9:	push   0x64040934
64017fee:	push   eax
64017fef:	call   DWORD PTR ds:0x6402c0a4
64017ff5:	test   eax,eax
64017ff7:	je     0x64017fff
64017ff9:	push   DWORD PTR [esp+0x4]
64017ffd:	call   eax
64017fff:	ret    
64018000:	push   DWORD PTR [esp+0x4]
64018004:	call   0x64017fda
64018009:	pop    ecx
6401800a:	push   DWORD PTR [esp+0x4]
6401800e:	call   DWORD PTR ds:0x6402c038
64018014:	int3   
64018015:	push   0x8
64018017:	call   0x6401b42a
6401801c:	pop    ecx
6401801d:	ret    
6401801e:	push   0x8
64018020:	call   0x6401b352
64018025:	pop    ecx
64018026:	ret    
64018027:	push   esi
64018028:	mov    esi,eax
6401802a:	jmp    0x64018037
6401802c:	mov    eax,DWORD PTR [esi]
6401802e:	test   eax,eax
64018030:	je     0x64018034
64018032:	call   eax
64018034:	add    esi,0x4
64018037:	cmp    esi,DWORD PTR [esp+0x8]
6401803b:	jb     0x6401802c
6401803d:	pop    esi
6401803e:	ret    
6401803f:	push   esi
64018040:	mov    esi,DWORD PTR [esp+0x8]
64018044:	xor    eax,eax
64018046:	jmp    0x64018057
64018048:	test   eax,eax
6401804a:	jne    0x6401805d
6401804c:	mov    ecx,DWORD PTR [esi]
6401804e:	test   ecx,ecx
64018050:	je     0x64018054
64018052:	call   ecx
64018054:	add    esi,0x4
64018057:	cmp    esi,DWORD PTR [esp+0xc]
6401805b:	jb     0x64018048
6401805d:	pop    esi
6401805e:	ret    
6401805f:	mov    ecx,DWORD PTR [esp+0x4]
64018063:	push   esi
64018064:	xor    esi,esi
64018066:	cmp    ecx,esi
64018068:	jne    0x64018087
6401806a:	call   0x64016663
6401806f:	push   esi
64018070:	push   esi
64018071:	push   esi
64018072:	push   esi
64018073:	push   esi
64018074:	mov    DWORD PTR [eax],0x16
6401807a:	call   0x64013df2
6401807f:	add    esp,0x14
64018082:	push   0x16
64018084:	pop    eax
64018085:	pop    esi
64018086:	ret    
64018087:	mov    eax,ds:0x64053d60
6401808c:	cmp    eax,esi
6401808e:	je     0x6401806a
64018090:	mov    DWORD PTR [ecx],eax
64018092:	xor    eax,eax
64018094:	pop    esi
64018095:	ret    
64018096:	mov    eax,DWORD PTR [esp+0x4]
6401809a:	push   esi
6401809b:	xor    esi,esi
6401809d:	cmp    eax,esi
6401809f:	jne    0x640180be
640180a1:	call   0x64016663
640180a6:	push   esi
640180a7:	push   esi
640180a8:	push   esi
640180a9:	push   esi
640180aa:	push   esi
640180ab:	mov    DWORD PTR [eax],0x16
640180b1:	call   0x64013df2
640180b6:	add    esp,0x14
640180b9:	push   0x16
640180bb:	pop    eax
640180bc:	pop    esi
640180bd:	ret    
640180be:	cmp    DWORD PTR ds:0x64053d60,esi
640180c4:	je     0x640180a1
640180c6:	mov    ecx,DWORD PTR ds:0x64053d6c
640180cc:	mov    DWORD PTR [eax],ecx
640180ce:	xor    eax,eax
640180d0:	pop    esi
640180d1:	ret    
640180d2:	cmp    DWORD PTR ds:0x64040fac,0x0
640180d9:	je     0x640180f5
640180db:	push   0x64040fac
640180e0:	call   0x6401dc10
640180e5:	test   eax,eax
640180e7:	pop    ecx
640180e8:	je     0x640180f5
640180ea:	push   DWORD PTR [esp+0x4]
640180ee:	call   DWORD PTR ds:0x64040fac
640180f4:	pop    ecx
640180f5:	call   0x6401e827
640180fa:	push   0x6402c26c
640180ff:	push   0x6402c254
64018104:	call   0x6401803f
64018109:	test   eax,eax
6401810b:	pop    ecx
6401810c:	pop    ecx
6401810d:	jne    0x64018163
6401810f:	push   esi
64018110:	push   edi
64018111:	push   0x640189d7
64018116:	call   0x64013f4a
6401811b:	mov    esi,0x6402c208
64018120:	mov    eax,esi
64018122:	mov    edi,0x6402c250
64018127:	cmp    eax,edi
64018129:	pop    ecx
6401812a:	jae    0x6401813b
6401812c:	mov    eax,DWORD PTR [esi]
6401812e:	test   eax,eax
64018130:	je     0x64018134
64018132:	call   eax
64018134:	add    esi,0x4
64018137:	cmp    esi,edi
64018139:	jb     0x6401812c
6401813b:	cmp    DWORD PTR ds:0x640557d0,0x0
64018142:	pop    edi
64018143:	pop    esi
64018144:	je     0x64018161
64018146:	push   0x640557d0
6401814b:	call   0x6401dc10
64018150:	test   eax,eax
64018152:	pop    ecx
64018153:	je     0x64018161
64018155:	push   0x0
64018157:	push   0x2
64018159:	push   0x0
6401815b:	call   DWORD PTR ds:0x640557d0
64018161:	xor    eax,eax
64018163:	ret    
64018164:	push   0x10
64018166:	push   0x64043dc0
6401816b:	call   0x64016464
64018170:	push   0x8
64018172:	call   0x6401b42a
64018177:	pop    ecx
64018178:	xor    edi,edi
6401817a:	mov    DWORD PTR [ebp-0x4],edi
6401817d:	xor    ebx,ebx
6401817f:	inc    ebx
64018180:	cmp    DWORD PTR ds:0x64053da0,ebx
64018186:	je     0x64018206
64018188:	mov    DWORD PTR ds:0x64053d9c,ebx
6401818e:	mov    al,BYTE PTR [ebp+0x10]
64018191:	mov    ds:0x64053d98,al
64018196:	cmp    DWORD PTR [ebp+0xc],edi
64018199:	jne    0x640181f6
6401819b:	push   DWORD PTR ds:0x640557c8
640181a1:	call   0x640177ae
640181a6:	mov    DWORD PTR [ebp-0x1c],eax
640181a9:	push   DWORD PTR ds:0x640557c4
640181af:	call   0x640177ae
640181b4:	pop    ecx
640181b5:	pop    ecx
640181b6:	mov    esi,eax
640181b8:	mov    DWORD PTR [ebp-0x20],esi
640181bb:	cmp    DWORD PTR [ebp-0x1c],edi
640181be:	je     0x640181e6
640181c0:	sub    esi,0x4
640181c3:	mov    DWORD PTR [ebp-0x20],esi
640181c6:	cmp    esi,DWORD PTR [ebp-0x1c]
640181c9:	jb     0x640181e6
640181cb:	cmp    DWORD PTR [esi],0x0
640181ce:	je     0x640181c0
640181d0:	mov    edi,DWORD PTR [esi]
640181d2:	call   0x640177a5
640181d7:	cmp    edi,eax
640181d9:	je     0x640181c0
640181db:	push   edi
640181dc:	call   0x640177ae
640181e1:	pop    ecx
640181e2:	call   eax
640181e4:	jmp    0x640181c0
640181e6:	push   0x6402c27c
640181eb:	mov    eax,0x6402c270
640181f0:	call   0x64018027
640181f5:	pop    ecx
640181f6:	push   0x6402c284
640181fb:	mov    eax,0x6402c280
64018200:	call   0x64018027
64018205:	pop    ecx
64018206:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401820d:	call   0x64018231
64018212:	cmp    DWORD PTR [ebp+0x10],0x0
64018216:	jne    0x64018240
64018218:	mov    DWORD PTR ds:0x64053da0,ebx
6401821e:	push   0x8
64018220:	call   0x6401b352
64018225:	pop    ecx
64018226:	push   DWORD PTR [ebp+0x8]
64018229:	call   0x64018000
6401822e:	xor    ebx,ebx
64018230:	inc    ebx
64018231:	cmp    DWORD PTR [ebp+0x10],0x0
64018235:	je     0x6401823f
64018237:	push   0x8
64018239:	call   0x6401b352
6401823e:	pop    ecx
6401823f:	ret    
64018240:	call   0x640164a9
64018245:	ret    
64018246:	push   0x0
64018248:	push   0x1
6401824a:	push   DWORD PTR [esp+0xc]
6401824e:	call   0x64018164
64018253:	add    esp,0xc
64018256:	ret    
64018257:	push   0x1
64018259:	push   0x0
6401825b:	push   0x0
6401825d:	call   0x64018164
64018262:	add    esp,0xc
64018265:	ret    
64018266:	push   esi
64018267:	call   0x640177a5
6401826c:	mov    esi,eax
6401826e:	push   esi
6401826f:	call   0x64016a15
64018274:	push   esi
64018275:	call   0x6401e850
6401827a:	push   esi
6401827b:	call   0x64013cec
64018280:	push   esi
64018281:	call   0x6401d8b2
64018286:	push   esi
64018287:	call   0x6401e846
6401828c:	push   esi
6401828d:	call   0x6401e4d9
64018292:	push   esi
64018293:	call   0x6401c295
64018298:	push   esi
64018299:	call   0x64017d73
6401829e:	push   0x64018246
640182a3:	call   0x64017737
640182a8:	add    esp,0x24
640182ab:	mov    ds:0x64052480,eax
640182b0:	pop    esi
640182b1:	ret    
640182b2:	push   0x54
640182b4:	push   0x64043de0
640182b9:	call   0x64016464
640182be:	xor    edi,edi
640182c0:	mov    DWORD PTR [ebp-0x4],edi
640182c3:	lea    eax,[ebp-0x64]
640182c6:	push   eax
640182c7:	call   DWORD PTR ds:0x6402c130
640182cd:	mov    DWORD PTR [ebp-0x4],0xfffffffe
640182d4:	push   0x40
640182d6:	push   0x20
640182d8:	pop    esi
640182d9:	push   esi
640182da:	call   0x640162bf
640182df:	pop    ecx
640182e0:	pop    ecx
640182e1:	cmp    eax,edi
640182e3:	je     0x640184fd
640182e9:	mov    ds:0x640556c0,eax
640182ee:	mov    DWORD PTR ds:0x640556a8,esi
640182f4:	lea    ecx,[eax+0x800]
640182fa:	jmp    0x6401832c
640182fc:	mov    BYTE PTR [eax+0x4],0x0
64018300:	or     DWORD PTR [eax],0xffffffff
64018303:	mov    BYTE PTR [eax+0x5],0xa
64018307:	mov    DWORD PTR [eax+0x8],edi
6401830a:	mov    BYTE PTR [eax+0x24],0x0
6401830e:	mov    BYTE PTR [eax+0x25],0xa
64018312:	mov    BYTE PTR [eax+0x26],0xa
64018316:	mov    DWORD PTR [eax+0x38],edi
64018319:	mov    BYTE PTR [eax+0x34],0x0
6401831d:	add    eax,0x40
64018320:	mov    ecx,DWORD PTR ds:0x640556c0
64018326:	add    ecx,0x800
6401832c:	cmp    eax,ecx
6401832e:	jb     0x640182fc
64018330:	cmp    WORD PTR [ebp-0x32],di
64018334:	je     0x64018444
6401833a:	mov    eax,DWORD PTR [ebp-0x30]
6401833d:	cmp    eax,edi
6401833f:	je     0x64018444
64018345:	mov    edi,DWORD PTR [eax]
64018347:	lea    ebx,[eax+0x4]
6401834a:	lea    eax,[ebx+edi*1]
6401834d:	mov    DWORD PTR [ebp-0x1c],eax
64018350:	mov    esi,0x800
64018355:	cmp    edi,esi
64018357:	jl     0x6401835b
64018359:	mov    edi,esi
6401835b:	mov    DWORD PTR [ebp-0x20],0x1
64018362:	jmp    0x640183bf
64018364:	push   0x40
64018366:	push   0x20
64018368:	call   0x640162bf
6401836d:	pop    ecx
6401836e:	pop    ecx
6401836f:	test   eax,eax
64018371:	je     0x640183c9
64018373:	mov    ecx,DWORD PTR [ebp-0x20]
64018376:	lea    ecx,[ecx*4+0x640556c0]
6401837d:	mov    DWORD PTR [ecx],eax
6401837f:	add    DWORD PTR ds:0x640556a8,0x20
64018386:	lea    edx,[eax+0x800]
6401838c:	jmp    0x640183b8
6401838e:	mov    BYTE PTR [eax+0x4],0x0
64018392:	or     DWORD PTR [eax],0xffffffff
64018395:	mov    BYTE PTR [eax+0x5],0xa
64018399:	and    DWORD PTR [eax+0x8],0x0
6401839d:	and    BYTE PTR [eax+0x24],0x80
640183a1:	mov    BYTE PTR [eax+0x25],0xa
640183a5:	mov    BYTE PTR [eax+0x26],0xa
640183a9:	and    DWORD PTR [eax+0x38],0x0
640183ad:	mov    BYTE PTR [eax+0x34],0x0
640183b1:	add    eax,0x40
640183b4:	mov    edx,DWORD PTR [ecx]
640183b6:	add    edx,esi
640183b8:	cmp    eax,edx
640183ba:	jb     0x6401838e
640183bc:	inc    DWORD PTR [ebp-0x20]
640183bf:	cmp    DWORD PTR ds:0x640556a8,edi
640183c5:	jl     0x64018364
640183c7:	jmp    0x640183cf
640183c9:	mov    edi,DWORD PTR ds:0x640556a8
640183cf:	and    DWORD PTR [ebp-0x20],0x0
640183d3:	test   edi,edi
640183d5:	jle    0x64018444
640183d7:	mov    eax,DWORD PTR [ebp-0x1c]
640183da:	mov    ecx,DWORD PTR [eax]
640183dc:	cmp    ecx,0xffffffff
640183df:	je     0x64018437
640183e1:	cmp    ecx,0xfffffffe
640183e4:	je     0x64018437
640183e6:	mov    al,BYTE PTR [ebx]
640183e8:	test   al,0x1
640183ea:	je     0x64018437
640183ec:	test   al,0x8
640183ee:	jne    0x640183fb
640183f0:	push   ecx
640183f1:	call   DWORD PTR ds:0x6402c12c
640183f7:	test   eax,eax
640183f9:	je     0x64018437
640183fb:	mov    esi,DWORD PTR [ebp-0x20]
640183fe:	mov    eax,esi
64018400:	sar    eax,0x5
64018403:	and    esi,0x1f
64018406:	shl    esi,0x6
64018409:	add    esi,DWORD PTR [eax*4+0x640556c0]
64018410:	mov    eax,DWORD PTR [ebp-0x1c]
64018413:	mov    eax,DWORD PTR [eax]
64018415:	mov    DWORD PTR [esi],eax
64018417:	mov    al,BYTE PTR [ebx]
64018419:	mov    BYTE PTR [esi+0x4],al
6401841c:	push   0xfa0
64018421:	lea    eax,[esi+0xc]
64018424:	push   eax
64018425:	call   0x6401e86a
6401842a:	pop    ecx
6401842b:	pop    ecx
6401842c:	test   eax,eax
6401842e:	je     0x640184fd
64018434:	inc    DWORD PTR [esi+0x8]
64018437:	inc    DWORD PTR [ebp-0x20]
6401843a:	inc    ebx
6401843b:	add    DWORD PTR [ebp-0x1c],0x4
6401843f:	cmp    DWORD PTR [ebp-0x20],edi
64018442:	jl     0x640183d7
64018444:	xor    ebx,ebx
64018446:	mov    esi,ebx
64018448:	shl    esi,0x6
6401844b:	add    esi,DWORD PTR ds:0x640556c0
64018451:	mov    eax,DWORD PTR [esi]
64018453:	cmp    eax,0xffffffff
64018456:	je     0x64018463
64018458:	cmp    eax,0xfffffffe
6401845b:	je     0x64018463
6401845d:	or     BYTE PTR [esi+0x4],0x80
64018461:	jmp    0x640184d5
64018463:	mov    BYTE PTR [esi+0x4],0x81
64018467:	test   ebx,ebx
64018469:	jne    0x64018470
6401846b:	push   0xfffffff6
6401846d:	pop    eax
6401846e:	jmp    0x6401847a
64018470:	mov    eax,ebx
64018472:	dec    eax
64018473:	neg    eax
64018475:	sbb    eax,eax
64018477:	add    eax,0xfffffff5
6401847a:	push   eax
6401847b:	call   DWORD PTR ds:0x6402c110
64018481:	mov    edi,eax
64018483:	cmp    edi,0xffffffff
64018486:	je     0x640184cb
64018488:	test   edi,edi
6401848a:	je     0x640184cb
6401848c:	push   edi
6401848d:	call   DWORD PTR ds:0x6402c12c
64018493:	test   eax,eax
64018495:	je     0x640184cb
64018497:	mov    DWORD PTR [esi],edi
64018499:	and    eax,0xff
6401849e:	cmp    eax,0x2
640184a1:	jne    0x640184a9
640184a3:	or     BYTE PTR [esi+0x4],0x40
640184a7:	jmp    0x640184b2
640184a9:	cmp    eax,0x3
640184ac:	jne    0x640184b2
640184ae:	or     BYTE PTR [esi+0x4],0x8
640184b2:	push   0xfa0
640184b7:	lea    eax,[esi+0xc]
640184ba:	push   eax
640184bb:	call   0x6401e86a
640184c0:	pop    ecx
640184c1:	pop    ecx
640184c2:	test   eax,eax
640184c4:	je     0x640184fd
640184c6:	inc    DWORD PTR [esi+0x8]
640184c9:	jmp    0x640184d5
640184cb:	or     BYTE PTR [esi+0x4],0x40
640184cf:	mov    DWORD PTR [esi],0xfffffffe
640184d5:	inc    ebx
640184d6:	cmp    ebx,0x3
640184d9:	jl     0x64018446
640184df:	push   DWORD PTR ds:0x640556a8
640184e5:	call   DWORD PTR ds:0x6402c164
640184eb:	xor    eax,eax
640184ed:	jmp    0x64018500
640184ef:	xor    eax,eax
640184f1:	inc    eax
640184f2:	ret    
640184f3:	mov    esp,DWORD PTR [ebp-0x18]
640184f6:	mov    DWORD PTR [ebp-0x4],0xfffffffe
640184fd:	or     eax,0xffffffff
64018500:	call   0x640164a9
64018505:	ret    
64018506:	push   esi
64018507:	push   edi
64018508:	mov    esi,0x640556c0
6401850d:	mov    edi,DWORD PTR [esi]
6401850f:	test   edi,edi
64018511:	je     0x64018544
64018513:	lea    eax,[edi+0x800]
64018519:	jmp    0x64018535
6401851b:	cmp    DWORD PTR [edi+0x8],0x0
6401851f:	je     0x6401852b
64018521:	lea    eax,[edi+0xc]
64018524:	push   eax
64018525:	call   DWORD PTR ds:0x6402c170
6401852b:	mov    eax,DWORD PTR [esi]
6401852d:	add    edi,0x40
64018530:	add    eax,0x800
64018535:	cmp    edi,eax
64018537:	jb     0x6401851b
64018539:	push   DWORD PTR [esi]
6401853b:	call   0x6401475f
64018540:	and    DWORD PTR [esi],0x0
64018543:	pop    ecx
64018544:	add    esi,0x4
64018547:	cmp    esi,0x640557c0
6401854d:	jl     0x6401850d
6401854f:	pop    edi
64018550:	pop    esi
64018551:	ret    
64018552:	push   ebx
64018553:	xor    ebx,ebx
64018555:	cmp    DWORD PTR ds:0x640557cc,ebx
6401855b:	push   esi
6401855c:	push   edi
6401855d:	jne    0x64018564
6401855f:	call   0x640193d0
64018564:	mov    esi,DWORD PTR ds:0x640539f8
6401856a:	xor    edi,edi
6401856c:	cmp    esi,ebx
6401856e:	jne    0x64018588
64018570:	or     eax,0xffffffff
64018573:	jmp    0x64018613
64018578:	cmp    al,0x3d
6401857a:	je     0x6401857d
6401857c:	inc    edi
6401857d:	push   esi
6401857e:	call   0x64015aa0
64018583:	pop    ecx
64018584:	lea    esi,[esi+eax*1+0x1]
64018588:	mov    al,BYTE PTR [esi]
6401858a:	cmp    al,bl
6401858c:	jne    0x64018578
6401858e:	push   0x4
64018590:	inc    edi
64018591:	push   edi
64018592:	call   0x640162bf
64018597:	mov    edi,eax
64018599:	cmp    edi,ebx
6401859b:	pop    ecx
6401859c:	pop    ecx
6401859d:	mov    DWORD PTR ds:0x64053d80,edi
640185a3:	je     0x64018570
640185a5:	mov    esi,DWORD PTR ds:0x640539f8
640185ab:	push   ebp
640185ac:	jmp    0x640185ee
640185ae:	push   esi
640185af:	call   0x64015aa0
640185b4:	mov    ebp,eax
640185b6:	inc    ebp
640185b7:	cmp    BYTE PTR [esi],0x3d
640185ba:	pop    ecx
640185bb:	je     0x640185ec
640185bd:	push   0x1
640185bf:	push   ebp
640185c0:	call   0x640162bf
640185c5:	cmp    eax,ebx
640185c7:	pop    ecx
640185c8:	pop    ecx
640185c9:	mov    DWORD PTR [edi],eax
640185cb:	je     0x64018617
640185cd:	push   esi
640185ce:	push   ebp
640185cf:	push   eax
640185d0:	call   0x640164bd
640185d5:	add    esp,0xc
640185d8:	test   eax,eax
640185da:	je     0x640185e9
640185dc:	push   ebx
640185dd:	push   ebx
640185de:	push   ebx
640185df:	push   ebx
640185e0:	push   ebx
640185e1:	call   0x64013cf6
640185e6:	add    esp,0x14
640185e9:	add    edi,0x4
640185ec:	add    esi,ebp
640185ee:	cmp    BYTE PTR [esi],bl
640185f0:	jne    0x640185ae
640185f2:	push   DWORD PTR ds:0x640539f8
640185f8:	call   0x6401475f
640185fd:	mov    DWORD PTR ds:0x640539f8,ebx
64018603:	mov    DWORD PTR [edi],ebx
64018605:	mov    DWORD PTR ds:0x640557c0,0x1
6401860f:	xor    eax,eax
64018611:	pop    ecx
64018612:	pop    ebp
64018613:	pop    edi
64018614:	pop    esi
64018615:	pop    ebx
64018616:	ret    
64018617:	push   DWORD PTR ds:0x64053d80
6401861d:	call   0x6401475f
64018622:	mov    DWORD PTR ds:0x64053d80,ebx
64018628:	or     eax,0xffffffff
6401862b:	jmp    0x64018611
6401862d:	push   ebp
6401862e:	mov    ebp,esp
64018630:	push   ecx
64018631:	mov    ecx,DWORD PTR [ebp+0x10]
64018634:	push   ebx
64018635:	xor    eax,eax
64018637:	cmp    DWORD PTR [ebp+0x8],eax
6401863a:	push   esi
6401863b:	mov    DWORD PTR [edi],eax
6401863d:	mov    esi,edx
6401863f:	mov    edx,DWORD PTR [ebp+0xc]
64018642:	mov    DWORD PTR [ecx],0x1
64018648:	je     0x64018653
6401864a:	mov    ebx,DWORD PTR [ebp+0x8]
6401864d:	add    DWORD PTR [ebp+0x8],0x4
64018651:	mov    DWORD PTR [ebx],edx
64018653:	mov    DWORD PTR [ebp-0x4],eax
64018656:	cmp    BYTE PTR [esi],0x22
64018659:	jne    0x6401866b
6401865b:	xor    eax,eax
6401865d:	cmp    DWORD PTR [ebp-0x4],eax
64018660:	mov    bl,0x22
64018662:	sete   al
64018665:	inc    esi
64018666:	mov    DWORD PTR [ebp-0x4],eax
64018669:	jmp    0x640186a7
6401866b:	inc    DWORD PTR [edi]
6401866d:	test   edx,edx
6401866f:	je     0x64018679
64018671:	mov    al,BYTE PTR [esi]
64018673:	mov    BYTE PTR [edx],al
64018675:	inc    edx
64018676:	mov    DWORD PTR [ebp+0xc],edx
64018679:	mov    bl,BYTE PTR [esi]
6401867b:	movzx  eax,bl
6401867e:	push   eax
6401867f:	inc    esi
64018680:	call   0x6401d90d
64018685:	test   eax,eax
64018687:	pop    ecx
64018688:	je     0x6401869d
6401868a:	inc    DWORD PTR [edi]
6401868c:	cmp    DWORD PTR [ebp+0xc],0x0
64018690:	je     0x6401869c
64018692:	mov    ecx,DWORD PTR [ebp+0xc]
64018695:	mov    al,BYTE PTR [esi]
64018697:	inc    DWORD PTR [ebp+0xc]
6401869a:	mov    BYTE PTR [ecx],al
6401869c:	inc    esi
6401869d:	test   bl,bl
6401869f:	mov    edx,DWORD PTR [ebp+0xc]
640186a2:	mov    ecx,DWORD PTR [ebp+0x10]
640186a5:	je     0x640186d9
640186a7:	cmp    DWORD PTR [ebp-0x4],0x0
640186ab:	jne    0x64018656
640186ad:	cmp    bl,0x20
640186b0:	je     0x640186b7
640186b2:	cmp    bl,0x9
640186b5:	jne    0x64018656
640186b7:	test   edx,edx
640186b9:	je     0x640186bf
640186bb:	mov    BYTE PTR [edx-0x1],0x0
640186bf:	and    DWORD PTR [ebp-0x4],0x0
640186c3:	cmp    BYTE PTR [esi],0x0
640186c6:	je     0x640187b5
640186cc:	mov    al,BYTE PTR [esi]
640186ce:	cmp    al,0x20
640186d0:	je     0x640186d6
640186d2:	cmp    al,0x9
640186d4:	jne    0x640186dc
640186d6:	inc    esi
640186d7:	jmp    0x640186cc
640186d9:	dec    esi
640186da:	jmp    0x640186bf
640186dc:	cmp    BYTE PTR [esi],0x0
640186df:	je     0x640187b5
640186e5:	cmp    DWORD PTR [ebp+0x8],0x0
640186e9:	je     0x640186f4
640186eb:	mov    eax,DWORD PTR [ebp+0x8]
640186ee:	add    DWORD PTR [ebp+0x8],0x4
640186f2:	mov    DWORD PTR [eax],edx
640186f4:	inc    DWORD PTR [ecx]
640186f6:	xor    ebx,ebx
640186f8:	inc    ebx
640186f9:	xor    ecx,ecx
640186fb:	jmp    0x640186ff
640186fd:	inc    esi
640186fe:	inc    ecx
640186ff:	cmp    BYTE PTR [esi],0x5c
64018702:	je     0x640186fd
64018704:	cmp    BYTE PTR [esi],0x22
64018707:	jne    0x6401872f
64018709:	test   cl,0x1
6401870c:	jne    0x6401872d
6401870e:	cmp    DWORD PTR [ebp-0x4],0x0
64018712:	je     0x64018720
64018714:	lea    eax,[esi+0x1]
64018717:	cmp    BYTE PTR [eax],0x22
6401871a:	jne    0x64018720
6401871c:	mov    esi,eax
6401871e:	jmp    0x6401872d
64018720:	xor    eax,eax
64018722:	xor    ebx,ebx
64018724:	cmp    DWORD PTR [ebp-0x4],eax
64018727:	sete   al
6401872a:	mov    DWORD PTR [ebp-0x4],eax
6401872d:	shr    ecx,1
6401872f:	test   ecx,ecx
64018731:	je     0x64018745
64018733:	dec    ecx
64018734:	test   edx,edx
64018736:	je     0x6401873c
64018738:	mov    BYTE PTR [edx],0x5c
6401873b:	inc    edx
6401873c:	inc    DWORD PTR [edi]
6401873e:	test   ecx,ecx
64018740:	jne    0x64018733
64018742:	mov    DWORD PTR [ebp+0xc],edx
64018745:	mov    al,BYTE PTR [esi]
64018747:	test   al,al
64018749:	je     0x640187a0
6401874b:	cmp    DWORD PTR [ebp-0x4],0x0
6401874f:	jne    0x64018759
64018751:	cmp    al,0x20
64018753:	je     0x640187a0
64018755:	cmp    al,0x9
64018757:	je     0x640187a0
64018759:	test   ebx,ebx
6401875b:	je     0x6401879a
6401875d:	test   edx,edx
6401875f:	movsx  eax,al
64018762:	push   eax
64018763:	je     0x64018788
64018765:	call   0x6401d90d
6401876a:	test   eax,eax
6401876c:	pop    ecx
6401876d:	je     0x6401877c
6401876f:	mov    al,BYTE PTR [esi]
64018771:	mov    ecx,DWORD PTR [ebp+0xc]
64018774:	inc    DWORD PTR [ebp+0xc]
64018777:	mov    BYTE PTR [ecx],al
64018779:	inc    esi
6401877a:	inc    DWORD PTR [edi]
6401877c:	mov    ecx,DWORD PTR [ebp+0xc]
6401877f:	mov    al,BYTE PTR [esi]
64018781:	inc    DWORD PTR [ebp+0xc]
64018784:	mov    BYTE PTR [ecx],al
64018786:	jmp    0x64018795
64018788:	call   0x6401d90d
6401878d:	test   eax,eax
6401878f:	pop    ecx
64018790:	je     0x64018795
64018792:	inc    esi
64018793:	inc    DWORD PTR [edi]
64018795:	inc    DWORD PTR [edi]
64018797:	mov    edx,DWORD PTR [ebp+0xc]
6401879a:	inc    esi
6401879b:	jmp    0x640186f6
640187a0:	test   edx,edx
640187a2:	je     0x640187ab
640187a4:	mov    BYTE PTR [edx],0x0
640187a7:	inc    edx
640187a8:	mov    DWORD PTR [ebp+0xc],edx
640187ab:	inc    DWORD PTR [edi]
640187ad:	mov    ecx,DWORD PTR [ebp+0x10]
640187b0:	jmp    0x640186c3
640187b5:	mov    eax,DWORD PTR [ebp+0x8]
640187b8:	test   eax,eax
640187ba:	pop    esi
640187bb:	pop    ebx
640187bc:	je     0x640187c1
640187be:	and    DWORD PTR [eax],0x0
640187c1:	inc    DWORD PTR [ecx]
640187c3:	leave  
640187c4:	ret    
640187c5:	push   ebp
640187c6:	mov    ebp,esp
640187c8:	sub    esp,0xc
640187cb:	push   ebx
640187cc:	xor    ebx,ebx
640187ce:	cmp    DWORD PTR ds:0x640557cc,ebx
640187d4:	push   esi
640187d5:	push   edi
640187d6:	jne    0x640187dd
640187d8:	call   0x640193d0
640187dd:	push   0x104
640187e2:	mov    esi,0x64053da8
640187e7:	push   esi
640187e8:	push   ebx
640187e9:	mov    BYTE PTR ds:0x64053eac,bl
640187ef:	call   DWORD PTR ds:0x6402c148
640187f5:	mov    eax,ds:0x640557d8
640187fa:	cmp    eax,ebx
640187fc:	mov    DWORD PTR ds:0x64053d90,esi
64018802:	je     0x6401880b
64018804:	cmp    BYTE PTR [eax],bl
64018806:	mov    DWORD PTR [ebp-0x4],eax
64018809:	jne    0x6401880e
6401880b:	mov    DWORD PTR [ebp-0x4],esi
6401880e:	mov    edx,DWORD PTR [ebp-0x4]
64018811:	lea    eax,[ebp-0x8]
64018814:	push   eax
64018815:	push   ebx
64018816:	push   ebx
64018817:	lea    edi,[ebp-0xc]
6401881a:	call   0x6401862d
6401881f:	mov    eax,DWORD PTR [ebp-0x8]
64018822:	add    esp,0xc
64018825:	cmp    eax,0x3fffffff
6401882a:	jae    0x64018876
6401882c:	mov    ecx,DWORD PTR [ebp-0xc]
6401882f:	cmp    ecx,0xffffffff
64018832:	jae    0x64018876
64018834:	mov    edi,eax
64018836:	shl    edi,0x2
64018839:	lea    eax,[edi+ecx*1]
6401883c:	cmp    eax,ecx
6401883e:	jb     0x64018876
64018840:	push   eax
64018841:	call   0x6401627f
64018846:	mov    esi,eax
64018848:	cmp    esi,ebx
6401884a:	pop    ecx
6401884b:	je     0x64018876
6401884d:	mov    edx,DWORD PTR [ebp-0x4]
64018850:	lea    eax,[ebp-0x8]
64018853:	push   eax
64018854:	add    edi,esi
64018856:	push   edi
64018857:	push   esi
64018858:	lea    edi,[ebp-0xc]
6401885b:	call   0x6401862d
64018860:	mov    eax,DWORD PTR [ebp-0x8]
64018863:	add    esp,0xc
64018866:	dec    eax
64018867:	mov    ds:0x64053d74,eax
6401886c:	mov    DWORD PTR ds:0x64053d78,esi
64018872:	xor    eax,eax
64018874:	jmp    0x64018879
64018876:	or     eax,0xffffffff
64018879:	pop    edi
6401887a:	pop    esi
6401887b:	pop    ebx
6401887c:	leave  
6401887d:	ret    
6401887e:	push   ecx
6401887f:	push   ecx
64018880:	mov    eax,ds:0x64053eb0
64018885:	push   ebx
64018886:	push   ebp
64018887:	push   esi
64018888:	push   edi
64018889:	mov    edi,DWORD PTR ds:0x6402c158
6401888f:	xor    ebx,ebx
64018891:	xor    esi,esi
64018893:	cmp    eax,ebx
64018895:	push   0x2
64018897:	pop    ebp
64018898:	jne    0x640188c7
6401889a:	call   edi
6401889c:	mov    esi,eax
6401889e:	cmp    esi,ebx
640188a0:	je     0x640188ae
640188a2:	mov    DWORD PTR ds:0x64053eb0,0x1
640188ac:	jmp    0x640188d0
640188ae:	call   DWORD PTR ds:0x6402c06c
640188b4:	cmp    eax,0x78
640188b7:	jne    0x640188c2
640188b9:	mov    eax,ebp
640188bb:	mov    ds:0x64053eb0,eax
640188c0:	jmp    0x640188c7
640188c2:	mov    eax,ds:0x64053eb0
640188c7:	cmp    eax,0x1
640188ca:	jne    0x64018954
640188d0:	cmp    esi,ebx
640188d2:	jne    0x640188e3
640188d4:	call   edi
640188d6:	mov    esi,eax
640188d8:	cmp    esi,ebx
640188da:	jne    0x640188e3
640188dc:	xor    eax,eax
640188de:	jmp    0x640189ac
640188e3:	cmp    WORD PTR [esi],bx
640188e6:	mov    eax,esi
640188e8:	je     0x640188f8
640188ea:	add    eax,ebp
640188ec:	cmp    WORD PTR [eax],bx
640188ef:	jne    0x640188ea
640188f1:	add    eax,ebp
640188f3:	cmp    WORD PTR [eax],bx
640188f6:	jne    0x640188ea
640188f8:	mov    edi,DWORD PTR ds:0x6402c014
640188fe:	push   ebx
640188ff:	push   ebx
64018900:	push   ebx
64018901:	sub    eax,esi
64018903:	push   ebx
64018904:	sar    eax,1
64018906:	inc    eax
64018907:	push   eax
64018908:	push   esi
64018909:	push   ebx
6401890a:	push   ebx
6401890b:	mov    DWORD PTR [esp+0x34],eax
6401890f:	call   edi
64018911:	mov    ebp,eax
64018913:	cmp    ebp,ebx
64018915:	je     0x64018949
64018917:	push   ebp
64018918:	call   0x6401627f
6401891d:	cmp    eax,ebx
6401891f:	pop    ecx
64018920:	mov    DWORD PTR [esp+0x10],eax
64018924:	je     0x64018949
64018926:	push   ebx
64018927:	push   ebx
64018928:	push   ebp
64018929:	push   eax
6401892a:	push   DWORD PTR [esp+0x24]
6401892e:	push   esi
6401892f:	push   ebx
64018930:	push   ebx
64018931:	call   edi
64018933:	test   eax,eax
64018935:	jne    0x64018945
64018937:	push   DWORD PTR [esp+0x10]
6401893b:	call   0x6401475f
64018940:	pop    ecx
64018941:	mov    DWORD PTR [esp+0x10],ebx
64018945:	mov    ebx,DWORD PTR [esp+0x10]
64018949:	push   esi
6401894a:	call   DWORD PTR ds:0x6402c154
64018950:	mov    eax,ebx
64018952:	jmp    0x640189ac
64018954:	cmp    eax,ebp
64018956:	je     0x6401895c
64018958:	cmp    eax,ebx
6401895a:	jne    0x640188dc
6401895c:	call   DWORD PTR ds:0x6402c150
64018962:	mov    esi,eax
64018964:	cmp    esi,ebx
64018966:	je     0x640188dc
6401896c:	cmp    BYTE PTR [esi],bl
6401896e:	je     0x6401897a
64018970:	inc    eax
64018971:	cmp    BYTE PTR [eax],bl
64018973:	jne    0x64018970
64018975:	inc    eax
64018976:	cmp    BYTE PTR [eax],bl
64018978:	jne    0x64018970
6401897a:	sub    eax,esi
6401897c:	inc    eax
6401897d:	mov    ebp,eax
6401897f:	push   ebp
64018980:	call   0x6401627f
64018985:	mov    edi,eax
64018987:	cmp    edi,ebx
64018989:	pop    ecx
6401898a:	jne    0x64018998
6401898c:	push   esi
6401898d:	call   DWORD PTR ds:0x6402c14c
64018993:	jmp    0x640188dc
64018998:	push   ebp
64018999:	push   esi
6401899a:	push   edi
6401899b:	call   0x64015180
640189a0:	add    esp,0xc
640189a3:	push   esi
640189a4:	call   DWORD PTR ds:0x6402c14c
640189aa:	mov    eax,edi
640189ac:	pop    edi
640189ad:	pop    esi
640189ae:	pop    ebp
640189af:	pop    ebx
640189b0:	pop    ecx
640189b1:	pop    ecx
640189b2:	ret    
640189b3:	push   esi
640189b4:	push   edi
640189b5:	mov    eax,0x64043968
640189ba:	mov    edi,0x64043968
640189bf:	cmp    eax,edi
640189c1:	mov    esi,eax
640189c3:	jae    0x640189d4
640189c5:	mov    eax,DWORD PTR [esi]
640189c7:	test   eax,eax
640189c9:	je     0x640189cd
640189cb:	call   eax
640189cd:	add    esi,0x4
640189d0:	cmp    esi,edi
640189d2:	jb     0x640189c5
640189d4:	pop    edi
640189d5:	pop    esi
640189d6:	ret    
640189d7:	push   esi
640189d8:	push   edi
640189d9:	mov    eax,0x64043970
640189de:	mov    edi,0x64043970
640189e3:	cmp    eax,edi
640189e5:	mov    esi,eax
640189e7:	jae    0x640189f8
640189e9:	mov    eax,DWORD PTR [esi]
640189eb:	test   eax,eax
640189ed:	je     0x640189f1
640189ef:	call   eax
640189f1:	add    esi,0x4
640189f4:	cmp    esi,edi
640189f6:	jb     0x640189e9
640189f8:	pop    edi
640189f9:	pop    esi
640189fa:	ret    
640189fb:	push   ebp
640189fc:	mov    ebp,esp
640189fe:	push   ecx
640189ff:	push   ecx
64018a00:	push   esi
64018a01:	lea    eax,[ebp-0x4]
64018a04:	xor    esi,esi
64018a06:	push   eax
64018a07:	mov    DWORD PTR [ebp-0x4],esi
64018a0a:	mov    DWORD PTR [ebp-0x8],esi
64018a0d:	call   0x6401805f
64018a12:	test   eax,eax
64018a14:	pop    ecx
64018a15:	je     0x64018a24
64018a17:	push   esi
64018a18:	push   esi
64018a19:	push   esi
64018a1a:	push   esi
64018a1b:	push   esi
64018a1c:	call   0x64013cf6
64018a21:	add    esp,0x14
64018a24:	lea    eax,[ebp-0x8]
64018a27:	push   eax
64018a28:	call   0x64018096
64018a2d:	test   eax,eax
64018a2f:	pop    ecx
64018a30:	je     0x64018a3f
64018a32:	push   esi
64018a33:	push   esi
64018a34:	push   esi
64018a35:	push   esi
64018a36:	push   esi
64018a37:	call   0x64013cf6
64018a3c:	add    esp,0x14
64018a3f:	cmp    DWORD PTR [ebp-0x4],0x2
64018a43:	pop    esi
64018a44:	jne    0x64018a51
64018a46:	cmp    DWORD PTR [ebp-0x8],0x5
64018a4a:	jb     0x64018a51
64018a4c:	xor    eax,eax
64018a4e:	inc    eax
64018a4f:	leave  
64018a50:	ret    
64018a51:	push   0x3
64018a53:	pop    eax
64018a54:	leave  
64018a55:	ret    
64018a56:	xor    eax,eax
64018a58:	cmp    DWORD PTR [esp+0x4],eax
64018a5c:	push   0x0
64018a5e:	sete   al
64018a61:	push   0x1000
64018a66:	push   eax
64018a67:	call   DWORD PTR ds:0x6402c1dc
64018a6d:	test   eax,eax
64018a6f:	mov    ds:0x64053eb4,eax
64018a74:	jne    0x64018a79
64018a76:	xor    eax,eax
64018a78:	ret    
64018a79:	call   0x640189fb
64018a7e:	cmp    eax,0x3
64018a81:	mov    ds:0x640556a4,eax
64018a86:	jne    0x64018aac
64018a88:	push   0x3f8
64018a8d:	call   0x6401b45b
64018a92:	test   eax,eax
64018a94:	pop    ecx
64018a95:	jne    0x64018aac
64018a97:	push   DWORD PTR ds:0x64053eb4
64018a9d:	call   DWORD PTR ds:0x6402c190
64018aa3:	and    DWORD PTR ds:0x64053eb4,0x0
64018aaa:	jmp    0x64018a76
64018aac:	xor    eax,eax
64018aae:	inc    eax
64018aaf:	ret    
64018ab0:	push   ebp
64018ab1:	xor    ebp,ebp
64018ab3:	cmp    DWORD PTR ds:0x640556a4,0x3
64018aba:	jne    0x64018b10
64018abc:	push   ebx
64018abd:	mov    ebx,DWORD PTR ds:0x6402c198
64018ac3:	push   edi
64018ac4:	xor    edi,edi
64018ac6:	cmp    DWORD PTR ds:0x64054678,ebp
64018acc:	jle    0x64018aff
64018ace:	push   esi
64018acf:	mov    esi,DWORD PTR ds:0x6405467c
64018ad5:	add    esi,0x10
64018ad8:	push   0x8000
64018add:	push   ebp
64018ade:	push   DWORD PTR [esi-0x4]
64018ae1:	call   DWORD PTR ds:0x6402c160
64018ae7:	push   DWORD PTR [esi]
64018ae9:	push   ebp
64018aea:	push   DWORD PTR ds:0x64053eb4
64018af0:	call   ebx
64018af2:	add    esi,0x14
64018af5:	inc    edi
64018af6:	cmp    edi,DWORD PTR ds:0x64054678
64018afc:	jl     0x64018ad8
64018afe:	pop    esi
64018aff:	push   DWORD PTR ds:0x6405467c
64018b05:	push   ebp
64018b06:	push   DWORD PTR ds:0x64053eb4
64018b0c:	call   ebx
64018b0e:	pop    edi
64018b0f:	pop    ebx
64018b10:	push   DWORD PTR ds:0x64053eb4
64018b16:	call   DWORD PTR ds:0x6402c190
64018b1c:	mov    DWORD PTR ds:0x64053eb4,ebp
64018b22:	pop    ebp
64018b23:	ret    
64018b24:	push   ebp
64018b25:	mov    ebp,esp
64018b27:	push   ecx
64018b28:	push   ecx
64018b29:	push   esi
64018b2a:	call   0x64017953
64018b2f:	mov    esi,eax
64018b31:	test   esi,esi
64018b33:	je     0x64018c7f
64018b39:	mov    edx,DWORD PTR [esi+0x5c]
64018b3c:	mov    eax,ds:0x64052554
64018b41:	push   edi
64018b42:	mov    edi,DWORD PTR [ebp+0x8]
64018b45:	mov    ecx,edx
64018b47:	push   ebx
64018b48:	cmp    DWORD PTR [ecx],edi
64018b4a:	je     0x64018b5a
64018b4c:	mov    ebx,eax
64018b4e:	imul   ebx,ebx,0xc
64018b51:	add    ecx,0xc
64018b54:	add    ebx,edx
64018b56:	cmp    ecx,ebx
64018b58:	jb     0x64018b48
64018b5a:	imul   eax,eax,0xc
64018b5d:	add    eax,edx
64018b5f:	cmp    ecx,eax
64018b61:	jae    0x64018b6b
64018b63:	cmp    DWORD PTR [ecx],edi
64018b65:	jne    0x64018b6b
64018b67:	mov    eax,ecx
64018b69:	jmp    0x64018b6d
64018b6b:	xor    eax,eax
64018b6d:	test   eax,eax
64018b6f:	je     0x64018b7b
64018b71:	mov    ebx,DWORD PTR [eax+0x8]
64018b74:	test   ebx,ebx
64018b76:	mov    DWORD PTR [ebp-0x4],ebx
64018b79:	jne    0x64018b82
64018b7b:	xor    eax,eax
64018b7d:	jmp    0x64018c7d
64018b82:	cmp    ebx,0x5
64018b85:	jne    0x64018b93
64018b87:	and    DWORD PTR [eax+0x8],0x0
64018b8b:	xor    eax,eax
64018b8d:	inc    eax
64018b8e:	jmp    0x64018c7d
64018b93:	cmp    ebx,0x1
64018b96:	je     0x64018c7a
64018b9c:	mov    ecx,DWORD PTR [esi+0x60]
64018b9f:	mov    DWORD PTR [ebp-0x8],ecx
64018ba2:	mov    ecx,DWORD PTR [ebp+0xc]
64018ba5:	mov    DWORD PTR [esi+0x60],ecx
64018ba8:	mov    ecx,DWORD PTR [eax+0x4]
64018bab:	cmp    ecx,0x8
64018bae:	jne    0x64018c6c
64018bb4:	mov    ecx,DWORD PTR ds:0x64052548
64018bba:	mov    edi,DWORD PTR ds:0x6405254c
64018bc0:	mov    edx,ecx
64018bc2:	add    edi,ecx
64018bc4:	cmp    edx,edi
64018bc6:	jge    0x64018bec
64018bc8:	imul   ecx,ecx,0xc
64018bcb:	mov    edi,DWORD PTR [esi+0x5c]
64018bce:	and    DWORD PTR [ecx+edi*1+0x8],0x0
64018bd3:	mov    edi,DWORD PTR ds:0x64052548
64018bd9:	mov    ebx,DWORD PTR ds:0x6405254c
64018bdf:	inc    edx
64018be0:	add    ebx,edi
64018be2:	add    ecx,0xc
64018be5:	cmp    edx,ebx
64018be7:	jl     0x64018bcb
64018be9:	mov    ebx,DWORD PTR [ebp-0x4]
64018bec:	mov    eax,DWORD PTR [eax]
64018bee:	cmp    eax,0xc000008e
64018bf3:	mov    edi,DWORD PTR [esi+0x64]
64018bf6:	jne    0x64018c01
64018bf8:	mov    DWORD PTR [esi+0x64],0x83
64018bff:	jmp    0x64018c5f
64018c01:	cmp    eax,0xc0000090
64018c06:	jne    0x64018c11
64018c08:	mov    DWORD PTR [esi+0x64],0x81
64018c0f:	jmp    0x64018c5f
64018c11:	cmp    eax,0xc0000091
64018c16:	jne    0x64018c21
64018c18:	mov    DWORD PTR [esi+0x64],0x84
64018c1f:	jmp    0x64018c5f
64018c21:	cmp    eax,0xc0000093
64018c26:	jne    0x64018c31
64018c28:	mov    DWORD PTR [esi+0x64],0x85
64018c2f:	jmp    0x64018c5f
64018c31:	cmp    eax,0xc000008d
64018c36:	jne    0x64018c41
64018c38:	mov    DWORD PTR [esi+0x64],0x82
64018c3f:	jmp    0x64018c5f
64018c41:	cmp    eax,0xc000008f
64018c46:	jne    0x64018c51
64018c48:	mov    DWORD PTR [esi+0x64],0x86
64018c4f:	jmp    0x64018c5f
64018c51:	cmp    eax,0xc0000092
64018c56:	jne    0x64018c5f
64018c58:	mov    DWORD PTR [esi+0x64],0x8a
64018c5f:	push   DWORD PTR [esi+0x64]
64018c62:	push   0x8
64018c64:	call   ebx
64018c66:	pop    ecx
64018c67:	mov    DWORD PTR [esi+0x64],edi
64018c6a:	jmp    0x64018c73
64018c6c:	and    DWORD PTR [eax+0x8],0x0
64018c70:	push   ecx
64018c71:	call   ebx
64018c73:	mov    eax,DWORD PTR [ebp-0x8]
64018c76:	pop    ecx
64018c77:	mov    DWORD PTR [esi+0x60],eax
64018c7a:	or     eax,0xffffffff
64018c7d:	pop    ebx
64018c7e:	pop    edi
64018c7f:	pop    esi
64018c80:	leave  
64018c81:	ret    
64018c82:	mov    eax,0xe06d7363
64018c87:	cmp    DWORD PTR [esp+0x4],eax
64018c8b:	jne    0x64018c9a
64018c8d:	push   DWORD PTR [esp+0x8]
64018c91:	push   eax
64018c92:	call   0x64018b24
64018c97:	pop    ecx
64018c98:	pop    ecx
64018c99:	ret    
64018c9a:	xor    eax,eax
64018c9c:	ret    
64018c9d:	push   ebp
64018c9e:	mov    ebp,esp
64018ca0:	sub    esp,0x10
64018ca3:	mov    eax,ds:0x640521ac
64018ca8:	and    DWORD PTR [ebp-0x8],0x0
64018cac:	and    DWORD PTR [ebp-0x4],0x0
64018cb0:	push   ebx
64018cb1:	push   edi
64018cb2:	mov    edi,0xbb40e64e
64018cb7:	cmp    eax,edi
64018cb9:	mov    ebx,0xffff0000
64018cbe:	je     0x64018ccd
64018cc0:	test   ebx,eax
64018cc2:	je     0x64018ccd
64018cc4:	not    eax
64018cc6:	mov    ds:0x640521b0,eax
64018ccb:	jmp    0x64018d2d
64018ccd:	push   esi
64018cce:	lea    eax,[ebp-0x8]
64018cd1:	push   eax
64018cd2:	call   DWORD PTR ds:0x6402c128
64018cd8:	mov    esi,DWORD PTR [ebp-0x4]
64018cdb:	xor    esi,DWORD PTR [ebp-0x8]
64018cde:	call   DWORD PTR ds:0x6402c03c
64018ce4:	xor    esi,eax
64018ce6:	call   DWORD PTR ds:0x6402c0f4
64018cec:	xor    esi,eax
64018cee:	call   DWORD PTR ds:0x6402c100
64018cf4:	xor    esi,eax
64018cf6:	lea    eax,[ebp-0x10]
64018cf9:	push   eax
64018cfa:	call   DWORD PTR ds:0x6402c15c
64018d00:	mov    eax,DWORD PTR [ebp-0xc]
64018d03:	xor    eax,DWORD PTR [ebp-0x10]
64018d06:	xor    esi,eax
64018d08:	cmp    esi,edi
64018d0a:	jne    0x64018d13
64018d0c:	mov    esi,0xbb40e64f
64018d11:	jmp    0x64018d1e
64018d13:	test   ebx,esi
64018d15:	jne    0x64018d1e
64018d17:	mov    eax,esi
64018d19:	shl    eax,0x10
64018d1c:	or     esi,eax
64018d1e:	mov    DWORD PTR ds:0x640521ac,esi
64018d24:	not    esi
64018d26:	mov    DWORD PTR ds:0x640521b0,esi
64018d2c:	pop    esi
64018d2d:	pop    edi
64018d2e:	pop    ebx
64018d2f:	leave  
64018d30:	ret    
64018d31:	sub    eax,0x3a4
64018d36:	je     0x64018d5a
64018d38:	sub    eax,0x4
64018d3b:	je     0x64018d54
64018d3d:	sub    eax,0xd
64018d40:	je     0x64018d4e
64018d42:	dec    eax
64018d43:	je     0x64018d48
64018d45:	xor    eax,eax
64018d47:	ret    
64018d48:	mov    eax,0x404
64018d4d:	ret    
64018d4e:	mov    eax,0x412
64018d53:	ret    
64018d54:	mov    eax,0x804
64018d59:	ret    
64018d5a:	mov    eax,0x411
64018d5f:	ret    
64018d60:	push   ebx
64018d61:	push   ebp
64018d62:	push   esi
64018d63:	push   edi
64018d64:	mov    ebp,0x101
64018d69:	mov    esi,eax
64018d6b:	push   ebp
64018d6c:	xor    edi,edi
64018d6e:	lea    ebx,[esi+0x1c]
64018d71:	push   edi
64018d72:	push   ebx
64018d73:	call   0x64015100
64018d78:	mov    DWORD PTR [esi+0x4],edi
64018d7b:	mov    DWORD PTR [esi+0x8],edi
64018d7e:	mov    DWORD PTR [esi+0xc],edi
64018d81:	xor    eax,eax
64018d83:	lea    edi,[esi+0x10]
64018d86:	stos   DWORD PTR es:[edi],eax
64018d87:	stos   DWORD PTR es:[edi],eax
64018d88:	stos   DWORD PTR es:[edi],eax
64018d89:	mov    eax,0x64052558
64018d8e:	add    esp,0xc
64018d91:	sub    eax,esi
64018d93:	mov    cl,BYTE PTR [eax+ebx*1]
64018d96:	mov    BYTE PTR [ebx],cl
64018d98:	inc    ebx
64018d99:	dec    ebp
64018d9a:	jne    0x64018d93
64018d9c:	lea    ecx,[esi+0x11d]
64018da2:	mov    esi,0x100
64018da7:	mov    dl,BYTE PTR [ecx+eax*1]
64018daa:	mov    BYTE PTR [ecx],dl
64018dac:	inc    ecx
64018dad:	dec    esi
64018dae:	jne    0x64018da7
64018db0:	pop    edi
64018db1:	pop    esi
64018db2:	pop    ebp
64018db3:	pop    ebx
64018db4:	ret    
64018db5:	push   ebp
64018db6:	lea    ebp,[esp-0x49c]
64018dbd:	sub    esp,0x51c
64018dc3:	mov    eax,ds:0x640521ac
64018dc8:	xor    eax,ebp
64018dca:	mov    DWORD PTR [ebp+0x498],eax
64018dd0:	push   ebx
64018dd1:	push   edi
64018dd2:	lea    eax,[ebp-0x7c]
64018dd5:	push   eax
64018dd6:	push   DWORD PTR [esi+0x4]
64018dd9:	call   DWORD PTR ds:0x6402c1cc
64018ddf:	test   eax,eax
64018de1:	mov    edi,0x100
64018de6:	je     0x64018edb
64018dec:	xor    eax,eax
64018dee:	mov    BYTE PTR [ebp+eax*1+0x398],al
64018df5:	inc    eax
64018df6:	cmp    eax,edi
64018df8:	jb     0x64018dee
64018dfa:	mov    al,BYTE PTR [ebp-0x76]
64018dfd:	test   al,al
64018dff:	mov    BYTE PTR [ebp+0x398],0x20
64018e06:	je     0x64018e33
64018e08:	lea    ebx,[ebp-0x75]
64018e0b:	movzx  ecx,al
64018e0e:	movzx  eax,BYTE PTR [ebx]
64018e11:	cmp    ecx,eax
64018e13:	ja     0x64018e2b
64018e15:	sub    eax,ecx
64018e17:	inc    eax
64018e18:	push   eax
64018e19:	lea    edx,[ebp+ecx*1+0x398]
64018e20:	push   0x20
64018e22:	push   edx
64018e23:	call   0x64015100
64018e28:	add    esp,0xc
64018e2b:	inc    ebx
64018e2c:	mov    al,BYTE PTR [ebx]
64018e2e:	inc    ebx
64018e2f:	test   al,al
64018e31:	jne    0x64018e0b
64018e33:	push   0x0
64018e35:	push   DWORD PTR [esi+0xc]
64018e38:	lea    eax,[ebp-0x68]
64018e3b:	push   DWORD PTR [esi+0x4]
64018e3e:	push   eax
64018e3f:	push   edi
64018e40:	lea    eax,[ebp+0x398]
64018e46:	push   eax
64018e47:	push   0x1
64018e49:	push   0x0
64018e4b:	call   0x6401e251
64018e50:	xor    ebx,ebx
64018e52:	push   ebx
64018e53:	push   DWORD PTR [esi+0x4]
64018e56:	lea    eax,[ebp+0x298]
64018e5c:	push   edi
64018e5d:	push   eax
64018e5e:	push   edi
64018e5f:	lea    eax,[ebp+0x398]
64018e65:	push   eax
64018e66:	push   edi
64018e67:	push   DWORD PTR [esi+0xc]
64018e6a:	push   ebx
64018e6b:	call   0x6401623c
64018e70:	add    esp,0x44
64018e73:	push   ebx
64018e74:	push   DWORD PTR [esi+0x4]
64018e77:	lea    eax,[ebp+0x198]
64018e7d:	push   edi
64018e7e:	push   eax
64018e7f:	push   edi
64018e80:	lea    eax,[ebp+0x398]
64018e86:	push   eax
64018e87:	push   0x200
64018e8c:	push   DWORD PTR [esi+0xc]
64018e8f:	push   ebx
64018e90:	call   0x6401623c
64018e95:	add    esp,0x24
64018e98:	xor    eax,eax
64018e9a:	movzx  ecx,WORD PTR [ebp+eax*2-0x68]
64018e9f:	test   cl,0x1
64018ea2:	je     0x64018eb2
64018ea4:	or     BYTE PTR [esi+eax*1+0x1d],0x10
64018ea9:	mov    cl,BYTE PTR [ebp+eax*1+0x298]
64018eb0:	jmp    0x64018ec3
64018eb2:	test   cl,0x2
64018eb5:	je     0x64018ecc
64018eb7:	or     BYTE PTR [esi+eax*1+0x1d],0x20
64018ebc:	mov    cl,BYTE PTR [ebp+eax*1+0x198]
64018ec3:	mov    BYTE PTR [esi+eax*1+0x11d],cl
64018eca:	jmp    0x64018ed4
64018ecc:	mov    BYTE PTR [esi+eax*1+0x11d],0x0
64018ed4:	inc    eax
64018ed5:	cmp    eax,edi
64018ed7:	jb     0x64018e9a
64018ed9:	jmp    0x64018f28
64018edb:	lea    eax,[esi+0x11d]
64018ee1:	mov    DWORD PTR [ebp-0x80],0xffffff9f
64018ee8:	xor    ecx,ecx
64018eea:	sub    DWORD PTR [ebp-0x80],eax
64018eed:	mov    edx,DWORD PTR [ebp-0x80]
64018ef0:	lea    eax,[esi+ecx*1+0x11d]
64018ef7:	add    edx,eax
64018ef9:	lea    ebx,[edx+0x20]
64018efc:	cmp    ebx,0x19
64018eff:	ja     0x64018f0d
64018f01:	or     BYTE PTR [esi+ecx*1+0x1d],0x10
64018f06:	mov    dl,cl
64018f08:	add    dl,0x20
64018f0b:	jmp    0x64018f1c
64018f0d:	cmp    edx,0x19
64018f10:	ja     0x64018f20
64018f12:	or     BYTE PTR [esi+ecx*1+0x1d],0x20
64018f17:	mov    dl,cl
64018f19:	sub    dl,0x20
64018f1c:	mov    BYTE PTR [eax],dl
64018f1e:	jmp    0x64018f23
64018f20:	mov    BYTE PTR [eax],0x0
64018f23:	inc    ecx
64018f24:	cmp    ecx,edi
64018f26:	jb     0x64018eed
64018f28:	mov    ecx,DWORD PTR [ebp+0x498]
64018f2e:	pop    edi
64018f2f:	xor    ecx,ebp
64018f31:	pop    ebx
64018f32:	call   0x64013ca6
64018f37:	add    ebp,0x49c
64018f3d:	leave  
64018f3e:	ret    
64018f3f:	push   0xc
64018f41:	push   0x64043e00
64018f46:	call   0x64016464
64018f4b:	call   0x640179ca
64018f50:	mov    edi,eax
64018f52:	mov    eax,ds:0x64052a78
64018f57:	test   DWORD PTR [edi+0x70],eax
64018f5a:	je     0x64018f79
64018f5c:	cmp    DWORD PTR [edi+0x6c],0x0
64018f60:	je     0x64018f79
64018f62:	mov    esi,DWORD PTR [edi+0x68]
64018f65:	test   esi,esi
64018f67:	jne    0x64018f71
64018f69:	push   0x20
64018f6b:	call   0x64017fb6
64018f70:	pop    ecx
64018f71:	mov    eax,esi
64018f73:	call   0x640164a9
64018f78:	ret    
64018f79:	push   0xd
64018f7b:	call   0x6401b42a
64018f80:	pop    ecx
64018f81:	and    DWORD PTR [ebp-0x4],0x0
64018f85:	mov    esi,DWORD PTR [edi+0x68]
64018f88:	mov    DWORD PTR [ebp-0x1c],esi
64018f8b:	cmp    esi,DWORD PTR ds:0x64052980
64018f91:	je     0x64018fc9
64018f93:	test   esi,esi
64018f95:	je     0x64018fb1
64018f97:	push   esi
64018f98:	call   DWORD PTR ds:0x6402c07c
64018f9e:	test   eax,eax
64018fa0:	jne    0x64018fb1
64018fa2:	cmp    esi,0x64052558
64018fa8:	je     0x64018fb1
64018faa:	push   esi
64018fab:	call   0x6401475f
64018fb0:	pop    ecx
64018fb1:	mov    eax,ds:0x64052980
64018fb6:	mov    DWORD PTR [edi+0x68],eax
64018fb9:	mov    esi,DWORD PTR ds:0x64052980
64018fbf:	mov    DWORD PTR [ebp-0x1c],esi
64018fc2:	push   esi
64018fc3:	call   DWORD PTR ds:0x6402c030
64018fc9:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64018fd0:	call   0x64018fda
64018fd5:	jmp    0x64018f65
64018fd7:	mov    esi,DWORD PTR [ebp-0x1c]
64018fda:	push   0xd
64018fdc:	call   0x6401b352
64018fe1:	pop    ecx
64018fe2:	ret    
64018fe3:	push   ebp
64018fe4:	mov    ebp,esp
64018fe6:	sub    esp,0x10
64018fe9:	push   ebx
64018fea:	xor    ebx,ebx
64018fec:	push   ebx
64018fed:	lea    ecx,[ebp-0x10]
64018ff0:	call   0x640142c5
64018ff5:	cmp    esi,0xfffffffe
64018ff8:	mov    DWORD PTR ds:0x64053eb8,ebx
64018ffe:	jne    0x6401901e
64019000:	mov    DWORD PTR ds:0x64053eb8,0x1
6401900a:	call   DWORD PTR ds:0x6402c124
64019010:	cmp    BYTE PTR [ebp-0x4],bl
64019013:	je     0x6401905a
64019015:	mov    ecx,DWORD PTR [ebp-0x8]
64019018:	and    DWORD PTR [ecx+0x70],0xfffffffd
6401901c:	jmp    0x6401905a
6401901e:	cmp    esi,0xfffffffd
64019021:	jne    0x64019035
64019023:	mov    DWORD PTR ds:0x64053eb8,0x1
6401902d:	call   DWORD PTR ds:0x6402c17c
64019033:	jmp    0x64019010
64019035:	cmp    esi,0xfffffffc
64019038:	jne    0x6401904c
6401903a:	mov    eax,DWORD PTR [ebp-0x10]
6401903d:	mov    eax,DWORD PTR [eax+0x4]
64019040:	mov    DWORD PTR ds:0x64053eb8,0x1
6401904a:	jmp    0x64019010
6401904c:	cmp    BYTE PTR [ebp-0x4],bl
6401904f:	je     0x64019058
64019051:	mov    eax,DWORD PTR [ebp-0x8]
64019054:	and    DWORD PTR [eax+0x70],0xfffffffd
64019058:	mov    eax,esi
6401905a:	pop    ebx
6401905b:	leave  
6401905c:	ret    
6401905d:	push   ebp
6401905e:	mov    ebp,esp
64019060:	sub    esp,0x20
64019063:	mov    eax,ds:0x640521ac
64019068:	xor    eax,ebp
6401906a:	mov    DWORD PTR [ebp-0x4],eax
6401906d:	push   ebx
6401906e:	mov    ebx,DWORD PTR [ebp+0xc]
64019071:	push   esi
64019072:	mov    esi,DWORD PTR [ebp+0x8]
64019075:	push   edi
64019076:	call   0x64018fe3
6401907b:	mov    edi,eax
6401907d:	xor    esi,esi
6401907f:	cmp    edi,esi
64019081:	mov    DWORD PTR [ebp+0x8],edi
64019084:	jne    0x64019094
64019086:	mov    eax,ebx
64019088:	call   0x64018d60
6401908d:	xor    eax,eax
6401908f:	jmp    0x64019227
64019094:	mov    DWORD PTR [ebp-0x1c],esi
64019097:	xor    eax,eax
64019099:	cmp    DWORD PTR [eax+0x64052988],edi
6401909f:	je     0x64019136
640190a5:	inc    DWORD PTR [ebp-0x1c]
640190a8:	add    eax,0x30
640190ab:	cmp    eax,0xf0
640190b0:	jb     0x64019099
640190b2:	cmp    edi,0xfde8
640190b8:	je     0x64019224
640190be:	cmp    edi,0xfde9
640190c4:	je     0x64019224
640190ca:	movzx  eax,di
640190cd:	push   eax
640190ce:	call   DWORD PTR ds:0x6402c120
640190d4:	test   eax,eax
640190d6:	je     0x64019224
640190dc:	lea    eax,[ebp-0x18]
640190df:	push   eax
640190e0:	push   edi
640190e1:	call   DWORD PTR ds:0x6402c1cc
640190e7:	test   eax,eax
640190e9:	je     0x64019218
640190ef:	push   0x101
640190f4:	lea    eax,[ebx+0x1c]
640190f7:	push   esi
640190f8:	push   eax
640190f9:	call   0x64015100
640190fe:	xor    edx,edx
64019100:	inc    edx
64019101:	add    esp,0xc
64019104:	cmp    DWORD PTR [ebp-0x18],edx
64019107:	mov    DWORD PTR [ebx+0x4],edi
6401910a:	mov    DWORD PTR [ebx+0xc],esi
6401910d:	jbe    0x6401920b
64019113:	cmp    BYTE PTR [ebp-0x12],0x0
64019117:	je     0x640191ec
6401911d:	lea    esi,[ebp-0x11]
64019120:	mov    cl,BYTE PTR [esi]
64019122:	test   cl,cl
64019124:	je     0x640191ec
6401912a:	movzx  eax,BYTE PTR [esi-0x1]
6401912e:	movzx  ecx,cl
64019131:	jmp    0x640191dc
64019136:	push   0x101
6401913b:	lea    eax,[ebx+0x1c]
6401913e:	push   esi
6401913f:	push   eax
64019140:	call   0x64015100
64019145:	mov    ecx,DWORD PTR [ebp-0x1c]
64019148:	add    esp,0xc
6401914b:	imul   ecx,ecx,0x30
6401914e:	mov    DWORD PTR [ebp-0x20],esi
64019151:	lea    esi,[ecx+0x64052998]
64019157:	mov    DWORD PTR [ebp-0x1c],esi
6401915a:	jmp    0x64019186
6401915c:	mov    al,BYTE PTR [esi+0x1]
6401915f:	test   al,al
64019161:	je     0x6401918b
64019163:	movzx  edi,BYTE PTR [esi]
64019166:	movzx  eax,al
64019169:	jmp    0x6401917d
6401916b:	mov    eax,DWORD PTR [ebp-0x20]
6401916e:	mov    al,BYTE PTR [eax+0x64052984]
64019174:	or     BYTE PTR [ebx+edi*1+0x1d],al
64019178:	movzx  eax,BYTE PTR [esi+0x1]
6401917c:	inc    edi
6401917d:	cmp    edi,eax
6401917f:	jbe    0x6401916b
64019181:	mov    edi,DWORD PTR [ebp+0x8]
64019184:	inc    esi
64019185:	inc    esi
64019186:	cmp    BYTE PTR [esi],0x0
64019189:	jne    0x6401915c
6401918b:	mov    esi,DWORD PTR [ebp-0x1c]
6401918e:	inc    DWORD PTR [ebp-0x20]
64019191:	add    esi,0x8
64019194:	cmp    DWORD PTR [ebp-0x20],0x4
64019198:	mov    DWORD PTR [ebp-0x1c],esi
6401919b:	jb     0x64019186
6401919d:	mov    eax,edi
6401919f:	mov    DWORD PTR [ebx+0x4],edi
640191a2:	mov    DWORD PTR [ebx+0x8],0x1
640191a9:	call   0x64018d31
640191ae:	push   0x6
640191b0:	mov    DWORD PTR [ebx+0xc],eax
640191b3:	lea    eax,[ebx+0x10]
640191b6:	lea    ecx,[ecx+0x6405298c]
640191bc:	pop    edx
640191bd:	mov    si,WORD PTR [ecx]
640191c0:	inc    ecx
640191c1:	mov    WORD PTR [eax],si
640191c4:	inc    ecx
640191c5:	inc    eax
640191c6:	inc    eax
640191c7:	dec    edx
640191c8:	jne    0x640191bd
640191ca:	mov    esi,ebx
640191cc:	call   0x64018db5
640191d1:	jmp    0x6401908d
640191d6:	or     BYTE PTR [ebx+eax*1+0x1d],0x4
640191db:	inc    eax
640191dc:	cmp    eax,ecx
640191de:	jbe    0x640191d6
640191e0:	inc    esi
640191e1:	inc    esi
640191e2:	cmp    BYTE PTR [esi-0x1],0x0
640191e6:	jne    0x64019120
640191ec:	lea    eax,[ebx+0x1e]
640191ef:	mov    ecx,0xfe
640191f4:	or     BYTE PTR [eax],0x8
640191f7:	inc    eax
640191f8:	dec    ecx
640191f9:	jne    0x640191f4
640191fb:	mov    eax,DWORD PTR [ebx+0x4]
640191fe:	call   0x64018d31
64019203:	mov    DWORD PTR [ebx+0xc],eax
64019206:	mov    DWORD PTR [ebx+0x8],edx
64019209:	jmp    0x6401920e
6401920b:	mov    DWORD PTR [ebx+0x8],esi
6401920e:	xor    eax,eax
64019210:	lea    edi,[ebx+0x10]
64019213:	stos   DWORD PTR es:[edi],eax
64019214:	stos   DWORD PTR es:[edi],eax
64019215:	stos   DWORD PTR es:[edi],eax
64019216:	jmp    0x640191ca
64019218:	cmp    DWORD PTR ds:0x64053eb8,esi
6401921e:	jne    0x64019086
64019224:	or     eax,0xffffffff
64019227:	mov    ecx,DWORD PTR [ebp-0x4]
6401922a:	pop    edi
6401922b:	pop    esi
6401922c:	xor    ecx,ebp
6401922e:	pop    ebx
6401922f:	call   0x64013ca6
64019234:	leave  
64019235:	ret    
64019236:	push   0x14
64019238:	push   0x64043e20
6401923d:	call   0x64016464
64019242:	or     DWORD PTR [ebp-0x20],0xffffffff
64019246:	call   0x640179ca
6401924b:	mov    edi,eax
6401924d:	mov    DWORD PTR [ebp-0x24],edi
64019250:	call   0x64018f3f
64019255:	mov    ebx,DWORD PTR [edi+0x68]
64019258:	mov    esi,DWORD PTR [ebp+0x8]
6401925b:	call   0x64018fe3
64019260:	mov    DWORD PTR [ebp+0x8],eax
64019263:	cmp    eax,DWORD PTR [ebx+0x4]
64019266:	je     0x640193c3
6401926c:	push   0x220
64019271:	call   0x6401627f
64019276:	pop    ecx
64019277:	mov    ebx,eax
64019279:	test   ebx,ebx
6401927b:	je     0x640193c7
64019281:	mov    ecx,0x88
64019286:	mov    esi,DWORD PTR [edi+0x68]
64019289:	mov    edi,ebx
6401928b:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
6401928d:	and    DWORD PTR [ebx],0x0
64019290:	push   ebx
64019291:	push   DWORD PTR [ebp+0x8]
64019294:	call   0x6401905d
64019299:	pop    ecx
6401929a:	pop    ecx
6401929b:	mov    DWORD PTR [ebp-0x20],eax
6401929e:	test   eax,eax
640192a0:	jne    0x640193a2
640192a6:	mov    esi,DWORD PTR [ebp-0x24]
640192a9:	push   DWORD PTR [esi+0x68]
640192ac:	call   DWORD PTR ds:0x6402c07c
640192b2:	test   eax,eax
640192b4:	jne    0x640192c7
640192b6:	mov    eax,DWORD PTR [esi+0x68]
640192b9:	cmp    eax,0x64052558
640192be:	je     0x640192c7
640192c0:	push   eax
640192c1:	call   0x6401475f
640192c6:	pop    ecx
640192c7:	mov    DWORD PTR [esi+0x68],ebx
640192ca:	push   ebx
640192cb:	mov    edi,DWORD PTR ds:0x6402c030
640192d1:	call   edi
640192d3:	test   BYTE PTR [esi+0x70],0x2
640192d7:	jne    0x640193c7
640192dd:	test   BYTE PTR ds:0x64052a78,0x1
640192e4:	jne    0x640193c7
640192ea:	push   0xd
640192ec:	call   0x6401b42a
640192f1:	pop    ecx
640192f2:	and    DWORD PTR [ebp-0x4],0x0
640192f6:	mov    eax,DWORD PTR [ebx+0x4]
640192f9:	mov    ds:0x64053ec8,eax
640192fe:	mov    eax,DWORD PTR [ebx+0x8]
64019301:	mov    ds:0x64053ecc,eax
64019306:	mov    eax,DWORD PTR [ebx+0xc]
64019309:	mov    ds:0x64053ed0,eax
6401930e:	xor    eax,eax
64019310:	mov    DWORD PTR [ebp-0x1c],eax
64019313:	cmp    eax,0x5
64019316:	jge    0x64019328
64019318:	mov    cx,WORD PTR [ebx+eax*2+0x10]
6401931d:	mov    WORD PTR [eax*2+0x64053ebc],cx
64019325:	inc    eax
64019326:	jmp    0x64019310
64019328:	xor    eax,eax
6401932a:	mov    DWORD PTR [ebp-0x1c],eax
6401932d:	cmp    eax,0x101
64019332:	jge    0x64019341
64019334:	mov    cl,BYTE PTR [eax+ebx*1+0x1c]
64019338:	mov    BYTE PTR [eax+0x64052778],cl
6401933e:	inc    eax
6401933f:	jmp    0x6401932a
64019341:	xor    eax,eax
64019343:	mov    DWORD PTR [ebp-0x1c],eax
64019346:	cmp    eax,0x100
6401934b:	jge    0x6401935d
6401934d:	mov    cl,BYTE PTR [eax+ebx*1+0x11d]
64019354:	mov    BYTE PTR [eax+0x64052880],cl
6401935a:	inc    eax
6401935b:	jmp    0x64019343
6401935d:	push   DWORD PTR ds:0x64052980
64019363:	call   DWORD PTR ds:0x6402c07c
64019369:	test   eax,eax
6401936b:	jne    0x64019380
6401936d:	mov    eax,ds:0x64052980
64019372:	cmp    eax,0x64052558
64019377:	je     0x64019380
64019379:	push   eax
6401937a:	call   0x6401475f
6401937f:	pop    ecx
64019380:	mov    DWORD PTR ds:0x64052980,ebx
64019386:	push   ebx
64019387:	call   edi
64019389:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64019390:	call   0x64019397
64019395:	jmp    0x640193c7
64019397:	push   0xd
64019399:	call   0x6401b352
6401939e:	pop    ecx
6401939f:	ret    
640193a0:	jmp    0x640193c7
640193a2:	cmp    eax,0xffffffff
640193a5:	jne    0x640193c7
640193a7:	cmp    ebx,0x64052558
640193ad:	je     0x640193b6
640193af:	push   ebx
640193b0:	call   0x6401475f
640193b5:	pop    ecx
640193b6:	call   0x64016663
640193bb:	mov    DWORD PTR [eax],0x16
640193c1:	jmp    0x640193c7
640193c3:	and    DWORD PTR [ebp-0x20],0x0
640193c7:	mov    eax,DWORD PTR [ebp-0x20]
640193ca:	call   0x640164a9
640193cf:	ret    
640193d0:	cmp    DWORD PTR ds:0x640557cc,0x0
640193d7:	jne    0x640193eb
640193d9:	push   0xfffffffd
640193db:	call   0x64019236
640193e0:	pop    ecx
640193e1:	mov    DWORD PTR ds:0x640557cc,0x1
640193eb:	xor    eax,eax
640193ed:	ret    
640193ee:	push   ebp
640193ef:	mov    ebp,esp
640193f1:	sub    esp,0x10
640193f4:	mov    eax,ds:0x640521ac
640193f9:	xor    eax,ebp
640193fb:	mov    DWORD PTR [ebp-0x4],eax
640193fe:	push   ebx
640193ff:	push   esi
64019400:	mov    esi,DWORD PTR ds:0x6402c1c8
64019406:	xor    ebx,ebx
64019408:	cmp    DWORD PTR ds:0x64053ef4,ebx
6401940e:	push   edi
6401940f:	mov    edi,ecx
64019411:	jne    0x64019449
64019413:	push   ebx
64019414:	push   ebx
64019415:	push   0x1
64019417:	push   0x64041d78
6401941c:	push   0x100
64019421:	push   ebx
64019422:	call   esi
64019424:	test   eax,eax
64019426:	je     0x64019434
64019428:	mov    DWORD PTR ds:0x64053ef4,0x1
64019432:	jmp    0x64019449
64019434:	call   DWORD PTR ds:0x6402c06c
6401943a:	cmp    eax,0x78
6401943d:	jne    0x64019449
6401943f:	mov    DWORD PTR ds:0x64053ef4,0x2
64019449:	cmp    DWORD PTR [ebp+0x14],ebx
6401944c:	jle    0x6401946b
6401944e:	mov    ecx,DWORD PTR [ebp+0x14]
64019451:	mov    eax,DWORD PTR [ebp+0x10]
64019454:	dec    ecx
64019455:	cmp    WORD PTR [eax],bx
64019458:	je     0x64019463
6401945a:	inc    eax
6401945b:	inc    eax
6401945c:	cmp    ecx,ebx
6401945e:	jne    0x64019454
64019460:	or     ecx,0xffffffff
64019463:	or     eax,0xffffffff
64019466:	sub    eax,ecx
64019468:	add    DWORD PTR [ebp+0x14],eax
6401946b:	mov    eax,ds:0x64053ef4
64019470:	cmp    eax,0x1
64019473:	jne    0x6401948e
64019475:	push   DWORD PTR [ebp+0x1c]
64019478:	push   DWORD PTR [ebp+0x18]
6401947b:	push   DWORD PTR [ebp+0x14]
6401947e:	push   DWORD PTR [ebp+0x10]
64019481:	push   DWORD PTR [ebp+0xc]
64019484:	push   DWORD PTR [ebp+0x8]
64019487:	call   esi
64019489:	jmp    0x6401963d
6401948e:	cmp    eax,0x2
64019491:	je     0x64019497
64019493:	cmp    eax,ebx
64019495:	jne    0x640194e9
64019497:	cmp    DWORD PTR [ebp+0x8],ebx
6401949a:	mov    DWORD PTR [ebp-0xc],ebx
6401949d:	jne    0x640194a7
6401949f:	mov    eax,DWORD PTR [edi]
640194a1:	mov    eax,DWORD PTR [eax+0x14]
640194a4:	mov    DWORD PTR [ebp+0x8],eax
640194a7:	cmp    DWORD PTR [ebp+0x20],ebx
640194aa:	jne    0x640194b4
640194ac:	mov    eax,DWORD PTR [edi]
640194ae:	mov    eax,DWORD PTR [eax+0x4]
640194b1:	mov    DWORD PTR [ebp+0x20],eax
640194b4:	push   DWORD PTR [ebp+0x8]
640194b7:	call   0x6401e2e0
640194bc:	cmp    DWORD PTR [ebp+0x20],eax
640194bf:	pop    ecx
640194c0:	je     0x640194ca
640194c2:	cmp    eax,0xffffffff
640194c5:	je     0x640194ca
640194c7:	mov    DWORD PTR [ebp+0x20],eax
640194ca:	mov    esi,DWORD PTR ds:0x6402c014
640194d0:	push   ebx
640194d1:	push   ebx
640194d2:	push   ebx
640194d3:	push   ebx
640194d4:	push   DWORD PTR [ebp+0x14]
640194d7:	push   DWORD PTR [ebp+0x10]
640194da:	push   ebx
640194db:	push   DWORD PTR [ebp+0x20]
640194de:	call   esi
640194e0:	mov    edi,eax
640194e2:	cmp    edi,ebx
640194e4:	mov    DWORD PTR [ebp-0x10],edi
640194e7:	jne    0x640194f0
640194e9:	xor    eax,eax
640194eb:	jmp    0x6401963d
640194f0:	jle    0x64019534
640194f2:	push   0xffffffe0
640194f4:	xor    edx,edx
640194f6:	pop    eax
640194f7:	div    edi
640194f9:	cmp    eax,0x1
640194fc:	jb     0x64019534
640194fe:	lea    eax,[edi+0x8]
64019501:	cmp    eax,0x400
64019506:	ja     0x6401951b
64019508:	call   0x64013cc0
6401950d:	mov    eax,esp
6401950f:	cmp    eax,ebx
64019511:	je     0x6401952f
64019513:	mov    DWORD PTR [eax],0xcccc
64019519:	jmp    0x6401952c
6401951b:	push   eax
6401951c:	call   0x6401485e
64019521:	cmp    eax,ebx
64019523:	pop    ecx
64019524:	je     0x6401952f
64019526:	mov    DWORD PTR [eax],0xdddd
6401952c:	add    eax,0x8
6401952f:	mov    DWORD PTR [ebp-0x8],eax
64019532:	jmp    0x64019537
64019534:	mov    DWORD PTR [ebp-0x8],ebx
64019537:	cmp    DWORD PTR [ebp-0x8],ebx
6401953a:	je     0x640194e9
6401953c:	push   ebx
6401953d:	push   ebx
6401953e:	push   edi
6401953f:	push   DWORD PTR [ebp-0x8]
64019542:	push   DWORD PTR [ebp+0x14]
64019545:	push   DWORD PTR [ebp+0x10]
64019548:	push   ebx
64019549:	push   DWORD PTR [ebp+0x20]
6401954c:	call   esi
6401954e:	test   eax,eax
64019550:	je     0x64019631
64019556:	push   ebx
64019557:	push   ebx
64019558:	push   edi
64019559:	push   DWORD PTR [ebp-0x8]
6401955c:	mov    edi,DWORD PTR ds:0x6402c1c4
64019562:	push   DWORD PTR [ebp+0xc]
64019565:	push   DWORD PTR [ebp+0x8]
64019568:	call   edi
6401956a:	mov    esi,eax
6401956c:	cmp    esi,ebx
6401956e:	je     0x64019631
64019574:	jle    0x640195b5
64019576:	push   0xffffffe0
64019578:	xor    edx,edx
6401957a:	pop    eax
6401957b:	div    esi
6401957d:	cmp    eax,0x1
64019580:	jb     0x640195b5
64019582:	lea    eax,[esi+0x8]
64019585:	cmp    eax,0x400
6401958a:	ja     0x6401959f
6401958c:	call   0x64013cc0
64019591:	mov    eax,esp
64019593:	cmp    eax,ebx
64019595:	je     0x640195b3
64019597:	mov    DWORD PTR [eax],0xcccc
6401959d:	jmp    0x640195b0
6401959f:	push   eax
640195a0:	call   0x6401485e
640195a5:	cmp    eax,ebx
640195a7:	pop    ecx
640195a8:	je     0x640195b3
640195aa:	mov    DWORD PTR [eax],0xdddd
640195b0:	add    eax,0x8
640195b3:	mov    ebx,eax
640195b5:	test   ebx,ebx
640195b7:	je     0x64019631
640195b9:	push   esi
640195ba:	push   ebx
640195bb:	push   DWORD PTR [ebp-0x10]
640195be:	push   DWORD PTR [ebp-0x8]
640195c1:	push   DWORD PTR [ebp+0xc]
640195c4:	push   DWORD PTR [ebp+0x8]
640195c7:	call   edi
640195c9:	test   eax,eax
640195cb:	je     0x6401962a
640195cd:	test   WORD PTR [ebp+0xc],0x400
640195d3:	je     0x64019609
640195d5:	mov    eax,DWORD PTR [ebp+0x1c]
640195d8:	xor    edi,edi
640195da:	cmp    eax,edi
640195dc:	mov    DWORD PTR [ebp-0xc],esi
640195df:	je     0x6401962a
640195e1:	cmp    eax,esi
640195e3:	jg     0x640195e8
640195e5:	lea    esi,[eax-0x1]
640195e8:	push   esi
640195e9:	push   ebx
640195ea:	push   eax
640195eb:	push   DWORD PTR [ebp+0x18]
640195ee:	call   0x6401dfe6
640195f3:	add    esp,0x10
640195f6:	test   eax,eax
640195f8:	je     0x6401962a
640195fa:	push   edi
640195fb:	push   edi
640195fc:	push   edi
640195fd:	push   edi
640195fe:	push   edi
640195ff:	call   0x64013cf6
64019604:	add    esp,0x14
64019607:	jmp    0x6401962a
64019609:	xor    eax,eax
6401960b:	cmp    DWORD PTR [ebp+0x1c],eax
6401960e:	jne    0x64019614
64019610:	push   eax
64019611:	push   eax
64019612:	jmp    0x6401961a
64019614:	push   DWORD PTR [ebp+0x1c]
64019617:	push   DWORD PTR [ebp+0x18]
6401961a:	push   esi
6401961b:	push   ebx
6401961c:	push   0x1
6401961e:	push   DWORD PTR [ebp+0x20]
64019621:	call   DWORD PTR ds:0x6402c02c
64019627:	mov    DWORD PTR [ebp-0xc],eax
6401962a:	push   ebx
6401962b:	call   0x640142aa
64019630:	pop    ecx
64019631:	push   DWORD PTR [ebp-0x8]
64019634:	call   0x640142aa
64019639:	mov    eax,DWORD PTR [ebp-0xc]
6401963c:	pop    ecx
6401963d:	lea    esp,[ebp-0x1c]
64019640:	pop    edi
64019641:	pop    esi
64019642:	pop    ebx
64019643:	mov    ecx,DWORD PTR [ebp-0x4]
64019646:	xor    ecx,ebp
64019648:	call   0x64013ca6
6401964d:	leave  
6401964e:	ret    
6401964f:	push   ebp
64019650:	mov    ebp,esp
64019652:	sub    esp,0x10
64019655:	push   DWORD PTR [ebp+0x8]
64019658:	lea    ecx,[ebp-0x10]
6401965b:	call   0x640142c5
64019660:	push   DWORD PTR [ebp+0x24]
64019663:	lea    ecx,[ebp-0x10]
64019666:	push   DWORD PTR [ebp+0x20]
64019669:	push   DWORD PTR [ebp+0x1c]
6401966c:	push   DWORD PTR [ebp+0x18]
6401966f:	push   DWORD PTR [ebp+0x14]
64019672:	push   DWORD PTR [ebp+0x10]
64019675:	push   DWORD PTR [ebp+0xc]
64019678:	call   0x640193ee
6401967d:	add    esp,0x1c
64019680:	cmp    BYTE PTR [ebp-0x4],0x0
64019684:	je     0x6401968d
64019686:	mov    ecx,DWORD PTR [ebp-0x8]
64019689:	and    DWORD PTR [ecx+0x70],0xfffffffd
6401968d:	leave  
6401968e:	ret    
6401968f:	xor    eax,eax
64019691:	cmp    DWORD PTR [esp+0x8],eax
64019695:	jbe    0x640196aa
64019697:	mov    ecx,DWORD PTR [esp+0x4]
6401969b:	cmp    WORD PTR [ecx],0x0
6401969f:	je     0x640196aa
640196a1:	inc    eax
640196a2:	inc    ecx
640196a3:	inc    ecx
640196a4:	cmp    eax,DWORD PTR [esp+0x8]
640196a8:	jb     0x6401969b
640196aa:	ret    
640196ab:	push   ebp
640196ac:	mov    ebp,esp
640196ae:	push   ecx
640196af:	push   ecx
640196b0:	mov    eax,DWORD PTR [ebp+0xc]
640196b3:	push   esi
640196b4:	mov    esi,DWORD PTR [ebp+0x8]
640196b7:	mov    DWORD PTR [ebp-0x8],eax
640196ba:	mov    eax,DWORD PTR [ebp+0x10]
640196bd:	push   edi
640196be:	push   esi
640196bf:	mov    DWORD PTR [ebp-0x4],eax
640196c2:	call   0x640198c8
640196c7:	or     edi,0xffffffff
640196ca:	cmp    eax,edi
640196cc:	pop    ecx
640196cd:	jne    0x640196e0
640196cf:	call   0x64016663
640196d4:	mov    DWORD PTR [eax],0x9
640196da:	mov    eax,edi
640196dc:	mov    edx,edi
640196de:	jmp    0x6401972a
640196e0:	push   DWORD PTR [ebp+0x14]
640196e3:	lea    ecx,[ebp-0x4]
640196e6:	push   ecx
640196e7:	push   DWORD PTR [ebp-0x8]
640196ea:	push   eax
640196eb:	call   DWORD PTR ds:0x6402c1bc
640196f1:	cmp    eax,edi
640196f3:	mov    DWORD PTR [ebp-0x8],eax
640196f6:	jne    0x6401970b
640196f8:	call   DWORD PTR ds:0x6402c06c
640196fe:	test   eax,eax
64019700:	je     0x6401970b
64019702:	push   eax
64019703:	call   0x64016689
64019708:	pop    ecx
64019709:	jmp    0x640196da
6401970b:	mov    eax,esi
6401970d:	sar    eax,0x5
64019710:	mov    eax,DWORD PTR [eax*4+0x640556c0]
64019717:	and    esi,0x1f
6401971a:	shl    esi,0x6
6401971d:	lea    eax,[eax+esi*1+0x4]
64019721:	and    BYTE PTR [eax],0xfd
64019724:	mov    eax,DWORD PTR [ebp-0x8]
64019727:	mov    edx,DWORD PTR [ebp-0x4]
6401972a:	pop    edi
6401972b:	pop    esi
6401972c:	leave  
6401972d:	ret    
6401972e:	push   0x14
64019730:	push   0x64043e40
64019735:	call   0x64016464
6401973a:	or     esi,0xffffffff
6401973d:	mov    DWORD PTR [ebp-0x24],esi
64019740:	mov    DWORD PTR [ebp-0x20],esi
64019743:	mov    eax,DWORD PTR [ebp+0x8]
64019746:	cmp    eax,0xfffffffe
64019749:	jne    0x64019767
6401974b:	call   0x64016676
64019750:	and    DWORD PTR [eax],0x0
64019753:	call   0x64016663
64019758:	mov    DWORD PTR [eax],0x9
6401975e:	mov    eax,esi
64019760:	mov    edx,esi
64019762:	jmp    0x64019837
64019767:	xor    edi,edi
64019769:	cmp    eax,edi
6401976b:	jl     0x64019775
6401976d:	cmp    eax,DWORD PTR ds:0x640556a8
64019773:	jb     0x64019796
64019775:	call   0x64016676
6401977a:	mov    DWORD PTR [eax],edi
6401977c:	call   0x64016663
64019781:	mov    DWORD PTR [eax],0x9
64019787:	push   edi
64019788:	push   edi
64019789:	push   edi
6401978a:	push   edi
6401978b:	push   edi
6401978c:	call   0x64013df2
64019791:	add    esp,0x14
64019794:	jmp    0x6401975e
64019796:	mov    ecx,eax
64019798:	sar    ecx,0x5
6401979b:	lea    ebx,[ecx*4+0x640556c0]
640197a2:	mov    esi,eax
640197a4:	and    esi,0x1f
640197a7:	shl    esi,0x6
640197aa:	mov    ecx,DWORD PTR [ebx]
640197ac:	movzx  ecx,BYTE PTR [ecx+esi*1+0x4]
640197b1:	and    ecx,0x1
640197b4:	jne    0x640197dc
640197b6:	call   0x64016676
640197bb:	mov    DWORD PTR [eax],edi
640197bd:	call   0x64016663
640197c2:	mov    DWORD PTR [eax],0x9
640197c8:	push   edi
640197c9:	push   edi
640197ca:	push   edi
640197cb:	push   edi
640197cc:	push   edi
640197cd:	call   0x64013df2
640197d2:	add    esp,0x14
640197d5:	or     edx,0xffffffff
640197d8:	mov    eax,edx
640197da:	jmp    0x64019837
640197dc:	push   eax
640197dd:	call   0x64019939
640197e2:	pop    ecx
640197e3:	mov    DWORD PTR [ebp-0x4],edi
640197e6:	mov    eax,DWORD PTR [ebx]
640197e8:	test   BYTE PTR [eax+esi*1+0x4],0x1
640197ed:	je     0x6401980b
640197ef:	push   DWORD PTR [ebp+0x14]
640197f2:	push   DWORD PTR [ebp+0x10]
640197f5:	push   DWORD PTR [ebp+0xc]
640197f8:	push   DWORD PTR [ebp+0x8]
640197fb:	call   0x640196ab
64019800:	add    esp,0x10
64019803:	mov    DWORD PTR [ebp-0x24],eax
64019806:	mov    DWORD PTR [ebp-0x20],edx
64019809:	jmp    0x64019825
6401980b:	call   0x64016663
64019810:	mov    DWORD PTR [eax],0x9
64019816:	call   0x64016676
6401981b:	mov    DWORD PTR [eax],edi
6401981d:	or     DWORD PTR [ebp-0x24],0xffffffff
64019821:	or     DWORD PTR [ebp-0x20],0xffffffff
64019825:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401982c:	call   0x6401983d
64019831:	mov    eax,DWORD PTR [ebp-0x24]
64019834:	mov    edx,DWORD PTR [ebp-0x20]
64019837:	call   0x640164a9
6401983c:	ret    
6401983d:	push   DWORD PTR [ebp+0x8]
64019840:	call   0x640199d9
64019845:	pop    ecx
64019846:	ret    
64019847:	mov    ecx,DWORD PTR [esp+0x4]
6401984b:	push   ebx
6401984c:	xor    ebx,ebx
6401984e:	cmp    ecx,ebx
64019850:	push   esi
64019851:	push   edi
64019852:	jl     0x640198af
64019854:	cmp    ecx,DWORD PTR ds:0x640556a8
6401985a:	jae    0x640198af
6401985c:	mov    eax,ecx
6401985e:	sar    eax,0x5
64019861:	mov    esi,ecx
64019863:	lea    edi,[eax*4+0x640556c0]
6401986a:	mov    eax,DWORD PTR [edi]
6401986c:	and    esi,0x1f
6401986f:	shl    esi,0x6
64019872:	add    eax,esi
64019874:	test   BYTE PTR [eax+0x4],0x1
64019878:	je     0x640198af
6401987a:	cmp    DWORD PTR [eax],0xffffffff
6401987d:	je     0x640198af
6401987f:	cmp    DWORD PTR ds:0x64053a04,0x1
64019886:	jne    0x640198a5
64019888:	sub    ecx,ebx
6401988a:	je     0x6401989c
6401988c:	dec    ecx
6401988d:	je     0x64019897
6401988f:	dec    ecx
64019890:	jne    0x640198a5
64019892:	push   ebx
64019893:	push   0xfffffff4
64019895:	jmp    0x6401989f
64019897:	push   ebx
64019898:	push   0xfffffff5
6401989a:	jmp    0x6401989f
6401989c:	push   ebx
6401989d:	push   0xfffffff6
6401989f:	call   DWORD PTR ds:0x6402c11c
640198a5:	mov    eax,DWORD PTR [edi]
640198a7:	or     DWORD PTR [esi+eax*1],0xffffffff
640198ab:	xor    eax,eax
640198ad:	jmp    0x640198c4
640198af:	call   0x64016663
640198b4:	mov    DWORD PTR [eax],0x9
640198ba:	call   0x64016676
640198bf:	mov    DWORD PTR [eax],ebx
640198c1:	or     eax,0xffffffff
640198c4:	pop    edi
640198c5:	pop    esi
640198c6:	pop    ebx
640198c7:	ret    
640198c8:	mov    eax,DWORD PTR [esp+0x4]
640198cc:	cmp    eax,0xfffffffe
640198cf:	jne    0x640198e8
640198d1:	call   0x64016676
640198d6:	and    DWORD PTR [eax],0x0
640198d9:	call   0x64016663
640198de:	mov    DWORD PTR [eax],0x9
640198e4:	or     eax,0xffffffff
640198e7:	ret    
640198e8:	push   esi
640198e9:	xor    esi,esi
640198eb:	cmp    eax,esi
640198ed:	jl     0x64019911
640198ef:	cmp    eax,DWORD PTR ds:0x640556a8
640198f5:	jae    0x64019911
640198f7:	mov    ecx,eax
640198f9:	and    eax,0x1f
640198fc:	sar    ecx,0x5
640198ff:	mov    ecx,DWORD PTR [ecx*4+0x640556c0]
64019906:	shl    eax,0x6
64019909:	add    eax,ecx
6401990b:	test   BYTE PTR [eax+0x4],0x1
6401990f:	jne    0x64019935
64019911:	call   0x64016676
64019916:	mov    DWORD PTR [eax],esi
64019918:	call   0x64016663
6401991d:	push   esi
6401991e:	push   esi
6401991f:	push   esi
64019920:	push   esi
64019921:	push   esi
64019922:	mov    DWORD PTR [eax],0x9
64019928:	call   0x64013df2
6401992d:	add    esp,0x14
64019930:	or     eax,0xffffffff
64019933:	pop    esi
64019934:	ret    
64019935:	mov    eax,DWORD PTR [eax]
64019937:	pop    esi
64019938:	ret    
64019939:	push   0xc
6401993b:	push   0x64043e60
64019940:	call   0x64016464
64019945:	mov    edi,DWORD PTR [ebp+0x8]
64019948:	mov    eax,edi
6401994a:	sar    eax,0x5
6401994d:	mov    esi,edi
6401994f:	and    esi,0x1f
64019952:	shl    esi,0x6
64019955:	add    esi,DWORD PTR [eax*4+0x640556c0]
6401995c:	mov    DWORD PTR [ebp-0x1c],0x1
64019963:	xor    ebx,ebx
64019965:	cmp    DWORD PTR [esi+0x8],ebx
64019968:	jne    0x640199a0
6401996a:	push   0xa
6401996c:	call   0x6401b42a
64019971:	pop    ecx
64019972:	mov    DWORD PTR [ebp-0x4],ebx
64019975:	cmp    DWORD PTR [esi+0x8],ebx
64019978:	jne    0x64019994
6401997a:	push   0xfa0
6401997f:	lea    eax,[esi+0xc]
64019982:	push   eax
64019983:	call   0x6401e86a
64019988:	pop    ecx
64019989:	pop    ecx
6401998a:	test   eax,eax
6401998c:	jne    0x64019991
6401998e:	mov    DWORD PTR [ebp-0x1c],ebx
64019991:	inc    DWORD PTR [esi+0x8]
64019994:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401999b:	call   0x640199d0
640199a0:	cmp    DWORD PTR [ebp-0x1c],ebx
640199a3:	je     0x640199c2
640199a5:	mov    eax,edi
640199a7:	sar    eax,0x5
640199aa:	and    edi,0x1f
640199ad:	shl    edi,0x6
640199b0:	mov    eax,DWORD PTR [eax*4+0x640556c0]
640199b7:	lea    eax,[eax+edi*1+0xc]
640199bb:	push   eax
640199bc:	call   DWORD PTR ds:0x6402c174
640199c2:	mov    eax,DWORD PTR [ebp-0x1c]
640199c5:	call   0x640164a9
640199ca:	ret    
640199cb:	xor    ebx,ebx
640199cd:	mov    edi,DWORD PTR [ebp+0x8]
640199d0:	push   0xa
640199d2:	call   0x6401b352
640199d7:	pop    ecx
640199d8:	ret    
640199d9:	mov    eax,DWORD PTR [esp+0x4]
640199dd:	mov    ecx,eax
640199df:	and    eax,0x1f
640199e2:	sar    ecx,0x5
640199e5:	mov    ecx,DWORD PTR [ecx*4+0x640556c0]
640199ec:	shl    eax,0x6
640199ef:	lea    eax,[ecx+eax*1+0xc]
640199f3:	push   eax
640199f4:	call   DWORD PTR ds:0x6402c178
640199fa:	ret    
640199fb:	int3   
640199fc:	int3   
640199fd:	int3   
640199fe:	int3   
640199ff:	int3   
64019a00:	push   esi
64019a01:	mov    eax,DWORD PTR [esp+0x14]
64019a05:	or     eax,eax
64019a07:	jne    0x64019a31
64019a09:	mov    ecx,DWORD PTR [esp+0x10]
64019a0d:	mov    eax,DWORD PTR [esp+0xc]
64019a11:	xor    edx,edx
64019a13:	div    ecx
64019a15:	mov    ebx,eax
64019a17:	mov    eax,DWORD PTR [esp+0x8]
64019a1b:	div    ecx
64019a1d:	mov    esi,eax
64019a1f:	mov    eax,ebx
64019a21:	mul    DWORD PTR [esp+0x10]
64019a25:	mov    ecx,eax
64019a27:	mov    eax,esi
64019a29:	mul    DWORD PTR [esp+0x10]
64019a2d:	add    edx,ecx
64019a2f:	jmp    0x64019a78
64019a31:	mov    ecx,eax
64019a33:	mov    ebx,DWORD PTR [esp+0x10]
64019a37:	mov    edx,DWORD PTR [esp+0xc]
64019a3b:	mov    eax,DWORD PTR [esp+0x8]
64019a3f:	shr    ecx,1
64019a41:	rcr    ebx,1
64019a43:	shr    edx,1
64019a45:	rcr    eax,1
64019a47:	or     ecx,ecx
64019a49:	jne    0x64019a3f
64019a4b:	div    ebx
64019a4d:	mov    esi,eax
64019a4f:	mul    DWORD PTR [esp+0x14]
64019a53:	mov    ecx,eax
64019a55:	mov    eax,DWORD PTR [esp+0x10]
64019a59:	mul    esi
64019a5b:	add    edx,ecx
64019a5d:	jb     0x64019a6d
64019a5f:	cmp    edx,DWORD PTR [esp+0xc]
64019a63:	ja     0x64019a6d
64019a65:	jb     0x64019a76
64019a67:	cmp    eax,DWORD PTR [esp+0x8]
64019a6b:	jbe    0x64019a76
64019a6d:	dec    esi
64019a6e:	sub    eax,DWORD PTR [esp+0x10]
64019a72:	sbb    edx,DWORD PTR [esp+0x14]
64019a76:	xor    ebx,ebx
64019a78:	sub    eax,DWORD PTR [esp+0x8]
64019a7c:	sbb    edx,DWORD PTR [esp+0xc]
64019a80:	neg    edx
64019a82:	neg    eax
64019a84:	sbb    edx,0x0
64019a87:	mov    ecx,edx
64019a89:	mov    edx,ebx
64019a8b:	mov    ebx,ecx
64019a8d:	mov    ecx,eax
64019a8f:	mov    eax,esi
64019a91:	pop    esi
64019a92:	ret    0x10
64019a95:	mov    eax,0x64052b70
64019a9a:	ret    
64019a9b:	mov    eax,ds:0x640556a0
64019aa0:	test   eax,eax
64019aa2:	push   esi
64019aa3:	push   0x14
64019aa5:	pop    esi
64019aa6:	jne    0x64019aaf
64019aa8:	mov    eax,0x200
64019aad:	jmp    0x64019ab5
64019aaf:	cmp    eax,esi
64019ab1:	jge    0x64019aba
64019ab3:	mov    eax,esi
64019ab5:	mov    ds:0x640556a0,eax
64019aba:	push   0x4
64019abc:	push   eax
64019abd:	call   0x640162bf
64019ac2:	test   eax,eax
64019ac4:	pop    ecx
64019ac5:	pop    ecx
64019ac6:	mov    ds:0x64054690,eax
64019acb:	jne    0x64019aeb
64019acd:	push   0x4
64019acf:	push   esi
64019ad0:	mov    DWORD PTR ds:0x640556a0,esi
64019ad6:	call   0x640162bf
64019adb:	test   eax,eax
64019add:	pop    ecx
64019ade:	pop    ecx
64019adf:	mov    ds:0x64054690,eax
64019ae4:	jne    0x64019aeb
64019ae6:	push   0x1a
64019ae8:	pop    eax
64019ae9:	pop    esi
64019aea:	ret    
64019aeb:	xor    edx,edx
64019aed:	mov    ecx,0x64052b70
64019af2:	jmp    0x64019af9
64019af4:	mov    eax,ds:0x64054690
64019af9:	mov    DWORD PTR [edx+eax*1],ecx
64019afc:	add    ecx,0x20
64019aff:	add    edx,0x4
64019b02:	cmp    ecx,0x64052df0
64019b08:	jl     0x64019af4
64019b0a:	push   0xfffffffe
64019b0c:	pop    esi
64019b0d:	xor    edx,edx
64019b0f:	mov    ecx,0x64052b80
64019b14:	push   edi
64019b15:	mov    eax,edx
64019b17:	sar    eax,0x5
64019b1a:	mov    eax,DWORD PTR [eax*4+0x640556c0]
64019b21:	mov    edi,edx
64019b23:	and    edi,0x1f
64019b26:	shl    edi,0x6
64019b29:	mov    eax,DWORD PTR [edi+eax*1]
64019b2c:	cmp    eax,0xffffffff
64019b2f:	je     0x64019b39
64019b31:	cmp    eax,esi
64019b33:	je     0x64019b39
64019b35:	test   eax,eax
64019b37:	jne    0x64019b3b
64019b39:	mov    DWORD PTR [ecx],esi
64019b3b:	add    ecx,0x20
64019b3e:	inc    edx
64019b3f:	cmp    ecx,0x64052be0
64019b45:	jl     0x64019b15
64019b47:	pop    edi
64019b48:	xor    eax,eax
64019b4a:	pop    esi
64019b4b:	ret    
64019b4c:	call   0x64019f62
64019b51:	cmp    BYTE PTR ds:0x64053d98,0x0
64019b58:	je     0x64019b5f
64019b5a:	call   0x6401e92f
64019b5f:	push   DWORD PTR ds:0x64054690
64019b65:	call   0x6401475f
64019b6a:	pop    ecx
64019b6b:	ret    
64019b6c:	push   esi
64019b6d:	mov    esi,DWORD PTR [esp+0x8]
64019b71:	mov    eax,0x64052b70
64019b76:	cmp    esi,eax
64019b78:	jb     0x64019b9c
64019b7a:	cmp    esi,0x64052dd0
64019b80:	ja     0x64019b9c
64019b82:	mov    ecx,esi
64019b84:	sub    ecx,eax
64019b86:	sar    ecx,0x5
64019b89:	add    ecx,0x10
64019b8c:	push   ecx
64019b8d:	call   0x6401b42a
64019b92:	or     DWORD PTR [esi+0xc],0x8000
64019b99:	pop    ecx
64019b9a:	pop    esi
64019b9b:	ret    
64019b9c:	add    esi,0x20
64019b9f:	push   esi
64019ba0:	call   DWORD PTR ds:0x6402c174
64019ba6:	pop    esi
64019ba7:	ret    
64019ba8:	mov    eax,DWORD PTR [esp+0x4]
64019bac:	cmp    eax,0x14
64019baf:	jge    0x64019bc7
64019bb1:	add    eax,0x10
64019bb4:	push   eax
64019bb5:	call   0x6401b42a
64019bba:	mov    eax,DWORD PTR [esp+0xc]
64019bbe:	or     DWORD PTR [eax+0xc],0x8000
64019bc5:	pop    ecx
64019bc6:	ret    
64019bc7:	mov    eax,DWORD PTR [esp+0x8]
64019bcb:	add    eax,0x20
64019bce:	push   eax
64019bcf:	call   DWORD PTR ds:0x6402c174
64019bd5:	ret    
64019bd6:	mov    eax,DWORD PTR [esp+0x4]
64019bda:	mov    ecx,0x64052b70
64019bdf:	cmp    eax,ecx
64019be1:	jb     0x64019c01
64019be3:	cmp    eax,0x64052dd0
64019be8:	ja     0x64019c01
64019bea:	and    DWORD PTR [eax+0xc],0xffff7fff
64019bf1:	sub    eax,ecx
64019bf3:	sar    eax,0x5
64019bf6:	add    eax,0x10
64019bf9:	push   eax
64019bfa:	call   0x6401b352
64019bff:	pop    ecx
64019c00:	ret    
64019c01:	add    eax,0x20
64019c04:	push   eax
64019c05:	call   DWORD PTR ds:0x6402c178
64019c0b:	ret    
64019c0c:	mov    ecx,DWORD PTR [esp+0x4]
64019c10:	cmp    ecx,0x14
64019c13:	mov    eax,DWORD PTR [esp+0x8]
64019c17:	jge    0x64019c2b
64019c19:	and    DWORD PTR [eax+0xc],0xffff7fff
64019c20:	add    ecx,0x10
64019c23:	push   ecx
64019c24:	call   0x6401b352
64019c29:	pop    ecx
64019c2a:	ret    
64019c2b:	add    eax,0x20
64019c2e:	push   eax
64019c2f:	call   DWORD PTR ds:0x6402c178
64019c35:	ret    
64019c36:	int3   
64019c37:	int3   
64019c38:	push   ebx
64019c39:	push   esi
64019c3a:	push   edi
64019c3b:	mov    edx,DWORD PTR [esp+0x10]
64019c3f:	mov    eax,DWORD PTR [esp+0x14]
64019c43:	mov    ecx,DWORD PTR [esp+0x18]
64019c47:	push   ebp
64019c48:	push   edx
64019c49:	push   eax
64019c4a:	push   ecx
64019c4b:	push   ecx
64019c4c:	push   0x64019cc8
64019c51:	push   DWORD PTR fs:0x0
64019c58:	mov    eax,ds:0x640521ac
64019c5d:	xor    eax,esp
64019c5f:	mov    DWORD PTR [esp+0x8],eax
64019c63:	mov    DWORD PTR fs:0x0,esp
64019c6a:	mov    eax,DWORD PTR [esp+0x30]
64019c6e:	mov    ebx,DWORD PTR [eax+0x8]
64019c71:	mov    ecx,DWORD PTR [esp+0x2c]
64019c75:	xor    ebx,DWORD PTR [ecx]
64019c77:	mov    esi,DWORD PTR [eax+0xc]
64019c7a:	cmp    esi,0xfffffffe
64019c7d:	je     0x64019cba
64019c7f:	mov    edx,DWORD PTR [esp+0x34]
64019c83:	cmp    edx,0xfffffffe
64019c86:	je     0x64019c8c
64019c88:	cmp    esi,edx
64019c8a:	jbe    0x64019cba
64019c8c:	lea    esi,[esi+esi*2]
64019c8f:	lea    ebx,[ebx+esi*4+0x10]
64019c93:	mov    ecx,DWORD PTR [ebx]
64019c95:	mov    DWORD PTR [eax+0xc],ecx
64019c98:	cmp    DWORD PTR [ebx+0x4],0x0
64019c9c:	jne    0x64019c6a
64019c9e:	push   0x101
64019ca3:	mov    eax,DWORD PTR [ebx+0x8]
64019ca6:	call   0x6401e805
64019cab:	mov    ecx,0x1
64019cb0:	mov    eax,DWORD PTR [ebx+0x8]
64019cb3:	call   0x6401e824
64019cb8:	jmp    0x64019c6a
64019cba:	pop    DWORD PTR fs:0x0
64019cc1:	add    esp,0x18
64019cc4:	pop    edi
64019cc5:	pop    esi
64019cc6:	pop    ebx
64019cc7:	ret    
64019cc8:	mov    ecx,DWORD PTR [esp+0x4]
64019ccc:	test   DWORD PTR [ecx+0x4],0x6
64019cd3:	mov    eax,0x1
64019cd8:	je     0x64019d0d
64019cda:	mov    eax,DWORD PTR [esp+0x8]
64019cde:	mov    ecx,DWORD PTR [eax+0x8]
64019ce1:	xor    ecx,eax
64019ce3:	call   0x64013ca6
64019ce8:	push   ebp
64019ce9:	mov    ebp,DWORD PTR [eax+0x18]
64019cec:	push   DWORD PTR [eax+0xc]
64019cef:	push   DWORD PTR [eax+0x10]
64019cf2:	push   DWORD PTR [eax+0x14]
64019cf5:	call   0x64019c38
64019cfa:	add    esp,0xc
64019cfd:	pop    ebp
64019cfe:	mov    eax,DWORD PTR [esp+0x8]
64019d02:	mov    edx,DWORD PTR [esp+0x10]
64019d06:	mov    DWORD PTR [edx],eax
64019d08:	mov    eax,0x3
64019d0d:	ret    
64019d0e:	push   ebp
64019d0f:	mov    ecx,DWORD PTR [esp+0x8]
64019d13:	mov    ebp,DWORD PTR [ecx]
64019d15:	push   DWORD PTR [ecx+0x1c]
64019d18:	push   DWORD PTR [ecx+0x18]
64019d1b:	push   DWORD PTR [ecx+0x28]
64019d1e:	call   0x64019c38
64019d23:	add    esp,0xc
64019d26:	pop    ebp
64019d27:	ret    0x4
64019d2a:	push   ebp
64019d2b:	push   esi
64019d2c:	push   edi
64019d2d:	push   ebx
64019d2e:	mov    ebp,edx
64019d30:	xor    eax,eax
64019d32:	xor    ebx,ebx
64019d34:	xor    edx,edx
64019d36:	xor    esi,esi
64019d38:	xor    edi,edi
64019d3a:	call   ecx
64019d3c:	pop    ebx
64019d3d:	pop    edi
64019d3e:	pop    esi
64019d3f:	pop    ebp
64019d40:	ret    
64019d41:	mov    ebp,edx
64019d43:	mov    esi,ecx
64019d45:	mov    eax,ecx
64019d47:	push   0x1
64019d49:	call   0x6401e805
64019d4e:	xor    eax,eax
64019d50:	xor    ebx,ebx
64019d52:	xor    ecx,ecx
64019d54:	xor    edx,edx
64019d56:	xor    edi,edi
64019d58:	jmp    esi
64019d5a:	push   ebp
64019d5b:	mov    ebp,esp
64019d5d:	push   ebx
64019d5e:	push   esi
64019d5f:	push   edi
64019d60:	push   0x0
64019d62:	push   0x0
64019d64:	push   0x64019d6f
64019d69:	push   ecx
64019d6a:	call   0x64022e1c
64019d6f:	pop    edi
64019d70:	pop    esi
64019d71:	pop    ebx
64019d72:	pop    ebp
64019d73:	ret    
64019d74:	push   ebp
64019d75:	mov    ebp,DWORD PTR [esp+0x8]
64019d79:	push   edx
64019d7a:	push   ecx
64019d7b:	push   DWORD PTR [esp+0x14]
64019d7f:	call   0x64019c38
64019d84:	add    esp,0xc
64019d87:	pop    ebp
64019d88:	ret    0x8
64019d8b:	mov    eax,DWORD PTR [esp+0x4]
64019d8f:	push   esi
64019d90:	xor    esi,esi
64019d92:	cmp    eax,esi
64019d94:	jne    0x64019db3
64019d96:	call   0x64016663
64019d9b:	push   esi
64019d9c:	push   esi
64019d9d:	push   esi
64019d9e:	push   esi
64019d9f:	push   esi
64019da0:	mov    DWORD PTR [eax],0x16
64019da6:	call   0x64013df2
64019dab:	add    esp,0x14
64019dae:	or     eax,0xffffffff
64019db1:	pop    esi
64019db2:	ret    
64019db3:	mov    eax,DWORD PTR [eax+0x10]
64019db6:	pop    esi
64019db7:	ret    
64019db8:	push   esi
64019db9:	mov    esi,DWORD PTR [esp+0x8]
64019dbd:	mov    eax,DWORD PTR [esi+0xc]
64019dc0:	test   al,0x83
64019dc2:	je     0x64019de2
64019dc4:	test   al,0x8
64019dc6:	je     0x64019de2
64019dc8:	push   DWORD PTR [esi+0x8]
64019dcb:	call   0x6401475f
64019dd0:	and    DWORD PTR [esi+0xc],0xfffffbf7
64019dd7:	xor    eax,eax
64019dd9:	pop    ecx
64019dda:	mov    DWORD PTR [esi],eax
64019ddc:	mov    DWORD PTR [esi+0x8],eax
64019ddf:	mov    DWORD PTR [esi+0x4],eax
64019de2:	pop    esi
64019de3:	ret    
64019de4:	push   ebx
64019de5:	push   esi
64019de6:	mov    esi,DWORD PTR [esp+0xc]
64019dea:	mov    eax,DWORD PTR [esi+0xc]
64019ded:	mov    ecx,eax
64019def:	and    cl,0x3
64019df2:	xor    ebx,ebx
64019df4:	cmp    cl,0x2
64019df7:	jne    0x64019e38
64019df9:	test   ax,0x108
64019dfd:	je     0x64019e38
64019dff:	mov    eax,DWORD PTR [esi+0x8]
64019e02:	push   edi
64019e03:	mov    edi,DWORD PTR [esi]
64019e05:	sub    edi,eax
64019e07:	test   edi,edi
64019e09:	jle    0x64019e37
64019e0b:	push   edi
64019e0c:	push   eax
64019e0d:	push   esi
64019e0e:	call   0x64019d8b
64019e13:	pop    ecx
64019e14:	push   eax
64019e15:	call   0x6401b1d8
64019e1a:	add    esp,0xc
64019e1d:	cmp    eax,edi
64019e1f:	jne    0x64019e30
64019e21:	mov    eax,DWORD PTR [esi+0xc]
64019e24:	test   al,al
64019e26:	jns    0x64019e37
64019e28:	and    eax,0xfffffffd
64019e2b:	mov    DWORD PTR [esi+0xc],eax
64019e2e:	jmp    0x64019e37
64019e30:	or     DWORD PTR [esi+0xc],0x20
64019e34:	or     ebx,0xffffffff
64019e37:	pop    edi
64019e38:	mov    eax,DWORD PTR [esi+0x8]
64019e3b:	and    DWORD PTR [esi+0x4],0x0
64019e3f:	mov    DWORD PTR [esi],eax
64019e41:	pop    esi
64019e42:	mov    eax,ebx
64019e44:	pop    ebx
64019e45:	ret    
64019e46:	push   esi
64019e47:	mov    esi,DWORD PTR [esp+0x8]
64019e4b:	test   esi,esi
64019e4d:	jne    0x64019e58
64019e4f:	push   esi
64019e50:	call   0x64019e88
64019e55:	pop    ecx
64019e56:	pop    esi
64019e57:	ret    
64019e58:	push   esi
64019e59:	call   0x64019de4
64019e5e:	test   eax,eax
64019e60:	pop    ecx
64019e61:	je     0x64019e68
64019e63:	or     eax,0xffffffff
64019e66:	pop    esi
64019e67:	ret    
64019e68:	test   WORD PTR [esi+0xc],0x4000
64019e6e:	je     0x64019e84
64019e70:	push   esi
64019e71:	call   0x64019d8b
64019e76:	push   eax
64019e77:	call   0x6401e9ce
64019e7c:	pop    ecx
64019e7d:	pop    ecx
64019e7e:	neg    eax
64019e80:	sbb    eax,eax
64019e82:	pop    esi
64019e83:	ret    
64019e84:	xor    eax,eax
64019e86:	pop    esi
64019e87:	ret    
64019e88:	push   0x14
64019e8a:	push   0x64043e80
64019e8f:	call   0x64016464
64019e94:	xor    edi,edi
64019e96:	mov    DWORD PTR [ebp-0x1c],edi
64019e99:	mov    DWORD PTR [ebp-0x24],edi
64019e9c:	push   0x1
64019e9e:	call   0x6401b42a
64019ea3:	pop    ecx
64019ea4:	mov    DWORD PTR [ebp-0x4],edi
64019ea7:	xor    esi,esi
64019ea9:	mov    DWORD PTR [ebp-0x20],esi
64019eac:	cmp    esi,DWORD PTR ds:0x640556a0
64019eb2:	jge    0x64019f3b
64019eb8:	mov    eax,ds:0x64054690
64019ebd:	lea    eax,[eax+esi*4]
64019ec0:	cmp    DWORD PTR [eax],edi
64019ec2:	je     0x64019f22
64019ec4:	mov    eax,DWORD PTR [eax]
64019ec6:	test   BYTE PTR [eax+0xc],0x83
64019eca:	je     0x64019f22
64019ecc:	push   eax
64019ecd:	push   esi
64019ece:	call   0x64019ba8
64019ed3:	pop    ecx
64019ed4:	pop    ecx
64019ed5:	xor    edx,edx
64019ed7:	inc    edx
64019ed8:	mov    DWORD PTR [ebp-0x4],edx
64019edb:	mov    eax,ds:0x64054690
64019ee0:	mov    eax,DWORD PTR [eax+esi*4]
64019ee3:	mov    ecx,DWORD PTR [eax+0xc]
64019ee6:	test   cl,0x83
64019ee9:	je     0x64019f1a
64019eeb:	cmp    DWORD PTR [ebp+0x8],edx
64019eee:	jne    0x64019f01
64019ef0:	push   eax
64019ef1:	call   0x64019e46
64019ef6:	pop    ecx
64019ef7:	cmp    eax,0xffffffff
64019efa:	je     0x64019f1a
64019efc:	inc    DWORD PTR [ebp-0x1c]
64019eff:	jmp    0x64019f1a
64019f01:	cmp    DWORD PTR [ebp+0x8],edi
64019f04:	jne    0x64019f1a
64019f06:	test   cl,0x2
64019f09:	je     0x64019f1a
64019f0b:	push   eax
64019f0c:	call   0x64019e46
64019f11:	pop    ecx
64019f12:	cmp    eax,0xffffffff
64019f15:	jne    0x64019f1a
64019f17:	or     DWORD PTR [ebp-0x24],eax
64019f1a:	mov    DWORD PTR [ebp-0x4],edi
64019f1d:	call   0x64019f2a
64019f22:	inc    esi
64019f23:	jmp    0x64019ea9
64019f25:	xor    edi,edi
64019f27:	mov    esi,DWORD PTR [ebp-0x20]
64019f2a:	mov    eax,ds:0x64054690
64019f2f:	push   DWORD PTR [eax+esi*4]
64019f32:	push   esi
64019f33:	call   0x64019c0c
64019f38:	pop    ecx
64019f39:	pop    ecx
64019f3a:	ret    
64019f3b:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64019f42:	call   0x64019f59
64019f47:	cmp    DWORD PTR [ebp+0x8],0x1
64019f4b:	mov    eax,DWORD PTR [ebp-0x1c]
64019f4e:	je     0x64019f53
64019f50:	mov    eax,DWORD PTR [ebp-0x24]
64019f53:	call   0x640164a9
64019f58:	ret    
64019f59:	push   0x1
64019f5b:	call   0x6401b352
64019f60:	pop    ecx
64019f61:	ret    
64019f62:	push   0x1
64019f64:	call   0x64019e88
64019f69:	pop    ecx
64019f6a:	ret    
64019f6b:	push   ebp
64019f6c:	mov    ebp,esp
64019f6e:	push   ecx
64019f6f:	push   esi
64019f70:	mov    esi,DWORD PTR [ebp+0xc]
64019f73:	push   esi
64019f74:	call   0x64019d8b
64019f79:	mov    DWORD PTR [ebp+0xc],eax
64019f7c:	mov    eax,DWORD PTR [esi+0xc]
64019f7f:	test   al,0x82
64019f81:	pop    ecx
64019f82:	jne    0x64019f9b
64019f84:	call   0x64016663
64019f89:	mov    DWORD PTR [eax],0x9
64019f8f:	or     DWORD PTR [esi+0xc],0x20
64019f93:	or     eax,0xffffffff
64019f96:	jmp    0x6401a0c8
64019f9b:	test   al,0x40
64019f9d:	je     0x64019fac
64019f9f:	call   0x64016663
64019fa4:	mov    DWORD PTR [eax],0x22
64019faa:	jmp    0x64019f8f
64019fac:	push   ebx
64019fad:	xor    ebx,ebx
64019faf:	test   al,0x1
64019fb1:	je     0x64019fc9
64019fb3:	test   al,0x10
64019fb5:	mov    DWORD PTR [esi+0x4],ebx
64019fb8:	je     0x6401a043
64019fbe:	mov    ecx,DWORD PTR [esi+0x8]
64019fc1:	and    eax,0xfffffffe
64019fc4:	mov    DWORD PTR [esi],ecx
64019fc6:	mov    DWORD PTR [esi+0xc],eax
64019fc9:	mov    eax,DWORD PTR [esi+0xc]
64019fcc:	and    eax,0xffffffef
64019fcf:	or     eax,0x2
64019fd2:	test   ax,0x10c
64019fd6:	mov    DWORD PTR [esi+0xc],eax
64019fd9:	mov    DWORD PTR [esi+0x4],ebx
64019fdc:	mov    DWORD PTR [ebp-0x4],ebx
64019fdf:	jne    0x6401a00d
64019fe1:	call   0x64019a95
64019fe6:	add    eax,0x20
64019fe9:	cmp    esi,eax
64019feb:	je     0x64019ff9
64019fed:	call   0x64019a95
64019ff2:	add    eax,0x40
64019ff5:	cmp    esi,eax
64019ff7:	jne    0x6401a006
64019ff9:	push   DWORD PTR [ebp+0xc]
64019ffc:	call   0x6401eaf3
6401a001:	test   eax,eax
6401a003:	pop    ecx
6401a004:	jne    0x6401a00d
6401a006:	push   esi
6401a007:	call   0x6401eaaf
6401a00c:	pop    ecx
6401a00d:	test   WORD PTR [esi+0xc],0x108
6401a013:	push   edi
6401a014:	je     0x6401a09a
6401a01a:	mov    eax,DWORD PTR [esi+0x8]
6401a01d:	mov    edi,DWORD PTR [esi]
6401a01f:	lea    ecx,[eax+0x1]
6401a022:	mov    DWORD PTR [esi],ecx
6401a024:	mov    ecx,DWORD PTR [esi+0x18]
6401a027:	sub    edi,eax
6401a029:	dec    ecx
6401a02a:	cmp    edi,ebx
6401a02c:	mov    DWORD PTR [esi+0x4],ecx
6401a02f:	jle    0x6401a04e
6401a031:	push   edi
6401a032:	push   eax
6401a033:	push   DWORD PTR [ebp+0xc]
6401a036:	call   0x6401b1d8
6401a03b:	add    esp,0xc
6401a03e:	mov    DWORD PTR [ebp-0x4],eax
6401a041:	jmp    0x6401a090
6401a043:	or     eax,0x20
6401a046:	mov    DWORD PTR [esi+0xc],eax
6401a049:	or     eax,0xffffffff
6401a04c:	jmp    0x6401a0c7
6401a04e:	mov    ecx,DWORD PTR [ebp+0xc]
6401a051:	cmp    ecx,0xffffffff
6401a054:	je     0x6401a071
6401a056:	cmp    ecx,0xfffffffe
6401a059:	je     0x6401a071
6401a05b:	mov    eax,ecx
6401a05d:	and    eax,0x1f
6401a060:	mov    edx,ecx
6401a062:	sar    edx,0x5
6401a065:	shl    eax,0x6
6401a068:	add    eax,DWORD PTR [edx*4+0x640556c0]
6401a06f:	jmp    0x6401a076
6401a071:	mov    eax,0x64052488
6401a076:	test   BYTE PTR [eax+0x4],0x20
6401a07a:	je     0x6401a090
6401a07c:	push   0x2
6401a07e:	push   ebx
6401a07f:	push   ebx
6401a080:	push   ecx
6401a081:	call   0x6401972e
6401a086:	and    eax,edx
6401a088:	add    esp,0x10
6401a08b:	cmp    eax,0xffffffff
6401a08e:	je     0x6401a0b5
6401a090:	mov    eax,DWORD PTR [esi+0x8]
6401a093:	mov    cl,BYTE PTR [ebp+0x8]
6401a096:	mov    BYTE PTR [eax],cl
6401a098:	jmp    0x6401a0b0
6401a09a:	xor    edi,edi
6401a09c:	inc    edi
6401a09d:	push   edi
6401a09e:	lea    eax,[ebp+0x8]
6401a0a1:	push   eax
6401a0a2:	push   DWORD PTR [ebp+0xc]
6401a0a5:	call   0x6401b1d8
6401a0aa:	add    esp,0xc
6401a0ad:	mov    DWORD PTR [ebp-0x4],eax
6401a0b0:	cmp    DWORD PTR [ebp-0x4],edi
6401a0b3:	je     0x6401a0be
6401a0b5:	or     DWORD PTR [esi+0xc],0x20
6401a0b9:	or     eax,0xffffffff
6401a0bc:	jmp    0x6401a0c6
6401a0be:	mov    eax,DWORD PTR [ebp+0x8]
6401a0c1:	and    eax,0xff
6401a0c6:	pop    edi
6401a0c7:	pop    ebx
6401a0c8:	pop    esi
6401a0c9:	leave  
6401a0ca:	ret    
6401a0cb:	test   BYTE PTR [ecx+0xc],0x40
6401a0cf:	je     0x6401a0d7
6401a0d1:	cmp    DWORD PTR [ecx+0x8],0x0
6401a0d5:	je     0x6401a0fb
6401a0d7:	dec    DWORD PTR [ecx+0x4]
6401a0da:	js     0x6401a0e7
6401a0dc:	mov    edx,DWORD PTR [ecx]
6401a0de:	mov    BYTE PTR [edx],al
6401a0e0:	inc    DWORD PTR [ecx]
6401a0e2:	movzx  eax,al
6401a0e5:	jmp    0x6401a0f3
6401a0e7:	movsx  eax,al
6401a0ea:	push   ecx
6401a0eb:	push   eax
6401a0ec:	call   0x64019f6b
6401a0f1:	pop    ecx
6401a0f2:	pop    ecx
6401a0f3:	cmp    eax,0xffffffff
6401a0f6:	jne    0x6401a0fb
6401a0f8:	or     DWORD PTR [esi],eax
6401a0fa:	ret    
6401a0fb:	inc    DWORD PTR [esi]
6401a0fd:	ret    
6401a0fe:	push   ebp
6401a0ff:	mov    ebp,esp
6401a101:	push   esi
6401a102:	mov    esi,eax
6401a104:	jmp    0x6401a119
6401a106:	mov    ecx,DWORD PTR [ebp+0x10]
6401a109:	mov    al,BYTE PTR [ebp+0x8]
6401a10c:	dec    DWORD PTR [ebp+0xc]
6401a10f:	call   0x6401a0cb
6401a114:	cmp    DWORD PTR [esi],0xffffffff
6401a117:	je     0x6401a11f
6401a119:	cmp    DWORD PTR [ebp+0xc],0x0
6401a11d:	jg     0x6401a106
6401a11f:	pop    esi
6401a120:	pop    ebp
6401a121:	ret    
6401a122:	test   BYTE PTR [edi+0xc],0x40
6401a126:	push   ebx
6401a127:	push   esi
6401a128:	mov    esi,eax
6401a12a:	mov    ebx,ecx
6401a12c:	je     0x6401a162
6401a12e:	cmp    DWORD PTR [edi+0x8],0x0
6401a132:	jne    0x6401a162
6401a134:	mov    eax,DWORD PTR [esp+0xc]
6401a138:	add    DWORD PTR [esi],eax
6401a13a:	jmp    0x6401a169
6401a13c:	mov    al,BYTE PTR [ebx]
6401a13e:	dec    DWORD PTR [esp+0xc]
6401a142:	mov    ecx,edi
6401a144:	call   0x6401a0cb
6401a149:	inc    ebx
6401a14a:	cmp    DWORD PTR [esi],0xffffffff
6401a14d:	jne    0x6401a162
6401a14f:	call   0x64016663
6401a154:	cmp    DWORD PTR [eax],0x2a
6401a157:	jne    0x6401a169
6401a159:	mov    ecx,edi
6401a15b:	mov    al,0x3f
6401a15d:	call   0x6401a0cb
6401a162:	cmp    DWORD PTR [esp+0xc],0x0
6401a167:	jg     0x6401a13c
6401a169:	pop    esi
6401a16a:	pop    ebx
6401a16b:	ret    
6401a16c:	push   ebp
6401a16d:	lea    ebp,[esp-0x1f8]
6401a174:	sub    esp,0x278
6401a17a:	mov    eax,ds:0x640521ac
6401a17f:	xor    eax,ebp
6401a181:	mov    DWORD PTR [ebp+0x1f4],eax
6401a187:	mov    eax,DWORD PTR [ebp+0x200]
6401a18d:	push   ebx
6401a18e:	mov    ebx,DWORD PTR [ebp+0x204]
6401a194:	push   esi
6401a195:	xor    esi,esi
6401a197:	push   edi
6401a198:	mov    edi,DWORD PTR [ebp+0x20c]
6401a19e:	push   DWORD PTR [ebp+0x208]
6401a1a4:	lea    ecx,[ebp-0x64]
6401a1a7:	mov    DWORD PTR [ebp-0x30],eax
6401a1aa:	mov    DWORD PTR [ebp-0x2c],edi
6401a1ad:	mov    DWORD PTR [ebp-0x4c],esi
6401a1b0:	mov    DWORD PTR [ebp-0x18],esi
6401a1b3:	mov    DWORD PTR [ebp-0x40],esi
6401a1b6:	mov    DWORD PTR [ebp-0x20],esi
6401a1b9:	mov    DWORD PTR [ebp-0x3c],esi
6401a1bc:	mov    DWORD PTR [ebp-0x50],esi
6401a1bf:	mov    DWORD PTR [ebp-0x44],esi
6401a1c2:	call   0x640142c5
6401a1c7:	cmp    DWORD PTR [ebp-0x30],esi
6401a1ca:	jne    0x6401a1f9
6401a1cc:	call   0x64016663
6401a1d1:	push   esi
6401a1d2:	push   esi
6401a1d3:	push   esi
6401a1d4:	push   esi
6401a1d5:	mov    DWORD PTR [eax],0x16
6401a1db:	push   esi
6401a1dc:	call   0x64013df2
6401a1e1:	add    esp,0x14
6401a1e4:	cmp    BYTE PTR [ebp-0x58],0x0
6401a1e8:	je     0x6401a1f1
6401a1ea:	mov    eax,DWORD PTR [ebp-0x5c]
6401a1ed:	and    DWORD PTR [eax+0x70],0xfffffffd
6401a1f1:	or     eax,0xffffffff
6401a1f4:	jmp    0x6401aac8
6401a1f9:	mov    eax,DWORD PTR [ebp-0x30]
6401a1fc:	test   BYTE PTR [eax+0xc],0x40
6401a200:	jne    0x6401a2aa
6401a206:	push   eax
6401a207:	call   0x64019d8b
6401a20c:	cmp    eax,0xffffffff
6401a20f:	pop    ecx
6401a210:	je     0x6401a248
6401a212:	push   DWORD PTR [ebp-0x30]
6401a215:	call   0x64019d8b
6401a21a:	cmp    eax,0xfffffffe
6401a21d:	pop    ecx
6401a21e:	je     0x6401a248
6401a220:	push   DWORD PTR [ebp-0x30]
6401a223:	call   0x64019d8b
6401a228:	push   DWORD PTR [ebp-0x30]
6401a22b:	sar    eax,0x5
6401a22e:	lea    esi,[eax*4+0x640556c0]
6401a235:	call   0x64019d8b
6401a23a:	and    eax,0x1f
6401a23d:	shl    eax,0x6
6401a240:	add    eax,DWORD PTR [esi]
6401a242:	pop    ecx
6401a243:	pop    ecx
6401a244:	xor    esi,esi
6401a246:	jmp    0x6401a24d
6401a248:	mov    eax,0x64052488
6401a24d:	test   BYTE PTR [eax+0x24],0x7f
6401a251:	jne    0x6401a1cc
6401a257:	push   DWORD PTR [ebp-0x30]
6401a25a:	call   0x64019d8b
6401a25f:	cmp    eax,0xffffffff
6401a262:	pop    ecx
6401a263:	je     0x6401a29b
6401a265:	push   DWORD PTR [ebp-0x30]
6401a268:	call   0x64019d8b
6401a26d:	cmp    eax,0xfffffffe
6401a270:	pop    ecx
6401a271:	je     0x6401a29b
6401a273:	push   DWORD PTR [ebp-0x30]
6401a276:	call   0x64019d8b
6401a27b:	push   DWORD PTR [ebp-0x30]
6401a27e:	sar    eax,0x5
6401a281:	lea    esi,[eax*4+0x640556c0]
6401a288:	call   0x64019d8b
6401a28d:	and    eax,0x1f
6401a290:	shl    eax,0x6
6401a293:	add    eax,DWORD PTR [esi]
6401a295:	pop    ecx
6401a296:	pop    ecx
6401a297:	xor    esi,esi
6401a299:	jmp    0x6401a2a0
6401a29b:	mov    eax,0x64052488
6401a2a0:	test   BYTE PTR [eax+0x24],0x80
6401a2a4:	jne    0x6401a1cc
6401a2aa:	cmp    ebx,esi
6401a2ac:	je     0x6401a1cc
6401a2b2:	mov    dl,BYTE PTR [ebx]
6401a2b4:	xor    ecx,ecx
6401a2b6:	test   dl,dl
6401a2b8:	mov    DWORD PTR [ebp-0x34],esi
6401a2bb:	mov    DWORD PTR [ebp-0x28],esi
6401a2be:	mov    DWORD PTR [ebp-0x54],esi
6401a2c1:	mov    BYTE PTR [ebp-0x19],dl
6401a2c4:	je     0x6401aab8
6401a2ca:	inc    ebx
6401a2cb:	cmp    DWORD PTR [ebp-0x34],0x0
6401a2cf:	mov    DWORD PTR [ebp-0x48],ebx
6401a2d2:	jl     0x6401aab8
6401a2d8:	mov    al,dl
6401a2da:	sub    al,0x20
6401a2dc:	cmp    al,0x58
6401a2de:	ja     0x6401a2f1
6401a2e0:	movsx  eax,dl
6401a2e3:	movzx  eax,BYTE PTR [eax+0x64040970]
6401a2ea:	and    eax,0xf
6401a2ed:	xor    esi,esi
6401a2ef:	jmp    0x6401a2f5
6401a2f1:	xor    esi,esi
6401a2f3:	xor    eax,eax
6401a2f5:	movsx  eax,BYTE PTR [ecx+eax*8+0x64040990]
6401a2fd:	push   0x7
6401a2ff:	sar    eax,0x4
6401a302:	pop    ecx
6401a303:	cmp    eax,ecx
6401a305:	mov    DWORD PTR [ebp-0x74],eax
6401a308:	ja     0x6401aa88
6401a30e:	jmp    DWORD PTR [eax*4+0x6401aae0]
6401a315:	or     DWORD PTR [ebp-0x20],0xffffffff
6401a319:	mov    DWORD PTR [ebp-0x78],esi
6401a31c:	mov    DWORD PTR [ebp-0x50],esi
6401a31f:	mov    DWORD PTR [ebp-0x40],esi
6401a322:	mov    DWORD PTR [ebp-0x3c],esi
6401a325:	mov    DWORD PTR [ebp-0x18],esi
6401a328:	mov    DWORD PTR [ebp-0x44],esi
6401a32b:	jmp    0x6401aa88
6401a330:	movsx  eax,dl
6401a333:	sub    eax,0x20
6401a336:	je     0x6401a376
6401a338:	sub    eax,0x3
6401a33b:	je     0x6401a36a
6401a33d:	sub    eax,0x8
6401a340:	je     0x6401a361
6401a342:	dec    eax
6401a343:	dec    eax
6401a344:	je     0x6401a358
6401a346:	sub    eax,0x3
6401a349:	jne    0x6401aa88
6401a34f:	or     DWORD PTR [ebp-0x18],0x8
6401a353:	jmp    0x6401aa88
6401a358:	or     DWORD PTR [ebp-0x18],0x4
6401a35c:	jmp    0x6401aa88
6401a361:	or     DWORD PTR [ebp-0x18],0x1
6401a365:	jmp    0x6401aa88
6401a36a:	or     DWORD PTR [ebp-0x18],0x80
6401a371:	jmp    0x6401aa88
6401a376:	or     DWORD PTR [ebp-0x18],0x2
6401a37a:	jmp    0x6401aa88
6401a37f:	cmp    dl,0x2a
6401a382:	jne    0x6401a3a4
6401a384:	add    edi,0x4
6401a387:	mov    DWORD PTR [ebp-0x2c],edi
6401a38a:	mov    edi,DWORD PTR [edi-0x4]
6401a38d:	cmp    edi,esi
6401a38f:	mov    DWORD PTR [ebp-0x40],edi
6401a392:	jge    0x6401aa88
6401a398:	or     DWORD PTR [ebp-0x18],0x4
6401a39c:	neg    DWORD PTR [ebp-0x40]
6401a39f:	jmp    0x6401aa88
6401a3a4:	mov    eax,DWORD PTR [ebp-0x40]
6401a3a7:	imul   eax,eax,0xa
6401a3aa:	movsx  ecx,dl
6401a3ad:	lea    eax,[eax+ecx*1-0x30]
6401a3b1:	mov    DWORD PTR [ebp-0x40],eax
6401a3b4:	jmp    0x6401aa88
6401a3b9:	mov    DWORD PTR [ebp-0x20],esi
6401a3bc:	jmp    0x6401aa88
6401a3c1:	cmp    dl,0x2a
6401a3c4:	jne    0x6401a3e3
6401a3c6:	add    edi,0x4
6401a3c9:	mov    DWORD PTR [ebp-0x2c],edi
6401a3cc:	mov    edi,DWORD PTR [edi-0x4]
6401a3cf:	cmp    edi,esi
6401a3d1:	mov    DWORD PTR [ebp-0x20],edi
6401a3d4:	jge    0x6401aa88
6401a3da:	or     DWORD PTR [ebp-0x20],0xffffffff
6401a3de:	jmp    0x6401aa88
6401a3e3:	mov    eax,DWORD PTR [ebp-0x20]
6401a3e6:	imul   eax,eax,0xa
6401a3e9:	movsx  ecx,dl
6401a3ec:	lea    eax,[eax+ecx*1-0x30]
6401a3f0:	mov    DWORD PTR [ebp-0x20],eax
6401a3f3:	jmp    0x6401aa88
6401a3f8:	cmp    dl,0x49
6401a3fb:	je     0x6401a443
6401a3fd:	cmp    dl,0x68
6401a400:	je     0x6401a43a
6401a402:	cmp    dl,0x6c
6401a405:	je     0x6401a41c
6401a407:	cmp    dl,0x77
6401a40a:	jne    0x6401aa88
6401a410:	or     DWORD PTR [ebp-0x18],0x800
6401a417:	jmp    0x6401aa88
6401a41c:	cmp    BYTE PTR [ebx],0x6c
6401a41f:	jne    0x6401a431
6401a421:	inc    ebx
6401a422:	or     DWORD PTR [ebp-0x18],0x1000
6401a429:	mov    DWORD PTR [ebp-0x48],ebx
6401a42c:	jmp    0x6401aa88
6401a431:	or     DWORD PTR [ebp-0x18],0x10
6401a435:	jmp    0x6401aa88
6401a43a:	or     DWORD PTR [ebp-0x18],0x20
6401a43e:	jmp    0x6401aa88
6401a443:	mov    al,BYTE PTR [ebx]
6401a445:	cmp    al,0x36
6401a447:	jne    0x6401a460
6401a449:	cmp    BYTE PTR [ebx+0x1],0x34
6401a44d:	jne    0x6401a460
6401a44f:	inc    ebx
6401a450:	inc    ebx
6401a451:	or     DWORD PTR [ebp-0x18],0x8000
6401a458:	mov    DWORD PTR [ebp-0x48],ebx
6401a45b:	jmp    0x6401aa88
6401a460:	cmp    al,0x33
6401a462:	jne    0x6401a47b
6401a464:	cmp    BYTE PTR [ebx+0x1],0x32
6401a468:	jne    0x6401a47b
6401a46a:	inc    ebx
6401a46b:	inc    ebx
6401a46c:	and    DWORD PTR [ebp-0x18],0xffff7fff
6401a473:	mov    DWORD PTR [ebp-0x48],ebx
6401a476:	jmp    0x6401aa88
6401a47b:	cmp    al,0x64
6401a47d:	je     0x6401aa88
6401a483:	cmp    al,0x69
6401a485:	je     0x6401aa88
6401a48b:	cmp    al,0x6f
6401a48d:	je     0x6401aa88
6401a493:	cmp    al,0x75
6401a495:	je     0x6401aa88
6401a49b:	cmp    al,0x78
6401a49d:	je     0x6401aa88
6401a4a3:	cmp    al,0x58
6401a4a5:	je     0x6401aa88
6401a4ab:	mov    DWORD PTR [ebp-0x74],esi
6401a4ae:	lea    eax,[ebp-0x64]
6401a4b1:	push   eax
6401a4b2:	movzx  eax,dl
6401a4b5:	push   eax
6401a4b6:	mov    DWORD PTR [ebp-0x44],esi
6401a4b9:	call   0x640150b7
6401a4be:	pop    ecx
6401a4bf:	test   eax,eax
6401a4c1:	mov    al,BYTE PTR [ebp-0x19]
6401a4c4:	pop    ecx
6401a4c5:	je     0x6401a4e0
6401a4c7:	mov    ecx,DWORD PTR [ebp-0x30]
6401a4ca:	lea    esi,[ebp-0x34]
6401a4cd:	call   0x6401a0cb
6401a4d2:	mov    al,BYTE PTR [ebx]
6401a4d4:	inc    ebx
6401a4d5:	test   al,al
6401a4d7:	mov    DWORD PTR [ebp-0x48],ebx
6401a4da:	je     0x6401aaa1
6401a4e0:	mov    ecx,DWORD PTR [ebp-0x30]
6401a4e3:	lea    esi,[ebp-0x34]
6401a4e6:	call   0x6401a0cb
6401a4eb:	jmp    0x6401aa88
6401a4f0:	movsx  eax,dl
6401a4f3:	cmp    eax,0x64
6401a4f6:	jg     0x6401a66e
6401a4fc:	je     0x6401a6ed
6401a502:	cmp    eax,0x53
6401a505:	jg     0x6401a5b6
6401a50b:	je     0x6401a567
6401a50d:	sub    eax,0x41
6401a510:	je     0x6401a522
6401a512:	dec    eax
6401a513:	dec    eax
6401a514:	je     0x6401a556
6401a516:	dec    eax
6401a517:	dec    eax
6401a518:	je     0x6401a522
6401a51a:	dec    eax
6401a51b:	dec    eax
6401a51c:	jne    0x6401a970
6401a522:	add    dl,0x20
6401a525:	mov    DWORD PTR [ebp-0x78],0x1
6401a52c:	mov    BYTE PTR [ebp-0x19],dl
6401a52f:	or     DWORD PTR [ebp-0x18],0x40
6401a533:	cmp    DWORD PTR [ebp-0x20],esi
6401a536:	lea    ebx,[ebp-0x14]
6401a539:	mov    eax,0x200
6401a53e:	mov    DWORD PTR [ebp-0x24],ebx
6401a541:	mov    DWORD PTR [ebp-0x68],eax
6401a544:	jge    0x6401a711
6401a54a:	mov    DWORD PTR [ebp-0x20],0x6
6401a551:	jmp    0x6401a75f
6401a556:	test   WORD PTR [ebp-0x18],0x830
6401a55c:	jne    0x6401a5d3
6401a55e:	or     DWORD PTR [ebp-0x18],0x800
6401a565:	jmp    0x6401a5d3
6401a567:	test   WORD PTR [ebp-0x18],0x830
6401a56d:	jne    0x6401a576
6401a56f:	or     DWORD PTR [ebp-0x18],0x800
6401a576:	mov    ecx,DWORD PTR [ebp-0x20]
6401a579:	cmp    ecx,0xffffffff
6401a57c:	jne    0x6401a583
6401a57e:	mov    ecx,0x7fffffff
6401a583:	add    edi,0x4
6401a586:	test   WORD PTR [ebp-0x18],0x810
6401a58c:	mov    DWORD PTR [ebp-0x2c],edi
6401a58f:	mov    edi,DWORD PTR [edi-0x4]
6401a592:	mov    DWORD PTR [ebp-0x24],edi
6401a595:	je     0x6401a94e
6401a59b:	cmp    edi,esi
6401a59d:	jne    0x6401a5a7
6401a59f:	mov    eax,ds:0x64052df4
6401a5a4:	mov    DWORD PTR [ebp-0x24],eax
6401a5a7:	mov    eax,DWORD PTR [ebp-0x24]
6401a5aa:	mov    DWORD PTR [ebp-0x44],0x1
6401a5b1:	jmp    0x6401a943
6401a5b6:	sub    eax,0x58
6401a5b9:	je     0x6401a7f8
6401a5bf:	dec    eax
6401a5c0:	dec    eax
6401a5c1:	je     0x6401a620
6401a5c3:	sub    eax,ecx
6401a5c5:	je     0x6401a52f
6401a5cb:	dec    eax
6401a5cc:	dec    eax
6401a5cd:	jne    0x6401a970
6401a5d3:	add    edi,0x4
6401a5d6:	test   WORD PTR [ebp-0x18],0x810
6401a5dc:	mov    DWORD PTR [ebp-0x2c],edi
6401a5df:	je     0x6401a608
6401a5e1:	movzx  eax,WORD PTR [edi-0x4]
6401a5e5:	push   eax
6401a5e6:	push   0x200
6401a5eb:	lea    eax,[ebp-0x14]
6401a5ee:	push   eax
6401a5ef:	lea    eax,[ebp-0x28]
6401a5f2:	push   eax
6401a5f3:	call   0x6401ecc6
6401a5f8:	add    esp,0x10
6401a5fb:	test   eax,eax
6401a5fd:	je     0x6401a615
6401a5ff:	mov    DWORD PTR [ebp-0x50],0x1
6401a606:	jmp    0x6401a615
6401a608:	mov    al,BYTE PTR [edi-0x4]
6401a60b:	mov    BYTE PTR [ebp-0x14],al
6401a60e:	mov    DWORD PTR [ebp-0x28],0x1
6401a615:	lea    eax,[ebp-0x14]
6401a618:	mov    DWORD PTR [ebp-0x24],eax
6401a61b:	jmp    0x6401a970
6401a620:	mov    eax,DWORD PTR [edi]
6401a622:	add    edi,0x4
6401a625:	cmp    eax,esi
6401a627:	mov    DWORD PTR [ebp-0x2c],edi
6401a62a:	je     0x6401a65a
6401a62c:	mov    ecx,DWORD PTR [eax+0x4]
6401a62f:	cmp    ecx,esi
6401a631:	je     0x6401a65a
6401a633:	test   WORD PTR [ebp-0x18],0x800
6401a639:	movsx  eax,WORD PTR [eax]
6401a63c:	mov    DWORD PTR [ebp-0x24],ecx
6401a63f:	je     0x6401a652
6401a641:	cdq    
6401a642:	sub    eax,edx
6401a644:	sar    eax,1
6401a646:	mov    DWORD PTR [ebp-0x44],0x1
6401a64d:	jmp    0x6401a96d
6401a652:	mov    DWORD PTR [ebp-0x44],esi
6401a655:	jmp    0x6401a96d
6401a65a:	mov    eax,ds:0x64052df0
6401a65f:	mov    DWORD PTR [ebp-0x24],eax
6401a662:	push   eax
6401a663:	call   0x64015aa0
6401a668:	pop    ecx
6401a669:	jmp    0x6401a96d
6401a66e:	cmp    eax,0x70
6401a671:	jg     0x6401a7fd
6401a677:	je     0x6401a7f1
6401a67d:	cmp    eax,0x65
6401a680:	jl     0x6401a970
6401a686:	cmp    eax,0x67
6401a689:	jle    0x6401a52f
6401a68f:	cmp    eax,0x69
6401a692:	je     0x6401a6ed
6401a694:	cmp    eax,0x6e
6401a697:	je     0x6401a6b8
6401a699:	cmp    eax,0x6f
6401a69c:	jne    0x6401a970
6401a6a2:	test   BYTE PTR [ebp-0x18],0x80
6401a6a6:	mov    DWORD PTR [ebp-0x28],0x8
6401a6ad:	je     0x6401a6f8
6401a6af:	or     DWORD PTR [ebp-0x18],0x200
6401a6b6:	jmp    0x6401a6f8
6401a6b8:	mov    esi,DWORD PTR [edi]
6401a6ba:	add    edi,0x4
6401a6bd:	mov    DWORD PTR [ebp-0x2c],edi
6401a6c0:	call   0x6401eb51
6401a6c5:	test   eax,eax
6401a6c7:	je     0x6401aaa1
6401a6cd:	test   BYTE PTR [ebp-0x18],0x20
6401a6d1:	je     0x6401a6dc
6401a6d3:	mov    ax,WORD PTR [ebp-0x34]
6401a6d7:	mov    WORD PTR [esi],ax
6401a6da:	jmp    0x6401a6e1
6401a6dc:	mov    eax,DWORD PTR [ebp-0x34]
6401a6df:	mov    DWORD PTR [esi],eax
6401a6e1:	mov    DWORD PTR [ebp-0x50],0x1
6401a6e8:	jmp    0x6401aa75
6401a6ed:	or     DWORD PTR [ebp-0x18],0x40
6401a6f1:	mov    DWORD PTR [ebp-0x28],0xa
6401a6f8:	mov    ecx,DWORD PTR [ebp-0x18]
6401a6fb:	test   cx,cx
6401a6fe:	jns    0x6401a847
6401a704:	mov    eax,DWORD PTR [edi]
6401a706:	mov    edx,DWORD PTR [edi+0x4]
6401a709:	add    edi,0x8
6401a70c:	jmp    0x6401a87c
6401a711:	jne    0x6401a721
6401a713:	cmp    dl,0x67
6401a716:	jne    0x6401a75f
6401a718:	mov    DWORD PTR [ebp-0x20],0x1
6401a71f:	jmp    0x6401a75f
6401a721:	cmp    DWORD PTR [ebp-0x20],eax
6401a724:	jle    0x6401a729
6401a726:	mov    DWORD PTR [ebp-0x20],eax
6401a729:	cmp    DWORD PTR [ebp-0x20],0xa3
6401a730:	jle    0x6401a75f
6401a732:	mov    esi,DWORD PTR [ebp-0x20]
6401a735:	add    esi,0x15d
6401a73b:	push   esi
6401a73c:	call   0x6401627f
6401a741:	test   eax,eax
6401a743:	mov    dl,BYTE PTR [ebp-0x19]
6401a746:	pop    ecx
6401a747:	mov    DWORD PTR [ebp-0x54],eax
6401a74a:	je     0x6401a756
6401a74c:	mov    DWORD PTR [ebp-0x24],eax
6401a74f:	mov    DWORD PTR [ebp-0x68],esi
6401a752:	mov    ebx,eax
6401a754:	jmp    0x6401a75d
6401a756:	mov    DWORD PTR [ebp-0x20],0xa3
6401a75d:	xor    esi,esi
6401a75f:	mov    eax,DWORD PTR [edi]
6401a761:	add    edi,0x8
6401a764:	mov    DWORD PTR [ebp-0x80],eax
6401a767:	mov    eax,DWORD PTR [edi-0x4]
6401a76a:	mov    DWORD PTR [ebp-0x7c],eax
6401a76d:	lea    eax,[ebp-0x64]
6401a770:	push   eax
6401a771:	push   DWORD PTR [ebp-0x78]
6401a774:	movsx  eax,dl
6401a777:	push   DWORD PTR [ebp-0x20]
6401a77a:	mov    DWORD PTR [ebp-0x2c],edi
6401a77d:	push   eax
6401a77e:	push   DWORD PTR [ebp-0x68]
6401a781:	lea    eax,[ebp-0x80]
6401a784:	push   ebx
6401a785:	push   eax
6401a786:	push   DWORD PTR ds:0x64053108
6401a78c:	call   0x640177ae
6401a791:	pop    ecx
6401a792:	call   eax
6401a794:	mov    edi,DWORD PTR [ebp-0x18]
6401a797:	add    esp,0x1c
6401a79a:	and    edi,0x80
6401a7a0:	je     0x6401a7bc
6401a7a2:	cmp    DWORD PTR [ebp-0x20],esi
6401a7a5:	jne    0x6401a7bc
6401a7a7:	lea    eax,[ebp-0x64]
6401a7aa:	push   eax
6401a7ab:	push   ebx
6401a7ac:	push   DWORD PTR ds:0x64053114
6401a7b2:	call   0x640177ae
6401a7b7:	pop    ecx
6401a7b8:	call   eax
6401a7ba:	pop    ecx
6401a7bb:	pop    ecx
6401a7bc:	cmp    BYTE PTR [ebp-0x19],0x67
6401a7c0:	jne    0x6401a7db
6401a7c2:	cmp    edi,esi
6401a7c4:	jne    0x6401a7db
6401a7c6:	lea    eax,[ebp-0x64]
6401a7c9:	push   eax
6401a7ca:	push   ebx
6401a7cb:	push   DWORD PTR ds:0x64053110
6401a7d1:	call   0x640177ae
6401a7d6:	pop    ecx
6401a7d7:	call   eax
6401a7d9:	pop    ecx
6401a7da:	pop    ecx
6401a7db:	cmp    BYTE PTR [ebx],0x2d
6401a7de:	jne    0x6401a7eb
6401a7e0:	or     DWORD PTR [ebp-0x18],0x100
6401a7e7:	inc    ebx
6401a7e8:	mov    DWORD PTR [ebp-0x24],ebx
6401a7eb:	push   ebx
6401a7ec:	jmp    0x6401a663
6401a7f1:	mov    DWORD PTR [ebp-0x20],0x8
6401a7f8:	mov    DWORD PTR [ebp-0x4c],ecx
6401a7fb:	jmp    0x6401a81e
6401a7fd:	sub    eax,0x73
6401a800:	je     0x6401a576
6401a806:	dec    eax
6401a807:	dec    eax
6401a808:	je     0x6401a6f1
6401a80e:	sub    eax,0x3
6401a811:	jne    0x6401a970
6401a817:	mov    DWORD PTR [ebp-0x4c],0x27
6401a81e:	test   BYTE PTR [ebp-0x18],0x80
6401a822:	mov    DWORD PTR [ebp-0x28],0x10
6401a829:	je     0x6401a6f8
6401a82f:	mov    al,BYTE PTR [ebp-0x4c]
6401a832:	add    al,0x51
6401a834:	mov    BYTE PTR [ebp-0x38],0x30
6401a838:	mov    BYTE PTR [ebp-0x37],al
6401a83b:	mov    DWORD PTR [ebp-0x3c],0x2
6401a842:	jmp    0x6401a6f8
6401a847:	test   cx,0x1000
6401a84c:	jne    0x6401a704
6401a852:	add    edi,0x4
6401a855:	test   cl,0x20
6401a858:	je     0x6401a86f
6401a85a:	test   cl,0x40
6401a85d:	mov    DWORD PTR [ebp-0x2c],edi
6401a860:	je     0x6401a868
6401a862:	movsx  eax,WORD PTR [edi-0x4]
6401a866:	jmp    0x6401a86c
6401a868:	movzx  eax,WORD PTR [edi-0x4]
6401a86c:	cdq    
6401a86d:	jmp    0x6401a87f
6401a86f:	test   cl,0x40
6401a872:	mov    eax,DWORD PTR [edi-0x4]
6401a875:	je     0x6401a87a
6401a877:	cdq    
6401a878:	jmp    0x6401a87c
6401a87a:	xor    edx,edx
6401a87c:	mov    DWORD PTR [ebp-0x2c],edi
6401a87f:	test   cl,0x40
6401a882:	je     0x6401a89c
6401a884:	cmp    edx,esi
6401a886:	jg     0x6401a89c
6401a888:	jl     0x6401a88e
6401a88a:	cmp    eax,esi
6401a88c:	jae    0x6401a89c
6401a88e:	neg    eax
6401a890:	adc    edx,0x0
6401a893:	neg    edx
6401a895:	or     DWORD PTR [ebp-0x18],0x100
6401a89c:	test   WORD PTR [ebp-0x18],0x9000
6401a8a2:	mov    ebx,edx
6401a8a4:	mov    edi,eax
6401a8a6:	jne    0x6401a8aa
6401a8a8:	xor    ebx,ebx
6401a8aa:	cmp    DWORD PTR [ebp-0x20],0x0
6401a8ae:	jge    0x6401a8b9
6401a8b0:	mov    DWORD PTR [ebp-0x20],0x1
6401a8b7:	jmp    0x6401a8ca
6401a8b9:	and    DWORD PTR [ebp-0x18],0xfffffff7
6401a8bd:	mov    eax,0x200
6401a8c2:	cmp    DWORD PTR [ebp-0x20],eax
6401a8c5:	jle    0x6401a8ca
6401a8c7:	mov    DWORD PTR [ebp-0x20],eax
6401a8ca:	mov    eax,edi
6401a8cc:	or     eax,ebx
6401a8ce:	jne    0x6401a8d3
6401a8d0:	and    DWORD PTR [ebp-0x3c],eax
6401a8d3:	lea    esi,[ebp+0x1eb]
6401a8d9:	mov    eax,DWORD PTR [ebp-0x20]
6401a8dc:	dec    DWORD PTR [ebp-0x20]
6401a8df:	test   eax,eax
6401a8e1:	jg     0x6401a8e9
6401a8e3:	mov    eax,edi
6401a8e5:	or     eax,ebx
6401a8e7:	je     0x6401a90d
6401a8e9:	mov    eax,DWORD PTR [ebp-0x28]
6401a8ec:	cdq    
6401a8ed:	push   edx
6401a8ee:	push   eax
6401a8ef:	push   ebx
6401a8f0:	push   edi
6401a8f1:	call   0x64019a00
6401a8f6:	add    ecx,0x30
6401a8f9:	cmp    ecx,0x39
6401a8fc:	mov    DWORD PTR [ebp-0x68],ebx
6401a8ff:	mov    edi,eax
6401a901:	mov    ebx,edx
6401a903:	jle    0x6401a908
6401a905:	add    ecx,DWORD PTR [ebp-0x4c]
6401a908:	mov    BYTE PTR [esi],cl
6401a90a:	dec    esi
6401a90b:	jmp    0x6401a8d9
6401a90d:	lea    eax,[ebp+0x1eb]
6401a913:	sub    eax,esi
6401a915:	inc    esi
6401a916:	test   WORD PTR [ebp-0x18],0x200
6401a91c:	mov    DWORD PTR [ebp-0x28],eax
6401a91f:	mov    DWORD PTR [ebp-0x24],esi
6401a922:	je     0x6401a970
6401a924:	test   eax,eax
6401a926:	je     0x6401a92f
6401a928:	mov    ecx,esi
6401a92a:	cmp    BYTE PTR [ecx],0x30
6401a92d:	je     0x6401a970
6401a92f:	dec    DWORD PTR [ebp-0x24]
6401a932:	mov    ecx,DWORD PTR [ebp-0x24]
6401a935:	mov    BYTE PTR [ecx],0x30
6401a938:	inc    eax
6401a939:	jmp    0x6401a96d
6401a93b:	dec    ecx
6401a93c:	cmp    WORD PTR [eax],si
6401a93f:	je     0x6401a947
6401a941:	inc    eax
6401a942:	inc    eax
6401a943:	cmp    ecx,esi
6401a945:	jne    0x6401a93b
6401a947:	sub    eax,DWORD PTR [ebp-0x24]
6401a94a:	sar    eax,1
6401a94c:	jmp    0x6401a96d
6401a94e:	cmp    edi,esi
6401a950:	jne    0x6401a95a
6401a952:	mov    eax,ds:0x64052df0
6401a957:	mov    DWORD PTR [ebp-0x24],eax
6401a95a:	mov    eax,DWORD PTR [ebp-0x24]
6401a95d:	jmp    0x6401a966
6401a95f:	dec    ecx
6401a960:	cmp    BYTE PTR [eax],0x0
6401a963:	je     0x6401a96a
6401a965:	inc    eax
6401a966:	cmp    ecx,esi
6401a968:	jne    0x6401a95f
6401a96a:	sub    eax,DWORD PTR [ebp-0x24]
6401a96d:	mov    DWORD PTR [ebp-0x28],eax
6401a970:	cmp    DWORD PTR [ebp-0x50],0x0
6401a974:	jne    0x6401aa75
6401a97a:	mov    eax,DWORD PTR [ebp-0x18]
6401a97d:	test   al,0x40
6401a97f:	je     0x6401a9a6
6401a981:	test   ax,0x100
6401a985:	je     0x6401a98d
6401a987:	mov    BYTE PTR [ebp-0x38],0x2d
6401a98b:	jmp    0x6401a99f
6401a98d:	test   al,0x1
6401a98f:	je     0x6401a997
6401a991:	mov    BYTE PTR [ebp-0x38],0x2b
6401a995:	jmp    0x6401a99f
6401a997:	test   al,0x2
6401a999:	je     0x6401a9a6
6401a99b:	mov    BYTE PTR [ebp-0x38],0x20
6401a99f:	mov    DWORD PTR [ebp-0x3c],0x1
6401a9a6:	mov    ebx,DWORD PTR [ebp-0x40]
6401a9a9:	sub    ebx,DWORD PTR [ebp-0x28]
6401a9ac:	sub    ebx,DWORD PTR [ebp-0x3c]
6401a9af:	test   BYTE PTR [ebp-0x18],0xc
6401a9b3:	jne    0x6401a9c6
6401a9b5:	push   DWORD PTR [ebp-0x30]
6401a9b8:	lea    eax,[ebp-0x34]
6401a9bb:	push   ebx
6401a9bc:	push   0x20
6401a9be:	call   0x6401a0fe
6401a9c3:	add    esp,0xc
6401a9c6:	push   DWORD PTR [ebp-0x3c]
6401a9c9:	mov    edi,DWORD PTR [ebp-0x30]
6401a9cc:	lea    eax,[ebp-0x34]
6401a9cf:	lea    ecx,[ebp-0x38]
6401a9d2:	call   0x6401a122
6401a9d7:	test   BYTE PTR [ebp-0x18],0x8
6401a9db:	pop    ecx
6401a9dc:	je     0x6401a9f3
6401a9de:	test   BYTE PTR [ebp-0x18],0x4
6401a9e2:	jne    0x6401a9f3
6401a9e4:	push   edi
6401a9e5:	push   ebx
6401a9e6:	push   0x30
6401a9e8:	lea    eax,[ebp-0x34]
6401a9eb:	call   0x6401a0fe
6401a9f0:	add    esp,0xc
6401a9f3:	cmp    DWORD PTR [ebp-0x44],0x0
6401a9f7:	mov    eax,DWORD PTR [ebp-0x28]
6401a9fa:	je     0x6401aa4d
6401a9fc:	test   eax,eax
6401a9fe:	jle    0x6401aa4d
6401aa00:	mov    esi,DWORD PTR [ebp-0x24]
6401aa03:	mov    DWORD PTR [ebp-0x68],eax
6401aa06:	movzx  eax,WORD PTR [esi]
6401aa09:	dec    DWORD PTR [ebp-0x68]
6401aa0c:	push   eax
6401aa0d:	push   0x6
6401aa0f:	lea    eax,[ebp+0x1ec]
6401aa15:	push   eax
6401aa16:	lea    eax,[ebp-0x70]
6401aa19:	inc    esi
6401aa1a:	push   eax
6401aa1b:	inc    esi
6401aa1c:	call   0x6401ecc6
6401aa21:	add    esp,0x10
6401aa24:	test   eax,eax
6401aa26:	jne    0x6401aa47
6401aa28:	cmp    DWORD PTR [ebp-0x70],eax
6401aa2b:	je     0x6401aa47
6401aa2d:	push   DWORD PTR [ebp-0x70]
6401aa30:	lea    eax,[ebp-0x34]
6401aa33:	lea    ecx,[ebp+0x1ec]
6401aa39:	call   0x6401a122
6401aa3e:	cmp    DWORD PTR [ebp-0x68],0x0
6401aa42:	pop    ecx
6401aa43:	jne    0x6401aa06
6401aa45:	jmp    0x6401aa5a
6401aa47:	or     DWORD PTR [ebp-0x34],0xffffffff
6401aa4b:	jmp    0x6401aa5a
6401aa4d:	mov    ecx,DWORD PTR [ebp-0x24]
6401aa50:	push   eax
6401aa51:	lea    eax,[ebp-0x34]
6401aa54:	call   0x6401a122
6401aa59:	pop    ecx
6401aa5a:	cmp    DWORD PTR [ebp-0x34],0x0
6401aa5e:	jl     0x6401aa75
6401aa60:	test   BYTE PTR [ebp-0x18],0x4
6401aa64:	je     0x6401aa75
6401aa66:	push   edi
6401aa67:	push   ebx
6401aa68:	push   0x20
6401aa6a:	lea    eax,[ebp-0x34]
6401aa6d:	call   0x6401a0fe
6401aa72:	add    esp,0xc
6401aa75:	cmp    DWORD PTR [ebp-0x54],0x0
6401aa79:	je     0x6401aa88
6401aa7b:	push   DWORD PTR [ebp-0x54]
6401aa7e:	call   0x6401475f
6401aa83:	and    DWORD PTR [ebp-0x54],0x0
6401aa87:	pop    ecx
6401aa88:	mov    ebx,DWORD PTR [ebp-0x48]
6401aa8b:	mov    al,BYTE PTR [ebx]
6401aa8d:	test   al,al
6401aa8f:	mov    BYTE PTR [ebp-0x19],al
6401aa92:	je     0x6401aab8
6401aa94:	mov    ecx,DWORD PTR [ebp-0x74]
6401aa97:	mov    edi,DWORD PTR [ebp-0x2c]
6401aa9a:	mov    dl,al
6401aa9c:	jmp    0x6401a2ca
6401aaa1:	call   0x64016663
6401aaa6:	mov    DWORD PTR [eax],0x16
6401aaac:	xor    eax,eax
6401aaae:	push   eax
6401aaaf:	push   eax
6401aab0:	push   eax
6401aab1:	push   eax
6401aab2:	push   eax
6401aab3:	jmp    0x6401a1dc
6401aab8:	cmp    BYTE PTR [ebp-0x58],0x0
6401aabc:	je     0x6401aac5
6401aabe:	mov    eax,DWORD PTR [ebp-0x5c]
6401aac1:	and    DWORD PTR [eax+0x70],0xfffffffd
6401aac5:	mov    eax,DWORD PTR [ebp-0x34]
6401aac8:	mov    ecx,DWORD PTR [ebp+0x1f4]
6401aace:	pop    edi
6401aacf:	pop    esi
6401aad0:	xor    ecx,ebp
6401aad2:	pop    ebx
6401aad3:	call   0x64013ca6
6401aad8:	add    ebp,0x1f8
6401aade:	leave  
6401aadf:	ret    
6401aae0:	scas   al,BYTE PTR es:[edi]
6401aae1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
6401aae2:	add    DWORD PTR [ebp+edx*1-0x5d],esp
6401aae6:	add    DWORD PTR [eax+esi*1-0x5d],esp
6401aaea:	add    DWORD PTR [edi+edi*2-0x5d],esp
6401aaee:	add    DWORD PTR [ecx+edi*4-0x5d],esp
6401aaf2:	add    DWORD PTR [ecx+eax*8-0x5d],esp
6401aaf6:	add    DWORD PTR [eax+edi*8-0x5d],esp
6401aafa:	add    DWORD PTR [eax+esi*8-0x5c],esp
6401aafe:	add    DWORD PTR [ebp+edx*2-0x75],esp
6401ab02:	in     al,dx
6401ab03:	sub    esp,0x18
6401ab06:	push   ebx
6401ab07:	push   DWORD PTR [ebp+0x10]
6401ab0a:	lea    ecx,[ebp-0x18]
6401ab0d:	call   0x640142c5
6401ab12:	mov    ebx,DWORD PTR [ebp+0x8]
6401ab15:	lea    eax,[ebx+0x1]
6401ab18:	cmp    eax,0x100
6401ab1d:	ja     0x6401ab2e
6401ab1f:	mov    eax,DWORD PTR [ebp-0x18]
6401ab22:	mov    eax,DWORD PTR [eax+0xc8]
6401ab28:	movzx  eax,WORD PTR [eax+ebx*2]
6401ab2c:	jmp    0x6401aba3
6401ab2e:	mov    DWORD PTR [ebp+0x8],ebx
6401ab31:	sar    DWORD PTR [ebp+0x8],0x8
6401ab35:	lea    eax,[ebp-0x18]
6401ab38:	push   eax
6401ab39:	mov    eax,DWORD PTR [ebp+0x8]
6401ab3c:	and    eax,0xff
6401ab41:	push   eax
6401ab42:	call   0x640150b7
6401ab47:	test   eax,eax
6401ab49:	pop    ecx
6401ab4a:	pop    ecx
6401ab4b:	je     0x6401ab5f
6401ab4d:	mov    al,BYTE PTR [ebp+0x8]
6401ab50:	push   0x2
6401ab52:	mov    BYTE PTR [ebp-0x8],al
6401ab55:	mov    BYTE PTR [ebp-0x7],bl
6401ab58:	mov    BYTE PTR [ebp-0x6],0x0
6401ab5c:	pop    ecx
6401ab5d:	jmp    0x6401ab69
6401ab5f:	xor    ecx,ecx
6401ab61:	mov    BYTE PTR [ebp-0x8],bl
6401ab64:	mov    BYTE PTR [ebp-0x7],0x0
6401ab68:	inc    ecx
6401ab69:	mov    eax,DWORD PTR [ebp-0x18]
6401ab6c:	push   0x1
6401ab6e:	push   DWORD PTR [eax+0x14]
6401ab71:	push   DWORD PTR [eax+0x4]
6401ab74:	lea    eax,[ebp-0x4]
6401ab77:	push   eax
6401ab78:	push   ecx
6401ab79:	lea    eax,[ebp-0x8]
6401ab7c:	push   eax
6401ab7d:	lea    eax,[ebp-0x18]
6401ab80:	push   0x1
6401ab82:	push   eax
6401ab83:	call   0x6401e251
6401ab88:	add    esp,0x20
6401ab8b:	test   eax,eax
6401ab8d:	jne    0x6401ab9f
6401ab8f:	cmp    BYTE PTR [ebp-0xc],al
6401ab92:	je     0x6401ab9b
6401ab94:	mov    eax,DWORD PTR [ebp-0x10]
6401ab97:	and    DWORD PTR [eax+0x70],0xfffffffd
6401ab9b:	xor    eax,eax
6401ab9d:	jmp    0x6401abb3
6401ab9f:	movzx  eax,WORD PTR [ebp-0x4]
6401aba3:	and    eax,DWORD PTR [ebp+0xc]
6401aba6:	cmp    BYTE PTR [ebp-0xc],0x0
6401abaa:	je     0x6401abb3
6401abac:	mov    ecx,DWORD PTR [ebp-0x10]
6401abaf:	and    DWORD PTR [ecx+0x70],0xfffffffd
6401abb3:	pop    ebx
6401abb4:	leave  
6401abb5:	ret    
6401abb6:	push   ebp
6401abb7:	lea    ebp,[esp-0x514]
6401abbe:	sub    esp,0x590
6401abc4:	mov    eax,ds:0x640521ac
6401abc9:	xor    eax,ebp
6401abcb:	mov    DWORD PTR [ebp+0x510],eax
6401abd1:	mov    eax,DWORD PTR [ebp+0x520]
6401abd7:	push   esi
6401abd8:	xor    esi,esi
6401abda:	cmp    DWORD PTR [ebp+0x524],esi
6401abe0:	mov    DWORD PTR [ebp-0x64],eax
6401abe3:	mov    DWORD PTR [ebp-0x60],esi
6401abe6:	mov    DWORD PTR [ebp-0x68],esi
6401abe9:	jne    0x6401abf2
6401abeb:	xor    eax,eax
6401abed:	jmp    0x6401b1c2
6401abf2:	cmp    eax,esi
6401abf4:	jne    0x6401ac1d
6401abf6:	call   0x64016676
6401abfb:	mov    DWORD PTR [eax],esi
6401abfd:	call   0x64016663
6401ac02:	push   esi
6401ac03:	push   esi
6401ac04:	push   esi
6401ac05:	push   esi
6401ac06:	push   esi
6401ac07:	mov    DWORD PTR [eax],0x16
6401ac0d:	call   0x64013df2
6401ac12:	add    esp,0x14
6401ac15:	or     eax,0xffffffff
6401ac18:	jmp    0x6401b1c2
6401ac1d:	push   ebx
6401ac1e:	push   edi
6401ac1f:	mov    edi,DWORD PTR [ebp+0x51c]
6401ac25:	mov    eax,edi
6401ac27:	sar    eax,0x5
6401ac2a:	lea    esi,[eax*4+0x640556c0]
6401ac31:	mov    eax,DWORD PTR [esi]
6401ac33:	and    edi,0x1f
6401ac36:	shl    edi,0x6
6401ac39:	add    eax,edi
6401ac3b:	mov    bl,BYTE PTR [eax+0x24]
6401ac3e:	add    bl,bl
6401ac40:	sar    bl,1
6401ac42:	cmp    bl,0x2
6401ac45:	mov    DWORD PTR [ebp-0x70],esi
6401ac48:	mov    BYTE PTR [ebp-0x71],bl
6401ac4b:	je     0x6401ac52
6401ac4d:	cmp    bl,0x1
6401ac50:	jne    0x6401ac85
6401ac52:	mov    ecx,DWORD PTR [ebp+0x524]
6401ac58:	not    ecx
6401ac5a:	test   cl,0x1
6401ac5d:	jne    0x6401ac85
6401ac5f:	call   0x64016676
6401ac64:	xor    esi,esi
6401ac66:	mov    DWORD PTR [eax],esi
6401ac68:	call   0x64016663
6401ac6d:	push   esi
6401ac6e:	push   esi
6401ac6f:	push   esi
6401ac70:	push   esi
6401ac71:	push   esi
6401ac72:	mov    DWORD PTR [eax],0x16
6401ac78:	call   0x64013df2
6401ac7d:	add    esp,0x14
6401ac80:	jmp    0x6401b1b5
6401ac85:	test   BYTE PTR [eax+0x4],0x20
6401ac89:	je     0x6401ac9f
6401ac8b:	push   0x2
6401ac8d:	push   0x0
6401ac8f:	push   0x0
6401ac91:	push   DWORD PTR [ebp+0x51c]
6401ac97:	call   0x640196ab
6401ac9c:	add    esp,0x10
6401ac9f:	push   DWORD PTR [ebp+0x51c]
6401aca5:	call   0x6401eaf3
6401acaa:	test   eax,eax
6401acac:	pop    ecx
6401acad:	je     0x6401aeec
6401acb3:	mov    eax,DWORD PTR [esi]
6401acb5:	test   BYTE PTR [edi+eax*1+0x4],0x80
6401acba:	je     0x6401aeec
6401acc0:	call   0x640179ca
6401acc5:	mov    eax,DWORD PTR [eax+0x6c]
6401acc8:	xor    ecx,ecx
6401acca:	cmp    DWORD PTR [eax+0x14],ecx
6401accd:	lea    eax,[ebp-0x7c]
6401acd0:	sete   cl
6401acd3:	push   eax
6401acd4:	mov    eax,DWORD PTR [esi]
6401acd6:	push   DWORD PTR [edi+eax*1]
6401acd9:	mov    DWORD PTR [ebp-0x78],ecx
6401acdc:	call   DWORD PTR ds:0x6402c114
6401ace2:	test   eax,eax
6401ace4:	je     0x6401aeec
6401acea:	xor    ecx,ecx
6401acec:	cmp    DWORD PTR [ebp-0x78],ecx
6401acef:	je     0x6401acf9
6401acf1:	test   bl,bl
6401acf3:	je     0x6401aeee
6401acf9:	call   DWORD PTR ds:0x6402c118
6401acff:	mov    ebx,DWORD PTR [ebp-0x64]
6401ad02:	mov    DWORD PTR [ebp-0x7c],eax
6401ad05:	xor    eax,eax
6401ad07:	cmp    DWORD PTR [ebp+0x524],eax
6401ad0d:	mov    DWORD PTR [ebp-0x5c],eax
6401ad10:	jbe    0x6401b15d
6401ad16:	mov    DWORD PTR [ebp-0x54],eax
6401ad19:	mov    al,BYTE PTR [ebp-0x71]
6401ad1c:	test   al,al
6401ad1e:	jne    0x6401ae61
6401ad24:	mov    cl,BYTE PTR [ebx]
6401ad26:	mov    esi,DWORD PTR [ebp-0x70]
6401ad29:	xor    eax,eax
6401ad2b:	cmp    cl,0xa
6401ad2e:	sete   al
6401ad31:	mov    DWORD PTR [ebp-0x78],eax
6401ad34:	mov    eax,DWORD PTR [esi]
6401ad36:	add    eax,edi
6401ad38:	cmp    DWORD PTR [eax+0x38],0x0
6401ad3c:	je     0x6401ad5c
6401ad3e:	mov    dl,BYTE PTR [eax+0x34]
6401ad41:	mov    BYTE PTR [ebp+0x508],dl
6401ad47:	mov    BYTE PTR [ebp+0x509],cl
6401ad4d:	and    DWORD PTR [eax+0x38],0x0
6401ad51:	push   0x2
6401ad53:	lea    eax,[ebp+0x508]
6401ad59:	push   eax
6401ad5a:	jmp    0x6401ada1
6401ad5c:	movsx  eax,cl
6401ad5f:	push   eax
6401ad60:	call   0x640150ed
6401ad65:	test   eax,eax
6401ad67:	pop    ecx
6401ad68:	je     0x6401ad9e
6401ad6a:	mov    ecx,DWORD PTR [ebp-0x64]
6401ad6d:	sub    ecx,ebx
6401ad6f:	add    ecx,DWORD PTR [ebp+0x524]
6401ad75:	xor    eax,eax
6401ad77:	inc    eax
6401ad78:	cmp    ecx,eax
6401ad7a:	jbe    0x6401aed6
6401ad80:	push   0x2
6401ad82:	lea    eax,[ebp-0x58]
6401ad85:	push   ebx
6401ad86:	push   eax
6401ad87:	call   0x6401eeb6
6401ad8c:	add    esp,0xc
6401ad8f:	cmp    eax,0xffffffff
6401ad92:	je     0x6401b157
6401ad98:	inc    ebx
6401ad99:	inc    DWORD PTR [ebp-0x54]
6401ad9c:	jmp    0x6401adb6
6401ad9e:	push   0x1
6401ada0:	push   ebx
6401ada1:	lea    eax,[ebp-0x58]
6401ada4:	push   eax
6401ada5:	call   0x6401eeb6
6401adaa:	add    esp,0xc
6401adad:	cmp    eax,0xffffffff
6401adb0:	je     0x6401b157
6401adb6:	xor    eax,eax
6401adb8:	push   eax
6401adb9:	push   eax
6401adba:	push   0x5
6401adbc:	lea    ecx,[ebp+0x508]
6401adc2:	push   ecx
6401adc3:	push   0x1
6401adc5:	lea    ecx,[ebp-0x58]
6401adc8:	push   ecx
6401adc9:	push   eax
6401adca:	push   DWORD PTR [ebp-0x7c]
6401adcd:	inc    ebx
6401adce:	inc    DWORD PTR [ebp-0x54]
6401add1:	call   DWORD PTR ds:0x6402c014
6401add7:	mov    esi,eax
6401add9:	test   esi,esi
6401addb:	je     0x6401b157
6401ade1:	push   0x0
6401ade3:	lea    eax,[ebp-0x5c]
6401ade6:	push   eax
6401ade7:	push   esi
6401ade8:	lea    eax,[ebp+0x508]
6401adee:	push   eax
6401adef:	mov    eax,DWORD PTR [ebp-0x70]
6401adf2:	mov    eax,DWORD PTR [eax]
6401adf4:	push   DWORD PTR [edi+eax*1]
6401adf7:	call   DWORD PTR ds:0x6402c094
6401adfd:	test   eax,eax
6401adff:	je     0x6401b14e
6401ae05:	mov    eax,DWORD PTR [ebp-0x54]
6401ae08:	mov    ecx,DWORD PTR [ebp-0x68]
6401ae0b:	add    eax,ecx
6401ae0d:	cmp    DWORD PTR [ebp-0x5c],esi
6401ae10:	mov    DWORD PTR [ebp-0x60],eax
6401ae13:	jl     0x6401b157
6401ae19:	cmp    DWORD PTR [ebp-0x78],0x0
6401ae1d:	je     0x6401aec2
6401ae23:	push   0x0
6401ae25:	lea    eax,[ebp-0x5c]
6401ae28:	push   eax
6401ae29:	push   0x1
6401ae2b:	lea    eax,[ebp+0x508]
6401ae31:	push   eax
6401ae32:	mov    eax,DWORD PTR [ebp-0x70]
6401ae35:	mov    eax,DWORD PTR [eax]
6401ae37:	mov    BYTE PTR [ebp+0x508],0xd
6401ae3e:	push   DWORD PTR [edi+eax*1]
6401ae41:	call   DWORD PTR ds:0x6402c094
6401ae47:	test   eax,eax
6401ae49:	je     0x6401b14e
6401ae4f:	cmp    DWORD PTR [ebp-0x5c],0x1
6401ae53:	jl     0x6401b157
6401ae59:	inc    DWORD PTR [ebp-0x68]
6401ae5c:	inc    DWORD PTR [ebp-0x60]
6401ae5f:	jmp    0x6401aec2
6401ae61:	cmp    al,0x1
6401ae63:	je     0x6401ae69
6401ae65:	cmp    al,0x2
6401ae67:	jne    0x6401ae81
6401ae69:	movzx  esi,WORD PTR [ebx]
6401ae6c:	xor    ecx,ecx
6401ae6e:	cmp    si,0xa
6401ae72:	sete   cl
6401ae75:	inc    ebx
6401ae76:	inc    ebx
6401ae77:	add    DWORD PTR [ebp-0x54],0x2
6401ae7b:	mov    DWORD PTR [ebp-0x58],esi
6401ae7e:	mov    DWORD PTR [ebp-0x78],ecx
6401ae81:	cmp    al,0x1
6401ae83:	je     0x6401ae89
6401ae85:	cmp    al,0x2
6401ae87:	jne    0x6401aec2
6401ae89:	push   DWORD PTR [ebp-0x58]
6401ae8c:	call   0x6401ece1
6401ae91:	cmp    ax,WORD PTR [ebp-0x58]
6401ae95:	pop    ecx
6401ae96:	jne    0x6401b14e
6401ae9c:	inc    DWORD PTR [ebp-0x60]
6401ae9f:	cmp    DWORD PTR [ebp-0x78],0x0
6401aea3:	je     0x6401aec2
6401aea5:	push   0xd
6401aea7:	pop    eax
6401aea8:	push   eax
6401aea9:	mov    DWORD PTR [ebp-0x58],eax
6401aeac:	call   0x6401ece1
6401aeb1:	cmp    ax,WORD PTR [ebp-0x58]
6401aeb5:	pop    ecx
6401aeb6:	jne    0x6401b14e
6401aebc:	inc    DWORD PTR [ebp-0x60]
6401aebf:	inc    DWORD PTR [ebp-0x68]
6401aec2:	mov    eax,DWORD PTR [ebp+0x524]
6401aec8:	cmp    DWORD PTR [ebp-0x54],eax
6401aecb:	jb     0x6401ad19
6401aed1:	jmp    0x6401b157
6401aed6:	mov    ecx,DWORD PTR [esi]
6401aed8:	mov    dl,BYTE PTR [ebx]
6401aeda:	inc    DWORD PTR [ebp-0x60]
6401aedd:	mov    BYTE PTR [edi+ecx*1+0x34],dl
6401aee1:	mov    ecx,DWORD PTR [esi]
6401aee3:	mov    DWORD PTR [edi+ecx*1+0x38],eax
6401aee7:	jmp    0x6401b157
6401aeec:	xor    ecx,ecx
6401aeee:	mov    eax,DWORD PTR [esi]
6401aef0:	add    eax,edi
6401aef2:	test   BYTE PTR [eax+0x4],0x80
6401aef6:	je     0x6401b127
6401aefc:	test   bl,bl
6401aefe:	mov    eax,DWORD PTR [ebp-0x64]
6401af01:	mov    DWORD PTR [ebp-0x58],ecx
6401af04:	jne    0x6401afa0
6401af0a:	cmp    DWORD PTR [ebp+0x524],ecx
6401af10:	mov    DWORD PTR [ebp-0x5c],eax
6401af13:	jbe    0x6401b18d
6401af19:	jmp    0x6401af1e
6401af1b:	mov    esi,DWORD PTR [ebp-0x70]
6401af1e:	mov    ecx,DWORD PTR [ebp-0x5c]
6401af21:	and    DWORD PTR [ebp-0x54],0x0
6401af25:	sub    ecx,DWORD PTR [ebp-0x64]
6401af28:	lea    eax,[ebp-0x50]
6401af2b:	cmp    ecx,DWORD PTR [ebp+0x524]
6401af31:	jae    0x6401af5a
6401af33:	mov    edx,DWORD PTR [ebp-0x5c]
6401af36:	inc    DWORD PTR [ebp-0x5c]
6401af39:	mov    dl,BYTE PTR [edx]
6401af3b:	inc    ecx
6401af3c:	cmp    dl,0xa
6401af3f:	jne    0x6401af4b
6401af41:	inc    DWORD PTR [ebp-0x68]
6401af44:	mov    BYTE PTR [eax],0xd
6401af47:	inc    eax
6401af48:	inc    DWORD PTR [ebp-0x54]
6401af4b:	mov    BYTE PTR [eax],dl
6401af4d:	inc    eax
6401af4e:	inc    DWORD PTR [ebp-0x54]
6401af51:	cmp    DWORD PTR [ebp-0x54],0x400
6401af58:	jb     0x6401af2b
6401af5a:	mov    ebx,eax
6401af5c:	lea    eax,[ebp-0x50]
6401af5f:	sub    ebx,eax
6401af61:	push   0x0
6401af63:	lea    eax,[ebp-0x6c]
6401af66:	push   eax
6401af67:	push   ebx
6401af68:	lea    eax,[ebp-0x50]
6401af6b:	push   eax
6401af6c:	mov    eax,DWORD PTR [esi]
6401af6e:	push   DWORD PTR [edi+eax*1]
6401af71:	call   DWORD PTR ds:0x6402c094
6401af77:	test   eax,eax
6401af79:	je     0x6401b14e
6401af7f:	mov    eax,DWORD PTR [ebp-0x6c]
6401af82:	add    DWORD PTR [ebp-0x60],eax
6401af85:	cmp    eax,ebx
6401af87:	jl     0x6401b157
6401af8d:	mov    eax,DWORD PTR [ebp-0x5c]
6401af90:	sub    eax,DWORD PTR [ebp-0x64]
6401af93:	cmp    eax,DWORD PTR [ebp+0x524]
6401af99:	jb     0x6401af1b
6401af9b:	jmp    0x6401b157
6401afa0:	cmp    bl,0x2
6401afa3:	mov    DWORD PTR [ebp-0x54],eax
6401afa6:	jne    0x6401b04f
6401afac:	cmp    DWORD PTR [ebp+0x524],ecx
6401afb2:	jbe    0x6401b18d
6401afb8:	jmp    0x6401afbd
6401afba:	mov    esi,DWORD PTR [ebp-0x70]
6401afbd:	mov    ecx,DWORD PTR [ebp-0x54]
6401afc0:	and    DWORD PTR [ebp-0x5c],0x0
6401afc4:	sub    ecx,DWORD PTR [ebp-0x64]
6401afc7:	lea    eax,[ebp-0x50]
6401afca:	cmp    ecx,DWORD PTR [ebp+0x524]
6401afd0:	jae    0x6401b005
6401afd2:	mov    edx,DWORD PTR [ebp-0x54]
6401afd5:	add    DWORD PTR [ebp-0x54],0x2
6401afd9:	movzx  edx,WORD PTR [edx]
6401afdc:	inc    ecx
6401afdd:	inc    ecx
6401afde:	cmp    dx,0xa
6401afe2:	jne    0x6401aff3
6401afe4:	add    DWORD PTR [ebp-0x68],0x2
6401afe8:	mov    WORD PTR [eax],0xd
6401afed:	inc    eax
6401afee:	inc    eax
6401afef:	add    DWORD PTR [ebp-0x5c],0x2
6401aff3:	add    DWORD PTR [ebp-0x5c],0x2
6401aff7:	mov    WORD PTR [eax],dx
6401affa:	inc    eax
6401affb:	inc    eax
6401affc:	cmp    DWORD PTR [ebp-0x5c],0x3ff
6401b003:	jb     0x6401afca
6401b005:	mov    ebx,eax
6401b007:	lea    eax,[ebp-0x50]
6401b00a:	sub    ebx,eax
6401b00c:	push   0x0
6401b00e:	lea    eax,[ebp-0x6c]
6401b011:	push   eax
6401b012:	push   ebx
6401b013:	lea    eax,[ebp-0x50]
6401b016:	push   eax
6401b017:	mov    eax,DWORD PTR [esi]
6401b019:	push   DWORD PTR [edi+eax*1]
6401b01c:	call   DWORD PTR ds:0x6402c094
6401b022:	test   eax,eax
6401b024:	je     0x6401b14e
6401b02a:	mov    eax,DWORD PTR [ebp-0x6c]
6401b02d:	add    DWORD PTR [ebp-0x60],eax
6401b030:	cmp    eax,ebx
6401b032:	jl     0x6401b157
6401b038:	mov    eax,DWORD PTR [ebp-0x54]
6401b03b:	sub    eax,DWORD PTR [ebp-0x64]
6401b03e:	cmp    eax,DWORD PTR [ebp+0x524]
6401b044:	jb     0x6401afba
6401b04a:	jmp    0x6401b157
6401b04f:	cmp    DWORD PTR [ebp+0x524],ecx
6401b055:	jbe    0x6401b18d
6401b05b:	mov    ecx,DWORD PTR [ebp-0x54]
6401b05e:	and    DWORD PTR [ebp-0x5c],0x0
6401b062:	sub    ecx,DWORD PTR [ebp-0x64]
6401b065:	push   0x2
6401b067:	lea    eax,[ebp+0x3b4]
6401b06d:	pop    esi
6401b06e:	cmp    ecx,DWORD PTR [ebp+0x524]
6401b074:	jae    0x6401b0a2
6401b076:	mov    edx,DWORD PTR [ebp-0x54]
6401b079:	movzx  edx,WORD PTR [edx]
6401b07c:	add    DWORD PTR [ebp-0x54],esi
6401b07f:	add    ecx,esi
6401b081:	cmp    dx,0xa
6401b085:	jne    0x6401b091
6401b087:	mov    WORD PTR [eax],0xd
6401b08c:	add    eax,esi
6401b08e:	add    DWORD PTR [ebp-0x5c],esi
6401b091:	add    DWORD PTR [ebp-0x5c],esi
6401b094:	mov    WORD PTR [eax],dx
6401b097:	add    eax,esi
6401b099:	cmp    DWORD PTR [ebp-0x5c],0x152
6401b0a0:	jb     0x6401b06e
6401b0a2:	xor    esi,esi
6401b0a4:	push   esi
6401b0a5:	push   esi
6401b0a6:	push   0x2ab
6401b0ab:	lea    ecx,[ebp+0x104]
6401b0b1:	push   ecx
6401b0b2:	lea    ecx,[ebp+0x3b4]
6401b0b8:	sub    eax,ecx
6401b0ba:	cdq    
6401b0bb:	sub    eax,edx
6401b0bd:	sar    eax,1
6401b0bf:	push   eax
6401b0c0:	mov    eax,ecx
6401b0c2:	push   eax
6401b0c3:	push   esi
6401b0c4:	push   0xfde9
6401b0c9:	call   DWORD PTR ds:0x6402c014
6401b0cf:	mov    ebx,eax
6401b0d1:	cmp    ebx,esi
6401b0d3:	je     0x6401b14e
6401b0d5:	push   0x0
6401b0d7:	lea    eax,[ebp-0x6c]
6401b0da:	push   eax
6401b0db:	mov    eax,ebx
6401b0dd:	sub    eax,esi
6401b0df:	push   eax
6401b0e0:	lea    eax,[ebp+esi*1+0x104]
6401b0e7:	push   eax
6401b0e8:	mov    eax,DWORD PTR [ebp-0x70]
6401b0eb:	mov    eax,DWORD PTR [eax]
6401b0ed:	push   DWORD PTR [edi+eax*1]
6401b0f0:	call   DWORD PTR ds:0x6402c094
6401b0f6:	test   eax,eax
6401b0f8:	je     0x6401b103
6401b0fa:	add    esi,DWORD PTR [ebp-0x6c]
6401b0fd:	cmp    ebx,esi
6401b0ff:	jg     0x6401b0d5
6401b101:	jmp    0x6401b10c
6401b103:	call   DWORD PTR ds:0x6402c06c
6401b109:	mov    DWORD PTR [ebp-0x58],eax
6401b10c:	cmp    ebx,esi
6401b10e:	jg     0x6401b157
6401b110:	mov    eax,DWORD PTR [ebp-0x54]
6401b113:	sub    eax,DWORD PTR [ebp-0x64]
6401b116:	cmp    eax,DWORD PTR [ebp+0x524]
6401b11c:	mov    DWORD PTR [ebp-0x60],eax
6401b11f:	jb     0x6401b05b
6401b125:	jmp    0x6401b157
6401b127:	push   0x0
6401b129:	lea    ecx,[ebp-0x6c]
6401b12c:	push   ecx
6401b12d:	push   DWORD PTR [ebp+0x524]
6401b133:	push   DWORD PTR [ebp-0x64]
6401b136:	push   DWORD PTR [eax]
6401b138:	call   DWORD PTR ds:0x6402c094
6401b13e:	test   eax,eax
6401b140:	je     0x6401b14e
6401b142:	mov    eax,DWORD PTR [ebp-0x6c]
6401b145:	and    DWORD PTR [ebp-0x58],0x0
6401b149:	mov    DWORD PTR [ebp-0x60],eax
6401b14c:	jmp    0x6401b157
6401b14e:	call   DWORD PTR ds:0x6402c06c
6401b154:	mov    DWORD PTR [ebp-0x58],eax
6401b157:	cmp    DWORD PTR [ebp-0x60],0x0
6401b15b:	jne    0x6401b1ba
6401b15d:	cmp    DWORD PTR [ebp-0x58],0x0
6401b161:	je     0x6401b18a
6401b163:	push   0x5
6401b165:	pop    esi
6401b166:	cmp    DWORD PTR [ebp-0x58],esi
6401b169:	jne    0x6401b17f
6401b16b:	call   0x64016663
6401b170:	mov    DWORD PTR [eax],0x9
6401b176:	call   0x64016676
6401b17b:	mov    DWORD PTR [eax],esi
6401b17d:	jmp    0x6401b1b5
6401b17f:	push   DWORD PTR [ebp-0x58]
6401b182:	call   0x64016689
6401b187:	pop    ecx
6401b188:	jmp    0x6401b1b5
6401b18a:	mov    esi,DWORD PTR [ebp-0x70]
6401b18d:	mov    eax,DWORD PTR [esi]
6401b18f:	test   BYTE PTR [edi+eax*1+0x4],0x40
6401b194:	je     0x6401b1a2
6401b196:	mov    eax,DWORD PTR [ebp-0x64]
6401b199:	cmp    BYTE PTR [eax],0x1a
6401b19c:	jne    0x6401b1a2
6401b19e:	xor    eax,eax
6401b1a0:	jmp    0x6401b1c0
6401b1a2:	call   0x64016663
6401b1a7:	mov    DWORD PTR [eax],0x1c
6401b1ad:	call   0x64016676
6401b1b2:	and    DWORD PTR [eax],0x0
6401b1b5:	or     eax,0xffffffff
6401b1b8:	jmp    0x6401b1c0
6401b1ba:	mov    eax,DWORD PTR [ebp-0x60]
6401b1bd:	sub    eax,DWORD PTR [ebp-0x68]
6401b1c0:	pop    edi
6401b1c1:	pop    ebx
6401b1c2:	mov    ecx,DWORD PTR [ebp+0x510]
6401b1c8:	xor    ecx,ebp
6401b1ca:	pop    esi
6401b1cb:	call   0x64013ca6
6401b1d0:	add    ebp,0x514
6401b1d6:	leave  
6401b1d7:	ret    
6401b1d8:	push   0x10
6401b1da:	push   0x64043ea8
6401b1df:	call   0x64016464
6401b1e4:	mov    eax,DWORD PTR [ebp+0x8]
6401b1e7:	cmp    eax,0xfffffffe
6401b1ea:	jne    0x6401b207
6401b1ec:	call   0x64016676
6401b1f1:	and    DWORD PTR [eax],0x0
6401b1f4:	call   0x64016663
6401b1f9:	mov    DWORD PTR [eax],0x9
6401b1ff:	or     eax,0xffffffff
6401b202:	jmp    0x6401b2a4
6401b207:	xor    edi,edi
6401b209:	cmp    eax,edi
6401b20b:	jl     0x6401b215
6401b20d:	cmp    eax,DWORD PTR ds:0x640556a8
6401b213:	jb     0x6401b236
6401b215:	call   0x64016676
6401b21a:	mov    DWORD PTR [eax],edi
6401b21c:	call   0x64016663
6401b221:	mov    DWORD PTR [eax],0x9
6401b227:	push   edi
6401b228:	push   edi
6401b229:	push   edi
6401b22a:	push   edi
6401b22b:	push   edi
6401b22c:	call   0x64013df2
6401b231:	add    esp,0x14
6401b234:	jmp    0x6401b1ff
6401b236:	mov    ecx,eax
6401b238:	sar    ecx,0x5
6401b23b:	lea    ebx,[ecx*4+0x640556c0]
6401b242:	mov    esi,eax
6401b244:	and    esi,0x1f
6401b247:	shl    esi,0x6
6401b24a:	mov    ecx,DWORD PTR [ebx]
6401b24c:	movzx  ecx,BYTE PTR [ecx+esi*1+0x4]
6401b251:	and    ecx,0x1
6401b254:	je     0x6401b215
6401b256:	push   eax
6401b257:	call   0x64019939
6401b25c:	pop    ecx
6401b25d:	mov    DWORD PTR [ebp-0x4],edi
6401b260:	mov    eax,DWORD PTR [ebx]
6401b262:	test   BYTE PTR [eax+esi*1+0x4],0x1
6401b267:	je     0x6401b27f
6401b269:	push   DWORD PTR [ebp+0x10]
6401b26c:	push   DWORD PTR [ebp+0xc]
6401b26f:	push   DWORD PTR [ebp+0x8]
6401b272:	call   0x6401abb6
6401b277:	add    esp,0xc
6401b27a:	mov    DWORD PTR [ebp-0x1c],eax
6401b27d:	jmp    0x6401b295
6401b27f:	call   0x64016663
6401b284:	mov    DWORD PTR [eax],0x9
6401b28a:	call   0x64016676
6401b28f:	mov    DWORD PTR [eax],edi
6401b291:	or     DWORD PTR [ebp-0x1c],0xffffffff
6401b295:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401b29c:	call   0x6401b2aa
6401b2a1:	mov    eax,DWORD PTR [ebp-0x1c]
6401b2a4:	call   0x640164a9
6401b2a9:	ret    
6401b2aa:	push   DWORD PTR [ebp+0x8]
6401b2ad:	call   0x640199d9
6401b2b2:	pop    ecx
6401b2b3:	ret    
6401b2b4:	push   esi
6401b2b5:	push   edi
6401b2b6:	xor    esi,esi
6401b2b8:	mov    edi,0x64053f00
6401b2bd:	cmp    DWORD PTR [esi*8+0x64052dfc],0x1
6401b2c5:	jne    0x6401b2e5
6401b2c7:	lea    eax,[esi*8+0x64052df8]
6401b2ce:	mov    DWORD PTR [eax],edi
6401b2d0:	push   0xfa0
6401b2d5:	push   DWORD PTR [eax]
6401b2d7:	add    edi,0x18
6401b2da:	call   0x6401e86a
6401b2df:	test   eax,eax
6401b2e1:	pop    ecx
6401b2e2:	pop    ecx
6401b2e3:	je     0x6401b2f1
6401b2e5:	inc    esi
6401b2e6:	cmp    esi,0x24
6401b2e9:	jl     0x6401b2bd
6401b2eb:	xor    eax,eax
6401b2ed:	inc    eax
6401b2ee:	pop    edi
6401b2ef:	pop    esi
6401b2f0:	ret    
6401b2f1:	and    DWORD PTR [esi*8+0x64052df8],0x0
6401b2f9:	xor    eax,eax
6401b2fb:	jmp    0x6401b2ee
6401b2fd:	push   ebx
6401b2fe:	mov    ebx,DWORD PTR ds:0x6402c170
6401b304:	push   esi
6401b305:	mov    esi,0x64052df8
6401b30a:	push   edi
6401b30b:	mov    edi,DWORD PTR [esi]
6401b30d:	test   edi,edi
6401b30f:	je     0x6401b324
6401b311:	cmp    DWORD PTR [esi+0x4],0x1
6401b315:	je     0x6401b324
6401b317:	push   edi
6401b318:	call   ebx
6401b31a:	push   edi
6401b31b:	call   0x6401475f
6401b320:	and    DWORD PTR [esi],0x0
6401b323:	pop    ecx
6401b324:	add    esi,0x8
6401b327:	cmp    esi,0x64052f18
6401b32d:	jl     0x6401b30b
6401b32f:	mov    esi,0x64052df8
6401b334:	pop    edi
6401b335:	mov    eax,DWORD PTR [esi]
6401b337:	test   eax,eax
6401b339:	je     0x6401b344
6401b33b:	cmp    DWORD PTR [esi+0x4],0x1
6401b33f:	jne    0x6401b344
6401b341:	push   eax
6401b342:	call   ebx
6401b344:	add    esi,0x8
6401b347:	cmp    esi,0x64052f18
6401b34d:	jl     0x6401b335
6401b34f:	pop    esi
6401b350:	pop    ebx
6401b351:	ret    
6401b352:	push   ebp
6401b353:	mov    ebp,esp
6401b355:	mov    eax,DWORD PTR [ebp+0x8]
6401b358:	push   DWORD PTR [eax*8+0x64052df8]
6401b35f:	call   DWORD PTR ds:0x6402c178
6401b365:	pop    ebp
6401b366:	ret    
6401b367:	push   0xc
6401b369:	push   0x64043ec8
6401b36e:	call   0x64016464
6401b373:	xor    edi,edi
6401b375:	inc    edi
6401b376:	mov    DWORD PTR [ebp-0x1c],edi
6401b379:	xor    ebx,ebx
6401b37b:	cmp    DWORD PTR ds:0x64053eb4,ebx
6401b381:	jne    0x6401b39b
6401b383:	call   0x6401c12d
6401b388:	push   0x1e
6401b38a:	call   0x6401bf8d
6401b38f:	push   0xff
6401b394:	call   0x64018000
6401b399:	pop    ecx
6401b39a:	pop    ecx
6401b39b:	mov    esi,DWORD PTR [ebp+0x8]
6401b39e:	lea    esi,[esi*8+0x64052df8]
6401b3a5:	cmp    DWORD PTR [esi],ebx
6401b3a7:	je     0x6401b3ad
6401b3a9:	mov    eax,edi
6401b3ab:	jmp    0x6401b41b
6401b3ad:	push   0x18
6401b3af:	call   0x6401627f
6401b3b4:	pop    ecx
6401b3b5:	mov    edi,eax
6401b3b7:	cmp    edi,ebx
6401b3b9:	jne    0x6401b3ca
6401b3bb:	call   0x64016663
6401b3c0:	mov    DWORD PTR [eax],0xc
6401b3c6:	xor    eax,eax
6401b3c8:	jmp    0x6401b41b
6401b3ca:	push   0xa
6401b3cc:	call   0x6401b42a
6401b3d1:	pop    ecx
6401b3d2:	mov    DWORD PTR [ebp-0x4],ebx
6401b3d5:	cmp    DWORD PTR [esi],ebx
6401b3d7:	jne    0x6401b405
6401b3d9:	push   0xfa0
6401b3de:	push   edi
6401b3df:	call   0x6401e86a
6401b3e4:	pop    ecx
6401b3e5:	pop    ecx
6401b3e6:	test   eax,eax
6401b3e8:	jne    0x6401b401
6401b3ea:	push   edi
6401b3eb:	call   0x6401475f
6401b3f0:	pop    ecx
6401b3f1:	call   0x64016663
6401b3f6:	mov    DWORD PTR [eax],0xc
6401b3fc:	mov    DWORD PTR [ebp-0x1c],ebx
6401b3ff:	jmp    0x6401b40c
6401b401:	mov    DWORD PTR [esi],edi
6401b403:	jmp    0x6401b40c
6401b405:	push   edi
6401b406:	call   0x6401475f
6401b40b:	pop    ecx
6401b40c:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401b413:	call   0x6401b421
6401b418:	mov    eax,DWORD PTR [ebp-0x1c]
6401b41b:	call   0x640164a9
6401b420:	ret    
6401b421:	push   0xa
6401b423:	call   0x6401b352
6401b428:	pop    ecx
6401b429:	ret    
6401b42a:	push   ebp
6401b42b:	mov    ebp,esp
6401b42d:	mov    eax,DWORD PTR [ebp+0x8]
6401b430:	push   esi
6401b431:	lea    esi,[eax*8+0x64052df8]
6401b438:	cmp    DWORD PTR [esi],0x0
6401b43b:	jne    0x6401b450
6401b43d:	push   eax
6401b43e:	call   0x6401b367
6401b443:	test   eax,eax
6401b445:	pop    ecx
6401b446:	jne    0x6401b450
6401b448:	push   0x11
6401b44a:	call   0x64017fb6
6401b44f:	pop    ecx
6401b450:	push   DWORD PTR [esi]
6401b452:	call   DWORD PTR ds:0x6402c174
6401b458:	pop    esi
6401b459:	pop    ebp
6401b45a:	ret    
6401b45b:	push   0x140
6401b460:	push   0x0
6401b462:	push   DWORD PTR ds:0x64053eb4
6401b468:	call   DWORD PTR ds:0x6402c194
6401b46e:	test   eax,eax
6401b470:	mov    ds:0x6405467c,eax
6401b475:	jne    0x6401b478
6401b477:	ret    
6401b478:	mov    ecx,DWORD PTR [esp+0x4]
6401b47c:	and    DWORD PTR ds:0x64054050,0x0
6401b483:	and    DWORD PTR ds:0x64054678,0x0
6401b48a:	mov    ds:0x64054684,eax
6401b48f:	xor    eax,eax
6401b491:	mov    DWORD PTR ds:0x64054680,ecx
6401b497:	mov    DWORD PTR ds:0x64054688,0x10
6401b4a1:	inc    eax
6401b4a2:	ret    
6401b4a3:	mov    ecx,DWORD PTR ds:0x64054678
6401b4a9:	mov    eax,ds:0x6405467c
6401b4ae:	imul   ecx,ecx,0x14
6401b4b1:	add    ecx,eax
6401b4b3:	jmp    0x6401b4c7
6401b4b5:	mov    edx,DWORD PTR [esp+0x4]
6401b4b9:	sub    edx,DWORD PTR [eax+0xc]
6401b4bc:	cmp    edx,0x100000
6401b4c2:	jb     0x6401b4cd
6401b4c4:	add    eax,0x14
6401b4c7:	cmp    eax,ecx
6401b4c9:	jb     0x6401b4b5
6401b4cb:	xor    eax,eax
6401b4cd:	ret    
6401b4ce:	push   ebp
6401b4cf:	mov    ebp,esp
6401b4d1:	sub    esp,0x10
6401b4d4:	mov    ecx,DWORD PTR [ebp+0x8]
6401b4d7:	mov    eax,DWORD PTR [ecx+0x10]
6401b4da:	push   esi
6401b4db:	mov    esi,DWORD PTR [ebp+0xc]
6401b4de:	push   edi
6401b4df:	mov    edi,esi
6401b4e1:	sub    edi,DWORD PTR [ecx+0xc]
6401b4e4:	add    esi,0xfffffffc
6401b4e7:	shr    edi,0xf
6401b4ea:	mov    ecx,edi
6401b4ec:	imul   ecx,ecx,0x204
6401b4f2:	lea    ecx,[ecx+eax*1+0x144]
6401b4f9:	mov    DWORD PTR [ebp-0x10],ecx
6401b4fc:	mov    ecx,DWORD PTR [esi]
6401b4fe:	dec    ecx
6401b4ff:	test   cl,0x1
6401b502:	mov    DWORD PTR [ebp-0x4],ecx
6401b505:	jne    0x6401b7de
6401b50b:	push   ebx
6401b50c:	lea    ebx,[ecx+esi*1]
6401b50f:	mov    edx,DWORD PTR [ebx]
6401b511:	mov    DWORD PTR [ebp-0xc],edx
6401b514:	mov    edx,DWORD PTR [esi-0x4]
6401b517:	mov    DWORD PTR [ebp-0x8],edx
6401b51a:	mov    edx,DWORD PTR [ebp-0xc]
6401b51d:	test   dl,0x1
6401b520:	mov    DWORD PTR [ebp+0xc],ebx
6401b523:	jne    0x6401b599
6401b525:	sar    edx,0x4
6401b528:	dec    edx
6401b529:	cmp    edx,0x3f
6401b52c:	jbe    0x6401b531
6401b52e:	push   0x3f
6401b530:	pop    edx
6401b531:	mov    ecx,DWORD PTR [ebx+0x4]
6401b534:	cmp    ecx,DWORD PTR [ebx+0x8]
6401b537:	jne    0x6401b57b
6401b539:	cmp    edx,0x20
6401b53c:	mov    ebx,0x80000000
6401b541:	jae    0x6401b55c
6401b543:	mov    ecx,edx
6401b545:	shr    ebx,cl
6401b547:	lea    ecx,[edx+eax*1+0x4]
6401b54b:	not    ebx
6401b54d:	and    DWORD PTR [eax+edi*4+0x44],ebx
6401b551:	dec    BYTE PTR [ecx]
6401b553:	jne    0x6401b578
6401b555:	mov    ecx,DWORD PTR [ebp+0x8]
6401b558:	and    DWORD PTR [ecx],ebx
6401b55a:	jmp    0x6401b578
6401b55c:	lea    ecx,[edx-0x20]
6401b55f:	shr    ebx,cl
6401b561:	lea    ecx,[edx+eax*1+0x4]
6401b565:	not    ebx
6401b567:	and    DWORD PTR [eax+edi*4+0xc4],ebx
6401b56e:	dec    BYTE PTR [ecx]
6401b570:	jne    0x6401b578
6401b572:	mov    ecx,DWORD PTR [ebp+0x8]
6401b575:	and    DWORD PTR [ecx+0x4],ebx
6401b578:	mov    ebx,DWORD PTR [ebp+0xc]
6401b57b:	mov    edx,DWORD PTR [ebx+0x8]
6401b57e:	mov    ebx,DWORD PTR [ebx+0x4]
6401b581:	mov    ecx,DWORD PTR [ebp-0x4]
6401b584:	add    ecx,DWORD PTR [ebp-0xc]
6401b587:	mov    DWORD PTR [edx+0x4],ebx
6401b58a:	mov    edx,DWORD PTR [ebp+0xc]
6401b58d:	mov    ebx,DWORD PTR [edx+0x4]
6401b590:	mov    edx,DWORD PTR [edx+0x8]
6401b593:	mov    DWORD PTR [ebx+0x8],edx
6401b596:	mov    DWORD PTR [ebp-0x4],ecx
6401b599:	mov    edx,ecx
6401b59b:	sar    edx,0x4
6401b59e:	dec    edx
6401b59f:	cmp    edx,0x3f
6401b5a2:	jbe    0x6401b5a7
6401b5a4:	push   0x3f
6401b5a6:	pop    edx
6401b5a7:	mov    ebx,DWORD PTR [ebp-0x8]
6401b5aa:	and    ebx,0x1
6401b5ad:	mov    DWORD PTR [ebp-0xc],ebx
6401b5b0:	jne    0x6401b645
6401b5b6:	sub    esi,DWORD PTR [ebp-0x8]
6401b5b9:	mov    ebx,DWORD PTR [ebp-0x8]
6401b5bc:	sar    ebx,0x4
6401b5bf:	push   0x3f
6401b5c1:	mov    DWORD PTR [ebp+0xc],esi
6401b5c4:	dec    ebx
6401b5c5:	pop    esi
6401b5c6:	cmp    ebx,esi
6401b5c8:	jbe    0x6401b5cc
6401b5ca:	mov    ebx,esi
6401b5cc:	add    ecx,DWORD PTR [ebp-0x8]
6401b5cf:	mov    edx,ecx
6401b5d1:	sar    edx,0x4
6401b5d4:	dec    edx
6401b5d5:	cmp    edx,esi
6401b5d7:	mov    DWORD PTR [ebp-0x4],ecx
6401b5da:	jbe    0x6401b5de
6401b5dc:	mov    edx,esi
6401b5de:	cmp    ebx,edx
6401b5e0:	je     0x6401b640
6401b5e2:	mov    ecx,DWORD PTR [ebp+0xc]
6401b5e5:	mov    esi,DWORD PTR [ecx+0x4]
6401b5e8:	cmp    esi,DWORD PTR [ecx+0x8]
6401b5eb:	jne    0x6401b628
6401b5ed:	cmp    ebx,0x20
6401b5f0:	mov    esi,0x80000000
6401b5f5:	jae    0x6401b60e
6401b5f7:	mov    ecx,ebx
6401b5f9:	shr    esi,cl
6401b5fb:	not    esi
6401b5fd:	and    DWORD PTR [eax+edi*4+0x44],esi
6401b601:	dec    BYTE PTR [ebx+eax*1+0x4]
6401b605:	jne    0x6401b628
6401b607:	mov    ecx,DWORD PTR [ebp+0x8]
6401b60a:	and    DWORD PTR [ecx],esi
6401b60c:	jmp    0x6401b628
6401b60e:	lea    ecx,[ebx-0x20]
6401b611:	shr    esi,cl
6401b613:	not    esi
6401b615:	and    DWORD PTR [eax+edi*4+0xc4],esi
6401b61c:	dec    BYTE PTR [ebx+eax*1+0x4]
6401b620:	jne    0x6401b628
6401b622:	mov    ecx,DWORD PTR [ebp+0x8]
6401b625:	and    DWORD PTR [ecx+0x4],esi
6401b628:	mov    ecx,DWORD PTR [ebp+0xc]
6401b62b:	mov    esi,DWORD PTR [ecx+0x8]
6401b62e:	mov    ecx,DWORD PTR [ecx+0x4]
6401b631:	mov    DWORD PTR [esi+0x4],ecx
6401b634:	mov    ecx,DWORD PTR [ebp+0xc]
6401b637:	mov    esi,DWORD PTR [ecx+0x4]
6401b63a:	mov    ecx,DWORD PTR [ecx+0x8]
6401b63d:	mov    DWORD PTR [esi+0x8],ecx
6401b640:	mov    esi,DWORD PTR [ebp+0xc]
6401b643:	jmp    0x6401b648
6401b645:	mov    ebx,DWORD PTR [ebp+0x8]
6401b648:	cmp    DWORD PTR [ebp-0xc],0x0
6401b64c:	jne    0x6401b656
6401b64e:	cmp    ebx,edx
6401b650:	je     0x6401b6d6
6401b656:	mov    ecx,DWORD PTR [ebp-0x10]
6401b659:	lea    ecx,[ecx+edx*8]
6401b65c:	mov    ebx,DWORD PTR [ecx+0x4]
6401b65f:	mov    DWORD PTR [esi+0x8],ecx
6401b662:	mov    DWORD PTR [esi+0x4],ebx
6401b665:	mov    DWORD PTR [ecx+0x4],esi
6401b668:	mov    ecx,DWORD PTR [esi+0x4]
6401b66b:	mov    DWORD PTR [ecx+0x8],esi
6401b66e:	mov    ecx,DWORD PTR [esi+0x4]
6401b671:	cmp    ecx,DWORD PTR [esi+0x8]
6401b674:	jne    0x6401b6d6
6401b676:	mov    cl,BYTE PTR [edx+eax*1+0x4]
6401b67a:	mov    BYTE PTR [ebp+0xf],cl
6401b67d:	inc    cl
6401b67f:	cmp    edx,0x20
6401b682:	mov    BYTE PTR [edx+eax*1+0x4],cl
6401b686:	jae    0x6401b6ad
6401b688:	cmp    BYTE PTR [ebp+0xf],0x0
6401b68c:	jne    0x6401b69c
6401b68e:	mov    ecx,edx
6401b690:	mov    ebx,0x80000000
6401b695:	shr    ebx,cl
6401b697:	mov    ecx,DWORD PTR [ebp+0x8]
6401b69a:	or     DWORD PTR [ecx],ebx
6401b69c:	mov    ebx,0x80000000
6401b6a1:	mov    ecx,edx
6401b6a3:	shr    ebx,cl
6401b6a5:	lea    eax,[eax+edi*4+0x44]
6401b6a9:	or     DWORD PTR [eax],ebx
6401b6ab:	jmp    0x6401b6d6
6401b6ad:	cmp    BYTE PTR [ebp+0xf],0x0
6401b6b1:	jne    0x6401b6c3
6401b6b3:	lea    ecx,[edx-0x20]
6401b6b6:	mov    ebx,0x80000000
6401b6bb:	shr    ebx,cl
6401b6bd:	mov    ecx,DWORD PTR [ebp+0x8]
6401b6c0:	or     DWORD PTR [ecx+0x4],ebx
6401b6c3:	lea    ecx,[edx-0x20]
6401b6c6:	mov    edx,0x80000000
6401b6cb:	shr    edx,cl
6401b6cd:	lea    eax,[eax+edi*4+0xc4]
6401b6d4:	or     DWORD PTR [eax],edx
6401b6d6:	mov    eax,DWORD PTR [ebp-0x4]
6401b6d9:	mov    DWORD PTR [esi],eax
6401b6db:	mov    DWORD PTR [eax+esi*1-0x4],eax
6401b6df:	mov    eax,DWORD PTR [ebp-0x10]
6401b6e2:	dec    DWORD PTR [eax]
6401b6e4:	jne    0x6401b7dd
6401b6ea:	mov    eax,ds:0x64054050
6401b6ef:	test   eax,eax
6401b6f1:	je     0x6401b7cf
6401b6f7:	mov    ecx,DWORD PTR ds:0x6405468c
6401b6fd:	mov    esi,DWORD PTR ds:0x6402c160
6401b703:	push   0x4000
6401b708:	shl    ecx,0xf
6401b70b:	add    ecx,DWORD PTR [eax+0xc]
6401b70e:	mov    ebx,0x8000
6401b713:	push   ebx
6401b714:	push   ecx
6401b715:	call   esi
6401b717:	mov    ecx,DWORD PTR ds:0x6405468c
6401b71d:	mov    eax,ds:0x64054050
6401b722:	mov    edx,0x80000000
6401b727:	shr    edx,cl
6401b729:	or     DWORD PTR [eax+0x8],edx
6401b72c:	mov    eax,ds:0x64054050
6401b731:	mov    eax,DWORD PTR [eax+0x10]
6401b734:	mov    ecx,DWORD PTR ds:0x6405468c
6401b73a:	and    DWORD PTR [eax+ecx*4+0xc4],0x0
6401b742:	mov    eax,ds:0x64054050
6401b747:	mov    eax,DWORD PTR [eax+0x10]
6401b74a:	dec    BYTE PTR [eax+0x43]
6401b74d:	mov    eax,ds:0x64054050
6401b752:	mov    ecx,DWORD PTR [eax+0x10]
6401b755:	cmp    BYTE PTR [ecx+0x43],0x0
6401b759:	jne    0x6401b764
6401b75b:	and    DWORD PTR [eax+0x4],0xfffffffe
6401b75f:	mov    eax,ds:0x64054050
6401b764:	cmp    DWORD PTR [eax+0x8],0xffffffff
6401b768:	jne    0x6401b7cf
6401b76a:	push   ebx
6401b76b:	push   0x0
6401b76d:	push   DWORD PTR [eax+0xc]
6401b770:	call   esi
6401b772:	mov    eax,ds:0x64054050
6401b777:	push   DWORD PTR [eax+0x10]
6401b77a:	push   0x0
6401b77c:	push   DWORD PTR ds:0x64053eb4
6401b782:	call   DWORD PTR ds:0x6402c198
6401b788:	mov    ecx,DWORD PTR ds:0x64054678
6401b78e:	mov    eax,ds:0x64054050
6401b793:	imul   ecx,ecx,0x14
6401b796:	mov    edx,DWORD PTR ds:0x6405467c
6401b79c:	sub    ecx,eax
6401b79e:	lea    ecx,[ecx+edx*1-0x14]
6401b7a2:	push   ecx
6401b7a3:	lea    ecx,[eax+0x14]
6401b7a6:	push   ecx
6401b7a7:	push   eax
6401b7a8:	call   0x640166b0
6401b7ad:	mov    eax,DWORD PTR [ebp+0x8]
6401b7b0:	add    esp,0xc
6401b7b3:	dec    DWORD PTR ds:0x64054678
6401b7b9:	cmp    eax,DWORD PTR ds:0x64054050
6401b7bf:	jbe    0x6401b7c5
6401b7c1:	sub    DWORD PTR [ebp+0x8],0x14
6401b7c5:	mov    eax,ds:0x6405467c
6401b7ca:	mov    ds:0x64054684,eax
6401b7cf:	mov    eax,DWORD PTR [ebp+0x8]
6401b7d2:	mov    ds:0x64054050,eax
6401b7d7:	mov    DWORD PTR ds:0x6405468c,edi
6401b7dd:	pop    ebx
6401b7de:	pop    edi
6401b7df:	pop    esi
6401b7e0:	leave  
6401b7e1:	ret    
6401b7e2:	mov    eax,ds:0x64054688
6401b7e7:	push   esi
6401b7e8:	mov    esi,DWORD PTR ds:0x64054678
6401b7ee:	push   edi
6401b7ef:	xor    edi,edi
6401b7f1:	cmp    esi,eax
6401b7f3:	jne    0x6401b829
6401b7f5:	add    eax,0x10
6401b7f8:	imul   eax,eax,0x14
6401b7fb:	push   eax
6401b7fc:	push   DWORD PTR ds:0x6405467c
6401b802:	push   edi
6401b803:	push   DWORD PTR ds:0x64053eb4
6401b809:	call   DWORD PTR ds:0x6402c19c
6401b80f:	cmp    eax,edi
6401b811:	jne    0x6401b817
6401b813:	xor    eax,eax
6401b815:	jmp    0x6401b88f
6401b817:	add    DWORD PTR ds:0x64054688,0x10
6401b81e:	mov    esi,DWORD PTR ds:0x64054678
6401b824:	mov    ds:0x6405467c,eax
6401b829:	imul   esi,esi,0x14
6401b82c:	add    esi,DWORD PTR ds:0x6405467c
6401b832:	push   0x41c4
6401b837:	push   0x8
6401b839:	push   DWORD PTR ds:0x64053eb4
6401b83f:	call   DWORD PTR ds:0x6402c194
6401b845:	cmp    eax,edi
6401b847:	mov    DWORD PTR [esi+0x10],eax
6401b84a:	je     0x6401b813
6401b84c:	push   0x4
6401b84e:	push   0x2000
6401b853:	push   0x100000
6401b858:	push   edi
6401b859:	call   DWORD PTR ds:0x6402c1c0
6401b85f:	cmp    eax,edi
6401b861:	mov    DWORD PTR [esi+0xc],eax
6401b864:	jne    0x6401b878
6401b866:	push   DWORD PTR [esi+0x10]
6401b869:	push   edi
6401b86a:	push   DWORD PTR ds:0x64053eb4
6401b870:	call   DWORD PTR ds:0x6402c198
6401b876:	jmp    0x6401b813
6401b878:	or     DWORD PTR [esi+0x8],0xffffffff
6401b87c:	mov    DWORD PTR [esi],edi
6401b87e:	mov    DWORD PTR [esi+0x4],edi
6401b881:	inc    DWORD PTR ds:0x64054678
6401b887:	mov    eax,DWORD PTR [esi+0x10]
6401b88a:	or     DWORD PTR [eax],0xffffffff
6401b88d:	mov    eax,esi
6401b88f:	pop    edi
6401b890:	pop    esi
6401b891:	ret    
6401b892:	push   ebp
6401b893:	mov    ebp,esp
6401b895:	push   ecx
6401b896:	push   ecx
6401b897:	mov    ecx,DWORD PTR [ebp+0x8]
6401b89a:	mov    eax,DWORD PTR [ecx+0x8]
6401b89d:	push   ebx
6401b89e:	push   esi
6401b89f:	mov    esi,DWORD PTR [ecx+0x10]
6401b8a2:	push   edi
6401b8a3:	xor    ebx,ebx
6401b8a5:	jmp    0x6401b8aa
6401b8a7:	add    eax,eax
6401b8a9:	inc    ebx
6401b8aa:	test   eax,eax
6401b8ac:	jge    0x6401b8a7
6401b8ae:	mov    eax,ebx
6401b8b0:	imul   eax,eax,0x204
6401b8b6:	lea    eax,[eax+esi*1+0x144]
6401b8bd:	push   0x3f
6401b8bf:	mov    DWORD PTR [ebp-0x8],eax
6401b8c2:	pop    edx
6401b8c3:	mov    DWORD PTR [eax+0x8],eax
6401b8c6:	mov    DWORD PTR [eax+0x4],eax
6401b8c9:	add    eax,0x8
6401b8cc:	dec    edx
6401b8cd:	jne    0x6401b8c3
6401b8cf:	push   0x4
6401b8d1:	mov    edi,ebx
6401b8d3:	push   0x1000
6401b8d8:	shl    edi,0xf
6401b8db:	add    edi,DWORD PTR [ecx+0xc]
6401b8de:	push   0x8000
6401b8e3:	push   edi
6401b8e4:	call   DWORD PTR ds:0x6402c1c0
6401b8ea:	test   eax,eax
6401b8ec:	jne    0x6401b8f6
6401b8ee:	or     eax,0xffffffff
6401b8f1:	jmp    0x6401b993
6401b8f6:	lea    edx,[edi+0x7000]
6401b8fc:	cmp    edi,edx
6401b8fe:	mov    DWORD PTR [ebp-0x4],edx
6401b901:	ja     0x6401b946
6401b903:	mov    ecx,edx
6401b905:	sub    ecx,edi
6401b907:	shr    ecx,0xc
6401b90a:	lea    eax,[edi+0x10]
6401b90d:	inc    ecx
6401b90e:	or     DWORD PTR [eax-0x8],0xffffffff
6401b912:	or     DWORD PTR [eax+0xfec],0xffffffff
6401b919:	lea    edx,[eax+0xffc]
6401b91f:	mov    DWORD PTR [eax],edx
6401b921:	lea    edx,[eax-0x1004]
6401b927:	mov    DWORD PTR [eax-0x4],0xff0
6401b92e:	mov    DWORD PTR [eax+0x4],edx
6401b931:	mov    DWORD PTR [eax+0xfe8],0xff0
6401b93b:	add    eax,0x1000
6401b940:	dec    ecx
6401b941:	jne    0x6401b90e
6401b943:	mov    edx,DWORD PTR [ebp-0x4]
6401b946:	mov    eax,DWORD PTR [ebp-0x8]
6401b949:	add    eax,0x1f8
6401b94e:	lea    ecx,[edi+0xc]
6401b951:	mov    DWORD PTR [eax+0x4],ecx
6401b954:	mov    DWORD PTR [ecx+0x8],eax
6401b957:	lea    ecx,[edx+0xc]
6401b95a:	mov    DWORD PTR [eax+0x8],ecx
6401b95d:	mov    DWORD PTR [ecx+0x4],eax
6401b960:	and    DWORD PTR [esi+ebx*4+0x44],0x0
6401b965:	xor    edi,edi
6401b967:	inc    edi
6401b968:	mov    DWORD PTR [esi+ebx*4+0xc4],edi
6401b96f:	mov    al,BYTE PTR [esi+0x43]
6401b972:	mov    cl,al
6401b974:	inc    cl
6401b976:	test   al,al
6401b978:	mov    eax,DWORD PTR [ebp+0x8]
6401b97b:	mov    BYTE PTR [esi+0x43],cl
6401b97e:	jne    0x6401b983
6401b980:	or     DWORD PTR [eax+0x4],edi
6401b983:	mov    edx,0x80000000
6401b988:	mov    ecx,ebx
6401b98a:	shr    edx,cl
6401b98c:	not    edx
6401b98e:	and    DWORD PTR [eax+0x8],edx
6401b991:	mov    eax,ebx
6401b993:	pop    edi
6401b994:	pop    esi
6401b995:	pop    ebx
6401b996:	leave  
6401b997:	ret    
6401b998:	push   ebp
6401b999:	mov    ebp,esp
6401b99b:	sub    esp,0xc
6401b99e:	mov    ecx,DWORD PTR [ebp+0x8]
6401b9a1:	mov    eax,DWORD PTR [ecx+0x10]
6401b9a4:	push   ebx
6401b9a5:	push   esi
6401b9a6:	mov    esi,DWORD PTR [ebp+0x10]
6401b9a9:	push   edi
6401b9aa:	mov    edi,DWORD PTR [ebp+0xc]
6401b9ad:	mov    edx,edi
6401b9af:	sub    edx,DWORD PTR [ecx+0xc]
6401b9b2:	add    esi,0x17
6401b9b5:	shr    edx,0xf
6401b9b8:	mov    ecx,edx
6401b9ba:	imul   ecx,ecx,0x204
6401b9c0:	lea    ecx,[ecx+eax*1+0x144]
6401b9c7:	mov    DWORD PTR [ebp-0xc],ecx
6401b9ca:	mov    ecx,DWORD PTR [edi-0x4]
6401b9cd:	and    esi,0xfffffff0
6401b9d0:	dec    ecx
6401b9d1:	cmp    esi,ecx
6401b9d3:	lea    edi,[ecx+edi*1-0x4]
6401b9d7:	mov    ebx,DWORD PTR [edi]
6401b9d9:	mov    DWORD PTR [ebp+0x10],ecx
6401b9dc:	mov    DWORD PTR [ebp-0x4],ebx
6401b9df:	jle    0x6401bb3a
6401b9e5:	test   bl,0x1
6401b9e8:	jne    0x6401bb33
6401b9ee:	add    ebx,ecx
6401b9f0:	cmp    esi,ebx
6401b9f2:	jg     0x6401bb33
6401b9f8:	mov    ecx,DWORD PTR [ebp-0x4]
6401b9fb:	sar    ecx,0x4
6401b9fe:	dec    ecx
6401b9ff:	cmp    ecx,0x3f
6401ba02:	mov    DWORD PTR [ebp-0x8],ecx
6401ba05:	jbe    0x6401ba0d
6401ba07:	push   0x3f
6401ba09:	pop    ecx
6401ba0a:	mov    DWORD PTR [ebp-0x8],ecx
6401ba0d:	mov    ebx,DWORD PTR [edi+0x4]
6401ba10:	cmp    ebx,DWORD PTR [edi+0x8]
6401ba13:	jne    0x6401ba58
6401ba15:	cmp    ecx,0x20
6401ba18:	mov    ebx,0x80000000
6401ba1d:	jae    0x6401ba39
6401ba1f:	shr    ebx,cl
6401ba21:	mov    ecx,DWORD PTR [ebp-0x8]
6401ba24:	lea    ecx,[ecx+eax*1+0x4]
6401ba28:	not    ebx
6401ba2a:	and    DWORD PTR [eax+edx*4+0x44],ebx
6401ba2e:	dec    BYTE PTR [ecx]
6401ba30:	jne    0x6401ba58
6401ba32:	mov    ecx,DWORD PTR [ebp+0x8]
6401ba35:	and    DWORD PTR [ecx],ebx
6401ba37:	jmp    0x6401ba58
6401ba39:	add    ecx,0xffffffe0
6401ba3c:	shr    ebx,cl
6401ba3e:	mov    ecx,DWORD PTR [ebp-0x8]
6401ba41:	lea    ecx,[ecx+eax*1+0x4]
6401ba45:	not    ebx
6401ba47:	and    DWORD PTR [eax+edx*4+0xc4],ebx
6401ba4e:	dec    BYTE PTR [ecx]
6401ba50:	jne    0x6401ba58
6401ba52:	mov    ecx,DWORD PTR [ebp+0x8]
6401ba55:	and    DWORD PTR [ecx+0x4],ebx
6401ba58:	mov    ecx,DWORD PTR [edi+0x8]
6401ba5b:	mov    ebx,DWORD PTR [edi+0x4]
6401ba5e:	mov    DWORD PTR [ecx+0x4],ebx
6401ba61:	mov    ecx,DWORD PTR [edi+0x4]
6401ba64:	mov    edi,DWORD PTR [edi+0x8]
6401ba67:	mov    DWORD PTR [ecx+0x8],edi
6401ba6a:	mov    ecx,DWORD PTR [ebp+0x10]
6401ba6d:	sub    ecx,esi
6401ba6f:	add    DWORD PTR [ebp-0x4],ecx
6401ba72:	cmp    DWORD PTR [ebp-0x4],0x0
6401ba76:	jle    0x6401bb21
6401ba7c:	mov    edi,DWORD PTR [ebp-0x4]
6401ba7f:	mov    ecx,DWORD PTR [ebp+0xc]
6401ba82:	sar    edi,0x4
6401ba85:	dec    edi
6401ba86:	cmp    edi,0x3f
6401ba89:	lea    ecx,[ecx+esi*1-0x4]
6401ba8d:	jbe    0x6401ba92
6401ba8f:	push   0x3f
6401ba91:	pop    edi
6401ba92:	mov    ebx,DWORD PTR [ebp-0xc]
6401ba95:	lea    ebx,[ebx+edi*8]
6401ba98:	mov    DWORD PTR [ebp+0x10],ebx
6401ba9b:	mov    ebx,DWORD PTR [ebx+0x4]
6401ba9e:	mov    DWORD PTR [ecx+0x4],ebx
6401baa1:	mov    ebx,DWORD PTR [ebp+0x10]
6401baa4:	mov    DWORD PTR [ecx+0x8],ebx
6401baa7:	mov    DWORD PTR [ebx+0x4],ecx
6401baaa:	mov    ebx,DWORD PTR [ecx+0x4]
6401baad:	mov    DWORD PTR [ebx+0x8],ecx
6401bab0:	mov    ebx,DWORD PTR [ecx+0x4]
6401bab3:	cmp    ebx,DWORD PTR [ecx+0x8]
6401bab6:	jne    0x6401bb0f
6401bab8:	mov    cl,BYTE PTR [edi+eax*1+0x4]
6401babc:	mov    BYTE PTR [ebp+0x13],cl
6401babf:	inc    cl
6401bac1:	cmp    edi,0x20
6401bac4:	mov    BYTE PTR [edi+eax*1+0x4],cl
6401bac8:	jae    0x6401bae6
6401baca:	cmp    BYTE PTR [ebp+0x13],0x0
6401bace:	jne    0x6401bade
6401bad0:	mov    ecx,edi
6401bad2:	mov    ebx,0x80000000
6401bad7:	shr    ebx,cl
6401bad9:	mov    ecx,DWORD PTR [ebp+0x8]
6401badc:	or     DWORD PTR [ecx],ebx
6401bade:	lea    eax,[eax+edx*4+0x44]
6401bae2:	mov    ecx,edi
6401bae4:	jmp    0x6401bb06
6401bae6:	cmp    BYTE PTR [ebp+0x13],0x0
6401baea:	jne    0x6401bafc
6401baec:	lea    ecx,[edi-0x20]
6401baef:	mov    ebx,0x80000000
6401baf4:	shr    ebx,cl
6401baf6:	mov    ecx,DWORD PTR [ebp+0x8]
6401baf9:	or     DWORD PTR [ecx+0x4],ebx
6401bafc:	lea    eax,[eax+edx*4+0xc4]
6401bb03:	lea    ecx,[edi-0x20]
6401bb06:	mov    edx,0x80000000
6401bb0b:	shr    edx,cl
6401bb0d:	or     DWORD PTR [eax],edx
6401bb0f:	mov    edx,DWORD PTR [ebp+0xc]
6401bb12:	mov    ecx,DWORD PTR [ebp-0x4]
6401bb15:	lea    eax,[edx+esi*1-0x4]
6401bb19:	mov    DWORD PTR [eax],ecx
6401bb1b:	mov    DWORD PTR [ecx+eax*1-0x4],ecx
6401bb1f:	jmp    0x6401bb24
6401bb21:	mov    edx,DWORD PTR [ebp+0xc]
6401bb24:	lea    eax,[esi+0x1]
6401bb27:	mov    DWORD PTR [edx-0x4],eax
6401bb2a:	mov    DWORD PTR [edx+esi*1-0x8],eax
6401bb2e:	jmp    0x6401bc6f
6401bb33:	xor    eax,eax
6401bb35:	jmp    0x6401bc72
6401bb3a:	jge    0x6401bc6f
6401bb40:	mov    ebx,DWORD PTR [ebp+0xc]
6401bb43:	sub    DWORD PTR [ebp+0x10],esi
6401bb46:	lea    ecx,[esi+0x1]
6401bb49:	mov    DWORD PTR [ebx-0x4],ecx
6401bb4c:	lea    ebx,[ebx+esi*1-0x4]
6401bb50:	mov    esi,DWORD PTR [ebp+0x10]
6401bb53:	sar    esi,0x4
6401bb56:	dec    esi
6401bb57:	cmp    esi,0x3f
6401bb5a:	mov    DWORD PTR [ebp+0xc],ebx
6401bb5d:	mov    DWORD PTR [ebx-0x4],ecx
6401bb60:	jbe    0x6401bb65
6401bb62:	push   0x3f
6401bb64:	pop    esi
6401bb65:	test   BYTE PTR [ebp-0x4],0x1
6401bb69:	jne    0x6401bbef
6401bb6f:	mov    esi,DWORD PTR [ebp-0x4]
6401bb72:	sar    esi,0x4
6401bb75:	dec    esi
6401bb76:	cmp    esi,0x3f
6401bb79:	jbe    0x6401bb7e
6401bb7b:	push   0x3f
6401bb7d:	pop    esi
6401bb7e:	mov    ecx,DWORD PTR [edi+0x4]
6401bb81:	cmp    ecx,DWORD PTR [edi+0x8]
6401bb84:	jne    0x6401bbc8
6401bb86:	cmp    esi,0x20
6401bb89:	mov    ebx,0x80000000
6401bb8e:	jae    0x6401bba9
6401bb90:	mov    ecx,esi
6401bb92:	shr    ebx,cl
6401bb94:	lea    esi,[esi+eax*1+0x4]
6401bb98:	not    ebx
6401bb9a:	and    DWORD PTR [eax+edx*4+0x44],ebx
6401bb9e:	dec    BYTE PTR [esi]
6401bba0:	jne    0x6401bbc5
6401bba2:	mov    ecx,DWORD PTR [ebp+0x8]
6401bba5:	and    DWORD PTR [ecx],ebx
6401bba7:	jmp    0x6401bbc5
6401bba9:	lea    ecx,[esi-0x20]
6401bbac:	shr    ebx,cl
6401bbae:	lea    ecx,[esi+eax*1+0x4]
6401bbb2:	not    ebx
6401bbb4:	and    DWORD PTR [eax+edx*4+0xc4],ebx
6401bbbb:	dec    BYTE PTR [ecx]
6401bbbd:	jne    0x6401bbc5
6401bbbf:	mov    ecx,DWORD PTR [ebp+0x8]
6401bbc2:	and    DWORD PTR [ecx+0x4],ebx
6401bbc5:	mov    ebx,DWORD PTR [ebp+0xc]
6401bbc8:	mov    ecx,DWORD PTR [edi+0x8]
6401bbcb:	mov    esi,DWORD PTR [edi+0x4]
6401bbce:	mov    DWORD PTR [ecx+0x4],esi
6401bbd1:	mov    esi,DWORD PTR [edi+0x8]
6401bbd4:	mov    ecx,DWORD PTR [edi+0x4]
6401bbd7:	mov    DWORD PTR [ecx+0x8],esi
6401bbda:	mov    esi,DWORD PTR [ebp+0x10]
6401bbdd:	add    esi,DWORD PTR [ebp-0x4]
6401bbe0:	mov    DWORD PTR [ebp+0x10],esi
6401bbe3:	sar    esi,0x4
6401bbe6:	dec    esi
6401bbe7:	cmp    esi,0x3f
6401bbea:	jbe    0x6401bbef
6401bbec:	push   0x3f
6401bbee:	pop    esi
6401bbef:	mov    ecx,DWORD PTR [ebp-0xc]
6401bbf2:	lea    ecx,[ecx+esi*8]
6401bbf5:	mov    edi,DWORD PTR [ecx+0x4]
6401bbf8:	mov    DWORD PTR [ebx+0x8],ecx
6401bbfb:	mov    DWORD PTR [ebx+0x4],edi
6401bbfe:	mov    DWORD PTR [ecx+0x4],ebx
6401bc01:	mov    ecx,DWORD PTR [ebx+0x4]
6401bc04:	mov    DWORD PTR [ecx+0x8],ebx
6401bc07:	mov    ecx,DWORD PTR [ebx+0x4]
6401bc0a:	cmp    ecx,DWORD PTR [ebx+0x8]
6401bc0d:	jne    0x6401bc66
6401bc0f:	mov    cl,BYTE PTR [esi+eax*1+0x4]
6401bc13:	mov    BYTE PTR [ebp+0xf],cl
6401bc16:	inc    cl
6401bc18:	cmp    esi,0x20
6401bc1b:	mov    BYTE PTR [esi+eax*1+0x4],cl
6401bc1f:	jae    0x6401bc3d
6401bc21:	cmp    BYTE PTR [ebp+0xf],0x0
6401bc25:	jne    0x6401bc35
6401bc27:	mov    ecx,esi
6401bc29:	mov    edi,0x80000000
6401bc2e:	shr    edi,cl
6401bc30:	mov    ecx,DWORD PTR [ebp+0x8]
6401bc33:	or     DWORD PTR [ecx],edi
6401bc35:	lea    eax,[eax+edx*4+0x44]
6401bc39:	mov    ecx,esi
6401bc3b:	jmp    0x6401bc5d
6401bc3d:	cmp    BYTE PTR [ebp+0xf],0x0
6401bc41:	jne    0x6401bc53
6401bc43:	lea    ecx,[esi-0x20]
6401bc46:	mov    edi,0x80000000
6401bc4b:	shr    edi,cl
6401bc4d:	mov    ecx,DWORD PTR [ebp+0x8]
6401bc50:	or     DWORD PTR [ecx+0x4],edi
6401bc53:	lea    eax,[eax+edx*4+0xc4]
6401bc5a:	lea    ecx,[esi-0x20]
6401bc5d:	mov    edx,0x80000000
6401bc62:	shr    edx,cl
6401bc64:	or     DWORD PTR [eax],edx
6401bc66:	mov    eax,DWORD PTR [ebp+0x10]
6401bc69:	mov    DWORD PTR [ebx],eax
6401bc6b:	mov    DWORD PTR [eax+ebx*1-0x4],eax
6401bc6f:	xor    eax,eax
6401bc71:	inc    eax
6401bc72:	pop    edi
6401bc73:	pop    esi
6401bc74:	pop    ebx
6401bc75:	leave  
6401bc76:	ret    
6401bc77:	push   ebp
6401bc78:	mov    ebp,esp
6401bc7a:	sub    esp,0x14
6401bc7d:	mov    eax,ds:0x64054678
6401bc82:	mov    ecx,DWORD PTR [ebp+0x8]
6401bc85:	imul   eax,eax,0x14
6401bc88:	add    eax,DWORD PTR ds:0x6405467c
6401bc8e:	add    ecx,0x17
6401bc91:	and    ecx,0xfffffff0
6401bc94:	mov    DWORD PTR [ebp-0x10],ecx
6401bc97:	sar    ecx,0x4
6401bc9a:	push   ebx
6401bc9b:	dec    ecx
6401bc9c:	cmp    ecx,0x20
6401bc9f:	push   esi
6401bca0:	push   edi
6401bca1:	jge    0x6401bcae
6401bca3:	or     esi,0xffffffff
6401bca6:	shr    esi,cl
6401bca8:	or     DWORD PTR [ebp-0x8],0xffffffff
6401bcac:	jmp    0x6401bcbb
6401bcae:	add    ecx,0xffffffe0
6401bcb1:	or     edx,0xffffffff
6401bcb4:	xor    esi,esi
6401bcb6:	shr    edx,cl
6401bcb8:	mov    DWORD PTR [ebp-0x8],edx
6401bcbb:	mov    ecx,DWORD PTR ds:0x64054684
6401bcc1:	mov    ebx,ecx
6401bcc3:	jmp    0x6401bcd6
6401bcc5:	mov    edx,DWORD PTR [ebx+0x4]
6401bcc8:	mov    edi,DWORD PTR [ebx]
6401bcca:	and    edx,DWORD PTR [ebp-0x8]
6401bccd:	and    edi,esi
6401bccf:	or     edx,edi
6401bcd1:	jne    0x6401bcdd
6401bcd3:	add    ebx,0x14
6401bcd6:	cmp    ebx,eax
6401bcd8:	mov    DWORD PTR [ebp+0x8],ebx
6401bcdb:	jb     0x6401bcc5
6401bcdd:	cmp    ebx,eax
6401bcdf:	jne    0x6401bd60
6401bce1:	mov    ebx,DWORD PTR ds:0x6405467c
6401bce7:	jmp    0x6401bcfa
6401bce9:	mov    edx,DWORD PTR [ebx+0x4]
6401bcec:	mov    edi,DWORD PTR [ebx]
6401bcee:	and    edx,DWORD PTR [ebp-0x8]
6401bcf1:	and    edi,esi
6401bcf3:	or     edx,edi
6401bcf5:	jne    0x6401bd01
6401bcf7:	add    ebx,0x14
6401bcfa:	cmp    ebx,ecx
6401bcfc:	mov    DWORD PTR [ebp+0x8],ebx
6401bcff:	jb     0x6401bce9
6401bd01:	cmp    ebx,ecx
6401bd03:	jne    0x6401bd60
6401bd05:	jmp    0x6401bd13
6401bd07:	cmp    DWORD PTR [ebx+0x8],0x0
6401bd0b:	jne    0x6401bd17
6401bd0d:	add    ebx,0x14
6401bd10:	mov    DWORD PTR [ebp+0x8],ebx
6401bd13:	cmp    ebx,eax
6401bd15:	jb     0x6401bd07
6401bd17:	cmp    ebx,eax
6401bd19:	jne    0x6401bd4c
6401bd1b:	mov    ebx,DWORD PTR ds:0x6405467c
6401bd21:	jmp    0x6401bd2c
6401bd23:	cmp    DWORD PTR [ebx+0x8],0x0
6401bd27:	jne    0x6401bd33
6401bd29:	add    ebx,0x14
6401bd2c:	cmp    ebx,ecx
6401bd2e:	mov    DWORD PTR [ebp+0x8],ebx
6401bd31:	jb     0x6401bd23
6401bd33:	cmp    ebx,ecx
6401bd35:	jne    0x6401bd4c
6401bd37:	call   0x6401b7e2
6401bd3c:	mov    ebx,eax
6401bd3e:	test   ebx,ebx
6401bd40:	mov    DWORD PTR [ebp+0x8],ebx
6401bd43:	jne    0x6401bd4c
6401bd45:	xor    eax,eax
6401bd47:	jmp    0x6401bf55
6401bd4c:	push   ebx
6401bd4d:	call   0x6401b892
6401bd52:	pop    ecx
6401bd53:	mov    ecx,DWORD PTR [ebx+0x10]
6401bd56:	mov    DWORD PTR [ecx],eax
6401bd58:	mov    eax,DWORD PTR [ebx+0x10]
6401bd5b:	cmp    DWORD PTR [eax],0xffffffff
6401bd5e:	je     0x6401bd45
6401bd60:	mov    DWORD PTR ds:0x64054684,ebx
6401bd66:	mov    eax,DWORD PTR [ebx+0x10]
6401bd69:	mov    edx,DWORD PTR [eax]
6401bd6b:	cmp    edx,0xffffffff
6401bd6e:	mov    DWORD PTR [ebp-0x4],edx
6401bd71:	je     0x6401bd87
6401bd73:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
6401bd7a:	mov    edi,DWORD PTR [eax+edx*4+0x44]
6401bd7e:	and    ecx,DWORD PTR [ebp-0x8]
6401bd81:	and    edi,esi
6401bd83:	or     ecx,edi
6401bd85:	jne    0x6401bdb0
6401bd87:	and    DWORD PTR [ebp-0x4],0x0
6401bd8b:	mov    edx,DWORD PTR [eax+0xc4]
6401bd91:	lea    ecx,[eax+0x44]
6401bd94:	mov    edi,DWORD PTR [ecx]
6401bd96:	and    edx,DWORD PTR [ebp-0x8]
6401bd99:	and    edi,esi
6401bd9b:	or     edx,edi
6401bd9d:	jne    0x6401bdad
6401bd9f:	inc    DWORD PTR [ebp-0x4]
6401bda2:	mov    edx,DWORD PTR [ecx+0x84]
6401bda8:	add    ecx,0x4
6401bdab:	jmp    0x6401bd94
6401bdad:	mov    edx,DWORD PTR [ebp-0x4]
6401bdb0:	mov    ecx,edx
6401bdb2:	imul   ecx,ecx,0x204
6401bdb8:	lea    ecx,[ecx+eax*1+0x144]
6401bdbf:	mov    DWORD PTR [ebp-0xc],ecx
6401bdc2:	mov    ecx,DWORD PTR [eax+edx*4+0x44]
6401bdc6:	xor    edi,edi
6401bdc8:	and    ecx,esi
6401bdca:	jne    0x6401bdde
6401bdcc:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
6401bdd3:	and    ecx,DWORD PTR [ebp-0x8]
6401bdd6:	push   0x20
6401bdd8:	pop    edi
6401bdd9:	jmp    0x6401bdde
6401bddb:	add    ecx,ecx
6401bddd:	inc    edi
6401bdde:	test   ecx,ecx
6401bde0:	jge    0x6401bddb
6401bde2:	mov    ecx,DWORD PTR [ebp-0xc]
6401bde5:	mov    edx,DWORD PTR [ecx+edi*8+0x4]
6401bde9:	mov    ecx,DWORD PTR [edx]
6401bdeb:	sub    ecx,DWORD PTR [ebp-0x10]
6401bdee:	mov    esi,ecx
6401bdf0:	sar    esi,0x4
6401bdf3:	dec    esi
6401bdf4:	cmp    esi,0x3f
6401bdf7:	mov    DWORD PTR [ebp-0x8],ecx
6401bdfa:	jle    0x6401bdff
6401bdfc:	push   0x3f
6401bdfe:	pop    esi
6401bdff:	cmp    esi,edi
6401be01:	je     0x6401bf08
6401be07:	mov    ecx,DWORD PTR [edx+0x4]
6401be0a:	cmp    ecx,DWORD PTR [edx+0x8]
6401be0d:	jne    0x6401be6b
6401be0f:	cmp    edi,0x20
6401be12:	mov    ebx,0x80000000
6401be17:	jge    0x6401be3f
6401be19:	mov    ecx,edi
6401be1b:	shr    ebx,cl
6401be1d:	mov    ecx,DWORD PTR [ebp-0x4]
6401be20:	lea    edi,[eax+edi*1+0x4]
6401be24:	not    ebx
6401be26:	mov    DWORD PTR [ebp-0x14],ebx
6401be29:	and    ebx,DWORD PTR [eax+ecx*4+0x44]
6401be2d:	mov    DWORD PTR [eax+ecx*4+0x44],ebx
6401be31:	dec    BYTE PTR [edi]
6401be33:	jne    0x6401be68
6401be35:	mov    ecx,DWORD PTR [ebp-0x14]
6401be38:	mov    ebx,DWORD PTR [ebp+0x8]
6401be3b:	and    DWORD PTR [ebx],ecx
6401be3d:	jmp    0x6401be6b
6401be3f:	lea    ecx,[edi-0x20]
6401be42:	shr    ebx,cl
6401be44:	mov    ecx,DWORD PTR [ebp-0x4]
6401be47:	lea    ecx,[eax+ecx*4+0xc4]
6401be4e:	lea    edi,[eax+edi*1+0x4]
6401be52:	not    ebx
6401be54:	and    DWORD PTR [ecx],ebx
6401be56:	dec    BYTE PTR [edi]
6401be58:	mov    DWORD PTR [ebp-0x14],ebx
6401be5b:	jne    0x6401be68
6401be5d:	mov    ebx,DWORD PTR [ebp+0x8]
6401be60:	mov    ecx,DWORD PTR [ebp-0x14]
6401be63:	and    DWORD PTR [ebx+0x4],ecx
6401be66:	jmp    0x6401be6b
6401be68:	mov    ebx,DWORD PTR [ebp+0x8]
6401be6b:	cmp    DWORD PTR [ebp-0x8],0x0
6401be6f:	mov    ecx,DWORD PTR [edx+0x8]
6401be72:	mov    edi,DWORD PTR [edx+0x4]
6401be75:	mov    DWORD PTR [ecx+0x4],edi
6401be78:	mov    ecx,DWORD PTR [edx+0x4]
6401be7b:	mov    edi,DWORD PTR [edx+0x8]
6401be7e:	mov    DWORD PTR [ecx+0x8],edi
6401be81:	je     0x6401bf14
6401be87:	mov    ecx,DWORD PTR [ebp-0xc]
6401be8a:	lea    ecx,[ecx+esi*8]
6401be8d:	mov    edi,DWORD PTR [ecx+0x4]
6401be90:	mov    DWORD PTR [edx+0x8],ecx
6401be93:	mov    DWORD PTR [edx+0x4],edi
6401be96:	mov    DWORD PTR [ecx+0x4],edx
6401be99:	mov    ecx,DWORD PTR [edx+0x4]
6401be9c:	mov    DWORD PTR [ecx+0x8],edx
6401be9f:	mov    ecx,DWORD PTR [edx+0x4]
6401bea2:	cmp    ecx,DWORD PTR [edx+0x8]
6401bea5:	jne    0x6401bf05
6401bea7:	mov    cl,BYTE PTR [esi+eax*1+0x4]
6401beab:	mov    BYTE PTR [ebp+0xb],cl
6401beae:	inc    cl
6401beb0:	cmp    esi,0x20
6401beb3:	mov    BYTE PTR [esi+eax*1+0x4],cl
6401beb7:	jge    0x6401bedc
6401beb9:	cmp    BYTE PTR [ebp+0xb],0x0
6401bebd:	jne    0x6401beca
6401bebf:	mov    edi,0x80000000
6401bec4:	mov    ecx,esi
6401bec6:	shr    edi,cl
6401bec8:	or     DWORD PTR [ebx],edi
6401beca:	mov    ecx,esi
6401becc:	mov    edi,0x80000000
6401bed1:	shr    edi,cl
6401bed3:	mov    ecx,DWORD PTR [ebp-0x4]
6401bed6:	or     DWORD PTR [eax+ecx*4+0x44],edi
6401beda:	jmp    0x6401bf05
6401bedc:	cmp    BYTE PTR [ebp+0xb],0x0
6401bee0:	jne    0x6401beef
6401bee2:	lea    ecx,[esi-0x20]
6401bee5:	mov    edi,0x80000000
6401beea:	shr    edi,cl
6401beec:	or     DWORD PTR [ebx+0x4],edi
6401beef:	mov    ecx,DWORD PTR [ebp-0x4]
6401bef2:	lea    edi,[eax+ecx*4+0xc4]
6401bef9:	lea    ecx,[esi-0x20]
6401befc:	mov    esi,0x80000000
6401bf01:	shr    esi,cl
6401bf03:	or     DWORD PTR [edi],esi
6401bf05:	mov    ecx,DWORD PTR [ebp-0x8]
6401bf08:	test   ecx,ecx
6401bf0a:	je     0x6401bf17
6401bf0c:	mov    DWORD PTR [edx],ecx
6401bf0e:	mov    DWORD PTR [ecx+edx*1-0x4],ecx
6401bf12:	jmp    0x6401bf17
6401bf14:	mov    ecx,DWORD PTR [ebp-0x8]
6401bf17:	mov    esi,DWORD PTR [ebp-0x10]
6401bf1a:	add    edx,ecx
6401bf1c:	lea    ecx,[esi+0x1]
6401bf1f:	mov    DWORD PTR [edx],ecx
6401bf21:	mov    DWORD PTR [edx+esi*1-0x4],ecx
6401bf25:	mov    esi,DWORD PTR [ebp-0xc]
6401bf28:	mov    ecx,DWORD PTR [esi]
6401bf2a:	test   ecx,ecx
6401bf2c:	lea    edi,[ecx+0x1]
6401bf2f:	mov    DWORD PTR [esi],edi
6401bf31:	jne    0x6401bf4d
6401bf33:	cmp    ebx,DWORD PTR ds:0x64054050
6401bf39:	jne    0x6401bf4d
6401bf3b:	mov    ecx,DWORD PTR [ebp-0x4]
6401bf3e:	cmp    ecx,DWORD PTR ds:0x6405468c
6401bf44:	jne    0x6401bf4d
6401bf46:	and    DWORD PTR ds:0x64054050,0x0
6401bf4d:	mov    ecx,DWORD PTR [ebp-0x4]
6401bf50:	mov    DWORD PTR [eax],ecx
6401bf52:	lea    eax,[edx+0x4]
6401bf55:	pop    edi
6401bf56:	pop    esi
6401bf57:	pop    ebx
6401bf58:	leave  
6401bf59:	ret    
6401bf5a:	int3   
6401bf5b:	int3   
6401bf5c:	int3   
6401bf5d:	int3   
6401bf5e:	int3   
6401bf5f:	int3   
6401bf60:	push   ebp
6401bf61:	mov    ebp,esp
6401bf63:	push   edi
6401bf64:	mov    edi,DWORD PTR [ebp+0x8]
6401bf67:	xor    eax,eax
6401bf69:	or     ecx,0xffffffff
6401bf6c:	repnz scas al,BYTE PTR es:[edi]
6401bf6e:	add    ecx,0x1
6401bf71:	neg    ecx
6401bf73:	sub    edi,0x1
6401bf76:	mov    al,BYTE PTR [ebp+0xc]
6401bf79:	std    
6401bf7a:	repnz scas al,BYTE PTR es:[edi]
6401bf7c:	add    edi,0x1
6401bf7f:	cmp    BYTE PTR [edi],al
6401bf81:	je     0x6401bf87
6401bf83:	xor    eax,eax
6401bf85:	jmp    0x6401bf89
6401bf87:	mov    eax,edi
6401bf89:	cld    
6401bf8a:	pop    edi
6401bf8b:	leave  
6401bf8c:	ret    
6401bf8d:	push   ecx
6401bf8e:	push   ebx
6401bf8f:	mov    ebx,DWORD PTR [esp+0xc]
6401bf93:	push   esi
6401bf94:	push   edi
6401bf95:	xor    esi,esi
6401bf97:	xor    edi,edi
6401bf99:	cmp    ebx,DWORD PTR [edi*8+0x64052f20]
6401bfa0:	je     0x6401bfa8
6401bfa2:	inc    edi
6401bfa3:	cmp    edi,0x17
6401bfa6:	jb     0x6401bf99
6401bfa8:	cmp    edi,0x17
6401bfab:	jae    0x6401c128
6401bfb1:	push   ebp
6401bfb2:	push   0x3
6401bfb4:	call   0x6401f08a
6401bfb9:	cmp    eax,0x1
6401bfbc:	pop    ecx
6401bfbd:	je     0x6401c0f4
6401bfc3:	push   0x3
6401bfc5:	call   0x6401f08a
6401bfca:	test   eax,eax
6401bfcc:	pop    ecx
6401bfcd:	jne    0x6401bfdc
6401bfcf:	cmp    DWORD PTR ds:0x64053a04,0x1
6401bfd6:	je     0x6401c0f4
6401bfdc:	cmp    ebx,0xfc
6401bfe2:	je     0x6401c127
6401bfe8:	push   0x64040f90
6401bfed:	mov    ebx,0x314
6401bff2:	push   ebx
6401bff3:	mov    ebp,0x64054058
6401bff8:	push   ebp
6401bff9:	call   0x640164bd
6401bffe:	add    esp,0xc
6401c001:	test   eax,eax
6401c003:	je     0x6401c012
6401c005:	push   esi
6401c006:	push   esi
6401c007:	push   esi
6401c008:	push   esi
6401c009:	push   esi
6401c00a:	call   0x64013cf6
6401c00f:	add    esp,0x14
6401c012:	push   0x104
6401c017:	mov    esi,0x64054071
6401c01c:	push   esi
6401c01d:	push   0x0
6401c01f:	mov    BYTE PTR ds:0x64054175,0x0
6401c026:	call   DWORD PTR ds:0x6402c148
6401c02c:	test   eax,eax
6401c02e:	jne    0x6401c056
6401c030:	push   0x64040f78
6401c035:	push   0x2fb
6401c03a:	push   esi
6401c03b:	call   0x640164bd
6401c040:	add    esp,0xc
6401c043:	test   eax,eax
6401c045:	je     0x6401c056
6401c047:	xor    eax,eax
6401c049:	push   eax
6401c04a:	push   eax
6401c04b:	push   eax
6401c04c:	push   eax
6401c04d:	push   eax
6401c04e:	call   0x64013cf6
6401c053:	add    esp,0x14
6401c056:	push   esi
6401c057:	call   0x64015aa0
6401c05c:	inc    eax
6401c05d:	cmp    eax,0x3c
6401c060:	pop    ecx
6401c061:	jbe    0x6401c09b
6401c063:	push   esi
6401c064:	call   0x64015aa0
6401c069:	sub    esi,0x3b
6401c06c:	add    eax,esi
6401c06e:	push   0x3
6401c070:	mov    ecx,0x6405436c
6401c075:	push   0x64040f74
6401c07a:	sub    ecx,eax
6401c07c:	push   ecx
6401c07d:	push   eax
6401c07e:	call   0x6401dfe6
6401c083:	add    esp,0x14
6401c086:	test   eax,eax
6401c088:	je     0x6401c09b
6401c08a:	xor    esi,esi
6401c08c:	push   esi
6401c08d:	push   esi
6401c08e:	push   esi
6401c08f:	push   esi
6401c090:	push   esi
6401c091:	call   0x64013cf6
6401c096:	add    esp,0x14
6401c099:	jmp    0x6401c09d
6401c09b:	xor    esi,esi
6401c09d:	push   0x64040f70
6401c0a2:	push   ebx
6401c0a3:	push   ebp
6401c0a4:	call   0x6401df24
6401c0a9:	add    esp,0xc
6401c0ac:	test   eax,eax
6401c0ae:	je     0x6401c0bd
6401c0b0:	push   esi
6401c0b1:	push   esi
6401c0b2:	push   esi
6401c0b3:	push   esi
6401c0b4:	push   esi
6401c0b5:	call   0x64013cf6
6401c0ba:	add    esp,0x14
6401c0bd:	push   DWORD PTR [edi*8+0x64052f24]
6401c0c4:	push   ebx
6401c0c5:	push   ebp
6401c0c6:	call   0x6401df24
6401c0cb:	add    esp,0xc
6401c0ce:	test   eax,eax
6401c0d0:	je     0x6401c0df
6401c0d2:	push   esi
6401c0d3:	push   esi
6401c0d4:	push   esi
6401c0d5:	push   esi
6401c0d6:	push   esi
6401c0d7:	call   0x64013cf6
6401c0dc:	add    esp,0x14
6401c0df:	push   0x12010
6401c0e4:	push   0x64040f48
6401c0e9:	push   ebp
6401c0ea:	call   0x6401eecd
6401c0ef:	add    esp,0xc
6401c0f2:	jmp    0x6401c127
6401c0f4:	push   0xfffffff4
6401c0f6:	call   DWORD PTR ds:0x6402c110
6401c0fc:	mov    ebp,eax
6401c0fe:	cmp    ebp,esi
6401c100:	je     0x6401c127
6401c102:	cmp    ebp,0xffffffff
6401c105:	je     0x6401c127
6401c107:	push   0x0
6401c109:	lea    eax,[esp+0x14]
6401c10d:	push   eax
6401c10e:	lea    esi,[edi*8+0x64052f24]
6401c115:	push   DWORD PTR [esi]
6401c117:	call   0x64015aa0
6401c11c:	pop    ecx
6401c11d:	push   eax
6401c11e:	push   DWORD PTR [esi]
6401c120:	push   ebp
6401c121:	call   DWORD PTR ds:0x6402c094
6401c127:	pop    ebp
6401c128:	pop    edi
6401c129:	pop    esi
6401c12a:	pop    ebx
6401c12b:	pop    ecx
6401c12c:	ret    
6401c12d:	push   0x3
6401c12f:	call   0x6401f08a
6401c134:	cmp    eax,0x1
6401c137:	pop    ecx
6401c138:	je     0x6401c14f
6401c13a:	push   0x3
6401c13c:	call   0x6401f08a
6401c141:	test   eax,eax
6401c143:	pop    ecx
6401c144:	jne    0x6401c165
6401c146:	cmp    DWORD PTR ds:0x64053a04,0x1
6401c14d:	jne    0x6401c165
6401c14f:	push   0xfc
6401c154:	call   0x6401bf8d
6401c159:	push   0xff
6401c15e:	call   0x6401bf8d
6401c163:	pop    ecx
6401c164:	pop    ecx
6401c165:	ret    
6401c166:	push   ebp
6401c167:	mov    ebp,esp
6401c169:	mov    eax,0xffff
6401c16e:	sub    esp,0x14
6401c171:	cmp    WORD PTR [ebp+0x8],ax
6401c175:	je     0x6401c211
6401c17b:	push   ebx
6401c17c:	push   DWORD PTR [ebp+0xc]
6401c17f:	lea    ecx,[ebp-0x14]
6401c182:	call   0x640142c5
6401c187:	mov    ecx,DWORD PTR [ebp-0x14]
6401c18a:	mov    edx,DWORD PTR [ecx+0x14]
6401c18d:	xor    ebx,ebx
6401c18f:	cmp    edx,ebx
6401c191:	jne    0x6401c1a7
6401c193:	mov    eax,DWORD PTR [ebp+0x8]
6401c196:	lea    ecx,[eax-0x41]
6401c199:	cmp    cx,0x19
6401c19d:	ja     0x6401c1a2
6401c19f:	add    eax,0x20
6401c1a2:	movzx  eax,ax
6401c1a5:	jmp    0x6401c204
6401c1a7:	mov    eax,0x100
6401c1ac:	cmp    WORD PTR [ebp+0x8],ax
6401c1b0:	jae    0x6401c1db
6401c1b2:	lea    eax,[ebp-0x14]
6401c1b5:	push   eax
6401c1b6:	push   0x1
6401c1b8:	push   DWORD PTR [ebp+0x8]
6401c1bb:	call   0x6401c213
6401c1c0:	add    esp,0xc
6401c1c3:	test   eax,eax
6401c1c5:	movzx  eax,WORD PTR [ebp+0x8]
6401c1c9:	je     0x6401c204
6401c1cb:	mov    ecx,DWORD PTR [ebp-0x14]
6401c1ce:	mov    ecx,DWORD PTR [ecx+0xcc]
6401c1d4:	movzx  ax,BYTE PTR [ecx+eax*1]
6401c1d9:	jmp    0x6401c1a2
6401c1db:	push   DWORD PTR [ecx+0x4]
6401c1de:	lea    ecx,[ebp-0x4]
6401c1e1:	push   0x1
6401c1e3:	push   ecx
6401c1e4:	push   0x1
6401c1e6:	lea    ecx,[ebp+0x8]
6401c1e9:	push   ecx
6401c1ea:	push   eax
6401c1eb:	push   edx
6401c1ec:	lea    eax,[ebp-0x14]
6401c1ef:	push   eax
6401c1f0:	call   0x6401964f
6401c1f5:	add    esp,0x20
6401c1f8:	test   eax,eax
6401c1fa:	movzx  eax,WORD PTR [ebp+0x8]
6401c1fe:	je     0x6401c204
6401c200:	movzx  eax,WORD PTR [ebp-0x4]
6401c204:	cmp    BYTE PTR [ebp-0x8],bl
6401c207:	je     0x6401c210
6401c209:	mov    ecx,DWORD PTR [ebp-0xc]
6401c20c:	and    DWORD PTR [ecx+0x70],0xfffffffd
6401c210:	pop    ebx
6401c211:	leave  
6401c212:	ret    
6401c213:	push   ebp
6401c214:	mov    ebp,esp
6401c216:	sub    esp,0x14
6401c219:	cmp    WORD PTR [ebp+0x8],0xffff
6401c21f:	jne    0x6401c227
6401c221:	and    DWORD PTR [ebp-0x4],0x0
6401c225:	jmp    0x6401c289
6401c227:	cmp    WORD PTR [ebp+0x8],0x100
6401c22d:	jae    0x6401c249
6401c22f:	movzx  eax,WORD PTR [ebp+0x8]
6401c233:	mov    ecx,DWORD PTR ds:0x640522c8
6401c239:	mov    ax,WORD PTR [ecx+eax*2]
6401c23d:	and    ax,WORD PTR [ebp+0xc]
6401c241:	movzx  eax,ax
6401c244:	mov    DWORD PTR [ebp-0x4],eax
6401c247:	jmp    0x6401c289
6401c249:	push   DWORD PTR [ebp+0x10]
6401c24c:	lea    ecx,[ebp-0x14]
6401c24f:	call   0x640142c5
6401c254:	mov    eax,DWORD PTR [ebp-0x14]
6401c257:	push   DWORD PTR [eax+0x14]
6401c25a:	push   DWORD PTR [eax+0x4]
6401c25d:	lea    eax,[ebp-0x4]
6401c260:	push   eax
6401c261:	push   0x1
6401c263:	lea    eax,[ebp+0x8]
6401c266:	push   eax
6401c267:	lea    eax,[ebp-0x14]
6401c26a:	push   0x1
6401c26c:	push   eax
6401c26d:	call   0x6401fd78
6401c272:	add    esp,0x1c
6401c275:	test   eax,eax
6401c277:	jne    0x6401c27c
6401c279:	and    DWORD PTR [ebp-0x4],eax
6401c27c:	cmp    BYTE PTR [ebp-0x8],0x0
6401c280:	je     0x6401c289
6401c282:	mov    eax,DWORD PTR [ebp-0xc]
6401c285:	and    DWORD PTR [eax+0x70],0xfffffffd
6401c289:	movzx  eax,WORD PTR [ebp-0x4]
6401c28d:	movzx  ecx,WORD PTR [ebp+0xc]
6401c291:	and    eax,ecx
6401c293:	leave  
6401c294:	ret    
6401c295:	ret    
6401c296:	mov    eax,0x64020843
6401c29b:	mov    ds:0x640530f0,eax
6401c2a0:	mov    DWORD PTR ds:0x640530f4,0x6401ff3f
6401c2aa:	mov    DWORD PTR ds:0x640530f8,0x6401fefd
6401c2b4:	mov    DWORD PTR ds:0x640530fc,0x6401ff31
6401c2be:	mov    DWORD PTR ds:0x64053100,0x6401fea7
6401c2c8:	mov    ds:0x64053104,eax
6401c2cd:	mov    DWORD PTR ds:0x64053108,0x640207bd
6401c2d7:	mov    DWORD PTR ds:0x6405310c,0x6401febd
6401c2e1:	mov    DWORD PTR ds:0x64053110,0x6401fe27
6401c2eb:	mov    DWORD PTR ds:0x64053114,0x6401fdb6
6401c2f5:	ret    
6401c2f6:	call   0x6401c296
6401c2fb:	call   0x640208c9
6401c300:	cmp    DWORD PTR [esp+0x4],0x0
6401c305:	mov    ds:0x64054374,eax
6401c30a:	je     0x6401c311
6401c30c:	call   0x64020864
6401c311:	fnclex 
6401c313:	ret    
6401c314:	push   ebp
6401c315:	lea    ebp,[esp-0x3f4]
6401c31c:	sub    esp,0x474
6401c322:	mov    eax,ds:0x640521ac
6401c327:	xor    eax,ebp
6401c329:	mov    DWORD PTR [ebp+0x3f0],eax
6401c32f:	mov    eax,DWORD PTR [ebp+0x3fc]
6401c335:	push   ebx
6401c336:	mov    ebx,DWORD PTR [ebp+0x408]
6401c33c:	push   esi
6401c33d:	mov    esi,DWORD PTR [ebp+0x400]
6401c343:	push   edi
6401c344:	push   DWORD PTR [ebp+0x404]
6401c34a:	xor    edi,edi
6401c34c:	lea    ecx,[ebp-0x64]
6401c34f:	mov    DWORD PTR [ebp-0x3c],eax
6401c352:	mov    DWORD PTR [ebp-0x28],ebx
6401c355:	mov    DWORD PTR [ebp-0x54],edi
6401c358:	mov    DWORD PTR [ebp-0x14],edi
6401c35b:	mov    DWORD PTR [ebp-0x38],edi
6401c35e:	mov    DWORD PTR [ebp-0x18],edi
6401c361:	mov    DWORD PTR [ebp-0x30],edi
6401c364:	mov    DWORD PTR [ebp-0x48],edi
6401c367:	mov    DWORD PTR [ebp-0x34],edi
6401c36a:	call   0x640142c5
6401c36f:	cmp    DWORD PTR [ebp-0x3c],edi
6401c372:	jne    0x6401c3a1
6401c374:	call   0x64016663
6401c379:	push   edi
6401c37a:	push   edi
6401c37b:	push   edi
6401c37c:	push   edi
6401c37d:	mov    DWORD PTR [eax],0x16
6401c383:	push   edi
6401c384:	call   0x64013df2
6401c389:	add    esp,0x14
6401c38c:	cmp    BYTE PTR [ebp-0x58],0x0
6401c390:	je     0x6401c399
6401c392:	mov    eax,DWORD PTR [ebp-0x5c]
6401c395:	and    DWORD PTR [eax+0x70],0xfffffffd
6401c399:	or     eax,0xffffffff
6401c39c:	jmp    0x6401cbec
6401c3a1:	cmp    esi,edi
6401c3a3:	je     0x6401c374
6401c3a5:	movzx  edx,WORD PTR [esi]
6401c3a8:	xor    ecx,ecx
6401c3aa:	cmp    dx,di
6401c3ad:	mov    DWORD PTR [ebp-0x2c],edi
6401c3b0:	mov    DWORD PTR [ebp-0x20],edi
6401c3b3:	mov    DWORD PTR [ebp-0x50],edi
6401c3b6:	mov    DWORD PTR [ebp-0x24],edx
6401c3b9:	je     0x6401cbdc
6401c3bf:	push   0x2
6401c3c1:	pop    edi
6401c3c2:	add    esi,edi
6401c3c4:	cmp    DWORD PTR [ebp-0x2c],0x0
6401c3c8:	mov    DWORD PTR [ebp-0x4c],esi
6401c3cb:	jl     0x6401cbdc
6401c3d1:	lea    eax,[edx-0x20]
6401c3d4:	cmp    ax,0x58
6401c3d8:	ja     0x6401c3e9
6401c3da:	movzx  eax,dx
6401c3dd:	movzx  eax,BYTE PTR [eax+0x64040970]
6401c3e4:	and    eax,0xf
6401c3e7:	jmp    0x6401c3eb
6401c3e9:	xor    eax,eax
6401c3eb:	movsx  eax,BYTE PTR [ecx+eax*8+0x64040990]
6401c3f3:	push   0x7
6401c3f5:	sar    eax,0x4
6401c3f8:	pop    ecx
6401c3f9:	cmp    eax,ecx
6401c3fb:	mov    DWORD PTR [ebp-0x68],eax
6401c3fe:	ja     0x6401cbaa
6401c404:	jmp    DWORD PTR [eax*4+0x6401cc04]
6401c40b:	xor    eax,eax
6401c40d:	or     DWORD PTR [ebp-0x18],0xffffffff
6401c411:	mov    DWORD PTR [ebp-0x6c],eax
6401c414:	mov    DWORD PTR [ebp-0x48],eax
6401c417:	mov    DWORD PTR [ebp-0x38],eax
6401c41a:	mov    DWORD PTR [ebp-0x30],eax
6401c41d:	mov    DWORD PTR [ebp-0x14],eax
6401c420:	mov    DWORD PTR [ebp-0x34],eax
6401c423:	jmp    0x6401cbaa
6401c428:	movzx  eax,dx
6401c42b:	sub    eax,0x20
6401c42e:	je     0x6401c46e
6401c430:	sub    eax,0x3
6401c433:	je     0x6401c462
6401c435:	sub    eax,0x8
6401c438:	je     0x6401c459
6401c43a:	sub    eax,edi
6401c43c:	je     0x6401c450
6401c43e:	sub    eax,0x3
6401c441:	jne    0x6401cbaa
6401c447:	or     DWORD PTR [ebp-0x14],0x8
6401c44b:	jmp    0x6401cbaa
6401c450:	or     DWORD PTR [ebp-0x14],0x4
6401c454:	jmp    0x6401cbaa
6401c459:	or     DWORD PTR [ebp-0x14],0x1
6401c45d:	jmp    0x6401cbaa
6401c462:	or     DWORD PTR [ebp-0x14],0x80
6401c469:	jmp    0x6401cbaa
6401c46e:	or     DWORD PTR [ebp-0x14],edi
6401c471:	jmp    0x6401cbaa
6401c476:	cmp    dx,0x2a
6401c47a:	jne    0x6401c49c
6401c47c:	add    ebx,0x4
6401c47f:	mov    DWORD PTR [ebp-0x28],ebx
6401c482:	mov    ebx,DWORD PTR [ebx-0x4]
6401c485:	test   ebx,ebx
6401c487:	mov    DWORD PTR [ebp-0x38],ebx
6401c48a:	jge    0x6401cbaa
6401c490:	or     DWORD PTR [ebp-0x14],0x4
6401c494:	neg    DWORD PTR [ebp-0x38]
6401c497:	jmp    0x6401cbaa
6401c49c:	mov    eax,DWORD PTR [ebp-0x38]
6401c49f:	imul   eax,eax,0xa
6401c4a2:	movzx  ecx,dx
6401c4a5:	lea    eax,[eax+ecx*1-0x30]
6401c4a9:	mov    DWORD PTR [ebp-0x38],eax
6401c4ac:	jmp    0x6401cbaa
6401c4b1:	and    DWORD PTR [ebp-0x18],0x0
6401c4b5:	jmp    0x6401cbaa
6401c4ba:	cmp    dx,0x2a
6401c4be:	jne    0x6401c4dd
6401c4c0:	add    ebx,0x4
6401c4c3:	mov    DWORD PTR [ebp-0x28],ebx
6401c4c6:	mov    ebx,DWORD PTR [ebx-0x4]
6401c4c9:	test   ebx,ebx
6401c4cb:	mov    DWORD PTR [ebp-0x18],ebx
6401c4ce:	jge    0x6401cbaa
6401c4d4:	or     DWORD PTR [ebp-0x18],0xffffffff
6401c4d8:	jmp    0x6401cbaa
6401c4dd:	mov    eax,DWORD PTR [ebp-0x18]
6401c4e0:	imul   eax,eax,0xa
6401c4e3:	movzx  ecx,dx
6401c4e6:	lea    eax,[eax+ecx*1-0x30]
6401c4ea:	mov    DWORD PTR [ebp-0x18],eax
6401c4ed:	jmp    0x6401cbaa
6401c4f2:	movzx  eax,dx
6401c4f5:	cmp    eax,0x49
6401c4f8:	je     0x6401c542
6401c4fa:	cmp    eax,0x68
6401c4fd:	je     0x6401c539
6401c4ff:	cmp    eax,0x6c
6401c502:	je     0x6401c519
6401c504:	cmp    eax,0x77
6401c507:	jne    0x6401cbaa
6401c50d:	or     DWORD PTR [ebp-0x14],0x800
6401c514:	jmp    0x6401cbaa
6401c519:	cmp    WORD PTR [esi],0x6c
6401c51d:	jne    0x6401c530
6401c51f:	add    esi,edi
6401c521:	or     DWORD PTR [ebp-0x14],0x1000
6401c528:	mov    DWORD PTR [ebp-0x4c],esi
6401c52b:	jmp    0x6401cbaa
6401c530:	or     DWORD PTR [ebp-0x14],0x10
6401c534:	jmp    0x6401cbaa
6401c539:	or     DWORD PTR [ebp-0x14],0x20
6401c53d:	jmp    0x6401cbaa
6401c542:	movzx  eax,WORD PTR [esi]
6401c545:	cmp    ax,0x36
6401c549:	jne    0x6401c564
6401c54b:	cmp    WORD PTR [esi+0x2],0x34
6401c550:	jne    0x6401c564
6401c552:	add    esi,0x4
6401c555:	or     DWORD PTR [ebp-0x14],0x8000
6401c55c:	mov    DWORD PTR [ebp-0x4c],esi
6401c55f:	jmp    0x6401cbaa
6401c564:	cmp    ax,0x33
6401c568:	jne    0x6401c583
6401c56a:	cmp    WORD PTR [esi+0x2],0x32
6401c56f:	jne    0x6401c583
6401c571:	add    esi,0x4
6401c574:	and    DWORD PTR [ebp-0x14],0xffff7fff
6401c57b:	mov    DWORD PTR [ebp-0x4c],esi
6401c57e:	jmp    0x6401cbaa
6401c583:	cmp    ax,0x64
6401c587:	je     0x6401cbaa
6401c58d:	cmp    ax,0x69
6401c591:	je     0x6401cbaa
6401c597:	cmp    ax,0x6f
6401c59b:	je     0x6401cbaa
6401c5a1:	cmp    ax,0x75
6401c5a5:	je     0x6401cbaa
6401c5ab:	cmp    ax,0x78
6401c5af:	je     0x6401cbaa
6401c5b5:	cmp    ax,0x58
6401c5b9:	je     0x6401cbaa
6401c5bf:	and    DWORD PTR [ebp-0x68],0x0
6401c5c3:	mov    eax,DWORD PTR [ebp-0x3c]
6401c5c6:	push   edx
6401c5c7:	lea    esi,[ebp-0x2c]
6401c5ca:	mov    DWORD PTR [ebp-0x34],0x1
6401c5d1:	call   0x6401cc24
6401c5d6:	jmp    0x6401cba9
6401c5db:	movzx  eax,dx
6401c5de:	cmp    eax,0x64
6401c5e1:	jg     0x6401c78e
6401c5e7:	je     0x6401c80d
6401c5ed:	cmp    eax,0x53
6401c5f0:	jg     0x6401c6cd
6401c5f6:	je     0x6401c657
6401c5f8:	sub    eax,0x41
6401c5fb:	je     0x6401c60d
6401c5fd:	sub    eax,edi
6401c5ff:	je     0x6401c642
6401c601:	sub    eax,edi
6401c603:	je     0x6401c60d
6401c605:	sub    eax,edi
6401c607:	jne    0x6401ca8e
6401c60d:	add    edx,0x20
6401c610:	mov    DWORD PTR [ebp-0x6c],0x1
6401c617:	mov    DWORD PTR [ebp-0x24],edx
6401c61a:	or     DWORD PTR [ebp-0x14],0x40
6401c61e:	cmp    DWORD PTR [ebp-0x18],0x0
6401c622:	lea    esi,[ebp-0x10]
6401c625:	mov    eax,0x200
6401c62a:	mov    DWORD PTR [ebp-0x1c],esi
6401c62d:	mov    DWORD PTR [ebp-0x20],eax
6401c630:	jge    0x6401c831
6401c636:	mov    DWORD PTR [ebp-0x18],0x6
6401c63d:	jmp    0x6401c87e
6401c642:	test   WORD PTR [ebp-0x14],0x830
6401c648:	jne    0x6401c6ea
6401c64e:	or     DWORD PTR [ebp-0x14],0x20
6401c652:	jmp    0x6401c6ea
6401c657:	test   WORD PTR [ebp-0x14],0x830
6401c65d:	jne    0x6401c663
6401c65f:	or     DWORD PTR [ebp-0x14],0x20
6401c663:	mov    edi,DWORD PTR [ebp-0x18]
6401c666:	cmp    edi,0xffffffff
6401c669:	jne    0x6401c670
6401c66b:	mov    edi,0x7fffffff
6401c670:	add    ebx,0x4
6401c673:	test   BYTE PTR [ebp-0x14],0x20
6401c677:	mov    DWORD PTR [ebp-0x28],ebx
6401c67a:	mov    ebx,DWORD PTR [ebx-0x4]
6401c67d:	mov    DWORD PTR [ebp-0x1c],ebx
6401c680:	je     0x6401ca61
6401c686:	test   ebx,ebx
6401c688:	jne    0x6401c692
6401c68a:	mov    eax,ds:0x64052df0
6401c68f:	mov    DWORD PTR [ebp-0x1c],eax
6401c692:	and    DWORD PTR [ebp-0x20],0x0
6401c696:	test   edi,edi
6401c698:	mov    esi,DWORD PTR [ebp-0x1c]
6401c69b:	jle    0x6401ca8e
6401c6a1:	mov    al,BYTE PTR [esi]
6401c6a3:	test   al,al
6401c6a5:	je     0x6401ca8e
6401c6ab:	lea    ecx,[ebp-0x64]
6401c6ae:	movzx  eax,al
6401c6b1:	push   ecx
6401c6b2:	push   eax
6401c6b3:	call   0x640150b7
6401c6b8:	test   eax,eax
6401c6ba:	pop    ecx
6401c6bb:	pop    ecx
6401c6bc:	je     0x6401c6bf
6401c6be:	inc    esi
6401c6bf:	inc    esi
6401c6c0:	inc    DWORD PTR [ebp-0x20]
6401c6c3:	cmp    DWORD PTR [ebp-0x20],edi
6401c6c6:	jl     0x6401c6a1
6401c6c8:	jmp    0x6401ca8e
6401c6cd:	sub    eax,0x58
6401c6d0:	je     0x6401c919
6401c6d6:	sub    eax,edi
6401c6d8:	je     0x6401c741
6401c6da:	sub    eax,ecx
6401c6dc:	je     0x6401c61a
6401c6e2:	sub    eax,edi
6401c6e4:	jne    0x6401ca8e
6401c6ea:	movzx  eax,WORD PTR [ebx]
6401c6ed:	add    ebx,0x4
6401c6f0:	xor    esi,esi
6401c6f2:	inc    esi
6401c6f3:	test   BYTE PTR [ebp-0x14],0x20
6401c6f7:	mov    DWORD PTR [ebp-0x34],esi
6401c6fa:	mov    DWORD PTR [ebp-0x28],ebx
6401c6fd:	mov    DWORD PTR [ebp-0x70],eax
6401c700:	je     0x6401c72f
6401c702:	mov    BYTE PTR [ebp-0x40],al
6401c705:	lea    eax,[ebp-0x64]
6401c708:	push   eax
6401c709:	mov    eax,DWORD PTR [ebp-0x64]
6401c70c:	mov    BYTE PTR [ebp-0x3f],0x0
6401c710:	push   DWORD PTR [eax+0xac]
6401c716:	lea    eax,[ebp-0x40]
6401c719:	push   eax
6401c71a:	lea    eax,[ebp-0x10]
6401c71d:	push   eax
6401c71e:	call   0x6401eda3
6401c723:	add    esp,0x10
6401c726:	test   eax,eax
6401c728:	jge    0x6401c733
6401c72a:	mov    DWORD PTR [ebp-0x48],esi
6401c72d:	jmp    0x6401c733
6401c72f:	mov    WORD PTR [ebp-0x10],ax
6401c733:	lea    eax,[ebp-0x10]
6401c736:	mov    DWORD PTR [ebp-0x1c],eax
6401c739:	mov    DWORD PTR [ebp-0x20],esi
6401c73c:	jmp    0x6401ca8e
6401c741:	mov    eax,DWORD PTR [ebx]
6401c743:	add    ebx,0x4
6401c746:	test   eax,eax
6401c748:	mov    DWORD PTR [ebp-0x28],ebx
6401c74b:	je     0x6401c77a
6401c74d:	mov    ecx,DWORD PTR [eax+0x4]
6401c750:	test   ecx,ecx
6401c752:	je     0x6401c77a
6401c754:	test   WORD PTR [ebp-0x14],0x800
6401c75a:	movsx  eax,WORD PTR [eax]
6401c75d:	mov    DWORD PTR [ebp-0x1c],ecx
6401c760:	je     0x6401c771
6401c762:	cdq    
6401c763:	sub    eax,edx
6401c765:	mov    DWORD PTR [ebp-0x34],0x1
6401c76c:	jmp    0x6401ca89
6401c771:	and    DWORD PTR [ebp-0x34],0x0
6401c775:	jmp    0x6401ca8b
6401c77a:	mov    eax,ds:0x64052df0
6401c77f:	mov    DWORD PTR [ebp-0x1c],eax
6401c782:	push   eax
6401c783:	call   0x64015aa0
6401c788:	pop    ecx
6401c789:	jmp    0x6401ca8b
6401c78e:	cmp    eax,0x70
6401c791:	jg     0x6401c91e
6401c797:	je     0x6401c912
6401c79d:	cmp    eax,0x65
6401c7a0:	jl     0x6401ca8e
6401c7a6:	cmp    eax,0x67
6401c7a9:	jle    0x6401c61a
6401c7af:	cmp    eax,0x69
6401c7b2:	je     0x6401c80d
6401c7b4:	cmp    eax,0x6e
6401c7b7:	je     0x6401c7d8
6401c7b9:	cmp    eax,0x6f
6401c7bc:	jne    0x6401ca8e
6401c7c2:	test   BYTE PTR [ebp-0x14],0x80
6401c7c6:	mov    DWORD PTR [ebp-0x24],0x8
6401c7cd:	je     0x6401c818
6401c7cf:	or     DWORD PTR [ebp-0x14],0x200
6401c7d6:	jmp    0x6401c818
6401c7d8:	mov    esi,DWORD PTR [ebx]
6401c7da:	add    ebx,0x4
6401c7dd:	mov    DWORD PTR [ebp-0x28],ebx
6401c7e0:	call   0x6401eb51
6401c7e5:	test   eax,eax
6401c7e7:	je     0x6401cbc5
6401c7ed:	test   BYTE PTR [ebp-0x14],0x20
6401c7f1:	je     0x6401c7fc
6401c7f3:	mov    ax,WORD PTR [ebp-0x2c]
6401c7f7:	mov    WORD PTR [esi],ax
6401c7fa:	jmp    0x6401c801
6401c7fc:	mov    eax,DWORD PTR [ebp-0x2c]
6401c7ff:	mov    DWORD PTR [esi],eax
6401c801:	mov    DWORD PTR [ebp-0x48],0x1
6401c808:	jmp    0x6401cb97
6401c80d:	or     DWORD PTR [ebp-0x14],0x40
6401c811:	mov    DWORD PTR [ebp-0x24],0xa
6401c818:	test   WORD PTR [ebp-0x14],0x8000
6401c81e:	je     0x6401c968
6401c824:	mov    eax,DWORD PTR [ebx]
6401c826:	mov    edx,DWORD PTR [ebx+0x4]
6401c829:	add    ebx,0x8
6401c82c:	jmp    0x6401c9a1
6401c831:	jne    0x6401c842
6401c833:	cmp    dx,0x67
6401c837:	jne    0x6401c87e
6401c839:	mov    DWORD PTR [ebp-0x18],0x1
6401c840:	jmp    0x6401c87e
6401c842:	cmp    DWORD PTR [ebp-0x18],eax
6401c845:	jle    0x6401c84a
6401c847:	mov    DWORD PTR [ebp-0x18],eax
6401c84a:	cmp    DWORD PTR [ebp-0x18],0xa3
6401c851:	jle    0x6401c87e
6401c853:	mov    edi,DWORD PTR [ebp-0x18]
6401c856:	add    edi,0x15d
6401c85c:	push   edi
6401c85d:	call   0x6401627f
6401c862:	test   eax,eax
6401c864:	mov    edx,DWORD PTR [ebp-0x24]
6401c867:	pop    ecx
6401c868:	mov    DWORD PTR [ebp-0x50],eax
6401c86b:	je     0x6401c877
6401c86d:	mov    DWORD PTR [ebp-0x1c],eax
6401c870:	mov    DWORD PTR [ebp-0x20],edi
6401c873:	mov    esi,eax
6401c875:	jmp    0x6401c87e
6401c877:	mov    DWORD PTR [ebp-0x18],0xa3
6401c87e:	mov    eax,DWORD PTR [ebx]
6401c880:	add    ebx,0x8
6401c883:	mov    DWORD PTR [ebp-0x78],eax
6401c886:	mov    eax,DWORD PTR [ebx-0x4]
6401c889:	mov    DWORD PTR [ebp-0x74],eax
6401c88c:	lea    eax,[ebp-0x64]
6401c88f:	push   eax
6401c890:	push   DWORD PTR [ebp-0x6c]
6401c893:	movsx  eax,dl
6401c896:	push   DWORD PTR [ebp-0x18]
6401c899:	mov    DWORD PTR [ebp-0x28],ebx
6401c89c:	push   eax
6401c89d:	push   DWORD PTR [ebp-0x20]
6401c8a0:	lea    eax,[ebp-0x78]
6401c8a3:	push   esi
6401c8a4:	push   eax
6401c8a5:	push   DWORD PTR ds:0x64053108
6401c8ab:	call   0x640177ae
6401c8b0:	pop    ecx
6401c8b1:	call   eax
6401c8b3:	mov    ebx,DWORD PTR [ebp-0x14]
6401c8b6:	add    esp,0x1c
6401c8b9:	and    ebx,0x80
6401c8bf:	je     0x6401c8dc
6401c8c1:	cmp    DWORD PTR [ebp-0x18],0x0
6401c8c5:	jne    0x6401c8dc
6401c8c7:	lea    eax,[ebp-0x64]
6401c8ca:	push   eax
6401c8cb:	push   esi
6401c8cc:	push   DWORD PTR ds:0x64053114
6401c8d2:	call   0x640177ae
6401c8d7:	pop    ecx
6401c8d8:	call   eax
6401c8da:	pop    ecx
6401c8db:	pop    ecx
6401c8dc:	cmp    WORD PTR [ebp-0x24],0x67
6401c8e1:	jne    0x6401c8fc
6401c8e3:	test   ebx,ebx
6401c8e5:	jne    0x6401c8fc
6401c8e7:	lea    eax,[ebp-0x64]
6401c8ea:	push   eax
6401c8eb:	push   esi
6401c8ec:	push   DWORD PTR ds:0x64053110
6401c8f2:	call   0x640177ae
6401c8f7:	pop    ecx
6401c8f8:	call   eax
6401c8fa:	pop    ecx
6401c8fb:	pop    ecx
6401c8fc:	cmp    BYTE PTR [esi],0x2d
6401c8ff:	jne    0x6401c90c
6401c901:	or     DWORD PTR [ebp-0x14],0x100
6401c908:	inc    esi
6401c909:	mov    DWORD PTR [ebp-0x1c],esi
6401c90c:	push   esi
6401c90d:	jmp    0x6401c783
6401c912:	mov    DWORD PTR [ebp-0x18],0x8
6401c919:	mov    DWORD PTR [ebp-0x54],ecx
6401c91c:	jmp    0x6401c93f
6401c91e:	sub    eax,0x73
6401c921:	je     0x6401c663
6401c927:	sub    eax,edi
6401c929:	je     0x6401c811
6401c92f:	sub    eax,0x3
6401c932:	jne    0x6401ca8e
6401c938:	mov    DWORD PTR [ebp-0x54],0x27
6401c93f:	test   BYTE PTR [ebp-0x14],0x80
6401c943:	mov    DWORD PTR [ebp-0x24],0x10
6401c94a:	je     0x6401c818
6401c950:	mov    eax,DWORD PTR [ebp-0x54]
6401c953:	add    eax,0x51
6401c956:	mov    WORD PTR [ebp-0x44],0x30
6401c95c:	mov    WORD PTR [ebp-0x42],ax
6401c960:	mov    DWORD PTR [ebp-0x30],edi
6401c963:	jmp    0x6401c818
6401c968:	test   WORD PTR [ebp-0x14],0x1000
6401c96e:	jne    0x6401c824
6401c974:	add    ebx,0x4
6401c977:	test   BYTE PTR [ebp-0x14],0x20
6401c97b:	je     0x6401c993
6401c97d:	test   BYTE PTR [ebp-0x14],0x40
6401c981:	mov    DWORD PTR [ebp-0x28],ebx
6401c984:	je     0x6401c98c
6401c986:	movsx  eax,WORD PTR [ebx-0x4]
6401c98a:	jmp    0x6401c990
6401c98c:	movzx  eax,WORD PTR [ebx-0x4]
6401c990:	cdq    
6401c991:	jmp    0x6401c9a4
6401c993:	test   BYTE PTR [ebp-0x14],0x40
6401c997:	mov    eax,DWORD PTR [ebx-0x4]
6401c99a:	je     0x6401c99f
6401c99c:	cdq    
6401c99d:	jmp    0x6401c9a1
6401c99f:	xor    edx,edx
6401c9a1:	mov    DWORD PTR [ebp-0x28],ebx
6401c9a4:	test   BYTE PTR [ebp-0x14],0x40
6401c9a8:	je     0x6401c9c2
6401c9aa:	test   edx,edx
6401c9ac:	jg     0x6401c9c2
6401c9ae:	jl     0x6401c9b4
6401c9b0:	test   eax,eax
6401c9b2:	jae    0x6401c9c2
6401c9b4:	neg    eax
6401c9b6:	adc    edx,0x0
6401c9b9:	neg    edx
6401c9bb:	or     DWORD PTR [ebp-0x14],0x100
6401c9c2:	test   WORD PTR [ebp-0x14],0x9000
6401c9c8:	mov    ebx,edx
6401c9ca:	mov    edi,eax
6401c9cc:	jne    0x6401c9d0
6401c9ce:	xor    ebx,ebx
6401c9d0:	cmp    DWORD PTR [ebp-0x18],0x0
6401c9d4:	jge    0x6401c9df
6401c9d6:	mov    DWORD PTR [ebp-0x18],0x1
6401c9dd:	jmp    0x6401c9f0
6401c9df:	and    DWORD PTR [ebp-0x14],0xfffffff7
6401c9e3:	mov    eax,0x200
6401c9e8:	cmp    DWORD PTR [ebp-0x18],eax
6401c9eb:	jle    0x6401c9f0
6401c9ed:	mov    DWORD PTR [ebp-0x18],eax
6401c9f0:	mov    eax,edi
6401c9f2:	or     eax,ebx
6401c9f4:	jne    0x6401c9f9
6401c9f6:	and    DWORD PTR [ebp-0x30],eax
6401c9f9:	lea    esi,[ebp+0x1ef]
6401c9ff:	mov    eax,DWORD PTR [ebp-0x18]
6401ca02:	dec    DWORD PTR [ebp-0x18]
6401ca05:	test   eax,eax
6401ca07:	jg     0x6401ca0f
6401ca09:	mov    eax,edi
6401ca0b:	or     eax,ebx
6401ca0d:	je     0x6401ca33
6401ca0f:	mov    eax,DWORD PTR [ebp-0x24]
6401ca12:	cdq    
6401ca13:	push   edx
6401ca14:	push   eax
6401ca15:	push   ebx
6401ca16:	push   edi
6401ca17:	call   0x64019a00
6401ca1c:	add    ecx,0x30
6401ca1f:	cmp    ecx,0x39
6401ca22:	mov    DWORD PTR [ebp-0x7c],ebx
6401ca25:	mov    edi,eax
6401ca27:	mov    ebx,edx
6401ca29:	jle    0x6401ca2e
6401ca2b:	add    ecx,DWORD PTR [ebp-0x54]
6401ca2e:	mov    BYTE PTR [esi],cl
6401ca30:	dec    esi
6401ca31:	jmp    0x6401c9ff
6401ca33:	lea    eax,[ebp+0x1ef]
6401ca39:	sub    eax,esi
6401ca3b:	inc    esi
6401ca3c:	test   WORD PTR [ebp-0x14],0x200
6401ca42:	mov    DWORD PTR [ebp-0x20],eax
6401ca45:	mov    DWORD PTR [ebp-0x1c],esi
6401ca48:	je     0x6401ca8e
6401ca4a:	test   eax,eax
6401ca4c:	je     0x6401ca55
6401ca4e:	mov    ecx,esi
6401ca50:	cmp    BYTE PTR [ecx],0x30
6401ca53:	je     0x6401ca8e
6401ca55:	dec    DWORD PTR [ebp-0x1c]
6401ca58:	mov    ecx,DWORD PTR [ebp-0x1c]
6401ca5b:	mov    BYTE PTR [ecx],0x30
6401ca5e:	inc    eax
6401ca5f:	jmp    0x6401ca8b
6401ca61:	test   ebx,ebx
6401ca63:	jne    0x6401ca6d
6401ca65:	mov    eax,ds:0x64052df4
6401ca6a:	mov    DWORD PTR [ebp-0x1c],eax
6401ca6d:	mov    eax,DWORD PTR [ebp-0x1c]
6401ca70:	mov    DWORD PTR [ebp-0x34],0x1
6401ca77:	jmp    0x6401ca82
6401ca79:	dec    edi
6401ca7a:	cmp    WORD PTR [eax],0x0
6401ca7e:	je     0x6401ca86
6401ca80:	inc    eax
6401ca81:	inc    eax
6401ca82:	test   edi,edi
6401ca84:	jne    0x6401ca79
6401ca86:	sub    eax,DWORD PTR [ebp-0x1c]
6401ca89:	sar    eax,1
6401ca8b:	mov    DWORD PTR [ebp-0x20],eax
6401ca8e:	cmp    DWORD PTR [ebp-0x48],0x0
6401ca92:	jne    0x6401cb97
6401ca98:	mov    eax,DWORD PTR [ebp-0x14]
6401ca9b:	test   al,0x40
6401ca9d:	je     0x6401caca
6401ca9f:	test   ax,0x100
6401caa3:	je     0x6401caad
6401caa5:	mov    WORD PTR [ebp-0x44],0x2d
6401caab:	jmp    0x6401cac3
6401caad:	test   al,0x1
6401caaf:	je     0x6401cab9
6401cab1:	mov    WORD PTR [ebp-0x44],0x2b
6401cab7:	jmp    0x6401cac3
6401cab9:	test   al,0x2
6401cabb:	je     0x6401caca
6401cabd:	mov    WORD PTR [ebp-0x44],0x20
6401cac3:	mov    DWORD PTR [ebp-0x30],0x1
6401caca:	mov    ebx,DWORD PTR [ebp-0x38]
6401cacd:	mov    esi,DWORD PTR [ebp-0x20]
6401cad0:	sub    ebx,esi
6401cad2:	sub    ebx,DWORD PTR [ebp-0x30]
6401cad5:	test   BYTE PTR [ebp-0x14],0xc
6401cad9:	jne    0x6401caec
6401cadb:	push   DWORD PTR [ebp-0x3c]
6401cade:	lea    eax,[ebp-0x2c]
6401cae1:	push   ebx
6401cae2:	push   0x20
6401cae4:	call   0x6401cc49
6401cae9:	add    esp,0xc
6401caec:	push   DWORD PTR [ebp-0x30]
6401caef:	mov    edi,DWORD PTR [ebp-0x3c]
6401caf2:	lea    eax,[ebp-0x2c]
6401caf5:	lea    ecx,[ebp-0x44]
6401caf8:	call   0x6401cc6e
6401cafd:	test   BYTE PTR [ebp-0x14],0x8
6401cb01:	pop    ecx
6401cb02:	je     0x6401cb19
6401cb04:	test   BYTE PTR [ebp-0x14],0x4
6401cb08:	jne    0x6401cb19
6401cb0a:	push   edi
6401cb0b:	push   ebx
6401cb0c:	push   0x30
6401cb0e:	lea    eax,[ebp-0x2c]
6401cb11:	call   0x6401cc49
6401cb16:	add    esp,0xc
6401cb19:	cmp    DWORD PTR [ebp-0x34],0x0
6401cb1d:	jne    0x6401cb6d
6401cb1f:	test   esi,esi
6401cb21:	jle    0x6401cb6d
6401cb23:	mov    edi,DWORD PTR [ebp-0x1c]
6401cb26:	mov    DWORD PTR [ebp-0x24],esi
6401cb29:	dec    DWORD PTR [ebp-0x24]
6401cb2c:	lea    eax,[ebp-0x64]
6401cb2f:	push   eax
6401cb30:	mov    eax,DWORD PTR [ebp-0x64]
6401cb33:	push   DWORD PTR [eax+0xac]
6401cb39:	lea    eax,[ebp-0x70]
6401cb3c:	push   edi
6401cb3d:	push   eax
6401cb3e:	call   0x6401eda3
6401cb43:	add    esp,0x10
6401cb46:	test   eax,eax
6401cb48:	mov    DWORD PTR [ebp-0x7c],eax
6401cb4b:	jle    0x6401cb67
6401cb4d:	push   DWORD PTR [ebp-0x70]
6401cb50:	mov    eax,DWORD PTR [ebp-0x3c]
6401cb53:	lea    esi,[ebp-0x2c]
6401cb56:	call   0x6401cc24
6401cb5b:	add    edi,DWORD PTR [ebp-0x7c]
6401cb5e:	cmp    DWORD PTR [ebp-0x24],0x0
6401cb62:	pop    ecx
6401cb63:	jg     0x6401cb29
6401cb65:	jmp    0x6401cb7a
6401cb67:	or     DWORD PTR [ebp-0x2c],0xffffffff
6401cb6b:	jmp    0x6401cb7a
6401cb6d:	mov    ecx,DWORD PTR [ebp-0x1c]
6401cb70:	push   esi
6401cb71:	lea    eax,[ebp-0x2c]
6401cb74:	call   0x6401cc6e
6401cb79:	pop    ecx
6401cb7a:	cmp    DWORD PTR [ebp-0x2c],0x0
6401cb7e:	jl     0x6401cb97
6401cb80:	test   BYTE PTR [ebp-0x14],0x4
6401cb84:	je     0x6401cb97
6401cb86:	push   DWORD PTR [ebp-0x3c]
6401cb89:	lea    eax,[ebp-0x2c]
6401cb8c:	push   ebx
6401cb8d:	push   0x20
6401cb8f:	call   0x6401cc49
6401cb94:	add    esp,0xc
6401cb97:	cmp    DWORD PTR [ebp-0x50],0x0
6401cb9b:	je     0x6401cbaa
6401cb9d:	push   DWORD PTR [ebp-0x50]
6401cba0:	call   0x6401475f
6401cba5:	and    DWORD PTR [ebp-0x50],0x0
6401cba9:	pop    ecx
6401cbaa:	mov    esi,DWORD PTR [ebp-0x4c]
6401cbad:	movzx  eax,WORD PTR [esi]
6401cbb0:	test   ax,ax
6401cbb3:	mov    DWORD PTR [ebp-0x24],eax
6401cbb6:	je     0x6401cbdc
6401cbb8:	mov    ecx,DWORD PTR [ebp-0x68]
6401cbbb:	mov    ebx,DWORD PTR [ebp-0x28]
6401cbbe:	mov    edx,eax
6401cbc0:	jmp    0x6401c3bf
6401cbc5:	call   0x64016663
6401cbca:	mov    DWORD PTR [eax],0x16
6401cbd0:	xor    eax,eax
6401cbd2:	push   eax
6401cbd3:	push   eax
6401cbd4:	push   eax
6401cbd5:	push   eax
6401cbd6:	push   eax
6401cbd7:	jmp    0x6401c384
6401cbdc:	cmp    BYTE PTR [ebp-0x58],0x0
6401cbe0:	je     0x6401cbe9
6401cbe2:	mov    eax,DWORD PTR [ebp-0x5c]
6401cbe5:	and    DWORD PTR [eax+0x70],0xfffffffd
6401cbe9:	mov    eax,DWORD PTR [ebp-0x2c]
6401cbec:	mov    ecx,DWORD PTR [ebp+0x3f0]
6401cbf2:	pop    edi
6401cbf3:	pop    esi
6401cbf4:	xor    ecx,ebp
6401cbf6:	pop    ebx
6401cbf7:	call   0x64013ca6
6401cbfc:	add    ebp,0x3f4
6401cc02:	leave  
6401cc03:	ret    
6401cc04:	ret    
6401cc05:	lds    eax,FWORD PTR [ecx]
6401cc07:	fs or  eax,esp
6401cc0a:	add    DWORD PTR [eax+ebp*1-0x3c],esp
6401cc0e:	add    DWORD PTR [esi+esi*2-0x3c],esp
6401cc12:	add    DWORD PTR [ecx+esi*4-0x3c],esp
6401cc16:	add    DWORD PTR [edx+edi*4-0x3c],esp
6401cc1a:	add    DWORD PTR [edx+esi*8-0x3c],esp
6401cc1e:	add    DWORD PTR [ebx+ebx*8-0x3b],esp
6401cc22:	add    DWORD PTR [esi+esi*8+0x40],esp
6401cc26:	or     al,0x40
6401cc28:	je     0x6401cc30
6401cc2a:	cmp    DWORD PTR [eax+0x8],0x0
6401cc2e:	je     0x6401cc46
6401cc30:	push   eax
6401cc31:	push   DWORD PTR [esp+0x8]
6401cc35:	call   0x64020abe
6401cc3a:	cmp    ax,0xffff
6401cc3e:	pop    ecx
6401cc3f:	pop    ecx
6401cc40:	jne    0x6401cc46
6401cc42:	or     DWORD PTR [esi],0xffffffff
6401cc45:	ret    
6401cc46:	inc    DWORD PTR [esi]
6401cc48:	ret    
6401cc49:	push   ebp
6401cc4a:	mov    ebp,esp
6401cc4c:	push   esi
6401cc4d:	mov    esi,eax
6401cc4f:	jmp    0x6401cc65
6401cc51:	push   DWORD PTR [ebp+0x8]
6401cc54:	mov    eax,DWORD PTR [ebp+0x10]
6401cc57:	dec    DWORD PTR [ebp+0xc]
6401cc5a:	call   0x6401cc24
6401cc5f:	cmp    DWORD PTR [esi],0xffffffff
6401cc62:	pop    ecx
6401cc63:	je     0x6401cc6b
6401cc65:	cmp    DWORD PTR [ebp+0xc],0x0
6401cc69:	jg     0x6401cc51
6401cc6b:	pop    esi
6401cc6c:	pop    ebp
6401cc6d:	ret    
6401cc6e:	test   BYTE PTR [edi+0xc],0x40
6401cc72:	push   ebx
6401cc73:	push   esi
6401cc74:	mov    esi,eax
6401cc76:	mov    ebx,ecx
6401cc78:	je     0x6401ccb3
6401cc7a:	cmp    DWORD PTR [edi+0x8],0x0
6401cc7e:	jne    0x6401ccb3
6401cc80:	mov    eax,DWORD PTR [esp+0xc]
6401cc84:	add    DWORD PTR [esi],eax
6401cc86:	jmp    0x6401ccba
6401cc88:	movzx  eax,WORD PTR [ebx]
6401cc8b:	dec    DWORD PTR [esp+0xc]
6401cc8f:	push   eax
6401cc90:	mov    eax,edi
6401cc92:	call   0x6401cc24
6401cc97:	inc    ebx
6401cc98:	inc    ebx
6401cc99:	cmp    DWORD PTR [esi],0xffffffff
6401cc9c:	pop    ecx
6401cc9d:	jne    0x6401ccb3
6401cc9f:	call   0x64016663
6401cca4:	cmp    DWORD PTR [eax],0x2a
6401cca7:	jne    0x6401ccba
6401cca9:	push   0x3f
6401ccab:	mov    eax,edi
6401ccad:	call   0x6401cc24
6401ccb2:	pop    ecx
6401ccb3:	cmp    DWORD PTR [esp+0xc],0x0
6401ccb8:	jg     0x6401cc88
6401ccba:	pop    esi
6401ccbb:	pop    ebx
6401ccbc:	ret    
6401ccbd:	push   ebp
6401ccbe:	lea    ebp,[esp-0x3f4]
6401ccc5:	sub    esp,0x474
6401cccb:	mov    eax,ds:0x640521ac
6401ccd0:	xor    eax,ebp
6401ccd2:	mov    DWORD PTR [ebp+0x3f0],eax
6401ccd8:	push   ebx
6401ccd9:	mov    ebx,DWORD PTR [ebp+0x408]
6401ccdf:	push   esi
6401cce0:	mov    esi,DWORD PTR [ebp+0x3fc]
6401cce6:	xor    eax,eax
6401cce8:	push   edi
6401cce9:	push   DWORD PTR [ebp+0x404]
6401ccef:	mov    edi,DWORD PTR [ebp+0x400]
6401ccf5:	lea    ecx,[ebp-0x58]
6401ccf8:	mov    DWORD PTR [ebp-0x48],esi
6401ccfb:	mov    DWORD PTR [ebp-0x24],ebx
6401ccfe:	mov    DWORD PTR [ebp-0x60],eax
6401cd01:	mov    DWORD PTR [ebp-0x14],eax
6401cd04:	mov    DWORD PTR [ebp-0x38],eax
6401cd07:	mov    DWORD PTR [ebp-0x18],eax
6401cd0a:	mov    DWORD PTR [ebp-0x30],eax
6401cd0d:	mov    DWORD PTR [ebp-0x5c],eax
6401cd10:	mov    DWORD PTR [ebp-0x34],eax
6401cd13:	call   0x640142c5
6401cd18:	test   esi,esi
6401cd1a:	jne    0x6401cd4b
6401cd1c:	call   0x64016663
6401cd21:	mov    DWORD PTR [eax],0x16
6401cd27:	xor    eax,eax
6401cd29:	push   eax
6401cd2a:	push   eax
6401cd2b:	push   eax
6401cd2c:	push   eax
6401cd2d:	push   eax
6401cd2e:	call   0x64013df2
6401cd33:	add    esp,0x14
6401cd36:	cmp    BYTE PTR [ebp-0x4c],0x0
6401cd3a:	je     0x6401cd43
6401cd3c:	mov    eax,DWORD PTR [ebp-0x50]
6401cd3f:	and    DWORD PTR [eax+0x70],0xfffffffd
6401cd43:	or     eax,0xffffffff
6401cd46:	jmp    0x6401d5a1
6401cd4b:	xor    esi,esi
6401cd4d:	cmp    edi,esi
6401cd4f:	jne    0x6401cd63
6401cd51:	call   0x64016663
6401cd56:	push   esi
6401cd57:	push   esi
6401cd58:	push   esi
6401cd59:	push   esi
6401cd5a:	mov    DWORD PTR [eax],0x16
6401cd60:	push   esi
6401cd61:	jmp    0x6401cd2e
6401cd63:	movzx  ecx,WORD PTR [edi]
6401cd66:	cmp    cx,si
6401cd69:	mov    DWORD PTR [ebp-0x2c],esi
6401cd6c:	mov    DWORD PTR [ebp-0x20],esi
6401cd6f:	mov    DWORD PTR [ebp-0x40],esi
6401cd72:	mov    DWORD PTR [ebp-0x64],esi
6401cd75:	mov    DWORD PTR [ebp-0x28],ecx
6401cd78:	je     0x6401d591
6401cd7e:	push   0x2
6401cd80:	pop    esi
6401cd81:	add    edi,esi
6401cd83:	xor    eax,eax
6401cd85:	cmp    DWORD PTR [ebp-0x2c],eax
6401cd88:	mov    DWORD PTR [ebp-0x6c],edi
6401cd8b:	jl     0x6401d581
6401cd91:	lea    edx,[ecx-0x20]
6401cd94:	cmp    dx,0x58
6401cd98:	ja     0x6401cda7
6401cd9a:	movzx  eax,cx
6401cd9d:	movzx  eax,BYTE PTR [eax+0x64040f98]
6401cda4:	and    eax,0xf
6401cda7:	mov    edx,DWORD PTR [ebp-0x40]
6401cdaa:	imul   eax,eax,0x9
6401cdad:	movzx  eax,BYTE PTR [eax+edx*1+0x64040fb8]
6401cdb5:	push   0x8
6401cdb7:	shr    eax,0x4
6401cdba:	pop    edx
6401cdbb:	cmp    eax,edx
6401cdbd:	mov    DWORD PTR [ebp-0x40],eax
6401cdc0:	je     0x6401cd1c
6401cdc6:	cmp    eax,0x7
6401cdc9:	ja     0x6401d569
6401cdcf:	jmp    DWORD PTR [eax*4+0x6401d5b9]
6401cdd6:	xor    eax,eax
6401cdd8:	or     DWORD PTR [ebp-0x18],0xffffffff
6401cddc:	mov    DWORD PTR [ebp-0x68],eax
6401cddf:	mov    DWORD PTR [ebp-0x5c],eax
6401cde2:	mov    DWORD PTR [ebp-0x38],eax
6401cde5:	mov    DWORD PTR [ebp-0x30],eax
6401cde8:	mov    DWORD PTR [ebp-0x14],eax
6401cdeb:	mov    DWORD PTR [ebp-0x34],eax
6401cdee:	jmp    0x6401d56f
6401cdf3:	movzx  eax,cx
6401cdf6:	sub    eax,0x20
6401cdf9:	je     0x6401ce37
6401cdfb:	sub    eax,0x3
6401cdfe:	je     0x6401ce2b
6401ce00:	sub    eax,edx
6401ce02:	je     0x6401ce22
6401ce04:	sub    eax,esi
6401ce06:	je     0x6401ce19
6401ce08:	sub    eax,0x3
6401ce0b:	jne    0x6401d569
6401ce11:	or     DWORD PTR [ebp-0x14],edx
6401ce14:	jmp    0x6401d56f
6401ce19:	or     DWORD PTR [ebp-0x14],0x4
6401ce1d:	jmp    0x6401d56f
6401ce22:	or     DWORD PTR [ebp-0x14],0x1
6401ce26:	jmp    0x6401d56f
6401ce2b:	or     DWORD PTR [ebp-0x14],0x80
6401ce32:	jmp    0x6401d56f
6401ce37:	or     DWORD PTR [ebp-0x14],esi
6401ce3a:	jmp    0x6401d56f
6401ce3f:	cmp    cx,0x2a
6401ce43:	jne    0x6401ce64
6401ce45:	mov    eax,DWORD PTR [ebx]
6401ce47:	add    ebx,0x4
6401ce4a:	test   eax,eax
6401ce4c:	mov    DWORD PTR [ebp-0x24],ebx
6401ce4f:	mov    DWORD PTR [ebp-0x38],eax
6401ce52:	jge    0x6401d56f
6401ce58:	or     DWORD PTR [ebp-0x14],0x4
6401ce5c:	neg    DWORD PTR [ebp-0x38]
6401ce5f:	jmp    0x6401d56f
6401ce64:	mov    eax,DWORD PTR [ebp-0x38]
6401ce67:	imul   eax,eax,0xa
6401ce6a:	movzx  ecx,cx
6401ce6d:	lea    eax,[eax+ecx*1-0x30]
6401ce71:	mov    DWORD PTR [ebp-0x38],eax
6401ce74:	jmp    0x6401d56f
6401ce79:	and    DWORD PTR [ebp-0x18],0x0
6401ce7d:	jmp    0x6401d56f
6401ce82:	cmp    cx,0x2a
6401ce86:	jne    0x6401cea4
6401ce88:	mov    eax,DWORD PTR [ebx]
6401ce8a:	add    ebx,0x4
6401ce8d:	test   eax,eax
6401ce8f:	mov    DWORD PTR [ebp-0x24],ebx
6401ce92:	mov    DWORD PTR [ebp-0x18],eax
6401ce95:	jge    0x6401d56f
6401ce9b:	or     DWORD PTR [ebp-0x18],0xffffffff
6401ce9f:	jmp    0x6401d56f
6401cea4:	mov    eax,DWORD PTR [ebp-0x18]
6401cea7:	imul   eax,eax,0xa
6401ceaa:	movzx  ecx,cx
6401cead:	lea    eax,[eax+ecx*1-0x30]
6401ceb1:	mov    DWORD PTR [ebp-0x18],eax
6401ceb4:	jmp    0x6401d56f
6401ceb9:	movzx  eax,cx
6401cebc:	cmp    eax,0x49
6401cebf:	je     0x6401cf06
6401cec1:	cmp    eax,0x68
6401cec4:	je     0x6401cefd
6401cec6:	cmp    eax,0x6c
6401cec9:	je     0x6401cee0
6401cecb:	cmp    eax,0x77
6401cece:	jne    0x6401d56f
6401ced4:	or     DWORD PTR [ebp-0x14],0x800
6401cedb:	jmp    0x6401d56f
6401cee0:	cmp    WORD PTR [edi],0x6c
6401cee4:	jne    0x6401cef4
6401cee6:	add    edi,esi
6401cee8:	or     DWORD PTR [ebp-0x14],0x1000
6401ceef:	jmp    0x6401d56f
6401cef4:	or     DWORD PTR [ebp-0x14],0x10
6401cef8:	jmp    0x6401d56f
6401cefd:	or     DWORD PTR [ebp-0x14],0x20
6401cf01:	jmp    0x6401d56f
6401cf06:	movzx  eax,WORD PTR [edi]
6401cf09:	cmp    ax,0x36
6401cf0d:	jne    0x6401cf25
6401cf0f:	cmp    WORD PTR [edi+0x2],0x34
6401cf14:	jne    0x6401cf25
6401cf16:	add    edi,0x4
6401cf19:	or     DWORD PTR [ebp-0x14],0x8000
6401cf20:	jmp    0x6401d56f
6401cf25:	cmp    ax,0x33
6401cf29:	jne    0x6401cf41
6401cf2b:	cmp    WORD PTR [edi+0x2],0x32
6401cf30:	jne    0x6401cf41
6401cf32:	add    edi,0x4
6401cf35:	and    DWORD PTR [ebp-0x14],0xffff7fff
6401cf3c:	jmp    0x6401d56f
6401cf41:	cmp    ax,0x64
6401cf45:	je     0x6401d56f
6401cf4b:	cmp    ax,0x69
6401cf4f:	je     0x6401d56f
6401cf55:	cmp    ax,0x6f
6401cf59:	je     0x6401d56f
6401cf5f:	cmp    ax,0x75
6401cf63:	je     0x6401d56f
6401cf69:	cmp    ax,0x78
6401cf6d:	je     0x6401d56f
6401cf73:	cmp    ax,0x58
6401cf77:	je     0x6401d56f
6401cf7d:	and    DWORD PTR [ebp-0x40],0x0
6401cf81:	mov    eax,DWORD PTR [ebp-0x48]
6401cf84:	push   ecx
6401cf85:	lea    esi,[ebp-0x2c]
6401cf88:	mov    DWORD PTR [ebp-0x34],0x1
6401cf8f:	call   0x6401cc24
6401cf94:	pop    ecx
6401cf95:	jmp    0x6401d56f
6401cf9a:	movzx  eax,cx
6401cf9d:	cmp    eax,0x64
6401cfa0:	jg     0x6401d14e
6401cfa6:	je     0x6401d1c9
6401cfac:	cmp    eax,0x53
6401cfaf:	jg     0x6401d08c
6401cfb5:	je     0x6401d016
6401cfb7:	sub    eax,0x41
6401cfba:	je     0x6401cfcc
6401cfbc:	sub    eax,esi
6401cfbe:	je     0x6401d001
6401cfc0:	sub    eax,esi
6401cfc2:	je     0x6401cfcc
6401cfc4:	sub    eax,esi
6401cfc6:	jne    0x6401d44d
6401cfcc:	add    ecx,0x20
6401cfcf:	mov    DWORD PTR [ebp-0x68],0x1
6401cfd6:	mov    DWORD PTR [ebp-0x28],ecx
6401cfd9:	or     DWORD PTR [ebp-0x14],0x40
6401cfdd:	cmp    DWORD PTR [ebp-0x18],0x0
6401cfe1:	lea    esi,[ebp-0x10]
6401cfe4:	mov    eax,0x200
6401cfe9:	mov    DWORD PTR [ebp-0x1c],esi
6401cfec:	mov    DWORD PTR [ebp-0x20],eax
6401cfef:	jge    0x6401d1ed
6401cff5:	mov    DWORD PTR [ebp-0x18],0x6
6401cffc:	jmp    0x6401d23d
6401d001:	test   WORD PTR [ebp-0x14],0x830
6401d007:	jne    0x6401d0aa
6401d00d:	or     DWORD PTR [ebp-0x14],0x20
6401d011:	jmp    0x6401d0aa
6401d016:	test   WORD PTR [ebp-0x14],0x830
6401d01c:	jne    0x6401d022
6401d01e:	or     DWORD PTR [ebp-0x14],0x20
6401d022:	mov    edi,DWORD PTR [ebp-0x18]
6401d025:	cmp    edi,0xffffffff
6401d028:	jne    0x6401d02f
6401d02a:	mov    edi,0x7fffffff
6401d02f:	add    ebx,0x4
6401d032:	test   BYTE PTR [ebp-0x14],0x20
6401d036:	mov    DWORD PTR [ebp-0x24],ebx
6401d039:	mov    ebx,DWORD PTR [ebx-0x4]
6401d03c:	mov    DWORD PTR [ebp-0x1c],ebx
6401d03f:	je     0x6401d420
6401d045:	test   ebx,ebx
6401d047:	jne    0x6401d051
6401d049:	mov    eax,ds:0x64052df0
6401d04e:	mov    DWORD PTR [ebp-0x1c],eax
6401d051:	and    DWORD PTR [ebp-0x20],0x0
6401d055:	test   edi,edi
6401d057:	mov    esi,DWORD PTR [ebp-0x1c]
6401d05a:	jle    0x6401d44d
6401d060:	mov    al,BYTE PTR [esi]
6401d062:	test   al,al
6401d064:	je     0x6401d44d
6401d06a:	lea    ecx,[ebp-0x58]
6401d06d:	movzx  eax,al
6401d070:	push   ecx
6401d071:	push   eax
6401d072:	call   0x640150b7
6401d077:	test   eax,eax
6401d079:	pop    ecx
6401d07a:	pop    ecx
6401d07b:	je     0x6401d07e
6401d07d:	inc    esi
6401d07e:	inc    esi
6401d07f:	inc    DWORD PTR [ebp-0x20]
6401d082:	cmp    DWORD PTR [ebp-0x20],edi
6401d085:	jl     0x6401d060
6401d087:	jmp    0x6401d44d
6401d08c:	sub    eax,0x58
6401d08f:	je     0x6401d2d4
6401d095:	sub    eax,esi
6401d097:	je     0x6401d101
6401d099:	sub    eax,0x7
6401d09c:	je     0x6401cfd9
6401d0a2:	sub    eax,esi
6401d0a4:	jne    0x6401d44d
6401d0aa:	movzx  eax,WORD PTR [ebx]
6401d0ad:	add    ebx,0x4
6401d0b0:	xor    esi,esi
6401d0b2:	inc    esi
6401d0b3:	test   BYTE PTR [ebp-0x14],0x20
6401d0b7:	mov    DWORD PTR [ebp-0x34],esi
6401d0ba:	mov    DWORD PTR [ebp-0x24],ebx
6401d0bd:	mov    DWORD PTR [ebp-0x70],eax
6401d0c0:	je     0x6401d0ef
6401d0c2:	mov    BYTE PTR [ebp-0x44],al
6401d0c5:	lea    eax,[ebp-0x58]
6401d0c8:	push   eax
6401d0c9:	mov    eax,DWORD PTR [ebp-0x58]
6401d0cc:	mov    BYTE PTR [ebp-0x43],0x0
6401d0d0:	push   DWORD PTR [eax+0xac]
6401d0d6:	lea    eax,[ebp-0x44]
6401d0d9:	push   eax
6401d0da:	lea    eax,[ebp-0x10]
6401d0dd:	push   eax
6401d0de:	call   0x6401eda3
6401d0e3:	add    esp,0x10
6401d0e6:	test   eax,eax
6401d0e8:	jge    0x6401d0f3
6401d0ea:	mov    DWORD PTR [ebp-0x5c],esi
6401d0ed:	jmp    0x6401d0f3
6401d0ef:	mov    WORD PTR [ebp-0x10],ax
6401d0f3:	lea    eax,[ebp-0x10]
6401d0f6:	mov    DWORD PTR [ebp-0x1c],eax
6401d0f9:	mov    DWORD PTR [ebp-0x20],esi
6401d0fc:	jmp    0x6401d44d
6401d101:	mov    eax,DWORD PTR [ebx]
6401d103:	add    ebx,0x4
6401d106:	test   eax,eax
6401d108:	mov    DWORD PTR [ebp-0x24],ebx
6401d10b:	je     0x6401d13a
6401d10d:	mov    ecx,DWORD PTR [eax+0x4]
6401d110:	test   ecx,ecx
6401d112:	je     0x6401d13a
6401d114:	test   WORD PTR [ebp-0x14],0x800
6401d11a:	movsx  eax,WORD PTR [eax]
6401d11d:	mov    DWORD PTR [ebp-0x1c],ecx
6401d120:	je     0x6401d131
6401d122:	cdq    
6401d123:	sub    eax,edx
6401d125:	mov    DWORD PTR [ebp-0x34],0x1
6401d12c:	jmp    0x6401d448
6401d131:	and    DWORD PTR [ebp-0x34],0x0
6401d135:	jmp    0x6401d44a
6401d13a:	mov    eax,ds:0x64052df0
6401d13f:	mov    DWORD PTR [ebp-0x1c],eax
6401d142:	push   eax
6401d143:	call   0x64015aa0
6401d148:	pop    ecx
6401d149:	jmp    0x6401d44a
6401d14e:	cmp    eax,0x70
6401d151:	jg     0x6401d2dd
6401d157:	je     0x6401d2d1
6401d15d:	cmp    eax,0x65
6401d160:	jl     0x6401d44d
6401d166:	cmp    eax,0x67
6401d169:	jle    0x6401cfd9
6401d16f:	cmp    eax,0x69
6401d172:	je     0x6401d1c9
6401d174:	cmp    eax,0x6e
6401d177:	je     0x6401d194
6401d179:	cmp    eax,0x6f
6401d17c:	jne    0x6401d44d
6401d182:	test   BYTE PTR [ebp-0x14],0x80
6401d186:	mov    DWORD PTR [ebp-0x28],edx
6401d189:	je     0x6401d1d4
6401d18b:	or     DWORD PTR [ebp-0x14],0x200
6401d192:	jmp    0x6401d1d4
6401d194:	mov    esi,DWORD PTR [ebx]
6401d196:	add    ebx,0x4
6401d199:	mov    DWORD PTR [ebp-0x24],ebx
6401d19c:	call   0x6401eb51
6401d1a1:	test   eax,eax
6401d1a3:	je     0x6401cd1c
6401d1a9:	test   BYTE PTR [ebp-0x14],0x20
6401d1ad:	je     0x6401d1b8
6401d1af:	mov    ax,WORD PTR [ebp-0x2c]
6401d1b3:	mov    WORD PTR [esi],ax
6401d1b6:	jmp    0x6401d1bd
6401d1b8:	mov    eax,DWORD PTR [ebp-0x2c]
6401d1bb:	mov    DWORD PTR [esi],eax
6401d1bd:	mov    DWORD PTR [ebp-0x5c],0x1
6401d1c4:	jmp    0x6401d556
6401d1c9:	or     DWORD PTR [ebp-0x14],0x40
6401d1cd:	mov    DWORD PTR [ebp-0x28],0xa
6401d1d4:	test   WORD PTR [ebp-0x14],0x8000
6401d1da:	je     0x6401d327
6401d1e0:	add    ebx,edx
6401d1e2:	mov    eax,DWORD PTR [ebx-0x8]
6401d1e5:	mov    edx,DWORD PTR [ebx-0x4]
6401d1e8:	jmp    0x6401d360
6401d1ed:	jne    0x6401d1fe
6401d1ef:	cmp    cx,0x67
6401d1f3:	jne    0x6401d23d
6401d1f5:	mov    DWORD PTR [ebp-0x18],0x1
6401d1fc:	jmp    0x6401d23d
6401d1fe:	cmp    DWORD PTR [ebp-0x18],eax
6401d201:	jle    0x6401d206
6401d203:	mov    DWORD PTR [ebp-0x18],eax
6401d206:	cmp    DWORD PTR [ebp-0x18],0xa3
6401d20d:	jle    0x6401d23d
6401d20f:	mov    edi,DWORD PTR [ebp-0x18]
6401d212:	add    edi,0x15d
6401d218:	push   edi
6401d219:	call   0x6401627f
6401d21e:	test   eax,eax
6401d220:	pop    ecx
6401d221:	mov    ecx,DWORD PTR [ebp-0x28]
6401d224:	push   0x8
6401d226:	mov    DWORD PTR [ebp-0x64],eax
6401d229:	pop    edx
6401d22a:	je     0x6401d236
6401d22c:	mov    DWORD PTR [ebp-0x1c],eax
6401d22f:	mov    DWORD PTR [ebp-0x20],edi
6401d232:	mov    esi,eax
6401d234:	jmp    0x6401d23d
6401d236:	mov    DWORD PTR [ebp-0x18],0xa3
6401d23d:	add    ebx,edx
6401d23f:	mov    eax,DWORD PTR [ebx-0x8]
6401d242:	mov    DWORD PTR [ebp-0x78],eax
6401d245:	mov    eax,DWORD PTR [ebx-0x4]
6401d248:	mov    DWORD PTR [ebp-0x74],eax
6401d24b:	lea    eax,[ebp-0x58]
6401d24e:	push   eax
6401d24f:	push   DWORD PTR [ebp-0x68]
6401d252:	movsx  eax,cl
6401d255:	push   DWORD PTR [ebp-0x18]
6401d258:	mov    DWORD PTR [ebp-0x24],ebx
6401d25b:	push   eax
6401d25c:	push   DWORD PTR [ebp-0x20]
6401d25f:	lea    eax,[ebp-0x78]
6401d262:	push   esi
6401d263:	push   eax
6401d264:	push   DWORD PTR ds:0x64053108
6401d26a:	call   0x640177ae
6401d26f:	pop    ecx
6401d270:	call   eax
6401d272:	mov    ebx,DWORD PTR [ebp-0x14]
6401d275:	add    esp,0x1c
6401d278:	and    ebx,0x80
6401d27e:	je     0x6401d29b
6401d280:	cmp    DWORD PTR [ebp-0x18],0x0
6401d284:	jne    0x6401d29b
6401d286:	lea    eax,[ebp-0x58]
6401d289:	push   eax
6401d28a:	push   esi
6401d28b:	push   DWORD PTR ds:0x64053114
6401d291:	call   0x640177ae
6401d296:	pop    ecx
6401d297:	call   eax
6401d299:	pop    ecx
6401d29a:	pop    ecx
6401d29b:	cmp    WORD PTR [ebp-0x28],0x67
6401d2a0:	jne    0x6401d2bb
6401d2a2:	test   ebx,ebx
6401d2a4:	jne    0x6401d2bb
6401d2a6:	lea    eax,[ebp-0x58]
6401d2a9:	push   eax
6401d2aa:	push   esi
6401d2ab:	push   DWORD PTR ds:0x64053110
6401d2b1:	call   0x640177ae
6401d2b6:	pop    ecx
6401d2b7:	call   eax
6401d2b9:	pop    ecx
6401d2ba:	pop    ecx
6401d2bb:	cmp    BYTE PTR [esi],0x2d
6401d2be:	jne    0x6401d2cb
6401d2c0:	or     DWORD PTR [ebp-0x14],0x100
6401d2c7:	inc    esi
6401d2c8:	mov    DWORD PTR [ebp-0x1c],esi
6401d2cb:	push   esi
6401d2cc:	jmp    0x6401d143
6401d2d1:	mov    DWORD PTR [ebp-0x18],edx
6401d2d4:	mov    DWORD PTR [ebp-0x60],0x7
6401d2db:	jmp    0x6401d2fe
6401d2dd:	sub    eax,0x73
6401d2e0:	je     0x6401d022
6401d2e6:	sub    eax,esi
6401d2e8:	je     0x6401d1cd
6401d2ee:	sub    eax,0x3
6401d2f1:	jne    0x6401d44d
6401d2f7:	mov    DWORD PTR [ebp-0x60],0x27
6401d2fe:	test   BYTE PTR [ebp-0x14],0x80
6401d302:	mov    DWORD PTR [ebp-0x28],0x10
6401d309:	je     0x6401d1d4
6401d30f:	mov    eax,DWORD PTR [ebp-0x60]
6401d312:	add    eax,0x51
6401d315:	mov    WORD PTR [ebp-0x3c],0x30
6401d31b:	mov    WORD PTR [ebp-0x3a],ax
6401d31f:	mov    DWORD PTR [ebp-0x30],esi
6401d322:	jmp    0x6401d1d4
6401d327:	test   WORD PTR [ebp-0x14],0x1000
6401d32d:	jne    0x6401d1e0
6401d333:	add    ebx,0x4
6401d336:	test   BYTE PTR [ebp-0x14],0x20
6401d33a:	je     0x6401d352
6401d33c:	test   BYTE PTR [ebp-0x14],0x40
6401d340:	mov    DWORD PTR [ebp-0x24],ebx
6401d343:	je     0x6401d34b
6401d345:	movsx  eax,WORD PTR [ebx-0x4]
6401d349:	jmp    0x6401d34f
6401d34b:	movzx  eax,WORD PTR [ebx-0x4]
6401d34f:	cdq    
6401d350:	jmp    0x6401d363
6401d352:	test   BYTE PTR [ebp-0x14],0x40
6401d356:	mov    eax,DWORD PTR [ebx-0x4]
6401d359:	je     0x6401d35e
6401d35b:	cdq    
6401d35c:	jmp    0x6401d360
6401d35e:	xor    edx,edx
6401d360:	mov    DWORD PTR [ebp-0x24],ebx
6401d363:	test   BYTE PTR [ebp-0x14],0x40
6401d367:	je     0x6401d381
6401d369:	test   edx,edx
6401d36b:	jg     0x6401d381
6401d36d:	jl     0x6401d373
6401d36f:	test   eax,eax
6401d371:	jae    0x6401d381
6401d373:	neg    eax
6401d375:	adc    edx,0x0
6401d378:	neg    edx
6401d37a:	or     DWORD PTR [ebp-0x14],0x100
6401d381:	test   WORD PTR [ebp-0x14],0x9000
6401d387:	mov    ebx,edx
6401d389:	mov    edi,eax
6401d38b:	jne    0x6401d38f
6401d38d:	xor    ebx,ebx
6401d38f:	cmp    DWORD PTR [ebp-0x18],0x0
6401d393:	jge    0x6401d39e
6401d395:	mov    DWORD PTR [ebp-0x18],0x1
6401d39c:	jmp    0x6401d3af
6401d39e:	and    DWORD PTR [ebp-0x14],0xfffffff7
6401d3a2:	mov    eax,0x200
6401d3a7:	cmp    DWORD PTR [ebp-0x18],eax
6401d3aa:	jle    0x6401d3af
6401d3ac:	mov    DWORD PTR [ebp-0x18],eax
6401d3af:	mov    eax,edi
6401d3b1:	or     eax,ebx
6401d3b3:	jne    0x6401d3b8
6401d3b5:	and    DWORD PTR [ebp-0x30],eax
6401d3b8:	lea    esi,[ebp+0x1ef]
6401d3be:	mov    eax,DWORD PTR [ebp-0x18]
6401d3c1:	dec    DWORD PTR [ebp-0x18]
6401d3c4:	test   eax,eax
6401d3c6:	jg     0x6401d3ce
6401d3c8:	mov    eax,edi
6401d3ca:	or     eax,ebx
6401d3cc:	je     0x6401d3f2
6401d3ce:	mov    eax,DWORD PTR [ebp-0x28]
6401d3d1:	cdq    
6401d3d2:	push   edx
6401d3d3:	push   eax
6401d3d4:	push   ebx
6401d3d5:	push   edi
6401d3d6:	call   0x64019a00
6401d3db:	add    ecx,0x30
6401d3de:	cmp    ecx,0x39
6401d3e1:	mov    DWORD PTR [ebp-0x7c],ebx
6401d3e4:	mov    edi,eax
6401d3e6:	mov    ebx,edx
6401d3e8:	jle    0x6401d3ed
6401d3ea:	add    ecx,DWORD PTR [ebp-0x60]
6401d3ed:	mov    BYTE PTR [esi],cl
6401d3ef:	dec    esi
6401d3f0:	jmp    0x6401d3be
6401d3f2:	lea    eax,[ebp+0x1ef]
6401d3f8:	sub    eax,esi
6401d3fa:	inc    esi
6401d3fb:	test   WORD PTR [ebp-0x14],0x200
6401d401:	mov    DWORD PTR [ebp-0x20],eax
6401d404:	mov    DWORD PTR [ebp-0x1c],esi
6401d407:	je     0x6401d44d
6401d409:	test   eax,eax
6401d40b:	je     0x6401d414
6401d40d:	mov    ecx,esi
6401d40f:	cmp    BYTE PTR [ecx],0x30
6401d412:	je     0x6401d44d
6401d414:	dec    DWORD PTR [ebp-0x1c]
6401d417:	mov    ecx,DWORD PTR [ebp-0x1c]
6401d41a:	mov    BYTE PTR [ecx],0x30
6401d41d:	inc    eax
6401d41e:	jmp    0x6401d44a
6401d420:	test   ebx,ebx
6401d422:	jne    0x6401d42c
6401d424:	mov    eax,ds:0x64052df4
6401d429:	mov    DWORD PTR [ebp-0x1c],eax
6401d42c:	mov    eax,DWORD PTR [ebp-0x1c]
6401d42f:	mov    DWORD PTR [ebp-0x34],0x1
6401d436:	jmp    0x6401d441
6401d438:	dec    edi
6401d439:	cmp    WORD PTR [eax],0x0
6401d43d:	je     0x6401d445
6401d43f:	add    eax,esi
6401d441:	test   edi,edi
6401d443:	jne    0x6401d438
6401d445:	sub    eax,DWORD PTR [ebp-0x1c]
6401d448:	sar    eax,1
6401d44a:	mov    DWORD PTR [ebp-0x20],eax
6401d44d:	cmp    DWORD PTR [ebp-0x5c],0x0
6401d451:	jne    0x6401d556
6401d457:	mov    eax,DWORD PTR [ebp-0x14]
6401d45a:	test   al,0x40
6401d45c:	je     0x6401d489
6401d45e:	test   ax,0x100
6401d462:	je     0x6401d46c
6401d464:	mov    WORD PTR [ebp-0x3c],0x2d
6401d46a:	jmp    0x6401d482
6401d46c:	test   al,0x1
6401d46e:	je     0x6401d478
6401d470:	mov    WORD PTR [ebp-0x3c],0x2b
6401d476:	jmp    0x6401d482
6401d478:	test   al,0x2
6401d47a:	je     0x6401d489
6401d47c:	mov    WORD PTR [ebp-0x3c],0x20
6401d482:	mov    DWORD PTR [ebp-0x30],0x1
6401d489:	mov    ebx,DWORD PTR [ebp-0x38]
6401d48c:	mov    esi,DWORD PTR [ebp-0x20]
6401d48f:	sub    ebx,esi
6401d491:	sub    ebx,DWORD PTR [ebp-0x30]
6401d494:	test   BYTE PTR [ebp-0x14],0xc
6401d498:	jne    0x6401d4ab
6401d49a:	push   DWORD PTR [ebp-0x48]
6401d49d:	lea    eax,[ebp-0x2c]
6401d4a0:	push   ebx
6401d4a1:	push   0x20
6401d4a3:	call   0x6401cc49
6401d4a8:	add    esp,0xc
6401d4ab:	push   DWORD PTR [ebp-0x30]
6401d4ae:	mov    edi,DWORD PTR [ebp-0x48]
6401d4b1:	lea    eax,[ebp-0x2c]
6401d4b4:	lea    ecx,[ebp-0x3c]
6401d4b7:	call   0x6401cc6e
6401d4bc:	test   BYTE PTR [ebp-0x14],0x8
6401d4c0:	pop    ecx
6401d4c1:	je     0x6401d4d8
6401d4c3:	test   BYTE PTR [ebp-0x14],0x4
6401d4c7:	jne    0x6401d4d8
6401d4c9:	push   edi
6401d4ca:	push   ebx
6401d4cb:	push   0x30
6401d4cd:	lea    eax,[ebp-0x2c]
6401d4d0:	call   0x6401cc49
6401d4d5:	add    esp,0xc
6401d4d8:	cmp    DWORD PTR [ebp-0x34],0x0
6401d4dc:	jne    0x6401d52c
6401d4de:	test   esi,esi
6401d4e0:	jle    0x6401d52c
6401d4e2:	mov    edi,DWORD PTR [ebp-0x1c]
6401d4e5:	mov    DWORD PTR [ebp-0x28],esi
6401d4e8:	dec    DWORD PTR [ebp-0x28]
6401d4eb:	lea    eax,[ebp-0x58]
6401d4ee:	push   eax
6401d4ef:	mov    eax,DWORD PTR [ebp-0x58]
6401d4f2:	push   DWORD PTR [eax+0xac]
6401d4f8:	lea    eax,[ebp-0x70]
6401d4fb:	push   edi
6401d4fc:	push   eax
6401d4fd:	call   0x6401eda3
6401d502:	add    esp,0x10
6401d505:	test   eax,eax
6401d507:	mov    DWORD PTR [ebp-0x7c],eax
6401d50a:	jle    0x6401d526
6401d50c:	push   DWORD PTR [ebp-0x70]
6401d50f:	mov    eax,DWORD PTR [ebp-0x48]
6401d512:	lea    esi,[ebp-0x2c]
6401d515:	call   0x6401cc24
6401d51a:	add    edi,DWORD PTR [ebp-0x7c]
6401d51d:	cmp    DWORD PTR [ebp-0x28],0x0
6401d521:	pop    ecx
6401d522:	jg     0x6401d4e8
6401d524:	jmp    0x6401d539
6401d526:	or     DWORD PTR [ebp-0x2c],0xffffffff
6401d52a:	jmp    0x6401d539
6401d52c:	mov    ecx,DWORD PTR [ebp-0x1c]
6401d52f:	push   esi
6401d530:	lea    eax,[ebp-0x2c]
6401d533:	call   0x6401cc6e
6401d538:	pop    ecx
6401d539:	cmp    DWORD PTR [ebp-0x2c],0x0
6401d53d:	jl     0x6401d556
6401d53f:	test   BYTE PTR [ebp-0x14],0x4
6401d543:	je     0x6401d556
6401d545:	push   DWORD PTR [ebp-0x48]
6401d548:	lea    eax,[ebp-0x2c]
6401d54b:	push   ebx
6401d54c:	push   0x20
6401d54e:	call   0x6401cc49
6401d553:	add    esp,0xc
6401d556:	cmp    DWORD PTR [ebp-0x64],0x0
6401d55a:	je     0x6401d569
6401d55c:	push   DWORD PTR [ebp-0x64]
6401d55f:	call   0x6401475f
6401d564:	and    DWORD PTR [ebp-0x64],0x0
6401d568:	pop    ecx
6401d569:	mov    edi,DWORD PTR [ebp-0x6c]
6401d56c:	mov    ebx,DWORD PTR [ebp-0x24]
6401d56f:	movzx  eax,WORD PTR [edi]
6401d572:	test   ax,ax
6401d575:	mov    DWORD PTR [ebp-0x28],eax
6401d578:	je     0x6401d581
6401d57a:	mov    ecx,eax
6401d57c:	jmp    0x6401cd7e
6401d581:	cmp    DWORD PTR [ebp-0x40],0x0
6401d585:	je     0x6401d591
6401d587:	cmp    DWORD PTR [ebp-0x40],0x7
6401d58b:	jne    0x6401cd1c
6401d591:	cmp    BYTE PTR [ebp-0x4c],0x0
6401d595:	je     0x6401d59e
6401d597:	mov    eax,DWORD PTR [ebp-0x50]
6401d59a:	and    DWORD PTR [eax+0x70],0xfffffffd
6401d59e:	mov    eax,DWORD PTR [ebp-0x2c]
6401d5a1:	mov    ecx,DWORD PTR [ebp+0x3f0]
6401d5a7:	pop    edi
6401d5a8:	pop    esi
6401d5a9:	xor    ecx,ebp
6401d5ab:	pop    ebx
6401d5ac:	call   0x64013ca6
6401d5b1:	add    ebp,0x3f4
6401d5b7:	leave  
6401d5b8:	ret    
6401d5b9:	or     edi,0xcdd66401
6401d5bf:	add    DWORD PTR [ebx+esi*8-0x33],esp
6401d5c3:	add    DWORD PTR [edi+edi*1-0x32],esp
6401d5c7:	add    DWORD PTR [ecx+edi*2-0x32],esp
6401d5cb:	add    DWORD PTR [edx+eax*4-0x32],esp
6401d5cf:	add    DWORD PTR [ecx+edi*4-0x32],esp
6401d5d3:	add    DWORD PTR [edx+ebx*4-0x31],esp
6401d5d7:	add    DWORD PTR [ebp+edx*2-0x75],esp
6401d5db:	in     al,dx
6401d5dc:	sub    esp,0x30
6401d5df:	push   ebx
6401d5e0:	push   esi
6401d5e1:	push   DWORD PTR [ebp+0x8]
6401d5e4:	lea    ecx,[ebp-0x30]
6401d5e7:	call   0x640142c5
6401d5ec:	mov    eax,DWORD PTR [ebp+0x10]
6401d5ef:	mov    ebx,DWORD PTR [ebp+0xc]
6401d5f2:	xor    esi,esi
6401d5f4:	cmp    eax,esi
6401d5f6:	je     0x6401d5fa
6401d5f8:	mov    DWORD PTR [eax],ebx
6401d5fa:	cmp    ebx,esi
6401d5fc:	jne    0x6401d62c
6401d5fe:	call   0x64016663
6401d603:	push   esi
6401d604:	push   esi
6401d605:	push   esi
6401d606:	push   esi
6401d607:	push   esi
6401d608:	mov    DWORD PTR [eax],0x16
6401d60e:	call   0x64013df2
6401d613:	add    esp,0x14
6401d616:	cmp    BYTE PTR [ebp-0x24],0x0
6401d61a:	je     0x6401d623
6401d61c:	mov    eax,DWORD PTR [ebp-0x28]
6401d61f:	and    DWORD PTR [eax+0x70],0xfffffffd
6401d623:	xor    eax,eax
6401d625:	xor    edx,edx
6401d627:	jmp    0x6401d885
6401d62c:	cmp    DWORD PTR [ebp+0x14],esi
6401d62f:	je     0x6401d63d
6401d631:	cmp    DWORD PTR [ebp+0x14],0x2
6401d635:	jl     0x6401d5fe
6401d637:	cmp    DWORD PTR [ebp+0x14],0x24
6401d63b:	jg     0x6401d5fe
6401d63d:	push   edi
6401d63e:	mov    DWORD PTR [ebp-0x8],esi
6401d641:	mov    DWORD PTR [ebp-0x4],esi
6401d644:	movzx  esi,WORD PTR [ebx]
6401d647:	lea    edi,[ebx+0x2]
6401d64a:	jmp    0x6401d651
6401d64c:	movzx  esi,WORD PTR [edi]
6401d64f:	inc    edi
6401d650:	inc    edi
6401d651:	lea    eax,[ebp-0x30]
6401d654:	push   eax
6401d655:	push   0x8
6401d657:	push   esi
6401d658:	call   0x6401c213
6401d65d:	add    esp,0xc
6401d660:	test   eax,eax
6401d662:	jne    0x6401d64c
6401d664:	cmp    si,0x2d
6401d668:	jne    0x6401d670
6401d66a:	or     DWORD PTR [ebp+0x18],0x2
6401d66e:	jmp    0x6401d676
6401d670:	cmp    si,0x2b
6401d674:	jne    0x6401d67b
6401d676:	movzx  esi,WORD PTR [edi]
6401d679:	inc    edi
6401d67a:	inc    edi
6401d67b:	mov    eax,DWORD PTR [ebp+0x14]
6401d67e:	test   eax,eax
6401d680:	jl     0x6401d86a
6401d686:	cmp    eax,0x1
6401d689:	je     0x6401d86a
6401d68f:	cmp    eax,0x24
6401d692:	jg     0x6401d86a
6401d698:	test   eax,eax
6401d69a:	push   0x10
6401d69c:	pop    ebx
6401d69d:	jne    0x6401d6ce
6401d69f:	push   esi
6401d6a0:	call   0x64020c9c
6401d6a5:	test   eax,eax
6401d6a7:	pop    ecx
6401d6a8:	je     0x6401d6b3
6401d6aa:	mov    DWORD PTR [ebp+0x14],0xa
6401d6b1:	jmp    0x6401d6f4
6401d6b3:	movzx  eax,WORD PTR [edi]
6401d6b6:	cmp    ax,0x78
6401d6ba:	je     0x6401d6cb
6401d6bc:	cmp    ax,0x58
6401d6c0:	je     0x6401d6cb
6401d6c2:	mov    DWORD PTR [ebp+0x14],0x8
6401d6c9:	jmp    0x6401d6f4
6401d6cb:	mov    DWORD PTR [ebp+0x14],ebx
6401d6ce:	cmp    DWORD PTR [ebp+0x14],ebx
6401d6d1:	jne    0x6401d6f4
6401d6d3:	push   esi
6401d6d4:	call   0x64020c9c
6401d6d9:	test   eax,eax
6401d6db:	pop    ecx
6401d6dc:	jne    0x6401d6f4
6401d6de:	movzx  eax,WORD PTR [edi]
6401d6e1:	cmp    ax,0x78
6401d6e5:	je     0x6401d6ed
6401d6e7:	cmp    ax,0x58
6401d6eb:	jne    0x6401d6f4
6401d6ed:	inc    edi
6401d6ee:	inc    edi
6401d6ef:	movzx  esi,WORD PTR [edi]
6401d6f2:	inc    edi
6401d6f3:	inc    edi
6401d6f4:	mov    eax,DWORD PTR [ebp+0x14]
6401d6f7:	cdq    
6401d6f8:	push   edx
6401d6f9:	push   eax
6401d6fa:	push   0xffffffff
6401d6fc:	push   0xffffffff
6401d6fe:	mov    DWORD PTR [ebp-0x20],eax
6401d701:	mov    DWORD PTR [ebp-0x1c],edx
6401d704:	call   0x64019a00
6401d709:	mov    DWORD PTR [ebp-0x18],ecx
6401d70c:	mov    DWORD PTR [ebp-0x14],ebx
6401d70f:	mov    DWORD PTR [ebp-0x10],eax
6401d712:	mov    DWORD PTR [ebp-0xc],edx
6401d715:	push   esi
6401d716:	call   0x64020c9c
6401d71b:	mov    ebx,eax
6401d71d:	cmp    ebx,0xffffffff
6401d720:	pop    ecx
6401d721:	jne    0x6401d74a
6401d723:	cmp    si,0x41
6401d727:	jb     0x6401d72f
6401d729:	cmp    si,0x5a
6401d72d:	jbe    0x6401d738
6401d72f:	lea    eax,[esi-0x61]
6401d732:	cmp    ax,0x19
6401d736:	ja     0x6401d78a
6401d738:	lea    eax,[esi-0x61]
6401d73b:	cmp    ax,0x19
6401d73f:	movzx  eax,si
6401d742:	ja     0x6401d747
6401d744:	sub    eax,0x20
6401d747:	lea    ebx,[eax-0x37]
6401d74a:	cmp    ebx,DWORD PTR [ebp+0x14]
6401d74d:	jae    0x6401d78a
6401d74f:	mov    ecx,DWORD PTR [ebp-0x4]
6401d752:	or     DWORD PTR [ebp+0x18],0x8
6401d756:	cmp    ecx,DWORD PTR [ebp-0xc]
6401d759:	jb     0x6401d7a8
6401d75b:	ja     0x6401d765
6401d75d:	mov    eax,DWORD PTR [ebp-0x8]
6401d760:	cmp    eax,DWORD PTR [ebp-0x10]
6401d763:	jb     0x6401d7a8
6401d765:	mov    eax,DWORD PTR [ebp-0x10]
6401d768:	cmp    DWORD PTR [ebp-0x8],eax
6401d76b:	jne    0x6401d780
6401d76d:	cmp    ecx,DWORD PTR [ebp-0xc]
6401d770:	jne    0x6401d780
6401d772:	xor    eax,eax
6401d774:	cmp    eax,DWORD PTR [ebp-0x14]
6401d777:	jb     0x6401d7a8
6401d779:	ja     0x6401d780
6401d77b:	cmp    ebx,DWORD PTR [ebp-0x18]
6401d77e:	jbe    0x6401d7a8
6401d780:	or     DWORD PTR [ebp+0x18],0x4
6401d784:	cmp    DWORD PTR [ebp+0x10],0x0
6401d788:	jne    0x6401d7c3
6401d78a:	mov    eax,DWORD PTR [ebp+0x18]
6401d78d:	dec    edi
6401d78e:	dec    edi
6401d78f:	test   al,0x8
6401d791:	jne    0x6401d7cd
6401d793:	xor    eax,eax
6401d795:	cmp    DWORD PTR [ebp+0x10],eax
6401d798:	je     0x6401d79d
6401d79a:	mov    edi,DWORD PTR [ebp+0xc]
6401d79d:	mov    DWORD PTR [ebp-0x8],eax
6401d7a0:	mov    DWORD PTR [ebp-0x4],eax
6401d7a3:	jmp    0x6401d833
6401d7a8:	push   ecx
6401d7a9:	push   DWORD PTR [ebp-0x8]
6401d7ac:	push   DWORD PTR [ebp-0x1c]
6401d7af:	push   DWORD PTR [ebp-0x20]
6401d7b2:	call   0x64015a60
6401d7b7:	xor    ecx,ecx
6401d7b9:	add    eax,ebx
6401d7bb:	adc    edx,ecx
6401d7bd:	mov    DWORD PTR [ebp-0x8],eax
6401d7c0:	mov    DWORD PTR [ebp-0x4],edx
6401d7c3:	movzx  esi,WORD PTR [edi]
6401d7c6:	inc    edi
6401d7c7:	inc    edi
6401d7c8:	jmp    0x6401d715
6401d7cd:	test   al,0x4
6401d7cf:	mov    esi,0x7fffffff
6401d7d4:	mov    ebx,0x80000000
6401d7d9:	jne    0x6401d802
6401d7db:	test   al,0x1
6401d7dd:	jne    0x6401d833
6401d7df:	and    eax,0x2
6401d7e2:	je     0x6401d7f1
6401d7e4:	cmp    DWORD PTR [ebp-0x4],ebx
6401d7e7:	ja     0x6401d802
6401d7e9:	jb     0x6401d7f1
6401d7eb:	cmp    DWORD PTR [ebp-0x8],0x0
6401d7ef:	ja     0x6401d802
6401d7f1:	test   eax,eax
6401d7f3:	jne    0x6401d833
6401d7f5:	cmp    DWORD PTR [ebp-0x4],esi
6401d7f8:	jb     0x6401d833
6401d7fa:	ja     0x6401d802
6401d7fc:	cmp    DWORD PTR [ebp-0x8],0xffffffff
6401d800:	jbe    0x6401d833
6401d802:	call   0x64016663
6401d807:	test   BYTE PTR [ebp+0x18],0x1
6401d80b:	mov    DWORD PTR [eax],0x22
6401d811:	je     0x6401d81d
6401d813:	or     DWORD PTR [ebp-0x8],0xffffffff
6401d817:	or     DWORD PTR [ebp-0x4],0xffffffff
6401d81b:	jmp    0x6401d833
6401d81d:	test   BYTE PTR [ebp+0x18],0x2
6401d821:	je     0x6401d82c
6401d823:	and    DWORD PTR [ebp-0x8],0x0
6401d827:	mov    DWORD PTR [ebp-0x4],ebx
6401d82a:	jmp    0x6401d833
6401d82c:	or     DWORD PTR [ebp-0x8],0xffffffff
6401d830:	mov    DWORD PTR [ebp-0x4],esi
6401d833:	mov    eax,DWORD PTR [ebp+0x10]
6401d836:	test   eax,eax
6401d838:	je     0x6401d83c
6401d83a:	mov    DWORD PTR [eax],edi
6401d83c:	test   BYTE PTR [ebp+0x18],0x2
6401d840:	je     0x6401d855
6401d842:	mov    eax,DWORD PTR [ebp-0x8]
6401d845:	mov    ecx,DWORD PTR [ebp-0x4]
6401d848:	neg    eax
6401d84a:	adc    ecx,0x0
6401d84d:	neg    ecx
6401d84f:	mov    DWORD PTR [ebp-0x8],eax
6401d852:	mov    DWORD PTR [ebp-0x4],ecx
6401d855:	cmp    BYTE PTR [ebp-0x24],0x0
6401d859:	je     0x6401d862
6401d85b:	mov    eax,DWORD PTR [ebp-0x28]
6401d85e:	and    DWORD PTR [eax+0x70],0xfffffffd
6401d862:	mov    eax,DWORD PTR [ebp-0x8]
6401d865:	mov    edx,DWORD PTR [ebp-0x4]
6401d868:	jmp    0x6401d884
6401d86a:	mov    eax,DWORD PTR [ebp+0x10]
6401d86d:	test   eax,eax
6401d86f:	je     0x6401d873
6401d871:	mov    DWORD PTR [eax],ebx
6401d873:	cmp    BYTE PTR [ebp-0x24],0x0
6401d877:	je     0x6401d880
6401d879:	mov    eax,DWORD PTR [ebp-0x28]
6401d87c:	and    DWORD PTR [eax+0x70],0xfffffffd
6401d880:	xor    eax,eax
6401d882:	xor    edx,edx
6401d884:	pop    edi
6401d885:	pop    esi
6401d886:	pop    ebx
6401d887:	leave  
6401d888:	ret    
6401d889:	push   ebp
6401d88a:	mov    ebp,esp
6401d88c:	xor    eax,eax
6401d88e:	cmp    DWORD PTR ds:0x64053a08,eax
6401d894:	push   eax
6401d895:	push   DWORD PTR [ebp+0x10]
6401d898:	push   DWORD PTR [ebp+0xc]
6401d89b:	push   DWORD PTR [ebp+0x8]
6401d89e:	jne    0x6401d8a7
6401d8a0:	push   0x64052b68
6401d8a5:	jmp    0x6401d8a8
6401d8a7:	push   eax
6401d8a8:	call   0x6401d5d9
6401d8ad:	add    esp,0x14
6401d8b0:	pop    ebp
6401d8b1:	ret    
6401d8b2:	mov    eax,DWORD PTR [esp+0x4]
6401d8b6:	mov    ds:0x64054380,eax
6401d8bb:	ret    
6401d8bc:	push   ebp
6401d8bd:	mov    ebp,esp
6401d8bf:	sub    esp,0x10
6401d8c2:	push   DWORD PTR [ebp+0x8]
6401d8c5:	lea    ecx,[ebp-0x10]
6401d8c8:	call   0x640142c5
6401d8cd:	movzx  eax,BYTE PTR [ebp+0xc]
6401d8d1:	mov    ecx,DWORD PTR [ebp-0xc]
6401d8d4:	mov    dl,BYTE PTR [ebp+0x14]
6401d8d7:	test   BYTE PTR [ecx+eax*1+0x1d],dl
6401d8db:	jne    0x6401d8fb
6401d8dd:	cmp    DWORD PTR [ebp+0x10],0x0
6401d8e1:	je     0x6401d8f5
6401d8e3:	mov    ecx,DWORD PTR [ebp-0x10]
6401d8e6:	mov    ecx,DWORD PTR [ecx+0xc8]
6401d8ec:	movzx  eax,WORD PTR [ecx+eax*2]
6401d8f0:	and    eax,DWORD PTR [ebp+0x10]
6401d8f3:	jmp    0x6401d8f7
6401d8f5:	xor    eax,eax
6401d8f7:	test   eax,eax
6401d8f9:	je     0x6401d8fe
6401d8fb:	xor    eax,eax
6401d8fd:	inc    eax
6401d8fe:	cmp    BYTE PTR [ebp-0x4],0x0
6401d902:	je     0x6401d90b
6401d904:	mov    ecx,DWORD PTR [ebp-0x8]
6401d907:	and    DWORD PTR [ecx+0x70],0xfffffffd
6401d90b:	leave  
6401d90c:	ret    
6401d90d:	push   0x4
6401d90f:	push   0x0
6401d911:	push   DWORD PTR [esp+0xc]
6401d915:	push   0x0
6401d917:	call   0x6401d8bc
6401d91c:	add    esp,0x10
6401d91f:	ret    
6401d920:	push   ebp
6401d921:	mov    ebp,esp
6401d923:	sub    esp,0x4
6401d926:	mov    DWORD PTR [ebp-0x4],edi
6401d929:	mov    edi,DWORD PTR [ebp+0x8]
6401d92c:	mov    ecx,DWORD PTR [ebp+0xc]
6401d92f:	shr    ecx,0x7
6401d932:	pxor   xmm0,xmm0
6401d936:	jmp    0x6401d940
6401d938:	lea    esp,[esp+0x0]
6401d93f:	nop
6401d940:	movdqa XMMWORD PTR [edi],xmm0
6401d944:	movdqa XMMWORD PTR [edi+0x10],xmm0
6401d949:	movdqa XMMWORD PTR [edi+0x20],xmm0
6401d94e:	movdqa XMMWORD PTR [edi+0x30],xmm0
6401d953:	movdqa XMMWORD PTR [edi+0x40],xmm0
6401d958:	movdqa XMMWORD PTR [edi+0x50],xmm0
6401d95d:	movdqa XMMWORD PTR [edi+0x60],xmm0
6401d962:	movdqa XMMWORD PTR [edi+0x70],xmm0
6401d967:	lea    edi,[edi+0x80]
6401d96d:	dec    ecx
6401d96e:	jne    0x6401d940
6401d970:	mov    edi,DWORD PTR [ebp-0x4]
6401d973:	mov    esp,ebp
6401d975:	pop    ebp
6401d976:	ret    
6401d977:	push   ebp
6401d978:	mov    ebp,esp
6401d97a:	sub    esp,0x10
6401d97d:	mov    DWORD PTR [ebp-0x4],edi
6401d980:	mov    eax,DWORD PTR [ebp+0x8]
6401d983:	cdq    
6401d984:	mov    edi,eax
6401d986:	xor    edi,edx
6401d988:	sub    edi,edx
6401d98a:	and    edi,0xf
6401d98d:	xor    edi,edx
6401d98f:	sub    edi,edx
6401d991:	test   edi,edi
6401d993:	jne    0x6401d9d1
6401d995:	mov    ecx,DWORD PTR [ebp+0x10]
6401d998:	mov    edx,ecx
6401d99a:	and    edx,0x7f
6401d99d:	mov    DWORD PTR [ebp-0xc],edx
6401d9a0:	cmp    ecx,edx
6401d9a2:	je     0x6401d9b6
6401d9a4:	sub    ecx,edx
6401d9a6:	push   ecx
6401d9a7:	push   eax
6401d9a8:	call   0x6401d920
6401d9ad:	add    esp,0x8
6401d9b0:	mov    eax,DWORD PTR [ebp+0x8]
6401d9b3:	mov    edx,DWORD PTR [ebp-0xc]
6401d9b6:	test   edx,edx
6401d9b8:	je     0x6401d9ff
6401d9ba:	add    eax,DWORD PTR [ebp+0x10]
6401d9bd:	sub    eax,edx
6401d9bf:	mov    DWORD PTR [ebp-0x8],eax
6401d9c2:	xor    eax,eax
6401d9c4:	mov    edi,DWORD PTR [ebp-0x8]
6401d9c7:	mov    ecx,DWORD PTR [ebp-0xc]
6401d9ca:	rep stos BYTE PTR es:[edi],al
6401d9cc:	mov    eax,DWORD PTR [ebp+0x8]
6401d9cf:	jmp    0x6401d9ff
6401d9d1:	neg    edi
6401d9d3:	add    edi,0x10
6401d9d6:	mov    DWORD PTR [ebp-0x10],edi
6401d9d9:	xor    eax,eax
6401d9db:	mov    edi,DWORD PTR [ebp+0x8]
6401d9de:	mov    ecx,DWORD PTR [ebp-0x10]
6401d9e1:	rep stos BYTE PTR es:[edi],al
6401d9e3:	mov    eax,DWORD PTR [ebp-0x10]
6401d9e6:	mov    ecx,DWORD PTR [ebp+0x8]
6401d9e9:	mov    edx,DWORD PTR [ebp+0x10]
6401d9ec:	add    ecx,eax
6401d9ee:	sub    edx,eax
6401d9f0:	push   edx
6401d9f1:	push   0x0
6401d9f3:	push   ecx
6401d9f4:	call   0x6401d977
6401d9f9:	add    esp,0xc
6401d9fc:	mov    eax,DWORD PTR [ebp+0x8]
6401d9ff:	mov    edi,DWORD PTR [ebp-0x4]
6401da02:	mov    esp,ebp
6401da04:	pop    ebp
6401da05:	ret    
6401da06:	and    DWORD PTR ds:0x64054670,0x0
6401da0d:	call   0x640210c2
6401da12:	mov    ds:0x64054670,eax
6401da17:	xor    eax,eax
6401da19:	ret    
6401da1a:	push   ebp
6401da1b:	mov    ebp,esp
6401da1d:	sub    esp,0x8
6401da20:	mov    DWORD PTR [ebp-0x4],edi
6401da23:	mov    DWORD PTR [ebp-0x8],esi
6401da26:	mov    esi,DWORD PTR [ebp+0xc]
6401da29:	mov    edi,DWORD PTR [ebp+0x8]
6401da2c:	mov    ecx,DWORD PTR [ebp+0x10]
6401da2f:	shr    ecx,0x7
6401da32:	jmp    0x6401da3a
6401da34:	lea    ebx,[ebx+0x0]
6401da3a:	movdqa xmm0,XMMWORD PTR [esi]
6401da3e:	movdqa xmm1,XMMWORD PTR [esi+0x10]
6401da43:	movdqa xmm2,XMMWORD PTR [esi+0x20]
6401da48:	movdqa xmm3,XMMWORD PTR [esi+0x30]
6401da4d:	movdqa XMMWORD PTR [edi],xmm0
6401da51:	movdqa XMMWORD PTR [edi+0x10],xmm1
6401da56:	movdqa XMMWORD PTR [edi+0x20],xmm2
6401da5b:	movdqa XMMWORD PTR [edi+0x30],xmm3
6401da60:	movdqa xmm4,XMMWORD PTR [esi+0x40]
6401da65:	movdqa xmm5,XMMWORD PTR [esi+0x50]
6401da6a:	movdqa xmm6,XMMWORD PTR [esi+0x60]
6401da6f:	movdqa xmm7,XMMWORD PTR [esi+0x70]
6401da74:	movdqa XMMWORD PTR [edi+0x40],xmm4
6401da79:	movdqa XMMWORD PTR [edi+0x50],xmm5
6401da7e:	movdqa XMMWORD PTR [edi+0x60],xmm6
6401da83:	movdqa XMMWORD PTR [edi+0x70],xmm7
6401da88:	lea    esi,[esi+0x80]
6401da8e:	lea    edi,[edi+0x80]
6401da94:	dec    ecx
6401da95:	jne    0x6401da3a
6401da97:	mov    esi,DWORD PTR [ebp-0x8]
6401da9a:	mov    edi,DWORD PTR [ebp-0x4]
6401da9d:	mov    esp,ebp
6401da9f:	pop    ebp
6401daa0:	ret    
6401daa1:	push   ebp
6401daa2:	mov    ebp,esp
6401daa4:	sub    esp,0x1c
6401daa7:	mov    DWORD PTR [ebp-0xc],edi
6401daaa:	mov    DWORD PTR [ebp-0x8],esi
6401daad:	mov    DWORD PTR [ebp-0x4],ebx
6401dab0:	mov    ebx,DWORD PTR [ebp+0xc]
6401dab3:	mov    eax,ebx
6401dab5:	cdq    
6401dab6:	mov    ecx,eax
6401dab8:	mov    eax,DWORD PTR [ebp+0x8]
6401dabb:	xor    ecx,edx
6401dabd:	sub    ecx,edx
6401dabf:	and    ecx,0xf
6401dac2:	xor    ecx,edx
6401dac4:	sub    ecx,edx
6401dac6:	cdq    
6401dac7:	mov    edi,eax
6401dac9:	xor    edi,edx
6401dacb:	sub    edi,edx
6401dacd:	and    edi,0xf
6401dad0:	xor    edi,edx
6401dad2:	sub    edi,edx
6401dad4:	mov    edx,ecx
6401dad6:	or     edx,edi
6401dad8:	jne    0x6401db24
6401dada:	mov    esi,DWORD PTR [ebp+0x10]
6401dadd:	mov    ecx,esi
6401dadf:	and    ecx,0x7f
6401dae2:	mov    DWORD PTR [ebp-0x18],ecx
6401dae5:	cmp    esi,ecx
6401dae7:	je     0x6401dafc
6401dae9:	sub    esi,ecx
6401daeb:	push   esi
6401daec:	push   ebx
6401daed:	push   eax
6401daee:	call   0x6401da1a
6401daf3:	add    esp,0xc
6401daf6:	mov    eax,DWORD PTR [ebp+0x8]
6401daf9:	mov    ecx,DWORD PTR [ebp-0x18]
6401dafc:	test   ecx,ecx
6401dafe:	je     0x6401db77
6401db00:	mov    ebx,DWORD PTR [ebp+0x10]
6401db03:	mov    edx,DWORD PTR [ebp+0xc]
6401db06:	add    edx,ebx
6401db08:	sub    edx,ecx
6401db0a:	mov    DWORD PTR [ebp-0x14],edx
6401db0d:	add    ebx,eax
6401db0f:	sub    ebx,ecx
6401db11:	mov    DWORD PTR [ebp-0x10],ebx
6401db14:	mov    esi,DWORD PTR [ebp-0x14]
6401db17:	mov    edi,DWORD PTR [ebp-0x10]
6401db1a:	mov    ecx,DWORD PTR [ebp-0x18]
6401db1d:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
6401db1f:	mov    eax,DWORD PTR [ebp+0x8]
6401db22:	jmp    0x6401db77
6401db24:	cmp    ecx,edi
6401db26:	jne    0x6401db5d
6401db28:	neg    ecx
6401db2a:	add    ecx,0x10
6401db2d:	mov    DWORD PTR [ebp-0x1c],ecx
6401db30:	mov    esi,DWORD PTR [ebp+0xc]
6401db33:	mov    edi,DWORD PTR [ebp+0x8]
6401db36:	mov    ecx,DWORD PTR [ebp-0x1c]
6401db39:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
6401db3b:	mov    ecx,DWORD PTR [ebp+0x8]
6401db3e:	add    ecx,DWORD PTR [ebp-0x1c]
6401db41:	mov    edx,DWORD PTR [ebp+0xc]
6401db44:	add    edx,DWORD PTR [ebp-0x1c]
6401db47:	mov    eax,DWORD PTR [ebp+0x10]
6401db4a:	sub    eax,DWORD PTR [ebp-0x1c]
6401db4d:	push   eax
6401db4e:	push   edx
6401db4f:	push   ecx
6401db50:	call   0x6401daa1
6401db55:	add    esp,0xc
6401db58:	mov    eax,DWORD PTR [ebp+0x8]
6401db5b:	jmp    0x6401db77
6401db5d:	mov    esi,DWORD PTR [ebp+0xc]
6401db60:	mov    edi,DWORD PTR [ebp+0x8]
6401db63:	mov    ecx,DWORD PTR [ebp+0x10]
6401db66:	mov    edx,ecx
6401db68:	shr    ecx,0x2
6401db6b:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
6401db6d:	mov    ecx,edx
6401db6f:	and    ecx,0x3
6401db72:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
6401db74:	mov    eax,DWORD PTR [ebp+0x8]
6401db77:	mov    ebx,DWORD PTR [ebp-0x4]
6401db7a:	mov    esi,DWORD PTR [ebp-0x8]
6401db7d:	mov    edi,DWORD PTR [ebp-0xc]
6401db80:	mov    esp,ebp
6401db82:	pop    ebp
6401db83:	ret    
6401db84:	int3   
6401db85:	int3   
6401db86:	int3   
6401db87:	int3   
6401db88:	int3   
6401db89:	int3   
6401db8a:	int3   
6401db8b:	int3   
6401db8c:	int3   
6401db8d:	int3   
6401db8e:	int3   
6401db8f:	int3   
6401db90:	mov    ecx,DWORD PTR [esp+0x4]
6401db94:	cmp    WORD PTR [ecx],0x5a4d
6401db99:	je     0x6401db9e
6401db9b:	xor    eax,eax
6401db9d:	ret    
6401db9e:	mov    eax,DWORD PTR [ecx+0x3c]
6401dba1:	add    eax,ecx
6401dba3:	cmp    DWORD PTR [eax],0x4550
6401dba9:	jne    0x6401db9b
6401dbab:	xor    ecx,ecx
6401dbad:	cmp    WORD PTR [eax+0x18],0x10b
6401dbb3:	sete   cl
6401dbb6:	mov    eax,ecx
6401dbb8:	ret    
6401dbb9:	int3   
6401dbba:	int3   
6401dbbb:	int3   
6401dbbc:	int3   
6401dbbd:	int3   
6401dbbe:	int3   
6401dbbf:	int3   
6401dbc0:	mov    eax,DWORD PTR [esp+0x4]
6401dbc4:	mov    ecx,DWORD PTR [eax+0x3c]
6401dbc7:	add    ecx,eax
6401dbc9:	movzx  eax,WORD PTR [ecx+0x14]
6401dbcd:	push   ebx
6401dbce:	push   esi
6401dbcf:	movzx  esi,WORD PTR [ecx+0x6]
6401dbd3:	xor    edx,edx
6401dbd5:	test   esi,esi
6401dbd7:	push   edi
6401dbd8:	lea    eax,[eax+ecx*1+0x18]
6401dbdc:	jbe    0x6401dbfc
6401dbde:	mov    edi,DWORD PTR [esp+0x14]
6401dbe2:	mov    ecx,DWORD PTR [eax+0xc]
6401dbe5:	cmp    edi,ecx
6401dbe7:	jb     0x6401dbf2
6401dbe9:	mov    ebx,DWORD PTR [eax+0x8]
6401dbec:	add    ebx,ecx
6401dbee:	cmp    edi,ebx
6401dbf0:	jb     0x6401dbfe
6401dbf2:	add    edx,0x1
6401dbf5:	add    eax,0x28
6401dbf8:	cmp    edx,esi
6401dbfa:	jb     0x6401dbe2
6401dbfc:	xor    eax,eax
6401dbfe:	pop    edi
6401dbff:	pop    esi
6401dc00:	pop    ebx
6401dc01:	ret    
6401dc02:	int3   
6401dc03:	int3   
6401dc04:	int3   
6401dc05:	int3   
6401dc06:	int3   
6401dc07:	int3   
6401dc08:	int3   
6401dc09:	int3   
6401dc0a:	int3   
6401dc0b:	int3   
6401dc0c:	int3   
6401dc0d:	int3   
6401dc0e:	int3   
6401dc0f:	int3   
6401dc10:	push   ebp
6401dc11:	mov    ebp,esp
6401dc13:	push   0xfffffffe
6401dc15:	push   0x64043ee8
6401dc1a:	push   0x640158c0
6401dc1f:	mov    eax,fs:0x0
6401dc25:	push   eax
6401dc26:	sub    esp,0x8
6401dc29:	push   ebx
6401dc2a:	push   esi
6401dc2b:	push   edi
6401dc2c:	mov    eax,ds:0x640521ac
6401dc31:	xor    DWORD PTR [ebp-0x8],eax
6401dc34:	xor    eax,ebp
6401dc36:	push   eax
6401dc37:	lea    eax,[ebp-0x10]
6401dc3a:	mov    fs:0x0,eax
6401dc40:	mov    DWORD PTR [ebp-0x18],esp
6401dc43:	mov    DWORD PTR [ebp-0x4],0x0
6401dc4a:	push   0x64000000
6401dc4f:	call   0x6401db90
6401dc54:	add    esp,0x4
6401dc57:	test   eax,eax
6401dc59:	je     0x6401dcb0
6401dc5b:	mov    eax,DWORD PTR [ebp+0x8]
6401dc5e:	sub    eax,0x64000000
6401dc63:	push   eax
6401dc64:	push   0x64000000
6401dc69:	call   0x6401dbc0
6401dc6e:	add    esp,0x8
6401dc71:	test   eax,eax
6401dc73:	je     0x6401dcb0
6401dc75:	mov    eax,DWORD PTR [eax+0x24]
6401dc78:	shr    eax,0x1f
6401dc7b:	not    eax
6401dc7d:	and    eax,0x1
6401dc80:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401dc87:	mov    ecx,DWORD PTR [ebp-0x10]
6401dc8a:	mov    DWORD PTR fs:0x0,ecx
6401dc91:	pop    ecx
6401dc92:	pop    edi
6401dc93:	pop    esi
6401dc94:	pop    ebx
6401dc95:	mov    esp,ebp
6401dc97:	pop    ebp
6401dc98:	ret    
6401dc99:	mov    eax,DWORD PTR [ebp-0x14]
6401dc9c:	mov    ecx,DWORD PTR [eax]
6401dc9e:	mov    eax,DWORD PTR [ecx]
6401dca0:	xor    edx,edx
6401dca2:	cmp    eax,0xc0000005
6401dca7:	sete   dl
6401dcaa:	mov    eax,edx
6401dcac:	ret    
6401dcad:	mov    esp,DWORD PTR [ebp-0x18]
6401dcb0:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401dcb7:	xor    eax,eax
6401dcb9:	mov    ecx,DWORD PTR [ebp-0x10]
6401dcbc:	mov    DWORD PTR fs:0x0,ecx
6401dcc3:	pop    ecx
6401dcc4:	pop    edi
6401dcc5:	pop    esi
6401dcc6:	pop    ebx
6401dcc7:	mov    esp,ebp
6401dcc9:	pop    ebp
6401dcca:	ret    
6401dccb:	push   esi
6401dccc:	mov    esi,DWORD PTR [esp+0x8]
6401dcd0:	test   esi,esi
6401dcd2:	je     0x6401de59
6401dcd8:	push   DWORD PTR [esi+0x4]
6401dcdb:	call   0x6401475f
6401dce0:	push   DWORD PTR [esi+0x8]
6401dce3:	call   0x6401475f
6401dce8:	push   DWORD PTR [esi+0xc]
6401dceb:	call   0x6401475f
6401dcf0:	push   DWORD PTR [esi+0x10]
6401dcf3:	call   0x6401475f
6401dcf8:	push   DWORD PTR [esi+0x14]
6401dcfb:	call   0x6401475f
6401dd00:	push   DWORD PTR [esi+0x18]
6401dd03:	call   0x6401475f
6401dd08:	push   DWORD PTR [esi]
6401dd0a:	call   0x6401475f
6401dd0f:	push   DWORD PTR [esi+0x20]
6401dd12:	call   0x6401475f
6401dd17:	push   DWORD PTR [esi+0x24]
6401dd1a:	call   0x6401475f
6401dd1f:	push   DWORD PTR [esi+0x28]
6401dd22:	call   0x6401475f
6401dd27:	push   DWORD PTR [esi+0x2c]
6401dd2a:	call   0x6401475f
6401dd2f:	push   DWORD PTR [esi+0x30]
6401dd32:	call   0x6401475f
6401dd37:	push   DWORD PTR [esi+0x34]
6401dd3a:	call   0x6401475f
6401dd3f:	push   DWORD PTR [esi+0x1c]
6401dd42:	call   0x6401475f
6401dd47:	push   DWORD PTR [esi+0x38]
6401dd4a:	call   0x6401475f
6401dd4f:	push   DWORD PTR [esi+0x3c]
6401dd52:	call   0x6401475f
6401dd57:	add    esp,0x40
6401dd5a:	push   DWORD PTR [esi+0x40]
6401dd5d:	call   0x6401475f
6401dd62:	push   DWORD PTR [esi+0x44]
6401dd65:	call   0x6401475f
6401dd6a:	push   DWORD PTR [esi+0x48]
6401dd6d:	call   0x6401475f
6401dd72:	push   DWORD PTR [esi+0x4c]
6401dd75:	call   0x6401475f
6401dd7a:	push   DWORD PTR [esi+0x50]
6401dd7d:	call   0x6401475f
6401dd82:	push   DWORD PTR [esi+0x54]
6401dd85:	call   0x6401475f
6401dd8a:	push   DWORD PTR [esi+0x58]
6401dd8d:	call   0x6401475f
6401dd92:	push   DWORD PTR [esi+0x5c]
6401dd95:	call   0x6401475f
6401dd9a:	push   DWORD PTR [esi+0x60]
6401dd9d:	call   0x6401475f
6401dda2:	push   DWORD PTR [esi+0x64]
6401dda5:	call   0x6401475f
6401ddaa:	push   DWORD PTR [esi+0x68]
6401ddad:	call   0x6401475f
6401ddb2:	push   DWORD PTR [esi+0x6c]
6401ddb5:	call   0x6401475f
6401ddba:	push   DWORD PTR [esi+0x70]
6401ddbd:	call   0x6401475f
6401ddc2:	push   DWORD PTR [esi+0x74]
6401ddc5:	call   0x6401475f
6401ddca:	push   DWORD PTR [esi+0x78]
6401ddcd:	call   0x6401475f
6401ddd2:	push   DWORD PTR [esi+0x7c]
6401ddd5:	call   0x6401475f
6401ddda:	add    esp,0x40
6401dddd:	push   DWORD PTR [esi+0x80]
6401dde3:	call   0x6401475f
6401dde8:	push   DWORD PTR [esi+0x84]
6401ddee:	call   0x6401475f
6401ddf3:	push   DWORD PTR [esi+0x88]
6401ddf9:	call   0x6401475f
6401ddfe:	push   DWORD PTR [esi+0x8c]
6401de04:	call   0x6401475f
6401de09:	push   DWORD PTR [esi+0x90]
6401de0f:	call   0x6401475f
6401de14:	push   DWORD PTR [esi+0x94]
6401de1a:	call   0x6401475f
6401de1f:	push   DWORD PTR [esi+0x98]
6401de25:	call   0x6401475f
6401de2a:	push   DWORD PTR [esi+0x9c]
6401de30:	call   0x6401475f
6401de35:	push   DWORD PTR [esi+0xa0]
6401de3b:	call   0x6401475f
6401de40:	push   DWORD PTR [esi+0xa4]
6401de46:	call   0x6401475f
6401de4b:	push   DWORD PTR [esi+0xa8]
6401de51:	call   0x6401475f
6401de56:	add    esp,0x2c
6401de59:	pop    esi
6401de5a:	ret    
6401de5b:	push   esi
6401de5c:	mov    esi,DWORD PTR [esp+0x8]
6401de60:	test   esi,esi
6401de62:	je     0x6401de99
6401de64:	mov    eax,DWORD PTR [esi]
6401de66:	cmp    eax,DWORD PTR ds:0x640530a0
6401de6c:	je     0x6401de75
6401de6e:	push   eax
6401de6f:	call   0x6401475f
6401de74:	pop    ecx
6401de75:	mov    eax,DWORD PTR [esi+0x4]
6401de78:	cmp    eax,DWORD PTR ds:0x640530a4
6401de7e:	je     0x6401de87
6401de80:	push   eax
6401de81:	call   0x6401475f
6401de86:	pop    ecx
6401de87:	mov    esi,DWORD PTR [esi+0x8]
6401de8a:	cmp    esi,DWORD PTR ds:0x640530a8
6401de90:	je     0x6401de99
6401de92:	push   esi
6401de93:	call   0x6401475f
6401de98:	pop    ecx
6401de99:	pop    esi
6401de9a:	ret    
6401de9b:	push   esi
6401de9c:	mov    esi,DWORD PTR [esp+0x8]
6401dea0:	test   esi,esi
6401dea2:	je     0x6401df22
6401dea4:	mov    eax,DWORD PTR [esi+0xc]
6401dea7:	cmp    eax,DWORD PTR ds:0x640530ac
6401dead:	je     0x6401deb6
6401deaf:	push   eax
6401deb0:	call   0x6401475f
6401deb5:	pop    ecx
6401deb6:	mov    eax,DWORD PTR [esi+0x10]
6401deb9:	cmp    eax,DWORD PTR ds:0x640530b0
6401debf:	je     0x6401dec8
6401dec1:	push   eax
6401dec2:	call   0x6401475f
6401dec7:	pop    ecx
6401dec8:	mov    eax,DWORD PTR [esi+0x14]
6401decb:	cmp    eax,DWORD PTR ds:0x640530b4
6401ded1:	je     0x6401deda
6401ded3:	push   eax
6401ded4:	call   0x6401475f
6401ded9:	pop    ecx
6401deda:	mov    eax,DWORD PTR [esi+0x18]
6401dedd:	cmp    eax,DWORD PTR ds:0x640530b8
6401dee3:	je     0x6401deec
6401dee5:	push   eax
6401dee6:	call   0x6401475f
6401deeb:	pop    ecx
6401deec:	mov    eax,DWORD PTR [esi+0x1c]
6401deef:	cmp    eax,DWORD PTR ds:0x640530bc
6401def5:	je     0x6401defe
6401def7:	push   eax
6401def8:	call   0x6401475f
6401defd:	pop    ecx
6401defe:	mov    eax,DWORD PTR [esi+0x20]
6401df01:	cmp    eax,DWORD PTR ds:0x640530c0
6401df07:	je     0x6401df10
6401df09:	push   eax
6401df0a:	call   0x6401475f
6401df0f:	pop    ecx
6401df10:	mov    esi,DWORD PTR [esi+0x24]
6401df13:	cmp    esi,DWORD PTR ds:0x640530c4
6401df19:	je     0x6401df22
6401df1b:	push   esi
6401df1c:	call   0x6401475f
6401df21:	pop    ecx
6401df22:	pop    esi
6401df23:	ret    
6401df24:	mov    eax,DWORD PTR [esp+0x4]
6401df28:	push   ebx
6401df29:	xor    ebx,ebx
6401df2b:	cmp    eax,ebx
6401df2d:	push   esi
6401df2e:	push   edi
6401df2f:	je     0x6401df39
6401df31:	mov    edi,DWORD PTR [esp+0x14]
6401df35:	cmp    edi,ebx
6401df37:	ja     0x6401df54
6401df39:	call   0x64016663
6401df3e:	push   0x16
6401df40:	pop    esi
6401df41:	mov    DWORD PTR [eax],esi
6401df43:	push   ebx
6401df44:	push   ebx
6401df45:	push   ebx
6401df46:	push   ebx
6401df47:	push   ebx
6401df48:	call   0x64013df2
6401df4d:	add    esp,0x14
6401df50:	mov    eax,esi
6401df52:	jmp    0x6401df91
6401df54:	mov    esi,DWORD PTR [esp+0x18]
6401df58:	cmp    esi,ebx
6401df5a:	jne    0x6401df60
6401df5c:	mov    BYTE PTR [eax],bl
6401df5e:	jmp    0x6401df39
6401df60:	mov    edx,eax
6401df62:	cmp    BYTE PTR [edx],bl
6401df64:	je     0x6401df6a
6401df66:	inc    edx
6401df67:	dec    edi
6401df68:	jne    0x6401df62
6401df6a:	cmp    edi,ebx
6401df6c:	je     0x6401df5c
6401df6e:	mov    cl,BYTE PTR [esi]
6401df70:	mov    BYTE PTR [edx],cl
6401df72:	inc    edx
6401df73:	inc    esi
6401df74:	cmp    cl,bl
6401df76:	je     0x6401df7b
6401df78:	dec    edi
6401df79:	jne    0x6401df6e
6401df7b:	cmp    edi,ebx
6401df7d:	jne    0x6401df8f
6401df7f:	mov    BYTE PTR [eax],bl
6401df81:	call   0x64016663
6401df86:	push   0x22
6401df88:	pop    ecx
6401df89:	mov    DWORD PTR [eax],ecx
6401df8b:	mov    esi,ecx
6401df8d:	jmp    0x6401df43
6401df8f:	xor    eax,eax
6401df91:	pop    edi
6401df92:	pop    esi
6401df93:	pop    ebx
6401df94:	ret    
6401df95:	int3   
6401df96:	int3   
6401df97:	int3   
6401df98:	int3   
6401df99:	int3   
6401df9a:	int3   
6401df9b:	int3   
6401df9c:	int3   
6401df9d:	int3   
6401df9e:	int3   
6401df9f:	int3   
6401dfa0:	push   ebp
6401dfa1:	mov    ebp,esp
6401dfa3:	push   esi
6401dfa4:	xor    eax,eax
6401dfa6:	push   eax
6401dfa7:	push   eax
6401dfa8:	push   eax
6401dfa9:	push   eax
6401dfaa:	push   eax
6401dfab:	push   eax
6401dfac:	push   eax
6401dfad:	push   eax
6401dfae:	mov    edx,DWORD PTR [ebp+0xc]
6401dfb1:	lea    ecx,[ecx+0x0]
6401dfb4:	mov    al,BYTE PTR [edx]
6401dfb6:	or     al,al
6401dfb8:	je     0x6401dfc3
6401dfba:	add    edx,0x1
6401dfbd:	bts    DWORD PTR [esp],eax
6401dfc1:	jmp    0x6401dfb4
6401dfc3:	mov    esi,DWORD PTR [ebp+0x8]
6401dfc6:	or     ecx,0xffffffff
6401dfc9:	lea    ecx,[ecx+0x0]
6401dfcc:	add    ecx,0x1
6401dfcf:	mov    al,BYTE PTR [esi]
6401dfd1:	or     al,al
6401dfd3:	je     0x6401dfde
6401dfd5:	add    esi,0x1
6401dfd8:	bt     DWORD PTR [esp],eax
6401dfdc:	jae    0x6401dfcc
6401dfde:	mov    eax,ecx
6401dfe0:	add    esp,0x20
6401dfe3:	pop    esi
6401dfe4:	leave  
6401dfe5:	ret    
6401dfe6:	push   ebp
6401dfe7:	mov    ebp,esp
6401dfe9:	push   ebx
6401dfea:	push   esi
6401dfeb:	mov    esi,DWORD PTR [ebp+0x8]
6401dfee:	xor    ebx,ebx
6401dff0:	cmp    DWORD PTR [ebp+0x14],ebx
6401dff3:	push   edi
6401dff4:	jne    0x6401e006
6401dff6:	cmp    esi,ebx
6401dff8:	jne    0x6401e00a
6401dffa:	cmp    DWORD PTR [ebp+0xc],ebx
6401dffd:	jne    0x6401e011
6401dfff:	xor    eax,eax
6401e001:	pop    edi
6401e002:	pop    esi
6401e003:	pop    ebx
6401e004:	pop    ebp
6401e005:	ret    
6401e006:	cmp    esi,ebx
6401e008:	je     0x6401e011
6401e00a:	mov    edi,DWORD PTR [ebp+0xc]
6401e00d:	cmp    edi,ebx
6401e00f:	ja     0x6401e02c
6401e011:	call   0x64016663
6401e016:	push   0x16
6401e018:	pop    esi
6401e019:	mov    DWORD PTR [eax],esi
6401e01b:	push   ebx
6401e01c:	push   ebx
6401e01d:	push   ebx
6401e01e:	push   ebx
6401e01f:	push   ebx
6401e020:	call   0x64013df2
6401e025:	add    esp,0x14
6401e028:	mov    eax,esi
6401e02a:	jmp    0x6401e001
6401e02c:	cmp    DWORD PTR [ebp+0x14],ebx
6401e02f:	jne    0x6401e035
6401e031:	mov    BYTE PTR [esi],bl
6401e033:	jmp    0x6401dfff
6401e035:	mov    edx,DWORD PTR [ebp+0x10]
6401e038:	cmp    edx,ebx
6401e03a:	jne    0x6401e040
6401e03c:	mov    BYTE PTR [esi],bl
6401e03e:	jmp    0x6401e011
6401e040:	cmp    DWORD PTR [ebp+0x14],0xffffffff
6401e044:	mov    eax,esi
6401e046:	jne    0x6401e057
6401e048:	mov    cl,BYTE PTR [edx]
6401e04a:	mov    BYTE PTR [eax],cl
6401e04c:	inc    eax
6401e04d:	inc    edx
6401e04e:	cmp    cl,bl
6401e050:	je     0x6401e070
6401e052:	dec    edi
6401e053:	jne    0x6401e048
6401e055:	jmp    0x6401e070
6401e057:	mov    cl,BYTE PTR [edx]
6401e059:	mov    BYTE PTR [eax],cl
6401e05b:	inc    eax
6401e05c:	inc    edx
6401e05d:	cmp    cl,bl
6401e05f:	je     0x6401e069
6401e061:	dec    edi
6401e062:	je     0x6401e069
6401e064:	dec    DWORD PTR [ebp+0x14]
6401e067:	jne    0x6401e057
6401e069:	cmp    DWORD PTR [ebp+0x14],ebx
6401e06c:	jne    0x6401e070
6401e06e:	mov    BYTE PTR [eax],bl
6401e070:	cmp    edi,ebx
6401e072:	jne    0x6401dfff
6401e074:	cmp    DWORD PTR [ebp+0x14],0xffffffff
6401e078:	jne    0x6401e089
6401e07a:	mov    eax,DWORD PTR [ebp+0xc]
6401e07d:	push   0x50
6401e07f:	mov    BYTE PTR [esi+eax*1-0x1],bl
6401e083:	pop    eax
6401e084:	jmp    0x6401e001
6401e089:	mov    BYTE PTR [esi],bl
6401e08b:	call   0x64016663
6401e090:	push   0x22
6401e092:	pop    ecx
6401e093:	mov    DWORD PTR [eax],ecx
6401e095:	mov    esi,ecx
6401e097:	jmp    0x6401e01b
6401e099:	push   ebp
6401e09a:	mov    ebp,esp
6401e09c:	push   ecx
6401e09d:	push   ecx
6401e09e:	mov    eax,ds:0x640521ac
6401e0a3:	xor    eax,ebp
6401e0a5:	mov    DWORD PTR [ebp-0x4],eax
6401e0a8:	mov    eax,ds:0x64054388
6401e0ad:	push   ebx
6401e0ae:	push   esi
6401e0af:	xor    ebx,ebx
6401e0b1:	cmp    eax,ebx
6401e0b3:	push   edi
6401e0b4:	mov    edi,ecx
6401e0b6:	jne    0x6401e0f2
6401e0b8:	lea    eax,[ebp-0x8]
6401e0bb:	push   eax
6401e0bc:	xor    esi,esi
6401e0be:	inc    esi
6401e0bf:	push   esi
6401e0c0:	push   0x64041d78
6401e0c5:	push   esi
6401e0c6:	call   DWORD PTR ds:0x6402c138
6401e0cc:	test   eax,eax
6401e0ce:	je     0x6401e0d8
6401e0d0:	mov    DWORD PTR ds:0x64054388,esi
6401e0d6:	jmp    0x6401e10c
6401e0d8:	call   DWORD PTR ds:0x6402c06c
6401e0de:	cmp    eax,0x78
6401e0e1:	jne    0x6401e0ed
6401e0e3:	push   0x2
6401e0e5:	pop    eax
6401e0e6:	mov    ds:0x64054388,eax
6401e0eb:	jmp    0x6401e0f2
6401e0ed:	mov    eax,ds:0x64054388
6401e0f2:	cmp    eax,0x2
6401e0f5:	je     0x6401e1ca
6401e0fb:	cmp    eax,ebx
6401e0fd:	je     0x6401e1ca
6401e103:	cmp    eax,0x1
6401e106:	jne    0x6401e1f4
6401e10c:	cmp    DWORD PTR [ebp+0x18],ebx
6401e10f:	mov    DWORD PTR [ebp-0x8],ebx
6401e112:	jne    0x6401e11c
6401e114:	mov    eax,DWORD PTR [edi]
6401e116:	mov    eax,DWORD PTR [eax+0x4]
6401e119:	mov    DWORD PTR [ebp+0x18],eax
6401e11c:	mov    esi,DWORD PTR ds:0x6402c02c
6401e122:	xor    eax,eax
6401e124:	cmp    DWORD PTR [ebp+0x20],ebx
6401e127:	push   ebx
6401e128:	push   ebx
6401e129:	push   DWORD PTR [ebp+0x10]
6401e12c:	setne  al
6401e12f:	push   DWORD PTR [ebp+0xc]
6401e132:	lea    eax,[eax*8+0x1]
6401e139:	push   eax
6401e13a:	push   DWORD PTR [ebp+0x18]
6401e13d:	call   esi
6401e13f:	mov    edi,eax
6401e141:	cmp    edi,ebx
6401e143:	je     0x6401e1f4
6401e149:	jle    0x6401e187
6401e14b:	cmp    edi,0x7ffffff0
6401e151:	ja     0x6401e187
6401e153:	lea    eax,[edi+edi*1+0x8]
6401e157:	cmp    eax,0x400
6401e15c:	ja     0x6401e171
6401e15e:	call   0x64013cc0
6401e163:	mov    eax,esp
6401e165:	cmp    eax,ebx
6401e167:	je     0x6401e185
6401e169:	mov    DWORD PTR [eax],0xcccc
6401e16f:	jmp    0x6401e182
6401e171:	push   eax
6401e172:	call   0x6401485e
6401e177:	cmp    eax,ebx
6401e179:	pop    ecx
6401e17a:	je     0x6401e185
6401e17c:	mov    DWORD PTR [eax],0xdddd
6401e182:	add    eax,0x8
6401e185:	mov    ebx,eax
6401e187:	test   ebx,ebx
6401e189:	je     0x6401e1f4
6401e18b:	lea    eax,[edi+edi*1]
6401e18e:	push   eax
6401e18f:	push   0x0
6401e191:	push   ebx
6401e192:	call   0x64015100
6401e197:	add    esp,0xc
6401e19a:	push   edi
6401e19b:	push   ebx
6401e19c:	push   DWORD PTR [ebp+0x10]
6401e19f:	push   DWORD PTR [ebp+0xc]
6401e1a2:	push   0x1
6401e1a4:	push   DWORD PTR [ebp+0x18]
6401e1a7:	call   esi
6401e1a9:	test   eax,eax
6401e1ab:	je     0x6401e1be
6401e1ad:	push   DWORD PTR [ebp+0x14]
6401e1b0:	push   eax
6401e1b1:	push   ebx
6401e1b2:	push   DWORD PTR [ebp+0x8]
6401e1b5:	call   DWORD PTR ds:0x6402c138
6401e1bb:	mov    DWORD PTR [ebp-0x8],eax
6401e1be:	push   ebx
6401e1bf:	call   0x640142aa
6401e1c4:	mov    eax,DWORD PTR [ebp-0x8]
6401e1c7:	pop    ecx
6401e1c8:	jmp    0x6401e23f
6401e1ca:	xor    esi,esi
6401e1cc:	cmp    DWORD PTR [ebp+0x1c],ebx
6401e1cf:	jne    0x6401e1d9
6401e1d1:	mov    eax,DWORD PTR [edi]
6401e1d3:	mov    eax,DWORD PTR [eax+0x14]
6401e1d6:	mov    DWORD PTR [ebp+0x1c],eax
6401e1d9:	cmp    DWORD PTR [ebp+0x18],ebx
6401e1dc:	jne    0x6401e1e6
6401e1de:	mov    eax,DWORD PTR [edi]
6401e1e0:	mov    eax,DWORD PTR [eax+0x4]
6401e1e3:	mov    DWORD PTR [ebp+0x18],eax
6401e1e6:	push   DWORD PTR [ebp+0x1c]
6401e1e9:	call   0x6401e2e0
6401e1ee:	cmp    eax,0xffffffff
6401e1f1:	pop    ecx
6401e1f2:	jne    0x6401e1f8
6401e1f4:	xor    eax,eax
6401e1f6:	jmp    0x6401e23f
6401e1f8:	cmp    eax,DWORD PTR [ebp+0x18]
6401e1fb:	je     0x6401e21b
6401e1fd:	push   ebx
6401e1fe:	push   ebx
6401e1ff:	lea    ecx,[ebp+0x10]
6401e202:	push   ecx
6401e203:	push   DWORD PTR [ebp+0xc]
6401e206:	push   eax
6401e207:	push   DWORD PTR [ebp+0x18]
6401e20a:	call   0x6401e327
6401e20f:	mov    esi,eax
6401e211:	add    esp,0x18
6401e214:	cmp    esi,ebx
6401e216:	je     0x6401e1f4
6401e218:	mov    DWORD PTR [ebp+0xc],esi
6401e21b:	push   DWORD PTR [ebp+0x14]
6401e21e:	push   DWORD PTR [ebp+0x10]
6401e221:	push   DWORD PTR [ebp+0xc]
6401e224:	push   DWORD PTR [ebp+0x8]
6401e227:	push   DWORD PTR [ebp+0x1c]
6401e22a:	call   DWORD PTR ds:0x6402c134
6401e230:	cmp    esi,ebx
6401e232:	mov    edi,eax
6401e234:	je     0x6401e23d
6401e236:	push   esi
6401e237:	call   0x6401475f
6401e23c:	pop    ecx
6401e23d:	mov    eax,edi
6401e23f:	lea    esp,[ebp-0x14]
6401e242:	pop    edi
6401e243:	pop    esi
6401e244:	pop    ebx
6401e245:	mov    ecx,DWORD PTR [ebp-0x4]
6401e248:	xor    ecx,ebp
6401e24a:	call   0x64013ca6
6401e24f:	leave  
6401e250:	ret    
6401e251:	push   ebp
6401e252:	mov    ebp,esp
6401e254:	sub    esp,0x10
6401e257:	push   DWORD PTR [ebp+0x8]
6401e25a:	lea    ecx,[ebp-0x10]
6401e25d:	call   0x640142c5
6401e262:	push   DWORD PTR [ebp+0x24]
6401e265:	lea    ecx,[ebp-0x10]
6401e268:	push   DWORD PTR [ebp+0x20]
6401e26b:	push   DWORD PTR [ebp+0x1c]
6401e26e:	push   DWORD PTR [ebp+0x18]
6401e271:	push   DWORD PTR [ebp+0x14]
6401e274:	push   DWORD PTR [ebp+0x10]
6401e277:	push   DWORD PTR [ebp+0xc]
6401e27a:	call   0x6401e099
6401e27f:	add    esp,0x1c
6401e282:	cmp    BYTE PTR [ebp-0x4],0x0
6401e286:	je     0x6401e28f
6401e288:	mov    ecx,DWORD PTR [ebp-0x8]
6401e28b:	and    DWORD PTR [ecx+0x70],0xfffffffd
6401e28f:	leave  
6401e290:	ret    
6401e291:	int3   
6401e292:	int3   
6401e293:	int3   
6401e294:	int3   
6401e295:	int3   
6401e296:	int3   
6401e297:	int3   
6401e298:	int3   
6401e299:	int3   
6401e29a:	int3   
6401e29b:	int3   
6401e29c:	int3   
6401e29d:	int3   
6401e29e:	int3   
6401e29f:	int3   
6401e2a0:	push   ebp
6401e2a1:	mov    ebp,esp
6401e2a3:	push   esi
6401e2a4:	xor    eax,eax
6401e2a6:	push   eax
6401e2a7:	push   eax
6401e2a8:	push   eax
6401e2a9:	push   eax
6401e2aa:	push   eax
6401e2ab:	push   eax
6401e2ac:	push   eax
6401e2ad:	push   eax
6401e2ae:	mov    edx,DWORD PTR [ebp+0xc]
6401e2b1:	lea    ecx,[ecx+0x0]
6401e2b4:	mov    al,BYTE PTR [edx]
6401e2b6:	or     al,al
6401e2b8:	je     0x6401e2c3
6401e2ba:	add    edx,0x1
6401e2bd:	bts    DWORD PTR [esp],eax
6401e2c1:	jmp    0x6401e2b4
6401e2c3:	mov    esi,DWORD PTR [ebp+0x8]
6401e2c6:	mov    edi,edi
6401e2c8:	mov    al,BYTE PTR [esi]
6401e2ca:	or     al,al
6401e2cc:	je     0x6401e2da
6401e2ce:	add    esi,0x1
6401e2d1:	bt     DWORD PTR [esp],eax
6401e2d5:	jae    0x6401e2c8
6401e2d7:	lea    eax,[esi-0x1]
6401e2da:	add    esp,0x20
6401e2dd:	pop    esi
6401e2de:	leave  
6401e2df:	ret    
6401e2e0:	push   ebp
6401e2e1:	mov    ebp,esp
6401e2e3:	sub    esp,0xc
6401e2e6:	mov    eax,ds:0x640521ac
6401e2eb:	xor    eax,ebp
6401e2ed:	mov    DWORD PTR [ebp-0x4],eax
6401e2f0:	push   0x6
6401e2f2:	lea    eax,[ebp-0xc]
6401e2f5:	push   eax
6401e2f6:	push   0x1004
6401e2fb:	push   DWORD PTR [ebp+0x8]
6401e2fe:	mov    BYTE PTR [ebp-0x6],0x0
6401e302:	call   DWORD PTR ds:0x6402c180
6401e308:	test   eax,eax
6401e30a:	jne    0x6401e311
6401e30c:	or     eax,0xffffffff
6401e30f:	jmp    0x6401e31b
6401e311:	lea    eax,[ebp-0xc]
6401e314:	push   eax
6401e315:	call   0x6402112f
6401e31a:	pop    ecx
6401e31b:	mov    ecx,DWORD PTR [ebp-0x4]
6401e31e:	xor    ecx,ebp
6401e320:	call   0x64013ca6
6401e325:	leave  
6401e326:	ret    
6401e327:	push   ebp
6401e328:	mov    ebp,esp
6401e32a:	sub    esp,0x34
6401e32d:	mov    eax,ds:0x640521ac
6401e332:	xor    eax,ebp
6401e334:	mov    DWORD PTR [ebp-0x4],eax
6401e337:	mov    eax,DWORD PTR [ebp+0x10]
6401e33a:	mov    ecx,DWORD PTR [ebp+0x18]
6401e33d:	mov    DWORD PTR [ebp-0x28],eax
6401e340:	mov    eax,DWORD PTR [ebp+0x14]
6401e343:	push   ebx
6401e344:	mov    DWORD PTR [ebp-0x30],eax
6401e347:	mov    eax,DWORD PTR [eax]
6401e349:	push   esi
6401e34a:	mov    DWORD PTR [ebp-0x24],eax
6401e34d:	mov    eax,DWORD PTR [ebp+0x8]
6401e350:	push   edi
6401e351:	xor    edi,edi
6401e353:	cmp    eax,DWORD PTR [ebp+0xc]
6401e356:	mov    DWORD PTR [ebp-0x34],ecx
6401e359:	mov    DWORD PTR [ebp-0x20],edi
6401e35c:	mov    DWORD PTR [ebp-0x2c],edi
6401e35f:	je     0x6401e4c4
6401e365:	mov    esi,DWORD PTR ds:0x6402c1cc
6401e36b:	lea    ecx,[ebp-0x18]
6401e36e:	push   ecx
6401e36f:	push   eax
6401e370:	call   esi
6401e372:	test   eax,eax
6401e374:	mov    ebx,DWORD PTR ds:0x6402c02c
6401e37a:	je     0x6401e3da
6401e37c:	cmp    DWORD PTR [ebp-0x18],0x1
6401e380:	jne    0x6401e3da
6401e382:	lea    eax,[ebp-0x18]
6401e385:	push   eax
6401e386:	push   DWORD PTR [ebp+0xc]
6401e389:	call   esi
6401e38b:	test   eax,eax
6401e38d:	je     0x6401e3da
6401e38f:	cmp    DWORD PTR [ebp-0x18],0x1
6401e393:	jne    0x6401e3da
6401e395:	mov    esi,DWORD PTR [ebp-0x24]
6401e398:	cmp    esi,0xffffffff
6401e39b:	mov    DWORD PTR [ebp-0x2c],0x1
6401e3a2:	jne    0x6401e3b0
6401e3a4:	push   DWORD PTR [ebp-0x28]
6401e3a7:	call   0x64015aa0
6401e3ac:	mov    esi,eax
6401e3ae:	pop    ecx
6401e3af:	inc    esi
6401e3b0:	cmp    esi,edi
6401e3b2:	jle    0x6401e40f
6401e3b4:	cmp    esi,0x7ffffff0
6401e3ba:	ja     0x6401e40f
6401e3bc:	lea    eax,[esi+esi*1+0x8]
6401e3c0:	cmp    eax,0x400
6401e3c5:	ja     0x6401e3f6
6401e3c7:	call   0x64013cc0
6401e3cc:	mov    eax,esp
6401e3ce:	cmp    eax,edi
6401e3d0:	je     0x6401e40a
6401e3d2:	mov    DWORD PTR [eax],0xcccc
6401e3d8:	jmp    0x6401e407
6401e3da:	push   edi
6401e3db:	push   edi
6401e3dc:	push   DWORD PTR [ebp-0x24]
6401e3df:	push   DWORD PTR [ebp-0x28]
6401e3e2:	push   0x1
6401e3e4:	push   DWORD PTR [ebp+0x8]
6401e3e7:	call   ebx
6401e3e9:	mov    esi,eax
6401e3eb:	cmp    esi,edi
6401e3ed:	jne    0x6401e3b2
6401e3ef:	xor    eax,eax
6401e3f1:	jmp    0x6401e4c7
6401e3f6:	push   eax
6401e3f7:	call   0x6401485e
6401e3fc:	cmp    eax,edi
6401e3fe:	pop    ecx
6401e3ff:	je     0x6401e40a
6401e401:	mov    DWORD PTR [eax],0xdddd
6401e407:	add    eax,0x8
6401e40a:	mov    DWORD PTR [ebp-0x1c],eax
6401e40d:	jmp    0x6401e412
6401e40f:	mov    DWORD PTR [ebp-0x1c],edi
6401e412:	cmp    DWORD PTR [ebp-0x1c],edi
6401e415:	je     0x6401e3ef
6401e417:	lea    eax,[esi+esi*1]
6401e41a:	push   eax
6401e41b:	push   edi
6401e41c:	push   DWORD PTR [ebp-0x1c]
6401e41f:	call   0x64015100
6401e424:	add    esp,0xc
6401e427:	push   esi
6401e428:	push   DWORD PTR [ebp-0x1c]
6401e42b:	push   DWORD PTR [ebp-0x24]
6401e42e:	push   DWORD PTR [ebp-0x28]
6401e431:	push   0x1
6401e433:	push   DWORD PTR [ebp+0x8]
6401e436:	call   ebx
6401e438:	test   eax,eax
6401e43a:	je     0x6401e4bb
6401e43c:	mov    ebx,DWORD PTR [ebp-0x34]
6401e43f:	cmp    ebx,edi
6401e441:	je     0x6401e460
6401e443:	push   edi
6401e444:	push   edi
6401e445:	push   DWORD PTR [ebp+0x1c]
6401e448:	push   ebx
6401e449:	push   esi
6401e44a:	push   DWORD PTR [ebp-0x1c]
6401e44d:	push   edi
6401e44e:	push   DWORD PTR [ebp+0xc]
6401e451:	call   DWORD PTR ds:0x6402c014
6401e457:	test   eax,eax
6401e459:	je     0x6401e4bb
6401e45b:	mov    DWORD PTR [ebp-0x20],ebx
6401e45e:	jmp    0x6401e4bb
6401e460:	cmp    DWORD PTR [ebp-0x2c],edi
6401e463:	mov    ebx,DWORD PTR ds:0x6402c014
6401e469:	jne    0x6401e47f
6401e46b:	push   edi
6401e46c:	push   edi
6401e46d:	push   edi
6401e46e:	push   edi
6401e46f:	push   esi
6401e470:	push   DWORD PTR [ebp-0x1c]
6401e473:	push   edi
6401e474:	push   DWORD PTR [ebp+0xc]
6401e477:	call   ebx
6401e479:	mov    esi,eax
6401e47b:	cmp    esi,edi
6401e47d:	je     0x6401e4bb
6401e47f:	push   esi
6401e480:	push   0x1
6401e482:	call   0x640162bf
6401e487:	cmp    eax,edi
6401e489:	pop    ecx
6401e48a:	pop    ecx
6401e48b:	mov    DWORD PTR [ebp-0x20],eax
6401e48e:	je     0x6401e4bb
6401e490:	push   edi
6401e491:	push   edi
6401e492:	push   esi
6401e493:	push   eax
6401e494:	push   esi
6401e495:	push   DWORD PTR [ebp-0x1c]
6401e498:	push   edi
6401e499:	push   DWORD PTR [ebp+0xc]
6401e49c:	call   ebx
6401e49e:	cmp    eax,edi
6401e4a0:	jne    0x6401e4b0
6401e4a2:	push   DWORD PTR [ebp-0x20]
6401e4a5:	call   0x6401475f
6401e4aa:	pop    ecx
6401e4ab:	mov    DWORD PTR [ebp-0x20],edi
6401e4ae:	jmp    0x6401e4bb
6401e4b0:	cmp    DWORD PTR [ebp-0x24],0xffffffff
6401e4b4:	je     0x6401e4bb
6401e4b6:	mov    ecx,DWORD PTR [ebp-0x30]
6401e4b9:	mov    DWORD PTR [ecx],eax
6401e4bb:	push   DWORD PTR [ebp-0x1c]
6401e4be:	call   0x640142aa
6401e4c3:	pop    ecx
6401e4c4:	mov    eax,DWORD PTR [ebp-0x20]
6401e4c7:	lea    esp,[ebp-0x40]
6401e4ca:	pop    edi
6401e4cb:	pop    esi
6401e4cc:	pop    ebx
6401e4cd:	mov    ecx,DWORD PTR [ebp-0x4]
6401e4d0:	xor    ecx,ebp
6401e4d2:	call   0x64013ca6
6401e4d7:	leave  
6401e4d8:	ret    
6401e4d9:	mov    eax,DWORD PTR [esp+0x4]
6401e4dd:	mov    ds:0x6405438c,eax
6401e4e2:	mov    ds:0x64054390,eax
6401e4e7:	mov    ds:0x64054394,eax
6401e4ec:	mov    ds:0x64054398,eax
6401e4f1:	ret    
6401e4f2:	mov    eax,DWORD PTR [esp+0x4]
6401e4f6:	mov    ecx,DWORD PTR ds:0x64052554
6401e4fc:	push   esi
6401e4fd:	cmp    DWORD PTR [eax+0x4],edx
6401e500:	je     0x6401e512
6401e502:	mov    esi,ecx
6401e504:	imul   esi,esi,0xc
6401e507:	add    esi,DWORD PTR [esp+0x8]
6401e50b:	add    eax,0xc
6401e50e:	cmp    eax,esi
6401e510:	jb     0x6401e4fd
6401e512:	imul   ecx,ecx,0xc
6401e515:	add    ecx,DWORD PTR [esp+0x8]
6401e519:	pop    esi
6401e51a:	cmp    eax,ecx
6401e51c:	jae    0x6401e523
6401e51e:	cmp    DWORD PTR [eax+0x4],edx
6401e521:	je     0x6401e525
6401e523:	xor    eax,eax
6401e525:	ret    
6401e526:	push   DWORD PTR ds:0x64054394
6401e52c:	call   0x640177ae
6401e531:	pop    ecx
6401e532:	ret    
6401e533:	push   0x20
6401e535:	push   0x64043f08
6401e53a:	call   0x64016464
6401e53f:	xor    edi,edi
6401e541:	mov    DWORD PTR [ebp-0x1c],edi
6401e544:	mov    DWORD PTR [ebp-0x28],edi
6401e547:	mov    ebx,DWORD PTR [ebp+0x8]
6401e54a:	cmp    ebx,0xb
6401e54d:	jg     0x6401e59b
6401e54f:	je     0x6401e566
6401e551:	mov    eax,ebx
6401e553:	push   0x2
6401e555:	pop    ecx
6401e556:	sub    eax,ecx
6401e558:	je     0x6401e57c
6401e55a:	sub    eax,ecx
6401e55c:	je     0x6401e566
6401e55e:	sub    eax,ecx
6401e560:	je     0x6401e5c6
6401e562:	sub    eax,ecx
6401e564:	jne    0x6401e5aa
6401e566:	call   0x64017953
6401e56b:	mov    edi,eax
6401e56d:	mov    DWORD PTR [ebp-0x28],edi
6401e570:	test   edi,edi
6401e572:	jne    0x6401e588
6401e574:	or     eax,0xffffffff
6401e577:	jmp    0x6401e6dd
6401e57c:	mov    esi,0x6405438c
6401e581:	mov    eax,ds:0x6405438c
6401e586:	jmp    0x6401e5e8
6401e588:	push   DWORD PTR [edi+0x5c]
6401e58b:	mov    edx,ebx
6401e58d:	call   0x6401e4f2
6401e592:	mov    esi,eax
6401e594:	add    esi,0x8
6401e597:	mov    eax,DWORD PTR [esi]
6401e599:	jmp    0x6401e5f5
6401e59b:	mov    eax,ebx
6401e59d:	sub    eax,0xf
6401e5a0:	je     0x6401e5de
6401e5a2:	sub    eax,0x6
6401e5a5:	je     0x6401e5d2
6401e5a7:	dec    eax
6401e5a8:	je     0x6401e5c6
6401e5aa:	call   0x64016663
6401e5af:	mov    DWORD PTR [eax],0x16
6401e5b5:	xor    eax,eax
6401e5b7:	push   eax
6401e5b8:	push   eax
6401e5b9:	push   eax
6401e5ba:	push   eax
6401e5bb:	push   eax
6401e5bc:	call   0x64013df2
6401e5c1:	add    esp,0x14
6401e5c4:	jmp    0x6401e574
6401e5c6:	mov    esi,0x64054394
6401e5cb:	mov    eax,ds:0x64054394
6401e5d0:	jmp    0x6401e5e8
6401e5d2:	mov    esi,0x64054390
6401e5d7:	mov    eax,ds:0x64054390
6401e5dc:	jmp    0x6401e5e8
6401e5de:	mov    esi,0x64054398
6401e5e3:	mov    eax,ds:0x64054398
6401e5e8:	mov    DWORD PTR [ebp-0x1c],0x1
6401e5ef:	push   eax
6401e5f0:	call   0x640177ae
6401e5f5:	mov    DWORD PTR [ebp-0x20],eax
6401e5f8:	pop    ecx
6401e5f9:	xor    eax,eax
6401e5fb:	cmp    DWORD PTR [ebp-0x20],0x1
6401e5ff:	je     0x6401e6dd
6401e605:	cmp    DWORD PTR [ebp-0x20],eax
6401e608:	jne    0x6401e611
6401e60a:	push   0x3
6401e60c:	call   0x64018246
6401e611:	cmp    DWORD PTR [ebp-0x1c],eax
6401e614:	je     0x6401e61d
6401e616:	push   eax
6401e617:	call   0x6401b42a
6401e61c:	pop    ecx
6401e61d:	xor    eax,eax
6401e61f:	mov    DWORD PTR [ebp-0x4],eax
6401e622:	cmp    ebx,0x8
6401e625:	je     0x6401e631
6401e627:	cmp    ebx,0xb
6401e62a:	je     0x6401e631
6401e62c:	cmp    ebx,0x4
6401e62f:	jne    0x6401e64c
6401e631:	mov    ecx,DWORD PTR [edi+0x60]
6401e634:	mov    DWORD PTR [ebp-0x2c],ecx
6401e637:	mov    DWORD PTR [edi+0x60],eax
6401e63a:	cmp    ebx,0x8
6401e63d:	jne    0x6401e67f
6401e63f:	mov    ecx,DWORD PTR [edi+0x64]
6401e642:	mov    DWORD PTR [ebp-0x30],ecx
6401e645:	mov    DWORD PTR [edi+0x64],0x8c
6401e64c:	cmp    ebx,0x8
6401e64f:	jne    0x6401e67f
6401e651:	mov    ecx,DWORD PTR ds:0x64052548
6401e657:	mov    DWORD PTR [ebp-0x24],ecx
6401e65a:	mov    ecx,DWORD PTR ds:0x6405254c
6401e660:	mov    edx,DWORD PTR ds:0x64052548
6401e666:	add    ecx,edx
6401e668:	cmp    DWORD PTR [ebp-0x24],ecx
6401e66b:	jge    0x6401e686
6401e66d:	mov    ecx,DWORD PTR [ebp-0x24]
6401e670:	imul   ecx,ecx,0xc
6401e673:	mov    edx,DWORD PTR [edi+0x5c]
6401e676:	mov    DWORD PTR [ecx+edx*1+0x8],eax
6401e67a:	inc    DWORD PTR [ebp-0x24]
6401e67d:	jmp    0x6401e65a
6401e67f:	call   0x640177a5
6401e684:	mov    DWORD PTR [esi],eax
6401e686:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401e68d:	call   0x6401e6a7
6401e692:	cmp    ebx,0x8
6401e695:	jne    0x6401e6b6
6401e697:	push   DWORD PTR [edi+0x64]
6401e69a:	push   ebx
6401e69b:	call   DWORD PTR [ebp-0x20]
6401e69e:	pop    ecx
6401e69f:	jmp    0x6401e6ba
6401e6a1:	mov    ebx,DWORD PTR [ebp+0x8]
6401e6a4:	mov    edi,DWORD PTR [ebp-0x28]
6401e6a7:	cmp    DWORD PTR [ebp-0x1c],0x0
6401e6ab:	je     0x6401e6b5
6401e6ad:	push   0x0
6401e6af:	call   0x6401b352
6401e6b4:	pop    ecx
6401e6b5:	ret    
6401e6b6:	push   ebx
6401e6b7:	call   DWORD PTR [ebp-0x20]
6401e6ba:	pop    ecx
6401e6bb:	cmp    ebx,0x8
6401e6be:	je     0x6401e6ca
6401e6c0:	cmp    ebx,0xb
6401e6c3:	je     0x6401e6ca
6401e6c5:	cmp    ebx,0x4
6401e6c8:	jne    0x6401e6db
6401e6ca:	mov    eax,DWORD PTR [ebp-0x2c]
6401e6cd:	mov    DWORD PTR [edi+0x60],eax
6401e6d0:	cmp    ebx,0x8
6401e6d3:	jne    0x6401e6db
6401e6d5:	mov    eax,DWORD PTR [ebp-0x30]
6401e6d8:	mov    DWORD PTR [edi+0x64],eax
6401e6db:	xor    eax,eax
6401e6dd:	call   0x640164a9
6401e6e2:	ret    
6401e6e3:	xor    eax,eax
6401e6e5:	inc    eax
6401e6e6:	cmp    DWORD PTR [esp+0x4],0x0
6401e6eb:	jne    0x6401e6ef
6401e6ed:	xor    eax,eax
6401e6ef:	ret    
6401e6f0:	push   ebp
6401e6f1:	mov    ebp,esp
6401e6f3:	push   ebx
6401e6f4:	push   esi
6401e6f5:	push   edi
6401e6f6:	push   ebp
6401e6f7:	push   0x0
6401e6f9:	push   0x0
6401e6fb:	push   0x6401e708
6401e700:	push   DWORD PTR [ebp+0x8]
6401e703:	call   0x64022e1c
6401e708:	pop    ebp
6401e709:	pop    edi
6401e70a:	pop    esi
6401e70b:	pop    ebx
6401e70c:	mov    esp,ebp
6401e70e:	pop    ebp
6401e70f:	ret    
6401e710:	mov    ecx,DWORD PTR [esp+0x4]
6401e714:	test   DWORD PTR [ecx+0x4],0x6
6401e71b:	mov    eax,0x1
6401e720:	je     0x6401e754
6401e722:	mov    eax,DWORD PTR [esp+0x14]
6401e726:	mov    ecx,DWORD PTR [eax-0x4]
6401e729:	xor    ecx,eax
6401e72b:	call   0x64013ca6
6401e730:	push   ebp
6401e731:	mov    ebp,DWORD PTR [eax+0x10]
6401e734:	mov    edx,DWORD PTR [eax+0x28]
6401e737:	push   edx
6401e738:	mov    edx,DWORD PTR [eax+0x24]
6401e73b:	push   edx
6401e73c:	call   0x6401e755
6401e741:	add    esp,0x8
6401e744:	pop    ebp
6401e745:	mov    eax,DWORD PTR [esp+0x8]
6401e749:	mov    edx,DWORD PTR [esp+0x10]
6401e74d:	mov    DWORD PTR [edx],eax
6401e74f:	mov    eax,0x3
6401e754:	ret    
6401e755:	push   ebx
6401e756:	push   esi
6401e757:	push   edi
6401e758:	mov    eax,DWORD PTR [esp+0x10]
6401e75c:	push   ebp
6401e75d:	push   eax
6401e75e:	push   0xfffffffe
6401e760:	push   0x6401e710
6401e765:	push   DWORD PTR fs:0x0
6401e76c:	mov    eax,ds:0x640521ac
6401e771:	xor    eax,esp
6401e773:	push   eax
6401e774:	lea    eax,[esp+0x4]
6401e778:	mov    fs:0x0,eax
6401e77e:	mov    eax,DWORD PTR [esp+0x28]
6401e782:	mov    ebx,DWORD PTR [eax+0x8]
6401e785:	mov    esi,DWORD PTR [eax+0xc]
6401e788:	cmp    esi,0xffffffff
6401e78b:	je     0x6401e7c7
6401e78d:	cmp    DWORD PTR [esp+0x2c],0xffffffff
6401e792:	je     0x6401e79a
6401e794:	cmp    esi,DWORD PTR [esp+0x2c]
6401e798:	jbe    0x6401e7c7
6401e79a:	lea    esi,[esi+esi*2]
6401e79d:	mov    ecx,DWORD PTR [ebx+esi*4]
6401e7a0:	mov    DWORD PTR [esp+0xc],ecx
6401e7a4:	mov    DWORD PTR [eax+0xc],ecx
6401e7a7:	cmp    DWORD PTR [ebx+esi*4+0x4],0x0
6401e7ac:	jne    0x6401e7c5
6401e7ae:	push   0x101
6401e7b3:	mov    eax,DWORD PTR [ebx+esi*4+0x8]
6401e7b7:	call   0x6401e805
6401e7bc:	mov    eax,DWORD PTR [ebx+esi*4+0x8]
6401e7c0:	call   0x6401e824
6401e7c5:	jmp    0x6401e77e
6401e7c7:	mov    ecx,DWORD PTR [esp+0x4]
6401e7cb:	mov    DWORD PTR fs:0x0,ecx
6401e7d2:	add    esp,0x18
6401e7d5:	pop    edi
6401e7d6:	pop    esi
6401e7d7:	pop    ebx
6401e7d8:	ret    
6401e7d9:	xor    eax,eax
6401e7db:	mov    ecx,DWORD PTR fs:0x0
6401e7e2:	cmp    DWORD PTR [ecx+0x4],0x6401e710
6401e7e9:	jne    0x6401e7fb
6401e7eb:	mov    edx,DWORD PTR [ecx+0xc]
6401e7ee:	mov    edx,DWORD PTR [edx+0xc]
6401e7f1:	cmp    DWORD PTR [ecx+0x8],edx
6401e7f4:	jne    0x6401e7fb
6401e7f6:	mov    eax,0x1
6401e7fb:	ret    
6401e7fc:	push   ebx
6401e7fd:	push   ecx
6401e7fe:	mov    ebx,0x640530e0
6401e803:	jmp    0x6401e810
6401e805:	push   ebx
6401e806:	push   ecx
6401e807:	mov    ebx,0x640530e0
6401e80c:	mov    ecx,DWORD PTR [esp+0xc]
6401e810:	mov    DWORD PTR [ebx+0x8],ecx
6401e813:	mov    DWORD PTR [ebx+0x4],eax
6401e816:	mov    DWORD PTR [ebx+0xc],ebp
6401e819:	push   ebp
6401e81a:	push   ecx
6401e81b:	push   eax
6401e81c:	pop    eax
6401e81d:	pop    ecx
6401e81e:	pop    ebp
6401e81f:	pop    ecx
6401e820:	pop    ebx
6401e821:	ret    0x4
6401e824:	call   eax
6401e826:	ret    
6401e827:	push   esi
6401e828:	push   edi
6401e829:	xor    edi,edi
6401e82b:	lea    esi,[edi+0x640530f0]
6401e831:	push   DWORD PTR [esi]
6401e833:	call   0x64017737
6401e838:	add    edi,0x4
6401e83b:	cmp    edi,0x28
6401e83e:	pop    ecx
6401e83f:	mov    DWORD PTR [esi],eax
6401e841:	jb     0x6401e82b
6401e843:	pop    edi
6401e844:	pop    esi
6401e845:	ret    
6401e846:	mov    eax,DWORD PTR [esp+0x4]
6401e84a:	mov    ds:0x640543dc,eax
6401e84f:	ret    
6401e850:	mov    eax,DWORD PTR [esp+0x4]
6401e854:	mov    ds:0x640543e0,eax
6401e859:	ret    
6401e85a:	push   DWORD PTR [esp+0x4]
6401e85e:	call   DWORD PTR ds:0x6402c16c
6401e864:	xor    eax,eax
6401e866:	inc    eax
6401e867:	ret    0x8
6401e86a:	push   0x14
6401e86c:	push   0x64043f28
6401e871:	call   0x64016464
6401e876:	xor    edi,edi
6401e878:	mov    DWORD PTR [ebp-0x1c],edi
6401e87b:	push   DWORD PTR ds:0x640543e0
6401e881:	call   0x640177ae
6401e886:	pop    ecx
6401e887:	mov    esi,eax
6401e889:	cmp    esi,edi
6401e88b:	jne    0x6401e8e0
6401e88d:	lea    eax,[ebp-0x1c]
6401e890:	push   eax
6401e891:	call   0x6401805f
6401e896:	pop    ecx
6401e897:	cmp    eax,edi
6401e899:	je     0x6401e8a8
6401e89b:	push   edi
6401e89c:	push   edi
6401e89d:	push   edi
6401e89e:	push   edi
6401e89f:	push   edi
6401e8a0:	call   0x64013cf6
6401e8a5:	add    esp,0x14
6401e8a8:	cmp    DWORD PTR [ebp-0x1c],0x1
6401e8ac:	je     0x6401e8cf
6401e8ae:	push   0x64040010
6401e8b3:	call   DWORD PTR ds:0x6402c0a8
6401e8b9:	cmp    eax,edi
6401e8bb:	je     0x6401e8cf
6401e8bd:	push   0x64041850
6401e8c2:	push   eax
6401e8c3:	call   DWORD PTR ds:0x6402c0a4
6401e8c9:	mov    esi,eax
6401e8cb:	cmp    esi,edi
6401e8cd:	jne    0x6401e8d4
6401e8cf:	mov    esi,0x6401e85a
6401e8d4:	push   esi
6401e8d5:	call   0x64017737
6401e8da:	pop    ecx
6401e8db:	mov    ds:0x640543e0,eax
6401e8e0:	mov    DWORD PTR [ebp-0x4],edi
6401e8e3:	push   DWORD PTR [ebp+0xc]
6401e8e6:	push   DWORD PTR [ebp+0x8]
6401e8e9:	call   esi
6401e8eb:	mov    DWORD PTR [ebp-0x20],eax
6401e8ee:	jmp    0x6401e91f
6401e8f0:	mov    eax,DWORD PTR [ebp-0x14]
6401e8f3:	mov    eax,DWORD PTR [eax]
6401e8f5:	mov    eax,DWORD PTR [eax]
6401e8f7:	mov    DWORD PTR [ebp-0x24],eax
6401e8fa:	xor    ecx,ecx
6401e8fc:	cmp    eax,0xc0000017
6401e901:	sete   cl
6401e904:	mov    eax,ecx
6401e906:	ret    
6401e907:	mov    esp,DWORD PTR [ebp-0x18]
6401e90a:	cmp    DWORD PTR [ebp-0x24],0xc0000017
6401e911:	jne    0x6401e91b
6401e913:	push   0x8
6401e915:	call   DWORD PTR ds:0x6402c074
6401e91b:	and    DWORD PTR [ebp-0x20],0x0
6401e91f:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401e926:	mov    eax,DWORD PTR [ebp-0x20]
6401e929:	call   0x640164a9
6401e92e:	ret    
6401e92f:	push   0x10
6401e931:	push   0x64043f48
6401e936:	call   0x64016464
6401e93b:	xor    ebx,ebx
6401e93d:	mov    DWORD PTR [ebp-0x1c],ebx
6401e940:	push   0x1
6401e942:	call   0x6401b42a
6401e947:	pop    ecx
6401e948:	mov    DWORD PTR [ebp-0x4],ebx
6401e94b:	push   0x3
6401e94d:	pop    edi
6401e94e:	mov    DWORD PTR [ebp-0x20],edi
6401e951:	cmp    edi,DWORD PTR ds:0x640556a0
6401e957:	jge    0x6401e9b0
6401e959:	mov    esi,edi
6401e95b:	shl    esi,0x2
6401e95e:	mov    eax,ds:0x64054690
6401e963:	add    eax,esi
6401e965:	cmp    DWORD PTR [eax],ebx
6401e967:	je     0x6401e9ad
6401e969:	mov    eax,DWORD PTR [eax]
6401e96b:	test   BYTE PTR [eax+0xc],0x83
6401e96f:	je     0x6401e980
6401e971:	push   eax
6401e972:	call   0x640145f0
6401e977:	pop    ecx
6401e978:	cmp    eax,0xffffffff
6401e97b:	je     0x6401e980
6401e97d:	inc    DWORD PTR [ebp-0x1c]
6401e980:	cmp    edi,0x14
6401e983:	jl     0x6401e9ad
6401e985:	mov    eax,ds:0x64054690
6401e98a:	mov    eax,DWORD PTR [esi+eax*1]
6401e98d:	add    eax,0x20
6401e990:	push   eax
6401e991:	call   DWORD PTR ds:0x6402c170
6401e997:	mov    eax,ds:0x64054690
6401e99c:	push   DWORD PTR [esi+eax*1]
6401e99f:	call   0x6401475f
6401e9a4:	pop    ecx
6401e9a5:	mov    eax,ds:0x64054690
6401e9aa:	mov    DWORD PTR [esi+eax*1],ebx
6401e9ad:	inc    edi
6401e9ae:	jmp    0x6401e94e
6401e9b0:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401e9b7:	call   0x6401e9c5
6401e9bc:	mov    eax,DWORD PTR [ebp-0x1c]
6401e9bf:	call   0x640164a9
6401e9c4:	ret    
6401e9c5:	push   0x1
6401e9c7:	call   0x6401b352
6401e9cc:	pop    ecx
6401e9cd:	ret    
6401e9ce:	push   0x10
6401e9d0:	push   0x64043f68
6401e9d5:	call   0x64016464
6401e9da:	mov    eax,DWORD PTR [ebp+0x8]
6401e9dd:	cmp    eax,0xfffffffe
6401e9e0:	jne    0x6401e9f5
6401e9e2:	call   0x64016663
6401e9e7:	mov    DWORD PTR [eax],0x9
6401e9ed:	or     eax,0xffffffff
6401e9f0:	jmp    0x6401ea9f
6401e9f5:	xor    ebx,ebx
6401e9f7:	cmp    eax,ebx
6401e9f9:	jl     0x6401ea03
6401e9fb:	cmp    eax,DWORD PTR ds:0x640556a8
6401ea01:	jb     0x6401ea1d
6401ea03:	call   0x64016663
6401ea08:	mov    DWORD PTR [eax],0x9
6401ea0e:	push   ebx
6401ea0f:	push   ebx
6401ea10:	push   ebx
6401ea11:	push   ebx
6401ea12:	push   ebx
6401ea13:	call   0x64013df2
6401ea18:	add    esp,0x14
6401ea1b:	jmp    0x6401e9ed
6401ea1d:	mov    ecx,eax
6401ea1f:	sar    ecx,0x5
6401ea22:	lea    edi,[ecx*4+0x640556c0]
6401ea29:	mov    esi,eax
6401ea2b:	and    esi,0x1f
6401ea2e:	shl    esi,0x6
6401ea31:	mov    ecx,DWORD PTR [edi]
6401ea33:	movzx  ecx,BYTE PTR [esi+ecx*1+0x4]
6401ea38:	and    ecx,0x1
6401ea3b:	je     0x6401ea03
6401ea3d:	push   eax
6401ea3e:	call   0x64019939
6401ea43:	pop    ecx
6401ea44:	mov    DWORD PTR [ebp-0x4],ebx
6401ea47:	mov    eax,DWORD PTR [edi]
6401ea49:	test   BYTE PTR [esi+eax*1+0x4],0x1
6401ea4e:	je     0x6401ea81
6401ea50:	push   DWORD PTR [ebp+0x8]
6401ea53:	call   0x640198c8
6401ea58:	pop    ecx
6401ea59:	push   eax
6401ea5a:	call   DWORD PTR ds:0x6402c104
6401ea60:	test   eax,eax
6401ea62:	jne    0x6401ea6f
6401ea64:	call   DWORD PTR ds:0x6402c06c
6401ea6a:	mov    DWORD PTR [ebp-0x1c],eax
6401ea6d:	jmp    0x6401ea72
6401ea6f:	mov    DWORD PTR [ebp-0x1c],ebx
6401ea72:	cmp    DWORD PTR [ebp-0x1c],ebx
6401ea75:	je     0x6401ea90
6401ea77:	call   0x64016676
6401ea7c:	mov    ecx,DWORD PTR [ebp-0x1c]
6401ea7f:	mov    DWORD PTR [eax],ecx
6401ea81:	call   0x64016663
6401ea86:	mov    DWORD PTR [eax],0x9
6401ea8c:	or     DWORD PTR [ebp-0x1c],0xffffffff
6401ea90:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401ea97:	call   0x6401eaa5
6401ea9c:	mov    eax,DWORD PTR [ebp-0x1c]
6401ea9f:	call   0x640164a9
6401eaa4:	ret    
6401eaa5:	push   DWORD PTR [ebp+0x8]
6401eaa8:	call   0x640199d9
6401eaad:	pop    ecx
6401eaae:	ret    
6401eaaf:	inc    DWORD PTR ds:0x64053ef8
6401eab5:	push   0x1000
6401eaba:	call   0x6401627f
6401eabf:	test   eax,eax
6401eac1:	pop    ecx
6401eac2:	mov    ecx,DWORD PTR [esp+0x4]
6401eac6:	mov    DWORD PTR [ecx+0x8],eax
6401eac9:	je     0x6401ead8
6401eacb:	or     DWORD PTR [ecx+0xc],0x8
6401eacf:	mov    DWORD PTR [ecx+0x18],0x1000
6401ead6:	jmp    0x6401eae9
6401ead8:	or     DWORD PTR [ecx+0xc],0x4
6401eadc:	lea    eax,[ecx+0x14]
6401eadf:	mov    DWORD PTR [ecx+0x8],eax
6401eae2:	mov    DWORD PTR [ecx+0x18],0x2
6401eae9:	mov    eax,DWORD PTR [ecx+0x8]
6401eaec:	and    DWORD PTR [ecx+0x4],0x0
6401eaf0:	mov    DWORD PTR [ecx],eax
6401eaf2:	ret    
6401eaf3:	mov    eax,DWORD PTR [esp+0x4]
6401eaf7:	cmp    eax,0xfffffffe
6401eafa:	jne    0x6401eb0a
6401eafc:	call   0x64016663
6401eb01:	mov    DWORD PTR [eax],0x9
6401eb07:	xor    eax,eax
6401eb09:	ret    
6401eb0a:	push   esi
6401eb0b:	xor    esi,esi
6401eb0d:	cmp    eax,esi
6401eb0f:	jl     0x6401eb19
6401eb11:	cmp    eax,DWORD PTR ds:0x640556a8
6401eb17:	jb     0x6401eb35
6401eb19:	call   0x64016663
6401eb1e:	push   esi
6401eb1f:	push   esi
6401eb20:	push   esi
6401eb21:	push   esi
6401eb22:	push   esi
6401eb23:	mov    DWORD PTR [eax],0x9
6401eb29:	call   0x64013df2
6401eb2e:	add    esp,0x14
6401eb31:	xor    eax,eax
6401eb33:	pop    esi
6401eb34:	ret    
6401eb35:	mov    ecx,eax
6401eb37:	and    eax,0x1f
6401eb3a:	sar    ecx,0x5
6401eb3d:	mov    ecx,DWORD PTR [ecx*4+0x640556c0]
6401eb44:	shl    eax,0x6
6401eb47:	movzx  eax,BYTE PTR [ecx+eax*1+0x4]
6401eb4c:	and    eax,0x40
6401eb4f:	pop    esi
6401eb50:	ret    
6401eb51:	mov    eax,ds:0x640521ac
6401eb56:	or     eax,0x1
6401eb59:	xor    ecx,ecx
6401eb5b:	cmp    DWORD PTR ds:0x640543e8,eax
6401eb61:	sete   cl
6401eb64:	mov    eax,ecx
6401eb66:	ret    
6401eb67:	push   ebp
6401eb68:	mov    ebp,esp
6401eb6a:	sub    esp,0x10
6401eb6d:	push   ebx
6401eb6e:	push   esi
6401eb6f:	mov    esi,DWORD PTR [ebp+0xc]
6401eb72:	xor    ebx,ebx
6401eb74:	cmp    esi,ebx
6401eb76:	push   edi
6401eb77:	mov    edi,DWORD PTR [ebp+0x10]
6401eb7a:	jne    0x6401eb8d
6401eb7c:	cmp    edi,ebx
6401eb7e:	jbe    0x6401eb8d
6401eb80:	mov    eax,DWORD PTR [ebp+0x8]
6401eb83:	cmp    eax,ebx
6401eb85:	je     0x6401eb89
6401eb87:	mov    DWORD PTR [eax],ebx
6401eb89:	xor    eax,eax
6401eb8b:	jmp    0x6401ec0c
6401eb8d:	mov    eax,DWORD PTR [ebp+0x8]
6401eb90:	cmp    eax,ebx
6401eb92:	je     0x6401eb97
6401eb94:	or     DWORD PTR [eax],0xffffffff
6401eb97:	cmp    edi,0x7fffffff
6401eb9d:	jbe    0x6401ebba
6401eb9f:	call   0x64016663
6401eba4:	push   0x16
6401eba6:	pop    esi
6401eba7:	push   ebx
6401eba8:	push   ebx
6401eba9:	push   ebx
6401ebaa:	push   ebx
6401ebab:	push   ebx
6401ebac:	mov    DWORD PTR [eax],esi
6401ebae:	call   0x64013df2
6401ebb3:	add    esp,0x14
6401ebb6:	mov    eax,esi
6401ebb8:	jmp    0x6401ec0c
6401ebba:	push   DWORD PTR [ebp+0x18]
6401ebbd:	lea    ecx,[ebp-0x10]
6401ebc0:	call   0x640142c5
6401ebc5:	mov    eax,DWORD PTR [ebp-0x10]
6401ebc8:	cmp    DWORD PTR [eax+0x14],ebx
6401ebcb:	jne    0x6401ec65
6401ebd1:	mov    ax,WORD PTR [ebp+0x14]
6401ebd5:	cmp    ax,0xff
6401ebd9:	jbe    0x6401ec11
6401ebdb:	cmp    esi,ebx
6401ebdd:	je     0x6401ebee
6401ebdf:	cmp    edi,ebx
6401ebe1:	jbe    0x6401ebee
6401ebe3:	push   edi
6401ebe4:	push   ebx
6401ebe5:	push   esi
6401ebe6:	call   0x64015100
6401ebeb:	add    esp,0xc
6401ebee:	call   0x64016663
6401ebf3:	mov    DWORD PTR [eax],0x2a
6401ebf9:	call   0x64016663
6401ebfe:	cmp    BYTE PTR [ebp-0x4],bl
6401ec01:	mov    eax,DWORD PTR [eax]
6401ec03:	je     0x6401ec0c
6401ec05:	mov    ecx,DWORD PTR [ebp-0x8]
6401ec08:	and    DWORD PTR [ecx+0x70],0xfffffffd
6401ec0c:	pop    edi
6401ec0d:	pop    esi
6401ec0e:	pop    ebx
6401ec0f:	leave  
6401ec10:	ret    
6401ec11:	cmp    esi,ebx
6401ec13:	je     0x6401ec43
6401ec15:	cmp    edi,ebx
6401ec17:	ja     0x6401ec41
6401ec19:	call   0x64016663
6401ec1e:	push   0x22
6401ec20:	pop    esi
6401ec21:	push   ebx
6401ec22:	push   ebx
6401ec23:	push   ebx
6401ec24:	push   ebx
6401ec25:	push   ebx
6401ec26:	mov    DWORD PTR [eax],esi
6401ec28:	call   0x64013df2
6401ec2d:	add    esp,0x14
6401ec30:	cmp    BYTE PTR [ebp-0x4],bl
6401ec33:	je     0x6401ebb6
6401ec35:	mov    eax,DWORD PTR [ebp-0x8]
6401ec38:	and    DWORD PTR [eax+0x70],0xfffffffd
6401ec3c:	jmp    0x6401ebb6
6401ec41:	mov    BYTE PTR [esi],al
6401ec43:	mov    eax,DWORD PTR [ebp+0x8]
6401ec46:	cmp    eax,ebx
6401ec48:	je     0x6401ec50
6401ec4a:	mov    DWORD PTR [eax],0x1
6401ec50:	cmp    BYTE PTR [ebp-0x4],bl
6401ec53:	je     0x6401eb89
6401ec59:	mov    eax,DWORD PTR [ebp-0x8]
6401ec5c:	and    DWORD PTR [eax+0x70],0xfffffffd
6401ec60:	jmp    0x6401eb89
6401ec65:	lea    ecx,[ebp+0xc]
6401ec68:	push   ecx
6401ec69:	push   ebx
6401ec6a:	push   edi
6401ec6b:	push   esi
6401ec6c:	push   0x1
6401ec6e:	lea    ecx,[ebp+0x14]
6401ec71:	push   ecx
6401ec72:	push   ebx
6401ec73:	mov    DWORD PTR [ebp+0xc],ebx
6401ec76:	push   DWORD PTR [eax+0x4]
6401ec79:	call   DWORD PTR ds:0x6402c014
6401ec7f:	cmp    eax,ebx
6401ec81:	je     0x6401ec97
6401ec83:	cmp    DWORD PTR [ebp+0xc],ebx
6401ec86:	jne    0x6401ebee
6401ec8c:	mov    ecx,DWORD PTR [ebp+0x8]
6401ec8f:	cmp    ecx,ebx
6401ec91:	je     0x6401ec50
6401ec93:	mov    DWORD PTR [ecx],eax
6401ec95:	jmp    0x6401ec50
6401ec97:	call   DWORD PTR ds:0x6402c06c
6401ec9d:	cmp    eax,0x7a
6401eca0:	jne    0x6401ebee
6401eca6:	cmp    esi,ebx
6401eca8:	je     0x6401ec19
6401ecae:	cmp    edi,ebx
6401ecb0:	jbe    0x6401ec19
6401ecb6:	push   edi
6401ecb7:	push   ebx
6401ecb8:	push   esi
6401ecb9:	call   0x64015100
6401ecbe:	add    esp,0xc
6401ecc1:	jmp    0x6401ec19
6401ecc6:	push   0x0
6401ecc8:	push   DWORD PTR [esp+0x14]
6401eccc:	push   DWORD PTR [esp+0x14]
6401ecd0:	push   DWORD PTR [esp+0x14]
6401ecd4:	push   DWORD PTR [esp+0x14]
6401ecd8:	call   0x6401eb67
6401ecdd:	add    esp,0x14
6401ece0:	ret    
6401ece1:	push   ebp
6401ece2:	mov    ebp,esp
6401ece4:	sub    esp,0x10
6401ece7:	mov    eax,ds:0x640521ac
6401ecec:	xor    eax,ebp
6401ecee:	mov    DWORD PTR [ebp-0x4],eax
6401ecf1:	push   esi
6401ecf2:	xor    esi,esi
6401ecf4:	cmp    DWORD PTR ds:0x64053118,esi
6401ecfa:	je     0x6401ed4a
6401ecfc:	cmp    DWORD PTR ds:0x640534c4,0xfffffffe
6401ed03:	jne    0x6401ed0a
6401ed05:	call   0x64021149
6401ed0a:	mov    eax,ds:0x640534c4
6401ed0f:	cmp    eax,0xffffffff
6401ed12:	jne    0x6401ed1a
6401ed14:	or     ax,0xffff
6401ed18:	jmp    0x6401ed8a
6401ed1a:	push   esi
6401ed1b:	lea    ecx,[ebp-0x10]
6401ed1e:	push   ecx
6401ed1f:	push   0x1
6401ed21:	lea    ecx,[ebp+0x8]
6401ed24:	push   ecx
6401ed25:	push   eax
6401ed26:	call   DWORD PTR ds:0x6402c144
6401ed2c:	test   eax,eax
6401ed2e:	jne    0x6401ed97
6401ed30:	cmp    DWORD PTR ds:0x64053118,0x2
6401ed37:	jne    0x6401ed14
6401ed39:	call   DWORD PTR ds:0x6402c06c
6401ed3f:	cmp    eax,0x78
6401ed42:	jne    0x6401ed14
6401ed44:	mov    DWORD PTR ds:0x64053118,esi
6401ed4a:	push   esi
6401ed4b:	push   esi
6401ed4c:	push   0x5
6401ed4e:	lea    eax,[ebp-0xc]
6401ed51:	push   eax
6401ed52:	push   0x1
6401ed54:	lea    eax,[ebp+0x8]
6401ed57:	push   eax
6401ed58:	push   esi
6401ed59:	call   DWORD PTR ds:0x6402c140
6401ed5f:	push   eax
6401ed60:	call   DWORD PTR ds:0x6402c014
6401ed66:	mov    ecx,DWORD PTR ds:0x640534c4
6401ed6c:	cmp    ecx,0xffffffff
6401ed6f:	je     0x6401ed14
6401ed71:	push   esi
6401ed72:	lea    edx,[ebp-0x10]
6401ed75:	push   edx
6401ed76:	push   eax
6401ed77:	lea    eax,[ebp-0xc]
6401ed7a:	push   eax
6401ed7b:	push   ecx
6401ed7c:	call   DWORD PTR ds:0x6402c13c
6401ed82:	test   eax,eax
6401ed84:	je     0x6401ed14
6401ed86:	mov    ax,WORD PTR [ebp+0x8]
6401ed8a:	mov    ecx,DWORD PTR [ebp-0x4]
6401ed8d:	xor    ecx,ebp
6401ed8f:	pop    esi
6401ed90:	call   0x64013ca6
6401ed95:	leave  
6401ed96:	ret    
6401ed97:	mov    DWORD PTR ds:0x64053118,0x1
6401eda1:	jmp    0x6401ed86
6401eda3:	push   ebp
6401eda4:	mov    ebp,esp
6401eda6:	sub    esp,0x10
6401eda9:	push   ebx
6401edaa:	push   esi
6401edab:	mov    esi,DWORD PTR [ebp+0xc]
6401edae:	xor    ebx,ebx
6401edb0:	cmp    esi,ebx
6401edb2:	je     0x6401edc7
6401edb4:	cmp    DWORD PTR [ebp+0x10],ebx
6401edb7:	je     0x6401edc7
6401edb9:	cmp    BYTE PTR [esi],bl
6401edbb:	jne    0x6401edcd
6401edbd:	mov    eax,DWORD PTR [ebp+0x8]
6401edc0:	cmp    eax,ebx
6401edc2:	je     0x6401edc7
6401edc4:	mov    WORD PTR [eax],bx
6401edc7:	xor    eax,eax
6401edc9:	pop    esi
6401edca:	pop    ebx
6401edcb:	leave  
6401edcc:	ret    
6401edcd:	push   DWORD PTR [ebp+0x14]
6401edd0:	lea    ecx,[ebp-0x10]
6401edd3:	call   0x640142c5
6401edd8:	mov    eax,DWORD PTR [ebp-0x10]
6401eddb:	cmp    DWORD PTR [eax+0x14],ebx
6401edde:	jne    0x6401edff
6401ede0:	mov    eax,DWORD PTR [ebp+0x8]
6401ede3:	cmp    eax,ebx
6401ede5:	je     0x6401edee
6401ede7:	movzx  cx,BYTE PTR [esi]
6401edeb:	mov    WORD PTR [eax],cx
6401edee:	cmp    BYTE PTR [ebp-0x4],bl
6401edf1:	je     0x6401edfa
6401edf3:	mov    eax,DWORD PTR [ebp-0x8]
6401edf6:	and    DWORD PTR [eax+0x70],0xfffffffd
6401edfa:	xor    eax,eax
6401edfc:	inc    eax
6401edfd:	jmp    0x6401edc9
6401edff:	lea    eax,[ebp-0x10]
6401ee02:	push   eax
6401ee03:	movzx  eax,BYTE PTR [esi]
6401ee06:	push   eax
6401ee07:	call   0x640150b7
6401ee0c:	test   eax,eax
6401ee0e:	pop    ecx
6401ee0f:	pop    ecx
6401ee10:	je     0x6401ee8f
6401ee12:	mov    eax,DWORD PTR [ebp-0x10]
6401ee15:	mov    ecx,DWORD PTR [eax+0xac]
6401ee1b:	cmp    ecx,0x1
6401ee1e:	jle    0x6401ee45
6401ee20:	cmp    DWORD PTR [ebp+0x10],ecx
6401ee23:	jl     0x6401ee45
6401ee25:	xor    edx,edx
6401ee27:	cmp    DWORD PTR [ebp+0x8],ebx
6401ee2a:	setne  dl
6401ee2d:	push   edx
6401ee2e:	push   DWORD PTR [ebp+0x8]
6401ee31:	push   ecx
6401ee32:	push   esi
6401ee33:	push   0x9
6401ee35:	push   DWORD PTR [eax+0x4]
6401ee38:	call   DWORD PTR ds:0x6402c02c
6401ee3e:	test   eax,eax
6401ee40:	mov    eax,DWORD PTR [ebp-0x10]
6401ee43:	jne    0x6401ee55
6401ee45:	mov    ecx,DWORD PTR [ebp+0x10]
6401ee48:	cmp    ecx,DWORD PTR [eax+0xac]
6401ee4e:	jb     0x6401ee70
6401ee50:	cmp    BYTE PTR [esi+0x1],bl
6401ee53:	je     0x6401ee70
6401ee55:	cmp    BYTE PTR [ebp-0x4],bl
6401ee58:	mov    eax,DWORD PTR [eax+0xac]
6401ee5e:	je     0x6401edc9
6401ee64:	mov    ecx,DWORD PTR [ebp-0x8]
6401ee67:	and    DWORD PTR [ecx+0x70],0xfffffffd
6401ee6b:	jmp    0x6401edc9
6401ee70:	call   0x64016663
6401ee75:	mov    DWORD PTR [eax],0x2a
6401ee7b:	cmp    BYTE PTR [ebp-0x4],bl
6401ee7e:	je     0x6401ee87
6401ee80:	mov    eax,DWORD PTR [ebp-0x8]
6401ee83:	and    DWORD PTR [eax+0x70],0xfffffffd
6401ee87:	or     eax,0xffffffff
6401ee8a:	jmp    0x6401edc9
6401ee8f:	xor    eax,eax
6401ee91:	cmp    DWORD PTR [ebp+0x8],ebx
6401ee94:	setne  al
6401ee97:	push   eax
6401ee98:	push   DWORD PTR [ebp+0x8]
6401ee9b:	mov    eax,DWORD PTR [ebp-0x10]
6401ee9e:	push   0x1
6401eea0:	push   esi
6401eea1:	push   0x9
6401eea3:	push   DWORD PTR [eax+0x4]
6401eea6:	call   DWORD PTR ds:0x6402c02c
6401eeac:	test   eax,eax
6401eeae:	jne    0x6401edee
6401eeb4:	jmp    0x6401ee70
6401eeb6:	push   0x0
6401eeb8:	push   DWORD PTR [esp+0x10]
6401eebc:	push   DWORD PTR [esp+0x10]
6401eec0:	push   DWORD PTR [esp+0x10]
6401eec4:	call   0x6401eda3
6401eec9:	add    esp,0x10
6401eecc:	ret    
6401eecd:	push   ebp
6401eece:	mov    ebp,esp
6401eed0:	sub    esp,0x20
6401eed3:	push   ebx
6401eed4:	push   esi
6401eed5:	push   edi
6401eed6:	call   0x640177a5
6401eedb:	xor    ebx,ebx
6401eedd:	cmp    DWORD PTR ds:0x640543ec,ebx
6401eee3:	mov    DWORD PTR [ebp-0x8],eax
6401eee6:	mov    DWORD PTR [ebp-0x4],ebx
6401eee9:	mov    DWORD PTR [ebp-0xc],ebx
6401eeec:	mov    DWORD PTR [ebp-0x10],ebx
6401eeef:	jne    0x6401efa3
6401eef5:	push   0x640418dc
6401eefa:	call   DWORD PTR ds:0x6402c0a0
6401ef00:	mov    edi,eax
6401ef02:	cmp    edi,ebx
6401ef04:	je     0x6401f083
6401ef0a:	mov    esi,DWORD PTR ds:0x6402c0a4
6401ef10:	push   0x640418d0
6401ef15:	push   edi
6401ef16:	call   esi
6401ef18:	cmp    eax,ebx
6401ef1a:	je     0x6401f083
6401ef20:	push   eax
6401ef21:	call   0x64017737
6401ef26:	mov    DWORD PTR [esp],0x640418c0
6401ef2d:	push   edi
6401ef2e:	mov    ds:0x640543ec,eax
6401ef33:	call   esi
6401ef35:	push   eax
6401ef36:	call   0x64017737
6401ef3b:	mov    DWORD PTR [esp],0x640418ac
6401ef42:	push   edi
6401ef43:	mov    ds:0x640543f0,eax
6401ef48:	call   esi
6401ef4a:	push   eax
6401ef4b:	call   0x64017737
6401ef50:	mov    ds:0x640543f4,eax
6401ef55:	lea    eax,[ebp-0xc]
6401ef58:	push   eax
6401ef59:	call   0x6401805f
6401ef5e:	test   eax,eax
6401ef60:	pop    ecx
6401ef61:	pop    ecx
6401ef62:	je     0x6401ef71
6401ef64:	push   ebx
6401ef65:	push   ebx
6401ef66:	push   ebx
6401ef67:	push   ebx
6401ef68:	push   ebx
6401ef69:	call   0x64013cf6
6401ef6e:	add    esp,0x14
6401ef71:	cmp    DWORD PTR [ebp-0xc],0x2
6401ef75:	jne    0x6401efa3
6401ef77:	push   0x64041890
6401ef7c:	push   edi
6401ef7d:	call   esi
6401ef7f:	push   eax
6401ef80:	call   0x64017737
6401ef85:	cmp    eax,ebx
6401ef87:	pop    ecx
6401ef88:	mov    ds:0x640543fc,eax
6401ef8d:	je     0x6401efa3
6401ef8f:	push   0x64041878
6401ef94:	push   edi
6401ef95:	call   esi
6401ef97:	push   eax
6401ef98:	call   0x64017737
6401ef9d:	pop    ecx
6401ef9e:	mov    ds:0x640543f8,eax
6401efa3:	mov    eax,ds:0x640543f8
6401efa8:	mov    ecx,DWORD PTR [ebp-0x8]
6401efab:	cmp    eax,ecx
6401efad:	je     0x6401f028
6401efaf:	cmp    DWORD PTR ds:0x640543fc,ecx
6401efb5:	je     0x6401f028
6401efb7:	push   eax
6401efb8:	call   0x640177ae
6401efbd:	push   DWORD PTR ds:0x640543fc
6401efc3:	mov    esi,eax
6401efc5:	call   0x640177ae
6401efca:	cmp    esi,ebx
6401efcc:	pop    ecx
6401efcd:	pop    ecx
6401efce:	mov    edi,eax
6401efd0:	je     0x6401f028
6401efd2:	cmp    edi,ebx
6401efd4:	je     0x6401f028
6401efd6:	call   esi
6401efd8:	cmp    eax,ebx
6401efda:	je     0x6401eff5
6401efdc:	lea    ecx,[ebp-0x14]
6401efdf:	push   ecx
6401efe0:	push   0xc
6401efe2:	lea    ecx,[ebp-0x20]
6401efe5:	push   ecx
6401efe6:	push   0x1
6401efe8:	push   eax
6401efe9:	call   edi
6401efeb:	test   eax,eax
6401efed:	je     0x6401eff5
6401efef:	test   BYTE PTR [ebp-0x18],0x1
6401eff3:	jne    0x6401f028
6401eff5:	lea    eax,[ebp-0x10]
6401eff8:	push   eax
6401eff9:	call   0x64018096
6401effe:	test   eax,eax
6401f000:	pop    ecx
6401f001:	je     0x6401f010
6401f003:	push   ebx
6401f004:	push   ebx
6401f005:	push   ebx
6401f006:	push   ebx
6401f007:	push   ebx
6401f008:	call   0x64013cf6
6401f00d:	add    esp,0x14
6401f010:	cmp    DWORD PTR [ebp-0x10],0x4
6401f014:	jb     0x6401f01f
6401f016:	or     DWORD PTR [ebp+0x10],0x200000
6401f01d:	jmp    0x6401f063
6401f01f:	or     DWORD PTR [ebp+0x10],0x40000
6401f026:	jmp    0x6401f063
6401f028:	mov    eax,ds:0x640543f0
6401f02d:	cmp    eax,DWORD PTR [ebp-0x8]
6401f030:	je     0x6401f063
6401f032:	push   eax
6401f033:	call   0x640177ae
6401f038:	cmp    eax,ebx
6401f03a:	pop    ecx
6401f03b:	je     0x6401f063
6401f03d:	call   eax
6401f03f:	cmp    eax,ebx
6401f041:	mov    DWORD PTR [ebp-0x4],eax
6401f044:	je     0x6401f063
6401f046:	mov    eax,ds:0x640543f4
6401f04b:	cmp    eax,DWORD PTR [ebp-0x8]
6401f04e:	je     0x6401f063
6401f050:	push   eax
6401f051:	call   0x640177ae
6401f056:	cmp    eax,ebx
6401f058:	pop    ecx
6401f059:	je     0x6401f063
6401f05b:	push   DWORD PTR [ebp-0x4]
6401f05e:	call   eax
6401f060:	mov    DWORD PTR [ebp-0x4],eax
6401f063:	push   DWORD PTR ds:0x640543ec
6401f069:	call   0x640177ae
6401f06e:	cmp    eax,ebx
6401f070:	pop    ecx
6401f071:	je     0x6401f083
6401f073:	push   DWORD PTR [ebp+0x10]
6401f076:	push   DWORD PTR [ebp+0xc]
6401f079:	push   DWORD PTR [ebp+0x8]
6401f07c:	push   DWORD PTR [ebp-0x4]
6401f07f:	call   eax
6401f081:	jmp    0x6401f085
6401f083:	xor    eax,eax
6401f085:	pop    edi
6401f086:	pop    esi
6401f087:	pop    ebx
6401f088:	leave  
6401f089:	ret    
6401f08a:	mov    ecx,DWORD PTR [esp+0x4]
6401f08e:	push   esi
6401f08f:	xor    esi,esi
6401f091:	cmp    ecx,esi
6401f093:	jl     0x6401f0b3
6401f095:	cmp    ecx,0x2
6401f098:	jle    0x6401f0a6
6401f09a:	cmp    ecx,0x3
6401f09d:	jne    0x6401f0b3
6401f09f:	mov    eax,ds:0x64053a00
6401f0a4:	pop    esi
6401f0a5:	ret    
6401f0a6:	mov    eax,ds:0x64053a00
6401f0ab:	mov    DWORD PTR ds:0x64053a00,ecx
6401f0b1:	pop    esi
6401f0b2:	ret    
6401f0b3:	call   0x64016663
6401f0b8:	push   esi
6401f0b9:	push   esi
6401f0ba:	push   esi
6401f0bb:	push   esi
6401f0bc:	push   esi
6401f0bd:	mov    DWORD PTR [eax],0x16
6401f0c3:	call   0x64013df2
6401f0c8:	add    esp,0x14
6401f0cb:	or     eax,0xffffffff
6401f0ce:	pop    esi
6401f0cf:	ret    
6401f0d0:	push   ebp
6401f0d1:	mov    ebp,esp
6401f0d3:	sub    esp,0x2c
6401f0d6:	mov    eax,DWORD PTR [ebp+0x8]
6401f0d9:	movzx  ecx,WORD PTR [eax+0xa]
6401f0dd:	push   ebx
6401f0de:	mov    ebx,ecx
6401f0e0:	and    ecx,0x8000
6401f0e6:	mov    DWORD PTR [ebp-0x14],ecx
6401f0e9:	mov    ecx,DWORD PTR [eax+0x6]
6401f0ec:	mov    DWORD PTR [ebp-0x20],ecx
6401f0ef:	mov    ecx,DWORD PTR [eax+0x2]
6401f0f2:	movzx  eax,WORD PTR [eax]
6401f0f5:	and    ebx,0x7fff
6401f0fb:	sub    ebx,0x3fff
6401f101:	shl    eax,0x10
6401f104:	cmp    ebx,0xffffc001
6401f10a:	push   edi
6401f10b:	mov    DWORD PTR [ebp-0x1c],ecx
6401f10e:	mov    DWORD PTR [ebp-0x18],eax
6401f111:	jne    0x6401f13a
6401f113:	xor    ebx,ebx
6401f115:	xor    eax,eax
6401f117:	cmp    DWORD PTR [ebp+eax*4-0x20],ebx
6401f11b:	jne    0x6401f12a
6401f11d:	inc    eax
6401f11e:	cmp    eax,0x3
6401f121:	jl     0x6401f117
6401f123:	xor    eax,eax
6401f125:	jmp    0x6401f5cf
6401f12a:	xor    eax,eax
6401f12c:	lea    edi,[ebp-0x20]
6401f12f:	stos   DWORD PTR es:[edi],eax
6401f130:	stos   DWORD PTR es:[edi],eax
6401f131:	push   0x2
6401f133:	stos   DWORD PTR es:[edi],eax
6401f134:	pop    eax
6401f135:	jmp    0x6401f5cf
6401f13a:	and    DWORD PTR [ebp+0x8],0x0
6401f13e:	push   esi
6401f13f:	lea    esi,[ebp-0x20]
6401f142:	lea    edi,[ebp-0x2c]
6401f145:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
6401f146:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
6401f147:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
6401f148:	mov    esi,DWORD PTR ds:0x64053124
6401f14e:	dec    esi
6401f14f:	lea    ecx,[esi+0x1]
6401f152:	mov    eax,ecx
6401f154:	cdq    
6401f155:	and    edx,0x1f
6401f158:	add    eax,edx
6401f15a:	sar    eax,0x5
6401f15d:	mov    edx,ecx
6401f15f:	and    edx,0x8000001f
6401f165:	mov    DWORD PTR [ebp-0x10],ebx
6401f168:	mov    DWORD PTR [ebp-0xc],eax
6401f16b:	jns    0x6401f172
6401f16d:	dec    edx
6401f16e:	or     edx,0xffffffe0
6401f171:	inc    edx
6401f172:	lea    edi,[ebp+eax*4-0x20]
6401f176:	push   0x1f
6401f178:	xor    eax,eax
6401f17a:	pop    ecx
6401f17b:	sub    ecx,edx
6401f17d:	inc    eax
6401f17e:	shl    eax,cl
6401f180:	mov    DWORD PTR [ebp-0x8],ecx
6401f183:	test   DWORD PTR [edi],eax
6401f185:	je     0x6401f218
6401f18b:	mov    eax,DWORD PTR [ebp-0xc]
6401f18e:	or     edx,0xffffffff
6401f191:	shl    edx,cl
6401f193:	not    edx
6401f195:	test   DWORD PTR [ebp+eax*4-0x20],edx
6401f199:	jmp    0x6401f1a0
6401f19b:	cmp    DWORD PTR [ebp+eax*4-0x20],0x0
6401f1a0:	jne    0x6401f1aa
6401f1a2:	inc    eax
6401f1a3:	cmp    eax,0x3
6401f1a6:	jl     0x6401f19b
6401f1a8:	jmp    0x6401f218
6401f1aa:	mov    eax,esi
6401f1ac:	cdq    
6401f1ad:	push   0x1f
6401f1af:	pop    ecx
6401f1b0:	and    edx,ecx
6401f1b2:	add    eax,edx
6401f1b4:	sar    eax,0x5
6401f1b7:	and    esi,0x8000001f
6401f1bd:	jns    0x6401f1c4
6401f1bf:	dec    esi
6401f1c0:	or     esi,0xffffffe0
6401f1c3:	inc    esi
6401f1c4:	and    DWORD PTR [ebp-0x4],0x0
6401f1c8:	sub    ecx,esi
6401f1ca:	xor    edx,edx
6401f1cc:	inc    edx
6401f1cd:	shl    edx,cl
6401f1cf:	lea    ecx,[ebp+eax*4-0x20]
6401f1d3:	mov    esi,DWORD PTR [ecx]
6401f1d5:	add    esi,edx
6401f1d7:	mov    DWORD PTR [ebp+0x8],esi
6401f1da:	mov    esi,DWORD PTR [ecx]
6401f1dc:	cmp    DWORD PTR [ebp+0x8],esi
6401f1df:	jb     0x6401f203
6401f1e1:	cmp    DWORD PTR [ebp+0x8],edx
6401f1e4:	jmp    0x6401f201
6401f1e6:	test   ecx,ecx
6401f1e8:	je     0x6401f215
6401f1ea:	and    DWORD PTR [ebp-0x4],0x0
6401f1ee:	lea    ecx,[ebp+eax*4-0x20]
6401f1f2:	mov    edx,DWORD PTR [ecx]
6401f1f4:	lea    esi,[edx+0x1]
6401f1f7:	cmp    esi,edx
6401f1f9:	mov    DWORD PTR [ebp+0x8],esi
6401f1fc:	jb     0x6401f203
6401f1fe:	cmp    esi,0x1
6401f201:	jae    0x6401f20a
6401f203:	mov    DWORD PTR [ebp-0x4],0x1
6401f20a:	dec    eax
6401f20b:	mov    edx,DWORD PTR [ebp+0x8]
6401f20e:	mov    DWORD PTR [ecx],edx
6401f210:	mov    ecx,DWORD PTR [ebp-0x4]
6401f213:	jns    0x6401f1e6
6401f215:	mov    DWORD PTR [ebp+0x8],ecx
6401f218:	mov    ecx,DWORD PTR [ebp-0x8]
6401f21b:	or     eax,0xffffffff
6401f21e:	shl    eax,cl
6401f220:	and    DWORD PTR [edi],eax
6401f222:	mov    eax,DWORD PTR [ebp-0xc]
6401f225:	inc    eax
6401f226:	cmp    eax,0x3
6401f229:	jge    0x6401f238
6401f22b:	push   0x3
6401f22d:	pop    ecx
6401f22e:	lea    edi,[ebp+eax*4-0x20]
6401f232:	sub    ecx,eax
6401f234:	xor    eax,eax
6401f236:	rep stos DWORD PTR es:[edi],eax
6401f238:	cmp    DWORD PTR [ebp+0x8],0x0
6401f23c:	je     0x6401f23f
6401f23e:	inc    ebx
6401f23f:	mov    eax,ds:0x64053120
6401f244:	mov    ecx,eax
6401f246:	sub    ecx,DWORD PTR ds:0x64053124
6401f24c:	cmp    ebx,ecx
6401f24e:	jge    0x6401f25d
6401f250:	xor    eax,eax
6401f252:	lea    edi,[ebp-0x20]
6401f255:	stos   DWORD PTR es:[edi],eax
6401f256:	stos   DWORD PTR es:[edi],eax
6401f257:	stos   DWORD PTR es:[edi],eax
6401f258:	jmp    0x6401f46a
6401f25d:	cmp    ebx,eax
6401f25f:	jg     0x6401f474
6401f265:	sub    eax,DWORD PTR [ebp-0x10]
6401f268:	lea    esi,[ebp-0x2c]
6401f26b:	mov    ecx,eax
6401f26d:	lea    edi,[ebp-0x20]
6401f270:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
6401f271:	cdq    
6401f272:	and    edx,0x1f
6401f275:	add    eax,edx
6401f277:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
6401f278:	mov    edx,ecx
6401f27a:	sar    eax,0x5
6401f27d:	and    edx,0x8000001f
6401f283:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
6401f284:	jns    0x6401f28b
6401f286:	dec    edx
6401f287:	or     edx,0xffffffe0
6401f28a:	inc    edx
6401f28b:	and    DWORD PTR [ebp-0xc],0x0
6401f28f:	and    DWORD PTR [ebp+0x8],0x0
6401f293:	or     edi,0xffffffff
6401f296:	mov    ecx,edx
6401f298:	shl    edi,cl
6401f29a:	mov    DWORD PTR [ebp-0x4],0x20
6401f2a1:	sub    DWORD PTR [ebp-0x4],edx
6401f2a4:	not    edi
6401f2a6:	mov    ebx,DWORD PTR [ebp+0x8]
6401f2a9:	lea    ebx,[ebp+ebx*4-0x20]
6401f2ad:	mov    esi,DWORD PTR [ebx]
6401f2af:	mov    ecx,esi
6401f2b1:	and    ecx,edi
6401f2b3:	mov    DWORD PTR [ebp-0x10],ecx
6401f2b6:	mov    ecx,edx
6401f2b8:	shr    esi,cl
6401f2ba:	mov    ecx,DWORD PTR [ebp-0x4]
6401f2bd:	or     esi,DWORD PTR [ebp-0xc]
6401f2c0:	mov    DWORD PTR [ebx],esi
6401f2c2:	mov    esi,DWORD PTR [ebp-0x10]
6401f2c5:	shl    esi,cl
6401f2c7:	inc    DWORD PTR [ebp+0x8]
6401f2ca:	cmp    DWORD PTR [ebp+0x8],0x3
6401f2ce:	mov    DWORD PTR [ebp-0xc],esi
6401f2d1:	jl     0x6401f2a6
6401f2d3:	mov    esi,eax
6401f2d5:	push   0x2
6401f2d7:	shl    esi,0x2
6401f2da:	lea    ecx,[ebp-0x18]
6401f2dd:	pop    edx
6401f2de:	sub    ecx,esi
6401f2e0:	cmp    edx,eax
6401f2e2:	jl     0x6401f2ec
6401f2e4:	mov    esi,DWORD PTR [ecx]
6401f2e6:	mov    DWORD PTR [ebp+edx*4-0x20],esi
6401f2ea:	jmp    0x6401f2f1
6401f2ec:	and    DWORD PTR [ebp+edx*4-0x20],0x0
6401f2f1:	dec    edx
6401f2f2:	sub    ecx,0x4
6401f2f5:	test   edx,edx
6401f2f7:	jge    0x6401f2e0
6401f2f9:	mov    esi,DWORD PTR ds:0x64053124
6401f2ff:	dec    esi
6401f300:	lea    ecx,[esi+0x1]
6401f303:	mov    eax,ecx
6401f305:	cdq    
6401f306:	and    edx,0x1f
6401f309:	add    eax,edx
6401f30b:	sar    eax,0x5
6401f30e:	mov    edx,ecx
6401f310:	and    edx,0x8000001f
6401f316:	mov    DWORD PTR [ebp-0xc],eax
6401f319:	jns    0x6401f320
6401f31b:	dec    edx
6401f31c:	or     edx,0xffffffe0
6401f31f:	inc    edx
6401f320:	push   0x1f
6401f322:	pop    ecx
6401f323:	sub    ecx,edx
6401f325:	xor    edx,edx
6401f327:	inc    edx
6401f328:	shl    edx,cl
6401f32a:	lea    ebx,[ebp+eax*4-0x20]
6401f32e:	mov    DWORD PTR [ebp-0x10],ecx
6401f331:	test   DWORD PTR [ebx],edx
6401f333:	je     0x6401f3bb
6401f339:	or     edx,0xffffffff
6401f33c:	shl    edx,cl
6401f33e:	not    edx
6401f340:	test   DWORD PTR [ebp+eax*4-0x20],edx
6401f344:	jmp    0x6401f34b
6401f346:	cmp    DWORD PTR [ebp+eax*4-0x20],0x0
6401f34b:	jne    0x6401f355
6401f34d:	inc    eax
6401f34e:	cmp    eax,0x3
6401f351:	jl     0x6401f346
6401f353:	jmp    0x6401f3bb
6401f355:	mov    eax,esi
6401f357:	cdq    
6401f358:	push   0x1f
6401f35a:	pop    ecx
6401f35b:	and    edx,ecx
6401f35d:	add    eax,edx
6401f35f:	sar    eax,0x5
6401f362:	and    esi,0x8000001f
6401f368:	jns    0x6401f36f
6401f36a:	dec    esi
6401f36b:	or     esi,0xffffffe0
6401f36e:	inc    esi
6401f36f:	and    DWORD PTR [ebp+0x8],0x0
6401f373:	xor    edx,edx
6401f375:	sub    ecx,esi
6401f377:	inc    edx
6401f378:	shl    edx,cl
6401f37a:	lea    ecx,[ebp+eax*4-0x20]
6401f37e:	mov    esi,DWORD PTR [ecx]
6401f380:	lea    edi,[esi+edx*1]
6401f383:	cmp    edi,esi
6401f385:	jb     0x6401f38b
6401f387:	cmp    edi,edx
6401f389:	jae    0x6401f392
6401f38b:	mov    DWORD PTR [ebp+0x8],0x1
6401f392:	mov    DWORD PTR [ecx],edi
6401f394:	mov    ecx,DWORD PTR [ebp+0x8]
6401f397:	jmp    0x6401f3b8
6401f399:	test   ecx,ecx
6401f39b:	je     0x6401f3bb
6401f39d:	lea    ecx,[ebp+eax*4-0x20]
6401f3a1:	mov    edx,DWORD PTR [ecx]
6401f3a3:	lea    esi,[edx+0x1]
6401f3a6:	xor    edi,edi
6401f3a8:	cmp    esi,edx
6401f3aa:	jb     0x6401f3b1
6401f3ac:	cmp    esi,0x1
6401f3af:	jae    0x6401f3b4
6401f3b1:	xor    edi,edi
6401f3b3:	inc    edi
6401f3b4:	mov    DWORD PTR [ecx],esi
6401f3b6:	mov    ecx,edi
6401f3b8:	dec    eax
6401f3b9:	jns    0x6401f399
6401f3bb:	mov    ecx,DWORD PTR [ebp-0x10]
6401f3be:	or     eax,0xffffffff
6401f3c1:	shl    eax,cl
6401f3c3:	and    DWORD PTR [ebx],eax
6401f3c5:	mov    eax,DWORD PTR [ebp-0xc]
6401f3c8:	inc    eax
6401f3c9:	cmp    eax,0x3
6401f3cc:	jge    0x6401f3db
6401f3ce:	push   0x3
6401f3d0:	pop    ecx
6401f3d1:	lea    edi,[ebp+eax*4-0x20]
6401f3d5:	sub    ecx,eax
6401f3d7:	xor    eax,eax
6401f3d9:	rep stos DWORD PTR es:[edi],eax
6401f3db:	mov    ecx,DWORD PTR ds:0x64053128
6401f3e1:	inc    ecx
6401f3e2:	mov    eax,ecx
6401f3e4:	cdq    
6401f3e5:	and    edx,0x1f
6401f3e8:	add    eax,edx
6401f3ea:	mov    edx,ecx
6401f3ec:	sar    eax,0x5
6401f3ef:	and    edx,0x8000001f
6401f3f5:	jns    0x6401f3fc
6401f3f7:	dec    edx
6401f3f8:	or     edx,0xffffffe0
6401f3fb:	inc    edx
6401f3fc:	and    DWORD PTR [ebp-0xc],0x0
6401f400:	and    DWORD PTR [ebp+0x8],0x0
6401f404:	or     edi,0xffffffff
6401f407:	mov    ecx,edx
6401f409:	shl    edi,cl
6401f40b:	mov    DWORD PTR [ebp-0x4],0x20
6401f412:	sub    DWORD PTR [ebp-0x4],edx
6401f415:	not    edi
6401f417:	mov    ebx,DWORD PTR [ebp+0x8]
6401f41a:	lea    ebx,[ebp+ebx*4-0x20]
6401f41e:	mov    esi,DWORD PTR [ebx]
6401f420:	mov    ecx,esi
6401f422:	and    ecx,edi
6401f424:	mov    DWORD PTR [ebp-0x10],ecx
6401f427:	mov    ecx,edx
6401f429:	shr    esi,cl
6401f42b:	mov    ecx,DWORD PTR [ebp-0x4]
6401f42e:	or     esi,DWORD PTR [ebp-0xc]
6401f431:	mov    DWORD PTR [ebx],esi
6401f433:	mov    esi,DWORD PTR [ebp-0x10]
6401f436:	shl    esi,cl
6401f438:	inc    DWORD PTR [ebp+0x8]
6401f43b:	cmp    DWORD PTR [ebp+0x8],0x3
6401f43f:	mov    DWORD PTR [ebp-0xc],esi
6401f442:	jl     0x6401f417
6401f444:	mov    esi,eax
6401f446:	push   0x2
6401f448:	shl    esi,0x2
6401f44b:	lea    ecx,[ebp-0x18]
6401f44e:	pop    edx
6401f44f:	sub    ecx,esi
6401f451:	cmp    edx,eax
6401f453:	jl     0x6401f45d
6401f455:	mov    esi,DWORD PTR [ecx]
6401f457:	mov    DWORD PTR [ebp+edx*4-0x20],esi
6401f45b:	jmp    0x6401f462
6401f45d:	and    DWORD PTR [ebp+edx*4-0x20],0x0
6401f462:	dec    edx
6401f463:	sub    ecx,0x4
6401f466:	test   edx,edx
6401f468:	jge    0x6401f451
6401f46a:	push   0x2
6401f46c:	xor    ebx,ebx
6401f46e:	pop    eax
6401f46f:	jmp    0x6401f5ce
6401f474:	cmp    ebx,DWORD PTR ds:0x6405311c
6401f47a:	mov    ecx,DWORD PTR ds:0x64053128
6401f480:	jl     0x6401f533
6401f486:	xor    eax,eax
6401f488:	lea    edi,[ebp-0x20]
6401f48b:	stos   DWORD PTR es:[edi],eax
6401f48c:	stos   DWORD PTR es:[edi],eax
6401f48d:	stos   DWORD PTR es:[edi],eax
6401f48e:	or     DWORD PTR [ebp-0x20],0x80000000
6401f495:	mov    eax,ecx
6401f497:	cdq    
6401f498:	and    edx,0x1f
6401f49b:	add    eax,edx
6401f49d:	mov    edx,ecx
6401f49f:	sar    eax,0x5
6401f4a2:	and    edx,0x8000001f
6401f4a8:	jns    0x6401f4af
6401f4aa:	dec    edx
6401f4ab:	or     edx,0xffffffe0
6401f4ae:	inc    edx
6401f4af:	and    DWORD PTR [ebp-0xc],0x0
6401f4b3:	and    DWORD PTR [ebp+0x8],0x0
6401f4b7:	or     edi,0xffffffff
6401f4ba:	mov    ecx,edx
6401f4bc:	shl    edi,cl
6401f4be:	mov    DWORD PTR [ebp-0x4],0x20
6401f4c5:	sub    DWORD PTR [ebp-0x4],edx
6401f4c8:	not    edi
6401f4ca:	mov    ebx,DWORD PTR [ebp+0x8]
6401f4cd:	lea    ebx,[ebp+ebx*4-0x20]
6401f4d1:	mov    esi,DWORD PTR [ebx]
6401f4d3:	mov    ecx,esi
6401f4d5:	and    ecx,edi
6401f4d7:	mov    DWORD PTR [ebp-0x10],ecx
6401f4da:	mov    ecx,edx
6401f4dc:	shr    esi,cl
6401f4de:	mov    ecx,DWORD PTR [ebp-0x4]
6401f4e1:	or     esi,DWORD PTR [ebp-0xc]
6401f4e4:	mov    DWORD PTR [ebx],esi
6401f4e6:	mov    esi,DWORD PTR [ebp-0x10]
6401f4e9:	shl    esi,cl
6401f4eb:	inc    DWORD PTR [ebp+0x8]
6401f4ee:	cmp    DWORD PTR [ebp+0x8],0x3
6401f4f2:	mov    DWORD PTR [ebp-0xc],esi
6401f4f5:	jl     0x6401f4ca
6401f4f7:	mov    esi,eax
6401f4f9:	push   0x2
6401f4fb:	shl    esi,0x2
6401f4fe:	lea    ecx,[ebp-0x18]
6401f501:	pop    edx
6401f502:	sub    ecx,esi
6401f504:	cmp    edx,eax
6401f506:	jl     0x6401f510
6401f508:	mov    esi,DWORD PTR [ecx]
6401f50a:	mov    DWORD PTR [ebp+edx*4-0x20],esi
6401f50e:	jmp    0x6401f515
6401f510:	and    DWORD PTR [ebp+edx*4-0x20],0x0
6401f515:	dec    edx
6401f516:	sub    ecx,0x4
6401f519:	test   edx,edx
6401f51b:	jge    0x6401f504
6401f51d:	mov    eax,ds:0x6405311c
6401f522:	mov    ecx,DWORD PTR ds:0x64053130
6401f528:	lea    ebx,[ecx+eax*1]
6401f52b:	xor    eax,eax
6401f52d:	inc    eax
6401f52e:	jmp    0x6401f5ce
6401f533:	mov    eax,ds:0x64053130
6401f538:	and    DWORD PTR [ebp-0x20],0x7fffffff
6401f53f:	add    ebx,eax
6401f541:	mov    eax,ecx
6401f543:	cdq    
6401f544:	and    edx,0x1f
6401f547:	add    eax,edx
6401f549:	mov    edx,ecx
6401f54b:	sar    eax,0x5
6401f54e:	and    edx,0x8000001f
6401f554:	jns    0x6401f55b
6401f556:	dec    edx
6401f557:	or     edx,0xffffffe0
6401f55a:	inc    edx
6401f55b:	and    DWORD PTR [ebp-0xc],0x0
6401f55f:	and    DWORD PTR [ebp+0x8],0x0
6401f563:	or     esi,0xffffffff
6401f566:	mov    ecx,edx
6401f568:	shl    esi,cl
6401f56a:	mov    DWORD PTR [ebp-0x4],0x20
6401f571:	sub    DWORD PTR [ebp-0x4],edx
6401f574:	not    esi
6401f576:	mov    ecx,DWORD PTR [ebp+0x8]
6401f579:	mov    edi,DWORD PTR [ebp+ecx*4-0x20]
6401f57d:	mov    ecx,edi
6401f57f:	and    ecx,esi
6401f581:	mov    DWORD PTR [ebp-0x10],ecx
6401f584:	mov    ecx,edx
6401f586:	shr    edi,cl
6401f588:	mov    ecx,DWORD PTR [ebp+0x8]
6401f58b:	or     edi,DWORD PTR [ebp-0xc]
6401f58e:	mov    DWORD PTR [ebp+ecx*4-0x20],edi
6401f592:	mov    edi,DWORD PTR [ebp-0x10]
6401f595:	mov    ecx,DWORD PTR [ebp-0x4]
6401f598:	shl    edi,cl
6401f59a:	inc    DWORD PTR [ebp+0x8]
6401f59d:	cmp    DWORD PTR [ebp+0x8],0x3
6401f5a1:	mov    DWORD PTR [ebp-0xc],edi
6401f5a4:	jl     0x6401f576
6401f5a6:	mov    esi,eax
6401f5a8:	push   0x2
6401f5aa:	shl    esi,0x2
6401f5ad:	lea    ecx,[ebp-0x18]
6401f5b0:	pop    edx
6401f5b1:	sub    ecx,esi
6401f5b3:	cmp    edx,eax
6401f5b5:	jl     0x6401f5bf
6401f5b7:	mov    esi,DWORD PTR [ecx]
6401f5b9:	mov    DWORD PTR [ebp+edx*4-0x20],esi
6401f5bd:	jmp    0x6401f5c4
6401f5bf:	and    DWORD PTR [ebp+edx*4-0x20],0x0
6401f5c4:	dec    edx
6401f5c5:	sub    ecx,0x4
6401f5c8:	test   edx,edx
6401f5ca:	jge    0x6401f5b3
6401f5cc:	xor    eax,eax
6401f5ce:	pop    esi
6401f5cf:	push   0x1f
6401f5d1:	pop    ecx
6401f5d2:	sub    ecx,DWORD PTR ds:0x64053128
6401f5d8:	shl    ebx,cl
6401f5da:	mov    ecx,DWORD PTR [ebp-0x14]
6401f5dd:	neg    ecx
6401f5df:	sbb    ecx,ecx
6401f5e1:	and    ecx,0x80000000
6401f5e7:	or     ebx,ecx
6401f5e9:	mov    ecx,DWORD PTR ds:0x6405312c
6401f5ef:	or     ebx,DWORD PTR [ebp-0x20]
6401f5f2:	cmp    ecx,0x40
6401f5f5:	jne    0x6401f604
6401f5f7:	mov    ecx,DWORD PTR [ebp+0xc]
6401f5fa:	mov    edx,DWORD PTR [ebp-0x1c]
6401f5fd:	mov    DWORD PTR [ecx+0x4],ebx
6401f600:	mov    DWORD PTR [ecx],edx
6401f602:	jmp    0x6401f60e
6401f604:	cmp    ecx,0x20
6401f607:	jne    0x6401f60e
6401f609:	mov    ecx,DWORD PTR [ebp+0xc]
6401f60c:	mov    DWORD PTR [ecx],ebx
6401f60e:	pop    edi
6401f60f:	pop    ebx
6401f610:	leave  
6401f611:	ret    
6401f612:	push   ebp
6401f613:	mov    ebp,esp
6401f615:	sub    esp,0x2c
6401f618:	mov    eax,DWORD PTR [ebp+0x8]
6401f61b:	movzx  ecx,WORD PTR [eax+0xa]
6401f61f:	push   ebx
6401f620:	mov    ebx,ecx
6401f622:	and    ecx,0x8000
6401f628:	mov    DWORD PTR [ebp-0x14],ecx
6401f62b:	mov    ecx,DWORD PTR [eax+0x6]
6401f62e:	mov    DWORD PTR [ebp-0x20],ecx
6401f631:	mov    ecx,DWORD PTR [eax+0x2]
6401f634:	movzx  eax,WORD PTR [eax]
6401f637:	and    ebx,0x7fff
6401f63d:	sub    ebx,0x3fff
6401f643:	shl    eax,0x10
6401f646:	cmp    ebx,0xffffc001
6401f64c:	push   edi
6401f64d:	mov    DWORD PTR [ebp-0x1c],ecx
6401f650:	mov    DWORD PTR [ebp-0x18],eax
6401f653:	jne    0x6401f67c
6401f655:	xor    ebx,ebx
6401f657:	xor    eax,eax
6401f659:	cmp    DWORD PTR [ebp+eax*4-0x20],ebx
6401f65d:	jne    0x6401f66c
6401f65f:	inc    eax
6401f660:	cmp    eax,0x3
6401f663:	jl     0x6401f659
6401f665:	xor    eax,eax
6401f667:	jmp    0x6401fb11
6401f66c:	xor    eax,eax
6401f66e:	lea    edi,[ebp-0x20]
6401f671:	stos   DWORD PTR es:[edi],eax
6401f672:	stos   DWORD PTR es:[edi],eax
6401f673:	push   0x2
6401f675:	stos   DWORD PTR es:[edi],eax
6401f676:	pop    eax
6401f677:	jmp    0x6401fb11
6401f67c:	and    DWORD PTR [ebp+0x8],0x0
6401f680:	push   esi
6401f681:	lea    esi,[ebp-0x20]
6401f684:	lea    edi,[ebp-0x2c]
6401f687:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
6401f688:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
6401f689:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
6401f68a:	mov    esi,DWORD PTR ds:0x6405313c
6401f690:	dec    esi
6401f691:	lea    ecx,[esi+0x1]
6401f694:	mov    eax,ecx
6401f696:	cdq    
6401f697:	and    edx,0x1f
6401f69a:	add    eax,edx
6401f69c:	sar    eax,0x5
6401f69f:	mov    edx,ecx
6401f6a1:	and    edx,0x8000001f
6401f6a7:	mov    DWORD PTR [ebp-0x10],ebx
6401f6aa:	mov    DWORD PTR [ebp-0xc],eax
6401f6ad:	jns    0x6401f6b4
6401f6af:	dec    edx
6401f6b0:	or     edx,0xffffffe0
6401f6b3:	inc    edx
6401f6b4:	lea    edi,[ebp+eax*4-0x20]
6401f6b8:	push   0x1f
6401f6ba:	xor    eax,eax
6401f6bc:	pop    ecx
6401f6bd:	sub    ecx,edx
6401f6bf:	inc    eax
6401f6c0:	shl    eax,cl
6401f6c2:	mov    DWORD PTR [ebp-0x8],ecx
6401f6c5:	test   DWORD PTR [edi],eax
6401f6c7:	je     0x6401f75a
6401f6cd:	mov    eax,DWORD PTR [ebp-0xc]
6401f6d0:	or     edx,0xffffffff
6401f6d3:	shl    edx,cl
6401f6d5:	not    edx
6401f6d7:	test   DWORD PTR [ebp+eax*4-0x20],edx
6401f6db:	jmp    0x6401f6e2
6401f6dd:	cmp    DWORD PTR [ebp+eax*4-0x20],0x0
6401f6e2:	jne    0x6401f6ec
6401f6e4:	inc    eax
6401f6e5:	cmp    eax,0x3
6401f6e8:	jl     0x6401f6dd
6401f6ea:	jmp    0x6401f75a
6401f6ec:	mov    eax,esi
6401f6ee:	cdq    
6401f6ef:	push   0x1f
6401f6f1:	pop    ecx
6401f6f2:	and    edx,ecx
6401f6f4:	add    eax,edx
6401f6f6:	sar    eax,0x5
6401f6f9:	and    esi,0x8000001f
6401f6ff:	jns    0x6401f706
6401f701:	dec    esi
6401f702:	or     esi,0xffffffe0
6401f705:	inc    esi
6401f706:	and    DWORD PTR [ebp-0x4],0x0
6401f70a:	sub    ecx,esi
6401f70c:	xor    edx,edx
6401f70e:	inc    edx
6401f70f:	shl    edx,cl
6401f711:	lea    ecx,[ebp+eax*4-0x20]
6401f715:	mov    esi,DWORD PTR [ecx]
6401f717:	add    esi,edx
6401f719:	mov    DWORD PTR [ebp+0x8],esi
6401f71c:	mov    esi,DWORD PTR [ecx]
6401f71e:	cmp    DWORD PTR [ebp+0x8],esi
6401f721:	jb     0x6401f745
6401f723:	cmp    DWORD PTR [ebp+0x8],edx
6401f726:	jmp    0x6401f743
6401f728:	test   ecx,ecx
6401f72a:	je     0x6401f757
6401f72c:	and    DWORD PTR [ebp-0x4],0x0
6401f730:	lea    ecx,[ebp+eax*4-0x20]
6401f734:	mov    edx,DWORD PTR [ecx]
6401f736:	lea    esi,[edx+0x1]
6401f739:	cmp    esi,edx
6401f73b:	mov    DWORD PTR [ebp+0x8],esi
6401f73e:	jb     0x6401f745
6401f740:	cmp    esi,0x1
6401f743:	jae    0x6401f74c
6401f745:	mov    DWORD PTR [ebp-0x4],0x1
6401f74c:	dec    eax
6401f74d:	mov    edx,DWORD PTR [ebp+0x8]
6401f750:	mov    DWORD PTR [ecx],edx
6401f752:	mov    ecx,DWORD PTR [ebp-0x4]
6401f755:	jns    0x6401f728
6401f757:	mov    DWORD PTR [ebp+0x8],ecx
6401f75a:	mov    ecx,DWORD PTR [ebp-0x8]
6401f75d:	or     eax,0xffffffff
6401f760:	shl    eax,cl
6401f762:	and    DWORD PTR [edi],eax
6401f764:	mov    eax,DWORD PTR [ebp-0xc]
6401f767:	inc    eax
6401f768:	cmp    eax,0x3
6401f76b:	jge    0x6401f77a
6401f76d:	push   0x3
6401f76f:	pop    ecx
6401f770:	lea    edi,[ebp+eax*4-0x20]
6401f774:	sub    ecx,eax
6401f776:	xor    eax,eax
6401f778:	rep stos DWORD PTR es:[edi],eax
6401f77a:	cmp    DWORD PTR [ebp+0x8],0x0
6401f77e:	je     0x6401f781
6401f780:	inc    ebx
6401f781:	mov    eax,ds:0x64053138
6401f786:	mov    ecx,eax
6401f788:	sub    ecx,DWORD PTR ds:0x6405313c
6401f78e:	cmp    ebx,ecx
6401f790:	jge    0x6401f79f
6401f792:	xor    eax,eax
6401f794:	lea    edi,[ebp-0x20]
6401f797:	stos   DWORD PTR es:[edi],eax
6401f798:	stos   DWORD PTR es:[edi],eax
6401f799:	stos   DWORD PTR es:[edi],eax
6401f79a:	jmp    0x6401f9ac
6401f79f:	cmp    ebx,eax
6401f7a1:	jg     0x6401f9b6
6401f7a7:	sub    eax,DWORD PTR [ebp-0x10]
6401f7aa:	lea    esi,[ebp-0x2c]
6401f7ad:	mov    ecx,eax
6401f7af:	lea    edi,[ebp-0x20]
6401f7b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
6401f7b3:	cdq    
6401f7b4:	and    edx,0x1f
6401f7b7:	add    eax,edx
6401f7b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
6401f7ba:	mov    edx,ecx
6401f7bc:	sar    eax,0x5
6401f7bf:	and    edx,0x8000001f
6401f7c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
6401f7c6:	jns    0x6401f7cd
6401f7c8:	dec    edx
6401f7c9:	or     edx,0xffffffe0
6401f7cc:	inc    edx
6401f7cd:	and    DWORD PTR [ebp-0xc],0x0
6401f7d1:	and    DWORD PTR [ebp+0x8],0x0
6401f7d5:	or     edi,0xffffffff
6401f7d8:	mov    ecx,edx
6401f7da:	shl    edi,cl
6401f7dc:	mov    DWORD PTR [ebp-0x4],0x20
6401f7e3:	sub    DWORD PTR [ebp-0x4],edx
6401f7e6:	not    edi
6401f7e8:	mov    ebx,DWORD PTR [ebp+0x8]
6401f7eb:	lea    ebx,[ebp+ebx*4-0x20]
6401f7ef:	mov    esi,DWORD PTR [ebx]
6401f7f1:	mov    ecx,esi
6401f7f3:	and    ecx,edi
6401f7f5:	mov    DWORD PTR [ebp-0x10],ecx
6401f7f8:	mov    ecx,edx
6401f7fa:	shr    esi,cl
6401f7fc:	mov    ecx,DWORD PTR [ebp-0x4]
6401f7ff:	or     esi,DWORD PTR [ebp-0xc]
6401f802:	mov    DWORD PTR [ebx],esi
6401f804:	mov    esi,DWORD PTR [ebp-0x10]
6401f807:	shl    esi,cl
6401f809:	inc    DWORD PTR [ebp+0x8]
6401f80c:	cmp    DWORD PTR [ebp+0x8],0x3
6401f810:	mov    DWORD PTR [ebp-0xc],esi
6401f813:	jl     0x6401f7e8
6401f815:	mov    esi,eax
6401f817:	push   0x2
6401f819:	shl    esi,0x2
6401f81c:	lea    ecx,[ebp-0x18]
6401f81f:	pop    edx
6401f820:	sub    ecx,esi
6401f822:	cmp    edx,eax
6401f824:	jl     0x6401f82e
6401f826:	mov    esi,DWORD PTR [ecx]
6401f828:	mov    DWORD PTR [ebp+edx*4-0x20],esi
6401f82c:	jmp    0x6401f833
6401f82e:	and    DWORD PTR [ebp+edx*4-0x20],0x0
6401f833:	dec    edx
6401f834:	sub    ecx,0x4
6401f837:	test   edx,edx
6401f839:	jge    0x6401f822
6401f83b:	mov    esi,DWORD PTR ds:0x6405313c
6401f841:	dec    esi
6401f842:	lea    ecx,[esi+0x1]
6401f845:	mov    eax,ecx
6401f847:	cdq    
6401f848:	and    edx,0x1f
6401f84b:	add    eax,edx
6401f84d:	sar    eax,0x5
6401f850:	mov    edx,ecx
6401f852:	and    edx,0x8000001f
6401f858:	mov    DWORD PTR [ebp-0xc],eax
6401f85b:	jns    0x6401f862
6401f85d:	dec    edx
6401f85e:	or     edx,0xffffffe0
6401f861:	inc    edx
6401f862:	push   0x1f
6401f864:	pop    ecx
6401f865:	sub    ecx,edx
6401f867:	xor    edx,edx
6401f869:	inc    edx
6401f86a:	shl    edx,cl
6401f86c:	lea    ebx,[ebp+eax*4-0x20]
6401f870:	mov    DWORD PTR [ebp-0x10],ecx
6401f873:	test   DWORD PTR [ebx],edx
6401f875:	je     0x6401f8fd
6401f87b:	or     edx,0xffffffff
6401f87e:	shl    edx,cl
6401f880:	not    edx
6401f882:	test   DWORD PTR [ebp+eax*4-0x20],edx
6401f886:	jmp    0x6401f88d
6401f888:	cmp    DWORD PTR [ebp+eax*4-0x20],0x0
6401f88d:	jne    0x6401f897
6401f88f:	inc    eax
6401f890:	cmp    eax,0x3
6401f893:	jl     0x6401f888
6401f895:	jmp    0x6401f8fd
6401f897:	mov    eax,esi
6401f899:	cdq    
6401f89a:	push   0x1f
6401f89c:	pop    ecx
6401f89d:	and    edx,ecx
6401f89f:	add    eax,edx
6401f8a1:	sar    eax,0x5
6401f8a4:	and    esi,0x8000001f
6401f8aa:	jns    0x6401f8b1
6401f8ac:	dec    esi
6401f8ad:	or     esi,0xffffffe0
6401f8b0:	inc    esi
6401f8b1:	and    DWORD PTR [ebp+0x8],0x0
6401f8b5:	xor    edx,edx
6401f8b7:	sub    ecx,esi
6401f8b9:	inc    edx
6401f8ba:	shl    edx,cl
6401f8bc:	lea    ecx,[ebp+eax*4-0x20]
6401f8c0:	mov    esi,DWORD PTR [ecx]
6401f8c2:	lea    edi,[esi+edx*1]
6401f8c5:	cmp    edi,esi
6401f8c7:	jb     0x6401f8cd
6401f8c9:	cmp    edi,edx
6401f8cb:	jae    0x6401f8d4
6401f8cd:	mov    DWORD PTR [ebp+0x8],0x1
6401f8d4:	mov    DWORD PTR [ecx],edi
6401f8d6:	mov    ecx,DWORD PTR [ebp+0x8]
6401f8d9:	jmp    0x6401f8fa
6401f8db:	test   ecx,ecx
6401f8dd:	je     0x6401f8fd
6401f8df:	lea    ecx,[ebp+eax*4-0x20]
6401f8e3:	mov    edx,DWORD PTR [ecx]
6401f8e5:	lea    esi,[edx+0x1]
6401f8e8:	xor    edi,edi
6401f8ea:	cmp    esi,edx
6401f8ec:	jb     0x6401f8f3
6401f8ee:	cmp    esi,0x1
6401f8f1:	jae    0x6401f8f6
6401f8f3:	xor    edi,edi
6401f8f5:	inc    edi
6401f8f6:	mov    DWORD PTR [ecx],esi
6401f8f8:	mov    ecx,edi
6401f8fa:	dec    eax
6401f8fb:	jns    0x6401f8db
6401f8fd:	mov    ecx,DWORD PTR [ebp-0x10]
6401f900:	or     eax,0xffffffff
6401f903:	shl    eax,cl
6401f905:	and    DWORD PTR [ebx],eax
6401f907:	mov    eax,DWORD PTR [ebp-0xc]
6401f90a:	inc    eax
6401f90b:	cmp    eax,0x3
6401f90e:	jge    0x6401f91d
6401f910:	push   0x3
6401f912:	pop    ecx
6401f913:	lea    edi,[ebp+eax*4-0x20]
6401f917:	sub    ecx,eax
6401f919:	xor    eax,eax
6401f91b:	rep stos DWORD PTR es:[edi],eax
6401f91d:	mov    ecx,DWORD PTR ds:0x64053140
6401f923:	inc    ecx
6401f924:	mov    eax,ecx
6401f926:	cdq    
6401f927:	and    edx,0x1f
6401f92a:	add    eax,edx
6401f92c:	mov    edx,ecx
6401f92e:	sar    eax,0x5
6401f931:	and    edx,0x8000001f
6401f937:	jns    0x6401f93e
6401f939:	dec    edx
6401f93a:	or     edx,0xffffffe0
6401f93d:	inc    edx
6401f93e:	and    DWORD PTR [ebp-0xc],0x0
6401f942:	and    DWORD PTR [ebp+0x8],0x0
6401f946:	or     edi,0xffffffff
6401f949:	mov    ecx,edx
6401f94b:	shl    edi,cl
6401f94d:	mov    DWORD PTR [ebp-0x4],0x20
6401f954:	sub    DWORD PTR [ebp-0x4],edx
6401f957:	not    edi
6401f959:	mov    ebx,DWORD PTR [ebp+0x8]
6401f95c:	lea    ebx,[ebp+ebx*4-0x20]
6401f960:	mov    esi,DWORD PTR [ebx]
6401f962:	mov    ecx,esi
6401f964:	and    ecx,edi
6401f966:	mov    DWORD PTR [ebp-0x10],ecx
6401f969:	mov    ecx,edx
6401f96b:	shr    esi,cl
6401f96d:	mov    ecx,DWORD PTR [ebp-0x4]
6401f970:	or     esi,DWORD PTR [ebp-0xc]
6401f973:	mov    DWORD PTR [ebx],esi
6401f975:	mov    esi,DWORD PTR [ebp-0x10]
6401f978:	shl    esi,cl
6401f97a:	inc    DWORD PTR [ebp+0x8]
6401f97d:	cmp    DWORD PTR [ebp+0x8],0x3
6401f981:	mov    DWORD PTR [ebp-0xc],esi
6401f984:	jl     0x6401f959
6401f986:	mov    esi,eax
6401f988:	push   0x2
6401f98a:	shl    esi,0x2
6401f98d:	lea    ecx,[ebp-0x18]
6401f990:	pop    edx
6401f991:	sub    ecx,esi
6401f993:	cmp    edx,eax
6401f995:	jl     0x6401f99f
6401f997:	mov    esi,DWORD PTR [ecx]
6401f999:	mov    DWORD PTR [ebp+edx*4-0x20],esi
6401f99d:	jmp    0x6401f9a4
6401f99f:	and    DWORD PTR [ebp+edx*4-0x20],0x0
6401f9a4:	dec    edx
6401f9a5:	sub    ecx,0x4
6401f9a8:	test   edx,edx
6401f9aa:	jge    0x6401f993
6401f9ac:	push   0x2
6401f9ae:	xor    ebx,ebx
6401f9b0:	pop    eax
6401f9b1:	jmp    0x6401fb10
6401f9b6:	cmp    ebx,DWORD PTR ds:0x64053134
6401f9bc:	mov    ecx,DWORD PTR ds:0x64053140
6401f9c2:	jl     0x6401fa75
6401f9c8:	xor    eax,eax
6401f9ca:	lea    edi,[ebp-0x20]
6401f9cd:	stos   DWORD PTR es:[edi],eax
6401f9ce:	stos   DWORD PTR es:[edi],eax
6401f9cf:	stos   DWORD PTR es:[edi],eax
6401f9d0:	or     DWORD PTR [ebp-0x20],0x80000000
6401f9d7:	mov    eax,ecx
6401f9d9:	cdq    
6401f9da:	and    edx,0x1f
6401f9dd:	add    eax,edx
6401f9df:	mov    edx,ecx
6401f9e1:	sar    eax,0x5
6401f9e4:	and    edx,0x8000001f
6401f9ea:	jns    0x6401f9f1
6401f9ec:	dec    edx
6401f9ed:	or     edx,0xffffffe0
6401f9f0:	inc    edx
6401f9f1:	and    DWORD PTR [ebp-0xc],0x0
6401f9f5:	and    DWORD PTR [ebp+0x8],0x0
6401f9f9:	or     edi,0xffffffff
6401f9fc:	mov    ecx,edx
6401f9fe:	shl    edi,cl
6401fa00:	mov    DWORD PTR [ebp-0x4],0x20
6401fa07:	sub    DWORD PTR [ebp-0x4],edx
6401fa0a:	not    edi
6401fa0c:	mov    ebx,DWORD PTR [ebp+0x8]
6401fa0f:	lea    ebx,[ebp+ebx*4-0x20]
6401fa13:	mov    esi,DWORD PTR [ebx]
6401fa15:	mov    ecx,esi
6401fa17:	and    ecx,edi
6401fa19:	mov    DWORD PTR [ebp-0x10],ecx
6401fa1c:	mov    ecx,edx
6401fa1e:	shr    esi,cl
6401fa20:	mov    ecx,DWORD PTR [ebp-0x4]
6401fa23:	or     esi,DWORD PTR [ebp-0xc]
6401fa26:	mov    DWORD PTR [ebx],esi
6401fa28:	mov    esi,DWORD PTR [ebp-0x10]
6401fa2b:	shl    esi,cl
6401fa2d:	inc    DWORD PTR [ebp+0x8]
6401fa30:	cmp    DWORD PTR [ebp+0x8],0x3
6401fa34:	mov    DWORD PTR [ebp-0xc],esi
6401fa37:	jl     0x6401fa0c
6401fa39:	mov    esi,eax
6401fa3b:	push   0x2
6401fa3d:	shl    esi,0x2
6401fa40:	lea    ecx,[ebp-0x18]
6401fa43:	pop    edx
6401fa44:	sub    ecx,esi
6401fa46:	cmp    edx,eax
6401fa48:	jl     0x6401fa52
6401fa4a:	mov    esi,DWORD PTR [ecx]
6401fa4c:	mov    DWORD PTR [ebp+edx*4-0x20],esi
6401fa50:	jmp    0x6401fa57
6401fa52:	and    DWORD PTR [ebp+edx*4-0x20],0x0
6401fa57:	dec    edx
6401fa58:	sub    ecx,0x4
6401fa5b:	test   edx,edx
6401fa5d:	jge    0x6401fa46
6401fa5f:	mov    eax,ds:0x64053134
6401fa64:	mov    ecx,DWORD PTR ds:0x64053148
6401fa6a:	lea    ebx,[ecx+eax*1]
6401fa6d:	xor    eax,eax
6401fa6f:	inc    eax
6401fa70:	jmp    0x6401fb10
6401fa75:	mov    eax,ds:0x64053148
6401fa7a:	and    DWORD PTR [ebp-0x20],0x7fffffff
6401fa81:	add    ebx,eax
6401fa83:	mov    eax,ecx
6401fa85:	cdq    
6401fa86:	and    edx,0x1f
6401fa89:	add    eax,edx
6401fa8b:	mov    edx,ecx
6401fa8d:	sar    eax,0x5
6401fa90:	and    edx,0x8000001f
6401fa96:	jns    0x6401fa9d
6401fa98:	dec    edx
6401fa99:	or     edx,0xffffffe0
6401fa9c:	inc    edx
6401fa9d:	and    DWORD PTR [ebp-0xc],0x0
6401faa1:	and    DWORD PTR [ebp+0x8],0x0
6401faa5:	or     esi,0xffffffff
6401faa8:	mov    ecx,edx
6401faaa:	shl    esi,cl
6401faac:	mov    DWORD PTR [ebp-0x4],0x20
6401fab3:	sub    DWORD PTR [ebp-0x4],edx
6401fab6:	not    esi
6401fab8:	mov    ecx,DWORD PTR [ebp+0x8]
6401fabb:	mov    edi,DWORD PTR [ebp+ecx*4-0x20]
6401fabf:	mov    ecx,edi
6401fac1:	and    ecx,esi
6401fac3:	mov    DWORD PTR [ebp-0x10],ecx
6401fac6:	mov    ecx,edx
6401fac8:	shr    edi,cl
6401faca:	mov    ecx,DWORD PTR [ebp+0x8]
6401facd:	or     edi,DWORD PTR [ebp-0xc]
6401fad0:	mov    DWORD PTR [ebp+ecx*4-0x20],edi
6401fad4:	mov    edi,DWORD PTR [ebp-0x10]
6401fad7:	mov    ecx,DWORD PTR [ebp-0x4]
6401fada:	shl    edi,cl
6401fadc:	inc    DWORD PTR [ebp+0x8]
6401fadf:	cmp    DWORD PTR [ebp+0x8],0x3
6401fae3:	mov    DWORD PTR [ebp-0xc],edi
6401fae6:	jl     0x6401fab8
6401fae8:	mov    esi,eax
6401faea:	push   0x2
6401faec:	shl    esi,0x2
6401faef:	lea    ecx,[ebp-0x18]
6401faf2:	pop    edx
6401faf3:	sub    ecx,esi
6401faf5:	cmp    edx,eax
6401faf7:	jl     0x6401fb01
6401faf9:	mov    esi,DWORD PTR [ecx]
6401fafb:	mov    DWORD PTR [ebp+edx*4-0x20],esi
6401faff:	jmp    0x6401fb06
6401fb01:	and    DWORD PTR [ebp+edx*4-0x20],0x0
6401fb06:	dec    edx
6401fb07:	sub    ecx,0x4
6401fb0a:	test   edx,edx
6401fb0c:	jge    0x6401faf5
6401fb0e:	xor    eax,eax
6401fb10:	pop    esi
6401fb11:	push   0x1f
6401fb13:	pop    ecx
6401fb14:	sub    ecx,DWORD PTR ds:0x64053140
6401fb1a:	shl    ebx,cl
6401fb1c:	mov    ecx,DWORD PTR [ebp-0x14]
6401fb1f:	neg    ecx
6401fb21:	sbb    ecx,ecx
6401fb23:	and    ecx,0x80000000
6401fb29:	or     ebx,ecx
6401fb2b:	mov    ecx,DWORD PTR ds:0x64053144
6401fb31:	or     ebx,DWORD PTR [ebp-0x20]
6401fb34:	cmp    ecx,0x40
6401fb37:	jne    0x6401fb46
6401fb39:	mov    ecx,DWORD PTR [ebp+0xc]
6401fb3c:	mov    edx,DWORD PTR [ebp-0x1c]
6401fb3f:	mov    DWORD PTR [ecx+0x4],ebx
6401fb42:	mov    DWORD PTR [ecx],edx
6401fb44:	jmp    0x6401fb50
6401fb46:	cmp    ecx,0x20
6401fb49:	jne    0x6401fb50
6401fb4b:	mov    ecx,DWORD PTR [ebp+0xc]
6401fb4e:	mov    DWORD PTR [ecx],ebx
6401fb50:	pop    edi
6401fb51:	pop    ebx
6401fb52:	leave  
6401fb53:	ret    
6401fb54:	push   ebp
6401fb55:	mov    ebp,esp
6401fb57:	sub    esp,0x10
6401fb5a:	mov    eax,ds:0x640521ac
6401fb5f:	xor    eax,ebp
6401fb61:	mov    DWORD PTR [ebp-0x4],eax
6401fb64:	cmp    DWORD PTR [ebp+0x14],0xffffffff
6401fb68:	push   ebx
6401fb69:	push   esi
6401fb6a:	push   edi
6401fb6b:	jge    0x6401fb74
6401fb6d:	xor    eax,eax
6401fb6f:	jmp    0x6401fd66
6401fb74:	mov    eax,ds:0x64054400
6401fb79:	mov    esi,DWORD PTR ds:0x6402c138
6401fb7f:	xor    ebx,ebx
6401fb81:	xor    edi,edi
6401fb83:	inc    ebx
6401fb84:	cmp    eax,edi
6401fb86:	jne    0x6401fbbb
6401fb88:	lea    eax,[ebp-0x8]
6401fb8b:	push   eax
6401fb8c:	push   ebx
6401fb8d:	push   0x64041d78
6401fb92:	push   ebx
6401fb93:	call   esi
6401fb95:	test   eax,eax
6401fb97:	je     0x6401fba1
6401fb99:	mov    DWORD PTR ds:0x64054400,ebx
6401fb9f:	jmp    0x6401fbbf
6401fba1:	call   DWORD PTR ds:0x6402c06c
6401fba7:	cmp    eax,0x78
6401fbaa:	jne    0x6401fbb6
6401fbac:	push   0x2
6401fbae:	pop    eax
6401fbaf:	mov    ds:0x64054400,eax
6401fbb4:	jmp    0x6401fbbb
6401fbb6:	mov    eax,ds:0x64054400
6401fbbb:	cmp    eax,ebx
6401fbbd:	jne    0x6401fbd2
6401fbbf:	push   DWORD PTR [ebp+0x18]
6401fbc2:	push   DWORD PTR [ebp+0x14]
6401fbc5:	push   DWORD PTR [ebp+0x10]
6401fbc8:	push   DWORD PTR [ebp+0xc]
6401fbcb:	call   esi
6401fbcd:	jmp    0x6401fd66
6401fbd2:	cmp    eax,0x2
6401fbd5:	je     0x6401fbdb
6401fbd7:	cmp    eax,edi
6401fbd9:	jne    0x6401fb6d
6401fbdb:	cmp    DWORD PTR [ebp+0x20],edi
6401fbde:	mov    DWORD PTR [ebp-0xc],edi
6401fbe1:	jne    0x6401fbee
6401fbe3:	mov    eax,DWORD PTR [ebp+0x8]
6401fbe6:	mov    eax,DWORD PTR [eax]
6401fbe8:	mov    eax,DWORD PTR [eax+0x14]
6401fbeb:	mov    DWORD PTR [ebp+0x20],eax
6401fbee:	cmp    DWORD PTR [ebp+0x1c],edi
6401fbf1:	jne    0x6401fbfe
6401fbf3:	mov    eax,DWORD PTR [ebp+0x8]
6401fbf6:	mov    eax,DWORD PTR [eax]
6401fbf8:	mov    eax,DWORD PTR [eax+0x4]
6401fbfb:	mov    DWORD PTR [ebp+0x1c],eax
6401fbfe:	push   DWORD PTR [ebp+0x20]
6401fc01:	call   0x6401e2e0
6401fc06:	cmp    DWORD PTR [ebp+0x1c],eax
6401fc09:	pop    ecx
6401fc0a:	je     0x6401fc14
6401fc0c:	cmp    eax,0xffffffff
6401fc0f:	je     0x6401fc14
6401fc11:	mov    DWORD PTR [ebp+0x1c],eax
6401fc14:	mov    ebx,DWORD PTR ds:0x6402c014
6401fc1a:	push   edi
6401fc1b:	push   edi
6401fc1c:	push   edi
6401fc1d:	push   edi
6401fc1e:	push   DWORD PTR [ebp+0x14]
6401fc21:	push   DWORD PTR [ebp+0x10]
6401fc24:	push   edi
6401fc25:	push   DWORD PTR [ebp+0x1c]
6401fc28:	call   ebx
6401fc2a:	mov    esi,eax
6401fc2c:	cmp    esi,edi
6401fc2e:	mov    DWORD PTR [ebp-0x10],esi
6401fc31:	je     0x6401fb6d
6401fc37:	jle    0x6401fc74
6401fc39:	cmp    esi,0xffffffe0
6401fc3c:	ja     0x6401fc74
6401fc3e:	lea    eax,[esi+0x8]
6401fc41:	cmp    eax,0x400
6401fc46:	ja     0x6401fc5b
6401fc48:	call   0x64013cc0
6401fc4d:	mov    eax,esp
6401fc4f:	cmp    eax,edi
6401fc51:	je     0x6401fc6f
6401fc53:	mov    DWORD PTR [eax],0xcccc
6401fc59:	jmp    0x6401fc6c
6401fc5b:	push   eax
6401fc5c:	call   0x6401485e
6401fc61:	cmp    eax,edi
6401fc63:	pop    ecx
6401fc64:	je     0x6401fc6f
6401fc66:	mov    DWORD PTR [eax],0xdddd
6401fc6c:	add    eax,0x8
6401fc6f:	mov    DWORD PTR [ebp-0x8],eax
6401fc72:	jmp    0x6401fc77
6401fc74:	mov    DWORD PTR [ebp-0x8],edi
6401fc77:	cmp    DWORD PTR [ebp-0x8],edi
6401fc7a:	je     0x6401fb6d
6401fc80:	push   esi
6401fc81:	push   edi
6401fc82:	push   DWORD PTR [ebp-0x8]
6401fc85:	call   0x64015100
6401fc8a:	add    esp,0xc
6401fc8d:	push   edi
6401fc8e:	push   edi
6401fc8f:	push   esi
6401fc90:	push   DWORD PTR [ebp-0x8]
6401fc93:	push   DWORD PTR [ebp+0x14]
6401fc96:	push   DWORD PTR [ebp+0x10]
6401fc99:	push   edi
6401fc9a:	push   DWORD PTR [ebp+0x1c]
6401fc9d:	call   ebx
6401fc9f:	test   eax,eax
6401fca1:	je     0x6401fd5a
6401fca7:	lea    eax,[esi+0x1]
6401fcaa:	cmp    eax,edi
6401fcac:	jle    0x6401fcf2
6401fcae:	cmp    eax,0x7ffffff0
6401fcb3:	ja     0x6401fcf2
6401fcb5:	lea    eax,[esi+esi*1+0xa]
6401fcb9:	cmp    eax,0x400
6401fcbe:	ja     0x6401fcda
6401fcc0:	call   0x64013cc0
6401fcc5:	mov    ebx,esp
6401fcc7:	cmp    ebx,edi
6401fcc9:	je     0x6401fd5a
6401fccf:	mov    DWORD PTR [ebx],0xcccc
6401fcd5:	add    ebx,0x8
6401fcd8:	jmp    0x6401fcf4
6401fcda:	push   eax
6401fcdb:	call   0x6401485e
6401fce0:	cmp    eax,edi
6401fce2:	pop    ecx
6401fce3:	je     0x6401fcee
6401fce5:	mov    DWORD PTR [eax],0xdddd
6401fceb:	add    eax,0x8
6401fcee:	mov    ebx,eax
6401fcf0:	jmp    0x6401fcf4
6401fcf2:	xor    ebx,ebx
6401fcf4:	cmp    ebx,edi
6401fcf6:	je     0x6401fd5a
6401fcf8:	cmp    DWORD PTR [ebp+0x20],edi
6401fcfb:	jne    0x6401fd08
6401fcfd:	mov    eax,DWORD PTR [ebp+0x8]
6401fd00:	mov    eax,DWORD PTR [eax]
6401fd02:	mov    eax,DWORD PTR [eax+0x14]
6401fd05:	mov    DWORD PTR [ebp+0x20],eax
6401fd08:	mov    edi,DWORD PTR [ebp+0x14]
6401fd0b:	push   ebx
6401fd0c:	push   DWORD PTR [ebp-0x10]
6401fd0f:	add    edi,edi
6401fd11:	push   DWORD PTR [ebp-0x8]
6401fd14:	lea    esi,[edi+ebx*1]
6401fd17:	push   DWORD PTR [ebp+0xc]
6401fd1a:	or     WORD PTR [esi],0xffff
6401fd1f:	push   DWORD PTR [ebp+0x20]
6401fd22:	or     WORD PTR [esi-0x2],0xffff
6401fd28:	call   DWORD PTR ds:0x6402c134
6401fd2e:	cmp    WORD PTR [esi-0x2],0xffff
6401fd34:	mov    DWORD PTR [ebp-0xc],eax
6401fd37:	je     0x6401fd4f
6401fd39:	cmp    WORD PTR [esi],0xffff
6401fd3e:	jne    0x6401fd4f
6401fd40:	push   edi
6401fd41:	push   ebx
6401fd42:	push   DWORD PTR [ebp+0x18]
6401fd45:	call   0x640166b0
6401fd4a:	add    esp,0xc
6401fd4d:	jmp    0x6401fd53
6401fd4f:	and    DWORD PTR [ebp-0xc],0x0
6401fd53:	push   ebx
6401fd54:	call   0x640142aa
6401fd59:	pop    ecx
6401fd5a:	push   DWORD PTR [ebp-0x8]
6401fd5d:	call   0x640142aa
6401fd62:	mov    eax,DWORD PTR [ebp-0xc]
6401fd65:	pop    ecx
6401fd66:	lea    esp,[ebp-0x1c]
6401fd69:	pop    edi
6401fd6a:	pop    esi
6401fd6b:	pop    ebx
6401fd6c:	mov    ecx,DWORD PTR [ebp-0x4]
6401fd6f:	xor    ecx,ebp
6401fd71:	call   0x64013ca6
6401fd76:	leave  
6401fd77:	ret    
6401fd78:	push   ebp
6401fd79:	mov    ebp,esp
6401fd7b:	sub    esp,0x10
6401fd7e:	push   DWORD PTR [ebp+0x8]
6401fd81:	lea    ecx,[ebp-0x10]
6401fd84:	call   0x640142c5
6401fd89:	push   DWORD PTR [ebp+0x20]
6401fd8c:	lea    eax,[ebp-0x10]
6401fd8f:	push   DWORD PTR [ebp+0x1c]
6401fd92:	push   DWORD PTR [ebp+0x18]
6401fd95:	push   DWORD PTR [ebp+0x14]
6401fd98:	push   DWORD PTR [ebp+0x10]
6401fd9b:	push   DWORD PTR [ebp+0xc]
6401fd9e:	push   eax
6401fd9f:	call   0x6401fb54
6401fda4:	add    esp,0x1c
6401fda7:	cmp    BYTE PTR [ebp-0x4],0x0
6401fdab:	je     0x6401fdb4
6401fdad:	mov    ecx,DWORD PTR [ebp-0x8]
6401fdb0:	and    DWORD PTR [ecx+0x70],0xfffffffd
6401fdb4:	leave  
6401fdb5:	ret    
6401fdb6:	push   ebp
6401fdb7:	mov    ebp,esp
6401fdb9:	sub    esp,0x10
6401fdbc:	push   esi
6401fdbd:	push   DWORD PTR [ebp+0xc]
6401fdc0:	lea    ecx,[ebp-0x10]
6401fdc3:	call   0x640142c5
6401fdc8:	mov    esi,DWORD PTR [ebp+0x8]
6401fdcb:	movsx  eax,BYTE PTR [esi]
6401fdce:	push   eax
6401fdcf:	call   0x64014d6c
6401fdd4:	cmp    eax,0x65
6401fdd7:	jmp    0x6401fde5
6401fdd9:	inc    esi
6401fdda:	movzx  eax,BYTE PTR [esi]
6401fddd:	push   eax
6401fdde:	call   0x64014736
6401fde3:	test   eax,eax
6401fde5:	pop    ecx
6401fde6:	jne    0x6401fdd9
6401fde8:	movsx  eax,BYTE PTR [esi]
6401fdeb:	push   eax
6401fdec:	call   0x64014d6c
6401fdf1:	cmp    eax,0x78
6401fdf4:	pop    ecx
6401fdf5:	jne    0x6401fdf9
6401fdf7:	inc    esi
6401fdf8:	inc    esi
6401fdf9:	mov    ecx,DWORD PTR [ebp-0x10]
6401fdfc:	mov    ecx,DWORD PTR [ecx+0xbc]
6401fe02:	mov    ecx,DWORD PTR [ecx]
6401fe04:	mov    al,BYTE PTR [esi]
6401fe06:	mov    cl,BYTE PTR [ecx]
6401fe08:	mov    BYTE PTR [esi],cl
6401fe0a:	inc    esi
6401fe0b:	mov    cl,BYTE PTR [esi]
6401fe0d:	mov    BYTE PTR [esi],al
6401fe0f:	mov    al,cl
6401fe11:	mov    cl,BYTE PTR [esi]
6401fe13:	inc    esi
6401fe14:	test   cl,cl
6401fe16:	jne    0x6401fe0b
6401fe18:	cmp    BYTE PTR [ebp-0x4],cl
6401fe1b:	pop    esi
6401fe1c:	je     0x6401fe25
6401fe1e:	mov    eax,DWORD PTR [ebp-0x8]
6401fe21:	and    DWORD PTR [eax+0x70],0xfffffffd
6401fe25:	leave  
6401fe26:	ret    
6401fe27:	push   ebp
6401fe28:	mov    ebp,esp
6401fe2a:	sub    esp,0x10
6401fe2d:	push   esi
6401fe2e:	push   DWORD PTR [ebp+0xc]
6401fe31:	lea    ecx,[ebp-0x10]
6401fe34:	call   0x640142c5
6401fe39:	mov    eax,DWORD PTR [ebp+0x8]
6401fe3c:	mov    cl,BYTE PTR [eax]
6401fe3e:	test   cl,cl
6401fe40:	mov    esi,DWORD PTR [ebp-0x10]
6401fe43:	je     0x6401fe5a
6401fe45:	mov    edx,DWORD PTR [esi+0xbc]
6401fe4b:	mov    edx,DWORD PTR [edx]
6401fe4d:	mov    dl,BYTE PTR [edx]
6401fe4f:	cmp    cl,dl
6401fe51:	je     0x6401fe5a
6401fe53:	inc    eax
6401fe54:	mov    cl,BYTE PTR [eax]
6401fe56:	test   cl,cl
6401fe58:	jne    0x6401fe4f
6401fe5a:	mov    cl,BYTE PTR [eax]
6401fe5c:	inc    eax
6401fe5d:	test   cl,cl
6401fe5f:	je     0x6401fe97
6401fe61:	jmp    0x6401fe6e
6401fe63:	cmp    cl,0x65
6401fe66:	je     0x6401fe74
6401fe68:	cmp    cl,0x45
6401fe6b:	je     0x6401fe74
6401fe6d:	inc    eax
6401fe6e:	mov    cl,BYTE PTR [eax]
6401fe70:	test   cl,cl
6401fe72:	jne    0x6401fe63
6401fe74:	mov    edx,eax
6401fe76:	dec    eax
6401fe77:	cmp    BYTE PTR [eax],0x30
6401fe7a:	je     0x6401fe76
6401fe7c:	mov    ecx,DWORD PTR [esi+0xbc]
6401fe82:	mov    ecx,DWORD PTR [ecx]
6401fe84:	push   ebx
6401fe85:	mov    bl,BYTE PTR [eax]
6401fe87:	cmp    bl,BYTE PTR [ecx]
6401fe89:	pop    ebx
6401fe8a:	jne    0x6401fe8d
6401fe8c:	dec    eax
6401fe8d:	mov    cl,BYTE PTR [edx]
6401fe8f:	inc    eax
6401fe90:	inc    edx
6401fe91:	test   cl,cl
6401fe93:	mov    BYTE PTR [eax],cl
6401fe95:	jne    0x6401fe8d
6401fe97:	cmp    BYTE PTR [ebp-0x4],0x0
6401fe9b:	pop    esi
6401fe9c:	je     0x6401fea5
6401fe9e:	mov    eax,DWORD PTR [ebp-0x8]
6401fea1:	and    DWORD PTR [eax+0x70],0xfffffffd
6401fea5:	leave  
6401fea6:	ret    
6401fea7:	fldz   
6401fea9:	mov    eax,DWORD PTR [esp+0x4]
6401fead:	fcomp  QWORD PTR [eax]
6401feaf:	fnstsw ax
6401feb1:	test   ah,0x41
6401feb4:	jp     0x6401feba
6401feb6:	xor    eax,eax
6401feb8:	inc    eax
6401feb9:	ret    
6401feba:	xor    eax,eax
6401febc:	ret    
6401febd:	push   ebp
6401febe:	mov    ebp,esp
6401fec0:	push   ecx
6401fec1:	push   ecx
6401fec2:	cmp    DWORD PTR [ebp+0x8],0x0
6401fec6:	push   DWORD PTR [ebp+0x14]
6401fec9:	push   DWORD PTR [ebp+0x10]
6401fecc:	je     0x6401fee7
6401fece:	lea    eax,[ebp-0x8]
6401fed1:	push   eax
6401fed2:	call   0x64021195
6401fed7:	mov    ecx,DWORD PTR [ebp-0x8]
6401feda:	mov    eax,DWORD PTR [ebp+0xc]
6401fedd:	mov    DWORD PTR [eax],ecx
6401fedf:	mov    ecx,DWORD PTR [ebp-0x4]
6401fee2:	mov    DWORD PTR [eax+0x4],ecx
6401fee5:	jmp    0x6401fef8
6401fee7:	lea    eax,[ebp+0x8]
6401feea:	push   eax
6401feeb:	call   0x6402123b
6401fef0:	mov    eax,DWORD PTR [ebp+0xc]
6401fef3:	mov    ecx,DWORD PTR [ebp+0x8]
6401fef6:	mov    DWORD PTR [eax],ecx
6401fef8:	add    esp,0xc
6401fefb:	leave  
6401fefc:	ret    
6401fefd:	push   0x0
6401feff:	push   DWORD PTR [esp+0x10]
6401ff03:	push   DWORD PTR [esp+0x10]
6401ff07:	push   DWORD PTR [esp+0x10]
6401ff0b:	call   0x6401febd
6401ff10:	add    esp,0x10
6401ff13:	ret    
6401ff14:	test   edi,edi
6401ff16:	push   esi
6401ff17:	mov    esi,eax
6401ff19:	je     0x6401ff2f
6401ff1b:	push   esi
6401ff1c:	call   0x64015aa0
6401ff21:	inc    eax
6401ff22:	push   eax
6401ff23:	push   esi
6401ff24:	add    esi,edi
6401ff26:	push   esi
6401ff27:	call   0x640166b0
6401ff2c:	add    esp,0x10
6401ff2f:	pop    esi
6401ff30:	ret    
6401ff31:	push   0x0
6401ff33:	push   DWORD PTR [esp+0x8]
6401ff37:	call   0x6401fdb6
6401ff3c:	pop    ecx
6401ff3d:	pop    ecx
6401ff3e:	ret    
6401ff3f:	push   0x0
6401ff41:	push   DWORD PTR [esp+0x8]
6401ff45:	call   0x6401fe27
6401ff4a:	pop    ecx
6401ff4b:	pop    ecx
6401ff4c:	ret    
6401ff4d:	push   ebp
6401ff4e:	mov    ebp,esp
6401ff50:	sub    esp,0x10
6401ff53:	push   ebx
6401ff54:	push   esi
6401ff55:	push   edi
6401ff56:	push   DWORD PTR [ebp+0x1c]
6401ff59:	lea    ecx,[ebp-0x10]
6401ff5c:	mov    ebx,eax
6401ff5e:	call   0x640142c5
6401ff63:	xor    esi,esi
6401ff65:	cmp    ebx,esi
6401ff67:	jne    0x6401ff94
6401ff69:	call   0x64016663
6401ff6e:	push   0x16
6401ff70:	pop    edi
6401ff71:	push   esi
6401ff72:	push   esi
6401ff73:	push   esi
6401ff74:	push   esi
6401ff75:	push   esi
6401ff76:	mov    DWORD PTR [eax],edi
6401ff78:	call   0x64013df2
6401ff7d:	add    esp,0x14
6401ff80:	cmp    BYTE PTR [ebp-0x4],0x0
6401ff84:	je     0x6401ff8d
6401ff86:	mov    eax,DWORD PTR [ebp-0x8]
6401ff89:	and    DWORD PTR [eax+0x70],0xfffffffd
6401ff8d:	mov    eax,edi
6401ff8f:	jmp    0x640200b5
6401ff94:	cmp    DWORD PTR [ebp+0x8],esi
6401ff97:	jbe    0x6401ff69
6401ff99:	cmp    DWORD PTR [ebp+0xc],esi
6401ff9c:	jle    0x6401ffa3
6401ff9e:	mov    eax,DWORD PTR [ebp+0xc]
6401ffa1:	jmp    0x6401ffa5
6401ffa3:	xor    eax,eax
6401ffa5:	add    eax,0x9
6401ffa8:	cmp    DWORD PTR [ebp+0x8],eax
6401ffab:	ja     0x6401ffb6
6401ffad:	call   0x64016663
6401ffb2:	push   0x22
6401ffb4:	jmp    0x6401ff70
6401ffb6:	cmp    BYTE PTR [ebp+0x18],0x0
6401ffba:	je     0x6401ffda
6401ffbc:	mov    edx,DWORD PTR [ebp+0x14]
6401ffbf:	xor    eax,eax
6401ffc1:	cmp    DWORD PTR [ebp+0xc],esi
6401ffc4:	setg   al
6401ffc7:	xor    ecx,ecx
6401ffc9:	cmp    DWORD PTR [edx],0x2d
6401ffcc:	sete   cl
6401ffcf:	mov    edi,eax
6401ffd1:	add    ecx,ebx
6401ffd3:	mov    eax,ecx
6401ffd5:	call   0x6401ff14
6401ffda:	mov    edi,DWORD PTR [ebp+0x14]
6401ffdd:	cmp    DWORD PTR [edi],0x2d
6401ffe0:	mov    esi,ebx
6401ffe2:	jne    0x6401ffea
6401ffe4:	mov    BYTE PTR [ebx],0x2d
6401ffe7:	lea    esi,[ebx+0x1]
6401ffea:	cmp    DWORD PTR [ebp+0xc],0x0
6401ffee:	jle    0x64020008
6401fff0:	lea    eax,[esi+0x1]
6401fff3:	mov    cl,BYTE PTR [eax]
6401fff5:	mov    BYTE PTR [esi],cl
6401fff7:	mov    esi,eax
6401fff9:	mov    eax,DWORD PTR [ebp-0x10]
6401fffc:	mov    eax,DWORD PTR [eax+0xbc]
64020002:	mov    eax,DWORD PTR [eax]
64020004:	mov    al,BYTE PTR [eax]
64020006:	mov    BYTE PTR [esi],al
64020008:	xor    eax,eax
6402000a:	cmp    BYTE PTR [ebp+0x18],al
6402000d:	sete   al
64020010:	add    eax,DWORD PTR [ebp+0xc]
64020013:	add    esi,eax
64020015:	cmp    DWORD PTR [ebp+0x8],0xffffffff
64020019:	jne    0x64020020
6402001b:	or     ebx,0xffffffff
6402001e:	jmp    0x64020025
64020020:	sub    ebx,esi
64020022:	add    ebx,DWORD PTR [ebp+0x8]
64020025:	push   0x640418e8
6402002a:	push   ebx
6402002b:	push   esi
6402002c:	call   0x640164bd
64020031:	add    esp,0xc
64020034:	xor    ebx,ebx
64020036:	test   eax,eax
64020038:	je     0x64020047
6402003a:	push   ebx
6402003b:	push   ebx
6402003c:	push   ebx
6402003d:	push   ebx
6402003e:	push   ebx
6402003f:	call   0x64013cf6
64020044:	add    esp,0x14
64020047:	cmp    DWORD PTR [ebp+0x10],ebx
6402004a:	lea    ecx,[esi+0x2]
6402004d:	je     0x64020052
6402004f:	mov    BYTE PTR [esi],0x45
64020052:	mov    eax,DWORD PTR [edi+0xc]
64020055:	inc    esi
64020056:	cmp    BYTE PTR [eax],0x30
64020059:	je     0x64020089
6402005b:	mov    eax,DWORD PTR [edi+0x4]
6402005e:	dec    eax
6402005f:	jns    0x64020066
64020061:	neg    eax
64020063:	mov    BYTE PTR [esi],0x2d
64020066:	inc    esi
64020067:	cmp    eax,0x64
6402006a:	jl     0x64020076
6402006c:	cdq    
6402006d:	push   0x64
6402006f:	pop    edi
64020070:	idiv   edi
64020072:	add    BYTE PTR [esi],al
64020074:	mov    eax,edx
64020076:	inc    esi
64020077:	cmp    eax,0xa
6402007a:	jl     0x64020086
6402007c:	cdq    
6402007d:	push   0xa
6402007f:	pop    edi
64020080:	idiv   edi
64020082:	add    BYTE PTR [esi],al
64020084:	mov    eax,edx
64020086:	add    BYTE PTR [esi+0x1],al
64020089:	test   BYTE PTR ds:0x640544cc,0x1
64020090:	je     0x640200a6
64020092:	cmp    BYTE PTR [ecx],0x30
64020095:	jne    0x640200a6
64020097:	push   0x3
64020099:	lea    eax,[ecx+0x1]
6402009c:	push   eax
6402009d:	push   ecx
6402009e:	call   0x640166b0
640200a3:	add    esp,0xc
640200a6:	cmp    BYTE PTR [ebp-0x4],0x0
640200aa:	je     0x640200b3
640200ac:	mov    eax,DWORD PTR [ebp-0x8]
640200af:	and    DWORD PTR [eax+0x70],0xfffffffd
640200b3:	xor    eax,eax
640200b5:	pop    edi
640200b6:	pop    esi
640200b7:	pop    ebx
640200b8:	leave  
640200b9:	ret    
640200ba:	push   ebp
640200bb:	mov    ebp,esp
640200bd:	sub    esp,0x2c
640200c0:	mov    eax,ds:0x640521ac
640200c5:	xor    eax,ebp
640200c7:	mov    DWORD PTR [ebp-0x4],eax
640200ca:	mov    eax,DWORD PTR [ebp+0x8]
640200cd:	push   ebx
640200ce:	push   esi
640200cf:	push   edi
640200d0:	mov    edi,DWORD PTR [ebp+0xc]
640200d3:	push   0x16
640200d5:	pop    esi
640200d6:	push   esi
640200d7:	lea    ecx,[ebp-0x1c]
640200da:	push   ecx
640200db:	lea    ecx,[ebp-0x2c]
640200de:	push   ecx
640200df:	push   DWORD PTR [eax+0x4]
640200e2:	push   DWORD PTR [eax]
640200e4:	call   0x64021459
640200e9:	xor    ebx,ebx
640200eb:	add    esp,0x14
640200ee:	cmp    edi,ebx
640200f0:	jne    0x6402010a
640200f2:	call   0x64016663
640200f7:	push   ebx
640200f8:	push   ebx
640200f9:	push   ebx
640200fa:	push   ebx
640200fb:	push   ebx
640200fc:	mov    DWORD PTR [eax],esi
640200fe:	call   0x64013df2
64020103:	add    esp,0x14
64020106:	mov    eax,esi
64020108:	jmp    0x64020179
6402010a:	mov    eax,DWORD PTR [ebp+0x10]
6402010d:	cmp    eax,ebx
6402010f:	jbe    0x640200f2
64020111:	cmp    eax,0xffffffff
64020114:	mov    esi,DWORD PTR [ebp+0x14]
64020117:	jne    0x6402011e
64020119:	or     eax,0xffffffff
6402011c:	jmp    0x64020132
6402011e:	xor    ecx,ecx
64020120:	cmp    DWORD PTR [ebp-0x2c],0x2d
64020124:	sete   cl
64020127:	sub    eax,ecx
64020129:	xor    ecx,ecx
6402012b:	cmp    esi,ebx
6402012d:	setg   cl
64020130:	sub    eax,ecx
64020132:	lea    ecx,[ebp-0x2c]
64020135:	push   ecx
64020136:	lea    ecx,[esi+0x1]
64020139:	push   ecx
6402013a:	push   eax
6402013b:	xor    eax,eax
6402013d:	cmp    DWORD PTR [ebp-0x2c],0x2d
64020141:	sete   al
64020144:	xor    ecx,ecx
64020146:	cmp    esi,ebx
64020148:	setg   cl
6402014b:	add    eax,edi
6402014d:	add    ecx,eax
6402014f:	push   ecx
64020150:	call   0x640212e1
64020155:	add    esp,0x10
64020158:	cmp    eax,ebx
6402015a:	je     0x64020160
6402015c:	mov    BYTE PTR [edi],bl
6402015e:	jmp    0x64020179
64020160:	push   DWORD PTR [ebp+0x1c]
64020163:	lea    eax,[ebp-0x2c]
64020166:	push   ebx
64020167:	push   eax
64020168:	push   DWORD PTR [ebp+0x18]
6402016b:	mov    eax,edi
6402016d:	push   esi
6402016e:	push   DWORD PTR [ebp+0x10]
64020171:	call   0x6401ff4d
64020176:	add    esp,0x18
64020179:	mov    ecx,DWORD PTR [ebp-0x4]
6402017c:	pop    edi
6402017d:	pop    esi
6402017e:	xor    ecx,ebp
64020180:	pop    ebx
64020181:	call   0x64013ca6
64020186:	leave  
64020187:	ret    
64020188:	push   ebp
64020189:	mov    ebp,esp
6402018b:	push   0x0
6402018d:	push   DWORD PTR [ebp+0x18]
64020190:	push   DWORD PTR [ebp+0x14]
64020193:	push   DWORD PTR [ebp+0x10]
64020196:	push   DWORD PTR [ebp+0xc]
64020199:	push   DWORD PTR [ebp+0x8]
6402019c:	call   0x640200ba
640201a1:	add    esp,0x18
640201a4:	pop    ebp
640201a5:	ret    
640201a6:	push   ebp
640201a7:	mov    ebp,esp
640201a9:	sub    esp,0x24
640201ac:	push   esi
640201ad:	push   edi
640201ae:	push   DWORD PTR [ebp+0x1c]
640201b1:	lea    ecx,[ebp-0x24]
640201b4:	mov    DWORD PTR [ebp-0x14],0x3ff
640201bb:	xor    edi,edi
640201bd:	mov    DWORD PTR [ebp-0x4],0x30
640201c4:	call   0x640142c5
640201c9:	cmp    DWORD PTR [ebp+0x14],edi
640201cc:	jge    0x640201d1
640201ce:	mov    DWORD PTR [ebp+0x14],edi
640201d1:	mov    esi,DWORD PTR [ebp+0xc]
640201d4:	cmp    esi,edi
640201d6:	jne    0x64020203
640201d8:	call   0x64016663
640201dd:	push   0x16
640201df:	pop    esi
640201e0:	push   edi
640201e1:	push   edi
640201e2:	push   edi
640201e3:	push   edi
640201e4:	push   edi
640201e5:	mov    DWORD PTR [eax],esi
640201e7:	call   0x64013df2
640201ec:	add    esp,0x14
640201ef:	cmp    BYTE PTR [ebp-0x18],0x0
640201f3:	je     0x640201fc
640201f5:	mov    eax,DWORD PTR [ebp-0x1c]
640201f8:	and    DWORD PTR [eax+0x70],0xfffffffd
640201fc:	mov    eax,esi
640201fe:	jmp    0x64020513
64020203:	cmp    DWORD PTR [ebp+0x10],edi
64020206:	jbe    0x640201d8
64020208:	mov    eax,DWORD PTR [ebp+0x14]
6402020b:	add    eax,0xb
6402020e:	cmp    DWORD PTR [ebp+0x10],eax
64020211:	mov    BYTE PTR [esi],0x0
64020214:	ja     0x6402021f
64020216:	call   0x64016663
6402021b:	push   0x22
6402021d:	jmp    0x640201df
6402021f:	mov    edi,DWORD PTR [ebp+0x8]
64020222:	mov    eax,DWORD PTR [edi]
64020224:	mov    DWORD PTR [ebp-0xc],eax
64020227:	mov    eax,DWORD PTR [edi+0x4]
6402022a:	mov    ecx,eax
6402022c:	shr    ecx,0x14
6402022f:	mov    edx,0x7ff
64020234:	push   ebx
64020235:	and    ecx,edx
64020237:	xor    ebx,ebx
64020239:	cmp    ecx,edx
6402023b:	jne    0x640202d1
64020241:	test   ebx,ebx
64020243:	jne    0x640202d1
64020249:	mov    eax,DWORD PTR [ebp+0x10]
6402024c:	cmp    eax,0xffffffff
6402024f:	jne    0x64020255
64020251:	or     eax,eax
64020253:	jmp    0x64020258
64020255:	add    eax,0xfffffffe
64020258:	push   0x0
6402025a:	push   DWORD PTR [ebp+0x14]
6402025d:	lea    ebx,[esi+0x2]
64020260:	push   eax
64020261:	push   ebx
64020262:	push   edi
64020263:	call   0x64020188
64020268:	add    esp,0x14
6402026b:	test   eax,eax
6402026d:	je     0x64020288
6402026f:	cmp    BYTE PTR [ebp-0x18],0x0
64020273:	mov    BYTE PTR [esi],0x0
64020276:	je     0x64020512
6402027c:	mov    ecx,DWORD PTR [ebp-0x1c]
6402027f:	and    DWORD PTR [ecx+0x70],0xfffffffd
64020283:	jmp    0x64020512
64020288:	cmp    BYTE PTR [ebx],0x2d
6402028b:	jne    0x64020291
6402028d:	mov    BYTE PTR [esi],0x2d
64020290:	inc    esi
64020291:	mov    BYTE PTR [esi],0x30
64020294:	inc    esi
64020295:	cmp    DWORD PTR [ebp+0x18],0x0
64020299:	push   0x65
6402029b:	sete   al
6402029e:	dec    al
640202a0:	and    al,0xe0
640202a2:	add    al,0x78
640202a4:	mov    BYTE PTR [esi],al
640202a6:	inc    esi
640202a7:	push   esi
640202a8:	call   0x6401bf60
640202ad:	test   eax,eax
640202af:	pop    ecx
640202b0:	pop    ecx
640202b1:	je     0x64020503
640202b7:	cmp    DWORD PTR [ebp+0x18],0x0
640202bb:	sete   cl
640202be:	dec    cl
640202c0:	and    cl,0xe0
640202c3:	add    cl,0x70
640202c6:	mov    BYTE PTR [eax],cl
640202c8:	mov    BYTE PTR [eax+0x3],0x0
640202cc:	jmp    0x64020503
640202d1:	and    eax,0x80000000
640202d6:	xor    ecx,ecx
640202d8:	or     ecx,eax
640202da:	je     0x640202e0
640202dc:	mov    BYTE PTR [esi],0x2d
640202df:	inc    esi
640202e0:	mov    ebx,DWORD PTR [ebp+0x18]
640202e3:	mov    BYTE PTR [esi],0x30
640202e6:	inc    esi
640202e7:	test   ebx,ebx
640202e9:	sete   al
640202ec:	dec    al
640202ee:	and    al,0xe0
640202f0:	add    al,0x78
640202f2:	mov    BYTE PTR [esi],al
640202f4:	mov    ecx,DWORD PTR [edi+0x4]
640202f7:	inc    esi
640202f8:	neg    ebx
640202fa:	sbb    ebx,ebx
640202fc:	and    ebx,0xffffffe0
640202ff:	and    ecx,0x7ff00000
64020305:	xor    eax,eax
64020307:	add    ebx,0x27
6402030a:	xor    edx,edx
6402030c:	or     eax,ecx
6402030e:	jne    0x64020331
64020310:	mov    BYTE PTR [esi],0x30
64020313:	mov    ecx,DWORD PTR [edi+0x4]
64020316:	mov    eax,DWORD PTR [edi]
64020318:	and    ecx,0xfffff
6402031e:	inc    esi
6402031f:	or     eax,ecx
64020321:	jne    0x64020328
64020323:	mov    DWORD PTR [ebp-0x14],edx
64020326:	jmp    0x64020335
64020328:	mov    DWORD PTR [ebp-0x14],0x3fe
6402032f:	jmp    0x64020335
64020331:	mov    BYTE PTR [esi],0x31
64020334:	inc    esi
64020335:	mov    eax,esi
64020337:	inc    esi
64020338:	cmp    DWORD PTR [ebp+0x14],edx
6402033b:	mov    DWORD PTR [ebp+0xc],eax
6402033e:	jne    0x64020344
64020340:	mov    BYTE PTR [eax],dl
64020342:	jmp    0x64020353
64020344:	mov    ecx,DWORD PTR [ebp-0x24]
64020347:	mov    ecx,DWORD PTR [ecx+0xbc]
6402034d:	mov    ecx,DWORD PTR [ecx]
6402034f:	mov    cl,BYTE PTR [ecx]
64020351:	mov    BYTE PTR [eax],cl
64020353:	mov    ecx,DWORD PTR [edi+0x4]
64020356:	mov    eax,DWORD PTR [edi]
64020358:	and    ecx,0xfffff
6402035e:	mov    DWORD PTR [ebp-0x8],ecx
64020361:	ja     0x6402036b
64020363:	cmp    eax,edx
64020365:	jbe    0x64020420
6402036b:	mov    DWORD PTR [ebp-0xc],edx
6402036e:	mov    DWORD PTR [ebp-0x8],0xf0000
64020375:	cmp    DWORD PTR [ebp+0x14],0x0
64020379:	jle    0x640203c8
6402037b:	mov    edx,DWORD PTR [edi+0x4]
6402037e:	and    edx,DWORD PTR [ebp-0x8]
64020381:	mov    eax,DWORD PTR [edi]
64020383:	movsx  ecx,WORD PTR [ebp-0x4]
64020387:	and    eax,DWORD PTR [ebp-0xc]
6402038a:	and    edx,0xfffff
64020390:	call   0x640154f0
64020395:	add    ax,0x30
64020399:	movzx  eax,ax
6402039c:	cmp    ax,0x39
640203a0:	jbe    0x640203a4
640203a2:	add    eax,ebx
640203a4:	mov    ecx,DWORD PTR [ebp-0x8]
640203a7:	sub    DWORD PTR [ebp-0x4],0x4
640203ab:	mov    BYTE PTR [esi],al
640203ad:	mov    eax,DWORD PTR [ebp-0xc]
640203b0:	shrd   eax,ecx,0x4
640203b4:	shr    ecx,0x4
640203b7:	inc    esi
640203b8:	dec    DWORD PTR [ebp+0x14]
640203bb:	cmp    WORD PTR [ebp-0x4],0x0
640203c0:	mov    DWORD PTR [ebp-0xc],eax
640203c3:	mov    DWORD PTR [ebp-0x8],ecx
640203c6:	jge    0x64020375
640203c8:	cmp    WORD PTR [ebp-0x4],0x0
640203cd:	jl     0x64020420
640203cf:	mov    edx,DWORD PTR [edi+0x4]
640203d2:	and    edx,DWORD PTR [ebp-0x8]
640203d5:	mov    eax,DWORD PTR [edi]
640203d7:	movsx  ecx,WORD PTR [ebp-0x4]
640203db:	and    eax,DWORD PTR [ebp-0xc]
640203de:	and    edx,0xfffff
640203e4:	call   0x640154f0
640203e9:	cmp    ax,0x8
640203ed:	jbe    0x64020420
640203ef:	lea    eax,[esi-0x1]
640203f2:	mov    cl,BYTE PTR [eax]
640203f4:	cmp    cl,0x66
640203f7:	je     0x640203fe
640203f9:	cmp    cl,0x46
640203fc:	jne    0x64020404
640203fe:	mov    BYTE PTR [eax],0x30
64020401:	dec    eax
64020402:	jmp    0x640203f2
64020404:	cmp    eax,DWORD PTR [ebp+0xc]
64020407:	je     0x6402041d
64020409:	mov    cl,BYTE PTR [eax]
6402040b:	cmp    cl,0x39
6402040e:	jne    0x64020417
64020410:	add    bl,0x3a
64020413:	mov    BYTE PTR [eax],bl
64020415:	jmp    0x64020420
64020417:	inc    cl
64020419:	mov    BYTE PTR [eax],cl
6402041b:	jmp    0x64020420
6402041d:	inc    BYTE PTR [eax-0x1]
64020420:	cmp    DWORD PTR [ebp+0x14],0x0
64020424:	jle    0x64020437
64020426:	push   DWORD PTR [ebp+0x14]
64020429:	push   0x30
6402042b:	push   esi
6402042c:	call   0x64015100
64020431:	add    esp,0xc
64020434:	add    esi,DWORD PTR [ebp+0x14]
64020437:	mov    eax,DWORD PTR [ebp+0xc]
6402043a:	cmp    BYTE PTR [eax],0x0
6402043d:	jne    0x64020441
6402043f:	mov    esi,eax
64020441:	cmp    DWORD PTR [ebp+0x18],0x0
64020445:	mov    cl,0x34
64020447:	sete   al
6402044a:	dec    al
6402044c:	and    al,0xe0
6402044e:	add    al,0x70
64020450:	mov    BYTE PTR [esi],al
64020452:	mov    eax,DWORD PTR [edi]
64020454:	mov    edx,DWORD PTR [edi+0x4]
64020457:	inc    esi
64020458:	call   0x640154f0
6402045d:	xor    ebx,ebx
6402045f:	and    eax,0x7ff
64020464:	and    edx,ebx
64020466:	sub    eax,DWORD PTR [ebp-0x14]
64020469:	push   ebx
6402046a:	pop    ecx
6402046b:	sbb    edx,ecx
6402046d:	js     0x6402047b
6402046f:	jg     0x64020475
64020471:	cmp    eax,ebx
64020473:	jb     0x6402047b
64020475:	mov    BYTE PTR [esi],0x2b
64020478:	inc    esi
64020479:	jmp    0x64020485
6402047b:	mov    BYTE PTR [esi],0x2d
6402047e:	inc    esi
6402047f:	neg    eax
64020481:	adc    edx,ebx
64020483:	neg    edx
64020485:	cmp    edx,ebx
64020487:	mov    edi,esi
64020489:	mov    BYTE PTR [esi],0x30
6402048c:	jl     0x640204b2
6402048e:	mov    ecx,0x3e8
64020493:	jg     0x64020499
64020495:	cmp    eax,ecx
64020497:	jb     0x640204b2
64020499:	push   ebx
6402049a:	push   ecx
6402049b:	push   edx
6402049c:	push   eax
6402049d:	call   0x640214f0
640204a2:	add    al,0x30
640204a4:	mov    BYTE PTR [esi],al
640204a6:	inc    esi
640204a7:	cmp    esi,edi
640204a9:	mov    DWORD PTR [ebp-0x10],edx
640204ac:	mov    eax,ecx
640204ae:	mov    edx,ebx
640204b0:	jne    0x640204bd
640204b2:	test   edx,edx
640204b4:	jl     0x640204d4
640204b6:	jg     0x640204bd
640204b8:	cmp    eax,0x64
640204bb:	jb     0x640204d4
640204bd:	push   0x0
640204bf:	push   0x64
640204c1:	push   edx
640204c2:	push   eax
640204c3:	call   0x640214f0
640204c8:	add    al,0x30
640204ca:	mov    BYTE PTR [esi],al
640204cc:	mov    DWORD PTR [ebp-0x10],edx
640204cf:	inc    esi
640204d0:	mov    eax,ecx
640204d2:	mov    edx,ebx
640204d4:	cmp    esi,edi
640204d6:	jne    0x640204e3
640204d8:	test   edx,edx
640204da:	jl     0x640204fb
640204dc:	jg     0x640204e3
640204de:	cmp    eax,0xa
640204e1:	jb     0x640204fb
640204e3:	push   0x0
640204e5:	push   0xa
640204e7:	push   edx
640204e8:	push   eax
640204e9:	call   0x640214f0
640204ee:	add    al,0x30
640204f0:	mov    BYTE PTR [esi],al
640204f2:	mov    DWORD PTR [ebp-0x10],edx
640204f5:	inc    esi
640204f6:	mov    eax,ecx
640204f8:	mov    DWORD PTR [ebp-0x10],ebx
640204fb:	add    al,0x30
640204fd:	mov    BYTE PTR [esi],al
640204ff:	mov    BYTE PTR [esi+0x1],0x0
64020503:	cmp    BYTE PTR [ebp-0x18],0x0
64020507:	je     0x64020510
64020509:	mov    eax,DWORD PTR [ebp-0x1c]
6402050c:	and    DWORD PTR [eax+0x70],0xfffffffd
64020510:	xor    eax,eax
64020512:	pop    ebx
64020513:	pop    edi
64020514:	pop    esi
64020515:	leave  
64020516:	ret    
64020517:	push   ebp
64020518:	mov    ebp,esp
6402051a:	sub    esp,0x10
6402051d:	push   ebx
6402051e:	push   esi
6402051f:	push   edi
64020520:	push   DWORD PTR [ebp+0x14]
64020523:	mov    ebx,eax
64020525:	mov    esi,DWORD PTR [ebx+0x4]
64020528:	mov    edi,ecx
6402052a:	lea    ecx,[ebp-0x10]
6402052d:	dec    esi
6402052e:	call   0x640142c5
64020533:	test   edi,edi
64020535:	jne    0x64020564
64020537:	call   0x64016663
6402053c:	push   0x16
6402053e:	pop    esi
6402053f:	mov    DWORD PTR [eax],esi
64020541:	xor    eax,eax
64020543:	push   eax
64020544:	push   eax
64020545:	push   eax
64020546:	push   eax
64020547:	push   eax
64020548:	call   0x64013df2
6402054d:	add    esp,0x14
64020550:	cmp    BYTE PTR [ebp-0x4],0x0
64020554:	je     0x6402055d
64020556:	mov    eax,DWORD PTR [ebp-0x8]
64020559:	and    DWORD PTR [eax+0x70],0xfffffffd
6402055d:	mov    eax,esi
6402055f:	jmp    0x64020607
64020564:	cmp    DWORD PTR [ebp+0x8],0x0
64020568:	jbe    0x64020537
6402056a:	cmp    BYTE PTR [ebp+0x10],0x0
6402056e:	je     0x64020588
64020570:	cmp    esi,DWORD PTR [ebp+0xc]
64020573:	jne    0x64020588
64020575:	xor    eax,eax
64020577:	cmp    DWORD PTR [ebx],0x2d
6402057a:	sete   al
6402057d:	add    eax,esi
6402057f:	add    eax,edi
64020581:	mov    BYTE PTR [eax],0x30
64020584:	mov    BYTE PTR [eax+0x1],0x0
64020588:	cmp    DWORD PTR [ebx],0x2d
6402058b:	mov    esi,edi
6402058d:	jne    0x64020595
6402058f:	mov    BYTE PTR [edi],0x2d
64020592:	lea    esi,[edi+0x1]
64020595:	mov    eax,DWORD PTR [ebx+0x4]
64020598:	xor    edi,edi
6402059a:	inc    edi
6402059b:	test   eax,eax
6402059d:	jg     0x640205ac
6402059f:	mov    eax,esi
640205a1:	call   0x6401ff14
640205a6:	mov    BYTE PTR [esi],0x30
640205a9:	inc    esi
640205aa:	jmp    0x640205ae
640205ac:	add    esi,eax
640205ae:	cmp    DWORD PTR [ebp+0xc],0x0
640205b2:	jle    0x640205f8
640205b4:	mov    eax,esi
640205b6:	call   0x6401ff14
640205bb:	mov    eax,DWORD PTR [ebp-0x10]
640205be:	mov    eax,DWORD PTR [eax+0xbc]
640205c4:	mov    eax,DWORD PTR [eax]
640205c6:	mov    al,BYTE PTR [eax]
640205c8:	mov    BYTE PTR [esi],al
640205ca:	mov    ebx,DWORD PTR [ebx+0x4]
640205cd:	inc    esi
640205ce:	test   ebx,ebx
640205d0:	jge    0x640205f8
640205d2:	neg    ebx
640205d4:	cmp    BYTE PTR [ebp+0x10],0x0
640205d8:	jne    0x640205df
640205da:	cmp    DWORD PTR [ebp+0xc],ebx
640205dd:	jl     0x640205e2
640205df:	mov    DWORD PTR [ebp+0xc],ebx
640205e2:	mov    edi,DWORD PTR [ebp+0xc]
640205e5:	mov    eax,esi
640205e7:	call   0x6401ff14
640205ec:	push   edi
640205ed:	push   0x30
640205ef:	push   esi
640205f0:	call   0x64015100
640205f5:	add    esp,0xc
640205f8:	cmp    BYTE PTR [ebp-0x4],0x0
640205fc:	je     0x64020605
640205fe:	mov    eax,DWORD PTR [ebp-0x8]
64020601:	and    DWORD PTR [eax+0x70],0xfffffffd
64020605:	xor    eax,eax
64020607:	pop    edi
64020608:	pop    esi
64020609:	pop    ebx
6402060a:	leave  
6402060b:	ret    
6402060c:	push   ebp
6402060d:	mov    ebp,esp
6402060f:	sub    esp,0x2c
64020612:	mov    eax,ds:0x640521ac
64020617:	xor    eax,ebp
64020619:	mov    DWORD PTR [ebp-0x4],eax
6402061c:	mov    eax,DWORD PTR [ebp+0x8]
6402061f:	push   ebx
64020620:	push   esi
64020621:	push   edi
64020622:	mov    edi,DWORD PTR [ebp+0xc]
64020625:	push   0x16
64020627:	pop    esi
64020628:	push   esi
64020629:	lea    ecx,[ebp-0x1c]
6402062c:	push   ecx
6402062d:	lea    ecx,[ebp-0x2c]
64020630:	push   ecx
64020631:	push   DWORD PTR [eax+0x4]
64020634:	push   DWORD PTR [eax]
64020636:	call   0x64021459
6402063b:	xor    ebx,ebx
6402063d:	add    esp,0x14
64020640:	cmp    edi,ebx
64020642:	jne    0x6402065c
64020644:	call   0x64016663
64020649:	push   ebx
6402064a:	push   ebx
6402064b:	push   ebx
6402064c:	push   ebx
6402064d:	push   ebx
6402064e:	mov    DWORD PTR [eax],esi
64020650:	call   0x64013df2
64020655:	add    esp,0x14
64020658:	mov    eax,esi
6402065a:	jmp    0x640206b6
6402065c:	mov    eax,DWORD PTR [ebp+0x10]
6402065f:	cmp    eax,ebx
64020661:	jbe    0x64020644
64020663:	cmp    eax,0xffffffff
64020666:	jne    0x6402066c
64020668:	or     eax,eax
6402066a:	jmp    0x64020677
6402066c:	xor    ecx,ecx
6402066e:	cmp    DWORD PTR [ebp-0x2c],0x2d
64020672:	sete   cl
64020675:	sub    eax,ecx
64020677:	mov    esi,DWORD PTR [ebp+0x14]
6402067a:	lea    ecx,[ebp-0x2c]
6402067d:	push   ecx
6402067e:	mov    ecx,DWORD PTR [ebp-0x28]
64020681:	add    ecx,esi
64020683:	push   ecx
64020684:	push   eax
64020685:	xor    eax,eax
64020687:	cmp    DWORD PTR [ebp-0x2c],0x2d
6402068b:	sete   al
6402068e:	add    eax,edi
64020690:	push   eax
64020691:	call   0x640212e1
64020696:	add    esp,0x10
64020699:	cmp    eax,ebx
6402069b:	je     0x640206a1
6402069d:	mov    BYTE PTR [edi],bl
6402069f:	jmp    0x640206b6
640206a1:	push   DWORD PTR [ebp+0x18]
640206a4:	lea    eax,[ebp-0x2c]
640206a7:	push   ebx
640206a8:	push   esi
640206a9:	push   DWORD PTR [ebp+0x10]
640206ac:	mov    ecx,edi
640206ae:	call   0x64020517
640206b3:	add    esp,0x10
640206b6:	mov    ecx,DWORD PTR [ebp-0x4]
640206b9:	pop    edi
640206ba:	pop    esi
640206bb:	xor    ecx,ebp
640206bd:	pop    ebx
640206be:	call   0x64013ca6
640206c3:	leave  
640206c4:	ret    
640206c5:	push   ebp
640206c6:	mov    ebp,esp
640206c8:	sub    esp,0x30
640206cb:	mov    eax,ds:0x640521ac
640206d0:	xor    eax,ebp
640206d2:	mov    DWORD PTR [ebp-0x4],eax
640206d5:	mov    eax,DWORD PTR [ebp+0x8]
640206d8:	push   ebx
640206d9:	push   esi
640206da:	mov    esi,DWORD PTR [ebp+0xc]
640206dd:	push   edi
640206de:	push   0x16
640206e0:	pop    edi
640206e1:	push   edi
640206e2:	lea    ecx,[ebp-0x1c]
640206e5:	push   ecx
640206e6:	lea    ecx,[ebp-0x30]
640206e9:	push   ecx
640206ea:	push   DWORD PTR [eax+0x4]
640206ed:	push   DWORD PTR [eax]
640206ef:	call   0x64021459
640206f4:	xor    ebx,ebx
640206f6:	add    esp,0x14
640206f9:	cmp    esi,ebx
640206fb:	jne    0x64020718
640206fd:	call   0x64016663
64020702:	push   ebx
64020703:	push   ebx
64020704:	push   ebx
64020705:	push   ebx
64020706:	push   ebx
64020707:	mov    DWORD PTR [eax],edi
64020709:	call   0x64013df2
6402070e:	add    esp,0x14
64020711:	mov    eax,edi
64020713:	jmp    0x640207ae
64020718:	mov    ecx,DWORD PTR [ebp+0x10]
6402071b:	cmp    ecx,ebx
6402071d:	jbe    0x640206fd
6402071f:	mov    eax,DWORD PTR [ebp-0x2c]
64020722:	dec    eax
64020723:	mov    DWORD PTR [ebp-0x20],eax
64020726:	xor    eax,eax
64020728:	cmp    DWORD PTR [ebp-0x30],0x2d
6402072c:	sete   al
6402072f:	cmp    ecx,0xffffffff
64020732:	lea    edi,[eax+esi*1]
64020735:	jne    0x6402073b
64020737:	or     ecx,ecx
64020739:	jmp    0x6402073d
6402073b:	sub    ecx,eax
6402073d:	lea    eax,[ebp-0x30]
64020740:	push   eax
64020741:	push   DWORD PTR [ebp+0x14]
64020744:	push   ecx
64020745:	push   edi
64020746:	call   0x640212e1
6402074b:	add    esp,0x10
6402074e:	cmp    eax,ebx
64020750:	je     0x64020756
64020752:	mov    BYTE PTR [esi],bl
64020754:	jmp    0x640207ae
64020756:	mov    eax,DWORD PTR [ebp-0x2c]
64020759:	dec    eax
6402075a:	cmp    DWORD PTR [ebp-0x20],eax
6402075d:	setl   cl
64020760:	cmp    eax,0xfffffffc
64020763:	jl     0x64020792
64020765:	cmp    eax,DWORD PTR [ebp+0x14]
64020768:	jge    0x64020792
6402076a:	cmp    cl,bl
6402076c:	je     0x64020778
6402076e:	mov    al,BYTE PTR [edi]
64020770:	inc    edi
64020771:	test   al,al
64020773:	jne    0x6402076e
64020775:	mov    BYTE PTR [edi-0x2],bl
64020778:	push   DWORD PTR [ebp+0x1c]
6402077b:	lea    eax,[ebp-0x30]
6402077e:	push   0x1
64020780:	push   DWORD PTR [ebp+0x14]
64020783:	mov    ecx,esi
64020785:	push   DWORD PTR [ebp+0x10]
64020788:	call   0x64020517
6402078d:	add    esp,0x10
64020790:	jmp    0x640207ae
64020792:	push   DWORD PTR [ebp+0x1c]
64020795:	lea    eax,[ebp-0x30]
64020798:	push   0x1
6402079a:	push   eax
6402079b:	push   DWORD PTR [ebp+0x18]
6402079e:	mov    eax,esi
640207a0:	push   DWORD PTR [ebp+0x14]
640207a3:	push   DWORD PTR [ebp+0x10]
640207a6:	call   0x6401ff4d
640207ab:	add    esp,0x18
640207ae:	mov    ecx,DWORD PTR [ebp-0x4]
640207b1:	pop    edi
640207b2:	pop    esi
640207b3:	xor    ecx,ebp
640207b5:	pop    ebx
640207b6:	call   0x64013ca6
640207bb:	leave  
640207bc:	ret    
640207bd:	push   ebp
640207be:	mov    ebp,esp
640207c0:	mov    eax,DWORD PTR [ebp+0x14]
640207c3:	cmp    eax,0x65
640207c6:	je     0x64020827
640207c8:	cmp    eax,0x45
640207cb:	je     0x64020827
640207cd:	cmp    eax,0x66
640207d0:	jne    0x640207eb
640207d2:	push   DWORD PTR [ebp+0x20]
640207d5:	push   DWORD PTR [ebp+0x18]
640207d8:	push   DWORD PTR [ebp+0x10]
640207db:	push   DWORD PTR [ebp+0xc]
640207de:	push   DWORD PTR [ebp+0x8]
640207e1:	call   0x6402060c
640207e6:	add    esp,0x14
640207e9:	pop    ebp
640207ea:	ret    
640207eb:	cmp    eax,0x61
640207ee:	je     0x6402080e
640207f0:	cmp    eax,0x41
640207f3:	je     0x6402080e
640207f5:	push   DWORD PTR [ebp+0x20]
640207f8:	push   DWORD PTR [ebp+0x1c]
640207fb:	push   DWORD PTR [ebp+0x18]
640207fe:	push   DWORD PTR [ebp+0x10]
64020801:	push   DWORD PTR [ebp+0xc]
64020804:	push   DWORD PTR [ebp+0x8]
64020807:	call   0x640206c5
6402080c:	jmp    0x6402083e
6402080e:	push   DWORD PTR [ebp+0x20]
64020811:	push   DWORD PTR [ebp+0x1c]
64020814:	push   DWORD PTR [ebp+0x18]
64020817:	push   DWORD PTR [ebp+0x10]
6402081a:	push   DWORD PTR [ebp+0xc]
6402081d:	push   DWORD PTR [ebp+0x8]
64020820:	call   0x640201a6
64020825:	jmp    0x6402083e
64020827:	push   DWORD PTR [ebp+0x20]
6402082a:	push   DWORD PTR [ebp+0x1c]
6402082d:	push   DWORD PTR [ebp+0x18]
64020830:	push   DWORD PTR [ebp+0x10]
64020833:	push   DWORD PTR [ebp+0xc]
64020836:	push   DWORD PTR [ebp+0x8]
64020839:	call   0x640200ba
6402083e:	add    esp,0x18
64020841:	pop    ebp
64020842:	ret    
64020843:	push   ebp
64020844:	mov    ebp,esp
64020846:	push   0x0
64020848:	push   DWORD PTR [ebp+0x1c]
6402084b:	push   DWORD PTR [ebp+0x18]
6402084e:	push   DWORD PTR [ebp+0x14]
64020851:	push   DWORD PTR [ebp+0x10]
64020854:	push   DWORD PTR [ebp+0xc]
64020857:	push   DWORD PTR [ebp+0x8]
6402085a:	call   0x640207bd
6402085f:	add    esp,0x1c
64020862:	pop    ebp
64020863:	ret    
64020864:	push   esi
64020865:	push   0x30000
6402086a:	push   0x10000
6402086f:	xor    esi,esi
64020871:	push   esi
64020872:	call   0x640215cf
64020877:	add    esp,0xc
6402087a:	test   eax,eax
6402087c:	je     0x6402088b
6402087e:	push   esi
6402087f:	push   esi
64020880:	push   esi
64020881:	push   esi
64020882:	push   esi
64020883:	call   0x64013cf6
64020888:	add    esp,0x14
6402088b:	pop    esi
6402088c:	ret    
6402088d:	push   ebp
6402088e:	mov    ebp,esp
64020890:	sub    esp,0x18
64020893:	fld    QWORD PTR ds:0x640418f8
64020899:	fstp   QWORD PTR [ebp-0x10]
6402089c:	fld    QWORD PTR ds:0x640418f0
640208a2:	fstp   QWORD PTR [ebp-0x18]
640208a5:	fld    QWORD PTR [ebp-0x18]
640208a8:	fdiv   QWORD PTR [ebp-0x10]
640208ab:	fmul   QWORD PTR [ebp-0x10]
640208ae:	fsubr  QWORD PTR [ebp-0x18]
640208b1:	fstp   QWORD PTR [ebp-0x8]
640208b4:	fld1   
640208b6:	fcomp  QWORD PTR [ebp-0x8]
640208b9:	fnstsw ax
640208bb:	test   ah,0x5
640208be:	jp     0x640208c5
640208c0:	xor    eax,eax
640208c2:	inc    eax
640208c3:	leave  
640208c4:	ret    
640208c5:	xor    eax,eax
640208c7:	leave  
640208c8:	ret    
640208c9:	push   0x6404191c
640208ce:	call   DWORD PTR ds:0x6402c0a8
640208d4:	test   eax,eax
640208d6:	je     0x640208ed
640208d8:	push   0x64041900
640208dd:	push   eax
640208de:	call   DWORD PTR ds:0x6402c0a4
640208e4:	test   eax,eax
640208e6:	je     0x640208ed
640208e8:	push   0x0
640208ea:	call   eax
640208ec:	ret    
640208ed:	jmp    0x6402088d
640208f2:	push   ebp
640208f3:	mov    ebp,esp
640208f5:	sub    esp,0x18
640208f8:	mov    eax,ds:0x640521ac
640208fd:	xor    eax,ebp
640208ff:	mov    DWORD PTR [ebp-0x4],eax
64020902:	mov    eax,DWORD PTR [ebp+0x10]
64020905:	push   ebx
64020906:	push   esi
64020907:	xor    esi,esi
64020909:	cmp    DWORD PTR [ebp+0xc],esi
6402090c:	push   edi
6402090d:	mov    DWORD PTR [ebp-0x18],0x404e
64020914:	mov    DWORD PTR [eax],esi
64020916:	mov    DWORD PTR [eax+0x4],esi
64020919:	mov    DWORD PTR [eax+0x8],esi
6402091c:	jbe    0x64020a68
64020922:	mov    edx,DWORD PTR [eax]
64020924:	mov    ebx,DWORD PTR [eax+0x4]
64020927:	mov    esi,eax
64020929:	lea    edi,[ebp-0x10]
6402092c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
6402092d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
6402092e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
6402092f:	mov    ecx,edx
64020931:	shr    ecx,0x1f
64020934:	lea    edi,[edx+edx*1]
64020937:	lea    edx,[ebx+ebx*1]
6402093a:	or     edx,ecx
6402093c:	mov    ecx,DWORD PTR [eax+0x8]
6402093f:	mov    esi,ebx
64020941:	shr    esi,0x1f
64020944:	add    ecx,ecx
64020946:	or     ecx,esi
64020948:	mov    DWORD PTR [ebp-0x14],edi
6402094b:	mov    esi,edi
6402094d:	and    DWORD PTR [ebp-0x14],0x0
64020951:	mov    ebx,edx
64020953:	shr    ebx,0x1f
64020956:	add    ecx,ecx
64020958:	shr    edi,0x1f
6402095b:	or     ecx,ebx
6402095d:	mov    ebx,DWORD PTR [ebp-0x10]
64020960:	add    esi,esi
64020962:	add    edx,edx
64020964:	or     edx,edi
64020966:	lea    edi,[esi+ebx*1]
64020969:	cmp    edi,esi
6402096b:	mov    DWORD PTR [eax],esi
6402096d:	mov    DWORD PTR [eax+0x4],edx
64020970:	mov    DWORD PTR [eax+0x8],ecx
64020973:	jb     0x64020979
64020975:	cmp    edi,ebx
64020977:	jae    0x64020980
64020979:	mov    DWORD PTR [ebp-0x14],0x1
64020980:	xor    ebx,ebx
64020982:	cmp    DWORD PTR [ebp-0x14],ebx
64020985:	mov    DWORD PTR [eax],edi
64020987:	je     0x640209a3
64020989:	lea    esi,[edx+0x1]
6402098c:	cmp    esi,edx
6402098e:	jb     0x64020995
64020990:	cmp    esi,0x1
64020993:	jae    0x64020998
64020995:	xor    ebx,ebx
64020997:	inc    ebx
64020998:	test   ebx,ebx
6402099a:	mov    DWORD PTR [eax+0x4],esi
6402099d:	je     0x640209a3
6402099f:	inc    ecx
640209a0:	mov    DWORD PTR [eax+0x8],ecx
640209a3:	mov    ecx,DWORD PTR [eax+0x4]
640209a6:	mov    edx,DWORD PTR [ebp-0xc]
640209a9:	lea    ebx,[ecx+edx*1]
640209ac:	xor    esi,esi
640209ae:	cmp    ebx,ecx
640209b0:	jb     0x640209b6
640209b2:	cmp    ebx,edx
640209b4:	jae    0x640209b9
640209b6:	xor    esi,esi
640209b8:	inc    esi
640209b9:	test   esi,esi
640209bb:	mov    DWORD PTR [eax+0x4],ebx
640209be:	je     0x640209c3
640209c0:	inc    DWORD PTR [eax+0x8]
640209c3:	mov    ecx,DWORD PTR [ebp-0x8]
640209c6:	add    DWORD PTR [eax+0x8],ecx
640209c9:	and    DWORD PTR [ebp-0x14],0x0
640209cd:	lea    ecx,[edi+edi*1]
640209d0:	mov    edx,edi
640209d2:	shr    edx,0x1f
640209d5:	lea    edi,[ebx+ebx*1]
640209d8:	or     edi,edx
640209da:	mov    edx,DWORD PTR [eax+0x8]
640209dd:	mov    esi,ebx
640209df:	shr    esi,0x1f
640209e2:	lea    ebx,[edx+edx*1]
640209e5:	mov    edx,DWORD PTR [ebp+0x8]
640209e8:	or     ebx,esi
640209ea:	mov    DWORD PTR [eax],ecx
640209ec:	mov    DWORD PTR [eax+0x4],edi
640209ef:	mov    DWORD PTR [eax+0x8],ebx
640209f2:	movsx  edx,BYTE PTR [edx]
640209f5:	lea    esi,[ecx+edx*1]
640209f8:	cmp    esi,ecx
640209fa:	mov    DWORD PTR [ebp-0x10],edx
640209fd:	jb     0x64020a03
640209ff:	cmp    esi,edx
64020a01:	jae    0x64020a0a
64020a03:	mov    DWORD PTR [ebp-0x14],0x1
64020a0a:	cmp    DWORD PTR [ebp-0x14],0x0
64020a0e:	mov    DWORD PTR [eax],esi
64020a10:	je     0x64020a2e
64020a12:	lea    ecx,[edi+0x1]
64020a15:	xor    edx,edx
64020a17:	cmp    ecx,edi
64020a19:	jb     0x64020a20
64020a1b:	cmp    ecx,0x1
64020a1e:	jae    0x64020a23
64020a20:	xor    edx,edx
64020a22:	inc    edx
64020a23:	test   edx,edx
64020a25:	mov    DWORD PTR [eax+0x4],ecx
64020a28:	je     0x64020a2e
64020a2a:	inc    ebx
64020a2b:	mov    DWORD PTR [eax+0x8],ebx
64020a2e:	dec    DWORD PTR [ebp+0xc]
64020a31:	inc    DWORD PTR [ebp+0x8]
64020a34:	cmp    DWORD PTR [ebp+0xc],0x0
64020a38:	ja     0x64020922
64020a3e:	xor    esi,esi
64020a40:	jmp    0x64020a68
64020a42:	mov    ecx,DWORD PTR [eax+0x4]
64020a45:	mov    edx,ecx
64020a47:	shr    edx,0x10
64020a4a:	mov    DWORD PTR [eax+0x8],edx
64020a4d:	mov    edx,DWORD PTR [eax]
64020a4f:	mov    edi,edx
64020a51:	shl    ecx,0x10
64020a54:	shr    edi,0x10
64020a57:	or     ecx,edi
64020a59:	shl    edx,0x10
64020a5c:	add    DWORD PTR [ebp-0x18],0xfff0
64020a63:	mov    DWORD PTR [eax+0x4],ecx
64020a66:	mov    DWORD PTR [eax],edx
64020a68:	cmp    DWORD PTR [eax+0x8],esi
64020a6b:	je     0x64020a42
64020a6d:	mov    ebx,0x8000
64020a72:	test   DWORD PTR [eax+0x8],ebx
64020a75:	jne    0x64020aa7
64020a77:	mov    esi,DWORD PTR [eax]
64020a79:	mov    edi,DWORD PTR [eax+0x4]
64020a7c:	add    DWORD PTR [ebp-0x18],0xffff
64020a83:	mov    ecx,esi
64020a85:	add    esi,esi
64020a87:	shr    ecx,0x1f
64020a8a:	mov    DWORD PTR [eax],esi
64020a8c:	lea    esi,[edi+edi*1]
64020a8f:	or     esi,ecx
64020a91:	mov    ecx,DWORD PTR [eax+0x8]
64020a94:	mov    edx,edi
64020a96:	shr    edx,0x1f
64020a99:	add    ecx,ecx
64020a9b:	or     ecx,edx
64020a9d:	test   ebx,ecx
64020a9f:	mov    DWORD PTR [eax+0x4],esi
64020aa2:	mov    DWORD PTR [eax+0x8],ecx
64020aa5:	je     0x64020a77
64020aa7:	mov    cx,WORD PTR [ebp-0x18]
64020aab:	mov    WORD PTR [eax+0xa],cx
64020aaf:	mov    ecx,DWORD PTR [ebp-0x4]
64020ab2:	pop    edi
64020ab3:	pop    esi
64020ab4:	xor    ecx,ebp
64020ab6:	pop    ebx
64020ab7:	call   0x64013ca6
64020abc:	leave  
64020abd:	ret    
64020abe:	push   ebp
64020abf:	mov    ebp,esp
64020ac1:	sub    esp,0x10
64020ac4:	mov    eax,ds:0x640521ac
64020ac9:	xor    eax,ebp
64020acb:	mov    DWORD PTR [ebp-0x4],eax
64020ace:	push   ebx
64020acf:	push   esi
64020ad0:	mov    esi,DWORD PTR [ebp+0xc]
64020ad3:	test   BYTE PTR [esi+0xc],0x40
64020ad7:	push   edi
64020ad8:	jne    0x64020c6d
64020ade:	push   esi
64020adf:	call   0x64019d8b
64020ae4:	cmp    eax,0xffffffff
64020ae7:	pop    ecx
64020ae8:	mov    edi,0x64052488
64020aed:	je     0x64020b1d
64020aef:	push   esi
64020af0:	call   0x64019d8b
64020af5:	cmp    eax,0xfffffffe
64020af8:	pop    ecx
64020af9:	je     0x64020b1d
64020afb:	push   esi
64020afc:	call   0x64019d8b
64020b01:	sar    eax,0x5
64020b04:	push   esi
64020b05:	lea    ebx,[eax*4+0x640556c0]
64020b0c:	call   0x64019d8b
64020b11:	and    eax,0x1f
64020b14:	pop    ecx
64020b15:	shl    eax,0x6
64020b18:	add    eax,DWORD PTR [ebx]
64020b1a:	pop    ecx
64020b1b:	jmp    0x64020b1f
64020b1d:	mov    eax,edi
64020b1f:	mov    al,BYTE PTR [eax+0x24]
64020b22:	and    al,0x7f
64020b24:	cmp    al,0x2
64020b26:	je     0x64020c6d
64020b2c:	push   esi
64020b2d:	call   0x64019d8b
64020b32:	cmp    eax,0xffffffff
64020b35:	pop    ecx
64020b36:	je     0x64020b66
64020b38:	push   esi
64020b39:	call   0x64019d8b
64020b3e:	cmp    eax,0xfffffffe
64020b41:	pop    ecx
64020b42:	je     0x64020b66
64020b44:	push   esi
64020b45:	call   0x64019d8b
64020b4a:	sar    eax,0x5
64020b4d:	push   esi
64020b4e:	lea    ebx,[eax*4+0x640556c0]
64020b55:	call   0x64019d8b
64020b5a:	and    eax,0x1f
64020b5d:	pop    ecx
64020b5e:	shl    eax,0x6
64020b61:	add    eax,DWORD PTR [ebx]
64020b63:	pop    ecx
64020b64:	jmp    0x64020b68
64020b66:	mov    eax,edi
64020b68:	mov    al,BYTE PTR [eax+0x24]
64020b6b:	and    al,0x7f
64020b6d:	cmp    al,0x1
64020b6f:	jne    0x64020bcd
64020b71:	dec    DWORD PTR [esi+0x4]
64020b74:	mov    ebx,DWORD PTR [ebp+0x8]
64020b77:	js     0x64020b87
64020b79:	mov    eax,DWORD PTR [esi]
64020b7b:	mov    BYTE PTR [eax],bl
64020b7d:	mov    ecx,DWORD PTR [esi]
64020b7f:	movzx  eax,BYTE PTR [ecx]
64020b82:	inc    ecx
64020b83:	mov    DWORD PTR [esi],ecx
64020b85:	jmp    0x64020b93
64020b87:	movsx  eax,bl
64020b8a:	push   esi
64020b8b:	push   eax
64020b8c:	call   0x64019f6b
64020b91:	pop    ecx
64020b92:	pop    ecx
64020b93:	cmp    eax,0xffffffff
64020b96:	jne    0x64020ba1
64020b98:	or     ax,0xffff
64020b9c:	jmp    0x64020c8d
64020ba1:	dec    DWORD PTR [esi+0x4]
64020ba4:	js     0x64020bb4
64020ba6:	mov    eax,DWORD PTR [esi]
64020ba8:	mov    BYTE PTR [eax],bh
64020baa:	mov    ecx,DWORD PTR [esi]
64020bac:	movzx  eax,BYTE PTR [ecx]
64020baf:	inc    ecx
64020bb0:	mov    DWORD PTR [esi],ecx
64020bb2:	jmp    0x64020bc0
64020bb4:	movsx  eax,bh
64020bb7:	push   esi
64020bb8:	push   eax
64020bb9:	call   0x64019f6b
64020bbe:	pop    ecx
64020bbf:	pop    ecx
64020bc0:	cmp    eax,0xffffffff
64020bc3:	je     0x64020b98
64020bc5:	mov    ax,bx
64020bc8:	jmp    0x64020c8d
64020bcd:	push   esi
64020bce:	call   0x64019d8b
64020bd3:	cmp    eax,0xffffffff
64020bd6:	pop    ecx
64020bd7:	je     0x64020c07
64020bd9:	push   esi
64020bda:	call   0x64019d8b
64020bdf:	cmp    eax,0xfffffffe
64020be2:	pop    ecx
64020be3:	je     0x64020c07
64020be5:	push   esi
64020be6:	call   0x64019d8b
64020beb:	sar    eax,0x5
64020bee:	push   esi
64020bef:	lea    ebx,[eax*4+0x640556c0]
64020bf6:	call   0x64019d8b
64020bfb:	and    eax,0x1f
64020bfe:	pop    ecx
64020bff:	shl    eax,0x6
64020c02:	add    eax,DWORD PTR [ebx]
64020c04:	pop    ecx
64020c05:	jmp    0x64020c09
64020c07:	mov    eax,edi
64020c09:	test   BYTE PTR [eax+0x4],0x80
64020c0d:	je     0x64020c6d
64020c0f:	push   DWORD PTR [ebp+0x8]
64020c12:	lea    eax,[ebp-0xc]
64020c15:	push   0x5
64020c17:	push   eax
64020c18:	lea    eax,[ebp-0x10]
64020c1b:	push   eax
64020c1c:	call   0x6401ecc6
64020c21:	add    esp,0x10
64020c24:	test   eax,eax
64020c26:	jne    0x64020b98
64020c2c:	xor    ebx,ebx
64020c2e:	cmp    DWORD PTR [ebp-0x10],ebx
64020c31:	jle    0x64020c67
64020c33:	dec    DWORD PTR [esi+0x4]
64020c36:	js     0x64020c4a
64020c38:	mov    eax,DWORD PTR [esi]
64020c3a:	mov    cl,BYTE PTR [ebp+ebx*1-0xc]
64020c3e:	mov    BYTE PTR [eax],cl
64020c40:	mov    ecx,DWORD PTR [esi]
64020c42:	movzx  eax,BYTE PTR [ecx]
64020c45:	inc    ecx
64020c46:	mov    DWORD PTR [esi],ecx
64020c48:	jmp    0x64020c58
64020c4a:	movsx  eax,BYTE PTR [ebp+ebx*1-0xc]
64020c4f:	push   esi
64020c50:	push   eax
64020c51:	call   0x64019f6b
64020c56:	pop    ecx
64020c57:	pop    ecx
64020c58:	cmp    eax,0xffffffff
64020c5b:	je     0x64020b98
64020c61:	inc    ebx
64020c62:	cmp    ebx,DWORD PTR [ebp-0x10]
64020c65:	jl     0x64020c33
64020c67:	mov    ax,WORD PTR [ebp+0x8]
64020c6b:	jmp    0x64020c8d
64020c6d:	add    DWORD PTR [esi+0x4],0xfffffffe
64020c71:	js     0x64020c80
64020c73:	mov    ecx,DWORD PTR [esi]
64020c75:	mov    eax,DWORD PTR [ebp+0x8]
64020c78:	mov    WORD PTR [ecx],ax
64020c7b:	add    DWORD PTR [esi],0x2
64020c7e:	jmp    0x64020c8d
64020c80:	movzx  eax,WORD PTR [ebp+0x8]
64020c84:	push   esi
64020c85:	push   eax
64020c86:	call   0x64021639
64020c8b:	pop    ecx
64020c8c:	pop    ecx
64020c8d:	mov    ecx,DWORD PTR [ebp-0x4]
64020c90:	pop    edi
64020c91:	pop    esi
64020c92:	xor    ecx,ebp
64020c94:	pop    ebx
64020c95:	call   0x64013ca6
64020c9a:	leave  
64020c9b:	ret    
64020c9c:	mov    ax,WORD PTR [esp+0x4]
64020ca1:	cmp    ax,0x30
64020ca5:	jb     0x64020e1a
64020cab:	cmp    ax,0x3a
64020caf:	jae    0x64020cb8
64020cb1:	movzx  eax,ax
64020cb4:	sub    eax,0x30
64020cb7:	ret    
64020cb8:	mov    ecx,0xff10
64020cbd:	cmp    ax,cx
64020cc0:	jae    0x64020e10
64020cc6:	mov    ecx,0x660
64020ccb:	cmp    ax,cx
64020cce:	jb     0x64020e1a
64020cd4:	cmp    ax,0x66a
64020cd8:	jae    0x64020ce0
64020cda:	movzx  eax,ax
64020cdd:	sub    eax,ecx
64020cdf:	ret    
64020ce0:	mov    ecx,0x6f0
64020ce5:	cmp    ax,cx
64020ce8:	jb     0x64020e1a
64020cee:	cmp    ax,0x6fa
64020cf2:	jb     0x64020cda
64020cf4:	mov    ecx,0x966
64020cf9:	cmp    ax,cx
64020cfc:	jb     0x64020e1a
64020d02:	cmp    ax,0x970
64020d06:	jb     0x64020cda
64020d08:	mov    ecx,0x9e6
64020d0d:	cmp    ax,cx
64020d10:	jb     0x64020e1a
64020d16:	cmp    ax,0x9f0
64020d1a:	jb     0x64020cda
64020d1c:	mov    ecx,0xa66
64020d21:	cmp    ax,cx
64020d24:	jb     0x64020e1a
64020d2a:	cmp    ax,0xa70
64020d2e:	jb     0x64020cda
64020d30:	mov    ecx,0xae6
64020d35:	cmp    ax,cx
64020d38:	jb     0x64020e1a
64020d3e:	cmp    ax,0xaf0
64020d42:	jb     0x64020cda
64020d44:	mov    ecx,0xb66
64020d49:	cmp    ax,cx
64020d4c:	jb     0x64020e1a
64020d52:	cmp    ax,0xb70
64020d56:	jb     0x64020cda
64020d58:	mov    ecx,0xc66
64020d5d:	cmp    ax,cx
64020d60:	jb     0x64020e1a
64020d66:	cmp    ax,0xc70
64020d6a:	jb     0x64020cda
64020d70:	mov    ecx,0xce6
64020d75:	cmp    ax,cx
64020d78:	jb     0x64020e1a
64020d7e:	cmp    ax,0xcf0
64020d82:	jb     0x64020cda
64020d88:	mov    ecx,0xd66
64020d8d:	cmp    ax,cx
64020d90:	jb     0x64020e1a
64020d96:	cmp    ax,0xd70
64020d9a:	jb     0x64020cda
64020da0:	mov    ecx,0xe50
64020da5:	cmp    ax,cx
64020da8:	jb     0x64020e1a
64020daa:	cmp    ax,0xe5a
64020dae:	jb     0x64020cda
64020db4:	mov    ecx,0xed0
64020db9:	cmp    ax,cx
64020dbc:	jb     0x64020e1a
64020dbe:	cmp    ax,0xeda
64020dc2:	jb     0x64020cda
64020dc8:	add    ecx,0x50
64020dcb:	cmp    ax,cx
64020dce:	jb     0x64020e1a
64020dd0:	cmp    ax,0xf2a
64020dd4:	jb     0x64020cda
64020dda:	mov    ecx,0x1040
64020ddf:	cmp    ax,cx
64020de2:	jb     0x64020e1a
64020de4:	cmp    ax,0x104a
64020de8:	jb     0x64020cda
64020dee:	mov    ecx,0x17e0
64020df3:	cmp    ax,cx
64020df6:	jb     0x64020e1a
64020df8:	cmp    ax,0x17ea
64020dfc:	jb     0x64020cda
64020e02:	add    ecx,0x30
64020e05:	cmp    ax,cx
64020e08:	jb     0x64020e1a
64020e0a:	cmp    ax,0x181a
64020e0e:	jmp    0x64020e14
64020e10:	cmp    ax,0xff1a
64020e14:	jb     0x64020cda
64020e1a:	or     eax,0xffffffff
64020e1d:	ret    
64020e1e:	push   ebp
64020e1f:	mov    ebp,esp
64020e21:	sub    esp,0x14
64020e24:	push   esi
64020e25:	push   edi
64020e26:	push   DWORD PTR [ebp+0x8]
64020e29:	lea    ecx,[ebp-0x14]
64020e2c:	call   0x640142c5
64020e31:	mov    eax,DWORD PTR [ebp+0x10]
64020e34:	mov    esi,DWORD PTR [ebp+0xc]
64020e37:	xor    edi,edi
64020e39:	cmp    eax,edi
64020e3b:	je     0x64020e3f
64020e3d:	mov    DWORD PTR [eax],esi
64020e3f:	cmp    esi,edi
64020e41:	jne    0x64020e6f
64020e43:	call   0x64016663
64020e48:	push   edi
64020e49:	push   edi
64020e4a:	push   edi
64020e4b:	push   edi
64020e4c:	push   edi
64020e4d:	mov    DWORD PTR [eax],0x16
64020e53:	call   0x64013df2
64020e58:	add    esp,0x14
64020e5b:	cmp    BYTE PTR [ebp-0x8],0x0
64020e5f:	je     0x64020e68
64020e61:	mov    eax,DWORD PTR [ebp-0xc]
64020e64:	and    DWORD PTR [eax+0x70],0xfffffffd
64020e68:	xor    eax,eax
64020e6a:	jmp    0x64021045
64020e6f:	cmp    DWORD PTR [ebp+0x14],edi
64020e72:	je     0x64020e80
64020e74:	cmp    DWORD PTR [ebp+0x14],0x2
64020e78:	jl     0x64020e43
64020e7a:	cmp    DWORD PTR [ebp+0x14],0x24
64020e7e:	jg     0x64020e43
64020e80:	mov    ecx,DWORD PTR [ebp-0x14]
64020e83:	push   ebx
64020e84:	mov    bl,BYTE PTR [esi]
64020e86:	mov    DWORD PTR [ebp-0x4],edi
64020e89:	lea    edi,[esi+0x1]
64020e8c:	cmp    DWORD PTR [ecx+0xac],0x1
64020e93:	jle    0x64020eac
64020e95:	lea    eax,[ebp-0x14]
64020e98:	push   eax
64020e99:	movzx  eax,bl
64020e9c:	push   0x8
64020e9e:	push   eax
64020e9f:	call   0x6401ab00
64020ea4:	mov    ecx,DWORD PTR [ebp-0x14]
64020ea7:	add    esp,0xc
64020eaa:	jmp    0x64020ebc
64020eac:	mov    edx,DWORD PTR [ecx+0xc8]
64020eb2:	movzx  eax,bl
64020eb5:	movzx  eax,BYTE PTR [edx+eax*2]
64020eb9:	and    eax,0x8
64020ebc:	test   eax,eax
64020ebe:	je     0x64020ec5
64020ec0:	mov    bl,BYTE PTR [edi]
64020ec2:	inc    edi
64020ec3:	jmp    0x64020e8c
64020ec5:	cmp    bl,0x2d
64020ec8:	jne    0x64020ed0
64020eca:	or     DWORD PTR [ebp+0x18],0x2
64020ece:	jmp    0x64020ed5
64020ed0:	cmp    bl,0x2b
64020ed3:	jne    0x64020ed8
64020ed5:	mov    bl,BYTE PTR [edi]
64020ed7:	inc    edi
64020ed8:	mov    eax,DWORD PTR [ebp+0x14]
64020edb:	test   eax,eax
64020edd:	jl     0x6402102c
64020ee3:	cmp    eax,0x1
64020ee6:	je     0x6402102c
64020eec:	cmp    eax,0x24
64020eef:	jg     0x6402102c
64020ef5:	test   eax,eax
64020ef7:	jne    0x64020f23
64020ef9:	cmp    bl,0x30
64020efc:	je     0x64020f07
64020efe:	mov    DWORD PTR [ebp+0x14],0xa
64020f05:	jmp    0x64020f3b
64020f07:	mov    al,BYTE PTR [edi]
64020f09:	cmp    al,0x78
64020f0b:	je     0x64020f1a
64020f0d:	cmp    al,0x58
64020f0f:	je     0x64020f1a
64020f11:	mov    DWORD PTR [ebp+0x14],0x8
64020f18:	jmp    0x64020f3b
64020f1a:	mov    DWORD PTR [ebp+0x14],0x10
64020f21:	jmp    0x64020f2d
64020f23:	cmp    eax,0x10
64020f26:	jne    0x64020f3b
64020f28:	cmp    bl,0x30
64020f2b:	jne    0x64020f3b
64020f2d:	mov    al,BYTE PTR [edi]
64020f2f:	cmp    al,0x78
64020f31:	je     0x64020f37
64020f33:	cmp    al,0x58
64020f35:	jne    0x64020f3b
64020f37:	inc    edi
64020f38:	mov    bl,BYTE PTR [edi]
64020f3a:	inc    edi
64020f3b:	mov    esi,DWORD PTR [ecx+0xc8]
64020f41:	or     eax,0xffffffff
64020f44:	xor    edx,edx
64020f46:	div    DWORD PTR [ebp+0x14]
64020f49:	movzx  ecx,bl
64020f4c:	movzx  ecx,WORD PTR [esi+ecx*2]
64020f50:	test   cl,0x4
64020f53:	je     0x64020f5d
64020f55:	movsx  ecx,bl
64020f58:	sub    ecx,0x30
64020f5b:	jmp    0x64020f77
64020f5d:	test   cx,0x103
64020f62:	je     0x64020f95
64020f64:	mov    cl,bl
64020f66:	sub    cl,0x61
64020f69:	cmp    cl,0x19
64020f6c:	movsx  ecx,bl
64020f6f:	ja     0x64020f74
64020f71:	sub    ecx,0x20
64020f74:	add    ecx,0xffffffc9
64020f77:	cmp    ecx,DWORD PTR [ebp+0x14]
64020f7a:	jae    0x64020f95
64020f7c:	or     DWORD PTR [ebp+0x18],0x8
64020f80:	cmp    DWORD PTR [ebp-0x4],eax
64020f83:	jb     0x64020fac
64020f85:	jne    0x64020f8b
64020f87:	cmp    ecx,edx
64020f89:	jbe    0x64020fac
64020f8b:	or     DWORD PTR [ebp+0x18],0x4
64020f8f:	cmp    DWORD PTR [ebp+0x10],0x0
64020f93:	jne    0x64020fb8
64020f95:	mov    eax,DWORD PTR [ebp+0x18]
64020f98:	dec    edi
64020f99:	test   al,0x8
64020f9b:	jne    0x64020fbd
64020f9d:	cmp    DWORD PTR [ebp+0x10],0x0
64020fa1:	je     0x64020fa6
64020fa3:	mov    edi,DWORD PTR [ebp+0xc]
64020fa6:	and    DWORD PTR [ebp-0x4],0x0
64020faa:	jmp    0x64021008
64020fac:	mov    ebx,DWORD PTR [ebp-0x4]
64020faf:	imul   ebx,DWORD PTR [ebp+0x14]
64020fb3:	add    ebx,ecx
64020fb5:	mov    DWORD PTR [ebp-0x4],ebx
64020fb8:	mov    bl,BYTE PTR [edi]
64020fba:	inc    edi
64020fbb:	jmp    0x64020f49
64020fbd:	test   al,0x4
64020fbf:	mov    esi,0x7fffffff
64020fc4:	jne    0x64020fe1
64020fc6:	test   al,0x1
64020fc8:	jne    0x64021008
64020fca:	and    eax,0x2
64020fcd:	je     0x64020fd8
64020fcf:	cmp    DWORD PTR [ebp-0x4],0x80000000
64020fd6:	ja     0x64020fe1
64020fd8:	test   eax,eax
64020fda:	jne    0x64021008
64020fdc:	cmp    DWORD PTR [ebp-0x4],esi
64020fdf:	jbe    0x64021008
64020fe1:	call   0x64016663
64020fe6:	test   BYTE PTR [ebp+0x18],0x1
64020fea:	mov    DWORD PTR [eax],0x22
64020ff0:	je     0x64020ff8
64020ff2:	or     DWORD PTR [ebp-0x4],0xffffffff
64020ff6:	jmp    0x64021008
64020ff8:	mov    al,BYTE PTR [ebp+0x18]
64020ffb:	and    al,0x2
64020ffd:	neg    al
64020fff:	sbb    eax,eax
64021001:	neg    eax
64021003:	add    eax,esi
64021005:	mov    DWORD PTR [ebp-0x4],eax
64021008:	mov    eax,DWORD PTR [ebp+0x10]
6402100b:	test   eax,eax
6402100d:	je     0x64021011
6402100f:	mov    DWORD PTR [eax],edi
64021011:	test   BYTE PTR [ebp+0x18],0x2
64021015:	je     0x6402101a
64021017:	neg    DWORD PTR [ebp-0x4]
6402101a:	cmp    BYTE PTR [ebp-0x8],0x0
6402101e:	je     0x64021027
64021020:	mov    eax,DWORD PTR [ebp-0xc]
64021023:	and    DWORD PTR [eax+0x70],0xfffffffd
64021027:	mov    eax,DWORD PTR [ebp-0x4]
6402102a:	jmp    0x64021044
6402102c:	mov    eax,DWORD PTR [ebp+0x10]
6402102f:	test   eax,eax
64021031:	je     0x64021035
64021033:	mov    DWORD PTR [eax],esi
64021035:	cmp    BYTE PTR [ebp-0x8],0x0
64021039:	je     0x64021042
6402103b:	mov    eax,DWORD PTR [ebp-0xc]
6402103e:	and    DWORD PTR [eax+0x70],0xfffffffd
64021042:	xor    eax,eax
64021044:	pop    ebx
64021045:	pop    edi
64021046:	pop    esi
64021047:	leave  
64021048:	ret    
64021049:	push   ebp
6402104a:	mov    ebp,esp
6402104c:	xor    eax,eax
6402104e:	cmp    DWORD PTR ds:0x64053a08,eax
64021054:	push   eax
64021055:	push   DWORD PTR [ebp+0x10]
64021058:	push   DWORD PTR [ebp+0xc]
6402105b:	push   DWORD PTR [ebp+0x8]
6402105e:	jne    0x64021067
64021060:	push   0x64052b68
64021065:	jmp    0x64021068
64021067:	push   eax
64021068:	call   0x64020e1e
6402106d:	add    esp,0x14
64021070:	pop    ebp
64021071:	ret    
64021072:	push   0xc
64021074:	push   0x64043f88
64021079:	call   0x64016464
6402107e:	and    DWORD PTR [ebp-0x4],0x0
64021082:	movapd xmm0,xmm1
64021086:	mov    DWORD PTR [ebp-0x1c],0x1
6402108d:	jmp    0x640210b2
6402108f:	mov    eax,DWORD PTR [ebp-0x14]
64021092:	mov    eax,DWORD PTR [eax]
64021094:	mov    eax,DWORD PTR [eax]
64021096:	cmp    eax,0xc0000005
6402109b:	je     0x640210a7
6402109d:	cmp    eax,0xc000001d
640210a2:	je     0x640210a7
640210a4:	xor    eax,eax
640210a6:	ret    
640210a7:	xor    eax,eax
640210a9:	inc    eax
640210aa:	ret    
640210ab:	mov    esp,DWORD PTR [ebp-0x18]
640210ae:	and    DWORD PTR [ebp-0x1c],0x0
640210b2:	mov    DWORD PTR [ebp-0x4],0xfffffffe
640210b9:	mov    eax,DWORD PTR [ebp-0x1c]
640210bc:	call   0x640164a9
640210c1:	ret    
640210c2:	push   ebp
640210c3:	mov    ebp,esp
640210c5:	sub    esp,0x18
640210c8:	xor    eax,eax
640210ca:	push   ebx
640210cb:	mov    DWORD PTR [ebp-0x4],eax
640210ce:	mov    DWORD PTR [ebp-0xc],eax
640210d1:	mov    DWORD PTR [ebp-0x8],eax
640210d4:	push   ebx
640210d5:	pushf  
640210d6:	pop    eax
640210d7:	mov    ecx,eax
640210d9:	xor    eax,0x200000
640210de:	push   eax
640210df:	popf   
640210e0:	pushf  
640210e1:	pop    edx
640210e2:	sub    edx,ecx
640210e4:	je     0x64021105
640210e6:	push   ecx
640210e7:	popf   
640210e8:	xor    eax,eax
640210ea:	cpuid  
640210ec:	mov    DWORD PTR [ebp-0xc],eax
640210ef:	mov    DWORD PTR [ebp-0x18],ebx
640210f2:	mov    DWORD PTR [ebp-0x14],edx
640210f5:	mov    DWORD PTR [ebp-0x10],ecx
640210f8:	mov    eax,0x1
640210fd:	cpuid  
640210ff:	mov    DWORD PTR [ebp-0x4],edx
64021102:	mov    DWORD PTR [ebp-0x8],eax
64021105:	pop    ebx
64021106:	test   DWORD PTR [ebp-0x4],0x4000000
6402110d:	je     0x6402111d
6402110f:	call   0x64021072
64021114:	test   eax,eax
64021116:	je     0x6402111d
64021118:	xor    eax,eax
6402111a:	inc    eax
6402111b:	jmp    0x6402111f
6402111d:	xor    eax,eax
6402111f:	pop    ebx
64021120:	leave  
64021121:	ret    
64021122:	call   0x640210c2
64021127:	mov    ds:0x64054674,eax
6402112c:	xor    eax,eax
6402112e:	ret    
6402112f:	push   0xa
64021131:	push   0x0
64021133:	push   DWORD PTR [esp+0xc]
64021137:	call   0x64021049
6402113c:	add    esp,0xc
6402113f:	ret    
64021140:	push   0x2
64021142:	call   0x64017fb6
64021147:	pop    ecx
64021148:	ret    
64021149:	xor    eax,eax
6402114b:	push   eax
6402114c:	push   eax
6402114d:	push   0x3
6402114f:	push   eax
64021150:	push   0x3
64021152:	push   0x40000000
64021157:	push   0x64041968
6402115c:	call   DWORD PTR ds:0x6402c010
64021162:	mov    ds:0x640534c4,eax
64021167:	ret    
64021168:	mov    eax,ds:0x640534c4
6402116d:	cmp    eax,0xffffffff
64021170:	push   esi
64021171:	mov    esi,DWORD PTR ds:0x6402c078
64021177:	je     0x64021181
64021179:	cmp    eax,0xfffffffe
6402117c:	je     0x64021181
6402117e:	push   eax
6402117f:	call   esi
64021181:	mov    eax,ds:0x640534c0
64021186:	cmp    eax,0xffffffff
64021189:	je     0x64021193
6402118b:	cmp    eax,0xfffffffe
6402118e:	je     0x64021193
64021190:	push   eax
64021191:	call   esi
64021193:	pop    esi
64021194:	ret    
64021195:	push   ebp
64021196:	mov    ebp,esp
64021198:	sub    esp,0x28
6402119b:	mov    eax,ds:0x640521ac
640211a0:	xor    eax,ebp
640211a2:	mov    DWORD PTR [ebp-0x4],eax
640211a5:	push   ebx
640211a6:	push   esi
640211a7:	mov    esi,DWORD PTR [ebp+0x8]
640211aa:	push   edi
640211ab:	push   DWORD PTR [ebp+0x10]
640211ae:	mov    edi,DWORD PTR [ebp+0xc]
640211b1:	lea    ecx,[ebp-0x24]
640211b4:	call   0x640142c5
640211b9:	lea    eax,[ebp-0x24]
640211bc:	push   eax
640211bd:	xor    ebx,ebx
640211bf:	push   ebx
640211c0:	push   ebx
640211c1:	push   ebx
640211c2:	push   ebx
640211c3:	push   edi
640211c4:	lea    eax,[ebp-0x28]
640211c7:	push   eax
640211c8:	lea    eax,[ebp-0x10]
640211cb:	push   eax
640211cc:	call   0x64021811
640211d1:	mov    DWORD PTR [ebp-0x14],eax
640211d4:	lea    eax,[ebp-0x10]
640211d7:	push   esi
640211d8:	push   eax
640211d9:	call   0x6401f0d0
640211de:	add    esp,0x28
640211e1:	test   BYTE PTR [ebp-0x14],0x3
640211e5:	jne    0x64021212
640211e7:	cmp    eax,0x1
640211ea:	jne    0x640211fd
640211ec:	cmp    BYTE PTR [ebp-0x18],bl
640211ef:	je     0x640211f8
640211f1:	mov    eax,DWORD PTR [ebp-0x1c]
640211f4:	and    DWORD PTR [eax+0x70],0xfffffffd
640211f8:	push   0x3
640211fa:	pop    eax
640211fb:	jmp    0x6402122c
640211fd:	cmp    eax,0x2
64021200:	jne    0x6402121e
64021202:	cmp    BYTE PTR [ebp-0x18],bl
64021205:	je     0x6402120e
64021207:	mov    eax,DWORD PTR [ebp-0x1c]
6402120a:	and    DWORD PTR [eax+0x70],0xfffffffd
6402120e:	push   0x4
64021210:	jmp    0x640211fa
64021212:	test   BYTE PTR [ebp-0x14],0x1
64021216:	jne    0x64021202
64021218:	test   BYTE PTR [ebp-0x14],0x2
6402121c:	jne    0x640211ec
6402121e:	cmp    BYTE PTR [ebp-0x18],bl
64021221:	je     0x6402122a
64021223:	mov    eax,DWORD PTR [ebp-0x1c]
64021226:	and    DWORD PTR [eax+0x70],0xfffffffd
6402122a:	xor    eax,eax
6402122c:	mov    ecx,DWORD PTR [ebp-0x4]
6402122f:	pop    edi
64021230:	pop    esi
64021231:	xor    ecx,ebp
64021233:	pop    ebx
64021234:	call   0x64013ca6
64021239:	leave  
6402123a:	ret    
6402123b:	push   ebp
6402123c:	mov    ebp,esp
6402123e:	sub    esp,0x28
64021241:	mov    eax,ds:0x640521ac
64021246:	xor    eax,ebp
64021248:	mov    DWORD PTR [ebp-0x4],eax
6402124b:	push   ebx
6402124c:	push   esi
6402124d:	mov    esi,DWORD PTR [ebp+0x8]
64021250:	push   edi
64021251:	push   DWORD PTR [ebp+0x10]
64021254:	mov    edi,DWORD PTR [ebp+0xc]
64021257:	lea    ecx,[ebp-0x24]
6402125a:	call   0x640142c5
6402125f:	lea    eax,[ebp-0x24]
64021262:	push   eax
64021263:	xor    ebx,ebx
64021265:	push   ebx
64021266:	push   ebx
64021267:	push   ebx
64021268:	push   ebx
64021269:	push   edi
6402126a:	lea    eax,[ebp-0x28]
6402126d:	push   eax
6402126e:	lea    eax,[ebp-0x10]
64021271:	push   eax
64021272:	call   0x64021811
64021277:	mov    DWORD PTR [ebp-0x14],eax
6402127a:	lea    eax,[ebp-0x10]
6402127d:	push   esi
6402127e:	push   eax
6402127f:	call   0x6401f612
64021284:	add    esp,0x28
64021287:	test   BYTE PTR [ebp-0x14],0x3
6402128b:	jne    0x640212b8
6402128d:	cmp    eax,0x1
64021290:	jne    0x640212a3
64021292:	cmp    BYTE PTR [ebp-0x18],bl
64021295:	je     0x6402129e
64021297:	mov    eax,DWORD PTR [ebp-0x1c]
6402129a:	and    DWORD PTR [eax+0x70],0xfffffffd
6402129e:	push   0x3
640212a0:	pop    eax
640212a1:	jmp    0x640212d2
640212a3:	cmp    eax,0x2
640212a6:	jne    0x640212c4
640212a8:	cmp    BYTE PTR [ebp-0x18],bl
640212ab:	je     0x640212b4
640212ad:	mov    eax,DWORD PTR [ebp-0x1c]
640212b0:	and    DWORD PTR [eax+0x70],0xfffffffd
640212b4:	push   0x4
640212b6:	jmp    0x640212a0
640212b8:	test   BYTE PTR [ebp-0x14],0x1
640212bc:	jne    0x640212a8
640212be:	test   BYTE PTR [ebp-0x14],0x2
640212c2:	jne    0x64021292
640212c4:	cmp    BYTE PTR [ebp-0x18],bl
640212c7:	je     0x640212d0
640212c9:	mov    eax,DWORD PTR [ebp-0x1c]
640212cc:	and    DWORD PTR [eax+0x70],0xfffffffd
640212d0:	xor    eax,eax
640212d2:	mov    ecx,DWORD PTR [ebp-0x4]
640212d5:	pop    edi
640212d6:	pop    esi
640212d7:	xor    ecx,ebp
640212d9:	pop    ebx
640212da:	call   0x64013ca6
640212df:	leave  
640212e0:	ret    
640212e1:	push   ebp
640212e2:	mov    ebp,esp
640212e4:	mov    ecx,DWORD PTR [ebp+0x14]
640212e7:	push   ebx
640212e8:	push   esi
640212e9:	mov    esi,DWORD PTR [ebp+0x8]
640212ec:	xor    ebx,ebx
640212ee:	cmp    esi,ebx
640212f0:	push   edi
640212f1:	mov    edi,DWORD PTR [ecx+0xc]
640212f4:	jne    0x64021314
640212f6:	call   0x64016663
640212fb:	push   0x16
640212fd:	pop    esi
640212fe:	mov    DWORD PTR [eax],esi
64021300:	push   ebx
64021301:	push   ebx
64021302:	push   ebx
64021303:	push   ebx
64021304:	push   ebx
64021305:	call   0x64013df2
6402130a:	add    esp,0x14
6402130d:	mov    eax,esi
6402130f:	jmp    0x64021399
64021314:	cmp    DWORD PTR [ebp+0xc],ebx
64021317:	jbe    0x640212f6
64021319:	mov    edx,DWORD PTR [ebp+0x10]
6402131c:	cmp    edx,ebx
6402131e:	mov    BYTE PTR [esi],bl
64021320:	jle    0x64021326
64021322:	mov    eax,edx
64021324:	jmp    0x64021328
64021326:	xor    eax,eax
64021328:	inc    eax
64021329:	cmp    DWORD PTR [ebp+0xc],eax
6402132c:	ja     0x6402133c
6402132e:	call   0x64016663
64021333:	push   0x22
64021335:	pop    ecx
64021336:	mov    DWORD PTR [eax],ecx
64021338:	mov    esi,ecx
6402133a:	jmp    0x64021300
6402133c:	cmp    edx,ebx
6402133e:	mov    BYTE PTR [esi],0x30
64021341:	lea    eax,[esi+0x1]
64021344:	jle    0x64021360
64021346:	mov    cl,BYTE PTR [edi]
64021348:	cmp    cl,bl
6402134a:	je     0x64021352
6402134c:	movsx  ecx,cl
6402134f:	inc    edi
64021350:	jmp    0x64021355
64021352:	push   0x30
64021354:	pop    ecx
64021355:	mov    BYTE PTR [eax],cl
64021357:	inc    eax
64021358:	dec    edx
64021359:	cmp    edx,ebx
6402135b:	jg     0x64021346
6402135d:	mov    ecx,DWORD PTR [ebp+0x14]
64021360:	cmp    edx,ebx
64021362:	mov    BYTE PTR [eax],bl
64021364:	jl     0x64021378
64021366:	cmp    BYTE PTR [edi],0x35
64021369:	jl     0x64021378
6402136b:	jmp    0x64021370
6402136d:	mov    BYTE PTR [eax],0x30
64021370:	dec    eax
64021371:	cmp    BYTE PTR [eax],0x39
64021374:	je     0x6402136d
64021376:	inc    BYTE PTR [eax]
64021378:	cmp    BYTE PTR [esi],0x31
6402137b:	jne    0x64021382
6402137d:	inc    DWORD PTR [ecx+0x4]
64021380:	jmp    0x64021397
64021382:	lea    edi,[esi+0x1]
64021385:	push   edi
64021386:	call   0x64015aa0
6402138b:	inc    eax
6402138c:	push   eax
6402138d:	push   edi
6402138e:	push   esi
6402138f:	call   0x640166b0
64021394:	add    esp,0x10
64021397:	xor    eax,eax
64021399:	pop    edi
6402139a:	pop    esi
6402139b:	pop    ebx
6402139c:	pop    ebp
6402139d:	ret    
6402139e:	push   ebp
6402139f:	mov    ebp,esp
640213a1:	push   ecx
640213a2:	mov    edx,DWORD PTR [ebp+0xc]
640213a5:	movzx  eax,WORD PTR [edx+0x6]
640213a9:	push   ebx
640213aa:	mov    ecx,eax
640213ac:	push   esi
640213ad:	push   edi
640213ae:	shr    ecx,0x4
640213b1:	and    eax,0x8000
640213b6:	mov    edi,0x7ff
640213bb:	and    ecx,edi
640213bd:	mov    DWORD PTR [ebp+0xc],eax
640213c0:	mov    eax,DWORD PTR [edx+0x4]
640213c3:	mov    edx,DWORD PTR [edx]
640213c5:	movzx  ebx,cx
640213c8:	mov    esi,0x80000000
640213cd:	and    eax,0xfffff
640213d2:	test   ebx,ebx
640213d4:	mov    DWORD PTR [ebp-0x4],esi
640213d7:	je     0x640213ec
640213d9:	cmp    ebx,edi
640213db:	je     0x640213e5
640213dd:	add    ecx,0x3c00
640213e3:	jmp    0x6402140d
640213e5:	mov    edi,0x7fff
640213ea:	jmp    0x64021410
640213ec:	xor    ebx,ebx
640213ee:	cmp    eax,ebx
640213f0:	jne    0x64021404
640213f2:	cmp    edx,ebx
640213f4:	jne    0x64021404
640213f6:	mov    eax,DWORD PTR [ebp+0x8]
640213f9:	mov    cx,WORD PTR [ebp+0xc]
640213fd:	mov    DWORD PTR [eax+0x4],ebx
64021400:	mov    DWORD PTR [eax],ebx
64021402:	jmp    0x64021450
64021404:	add    ecx,0x3c01
6402140a:	mov    DWORD PTR [ebp-0x4],ebx
6402140d:	movzx  edi,cx
64021410:	mov    ecx,edx
64021412:	shr    ecx,0x15
64021415:	shl    eax,0xb
64021418:	or     ecx,eax
6402141a:	or     ecx,DWORD PTR [ebp-0x4]
6402141d:	mov    eax,DWORD PTR [ebp+0x8]
64021420:	shl    edx,0xb
64021423:	test   esi,ecx
64021425:	mov    DWORD PTR [eax+0x4],ecx
64021428:	mov    DWORD PTR [eax],edx
6402142a:	jne    0x6402144b
6402142c:	mov    ecx,DWORD PTR [eax]
6402142e:	mov    edx,DWORD PTR [eax+0x4]
64021431:	mov    ebx,ecx
64021433:	add    edx,edx
64021435:	shr    ebx,0x1f
64021438:	or     edx,ebx
6402143a:	add    ecx,ecx
6402143c:	add    edi,0xffff
64021442:	test   esi,edx
64021444:	mov    DWORD PTR [eax+0x4],edx
64021447:	mov    DWORD PTR [eax],ecx
64021449:	je     0x6402142c
6402144b:	mov    ecx,DWORD PTR [ebp+0xc]
6402144e:	or     ecx,edi
64021450:	pop    edi
64021451:	pop    esi
64021452:	mov    WORD PTR [eax+0x8],cx
64021456:	pop    ebx
64021457:	leave  
64021458:	ret    
64021459:	push   ebp
6402145a:	mov    ebp,esp
6402145c:	sub    esp,0x30
6402145f:	mov    eax,ds:0x640521ac
64021464:	xor    eax,ebp
64021466:	mov    DWORD PTR [ebp-0x4],eax
64021469:	mov    eax,DWORD PTR [ebp+0x14]
6402146c:	push   ebx
6402146d:	mov    ebx,DWORD PTR [ebp+0x10]
64021470:	push   esi
64021471:	mov    DWORD PTR [ebp-0x30],eax
64021474:	push   edi
64021475:	lea    eax,[ebp+0x8]
64021478:	push   eax
64021479:	lea    eax,[ebp-0x10]
6402147c:	push   eax
6402147d:	call   0x6402139e
64021482:	pop    ecx
64021483:	pop    ecx
64021484:	lea    eax,[ebp-0x2c]
64021487:	push   eax
64021488:	push   0x0
6402148a:	push   0x11
6402148c:	sub    esp,0xc
6402148f:	lea    esi,[ebp-0x10]
64021492:	mov    edi,esp
64021494:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
64021495:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
64021496:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
64021498:	call   0x64021ed1
6402149d:	mov    esi,DWORD PTR [ebp-0x30]
640214a0:	mov    DWORD PTR [ebx+0x8],eax
640214a3:	movsx  eax,BYTE PTR [ebp-0x2a]
640214a7:	mov    DWORD PTR [ebx],eax
640214a9:	movsx  eax,WORD PTR [ebp-0x2c]
640214ad:	mov    DWORD PTR [ebx+0x4],eax
640214b0:	lea    eax,[ebp-0x28]
640214b3:	push   eax
640214b4:	push   DWORD PTR [ebp+0x18]
640214b7:	push   esi
640214b8:	call   0x640164bd
640214bd:	add    esp,0x24
640214c0:	test   eax,eax
640214c2:	je     0x640214d3
640214c4:	xor    eax,eax
640214c6:	push   eax
640214c7:	push   eax
640214c8:	push   eax
640214c9:	push   eax
640214ca:	push   eax
640214cb:	call   0x64013cf6
640214d0:	add    esp,0x14
640214d3:	mov    ecx,DWORD PTR [ebp-0x4]
640214d6:	pop    edi
640214d7:	mov    DWORD PTR [ebx+0xc],esi
640214da:	pop    esi
640214db:	mov    eax,ebx
640214dd:	xor    ecx,ebp
640214df:	pop    ebx
640214e0:	call   0x64013ca6
640214e5:	leave  
640214e6:	ret    
640214e7:	int3   
640214e8:	int3   
640214e9:	int3   
640214ea:	int3   
640214eb:	int3   
640214ec:	int3   
640214ed:	int3   
640214ee:	int3   
640214ef:	int3   
640214f0:	push   edi
640214f1:	push   esi
640214f2:	push   ebp
640214f3:	xor    edi,edi
640214f5:	xor    ebp,ebp
640214f7:	mov    eax,DWORD PTR [esp+0x14]
640214fb:	or     eax,eax
640214fd:	jge    0x64021514
640214ff:	inc    edi
64021500:	inc    ebp
64021501:	mov    edx,DWORD PTR [esp+0x10]
64021505:	neg    eax
64021507:	neg    edx
64021509:	sbb    eax,0x0
6402150c:	mov    DWORD PTR [esp+0x14],eax
64021510:	mov    DWORD PTR [esp+0x10],edx
64021514:	mov    eax,DWORD PTR [esp+0x1c]
64021518:	or     eax,eax
6402151a:	jge    0x64021530
6402151c:	inc    edi
6402151d:	mov    edx,DWORD PTR [esp+0x18]
64021521:	neg    eax
64021523:	neg    edx
64021525:	sbb    eax,0x0
64021528:	mov    DWORD PTR [esp+0x1c],eax
6402152c:	mov    DWORD PTR [esp+0x18],edx
64021530:	or     eax,eax
64021532:	jne    0x6402155c
64021534:	mov    ecx,DWORD PTR [esp+0x18]
64021538:	mov    eax,DWORD PTR [esp+0x14]
6402153c:	xor    edx,edx
6402153e:	div    ecx
64021540:	mov    ebx,eax
64021542:	mov    eax,DWORD PTR [esp+0x10]
64021546:	div    ecx
64021548:	mov    esi,eax
6402154a:	mov    eax,ebx
6402154c:	mul    DWORD PTR [esp+0x18]
64021550:	mov    ecx,eax
64021552:	mov    eax,esi
64021554:	mul    DWORD PTR [esp+0x18]
64021558:	add    edx,ecx
6402155a:	jmp    0x640215a3
6402155c:	mov    ebx,eax
6402155e:	mov    ecx,DWORD PTR [esp+0x18]
64021562:	mov    edx,DWORD PTR [esp+0x14]
64021566:	mov    eax,DWORD PTR [esp+0x10]
6402156a:	shr    ebx,1
6402156c:	rcr    ecx,1
6402156e:	shr    edx,1
64021570:	rcr    eax,1
64021572:	or     ebx,ebx
64021574:	jne    0x6402156a
64021576:	div    ecx
64021578:	mov    esi,eax
6402157a:	mul    DWORD PTR [esp+0x1c]
6402157e:	mov    ecx,eax
64021580:	mov    eax,DWORD PTR [esp+0x18]
64021584:	mul    esi
64021586:	add    edx,ecx
64021588:	jb     0x64021598
6402158a:	cmp    edx,DWORD PTR [esp+0x14]
6402158e:	ja     0x64021598
64021590:	jb     0x640215a1
64021592:	cmp    eax,DWORD PTR [esp+0x10]
64021596:	jbe    0x640215a1
64021598:	dec    esi
64021599:	sub    eax,DWORD PTR [esp+0x18]
6402159d:	sbb    edx,DWORD PTR [esp+0x1c]
640215a1:	xor    ebx,ebx
640215a3:	sub    eax,DWORD PTR [esp+0x10]
640215a7:	sbb    edx,DWORD PTR [esp+0x14]
640215ab:	dec    ebp
640215ac:	jns    0x640215b5
640215ae:	neg    edx
640215b0:	neg    eax
640215b2:	sbb    edx,0x0
640215b5:	mov    ecx,edx
640215b7:	mov    edx,ebx
640215b9:	mov    ebx,ecx
640215bb:	mov    ecx,eax
640215bd:	mov    eax,esi
640215bf:	dec    edi
640215c0:	jne    0x640215c9
640215c2:	neg    edx
640215c4:	neg    eax
640215c6:	sbb    edx,0x0
640215c9:	pop    ebp
640215ca:	pop    esi
640215cb:	pop    edi
640215cc:	ret    0x10
640215cf:	push   ebp
640215d0:	mov    ebp,esp
640215d2:	mov    eax,DWORD PTR [ebp+0x10]
640215d5:	mov    ecx,DWORD PTR [ebp+0xc]
640215d8:	and    eax,0xfff7ffff
640215dd:	and    ecx,eax
640215df:	test   ecx,0xfcf0fce0
640215e5:	push   esi
640215e6:	je     0x64021619
640215e8:	push   edi
640215e9:	mov    edi,DWORD PTR [ebp+0x8]
640215ec:	xor    esi,esi
640215ee:	cmp    edi,esi
640215f0:	je     0x640215fd
640215f2:	push   esi
640215f3:	push   esi
640215f4:	call   0x640228c5
640215f9:	pop    ecx
640215fa:	pop    ecx
640215fb:	mov    DWORD PTR [edi],eax
640215fd:	call   0x64016663
64021602:	push   0x16
64021604:	pop    edi
64021605:	push   esi
64021606:	push   esi
64021607:	push   esi
64021608:	push   esi
64021609:	push   esi
6402160a:	mov    DWORD PTR [eax],edi
6402160c:	call   0x64013df2
64021611:	add    esp,0x14
64021614:	mov    eax,edi
64021616:	pop    edi
64021617:	jmp    0x64021636
64021619:	mov    esi,DWORD PTR [ebp+0x8]
6402161c:	test   esi,esi
6402161e:	push   eax
6402161f:	push   DWORD PTR [ebp+0xc]
64021622:	je     0x6402162d
64021624:	call   0x640228c5
64021629:	mov    DWORD PTR [esi],eax
6402162b:	jmp    0x64021632
6402162d:	call   0x640228c5
64021632:	pop    ecx
64021633:	pop    ecx
64021634:	xor    eax,eax
64021636:	pop    esi
64021637:	pop    ebp
64021638:	ret    
64021639:	push   ebp
6402163a:	mov    ebp,esp
6402163c:	push   ecx
6402163d:	push   esi
6402163e:	mov    esi,DWORD PTR [ebp+0xc]
64021641:	push   esi
64021642:	call   0x64019d8b
64021647:	mov    DWORD PTR [ebp+0xc],eax
6402164a:	mov    eax,DWORD PTR [esi+0xc]
6402164d:	test   al,0x82
6402164f:	pop    ecx
64021650:	jne    0x6402166b
64021652:	call   0x64016663
64021657:	mov    DWORD PTR [eax],0x9
6402165d:	or     DWORD PTR [esi+0xc],0x20
64021661:	mov    eax,0xffff
64021666:	jmp    0x640217a6
6402166b:	test   al,0x40
6402166d:	je     0x6402167c
6402166f:	call   0x64016663
64021674:	mov    DWORD PTR [eax],0x22
6402167a:	jmp    0x6402165d
6402167c:	test   al,0x1
6402167e:	je     0x64021697
64021680:	and    DWORD PTR [esi+0x4],0x0
64021684:	test   al,0x10
64021686:	je     0x64021717
6402168c:	mov    ecx,DWORD PTR [esi+0x8]
6402168f:	and    eax,0xfffffffe
64021692:	mov    DWORD PTR [esi],ecx
64021694:	mov    DWORD PTR [esi+0xc],eax
64021697:	mov    eax,DWORD PTR [esi+0xc]
6402169a:	and    DWORD PTR [esi+0x4],0x0
6402169e:	and    DWORD PTR [ebp-0x4],0x0
640216a2:	push   ebx
640216a3:	push   0x2
640216a5:	and    eax,0xffffffef
640216a8:	pop    ebx
640216a9:	or     eax,ebx
640216ab:	test   ax,0x10c
640216af:	mov    DWORD PTR [esi+0xc],eax
640216b2:	jne    0x640216e0
640216b4:	call   0x64019a95
640216b9:	add    eax,0x20
640216bc:	cmp    esi,eax
640216be:	je     0x640216cc
640216c0:	call   0x64019a95
640216c5:	add    eax,0x40
640216c8:	cmp    esi,eax
640216ca:	jne    0x640216d9
640216cc:	push   DWORD PTR [ebp+0xc]
640216cf:	call   0x6401eaf3
640216d4:	test   eax,eax
640216d6:	pop    ecx
640216d7:	jne    0x640216e0
640216d9:	push   esi
640216da:	call   0x6401eaaf
640216df:	pop    ecx
640216e0:	test   WORD PTR [esi+0xc],0x108
640216e6:	push   edi
640216e7:	je     0x64021770
640216ed:	mov    eax,DWORD PTR [esi+0x8]
640216f0:	mov    edi,DWORD PTR [esi]
640216f2:	lea    ecx,[eax+0x2]
640216f5:	mov    DWORD PTR [esi],ecx
640216f7:	mov    ecx,DWORD PTR [esi+0x18]
640216fa:	sub    edi,eax
640216fc:	sub    ecx,ebx
640216fe:	test   edi,edi
64021700:	mov    DWORD PTR [esi+0x4],ecx
64021703:	jle    0x64021722
64021705:	push   edi
64021706:	push   eax
64021707:	push   DWORD PTR [ebp+0xc]
6402170a:	call   0x6401b1d8
6402170f:	add    esp,0xc
64021712:	mov    DWORD PTR [ebp-0x4],eax
64021715:	jmp    0x64021765
64021717:	or     eax,0x20
6402171a:	mov    DWORD PTR [esi+0xc],eax
6402171d:	jmp    0x64021661
64021722:	mov    ecx,DWORD PTR [ebp+0xc]
64021725:	cmp    ecx,0xffffffff
64021728:	je     0x64021745
6402172a:	cmp    ecx,0xfffffffe
6402172d:	je     0x64021745
6402172f:	mov    eax,ecx
64021731:	and    eax,0x1f
64021734:	mov    edx,ecx
64021736:	sar    edx,0x5
64021739:	shl    eax,0x6
6402173c:	add    eax,DWORD PTR [edx*4+0x640556c0]
64021743:	jmp    0x6402174a
64021745:	mov    eax,0x64052488
6402174a:	test   BYTE PTR [eax+0x4],0x20
6402174e:	je     0x64021765
64021750:	push   ebx
64021751:	push   0x0
64021753:	push   0x0
64021755:	push   ecx
64021756:	call   0x6401972e
6402175b:	and    eax,edx
6402175d:	add    esp,0x10
64021760:	cmp    eax,0xffffffff
64021763:	je     0x64021792
64021765:	mov    eax,DWORD PTR [esi+0x8]
64021768:	mov    ebx,DWORD PTR [ebp+0x8]
6402176b:	mov    WORD PTR [eax],bx
6402176e:	jmp    0x6402178d
64021770:	push   0x2
64021772:	lea    eax,[ebp-0x4]
64021775:	push   eax
64021776:	push   DWORD PTR [ebp+0xc]
64021779:	mov    edi,ebx
6402177b:	mov    ebx,DWORD PTR [ebp+0x8]
6402177e:	mov    WORD PTR [ebp-0x4],bx
64021782:	call   0x6401b1d8
64021787:	add    esp,0xc
6402178a:	mov    DWORD PTR [ebp-0x4],eax
6402178d:	cmp    DWORD PTR [ebp-0x4],edi
64021790:	je     0x6402179d
64021792:	or     DWORD PTR [esi+0xc],0x20
64021796:	mov    eax,0xffff
6402179b:	jmp    0x640217a4
6402179d:	mov    eax,ebx
6402179f:	and    eax,0xffff
640217a4:	pop    edi
640217a5:	pop    ebx
640217a6:	pop    esi
640217a7:	leave  
640217a8:	ret    
640217a9:	int3   
640217aa:	int3   
640217ab:	int3   
640217ac:	int3   
640217ad:	int3   
640217ae:	int3   
640217af:	int3   
640217b0:	push   ebp
640217b1:	mov    ebp,esp
640217b3:	push   edi
640217b4:	push   esi
640217b5:	push   ebx
640217b6:	mov    ecx,DWORD PTR [ebp+0x10]
640217b9:	or     ecx,ecx
640217bb:	je     0x6402180a
640217bd:	mov    esi,DWORD PTR [ebp+0x8]
640217c0:	mov    edi,DWORD PTR [ebp+0xc]
640217c3:	mov    bh,0x41
640217c5:	mov    bl,0x5a
640217c7:	mov    dh,0x20
640217c9:	lea    ecx,[ecx+0x0]
640217cc:	mov    ah,BYTE PTR [esi]
640217ce:	or     ah,ah
640217d0:	mov    al,BYTE PTR [edi]
640217d2:	je     0x640217fb
640217d4:	or     al,al
640217d6:	je     0x640217fb
640217d8:	add    esi,0x1
640217db:	add    edi,0x1
640217de:	cmp    ah,bh
640217e0:	jb     0x640217e8
640217e2:	cmp    ah,bl
640217e4:	ja     0x640217e8
640217e6:	add    ah,dh
640217e8:	cmp    al,bh
640217ea:	jb     0x640217f2
640217ec:	cmp    al,bl
640217ee:	ja     0x640217f2
640217f0:	add    al,dh
640217f2:	cmp    ah,al
640217f4:	jne    0x64021801
640217f6:	sub    ecx,0x1
640217f9:	jne    0x640217cc
640217fb:	xor    ecx,ecx
640217fd:	cmp    ah,al
640217ff:	je     0x6402180a
64021801:	mov    ecx,0xffffffff
64021806:	jb     0x6402180a
64021808:	neg    ecx
6402180a:	mov    eax,ecx
6402180c:	pop    ebx
6402180d:	pop    esi
6402180e:	pop    edi
6402180f:	leave  
64021810:	ret    
64021811:	push   ebp
64021812:	mov    ebp,esp
64021814:	sub    esp,0x7c
64021817:	mov    eax,ds:0x640521ac
6402181c:	xor    eax,ebp
6402181e:	mov    DWORD PTR [ebp-0x4],eax
64021821:	mov    eax,DWORD PTR [ebp+0x8]
64021824:	push   ebx
64021825:	xor    ebx,ebx
64021827:	push   esi
64021828:	xor    esi,esi
6402182a:	mov    DWORD PTR [ebp-0x7c],eax
6402182d:	mov    eax,DWORD PTR [ebp+0xc]
64021830:	inc    esi
64021831:	xor    ecx,ecx
64021833:	cmp    DWORD PTR [ebp+0x24],ebx
64021836:	push   edi
64021837:	mov    DWORD PTR [ebp-0x70],eax
6402183a:	lea    edi,[ebp-0x20]
6402183d:	mov    DWORD PTR [ebp-0x74],ebx
64021840:	mov    DWORD PTR [ebp-0x68],esi
64021843:	mov    DWORD PTR [ebp-0x4c],ebx
64021846:	mov    DWORD PTR [ebp-0x58],ebx
64021849:	mov    DWORD PTR [ebp-0x5c],ebx
6402184c:	mov    DWORD PTR [ebp-0x60],ebx
6402184f:	mov    DWORD PTR [ebp-0x64],ebx
64021852:	mov    DWORD PTR [ebp-0x50],ebx
64021855:	mov    DWORD PTR [ebp-0x6c],ebx
64021858:	jne    0x64021879
6402185a:	call   0x64016663
6402185f:	push   ebx
64021860:	push   ebx
64021861:	push   ebx
64021862:	push   ebx
64021863:	push   ebx
64021864:	mov    DWORD PTR [eax],0x16
6402186a:	call   0x64013df2
6402186f:	add    esp,0x14
64021872:	xor    eax,eax
64021874:	jmp    0x64021e92
64021879:	mov    edx,DWORD PTR [ebp+0x10]
6402187c:	mov    DWORD PTR [ebp-0x54],edx
6402187f:	mov    al,BYTE PTR [edx]
64021881:	cmp    al,0x20
64021883:	je     0x64021891
64021885:	cmp    al,0x9
64021887:	je     0x64021891
64021889:	cmp    al,0xa
6402188b:	je     0x64021891
6402188d:	cmp    al,0xd
6402188f:	jne    0x64021894
64021891:	inc    edx
64021892:	jmp    0x6402187f
64021894:	mov    bl,0x30
64021896:	mov    al,BYTE PTR [edx]
64021898:	inc    edx
64021899:	cmp    ecx,0xb
6402189c:	ja     0x64021ad1
640218a2:	jmp    DWORD PTR [ecx*4+0x64021ea1]
640218a9:	mov    cl,al
640218ab:	sub    cl,0x31
640218ae:	cmp    cl,0x8
640218b1:	ja     0x640218b9
640218b3:	push   0x3
640218b5:	pop    ecx
640218b6:	dec    edx
640218b7:	jmp    0x64021896
640218b9:	mov    ecx,DWORD PTR [ebp+0x24]
640218bc:	mov    ecx,DWORD PTR [ecx]
640218be:	mov    ecx,DWORD PTR [ecx+0xbc]
640218c4:	mov    ecx,DWORD PTR [ecx]
640218c6:	cmp    al,BYTE PTR [ecx]
640218c8:	jne    0x640218cf
640218ca:	push   0x5
640218cc:	pop    ecx
640218cd:	jmp    0x64021896
640218cf:	movsx  eax,al
640218d2:	sub    eax,0x2b
640218d5:	je     0x640218f4
640218d7:	dec    eax
640218d8:	dec    eax
640218d9:	je     0x640218e8
640218db:	sub    eax,0x3
640218de:	jne    0x64021a6f
640218e4:	mov    ecx,esi
640218e6:	jmp    0x64021896
640218e8:	push   0x2
640218ea:	pop    ecx
640218eb:	mov    DWORD PTR [ebp-0x74],0x8000
640218f2:	jmp    0x64021896
640218f4:	and    DWORD PTR [ebp-0x74],0x0
640218f8:	push   0x2
640218fa:	pop    ecx
640218fb:	jmp    0x64021896
640218fd:	mov    cl,al
640218ff:	sub    cl,0x31
64021902:	cmp    cl,0x8
64021905:	mov    DWORD PTR [ebp-0x58],esi
64021908:	jbe    0x640218b3
6402190a:	mov    ecx,DWORD PTR [ebp+0x24]
6402190d:	mov    ecx,DWORD PTR [ecx]
6402190f:	mov    ecx,DWORD PTR [ecx+0xbc]
64021915:	mov    ecx,DWORD PTR [ecx]
64021917:	cmp    al,BYTE PTR [ecx]
64021919:	jne    0x6402191f
6402191b:	push   0x4
6402191d:	jmp    0x640218cc
6402191f:	cmp    al,0x2b
64021921:	je     0x6402194b
64021923:	cmp    al,0x2d
64021925:	je     0x6402194b
64021927:	cmp    al,bl
64021929:	je     0x640218e4
6402192b:	cmp    al,0x43
6402192d:	jle    0x64021a6f
64021933:	cmp    al,0x45
64021935:	jle    0x64021947
64021937:	cmp    al,0x63
64021939:	jle    0x64021a6f
6402193f:	cmp    al,0x65
64021941:	jg     0x64021a6f
64021947:	push   0x6
64021949:	jmp    0x640218cc
6402194b:	dec    edx
6402194c:	push   0xb
6402194e:	jmp    0x640218cc
64021953:	mov    cl,al
64021955:	sub    cl,0x31
64021958:	cmp    cl,0x8
6402195b:	jbe    0x640218b3
64021961:	mov    ecx,DWORD PTR [ebp+0x24]
64021964:	mov    ecx,DWORD PTR [ecx]
64021966:	mov    ecx,DWORD PTR [ecx+0xbc]
6402196c:	mov    ecx,DWORD PTR [ecx]
6402196e:	cmp    al,BYTE PTR [ecx]
64021970:	je     0x640218ca
64021976:	cmp    al,bl
64021978:	je     0x640218e4
6402197e:	mov    edx,DWORD PTR [ebp-0x54]
64021981:	jmp    0x64021a9a
64021986:	mov    DWORD PTR [ebp-0x58],esi
64021989:	jmp    0x640219a5
6402198b:	cmp    al,0x39
6402198d:	jg     0x640219a9
6402198f:	cmp    DWORD PTR [ebp-0x4c],0x19
64021993:	jae    0x6402199f
64021995:	inc    DWORD PTR [ebp-0x4c]
64021998:	sub    al,bl
6402199a:	mov    BYTE PTR [edi],al
6402199c:	inc    edi
6402199d:	jmp    0x640219a2
6402199f:	inc    DWORD PTR [ebp-0x50]
640219a2:	mov    al,BYTE PTR [edx]
640219a4:	inc    edx
640219a5:	cmp    al,bl
640219a7:	jge    0x6402198b
640219a9:	mov    ecx,DWORD PTR [ebp+0x24]
640219ac:	mov    ecx,DWORD PTR [ecx]
640219ae:	mov    ecx,DWORD PTR [ecx+0xbc]
640219b4:	mov    ecx,DWORD PTR [ecx]
640219b6:	cmp    al,BYTE PTR [ecx]
640219b8:	je     0x6402191b
640219be:	cmp    al,0x2b
640219c0:	je     0x6402194b
640219c2:	cmp    al,0x2d
640219c4:	je     0x6402194b
640219c6:	jmp    0x6402192b
640219cb:	cmp    DWORD PTR [ebp-0x4c],0x0
640219cf:	mov    DWORD PTR [ebp-0x58],esi
640219d2:	mov    DWORD PTR [ebp-0x5c],esi
640219d5:	jne    0x640219fd
640219d7:	jmp    0x640219df
640219d9:	dec    DWORD PTR [ebp-0x50]
640219dc:	mov    al,BYTE PTR [edx]
640219de:	inc    edx
640219df:	cmp    al,bl
640219e1:	je     0x640219d9
640219e3:	jmp    0x640219fd
640219e5:	cmp    al,0x39
640219e7:	jg     0x640219be
640219e9:	cmp    DWORD PTR [ebp-0x4c],0x19
640219ed:	jae    0x640219fa
640219ef:	inc    DWORD PTR [ebp-0x4c]
640219f2:	sub    al,bl
640219f4:	mov    BYTE PTR [edi],al
640219f6:	inc    edi
640219f7:	dec    DWORD PTR [ebp-0x50]
640219fa:	mov    al,BYTE PTR [edx]
640219fc:	inc    edx
640219fd:	cmp    al,bl
640219ff:	jge    0x640219e5
64021a01:	jmp    0x640219be
64021a03:	sub    al,bl
64021a05:	cmp    al,0x9
64021a07:	mov    DWORD PTR [ebp-0x5c],esi
64021a0a:	ja     0x6402197e
64021a10:	push   0x4
64021a12:	jmp    0x640218b5
64021a17:	lea    ecx,[edx-0x2]
64021a1a:	mov    DWORD PTR [ebp-0x54],ecx
64021a1d:	mov    cl,al
64021a1f:	sub    cl,0x31
64021a22:	cmp    cl,0x8
64021a25:	ja     0x64021a2e
64021a27:	push   0x9
64021a29:	jmp    0x640218b5
64021a2e:	movsx  eax,al
64021a31:	sub    eax,0x2b
64021a34:	je     0x64021a56
64021a36:	dec    eax
64021a37:	dec    eax
64021a38:	je     0x64021a4a
64021a3a:	sub    eax,0x3
64021a3d:	jne    0x6402197e
64021a43:	push   0x8
64021a45:	jmp    0x640218cc
64021a4a:	or     DWORD PTR [ebp-0x68],0xffffffff
64021a4e:	push   0x7
64021a50:	pop    ecx
64021a51:	jmp    0x64021896
64021a56:	push   0x7
64021a58:	jmp    0x640218cc
64021a5d:	mov    DWORD PTR [ebp-0x60],esi
64021a60:	jmp    0x64021a65
64021a62:	mov    al,BYTE PTR [edx]
64021a64:	inc    edx
64021a65:	cmp    al,bl
64021a67:	je     0x64021a62
64021a69:	sub    al,0x31
64021a6b:	cmp    al,0x8
64021a6d:	jbe    0x64021a27
64021a6f:	dec    edx
64021a70:	jmp    0x64021a9a
64021a72:	mov    cl,al
64021a74:	sub    cl,0x31
64021a77:	cmp    cl,0x8
64021a7a:	jbe    0x64021a27
64021a7c:	cmp    al,bl
64021a7e:	jmp    0x64021a3d
64021a80:	cmp    DWORD PTR [ebp+0x20],0x0
64021a84:	je     0x64021acd
64021a86:	movsx  eax,al
64021a89:	sub    eax,0x2b
64021a8c:	lea    ecx,[edx-0x1]
64021a8f:	mov    DWORD PTR [ebp-0x54],ecx
64021a92:	je     0x64021a56
64021a94:	dec    eax
64021a95:	dec    eax
64021a96:	je     0x64021a4a
64021a98:	mov    edx,ecx
64021a9a:	cmp    DWORD PTR [ebp-0x58],0x0
64021a9e:	mov    eax,DWORD PTR [ebp-0x70]
64021aa1:	mov    DWORD PTR [eax],edx
64021aa3:	je     0x64021e4d
64021aa9:	push   0x18
64021aab:	pop    eax
64021aac:	cmp    DWORD PTR [ebp-0x4c],eax
64021aaf:	jbe    0x64021ac1
64021ab1:	cmp    BYTE PTR [ebp-0x9],0x5
64021ab5:	jl     0x64021aba
64021ab7:	inc    BYTE PTR [ebp-0x9]
64021aba:	dec    edi
64021abb:	inc    DWORD PTR [ebp-0x50]
64021abe:	mov    DWORD PTR [ebp-0x4c],eax
64021ac1:	cmp    DWORD PTR [ebp-0x4c],0x0
64021ac5:	jbe    0x64021e74
64021acb:	jmp    0x64021b26
64021acd:	push   0xa
64021acf:	pop    ecx
64021ad0:	dec    edx
64021ad1:	cmp    ecx,0xa
64021ad4:	jne    0x64021896
64021ada:	jmp    0x64021a9a
64021adc:	mov    DWORD PTR [ebp-0x60],esi
64021adf:	xor    ecx,ecx
64021ae1:	jmp    0x64021afc
64021ae3:	cmp    al,0x39
64021ae5:	jg     0x64021b07
64021ae7:	imul   ecx,ecx,0xa
64021aea:	movsx  esi,al
64021aed:	lea    ecx,[ecx+esi*1-0x30]
64021af1:	cmp    ecx,0x1450
64021af7:	jg     0x64021b02
64021af9:	mov    al,BYTE PTR [edx]
64021afb:	inc    edx
64021afc:	cmp    al,bl
64021afe:	jge    0x64021ae3
64021b00:	jmp    0x64021b07
64021b02:	mov    ecx,0x1451
64021b07:	mov    DWORD PTR [ebp-0x64],ecx
64021b0a:	jmp    0x64021b17
64021b0c:	cmp    al,0x39
64021b0e:	jg     0x64021a6f
64021b14:	mov    al,BYTE PTR [edx]
64021b16:	inc    edx
64021b17:	cmp    al,bl
64021b19:	jge    0x64021b0c
64021b1b:	jmp    0x64021a6f
64021b20:	dec    DWORD PTR [ebp-0x4c]
64021b23:	inc    DWORD PTR [ebp-0x50]
64021b26:	dec    edi
64021b27:	cmp    BYTE PTR [edi],0x0
64021b2a:	je     0x64021b20
64021b2c:	lea    eax,[ebp-0x3c]
64021b2f:	push   eax
64021b30:	push   DWORD PTR [ebp-0x4c]
64021b33:	lea    eax,[ebp-0x20]
64021b36:	push   eax
64021b37:	call   0x640208f2
64021b3c:	mov    eax,DWORD PTR [ebp-0x64]
64021b3f:	xor    ecx,ecx
64021b41:	add    esp,0xc
64021b44:	cmp    DWORD PTR [ebp-0x68],ecx
64021b47:	jge    0x64021b4b
64021b49:	neg    eax
64021b4b:	add    eax,DWORD PTR [ebp-0x50]
64021b4e:	cmp    DWORD PTR [ebp-0x60],ecx
64021b51:	jne    0x64021b56
64021b53:	add    eax,DWORD PTR [ebp+0x18]
64021b56:	cmp    DWORD PTR [ebp-0x5c],ecx
64021b59:	jne    0x64021b5e
64021b5b:	sub    eax,DWORD PTR [ebp+0x1c]
64021b5e:	cmp    eax,0x1450
64021b63:	jg     0x64021e56
64021b69:	cmp    eax,0xffffebb0
64021b6e:	jl     0x64021e6d
64021b74:	mov    esi,0x64053150
64021b79:	sub    esi,0x60
64021b7c:	cmp    eax,ecx
64021b7e:	mov    DWORD PTR [ebp-0x54],eax
64021b81:	je     0x64021e3b
64021b87:	jge    0x64021b96
64021b89:	neg    eax
64021b8b:	mov    esi,0x640532b0
64021b90:	mov    DWORD PTR [ebp-0x54],eax
64021b93:	sub    esi,0x60
64021b96:	cmp    DWORD PTR [ebp+0x14],ecx
64021b99:	jne    0x64021b9f
64021b9b:	mov    WORD PTR [ebp-0x3c],cx
64021b9f:	cmp    DWORD PTR [ebp-0x54],ecx
64021ba2:	je     0x64021e3b
64021ba8:	mov    eax,DWORD PTR [ebp-0x54]
64021bab:	sar    DWORD PTR [ebp-0x54],0x3
64021baf:	add    esi,0x54
64021bb2:	and    eax,0x7
64021bb5:	test   eax,eax
64021bb7:	mov    DWORD PTR [ebp-0x4c],esi
64021bba:	je     0x64021e31
64021bc0:	imul   eax,eax,0xc
64021bc3:	add    eax,esi
64021bc5:	mov    ebx,eax
64021bc7:	cmp    WORD PTR [ebx],0x8000
64021bcc:	mov    DWORD PTR [ebp-0x70],ebx
64021bcf:	jb     0x64021be5
64021bd1:	mov    esi,ebx
64021bd3:	lea    edi,[ebp-0x48]
64021bd6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
64021bd7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
64021bd8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
64021bd9:	dec    DWORD PTR [ebp-0x46]
64021bdc:	mov    esi,DWORD PTR [ebp-0x4c]
64021bdf:	lea    ebx,[ebp-0x48]
64021be2:	mov    DWORD PTR [ebp-0x70],ebx
64021be5:	movzx  edx,WORD PTR [ebx+0xa]
64021be9:	mov    ecx,DWORD PTR [ebp-0x32]
64021bec:	xor    eax,eax
64021bee:	mov    DWORD PTR [ebp-0x50],eax
64021bf1:	mov    DWORD PTR [ebp-0x2c],eax
64021bf4:	mov    DWORD PTR [ebp-0x28],eax
64021bf7:	mov    DWORD PTR [ebp-0x24],eax
64021bfa:	mov    eax,edx
64021bfc:	mov    edi,0x7fff
64021c01:	xor    eax,ecx
64021c03:	and    ecx,edi
64021c05:	and    edx,edi
64021c07:	and    eax,0x8000
64021c0c:	cmp    cx,0x7fff
64021c11:	lea    edi,[edx+ecx*1]
64021c14:	movzx  edi,di
64021c17:	jae    0x64021e17
64021c1d:	cmp    dx,0x7fff
64021c22:	jae    0x64021e17
64021c28:	cmp    di,0xbffd
64021c2d:	ja     0x64021e17
64021c33:	cmp    di,0x3fbf
64021c38:	ja     0x64021c47
64021c3a:	xor    eax,eax
64021c3c:	mov    DWORD PTR [ebp-0x38],eax
64021c3f:	mov    DWORD PTR [ebp-0x3c],eax
64021c42:	jmp    0x64021e2e
64021c47:	test   cx,cx
64021c4a:	jne    0x64021c6b
64021c4c:	inc    edi
64021c4d:	test   DWORD PTR [ebp-0x34],0x7fffffff
64021c54:	jne    0x64021c6b
64021c56:	cmp    DWORD PTR [ebp-0x38],0x0
64021c5a:	jne    0x64021c6b
64021c5c:	cmp    DWORD PTR [ebp-0x3c],0x0
64021c60:	jne    0x64021c6b
64021c62:	and    WORD PTR [ebp-0x32],cx
64021c66:	jmp    0x64021e31
64021c6b:	xor    ecx,ecx
64021c6d:	cmp    dx,cx
64021c70:	jne    0x64021c93
64021c72:	inc    edi
64021c73:	test   DWORD PTR [ebx+0x8],0x7fffffff
64021c7a:	jne    0x64021c93
64021c7c:	cmp    DWORD PTR [ebx+0x4],ecx
64021c7f:	jne    0x64021c93
64021c81:	cmp    DWORD PTR [ebx],ecx
64021c83:	jne    0x64021c93
64021c85:	mov    DWORD PTR [ebp-0x34],ecx
64021c88:	mov    DWORD PTR [ebp-0x38],ecx
64021c8b:	mov    DWORD PTR [ebp-0x3c],ecx
64021c8e:	jmp    0x64021e31
64021c93:	and    DWORD PTR [ebp-0x68],ecx
64021c96:	lea    esi,[ebp-0x28]
64021c99:	mov    DWORD PTR [ebp-0x58],0x5
64021ca0:	mov    ecx,DWORD PTR [ebp-0x68]
64021ca3:	mov    edx,DWORD PTR [ebp-0x58]
64021ca6:	add    ecx,ecx
64021ca8:	test   edx,edx
64021caa:	mov    DWORD PTR [ebp-0x64],edx
64021cad:	jle    0x64021d04
64021caf:	lea    ecx,[ebp+ecx*1-0x3c]
64021cb3:	add    ebx,0x8
64021cb6:	mov    DWORD PTR [ebp-0x5c],ecx
64021cb9:	mov    DWORD PTR [ebp-0x60],ebx
64021cbc:	mov    ecx,DWORD PTR [ebp-0x60]
64021cbf:	mov    edx,DWORD PTR [ebp-0x5c]
64021cc2:	movzx  edx,WORD PTR [edx]
64021cc5:	movzx  ecx,WORD PTR [ecx]
64021cc8:	and    DWORD PTR [ebp-0x78],0x0
64021ccc:	imul   ecx,edx
64021ccf:	mov    edx,DWORD PTR [esi-0x4]
64021cd2:	lea    ebx,[edx+ecx*1]
64021cd5:	cmp    ebx,edx
64021cd7:	jb     0x64021cdd
64021cd9:	cmp    ebx,ecx
64021cdb:	jae    0x64021ce4
64021cdd:	mov    DWORD PTR [ebp-0x78],0x1
64021ce4:	cmp    DWORD PTR [ebp-0x78],0x0
64021ce8:	mov    DWORD PTR [esi-0x4],ebx
64021ceb:	je     0x64021cf0
64021ced:	inc    WORD PTR [esi]
64021cf0:	add    DWORD PTR [ebp-0x5c],0x2
64021cf4:	sub    DWORD PTR [ebp-0x60],0x2
64021cf8:	dec    DWORD PTR [ebp-0x64]
64021cfb:	cmp    DWORD PTR [ebp-0x64],0x0
64021cff:	jg     0x64021cbc
64021d01:	mov    ebx,DWORD PTR [ebp-0x70]
64021d04:	inc    esi
64021d05:	inc    esi
64021d06:	inc    DWORD PTR [ebp-0x68]
64021d09:	dec    DWORD PTR [ebp-0x58]
64021d0c:	cmp    DWORD PTR [ebp-0x58],0x0
64021d10:	jg     0x64021ca0
64021d12:	add    edi,0xc002
64021d18:	test   di,di
64021d1b:	jle    0x64021d58
64021d1d:	test   DWORD PTR [ebp-0x24],0x80000000
64021d24:	jne    0x64021d53
64021d26:	mov    esi,DWORD PTR [ebp-0x28]
64021d29:	mov    ecx,DWORD PTR [ebp-0x2c]
64021d2c:	shl    DWORD PTR [ebp-0x2c],1
64021d2f:	shr    ecx,0x1f
64021d32:	mov    edx,esi
64021d34:	add    esi,esi
64021d36:	or     esi,ecx
64021d38:	mov    ecx,DWORD PTR [ebp-0x24]
64021d3b:	shr    edx,0x1f
64021d3e:	add    ecx,ecx
64021d40:	or     ecx,edx
64021d42:	add    edi,0xffff
64021d48:	test   di,di
64021d4b:	mov    DWORD PTR [ebp-0x28],esi
64021d4e:	mov    DWORD PTR [ebp-0x24],ecx
64021d51:	jg     0x64021d1d
64021d53:	test   di,di
64021d56:	jg     0x64021da5
64021d58:	add    edi,0xffff
64021d5e:	test   di,di
64021d61:	jge    0x64021da5
64021d63:	mov    ecx,edi
64021d65:	neg    ecx
64021d67:	movzx  esi,cx
64021d6a:	add    edi,esi
64021d6c:	test   BYTE PTR [ebp-0x2c],0x1
64021d70:	je     0x64021d75
64021d72:	inc    DWORD PTR [ebp-0x50]
64021d75:	mov    ecx,DWORD PTR [ebp-0x24]
64021d78:	mov    ebx,DWORD PTR [ebp-0x28]
64021d7b:	mov    edx,DWORD PTR [ebp-0x28]
64021d7e:	shr    DWORD PTR [ebp-0x24],1
64021d81:	shl    ecx,0x1f
64021d84:	shr    ebx,1
64021d86:	or     ebx,ecx
64021d88:	mov    ecx,DWORD PTR [ebp-0x2c]
64021d8b:	shl    edx,0x1f
64021d8e:	shr    ecx,1
64021d90:	or     ecx,edx
64021d92:	dec    esi
64021d93:	mov    DWORD PTR [ebp-0x28],ebx
64021d96:	mov    DWORD PTR [ebp-0x2c],ecx
64021d99:	jne    0x64021d6c
64021d9b:	cmp    DWORD PTR [ebp-0x50],esi
64021d9e:	je     0x64021da5
64021da0:	or     WORD PTR [ebp-0x2c],0x1
64021da5:	cmp    WORD PTR [ebp-0x2c],0x8000
64021dab:	ja     0x64021dbe
64021dad:	mov    ecx,DWORD PTR [ebp-0x2c]
64021db0:	and    ecx,0x1ffff
64021db6:	cmp    ecx,0x18000
64021dbc:	jne    0x64021df1
64021dbe:	cmp    DWORD PTR [ebp-0x2a],0xffffffff
64021dc2:	jne    0x64021dee
64021dc4:	and    DWORD PTR [ebp-0x2a],0x0
64021dc8:	cmp    DWORD PTR [ebp-0x26],0xffffffff
64021dcc:	jne    0x64021de9
64021dce:	and    DWORD PTR [ebp-0x26],0x0
64021dd2:	cmp    WORD PTR [ebp-0x22],0xffff
64021dd8:	jne    0x64021de3
64021dda:	mov    WORD PTR [ebp-0x22],0x8000
64021de0:	inc    edi
64021de1:	jmp    0x64021df1
64021de3:	inc    WORD PTR [ebp-0x22]
64021de7:	jmp    0x64021df1
64021de9:	inc    DWORD PTR [ebp-0x26]
64021dec:	jmp    0x64021df1
64021dee:	inc    DWORD PTR [ebp-0x2a]
64021df1:	cmp    di,0x7fff
64021df6:	mov    esi,DWORD PTR [ebp-0x4c]
64021df9:	jae    0x64021e17
64021dfb:	mov    cx,WORD PTR [ebp-0x2a]
64021dff:	mov    WORD PTR [ebp-0x3c],cx
64021e03:	mov    ecx,DWORD PTR [ebp-0x28]
64021e06:	mov    DWORD PTR [ebp-0x3a],ecx
64021e09:	mov    ecx,DWORD PTR [ebp-0x24]
64021e0c:	or     edi,eax
64021e0e:	mov    DWORD PTR [ebp-0x36],ecx
64021e11:	mov    WORD PTR [ebp-0x32],di
64021e15:	jmp    0x64021e31
64021e17:	neg    ax
64021e1a:	sbb    eax,eax
64021e1c:	and    DWORD PTR [ebp-0x38],0x0
64021e20:	and    eax,0x80000000
64021e25:	add    eax,0x7fff8000
64021e2a:	and    DWORD PTR [ebp-0x3c],0x0
64021e2e:	mov    DWORD PTR [ebp-0x34],eax
64021e31:	cmp    DWORD PTR [ebp-0x54],0x0
64021e35:	jne    0x64021ba8
64021e3b:	mov    eax,DWORD PTR [ebp-0x34]
64021e3e:	movzx  ecx,WORD PTR [ebp-0x3c]
64021e42:	mov    esi,DWORD PTR [ebp-0x3a]
64021e45:	mov    edx,DWORD PTR [ebp-0x36]
64021e48:	shr    eax,0x10
64021e4b:	jmp    0x64021e7c
64021e4d:	mov    DWORD PTR [ebp-0x6c],0x4
64021e54:	jmp    0x64021e74
64021e56:	xor    esi,esi
64021e58:	mov    eax,0x7fff
64021e5d:	mov    edx,0x80000000
64021e62:	xor    ecx,ecx
64021e64:	mov    DWORD PTR [ebp-0x6c],0x2
64021e6b:	jmp    0x64021e7c
64021e6d:	mov    DWORD PTR [ebp-0x6c],0x1
64021e74:	xor    ecx,ecx
64021e76:	xor    eax,eax
64021e78:	xor    edx,edx
64021e7a:	xor    esi,esi
64021e7c:	mov    edi,DWORD PTR [ebp-0x7c]
64021e7f:	or     eax,DWORD PTR [ebp-0x74]
64021e82:	mov    WORD PTR [edi],cx
64021e85:	mov    WORD PTR [edi+0xa],ax
64021e89:	mov    eax,DWORD PTR [ebp-0x6c]
64021e8c:	mov    DWORD PTR [edi+0x2],esi
64021e8f:	mov    DWORD PTR [edi+0x6],edx
64021e92:	mov    ecx,DWORD PTR [ebp-0x4]
64021e95:	pop    edi
64021e96:	pop    esi
64021e97:	xor    ecx,ebp
64021e99:	pop    ebx
64021e9a:	call   0x64013ca6
64021e9f:	leave  
64021ea0:	ret    
64021ea1:	test   eax,0xfd640218
64021ea6:	sbb    BYTE PTR [edx],al
64021ea8:	fs push ebx
64021eaa:	sbb    DWORD PTR [edx],eax
64021eac:	xchg   BYTE PTR fs:[ecx],bl
64021eaf:	add    ah,BYTE PTR [ebx+ecx*8+0x19]
64021eb3:	add    ah,BYTE PTR [ebx+eax*1+0x1a]
64021eb7:	add    ah,BYTE PTR [edi+edx*1+0x1a]
64021ebb:	add    ah,BYTE PTR [edx+esi*2+0x1a]
64021ebf:	add    ah,BYTE PTR [ebp+ebx*2+0x1a]
64021ec3:	add    ah,BYTE PTR [esp+ebx*8+0x1a]
64021ec7:	add    ah,BYTE PTR [ecx+edx*8+0x1a]
64021ecb:	add    ah,BYTE PTR [eax+eax*4+0x1a]
64021ecf:	add    ah,BYTE PTR [ebp+edx*2-0x75]
64021ed3:	in     al,dx
64021ed4:	sub    esp,0x74
64021ed7:	mov    eax,ds:0x640521ac
64021edc:	xor    eax,ebp
64021ede:	mov    DWORD PTR [ebp-0x4],eax
64021ee1:	push   ebx
64021ee2:	mov    ebx,DWORD PTR [ebp+0x1c]
64021ee5:	push   esi
64021ee6:	push   edi
64021ee7:	lea    esi,[ebp+0x8]
64021eea:	lea    edi,[ebp-0x10]
64021eed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
64021eee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
64021eef:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
64021ef1:	mov    edx,DWORD PTR [ebp-0x8]
64021ef4:	mov    ecx,edx
64021ef6:	mov    eax,0x8000
64021efb:	and    ecx,eax
64021efd:	and    edx,0x7fff
64021f03:	test   cx,cx
64021f06:	mov    DWORD PTR [ebp-0x60],ebx
64021f09:	mov    BYTE PTR [ebp-0x30],0xcc
64021f0d:	mov    BYTE PTR [ebp-0x2f],0xcc
64021f11:	mov    BYTE PTR [ebp-0x2e],0xcc
64021f15:	mov    BYTE PTR [ebp-0x2d],0xcc
64021f19:	mov    BYTE PTR [ebp-0x2c],0xcc
64021f1d:	mov    BYTE PTR [ebp-0x2b],0xcc
64021f21:	mov    BYTE PTR [ebp-0x2a],0xcc
64021f25:	mov    BYTE PTR [ebp-0x29],0xcc
64021f29:	mov    BYTE PTR [ebp-0x28],0xcc
64021f2d:	mov    BYTE PTR [ebp-0x27],0xcc
64021f31:	mov    BYTE PTR [ebp-0x26],0xfb
64021f35:	mov    BYTE PTR [ebp-0x25],0x3f
64021f39:	mov    DWORD PTR [ebp-0x74],0x1
64021f40:	mov    DWORD PTR [ebp-0x6c],ecx
64021f43:	je     0x64021f4b
64021f45:	mov    BYTE PTR [ebx+0x2],0x2d
64021f49:	jmp    0x64021f4f
64021f4b:	mov    BYTE PTR [ebx+0x2],0x20
64021f4f:	test   dx,dx
64021f52:	mov    esi,DWORD PTR [ebp-0xc]
64021f55:	mov    edi,DWORD PTR [ebp-0x10]
64021f58:	jne    0x64021f88
64021f5a:	test   esi,esi
64021f5c:	jne    0x64021f88
64021f5e:	test   edi,edi
64021f60:	jne    0x64021f88
64021f62:	and    WORD PTR [ebx],di
64021f65:	cmp    cx,ax
64021f68:	setne  al
64021f6b:	dec    al
64021f6d:	and    al,0xd
64021f6f:	add    al,0x20
64021f71:	mov    BYTE PTR [ebx+0x2],al
64021f74:	mov    BYTE PTR [ebx+0x3],0x1
64021f78:	mov    BYTE PTR [ebx+0x4],0x30
64021f7c:	mov    BYTE PTR [ebx+0x5],0x0
64021f80:	xor    eax,eax
64021f82:	inc    eax
64021f83:	jmp    0x6402274f
64021f88:	cmp    dx,0x7fff
64021f8d:	jne    0x64022031
64021f93:	mov    eax,0x80000000
64021f98:	cmp    esi,eax
64021f9a:	mov    WORD PTR [ebx],0x1
64021f9f:	jne    0x64021fa5
64021fa1:	test   edi,edi
64021fa3:	je     0x64021fb4
64021fa5:	test   esi,0x40000000
64021fab:	jne    0x64021fb4
64021fad:	push   0x64041988
64021fb2:	jmp    0x64022005
64021fb4:	test   cx,cx
64021fb7:	je     0x64021fcc
64021fb9:	cmp    esi,0xc0000000
64021fbf:	jne    0x64021fcc
64021fc1:	test   edi,edi
64021fc3:	jne    0x64022000
64021fc5:	push   0x64041980
64021fca:	jmp    0x64021fd9
64021fcc:	cmp    esi,eax
64021fce:	jne    0x64022000
64021fd0:	test   edi,edi
64021fd2:	jne    0x64022000
64021fd4:	push   0x64041978
64021fd9:	lea    eax,[ebx+0x4]
64021fdc:	push   0x16
64021fde:	push   eax
64021fdf:	call   0x640164bd
64021fe4:	add    esp,0xc
64021fe7:	xor    esi,esi
64021fe9:	test   eax,eax
64021feb:	je     0x64021ffa
64021fed:	push   esi
64021fee:	push   esi
64021fef:	push   esi
64021ff0:	push   esi
64021ff1:	push   esi
64021ff2:	call   0x64013cf6
64021ff7:	add    esp,0x14
64021ffa:	mov    BYTE PTR [ebx+0x3],0x5
64021ffe:	jmp    0x6402202a
64022000:	push   0x64041970
64022005:	lea    eax,[ebx+0x4]
64022008:	push   0x16
6402200a:	push   eax
6402200b:	call   0x640164bd
64022010:	add    esp,0xc
64022013:	xor    esi,esi
64022015:	test   eax,eax
64022017:	je     0x64022026
64022019:	push   esi
6402201a:	push   esi
6402201b:	push   esi
6402201c:	push   esi
6402201d:	push   esi
6402201e:	call   0x64013cf6
64022023:	add    esp,0x14
64022026:	mov    BYTE PTR [ebx+0x3],0x6
6402202a:	xor    eax,eax
6402202c:	jmp    0x6402274f
64022031:	movzx  ecx,dx
64022034:	mov    ebx,ecx
64022036:	imul   ecx,ecx,0x4d10
6402203c:	shr    ebx,0x8
6402203f:	mov    eax,esi
64022041:	shr    eax,0x18
64022044:	lea    eax,[ebx+eax*2]
64022047:	imul   eax,eax,0x4d
6402204a:	lea    eax,[eax+ecx*1-0x134312f4]
64022051:	sar    eax,0x10
64022054:	movzx  ecx,ax
64022057:	movsx  ebx,cx
6402205a:	mov    DWORD PTR [ebp-0x4c],ecx
6402205d:	xor    eax,eax
6402205f:	mov    ecx,0x64053150
64022064:	neg    ebx
64022066:	sub    ecx,0x60
64022069:	cmp    ebx,eax
6402206b:	mov    WORD PTR [ebp-0x16],dx
6402206f:	mov    DWORD PTR [ebp-0x1a],esi
64022072:	mov    DWORD PTR [ebp-0x1e],edi
64022075:	mov    WORD PTR [ebp-0x20],ax
64022079:	mov    DWORD PTR [ebp-0x68],ecx
6402207c:	je     0x64022330
64022082:	jge    0x64022091
64022084:	mov    ecx,0x640532b0
64022089:	neg    ebx
6402208b:	sub    ecx,0x60
6402208e:	mov    DWORD PTR [ebp-0x68],ecx
64022091:	cmp    ebx,eax
64022093:	je     0x64022330
64022099:	add    DWORD PTR [ebp-0x68],0x54
6402209d:	mov    ecx,ebx
6402209f:	and    ecx,0x7
640220a2:	sar    ebx,0x3
640220a5:	test   ecx,ecx
640220a7:	je     0x64022326
640220ad:	imul   ecx,ecx,0xc
640220b0:	add    ecx,DWORD PTR [ebp-0x68]
640220b3:	cmp    WORD PTR [ecx],0x8000
640220b8:	mov    DWORD PTR [ebp-0x64],ecx
640220bb:	jb     0x640220d0
640220bd:	mov    esi,ecx
640220bf:	lea    edi,[ebp-0x3c]
640220c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
640220c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
640220c4:	lea    eax,[ebp-0x3c]
640220c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
640220c8:	dec    DWORD PTR [ebp-0x3a]
640220cb:	mov    DWORD PTR [ebp-0x64],eax
640220ce:	mov    ecx,eax
640220d0:	movzx  edi,WORD PTR [ecx+0xa]
640220d4:	mov    edx,DWORD PTR [ebp-0x16]
640220d7:	xor    eax,eax
640220d9:	mov    ecx,edi
640220db:	mov    esi,0x7fff
640220e0:	xor    ecx,edx
640220e2:	and    edx,esi
640220e4:	and    edi,esi
640220e6:	mov    DWORD PTR [ebp-0x48],eax
640220e9:	mov    DWORD PTR [ebp-0x10],eax
640220ec:	mov    DWORD PTR [ebp-0xc],eax
640220ef:	mov    DWORD PTR [ebp-0x8],eax
640220f2:	and    ecx,0x8000
640220f8:	cmp    dx,si
640220fb:	lea    eax,[edi+edx*1]
640220fe:	movzx  eax,ax
64022101:	jae    0x6402230a
64022107:	cmp    di,si
6402210a:	jae    0x6402230a
64022110:	cmp    ax,0xbffd
64022114:	ja     0x6402230a
6402211a:	cmp    ax,0x3fbf
6402211e:	ja     0x64022130
64022120:	xor    eax,eax
64022122:	mov    DWORD PTR [ebp-0x18],eax
64022125:	mov    DWORD PTR [ebp-0x1c],eax
64022128:	mov    DWORD PTR [ebp-0x20],eax
6402212b:	jmp    0x64022326
64022130:	xor    esi,esi
64022132:	cmp    dx,si
64022135:	jne    0x64022154
64022137:	inc    eax
64022138:	test   DWORD PTR [ebp-0x18],0x7fffffff
6402213f:	jne    0x64022154
64022141:	cmp    DWORD PTR [ebp-0x1c],esi
64022144:	jne    0x64022154
64022146:	cmp    DWORD PTR [ebp-0x20],esi
64022149:	jne    0x64022154
6402214b:	mov    WORD PTR [ebp-0x16],si
6402214f:	jmp    0x64022326
64022154:	cmp    di,si
64022157:	jne    0x6402217d
64022159:	mov    edx,DWORD PTR [ebp-0x64]
6402215c:	inc    eax
6402215d:	test   DWORD PTR [edx+0x8],0x7fffffff
64022164:	jne    0x6402217d
64022166:	cmp    DWORD PTR [edx+0x4],esi
64022169:	jne    0x6402217d
6402216b:	cmp    DWORD PTR [edx],esi
6402216d:	jne    0x6402217d
6402216f:	mov    DWORD PTR [ebp-0x18],esi
64022172:	mov    DWORD PTR [ebp-0x1c],esi
64022175:	mov    DWORD PTR [ebp-0x20],esi
64022178:	jmp    0x64022326
6402217d:	lea    edi,[ebp-0xc]
64022180:	mov    DWORD PTR [ebp-0x5c],esi
64022183:	mov    DWORD PTR [ebp-0x44],edi
64022186:	mov    DWORD PTR [ebp-0x40],0x5
6402218d:	mov    edx,DWORD PTR [ebp-0x5c]
64022190:	mov    esi,DWORD PTR [ebp-0x40]
64022193:	add    edx,edx
64022195:	test   esi,esi
64022197:	mov    DWORD PTR [ebp-0x50],esi
6402219a:	jle    0x640221f4
6402219c:	lea    edx,[ebp+edx*1-0x20]
640221a0:	mov    DWORD PTR [ebp-0x58],edx
640221a3:	mov    edx,DWORD PTR [ebp-0x64]
640221a6:	add    edx,0x8
640221a9:	mov    DWORD PTR [ebp-0x54],edx
640221ac:	mov    edx,DWORD PTR [ebp-0x58]
640221af:	mov    esi,DWORD PTR [ebp-0x54]
640221b2:	movzx  esi,WORD PTR [esi]
640221b5:	movzx  edx,WORD PTR [edx]
640221b8:	mov    edi,DWORD PTR [edi-0x4]
640221bb:	imul   edx,esi
640221be:	and    DWORD PTR [ebp-0x70],0x0
640221c2:	lea    esi,[edi+edx*1]
640221c5:	cmp    esi,edi
640221c7:	jb     0x640221cd
640221c9:	cmp    esi,edx
640221cb:	jae    0x640221d4
640221cd:	mov    DWORD PTR [ebp-0x70],0x1
640221d4:	cmp    DWORD PTR [ebp-0x70],0x0
640221d8:	mov    edi,DWORD PTR [ebp-0x44]
640221db:	mov    DWORD PTR [edi-0x4],esi
640221de:	je     0x640221e3
640221e0:	inc    WORD PTR [edi]
640221e3:	add    DWORD PTR [ebp-0x58],0x2
640221e7:	sub    DWORD PTR [ebp-0x54],0x2
640221eb:	dec    DWORD PTR [ebp-0x50]
640221ee:	cmp    DWORD PTR [ebp-0x50],0x0
640221f2:	jg     0x640221ac
640221f4:	inc    edi
640221f5:	inc    edi
640221f6:	inc    DWORD PTR [ebp-0x5c]
640221f9:	dec    DWORD PTR [ebp-0x40]
640221fc:	cmp    DWORD PTR [ebp-0x40],0x0
64022200:	mov    DWORD PTR [ebp-0x44],edi
64022203:	jg     0x6402218d
64022205:	add    eax,0xc002
6402220a:	test   ax,ax
6402220d:	jle    0x6402224a
6402220f:	test   DWORD PTR [ebp-0x8],0x80000000
64022216:	jne    0x64022245
64022218:	mov    edx,DWORD PTR [ebp-0x10]
6402221b:	mov    edi,DWORD PTR [ebp-0xc]
6402221e:	mov    esi,DWORD PTR [ebp-0xc]
64022221:	shl    DWORD PTR [ebp-0x10],1
64022224:	shr    edx,0x1f
64022227:	add    edi,edi
64022229:	or     edi,edx
6402222b:	mov    edx,DWORD PTR [ebp-0x8]
6402222e:	shr    esi,0x1f
64022231:	add    edx,edx
64022233:	or     edx,esi
64022235:	add    eax,0xffff
6402223a:	test   ax,ax
6402223d:	mov    DWORD PTR [ebp-0xc],edi
64022240:	mov    DWORD PTR [ebp-0x8],edx
64022243:	jg     0x6402220f
64022245:	test   ax,ax
64022248:	jg     0x6402229c
6402224a:	add    eax,0xffff
6402224f:	test   ax,ax
64022252:	jge    0x6402229c
64022254:	mov    edx,eax
64022256:	neg    edx
64022258:	movzx  edx,dx
6402225b:	mov    DWORD PTR [ebp-0x44],edx
6402225e:	add    eax,edx
64022260:	test   BYTE PTR [ebp-0x10],0x1
64022264:	je     0x64022269
64022266:	inc    DWORD PTR [ebp-0x48]
64022269:	mov    edx,DWORD PTR [ebp-0x8]
6402226c:	mov    edi,DWORD PTR [ebp-0xc]
6402226f:	mov    esi,DWORD PTR [ebp-0xc]
64022272:	shr    DWORD PTR [ebp-0x8],1
64022275:	shl    edx,0x1f
64022278:	shr    edi,1
6402227a:	or     edi,edx
6402227c:	mov    edx,DWORD PTR [ebp-0x10]
6402227f:	shl    esi,0x1f
64022282:	shr    edx,1
64022284:	or     edx,esi
64022286:	dec    DWORD PTR [ebp-0x44]
64022289:	mov    DWORD PTR [ebp-0xc],edi
6402228c:	mov    DWORD PTR [ebp-0x10],edx
6402228f:	jne    0x64022260
64022291:	cmp    DWORD PTR [ebp-0x48],0x0
64022295:	je     0x6402229c
64022297:	or     WORD PTR [ebp-0x10],0x1
6402229c:	cmp    WORD PTR [ebp-0x10],0x8000
640222a2:	ja     0x640222b5
640222a4:	mov    edx,DWORD PTR [ebp-0x10]
640222a7:	and    edx,0x1ffff
640222ad:	cmp    edx,0x18000
640222b3:	jne    0x640222e8
640222b5:	cmp    DWORD PTR [ebp-0xe],0xffffffff
640222b9:	jne    0x640222e5
640222bb:	and    DWORD PTR [ebp-0xe],0x0
640222bf:	cmp    DWORD PTR [ebp-0xa],0xffffffff
640222c3:	jne    0x640222e0
640222c5:	and    DWORD PTR [ebp-0xa],0x0
640222c9:	cmp    WORD PTR [ebp-0x6],0xffff
640222cf:	jne    0x640222da
640222d1:	mov    WORD PTR [ebp-0x6],0x8000
640222d7:	inc    eax
640222d8:	jmp    0x640222e8
640222da:	inc    WORD PTR [ebp-0x6]
640222de:	jmp    0x640222e8
640222e0:	inc    DWORD PTR [ebp-0xa]
640222e3:	jmp    0x640222e8
640222e5:	inc    DWORD PTR [ebp-0xe]
640222e8:	cmp    ax,0x7fff
640222ec:	jae    0x6402230a
640222ee:	mov    dx,WORD PTR [ebp-0xe]
640222f2:	mov    WORD PTR [ebp-0x20],dx
640222f6:	mov    edx,DWORD PTR [ebp-0xc]
640222f9:	mov    DWORD PTR [ebp-0x1e],edx
640222fc:	mov    edx,DWORD PTR [ebp-0x8]
640222ff:	or     eax,ecx
64022301:	mov    DWORD PTR [ebp-0x1a],edx
64022304:	mov    WORD PTR [ebp-0x16],ax
64022308:	jmp    0x64022326
6402230a:	neg    cx
6402230d:	sbb    ecx,ecx
6402230f:	and    DWORD PTR [ebp-0x1c],0x0
64022313:	and    ecx,0x80000000
64022319:	add    ecx,0x7fff8000
6402231f:	and    DWORD PTR [ebp-0x20],0x0
64022323:	mov    DWORD PTR [ebp-0x18],ecx
64022326:	test   ebx,ebx
64022328:	jne    0x64022099
6402232e:	xor    eax,eax
64022330:	mov    ecx,DWORD PTR [ebp-0x18]
64022333:	shr    ecx,0x10
64022336:	cmp    cx,0x3fff
6402233b:	mov    ebx,0x7fff
64022340:	jb     0x6402258e
64022346:	mov    esi,DWORD PTR [ebp-0x26]
64022349:	inc    DWORD PTR [ebp-0x4c]
6402234c:	movzx  edx,cx
6402234f:	mov    ecx,esi
64022351:	xor    ecx,edx
64022353:	and    edx,ebx
64022355:	and    esi,ebx
64022357:	and    ecx,0x8000
6402235d:	cmp    dx,bx
64022360:	lea    edi,[esi+edx*1]
64022363:	mov    DWORD PTR [ebp-0x58],eax
64022366:	mov    DWORD PTR [ebp-0x10],eax
64022369:	mov    DWORD PTR [ebp-0xc],eax
6402236c:	mov    DWORD PTR [ebp-0x8],eax
6402236f:	movzx  edi,di
64022372:	jae    0x64022574
64022378:	cmp    si,bx
6402237b:	jae    0x64022574
64022381:	cmp    di,0xbffd
64022386:	ja     0x64022574
6402238c:	cmp    di,0x3fbf
64022391:	ja     0x6402239b
64022393:	mov    DWORD PTR [ebp-0x18],eax
64022396:	jmp    0x64022588
6402239b:	cmp    dx,ax
6402239e:	jne    0x640223bd
640223a0:	inc    edi
640223a1:	test   DWORD PTR [ebp-0x18],0x7fffffff
640223a8:	jne    0x640223bd
640223aa:	cmp    DWORD PTR [ebp-0x1c],eax
640223ad:	jne    0x640223bd
640223af:	cmp    DWORD PTR [ebp-0x20],eax
640223b2:	jne    0x640223bd
640223b4:	mov    WORD PTR [ebp-0x16],ax
640223b8:	jmp    0x6402258e
640223bd:	cmp    si,ax
640223c0:	jne    0x640223d6
640223c2:	inc    edi
640223c3:	test   DWORD PTR [ebp-0x28],0x7fffffff
640223ca:	jne    0x640223d6
640223cc:	cmp    DWORD PTR [ebp-0x2c],eax
640223cf:	jne    0x640223d6
640223d1:	cmp    DWORD PTR [ebp-0x30],eax
640223d4:	je     0x64022393
640223d6:	and    DWORD PTR [ebp-0x54],0x0
640223da:	lea    eax,[ebp-0xc]
640223dd:	mov    DWORD PTR [ebp-0x40],0x5
640223e4:	mov    edx,DWORD PTR [ebp-0x54]
640223e7:	mov    esi,DWORD PTR [ebp-0x40]
640223ea:	add    edx,edx
640223ec:	test   esi,esi
640223ee:	mov    DWORD PTR [ebp-0x50],esi
640223f1:	jle    0x64022445
640223f3:	lea    esi,[ebp-0x28]
640223f6:	lea    edx,[ebp+edx*1-0x20]
640223fa:	mov    DWORD PTR [ebp-0x5c],esi
640223fd:	mov    DWORD PTR [ebp-0x48],edx
64022400:	mov    edx,DWORD PTR [ebp-0x5c]
64022403:	mov    esi,DWORD PTR [ebp-0x48]
64022406:	movzx  esi,WORD PTR [esi]
64022409:	movzx  edx,WORD PTR [edx]
6402240c:	and    DWORD PTR [ebp-0x44],0x0
64022410:	imul   edx,esi
64022413:	mov    esi,DWORD PTR [eax-0x4]
64022416:	lea    ebx,[esi+edx*1]
64022419:	cmp    ebx,esi
6402241b:	jb     0x64022421
6402241d:	cmp    ebx,edx
6402241f:	jae    0x64022428
64022421:	mov    DWORD PTR [ebp-0x44],0x1
64022428:	cmp    DWORD PTR [ebp-0x44],0x0
6402242c:	mov    DWORD PTR [eax-0x4],ebx
6402242f:	je     0x64022434
64022431:	inc    WORD PTR [eax]
64022434:	add    DWORD PTR [ebp-0x48],0x2
64022438:	sub    DWORD PTR [ebp-0x5c],0x2
6402243c:	dec    DWORD PTR [ebp-0x50]
6402243f:	cmp    DWORD PTR [ebp-0x50],0x0
64022443:	jg     0x64022400
64022445:	inc    eax
64022446:	inc    eax
64022447:	inc    DWORD PTR [ebp-0x54]
6402244a:	dec    DWORD PTR [ebp-0x40]
6402244d:	cmp    DWORD PTR [ebp-0x40],0x0
64022451:	jg     0x640223e4
64022453:	add    edi,0xc002
64022459:	xor    eax,eax
6402245b:	cmp    di,ax
6402245e:	jle    0x6402249c
64022460:	test   DWORD PTR [ebp-0x8],0x80000000
64022467:	jne    0x64022497
64022469:	mov    edx,DWORD PTR [ebp-0x10]
6402246c:	mov    ebx,DWORD PTR [ebp-0xc]
6402246f:	mov    esi,DWORD PTR [ebp-0xc]
64022472:	shl    DWORD PTR [ebp-0x10],1
64022475:	shr    edx,0x1f
64022478:	add    ebx,ebx
6402247a:	or     ebx,edx
6402247c:	mov    edx,DWORD PTR [ebp-0x8]
6402247f:	shr    esi,0x1f
64022482:	add    edx,edx
64022484:	or     edx,esi
64022486:	add    edi,0xffff
6402248c:	cmp    di,ax
6402248f:	mov    DWORD PTR [ebp-0xc],ebx
64022492:	mov    DWORD PTR [ebp-0x8],edx
64022495:	jg     0x64022460
64022497:	cmp    di,ax
6402249a:	jg     0x640224e9
6402249c:	add    edi,0xffff
640224a2:	cmp    di,ax
640224a5:	jge    0x640224e9
640224a7:	mov    eax,edi
640224a9:	neg    eax
640224ab:	movzx  eax,ax
640224ae:	add    edi,eax
640224b0:	test   BYTE PTR [ebp-0x10],0x1
640224b4:	je     0x640224b9
640224b6:	inc    DWORD PTR [ebp-0x58]
640224b9:	mov    edx,DWORD PTR [ebp-0x8]
640224bc:	mov    ebx,DWORD PTR [ebp-0xc]
640224bf:	mov    esi,DWORD PTR [ebp-0xc]
640224c2:	shr    DWORD PTR [ebp-0x8],1
640224c5:	shl    edx,0x1f
640224c8:	shr    ebx,1
640224ca:	or     ebx,edx
640224cc:	mov    edx,DWORD PTR [ebp-0x10]
640224cf:	shl    esi,0x1f
640224d2:	shr    edx,1
640224d4:	or     edx,esi
640224d6:	dec    eax
640224d7:	mov    DWORD PTR [ebp-0xc],ebx
640224da:	mov    DWORD PTR [ebp-0x10],edx
640224dd:	jne    0x640224b0
640224df:	cmp    DWORD PTR [ebp-0x58],eax
640224e2:	je     0x640224e9
640224e4:	or     WORD PTR [ebp-0x10],0x1
640224e9:	cmp    WORD PTR [ebp-0x10],0x8000
640224ef:	ja     0x64022502
640224f1:	mov    edx,DWORD PTR [ebp-0x10]
640224f4:	and    edx,0x1ffff
640224fa:	cmp    edx,0x18000
64022500:	jne    0x64022533
64022502:	cmp    DWORD PTR [ebp-0xe],0xffffffff
64022506:	jne    0x64022530
64022508:	cmp    DWORD PTR [ebp-0xa],0xffffffff
6402250c:	mov    DWORD PTR [ebp-0xe],eax
6402250f:	jne    0x6402252b
64022511:	cmp    WORD PTR [ebp-0x6],0xffff
64022517:	mov    DWORD PTR [ebp-0xa],eax
6402251a:	jne    0x64022525
6402251c:	mov    WORD PTR [ebp-0x6],0x8000
64022522:	inc    edi
64022523:	jmp    0x64022533
64022525:	inc    WORD PTR [ebp-0x6]
64022529:	jmp    0x64022533
6402252b:	inc    DWORD PTR [ebp-0xa]
6402252e:	jmp    0x64022533
64022530:	inc    DWORD PTR [ebp-0xe]
64022533:	cmp    di,0x7fff
64022538:	jb     0x64022558
6402253a:	neg    cx
6402253d:	mov    DWORD PTR [ebp-0x1c],eax
64022540:	mov    DWORD PTR [ebp-0x20],eax
64022543:	sbb    ecx,ecx
64022545:	and    ecx,0x80000000
6402254b:	add    ecx,0x7fff8000
64022551:	mov    DWORD PTR [ebp-0x18],ecx
64022554:	xor    eax,eax
64022556:	jmp    0x6402258e
64022558:	mov    ax,WORD PTR [ebp-0xe]
6402255c:	mov    WORD PTR [ebp-0x20],ax
64022560:	mov    eax,DWORD PTR [ebp-0xc]
64022563:	mov    DWORD PTR [ebp-0x1e],eax
64022566:	mov    eax,DWORD PTR [ebp-0x8]
64022569:	or     edi,ecx
6402256b:	mov    DWORD PTR [ebp-0x1a],eax
6402256e:	mov    WORD PTR [ebp-0x16],di
64022572:	jmp    0x64022554
64022574:	neg    cx
64022577:	sbb    ecx,ecx
64022579:	and    ecx,0x80000000
6402257f:	add    ecx,0x7fff8000
64022585:	mov    DWORD PTR [ebp-0x18],ecx
64022588:	mov    DWORD PTR [ebp-0x1c],eax
6402258b:	mov    DWORD PTR [ebp-0x20],eax
6402258e:	test   BYTE PTR [ebp+0x18],0x1
64022592:	mov    edx,DWORD PTR [ebp-0x60]
64022595:	mov    ecx,DWORD PTR [ebp-0x4c]
64022598:	mov    WORD PTR [edx],cx
6402259b:	je     0x640225cf
6402259d:	movsx  ecx,cx
640225a0:	add    DWORD PTR [ebp+0x14],ecx
640225a3:	cmp    DWORD PTR [ebp+0x14],eax
640225a6:	jg     0x640225cf
640225a8:	and    WORD PTR [edx],0x0
640225ac:	cmp    WORD PTR [ebp-0x6c],0x8000
640225b2:	mov    BYTE PTR [edx+0x3],0x1
640225b6:	setne  al
640225b9:	dec    al
640225bb:	and    al,0xd
640225bd:	add    al,0x20
640225bf:	mov    BYTE PTR [edx+0x2],al
640225c2:	mov    BYTE PTR [edx+0x4],0x30
640225c6:	mov    BYTE PTR [edx+0x5],0x0
640225ca:	jmp    0x64021f80
640225cf:	push   0x15
640225d1:	pop    ecx
640225d2:	cmp    DWORD PTR [ebp+0x14],ecx
640225d5:	jle    0x640225da
640225d7:	mov    DWORD PTR [ebp+0x14],ecx
640225da:	mov    esi,DWORD PTR [ebp-0x18]
640225dd:	shr    esi,0x10
640225e0:	push   0x8
640225e2:	sub    esi,0x3ffe
640225e8:	mov    WORD PTR [ebp-0x16],ax
640225ec:	pop    ebx
640225ed:	mov    eax,DWORD PTR [ebp-0x20]
640225f0:	mov    edi,DWORD PTR [ebp-0x1c]
640225f3:	mov    ecx,DWORD PTR [ebp-0x1c]
640225f6:	shl    DWORD PTR [ebp-0x20],1
640225f9:	shr    eax,0x1f
640225fc:	add    edi,edi
640225fe:	or     edi,eax
64022600:	mov    eax,DWORD PTR [ebp-0x18]
64022603:	shr    ecx,0x1f
64022606:	add    eax,eax
64022608:	or     eax,ecx
6402260a:	dec    ebx
6402260b:	mov    DWORD PTR [ebp-0x1c],edi
6402260e:	mov    DWORD PTR [ebp-0x18],eax
64022611:	jne    0x640225ed
64022613:	test   esi,esi
64022615:	jge    0x64022649
64022617:	neg    esi
64022619:	and    esi,0xff
6402261f:	jle    0x64022649
64022621:	mov    eax,DWORD PTR [ebp-0x18]
64022624:	mov    edi,DWORD PTR [ebp-0x1c]
64022627:	mov    ecx,DWORD PTR [ebp-0x1c]
6402262a:	shr    DWORD PTR [ebp-0x18],1
6402262d:	shl    eax,0x1f
64022630:	shr    edi,1
64022632:	or     edi,eax
64022634:	mov    eax,DWORD PTR [ebp-0x20]
64022637:	shl    ecx,0x1f
6402263a:	shr    eax,1
6402263c:	or     eax,ecx
6402263e:	dec    esi
6402263f:	test   esi,esi
64022641:	mov    DWORD PTR [ebp-0x1c],edi
64022644:	mov    DWORD PTR [ebp-0x20],eax
64022647:	jg     0x64022621
64022649:	mov    eax,DWORD PTR [ebp+0x14]
6402264c:	inc    eax
6402264d:	test   eax,eax
6402264f:	lea    ebx,[edx+0x4]
64022652:	mov    DWORD PTR [ebp-0x40],ebx
64022655:	mov    DWORD PTR [ebp-0x4c],eax
64022658:	jle    0x64022713
6402265e:	mov    edx,DWORD PTR [ebp-0x20]
64022661:	mov    eax,DWORD PTR [ebp-0x1c]
64022664:	lea    esi,[ebp-0x20]
64022667:	lea    edi,[ebp-0x3c]
6402266a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
6402266b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
6402266c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
6402266d:	shl    DWORD PTR [ebp-0x20],1
64022670:	mov    edi,DWORD PTR [ebp-0x20]
64022673:	shl    DWORD PTR [ebp-0x20],1
64022676:	shr    edx,0x1f
64022679:	lea    ecx,[eax+eax*1]
6402267c:	or     ecx,edx
6402267e:	mov    edx,DWORD PTR [ebp-0x18]
64022681:	mov    esi,eax
64022683:	shr    esi,0x1f
64022686:	add    edx,edx
64022688:	or     edx,esi
6402268a:	mov    eax,ecx
6402268c:	lea    esi,[ecx+ecx*1]
6402268f:	shr    eax,0x1f
64022692:	lea    ecx,[edx+edx*1]
64022695:	mov    edx,DWORD PTR [ebp-0x3c]
64022698:	shr    edi,0x1f
6402269b:	or     ecx,eax
6402269d:	mov    eax,DWORD PTR [ebp-0x20]
640226a0:	or     esi,edi
640226a2:	lea    edi,[edx+eax*1]
640226a5:	cmp    edi,eax
640226a7:	jb     0x640226ad
640226a9:	cmp    edi,edx
640226ab:	jae    0x640226c5
640226ad:	lea    eax,[esi+0x1]
640226b0:	xor    edx,edx
640226b2:	cmp    eax,esi
640226b4:	jb     0x640226bb
640226b6:	cmp    eax,0x1
640226b9:	jae    0x640226be
640226bb:	xor    edx,edx
640226bd:	inc    edx
640226be:	test   edx,edx
640226c0:	mov    esi,eax
640226c2:	je     0x640226c5
640226c4:	inc    ecx
640226c5:	mov    eax,DWORD PTR [ebp-0x38]
640226c8:	lea    edx,[eax+esi*1]
640226cb:	cmp    edx,esi
640226cd:	mov    DWORD PTR [ebp-0x44],edx
640226d0:	jb     0x640226d6
640226d2:	cmp    edx,eax
640226d4:	jae    0x640226d7
640226d6:	inc    ecx
640226d7:	add    ecx,DWORD PTR [ebp-0x34]
640226da:	shr    edx,0x1f
640226dd:	add    ecx,ecx
640226df:	or     ecx,edx
640226e1:	lea    esi,[edi+edi*1]
640226e4:	mov    DWORD PTR [ebp-0x20],esi
640226e7:	mov    esi,DWORD PTR [ebp-0x44]
640226ea:	mov    DWORD PTR [ebp-0x18],ecx
640226ed:	shr    ecx,0x18
640226f0:	add    esi,esi
640226f2:	add    cl,0x30
640226f5:	mov    eax,edi
640226f7:	shr    eax,0x1f
640226fa:	or     esi,eax
640226fc:	mov    BYTE PTR [ebx],cl
640226fe:	inc    ebx
640226ff:	dec    DWORD PTR [ebp-0x4c]
64022702:	cmp    DWORD PTR [ebp-0x4c],0x0
64022706:	mov    DWORD PTR [ebp-0x1c],esi
64022709:	mov    BYTE PTR [ebp-0x15],0x0
6402270d:	jg     0x6402265e
64022713:	dec    ebx
64022714:	mov    al,BYTE PTR [ebx]
64022716:	dec    ebx
64022717:	cmp    al,0x35
64022719:	jge    0x64022729
6402271b:	mov    ecx,DWORD PTR [ebp-0x40]
6402271e:	jmp    0x64022764
64022720:	cmp    BYTE PTR [ebx],0x39
64022723:	jne    0x6402272e
64022725:	mov    BYTE PTR [ebx],0x30
64022728:	dec    ebx
64022729:	cmp    ebx,DWORD PTR [ebp-0x40]
6402272c:	jae    0x64022720
6402272e:	cmp    ebx,DWORD PTR [ebp-0x40]
64022731:	mov    eax,DWORD PTR [ebp-0x60]
64022734:	jae    0x6402273a
64022736:	inc    ebx
64022737:	inc    WORD PTR [eax]
6402273a:	inc    BYTE PTR [ebx]
6402273c:	sub    bl,al
6402273e:	sub    bl,0x3
64022741:	movsx  ecx,bl
64022744:	mov    BYTE PTR [eax+0x3],bl
64022747:	mov    BYTE PTR [ecx+eax*1+0x4],0x0
6402274c:	mov    eax,DWORD PTR [ebp-0x74]
6402274f:	mov    ecx,DWORD PTR [ebp-0x4]
64022752:	pop    edi
64022753:	pop    esi
64022754:	xor    ecx,ebp
64022756:	pop    ebx
64022757:	call   0x64013ca6
6402275c:	leave  
6402275d:	ret    
6402275e:	cmp    BYTE PTR [ebx],0x30
64022761:	jne    0x64022768
64022763:	dec    ebx
64022764:	cmp    ebx,ecx
64022766:	jae    0x6402275e
64022768:	cmp    ebx,ecx
6402276a:	mov    eax,DWORD PTR [ebp-0x60]
6402276d:	jae    0x6402273c
6402276f:	and    WORD PTR [eax],0x0
64022773:	cmp    WORD PTR [ebp-0x6c],0x8000
64022779:	mov    BYTE PTR [eax+0x3],0x1
6402277d:	setne  dl
64022780:	dec    dl
64022782:	and    dl,0xd
64022785:	add    dl,0x20
64022788:	mov    BYTE PTR [eax+0x2],dl
6402278b:	mov    BYTE PTR [ecx],0x30
6402278e:	mov    BYTE PTR [eax+0x5],0x0
64022792:	jmp    0x64021f80
64022797:	xor    eax,eax
64022799:	test   bl,0x10
6402279c:	je     0x6402279f
6402279e:	inc    eax
6402279f:	test   bl,0x8
640227a2:	je     0x640227a7
640227a4:	or     eax,0x4
640227a7:	test   bl,0x4
640227aa:	je     0x640227af
640227ac:	or     eax,0x8
640227af:	test   bl,0x2
640227b2:	je     0x640227b7
640227b4:	or     eax,0x10
640227b7:	test   bl,0x1
640227ba:	je     0x640227bf
640227bc:	or     eax,0x20
640227bf:	test   ebx,0x80000
640227c5:	je     0x640227ca
640227c7:	or     eax,0x2
640227ca:	mov    ecx,ebx
640227cc:	mov    edx,0x300
640227d1:	and    ecx,edx
640227d3:	push   esi
640227d4:	mov    esi,0x200
640227d9:	je     0x640227fe
640227db:	cmp    ecx,0x100
640227e1:	je     0x640227f9
640227e3:	cmp    ecx,esi
640227e5:	je     0x640227f2
640227e7:	cmp    ecx,edx
640227e9:	jne    0x640227fe
640227eb:	or     eax,0xc00
640227f0:	jmp    0x640227fe
640227f2:	or     eax,0x800
640227f7:	jmp    0x640227fe
640227f9:	or     eax,0x400
640227fe:	mov    ecx,ebx
64022800:	and    ecx,0x30000
64022806:	je     0x64022814
64022808:	cmp    ecx,0x10000
6402280e:	jne    0x64022816
64022810:	or     eax,esi
64022812:	jmp    0x64022816
64022814:	or     eax,edx
64022816:	test   ebx,0x40000
6402281c:	pop    esi
6402281d:	je     0x64022824
6402281f:	or     eax,0x1000
64022824:	ret    
64022825:	xor    eax,eax
64022827:	test   dl,0x10
6402282a:	je     0x64022831
6402282c:	mov    eax,0x80
64022831:	test   dl,0x8
64022834:	push   ebx
64022835:	push   esi
64022836:	push   edi
64022837:	mov    ebx,0x200
6402283c:	je     0x64022840
6402283e:	or     eax,ebx
64022840:	test   dl,0x4
64022843:	je     0x6402284a
64022845:	or     eax,0x400
6402284a:	test   dl,0x2
6402284d:	je     0x64022854
6402284f:	or     eax,0x800
64022854:	test   dl,0x1
64022857:	je     0x6402285e
64022859:	or     eax,0x1000
6402285e:	test   edx,0x80000
64022864:	mov    edi,0x100
64022869:	je     0x6402286d
6402286b:	or     eax,edi
6402286d:	mov    ecx,edx
6402286f:	mov    esi,0x300
64022874:	and    ecx,esi
64022876:	je     0x64022897
64022878:	cmp    ecx,edi
6402287a:	je     0x64022892
6402287c:	cmp    ecx,ebx
6402287e:	je     0x6402288b
64022880:	cmp    ecx,esi
64022882:	jne    0x64022897
64022884:	or     eax,0x6000
64022889:	jmp    0x64022897
6402288b:	or     eax,0x4000
64022890:	jmp    0x64022897
64022892:	or     eax,0x2000
64022897:	mov    ecx,0x3000000
6402289c:	pop    edi
6402289d:	and    edx,ecx
6402289f:	cmp    edx,0x1000000
640228a5:	pop    esi
640228a6:	pop    ebx
640228a7:	je     0x640228bf
640228a9:	cmp    edx,0x2000000
640228af:	je     0x640228bb
640228b1:	cmp    edx,ecx
640228b3:	jne    0x640228c4
640228b5:	or     eax,0x8000
640228ba:	ret    
640228bb:	or     eax,0x40
640228be:	ret    
640228bf:	or     eax,0x8040
640228c4:	ret    
640228c5:	sub    esp,0x10
640228c8:	push   ebx
640228c9:	push   ebp
640228ca:	push   esi
640228cb:	push   edi
640228cc:	fstcw  WORD PTR [esp+0x14]
640228d1:	mov    ebx,DWORD PTR [esp+0x14]
640228d5:	xor    edx,edx
640228d7:	test   bl,0x1
640228da:	je     0x640228df
640228dc:	push   0x10
640228de:	pop    edx
640228df:	test   bl,0x4
640228e2:	je     0x640228e7
640228e4:	or     edx,0x8
640228e7:	test   bl,0x8
640228ea:	je     0x640228ef
640228ec:	or     edx,0x4
640228ef:	test   bl,0x10
640228f2:	je     0x640228f7
640228f4:	or     edx,0x2
640228f7:	test   bl,0x20
640228fa:	je     0x640228ff
640228fc:	or     edx,0x1
640228ff:	test   bl,0x2
64022902:	je     0x6402290a
64022904:	or     edx,0x80000
6402290a:	movzx  ecx,bx
6402290d:	mov    eax,ecx
6402290f:	mov    edi,0xc00
64022914:	and    eax,edi
64022916:	mov    ebp,0x300
6402291b:	mov    esi,0x200
64022920:	je     0x64022942
64022922:	cmp    eax,0x400
64022927:	je     0x6402293c
64022929:	cmp    eax,0x800
6402292e:	je     0x64022938
64022930:	cmp    eax,edi
64022932:	jne    0x64022942
64022934:	or     edx,ebp
64022936:	jmp    0x64022942
64022938:	or     edx,esi
6402293a:	jmp    0x64022942
6402293c:	or     edx,0x100
64022942:	and    ecx,ebp
64022944:	je     0x64022952
64022946:	cmp    ecx,esi
64022948:	jne    0x64022958
6402294a:	or     edx,0x10000
64022950:	jmp    0x64022958
64022952:	or     edx,0x20000
64022958:	test   bx,0x1000
6402295d:	je     0x64022965
6402295f:	or     edx,0x40000
64022965:	mov    esi,DWORD PTR [esp+0x28]
64022969:	mov    ecx,DWORD PTR [esp+0x24]
6402296d:	mov    eax,esi
6402296f:	not    eax
64022971:	and    eax,edx
64022973:	and    ecx,esi
64022975:	or     eax,ecx
64022977:	cmp    eax,edx
64022979:	mov    DWORD PTR [esp+0x1c],eax
6402297d:	je     0x64022a2d
64022983:	mov    ebx,eax
64022985:	call   0x64022797
6402298a:	movzx  eax,ax
6402298d:	mov    DWORD PTR [esp+0x10],eax
64022991:	fldcw  WORD PTR [esp+0x10]
64022995:	fstcw  WORD PTR [esp+0x10]
6402299a:	mov    ebx,DWORD PTR [esp+0x10]
6402299e:	xor    edx,edx
640229a0:	test   bl,0x1
640229a3:	je     0x640229a8
640229a5:	push   0x10
640229a7:	pop    edx
640229a8:	test   bl,0x4
640229ab:	je     0x640229b0
640229ad:	or     edx,0x8
640229b0:	test   bl,0x8
640229b3:	je     0x640229b8
640229b5:	or     edx,0x4
640229b8:	test   bl,0x10
640229bb:	je     0x640229c0
640229bd:	or     edx,0x2
640229c0:	test   bl,0x20
640229c3:	je     0x640229c8
640229c5:	or     edx,0x1
640229c8:	test   bl,0x2
640229cb:	je     0x640229d3
640229cd:	or     edx,0x80000
640229d3:	movzx  ecx,bx
640229d6:	mov    eax,ecx
640229d8:	and    eax,edi
640229da:	je     0x64022a00
640229dc:	cmp    eax,0x400
640229e1:	je     0x640229fa
640229e3:	cmp    eax,0x800
640229e8:	je     0x640229f2
640229ea:	cmp    eax,edi
640229ec:	jne    0x64022a00
640229ee:	or     edx,ebp
640229f0:	jmp    0x64022a00
640229f2:	or     edx,0x200
640229f8:	jmp    0x64022a00
640229fa:	or     edx,0x100
64022a00:	and    ecx,ebp
64022a02:	je     0x64022a14
64022a04:	cmp    ecx,0x200
64022a0a:	jne    0x64022a1a
64022a0c:	or     edx,0x10000
64022a12:	jmp    0x64022a1a
64022a14:	or     edx,0x20000
64022a1a:	test   bx,0x1000
64022a1f:	je     0x64022a27
64022a21:	or     edx,0x40000
64022a27:	mov    eax,edx
64022a29:	mov    DWORD PTR [esp+0x1c],edx
64022a2d:	cmp    DWORD PTR ds:0x64054674,0x0
64022a34:	je     0x64022bc0
64022a3a:	and    esi,0x308031f
64022a40:	mov    edi,esi
64022a42:	stmxcsr DWORD PTR [esp+0x18]
64022a47:	mov    eax,DWORD PTR [esp+0x18]
64022a4b:	xor    esi,esi
64022a4d:	test   al,al
64022a4f:	jns    0x64022a54
64022a51:	push   0x10
64022a53:	pop    esi
64022a54:	test   ax,0x200
64022a58:	je     0x64022a5d
64022a5a:	or     esi,0x8
64022a5d:	test   ax,0x400
64022a61:	je     0x64022a66
64022a63:	or     esi,0x4
64022a66:	test   ax,0x800
64022a6a:	je     0x64022a6f
64022a6c:	or     esi,0x2
64022a6f:	test   ax,0x1000
64022a73:	je     0x64022a78
64022a75:	or     esi,0x1
64022a78:	test   ax,0x100
64022a7c:	je     0x64022a84
64022a7e:	or     esi,0x80000
64022a84:	mov    ecx,eax
64022a86:	mov    ebp,0x6000
64022a8b:	and    ecx,ebp
64022a8d:	je     0x64022ab9
64022a8f:	cmp    ecx,0x2000
64022a95:	je     0x64022ab3
64022a97:	cmp    ecx,0x4000
64022a9d:	je     0x64022aab
64022a9f:	cmp    ecx,ebp
64022aa1:	jne    0x64022ab9
64022aa3:	or     esi,0x300
64022aa9:	jmp    0x64022ab9
64022aab:	or     esi,0x200
64022ab1:	jmp    0x64022ab9
64022ab3:	or     esi,0x100
64022ab9:	mov    ebx,0x8040
64022abe:	and    eax,ebx
64022ac0:	sub    eax,0x40
64022ac3:	je     0x64022ae1
64022ac5:	sub    eax,0x7fc0
64022aca:	je     0x64022ad9
64022acc:	sub    eax,0x40
64022acf:	jne    0x64022ae7
64022ad1:	or     esi,0x1000000
64022ad7:	jmp    0x64022ae7
64022ad9:	or     esi,0x3000000
64022adf:	jmp    0x64022ae7
64022ae1:	or     esi,0x2000000
64022ae7:	mov    edx,edi
64022ae9:	and    edi,DWORD PTR [esp+0x24]
64022aed:	not    edx
64022aef:	and    edx,esi
64022af1:	or     edx,edi
64022af3:	cmp    edx,esi
64022af5:	jne    0x64022afe
64022af7:	mov    eax,esi
64022af9:	jmp    0x64022ba9
64022afe:	call   0x64022825
64022b03:	push   eax
64022b04:	mov    DWORD PTR [esp+0x2c],eax
64022b08:	call   0x64022bc8
64022b0d:	pop    ecx
64022b0e:	stmxcsr DWORD PTR [esp+0x28]
64022b13:	mov    eax,DWORD PTR [esp+0x28]
64022b17:	xor    edx,edx
64022b19:	test   al,al
64022b1b:	jns    0x64022b20
64022b1d:	push   0x10
64022b1f:	pop    edx
64022b20:	mov    edi,0x200
64022b25:	test   edi,eax
64022b27:	je     0x64022b2c
64022b29:	or     edx,0x8
64022b2c:	test   ax,0x400
64022b30:	je     0x64022b35
64022b32:	or     edx,0x4
64022b35:	test   ax,0x800
64022b39:	je     0x64022b3e
64022b3b:	or     edx,0x2
64022b3e:	test   ax,0x1000
64022b42:	je     0x64022b47
64022b44:	or     edx,0x1
64022b47:	mov    esi,0x100
64022b4c:	test   esi,eax
64022b4e:	je     0x64022b56
64022b50:	or     edx,0x80000
64022b56:	mov    ecx,eax
64022b58:	and    ecx,ebp
64022b5a:	je     0x64022b7e
64022b5c:	cmp    ecx,0x2000
64022b62:	je     0x64022b7c
64022b64:	cmp    ecx,0x4000
64022b6a:	je     0x64022b78
64022b6c:	cmp    ecx,ebp
64022b6e:	jne    0x64022b7e
64022b70:	or     edx,0x300
64022b76:	jmp    0x64022b7e
64022b78:	or     edx,edi
64022b7a:	jmp    0x64022b7e
64022b7c:	or     edx,esi
64022b7e:	and    eax,ebx
64022b80:	sub    eax,0x40
64022b83:	je     0x64022ba1
64022b85:	sub    eax,0x7fc0
64022b8a:	je     0x64022b99
64022b8c:	sub    eax,0x40
64022b8f:	jne    0x64022ba7
64022b91:	or     edx,0x1000000
64022b97:	jmp    0x64022ba7
64022b99:	or     edx,0x3000000
64022b9f:	jmp    0x64022ba7
64022ba1:	or     edx,0x2000000
64022ba7:	mov    eax,edx
64022ba9:	mov    ecx,DWORD PTR [esp+0x1c]
64022bad:	mov    edx,eax
64022baf:	xor    edx,ecx
64022bb1:	or     eax,ecx
64022bb3:	test   edx,0x8031f
64022bb9:	je     0x64022bc0
64022bbb:	or     eax,0x80000000
64022bc0:	pop    edi
64022bc1:	pop    esi
64022bc2:	pop    ebp
64022bc3:	pop    ebx
64022bc4:	add    esp,0x10
64022bc7:	ret    
64022bc8:	push   0x8
64022bca:	push   0x64043fa8
64022bcf:	call   0x64016464
64022bd4:	xor    eax,eax
64022bd6:	cmp    DWORD PTR ds:0x64054674,eax
64022bdc:	je     0x64022c34
64022bde:	test   BYTE PTR [ebp+0x8],0x40
64022be2:	je     0x64022c2c
64022be4:	cmp    DWORD PTR ds:0x64053558,eax
64022bea:	je     0x64022c2c
64022bec:	mov    DWORD PTR [ebp-0x4],eax
64022bef:	ldmxcsr DWORD PTR [ebp+0x8]
64022bf3:	jmp    0x64022c23
64022bf5:	mov    eax,DWORD PTR [ebp-0x14]
64022bf8:	mov    eax,DWORD PTR [eax]
64022bfa:	mov    eax,DWORD PTR [eax]
64022bfc:	cmp    eax,0xc0000005
64022c01:	je     0x64022c0d
64022c03:	cmp    eax,0xc000001d
64022c08:	je     0x64022c0d
64022c0a:	xor    eax,eax
64022c0c:	ret    
64022c0d:	xor    eax,eax
64022c0f:	inc    eax
64022c10:	ret    
64022c11:	mov    esp,DWORD PTR [ebp-0x18]
64022c14:	and    DWORD PTR ds:0x64053558,0x0
64022c1b:	and    DWORD PTR [ebp+0x8],0xffffffbf
64022c1f:	ldmxcsr DWORD PTR [ebp+0x8]
64022c23:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64022c2a:	jmp    0x64022c34
64022c2c:	and    DWORD PTR [ebp+0x8],0xffffffbf
64022c30:	ldmxcsr DWORD PTR [ebp+0x8]
64022c34:	call   0x640164a9
64022c39:	ret    
64022c3a:	int3   
64022c3b:	int3   
64022c3c:	int3   
64022c3d:	int3   
64022c3e:	int3   
64022c3f:	int3   
64022c40:	lea    eax,[edx-0x1]
64022c43:	pop    ebx
64022c44:	ret    
64022c45:	lea    esp,[esp+0x0]
64022c4c:	lea    esp,[esp+0x0]
64022c50:	xor    eax,eax
64022c52:	mov    al,BYTE PTR [esp+0x8]
64022c56:	push   ebx
64022c57:	mov    ebx,eax
64022c59:	shl    eax,0x8
64022c5c:	mov    edx,DWORD PTR [esp+0x8]
64022c60:	test   edx,0x3
64022c66:	je     0x64022c7d
64022c68:	mov    cl,BYTE PTR [edx]
64022c6a:	add    edx,0x1
64022c6d:	cmp    cl,bl
64022c6f:	je     0x64022c40
64022c71:	test   cl,cl
64022c73:	je     0x64022cc6
64022c75:	test   edx,0x3
64022c7b:	jne    0x64022c68
64022c7d:	or     ebx,eax
64022c7f:	push   edi
64022c80:	mov    eax,ebx
64022c82:	shl    ebx,0x10
64022c85:	push   esi
64022c86:	or     ebx,eax
64022c88:	mov    ecx,DWORD PTR [edx]
64022c8a:	mov    edi,0x7efefeff
64022c8f:	mov    eax,ecx
64022c91:	mov    esi,edi
64022c93:	xor    ecx,ebx
64022c95:	add    esi,eax
64022c97:	add    edi,ecx
64022c99:	xor    ecx,0xffffffff
64022c9c:	xor    eax,0xffffffff
64022c9f:	xor    ecx,edi
64022ca1:	xor    eax,esi
64022ca3:	add    edx,0x4
64022ca6:	and    ecx,0x81010100
64022cac:	jne    0x64022cca
64022cae:	and    eax,0x81010100
64022cb3:	je     0x64022c88
64022cb5:	and    eax,0x1010100
64022cba:	jne    0x64022cc4
64022cbc:	and    esi,0x80000000
64022cc2:	jne    0x64022c88
64022cc4:	pop    esi
64022cc5:	pop    edi
64022cc6:	pop    ebx
64022cc7:	xor    eax,eax
64022cc9:	ret    
64022cca:	mov    eax,DWORD PTR [edx-0x4]
64022ccd:	cmp    al,bl
64022ccf:	je     0x64022d07
64022cd1:	test   al,al
64022cd3:	je     0x64022cc4
64022cd5:	cmp    ah,bl
64022cd7:	je     0x64022d00
64022cd9:	test   ah,ah
64022cdb:	je     0x64022cc4
64022cdd:	shr    eax,0x10
64022ce0:	cmp    al,bl
64022ce2:	je     0x64022cf9
64022ce4:	test   al,al
64022ce6:	je     0x64022cc4
64022ce8:	cmp    ah,bl
64022cea:	je     0x64022cf2
64022cec:	test   ah,ah
64022cee:	je     0x64022cc4
64022cf0:	jmp    0x64022c88
64022cf2:	pop    esi
64022cf3:	pop    edi
64022cf4:	lea    eax,[edx-0x1]
64022cf7:	pop    ebx
64022cf8:	ret    
64022cf9:	lea    eax,[edx-0x2]
64022cfc:	pop    esi
64022cfd:	pop    edi
64022cfe:	pop    ebx
64022cff:	ret    
64022d00:	lea    eax,[edx-0x3]
64022d03:	pop    esi
64022d04:	pop    edi
64022d05:	pop    ebx
64022d06:	ret    
64022d07:	lea    eax,[edx-0x4]
64022d0a:	pop    esi
64022d0b:	pop    edi
64022d0c:	pop    ebx
64022d0d:	ret    
64022d0e:	int3   
64022d0f:	int3   
64022d10:	push   esi
64022d11:	mov    esi,ecx
64022d13:	mov    eax,DWORD PTR [esi+0x8]
64022d16:	test   eax,eax
64022d18:	mov    DWORD PTR [esi],0x64041994
64022d1e:	je     0x64022d28
64022d20:	mov    ecx,DWORD PTR [eax]
64022d22:	mov    edx,DWORD PTR [ecx+0x8]
64022d25:	push   eax
64022d26:	call   edx
64022d28:	cmp    DWORD PTR [esi+0xc],0x0
64022d2c:	je     0x64022d45
64022d2e:	call   DWORD PTR ds:0x6402c1a4
64022d34:	test   eax,eax
64022d36:	je     0x64022d45
64022d38:	mov    ecx,DWORD PTR [esi+0xc]
64022d3b:	push   ecx
64022d3c:	push   0x0
64022d3e:	push   eax
64022d3f:	call   DWORD PTR ds:0x6402c198
64022d45:	pop    esi
64022d46:	ret    
64022d47:	int3   
64022d48:	int3   
64022d49:	int3   
64022d4a:	int3   
64022d4b:	int3   
64022d4c:	int3   
64022d4d:	int3   
64022d4e:	int3   
64022d4f:	int3   
64022d50:	sub    esp,0x10
64022d53:	mov    eax,DWORD PTR [esp+0x14]
64022d57:	mov    ecx,DWORD PTR [esp+0x18]
64022d5b:	push   0x64043fc4
64022d60:	lea    edx,[esp+0x4]
64022d64:	push   edx
64022d65:	mov    DWORD PTR [esp+0x8],0x64041994
64022d6d:	mov    DWORD PTR [esp+0xc],eax
64022d71:	mov    DWORD PTR [esp+0x10],ecx
64022d75:	mov    DWORD PTR [esp+0x14],0x0
64022d7d:	call   0x64013812
64022d82:	int3   
64022d83:	int3   
64022d84:	int3   
64022d85:	int3   
64022d86:	int3   
64022d87:	int3   
64022d88:	int3   
64022d89:	int3   
64022d8a:	int3   
64022d8b:	int3   
64022d8c:	int3   
64022d8d:	int3   
64022d8e:	int3   
64022d8f:	int3   
64022d90:	mov    eax,DWORD PTR [esp+0x4]
64022d94:	push   esi
64022d95:	mov    esi,ecx
64022d97:	mov    DWORD PTR [esi],0x64041994
64022d9d:	mov    ecx,DWORD PTR [eax+0x4]
64022da0:	mov    DWORD PTR [esi+0x4],ecx
64022da3:	mov    edx,DWORD PTR [eax+0x8]
64022da6:	mov    eax,edx
64022da8:	test   eax,eax
64022daa:	mov    DWORD PTR [esi+0x8],edx
64022dad:	mov    DWORD PTR [esi+0xc],0x0
64022db4:	je     0x64022dbe
64022db6:	mov    ecx,DWORD PTR [eax]
64022db8:	mov    edx,DWORD PTR [ecx+0x4]
64022dbb:	push   eax
64022dbc:	call   edx
64022dbe:	mov    eax,esi
64022dc0:	pop    esi
64022dc1:	ret    0x4
64022dc4:	int3   
64022dc5:	int3   
64022dc6:	int3   
64022dc7:	int3   
64022dc8:	int3   
64022dc9:	int3   
64022dca:	int3   
64022dcb:	int3   
64022dcc:	int3   
64022dcd:	int3   
64022dce:	int3   
64022dcf:	int3   
64022dd0:	push   esi
64022dd1:	mov    esi,ecx
64022dd3:	mov    eax,DWORD PTR [esi+0x8]
64022dd6:	test   eax,eax
64022dd8:	mov    DWORD PTR [esi],0x64041994
64022dde:	je     0x64022de8
64022de0:	mov    ecx,DWORD PTR [eax]
64022de2:	mov    edx,DWORD PTR [ecx+0x8]
64022de5:	push   eax
64022de6:	call   edx
64022de8:	cmp    DWORD PTR [esi+0xc],0x0
64022dec:	je     0x64022e05
64022dee:	call   DWORD PTR ds:0x6402c1a4
64022df4:	test   eax,eax
64022df6:	je     0x64022e05
64022df8:	mov    ecx,DWORD PTR [esi+0xc]
64022dfb:	push   ecx
64022dfc:	push   0x0
64022dfe:	push   eax
64022dff:	call   DWORD PTR ds:0x6402c198
64022e05:	test   BYTE PTR [esp+0x8],0x1
64022e0a:	je     0x64022e15
64022e0c:	push   esi
64022e0d:	call   0x640135e4
64022e12:	add    esp,0x4
64022e15:	mov    eax,esi
64022e17:	pop    esi
64022e18:	ret    0x4
64022e1b:	int3   
64022e1c:	jmp    DWORD PTR ds:0x6402c1a8
64022e22:	int3   
64022e23:	int3   
64022e24:	int3   
64022e25:	int3   
64022e26:	int3   
64022e27:	int3   
64022e28:	int3   
64022e29:	int3   
64022e2a:	int3   
64022e2b:	int3   
64022e2c:	int3   
64022e2d:	int3   
64022e2e:	int3   
64022e2f:	int3   
64022e30:	lea    ecx,[ebp-0x14]
64022e33:	jmp    0x64003690
64022e38:	lea    ecx,[ebp-0x30]
64022e3b:	jmp    0x640029b0
64022e40:	mov    edx,DWORD PTR [esp+0x8]
64022e44:	lea    eax,[edx+0xc]
64022e47:	mov    ecx,DWORD PTR [edx-0x44]
64022e4a:	xor    ecx,eax
64022e4c:	call   0x64013ca6
64022e51:	mov    ecx,DWORD PTR [edx-0x4]
64022e54:	xor    ecx,eax
64022e56:	call   0x64013ca6
64022e5b:	mov    eax,0x64043988
64022e60:	jmp    0x64013968
64022e65:	int3   
64022e66:	int3   
64022e67:	int3   
64022e68:	int3   
64022e69:	int3   
64022e6a:	int3   
64022e6b:	int3   
64022e6c:	int3   
64022e6d:	int3   
64022e6e:	int3   
64022e6f:	int3   
64022e70:	lea    ecx,[ebp-0x44]
64022e73:	jmp    0x64007080
64022e78:	lea    ecx,[ebp-0x30]
64022e7b:	jmp    0x640029b0
64022e80:	lea    ecx,[ebp-0x34]
64022e83:	jmp    0x64003690
64022e88:	mov    edx,DWORD PTR [esp+0x8]
64022e8c:	lea    eax,[edx+0xc]
64022e8f:	mov    ecx,DWORD PTR [edx-0x48]
64022e92:	xor    ecx,eax
64022e94:	call   0x64013ca6
64022e99:	mov    ecx,DWORD PTR [edx-0x8]
64022e9c:	xor    ecx,eax
64022e9e:	call   0x64013ca6
64022ea3:	mov    eax,0x640439d0
64022ea8:	jmp    0x64013968
64022ead:	lea    ecx,[ebp-0x28]
64022eb0:	jmp    0x640029b0
64022eb5:	mov    edx,DWORD PTR [esp+0x8]
64022eb9:	lea    eax,[edx+0xc]
64022ebc:	mov    ecx,DWORD PTR [edx-0x54]
64022ebf:	xor    ecx,eax
64022ec1:	call   0x64013ca6
64022ec6:	mov    eax,0x64043a24
64022ecb:	jmp    0x64013968
64022ed0:	lea    ecx,[ebp-0x28]
64022ed3:	jmp    0x640029b0
64022ed8:	mov    edx,DWORD PTR [esp+0x8]
64022edc:	lea    eax,[edx+0xc]
64022edf:	mov    ecx,DWORD PTR [edx-0x54]
64022ee2:	xor    ecx,eax
64022ee4:	call   0x64013ca6
64022ee9:	mov    eax,0x64043a50
64022eee:	jmp    0x64013968
64022ef3:	mov    edx,DWORD PTR [esp+0x8]
64022ef7:	lea    eax,[edx+0xc]
64022efa:	mov    ecx,DWORD PTR [edx-0x14]
64022efd:	xor    ecx,eax
64022eff:	call   0x64013ca6
64022f04:	mov    eax,0x64043c50
64022f09:	jmp    0x64013968
64022f0e:	int3   
64022f0f:	int3   
64022f10:	lea    eax,[ebp-0x50]
64022f13:	jmp    0x64008e00
64022f18:	lea    eax,[ebp-0x4c]
64022f1b:	jmp    0x64008e00
64022f20:	mov    edx,DWORD PTR [esp+0x8]
64022f24:	lea    eax,[edx-0x5c]
64022f27:	mov    ecx,DWORD PTR [edx-0x60]
64022f2a:	xor    ecx,eax
64022f2c:	call   0x64013ca6
64022f31:	mov    eax,0x640441ec
64022f36:	jmp    0x64013968
64022f3b:	int3   
64022f3c:	int3   
64022f3d:	int3   
64022f3e:	int3   
64022f3f:	int3   
64022f40:	mov    eax,DWORD PTR [ebp+0x4]
64022f43:	jmp    0x64008e00
64022f48:	mov    edx,DWORD PTR [esp+0x8]
64022f4c:	lea    eax,[edx-0xc]
64022f4f:	mov    ecx,DWORD PTR [edx-0x10]
64022f52:	xor    ecx,eax
64022f54:	call   0x64013ca6
64022f59:	mov    eax,0x64044218
64022f5e:	jmp    0x64013968
64022f63:	int3   
64022f64:	int3   
64022f65:	int3   
64022f66:	int3   
64022f67:	int3   
64022f68:	int3   
64022f69:	int3   
64022f6a:	int3   
64022f6b:	int3   
64022f6c:	int3   
64022f6d:	int3   
64022f6e:	int3   
64022f6f:	int3   
64022f70:	lea    ecx,[ebp+0x8]
64022f73:	jmp    0x64003690
64022f78:	lea    ecx,[ebp-0x43c]
64022f7e:	jmp    0x64002e60
64022f83:	mov    edx,DWORD PTR [esp+0x8]
64022f87:	lea    eax,[edx-0x444]
64022f8d:	mov    ecx,DWORD PTR [edx-0x448]
64022f93:	xor    ecx,eax
64022f95:	call   0x64013ca6
64022f9a:	add    eax,0x10
64022f9d:	mov    ecx,DWORD PTR [edx-0x4]
64022fa0:	xor    ecx,eax
64022fa2:	call   0x64013ca6
64022fa7:	mov    eax,0x6404424c
64022fac:	jmp    0x64013968
64022fb1:	int3   
64022fb2:	int3   
64022fb3:	int3   
64022fb4:	int3   
64022fb5:	int3   
64022fb6:	int3   
64022fb7:	int3   
64022fb8:	int3   
64022fb9:	int3   
64022fba:	int3   
64022fbb:	int3   
64022fbc:	int3   
64022fbd:	int3   
64022fbe:	int3   
64022fbf:	int3   
64022fc0:	mov    edx,DWORD PTR [esp+0x8]
64022fc4:	lea    eax,[edx+0xc]
64022fc7:	mov    ecx,DWORD PTR [edx-0x28]
64022fca:	xor    ecx,eax
64022fcc:	call   0x64013ca6
64022fd1:	mov    eax,0x640442d8
64022fd6:	jmp    0x64013968
64022fdb:	int3   
64022fdc:	int3   
64022fdd:	int3   
64022fde:	int3   
64022fdf:	int3   
64022fe0:	mov    edx,DWORD PTR [esp+0x8]
64022fe4:	lea    eax,[edx+0xc]
64022fe7:	mov    ecx,DWORD PTR [edx-0x2c]
64022fea:	xor    ecx,eax
64022fec:	call   0x64013ca6
64022ff1:	mov    eax,0x64044364
64022ff6:	jmp    0x64013968
64022ffb:	int3   
64022ffc:	int3   
64022ffd:	int3   
64022ffe:	int3   
64022fff:	int3   
64023000:	lea    esi,[ebp+0x4]
64023003:	jmp    0x64003d50
64023008:	mov    edx,DWORD PTR [esp+0x8]
6402300c:	lea    eax,[edx-0x10]
6402300f:	mov    ecx,DWORD PTR [edx-0x14]
64023012:	xor    ecx,eax
64023014:	call   0x64013ca6
64023019:	mov    eax,0x64044390
6402301e:	jmp    0x64013968
64023023:	int3   
64023024:	int3   
64023025:	int3   
64023026:	int3   
64023027:	int3   
64023028:	int3   
64023029:	int3   
6402302a:	int3   
6402302b:	int3   
6402302c:	int3   
6402302d:	int3   
6402302e:	int3   
6402302f:	int3   
64023030:	mov    ecx,DWORD PTR [ebp-0x10]
64023033:	jmp    0x640136b8
64023038:	mov    edx,DWORD PTR [esp+0x8]
6402303c:	lea    eax,[edx-0xc]
6402303f:	mov    ecx,DWORD PTR [edx-0x10]
64023042:	xor    ecx,eax
64023044:	call   0x64013ca6
64023049:	mov    eax,0x640443bc
6402304e:	jmp    0x64013968
64023053:	int3   
64023054:	int3   
64023055:	int3   
64023056:	int3   
64023057:	int3   
64023058:	int3   
64023059:	int3   
6402305a:	int3   
6402305b:	int3   
6402305c:	int3   
6402305d:	int3   
6402305e:	int3   
6402305f:	int3   
64023060:	mov    ecx,DWORD PTR [ebp-0x10]
64023063:	jmp    0x640136b8
64023068:	mov    edx,DWORD PTR [esp+0x8]
6402306c:	lea    eax,[edx-0xc]
6402306f:	mov    ecx,DWORD PTR [edx-0x10]
64023072:	xor    ecx,eax
64023074:	call   0x64013ca6
64023079:	mov    eax,0x640443e8
6402307e:	jmp    0x64013968
64023083:	int3   
64023084:	int3   
64023085:	int3   
64023086:	int3   
64023087:	int3   
64023088:	int3   
64023089:	int3   
6402308a:	int3   
6402308b:	int3   
6402308c:	int3   
6402308d:	int3   
6402308e:	int3   
6402308f:	int3   
64023090:	mov    ecx,DWORD PTR [ebp+0x4]
64023093:	jmp    0x640136b8
64023098:	mov    edx,DWORD PTR [esp+0x8]
6402309c:	lea    eax,[edx-0x4]
6402309f:	mov    ecx,DWORD PTR [edx-0x8]
640230a2:	xor    ecx,eax
640230a4:	call   0x64013ca6
640230a9:	mov    eax,0x64044414
640230ae:	jmp    0x64013968
640230b3:	int3   
640230b4:	int3   
640230b5:	int3   
640230b6:	int3   
640230b7:	int3   
640230b8:	int3   
640230b9:	int3   
640230ba:	int3   
640230bb:	int3   
640230bc:	int3   
640230bd:	int3   
640230be:	int3   
640230bf:	int3   
640230c0:	mov    ecx,DWORD PTR [ebp-0x10]
640230c3:	jmp    0x640136b8
640230c8:	mov    edx,DWORD PTR [esp+0x8]
640230cc:	lea    eax,[edx-0x8]
640230cf:	mov    ecx,DWORD PTR [edx-0xc]
640230d2:	xor    ecx,eax
640230d4:	call   0x64013ca6
640230d9:	mov    eax,0x64044440
640230de:	jmp    0x64013968
640230e3:	int3   
640230e4:	int3   
640230e5:	int3   
640230e6:	int3   
640230e7:	int3   
640230e8:	int3   
640230e9:	int3   
640230ea:	int3   
640230eb:	int3   
640230ec:	int3   
640230ed:	int3   
640230ee:	int3   
640230ef:	int3   
640230f0:	mov    ecx,DWORD PTR [ebp+0x4]
640230f3:	jmp    0x64007890
640230f8:	mov    edx,DWORD PTR [esp+0x8]
640230fc:	lea    eax,[edx-0x4]
640230ff:	mov    ecx,DWORD PTR [edx-0x8]
64023102:	xor    ecx,eax
64023104:	call   0x64013ca6
64023109:	mov    eax,0x6404446c
6402310e:	jmp    0x64013968
64023113:	int3   
64023114:	int3   
64023115:	int3   
64023116:	int3   
64023117:	int3   
64023118:	int3   
64023119:	int3   
6402311a:	int3   
6402311b:	int3   
6402311c:	int3   
6402311d:	int3   
6402311e:	int3   
6402311f:	int3   
64023120:	mov    esi,DWORD PTR [ebp+0x4]
64023123:	jmp    0x64003d50
64023128:	mov    edx,DWORD PTR [esp+0x8]
6402312c:	lea    eax,[edx-0x8]
6402312f:	mov    ecx,DWORD PTR [edx-0xc]
64023132:	xor    ecx,eax
64023134:	call   0x64013ca6
64023139:	mov    eax,0x64044498
6402313e:	jmp    0x64013968
64023143:	int3   
64023144:	int3   
64023145:	int3   
64023146:	int3   
64023147:	int3   
64023148:	int3   
64023149:	int3   
6402314a:	int3   
6402314b:	int3   
6402314c:	int3   
6402314d:	int3   
6402314e:	int3   
6402314f:	int3   
64023150:	mov    ecx,DWORD PTR [ebp-0x10]
64023153:	jmp    0x640029b0
64023158:	mov    edx,DWORD PTR [esp+0x8]
6402315c:	lea    eax,[edx-0x10]
6402315f:	mov    ecx,DWORD PTR [edx-0x14]
64023162:	xor    ecx,eax
64023164:	call   0x64013ca6
64023169:	mov    eax,0x640444c4
6402316e:	jmp    0x64013968
64023173:	int3   
64023174:	int3   
64023175:	int3   
64023176:	int3   
64023177:	int3   
64023178:	int3   
64023179:	int3   
6402317a:	int3   
6402317b:	int3   
6402317c:	int3   
6402317d:	int3   
6402317e:	int3   
6402317f:	int3   
64023180:	mov    eax,DWORD PTR [ebp-0x14]
64023183:	push   eax
64023184:	mov    ecx,DWORD PTR [ebp-0x18]
64023187:	push   ecx
64023188:	call   0x64001240
6402318d:	add    esp,0x8
64023190:	ret    
64023191:	mov    edx,DWORD PTR [esp+0x8]
64023195:	lea    eax,[edx+0xc]
64023198:	mov    ecx,DWORD PTR [edx-0x1c]
6402319b:	xor    ecx,eax
6402319d:	call   0x64013ca6
640231a2:	mov    eax,0x64044524
640231a7:	jmp    0x64013968
640231ac:	int3   
640231ad:	int3   
640231ae:	int3   
640231af:	int3   
640231b0:	mov    eax,DWORD PTR [ebp-0x14]
640231b3:	push   eax
640231b4:	mov    ecx,DWORD PTR [ebp-0x18]
640231b7:	push   ecx
640231b8:	call   0x64001240
640231bd:	add    esp,0x8
640231c0:	ret    
640231c1:	mov    edx,DWORD PTR [esp+0x8]
640231c5:	lea    eax,[edx+0xc]
640231c8:	mov    ecx,DWORD PTR [edx-0x1c]
640231cb:	xor    ecx,eax
640231cd:	call   0x64013ca6
640231d2:	mov    eax,0x64044584
640231d7:	jmp    0x64013968
640231dc:	int3   
640231dd:	int3   
640231de:	int3   
640231df:	int3   
640231e0:	mov    esi,DWORD PTR [ebp+0x4]
640231e3:	jmp    0x64003d50
640231e8:	mov    edx,DWORD PTR [esp+0x8]
640231ec:	lea    eax,[edx-0x8]
640231ef:	mov    ecx,DWORD PTR [edx-0xc]
640231f2:	xor    ecx,eax
640231f4:	call   0x64013ca6
640231f9:	mov    eax,0x640445b0
640231fe:	jmp    0x64013968
64023203:	int3   
64023204:	int3   
64023205:	int3   
64023206:	int3   
64023207:	int3   
64023208:	int3   
64023209:	int3   
6402320a:	int3   
6402320b:	int3   
6402320c:	int3   
6402320d:	int3   
6402320e:	int3   
6402320f:	int3   
64023210:	mov    ecx,DWORD PTR [ebp-0x10]
64023213:	jmp    0x640029b0
64023218:	mov    edx,DWORD PTR [esp+0x8]
6402321c:	lea    eax,[edx-0xc]
6402321f:	mov    ecx,DWORD PTR [edx-0x10]
64023222:	xor    ecx,eax
64023224:	call   0x64013ca6
64023229:	mov    eax,0x640445dc
6402322e:	jmp    0x64013968
64023233:	int3   
64023234:	int3   
64023235:	int3   
64023236:	int3   
64023237:	int3   
64023238:	int3   
64023239:	int3   
6402323a:	int3   
6402323b:	int3   
6402323c:	int3   
6402323d:	int3   
6402323e:	int3   
6402323f:	int3   
64023240:	lea    ecx,[ebp+0x8]
64023243:	jmp    0x640029b0
64023248:	mov    edx,DWORD PTR [esp+0x8]
6402324c:	lea    eax,[edx-0x14]
6402324f:	mov    ecx,DWORD PTR [edx-0x18]
64023252:	xor    ecx,eax
64023254:	call   0x64013ca6
64023259:	mov    eax,0x64044608
6402325e:	jmp    0x64013968
64023263:	int3   
64023264:	int3   
64023265:	int3   
64023266:	int3   
64023267:	int3   
64023268:	int3   
64023269:	int3   
6402326a:	int3   
6402326b:	int3   
6402326c:	int3   
6402326d:	int3   
6402326e:	int3   
6402326f:	int3   
64023270:	mov    eax,DWORD PTR [ebp+0x8]
64023273:	and    eax,0x1
64023276:	je     0x64023288
6402327c:	and    DWORD PTR [ebp+0x8],0xfffffffe
64023280:	mov    ecx,DWORD PTR [ebp+0x4]
64023283:	jmp    0x64003690
64023288:	ret    
64023289:	mov    edx,DWORD PTR [esp+0x8]
6402328d:	lea    eax,[edx-0x8]
64023290:	mov    ecx,DWORD PTR [edx-0xc]
64023293:	xor    ecx,eax
64023295:	call   0x64013ca6
6402329a:	mov    eax,0x64044634
6402329f:	jmp    0x64013968
640232a4:	int3   
640232a5:	int3   
640232a6:	int3   
640232a7:	int3   
640232a8:	int3   
640232a9:	int3   
640232aa:	int3   
640232ab:	int3   
640232ac:	int3   
640232ad:	int3   
640232ae:	int3   
640232af:	int3   
640232b0:	lea    ecx,[ebp-0x10]
640232b3:	jmp    0x64003690
640232b8:	mov    edx,DWORD PTR [esp+0x8]
640232bc:	lea    eax,[edx-0xc]
640232bf:	mov    ecx,DWORD PTR [edx-0x10]
640232c2:	xor    ecx,eax
640232c4:	call   0x64013ca6
640232c9:	mov    eax,0x64044660
640232ce:	jmp    0x64013968
640232d3:	int3   
640232d4:	int3   
640232d5:	int3   
640232d6:	int3   
640232d7:	int3   
640232d8:	int3   
640232d9:	int3   
640232da:	int3   
640232db:	int3   
640232dc:	int3   
640232dd:	int3   
640232de:	int3   
640232df:	int3   
640232e0:	lea    ecx,[ebp+0x4]
640232e3:	jmp    0x64003690
640232e8:	mov    eax,DWORD PTR [ebp-0x10]
640232eb:	push   eax
640232ec:	call   0x640135e4
640232f1:	pop    ecx
640232f2:	ret    
640232f3:	mov    edx,DWORD PTR [esp+0x8]
640232f7:	lea    eax,[edx-0x8]
640232fa:	mov    ecx,DWORD PTR [edx-0xc]
640232fd:	xor    ecx,eax
640232ff:	call   0x64013ca6
64023304:	mov    eax,0x64044694
64023309:	jmp    0x64013968
6402330e:	int3   
6402330f:	int3   
64023310:	mov    eax,DWORD PTR [ebp-0x10]
64023313:	and    eax,0x1
64023316:	je     0x64023328
6402331c:	and    DWORD PTR [ebp-0x10],0xfffffffe
64023320:	mov    ecx,DWORD PTR [ebp+0x4]
64023323:	jmp    0x64003690
64023328:	ret    
64023329:	mov    edx,DWORD PTR [esp+0x8]
6402332d:	lea    eax,[edx-0xc]
64023330:	mov    ecx,DWORD PTR [edx-0x10]
64023333:	xor    ecx,eax
64023335:	call   0x64013ca6
6402333a:	mov    eax,0x640446c0
6402333f:	jmp    0x64013968
64023344:	int3   
64023345:	int3   
64023346:	int3   
64023347:	int3   
64023348:	int3   
64023349:	int3   
6402334a:	int3   
6402334b:	int3   
6402334c:	int3   
6402334d:	int3   
6402334e:	int3   
6402334f:	int3   
64023350:	lea    eax,[ebp-0x14]
64023353:	jmp    0x64008e00
64023358:	lea    eax,[ebp-0x10]
6402335b:	jmp    0x64008e00
64023360:	mov    edx,DWORD PTR [esp+0x8]
64023364:	lea    eax,[edx-0x1c]
64023367:	mov    ecx,DWORD PTR [edx-0x20]
6402336a:	xor    ecx,eax
6402336c:	call   0x64013ca6
64023371:	mov    eax,0x640446f4
64023376:	jmp    0x64013968
6402337b:	int3   
6402337c:	int3   
6402337d:	int3   
6402337e:	int3   
6402337f:	int3   
64023380:	lea    ecx,[ebp-0x28]
64023383:	jmp    0x640029b0
64023388:	mov    edx,DWORD PTR [esp+0x8]
6402338c:	lea    eax,[edx-0x28]
6402338f:	mov    ecx,DWORD PTR [edx-0x2c]
64023392:	xor    ecx,eax
64023394:	call   0x64013ca6
64023399:	mov    eax,0x64044720
6402339e:	jmp    0x64013968
640233a3:	int3   
640233a4:	int3   
640233a5:	int3   
640233a6:	int3   
640233a7:	int3   
640233a8:	int3   
640233a9:	int3   
640233aa:	int3   
640233ab:	int3   
640233ac:	int3   
640233ad:	int3   
640233ae:	int3   
640233af:	int3   
640233b0:	mov    ecx,DWORD PTR [ebp-0x10]
640233b3:	jmp    0x64003690
640233b8:	mov    edx,DWORD PTR [esp+0x8]
640233bc:	lea    eax,[edx-0xc]
640233bf:	mov    ecx,DWORD PTR [edx-0x10]
640233c2:	xor    ecx,eax
640233c4:	call   0x64013ca6
640233c9:	mov    eax,0x6404474c
640233ce:	jmp    0x64013968
640233d3:	int3   
640233d4:	int3   
640233d5:	int3   
640233d6:	int3   
640233d7:	int3   
640233d8:	int3   
640233d9:	int3   
640233da:	int3   
640233db:	int3   
640233dc:	int3   
640233dd:	int3   
640233de:	int3   
640233df:	int3   
640233e0:	mov    ecx,DWORD PTR [ebp+0x4]
640233e3:	jmp    0x64003690
640233e8:	mov    edx,DWORD PTR [esp+0x8]
640233ec:	lea    eax,[edx-0xc]
640233ef:	mov    ecx,DWORD PTR [edx-0x10]
640233f2:	xor    ecx,eax
640233f4:	call   0x64013ca6
640233f9:	mov    eax,0x64044778
640233fe:	jmp    0x64013968
64023403:	int3   
64023404:	int3   
64023405:	int3   
64023406:	int3   
64023407:	int3   
64023408:	int3   
64023409:	int3   
6402340a:	int3   
6402340b:	int3   
6402340c:	int3   
6402340d:	int3   
6402340e:	int3   
6402340f:	int3   
64023410:	lea    ecx,[ebp-0x50]
64023413:	jmp    0x640029b0
64023418:	mov    edx,DWORD PTR [esp+0x8]
6402341c:	lea    eax,[edx+0xc]
6402341f:	mov    ecx,DWORD PTR [edx-0x70]
64023422:	xor    ecx,eax
64023424:	call   0x64013ca6
64023429:	mov    eax,0x640447a4
6402342e:	jmp    0x64013968
64023433:	int3   
64023434:	int3   
64023435:	int3   
64023436:	int3   
64023437:	int3   
64023438:	int3   
64023439:	int3   
6402343a:	int3   
6402343b:	int3   
6402343c:	int3   
6402343d:	int3   
6402343e:	int3   
6402343f:	int3   
64023440:	lea    ecx,[ebp-0x54]
64023443:	jmp    0x640029b0
64023448:	mov    edx,DWORD PTR [esp+0x8]
6402344c:	lea    eax,[edx-0x48]
6402344f:	mov    ecx,DWORD PTR [edx-0x4c]
64023452:	xor    ecx,eax
64023454:	call   0x64013ca6
64023459:	mov    eax,0x640447d0
6402345e:	jmp    0x64013968
64023463:	int3   
64023464:	int3   
64023465:	int3   
64023466:	int3   
64023467:	int3   
64023468:	int3   
64023469:	int3   
6402346a:	int3   
6402346b:	int3   
6402346c:	int3   
6402346d:	int3   
6402346e:	int3   
6402346f:	int3   
64023470:	lea    ecx,[ebp-0x98]
64023476:	jmp    0x640029b0
6402347b:	lea    ecx,[ebp-0x98]
64023481:	jmp    0x640029b0
64023486:	lea    ecx,[ebp-0x7c]
64023489:	jmp    0x640029b0
6402348e:	mov    edx,DWORD PTR [esp+0x8]
64023492:	lea    eax,[edx-0xa8]
64023498:	mov    ecx,DWORD PTR [edx-0xac]
6402349e:	xor    ecx,eax
640234a0:	call   0x64013ca6
640234a5:	mov    eax,0x6404480c
640234aa:	jmp    0x64013968
640234af:	int3   
640234b0:	lea    ecx,[ebp-0x2c]
640234b3:	jmp    0x64002e60
640234b8:	mov    edx,DWORD PTR [esp+0x8]
640234bc:	lea    eax,[edx-0x38]
640234bf:	mov    ecx,DWORD PTR [edx-0x3c]
640234c2:	xor    ecx,eax
640234c4:	call   0x64013ca6
640234c9:	mov    eax,0x64044838
640234ce:	jmp    0x64013968
640234d3:	int3   
640234d4:	int3   
640234d5:	int3   
640234d6:	int3   
640234d7:	int3   
640234d8:	int3   
640234d9:	int3   
640234da:	int3   
640234db:	int3   
640234dc:	int3   
640234dd:	int3   
640234de:	int3   
640234df:	int3   
640234e0:	lea    ecx,[ebp-0x54]
640234e3:	jmp    0x640029b0
640234e8:	mov    edx,DWORD PTR [esp+0x8]
640234ec:	lea    eax,[edx-0x58]
640234ef:	mov    ecx,DWORD PTR [edx-0x5c]
640234f2:	xor    ecx,eax
640234f4:	call   0x64013ca6
640234f9:	mov    eax,0x64044864
640234fe:	jmp    0x64013968
64023503:	int3   
64023504:	int3   
64023505:	int3   
64023506:	int3   
64023507:	int3   
64023508:	int3   
64023509:	int3   
6402350a:	int3   
6402350b:	int3   
6402350c:	int3   
6402350d:	int3   
6402350e:	int3   
6402350f:	int3   
64023510:	lea    ecx,[ebp-0x54]
64023513:	jmp    0x640029b0
64023518:	mov    edx,DWORD PTR [esp+0x8]
6402351c:	lea    eax,[edx-0x5c]
6402351f:	mov    ecx,DWORD PTR [edx-0x60]
64023522:	xor    ecx,eax
64023524:	call   0x64013ca6
64023529:	mov    eax,0x64044890
6402352e:	jmp    0x64013968
64023533:	int3   
64023534:	int3   
64023535:	int3   
64023536:	int3   
64023537:	int3   
64023538:	int3   
64023539:	int3   
6402353a:	int3   
6402353b:	int3   
6402353c:	int3   
6402353d:	int3   
6402353e:	int3   
6402353f:	int3   
64023540:	lea    ecx,[ebp-0x50]
64023543:	jmp    0x640029b0
64023548:	mov    edx,DWORD PTR [esp+0x8]
6402354c:	lea    eax,[edx-0x54]
6402354f:	mov    ecx,DWORD PTR [edx-0x58]
64023552:	xor    ecx,eax
64023554:	call   0x64013ca6
64023559:	mov    eax,0x640448bc
6402355e:	jmp    0x64013968
64023563:	int3   
64023564:	int3   
64023565:	int3   
64023566:	int3   
64023567:	int3   
64023568:	int3   
64023569:	int3   
6402356a:	int3   
6402356b:	int3   
6402356c:	int3   
6402356d:	int3   
6402356e:	int3   
6402356f:	int3   
64023570:	lea    ecx,[ebp-0x54]
64023573:	jmp    0x640029b0
64023578:	mov    edx,DWORD PTR [esp+0x8]
6402357c:	lea    eax,[edx-0x5c]
6402357f:	mov    ecx,DWORD PTR [edx-0x60]
64023582:	xor    ecx,eax
64023584:	call   0x64013ca6
64023589:	mov    eax,0x640448e8
6402358e:	jmp    0x64013968
64023593:	int3   
64023594:	int3   
64023595:	int3   
64023596:	int3   
64023597:	int3   
64023598:	int3   
64023599:	int3   
6402359a:	int3   
6402359b:	int3   
6402359c:	int3   
6402359d:	int3   
6402359e:	int3   
6402359f:	int3   
640235a0:	lea    esi,[ebp-0x64]
640235a3:	jmp    0x64003d50
640235a8:	lea    esi,[ebp-0x48]
640235ab:	jmp    0x64003fe0
640235b0:	mov    edx,DWORD PTR [esp+0x8]
640235b4:	lea    eax,[edx-0x70]
640235b7:	mov    ecx,DWORD PTR [edx-0x74]
640235ba:	xor    ecx,eax
640235bc:	call   0x64013ca6
640235c1:	mov    eax,0x6404491c
640235c6:	jmp    0x64013968
640235cb:	int3   
640235cc:	int3   
640235cd:	int3   
640235ce:	int3   
640235cf:	int3   
640235d0:	lea    ecx,[ebp-0x64]
640235d3:	jmp    0x640029b0
640235d8:	lea    ecx,[ebp-0x48]
640235db:	jmp    0x64003f90
640235e0:	mov    edx,DWORD PTR [esp+0x8]
640235e4:	lea    eax,[edx-0x6c]
640235e7:	mov    ecx,DWORD PTR [edx-0x70]
640235ea:	xor    ecx,eax
640235ec:	call   0x64013ca6
640235f1:	mov    eax,0x64044950
640235f6:	jmp    0x64013968
640235fb:	int3   
640235fc:	int3   
640235fd:	int3   
640235fe:	int3   
640235ff:	int3   
64023600:	mov    eax,ds:0x640544e8
64023605:	and    eax,0xfffffffe
64023608:	mov    ds:0x640544e8,eax
6402360d:	ret    
6402360e:	mov    edx,DWORD PTR [esp+0x8]
64023612:	lea    eax,[edx]
64023614:	mov    ecx,DWORD PTR [edx-0x4]
64023617:	xor    ecx,eax
64023619:	call   0x64013ca6
6402361e:	mov    eax,0x6404497c
64023623:	jmp    0x64013968
64023628:	int3   
64023629:	int3   
6402362a:	int3   
6402362b:	int3   
6402362c:	int3   
6402362d:	int3   
6402362e:	int3   
6402362f:	int3   
64023630:	mov    eax,ds:0x640544ec
64023635:	and    eax,0xfffffffe
64023638:	mov    ds:0x640544ec,eax
6402363d:	ret    
6402363e:	mov    edx,DWORD PTR [esp+0x8]
64023642:	lea    eax,[edx]
64023644:	mov    ecx,DWORD PTR [edx-0x4]
64023647:	xor    ecx,eax
64023649:	call   0x64013ca6
6402364e:	mov    eax,0x640449a8
64023653:	jmp    0x64013968
64023658:	int3   
64023659:	int3   
6402365a:	int3   
6402365b:	int3   
6402365c:	int3   
6402365d:	int3   
6402365e:	int3   
6402365f:	int3   
64023660:	lea    esi,[ebp-0x4c]
64023663:	jmp    0x64003d50
64023668:	lea    esi,[ebp-0x30]
6402366b:	jmp    0x64003d50
64023670:	mov    edx,DWORD PTR [esp+0x8]
64023674:	lea    eax,[edx-0x5c]
64023677:	mov    ecx,DWORD PTR [edx-0x60]
6402367a:	xor    ecx,eax
6402367c:	call   0x64013ca6
64023681:	add    eax,0xc
64023684:	mov    ecx,DWORD PTR [edx-0x8]
64023687:	xor    ecx,eax
64023689:	call   0x64013ca6
6402368e:	mov    eax,0x640449dc
64023693:	jmp    0x64013968
64023698:	int3   
64023699:	int3   
6402369a:	int3   
6402369b:	int3   
6402369c:	int3   
6402369d:	int3   
6402369e:	int3   
6402369f:	int3   
640236a0:	lea    ecx,[ebp-0x4c]
640236a3:	jmp    0x640029b0
640236a8:	lea    ecx,[ebp-0x30]
640236ab:	jmp    0x640029b0
640236b0:	mov    edx,DWORD PTR [esp+0x8]
640236b4:	lea    eax,[edx-0x5c]
640236b7:	mov    ecx,DWORD PTR [edx-0x60]
640236ba:	xor    ecx,eax
640236bc:	call   0x64013ca6
640236c1:	add    eax,0xc
640236c4:	mov    ecx,DWORD PTR [edx-0x8]
640236c7:	xor    ecx,eax
640236c9:	call   0x64013ca6
640236ce:	mov    eax,0x64044a10
640236d3:	jmp    0x64013968
640236d8:	int3   
640236d9:	int3   
640236da:	int3   
640236db:	int3   
640236dc:	int3   
640236dd:	int3   
640236de:	int3   
640236df:	int3   
640236e0:	mov    eax,DWORD PTR [ebp-0x58]
640236e3:	and    eax,0x1
640236e6:	je     0x640236f8
640236ec:	and    DWORD PTR [ebp-0x58],0xfffffffe
640236f0:	mov    ecx,DWORD PTR [ebp+0x4]
640236f3:	jmp    0x64003690
640236f8:	ret    
640236f9:	lea    ecx,[ebp-0x54]
640236fc:	jmp    0x640029b0
64023701:	mov    edx,DWORD PTR [esp+0x8]
64023705:	lea    eax,[edx-0x58]
64023708:	mov    ecx,DWORD PTR [edx-0x5c]
6402370b:	xor    ecx,eax
6402370d:	call   0x64013ca6
64023712:	mov    eax,0x64044a44
64023717:	jmp    0x64013968
6402371c:	int3   
6402371d:	int3   
6402371e:	int3   
6402371f:	int3   
64023720:	lea    ecx,[ebp-0x28]
64023723:	jmp    0x64009c40
64023728:	lea    ecx,[ebp-0xf8]
6402372e:	jmp    0x640029b0
64023733:	lea    eax,[ebp-0x38]
64023736:	jmp    0x64008e00
6402373b:	mov    edx,DWORD PTR [esp+0x8]
6402373f:	lea    eax,[edx+0xc]
64023742:	mov    ecx,DWORD PTR [edx-0x234]
64023748:	xor    ecx,eax
6402374a:	call   0x64013ca6
6402374f:	mov    ecx,DWORD PTR [edx-0x30]
64023752:	xor    ecx,eax
64023754:	call   0x64013ca6
64023759:	mov    eax,0x64044abc
6402375e:	jmp    0x64013968
64023763:	int3   
64023764:	int3   
64023765:	int3   
64023766:	int3   
64023767:	int3   
64023768:	int3   
64023769:	int3   
6402376a:	int3   
6402376b:	int3   
6402376c:	int3   
6402376d:	int3   
6402376e:	int3   
6402376f:	int3   
64023770:	lea    ecx,[ebp-0x1040]
64023776:	jmp    0x64009c40
6402377b:	lea    ecx,[ebp-0x106c]
64023781:	jmp    0x640029b0
64023786:	lea    eax,[ebp-0x104c]
6402378c:	jmp    0x64008e00
64023791:	mov    edx,DWORD PTR [esp+0x8]
64023795:	lea    eax,[edx+0xc]
64023798:	mov    ecx,DWORD PTR [edx-0x1070]
6402379e:	xor    ecx,eax
640237a0:	call   0x64013ca6
640237a5:	mov    ecx,DWORD PTR [edx-0xc]
640237a8:	xor    ecx,eax
640237aa:	call   0x64013ca6
640237af:	mov    eax,0x64044b34
640237b4:	jmp    0x64013968
640237b9:	int3   
640237ba:	int3   
640237bb:	int3   
640237bc:	int3   
640237bd:	int3   
640237be:	int3   
640237bf:	int3   
640237c0:	lea    ecx,[ebp-0x103c]
640237c6:	jmp    0x64009c40
640237cb:	lea    ecx,[ebp-0x106c]
640237d1:	jmp    0x640029b0
640237d6:	lea    eax,[ebp-0x1044]
640237dc:	jmp    0x64008e00
640237e1:	mov    edx,DWORD PTR [esp+0x8]
640237e5:	lea    eax,[edx+0xc]
640237e8:	mov    ecx,DWORD PTR [edx-0x1074]
640237ee:	xor    ecx,eax
640237f0:	call   0x64013ca6
640237f5:	mov    ecx,DWORD PTR [edx-0x8]
640237f8:	xor    ecx,eax
640237fa:	call   0x64013ca6
640237ff:	mov    eax,0x64044bac
64023804:	jmp    0x64013968
64023809:	int3   
6402380a:	int3   
6402380b:	int3   
6402380c:	int3   
6402380d:	int3   
6402380e:	int3   
6402380f:	int3   
64023810:	lea    ecx,[ebp-0x28]
64023813:	jmp    0x640029b0
64023818:	mov    edx,DWORD PTR [esp+0x8]
6402381c:	lea    eax,[edx-0x28]
6402381f:	mov    ecx,DWORD PTR [edx-0x2c]
64023822:	xor    ecx,eax
64023824:	call   0x64013ca6
64023829:	mov    eax,0x64044bd8
6402382e:	jmp    0x64013968
64023833:	int3   
64023834:	int3   
64023835:	int3   
64023836:	int3   
64023837:	int3   
64023838:	int3   
64023839:	int3   
6402383a:	int3   
6402383b:	int3   
6402383c:	int3   
6402383d:	int3   
6402383e:	int3   
6402383f:	int3   
64023840:	lea    ecx,[ebp-0xb0]
64023846:	jmp    0x64009c40
6402384b:	lea    eax,[ebp-0x64]
6402384e:	jmp    0x64007a20
64023853:	lea    ecx,[ebp-0xac]
64023859:	jmp    0x640029b0
6402385e:	lea    ecx,[ebp-0xac]
64023864:	jmp    0x640029b0
64023869:	lea    ecx,[ebp-0xac]
6402386f:	jmp    0x640029b0
64023874:	lea    ecx,[ebp-0xac]
6402387a:	jmp    0x640029b0
6402387f:	lea    ecx,[ebp-0xac]
64023885:	jmp    0x640029b0
6402388a:	lea    ecx,[ebp-0xac]
64023890:	jmp    0x640029b0
64023895:	lea    ecx,[ebp-0xac]
6402389b:	jmp    0x640029b0
640238a0:	lea    ecx,[ebp-0xac]
640238a6:	jmp    0x640029b0
640238ab:	lea    ecx,[ebp-0xac]
640238b1:	jmp    0x640029b0
640238b6:	lea    ecx,[ebp-0x50]
640238b9:	jmp    0x640029b0
640238be:	mov    edx,DWORD PTR [esp+0x8]
640238c2:	lea    eax,[edx-0xb4]
640238c8:	mov    ecx,DWORD PTR [edx-0xb8]
640238ce:	xor    ecx,eax
640238d0:	call   0x64013ca6
640238d5:	mov    eax,0x64044c60
640238da:	jmp    0x64013968
640238df:	int3   
640238e0:	mov    ecx,DWORD PTR [ebp+0x4]
640238e3:	jmp    0x64002e60
640238e8:	mov    ecx,DWORD PTR [ebp+0x4]
640238eb:	add    ecx,0x894
640238f1:	jmp    0x64009a50
640238f6:	mov    eax,DWORD PTR [ebp-0x2c]
640238f9:	push   eax
640238fa:	call   0x640135e4
640238ff:	pop    ecx
64023900:	ret    
64023901:	mov    eax,DWORD PTR [ebp-0x30]
64023904:	and    eax,0x1
64023907:	je     0x64023919
6402390d:	and    DWORD PTR [ebp-0x30],0xfffffffe
64023911:	lea    ecx,[ebp-0x28]
64023914:	jmp    0x640029b0
64023919:	ret    
6402391a:	mov    edx,DWORD PTR [esp+0x8]
6402391e:	lea    eax,[edx-0x34]
64023921:	mov    ecx,DWORD PTR [edx-0x38]
64023924:	xor    ecx,eax
64023926:	call   0x64013ca6
6402392b:	mov    eax,0x64044cac
64023930:	jmp    0x64013968
64023935:	int3   
64023936:	int3   
64023937:	int3   
64023938:	int3   
64023939:	int3   
6402393a:	int3   
6402393b:	int3   
6402393c:	int3   
6402393d:	int3   
6402393e:	int3   
6402393f:	int3   
64023940:	lea    ecx,[ebp-0x18]
64023943:	jmp    0x64002e60
64023948:	lea    ecx,[ebp-0x1c]
6402394b:	jmp    0x64003690
64023950:	mov    eax,ds:0x64054668
64023955:	and    eax,0xfffffffe
64023958:	mov    ds:0x64054668,eax
6402395d:	ret    
6402395e:	mov    edx,DWORD PTR [esp+0x8]
64023962:	lea    eax,[edx-0x24]
64023965:	mov    ecx,DWORD PTR [edx-0x28]
64023968:	xor    ecx,eax
6402396a:	call   0x64013ca6
6402396f:	mov    eax,0x64044ce8
64023974:	jmp    0x64013968
64023979:	int3   
6402397a:	int3   
6402397b:	int3   
6402397c:	int3   
6402397d:	int3   
6402397e:	int3   
6402397f:	int3   
64023980:	lea    ecx,[ebp-0x10]
64023983:	jmp    0x64002e60
64023988:	mov    edx,DWORD PTR [esp+0x8]
6402398c:	lea    eax,[edx-0x18]
6402398f:	mov    ecx,DWORD PTR [edx-0x1c]
64023992:	xor    ecx,eax
64023994:	call   0x64013ca6
64023999:	mov    eax,0x64044d14
6402399e:	jmp    0x64013968
640239a3:	int3   
640239a4:	int3   
640239a5:	int3   
640239a6:	int3   
640239a7:	int3   
640239a8:	int3   
640239a9:	int3   
640239aa:	int3   
640239ab:	int3   
640239ac:	int3   
640239ad:	int3   
640239ae:	int3   
640239af:	int3   
640239b0:	lea    eax,[ebp-0x58]
640239b3:	jmp    0x64008e00
640239b8:	lea    eax,[ebp-0x5c]
640239bb:	jmp    0x64008e00
640239c0:	lea    ecx,[ebp-0x54]
640239c3:	jmp    0x640029b0
640239c8:	lea    ecx,[ebp-0x54]
640239cb:	jmp    0x640029b0
640239d0:	lea    ecx,[ebp-0x54]
640239d3:	jmp    0x640029b0
640239d8:	mov    edx,DWORD PTR [esp+0x8]
640239dc:	lea    eax,[edx-0x5c]
640239df:	mov    ecx,DWORD PTR [edx-0x60]
640239e2:	xor    ecx,eax
640239e4:	call   0x64013ca6
640239e9:	mov    eax,0x64044d60
640239ee:	jmp    0x64013968
640239f3:	int3   
640239f4:	int3   
640239f5:	int3   
640239f6:	int3   
640239f7:	int3   
640239f8:	int3   
640239f9:	int3   
640239fa:	int3   
640239fb:	int3   
640239fc:	int3   
640239fd:	int3   
640239fe:	int3   
640239ff:	int3   
64023a00:	mov    eax,ds:0x6405466c
64023a05:	and    eax,0xfffffffe
64023a08:	mov    ds:0x6405466c,eax
64023a0d:	ret    
64023a0e:	mov    eax,DWORD PTR [ebp-0x2c]
64023a11:	and    eax,0x1
64023a14:	je     0x64023a26
64023a1a:	and    DWORD PTR [ebp-0x2c],0xfffffffe
64023a1e:	mov    ecx,DWORD PTR [ebp-0x30]
64023a21:	jmp    0x64003690
64023a26:	ret    
64023a27:	lea    ecx,[ebp-0x4c]
64023a2a:	jmp    0x640029b0
64023a2f:	mov    edx,DWORD PTR [esp+0x8]
64023a33:	lea    eax,[edx+0xc]
64023a36:	mov    ecx,DWORD PTR [edx-0xa1c]
64023a3c:	xor    ecx,eax
64023a3e:	call   0x64013ca6
64023a43:	mov    ecx,DWORD PTR [edx-0x4]
64023a46:	xor    ecx,eax
64023a48:	call   0x64013ca6
64023a4d:	mov    eax,0x64044d9c
64023a52:	jmp    0x64013968
64023a57:	int3   
64023a58:	int3   
64023a59:	int3   
64023a5a:	int3   
64023a5b:	int3   
64023a5c:	int3   
64023a5d:	int3   
64023a5e:	int3   
64023a5f:	int3   
64023a60:	mov    eax,DWORD PTR [ebp-0x58]
64023a63:	and    eax,0x1
64023a66:	je     0x64023a78
64023a6c:	and    DWORD PTR [ebp-0x58],0xfffffffe
64023a70:	mov    ecx,DWORD PTR [ebp+0x4]
64023a73:	jmp    0x64003690
64023a78:	ret    
64023a79:	lea    ecx,[ebp-0x54]
64023a7c:	jmp    0x640029b0
64023a81:	mov    edx,DWORD PTR [esp+0x8]
64023a85:	lea    eax,[edx-0x60]
64023a88:	mov    ecx,DWORD PTR [edx-0x64]
64023a8b:	xor    ecx,eax
64023a8d:	call   0x64013ca6
64023a92:	mov    eax,0x64044dd0
64023a97:	jmp    0x64013968
64023a9c:	int3   
64023a9d:	int3   
64023a9e:	int3   
64023a9f:	int3   
64023aa0:	lea    ecx,[ebp-0x20]
64023aa3:	jmp    0x64007080
64023aa8:	mov    edx,DWORD PTR [esp+0x8]
64023aac:	lea    eax,[edx+0xc]
64023aaf:	mov    ecx,DWORD PTR [edx-0x24]
64023ab2:	xor    ecx,eax
64023ab4:	call   0x64013ca6
64023ab9:	mov    eax,0x64044e30
64023abe:	jmp    0x64013968
64023ac3:	int3   
64023ac4:	int3   
64023ac5:	int3   
64023ac6:	int3   
64023ac7:	int3   
64023ac8:	int3   
64023ac9:	int3   
64023aca:	int3   
64023acb:	int3   
64023acc:	int3   
64023acd:	int3   
64023ace:	int3   
64023acf:	int3   
64023ad0:	lea    ecx,[ebp-0x94]
64023ad6:	jmp    0x64003690
64023adb:	mov    edx,DWORD PTR [esp+0x8]
64023adf:	lea    eax,[edx-0x8c]
64023ae5:	mov    ecx,DWORD PTR [edx-0x90]
64023aeb:	xor    ecx,eax
64023aed:	call   0x64013ca6
64023af2:	add    eax,0x4
64023af5:	mov    ecx,DWORD PTR [edx-0x4]
64023af8:	xor    ecx,eax
64023afa:	call   0x64013ca6
64023aff:	mov    eax,0x64044e5c
64023b04:	jmp    0x64013968
64023b09:	int3   
64023b0a:	int3   
64023b0b:	int3   
64023b0c:	int3   
64023b0d:	int3   
64023b0e:	int3   
64023b0f:	int3   
64023b10:	lea    ecx,[ebp-0x7c]
64023b13:	jmp    0x64003690
64023b18:	lea    ecx,[ebp-0xa4]
64023b1e:	jmp    0x640029b0
64023b23:	lea    ecx,[ebp-0xe8]
64023b29:	jmp    0x640029b0
64023b2e:	lea    ecx,[ebp-0x104]
64023b34:	jmp    0x640029b0
64023b39:	lea    ecx,[ebp-0x13c]
64023b3f:	jmp    0x640029b0
64023b44:	lea    ecx,[ebp-0x120]
64023b4a:	jmp    0x640029b0
64023b4f:	mov    edx,DWORD PTR [esp+0x8]
64023b53:	lea    eax,[edx+0xc]
64023b56:	mov    ecx,DWORD PTR [edx-0x144]
64023b5c:	xor    ecx,eax
64023b5e:	call   0x64013ca6
64023b63:	mov    ecx,DWORD PTR [edx-0x4]
64023b66:	xor    ecx,eax
64023b68:	call   0x64013ca6
64023b6d:	mov    eax,0x64044eb0
64023b72:	jmp    0x64013968
64023b77:	int3   
64023b78:	int3   
64023b79:	int3   
64023b7a:	int3   
64023b7b:	int3   
64023b7c:	int3   
64023b7d:	int3   
64023b7e:	int3   
64023b7f:	int3   
64023b80:	lea    ecx,[ebp-0x85c]
64023b86:	jmp    0x640029b0
64023b8b:	lea    eax,[ebp-0x870]
64023b91:	jmp    0x64007a20
64023b96:	lea    ecx,[ebp-0x87c]
64023b9c:	jmp    0x64003690
64023ba1:	mov    edx,DWORD PTR [esp+0x8]
64023ba5:	lea    eax,[edx-0x87c]
64023bab:	mov    ecx,DWORD PTR [edx-0x880]
64023bb1:	xor    ecx,eax
64023bb3:	call   0x64013ca6
64023bb8:	add    eax,0x8
64023bbb:	mov    ecx,DWORD PTR [edx-0x8]
64023bbe:	xor    ecx,eax
64023bc0:	call   0x64013ca6
64023bc5:	mov    eax,0x64044eec
64023bca:	jmp    0x64013968
64023bcf:	int3   
64023bd0:	lea    esi,[ebp-0x8ac]
64023bd6:	jmp    0x640095b0
64023bdb:	lea    ecx,[ebp-0x8c8]
64023be1:	jmp    0x640029b0
64023be6:	mov    edx,DWORD PTR [esp+0x8]
64023bea:	lea    eax,[edx+0xc]
64023bed:	mov    ecx,DWORD PTR [edx-0x8cc]
64023bf3:	xor    ecx,eax
64023bf5:	call   0x64013ca6
64023bfa:	mov    ecx,DWORD PTR [edx-0x8]
64023bfd:	xor    ecx,eax
64023bff:	call   0x64013ca6
64023c04:	mov    eax,0x64044f54
64023c09:	jmp    0x64013968
64023c0e:	int3   
64023c0f:	int3   
64023c10:	lea    ecx,[ebp-0x1c]
64023c13:	jmp    0x64003690
64023c18:	lea    ecx,[ebp-0x14]
64023c1b:	jmp    0x64003690
64023c20:	lea    ecx,[ebp-0x18]
64023c23:	jmp    0x64003690
64023c28:	mov    edx,DWORD PTR [esp+0x8]
64023c2c:	lea    eax,[edx-0x1c]
64023c2f:	mov    ecx,DWORD PTR [edx-0x20]
64023c32:	xor    ecx,eax
64023c34:	call   0x64013ca6
64023c39:	mov    eax,0x64044f90
64023c3e:	jmp    0x64013968
64023c43:	int3   
64023c44:	int3   
64023c45:	int3   
64023c46:	int3   
64023c47:	int3   
64023c48:	int3   
64023c49:	int3   
64023c4a:	int3   
64023c4b:	int3   
64023c4c:	int3   
64023c4d:	int3   
64023c4e:	int3   
64023c4f:	int3   
64023c50:	mov    eax,DWORD PTR [ebp-0x18]
64023c53:	and    eax,0x1
64023c56:	je     0x64023c68
64023c5c:	and    DWORD PTR [ebp-0x18],0xfffffffe
64023c60:	mov    ecx,DWORD PTR [ebp+0x4]
64023c63:	jmp    0x64003690
64023c68:	ret    
64023c69:	lea    ecx,[ebp-0x14]
64023c6c:	jmp    0x64003690
64023c71:	lea    ecx,[ebp-0x10]
64023c74:	jmp    0x64003690
64023c79:	lea    ecx,[ebp-0x14]
64023c7c:	jmp    0x64003690
64023c81:	mov    edx,DWORD PTR [esp+0x8]
64023c85:	lea    eax,[edx-0x18]
64023c88:	mov    ecx,DWORD PTR [edx-0x1c]
64023c8b:	xor    ecx,eax
64023c8d:	call   0x64013ca6
64023c92:	mov    eax,0x64044fd4
64023c97:	jmp    0x64013968
64023c9c:	int3   
64023c9d:	int3   
64023c9e:	int3   
64023c9f:	int3   
64023ca0:	push   edi
64023ca1:	mov    edi,0x64054658
64023ca6:	call   0x64001860
64023cab:	pop    edi
64023cac:	ret    
64023cad:	int3   
64023cae:	int3   
64023caf:	int3   
64023cb0:	push   edi
64023cb1:	mov    edi,0x64054659
64023cb6:	call   0x64001860
64023cbb:	pop    edi
64023cbc:	ret    
64023cbd:	int3   
64023cbe:	int3   
64023cbf:	int3   
64023cc0:	push   0x0
64023cc2:	push   0x0
64023cc4:	push   0x1
64023cc6:	push   0x0
64023cc8:	call   DWORD PTR ds:0x6402c0f8
64023cce:	mov    ds:0x6405465c,eax
64023cd3:	ret    
64023cd4:	int3   
64023cd5:	int3   
64023cd6:	int3   
64023cd7:	int3   
64023cd8:	int3   
64023cd9:	int3   
64023cda:	int3   
64023cdb:	int3   
64023cdc:	int3   
64023cdd:	int3   
64023cde:	int3   
64023cdf:	int3   
64023ce0:	push   0x64043434
64023ce5:	push   0xf
64023ce7:	mov    ecx,0x64043458
64023cec:	call   0x64003090
64023cf1:	add    esp,0x8
64023cf4:	mov    ds:0x64054660,eax
64023cf9:	ret    
64023cfa:	int3   
64023cfb:	int3   
64023cfc:	int3   
64023cfd:	int3   
64023cfe:	int3   
64023cff:	int3   
64023d00:	push   0x6402c310
64023d05:	push   0x10
64023d07:	push   0x6402c2fc
64023d0c:	call   0x64002e90
64023d11:	add    esp,0xc
64023d14:	mov    ds:0x64053830,eax
64023d19:	ret    
64023d1a:	int3   
64023d1b:	int3   
64023d1c:	int3   
64023d1d:	int3   
64023d1e:	int3   
64023d1f:	int3   
64023d20:	push   0x6402c35c
64023d25:	push   0x10
64023d27:	push   0x6402c348
64023d2c:	call   0x64002e90
64023d31:	add    esp,0xc
64023d34:	mov    ds:0x6405382c,eax
64023d39:	ret    
64023d3a:	int3   
64023d3b:	int3   
64023d3c:	int3   
64023d3d:	int3   
64023d3e:	int3   
64023d3f:	int3   
64023d40:	push   0x6402c398
64023d45:	push   0x10
64023d47:	push   0x6402c384
64023d4c:	call   0x64002e90
64023d51:	add    esp,0xc
64023d54:	mov    ds:0x64053828,eax
64023d59:	ret    
64023d5a:	int3   
64023d5b:	int3   
64023d5c:	int3   
64023d5d:	int3   
64023d5e:	int3   
64023d5f:	int3   
64023d60:	int3   
64023d61:	int3   
64023d62:	int3   
64023d63:	int3   
64023d64:	int3   
64023d65:	int3   
64023d66:	int3   
64023d67:	int3   
64023d68:	int3   
64023d69:	int3   
64023d6a:	int3   
64023d6b:	int3   
64023d6c:	int3   
64023d6d:	int3   
64023d6e:	int3   
64023d6f:	int3   
64023d70:	push   ebx
64023d71:	push   ebp
64023d72:	push   esi
64023d73:	push   edi
64023d74:	push   0x6403a888
64023d79:	push   0x9
64023d7b:	push   0x6403a87c
64023d80:	call   0x64002e90
64023d85:	mov    edi,0x3
64023d8a:	push   0x6403a84c
64023d8f:	push   edi
64023d90:	push   0x6403a848
64023d95:	mov    ds:0x64046ca4,eax
64023d9a:	mov    DWORD PTR ds:0x64046ca8,edi
64023da0:	call   0x64002e90
64023da5:	mov    esi,0x4
64023daa:	push   0x6403a818
64023daf:	push   esi
64023db0:	push   0x6403a810
64023db5:	mov    ds:0x64046cac,eax
64023dba:	mov    DWORD PTR ds:0x64046cb0,esi
64023dc0:	call   0x64002e90
64023dc5:	push   0x6403a7e8
64023dca:	push   edi
64023dcb:	push   0x6403a7e4
64023dd0:	mov    ds:0x64046cb4,eax
64023dd5:	mov    DWORD PTR ds:0x64046cb8,edi
64023ddb:	call   0x64002e90
64023de0:	mov    ebp,0x2
64023de5:	push   0x6403a7a8
64023dea:	push   ebp
64023deb:	push   0x6403a7a4
64023df0:	mov    ds:0x64046cbc,eax
64023df5:	mov    DWORD PTR ds:0x64046cc0,ebp
64023dfb:	call   0x64002e90
64023e00:	push   0x6403a77c
64023e05:	push   edi
64023e06:	push   0x6403a778
64023e0b:	mov    ds:0x64046cc4,eax
64023e10:	mov    DWORD PTR ds:0x64046cc8,edi
64023e16:	call   0x64002e90
64023e1b:	add    esp,0x48
64023e1e:	push   0x6403a738
64023e23:	push   edi
64023e24:	push   0x6403a734
64023e29:	mov    ds:0x64046ccc,eax
64023e2e:	mov    DWORD PTR ds:0x64046cd0,edi
64023e34:	call   0x64002e90
64023e39:	push   0x6403a6f4
64023e3e:	push   edi
64023e3f:	push   0x6403a6f0
64023e44:	mov    ds:0x64046cd4,eax
64023e49:	mov    DWORD PTR ds:0x64046cd8,edi
64023e4f:	call   0x64002e90
64023e54:	push   0x6403a6b8
64023e59:	push   edi
64023e5a:	push   0x6403a6b4
64023e5f:	mov    ds:0x64046cdc,eax
64023e64:	mov    DWORD PTR ds:0x64046ce0,edi
64023e6a:	call   0x64002e90
64023e6f:	push   0x6403a68c
64023e74:	push   edi
64023e75:	push   0x6403a688
64023e7a:	mov    ds:0x64046ce4,eax
64023e7f:	mov    DWORD PTR ds:0x64046ce8,edi
64023e85:	call   0x64002e90
64023e8a:	push   0x6403a654
64023e8f:	push   edi
64023e90:	push   0x6403a650
64023e95:	mov    ds:0x64046cec,eax
64023e9a:	mov    DWORD PTR ds:0x64046cf0,edi
64023ea0:	call   0x64002e90
64023ea5:	push   0x6403a628
64023eaa:	push   edi
64023eab:	push   0x6403a624
64023eb0:	mov    ds:0x64046cf4,eax
64023eb5:	mov    DWORD PTR ds:0x64046cf8,edi
64023ebb:	call   0x64002e90
64023ec0:	add    esp,0x48
64023ec3:	mov    ds:0x64046cfc,eax
64023ec8:	mov    DWORD PTR ds:0x64046d00,edi
64023ece:	push   0x6403a5f0
64023ed3:	push   edi
64023ed4:	push   0x6403a5ec
64023ed9:	call   0x64002e90
64023ede:	push   0x6403a5ac
64023ee3:	push   edi
64023ee4:	push   0x6403a5a8
64023ee9:	mov    ds:0x64046d04,eax
64023eee:	mov    DWORD PTR ds:0x64046d08,edi
64023ef4:	call   0x64002e90
64023ef9:	push   0x6403a574
64023efe:	push   edi
64023eff:	push   0x6403a570
64023f04:	mov    ds:0x64046d0c,eax
64023f09:	mov    DWORD PTR ds:0x64046d10,edi
64023f0f:	call   0x64002e90
64023f14:	push   0x6403a54c
64023f19:	push   edi
64023f1a:	push   0x6403a548
64023f1f:	mov    ds:0x64046d14,eax
64023f24:	mov    DWORD PTR ds:0x64046d18,edi
64023f2a:	call   0x64002e90
64023f2f:	push   0x6403a518
64023f34:	push   edi
64023f35:	push   0x6403a514
64023f3a:	mov    ds:0x64046d1c,eax
64023f3f:	mov    DWORD PTR ds:0x64046d20,edi
64023f45:	call   0x64002e90
64023f4a:	mov    ebx,0x5
64023f4f:	push   0x6403a4e4
64023f54:	push   ebx
64023f55:	push   0x6403a4dc
64023f5a:	mov    ds:0x64046d24,eax
64023f5f:	mov    DWORD PTR ds:0x64046d28,ebx
64023f65:	call   0x64002e90
64023f6a:	add    esp,0x48
64023f6d:	push   0x6403a4ac
64023f72:	push   esi
64023f73:	push   0x6403a4a4
64023f78:	mov    ds:0x64046d2c,eax
64023f7d:	mov    DWORD PTR ds:0x64046d30,esi
64023f83:	call   0x64002e90
64023f88:	push   0x6403a478
64023f8d:	push   ebx
64023f8e:	push   0x6403a470
64023f93:	mov    ds:0x64046d34,eax
64023f98:	mov    DWORD PTR ds:0x64046d38,ebx
64023f9e:	call   0x64002e90
64023fa3:	push   0x6403a43c
64023fa8:	push   esi
64023fa9:	push   0x6403a434
64023fae:	mov    ds:0x64046d3c,eax
64023fb3:	mov    DWORD PTR ds:0x64046d40,esi
64023fb9:	call   0x64002e90
64023fbe:	push   0x6403a408
64023fc3:	push   esi
64023fc4:	push   0x6403a400
64023fc9:	mov    ds:0x64046d44,eax
64023fce:	mov    DWORD PTR ds:0x64046d48,esi
64023fd4:	call   0x64002e90
64023fd9:	push   0x6403a3d4
64023fde:	push   edi
64023fdf:	push   0x6403a3d0
64023fe4:	mov    ds:0x64046d4c,eax
64023fe9:	mov    DWORD PTR ds:0x64046d50,edi
64023fef:	call   0x64002e90
64023ff4:	push   0x6403a3a0
64023ff9:	push   esi
64023ffa:	push   0x6403a398
64023fff:	mov    ds:0x64046d54,eax
64024004:	mov    DWORD PTR ds:0x64046d58,esi
6402400a:	call   0x64002e90
6402400f:	add    esp,0x48
64024012:	push   0x6403a360
64024017:	push   ebp
64024018:	push   0x6403a35c
6402401d:	mov    ds:0x64046d5c,eax
64024022:	mov    DWORD PTR ds:0x64046d60,ebp
64024028:	call   0x64002e90
6402402d:	mov    ds:0x64046d64,eax
64024032:	mov    DWORD PTR ds:0x64046d68,edi
64024038:	push   0x6403a31c
6402403d:	push   edi
6402403e:	push   0x6403a318
64024043:	call   0x64002e90
64024048:	push   0x6403a2ec
6402404d:	push   ebp
6402404e:	push   0x6403a2e8
64024053:	mov    ds:0x64046d6c,eax
64024058:	mov    DWORD PTR ds:0x64046d70,ebp
6402405e:	call   0x64002e90
64024063:	push   0x6403a2b0
64024068:	push   edi
64024069:	push   0x6403a2ac
6402406e:	mov    ds:0x64046d74,eax
64024073:	mov    DWORD PTR ds:0x64046d78,edi
64024079:	call   0x64002e90
6402407e:	push   0x6403a284
64024083:	push   ebp
64024084:	push   0x6403a280
64024089:	mov    ds:0x64046d7c,eax
6402408e:	mov    DWORD PTR ds:0x64046d80,ebp
64024094:	call   0x64002e90
64024099:	push   0x6403a248
6402409e:	push   edi
6402409f:	push   0x6403a244
640240a4:	mov    ds:0x64046d84,eax
640240a9:	mov    DWORD PTR ds:0x64046d88,edi
640240af:	call   0x64002e90
640240b4:	add    esp,0x48
640240b7:	push   0x6403a210
640240bc:	push   edi
640240bd:	push   0x6403a20c
640240c2:	mov    ds:0x64046d8c,eax
640240c7:	mov    DWORD PTR ds:0x64046d90,edi
640240cd:	call   0x64002e90
640240d2:	push   0x6403a1d0
640240d7:	push   ebp
640240d8:	push   0x6403a1cc
640240dd:	mov    ds:0x64046d94,eax
640240e2:	mov    DWORD PTR ds:0x64046d98,ebp
640240e8:	call   0x64002e90
640240ed:	push   0x6403a198
640240f2:	push   ebp
640240f3:	push   0x6403a194
640240f8:	mov    ds:0x64046d9c,eax
640240fd:	mov    DWORD PTR ds:0x64046da0,ebp
64024103:	call   0x64002e90
64024108:	push   0x6403a164
6402410d:	push   edi
6402410e:	push   0x6403a160
64024113:	mov    ds:0x64046da4,eax
64024118:	mov    DWORD PTR ds:0x64046da8,edi
6402411e:	call   0x64002e90
64024123:	push   0x6403a124
64024128:	push   ebp
64024129:	push   0x6403a120
6402412e:	mov    ds:0x64046dac,eax
64024133:	mov    DWORD PTR ds:0x64046db0,ebp
64024139:	call   0x64002e90
6402413e:	push   0x6403a0f4
64024143:	push   edi
64024144:	push   0x6403a0f0
64024149:	mov    ds:0x64046db4,eax
6402414e:	mov    DWORD PTR ds:0x64046db8,edi
64024154:	call   0x64002e90
64024159:	add    esp,0x48
6402415c:	push   0x6403a0bc
64024161:	push   ebp
64024162:	push   0x6403a0b8
64024167:	mov    ds:0x64046dbc,eax
6402416c:	mov    DWORD PTR ds:0x64046dc0,ebp
64024172:	call   0x64002e90
64024177:	push   0x6403a088
6402417c:	push   edi
6402417d:	push   0x6403a084
64024182:	mov    ds:0x64046dc4,eax
64024187:	mov    DWORD PTR ds:0x64046dc8,edi
6402418d:	call   0x64002e90
64024192:	mov    ds:0x64046dcc,eax
64024197:	mov    DWORD PTR ds:0x64046dd0,edi
6402419d:	push   0x6403a044
640241a2:	push   edi
640241a3:	push   0x6403a040
640241a8:	call   0x64002e90
640241ad:	push   0x6403a01c
640241b2:	push   ebp
640241b3:	push   0x6403a018
640241b8:	mov    ds:0x64046dd4,eax
640241bd:	mov    DWORD PTR ds:0x64046dd8,ebp
640241c3:	call   0x64002e90
640241c8:	push   0x64039ff4
640241cd:	push   esi
640241ce:	push   0x64039fec
640241d3:	mov    ds:0x64046ddc,eax
640241d8:	mov    DWORD PTR ds:0x64046de0,esi
640241de:	call   0x64002e90
640241e3:	push   0x64039fc0
640241e8:	push   esi
640241e9:	push   0x64039fb8
640241ee:	mov    ds:0x64046de4,eax
640241f3:	mov    DWORD PTR ds:0x64046de8,esi
640241f9:	call   0x64002e90
640241fe:	add    esp,0x48
64024201:	push   0x64039f90
64024206:	push   edi
64024207:	push   0x64039f8c
6402420c:	mov    ds:0x64046dec,eax
64024211:	mov    DWORD PTR ds:0x64046df0,edi
64024217:	call   0x64002e90
6402421c:	push   0x64039f68
64024221:	push   edi
64024222:	push   0x64039f64
64024227:	mov    ds:0x64046df4,eax
6402422c:	mov    DWORD PTR ds:0x64046df8,edi
64024232:	call   0x64002e90
64024237:	push   0x64039f38
6402423c:	push   edi
6402423d:	push   0x64039f34
64024242:	mov    ds:0x64046dfc,eax
64024247:	mov    DWORD PTR ds:0x64046e00,edi
6402424d:	call   0x64002e90
64024252:	push   0x64039ef4
64024257:	push   esi
64024258:	push   0x64039eec
6402425d:	mov    ds:0x64046e04,eax
64024262:	mov    DWORD PTR ds:0x64046e08,esi
64024268:	call   0x64002e90
6402426d:	push   0x64039eb0
64024272:	push   esi
64024273:	push   0x64039ea8
64024278:	mov    ds:0x64046e0c,eax
6402427d:	mov    DWORD PTR ds:0x64046e10,esi
64024283:	call   0x64002e90
64024288:	push   0x64039e74
6402428d:	push   edi
6402428e:	push   0x64039e70
64024293:	mov    ds:0x64046e14,eax
64024298:	mov    DWORD PTR ds:0x64046e18,edi
6402429e:	call   0x64002e90
640242a3:	add    esp,0x48
640242a6:	push   0x64039e4c
640242ab:	push   edi
640242ac:	push   0x64039e48
640242b1:	mov    ds:0x64046e1c,eax
640242b6:	mov    DWORD PTR ds:0x64046e20,edi
640242bc:	call   0x64002e90
640242c1:	push   0x64039e0c
640242c6:	push   edi
640242c7:	push   0x64039e08
640242cc:	mov    ds:0x64046e24,eax
640242d1:	mov    DWORD PTR ds:0x64046e28,edi
640242d7:	call   0x64002e90
640242dc:	mov    ebp,0x8
640242e1:	push   0x64039dd4
640242e6:	push   ebp
640242e7:	push   0x64039dc8
640242ec:	mov    ds:0x64046e2c,eax
640242f1:	mov    DWORD PTR ds:0x64046e30,ebp
640242f7:	call   0x64002e90
640242fc:	mov    ds:0x64046e34,eax
64024301:	mov    DWORD PTR ds:0x64046e38,ebx
64024307:	push   0x64039d88
6402430c:	push   ebx
6402430d:	push   0x64039d80
64024312:	call   0x64002e90
64024317:	push   0x64039d5c
6402431c:	push   esi
6402431d:	push   0x64039d54
64024322:	mov    ds:0x64046e3c,eax
64024327:	mov    DWORD PTR ds:0x64046e40,esi
6402432d:	call   0x64002e90
64024332:	push   0x64039d2c
64024337:	push   esi
64024338:	push   0x64039d24
6402433d:	mov    ds:0x64046e44,eax
64024342:	mov    DWORD PTR ds:0x64046e48,esi
64024348:	call   0x64002e90
6402434d:	add    esp,0x48
64024350:	push   0x64039d00
64024355:	push   esi
64024356:	push   0x64039cf8
6402435b:	mov    ds:0x64046e4c,eax
64024360:	mov    DWORD PTR ds:0x64046e50,esi
64024366:	call   0x64002e90
6402436b:	push   0x64039cbc
64024370:	push   esi
64024371:	push   0x64039cb4
64024376:	mov    ds:0x64046e54,eax
6402437b:	mov    DWORD PTR ds:0x64046e58,esi
64024381:	call   0x64002e90
64024386:	push   0x64039c80
6402438b:	push   esi
6402438c:	push   0x64039c78
64024391:	mov    ds:0x64046e5c,eax
64024396:	mov    DWORD PTR ds:0x64046e60,esi
6402439c:	call   0x64002e90
640243a1:	push   0x64039c4c
640243a6:	push   esi
640243a7:	push   0x64039c44
640243ac:	mov    ds:0x64046e64,eax
640243b1:	mov    DWORD PTR ds:0x64046e68,esi
640243b7:	call   0x64002e90
640243bc:	push   0x64039c0c
640243c1:	push   esi
640243c2:	push   0x64039c04
640243c7:	mov    ds:0x64046e6c,eax
640243cc:	mov    DWORD PTR ds:0x64046e70,esi
640243d2:	call   0x64002e90
640243d7:	push   0x64039bd0
640243dc:	push   esi
640243dd:	push   0x64039bc8
640243e2:	mov    ds:0x64046e74,eax
640243e7:	mov    DWORD PTR ds:0x64046e78,esi
640243ed:	call   0x64002e90
640243f2:	add    esp,0x48
640243f5:	push   0x64039b8c
640243fa:	push   edi
640243fb:	push   0x64039b88
64024400:	mov    ds:0x64046e7c,eax
64024405:	mov    DWORD PTR ds:0x64046e80,edi
6402440b:	call   0x64002e90
64024410:	push   0x64039b64
64024415:	push   edi
64024416:	push   0x64039b60
6402441b:	mov    ds:0x64046e84,eax
64024420:	mov    DWORD PTR ds:0x64046e88,edi
64024426:	call   0x64002e90
6402442b:	push   0x64039b20
64024430:	push   edi
64024431:	push   0x64039b1c
64024436:	mov    ds:0x64046e8c,eax
6402443b:	mov    DWORD PTR ds:0x64046e90,edi
64024441:	call   0x64002e90
64024446:	push   0x64039adc
6402444b:	push   ebx
6402444c:	push   0x64039ad4
64024451:	mov    ds:0x64046e94,eax
64024456:	mov    DWORD PTR ds:0x64046e98,ebx
6402445c:	call   0x64002e90
64024461:	push   0x64039aa4
64024466:	mov    ds:0x64046e9c,eax
6402446b:	mov    DWORD PTR ds:0x64046ea0,ebx
64024471:	push   ebx
64024472:	push   0x64039a9c
64024477:	call   0x64002e90
6402447c:	push   0x64039a74
64024481:	push   esi
64024482:	push   0x64039a6c
64024487:	mov    ds:0x64046ea4,eax
6402448c:	mov    DWORD PTR ds:0x64046ea8,esi
64024492:	call   0x64002e90
64024497:	add    esp,0x48
6402449a:	push   0x64039a40
6402449f:	push   ebx
640244a0:	push   0x64039a38
640244a5:	mov    ds:0x64046eac,eax
640244aa:	mov    DWORD PTR ds:0x64046eb0,ebx
640244b0:	call   0x64002e90
640244b5:	push   0x64039a08
640244ba:	push   edi
640244bb:	push   0x64039a04
640244c0:	mov    ds:0x64046eb4,eax
640244c5:	mov    DWORD PTR ds:0x64046eb8,edi
640244cb:	call   0x64002e90
640244d0:	push   0x640399e0
640244d5:	push   esi
640244d6:	push   0x640399d8
640244db:	mov    ds:0x64046ebc,eax
640244e0:	mov    DWORD PTR ds:0x64046ec0,esi
640244e6:	call   0x64002e90
640244eb:	push   0x640399a8
640244f0:	push   esi
640244f1:	push   0x640399a0
640244f6:	mov    ds:0x64046ec4,eax
640244fb:	mov    DWORD PTR ds:0x64046ec8,esi
64024501:	call   0x64002e90
64024506:	push   0x64039974
6402450b:	push   edi
6402450c:	push   0x64039970
64024511:	mov    ds:0x64046ecc,eax
64024516:	mov    DWORD PTR ds:0x64046ed0,edi
6402451c:	call   0x64002e90
64024521:	push   0x64039944
64024526:	push   edi
64024527:	push   0x64039940
6402452c:	mov    ds:0x64046ed4,eax
64024531:	mov    DWORD PTR ds:0x64046ed8,edi
64024537:	call   0x64002e90
6402453c:	add    esp,0x48
6402453f:	push   0x6403990c
64024544:	push   esi
64024545:	push   0x64039904
6402454a:	mov    ds:0x64046edc,eax
6402454f:	mov    DWORD PTR ds:0x64046ee0,esi
64024555:	call   0x64002e90
6402455a:	push   0x640398d4
6402455f:	push   esi
64024560:	push   0x640398cc
64024565:	mov    ds:0x64046ee4,eax
6402456a:	mov    DWORD PTR ds:0x64046ee8,esi
64024570:	call   0x64002e90
64024575:	mov    esi,0x6
6402457a:	push   0x64039890
6402457f:	push   esi
64024580:	push   0x64039888
64024585:	mov    ds:0x64046eec,eax
6402458a:	mov    DWORD PTR ds:0x64046ef0,esi
64024590:	call   0x64002e90
64024595:	push   0x64039850
6402459a:	push   ebx
6402459b:	push   0x64039848
640245a0:	mov    ds:0x64046ef4,eax
640245a5:	mov    DWORD PTR ds:0x64046ef8,ebx
640245ab:	call   0x64002e90
640245b0:	push   0x64039824
640245b5:	push   0x4
640245b7:	push   0x6403981c
640245bc:	mov    ds:0x64046efc,eax
640245c1:	mov    DWORD PTR ds:0x64046f00,0x4
640245cb:	call   0x64002e90
640245d0:	push   0x640397ec
640245d5:	mov    ds:0x64046f04,eax
640245da:	mov    DWORD PTR ds:0x64046f08,0x4
640245e4:	push   0x4
640245e6:	push   0x640397e4
640245eb:	call   0x64002e90
640245f0:	add    esp,0x48
640245f3:	push   0x640397b0
640245f8:	push   ebx
640245f9:	push   0x640397a8
640245fe:	mov    ds:0x64046f0c,eax
64024603:	mov    DWORD PTR ds:0x64046f10,ebx
64024609:	call   0x64002e90
6402460e:	push   0x64039770
64024613:	push   ebx
64024614:	push   0x64039768
64024619:	mov    ds:0x64046f14,eax
6402461e:	mov    DWORD PTR ds:0x64046f18,ebx
64024624:	call   0x64002e90
64024629:	push   0x64039738
6402462e:	push   0x2
64024630:	push   0x64039734
64024635:	mov    ds:0x64046f1c,eax
6402463a:	mov    DWORD PTR ds:0x64046f20,0x2
64024644:	call   0x64002e90
64024649:	push   0x6403970c
6402464e:	push   edi
6402464f:	push   0x64039708
64024654:	mov    ds:0x64046f24,eax
64024659:	mov    DWORD PTR ds:0x64046f28,edi
6402465f:	call   0x64002e90
64024664:	push   0x640396e0
64024669:	push   0x4
6402466b:	push   0x640396d8
64024670:	mov    ds:0x64046f2c,eax
64024675:	mov    DWORD PTR ds:0x64046f30,0x4
6402467f:	call   0x64002e90
64024684:	push   0x6403969c
64024689:	push   edi
6402468a:	push   0x64039698
6402468f:	mov    ds:0x64046f34,eax
64024694:	mov    DWORD PTR ds:0x64046f38,edi
6402469a:	call   0x64002e90
6402469f:	add    esp,0x48
640246a2:	mov    edi,0x7
640246a7:	push   0x6403966c
640246ac:	push   edi
640246ad:	push   0x64039664
640246b2:	mov    ds:0x64046f3c,eax
640246b7:	mov    DWORD PTR ds:0x64046f40,edi
640246bd:	call   0x64002e90
640246c2:	push   0x64039628
640246c7:	push   0x4
640246c9:	push   0x64039620
640246ce:	mov    ds:0x64046f44,eax
640246d3:	mov    DWORD PTR ds:0x64046f48,0x4
640246dd:	call   0x64002e90
640246e2:	push   0x640395ec
640246e7:	push   0x3
640246e9:	push   0x640395e8
640246ee:	mov    ds:0x64046f4c,eax
640246f3:	mov    DWORD PTR ds:0x64046f50,0x3
640246fd:	call   0x64002e90
64024702:	push   0x640395bc
64024707:	push   0x3
64024709:	push   0x640395b8
6402470e:	mov    ds:0x64046f54,eax
64024713:	mov    DWORD PTR ds:0x64046f58,0x3
6402471d:	call   0x64002e90
64024722:	push   0x64039594
64024727:	push   0x3
64024729:	push   0x64039590
6402472e:	mov    ds:0x64046f5c,eax
64024733:	mov    DWORD PTR ds:0x64046f60,0x3
6402473d:	call   0x64002e90
64024742:	push   0x64039560
64024747:	push   0x3
64024749:	push   0x6403955c
6402474e:	mov    ds:0x64046f64,eax
64024753:	mov    DWORD PTR ds:0x64046f68,0x3
6402475d:	call   0x64002e90
64024762:	add    esp,0x48
64024765:	mov    ds:0x64046f6c,eax
6402476a:	mov    DWORD PTR ds:0x64046f70,0x3
64024774:	push   0x64039524
64024779:	push   0x3
6402477b:	push   0x64039520
64024780:	call   0x64002e90
64024785:	push   0x640394f4
6402478a:	push   0x3
6402478c:	push   0x640394f0
64024791:	mov    ds:0x64046f74,eax
64024796:	mov    DWORD PTR ds:0x64046f78,0x3
640247a0:	call   0x64002e90
640247a5:	push   0x640394c0
640247aa:	push   0x3
640247ac:	push   0x640394bc
640247b1:	mov    ds:0x64046f7c,eax
640247b6:	mov    DWORD PTR ds:0x64046f80,0x3
640247c0:	call   0x64002e90
640247c5:	push   0x64039490
640247ca:	push   0x3
640247cc:	push   0x6403948c
640247d1:	mov    ds:0x64046f84,eax
640247d6:	mov    DWORD PTR ds:0x64046f88,0x3
640247e0:	call   0x64002e90
640247e5:	push   0x64039460
640247ea:	push   0x3
640247ec:	push   0x6403945c
640247f1:	mov    ds:0x64046f8c,eax
640247f6:	mov    DWORD PTR ds:0x64046f90,0x3
64024800:	call   0x64002e90
64024805:	push   0x64039428
6402480a:	push   0x3
6402480c:	push   0x64039424
64024811:	mov    ds:0x64046f94,eax
64024816:	mov    DWORD PTR ds:0x64046f98,0x3
64024820:	call   0x64002e90
64024825:	add    esp,0x48
64024828:	push   0x640393f4
6402482d:	push   edi
6402482e:	push   0x640393ec
64024833:	mov    ds:0x64046f9c,eax
64024838:	mov    DWORD PTR ds:0x64046fa0,edi
6402483e:	call   0x64002e90
64024843:	push   0x640393c8
64024848:	push   0x4
6402484a:	push   0x640393c0
6402484f:	mov    ds:0x64046fa4,eax
64024854:	mov    DWORD PTR ds:0x64046fa8,0x4
6402485e:	call   0x64002e90
64024863:	push   0x64039388
64024868:	push   esi
64024869:	push   0x64039380
6402486e:	mov    ds:0x64046fac,eax
64024873:	mov    DWORD PTR ds:0x64046fb0,esi
64024879:	call   0x64002e90
6402487e:	push   0x64039344
64024883:	push   0x4
64024885:	push   0x6403933c
6402488a:	mov    ds:0x64046fb4,eax
6402488f:	mov    DWORD PTR ds:0x64046fb8,0x4
64024899:	call   0x64002e90
6402489e:	push   0x64039308
640248a3:	push   esi
640248a4:	push   0x64039300
640248a9:	mov    ds:0x64046fbc,eax
640248ae:	mov    DWORD PTR ds:0x64046fc0,esi
640248b4:	call   0x64002e90
640248b9:	push   0x640392cc
640248be:	push   0x3
640248c0:	push   0x640392c8
640248c5:	mov    ds:0x64046fc4,eax
640248ca:	mov    DWORD PTR ds:0x64046fc8,0x3
640248d4:	call   0x64002e90
640248d9:	add    esp,0x48
640248dc:	push   0x640392a0
640248e1:	push   ebx
640248e2:	push   0x64039298
640248e7:	mov    ds:0x64046fcc,eax
640248ec:	mov    DWORD PTR ds:0x64046fd0,ebx
640248f2:	call   0x64002e90
640248f7:	push   0x64039264
640248fc:	mov    ds:0x64046fd4,eax
64024901:	mov    DWORD PTR ds:0x64046fd8,0x3
6402490b:	push   0x3
6402490d:	push   0x64039260
64024912:	call   0x64002e90
64024917:	push   0x64039234
6402491c:	push   ebx
6402491d:	push   0x6403922c
64024922:	mov    ds:0x64046fdc,eax
64024927:	mov    DWORD PTR ds:0x64046fe0,ebx
6402492d:	call   0x64002e90
64024932:	push   0x64039200
64024937:	push   ebx
64024938:	push   0x640391f8
6402493d:	mov    ds:0x64046fe4,eax
64024942:	mov    DWORD PTR ds:0x64046fe8,ebx
64024948:	call   0x64002e90
6402494d:	push   0x640391cc
64024952:	push   ebx
64024953:	push   0x640391c4
64024958:	mov    ds:0x64046fec,eax
6402495d:	mov    DWORD PTR ds:0x64046ff0,ebx
64024963:	call   0x64002e90
64024968:	push   0x64039198
6402496d:	push   ebx
6402496e:	push   0x64039190
64024973:	mov    ds:0x64046ff4,eax
64024978:	mov    DWORD PTR ds:0x64046ff8,ebx
6402497e:	call   0x64002e90
64024983:	add    esp,0x48
64024986:	push   0x64039168
6402498b:	push   ebp
6402498c:	push   0x6403915c
64024991:	mov    ds:0x64046ffc,eax
64024996:	mov    DWORD PTR ds:0x64047000,ebp
6402499c:	call   0x64002e90
640249a1:	push   0x64039134
640249a6:	push   edi
640249a7:	push   0x6403912c
640249ac:	mov    ds:0x64047004,eax
640249b1:	mov    DWORD PTR ds:0x64047008,edi
640249b7:	call   0x64002e90
640249bc:	push   0x640390ec
640249c1:	push   esi
640249c2:	push   0x640390e4
640249c7:	mov    ds:0x6404700c,eax
640249cc:	mov    DWORD PTR ds:0x64047010,esi
640249d2:	call   0x64002e90
640249d7:	push   0x640390b0
640249dc:	push   ebx
640249dd:	push   0x640390a8
640249e2:	mov    ds:0x64047014,eax
640249e7:	mov    DWORD PTR ds:0x64047018,ebx
640249ed:	call   0x64002e90
640249f2:	push   0x64039074
640249f7:	push   esi
640249f8:	push   0x6403906c
640249fd:	mov    ds:0x6404701c,eax
64024a02:	mov    DWORD PTR ds:0x64047020,esi
64024a08:	call   0x64002e90
64024a0d:	push   0x64039030
64024a12:	push   ebx
64024a13:	push   0x64039028
64024a18:	mov    ds:0x64047024,eax
64024a1d:	mov    DWORD PTR ds:0x64047028,ebx
64024a23:	call   0x64002e90
64024a28:	add    esp,0x48
64024a2b:	push   0x64039004
64024a30:	push   esi
64024a31:	push   0x64038ffc
64024a36:	mov    ds:0x6404702c,eax
64024a3b:	mov    DWORD PTR ds:0x64047030,esi
64024a41:	call   0x64002e90
64024a46:	push   0x64038fd0
64024a4b:	push   ebx
64024a4c:	push   0x64038fc8
64024a51:	mov    ds:0x64047034,eax
64024a56:	mov    DWORD PTR ds:0x64047038,ebx
64024a5c:	call   0x64002e90
64024a61:	push   0x64038fa0
64024a66:	push   esi
64024a67:	mov    ds:0x6404703c,eax
64024a6c:	mov    DWORD PTR ds:0x64047040,esi
64024a72:	push   0x64038f98
64024a77:	call   0x64002e90
64024a7c:	push   0x64038f58
64024a81:	push   esi
64024a82:	push   0x64038f50
64024a87:	mov    ds:0x64047044,eax
64024a8c:	mov    DWORD PTR ds:0x64047048,esi
64024a92:	call   0x64002e90
64024a97:	push   0x64038f2c
64024a9c:	push   ebx
64024a9d:	push   0x64038f24
64024aa2:	mov    ds:0x6404704c,eax
64024aa7:	mov    DWORD PTR ds:0x64047050,ebx
64024aad:	call   0x64002e90
64024ab2:	push   0x64038ee8
64024ab7:	push   ebx
64024ab8:	push   0x64038ee0
64024abd:	mov    ds:0x64047054,eax
64024ac2:	mov    DWORD PTR ds:0x64047058,ebx
64024ac8:	call   0x64002e90
64024acd:	add    esp,0x48
64024ad0:	push   0x64038ebc
64024ad5:	push   esi
64024ad6:	push   0x64038eb4
64024adb:	mov    ds:0x6404705c,eax
64024ae0:	mov    DWORD PTR ds:0x64047060,esi
64024ae6:	call   0x64002e90
64024aeb:	push   0x64038e90
64024af0:	push   ebx
64024af1:	push   0x64038e88
64024af6:	mov    ds:0x64047064,eax
64024afb:	mov    DWORD PTR ds:0x64047068,ebx
64024b01:	call   0x64002e90
64024b06:	push   0x64038e64
64024b0b:	push   esi
64024b0c:	push   0x64038e5c
64024b11:	mov    ds:0x6404706c,eax
64024b16:	mov    DWORD PTR ds:0x64047070,esi
64024b1c:	call   0x64002e90
64024b21:	push   0x64038e30
64024b26:	push   ebx
64024b27:	push   0x64038e28
64024b2c:	mov    ds:0x64047074,eax
64024b31:	mov    DWORD PTR ds:0x64047078,ebx
64024b37:	call   0x64002e90
64024b3c:	push   0x64038e04
64024b41:	push   esi
64024b42:	push   0x64038dfc
64024b47:	mov    ds:0x6404707c,eax
64024b4c:	mov    DWORD PTR ds:0x64047080,esi
64024b52:	call   0x64002e90
64024b57:	push   0x64038dc4
64024b5c:	push   esi
64024b5d:	push   0x64038dbc
64024b62:	mov    ds:0x64047084,eax
64024b67:	mov    DWORD PTR ds:0x64047088,esi
64024b6d:	call   0x64002e90
64024b72:	add    esp,0x48
64024b75:	push   0x64038d98
64024b7a:	push   ebx
64024b7b:	push   0x64038d90
64024b80:	mov    ds:0x6404708c,eax
64024b85:	mov    DWORD PTR ds:0x64047090,ebx
64024b8b:	call   0x64002e90
64024b90:	push   0x64038d60
64024b95:	push   0x4
64024b97:	push   0x64038d58
64024b9c:	mov    ds:0x64047094,eax
64024ba1:	mov    DWORD PTR ds:0x64047098,0x4
64024bab:	call   0x64002e90
64024bb0:	push   0x64038d1c
64024bb5:	push   ebx
64024bb6:	push   0x64038d14
64024bbb:	mov    ds:0x6404709c,eax
64024bc0:	mov    DWORD PTR ds:0x640470a0,ebx
64024bc6:	call   0x64002e90
64024bcb:	push   0x64038cec
64024bd0:	push   0x4
64024bd2:	push   0x64038ce4
64024bd7:	mov    ds:0x640470a4,eax
64024bdc:	mov    DWORD PTR ds:0x640470a8,0x4
64024be6:	call   0x64002e90
64024beb:	push   0x64038cac
64024bf0:	push   ebx
64024bf1:	push   0x64038ca4
64024bf6:	mov    ds:0x640470ac,eax
64024bfb:	mov    DWORD PTR ds:0x640470b0,ebx
64024c01:	call   0x64002e90
64024c06:	push   0x64038c68
64024c0b:	push   0x4
64024c0d:	push   0x64038c60
64024c12:	mov    ds:0x640470b4,eax
64024c17:	mov    DWORD PTR ds:0x640470b8,0x4
64024c21:	call   0x64002e90
64024c26:	add    esp,0x48
64024c29:	push   0x64038c34
64024c2e:	push   ebx
64024c2f:	push   0x64038c2c
64024c34:	mov    ds:0x640470bc,eax
64024c39:	mov    DWORD PTR ds:0x640470c0,ebx
64024c3f:	call   0x64002e90
64024c44:	push   0x64038bec
64024c49:	push   ebx
64024c4a:	push   0x64038be4
64024c4f:	mov    ds:0x640470c4,eax
64024c54:	mov    DWORD PTR ds:0x640470c8,ebx
64024c5a:	call   0x64002e90
64024c5f:	push   0x64038bb4
64024c64:	push   0x4
64024c66:	push   0x64038bac
64024c6b:	mov    ds:0x640470cc,eax
64024c70:	mov    DWORD PTR ds:0x640470d0,0x4
64024c7a:	call   0x64002e90
64024c7f:	push   0x64038b70
64024c84:	push   0x4
64024c86:	push   0x64038b68
64024c8b:	mov    ds:0x640470d4,eax
64024c90:	mov    DWORD PTR ds:0x640470d8,0x4
64024c9a:	call   0x64002e90
64024c9f:	push   0x64038b40
64024ca4:	push   ebx
64024ca5:	push   0x64038b38
64024caa:	mov    ds:0x640470dc,eax
64024caf:	mov    DWORD PTR ds:0x640470e0,ebx
64024cb5:	call   0x64002e90
64024cba:	push   0x64038b14
64024cbf:	push   0x4
64024cc1:	push   0x64038b0c
64024cc6:	mov    ds:0x640470e4,eax
64024ccb:	mov    DWORD PTR ds:0x640470e8,0x4
64024cd5:	call   0x64002e90
64024cda:	add    esp,0x48
64024cdd:	push   0x64038ae8
64024ce2:	push   ebx
64024ce3:	push   0x64038ae0
64024ce8:	mov    ds:0x640470ec,eax
64024ced:	mov    DWORD PTR ds:0x640470f0,ebx
64024cf3:	call   0x64002e90
64024cf8:	push   0x64038aac
64024cfd:	push   0x4
64024cff:	push   0x64038aa4
64024d04:	mov    ds:0x640470f4,eax
64024d09:	mov    DWORD PTR ds:0x640470f8,0x4
64024d13:	call   0x64002e90
64024d18:	push   0x64038a78
64024d1d:	push   ebx
64024d1e:	push   0x64038a70
64024d23:	mov    ds:0x640470fc,eax
64024d28:	mov    DWORD PTR ds:0x64047100,ebx
64024d2e:	call   0x64002e90
64024d33:	push   0x64038a30
64024d38:	push   ebx
64024d39:	push   0x64038a28
64024d3e:	mov    ds:0x64047104,eax
64024d43:	mov    DWORD PTR ds:0x64047108,ebx
64024d49:	call   0x64002e90
64024d4e:	push   0x640389f8
64024d53:	push   0x4
64024d55:	push   0x640389f0
64024d5a:	mov    ds:0x6404710c,eax
64024d5f:	mov    DWORD PTR ds:0x64047110,0x4
64024d69:	call   0x64002e90
64024d6e:	mov    ds:0x64047114,eax
64024d73:	push   0x640389c8
64024d78:	push   ebx
64024d79:	push   0x640389c0
64024d7e:	mov    DWORD PTR ds:0x64047118,ebx
64024d84:	call   0x64002e90
64024d89:	add    esp,0x48
64024d8c:	push   0x64038984
64024d91:	push   0x2
64024d93:	push   0x64038980
64024d98:	mov    ds:0x6404711c,eax
64024d9d:	mov    DWORD PTR ds:0x64047120,0x2
64024da7:	call   0x64002e90
64024dac:	push   0x64038948
64024db1:	push   0x4
64024db3:	push   0x64038940
64024db8:	mov    ds:0x64047124,eax
64024dbd:	mov    DWORD PTR ds:0x64047128,0x4
64024dc7:	call   0x64002e90
64024dcc:	push   0x64038918
64024dd1:	push   0x3
64024dd3:	push   0x64038914
64024dd8:	mov    ds:0x6404712c,eax
64024ddd:	mov    DWORD PTR ds:0x64047130,0x3
64024de7:	call   0x64002e90
64024dec:	push   0x640388ec
64024df1:	push   0x3
64024df3:	push   0x640388e8
64024df8:	mov    ds:0x64047134,eax
64024dfd:	mov    DWORD PTR ds:0x64047138,0x3
64024e07:	call   0x64002e90
64024e0c:	push   0x640388a8
64024e11:	push   0x4
64024e13:	push   0x640388a0
64024e18:	mov    ds:0x6404713c,eax
64024e1d:	mov    DWORD PTR ds:0x64047140,0x4
64024e27:	call   0x64002e90
64024e2c:	push   0x64038860
64024e31:	push   edi
64024e32:	push   0x64038858
64024e37:	mov    ds:0x64047144,eax
64024e3c:	mov    DWORD PTR ds:0x64047148,edi
64024e42:	call   0x64002e90
64024e47:	add    esp,0x48
64024e4a:	push   0x64038820
64024e4f:	push   0x3
64024e51:	push   0x6403881c
64024e56:	mov    ds:0x6404714c,eax
64024e5b:	mov    DWORD PTR ds:0x64047150,0x3
64024e65:	call   0x64002e90
64024e6a:	push   0x640387e8
64024e6f:	push   0x3
64024e71:	push   0x640387e4
64024e76:	mov    ds:0x64047154,eax
64024e7b:	mov    DWORD PTR ds:0x64047158,0x3
64024e85:	call   0x64002e90
64024e8a:	push   0x640387c0
64024e8f:	push   0x3
64024e91:	push   0x640387bc
64024e96:	mov    ds:0x6404715c,eax
64024e9b:	mov    DWORD PTR ds:0x64047160,0x3
64024ea5:	call   0x64002e90
64024eaa:	push   0x64038798
64024eaf:	push   0x3
64024eb1:	push   0x64038794
64024eb6:	mov    ds:0x64047164,eax
64024ebb:	mov    DWORD PTR ds:0x64047168,0x3
64024ec5:	call   0x64002e90
64024eca:	push   0x64038760
64024ecf:	push   ebx
64024ed0:	push   0x64038758
64024ed5:	mov    ds:0x6404716c,eax
64024eda:	mov    DWORD PTR ds:0x64047170,ebx
64024ee0:	call   0x64002e90
64024ee5:	push   0x6403871c
64024eea:	push   0x3
64024eec:	push   0x64038718
64024ef1:	mov    ds:0x64047174,eax
64024ef6:	mov    DWORD PTR ds:0x64047178,0x3
64024f00:	call   0x64002e90
64024f05:	add    esp,0x48
64024f08:	mov    ds:0x6404717c,eax
64024f0d:	push   0x640386f0
64024f12:	push   0x3
64024f14:	push   0x640386ec
64024f19:	mov    DWORD PTR ds:0x64047180,0x3
64024f23:	call   0x64002e90
64024f28:	push   0x640386b4
64024f2d:	push   ebx
64024f2e:	push   0x640386ac
64024f33:	mov    ds:0x64047184,eax
64024f38:	mov    DWORD PTR ds:0x64047188,ebx
64024f3e:	call   0x64002e90
64024f43:	push   0x6403867c
64024f48:	push   0x4
64024f4a:	push   0x64038674
64024f4f:	mov    ds:0x6404718c,eax
64024f54:	mov    DWORD PTR ds:0x64047190,0x4
64024f5e:	call   0x64002e90
64024f63:	push   0x64038638
64024f68:	push   esi
64024f69:	push   0x64038630
64024f6e:	mov    ds:0x64047194,eax
64024f73:	mov    DWORD PTR ds:0x64047198,esi
64024f79:	call   0x64002e90
64024f7e:	push   0x6403860c
64024f83:	push   ebx
64024f84:	push   0x64038604
64024f89:	mov    ds:0x6404719c,eax
64024f8e:	mov    DWORD PTR ds:0x640471a0,ebx
64024f94:	call   0x64002e90
64024f99:	push   0x640385dc
64024f9e:	push   0x4
64024fa0:	push   0x640385d4
64024fa5:	mov    ds:0x640471a4,eax
64024faa:	mov    DWORD PTR ds:0x640471a8,0x4
64024fb4:	call   0x64002e90
64024fb9:	add    esp,0x48
64024fbc:	push   0x640385a8
64024fc1:	push   0x3
64024fc3:	push   0x640385a4
64024fc8:	mov    ds:0x640471ac,eax
64024fcd:	mov    DWORD PTR ds:0x640471b0,0x3
64024fd7:	call   0x64002e90
64024fdc:	push   0x6403857c
64024fe1:	push   0x4
64024fe3:	push   0x64038574
64024fe8:	mov    ds:0x640471b4,eax
64024fed:	mov    DWORD PTR ds:0x640471b8,0x4
64024ff7:	call   0x64002e90
64024ffc:	push   0x6403853c
64025001:	push   0x3
64025003:	push   0x64038538
64025008:	mov    ds:0x640471bc,eax
6402500d:	mov    DWORD PTR ds:0x640471c0,0x3
64025017:	call   0x64002e90
6402501c:	push   0x64038514
64025021:	push   0x4
64025023:	push   0x6403850c
64025028:	mov    ds:0x640471c4,eax
6402502d:	mov    DWORD PTR ds:0x640471c8,0x4
64025037:	call   0x64002e90
6402503c:	push   0x640384d0
64025041:	push   0x4
64025043:	push   0x640384c8
64025048:	mov    ds:0x640471cc,eax
6402504d:	mov    DWORD PTR ds:0x640471d0,0x4
64025057:	call   0x64002e90
6402505c:	push   0x640384a4
64025061:	push   0x4
64025063:	push   0x6403849c
64025068:	mov    ds:0x640471d4,eax
6402506d:	mov    DWORD PTR ds:0x640471d8,0x4
64025077:	call   0x64002e90
6402507c:	add    esp,0x48
6402507f:	push   0x6403845c
64025084:	push   0x4
64025086:	push   0x64038454
6402508b:	mov    ds:0x640471dc,eax
64025090:	mov    DWORD PTR ds:0x640471e0,0x4
6402509a:	call   0x64002e90
6402509f:	mov    ds:0x640471e4,eax
640250a4:	mov    DWORD PTR ds:0x640471e8,0x4
640250ae:	push   0x64038418
640250b3:	push   0x4
640250b5:	push   0x64038410
640250ba:	call   0x64002e90
640250bf:	push   0x640383e0
640250c4:	push   0x4
640250c6:	push   0x640383d8
640250cb:	mov    ds:0x640471ec,eax
640250d0:	mov    DWORD PTR ds:0x640471f0,0x4
640250da:	call   0x64002e90
640250df:	push   0x6403839c
640250e4:	push   0x4
640250e6:	push   0x64038394
640250eb:	mov    ds:0x640471f4,eax
640250f0:	mov    DWORD PTR ds:0x640471f8,0x4
640250fa:	call   0x64002e90
640250ff:	push   0x64038358
64025104:	push   0x4
64025106:	push   0x64038350
6402510b:	mov    ds:0x640471fc,eax
64025110:	mov    DWORD PTR ds:0x64047200,0x4
6402511a:	call   0x64002e90
6402511f:	push   0x64038324
64025124:	push   esi
64025125:	push   0x6403831c
6402512a:	mov    ds:0x64047204,eax
6402512f:	mov    DWORD PTR ds:0x64047208,esi
64025135:	call   0x64002e90
6402513a:	add    esp,0x48
6402513d:	push   0x640382e4
64025142:	push   esi
64025143:	push   0x640382dc
64025148:	mov    ds:0x6404720c,eax
6402514d:	mov    DWORD PTR ds:0x64047210,esi
64025153:	call   0x64002e90
64025158:	push   0x640382b4
6402515d:	push   ebp
6402515e:	push   0x640382a8
64025163:	mov    ds:0x64047214,eax
64025168:	mov    DWORD PTR ds:0x64047218,ebp
6402516e:	call   0x64002e90
64025173:	push   0x64038284
64025178:	push   ebp
64025179:	push   0x64038278
6402517e:	mov    ds:0x6404721c,eax
64025183:	mov    DWORD PTR ds:0x64047220,ebp
64025189:	call   0x64002e90
6402518e:	push   0x64038238
64025193:	push   esi
64025194:	push   0x64038230
64025199:	mov    ds:0x64047224,eax
6402519e:	mov    DWORD PTR ds:0x64047228,esi
640251a4:	call   0x64002e90
640251a9:	push   0x6403820c
640251ae:	push   edi
640251af:	push   0x64038204
640251b4:	mov    ds:0x6404722c,eax
640251b9:	mov    DWORD PTR ds:0x64047230,edi
640251bf:	call   0x64002e90
640251c4:	push   0x640381d8
640251c9:	push   ebx
640251ca:	push   0x640381d0
640251cf:	mov    ds:0x64047234,eax
640251d4:	mov    DWORD PTR ds:0x64047238,ebx
640251da:	call   0x64002e90
640251df:	add    esp,0x48
640251e2:	push   0x64038198
640251e7:	push   esi
640251e8:	push   0x64038190
640251ed:	mov    ds:0x6404723c,eax
640251f2:	mov    DWORD PTR ds:0x64047240,esi
640251f8:	call   0x64002e90
640251fd:	push   0x6403816c
64025202:	push   esi
64025203:	push   0x64038164
64025208:	mov    ds:0x64047244,eax
6402520d:	mov    DWORD PTR ds:0x64047248,esi
64025213:	call   0x64002e90
64025218:	mov    ds:0x6404724c,eax
6402521d:	mov    DWORD PTR ds:0x64047250,ebx
64025223:	push   0x6403813c
64025228:	push   ebx
64025229:	push   0x64038134
6402522e:	call   0x64002e90
64025233:	push   0x640380fc
64025238:	push   edi
64025239:	push   0x640380f4
6402523e:	mov    ds:0x64047254,eax
64025243:	mov    DWORD PTR ds:0x64047258,edi
64025249:	call   0x64002e90
6402524e:	push   0x640380b8
64025253:	push   esi
64025254:	push   0x640380b0
64025259:	mov    ds:0x6404725c,eax
6402525e:	mov    DWORD PTR ds:0x64047260,esi
64025264:	call   0x64002e90
64025269:	push   0x64038078
6402526e:	push   esi
6402526f:	push   0x64038070
64025274:	mov    ds:0x64047264,eax
64025279:	mov    DWORD PTR ds:0x64047268,esi
6402527f:	call   0x64002e90
64025284:	add    esp,0x48
64025287:	push   0x64038030
6402528c:	push   0x4
6402528e:	push   0x64038028
64025293:	mov    ds:0x6404726c,eax
64025298:	mov    DWORD PTR ds:0x64047270,0x4
640252a2:	call   0x64002e90
640252a7:	push   0x64037fe8
640252ac:	push   0x4
640252ae:	push   0x64037fe0
640252b3:	mov    ds:0x64047274,eax
640252b8:	mov    DWORD PTR ds:0x64047278,0x4
640252c2:	call   0x64002e90
640252c7:	push   0x64037fa4
640252cc:	push   esi
640252cd:	push   0x64037f9c
640252d2:	mov    ds:0x6404727c,eax
640252d7:	mov    DWORD PTR ds:0x64047280,esi
640252dd:	call   0x64002e90
640252e2:	push   0x64037f6c
640252e7:	push   edi
640252e8:	push   0x64037f64
640252ed:	mov    ds:0x64047284,eax
640252f2:	mov    DWORD PTR ds:0x64047288,edi
640252f8:	call   0x64002e90
640252fd:	push   0x64037f3c
64025302:	push   esi
64025303:	push   0x64037f34
64025308:	mov    ds:0x6404728c,eax
6402530d:	mov    DWORD PTR ds:0x64047290,esi
64025313:	call   0x64002e90
64025318:	push   0x64037f08
6402531d:	push   esi
6402531e:	push   0x64037f00
64025323:	mov    ds:0x64047294,eax
64025328:	mov    DWORD PTR ds:0x64047298,esi
6402532e:	call   0x64002e90
64025333:	add    esp,0x48
64025336:	push   0x64037ecc
6402533b:	push   ebp
6402533c:	push   0x64037ec0
64025341:	mov    ds:0x6404729c,eax
64025346:	mov    DWORD PTR ds:0x640472a0,ebp
6402534c:	call   0x64002e90
64025351:	push   0x64037e8c
64025356:	push   0x9
64025358:	push   0x64037e80
6402535d:	mov    ds:0x640472a4,eax
64025362:	mov    DWORD PTR ds:0x640472a8,0x9
6402536c:	call   0x64002e90
64025371:	push   0x64037e4c
64025376:	push   ebx
64025377:	push   0x64037e44
6402537c:	mov    ds:0x640472ac,eax
64025381:	mov    DWORD PTR ds:0x640472b0,ebx
64025387:	call   0x64002e90
6402538c:	push   0x64037e10
64025391:	mov    ds:0x640472b4,eax
64025396:	mov    DWORD PTR ds:0x640472b8,ebx
6402539c:	push   ebx
6402539d:	push   0x64037e08
640253a2:	call   0x64002e90
640253a7:	push   0x64037de0
640253ac:	push   ebx
640253ad:	push   0x64037dd8
640253b2:	mov    ds:0x640472bc,eax
640253b7:	mov    DWORD PTR ds:0x640472c0,ebx
640253bd:	call   0x64002e90
640253c2:	push   0x64037da4
640253c7:	push   ebx
640253c8:	push   0x64037d9c
640253cd:	mov    ds:0x640472c4,eax
640253d2:	mov    DWORD PTR ds:0x640472c8,ebx
640253d8:	call   0x64002e90
640253dd:	add    esp,0x48
640253e0:	push   0x64037d6c
640253e5:	push   esi
640253e6:	push   0x64037d64
640253eb:	mov    ds:0x640472cc,eax
640253f0:	mov    DWORD PTR ds:0x640472d0,esi
640253f6:	call   0x64002e90
640253fb:	push   0x64037d3c
64025400:	push   edi
64025401:	push   0x64037d34
64025406:	mov    ds:0x640472d4,eax
6402540b:	mov    DWORD PTR ds:0x640472d8,edi
64025411:	call   0x64002e90
64025416:	push   0x64037d0c
6402541b:	push   edi
6402541c:	push   0x64037d04
64025421:	mov    ds:0x640472dc,eax
64025426:	mov    DWORD PTR ds:0x640472e0,edi
6402542c:	call   0x64002e90
64025431:	push   0x64037cc8
64025436:	push   ebx
64025437:	push   0x64037cc0
6402543c:	mov    ds:0x640472e4,eax
64025441:	mov    DWORD PTR ds:0x640472e8,ebx
64025447:	call   0x64002e90
6402544c:	push   0x64037c84
64025451:	push   ebx
64025452:	push   0x64037c7c
64025457:	mov    ds:0x640472ec,eax
6402545c:	mov    DWORD PTR ds:0x640472f0,ebx
64025462:	call   0x64002e90
64025467:	push   0x64037c40
6402546c:	push   edi
6402546d:	push   0x64037c38
64025472:	mov    ds:0x640472f4,eax
64025477:	mov    DWORD PTR ds:0x640472f8,edi
6402547d:	call   0x64002e90
64025482:	add    esp,0x48
64025485:	push   0x64037bfc
6402548a:	push   ebx
6402548b:	push   0x64037bf4
64025490:	mov    ds:0x640472fc,eax
64025495:	mov    DWORD PTR ds:0x64047300,ebx
6402549b:	call   0x64002e90
640254a0:	push   0x64037bcc
640254a5:	push   ebx
640254a6:	push   0x64037bc4
640254ab:	mov    ds:0x64047304,eax
640254b0:	mov    DWORD PTR ds:0x64047308,ebx
640254b6:	call   0x64002e90
640254bb:	push   0x64037b90
640254c0:	push   edi
640254c1:	push   0x64037b88
640254c6:	mov    ds:0x6404730c,eax
640254cb:	mov    DWORD PTR ds:0x64047310,edi
640254d1:	call   0x64002e90
640254d6:	push   0x64037b5c
640254db:	push   ebx
640254dc:	push   0x64037b54
640254e1:	mov    ds:0x64047314,eax
640254e6:	mov    DWORD PTR ds:0x64047318,ebx
640254ec:	call   0x64002e90
640254f1:	push   0x64037b18
640254f6:	push   ebp
640254f7:	mov    ds:0x6404731c,eax
640254fc:	mov    DWORD PTR ds:0x64047320,ebp
64025502:	push   0x64037b0c
64025507:	call   0x64002e90
6402550c:	push   0x64037adc
64025511:	push   ebp
64025512:	push   0x64037ad0
64025517:	mov    ds:0x64047324,eax
6402551c:	mov    DWORD PTR ds:0x64047328,ebp
64025522:	call   0x64002e90
64025527:	add    esp,0x48
6402552a:	push   0x64037aa0
6402552f:	push   esi
64025530:	push   0x64037a98
64025535:	mov    ds:0x6404732c,eax
6402553a:	mov    DWORD PTR ds:0x64047330,esi
64025540:	call   0x64002e90
64025545:	push   0x64037a60
6402554a:	push   ebx
6402554b:	push   0x64037a58
64025550:	mov    ds:0x64047334,eax
64025555:	mov    DWORD PTR ds:0x64047338,ebx
6402555b:	call   0x64002e90
64025560:	push   0x64037a20
64025565:	push   edi
64025566:	push   0x64037a18
6402556b:	mov    ds:0x6404733c,eax
64025570:	mov    DWORD PTR ds:0x64047340,edi
64025576:	call   0x64002e90
6402557b:	push   0x640379d8
64025580:	push   ebx
64025581:	push   0x640379cc
64025586:	mov    ds:0x64047344,eax
6402558b:	mov    DWORD PTR ds:0x64047348,ebx
64025591:	call   0x64002e90
64025596:	push   0x640379a4
6402559b:	push   ebp
6402559c:	push   0x64037998
640255a1:	mov    ds:0x6404734c,eax
640255a6:	mov    DWORD PTR ds:0x64047350,ebp
640255ac:	call   0x64002e90
640255b1:	push   0x64037968
640255b6:	push   edi
640255b7:	push   0x64037960
640255bc:	mov    ds:0x64047354,eax
640255c1:	mov    DWORD PTR ds:0x64047358,edi
640255c7:	call   0x64002e90
640255cc:	add    esp,0x48
640255cf:	push   0x64037938
640255d4:	push   esi
640255d5:	push   0x64037930
640255da:	mov    ds:0x6404735c,eax
640255df:	mov    DWORD PTR ds:0x64047360,esi
640255e5:	call   0x64002e90
640255ea:	push   0x64037908
640255ef:	push   edi
640255f0:	push   0x64037900
640255f5:	mov    ds:0x64047364,eax
640255fa:	mov    DWORD PTR ds:0x64047368,edi
64025600:	call   0x64002e90
64025605:	push   0x640378d8
6402560a:	push   esi
6402560b:	push   0x640378d0
64025610:	mov    ds:0x6404736c,eax
64025615:	mov    DWORD PTR ds:0x64047370,esi
6402561b:	call   0x64002e90
64025620:	push   0x640378a4
64025625:	push   esi
64025626:	push   0x6403789c
6402562b:	mov    ds:0x64047374,eax
64025630:	mov    DWORD PTR ds:0x64047378,esi
64025636:	call   0x64002e90
6402563b:	push   0x64037874
64025640:	push   ebx
64025641:	push   0x6403786c
64025646:	mov    ds:0x6404737c,eax
6402564b:	mov    DWORD PTR ds:0x64047380,ebx
64025651:	call   0x64002e90
64025656:	push   0x6403782c
6402565b:	push   ebx
6402565c:	push   0x64037824
64025661:	mov    ds:0x64047384,eax
64025666:	mov    DWORD PTR ds:0x64047388,ebx
6402566c:	call   0x64002e90
64025671:	add    esp,0x48
64025674:	push   0x640377fc
64025679:	push   esi
6402567a:	push   0x640377f4
6402567f:	mov    ds:0x6404738c,eax
64025684:	mov    DWORD PTR ds:0x64047390,esi
6402568a:	call   0x64002e90
6402568f:	push   0x640377b4
64025694:	push   esi
64025695:	push   0x640377ac
6402569a:	mov    ds:0x64047394,eax
6402569f:	mov    DWORD PTR ds:0x64047398,esi
640256a5:	call   0x64002e90
640256aa:	push   0x64037788
640256af:	push   edi
640256b0:	push   0x64037780
640256b5:	mov    ds:0x6404739c,eax
640256ba:	mov    DWORD PTR ds:0x640473a0,edi
640256c0:	call   0x64002e90
640256c5:	push   0x64037754
640256ca:	push   edi
640256cb:	push   0x6403774c
640256d0:	mov    ds:0x640473a4,eax
640256d5:	mov    DWORD PTR ds:0x640473a8,edi
640256db:	call   0x64002e90
640256e0:	push   0x64037720
640256e5:	push   edi
640256e6:	push   0x64037718
640256eb:	mov    ds:0x640473ac,eax
640256f0:	mov    DWORD PTR ds:0x640473b0,edi
640256f6:	call   0x64002e90
640256fb:	push   0x640376dc
64025700:	push   esi
64025701:	push   0x640376d4
64025706:	mov    ds:0x640473b4,eax
6402570b:	mov    DWORD PTR ds:0x640473b8,esi
64025711:	call   0x64002e90
64025716:	add    esp,0x48
64025719:	push   0x640376a4
6402571e:	push   esi
6402571f:	push   0x6403769c
64025724:	mov    ds:0x640473bc,eax
64025729:	mov    DWORD PTR ds:0x640473c0,esi
6402572f:	call   0x64002e90
64025734:	push   0x64037664
64025739:	push   ebp
6402573a:	push   0x64037658
6402573f:	mov    ds:0x640473c4,eax
64025744:	mov    DWORD PTR ds:0x640473c8,ebp
6402574a:	call   0x64002e90
6402574f:	push   0x64037628
64025754:	push   edi
64025755:	push   0x64037620
6402575a:	mov    ds:0x640473cc,eax
6402575f:	mov    DWORD PTR ds:0x640473d0,edi
64025765:	call   0x64002e90
6402576a:	push   0x640375e0
6402576f:	push   ebp
64025770:	push   0x640375d4
64025775:	mov    ds:0x640473d4,eax
6402577a:	mov    DWORD PTR ds:0x640473d8,ebp
64025780:	call   0x64002e90
64025785:	push   0x64037598
6402578a:	push   edi
6402578b:	push   0x64037590
64025790:	mov    ds:0x640473dc,eax
64025795:	mov    DWORD PTR ds:0x640473e0,edi
6402579b:	call   0x64002e90
640257a0:	push   0x64037558
640257a5:	push   edi
640257a6:	push   0x64037550
640257ab:	mov    ds:0x640473e4,eax
640257b0:	mov    DWORD PTR ds:0x640473e8,edi
640257b6:	call   0x64002e90
640257bb:	add    esp,0x48
640257be:	push   0x6403751c
640257c3:	push   0x9
640257c5:	push   0x64037510
640257ca:	mov    ds:0x640473ec,eax
640257cf:	mov    DWORD PTR ds:0x640473f0,0x9
640257d9:	call   0x64002e90
640257de:	push   0x640374e8
640257e3:	push   ebp
640257e4:	push   0x640374dc
640257e9:	mov    ds:0x640473f4,eax
640257ee:	mov    DWORD PTR ds:0x640473f8,ebp
640257f4:	call   0x64002e90
640257f9:	push   0x640374b8
640257fe:	push   ebp
640257ff:	push   0x640374ac
64025804:	mov    ds:0x640473fc,eax
64025809:	mov    DWORD PTR ds:0x64047400,ebp
6402580f:	call   0x64002e90
64025814:	push   0x64037488
64025819:	push   ebp
6402581a:	push   0x6403747c
6402581f:	mov    ds:0x64047404,eax
64025824:	mov    DWORD PTR ds:0x64047408,ebp
6402582a:	call   0x64002e90
6402582f:	push   0x64037450
64025834:	push   0x9
64025836:	push   0x64037444
6402583b:	mov    ds:0x6404740c,eax
64025840:	mov    DWORD PTR ds:0x64047410,0x9
6402584a:	call   0x64002e90
6402584f:	push   0x6403741c
64025854:	push   0x9
64025856:	push   0x64037410
6402585b:	mov    ds:0x64047414,eax
64025860:	mov    DWORD PTR ds:0x64047418,0x9
6402586a:	call   0x64002e90
6402586f:	add    esp,0x48
64025872:	push   0x640373e4
64025877:	push   ebp
64025878:	push   0x640373d8
6402587d:	mov    ds:0x6404741c,eax
64025882:	mov    DWORD PTR ds:0x64047420,ebp
64025888:	call   0x64002e90
6402588d:	push   0x640373a0
64025892:	push   ebp
64025893:	push   0x64037394
64025898:	mov    ds:0x64047424,eax
6402589d:	mov    DWORD PTR ds:0x64047428,ebp
640258a3:	call   0x64002e90
640258a8:	push   0x6403736c
640258ad:	push   0x9
640258af:	push   0x64037360
640258b4:	mov    ds:0x6404742c,eax
640258b9:	mov    DWORD PTR ds:0x64047430,0x9
640258c3:	call   0x64002e90
640258c8:	push   0x6403733c
640258cd:	push   0x9
640258cf:	push   0x64037330
640258d4:	mov    ds:0x64047434,eax
640258d9:	mov    DWORD PTR ds:0x64047438,0x9
640258e3:	call   0x64002e90
640258e8:	push   0x640372f4
640258ed:	push   edi
640258ee:	push   0x640372ec
640258f3:	mov    ds:0x6404743c,eax
640258f8:	mov    DWORD PTR ds:0x64047440,edi
640258fe:	call   0x64002e90
64025903:	push   0x640372ac
64025908:	push   esi
64025909:	push   0x640372a4
6402590e:	mov    ds:0x64047444,eax
64025913:	mov    DWORD PTR ds:0x64047448,esi
64025919:	call   0x64002e90
6402591e:	add    esp,0x48
64025921:	push   0x6403727c
64025926:	push   esi
64025927:	push   0x64037274
6402592c:	mov    ds:0x6404744c,eax
64025931:	mov    DWORD PTR ds:0x64047450,esi
64025937:	call   0x64002e90
6402593c:	push   0x64037248
64025941:	push   ebp
64025942:	push   0x6403723c
64025947:	mov    ds:0x64047454,eax
6402594c:	mov    DWORD PTR ds:0x64047458,ebp
64025952:	call   0x64002e90
64025957:	mov    ds:0x6404745c,eax
6402595c:	push   0x64037208
64025961:	push   ebp
64025962:	push   0x640371fc
64025967:	mov    DWORD PTR ds:0x64047460,ebp
6402596d:	call   0x64002e90
64025972:	push   0x640371c0
64025977:	push   edi
64025978:	push   0x640371b8
6402597d:	mov    ds:0x64047464,eax
64025982:	mov    DWORD PTR ds:0x64047468,edi
64025988:	call   0x64002e90
6402598d:	push   0x64037178
64025992:	push   edi
64025993:	push   0x64037170
64025998:	mov    ds:0x6404746c,eax
6402599d:	mov    DWORD PTR ds:0x64047470,edi
640259a3:	call   0x64002e90
640259a8:	push   0x64037134
640259ad:	push   0x9
640259af:	push   0x64037128
640259b4:	mov    ds:0x64047474,eax
640259b9:	mov    DWORD PTR ds:0x64047478,0x9
640259c3:	call   0x64002e90
640259c8:	add    esp,0x48
640259cb:	push   0x64037104
640259d0:	push   0xb
640259d2:	push   0x640370f8
640259d7:	mov    ds:0x6404747c,eax
640259dc:	mov    DWORD PTR ds:0x64047480,0xb
640259e6:	call   0x64002e90
640259eb:	push   0x640370b8
640259f0:	push   0xa
640259f2:	push   0x640370ac
640259f7:	mov    ds:0x64047484,eax
640259fc:	mov    DWORD PTR ds:0x64047488,0xa
64025a06:	call   0x64002e90
64025a0b:	push   0x64037080
64025a10:	push   0xa
64025a12:	push   0x64037074
64025a17:	mov    ds:0x6404748c,eax
64025a1c:	mov    DWORD PTR ds:0x64047490,0xa
64025a26:	call   0x64002e90
64025a2b:	push   0x64037050
64025a30:	push   0xa
64025a32:	push   0x64037044
64025a37:	mov    ds:0x64047494,eax
64025a3c:	mov    DWORD PTR ds:0x64047498,0xa
64025a46:	call   0x64002e90
64025a4b:	push   0x64037020
64025a50:	push   esi
64025a51:	push   0x64037018
64025a56:	mov    ds:0x6404749c,eax
64025a5b:	mov    DWORD PTR ds:0x640474a0,esi
64025a61:	call   0x64002e90
64025a66:	push   0x64036ff4
64025a6b:	push   esi
64025a6c:	push   0x64036fec
64025a71:	mov    ds:0x640474a4,eax
64025a76:	mov    DWORD PTR ds:0x640474a8,esi
64025a7c:	call   0x64002e90
64025a81:	add    esp,0x48
64025a84:	push   0x64036fbc
64025a89:	push   edi
64025a8a:	push   0x64036fb4
64025a8f:	mov    ds:0x640474ac,eax
64025a94:	mov    DWORD PTR ds:0x640474b0,edi
64025a9a:	call   0x64002e90
64025a9f:	push   0x64036f7c
64025aa4:	push   edi
64025aa5:	push   0x64036f74
64025aaa:	mov    ds:0x640474b4,eax
64025aaf:	mov    DWORD PTR ds:0x640474b8,edi
64025ab5:	call   0x64002e90
64025aba:	push   0x64036f44
64025abf:	push   ebp
64025ac0:	push   0x64036f38
64025ac5:	mov    ds:0x640474bc,eax
64025aca:	mov    DWORD PTR ds:0x640474c0,ebp
64025ad0:	call   0x64002e90
64025ad5:	mov    ds:0x640474c4,eax
64025ada:	mov    DWORD PTR ds:0x640474c8,ebp
64025ae0:	push   0x64036f08
64025ae5:	push   ebp
64025ae6:	push   0x64036efc
64025aeb:	call   0x64002e90
64025af0:	push   0x64036ed0
64025af5:	push   ebp
64025af6:	push   0x64036ec4
64025afb:	mov    ds:0x640474cc,eax
64025b00:	mov    DWORD PTR ds:0x640474d0,ebp
64025b06:	call   0x64002e90
64025b0b:	push   0x64036ea0
64025b10:	push   ebp
64025b11:	push   0x64036e94
64025b16:	mov    ds:0x640474d4,eax
64025b1b:	mov    DWORD PTR ds:0x640474d8,ebp
64025b21:	call   0x64002e90
64025b26:	add    esp,0x48
64025b29:	push   0x64036e60
64025b2e:	push   0x9
64025b30:	push   0x64036e54
64025b35:	mov    ds:0x640474dc,eax
64025b3a:	mov    DWORD PTR ds:0x640474e0,0x9
64025b44:	call   0x64002e90
64025b49:	push   0x64036e20
64025b4e:	push   0x9
64025b50:	push   0x64036e14
64025b55:	mov    ds:0x640474e4,eax
64025b5a:	mov    DWORD PTR ds:0x640474e8,0x9
64025b64:	call   0x64002e90
64025b69:	push   0x64036dec
64025b6e:	push   edi
64025b6f:	push   0x64036de4
64025b74:	mov    ds:0x640474ec,eax
64025b79:	mov    DWORD PTR ds:0x640474f0,edi
64025b7f:	call   0x64002e90
64025b84:	push   0x64036db4
64025b89:	push   edi
64025b8a:	push   0x64036dac
64025b8f:	mov    ds:0x640474f4,eax
64025b94:	mov    DWORD PTR ds:0x640474f8,edi
64025b9a:	call   0x64002e90
64025b9f:	push   0x64036d78
64025ba4:	push   edi
64025ba5:	push   0x64036d70
64025baa:	mov    ds:0x640474fc,eax
64025baf:	mov    DWORD PTR ds:0x64047500,edi
64025bb5:	call   0x64002e90
64025bba:	push   0x64036d30
64025bbf:	push   edi
64025bc0:	push   0x64036d24
64025bc5:	mov    ds:0x64047504,eax
64025bca:	mov    DWORD PTR ds:0x64047508,edi
64025bd0:	call   0x64002e90
64025bd5:	add    esp,0x48
64025bd8:	push   0x64036cf8
64025bdd:	push   ebp
64025bde:	push   0x64036cec
64025be3:	mov    ds:0x6404750c,eax
64025be8:	mov    DWORD PTR ds:0x64047510,ebp
64025bee:	call   0x64002e90
64025bf3:	push   0x64036cac
64025bf8:	push   ebp
64025bf9:	push   0x64036ca0
64025bfe:	mov    ds:0x64047514,eax
64025c03:	mov    DWORD PTR ds:0x64047518,ebp
64025c09:	call   0x64002e90
64025c0e:	push   0x64036c6c
64025c13:	push   0x9
64025c15:	push   0x64036c60
64025c1a:	mov    ds:0x6404751c,eax
64025c1f:	mov    DWORD PTR ds:0x64047520,0x9
64025c29:	call   0x64002e90
64025c2e:	push   0x64036c34
64025c33:	push   0x9
64025c35:	push   0x64036c28
64025c3a:	mov    ds:0x64047524,eax
64025c3f:	mov    DWORD PTR ds:0x64047528,0x9
64025c49:	call   0x64002e90
64025c4e:	mov    ds:0x6404752c,eax
64025c53:	mov    DWORD PTR ds:0x64047530,0x9
64025c5d:	push   0x64036bfc
64025c62:	push   0x9
64025c64:	push   0x64036bf0
64025c69:	call   0x64002e90
64025c6e:	push   0x64036bbc
64025c73:	push   0x9
64025c75:	push   0x64036bb0
64025c7a:	mov    ds:0x64047534,eax
64025c7f:	mov    DWORD PTR ds:0x64047538,0x9
64025c89:	call   0x64002e90
64025c8e:	add    esp,0x48
64025c91:	push   0x64036b78
64025c96:	push   0xa
64025c98:	push   0x64036b6c
64025c9d:	mov    ds:0x6404753c,eax
64025ca2:	mov    DWORD PTR ds:0x64047540,0xa
64025cac:	call   0x64002e90
64025cb1:	push   0x64036b38
64025cb6:	push   0xa
64025cb8:	push   0x64036b2c
64025cbd:	mov    ds:0x64047544,eax
64025cc2:	mov    DWORD PTR ds:0x64047548,0xa
64025ccc:	call   0x64002e90
64025cd1:	push   0x64036aec
64025cd6:	push   ebp
64025cd7:	push   0x64036ae0
64025cdc:	mov    ds:0x6404754c,eax
64025ce1:	mov    DWORD PTR ds:0x64047550,ebp
64025ce7:	call   0x64002e90
64025cec:	push   0x64036aa4
64025cf1:	push   ebp
64025cf2:	push   0x64036a98
64025cf7:	mov    ds:0x64047554,eax
64025cfc:	mov    DWORD PTR ds:0x64047558,ebp
64025d02:	call   0x64002e90
64025d07:	push   0x64036a58
64025d0c:	push   ebp
64025d0d:	push   0x64036a4c
64025d12:	mov    ds:0x6404755c,eax
64025d17:	mov    DWORD PTR ds:0x64047560,ebp
64025d1d:	call   0x64002e90
64025d22:	push   0x64036a0c
64025d27:	push   ebp
64025d28:	push   0x64036a00
64025d2d:	mov    ds:0x64047564,eax
64025d32:	mov    DWORD PTR ds:0x64047568,ebp
64025d38:	call   0x64002e90
64025d3d:	add    esp,0x48
64025d40:	push   0x640369c0
64025d45:	push   0x9
64025d47:	push   0x640369b4
64025d4c:	mov    ds:0x6404756c,eax
64025d51:	mov    DWORD PTR ds:0x64047570,0x9
64025d5b:	call   0x64002e90
64025d60:	push   0x64036978
64025d65:	push   0x9
64025d67:	push   0x6403696c
64025d6c:	mov    ds:0x64047574,eax
64025d71:	mov    DWORD PTR ds:0x64047578,0x9
64025d7b:	call   0x64002e90
64025d80:	push   0x64036938
64025d85:	push   edi
64025d86:	push   0x64036930
64025d8b:	mov    ds:0x6404757c,eax
64025d90:	mov    DWORD PTR ds:0x64047580,edi
64025d96:	call   0x64002e90
64025d9b:	push   0x64036908
64025da0:	push   edi
64025da1:	push   0x64036900
64025da6:	mov    ds:0x64047584,eax
64025dab:	mov    DWORD PTR ds:0x64047588,edi
64025db1:	call   0x64002e90
64025db6:	push   0x640368c8
64025dbb:	push   ebp
64025dbc:	push   0x640368bc
64025dc1:	mov    ds:0x6404758c,eax
64025dc6:	mov    DWORD PTR ds:0x64047590,ebp
64025dcc:	call   0x64002e90
64025dd1:	push   0x64036888
64025dd6:	mov    ds:0x64047594,eax
64025ddb:	mov    DWORD PTR ds:0x64047598,ebp
64025de1:	push   ebp
64025de2:	push   0x6403687c
64025de7:	call   0x64002e90
64025dec:	add    esp,0x48
64025def:	push   0x64036848
64025df4:	push   esi
64025df5:	push   0x64036840
64025dfa:	mov    ds:0x6404759c,eax
64025dff:	mov    DWORD PTR ds:0x640475a0,esi
64025e05:	call   0x64002e90
64025e0a:	push   0x64036808
64025e0f:	push   esi
64025e10:	push   0x64036800
64025e15:	mov    ds:0x640475a4,eax
64025e1a:	mov    DWORD PTR ds:0x640475a8,esi
64025e20:	call   0x64002e90
64025e25:	push   0x640367c0
64025e2a:	push   edi
64025e2b:	push   0x640367b8
64025e30:	mov    ds:0x640475ac,eax
64025e35:	mov    DWORD PTR ds:0x640475b0,edi
64025e3b:	call   0x64002e90
64025e40:	push   0x64036794
64025e45:	push   edi
64025e46:	push   0x6403678c
64025e4b:	mov    ds:0x640475b4,eax
64025e50:	mov    DWORD PTR ds:0x640475b8,edi
64025e56:	call   0x64002e90
64025e5b:	push   0x64036758
64025e60:	push   esi
64025e61:	push   0x64036750
64025e66:	mov    ds:0x640475bc,eax
64025e6b:	mov    DWORD PTR ds:0x640475c0,esi
64025e71:	call   0x64002e90
64025e76:	push   0x64036718
64025e7b:	push   edi
64025e7c:	push   0x64036710
64025e81:	mov    ds:0x640475c4,eax
64025e86:	mov    DWORD PTR ds:0x640475c8,edi
64025e8c:	call   0x64002e90
64025e91:	add    esp,0x48
64025e94:	push   0x640366d0
64025e99:	push   esi
64025e9a:	push   0x640366c8
64025e9f:	mov    ds:0x640475cc,eax
64025ea4:	mov    DWORD PTR ds:0x640475d0,esi
64025eaa:	call   0x64002e90
64025eaf:	push   0x6403668c
64025eb4:	push   edi
64025eb5:	push   0x64036684
64025eba:	mov    ds:0x640475d4,eax
64025ebf:	mov    DWORD PTR ds:0x640475d8,edi
64025ec5:	call   0x64002e90
64025eca:	push   0x6403664c
64025ecf:	push   esi
64025ed0:	push   0x64036644
64025ed5:	mov    ds:0x640475dc,eax
64025eda:	mov    DWORD PTR ds:0x640475e0,esi
64025ee0:	call   0x64002e90
64025ee5:	push   0x6403660c
64025eea:	push   edi
64025eeb:	push   0x64036604
64025ef0:	mov    ds:0x640475e4,eax
64025ef5:	mov    DWORD PTR ds:0x640475e8,edi
64025efb:	call   0x64002e90
64025f00:	push   0x640365dc
64025f05:	push   edi
64025f06:	push   0x640365d4
64025f0b:	mov    ds:0x640475ec,eax
64025f10:	mov    DWORD PTR ds:0x640475f0,edi
64025f16:	call   0x64002e90
64025f1b:	push   0x640365b0
64025f20:	push   ebp
64025f21:	push   0x640365a4
64025f26:	mov    ds:0x640475f4,eax
64025f2b:	mov    DWORD PTR ds:0x640475f8,ebp
64025f31:	call   0x64002e90
64025f36:	add    esp,0x48
64025f39:	push   0x6403656c
64025f3e:	mov    ds:0x640475fc,eax
64025f43:	mov    DWORD PTR ds:0x64047600,0x9
64025f4d:	push   0x9
64025f4f:	push   0x64036560
64025f54:	call   0x64002e90
64025f59:	push   0x6403652c
64025f5e:	push   0xa
64025f60:	push   0x64036520
64025f65:	mov    ds:0x64047604,eax
64025f6a:	mov    DWORD PTR ds:0x64047608,0xa
64025f74:	call   0x64002e90
64025f79:	push   0x640364f4
64025f7e:	push   esi
64025f7f:	push   0x640364ec
64025f84:	mov    ds:0x6404760c,eax
64025f89:	mov    DWORD PTR ds:0x64047610,esi
64025f8f:	call   0x64002e90
64025f94:	push   0x640364b4
64025f99:	push   edi
64025f9a:	push   0x640364ac
64025f9f:	mov    ds:0x64047614,eax
64025fa4:	mov    DWORD PTR ds:0x64047618,edi
64025faa:	call   0x64002e90
64025faf:	push   0x6403646c
64025fb4:	push   esi
64025fb5:	push   0x64036464
64025fba:	mov    ds:0x6404761c,eax
64025fbf:	mov    DWORD PTR ds:0x64047620,esi
64025fc5:	call   0x64002e90
64025fca:	push   0x6403643c
64025fcf:	push   edi
64025fd0:	push   0x64036434
64025fd5:	mov    ds:0x64047624,eax
64025fda:	mov    DWORD PTR ds:0x64047628,edi
64025fe0:	call   0x64002e90
64025fe5:	add    esp,0x48
64025fe8:	push   0x640363fc
64025fed:	push   edi
64025fee:	push   0x640363f4
64025ff3:	mov    ds:0x6404762c,eax
64025ff8:	mov    DWORD PTR ds:0x64047630,edi
64025ffe:	call   0x64002e90
64026003:	push   0x640363bc
64026008:	push   ebp
64026009:	push   0x640363b0
6402600e:	mov    ds:0x64047634,eax
64026013:	mov    DWORD PTR ds:0x64047638,ebp
64026019:	call   0x64002e90
6402601e:	push   0x64036380
64026023:	push   esi
64026024:	push   0x64036378
64026029:	mov    ds:0x6404763c,eax
6402602e:	mov    DWORD PTR ds:0x64047640,esi
64026034:	call   0x64002e90
64026039:	push   0x6403633c
6402603e:	push   edi
6402603f:	push   0x64036334
64026044:	mov    ds:0x64047644,eax
64026049:	mov    DWORD PTR ds:0x64047648,edi
6402604f:	call   0x64002e90
64026054:	push   0x64036304
64026059:	push   esi
6402605a:	push   0x640362fc
6402605f:	mov    ds:0x6404764c,eax
64026064:	mov    DWORD PTR ds:0x64047650,esi
6402606a:	call   0x64002e90
6402606f:	push   0x640362d8
64026074:	push   edi
64026075:	push   0x640362d0
6402607a:	mov    ds:0x64047654,eax
6402607f:	mov    DWORD PTR ds:0x64047658,edi
64026085:	call   0x64002e90
6402608a:	add    esp,0x48
6402608d:	push   0x6403629c
64026092:	push   esi
64026093:	push   0x64036294
64026098:	mov    ds:0x6404765c,eax
6402609d:	mov    DWORD PTR ds:0x64047660,esi
640260a3:	call   0x64002e90
640260a8:	push   0x64036264
640260ad:	push   edi
640260ae:	mov    ds:0x64047664,eax
640260b3:	mov    DWORD PTR ds:0x64047668,edi
640260b9:	push   0x6403625c
640260be:	call   0x64002e90
640260c3:	push   0x64036234
640260c8:	push   ebp
640260c9:	push   0x64036228
640260ce:	mov    ds:0x6404766c,eax
640260d3:	mov    DWORD PTR ds:0x64047670,ebp
640260d9:	call   0x64002e90
640260de:	push   0x640361f0
640260e3:	push   0x9
640260e5:	push   0x640361e4
640260ea:	mov    ds:0x64047674,eax
640260ef:	mov    DWORD PTR ds:0x64047678,0x9
640260f9:	call   0x64002e90
640260fe:	push   0x640361a8
64026103:	push   0x9
64026105:	push   0x6403619c
6402610a:	mov    ds:0x6404767c,eax
6402610f:	mov    DWORD PTR ds:0x64047680,0x9
64026119:	call   0x64002e90
6402611e:	push   0x64036160
64026123:	push   0x9
64026125:	push   0x64036154
6402612a:	mov    ds:0x64047684,eax
6402612f:	mov    DWORD PTR ds:0x64047688,0x9
64026139:	call   0x64002e90
6402613e:	add    esp,0x48
64026141:	push   0x6403612c
64026146:	push   ebp
64026147:	push   0x64036120
6402614c:	mov    ds:0x6404768c,eax
64026151:	mov    DWORD PTR ds:0x64047690,ebp
64026157:	call   0x64002e90
6402615c:	push   0x640360e0
64026161:	push   ebp
64026162:	push   0x640360d0
64026167:	mov    ds:0x64047694,eax
6402616c:	mov    DWORD PTR ds:0x64047698,ebp
64026172:	call   0x64002e90
64026177:	push   0x640360a0
6402617c:	push   ebp
6402617d:	push   0x64036094
64026182:	mov    ds:0x6404769c,eax
64026187:	mov    DWORD PTR ds:0x640476a0,ebp
6402618d:	call   0x64002e90
64026192:	push   0x64036070
64026197:	push   ebp
64026198:	push   0x64036064
6402619d:	mov    ds:0x640476a4,eax
640261a2:	mov    DWORD PTR ds:0x640476a8,ebp
640261a8:	call   0x64002e90
640261ad:	push   0x64036034
640261b2:	push   ebp
640261b3:	push   0x64036028
640261b8:	mov    ds:0x640476ac,eax
640261bd:	mov    DWORD PTR ds:0x640476b0,ebp
640261c3:	call   0x64002e90
640261c8:	push   0x64035ff0
640261cd:	push   ebx
640261ce:	push   0x64035fe8
640261d3:	mov    ds:0x640476b4,eax
640261d8:	mov    DWORD PTR ds:0x640476b8,ebx
640261de:	call   0x64002e90
640261e3:	add    esp,0x48
640261e6:	push   0x64035fb0
640261eb:	push   esi
640261ec:	push   0x64035fa8
640261f1:	mov    ds:0x640476bc,eax
640261f6:	mov    DWORD PTR ds:0x640476c0,esi
640261fc:	call   0x64002e90
64026201:	push   0x64035f68
64026206:	push   0xc
64026208:	push   0x64035f58
6402620d:	mov    ds:0x640476c4,eax
64026212:	mov    DWORD PTR ds:0x640476c8,0xc
6402621c:	call   0x64002e90
64026221:	push   0x64035f20
64026226:	push   0xc
64026228:	push   0x64035f10
6402622d:	mov    ds:0x640476cc,eax
64026232:	mov    DWORD PTR ds:0x640476d0,0xc
6402623c:	call   0x64002e90
64026241:	push   0x64035ee0
64026246:	push   0xe
64026248:	push   0x64035ed0
6402624d:	mov    ds:0x640476d4,eax
64026252:	mov    DWORD PTR ds:0x640476d8,0xe
6402625c:	call   0x64002e90
64026261:	push   0x64035ea8
64026266:	push   ebx
64026267:	push   0x64035ea0
6402626c:	mov    ds:0x640476dc,eax
64026271:	mov    DWORD PTR ds:0x640476e0,ebx
64026277:	call   0x64002e90
6402627c:	push   0x64035e74
64026281:	push   esi
64026282:	push   0x64035e6c
64026287:	mov    ds:0x640476e4,eax
6402628c:	mov    DWORD PTR ds:0x640476e8,esi
64026292:	call   0x64002e90
64026297:	add    esp,0x48
6402629a:	push   0x64035e34
6402629f:	push   ebx
640262a0:	push   0x64035e2c
640262a5:	mov    ds:0x640476ec,eax
640262aa:	mov    DWORD PTR ds:0x640476f0,ebx
640262b0:	call   0x64002e90
640262b5:	push   0x64035e08
640262ba:	push   esi
640262bb:	push   0x64035e00
640262c0:	mov    ds:0x640476f4,eax
640262c5:	mov    DWORD PTR ds:0x640476f8,esi
640262cb:	call   0x64002e90
640262d0:	push   0x64035dc4
640262d5:	push   ebx
640262d6:	push   0x64035dbc
640262db:	mov    ds:0x640476fc,eax
640262e0:	mov    DWORD PTR ds:0x64047700,ebx
640262e6:	call   0x64002e90
640262eb:	push   0x64035d8c
640262f0:	push   esi
640262f1:	push   0x64035d84
640262f6:	mov    ds:0x64047704,eax
640262fb:	mov    DWORD PTR ds:0x64047708,esi
64026301:	call   0x64002e90
64026306:	push   0x64035d44
6402630b:	push   ebp
6402630c:	push   0x64035d38
64026311:	mov    ds:0x6404770c,eax
64026316:	mov    DWORD PTR ds:0x64047710,ebp
6402631c:	call   0x64002e90
64026321:	push   0x64035cfc
64026326:	push   0x9
64026328:	push   0x64035cf0
6402632d:	mov    ds:0x64047714,eax
64026332:	mov    DWORD PTR ds:0x64047718,0x9
6402633c:	call   0x64002e90
64026341:	add    esp,0x48
64026344:	push   0x64035cc4
64026349:	push   ebp
6402634a:	push   0x64035cb8
6402634f:	mov    ds:0x6404771c,eax
64026354:	mov    DWORD PTR ds:0x64047720,ebp
6402635a:	call   0x64002e90
6402635f:	push   0x64035c78
64026364:	push   0x9
64026366:	push   0x64035c6c
6402636b:	mov    ds:0x64047724,eax
64026370:	mov    DWORD PTR ds:0x64047728,0x9
6402637a:	call   0x64002e90
6402637f:	push   0x64035c30
64026384:	push   ebp
64026385:	push   0x64035c24
6402638a:	mov    ds:0x6404772c,eax
6402638f:	mov    DWORD PTR ds:0x64047730,ebp
64026395:	call   0x64002e90
6402639a:	push   0x64035bf4
6402639f:	push   0x9
640263a1:	push   0x64035be8
640263a6:	mov    ds:0x64047734,eax
640263ab:	mov    DWORD PTR ds:0x64047738,0x9
640263b5:	call   0x64002e90
640263ba:	mov    ds:0x6404773c,eax
640263bf:	push   0x64035bb0
640263c4:	push   ebp
640263c5:	push   0x64035ba4
640263ca:	mov    DWORD PTR ds:0x64047740,ebp
640263d0:	call   0x64002e90
640263d5:	push   0x64035b70
640263da:	push   0x9
640263dc:	push   0x64035b64
640263e1:	mov    ds:0x64047744,eax
640263e6:	mov    DWORD PTR ds:0x64047748,0x9
640263f0:	call   0x64002e90
640263f5:	add    esp,0x48
640263f8:	push   0x64035b3c
640263fd:	push   ebp
640263fe:	push   0x64035b30
64026403:	mov    ds:0x6404774c,eax
64026408:	mov    DWORD PTR ds:0x64047750,ebp
6402640e:	call   0x64002e90
64026413:	push   0x64035af8
64026418:	push   0x9
6402641a:	push   0x64035aec
6402641f:	mov    ds:0x64047754,eax
64026424:	mov    DWORD PTR ds:0x64047758,0x9
6402642e:	call   0x64002e90
64026433:	push   0x64035ac0
64026438:	push   ebp
64026439:	push   0x64035ab4
6402643e:	mov    ds:0x6404775c,eax
64026443:	mov    DWORD PTR ds:0x64047760,ebp
64026449:	call   0x64002e90
6402644e:	push   0x64035a90
64026453:	push   0x9
64026455:	push   0x64035a84
6402645a:	mov    ds:0x64047764,eax
6402645f:	mov    DWORD PTR ds:0x64047768,0x9
64026469:	call   0x64002e90
6402646e:	push   0x64035a48
64026473:	push   esi
64026474:	push   0x64035a40
64026479:	mov    ds:0x6404776c,eax
6402647e:	mov    DWORD PTR ds:0x64047770,esi
64026484:	call   0x64002e90
64026489:	push   0x64035a14
6402648e:	push   edi
6402648f:	push   0x64035a0c
64026494:	mov    ds:0x64047774,eax
64026499:	mov    DWORD PTR ds:0x64047778,edi
6402649f:	call   0x64002e90
640264a4:	add    esp,0x48
640264a7:	push   0x640359dc
640264ac:	push   edi
640264ad:	push   0x640359d4
640264b2:	mov    ds:0x6404777c,eax
640264b7:	mov    DWORD PTR ds:0x64047780,edi
640264bd:	call   0x64002e90
640264c2:	push   0x640359ac
640264c7:	push   ebp
640264c8:	push   0x640359a0
640264cd:	mov    ds:0x64047784,eax
640264d2:	mov    DWORD PTR ds:0x64047788,ebp
640264d8:	call   0x64002e90
640264dd:	push   0x64035968
640264e2:	push   ebp
640264e3:	push   0x6403595c
640264e8:	mov    ds:0x6404778c,eax
640264ed:	mov    DWORD PTR ds:0x64047790,ebp
640264f3:	call   0x64002e90
640264f8:	push   0x64035938
640264fd:	push   0x9
640264ff:	push   0x6403592c
64026504:	mov    ds:0x64047794,eax
64026509:	mov    DWORD PTR ds:0x64047798,0x9
64026513:	call   0x64002e90
64026518:	push   0x640358f4
6402651d:	push   ebp
6402651e:	push   0x640358e8
64026523:	mov    ds:0x6404779c,eax
64026528:	mov    DWORD PTR ds:0x640477a0,ebp
6402652e:	call   0x64002e90
64026533:	mov    ds:0x640477a4,eax
64026538:	mov    DWORD PTR ds:0x640477a8,0x9
64026542:	push   0x640358ac
64026547:	push   0x9
64026549:	push   0x640358a0
6402654e:	call   0x64002e90
64026553:	add    esp,0x48
64026556:	push   0x64035860
6402655b:	push   0xa
6402655d:	push   0x64035854
64026562:	mov    ds:0x640477ac,eax
64026567:	mov    DWORD PTR ds:0x640477b0,0xa
64026571:	call   0x64002e90
64026576:	push   0x64035818
6402657b:	push   0xa
6402657d:	push   0x6403580c
64026582:	mov    ds:0x640477b4,eax
64026587:	mov    DWORD PTR ds:0x640477b8,0xa
64026591:	call   0x64002e90
64026596:	push   0x640357d8
6402659b:	push   ebp
6402659c:	push   0x640357cc
640265a1:	mov    ds:0x640477bc,eax
640265a6:	mov    DWORD PTR ds:0x640477c0,ebp
640265ac:	call   0x64002e90
640265b1:	push   0x640357a0
640265b6:	push   0x9
640265b8:	push   0x64035794
640265bd:	mov    ds:0x640477c4,eax
640265c2:	mov    DWORD PTR ds:0x640477c8,0x9
640265cc:	call   0x64002e90
640265d1:	push   0x64035764
640265d6:	push   ebp
640265d7:	push   0x64035758
640265dc:	mov    ds:0x640477cc,eax
640265e1:	mov    DWORD PTR ds:0x640477d0,ebp
640265e7:	call   0x64002e90
640265ec:	push   0x64035724
640265f1:	push   0x9
640265f3:	push   0x64035718
640265f8:	mov    ds:0x640477d4,eax
640265fd:	mov    DWORD PTR ds:0x640477d8,0x9
64026607:	call   0x64002e90
6402660c:	add    esp,0x48
6402660f:	push   0x640356d8
64026614:	push   ebp
64026615:	push   0x640356cc
6402661a:	mov    ds:0x640477dc,eax
6402661f:	mov    DWORD PTR ds:0x640477e0,ebp
64026625:	call   0x64002e90
6402662a:	push   0x640356a4
6402662f:	push   0x9
64026631:	push   0x64035698
64026636:	mov    ds:0x640477e4,eax
6402663b:	mov    DWORD PTR ds:0x640477e8,0x9
64026645:	call   0x64002e90
6402664a:	push   0x64035674
6402664f:	push   ebp
64026650:	push   0x64035668
64026655:	mov    ds:0x640477ec,eax
6402665a:	mov    DWORD PTR ds:0x640477f0,ebp
64026660:	call   0x64002e90
64026665:	push   0x64035638
6402666a:	push   0x9
6402666c:	push   0x6403562c
64026671:	mov    ds:0x640477f4,eax
64026676:	mov    DWORD PTR ds:0x640477f8,0x9
64026680:	call   0x64002e90
64026685:	push   0x64035608
6402668a:	push   ebp
6402668b:	push   0x640355fc
64026690:	mov    ds:0x640477fc,eax
64026695:	mov    DWORD PTR ds:0x64047800,ebp
6402669b:	call   0x64002e90
640266a0:	push   0x640355d0
640266a5:	push   0x9
640266a7:	push   0x640355c4
640266ac:	mov    ds:0x64047804,eax
640266b1:	mov    DWORD PTR ds:0x64047808,0x9
640266bb:	call   0x64002e90
640266c0:	add    esp,0x48
640266c3:	mov    ds:0x6404780c,eax
640266c8:	mov    DWORD PTR ds:0x64047810,ebp
640266ce:	push   0x64035598
640266d3:	push   ebp
640266d4:	push   0x6403558c
640266d9:	call   0x64002e90
640266de:	push   0x64035560
640266e3:	push   0x9
640266e5:	push   0x64035554
640266ea:	mov    ds:0x64047814,eax
640266ef:	mov    DWORD PTR ds:0x64047818,0x9
640266f9:	call   0x64002e90
640266fe:	push   0x64035530
64026703:	push   edi
64026704:	push   0x64035528
64026709:	mov    ds:0x6404781c,eax
6402670e:	mov    DWORD PTR ds:0x64047820,edi
64026714:	call   0x64002e90
64026719:	push   0x640354fc
6402671e:	push   ebp
6402671f:	push   0x640354f0
64026724:	mov    ds:0x64047824,eax
64026729:	mov    DWORD PTR ds:0x64047828,ebp
6402672f:	call   0x64002e90
64026734:	push   0x640354c4
64026739:	push   esi
6402673a:	push   0x640354bc
6402673f:	mov    ds:0x6404782c,eax
64026744:	mov    DWORD PTR ds:0x64047830,esi
6402674a:	call   0x64002e90
6402674f:	push   0x6403548c
64026754:	push   edi
64026755:	push   0x64035484
6402675a:	mov    ds:0x64047834,eax
6402675f:	mov    DWORD PTR ds:0x64047838,edi
64026765:	call   0x64002e90
6402676a:	add    esp,0x48
6402676d:	push   0x64035454
64026772:	push   esi
64026773:	push   0x6403544c
64026778:	mov    ds:0x6404783c,eax
6402677d:	mov    DWORD PTR ds:0x64047840,esi
64026783:	call   0x64002e90
64026788:	push   0x64035414
6402678d:	push   edi
6402678e:	push   0x6403540c
64026793:	mov    ds:0x64047844,eax
64026798:	mov    DWORD PTR ds:0x64047848,edi
6402679e:	call   0x64002e90
640267a3:	push   0x640353dc
640267a8:	push   esi
640267a9:	push   0x640353d4
640267ae:	mov    ds:0x6404784c,eax
640267b3:	mov    DWORD PTR ds:0x64047850,esi
640267b9:	call   0x64002e90
640267be:	push   0x640353b0
640267c3:	push   edi
640267c4:	push   0x640353a8
640267c9:	mov    ds:0x64047854,eax
640267ce:	mov    DWORD PTR ds:0x64047858,edi
640267d4:	call   0x64002e90
640267d9:	push   0x64035378
640267de:	push   esi
640267df:	push   0x64035370
640267e4:	mov    ds:0x6404785c,eax
640267e9:	mov    DWORD PTR ds:0x64047860,esi
640267ef:	call   0x64002e90
640267f4:	push   0x64035334
640267f9:	push   edi
640267fa:	push   0x6403532c
640267ff:	mov    ds:0x64047864,eax
64026804:	mov    DWORD PTR ds:0x64047868,edi
6402680a:	call   0x64002e90
6402680f:	add    esp,0x48
64026812:	push   0x640352f0
64026817:	push   esi
64026818:	push   0x640352e8
6402681d:	mov    ds:0x6404786c,eax
64026822:	mov    DWORD PTR ds:0x64047870,esi
64026828:	call   0x64002e90
6402682d:	mov    ds:0x64047874,eax
64026832:	mov    DWORD PTR ds:0x64047878,edi
64026838:	push   0x640352c4
6402683d:	push   edi
6402683e:	push   0x640352bc
64026843:	call   0x64002e90
64026848:	push   0x64035294
6402684d:	push   esi
6402684e:	push   0x6403528c
64026853:	mov    ds:0x6404787c,eax
64026858:	mov    DWORD PTR ds:0x64047880,esi
6402685e:	call   0x64002e90
64026863:	push   0x64035258
64026868:	push   edi
64026869:	push   0x64035250
6402686e:	mov    ds:0x64047884,eax
64026873:	mov    DWORD PTR ds:0x64047888,edi
64026879:	call   0x64002e90
6402687e:	push   0x64035228
64026883:	push   esi
64026884:	push   0x64035220
64026889:	mov    ds:0x6404788c,eax
6402688e:	mov    DWORD PTR ds:0x64047890,esi
64026894:	call   0x64002e90
64026899:	push   0x640351e0
6402689e:	push   edi
6402689f:	push   0x640351d4
640268a4:	mov    ds:0x64047894,eax
640268a9:	mov    DWORD PTR ds:0x64047898,edi
640268af:	call   0x64002e90
640268b4:	add    esp,0x48
640268b7:	push   0x640351b0
640268bc:	push   esi
640268bd:	push   0x640351a8
640268c2:	mov    ds:0x6404789c,eax
640268c7:	mov    DWORD PTR ds:0x640478a0,esi
640268cd:	call   0x64002e90
640268d2:	push   0x6403516c
640268d7:	push   edi
640268d8:	push   0x64035164
640268dd:	mov    ds:0x640478a4,eax
640268e2:	mov    DWORD PTR ds:0x640478a8,edi
640268e8:	call   0x64002e90
640268ed:	push   0x64035134
640268f2:	push   esi
640268f3:	push   0x6403512c
640268f8:	mov    ds:0x640478ac,eax
640268fd:	mov    DWORD PTR ds:0x640478b0,esi
64026903:	call   0x64002e90
64026908:	push   0x640350fc
6402690d:	push   edi
6402690e:	push   0x640350f4
64026913:	mov    ds:0x640478b4,eax
64026918:	mov    DWORD PTR ds:0x640478b8,edi
6402691e:	call   0x64002e90
64026923:	push   0x640350b8
64026928:	push   0xa
6402692a:	push   0x640350ac
6402692f:	mov    ds:0x640478bc,eax
64026934:	mov    DWORD PTR ds:0x640478c0,0xa
6402693e:	call   0x64002e90
64026943:	push   0x64035088
64026948:	push   0xb
6402694a:	push   0x6403507c
6402694f:	mov    ds:0x640478c4,eax
64026954:	mov    DWORD PTR ds:0x640478c8,0xb
6402695e:	call   0x64002e90
64026963:	add    esp,0x48
64026966:	push   0x64035044
6402696b:	push   esi
6402696c:	push   0x6403503c
64026971:	mov    ds:0x640478cc,eax
64026976:	mov    DWORD PTR ds:0x640478d0,esi
6402697c:	call   0x64002e90
64026981:	push   0x64035018
64026986:	push   edi
64026987:	push   0x64035010
6402698c:	mov    ds:0x640478d4,eax
64026991:	mov    DWORD PTR ds:0x640478d8,edi
64026997:	call   0x64002e90
6402699c:	push   0x64034fdc
640269a1:	mov    ds:0x640478dc,eax
640269a6:	mov    DWORD PTR ds:0x640478e0,0xe
640269b0:	push   0xe
640269b2:	push   0x64034fcc
640269b7:	call   0x64002e90
640269bc:	push   0x64034fa0
640269c1:	push   0xe
640269c3:	push   0x64034f90
640269c8:	mov    ds:0x640478e4,eax
640269cd:	mov    DWORD PTR ds:0x640478e8,0xe
640269d7:	call   0x64002e90
640269dc:	push   0x64034f50
640269e1:	push   0xe
640269e3:	push   0x64034f40
640269e8:	mov    ds:0x640478ec,eax
640269ed:	mov    DWORD PTR ds:0x640478f0,0xe
640269f7:	call   0x64002e90
640269fc:	push   0x64034f10
64026a01:	push   0xe
64026a03:	push   0x64034f00
64026a08:	mov    ds:0x640478f4,eax
64026a0d:	mov    DWORD PTR ds:0x640478f8,0xe
64026a17:	call   0x64002e90
64026a1c:	add    esp,0x48
64026a1f:	push   0x64034ed4
64026a24:	push   0xb
64026a26:	push   0x64034ec8
64026a2b:	mov    ds:0x640478fc,eax
64026a30:	mov    DWORD PTR ds:0x64047900,0xb
64026a3a:	call   0x64002e90
64026a3f:	push   0x64034e88
64026a44:	push   0xb
64026a46:	push   0x64034e7c
64026a4b:	mov    ds:0x64047904,eax
64026a50:	mov    DWORD PTR ds:0x64047908,0xb
64026a5a:	call   0x64002e90
64026a5f:	push   0x64034e48
64026a64:	push   0xb
64026a66:	push   0x64034e3c
64026a6b:	mov    ds:0x6404790c,eax
64026a70:	mov    DWORD PTR ds:0x64047910,0xb
64026a7a:	call   0x64002e90
64026a7f:	push   0x64034e00
64026a84:	push   0xb
64026a86:	push   0x64034df4
64026a8b:	mov    ds:0x64047914,eax
64026a90:	mov    DWORD PTR ds:0x64047918,0xb
64026a9a:	call   0x64002e90
64026a9f:	push   0x64034dc0
64026aa4:	push   0xb
64026aa6:	push   0x64034db4
64026aab:	mov    ds:0x6404791c,eax
64026ab0:	mov    DWORD PTR ds:0x64047920,0xb
64026aba:	call   0x64002e90
64026abf:	push   0x64034d80
64026ac4:	push   0xb
64026ac6:	push   0x64034d74
64026acb:	mov    ds:0x64047924,eax
64026ad0:	mov    DWORD PTR ds:0x64047928,0xb
64026ada:	call   0x64002e90
64026adf:	add    esp,0x48
64026ae2:	push   0x64034d40
64026ae7:	push   0xb
64026ae9:	push   0x64034d34
64026aee:	mov    ds:0x6404792c,eax
64026af3:	mov    DWORD PTR ds:0x64047930,0xb
64026afd:	call   0x64002e90
64026b02:	push   0x64034d00
64026b07:	push   0xb
64026b09:	push   0x64034cf4
64026b0e:	mov    ds:0x64047934,eax
64026b13:	mov    DWORD PTR ds:0x64047938,0xb
64026b1d:	call   0x64002e90
64026b22:	push   0x64034cb4
64026b27:	push   0xc
64026b29:	push   0x64034ca4
64026b2e:	mov    ds:0x6404793c,eax
64026b33:	mov    DWORD PTR ds:0x64047940,0xc
64026b3d:	call   0x64002e90
64026b42:	push   0x64034c70
64026b47:	push   0xc
64026b49:	mov    ds:0x64047944,eax
64026b4e:	mov    DWORD PTR ds:0x64047948,0xc
64026b58:	push   0x64034c60
64026b5d:	call   0x64002e90
64026b62:	push   0x64034c2c
64026b67:	push   0xc
64026b69:	push   0x64034c1c
64026b6e:	mov    ds:0x6404794c,eax
64026b73:	mov    DWORD PTR ds:0x64047950,0xc
64026b7d:	call   0x64002e90
64026b82:	push   0x64034bf8
64026b87:	push   0xc
64026b89:	push   0x64034be8
64026b8e:	mov    ds:0x64047954,eax
64026b93:	mov    DWORD PTR ds:0x64047958,0xc
64026b9d:	call   0x64002e90
64026ba2:	add    esp,0x48
64026ba5:	push   0x64034bc4
64026baa:	push   0xc
64026bac:	push   0x64034bb4
64026bb1:	mov    ds:0x6404795c,eax
64026bb6:	mov    DWORD PTR ds:0x64047960,0xc
64026bc0:	call   0x64002e90
64026bc5:	push   0x64034b78
64026bca:	push   0xc
64026bcc:	push   0x64034b68
64026bd1:	mov    ds:0x64047964,eax
64026bd6:	mov    DWORD PTR ds:0x64047968,0xc
64026be0:	call   0x64002e90
64026be5:	push   0x64034b3c
64026bea:	push   0xc
64026bec:	push   0x64034b2c
64026bf1:	mov    ds:0x6404796c,eax
64026bf6:	mov    DWORD PTR ds:0x64047970,0xc
64026c00:	call   0x64002e90
64026c05:	push   0x64034af8
64026c0a:	push   0xc
64026c0c:	push   0x64034ae8
64026c11:	mov    ds:0x64047974,eax
64026c16:	mov    DWORD PTR ds:0x64047978,0xc
64026c20:	call   0x64002e90
64026c25:	push   0x64034ab8
64026c2a:	push   0xe
64026c2c:	push   0x64034aa8
64026c31:	mov    ds:0x6404797c,eax
64026c36:	mov    DWORD PTR ds:0x64047980,0xe
64026c40:	call   0x64002e90
64026c45:	push   0x64034a78
64026c4a:	push   0xe
64026c4c:	push   0x64034a68
64026c51:	mov    ds:0x64047984,eax
64026c56:	mov    DWORD PTR ds:0x64047988,0xe
64026c60:	call   0x64002e90
64026c65:	add    esp,0x48
64026c68:	push   0x64034a40
64026c6d:	push   0xe
64026c6f:	push   0x64034a30
64026c74:	mov    ds:0x6404798c,eax
64026c79:	mov    DWORD PTR ds:0x64047990,0xe
64026c83:	call   0x64002e90
64026c88:	push   0x64034a00
64026c8d:	push   0xe
64026c8f:	push   0x640349f0
64026c94:	mov    ds:0x64047994,eax
64026c99:	mov    DWORD PTR ds:0x64047998,0xe
64026ca3:	call   0x64002e90
64026ca8:	push   0x640349cc
64026cad:	push   0xb
64026caf:	push   0x640349c0
64026cb4:	mov    ds:0x6404799c,eax
64026cb9:	mov    DWORD PTR ds:0x640479a0,0xb
64026cc3:	call   0x64002e90
64026cc8:	push   0x64034980
64026ccd:	push   0xb
64026ccf:	push   0x64034974
64026cd4:	mov    ds:0x640479a4,eax
64026cd9:	mov    DWORD PTR ds:0x640479a8,0xb
64026ce3:	call   0x64002e90
64026ce8:	push   0x64034948
64026ced:	push   0xb
64026cef:	push   0x6403493c
64026cf4:	mov    ds:0x640479ac,eax
64026cf9:	mov    DWORD PTR ds:0x640479b0,0xb
64026d03:	call   0x64002e90
64026d08:	push   0x64034904
64026d0d:	push   0xb
64026d0f:	push   0x640348f8
64026d14:	mov    ds:0x640479b4,eax
64026d19:	mov    DWORD PTR ds:0x640479b8,0xb
64026d23:	call   0x64002e90
64026d28:	add    esp,0x48
64026d2b:	push   0x640348bc
64026d30:	push   0xb
64026d32:	push   0x640348b0
64026d37:	mov    ds:0x640479bc,eax
64026d3c:	mov    DWORD PTR ds:0x640479c0,0xb
64026d46:	call   0x64002e90
64026d4b:	push   0x6403487c
64026d50:	push   0xb
64026d52:	push   0x64034870
64026d57:	mov    ds:0x640479c4,eax
64026d5c:	mov    DWORD PTR ds:0x640479c8,0xb
64026d66:	call   0x64002e90
64026d6b:	push   0x64034844
64026d70:	push   0xb
64026d72:	push   0x64034838
64026d77:	mov    ds:0x640479cc,eax
64026d7c:	mov    DWORD PTR ds:0x640479d0,0xb
64026d86:	call   0x64002e90
64026d8b:	push   0x640347f8
64026d90:	push   0xb
64026d92:	push   0x640347ec
64026d97:	mov    ds:0x640479d4,eax
64026d9c:	mov    DWORD PTR ds:0x640479d8,0xb
64026da6:	call   0x64002e90
64026dab:	push   0x640347b8
64026db0:	push   0xc
64026db2:	push   0x640347a8
64026db7:	mov    ds:0x640479dc,eax
64026dbc:	mov    DWORD PTR ds:0x640479e0,0xc
64026dc6:	call   0x64002e90
64026dcb:	push   0x64034778
64026dd0:	push   0xc
64026dd2:	push   0x64034768
64026dd7:	mov    ds:0x640479e4,eax
64026ddc:	mov    DWORD PTR ds:0x640479e8,0xc
64026de6:	call   0x64002e90
64026deb:	add    esp,0x48
64026dee:	push   0x64034728
64026df3:	push   0xc
64026df5:	push   0x64034718
64026dfa:	mov    ds:0x640479ec,eax
64026dff:	mov    DWORD PTR ds:0x640479f0,0xc
64026e09:	call   0x64002e90
64026e0e:	push   0x640346d8
64026e13:	push   0xc
64026e15:	push   0x640346c8
64026e1a:	mov    ds:0x640479f4,eax
64026e1f:	mov    DWORD PTR ds:0x640479f8,0xc
64026e29:	call   0x64002e90
64026e2e:	push   0x6403468c
64026e33:	push   0xc
64026e35:	push   0x6403467c
64026e3a:	mov    ds:0x640479fc,eax
64026e3f:	mov    DWORD PTR ds:0x64047a00,0xc
64026e49:	call   0x64002e90
64026e4e:	push   0x6403463c
64026e53:	push   0xc
64026e55:	push   0x6403462c
64026e5a:	mov    ds:0x64047a04,eax
64026e5f:	mov    DWORD PTR ds:0x64047a08,0xc
64026e69:	call   0x64002e90
64026e6e:	push   0x640345f4
64026e73:	push   0xc
64026e75:	push   0x640345e4
64026e7a:	mov    ds:0x64047a0c,eax
64026e7f:	mov    DWORD PTR ds:0x64047a10,0xc
64026e89:	call   0x64002e90
64026e8e:	push   0x640345c0
64026e93:	push   0xc
64026e95:	push   0x640345b0
64026e9a:	mov    ds:0x64047a14,eax
64026e9f:	mov    DWORD PTR ds:0x64047a18,0xc
64026ea9:	call   0x64002e90
64026eae:	add    esp,0x48
64026eb1:	push   0x64034580
64026eb6:	push   0xe
64026eb8:	push   0x64034570
64026ebd:	mov    ds:0x64047a1c,eax
64026ec2:	mov    DWORD PTR ds:0x64047a20,0xe
64026ecc:	call   0x64002e90
64026ed1:	push   0x64034548
64026ed6:	push   0xe
64026ed8:	push   0x64034538
64026edd:	mov    ds:0x64047a24,eax
64026ee2:	mov    DWORD PTR ds:0x64047a28,0xe
64026eec:	call   0x64002e90
64026ef1:	push   0x640344f8
64026ef6:	push   0xe
64026ef8:	push   0x640344e8
64026efd:	mov    ds:0x64047a2c,eax
64026f02:	mov    DWORD PTR ds:0x64047a30,0xe
64026f0c:	call   0x64002e90
64026f11:	push   0x640344a8
64026f16:	push   0xe
64026f18:	push   0x64034498
64026f1d:	mov    ds:0x64047a34,eax
64026f22:	mov    DWORD PTR ds:0x64047a38,0xe
64026f2c:	call   0x64002e90
64026f31:	push   0x6403445c
64026f36:	push   0xb
64026f38:	push   0x64034450
64026f3d:	mov    ds:0x64047a3c,eax
64026f42:	mov    DWORD PTR ds:0x64047a40,0xb
64026f4c:	call   0x64002e90
64026f51:	push   0x64034420
64026f56:	push   0xb
64026f58:	push   0x64034414
64026f5d:	mov    ds:0x64047a44,eax
64026f62:	mov    DWORD PTR ds:0x64047a48,0xb
64026f6c:	call   0x64002e90
64026f71:	add    esp,0x48
64026f74:	push   0x640343d8
64026f79:	push   0xb
64026f7b:	push   0x640343cc
64026f80:	mov    ds:0x64047a4c,eax
64026f85:	mov    DWORD PTR ds:0x64047a50,0xb
64026f8f:	call   0x64002e90
64026f94:	push   0x640343a4
64026f99:	push   0xb
64026f9b:	push   0x64034398
64026fa0:	mov    ds:0x64047a54,eax
64026fa5:	mov    DWORD PTR ds:0x64047a58,0xb
64026faf:	call   0x64002e90
64026fb4:	push   0x6403435c
64026fb9:	push   0xb
64026fbb:	push   0x64034350
64026fc0:	mov    ds:0x64047a5c,eax
64026fc5:	mov    DWORD PTR ds:0x64047a60,0xb
64026fcf:	call   0x64002e90
64026fd4:	push   0x64034328
64026fd9:	push   0xb
64026fdb:	push   0x6403431c
64026fe0:	mov    ds:0x64047a64,eax
64026fe5:	mov    DWORD PTR ds:0x64047a68,0xb
64026fef:	call   0x64002e90
64026ff4:	push   0x640342ec
64026ff9:	push   0xb
64026ffb:	push   0x640342e0
64027000:	mov    ds:0x64047a6c,eax
64027005:	mov    DWORD PTR ds:0x64047a70,0xb
6402700f:	call   0x64002e90
64027014:	push   0x640342ac
64027019:	push   0xb
6402701b:	push   0x640342a0
64027020:	mov    ds:0x64047a74,eax
64027025:	mov    DWORD PTR ds:0x64047a78,0xb
6402702f:	call   0x64002e90
64027034:	add    esp,0x48
64027037:	push   0x64034264
6402703c:	push   0xc
6402703e:	push   0x64034254
64027043:	mov    ds:0x64047a7c,eax
64027048:	mov    DWORD PTR ds:0x64047a80,0xc
64027052:	call   0x64002e90
64027057:	mov    ds:0x64047a84,eax
6402705c:	push   0x64034230
64027061:	push   0xc
64027063:	push   0x64034220
64027068:	mov    DWORD PTR ds:0x64047a88,0xc
64027072:	call   0x64002e90
64027077:	push   0x640341f4
6402707c:	push   0xc
6402707e:	push   0x640341e4
64027083:	mov    ds:0x64047a8c,eax
64027088:	mov    DWORD PTR ds:0x64047a90,0xc
64027092:	call   0x64002e90
64027097:	push   0x640341bc
6402709c:	push   0xc
6402709e:	push   0x640341ac
640270a3:	mov    ds:0x64047a94,eax
640270a8:	mov    DWORD PTR ds:0x64047a98,0xc
640270b2:	call   0x64002e90
640270b7:	push   0x64034170
640270bc:	push   0xc
640270be:	push   0x64034160
640270c3:	mov    ds:0x64047a9c,eax
640270c8:	mov    DWORD PTR ds:0x64047aa0,0xc
640270d2:	call   0x64002e90
640270d7:	push   0x64034130
640270dc:	push   0xc
640270de:	push   0x64034120
640270e3:	mov    ds:0x64047aa4,eax
640270e8:	mov    DWORD PTR ds:0x64047aa8,0xc
640270f2:	call   0x64002e90
640270f7:	add    esp,0x48
640270fa:	push   0x640340e0
640270ff:	push   0xc
64027101:	push   0x640340d0
64027106:	mov    ds:0x64047aac,eax
6402710b:	mov    DWORD PTR ds:0x64047ab0,0xc
64027115:	call   0x64002e90
6402711a:	push   0x640340a0
6402711f:	push   0xc
64027121:	push   0x64034090
64027126:	mov    ds:0x64047ab4,eax
6402712b:	mov    DWORD PTR ds:0x64047ab8,0xc
64027135:	call   0x64002e90
6402713a:	push   0x6403405c
6402713f:	push   esi
64027140:	push   0x64034054
64027145:	mov    ds:0x64047abc,eax
6402714a:	mov    DWORD PTR ds:0x64047ac0,esi
64027150:	call   0x64002e90
64027155:	push   0x64034030
6402715a:	push   edi
6402715b:	push   0x64034028
64027160:	mov    ds:0x64047ac4,eax
64027165:	mov    DWORD PTR ds:0x64047ac8,edi
6402716b:	call   0x64002e90
64027170:	push   0x64033fe8
64027175:	push   esi
64027176:	push   0x64033fe0
6402717b:	mov    ds:0x64047acc,eax
64027180:	mov    DWORD PTR ds:0x64047ad0,esi
64027186:	call   0x64002e90
6402718b:	push   0x64033fbc
64027190:	push   edi
64027191:	push   0x64033fb4
64027196:	mov    ds:0x64047ad4,eax
6402719b:	mov    DWORD PTR ds:0x64047ad8,edi
640271a1:	call   0x64002e90
640271a6:	add    esp,0x48
640271a9:	push   0x64033f80
640271ae:	push   0xa
640271b0:	push   0x64033f74
640271b5:	mov    ds:0x64047adc,eax
640271ba:	mov    DWORD PTR ds:0x64047ae0,0xa
640271c4:	call   0x64002e90
640271c9:	push   0x64033f34
640271ce:	push   0xb
640271d0:	push   0x64033f28
640271d5:	mov    ds:0x64047ae4,eax
640271da:	mov    DWORD PTR ds:0x64047ae8,0xb
640271e4:	call   0x64002e90
640271e9:	mov    ds:0x64047aec,eax
640271ee:	mov    DWORD PTR ds:0x64047af0,esi
640271f4:	push   0x64033ee8
640271f9:	push   esi
640271fa:	push   0x64033ee0
640271ff:	call   0x64002e90
64027204:	push   0x64033eb4
64027209:	push   edi
6402720a:	push   0x64033eac
6402720f:	mov    ds:0x64047af4,eax
64027214:	mov    DWORD PTR ds:0x64047af8,edi
6402721a:	call   0x64002e90
6402721f:	push   0x64033e6c
64027224:	push   0xa
64027226:	push   0x64033e60
6402722b:	mov    ds:0x64047afc,eax
64027230:	mov    DWORD PTR ds:0x64047b00,0xa
6402723a:	call   0x64002e90
6402723f:	push   0x64033e38
64027244:	push   0xb
64027246:	push   0x64033e2c
6402724b:	mov    ds:0x64047b04,eax
64027250:	mov    DWORD PTR ds:0x64047b08,0xb
6402725a:	call   0x64002e90
6402725f:	add    esp,0x48
64027262:	push   0x64033e04
64027267:	push   ebx
64027268:	push   0x64033dfc
6402726d:	mov    ds:0x64047b0c,eax
64027272:	mov    DWORD PTR ds:0x64047b10,ebx
64027278:	call   0x64002e90
6402727d:	push   0x64033dc4
64027282:	push   ebx
64027283:	push   0x64033dbc
64027288:	mov    ds:0x64047b14,eax
6402728d:	mov    DWORD PTR ds:0x64047b18,ebx
64027293:	call   0x64002e90
64027298:	push   0x64033d80
6402729d:	push   0xa
6402729f:	push   0x64033d74
640272a4:	mov    ds:0x64047b1c,eax
640272a9:	mov    DWORD PTR ds:0x64047b20,0xa
640272b3:	call   0x64002e90
640272b8:	push   0x64033d4c
640272bd:	push   edi
640272be:	push   0x64033d44
640272c3:	mov    ds:0x64047b24,eax
640272c8:	mov    DWORD PTR ds:0x64047b28,edi
640272ce:	call   0x64002e90
640272d3:	push   0x64033d08
640272d8:	push   ebp
640272d9:	push   0x64033cfc
640272de:	mov    ds:0x64047b2c,eax
640272e3:	mov    DWORD PTR ds:0x64047b30,ebp
640272e9:	call   0x64002e90
640272ee:	push   0x64033cc4
640272f3:	push   edi
640272f4:	push   0x64033cbc
640272f9:	mov    ds:0x64047b34,eax
640272fe:	mov    DWORD PTR ds:0x64047b38,edi
64027304:	call   0x64002e90
64027309:	add    esp,0x48
6402730c:	push   0x64033c80
64027311:	push   ebp
64027312:	push   0x64033c74
64027317:	mov    ds:0x64047b3c,eax
6402731c:	mov    DWORD PTR ds:0x64047b40,ebp
64027322:	call   0x64002e90
64027327:	push   0x64033c34
6402732c:	push   edi
6402732d:	push   0x64033c2c
64027332:	mov    ds:0x64047b44,eax
64027337:	mov    DWORD PTR ds:0x64047b48,edi
6402733d:	call   0x64002e90
64027342:	push   0x64033bf8
64027347:	push   ebp
64027348:	push   0x64033bec
6402734d:	mov    ds:0x64047b4c,eax
64027352:	mov    DWORD PTR ds:0x64047b50,ebp
64027358:	call   0x64002e90
6402735d:	mov    ds:0x64047b54,eax
64027362:	mov    DWORD PTR ds:0x64047b58,edi
64027368:	push   0x64033bac
6402736d:	push   edi
6402736e:	push   0x64033ba4
64027373:	call   0x64002e90
64027378:	push   0x64033b78
6402737d:	push   ebp
6402737e:	push   0x64033b6c
64027383:	mov    ds:0x64047b5c,eax
64027388:	mov    DWORD PTR ds:0x64047b60,ebp
6402738e:	call   0x64002e90
64027393:	push   0x64033b44
64027398:	push   edi
64027399:	push   0x64033b3c
6402739e:	mov    ds:0x64047b64,eax
640273a3:	mov    DWORD PTR ds:0x64047b68,edi
640273a9:	call   0x64002e90
640273ae:	add    esp,0x48
640273b1:	push   0x64033b14
640273b6:	push   ebp
640273b7:	push   0x64033b08
640273bc:	mov    ds:0x64047b6c,eax
640273c1:	mov    DWORD PTR ds:0x64047b70,ebp
640273c7:	call   0x64002e90
640273cc:	push   0x64033adc
640273d1:	push   edi
640273d2:	push   0x64033ad4
640273d7:	mov    ds:0x64047b74,eax
640273dc:	mov    DWORD PTR ds:0x64047b78,edi
640273e2:	call   0x64002e90
640273e7:	push   0x64033aac
640273ec:	push   ebp
640273ed:	push   0x64033aa0
640273f2:	mov    ds:0x64047b7c,eax
640273f7:	mov    DWORD PTR ds:0x64047b80,ebp
640273fd:	call   0x64002e90
64027402:	push   0x64033a68
64027407:	push   edi
64027408:	push   0x64033a60
6402740d:	mov    ds:0x64047b84,eax
64027412:	mov    DWORD PTR ds:0x64047b88,edi
64027418:	call   0x64002e90
6402741d:	push   0x64033a2c
64027422:	push   0x9
64027424:	push   0x64033a20
64027429:	mov    ds:0x64047b8c,eax
6402742e:	mov    DWORD PTR ds:0x64047b90,0x9
64027438:	call   0x64002e90
6402743d:	push   0x640339f0
64027442:	push   edi
64027443:	push   0x640339e8
64027448:	mov    ds:0x64047b94,eax
6402744d:	mov    DWORD PTR ds:0x64047b98,edi
64027453:	call   0x64002e90
64027458:	add    esp,0x48
6402745b:	push   0x640339c0
64027460:	push   ebp
64027461:	push   0x640339b4
64027466:	mov    ds:0x64047b9c,eax
6402746b:	mov    DWORD PTR ds:0x64047ba0,ebp
64027471:	call   0x64002e90
64027476:	push   0x6403397c
6402747b:	push   esi
6402747c:	push   0x64033974
64027481:	mov    ds:0x64047ba4,eax
64027486:	mov    DWORD PTR ds:0x64047ba8,esi
6402748c:	call   0x64002e90
64027491:	push   0x6403394c
64027496:	push   edi
64027497:	push   0x64033944
6402749c:	mov    ds:0x64047bac,eax
640274a1:	mov    DWORD PTR ds:0x64047bb0,edi
640274a7:	call   0x64002e90
640274ac:	push   0x64033904
640274b1:	push   esi
640274b2:	push   0x640338fc
640274b7:	mov    ds:0x64047bb4,eax
640274bc:	mov    DWORD PTR ds:0x64047bb8,esi
640274c2:	call   0x64002e90
640274c7:	push   0x640338d4
640274cc:	mov    ds:0x64047bbc,eax
640274d1:	mov    DWORD PTR ds:0x64047bc0,edi
640274d7:	push   edi
640274d8:	push   0x640338cc
640274dd:	call   0x64002e90
640274e2:	push   0x6403388c
640274e7:	push   esi
640274e8:	push   0x64033884
640274ed:	mov    ds:0x64047bc4,eax
640274f2:	mov    DWORD PTR ds:0x64047bc8,esi
640274f8:	call   0x64002e90
640274fd:	add    esp,0x48
64027500:	push   0x6403385c
64027505:	push   esi
64027506:	push   0x64033854
6402750b:	mov    ds:0x64047bcc,eax
64027510:	mov    DWORD PTR ds:0x64047bd0,esi
64027516:	call   0x64002e90
6402751b:	push   0x64033820
64027520:	push   edi
64027521:	push   0x64033818
64027526:	mov    ds:0x64047bd4,eax
6402752b:	mov    DWORD PTR ds:0x64047bd8,edi
64027531:	call   0x64002e90
64027536:	push   0x640337ec
6402753b:	push   0x9
6402753d:	push   0x640337e0
64027542:	mov    ds:0x64047bdc,eax
64027547:	mov    DWORD PTR ds:0x64047be0,0x9
64027551:	call   0x64002e90
64027556:	push   0x640337bc
6402755b:	push   0xa
6402755d:	push   0x640337b0
64027562:	mov    ds:0x64047be4,eax
64027567:	mov    DWORD PTR ds:0x64047be8,0xa
64027571:	call   0x64002e90
64027576:	push   0x64033788
6402757b:	push   0xb
6402757d:	push   0x6403377c
64027582:	mov    ds:0x64047bec,eax
64027587:	mov    DWORD PTR ds:0x64047bf0,0xb
64027591:	call   0x64002e90
64027596:	push   0x64033748
6402759b:	push   0xc
6402759d:	push   0x64033738
640275a2:	mov    ds:0x64047bf4,eax
640275a7:	mov    DWORD PTR ds:0x64047bf8,0xc
640275b1:	call   0x64002e90
640275b6:	add    esp,0x48
640275b9:	push   0x64033704
640275be:	push   esi
640275bf:	push   0x640336fc
640275c4:	mov    ds:0x64047bfc,eax
640275c9:	mov    DWORD PTR ds:0x64047c00,esi
640275cf:	call   0x64002e90
640275d4:	push   0x640336cc
640275d9:	push   edi
640275da:	push   0x640336c4
640275df:	mov    ds:0x64047c04,eax
640275e4:	mov    DWORD PTR ds:0x64047c08,edi
640275ea:	call   0x64002e90
640275ef:	push   0x6403368c
640275f4:	push   ebp
640275f5:	push   0x64033680
640275fa:	mov    ds:0x64047c0c,eax
640275ff:	mov    DWORD PTR ds:0x64047c10,ebp
64027605:	call   0x64002e90
6402760a:	push   0x6403364c
6402760f:	push   0x9
64027611:	push   0x64033640
64027616:	mov    ds:0x64047c14,eax
6402761b:	mov    DWORD PTR ds:0x64047c18,0x9
64027625:	call   0x64002e90
6402762a:	push   0x64033608
6402762f:	push   esi
64027630:	push   0x64033600
64027635:	mov    ds:0x64047c1c,eax
6402763a:	mov    DWORD PTR ds:0x64047c20,esi
64027640:	call   0x64002e90
64027645:	push   0x640335dc
6402764a:	push   esi
6402764b:	mov    ds:0x64047c24,eax
64027650:	mov    DWORD PTR ds:0x64047c28,esi
64027656:	push   0x640335d4
6402765b:	call   0x64002e90
64027660:	add    esp,0x48
64027663:	push   0x64033594
64027668:	push   edi
64027669:	push   0x6403358c
6402766e:	mov    ds:0x64047c2c,eax
64027673:	mov    DWORD PTR ds:0x64047c30,edi
64027679:	call   0x64002e90
6402767e:	push   0x64033558
64027683:	push   edi
64027684:	push   0x64033550
64027689:	mov    ds:0x64047c34,eax
6402768e:	mov    DWORD PTR ds:0x64047c38,edi
64027694:	call   0x64002e90
64027699:	push   0x64033514
6402769e:	push   0x4
640276a0:	push   0x6403350c
640276a5:	mov    ds:0x64047c3c,eax
640276aa:	mov    DWORD PTR ds:0x64047c40,0x4
640276b4:	call   0x64002e90
640276b9:	push   0x640334e4
640276be:	push   ebx
640276bf:	push   0x640334dc
640276c4:	mov    ds:0x64047c44,eax
640276c9:	mov    DWORD PTR ds:0x64047c48,ebx
640276cf:	call   0x64002e90
640276d4:	push   0x640334b0
640276d9:	push   0x4
640276db:	push   0x640334a8
640276e0:	mov    ds:0x64047c4c,eax
640276e5:	mov    DWORD PTR ds:0x64047c50,0x4
640276ef:	call   0x64002e90
640276f4:	push   0x64033474
640276f9:	push   ebx
640276fa:	push   0x6403346c
640276ff:	mov    ds:0x64047c54,eax
64027704:	mov    DWORD PTR ds:0x64047c58,ebx
6402770a:	call   0x64002e90
6402770f:	add    esp,0x48
64027712:	push   0x64033444
64027717:	push   edi
64027718:	push   0x6403343c
6402771d:	mov    ds:0x64047c5c,eax
64027722:	mov    DWORD PTR ds:0x64047c60,edi
64027728:	call   0x64002e90
6402772d:	push   0x64033408
64027732:	push   ebp
64027733:	push   0x640333fc
64027738:	mov    ds:0x64047c64,eax
6402773d:	mov    DWORD PTR ds:0x64047c68,ebp
64027743:	call   0x64002e90
64027748:	push   0x640333cc
6402774d:	push   0x9
6402774f:	push   0x640333c0
64027754:	mov    ds:0x64047c6c,eax
64027759:	mov    DWORD PTR ds:0x64047c70,0x9
64027763:	call   0x64002e90
64027768:	push   0x64033394
6402776d:	push   0xa
6402776f:	push   0x64033388
64027774:	mov    ds:0x64047c74,eax
64027779:	mov    DWORD PTR ds:0x64047c78,0xa
64027783:	call   0x64002e90
64027788:	push   0x64033354
6402778d:	push   0x9
6402778f:	push   0x64033348
64027794:	mov    ds:0x64047c7c,eax
64027799:	mov    DWORD PTR ds:0x64047c80,0x9
640277a3:	call   0x64002e90
640277a8:	push   0x6403330c
640277ad:	push   0x9
640277af:	push   0x64033300
640277b4:	mov    ds:0x64047c84,eax
640277b9:	mov    DWORD PTR ds:0x64047c88,0x9
640277c3:	call   0x64002e90
640277c8:	add    esp,0x48
640277cb:	push   0x640332c0
640277d0:	push   0x9
640277d2:	mov    ds:0x64047c8c,eax
640277d7:	mov    DWORD PTR ds:0x64047c90,0x9
640277e1:	push   0x640332b4
640277e6:	call   0x64002e90
640277eb:	push   0x6403328c
640277f0:	push   0x9
640277f2:	push   0x64033280
640277f7:	mov    ds:0x64047c94,eax
640277fc:	mov    DWORD PTR ds:0x64047c98,0x9
64027806:	call   0x64002e90
6402780b:	push   0x64033240
64027810:	push   0xa
64027812:	push   0x64033234
64027817:	mov    ds:0x64047c9c,eax
6402781c:	mov    DWORD PTR ds:0x64047ca0,0xa
64027826:	call   0x64002e90
6402782b:	push   0x64033200
64027830:	push   0x9
64027832:	push   0x640331f4
64027837:	mov    ds:0x64047ca4,eax
6402783c:	mov    DWORD PTR ds:0x64047ca8,0x9
64027846:	call   0x64002e90
6402784b:	push   0x640331d0
64027850:	push   0x9
64027852:	push   0x640331c4
64027857:	mov    ds:0x64047cac,eax
6402785c:	mov    DWORD PTR ds:0x64047cb0,0x9
64027866:	call   0x64002e90
6402786b:	push   0x64033184
64027870:	push   0x9
64027872:	push   0x64033178
64027877:	mov    ds:0x64047cb4,eax
6402787c:	mov    DWORD PTR ds:0x64047cb8,0x9
64027886:	call   0x64002e90
6402788b:	add    esp,0x48
6402788e:	push   0x64033148
64027893:	push   0xa
64027895:	push   0x6403313c
6402789a:	mov    ds:0x64047cbc,eax
6402789f:	mov    DWORD PTR ds:0x64047cc0,0xa
640278a9:	call   0x64002e90
640278ae:	push   0x64033100
640278b3:	push   0x9
640278b5:	push   0x640330f4
640278ba:	mov    ds:0x64047cc4,eax
640278bf:	mov    DWORD PTR ds:0x64047cc8,0x9
640278c9:	call   0x64002e90
640278ce:	push   0x640330c8
640278d3:	push   0xa
640278d5:	push   0x640330bc
640278da:	mov    ds:0x64047ccc,eax
640278df:	mov    DWORD PTR ds:0x64047cd0,0xa
640278e9:	call   0x64002e90
640278ee:	push   0x64033098
640278f3:	push   0xf
640278f5:	push   0x64033088
640278fa:	mov    ds:0x64047cd4,eax
640278ff:	mov    DWORD PTR ds:0x64047cd8,0xf
64027909:	call   0x64002e90
6402790e:	push   0x6403304c
64027913:	push   0x10
64027915:	push   0x64033038
6402791a:	mov    ds:0x64047cdc,eax
6402791f:	mov    DWORD PTR ds:0x64047ce0,0x10
64027929:	call   0x64002e90
6402792e:	push   0x64033010
64027933:	push   ebp
64027934:	push   0x64033004
64027939:	mov    ds:0x64047ce4,eax
6402793e:	mov    DWORD PTR ds:0x64047ce8,ebp
64027944:	call   0x64002e90
64027949:	add    esp,0x48
6402794c:	push   0x64032fcc
64027951:	push   ebp
64027952:	push   0x64032fc0
64027957:	mov    ds:0x64047cec,eax
6402795c:	mov    DWORD PTR ds:0x64047cf0,ebp
64027962:	call   0x64002e90
64027967:	push   0x64032f98
6402796c:	push   0x9
6402796e:	push   0x64032f8c
64027973:	mov    ds:0x64047cf4,eax
64027978:	mov    DWORD PTR ds:0x64047cf8,0x9
64027982:	call   0x64002e90
64027987:	push   0x64032f58
6402798c:	push   0x9
6402798e:	push   0x64032f4c
64027993:	mov    ds:0x64047cfc,eax
64027998:	mov    DWORD PTR ds:0x64047d00,0x9
640279a2:	call   0x64002e90
640279a7:	push   0x64032f18
640279ac:	push   esi
640279ad:	push   0x64032f10
640279b2:	mov    ds:0x64047d04,eax
640279b7:	mov    DWORD PTR ds:0x64047d08,esi
640279bd:	call   0x64002e90
640279c2:	push   0x64032ed0
640279c7:	push   esi
640279c8:	push   0x64032ec4
640279cd:	mov    ds:0x64047d0c,eax
640279d2:	mov    DWORD PTR ds:0x64047d10,esi
640279d8:	call   0x64002e90
640279dd:	push   0x64032e98
640279e2:	push   esi
640279e3:	push   0x64032e90
640279e8:	mov    ds:0x64047d14,eax
640279ed:	mov    DWORD PTR ds:0x64047d18,esi
640279f3:	call   0x64002e90
640279f8:	add    esp,0x48
640279fb:	push   0x64032e64
64027a00:	push   esi
64027a01:	push   0x64032e5c
64027a06:	mov    ds:0x64047d1c,eax
64027a0b:	mov    DWORD PTR ds:0x64047d20,esi
64027a11:	call   0x64002e90
64027a16:	push   0x64032e34
64027a1b:	push   edi
64027a1c:	push   0x64032e2c
64027a21:	mov    ds:0x64047d24,eax
64027a26:	mov    DWORD PTR ds:0x64047d28,edi
64027a2c:	call   0x64002e90
64027a31:	push   0x64032e00
64027a36:	push   edi
64027a37:	push   0x64032df8
64027a3c:	mov    ds:0x64047d2c,eax
64027a41:	mov    DWORD PTR ds:0x64047d30,edi
64027a47:	call   0x64002e90
64027a4c:	push   0x64032dd0
64027a51:	push   edi
64027a52:	push   0x64032dc8
64027a57:	mov    ds:0x64047d34,eax
64027a5c:	mov    DWORD PTR ds:0x64047d38,edi
64027a62:	call   0x64002e90
64027a67:	push   0x64032d94
64027a6c:	push   edi
64027a6d:	push   0x64032d8c
64027a72:	mov    ds:0x64047d3c,eax
64027a77:	mov    DWORD PTR ds:0x64047d40,edi
64027a7d:	call   0x64002e90
64027a82:	push   0x64032d58
64027a87:	push   edi
64027a88:	push   0x64032d50
64027a8d:	mov    ds:0x64047d44,eax
64027a92:	mov    DWORD PTR ds:0x64047d48,edi
64027a98:	call   0x64002e90
64027a9d:	add    esp,0x48
64027aa0:	push   0x64032d14
64027aa5:	push   edi
64027aa6:	push   0x64032d0c
64027aab:	mov    ds:0x64047d4c,eax
64027ab0:	mov    DWORD PTR ds:0x64047d50,edi
64027ab6:	call   0x64002e90
64027abb:	push   0x64032ccc
64027ac0:	push   ebp
64027ac1:	push   0x64032cc0
64027ac6:	mov    ds:0x64047d54,eax
64027acb:	mov    DWORD PTR ds:0x64047d58,ebp
64027ad1:	call   0x64002e90
64027ad6:	push   0x64032c84
64027adb:	push   ebp
64027adc:	push   0x64032c78
64027ae1:	mov    ds:0x64047d5c,eax
64027ae6:	mov    DWORD PTR ds:0x64047d60,ebp
64027aec:	call   0x64002e90
64027af1:	mov    ds:0x64047d64,eax
64027af6:	push   0x64032c38
64027afb:	push   ebx
64027afc:	push   0x64032c30
64027b01:	mov    DWORD PTR ds:0x64047d68,ebx
64027b07:	call   0x64002e90
64027b0c:	push   0x64032c00
64027b11:	push   ebx
64027b12:	push   0x64032bf8
64027b17:	mov    ds:0x64047d6c,eax
64027b1c:	mov    DWORD PTR ds:0x64047d70,ebx
64027b22:	call   0x64002e90
64027b27:	push   0x64032bd0
64027b2c:	push   esi
64027b2d:	push   0x64032bc8
64027b32:	mov    ds:0x64047d74,eax
64027b37:	mov    DWORD PTR ds:0x64047d78,esi
64027b3d:	call   0x64002e90
64027b42:	add    esp,0x48
64027b45:	push   0x64032b88
64027b4a:	push   esi
64027b4b:	push   0x64032b80
64027b50:	mov    ds:0x64047d7c,eax
64027b55:	mov    DWORD PTR ds:0x64047d80,esi
64027b5b:	call   0x64002e90
64027b60:	push   0x64032b44
64027b65:	push   ebx
64027b66:	push   0x64032b3c
64027b6b:	mov    ds:0x64047d84,eax
64027b70:	mov    DWORD PTR ds:0x64047d88,ebx
64027b76:	call   0x64002e90
64027b7b:	push   0x64032b0c
64027b80:	push   ebx
64027b81:	push   0x64032b04
64027b86:	mov    ds:0x64047d8c,eax
64027b8b:	mov    DWORD PTR ds:0x64047d90,ebx
64027b91:	call   0x64002e90
64027b96:	push   0x64032ad4
64027b9b:	push   esi
64027b9c:	push   0x64032acc
64027ba1:	mov    ds:0x64047d94,eax
64027ba6:	mov    DWORD PTR ds:0x64047d98,esi
64027bac:	call   0x64002e90
64027bb1:	push   0x64032a94
64027bb6:	push   esi
64027bb7:	push   0x64032a8c
64027bbc:	mov    ds:0x64047d9c,eax
64027bc1:	mov    DWORD PTR ds:0x64047da0,esi
64027bc7:	call   0x64002e90
64027bcc:	push   0x64032a64
64027bd1:	push   esi
64027bd2:	push   0x64032a5c
64027bd7:	mov    ds:0x64047da4,eax
64027bdc:	mov    DWORD PTR ds:0x64047da8,esi
64027be2:	call   0x64002e90
64027be7:	add    esp,0x48
64027bea:	push   0x64032a34
64027bef:	push   esi
64027bf0:	push   0x64032a2c
64027bf5:	mov    ds:0x64047dac,eax
64027bfa:	mov    DWORD PTR ds:0x64047db0,esi
64027c00:	call   0x64002e90
64027c05:	push   0x640329ec
64027c0a:	push   edi
64027c0b:	push   0x640329e4
64027c10:	mov    ds:0x64047db4,eax
64027c15:	mov    DWORD PTR ds:0x64047db8,edi
64027c1b:	call   0x64002e90
64027c20:	push   0x640329c0
64027c25:	push   edi
64027c26:	push   0x640329b8
64027c2b:	mov    ds:0x64047dbc,eax
64027c30:	mov    DWORD PTR ds:0x64047dc0,edi
64027c36:	call   0x64002e90
64027c3b:	push   0x64032978
64027c40:	push   0x4
64027c42:	push   0x6403296c
64027c47:	mov    ds:0x64047dc4,eax
64027c4c:	mov    DWORD PTR ds:0x64047dc8,0x4
64027c56:	call   0x64002e90
64027c5b:	mov    ds:0x64047dcc,eax
64027c60:	mov    DWORD PTR ds:0x64047dd0,0x4
64027c6a:	push   0x6403292c
64027c6f:	push   0x4
64027c71:	push   0x64032924
64027c76:	call   0x64002e90
64027c7b:	push   0x640328ec
64027c80:	push   ebx
64027c81:	push   0x640328e4
64027c86:	mov    ds:0x64047dd4,eax
64027c8b:	mov    DWORD PTR ds:0x64047dd8,ebx
64027c91:	call   0x64002e90
64027c96:	add    esp,0x48
64027c99:	push   0x640328c0
64027c9e:	push   ebx
64027c9f:	push   0x640328b8
64027ca4:	mov    ds:0x64047ddc,eax
64027ca9:	mov    DWORD PTR ds:0x64047de0,ebx
64027caf:	call   0x64002e90
64027cb4:	push   0x64032888
64027cb9:	push   ebx
64027cba:	push   0x64032880
64027cbf:	mov    ds:0x64047de4,eax
64027cc4:	mov    DWORD PTR ds:0x64047de8,ebx
64027cca:	call   0x64002e90
64027ccf:	push   0x64032840
64027cd4:	push   ebx
64027cd5:	push   0x64032838
64027cda:	mov    ds:0x64047dec,eax
64027cdf:	mov    DWORD PTR ds:0x64047df0,ebx
64027ce5:	call   0x64002e90
64027cea:	push   0x6403280c
64027cef:	push   esi
64027cf0:	push   0x64032804
64027cf5:	mov    ds:0x64047df4,eax
64027cfa:	mov    DWORD PTR ds:0x64047df8,esi
64027d00:	call   0x64002e90
64027d05:	push   0x640327d4
64027d0a:	push   esi
64027d0b:	push   0x640327cc
64027d10:	mov    ds:0x64047dfc,eax
64027d15:	mov    DWORD PTR ds:0x64047e00,esi
64027d1b:	call   0x64002e90
64027d20:	push   0x64032798
64027d25:	push   ebx
64027d26:	push   0x64032790
64027d2b:	mov    ds:0x64047e04,eax
64027d30:	mov    DWORD PTR ds:0x64047e08,ebx
64027d36:	call   0x64002e90
64027d3b:	add    esp,0x48
64027d3e:	push   0x64032750
64027d43:	push   ebx
64027d44:	push   0x64032748
64027d49:	mov    ds:0x64047e0c,eax
64027d4e:	mov    DWORD PTR ds:0x64047e10,ebx
64027d54:	call   0x64002e90
64027d59:	push   0x64032718
64027d5e:	push   ebx
64027d5f:	push   0x64032710
64027d64:	mov    ds:0x64047e14,eax
64027d69:	mov    DWORD PTR ds:0x64047e18,ebx
64027d6f:	call   0x64002e90
64027d74:	push   0x640326d4
64027d79:	push   ebx
64027d7a:	push   0x640326cc
64027d7f:	mov    ds:0x64047e1c,eax
64027d84:	mov    DWORD PTR ds:0x64047e20,ebx
64027d8a:	call   0x64002e90
64027d8f:	push   0x6403269c
64027d94:	push   esi
64027d95:	push   0x64032694
64027d9a:	mov    ds:0x64047e24,eax
64027d9f:	mov    DWORD PTR ds:0x64047e28,esi
64027da5:	call   0x64002e90
64027daa:	push   0x6403265c
64027daf:	push   esi
64027db0:	push   0x64032654
64027db5:	mov    ds:0x64047e2c,eax
64027dba:	mov    DWORD PTR ds:0x64047e30,esi
64027dc0:	call   0x64002e90
64027dc5:	mov    ds:0x64047e34,eax
64027dca:	mov    DWORD PTR ds:0x64047e38,esi
64027dd0:	push   0x64032630
64027dd5:	push   esi
64027dd6:	push   0x64032628
64027ddb:	call   0x64002e90
64027de0:	add    esp,0x48
64027de3:	push   0x64032604
64027de8:	push   esi
64027de9:	push   0x640325fc
64027dee:	mov    ds:0x64047e3c,eax
64027df3:	mov    DWORD PTR ds:0x64047e40,esi
64027df9:	call   0x64002e90
64027dfe:	push   0x640325d4
64027e03:	push   ebx
64027e04:	push   0x640325cc
64027e09:	mov    ds:0x64047e44,eax
64027e0e:	mov    DWORD PTR ds:0x64047e48,ebx
64027e14:	call   0x64002e90
64027e19:	push   0x64032598
64027e1e:	push   ebx
64027e1f:	push   0x64032590
64027e24:	mov    ds:0x64047e4c,eax
64027e29:	mov    DWORD PTR ds:0x64047e50,ebx
64027e2f:	call   0x64002e90
64027e34:	push   0x64032568
64027e39:	push   ebx
64027e3a:	push   0x64032560
64027e3f:	mov    ds:0x64047e54,eax
64027e44:	mov    DWORD PTR ds:0x64047e58,ebx
64027e4a:	call   0x64002e90
64027e4f:	push   0x64032524
64027e54:	push   ebx
64027e55:	push   0x6403251c
64027e5a:	mov    ds:0x64047e5c,eax
64027e5f:	mov    DWORD PTR ds:0x64047e60,ebx
64027e65:	call   0x64002e90
64027e6a:	push   0x640324e8
64027e6f:	push   esi
64027e70:	push   0x640324e0
64027e75:	mov    ds:0x64047e64,eax
64027e7a:	mov    DWORD PTR ds:0x64047e68,esi
64027e80:	call   0x64002e90
64027e85:	add    esp,0x48
64027e88:	push   0x640324b8
64027e8d:	push   esi
64027e8e:	push   0x640324b0
64027e93:	mov    ds:0x64047e6c,eax
64027e98:	mov    DWORD PTR ds:0x64047e70,esi
64027e9e:	call   0x64002e90
64027ea3:	push   0x6403247c
64027ea8:	push   esi
64027ea9:	push   0x64032474
64027eae:	mov    ds:0x64047e74,eax
64027eb3:	mov    DWORD PTR ds:0x64047e78,esi
64027eb9:	call   0x64002e90
64027ebe:	push   0x64032448
64027ec3:	push   esi
64027ec4:	push   0x64032440
64027ec9:	mov    ds:0x64047e7c,eax
64027ece:	mov    DWORD PTR ds:0x64047e80,esi
64027ed4:	call   0x64002e90
64027ed9:	push   0x64032414
64027ede:	push   ebp
64027edf:	push   0x64032408
64027ee4:	mov    ds:0x64047e84,eax
64027ee9:	mov    DWORD PTR ds:0x64047e88,ebp
64027eef:	call   0x64002e90
64027ef4:	push   0x640323dc
64027ef9:	push   ebp
64027efa:	push   0x640323d0
64027eff:	mov    ds:0x64047e8c,eax
64027f04:	mov    DWORD PTR ds:0x64047e90,ebp
64027f0a:	call   0x64002e90
64027f0f:	push   0x640323a8
64027f14:	push   ebp
64027f15:	push   0x6403239c
64027f1a:	mov    ds:0x64047e94,eax
64027f1f:	mov    DWORD PTR ds:0x64047e98,ebp
64027f25:	call   0x64002e90
64027f2a:	add    esp,0x48
64027f2d:	mov    ds:0x64047e9c,eax
64027f32:	mov    DWORD PTR ds:0x64047ea0,ebp
64027f38:	push   0x6403236c
64027f3d:	push   ebp
64027f3e:	push   0x64032360
64027f43:	call   0x64002e90
64027f48:	push   0x64032320
64027f4d:	push   0x9
64027f4f:	push   0x64032314
64027f54:	mov    ds:0x64047ea4,eax
64027f59:	mov    DWORD PTR ds:0x64047ea8,0x9
64027f63:	call   0x64002e90
64027f68:	push   0x640322dc
64027f6d:	push   0x9
64027f6f:	push   0x640322d0
64027f74:	mov    ds:0x64047eac,eax
64027f79:	mov    DWORD PTR ds:0x64047eb0,0x9
64027f83:	call   0x64002e90
64027f88:	push   0x640322a4
64027f8d:	push   0x9
64027f8f:	push   0x64032298
64027f94:	mov    ds:0x64047eb4,eax
64027f99:	mov    DWORD PTR ds:0x64047eb8,0x9
64027fa3:	call   0x64002e90
64027fa8:	push   0x6403226c
64027fad:	push   0x9
64027faf:	push   0x64032260
64027fb4:	mov    ds:0x64047ebc,eax
64027fb9:	mov    DWORD PTR ds:0x64047ec0,0x9
64027fc3:	call   0x64002e90
64027fc8:	push   0x64032228
64027fcd:	push   ebp
64027fce:	push   0x6403221c
64027fd3:	mov    ds:0x64047ec4,eax
64027fd8:	mov    DWORD PTR ds:0x64047ec8,ebp
64027fde:	call   0x64002e90
64027fe3:	add    esp,0x48
64027fe6:	push   0x640321ec
64027feb:	push   ebp
64027fec:	push   0x640321e0
64027ff1:	mov    ds:0x64047ecc,eax
64027ff6:	mov    DWORD PTR ds:0x64047ed0,ebp
64027ffc:	call   0x64002e90
64028001:	push   0x640321a8
64028006:	push   0x9
64028008:	push   0x6403219c
6402800d:	mov    ds:0x64047ed4,eax
64028012:	mov    DWORD PTR ds:0x64047ed8,0x9
6402801c:	call   0x64002e90
64028021:	push   0x64032170
64028026:	push   0x9
64028028:	push   0x64032164
6402802d:	mov    ds:0x64047edc,eax
64028032:	mov    DWORD PTR ds:0x64047ee0,0x9
6402803c:	call   0x64002e90
64028041:	push   0x64032130
64028046:	push   0x9
64028048:	push   0x64032124
6402804d:	mov    ds:0x64047ee4,eax
64028052:	mov    DWORD PTR ds:0x64047ee8,0x9
6402805c:	call   0x64002e90
64028061:	push   0x640320fc
64028066:	push   0xa
64028068:	push   0x640320f0
6402806d:	mov    ds:0x64047eec,eax
64028072:	mov    DWORD PTR ds:0x64047ef0,0xa
6402807c:	call   0x64002e90
64028081:	push   0x640320b4
64028086:	push   ebx
64028087:	push   0x640320ac
6402808c:	mov    ds:0x64047ef4,eax
64028091:	mov    DWORD PTR ds:0x64047ef8,ebx
64028097:	call   0x64002e90
6402809c:	add    esp,0x48
6402809f:	push   0x64032074
640280a4:	push   ebx
640280a5:	push   0x6403206c
640280aa:	mov    ds:0x64047efc,eax
640280af:	mov    DWORD PTR ds:0x64047f00,ebx
640280b5:	call   0x64002e90
640280ba:	push   0x64032044
640280bf:	mov    ds:0x64047f04,eax
640280c4:	mov    DWORD PTR ds:0x64047f08,ebx
640280ca:	push   ebx
640280cb:	push   0x6403203c
640280d0:	call   0x64002e90
640280d5:	push   0x64032000
640280da:	push   ebx
640280db:	push   0x64031ff8
640280e0:	mov    ds:0x64047f0c,eax
640280e5:	mov    DWORD PTR ds:0x64047f10,ebx
640280eb:	call   0x64002e90
640280f0:	push   0x64031fd0
640280f5:	push   esi
640280f6:	push   0x64031fc8
640280fb:	mov    ds:0x64047f14,eax
64028100:	mov    DWORD PTR ds:0x64047f18,esi
64028106:	call   0x64002e90
6402810b:	push   0x64031f9c
64028110:	push   esi
64028111:	push   0x64031f94
64028116:	mov    ds:0x64047f1c,eax
6402811b:	mov    DWORD PTR ds:0x64047f20,esi
64028121:	call   0x64002e90
64028126:	push   0x64031f60
6402812b:	push   esi
6402812c:	push   0x64031f58
64028131:	mov    ds:0x64047f24,eax
64028136:	mov    DWORD PTR ds:0x64047f28,esi
6402813c:	call   0x64002e90
64028141:	add    esp,0x48
64028144:	push   0x64031f24
64028149:	push   esi
6402814a:	push   0x64031f1c
6402814f:	mov    ds:0x64047f2c,eax
64028154:	mov    DWORD PTR ds:0x64047f30,esi
6402815a:	call   0x64002e90
6402815f:	push   0x64031ee8
64028164:	push   ebx
64028165:	push   0x64031ee0
6402816a:	mov    ds:0x64047f34,eax
6402816f:	mov    DWORD PTR ds:0x64047f38,ebx
64028175:	call   0x64002e90
6402817a:	push   0x64031eac
6402817f:	push   ebx
64028180:	push   0x64031ea4
64028185:	mov    ds:0x64047f3c,eax
6402818a:	mov    DWORD PTR ds:0x64047f40,ebx
64028190:	call   0x64002e90
64028195:	push   0x64031e6c
6402819a:	push   ebx
6402819b:	push   0x64031e64
640281a0:	mov    ds:0x64047f44,eax
640281a5:	mov    DWORD PTR ds:0x64047f48,ebx
640281ab:	call   0x64002e90
640281b0:	push   0x64031e28
640281b5:	push   ebx
640281b6:	push   0x64031e20
640281bb:	mov    ds:0x64047f4c,eax
640281c0:	mov    DWORD PTR ds:0x64047f50,ebx
640281c6:	call   0x64002e90
640281cb:	push   0x64031de4
640281d0:	push   esi
640281d1:	push   0x64031ddc
640281d6:	mov    ds:0x64047f54,eax
640281db:	mov    DWORD PTR ds:0x64047f58,esi
640281e1:	call   0x64002e90
640281e6:	add    esp,0x48
640281e9:	push   0x64031db8
640281ee:	push   esi
640281ef:	push   0x64031db0
640281f4:	mov    ds:0x64047f5c,eax
640281f9:	mov    DWORD PTR ds:0x64047f60,esi
640281ff:	call   0x64002e90
64028204:	push   0x64031d70
64028209:	push   esi
6402820a:	push   0x64031d68
6402820f:	mov    ds:0x64047f64,eax
64028214:	mov    DWORD PTR ds:0x64047f68,esi
6402821a:	call   0x64002e90
6402821f:	push   0x64031d2c
64028224:	push   esi
64028225:	mov    ds:0x64047f6c,eax
6402822a:	mov    DWORD PTR ds:0x64047f70,esi
64028230:	push   0x64031d24
64028235:	call   0x64002e90
6402823a:	push   0x64031d00
6402823f:	push   ebx
64028240:	push   0x64031cf8
64028245:	mov    ds:0x64047f74,eax
6402824a:	mov    DWORD PTR ds:0x64047f78,ebx
64028250:	call   0x64002e90
64028255:	push   0x64031cd0
6402825a:	push   ebx
6402825b:	push   0x64031cc8
64028260:	mov    ds:0x64047f7c,eax
64028265:	mov    DWORD PTR ds:0x64047f80,ebx
6402826b:	call   0x64002e90
64028270:	push   0x64031ca4
64028275:	push   ebx
64028276:	push   0x64031c9c
6402827b:	mov    ds:0x64047f84,eax
64028280:	mov    DWORD PTR ds:0x64047f88,ebx
64028286:	call   0x64002e90
6402828b:	add    esp,0x48
6402828e:	push   0x64031c78
64028293:	push   ebx
64028294:	push   0x64031c70
64028299:	mov    ds:0x64047f8c,eax
6402829e:	mov    DWORD PTR ds:0x64047f90,ebx
640282a4:	call   0x64002e90
640282a9:	push   0x64031c3c
640282ae:	push   esi
640282af:	push   0x64031c34
640282b4:	mov    ds:0x64047f94,eax
640282b9:	mov    DWORD PTR ds:0x64047f98,esi
640282bf:	call   0x64002e90
640282c4:	push   0x64031c10
640282c9:	push   esi
640282ca:	push   0x64031c08
640282cf:	mov    ds:0x64047f9c,eax
640282d4:	mov    DWORD PTR ds:0x64047fa0,esi
640282da:	call   0x64002e90
640282df:	push   0x64031bd0
640282e4:	push   esi
640282e5:	push   0x64031bc8
640282ea:	mov    ds:0x64047fa4,eax
640282ef:	mov    DWORD PTR ds:0x64047fa8,esi
640282f5:	call   0x64002e90
640282fa:	push   0x64031b94
640282ff:	push   esi
64028300:	push   0x64031b8c
64028305:	mov    ds:0x64047fac,eax
6402830a:	mov    DWORD PTR ds:0x64047fb0,esi
64028310:	call   0x64002e90
64028315:	push   0x64031b64
6402831a:	push   ebx
6402831b:	push   0x64031b5c
64028320:	mov    ds:0x64047fb4,eax
64028325:	mov    DWORD PTR ds:0x64047fb8,ebx
6402832b:	call   0x64002e90
64028330:	add    esp,0x48
64028333:	push   0x64031b20
64028338:	push   ebx
64028339:	push   0x64031b18
6402833e:	mov    ds:0x64047fbc,eax
64028343:	mov    DWORD PTR ds:0x64047fc0,ebx
64028349:	call   0x64002e90
6402834e:	push   0x64031af0
64028353:	push   ebx
64028354:	push   0x64031ae8
64028359:	mov    ds:0x64047fc4,eax
6402835e:	mov    DWORD PTR ds:0x64047fc8,ebx
64028364:	call   0x64002e90
64028369:	push   0x64031aa8
6402836e:	push   ebx
6402836f:	push   0x64031a9c
64028374:	mov    ds:0x64047fcc,eax
64028379:	mov    DWORD PTR ds:0x64047fd0,ebx
6402837f:	call   0x64002e90
64028384:	push   0x64031a6c
64028389:	push   esi
6402838a:	push   0x64031a64
6402838f:	mov    ds:0x64047fd4,eax
64028394:	mov    DWORD PTR ds:0x64047fd8,esi
6402839a:	call   0x64002e90
6402839f:	push   0x64031a30
640283a4:	push   esi
640283a5:	push   0x64031a28
640283aa:	mov    ds:0x64047fdc,eax
640283af:	mov    DWORD PTR ds:0x64047fe0,esi
640283b5:	call   0x64002e90
640283ba:	push   0x64031a04
640283bf:	push   esi
640283c0:	push   0x640319fc
640283c5:	mov    ds:0x64047fe4,eax
640283ca:	mov    DWORD PTR ds:0x64047fe8,esi
640283d0:	call   0x64002e90
640283d5:	add    esp,0x48
640283d8:	push   0x640319bc
640283dd:	push   esi
640283de:	push   0x640319b4
640283e3:	mov    ds:0x64047fec,eax
640283e8:	mov    DWORD PTR ds:0x64047ff0,esi
640283ee:	call   0x64002e90
640283f3:	push   0x64031984
640283f8:	push   0x9
640283fa:	push   0x64031978
640283ff:	mov    ds:0x64047ff4,eax
64028404:	mov    DWORD PTR ds:0x64047ff8,0x9
6402840e:	call   0x64002e90
64028413:	push   0x64031950
64028418:	push   0xa
6402841a:	push   0x64031944
6402841f:	mov    ds:0x64047ffc,eax
64028424:	mov    DWORD PTR ds:0x64048000,0xa
6402842e:	call   0x64002e90
64028433:	push   0x6403190c
64028438:	push   0x9
6402843a:	push   0x64031900
6402843f:	mov    ds:0x64048004,eax
64028444:	mov    DWORD PTR ds:0x64048008,0x9
6402844e:	call   0x64002e90
64028453:	push   0x640318c0
64028458:	push   0xa
6402845a:	push   0x640318b4
6402845f:	mov    ds:0x6404800c,eax
64028464:	mov    DWORD PTR ds:0x64048010,0xa
6402846e:	call   0x64002e90
64028473:	push   0x64031888
64028478:	push   0x9
6402847a:	push   0x6403187c
6402847f:	mov    ds:0x64048014,eax
64028484:	mov    DWORD PTR ds:0x64048018,0x9
6402848e:	call   0x64002e90
64028493:	add    esp,0x48
64028496:	push   0x6403184c
6402849b:	push   0xa
6402849d:	push   0x64031840
640284a2:	mov    ds:0x6404801c,eax
640284a7:	mov    DWORD PTR ds:0x64048020,0xa
640284b1:	call   0x64002e90
640284b6:	push   0x64031804
640284bb:	push   ebp
640284bc:	push   0x640317f8
640284c1:	mov    ds:0x64048024,eax
640284c6:	mov    DWORD PTR ds:0x64048028,ebp
640284cc:	call   0x64002e90
640284d1:	push   0x640317b8
640284d6:	push   0x9
640284d8:	push   0x640317a8
640284dd:	mov    ds:0x6404802c,eax
640284e2:	mov    DWORD PTR ds:0x64048030,0x9
640284ec:	call   0x64002e90
640284f1:	push   0x64031784
640284f6:	push   edi
640284f7:	push   0x6403177c
640284fc:	mov    ds:0x64048034,eax
64028501:	mov    DWORD PTR ds:0x64048038,edi
64028507:	call   0x64002e90
6402850c:	push   0x64031758
64028511:	push   ebp
64028512:	push   0x6403174c
64028517:	mov    ds:0x6404803c,eax
6402851c:	mov    DWORD PTR ds:0x64048040,ebp
64028522:	call   0x64002e90
64028527:	mov    ds:0x64048044,eax
6402852c:	push   0x64031718
64028531:	push   edi
64028532:	push   0x64031710
64028537:	mov    DWORD PTR ds:0x64048048,edi
6402853d:	call   0x64002e90
64028542:	add    esp,0x48
64028545:	push   0x640316e8
6402854a:	push   ebp
6402854b:	push   0x640316dc
64028550:	mov    ds:0x6404804c,eax
64028555:	mov    DWORD PTR ds:0x64048050,ebp
6402855b:	call   0x64002e90
64028560:	push   0x640316a8
64028565:	push   edi
64028566:	push   0x640316a0
6402856b:	mov    ds:0x64048054,eax
64028570:	mov    DWORD PTR ds:0x64048058,edi
64028576:	call   0x64002e90
6402857b:	push   0x64031668
64028580:	push   ebp
64028581:	push   0x6403165c
64028586:	mov    ds:0x6404805c,eax
6402858b:	mov    DWORD PTR ds:0x64048060,ebp
64028591:	call   0x64002e90
64028596:	push   0x6403162c
6402859b:	push   ebp
6402859c:	push   0x64031620
640285a1:	mov    ds:0x64048064,eax
640285a6:	mov    DWORD PTR ds:0x64048068,ebp
640285ac:	call   0x64002e90
640285b1:	push   0x640315fc
640285b6:	push   0x9
640285b8:	push   0x640315f0
640285bd:	mov    ds:0x6404806c,eax
640285c2:	mov    DWORD PTR ds:0x64048070,0x9
640285cc:	call   0x64002e90
640285d1:	push   0x640315b4
640285d6:	push   0x9
640285d8:	push   0x640315a8
640285dd:	mov    ds:0x64048074,eax
640285e2:	mov    DWORD PTR ds:0x64048078,0x9
640285ec:	call   0x64002e90
640285f1:	add    esp,0x48
640285f4:	push   0x64031578
640285f9:	push   0xa
640285fb:	push   0x6403156c
64028600:	mov    ds:0x6404807c,eax
64028605:	mov    DWORD PTR ds:0x64048080,0xa
6402860f:	call   0x64002e90
64028614:	push   0x64031530
64028619:	push   0x9
6402861b:	push   0x64031524
64028620:	mov    ds:0x64048084,eax
64028625:	mov    DWORD PTR ds:0x64048088,0x9
6402862f:	call   0x64002e90
64028634:	push   0x640314fc
64028639:	push   0xa
6402863b:	push   0x640314f0
64028640:	mov    ds:0x6404808c,eax
64028645:	mov    DWORD PTR ds:0x64048090,0xa
6402864f:	call   0x64002e90
64028654:	push   0x640314b8
64028659:	push   0x9
6402865b:	push   0x640314ac
64028660:	mov    ds:0x64048094,eax
64028665:	mov    DWORD PTR ds:0x64048098,0x9
6402866f:	call   0x64002e90
64028674:	push   0x64031488
64028679:	push   0xa
6402867b:	push   0x6403147c
64028680:	mov    ds:0x6404809c,eax
64028685:	mov    DWORD PTR ds:0x640480a0,0xa
6402868f:	call   0x64002e90
64028694:	push   0x6403144c
64028699:	push   ebp
6402869a:	push   0x64031440
6402869f:	mov    ds:0x640480a4,eax
640286a4:	mov    DWORD PTR ds:0x640480a8,ebp
640286aa:	call   0x64002e90
640286af:	add    esp,0x48
640286b2:	mov    ds:0x640480ac,eax
640286b7:	push   0x64031418
640286bc:	push   0x9
640286be:	push   0x6403140c
640286c3:	mov    DWORD PTR ds:0x640480b0,0x9
640286cd:	call   0x64002e90
640286d2:	push   0x640313e8
640286d7:	push   0xa
640286d9:	push   0x640313dc
640286de:	mov    ds:0x640480b4,eax
640286e3:	mov    DWORD PTR ds:0x640480b8,0xa
640286ed:	call   0x64002e90
640286f2:	push   0x640313a0
640286f7:	push   0xb
640286f9:	push   0x64031394
640286fe:	mov    ds:0x640480bc,eax
64028703:	mov    DWORD PTR ds:0x640480c0,0xb
6402870d:	call   0x64002e90
64028712:	push   0x64031364
64028717:	push   0xa
64028719:	push   0x64031358
6402871e:	mov    ds:0x640480c4,eax
64028723:	mov    DWORD PTR ds:0x640480c8,0xa
6402872d:	call   0x64002e90
64028732:	push   0x64031334
64028737:	push   0xb
64028739:	push   0x64031328
6402873e:	mov    ds:0x640480cc,eax
64028743:	mov    DWORD PTR ds:0x640480d0,0xb
6402874d:	call   0x64002e90
64028752:	push   0x640312f8
64028757:	push   0x4
64028759:	push   0x640312f0
6402875e:	mov    ds:0x640480d4,eax
64028763:	mov    DWORD PTR ds:0x640480d8,0x4
6402876d:	call   0x64002e90
64028772:	add    esp,0x48
64028775:	push   0x640312b8
6402877a:	push   0x4
6402877c:	push   0x640312b0
64028781:	mov    ds:0x640480dc,eax
64028786:	mov    DWORD PTR ds:0x640480e0,0x4
64028790:	call   0x64002e90
64028795:	push   0x64031278
6402879a:	push   ebx
6402879b:	push   0x64031270
640287a0:	mov    ds:0x640480e4,eax
640287a5:	mov    DWORD PTR ds:0x640480e8,ebx
640287ab:	call   0x64002e90
640287b0:	push   0x6403124c
640287b5:	push   ebx
640287b6:	push   0x64031244
640287bb:	mov    ds:0x640480ec,eax
640287c0:	mov    DWORD PTR ds:0x640480f0,ebx
640287c6:	call   0x64002e90
640287cb:	push   0x64031210
640287d0:	push   esi
640287d1:	push   0x64031208
640287d6:	mov    ds:0x640480f4,eax
640287db:	mov    DWORD PTR ds:0x640480f8,esi
640287e1:	call   0x64002e90
640287e6:	push   0x640311cc
640287eb:	push   esi
640287ec:	push   0x640311c4
640287f1:	mov    ds:0x640480fc,eax
640287f6:	mov    DWORD PTR ds:0x64048100,esi
640287fc:	call   0x64002e90
64028801:	push   0x6403118c
64028806:	push   edi
64028807:	push   0x64031184
6402880c:	mov    ds:0x64048104,eax
64028811:	mov    DWORD PTR ds:0x64048108,edi
64028817:	call   0x64002e90
6402881c:	add    esp,0x48
6402881f:	push   0x64031160
64028824:	push   edi
64028825:	push   0x64031158
6402882a:	mov    ds:0x6404810c,eax
6402882f:	mov    DWORD PTR ds:0x64048110,edi
64028835:	call   0x64002e90
6402883a:	mov    ds:0x64048114,eax
6402883f:	mov    DWORD PTR ds:0x64048118,esi
64028845:	push   0x64031128
6402884a:	push   esi
6402884b:	push   0x64031120
64028850:	call   0x64002e90
64028855:	push   0x640310fc
6402885a:	push   esi
6402885b:	push   0x640310f4
64028860:	mov    ds:0x6404811c,eax
64028865:	mov    DWORD PTR ds:0x64048120,esi
6402886b:	call   0x64002e90
64028870:	push   0x640310c0
64028875:	push   edi
64028876:	push   0x640310b8
6402887b:	mov    ds:0x64048124,eax
64028880:	mov    DWORD PTR ds:0x64048128,edi
64028886:	call   0x64002e90
6402888b:	push   0x64031088
64028890:	push   edi
64028891:	push   0x64031080
64028896:	mov    ds:0x6404812c,eax
6402889b:	mov    DWORD PTR ds:0x64048130,edi
640288a1:	call   0x64002e90
640288a6:	push   0x64031048
640288ab:	push   edi
640288ac:	push   0x64031040
640288b1:	mov    ds:0x64048134,eax
640288b6:	mov    DWORD PTR ds:0x64048138,edi
640288bc:	call   0x64002e90
640288c1:	add    esp,0x48
640288c4:	push   0x64031004
640288c9:	push   ebp
640288ca:	push   0x64030ff8
640288cf:	mov    ds:0x6404813c,eax
640288d4:	mov    DWORD PTR ds:0x64048140,ebp
640288da:	call   0x64002e90
640288df:	push   0x64030fd4
640288e4:	push   ebp
640288e5:	push   0x64030fc8
640288ea:	mov    ds:0x64048144,eax
640288ef:	mov    DWORD PTR ds:0x64048148,ebp
640288f5:	call   0x64002e90
640288fa:	push   0x64030f88
640288ff:	push   ebx
64028900:	push   0x64030f80
64028905:	mov    ds:0x6404814c,eax
6402890a:	mov    DWORD PTR ds:0x64048150,ebx
64028910:	call   0x64002e90
64028915:	push   0x64030f54
6402891a:	push   esi
6402891b:	push   0x64030f4c
64028920:	mov    ds:0x64048154,eax
64028925:	mov    DWORD PTR ds:0x64048158,esi
6402892b:	call   0x64002e90
64028930:	push   0x64030f14
64028935:	push   ebx
64028936:	push   0x64030f0c
6402893b:	mov    ds:0x6404815c,eax
64028940:	mov    DWORD PTR ds:0x64048160,ebx
64028946:	call   0x64002e90
6402894b:	push   0x64030ed8
64028950:	push   esi
64028951:	push   0x64030ed0
64028956:	mov    ds:0x64048164,eax
6402895b:	mov    DWORD PTR ds:0x64048168,esi
64028961:	call   0x64002e90
64028966:	add    esp,0x48
64028969:	push   0x64030ea8
6402896e:	push   ebx
6402896f:	push   0x64030ea0
64028974:	mov    ds:0x6404816c,eax
64028979:	mov    DWORD PTR ds:0x64048170,ebx
6402897f:	call   0x64002e90
64028984:	push   0x64030e6c
64028989:	push   esi
6402898a:	push   0x64030e64
6402898f:	mov    ds:0x64048174,eax
64028994:	mov    DWORD PTR ds:0x64048178,esi
6402899a:	call   0x64002e90
6402899f:	mov    ds:0x6404817c,eax
640289a4:	mov    DWORD PTR ds:0x64048180,ebx
640289aa:	push   0x64030e38
640289af:	push   ebx
640289b0:	push   0x64030e30
640289b5:	call   0x64002e90
640289ba:	push   0x64030df8
640289bf:	push   esi
640289c0:	push   0x64030df0
640289c5:	mov    ds:0x64048184,eax
640289ca:	mov    DWORD PTR ds:0x64048188,esi
640289d0:	call   0x64002e90
640289d5:	push   0x64030db4
640289da:	push   ebx
640289db:	push   0x64030dac
640289e0:	mov    ds:0x6404818c,eax
640289e5:	mov    DWORD PTR ds:0x64048190,ebx
640289eb:	call   0x64002e90
640289f0:	push   0x64030d74
640289f5:	push   esi
640289f6:	push   0x64030d6c
640289fb:	mov    ds:0x64048194,eax
64028a00:	mov    DWORD PTR ds:0x64048198,esi
64028a06:	call   0x64002e90
64028a0b:	add    esp,0x48
64028a0e:	push   0x64030d44
64028a13:	push   ebx
64028a14:	push   0x64030d3c
64028a19:	mov    ds:0x6404819c,eax
64028a1e:	mov    DWORD PTR ds:0x640481a0,ebx
64028a24:	call   0x64002e90
64028a29:	push   0x64030d18
64028a2e:	push   esi
64028a2f:	push   0x64030d10
64028a34:	mov    ds:0x640481a4,eax
64028a39:	mov    DWORD PTR ds:0x640481a8,esi
64028a3f:	call   0x64002e90
64028a44:	push   0x64030cd4
64028a49:	push   ebx
64028a4a:	push   0x64030ccc
64028a4f:	mov    ds:0x640481ac,eax
64028a54:	mov    DWORD PTR ds:0x640481b0,ebx
64028a5a:	call   0x64002e90
64028a5f:	push   0x64030c98
64028a64:	push   esi
64028a65:	push   0x64030c90
64028a6a:	mov    ds:0x640481b4,eax
64028a6f:	mov    DWORD PTR ds:0x640481b8,esi
64028a75:	call   0x64002e90
64028a7a:	push   0x64030c54
64028a7f:	push   esi
64028a80:	push   0x64030c4c
64028a85:	mov    ds:0x640481bc,eax
64028a8a:	mov    DWORD PTR ds:0x640481c0,esi
64028a90:	call   0x64002e90
64028a95:	push   0x64030c14
64028a9a:	push   edi
64028a9b:	push   0x64030c0c
64028aa0:	mov    ds:0x640481c4,eax
64028aa5:	mov    DWORD PTR ds:0x640481c8,edi
64028aab:	call   0x64002e90
64028ab0:	add    esp,0x48
64028ab3:	push   0x64030bdc
64028ab8:	push   ebx
64028ab9:	push   0x64030bd4
64028abe:	mov    ds:0x640481cc,eax
64028ac3:	mov    DWORD PTR ds:0x640481d0,ebx
64028ac9:	call   0x64002e90
64028ace:	push   0x64030ba8
64028ad3:	push   esi
64028ad4:	push   0x64030ba0
64028ad9:	mov    ds:0x640481d4,eax
64028ade:	mov    DWORD PTR ds:0x640481d8,esi
64028ae4:	call   0x64002e90
64028ae9:	push   0x64030b6c
64028aee:	push   esi
64028aef:	push   0x64030b64
64028af4:	mov    ds:0x640481dc,eax
64028af9:	mov    DWORD PTR ds:0x640481e0,esi
64028aff:	call   0x64002e90
64028b04:	push   0x64030b30
64028b09:	mov    ds:0x640481e4,eax
64028b0e:	mov    DWORD PTR ds:0x640481e8,edi
64028b14:	push   edi
64028b15:	push   0x64030b28
64028b1a:	call   0x64002e90
64028b1f:	push   0x64030af0
64028b24:	push   edi
64028b25:	push   0x64030ae8
64028b2a:	mov    ds:0x640481ec,eax
64028b2f:	mov    DWORD PTR ds:0x640481f0,edi
64028b35:	call   0x64002e90
64028b3a:	push   0x64030aac
64028b3f:	push   ebp
64028b40:	push   0x64030aa0
64028b45:	mov    ds:0x640481f4,eax
64028b4a:	mov    DWORD PTR ds:0x640481f8,ebp
64028b50:	call   0x64002e90
64028b55:	add    esp,0x48
64028b58:	push   0x64030a64
64028b5d:	push   edi
64028b5e:	push   0x64030a5c
64028b63:	mov    ds:0x640481fc,eax
64028b68:	mov    DWORD PTR ds:0x64048200,edi
64028b6e:	call   0x64002e90
64028b73:	push   0x64030a30
64028b78:	push   ebp
64028b79:	push   0x64030a24
64028b7e:	mov    ds:0x64048204,eax
64028b83:	mov    DWORD PTR ds:0x64048208,ebp
64028b89:	call   0x64002e90
64028b8e:	push   0x640309f4
64028b93:	push   edi
64028b94:	push   0x640309ec
64028b99:	mov    ds:0x6404820c,eax
64028b9e:	mov    DWORD PTR ds:0x64048210,edi
64028ba4:	call   0x64002e90
64028ba9:	push   0x640309c4
64028bae:	push   ebp
64028baf:	push   0x640309b8
64028bb4:	mov    ds:0x64048214,eax
64028bb9:	mov    DWORD PTR ds:0x64048218,ebp
64028bbf:	call   0x64002e90
64028bc4:	push   0x6403097c
64028bc9:	push   0x4
64028bcb:	push   0x64030974
64028bd0:	mov    ds:0x6404821c,eax
64028bd5:	mov    DWORD PTR ds:0x64048220,0x4
64028bdf:	call   0x64002e90
64028be4:	push   0x6403094c
64028be9:	push   0xa
64028beb:	push   0x64030940
64028bf0:	mov    ds:0x64048224,eax
64028bf5:	mov    DWORD PTR ds:0x64048228,0xa
64028bff:	call   0x64002e90
64028c04:	add    esp,0x48
64028c07:	push   0x64030900
64028c0c:	push   ebp
64028c0d:	push   0x640308f4
64028c12:	mov    ds:0x6404822c,eax
64028c17:	mov    DWORD PTR ds:0x64048230,ebp
64028c1d:	call   0x64002e90
64028c22:	push   0x640308d0
64028c27:	push   esi
64028c28:	push   0x640308c8
64028c2d:	mov    ds:0x64048234,eax
64028c32:	mov    DWORD PTR ds:0x64048238,esi
64028c38:	call   0x64002e90
64028c3d:	push   0x6403089c
64028c42:	push   ebx
64028c43:	push   0x64030894
64028c48:	mov    ds:0x6404823c,eax
64028c4d:	mov    DWORD PTR ds:0x64048240,ebx
64028c53:	call   0x64002e90
64028c58:	push   0x64030858
64028c5d:	push   edi
64028c5e:	push   0x64030850
64028c63:	mov    ds:0x64048244,eax
64028c68:	mov    DWORD PTR ds:0x64048248,edi
64028c6e:	call   0x64002e90
64028c73:	push   0x64030814
64028c78:	push   edi
64028c79:	mov    ds:0x6404824c,eax
64028c7e:	mov    DWORD PTR ds:0x64048250,edi
64028c84:	push   0x6403080c
64028c89:	call   0x64002e90
64028c8e:	push   0x640307e0
64028c93:	push   esi
64028c94:	push   0x640307d8
64028c99:	mov    ds:0x64048254,eax
64028c9e:	mov    DWORD PTR ds:0x64048258,esi
64028ca4:	call   0x64002e90
64028ca9:	add    esp,0x48
64028cac:	push   0x640307b4
64028cb1:	push   esi
64028cb2:	push   0x640307ac
64028cb7:	mov    ds:0x6404825c,eax
64028cbc:	mov    DWORD PTR ds:0x64048260,esi
64028cc2:	call   0x64002e90
64028cc7:	push   0x64030780
64028ccc:	push   edi
64028ccd:	push   0x64030778
64028cd2:	mov    ds:0x64048264,eax
64028cd7:	mov    DWORD PTR ds:0x64048268,edi
64028cdd:	call   0x64002e90
64028ce2:	push   0x64030754
64028ce7:	push   edi
64028ce8:	push   0x6403074c
64028ced:	mov    ds:0x6404826c,eax
64028cf2:	mov    DWORD PTR ds:0x64048270,edi
64028cf8:	call   0x64002e90
64028cfd:	push   0x6403071c
64028d02:	push   esi
64028d03:	push   0x64030714
64028d08:	mov    ds:0x64048274,eax
64028d0d:	mov    DWORD PTR ds:0x64048278,esi
64028d13:	call   0x64002e90
64028d18:	push   0x640306e0
64028d1d:	push   esi
64028d1e:	push   0x640306d8
64028d23:	mov    ds:0x6404827c,eax
64028d28:	mov    DWORD PTR ds:0x64048280,esi
64028d2e:	call   0x64002e90
64028d33:	push   0x640306b0
64028d38:	push   edi
64028d39:	push   0x640306a8
64028d3e:	mov    ds:0x64048284,eax
64028d43:	mov    DWORD PTR ds:0x64048288,edi
64028d49:	call   0x64002e90
64028d4e:	add    esp,0x48
64028d51:	push   0x6403067c
64028d56:	push   edi
64028d57:	push   0x64030674
64028d5c:	mov    ds:0x6404828c,eax
64028d61:	mov    DWORD PTR ds:0x64048290,edi
64028d67:	call   0x64002e90
64028d6c:	push   0x64030634
64028d71:	push   esi
64028d72:	push   0x6403062c
64028d77:	mov    ds:0x64048294,eax
64028d7c:	mov    DWORD PTR ds:0x64048298,esi
64028d82:	call   0x64002e90
64028d87:	push   0x64030604
64028d8c:	push   edi
64028d8d:	push   0x640305fc
64028d92:	mov    ds:0x6404829c,eax
64028d97:	mov    DWORD PTR ds:0x640482a0,edi
64028d9d:	call   0x64002e90
64028da2:	push   0x640305d0
64028da7:	push   0x4
64028da9:	push   0x640305c8
64028dae:	mov    ds:0x640482a4,eax
64028db3:	mov    DWORD PTR ds:0x640482a8,0x4
64028dbd:	call   0x64002e90
64028dc2:	push   0x6403059c
64028dc7:	push   esi
64028dc8:	push   0x64030594
64028dcd:	mov    ds:0x640482ac,eax
64028dd2:	mov    DWORD PTR ds:0x640482b0,esi
64028dd8:	call   0x64002e90
64028ddd:	push   0x64030558
64028de2:	push   esi
64028de3:	push   0x64030550
64028de8:	mov    ds:0x640482b4,eax
64028ded:	mov    DWORD PTR ds:0x640482b8,esi
64028df3:	call   0x64002e90
64028df8:	add    esp,0x48
64028dfb:	push   0x64030528
64028e00:	push   esi
64028e01:	push   0x64030520
64028e06:	mov    ds:0x640482bc,eax
64028e0b:	mov    DWORD PTR ds:0x640482c0,esi
64028e11:	call   0x64002e90
64028e16:	push   0x640304f0
64028e1b:	push   esi
64028e1c:	push   0x640304e8
64028e21:	mov    ds:0x640482c4,eax
64028e26:	mov    DWORD PTR ds:0x640482c8,esi
64028e2c:	call   0x64002e90
64028e31:	push   0x640304b0
64028e36:	push   edi
64028e37:	push   0x640304a8
64028e3c:	mov    ds:0x640482cc,eax
64028e41:	mov    DWORD PTR ds:0x640482d0,edi
64028e47:	call   0x64002e90
64028e4c:	push   0x6403047c
64028e51:	push   edi
64028e52:	push   0x64030474
64028e57:	mov    ds:0x640482d4,eax
64028e5c:	mov    DWORD PTR ds:0x640482d8,edi
64028e62:	call   0x64002e90
64028e67:	push   0x64030444
64028e6c:	push   ebp
64028e6d:	push   0x64030438
64028e72:	mov    ds:0x640482dc,eax
64028e77:	mov    DWORD PTR ds:0x640482e0,ebp
64028e7d:	call   0x64002e90
64028e82:	push   0x640303fc
64028e87:	push   edi
64028e88:	push   0x640303f4
64028e8d:	mov    ds:0x640482e4,eax
64028e92:	mov    DWORD PTR ds:0x640482e8,edi
64028e98:	call   0x64002e90
64028e9d:	add    esp,0x48
64028ea0:	push   0x640303b4
64028ea5:	push   ebp
64028ea6:	push   0x640303a8
64028eab:	mov    ds:0x640482ec,eax
64028eb0:	mov    DWORD PTR ds:0x640482f0,ebp
64028eb6:	call   0x64002e90
64028ebb:	push   0x64030378
64028ec0:	push   esi
64028ec1:	push   0x64030370
64028ec6:	mov    ds:0x640482f4,eax
64028ecb:	mov    DWORD PTR ds:0x640482f8,esi
64028ed1:	call   0x64002e90
64028ed6:	push   0x64030330
64028edb:	push   0x3
64028edd:	push   0x6403032c
64028ee2:	mov    ds:0x640482fc,eax
64028ee7:	mov    DWORD PTR ds:0x64048300,0x3
64028ef1:	call   0x64002e90
64028ef6:	push   0x64030300
64028efb:	push   ebx
64028efc:	push   0x640302f8
64028f01:	mov    ds:0x64048304,eax
64028f06:	mov    DWORD PTR ds:0x64048308,ebx
64028f0c:	call   0x64002e90
64028f11:	push   0x640302c0
64028f16:	push   edi
64028f17:	push   0x640302b8
64028f1c:	mov    ds:0x6404830c,eax
64028f21:	mov    DWORD PTR ds:0x64048310,edi
64028f27:	call   0x64002e90
64028f2c:	push   0x64030288
64028f31:	push   edi
64028f32:	push   0x64030280
64028f37:	mov    ds:0x64048314,eax
64028f3c:	mov    DWORD PTR ds:0x64048318,edi
64028f42:	call   0x64002e90
64028f47:	add    esp,0x48
64028f4a:	push   0x64030258
64028f4f:	push   edi
64028f50:	push   0x64030250
64028f55:	mov    ds:0x6404831c,eax
64028f5a:	mov    DWORD PTR ds:0x64048320,edi
64028f60:	call   0x64002e90
64028f65:	push   0x64030214
64028f6a:	push   0xa
64028f6c:	push   0x64030208
64028f71:	mov    ds:0x64048324,eax
64028f76:	mov    DWORD PTR ds:0x64048328,0xa
64028f80:	call   0x64002e90
64028f85:	push   0x640301d4
64028f8a:	push   ebp
64028f8b:	push   0x640301c8
64028f90:	mov    ds:0x6404832c,eax
64028f95:	mov    DWORD PTR ds:0x64048330,ebp
64028f9b:	call   0x64002e90
64028fa0:	push   0x640301a0
64028fa5:	push   ebp
64028fa6:	push   0x64030194
64028fab:	mov    ds:0x64048334,eax
64028fb0:	mov    DWORD PTR ds:0x64048338,ebp
64028fb6:	call   0x64002e90
64028fbb:	push   0x64030168
64028fc0:	push   ebp
64028fc1:	push   0x6403015c
64028fc6:	mov    ds:0x6404833c,eax
64028fcb:	mov    DWORD PTR ds:0x64048340,ebp
64028fd1:	call   0x64002e90
64028fd6:	push   0x64030134
64028fdb:	push   ebp
64028fdc:	push   0x64030128
64028fe1:	mov    ds:0x64048344,eax
64028fe6:	mov    DWORD PTR ds:0x64048348,ebp
64028fec:	call   0x64002e90
64028ff1:	add    esp,0x48
64028ff4:	push   0x640300f8
64028ff9:	push   edi
64028ffa:	push   0x640300f0
64028fff:	mov    ds:0x6404834c,eax
64029004:	mov    DWORD PTR ds:0x64048350,edi
6402900a:	call   0x64002e90
6402900f:	push   0x640300bc
64029014:	push   edi
64029015:	push   0x640300b4
6402901a:	mov    ds:0x64048354,eax
6402901f:	mov    DWORD PTR ds:0x64048358,edi
64029025:	call   0x64002e90
6402902a:	push   0x64030080
6402902f:	push   edi
64029030:	push   0x64030078
64029035:	mov    ds:0x6404835c,eax
6402903a:	mov    DWORD PTR ds:0x64048360,edi
64029040:	call   0x64002e90
64029045:	push   0x6403004c
6402904a:	push   0xa
6402904c:	push   0x64030040
64029051:	mov    ds:0x64048364,eax
64029056:	mov    DWORD PTR ds:0x64048368,0xa
64029060:	call   0x64002e90
64029065:	push   0x64030004
6402906a:	push   ebp
6402906b:	push   0x6402fff8
64029070:	mov    ds:0x6404836c,eax
64029075:	mov    DWORD PTR ds:0x64048370,ebp
6402907b:	call   0x64002e90
64029080:	push   0x6402ffd4
64029085:	push   ebp
64029086:	push   0x6402ffc8
6402908b:	mov    ds:0x64048374,eax
64029090:	mov    DWORD PTR ds:0x64048378,ebp
64029096:	call   0x64002e90
6402909b:	add    esp,0x48
6402909e:	push   0x6402ff9c
640290a3:	push   ebp
640290a4:	push   0x6402ff90
640290a9:	mov    ds:0x6404837c,eax
640290ae:	mov    DWORD PTR ds:0x64048380,ebp
640290b4:	call   0x64002e90
640290b9:	push   0x6402ff54
640290be:	push   ebp
640290bf:	push   0x6402ff48
640290c4:	mov    ds:0x64048384,eax
640290c9:	mov    DWORD PTR ds:0x64048388,ebp
640290cf:	call   0x64002e90
640290d4:	mov    ds:0x6404838c,eax
640290d9:	push   0x6402ff18
640290de:	push   edi
640290df:	push   0x6402ff10
640290e4:	mov    DWORD PTR ds:0x64048390,edi
640290ea:	call   0x64002e90
640290ef:	push   0x6402fee0
640290f4:	push   edi
640290f5:	push   0x6402fed8
640290fa:	mov    ds:0x64048394,eax
640290ff:	mov    DWORD PTR ds:0x64048398,edi
64029105:	call   0x64002e90
6402910a:	push   0x6402fea8
6402910f:	push   edi
64029110:	push   0x6402fea0
64029115:	mov    ds:0x6404839c,eax
6402911a:	mov    DWORD PTR ds:0x640483a0,edi
64029120:	call   0x64002e90
64029125:	push   0x6402fe74
6402912a:	push   0xa
6402912c:	push   0x6402fe68
64029131:	mov    ds:0x640483a4,eax
64029136:	mov    DWORD PTR ds:0x640483a8,0xa
64029140:	call   0x64002e90
64029145:	add    esp,0x48
64029148:	push   0x6402fe3c
6402914d:	push   ebp
6402914e:	push   0x6402fe30
64029153:	mov    ds:0x640483ac,eax
64029158:	mov    DWORD PTR ds:0x640483b0,ebp
6402915e:	call   0x64002e90
64029163:	push   0x6402fe08
64029168:	push   ebp
64029169:	push   0x6402fdfc
6402916e:	mov    ds:0x640483b4,eax
64029173:	mov    DWORD PTR ds:0x640483b8,ebp
64029179:	call   0x64002e90
6402917e:	push   0x6402fdcc
64029183:	push   ebp
64029184:	push   0x6402fdc0
64029189:	mov    ds:0x640483bc,eax
6402918e:	mov    DWORD PTR ds:0x640483c0,ebp
64029194:	call   0x64002e90
64029199:	push   0x6402fd94
6402919e:	push   ebp
6402919f:	push   0x6402fd88
640291a4:	mov    ds:0x640483c4,eax
640291a9:	mov    DWORD PTR ds:0x640483c8,ebp
640291af:	call   0x64002e90
640291b4:	push   0x6402fd54
640291b9:	push   edi
640291ba:	push   0x6402fd4c
640291bf:	mov    ds:0x640483cc,eax
640291c4:	mov    DWORD PTR ds:0x640483d0,edi
640291ca:	call   0x64002e90
640291cf:	push   0x6402fd10
640291d4:	push   edi
640291d5:	push   0x6402fd08
640291da:	mov    ds:0x640483d4,eax
640291df:	mov    DWORD PTR ds:0x640483d8,edi
640291e5:	call   0x64002e90
640291ea:	add    esp,0x48
640291ed:	push   0x6402fccc
640291f2:	push   edi
640291f3:	push   0x6402fcc4
640291f8:	mov    ds:0x640483dc,eax
640291fd:	mov    DWORD PTR ds:0x640483e0,edi
64029203:	call   0x64002e90
64029208:	push   0x6402fc8c
6402920d:	push   0xa
6402920f:	push   0x6402fc80
64029214:	mov    ds:0x640483e4,eax
64029219:	mov    DWORD PTR ds:0x640483e8,0xa
64029223:	call   0x64002e90
64029228:	push   0x6402fc50
6402922d:	push   ebp
6402922e:	push   0x6402fc44
64029233:	mov    ds:0x640483ec,eax
64029238:	mov    DWORD PTR ds:0x640483f0,ebp
6402923e:	call   0x64002e90
64029243:	mov    ds:0x640483f4,eax
64029248:	mov    DWORD PTR ds:0x640483f8,ebp
6402924e:	push   0x6402fc0c
64029253:	push   ebp
64029254:	push   0x6402fc00
64029259:	call   0x64002e90
6402925e:	push   0x6402fbc4
64029263:	push   ebp
64029264:	push   0x6402fbb8
64029269:	mov    ds:0x640483fc,eax
6402926e:	mov    DWORD PTR ds:0x64048400,ebp
64029274:	call   0x64002e90
64029279:	push   0x6402fb7c
6402927e:	push   ebp
6402927f:	push   0x6402fb70
64029284:	mov    ds:0x64048404,eax
64029289:	mov    DWORD PTR ds:0x64048408,ebp
6402928f:	call   0x64002e90
64029294:	add    esp,0x48
64029297:	push   0x6402fb34
6402929c:	push   ebp
6402929d:	push   0x6402fb28
640292a2:	mov    ds:0x6404840c,eax
640292a7:	mov    DWORD PTR ds:0x64048410,ebp
640292ad:	call   0x64002e90
640292b2:	push   0x6402fb00
640292b7:	push   ebp
640292b8:	push   0x6402faf4
640292bd:	mov    ds:0x64048414,eax
640292c2:	mov    DWORD PTR ds:0x64048418,ebp
640292c8:	call   0x64002e90
640292cd:	push   0x6402fac0
640292d2:	push   ebp
640292d3:	push   0x6402fab4
640292d8:	mov    ds:0x6404841c,eax
640292dd:	mov    DWORD PTR ds:0x64048420,ebp
640292e3:	call   0x64002e90
640292e8:	push   0x6402fa78
640292ed:	push   0xb
640292ef:	push   0x6402fa6c
640292f4:	mov    ds:0x64048424,eax
640292f9:	mov    DWORD PTR ds:0x64048428,0xb
64029303:	call   0x64002e90
64029308:	push   0x6402fa48
6402930d:	push   0x9
6402930f:	push   0x6402fa3c
64029314:	mov    ds:0x6404842c,eax
64029319:	mov    DWORD PTR ds:0x64048430,0x9
64029323:	call   0x64002e90
64029328:	push   0x6402fa10
6402932d:	push   0x9
6402932f:	push   0x6402fa04
64029334:	mov    ds:0x64048434,eax
64029339:	mov    DWORD PTR ds:0x64048438,0x9
64029343:	call   0x64002e90
64029348:	add    esp,0x48
6402934b:	push   0x6402f9d4
64029350:	push   0x9
64029352:	push   0x6402f9c8
64029357:	mov    ds:0x6404843c,eax
6402935c:	mov    DWORD PTR ds:0x64048440,0x9
64029366:	call   0x64002e90
6402936b:	push   0x6402f98c
64029370:	push   0x9
64029372:	push   0x6402f980
64029377:	mov    ds:0x64048444,eax
6402937c:	mov    DWORD PTR ds:0x64048448,0x9
64029386:	call   0x64002e90
6402938b:	push   0x6402f944
64029390:	push   ebp
64029391:	push   0x6402f938
64029396:	mov    ds:0x6404844c,eax
6402939b:	mov    DWORD PTR ds:0x64048450,ebp
640293a1:	call   0x64002e90
640293a6:	push   0x6402f910
640293ab:	push   ebp
640293ac:	push   0x6402f904
640293b1:	mov    ds:0x64048454,eax
640293b6:	mov    DWORD PTR ds:0x64048458,ebp
640293bc:	call   0x64002e90
640293c1:	mov    ds:0x6404845c,eax
640293c6:	mov    DWORD PTR ds:0x64048460,ebp
640293cc:	push   0x6402f8dc
640293d1:	push   ebp
640293d2:	push   0x6402f8d0
640293d7:	call   0x64002e90
640293dc:	push   0x6402f890
640293e1:	push   0xb
640293e3:	push   0x6402f884
640293e8:	mov    ds:0x64048464,eax
640293ed:	mov    DWORD PTR ds:0x64048468,0xb
640293f7:	call   0x64002e90
640293fc:	add    esp,0x48
640293ff:	push   0x6402f84c
64029404:	push   0x9
64029406:	push   0x6402f840
6402940b:	mov    ds:0x6404846c,eax
64029410:	mov    DWORD PTR ds:0x64048470,0x9
6402941a:	call   0x64002e90
6402941f:	push   0x6402f810
64029424:	push   0x9
64029426:	push   0x6402f804
6402942b:	mov    ds:0x64048474,eax
64029430:	mov    DWORD PTR ds:0x64048478,0x9
6402943a:	call   0x64002e90
6402943f:	push   0x6402f7c8
64029444:	push   0x9
64029446:	push   0x6402f7bc
6402944b:	mov    ds:0x6404847c,eax
64029450:	mov    DWORD PTR ds:0x64048480,0x9
6402945a:	call   0x64002e90
6402945f:	push   0x6402f78c
64029464:	push   0x9
64029466:	push   0x6402f780
6402946b:	mov    ds:0x64048484,eax
64029470:	mov    DWORD PTR ds:0x64048488,0x9
6402947a:	call   0x64002e90
6402947f:	push   0x6402f754
64029484:	push   ebp
64029485:	push   0x6402f748
6402948a:	mov    ds:0x6404848c,eax
6402948f:	mov    DWORD PTR ds:0x64048490,ebp
64029495:	call   0x64002e90
6402949a:	push   0x6402f724
6402949f:	push   ebp
640294a0:	push   0x6402f718
640294a5:	mov    ds:0x64048494,eax
640294aa:	mov    DWORD PTR ds:0x64048498,ebp
640294b0:	call   0x64002e90
640294b5:	add    esp,0x48
640294b8:	push   0x6402f6f0
640294bd:	push   ebp
640294be:	push   0x6402f6e4
640294c3:	mov    ds:0x6404849c,eax
640294c8:	mov    DWORD PTR ds:0x640484a0,ebp
640294ce:	call   0x64002e90
640294d3:	push   0x6402f6b4
640294d8:	push   0xb
640294da:	push   0x6402f6a8
640294df:	mov    ds:0x640484a4,eax
640294e4:	mov    DWORD PTR ds:0x640484a8,0xb
640294ee:	call   0x64002e90
640294f3:	push   0x6402f668
640294f8:	push   0x9
640294fa:	push   0x6402f65c
640294ff:	mov    ds:0x640484ac,eax
64029504:	mov    DWORD PTR ds:0x640484b0,0x9
6402950e:	call   0x64002e90
64029513:	push   0x6402f620
64029518:	push   0x9
6402951a:	push   0x6402f614
6402951f:	mov    ds:0x640484b4,eax
64029524:	mov    DWORD PTR ds:0x640484b8,0x9
6402952e:	call   0x64002e90
64029533:	push   0x6402f5e8
64029538:	push   0x9
6402953a:	push   0x6402f5dc
6402953f:	mov    ds:0x640484bc,eax
64029544:	mov    DWORD PTR ds:0x640484c0,0x9
6402954e:	call   0x64002e90
64029553:	push   0x6402f5b8
64029558:	mov    ds:0x640484c4,eax
6402955d:	mov    DWORD PTR ds:0x640484c8,0x9
64029567:	push   0x9
64029569:	push   0x6402f5ac
6402956e:	call   0x64002e90
64029573:	add    esp,0x48
64029576:	push   0x6402f57c
6402957b:	push   ebp
6402957c:	push   0x6402f570
64029581:	mov    ds:0x640484cc,eax
64029586:	mov    DWORD PTR ds:0x640484d0,ebp
6402958c:	call   0x64002e90
64029591:	push   0x6402f53c
64029596:	push   ebp
64029597:	push   0x6402f530
6402959c:	mov    ds:0x640484d4,eax
640295a1:	mov    DWORD PTR ds:0x640484d8,ebp
640295a7:	call   0x64002e90
640295ac:	push   0x6402f4f4
640295b1:	push   ebp
640295b2:	push   0x6402f4e8
640295b7:	mov    ds:0x640484dc,eax
640295bc:	mov    DWORD PTR ds:0x640484e0,ebp
640295c2:	call   0x64002e90
640295c7:	push   0x6402f4ac
640295cc:	push   0xb
640295ce:	push   0x6402f4a0
640295d3:	mov    ds:0x640484e4,eax
640295d8:	mov    DWORD PTR ds:0x640484e8,0xb
640295e2:	call   0x64002e90
640295e7:	push   0x6402f474
640295ec:	push   0x9
640295ee:	push   0x6402f468
640295f3:	mov    ds:0x640484ec,eax
640295f8:	mov    DWORD PTR ds:0x640484f0,0x9
64029602:	call   0x64002e90
64029607:	push   0x6402f428
6402960c:	push   0x9
6402960e:	push   0x6402f41c
64029613:	mov    ds:0x640484f4,eax
64029618:	mov    DWORD PTR ds:0x640484f8,0x9
64029622:	call   0x64002e90
64029627:	add    esp,0x48
6402962a:	push   0x6402f3f0
6402962f:	push   0x9
64029631:	push   0x6402f3e4
64029636:	mov    ds:0x640484fc,eax
6402963b:	mov    DWORD PTR ds:0x64048500,0x9
64029645:	call   0x64002e90
6402964a:	push   0x6402f3c0
6402964f:	push   0x9
64029651:	push   0x6402f3b4
64029656:	mov    ds:0x64048504,eax
6402965b:	mov    DWORD PTR ds:0x64048508,0x9
64029665:	call   0x64002e90
6402966a:	push   0x6402f390
6402966f:	push   esi
64029670:	push   0x6402f388
64029675:	mov    ds:0x6404850c,eax
6402967a:	mov    DWORD PTR ds:0x64048510,esi
64029680:	call   0x64002e90
64029685:	push   0x6402f34c
6402968a:	push   edi
6402968b:	push   0x6402f344
64029690:	mov    ds:0x64048514,eax
64029695:	mov    DWORD PTR ds:0x64048518,edi
6402969b:	call   0x64002e90
640296a0:	push   0x6402f30c
640296a5:	push   esi
640296a6:	push   0x6402f304
640296ab:	mov    ds:0x6404851c,eax
640296b0:	mov    DWORD PTR ds:0x64048520,esi
640296b6:	call   0x64002e90
640296bb:	push   0x6402f2cc
640296c0:	push   esi
640296c1:	push   0x6402f2c4
640296c6:	mov    ds:0x64048524,eax
640296cb:	mov    DWORD PTR ds:0x64048528,esi
640296d1:	call   0x64002e90
640296d6:	add    esp,0x48
640296d9:	push   0x6402f294
640296de:	mov    ds:0x6404852c,eax
640296e3:	mov    DWORD PTR ds:0x64048530,edi
640296e9:	push   edi
640296ea:	push   0x6402f28c
640296ef:	call   0x64002e90
640296f4:	push   0x6402f258
640296f9:	push   edi
640296fa:	push   0x6402f250
640296ff:	mov    ds:0x64048534,eax
64029704:	mov    DWORD PTR ds:0x64048538,edi
6402970a:	call   0x64002e90
6402970f:	push   0x6402f218
64029714:	push   0x9
64029716:	push   0x6402f20c
6402971b:	mov    ds:0x6404853c,eax
64029720:	mov    DWORD PTR ds:0x64048540,0x9
6402972a:	call   0x64002e90
6402972f:	push   0x6402f1e8
64029734:	push   0xa
64029736:	push   0x6402f1dc
6402973b:	mov    ds:0x64048544,eax
64029740:	mov    DWORD PTR ds:0x64048548,0xa
6402974a:	call   0x64002e90
6402974f:	push   0x6402f1a4
64029754:	push   edi
64029755:	push   0x6402f19c
6402975a:	mov    ds:0x6404854c,eax
6402975f:	mov    DWORD PTR ds:0x64048550,edi
64029765:	call   0x64002e90
6402976a:	push   0x6402f15c
6402976f:	push   edi
64029770:	push   0x6402f154
64029775:	mov    ds:0x64048554,eax
6402977a:	mov    DWORD PTR ds:0x64048558,edi
64029780:	call   0x64002e90
64029785:	add    esp,0x48
64029788:	push   0x6402f118
6402978d:	push   edi
6402978e:	push   0x6402f110
64029793:	mov    ds:0x6404855c,eax
64029798:	mov    DWORD PTR ds:0x64048560,edi
6402979e:	call   0x64002e90
640297a3:	push   0x6402f0dc
640297a8:	push   ebx
640297a9:	push   0x6402f0d4
640297ae:	mov    ds:0x64048564,eax
640297b3:	mov    DWORD PTR ds:0x64048568,ebx
640297b9:	call   0x64002e90
640297be:	push   0x6402f094
640297c3:	push   ebp
640297c4:	push   0x6402f088
640297c9:	mov    ds:0x6404856c,eax
640297ce:	mov    DWORD PTR ds:0x64048570,ebp
640297d4:	call   0x64002e90
640297d9:	push   0x6402f050
640297de:	push   ebp
640297df:	push   0x6402f044
640297e4:	mov    ds:0x64048574,eax
640297e9:	mov    DWORD PTR ds:0x64048578,ebp
640297ef:	call   0x64002e90
640297f4:	push   0x6402f008
640297f9:	push   0x9
640297fb:	push   0x6402effc
64029800:	mov    ds:0x6404857c,eax
64029805:	mov    DWORD PTR ds:0x64048580,0x9
6402980f:	call   0x64002e90
64029814:	push   0x6402efbc
64029819:	push   0x9
6402981b:	push   0x6402efb0
64029820:	mov    ds:0x64048584,eax
64029825:	mov    DWORD PTR ds:0x64048588,0x9
6402982f:	call   0x64002e90
64029834:	add    esp,0x48
64029837:	push   0x6402ef88
6402983c:	push   ebx
6402983d:	push   0x6402ef80
64029842:	mov    ds:0x6404858c,eax
64029847:	mov    DWORD PTR ds:0x64048590,ebx
6402984d:	call   0x64002e90
64029852:	push   0x6402ef40
64029857:	push   esi
64029858:	mov    ds:0x64048594,eax
6402985d:	mov    DWORD PTR ds:0x64048598,esi
64029863:	push   0x6402ef38
64029868:	call   0x64002e90
6402986d:	push   0x6402ef0c
64029872:	push   esi
64029873:	push   0x6402ef04
64029878:	mov    ds:0x6404859c,eax
6402987d:	mov    DWORD PTR ds:0x640485a0,esi
64029883:	call   0x64002e90
64029888:	push   0x6402eecc
6402988d:	push   edi
6402988e:	push   0x6402eec4
64029893:	mov    ds:0x640485a4,eax
64029898:	mov    DWORD PTR ds:0x640485a8,edi
6402989e:	call   0x64002e90
640298a3:	push   0x6402ee98
640298a8:	push   edi
640298a9:	push   0x6402ee90
640298ae:	mov    ds:0x640485ac,eax
640298b3:	mov    DWORD PTR ds:0x640485b0,edi
640298b9:	call   0x64002e90
640298be:	push   0x6402ee50
640298c3:	push   edi
640298c4:	push   0x6402ee48
640298c9:	mov    ds:0x640485b4,eax
640298ce:	mov    DWORD PTR ds:0x640485b8,edi
640298d4:	call   0x64002e90
640298d9:	add    esp,0x48
640298dc:	push   0x6402ee18
640298e1:	push   ebp
640298e2:	push   0x6402ee0c
640298e7:	mov    ds:0x640485bc,eax
640298ec:	mov    DWORD PTR ds:0x640485c0,ebp
640298f2:	call   0x64002e90
640298f7:	push   0x6402ede8
640298fc:	push   0x9
640298fe:	push   0x6402eddc
64029903:	mov    ds:0x640485c4,eax
64029908:	mov    DWORD PTR ds:0x640485c8,0x9
64029912:	call   0x64002e90
64029917:	push   0x6402edac
6402991c:	push   edi
6402991d:	push   0x6402eda4
64029922:	mov    ds:0x640485cc,eax
64029927:	mov    DWORD PTR ds:0x640485d0,edi
6402992d:	call   0x64002e90
64029932:	push   0x6402ed78
64029937:	push   ebp
64029938:	push   0x6402ed6c
6402993d:	mov    ds:0x640485d4,eax
64029942:	mov    DWORD PTR ds:0x640485d8,ebp
64029948:	call   0x64002e90
6402994d:	push   0x6402ed34
64029952:	push   edi
64029953:	push   0x6402ed2c
64029958:	mov    ds:0x640485dc,eax
6402995d:	mov    DWORD PTR ds:0x640485e0,edi
64029963:	call   0x64002e90
64029968:	push   0x6402ed04
6402996d:	push   ebp
6402996e:	push   0x6402ecf8
64029973:	mov    ds:0x640485e4,eax
64029978:	mov    DWORD PTR ds:0x640485e8,ebp
6402997e:	call   0x64002e90
64029983:	add    esp,0x48
64029986:	push   0x6402ecc0
6402998b:	push   esi
6402998c:	push   0x6402ecb8
64029991:	mov    ds:0x640485ec,eax
64029996:	mov    DWORD PTR ds:0x640485f0,esi
6402999c:	call   0x64002e90
640299a1:	push   0x6402ec90
640299a6:	push   edi
640299a7:	push   0x6402ec88
640299ac:	mov    ds:0x640485f4,eax
640299b1:	mov    DWORD PTR ds:0x640485f8,edi
640299b7:	call   0x64002e90
640299bc:	push   0x6402ec50
640299c1:	push   0x4
640299c3:	push   0x6402ec48
640299c8:	mov    ds:0x640485fc,eax
640299cd:	mov    DWORD PTR ds:0x64048600,0x4
640299d7:	call   0x64002e90
640299dc:	push   0x6402ec0c
640299e1:	push   ebx
640299e2:	push   0x6402ec04
640299e7:	mov    ds:0x64048604,eax
640299ec:	mov    DWORD PTR ds:0x64048608,ebx
640299f2:	call   0x64002e90
640299f7:	push   0x6402ebe0
640299fc:	push   edi
640299fd:	push   0x6402ebd8
64029a02:	mov    ds:0x6404860c,eax
64029a07:	mov    DWORD PTR ds:0x64048610,edi
64029a0d:	call   0x64002e90
64029a12:	push   0x6402ebb4
64029a17:	push   ebp
64029a18:	push   0x6402eba8
64029a1d:	mov    ds:0x64048614,eax
64029a22:	mov    DWORD PTR ds:0x64048618,ebp
64029a28:	call   0x64002e90
64029a2d:	add    esp,0x48
64029a30:	push   0x6402eb68
64029a35:	push   edi
64029a36:	push   0x6402eb60
64029a3b:	mov    ds:0x6404861c,eax
64029a40:	mov    DWORD PTR ds:0x64048620,edi
64029a46:	call   0x64002e90
64029a4b:	push   0x6402eb20
64029a50:	push   esi
64029a51:	push   0x6402eb18
64029a56:	mov    ds:0x64048624,eax
64029a5b:	mov    DWORD PTR ds:0x64048628,esi
64029a61:	call   0x64002e90
64029a66:	push   0x6402eaf0
64029a6b:	push   edi
64029a6c:	push   0x6402eae8
64029a71:	mov    ds:0x6404862c,eax
64029a76:	mov    DWORD PTR ds:0x64048630,edi
64029a7c:	call   0x64002e90
64029a81:	push   0x6402eabc
64029a86:	push   ebx
64029a87:	push   0x6402eab4
64029a8c:	mov    ds:0x64048634,eax
64029a91:	mov    DWORD PTR ds:0x64048638,ebx
64029a97:	call   0x64002e90
64029a9c:	push   0x6402ea78
64029aa1:	push   esi
64029aa2:	push   0x6402ea70
64029aa7:	mov    ds:0x6404863c,eax
64029aac:	mov    DWORD PTR ds:0x64048640,esi
64029ab2:	call   0x64002e90
64029ab7:	push   0x6402ea34
64029abc:	push   ebx
64029abd:	push   0x6402ea2c
64029ac2:	mov    ds:0x64048644,eax
64029ac7:	mov    DWORD PTR ds:0x64048648,ebx
64029acd:	call   0x64002e90
64029ad2:	add    esp,0x48
64029ad5:	push   0x6402ea08
64029ada:	push   esi
64029adb:	push   0x6402ea00
64029ae0:	mov    ds:0x6404864c,eax
64029ae5:	mov    DWORD PTR ds:0x64048650,esi
64029aeb:	call   0x64002e90
64029af0:	push   0x6402e9d8
64029af5:	push   ebx
64029af6:	push   0x6402e9d0
64029afb:	mov    ds:0x64048654,eax
64029b00:	mov    DWORD PTR ds:0x64048658,ebx
64029b06:	call   0x64002e90
64029b0b:	push   0x6402e9a4
64029b10:	push   esi
64029b11:	push   0x6402e99c
64029b16:	mov    ds:0x6404865c,eax
64029b1b:	mov    DWORD PTR ds:0x64048660,esi
64029b21:	call   0x64002e90
64029b26:	push   0x6402e964
64029b2b:	push   edi
64029b2c:	push   0x6402e95c
64029b31:	mov    ds:0x64048664,eax
64029b36:	mov    DWORD PTR ds:0x64048668,edi
64029b3c:	call   0x64002e90
64029b41:	mov    ds:0x6404866c,eax
64029b46:	push   0x6402e91c
64029b4b:	push   ebp
64029b4c:	push   0x6402e910
64029b51:	mov    DWORD PTR ds:0x64048670,ebp
64029b57:	call   0x64002e90
64029b5c:	push   0x6402e8d4
64029b61:	push   esi
64029b62:	push   0x6402e8cc
64029b67:	mov    ds:0x64048674,eax
64029b6c:	mov    DWORD PTR ds:0x64048678,esi
64029b72:	call   0x64002e90
64029b77:	add    esp,0x48
64029b7a:	push   0x6402e894
64029b7f:	push   edi
64029b80:	push   0x6402e88c
64029b85:	mov    ds:0x6404867c,eax
64029b8a:	mov    DWORD PTR ds:0x64048680,edi
64029b90:	call   0x64002e90
64029b95:	push   0x6402e850
64029b9a:	push   0x9
64029b9c:	push   0x6402e844
64029ba1:	mov    ds:0x64048684,eax
64029ba6:	mov    DWORD PTR ds:0x64048688,0x9
64029bb0:	call   0x64002e90
64029bb5:	push   0x6402e820
64029bba:	push   ebp
64029bbb:	push   0x6402e814
64029bc0:	mov    ds:0x6404868c,eax
64029bc5:	mov    DWORD PTR ds:0x64048690,ebp
64029bcb:	call   0x64002e90
64029bd0:	push   0x6402e7dc
64029bd5:	push   ebp
64029bd6:	push   0x6402e7d0
64029bdb:	mov    ds:0x64048694,eax
64029be0:	mov    DWORD PTR ds:0x64048698,ebp
64029be6:	call   0x64002e90
64029beb:	push   0x6402e7a4
64029bf0:	push   0xa
64029bf2:	push   0x6402e798
64029bf7:	mov    ds:0x6404869c,eax
64029bfc:	mov    DWORD PTR ds:0x640486a0,0xa
64029c06:	call   0x64002e90
64029c0b:	push   0x6402e76c
64029c10:	push   0x9
64029c12:	push   0x6402e760
64029c17:	mov    ds:0x640486a4,eax
64029c1c:	mov    DWORD PTR ds:0x640486a8,0x9
64029c26:	call   0x64002e90
64029c2b:	add    esp,0x48
64029c2e:	push   0x6402e738
64029c33:	push   0x9
64029c35:	push   0x6402e72c
64029c3a:	mov    ds:0x640486ac,eax
64029c3f:	mov    DWORD PTR ds:0x640486b0,0x9
64029c49:	call   0x64002e90
64029c4e:	push   0x6402e6fc
64029c53:	push   esi
64029c54:	push   0x6402e6f4
64029c59:	mov    ds:0x640486b4,eax
64029c5e:	mov    DWORD PTR ds:0x640486b8,esi
64029c64:	call   0x64002e90
64029c69:	push   0x6402e6d0
64029c6e:	push   edi
64029c6f:	push   0x6402e6c8
64029c74:	mov    ds:0x640486bc,eax
64029c79:	mov    DWORD PTR ds:0x640486c0,edi
64029c7f:	call   0x64002e90
64029c84:	push   0x6402e698
64029c89:	push   ebp
64029c8a:	push   0x6402e68c
64029c8f:	mov    ds:0x640486c4,eax
64029c94:	mov    DWORD PTR ds:0x640486c8,ebp
64029c9a:	call   0x64002e90
64029c9f:	push   0x6402e64c
64029ca4:	push   esi
64029ca5:	push   0x6402e644
64029caa:	mov    ds:0x640486cc,eax
64029caf:	mov    DWORD PTR ds:0x640486d0,esi
64029cb5:	call   0x64002e90
64029cba:	mov    ds:0x640486d4,eax
64029cbf:	mov    DWORD PTR ds:0x640486d8,edi
64029cc5:	push   0x6402e60c
64029cca:	push   edi
64029ccb:	push   0x6402e604
64029cd0:	call   0x64002e90
64029cd5:	add    esp,0x48
64029cd8:	push   0x6402e5cc
64029cdd:	push   esi
64029cde:	push   0x6402e5c4
64029ce3:	mov    ds:0x640486dc,eax
64029ce8:	mov    DWORD PTR ds:0x640486e0,esi
64029cee:	call   0x64002e90
64029cf3:	push   0x6402e598
64029cf8:	push   edi
64029cf9:	push   0x6402e590
64029cfe:	mov    ds:0x640486e4,eax
64029d03:	mov    DWORD PTR ds:0x640486e8,edi
64029d09:	call   0x64002e90
64029d0e:	push   0x6402e560
64029d13:	push   esi
64029d14:	push   0x6402e558
64029d19:	mov    ds:0x640486ec,eax
64029d1e:	mov    DWORD PTR ds:0x640486f0,esi
64029d24:	call   0x64002e90
64029d29:	push   0x6402e528
64029d2e:	push   edi
64029d2f:	push   0x6402e520
64029d34:	mov    ds:0x640486f4,eax
64029d39:	mov    DWORD PTR ds:0x640486f8,edi
64029d3f:	call   0x64002e90
64029d44:	push   0x6402e4f0
64029d49:	push   0x3
64029d4b:	push   0x6402e4ec
64029d50:	mov    ds:0x640486fc,eax
64029d55:	mov    DWORD PTR ds:0x64048700,0x3
64029d5f:	call   0x64002e90
64029d64:	push   0x6402e4c0
64029d69:	push   0x4
64029d6b:	push   0x6402e4b8
64029d70:	mov    ds:0x64048704,eax
64029d75:	mov    DWORD PTR ds:0x64048708,0x4
64029d7f:	call   0x64002e90
64029d84:	add    esp,0x48
64029d87:	push   0x6402e490
64029d8c:	push   esi
64029d8d:	push   0x6402e488
64029d92:	mov    ds:0x6404870c,eax
64029d97:	mov    DWORD PTR ds:0x64048710,esi
64029d9d:	call   0x64002e90
64029da2:	push   0x6402e44c
64029da7:	push   edi
64029da8:	push   0x6402e444
64029dad:	mov    ds:0x64048714,eax
64029db2:	mov    DWORD PTR ds:0x64048718,edi
64029db8:	call   0x64002e90
64029dbd:	push   0x6402e420
64029dc2:	push   esi
64029dc3:	push   0x6402e418
64029dc8:	mov    ds:0x6404871c,eax
64029dcd:	mov    DWORD PTR ds:0x64048720,esi
64029dd3:	call   0x64002e90
64029dd8:	push   0x6402e3e4
64029ddd:	push   edi
64029dde:	push   0x6402e3dc
64029de3:	mov    ds:0x64048724,eax
64029de8:	mov    DWORD PTR ds:0x64048728,edi
64029dee:	call   0x64002e90
64029df3:	push   0x6402e3b0
64029df8:	push   esi
64029df9:	push   0x6402e3a8
64029dfe:	mov    ds:0x6404872c,eax
64029e03:	mov    DWORD PTR ds:0x64048730,esi
64029e09:	call   0x64002e90
64029e0e:	push   0x6402e36c
64029e13:	push   edi
64029e14:	push   0x6402e364
64029e19:	mov    ds:0x64048734,eax
64029e1e:	mov    DWORD PTR ds:0x64048738,edi
64029e24:	call   0x64002e90
64029e29:	add    esp,0x48
64029e2c:	mov    ds:0x6404873c,eax
64029e31:	mov    DWORD PTR ds:0x64048740,0x4
64029e3b:	push   0x6402e330
64029e40:	push   0x4
64029e42:	push   0x6402e328
64029e47:	call   0x64002e90
64029e4c:	push   0x6402e2e8
64029e51:	push   ebx
64029e52:	push   0x6402e2e0
64029e57:	mov    ds:0x64048744,eax
64029e5c:	mov    DWORD PTR ds:0x64048748,ebx
64029e62:	call   0x64002e90
64029e67:	push   0x6402e2a0
64029e6c:	push   ebx
64029e6d:	push   0x6402e298
64029e72:	mov    ds:0x6404874c,eax
64029e77:	mov    DWORD PTR ds:0x64048750,ebx
64029e7d:	call   0x64002e90
64029e82:	push   0x6402e25c
64029e87:	push   esi
64029e88:	push   0x6402e254
64029e8d:	mov    ds:0x64048754,eax
64029e92:	mov    DWORD PTR ds:0x64048758,esi
64029e98:	call   0x64002e90
64029e9d:	push   0x6402e220
64029ea2:	push   edi
64029ea3:	push   0x6402e218
64029ea8:	mov    ds:0x6404875c,eax
64029ead:	mov    DWORD PTR ds:0x64048760,edi
64029eb3:	call   0x64002e90
64029eb8:	push   0x6402e1d8
64029ebd:	push   ebp
64029ebe:	push   0x6402e1cc
64029ec3:	mov    ds:0x64048764,eax
64029ec8:	mov    DWORD PTR ds:0x64048768,ebp
64029ece:	call   0x64002e90
64029ed3:	add    esp,0x48
64029ed6:	push   0x6402e1a8
64029edb:	push   edi
64029edc:	push   0x6402e1a0
64029ee1:	mov    ds:0x6404876c,eax
64029ee6:	mov    DWORD PTR ds:0x64048770,edi
64029eec:	call   0x64002e90
64029ef1:	push   0x6402e16c
64029ef6:	push   ebp
64029ef7:	push   0x6402e160
64029efc:	mov    ds:0x64048774,eax
64029f01:	mov    DWORD PTR ds:0x64048778,ebp
64029f07:	call   0x64002e90
64029f0c:	push   0x6402e130
64029f11:	push   esi
64029f12:	push   0x6402e128
64029f17:	mov    ds:0x6404877c,eax
64029f1c:	mov    DWORD PTR ds:0x64048780,esi
64029f22:	call   0x64002e90
64029f27:	push   0x6402e0fc
64029f2c:	push   edi
64029f2d:	push   0x6402e0f4
64029f32:	mov    ds:0x64048784,eax
64029f37:	mov    DWORD PTR ds:0x64048788,edi
64029f3d:	call   0x64002e90
64029f42:	push   0x6402e0b8
64029f47:	push   ebp
64029f48:	push   0x6402e0ac
64029f4d:	mov    ds:0x6404878c,eax
64029f52:	mov    DWORD PTR ds:0x64048790,ebp
64029f58:	call   0x64002e90
64029f5d:	push   0x6402e078
64029f62:	push   0xa
64029f64:	push   0x6402e06c
64029f69:	mov    ds:0x64048794,eax
64029f6e:	mov    DWORD PTR ds:0x64048798,0xa
64029f78:	call   0x64002e90
64029f7d:	add    esp,0x48
64029f80:	push   0x6402e03c
64029f85:	push   0xb
64029f87:	push   0x6402e030
64029f8c:	mov    ds:0x6404879c,eax
64029f91:	mov    DWORD PTR ds:0x640487a0,0xb
64029f9b:	call   0x64002e90
64029fa0:	mov    ds:0x640487a4,eax
64029fa5:	mov    DWORD PTR ds:0x640487a8,ebx
64029fab:	push   0x6402dff0
64029fb0:	push   ebx
64029fb1:	push   0x6402dfe8
64029fb6:	call   0x64002e90
64029fbb:	push   0x6402dfb4
64029fc0:	push   esi
64029fc1:	push   0x6402dfac
64029fc6:	mov    ds:0x640487ac,eax
64029fcb:	mov    DWORD PTR ds:0x640487b0,esi
64029fd1:	call   0x64002e90
64029fd6:	push   0x6402df70
64029fdb:	push   ebx
64029fdc:	push   0x6402df68
64029fe1:	mov    ds:0x640487b4,eax
64029fe6:	mov    DWORD PTR ds:0x640487b8,ebx
64029fec:	call   0x64002e90
64029ff1:	push   0x6402df28
64029ff6:	push   esi
64029ff7:	push   0x6402df20
64029ffc:	mov    ds:0x640487bc,eax
6402a001:	mov    DWORD PTR ds:0x640487c0,esi
6402a007:	call   0x64002e90
6402a00c:	push   0x6402def0
6402a011:	push   ebx
6402a012:	push   0x6402dee8
6402a017:	mov    ds:0x640487c4,eax
6402a01c:	mov    DWORD PTR ds:0x640487c8,ebx
6402a022:	call   0x64002e90
6402a027:	add    esp,0x48
6402a02a:	push   0x6402debc
6402a02f:	push   esi
6402a030:	push   0x6402deb4
6402a035:	mov    ds:0x640487cc,eax
6402a03a:	mov    DWORD PTR ds:0x640487d0,esi
6402a040:	call   0x64002e90
6402a045:	push   0x6402de90
6402a04a:	push   ebx
6402a04b:	push   0x6402de88
6402a050:	mov    ds:0x640487d4,eax
6402a055:	mov    DWORD PTR ds:0x640487d8,ebx
6402a05b:	call   0x64002e90
6402a060:	push   0x6402de50
6402a065:	push   esi
6402a066:	push   0x6402de48
6402a06b:	mov    ds:0x640487dc,eax
6402a070:	mov    DWORD PTR ds:0x640487e0,esi
6402a076:	call   0x64002e90
6402a07b:	push   0x6402de1c
6402a080:	push   ebx
6402a081:	push   0x6402de14
6402a086:	mov    ds:0x640487e4,eax
6402a08b:	mov    DWORD PTR ds:0x640487e8,ebx
6402a091:	call   0x64002e90
6402a096:	push   0x6402ddf0
6402a09b:	push   esi
6402a09c:	push   0x6402dde8
6402a0a1:	mov    ds:0x640487ec,eax
6402a0a6:	mov    DWORD PTR ds:0x640487f0,esi
6402a0ac:	call   0x64002e90
6402a0b1:	push   0x6402ddbc
6402a0b6:	push   ebx
6402a0b7:	push   0x6402ddb4
6402a0bc:	mov    ds:0x640487f4,eax
6402a0c1:	mov    DWORD PTR ds:0x640487f8,ebx
6402a0c7:	call   0x64002e90
6402a0cc:	add    esp,0x48
6402a0cf:	push   0x6402dd8c
6402a0d4:	push   esi
6402a0d5:	push   0x6402dd84
6402a0da:	mov    ds:0x640487fc,eax
6402a0df:	mov    DWORD PTR ds:0x64048800,esi
6402a0e5:	call   0x64002e90
6402a0ea:	push   0x6402dd48
6402a0ef:	push   ebx
6402a0f0:	push   0x6402dd40
6402a0f5:	mov    ds:0x64048804,eax
6402a0fa:	mov    DWORD PTR ds:0x64048808,ebx
6402a100:	call   0x64002e90
6402a105:	push   0x6402dd0c
6402a10a:	mov    ds:0x6404880c,eax
6402a10f:	mov    DWORD PTR ds:0x64048810,esi
6402a115:	push   esi
6402a116:	push   0x6402dd04
6402a11b:	call   0x64002e90
6402a120:	push   0x6402dcc4
6402a125:	push   0x3
6402a127:	push   0x6402dcc0
6402a12c:	mov    ds:0x64048814,eax
6402a131:	mov    DWORD PTR ds:0x64048818,0x3
6402a13b:	call   0x64002e90
6402a140:	push   0x6402dc94
6402a145:	push   0x3
6402a147:	push   0x6402dc90
6402a14c:	mov    ds:0x6404881c,eax
6402a151:	mov    DWORD PTR ds:0x64048820,0x3
6402a15b:	call   0x64002e90
6402a160:	push   0x6402dc60
6402a165:	push   0x3
6402a167:	push   0x6402dc5c
6402a16c:	mov    ds:0x64048824,eax
6402a171:	mov    DWORD PTR ds:0x64048828,0x3
6402a17b:	call   0x64002e90
6402a180:	add    esp,0x48
6402a183:	push   0x6402dc28
6402a188:	push   0x3
6402a18a:	push   0x6402dc24
6402a18f:	mov    ds:0x6404882c,eax
6402a194:	mov    DWORD PTR ds:0x64048830,0x3
6402a19e:	call   0x64002e90
6402a1a3:	push   0x6402dbf0
6402a1a8:	push   0x3
6402a1aa:	push   0x6402dbec
6402a1af:	mov    ds:0x64048834,eax
6402a1b4:	mov    DWORD PTR ds:0x64048838,0x3
6402a1be:	call   0x64002e90
6402a1c3:	push   0x6402dbc4
6402a1c8:	push   0x3
6402a1ca:	push   0x6402dbc0
6402a1cf:	mov    ds:0x6404883c,eax
6402a1d4:	mov    DWORD PTR ds:0x64048840,0x3
6402a1de:	call   0x64002e90
6402a1e3:	push   0x6402db94
6402a1e8:	push   0x3
6402a1ea:	push   0x6402db90
6402a1ef:	mov    ds:0x64048844,eax
6402a1f4:	mov    DWORD PTR ds:0x64048848,0x3
6402a1fe:	call   0x64002e90
6402a203:	push   0x6402db5c
6402a208:	push   0x3
6402a20a:	push   0x6402db58
6402a20f:	mov    ds:0x6404884c,eax
6402a214:	mov    DWORD PTR ds:0x64048850,0x3
6402a21e:	call   0x64002e90
6402a223:	push   0x6402db30
6402a228:	push   0x4
6402a22a:	push   0x6402db28
6402a22f:	mov    ds:0x64048854,eax
6402a234:	mov    DWORD PTR ds:0x64048858,0x4
6402a23e:	call   0x64002e90
6402a243:	add    esp,0x48
6402a246:	push   0x6402dae8
6402a24b:	push   0x4
6402a24d:	push   0x6402dadc
6402a252:	mov    ds:0x6404885c,eax
6402a257:	mov    DWORD PTR ds:0x64048860,0x4
6402a261:	call   0x64002e90
6402a266:	push   0x6402daac
6402a26b:	push   0x4
6402a26d:	push   0x6402daa4
6402a272:	mov    ds:0x64048864,eax
6402a277:	mov    DWORD PTR ds:0x64048868,0x4
6402a281:	call   0x64002e90
6402a286:	push   0x6402da80
6402a28b:	push   ebx
6402a28c:	push   0x6402da78
6402a291:	mov    ds:0x6404886c,eax
6402a296:	mov    DWORD PTR ds:0x64048870,ebx
6402a29c:	call   0x64002e90
6402a2a1:	push   0x6402da3c
6402a2a6:	push   0x4
6402a2a8:	mov    ds:0x64048874,eax
6402a2ad:	mov    DWORD PTR ds:0x64048878,0x4
6402a2b7:	push   0x6402da34
6402a2bc:	call   0x64002e90
6402a2c1:	push   0x6402da08
6402a2c6:	push   ebx
6402a2c7:	push   0x6402da00
6402a2cc:	mov    ds:0x6404887c,eax
6402a2d1:	mov    DWORD PTR ds:0x64048880,ebx
6402a2d7:	call   0x64002e90
6402a2dc:	push   0x6402d9cc
6402a2e1:	push   0x4
6402a2e3:	push   0x6402d9c4
6402a2e8:	mov    ds:0x64048884,eax
6402a2ed:	mov    DWORD PTR ds:0x64048888,0x4
6402a2f7:	call   0x64002e90
6402a2fc:	add    esp,0x48
6402a2ff:	push   0x6402d98c
6402a304:	push   ebx
6402a305:	push   0x6402d984
6402a30a:	mov    ds:0x6404888c,eax
6402a30f:	mov    DWORD PTR ds:0x64048890,ebx
6402a315:	call   0x64002e90
6402a31a:	push   0x6402d960
6402a31f:	push   0x3
6402a321:	push   0x6402d95c
6402a326:	mov    ds:0x64048894,eax
6402a32b:	mov    DWORD PTR ds:0x64048898,0x3
6402a335:	call   0x64002e90
6402a33a:	push   0x6402d928
6402a33f:	push   0x3
6402a341:	push   0x6402d924
6402a346:	mov    ds:0x6404889c,eax
6402a34b:	mov    DWORD PTR ds:0x640488a0,0x3
6402a355:	call   0x64002e90
6402a35a:	push   0x6402d8e4
6402a35f:	push   0x4
6402a361:	push   0x6402d8dc
6402a366:	mov    ds:0x640488a4,eax
6402a36b:	mov    DWORD PTR ds:0x640488a8,0x4
6402a375:	call   0x64002e90
6402a37a:	push   0x6402d8a4
6402a37f:	push   esi
6402a380:	push   0x6402d89c
6402a385:	mov    ds:0x640488ac,eax
6402a38a:	mov    DWORD PTR ds:0x640488b0,esi
6402a390:	call   0x64002e90
6402a395:	push   0x6402d870
6402a39a:	push   ebx
6402a39b:	push   0x6402d868
6402a3a0:	mov    ds:0x640488b4,eax
6402a3a5:	mov    DWORD PTR ds:0x640488b8,ebx
6402a3ab:	call   0x64002e90
6402a3b0:	add    esp,0x48
6402a3b3:	push   0x6402d830
6402a3b8:	push   0x4
6402a3ba:	push   0x6402d828
6402a3bf:	mov    ds:0x640488bc,eax
6402a3c4:	mov    DWORD PTR ds:0x640488c0,0x4
6402a3ce:	call   0x64002e90
6402a3d3:	push   0x6402d7fc
6402a3d8:	push   0x4
6402a3da:	push   0x6402d7f4
6402a3df:	mov    ds:0x640488c4,eax
6402a3e4:	mov    DWORD PTR ds:0x640488c8,0x4
6402a3ee:	call   0x64002e90
6402a3f3:	push   0x6402d7c4
6402a3f8:	push   0x4
6402a3fa:	push   0x6402d7bc
6402a3ff:	mov    ds:0x640488cc,eax
6402a404:	mov    DWORD PTR ds:0x640488d0,0x4
6402a40e:	call   0x64002e90
6402a413:	push   0x6402d77c
6402a418:	push   0x4
6402a41a:	push   0x6402d774
6402a41f:	mov    ds:0x640488d4,eax
6402a424:	mov    DWORD PTR ds:0x640488d8,0x4
6402a42e:	call   0x64002e90
6402a433:	push   0x6402d750
6402a438:	push   0x4
6402a43a:	push   0x6402d748
6402a43f:	mov    ds:0x640488dc,eax
6402a444:	mov    DWORD PTR ds:0x640488e0,0x4
6402a44e:	call   0x64002e90
6402a453:	push   0x6402d714
6402a458:	push   0x4
6402a45a:	push   0x6402d70c
6402a45f:	mov    ds:0x640488e4,eax
6402a464:	mov    DWORD PTR ds:0x640488e8,0x4
6402a46e:	call   0x64002e90
6402a473:	add    esp,0x48
6402a476:	push   0x6402d6e4
6402a47b:	push   0x4
6402a47d:	push   0x6402d6dc
6402a482:	mov    ds:0x640488ec,eax
6402a487:	mov    DWORD PTR ds:0x640488f0,0x4
6402a491:	call   0x64002e90
6402a496:	push   0x6402d6b4
6402a49b:	push   esi
6402a49c:	push   0x6402d6ac
6402a4a1:	mov    ds:0x640488f4,eax
6402a4a6:	mov    DWORD PTR ds:0x640488f8,esi
6402a4ac:	call   0x64002e90
6402a4b1:	push   0x6402d688
6402a4b6:	push   esi
6402a4b7:	push   0x6402d680
6402a4bc:	mov    ds:0x640488fc,eax
6402a4c1:	mov    DWORD PTR ds:0x64048900,esi
6402a4c7:	call   0x64002e90
6402a4cc:	push   0x6402d64c
6402a4d1:	push   ebx
6402a4d2:	push   0x6402d644
6402a4d7:	mov    ds:0x64048904,eax
6402a4dc:	mov    DWORD PTR ds:0x64048908,ebx
6402a4e2:	call   0x64002e90
6402a4e7:	push   0x6402d608
6402a4ec:	push   esi
6402a4ed:	push   0x6402d600
6402a4f2:	mov    ds:0x6404890c,eax
6402a4f7:	mov    DWORD PTR ds:0x64048910,esi
6402a4fd:	call   0x64002e90
6402a502:	push   0x6402d5dc
6402a507:	push   esi
6402a508:	push   0x6402d5d4
6402a50d:	mov    ds:0x64048914,eax
6402a512:	mov    DWORD PTR ds:0x64048918,esi
6402a518:	call   0x64002e90
6402a51d:	add    esp,0x48
6402a520:	push   0x6402d5a8
6402a525:	push   0x4
6402a527:	push   0x6402d5a0
6402a52c:	mov    ds:0x6404891c,eax
6402a531:	mov    DWORD PTR ds:0x64048920,0x4
6402a53b:	call   0x64002e90
6402a540:	push   0x6402d564
6402a545:	push   ebx
6402a546:	push   0x6402d55c
6402a54b:	mov    ds:0x64048924,eax
6402a550:	mov    DWORD PTR ds:0x64048928,ebx
6402a556:	call   0x64002e90
6402a55b:	push   0x6402d520
6402a560:	push   ebx
6402a561:	push   0x6402d518
6402a566:	mov    ds:0x6404892c,eax
6402a56b:	mov    DWORD PTR ds:0x64048930,ebx
6402a571:	call   0x64002e90
6402a576:	push   0x6402d4f4
6402a57b:	push   ebx
6402a57c:	push   0x6402d4ec
6402a581:	mov    ds:0x64048934,eax
6402a586:	mov    DWORD PTR ds:0x64048938,ebx
6402a58c:	call   0x64002e90
6402a591:	push   0x6402d4c4
6402a596:	push   esi
6402a597:	push   0x6402d4bc
6402a59c:	mov    ds:0x6404893c,eax
6402a5a1:	mov    DWORD PTR ds:0x64048940,esi
6402a5a7:	call   0x64002e90
6402a5ac:	push   0x6402d47c
6402a5b1:	push   edi
6402a5b2:	push   0x6402d474
6402a5b7:	mov    ds:0x64048944,eax
6402a5bc:	mov    DWORD PTR ds:0x64048948,edi
6402a5c2:	call   0x64002e90
6402a5c7:	add    esp,0x48
6402a5ca:	push   0x6402d438
6402a5cf:	push   esi
6402a5d0:	push   0x6402d430
6402a5d5:	mov    ds:0x6404894c,eax
6402a5da:	mov    DWORD PTR ds:0x64048950,esi
6402a5e0:	call   0x64002e90
6402a5e5:	push   0x6402d40c
6402a5ea:	push   edi
6402a5eb:	push   0x6402d404
6402a5f0:	mov    ds:0x64048954,eax
6402a5f5:	mov    DWORD PTR ds:0x64048958,edi
6402a5fb:	call   0x64002e90
6402a600:	push   0x6402d3d8
6402a605:	push   edi
6402a606:	push   0x6402d3d0
6402a60b:	mov    ds:0x6404895c,eax
6402a610:	mov    DWORD PTR ds:0x64048960,edi
6402a616:	call   0x64002e90
6402a61b:	push   0x6402d394
6402a620:	push   ebx
6402a621:	push   0x6402d38c
6402a626:	mov    ds:0x64048964,eax
6402a62b:	mov    DWORD PTR ds:0x64048968,ebx
6402a631:	call   0x64002e90
6402a636:	push   0x6402d358
6402a63b:	push   edi
6402a63c:	push   0x6402d350
6402a641:	mov    ds:0x6404896c,eax
6402a646:	mov    DWORD PTR ds:0x64048970,edi
6402a64c:	call   0x64002e90
6402a651:	push   0x6402d324
6402a656:	push   ebx
6402a657:	push   0x6402d31c
6402a65c:	mov    ds:0x64048974,eax
6402a661:	mov    DWORD PTR ds:0x64048978,ebx
6402a667:	call   0x64002e90
6402a66c:	add    esp,0x48
6402a66f:	push   0x6402d2f8
6402a674:	push   edi
6402a675:	push   0x6402d2f0
6402a67a:	mov    ds:0x6404897c,eax
6402a67f:	mov    DWORD PTR ds:0x64048980,edi
6402a685:	call   0x64002e90
6402a68a:	push   0x6402d2b8
6402a68f:	push   edi
6402a690:	push   0x6402d2b0
6402a695:	mov    ds:0x64048984,eax
6402a69a:	mov    DWORD PTR ds:0x64048988,edi
6402a6a0:	call   0x64002e90
6402a6a5:	push   0x6402d27c
6402a6aa:	push   esi
6402a6ab:	push   0x6402d274
6402a6b0:	mov    ds:0x6404898c,eax
6402a6b5:	mov    DWORD PTR ds:0x64048990,esi
6402a6bb:	call   0x64002e90
6402a6c0:	push   0x6402d250
6402a6c5:	push   0x4
6402a6c7:	push   0x6402d248
6402a6cc:	mov    ds:0x64048994,eax
6402a6d1:	mov    DWORD PTR ds:0x64048998,0x4
6402a6db:	call   0x64002e90
6402a6e0:	push   0x6402d21c
6402a6e5:	push   0x4
6402a6e7:	push   0x6402d214
6402a6ec:	mov    ds:0x6404899c,eax
6402a6f1:	mov    DWORD PTR ds:0x640489a0,0x4
6402a6fb:	call   0x64002e90
6402a700:	push   0x6402d1f0
6402a705:	push   edi
6402a706:	push   0x6402d1e8
6402a70b:	mov    ds:0x640489a4,eax
6402a710:	mov    DWORD PTR ds:0x640489a8,edi
6402a716:	call   0x64002e90
6402a71b:	add    esp,0x48
6402a71e:	push   0x6402d1c4
6402a723:	push   esi
6402a724:	push   0x6402d1bc
6402a729:	mov    ds:0x640489ac,eax
6402a72e:	mov    DWORD PTR ds:0x640489b0,esi
6402a734:	call   0x64002e90
6402a739:	mov    ds:0x640489b4,eax
6402a73e:	push   0x6402d17c
6402a743:	push   esi
6402a744:	push   0x6402d174
6402a749:	mov    DWORD PTR ds:0x640489b8,esi
6402a74f:	call   0x64002e90
6402a754:	push   0x6402d14c
6402a759:	push   ebx
6402a75a:	push   0x6402d144
6402a75f:	mov    ds:0x640489bc,eax
6402a764:	mov    DWORD PTR ds:0x640489c0,ebx
6402a76a:	call   0x64002e90
6402a76f:	push   0x6402d10c
6402a774:	push   ebx
6402a775:	push   0x6402d104
6402a77a:	mov    ds:0x640489c4,eax
6402a77f:	mov    DWORD PTR ds:0x640489c8,ebx
6402a785:	call   0x64002e90
6402a78a:	push   0x6402d0d0
6402a78f:	push   ebx
6402a790:	push   0x6402d0c8
6402a795:	mov    ds:0x640489cc,eax
6402a79a:	mov    DWORD PTR ds:0x640489d0,ebx
6402a7a0:	call   0x64002e90
6402a7a5:	push   0x6402d0a4
6402a7aa:	push   ebx
6402a7ab:	push   0x6402d09c
6402a7b0:	mov    ds:0x640489d4,eax
6402a7b5:	mov    DWORD PTR ds:0x640489d8,ebx
6402a7bb:	call   0x64002e90
6402a7c0:	add    esp,0x48
6402a7c3:	push   0x6402d078
6402a7c8:	push   esi
6402a7c9:	push   0x6402d070
6402a7ce:	mov    ds:0x640489dc,eax
6402a7d3:	mov    DWORD PTR ds:0x640489e0,esi
6402a7d9:	call   0x64002e90
6402a7de:	push   0x6402d034
6402a7e3:	push   ebx
6402a7e4:	push   0x6402d02c
6402a7e9:	mov    ds:0x640489e4,eax
6402a7ee:	mov    DWORD PTR ds:0x640489e8,ebx
6402a7f4:	call   0x64002e90
6402a7f9:	push   0x6402cff0
6402a7fe:	push   esi
6402a7ff:	push   0x6402cfe8
6402a804:	mov    ds:0x640489ec,eax
6402a809:	mov    DWORD PTR ds:0x640489f0,esi
6402a80f:	call   0x64002e90
6402a814:	push   0x6402cfbc
6402a819:	push   ebx
6402a81a:	push   0x6402cfb4
6402a81f:	mov    ds:0x640489f4,eax
6402a824:	mov    DWORD PTR ds:0x640489f8,ebx
6402a82a:	call   0x64002e90
6402a82f:	push   0x6402cf7c
6402a834:	push   esi
6402a835:	push   0x6402cf74
6402a83a:	mov    ds:0x640489fc,eax
6402a83f:	mov    DWORD PTR ds:0x64048a00,esi
6402a845:	call   0x64002e90
6402a84a:	push   0x6402cf4c
6402a84f:	push   esi
6402a850:	push   0x6402cf44
6402a855:	mov    ds:0x64048a04,eax
6402a85a:	mov    DWORD PTR ds:0x64048a08,esi
6402a860:	call   0x64002e90
6402a865:	add    esp,0x48
6402a868:	push   0x6402cf10
6402a86d:	push   esi
6402a86e:	push   0x6402cf08
6402a873:	mov    ds:0x64048a0c,eax
6402a878:	mov    DWORD PTR ds:0x64048a10,esi
6402a87e:	call   0x64002e90
6402a883:	push   0x6402cec8
6402a888:	push   edi
6402a889:	push   0x6402cec0
6402a88e:	mov    ds:0x64048a14,eax
6402a893:	mov    DWORD PTR ds:0x64048a18,edi
6402a899:	call   0x64002e90
6402a89e:	mov    ds:0x64048a1c,eax
6402a8a3:	mov    DWORD PTR ds:0x64048a20,esi
6402a8a9:	push   0x6402ce8c
6402a8ae:	push   esi
6402a8af:	push   0x6402ce84
6402a8b4:	call   0x64002e90
6402a8b9:	push   0x6402ce60
6402a8be:	push   edi
6402a8bf:	push   0x6402ce58
6402a8c4:	mov    ds:0x64048a24,eax
6402a8c9:	mov    DWORD PTR ds:0x64048a28,edi
6402a8cf:	call   0x64002e90
6402a8d4:	push   0x6402ce28
6402a8d9:	push   0x4
6402a8db:	push   0x6402ce20
6402a8e0:	mov    ds:0x64048a2c,eax
6402a8e5:	mov    DWORD PTR ds:0x64048a30,0x4
6402a8ef:	call   0x64002e90
6402a8f4:	push   0x6402cdf4
6402a8f9:	push   esi
6402a8fa:	push   0x6402cdec
6402a8ff:	mov    ds:0x64048a34,eax
6402a904:	mov    DWORD PTR ds:0x64048a38,esi
6402a90a:	call   0x64002e90
6402a90f:	add    esp,0x48
6402a912:	push   0x6402cdc8
6402a917:	push   0x4
6402a919:	push   0x6402cdc0
6402a91e:	mov    ds:0x64048a3c,eax
6402a923:	mov    DWORD PTR ds:0x64048a40,0x4
6402a92d:	call   0x64002e90
6402a932:	push   0x6402cd90
6402a937:	push   ebx
6402a938:	push   0x6402cd88
6402a93d:	mov    ds:0x64048a44,eax
6402a942:	mov    DWORD PTR ds:0x64048a48,ebx
6402a948:	call   0x64002e90
6402a94d:	push   0x6402cd64
6402a952:	push   edi
6402a953:	push   0x6402cd5c
6402a958:	mov    ds:0x64048a4c,eax
6402a95d:	mov    DWORD PTR ds:0x64048a50,edi
6402a963:	call   0x64002e90
6402a968:	push   0x6402cd1c
6402a96d:	push   edi
6402a96e:	push   0x6402cd14
6402a973:	mov    ds:0x64048a54,eax
6402a978:	mov    DWORD PTR ds:0x64048a58,edi
6402a97e:	call   0x64002e90
6402a983:	push   0x6402ccdc
6402a988:	push   ebp
6402a989:	push   0x6402ccd0
6402a98e:	mov    ds:0x64048a5c,eax
6402a993:	mov    DWORD PTR ds:0x64048a60,ebp
6402a999:	call   0x64002e90
6402a99e:	push   0x6402cca8
6402a9a3:	push   edi
6402a9a4:	push   0x6402cca0
6402a9a9:	mov    ds:0x64048a64,eax
6402a9ae:	mov    DWORD PTR ds:0x64048a68,edi
6402a9b4:	call   0x64002e90
6402a9b9:	add    esp,0x48
6402a9bc:	mov    ebp,0x4
6402a9c1:	push   0x6402cc7c
6402a9c6:	push   ebp
6402a9c7:	push   0x6402cc74
6402a9cc:	mov    ds:0x64048a6c,eax
6402a9d1:	mov    DWORD PTR ds:0x64048a70,ebp
6402a9d7:	call   0x64002e90
6402a9dc:	push   0x6402cc4c
6402a9e1:	push   esi
6402a9e2:	push   0x6402cc44
6402a9e7:	mov    ds:0x64048a74,eax
6402a9ec:	mov    DWORD PTR ds:0x64048a78,esi
6402a9f2:	call   0x64002e90
6402a9f7:	push   0x6402cc08
6402a9fc:	push   esi
6402a9fd:	push   0x6402cc00
6402aa02:	mov    ds:0x64048a7c,eax
6402aa07:	mov    DWORD PTR ds:0x64048a80,esi
6402aa0d:	call   0x64002e90
6402aa12:	mov    ds:0x64048a84,eax
6402aa17:	mov    DWORD PTR ds:0x64048a88,esi
6402aa1d:	push   0x6402cbd0
6402aa22:	push   esi
6402aa23:	push   0x6402cbc8
6402aa28:	call   0x64002e90
6402aa2d:	push   0x6402cba4
6402aa32:	push   ebx
6402aa33:	push   0x6402cb9c
6402aa38:	mov    ds:0x64048a8c,eax
6402aa3d:	mov    DWORD PTR ds:0x64048a90,ebx
6402aa43:	call   0x64002e90
6402aa48:	push   0x6402cb60
6402aa4d:	push   esi
6402aa4e:	push   0x6402cb58
6402aa53:	mov    ds:0x64048a94,eax
6402aa58:	mov    DWORD PTR ds:0x64048a98,esi
6402aa5e:	call   0x64002e90
6402aa63:	add    esp,0x48
6402aa66:	push   0x6402cb20
6402aa6b:	push   ebx
6402aa6c:	push   0x6402cb18
6402aa71:	mov    ds:0x64048a9c,eax
6402aa76:	mov    DWORD PTR ds:0x64048aa0,ebx
6402aa7c:	call   0x64002e90
6402aa81:	push   0x6402cadc
6402aa86:	push   esi
6402aa87:	push   0x6402cad4
6402aa8c:	mov    ds:0x64048aa4,eax
6402aa91:	mov    DWORD PTR ds:0x64048aa8,esi
6402aa97:	call   0x64002e90
6402aa9c:	push   0x6402caa0
6402aaa1:	push   ebx
6402aaa2:	push   0x6402ca98
6402aaa7:	mov    ds:0x64048aac,eax
6402aaac:	mov    DWORD PTR ds:0x64048ab0,ebx
6402aab2:	call   0x64002e90
6402aab7:	push   0x6402ca58
6402aabc:	push   esi
6402aabd:	push   0x6402ca4c
6402aac2:	mov    ds:0x64048ab4,eax
6402aac7:	mov    DWORD PTR ds:0x64048ab8,esi
6402aacd:	call   0x64002e90
6402aad2:	push   0x6402ca18
6402aad7:	push   ebx
6402aad8:	push   0x6402ca10
6402aadd:	mov    ds:0x64048abc,eax
6402aae2:	mov    DWORD PTR ds:0x64048ac0,ebx
6402aae8:	call   0x64002e90
6402aaed:	push   0x6402c9ec
6402aaf2:	push   ebx
6402aaf3:	push   0x6402c9e4
6402aaf8:	mov    ds:0x64048ac4,eax
6402aafd:	mov    DWORD PTR ds:0x64048ac8,ebx
6402ab03:	call   0x64002e90
6402ab08:	add    esp,0x48
6402ab0b:	push   0x6402c9b0
6402ab10:	push   esi
6402ab11:	push   0x6402c9a8
6402ab16:	mov    ds:0x64048acc,eax
6402ab1b:	mov    DWORD PTR ds:0x64048ad0,esi
6402ab21:	call   0x64002e90
6402ab26:	push   0x6402c970
6402ab2b:	push   esi
6402ab2c:	push   0x6402c968
6402ab31:	mov    ds:0x64048ad4,eax
6402ab36:	mov    DWORD PTR ds:0x64048ad8,esi
6402ab3c:	call   0x64002e90
6402ab41:	push   0x6402c92c
6402ab46:	push   ebx
6402ab47:	push   0x6402c924
6402ab4c:	mov    ds:0x64048adc,eax
6402ab51:	mov    DWORD PTR ds:0x64048ae0,ebx
6402ab57:	call   0x64002e90
6402ab5c:	push   0x6402c900
6402ab61:	push   esi
6402ab62:	push   0x6402c8f8
6402ab67:	mov    ds:0x64048ae4,eax
6402ab6c:	mov    DWORD PTR ds:0x64048ae8,esi
6402ab72:	call   0x64002e90
6402ab77:	mov    ds:0x64048aec,eax
6402ab7c:	mov    DWORD PTR ds:0x64048af0,ebx
6402ab82:	push   0x6402c8d0
6402ab87:	push   ebx
6402ab88:	push   0x6402c8c8
6402ab8d:	call   0x64002e90
6402ab92:	push   0x6402c8a0
6402ab97:	push   ebx
6402ab98:	push   0x6402c898
6402ab9d:	mov    ds:0x64048af4,eax
6402aba2:	mov    DWORD PTR ds:0x64048af8,ebx
6402aba8:	call   0x64002e90
6402abad:	add    esp,0x48
6402abb0:	push   0x6402c870
6402abb5:	push   ebx
6402abb6:	push   0x6402c868
6402abbb:	mov    ds:0x64048afc,eax
6402abc0:	mov    DWORD PTR ds:0x64048b00,ebx
6402abc6:	call   0x64002e90
6402abcb:	push   0x6402c844
6402abd0:	push   esi
6402abd1:	push   0x6402c83c
6402abd6:	mov    ds:0x64048b04,eax
6402abdb:	mov    DWORD PTR ds:0x64048b08,esi
6402abe1:	call   0x64002e90
6402abe6:	push   0x6402c7fc
6402abeb:	push   esi
6402abec:	push   0x6402c7f4
6402abf1:	mov    ds:0x64048b0c,eax
6402abf6:	mov    DWORD PTR ds:0x64048b10,esi
6402abfc:	call   0x64002e90
6402ac01:	push   0x6402c7c0
6402ac06:	push   ebx
6402ac07:	push   0x6402c7b8
6402ac0c:	mov    ds:0x64048b14,eax
6402ac11:	mov    DWORD PTR ds:0x64048b18,ebx
6402ac17:	call   0x64002e90
6402ac1c:	push   0x6402c780
6402ac21:	push   esi
6402ac22:	push   0x6402c778
6402ac27:	mov    ds:0x64048b1c,eax
6402ac2c:	mov    DWORD PTR ds:0x64048b20,esi
6402ac32:	call   0x64002e90
6402ac37:	push   0x6402c74c
6402ac3c:	push   ebx
6402ac3d:	push   0x6402c744
6402ac42:	mov    ds:0x64048b24,eax
6402ac47:	mov    DWORD PTR ds:0x64048b28,ebx
6402ac4d:	call   0x64002e90
6402ac52:	add    esp,0x48
6402ac55:	push   0x6402c710
6402ac5a:	push   ebp
6402ac5b:	push   0x6402c708
6402ac60:	mov    ds:0x64048b2c,eax
6402ac65:	mov    DWORD PTR ds:0x64048b30,ebp
6402ac6b:	call   0x64002e90
6402ac70:	push   0x6402c6d8
6402ac75:	push   ebx
6402ac76:	push   0x6402c6d0
6402ac7b:	mov    ds:0x64048b34,eax
6402ac80:	mov    DWORD PTR ds:0x64048b38,ebx
6402ac86:	call   0x64002e90
6402ac8b:	push   0x6402c6ac
6402ac90:	push   edi
6402ac91:	push   0x6402c6a4
6402ac96:	mov    ds:0x64048b3c,eax
6402ac9b:	mov    DWORD PTR ds:0x64048b40,edi
6402aca1:	call   0x64002e90
6402aca6:	push   0x6402c668
6402acab:	push   esi
6402acac:	push   0x6402c660
6402acb1:	mov    ds:0x64048b44,eax
6402acb6:	mov    DWORD PTR ds:0x64048b48,esi
6402acbc:	call   0x64002e90
6402acc1:	mov    edi,0x3
6402acc6:	push   0x6402c62c
6402accb:	push   edi
6402accc:	push   0x6402c628
6402acd1:	mov    ds:0x64048b4c,eax
6402acd6:	mov    DWORD PTR ds:0x64048b50,edi
6402acdc:	call   0x64002e90
6402ace1:	mov    ds:0x64048b54,eax
6402ace6:	mov    DWORD PTR ds:0x64048b58,edi
6402acec:	push   0x6402c5f4
6402acf1:	push   edi
6402acf2:	push   0x6402c5f0
6402acf7:	call   0x64002e90
6402acfc:	add    esp,0x48
6402acff:	push   0x6402c5b8
6402ad04:	push   edi
6402ad05:	push   0x6402c5b4
6402ad0a:	mov    ds:0x64048b5c,eax
6402ad0f:	mov    DWORD PTR ds:0x64048b60,edi
6402ad15:	call   0x64002e90
6402ad1a:	push   0x6402c578
6402ad1f:	push   edi
6402ad20:	push   0x6402c574
6402ad25:	mov    ds:0x64048b64,eax
6402ad2a:	mov    DWORD PTR ds:0x64048b68,edi
6402ad30:	call   0x64002e90
6402ad35:	push   0x6402c540
6402ad3a:	push   ebp
6402ad3b:	push   0x6402c538
6402ad40:	mov    ds:0x64048b6c,eax
6402ad45:	mov    DWORD PTR ds:0x64048b70,ebp
6402ad4b:	call   0x64002e90
6402ad50:	push   0x6402c508
6402ad55:	push   ebp
6402ad56:	push   0x6402c500
6402ad5b:	mov    ds:0x64048b74,eax
6402ad60:	mov    DWORD PTR ds:0x64048b78,ebp
6402ad66:	call   0x64002e90
6402ad6b:	push   0x6402c4c0
6402ad70:	push   esi
6402ad71:	push   0x6402c4b4
6402ad76:	mov    ds:0x64048b7c,eax
6402ad7b:	mov    DWORD PTR ds:0x64048b80,esi
6402ad81:	call   0x64002e90
6402ad86:	push   0x6402c484
6402ad8b:	push   ebx
6402ad8c:	push   0x6402c47c
6402ad91:	mov    ds:0x64048b84,eax
6402ad96:	mov    DWORD PTR ds:0x64048b88,ebx
6402ad9c:	call   0x64002e90
6402ada1:	add    esp,0x48
6402ada4:	pop    edi
6402ada5:	pop    esi
6402ada6:	pop    ebp
6402ada7:	mov    ds:0x64048b8c,eax
6402adac:	pop    ebx
6402adad:	ret    
6402adae:	int3   
6402adaf:	int3   
6402adb0:	int3   
6402adb1:	int3   
6402adb2:	int3   
6402adb3:	int3   
6402adb4:	int3   
6402adb5:	int3   
6402adb6:	int3   
6402adb7:	int3   
6402adb8:	int3   
6402adb9:	int3   
6402adba:	int3   
6402adbb:	int3   
6402adbc:	int3   
6402adbd:	int3   
6402adbe:	int3   
6402adbf:	int3   
6402adc0:	push   ebx
6402adc1:	push   esi
6402adc2:	push   edi
6402adc3:	push   0x6403c7d8
6402adc8:	mov    esi,0x3
6402adcd:	push   esi
6402adce:	push   0x6403c7d4
6402add3:	call   0x64002e90
6402add8:	push   0x6403c798
6402addd:	push   esi
6402adde:	push   0x6403c794
6402ade3:	mov    ds:0x64046844,eax
6402ade8:	mov    DWORD PTR ds:0x64046848,esi
6402adee:	call   0x64002e90
6402adf3:	push   0x6403c764
6402adf8:	push   esi
6402adf9:	push   0x6403c760
6402adfe:	mov    ds:0x6404684c,eax
6402ae03:	mov    DWORD PTR ds:0x64046850,esi
6402ae09:	call   0x64002e90
6402ae0e:	push   0x6403c728
6402ae13:	push   esi
6402ae14:	push   0x6403c724
6402ae19:	mov    ds:0x64046854,eax
6402ae1e:	mov    DWORD PTR ds:0x64046858,esi
6402ae24:	call   0x64002e90
6402ae29:	push   0x6403c6e8
6402ae2e:	push   esi
6402ae2f:	push   0x6403c6e4
6402ae34:	mov    ds:0x6404685c,eax
6402ae39:	mov    DWORD PTR ds:0x64046860,esi
6402ae3f:	call   0x64002e90
6402ae44:	push   0x6403c6a8
6402ae49:	push   esi
6402ae4a:	push   0x6403c6a4
6402ae4f:	mov    ds:0x64046864,eax
6402ae54:	mov    DWORD PTR ds:0x64046868,esi
6402ae5a:	call   0x64002e90
6402ae5f:	add    esp,0x48
6402ae62:	push   0x6403c668
6402ae67:	push   esi
6402ae68:	push   0x6403c664
6402ae6d:	mov    ds:0x6404686c,eax
6402ae72:	mov    DWORD PTR ds:0x64046870,esi
6402ae78:	call   0x64002e90
6402ae7d:	push   0x6403c63c
6402ae82:	push   esi
6402ae83:	push   0x6403c638
6402ae88:	mov    ds:0x64046874,eax
6402ae8d:	mov    DWORD PTR ds:0x64046878,esi
6402ae93:	call   0x64002e90
6402ae98:	mov    ebx,0x2
6402ae9d:	push   0x6403c610
6402aea2:	push   ebx
6402aea3:	push   0x6403c60c
6402aea8:	mov    ds:0x6404687c,eax
6402aead:	mov    DWORD PTR ds:0x64046880,ebx
6402aeb3:	call   0x64002e90
6402aeb8:	push   0x6403c5d4
6402aebd:	push   ebx
6402aebe:	push   0x6403c5d0
6402aec3:	mov    ds:0x64046884,eax
6402aec8:	mov    DWORD PTR ds:0x64046888,ebx
6402aece:	call   0x64002e90
6402aed3:	push   0x6403c590
6402aed8:	push   esi
6402aed9:	push   0x6403c58c
6402aede:	mov    ds:0x6404688c,eax
6402aee3:	mov    DWORD PTR ds:0x64046890,esi
6402aee9:	call   0x64002e90
6402aeee:	push   0x6403c568
6402aef3:	push   esi
6402aef4:	push   0x6403c564
6402aef9:	mov    ds:0x64046894,eax
6402aefe:	mov    DWORD PTR ds:0x64046898,esi
6402af04:	call   0x64002e90
6402af09:	add    esp,0x48
6402af0c:	push   0x6403c540
6402af11:	mov    ds:0x6404689c,eax
6402af16:	mov    DWORD PTR ds:0x640468a0,esi
6402af1c:	push   esi
6402af1d:	push   0x6403c53c
6402af22:	call   0x64002e90
6402af27:	push   0x6403c500
6402af2c:	push   esi
6402af2d:	push   0x6403c4fc
6402af32:	mov    ds:0x640468a4,eax
6402af37:	mov    DWORD PTR ds:0x640468a8,esi
6402af3d:	call   0x64002e90
6402af42:	push   0x6403c4bc
6402af47:	push   esi
6402af48:	push   0x6403c4b8
6402af4d:	mov    ds:0x640468ac,eax
6402af52:	mov    DWORD PTR ds:0x640468b0,esi
6402af58:	call   0x64002e90
6402af5d:	push   0x6403c48c
6402af62:	push   esi
6402af63:	push   0x6403c488
6402af68:	mov    ds:0x640468b4,eax
6402af6d:	mov    DWORD PTR ds:0x640468b8,esi
6402af73:	call   0x64002e90
6402af78:	push   0x6403c45c
6402af7d:	push   esi
6402af7e:	push   0x6403c458
6402af83:	mov    ds:0x640468bc,eax
6402af88:	mov    DWORD PTR ds:0x640468c0,esi
6402af8e:	call   0x64002e90
6402af93:	push   0x6403c41c
6402af98:	push   esi
6402af99:	push   0x6403c418
6402af9e:	mov    ds:0x640468c4,eax
6402afa3:	mov    DWORD PTR ds:0x640468c8,esi
6402afa9:	call   0x64002e90
6402afae:	add    esp,0x48
6402afb1:	push   0x6403c3dc
6402afb6:	push   esi
6402afb7:	push   0x6403c3d8
6402afbc:	mov    ds:0x640468cc,eax
6402afc1:	mov    DWORD PTR ds:0x640468d0,esi
6402afc7:	call   0x64002e90
6402afcc:	push   0x6403c398
6402afd1:	push   esi
6402afd2:	push   0x6403c394
6402afd7:	mov    ds:0x640468d4,eax
6402afdc:	mov    DWORD PTR ds:0x640468d8,esi
6402afe2:	call   0x64002e90
6402afe7:	push   0x6403c358
6402afec:	push   esi
6402afed:	push   0x6403c354
6402aff2:	mov    ds:0x640468dc,eax
6402aff7:	mov    DWORD PTR ds:0x640468e0,esi
6402affd:	call   0x64002e90
6402b002:	push   0x6403c324
6402b007:	push   esi
6402b008:	push   0x6403c320
6402b00d:	mov    ds:0x640468e4,eax
6402b012:	mov    DWORD PTR ds:0x640468e8,esi
6402b018:	call   0x64002e90
6402b01d:	push   0x6403c2e0
6402b022:	push   esi
6402b023:	push   0x6403c2dc
6402b028:	mov    ds:0x640468ec,eax
6402b02d:	mov    DWORD PTR ds:0x640468f0,esi
6402b033:	call   0x64002e90
6402b038:	push   0x6403c2ac
6402b03d:	push   esi
6402b03e:	push   0x6403c2a8
6402b043:	mov    ds:0x640468f4,eax
6402b048:	mov    DWORD PTR ds:0x640468f8,esi
6402b04e:	call   0x64002e90
6402b053:	add    esp,0x48
6402b056:	push   0x6403c284
6402b05b:	push   esi
6402b05c:	push   0x6403c280
6402b061:	mov    ds:0x640468fc,eax
6402b066:	mov    DWORD PTR ds:0x64046900,esi
6402b06c:	call   0x64002e90
6402b071:	push   0x6403c25c
6402b076:	push   esi
6402b077:	mov    ds:0x64046904,eax
6402b07c:	mov    DWORD PTR ds:0x64046908,esi
6402b082:	push   0x6403c258
6402b087:	call   0x64002e90
6402b08c:	mov    edi,0x4
6402b091:	push   0x6403c224
6402b096:	push   edi
6402b097:	push   0x6403c21c
6402b09c:	mov    ds:0x6404690c,eax
6402b0a1:	mov    DWORD PTR ds:0x64046910,edi
6402b0a7:	call   0x64002e90
6402b0ac:	push   0x6403c1e8
6402b0b1:	push   edi
6402b0b2:	push   0x6403c1e0
6402b0b7:	mov    ds:0x64046914,eax
6402b0bc:	mov    DWORD PTR ds:0x64046918,edi
6402b0c2:	call   0x64002e90
6402b0c7:	push   0x6403c1bc
6402b0cc:	push   edi
6402b0cd:	push   0x6403c1b4
6402b0d2:	mov    ds:0x6404691c,eax
6402b0d7:	mov    DWORD PTR ds:0x64046920,edi
6402b0dd:	call   0x64002e90
6402b0e2:	push   0x6403c17c
6402b0e7:	push   edi
6402b0e8:	push   0x6403c174
6402b0ed:	mov    ds:0x64046924,eax
6402b0f2:	mov    DWORD PTR ds:0x64046928,edi
6402b0f8:	call   0x64002e90
6402b0fd:	add    esp,0x48
6402b100:	push   0x6403c13c
6402b105:	push   edi
6402b106:	push   0x6403c134
6402b10b:	mov    ds:0x6404692c,eax
6402b110:	mov    DWORD PTR ds:0x64046930,edi
6402b116:	call   0x64002e90
6402b11b:	push   0x6403c0f4
6402b120:	push   edi
6402b121:	push   0x6403c0ec
6402b126:	mov    ds:0x64046934,eax
6402b12b:	mov    DWORD PTR ds:0x64046938,edi
6402b131:	call   0x64002e90
6402b136:	push   0x6403c0ac
6402b13b:	push   ebx
6402b13c:	push   0x6403c0a8
6402b141:	mov    ds:0x6404693c,eax
6402b146:	mov    DWORD PTR ds:0x64046940,ebx
6402b14c:	call   0x64002e90
6402b151:	push   0x6403c078
6402b156:	push   ebx
6402b157:	push   0x6403c074
6402b15c:	mov    ds:0x64046944,eax
6402b161:	mov    DWORD PTR ds:0x64046948,ebx
6402b167:	call   0x64002e90
6402b16c:	push   0x6403c034
6402b171:	push   ebx
6402b172:	push   0x6403c030
6402b177:	mov    ds:0x6404694c,eax
6402b17c:	mov    DWORD PTR ds:0x64046950,ebx
6402b182:	call   0x64002e90
6402b187:	push   0x6403bff0
6402b18c:	push   ebx
6402b18d:	push   0x6403bfec
6402b192:	mov    ds:0x64046954,eax
6402b197:	mov    DWORD PTR ds:0x64046958,ebx
6402b19d:	call   0x64002e90
6402b1a2:	add    esp,0x48
6402b1a5:	push   0x6403bfac
6402b1aa:	push   ebx
6402b1ab:	push   0x6403bfa8
6402b1b0:	mov    ds:0x6404695c,eax
6402b1b5:	mov    DWORD PTR ds:0x64046960,ebx
6402b1bb:	call   0x64002e90
6402b1c0:	push   0x6403bf78
6402b1c5:	push   ebx
6402b1c6:	push   0x6403bf74
6402b1cb:	mov    ds:0x64046964,eax
6402b1d0:	mov    DWORD PTR ds:0x64046968,ebx
6402b1d6:	call   0x64002e90
6402b1db:	push   0x6403bf38
6402b1e0:	push   ebx
6402b1e1:	mov    ds:0x6404696c,eax
6402b1e6:	mov    DWORD PTR ds:0x64046970,ebx
6402b1ec:	push   0x6403bf34
6402b1f1:	call   0x64002e90
6402b1f6:	push   0x6403bf08
6402b1fb:	push   ebx
6402b1fc:	push   0x6403bf04
6402b201:	mov    ds:0x64046974,eax
6402b206:	mov    DWORD PTR ds:0x64046978,ebx
6402b20c:	call   0x64002e90
6402b211:	push   0x6403bed0
6402b216:	push   esi
6402b217:	push   0x6403becc
6402b21c:	mov    ds:0x6404697c,eax
6402b221:	mov    DWORD PTR ds:0x64046980,esi
6402b227:	call   0x64002e90
6402b22c:	push   0x6403be94
6402b231:	push   esi
6402b232:	push   0x6403be90
6402b237:	mov    ds:0x64046984,eax
6402b23c:	mov    DWORD PTR ds:0x64046988,esi
6402b242:	call   0x64002e90
6402b247:	add    esp,0x48
6402b24a:	push   0x6403be58
6402b24f:	push   edi
6402b250:	push   0x6403be50
6402b255:	mov    ds:0x6404698c,eax
6402b25a:	mov    DWORD PTR ds:0x64046990,edi
6402b260:	call   0x64002e90
6402b265:	push   0x6403be24
6402b26a:	push   edi
6402b26b:	push   0x6403be1c
6402b270:	mov    ds:0x64046994,eax
6402b275:	mov    DWORD PTR ds:0x64046998,edi
6402b27b:	call   0x64002e90
6402b280:	push   0x6403bddc
6402b285:	push   edi
6402b286:	push   0x6403bdd4
6402b28b:	mov    ds:0x6404699c,eax
6402b290:	mov    DWORD PTR ds:0x640469a0,edi
6402b296:	call   0x64002e90
6402b29b:	push   0x6403bd9c
6402b2a0:	push   edi
6402b2a1:	push   0x6403bd94
6402b2a6:	mov    ds:0x640469a4,eax
6402b2ab:	mov    DWORD PTR ds:0x640469a8,edi
6402b2b1:	call   0x64002e90
6402b2b6:	push   0x6403bd6c
6402b2bb:	push   edi
6402b2bc:	push   0x6403bd64
6402b2c1:	mov    ds:0x640469ac,eax
6402b2c6:	mov    DWORD PTR ds:0x640469b0,edi
6402b2cc:	call   0x64002e90
6402b2d1:	push   0x6403bd38
6402b2d6:	push   edi
6402b2d7:	push   0x6403bd30
6402b2dc:	mov    ds:0x640469b4,eax
6402b2e1:	mov    DWORD PTR ds:0x640469b8,edi
6402b2e7:	call   0x64002e90
6402b2ec:	add    esp,0x48
6402b2ef:	push   0x6403bcf0
6402b2f4:	push   ebx
6402b2f5:	push   0x6403bcec
6402b2fa:	mov    ds:0x640469bc,eax
6402b2ff:	mov    DWORD PTR ds:0x640469c0,ebx
6402b305:	call   0x64002e90
6402b30a:	push   0x6403bcb0
6402b30f:	push   ebx
6402b310:	push   0x6403bcac
6402b315:	mov    ds:0x640469c4,eax
6402b31a:	mov    DWORD PTR ds:0x640469c8,ebx
6402b320:	call   0x64002e90
6402b325:	push   0x6403bc78
6402b32a:	push   ebx
6402b32b:	push   0x6403bc74
6402b330:	mov    ds:0x640469cc,eax
6402b335:	mov    DWORD PTR ds:0x640469d0,ebx
6402b33b:	call   0x64002e90
6402b340:	push   0x6403bc3c
6402b345:	push   ebx
6402b346:	push   0x6403bc38
6402b34b:	mov    ds:0x640469d4,eax
6402b350:	mov    DWORD PTR ds:0x640469d8,ebx
6402b356:	call   0x64002e90
6402b35b:	push   0x6403bc10
6402b360:	push   ebx
6402b361:	push   0x6403bc0c
6402b366:	mov    ds:0x640469dc,eax
6402b36b:	mov    DWORD PTR ds:0x640469e0,ebx
6402b371:	call   0x64002e90
6402b376:	push   0x6403bbd4
6402b37b:	push   ebx
6402b37c:	push   0x6403bbd0
6402b381:	mov    ds:0x640469e4,eax
6402b386:	mov    DWORD PTR ds:0x640469e8,ebx
6402b38c:	call   0x64002e90
6402b391:	add    esp,0x48
6402b394:	push   0x6403bb90
6402b399:	push   ebx
6402b39a:	push   0x6403bb8c
6402b39f:	mov    ds:0x640469ec,eax
6402b3a4:	mov    DWORD PTR ds:0x640469f0,ebx
6402b3aa:	call   0x64002e90
6402b3af:	push   0x6403bb64
6402b3b4:	push   ebx
6402b3b5:	push   0x6403bb60
6402b3ba:	mov    ds:0x640469f4,eax
6402b3bf:	mov    DWORD PTR ds:0x640469f8,ebx
6402b3c5:	call   0x64002e90
6402b3ca:	push   0x6403bb2c
6402b3cf:	push   esi
6402b3d0:	push   0x6403bb28
6402b3d5:	mov    ds:0x640469fc,eax
6402b3da:	mov    DWORD PTR ds:0x64046a00,esi
6402b3e0:	call   0x64002e90
6402b3e5:	push   0x6403baec
6402b3ea:	push   esi
6402b3eb:	push   0x6403bae8
6402b3f0:	mov    ds:0x64046a04,eax
6402b3f5:	mov    DWORD PTR ds:0x64046a08,esi
6402b3fb:	call   0x64002e90
6402b400:	push   0x6403baac
6402b405:	push   edi
6402b406:	push   0x6403baa4
6402b40b:	mov    ds:0x64046a0c,eax
6402b410:	mov    DWORD PTR ds:0x64046a10,edi
6402b416:	call   0x64002e90
6402b41b:	push   0x6403ba70
6402b420:	push   edi
6402b421:	push   0x6403ba68
6402b426:	mov    ds:0x64046a14,eax
6402b42b:	mov    DWORD PTR ds:0x64046a18,edi
6402b431:	call   0x64002e90
6402b436:	add    esp,0x48
6402b439:	push   0x6403ba38
6402b43e:	push   edi
6402b43f:	push   0x6403ba30
6402b444:	mov    ds:0x64046a1c,eax
6402b449:	mov    DWORD PTR ds:0x64046a20,edi
6402b44f:	call   0x64002e90
6402b454:	push   0x6403ba08
6402b459:	push   edi
6402b45a:	push   0x6403ba00
6402b45f:	mov    ds:0x64046a24,eax
6402b464:	mov    DWORD PTR ds:0x64046a28,edi
6402b46a:	call   0x64002e90
6402b46f:	push   0x6403b9c4
6402b474:	push   edi
6402b475:	push   0x6403b9bc
6402b47a:	mov    ds:0x64046a2c,eax
6402b47f:	mov    DWORD PTR ds:0x64046a30,edi
6402b485:	call   0x64002e90
6402b48a:	push   0x6403b990
6402b48f:	push   edi
6402b490:	push   0x6403b988
6402b495:	mov    ds:0x64046a34,eax
6402b49a:	mov    DWORD PTR ds:0x64046a38,edi
6402b4a0:	call   0x64002e90
6402b4a5:	push   0x6403b94c
6402b4aa:	push   esi
6402b4ab:	push   0x6403b948
6402b4b0:	mov    ds:0x64046a3c,eax
6402b4b5:	mov    DWORD PTR ds:0x64046a40,esi
6402b4bb:	call   0x64002e90
6402b4c0:	mov    ds:0x64046a44,eax
6402b4c5:	push   0x6403b914
6402b4ca:	push   esi
6402b4cb:	push   0x6403b910
6402b4d0:	mov    DWORD PTR ds:0x64046a48,esi
6402b4d6:	call   0x64002e90
6402b4db:	add    esp,0x48
6402b4de:	push   0x6403b8d4
6402b4e3:	push   esi
6402b4e4:	push   0x6403b8d0
6402b4e9:	mov    ds:0x64046a4c,eax
6402b4ee:	mov    DWORD PTR ds:0x64046a50,esi
6402b4f4:	call   0x64002e90
6402b4f9:	push   0x6403b8a4
6402b4fe:	push   esi
6402b4ff:	push   0x6403b8a0
6402b504:	mov    ds:0x64046a54,eax
6402b509:	mov    DWORD PTR ds:0x64046a58,esi
6402b50f:	call   0x64002e90
6402b514:	push   0x6403b87c
6402b519:	push   ebx
6402b51a:	push   0x6403b878
6402b51f:	mov    ds:0x64046a5c,eax
6402b524:	mov    DWORD PTR ds:0x64046a60,ebx
6402b52a:	call   0x64002e90
6402b52f:	push   0x6403b838
6402b534:	push   ebx
6402b535:	push   0x6403b834
6402b53a:	mov    ds:0x64046a64,eax
6402b53f:	mov    DWORD PTR ds:0x64046a68,ebx
6402b545:	call   0x64002e90
6402b54a:	push   0x6403b800
6402b54f:	push   ebx
6402b550:	push   0x6403b7fc
6402b555:	mov    ds:0x64046a6c,eax
6402b55a:	mov    DWORD PTR ds:0x64046a70,ebx
6402b560:	call   0x64002e90
6402b565:	push   0x6403b7d0
6402b56a:	push   ebx
6402b56b:	push   0x6403b7cc
6402b570:	mov    ds:0x64046a74,eax
6402b575:	mov    DWORD PTR ds:0x64046a78,ebx
6402b57b:	call   0x64002e90
6402b580:	add    esp,0x48
6402b583:	push   0x6403b7a8
6402b588:	push   ebx
6402b589:	push   0x6403b7a4
6402b58e:	mov    ds:0x64046a7c,eax
6402b593:	mov    DWORD PTR ds:0x64046a80,ebx
6402b599:	call   0x64002e90
6402b59e:	push   0x6403b768
6402b5a3:	push   ebx
6402b5a4:	push   0x6403b764
6402b5a9:	mov    ds:0x64046a84,eax
6402b5ae:	mov    DWORD PTR ds:0x64046a88,ebx
6402b5b4:	call   0x64002e90
6402b5b9:	push   0x6403b72c
6402b5be:	push   esi
6402b5bf:	push   0x6403b728
6402b5c4:	mov    ds:0x64046a8c,eax
6402b5c9:	mov    DWORD PTR ds:0x64046a90,esi
6402b5cf:	call   0x64002e90
6402b5d4:	push   0x6403b704
6402b5d9:	push   esi
6402b5da:	push   0x6403b700
6402b5df:	mov    ds:0x64046a94,eax
6402b5e4:	mov    DWORD PTR ds:0x64046a98,esi
6402b5ea:	call   0x64002e90
6402b5ef:	push   0x6403b6c0
6402b5f4:	push   esi
6402b5f5:	push   0x6403b6b8
6402b5fa:	mov    ds:0x64046a9c,eax
6402b5ff:	mov    DWORD PTR ds:0x64046aa0,esi
6402b605:	call   0x64002e90
6402b60a:	push   0x6403b684
6402b60f:	push   esi
6402b610:	push   0x6403b680
6402b615:	mov    ds:0x64046aa4,eax
6402b61a:	mov    DWORD PTR ds:0x64046aa8,esi
6402b620:	call   0x64002e90
6402b625:	add    esp,0x48
6402b628:	mov    ds:0x64046aac,eax
6402b62d:	push   0x6403b644
6402b632:	push   esi
6402b633:	push   0x6403b640
6402b638:	mov    DWORD PTR ds:0x64046ab0,esi
6402b63e:	call   0x64002e90
6402b643:	push   0x6403b600
6402b648:	push   esi
6402b649:	push   0x6403b5fc
6402b64e:	mov    ds:0x64046ab4,eax
6402b653:	mov    DWORD PTR ds:0x64046ab8,esi
6402b659:	call   0x64002e90
6402b65e:	push   0x6403b5bc
6402b663:	push   esi
6402b664:	push   0x6403b5b8
6402b669:	mov    ds:0x64046abc,eax
6402b66e:	mov    DWORD PTR ds:0x64046ac0,esi
6402b674:	call   0x64002e90
6402b679:	push   0x6403b57c
6402b67e:	push   esi
6402b67f:	push   0x6403b578
6402b684:	mov    ds:0x64046ac4,eax
6402b689:	mov    DWORD PTR ds:0x64046ac8,esi
6402b68f:	call   0x64002e90
6402b694:	push   0x6403b54c
6402b699:	push   esi
6402b69a:	push   0x6403b548
6402b69f:	mov    ds:0x64046acc,eax
6402b6a4:	mov    DWORD PTR ds:0x64046ad0,esi
6402b6aa:	call   0x64002e90
6402b6af:	push   0x6403b510
6402b6b4:	push   esi
6402b6b5:	push   0x6403b50c
6402b6ba:	mov    ds:0x64046ad4,eax
6402b6bf:	mov    DWORD PTR ds:0x64046ad8,esi
6402b6c5:	call   0x64002e90
6402b6ca:	add    esp,0x48
6402b6cd:	push   0x6403b4d0
6402b6d2:	push   esi
6402b6d3:	push   0x6403b4cc
6402b6d8:	mov    ds:0x64046adc,eax
6402b6dd:	mov    DWORD PTR ds:0x64046ae0,esi
6402b6e3:	call   0x64002e90
6402b6e8:	push   0x6403b4a4
6402b6ed:	push   esi
6402b6ee:	push   0x6403b4a0
6402b6f3:	mov    ds:0x64046ae4,eax
6402b6f8:	mov    DWORD PTR ds:0x64046ae8,esi
6402b6fe:	call   0x64002e90
6402b703:	push   0x6403b47c
6402b708:	push   esi
6402b709:	push   0x6403b478
6402b70e:	mov    ds:0x64046aec,eax
6402b713:	mov    DWORD PTR ds:0x64046af0,esi
6402b719:	call   0x64002e90
6402b71e:	push   0x6403b43c
6402b723:	push   esi
6402b724:	push   0x6403b438
6402b729:	mov    ds:0x64046af4,eax
6402b72e:	mov    DWORD PTR ds:0x64046af8,esi
6402b734:	call   0x64002e90
6402b739:	push   0x6403b408
6402b73e:	push   esi
6402b73f:	push   0x6403b404
6402b744:	mov    ds:0x64046afc,eax
6402b749:	mov    DWORD PTR ds:0x64046b00,esi
6402b74f:	call   0x64002e90
6402b754:	push   0x6403b3e0
6402b759:	push   esi
6402b75a:	push   0x6403b3dc
6402b75f:	mov    ds:0x64046b04,eax
6402b764:	mov    DWORD PTR ds:0x64046b08,esi
6402b76a:	call   0x64002e90
6402b76f:	add    esp,0x48
6402b772:	push   0x6403b39c
6402b777:	push   esi
6402b778:	push   0x6403b398
6402b77d:	mov    ds:0x64046b0c,eax
6402b782:	mov    DWORD PTR ds:0x64046b10,esi
6402b788:	call   0x64002e90
6402b78d:	mov    ds:0x64046b14,eax
6402b792:	mov    DWORD PTR ds:0x64046b18,edi
6402b798:	push   0x6403b360
6402b79d:	push   edi
6402b79e:	push   0x6403b358
6402b7a3:	call   0x64002e90
6402b7a8:	push   0x6403b328
6402b7ad:	push   edi
6402b7ae:	push   0x6403b320
6402b7b3:	mov    ds:0x64046b1c,eax
6402b7b8:	mov    DWORD PTR ds:0x64046b20,edi
6402b7be:	call   0x64002e90
6402b7c3:	push   0x6403b2f8
6402b7c8:	push   edi
6402b7c9:	push   0x6403b2f0
6402b7ce:	mov    ds:0x64046b24,eax
6402b7d3:	mov    DWORD PTR ds:0x64046b28,edi
6402b7d9:	call   0x64002e90
6402b7de:	push   0x6403b2cc
6402b7e3:	push   edi
6402b7e4:	push   0x6403b2c4
6402b7e9:	mov    ds:0x64046b2c,eax
6402b7ee:	mov    DWORD PTR ds:0x64046b30,edi
6402b7f4:	call   0x64002e90
6402b7f9:	push   0x6403b298
6402b7fe:	push   edi
6402b7ff:	push   0x6403b290
6402b804:	mov    ds:0x64046b34,eax
6402b809:	mov    DWORD PTR ds:0x64046b38,edi
6402b80f:	call   0x64002e90
6402b814:	add    esp,0x48
6402b817:	push   0x6403b258
6402b81c:	push   edi
6402b81d:	push   0x6403b250
6402b822:	mov    ds:0x64046b3c,eax
6402b827:	mov    DWORD PTR ds:0x64046b40,edi
6402b82d:	call   0x64002e90
6402b832:	push   0x6403b210
6402b837:	push   edi
6402b838:	push   0x6403b208
6402b83d:	mov    ds:0x64046b44,eax
6402b842:	mov    DWORD PTR ds:0x64046b48,edi
6402b848:	call   0x64002e90
6402b84d:	push   0x6403b1d8
6402b852:	push   edi
6402b853:	push   0x6403b1d0
6402b858:	mov    ds:0x64046b4c,eax
6402b85d:	mov    DWORD PTR ds:0x64046b50,edi
6402b863:	call   0x64002e90
6402b868:	push   0x6403b1a4
6402b86d:	push   edi
6402b86e:	push   0x6403b19c
6402b873:	mov    ds:0x64046b54,eax
6402b878:	mov    DWORD PTR ds:0x64046b58,edi
6402b87e:	call   0x64002e90
6402b883:	push   0x6403b160
6402b888:	push   edi
6402b889:	push   0x6403b158
6402b88e:	mov    ds:0x64046b5c,eax
6402b893:	mov    DWORD PTR ds:0x64046b60,edi
6402b899:	call   0x64002e90
6402b89e:	mov    ebx,0x5
6402b8a3:	push   0x6403b12c
6402b8a8:	push   ebx
6402b8a9:	push   0x6403b124
6402b8ae:	mov    ds:0x64046b64,eax
6402b8b3:	mov    DWORD PTR ds:0x64046b68,ebx
6402b8b9:	call   0x64002e90
6402b8be:	add    esp,0x48
6402b8c1:	push   0x6403b0f0
6402b8c6:	push   ebx
6402b8c7:	push   0x6403b0e8
6402b8cc:	mov    ds:0x64046b6c,eax
6402b8d1:	mov    DWORD PTR ds:0x64046b70,ebx
6402b8d7:	call   0x64002e90
6402b8dc:	push   0x6403b0c0
6402b8e1:	push   ebx
6402b8e2:	push   0x6403b0b8
6402b8e7:	mov    ds:0x64046b74,eax
6402b8ec:	mov    DWORD PTR ds:0x64046b78,ebx
6402b8f2:	call   0x64002e90
6402b8f7:	mov    ds:0x64046b7c,eax
6402b8fc:	mov    DWORD PTR ds:0x64046b80,ebx
6402b902:	push   0x6403b080
6402b907:	push   ebx
6402b908:	push   0x6403b078
6402b90d:	call   0x64002e90
6402b912:	push   0x6403b038
6402b917:	push   ebx
6402b918:	push   0x6403b030
6402b91d:	mov    ds:0x64046b84,eax
6402b922:	mov    DWORD PTR ds:0x64046b88,ebx
6402b928:	call   0x64002e90
6402b92d:	push   0x6403b008
6402b932:	push   ebx
6402b933:	push   0x6403b000
6402b938:	mov    ds:0x64046b8c,eax
6402b93d:	mov    DWORD PTR ds:0x64046b90,ebx
6402b943:	call   0x64002e90
6402b948:	push   0x6403afd4
6402b94d:	push   edi
6402b94e:	push   0x6403afcc
6402b953:	mov    ds:0x64046b94,eax
6402b958:	mov    DWORD PTR ds:0x64046b98,edi
6402b95e:	call   0x64002e90
6402b963:	add    esp,0x48
6402b966:	push   0x6403af90
6402b96b:	push   edi
6402b96c:	push   0x6403af88
6402b971:	mov    ds:0x64046b9c,eax
6402b976:	mov    DWORD PTR ds:0x64046ba0,edi
6402b97c:	call   0x64002e90
6402b981:	push   0x6403af60
6402b986:	push   edi
6402b987:	push   0x6403af58
6402b98c:	mov    ds:0x64046ba4,eax
6402b991:	mov    DWORD PTR ds:0x64046ba8,edi
6402b997:	call   0x64002e90
6402b99c:	push   0x6403af30
6402b9a1:	push   edi
6402b9a2:	push   0x6403af28
6402b9a7:	mov    ds:0x64046bac,eax
6402b9ac:	mov    DWORD PTR ds:0x64046bb0,edi
6402b9b2:	call   0x64002e90
6402b9b7:	push   0x6403aef0
6402b9bc:	push   edi
6402b9bd:	push   0x6403aee8
6402b9c2:	mov    ds:0x64046bb4,eax
6402b9c7:	mov    DWORD PTR ds:0x64046bb8,edi
6402b9cd:	call   0x64002e90
6402b9d2:	push   0x6403aeb0
6402b9d7:	push   edi
6402b9d8:	push   0x6403aea8
6402b9dd:	mov    ds:0x64046bbc,eax
6402b9e2:	mov    DWORD PTR ds:0x64046bc0,edi
6402b9e8:	call   0x64002e90
6402b9ed:	push   0x6403ae68
6402b9f2:	push   edi
6402b9f3:	push   0x6403ae60
6402b9f8:	mov    ds:0x64046bc4,eax
6402b9fd:	mov    DWORD PTR ds:0x64046bc8,edi
6402ba03:	call   0x64002e90
6402ba08:	add    esp,0x48
6402ba0b:	push   0x6403ae30
6402ba10:	push   edi
6402ba11:	push   0x6403ae28
6402ba16:	mov    ds:0x64046bcc,eax
6402ba1b:	mov    DWORD PTR ds:0x64046bd0,edi
6402ba21:	call   0x64002e90
6402ba26:	push   0x6403adec
6402ba2b:	push   edi
6402ba2c:	push   0x6403ade4
6402ba31:	mov    ds:0x64046bd4,eax
6402ba36:	mov    DWORD PTR ds:0x64046bd8,edi
6402ba3c:	call   0x64002e90
6402ba41:	push   0x6403adb4
6402ba46:	push   edi
6402ba47:	push   0x6403adac
6402ba4c:	mov    ds:0x64046bdc,eax
6402ba51:	mov    DWORD PTR ds:0x64046be0,edi
6402ba57:	call   0x64002e90
6402ba5c:	mov    ds:0x64046be4,eax
6402ba61:	mov    DWORD PTR ds:0x64046be8,ebx
6402ba67:	push   0x6403ad88
6402ba6c:	push   ebx
6402ba6d:	push   0x6403ad80
6402ba72:	call   0x64002e90
6402ba77:	push   0x6403ad50
6402ba7c:	push   ebx
6402ba7d:	push   0x6403ad48
6402ba82:	mov    ds:0x64046bec,eax
6402ba87:	mov    DWORD PTR ds:0x64046bf0,ebx
6402ba8d:	call   0x64002e90
6402ba92:	push   0x6403ad14
6402ba97:	push   ebx
6402ba98:	push   0x6403ad0c
6402ba9d:	mov    ds:0x64046bf4,eax
6402baa2:	mov    DWORD PTR ds:0x64046bf8,ebx
6402baa8:	call   0x64002e90
6402baad:	add    esp,0x48
6402bab0:	push   0x6403acd4
6402bab5:	push   ebx
6402bab6:	push   0x6403accc
6402babb:	mov    ds:0x64046bfc,eax
6402bac0:	mov    DWORD PTR ds:0x64046c00,ebx
6402bac6:	call   0x64002e90
6402bacb:	push   0x6403aca8
6402bad0:	push   ebx
6402bad1:	push   0x6403aca0
6402bad6:	mov    ds:0x64046c04,eax
6402badb:	mov    DWORD PTR ds:0x64046c08,ebx
6402bae1:	call   0x64002e90
6402bae6:	push   0x6403ac64
6402baeb:	push   ebx
6402baec:	push   0x6403ac5c
6402baf1:	mov    ds:0x64046c0c,eax
6402baf6:	mov    DWORD PTR ds:0x64046c10,ebx
6402bafc:	call   0x64002e90
6402bb01:	push   0x6403ac30
6402bb06:	push   esi
6402bb07:	push   0x6403ac2c
6402bb0c:	mov    ds:0x64046c14,eax
6402bb11:	mov    DWORD PTR ds:0x64046c18,esi
6402bb17:	call   0x64002e90
6402bb1c:	xor    edi,edi
6402bb1e:	push   0x6403abfc
6402bb23:	push   edi
6402bb24:	push   0x64041a1e
6402bb29:	mov    ds:0x64046c1c,eax
6402bb2e:	mov    DWORD PTR ds:0x64046c20,edi
6402bb34:	call   0x64002e90
6402bb39:	push   0x6403abbc
6402bb3e:	push   esi
6402bb3f:	push   0x6403abb8
6402bb44:	mov    ds:0x64046c24,eax
6402bb49:	mov    DWORD PTR ds:0x64046c28,esi
6402bb4f:	call   0x64002e90
6402bb54:	add    esp,0x48
6402bb57:	push   0x6403ab84
6402bb5c:	push   esi
6402bb5d:	push   0x6403ab80
6402bb62:	mov    ds:0x64046c2c,eax
6402bb67:	mov    DWORD PTR ds:0x64046c30,esi
6402bb6d:	call   0x64002e90
6402bb72:	push   0x6403ab48
6402bb77:	push   esi
6402bb78:	push   0x6403ab44
6402bb7d:	mov    ds:0x64046c34,eax
6402bb82:	mov    DWORD PTR ds:0x64046c38,esi
6402bb88:	call   0x64002e90
6402bb8d:	push   0x6403ab10
6402bb92:	push   edi
6402bb93:	push   0x64041a1e
6402bb98:	mov    ds:0x64046c3c,eax
6402bb9d:	mov    DWORD PTR ds:0x64046c40,edi
6402bba3:	call   0x64002e90
6402bba8:	push   0x6403aad4
6402bbad:	push   edi
6402bbae:	push   0x64041a1e
6402bbb3:	mov    ds:0x64046c44,eax
6402bbb8:	mov    DWORD PTR ds:0x64046c48,edi
6402bbbe:	call   0x64002e90
6402bbc3:	mov    ds:0x64046c4c,eax
6402bbc8:	mov    DWORD PTR ds:0x64046c50,edi
6402bbce:	push   0x6403aa98
6402bbd3:	push   edi
6402bbd4:	push   0x64041a1e
6402bbd9:	call   0x64002e90
6402bbde:	push   0x6403aa60
6402bbe3:	push   esi
6402bbe4:	push   0x6403aa5c
6402bbe9:	mov    ds:0x64046c54,eax
6402bbee:	mov    DWORD PTR ds:0x64046c58,esi
6402bbf4:	call   0x64002e90
6402bbf9:	add    esp,0x48
6402bbfc:	push   0x6403aa30
6402bc01:	push   esi
6402bc02:	push   0x6403aa2c
6402bc07:	mov    ds:0x64046c5c,eax
6402bc0c:	mov    DWORD PTR ds:0x64046c60,esi
6402bc12:	call   0x64002e90
6402bc17:	push   0x6403a9f4
6402bc1c:	push   esi
6402bc1d:	push   0x6403a9f0
6402bc22:	mov    ds:0x64046c64,eax
6402bc27:	mov    DWORD PTR ds:0x64046c68,esi
6402bc2d:	call   0x64002e90
6402bc32:	push   0x6403a9b0
6402bc37:	push   esi
6402bc38:	push   0x6403a9ac
6402bc3d:	mov    ds:0x64046c6c,eax
6402bc42:	mov    DWORD PTR ds:0x64046c70,esi
6402bc48:	call   0x64002e90
6402bc4d:	push   0x6403a984
6402bc52:	push   esi
6402bc53:	push   0x6403a980
6402bc58:	mov    ds:0x64046c74,eax
6402bc5d:	mov    DWORD PTR ds:0x64046c78,esi
6402bc63:	call   0x64002e90
6402bc68:	push   0x6403a948
6402bc6d:	push   edi
6402bc6e:	push   0x64041a1e
6402bc73:	mov    ds:0x64046c7c,eax
6402bc78:	mov    DWORD PTR ds:0x64046c80,edi
6402bc7e:	call   0x64002e90
6402bc83:	push   0x6403a918
6402bc88:	push   edi
6402bc89:	push   0x64041a1e
6402bc8e:	mov    ds:0x64046c84,eax
6402bc93:	mov    DWORD PTR ds:0x64046c88,edi
6402bc99:	call   0x64002e90
6402bc9e:	add    esp,0x48
6402bca1:	push   0x6403a8f0
6402bca6:	push   esi
6402bca7:	push   0x6403a8ec
6402bcac:	mov    ds:0x64046c8c,eax
6402bcb1:	mov    DWORD PTR ds:0x64046c90,esi
6402bcb7:	call   0x64002e90
6402bcbc:	push   0x6403a8b8
6402bcc1:	push   esi
6402bcc2:	push   0x6403a8b4
6402bcc7:	mov    ds:0x64046c94,eax
6402bccc:	mov    DWORD PTR ds:0x64046c98,esi
6402bcd2:	call   0x64002e90
6402bcd7:	add    esp,0x18
6402bcda:	pop    edi
6402bcdb:	pop    esi
6402bcdc:	mov    ds:0x64046c9c,eax
6402bce1:	pop    ebx
6402bce2:	ret    
6402bce3:	push   0x6402be36
6402bce8:	call   0x64013f4a
6402bced:	pop    ecx
6402bcee:	ret    
6402bcef:	mov    ecx,0x64053900
6402bcf4:	call   0x64012f3f
6402bcf9:	push   0x6402be40
6402bcfe:	call   0x64013f4a
6402bd03:	pop    ecx
6402bd04:	ret    
6402bd05:	mov    ecx,0x6405394c
6402bd0a:	call   0x64012f3f
6402bd0f:	push   0x6402be4a
6402bd14:	call   0x64013f4a
6402bd19:	pop    ecx
6402bd1a:	ret    
6402bd1b:	push   0x6402be54
6402bd20:	call   0x64013f4a
6402bd25:	pop    ecx
6402bd26:	ret    
6402bd27:	mov    ecx,0x64053950
6402bd2c:	call   0x64013312
6402bd31:	push   0x6402be5e
6402bd36:	call   0x64013f4a
6402bd3b:	pop    ecx
6402bd3c:	ret    
6402bd3d:	mov    ecx,0x6405398c
6402bd42:	call   0x640132ec
6402bd47:	push   0x6402be68
6402bd4c:	call   0x64013f4a
6402bd51:	pop    ecx
6402bd52:	ret    
6402bd53:	call   DWORD PTR ds:0x6402c1a4
6402bd59:	push   0x6402be72
6402bd5e:	mov    DWORD PTR ds:0x640539b8,0x6403ff98
6402bd68:	mov    ds:0x640539bc,eax
6402bd6d:	mov    BYTE PTR ds:0x640539c0,0x0
6402bd74:	call   0x64013f4a
6402bd79:	pop    ecx
6402bd7a:	ret    
6402bd7b:	push   0x640539b8
6402bd80:	mov    ecx,0x640539c4
6402bd85:	call   0x64013485
6402bd8a:	push   0x6402be7c
6402bd8f:	call   0x64013f4a
6402bd94:	pop    ecx
6402bd95:	ret    
6402bd96:	int3   
6402bd97:	int3   
6402bd98:	int3   
6402bd99:	int3   
6402bd9a:	int3   
6402bd9b:	int3   
6402bd9c:	int3   
6402bd9d:	int3   
6402bd9e:	int3   
6402bd9f:	int3   
6402bda0:	push   ebp
6402bda1:	mov    ebp,esp
6402bda3:	and    esp,0xfffffff8
6402bda6:	mov    eax,ds:0x640544e0
6402bdab:	mov    edx,DWORD PTR [eax]
6402bdad:	sub    esp,0xc
6402bdb0:	push   esi
6402bdb1:	push   eax
6402bdb2:	mov    ecx,0x640544dc
6402bdb7:	push   ecx
6402bdb8:	push   edx
6402bdb9:	mov    esi,ecx
6402bdbb:	push   esi
6402bdbc:	lea    eax,[esp+0x18]
6402bdc0:	push   eax
6402bdc1:	call   0x64005aa0
6402bdc6:	mov    ecx,DWORD PTR ds:0x640544e0
6402bdcc:	push   ecx
6402bdcd:	call   0x640135e4
6402bdd2:	add    esp,0x4
6402bdd5:	xor    eax,eax
6402bdd7:	mov    ds:0x640544e0,eax
6402bddc:	mov    ds:0x640544e4,eax
6402bde1:	pop    esi
6402bde2:	mov    esp,ebp
6402bde4:	pop    ebp
6402bde5:	ret    
6402bde6:	int3   
6402bde7:	int3   
6402bde8:	int3   
6402bde9:	int3   
6402bdea:	int3   
6402bdeb:	int3   
6402bdec:	int3   
6402bded:	int3   
6402bdee:	int3   
6402bdef:	int3   
6402bdf0:	push   ebp
6402bdf1:	mov    ebp,esp
6402bdf3:	and    esp,0xfffffff8
6402bdf6:	mov    eax,ds:0x640544d4
6402bdfb:	mov    edx,DWORD PTR [eax]
6402bdfd:	sub    esp,0xc
6402be00:	push   esi
6402be01:	push   eax
6402be02:	mov    ecx,0x640544d0
6402be07:	push   ecx
6402be08:	push   edx
6402be09:	mov    esi,ecx
6402be0b:	push   esi
6402be0c:	lea    eax,[esp+0x18]
6402be10:	push   eax
6402be11:	call   0x640056c0
6402be16:	mov    ecx,DWORD PTR ds:0x640544d4
6402be1c:	push   ecx
6402be1d:	call   0x640135e4
6402be22:	add    esp,0x4
6402be25:	xor    eax,eax
6402be27:	mov    ds:0x640544d4,eax
6402be2c:	mov    ds:0x640544d8,eax
6402be31:	pop    esi
6402be32:	mov    esp,ebp
6402be34:	pop    ebp
6402be35:	ret    
6402be36:	mov    ecx,0x64053858
6402be3b:	jmp    0x64001600
6402be40:	mov    ecx,0x64053900
6402be45:	jmp    0x64012f6e
6402be4a:	mov    ecx,0x6405394c
6402be4f:	jmp    0x64012f6e
6402be54:	mov    ecx,0x6405394d
6402be59:	jmp    0x64012fca
6402be5e:	mov    ecx,0x64053950
6402be63:	jmp    0x64013280
6402be68:	mov    ecx,0x6405398c
6402be6d:	jmp    0x640133c1
6402be72:	mov    ecx,0x640539b8
6402be77:	jmp    0x640133d9
6402be7c:	mov    DWORD PTR ds:0x640539c4,0x6403ffac
6402be86:	ret    
6402be87:	mov    DWORD PTR ds:0x640539e0,0x6402c2ac
6402be91:	mov    ecx,0x640539e0
6402be96:	jmp    0x640136b8
